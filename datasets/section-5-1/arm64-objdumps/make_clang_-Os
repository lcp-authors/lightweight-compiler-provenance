
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//make_clang_-Os:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000406710 <.init>:
  406710:	stp	x29, x30, [sp, #-16]!
  406714:	mov	x29, sp
  406718:	bl	406fb0 <_start@@Base+0x50>
  40671c:	ldp	x29, x30, [sp], #16
  406720:	ret

Disassembly of section .plt:

0000000000406730 <memcpy@plt-0x20>:
  406730:	stp	x16, x30, [sp, #-16]!
  406734:	adrp	x16, 43a000 <_IO_stdin_used@@Base+0x16290>
  406738:	ldr	x17, [x16, #4088]
  40673c:	add	x16, x16, #0xff8
  406740:	br	x17
  406744:	nop
  406748:	nop
  40674c:	nop

0000000000406750 <memcpy@plt>:
  406750:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406754:	ldr	x17, [x16]
  406758:	add	x16, x16, #0x0
  40675c:	br	x17

0000000000406760 <memmove@plt>:
  406760:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406764:	ldr	x17, [x16, #8]
  406768:	add	x16, x16, #0x8
  40676c:	br	x17

0000000000406770 <_exit@plt>:
  406770:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406774:	ldr	x17, [x16, #16]
  406778:	add	x16, x16, #0x10
  40677c:	br	x17

0000000000406780 <getcwd@plt>:
  406780:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406784:	ldr	x17, [x16, #24]
  406788:	add	x16, x16, #0x18
  40678c:	br	x17

0000000000406790 <strlen@plt>:
  406790:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406794:	ldr	x17, [x16, #32]
  406798:	add	x16, x16, #0x20
  40679c:	br	x17

00000000004067a0 <fputs@plt>:
  4067a0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4067a4:	ldr	x17, [x16, #40]
  4067a8:	add	x16, x16, #0x28
  4067ac:	br	x17

00000000004067b0 <exit@plt>:
  4067b0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4067b4:	ldr	x17, [x16, #48]
  4067b8:	add	x16, x16, #0x30
  4067bc:	br	x17

00000000004067c0 <dup@plt>:
  4067c0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4067c4:	ldr	x17, [x16, #56]
  4067c8:	add	x16, x16, #0x38
  4067cc:	br	x17

00000000004067d0 <perror@plt>:
  4067d0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4067d4:	ldr	x17, [x16, #64]
  4067d8:	add	x16, x16, #0x40
  4067dc:	br	x17

00000000004067e0 <tmpfile@plt>:
  4067e0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4067e4:	ldr	x17, [x16, #72]
  4067e8:	add	x16, x16, #0x48
  4067ec:	br	x17

00000000004067f0 <sigprocmask@plt>:
  4067f0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4067f4:	ldr	x17, [x16, #80]
  4067f8:	add	x16, x16, #0x50
  4067fc:	br	x17

0000000000406800 <remove@plt>:
  406800:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406804:	ldr	x17, [x16, #88]
  406808:	add	x16, x16, #0x58
  40680c:	br	x17

0000000000406810 <ttyname@plt>:
  406810:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406814:	ldr	x17, [x16, #96]
  406818:	add	x16, x16, #0x60
  40681c:	br	x17

0000000000406820 <readlink@plt>:
  406820:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406824:	ldr	x17, [x16, #104]
  406828:	add	x16, x16, #0x68
  40682c:	br	x17

0000000000406830 <sprintf@plt>:
  406830:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406834:	ldr	x17, [x16, #112]
  406838:	add	x16, x16, #0x70
  40683c:	br	x17

0000000000406840 <putc@plt>:
  406840:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406844:	ldr	x17, [x16, #120]
  406848:	add	x16, x16, #0x78
  40684c:	br	x17

0000000000406850 <pipe@plt>:
  406850:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406854:	ldr	x17, [x16, #128]
  406858:	add	x16, x16, #0x80
  40685c:	br	x17

0000000000406860 <opendir@plt>:
  406860:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406864:	ldr	x17, [x16, #136]
  406868:	add	x16, x16, #0x88
  40686c:	br	x17

0000000000406870 <getloadavg@plt>:
  406870:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406874:	ldr	x17, [x16, #144]
  406878:	add	x16, x16, #0x90
  40687c:	br	x17

0000000000406880 <__cxa_atexit@plt>:
  406880:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406884:	ldr	x17, [x16, #152]
  406888:	add	x16, x16, #0x98
  40688c:	br	x17

0000000000406890 <clock_gettime@plt>:
  406890:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406894:	ldr	x17, [x16, #160]
  406898:	add	x16, x16, #0xa0
  40689c:	br	x17

00000000004068a0 <qsort@plt>:
  4068a0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4068a4:	ldr	x17, [x16, #168]
  4068a8:	add	x16, x16, #0xa8
  4068ac:	br	x17

00000000004068b0 <dlclose@plt>:
  4068b0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4068b4:	ldr	x17, [x16, #176]
  4068b8:	add	x16, x16, #0xb0
  4068bc:	br	x17

00000000004068c0 <ctime@plt>:
  4068c0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4068c4:	ldr	x17, [x16, #184]
  4068c8:	add	x16, x16, #0xb8
  4068cc:	br	x17

00000000004068d0 <kill@plt>:
  4068d0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4068d4:	ldr	x17, [x16, #192]
  4068d8:	add	x16, x16, #0xc0
  4068dc:	br	x17

00000000004068e0 <setvbuf@plt>:
  4068e0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4068e4:	ldr	x17, [x16, #200]
  4068e8:	add	x16, x16, #0xc8
  4068ec:	br	x17

00000000004068f0 <lseek@plt>:
  4068f0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4068f4:	ldr	x17, [x16, #208]
  4068f8:	add	x16, x16, #0xd0
  4068fc:	br	x17

0000000000406900 <eaccess@plt>:
  406900:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406904:	ldr	x17, [x16, #216]
  406908:	add	x16, x16, #0xd8
  40690c:	br	x17

0000000000406910 <dlopen@plt>:
  406910:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406914:	ldr	x17, [x16, #224]
  406918:	add	x16, x16, #0xe0
  40691c:	br	x17

0000000000406920 <__ctype_tolower_loc@plt>:
  406920:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406924:	ldr	x17, [x16, #232]
  406928:	add	x16, x16, #0xe8
  40692c:	br	x17

0000000000406930 <stpcpy@plt>:
  406930:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406934:	ldr	x17, [x16, #240]
  406938:	add	x16, x16, #0xf0
  40693c:	br	x17

0000000000406940 <fileno@plt>:
  406940:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406944:	ldr	x17, [x16, #248]
  406948:	add	x16, x16, #0xf8
  40694c:	br	x17

0000000000406950 <localtime@plt>:
  406950:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406954:	ldr	x17, [x16, #256]
  406958:	add	x16, x16, #0x100
  40695c:	br	x17

0000000000406960 <posix_spawn_file_actions_adddup2@plt>:
  406960:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406964:	ldr	x17, [x16, #264]
  406968:	add	x16, x16, #0x108
  40696c:	br	x17

0000000000406970 <signal@plt>:
  406970:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406974:	ldr	x17, [x16, #272]
  406978:	add	x16, x16, #0x110
  40697c:	br	x17

0000000000406980 <fclose@plt>:
  406980:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406984:	ldr	x17, [x16, #280]
  406988:	add	x16, x16, #0x118
  40698c:	br	x17

0000000000406990 <atoi@plt>:
  406990:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406994:	ldr	x17, [x16, #288]
  406998:	add	x16, x16, #0x120
  40699c:	br	x17

00000000004069a0 <getpid@plt>:
  4069a0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4069a4:	ldr	x17, [x16, #296]
  4069a8:	add	x16, x16, #0x128
  4069ac:	br	x17

00000000004069b0 <fopen@plt>:
  4069b0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4069b4:	ldr	x17, [x16, #304]
  4069b8:	add	x16, x16, #0x130
  4069bc:	br	x17

00000000004069c0 <time@plt>:
  4069c0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4069c4:	ldr	x17, [x16, #312]
  4069c8:	add	x16, x16, #0x138
  4069cc:	br	x17

00000000004069d0 <malloc@plt>:
  4069d0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4069d4:	ldr	x17, [x16, #320]
  4069d8:	add	x16, x16, #0x140
  4069dc:	br	x17

00000000004069e0 <dlerror@plt>:
  4069e0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4069e4:	ldr	x17, [x16, #328]
  4069e8:	add	x16, x16, #0x148
  4069ec:	br	x17

00000000004069f0 <dlsym@plt>:
  4069f0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  4069f4:	ldr	x17, [x16, #336]
  4069f8:	add	x16, x16, #0x150
  4069fc:	br	x17

0000000000406a00 <open@plt>:
  406a00:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a04:	ldr	x17, [x16, #344]
  406a08:	add	x16, x16, #0x158
  406a0c:	br	x17

0000000000406a10 <sigemptyset@plt>:
  406a10:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a14:	ldr	x17, [x16, #352]
  406a18:	add	x16, x16, #0x160
  406a1c:	br	x17

0000000000406a20 <posix_spawnattr_destroy@plt>:
  406a20:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a24:	ldr	x17, [x16, #360]
  406a28:	add	x16, x16, #0x168
  406a2c:	br	x17

0000000000406a30 <strncmp@plt>:
  406a30:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a34:	ldr	x17, [x16, #368]
  406a38:	add	x16, x16, #0x170
  406a3c:	br	x17

0000000000406a40 <bindtextdomain@plt>:
  406a40:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a44:	ldr	x17, [x16, #376]
  406a48:	add	x16, x16, #0x178
  406a4c:	br	x17

0000000000406a50 <__libc_start_main@plt>:
  406a50:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a54:	ldr	x17, [x16, #384]
  406a58:	add	x16, x16, #0x180
  406a5c:	br	x17

0000000000406a60 <strcat@plt>:
  406a60:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a64:	ldr	x17, [x16, #392]
  406a68:	add	x16, x16, #0x188
  406a6c:	br	x17

0000000000406a70 <memset@plt>:
  406a70:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a74:	ldr	x17, [x16, #400]
  406a78:	add	x16, x16, #0x190
  406a7c:	br	x17

0000000000406a80 <fdopen@plt>:
  406a80:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a84:	ldr	x17, [x16, #408]
  406a88:	add	x16, x16, #0x198
  406a8c:	br	x17

0000000000406a90 <strpbrk@plt>:
  406a90:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406a94:	ldr	x17, [x16, #416]
  406a98:	add	x16, x16, #0x1a0
  406a9c:	br	x17

0000000000406aa0 <gettimeofday@plt>:
  406aa0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406aa4:	ldr	x17, [x16, #424]
  406aa8:	add	x16, x16, #0x1a8
  406aac:	br	x17

0000000000406ab0 <getpwnam@plt>:
  406ab0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ab4:	ldr	x17, [x16, #432]
  406ab8:	add	x16, x16, #0x1b0
  406abc:	br	x17

0000000000406ac0 <atof@plt>:
  406ac0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ac4:	ldr	x17, [x16, #440]
  406ac8:	add	x16, x16, #0x1b8
  406acc:	br	x17

0000000000406ad0 <pselect@plt>:
  406ad0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ad4:	ldr	x17, [x16, #448]
  406ad8:	add	x16, x16, #0x1c0
  406adc:	br	x17

0000000000406ae0 <calloc@plt>:
  406ae0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ae4:	ldr	x17, [x16, #456]
  406ae8:	add	x16, x16, #0x1c8
  406aec:	br	x17

0000000000406af0 <posix_spawn_file_actions_destroy@plt>:
  406af0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406af4:	ldr	x17, [x16, #464]
  406af8:	add	x16, x16, #0x1d0
  406afc:	br	x17

0000000000406b00 <readdir@plt>:
  406b00:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b04:	ldr	x17, [x16, #472]
  406b08:	add	x16, x16, #0x1d8
  406b0c:	br	x17

0000000000406b10 <realloc@plt>:
  406b10:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b14:	ldr	x17, [x16, #480]
  406b18:	add	x16, x16, #0x1e0
  406b1c:	br	x17

0000000000406b20 <putenv@plt>:
  406b20:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b24:	ldr	x17, [x16, #488]
  406b28:	add	x16, x16, #0x1e8
  406b2c:	br	x17

0000000000406b30 <strdup@plt>:
  406b30:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b34:	ldr	x17, [x16, #496]
  406b38:	add	x16, x16, #0x1f0
  406b3c:	br	x17

0000000000406b40 <closedir@plt>:
  406b40:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b44:	ldr	x17, [x16, #504]
  406b48:	add	x16, x16, #0x1f8
  406b4c:	br	x17

0000000000406b50 <strerror@plt>:
  406b50:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b54:	ldr	x17, [x16, #512]
  406b58:	add	x16, x16, #0x200
  406b5c:	br	x17

0000000000406b60 <close@plt>:
  406b60:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b64:	ldr	x17, [x16, #520]
  406b68:	add	x16, x16, #0x208
  406b6c:	br	x17

0000000000406b70 <sigaction@plt>:
  406b70:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b74:	ldr	x17, [x16, #528]
  406b78:	add	x16, x16, #0x210
  406b7c:	br	x17

0000000000406b80 <strrchr@plt>:
  406b80:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b84:	ldr	x17, [x16, #536]
  406b88:	add	x16, x16, #0x218
  406b8c:	br	x17

0000000000406b90 <atol@plt>:
  406b90:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406b94:	ldr	x17, [x16, #544]
  406b98:	add	x16, x16, #0x220
  406b9c:	br	x17

0000000000406ba0 <__gmon_start__@plt>:
  406ba0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ba4:	ldr	x17, [x16, #552]
  406ba8:	add	x16, x16, #0x228
  406bac:	br	x17

0000000000406bb0 <write@plt>:
  406bb0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406bb4:	ldr	x17, [x16, #560]
  406bb8:	add	x16, x16, #0x230
  406bbc:	br	x17

0000000000406bc0 <posix_spawnattr_setflags@plt>:
  406bc0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406bc4:	ldr	x17, [x16, #568]
  406bc8:	add	x16, x16, #0x238
  406bcc:	br	x17

0000000000406bd0 <abort@plt>:
  406bd0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406bd4:	ldr	x17, [x16, #576]
  406bd8:	add	x16, x16, #0x240
  406bdc:	br	x17

0000000000406be0 <posix_spawnattr_setsigmask@plt>:
  406be0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406be4:	ldr	x17, [x16, #584]
  406be8:	add	x16, x16, #0x248
  406bec:	br	x17

0000000000406bf0 <feof@plt>:
  406bf0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406bf4:	ldr	x17, [x16, #592]
  406bf8:	add	x16, x16, #0x250
  406bfc:	br	x17

0000000000406c00 <puts@plt>:
  406c00:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c04:	ldr	x17, [x16, #600]
  406c08:	add	x16, x16, #0x258
  406c0c:	br	x17

0000000000406c10 <posix_spawn_file_actions_init@plt>:
  406c10:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c14:	ldr	x17, [x16, #608]
  406c18:	add	x16, x16, #0x260
  406c1c:	br	x17

0000000000406c20 <fread_unlocked@plt>:
  406c20:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c24:	ldr	x17, [x16, #616]
  406c28:	add	x16, x16, #0x268
  406c2c:	br	x17

0000000000406c30 <memcmp@plt>:
  406c30:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c34:	ldr	x17, [x16, #624]
  406c38:	add	x16, x16, #0x270
  406c3c:	br	x17

0000000000406c40 <textdomain@plt>:
  406c40:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c44:	ldr	x17, [x16, #632]
  406c48:	add	x16, x16, #0x278
  406c4c:	br	x17

0000000000406c50 <getopt_long@plt>:
  406c50:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c54:	ldr	x17, [x16, #640]
  406c58:	add	x16, x16, #0x280
  406c5c:	br	x17

0000000000406c60 <execvp@plt>:
  406c60:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c64:	ldr	x17, [x16, #648]
  406c68:	add	x16, x16, #0x288
  406c6c:	br	x17

0000000000406c70 <strcmp@plt>:
  406c70:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c74:	ldr	x17, [x16, #656]
  406c78:	add	x16, x16, #0x290
  406c7c:	br	x17

0000000000406c80 <__ctype_b_loc@plt>:
  406c80:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c84:	ldr	x17, [x16, #664]
  406c88:	add	x16, x16, #0x298
  406c8c:	br	x17

0000000000406c90 <fread@plt>:
  406c90:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406c94:	ldr	x17, [x16, #672]
  406c98:	add	x16, x16, #0x2a0
  406c9c:	br	x17

0000000000406ca0 <chdir@plt>:
  406ca0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ca4:	ldr	x17, [x16, #680]
  406ca8:	add	x16, x16, #0x2a8
  406cac:	br	x17

0000000000406cb0 <free@plt>:
  406cb0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406cb4:	ldr	x17, [x16, #688]
  406cb8:	add	x16, x16, #0x2b0
  406cbc:	br	x17

0000000000406cc0 <strndup@plt>:
  406cc0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406cc4:	ldr	x17, [x16, #696]
  406cc8:	add	x16, x16, #0x2b8
  406ccc:	br	x17

0000000000406cd0 <strchr@plt>:
  406cd0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406cd4:	ldr	x17, [x16, #704]
  406cd8:	add	x16, x16, #0x2c0
  406cdc:	br	x17

0000000000406ce0 <globfree@plt>:
  406ce0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ce4:	ldr	x17, [x16, #712]
  406ce8:	add	x16, x16, #0x2c8
  406cec:	br	x17

0000000000406cf0 <memrchr@plt>:
  406cf0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406cf4:	ldr	x17, [x16, #720]
  406cf8:	add	x16, x16, #0x2d0
  406cfc:	br	x17

0000000000406d00 <fwrite@plt>:
  406d00:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d04:	ldr	x17, [x16, #728]
  406d08:	add	x16, x16, #0x2d8
  406d0c:	br	x17

0000000000406d10 <fnmatch@plt>:
  406d10:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d14:	ldr	x17, [x16, #736]
  406d18:	add	x16, x16, #0x2e0
  406d1c:	br	x17

0000000000406d20 <fcntl@plt>:
  406d20:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d24:	ldr	x17, [x16, #744]
  406d28:	add	x16, x16, #0x2e8
  406d2c:	br	x17

0000000000406d30 <wait@plt>:
  406d30:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d34:	ldr	x17, [x16, #752]
  406d38:	add	x16, x16, #0x2f0
  406d3c:	br	x17

0000000000406d40 <fflush@plt>:
  406d40:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d44:	ldr	x17, [x16, #760]
  406d48:	add	x16, x16, #0x2f8
  406d4c:	br	x17

0000000000406d50 <strcpy@plt>:
  406d50:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d54:	ldr	x17, [x16, #768]
  406d58:	add	x16, x16, #0x300
  406d5c:	br	x17

0000000000406d60 <posix_spawn@plt>:
  406d60:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d64:	ldr	x17, [x16, #776]
  406d68:	add	x16, x16, #0x308
  406d6c:	br	x17

0000000000406d70 <vsprintf@plt>:
  406d70:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d74:	ldr	x17, [x16, #784]
  406d78:	add	x16, x16, #0x310
  406d7c:	br	x17

0000000000406d80 <__lxstat@plt>:
  406d80:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d84:	ldr	x17, [x16, #792]
  406d88:	add	x16, x16, #0x318
  406d8c:	br	x17

0000000000406d90 <posix_spawnattr_init@plt>:
  406d90:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406d94:	ldr	x17, [x16, #800]
  406d98:	add	x16, x16, #0x320
  406d9c:	br	x17

0000000000406da0 <read@plt>:
  406da0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406da4:	ldr	x17, [x16, #808]
  406da8:	add	x16, x16, #0x328
  406dac:	br	x17

0000000000406db0 <memchr@plt>:
  406db0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406db4:	ldr	x17, [x16, #816]
  406db8:	add	x16, x16, #0x330
  406dbc:	br	x17

0000000000406dc0 <mkstemp@plt>:
  406dc0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406dc4:	ldr	x17, [x16, #824]
  406dc8:	add	x16, x16, #0x338
  406dcc:	br	x17

0000000000406dd0 <isatty@plt>:
  406dd0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406dd4:	ldr	x17, [x16, #832]
  406dd8:	add	x16, x16, #0x340
  406ddc:	br	x17

0000000000406de0 <fputc_unlocked@plt>:
  406de0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406de4:	ldr	x17, [x16, #840]
  406de8:	add	x16, x16, #0x348
  406dec:	br	x17

0000000000406df0 <__fxstat@plt>:
  406df0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406df4:	ldr	x17, [x16, #848]
  406df8:	add	x16, x16, #0x350
  406dfc:	br	x17

0000000000406e00 <strstr@plt>:
  406e00:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e04:	ldr	x17, [x16, #856]
  406e08:	add	x16, x16, #0x358
  406e0c:	br	x17

0000000000406e10 <dcgettext@plt>:
  406e10:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e14:	ldr	x17, [x16, #864]
  406e18:	add	x16, x16, #0x360
  406e1c:	br	x17

0000000000406e20 <realpath@plt>:
  406e20:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e24:	ldr	x17, [x16, #872]
  406e28:	add	x16, x16, #0x368
  406e2c:	br	x17

0000000000406e30 <__isoc99_sscanf@plt>:
  406e30:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e34:	ldr	x17, [x16, #880]
  406e38:	add	x16, x16, #0x370
  406e3c:	br	x17

0000000000406e40 <glob@plt>:
  406e40:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e44:	ldr	x17, [x16, #888]
  406e48:	add	x16, x16, #0x378
  406e4c:	br	x17

0000000000406e50 <ftruncate@plt>:
  406e50:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e54:	ldr	x17, [x16, #896]
  406e58:	add	x16, x16, #0x380
  406e5c:	br	x17

0000000000406e60 <strncpy@plt>:
  406e60:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e64:	ldr	x17, [x16, #904]
  406e68:	add	x16, x16, #0x388
  406e6c:	br	x17

0000000000406e70 <strsignal@plt>:
  406e70:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e74:	ldr	x17, [x16, #912]
  406e78:	add	x16, x16, #0x390
  406e7c:	br	x17

0000000000406e80 <sigaddset@plt>:
  406e80:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e84:	ldr	x17, [x16, #920]
  406e88:	add	x16, x16, #0x398
  406e8c:	br	x17

0000000000406e90 <umask@plt>:
  406e90:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406e94:	ldr	x17, [x16, #928]
  406e98:	add	x16, x16, #0x3a0
  406e9c:	br	x17

0000000000406ea0 <printf@plt>:
  406ea0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ea4:	ldr	x17, [x16, #936]
  406ea8:	add	x16, x16, #0x3a8
  406eac:	br	x17

0000000000406eb0 <__errno_location@plt>:
  406eb0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406eb4:	ldr	x17, [x16, #944]
  406eb8:	add	x16, x16, #0x3b0
  406ebc:	br	x17

0000000000406ec0 <getenv@plt>:
  406ec0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ec4:	ldr	x17, [x16, #952]
  406ec8:	add	x16, x16, #0x3b8
  406ecc:	br	x17

0000000000406ed0 <putchar@plt>:
  406ed0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ed4:	ldr	x17, [x16, #960]
  406ed8:	add	x16, x16, #0x3c0
  406edc:	br	x17

0000000000406ee0 <__xstat@plt>:
  406ee0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ee4:	ldr	x17, [x16, #968]
  406ee8:	add	x16, x16, #0x3c8
  406eec:	br	x17

0000000000406ef0 <waitpid@plt>:
  406ef0:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406ef4:	ldr	x17, [x16, #976]
  406ef8:	add	x16, x16, #0x3d0
  406efc:	br	x17

0000000000406f00 <unlink@plt>:
  406f00:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406f04:	ldr	x17, [x16, #984]
  406f08:	add	x16, x16, #0x3d8
  406f0c:	br	x17

0000000000406f10 <getlogin@plt>:
  406f10:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406f14:	ldr	x17, [x16, #992]
  406f18:	add	x16, x16, #0x3e0
  406f1c:	br	x17

0000000000406f20 <fprintf@plt>:
  406f20:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406f24:	ldr	x17, [x16, #1000]
  406f28:	add	x16, x16, #0x3e8
  406f2c:	br	x17

0000000000406f30 <fgets@plt>:
  406f30:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406f34:	ldr	x17, [x16, #1008]
  406f38:	add	x16, x16, #0x3f0
  406f3c:	br	x17

0000000000406f40 <setlocale@plt>:
  406f40:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406f44:	ldr	x17, [x16, #1016]
  406f48:	add	x16, x16, #0x3f8
  406f4c:	br	x17

0000000000406f50 <ferror@plt>:
  406f50:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  406f54:	ldr	x17, [x16, #1024]
  406f58:	add	x16, x16, #0x400
  406f5c:	br	x17

Disassembly of section .text:

0000000000406f60 <_start@@Base>:
  406f60:	mov	x29, #0x0                   	// #0
  406f64:	mov	x30, #0x0                   	// #0
  406f68:	mov	x5, x0
  406f6c:	ldr	x1, [sp]
  406f70:	add	x2, sp, #0x8
  406f74:	mov	x6, sp
  406f78:	movz	x0, #0x0, lsl #48
  406f7c:	movk	x0, #0x0, lsl #32
  406f80:	movk	x0, #0x41, lsl #16
  406f84:	movk	x0, #0x4310
  406f88:	movz	x3, #0x0, lsl #48
  406f8c:	movk	x3, #0x0, lsl #32
  406f90:	movk	x3, #0x42, lsl #16
  406f94:	movk	x3, #0x3c98
  406f98:	movz	x4, #0x0, lsl #48
  406f9c:	movk	x4, #0x0, lsl #32
  406fa0:	movk	x4, #0x42, lsl #16
  406fa4:	movk	x4, #0x3d18
  406fa8:	bl	406a50 <__libc_start_main@plt>
  406fac:	bl	406bd0 <abort@plt>
  406fb0:	adrp	x0, 43a000 <_IO_stdin_used@@Base+0x16290>
  406fb4:	ldr	x0, [x0, #4064]
  406fb8:	cbz	x0, 406fc0 <_start@@Base+0x60>
  406fbc:	b	406ba0 <__gmon_start__@plt>
  406fc0:	ret
  406fc4:	nop
  406fc8:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  406fcc:	add	x0, x0, #0x9b8
  406fd0:	adrp	x1, 43b000 <memcpy@GLIBC_2.17>
  406fd4:	add	x1, x1, #0x9b8
  406fd8:	cmp	x1, x0
  406fdc:	b.eq	406ff4 <_start@@Base+0x94>  // b.none
  406fe0:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  406fe4:	ldr	x1, [x1, #3448]
  406fe8:	cbz	x1, 406ff4 <_start@@Base+0x94>
  406fec:	mov	x16, x1
  406ff0:	br	x16
  406ff4:	ret
  406ff8:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  406ffc:	add	x0, x0, #0x9b8
  407000:	adrp	x1, 43b000 <memcpy@GLIBC_2.17>
  407004:	add	x1, x1, #0x9b8
  407008:	sub	x1, x1, x0
  40700c:	lsr	x2, x1, #63
  407010:	add	x1, x2, x1, asr #3
  407014:	cmp	xzr, x1, asr #1
  407018:	asr	x1, x1, #1
  40701c:	b.eq	407034 <_start@@Base+0xd4>  // b.none
  407020:	adrp	x2, 423000 <fd_noinherit@@Base+0x38>
  407024:	ldr	x2, [x2, #3456]
  407028:	cbz	x2, 407034 <_start@@Base+0xd4>
  40702c:	mov	x16, x2
  407030:	br	x16
  407034:	ret
  407038:	stp	x29, x30, [sp, #-32]!
  40703c:	mov	x29, sp
  407040:	str	x19, [sp, #16]
  407044:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  407048:	ldrb	w0, [x19, #2540]
  40704c:	cbnz	w0, 40705c <_start@@Base+0xfc>
  407050:	bl	406fc8 <_start@@Base+0x68>
  407054:	mov	w0, #0x1                   	// #1
  407058:	strb	w0, [x19, #2540]
  40705c:	ldr	x19, [sp, #16]
  407060:	ldp	x29, x30, [sp], #32
  407064:	ret
  407068:	b	406ff8 <_start@@Base+0x98>

000000000040706c <ar_name@@Base>:
  40706c:	stp	x29, x30, [sp, #-32]!
  407070:	mov	w1, #0x28                  	// #40
  407074:	stp	x20, x19, [sp, #16]
  407078:	mov	x29, sp
  40707c:	mov	x19, x0
  407080:	bl	406cd0 <strchr@plt>
  407084:	mov	x20, x0
  407088:	mov	w0, wzr
  40708c:	cbz	x20, 4070dc <ar_name@@Base+0x70>
  407090:	cmp	x20, x19
  407094:	b.eq	4070dc <ar_name@@Base+0x70>  // b.none
  407098:	mov	x0, x20
  40709c:	bl	406790 <strlen@plt>
  4070a0:	sub	x9, x0, #0x1
  4070a4:	add	x8, x20, x9
  4070a8:	ldrb	w10, [x8]
  4070ac:	mov	w0, wzr
  4070b0:	cmp	w10, #0x29
  4070b4:	b.ne	4070dc <ar_name@@Base+0x70>  // b.any
  4070b8:	cmp	x9, #0x1
  4070bc:	b.eq	4070dc <ar_name@@Base+0x70>  // b.none
  4070c0:	ldrb	w9, [x20, #1]
  4070c4:	cmp	w9, #0x28
  4070c8:	b.ne	4070d8 <ar_name@@Base+0x6c>  // b.any
  4070cc:	ldurb	w8, [x8, #-1]
  4070d0:	cmp	w8, #0x29
  4070d4:	b.eq	4070e8 <ar_name@@Base+0x7c>  // b.none
  4070d8:	mov	w0, #0x1                   	// #1
  4070dc:	ldp	x20, x19, [sp, #16]
  4070e0:	ldp	x29, x30, [sp], #32
  4070e4:	ret
  4070e8:	mov	x0, x19
  4070ec:	bl	406790 <strlen@plt>
  4070f0:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  4070f4:	mov	x20, x0
  4070f8:	add	x1, x1, #0xd8d
  4070fc:	mov	w2, #0x5                   	// #5
  407100:	mov	x0, xzr
  407104:	bl	406e10 <dcgettext@plt>
  407108:	mov	x2, x0
  40710c:	mov	x0, xzr
  407110:	mov	x1, x20
  407114:	mov	x3, x19
  407118:	bl	4188bc <fatal@@Base>

000000000040711c <ar_parse_name@@Base>:
  40711c:	stp	x29, x30, [sp, #-48]!
  407120:	str	x21, [sp, #16]
  407124:	stp	x20, x19, [sp, #32]
  407128:	mov	x29, sp
  40712c:	mov	x19, x2
  407130:	mov	x20, x1
  407134:	bl	4178d4 <xstrdup@@Base>
  407138:	mov	w1, #0x28                  	// #40
  40713c:	str	x0, [x20]
  407140:	bl	406cd0 <strchr@plt>
  407144:	add	x21, x0, #0x1
  407148:	mov	x20, x0
  40714c:	strb	wzr, [x0]
  407150:	mov	x0, x21
  407154:	bl	406790 <strlen@plt>
  407158:	strb	wzr, [x20, x0]
  40715c:	str	x21, [x19]
  407160:	ldp	x20, x19, [sp, #32]
  407164:	ldr	x21, [sp, #16]
  407168:	ldp	x29, x30, [sp], #48
  40716c:	ret

0000000000407170 <ar_member_date@@Base>:
  407170:	sub	sp, sp, #0x30
  407174:	add	x1, sp, #0x8
  407178:	mov	x2, sp
  40717c:	stp	x29, x30, [sp, #16]
  407180:	stp	x20, x19, [sp, #32]
  407184:	add	x29, sp, #0x10
  407188:	bl	40711c <ar_parse_name@@Base>
  40718c:	ldr	x19, [sp, #8]
  407190:	mov	x0, x19
  407194:	bl	40a568 <lookup_file@@Base>
  407198:	cbz	x0, 4071dc <ar_member_date@@Base+0x6c>
  40719c:	mov	w1, wzr
  4071a0:	bl	41e0cc <f_mtime@@Base>
  4071a4:	ldr	x2, [sp]
  4071a8:	adrp	x1, 407000 <_start@@Base+0xa0>
  4071ac:	add	x1, x1, #0x1fc
  4071b0:	mov	x0, x19
  4071b4:	bl	407544 <ar_scan@@Base>
  4071b8:	mov	x20, x0
  4071bc:	mov	x0, x19
  4071c0:	bl	406cb0 <free@plt>
  4071c4:	cmp	x20, #0x1
  4071c8:	csinv	x0, x20, xzr, ge  // ge = tcont
  4071cc:	ldp	x20, x19, [sp, #32]
  4071d0:	ldp	x29, x30, [sp, #16]
  4071d4:	add	sp, sp, #0x30
  4071d8:	ret
  4071dc:	mov	x0, x19
  4071e0:	bl	409134 <file_exists_p@@Base>
  4071e4:	cbz	w0, 4071a4 <ar_member_date@@Base+0x34>
  4071e8:	mov	x0, x19
  4071ec:	bl	42016c <strcache_add@@Base>
  4071f0:	bl	40a5f4 <enter_file@@Base>
  4071f4:	cbnz	x0, 40719c <ar_member_date@@Base+0x2c>
  4071f8:	b	4071a4 <ar_member_date@@Base+0x34>
  4071fc:	stp	x29, x30, [sp, #-32]!
  407200:	mov	x29, sp
  407204:	ldr	x0, [x29, #48]
  407208:	str	x19, [sp, #16]
  40720c:	mov	x19, x6
  407210:	bl	407940 <ar_name_equal@@Base>
  407214:	cmp	w0, #0x0
  407218:	csel	x0, xzr, x19, eq  // eq = none
  40721c:	ldr	x19, [sp, #16]
  407220:	ldp	x29, x30, [sp], #32
  407224:	ret

0000000000407228 <ar_touch@@Base>:
  407228:	sub	sp, sp, #0x40
  40722c:	add	x1, sp, #0x8
  407230:	mov	x2, sp
  407234:	stp	x29, x30, [sp, #16]
  407238:	stp	x22, x21, [sp, #32]
  40723c:	stp	x20, x19, [sp, #48]
  407240:	add	x29, sp, #0x10
  407244:	mov	x20, x0
  407248:	bl	40711c <ar_parse_name@@Base>
  40724c:	ldr	x19, [sp, #8]
  407250:	mov	x0, x19
  407254:	bl	42016c <strcache_add@@Base>
  407258:	bl	40a5f4 <enter_file@@Base>
  40725c:	mov	w1, wzr
  407260:	bl	41e0cc <f_mtime@@Base>
  407264:	ldr	x21, [sp]
  407268:	mov	x0, x19
  40726c:	mov	x1, x21
  407270:	bl	4079a0 <ar_member_touch@@Base>
  407274:	add	w8, w0, #0x3
  407278:	cmp	w8, #0x4
  40727c:	b.hi	4072b0 <ar_touch@@Base+0x88>  // b.pmore
  407280:	adrp	x9, 423000 <fd_noinherit@@Base+0x38>
  407284:	add	x9, x9, #0xd88
  407288:	adr	x10, 40729c <ar_touch@@Base+0x74>
  40728c:	ldrb	w11, [x9, x8]
  407290:	add	x10, x10, x11, lsl #2
  407294:	mov	w22, w0
  407298:	br	x10
  40729c:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  4072a0:	add	x0, x0, #0xdfc
  4072a4:	mov	x1, x19
  4072a8:	bl	418a4c <perror_with_name@@Base>
  4072ac:	b	407378 <ar_touch@@Base+0x150>
  4072b0:	mov	x0, x20
  4072b4:	bl	406790 <strlen@plt>
  4072b8:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  4072bc:	mov	x21, x0
  4072c0:	add	x1, x1, #0xe2e
  4072c4:	mov	w2, #0x5                   	// #5
  4072c8:	mov	x0, xzr
  4072cc:	bl	406e10 <dcgettext@plt>
  4072d0:	mov	x2, x0
  4072d4:	mov	x0, xzr
  4072d8:	mov	x1, x21
  4072dc:	mov	x3, x20
  4072e0:	b	40732c <ar_touch@@Base+0x104>
  4072e4:	mov	x0, x19
  4072e8:	bl	406790 <strlen@plt>
  4072ec:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  4072f0:	mov	x20, x0
  4072f4:	add	x1, x1, #0xdd9
  4072f8:	b	407310 <ar_touch@@Base+0xe8>
  4072fc:	mov	x0, x19
  407300:	bl	406790 <strlen@plt>
  407304:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  407308:	mov	x20, x0
  40730c:	add	x1, x1, #0xdb6
  407310:	mov	w2, #0x5                   	// #5
  407314:	mov	x0, xzr
  407318:	bl	406e10 <dcgettext@plt>
  40731c:	mov	x2, x0
  407320:	mov	x0, xzr
  407324:	mov	x1, x20
  407328:	mov	x3, x19
  40732c:	bl	418744 <error@@Base>
  407330:	b	407378 <ar_touch@@Base+0x150>
  407334:	mov	x0, x21
  407338:	bl	406790 <strlen@plt>
  40733c:	mov	x20, x0
  407340:	mov	x0, x19
  407344:	bl	406790 <strlen@plt>
  407348:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  40734c:	add	x20, x0, x20
  407350:	add	x1, x1, #0xe04
  407354:	mov	w2, #0x5                   	// #5
  407358:	mov	x0, xzr
  40735c:	bl	406e10 <dcgettext@plt>
  407360:	mov	x2, x0
  407364:	mov	x0, xzr
  407368:	mov	x1, x20
  40736c:	mov	x3, x21
  407370:	mov	x4, x19
  407374:	bl	418744 <error@@Base>
  407378:	mov	w22, #0x1                   	// #1
  40737c:	mov	x0, x19
  407380:	bl	406cb0 <free@plt>
  407384:	mov	w0, w22
  407388:	ldp	x20, x19, [sp, #48]
  40738c:	ldp	x22, x21, [sp, #32]
  407390:	ldp	x29, x30, [sp, #16]
  407394:	add	sp, sp, #0x40
  407398:	ret

000000000040739c <ar_glob@@Base>:
  40739c:	stp	x29, x30, [sp, #-32]!
  4073a0:	str	x19, [sp, #16]
  4073a4:	mov	x29, sp
  4073a8:	sub	sp, sp, #0x30
  4073ac:	mov	w9, wzr
  4073b0:	mov	x8, x1
  4073b4:	ldrb	w10, [x8]
  4073b8:	cmp	w10, #0x5a
  4073bc:	b.le	4073e0 <ar_glob@@Base+0x44>
  4073c0:	cmp	w10, #0x5b
  4073c4:	b.eq	4073f8 <ar_glob@@Base+0x5c>  // b.none
  4073c8:	cmp	w10, #0x5d
  4073cc:	b.eq	407400 <ar_glob@@Base+0x64>  // b.none
  4073d0:	cmp	w10, #0x5c
  4073d4:	b.ne	407404 <ar_glob@@Base+0x68>  // b.any
  4073d8:	add	x8, x8, #0x1
  4073dc:	b	407404 <ar_glob@@Base+0x68>
  4073e0:	cbz	w10, 4074a8 <ar_glob@@Base+0x10c>
  4073e4:	cmp	w10, #0x2a
  4073e8:	b.eq	40740c <ar_glob@@Base+0x70>  // b.none
  4073ec:	cmp	w10, #0x3f
  4073f0:	b.ne	407404 <ar_glob@@Base+0x68>  // b.any
  4073f4:	b	40740c <ar_glob@@Base+0x70>
  4073f8:	mov	w9, #0x1                   	// #1
  4073fc:	b	407404 <ar_glob@@Base+0x68>
  407400:	cbnz	w9, 40740c <ar_glob@@Base+0x70>
  407404:	add	x8, x8, #0x1
  407408:	b	4073b4 <ar_glob@@Base+0x18>
  40740c:	stp	x0, x1, [x29, #-40]
  407410:	adrp	x1, 407000 <_start@@Base+0xa0>
  407414:	stp	x2, xzr, [x29, #-24]
  407418:	add	x1, x1, #0x4bc
  40741c:	sub	x2, x29, #0x28
  407420:	stur	wzr, [x29, #-8]
  407424:	bl	407544 <ar_scan@@Base>
  407428:	ldur	x8, [x29, #-16]
  40742c:	cbz	x8, 4074a8 <ar_glob@@Base+0x10c>
  407430:	ldur	w9, [x29, #-8]
  407434:	mov	x10, sp
  407438:	lsl	x9, x9, #3
  40743c:	add	x9, x9, #0xf
  407440:	and	x9, x9, #0xffffffff0
  407444:	sub	x19, x10, x9
  407448:	mov	sp, x19
  40744c:	mov	w9, wzr
  407450:	ldr	x10, [x8, #8]
  407454:	str	x10, [x19, w9, uxtw #3]
  407458:	ldr	x8, [x8]
  40745c:	add	w10, w9, #0x1
  407460:	mov	w9, w10
  407464:	cbnz	x8, 407450 <ar_glob@@Base+0xb4>
  407468:	adrp	x3, 417000 <die@@Base+0x708>
  40746c:	mov	w1, w10
  407470:	add	x3, x3, #0x4fc
  407474:	mov	w2, #0x8                   	// #8
  407478:	mov	x0, x19
  40747c:	bl	4068a0 <qsort@plt>
  407480:	ldur	x0, [x29, #-16]
  407484:	cbz	x0, 4074ac <ar_glob@@Base+0x110>
  407488:	mov	w9, wzr
  40748c:	mov	x8, x0
  407490:	ldr	x10, [x19, w9, uxtw #3]
  407494:	add	w9, w9, #0x1
  407498:	str	x10, [x8, #8]
  40749c:	ldr	x8, [x8]
  4074a0:	cbnz	x8, 407490 <ar_glob@@Base+0xf4>
  4074a4:	b	4074ac <ar_glob@@Base+0x110>
  4074a8:	mov	x0, xzr
  4074ac:	mov	sp, x29
  4074b0:	ldr	x19, [sp, #16]
  4074b4:	ldp	x29, x30, [sp], #32
  4074b8:	ret
  4074bc:	stp	x29, x30, [sp, #-48]!
  4074c0:	mov	x29, sp
  4074c4:	str	x21, [sp, #16]
  4074c8:	ldr	x21, [x29, #64]
  4074cc:	stp	x20, x19, [sp, #32]
  4074d0:	mov	w2, #0x5                   	// #5
  4074d4:	mov	x19, x1
  4074d8:	ldr	x0, [x21, #8]
  4074dc:	bl	406d10 <fnmatch@plt>
  4074e0:	cbnz	w0, 407530 <ar_glob@@Base+0x194>
  4074e4:	ldr	x0, [x21, #16]
  4074e8:	bl	4178ac <xcalloc@@Base>
  4074ec:	ldr	x1, [x21]
  4074f0:	adrp	x2, 423000 <fd_noinherit@@Base+0x38>
  4074f4:	adrp	x4, 429000 <_IO_stdin_used@@Base+0x5290>
  4074f8:	mov	x20, x0
  4074fc:	add	x2, x2, #0xe62
  407500:	add	x4, x4, #0xa97
  407504:	mov	w0, #0x4                   	// #4
  407508:	mov	x3, x19
  40750c:	bl	4176dc <concat@@Base>
  407510:	bl	42016c <strcache_add@@Base>
  407514:	str	x0, [x20, #8]
  407518:	ldr	x8, [x21, #24]
  40751c:	str	x8, [x20]
  407520:	ldr	w8, [x21, #32]
  407524:	str	x20, [x21, #24]
  407528:	add	w8, w8, #0x1
  40752c:	str	w8, [x21, #32]
  407530:	ldp	x20, x19, [sp, #32]
  407534:	ldr	x21, [sp, #16]
  407538:	mov	x0, xzr
  40753c:	ldp	x29, x30, [sp], #48
  407540:	ret

0000000000407544 <ar_scan@@Base>:
  407544:	stp	x29, x30, [sp, #-96]!
  407548:	stp	x28, x27, [sp, #16]
  40754c:	stp	x26, x25, [sp, #32]
  407550:	stp	x24, x23, [sp, #48]
  407554:	stp	x22, x21, [sp, #64]
  407558:	stp	x20, x19, [sp, #80]
  40755c:	mov	x29, sp
  407560:	sub	sp, sp, #0xc0
  407564:	mov	x20, x2
  407568:	mov	x21, x1
  40756c:	mov	w1, wzr
  407570:	mov	w2, wzr
  407574:	bl	406a00 <open@plt>
  407578:	tbnz	w0, #31, 4075c0 <ar_scan@@Base+0x7c>
  40757c:	sub	x1, x29, #0x48
  407580:	mov	w2, #0x8                   	// #8
  407584:	mov	w19, w0
  407588:	bl	417a58 <readbuf@@Base>
  40758c:	cmp	w0, #0x8
  407590:	b.ne	4075b0 <ar_scan@@Base+0x6c>  // b.any
  407594:	ldur	x8, [x29, #-72]
  407598:	mov	x9, #0x3c21                	// #15393
  40759c:	movk	x9, #0x7261, lsl #16
  4075a0:	movk	x9, #0x6863, lsl #32
  4075a4:	movk	x9, #0xa3e, lsl #48
  4075a8:	cmp	x8, x9
  4075ac:	b.eq	4075e8 <ar_scan@@Base+0xa4>  // b.none
  4075b0:	mov	w0, w19
  4075b4:	bl	406b60 <close@plt>
  4075b8:	mov	x23, #0xfffffffffffffffe    	// #-2
  4075bc:	b	4075c4 <ar_scan@@Base+0x80>
  4075c0:	mov	x23, #0xffffffffffffffff    	// #-1
  4075c4:	mov	x0, x23
  4075c8:	mov	sp, x29
  4075cc:	ldp	x20, x19, [sp, #80]
  4075d0:	ldp	x22, x21, [sp, #64]
  4075d4:	ldp	x24, x23, [sp, #48]
  4075d8:	ldp	x26, x25, [sp, #32]
  4075dc:	ldp	x28, x27, [sp, #16]
  4075e0:	ldp	x29, x30, [sp], #96
  4075e4:	ret
  4075e8:	sub	x22, x29, #0x60
  4075ec:	add	x9, x22, #0x10
  4075f0:	stur	x9, [x29, #-112]
  4075f4:	orr	x9, x22, #0x1
  4075f8:	sub	x8, x29, #0x48
  4075fc:	stur	x9, [x29, #-192]
  407600:	orr	x9, x22, #0x3
  407604:	stur	x9, [x29, #-184]
  407608:	add	x9, x8, #0x28
  40760c:	stur	x9, [x29, #-120]
  407610:	add	x9, x8, #0x30
  407614:	stur	x9, [x29, #-128]
  407618:	add	x9, x8, #0x10
  40761c:	mov	x24, xzr
  407620:	mov	w25, #0x8                   	// #8
  407624:	stur	x9, [x29, #-136]
  407628:	add	x9, x8, #0x1c
  40762c:	add	x8, x8, #0x22
  407630:	stur	x20, [x29, #-160]
  407634:	stur	wzr, [x29, #-164]
  407638:	stp	x8, x9, [x29, #-152]
  40763c:	mov	w0, w19
  407640:	mov	x1, x25
  407644:	mov	w2, wzr
  407648:	bl	4068f0 <lseek@plt>
  40764c:	cmn	x0, #0x1
  407650:	b.ne	407668 <ar_scan@@Base+0x124>  // b.any
  407654:	bl	406eb0 <__errno_location@plt>
  407658:	ldr	w8, [x0]
  40765c:	cmp	w8, #0x4
  407660:	b.eq	40763c <ar_scan@@Base+0xf8>  // b.none
  407664:	b	4075b0 <ar_scan@@Base+0x6c>
  407668:	tbnz	x0, #63, 4075b0 <ar_scan@@Base+0x6c>
  40766c:	sub	x1, x29, #0x48
  407670:	mov	w2, #0x3c                  	// #60
  407674:	mov	w0, w19
  407678:	bl	417a58 <readbuf@@Base>
  40767c:	cbz	w0, 407920 <ar_scan@@Base+0x3dc>
  407680:	cmp	w0, #0x3c
  407684:	b.ne	4075b0 <ar_scan@@Base+0x6c>  // b.any
  407688:	ldurh	w8, [x29, #-14]
  40768c:	cmp	w8, #0xa60
  407690:	b.ne	4075b0 <ar_scan@@Base+0x6c>  // b.any
  407694:	ldur	q0, [x29, #-72]
  407698:	ldur	x8, [x29, #-112]
  40769c:	stur	q0, [x29, #-96]
  4076a0:	cmp	x8, x22
  4076a4:	strb	wzr, [x8]
  4076a8:	b.ls	4076bc <ar_scan@@Base+0x178>  // b.plast
  4076ac:	ldrb	w9, [x8, #-1]!
  4076b0:	cmp	w9, #0x20
  4076b4:	b.eq	4076a0 <ar_scan@@Base+0x15c>  // b.none
  4076b8:	b	4076c0 <ar_scan@@Base+0x17c>
  4076bc:	mov	w9, wzr
  4076c0:	ldurh	w10, [x29, #-96]
  4076c4:	ldurb	w11, [x29, #-94]
  4076c8:	mov	w12, #0x2f2f                	// #12079
  4076cc:	eor	w10, w10, w12
  4076d0:	orr	w10, w10, w11
  4076d4:	tst	w10, #0xffff
  4076d8:	b.eq	40771c <ar_scan@@Base+0x1d8>  // b.none
  4076dc:	ldur	x10, [x29, #-96]
  4076e0:	mov	x12, #0x5241                	// #21057
  4076e4:	movk	x12, #0x4946, lsl #16
  4076e8:	movk	x12, #0x454c, lsl #32
  4076ec:	movk	x12, #0x414e, lsl #48
  4076f0:	ldur	x11, [x29, #-91]
  4076f4:	eor	x10, x10, x12
  4076f8:	mov	x12, #0x4e45                	// #20037
  4076fc:	movk	x12, #0x4d41, lsl #16
  407700:	movk	x12, #0x5345, lsl #32
  407704:	movk	x12, #0x2f, lsl #48
  407708:	eor	x11, x11, x12
  40770c:	orr	x10, x10, x11
  407710:	cmp	x10, #0x0
  407714:	cset	w20, eq  // eq = none
  407718:	b	407720 <ar_scan@@Base+0x1dc>
  40771c:	mov	w20, #0x1                   	// #1
  407720:	cmp	w9, #0x2f
  407724:	stur	x21, [x29, #-176]
  407728:	b.ne	407730 <ar_scan@@Base+0x1ec>  // b.any
  40772c:	strb	wzr, [x8]
  407730:	ldurb	w8, [x29, #-96]
  407734:	tbnz	w20, #0, 407780 <ar_scan@@Base+0x23c>
  407738:	cmp	w8, #0x2f
  40773c:	b.eq	407748 <ar_scan@@Base+0x204>  // b.none
  407740:	cmp	w8, #0x20
  407744:	b.ne	407780 <ar_scan@@Base+0x23c>  // b.any
  407748:	cbz	x24, 407780 <ar_scan@@Base+0x23c>
  40774c:	ldur	x0, [x29, #-192]
  407750:	bl	406990 <atoi@plt>
  407754:	tbnz	w0, #31, 4075b0 <ar_scan@@Base+0x6c>
  407758:	ldur	w8, [x29, #-164]
  40775c:	cmp	w0, w8
  407760:	b.ge	4075b0 <ar_scan@@Base+0x6c>  // b.tcont
  407764:	add	x28, x24, w0, uxtw
  407768:	mov	x0, x28
  40776c:	bl	406790 <strlen@plt>
  407770:	cmp	w0, #0x1
  407774:	b.lt	4075b0 <ar_scan@@Base+0x6c>  // b.tstop
  407778:	mov	w21, wzr
  40777c:	b	4077fc <ar_scan@@Base+0x2b8>
  407780:	sub	x28, x29, #0x60
  407784:	cmp	w8, #0x23
  407788:	mov	w21, #0x1                   	// #1
  40778c:	b.ne	4077fc <ar_scan@@Base+0x2b8>  // b.any
  407790:	ldurb	w8, [x29, #-95]
  407794:	cmp	w8, #0x31
  407798:	b.ne	4077fc <ar_scan@@Base+0x2b8>  // b.any
  40779c:	ldurb	w8, [x29, #-94]
  4077a0:	cmp	w8, #0x2f
  4077a4:	b.ne	4077fc <ar_scan@@Base+0x2b8>  // b.any
  4077a8:	ldur	x0, [x29, #-184]
  4077ac:	bl	406990 <atoi@plt>
  4077b0:	cmp	w0, #0x1
  4077b4:	b.lt	4075b0 <ar_scan@@Base+0x6c>  // b.tstop
  4077b8:	add	w8, w0, #0x1
  4077bc:	sxtw	x8, w8
  4077c0:	add	x8, x8, #0xf
  4077c4:	and	x8, x8, #0xfffffffffffffff0
  4077c8:	mov	x9, sp
  4077cc:	sub	x28, x9, x8
  4077d0:	mov	w23, w0
  4077d4:	mov	sp, x28
  4077d8:	mov	w26, w0
  4077dc:	mov	w0, w19
  4077e0:	mov	x1, x28
  4077e4:	mov	x2, x26
  4077e8:	bl	417a58 <readbuf@@Base>
  4077ec:	cmp	w23, w0
  4077f0:	b.ne	4075b0 <ar_scan@@Base+0x6c>  // b.any
  4077f4:	mov	w21, wzr
  4077f8:	strb	wzr, [x28, x26]
  4077fc:	ldur	x0, [x29, #-120]
  407800:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  407804:	sub	x2, x29, #0x64
  407808:	add	x1, x1, #0xe80
  40780c:	bl	406e30 <__isoc99_sscanf@plt>
  407810:	ldur	x0, [x29, #-128]
  407814:	bl	406b90 <atol@plt>
  407818:	mov	x26, x0
  40781c:	ldur	x0, [x29, #-136]
  407820:	add	x27, x25, #0x3c
  407824:	bl	406b90 <atol@plt>
  407828:	mov	x23, x0
  40782c:	ldur	x0, [x29, #-144]
  407830:	bl	406990 <atoi@plt>
  407834:	mov	w22, w0
  407838:	ldur	x0, [x29, #-152]
  40783c:	bl	406990 <atoi@plt>
  407840:	ldur	w8, [x29, #-100]
  407844:	sub	sp, sp, #0x20
  407848:	ldur	x9, [x29, #-160]
  40784c:	mov	w2, w21
  407850:	ldur	x21, [x29, #-176]
  407854:	str	w0, [sp]
  407858:	mov	w0, w19
  40785c:	mov	x1, x28
  407860:	mov	x3, x25
  407864:	mov	x4, x27
  407868:	mov	x5, x26
  40786c:	mov	x6, x23
  407870:	mov	w7, w22
  407874:	str	x9, [sp, #16]
  407878:	str	w8, [sp, #8]
  40787c:	blr	x21
  407880:	add	sp, sp, #0x20
  407884:	cbnz	x0, 407930 <ar_scan@@Base+0x3ec>
  407888:	sub	x22, x29, #0x60
  40788c:	cbz	w20, 407910 <ar_scan@@Base+0x3cc>
  407890:	mov	w8, #0x7fffffff            	// #2147483647
  407894:	cmp	x26, x8
  407898:	b.gt	4075b0 <ar_scan@@Base+0x6c>
  40789c:	add	x9, x26, #0x10
  4078a0:	mov	x8, sp
  4078a4:	and	x9, x9, #0xfffffffffffffff0
  4078a8:	sub	x24, x8, x9
  4078ac:	mov	sp, x24
  4078b0:	mov	w0, w19
  4078b4:	mov	x1, x24
  4078b8:	mov	x2, x26
  4078bc:	bl	417a58 <readbuf@@Base>
  4078c0:	cmp	x26, w0, sxtw
  4078c4:	b.ne	4075b0 <ar_scan@@Base+0x6c>  // b.any
  4078c8:	cmp	x26, #0x1
  4078cc:	add	x8, x24, x26
  4078d0:	b.lt	407904 <ar_scan@@Base+0x3c0>  // b.tstop
  4078d4:	mov	x9, x24
  4078d8:	ldrb	w10, [x9]
  4078dc:	cmp	w10, #0xa
  4078e0:	b.ne	4078f8 <ar_scan@@Base+0x3b4>  // b.any
  4078e4:	ldurb	w10, [x9, #-1]
  4078e8:	strb	wzr, [x9]
  4078ec:	cmp	w10, #0x2f
  4078f0:	b.ne	4078f8 <ar_scan@@Base+0x3b4>  // b.any
  4078f4:	sturb	wzr, [x9, #-1]
  4078f8:	add	x9, x9, #0x1
  4078fc:	cmp	x9, x8
  407900:	b.cc	4078d8 <ar_scan@@Base+0x394>  // b.lo, b.ul, b.last
  407904:	strb	wzr, [x8]
  407908:	mov	w8, w26
  40790c:	stur	w26, [x29, #-164]
  407910:	add	x8, x27, x26
  407914:	and	x9, x8, #0x1
  407918:	add	x25, x9, x8
  40791c:	b	40763c <ar_scan@@Base+0xf8>
  407920:	mov	w0, w19
  407924:	bl	406b60 <close@plt>
  407928:	mov	x23, xzr
  40792c:	b	4075c4 <ar_scan@@Base+0x80>
  407930:	mov	x23, x0
  407934:	mov	w0, w19
  407938:	bl	406b60 <close@plt>
  40793c:	b	4075c4 <ar_scan@@Base+0x80>

0000000000407940 <ar_name_equal@@Base>:
  407940:	stp	x29, x30, [sp, #-48]!
  407944:	stp	x20, x19, [sp, #32]
  407948:	mov	x19, x1
  40794c:	mov	w1, #0x2f                  	// #47
  407950:	str	x21, [sp, #16]
  407954:	mov	x29, sp
  407958:	mov	w20, w2
  40795c:	mov	x21, x0
  407960:	bl	406b80 <strrchr@plt>
  407964:	cmp	x0, #0x0
  407968:	csinc	x0, x21, x0, eq  // eq = none
  40796c:	cbz	w20, 407980 <ar_name_equal@@Base+0x40>
  407970:	mov	w2, #0xf                   	// #15
  407974:	mov	x1, x19
  407978:	bl	406a30 <strncmp@plt>
  40797c:	b	407988 <ar_name_equal@@Base+0x48>
  407980:	mov	x1, x19
  407984:	bl	406c70 <strcmp@plt>
  407988:	ldp	x20, x19, [sp, #32]
  40798c:	ldr	x21, [sp, #16]
  407990:	cmp	w0, #0x0
  407994:	cset	w0, eq  // eq = none
  407998:	ldp	x29, x30, [sp], #48
  40799c:	ret

00000000004079a0 <ar_member_touch@@Base>:
  4079a0:	sub	sp, sp, #0xf0
  4079a4:	mov	x2, x1
  4079a8:	adrp	x1, 407000 <_start@@Base+0xa0>
  4079ac:	add	x1, x1, #0xb48
  4079b0:	stp	x29, x30, [sp, #192]
  4079b4:	str	x21, [sp, #208]
  4079b8:	stp	x20, x19, [sp, #224]
  4079bc:	add	x29, sp, #0xc0
  4079c0:	mov	x21, x0
  4079c4:	bl	407544 <ar_scan@@Base>
  4079c8:	mov	x19, x0
  4079cc:	tbnz	x0, #63, 407b30 <ar_member_touch@@Base+0x190>
  4079d0:	cbz	x19, 407a00 <ar_member_touch@@Base+0x60>
  4079d4:	mov	w1, #0x2                   	// #2
  4079d8:	mov	w2, #0x1b6                 	// #438
  4079dc:	mov	x0, x21
  4079e0:	bl	406a00 <open@plt>
  4079e4:	cmn	w0, #0x1
  4079e8:	b.ne	407a08 <ar_member_touch@@Base+0x68>  // b.any
  4079ec:	bl	406eb0 <__errno_location@plt>
  4079f0:	ldr	w8, [x0]
  4079f4:	cmp	w8, #0x4
  4079f8:	b.eq	4079d4 <ar_member_touch@@Base+0x34>  // b.none
  4079fc:	b	407b2c <ar_member_touch@@Base+0x18c>
  407a00:	mov	w19, #0x1                   	// #1
  407a04:	b	407b30 <ar_member_touch@@Base+0x190>
  407a08:	mov	w20, w0
  407a0c:	tbnz	w0, #31, 407b2c <ar_member_touch@@Base+0x18c>
  407a10:	mov	w0, w20
  407a14:	mov	x1, x19
  407a18:	mov	w2, wzr
  407a1c:	bl	4068f0 <lseek@plt>
  407a20:	cmn	x0, #0x1
  407a24:	b.ne	407a3c <ar_member_touch@@Base+0x9c>  // b.any
  407a28:	bl	406eb0 <__errno_location@plt>
  407a2c:	ldr	w8, [x0]
  407a30:	cmp	w8, #0x4
  407a34:	b.eq	407a10 <ar_member_touch@@Base+0x70>  // b.none
  407a38:	b	407b14 <ar_member_touch@@Base+0x174>
  407a3c:	tbnz	x0, #63, 407b14 <ar_member_touch@@Base+0x174>
  407a40:	sub	x1, x29, #0x40
  407a44:	mov	w2, #0x3c                  	// #60
  407a48:	mov	w0, w20
  407a4c:	bl	417a58 <readbuf@@Base>
  407a50:	cmp	w0, #0x3c
  407a54:	b.ne	407b14 <ar_member_touch@@Base+0x174>  // b.any
  407a58:	mov	x1, sp
  407a5c:	mov	w0, w20
  407a60:	bl	423d40 <__libc_csu_fini@@Base+0x28>
  407a64:	cmn	w0, #0x1
  407a68:	b.ne	407a80 <ar_member_touch@@Base+0xe0>  // b.any
  407a6c:	bl	406eb0 <__errno_location@plt>
  407a70:	ldr	w8, [x0]
  407a74:	cmp	w8, #0x4
  407a78:	b.eq	407a58 <ar_member_touch@@Base+0xb8>  // b.none
  407a7c:	b	407b14 <ar_member_touch@@Base+0x174>
  407a80:	tbnz	w0, #31, 407b14 <ar_member_touch@@Base+0x174>
  407a84:	ldr	x2, [sp, #88]
  407a88:	sub	x8, x29, #0x40
  407a8c:	add	x21, x8, #0x10
  407a90:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  407a94:	mov	x8, #0x2020202020202020    	// #2314885530818453536
  407a98:	add	x1, x1, #0x511
  407a9c:	mov	x0, x21
  407aa0:	stur	x8, [x29, #-48]
  407aa4:	stur	w8, [x29, #-40]
  407aa8:	bl	406830 <sprintf@plt>
  407aac:	mov	x0, x21
  407ab0:	bl	406790 <strlen@plt>
  407ab4:	mov	w8, #0x20                  	// #32
  407ab8:	strb	w8, [x21, x0]
  407abc:	mov	w0, w20
  407ac0:	mov	x1, x19
  407ac4:	mov	w2, wzr
  407ac8:	bl	4068f0 <lseek@plt>
  407acc:	cmn	x0, #0x1
  407ad0:	b.ne	407ae8 <ar_member_touch@@Base+0x148>  // b.any
  407ad4:	bl	406eb0 <__errno_location@plt>
  407ad8:	ldr	w8, [x0]
  407adc:	cmp	w8, #0x4
  407ae0:	b.eq	407abc <ar_member_touch@@Base+0x11c>  // b.none
  407ae4:	b	407b14 <ar_member_touch@@Base+0x174>
  407ae8:	tbnz	x0, #63, 407b14 <ar_member_touch@@Base+0x174>
  407aec:	sub	x1, x29, #0x40
  407af0:	mov	w2, #0x3c                  	// #60
  407af4:	mov	w0, w20
  407af8:	bl	4179d4 <writebuf@@Base>
  407afc:	cmp	w0, #0x3c
  407b00:	b.ne	407b14 <ar_member_touch@@Base+0x174>  // b.any
  407b04:	mov	w0, w20
  407b08:	bl	406b60 <close@plt>
  407b0c:	mov	w19, wzr
  407b10:	b	407b30 <ar_member_touch@@Base+0x190>
  407b14:	bl	406eb0 <__errno_location@plt>
  407b18:	ldr	w21, [x0]
  407b1c:	mov	x19, x0
  407b20:	mov	w0, w20
  407b24:	bl	406b60 <close@plt>
  407b28:	str	w21, [x19]
  407b2c:	mov	w19, #0xfffffffd            	// #-3
  407b30:	mov	w0, w19
  407b34:	ldp	x20, x19, [sp, #224]
  407b38:	ldr	x21, [sp, #208]
  407b3c:	ldp	x29, x30, [sp, #192]
  407b40:	add	sp, sp, #0xf0
  407b44:	ret
  407b48:	stp	x29, x30, [sp, #-32]!
  407b4c:	mov	x29, sp
  407b50:	ldr	x0, [x29, #48]
  407b54:	str	x19, [sp, #16]
  407b58:	mov	x19, x3
  407b5c:	bl	407940 <ar_name_equal@@Base>
  407b60:	cmp	w0, #0x0
  407b64:	csel	x0, xzr, x19, eq  // eq = none
  407b68:	ldr	x19, [sp, #16]
  407b6c:	ldp	x29, x30, [sp], #32
  407b70:	ret

0000000000407b74 <set_file_variables@@Base>:
  407b74:	stp	x29, x30, [sp, #-96]!
  407b78:	stp	x28, x27, [sp, #16]
  407b7c:	stp	x26, x25, [sp, #32]
  407b80:	stp	x24, x23, [sp, #48]
  407b84:	stp	x22, x21, [sp, #64]
  407b88:	stp	x20, x19, [sp, #80]
  407b8c:	mov	x29, sp
  407b90:	sub	sp, sp, #0x60
  407b94:	mov	x19, x0
  407b98:	ldr	x0, [x0]
  407b9c:	bl	40706c <ar_name@@Base>
  407ba0:	ldr	x23, [x19]
  407ba4:	cbz	w0, 407c20 <set_file_variables@@Base+0xac>
  407ba8:	mov	w1, #0x28                  	// #40
  407bac:	mov	x0, x23
  407bb0:	bl	406cd0 <strchr@plt>
  407bb4:	sub	x22, x0, x23
  407bb8:	add	x8, x22, #0x10
  407bbc:	and	x8, x8, #0xfffffffffffffff0
  407bc0:	mov	x9, sp
  407bc4:	mov	x21, x0
  407bc8:	sub	x20, x9, x8
  407bcc:	mov	sp, x20
  407bd0:	mov	x0, x20
  407bd4:	mov	x1, x23
  407bd8:	mov	x2, x22
  407bdc:	bl	406750 <memcpy@plt>
  407be0:	strb	wzr, [x20, x22]
  407be4:	add	x22, x21, #0x1
  407be8:	mov	x0, x22
  407bec:	bl	406790 <strlen@plt>
  407bf0:	add	x8, x0, #0xf
  407bf4:	and	x8, x8, #0xfffffffffffffff0
  407bf8:	mov	x9, sp
  407bfc:	sub	x21, x9, x8
  407c00:	mov	sp, x21
  407c04:	sub	x24, x0, #0x1
  407c08:	mov	x0, x21
  407c0c:	mov	x1, x22
  407c10:	mov	x2, x24
  407c14:	bl	406750 <memcpy@plt>
  407c18:	strb	wzr, [x21, x24]
  407c1c:	b	407c2c <set_file_variables@@Base+0xb8>
  407c20:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x2290>
  407c24:	add	x21, x21, #0x5eb
  407c28:	mov	x20, x23
  407c2c:	ldr	x22, [x19, #40]
  407c30:	cbnz	x22, 407cfc <set_file_variables@@Base+0x188>
  407c34:	mov	x0, x23
  407c38:	bl	40706c <ar_name@@Base>
  407c3c:	ldr	x23, [x19]
  407c40:	cbz	w0, 407c64 <set_file_variables@@Base+0xf0>
  407c44:	mov	w1, #0x28                  	// #40
  407c48:	mov	x0, x23
  407c4c:	bl	406cd0 <strchr@plt>
  407c50:	add	x23, x0, #0x1
  407c54:	mov	x0, x23
  407c58:	bl	406790 <strlen@plt>
  407c5c:	sub	x24, x0, #0x1
  407c60:	b	407c70 <set_file_variables@@Base+0xfc>
  407c64:	mov	x0, x23
  407c68:	bl	406790 <strlen@plt>
  407c6c:	mov	x24, x0
  407c70:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  407c74:	add	x0, x0, #0xe84
  407c78:	bl	42016c <strcache_add@@Base>
  407c7c:	bl	40a5f4 <enter_file@@Base>
  407c80:	ldr	x27, [x0, #24]
  407c84:	cbz	x27, 407cdc <set_file_variables@@Base+0x168>
  407c88:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  407c8c:	add	x22, x22, #0x5eb
  407c90:	ldr	x25, [x27, #8]
  407c94:	mov	x0, x25
  407c98:	cbnz	x25, 407ca4 <set_file_variables@@Base+0x130>
  407c9c:	ldr	x8, [x27, #16]
  407ca0:	ldr	x0, [x8]
  407ca4:	bl	406790 <strlen@plt>
  407ca8:	subs	x26, x24, x0
  407cac:	b.ls	407cd0 <set_file_variables@@Base+0x15c>  // b.plast
  407cb0:	mov	x2, x0
  407cb4:	cbnz	x25, 407cc0 <set_file_variables@@Base+0x14c>
  407cb8:	ldr	x8, [x27, #16]
  407cbc:	ldr	x25, [x8]
  407cc0:	add	x1, x23, x26
  407cc4:	mov	x0, x25
  407cc8:	bl	406a30 <strncmp@plt>
  407ccc:	cbz	w0, 407ce8 <set_file_variables@@Base+0x174>
  407cd0:	ldr	x27, [x27]
  407cd4:	cbnz	x27, 407c90 <set_file_variables@@Base+0x11c>
  407cd8:	b	407cf8 <set_file_variables@@Base+0x184>
  407cdc:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  407ce0:	add	x22, x22, #0x5eb
  407ce4:	b	407cf8 <set_file_variables@@Base+0x184>
  407ce8:	mov	x0, x23
  407cec:	mov	x1, x26
  407cf0:	bl	4203f8 <strcache_add_len@@Base>
  407cf4:	mov	x22, x0
  407cf8:	str	x22, [x19, #40]
  407cfc:	ldr	x8, [x19, #24]
  407d00:	cbz	x8, 407d40 <set_file_variables@@Base+0x1cc>
  407d04:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  407d08:	mov	w9, #0x1200                	// #4608
  407d0c:	add	x2, x2, #0x5eb
  407d10:	ldrh	w10, [x8, #32]
  407d14:	tst	w10, w9
  407d18:	b.eq	407d28 <set_file_variables@@Base+0x1b4>  // b.none
  407d1c:	ldr	x8, [x8]
  407d20:	cbnz	x8, 407d10 <set_file_variables@@Base+0x19c>
  407d24:	b	407d48 <set_file_variables@@Base+0x1d4>
  407d28:	tbnz	w10, #11, 407d40 <set_file_variables@@Base+0x1cc>
  407d2c:	ldr	x2, [x8, #8]
  407d30:	cbnz	x2, 407d48 <set_file_variables@@Base+0x1d4>
  407d34:	ldr	x8, [x8, #16]
  407d38:	ldr	x2, [x8]
  407d3c:	b	407d48 <set_file_variables@@Base+0x1d4>
  407d40:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  407d44:	add	x2, x2, #0x5eb
  407d48:	ldr	x8, [x19, #32]
  407d4c:	cbz	x8, 407d64 <set_file_variables@@Base+0x1f0>
  407d50:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  407d54:	ldr	x9, [x9, #64]
  407d58:	ldr	x9, [x9, #32]
  407d5c:	cmp	x8, x9
  407d60:	csel	x2, x20, x2, eq  // eq = none
  407d64:	ldr	x8, [x19, #80]
  407d68:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  407d6c:	add	x0, x0, #0x64b
  407d70:	mov	w1, #0x1                   	// #1
  407d74:	ldr	x5, [x8, #8]
  407d78:	mov	w3, #0x6                   	// #6
  407d7c:	mov	w4, wzr
  407d80:	mov	x6, xzr
  407d84:	bl	420860 <define_variable_in_set@@Base>
  407d88:	ldr	x8, [x19, #80]
  407d8c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  407d90:	add	x0, x0, #0x98f
  407d94:	mov	w1, #0x1                   	// #1
  407d98:	ldr	x5, [x8, #8]
  407d9c:	mov	w3, #0x6                   	// #6
  407da0:	mov	x2, x22
  407da4:	mov	w4, wzr
  407da8:	mov	x6, xzr
  407dac:	bl	420860 <define_variable_in_set@@Base>
  407db0:	ldr	x8, [x19, #80]
  407db4:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  407db8:	add	x0, x0, #0x637
  407dbc:	mov	w1, #0x1                   	// #1
  407dc0:	ldr	x5, [x8, #8]
  407dc4:	mov	w3, #0x6                   	// #6
  407dc8:	mov	x2, x20
  407dcc:	mov	w4, wzr
  407dd0:	mov	x6, xzr
  407dd4:	bl	420860 <define_variable_in_set@@Base>
  407dd8:	ldr	x8, [x19, #80]
  407ddc:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  407de0:	add	x0, x0, #0x176
  407de4:	mov	w1, #0x1                   	// #1
  407de8:	ldr	x5, [x8, #8]
  407dec:	mov	w3, #0x6                   	// #6
  407df0:	mov	x2, x21
  407df4:	mov	w4, wzr
  407df8:	mov	x6, xzr
  407dfc:	bl	420860 <define_variable_in_set@@Base>
  407e00:	ldr	x25, [x19, #24]
  407e04:	cbz	x25, 407e6c <set_file_variables@@Base+0x2f8>
  407e08:	mov	x23, xzr
  407e0c:	mov	x21, xzr
  407e10:	mov	x20, x25
  407e14:	ldrh	w8, [x20, #32]
  407e18:	tst	w8, #0x1800
  407e1c:	b.ne	407e5c <set_file_variables@@Base+0x2e8>  // b.any
  407e20:	ldr	x0, [x20, #8]
  407e24:	tbnz	w8, #9, 407e44 <set_file_variables@@Base+0x2d0>
  407e28:	cbnz	x0, 407e34 <set_file_variables@@Base+0x2c0>
  407e2c:	ldr	x8, [x20, #16]
  407e30:	ldr	x0, [x8]
  407e34:	bl	406790 <strlen@plt>
  407e38:	add	x8, x21, x0
  407e3c:	add	x21, x8, #0x1
  407e40:	b	407e5c <set_file_variables@@Base+0x2e8>
  407e44:	cbnz	x0, 407e50 <set_file_variables@@Base+0x2dc>
  407e48:	ldr	x8, [x20, #16]
  407e4c:	ldr	x0, [x8]
  407e50:	bl	406790 <strlen@plt>
  407e54:	add	x8, x23, x0
  407e58:	add	x23, x8, #0x1
  407e5c:	ldr	x20, [x20]
  407e60:	cbnz	x20, 407e14 <set_file_variables@@Base+0x2a0>
  407e64:	cbnz	x23, 407e74 <set_file_variables@@Base+0x300>
  407e68:	b	407e70 <set_file_variables@@Base+0x2fc>
  407e6c:	mov	x21, xzr
  407e70:	mov	w23, #0x1                   	// #1
  407e74:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  407e78:	ldr	x9, [x8, #2568]
  407e7c:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  407e80:	ldr	x20, [x24, #2544]
  407e84:	cmp	x21, #0x0
  407e88:	csinc	x21, x21, xzr, ne  // ne = any
  407e8c:	cmp	x21, x9
  407e90:	b.ls	407eb0 <set_file_variables@@Base+0x33c>  // b.plast
  407e94:	mov	x0, x20
  407e98:	mov	x1, x21
  407e9c:	str	x21, [x8, #2568]
  407ea0:	bl	417854 <xrealloc@@Base>
  407ea4:	str	x0, [x24, #2544]
  407ea8:	ldr	x25, [x19, #24]
  407eac:	mov	x20, x0
  407eb0:	add	x22, x21, #0x1
  407eb4:	cbz	x25, 407f60 <set_file_variables@@Base+0x3ec>
  407eb8:	mov	w27, #0x1a                  	// #26
  407ebc:	mov	w28, #0x20                  	// #32
  407ec0:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  407ec4:	ldrb	w8, [x25, #33]
  407ec8:	tst	w8, w27
  407ecc:	b.ne	407f4c <set_file_variables@@Base+0x3d8>  // b.any
  407ed0:	ldr	x21, [x25, #8]
  407ed4:	cbnz	x21, 407ee0 <set_file_variables@@Base+0x36c>
  407ed8:	ldr	x8, [x25, #16]
  407edc:	ldr	x21, [x8]
  407ee0:	mov	x0, x21
  407ee4:	bl	40706c <ar_name@@Base>
  407ee8:	cbz	w0, 407f0c <set_file_variables@@Base+0x398>
  407eec:	mov	w1, #0x28                  	// #40
  407ef0:	mov	x0, x21
  407ef4:	bl	406cd0 <strchr@plt>
  407ef8:	add	x21, x0, #0x1
  407efc:	mov	x0, x21
  407f00:	bl	406790 <strlen@plt>
  407f04:	sub	x24, x0, #0x1
  407f08:	b	407f18 <set_file_variables@@Base+0x3a4>
  407f0c:	mov	x0, x21
  407f10:	bl	406790 <strlen@plt>
  407f14:	mov	x24, x0
  407f18:	mov	x0, x20
  407f1c:	mov	x1, x21
  407f20:	mov	x2, x24
  407f24:	bl	406750 <memcpy@plt>
  407f28:	add	x20, x20, x24
  407f2c:	strb	w28, [x20], #1
  407f30:	ldrb	w8, [x25, #33]
  407f34:	ldr	w9, [x26, #3296]
  407f38:	and	w8, w8, #0x1
  407f3c:	orr	w8, w8, w9
  407f40:	cmp	w8, #0x0
  407f44:	csinv	x8, xzr, x24, ne  // ne = any
  407f48:	add	x22, x8, x22
  407f4c:	ldr	x25, [x25]
  407f50:	cbnz	x25, 407ec4 <set_file_variables@@Base+0x350>
  407f54:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  407f58:	ldr	x2, [x24, #2544]
  407f5c:	b	407f64 <set_file_variables@@Base+0x3f0>
  407f60:	mov	x2, x20
  407f64:	cmp	x20, x2
  407f68:	cset	w8, hi  // hi = pmore
  407f6c:	sub	x8, x20, x8
  407f70:	strb	wzr, [x8]
  407f74:	ldr	x8, [x19, #80]
  407f78:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  407f7c:	add	x0, x0, #0x74b
  407f80:	mov	w1, #0x1                   	// #1
  407f84:	ldr	x5, [x8, #8]
  407f88:	mov	w3, #0x6                   	// #6
  407f8c:	mov	w4, wzr
  407f90:	mov	x6, xzr
  407f94:	bl	420860 <define_variable_in_set@@Base>
  407f98:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  407f9c:	ldr	x21, [x24, #2544]
  407fa0:	ldr	x9, [x8, #2584]
  407fa4:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  407fa8:	ldr	x20, [x24, #2560]
  407fac:	cmp	x22, x9
  407fb0:	b.ls	407fcc <set_file_variables@@Base+0x458>  // b.plast
  407fb4:	mov	x0, x20
  407fb8:	mov	x1, x22
  407fbc:	str	x22, [x8, #2584]
  407fc0:	bl	417854 <xrealloc@@Base>
  407fc4:	mov	x20, x0
  407fc8:	str	x0, [x24, #2560]
  407fcc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  407fd0:	ldr	x9, [x8, #2576]
  407fd4:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  407fd8:	ldr	x22, [x27, #2552]
  407fdc:	cmp	x23, x9
  407fe0:	b.ls	407ffc <set_file_variables@@Base+0x488>  // b.plast
  407fe4:	mov	x0, x22
  407fe8:	mov	x1, x23
  407fec:	str	x23, [x8, #2576]
  407ff0:	bl	417854 <xrealloc@@Base>
  407ff4:	mov	x22, x0
  407ff8:	str	x0, [x27, #2552]
  407ffc:	adrp	x2, 408000 <set_file_variables@@Base+0x48c>
  408000:	adrp	x3, 408000 <set_file_variables@@Base+0x48c>
  408004:	adrp	x4, 408000 <set_file_variables@@Base+0x48c>
  408008:	add	x2, x2, #0x260
  40800c:	add	x3, x3, #0x28c
  408010:	add	x4, x4, #0x294
  408014:	sub	x0, x29, #0x58
  408018:	mov	w1, #0x1f4                 	// #500
  40801c:	bl	40f3e8 <hash_init@@Base>
  408020:	ldr	x23, [x19, #24]
  408024:	cbz	x23, 408184 <set_file_variables@@Base+0x610>
  408028:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  40802c:	ldrb	w8, [x23, #33]
  408030:	tst	w8, #0x18
  408034:	b.ne	408090 <set_file_variables@@Base+0x51c>  // b.any
  408038:	sub	x0, x29, #0x58
  40803c:	mov	x1, x23
  408040:	bl	40f53c <hash_find_slot@@Base>
  408044:	ldr	x8, [x0]
  408048:	mov	x2, x0
  40804c:	cbz	x8, 408084 <set_file_variables@@Base+0x510>
  408050:	ldr	x9, [x24, #2344]
  408054:	cmp	x8, x9
  408058:	b.eq	408084 <set_file_variables@@Base+0x510>  // b.none
  40805c:	ldrh	w10, [x23, #32]
  408060:	ldrh	w9, [x8, #32]
  408064:	eor	w10, w9, w10
  408068:	tbz	w10, #9, 408090 <set_file_variables@@Base+0x51c>
  40806c:	and	w9, w9, #0xfffffdff
  408070:	strh	w9, [x8, #32]
  408074:	ldrh	w8, [x23, #32]
  408078:	and	w8, w8, #0xfffffdff
  40807c:	strh	w8, [x23, #32]
  408080:	b	408090 <set_file_variables@@Base+0x51c>
  408084:	sub	x0, x29, #0x58
  408088:	mov	x1, x23
  40808c:	bl	40f668 <hash_insert_at@@Base>
  408090:	ldr	x23, [x23]
  408094:	cbnz	x23, 40802c <set_file_variables@@Base+0x4b8>
  408098:	ldr	x24, [x19, #24]
  40809c:	cbz	x24, 408184 <set_file_variables@@Base+0x610>
  4080a0:	mov	w28, #0x20                  	// #32
  4080a4:	mov	x23, x21
  4080a8:	ldrb	w8, [x24, #33]
  4080ac:	tst	w8, #0x18
  4080b0:	b.ne	408178 <set_file_variables@@Base+0x604>  // b.any
  4080b4:	sub	x0, x29, #0x58
  4080b8:	mov	x1, x24
  4080bc:	bl	40f63c <hash_find_item@@Base>
  4080c0:	cmp	x0, x24
  4080c4:	b.ne	408178 <set_file_variables@@Base+0x604>  // b.any
  4080c8:	ldr	x25, [x24, #8]
  4080cc:	cbnz	x25, 4080d8 <set_file_variables@@Base+0x564>
  4080d0:	ldr	x8, [x24, #16]
  4080d4:	ldr	x25, [x8]
  4080d8:	mov	x0, x25
  4080dc:	bl	40706c <ar_name@@Base>
  4080e0:	cbz	w0, 408104 <set_file_variables@@Base+0x590>
  4080e4:	mov	w1, #0x28                  	// #40
  4080e8:	mov	x0, x25
  4080ec:	bl	406cd0 <strchr@plt>
  4080f0:	add	x25, x0, #0x1
  4080f4:	mov	x0, x25
  4080f8:	bl	406790 <strlen@plt>
  4080fc:	sub	x26, x0, #0x1
  408100:	b	408110 <set_file_variables@@Base+0x59c>
  408104:	mov	x0, x25
  408108:	bl	406790 <strlen@plt>
  40810c:	mov	x26, x0
  408110:	ldrb	w8, [x24, #33]
  408114:	tbnz	w8, #1, 408160 <set_file_variables@@Base+0x5ec>
  408118:	mov	x0, x23
  40811c:	mov	x1, x25
  408120:	mov	x2, x26
  408124:	bl	406750 <memcpy@plt>
  408128:	add	x23, x23, x26
  40812c:	strb	w28, [x23], #1
  408130:	ldrb	w8, [x24, #33]
  408134:	tbnz	w8, #0, 408144 <set_file_variables@@Base+0x5d0>
  408138:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40813c:	ldr	w8, [x8, #3296]
  408140:	cbz	w8, 408178 <set_file_variables@@Base+0x604>
  408144:	mov	x0, x20
  408148:	mov	x1, x25
  40814c:	mov	x2, x26
  408150:	bl	406750 <memcpy@plt>
  408154:	add	x20, x20, x26
  408158:	strb	w28, [x20], #1
  40815c:	b	408178 <set_file_variables@@Base+0x604>
  408160:	mov	x0, x22
  408164:	mov	x1, x25
  408168:	mov	x2, x26
  40816c:	bl	406750 <memcpy@plt>
  408170:	add	x22, x22, x26
  408174:	strb	w28, [x22], #1
  408178:	ldr	x24, [x24]
  40817c:	cbnz	x24, 4080a8 <set_file_variables@@Base+0x534>
  408180:	b	408188 <set_file_variables@@Base+0x614>
  408184:	mov	x23, x21
  408188:	sub	x0, x29, #0x58
  40818c:	mov	w1, wzr
  408190:	bl	40f8ec <hash_free@@Base>
  408194:	cmp	x23, x21
  408198:	cset	w8, hi  // hi = pmore
  40819c:	sub	x8, x23, x8
  4081a0:	strb	wzr, [x8]
  4081a4:	ldr	x8, [x19, #80]
  4081a8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  4081ac:	add	x0, x0, #0x1c4
  4081b0:	mov	w1, #0x1                   	// #1
  4081b4:	ldr	x5, [x8, #8]
  4081b8:	mov	w3, #0x6                   	// #6
  4081bc:	mov	x2, x21
  4081c0:	mov	w4, wzr
  4081c4:	mov	x6, xzr
  4081c8:	bl	420860 <define_variable_in_set@@Base>
  4081cc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4081d0:	ldr	x2, [x8, #2560]
  4081d4:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4081d8:	add	x0, x0, #0x502
  4081dc:	mov	w1, #0x1                   	// #1
  4081e0:	cmp	x20, x2
  4081e4:	cset	w8, hi  // hi = pmore
  4081e8:	sub	x8, x20, x8
  4081ec:	strb	wzr, [x8]
  4081f0:	ldr	x8, [x19, #80]
  4081f4:	mov	w3, #0x6                   	// #6
  4081f8:	mov	w4, wzr
  4081fc:	mov	x6, xzr
  408200:	ldr	x5, [x8, #8]
  408204:	bl	420860 <define_variable_in_set@@Base>
  408208:	ldr	x2, [x27, #2552]
  40820c:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  408210:	add	x0, x0, #0xe8e
  408214:	mov	w1, #0x1                   	// #1
  408218:	cmp	x22, x2
  40821c:	cset	w8, hi  // hi = pmore
  408220:	sub	x8, x22, x8
  408224:	strb	wzr, [x8]
  408228:	ldr	x8, [x19, #80]
  40822c:	mov	w3, #0x6                   	// #6
  408230:	mov	w4, wzr
  408234:	mov	x6, xzr
  408238:	ldr	x5, [x8, #8]
  40823c:	bl	420860 <define_variable_in_set@@Base>
  408240:	mov	sp, x29
  408244:	ldp	x20, x19, [sp, #80]
  408248:	ldp	x22, x21, [sp, #64]
  40824c:	ldp	x24, x23, [sp, #48]
  408250:	ldp	x26, x25, [sp, #32]
  408254:	ldp	x28, x27, [sp, #16]
  408258:	ldp	x29, x30, [sp], #96
  40825c:	ret
  408260:	stp	x29, x30, [sp, #-16]!
  408264:	mov	x8, x0
  408268:	ldr	x0, [x0, #8]
  40826c:	mov	x29, sp
  408270:	cbnz	x0, 40827c <set_file_variables@@Base+0x708>
  408274:	ldr	x8, [x8, #16]
  408278:	ldr	x0, [x8]
  40827c:	bl	40fcd8 <jhash_string@@Base>
  408280:	mov	w0, w0
  408284:	ldp	x29, x30, [sp], #16
  408288:	ret
  40828c:	mov	x0, xzr
  408290:	ret
  408294:	mov	x8, x0
  408298:	ldr	x0, [x0, #8]
  40829c:	cbnz	x0, 4082a8 <set_file_variables@@Base+0x734>
  4082a0:	ldr	x8, [x8, #16]
  4082a4:	ldr	x0, [x8]
  4082a8:	ldr	x8, [x1, #8]
  4082ac:	cbnz	x8, 4082b8 <set_file_variables@@Base+0x744>
  4082b0:	ldr	x8, [x1, #16]
  4082b4:	ldr	x8, [x8]
  4082b8:	mov	x1, x8
  4082bc:	b	406c70 <strcmp@plt>

00000000004082c0 <chop_commands@@Base>:
  4082c0:	stp	x29, x30, [sp, #-96]!
  4082c4:	stp	x28, x27, [sp, #16]
  4082c8:	stp	x26, x25, [sp, #32]
  4082cc:	stp	x24, x23, [sp, #48]
  4082d0:	stp	x22, x21, [sp, #64]
  4082d4:	stp	x20, x19, [sp, #80]
  4082d8:	mov	x29, sp
  4082dc:	cbz	x0, 4082ec <chop_commands@@Base+0x2c>
  4082e0:	ldr	x8, [x0, #32]
  4082e4:	mov	x19, x0
  4082e8:	cbz	x8, 408308 <chop_commands@@Base+0x48>
  4082ec:	ldp	x20, x19, [sp, #80]
  4082f0:	ldp	x22, x21, [sp, #64]
  4082f4:	ldp	x24, x23, [sp, #48]
  4082f8:	ldp	x26, x25, [sp, #32]
  4082fc:	ldp	x28, x27, [sp, #16]
  408300:	ldp	x29, x30, [sp], #96
  408304:	ret
  408308:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40830c:	ldr	w8, [x8, #84]
  408310:	cbz	w8, 40835c <chop_commands@@Base+0x9c>
  408314:	ldr	x0, [x19, #24]
  408318:	bl	406790 <strlen@plt>
  40831c:	mov	x21, x0
  408320:	mov	w0, #0x8                   	// #8
  408324:	bl	417888 <xmalloc@@Base>
  408328:	ldr	x8, [x19, #24]
  40832c:	mov	x20, x0
  408330:	mov	x0, x8
  408334:	bl	4178d4 <xstrdup@@Base>
  408338:	str	x0, [x20]
  40833c:	cbz	x21, 408354 <chop_commands@@Base+0x94>
  408340:	sub	x8, x21, #0x1
  408344:	ldrb	w9, [x0, x8]
  408348:	cmp	w9, #0xa
  40834c:	b.ne	408354 <chop_commands@@Base+0x94>  // b.any
  408350:	strb	wzr, [x0, x8]
  408354:	mov	w21, #0x1                   	// #1
  408358:	b	408490 <chop_commands@@Base+0x1d0>
  40835c:	mov	w0, #0x28                  	// #40
  408360:	bl	417888 <xmalloc@@Base>
  408364:	ldr	x22, [x19, #24]
  408368:	mov	x20, x0
  40836c:	ldrb	w8, [x22]
  408370:	cbz	w8, 408440 <chop_commands@@Base+0x180>
  408374:	mov	w24, wzr
  408378:	mov	w21, #0x5                   	// #5
  40837c:	mov	w1, #0xa                   	// #10
  408380:	mov	x0, x22
  408384:	bl	406cd0 <strchr@plt>
  408388:	mov	x23, x0
  40838c:	cbz	x0, 4083e0 <chop_commands@@Base+0x120>
  408390:	cmp	x23, x22
  408394:	b.ls	4083ec <chop_commands@@Base+0x12c>  // b.plast
  408398:	ldurb	w8, [x23, #-1]
  40839c:	cmp	w8, #0x5c
  4083a0:	b.ne	4083ec <chop_commands@@Base+0x12c>  // b.any
  4083a4:	sub	x8, x23, #0x2
  4083a8:	mov	w9, #0x1                   	// #1
  4083ac:	cmp	x8, x22
  4083b0:	b.cc	4083d0 <chop_commands@@Base+0x110>  // b.lo, b.ul, b.last
  4083b4:	ldrb	w10, [x8]
  4083b8:	cmp	w10, #0x5c
  4083bc:	b.ne	4083d0 <chop_commands@@Base+0x110>  // b.any
  4083c0:	cmp	w9, #0x0
  4083c4:	sub	x8, x8, #0x1
  4083c8:	cset	w9, eq  // eq = none
  4083cc:	b	4083ac <chop_commands@@Base+0xec>
  4083d0:	cbz	w9, 4083ec <chop_commands@@Base+0x12c>
  4083d4:	add	x0, x23, #0x1
  4083d8:	mov	w1, #0xa                   	// #10
  4083dc:	b	408384 <chop_commands@@Base+0xc4>
  4083e0:	mov	x0, x22
  4083e4:	bl	406790 <strlen@plt>
  4083e8:	add	x23, x22, x0
  4083ec:	cmp	w21, w24, uxth
  4083f0:	b.ne	408408 <chop_commands@@Base+0x148>  // b.any
  4083f4:	add	w21, w21, #0x2
  4083f8:	lsl	x1, x21, #3
  4083fc:	mov	x0, x20
  408400:	bl	417854 <xrealloc@@Base>
  408404:	mov	x20, x0
  408408:	sub	x1, x23, x22
  40840c:	mov	x0, x22
  408410:	bl	4178f0 <xstrndup@@Base>
  408414:	and	x8, x24, #0xffff
  408418:	str	x0, [x20, x8, lsl #3]
  40841c:	mov	x8, x23
  408420:	ldrb	w9, [x8], #1
  408424:	cmp	w9, #0x0
  408428:	csel	x22, x23, x8, eq  // eq = none
  40842c:	ldrb	w9, [x22]
  408430:	add	w8, w24, #0x1
  408434:	mov	w24, w8
  408438:	cbnz	w9, 40837c <chop_commands@@Base+0xbc>
  40843c:	b	408444 <chop_commands@@Base+0x184>
  408440:	mov	w21, #0x5                   	// #5
  408444:	cmp	w21, w8, uxth
  408448:	b.ne	40847c <chop_commands@@Base+0x1bc>  // b.any
  40844c:	cmp	w21, #0x10, lsl #12
  408450:	b.cc	408490 <chop_commands@@Base+0x1d0>  // b.lo, b.ul, b.last
  408454:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408458:	add	x1, x1, #0xe90
  40845c:	mov	w2, #0x5                   	// #5
  408460:	mov	x0, xzr
  408464:	bl	406e10 <dcgettext@plt>
  408468:	mov	x2, x0
  40846c:	mov	w1, #0x14                  	// #20
  408470:	mov	x0, x19
  408474:	mov	w3, w21
  408478:	bl	4188bc <fatal@@Base>
  40847c:	and	w21, w8, #0xffff
  408480:	lsl	x1, x21, #3
  408484:	mov	x0, x20
  408488:	bl	417854 <xrealloc@@Base>
  40848c:	mov	x20, x0
  408490:	ldrb	w8, [x19, #51]
  408494:	mov	w0, w21
  408498:	strh	w21, [x19, #48]
  40849c:	str	x20, [x19, #32]
  4084a0:	and	w8, w8, #0xfe
  4084a4:	strb	w8, [x19, #51]
  4084a8:	bl	417888 <xmalloc@@Base>
  4084ac:	str	x0, [x19, #40]
  4084b0:	cbz	w21, 4082ec <chop_commands@@Base+0x2c>
  4084b4:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  4084b8:	adrp	x22, 423000 <fd_noinherit@@Base+0x38>
  4084bc:	mov	w27, #0x5                   	// #5
  4084c0:	mov	w9, wzr
  4084c4:	add	x25, x25, #0xcf0
  4084c8:	add	x22, x22, #0xeb0
  4084cc:	mov	w26, #0x1                   	// #1
  4084d0:	movk	w27, #0x20, lsl #16
  4084d4:	and	x28, x9, #0xffff
  4084d8:	ldr	x24, [x20, x28, lsl #3]
  4084dc:	mov	w23, wzr
  4084e0:	ldrb	w8, [x24]
  4084e4:	ldrh	w9, [x25, x8, lsl #1]
  4084e8:	tbnz	w9, #1, 408504 <chop_commands@@Base+0x244>
  4084ec:	sub	w9, w8, #0x2b
  4084f0:	cmp	w9, #0x15
  4084f4:	b.hi	40853c <chop_commands@@Base+0x27c>  // b.pmore
  4084f8:	lsl	w9, w26, w9
  4084fc:	tst	w9, w27
  408500:	b.eq	40853c <chop_commands@@Base+0x27c>  // b.none
  408504:	cmp	w8, #0x2b
  408508:	add	x24, x24, #0x1
  40850c:	b.eq	408530 <chop_commands@@Base+0x270>  // b.none
  408510:	cmp	w8, #0x2d
  408514:	b.eq	408528 <chop_commands@@Base+0x268>  // b.none
  408518:	cmp	w8, #0x40
  40851c:	b.ne	4084e0 <chop_commands@@Base+0x220>  // b.any
  408520:	mov	w8, #0x2                   	// #2
  408524:	b	408534 <chop_commands@@Base+0x274>
  408528:	mov	w8, #0x4                   	// #4
  40852c:	b	408534 <chop_commands@@Base+0x274>
  408530:	mov	w8, #0x1                   	// #1
  408534:	orr	w23, w23, w8
  408538:	b	4084e0 <chop_commands@@Base+0x220>
  40853c:	tbnz	w23, #0, 408568 <chop_commands@@Base+0x2a8>
  408540:	mov	x0, x24
  408544:	mov	x1, x22
  408548:	bl	406e00 <strstr@plt>
  40854c:	cbnz	x0, 408564 <chop_commands@@Base+0x2a4>
  408550:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408554:	mov	x0, x24
  408558:	add	x1, x1, #0xeb8
  40855c:	bl	406e00 <strstr@plt>
  408560:	cbz	x0, 408590 <chop_commands@@Base+0x2d0>
  408564:	orr	w23, w23, #0x1
  408568:	mov	w8, #0x1                   	// #1
  40856c:	ldr	x9, [x19, #40]
  408570:	strb	w23, [x9, x28]
  408574:	ldrb	w10, [x19, #51]
  408578:	add	w9, w28, #0x1
  40857c:	cmp	w21, w9, uxth
  408580:	orr	w8, w10, w8
  408584:	strb	w8, [x19, #51]
  408588:	b.hi	4084d4 <chop_commands@@Base+0x214>  // b.pmore
  40858c:	b	4082ec <chop_commands@@Base+0x2c>
  408590:	mov	w8, wzr
  408594:	b	40856c <chop_commands@@Base+0x2ac>

0000000000408598 <execute_file_commands@@Base>:
  408598:	stp	x29, x30, [sp, #-32]!
  40859c:	ldr	x8, [x0, #32]
  4085a0:	str	x19, [sp, #16]
  4085a4:	mov	x19, x0
  4085a8:	mov	x29, sp
  4085ac:	ldr	x8, [x8, #24]
  4085b0:	ldrb	w12, [x8]
  4085b4:	cbz	w12, 408604 <execute_file_commands@@Base+0x6c>
  4085b8:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  4085bc:	mov	w11, #0x5                   	// #5
  4085c0:	add	x8, x8, #0x1
  4085c4:	add	x9, x9, #0xcf0
  4085c8:	mov	w10, #0x1                   	// #1
  4085cc:	movk	w11, #0x20, lsl #16
  4085d0:	and	x13, x12, #0xff
  4085d4:	ldrh	w13, [x9, x13, lsl #1]
  4085d8:	tst	w13, #0x6
  4085dc:	b.ne	4085fc <execute_file_commands@@Base+0x64>  // b.any
  4085e0:	and	w12, w12, #0xff
  4085e4:	sub	w12, w12, #0x2b
  4085e8:	cmp	w12, #0x15
  4085ec:	b.hi	40862c <execute_file_commands@@Base+0x94>  // b.pmore
  4085f0:	lsl	w12, w10, w12
  4085f4:	tst	w12, w11
  4085f8:	b.eq	40862c <execute_file_commands@@Base+0x94>  // b.none
  4085fc:	ldrb	w12, [x8], #1
  408600:	cbnz	w12, 4085d0 <execute_file_commands@@Base+0x38>
  408604:	mov	w1, #0x2                   	// #2
  408608:	mov	x0, x19
  40860c:	bl	40b608 <set_command_state@@Base>
  408610:	ldr	w8, [x19, #136]
  408614:	mov	x0, x19
  408618:	and	w8, w8, #0xfffffffc
  40861c:	str	w8, [x19, #136]
  408620:	ldr	x19, [sp, #16]
  408624:	ldp	x29, x30, [sp], #32
  408628:	b	41e888 <notice_finished_file@@Base>
  40862c:	mov	x0, x19
  408630:	mov	w1, wzr
  408634:	bl	420e28 <initialize_file_variables@@Base>
  408638:	mov	x0, x19
  40863c:	bl	407b74 <set_file_variables@@Base>
  408640:	ldrb	w8, [x19, #136]
  408644:	tbz	w8, #6, 408650 <execute_file_commands@@Base+0xb8>
  408648:	ldr	x0, [x19]
  40864c:	bl	4141e0 <unload_file@@Base>
  408650:	mov	x0, x19
  408654:	ldr	x19, [sp, #16]
  408658:	ldp	x29, x30, [sp], #32
  40865c:	b	412560 <new_job@@Base>

0000000000408660 <fatal_error_signal@@Base>:
  408660:	stp	x29, x30, [sp, #-48]!
  408664:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408668:	mov	w9, #0x1                   	// #1
  40866c:	mov	x1, xzr
  408670:	stp	x22, x21, [sp, #16]
  408674:	stp	x20, x19, [sp, #32]
  408678:	mov	x29, sp
  40867c:	mov	w19, w0
  408680:	str	w9, [x8, #2592]
  408684:	bl	406970 <signal@plt>
  408688:	cmp	w19, #0xf
  40868c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  408690:	b.ne	4086c0 <fatal_error_signal@@Base+0x60>  // b.any
  408694:	ldr	x21, [x20, #3048]
  408698:	cbz	x21, 408728 <fatal_error_signal@@Base+0xc8>
  40869c:	ldrb	w8, [x21, #80]
  4086a0:	tbnz	w8, #0, 4086b8 <fatal_error_signal@@Base+0x58>
  4086a4:	ldr	w0, [x21, #76]
  4086a8:	cmp	w0, #0x1
  4086ac:	b.lt	4086b8 <fatal_error_signal@@Base+0x58>  // b.tstop
  4086b0:	mov	w1, #0xf                   	// #15
  4086b4:	bl	4068d0 <kill@plt>
  4086b8:	ldr	x21, [x21, #32]
  4086bc:	cbnz	x21, 40869c <fatal_error_signal@@Base+0x3c>
  4086c0:	cmp	w19, #0x3
  4086c4:	cset	w21, eq  // eq = none
  4086c8:	cmp	w19, #0xf
  4086cc:	b.hi	408744 <fatal_error_signal@@Base+0xe4>  // b.pmore
  4086d0:	mov	w8, #0x1                   	// #1
  4086d4:	lsl	w8, w8, w19
  4086d8:	mov	w9, #0x800e                	// #32782
  4086dc:	tst	w8, w9
  4086e0:	b.eq	408744 <fatal_error_signal@@Base+0xe4>  // b.none
  4086e4:	ldr	x22, [x20, #3048]
  4086e8:	cbz	x22, 408728 <fatal_error_signal@@Base+0xc8>
  4086ec:	ldrb	w8, [x22, #80]
  4086f0:	tbz	w8, #0, 408708 <fatal_error_signal@@Base+0xa8>
  4086f4:	ldr	w0, [x22, #76]
  4086f8:	cmp	w0, #0x1
  4086fc:	b.lt	408708 <fatal_error_signal@@Base+0xa8>  // b.tstop
  408700:	mov	w1, w19
  408704:	bl	42369c <remote_kill@@Base>
  408708:	ldr	x22, [x22, #32]
  40870c:	cbnz	x22, 4086ec <fatal_error_signal@@Base+0x8c>
  408710:	ldr	x20, [x20, #3048]
  408714:	cbz	x20, 408728 <fatal_error_signal@@Base+0xc8>
  408718:	mov	x0, x20
  40871c:	bl	4087a0 <delete_child_targets@@Base>
  408720:	ldr	x20, [x20, #32]
  408724:	cbnz	x20, 408718 <fatal_error_signal@@Base+0xb8>
  408728:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  40872c:	ldr	w8, [x20, #3056]
  408730:	cbz	w8, 408760 <fatal_error_signal@@Base+0x100>
  408734:	mov	w0, #0x1                   	// #1
  408738:	mov	w1, wzr
  40873c:	bl	411388 <reap_children@@Base>
  408740:	b	40872c <fatal_error_signal@@Base+0xcc>
  408744:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  408748:	ldr	w8, [x20, #3056]
  40874c:	cbz	w8, 408760 <fatal_error_signal@@Base+0x100>
  408750:	mov	w0, #0x1                   	// #1
  408754:	mov	w1, #0x1                   	// #1
  408758:	bl	411388 <reap_children@@Base>
  40875c:	b	408748 <fatal_error_signal@@Base+0xe8>
  408760:	mov	w0, #0x1                   	// #1
  408764:	bl	40aad8 <remove_intermediates@@Base>
  408768:	cbnz	w21, 40878c <fatal_error_signal@@Base+0x12c>
  40876c:	bl	4069a0 <getpid@plt>
  408770:	mov	w1, w19
  408774:	bl	4068d0 <kill@plt>
  408778:	tbnz	w0, #31, 408794 <fatal_error_signal@@Base+0x134>
  40877c:	ldp	x20, x19, [sp, #32]
  408780:	ldp	x22, x21, [sp, #16]
  408784:	ldp	x29, x30, [sp], #48
  408788:	ret
  40878c:	mov	w0, #0x1                   	// #1
  408790:	bl	4067b0 <exit@plt>
  408794:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  408798:	add	x0, x0, #0xec0
  40879c:	bl	417cc8 <pfatal_with_name@@Base>

00000000004087a0 <delete_child_targets@@Base>:
  4087a0:	stp	x29, x30, [sp, #-32]!
  4087a4:	stp	x20, x19, [sp, #16]
  4087a8:	ldrb	w8, [x0, #80]
  4087ac:	mov	x29, sp
  4087b0:	tbnz	w8, #3, 408800 <delete_child_targets@@Base+0x60>
  4087b4:	ldr	w8, [x0, #76]
  4087b8:	mov	x19, x0
  4087bc:	tbnz	w8, #31, 408800 <delete_child_targets@@Base+0x60>
  4087c0:	ldr	x0, [x19, #40]
  4087c4:	mov	x1, xzr
  4087c8:	bl	40880c <delete_child_targets@@Base+0x6c>
  4087cc:	ldr	x8, [x19, #40]
  4087d0:	ldr	x20, [x8, #48]
  4087d4:	cbz	x20, 4087f4 <delete_child_targets@@Base+0x54>
  4087d8:	ldr	x0, [x20, #16]
  4087dc:	ldr	x1, [x8]
  4087e0:	bl	40880c <delete_child_targets@@Base+0x6c>
  4087e4:	ldr	x20, [x20]
  4087e8:	cbz	x20, 4087f4 <delete_child_targets@@Base+0x54>
  4087ec:	ldr	x8, [x19, #40]
  4087f0:	b	4087d8 <delete_child_targets@@Base+0x38>
  4087f4:	ldrb	w8, [x19, #80]
  4087f8:	orr	w8, w8, #0x8
  4087fc:	strb	w8, [x19, #80]
  408800:	ldp	x20, x19, [sp, #16]
  408804:	ldp	x29, x30, [sp], #32
  408808:	ret
  40880c:	sub	sp, sp, #0xb0
  408810:	stp	x29, x30, [sp, #128]
  408814:	stp	x20, x19, [sp, #160]
  408818:	ldrh	w8, [x0, #136]
  40881c:	str	x21, [sp, #144]
  408820:	add	x29, sp, #0x80
  408824:	tst	w8, #0x20202020
  408828:	b.eq	408840 <delete_child_targets@@Base+0xa0>  // b.none
  40882c:	ldp	x20, x19, [sp, #160]
  408830:	ldr	x21, [sp, #144]
  408834:	ldp	x29, x30, [sp, #128]
  408838:	add	sp, sp, #0xb0
  40883c:	ret
  408840:	mov	x19, x0
  408844:	ldr	x0, [x0]
  408848:	mov	x20, x1
  40884c:	bl	40706c <ar_name@@Base>
  408850:	cbz	w0, 4088d8 <delete_child_targets@@Base+0x138>
  408854:	ldr	x8, [x19, #112]
  408858:	ldr	x0, [x19]
  40885c:	sub	x9, x8, #0x3
  408860:	lsr	x9, x9, #30
  408864:	cmp	x8, #0x1
  408868:	csinv	x21, x9, xzr, ne  // ne = any
  40886c:	bl	407170 <ar_member_date@@Base>
  408870:	cmp	x0, x21
  408874:	b.eq	40882c <delete_child_targets@@Base+0x8c>  // b.none
  408878:	cbz	x20, 408968 <delete_child_targets@@Base+0x1c8>
  40887c:	mov	x0, x20
  408880:	bl	406790 <strlen@plt>
  408884:	ldr	x8, [x19]
  408888:	mov	x21, x0
  40888c:	mov	x0, x8
  408890:	bl	406790 <strlen@plt>
  408894:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408898:	add	x21, x0, x21
  40889c:	add	x1, x1, #0xf08
  4088a0:	mov	w2, #0x5                   	// #5
  4088a4:	mov	x0, xzr
  4088a8:	bl	406e10 <dcgettext@plt>
  4088ac:	ldr	x4, [x19]
  4088b0:	mov	x2, x0
  4088b4:	mov	x0, xzr
  4088b8:	mov	x1, x21
  4088bc:	mov	x3, x20
  4088c0:	bl	418744 <error@@Base>
  4088c4:	b	40882c <delete_child_targets@@Base+0x8c>
  4088c8:	bl	406eb0 <__errno_location@plt>
  4088cc:	ldr	w8, [x0]
  4088d0:	cmp	w8, #0x4
  4088d4:	b.ne	40882c <delete_child_targets@@Base+0x8c>  // b.any
  4088d8:	ldr	x0, [x19]
  4088dc:	mov	x1, sp
  4088e0:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  4088e4:	cmn	w0, #0x1
  4088e8:	b.eq	4088c8 <delete_child_targets@@Base+0x128>  // b.none
  4088ec:	cbnz	w0, 40882c <delete_child_targets@@Base+0x8c>
  4088f0:	ldr	w8, [sp, #16]
  4088f4:	and	w8, w8, #0xf000
  4088f8:	cmp	w8, #0x8, lsl #12
  4088fc:	b.ne	40882c <delete_child_targets@@Base+0x8c>  // b.any
  408900:	ldr	x0, [x19]
  408904:	ldp	x1, x2, [sp, #88]
  408908:	bl	40b64c <file_timestamp_cons@@Base>
  40890c:	ldr	x8, [x19, #112]
  408910:	cmp	x0, x8
  408914:	b.eq	40882c <delete_child_targets@@Base+0x8c>  // b.none
  408918:	cbz	x20, 4089a0 <delete_child_targets@@Base+0x200>
  40891c:	mov	x0, x20
  408920:	bl	406790 <strlen@plt>
  408924:	ldr	x8, [x19]
  408928:	mov	x21, x0
  40892c:	mov	x0, x8
  408930:	bl	406790 <strlen@plt>
  408934:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408938:	add	x21, x0, x21
  40893c:	add	x1, x1, #0xf71
  408940:	mov	w2, #0x5                   	// #5
  408944:	mov	x0, xzr
  408948:	bl	406e10 <dcgettext@plt>
  40894c:	ldr	x4, [x19]
  408950:	mov	x2, x0
  408954:	mov	x0, xzr
  408958:	mov	x1, x21
  40895c:	mov	x3, x20
  408960:	bl	418744 <error@@Base>
  408964:	b	4089d4 <delete_child_targets@@Base+0x234>
  408968:	ldr	x0, [x19]
  40896c:	bl	406790 <strlen@plt>
  408970:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408974:	mov	x20, x0
  408978:	add	x1, x1, #0xf3f
  40897c:	mov	w2, #0x5                   	// #5
  408980:	mov	x0, xzr
  408984:	bl	406e10 <dcgettext@plt>
  408988:	ldr	x3, [x19]
  40898c:	mov	x2, x0
  408990:	mov	x0, xzr
  408994:	mov	x1, x20
  408998:	bl	418744 <error@@Base>
  40899c:	b	40882c <delete_child_targets@@Base+0x8c>
  4089a0:	ldr	x0, [x19]
  4089a4:	bl	406790 <strlen@plt>
  4089a8:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  4089ac:	mov	x20, x0
  4089b0:	add	x1, x1, #0xf8d
  4089b4:	mov	w2, #0x5                   	// #5
  4089b8:	mov	x0, xzr
  4089bc:	bl	406e10 <dcgettext@plt>
  4089c0:	ldr	x3, [x19]
  4089c4:	mov	x2, x0
  4089c8:	mov	x0, xzr
  4089cc:	mov	x1, x20
  4089d0:	bl	418744 <error@@Base>
  4089d4:	ldr	x0, [x19]
  4089d8:	bl	406f00 <unlink@plt>
  4089dc:	tbz	w0, #31, 40882c <delete_child_targets@@Base+0x8c>
  4089e0:	bl	406eb0 <__errno_location@plt>
  4089e4:	ldr	w8, [x0]
  4089e8:	cmp	w8, #0x2
  4089ec:	b.eq	40882c <delete_child_targets@@Base+0x8c>  // b.none
  4089f0:	ldr	x1, [x19]
  4089f4:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  4089f8:	add	x0, x0, #0xfa4
  4089fc:	bl	418a4c <perror_with_name@@Base>
  408a00:	b	40882c <delete_child_targets@@Base+0x8c>

0000000000408a04 <print_commands@@Base>:
  408a04:	stp	x29, x30, [sp, #-48]!
  408a08:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408a0c:	stp	x20, x19, [sp, #32]
  408a10:	mov	x19, x0
  408a14:	add	x1, x1, #0xec5
  408a18:	mov	w2, #0x5                   	// #5
  408a1c:	mov	x0, xzr
  408a20:	str	x21, [sp, #16]
  408a24:	mov	x29, sp
  408a28:	bl	406e10 <dcgettext@plt>
  408a2c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408a30:	ldr	x1, [x8, #2512]
  408a34:	bl	4067a0 <fputs@plt>
  408a38:	ldr	x8, [x19]
  408a3c:	cbz	x8, 408a60 <print_commands@@Base+0x5c>
  408a40:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408a44:	add	x1, x1, #0xee7
  408a48:	mov	w2, #0x5                   	// #5
  408a4c:	mov	x0, xzr
  408a50:	bl	406e10 <dcgettext@plt>
  408a54:	ldp	x1, x2, [x19]
  408a58:	bl	406ea0 <printf@plt>
  408a5c:	b	408a78 <print_commands@@Base+0x74>
  408a60:	adrp	x1, 423000 <fd_noinherit@@Base+0x38>
  408a64:	add	x1, x1, #0xeda
  408a68:	mov	w2, #0x5                   	// #5
  408a6c:	mov	x0, xzr
  408a70:	bl	406e10 <dcgettext@plt>
  408a74:	bl	406c00 <puts@plt>
  408a78:	ldr	x3, [x19, #24]
  408a7c:	ldrb	w8, [x3]
  408a80:	cbz	w8, 408aec <print_commands@@Base+0xe8>
  408a84:	adrp	x19, 423000 <fd_noinherit@@Base+0x38>
  408a88:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  408a8c:	add	x19, x19, #0xf00
  408a90:	mov	w9, wzr
  408a94:	mov	x21, x3
  408a98:	and	w10, w8, #0xff
  408a9c:	cmp	w10, #0xa
  408aa0:	b.ne	408aa8 <print_commands@@Base+0xa4>  // b.any
  408aa4:	cbz	w9, 408ac4 <print_commands@@Base+0xc0>
  408aa8:	cmp	w9, #0x0
  408aac:	ldrb	w8, [x21, #1]!
  408ab0:	cset	w9, eq  // eq = none
  408ab4:	cmp	w10, #0x5c
  408ab8:	cset	w10, eq  // eq = none
  408abc:	and	w9, w10, w9
  408ac0:	cbnz	w8, 408a98 <print_commands@@Base+0x94>
  408ac4:	ldrb	w1, [x20, #2392]
  408ac8:	sub	w2, w21, w3
  408acc:	mov	x0, x19
  408ad0:	bl	406ea0 <printf@plt>
  408ad4:	mov	x8, x21
  408ad8:	ldrb	w9, [x8], #1
  408adc:	cmp	w9, #0xa
  408ae0:	csel	x3, x21, x8, ne  // ne = any
  408ae4:	ldrb	w8, [x3]
  408ae8:	cbnz	w8, 408a90 <print_commands@@Base+0x8c>
  408aec:	ldp	x20, x19, [sp, #32]
  408af0:	ldr	x21, [sp, #16]
  408af4:	ldp	x29, x30, [sp], #48
  408af8:	ret

0000000000408afc <set_default_suffixes@@Base>:
  408afc:	stp	x29, x30, [sp, #-32]!
  408b00:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  408b04:	add	x0, x0, #0xe84
  408b08:	str	x19, [sp, #16]
  408b0c:	mov	x29, sp
  408b10:	bl	42016c <strcache_add@@Base>
  408b14:	bl	40a5f4 <enter_file@@Base>
  408b18:	adrp	x19, 43f000 <shell_var@@Base+0x20>
  408b1c:	str	x0, [x19, #240]
  408b20:	ldr	w8, [x0, #136]
  408b24:	orr	w8, w8, #0x10
  408b28:	str	w8, [x0, #136]
  408b2c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408b30:	ldr	w8, [x8, #3264]
  408b34:	cbz	w8, 408b70 <set_default_suffixes@@Base+0x74>
  408b38:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408b3c:	ldr	x8, [x8, #2440]
  408b40:	ldr	x19, [sp, #16]
  408b44:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  408b48:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  408b4c:	ldr	x5, [x8, #8]
  408b50:	add	x0, x0, #0xe85
  408b54:	add	x2, x2, #0x5eb
  408b58:	mov	w1, #0x8                   	// #8
  408b5c:	mov	w3, wzr
  408b60:	mov	w4, wzr
  408b64:	mov	x6, xzr
  408b68:	ldp	x29, x30, [sp], #32
  408b6c:	b	420860 <define_variable_in_set@@Base>
  408b70:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408b74:	add	x8, x8, #0x420
  408b78:	add	x0, x29, #0x18
  408b7c:	mov	w1, #0x28                  	// #40
  408b80:	mov	w2, #0x1                   	// #1
  408b84:	mov	x3, xzr
  408b88:	mov	w4, wzr
  408b8c:	str	x8, [x29, #24]
  408b90:	bl	41b114 <parse_file_seq@@Base>
  408b94:	mov	x1, xzr
  408b98:	bl	40adbc <enter_prereqs@@Base>
  408b9c:	ldr	x8, [x19, #240]
  408ba0:	str	x0, [x8, #24]
  408ba4:	cbz	x0, 408bc0 <set_default_suffixes@@Base+0xc4>
  408ba8:	ldr	x8, [x0, #16]
  408bac:	ldr	w9, [x8, #136]
  408bb0:	orr	w9, w9, #0x10
  408bb4:	str	w9, [x8, #136]
  408bb8:	ldr	x0, [x0]
  408bbc:	cbnz	x0, 408ba8 <set_default_suffixes@@Base+0xac>
  408bc0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408bc4:	ldr	x8, [x8, #2440]
  408bc8:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  408bcc:	adrp	x2, 43b000 <memcpy@GLIBC_2.17>
  408bd0:	add	x0, x0, #0xe85
  408bd4:	ldr	x5, [x8, #8]
  408bd8:	add	x2, x2, #0x420
  408bdc:	mov	w1, #0x8                   	// #8
  408be0:	mov	w3, wzr
  408be4:	mov	w4, wzr
  408be8:	mov	x6, xzr
  408bec:	bl	420860 <define_variable_in_set@@Base>
  408bf0:	ldr	x19, [sp, #16]
  408bf4:	ldp	x29, x30, [sp], #32
  408bf8:	ret

0000000000408bfc <install_default_suffix_rules@@Base>:
  408bfc:	stp	x29, x30, [sp, #-48]!
  408c00:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408c04:	ldr	w8, [x8, #3264]
  408c08:	str	x21, [sp, #16]
  408c0c:	stp	x20, x19, [sp, #32]
  408c10:	mov	x29, sp
  408c14:	cbnz	w8, 408c70 <install_default_suffix_rules@@Base+0x74>
  408c18:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  408c1c:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x290>
  408c20:	add	x0, x0, #0x28b
  408c24:	add	x20, x20, #0xe78
  408c28:	mov	w21, #0x9                   	// #9
  408c2c:	bl	42016c <strcache_add@@Base>
  408c30:	bl	40a5f4 <enter_file@@Base>
  408c34:	mov	x19, x0
  408c38:	mov	w0, #0x38                  	// #56
  408c3c:	bl	417888 <xmalloc@@Base>
  408c40:	str	x0, [x19, #32]
  408c44:	str	xzr, [x0]
  408c48:	ldur	x0, [x20, #-8]
  408c4c:	bl	4178d4 <xstrdup@@Base>
  408c50:	ldr	x8, [x19, #32]
  408c54:	stp	x0, xzr, [x8, #24]
  408c58:	strb	w21, [x8, #50]
  408c5c:	ldr	w8, [x19, #136]
  408c60:	orr	w8, w8, #0x10
  408c64:	str	w8, [x19, #136]
  408c68:	ldr	x0, [x20], #16
  408c6c:	cbnz	x0, 408c2c <install_default_suffix_rules@@Base+0x30>
  408c70:	ldp	x20, x19, [sp, #32]
  408c74:	ldr	x21, [sp, #16]
  408c78:	ldp	x29, x30, [sp], #48
  408c7c:	ret

0000000000408c80 <install_default_implicit_rules@@Base>:
  408c80:	stp	x29, x30, [sp, #-32]!
  408c84:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408c88:	ldr	w8, [x8, #3264]
  408c8c:	str	x19, [sp, #16]
  408c90:	mov	x29, sp
  408c94:	cbnz	w8, 408ce8 <install_default_implicit_rules@@Base+0x68>
  408c98:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408c9c:	ldr	x8, [x8, #1208]
  408ca0:	cbz	x8, 408cc0 <install_default_implicit_rules@@Base+0x40>
  408ca4:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  408ca8:	add	x19, x19, #0x4b8
  408cac:	mov	x0, x19
  408cb0:	mov	w1, wzr
  408cb4:	bl	41fa68 <install_pattern_rule@@Base>
  408cb8:	ldr	x8, [x19, #24]!
  408cbc:	cbnz	x8, 408cac <install_default_implicit_rules@@Base+0x2c>
  408cc0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408cc4:	ldr	x8, [x8, #1328]
  408cc8:	cbz	x8, 408ce8 <install_default_implicit_rules@@Base+0x68>
  408ccc:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  408cd0:	add	x19, x19, #0x530
  408cd4:	mov	w1, #0x1                   	// #1
  408cd8:	mov	x0, x19
  408cdc:	bl	41fa68 <install_pattern_rule@@Base>
  408ce0:	ldr	x8, [x19, #24]!
  408ce4:	cbnz	x8, 408cd4 <install_default_implicit_rules@@Base+0x54>
  408ce8:	ldr	x19, [sp, #16]
  408cec:	ldp	x29, x30, [sp], #32
  408cf0:	ret

0000000000408cf4 <define_default_variables@@Base>:
  408cf4:	stp	x29, x30, [sp, #-48]!
  408cf8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408cfc:	ldr	w8, [x8, #3268]
  408d00:	str	x21, [sp, #16]
  408d04:	stp	x20, x19, [sp, #32]
  408d08:	mov	x29, sp
  408d0c:	cbnz	w8, 408d58 <define_default_variables@@Base+0x64>
  408d10:	adrp	x19, 424000 <_IO_stdin_used@@Base+0x290>
  408d14:	adrp	x20, 425000 <_IO_stdin_used@@Base+0x1290>
  408d18:	add	x19, x19, #0x734
  408d1c:	add	x20, x20, #0x198
  408d20:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  408d24:	mov	x0, x19
  408d28:	bl	406790 <strlen@plt>
  408d2c:	ldr	x8, [x21, #2440]
  408d30:	ldur	x2, [x20, #-8]
  408d34:	mov	x1, x0
  408d38:	mov	w4, #0x1                   	// #1
  408d3c:	ldr	x5, [x8, #8]
  408d40:	mov	x0, x19
  408d44:	mov	w3, wzr
  408d48:	mov	x6, xzr
  408d4c:	bl	420860 <define_variable_in_set@@Base>
  408d50:	ldr	x19, [x20], #16
  408d54:	cbnz	x19, 408d24 <define_default_variables@@Base+0x30>
  408d58:	ldp	x20, x19, [sp, #32]
  408d5c:	ldr	x21, [sp, #16]
  408d60:	ldp	x29, x30, [sp], #48
  408d64:	ret

0000000000408d68 <undefine_default_variables@@Base>:
  408d68:	stp	x29, x30, [sp, #-32]!
  408d6c:	stp	x20, x19, [sp, #16]
  408d70:	adrp	x19, 424000 <_IO_stdin_used@@Base+0x290>
  408d74:	adrp	x20, 425000 <_IO_stdin_used@@Base+0x1290>
  408d78:	add	x19, x19, #0x734
  408d7c:	add	x20, x20, #0x198
  408d80:	mov	x29, sp
  408d84:	mov	x0, x19
  408d88:	bl	406790 <strlen@plt>
  408d8c:	mov	x1, x0
  408d90:	mov	x0, x19
  408d94:	mov	w2, wzr
  408d98:	mov	x3, xzr
  408d9c:	bl	420b14 <undefine_variable_in_set@@Base>
  408da0:	ldr	x19, [x20], #16
  408da4:	cbnz	x19, 408d84 <undefine_default_variables@@Base+0x1c>
  408da8:	ldp	x20, x19, [sp, #16]
  408dac:	ldp	x29, x30, [sp], #32
  408db0:	ret

0000000000408db4 <dir_file_exists_p@@Base>:
  408db4:	stp	x29, x30, [sp, #-32]!
  408db8:	str	x19, [sp, #16]
  408dbc:	mov	x29, sp
  408dc0:	mov	x19, x1
  408dc4:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  408dc8:	ldr	x0, [x0, #8]
  408dcc:	mov	x1, x19
  408dd0:	ldr	x19, [sp, #16]
  408dd4:	ldp	x29, x30, [sp], #32
  408dd8:	b	408ddc <dir_file_exists_p@@Base+0x28>
  408ddc:	sub	sp, sp, #0x80
  408de0:	stp	x29, x30, [sp, #32]
  408de4:	stp	x28, x27, [sp, #48]
  408de8:	stp	x26, x25, [sp, #64]
  408dec:	stp	x24, x23, [sp, #80]
  408df0:	stp	x22, x21, [sp, #96]
  408df4:	stp	x20, x19, [sp, #112]
  408df8:	add	x29, sp, #0x20
  408dfc:	cbz	x0, 408f54 <dir_file_exists_p@@Base+0x1a0>
  408e00:	mov	x21, x0
  408e04:	ldr	x8, [x21, #16]!
  408e08:	mov	x19, x0
  408e0c:	cbz	x8, 408f2c <dir_file_exists_p@@Base+0x178>
  408e10:	mov	x20, x1
  408e14:	cbz	x1, 408e50 <dir_file_exists_p@@Base+0x9c>
  408e18:	ldrb	w8, [x20]
  408e1c:	cbz	w8, 408f24 <dir_file_exists_p@@Base+0x170>
  408e20:	mov	x0, x20
  408e24:	str	x20, [sp, #8]
  408e28:	bl	406790 <strlen@plt>
  408e2c:	str	x0, [sp, #16]
  408e30:	add	x1, sp, #0x8
  408e34:	mov	x0, x21
  408e38:	bl	40f63c <hash_find_item@@Base>
  408e3c:	cbz	x0, 408e50 <dir_file_exists_p@@Base+0x9c>
  408e40:	ldrh	w8, [x0, #16]
  408e44:	cmp	w8, #0x0
  408e48:	cset	w0, eq  // eq = none
  408e4c:	b	408f54 <dir_file_exists_p@@Base+0x1a0>
  408e50:	ldr	x8, [x19, #104]
  408e54:	cbz	x8, 408f2c <dir_file_exists_p@@Base+0x178>
  408e58:	bl	406eb0 <__errno_location@plt>
  408e5c:	mov	x22, x0
  408e60:	add	x23, x20, #0x1
  408e64:	str	wzr, [x22]
  408e68:	ldr	x0, [x19, #104]
  408e6c:	bl	406b00 <readdir@plt>
  408e70:	cbnz	x0, 408e88 <dir_file_exists_p@@Base+0xd4>
  408e74:	ldr	w8, [x22]
  408e78:	cbz	w8, 408f34 <dir_file_exists_p@@Base+0x180>
  408e7c:	cmp	w8, #0x4
  408e80:	b.eq	408e64 <dir_file_exists_p@@Base+0xb0>  // b.none
  408e84:	b	408f74 <dir_file_exists_p@@Base+0x1c0>
  408e88:	ldr	x8, [x0]
  408e8c:	mov	x24, x0
  408e90:	cbz	x8, 408e64 <dir_file_exists_p@@Base+0xb0>
  408e94:	add	x25, x24, #0x13
  408e98:	mov	x0, x25
  408e9c:	bl	406790 <strlen@plt>
  408ea0:	mov	x26, x0
  408ea4:	stp	x25, x0, [sp, #8]
  408ea8:	add	x1, sp, #0x8
  408eac:	mov	x0, x21
  408eb0:	bl	40f53c <hash_find_slot@@Base>
  408eb4:	mov	x27, x0
  408eb8:	mov	w0, #0x18                  	// #24
  408ebc:	bl	417888 <xmalloc@@Base>
  408ec0:	mov	x28, x0
  408ec4:	mov	x0, x25
  408ec8:	mov	x1, x26
  408ecc:	bl	4203f8 <strcache_add_len@@Base>
  408ed0:	str	x0, [x28]
  408ed4:	ldrb	w8, [x24, #18]
  408ed8:	mov	x0, x21
  408edc:	mov	x1, x28
  408ee0:	mov	x2, x27
  408ee4:	str	x26, [x28, #8]
  408ee8:	strb	w8, [x28, #18]
  408eec:	strh	wzr, [x28, #16]
  408ef0:	bl	40f668 <hash_insert_at@@Base>
  408ef4:	cbz	x20, 408e64 <dir_file_exists_p@@Base+0xb0>
  408ef8:	cmp	x25, x20
  408efc:	b.eq	408f24 <dir_file_exists_p@@Base+0x170>  // b.none
  408f00:	ldrb	w8, [x25]
  408f04:	ldrb	w9, [x20]
  408f08:	cmp	w8, w9
  408f0c:	b.ne	408e64 <dir_file_exists_p@@Base+0xb0>  // b.any
  408f10:	cbz	w8, 408f24 <dir_file_exists_p@@Base+0x170>
  408f14:	add	x0, x24, #0x14
  408f18:	mov	x1, x23
  408f1c:	bl	406c70 <strcmp@plt>
  408f20:	cbnz	w0, 408e64 <dir_file_exists_p@@Base+0xb0>
  408f24:	mov	w0, #0x1                   	// #1
  408f28:	b	408f54 <dir_file_exists_p@@Base+0x1a0>
  408f2c:	mov	w0, wzr
  408f30:	b	408f54 <dir_file_exists_p@@Base+0x1a0>
  408f34:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408f38:	ldr	w9, [x8, #2776]
  408f3c:	sub	w9, w9, #0x1
  408f40:	str	w9, [x8, #2776]
  408f44:	ldr	x0, [x19, #104]
  408f48:	bl	406b40 <closedir@plt>
  408f4c:	mov	w0, wzr
  408f50:	str	xzr, [x19, #104]
  408f54:	ldp	x20, x19, [sp, #112]
  408f58:	ldp	x22, x21, [sp, #96]
  408f5c:	ldp	x24, x23, [sp, #80]
  408f60:	ldp	x26, x25, [sp, #64]
  408f64:	ldp	x28, x27, [sp, #48]
  408f68:	ldp	x29, x30, [sp, #32]
  408f6c:	add	sp, sp, #0x80
  408f70:	ret
  408f74:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  408f78:	add	x0, x0, #0x666
  408f7c:	bl	417cc8 <pfatal_with_name@@Base>
  408f80:	sub	sp, sp, #0x150
  408f84:	stp	x29, x30, [sp, #256]
  408f88:	add	x29, sp, #0x100
  408f8c:	stp	x20, x19, [sp, #320]
  408f90:	mov	x20, x0
  408f94:	stur	x0, [x29, #-16]
  408f98:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  408f9c:	add	x0, x0, #0xa28
  408fa0:	sub	x1, x29, #0x10
  408fa4:	str	x28, [sp, #272]
  408fa8:	stp	x24, x23, [sp, #288]
  408fac:	stp	x22, x21, [sp, #304]
  408fb0:	bl	40f53c <hash_find_slot@@Base>
  408fb4:	ldr	x19, [x0]
  408fb8:	mov	x21, x0
  408fbc:	cbz	x19, 408fd0 <dir_file_exists_p@@Base+0x21c>
  408fc0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  408fc4:	ldr	x8, [x8, #2344]
  408fc8:	cmp	x8, x19
  408fcc:	b.ne	409114 <dir_file_exists_p@@Base+0x360>  // b.any
  408fd0:	mov	x0, x20
  408fd4:	bl	406790 <strlen@plt>
  408fd8:	mov	x22, x0
  408fdc:	mov	w0, #0x10                  	// #16
  408fe0:	bl	417888 <xmalloc@@Base>
  408fe4:	mov	x19, x0
  408fe8:	mov	x0, x20
  408fec:	mov	x1, x22
  408ff0:	bl	4203f8 <strcache_add_len@@Base>
  408ff4:	str	x0, [x19]
  408ff8:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  408ffc:	add	x0, x0, #0xa28
  409000:	mov	x1, x19
  409004:	mov	x2, x21
  409008:	bl	40f668 <hash_insert_at@@Base>
  40900c:	add	x1, sp, #0x70
  409010:	mov	x0, x20
  409014:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  409018:	cmn	w0, #0x1
  40901c:	b.ne	409034 <dir_file_exists_p@@Base+0x280>  // b.any
  409020:	bl	406eb0 <__errno_location@plt>
  409024:	ldr	w8, [x0]
  409028:	cmp	w8, #0x4
  40902c:	b.eq	40900c <dir_file_exists_p@@Base+0x258>  // b.none
  409030:	b	4090c0 <dir_file_exists_p@@Base+0x30c>
  409034:	tbnz	w0, #31, 4090c0 <dir_file_exists_p@@Base+0x30c>
  409038:	ldp	x23, x24, [sp, #112]
  40903c:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  409040:	add	x0, x0, #0xa80
  409044:	mov	x1, sp
  409048:	stp	x23, x24, [sp]
  40904c:	bl	40f53c <hash_find_slot@@Base>
  409050:	ldr	x21, [x0]
  409054:	mov	x22, x0
  409058:	cbz	x21, 40906c <dir_file_exists_p@@Base+0x2b8>
  40905c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  409060:	ldr	x8, [x8, #2344]
  409064:	cmp	x8, x21
  409068:	b.ne	409110 <dir_file_exists_p@@Base+0x35c>  // b.any
  40906c:	mov	w0, #0x70                  	// #112
  409070:	bl	417888 <xmalloc@@Base>
  409074:	mov	x21, x0
  409078:	stp	x23, x24, [x0]
  40907c:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  409080:	add	x0, x0, #0xa80
  409084:	mov	x1, x21
  409088:	mov	x2, x22
  40908c:	bl	40f668 <hash_insert_at@@Base>
  409090:	bl	406eb0 <__errno_location@plt>
  409094:	mov	x22, x0
  409098:	mov	x0, x20
  40909c:	str	wzr, [x22]
  4090a0:	bl	406860 <opendir@plt>
  4090a4:	str	x0, [x21, #104]
  4090a8:	cbnz	x0, 4090c8 <dir_file_exists_p@@Base+0x314>
  4090ac:	ldr	w8, [x22]
  4090b0:	cmp	w8, #0x4
  4090b4:	b.eq	409098 <dir_file_exists_p@@Base+0x2e4>  // b.none
  4090b8:	str	xzr, [x21, #16]
  4090bc:	b	409110 <dir_file_exists_p@@Base+0x35c>
  4090c0:	str	xzr, [x19, #8]
  4090c4:	b	409114 <dir_file_exists_p@@Base+0x360>
  4090c8:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x24c>
  4090cc:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x24c>
  4090d0:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x24c>
  4090d4:	add	x0, x21, #0x10
  4090d8:	add	x2, x2, #0x31c
  4090dc:	add	x3, x3, #0x338
  4090e0:	add	x4, x4, #0x340
  4090e4:	mov	w1, #0x6b                  	// #107
  4090e8:	bl	40f3e8 <hash_init@@Base>
  4090ec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4090f0:	ldr	w9, [x8, #2776]
  4090f4:	add	w9, w9, #0x1
  4090f8:	cmp	w9, #0xa
  4090fc:	str	w9, [x8, #2776]
  409100:	b.ne	409110 <dir_file_exists_p@@Base+0x35c>  // b.any
  409104:	mov	x0, x21
  409108:	mov	x1, xzr
  40910c:	bl	408ddc <dir_file_exists_p@@Base+0x28>
  409110:	str	x21, [x19, #8]
  409114:	mov	x0, x19
  409118:	ldp	x20, x19, [sp, #320]
  40911c:	ldp	x22, x21, [sp, #304]
  409120:	ldp	x24, x23, [sp, #288]
  409124:	ldr	x28, [sp, #272]
  409128:	ldp	x29, x30, [sp, #256]
  40912c:	add	sp, sp, #0x150
  409130:	ret

0000000000409134 <file_exists_p@@Base>:
  409134:	stp	x29, x30, [sp, #-48]!
  409138:	stp	x22, x21, [sp, #16]
  40913c:	stp	x20, x19, [sp, #32]
  409140:	mov	x29, sp
  409144:	mov	x19, x0
  409148:	bl	40706c <ar_name@@Base>
  40914c:	cbz	w0, 409164 <file_exists_p@@Base+0x30>
  409150:	mov	x0, x19
  409154:	bl	407170 <ar_member_date@@Base>
  409158:	cmn	x0, #0x1
  40915c:	cset	w0, ne  // ne = any
  409160:	b	4091f4 <file_exists_p@@Base+0xc0>
  409164:	mov	w1, #0x2f                  	// #47
  409168:	mov	x0, x19
  40916c:	bl	406b80 <strrchr@plt>
  409170:	cbz	x0, 4091ac <file_exists_p@@Base+0x78>
  409174:	mov	x20, x0
  409178:	subs	x22, x0, x19
  40917c:	b.eq	4091d4 <file_exists_p@@Base+0xa0>  // b.none
  409180:	add	x8, x22, #0x10
  409184:	and	x8, x8, #0xfffffffffffffff0
  409188:	mov	x9, sp
  40918c:	sub	x21, x9, x8
  409190:	mov	sp, x21
  409194:	mov	x0, x21
  409198:	mov	x1, x19
  40919c:	mov	x2, x22
  4091a0:	bl	406750 <memcpy@plt>
  4091a4:	strb	wzr, [x21, x22]
  4091a8:	b	4091dc <file_exists_p@@Base+0xa8>
  4091ac:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4091b0:	add	x0, x0, #0x6fe
  4091b4:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  4091b8:	ldr	x0, [x0, #8]
  4091bc:	mov	x1, x19
  4091c0:	mov	sp, x29
  4091c4:	ldp	x20, x19, [sp, #32]
  4091c8:	ldp	x22, x21, [sp, #16]
  4091cc:	ldp	x29, x30, [sp], #48
  4091d0:	b	408ddc <dir_file_exists_p@@Base+0x28>
  4091d4:	adrp	x21, 425000 <_IO_stdin_used@@Base+0x1290>
  4091d8:	add	x21, x21, #0x6f7
  4091dc:	mov	x0, x21
  4091e0:	add	x19, x20, #0x1
  4091e4:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  4091e8:	ldr	x0, [x0, #8]
  4091ec:	mov	x1, x19
  4091f0:	bl	408ddc <dir_file_exists_p@@Base+0x28>
  4091f4:	mov	sp, x29
  4091f8:	ldp	x20, x19, [sp, #32]
  4091fc:	ldp	x22, x21, [sp, #16]
  409200:	ldp	x29, x30, [sp], #48
  409204:	ret

0000000000409208 <file_impossible@@Base>:
  409208:	stp	x29, x30, [sp, #-48]!
  40920c:	mov	w1, #0x2f                  	// #47
  409210:	stp	x22, x21, [sp, #16]
  409214:	stp	x20, x19, [sp, #32]
  409218:	mov	x29, sp
  40921c:	mov	x19, x0
  409220:	bl	406b80 <strrchr@plt>
  409224:	cbz	x0, 409260 <file_impossible@@Base+0x58>
  409228:	mov	x21, x0
  40922c:	subs	x22, x0, x19
  409230:	b.eq	409274 <file_impossible@@Base+0x6c>  // b.none
  409234:	add	x8, x22, #0x10
  409238:	and	x8, x8, #0xfffffffffffffff0
  40923c:	mov	x9, sp
  409240:	sub	x20, x9, x8
  409244:	mov	sp, x20
  409248:	mov	x0, x20
  40924c:	mov	x1, x19
  409250:	mov	x2, x22
  409254:	bl	406750 <memcpy@plt>
  409258:	strb	wzr, [x20, x22]
  40925c:	b	40927c <file_impossible@@Base+0x74>
  409260:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  409264:	add	x0, x0, #0x6fe
  409268:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  40926c:	mov	x20, x0
  409270:	b	40928c <file_impossible@@Base+0x84>
  409274:	adrp	x20, 425000 <_IO_stdin_used@@Base+0x1290>
  409278:	add	x20, x20, #0x6f7
  40927c:	mov	x0, x20
  409280:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  409284:	mov	x20, x0
  409288:	add	x19, x21, #0x1
  40928c:	ldr	x0, [x20, #8]
  409290:	cbnz	x0, 4092a0 <file_impossible@@Base+0x98>
  409294:	mov	w0, #0x70                  	// #112
  409298:	bl	4178ac <xcalloc@@Base>
  40929c:	str	x0, [x20, #8]
  4092a0:	ldr	x8, [x0, #16]!
  4092a4:	cbnz	x8, 4092c8 <file_impossible@@Base+0xc0>
  4092a8:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x24c>
  4092ac:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x24c>
  4092b0:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x24c>
  4092b4:	add	x2, x2, #0x31c
  4092b8:	add	x3, x3, #0x338
  4092bc:	add	x4, x4, #0x340
  4092c0:	mov	w1, #0x6b                  	// #107
  4092c4:	bl	40f3e8 <hash_init@@Base>
  4092c8:	mov	w0, #0x18                  	// #24
  4092cc:	bl	417888 <xmalloc@@Base>
  4092d0:	mov	x21, x0
  4092d4:	mov	x0, x19
  4092d8:	bl	406790 <strlen@plt>
  4092dc:	mov	x1, x0
  4092e0:	str	x0, [x21, #8]
  4092e4:	mov	x0, x19
  4092e8:	bl	4203f8 <strcache_add_len@@Base>
  4092ec:	mov	w8, #0x1                   	// #1
  4092f0:	str	x0, [x21]
  4092f4:	strh	w8, [x21, #16]
  4092f8:	ldr	x8, [x20, #8]
  4092fc:	mov	x1, x21
  409300:	add	x0, x8, #0x10
  409304:	bl	40f4e8 <hash_insert@@Base>
  409308:	mov	sp, x29
  40930c:	ldp	x20, x19, [sp, #32]
  409310:	ldp	x22, x21, [sp, #16]
  409314:	ldp	x29, x30, [sp], #48
  409318:	ret
  40931c:	stp	x29, x30, [sp, #-16]!
  409320:	ldr	x0, [x0]
  409324:	mov	x29, sp
  409328:	bl	40fcd8 <jhash_string@@Base>
  40932c:	mov	w0, w0
  409330:	ldp	x29, x30, [sp], #16
  409334:	ret
  409338:	mov	x0, xzr
  40933c:	ret
  409340:	ldr	w9, [x0, #8]
  409344:	ldr	w10, [x1, #8]
  409348:	mov	x8, x0
  40934c:	subs	w0, w9, w10
  409350:	b.eq	409358 <file_impossible@@Base+0x150>  // b.none
  409354:	ret
  409358:	ldr	x0, [x8]
  40935c:	ldr	x1, [x1]
  409360:	cmp	x0, x1
  409364:	b.eq	40936c <file_impossible@@Base+0x164>  // b.none
  409368:	b	406c70 <strcmp@plt>
  40936c:	mov	w0, wzr
  409370:	ret

0000000000409374 <file_impossible_p@@Base>:
  409374:	stp	x29, x30, [sp, #-48]!
  409378:	stp	x22, x21, [sp, #16]
  40937c:	stp	x20, x19, [sp, #32]
  409380:	mov	x29, sp
  409384:	sub	sp, sp, #0x20
  409388:	mov	w1, #0x2f                  	// #47
  40938c:	mov	x19, x0
  409390:	bl	406b80 <strrchr@plt>
  409394:	cbz	x0, 4093d0 <file_impossible_p@@Base+0x5c>
  409398:	mov	x20, x0
  40939c:	subs	x22, x0, x19
  4093a0:	b.eq	4093e0 <file_impossible_p@@Base+0x6c>  // b.none
  4093a4:	add	x8, x22, #0x10
  4093a8:	and	x8, x8, #0xfffffffffffffff0
  4093ac:	mov	x9, sp
  4093b0:	sub	x21, x9, x8
  4093b4:	mov	sp, x21
  4093b8:	mov	x0, x21
  4093bc:	mov	x1, x19
  4093c0:	mov	x2, x22
  4093c4:	bl	406750 <memcpy@plt>
  4093c8:	strb	wzr, [x21, x22]
  4093cc:	b	4093e8 <file_impossible_p@@Base+0x74>
  4093d0:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4093d4:	add	x0, x0, #0x6fe
  4093d8:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  4093dc:	b	4093f4 <file_impossible_p@@Base+0x80>
  4093e0:	adrp	x21, 425000 <_IO_stdin_used@@Base+0x1290>
  4093e4:	add	x21, x21, #0x6f7
  4093e8:	mov	x0, x21
  4093ec:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  4093f0:	add	x19, x20, #0x1
  4093f4:	ldr	x20, [x0, #8]
  4093f8:	cbz	x20, 40942c <file_impossible_p@@Base+0xb8>
  4093fc:	ldr	x8, [x20, #16]!
  409400:	cbz	x8, 40942c <file_impossible_p@@Base+0xb8>
  409404:	mov	x0, x19
  409408:	stur	x19, [x29, #-24]
  40940c:	bl	406790 <strlen@plt>
  409410:	stur	x0, [x29, #-16]
  409414:	sub	x1, x29, #0x18
  409418:	mov	x0, x20
  40941c:	bl	40f63c <hash_find_item@@Base>
  409420:	cbz	x0, 409430 <file_impossible_p@@Base+0xbc>
  409424:	ldrsh	w0, [x0, #16]
  409428:	b	409430 <file_impossible_p@@Base+0xbc>
  40942c:	mov	w0, wzr
  409430:	mov	sp, x29
  409434:	ldp	x20, x19, [sp, #32]
  409438:	ldp	x22, x21, [sp, #16]
  40943c:	ldp	x29, x30, [sp], #48
  409440:	ret

0000000000409444 <dir_name@@Base>:
  409444:	stp	x29, x30, [sp, #-16]!
  409448:	mov	x29, sp
  40944c:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  409450:	ldr	x0, [x0]
  409454:	ldp	x29, x30, [sp], #16
  409458:	ret

000000000040945c <print_dir_data_base@@Base>:
  40945c:	stp	x29, x30, [sp, #-96]!
  409460:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409464:	add	x1, x1, #0x598
  409468:	mov	w2, #0x5                   	// #5
  40946c:	mov	x0, xzr
  409470:	stp	x28, x27, [sp, #16]
  409474:	stp	x26, x25, [sp, #32]
  409478:	stp	x24, x23, [sp, #48]
  40947c:	stp	x22, x21, [sp, #64]
  409480:	stp	x20, x19, [sp, #80]
  409484:	mov	x29, sp
  409488:	bl	406e10 <dcgettext@plt>
  40948c:	bl	406c00 <puts@plt>
  409490:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  409494:	add	x9, x9, #0xa28
  409498:	ldr	x8, [x9, #32]
  40949c:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  4094a0:	cmp	x8, #0x1
  4094a4:	b.lt	4096a4 <print_dir_data_base@@Base+0x248>  // b.tstop
  4094a8:	ldr	x21, [x9]
  4094ac:	adrp	x24, 429000 <_IO_stdin_used@@Base+0x5290>
  4094b0:	mov	w20, wzr
  4094b4:	mov	w19, wzr
  4094b8:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  4094bc:	add	x25, x21, x8, lsl #3
  4094c0:	add	x24, x24, #0x7e6
  4094c4:	ldr	x27, [x21]
  4094c8:	cbz	x27, 409670 <print_dir_data_base@@Base+0x214>
  4094cc:	ldr	x8, [x23, #2344]
  4094d0:	cmp	x8, x27
  4094d4:	b.eq	409670 <print_dir_data_base@@Base+0x214>  // b.none
  4094d8:	ldr	x10, [x27, #8]
  4094dc:	cbz	x10, 409534 <print_dir_data_base@@Base+0xd8>
  4094e0:	ldr	x9, [x10, #16]
  4094e4:	cbz	x9, 409554 <print_dir_data_base@@Base+0xf8>
  4094e8:	ldr	x10, [x10, #48]
  4094ec:	cmp	x10, #0x1
  4094f0:	b.lt	409578 <print_dir_data_base@@Base+0x11c>  // b.tstop
  4094f4:	mov	w26, wzr
  4094f8:	mov	w22, wzr
  4094fc:	add	x10, x9, x10, lsl #3
  409500:	ldr	x11, [x9]
  409504:	cbz	x11, 409524 <print_dir_data_base@@Base+0xc8>
  409508:	cmp	x8, x11
  40950c:	b.eq	409524 <print_dir_data_base@@Base+0xc8>  // b.none
  409510:	ldrh	w11, [x11, #16]
  409514:	cbz	w11, 409520 <print_dir_data_base@@Base+0xc4>
  409518:	add	w26, w26, #0x1
  40951c:	b	409524 <print_dir_data_base@@Base+0xc8>
  409520:	add	w22, w22, #0x1
  409524:	add	x9, x9, #0x8
  409528:	cmp	x9, x10
  40952c:	b.cc	409500 <print_dir_data_base@@Base+0xa4>  // b.lo, b.ul, b.last
  409530:	b	409580 <print_dir_data_base@@Base+0x124>
  409534:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409538:	mov	w2, #0x5                   	// #5
  40953c:	mov	x0, xzr
  409540:	add	x1, x1, #0x5a8
  409544:	bl	406e10 <dcgettext@plt>
  409548:	ldr	x1, [x27]
  40954c:	bl	406ea0 <printf@plt>
  409550:	b	409670 <print_dir_data_base@@Base+0x214>
  409554:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409558:	mov	w2, #0x5                   	// #5
  40955c:	mov	x0, xzr
  409560:	add	x1, x1, #0x5c4
  409564:	bl	406e10 <dcgettext@plt>
  409568:	ldp	x1, x8, [x27]
  40956c:	ldp	x2, x3, [x8]
  409570:	bl	406ea0 <printf@plt>
  409574:	b	409670 <print_dir_data_base@@Base+0x214>
  409578:	mov	w22, wzr
  40957c:	mov	w26, wzr
  409580:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409584:	mov	w2, #0x5                   	// #5
  409588:	mov	x0, xzr
  40958c:	add	x1, x1, #0x5f8
  409590:	bl	406e10 <dcgettext@plt>
  409594:	ldp	x1, x8, [x27]
  409598:	ldp	x2, x3, [x8]
  40959c:	bl	406ea0 <printf@plt>
  4095a0:	cbz	w22, 4095b4 <print_dir_data_base@@Base+0x158>
  4095a4:	mov	x0, x24
  4095a8:	mov	w1, w22
  4095ac:	bl	406ea0 <printf@plt>
  4095b0:	b	4095d0 <print_dir_data_base@@Base+0x174>
  4095b4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  4095b8:	mov	w2, #0x5                   	// #5
  4095bc:	mov	x0, xzr
  4095c0:	add	x1, x1, #0x617
  4095c4:	bl	406e10 <dcgettext@plt>
  4095c8:	ldr	x1, [x28, #2512]
  4095cc:	bl	4067a0 <fputs@plt>
  4095d0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  4095d4:	mov	w2, #0x5                   	// #5
  4095d8:	mov	x0, xzr
  4095dc:	add	x1, x1, #0x61a
  4095e0:	bl	406e10 <dcgettext@plt>
  4095e4:	ldr	x1, [x28, #2512]
  4095e8:	bl	4067a0 <fputs@plt>
  4095ec:	cbz	w26, 409600 <print_dir_data_base@@Base+0x1a4>
  4095f0:	mov	x0, x24
  4095f4:	mov	w1, w26
  4095f8:	bl	406ea0 <printf@plt>
  4095fc:	b	40961c <print_dir_data_base@@Base+0x1c0>
  409600:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409604:	mov	w2, #0x5                   	// #5
  409608:	mov	x0, xzr
  40960c:	add	x1, x1, #0x623
  409610:	bl	406e10 <dcgettext@plt>
  409614:	ldr	x1, [x28, #2512]
  409618:	bl	4067a0 <fputs@plt>
  40961c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409620:	mov	w2, #0x5                   	// #5
  409624:	mov	x0, xzr
  409628:	add	x1, x1, #0x626
  40962c:	bl	406e10 <dcgettext@plt>
  409630:	ldr	x1, [x28, #2512]
  409634:	bl	4067a0 <fputs@plt>
  409638:	ldr	x8, [x27, #8]
  40963c:	ldr	x8, [x8, #104]
  409640:	cbz	x8, 40965c <print_dir_data_base@@Base+0x200>
  409644:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409648:	mov	w2, #0x5                   	// #5
  40964c:	mov	x0, xzr
  409650:	add	x1, x1, #0x637
  409654:	bl	406e10 <dcgettext@plt>
  409658:	b	409664 <print_dir_data_base@@Base+0x208>
  40965c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  409660:	add	x0, x0, #0x6fe
  409664:	bl	406c00 <puts@plt>
  409668:	add	w20, w22, w20
  40966c:	add	w19, w26, w19
  409670:	add	x21, x21, #0x8
  409674:	cmp	x21, x25
  409678:	b.cc	4094c4 <print_dir_data_base@@Base+0x68>  // b.lo, b.ul, b.last
  40967c:	ldr	x1, [x28, #2512]
  409680:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  409684:	add	x0, x0, #0xcff
  409688:	bl	4067a0 <fputs@plt>
  40968c:	cbz	w20, 4096b8 <print_dir_data_base@@Base+0x25c>
  409690:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  409694:	add	x0, x0, #0x7e6
  409698:	mov	w1, w20
  40969c:	bl	406ea0 <printf@plt>
  4096a0:	b	4096d4 <print_dir_data_base@@Base+0x278>
  4096a4:	ldr	x1, [x28, #2512]
  4096a8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4096ac:	add	x0, x0, #0xcff
  4096b0:	bl	4067a0 <fputs@plt>
  4096b4:	mov	w19, wzr
  4096b8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  4096bc:	add	x1, x1, #0x617
  4096c0:	mov	w2, #0x5                   	// #5
  4096c4:	mov	x0, xzr
  4096c8:	bl	406e10 <dcgettext@plt>
  4096cc:	ldr	x1, [x28, #2512]
  4096d0:	bl	4067a0 <fputs@plt>
  4096d4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  4096d8:	add	x1, x1, #0x61a
  4096dc:	mov	w2, #0x5                   	// #5
  4096e0:	mov	x0, xzr
  4096e4:	bl	406e10 <dcgettext@plt>
  4096e8:	ldr	x1, [x28, #2512]
  4096ec:	bl	4067a0 <fputs@plt>
  4096f0:	cbz	w19, 409708 <print_dir_data_base@@Base+0x2ac>
  4096f4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4096f8:	add	x0, x0, #0x7e6
  4096fc:	mov	w1, w19
  409700:	bl	406ea0 <printf@plt>
  409704:	b	409724 <print_dir_data_base@@Base+0x2c8>
  409708:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40970c:	add	x1, x1, #0x623
  409710:	mov	w2, #0x5                   	// #5
  409714:	mov	x0, xzr
  409718:	bl	406e10 <dcgettext@plt>
  40971c:	ldr	x1, [x28, #2512]
  409720:	bl	4067a0 <fputs@plt>
  409724:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409728:	add	x1, x1, #0x640
  40972c:	mov	w2, #0x5                   	// #5
  409730:	mov	x0, xzr
  409734:	bl	406e10 <dcgettext@plt>
  409738:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40973c:	ldr	x1, [x8, #2648]
  409740:	ldp	x20, x19, [sp, #80]
  409744:	ldp	x22, x21, [sp, #64]
  409748:	ldp	x24, x23, [sp, #48]
  40974c:	ldp	x26, x25, [sp, #32]
  409750:	ldp	x28, x27, [sp, #16]
  409754:	ldp	x29, x30, [sp], #96
  409758:	b	406ea0 <printf@plt>

000000000040975c <dir_setup_glob@@Base>:
  40975c:	adrp	x8, 409000 <dir_file_exists_p@@Base+0x24c>
  409760:	adrp	x9, 409000 <dir_file_exists_p@@Base+0x24c>
  409764:	adrp	x10, 406000 <memcpy@plt-0x750>
  409768:	adrp	x11, 423000 <fd_noinherit@@Base+0x38>
  40976c:	adrp	x12, 423000 <fd_noinherit@@Base+0x38>
  409770:	add	x8, x8, #0x798
  409774:	add	x9, x9, #0x7f0
  409778:	add	x10, x10, #0xcb0
  40977c:	add	x11, x11, #0xd50
  409780:	add	x12, x12, #0xd30
  409784:	str	xzr, [x0, #16]
  409788:	stp	x10, x9, [x0, #32]
  40978c:	stp	x8, x11, [x0, #48]
  409790:	str	x12, [x0, #64]
  409794:	ret
  409798:	stp	x29, x30, [sp, #-32]!
  40979c:	str	x19, [sp, #16]
  4097a0:	mov	x29, sp
  4097a4:	bl	408f80 <dir_file_exists_p@@Base+0x1cc>
  4097a8:	mov	x19, x0
  4097ac:	ldr	x0, [x0, #8]
  4097b0:	cbz	x0, 4097e4 <dir_setup_glob@@Base+0x88>
  4097b4:	ldr	x8, [x0, #16]
  4097b8:	cbz	x8, 4097e0 <dir_setup_glob@@Base+0x84>
  4097bc:	mov	x1, xzr
  4097c0:	bl	408ddc <dir_file_exists_p@@Base+0x28>
  4097c4:	mov	w0, #0x10                  	// #16
  4097c8:	bl	417888 <xmalloc@@Base>
  4097cc:	ldr	x8, [x19, #8]
  4097d0:	str	x8, [x0]
  4097d4:	ldr	x8, [x8, #16]
  4097d8:	str	x8, [x0, #8]
  4097dc:	b	4097e4 <dir_setup_glob@@Base+0x88>
  4097e0:	mov	x0, xzr
  4097e4:	ldr	x19, [sp, #16]
  4097e8:	ldp	x29, x30, [sp], #32
  4097ec:	ret
  4097f0:	stp	x29, x30, [sp, #-48]!
  4097f4:	stp	x22, x21, [sp, #16]
  4097f8:	stp	x20, x19, [sp, #32]
  4097fc:	ldp	x9, x8, [x0]
  409800:	mov	x29, sp
  409804:	ldr	x10, [x9, #16]
  409808:	ldr	x9, [x9, #48]
  40980c:	add	x9, x10, x9, lsl #3
  409810:	cmp	x8, x9
  409814:	b.cs	40984c <dir_setup_glob@@Base+0xf0>  // b.hs, b.nlast
  409818:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40981c:	ldr	x10, [x10, #2344]
  409820:	mov	x11, x8
  409824:	add	x8, x8, #0x8
  409828:	str	x8, [x0, #8]
  40982c:	ldr	x21, [x11]
  409830:	cbz	x21, 409844 <dir_setup_glob@@Base+0xe8>
  409834:	cmp	x10, x21
  409838:	b.eq	409844 <dir_setup_glob@@Base+0xe8>  // b.none
  40983c:	ldrh	w11, [x21, #16]
  409840:	cbz	w11, 409864 <dir_setup_glob@@Base+0x108>
  409844:	cmp	x8, x9
  409848:	b.cc	409820 <dir_setup_glob@@Base+0xc4>  // b.lo, b.ul, b.last
  40984c:	mov	x20, xzr
  409850:	mov	x0, x20
  409854:	ldp	x20, x19, [sp, #32]
  409858:	ldp	x22, x21, [sp, #16]
  40985c:	ldp	x29, x30, [sp], #48
  409860:	ret
  409864:	ldr	x11, [x21, #8]
  409868:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40986c:	ldr	x10, [x8, #2792]
  409870:	add	x9, x11, #0x19
  409874:	add	x19, x11, #0x1
  409878:	cmp	x9, x10
  40987c:	b.ls	4098a8 <dir_setup_glob@@Base+0x14c>  // b.plast
  409880:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  409884:	ldr	x0, [x22, #2784]
  409888:	lsl	x11, x10, #1
  40988c:	cmp	x9, x10, lsl #1
  409890:	csel	x1, x9, x11, hi  // hi = pmore
  409894:	str	x1, [x8, #2792]
  409898:	bl	417854 <xrealloc@@Base>
  40989c:	mov	x20, x0
  4098a0:	str	x0, [x22, #2784]
  4098a4:	b	4098b0 <dir_setup_glob@@Base+0x154>
  4098a8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4098ac:	ldr	x20, [x8, #2784]
  4098b0:	mov	w8, #0x1                   	// #1
  4098b4:	str	x8, [x20]
  4098b8:	ldrb	w8, [x21, #18]
  4098bc:	add	x0, x20, #0x13
  4098c0:	mov	x2, x19
  4098c4:	strb	w8, [x20, #18]
  4098c8:	ldr	x1, [x21]
  4098cc:	bl	406750 <memcpy@plt>
  4098d0:	b	409850 <dir_setup_glob@@Base+0xf4>

00000000004098d4 <hash_init_directories@@Base>:
  4098d4:	stp	x29, x30, [sp, #-16]!
  4098d8:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  4098dc:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x24c>
  4098e0:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x24c>
  4098e4:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x24c>
  4098e8:	add	x0, x0, #0xa28
  4098ec:	add	x2, x2, #0x930
  4098f0:	add	x3, x3, #0x94c
  4098f4:	add	x4, x4, #0x954
  4098f8:	mov	w1, #0xc7                  	// #199
  4098fc:	mov	x29, sp
  409900:	bl	40f3e8 <hash_init@@Base>
  409904:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  409908:	adrp	x2, 409000 <dir_file_exists_p@@Base+0x24c>
  40990c:	adrp	x3, 409000 <dir_file_exists_p@@Base+0x24c>
  409910:	adrp	x4, 409000 <dir_file_exists_p@@Base+0x24c>
  409914:	add	x0, x0, #0xa80
  409918:	add	x2, x2, #0x970
  40991c:	add	x3, x3, #0x980
  409920:	add	x4, x4, #0x990
  409924:	mov	w1, #0xc7                  	// #199
  409928:	ldp	x29, x30, [sp], #16
  40992c:	b	40f3e8 <hash_init@@Base>
  409930:	stp	x29, x30, [sp, #-16]!
  409934:	ldr	x0, [x0]
  409938:	mov	x29, sp
  40993c:	bl	40fcd8 <jhash_string@@Base>
  409940:	mov	w0, w0
  409944:	ldp	x29, x30, [sp], #16
  409948:	ret
  40994c:	mov	x0, xzr
  409950:	ret
  409954:	ldr	x0, [x0]
  409958:	ldr	x1, [x1]
  40995c:	cmp	x0, x1
  409960:	b.eq	409968 <hash_init_directories@@Base+0x94>  // b.none
  409964:	b	406c70 <strcmp@plt>
  409968:	mov	w0, wzr
  40996c:	ret
  409970:	ldr	w8, [x0]
  409974:	ldr	w9, [x0, #8]
  409978:	eor	w0, w9, w8, lsl #4
  40997c:	ret
  409980:	ldr	w8, [x0]
  409984:	ldr	w9, [x0, #8]
  409988:	eon	w0, w9, w8, lsl #4
  40998c:	ret
  409990:	ldr	x8, [x0, #8]
  409994:	ldr	x9, [x1, #8]
  409998:	cmp	x8, x9
  40999c:	cset	w8, ne  // ne = any
  4099a0:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  4099a4:	cbnz	w8, 4099bc <hash_init_directories@@Base+0xe8>
  4099a8:	ldr	x8, [x0]
  4099ac:	ldr	x9, [x1]
  4099b0:	cmp	x8, x9
  4099b4:	cset	w8, ne  // ne = any
  4099b8:	csinv	w8, w8, wzr, cs  // cs = hs, nlast
  4099bc:	mov	w0, w8
  4099c0:	ret

00000000004099c4 <variable_buffer_output@@Base>:
  4099c4:	stp	x29, x30, [sp, #-64]!
  4099c8:	stp	x22, x21, [sp, #32]
  4099cc:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  4099d0:	mov	x21, x0
  4099d4:	ldr	x0, [x22, #4040]
  4099d8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4099dc:	ldr	x9, [x8, #2800]
  4099e0:	str	x23, [sp, #16]
  4099e4:	sub	x23, x21, x0
  4099e8:	add	x10, x23, x2
  4099ec:	add	x11, x10, #0x5
  4099f0:	stp	x20, x19, [sp, #48]
  4099f4:	mov	x19, x2
  4099f8:	cmp	x11, x9
  4099fc:	mov	x20, x1
  409a00:	mov	x29, sp
  409a04:	b.ls	409a28 <variable_buffer_output@@Base+0x64>  // b.plast
  409a08:	add	x10, x10, #0x64
  409a0c:	lsl	x11, x9, #1
  409a10:	cmp	x10, x9, lsl #1
  409a14:	csel	x1, x10, x11, hi  // hi = pmore
  409a18:	str	x1, [x8, #2800]
  409a1c:	bl	417854 <xrealloc@@Base>
  409a20:	add	x21, x0, x23
  409a24:	str	x0, [x22, #4040]
  409a28:	mov	x0, x21
  409a2c:	mov	x1, x20
  409a30:	mov	x2, x19
  409a34:	bl	406750 <memcpy@plt>
  409a38:	add	x0, x21, x19
  409a3c:	ldp	x20, x19, [sp, #48]
  409a40:	ldp	x22, x21, [sp, #32]
  409a44:	ldr	x23, [sp, #16]
  409a48:	ldp	x29, x30, [sp], #64
  409a4c:	ret

0000000000409a50 <recursively_expand_for_file@@Base>:
  409a50:	sub	sp, sp, #0x70
  409a54:	stp	x29, x30, [sp, #16]
  409a58:	stp	x28, x27, [sp, #32]
  409a5c:	stp	x26, x25, [sp, #48]
  409a60:	stp	x24, x23, [sp, #64]
  409a64:	stp	x22, x21, [sp, #80]
  409a68:	stp	x20, x19, [sp, #96]
  409a6c:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  409a70:	mov	x8, x0
  409a74:	ldr	x26, [x21, #1472]
  409a78:	ldr	x9, [x8, #16]!
  409a7c:	mov	x19, x0
  409a80:	mov	x20, x1
  409a84:	add	x29, sp, #0x10
  409a88:	cbz	x9, 409a9c <recursively_expand_for_file@@Base+0x4c>
  409a8c:	add	x9, sp, #0x8
  409a90:	str	x8, [sp, #8]
  409a94:	str	x9, [x21, #1472]
  409a98:	b	409aa0 <recursively_expand_for_file@@Base+0x50>
  409a9c:	mov	x9, x26
  409aa0:	adrp	x11, 43e000 <stdio_traced@@Base+0x1a38>
  409aa4:	ldr	x10, [x11, #1552]
  409aa8:	cbz	x10, 409ab4 <recursively_expand_for_file@@Base+0x64>
  409aac:	mov	w25, wzr
  409ab0:	b	409abc <recursively_expand_for_file@@Base+0x6c>
  409ab4:	mov	w25, #0x1                   	// #1
  409ab8:	str	x8, [x11, #1552]
  409abc:	ldr	w8, [x19, #44]
  409ac0:	tbz	w8, #6, 409ae0 <recursively_expand_for_file@@Base+0x90>
  409ac4:	tst	w8, #0x7fff00
  409ac8:	b.eq	409bc8 <recursively_expand_for_file@@Base+0x178>  // b.none
  409acc:	mov	w9, #0x7fff00              	// #8388352
  409ad0:	add	w9, w8, w9
  409ad4:	lsr	w9, w9, #8
  409ad8:	bfi	w8, w9, #8, #15
  409adc:	str	w8, [x19, #44]
  409ae0:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  409ae4:	cbz	x20, 409af8 <recursively_expand_for_file@@Base+0xa8>
  409ae8:	ldr	x9, [x20, #80]
  409aec:	ldr	x27, [x10, #2440]
  409af0:	str	x9, [x10, #2440]
  409af4:	b	409afc <recursively_expand_for_file@@Base+0xac>
  409af8:	mov	x27, xzr
  409afc:	orr	w9, w8, #0x40
  409b00:	adrp	x28, 43e000 <stdio_traced@@Base+0x1a38>
  409b04:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  409b08:	str	w9, [x19, #44]
  409b0c:	tbnz	w8, #1, 409b30 <recursively_expand_for_file@@Base+0xe0>
  409b10:	ldr	x1, [x19, #8]
  409b14:	ldr	x22, [x28, #4040]
  409b18:	ldr	x23, [x24, #2800]
  409b1c:	mov	x2, #0xffffffffffffffff    	// #-1
  409b20:	mov	x0, xzr
  409b24:	str	xzr, [x28, #4040]
  409b28:	bl	409c40 <variable_expand_string@@Base>
  409b2c:	b	409b78 <recursively_expand_for_file@@Base+0x128>
  409b30:	ldr	x22, [x28, #4040]
  409b34:	str	xzr, [x28, #4040]
  409b38:	ldr	x21, [x19]
  409b3c:	ldr	x23, [x24, #2800]
  409b40:	mov	x0, x21
  409b44:	bl	406790 <strlen@plt>
  409b48:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  409b4c:	ldr	x2, [x8, #2440]
  409b50:	mov	x1, x0
  409b54:	mov	w3, #0x1                   	// #1
  409b58:	mov	x0, x21
  409b5c:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  409b60:	bl	40a3fc <restore_variable_buffer@@Base+0x44>
  409b64:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  409b68:	add	x1, x1, #0x5eb
  409b6c:	mov	w2, #0x1                   	// #1
  409b70:	bl	4099c4 <variable_buffer_output@@Base>
  409b74:	ldr	x0, [x28, #4040]
  409b78:	str	x22, [x28, #4040]
  409b7c:	str	x23, [x24, #2800]
  409b80:	ldr	w8, [x19, #44]
  409b84:	and	w8, w8, #0xffffffbf
  409b88:	str	w8, [x19, #44]
  409b8c:	cbz	w25, 409b98 <recursively_expand_for_file@@Base+0x148>
  409b90:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  409b94:	str	xzr, [x8, #1552]
  409b98:	cbz	x20, 409ba4 <recursively_expand_for_file@@Base+0x154>
  409b9c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  409ba0:	str	x27, [x8, #2440]
  409ba4:	str	x26, [x21, #1472]
  409ba8:	ldp	x20, x19, [sp, #96]
  409bac:	ldp	x22, x21, [sp, #80]
  409bb0:	ldp	x24, x23, [sp, #64]
  409bb4:	ldp	x26, x25, [sp, #48]
  409bb8:	ldp	x28, x27, [sp, #32]
  409bbc:	ldp	x29, x30, [sp, #16]
  409bc0:	add	sp, sp, #0x70
  409bc4:	ret
  409bc8:	ldr	x0, [x19]
  409bcc:	ldr	x20, [x9]
  409bd0:	bl	406790 <strlen@plt>
  409bd4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409bd8:	mov	x21, x0
  409bdc:	add	x1, x1, #0x678
  409be0:	mov	w2, #0x5                   	// #5
  409be4:	mov	x0, xzr
  409be8:	bl	406e10 <dcgettext@plt>
  409bec:	ldr	x3, [x19]
  409bf0:	mov	x2, x0
  409bf4:	mov	x0, x20
  409bf8:	mov	x1, x21
  409bfc:	bl	4188bc <fatal@@Base>

0000000000409c00 <allocated_variable_expand_for_file@@Base>:
  409c00:	stp	x29, x30, [sp, #-48]!
  409c04:	stp	x20, x19, [sp, #32]
  409c08:	adrp	x19, 43e000 <stdio_traced@@Base+0x1a38>
  409c0c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  409c10:	stp	x22, x21, [sp, #16]
  409c14:	ldr	x21, [x19, #4040]
  409c18:	ldr	x22, [x20, #2800]
  409c1c:	mov	x29, sp
  409c20:	str	xzr, [x19, #4040]
  409c24:	bl	40a2ec <variable_expand_for_file@@Base>
  409c28:	str	x21, [x19, #4040]
  409c2c:	str	x22, [x20, #2800]
  409c30:	ldp	x20, x19, [sp, #32]
  409c34:	ldp	x22, x21, [sp, #16]
  409c38:	ldp	x29, x30, [sp], #48
  409c3c:	ret

0000000000409c40 <variable_expand_string@@Base>:
  409c40:	stp	x29, x30, [sp, #-96]!
  409c44:	stp	x28, x27, [sp, #16]
  409c48:	stp	x26, x25, [sp, #32]
  409c4c:	stp	x24, x23, [sp, #48]
  409c50:	stp	x22, x21, [sp, #64]
  409c54:	stp	x20, x19, [sp, #80]
  409c58:	mov	x29, sp
  409c5c:	sub	sp, sp, #0x30
  409c60:	mov	x21, x2
  409c64:	mov	x20, x1
  409c68:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  409c6c:	cbz	x0, 409c7c <variable_expand_string@@Base+0x3c>
  409c70:	ldr	x8, [x27, #4040]
  409c74:	mov	x25, x0
  409c78:	b	409ca8 <variable_expand_string@@Base+0x68>
  409c7c:	ldr	x8, [x27, #4040]
  409c80:	cbnz	x8, 409ca4 <variable_expand_string@@Base+0x64>
  409c84:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  409c88:	mov	w9, #0xc8                  	// #200
  409c8c:	mov	w0, #0xc8                  	// #200
  409c90:	str	x9, [x8, #2800]
  409c94:	bl	417888 <xmalloc@@Base>
  409c98:	str	x0, [x27, #4040]
  409c9c:	strb	wzr, [x0]
  409ca0:	ldr	x8, [x27, #4040]
  409ca4:	mov	x25, x8
  409ca8:	cmn	x21, #0x1
  409cac:	b.eq	409cd0 <variable_expand_string@@Base+0x90>  // b.none
  409cb0:	cbnz	x21, 409ce0 <variable_expand_string@@Base+0xa0>
  409cb4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  409cb8:	add	x1, x1, #0x5eb
  409cbc:	mov	w2, #0x1                   	// #1
  409cc0:	mov	x0, x25
  409cc4:	bl	4099c4 <variable_buffer_output@@Base>
  409cc8:	ldr	x0, [x27, #4040]
  409ccc:	b	40a084 <variable_expand_string@@Base+0x444>
  409cd0:	mov	x0, x20
  409cd4:	stur	x8, [x29, #-40]
  409cd8:	bl	4178d4 <xstrdup@@Base>
  409cdc:	b	409cf0 <variable_expand_string@@Base+0xb0>
  409ce0:	mov	x0, x20
  409ce4:	mov	x1, x21
  409ce8:	stur	x8, [x29, #-40]
  409cec:	bl	4178f0 <xstrndup@@Base>
  409cf0:	mov	w1, #0x24                  	// #36
  409cf4:	mov	x20, x0
  409cf8:	bl	406cd0 <strchr@plt>
  409cfc:	mov	x22, x25
  409d00:	mov	x23, x20
  409d04:	cbz	x0, 40a03c <variable_expand_string@@Base+0x3fc>
  409d08:	mov	x24, x0
  409d0c:	mov	x23, x20
  409d10:	mov	x22, x25
  409d14:	stp	x20, x25, [x29, #-32]
  409d18:	sub	x2, x24, x23
  409d1c:	mov	x0, x22
  409d20:	mov	x1, x23
  409d24:	bl	4099c4 <variable_buffer_output@@Base>
  409d28:	mov	x23, x24
  409d2c:	ldrb	w19, [x23, #1]!
  409d30:	mov	x22, x0
  409d34:	cmp	w19, #0x27
  409d38:	b.gt	409d60 <variable_expand_string@@Base+0x120>
  409d3c:	cbz	w19, 409d48 <variable_expand_string@@Base+0x108>
  409d40:	cmp	w19, #0x24
  409d44:	b.ne	409d8c <variable_expand_string@@Base+0x14c>  // b.any
  409d48:	mov	w2, #0x1                   	// #1
  409d4c:	mov	x0, x22
  409d50:	mov	x1, x24
  409d54:	bl	4099c4 <variable_buffer_output@@Base>
  409d58:	mov	x22, x0
  409d5c:	b	40a020 <variable_expand_string@@Base+0x3e0>
  409d60:	cmp	w19, #0x28
  409d64:	b.eq	409d70 <variable_expand_string@@Base+0x130>  // b.none
  409d68:	cmp	w19, #0x7b
  409d6c:	b.ne	409d8c <variable_expand_string@@Base+0x14c>  // b.any
  409d70:	sub	x0, x29, #0x10
  409d74:	sub	x1, x29, #0x8
  409d78:	stp	x22, x23, [x29, #-16]
  409d7c:	bl	40cbf0 <handle_function@@Base>
  409d80:	cbz	w0, 409db8 <variable_expand_string@@Base+0x178>
  409d84:	ldp	x22, x23, [x29, #-16]
  409d88:	b	40a020 <variable_expand_string@@Base+0x3e0>
  409d8c:	ldrb	w8, [x24]
  409d90:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  409d94:	add	x9, x9, #0xcf0
  409d98:	ldrh	w8, [x9, x8, lsl #1]
  409d9c:	tst	w8, #0x6
  409da0:	b.ne	40a020 <variable_expand_string@@Base+0x3e0>  // b.any
  409da4:	mov	w2, #0x1                   	// #1
  409da8:	mov	x0, x22
  409dac:	mov	x1, x23
  409db0:	bl	40a1f8 <expand_argument@@Base+0x128>
  409db4:	b	409d58 <variable_expand_string@@Base+0x118>
  409db8:	cmp	w19, #0x28
  409dbc:	mov	w8, #0x7d                  	// #125
  409dc0:	mov	w9, #0x29                  	// #41
  409dc4:	add	x26, x24, #0x2
  409dc8:	csel	w21, w9, w8, eq  // eq = none
  409dcc:	mov	x0, x26
  409dd0:	mov	w1, w21
  409dd4:	bl	406cd0 <strchr@plt>
  409dd8:	cbz	x0, 40a0a4 <variable_expand_string@@Base+0x464>
  409ddc:	mov	x25, x0
  409de0:	mov	w2, #0x24                  	// #36
  409de4:	mov	x0, x26
  409de8:	mov	x1, x25
  409dec:	bl	41790c <lindex@@Base>
  409df0:	cbz	x0, 409e38 <variable_expand_string@@Base+0x1f8>
  409df4:	ldrb	w9, [x26]
  409df8:	cbz	w9, 409e44 <variable_expand_string@@Base+0x204>
  409dfc:	mov	w8, wzr
  409e00:	mov	x23, x26
  409e04:	cmp	w19, w9, uxtb
  409e08:	b.ne	409e14 <variable_expand_string@@Base+0x1d4>  // b.any
  409e0c:	add	w8, w8, #0x1
  409e10:	b	409e24 <variable_expand_string@@Base+0x1e4>
  409e14:	cmp	w21, w9, uxtb
  409e18:	b.ne	409e24 <variable_expand_string@@Base+0x1e4>  // b.any
  409e1c:	subs	w8, w8, #0x1
  409e20:	b.lt	409e2c <variable_expand_string@@Base+0x1ec>  // b.tstop
  409e24:	ldrb	w9, [x23, #1]!
  409e28:	cbnz	w9, 409e04 <variable_expand_string@@Base+0x1c4>
  409e2c:	tbnz	w8, #31, 409e50 <variable_expand_string@@Base+0x210>
  409e30:	mov	x24, xzr
  409e34:	b	409e6c <variable_expand_string@@Base+0x22c>
  409e38:	mov	x24, xzr
  409e3c:	mov	x23, x25
  409e40:	b	409e6c <variable_expand_string@@Base+0x22c>
  409e44:	mov	x24, xzr
  409e48:	mov	x23, x26
  409e4c:	b	409e6c <variable_expand_string@@Base+0x22c>
  409e50:	mov	x0, x26
  409e54:	mov	x1, x23
  409e58:	bl	40a0d0 <expand_argument@@Base>
  409e5c:	mov	x26, x0
  409e60:	bl	406790 <strlen@plt>
  409e64:	add	x25, x26, x0
  409e68:	mov	x24, x26
  409e6c:	mov	w2, #0x3a                  	// #58
  409e70:	mov	x0, x26
  409e74:	mov	x1, x25
  409e78:	bl	41790c <lindex@@Base>
  409e7c:	cbz	x0, 40a000 <variable_expand_string@@Base+0x3c0>
  409e80:	add	x28, x0, #0x1
  409e84:	mov	x20, x0
  409e88:	mov	w2, #0x3d                  	// #61
  409e8c:	mov	x0, x28
  409e90:	mov	x1, x25
  409e94:	bl	41790c <lindex@@Base>
  409e98:	cbz	x0, 40a000 <variable_expand_string@@Base+0x3c0>
  409e9c:	sub	x20, x20, x26
  409ea0:	mov	x21, x0
  409ea4:	mov	x0, x26
  409ea8:	mov	x1, x20
  409eac:	bl	420c00 <lookup_variable@@Base>
  409eb0:	mov	x27, x0
  409eb4:	cbnz	x0, 409ef8 <variable_expand_string@@Base+0x2b8>
  409eb8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  409ebc:	ldr	w8, [x8, #88]
  409ec0:	cbz	w8, 409ef8 <variable_expand_string@@Base+0x2b8>
  409ec4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  409ec8:	ldr	x19, [x8, #1552]
  409ecc:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  409ed0:	mov	w2, #0x5                   	// #5
  409ed4:	mov	x0, xzr
  409ed8:	add	x1, x1, #0x6cf
  409edc:	bl	406e10 <dcgettext@plt>
  409ee0:	mov	x2, x0
  409ee4:	mov	x0, x19
  409ee8:	mov	x1, x20
  409eec:	mov	w3, w20
  409ef0:	mov	x4, x26
  409ef4:	bl	418744 <error@@Base>
  409ef8:	cbz	x27, 409ff8 <variable_expand_string@@Base+0x3b8>
  409efc:	ldr	x0, [x27, #8]
  409f00:	ldrb	w8, [x0]
  409f04:	cbz	w8, 409ff8 <variable_expand_string@@Base+0x3b8>
  409f08:	ldrb	w8, [x27, #44]
  409f0c:	add	x26, x21, #0x1
  409f10:	tbz	w8, #0, 409f20 <variable_expand_string@@Base+0x2e0>
  409f14:	mov	x0, x27
  409f18:	mov	x1, xzr
  409f1c:	bl	409a50 <recursively_expand_for_file@@Base>
  409f20:	sub	x19, x21, x28
  409f24:	add	x8, x19, #0x11
  409f28:	and	x8, x8, #0xfffffffffffffff0
  409f2c:	mov	x9, sp
  409f30:	sub	x20, x9, x8
  409f34:	stur	x0, [x29, #-48]
  409f38:	mov	sp, x20
  409f3c:	mov	x21, x20
  409f40:	mov	w8, #0x25                  	// #37
  409f44:	strb	w8, [x21], #1
  409f48:	mov	x0, x21
  409f4c:	mov	x1, x28
  409f50:	mov	x2, x19
  409f54:	bl	406750 <memcpy@plt>
  409f58:	strb	wzr, [x21, x19]
  409f5c:	sub	x19, x25, x26
  409f60:	add	x8, x19, #0x11
  409f64:	and	x8, x8, #0xfffffffffffffff0
  409f68:	mov	x9, sp
  409f6c:	sub	x28, x9, x8
  409f70:	mov	sp, x28
  409f74:	mov	x25, x28
  409f78:	mov	w8, #0x25                  	// #37
  409f7c:	strb	w8, [x25], #1
  409f80:	mov	x0, x25
  409f84:	mov	x1, x26
  409f88:	mov	x2, x19
  409f8c:	bl	406750 <memcpy@plt>
  409f90:	mov	x0, x21
  409f94:	strb	wzr, [x25, x19]
  409f98:	bl	41ab64 <find_percent@@Base>
  409f9c:	cbz	x0, 409fc4 <variable_expand_string@@Base+0x384>
  409fa0:	add	x19, x0, #0x1
  409fa4:	mov	x0, x25
  409fa8:	bl	41ab64 <find_percent@@Base>
  409fac:	cmp	x0, #0x0
  409fb0:	csinc	x8, xzr, x0, eq  // eq = none
  409fb4:	mov	x28, x25
  409fb8:	mov	x20, x21
  409fbc:	mov	x21, x19
  409fc0:	mov	x25, x8
  409fc4:	ldur	x19, [x29, #-48]
  409fc8:	mov	x0, x22
  409fcc:	mov	x2, x20
  409fd0:	mov	x3, x28
  409fd4:	mov	x1, x19
  409fd8:	mov	x4, x21
  409fdc:	mov	x5, x25
  409fe0:	bl	40c3a8 <patsubst_expand_pat@@Base>
  409fe4:	ldrb	w8, [x27, #44]
  409fe8:	mov	x22, x0
  409fec:	tbz	w8, #0, 409ff8 <variable_expand_string@@Base+0x3b8>
  409ff0:	mov	x0, x19
  409ff4:	bl	406cb0 <free@plt>
  409ff8:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  409ffc:	b	40a014 <variable_expand_string@@Base+0x3d4>
  40a000:	sub	x2, x25, x26
  40a004:	mov	x0, x22
  40a008:	mov	x1, x26
  40a00c:	bl	40a1f8 <expand_argument@@Base+0x128>
  40a010:	mov	x22, x0
  40a014:	ldp	x20, x25, [x29, #-32]
  40a018:	mov	x0, x24
  40a01c:	bl	406cb0 <free@plt>
  40a020:	ldrb	w8, [x23], #1
  40a024:	cbz	w8, 40a058 <variable_expand_string@@Base+0x418>
  40a028:	mov	w1, #0x24                  	// #36
  40a02c:	mov	x0, x23
  40a030:	bl	406cd0 <strchr@plt>
  40a034:	mov	x24, x0
  40a038:	cbnz	x0, 409d18 <variable_expand_string@@Base+0xd8>
  40a03c:	mov	x0, x23
  40a040:	bl	406790 <strlen@plt>
  40a044:	add	x2, x0, #0x1
  40a048:	mov	x0, x22
  40a04c:	mov	x1, x23
  40a050:	bl	4099c4 <variable_buffer_output@@Base>
  40a054:	mov	x22, x0
  40a058:	ldur	x8, [x29, #-40]
  40a05c:	mov	x0, x20
  40a060:	sub	x19, x25, x8
  40a064:	bl	406cb0 <free@plt>
  40a068:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40a06c:	add	x1, x1, #0x5eb
  40a070:	mov	w2, #0x1                   	// #1
  40a074:	mov	x0, x22
  40a078:	bl	4099c4 <variable_buffer_output@@Base>
  40a07c:	ldr	x8, [x27, #4040]
  40a080:	add	x0, x8, x19
  40a084:	mov	sp, x29
  40a088:	ldp	x20, x19, [sp, #80]
  40a08c:	ldp	x22, x21, [sp, #64]
  40a090:	ldp	x24, x23, [sp, #48]
  40a094:	ldp	x26, x25, [sp, #32]
  40a098:	ldp	x28, x27, [sp, #16]
  40a09c:	ldp	x29, x30, [sp], #96
  40a0a0:	ret
  40a0a4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40a0a8:	ldr	x8, [x8, #1472]
  40a0ac:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a0b0:	add	x1, x1, #0x6af
  40a0b4:	mov	w2, #0x5                   	// #5
  40a0b8:	ldr	x19, [x8]
  40a0bc:	bl	406e10 <dcgettext@plt>
  40a0c0:	mov	x2, x0
  40a0c4:	mov	x0, x19
  40a0c8:	mov	x1, xzr
  40a0cc:	bl	4188bc <fatal@@Base>

000000000040a0d0 <expand_argument@@Base>:
  40a0d0:	stp	x29, x30, [sp, #-80]!
  40a0d4:	cmp	x0, x1
  40a0d8:	str	x25, [sp, #16]
  40a0dc:	stp	x24, x23, [sp, #32]
  40a0e0:	stp	x22, x21, [sp, #48]
  40a0e4:	stp	x20, x19, [sp, #64]
  40a0e8:	mov	x29, sp
  40a0ec:	b.eq	40a120 <expand_argument@@Base+0x50>  // b.none
  40a0f0:	mov	x19, x0
  40a0f4:	cbz	x1, 40a144 <expand_argument@@Base+0x74>
  40a0f8:	ldrb	w8, [x1]
  40a0fc:	cbz	w8, 40a144 <expand_argument@@Base+0x74>
  40a100:	sub	x20, x1, x19
  40a104:	cmp	x20, #0x3e8
  40a108:	add	x0, x20, #0x1
  40a10c:	b.lt	40a174 <expand_argument@@Base+0xa4>  // b.tstop
  40a110:	bl	417888 <xmalloc@@Base>
  40a114:	mov	x21, x0
  40a118:	mov	x22, x0
  40a11c:	b	40a18c <expand_argument@@Base+0xbc>
  40a120:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  40a124:	add	x0, x0, #0x5eb
  40a128:	mov	sp, x29
  40a12c:	ldp	x20, x19, [sp, #64]
  40a130:	ldp	x22, x21, [sp, #48]
  40a134:	ldp	x24, x23, [sp, #32]
  40a138:	ldr	x25, [sp, #16]
  40a13c:	ldp	x29, x30, [sp], #80
  40a140:	b	4178d4 <xstrdup@@Base>
  40a144:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  40a148:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  40a14c:	ldr	x22, [x20, #4040]
  40a150:	ldr	x23, [x21, #2800]
  40a154:	mov	x2, #0xffffffffffffffff    	// #-1
  40a158:	mov	x0, xzr
  40a15c:	mov	x1, x19
  40a160:	str	xzr, [x20, #4040]
  40a164:	bl	409c40 <variable_expand_string@@Base>
  40a168:	str	x22, [x20, #4040]
  40a16c:	str	x23, [x21, #2800]
  40a170:	b	40a1dc <expand_argument@@Base+0x10c>
  40a174:	add	x9, x0, #0xf
  40a178:	mov	x8, sp
  40a17c:	and	x9, x9, #0xfffffffffffffff0
  40a180:	sub	x21, x8, x9
  40a184:	mov	sp, x21
  40a188:	mov	x22, xzr
  40a18c:	mov	x0, x21
  40a190:	mov	x1, x19
  40a194:	mov	x2, x20
  40a198:	bl	406750 <memcpy@plt>
  40a19c:	strb	wzr, [x21, x20]
  40a1a0:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  40a1a4:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  40a1a8:	ldr	x24, [x20, #4040]
  40a1ac:	ldr	x25, [x23, #2800]
  40a1b0:	mov	x2, #0xffffffffffffffff    	// #-1
  40a1b4:	mov	x0, xzr
  40a1b8:	mov	x1, x21
  40a1bc:	str	xzr, [x20, #4040]
  40a1c0:	bl	409c40 <variable_expand_string@@Base>
  40a1c4:	mov	x19, x0
  40a1c8:	mov	x0, x22
  40a1cc:	str	x24, [x20, #4040]
  40a1d0:	str	x25, [x23, #2800]
  40a1d4:	bl	406cb0 <free@plt>
  40a1d8:	mov	x0, x19
  40a1dc:	mov	sp, x29
  40a1e0:	ldp	x20, x19, [sp, #64]
  40a1e4:	ldp	x22, x21, [sp, #48]
  40a1e8:	ldp	x24, x23, [sp, #32]
  40a1ec:	ldr	x25, [sp, #16]
  40a1f0:	ldp	x29, x30, [sp], #80
  40a1f4:	ret
  40a1f8:	stp	x29, x30, [sp, #-64]!
  40a1fc:	stp	x22, x21, [sp, #32]
  40a200:	stp	x20, x19, [sp, #48]
  40a204:	mov	x21, x1
  40a208:	mov	x19, x0
  40a20c:	mov	x0, x1
  40a210:	mov	x1, x2
  40a214:	str	x23, [sp, #16]
  40a218:	mov	x29, sp
  40a21c:	mov	x22, x2
  40a220:	bl	420c00 <lookup_variable@@Base>
  40a224:	mov	x20, x0
  40a228:	cbnz	x0, 40a26c <expand_argument@@Base+0x19c>
  40a22c:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40a230:	ldr	w8, [x8, #88]
  40a234:	cbz	w8, 40a26c <expand_argument@@Base+0x19c>
  40a238:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40a23c:	ldr	x23, [x8, #1552]
  40a240:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a244:	add	x1, x1, #0x6cf
  40a248:	mov	w2, #0x5                   	// #5
  40a24c:	mov	x0, xzr
  40a250:	bl	406e10 <dcgettext@plt>
  40a254:	mov	x2, x0
  40a258:	mov	x0, x23
  40a25c:	mov	x1, x22
  40a260:	mov	w3, w22
  40a264:	mov	x4, x21
  40a268:	bl	418744 <error@@Base>
  40a26c:	cbz	x20, 40a2c4 <expand_argument@@Base+0x1f4>
  40a270:	ldr	x21, [x20, #8]
  40a274:	ldr	w8, [x20, #44]
  40a278:	ldrb	w9, [x21]
  40a27c:	cbnz	w9, 40a284 <expand_argument@@Base+0x1b4>
  40a280:	tbz	w8, #1, 40a2c4 <expand_argument@@Base+0x1f4>
  40a284:	tbz	w8, #0, 40a298 <expand_argument@@Base+0x1c8>
  40a288:	mov	x0, x20
  40a28c:	mov	x1, xzr
  40a290:	bl	409a50 <recursively_expand_for_file@@Base>
  40a294:	mov	x21, x0
  40a298:	mov	x0, x21
  40a29c:	bl	406790 <strlen@plt>
  40a2a0:	mov	x2, x0
  40a2a4:	mov	x0, x19
  40a2a8:	mov	x1, x21
  40a2ac:	bl	4099c4 <variable_buffer_output@@Base>
  40a2b0:	ldrb	w8, [x20, #44]
  40a2b4:	mov	x19, x0
  40a2b8:	tbz	w8, #0, 40a2c4 <expand_argument@@Base+0x1f4>
  40a2bc:	mov	x0, x21
  40a2c0:	bl	406cb0 <free@plt>
  40a2c4:	mov	x0, x19
  40a2c8:	ldp	x20, x19, [sp, #48]
  40a2cc:	ldp	x22, x21, [sp, #32]
  40a2d0:	ldr	x23, [sp, #16]
  40a2d4:	ldp	x29, x30, [sp], #64
  40a2d8:	ret

000000000040a2dc <variable_expand@@Base>:
  40a2dc:	mov	x2, #0xffffffffffffffff    	// #-1
  40a2e0:	mov	x1, x0
  40a2e4:	mov	x0, xzr
  40a2e8:	b	409c40 <variable_expand_string@@Base>

000000000040a2ec <variable_expand_for_file@@Base>:
  40a2ec:	mov	x8, x0
  40a2f0:	cbz	x1, 40a35c <variable_expand_for_file@@Base+0x70>
  40a2f4:	stp	x29, x30, [sp, #-48]!
  40a2f8:	stp	x22, x21, [sp, #16]
  40a2fc:	stp	x20, x19, [sp, #32]
  40a300:	ldr	x9, [x1, #80]
  40a304:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  40a308:	ldr	x20, [x19, #2440]
  40a30c:	adrp	x21, 43e000 <stdio_traced@@Base+0x1a38>
  40a310:	str	x9, [x19, #2440]
  40a314:	ldr	x9, [x1, #32]
  40a318:	ldr	x22, [x21, #1552]
  40a31c:	mov	x29, sp
  40a320:	cbz	x9, 40a330 <variable_expand_for_file@@Base+0x44>
  40a324:	ldr	x10, [x9]
  40a328:	cmp	x10, #0x0
  40a32c:	csel	x9, xzr, x9, eq  // eq = none
  40a330:	mov	x2, #0xffffffffffffffff    	// #-1
  40a334:	mov	x0, xzr
  40a338:	mov	x1, x8
  40a33c:	str	x9, [x21, #1552]
  40a340:	bl	409c40 <variable_expand_string@@Base>
  40a344:	str	x20, [x19, #2440]
  40a348:	str	x22, [x21, #1552]
  40a34c:	ldp	x20, x19, [sp, #32]
  40a350:	ldp	x22, x21, [sp, #16]
  40a354:	ldp	x29, x30, [sp], #48
  40a358:	ret
  40a35c:	mov	x2, #0xffffffffffffffff    	// #-1
  40a360:	mov	x0, xzr
  40a364:	mov	x1, x8
  40a368:	b	409c40 <variable_expand_string@@Base>

000000000040a36c <install_variable_buffer@@Base>:
  40a36c:	stp	x29, x30, [sp, #-32]!
  40a370:	str	x19, [sp, #16]
  40a374:	adrp	x19, 43e000 <stdio_traced@@Base+0x1a38>
  40a378:	ldr	x8, [x19, #4040]
  40a37c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40a380:	mov	w10, #0xc8                  	// #200
  40a384:	mov	x29, sp
  40a388:	str	x8, [x0]
  40a38c:	ldr	x8, [x9, #2800]
  40a390:	mov	w0, #0xc8                  	// #200
  40a394:	str	x8, [x1]
  40a398:	str	xzr, [x19, #4040]
  40a39c:	str	x10, [x9, #2800]
  40a3a0:	bl	417888 <xmalloc@@Base>
  40a3a4:	str	x0, [x19, #4040]
  40a3a8:	ldr	x19, [sp, #16]
  40a3ac:	strb	wzr, [x0]
  40a3b0:	ldp	x29, x30, [sp], #32
  40a3b4:	ret

000000000040a3b8 <restore_variable_buffer@@Base>:
  40a3b8:	stp	x29, x30, [sp, #-48]!
  40a3bc:	str	x21, [sp, #16]
  40a3c0:	adrp	x21, 43e000 <stdio_traced@@Base+0x1a38>
  40a3c4:	ldr	x8, [x21, #4040]
  40a3c8:	stp	x20, x19, [sp, #32]
  40a3cc:	mov	x20, x0
  40a3d0:	mov	x29, sp
  40a3d4:	mov	x0, x8
  40a3d8:	mov	x19, x1
  40a3dc:	bl	406cb0 <free@plt>
  40a3e0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40a3e4:	str	x20, [x21, #4040]
  40a3e8:	str	x19, [x8, #2800]
  40a3ec:	ldp	x20, x19, [sp, #32]
  40a3f0:	ldr	x21, [sp, #16]
  40a3f4:	ldp	x29, x30, [sp], #48
  40a3f8:	ret
  40a3fc:	stp	x29, x30, [sp, #-64]!
  40a400:	stp	x24, x23, [sp, #16]
  40a404:	stp	x22, x21, [sp, #32]
  40a408:	stp	x20, x19, [sp, #48]
  40a40c:	mov	x29, sp
  40a410:	cbz	x2, 40a46c <restore_variable_buffer@@Base+0xb4>
  40a414:	mov	w23, w3
  40a418:	mov	x21, x2
  40a41c:	mov	x20, x1
  40a420:	mov	x22, x0
  40a424:	cbz	w23, 40a438 <restore_variable_buffer@@Base+0x80>
  40a428:	ldr	w8, [x21, #16]
  40a42c:	cmp	w8, #0x0
  40a430:	cset	w24, eq  // eq = none
  40a434:	b	40a43c <restore_variable_buffer@@Base+0x84>
  40a438:	mov	w24, wzr
  40a43c:	ldr	x2, [x21, #8]
  40a440:	mov	x0, x22
  40a444:	mov	x1, x20
  40a448:	bl	420dfc <lookup_variable_in_set@@Base>
  40a44c:	cbz	x0, 40a460 <restore_variable_buffer@@Base+0xa8>
  40a450:	ldr	w8, [x0, #44]
  40a454:	mov	x19, x0
  40a458:	cbnz	w23, 40a49c <restore_variable_buffer@@Base+0xe4>
  40a45c:	tbz	w8, #7, 40a49c <restore_variable_buffer@@Base+0xe4>
  40a460:	ldr	x21, [x21]
  40a464:	mov	w23, w24
  40a468:	cbnz	x21, 40a424 <restore_variable_buffer@@Base+0x6c>
  40a46c:	adrp	x19, 43e000 <stdio_traced@@Base+0x1a38>
  40a470:	ldr	x0, [x19, #4040]
  40a474:	cbnz	x0, 40a554 <restore_variable_buffer@@Base+0x19c>
  40a478:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40a47c:	mov	w9, #0xc8                  	// #200
  40a480:	mov	w0, #0xc8                  	// #200
  40a484:	str	x9, [x8, #2800]
  40a488:	bl	417888 <xmalloc@@Base>
  40a48c:	str	x0, [x19, #4040]
  40a490:	strb	wzr, [x0]
  40a494:	ldr	x0, [x19, #4040]
  40a498:	b	40a554 <restore_variable_buffer@@Base+0x19c>
  40a49c:	tbnz	w8, #1, 40a4d0 <restore_variable_buffer@@Base+0x118>
  40a4a0:	adrp	x21, 43e000 <stdio_traced@@Base+0x1a38>
  40a4a4:	ldr	x20, [x21, #4040]
  40a4a8:	cbnz	x20, 40a510 <restore_variable_buffer@@Base+0x158>
  40a4ac:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40a4b0:	mov	w9, #0xc8                  	// #200
  40a4b4:	mov	w0, #0xc8                  	// #200
  40a4b8:	str	x9, [x8, #2800]
  40a4bc:	bl	417888 <xmalloc@@Base>
  40a4c0:	str	x0, [x21, #4040]
  40a4c4:	strb	wzr, [x0]
  40a4c8:	ldr	x20, [x21, #4040]
  40a4cc:	b	40a510 <restore_variable_buffer@@Base+0x158>
  40a4d0:	ldr	x2, [x21]
  40a4d4:	mov	x0, x22
  40a4d8:	mov	x1, x20
  40a4dc:	mov	w3, w24
  40a4e0:	bl	40a3fc <restore_variable_buffer@@Base+0x44>
  40a4e4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40a4e8:	ldr	x8, [x8, #4040]
  40a4ec:	mov	x20, x0
  40a4f0:	cmp	x0, x8
  40a4f4:	b.ls	40a510 <restore_variable_buffer@@Base+0x158>  // b.plast
  40a4f8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  40a4fc:	add	x1, x1, #0xc2c
  40a500:	mov	w2, #0x1                   	// #1
  40a504:	mov	x0, x20
  40a508:	bl	4099c4 <variable_buffer_output@@Base>
  40a50c:	mov	x20, x0
  40a510:	ldr	w21, [x19, #44]
  40a514:	ldr	x19, [x19, #8]
  40a518:	mov	x0, x19
  40a51c:	bl	406790 <strlen@plt>
  40a520:	mov	x2, x0
  40a524:	mov	x0, x20
  40a528:	mov	x1, x19
  40a52c:	tbnz	w21, #0, 40a544 <restore_variable_buffer@@Base+0x18c>
  40a530:	ldp	x20, x19, [sp, #48]
  40a534:	ldp	x22, x21, [sp, #32]
  40a538:	ldp	x24, x23, [sp, #16]
  40a53c:	ldp	x29, x30, [sp], #64
  40a540:	b	4099c4 <variable_buffer_output@@Base>
  40a544:	bl	409c40 <variable_expand_string@@Base>
  40a548:	mov	x19, x0
  40a54c:	bl	406790 <strlen@plt>
  40a550:	add	x0, x19, x0
  40a554:	ldp	x20, x19, [sp, #48]
  40a558:	ldp	x22, x21, [sp, #32]
  40a55c:	ldp	x24, x23, [sp, #16]
  40a560:	ldp	x29, x30, [sp], #64
  40a564:	ret

000000000040a568 <lookup_file@@Base>:
  40a568:	sub	sp, sp, #0xa0
  40a56c:	stp	x29, x30, [sp, #144]
  40a570:	ldrb	w9, [x0]
  40a574:	add	x29, sp, #0x90
  40a578:	cmp	w9, #0x2e
  40a57c:	b.ne	40a5c0 <lookup_file@@Base+0x58>  // b.any
  40a580:	ldrb	w8, [x0, #1]
  40a584:	cmp	w8, #0x2f
  40a588:	b.ne	40a5d4 <lookup_file@@Base+0x6c>  // b.any
  40a58c:	mov	x8, x0
  40a590:	ldrb	w9, [x8, #2]!
  40a594:	cmp	w9, #0x2f
  40a598:	b.eq	40a5a4 <lookup_file@@Base+0x3c>  // b.none
  40a59c:	cbnz	w9, 40a5b0 <lookup_file@@Base+0x48>
  40a5a0:	b	40a5d4 <lookup_file@@Base+0x6c>
  40a5a4:	ldrb	w9, [x8, #1]!
  40a5a8:	cmp	w9, #0x2f
  40a5ac:	b.eq	40a5a4 <lookup_file@@Base+0x3c>  // b.none
  40a5b0:	cmp	w9, #0x2e
  40a5b4:	mov	x0, x8
  40a5b8:	b.eq	40a580 <lookup_file@@Base+0x18>  // b.none
  40a5bc:	b	40a5c4 <lookup_file@@Base+0x5c>
  40a5c0:	mov	x8, x0
  40a5c4:	adrp	x10, 425000 <_IO_stdin_used@@Base+0x1290>
  40a5c8:	add	x10, x10, #0x6f6
  40a5cc:	cmp	w9, #0x0
  40a5d0:	csel	x0, x10, x8, eq  // eq = none
  40a5d4:	str	x0, [sp, #8]
  40a5d8:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40a5dc:	add	x0, x0, #0xb00
  40a5e0:	mov	x1, sp
  40a5e4:	bl	40f63c <hash_find_item@@Base>
  40a5e8:	ldp	x29, x30, [sp, #144]
  40a5ec:	add	sp, sp, #0xa0
  40a5f0:	ret

000000000040a5f4 <enter_file@@Base>:
  40a5f4:	sub	sp, sp, #0xd0
  40a5f8:	stp	x22, x21, [sp, #176]
  40a5fc:	mov	x21, x0
  40a600:	str	x0, [sp, #8]
  40a604:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40a608:	add	x0, x0, #0xb00
  40a60c:	mov	x1, sp
  40a610:	stp	x29, x30, [sp, #144]
  40a614:	str	x23, [sp, #160]
  40a618:	stp	x20, x19, [sp, #192]
  40a61c:	add	x29, sp, #0x90
  40a620:	bl	40f53c <hash_find_slot@@Base>
  40a624:	ldr	x19, [x0]
  40a628:	mov	x20, x0
  40a62c:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  40a630:	cbz	x19, 40a648 <enter_file@@Base+0x54>
  40a634:	ldr	x8, [x23, #2344]
  40a638:	cmp	x8, x19
  40a63c:	b.eq	40a648 <enter_file@@Base+0x54>  // b.none
  40a640:	ldr	x8, [x19, #104]
  40a644:	cbz	x8, 40a6c4 <enter_file@@Base+0xd0>
  40a648:	mov	w0, #0x90                  	// #144
  40a64c:	bl	4178ac <xcalloc@@Base>
  40a650:	ldr	w8, [x0, #136]
  40a654:	mov	x22, x0
  40a658:	stp	x21, x21, [x0]
  40a65c:	and	w8, w8, #0xfffffffc
  40a660:	orr	w8, w8, #0x1
  40a664:	str	w8, [x0, #136]
  40a668:	cbz	x19, 40a68c <enter_file@@Base+0x98>
  40a66c:	ldr	x8, [x23, #2344]
  40a670:	cmp	x8, x19
  40a674:	b.eq	40a68c <enter_file@@Base+0x98>  // b.none
  40a678:	str	x19, [x22, #104]
  40a67c:	ldr	x8, [x19, #64]
  40a680:	str	x22, [x8, #56]
  40a684:	str	x22, [x19, #64]
  40a688:	b	40a6a4 <enter_file@@Base+0xb0>
  40a68c:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40a690:	add	x0, x0, #0xb00
  40a694:	mov	x1, x22
  40a698:	mov	x2, x20
  40a69c:	str	x22, [x22, #64]
  40a6a0:	bl	40f668 <hash_insert_at@@Base>
  40a6a4:	mov	x19, x22
  40a6a8:	mov	x0, x19
  40a6ac:	ldp	x20, x19, [sp, #192]
  40a6b0:	ldp	x22, x21, [sp, #176]
  40a6b4:	ldr	x23, [sp, #160]
  40a6b8:	ldp	x29, x30, [sp, #144]
  40a6bc:	add	sp, sp, #0xd0
  40a6c0:	ret
  40a6c4:	ldr	w8, [x19, #136]
  40a6c8:	and	w8, w8, #0xffffffef
  40a6cc:	str	w8, [x19, #136]
  40a6d0:	b	40a6a8 <enter_file@@Base+0xb4>

000000000040a6d4 <rehash_file@@Base>:
  40a6d4:	sub	sp, sp, #0xd0
  40a6d8:	stp	x29, x30, [sp, #144]
  40a6dc:	stp	x24, x23, [sp, #160]
  40a6e0:	stp	x22, x21, [sp, #176]
  40a6e4:	stp	x20, x19, [sp, #192]
  40a6e8:	ldr	w8, [x0, #136]
  40a6ec:	add	x29, sp, #0x90
  40a6f0:	and	w8, w8, #0xffffffef
  40a6f4:	str	w8, [x0, #136]
  40a6f8:	str	x1, [sp, #8]
  40a6fc:	ldr	x21, [x0, #8]
  40a700:	cmp	x21, x1
  40a704:	b.eq	40aa28 <rehash_file@@Base+0x354>  // b.none
  40a708:	mov	x22, x0
  40a70c:	mov	x0, x21
  40a710:	mov	x20, x1
  40a714:	bl	406c70 <strcmp@plt>
  40a718:	cbz	w0, 40aa28 <rehash_file@@Base+0x354>
  40a71c:	str	x21, [sp, #8]
  40a720:	mov	x19, x22
  40a724:	ldr	x22, [x22, #72]
  40a728:	cbnz	x22, 40a720 <rehash_file@@Base+0x4c>
  40a72c:	ldr	x0, [x19, #8]
  40a730:	cmp	x0, x21
  40a734:	b.eq	40a744 <rehash_file@@Base+0x70>  // b.none
  40a738:	mov	x1, x21
  40a73c:	bl	406c70 <strcmp@plt>
  40a740:	cbnz	w0, 40aa40 <rehash_file@@Base+0x36c>
  40a744:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40a748:	add	x0, x0, #0xb00
  40a74c:	mov	x1, x19
  40a750:	bl	40f798 <hash_delete@@Base>
  40a754:	cmp	x19, x0
  40a758:	b.ne	40aa40 <rehash_file@@Base+0x36c>  // b.any
  40a75c:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40a760:	add	x0, x0, #0xb00
  40a764:	mov	x1, sp
  40a768:	str	x20, [sp, #8]
  40a76c:	bl	40f53c <hash_find_slot@@Base>
  40a770:	ldr	x8, [x19, #104]
  40a774:	ldr	x24, [x0]
  40a778:	mov	x2, x0
  40a77c:	str	x20, [x19, #8]
  40a780:	cbz	x8, 40a790 <rehash_file@@Base+0xbc>
  40a784:	str	x20, [x8, #8]
  40a788:	ldr	x8, [x8, #56]
  40a78c:	cbnz	x8, 40a784 <rehash_file@@Base+0xb0>
  40a790:	cbz	x24, 40a814 <rehash_file@@Base+0x140>
  40a794:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40a798:	ldr	x8, [x8, #2344]
  40a79c:	cmp	x8, x24
  40a7a0:	b.eq	40a814 <rehash_file@@Base+0x140>  // b.none
  40a7a4:	ldr	x22, [x19, #32]
  40a7a8:	cbz	x22, 40a8c4 <rehash_file@@Base+0x1f0>
  40a7ac:	ldr	x21, [x24, #32]
  40a7b0:	cbz	x21, 40a828 <rehash_file@@Base+0x154>
  40a7b4:	cmp	x22, x21
  40a7b8:	b.eq	40a8c4 <rehash_file@@Base+0x1f0>  // b.none
  40a7bc:	ldr	x0, [x19]
  40a7c0:	bl	406790 <strlen@plt>
  40a7c4:	ldr	x8, [x21]
  40a7c8:	mov	x21, x0
  40a7cc:	cbz	x8, 40a830 <rehash_file@@Base+0x15c>
  40a7d0:	mov	x0, x8
  40a7d4:	bl	406790 <strlen@plt>
  40a7d8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a7dc:	add	x8, x21, x0
  40a7e0:	add	x1, x1, #0x6f9
  40a7e4:	mov	w2, #0x5                   	// #5
  40a7e8:	mov	x0, xzr
  40a7ec:	add	x23, x8, #0x14
  40a7f0:	bl	406e10 <dcgettext@plt>
  40a7f4:	ldr	x8, [x24, #32]
  40a7f8:	ldr	x3, [x19]
  40a7fc:	mov	x2, x0
  40a800:	mov	x0, x22
  40a804:	ldp	x4, x5, [x8]
  40a808:	mov	x1, x23
  40a80c:	bl	418744 <error@@Base>
  40a810:	b	40a858 <rehash_file@@Base+0x184>
  40a814:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40a818:	add	x0, x0, #0xb00
  40a81c:	mov	x1, x19
  40a820:	bl	40f668 <hash_insert_at@@Base>
  40a824:	b	40aa28 <rehash_file@@Base+0x354>
  40a828:	str	x22, [x24, #32]
  40a82c:	b	40a8c4 <rehash_file@@Base+0x1f0>
  40a830:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a834:	add	x1, x1, #0x727
  40a838:	mov	w2, #0x5                   	// #5
  40a83c:	mov	x0, xzr
  40a840:	bl	406e10 <dcgettext@plt>
  40a844:	ldr	x3, [x19]
  40a848:	mov	x2, x0
  40a84c:	mov	x0, x22
  40a850:	mov	x1, x21
  40a854:	bl	418744 <error@@Base>
  40a858:	mov	x0, x20
  40a85c:	bl	406790 <strlen@plt>
  40a860:	ldr	x22, [x19, #32]
  40a864:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a868:	add	x21, x0, x21
  40a86c:	add	x1, x1, #0x75f
  40a870:	mov	w2, #0x5                   	// #5
  40a874:	mov	x0, xzr
  40a878:	bl	406e10 <dcgettext@plt>
  40a87c:	ldr	x3, [x19]
  40a880:	mov	x2, x0
  40a884:	mov	x0, x22
  40a888:	mov	x1, x21
  40a88c:	mov	x4, x20
  40a890:	bl	418744 <error@@Base>
  40a894:	ldr	x22, [x19, #32]
  40a898:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a89c:	add	x1, x1, #0x791
  40a8a0:	mov	w2, #0x5                   	// #5
  40a8a4:	mov	x0, xzr
  40a8a8:	bl	406e10 <dcgettext@plt>
  40a8ac:	ldr	x4, [x19]
  40a8b0:	mov	x2, x0
  40a8b4:	mov	x0, x22
  40a8b8:	mov	x1, x21
  40a8bc:	mov	x3, x20
  40a8c0:	bl	418744 <error@@Base>
  40a8c4:	ldr	x8, [x24, #24]
  40a8c8:	cbz	x8, 40a8e4 <rehash_file@@Base+0x210>
  40a8cc:	mov	x9, x8
  40a8d0:	ldr	x8, [x8]
  40a8d4:	cbnz	x8, 40a8cc <rehash_file@@Base+0x1f8>
  40a8d8:	ldr	x8, [x19, #24]
  40a8dc:	str	x8, [x9]
  40a8e0:	b	40a8ec <rehash_file@@Base+0x218>
  40a8e4:	ldr	x8, [x19, #24]
  40a8e8:	str	x8, [x24, #24]
  40a8ec:	ldr	x1, [x19, #80]
  40a8f0:	add	x0, x24, #0x50
  40a8f4:	bl	421568 <merge_variable_set_lists@@Base>
  40a8f8:	ldr	x8, [x24, #104]
  40a8fc:	cbz	x8, 40a934 <rehash_file@@Base+0x260>
  40a900:	ldrb	w8, [x19, #137]
  40a904:	tbz	w8, #3, 40a948 <rehash_file@@Base+0x274>
  40a908:	ldr	x8, [x19, #104]
  40a90c:	cbnz	x8, 40a948 <rehash_file@@Base+0x274>
  40a910:	ldr	x0, [x19]
  40a914:	bl	406790 <strlen@plt>
  40a918:	mov	x21, x0
  40a91c:	mov	x0, x20
  40a920:	bl	406790 <strlen@plt>
  40a924:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40a928:	add	x21, x0, x21
  40a92c:	add	x1, x1, #0x7cf
  40a930:	b	40aa64 <rehash_file@@Base+0x390>
  40a934:	ldr	x8, [x19, #104]
  40a938:	cbz	x8, 40a948 <rehash_file@@Base+0x274>
  40a93c:	ldrb	w9, [x24, #137]
  40a940:	tbnz	w9, #3, 40aa44 <rehash_file@@Base+0x370>
  40a944:	str	x8, [x24, #104]
  40a948:	ldr	x8, [x19, #112]
  40a94c:	ldr	x9, [x24, #112]
  40a950:	cmp	x8, x9
  40a954:	b.ls	40a95c <rehash_file@@Base+0x288>  // b.plast
  40a958:	str	x8, [x24, #112]
  40a95c:	ldr	x8, [x19, #120]
  40a960:	ldr	w9, [x24, #136]
  40a964:	mov	w11, #0xffef                	// #65519
  40a968:	movk	w11, #0xfffd, lsl #16
  40a96c:	str	x8, [x24, #120]
  40a970:	ldr	w8, [x19, #136]
  40a974:	and	w8, w8, #0x20
  40a978:	orr	w8, w8, w9
  40a97c:	str	w8, [x24, #136]
  40a980:	ldr	w10, [x19, #136]
  40a984:	orr	w10, w10, w9
  40a988:	lsr	w10, w10, #8
  40a98c:	bfi	w8, w10, #8, #1
  40a990:	str	w8, [x24, #136]
  40a994:	ldr	w10, [x19, #136]
  40a998:	orr	w10, w10, w9
  40a99c:	lsr	w10, w10, #9
  40a9a0:	bfi	w8, w10, #9, #1
  40a9a4:	str	w8, [x24, #136]
  40a9a8:	ldr	w10, [x19, #136]
  40a9ac:	orr	w10, w10, w9
  40a9b0:	lsr	w10, w10, #10
  40a9b4:	bfi	w8, w10, #10, #1
  40a9b8:	str	w8, [x24, #136]
  40a9bc:	ldr	w10, [x19, #136]
  40a9c0:	orr	w10, w10, w9
  40a9c4:	lsr	w10, w10, #11
  40a9c8:	bfi	w8, w10, #11, #1
  40a9cc:	str	w8, [x24, #136]
  40a9d0:	ldr	w10, [x19, #136]
  40a9d4:	orr	w10, w10, w9
  40a9d8:	lsr	w10, w10, #12
  40a9dc:	bfi	w8, w10, #12, #1
  40a9e0:	str	w8, [x24, #136]
  40a9e4:	ldr	w10, [x19, #136]
  40a9e8:	orr	w10, w10, w9
  40a9ec:	lsr	w10, w10, #13
  40a9f0:	bfi	w8, w10, #13, #1
  40a9f4:	str	w8, [x24, #136]
  40a9f8:	ldr	w10, [x19, #136]
  40a9fc:	orr	w10, w10, w9
  40aa00:	lsr	w10, w10, #6
  40aa04:	bfi	w8, w10, #6, #1
  40aa08:	str	w8, [x24, #136]
  40aa0c:	ldr	w10, [x19, #136]
  40aa10:	and	w8, w8, w11
  40aa14:	orr	w9, w10, w9
  40aa18:	and	w9, w9, #0x20000
  40aa1c:	orr	w8, w8, w9
  40aa20:	str	w8, [x24, #136]
  40aa24:	str	x24, [x19, #72]
  40aa28:	ldp	x20, x19, [sp, #192]
  40aa2c:	ldp	x22, x21, [sp, #176]
  40aa30:	ldp	x24, x23, [sp, #160]
  40aa34:	ldp	x29, x30, [sp, #144]
  40aa38:	add	sp, sp, #0xd0
  40aa3c:	ret
  40aa40:	bl	406bd0 <abort@plt>
  40aa44:	ldr	x0, [x19]
  40aa48:	bl	406790 <strlen@plt>
  40aa4c:	mov	x21, x0
  40aa50:	mov	x0, x20
  40aa54:	bl	406790 <strlen@plt>
  40aa58:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40aa5c:	add	x21, x0, x21
  40aa60:	add	x1, x1, #0x803
  40aa64:	mov	w2, #0x5                   	// #5
  40aa68:	mov	x0, xzr
  40aa6c:	bl	406e10 <dcgettext@plt>
  40aa70:	ldr	x3, [x19]
  40aa74:	mov	x2, x0
  40aa78:	mov	x0, xzr
  40aa7c:	mov	x1, x21
  40aa80:	mov	x4, x20
  40aa84:	bl	4188bc <fatal@@Base>
  40aa88:	ldr	x0, [x0, #8]
  40aa8c:	ldr	x1, [x1, #8]
  40aa90:	cmp	x0, x1
  40aa94:	b.eq	40aa9c <rehash_file@@Base+0x3c8>  // b.none
  40aa98:	b	406c70 <strcmp@plt>
  40aa9c:	mov	w0, wzr
  40aaa0:	ret

000000000040aaa4 <rename_file@@Base>:
  40aaa4:	stp	x29, x30, [sp, #-32]!
  40aaa8:	str	x19, [sp, #16]
  40aaac:	mov	x29, sp
  40aab0:	mov	x19, x0
  40aab4:	bl	40a6d4 <rehash_file@@Base>
  40aab8:	cbz	x19, 40aacc <rename_file@@Base+0x28>
  40aabc:	ldr	x8, [x19, #8]
  40aac0:	str	x8, [x19]
  40aac4:	ldr	x19, [x19, #56]
  40aac8:	cbnz	x19, 40aabc <rename_file@@Base+0x18>
  40aacc:	ldr	x19, [sp, #16]
  40aad0:	ldp	x29, x30, [sp], #32
  40aad4:	ret

000000000040aad8 <remove_intermediates@@Base>:
  40aad8:	sub	sp, sp, #0x70
  40aadc:	stp	x29, x30, [sp, #16]
  40aae0:	stp	x28, x27, [sp, #32]
  40aae4:	stp	x26, x25, [sp, #48]
  40aae8:	stp	x24, x23, [sp, #64]
  40aaec:	stp	x22, x21, [sp, #80]
  40aaf0:	stp	x20, x19, [sp, #96]
  40aaf4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40aaf8:	ldrb	w8, [x8, #2904]
  40aafc:	add	x29, sp, #0x10
  40ab00:	tbnz	w8, #0, 40acf8 <remove_intermediates@@Base+0x220>
  40ab04:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ab08:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  40ab0c:	ldr	w8, [x8, #3260]
  40ab10:	ldr	w9, [x9, #228]
  40ab14:	orr	w8, w9, w8
  40ab18:	cbnz	w8, 40acf8 <remove_intermediates@@Base+0x220>
  40ab1c:	mov	w19, w0
  40ab20:	adrp	x26, 43f000 <shell_var@@Base+0x20>
  40ab24:	cbz	w0, 40ab30 <remove_intermediates@@Base+0x58>
  40ab28:	ldr	w8, [x26, #24]
  40ab2c:	cbnz	w8, 40acf8 <remove_intermediates@@Base+0x220>
  40ab30:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40ab34:	add	x9, x9, #0xb00
  40ab38:	ldr	x8, [x9, #32]
  40ab3c:	cmp	x8, #0x1
  40ab40:	b.lt	40acf8 <remove_intermediates@@Base+0x220>  // b.tstop
  40ab44:	ldr	x27, [x9]
  40ab48:	mov	w21, #0x20                  	// #32
  40ab4c:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  40ab50:	movk	w21, #0x1, lsl #16
  40ab54:	mov	w20, #0x9000                	// #36864
  40ab58:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  40ab5c:	add	x28, x27, x8, lsl #3
  40ab60:	stur	wzr, [x29, #-4]
  40ab64:	ldr	x22, [x27]
  40ab68:	cbz	x22, 40acb4 <remove_intermediates@@Base+0x1dc>
  40ab6c:	ldr	x8, [x23, #2344]
  40ab70:	cmp	x8, x22
  40ab74:	b.eq	40acb4 <remove_intermediates@@Base+0x1dc>  // b.none
  40ab78:	ldr	w8, [x22, #136]
  40ab7c:	tbz	w8, #14, 40acb4 <remove_intermediates@@Base+0x1dc>
  40ab80:	and	w9, w8, w21
  40ab84:	cmp	w9, #0x20
  40ab88:	b.eq	40acb4 <remove_intermediates@@Base+0x1dc>  // b.none
  40ab8c:	tst	w8, w20
  40ab90:	b.ne	40acb4 <remove_intermediates@@Base+0x1dc>  // b.any
  40ab94:	and	w8, w8, #0x3
  40ab98:	cmp	w8, #0x1
  40ab9c:	b.eq	40acb4 <remove_intermediates@@Base+0x1dc>  // b.none
  40aba0:	ldr	w8, [x26, #24]
  40aba4:	cbz	w8, 40abb0 <remove_intermediates@@Base+0xd8>
  40aba8:	mov	w24, wzr
  40abac:	b	40abd0 <remove_intermediates@@Base+0xf8>
  40abb0:	ldr	x0, [x22]
  40abb4:	bl	406f00 <unlink@plt>
  40abb8:	mov	w24, w0
  40abbc:	tbz	w0, #31, 40abd0 <remove_intermediates@@Base+0xf8>
  40abc0:	bl	406eb0 <__errno_location@plt>
  40abc4:	ldr	w8, [x0]
  40abc8:	cmp	w8, #0x2
  40abcc:	b.eq	40acb4 <remove_intermediates@@Base+0x1dc>  // b.none
  40abd0:	ldrb	w8, [x22, #138]
  40abd4:	tbnz	w8, #0, 40acb4 <remove_intermediates@@Base+0x1dc>
  40abd8:	cbz	w19, 40ac20 <remove_intermediates@@Base+0x148>
  40abdc:	ldr	x0, [x22]
  40abe0:	bl	406790 <strlen@plt>
  40abe4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40abe8:	mov	x20, x25
  40abec:	mov	x25, x0
  40abf0:	mov	w2, #0x5                   	// #5
  40abf4:	mov	x0, xzr
  40abf8:	add	x1, x1, #0x837
  40abfc:	bl	406e10 <dcgettext@plt>
  40ac00:	ldr	x3, [x22]
  40ac04:	mov	x2, x0
  40ac08:	mov	x0, xzr
  40ac0c:	mov	x1, x25
  40ac10:	mov	x25, x20
  40ac14:	mov	w20, #0x9000                	// #36864
  40ac18:	bl	418744 <error@@Base>
  40ac1c:	b	40aca0 <remove_intermediates@@Base+0x1c8>
  40ac20:	ldur	w8, [x29, #-4]
  40ac24:	cbnz	w8, 40ac54 <remove_intermediates@@Base+0x17c>
  40ac28:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ac2c:	ldrb	w8, [x8, #3236]
  40ac30:	tbz	w8, #0, 40ac54 <remove_intermediates@@Base+0x17c>
  40ac34:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40ac38:	mov	w2, #0x5                   	// #5
  40ac3c:	mov	x0, xzr
  40ac40:	add	x1, x1, #0x85b
  40ac44:	bl	406e10 <dcgettext@plt>
  40ac48:	bl	406ea0 <printf@plt>
  40ac4c:	ldr	x0, [x25, #2512]
  40ac50:	bl	406d40 <fflush@plt>
  40ac54:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ac58:	ldr	w8, [x8, #3232]
  40ac5c:	cbnz	w8, 40aca0 <remove_intermediates@@Base+0x1c8>
  40ac60:	ldur	w8, [x29, #-4]
  40ac64:	cbz	w8, 40ac74 <remove_intermediates@@Base+0x19c>
  40ac68:	mov	w0, #0x20                  	// #32
  40ac6c:	bl	406ed0 <putchar@plt>
  40ac70:	b	40ac8c <remove_intermediates@@Base+0x1b4>
  40ac74:	ldr	x1, [x25, #2512]
  40ac78:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40ac7c:	add	x0, x0, #0x87b
  40ac80:	bl	4067a0 <fputs@plt>
  40ac84:	mov	w8, #0x1                   	// #1
  40ac88:	stur	w8, [x29, #-4]
  40ac8c:	ldr	x0, [x22]
  40ac90:	ldr	x1, [x25, #2512]
  40ac94:	bl	4067a0 <fputs@plt>
  40ac98:	ldr	x0, [x25, #2512]
  40ac9c:	bl	406d40 <fflush@plt>
  40aca0:	tbz	w24, #31, 40acb4 <remove_intermediates@@Base+0x1dc>
  40aca4:	ldr	x1, [x22]
  40aca8:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  40acac:	add	x0, x0, #0xfa4
  40acb0:	bl	418a4c <perror_with_name@@Base>
  40acb4:	add	x27, x27, #0x8
  40acb8:	cmp	x27, x28
  40acbc:	b.cc	40ab64 <remove_intermediates@@Base+0x8c>  // b.lo, b.ul, b.last
  40acc0:	cbnz	w19, 40acf8 <remove_intermediates@@Base+0x220>
  40acc4:	ldur	w8, [x29, #-4]
  40acc8:	cbz	w8, 40acf8 <remove_intermediates@@Base+0x220>
  40accc:	mov	w0, #0xa                   	// #10
  40acd0:	bl	406ed0 <putchar@plt>
  40acd4:	ldr	x0, [x25, #2512]
  40acd8:	ldp	x20, x19, [sp, #96]
  40acdc:	ldp	x22, x21, [sp, #80]
  40ace0:	ldp	x24, x23, [sp, #64]
  40ace4:	ldp	x26, x25, [sp, #48]
  40ace8:	ldp	x28, x27, [sp, #32]
  40acec:	ldp	x29, x30, [sp, #16]
  40acf0:	add	sp, sp, #0x70
  40acf4:	b	406d40 <fflush@plt>
  40acf8:	ldp	x20, x19, [sp, #96]
  40acfc:	ldp	x22, x21, [sp, #80]
  40ad00:	ldp	x24, x23, [sp, #64]
  40ad04:	ldp	x26, x25, [sp, #48]
  40ad08:	ldp	x28, x27, [sp, #32]
  40ad0c:	ldp	x29, x30, [sp, #16]
  40ad10:	add	sp, sp, #0x70
  40ad14:	ret

000000000040ad18 <split_prereqs@@Base>:
  40ad18:	stp	x29, x30, [sp, #-32]!
  40ad1c:	mov	x29, sp
  40ad20:	str	x0, [x29, #24]
  40ad24:	add	x0, x29, #0x18
  40ad28:	mov	w1, #0x28                  	// #40
  40ad2c:	mov	w2, #0x100                 	// #256
  40ad30:	mov	x3, xzr
  40ad34:	mov	w4, wzr
  40ad38:	str	x19, [sp, #16]
  40ad3c:	bl	41b114 <parse_file_seq@@Base>
  40ad40:	ldr	x8, [x29, #24]
  40ad44:	mov	x19, x0
  40ad48:	ldrb	w9, [x8]
  40ad4c:	cbz	w9, 40ada0 <split_prereqs@@Base+0x88>
  40ad50:	add	x8, x8, #0x1
  40ad54:	add	x0, x29, #0x18
  40ad58:	mov	w1, #0x28                  	// #40
  40ad5c:	mov	w2, #0x1                   	// #1
  40ad60:	mov	x3, xzr
  40ad64:	mov	w4, wzr
  40ad68:	str	x8, [x29, #24]
  40ad6c:	bl	41b114 <parse_file_seq@@Base>
  40ad70:	cbz	x19, 40adb0 <split_prereqs@@Base+0x98>
  40ad74:	mov	x9, x19
  40ad78:	mov	x8, x9
  40ad7c:	ldr	x9, [x9]
  40ad80:	cbnz	x9, 40ad78 <split_prereqs@@Base+0x60>
  40ad84:	str	x0, [x8]
  40ad88:	cbz	x0, 40ada0 <split_prereqs@@Base+0x88>
  40ad8c:	ldrh	w8, [x0, #32]
  40ad90:	orr	w8, w8, #0x200
  40ad94:	strh	w8, [x0, #32]
  40ad98:	ldr	x0, [x0]
  40ad9c:	cbnz	x0, 40ad8c <split_prereqs@@Base+0x74>
  40ada0:	mov	x0, x19
  40ada4:	ldr	x19, [sp, #16]
  40ada8:	ldp	x29, x30, [sp], #32
  40adac:	ret
  40adb0:	mov	x19, x0
  40adb4:	cbnz	x0, 40ad8c <split_prereqs@@Base+0x74>
  40adb8:	b	40ada0 <split_prereqs@@Base+0x88>

000000000040adbc <enter_prereqs@@Base>:
  40adbc:	stp	x29, x30, [sp, #-96]!
  40adc0:	stp	x20, x19, [sp, #80]
  40adc4:	mov	x19, x0
  40adc8:	str	x27, [sp, #16]
  40adcc:	stp	x26, x25, [sp, #32]
  40add0:	stp	x24, x23, [sp, #48]
  40add4:	stp	x22, x21, [sp, #64]
  40add8:	mov	x29, sp
  40addc:	cbz	x0, 40af48 <enter_prereqs@@Base+0x18c>
  40ade0:	mov	x20, x1
  40ade4:	cbz	x1, 40af08 <enter_prereqs@@Base+0x14c>
  40ade8:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  40adec:	add	x0, x0, #0x5eb
  40adf0:	bl	40a2dc <variable_expand@@Base>
  40adf4:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  40adf8:	mov	x21, x0
  40adfc:	mov	x27, xzr
  40ae00:	add	x22, x22, #0x176
  40ae04:	mov	x23, x19
  40ae08:	ldr	x25, [x23, #8]
  40ae0c:	mov	x0, x25
  40ae10:	bl	406790 <strlen@plt>
  40ae14:	add	x9, x0, #0x10
  40ae18:	mov	x8, sp
  40ae1c:	and	x9, x9, #0xfffffffffffffff0
  40ae20:	sub	x24, x8, x9
  40ae24:	add	x2, x0, #0x1
  40ae28:	mov	sp, x24
  40ae2c:	mov	x0, x24
  40ae30:	mov	x1, x25
  40ae34:	bl	406750 <memcpy@plt>
  40ae38:	mov	x0, x24
  40ae3c:	bl	41ab64 <find_percent@@Base>
  40ae40:	cbz	x0, 40aebc <enter_prereqs@@Base+0x100>
  40ae44:	ldrb	w8, [x20]
  40ae48:	mov	x26, x0
  40ae4c:	add	x25, x0, #0x1
  40ae50:	cbz	w8, 40ae74 <enter_prereqs@@Base+0xb8>
  40ae54:	add	x4, x22, #0x1
  40ae58:	mov	x0, x21
  40ae5c:	mov	x1, x20
  40ae60:	mov	x2, x22
  40ae64:	mov	x3, x24
  40ae68:	mov	x5, x25
  40ae6c:	bl	40c3a8 <patsubst_expand_pat@@Base>
  40ae70:	b	40aea4 <enter_prereqs@@Base+0xe8>
  40ae74:	mov	x0, x26
  40ae78:	bl	406790 <strlen@plt>
  40ae7c:	mov	x2, x0
  40ae80:	mov	x0, x26
  40ae84:	mov	x1, x25
  40ae88:	bl	406760 <memmove@plt>
  40ae8c:	mov	x0, x24
  40ae90:	bl	406790 <strlen@plt>
  40ae94:	add	x2, x0, #0x1
  40ae98:	mov	x0, x21
  40ae9c:	mov	x1, x24
  40aea0:	bl	4099c4 <variable_buffer_output@@Base>
  40aea4:	ldrb	w8, [x21]
  40aea8:	cbz	w8, 40aed8 <enter_prereqs@@Base+0x11c>
  40aeac:	sub	x1, x0, x21
  40aeb0:	mov	x0, x21
  40aeb4:	bl	4203f8 <strcache_add_len@@Base>
  40aeb8:	str	x0, [x23, #8]
  40aebc:	ldrh	w8, [x23, #32]
  40aec0:	ldr	x24, [x23]
  40aec4:	mov	x27, x23
  40aec8:	str	x20, [x23, #24]
  40aecc:	orr	w8, w8, #0x400
  40aed0:	strh	w8, [x23, #32]
  40aed4:	b	40aefc <enter_prereqs@@Base+0x140>
  40aed8:	cmp	x23, x19
  40aedc:	b.eq	40aeec <enter_prereqs@@Base+0x130>  // b.none
  40aee0:	ldr	x24, [x23]
  40aee4:	str	x24, [x27]
  40aee8:	b	40aef4 <enter_prereqs@@Base+0x138>
  40aeec:	ldr	x24, [x19]
  40aef0:	mov	x19, x24
  40aef4:	mov	x0, x23
  40aef8:	bl	406cb0 <free@plt>
  40aefc:	mov	x23, x24
  40af00:	cbnz	x24, 40ae08 <enter_prereqs@@Base+0x4c>
  40af04:	cbz	x19, 40af48 <enter_prereqs@@Base+0x18c>
  40af08:	mov	x20, x19
  40af0c:	ldrb	w8, [x20, #33]
  40af10:	tbnz	w8, #3, 40af40 <enter_prereqs@@Base+0x184>
  40af14:	ldr	x0, [x20, #8]
  40af18:	bl	40a568 <lookup_file@@Base>
  40af1c:	str	x0, [x20, #16]
  40af20:	cbnz	x0, 40af30 <enter_prereqs@@Base+0x174>
  40af24:	ldr	x0, [x20, #8]
  40af28:	bl	40a5f4 <enter_file@@Base>
  40af2c:	str	x0, [x20, #16]
  40af30:	ldrh	w8, [x20, #32]
  40af34:	str	xzr, [x20, #8]
  40af38:	and	w8, w8, #0xfffffbff
  40af3c:	strh	w8, [x20, #32]
  40af40:	ldr	x20, [x20]
  40af44:	cbnz	x20, 40af0c <enter_prereqs@@Base+0x150>
  40af48:	mov	x0, x19
  40af4c:	mov	sp, x29
  40af50:	ldp	x20, x19, [sp, #80]
  40af54:	ldp	x22, x21, [sp, #64]
  40af58:	ldp	x24, x23, [sp, #48]
  40af5c:	ldp	x26, x25, [sp, #32]
  40af60:	ldr	x27, [sp, #16]
  40af64:	ldp	x29, x30, [sp], #96
  40af68:	ret

000000000040af6c <expand_extra_prereqs@@Base>:
  40af6c:	stp	x29, x30, [sp, #-32]!
  40af70:	stp	x20, x19, [sp, #16]
  40af74:	mov	x29, sp
  40af78:	cbz	x0, 40afcc <expand_extra_prereqs@@Base+0x60>
  40af7c:	ldr	x0, [x0, #8]
  40af80:	bl	40a2dc <variable_expand@@Base>
  40af84:	bl	40ad18 <split_prereqs@@Base>
  40af88:	mov	x19, x0
  40af8c:	cbz	x0, 40afd0 <expand_extra_prereqs@@Base+0x64>
  40af90:	mov	x20, x19
  40af94:	ldr	x0, [x20, #8]
  40af98:	bl	40a568 <lookup_file@@Base>
  40af9c:	str	x0, [x20, #16]
  40afa0:	cbnz	x0, 40afb0 <expand_extra_prereqs@@Base+0x44>
  40afa4:	ldr	x0, [x20, #8]
  40afa8:	bl	40a5f4 <enter_file@@Base>
  40afac:	str	x0, [x20, #16]
  40afb0:	ldrh	w8, [x20, #32]
  40afb4:	str	xzr, [x20, #8]
  40afb8:	orr	w8, w8, #0x1000
  40afbc:	strh	w8, [x20, #32]
  40afc0:	ldr	x20, [x20]
  40afc4:	cbnz	x20, 40af94 <expand_extra_prereqs@@Base+0x28>
  40afc8:	b	40afd0 <expand_extra_prereqs@@Base+0x64>
  40afcc:	mov	x19, xzr
  40afd0:	mov	x0, x19
  40afd4:	ldp	x20, x19, [sp, #16]
  40afd8:	ldp	x29, x30, [sp], #32
  40afdc:	ret

000000000040afe0 <snap_deps@@Base>:
  40afe0:	stp	x29, x30, [sp, #-64]!
  40afe4:	stp	x22, x21, [sp, #32]
  40afe8:	stp	x20, x19, [sp, #48]
  40afec:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40aff0:	ldr	w8, [x8, #36]
  40aff4:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40aff8:	mov	w10, #0x1                   	// #1
  40affc:	str	x23, [sp, #16]
  40b000:	mov	x29, sp
  40b004:	str	w10, [x9, #2808]
  40b008:	cbz	w8, 40b0a4 <snap_deps@@Base+0xc4>
  40b00c:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  40b010:	add	x19, x19, #0xb00
  40b014:	mov	x0, x19
  40b018:	mov	x1, xzr
  40b01c:	mov	x2, xzr
  40b020:	bl	40fac8 <hash_dump@@Base>
  40b024:	ldr	x22, [x19, #48]
  40b028:	mov	x19, x0
  40b02c:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  40b030:	add	x0, x0, #0xe84
  40b034:	bl	40a568 <lookup_file@@Base>
  40b038:	cbz	x0, 40b058 <snap_deps@@Base+0x78>
  40b03c:	ldr	x21, [x0]
  40b040:	mov	x20, x0
  40b044:	mov	x0, x20
  40b048:	bl	40b350 <snap_deps@@Base+0x370>
  40b04c:	ldr	x20, [x20, #56]
  40b050:	cbnz	x20, 40b044 <snap_deps@@Base+0x64>
  40b054:	b	40b05c <snap_deps@@Base+0x7c>
  40b058:	mov	x21, xzr
  40b05c:	cmp	x22, #0x1
  40b060:	b.lt	40b09c <snap_deps@@Base+0xbc>  // b.tstop
  40b064:	add	x22, x19, x22, lsl #3
  40b068:	mov	x23, x19
  40b06c:	ldr	x20, [x23]
  40b070:	cbz	x20, 40b090 <snap_deps@@Base+0xb0>
  40b074:	ldr	x8, [x20]
  40b078:	cmp	x8, x21
  40b07c:	b.eq	40b088 <snap_deps@@Base+0xa8>  // b.none
  40b080:	mov	x0, x20
  40b084:	bl	40b350 <snap_deps@@Base+0x370>
  40b088:	ldr	x20, [x20, #56]
  40b08c:	cbnz	x20, 40b074 <snap_deps@@Base+0x94>
  40b090:	add	x23, x23, #0x8
  40b094:	cmp	x23, x22
  40b098:	b.cc	40b06c <snap_deps@@Base+0x8c>  // b.lo, b.ul, b.last
  40b09c:	mov	x0, x19
  40b0a0:	bl	406cb0 <free@plt>
  40b0a4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b0a8:	add	x0, x0, #0x87f
  40b0ac:	bl	40a568 <lookup_file@@Base>
  40b0b0:	cbz	x0, 40b0e8 <snap_deps@@Base+0x108>
  40b0b4:	ldr	x8, [x0, #24]
  40b0b8:	cbz	x8, 40b0e0 <snap_deps@@Base+0x100>
  40b0bc:	ldr	x9, [x8, #16]
  40b0c0:	cbz	x9, 40b0d8 <snap_deps@@Base+0xf8>
  40b0c4:	ldr	w10, [x9, #136]
  40b0c8:	orr	w10, w10, #0x20
  40b0cc:	str	w10, [x9, #136]
  40b0d0:	ldr	x9, [x9, #56]
  40b0d4:	cbnz	x9, 40b0c4 <snap_deps@@Base+0xe4>
  40b0d8:	ldr	x8, [x8]
  40b0dc:	cbnz	x8, 40b0bc <snap_deps@@Base+0xdc>
  40b0e0:	ldr	x0, [x0, #56]
  40b0e4:	cbnz	x0, 40b0b4 <snap_deps@@Base+0xd4>
  40b0e8:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b0ec:	add	x0, x0, #0x889
  40b0f0:	bl	40a568 <lookup_file@@Base>
  40b0f4:	cbz	x0, 40b12c <snap_deps@@Base+0x14c>
  40b0f8:	ldr	x8, [x0, #24]
  40b0fc:	cbz	x8, 40b124 <snap_deps@@Base+0x144>
  40b100:	ldr	x9, [x8, #16]
  40b104:	cbz	x9, 40b11c <snap_deps@@Base+0x13c>
  40b108:	ldr	w10, [x9, #136]
  40b10c:	orr	w10, w10, #0x80
  40b110:	str	w10, [x9, #136]
  40b114:	ldr	x9, [x9, #56]
  40b118:	cbnz	x9, 40b108 <snap_deps@@Base+0x128>
  40b11c:	ldr	x8, [x8]
  40b120:	cbnz	x8, 40b100 <snap_deps@@Base+0x120>
  40b124:	ldr	x0, [x0, #56]
  40b128:	cbnz	x0, 40b0f8 <snap_deps@@Base+0x118>
  40b12c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b130:	add	x0, x0, #0x89e
  40b134:	bl	40a568 <lookup_file@@Base>
  40b138:	cbz	x0, 40b180 <snap_deps@@Base+0x1a0>
  40b13c:	mov	w9, #0x1                   	// #1
  40b140:	mov	w8, #0x2800                	// #10240
  40b144:	dup	v0.2d, x9
  40b148:	ldr	x9, [x0, #24]
  40b14c:	cbz	x9, 40b178 <snap_deps@@Base+0x198>
  40b150:	ldr	x10, [x9, #16]
  40b154:	cbz	x10, 40b170 <snap_deps@@Base+0x190>
  40b158:	ldr	w11, [x10, #136]
  40b15c:	str	q0, [x10, #112]
  40b160:	orr	w11, w11, w8
  40b164:	str	w11, [x10, #136]
  40b168:	ldr	x10, [x10, #56]
  40b16c:	cbnz	x10, 40b158 <snap_deps@@Base+0x178>
  40b170:	ldr	x9, [x9]
  40b174:	cbnz	x9, 40b150 <snap_deps@@Base+0x170>
  40b178:	ldr	x0, [x0, #56]
  40b17c:	cbnz	x0, 40b148 <snap_deps@@Base+0x168>
  40b180:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b184:	add	x0, x0, #0x8a5
  40b188:	bl	40a568 <lookup_file@@Base>
  40b18c:	cbz	x0, 40b1c4 <snap_deps@@Base+0x1e4>
  40b190:	ldr	x8, [x0, #24]
  40b194:	cbz	x8, 40b1bc <snap_deps@@Base+0x1dc>
  40b198:	ldr	x9, [x8, #16]
  40b19c:	cbz	x9, 40b1b4 <snap_deps@@Base+0x1d4>
  40b1a0:	ldr	w10, [x9, #136]
  40b1a4:	orr	w10, w10, #0x4000
  40b1a8:	str	w10, [x9, #136]
  40b1ac:	ldr	x9, [x9, #56]
  40b1b0:	cbnz	x9, 40b1a0 <snap_deps@@Base+0x1c0>
  40b1b4:	ldr	x8, [x8]
  40b1b8:	cbnz	x8, 40b198 <snap_deps@@Base+0x1b8>
  40b1bc:	ldr	x0, [x0, #56]
  40b1c0:	cbnz	x0, 40b190 <snap_deps@@Base+0x1b0>
  40b1c4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b1c8:	add	x0, x0, #0x8b3
  40b1cc:	bl	40a568 <lookup_file@@Base>
  40b1d0:	cbz	x0, 40b218 <snap_deps@@Base+0x238>
  40b1d4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40b1d8:	mov	w9, #0x1                   	// #1
  40b1dc:	ldr	x10, [x0, #24]
  40b1e0:	cbz	x10, 40b20c <snap_deps@@Base+0x22c>
  40b1e4:	ldr	x11, [x10, #16]
  40b1e8:	cbz	x11, 40b200 <snap_deps@@Base+0x220>
  40b1ec:	ldr	w12, [x11, #136]
  40b1f0:	orr	w12, w12, #0xc000
  40b1f4:	str	w12, [x11, #136]
  40b1f8:	ldr	x11, [x11, #56]
  40b1fc:	cbnz	x11, 40b1ec <snap_deps@@Base+0x20c>
  40b200:	ldr	x10, [x10]
  40b204:	cbnz	x10, 40b1e4 <snap_deps@@Base+0x204>
  40b208:	b	40b210 <snap_deps@@Base+0x230>
  40b20c:	strb	w9, [x8, #2904]
  40b210:	ldr	x0, [x0, #56]
  40b214:	cbnz	x0, 40b1dc <snap_deps@@Base+0x1fc>
  40b218:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b21c:	add	x0, x0, #0x8be
  40b220:	bl	40a568 <lookup_file@@Base>
  40b224:	cbz	x0, 40b23c <snap_deps@@Base+0x25c>
  40b228:	ldrb	w8, [x0, #137]
  40b22c:	tbz	w8, #3, 40b23c <snap_deps@@Base+0x25c>
  40b230:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40b234:	mov	w9, #0x1                   	// #1
  40b238:	str	w9, [x8, #284]
  40b23c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b240:	add	x0, x0, #0x8d4
  40b244:	bl	40a568 <lookup_file@@Base>
  40b248:	cbz	x0, 40b290 <snap_deps@@Base+0x2b0>
  40b24c:	ldrb	w8, [x0, #137]
  40b250:	tbz	w8, #3, 40b290 <snap_deps@@Base+0x2b0>
  40b254:	ldr	x8, [x0, #24]
  40b258:	cbz	x8, 40b284 <snap_deps@@Base+0x2a4>
  40b25c:	ldr	x9, [x8, #16]
  40b260:	cbz	x9, 40b278 <snap_deps@@Base+0x298>
  40b264:	ldr	w10, [x9, #132]
  40b268:	orr	w10, w10, #0x4
  40b26c:	str	w10, [x9, #132]
  40b270:	ldr	x9, [x9, #56]
  40b274:	cbnz	x9, 40b264 <snap_deps@@Base+0x284>
  40b278:	ldr	x8, [x8]
  40b27c:	cbnz	x8, 40b25c <snap_deps@@Base+0x27c>
  40b280:	b	40b290 <snap_deps@@Base+0x2b0>
  40b284:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40b288:	mov	w9, #0x1                   	// #1
  40b28c:	str	w9, [x8, #3252]
  40b290:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b294:	add	x0, x0, #0x8dc
  40b298:	bl	40a568 <lookup_file@@Base>
  40b29c:	cbz	x0, 40b2e4 <snap_deps@@Base+0x304>
  40b2a0:	ldrb	w8, [x0, #137]
  40b2a4:	tbz	w8, #3, 40b2e4 <snap_deps@@Base+0x304>
  40b2a8:	ldr	x8, [x0, #24]
  40b2ac:	cbz	x8, 40b2d8 <snap_deps@@Base+0x2f8>
  40b2b0:	ldr	x9, [x8, #16]
  40b2b4:	cbz	x9, 40b2cc <snap_deps@@Base+0x2ec>
  40b2b8:	ldr	w10, [x9, #132]
  40b2bc:	orr	w10, w10, #0x2
  40b2c0:	str	w10, [x9, #132]
  40b2c4:	ldr	x9, [x9, #56]
  40b2c8:	cbnz	x9, 40b2b8 <snap_deps@@Base+0x2d8>
  40b2cc:	ldr	x8, [x8]
  40b2d0:	cbnz	x8, 40b2b0 <snap_deps@@Base+0x2d0>
  40b2d4:	b	40b2e4 <snap_deps@@Base+0x304>
  40b2d8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40b2dc:	mov	w9, #0x1                   	// #1
  40b2e0:	str	w9, [x8, #3232]
  40b2e4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b2e8:	add	x0, x0, #0x8e4
  40b2ec:	bl	40a568 <lookup_file@@Base>
  40b2f0:	cbz	x0, 40b308 <snap_deps@@Base+0x328>
  40b2f4:	ldrb	w8, [x0, #137]
  40b2f8:	tbz	w8, #3, 40b308 <snap_deps@@Base+0x328>
  40b2fc:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40b300:	mov	w9, #0x1                   	// #1
  40b304:	str	w9, [x8, #60]
  40b308:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b30c:	add	x0, x0, #0x8f1
  40b310:	mov	w1, #0xe                   	// #14
  40b314:	bl	420c00 <lookup_variable@@Base>
  40b318:	bl	40af6c <expand_extra_prereqs@@Base>
  40b31c:	mov	x19, x0
  40b320:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40b324:	adrp	x1, 40b000 <snap_deps@@Base+0x20>
  40b328:	add	x0, x0, #0xb00
  40b32c:	add	x1, x1, #0x4c4
  40b330:	mov	x2, x19
  40b334:	bl	40f990 <hash_map_arg@@Base>
  40b338:	mov	x0, x19
  40b33c:	ldp	x20, x19, [sp, #48]
  40b340:	ldp	x22, x21, [sp, #32]
  40b344:	ldr	x23, [sp, #16]
  40b348:	ldp	x29, x30, [sp], #64
  40b34c:	b	417b74 <free_ns_chain@@Base>
  40b350:	stp	x29, x30, [sp, #-96]!
  40b354:	stp	x28, x27, [sp, #16]
  40b358:	stp	x26, x25, [sp, #32]
  40b35c:	stp	x24, x23, [sp, #48]
  40b360:	stp	x22, x21, [sp, #64]
  40b364:	stp	x20, x19, [sp, #80]
  40b368:	mov	x27, x0
  40b36c:	ldr	x23, [x27, #24]!
  40b370:	mov	x29, sp
  40b374:	ldr	w8, [x27, #112]
  40b378:	ldr	x26, [x27, #16]
  40b37c:	and	w8, w8, #0xfffffdff
  40b380:	str	w8, [x27, #112]
  40b384:	cbz	x23, 40b4a8 <snap_deps@@Base+0x4c8>
  40b388:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x2290>
  40b38c:	adrp	x22, 425000 <_IO_stdin_used@@Base+0x1290>
  40b390:	mov	x19, x0
  40b394:	mov	w28, wzr
  40b398:	add	x21, x21, #0x176
  40b39c:	add	x22, x22, #0x98e
  40b3a0:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  40b3a4:	ldr	x24, [x23, #8]
  40b3a8:	cbz	x24, 40b3b4 <snap_deps@@Base+0x3d4>
  40b3ac:	ldrh	w8, [x23, #32]
  40b3b0:	tbnz	w8, #11, 40b3c0 <snap_deps@@Base+0x3e0>
  40b3b4:	ldr	x8, [x23]
  40b3b8:	mov	x27, x23
  40b3bc:	b	40b4a0 <snap_deps@@Base+0x4c0>
  40b3c0:	tbz	w8, #10, 40b414 <snap_deps@@Base+0x434>
  40b3c4:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  40b3c8:	add	x0, x0, #0x5eb
  40b3cc:	bl	40a2dc <variable_expand@@Base>
  40b3d0:	mov	w4, #0x1                   	// #1
  40b3d4:	mov	w5, #0x2                   	// #2
  40b3d8:	mov	x1, x24
  40b3dc:	mov	x2, x21
  40b3e0:	mov	x3, x22
  40b3e4:	mov	w6, wzr
  40b3e8:	bl	40c220 <subst_expand@@Base>
  40b3ec:	strb	wzr, [x0]
  40b3f0:	mov	x0, x24
  40b3f4:	bl	406cb0 <free@plt>
  40b3f8:	ldr	x0, [x20, #4040]
  40b3fc:	bl	4178d4 <xstrdup@@Base>
  40b400:	ldrh	w8, [x23, #32]
  40b404:	mov	x24, x0
  40b408:	str	x0, [x23, #8]
  40b40c:	and	w8, w8, #0xfffffbff
  40b410:	strh	w8, [x23, #32]
  40b414:	cbnz	w28, 40b428 <snap_deps@@Base+0x448>
  40b418:	mov	x0, x19
  40b41c:	mov	w1, wzr
  40b420:	bl	420e28 <initialize_file_variables@@Base>
  40b424:	mov	w28, #0x1                   	// #1
  40b428:	ldr	x8, [x23, #24]
  40b42c:	cbz	x8, 40b434 <snap_deps@@Base+0x454>
  40b430:	str	x8, [x19, #40]
  40b434:	mov	x0, x19
  40b438:	bl	407b74 <set_file_variables@@Base>
  40b43c:	ldr	x0, [x23, #8]
  40b440:	mov	x1, x19
  40b444:	bl	40a2ec <variable_expand_for_file@@Base>
  40b448:	ldr	x8, [x23, #24]
  40b44c:	mov	x25, x0
  40b450:	cbz	x8, 40b458 <snap_deps@@Base+0x478>
  40b454:	str	x26, [x19, #40]
  40b458:	mov	x0, x24
  40b45c:	bl	406cb0 <free@plt>
  40b460:	mov	x0, x25
  40b464:	bl	40ad18 <split_prereqs@@Base>
  40b468:	ldr	x1, [x23, #24]
  40b46c:	bl	40adbc <enter_prereqs@@Base>
  40b470:	ldr	x8, [x23]
  40b474:	cbz	x0, 40b490 <snap_deps@@Base+0x4b0>
  40b478:	str	x0, [x27]
  40b47c:	mov	x27, x0
  40b480:	ldr	x0, [x0]
  40b484:	cbnz	x0, 40b47c <snap_deps@@Base+0x49c>
  40b488:	str	x8, [x27]
  40b48c:	b	40b4a0 <snap_deps@@Base+0x4c0>
  40b490:	mov	x0, x23
  40b494:	str	x8, [x27]
  40b498:	bl	406cb0 <free@plt>
  40b49c:	ldr	x8, [x27]
  40b4a0:	mov	x23, x8
  40b4a4:	cbnz	x8, 40b3a4 <snap_deps@@Base+0x3c4>
  40b4a8:	ldp	x20, x19, [sp, #80]
  40b4ac:	ldp	x22, x21, [sp, #64]
  40b4b0:	ldp	x24, x23, [sp, #48]
  40b4b4:	ldp	x26, x25, [sp, #32]
  40b4b8:	ldp	x28, x27, [sp, #16]
  40b4bc:	ldp	x29, x30, [sp], #96
  40b4c0:	ret
  40b4c4:	stp	x29, x30, [sp, #-64]!
  40b4c8:	stp	x22, x21, [sp, #32]
  40b4cc:	stp	x20, x19, [sp, #48]
  40b4d0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40b4d4:	ldr	w8, [x8, #36]
  40b4d8:	mov	x19, x0
  40b4dc:	str	x23, [sp, #16]
  40b4e0:	mov	x29, sp
  40b4e4:	cbnz	w8, 40b4f4 <snap_deps@@Base+0x514>
  40b4e8:	ldr	w8, [x19, #136]
  40b4ec:	and	w8, w8, #0xfffffdff
  40b4f0:	str	w8, [x19, #136]
  40b4f4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40b4f8:	ldrb	w8, [x8, #2904]
  40b4fc:	cmp	w8, #0x1
  40b500:	b.ne	40b510 <snap_deps@@Base+0x530>  // b.any
  40b504:	ldr	w8, [x19, #136]
  40b508:	orr	w8, w8, #0x4000
  40b50c:	str	w8, [x19, #136]
  40b510:	ldr	x8, [x19, #80]
  40b514:	cbz	x8, 40b534 <snap_deps@@Base+0x554>
  40b518:	ldr	x2, [x8, #8]
  40b51c:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b520:	add	x0, x0, #0x8f1
  40b524:	mov	w1, #0xe                   	// #14
  40b528:	bl	420dfc <lookup_variable_in_set@@Base>
  40b52c:	bl	40af6c <expand_extra_prereqs@@Base>
  40b530:	b	40b544 <snap_deps@@Base+0x564>
  40b534:	ldrb	w8, [x19, #137]
  40b538:	tbz	w8, #3, 40b5f4 <snap_deps@@Base+0x614>
  40b53c:	mov	x0, x1
  40b540:	bl	417adc <copy_dep_chain@@Base>
  40b544:	mov	x20, x0
  40b548:	cbz	x0, 40b5f4 <snap_deps@@Base+0x614>
  40b54c:	ldr	x22, [x19]
  40b550:	mov	x23, x20
  40b554:	add	x21, x22, #0x1
  40b558:	ldr	x8, [x23, #8]
  40b55c:	mov	x9, x8
  40b560:	cbnz	x8, 40b56c <snap_deps@@Base+0x58c>
  40b564:	ldr	x9, [x23, #16]
  40b568:	ldr	x9, [x9]
  40b56c:	cmp	x22, x9
  40b570:	b.eq	40b5d8 <snap_deps@@Base+0x5f8>  // b.none
  40b574:	ldrb	w9, [x22]
  40b578:	mov	x10, x8
  40b57c:	cbnz	x8, 40b588 <snap_deps@@Base+0x5a8>
  40b580:	ldr	x10, [x23, #16]
  40b584:	ldr	x10, [x10]
  40b588:	ldrb	w10, [x10]
  40b58c:	cmp	w9, w10
  40b590:	b.ne	40b5b4 <snap_deps@@Base+0x5d4>  // b.any
  40b594:	cbz	w9, 40b5d8 <snap_deps@@Base+0x5f8>
  40b598:	cbnz	x8, 40b5a4 <snap_deps@@Base+0x5c4>
  40b59c:	ldr	x8, [x23, #16]
  40b5a0:	ldr	x8, [x8]
  40b5a4:	add	x1, x8, #0x1
  40b5a8:	mov	x0, x21
  40b5ac:	bl	406c70 <strcmp@plt>
  40b5b0:	cbz	w0, 40b5d8 <snap_deps@@Base+0x5f8>
  40b5b4:	ldr	x23, [x23]
  40b5b8:	cbnz	x23, 40b558 <snap_deps@@Base+0x578>
  40b5bc:	ldr	x8, [x19, #24]
  40b5c0:	cbz	x8, 40b5f0 <snap_deps@@Base+0x610>
  40b5c4:	mov	x9, x8
  40b5c8:	ldr	x8, [x8]
  40b5cc:	cbnz	x8, 40b5c4 <snap_deps@@Base+0x5e4>
  40b5d0:	str	x20, [x9]
  40b5d4:	b	40b5f4 <snap_deps@@Base+0x614>
  40b5d8:	mov	x0, x20
  40b5dc:	ldp	x20, x19, [sp, #48]
  40b5e0:	ldp	x22, x21, [sp, #32]
  40b5e4:	ldr	x23, [sp, #16]
  40b5e8:	ldp	x29, x30, [sp], #64
  40b5ec:	b	417b74 <free_ns_chain@@Base>
  40b5f0:	str	x20, [x19, #24]
  40b5f4:	ldp	x20, x19, [sp, #48]
  40b5f8:	ldp	x22, x21, [sp, #32]
  40b5fc:	ldr	x23, [sp, #16]
  40b600:	ldp	x29, x30, [sp], #64
  40b604:	ret

000000000040b608 <set_command_state@@Base>:
  40b608:	ldr	w9, [x0, #136]
  40b60c:	ldr	x8, [x0, #48]
  40b610:	bfi	w9, w1, #2, #2
  40b614:	str	w9, [x0, #136]
  40b618:	cbz	x8, 40b648 <set_command_state@@Base+0x40>
  40b61c:	ubfiz	w9, w1, #2, #2
  40b620:	ldr	x10, [x8, #16]
  40b624:	ldr	w11, [x10, #136]
  40b628:	ubfx	w12, w11, #2, #2
  40b62c:	cmp	w12, w1
  40b630:	b.cs	40b640 <set_command_state@@Base+0x38>  // b.hs, b.nlast
  40b634:	and	w11, w11, #0xfffffff3
  40b638:	orr	w11, w11, w9
  40b63c:	str	w11, [x10, #136]
  40b640:	ldr	x8, [x8]
  40b644:	cbnz	x8, 40b620 <set_command_state@@Base+0x18>
  40b648:	ret

000000000040b64c <file_timestamp_cons@@Base>:
  40b64c:	sub	sp, sp, #0x60
  40b650:	stp	x22, x21, [sp, #64]
  40b654:	mov	x22, #0xffffffffffffca02    	// #-13822
  40b658:	stp	x20, x19, [sp, #80]
  40b65c:	mov	x21, x1
  40b660:	mov	x19, x0
  40b664:	lsr	x8, x1, #34
  40b668:	movk	x22, #0xfb9a, lsl #16
  40b66c:	stp	x29, x30, [sp, #48]
  40b670:	add	x29, sp, #0x30
  40b674:	cbnz	x8, 40b698 <file_timestamp_cons@@Base+0x4c>
  40b678:	lsl	x8, x21, #30
  40b67c:	add	w9, w2, #0x3
  40b680:	add	x20, x8, w9, sxtw
  40b684:	cmp	x8, x20
  40b688:	b.hi	40b698 <file_timestamp_cons@@Base+0x4c>  // b.pmore
  40b68c:	add	x8, x22, #0x1
  40b690:	cmp	x20, x8
  40b694:	b.cc	40b710 <file_timestamp_cons@@Base+0xc4>  // b.lo, b.ul, b.last
  40b698:	cbnz	x19, 40b6b4 <file_timestamp_cons@@Base+0x68>
  40b69c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b6a0:	add	x1, x1, #0x900
  40b6a4:	mov	w2, #0x5                   	// #5
  40b6a8:	mov	x0, xzr
  40b6ac:	bl	406e10 <dcgettext@plt>
  40b6b0:	mov	x19, x0
  40b6b4:	cmp	x21, #0x3
  40b6b8:	mov	w8, #0x3                   	// #3
  40b6bc:	csel	x20, x8, x22, cc  // cc = lo, ul, last
  40b6c0:	add	x0, sp, #0x4
  40b6c4:	mov	x1, x20
  40b6c8:	bl	40b728 <file_timestamp_sprintf@@Base>
  40b6cc:	mov	x0, x19
  40b6d0:	bl	406790 <strlen@plt>
  40b6d4:	mov	x21, x0
  40b6d8:	add	x0, sp, #0x4
  40b6dc:	bl	406790 <strlen@plt>
  40b6e0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b6e4:	add	x21, x0, x21
  40b6e8:	add	x1, x1, #0x90d
  40b6ec:	mov	w2, #0x5                   	// #5
  40b6f0:	mov	x0, xzr
  40b6f4:	bl	406e10 <dcgettext@plt>
  40b6f8:	mov	x2, x0
  40b6fc:	add	x4, sp, #0x4
  40b700:	mov	x0, xzr
  40b704:	mov	x1, x21
  40b708:	mov	x3, x19
  40b70c:	bl	418744 <error@@Base>
  40b710:	mov	x0, x20
  40b714:	ldp	x20, x19, [sp, #80]
  40b718:	ldp	x22, x21, [sp, #64]
  40b71c:	ldp	x29, x30, [sp, #48]
  40b720:	add	sp, sp, #0x60
  40b724:	ret

000000000040b728 <file_timestamp_sprintf@@Base>:
  40b728:	sub	sp, sp, #0x40
  40b72c:	stp	x22, x21, [sp, #32]
  40b730:	sub	x22, x1, #0x3
  40b734:	stp	x20, x19, [sp, #48]
  40b738:	mov	x19, x0
  40b73c:	lsr	x8, x22, #30
  40b740:	add	x0, sp, #0x8
  40b744:	stp	x29, x30, [sp, #16]
  40b748:	add	x29, sp, #0x10
  40b74c:	str	x8, [sp, #8]
  40b750:	bl	406950 <localtime@plt>
  40b754:	cbz	x0, 40b780 <file_timestamp_sprintf@@Base+0x58>
  40b758:	ldp	w9, w8, [x0, #16]
  40b75c:	ldp	w5, w4, [x0, #8]
  40b760:	ldp	w7, w6, [x0]
  40b764:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b768:	add	w2, w8, #0x76c
  40b76c:	add	w3, w9, #0x1
  40b770:	add	x1, x1, #0x939
  40b774:	mov	x0, x19
  40b778:	bl	406830 <sprintf@plt>
  40b77c:	b	40b7a4 <file_timestamp_sprintf@@Base+0x7c>
  40b780:	ldr	x2, [sp, #8]
  40b784:	tbnz	x2, #63, 40b794 <file_timestamp_sprintf@@Base+0x6c>
  40b788:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40b78c:	add	x1, x1, #0x511
  40b790:	b	40b79c <file_timestamp_sprintf@@Base+0x74>
  40b794:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b798:	add	x1, x1, #0x957
  40b79c:	mov	x0, x19
  40b7a0:	bl	406830 <sprintf@plt>
  40b7a4:	mov	x0, x19
  40b7a8:	bl	406790 <strlen@plt>
  40b7ac:	add	x21, x19, x0
  40b7b0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b7b4:	mov	x20, x0
  40b7b8:	and	w2, w22, #0x3fffffff
  40b7bc:	add	x1, x1, #0x95b
  40b7c0:	mov	x0, x21
  40b7c4:	bl	406830 <sprintf@plt>
  40b7c8:	mov	x0, x21
  40b7cc:	bl	406790 <strlen@plt>
  40b7d0:	add	x8, x0, x20
  40b7d4:	add	x8, x19, x8
  40b7d8:	ldrb	w9, [x8, #-1]!
  40b7dc:	cmp	w9, #0x30
  40b7e0:	b.eq	40b7d8 <file_timestamp_sprintf@@Base+0xb0>  // b.none
  40b7e4:	cmp	w9, #0x2e
  40b7e8:	cinc	x8, x8, ne  // ne = any
  40b7ec:	strb	wzr, [x8]
  40b7f0:	ldp	x20, x19, [sp, #48]
  40b7f4:	ldp	x22, x21, [sp, #32]
  40b7f8:	ldp	x29, x30, [sp, #16]
  40b7fc:	add	sp, sp, #0x40
  40b800:	ret

000000000040b804 <file_timestamp_now@@Base>:
  40b804:	sub	sp, sp, #0x30
  40b808:	str	x19, [sp, #32]
  40b80c:	mov	x19, x0
  40b810:	mov	x1, sp
  40b814:	mov	w0, wzr
  40b818:	stp	x29, x30, [sp, #16]
  40b81c:	add	x29, sp, #0x10
  40b820:	bl	406890 <clock_gettime@plt>
  40b824:	cbz	w0, 40b854 <file_timestamp_now@@Base+0x50>
  40b828:	mov	x0, sp
  40b82c:	mov	x1, xzr
  40b830:	bl	406aa0 <gettimeofday@plt>
  40b834:	cbz	w0, 40b860 <file_timestamp_now@@Base+0x5c>
  40b838:	mov	x0, xzr
  40b83c:	bl	4069c0 <time@plt>
  40b840:	mov	w9, #0xca00                	// #51712
  40b844:	mov	x1, x0
  40b848:	mov	x8, xzr
  40b84c:	movk	w9, #0x3b9a, lsl #16
  40b850:	b	40b86c <file_timestamp_now@@Base+0x68>
  40b854:	ldp	x1, x8, [sp]
  40b858:	mov	w9, #0x1                   	// #1
  40b85c:	b	40b86c <file_timestamp_now@@Base+0x68>
  40b860:	ldp	x1, x8, [sp]
  40b864:	mov	w9, #0x3e8                 	// #1000
  40b868:	mul	x8, x8, x9
  40b86c:	sxtw	x2, w8
  40b870:	mov	x0, xzr
  40b874:	str	w9, [x19]
  40b878:	bl	40b64c <file_timestamp_cons@@Base>
  40b87c:	ldr	x19, [sp, #32]
  40b880:	ldp	x29, x30, [sp, #16]
  40b884:	add	sp, sp, #0x30
  40b888:	ret

000000000040b88c <print_prereqs@@Base>:
  40b88c:	stp	x29, x30, [sp, #-48]!
  40b890:	str	x21, [sp, #16]
  40b894:	stp	x20, x19, [sp, #32]
  40b898:	mov	x29, sp
  40b89c:	cbz	x0, 40b93c <print_prereqs@@Base+0xb0>
  40b8a0:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  40b8a4:	mov	x19, x0
  40b8a8:	mov	x21, xzr
  40b8ac:	add	x20, x20, #0x96b
  40b8b0:	ldrb	w8, [x19, #33]
  40b8b4:	tbnz	w8, #1, 40b8d4 <print_prereqs@@Base+0x48>
  40b8b8:	ldr	x1, [x19, #8]
  40b8bc:	cbnz	x1, 40b8c8 <print_prereqs@@Base+0x3c>
  40b8c0:	ldr	x8, [x19, #16]
  40b8c4:	ldr	x1, [x8]
  40b8c8:	mov	x0, x20
  40b8cc:	bl	406ea0 <printf@plt>
  40b8d0:	b	40b8dc <print_prereqs@@Base+0x50>
  40b8d4:	cmp	x21, #0x0
  40b8d8:	csel	x21, x19, x21, eq  // eq = none
  40b8dc:	ldr	x19, [x19]
  40b8e0:	cbnz	x19, 40b8b0 <print_prereqs@@Base+0x24>
  40b8e4:	cbz	x21, 40b93c <print_prereqs@@Base+0xb0>
  40b8e8:	ldr	x1, [x21, #8]
  40b8ec:	cbnz	x1, 40b8f8 <print_prereqs@@Base+0x6c>
  40b8f0:	ldr	x8, [x21, #16]
  40b8f4:	ldr	x1, [x8]
  40b8f8:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40b8fc:	add	x0, x0, #0x961
  40b900:	bl	406ea0 <printf@plt>
  40b904:	ldr	x20, [x21]
  40b908:	cbz	x20, 40b93c <print_prereqs@@Base+0xb0>
  40b90c:	adrp	x19, 426000 <_IO_stdin_used@@Base+0x2290>
  40b910:	add	x19, x19, #0x96b
  40b914:	ldrb	w8, [x20, #33]
  40b918:	tbz	w8, #1, 40b934 <print_prereqs@@Base+0xa8>
  40b91c:	ldr	x1, [x20, #8]
  40b920:	cbnz	x1, 40b92c <print_prereqs@@Base+0xa0>
  40b924:	ldr	x8, [x20, #16]
  40b928:	ldr	x1, [x8]
  40b92c:	mov	x0, x19
  40b930:	bl	406ea0 <printf@plt>
  40b934:	ldr	x20, [x20]
  40b938:	cbnz	x20, 40b914 <print_prereqs@@Base+0x88>
  40b93c:	ldp	x20, x19, [sp, #32]
  40b940:	ldr	x21, [sp, #16]
  40b944:	mov	w0, #0xa                   	// #10
  40b948:	ldp	x29, x30, [sp], #48
  40b94c:	b	406ed0 <putchar@plt>

000000000040b950 <print_file_data_base@@Base>:
  40b950:	stp	x29, x30, [sp, #-32]!
  40b954:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b958:	add	x1, x1, #0x967
  40b95c:	mov	w2, #0x5                   	// #5
  40b960:	mov	x0, xzr
  40b964:	stp	x20, x19, [sp, #16]
  40b968:	mov	x29, sp
  40b96c:	bl	406e10 <dcgettext@plt>
  40b970:	bl	406c00 <puts@plt>
  40b974:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  40b978:	add	x19, x19, #0xb00
  40b97c:	adrp	x1, 40b000 <snap_deps@@Base+0x20>
  40b980:	add	x1, x1, #0x9c0
  40b984:	mov	x0, x19
  40b988:	bl	40f930 <hash_map@@Base>
  40b98c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40b990:	add	x1, x1, #0x970
  40b994:	mov	w2, #0x5                   	// #5
  40b998:	mov	x0, xzr
  40b99c:	bl	406e10 <dcgettext@plt>
  40b9a0:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  40b9a4:	ldr	x1, [x20, #2512]
  40b9a8:	bl	4067a0 <fputs@plt>
  40b9ac:	ldr	x1, [x20, #2512]
  40b9b0:	mov	x0, x19
  40b9b4:	ldp	x20, x19, [sp, #16]
  40b9b8:	ldp	x29, x30, [sp], #32
  40b9bc:	b	40fa00 <hash_print_stats@@Base>
  40b9c0:	sub	sp, sp, #0x60
  40b9c4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40b9c8:	ldr	w8, [x8, #3264]
  40b9cc:	stp	x20, x19, [sp, #80]
  40b9d0:	mov	x19, x0
  40b9d4:	stp	x29, x30, [sp, #48]
  40b9d8:	str	x21, [sp, #64]
  40b9dc:	add	x29, sp, #0x30
  40b9e0:	cbz	w8, 40b9ec <print_file_data_base@@Base+0x9c>
  40b9e4:	ldrb	w8, [x19, #136]
  40b9e8:	tbnz	w8, #4, 40bd6c <print_file_data_base@@Base+0x41c>
  40b9ec:	mov	w0, #0xa                   	// #10
  40b9f0:	bl	406ed0 <putchar@plt>
  40b9f4:	ldr	x8, [x19, #32]
  40b9f8:	cbz	x8, 40ba44 <print_file_data_base@@Base+0xf4>
  40b9fc:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  40ba00:	ldrb	w8, [x8, #50]
  40ba04:	ldrb	w9, [x20, #2392]
  40ba08:	cmp	w8, w9
  40ba0c:	b.eq	40ba44 <print_file_data_base@@Base+0xf4>  // b.none
  40ba10:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ba14:	ldr	x1, [x8, #2512]
  40ba18:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40ba1c:	add	x0, x0, #0x991
  40ba20:	bl	4067a0 <fputs@plt>
  40ba24:	ldr	x8, [x19, #32]
  40ba28:	ldrb	w0, [x8, #50]
  40ba2c:	cmp	w0, #0x9
  40ba30:	strb	w0, [x20, #2392]
  40ba34:	b.eq	40ba3c <print_file_data_base@@Base+0xec>  // b.none
  40ba38:	bl	406ed0 <putchar@plt>
  40ba3c:	mov	w0, #0xa                   	// #10
  40ba40:	bl	406ed0 <putchar@plt>
  40ba44:	ldr	x8, [x19, #80]
  40ba48:	cbz	x8, 40ba54 <print_file_data_base@@Base+0x104>
  40ba4c:	mov	x0, x19
  40ba50:	bl	422534 <print_target_variables@@Base>
  40ba54:	ldrb	w8, [x19, #137]
  40ba58:	tbnz	w8, #3, 40ba74 <print_file_data_base@@Base+0x124>
  40ba5c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40ba60:	add	x1, x1, #0x9a2
  40ba64:	mov	w2, #0x5                   	// #5
  40ba68:	mov	x0, xzr
  40ba6c:	bl	406e10 <dcgettext@plt>
  40ba70:	bl	406c00 <puts@plt>
  40ba74:	ldr	x8, [x19, #104]
  40ba78:	ldr	x1, [x19]
  40ba7c:	adrp	x9, 423000 <fd_noinherit@@Base+0x38>
  40ba80:	adrp	x10, 426000 <_IO_stdin_used@@Base+0x2290>
  40ba84:	add	x9, x9, #0xee5
  40ba88:	add	x10, x10, #0x5eb
  40ba8c:	cmp	x8, #0x0
  40ba90:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40ba94:	csel	x2, x10, x9, eq  // eq = none
  40ba98:	add	x0, x0, #0x9b2
  40ba9c:	bl	406ea0 <printf@plt>
  40baa0:	ldr	x0, [x19, #24]
  40baa4:	bl	40b88c <print_prereqs@@Base>
  40baa8:	ldr	w8, [x19, #136]
  40baac:	tbnz	w8, #5, 40bbcc <print_file_data_base@@Base+0x27c>
  40bab0:	tbnz	w8, #13, 40bbec <print_file_data_base@@Base+0x29c>
  40bab4:	tbnz	w8, #12, 40bc0c <print_file_data_base@@Base+0x2bc>
  40bab8:	tbnz	w8, #16, 40bc2c <print_file_data_base@@Base+0x2dc>
  40babc:	tbz	w8, #4, 40badc <print_file_data_base@@Base+0x18c>
  40bac0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bac4:	add	x1, x1, #0xa60
  40bac8:	mov	w2, #0x5                   	// #5
  40bacc:	mov	x0, xzr
  40bad0:	bl	406e10 <dcgettext@plt>
  40bad4:	bl	406c00 <puts@plt>
  40bad8:	ldr	w8, [x19, #136]
  40badc:	adrp	x9, 425000 <_IO_stdin_used@@Base+0x1290>
  40bae0:	adrp	x10, 425000 <_IO_stdin_used@@Base+0x1290>
  40bae4:	add	x9, x9, #0xa70
  40bae8:	add	x10, x10, #0xa97
  40baec:	tst	w8, #0x100
  40baf0:	csel	x1, x10, x9, eq  // eq = none
  40baf4:	mov	w2, #0x5                   	// #5
  40baf8:	mov	x0, xzr
  40bafc:	bl	406e10 <dcgettext@plt>
  40bb00:	bl	406c00 <puts@plt>
  40bb04:	ldr	x8, [x19, #40]
  40bb08:	cbz	x8, 40bb28 <print_file_data_base@@Base+0x1d8>
  40bb0c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bb10:	add	x1, x1, #0xac2
  40bb14:	mov	w2, #0x5                   	// #5
  40bb18:	mov	x0, xzr
  40bb1c:	bl	406e10 <dcgettext@plt>
  40bb20:	ldr	x1, [x19, #40]
  40bb24:	bl	406ea0 <printf@plt>
  40bb28:	ldrb	w8, [x19, #137]
  40bb2c:	tbz	w8, #6, 40bb48 <print_file_data_base@@Base+0x1f8>
  40bb30:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bb34:	add	x1, x1, #0xae9
  40bb38:	mov	w2, #0x5                   	// #5
  40bb3c:	mov	x0, xzr
  40bb40:	bl	406e10 <dcgettext@plt>
  40bb44:	bl	406c00 <puts@plt>
  40bb48:	ldr	x8, [x19, #48]
  40bb4c:	cbz	x8, 40bba8 <print_file_data_base@@Base+0x258>
  40bb50:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bb54:	add	x1, x1, #0xb12
  40bb58:	mov	w2, #0x5                   	// #5
  40bb5c:	mov	x0, xzr
  40bb60:	bl	406e10 <dcgettext@plt>
  40bb64:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40bb68:	ldr	x1, [x8, #2512]
  40bb6c:	bl	4067a0 <fputs@plt>
  40bb70:	ldr	x21, [x19, #48]
  40bb74:	cbz	x21, 40bba0 <print_file_data_base@@Base+0x250>
  40bb78:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  40bb7c:	add	x20, x20, #0x96b
  40bb80:	ldr	x1, [x21, #8]
  40bb84:	cbnz	x1, 40bb90 <print_file_data_base@@Base+0x240>
  40bb88:	ldr	x8, [x21, #16]
  40bb8c:	ldr	x1, [x8]
  40bb90:	mov	x0, x20
  40bb94:	bl	406ea0 <printf@plt>
  40bb98:	ldr	x21, [x21]
  40bb9c:	cbnz	x21, 40bb80 <print_file_data_base@@Base+0x230>
  40bba0:	mov	w0, #0xa                   	// #10
  40bba4:	bl	406ed0 <putchar@plt>
  40bba8:	ldr	x1, [x19, #112]
  40bbac:	cmp	x1, #0x2
  40bbb0:	b.eq	40bc50 <print_file_data_base@@Base+0x300>  // b.none
  40bbb4:	cmp	x1, #0x1
  40bbb8:	b.eq	40bc5c <print_file_data_base@@Base+0x30c>  // b.none
  40bbbc:	cbnz	x1, 40bc78 <print_file_data_base@@Base+0x328>
  40bbc0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bbc4:	add	x1, x1, #0xb21
  40bbc8:	b	40bc64 <print_file_data_base@@Base+0x314>
  40bbcc:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bbd0:	add	x1, x1, #0x9b8
  40bbd4:	mov	w2, #0x5                   	// #5
  40bbd8:	mov	x0, xzr
  40bbdc:	bl	406e10 <dcgettext@plt>
  40bbe0:	bl	406c00 <puts@plt>
  40bbe4:	ldr	w8, [x19, #136]
  40bbe8:	tbz	w8, #13, 40bab4 <print_file_data_base@@Base+0x164>
  40bbec:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bbf0:	add	x1, x1, #0x9e6
  40bbf4:	mov	w2, #0x5                   	// #5
  40bbf8:	mov	x0, xzr
  40bbfc:	bl	406e10 <dcgettext@plt>
  40bc00:	bl	406c00 <puts@plt>
  40bc04:	ldr	w8, [x19, #136]
  40bc08:	tbz	w8, #12, 40bab8 <print_file_data_base@@Base+0x168>
  40bc0c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bc10:	add	x1, x1, #0xa10
  40bc14:	mov	w2, #0x5                   	// #5
  40bc18:	mov	x0, xzr
  40bc1c:	bl	406e10 <dcgettext@plt>
  40bc20:	bl	406c00 <puts@plt>
  40bc24:	ldr	w8, [x19, #136]
  40bc28:	tbz	w8, #16, 40babc <print_file_data_base@@Base+0x16c>
  40bc2c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bc30:	add	x1, x1, #0xa28
  40bc34:	mov	w2, #0x5                   	// #5
  40bc38:	mov	x0, xzr
  40bc3c:	bl	406e10 <dcgettext@plt>
  40bc40:	bl	406c00 <puts@plt>
  40bc44:	ldr	w8, [x19, #136]
  40bc48:	tbnz	w8, #4, 40bac0 <print_file_data_base@@Base+0x170>
  40bc4c:	b	40badc <print_file_data_base@@Base+0x18c>
  40bc50:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bc54:	add	x1, x1, #0xb5d
  40bc58:	b	40bc64 <print_file_data_base@@Base+0x314>
  40bc5c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bc60:	add	x1, x1, #0xb45
  40bc64:	mov	w2, #0x5                   	// #5
  40bc68:	mov	x0, xzr
  40bc6c:	bl	406e10 <dcgettext@plt>
  40bc70:	bl	406c00 <puts@plt>
  40bc74:	b	40bc9c <print_file_data_base@@Base+0x34c>
  40bc78:	add	x0, sp, #0x4
  40bc7c:	bl	40b728 <file_timestamp_sprintf@@Base>
  40bc80:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bc84:	add	x1, x1, #0xb72
  40bc88:	mov	w2, #0x5                   	// #5
  40bc8c:	mov	x0, xzr
  40bc90:	bl	406e10 <dcgettext@plt>
  40bc94:	add	x1, sp, #0x4
  40bc98:	bl	406ea0 <printf@plt>
  40bc9c:	ldr	w8, [x19, #136]
  40bca0:	adrp	x9, 425000 <_IO_stdin_used@@Base+0x1290>
  40bca4:	adrp	x10, 425000 <_IO_stdin_used@@Base+0x1290>
  40bca8:	add	x9, x9, #0xb87
  40bcac:	add	x10, x10, #0xba1
  40bcb0:	tst	w8, #0x400
  40bcb4:	csel	x1, x10, x9, eq  // eq = none
  40bcb8:	mov	w2, #0x5                   	// #5
  40bcbc:	mov	x0, xzr
  40bcc0:	bl	406e10 <dcgettext@plt>
  40bcc4:	bl	406c00 <puts@plt>
  40bcc8:	ldr	w8, [x19, #136]
  40bccc:	adrp	x10, 425000 <_IO_stdin_used@@Base+0x1290>
  40bcd0:	add	x10, x10, #0x6f2
  40bcd4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bcd8:	ubfx	w9, w8, #2, #2
  40bcdc:	adr	x11, 40bcf0 <print_file_data_base@@Base+0x3a0>
  40bce0:	ldrb	w12, [x10, x9]
  40bce4:	add	x11, x11, x12, lsl #2
  40bce8:	add	x1, x1, #0xbbf
  40bcec:	br	x11
  40bcf0:	ands	w8, w8, #0x3
  40bcf4:	b.eq	40bd20 <print_file_data_base@@Base+0x3d0>  // b.none
  40bcf8:	cmp	w8, #0x3
  40bcfc:	b.eq	40bd2c <print_file_data_base@@Base+0x3dc>  // b.none
  40bd00:	cmp	w8, #0x2
  40bd04:	b.ne	40bd44 <print_file_data_base@@Base+0x3f4>  // b.any
  40bd08:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bd0c:	add	x1, x1, #0xc35
  40bd10:	b	40bd34 <print_file_data_base@@Base+0x3e4>
  40bd14:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bd18:	add	x1, x1, #0xbec
  40bd1c:	b	40bd34 <print_file_data_base@@Base+0x3e4>
  40bd20:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bd24:	add	x1, x1, #0xc1c
  40bd28:	b	40bd34 <print_file_data_base@@Base+0x3e4>
  40bd2c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bd30:	add	x1, x1, #0xc59
  40bd34:	mov	w2, #0x5                   	// #5
  40bd38:	mov	x0, xzr
  40bd3c:	bl	406e10 <dcgettext@plt>
  40bd40:	bl	406c00 <puts@plt>
  40bd44:	ldr	x8, [x19, #80]
  40bd48:	cbz	x8, 40bd54 <print_file_data_base@@Base+0x404>
  40bd4c:	mov	x0, x19
  40bd50:	bl	422514 <print_file_variables@@Base>
  40bd54:	ldr	x0, [x19, #32]
  40bd58:	cbz	x0, 40bd60 <print_file_data_base@@Base+0x410>
  40bd5c:	bl	408a04 <print_commands@@Base>
  40bd60:	ldr	x0, [x19, #56]
  40bd64:	cbz	x0, 40bd6c <print_file_data_base@@Base+0x41c>
  40bd68:	bl	40b9c0 <print_file_data_base@@Base+0x70>
  40bd6c:	ldp	x20, x19, [sp, #80]
  40bd70:	ldr	x21, [sp, #64]
  40bd74:	ldp	x29, x30, [sp, #48]
  40bd78:	add	sp, sp, #0x60
  40bd7c:	ret

000000000040bd80 <verify_file_data_base@@Base>:
  40bd80:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40bd84:	adrp	x1, 40b000 <snap_deps@@Base+0x20>
  40bd88:	add	x0, x0, #0xb00
  40bd8c:	add	x1, x1, #0xd94
  40bd90:	b	40f930 <hash_map@@Base>
  40bd94:	stp	x29, x30, [sp, #-64]!
  40bd98:	stp	x22, x21, [sp, #32]
  40bd9c:	stp	x20, x19, [sp, #48]
  40bda0:	mov	x19, x0
  40bda4:	ldr	x0, [x0]
  40bda8:	str	x23, [sp, #16]
  40bdac:	mov	x29, sp
  40bdb0:	cbz	x0, 40be08 <verify_file_data_base@@Base+0x88>
  40bdb4:	ldrb	w8, [x0]
  40bdb8:	cbz	w8, 40be08 <verify_file_data_base@@Base+0x88>
  40bdbc:	bl	4200d4 <strcache_iscached@@Base>
  40bdc0:	cbnz	w0, 40be08 <verify_file_data_base@@Base+0x88>
  40bdc4:	ldr	x0, [x19]
  40bdc8:	bl	406790 <strlen@plt>
  40bdcc:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bdd0:	lsl	x8, x0, #1
  40bdd4:	add	x1, x1, #0xc72
  40bdd8:	mov	w2, #0x5                   	// #5
  40bddc:	mov	x0, xzr
  40bde0:	add	x20, x8, #0x4
  40bde4:	bl	406e10 <dcgettext@plt>
  40bde8:	ldr	x3, [x19]
  40bdec:	adrp	x4, 428000 <_IO_stdin_used@@Base+0x4290>
  40bdf0:	mov	x2, x0
  40bdf4:	add	x4, x4, #0xf5e
  40bdf8:	mov	x0, xzr
  40bdfc:	mov	x1, x20
  40be00:	mov	x5, x3
  40be04:	bl	418744 <error@@Base>
  40be08:	ldr	x0, [x19, #8]
  40be0c:	cbz	x0, 40be70 <verify_file_data_base@@Base+0xf0>
  40be10:	ldrb	w8, [x0]
  40be14:	cbz	w8, 40be70 <verify_file_data_base@@Base+0xf0>
  40be18:	bl	4200d4 <strcache_iscached@@Base>
  40be1c:	cbnz	w0, 40be70 <verify_file_data_base@@Base+0xf0>
  40be20:	ldr	x0, [x19]
  40be24:	bl	406790 <strlen@plt>
  40be28:	ldr	x8, [x19, #8]
  40be2c:	mov	x20, x0
  40be30:	mov	x0, x8
  40be34:	bl	406790 <strlen@plt>
  40be38:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40be3c:	add	x8, x20, x0
  40be40:	add	x1, x1, #0xc72
  40be44:	mov	w2, #0x5                   	// #5
  40be48:	mov	x0, xzr
  40be4c:	add	x20, x8, #0x5
  40be50:	bl	406e10 <dcgettext@plt>
  40be54:	ldp	x3, x5, [x19]
  40be58:	adrp	x4, 425000 <_IO_stdin_used@@Base+0x1290>
  40be5c:	mov	x2, x0
  40be60:	add	x4, x4, #0xc90
  40be64:	mov	x0, xzr
  40be68:	mov	x1, x20
  40be6c:	bl	418744 <error@@Base>
  40be70:	ldr	x0, [x19, #16]
  40be74:	cbz	x0, 40bedc <verify_file_data_base@@Base+0x15c>
  40be78:	ldrb	w8, [x0]
  40be7c:	cbz	w8, 40bedc <verify_file_data_base@@Base+0x15c>
  40be80:	bl	4200d4 <strcache_iscached@@Base>
  40be84:	cbnz	w0, 40bedc <verify_file_data_base@@Base+0x15c>
  40be88:	ldr	x0, [x19]
  40be8c:	bl	406790 <strlen@plt>
  40be90:	ldr	x8, [x19, #16]
  40be94:	mov	x20, x0
  40be98:	mov	x0, x8
  40be9c:	bl	406790 <strlen@plt>
  40bea0:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bea4:	add	x8, x20, x0
  40bea8:	add	x1, x1, #0xc72
  40beac:	mov	w2, #0x5                   	// #5
  40beb0:	mov	x0, xzr
  40beb4:	add	x20, x8, #0x5
  40beb8:	bl	406e10 <dcgettext@plt>
  40bebc:	ldr	x3, [x19]
  40bec0:	ldr	x5, [x19, #16]
  40bec4:	adrp	x4, 425000 <_IO_stdin_used@@Base+0x1290>
  40bec8:	mov	x2, x0
  40becc:	add	x4, x4, #0xc96
  40bed0:	mov	x0, xzr
  40bed4:	mov	x1, x20
  40bed8:	bl	418744 <error@@Base>
  40bedc:	ldr	x0, [x19, #40]
  40bee0:	cbz	x0, 40bf48 <verify_file_data_base@@Base+0x1c8>
  40bee4:	ldrb	w8, [x0]
  40bee8:	cbz	w8, 40bf48 <verify_file_data_base@@Base+0x1c8>
  40beec:	bl	4200d4 <strcache_iscached@@Base>
  40bef0:	cbnz	w0, 40bf48 <verify_file_data_base@@Base+0x1c8>
  40bef4:	ldr	x0, [x19]
  40bef8:	bl	406790 <strlen@plt>
  40befc:	ldr	x8, [x19, #40]
  40bf00:	mov	x20, x0
  40bf04:	mov	x0, x8
  40bf08:	bl	406790 <strlen@plt>
  40bf0c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40bf10:	add	x8, x20, x0
  40bf14:	add	x1, x1, #0xc72
  40bf18:	mov	w2, #0x5                   	// #5
  40bf1c:	mov	x0, xzr
  40bf20:	add	x20, x8, #0x4
  40bf24:	bl	406e10 <dcgettext@plt>
  40bf28:	ldr	x3, [x19]
  40bf2c:	ldr	x5, [x19, #40]
  40bf30:	adrp	x4, 426000 <_IO_stdin_used@@Base+0x2290>
  40bf34:	mov	x2, x0
  40bf38:	add	x4, x4, #0x66c
  40bf3c:	mov	x0, xzr
  40bf40:	mov	x1, x20
  40bf44:	bl	418744 <error@@Base>
  40bf48:	ldr	x23, [x19, #24]
  40bf4c:	cbz	x23, 40c030 <verify_file_data_base@@Base+0x2b0>
  40bf50:	adrp	x19, 425000 <_IO_stdin_used@@Base+0x1290>
  40bf54:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  40bf58:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x2290>
  40bf5c:	add	x19, x19, #0xc72
  40bf60:	add	x20, x20, #0xf5e
  40bf64:	add	x21, x21, #0x66c
  40bf68:	ldrb	w8, [x23, #33]
  40bf6c:	tbnz	w8, #3, 40bfc4 <verify_file_data_base@@Base+0x244>
  40bf70:	ldr	x0, [x23, #8]
  40bf74:	cbz	x0, 40bfc4 <verify_file_data_base@@Base+0x244>
  40bf78:	ldrb	w8, [x0]
  40bf7c:	cbz	w8, 40bfc4 <verify_file_data_base@@Base+0x244>
  40bf80:	bl	4200d4 <strcache_iscached@@Base>
  40bf84:	cbnz	w0, 40bfc4 <verify_file_data_base@@Base+0x244>
  40bf88:	ldr	x0, [x23, #8]
  40bf8c:	bl	406790 <strlen@plt>
  40bf90:	lsl	x8, x0, #1
  40bf94:	mov	w2, #0x5                   	// #5
  40bf98:	mov	x0, xzr
  40bf9c:	mov	x1, x19
  40bfa0:	add	x22, x8, #0x4
  40bfa4:	bl	406e10 <dcgettext@plt>
  40bfa8:	ldr	x3, [x23, #8]
  40bfac:	mov	x2, x0
  40bfb0:	mov	x0, xzr
  40bfb4:	mov	x1, x22
  40bfb8:	mov	x4, x20
  40bfbc:	mov	x5, x3
  40bfc0:	bl	418744 <error@@Base>
  40bfc4:	ldr	x0, [x23, #24]
  40bfc8:	cbz	x0, 40c028 <verify_file_data_base@@Base+0x2a8>
  40bfcc:	ldrb	w8, [x0]
  40bfd0:	cbz	w8, 40c028 <verify_file_data_base@@Base+0x2a8>
  40bfd4:	bl	4200d4 <strcache_iscached@@Base>
  40bfd8:	cbnz	w0, 40c028 <verify_file_data_base@@Base+0x2a8>
  40bfdc:	ldr	x0, [x23, #8]
  40bfe0:	bl	406790 <strlen@plt>
  40bfe4:	ldr	x8, [x23, #24]
  40bfe8:	mov	x22, x0
  40bfec:	mov	x0, x8
  40bff0:	bl	406790 <strlen@plt>
  40bff4:	add	x8, x22, x0
  40bff8:	mov	w2, #0x5                   	// #5
  40bffc:	mov	x0, xzr
  40c000:	mov	x1, x19
  40c004:	add	x22, x8, #0x4
  40c008:	bl	406e10 <dcgettext@plt>
  40c00c:	ldr	x3, [x23, #8]
  40c010:	ldr	x5, [x23, #24]
  40c014:	mov	x2, x0
  40c018:	mov	x0, xzr
  40c01c:	mov	x1, x22
  40c020:	mov	x4, x21
  40c024:	bl	418744 <error@@Base>
  40c028:	ldr	x23, [x23]
  40c02c:	cbnz	x23, 40bf68 <verify_file_data_base@@Base+0x1e8>
  40c030:	ldp	x20, x19, [sp, #48]
  40c034:	ldp	x22, x21, [sp, #32]
  40c038:	ldr	x23, [sp, #16]
  40c03c:	ldp	x29, x30, [sp], #64
  40c040:	ret

000000000040c044 <build_target_list@@Base>:
  40c044:	stp	x29, x30, [sp, #-96]!
  40c048:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40c04c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c050:	ldr	x8, [x8, #2864]
  40c054:	ldr	x9, [x9, #2912]
  40c058:	stp	x20, x19, [sp, #80]
  40c05c:	mov	x19, x0
  40c060:	stp	x28, x27, [sp, #16]
  40c064:	cmp	x8, x9
  40c068:	stp	x26, x25, [sp, #32]
  40c06c:	stp	x24, x23, [sp, #48]
  40c070:	stp	x22, x21, [sp, #64]
  40c074:	mov	x29, sp
  40c078:	b.eq	40c1b4 <build_target_list@@Base+0x170>  // b.none
  40c07c:	mov	x0, x19
  40c080:	bl	406790 <strlen@plt>
  40c084:	mov	x10, #0xf7cf                	// #63439
  40c088:	movk	x10, #0xe353, lsl #16
  40c08c:	movk	x10, #0x9ba5, lsl #32
  40c090:	lsr	x8, x0, #2
  40c094:	movk	x10, #0x20c4, lsl #48
  40c098:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c09c:	add	x9, x9, #0xb00
  40c0a0:	umulh	x8, x8, x10
  40c0a4:	ldr	x27, [x9]
  40c0a8:	ldr	x21, [x9, #32]
  40c0ac:	lsr	x8, x8, #4
  40c0b0:	mov	w9, #0x1f4                 	// #500
  40c0b4:	mul	x8, x8, x9
  40c0b8:	add	x20, x8, #0x1f4
  40c0bc:	mov	x0, x19
  40c0c0:	mov	x1, x20
  40c0c4:	bl	417854 <xrealloc@@Base>
  40c0c8:	cmp	x21, #0x1
  40c0cc:	mov	x19, x0
  40c0d0:	b.lt	40c19c <build_target_list@@Base+0x158>  // b.tstop
  40c0d4:	mov	x28, xzr
  40c0d8:	add	x26, x27, x21, lsl #3
  40c0dc:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  40c0e0:	mov	x21, x19
  40c0e4:	ldr	x25, [x27]
  40c0e8:	cbz	x25, 40c18c <build_target_list@@Base+0x148>
  40c0ec:	ldr	x8, [x24, #2344]
  40c0f0:	cmp	x8, x25
  40c0f4:	b.eq	40c18c <build_target_list@@Base+0x148>  // b.none
  40c0f8:	ldrb	w8, [x25, #137]
  40c0fc:	tbz	w8, #3, 40c18c <build_target_list@@Base+0x148>
  40c100:	ldr	x23, [x25]
  40c104:	mov	x0, x23
  40c108:	bl	406790 <strlen@plt>
  40c10c:	add	x8, x0, #0x1
  40c110:	add	x28, x8, x28
  40c114:	mov	x22, x0
  40c118:	cmp	x28, x20
  40c11c:	b.ls	40c170 <build_target_list@@Base+0x12c>  // b.plast
  40c120:	mov	x11, #0xf7cf                	// #63439
  40c124:	movk	x11, #0xe353, lsl #16
  40c128:	movk	x11, #0x9ba5, lsl #32
  40c12c:	lsr	x9, x8, #2
  40c130:	movk	x11, #0x20c4, lsl #48
  40c134:	umulh	x9, x9, x11
  40c138:	add	x10, x20, x8
  40c13c:	lsr	x9, x9, #4
  40c140:	neg	x8, x8
  40c144:	mov	w11, #0x1f4                 	// #500
  40c148:	madd	x8, x9, x11, x8
  40c14c:	add	x8, x10, x8
  40c150:	add	x20, x8, #0x1f4
  40c154:	mov	x0, x19
  40c158:	mov	x1, x20
  40c15c:	sub	x21, x21, x19
  40c160:	bl	417854 <xrealloc@@Base>
  40c164:	ldr	x23, [x25]
  40c168:	mov	x19, x0
  40c16c:	add	x21, x0, x21
  40c170:	mov	x0, x21
  40c174:	mov	x1, x23
  40c178:	mov	x2, x22
  40c17c:	bl	406750 <memcpy@plt>
  40c180:	add	x21, x21, x22
  40c184:	mov	w8, #0x20                  	// #32
  40c188:	strb	w8, [x21], #1
  40c18c:	add	x27, x27, #0x8
  40c190:	cmp	x27, x26
  40c194:	b.cc	40c0e4 <build_target_list@@Base+0xa0>  // b.lo, b.ul, b.last
  40c198:	b	40c1a0 <build_target_list@@Base+0x15c>
  40c19c:	mov	x21, x19
  40c1a0:	sturb	wzr, [x21, #-1]
  40c1a4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40c1a8:	ldr	x8, [x8, #2864]
  40c1ac:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c1b0:	str	x8, [x9, #2912]
  40c1b4:	mov	x0, x19
  40c1b8:	ldp	x20, x19, [sp, #80]
  40c1bc:	ldp	x22, x21, [sp, #64]
  40c1c0:	ldp	x24, x23, [sp, #48]
  40c1c4:	ldp	x26, x25, [sp, #32]
  40c1c8:	ldp	x28, x27, [sp, #16]
  40c1cc:	ldp	x29, x30, [sp], #96
  40c1d0:	ret

000000000040c1d4 <init_hash_files@@Base>:
  40c1d4:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40c1d8:	adrp	x2, 40c000 <verify_file_data_base@@Base+0x280>
  40c1dc:	adrp	x3, 40c000 <verify_file_data_base@@Base+0x280>
  40c1e0:	adrp	x4, 40a000 <variable_expand_string@@Base+0x3c0>
  40c1e4:	add	x0, x0, #0xb00
  40c1e8:	add	x2, x2, #0x1fc
  40c1ec:	add	x3, x3, #0x218
  40c1f0:	add	x4, x4, #0xa88
  40c1f4:	mov	w1, #0x3e8                 	// #1000
  40c1f8:	b	40f3e8 <hash_init@@Base>
  40c1fc:	stp	x29, x30, [sp, #-16]!
  40c200:	ldr	x0, [x0, #8]
  40c204:	mov	x29, sp
  40c208:	bl	40fcd8 <jhash_string@@Base>
  40c20c:	mov	w0, w0
  40c210:	ldp	x29, x30, [sp], #16
  40c214:	ret
  40c218:	mov	x0, xzr
  40c21c:	ret

000000000040c220 <subst_expand@@Base>:
  40c220:	stp	x29, x30, [sp, #-96]!
  40c224:	stp	x26, x25, [sp, #32]
  40c228:	stp	x24, x23, [sp, #48]
  40c22c:	stp	x22, x21, [sp, #64]
  40c230:	stp	x20, x19, [sp, #80]
  40c234:	mov	w23, w6
  40c238:	mov	x19, x5
  40c23c:	mov	x24, x4
  40c240:	mov	x20, x3
  40c244:	mov	x25, x2
  40c248:	mov	x21, x1
  40c24c:	mov	x22, x0
  40c250:	stp	x28, x27, [sp, #16]
  40c254:	mov	x29, sp
  40c258:	cbnz	x4, 40c290 <subst_expand@@Base+0x70>
  40c25c:	cbnz	w23, 40c290 <subst_expand@@Base+0x70>
  40c260:	mov	x0, x21
  40c264:	bl	406790 <strlen@plt>
  40c268:	mov	x2, x0
  40c26c:	mov	x0, x22
  40c270:	mov	x1, x21
  40c274:	bl	4099c4 <variable_buffer_output@@Base>
  40c278:	mov	x22, x0
  40c27c:	cbz	x19, 40c358 <subst_expand@@Base+0x138>
  40c280:	mov	x0, x22
  40c284:	mov	x1, x20
  40c288:	mov	x2, x19
  40c28c:	b	40c38c <subst_expand@@Base+0x16c>
  40c290:	cmp	w23, #0x0
  40c294:	cset	w8, ne  // ne = any
  40c298:	cmp	x24, #0x0
  40c29c:	cset	w9, eq  // eq = none
  40c2a0:	and	w28, w9, w8
  40c2a4:	mov	x27, x21
  40c2a8:	mov	x0, x27
  40c2ac:	cbz	w28, 40c2c0 <subst_expand@@Base+0xa0>
  40c2b0:	bl	417950 <next_token@@Base>
  40c2b4:	bl	417930 <end_of_token@@Base>
  40c2b8:	mov	x26, x0
  40c2bc:	b	40c2d0 <subst_expand@@Base+0xb0>
  40c2c0:	mov	x1, x25
  40c2c4:	bl	406e00 <strstr@plt>
  40c2c8:	mov	x26, x0
  40c2cc:	cbz	x0, 40c378 <subst_expand@@Base+0x158>
  40c2d0:	subs	x2, x26, x27
  40c2d4:	b.ls	40c2e8 <subst_expand@@Base+0xc8>  // b.plast
  40c2d8:	mov	x0, x22
  40c2dc:	mov	x1, x27
  40c2e0:	bl	4099c4 <variable_buffer_output@@Base>
  40c2e4:	mov	x22, x0
  40c2e8:	cbz	w23, 40c324 <subst_expand@@Base+0x104>
  40c2ec:	cmp	x26, x21
  40c2f0:	b.ls	40c30c <subst_expand@@Base+0xec>  // b.plast
  40c2f4:	ldurb	w8, [x26, #-1]
  40c2f8:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c2fc:	add	x9, x9, #0xcf0
  40c300:	ldrh	w8, [x9, x8, lsl #1]
  40c304:	tst	w8, #0x6
  40c308:	b.eq	40c338 <subst_expand@@Base+0x118>  // b.none
  40c30c:	ldrb	w8, [x26, x24]
  40c310:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c314:	add	x9, x9, #0xcf0
  40c318:	ldrh	w8, [x9, x8, lsl #1]
  40c31c:	tst	w8, #0x7
  40c320:	b.eq	40c338 <subst_expand@@Base+0x118>  // b.none
  40c324:	cbz	x19, 40c34c <subst_expand@@Base+0x12c>
  40c328:	mov	x0, x22
  40c32c:	mov	x1, x20
  40c330:	mov	x2, x19
  40c334:	b	40c344 <subst_expand@@Base+0x124>
  40c338:	mov	x0, x22
  40c33c:	mov	x1, x25
  40c340:	mov	x2, x24
  40c344:	bl	4099c4 <variable_buffer_output@@Base>
  40c348:	mov	x22, x0
  40c34c:	add	x27, x26, x24
  40c350:	ldrb	w8, [x27]
  40c354:	cbnz	w8, 40c2a8 <subst_expand@@Base+0x88>
  40c358:	mov	x0, x22
  40c35c:	ldp	x20, x19, [sp, #80]
  40c360:	ldp	x22, x21, [sp, #64]
  40c364:	ldp	x24, x23, [sp, #48]
  40c368:	ldp	x26, x25, [sp, #32]
  40c36c:	ldp	x28, x27, [sp, #16]
  40c370:	ldp	x29, x30, [sp], #96
  40c374:	ret
  40c378:	mov	x0, x27
  40c37c:	bl	406790 <strlen@plt>
  40c380:	mov	x2, x0
  40c384:	mov	x0, x22
  40c388:	mov	x1, x27
  40c38c:	ldp	x20, x19, [sp, #80]
  40c390:	ldp	x22, x21, [sp, #64]
  40c394:	ldp	x24, x23, [sp, #48]
  40c398:	ldp	x26, x25, [sp, #32]
  40c39c:	ldp	x28, x27, [sp, #16]
  40c3a0:	ldp	x29, x30, [sp], #96
  40c3a4:	b	4099c4 <variable_buffer_output@@Base>

000000000040c3a8 <patsubst_expand_pat@@Base>:
  40c3a8:	sub	sp, sp, #0xc0
  40c3ac:	stp	x29, x30, [sp, #96]
  40c3b0:	stp	x24, x23, [sp, #144]
  40c3b4:	stp	x22, x21, [sp, #160]
  40c3b8:	stp	x20, x19, [sp, #176]
  40c3bc:	add	x29, sp, #0x60
  40c3c0:	mov	x22, x5
  40c3c4:	mov	x23, x4
  40c3c8:	mov	x24, x3
  40c3cc:	mov	x20, x2
  40c3d0:	mov	x19, x1
  40c3d4:	mov	x21, x0
  40c3d8:	stp	x28, x27, [sp, #112]
  40c3dc:	stp	x26, x25, [sp, #128]
  40c3e0:	stur	x1, [x29, #-8]
  40c3e4:	cbz	x5, 40c5c0 <patsubst_expand_pat@@Base+0x218>
  40c3e8:	mvn	x8, x24
  40c3ec:	add	x8, x22, x8
  40c3f0:	mov	x0, x22
  40c3f4:	stur	x8, [x29, #-40]
  40c3f8:	bl	406790 <strlen@plt>
  40c3fc:	str	x0, [sp, #48]
  40c400:	cbz	x23, 40c5d4 <patsubst_expand_pat@@Base+0x22c>
  40c404:	mov	x0, x23
  40c408:	bl	406790 <strlen@plt>
  40c40c:	mov	x26, x0
  40c410:	sub	x0, x29, #0x8
  40c414:	sub	x1, x29, #0x10
  40c418:	bl	417970 <find_next_token@@Base>
  40c41c:	cbz	x0, 40c60c <patsubst_expand_pat@@Base+0x264>
  40c420:	add	x9, x20, #0x1
  40c424:	str	x9, [sp, #24]
  40c428:	sub	x9, x26, #0x1
  40c42c:	stur	x9, [x29, #-32]
  40c430:	ldr	x9, [sp, #48]
  40c434:	mvn	x8, x20
  40c438:	cmp	x22, #0x0
  40c43c:	add	x28, x23, x8
  40c440:	cset	w8, eq  // eq = none
  40c444:	adrp	x25, 428000 <_IO_stdin_used@@Base+0x4290>
  40c448:	mov	x19, x0
  40c44c:	stp	x22, x24, [sp, #32]
  40c450:	mov	w27, wzr
  40c454:	neg	x9, x9
  40c458:	str	w8, [sp, #12]
  40c45c:	add	x22, x26, x28
  40c460:	sub	x8, x28, #0x1
  40c464:	add	x25, x25, #0xc2c
  40c468:	str	x9, [sp, #16]
  40c46c:	stur	x8, [x29, #-24]
  40c470:	ldur	x24, [x29, #-16]
  40c474:	cmp	x24, x22
  40c478:	cset	w8, cc  // cc = lo, ul, last
  40c47c:	cbz	x28, 40c4c0 <patsubst_expand_pat@@Base+0x118>
  40c480:	b.cc	40c4c0 <patsubst_expand_pat@@Base+0x118>  // b.lo, b.ul, b.last
  40c484:	ldrb	w8, [x19]
  40c488:	ldrb	w9, [x20]
  40c48c:	cmp	w8, w9
  40c490:	b.ne	40c574 <patsubst_expand_pat@@Base+0x1cc>  // b.any
  40c494:	ldur	x8, [x29, #-24]
  40c498:	ldurb	w9, [x23, #-2]
  40c49c:	ldrb	w8, [x19, x8]
  40c4a0:	cmp	w8, w9
  40c4a4:	b.ne	40c574 <patsubst_expand_pat@@Base+0x1cc>  // b.any
  40c4a8:	ldr	x1, [sp, #24]
  40c4ac:	ldur	x2, [x29, #-24]
  40c4b0:	add	x0, x19, #0x1
  40c4b4:	bl	406a30 <strncmp@plt>
  40c4b8:	cbnz	w0, 40c574 <patsubst_expand_pat@@Base+0x1cc>
  40c4bc:	mov	w8, wzr
  40c4c0:	cbz	x26, 40c570 <patsubst_expand_pat@@Base+0x1c8>
  40c4c4:	cbnz	w8, 40c570 <patsubst_expand_pat@@Base+0x1c8>
  40c4c8:	ldur	x9, [x29, #-32]
  40c4cc:	add	x8, x24, x19
  40c4d0:	ldurb	w8, [x8, #-1]
  40c4d4:	ldrb	w9, [x23, x9]
  40c4d8:	cmp	w8, w9
  40c4dc:	b.ne	40c574 <patsubst_expand_pat@@Base+0x1cc>  // b.any
  40c4e0:	sub	x8, x24, x26
  40c4e4:	add	x0, x19, x8
  40c4e8:	ldrb	w8, [x0]
  40c4ec:	ldrb	w9, [x23]
  40c4f0:	cmp	w8, w9
  40c4f4:	b.ne	40c574 <patsubst_expand_pat@@Base+0x1cc>  // b.any
  40c4f8:	ldur	x2, [x29, #-32]
  40c4fc:	mov	x1, x23
  40c500:	bl	406a30 <strncmp@plt>
  40c504:	cbnz	w0, 40c574 <patsubst_expand_pat@@Base+0x1cc>
  40c508:	ldr	x1, [sp, #40]
  40c50c:	ldur	x2, [x29, #-40]
  40c510:	mov	x0, x21
  40c514:	bl	4099c4 <variable_buffer_output@@Base>
  40c518:	ldr	x24, [sp, #32]
  40c51c:	mov	x21, x0
  40c520:	cbz	x24, 40c548 <patsubst_expand_pat@@Base+0x1a0>
  40c524:	ldur	x8, [x29, #-16]
  40c528:	add	x1, x19, x28
  40c52c:	mov	x0, x21
  40c530:	sub	x2, x8, x22
  40c534:	bl	4099c4 <variable_buffer_output@@Base>
  40c538:	ldr	x2, [sp, #48]
  40c53c:	mov	x1, x24
  40c540:	bl	4099c4 <variable_buffer_output@@Base>
  40c544:	mov	x21, x0
  40c548:	ldur	x8, [x29, #-40]
  40c54c:	cbnz	x8, 40c588 <patsubst_expand_pat@@Base+0x1e0>
  40c550:	ldur	x8, [x29, #-16]
  40c554:	ldr	x9, [sp, #16]
  40c558:	cmp	x8, x9
  40c55c:	ldr	w9, [sp, #12]
  40c560:	cset	w8, eq  // eq = none
  40c564:	orr	w8, w8, w9
  40c568:	tbz	w8, #0, 40c588 <patsubst_expand_pat@@Base+0x1e0>
  40c56c:	b	40c5a0 <patsubst_expand_pat@@Base+0x1f8>
  40c570:	cbz	w8, 40c508 <patsubst_expand_pat@@Base+0x160>
  40c574:	mov	x0, x21
  40c578:	mov	x1, x19
  40c57c:	mov	x2, x24
  40c580:	bl	4099c4 <variable_buffer_output@@Base>
  40c584:	mov	x21, x0
  40c588:	mov	w2, #0x1                   	// #1
  40c58c:	mov	x0, x21
  40c590:	mov	x1, x25
  40c594:	mov	w27, #0x1                   	// #1
  40c598:	bl	4099c4 <variable_buffer_output@@Base>
  40c59c:	mov	x21, x0
  40c5a0:	sub	x0, x29, #0x8
  40c5a4:	sub	x1, x29, #0x10
  40c5a8:	bl	417970 <find_next_token@@Base>
  40c5ac:	mov	x19, x0
  40c5b0:	cbnz	x0, 40c470 <patsubst_expand_pat@@Base+0xc8>
  40c5b4:	cbz	w27, 40c60c <patsubst_expand_pat@@Base+0x264>
  40c5b8:	sub	x21, x21, #0x1
  40c5bc:	b	40c60c <patsubst_expand_pat@@Base+0x264>
  40c5c0:	mov	x0, x24
  40c5c4:	bl	406790 <strlen@plt>
  40c5c8:	stur	x0, [x29, #-40]
  40c5cc:	str	xzr, [sp, #48]
  40c5d0:	cbnz	x23, 40c404 <patsubst_expand_pat@@Base+0x5c>
  40c5d4:	mov	x0, x20
  40c5d8:	bl	406790 <strlen@plt>
  40c5dc:	mov	x22, x0
  40c5e0:	mov	x0, x24
  40c5e4:	bl	406790 <strlen@plt>
  40c5e8:	mov	x5, x0
  40c5ec:	mov	w6, #0x1                   	// #1
  40c5f0:	mov	x0, x21
  40c5f4:	mov	x1, x19
  40c5f8:	mov	x2, x20
  40c5fc:	mov	x3, x24
  40c600:	mov	x4, x22
  40c604:	bl	40c220 <subst_expand@@Base>
  40c608:	mov	x21, x0
  40c60c:	mov	x0, x21
  40c610:	ldp	x20, x19, [sp, #176]
  40c614:	ldp	x22, x21, [sp, #160]
  40c618:	ldp	x24, x23, [sp, #144]
  40c61c:	ldp	x26, x25, [sp, #128]
  40c620:	ldp	x28, x27, [sp, #112]
  40c624:	ldp	x29, x30, [sp, #96]
  40c628:	add	sp, sp, #0xc0
  40c62c:	ret

000000000040c630 <patsubst_expand@@Base>:
  40c630:	stp	x29, x30, [sp, #-64]!
  40c634:	stp	x22, x21, [sp, #32]
  40c638:	mov	x22, x0
  40c63c:	mov	x0, x2
  40c640:	str	x23, [sp, #16]
  40c644:	stp	x20, x19, [sp, #48]
  40c648:	mov	x29, sp
  40c64c:	mov	x19, x3
  40c650:	mov	x20, x2
  40c654:	mov	x21, x1
  40c658:	bl	41ab64 <find_percent@@Base>
  40c65c:	mov	x23, x0
  40c660:	mov	x0, x19
  40c664:	bl	41ab64 <find_percent@@Base>
  40c668:	cmp	x0, #0x0
  40c66c:	csinc	x5, xzr, x0, eq  // eq = none
  40c670:	cmp	x23, #0x0
  40c674:	csinc	x4, xzr, x23, eq  // eq = none
  40c678:	mov	x0, x22
  40c67c:	mov	x1, x21
  40c680:	mov	x2, x20
  40c684:	mov	x3, x19
  40c688:	ldp	x20, x19, [sp, #48]
  40c68c:	ldp	x22, x21, [sp, #32]
  40c690:	ldr	x23, [sp, #16]
  40c694:	ldp	x29, x30, [sp], #64
  40c698:	b	40c3a8 <patsubst_expand_pat@@Base>

000000000040c69c <pattern_matches@@Base>:
  40c69c:	stp	x29, x30, [sp, #-64]!
  40c6a0:	stp	x20, x19, [sp, #48]
  40c6a4:	mov	x19, x2
  40c6a8:	mov	x20, x0
  40c6ac:	stp	x24, x23, [sp, #16]
  40c6b0:	stp	x22, x21, [sp, #32]
  40c6b4:	mov	x29, sp
  40c6b8:	cbz	x1, 40c6c4 <pattern_matches@@Base+0x28>
  40c6bc:	mov	x22, x1
  40c6c0:	b	40c704 <pattern_matches@@Base+0x68>
  40c6c4:	mov	x0, x20
  40c6c8:	bl	406790 <strlen@plt>
  40c6cc:	add	x9, x0, #0x10
  40c6d0:	mov	x8, sp
  40c6d4:	and	x9, x9, #0xfffffffffffffff0
  40c6d8:	sub	x21, x8, x9
  40c6dc:	add	x2, x0, #0x1
  40c6e0:	mov	sp, x21
  40c6e4:	mov	x0, x21
  40c6e8:	mov	x1, x20
  40c6ec:	bl	406750 <memcpy@plt>
  40c6f0:	mov	x0, x21
  40c6f4:	bl	41ab64 <find_percent@@Base>
  40c6f8:	cbz	x0, 40c764 <pattern_matches@@Base+0xc8>
  40c6fc:	mov	x22, x0
  40c700:	mov	x20, x21
  40c704:	add	x21, x22, #0x1
  40c708:	mov	x0, x21
  40c70c:	bl	406790 <strlen@plt>
  40c710:	mov	x23, x0
  40c714:	mov	x0, x19
  40c718:	bl	406790 <strlen@plt>
  40c71c:	sub	x2, x22, x20
  40c720:	add	x8, x2, x23
  40c724:	cmp	x0, x8
  40c728:	b.cc	40c740 <pattern_matches@@Base+0xa4>  // b.lo, b.ul, b.last
  40c72c:	mov	x24, x0
  40c730:	mov	x0, x20
  40c734:	mov	x1, x19
  40c738:	bl	406a30 <strncmp@plt>
  40c73c:	cbz	w0, 40c748 <pattern_matches@@Base+0xac>
  40c740:	mov	w0, wzr
  40c744:	b	40c790 <pattern_matches@@Base+0xf4>
  40c748:	sub	x8, x24, x23
  40c74c:	add	x1, x19, x8
  40c750:	mov	x0, x21
  40c754:	bl	406c70 <strcmp@plt>
  40c758:	cmp	w0, #0x0
  40c75c:	cset	w0, eq  // eq = none
  40c760:	b	40c790 <pattern_matches@@Base+0xf4>
  40c764:	cmp	x21, x19
  40c768:	b.eq	40c78c <pattern_matches@@Base+0xf0>  // b.none
  40c76c:	ldrb	w8, [x21]
  40c770:	ldrb	w9, [x19]
  40c774:	cmp	w8, w9
  40c778:	b.ne	40c740 <pattern_matches@@Base+0xa4>  // b.any
  40c77c:	cbz	w8, 40c78c <pattern_matches@@Base+0xf0>
  40c780:	add	x0, x21, #0x1
  40c784:	add	x1, x19, #0x1
  40c788:	b	40c754 <pattern_matches@@Base+0xb8>
  40c78c:	mov	w0, #0x1                   	// #1
  40c790:	mov	sp, x29
  40c794:	ldp	x20, x19, [sp, #48]
  40c798:	ldp	x22, x21, [sp, #32]
  40c79c:	ldp	x24, x23, [sp, #16]
  40c7a0:	ldp	x29, x30, [sp], #64
  40c7a4:	ret

000000000040c7a8 <strip_whitespace@@Base>:
  40c7a8:	ldr	x8, [x0]
  40c7ac:	ldr	x9, [x1]
  40c7b0:	cmp	x8, x9
  40c7b4:	b.hi	40c7fc <strip_whitespace@@Base+0x54>  // b.pmore
  40c7b8:	ldrb	w11, [x8]
  40c7bc:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40c7c0:	add	x10, x10, #0xcf0
  40c7c4:	ldrh	w11, [x10, x11, lsl #1]
  40c7c8:	tst	w11, #0x6
  40c7cc:	b.eq	40c7fc <strip_whitespace@@Base+0x54>  // b.none
  40c7d0:	add	x11, x8, #0x1
  40c7d4:	str	x11, [x0]
  40c7d8:	ldr	x9, [x1]
  40c7dc:	mov	x8, x11
  40c7e0:	cmp	x11, x9
  40c7e4:	b.hi	40c7fc <strip_whitespace@@Base+0x54>  // b.pmore
  40c7e8:	mov	x11, x8
  40c7ec:	ldrb	w12, [x11], #1
  40c7f0:	ldrh	w12, [x10, x12, lsl #1]
  40c7f4:	tst	w12, #0x6
  40c7f8:	b.ne	40c7d4 <strip_whitespace@@Base+0x2c>  // b.any
  40c7fc:	cmp	x9, x8
  40c800:	b.cc	40c840 <strip_whitespace@@Base+0x98>  // b.lo, b.ul, b.last
  40c804:	ldrb	w11, [x9]
  40c808:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40c80c:	add	x10, x10, #0xcf0
  40c810:	ldrh	w11, [x10, x11, lsl #1]
  40c814:	tst	w11, #0x6
  40c818:	b.eq	40c840 <strip_whitespace@@Base+0x98>  // b.none
  40c81c:	sub	x9, x9, #0x1
  40c820:	str	x9, [x1]
  40c824:	ldr	x8, [x0]
  40c828:	cmp	x9, x8
  40c82c:	b.cc	40c840 <strip_whitespace@@Base+0x98>  // b.lo, b.ul, b.last
  40c830:	ldrb	w11, [x9], #-1
  40c834:	ldrh	w11, [x10, x11, lsl #1]
  40c838:	tst	w11, #0x6
  40c83c:	b.ne	40c820 <strip_whitespace@@Base+0x78>  // b.any
  40c840:	mov	x0, x8
  40c844:	ret

000000000040c848 <shell_completed@@Base>:
  40c848:	sub	sp, sp, #0x120
  40c84c:	cmp	w1, #0x0
  40c850:	add	w8, w1, #0x80
  40c854:	ccmp	w0, #0x0, #0x0, gt
  40c858:	mov	w10, #0x7f                  	// #127
  40c85c:	csel	w2, w8, w0, eq  // eq = none
  40c860:	cmp	w1, #0x0
  40c864:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c868:	mov	w11, #0xffffffff            	// #-1
  40c86c:	ccmp	w0, w10, #0x0, eq  // eq = none
  40c870:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  40c874:	str	wzr, [x9, #2920]
  40c878:	cneg	w8, w11, ne  // ne = any
  40c87c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40c880:	add	x1, x1, #0xd2d
  40c884:	mov	x0, sp
  40c888:	stp	x29, x30, [sp, #256]
  40c88c:	str	x28, [sp, #272]
  40c890:	add	x29, sp, #0x100
  40c894:	str	w8, [x9, #2924]
  40c898:	bl	406830 <sprintf@plt>
  40c89c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40c8a0:	ldr	x8, [x8, #2440]
  40c8a4:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  40c8a8:	add	x0, x0, #0xca4
  40c8ac:	mov	x2, sp
  40c8b0:	ldr	x5, [x8, #8]
  40c8b4:	mov	w1, #0xc                   	// #12
  40c8b8:	mov	w3, #0x5                   	// #5
  40c8bc:	mov	w4, wzr
  40c8c0:	mov	x6, xzr
  40c8c4:	bl	420860 <define_variable_in_set@@Base>
  40c8c8:	ldr	x28, [sp, #272]
  40c8cc:	ldp	x29, x30, [sp, #256]
  40c8d0:	add	sp, sp, #0x120
  40c8d4:	ret

000000000040c8d8 <func_shell_base@@Base>:
  40c8d8:	sub	sp, sp, #0x90
  40c8dc:	stp	x29, x30, [sp, #48]
  40c8e0:	add	x29, sp, #0x30
  40c8e4:	stp	x28, x27, [sp, #64]
  40c8e8:	stp	x26, x25, [sp, #80]
  40c8ec:	stp	x24, x23, [sp, #96]
  40c8f0:	stp	x22, x21, [sp, #112]
  40c8f4:	stp	x20, x19, [sp, #128]
  40c8f8:	stur	xzr, [x29, #-8]
  40c8fc:	ldr	x8, [x1]
  40c900:	mov	w21, w2
  40c904:	mov	x19, x0
  40c908:	sub	x4, x29, #0x8
  40c90c:	mov	x0, x8
  40c910:	mov	x1, xzr
  40c914:	mov	x2, xzr
  40c918:	mov	w3, wzr
  40c91c:	bl	413380 <construct_command_argv@@Base>
  40c920:	cbz	x0, 40cbb0 <func_shell_base@@Base+0x2d8>
  40c924:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40c928:	ldr	x23, [x8, #2528]
  40c92c:	mov	x20, x0
  40c930:	bl	418394 <output_start@@Base>
  40c934:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  40c938:	ldr	x8, [x8, #1472]
  40c93c:	cbz	x8, 40c948 <func_shell_base@@Base+0x70>
  40c940:	ldr	w22, [x8, #4]
  40c944:	tbz	w22, #31, 40c958 <func_shell_base@@Base+0x80>
  40c948:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40c94c:	ldr	x0, [x8, #2488]
  40c950:	bl	406940 <fileno@plt>
  40c954:	mov	w22, w0
  40c958:	sub	x0, x29, #0x10
  40c95c:	bl	406850 <pipe@plt>
  40c960:	tbnz	w0, #31, 40cb18 <func_shell_base@@Base+0x240>
  40c964:	ldur	w0, [x29, #-12]
  40c968:	bl	422fc8 <fd_noinherit@@Base>
  40c96c:	ldur	w0, [x29, #-16]
  40c970:	bl	422fc8 <fd_noinherit@@Base>
  40c974:	ldrb	w8, [sp, #24]
  40c978:	ldur	w9, [x29, #-12]
  40c97c:	mov	x0, sp
  40c980:	mov	w1, #0x1                   	// #1
  40c984:	orr	w8, w8, #0x1
  40c988:	mov	x2, x20
  40c98c:	stp	w9, w22, [sp, #16]
  40c990:	strb	w8, [sp, #24]
  40c994:	stp	xzr, x23, [sp]
  40c998:	bl	412e30 <child_execute_job@@Base>
  40c99c:	ldr	x8, [sp]
  40c9a0:	mov	w22, w0
  40c9a4:	mov	x0, x8
  40c9a8:	bl	406cb0 <free@plt>
  40c9ac:	tbnz	w22, #31, 40cb94 <func_shell_base@@Base+0x2bc>
  40c9b0:	ldur	w0, [x29, #-12]
  40c9b4:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  40c9b8:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  40c9bc:	str	w22, [x25, #2920]
  40c9c0:	str	wzr, [x26, #2924]
  40c9c4:	tbnz	w0, #31, 40c9cc <func_shell_base@@Base+0xf4>
  40c9c8:	bl	406b60 <close@plt>
  40c9cc:	mov	w0, #0xc9                  	// #201
  40c9d0:	bl	417888 <xmalloc@@Base>
  40c9d4:	mov	x22, x0
  40c9d8:	mov	x27, xzr
  40c9dc:	mov	w28, #0xc8                  	// #200
  40c9e0:	cmp	x27, x28
  40c9e4:	b.ne	40c9fc <func_shell_base@@Base+0x124>  // b.any
  40c9e8:	add	x1, x27, #0x201
  40c9ec:	mov	x0, x22
  40c9f0:	add	x28, x27, #0x200
  40c9f4:	bl	417854 <xrealloc@@Base>
  40c9f8:	mov	x22, x0
  40c9fc:	add	x23, x22, x27
  40ca00:	sub	x24, x28, x27
  40ca04:	ldur	w0, [x29, #-16]
  40ca08:	mov	x1, x23
  40ca0c:	mov	x2, x24
  40ca10:	bl	406da0 <read@plt>
  40ca14:	cmn	w0, #0x1
  40ca18:	b.ne	40ca30 <func_shell_base@@Base+0x158>  // b.any
  40ca1c:	bl	406eb0 <__errno_location@plt>
  40ca20:	ldr	w8, [x0]
  40ca24:	cmp	w8, #0x4
  40ca28:	b.eq	40ca04 <func_shell_base@@Base+0x12c>  // b.none
  40ca2c:	b	40ca40 <func_shell_base@@Base+0x168>
  40ca30:	cmp	w0, #0x1
  40ca34:	b.lt	40ca40 <func_shell_base@@Base+0x168>  // b.tstop
  40ca38:	add	x27, x27, w0, sxtw
  40ca3c:	b	40c9e0 <func_shell_base@@Base+0x108>
  40ca40:	strb	wzr, [x23]
  40ca44:	ldur	w0, [x29, #-16]
  40ca48:	bl	406b60 <close@plt>
  40ca4c:	ldr	w8, [x26, #2924]
  40ca50:	cbnz	w8, 40ca64 <func_shell_base@@Base+0x18c>
  40ca54:	mov	w0, #0x1                   	// #1
  40ca58:	mov	w1, wzr
  40ca5c:	bl	411388 <reap_children@@Base>
  40ca60:	b	40ca4c <func_shell_base@@Base+0x174>
  40ca64:	ldur	x0, [x29, #-8]
  40ca68:	cbz	x0, 40cab4 <func_shell_base@@Base+0x1dc>
  40ca6c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ca70:	ldrb	w8, [x8, #3236]
  40ca74:	tbz	w8, #1, 40caa4 <func_shell_base@@Base+0x1cc>
  40ca78:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40ca7c:	add	x1, x1, #0xcba
  40ca80:	mov	w2, #0x5                   	// #5
  40ca84:	mov	x0, xzr
  40ca88:	bl	406e10 <dcgettext@plt>
  40ca8c:	ldur	x1, [x29, #-8]
  40ca90:	bl	406ea0 <printf@plt>
  40ca94:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ca98:	ldr	x0, [x8, #2512]
  40ca9c:	bl	406d40 <fflush@plt>
  40caa0:	ldur	x0, [x29, #-8]
  40caa4:	bl	406800 <remove@plt>
  40caa8:	ldur	x0, [x29, #-8]
  40caac:	bl	406cb0 <free@plt>
  40cab0:	ldr	w8, [x26, #2924]
  40cab4:	cmn	w8, #0x1
  40cab8:	str	wzr, [x25, #2920]
  40cabc:	b.eq	40cbd4 <func_shell_base@@Base+0x2fc>  // b.none
  40cac0:	sub	x10, x22, #0x1
  40cac4:	add	x8, x22, #0x1
  40cac8:	mov	x9, x22
  40cacc:	strb	wzr, [x23]
  40cad0:	ldurb	w11, [x8, #-1]
  40cad4:	cmp	w11, #0xd
  40cad8:	b.eq	40caf4 <func_shell_base@@Base+0x21c>  // b.none
  40cadc:	cbz	w11, 40cb60 <func_shell_base@@Base+0x288>
  40cae0:	cmp	w11, #0xa
  40cae4:	add	x12, x9, #0x1
  40cae8:	b.ne	40cb04 <func_shell_base@@Base+0x22c>  // b.any
  40caec:	mov	w11, #0x20                  	// #32
  40caf0:	b	40cb08 <func_shell_base@@Base+0x230>
  40caf4:	ldrb	w12, [x8]
  40caf8:	cmp	w12, #0xa
  40cafc:	b.eq	40cb10 <func_shell_base@@Base+0x238>  // b.none
  40cb00:	add	x12, x9, #0x1
  40cb04:	mov	x10, x9
  40cb08:	strb	w11, [x9]
  40cb0c:	mov	x9, x12
  40cb10:	add	x8, x8, #0x1
  40cb14:	b	40cad0 <func_shell_base@@Base+0x1f8>
  40cb18:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40cb1c:	ldr	x21, [x8, #1552]
  40cb20:	bl	406eb0 <__errno_location@plt>
  40cb24:	mov	x22, x0
  40cb28:	ldr	w0, [x0]
  40cb2c:	bl	406b50 <strerror@plt>
  40cb30:	bl	406790 <strlen@plt>
  40cb34:	ldr	w8, [x22]
  40cb38:	mov	x22, x0
  40cb3c:	mov	w0, w8
  40cb40:	bl	406b50 <strerror@plt>
  40cb44:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x1290>
  40cb48:	mov	x3, x0
  40cb4c:	add	x2, x2, #0xcb1
  40cb50:	mov	x0, x21
  40cb54:	mov	x1, x22
  40cb58:	bl	418744 <error@@Base>
  40cb5c:	b	40cba0 <func_shell_base@@Base+0x2c8>
  40cb60:	sub	x8, x9, #0x2
  40cb64:	cmp	x10, x8
  40cb68:	ccmp	w21, #0x0, #0x0, cc  // cc = lo, ul, last
  40cb6c:	csel	x8, x8, x10, eq  // eq = none
  40cb70:	strb	wzr, [x8, #1]!
  40cb74:	sub	x2, x8, x22
  40cb78:	mov	x0, x19
  40cb7c:	mov	x1, x22
  40cb80:	bl	4099c4 <variable_buffer_output@@Base>
  40cb84:	mov	x19, x0
  40cb88:	mov	x0, x22
  40cb8c:	bl	406cb0 <free@plt>
  40cb90:	b	40cba0 <func_shell_base@@Base+0x2c8>
  40cb94:	mov	w0, #0x7f                  	// #127
  40cb98:	mov	w1, wzr
  40cb9c:	bl	40c848 <shell_completed@@Base>
  40cba0:	ldr	x0, [x20]
  40cba4:	bl	406cb0 <free@plt>
  40cba8:	mov	x0, x20
  40cbac:	bl	406cb0 <free@plt>
  40cbb0:	mov	x0, x19
  40cbb4:	ldp	x20, x19, [sp, #128]
  40cbb8:	ldp	x22, x21, [sp, #112]
  40cbbc:	ldp	x24, x23, [sp, #96]
  40cbc0:	ldp	x26, x25, [sp, #80]
  40cbc4:	ldp	x28, x27, [sp, #64]
  40cbc8:	ldp	x29, x30, [sp, #48]
  40cbcc:	add	sp, sp, #0x90
  40cbd0:	ret
  40cbd4:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  40cbd8:	ldr	x1, [x21, #2488]
  40cbdc:	mov	x0, x22
  40cbe0:	bl	4067a0 <fputs@plt>
  40cbe4:	ldr	x0, [x21, #2488]
  40cbe8:	bl	406d40 <fflush@plt>
  40cbec:	b	40cb88 <func_shell_base@@Base+0x2b0>

000000000040cbf0 <handle_function@@Base>:
  40cbf0:	stp	x29, x30, [sp, #-96]!
  40cbf4:	stp	x28, x27, [sp, #16]
  40cbf8:	stp	x26, x25, [sp, #32]
  40cbfc:	stp	x24, x23, [sp, #48]
  40cc00:	stp	x22, x21, [sp, #64]
  40cc04:	stp	x20, x19, [sp, #80]
  40cc08:	ldr	x23, [x1]
  40cc0c:	mov	x20, x0
  40cc10:	mov	w8, #0x7d                  	// #125
  40cc14:	mov	w9, #0x29                  	// #41
  40cc18:	ldrb	w22, [x23], #1
  40cc1c:	mov	x29, sp
  40cc20:	mov	x24, x1
  40cc24:	cmp	w22, #0x28
  40cc28:	mov	x0, x23
  40cc2c:	csel	w21, w9, w8, eq  // eq = none
  40cc30:	bl	40ce88 <handle_function@@Base+0x298>
  40cc34:	cbz	x0, 40ce24 <handle_function@@Base+0x234>
  40cc38:	ldrb	w8, [x0, #16]
  40cc3c:	mov	x19, x0
  40cc40:	add	x23, x23, x8
  40cc44:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40cc48:	add	x8, x8, #0xcf0
  40cc4c:	ldrb	w12, [x23], #1
  40cc50:	ldrh	w13, [x8, x12, lsl #1]
  40cc54:	tst	w13, #0x6
  40cc58:	b.ne	40cc4c <handle_function@@Base+0x5c>  // b.any
  40cc5c:	cbz	w12, 40ce44 <handle_function@@Base+0x254>
  40cc60:	mov	w9, wzr
  40cc64:	sub	x25, x23, #0x1
  40cc68:	mov	w10, #0x1                   	// #1
  40cc6c:	mov	w11, #0x480                 	// #1152
  40cc70:	tst	w13, w11
  40cc74:	b.eq	40ccac <handle_function@@Base+0xbc>  // b.none
  40cc78:	and	w13, w12, #0xff
  40cc7c:	cmp	w13, #0x2c
  40cc80:	b.ne	40cc8c <handle_function@@Base+0x9c>  // b.any
  40cc84:	add	w10, w10, #0x1
  40cc88:	b	40ccac <handle_function@@Base+0xbc>
  40cc8c:	cmp	w22, w12, uxtb
  40cc90:	b.ne	40cc9c <handle_function@@Base+0xac>  // b.any
  40cc94:	add	w9, w9, #0x1
  40cc98:	b	40ccac <handle_function@@Base+0xbc>
  40cc9c:	cmp	w21, w12, uxtb
  40cca0:	b.ne	40ccac <handle_function@@Base+0xbc>  // b.any
  40cca4:	subs	w9, w9, #0x1
  40cca8:	b.lt	40ccc0 <handle_function@@Base+0xd0>  // b.tstop
  40ccac:	ldrb	w12, [x23]
  40ccb0:	cbz	x12, 40ccc4 <handle_function@@Base+0xd4>
  40ccb4:	ldrh	w13, [x8, x12, lsl #1]
  40ccb8:	add	x23, x23, #0x1
  40ccbc:	b	40cc70 <handle_function@@Base+0x80>
  40ccc0:	sub	x23, x23, #0x1
  40ccc4:	tbz	w9, #31, 40ce44 <handle_function@@Base+0x254>
  40ccc8:	add	w8, w10, #0x2
  40cccc:	sbfiz	x8, x8, #3, #32
  40ccd0:	add	x8, x8, #0xf
  40ccd4:	and	x8, x8, #0xfffffffffffffff0
  40ccd8:	mov	x9, sp
  40ccdc:	str	x23, [x24]
  40cce0:	sub	x24, x9, x8
  40cce4:	mov	sp, x24
  40cce8:	ldrb	w8, [x19, #19]
  40ccec:	tbnz	w8, #0, 40cd68 <handle_function@@Base+0x178>
  40ccf0:	sub	x26, x23, x25
  40ccf4:	add	x0, x26, #0x1
  40ccf8:	bl	417888 <xmalloc@@Base>
  40ccfc:	mov	x1, x25
  40cd00:	mov	x2, x26
  40cd04:	mov	x23, x0
  40cd08:	bl	406750 <memcpy@plt>
  40cd0c:	add	x25, x23, x26
  40cd10:	strb	wzr, [x25]
  40cd14:	tbnz	x26, #63, 40cd74 <handle_function@@Base+0x184>
  40cd18:	mov	w26, wzr
  40cd1c:	mov	x27, x23
  40cd20:	mov	x28, x24
  40cd24:	ldrb	w8, [x19, #18]
  40cd28:	add	w26, w26, #0x1
  40cd2c:	cmp	w26, w8
  40cd30:	b.eq	40cd4c <handle_function@@Base+0x15c>  // b.none
  40cd34:	mov	w0, w22
  40cd38:	mov	w1, w21
  40cd3c:	mov	x2, x27
  40cd40:	mov	x3, x25
  40cd44:	bl	40cefc <handle_function@@Base+0x30c>
  40cd48:	cbnz	x0, 40cd50 <handle_function@@Base+0x160>
  40cd4c:	mov	x0, x25
  40cd50:	str	x27, [x28], #8
  40cd54:	strb	wzr, [x0], #1
  40cd58:	cmp	x0, x25
  40cd5c:	mov	x27, x0
  40cd60:	b.ls	40cd24 <handle_function@@Base+0x134>  // b.plast
  40cd64:	b	40cdd8 <handle_function@@Base+0x1e8>
  40cd68:	cmp	x25, x23
  40cd6c:	b.ls	40cd80 <handle_function@@Base+0x190>  // b.plast
  40cd70:	mov	x23, xzr
  40cd74:	mov	w26, wzr
  40cd78:	mov	x28, x24
  40cd7c:	b	40cdd8 <handle_function@@Base+0x1e8>
  40cd80:	mov	w26, wzr
  40cd84:	mov	x28, x24
  40cd88:	ldrb	w8, [x19, #18]
  40cd8c:	add	w26, w26, #0x1
  40cd90:	cmp	w26, w8
  40cd94:	b.eq	40cdb4 <handle_function@@Base+0x1c4>  // b.none
  40cd98:	mov	w0, w22
  40cd9c:	mov	w1, w21
  40cda0:	mov	x2, x25
  40cda4:	mov	x3, x23
  40cda8:	bl	40cefc <handle_function@@Base+0x30c>
  40cdac:	mov	x27, x0
  40cdb0:	cbnz	x0, 40cdb8 <handle_function@@Base+0x1c8>
  40cdb4:	mov	x27, x23
  40cdb8:	mov	x0, x25
  40cdbc:	mov	x1, x27
  40cdc0:	bl	40a0d0 <expand_argument@@Base>
  40cdc4:	add	x25, x27, #0x1
  40cdc8:	cmp	x25, x23
  40cdcc:	str	x0, [x28], #8
  40cdd0:	b.ls	40cd88 <handle_function@@Base+0x198>  // b.plast
  40cdd4:	mov	x23, xzr
  40cdd8:	str	xzr, [x28]
  40cddc:	ldr	x0, [x20]
  40cde0:	mov	w1, w26
  40cde4:	mov	x2, x24
  40cde8:	mov	x3, x19
  40cdec:	bl	40cf6c <handle_function@@Base+0x37c>
  40cdf0:	str	x0, [x20]
  40cdf4:	ldrb	w8, [x19, #19]
  40cdf8:	tbnz	w8, #0, 40ce08 <handle_function@@Base+0x218>
  40cdfc:	mov	x0, x23
  40ce00:	bl	406cb0 <free@plt>
  40ce04:	b	40ce20 <handle_function@@Base+0x230>
  40ce08:	ldr	x0, [x24]
  40ce0c:	cbz	x0, 40ce20 <handle_function@@Base+0x230>
  40ce10:	add	x19, x24, #0x8
  40ce14:	bl	406cb0 <free@plt>
  40ce18:	ldr	x0, [x19], #8
  40ce1c:	cbnz	x0, 40ce14 <handle_function@@Base+0x224>
  40ce20:	mov	w0, #0x1                   	// #1
  40ce24:	mov	sp, x29
  40ce28:	ldp	x20, x19, [sp, #80]
  40ce2c:	ldp	x22, x21, [sp, #64]
  40ce30:	ldp	x24, x23, [sp, #48]
  40ce34:	ldp	x26, x25, [sp, #32]
  40ce38:	ldp	x28, x27, [sp, #16]
  40ce3c:	ldp	x29, x30, [sp], #96
  40ce40:	ret
  40ce44:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ce48:	ldr	x8, [x8, #1472]
  40ce4c:	ldr	x0, [x19, #8]
  40ce50:	ldr	x20, [x8]
  40ce54:	bl	406790 <strlen@plt>
  40ce58:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40ce5c:	mov	x22, x0
  40ce60:	add	x1, x1, #0xcdf
  40ce64:	mov	w2, #0x5                   	// #5
  40ce68:	mov	x0, xzr
  40ce6c:	bl	406e10 <dcgettext@plt>
  40ce70:	ldr	x3, [x19, #8]
  40ce74:	mov	x2, x0
  40ce78:	mov	x0, x20
  40ce7c:	mov	x1, x22
  40ce80:	mov	w4, w21
  40ce84:	bl	4188bc <fatal@@Base>
  40ce88:	sub	sp, sp, #0x30
  40ce8c:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40ce90:	mov	x8, xzr
  40ce94:	add	x10, x10, #0xcf0
  40ce98:	stp	x29, x30, [sp, #32]
  40ce9c:	add	x29, sp, #0x20
  40cea0:	ldrb	w9, [x0, x8]
  40cea4:	add	x8, x8, #0x1
  40cea8:	ldrh	w9, [x10, x9, lsl #1]
  40ceac:	tbnz	w9, #13, 40cea0 <handle_function@@Base+0x2b0>
  40ceb0:	cmp	x8, #0x1
  40ceb4:	mov	x1, xzr
  40ceb8:	b.eq	40ceec <handle_function@@Base+0x2fc>  // b.none
  40cebc:	and	w9, w9, #0x7
  40cec0:	cbz	w9, 40ceec <handle_function@@Base+0x2fc>
  40cec4:	add	x8, x0, x8
  40cec8:	sub	x8, x8, #0x1
  40cecc:	str	x0, [sp, #16]
  40ced0:	sub	w8, w8, w0
  40ced4:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40ced8:	add	x0, x0, #0xb70
  40cedc:	add	x1, sp, #0x8
  40cee0:	strb	w8, [sp, #24]
  40cee4:	bl	40f63c <hash_find_item@@Base>
  40cee8:	mov	x1, x0
  40ceec:	ldp	x29, x30, [sp, #32]
  40cef0:	mov	x0, x1
  40cef4:	add	sp, sp, #0x30
  40cef8:	ret
  40cefc:	cmp	x2, x3
  40cf00:	b.cs	40cf60 <handle_function@@Base+0x370>  // b.hs, b.nlast
  40cf04:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40cf08:	mov	w8, wzr
  40cf0c:	add	x9, x9, #0xcf0
  40cf10:	mov	w10, #0x480                 	// #1152
  40cf14:	ldrb	w11, [x2]
  40cf18:	ldrh	w12, [x9, x11, lsl #1]
  40cf1c:	tst	w12, w10
  40cf20:	b.eq	40cf54 <handle_function@@Base+0x364>  // b.none
  40cf24:	cmp	w11, w0, uxtb
  40cf28:	b.ne	40cf34 <handle_function@@Base+0x344>  // b.any
  40cf2c:	add	w8, w8, #0x1
  40cf30:	b	40cf54 <handle_function@@Base+0x364>
  40cf34:	cmp	w11, w1, uxtb
  40cf38:	b.ne	40cf48 <handle_function@@Base+0x358>  // b.any
  40cf3c:	subs	w8, w8, #0x1
  40cf40:	b.ge	40cf54 <handle_function@@Base+0x364>  // b.tcont
  40cf44:	b	40cf60 <handle_function@@Base+0x370>
  40cf48:	cbnz	w8, 40cf54 <handle_function@@Base+0x364>
  40cf4c:	cmp	w11, #0x2c
  40cf50:	b.eq	40cf64 <handle_function@@Base+0x374>  // b.none
  40cf54:	add	x2, x2, #0x1
  40cf58:	cmp	x3, x2
  40cf5c:	b.ne	40cf14 <handle_function@@Base+0x324>  // b.any
  40cf60:	mov	x2, xzr
  40cf64:	mov	x0, x2
  40cf68:	ret
  40cf6c:	stp	x29, x30, [sp, #-48]!
  40cf70:	stp	x22, x21, [sp, #16]
  40cf74:	stp	x20, x19, [sp, #32]
  40cf78:	ldrb	w8, [x3, #17]
  40cf7c:	mov	x29, sp
  40cf80:	cmp	w8, w1
  40cf84:	b.gt	40d00c <handle_function@@Base+0x41c>
  40cf88:	mov	x19, x0
  40cf8c:	cbnz	w1, 40cf98 <handle_function@@Base+0x3a8>
  40cf90:	ldrb	w8, [x3, #19]
  40cf94:	tbz	w8, #1, 40cff8 <handle_function@@Base+0x408>
  40cf98:	ldr	x4, [x3]
  40cf9c:	cbz	x4, 40d058 <handle_function@@Base+0x468>
  40cfa0:	ldrb	w9, [x3, #19]
  40cfa4:	ldr	x8, [x3, #8]
  40cfa8:	tbnz	w9, #1, 40cfc8 <handle_function@@Base+0x3d8>
  40cfac:	mov	x0, x19
  40cfb0:	ldp	x20, x19, [sp, #32]
  40cfb4:	ldp	x22, x21, [sp, #16]
  40cfb8:	mov	x1, x2
  40cfbc:	mov	x2, x8
  40cfc0:	ldp	x29, x30, [sp], #48
  40cfc4:	br	x4
  40cfc8:	mov	x0, x8
  40cfcc:	blr	x4
  40cfd0:	cbz	x0, 40cff8 <handle_function@@Base+0x408>
  40cfd4:	mov	x20, x0
  40cfd8:	bl	406790 <strlen@plt>
  40cfdc:	mov	x2, x0
  40cfe0:	mov	x0, x19
  40cfe4:	mov	x1, x20
  40cfe8:	bl	4099c4 <variable_buffer_output@@Base>
  40cfec:	mov	x19, x0
  40cff0:	mov	x0, x20
  40cff4:	bl	406cb0 <free@plt>
  40cff8:	mov	x0, x19
  40cffc:	ldp	x20, x19, [sp, #32]
  40d000:	ldp	x22, x21, [sp, #16]
  40d004:	ldp	x29, x30, [sp], #48
  40d008:	ret
  40d00c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40d010:	ldr	x8, [x8, #1472]
  40d014:	ldr	x0, [x3, #8]
  40d018:	mov	x22, x3
  40d01c:	mov	w20, w1
  40d020:	ldr	x19, [x8]
  40d024:	bl	406790 <strlen@plt>
  40d028:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d02c:	mov	x21, x0
  40d030:	add	x1, x1, #0xdc1
  40d034:	mov	w2, #0x5                   	// #5
  40d038:	mov	x0, xzr
  40d03c:	bl	406e10 <dcgettext@plt>
  40d040:	ldr	x4, [x22, #8]
  40d044:	mov	x2, x0
  40d048:	mov	x0, x19
  40d04c:	mov	x1, x21
  40d050:	mov	w3, w20
  40d054:	bl	4188bc <fatal@@Base>
  40d058:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40d05c:	ldr	x8, [x8, #1472]
  40d060:	ldr	x0, [x3, #8]
  40d064:	mov	x21, x3
  40d068:	ldr	x19, [x8]
  40d06c:	bl	406790 <strlen@plt>
  40d070:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d074:	mov	x20, x0
  40d078:	add	x1, x1, #0xdf8
  40d07c:	mov	w2, #0x5                   	// #5
  40d080:	mov	x0, xzr
  40d084:	bl	406e10 <dcgettext@plt>
  40d088:	ldr	x3, [x21, #8]
  40d08c:	mov	x2, x0
  40d090:	mov	x0, x19
  40d094:	mov	x1, x20
  40d098:	bl	4188bc <fatal@@Base>

000000000040d09c <define_new_function@@Base>:
  40d09c:	stp	x29, x30, [sp, #-64]!
  40d0a0:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40d0a4:	stp	x24, x23, [sp, #16]
  40d0a8:	stp	x22, x21, [sp, #32]
  40d0ac:	stp	x20, x19, [sp, #48]
  40d0b0:	mov	x22, x5
  40d0b4:	mov	w23, w4
  40d0b8:	mov	w20, w3
  40d0bc:	mov	w21, w2
  40d0c0:	mov	x19, x1
  40d0c4:	sub	x8, x1, #0x1
  40d0c8:	add	x10, x10, #0xcf0
  40d0cc:	mov	x29, sp
  40d0d0:	ldrb	w9, [x8, #1]!
  40d0d4:	ldrh	w11, [x10, x9, lsl #1]
  40d0d8:	tbnz	w11, #13, 40d0d0 <define_new_function@@Base+0x34>
  40d0dc:	subs	x24, x8, x19
  40d0e0:	b.eq	40d1b8 <define_new_function@@Base+0x11c>  // b.none
  40d0e4:	cbnz	w9, 40d164 <define_new_function@@Base+0xc8>
  40d0e8:	ldrb	w8, [x19]
  40d0ec:	cmp	w8, #0x2e
  40d0f0:	b.eq	40d164 <define_new_function@@Base+0xc8>  // b.none
  40d0f4:	cmp	x24, #0x100
  40d0f8:	b.cs	40d1e0 <define_new_function@@Base+0x144>  // b.hs, b.nlast
  40d0fc:	cmp	w21, #0x100
  40d100:	b.cs	40d218 <define_new_function@@Base+0x17c>  // b.hs, b.nlast
  40d104:	cmp	w20, #0xff
  40d108:	b.hi	40d180 <define_new_function@@Base+0xe4>  // b.pmore
  40d10c:	cbz	w20, 40d118 <define_new_function@@Base+0x7c>
  40d110:	cmp	w20, w21
  40d114:	b.cc	40d180 <define_new_function@@Base+0xe4>  // b.lo, b.ul, b.last
  40d118:	mov	w0, #0x18                  	// #24
  40d11c:	bl	417888 <xmalloc@@Base>
  40d120:	ldrb	w8, [x0, #19]
  40d124:	mov	x1, x0
  40d128:	strb	w24, [x0, #16]
  40d12c:	strb	w21, [x0, #17]
  40d130:	and	w8, w8, #0xfc
  40d134:	bfxil	w8, w23, #0, #1
  40d138:	eor	w8, w8, #0x3
  40d13c:	strb	w20, [x0, #18]
  40d140:	strb	w8, [x1, #19]
  40d144:	stp	x22, x19, [x1]
  40d148:	ldp	x20, x19, [sp, #48]
  40d14c:	ldp	x22, x21, [sp, #32]
  40d150:	ldp	x24, x23, [sp, #16]
  40d154:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  40d158:	add	x0, x0, #0xb70
  40d15c:	ldp	x29, x30, [sp], #64
  40d160:	b	40f4e8 <hash_insert@@Base>
  40d164:	mov	x20, x0
  40d168:	mov	x0, x19
  40d16c:	bl	406790 <strlen@plt>
  40d170:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d174:	mov	x21, x0
  40d178:	add	x1, x1, #0xd24
  40d17c:	b	40d1f8 <define_new_function@@Base+0x15c>
  40d180:	mov	x21, x0
  40d184:	mov	x0, x19
  40d188:	bl	406790 <strlen@plt>
  40d18c:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d190:	add	x22, x0, #0x14
  40d194:	add	x1, x1, #0xd8d
  40d198:	mov	w2, #0x5                   	// #5
  40d19c:	mov	x0, xzr
  40d1a0:	bl	406e10 <dcgettext@plt>
  40d1a4:	mov	x2, x0
  40d1a8:	mov	x0, x21
  40d1ac:	mov	x1, x22
  40d1b0:	mov	w3, w20
  40d1b4:	b	40d24c <define_new_function@@Base+0x1b0>
  40d1b8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d1bc:	add	x1, x1, #0xd10
  40d1c0:	mov	w2, #0x5                   	// #5
  40d1c4:	mov	x19, x0
  40d1c8:	mov	x0, xzr
  40d1cc:	bl	406e10 <dcgettext@plt>
  40d1d0:	mov	x2, x0
  40d1d4:	mov	x0, x19
  40d1d8:	mov	x1, xzr
  40d1dc:	bl	4188bc <fatal@@Base>
  40d1e0:	mov	x20, x0
  40d1e4:	mov	x0, x19
  40d1e8:	bl	406790 <strlen@plt>
  40d1ec:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d1f0:	mov	x21, x0
  40d1f4:	add	x1, x1, #0xd3e
  40d1f8:	mov	w2, #0x5                   	// #5
  40d1fc:	mov	x0, xzr
  40d200:	bl	406e10 <dcgettext@plt>
  40d204:	mov	x2, x0
  40d208:	mov	x0, x20
  40d20c:	mov	x1, x21
  40d210:	mov	x3, x19
  40d214:	bl	4188bc <fatal@@Base>
  40d218:	mov	x20, x0
  40d21c:	mov	x0, x19
  40d220:	bl	406790 <strlen@plt>
  40d224:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40d228:	add	x22, x0, #0x14
  40d22c:	add	x1, x1, #0xd59
  40d230:	mov	w2, #0x5                   	// #5
  40d234:	mov	x0, xzr
  40d238:	bl	406e10 <dcgettext@plt>
  40d23c:	mov	x2, x0
  40d240:	mov	x0, x20
  40d244:	mov	x1, x22
  40d248:	mov	w3, w21
  40d24c:	mov	x4, x19
  40d250:	bl	4188bc <fatal@@Base>

000000000040d254 <hash_init_function_table@@Base>:
  40d254:	stp	x29, x30, [sp, #-32]!
  40d258:	str	x19, [sp, #16]
  40d25c:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  40d260:	add	x19, x19, #0xb70
  40d264:	adrp	x2, 40d000 <handle_function@@Base+0x410>
  40d268:	adrp	x3, 40d000 <handle_function@@Base+0x410>
  40d26c:	adrp	x4, 40d000 <handle_function@@Base+0x410>
  40d270:	add	x2, x2, #0x2ac
  40d274:	add	x3, x3, #0x2d0
  40d278:	add	x4, x4, #0x2d8
  40d27c:	mov	w1, #0x48                  	// #72
  40d280:	mov	x0, x19
  40d284:	mov	x29, sp
  40d288:	bl	40f3e8 <hash_init@@Base>
  40d28c:	mov	x0, x19
  40d290:	ldr	x19, [sp, #16]
  40d294:	adrp	x1, 43b000 <memcpy@GLIBC_2.17>
  40d298:	add	x1, x1, #0x5c8
  40d29c:	mov	w2, #0x24                  	// #36
  40d2a0:	mov	w3, #0x18                  	// #24
  40d2a4:	ldp	x29, x30, [sp], #32
  40d2a8:	b	40f49c <hash_load@@Base>
  40d2ac:	stp	x29, x30, [sp, #-16]!
  40d2b0:	ldr	x8, [x0, #8]
  40d2b4:	ldrb	w1, [x0, #16]
  40d2b8:	mov	x29, sp
  40d2bc:	mov	x0, x8
  40d2c0:	bl	40fb74 <jhash@@Base>
  40d2c4:	mov	w0, w0
  40d2c8:	ldp	x29, x30, [sp], #16
  40d2cc:	ret
  40d2d0:	mov	x0, xzr
  40d2d4:	ret
  40d2d8:	ldrb	w2, [x0, #16]
  40d2dc:	ldrb	w9, [x1, #16]
  40d2e0:	mov	x8, x0
  40d2e4:	subs	w0, w2, w9
  40d2e8:	b.eq	40d2f0 <hash_init_function_table@@Base+0x9c>  // b.none
  40d2ec:	ret
  40d2f0:	ldr	x0, [x8, #8]
  40d2f4:	ldr	x1, [x1, #8]
  40d2f8:	cmp	x0, x1
  40d2fc:	b.eq	40d304 <hash_init_function_table@@Base+0xb0>  // b.none
  40d300:	b	406c30 <memcmp@plt>
  40d304:	mov	w0, wzr
  40d308:	ret
  40d30c:	stp	x29, x30, [sp, #-96]!
  40d310:	stp	x28, x27, [sp, #16]
  40d314:	stp	x26, x25, [sp, #32]
  40d318:	stp	x24, x23, [sp, #48]
  40d31c:	stp	x22, x21, [sp, #64]
  40d320:	stp	x20, x19, [sp, #80]
  40d324:	mov	x29, sp
  40d328:	sub	sp, sp, #0x2, lsl #12
  40d32c:	sub	sp, sp, #0x30
  40d330:	ldr	x8, [x1]
  40d334:	mov	x19, x0
  40d338:	sub	x0, x29, #0x10
  40d33c:	sub	x1, x29, #0x18
  40d340:	stp	xzr, x8, [x29, #-24]
  40d344:	bl	417970 <find_next_token@@Base>
  40d348:	cbz	x0, 40d544 <hash_init_function_table@@Base+0x2f0>
  40d34c:	add	x9, sp, #0x1, lsl #12
  40d350:	add	x8, sp, #0x10
  40d354:	add	x9, x9, #0x14
  40d358:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  40d35c:	mov	x1, x0
  40d360:	mov	w20, wzr
  40d364:	mov	w25, #0x2f                  	// #47
  40d368:	add	x26, x26, #0xcf0
  40d36c:	add	x27, x8, #0x1, lsl #12
  40d370:	orr	x24, x8, #0x1
  40d374:	orr	x8, x9, #0x1
  40d378:	str	x8, [sp, #8]
  40d37c:	ldur	x2, [x29, #-24]
  40d380:	cmp	x2, #0xfff
  40d384:	b.hi	40d528 <hash_init_function_table@@Base+0x2d4>  // b.pmore
  40d388:	add	x0, sp, #0x1, lsl #12
  40d38c:	add	x0, x0, #0x14
  40d390:	bl	406e60 <strncpy@plt>
  40d394:	ldur	x8, [x29, #-24]
  40d398:	add	x9, sp, #0x1, lsl #12
  40d39c:	add	x9, x9, #0x14
  40d3a0:	strb	wzr, [x9, x8]
  40d3a4:	add	x8, sp, #0x15
  40d3a8:	ldrb	w8, [x8, #4095]
  40d3ac:	cbz	w8, 40d528 <hash_init_function_table@@Base+0x2d4>
  40d3b0:	cmp	w8, #0x2f
  40d3b4:	b.ne	40d3c8 <hash_init_function_table@@Base+0x174>  // b.any
  40d3b8:	ldr	x23, [sp, #8]
  40d3bc:	mov	x28, x24
  40d3c0:	strh	w25, [sp, #16]
  40d3c4:	b	40d3f4 <hash_init_function_table@@Base+0x1a0>
  40d3c8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40d3cc:	ldr	x1, [x8, #16]
  40d3d0:	cbz	x1, 40d528 <hash_init_function_table@@Base+0x2d4>
  40d3d4:	add	x23, sp, #0x1, lsl #12
  40d3d8:	add	x0, sp, #0x10
  40d3dc:	add	x23, x23, #0x14
  40d3e0:	bl	406d50 <strcpy@plt>
  40d3e4:	add	x0, sp, #0x10
  40d3e8:	bl	406790 <strlen@plt>
  40d3ec:	add	x8, sp, #0x10
  40d3f0:	add	x28, x8, x0
  40d3f4:	ldrb	w8, [x23]
  40d3f8:	cbz	w8, 40d4d8 <hash_init_function_table@@Base+0x284>
  40d3fc:	and	x9, x8, #0xff
  40d400:	ldrsh	w10, [x26, x9, lsl #1]
  40d404:	mov	w9, w8
  40d408:	mov	x1, x23
  40d40c:	tbz	w10, #31, 40d420 <hash_init_function_table@@Base+0x1cc>
  40d410:	ldrb	w9, [x1, #1]!
  40d414:	ldrsh	w10, [x26, x9, lsl #1]
  40d418:	tbnz	w10, #31, 40d410 <hash_init_function_table@@Base+0x1bc>
  40d41c:	mov	x23, x1
  40d420:	tst	w10, #0xffff8001
  40d424:	mov	w8, w9
  40d428:	b.ne	40d43c <hash_init_function_table@@Base+0x1e8>  // b.any
  40d42c:	ldrb	w8, [x23, #1]!
  40d430:	ldrh	w10, [x26, x8, lsl #1]
  40d434:	tst	w10, #0xffff8001
  40d438:	b.eq	40d42c <hash_init_function_table@@Base+0x1d8>  // b.none
  40d43c:	sub	x22, x23, x1
  40d440:	cmp	x22, #0x1
  40d444:	b.eq	40d458 <hash_init_function_table@@Base+0x204>  // b.none
  40d448:	cmp	x22, #0x2
  40d44c:	b.eq	40d468 <hash_init_function_table@@Base+0x214>  // b.none
  40d450:	cbnz	x22, 40d49c <hash_init_function_table@@Base+0x248>
  40d454:	b	40d4d8 <hash_init_function_table@@Base+0x284>
  40d458:	and	w9, w9, #0xff
  40d45c:	cmp	w9, #0x2e
  40d460:	b.ne	40d49c <hash_init_function_table@@Base+0x248>  // b.any
  40d464:	b	40d4d0 <hash_init_function_table@@Base+0x27c>
  40d468:	and	w9, w9, #0xff
  40d46c:	cmp	w9, #0x2e
  40d470:	b.ne	40d49c <hash_init_function_table@@Base+0x248>  // b.any
  40d474:	ldrb	w9, [x1, #1]
  40d478:	cmp	w9, #0x2e
  40d47c:	b.ne	40d49c <hash_init_function_table@@Base+0x248>  // b.any
  40d480:	cmp	x28, x24
  40d484:	b.ls	40d4d0 <hash_init_function_table@@Base+0x27c>  // b.plast
  40d488:	ldurb	w9, [x28, #-2]
  40d48c:	sub	x28, x28, #0x1
  40d490:	ldrsh	w9, [x26, x9, lsl #1]
  40d494:	tbz	w9, #31, 40d488 <hash_init_function_table@@Base+0x234>
  40d498:	b	40d4d0 <hash_init_function_table@@Base+0x27c>
  40d49c:	ldurb	w8, [x28, #-1]
  40d4a0:	ldrsh	w8, [x26, x8, lsl #1]
  40d4a4:	tbnz	w8, #31, 40d4ac <hash_init_function_table@@Base+0x258>
  40d4a8:	strb	w25, [x28], #1
  40d4ac:	add	x21, x28, x22
  40d4b0:	cmp	x21, x27
  40d4b4:	b.cs	40d528 <hash_init_function_table@@Base+0x2d4>  // b.hs, b.nlast
  40d4b8:	mov	x0, x28
  40d4bc:	mov	x2, x22
  40d4c0:	bl	406750 <memcpy@plt>
  40d4c4:	ldrb	w8, [x23]
  40d4c8:	strb	wzr, [x28, x22]
  40d4cc:	mov	x28, x21
  40d4d0:	tst	w8, #0xff
  40d4d4:	b.ne	40d3fc <hash_init_function_table@@Base+0x1a8>  // b.any
  40d4d8:	cmp	x28, x24
  40d4dc:	b.ls	40d4f4 <hash_init_function_table@@Base+0x2a0>  // b.plast
  40d4e0:	mov	x8, x28
  40d4e4:	ldrb	w9, [x8, #-1]!
  40d4e8:	ldrsh	w9, [x26, x9, lsl #1]
  40d4ec:	cmp	w9, #0x0
  40d4f0:	csel	x28, x8, x28, lt  // lt = tstop
  40d4f4:	add	x0, sp, #0x10
  40d4f8:	strb	wzr, [x28]
  40d4fc:	bl	406790 <strlen@plt>
  40d500:	mov	x2, x0
  40d504:	add	x1, sp, #0x10
  40d508:	mov	x0, x19
  40d50c:	bl	4099c4 <variable_buffer_output@@Base>
  40d510:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  40d514:	mov	w2, #0x1                   	// #1
  40d518:	add	x1, x1, #0xc2c
  40d51c:	mov	w20, #0x1                   	// #1
  40d520:	bl	4099c4 <variable_buffer_output@@Base>
  40d524:	mov	x19, x0
  40d528:	sub	x0, x29, #0x10
  40d52c:	sub	x1, x29, #0x18
  40d530:	bl	417970 <find_next_token@@Base>
  40d534:	mov	x1, x0
  40d538:	cbnz	x0, 40d37c <hash_init_function_table@@Base+0x128>
  40d53c:	cbz	w20, 40d544 <hash_init_function_table@@Base+0x2f0>
  40d540:	sub	x19, x19, #0x1
  40d544:	mov	x0, x19
  40d548:	add	sp, sp, #0x2, lsl #12
  40d54c:	add	sp, sp, #0x30
  40d550:	ldp	x20, x19, [sp, #80]
  40d554:	ldp	x22, x21, [sp, #64]
  40d558:	ldp	x24, x23, [sp, #48]
  40d55c:	ldp	x26, x25, [sp, #32]
  40d560:	ldp	x28, x27, [sp, #16]
  40d564:	ldp	x29, x30, [sp], #96
  40d568:	ret
  40d56c:	sub	sp, sp, #0x50
  40d570:	stp	x29, x30, [sp, #16]
  40d574:	stp	x24, x23, [sp, #32]
  40d578:	stp	x22, x21, [sp, #48]
  40d57c:	stp	x20, x19, [sp, #64]
  40d580:	ldr	x8, [x1]
  40d584:	mov	x22, x0
  40d588:	add	x29, sp, #0x10
  40d58c:	mov	x20, x2
  40d590:	mov	x0, x8
  40d594:	mov	x19, x1
  40d598:	bl	406790 <strlen@plt>
  40d59c:	ldr	x8, [x19, #8]
  40d5a0:	mov	x1, sp
  40d5a4:	str	x8, [sp, #8]
  40d5a8:	ldrb	w24, [x20, #3]
  40d5ac:	mov	x20, x0
  40d5b0:	add	x0, sp, #0x8
  40d5b4:	bl	417970 <find_next_token@@Base>
  40d5b8:	cbz	x0, 40d630 <hash_init_function_table@@Base+0x3dc>
  40d5bc:	adrp	x21, 428000 <_IO_stdin_used@@Base+0x4290>
  40d5c0:	mov	x23, x0
  40d5c4:	add	x21, x21, #0xc2c
  40d5c8:	cmp	w24, #0x70
  40d5cc:	b.ne	40d5ec <hash_init_function_table@@Base+0x398>  // b.any
  40d5d0:	ldr	x1, [x19]
  40d5d4:	mov	x0, x22
  40d5d8:	mov	x2, x20
  40d5dc:	bl	4099c4 <variable_buffer_output@@Base>
  40d5e0:	ldr	x2, [sp]
  40d5e4:	mov	x1, x23
  40d5e8:	b	40d604 <hash_init_function_table@@Base+0x3b0>
  40d5ec:	ldr	x2, [sp]
  40d5f0:	mov	x0, x22
  40d5f4:	mov	x1, x23
  40d5f8:	bl	4099c4 <variable_buffer_output@@Base>
  40d5fc:	ldr	x1, [x19]
  40d600:	mov	x2, x20
  40d604:	bl	4099c4 <variable_buffer_output@@Base>
  40d608:	mov	w2, #0x1                   	// #1
  40d60c:	mov	x1, x21
  40d610:	bl	4099c4 <variable_buffer_output@@Base>
  40d614:	mov	x22, x0
  40d618:	add	x0, sp, #0x8
  40d61c:	mov	x1, sp
  40d620:	bl	417970 <find_next_token@@Base>
  40d624:	mov	x23, x0
  40d628:	cbnz	x0, 40d5c8 <hash_init_function_table@@Base+0x374>
  40d62c:	sub	x22, x22, #0x1
  40d630:	mov	x0, x22
  40d634:	ldp	x20, x19, [sp, #64]
  40d638:	ldp	x22, x21, [sp, #48]
  40d63c:	ldp	x24, x23, [sp, #32]
  40d640:	ldp	x29, x30, [sp, #16]
  40d644:	add	sp, sp, #0x50
  40d648:	ret
  40d64c:	sub	sp, sp, #0x50
  40d650:	stp	x29, x30, [sp, #16]
  40d654:	stp	x24, x23, [sp, #32]
  40d658:	stp	x22, x21, [sp, #48]
  40d65c:	stp	x20, x19, [sp, #64]
  40d660:	ldr	x8, [x1]
  40d664:	mov	x21, x0
  40d668:	mov	w9, #0x8201                	// #33281
  40d66c:	add	x0, sp, #0x8
  40d670:	stp	xzr, x8, [sp]
  40d674:	ldrb	w22, [x2]
  40d678:	mov	w8, #0x8001                	// #32769
  40d67c:	mov	x1, sp
  40d680:	add	x29, sp, #0x10
  40d684:	cmp	w22, #0x62
  40d688:	csel	w23, w9, w8, eq  // eq = none
  40d68c:	bl	417970 <find_next_token@@Base>
  40d690:	cbz	x0, 40d73c <hash_init_function_table@@Base+0x4e8>
  40d694:	adrp	x19, 425000 <_IO_stdin_used@@Base+0x1290>
  40d698:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  40d69c:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  40d6a0:	mov	x1, x0
  40d6a4:	add	x19, x19, #0x6f6
  40d6a8:	add	x20, x20, #0xc2c
  40d6ac:	add	x24, x24, #0xcf0
  40d6b0:	ldr	x2, [sp]
  40d6b4:	add	x8, x1, x2
  40d6b8:	sub	x8, x8, #0x1
  40d6bc:	cmp	x8, x1
  40d6c0:	b.cc	40d6ec <hash_init_function_table@@Base+0x498>  // b.lo, b.ul, b.last
  40d6c4:	ldrb	w9, [x8]
  40d6c8:	ldrh	w10, [x24, x9, lsl #1]
  40d6cc:	tst	w23, w10
  40d6d0:	b.eq	40d6b8 <hash_init_function_table@@Base+0x464>  // b.none
  40d6d4:	cmp	w22, #0x62
  40d6d8:	b.ne	40d704 <hash_init_function_table@@Base+0x4b0>  // b.any
  40d6dc:	cmp	w9, #0x2e
  40d6e0:	b.ne	40d70c <hash_init_function_table@@Base+0x4b8>  // b.any
  40d6e4:	sub	x2, x8, x1
  40d6e8:	b	40d70c <hash_init_function_table@@Base+0x4b8>
  40d6ec:	cmp	w22, #0x62
  40d6f0:	b.eq	40d70c <hash_init_function_table@@Base+0x4b8>  // b.none
  40d6f4:	mov	w2, #0x2                   	// #2
  40d6f8:	mov	x0, x21
  40d6fc:	mov	x1, x19
  40d700:	b	40d710 <hash_init_function_table@@Base+0x4bc>
  40d704:	sub	x8, x8, x1
  40d708:	add	x2, x8, #0x1
  40d70c:	mov	x0, x21
  40d710:	bl	4099c4 <variable_buffer_output@@Base>
  40d714:	mov	w2, #0x1                   	// #1
  40d718:	mov	x1, x20
  40d71c:	bl	4099c4 <variable_buffer_output@@Base>
  40d720:	mov	x21, x0
  40d724:	add	x0, sp, #0x8
  40d728:	mov	x1, sp
  40d72c:	bl	417970 <find_next_token@@Base>
  40d730:	mov	x1, x0
  40d734:	cbnz	x0, 40d6b0 <hash_init_function_table@@Base+0x45c>
  40d738:	sub	x21, x21, #0x1
  40d73c:	mov	x0, x21
  40d740:	ldp	x20, x19, [sp, #64]
  40d744:	ldp	x22, x21, [sp, #48]
  40d748:	ldp	x24, x23, [sp, #32]
  40d74c:	ldp	x29, x30, [sp, #16]
  40d750:	add	sp, sp, #0x50
  40d754:	ret
  40d758:	sub	sp, sp, #0x60
  40d75c:	stp	x29, x30, [sp, #16]
  40d760:	stp	x26, x25, [sp, #32]
  40d764:	stp	x24, x23, [sp, #48]
  40d768:	stp	x22, x21, [sp, #64]
  40d76c:	stp	x20, x19, [sp, #80]
  40d770:	ldr	x8, [x1]
  40d774:	mov	x19, x0
  40d778:	mov	w9, #0x8200                	// #33280
  40d77c:	add	x0, sp, #0x8
  40d780:	stp	xzr, x8, [sp]
  40d784:	ldrb	w23, [x2]
  40d788:	mov	w8, #0x8000                	// #32768
  40d78c:	mov	x1, sp
  40d790:	add	x29, sp, #0x10
  40d794:	cmp	w23, #0x73
  40d798:	csel	w24, w9, w8, eq  // eq = none
  40d79c:	bl	417970 <find_next_token@@Base>
  40d7a0:	cbz	x0, 40d878 <hash_init_function_table@@Base+0x624>
  40d7a4:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  40d7a8:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  40d7ac:	mov	x21, x0
  40d7b0:	mov	w26, wzr
  40d7b4:	add	x20, x20, #0xc2c
  40d7b8:	add	x25, x25, #0xcf0
  40d7bc:	ldr	x2, [sp]
  40d7c0:	add	x8, x21, x2
  40d7c4:	sub	x22, x8, #0x1
  40d7c8:	cmp	x22, x21
  40d7cc:	b.cc	40d7e8 <hash_init_function_table@@Base+0x594>  // b.lo, b.ul, b.last
  40d7d0:	ldrb	w8, [x22]
  40d7d4:	ldrh	w9, [x25, x8, lsl #1]
  40d7d8:	tst	w24, w9
  40d7dc:	b.ne	40d804 <hash_init_function_table@@Base+0x5b0>  // b.any
  40d7e0:	sub	x22, x22, #0x1
  40d7e4:	b	40d7c8 <hash_init_function_table@@Base+0x574>
  40d7e8:	cmp	w23, #0x73
  40d7ec:	b.eq	40d834 <hash_init_function_table@@Base+0x5e0>  // b.none
  40d7f0:	mov	x0, x19
  40d7f4:	mov	x1, x21
  40d7f8:	bl	4099c4 <variable_buffer_output@@Base>
  40d7fc:	mov	x19, x0
  40d800:	b	40d844 <hash_init_function_table@@Base+0x5f0>
  40d804:	cmp	w23, #0x73
  40d808:	b.ne	40d818 <hash_init_function_table@@Base+0x5c4>  // b.any
  40d80c:	cmp	w8, #0x2e
  40d810:	b.eq	40d81c <hash_init_function_table@@Base+0x5c8>  // b.none
  40d814:	b	40d85c <hash_init_function_table@@Base+0x608>
  40d818:	add	x22, x22, #0x1
  40d81c:	add	x8, x2, x21
  40d820:	sub	x2, x8, x22
  40d824:	mov	x0, x19
  40d828:	mov	x1, x22
  40d82c:	bl	4099c4 <variable_buffer_output@@Base>
  40d830:	mov	x19, x0
  40d834:	cmp	w23, #0x73
  40d838:	b.ne	40d844 <hash_init_function_table@@Base+0x5f0>  // b.any
  40d83c:	cmp	x22, x21
  40d840:	b.cc	40d85c <hash_init_function_table@@Base+0x608>  // b.lo, b.ul, b.last
  40d844:	mov	w2, #0x1                   	// #1
  40d848:	mov	x0, x19
  40d84c:	mov	x1, x20
  40d850:	mov	w26, #0x1                   	// #1
  40d854:	bl	4099c4 <variable_buffer_output@@Base>
  40d858:	mov	x19, x0
  40d85c:	add	x0, sp, #0x8
  40d860:	mov	x1, sp
  40d864:	bl	417970 <find_next_token@@Base>
  40d868:	mov	x21, x0
  40d86c:	cbnz	x0, 40d7bc <hash_init_function_table@@Base+0x568>
  40d870:	cbz	w26, 40d878 <hash_init_function_table@@Base+0x624>
  40d874:	sub	x19, x19, #0x1
  40d878:	mov	x0, x19
  40d87c:	ldp	x20, x19, [sp, #80]
  40d880:	ldp	x22, x21, [sp, #64]
  40d884:	ldp	x24, x23, [sp, #48]
  40d888:	ldp	x26, x25, [sp, #32]
  40d88c:	ldp	x29, x30, [sp, #16]
  40d890:	add	sp, sp, #0x60
  40d894:	ret
  40d898:	stp	x29, x30, [sp, #-64]!
  40d89c:	stp	x22, x21, [sp, #32]
  40d8a0:	stp	x20, x19, [sp, #48]
  40d8a4:	ldr	x20, [x1]
  40d8a8:	str	x23, [sp, #16]
  40d8ac:	ldp	x21, x19, [x1, #8]
  40d8b0:	mov	x22, x0
  40d8b4:	mov	x0, x20
  40d8b8:	mov	x29, sp
  40d8bc:	bl	406790 <strlen@plt>
  40d8c0:	mov	x23, x0
  40d8c4:	mov	x0, x21
  40d8c8:	bl	406790 <strlen@plt>
  40d8cc:	mov	x5, x0
  40d8d0:	mov	x0, x22
  40d8d4:	mov	x1, x19
  40d8d8:	mov	x2, x20
  40d8dc:	mov	x3, x21
  40d8e0:	mov	x4, x23
  40d8e4:	ldp	x20, x19, [sp, #48]
  40d8e8:	ldp	x22, x21, [sp, #32]
  40d8ec:	ldr	x23, [sp, #16]
  40d8f0:	mov	w6, wzr
  40d8f4:	ldp	x29, x30, [sp], #64
  40d8f8:	b	40c220 <subst_expand@@Base>
  40d8fc:	stp	x29, x30, [sp, #-80]!
  40d900:	str	x25, [sp, #16]
  40d904:	stp	x24, x23, [sp, #32]
  40d908:	stp	x22, x21, [sp, #48]
  40d90c:	stp	x20, x19, [sp, #64]
  40d910:	mov	x29, sp
  40d914:	sub	sp, sp, #0xa0
  40d918:	ldr	x8, [x1]
  40d91c:	ldrb	w22, [x2, #6]
  40d920:	mov	x19, x0
  40d924:	sub	x0, x29, #0x68
  40d928:	stur	x8, [x29, #-104]
  40d92c:	ldr	x8, [x1, #8]
  40d930:	sub	x1, x29, #0x78
  40d934:	stur	x8, [x29, #-112]
  40d938:	bl	417970 <find_next_token@@Base>
  40d93c:	mov	w20, wzr
  40d940:	cbz	x0, 40d9ac <hash_init_function_table@@Base+0x758>
  40d944:	sub	x8, x29, #0x8
  40d948:	sub	x21, sp, #0x20
  40d94c:	mov	sp, x21
  40d950:	ldur	x9, [x29, #-104]
  40d954:	str	x21, [x8]
  40d958:	ldrb	w8, [x9]
  40d95c:	cbz	w8, 40d968 <hash_init_function_table@@Base+0x714>
  40d960:	add	x8, x9, #0x1
  40d964:	stur	x8, [x29, #-104]
  40d968:	ldur	x8, [x29, #-120]
  40d96c:	str	x0, [x21, #8]
  40d970:	strb	wzr, [x0, x8]
  40d974:	bl	41ab64 <find_percent@@Base>
  40d978:	ldr	x8, [x21, #8]
  40d97c:	str	x0, [x21, #16]
  40d980:	cmp	x0, #0x0
  40d984:	cinc	w20, w20, eq  // eq = none
  40d988:	mov	x0, x8
  40d98c:	bl	406790 <strlen@plt>
  40d990:	str	x0, [x21, #24]
  40d994:	sub	x0, x29, #0x68
  40d998:	sub	x1, x29, #0x78
  40d99c:	bl	417970 <find_next_token@@Base>
  40d9a0:	mov	x8, x21
  40d9a4:	cbnz	x0, 40d948 <hash_init_function_table@@Base+0x6f4>
  40d9a8:	b	40d9b0 <hash_init_function_table@@Base+0x75c>
  40d9ac:	sub	x21, x29, #0x8
  40d9b0:	sub	x0, x29, #0x70
  40d9b4:	sub	x1, x29, #0x78
  40d9b8:	str	xzr, [x21]
  40d9bc:	bl	417970 <find_next_token@@Base>
  40d9c0:	mov	w21, wzr
  40d9c4:	cbz	x0, 40da20 <hash_init_function_table@@Base+0x7cc>
  40d9c8:	add	x8, x29, #0x18
  40d9cc:	sub	x24, sp, #0x30
  40d9d0:	mov	sp, x24
  40d9d4:	ldur	x9, [x29, #-112]
  40d9d8:	str	x24, [x8]
  40d9dc:	ldrb	w8, [x9]
  40d9e0:	cbz	w8, 40d9ec <hash_init_function_table@@Base+0x798>
  40d9e4:	add	x8, x9, #0x1
  40d9e8:	stur	x8, [x29, #-112]
  40d9ec:	ldur	x8, [x29, #-120]
  40d9f0:	sub	x1, x29, #0x78
  40d9f4:	add	w21, w21, #0x1
  40d9f8:	strb	wzr, [x0, x8]
  40d9fc:	ldur	x8, [x29, #-120]
  40da00:	stp	xzr, x0, [x24, #8]
  40da04:	sub	x0, x29, #0x70
  40da08:	str	wzr, [x24, #32]
  40da0c:	str	x8, [x24, #24]
  40da10:	bl	417970 <find_next_token@@Base>
  40da14:	mov	x8, x24
  40da18:	cbnz	x0, 40d9cc <hash_init_function_table@@Base+0x778>
  40da1c:	b	40da24 <hash_init_function_table@@Base+0x7d0>
  40da20:	add	x24, x29, #0x18
  40da24:	cmp	w20, #0x1
  40da28:	mul	w8, w21, w20
  40da2c:	cset	w9, hi  // hi = pmore
  40da30:	cmp	w8, #0x9
  40da34:	cset	w8, hi  // hi = pmore
  40da38:	and	w23, w9, w8
  40da3c:	cmp	w23, #0x1
  40da40:	str	xzr, [x24]
  40da44:	b.ne	40da90 <hash_init_function_table@@Base+0x83c>  // b.any
  40da48:	adrp	x2, 40f000 <hash_init_function_table@@Base+0x1dac>
  40da4c:	adrp	x3, 40f000 <hash_init_function_table@@Base+0x1dac>
  40da50:	adrp	x4, 40f000 <hash_init_function_table@@Base+0x1dac>
  40da54:	mov	w1, w21
  40da58:	add	x2, x2, #0x2c4
  40da5c:	add	x3, x3, #0x2e0
  40da60:	add	x4, x4, #0x2e8
  40da64:	sub	x0, x29, #0x60
  40da68:	bl	40f3e8 <hash_init@@Base>
  40da6c:	ldr	x20, [x29, #24]
  40da70:	cbz	x20, 40da90 <hash_init_function_table@@Base+0x83c>
  40da74:	sub	x0, x29, #0x60
  40da78:	mov	x1, x20
  40da7c:	bl	40f4e8 <hash_insert@@Base>
  40da80:	cbz	x0, 40da88 <hash_init_function_table@@Base+0x834>
  40da84:	str	x0, [x20, #8]
  40da88:	ldr	x20, [x20]
  40da8c:	cbnz	x20, 40da74 <hash_init_function_table@@Base+0x820>
  40da90:	cbz	w21, 40dbe8 <hash_init_function_table@@Base+0x994>
  40da94:	ldur	x21, [x29, #-8]
  40da98:	ldr	x24, [x29, #24]
  40da9c:	cbz	x21, 40db80 <hash_init_function_table@@Base+0x92c>
  40daa0:	ldr	x1, [x21, #16]
  40daa4:	cbz	x1, 40daf0 <hash_init_function_table@@Base+0x89c>
  40daa8:	cbz	x24, 40db78 <hash_init_function_table@@Base+0x924>
  40daac:	ldr	x0, [x21, #8]
  40dab0:	ldr	x2, [x24, #16]
  40dab4:	bl	40c69c <pattern_matches@@Base>
  40dab8:	ldr	w8, [x24, #32]
  40dabc:	ldr	x20, [x24]
  40dac0:	orr	w8, w8, w0
  40dac4:	str	w8, [x24, #32]
  40dac8:	cbz	x20, 40db78 <hash_init_function_table@@Base+0x924>
  40dacc:	ldp	x0, x1, [x21, #8]
  40dad0:	ldr	x2, [x20, #16]
  40dad4:	bl	40c69c <pattern_matches@@Base>
  40dad8:	ldr	w8, [x20, #32]
  40dadc:	orr	w8, w8, w0
  40dae0:	str	w8, [x20, #32]
  40dae4:	ldr	x20, [x20]
  40dae8:	cbnz	x20, 40dacc <hash_init_function_table@@Base+0x878>
  40daec:	b	40db78 <hash_init_function_table@@Base+0x924>
  40daf0:	tbz	w23, #0, 40db2c <hash_init_function_table@@Base+0x8d8>
  40daf4:	ldr	x8, [x21, #8]
  40daf8:	sub	x0, x29, #0x60
  40dafc:	sub	x1, x29, #0xa0
  40db00:	stur	x8, [x29, #-144]
  40db04:	ldr	x8, [x21, #24]
  40db08:	stur	x8, [x29, #-136]
  40db0c:	bl	40f63c <hash_find_item@@Base>
  40db10:	cbz	x0, 40db78 <hash_init_function_table@@Base+0x924>
  40db14:	ldr	w8, [x0, #32]
  40db18:	orr	w8, w8, #0x1
  40db1c:	str	w8, [x0, #32]
  40db20:	ldr	x0, [x0, #8]
  40db24:	cbnz	x0, 40db14 <hash_init_function_table@@Base+0x8c0>
  40db28:	b	40db78 <hash_init_function_table@@Base+0x924>
  40db2c:	cbz	x24, 40db78 <hash_init_function_table@@Base+0x924>
  40db30:	ldr	x20, [x21, #24]
  40db34:	mov	x25, x24
  40db38:	ldr	x8, [x25, #24]
  40db3c:	cmp	x8, x20
  40db40:	b.ne	40db60 <hash_init_function_table@@Base+0x90c>  // b.any
  40db44:	ldr	x0, [x21, #8]
  40db48:	ldr	x1, [x25, #16]
  40db4c:	mov	x2, x20
  40db50:	bl	406a30 <strncmp@plt>
  40db54:	cmp	w0, #0x0
  40db58:	cset	w8, eq  // eq = none
  40db5c:	b	40db64 <hash_init_function_table@@Base+0x910>
  40db60:	mov	w8, wzr
  40db64:	ldr	w9, [x25, #32]
  40db68:	orr	w8, w9, w8
  40db6c:	str	w8, [x25, #32]
  40db70:	ldr	x25, [x25]
  40db74:	cbnz	x25, 40db38 <hash_init_function_table@@Base+0x8e4>
  40db78:	ldr	x21, [x21]
  40db7c:	cbnz	x21, 40daa0 <hash_init_function_table@@Base+0x84c>
  40db80:	cbz	x24, 40dbe8 <hash_init_function_table@@Base+0x994>
  40db84:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  40db88:	mov	w21, wzr
  40db8c:	add	x20, x20, #0xc2c
  40db90:	ldr	w8, [x24, #32]
  40db94:	cbz	w22, 40dbd8 <hash_init_function_table@@Base+0x984>
  40db98:	cbnz	w8, 40dbcc <hash_init_function_table@@Base+0x978>
  40db9c:	ldr	x21, [x24, #16]
  40dba0:	mov	x0, x21
  40dba4:	bl	406790 <strlen@plt>
  40dba8:	mov	x2, x0
  40dbac:	mov	x0, x19
  40dbb0:	mov	x1, x21
  40dbb4:	bl	4099c4 <variable_buffer_output@@Base>
  40dbb8:	mov	w2, #0x1                   	// #1
  40dbbc:	mov	x1, x20
  40dbc0:	mov	w21, #0x1                   	// #1
  40dbc4:	bl	4099c4 <variable_buffer_output@@Base>
  40dbc8:	mov	x19, x0
  40dbcc:	ldr	x24, [x24]
  40dbd0:	cbnz	x24, 40db90 <hash_init_function_table@@Base+0x93c>
  40dbd4:	b	40dbe0 <hash_init_function_table@@Base+0x98c>
  40dbd8:	cbnz	w8, 40db9c <hash_init_function_table@@Base+0x948>
  40dbdc:	b	40dbcc <hash_init_function_table@@Base+0x978>
  40dbe0:	cbz	w21, 40dbe8 <hash_init_function_table@@Base+0x994>
  40dbe4:	sub	x19, x19, #0x1
  40dbe8:	cbz	w23, 40dbf8 <hash_init_function_table@@Base+0x9a4>
  40dbec:	sub	x0, x29, #0x60
  40dbf0:	mov	w1, wzr
  40dbf4:	bl	40f8ec <hash_free@@Base>
  40dbf8:	mov	x0, x19
  40dbfc:	mov	sp, x29
  40dc00:	ldp	x20, x19, [sp, #64]
  40dc04:	ldp	x22, x21, [sp, #48]
  40dc08:	ldp	x24, x23, [sp, #32]
  40dc0c:	ldr	x25, [sp, #16]
  40dc10:	ldp	x29, x30, [sp], #80
  40dc14:	ret
  40dc18:	stp	x29, x30, [sp, #-32]!
  40dc1c:	stp	x20, x19, [sp, #16]
  40dc20:	ldp	x19, x8, [x1]
  40dc24:	mov	x20, x0
  40dc28:	mov	x29, sp
  40dc2c:	mov	x0, x8
  40dc30:	mov	x1, x19
  40dc34:	bl	406e00 <strstr@plt>
  40dc38:	cbz	x0, 40dc5c <hash_init_function_table@@Base+0xa08>
  40dc3c:	mov	x0, x19
  40dc40:	bl	406790 <strlen@plt>
  40dc44:	mov	x2, x0
  40dc48:	mov	x0, x20
  40dc4c:	mov	x1, x19
  40dc50:	ldp	x20, x19, [sp, #16]
  40dc54:	ldp	x29, x30, [sp], #32
  40dc58:	b	4099c4 <variable_buffer_output@@Base>
  40dc5c:	mov	x0, x20
  40dc60:	ldp	x20, x19, [sp, #16]
  40dc64:	ldp	x29, x30, [sp], #32
  40dc68:	ret
  40dc6c:	sub	sp, sp, #0x30
  40dc70:	stp	x29, x30, [sp, #16]
  40dc74:	ldr	x8, [x1]
  40dc78:	add	x29, sp, #0x10
  40dc7c:	str	x19, [sp, #32]
  40dc80:	mov	x19, x0
  40dc84:	add	x0, sp, #0x8
  40dc88:	add	x1, x29, #0x18
  40dc8c:	str	x8, [sp, #8]
  40dc90:	bl	417970 <find_next_token@@Base>
  40dc94:	cbz	x0, 40dcac <hash_init_function_table@@Base+0xa58>
  40dc98:	ldr	x2, [x29, #24]
  40dc9c:	mov	x1, x0
  40dca0:	mov	x0, x19
  40dca4:	bl	4099c4 <variable_buffer_output@@Base>
  40dca8:	mov	x19, x0
  40dcac:	mov	x0, x19
  40dcb0:	ldr	x19, [sp, #32]
  40dcb4:	ldp	x29, x30, [sp, #16]
  40dcb8:	add	sp, sp, #0x30
  40dcbc:	ret
  40dcc0:	stp	x29, x30, [sp, #-32]!
  40dcc4:	stp	x20, x19, [sp, #16]
  40dcc8:	ldr	x20, [x1]
  40dccc:	mov	x19, x0
  40dcd0:	mov	x29, sp
  40dcd4:	mov	x0, x20
  40dcd8:	bl	406790 <strlen@plt>
  40dcdc:	mov	x1, x0
  40dce0:	mov	x0, x20
  40dce4:	bl	420c00 <lookup_variable@@Base>
  40dce8:	cbz	x0, 40dd04 <hash_init_function_table@@Base+0xab0>
  40dcec:	ldrb	w8, [x0, #44]
  40dcf0:	tbnz	w8, #0, 40dd10 <hash_init_function_table@@Base+0xabc>
  40dcf4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40dcf8:	add	x1, x1, #0xf0a
  40dcfc:	mov	w2, #0x6                   	// #6
  40dd00:	b	40dd1c <hash_init_function_table@@Base+0xac8>
  40dd04:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40dd08:	add	x1, x1, #0xef6
  40dd0c:	b	40dd18 <hash_init_function_table@@Base+0xac4>
  40dd10:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40dd14:	add	x1, x1, #0xf00
  40dd18:	mov	w2, #0x9                   	// #9
  40dd1c:	mov	x0, x19
  40dd20:	ldp	x20, x19, [sp, #16]
  40dd24:	ldp	x29, x30, [sp], #32
  40dd28:	b	4099c4 <variable_buffer_output@@Base>
  40dd2c:	sub	sp, sp, #0x50
  40dd30:	stp	x29, x30, [sp, #32]
  40dd34:	stp	x22, x21, [sp, #48]
  40dd38:	stp	x20, x19, [sp, #64]
  40dd3c:	ldr	x8, [x1]
  40dd40:	add	x29, sp, #0x20
  40dd44:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  40dd48:	mov	x19, x0
  40dd4c:	stur	x8, [x29, #-8]
  40dd50:	ldr	x8, [x1, #8]
  40dd54:	mov	w22, wzr
  40dd58:	add	x20, x20, #0xc2c
  40dd5c:	str	x8, [sp, #16]
  40dd60:	sub	x0, x29, #0x8
  40dd64:	add	x1, sp, #0x8
  40dd68:	bl	417970 <find_next_token@@Base>
  40dd6c:	mov	x21, x0
  40dd70:	cbz	x0, 40dd88 <hash_init_function_table@@Base+0xb34>
  40dd74:	ldr	x2, [sp, #8]
  40dd78:	mov	x0, x19
  40dd7c:	mov	x1, x21
  40dd80:	bl	4099c4 <variable_buffer_output@@Base>
  40dd84:	mov	x19, x0
  40dd88:	add	x0, sp, #0x10
  40dd8c:	mov	x1, sp
  40dd90:	bl	417970 <find_next_token@@Base>
  40dd94:	cbz	x0, 40ddb0 <hash_init_function_table@@Base+0xb5c>
  40dd98:	ldr	x2, [sp]
  40dd9c:	mov	x1, x0
  40dda0:	mov	x0, x19
  40dda4:	bl	4099c4 <variable_buffer_output@@Base>
  40dda8:	mov	x19, x0
  40ddac:	b	40ddb4 <hash_init_function_table@@Base+0xb60>
  40ddb0:	cbz	x21, 40ddd0 <hash_init_function_table@@Base+0xb7c>
  40ddb4:	mov	w2, #0x1                   	// #1
  40ddb8:	mov	x0, x19
  40ddbc:	mov	x1, x20
  40ddc0:	mov	w22, #0x1                   	// #1
  40ddc4:	bl	4099c4 <variable_buffer_output@@Base>
  40ddc8:	mov	x19, x0
  40ddcc:	b	40dd60 <hash_init_function_table@@Base+0xb0c>
  40ddd0:	sub	x8, x19, #0x1
  40ddd4:	cmp	w22, #0x0
  40ddd8:	csel	x0, x19, x8, eq  // eq = none
  40dddc:	ldp	x20, x19, [sp, #64]
  40dde0:	ldp	x22, x21, [sp, #48]
  40dde4:	ldp	x29, x30, [sp, #32]
  40dde8:	add	sp, sp, #0x50
  40ddec:	ret
  40ddf0:	sub	sp, sp, #0x30
  40ddf4:	stp	x29, x30, [sp, #16]
  40ddf8:	stp	x20, x19, [sp, #32]
  40ddfc:	ldr	x8, [x1]
  40de00:	mov	x19, x0
  40de04:	mov	x0, xzr
  40de08:	add	x29, sp, #0x10
  40de0c:	str	x8, [sp]
  40de10:	mov	x20, x0
  40de14:	mov	x0, sp
  40de18:	add	x1, sp, #0x8
  40de1c:	bl	417970 <find_next_token@@Base>
  40de20:	cbnz	x0, 40de10 <hash_init_function_table@@Base+0xbbc>
  40de24:	cbz	x20, 40de3c <hash_init_function_table@@Base+0xbe8>
  40de28:	ldr	x2, [sp, #8]
  40de2c:	mov	x0, x19
  40de30:	mov	x1, x20
  40de34:	bl	4099c4 <variable_buffer_output@@Base>
  40de38:	mov	x19, x0
  40de3c:	mov	x0, x19
  40de40:	ldp	x20, x19, [sp, #32]
  40de44:	ldp	x29, x30, [sp, #16]
  40de48:	add	sp, sp, #0x30
  40de4c:	ret
  40de50:	ldp	x3, x8, [x1, #8]
  40de54:	ldr	x2, [x1]
  40de58:	mov	x1, x8
  40de5c:	b	40c630 <patsubst_expand@@Base>
  40de60:	stp	x29, x30, [sp, #-64]!
  40de64:	stp	x28, x23, [sp, #16]
  40de68:	stp	x22, x21, [sp, #32]
  40de6c:	stp	x20, x19, [sp, #48]
  40de70:	mov	x29, sp
  40de74:	sub	sp, sp, #0x2, lsl #12
  40de78:	sub	sp, sp, #0xa0
  40de7c:	ldr	x8, [x1]
  40de80:	mov	x19, x0
  40de84:	sub	x0, x29, #0x8
  40de88:	sub	x1, x29, #0x10
  40de8c:	stp	xzr, x8, [x29, #-16]
  40de90:	bl	417970 <find_next_token@@Base>
  40de94:	cbz	x0, 40df70 <hash_init_function_table@@Base+0xd1c>
  40de98:	add	x22, sp, #0x1, lsl #12
  40de9c:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  40dea0:	mov	x1, x0
  40dea4:	mov	w23, wzr
  40dea8:	add	x22, x22, #0xc
  40deac:	add	x20, x20, #0xc2c
  40deb0:	ldur	x2, [x29, #-16]
  40deb4:	cmp	x2, #0xfff
  40deb8:	b.hi	40df54 <hash_init_function_table@@Base+0xd00>  // b.pmore
  40debc:	add	x0, sp, #0x1, lsl #12
  40dec0:	add	x0, x0, #0xc
  40dec4:	bl	406e60 <strncpy@plt>
  40dec8:	ldur	x8, [x29, #-16]
  40decc:	strb	wzr, [x22, x8]
  40ded0:	bl	406eb0 <__errno_location@plt>
  40ded4:	mov	x21, x0
  40ded8:	add	x0, sp, #0x1, lsl #12
  40dedc:	add	x0, x0, #0xc
  40dee0:	add	x1, sp, #0x8
  40dee4:	str	wzr, [x21]
  40dee8:	bl	406e20 <realpath@plt>
  40deec:	cbnz	x0, 40df00 <hash_init_function_table@@Base+0xcac>
  40def0:	ldr	w8, [x21]
  40def4:	cmp	w8, #0x4
  40def8:	b.eq	40ded8 <hash_init_function_table@@Base+0xc84>  // b.none
  40defc:	b	40df54 <hash_init_function_table@@Base+0xd00>
  40df00:	add	x0, sp, #0x8
  40df04:	sub	x1, x29, #0x90
  40df08:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  40df0c:	cmn	w0, #0x1
  40df10:	b.ne	40df24 <hash_init_function_table@@Base+0xcd0>  // b.any
  40df14:	ldr	w8, [x21]
  40df18:	cmp	w8, #0x4
  40df1c:	b.eq	40df00 <hash_init_function_table@@Base+0xcac>  // b.none
  40df20:	b	40df54 <hash_init_function_table@@Base+0xd00>
  40df24:	cbnz	w0, 40df54 <hash_init_function_table@@Base+0xd00>
  40df28:	add	x0, sp, #0x8
  40df2c:	bl	406790 <strlen@plt>
  40df30:	mov	x2, x0
  40df34:	add	x1, sp, #0x8
  40df38:	mov	x0, x19
  40df3c:	bl	4099c4 <variable_buffer_output@@Base>
  40df40:	mov	w2, #0x1                   	// #1
  40df44:	mov	x1, x20
  40df48:	mov	w23, #0x1                   	// #1
  40df4c:	bl	4099c4 <variable_buffer_output@@Base>
  40df50:	mov	x19, x0
  40df54:	sub	x0, x29, #0x8
  40df58:	sub	x1, x29, #0x10
  40df5c:	bl	417970 <find_next_token@@Base>
  40df60:	mov	x1, x0
  40df64:	cbnz	x0, 40deb0 <hash_init_function_table@@Base+0xc5c>
  40df68:	cbz	w23, 40df70 <hash_init_function_table@@Base+0xd1c>
  40df6c:	sub	x19, x19, #0x1
  40df70:	mov	x0, x19
  40df74:	add	sp, sp, #0x2, lsl #12
  40df78:	add	sp, sp, #0xa0
  40df7c:	ldp	x20, x19, [sp, #48]
  40df80:	ldp	x22, x21, [sp, #32]
  40df84:	ldp	x28, x23, [sp, #16]
  40df88:	ldp	x29, x30, [sp], #64
  40df8c:	ret
  40df90:	mov	w2, #0x1                   	// #1
  40df94:	b	40c8d8 <func_shell_base@@Base>
  40df98:	sub	sp, sp, #0x70
  40df9c:	stp	x29, x30, [sp, #16]
  40dfa0:	stp	x26, x25, [sp, #48]
  40dfa4:	stp	x24, x23, [sp, #64]
  40dfa8:	stp	x22, x21, [sp, #80]
  40dfac:	stp	x20, x19, [sp, #96]
  40dfb0:	ldr	x8, [x1]
  40dfb4:	add	x29, sp, #0x10
  40dfb8:	mov	x21, x1
  40dfbc:	mov	x19, x0
  40dfc0:	add	x0, x29, #0x18
  40dfc4:	mov	x1, xzr
  40dfc8:	str	x27, [sp, #32]
  40dfcc:	str	x8, [x29, #24]
  40dfd0:	bl	417970 <find_next_token@@Base>
  40dfd4:	cbz	x0, 40e000 <hash_init_function_table@@Base+0xdac>
  40dfd8:	mov	x20, xzr
  40dfdc:	ldr	x8, [x29, #24]
  40dfe0:	add	x0, x29, #0x18
  40dfe4:	mov	x1, xzr
  40dfe8:	add	x8, x8, #0x1
  40dfec:	str	x8, [x29, #24]
  40dff0:	bl	417970 <find_next_token@@Base>
  40dff4:	add	x20, x20, #0x8
  40dff8:	cbnz	x0, 40dfdc <hash_init_function_table@@Base+0xd88>
  40dffc:	b	40e004 <hash_init_function_table@@Base+0xdb0>
  40e000:	mov	w20, #0x8                   	// #8
  40e004:	mov	x0, x20
  40e008:	bl	417888 <xmalloc@@Base>
  40e00c:	ldr	x8, [x21]
  40e010:	mov	x20, x0
  40e014:	add	x0, x29, #0x18
  40e018:	add	x1, sp, #0x8
  40e01c:	str	x8, [x29, #24]
  40e020:	bl	417970 <find_next_token@@Base>
  40e024:	cbz	x0, 40e0f8 <hash_init_function_table@@Base+0xea4>
  40e028:	mov	x22, xzr
  40e02c:	ldr	x8, [x29, #24]
  40e030:	ldr	x9, [sp, #8]
  40e034:	add	x1, sp, #0x8
  40e038:	add	x8, x8, #0x1
  40e03c:	str	x8, [x29, #24]
  40e040:	strb	wzr, [x0, x9]
  40e044:	str	x0, [x20, x22, lsl #3]
  40e048:	add	x0, x29, #0x18
  40e04c:	add	x22, x22, #0x1
  40e050:	bl	417970 <find_next_token@@Base>
  40e054:	cbnz	x0, 40e02c <hash_init_function_table@@Base+0xdd8>
  40e058:	cbz	w22, 40e0f8 <hash_init_function_table@@Base+0xea4>
  40e05c:	and	x21, x22, #0xffffffff
  40e060:	adrp	x3, 417000 <die@@Base+0x708>
  40e064:	add	x3, x3, #0x4fc
  40e068:	mov	w2, #0x8                   	// #8
  40e06c:	mov	x0, x20
  40e070:	mov	x1, x21
  40e074:	bl	4068a0 <qsort@plt>
  40e078:	sub	w27, w22, #0x1
  40e07c:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x4290>
  40e080:	add	x26, x20, #0x8
  40e084:	add	x22, x22, #0xc2c
  40e088:	ldur	x23, [x26, #-8]
  40e08c:	mov	x0, x23
  40e090:	bl	406790 <strlen@plt>
  40e094:	mov	x24, x0
  40e098:	str	x0, [sp, #8]
  40e09c:	cbz	x27, 40e0c4 <hash_init_function_table@@Base+0xe70>
  40e0a0:	ldr	x25, [x26]
  40e0a4:	mov	x0, x25
  40e0a8:	bl	406790 <strlen@plt>
  40e0ac:	cmp	x0, x24
  40e0b0:	b.ne	40e0c4 <hash_init_function_table@@Base+0xe70>  // b.any
  40e0b4:	mov	x0, x23
  40e0b8:	mov	x1, x25
  40e0bc:	bl	406c70 <strcmp@plt>
  40e0c0:	cbz	w0, 40e0e4 <hash_init_function_table@@Base+0xe90>
  40e0c4:	mov	x0, x19
  40e0c8:	mov	x1, x23
  40e0cc:	mov	x2, x24
  40e0d0:	bl	4099c4 <variable_buffer_output@@Base>
  40e0d4:	mov	w2, #0x1                   	// #1
  40e0d8:	mov	x1, x22
  40e0dc:	bl	4099c4 <variable_buffer_output@@Base>
  40e0e0:	mov	x19, x0
  40e0e4:	sub	x21, x21, #0x1
  40e0e8:	add	x26, x26, #0x8
  40e0ec:	sub	x27, x27, #0x1
  40e0f0:	cbnz	x21, 40e088 <hash_init_function_table@@Base+0xe34>
  40e0f4:	sub	x19, x19, #0x1
  40e0f8:	mov	x0, x20
  40e0fc:	bl	406cb0 <free@plt>
  40e100:	mov	x0, x19
  40e104:	ldp	x20, x19, [sp, #96]
  40e108:	ldp	x22, x21, [sp, #80]
  40e10c:	ldp	x24, x23, [sp, #64]
  40e110:	ldp	x26, x25, [sp, #48]
  40e114:	ldr	x27, [sp, #32]
  40e118:	ldp	x29, x30, [sp, #16]
  40e11c:	add	sp, sp, #0x70
  40e120:	ret
  40e124:	stp	x29, x30, [sp, #-48]!
  40e128:	stp	x22, x21, [sp, #16]
  40e12c:	stp	x20, x19, [sp, #32]
  40e130:	ldr	x1, [x1]
  40e134:	mov	x29, sp
  40e138:	ldrb	w8, [x1]
  40e13c:	cbz	w8, 40e1f4 <hash_init_function_table@@Base+0xfa0>
  40e140:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  40e144:	adrp	x19, 428000 <_IO_stdin_used@@Base+0x4290>
  40e148:	mov	w21, wzr
  40e14c:	add	x20, x20, #0xcf0
  40e150:	add	x19, x19, #0xc2c
  40e154:	and	x9, x8, #0xff
  40e158:	ldrh	w9, [x20, x9, lsl #1]
  40e15c:	tst	w9, #0x6
  40e160:	b.eq	40e170 <hash_init_function_table@@Base+0xf1c>  // b.none
  40e164:	ldrb	w8, [x1, #1]!
  40e168:	ldrh	w9, [x20, x8, lsl #1]
  40e16c:	b	40e15c <hash_init_function_table@@Base+0xf08>
  40e170:	tst	w8, #0xff
  40e174:	b.eq	40e1ec <hash_init_function_table@@Base+0xf98>  // b.none
  40e178:	tst	w9, #0x6
  40e17c:	b.eq	40e190 <hash_init_function_table@@Base+0xf3c>  // b.none
  40e180:	mov	w8, wzr
  40e184:	mov	x22, x1
  40e188:	cbnz	w8, 40e1c4 <hash_init_function_table@@Base+0xf70>
  40e18c:	b	40e1ec <hash_init_function_table@@Base+0xf98>
  40e190:	mov	x8, xzr
  40e194:	add	x9, x1, x8
  40e198:	ldrb	w10, [x9, #1]
  40e19c:	cbz	x10, 40e1bc <hash_init_function_table@@Base+0xf68>
  40e1a0:	ldrh	w9, [x20, x10, lsl #1]
  40e1a4:	add	x8, x8, #0x1
  40e1a8:	tst	w9, #0x6
  40e1ac:	b.eq	40e194 <hash_init_function_table@@Base+0xf40>  // b.none
  40e1b0:	add	x22, x1, x8
  40e1b4:	cbnz	w8, 40e1c4 <hash_init_function_table@@Base+0xf70>
  40e1b8:	b	40e1ec <hash_init_function_table@@Base+0xf98>
  40e1bc:	add	x22, x9, #0x1
  40e1c0:	add	w8, w8, #0x1
  40e1c4:	mov	w2, w8
  40e1c8:	bl	4099c4 <variable_buffer_output@@Base>
  40e1cc:	mov	w2, #0x1                   	// #1
  40e1d0:	mov	x1, x19
  40e1d4:	mov	w21, #0x1                   	// #1
  40e1d8:	bl	4099c4 <variable_buffer_output@@Base>
  40e1dc:	ldrb	w8, [x22]
  40e1e0:	mov	x1, x22
  40e1e4:	cbnz	w8, 40e154 <hash_init_function_table@@Base+0xf00>
  40e1e8:	b	40e1f0 <hash_init_function_table@@Base+0xf9c>
  40e1ec:	cbz	w21, 40e1f4 <hash_init_function_table@@Base+0xfa0>
  40e1f0:	sub	x0, x0, #0x1
  40e1f4:	ldp	x20, x19, [sp, #32]
  40e1f8:	ldp	x22, x21, [sp, #16]
  40e1fc:	ldp	x29, x30, [sp], #48
  40e200:	ret
  40e204:	sub	sp, sp, #0x70
  40e208:	stp	x29, x30, [sp, #16]
  40e20c:	stp	x28, x27, [sp, #32]
  40e210:	stp	x26, x25, [sp, #48]
  40e214:	stp	x24, x23, [sp, #64]
  40e218:	stp	x22, x21, [sp, #80]
  40e21c:	stp	x20, x19, [sp, #96]
  40e220:	ldr	x8, [x1]
  40e224:	mov	x19, x0
  40e228:	add	x0, sp, #0x8
  40e22c:	mov	w1, #0x10                  	// #16
  40e230:	mov	w2, #0x1                   	// #1
  40e234:	mov	w4, #0x19                  	// #25
  40e238:	mov	x3, xzr
  40e23c:	add	x29, sp, #0x10
  40e240:	str	x8, [sp, #8]
  40e244:	bl	41b114 <parse_file_seq@@Base>
  40e248:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  40e24c:	mov	x20, x0
  40e250:	ldr	x0, [x24, #3016]
  40e254:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  40e258:	cbnz	x0, 40e270 <hash_init_function_table@@Base+0x101c>
  40e25c:	mov	w8, #0x64                  	// #100
  40e260:	mov	w0, #0x64                  	// #100
  40e264:	str	x8, [x25, #3024]
  40e268:	bl	417888 <xmalloc@@Base>
  40e26c:	str	x0, [x24, #3016]
  40e270:	mov	x21, x0
  40e274:	cbz	x20, 40e314 <hash_init_function_table@@Base+0x10c0>
  40e278:	mov	x28, xzr
  40e27c:	str	x19, [sp]
  40e280:	ldp	x27, x22, [x20]
  40e284:	mov	x0, x22
  40e288:	bl	406790 <strlen@plt>
  40e28c:	ldr	x8, [x25, #3024]
  40e290:	add	x26, x0, x28
  40e294:	add	x19, x26, #0x1
  40e298:	mov	x21, x0
  40e29c:	cmp	x19, x8
  40e2a0:	b.ls	40e2c8 <hash_init_function_table@@Base+0x1074>  // b.plast
  40e2a4:	ldr	x0, [x24, #3016]
  40e2a8:	add	x8, x8, x21, lsl #1
  40e2ac:	add	x1, x8, #0x2
  40e2b0:	str	x1, [x25, #3024]
  40e2b4:	bl	417854 <xrealloc@@Base>
  40e2b8:	str	x0, [x24, #3016]
  40e2bc:	ldr	x22, [x20, #8]
  40e2c0:	mov	x23, x0
  40e2c4:	b	40e2cc <hash_init_function_table@@Base+0x1078>
  40e2c8:	ldr	x23, [x24, #3016]
  40e2cc:	add	x0, x23, x28
  40e2d0:	mov	x1, x22
  40e2d4:	mov	x2, x21
  40e2d8:	bl	406750 <memcpy@plt>
  40e2dc:	mov	w8, #0x20                  	// #32
  40e2e0:	strb	w8, [x23, x26]
  40e2e4:	ldr	x0, [x20, #8]
  40e2e8:	bl	406cb0 <free@plt>
  40e2ec:	mov	x0, x20
  40e2f0:	bl	406cb0 <free@plt>
  40e2f4:	mov	x20, x27
  40e2f8:	mov	x28, x19
  40e2fc:	cbnz	x27, 40e280 <hash_init_function_table@@Base+0x102c>
  40e300:	ldr	x21, [x24, #3016]
  40e304:	cmp	x19, #0x0
  40e308:	ldr	x19, [sp]
  40e30c:	add	x8, x21, x26
  40e310:	csel	x0, x21, x8, eq  // eq = none
  40e314:	strb	wzr, [x0]
  40e318:	mov	x0, x21
  40e31c:	bl	406790 <strlen@plt>
  40e320:	mov	x2, x0
  40e324:	mov	x0, x19
  40e328:	mov	x1, x21
  40e32c:	bl	4099c4 <variable_buffer_output@@Base>
  40e330:	ldp	x20, x19, [sp, #96]
  40e334:	ldp	x22, x21, [sp, #80]
  40e338:	ldp	x24, x23, [sp, #64]
  40e33c:	ldp	x26, x25, [sp, #48]
  40e340:	ldp	x28, x27, [sp, #32]
  40e344:	ldp	x29, x30, [sp, #16]
  40e348:	add	sp, sp, #0x70
  40e34c:	ret
  40e350:	stp	x29, x30, [sp, #-48]!
  40e354:	stp	x20, x19, [sp, #32]
  40e358:	str	x21, [sp, #16]
  40e35c:	ldr	x21, [x1]
  40e360:	mov	x20, x1
  40e364:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40e368:	mov	x19, x0
  40e36c:	add	x1, x1, #0xf11
  40e370:	mov	w2, #0x5                   	// #5
  40e374:	mov	x0, xzr
  40e378:	mov	x29, sp
  40e37c:	bl	406e10 <dcgettext@plt>
  40e380:	mov	x1, x0
  40e384:	mov	x0, x21
  40e388:	bl	40f31c <hash_init_function_table@@Base+0x20c8>
  40e38c:	ldr	x0, [x20]
  40e390:	bl	406990 <atoi@plt>
  40e394:	cbz	w0, 40e3f0 <hash_init_function_table@@Base+0x119c>
  40e398:	ldr	x8, [x20, #8]
  40e39c:	mov	w21, w0
  40e3a0:	str	x8, [x29, #24]
  40e3a4:	add	x0, x29, #0x18
  40e3a8:	mov	x1, xzr
  40e3ac:	bl	417970 <find_next_token@@Base>
  40e3b0:	mov	x1, x0
  40e3b4:	cbz	x0, 40e3c4 <hash_init_function_table@@Base+0x1170>
  40e3b8:	subs	w21, w21, #0x1
  40e3bc:	b.ne	40e3a4 <hash_init_function_table@@Base+0x1150>  // b.any
  40e3c0:	b	40e3c8 <hash_init_function_table@@Base+0x1174>
  40e3c4:	cbnz	w21, 40e3dc <hash_init_function_table@@Base+0x1188>
  40e3c8:	ldr	x8, [x29, #24]
  40e3cc:	mov	x0, x19
  40e3d0:	sub	x2, x8, x1
  40e3d4:	bl	4099c4 <variable_buffer_output@@Base>
  40e3d8:	mov	x19, x0
  40e3dc:	mov	x0, x19
  40e3e0:	ldp	x20, x19, [sp, #32]
  40e3e4:	ldr	x21, [sp, #16]
  40e3e8:	ldp	x29, x30, [sp], #48
  40e3ec:	ret
  40e3f0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40e3f4:	ldr	x8, [x8, #1472]
  40e3f8:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40e3fc:	add	x1, x1, #0xf3f
  40e400:	mov	w2, #0x5                   	// #5
  40e404:	ldr	x19, [x8]
  40e408:	mov	x0, xzr
  40e40c:	bl	406e10 <dcgettext@plt>
  40e410:	mov	x2, x0
  40e414:	mov	x0, x19
  40e418:	mov	x1, xzr
  40e41c:	bl	4188bc <fatal@@Base>
  40e420:	stp	x29, x30, [sp, #-64]!
  40e424:	stp	x22, x21, [sp, #32]
  40e428:	stp	x20, x19, [sp, #48]
  40e42c:	ldr	x21, [x1]
  40e430:	mov	x20, x1
  40e434:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40e438:	mov	x19, x0
  40e43c:	add	x1, x1, #0xf81
  40e440:	mov	w2, #0x5                   	// #5
  40e444:	mov	x0, xzr
  40e448:	str	x23, [sp, #16]
  40e44c:	mov	x29, sp
  40e450:	bl	406e10 <dcgettext@plt>
  40e454:	mov	x1, x0
  40e458:	mov	x0, x21
  40e45c:	bl	40f31c <hash_init_function_table@@Base+0x20c8>
  40e460:	ldr	x21, [x20, #8]
  40e464:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40e468:	add	x1, x1, #0xfb3
  40e46c:	mov	w2, #0x5                   	// #5
  40e470:	mov	x0, xzr
  40e474:	bl	406e10 <dcgettext@plt>
  40e478:	mov	x1, x0
  40e47c:	mov	x0, x21
  40e480:	bl	40f31c <hash_init_function_table@@Base+0x20c8>
  40e484:	ldr	x0, [x20]
  40e488:	bl	406990 <atoi@plt>
  40e48c:	mov	w21, w0
  40e490:	cmp	w0, #0x0
  40e494:	b.le	40e524 <hash_init_function_table@@Base+0x12d0>
  40e498:	ldr	x0, [x20, #8]
  40e49c:	bl	406990 <atoi@plt>
  40e4a0:	cmp	w0, w21
  40e4a4:	b.mi	40e50c <hash_init_function_table@@Base+0x12b8>  // b.first
  40e4a8:	ldr	x8, [x20, #16]
  40e4ac:	mov	w22, w0
  40e4b0:	mov	w23, w21
  40e4b4:	str	x8, [x29, #24]
  40e4b8:	add	x0, x29, #0x18
  40e4bc:	mov	x1, xzr
  40e4c0:	bl	417970 <find_next_token@@Base>
  40e4c4:	cbz	x0, 40e50c <hash_init_function_table@@Base+0x12b8>
  40e4c8:	subs	w23, w23, #0x1
  40e4cc:	b.ne	40e4b8 <hash_init_function_table@@Base+0x1264>  // b.any
  40e4d0:	mvn	w8, w22
  40e4d4:	mov	x20, x0
  40e4d8:	add	w21, w8, w21
  40e4dc:	adds	w21, w21, #0x1
  40e4e0:	b.cs	40e4f4 <hash_init_function_table@@Base+0x12a0>  // b.hs, b.nlast
  40e4e4:	add	x0, x29, #0x18
  40e4e8:	mov	x1, xzr
  40e4ec:	bl	417970 <find_next_token@@Base>
  40e4f0:	cbnz	x0, 40e4dc <hash_init_function_table@@Base+0x1288>
  40e4f4:	ldr	x8, [x29, #24]
  40e4f8:	mov	x0, x19
  40e4fc:	mov	x1, x20
  40e500:	sub	x2, x8, x20
  40e504:	bl	4099c4 <variable_buffer_output@@Base>
  40e508:	mov	x19, x0
  40e50c:	mov	x0, x19
  40e510:	ldp	x20, x19, [sp, #48]
  40e514:	ldp	x22, x21, [sp, #32]
  40e518:	ldr	x23, [sp, #16]
  40e51c:	ldp	x29, x30, [sp], #64
  40e520:	ret
  40e524:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40e528:	ldr	x8, [x8, #1472]
  40e52c:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x1290>
  40e530:	add	x2, x2, #0xfe6
  40e534:	mov	w1, #0x14                  	// #20
  40e538:	ldr	x0, [x8]
  40e53c:	mov	w3, w21
  40e540:	bl	4188bc <fatal@@Base>
  40e544:	sub	sp, sp, #0x40
  40e548:	stp	x29, x30, [sp, #32]
  40e54c:	stp	x20, x19, [sp, #48]
  40e550:	ldr	x8, [x1]
  40e554:	add	x29, sp, #0x20
  40e558:	mov	x19, x0
  40e55c:	mov	w20, #0xffffffff            	// #-1
  40e560:	stur	x8, [x29, #-8]
  40e564:	sub	x0, x29, #0x8
  40e568:	mov	x1, xzr
  40e56c:	bl	417970 <find_next_token@@Base>
  40e570:	add	w20, w20, #0x1
  40e574:	cbnz	x0, 40e564 <hash_init_function_table@@Base+0x1310>
  40e578:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  40e57c:	add	x1, x1, #0xd2d
  40e580:	add	x0, sp, #0x4
  40e584:	mov	w2, w20
  40e588:	bl	406830 <sprintf@plt>
  40e58c:	add	x0, sp, #0x4
  40e590:	bl	406790 <strlen@plt>
  40e594:	mov	x2, x0
  40e598:	add	x1, sp, #0x4
  40e59c:	mov	x0, x19
  40e5a0:	bl	4099c4 <variable_buffer_output@@Base>
  40e5a4:	ldp	x20, x19, [sp, #48]
  40e5a8:	ldp	x29, x30, [sp, #32]
  40e5ac:	add	sp, sp, #0x40
  40e5b0:	ret
  40e5b4:	stp	x29, x30, [sp, #-32]!
  40e5b8:	stp	x20, x19, [sp, #16]
  40e5bc:	ldr	x20, [x1]
  40e5c0:	mov	x19, x0
  40e5c4:	mov	x29, sp
  40e5c8:	mov	x0, x20
  40e5cc:	bl	406790 <strlen@plt>
  40e5d0:	mov	x1, x0
  40e5d4:	mov	x0, x20
  40e5d8:	bl	420c00 <lookup_variable@@Base>
  40e5dc:	cbz	x0, 40e610 <hash_init_function_table@@Base+0x13bc>
  40e5e0:	ldr	w8, [x0, #44]
  40e5e4:	adrp	x9, 425000 <_IO_stdin_used@@Base+0x1290>
  40e5e8:	add	x9, x9, #0xc9c
  40e5ec:	ubfx	w8, w8, #26, #3
  40e5f0:	adr	x10, 40e600 <hash_init_function_table@@Base+0x13ac>
  40e5f4:	ldrb	w11, [x9, x8]
  40e5f8:	add	x10, x10, x11, lsl #2
  40e5fc:	br	x10
  40e600:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40e604:	add	x1, x1, #0x1a
  40e608:	mov	w2, #0x7                   	// #7
  40e60c:	b	40e61c <hash_init_function_table@@Base+0x13c8>
  40e610:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40e614:	add	x1, x1, #0xef6
  40e618:	mov	w2, #0x9                   	// #9
  40e61c:	mov	x0, x19
  40e620:	ldp	x20, x19, [sp, #16]
  40e624:	ldp	x29, x30, [sp], #32
  40e628:	b	4099c4 <variable_buffer_output@@Base>
  40e62c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40e630:	add	x1, x1, #0x43
  40e634:	mov	w2, #0xc                   	// #12
  40e638:	b	40e61c <hash_init_function_table@@Base+0x13c8>
  40e63c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  40e640:	add	x1, x1, #0xa29
  40e644:	mov	w2, #0x4                   	// #4
  40e648:	b	40e61c <hash_init_function_table@@Base+0x13c8>
  40e64c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40e650:	add	x1, x1, #0x2e
  40e654:	mov	w2, #0x14                  	// #20
  40e658:	b	40e61c <hash_init_function_table@@Base+0x13c8>
  40e65c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40e660:	add	x1, x1, #0x22
  40e664:	mov	w2, #0xb                   	// #11
  40e668:	b	40e61c <hash_init_function_table@@Base+0x13c8>
  40e66c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40e670:	add	x1, x1, #0x3a
  40e674:	mov	w2, #0x8                   	// #8
  40e678:	b	40e61c <hash_init_function_table@@Base+0x13c8>
  40e67c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40e680:	add	x1, x1, #0x50
  40e684:	b	40e618 <hash_init_function_table@@Base+0x13c4>
  40e688:	bl	406bd0 <abort@plt>
  40e68c:	sub	sp, sp, #0x60
  40e690:	stp	x29, x30, [sp, #16]
  40e694:	stp	x24, x23, [sp, #48]
  40e698:	stp	x22, x21, [sp, #64]
  40e69c:	stp	x20, x19, [sp, #80]
  40e6a0:	ldr	x8, [x1]
  40e6a4:	mov	x21, x1
  40e6a8:	mov	x19, x0
  40e6ac:	mov	x1, xzr
  40e6b0:	mov	x0, x8
  40e6b4:	str	x25, [sp, #32]
  40e6b8:	add	x29, sp, #0x10
  40e6bc:	bl	40a0d0 <expand_argument@@Base>
  40e6c0:	ldr	x8, [x21, #8]
  40e6c4:	mov	x20, x0
  40e6c8:	mov	x1, xzr
  40e6cc:	mov	x0, x8
  40e6d0:	bl	40a0d0 <expand_argument@@Base>
  40e6d4:	ldr	x22, [x21, #16]
  40e6d8:	mov	x21, x0
  40e6dc:	str	x0, [x29, #24]
  40e6e0:	mov	x0, x20
  40e6e4:	bl	417950 <next_token@@Base>
  40e6e8:	mov	x23, x0
  40e6ec:	bl	417930 <end_of_token@@Base>
  40e6f0:	strb	wzr, [x0]
  40e6f4:	bl	4214a8 <push_new_variable_scope@@Base>
  40e6f8:	mov	x0, x23
  40e6fc:	bl	406790 <strlen@plt>
  40e700:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40e704:	ldr	x8, [x8, #2440]
  40e708:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  40e70c:	mov	x1, x0
  40e710:	add	x2, x2, #0x5eb
  40e714:	ldr	x5, [x8, #8]
  40e718:	mov	w3, #0x6                   	// #6
  40e71c:	mov	x0, x23
  40e720:	mov	w4, wzr
  40e724:	mov	x6, xzr
  40e728:	bl	420860 <define_variable_in_set@@Base>
  40e72c:	mov	x23, x0
  40e730:	add	x0, x29, #0x18
  40e734:	add	x1, sp, #0x8
  40e738:	bl	417970 <find_next_token@@Base>
  40e73c:	cbz	x0, 40e7b8 <hash_init_function_table@@Base+0x1564>
  40e740:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x4290>
  40e744:	mov	x25, x0
  40e748:	add	x24, x24, #0xc2c
  40e74c:	ldr	x0, [x23, #8]
  40e750:	bl	406cb0 <free@plt>
  40e754:	ldr	x1, [sp, #8]
  40e758:	mov	x0, x25
  40e75c:	bl	4178f0 <xstrndup@@Base>
  40e760:	str	x0, [x23, #8]
  40e764:	mov	x0, x22
  40e768:	mov	x1, xzr
  40e76c:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  40e770:	mov	x25, x0
  40e774:	bl	406790 <strlen@plt>
  40e778:	mov	x2, x0
  40e77c:	mov	x0, x19
  40e780:	mov	x1, x25
  40e784:	bl	4099c4 <variable_buffer_output@@Base>
  40e788:	mov	w2, #0x1                   	// #1
  40e78c:	mov	x1, x24
  40e790:	bl	4099c4 <variable_buffer_output@@Base>
  40e794:	mov	x19, x0
  40e798:	mov	x0, x25
  40e79c:	bl	406cb0 <free@plt>
  40e7a0:	add	x0, x29, #0x18
  40e7a4:	add	x1, sp, #0x8
  40e7a8:	bl	417970 <find_next_token@@Base>
  40e7ac:	mov	x25, x0
  40e7b0:	cbnz	x0, 40e74c <hash_init_function_table@@Base+0x14f8>
  40e7b4:	sub	x19, x19, #0x1
  40e7b8:	bl	4214f4 <pop_variable_scope@@Base>
  40e7bc:	mov	x0, x20
  40e7c0:	bl	406cb0 <free@plt>
  40e7c4:	mov	x0, x21
  40e7c8:	bl	406cb0 <free@plt>
  40e7cc:	mov	x0, x19
  40e7d0:	ldp	x20, x19, [sp, #80]
  40e7d4:	ldp	x22, x21, [sp, #64]
  40e7d8:	ldp	x24, x23, [sp, #48]
  40e7dc:	ldr	x25, [sp, #32]
  40e7e0:	ldp	x29, x30, [sp, #16]
  40e7e4:	add	sp, sp, #0x60
  40e7e8:	ret
  40e7ec:	stp	x29, x30, [sp, #-96]!
  40e7f0:	stp	x28, x27, [sp, #16]
  40e7f4:	stp	x26, x25, [sp, #32]
  40e7f8:	stp	x24, x23, [sp, #48]
  40e7fc:	stp	x22, x21, [sp, #64]
  40e800:	stp	x20, x19, [sp, #80]
  40e804:	mov	x29, sp
  40e808:	sub	sp, sp, #0x10
  40e80c:	ldr	x8, [x1]
  40e810:	mov	x19, x0
  40e814:	mov	x21, x1
  40e818:	mov	x0, x8
  40e81c:	bl	417950 <next_token@@Base>
  40e820:	mov	x23, x0
  40e824:	bl	417930 <end_of_token@@Base>
  40e828:	strb	wzr, [x0]
  40e82c:	ldrb	w8, [x23]
  40e830:	cbz	w8, 40ea50 <hash_init_function_table@@Base+0x17fc>
  40e834:	mov	x0, x23
  40e838:	bl	40ce88 <handle_function@@Base+0x298>
  40e83c:	cbz	x0, 40e880 <hash_init_function_table@@Base+0x162c>
  40e840:	mov	x3, x0
  40e844:	add	x8, x21, #0x8
  40e848:	mov	w1, #0xffffffff            	// #-1
  40e84c:	ldr	x9, [x8], #8
  40e850:	add	w1, w1, #0x1
  40e854:	cbnz	x9, 40e84c <hash_init_function_table@@Base+0x15f8>
  40e858:	add	x2, x21, #0x8
  40e85c:	mov	x0, x19
  40e860:	mov	sp, x29
  40e864:	ldp	x20, x19, [sp, #80]
  40e868:	ldp	x22, x21, [sp, #64]
  40e86c:	ldp	x24, x23, [sp, #48]
  40e870:	ldp	x26, x25, [sp, #32]
  40e874:	ldp	x28, x27, [sp, #16]
  40e878:	ldp	x29, x30, [sp], #96
  40e87c:	b	40cf6c <handle_function@@Base+0x37c>
  40e880:	mov	x0, x23
  40e884:	bl	406790 <strlen@plt>
  40e888:	mov	x24, x0
  40e88c:	mov	x0, x23
  40e890:	mov	x1, x24
  40e894:	bl	420c00 <lookup_variable@@Base>
  40e898:	mov	x20, x0
  40e89c:	cbnz	x0, 40e8e0 <hash_init_function_table@@Base+0x168c>
  40e8a0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  40e8a4:	ldr	w8, [x8, #88]
  40e8a8:	cbz	w8, 40e8e0 <hash_init_function_table@@Base+0x168c>
  40e8ac:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40e8b0:	ldr	x22, [x8, #1552]
  40e8b4:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  40e8b8:	add	x1, x1, #0x6cf
  40e8bc:	mov	w2, #0x5                   	// #5
  40e8c0:	mov	x0, xzr
  40e8c4:	bl	406e10 <dcgettext@plt>
  40e8c8:	mov	x2, x0
  40e8cc:	mov	x0, x22
  40e8d0:	mov	x1, x24
  40e8d4:	mov	w3, w24
  40e8d8:	mov	x4, x23
  40e8dc:	bl	418744 <error@@Base>
  40e8e0:	cbz	x20, 40ea50 <hash_init_function_table@@Base+0x17fc>
  40e8e4:	ldr	x8, [x20, #8]
  40e8e8:	ldrb	w8, [x8]
  40e8ec:	cbz	w8, 40ea50 <hash_init_function_table@@Base+0x17fc>
  40e8f0:	add	x9, x24, #0x13
  40e8f4:	mov	x8, sp
  40e8f8:	and	x9, x9, #0xfffffffffffffff0
  40e8fc:	sub	x22, x8, x9
  40e900:	mov	sp, x22
  40e904:	mov	w8, #0x2824                	// #10276
  40e908:	mov	x0, x22
  40e90c:	strh	w8, [x0], #2
  40e910:	mov	x1, x23
  40e914:	mov	x2, x24
  40e918:	bl	406750 <memcpy@plt>
  40e91c:	add	x8, x24, x22
  40e920:	mov	w9, #0x29                  	// #41
  40e924:	strh	w9, [x8, #2]
  40e928:	add	x23, x24, #0x3
  40e92c:	bl	4214a8 <push_new_variable_scope@@Base>
  40e930:	ldr	x8, [x21]
  40e934:	cbz	x8, 40e998 <hash_init_function_table@@Base+0x1744>
  40e938:	adrp	x25, 429000 <_IO_stdin_used@@Base+0x5290>
  40e93c:	mov	x24, xzr
  40e940:	add	x25, x25, #0xd2d
  40e944:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  40e948:	sub	x0, x29, #0xc
  40e94c:	mov	x1, x25
  40e950:	mov	w2, w24
  40e954:	add	x27, x21, x24, lsl #3
  40e958:	bl	406830 <sprintf@plt>
  40e95c:	sub	x0, x29, #0xc
  40e960:	bl	406790 <strlen@plt>
  40e964:	ldr	x8, [x26, #2440]
  40e968:	ldr	x2, [x27]
  40e96c:	mov	x1, x0
  40e970:	sub	x0, x29, #0xc
  40e974:	ldr	x5, [x8, #8]
  40e978:	mov	w3, #0x6                   	// #6
  40e97c:	mov	w4, wzr
  40e980:	mov	x6, xzr
  40e984:	bl	420860 <define_variable_in_set@@Base>
  40e988:	ldr	x8, [x27, #8]
  40e98c:	add	x24, x24, #0x1
  40e990:	cbnz	x8, 40e948 <hash_init_function_table@@Base+0x16f4>
  40e994:	b	40e99c <hash_init_function_table@@Base+0x1748>
  40e998:	mov	w24, wzr
  40e99c:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  40e9a0:	ldr	w28, [x26, #3032]
  40e9a4:	cmp	w24, w28
  40e9a8:	b.ge	40ea0c <hash_init_function_table@@Base+0x17b8>  // b.tcont
  40e9ac:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x5290>
  40e9b0:	adrp	x25, 426000 <_IO_stdin_used@@Base+0x2290>
  40e9b4:	add	x21, x21, #0xd2d
  40e9b8:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  40e9bc:	add	x25, x25, #0x5eb
  40e9c0:	sub	x0, x29, #0xc
  40e9c4:	mov	x1, x21
  40e9c8:	mov	w2, w24
  40e9cc:	bl	406830 <sprintf@plt>
  40e9d0:	sub	x0, x29, #0xc
  40e9d4:	bl	406790 <strlen@plt>
  40e9d8:	ldr	x8, [x27, #2440]
  40e9dc:	mov	x1, x0
  40e9e0:	sub	x0, x29, #0xc
  40e9e4:	mov	w3, #0x6                   	// #6
  40e9e8:	ldr	x5, [x8, #8]
  40e9ec:	mov	x2, x25
  40e9f0:	mov	w4, wzr
  40e9f4:	mov	x6, xzr
  40e9f8:	bl	420860 <define_variable_in_set@@Base>
  40e9fc:	ldr	w28, [x26, #3032]
  40ea00:	add	w24, w24, #0x1
  40ea04:	cmp	w24, w28
  40ea08:	b.lt	40e9c0 <hash_init_function_table@@Base+0x176c>  // b.tstop
  40ea0c:	ldr	w8, [x20, #44]
  40ea10:	mov	x0, x19
  40ea14:	mov	x1, x22
  40ea18:	mov	x2, x23
  40ea1c:	orr	w8, w8, #0x7fff00
  40ea20:	str	w8, [x20, #44]
  40ea24:	str	w24, [x26, #3032]
  40ea28:	bl	409c40 <variable_expand_string@@Base>
  40ea2c:	str	w28, [x26, #3032]
  40ea30:	ldr	w8, [x20, #44]
  40ea34:	mov	x19, x0
  40ea38:	and	w8, w8, #0xff8000ff
  40ea3c:	str	w8, [x20, #44]
  40ea40:	bl	4214f4 <pop_variable_scope@@Base>
  40ea44:	mov	x0, x19
  40ea48:	bl	406790 <strlen@plt>
  40ea4c:	add	x19, x19, x0
  40ea50:	mov	x0, x19
  40ea54:	mov	sp, x29
  40ea58:	ldp	x20, x19, [sp, #80]
  40ea5c:	ldp	x22, x21, [sp, #64]
  40ea60:	ldp	x24, x23, [sp, #48]
  40ea64:	ldp	x26, x25, [sp, #32]
  40ea68:	ldp	x28, x27, [sp, #16]
  40ea6c:	ldp	x29, x30, [sp], #96
  40ea70:	ret
  40ea74:	stp	x29, x30, [sp, #-80]!
  40ea78:	stp	x24, x23, [sp, #32]
  40ea7c:	stp	x22, x21, [sp, #48]
  40ea80:	stp	x20, x19, [sp, #64]
  40ea84:	ldr	x23, [x1]
  40ea88:	mov	x20, x2
  40ea8c:	mov	x22, x1
  40ea90:	mov	x19, x0
  40ea94:	str	x25, [sp, #16]
  40ea98:	mov	x29, sp
  40ea9c:	cbz	x23, 40eacc <hash_init_function_table@@Base+0x1878>
  40eaa0:	mov	x21, xzr
  40eaa4:	add	x24, x22, #0x8
  40eaa8:	mov	x8, x23
  40eaac:	mov	x0, x8
  40eab0:	bl	406790 <strlen@plt>
  40eab4:	ldr	x8, [x24], #8
  40eab8:	add	x9, x21, x0
  40eabc:	add	x21, x9, #0x2
  40eac0:	cbnz	x8, 40eaac <hash_init_function_table@@Base+0x1858>
  40eac4:	add	x8, x21, #0x1
  40eac8:	b	40ead0 <hash_init_function_table@@Base+0x187c>
  40eacc:	mov	w8, #0x1                   	// #1
  40ead0:	add	x8, x8, #0xf
  40ead4:	mov	x9, sp
  40ead8:	and	x8, x8, #0xfffffffffffffff0
  40eadc:	sub	x21, x9, x8
  40eae0:	mov	sp, x21
  40eae4:	strb	wzr, [x21]
  40eae8:	ldr	x24, [x22, #8]
  40eaec:	mov	x0, x21
  40eaf0:	mov	x1, x23
  40eaf4:	bl	406d50 <strcpy@plt>
  40eaf8:	cbz	x24, 40eb2c <hash_init_function_table@@Base+0x18d8>
  40eafc:	add	x23, x22, #0x10
  40eb00:	mov	w24, #0x202c                	// #8236
  40eb04:	mov	x22, x21
  40eb08:	ldur	x0, [x23, #-16]
  40eb0c:	bl	406790 <strlen@plt>
  40eb10:	add	x22, x22, x0
  40eb14:	strh	w24, [x22], #2
  40eb18:	ldp	x1, x25, [x23, #-8]
  40eb1c:	mov	x0, x22
  40eb20:	bl	406d50 <strcpy@plt>
  40eb24:	add	x23, x23, #0x8
  40eb28:	cbnz	x25, 40eb08 <hash_init_function_table@@Base+0x18b4>
  40eb2c:	ldrb	w8, [x20]
  40eb30:	cmp	w8, #0x69
  40eb34:	b.eq	40eb6c <hash_init_function_table@@Base+0x1918>  // b.none
  40eb38:	cmp	w8, #0x77
  40eb3c:	b.ne	40eba8 <hash_init_function_table@@Base+0x1954>  // b.any
  40eb40:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40eb44:	ldr	x20, [x8, #1552]
  40eb48:	mov	x0, x21
  40eb4c:	bl	406790 <strlen@plt>
  40eb50:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  40eb54:	mov	x1, x0
  40eb58:	add	x2, x2, #0x96c
  40eb5c:	mov	x0, x20
  40eb60:	mov	x3, x21
  40eb64:	bl	418744 <error@@Base>
  40eb68:	b	40eb88 <hash_init_function_table@@Base+0x1934>
  40eb6c:	mov	w0, wzr
  40eb70:	mov	x1, x21
  40eb74:	bl	4184dc <outputs@@Base>
  40eb78:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40eb7c:	add	x1, x1, #0x5ea
  40eb80:	mov	w0, wzr
  40eb84:	bl	4184dc <outputs@@Base>
  40eb88:	mov	x0, x19
  40eb8c:	mov	sp, x29
  40eb90:	ldp	x20, x19, [sp, #64]
  40eb94:	ldp	x22, x21, [sp, #48]
  40eb98:	ldp	x24, x23, [sp, #32]
  40eb9c:	ldr	x25, [sp, #16]
  40eba0:	ldp	x29, x30, [sp], #80
  40eba4:	ret
  40eba8:	cmp	w8, #0x65
  40ebac:	b.ne	40ebd8 <hash_init_function_table@@Base+0x1984>  // b.any
  40ebb0:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40ebb4:	ldr	x19, [x8, #1552]
  40ebb8:	mov	x0, x21
  40ebbc:	bl	406790 <strlen@plt>
  40ebc0:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  40ebc4:	mov	x1, x0
  40ebc8:	add	x2, x2, #0x96c
  40ebcc:	mov	x0, x19
  40ebd0:	mov	x3, x21
  40ebd4:	bl	4188bc <fatal@@Base>
  40ebd8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ebdc:	ldr	x8, [x8, #1472]
  40ebe0:	mov	x0, x20
  40ebe4:	ldr	x19, [x8]
  40ebe8:	bl	406790 <strlen@plt>
  40ebec:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  40ebf0:	mov	x1, x0
  40ebf4:	add	x2, x2, #0x5a
  40ebf8:	mov	x0, x19
  40ebfc:	mov	x3, x20
  40ec00:	bl	4188bc <fatal@@Base>
  40ec04:	sub	sp, sp, #0x40
  40ec08:	stp	x29, x30, [sp, #16]
  40ec0c:	stp	x20, x19, [sp, #48]
  40ec10:	str	x21, [sp, #32]
  40ec14:	ldr	x21, [x1]
  40ec18:	add	x29, sp, #0x10
  40ec1c:	mov	x19, x0
  40ec20:	mov	x20, x1
  40ec24:	mov	x0, x21
  40ec28:	str	x21, [x29, #24]
  40ec2c:	bl	406790 <strlen@plt>
  40ec30:	add	x8, x21, x0
  40ec34:	sub	x8, x8, #0x1
  40ec38:	add	x0, x29, #0x18
  40ec3c:	add	x1, sp, #0x8
  40ec40:	str	x8, [sp, #8]
  40ec44:	bl	40c7a8 <strip_whitespace@@Base>
  40ec48:	ldr	x0, [x29, #24]
  40ec4c:	ldr	x8, [sp, #8]
  40ec50:	cmp	x0, x8
  40ec54:	b.ls	40ec60 <hash_init_function_table@@Base+0x1a0c>  // b.plast
  40ec58:	mov	w8, #0x2                   	// #2
  40ec5c:	b	40ec7c <hash_init_function_table@@Base+0x1a28>
  40ec60:	add	x1, x8, #0x1
  40ec64:	bl	40a0d0 <expand_argument@@Base>
  40ec68:	ldrb	w21, [x0]
  40ec6c:	bl	406cb0 <free@plt>
  40ec70:	cmp	w21, #0x0
  40ec74:	mov	w8, #0x1                   	// #1
  40ec78:	cinc	x8, x8, eq  // eq = none
  40ec7c:	ldr	x0, [x20, x8, lsl #3]
  40ec80:	cbz	x0, 40ecb0 <hash_init_function_table@@Base+0x1a5c>
  40ec84:	mov	x1, xzr
  40ec88:	bl	40a0d0 <expand_argument@@Base>
  40ec8c:	mov	x20, x0
  40ec90:	bl	406790 <strlen@plt>
  40ec94:	mov	x2, x0
  40ec98:	mov	x0, x19
  40ec9c:	mov	x1, x20
  40eca0:	bl	4099c4 <variable_buffer_output@@Base>
  40eca4:	mov	x19, x0
  40eca8:	mov	x0, x20
  40ecac:	bl	406cb0 <free@plt>
  40ecb0:	mov	x0, x19
  40ecb4:	ldp	x20, x19, [sp, #48]
  40ecb8:	ldr	x21, [sp, #32]
  40ecbc:	ldp	x29, x30, [sp, #16]
  40ecc0:	add	sp, sp, #0x40
  40ecc4:	ret
  40ecc8:	sub	sp, sp, #0x40
  40eccc:	stp	x29, x30, [sp, #16]
  40ecd0:	stp	x20, x19, [sp, #48]
  40ecd4:	ldr	x8, [x1]
  40ecd8:	mov	x19, x0
  40ecdc:	str	x21, [sp, #32]
  40ece0:	add	x29, sp, #0x10
  40ece4:	cbz	x8, 40ed68 <hash_init_function_table@@Base+0x1b14>
  40ece8:	add	x21, x1, #0x8
  40ecec:	ldur	x20, [x21, #-8]
  40ecf0:	mov	x0, x20
  40ecf4:	str	x20, [x29, #24]
  40ecf8:	bl	406790 <strlen@plt>
  40ecfc:	add	x8, x20, x0
  40ed00:	sub	x8, x8, #0x1
  40ed04:	add	x0, x29, #0x18
  40ed08:	add	x1, sp, #0x8
  40ed0c:	str	x8, [sp, #8]
  40ed10:	bl	40c7a8 <strip_whitespace@@Base>
  40ed14:	ldr	x0, [x29, #24]
  40ed18:	ldr	x8, [sp, #8]
  40ed1c:	cmp	x0, x8
  40ed20:	b.hi	40ed40 <hash_init_function_table@@Base+0x1aec>  // b.pmore
  40ed24:	add	x1, x8, #0x1
  40ed28:	bl	40a0d0 <expand_argument@@Base>
  40ed2c:	mov	x20, x0
  40ed30:	bl	406790 <strlen@plt>
  40ed34:	cbnz	x0, 40ed4c <hash_init_function_table@@Base+0x1af8>
  40ed38:	mov	x0, x20
  40ed3c:	bl	406cb0 <free@plt>
  40ed40:	ldr	x8, [x21], #8
  40ed44:	cbnz	x8, 40ecec <hash_init_function_table@@Base+0x1a98>
  40ed48:	b	40ed68 <hash_init_function_table@@Base+0x1b14>
  40ed4c:	mov	x2, x0
  40ed50:	mov	x0, x19
  40ed54:	mov	x1, x20
  40ed58:	bl	4099c4 <variable_buffer_output@@Base>
  40ed5c:	mov	x19, x0
  40ed60:	mov	x0, x20
  40ed64:	bl	406cb0 <free@plt>
  40ed68:	mov	x0, x19
  40ed6c:	ldp	x20, x19, [sp, #48]
  40ed70:	ldr	x21, [sp, #32]
  40ed74:	ldp	x29, x30, [sp, #16]
  40ed78:	add	sp, sp, #0x40
  40ed7c:	ret
  40ed80:	sub	sp, sp, #0x40
  40ed84:	stp	x29, x30, [sp, #16]
  40ed88:	stp	x20, x19, [sp, #48]
  40ed8c:	str	x21, [sp, #32]
  40ed90:	ldr	x21, [x1]
  40ed94:	add	x29, sp, #0x10
  40ed98:	mov	x19, x0
  40ed9c:	mov	x20, x1
  40eda0:	mov	x0, x21
  40eda4:	str	x21, [x29, #24]
  40eda8:	bl	406790 <strlen@plt>
  40edac:	add	x8, x21, x0
  40edb0:	sub	x8, x8, #0x1
  40edb4:	add	x0, x29, #0x18
  40edb8:	add	x1, sp, #0x8
  40edbc:	str	x8, [sp, #8]
  40edc0:	bl	40c7a8 <strip_whitespace@@Base>
  40edc4:	ldr	x0, [x29, #24]
  40edc8:	ldr	x8, [sp, #8]
  40edcc:	cmp	x0, x8
  40edd0:	b.hi	40ee54 <hash_init_function_table@@Base+0x1c00>  // b.pmore
  40edd4:	add	x21, x20, #0x8
  40edd8:	add	x1, x8, #0x1
  40eddc:	bl	40a0d0 <expand_argument@@Base>
  40ede0:	mov	x20, x0
  40ede4:	bl	406790 <strlen@plt>
  40ede8:	cbz	x0, 40ee4c <hash_init_function_table@@Base+0x1bf8>
  40edec:	ldr	x8, [x21]
  40edf0:	cbz	x8, 40ee38 <hash_init_function_table@@Base+0x1be4>
  40edf4:	mov	x0, x20
  40edf8:	bl	406cb0 <free@plt>
  40edfc:	ldr	x20, [x21], #8
  40ee00:	mov	x0, x20
  40ee04:	str	x20, [x29, #24]
  40ee08:	bl	406790 <strlen@plt>
  40ee0c:	add	x8, x20, x0
  40ee10:	sub	x8, x8, #0x1
  40ee14:	add	x0, x29, #0x18
  40ee18:	add	x1, sp, #0x8
  40ee1c:	str	x8, [sp, #8]
  40ee20:	bl	40c7a8 <strip_whitespace@@Base>
  40ee24:	ldr	x0, [x29, #24]
  40ee28:	ldr	x8, [sp, #8]
  40ee2c:	cmp	x0, x8
  40ee30:	b.ls	40edd8 <hash_init_function_table@@Base+0x1b84>  // b.plast
  40ee34:	b	40ee54 <hash_init_function_table@@Base+0x1c00>
  40ee38:	mov	x2, x0
  40ee3c:	mov	x0, x19
  40ee40:	mov	x1, x20
  40ee44:	bl	4099c4 <variable_buffer_output@@Base>
  40ee48:	mov	x19, x0
  40ee4c:	mov	x0, x20
  40ee50:	bl	406cb0 <free@plt>
  40ee54:	mov	x0, x19
  40ee58:	ldp	x20, x19, [sp, #48]
  40ee5c:	ldr	x21, [sp, #32]
  40ee60:	ldp	x29, x30, [sp, #16]
  40ee64:	add	sp, sp, #0x40
  40ee68:	ret
  40ee6c:	stp	x29, x30, [sp, #-32]!
  40ee70:	stp	x20, x19, [sp, #16]
  40ee74:	ldr	x20, [x1]
  40ee78:	mov	x19, x0
  40ee7c:	mov	x29, sp
  40ee80:	mov	x0, x20
  40ee84:	bl	406790 <strlen@plt>
  40ee88:	mov	x1, x0
  40ee8c:	mov	x0, x20
  40ee90:	bl	420c00 <lookup_variable@@Base>
  40ee94:	cbz	x0, 40eebc <hash_init_function_table@@Base+0x1c68>
  40ee98:	ldr	x20, [x0, #8]
  40ee9c:	mov	x0, x20
  40eea0:	bl	406790 <strlen@plt>
  40eea4:	mov	x2, x0
  40eea8:	mov	x0, x19
  40eeac:	mov	x1, x20
  40eeb0:	ldp	x20, x19, [sp, #16]
  40eeb4:	ldp	x29, x30, [sp], #32
  40eeb8:	b	4099c4 <variable_buffer_output@@Base>
  40eebc:	mov	x0, x19
  40eec0:	ldp	x20, x19, [sp, #16]
  40eec4:	ldp	x29, x30, [sp], #32
  40eec8:	ret
  40eecc:	sub	sp, sp, #0x30
  40eed0:	stp	x20, x19, [sp, #32]
  40eed4:	mov	x19, x1
  40eed8:	mov	x20, x0
  40eedc:	add	x0, sp, #0x8
  40eee0:	mov	x1, sp
  40eee4:	stp	x29, x30, [sp, #16]
  40eee8:	add	x29, sp, #0x10
  40eeec:	bl	40a36c <install_variable_buffer@@Base>
  40eef0:	ldr	x0, [x19]
  40eef4:	mov	x1, xzr
  40eef8:	bl	4191d0 <eval_buffer@@Base>
  40eefc:	ldp	x1, x0, [sp]
  40ef00:	bl	40a3b8 <restore_variable_buffer@@Base>
  40ef04:	mov	x0, x20
  40ef08:	ldp	x20, x19, [sp, #32]
  40ef0c:	ldp	x29, x30, [sp, #16]
  40ef10:	add	sp, sp, #0x30
  40ef14:	ret
  40ef18:	stp	x29, x30, [sp, #-80]!
  40ef1c:	str	x28, [sp, #16]
  40ef20:	stp	x24, x23, [sp, #32]
  40ef24:	stp	x22, x21, [sp, #48]
  40ef28:	stp	x20, x19, [sp, #64]
  40ef2c:	mov	x29, sp
  40ef30:	sub	sp, sp, #0x400
  40ef34:	ldr	x19, [x1]
  40ef38:	mov	x22, x1
  40ef3c:	mov	x20, x0
  40ef40:	ldrb	w8, [x19]
  40ef44:	cmp	w8, #0x3e
  40ef48:	b.eq	40efb4 <hash_init_function_table@@Base+0x1d60>  // b.none
  40ef4c:	cmp	w8, #0x3c
  40ef50:	b.ne	40f1a8 <hash_init_function_table@@Base+0x1f54>  // b.any
  40ef54:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40ef58:	add	x8, x8, #0xcf0
  40ef5c:	ldrb	w9, [x19, #1]!
  40ef60:	ldrh	w10, [x8, x9, lsl #1]
  40ef64:	tst	w10, #0x6
  40ef68:	b.ne	40ef5c <hash_init_function_table@@Base+0x1d08>  // b.any
  40ef6c:	cbz	w9, 40f1e8 <hash_init_function_table@@Base+0x1f94>
  40ef70:	ldr	x8, [x22, #8]
  40ef74:	cbnz	x8, 40f260 <hash_init_function_table@@Base+0x200c>
  40ef78:	bl	406eb0 <__errno_location@plt>
  40ef7c:	adrp	x22, 424000 <_IO_stdin_used@@Base+0x290>
  40ef80:	mov	x21, x0
  40ef84:	add	x22, x22, #0xb3b
  40ef88:	mov	x0, x19
  40ef8c:	mov	x1, x22
  40ef90:	str	wzr, [x21]
  40ef94:	bl	4069b0 <fopen@plt>
  40ef98:	cbnz	x0, 40f108 <hash_init_function_table@@Base+0x1eb4>
  40ef9c:	ldr	w23, [x21]
  40efa0:	cmp	w23, #0x2
  40efa4:	b.eq	40f0e8 <hash_init_function_table@@Base+0x1e94>  // b.none
  40efa8:	cmp	w23, #0x4
  40efac:	b.eq	40ef88 <hash_init_function_table@@Base+0x1d34>  // b.none
  40efb0:	b	40f020 <hash_init_function_table@@Base+0x1dcc>
  40efb4:	ldrb	w8, [x19, #1]!
  40efb8:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40efbc:	add	x10, x10, #0xcf0
  40efc0:	cmp	w8, #0x3e
  40efc4:	cinc	x9, x19, eq  // eq = none
  40efc8:	sub	x19, x9, #0x1
  40efcc:	ldrb	w9, [x19, #1]!
  40efd0:	ldrh	w11, [x10, x9, lsl #1]
  40efd4:	tst	w11, #0x6
  40efd8:	b.ne	40efcc <hash_init_function_table@@Base+0x1d78>  // b.any
  40efdc:	adrp	x10, 427000 <_IO_stdin_used@@Base+0x3290>
  40efe0:	adrp	x11, 424000 <_IO_stdin_used@@Base+0x290>
  40efe4:	add	x10, x10, #0x92c
  40efe8:	add	x11, x11, #0xe53
  40efec:	cmp	w8, #0x3e
  40eff0:	csel	x24, x11, x10, eq  // eq = none
  40eff4:	cbz	w9, 40f1e8 <hash_init_function_table@@Base+0x1f94>
  40eff8:	bl	406eb0 <__errno_location@plt>
  40effc:	mov	x21, x0
  40f000:	mov	x0, x19
  40f004:	mov	x1, x24
  40f008:	str	wzr, [x21]
  40f00c:	bl	4069b0 <fopen@plt>
  40f010:	cbnz	x0, 40f080 <hash_init_function_table@@Base+0x1e2c>
  40f014:	ldr	w23, [x21]
  40f018:	cmp	w23, #0x4
  40f01c:	b.eq	40f000 <hash_init_function_table@@Base+0x1dac>  // b.none
  40f020:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40f024:	ldr	x20, [x8, #1552]
  40f028:	mov	x0, x19
  40f02c:	bl	406790 <strlen@plt>
  40f030:	mov	x22, x0
  40f034:	mov	w0, w23
  40f038:	bl	406b50 <strerror@plt>
  40f03c:	bl	406790 <strlen@plt>
  40f040:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f044:	add	x22, x0, x22
  40f048:	add	x1, x1, #0x92
  40f04c:	mov	w2, #0x5                   	// #5
  40f050:	mov	x0, xzr
  40f054:	bl	406e10 <dcgettext@plt>
  40f058:	ldr	w8, [x21]
  40f05c:	mov	x21, x0
  40f060:	mov	w0, w8
  40f064:	bl	406b50 <strerror@plt>
  40f068:	mov	x4, x0
  40f06c:	mov	x0, x20
  40f070:	mov	x1, x22
  40f074:	mov	x2, x21
  40f078:	mov	x3, x19
  40f07c:	bl	4188bc <fatal@@Base>
  40f080:	ldr	x22, [x22, #8]
  40f084:	mov	x23, x0
  40f088:	cbz	x22, 40f0dc <hash_init_function_table@@Base+0x1e88>
  40f08c:	mov	x0, x22
  40f090:	bl	406790 <strlen@plt>
  40f094:	cbz	x0, 40f0ac <hash_init_function_table@@Base+0x1e58>
  40f098:	add	x8, x0, x22
  40f09c:	ldurb	w8, [x8, #-1]
  40f0a0:	cmp	w8, #0xa
  40f0a4:	cset	w24, ne  // ne = any
  40f0a8:	b	40f0b0 <hash_init_function_table@@Base+0x1e5c>
  40f0ac:	mov	w24, #0x1                   	// #1
  40f0b0:	mov	x0, x22
  40f0b4:	mov	x1, x23
  40f0b8:	bl	4067a0 <fputs@plt>
  40f0bc:	cmn	w0, #0x1
  40f0c0:	b.eq	40f290 <hash_init_function_table@@Base+0x203c>  // b.none
  40f0c4:	cbz	w24, 40f0dc <hash_init_function_table@@Base+0x1e88>
  40f0c8:	mov	w0, #0xa                   	// #10
  40f0cc:	mov	x1, x23
  40f0d0:	bl	406de0 <fputc_unlocked@plt>
  40f0d4:	cmn	w0, #0x1
  40f0d8:	b.eq	40f290 <hash_init_function_table@@Base+0x203c>  // b.none
  40f0dc:	mov	x0, x23
  40f0e0:	bl	406980 <fclose@plt>
  40f0e4:	cbnz	w0, 40f22c <hash_init_function_table@@Base+0x1fd8>
  40f0e8:	mov	x0, x20
  40f0ec:	add	sp, sp, #0x400
  40f0f0:	ldp	x20, x19, [sp, #64]
  40f0f4:	ldp	x22, x21, [sp, #48]
  40f0f8:	ldp	x24, x23, [sp, #32]
  40f0fc:	ldr	x28, [sp, #16]
  40f100:	ldp	x29, x30, [sp], #80
  40f104:	ret
  40f108:	mov	x23, x0
  40f10c:	mov	x22, x20
  40f110:	mov	x0, sp
  40f114:	mov	w1, #0x1                   	// #1
  40f118:	mov	w2, #0x400                 	// #1024
  40f11c:	mov	x3, x23
  40f120:	bl	406c20 <fread_unlocked@plt>
  40f124:	cbz	x0, 40f13c <hash_init_function_table@@Base+0x1ee8>
  40f128:	mov	x2, x0
  40f12c:	mov	x1, sp
  40f130:	mov	x0, x22
  40f134:	bl	4099c4 <variable_buffer_output@@Base>
  40f138:	mov	x22, x0
  40f13c:	mov	x0, x23
  40f140:	bl	406f50 <ferror@plt>
  40f144:	cbz	w0, 40f154 <hash_init_function_table@@Base+0x1f00>
  40f148:	ldr	w24, [x21]
  40f14c:	cmp	w24, #0x4
  40f150:	b.ne	40f1fc <hash_init_function_table@@Base+0x1fa8>  // b.any
  40f154:	mov	x0, x23
  40f158:	bl	406bf0 <feof@plt>
  40f15c:	cbz	w0, 40f110 <hash_init_function_table@@Base+0x1ebc>
  40f160:	mov	x0, x23
  40f164:	bl	406980 <fclose@plt>
  40f168:	cbnz	w0, 40f22c <hash_init_function_table@@Base+0x1fd8>
  40f16c:	cmp	x22, x20
  40f170:	b.ls	40f1a0 <hash_init_function_table@@Base+0x1f4c>  // b.plast
  40f174:	mov	x8, x22
  40f178:	ldrb	w9, [x8, #-1]!
  40f17c:	cmp	w9, #0xa
  40f180:	b.ne	40f1a0 <hash_init_function_table@@Base+0x1f4c>  // b.any
  40f184:	cmp	x8, x20
  40f188:	mov	x20, x8
  40f18c:	b.ls	40f0e8 <hash_init_function_table@@Base+0x1e94>  // b.plast
  40f190:	ldrb	w9, [x22, #-2]!
  40f194:	cmp	w9, #0xd
  40f198:	csel	x20, x22, x8, eq  // eq = none
  40f19c:	b	40f0e8 <hash_init_function_table@@Base+0x1e94>
  40f1a0:	mov	x20, x22
  40f1a4:	b	40f0e8 <hash_init_function_table@@Base+0x1e94>
  40f1a8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40f1ac:	ldr	x8, [x8, #1472]
  40f1b0:	mov	x0, x19
  40f1b4:	ldr	x20, [x8]
  40f1b8:	bl	406790 <strlen@plt>
  40f1bc:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f1c0:	mov	x21, x0
  40f1c4:	add	x1, x1, #0xe1
  40f1c8:	mov	w2, #0x5                   	// #5
  40f1cc:	mov	x0, xzr
  40f1d0:	bl	406e10 <dcgettext@plt>
  40f1d4:	mov	x2, x0
  40f1d8:	mov	x0, x20
  40f1dc:	mov	x1, x21
  40f1e0:	mov	x3, x19
  40f1e4:	bl	4188bc <fatal@@Base>
  40f1e8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40f1ec:	ldr	x8, [x8, #1472]
  40f1f0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f1f4:	add	x1, x1, #0x7b
  40f1f8:	b	40f270 <hash_init_function_table@@Base+0x201c>
  40f1fc:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40f200:	ldr	x20, [x8, #1552]
  40f204:	mov	x0, x19
  40f208:	bl	406790 <strlen@plt>
  40f20c:	mov	x22, x0
  40f210:	mov	w0, w24
  40f214:	bl	406b50 <strerror@plt>
  40f218:	bl	406790 <strlen@plt>
  40f21c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f220:	add	x22, x0, x22
  40f224:	add	x1, x1, #0xd4
  40f228:	b	40f04c <hash_init_function_table@@Base+0x1df8>
  40f22c:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40f230:	ldr	x20, [x8, #1552]
  40f234:	mov	x0, x19
  40f238:	bl	406790 <strlen@plt>
  40f23c:	ldr	w8, [x21]
  40f240:	mov	x22, x0
  40f244:	mov	w0, w8
  40f248:	bl	406b50 <strerror@plt>
  40f24c:	bl	406790 <strlen@plt>
  40f250:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f254:	add	x22, x0, x22
  40f258:	add	x1, x1, #0xad
  40f25c:	b	40f04c <hash_init_function_table@@Base+0x1df8>
  40f260:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40f264:	ldr	x8, [x8, #1472]
  40f268:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f26c:	add	x1, x1, #0xbb
  40f270:	ldr	x19, [x8]
  40f274:	mov	w2, #0x5                   	// #5
  40f278:	mov	x0, xzr
  40f27c:	bl	406e10 <dcgettext@plt>
  40f280:	mov	x2, x0
  40f284:	mov	x0, x19
  40f288:	mov	x1, xzr
  40f28c:	bl	4188bc <fatal@@Base>
  40f290:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  40f294:	ldr	x20, [x8, #1552]
  40f298:	mov	x0, x19
  40f29c:	bl	406790 <strlen@plt>
  40f2a0:	ldr	w8, [x21]
  40f2a4:	mov	x22, x0
  40f2a8:	mov	w0, w8
  40f2ac:	bl	406b50 <strerror@plt>
  40f2b0:	bl	406790 <strlen@plt>
  40f2b4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f2b8:	add	x22, x0, x22
  40f2bc:	add	x1, x1, #0x9f
  40f2c0:	b	40f04c <hash_init_function_table@@Base+0x1df8>
  40f2c4:	stp	x29, x30, [sp, #-16]!
  40f2c8:	ldr	x0, [x0, #16]
  40f2cc:	mov	x29, sp
  40f2d0:	bl	40fcd8 <jhash_string@@Base>
  40f2d4:	mov	w0, w0
  40f2d8:	ldp	x29, x30, [sp], #16
  40f2dc:	ret
  40f2e0:	mov	x0, xzr
  40f2e4:	ret
  40f2e8:	ldr	w9, [x0, #24]
  40f2ec:	ldr	w10, [x1, #24]
  40f2f0:	mov	x8, x0
  40f2f4:	subs	w0, w9, w10
  40f2f8:	b.eq	40f300 <hash_init_function_table@@Base+0x20ac>  // b.none
  40f2fc:	ret
  40f300:	ldr	x0, [x8, #16]
  40f304:	ldr	x1, [x1, #16]
  40f308:	cmp	x0, x1
  40f30c:	b.eq	40f314 <hash_init_function_table@@Base+0x20c0>  // b.none
  40f310:	b	406c70 <strcmp@plt>
  40f314:	mov	w0, wzr
  40f318:	ret
  40f31c:	sub	sp, sp, #0x40
  40f320:	stp	x29, x30, [sp, #16]
  40f324:	stp	x22, x21, [sp, #32]
  40f328:	stp	x20, x19, [sp, #48]
  40f32c:	add	x29, sp, #0x10
  40f330:	mov	x20, x1
  40f334:	mov	x19, x0
  40f338:	str	x0, [sp, #8]
  40f33c:	bl	406790 <strlen@plt>
  40f340:	add	x8, x19, x0
  40f344:	sub	x8, x8, #0x1
  40f348:	add	x0, sp, #0x8
  40f34c:	mov	x1, sp
  40f350:	str	x8, [sp]
  40f354:	bl	40c7a8 <strip_whitespace@@Base>
  40f358:	ldp	x9, x8, [sp]
  40f35c:	cmp	x8, x9
  40f360:	b.hi	40f384 <hash_init_function_table@@Base+0x2130>  // b.pmore
  40f364:	ldrb	w10, [x8]
  40f368:	sub	w10, w10, #0x30
  40f36c:	cmp	w10, #0x9
  40f370:	b.hi	40f3a0 <hash_init_function_table@@Base+0x214c>  // b.pmore
  40f374:	add	x8, x8, #0x1
  40f378:	cmp	x8, x9
  40f37c:	b.ls	40f364 <hash_init_function_table@@Base+0x2110>  // b.plast
  40f380:	str	x8, [sp, #8]
  40f384:	cmp	x9, x19
  40f388:	b.mi	40f3a4 <hash_init_function_table@@Base+0x2150>  // b.first
  40f38c:	ldp	x20, x19, [sp, #48]
  40f390:	ldp	x22, x21, [sp, #32]
  40f394:	ldp	x29, x30, [sp, #16]
  40f398:	add	sp, sp, #0x40
  40f39c:	ret
  40f3a0:	str	x8, [sp, #8]
  40f3a4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40f3a8:	ldr	x8, [x8, #1472]
  40f3ac:	mov	x0, x20
  40f3b0:	ldr	x21, [x8]
  40f3b4:	bl	406790 <strlen@plt>
  40f3b8:	mov	x22, x0
  40f3bc:	mov	x0, x19
  40f3c0:	bl	406790 <strlen@plt>
  40f3c4:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x1290>
  40f3c8:	add	x1, x0, x22
  40f3cc:	add	x2, x2, #0xf78
  40f3d0:	mov	x0, x21
  40f3d4:	mov	x3, x20
  40f3d8:	mov	x4, x19
  40f3dc:	bl	4188bc <fatal@@Base>

000000000040f3e0 <guile_gmake_setup@@Base>:
  40f3e0:	mov	w0, #0x1                   	// #1
  40f3e4:	ret

000000000040f3e8 <hash_init@@Base>:
  40f3e8:	stp	x29, x30, [sp, #-48]!
  40f3ec:	orr	x8, x1, x1, lsr #1
  40f3f0:	orr	x8, x8, x8, lsr #2
  40f3f4:	orr	x8, x8, x8, lsr #4
  40f3f8:	orr	x8, x8, x8, lsr #8
  40f3fc:	orr	x8, x8, x8, lsr #16
  40f400:	orr	x8, x8, x8, lsr #32
  40f404:	add	x8, x8, #0x1
  40f408:	stp	x22, x21, [sp, #16]
  40f40c:	stp	x20, x19, [sp, #32]
  40f410:	mov	x19, x0
  40f414:	str	x8, [x0, #32]
  40f418:	str	x8, [x0, #56]
  40f41c:	lsl	x0, x8, #3
  40f420:	mov	x29, sp
  40f424:	mov	x20, x4
  40f428:	mov	x21, x3
  40f42c:	mov	x22, x2
  40f430:	bl	4178ac <xcalloc@@Base>
  40f434:	str	x0, [x19]
  40f438:	cbz	x0, 40f468 <hash_init@@Base+0x80>
  40f43c:	ldr	x8, [x19, #32]
  40f440:	stp	xzr, xzr, [x19, #64]
  40f444:	str	wzr, [x19, #80]
  40f448:	stp	x22, x21, [x19, #8]
  40f44c:	sub	x8, x8, x8, lsr #4
  40f450:	stp	x8, xzr, [x19, #40]
  40f454:	str	x20, [x19, #24]
  40f458:	ldp	x20, x19, [sp, #32]
  40f45c:	ldp	x22, x21, [sp, #16]
  40f460:	ldp	x29, x30, [sp], #48
  40f464:	ret
  40f468:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40f46c:	ldr	x20, [x8, #2488]
  40f470:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40f474:	add	x1, x1, #0x102
  40f478:	mov	w2, #0x5                   	// #5
  40f47c:	bl	406e10 <dcgettext@plt>
  40f480:	ldr	x8, [x19, #32]
  40f484:	mov	x1, x0
  40f488:	mov	x0, x20
  40f48c:	lsl	x2, x8, #3
  40f490:	bl	406f20 <fprintf@plt>
  40f494:	mov	w0, #0x1                   	// #1
  40f498:	bl	4067b0 <exit@plt>

000000000040f49c <hash_load@@Base>:
  40f49c:	stp	x29, x30, [sp, #-48]!
  40f4a0:	stp	x22, x21, [sp, #16]
  40f4a4:	stp	x20, x19, [sp, #32]
  40f4a8:	mov	x29, sp
  40f4ac:	cbz	x2, 40f4d8 <hash_load@@Base+0x3c>
  40f4b0:	mov	x19, x3
  40f4b4:	mov	x20, x2
  40f4b8:	mov	x21, x1
  40f4bc:	mov	x22, x0
  40f4c0:	mov	x0, x22
  40f4c4:	mov	x1, x21
  40f4c8:	sub	x20, x20, #0x1
  40f4cc:	bl	40f4e8 <hash_insert@@Base>
  40f4d0:	add	x21, x21, x19
  40f4d4:	cbnz	x20, 40f4c0 <hash_load@@Base+0x24>
  40f4d8:	ldp	x20, x19, [sp, #32]
  40f4dc:	ldp	x22, x21, [sp, #16]
  40f4e0:	ldp	x29, x30, [sp], #48
  40f4e4:	ret

000000000040f4e8 <hash_insert@@Base>:
  40f4e8:	stp	x29, x30, [sp, #-48]!
  40f4ec:	str	x21, [sp, #16]
  40f4f0:	stp	x20, x19, [sp, #32]
  40f4f4:	mov	x29, sp
  40f4f8:	mov	x19, x1
  40f4fc:	mov	x20, x0
  40f500:	bl	40f53c <hash_find_slot@@Base>
  40f504:	ldr	x21, [x0]
  40f508:	mov	x2, x0
  40f50c:	mov	x0, x20
  40f510:	mov	x1, x19
  40f514:	bl	40f668 <hash_insert_at@@Base>
  40f518:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  40f51c:	ldr	x8, [x8, #2344]
  40f520:	ldp	x20, x19, [sp, #32]
  40f524:	cmp	x21, x8
  40f528:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  40f52c:	csel	x0, xzr, x21, eq  // eq = none
  40f530:	ldr	x21, [sp, #16]
  40f534:	ldp	x29, x30, [sp], #48
  40f538:	ret

000000000040f53c <hash_find_slot@@Base>:
  40f53c:	stp	x29, x30, [sp, #-80]!
  40f540:	stp	x24, x23, [sp, #32]
  40f544:	stp	x22, x21, [sp, #48]
  40f548:	stp	x20, x19, [sp, #64]
  40f54c:	ldr	x8, [x0, #8]
  40f550:	mov	x19, x0
  40f554:	mov	x0, x1
  40f558:	str	x25, [sp, #16]
  40f55c:	mov	x29, sp
  40f560:	mov	x20, x1
  40f564:	blr	x8
  40f568:	ldr	w9, [x19, #32]
  40f56c:	ldr	x8, [x19, #72]
  40f570:	ldr	x10, [x19]
  40f574:	sub	w9, w9, #0x1
  40f578:	add	x8, x8, #0x1
  40f57c:	and	w23, w9, w0
  40f580:	str	x8, [x19, #72]
  40f584:	add	x21, x10, w23, uxtw #3
  40f588:	ldr	x1, [x21]
  40f58c:	cbz	x1, 40f614 <hash_find_slot@@Base+0xd8>
  40f590:	mov	w25, wzr
  40f594:	mov	x22, xzr
  40f598:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  40f59c:	ldr	x8, [x24, #2344]
  40f5a0:	cmp	x1, x8
  40f5a4:	b.eq	40f604 <hash_find_slot@@Base+0xc8>  // b.none
  40f5a8:	cmp	x1, x20
  40f5ac:	b.eq	40f620 <hash_find_slot@@Base+0xe4>  // b.none
  40f5b0:	ldr	x8, [x19, #24]
  40f5b4:	mov	x0, x20
  40f5b8:	blr	x8
  40f5bc:	cbz	w0, 40f620 <hash_find_slot@@Base+0xe4>
  40f5c0:	ldr	x8, [x19, #64]
  40f5c4:	add	x8, x8, #0x1
  40f5c8:	str	x8, [x19, #64]
  40f5cc:	cbnz	w25, 40f5e0 <hash_find_slot@@Base+0xa4>
  40f5d0:	ldr	x8, [x19, #16]
  40f5d4:	mov	x0, x20
  40f5d8:	blr	x8
  40f5dc:	orr	w25, w0, #0x1
  40f5e0:	ldr	w8, [x19, #32]
  40f5e4:	ldr	x9, [x19]
  40f5e8:	add	w10, w25, w23
  40f5ec:	sub	w8, w8, #0x1
  40f5f0:	and	w23, w8, w10
  40f5f4:	add	x21, x9, w23, uxtw #3
  40f5f8:	ldr	x1, [x21]
  40f5fc:	cbnz	x1, 40f59c <hash_find_slot@@Base+0x60>
  40f600:	b	40f618 <hash_find_slot@@Base+0xdc>
  40f604:	cmp	x22, #0x0
  40f608:	csel	x22, x21, x22, eq  // eq = none
  40f60c:	cbnz	w25, 40f5e0 <hash_find_slot@@Base+0xa4>
  40f610:	b	40f5d0 <hash_find_slot@@Base+0x94>
  40f614:	mov	x22, xzr
  40f618:	cmp	x22, #0x0
  40f61c:	csel	x21, x21, x22, eq  // eq = none
  40f620:	mov	x0, x21
  40f624:	ldp	x20, x19, [sp, #64]
  40f628:	ldp	x22, x21, [sp, #48]
  40f62c:	ldp	x24, x23, [sp, #32]
  40f630:	ldr	x25, [sp, #16]
  40f634:	ldp	x29, x30, [sp], #80
  40f638:	ret

000000000040f63c <hash_find_item@@Base>:
  40f63c:	stp	x29, x30, [sp, #-16]!
  40f640:	mov	x29, sp
  40f644:	bl	40f53c <hash_find_slot@@Base>
  40f648:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40f64c:	ldr	x8, [x0]
  40f650:	ldr	x9, [x9, #2344]
  40f654:	cmp	x8, x9
  40f658:	ccmp	x8, #0x0, #0x4, ne  // ne = any
  40f65c:	csel	x0, xzr, x8, eq  // eq = none
  40f660:	ldp	x29, x30, [sp], #16
  40f664:	ret

000000000040f668 <hash_insert_at@@Base>:
  40f668:	stp	x29, x30, [sp, #-64]!
  40f66c:	stp	x24, x23, [sp, #16]
  40f670:	stp	x22, x21, [sp, #32]
  40f674:	stp	x20, x19, [sp, #48]
  40f678:	ldr	x8, [x2]
  40f67c:	mov	x19, x1
  40f680:	mov	x20, x0
  40f684:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  40f688:	mov	x29, sp
  40f68c:	cbz	x8, 40f69c <hash_insert_at@@Base+0x34>
  40f690:	ldr	x9, [x22, #2344]
  40f694:	cmp	x8, x9
  40f698:	b.ne	40f6b8 <hash_insert_at@@Base+0x50>  // b.any
  40f69c:	ldr	x9, [x20, #48]
  40f6a0:	add	x9, x9, #0x1
  40f6a4:	str	x9, [x20, #48]
  40f6a8:	cbnz	x8, 40f6b8 <hash_insert_at@@Base+0x50>
  40f6ac:	ldr	x8, [x20, #56]
  40f6b0:	sub	x8, x8, #0x1
  40f6b4:	str	x8, [x20, #56]
  40f6b8:	str	x19, [x2]
  40f6bc:	ldp	x23, x8, [x20, #32]
  40f6c0:	ldr	x9, [x20, #56]
  40f6c4:	sub	x10, x23, x8
  40f6c8:	cmp	x9, x10
  40f6cc:	b.cs	40f780 <hash_insert_at@@Base+0x118>  // b.hs, b.nlast
  40f6d0:	ldr	x9, [x20, #48]
  40f6d4:	ldr	x21, [x20]
  40f6d8:	cmp	x9, x8
  40f6dc:	mov	x8, x23
  40f6e0:	b.cc	40f6f4 <hash_insert_at@@Base+0x8c>  // b.lo, b.ul, b.last
  40f6e4:	lsl	x8, x23, #1
  40f6e8:	ubfx	x9, x23, #3, #60
  40f6ec:	sub	x9, x8, x9
  40f6f0:	stp	x8, x9, [x20, #32]
  40f6f4:	ldr	w9, [x20, #80]
  40f6f8:	lsl	x0, x8, #3
  40f6fc:	add	w9, w9, #0x1
  40f700:	str	w9, [x20, #80]
  40f704:	bl	4178ac <xcalloc@@Base>
  40f708:	cmp	x23, #0x1
  40f70c:	str	x0, [x20]
  40f710:	b.lt	40f74c <hash_insert_at@@Base+0xe4>  // b.tstop
  40f714:	add	x23, x21, x23, lsl #3
  40f718:	mov	x24, x21
  40f71c:	ldr	x1, [x24]
  40f720:	cbz	x1, 40f740 <hash_insert_at@@Base+0xd8>
  40f724:	ldr	x8, [x22, #2344]
  40f728:	cmp	x1, x8
  40f72c:	b.eq	40f740 <hash_insert_at@@Base+0xd8>  // b.none
  40f730:	mov	x0, x20
  40f734:	bl	40f53c <hash_find_slot@@Base>
  40f738:	ldr	x8, [x24]
  40f73c:	str	x8, [x0]
  40f740:	add	x24, x24, #0x8
  40f744:	cmp	x24, x23
  40f748:	b.cc	40f71c <hash_insert_at@@Base+0xb4>  // b.lo, b.ul, b.last
  40f74c:	ldr	x8, [x20, #32]
  40f750:	ldr	x9, [x20, #48]
  40f754:	mov	x0, x21
  40f758:	sub	x8, x8, x9
  40f75c:	str	x8, [x20, #56]
  40f760:	bl	406cb0 <free@plt>
  40f764:	mov	x0, x20
  40f768:	mov	x1, x19
  40f76c:	ldp	x20, x19, [sp, #48]
  40f770:	ldp	x22, x21, [sp, #32]
  40f774:	ldp	x24, x23, [sp, #16]
  40f778:	ldp	x29, x30, [sp], #64
  40f77c:	b	40f53c <hash_find_slot@@Base>
  40f780:	ldp	x20, x19, [sp, #48]
  40f784:	ldp	x22, x21, [sp, #32]
  40f788:	ldp	x24, x23, [sp, #16]
  40f78c:	mov	x0, x2
  40f790:	ldp	x29, x30, [sp], #64
  40f794:	ret

000000000040f798 <hash_delete@@Base>:
  40f798:	stp	x29, x30, [sp, #-32]!
  40f79c:	str	x19, [sp, #16]
  40f7a0:	mov	x29, sp
  40f7a4:	mov	x19, x0
  40f7a8:	bl	40f53c <hash_find_slot@@Base>
  40f7ac:	mov	x8, x0
  40f7b0:	ldr	x0, [x0]
  40f7b4:	cbz	x0, 40f7e0 <hash_delete@@Base+0x48>
  40f7b8:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40f7bc:	ldr	x9, [x9, #2344]
  40f7c0:	cmp	x0, x9
  40f7c4:	b.eq	40f7dc <hash_delete@@Base+0x44>  // b.none
  40f7c8:	str	x9, [x8]
  40f7cc:	ldr	x8, [x19, #48]
  40f7d0:	sub	x8, x8, #0x1
  40f7d4:	str	x8, [x19, #48]
  40f7d8:	b	40f7e0 <hash_delete@@Base+0x48>
  40f7dc:	mov	x0, xzr
  40f7e0:	ldr	x19, [sp, #16]
  40f7e4:	ldp	x29, x30, [sp], #32
  40f7e8:	ret

000000000040f7ec <hash_delete_at@@Base>:
  40f7ec:	ldr	x8, [x1]
  40f7f0:	cbz	x8, 40f81c <hash_delete_at@@Base+0x30>
  40f7f4:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  40f7f8:	ldr	x9, [x9, #2344]
  40f7fc:	cmp	x8, x9
  40f800:	b.eq	40f818 <hash_delete_at@@Base+0x2c>  // b.none
  40f804:	str	x9, [x1]
  40f808:	ldr	x9, [x0, #48]
  40f80c:	sub	x9, x9, #0x1
  40f810:	str	x9, [x0, #48]
  40f814:	b	40f81c <hash_delete_at@@Base+0x30>
  40f818:	mov	x8, xzr
  40f81c:	mov	x0, x8
  40f820:	ret

000000000040f824 <hash_free_items@@Base>:
  40f824:	stp	x29, x30, [sp, #-48]!
  40f828:	stp	x22, x21, [sp, #16]
  40f82c:	stp	x20, x19, [sp, #32]
  40f830:	ldr	x8, [x0, #32]
  40f834:	mov	x19, x0
  40f838:	mov	x29, sp
  40f83c:	cmp	x8, #0x1
  40f840:	b.lt	40f878 <hash_free_items@@Base+0x54>  // b.tstop
  40f844:	ldr	x20, [x19]
  40f848:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  40f84c:	add	x21, x20, x8, lsl #3
  40f850:	ldr	x0, [x20]
  40f854:	cbz	x0, 40f868 <hash_free_items@@Base+0x44>
  40f858:	ldr	x8, [x22, #2344]
  40f85c:	cmp	x0, x8
  40f860:	b.eq	40f868 <hash_free_items@@Base+0x44>  // b.none
  40f864:	bl	406cb0 <free@plt>
  40f868:	str	xzr, [x20], #8
  40f86c:	cmp	x20, x21
  40f870:	b.cc	40f850 <hash_free_items@@Base+0x2c>  // b.lo, b.ul, b.last
  40f874:	ldr	x8, [x19, #32]
  40f878:	stp	xzr, x8, [x19, #48]
  40f87c:	ldp	x20, x19, [sp, #32]
  40f880:	ldp	x22, x21, [sp, #16]
  40f884:	ldp	x29, x30, [sp], #48
  40f888:	ret

000000000040f88c <hash_delete_items@@Base>:
  40f88c:	stp	x29, x30, [sp, #-32]!
  40f890:	stp	x20, x19, [sp, #16]
  40f894:	ldr	x20, [x0, #32]
  40f898:	mov	x19, x0
  40f89c:	mov	x29, sp
  40f8a0:	cmp	x20, #0x1
  40f8a4:	b.lt	40f8d4 <hash_delete_items@@Base+0x48>  // b.tstop
  40f8a8:	ldr	x0, [x19]
  40f8ac:	mov	w1, wzr
  40f8b0:	add	x8, x0, x20, lsl #3
  40f8b4:	add	x9, x0, #0x8
  40f8b8:	cmp	x8, x9
  40f8bc:	csel	x8, x8, x9, hi  // hi = pmore
  40f8c0:	mvn	x9, x0
  40f8c4:	add	x8, x8, x9
  40f8c8:	add	x8, x8, #0x8
  40f8cc:	and	x2, x8, #0xfffffffffffffff8
  40f8d0:	bl	406a70 <memset@plt>
  40f8d4:	stp	xzr, xzr, [x19, #64]
  40f8d8:	str	wzr, [x19, #80]
  40f8dc:	stp	xzr, x20, [x19, #48]
  40f8e0:	ldp	x20, x19, [sp, #16]
  40f8e4:	ldp	x29, x30, [sp], #32
  40f8e8:	ret

000000000040f8ec <hash_free@@Base>:
  40f8ec:	stp	x29, x30, [sp, #-32]!
  40f8f0:	str	x19, [sp, #16]
  40f8f4:	mov	x19, x0
  40f8f8:	mov	x29, sp
  40f8fc:	cbz	w1, 40f90c <hash_free@@Base+0x20>
  40f900:	mov	x0, x19
  40f904:	bl	40f824 <hash_free_items@@Base>
  40f908:	b	40f914 <hash_free@@Base+0x28>
  40f90c:	ldr	x8, [x19, #32]
  40f910:	stp	xzr, x8, [x19, #48]
  40f914:	ldr	x0, [x19]
  40f918:	bl	406cb0 <free@plt>
  40f91c:	str	xzr, [x19]
  40f920:	str	xzr, [x19, #40]
  40f924:	ldr	x19, [sp, #16]
  40f928:	ldp	x29, x30, [sp], #32
  40f92c:	ret

000000000040f930 <hash_map@@Base>:
  40f930:	stp	x29, x30, [sp, #-48]!
  40f934:	stp	x22, x21, [sp, #16]
  40f938:	stp	x20, x19, [sp, #32]
  40f93c:	ldr	x8, [x0, #32]
  40f940:	mov	x29, sp
  40f944:	cmp	x8, #0x1
  40f948:	b.lt	40f980 <hash_map@@Base+0x50>  // b.tstop
  40f94c:	ldr	x20, [x0]
  40f950:	mov	x19, x1
  40f954:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  40f958:	add	x21, x20, x8, lsl #3
  40f95c:	ldr	x0, [x20]
  40f960:	cbz	x0, 40f974 <hash_map@@Base+0x44>
  40f964:	ldr	x8, [x22, #2344]
  40f968:	cmp	x0, x8
  40f96c:	b.eq	40f974 <hash_map@@Base+0x44>  // b.none
  40f970:	blr	x19
  40f974:	add	x20, x20, #0x8
  40f978:	cmp	x20, x21
  40f97c:	b.cc	40f95c <hash_map@@Base+0x2c>  // b.lo, b.ul, b.last
  40f980:	ldp	x20, x19, [sp, #32]
  40f984:	ldp	x22, x21, [sp, #16]
  40f988:	ldp	x29, x30, [sp], #48
  40f98c:	ret

000000000040f990 <hash_map_arg@@Base>:
  40f990:	stp	x29, x30, [sp, #-64]!
  40f994:	stp	x22, x21, [sp, #32]
  40f998:	stp	x20, x19, [sp, #48]
  40f99c:	ldr	x8, [x0, #32]
  40f9a0:	str	x23, [sp, #16]
  40f9a4:	mov	x29, sp
  40f9a8:	cmp	x8, #0x1
  40f9ac:	b.lt	40f9ec <hash_map_arg@@Base+0x5c>  // b.tstop
  40f9b0:	ldr	x21, [x0]
  40f9b4:	mov	x19, x2
  40f9b8:	mov	x20, x1
  40f9bc:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  40f9c0:	add	x22, x21, x8, lsl #3
  40f9c4:	ldr	x0, [x21]
  40f9c8:	cbz	x0, 40f9e0 <hash_map_arg@@Base+0x50>
  40f9cc:	ldr	x8, [x23, #2344]
  40f9d0:	cmp	x0, x8
  40f9d4:	b.eq	40f9e0 <hash_map_arg@@Base+0x50>  // b.none
  40f9d8:	mov	x1, x19
  40f9dc:	blr	x20
  40f9e0:	add	x21, x21, #0x8
  40f9e4:	cmp	x21, x22
  40f9e8:	b.cc	40f9c4 <hash_map_arg@@Base+0x34>  // b.lo, b.ul, b.last
  40f9ec:	ldp	x20, x19, [sp, #48]
  40f9f0:	ldp	x22, x21, [sp, #32]
  40f9f4:	ldr	x23, [sp, #16]
  40f9f8:	ldp	x29, x30, [sp], #64
  40f9fc:	ret

000000000040fa00 <hash_print_stats@@Base>:
  40fa00:	stp	x29, x30, [sp, #-32]!
  40fa04:	stp	x20, x19, [sp, #16]
  40fa08:	mov	x19, x1
  40fa0c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40fa10:	mov	x20, x0
  40fa14:	add	x1, x1, #0x13c
  40fa18:	mov	w2, #0x5                   	// #5
  40fa1c:	mov	x0, xzr
  40fa20:	mov	x29, sp
  40fa24:	bl	406e10 <dcgettext@plt>
  40fa28:	ldr	x2, [x20, #48]
  40fa2c:	ldr	x3, [x20, #32]
  40fa30:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40fa34:	fmov	d0, x8
  40fa38:	ucvtf	d1, x2
  40fa3c:	fmul	d0, d1, d0
  40fa40:	ucvtf	d1, x3
  40fa44:	mov	x1, x0
  40fa48:	fdiv	d0, d0, d1
  40fa4c:	mov	x0, x19
  40fa50:	bl	406f20 <fprintf@plt>
  40fa54:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40fa58:	add	x1, x1, #0x152
  40fa5c:	mov	w2, #0x5                   	// #5
  40fa60:	mov	x0, xzr
  40fa64:	bl	406e10 <dcgettext@plt>
  40fa68:	ldr	w2, [x20, #80]
  40fa6c:	mov	x1, x0
  40fa70:	mov	x0, x19
  40fa74:	bl	406f20 <fprintf@plt>
  40fa78:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40fa7c:	add	x1, x1, #0x15e
  40fa80:	mov	w2, #0x5                   	// #5
  40fa84:	mov	x0, xzr
  40fa88:	bl	406e10 <dcgettext@plt>
  40fa8c:	ldp	x2, x3, [x20, #64]
  40fa90:	mov	x1, x0
  40fa94:	cbz	x3, 40fab4 <hash_print_stats@@Base+0xb4>
  40fa98:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  40fa9c:	ucvtf	d0, x2
  40faa0:	fmov	d1, x8
  40faa4:	fmul	d0, d0, d1
  40faa8:	ucvtf	d1, x3
  40faac:	fdiv	d0, d0, d1
  40fab0:	b	40fab8 <hash_print_stats@@Base+0xb8>
  40fab4:	fmov	d0, xzr
  40fab8:	mov	x0, x19
  40fabc:	ldp	x20, x19, [sp, #16]
  40fac0:	ldp	x29, x30, [sp], #32
  40fac4:	b	406f20 <fprintf@plt>

000000000040fac8 <hash_dump@@Base>:
  40fac8:	stp	x29, x30, [sp, #-48]!
  40facc:	stp	x22, x21, [sp, #16]
  40fad0:	stp	x20, x19, [sp, #32]
  40fad4:	ldr	x8, [x0]
  40fad8:	ldr	x9, [x0, #32]
  40fadc:	mov	x19, x2
  40fae0:	mov	x20, x1
  40fae4:	mov	x21, x0
  40fae8:	add	x22, x8, x9, lsl #3
  40faec:	mov	x29, sp
  40faf0:	cbnz	x1, 40fb0c <hash_dump@@Base+0x44>
  40faf4:	ldr	x8, [x21, #48]
  40faf8:	lsl	x8, x8, #3
  40fafc:	add	x0, x8, #0x8
  40fb00:	bl	417888 <xmalloc@@Base>
  40fb04:	ldr	x8, [x21]
  40fb08:	mov	x20, x0
  40fb0c:	cmp	x8, x22
  40fb10:	mov	x9, x20
  40fb14:	b.cs	40fb44 <hash_dump@@Base+0x7c>  // b.hs, b.nlast
  40fb18:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  40fb1c:	mov	x9, x20
  40fb20:	ldr	x11, [x8]
  40fb24:	cbz	x11, 40fb38 <hash_dump@@Base+0x70>
  40fb28:	ldr	x12, [x10, #2344]
  40fb2c:	cmp	x11, x12
  40fb30:	b.eq	40fb38 <hash_dump@@Base+0x70>  // b.none
  40fb34:	str	x11, [x9], #8
  40fb38:	add	x8, x8, #0x8
  40fb3c:	cmp	x8, x22
  40fb40:	b.cc	40fb20 <hash_dump@@Base+0x58>  // b.lo, b.ul, b.last
  40fb44:	str	xzr, [x9]
  40fb48:	cbz	x19, 40fb60 <hash_dump@@Base+0x98>
  40fb4c:	ldr	x1, [x21, #48]
  40fb50:	mov	w2, #0x8                   	// #8
  40fb54:	mov	x0, x20
  40fb58:	mov	x3, x19
  40fb5c:	bl	4068a0 <qsort@plt>
  40fb60:	mov	x0, x20
  40fb64:	ldp	x20, x19, [sp, #32]
  40fb68:	ldp	x22, x21, [sp, #16]
  40fb6c:	ldp	x29, x30, [sp], #48
  40fb70:	ret

000000000040fb74 <jhash@@Base>:
  40fb74:	mov	w8, #0xbeef                	// #48879
  40fb78:	movk	w8, #0xdead, lsl #16
  40fb7c:	cmp	w1, #0xd
  40fb80:	add	w9, w1, w8
  40fb84:	b.lt	40fc04 <jhash@@Base+0x90>  // b.tstop
  40fb88:	mov	w10, w9
  40fb8c:	mov	w8, w9
  40fb90:	ldp	w11, w12, [x0]
  40fb94:	cmp	w1, #0x18
  40fb98:	sub	w1, w1, #0xc
  40fb9c:	add	w9, w11, w9
  40fba0:	ldr	w11, [x0, #8]
  40fba4:	add	w10, w12, w10
  40fba8:	add	x0, x0, #0xc
  40fbac:	add	w8, w11, w8
  40fbb0:	sub	w9, w9, w8
  40fbb4:	add	w11, w8, w10
  40fbb8:	eor	w8, w9, w8, ror #28
  40fbbc:	sub	w9, w10, w8
  40fbc0:	add	w10, w8, w11
  40fbc4:	eor	w8, w9, w8, ror #26
  40fbc8:	sub	w9, w11, w8
  40fbcc:	add	w11, w8, w10
  40fbd0:	eor	w8, w9, w8, ror #24
  40fbd4:	sub	w9, w10, w8
  40fbd8:	add	w10, w8, w11
  40fbdc:	eor	w8, w9, w8, ror #16
  40fbe0:	sub	w11, w11, w8
  40fbe4:	add	w9, w8, w10
  40fbe8:	eor	w8, w11, w8, ror #13
  40fbec:	sub	w11, w10, w8
  40fbf0:	add	w10, w8, w9
  40fbf4:	eor	w8, w11, w8, ror #28
  40fbf8:	b.gt	40fb90 <jhash@@Base+0x1c>
  40fbfc:	cbnz	w1, 40fc10 <jhash@@Base+0x9c>
  40fc00:	b	40fcc4 <jhash@@Base+0x150>
  40fc04:	mov	w8, w9
  40fc08:	mov	w10, w9
  40fc0c:	cbz	w1, 40fcc4 <jhash@@Base+0x150>
  40fc10:	cmp	w1, #0x9
  40fc14:	b.lt	40fc28 <jhash@@Base+0xb4>  // b.tstop
  40fc18:	ldr	w11, [x0], #4
  40fc1c:	sub	w1, w1, #0x4
  40fc20:	add	w9, w11, w9
  40fc24:	b	40fc30 <jhash@@Base+0xbc>
  40fc28:	cmp	w1, #0x5
  40fc2c:	b.lt	40fc3c <jhash@@Base+0xc8>  // b.tstop
  40fc30:	ldr	w11, [x0], #4
  40fc34:	sub	w1, w1, #0x4
  40fc38:	add	w10, w11, w10
  40fc3c:	cmp	w1, #0x4
  40fc40:	b.ne	40fc50 <jhash@@Base+0xdc>  // b.any
  40fc44:	ldrb	w11, [x0, #3]
  40fc48:	add	w8, w8, w11, lsl #24
  40fc4c:	b	40fc58 <jhash@@Base+0xe4>
  40fc50:	cmp	w1, #0x3
  40fc54:	b.lt	40fccc <jhash@@Base+0x158>  // b.tstop
  40fc58:	ldrb	w11, [x0, #2]
  40fc5c:	add	w8, w8, w11, lsl #16
  40fc60:	ldrb	w11, [x0, #1]
  40fc64:	add	w8, w8, w11, lsl #8
  40fc68:	ldrb	w11, [x0]
  40fc6c:	add	w8, w8, w11
  40fc70:	ror	w11, w10, #18
  40fc74:	eor	w8, w8, w10
  40fc78:	sub	w8, w8, w11
  40fc7c:	eor	w9, w8, w9
  40fc80:	ror	w11, w8, #21
  40fc84:	sub	w9, w9, w11
  40fc88:	eor	w10, w9, w10
  40fc8c:	ror	w11, w9, #7
  40fc90:	sub	w10, w10, w11
  40fc94:	eor	w8, w10, w8
  40fc98:	ror	w11, w10, #16
  40fc9c:	sub	w8, w8, w11
  40fca0:	eor	w9, w8, w9
  40fca4:	ror	w11, w8, #28
  40fca8:	sub	w9, w9, w11
  40fcac:	eor	w10, w9, w10
  40fcb0:	ror	w9, w9, #18
  40fcb4:	sub	w9, w10, w9
  40fcb8:	eor	w8, w9, w8
  40fcbc:	ror	w9, w9, #8
  40fcc0:	sub	w8, w8, w9
  40fcc4:	mov	w0, w8
  40fcc8:	ret
  40fccc:	cmp	w1, #0x2
  40fcd0:	b.eq	40fc60 <jhash@@Base+0xec>  // b.none
  40fcd4:	b	40fc68 <jhash@@Base+0xf4>

000000000040fcd8 <jhash_string@@Base>:
  40fcd8:	sub	sp, sp, #0x70
  40fcdc:	stp	x22, x21, [sp, #80]
  40fce0:	mov	w22, #0xfeff                	// #65279
  40fce4:	mov	w21, #0xbeef                	// #48879
  40fce8:	stp	x29, x30, [sp, #16]
  40fcec:	stp	x28, x27, [sp, #32]
  40fcf0:	stp	x26, x25, [sp, #48]
  40fcf4:	stp	x24, x23, [sp, #64]
  40fcf8:	stp	x20, x19, [sp, #96]
  40fcfc:	add	x29, sp, #0x10
  40fd00:	mov	x19, x0
  40fd04:	movk	w22, #0xfefe, lsl #16
  40fd08:	movk	w21, #0xdead, lsl #16
  40fd0c:	bl	406790 <strlen@plt>
  40fd10:	cmp	x0, #0x4
  40fd14:	mov	w8, #0x4                   	// #4
  40fd18:	mov	x20, x0
  40fd1c:	csel	x2, x0, x8, cc  // cc = lo, ul, last
  40fd20:	sub	x0, x29, #0x4
  40fd24:	mov	x1, x19
  40fd28:	stur	wzr, [x29, #-4]
  40fd2c:	bl	406750 <memcpy@plt>
  40fd30:	ldur	w9, [x29, #-4]
  40fd34:	add	w8, w9, w22
  40fd38:	bic	w8, w8, w9
  40fd3c:	tst	w8, #0x80808080
  40fd40:	b.eq	40fd78 <jhash_string@@Base+0xa0>  // b.none
  40fd44:	mov	w23, #0xbeef                	// #48879
  40fd48:	mov	w22, #0xbeef                	// #48879
  40fd4c:	movk	w23, #0xdead, lsl #16
  40fd50:	movk	w22, #0xdead, lsl #16
  40fd54:	mov	x8, x19
  40fd58:	ands	w10, w9, #0xff
  40fd5c:	b.eq	40ff44 <jhash_string@@Base+0x26c>  // b.none
  40fd60:	tst	w9, #0xff00
  40fd64:	b.eq	40fec0 <jhash_string@@Base+0x1e8>  // b.none
  40fd68:	tst	w9, #0xff0000
  40fd6c:	b.eq	40ff20 <jhash_string@@Base+0x248>  // b.none
  40fd70:	add	w21, w9, w21
  40fd74:	b	40ff44 <jhash_string@@Base+0x26c>
  40fd78:	mov	w22, #0xbeef                	// #48879
  40fd7c:	mov	w23, #0xbeef                	// #48879
  40fd80:	mov	w28, #0xfeff                	// #65279
  40fd84:	mov	x25, xzr
  40fd88:	mov	w27, #0xc                   	// #12
  40fd8c:	movk	w22, #0xdead, lsl #16
  40fd90:	movk	w23, #0xdead, lsl #16
  40fd94:	movk	w28, #0xfefe, lsl #16
  40fd98:	add	x24, x20, x25
  40fd9c:	sub	x8, x24, #0x4
  40fda0:	add	w21, w9, w21
  40fda4:	mov	x26, x19
  40fda8:	add	x19, x19, x27
  40fdac:	cmp	x8, #0x4
  40fdb0:	mov	w9, #0x4                   	// #4
  40fdb4:	sub	x1, x19, #0x8
  40fdb8:	csel	x2, x8, x9, cc  // cc = lo, ul, last
  40fdbc:	add	x0, sp, #0x8
  40fdc0:	str	wzr, [sp, #8]
  40fdc4:	bl	406750 <memcpy@plt>
  40fdc8:	ldr	w9, [sp, #8]
  40fdcc:	mov	w10, #0x80808080            	// #-2139062144
  40fdd0:	add	w8, w9, w28
  40fdd4:	bic	w10, w10, w9
  40fdd8:	tst	w10, w8
  40fddc:	b.ne	40fec8 <jhash_string@@Base+0x1f0>  // b.any
  40fde0:	sub	x8, x24, #0x8
  40fde4:	add	w22, w9, w22
  40fde8:	cmp	x8, #0x4
  40fdec:	mov	w9, #0x4                   	// #4
  40fdf0:	sub	x1, x19, #0x4
  40fdf4:	csel	x2, x8, x9, cc  // cc = lo, ul, last
  40fdf8:	add	x0, sp, #0x4
  40fdfc:	str	wzr, [sp, #4]
  40fe00:	bl	406750 <memcpy@plt>
  40fe04:	ldr	w9, [sp, #4]
  40fe08:	mov	w10, #0x80808080            	// #-2139062144
  40fe0c:	mov	w24, #0xfeff                	// #65279
  40fe10:	movk	w24, #0xfefe, lsl #16
  40fe14:	add	w8, w9, w28
  40fe18:	bic	w10, w10, w9
  40fe1c:	tst	w10, w8
  40fe20:	b.ne	40fef4 <jhash_string@@Base+0x21c>  // b.any
  40fe24:	add	w8, w9, w23
  40fe28:	sub	w10, w21, w8
  40fe2c:	eor	w10, w10, w8, ror #28
  40fe30:	sub	w11, w22, w10
  40fe34:	add	w8, w8, w22
  40fe38:	eor	w11, w11, w10, ror #26
  40fe3c:	add	w10, w10, w8
  40fe40:	sub	w8, w8, w11
  40fe44:	eor	w8, w8, w11, ror #24
  40fe48:	add	w11, w11, w10
  40fe4c:	sub	w10, w10, w8
  40fe50:	eor	w10, w10, w8, ror #16
  40fe54:	add	w8, w8, w11
  40fe58:	sub	w11, w11, w10
  40fe5c:	add	x9, x20, x25
  40fe60:	eor	w11, w11, w10, ror #13
  40fe64:	sub	x9, x9, #0xc
  40fe68:	add	w21, w10, w8
  40fe6c:	sub	w8, w8, w11
  40fe70:	cmp	x9, #0x4
  40fe74:	eor	w23, w8, w11, ror #28
  40fe78:	mov	w8, #0x4                   	// #4
  40fe7c:	add	x1, x26, x27
  40fe80:	csel	x2, x9, x8, cc  // cc = lo, ul, last
  40fe84:	sub	x0, x29, #0x4
  40fe88:	mov	x19, x26
  40fe8c:	stur	wzr, [x29, #-4]
  40fe90:	add	w22, w11, w21
  40fe94:	bl	406750 <memcpy@plt>
  40fe98:	ldur	w9, [x29, #-4]
  40fe9c:	mov	w10, #0x80808080            	// #-2139062144
  40fea0:	sub	x25, x25, #0xc
  40fea4:	add	x27, x27, #0xc
  40fea8:	add	w8, w9, w24
  40feac:	bic	w10, w10, w9
  40feb0:	and	w8, w10, w8
  40feb4:	cbz	w8, 40fd98 <jhash_string@@Base+0xc0>
  40feb8:	sub	x8, x19, x25
  40febc:	b	40fd58 <jhash_string@@Base+0x80>
  40fec0:	add	w21, w10, w21
  40fec4:	b	40ff44 <jhash_string@@Base+0x26c>
  40fec8:	sub	x8, x26, x25
  40fecc:	and	w10, w9, #0xff
  40fed0:	mov	x19, x26
  40fed4:	add	x8, x8, #0x4
  40fed8:	cbz	w10, 40ff44 <jhash_string@@Base+0x26c>
  40fedc:	tst	w9, #0xff00
  40fee0:	b.eq	40ff28 <jhash_string@@Base+0x250>  // b.none
  40fee4:	tst	w9, #0xff0000
  40fee8:	b.eq	40ff38 <jhash_string@@Base+0x260>  // b.none
  40feec:	add	w22, w9, w22
  40fef0:	b	40ff44 <jhash_string@@Base+0x26c>
  40fef4:	sub	x8, x26, x25
  40fef8:	and	w10, w9, #0xff
  40fefc:	mov	x19, x26
  40ff00:	add	x8, x8, #0x8
  40ff04:	cbz	w10, 40ff44 <jhash_string@@Base+0x26c>
  40ff08:	tst	w9, #0xff00
  40ff0c:	b.eq	40ff30 <jhash_string@@Base+0x258>  // b.none
  40ff10:	tst	w9, #0xff0000
  40ff14:	b.eq	40ff40 <jhash_string@@Base+0x268>  // b.none
  40ff18:	add	w23, w9, w23
  40ff1c:	b	40ff44 <jhash_string@@Base+0x26c>
  40ff20:	add	w21, w21, w9, uxth
  40ff24:	b	40ff44 <jhash_string@@Base+0x26c>
  40ff28:	add	w22, w10, w22
  40ff2c:	b	40ff44 <jhash_string@@Base+0x26c>
  40ff30:	add	w23, w10, w23
  40ff34:	b	40ff44 <jhash_string@@Base+0x26c>
  40ff38:	add	w22, w22, w9, uxth
  40ff3c:	b	40ff44 <jhash_string@@Base+0x26c>
  40ff40:	add	w23, w23, w9, uxth
  40ff44:	eor	w9, w22, w23
  40ff48:	ror	w10, w22, #18
  40ff4c:	sub	w9, w9, w10
  40ff50:	eor	w10, w9, w21
  40ff54:	ror	w11, w9, #21
  40ff58:	sub	w10, w10, w11
  40ff5c:	eor	w11, w10, w22
  40ff60:	ror	w12, w10, #7
  40ff64:	sub	w11, w11, w12
  40ff68:	eor	w9, w11, w9
  40ff6c:	ror	w12, w11, #16
  40ff70:	sub	w9, w9, w12
  40ff74:	eor	w10, w9, w10
  40ff78:	ror	w12, w9, #28
  40ff7c:	sub	w10, w10, w12
  40ff80:	eor	w11, w10, w11
  40ff84:	ror	w10, w10, #18
  40ff88:	sub	w10, w11, w10
  40ff8c:	sub	w8, w8, w19
  40ff90:	ldp	x20, x19, [sp, #96]
  40ff94:	ldp	x22, x21, [sp, #80]
  40ff98:	ldp	x24, x23, [sp, #64]
  40ff9c:	ldp	x26, x25, [sp, #48]
  40ffa0:	ldp	x28, x27, [sp, #32]
  40ffa4:	ldp	x29, x30, [sp, #16]
  40ffa8:	eor	w9, w10, w9
  40ffac:	ror	w10, w10, #8
  40ffb0:	add	w8, w9, w8
  40ffb4:	sub	w0, w8, w10
  40ffb8:	add	sp, sp, #0x70
  40ffbc:	ret

000000000040ffc0 <try_implicit_rule@@Base>:
  40ffc0:	stp	x29, x30, [sp, #-48]!
  40ffc4:	str	x21, [sp, #16]
  40ffc8:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  40ffcc:	ldrb	w8, [x21, #3236]
  40ffd0:	stp	x20, x19, [sp, #32]
  40ffd4:	mov	w19, w1
  40ffd8:	mov	x20, x0
  40ffdc:	mov	x29, sp
  40ffe0:	tbz	w8, #3, 410014 <try_implicit_rule@@Base+0x54>
  40ffe4:	mov	w0, w19
  40ffe8:	bl	4176ac <print_spaces@@Base>
  40ffec:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  40fff0:	add	x1, x1, #0x178
  40fff4:	mov	w2, #0x5                   	// #5
  40fff8:	mov	x0, xzr
  40fffc:	bl	406e10 <dcgettext@plt>
  410000:	ldr	x1, [x20]
  410004:	bl	406ea0 <printf@plt>
  410008:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41000c:	ldr	x0, [x8, #2512]
  410010:	bl	406d40 <fflush@plt>
  410014:	mov	x0, x20
  410018:	mov	w1, wzr
  41001c:	mov	w2, w19
  410020:	mov	w3, wzr
  410024:	bl	4100ac <try_implicit_rule@@Base+0xec>
  410028:	cbz	w0, 410034 <try_implicit_rule@@Base+0x74>
  41002c:	mov	w21, #0x1                   	// #1
  410030:	b	410098 <try_implicit_rule@@Base+0xd8>
  410034:	ldr	x0, [x20]
  410038:	bl	40706c <ar_name@@Base>
  41003c:	cbz	w0, 410094 <try_implicit_rule@@Base+0xd4>
  410040:	ldrb	w8, [x21, #3236]
  410044:	tbz	w8, #3, 410078 <try_implicit_rule@@Base+0xb8>
  410048:	mov	w0, w19
  41004c:	bl	4176ac <print_spaces@@Base>
  410050:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  410054:	add	x1, x1, #0x1a0
  410058:	mov	w2, #0x5                   	// #5
  41005c:	mov	x0, xzr
  410060:	bl	406e10 <dcgettext@plt>
  410064:	ldr	x1, [x20]
  410068:	bl	406ea0 <printf@plt>
  41006c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410070:	ldr	x0, [x8, #2512]
  410074:	bl	406d40 <fflush@plt>
  410078:	mov	w1, #0x1                   	// #1
  41007c:	mov	x0, x20
  410080:	mov	w2, w19
  410084:	mov	w3, wzr
  410088:	mov	w21, #0x1                   	// #1
  41008c:	bl	4100ac <try_implicit_rule@@Base+0xec>
  410090:	cbnz	w0, 410098 <try_implicit_rule@@Base+0xd8>
  410094:	mov	w21, wzr
  410098:	mov	w0, w21
  41009c:	ldp	x20, x19, [sp, #32]
  4100a0:	ldr	x21, [sp, #16]
  4100a4:	ldp	x29, x30, [sp], #48
  4100a8:	ret
  4100ac:	stp	x29, x30, [sp, #-96]!
  4100b0:	stp	x28, x27, [sp, #16]
  4100b4:	stp	x26, x25, [sp, #32]
  4100b8:	stp	x24, x23, [sp, #48]
  4100bc:	stp	x22, x21, [sp, #64]
  4100c0:	stp	x20, x19, [sp, #80]
  4100c4:	mov	x29, sp
  4100c8:	sub	sp, sp, #0x1, lsl #12
  4100cc:	sub	sp, sp, #0x110
  4100d0:	mov	x20, x0
  4100d4:	ldr	x0, [x0]
  4100d8:	mov	x19, sp
  4100dc:	mov	w21, w1
  4100e0:	str	w3, [x19, #212]
  4100e4:	str	w2, [x19, #224]
  4100e8:	cbz	w1, 4100f4 <try_implicit_rule@@Base+0x134>
  4100ec:	mov	w1, #0x28                  	// #40
  4100f0:	bl	406cd0 <strchr@plt>
  4100f4:	mov	x26, x0
  4100f8:	bl	406790 <strlen@plt>
  4100fc:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  410100:	ldr	w8, [x8, #268]
  410104:	mov	x23, x0
  410108:	lsl	x0, x8, #5
  41010c:	str	x8, [x19, #136]
  410110:	bl	417888 <xmalloc@@Base>
  410114:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  410118:	ldr	x8, [x8, #256]
  41011c:	mov	x9, sp
  410120:	mov	x22, x0
  410124:	str	x23, [x19, #216]
  410128:	add	x8, x23, x8
  41012c:	add	x8, x8, #0x13
  410130:	and	x8, x8, #0xfffffffffffffff0
  410134:	sub	x8, x9, x8
  410138:	str	x8, [x19, #120]
  41013c:	mov	sp, x8
  410140:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  410144:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  410148:	ldr	w8, [x8, #280]
  41014c:	ldr	w9, [x9, #264]
  410150:	mul	w8, w9, w8
  410154:	lsl	x0, x8, #5
  410158:	bl	417888 <xmalloc@@Base>
  41015c:	str	x0, [x19, #192]
  410160:	str	x20, [x19, #232]
  410164:	cbnz	w21, 410174 <try_implicit_rule@@Base+0x1b4>
  410168:	mov	x0, x26
  41016c:	bl	40706c <ar_name@@Base>
  410170:	cbz	w0, 411080 <try_implicit_rule@@Base+0x10c0>
  410174:	mov	x0, xzr
  410178:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41017c:	ldr	x24, [x8, #248]
  410180:	sub	x8, x0, x26
  410184:	cmp	x0, #0x0
  410188:	csinc	x8, xzr, x8, eq  // eq = none
  41018c:	str	x8, [x19, #152]
  410190:	cbz	x24, 410e48 <try_implicit_rule@@Base+0xe88>
  410194:	add	x8, x0, #0x1
  410198:	mov	w20, wzr
  41019c:	str	x8, [x19, #112]
  4101a0:	mvn	x8, x0
  4101a4:	str	wzr, [x19, #148]
  4101a8:	str	x0, [x19, #160]
  4101ac:	str	x8, [x19, #104]
  4101b0:	str	x26, [x19, #200]
  4101b4:	str	x22, [x19, #184]
  4101b8:	ldr	x9, [x24, #32]
  4101bc:	str	w20, [x19, #180]
  4101c0:	cbz	x9, 4101cc <try_implicit_rule@@Base+0x20c>
  4101c4:	ldr	x8, [x24, #40]
  4101c8:	cbz	x8, 41039c <try_implicit_rule@@Base+0x3dc>
  4101cc:	ldrb	w8, [x24, #51]
  4101d0:	cbz	w8, 410210 <try_implicit_rule@@Base+0x250>
  4101d4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4101d8:	ldrb	w8, [x8, #3236]
  4101dc:	tbz	w8, #3, 41039c <try_implicit_rule@@Base+0x3dc>
  4101e0:	ldr	w0, [x19, #224]
  4101e4:	bl	4176ac <print_spaces@@Base>
  4101e8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4101ec:	mov	w2, #0x5                   	// #5
  4101f0:	mov	x0, xzr
  4101f4:	add	x1, x1, #0x1d4
  4101f8:	bl	406e10 <dcgettext@plt>
  4101fc:	bl	406ea0 <printf@plt>
  410200:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410204:	ldr	x0, [x8, #2512]
  410208:	bl	406d40 <fflush@plt>
  41020c:	b	41039c <try_implicit_rule@@Base+0x3dc>
  410210:	ldrh	w10, [x24, #48]
  410214:	cbz	x10, 41039c <try_implicit_rule@@Base+0x3dc>
  410218:	ldr	x22, [x24, #8]
  41021c:	ldr	x25, [x24, #24]
  410220:	mov	x20, xzr
  410224:	str	x9, [x19, #128]
  410228:	str	x10, [x19, #168]
  41022c:	ldr	x28, [x22, x20, lsl #3]
  410230:	ldr	x27, [x25, x20, lsl #3]
  410234:	ldr	w8, [x19, #212]
  410238:	cbz	w8, 41024c <try_implicit_rule@@Base+0x28c>
  41023c:	ldrb	w8, [x28, #1]
  410240:	cbnz	w8, 41024c <try_implicit_rule@@Base+0x28c>
  410244:	ldrb	w8, [x24, #50]
  410248:	cbz	w8, 410384 <try_implicit_rule@@Base+0x3c4>
  41024c:	ldr	x8, [x24, #16]
  410250:	ldr	x9, [x19, #216]
  410254:	ldr	w8, [x8, x20, lsl #2]
  410258:	subs	x8, x9, x8
  41025c:	b.cc	410384 <try_implicit_rule@@Base+0x3c4>  // b.lo, b.ul, b.last
  410260:	add	x21, x8, #0x1
  410264:	ldr	x8, [x19, #160]
  410268:	mvn	x9, x28
  41026c:	add	x23, x27, x9
  410270:	add	x26, x26, x23
  410274:	cbz	x8, 410288 <try_implicit_rule@@Base+0x2c8>
  410278:	mov	w1, #0x2f                  	// #47
  41027c:	mov	x0, x28
  410280:	bl	406cd0 <strchr@plt>
  410284:	cbz	x0, 41034c <try_implicit_rule@@Base+0x38c>
  410288:	cmp	x23, #0x1
  41028c:	b.lt	4102a4 <try_implicit_rule@@Base+0x2e4>  // b.tstop
  410290:	ldr	x1, [x19, #200]
  410294:	mov	x0, x28
  410298:	mov	x2, x23
  41029c:	bl	406a30 <strncmp@plt>
  4102a0:	cbnz	w0, 41037c <try_implicit_rule@@Base+0x3bc>
  4102a4:	mov	w23, wzr
  4102a8:	ldrb	w8, [x27]
  4102ac:	ldrb	w9, [x26, x21]
  4102b0:	cmp	w8, w9
  4102b4:	b.ne	41037c <try_implicit_rule@@Base+0x3bc>  // b.any
  4102b8:	cbz	w8, 4102f0 <try_implicit_rule@@Base+0x330>
  4102bc:	add	x8, x21, x26
  4102c0:	cmp	x27, x8
  4102c4:	b.eq	4102f0 <try_implicit_rule@@Base+0x330>  // b.none
  4102c8:	add	x9, x27, #0x1
  4102cc:	ldrb	w9, [x9]
  4102d0:	ldrb	w10, [x8, #1]!
  4102d4:	cmp	w9, w10
  4102d8:	b.ne	41037c <try_implicit_rule@@Base+0x3bc>  // b.any
  4102dc:	cbz	w9, 4102f0 <try_implicit_rule@@Base+0x330>
  4102e0:	add	x0, x27, #0x2
  4102e4:	add	x1, x8, #0x1
  4102e8:	bl	406c70 <strcmp@plt>
  4102ec:	cbnz	w0, 41037c <try_implicit_rule@@Base+0x3bc>
  4102f0:	ldrb	w8, [x28, #1]
  4102f4:	cmp	w8, #0x0
  4102f8:	ldr	w8, [x19, #148]
  4102fc:	csinc	w8, w8, wzr, eq  // eq = none
  410300:	str	w8, [x19, #148]
  410304:	ldr	x8, [x19, #128]
  410308:	cbnz	x8, 410314 <try_implicit_rule@@Base+0x354>
  41030c:	ldr	x8, [x24, #40]
  410310:	cbz	x8, 41037c <try_implicit_rule@@Base+0x3bc>
  410314:	ldr	w10, [x19, #180]
  410318:	ldr	x9, [x19, #192]
  41031c:	cmp	w23, #0x0
  410320:	mov	w8, w10
  410324:	add	x8, x9, x8, lsl #5
  410328:	ldr	x9, [x19, #152]
  41032c:	stp	w20, w10, [x8, #16]
  410330:	add	w10, w10, #0x1
  410334:	strb	w23, [x8, #24]
  410338:	csel	x9, xzr, x9, eq  // eq = none
  41033c:	add	x9, x9, x21
  410340:	stp	x24, x9, [x8]
  410344:	str	w10, [x19, #180]
  410348:	b	41037c <try_implicit_rule@@Base+0x3bc>
  41034c:	ldr	x8, [x19, #152]
  410350:	subs	x21, x21, x8
  410354:	b.cc	41037c <try_implicit_rule@@Base+0x3bc>  // b.lo, b.ul, b.last
  410358:	ldr	x1, [x19, #112]
  41035c:	add	x26, x26, x8
  410360:	cmp	x26, x1
  410364:	b.ls	410394 <try_implicit_rule@@Base+0x3d4>  // b.plast
  410368:	ldr	x8, [x19, #104]
  41036c:	mov	x0, x28
  410370:	add	x2, x26, x8
  410374:	bl	406a30 <strncmp@plt>
  410378:	cbz	w0, 410394 <try_implicit_rule@@Base+0x3d4>
  41037c:	ldr	x26, [x19, #200]
  410380:	ldr	x10, [x19, #168]
  410384:	add	x20, x20, #0x1
  410388:	cmp	x20, x10
  41038c:	b.cc	41022c <try_implicit_rule@@Base+0x26c>  // b.lo, b.ul, b.last
  410390:	b	41039c <try_implicit_rule@@Base+0x3dc>
  410394:	mov	w23, #0x1                   	// #1
  410398:	b	4102a8 <try_implicit_rule@@Base+0x2e8>
  41039c:	ldr	x24, [x24]
  4103a0:	ldr	x22, [x19, #184]
  4103a4:	ldr	w20, [x19, #180]
  4103a8:	cbnz	x24, 4101b8 <try_implicit_rule@@Base+0x1f8>
  4103ac:	cbz	w20, 410e48 <try_implicit_rule@@Base+0xe88>
  4103b0:	cmp	w20, #0x1
  4103b4:	b.eq	4103d0 <try_implicit_rule@@Base+0x410>  // b.none
  4103b8:	ldr	x0, [x19, #192]
  4103bc:	adrp	x3, 411000 <try_implicit_rule@@Base+0x1040>
  4103c0:	mov	w1, w20
  4103c4:	add	x3, x3, #0x280
  4103c8:	mov	w2, #0x20                  	// #32
  4103cc:	bl	4068a0 <qsort@plt>
  4103d0:	ldr	w8, [x19, #148]
  4103d4:	mov	w25, w20
  4103d8:	cbz	w8, 41043c <try_implicit_rule@@Base+0x47c>
  4103dc:	cbz	w20, 41043c <try_implicit_rule@@Base+0x47c>
  4103e0:	mov	x8, xzr
  4103e4:	ldr	x9, [x19, #192]
  4103e8:	add	x9, x9, x8, lsl #5
  4103ec:	ldr	x11, [x9]
  4103f0:	ldrb	w10, [x11, #50]
  4103f4:	cbz	w10, 410408 <try_implicit_rule@@Base+0x448>
  4103f8:	add	x8, x8, #0x1
  4103fc:	cmp	x8, x25
  410400:	b.ne	4103e4 <try_implicit_rule@@Base+0x424>  // b.any
  410404:	b	41043c <try_implicit_rule@@Base+0x47c>
  410408:	ldrh	w10, [x11, #48]
  41040c:	cbz	x10, 4103f8 <try_implicit_rule@@Base+0x438>
  410410:	ldr	x11, [x11, #8]
  410414:	mov	x12, xzr
  410418:	ldr	x13, [x11, x12, lsl #3]
  41041c:	ldrb	w13, [x13, #1]
  410420:	cbz	w13, 410434 <try_implicit_rule@@Base+0x474>
  410424:	add	x12, x12, #0x1
  410428:	cmp	x12, x10
  41042c:	b.cc	410418 <try_implicit_rule@@Base+0x458>  // b.lo, b.ul, b.last
  410430:	b	4103f8 <try_implicit_rule@@Base+0x438>
  410434:	str	xzr, [x9]
  410438:	b	4103f8 <try_implicit_rule@@Base+0x438>
  41043c:	ldr	x11, [x19, #152]
  410440:	ldr	x10, [x19, #120]
  410444:	sub	x9, x26, #0x1
  410448:	str	x9, [x19, #88]
  41044c:	add	x9, x11, #0x1
  410450:	add	x10, x10, x11
  410454:	str	x10, [x19, #32]
  410458:	ldr	w10, [x19, #224]
  41045c:	add	x12, x19, #0x104
  410460:	add	x9, x9, #0xf
  410464:	mov	w8, wzr
  410468:	add	w10, w10, #0x1
  41046c:	str	w10, [x19, #28]
  410470:	ldr	w10, [x19, #212]
  410474:	and	x9, x9, #0xfffffffffffffff0
  410478:	str	xzr, [x19, #64]
  41047c:	str	wzr, [x19, #40]
  410480:	add	w10, w10, #0x1
  410484:	str	w10, [x19, #24]
  410488:	add	x10, x12, x11
  41048c:	str	xzr, [x19, #112]
  410490:	stp	x9, x10, [x19, #8]
  410494:	str	x25, [x19, #48]
  410498:	str	w8, [x19, #148]
  41049c:	cbz	w20, 410e38 <try_implicit_rule@@Base+0xe78>
  4104a0:	mov	x13, xzr
  4104a4:	mov	w28, #0x1                   	// #1
  4104a8:	mov	x20, x22
  4104ac:	mov	x23, x22
  4104b0:	ldr	x8, [x19, #192]
  4104b4:	add	x26, x8, x13, lsl #5
  4104b8:	ldr	x24, [x26]
  4104bc:	cbz	x24, 4105f0 <try_implicit_rule@@Base+0x630>
  4104c0:	ldr	w8, [x19, #148]
  4104c4:	cbz	w8, 4104d0 <try_implicit_rule@@Base+0x510>
  4104c8:	ldrb	w8, [x24, #50]
  4104cc:	cbnz	w8, 4105f0 <try_implicit_rule@@Base+0x630>
  4104d0:	ldr	x8, [x19, #192]
  4104d4:	ldp	x12, x9, [x24, #16]
  4104d8:	ldr	x11, [x24, #8]
  4104dc:	add	x8, x8, x13, lsl #5
  4104e0:	ldr	w10, [x8, #16]
  4104e4:	ldrb	w27, [x8, #24]
  4104e8:	ldr	x9, [x9, x10, lsl #3]
  4104ec:	ldr	x11, [x11, x10, lsl #3]
  4104f0:	ldr	w10, [x12, x10, lsl #2]
  4104f4:	sub	x8, x9, x11
  4104f8:	ldr	x9, [x19, #216]
  4104fc:	sub	x9, x9, x10
  410500:	ldr	x10, [x19, #88]
  410504:	add	x22, x9, #0x1
  410508:	add	x8, x10, x8
  41050c:	cbz	w27, 410578 <try_implicit_rule@@Base+0x5b8>
  410510:	ldr	x21, [x19, #152]
  410514:	add	x8, x8, x21
  410518:	str	x8, [x19, #160]
  41051c:	ldr	x8, [x19, #112]
  410520:	sub	x22, x22, x21
  410524:	cbnz	x8, 410580 <try_implicit_rule@@Base+0x5c0>
  410528:	ldr	x9, [x19, #8]
  41052c:	mov	x8, sp
  410530:	sub	x25, x8, x9
  410534:	mov	sp, x25
  410538:	ldr	x1, [x19, #200]
  41053c:	mov	x0, x25
  410540:	mov	x2, x21
  410544:	str	w27, [x19, #128]
  410548:	mov	x27, x26
  41054c:	mov	w26, w28
  410550:	mov	x28, x13
  410554:	bl	406750 <memcpy@plt>
  410558:	mov	x13, x28
  41055c:	mov	w28, w26
  410560:	mov	x26, x27
  410564:	ldr	w27, [x19, #128]
  410568:	str	x25, [x19, #112]
  41056c:	strb	wzr, [x25, x21]
  410570:	ldr	x25, [x19, #48]
  410574:	b	410580 <try_implicit_rule@@Base+0x5c0>
  410578:	ldr	x21, [x19, #152]
  41057c:	str	x8, [x19, #160]
  410580:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410584:	cmp	w27, #0x0
  410588:	ldr	w8, [x8, #3236]
  41058c:	csel	x9, x21, xzr, ne  // ne = any
  410590:	add	x9, x22, x9
  410594:	cmp	x9, #0x1, lsl #12
  410598:	b.ls	410614 <try_implicit_rule@@Base+0x654>  // b.plast
  41059c:	tbz	w8, #3, 4105f0 <try_implicit_rule@@Base+0x630>
  4105a0:	ldr	w0, [x19, #224]
  4105a4:	mov	x21, x13
  4105a8:	bl	4176ac <print_spaces@@Base>
  4105ac:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4105b0:	mov	w2, #0x5                   	// #5
  4105b4:	mov	x0, xzr
  4105b8:	add	x1, x1, #0x1f7
  4105bc:	bl	406e10 <dcgettext@plt>
  4105c0:	ldr	x8, [x19, #112]
  4105c4:	ldr	x3, [x19, #160]
  4105c8:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  4105cc:	cmp	w27, #0x0
  4105d0:	add	x9, x9, #0x5eb
  4105d4:	csel	x1, x8, x9, ne  // ne = any
  4105d8:	mov	w2, w22
  4105dc:	bl	406ea0 <printf@plt>
  4105e0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4105e4:	ldr	x0, [x8, #2512]
  4105e8:	bl	406d40 <fflush@plt>
  4105ec:	mov	x13, x21
  4105f0:	mov	x22, x20
  4105f4:	mov	x20, x23
  4105f8:	add	x13, x13, #0x1
  4105fc:	cmp	x13, x25
  410600:	mov	x23, x20
  410604:	cset	w28, cc  // cc = lo, ul, last
  410608:	mov	x20, x22
  41060c:	b.ne	4104b0 <try_implicit_rule@@Base+0x4f0>  // b.any
  410610:	b	410e38 <try_implicit_rule@@Base+0xe78>
  410614:	str	x13, [x19, #80]
  410618:	tbz	w8, #3, 410650 <try_implicit_rule@@Base+0x690>
  41061c:	ldr	w0, [x19, #224]
  410620:	bl	4176ac <print_spaces@@Base>
  410624:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  410628:	mov	w2, #0x5                   	// #5
  41062c:	mov	x0, xzr
  410630:	add	x1, x1, #0x211
  410634:	bl	406e10 <dcgettext@plt>
  410638:	ldr	x2, [x19, #160]
  41063c:	mov	w1, w22
  410640:	bl	406ea0 <printf@plt>
  410644:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410648:	ldr	x0, [x8, #2512]
  41064c:	bl	406d40 <fflush@plt>
  410650:	add	x0, x19, #0x104
  410654:	str	w28, [x19, #44]
  410658:	cbz	w27, 410680 <try_implicit_rule@@Base+0x6c0>
  41065c:	ldr	x1, [x19, #200]
  410660:	mov	x2, x21
  410664:	bl	406750 <memcpy@plt>
  410668:	ldr	x0, [x19, #16]
  41066c:	ldr	x1, [x19, #160]
  410670:	mov	x2, x22
  410674:	bl	406750 <memcpy@plt>
  410678:	add	x8, x22, x21
  41067c:	b	410690 <try_implicit_rule@@Base+0x6d0>
  410680:	ldr	x1, [x19, #160]
  410684:	mov	x2, x22
  410688:	bl	406750 <memcpy@plt>
  41068c:	mov	x8, x22
  410690:	add	x9, x19, #0x104
  410694:	strb	wzr, [x9, x8]
  410698:	ldr	x28, [x24, #32]
  41069c:	adrp	x14, 43b000 <memcpy@GLIBC_2.17>
  4106a0:	add	x8, x19, #0x104
  4106a4:	add	x14, x14, #0xcf0
  4106a8:	stp	x24, x22, [x19, #96]
  4106ac:	cbz	x28, 410e50 <try_implicit_rule@@Base+0xe90>
  4106b0:	ldr	x9, [x19, #232]
  4106b4:	str	w27, [x19, #128]
  4106b8:	str	x26, [x19, #72]
  4106bc:	str	x8, [x9, #40]
  4106c0:	mov	w8, #0x1                   	// #1
  4106c4:	strb	w8, [x24, #51]
  4106c8:	ldr	x22, [x28, #8]
  4106cc:	cbnz	x22, 4106d8 <try_implicit_rule@@Base+0x718>
  4106d0:	ldr	x8, [x28, #16]
  4106d4:	ldr	x22, [x8]
  4106d8:	ldr	x24, [x19, #232]
  4106dc:	mov	w26, wzr
  4106e0:	mov	w27, wzr
  4106e4:	str	xzr, [x19, #56]
  4106e8:	str	x20, [x19, #184]
  4106ec:	cbnz	x22, 410708 <try_implicit_rule@@Base+0x748>
  4106f0:	ldr	x28, [x28]
  4106f4:	cbz	x28, 410e14 <try_implicit_rule@@Base+0xe54>
  4106f8:	ldr	x22, [x28, #8]
  4106fc:	cbnz	x22, 410708 <try_implicit_rule@@Base+0x748>
  410700:	ldr	x8, [x28, #16]
  410704:	ldr	x22, [x8]
  410708:	ldrb	w8, [x28, #33]
  41070c:	tbnz	w8, #3, 410784 <try_implicit_rule@@Base+0x7c4>
  410710:	mov	w1, #0x25                  	// #37
  410714:	mov	x0, x22
  410718:	bl	406cd0 <strchr@plt>
  41071c:	str	x0, [x19, #240]
  410720:	cbz	x0, 410870 <try_implicit_rule@@Base+0x8b0>
  410724:	ldr	x24, [x19, #120]
  410728:	ldr	w8, [x19, #128]
  41072c:	mov	x21, x0
  410730:	mov	x23, x24
  410734:	cbz	w8, 41074c <try_implicit_rule@@Base+0x78c>
  410738:	ldr	x1, [x19, #200]
  41073c:	ldr	x2, [x19, #152]
  410740:	mov	x0, x24
  410744:	bl	406750 <memcpy@plt>
  410748:	ldr	x23, [x19, #32]
  41074c:	sub	x25, x21, x22
  410750:	mov	x0, x23
  410754:	mov	x1, x22
  410758:	mov	x2, x25
  41075c:	bl	406750 <memcpy@plt>
  410760:	add	x22, x23, x25
  410764:	ldr	x23, [x19, #104]
  410768:	ldr	x1, [x19, #160]
  41076c:	mov	x0, x22
  410770:	mov	x2, x23
  410774:	bl	406750 <memcpy@plt>
  410778:	add	x0, x22, x23
  41077c:	add	x1, x21, #0x1
  410780:	b	41087c <try_implicit_rule@@Base+0x8bc>
  410784:	ldrb	w8, [x22], #1
  410788:	ldrh	w9, [x14, x8, lsl #1]
  41078c:	tst	w9, #0x6
  410790:	b.ne	410784 <try_implicit_rule@@Base+0x7c4>  // b.any
  410794:	cbz	w8, 4108e4 <try_implicit_rule@@Base+0x924>
  410798:	sub	x21, x22, #0x1
  41079c:	mov	x25, x22
  4107a0:	mov	w10, w8
  4107a4:	and	w9, w10, #0xff
  4107a8:	cmp	w9, #0x23
  4107ac:	b.le	4107d8 <try_implicit_rule@@Base+0x818>
  4107b0:	cmp	w9, #0x24
  4107b4:	b.ne	4107f0 <try_implicit_rule@@Base+0x830>  // b.any
  4107b8:	mov	x9, x25
  4107bc:	ldrb	w10, [x9], #1
  4107c0:	cmp	w10, #0x28
  4107c4:	b.eq	410800 <try_implicit_rule@@Base+0x840>  // b.none
  4107c8:	cmp	w10, #0x7b
  4107cc:	b.ne	410840 <try_implicit_rule@@Base+0x880>  // b.any
  4107d0:	mov	w11, #0x7d                  	// #125
  4107d4:	b	410804 <try_implicit_rule@@Base+0x844>
  4107d8:	cbz	w9, 41084c <try_implicit_rule@@Base+0x88c>
  4107dc:	cmp	w9, #0x9
  4107e0:	b.eq	41084c <try_implicit_rule@@Base+0x88c>  // b.none
  4107e4:	cmp	w9, #0x20
  4107e8:	b.ne	4107f8 <try_implicit_rule@@Base+0x838>  // b.any
  4107ec:	b	41084c <try_implicit_rule@@Base+0x88c>
  4107f0:	cmp	w9, #0x7c
  4107f4:	b.eq	410850 <try_implicit_rule@@Base+0x890>  // b.none
  4107f8:	mov	x9, x25
  4107fc:	b	410840 <try_implicit_rule@@Base+0x880>
  410800:	mov	w11, #0x29                  	// #41
  410804:	ldrb	w13, [x9]
  410808:	cbz	w13, 410840 <try_implicit_rule@@Base+0x880>
  41080c:	mov	w12, wzr
  410810:	add	x9, x25, #0x2
  410814:	cmp	w10, w13, uxtb
  410818:	b.ne	410824 <try_implicit_rule@@Base+0x864>  // b.any
  41081c:	add	w12, w12, #0x1
  410820:	b	410834 <try_implicit_rule@@Base+0x874>
  410824:	cmp	w11, w13, uxtb
  410828:	b.ne	410834 <try_implicit_rule@@Base+0x874>  // b.any
  41082c:	subs	w12, w12, #0x1
  410830:	b.lt	410840 <try_implicit_rule@@Base+0x880>  // b.tstop
  410834:	ldrb	w13, [x9], #1
  410838:	cbnz	w13, 410814 <try_implicit_rule@@Base+0x854>
  41083c:	sub	x9, x9, #0x1
  410840:	ldrb	w10, [x9], #1
  410844:	mov	x25, x9
  410848:	b	4107a4 <try_implicit_rule@@Base+0x7e4>
  41084c:	sub	x25, x25, #0x1
  410850:	sub	x23, x25, x21
  410854:	cbnz	w27, 4108fc <try_implicit_rule@@Base+0x93c>
  410858:	cmp	x23, #0x1
  41085c:	b.ne	4108fc <try_implicit_rule@@Base+0x93c>  // b.any
  410860:	cmp	w8, #0x7c
  410864:	b.ne	4108fc <try_implicit_rule@@Base+0x93c>  // b.any
  410868:	mov	w27, #0x1                   	// #1
  41086c:	b	4106ec <try_implicit_rule@@Base+0x72c>
  410870:	ldr	x24, [x19, #120]
  410874:	mov	x1, x22
  410878:	mov	x0, x24
  41087c:	bl	406d50 <strcpy@plt>
  410880:	add	x0, x19, #0xf0
  410884:	mov	w1, #0x28                  	// #40
  410888:	mov	w2, #0x1                   	// #1
  41088c:	mov	w4, #0x20                  	// #32
  410890:	mov	x3, xzr
  410894:	str	x24, [x19, #240]
  410898:	bl	41b114 <parse_file_seq@@Base>
  41089c:	str	x0, [x19, #248]
  4108a0:	cbz	x0, 4108ec <try_implicit_rule@@Base+0x92c>
  4108a4:	ldr	x24, [x19, #232]
  4108a8:	ldrh	w8, [x28, #32]
  4108ac:	ldrh	w9, [x0, #32]
  4108b0:	add	w26, w26, #0x1
  4108b4:	lsr	w8, w8, #9
  4108b8:	bfi	w9, w8, #9, #1
  4108bc:	strh	w9, [x0, #32]
  4108c0:	ldrh	w8, [x28, #32]
  4108c4:	and	w9, w9, #0xffffefff
  4108c8:	and	w8, w8, #0x1000
  4108cc:	orr	w8, w9, w8
  4108d0:	strh	w8, [x0, #32]
  4108d4:	ldr	x0, [x0]
  4108d8:	cbnz	x0, 4108a8 <try_implicit_rule@@Base+0x8e8>
  4108dc:	mov	x22, xzr
  4108e0:	b	410ab4 <try_implicit_rule@@Base+0xaf4>
  4108e4:	mov	x22, xzr
  4108e8:	b	4106ec <try_implicit_rule@@Base+0x72c>
  4108ec:	ldr	x8, [x19, #136]
  4108f0:	ldr	x24, [x19, #232]
  4108f4:	mov	x22, xzr
  4108f8:	b	410ab8 <try_implicit_rule@@Base+0xaf8>
  4108fc:	mov	w2, #0x25                  	// #37
  410900:	mov	x0, x21
  410904:	mov	x1, x25
  410908:	bl	41790c <lindex@@Base>
  41090c:	str	x0, [x19, #240]
  410910:	cbz	x0, 410964 <try_implicit_rule@@Base+0x9a4>
  410914:	ldr	x24, [x19, #120]
  410918:	mov	x1, x21
  41091c:	sub	x21, x0, x21
  410920:	mov	x22, x0
  410924:	mov	x0, x24
  410928:	mov	x2, x21
  41092c:	bl	406750 <memcpy@plt>
  410930:	ldr	w9, [x19, #128]
  410934:	mov	x10, x21
  410938:	add	x8, x24, x21
  41093c:	cbz	w9, 410984 <try_implicit_rule@@Base+0x9c4>
  410940:	mov	w9, #0x29                  	// #41
  410944:	strb	w9, [x8, #4]
  410948:	mov	w9, #0x2824                	// #10276
  41094c:	movk	w9, #0x462a, lsl #16
  410950:	str	w9, [x8]
  410954:	mov	w9, #0x1                   	// #1
  410958:	str	w9, [x19, #168]
  41095c:	mov	w9, #0x5                   	// #5
  410960:	b	410994 <try_implicit_rule@@Base+0x9d4>
  410964:	ldr	x22, [x19, #120]
  410968:	mov	x1, x21
  41096c:	mov	x2, x23
  410970:	mov	x0, x22
  410974:	bl	406750 <memcpy@plt>
  410978:	mov	w21, wzr
  41097c:	add	x8, x22, x23
  410980:	b	4109c0 <try_implicit_rule@@Base+0xa00>
  410984:	mov	w9, #0x2a24                	// #10788
  410988:	strh	w9, [x8]
  41098c:	mov	w9, #0x2                   	// #2
  410990:	str	wzr, [x19, #168]
  410994:	ldr	x24, [x19, #232]
  410998:	add	x21, x8, x9
  41099c:	mvn	x8, x10
  4109a0:	add	x1, x22, #0x1
  4109a4:	add	x22, x23, x8
  4109a8:	mov	x0, x21
  4109ac:	mov	x2, x22
  4109b0:	bl	406750 <memcpy@plt>
  4109b4:	add	x8, x21, x22
  4109b8:	ldr	x22, [x19, #120]
  4109bc:	ldr	w21, [x19, #168]
  4109c0:	strb	wzr, [x8]
  4109c4:	ldr	w8, [x19, #40]
  4109c8:	cbz	w8, 410a08 <try_implicit_rule@@Base+0xa48>
  4109cc:	ldr	x8, [x19, #56]
  4109d0:	cbnz	w8, 410a24 <try_implicit_rule@@Base+0xa64>
  4109d4:	ldr	x8, [x24, #80]
  4109d8:	ldr	x2, [x24, #40]
  4109dc:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  4109e0:	mov	w1, #0x1                   	// #1
  4109e4:	ldr	x5, [x8, #8]
  4109e8:	mov	w3, #0x6                   	// #6
  4109ec:	mov	w8, #0x1                   	// #1
  4109f0:	add	x0, x0, #0x98f
  4109f4:	mov	w4, wzr
  4109f8:	mov	x6, xzr
  4109fc:	str	x8, [x19, #56]
  410a00:	bl	420860 <define_variable_in_set@@Base>
  410a04:	b	410a24 <try_implicit_rule@@Base+0xa64>
  410a08:	mov	x0, x24
  410a0c:	mov	w1, wzr
  410a10:	bl	420e28 <initialize_file_variables@@Base>
  410a14:	mov	x0, x24
  410a18:	bl	407b74 <set_file_variables@@Base>
  410a1c:	mov	w8, #0x1                   	// #1
  410a20:	str	w8, [x19, #40]
  410a24:	mov	x0, x22
  410a28:	mov	x1, x24
  410a2c:	bl	40a2ec <variable_expand_for_file@@Base>
  410a30:	ldr	x8, [x19, #112]
  410a34:	cmp	w21, #0x0
  410a38:	add	x22, x19, #0xf8
  410a3c:	str	x0, [x19, #240]
  410a40:	csel	x21, xzr, x8, eq  // eq = none
  410a44:	cmp	w27, #0x0
  410a48:	mov	w8, #0x100                 	// #256
  410a4c:	csinc	w2, w8, wzr, eq  // eq = none
  410a50:	add	x0, x19, #0xf0
  410a54:	mov	w1, #0x28                  	// #40
  410a58:	mov	x3, x21
  410a5c:	mov	w4, wzr
  410a60:	bl	41b114 <parse_file_seq@@Base>
  410a64:	str	x0, [x22]
  410a68:	cbz	x0, 410a8c <try_implicit_rule@@Base+0xacc>
  410a6c:	mov	x22, x0
  410a70:	add	w26, w26, #0x1
  410a74:	cbz	w27, 410a84 <try_implicit_rule@@Base+0xac4>
  410a78:	ldrh	w8, [x22, #32]
  410a7c:	orr	w8, w8, #0x200
  410a80:	strh	w8, [x22, #32]
  410a84:	ldr	x0, [x22]
  410a88:	cbnz	x0, 410a6c <try_implicit_rule@@Base+0xaac>
  410a8c:	ldr	x9, [x19, #240]
  410a90:	ldrb	w8, [x9]
  410a94:	cmp	w8, #0x7c
  410a98:	b.ne	410aac <try_implicit_rule@@Base+0xaec>  // b.any
  410a9c:	add	x8, x9, #0x1
  410aa0:	str	x8, [x19, #240]
  410aa4:	ldrb	w8, [x9, #1]
  410aa8:	mov	w27, #0x1                   	// #1
  410aac:	cbnz	w8, 410a44 <try_implicit_rule@@Base+0xa84>
  410ab0:	mov	x22, x25
  410ab4:	ldr	x8, [x19, #136]
  410ab8:	cmp	w26, w8
  410abc:	b.ls	410af0 <try_implicit_rule@@Base+0xb30>  // b.plast
  410ac0:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  410ac4:	ldr	w8, [x9, #268]
  410ac8:	ldr	x0, [x19, #184]
  410acc:	cmp	w8, w26
  410ad0:	csel	w8, w8, w26, hi  // hi = pmore
  410ad4:	lsl	x1, x8, #5
  410ad8:	sub	x20, x20, x0
  410adc:	str	w8, [x9, #268]
  410ae0:	str	x8, [x19, #136]
  410ae4:	bl	417854 <xrealloc@@Base>
  410ae8:	add	x20, x0, x20
  410aec:	str	x0, [x19, #184]
  410af0:	ldr	x25, [x19, #248]
  410af4:	str	x25, [x19, #168]
  410af8:	cbz	x25, 410d48 <try_implicit_rule@@Base+0xd88>
  410afc:	ldr	x23, [x28, #8]
  410b00:	ldr	x21, [x25, #8]
  410b04:	cbnz	x23, 410b10 <try_implicit_rule@@Base+0xb50>
  410b08:	ldr	x8, [x28, #16]
  410b0c:	ldr	x23, [x8]
  410b10:	mov	x0, x21
  410b14:	bl	409374 <file_impossible_p@@Base>
  410b18:	cbnz	w0, 410d5c <try_implicit_rule@@Base+0xd9c>
  410b1c:	movi	v0.2d, #0x0
  410b20:	stp	q0, q0, [x20]
  410b24:	ldrh	w8, [x25, #32]
  410b28:	ubfx	w9, w8, #9, #1
  410b2c:	strb	w9, [x20, #24]
  410b30:	ldrh	w9, [x25, #32]
  410b34:	lsr	w9, w9, #11
  410b38:	and	w9, w9, #0x2
  410b3c:	bfxil	w9, w8, #9, #1
  410b40:	strb	w9, [x20, #24]
  410b44:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410b48:	ldrb	w8, [x8, #3236]
  410b4c:	tbz	w8, #3, 410b90 <try_implicit_rule@@Base+0xbd0>
  410b50:	ldr	w0, [x19, #224]
  410b54:	bl	4176ac <print_spaces@@Base>
  410b58:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  410b5c:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  410b60:	cmp	x21, x23
  410b64:	add	x8, x8, #0x2be
  410b68:	add	x9, x9, #0x29e
  410b6c:	csel	x1, x9, x8, eq  // eq = none
  410b70:	mov	w2, #0x5                   	// #5
  410b74:	mov	x0, xzr
  410b78:	bl	406e10 <dcgettext@plt>
  410b7c:	ldr	x1, [x25, #8]
  410b80:	bl	406ea0 <printf@plt>
  410b84:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410b88:	ldr	x0, [x8, #2512]
  410b8c:	bl	406d40 <fflush@plt>
  410b90:	ldr	x24, [x24, #24]
  410b94:	ldr	x21, [x25, #8]
  410b98:	cbz	x24, 410c18 <try_implicit_rule@@Base+0xc58>
  410b9c:	add	x23, x21, #0x1
  410ba0:	ldr	x8, [x24, #8]
  410ba4:	mov	x9, x8
  410ba8:	cbnz	x8, 410bb4 <try_implicit_rule@@Base+0xbf4>
  410bac:	ldr	x9, [x24, #16]
  410bb0:	ldr	x9, [x9]
  410bb4:	cmp	x9, x21
  410bb8:	b.eq	410c34 <try_implicit_rule@@Base+0xc74>  // b.none
  410bbc:	mov	x9, x8
  410bc0:	cbnz	x8, 410bcc <try_implicit_rule@@Base+0xc0c>
  410bc4:	ldr	x9, [x24, #16]
  410bc8:	ldr	x9, [x9]
  410bcc:	ldrb	w9, [x9]
  410bd0:	ldrb	w10, [x21]
  410bd4:	cmp	w9, w10
  410bd8:	b.ne	410c10 <try_implicit_rule@@Base+0xc50>  // b.any
  410bdc:	mov	x9, x8
  410be0:	cbnz	x8, 410bec <try_implicit_rule@@Base+0xc2c>
  410be4:	ldr	x9, [x24, #16]
  410be8:	ldr	x9, [x9]
  410bec:	ldrb	w9, [x9]
  410bf0:	cbz	w9, 410c34 <try_implicit_rule@@Base+0xc74>
  410bf4:	cbnz	x8, 410c00 <try_implicit_rule@@Base+0xc40>
  410bf8:	ldr	x8, [x24, #16]
  410bfc:	ldr	x8, [x8]
  410c00:	add	x0, x8, #0x1
  410c04:	mov	x1, x23
  410c08:	bl	406c70 <strcmp@plt>
  410c0c:	cbz	w0, 410c34 <try_implicit_rule@@Base+0xc74>
  410c10:	ldr	x24, [x24]
  410c14:	cbnz	x24, 410ba0 <try_implicit_rule@@Base+0xbe0>
  410c18:	mov	x0, x21
  410c1c:	bl	40a568 <lookup_file@@Base>
  410c20:	cbnz	x0, 410c30 <try_implicit_rule@@Base+0xc70>
  410c24:	ldr	x0, [x25, #8]
  410c28:	bl	409134 <file_exists_p@@Base>
  410c2c:	cbz	w0, 410c48 <try_implicit_rule@@Base+0xc88>
  410c30:	ldr	x21, [x25, #8]
  410c34:	ldr	x24, [x19, #232]
  410c38:	str	x21, [x20], #32
  410c3c:	ldr	x25, [x25]
  410c40:	cbnz	x25, 410afc <try_implicit_rule@@Base+0xb3c>
  410c44:	b	410d48 <try_implicit_rule@@Base+0xd88>
  410c48:	ldr	x0, [x25, #8]
  410c4c:	mov	x1, xzr
  410c50:	mov	x2, xzr
  410c54:	mov	x3, xzr
  410c58:	bl	422a38 <vpath_search@@Base>
  410c5c:	cbz	x0, 410ca8 <try_implicit_rule@@Base+0xce8>
  410c60:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410c64:	ldrb	w8, [x8, #3236]
  410c68:	tbz	w8, #3, 410c30 <try_implicit_rule@@Base+0xc70>
  410c6c:	mov	x21, x0
  410c70:	ldr	w0, [x19, #224]
  410c74:	bl	4176ac <print_spaces@@Base>
  410c78:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  410c7c:	mov	w2, #0x5                   	// #5
  410c80:	mov	x0, xzr
  410c84:	add	x1, x1, #0x2e2
  410c88:	bl	406e10 <dcgettext@plt>
  410c8c:	ldr	x1, [x25, #8]
  410c90:	mov	x2, x21
  410c94:	bl	406ea0 <printf@plt>
  410c98:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410c9c:	ldr	x0, [x8, #2512]
  410ca0:	bl	406d40 <fflush@plt>
  410ca4:	b	410c30 <try_implicit_rule@@Base+0xc70>
  410ca8:	ldr	w8, [x19, #148]
  410cac:	cbz	w8, 410dd4 <try_implicit_rule@@Base+0xe14>
  410cb0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410cb4:	ldrb	w8, [x8, #3236]
  410cb8:	tbz	w8, #3, 410cec <try_implicit_rule@@Base+0xd2c>
  410cbc:	ldr	w0, [x19, #224]
  410cc0:	bl	4176ac <print_spaces@@Base>
  410cc4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  410cc8:	mov	w2, #0x5                   	// #5
  410ccc:	mov	x0, xzr
  410cd0:	add	x1, x1, #0x309
  410cd4:	bl	406e10 <dcgettext@plt>
  410cd8:	ldr	x1, [x25, #8]
  410cdc:	bl	406ea0 <printf@plt>
  410ce0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410ce4:	ldr	x0, [x8, #2512]
  410ce8:	bl	406d40 <fflush@plt>
  410cec:	ldr	x24, [x19, #232]
  410cf0:	ldr	x23, [x19, #64]
  410cf4:	cbnz	x23, 410d00 <try_implicit_rule@@Base+0xd40>
  410cf8:	sub	x23, sp, #0x90
  410cfc:	mov	sp, x23
  410d00:	add	x0, x23, #0x8
  410d04:	mov	w2, #0x88                  	// #136
  410d08:	mov	w1, wzr
  410d0c:	bl	406a70 <memset@plt>
  410d10:	ldr	x8, [x25, #8]
  410d14:	mov	x0, x23
  410d18:	mov	w1, wzr
  410d1c:	str	x8, [x23]
  410d20:	ldp	w3, w2, [x19, #24]
  410d24:	bl	4100ac <try_implicit_rule@@Base+0xec>
  410d28:	cbz	w0, 410ddc <try_implicit_rule@@Base+0xe1c>
  410d2c:	ldr	x8, [x23]
  410d30:	str	xzr, [x19, #64]
  410d34:	str	x8, [x20, #8]
  410d38:	ldr	x21, [x25, #8]
  410d3c:	str	x21, [x23]
  410d40:	str	x23, [x20, #16]
  410d44:	b	410c38 <try_implicit_rule@@Base+0xc78>
  410d48:	ldr	x0, [x19, #168]
  410d4c:	bl	417b74 <free_ns_chain@@Base>
  410d50:	adrp	x14, 43b000 <memcpy@GLIBC_2.17>
  410d54:	add	x14, x14, #0xcf0
  410d58:	b	4106ec <try_implicit_rule@@Base+0x72c>
  410d5c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410d60:	ldrb	w8, [x8, #3236]
  410d64:	tbz	w8, #3, 410da8 <try_implicit_rule@@Base+0xde8>
  410d68:	ldr	w0, [x19, #224]
  410d6c:	bl	4176ac <print_spaces@@Base>
  410d70:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  410d74:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  410d78:	cmp	x21, x23
  410d7c:	add	x8, x8, #0x26c
  410d80:	add	x9, x9, #0x23e
  410d84:	csel	x1, x9, x8, eq  // eq = none
  410d88:	mov	w2, #0x5                   	// #5
  410d8c:	mov	x0, xzr
  410d90:	bl	406e10 <dcgettext@plt>
  410d94:	ldr	x1, [x25, #8]
  410d98:	bl	406ea0 <printf@plt>
  410d9c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  410da0:	ldr	x0, [x8, #2512]
  410da4:	bl	406d40 <fflush@plt>
  410da8:	ldr	x8, [x19, #72]
  410dac:	str	xzr, [x8]
  410db0:	ldr	x22, [x19, #184]
  410db4:	ldr	x21, [x19, #96]
  410db8:	ldr	x25, [x19, #48]
  410dbc:	ldr	x0, [x19, #168]
  410dc0:	bl	417b74 <free_ns_chain@@Base>
  410dc4:	ldr	x13, [x19, #80]
  410dc8:	str	xzr, [x24, #40]
  410dcc:	strb	wzr, [x21, #51]
  410dd0:	b	4105f8 <try_implicit_rule@@Base+0x638>
  410dd4:	ldr	x24, [x19, #232]
  410dd8:	b	410db0 <try_implicit_rule@@Base+0xdf0>
  410ddc:	ldr	x0, [x23, #80]
  410de0:	cbz	x0, 410de8 <try_implicit_rule@@Base+0xe28>
  410de4:	bl	420aa8 <free_variable_set@@Base>
  410de8:	str	x23, [x19, #64]
  410dec:	ldr	x0, [x23, #88]
  410df0:	ldr	x22, [x19, #184]
  410df4:	ldr	x21, [x19, #96]
  410df8:	ldr	x23, [x19, #48]
  410dfc:	cbz	x0, 410e04 <try_implicit_rule@@Base+0xe44>
  410e00:	bl	420aa8 <free_variable_set@@Base>
  410e04:	ldr	x0, [x25, #8]
  410e08:	bl	409208 <file_impossible@@Base>
  410e0c:	mov	x25, x23
  410e10:	b	410dbc <try_implicit_rule@@Base+0xdfc>
  410e14:	str	xzr, [x24, #40]
  410e18:	ldr	x24, [x19, #96]
  410e1c:	ldr	x22, [x19, #184]
  410e20:	ldr	x25, [x19, #48]
  410e24:	ldr	x11, [x19, #80]
  410e28:	ldr	w8, [x19, #44]
  410e2c:	mov	x23, x20
  410e30:	strb	wzr, [x24, #51]
  410e34:	tbnz	w8, #0, 410e58 <try_implicit_rule@@Base+0xe98>
  410e38:	ldr	w20, [x19, #180]
  410e3c:	ldr	w9, [x19, #148]
  410e40:	mov	w8, #0x1                   	// #1
  410e44:	cbz	w9, 410498 <try_implicit_rule@@Base+0x4d8>
  410e48:	mov	x20, xzr
  410e4c:	b	411248 <try_implicit_rule@@Base+0x1288>
  410e50:	ldr	x11, [x19, #80]
  410e54:	mov	x22, x20
  410e58:	ldr	w8, [x19, #212]
  410e5c:	cbz	w8, 410e80 <try_implicit_rule@@Base+0xec0>
  410e60:	ldr	x10, [x19, #192]
  410e64:	and	x9, x11, #0xffffffff
  410e68:	ldr	x8, [x24, #8]
  410e6c:	add	x9, x10, x9, lsl #5
  410e70:	ldr	w9, [x9, #16]
  410e74:	ldr	x8, [x8, x9, lsl #3]
  410e78:	ldr	x9, [x19, #232]
  410e7c:	str	x8, [x9]
  410e80:	cmp	x23, x22
  410e84:	and	x20, x11, #0xffffffff
  410e88:	mov	x27, x22
  410e8c:	b.ls	411030 <try_implicit_rule@@Base+0x1070>  // b.plast
  410e90:	ldr	x8, [x19, #192]
  410e94:	mov	w25, #0x4900                	// #18688
  410e98:	add	x24, x8, x20, lsl #5
  410e9c:	ldur	x22, [x23, #-16]
  410ea0:	cbz	x22, 410f64 <try_implicit_rule@@Base+0xfa4>
  410ea4:	ldr	x0, [x22]
  410ea8:	bl	40a568 <lookup_file@@Base>
  410eac:	cbz	x0, 410ec8 <try_implicit_rule@@Base+0xf08>
  410eb0:	mov	x26, x0
  410eb4:	ldr	w8, [x26, #136]!
  410eb8:	mov	x21, x0
  410ebc:	orr	w8, w8, #0x8000
  410ec0:	str	w8, [x26]
  410ec4:	b	410edc <try_implicit_rule@@Base+0xf1c>
  410ec8:	ldr	x0, [x22]
  410ecc:	bl	40a5f4 <enter_file@@Base>
  410ed0:	mov	x26, x0
  410ed4:	ldr	w8, [x26, #136]!
  410ed8:	mov	x21, x0
  410edc:	ldur	q0, [x22, #24]
  410ee0:	stur	q0, [x21, #24]
  410ee4:	ldr	x9, [x22, #40]
  410ee8:	str	x9, [x21, #40]
  410eec:	ldr	q0, [x22, #80]
  410ef0:	str	q0, [x21, #80]
  410ef4:	ldr	w9, [x22, #136]
  410ef8:	lsr	w9, w9, #18
  410efc:	bfi	w8, w9, #18, #1
  410f00:	str	w8, [x21, #136]
  410f04:	ldr	x9, [x22, #48]
  410f08:	orr	w8, w8, w25
  410f0c:	str	w8, [x21, #136]
  410f10:	str	x9, [x21, #48]
  410f14:	ldur	x0, [x23, #-24]
  410f18:	bl	40a568 <lookup_file@@Base>
  410f1c:	cbz	x0, 410f34 <try_implicit_rule@@Base+0xf74>
  410f20:	ldrb	w8, [x0, #136]
  410f24:	tbz	w8, #5, 410f34 <try_implicit_rule@@Base+0xf74>
  410f28:	ldr	w8, [x26]
  410f2c:	orr	w8, w8, #0x20
  410f30:	str	w8, [x26]
  410f34:	ldr	x21, [x21, #24]
  410f38:	cbz	x21, 410f64 <try_implicit_rule@@Base+0xfa4>
  410f3c:	ldr	x0, [x21, #8]
  410f40:	bl	40a5f4 <enter_file@@Base>
  410f44:	stp	xzr, x0, [x21, #8]
  410f48:	ldrh	w8, [x21, #32]
  410f4c:	ldr	w9, [x0, #136]
  410f50:	and	w8, w8, #0x100
  410f54:	orr	w8, w9, w8
  410f58:	str	w8, [x0, #136]
  410f5c:	ldr	x21, [x21]
  410f60:	cbnz	x21, 410f3c <try_implicit_rule@@Base+0xf7c>
  410f64:	mov	w0, #0x28                  	// #40
  410f68:	bl	4178ac <xcalloc@@Base>
  410f6c:	ldurb	w8, [x23, #-8]
  410f70:	ldrh	w9, [x0, #32]
  410f74:	mov	x21, x0
  410f78:	and	w8, w8, #0x1
  410f7c:	bfi	w9, w8, #9, #1
  410f80:	strh	w9, [x0, #32]
  410f84:	ldurb	w8, [x23, #-8]
  410f88:	and	w9, w9, #0xffffefff
  410f8c:	ubfx	w8, w8, #1, #1
  410f90:	orr	w8, w9, w8, lsl #12
  410f94:	strh	w8, [x0, #32]
  410f98:	ldur	x0, [x23, #-32]
  410f9c:	bl	42016c <strcache_add@@Base>
  410fa0:	ldr	w8, [x19, #212]
  410fa4:	mov	x22, x0
  410fa8:	cbz	w8, 410fb4 <try_implicit_rule@@Base+0xff4>
  410fac:	str	x22, [x21, #8]
  410fb0:	b	410fd0 <try_implicit_rule@@Base+0x1010>
  410fb4:	mov	x0, x22
  410fb8:	bl	40a568 <lookup_file@@Base>
  410fbc:	str	x0, [x21, #16]
  410fc0:	cbnz	x0, 410fd0 <try_implicit_rule@@Base+0x1010>
  410fc4:	mov	x0, x22
  410fc8:	bl	40a5f4 <enter_file@@Base>
  410fcc:	str	x0, [x21, #16]
  410fd0:	ldur	x8, [x23, #-16]
  410fd4:	sub	x23, x23, #0x20
  410fd8:	mov	x10, x27
  410fdc:	cbz	x8, 410ffc <try_implicit_rule@@Base+0x103c>
  410fe0:	ldr	x9, [x19, #232]
  410fe4:	cmp	x23, x10
  410fe8:	ldr	x8, [x9, #24]
  410fec:	str	x8, [x21]
  410ff0:	str	x21, [x9, #24]
  410ff4:	b.hi	410e9c <try_implicit_rule@@Base+0xedc>  // b.pmore
  410ff8:	b	411030 <try_implicit_rule@@Base+0x1070>
  410ffc:	ldr	x8, [x24]
  411000:	ldrb	w8, [x8, #50]
  411004:	cbz	w8, 410fe0 <try_implicit_rule@@Base+0x1020>
  411008:	ldr	x8, [x21, #16]
  41100c:	cbz	x8, 411020 <try_implicit_rule@@Base+0x1060>
  411010:	ldr	w9, [x8, #136]
  411014:	orr	w9, w9, #0x100
  411018:	str	w9, [x8, #136]
  41101c:	b	410fe0 <try_implicit_rule@@Base+0x1020>
  411020:	ldrh	w8, [x21, #32]
  411024:	orr	w8, w8, #0x100
  411028:	strh	w8, [x21, #32]
  41102c:	b	410fe0 <try_implicit_rule@@Base+0x1020>
  411030:	ldr	x8, [x19, #192]
  411034:	ldr	x2, [x19, #152]
  411038:	add	x8, x8, x20, lsl #5
  41103c:	ldrb	w8, [x8, #24]
  411040:	cbz	w8, 411098 <try_implicit_rule@@Base+0x10d8>
  411044:	ldr	x23, [x19, #104]
  411048:	ldr	x1, [x19, #200]
  41104c:	add	x0, x19, #0x104
  411050:	add	x22, x19, #0x104
  411054:	add	x21, x23, x2
  411058:	bl	406750 <memcpy@plt>
  41105c:	ldr	x0, [x19, #16]
  411060:	ldr	x1, [x19, #160]
  411064:	mov	x2, x23
  411068:	bl	406750 <memcpy@plt>
  41106c:	add	x0, x19, #0x104
  411070:	strb	wzr, [x22, x21]
  411074:	bl	42016c <strcache_add@@Base>
  411078:	str	x21, [x19, #104]
  41107c:	b	4110a4 <try_implicit_rule@@Base+0x10e4>
  411080:	ldr	x8, [x19, #216]
  411084:	mov	w1, #0x2f                  	// #47
  411088:	mov	x0, x26
  41108c:	sub	x2, x8, #0x1
  411090:	bl	406cf0 <memrchr@plt>
  411094:	b	410178 <try_implicit_rule@@Base+0x1b8>
  411098:	ldr	x0, [x19, #160]
  41109c:	ldr	x1, [x19, #104]
  4110a0:	bl	4203f8 <strcache_add_len@@Base>
  4110a4:	ldr	x21, [x19, #232]
  4110a8:	ldr	x11, [x19, #96]
  4110ac:	ldr	x10, [x19, #192]
  4110b0:	str	x0, [x21, #40]
  4110b4:	ldr	w8, [x21, #136]
  4110b8:	ldr	x9, [x11, #40]
  4110bc:	add	x20, x10, x20, lsl #5
  4110c0:	orr	w8, w8, #0x800
  4110c4:	str	x9, [x21, #32]
  4110c8:	str	w8, [x21, #136]
  4110cc:	ldr	x8, [x11, #8]
  4110d0:	ldr	w9, [x20, #16]!
  4110d4:	ldr	x0, [x8, x9, lsl #3]
  4110d8:	bl	40a568 <lookup_file@@Base>
  4110dc:	cbz	x0, 4110f4 <try_implicit_rule@@Base+0x1134>
  4110e0:	ldrb	w8, [x0, #136]
  4110e4:	tbz	w8, #5, 4110f4 <try_implicit_rule@@Base+0x1134>
  4110e8:	ldr	w8, [x21, #136]
  4110ec:	orr	w8, w8, #0x20
  4110f0:	str	w8, [x21, #136]
  4110f4:	ldr	x8, [x19, #96]
  4110f8:	mov	x22, x27
  4110fc:	ldrh	w8, [x8, #48]
  411100:	cmp	w8, #0x2
  411104:	b.cc	411244 <try_implicit_rule@@Base+0x1284>  // b.lo, b.ul, b.last
  411108:	ldp	x28, x9, [x19, #96]
  41110c:	ldr	x26, [x19, #232]
  411110:	ldr	x25, [x19, #104]
  411114:	mov	x24, xzr
  411118:	add	x9, x9, #0x1
  41111c:	str	x9, [x19, #224]
  411120:	ldr	w9, [x20]
  411124:	cmp	x24, x9
  411128:	b.eq	411238 <try_implicit_rule@@Base+0x1278>  // b.none
  41112c:	ldr	x8, [x28, #16]
  411130:	ldr	x9, [x19, #224]
  411134:	ldr	w8, [x8, x24, lsl #2]
  411138:	add	x8, x9, x8
  41113c:	add	x8, x8, #0xf
  411140:	and	x8, x8, #0xfffffffffffffff0
  411144:	mov	x9, sp
  411148:	sub	x22, x9, x8
  41114c:	mov	sp, x22
  411150:	mov	w0, #0x28                  	// #40
  411154:	bl	4178ac <xcalloc@@Base>
  411158:	ldr	x8, [x28, #8]
  41115c:	ldr	x9, [x28, #24]
  411160:	mov	x21, x0
  411164:	mov	x0, x22
  411168:	ldr	x1, [x8, x24, lsl #3]
  41116c:	ldr	x8, [x9, x24, lsl #3]
  411170:	mvn	x9, x1
  411174:	add	x2, x8, x9
  411178:	bl	406750 <memcpy@plt>
  41117c:	ldr	x8, [x28, #8]
  411180:	ldr	x9, [x28, #24]
  411184:	ldr	x1, [x26, #40]
  411188:	mov	x2, x25
  41118c:	ldr	x8, [x8, x24, lsl #3]
  411190:	ldr	x9, [x9, x24, lsl #3]
  411194:	mvn	x8, x8
  411198:	add	x8, x9, x8
  41119c:	add	x23, x22, x8
  4111a0:	mov	x0, x23
  4111a4:	bl	406750 <memcpy@plt>
  4111a8:	ldp	x9, x8, [x28, #16]
  4111ac:	ldr	x10, [x28, #8]
  4111b0:	add	x0, x23, x25
  4111b4:	ldr	x1, [x8, x24, lsl #3]
  4111b8:	ldr	w8, [x9, x24, lsl #2]
  4111bc:	ldr	x9, [x10, x24, lsl #3]
  4111c0:	sub	x8, x8, x1
  4111c4:	add	x8, x8, x9
  4111c8:	add	x2, x8, #0x1
  4111cc:	bl	406750 <memcpy@plt>
  4111d0:	mov	x0, x22
  4111d4:	bl	42016c <strcache_add@@Base>
  4111d8:	str	x0, [x21, #8]
  4111dc:	bl	40a5f4 <enter_file@@Base>
  4111e0:	str	x0, [x21, #16]
  4111e4:	ldr	x8, [x26, #48]
  4111e8:	str	x8, [x21]
  4111ec:	ldr	x8, [x28, #8]
  4111f0:	ldr	x0, [x8, x24, lsl #3]
  4111f4:	bl	40a568 <lookup_file@@Base>
  4111f8:	cbz	x0, 411214 <try_implicit_rule@@Base+0x1254>
  4111fc:	ldrb	w8, [x0, #136]
  411200:	tbz	w8, #5, 411214 <try_implicit_rule@@Base+0x1254>
  411204:	ldr	x8, [x21, #16]
  411208:	ldr	w9, [x8, #136]
  41120c:	orr	w9, w9, #0x20
  411210:	str	w9, [x8, #136]
  411214:	ldr	x8, [x21, #16]
  411218:	mov	x22, x27
  41121c:	ldr	w9, [x8, #136]
  411220:	orr	w9, w9, #0x800
  411224:	str	w9, [x8, #136]
  411228:	ldr	x8, [x19, #232]
  41122c:	str	x21, [x8, #48]
  411230:	ldr	x8, [x19, #96]
  411234:	ldrh	w8, [x8, #48]
  411238:	add	x24, x24, #0x1
  41123c:	cmp	x24, w8, uxth
  411240:	b.cc	411120 <try_implicit_rule@@Base+0x1160>  // b.lo, b.ul, b.last
  411244:	ldr	x20, [x19, #96]
  411248:	ldr	x0, [x19, #192]
  41124c:	bl	406cb0 <free@plt>
  411250:	mov	x0, x22
  411254:	bl	406cb0 <free@plt>
  411258:	cmp	x20, #0x0
  41125c:	cset	w0, ne  // ne = any
  411260:	mov	sp, x29
  411264:	ldp	x20, x19, [sp, #80]
  411268:	ldp	x22, x21, [sp, #64]
  41126c:	ldp	x24, x23, [sp, #48]
  411270:	ldp	x26, x25, [sp, #32]
  411274:	ldp	x28, x27, [sp, #16]
  411278:	ldp	x29, x30, [sp], #96
  41127c:	ret

0000000000411280 <stemlen_compare@@Base>:
  411280:	ldr	w9, [x0, #8]
  411284:	ldr	w10, [x1, #8]
  411288:	mov	x8, x0
  41128c:	subs	w0, w9, w10
  411290:	b.eq	411298 <stemlen_compare@@Base+0x18>  // b.none
  411294:	ret
  411298:	ldr	w8, [x8, #20]
  41129c:	ldr	w9, [x1, #20]
  4112a0:	sub	w0, w8, w9
  4112a4:	ret

00000000004112a8 <is_bourne_compatible_shell@@Base>:
  4112a8:	stp	x29, x30, [sp, #-32]!
  4112ac:	mov	w1, #0x2f                  	// #47
  4112b0:	stp	x20, x19, [sp, #16]
  4112b4:	mov	x29, sp
  4112b8:	mov	x19, x0
  4112bc:	bl	406b80 <strrchr@plt>
  4112c0:	mov	x20, x0
  4112c4:	mov	w1, #0x5c                  	// #92
  4112c8:	mov	x0, x19
  4112cc:	bl	406b80 <strrchr@plt>
  4112d0:	cmp	x20, x0
  4112d4:	csel	x8, x20, x0, hi  // hi = pmore
  4112d8:	cmp	x20, #0x0
  4112dc:	csel	x9, x20, x19, ne  // ne = any
  4112e0:	cmp	x0, #0x0
  4112e4:	csel	x9, x0, x9, ne  // ne = any
  4112e8:	ccmp	x20, #0x0, #0x4, ne  // ne = any
  4112ec:	csel	x19, x8, x9, ne  // ne = any
  4112f0:	ldrb	w8, [x19]
  4112f4:	cmp	w8, #0x5c
  4112f8:	b.eq	411304 <is_bourne_compatible_shell@@Base+0x5c>  // b.none
  4112fc:	cmp	w8, #0x2f
  411300:	b.ne	411308 <is_bourne_compatible_shell@@Base+0x60>  // b.any
  411304:	add	x19, x19, #0x1
  411308:	adrp	x1, 424000 <_IO_stdin_used@@Base+0x290>
  41130c:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  411310:	add	x1, x1, #0x1e8
  411314:	add	x20, x20, #0x7e8
  411318:	mov	x0, x19
  41131c:	bl	406c70 <strcmp@plt>
  411320:	cbz	w0, 411334 <is_bourne_compatible_shell@@Base+0x8c>
  411324:	ldr	x1, [x20], #8
  411328:	cbnz	x1, 411318 <is_bourne_compatible_shell@@Base+0x70>
  41132c:	mov	w0, wzr
  411330:	b	411338 <is_bourne_compatible_shell@@Base+0x90>
  411334:	mov	w0, #0x1                   	// #1
  411338:	ldp	x20, x19, [sp, #16]
  41133c:	ldp	x29, x30, [sp], #32
  411340:	ret

0000000000411344 <unblock_all_sigs@@Base>:
  411344:	sub	sp, sp, #0x90
  411348:	mov	x0, sp
  41134c:	stp	x29, x30, [sp, #128]
  411350:	add	x29, sp, #0x80
  411354:	bl	406a10 <sigemptyset@plt>
  411358:	mov	x1, sp
  41135c:	mov	w0, #0x2                   	// #2
  411360:	mov	x2, xzr
  411364:	bl	4067f0 <sigprocmask@plt>
  411368:	ldp	x29, x30, [sp, #128]
  41136c:	add	sp, sp, #0x90
  411370:	ret

0000000000411374 <child_handler@@Base>:
  411374:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411378:	ldr	w9, [x8, #3076]
  41137c:	add	w9, w9, #0x1
  411380:	str	w9, [x8, #3076]
  411384:	b	42348c <jobserver_signal@@Base>

0000000000411388 <reap_children@@Base>:
  411388:	sub	sp, sp, #0x100
  41138c:	stp	x22, x21, [sp, #224]
  411390:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  411394:	ldr	x8, [x21, #3048]
  411398:	stp	x24, x23, [sp, #208]
  41139c:	stp	x20, x19, [sp, #240]
  4113a0:	mov	w24, w1
  4113a4:	mov	w22, w0
  4113a8:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  4113ac:	stp	x29, x30, [sp, #160]
  4113b0:	stp	x28, x27, [sp, #176]
  4113b4:	stp	x26, x25, [sp, #192]
  4113b8:	add	x29, sp, #0xa0
  4113bc:	cbnz	x8, 4113c8 <reap_children@@Base+0x40>
  4113c0:	ldr	w8, [x19, #2920]
  4113c4:	cbz	w8, 411c48 <reap_children@@Base+0x8c0>
  4113c8:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  4113cc:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  4113d0:	mov	w8, #0x1                   	// #1
  4113d4:	str	w8, [sp, #8]
  4113d8:	ldr	w8, [sp, #8]
  4113dc:	orr	w8, w22, w8
  4113e0:	cbz	w8, 411c48 <reap_children@@Base+0x8c0>
  4113e4:	cbz	w24, 411434 <reap_children@@Base+0xac>
  4113e8:	cbz	w22, 411434 <reap_children@@Base+0xac>
  4113ec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4113f0:	ldr	x0, [x8, #2512]
  4113f4:	bl	406d40 <fflush@plt>
  4113f8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4113fc:	ldrb	w8, [x8, #3080]
  411400:	tbnz	w8, #0, 411428 <reap_children@@Base+0xa0>
  411404:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411408:	mov	w2, #0x5                   	// #5
  41140c:	mov	x0, xzr
  411410:	add	x1, x1, #0x355
  411414:	bl	406e10 <dcgettext@plt>
  411418:	mov	x2, x0
  41141c:	mov	x0, xzr
  411420:	mov	x1, xzr
  411424:	bl	418744 <error@@Base>
  411428:	mov	w8, #0x1                   	// #1
  41142c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  411430:	strb	w8, [x9, #3080]
  411434:	ldr	w8, [x26, #3076]
  411438:	str	w22, [sp, #12]
  41143c:	cbz	w8, 411448 <reap_children@@Base+0xc0>
  411440:	sub	w8, w8, #0x1
  411444:	str	w8, [x26, #3076]
  411448:	ldr	w8, [x19, #2920]
  41144c:	ldr	x22, [x21, #3048]
  411450:	cmp	w8, #0x0
  411454:	cset	w25, ne  // ne = any
  411458:	cbz	x22, 411554 <reap_children@@Base+0x1cc>
  41145c:	mov	x28, x26
  411460:	mov	x26, x22
  411464:	ldrb	w8, [x26, #80]!
  411468:	mov	x19, x21
  41146c:	mov	w21, w24
  411470:	mov	x20, x26
  411474:	ldr	w9, [x20, #-4]!
  411478:	tbnz	w9, #31, 411588 <reap_children@@Base+0x200>
  41147c:	and	w24, w8, #0x1
  411480:	eor	w8, w24, #0x1
  411484:	orr	w25, w25, w8
  411488:	mov	x27, x22
  41148c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411490:	ldrb	w8, [x8, #3236]
  411494:	tbz	w8, #2, 41151c <reap_children@@Base+0x194>
  411498:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  41149c:	mov	w2, #0x5                   	// #5
  4114a0:	mov	x0, xzr
  4114a4:	add	x1, x1, #0x379
  4114a8:	bl	406e10 <dcgettext@plt>
  4114ac:	ldr	x8, [x27, #40]
  4114b0:	ldrsw	x2, [x20]
  4114b4:	mov	x20, x0
  4114b8:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  4114bc:	ldr	x22, [x8]
  4114c0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4114c4:	add	x0, x0, #0xc18
  4114c8:	add	x1, x1, #0x511
  4114cc:	bl	406830 <sprintf@plt>
  4114d0:	ldrb	w8, [x26]
  4114d4:	adrp	x4, 426000 <_IO_stdin_used@@Base+0x2290>
  4114d8:	add	x4, x4, #0x5eb
  4114dc:	tbz	w8, #0, 4114f8 <reap_children@@Base+0x170>
  4114e0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4114e4:	mov	w2, #0x5                   	// #5
  4114e8:	mov	x0, xzr
  4114ec:	add	x1, x1, #0x397
  4114f0:	bl	406e10 <dcgettext@plt>
  4114f4:	mov	x4, x0
  4114f8:	adrp	x3, 43b000 <memcpy@GLIBC_2.17>
  4114fc:	mov	x0, x20
  411500:	mov	x1, x27
  411504:	mov	x2, x22
  411508:	add	x3, x3, #0xc18
  41150c:	bl	406ea0 <printf@plt>
  411510:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411514:	ldr	x0, [x8, #2512]
  411518:	bl	406d40 <fflush@plt>
  41151c:	ldr	x22, [x27, #32]
  411520:	cbz	x22, 41162c <reap_children@@Base+0x2a4>
  411524:	mov	x26, x22
  411528:	ldrb	w8, [x26, #80]!
  41152c:	mov	x23, x27
  411530:	mov	x27, x22
  411534:	mov	x20, x26
  411538:	ldr	w9, [x20, #-4]!
  41153c:	and	w8, w8, #0x1
  411540:	orr	w24, w24, w8
  411544:	eor	w8, w8, #0x1
  411548:	orr	w25, w25, w8
  41154c:	tbz	w9, #31, 41148c <reap_children@@Base+0x104>
  411550:	b	41158c <reap_children@@Base+0x204>
  411554:	ldr	w22, [sp, #12]
  411558:	mov	w20, wzr
  41155c:	cbz	w25, 4116cc <reap_children@@Base+0x344>
  411560:	cbz	w22, 411670 <reap_children@@Base+0x2e8>
  411564:	sub	x0, x29, #0x4
  411568:	bl	406d30 <wait@plt>
  41156c:	cmn	w0, #0x1
  411570:	b.ne	411680 <reap_children@@Base+0x2f8>  // b.any
  411574:	bl	406eb0 <__errno_location@plt>
  411578:	ldr	w8, [x0]
  41157c:	cmp	w8, #0x4
  411580:	b.eq	411564 <reap_children@@Base+0x1dc>  // b.none
  411584:	b	411c74 <reap_children@@Base+0x8ec>
  411588:	mov	x23, xzr
  41158c:	mov	w8, #0x7f                  	// #127
  411590:	stur	xzr, [x29, #-16]
  411594:	stur	w8, [x29, #-8]
  411598:	mov	w24, w21
  41159c:	mov	x21, x19
  4115a0:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  4115a4:	mov	x26, x28
  4115a8:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  4115ac:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4115b0:	ldp	w8, w9, [x29, #-12]
  4115b4:	cbnz	w8, 41187c <reap_children@@Base+0x4f4>
  4115b8:	cmp	w9, #0x7f
  4115bc:	b.ne	41187c <reap_children@@Base+0x4f4>  // b.any
  4115c0:	ldr	x0, [x22]
  4115c4:	cbz	x0, 4117fc <reap_children@@Base+0x474>
  4115c8:	add	x1, sp, #0x10
  4115cc:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  4115d0:	cmn	w0, #0x1
  4115d4:	b.ne	411600 <reap_children@@Base+0x278>  // b.any
  4115d8:	bl	406eb0 <__errno_location@plt>
  4115dc:	mov	x20, x0
  4115e0:	ldr	w8, [x20]
  4115e4:	cmp	w8, #0x4
  4115e8:	b.ne	411830 <reap_children@@Base+0x4a8>  // b.any
  4115ec:	ldr	x0, [x22]
  4115f0:	add	x1, sp, #0x10
  4115f4:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  4115f8:	cmn	w0, #0x1
  4115fc:	b.eq	4115e0 <reap_children@@Base+0x258>  // b.none
  411600:	tbnz	w0, #31, 411828 <reap_children@@Base+0x4a0>
  411604:	ldr	w8, [sp, #32]
  411608:	mov	w0, #0xd                   	// #13
  41160c:	and	w9, w8, #0xf000
  411610:	cmp	w9, #0x4, lsl #12
  411614:	b.eq	411834 <reap_children@@Base+0x4ac>  // b.none
  411618:	tbz	w8, #6, 411834 <reap_children@@Base+0x4ac>
  41161c:	ldr	x8, [sp, #64]
  411620:	cbnz	x8, 411874 <reap_children@@Base+0x4ec>
  411624:	mov	w0, #0x8                   	// #8
  411628:	b	411834 <reap_children@@Base+0x4ac>
  41162c:	cbz	w24, 411808 <reap_children@@Base+0x480>
  411630:	sub	x0, x29, #0x8
  411634:	sub	x1, x29, #0xc
  411638:	sub	x2, x29, #0x10
  41163c:	mov	w3, wzr
  411640:	bl	423670 <remote_status@@Base>
  411644:	ldr	w22, [sp, #12]
  411648:	cmp	w0, #0x0
  41164c:	mov	x26, x28
  411650:	b.le	411ac0 <reap_children@@Base+0x738>
  411654:	mov	w8, #0x1                   	// #1
  411658:	mov	w24, w21
  41165c:	mov	x21, x19
  411660:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  411664:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  411668:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  41166c:	b	411708 <reap_children@@Base+0x380>
  411670:	sub	x1, x29, #0x4
  411674:	mov	w0, #0xffffffff            	// #-1
  411678:	mov	w2, #0x1                   	// #1
  41167c:	bl	406ef0 <waitpid@plt>
  411680:	tbnz	w0, #31, 411c74 <reap_children@@Base+0x8ec>
  411684:	cbz	w0, 4116cc <reap_children@@Base+0x344>
  411688:	ldur	w9, [x29, #-4]
  41168c:	ldr	w10, [x19, #2920]
  411690:	mov	w13, #0x1ffffff             	// #33554431
  411694:	mov	w8, wzr
  411698:	ubfx	w11, w9, #8, #8
  41169c:	and	w12, w9, #0x7f
  4116a0:	stur	w11, [x29, #-8]
  4116a4:	mov	w11, #0x1000000             	// #16777216
  4116a8:	add	w11, w11, w12, lsl #24
  4116ac:	cmp	w11, w13
  4116b0:	and	w9, w9, #0x80
  4116b4:	csel	w11, w12, wzr, gt
  4116b8:	cmp	w0, w10
  4116bc:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4116c0:	stp	w9, w11, [x29, #-16]
  4116c4:	b.ne	411708 <reap_children@@Base+0x380>  // b.any
  4116c8:	b	411c68 <reap_children@@Base+0x8e0>
  4116cc:	cmp	w22, #0x0
  4116d0:	cset	w8, eq  // eq = none
  4116d4:	eor	w9, w20, #0x1
  4116d8:	orr	w8, w8, w9
  4116dc:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4116e0:	tbnz	w8, #0, 411c48 <reap_children@@Base+0x8c0>
  4116e4:	sub	x0, x29, #0x8
  4116e8:	sub	x1, x29, #0xc
  4116ec:	sub	x2, x29, #0x10
  4116f0:	mov	w3, #0x1                   	// #1
  4116f4:	bl	423670 <remote_status@@Base>
  4116f8:	tbnz	w0, #31, 411c88 <reap_children@@Base+0x900>
  4116fc:	cbz	w0, 411c48 <reap_children@@Base+0x8c0>
  411700:	str	wzr, [sp, #8]
  411704:	mov	w8, #0x1                   	// #1
  411708:	ldr	x9, [x21, #3048]
  41170c:	cbz	x9, 411c38 <reap_children@@Base+0x8b0>
  411710:	mov	x23, xzr
  411714:	mov	x22, x9
  411718:	ldr	w9, [x9, #76]
  41171c:	cmp	w9, w0
  411720:	b.ne	411734 <reap_children@@Base+0x3ac>  // b.any
  411724:	ldrb	w9, [x22, #80]
  411728:	and	w9, w9, #0x1
  41172c:	cmp	w8, w9
  411730:	b.eq	411748 <reap_children@@Base+0x3c0>  // b.none
  411734:	ldr	x9, [x22, #32]
  411738:	mov	x23, x22
  41173c:	cbnz	x9, 411714 <reap_children@@Base+0x38c>
  411740:	ldr	w22, [sp, #12]
  411744:	b	411c38 <reap_children@@Base+0x8b0>
  411748:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41174c:	ldrb	w8, [x8, #3236]
  411750:	tbz	w8, #2, 4117e8 <reap_children@@Base+0x460>
  411754:	ldp	w8, w9, [x29, #-12]
  411758:	mov	w2, #0x5                   	// #5
  41175c:	mov	x0, xzr
  411760:	orr	w8, w9, w8
  411764:	cmp	w8, #0x0
  411768:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  41176c:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  411770:	add	x8, x8, #0x3d8
  411774:	add	x9, x9, #0x3b4
  411778:	csel	x1, x9, x8, eq  // eq = none
  41177c:	bl	406e10 <dcgettext@plt>
  411780:	ldrsw	x2, [x22, #76]
  411784:	mov	x20, x0
  411788:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  41178c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411790:	add	x0, x0, #0xc18
  411794:	add	x1, x1, #0x511
  411798:	bl	406830 <sprintf@plt>
  41179c:	ldrb	w8, [x22, #80]
  4117a0:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  4117a4:	add	x3, x3, #0x5eb
  4117a8:	tbz	w8, #0, 4117c4 <reap_children@@Base+0x43c>
  4117ac:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4117b0:	mov	w2, #0x5                   	// #5
  4117b4:	mov	x0, xzr
  4117b8:	add	x1, x1, #0x397
  4117bc:	bl	406e10 <dcgettext@plt>
  4117c0:	mov	x3, x0
  4117c4:	adrp	x2, 43b000 <memcpy@GLIBC_2.17>
  4117c8:	mov	x0, x20
  4117cc:	mov	x1, x22
  4117d0:	add	x2, x2, #0xc18
  4117d4:	bl	406ea0 <printf@plt>
  4117d8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4117dc:	ldr	x0, [x8, #2512]
  4117e0:	bl	406d40 <fflush@plt>
  4117e4:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4117e8:	ldr	x8, [x28, #3064]
  4117ec:	cbz	x8, 4115b0 <reap_children@@Base+0x228>
  4117f0:	sub	x8, x8, #0x1
  4117f4:	str	x8, [x28, #3064]
  4117f8:	b	4115b0 <reap_children@@Base+0x228>
  4117fc:	mov	w8, wzr
  411800:	mov	w9, #0x7f                  	// #127
  411804:	b	41187c <reap_children@@Base+0x4f4>
  411808:	ldr	w22, [sp, #12]
  41180c:	mov	w20, wzr
  411810:	mov	w24, w21
  411814:	mov	x21, x19
  411818:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  41181c:	mov	x26, x28
  411820:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  411824:	b	41155c <reap_children@@Base+0x1d4>
  411828:	bl	406eb0 <__errno_location@plt>
  41182c:	mov	x20, x0
  411830:	ldr	w0, [x20]
  411834:	bl	406b50 <strerror@plt>
  411838:	cbz	x0, 411874 <reap_children@@Base+0x4ec>
  41183c:	ldr	x25, [x22]
  411840:	mov	x20, x0
  411844:	mov	x0, x25
  411848:	bl	406790 <strlen@plt>
  41184c:	mov	x27, x0
  411850:	mov	x0, x20
  411854:	bl	406790 <strlen@plt>
  411858:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  41185c:	add	x1, x0, x27
  411860:	mov	x0, xzr
  411864:	add	x2, x2, #0xda
  411868:	mov	x3, x25
  41186c:	mov	x4, x20
  411870:	bl	418744 <error@@Base>
  411874:	ldp	w8, w9, [x29, #-12]
  411878:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  41187c:	orr	w10, w9, w8
  411880:	cbz	w10, 4118ac <reap_children@@Base+0x524>
  411884:	cbnz	w8, 4118a4 <reap_children@@Base+0x51c>
  411888:	cmp	w9, #0x1
  41188c:	b.ne	4118a4 <reap_children@@Base+0x51c>  // b.any
  411890:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411894:	ldr	w8, [x8, #3260]
  411898:	cbz	w8, 4118a4 <reap_children@@Base+0x51c>
  41189c:	ldrb	w8, [x22, #80]
  4118a0:	tbnz	w8, #4, 4118b4 <reap_children@@Base+0x52c>
  4118a4:	mov	w27, #0x2                   	// #2
  4118a8:	b	4118b8 <reap_children@@Base+0x530>
  4118ac:	mov	w27, wzr
  4118b0:	b	4118b8 <reap_children@@Base+0x530>
  4118b4:	mov	w27, #0x1                   	// #1
  4118b8:	ldr	x25, [x22, #48]
  4118bc:	cbz	x25, 411958 <reap_children@@Base+0x5d0>
  4118c0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4118c4:	ldrb	w8, [x8, #3236]
  4118c8:	tbz	w8, #2, 4118f8 <reap_children@@Base+0x570>
  4118cc:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4118d0:	mov	w2, #0x5                   	// #5
  4118d4:	mov	x0, xzr
  4118d8:	add	x1, x1, #0x3fb
  4118dc:	bl	406e10 <dcgettext@plt>
  4118e0:	ldr	x1, [x22, #48]
  4118e4:	bl	406ea0 <printf@plt>
  4118e8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4118ec:	ldr	x0, [x8, #2512]
  4118f0:	bl	406d40 <fflush@plt>
  4118f4:	ldr	x25, [x22, #48]
  4118f8:	bl	406eb0 <__errno_location@plt>
  4118fc:	mov	x20, x0
  411900:	str	wzr, [x0]
  411904:	mov	x0, x25
  411908:	bl	406800 <remove@plt>
  41190c:	cbz	w0, 411948 <reap_children@@Base+0x5c0>
  411910:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411914:	ldrb	w8, [x8, #3236]
  411918:	tbz	w8, #2, 411948 <reap_children@@Base+0x5c0>
  41191c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411920:	mov	w2, #0x5                   	// #5
  411924:	mov	x0, xzr
  411928:	add	x1, x1, #0x41b
  41192c:	bl	406e10 <dcgettext@plt>
  411930:	ldr	x1, [x22, #48]
  411934:	ldr	w2, [x20]
  411938:	bl	406ea0 <printf@plt>
  41193c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411940:	ldr	x0, [x8, #2512]
  411944:	bl	406d40 <fflush@plt>
  411948:	ldr	x0, [x22, #48]
  41194c:	bl	406cb0 <free@plt>
  411950:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  411954:	str	xzr, [x22, #48]
  411958:	ldrb	w25, [x22, #80]
  41195c:	tbz	w25, #2, 411968 <reap_children@@Base+0x5e0>
  411960:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411964:	strb	wzr, [x8, #3084]
  411968:	cbz	w27, 411a00 <reap_children@@Base+0x678>
  41196c:	tbnz	w25, #1, 4119ec <reap_children@@Base+0x664>
  411970:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411974:	ldr	w8, [x8, #3252]
  411978:	cbnz	w8, 4119ec <reap_children@@Base+0x664>
  41197c:	cmp	w27, #0x2
  411980:	b.ne	4119a0 <reap_children@@Base+0x618>  // b.any
  411984:	ubfx	w8, w25, #6, #1
  411988:	cbnz	w8, 4119a0 <reap_children@@Base+0x618>
  41198c:	ldp	w2, w1, [x29, #-12]
  411990:	ldur	w3, [x29, #-16]
  411994:	mov	x0, x22
  411998:	mov	w4, wzr
  41199c:	bl	411c94 <reap_children@@Base+0x90c>
  4119a0:	ldr	x8, [x22, #40]
  4119a4:	cmp	w27, #0x2
  4119a8:	mov	w10, #0x2                   	// #2
  4119ac:	cinc	w10, w10, eq  // eq = none
  4119b0:	ldr	w9, [x8, #136]
  4119b4:	and	w9, w9, #0xfffffffc
  4119b8:	orr	w9, w9, w10
  4119bc:	str	w9, [x8, #136]
  4119c0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4119c4:	ldr	w8, [x8, #2364]
  4119c8:	cmn	w8, #0x1
  4119cc:	b.ne	411ae8 <reap_children@@Base+0x760>  // b.any
  4119d0:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4119d4:	add	x0, x0, #0x447
  4119d8:	bl	40a568 <lookup_file@@Base>
  4119dc:	cbz	x0, 411adc <reap_children@@Base+0x754>
  4119e0:	ldrb	w8, [x0, #137]
  4119e4:	ubfx	w8, w8, #3, #1
  4119e8:	b	411ae0 <reap_children@@Base+0x758>
  4119ec:	ldp	w2, w1, [x29, #-12]
  4119f0:	ldur	w3, [x29, #-16]
  4119f4:	mov	w4, #0x1                   	// #1
  4119f8:	mov	x0, x22
  4119fc:	bl	411c94 <reap_children@@Base+0x90c>
  411a00:	mov	x0, x22
  411a04:	bl	411e98 <reap_children@@Base+0xb10>
  411a08:	cbz	w0, 411a34 <reap_children@@Base+0x6ac>
  411a0c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411a10:	ldr	w8, [x8, #2592]
  411a14:	cbz	w8, 411a4c <reap_children@@Base+0x6c4>
  411a18:	ldr	x8, [x22, #40]
  411a1c:	ldr	w9, [x8, #136]
  411a20:	orr	w9, w9, #0x3
  411a24:	str	w9, [x8, #136]
  411a28:	ldr	x8, [x22, #40]
  411a2c:	ldr	w8, [x8, #136]
  411a30:	b	411aa8 <reap_children@@Base+0x720>
  411a34:	ldr	x8, [x22, #40]
  411a38:	mov	w27, wzr
  411a3c:	ldr	w9, [x8, #136]
  411a40:	and	w9, w9, #0xfffffffc
  411a44:	str	w9, [x8, #136]
  411a48:	b	411afc <reap_children@@Base+0x774>
  411a4c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411a50:	ldr	w8, [x8, #3304]
  411a54:	cmp	w8, #0x1
  411a58:	b.ne	411a64 <reap_children@@Base+0x6dc>  // b.any
  411a5c:	add	x0, x22, #0x10
  411a60:	bl	417d88 <output_dump@@Base>
  411a64:	mov	w0, wzr
  411a68:	bl	423660 <start_remote_job_p@@Base>
  411a6c:	ldrb	w8, [x22, #80]
  411a70:	bfxil	w8, w0, #0, #1
  411a74:	mov	x0, x22
  411a78:	strb	w8, [x22, #80]
  411a7c:	bl	411f10 <reap_children@@Base+0xb88>
  411a80:	adrp	x1, 43f000 <shell_var@@Base+0x20>
  411a84:	mov	w0, #0x1                   	// #1
  411a88:	add	x1, x1, #0x60
  411a8c:	mov	x2, xzr
  411a90:	bl	4067f0 <sigprocmask@plt>
  411a94:	ldr	x8, [x22, #40]
  411a98:	ldr	w8, [x8, #136]
  411a9c:	and	w9, w8, #0xc
  411aa0:	cmp	w9, #0x8
  411aa4:	b.eq	411740 <reap_children@@Base+0x3b8>  // b.none
  411aa8:	tst	w8, #0x3
  411aac:	b.eq	411ab8 <reap_children@@Base+0x730>  // b.none
  411ab0:	mov	x0, x22
  411ab4:	bl	4087a0 <delete_child_targets@@Base>
  411ab8:	mov	w27, wzr
  411abc:	b	411afc <reap_children@@Base+0x774>
  411ac0:	mov	w24, w21
  411ac4:	mov	x21, x19
  411ac8:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  411acc:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  411ad0:	tbnz	w0, #31, 411c88 <reap_children@@Base+0x900>
  411ad4:	mov	w20, #0x1                   	// #1
  411ad8:	b	41155c <reap_children@@Base+0x1d4>
  411adc:	mov	w8, wzr
  411ae0:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  411ae4:	str	w8, [x9, #2364]
  411ae8:	ldur	w9, [x29, #-12]
  411aec:	orr	w8, w8, w9
  411af0:	cbz	w8, 411afc <reap_children@@Base+0x774>
  411af4:	mov	x0, x22
  411af8:	bl	4087a0 <delete_child_targets@@Base>
  411afc:	add	x0, x22, #0x10
  411b00:	bl	417d88 <output_dump@@Base>
  411b04:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411b08:	ldr	w8, [x8, #2592]
  411b0c:	cbnz	w8, 411b18 <reap_children@@Base+0x790>
  411b10:	ldr	x0, [x22, #40]
  411b14:	bl	41e888 <notice_finished_file@@Base>
  411b18:	adrp	x1, 43f000 <shell_var@@Base+0x20>
  411b1c:	mov	w0, wzr
  411b20:	add	x1, x1, #0x60
  411b24:	mov	x2, xzr
  411b28:	bl	4067f0 <sigprocmask@plt>
  411b2c:	ldr	w8, [x22, #76]
  411b30:	cmp	w8, #0x1
  411b34:	b.lt	411bc0 <reap_children@@Base+0x838>  // b.tstop
  411b38:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411b3c:	ldrb	w8, [x8, #3236]
  411b40:	tbz	w8, #2, 411bc0 <reap_children@@Base+0x838>
  411b44:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411b48:	mov	w2, #0x5                   	// #5
  411b4c:	mov	x0, xzr
  411b50:	add	x1, x1, #0x458
  411b54:	bl	406e10 <dcgettext@plt>
  411b58:	ldrsw	x2, [x22, #76]
  411b5c:	mov	x20, x0
  411b60:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  411b64:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411b68:	add	x0, x0, #0xc18
  411b6c:	add	x1, x1, #0x511
  411b70:	bl	406830 <sprintf@plt>
  411b74:	ldrb	w8, [x22, #80]
  411b78:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  411b7c:	add	x3, x3, #0x5eb
  411b80:	tbz	w8, #0, 411b9c <reap_children@@Base+0x814>
  411b84:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411b88:	mov	w2, #0x5                   	// #5
  411b8c:	mov	x0, xzr
  411b90:	add	x1, x1, #0x397
  411b94:	bl	406e10 <dcgettext@plt>
  411b98:	mov	x3, x0
  411b9c:	adrp	x2, 43b000 <memcpy@GLIBC_2.17>
  411ba0:	mov	x0, x20
  411ba4:	mov	x1, x22
  411ba8:	add	x2, x2, #0xc18
  411bac:	bl	406ea0 <printf@plt>
  411bb0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411bb4:	ldr	x0, [x8, #2512]
  411bb8:	bl	406d40 <fflush@plt>
  411bbc:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  411bc0:	ldr	w8, [x20, #3056]
  411bc4:	cbz	w8, 411bd8 <reap_children@@Base+0x850>
  411bc8:	ldrb	w9, [x22, #80]
  411bcc:	ubfx	w9, w9, #5, #1
  411bd0:	sub	w8, w8, w9
  411bd4:	str	w8, [x20, #3056]
  411bd8:	ldr	x8, [x22, #32]
  411bdc:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  411be0:	add	x9, x23, #0x20
  411be4:	cmp	x23, #0x0
  411be8:	add	x10, x10, #0xbe8
  411bec:	csel	x9, x10, x9, eq  // eq = none
  411bf0:	mov	x0, x22
  411bf4:	str	x8, [x9]
  411bf8:	bl	41240c <reap_children@@Base+0x1084>
  411bfc:	adrp	x1, 43f000 <shell_var@@Base+0x20>
  411c00:	mov	w0, #0x1                   	// #1
  411c04:	add	x1, x1, #0x60
  411c08:	mov	x2, xzr
  411c0c:	bl	4067f0 <sigprocmask@plt>
  411c10:	mov	w22, wzr
  411c14:	tbnz	w25, #6, 411c38 <reap_children@@Base+0x8b0>
  411c18:	cbnz	w24, 411c38 <reap_children@@Base+0x8b0>
  411c1c:	cbz	w27, 411c38 <reap_children@@Base+0x8b0>
  411c20:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  411c24:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  411c28:	ldr	w8, [x8, #28]
  411c2c:	ldr	w9, [x9, #2592]
  411c30:	orr	w8, w9, w8
  411c34:	cbz	w8, 411c80 <reap_children@@Base+0x8f8>
  411c38:	ldr	x8, [x21, #3048]
  411c3c:	cbnz	x8, 4113d8 <reap_children@@Base+0x50>
  411c40:	ldr	w8, [x19, #2920]
  411c44:	cbnz	w8, 4113d8 <reap_children@@Base+0x50>
  411c48:	ldp	x20, x19, [sp, #240]
  411c4c:	ldp	x22, x21, [sp, #224]
  411c50:	ldp	x24, x23, [sp, #208]
  411c54:	ldp	x26, x25, [sp, #192]
  411c58:	ldp	x28, x27, [sp, #176]
  411c5c:	ldp	x29, x30, [sp, #160]
  411c60:	add	sp, sp, #0x100
  411c64:	ret
  411c68:	ldp	w1, w0, [x29, #-12]
  411c6c:	bl	40c848 <shell_completed@@Base>
  411c70:	b	411c48 <reap_children@@Base+0x8c0>
  411c74:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  411c78:	add	x0, x0, #0x3af
  411c7c:	bl	417cc8 <pfatal_with_name@@Base>
  411c80:	mov	w0, w27
  411c84:	bl	4168f8 <die@@Base>
  411c88:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  411c8c:	add	x0, x0, #0x3a1
  411c90:	bl	417cc8 <pfatal_with_name@@Base>
  411c94:	stp	x29, x30, [sp, #-96]!
  411c98:	stp	x28, x27, [sp, #16]
  411c9c:	stp	x26, x25, [sp, #32]
  411ca0:	stp	x24, x23, [sp, #48]
  411ca4:	stp	x22, x21, [sp, #64]
  411ca8:	stp	x20, x19, [sp, #80]
  411cac:	ldr	x27, [x0, #40]
  411cb0:	mov	w22, w4
  411cb4:	mov	w21, w2
  411cb8:	mov	x24, x0
  411cbc:	ldr	x28, [x27, #32]
  411cc0:	mov	w19, w1
  411cc4:	mov	x29, sp
  411cc8:	cbz	w4, 411cd8 <reap_children@@Base+0x950>
  411ccc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  411cd0:	ldr	w8, [x8, #3232]
  411cd4:	cbnz	w8, 411e78 <reap_children@@Base+0xaf0>
  411cd8:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  411cdc:	add	x20, x20, #0x5eb
  411ce0:	cbz	w21, 411d00 <reap_children@@Base+0x978>
  411ce4:	cbz	w3, 411d00 <reap_children@@Base+0x978>
  411ce8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411cec:	add	x1, x1, #0x575
  411cf0:	mov	w2, #0x5                   	// #5
  411cf4:	mov	x0, xzr
  411cf8:	bl	406e10 <dcgettext@plt>
  411cfc:	mov	x20, x0
  411d00:	cbz	w22, 411d28 <reap_children@@Base+0x9a0>
  411d04:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411d08:	add	x1, x1, #0x584
  411d0c:	mov	w2, #0x5                   	// #5
  411d10:	mov	x0, xzr
  411d14:	bl	406e10 <dcgettext@plt>
  411d18:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  411d1c:	mov	x23, x0
  411d20:	add	x22, x22, #0x5eb
  411d24:	b	411d38 <reap_children@@Base+0x9b0>
  411d28:	adrp	x22, 428000 <_IO_stdin_used@@Base+0x4290>
  411d2c:	adrp	x23, 426000 <_IO_stdin_used@@Base+0x2290>
  411d30:	add	x22, x22, #0x89b
  411d34:	add	x23, x23, #0x5eb
  411d38:	ldr	x26, [x28]
  411d3c:	cbz	x26, 411d7c <reap_children@@Base+0x9f4>
  411d40:	mov	x0, x26
  411d44:	bl	406790 <strlen@plt>
  411d48:	add	x9, x0, #0x2a
  411d4c:	mov	x8, sp
  411d50:	and	x9, x9, #0xfffffffffffffff0
  411d54:	sub	x25, x8, x9
  411d58:	mov	sp, x25
  411d5c:	ldp	x8, x9, [x28, #8]
  411d60:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411d64:	add	x1, x1, #0x50e
  411d68:	mov	x0, x25
  411d6c:	add	x3, x9, x8
  411d70:	mov	x2, x26
  411d74:	bl	406830 <sprintf@plt>
  411d78:	b	411d94 <reap_children@@Base+0xa0c>
  411d7c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411d80:	add	x1, x1, #0x504
  411d84:	mov	w2, #0x5                   	// #5
  411d88:	mov	x0, xzr
  411d8c:	bl	406e10 <dcgettext@plt>
  411d90:	mov	x25, x0
  411d94:	mov	x0, x22
  411d98:	bl	406790 <strlen@plt>
  411d9c:	mov	x26, x0
  411da0:	mov	x0, x25
  411da4:	bl	406790 <strlen@plt>
  411da8:	ldr	x8, [x27]
  411dac:	add	x26, x0, x26
  411db0:	mov	x0, x8
  411db4:	bl	406790 <strlen@plt>
  411db8:	add	x26, x26, x0
  411dbc:	mov	x0, x23
  411dc0:	bl	406790 <strlen@plt>
  411dc4:	ldrb	w8, [x24, #24]
  411dc8:	add	x9, x24, #0x10
  411dcc:	adrp	x24, 43c000 <stopchar_map@@Base+0x310>
  411dd0:	add	x26, x26, x0
  411dd4:	tst	w8, #0x1
  411dd8:	csel	x8, xzr, x9, eq  // eq = none
  411ddc:	str	x8, [x24, #1472]
  411de0:	bl	41e7cc <show_goal_error@@Base>
  411de4:	cbz	w21, 411e38 <reap_children@@Base+0xab0>
  411de8:	mov	w0, w21
  411dec:	bl	406e70 <strsignal@plt>
  411df0:	mov	x19, x0
  411df4:	bl	406790 <strlen@plt>
  411df8:	add	x21, x0, x26
  411dfc:	mov	x0, x20
  411e00:	bl	406790 <strlen@plt>
  411e04:	ldr	x5, [x27]
  411e08:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  411e0c:	add	x1, x21, x0
  411e10:	add	x2, x2, #0x5a5
  411e14:	str	x23, [sp, #-16]!
  411e18:	mov	x0, xzr
  411e1c:	mov	x3, x22
  411e20:	mov	x4, x25
  411e24:	mov	x6, x19
  411e28:	mov	x7, x20
  411e2c:	bl	418744 <error@@Base>
  411e30:	add	sp, sp, #0x10
  411e34:	b	411e74 <reap_children@@Base+0xaec>
  411e38:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  411e3c:	add	x1, x1, #0x58f
  411e40:	mov	w2, #0x5                   	// #5
  411e44:	mov	x0, xzr
  411e48:	add	x20, x26, #0x14
  411e4c:	bl	406e10 <dcgettext@plt>
  411e50:	ldr	x5, [x27]
  411e54:	mov	x2, x0
  411e58:	mov	x0, xzr
  411e5c:	mov	x1, x20
  411e60:	mov	x3, x22
  411e64:	mov	x4, x25
  411e68:	mov	w6, w19
  411e6c:	mov	x7, x23
  411e70:	bl	418744 <error@@Base>
  411e74:	str	xzr, [x24, #1472]
  411e78:	mov	sp, x29
  411e7c:	ldp	x20, x19, [sp, #80]
  411e80:	ldp	x22, x21, [sp, #64]
  411e84:	ldp	x24, x23, [sp, #48]
  411e88:	ldp	x26, x25, [sp, #32]
  411e8c:	ldp	x28, x27, [sp, #16]
  411e90:	ldp	x29, x30, [sp], #96
  411e94:	ret
  411e98:	ldr	x8, [x0, #64]
  411e9c:	cbz	x8, 411eb0 <reap_children@@Base+0xb28>
  411ea0:	ldrb	w9, [x8]
  411ea4:	ldr	w8, [x0, #72]
  411ea8:	cbz	w9, 411eb4 <reap_children@@Base+0xb2c>
  411eac:	b	411ef4 <reap_children@@Base+0xb6c>
  411eb0:	ldr	w8, [x0, #72]
  411eb4:	ldr	x9, [x0, #40]
  411eb8:	ldr	x9, [x9, #32]
  411ebc:	ldrh	w10, [x9, #48]
  411ec0:	cmp	w8, w10
  411ec4:	b.eq	411ee4 <reap_children@@Base+0xb5c>  // b.none
  411ec8:	ldr	x9, [x0, #56]
  411ecc:	add	w10, w8, #0x1
  411ed0:	str	w10, [x0, #72]
  411ed4:	ldr	x8, [x9, w8, uxtw #3]
  411ed8:	str	x8, [x0, #64]
  411edc:	cbnz	x8, 411ea0 <reap_children@@Base+0xb18>
  411ee0:	b	411eb0 <reap_children@@Base+0xb28>
  411ee4:	mov	x10, xzr
  411ee8:	mov	w8, wzr
  411eec:	str	xzr, [x0, #64]
  411ef0:	b	411f04 <reap_children@@Base+0xb7c>
  411ef4:	ldr	x9, [x0, #40]
  411ef8:	sub	w10, w8, #0x1
  411efc:	mov	w8, #0x1                   	// #1
  411f00:	ldr	x9, [x9, #32]
  411f04:	mov	w0, w8
  411f08:	str	x10, [x9, #16]
  411f0c:	ret
  411f10:	sub	sp, sp, #0x50
  411f14:	stp	x29, x30, [sp, #16]
  411f18:	stp	x24, x23, [sp, #32]
  411f1c:	stp	x22, x21, [sp, #48]
  411f20:	stp	x20, x19, [sp, #64]
  411f24:	ldr	x22, [x0, #64]
  411f28:	mov	x19, x0
  411f2c:	add	x29, sp, #0x10
  411f30:	cbz	x22, 412248 <reap_children@@Base+0xec0>
  411f34:	ldr	x8, [x19, #40]
  411f38:	ldr	w10, [x19, #72]
  411f3c:	ldr	x9, [x8, #32]
  411f40:	ldr	w12, [x8, #132]
  411f44:	ldr	x11, [x9, #40]
  411f48:	sub	w9, w10, #0x1
  411f4c:	ldrb	w10, [x19, #80]
  411f50:	ldrb	w11, [x11, w9, uxtw]
  411f54:	orr	w24, w12, w11
  411f58:	lsr	w11, w24, #1
  411f5c:	lsr	w11, w11, #1
  411f60:	bfi	w10, w11, #1, #1
  411f64:	adrp	x11, 43b000 <memcpy@GLIBC_2.17>
  411f68:	add	x11, x11, #0xcf0
  411f6c:	strb	w10, [x19, #80]
  411f70:	ldrb	w12, [x22]
  411f74:	cmp	w12, #0x2c
  411f78:	b.le	411f94 <reap_children@@Base+0xc0c>
  411f7c:	cmp	w12, #0x2d
  411f80:	b.eq	411fa4 <reap_children@@Base+0xc1c>  // b.none
  411f84:	cmp	w12, #0x40
  411f88:	b.ne	411fb4 <reap_children@@Base+0xc2c>  // b.any
  411f8c:	orr	w24, w24, #0x2
  411f90:	b	411fbc <reap_children@@Base+0xc34>
  411f94:	cmp	w12, #0x2b
  411f98:	b.ne	411fb0 <reap_children@@Base+0xc28>  // b.any
  411f9c:	orr	w24, w24, #0x1
  411fa0:	b	411fbc <reap_children@@Base+0xc34>
  411fa4:	orr	w10, w10, #0x2
  411fa8:	strb	w10, [x19, #80]
  411fac:	b	411fbc <reap_children@@Base+0xc34>
  411fb0:	cbz	w12, 411fc4 <reap_children@@Base+0xc3c>
  411fb4:	ldrh	w12, [x11, x12, lsl #1]
  411fb8:	tbz	w12, #1, 411fc4 <reap_children@@Base+0xc3c>
  411fbc:	add	x22, x22, #0x1
  411fc0:	b	411f70 <reap_children@@Base+0xbe8>
  411fc4:	ubfiz	w11, w24, #4, #1
  411fc8:	and	w10, w10, #0xffffffef
  411fcc:	orr	w10, w10, w11
  411fd0:	strb	w10, [x19, #80]
  411fd4:	ldr	x8, [x8, #32]
  411fd8:	and	w20, w24, #0x1
  411fdc:	ldr	x8, [x8, #40]
  411fe0:	ldrb	w10, [x8, x9]
  411fe4:	orr	w10, w10, w20
  411fe8:	strb	w10, [x8, x9]
  411fec:	ldrb	w11, [x22]
  411ff0:	mov	x8, x22
  411ff4:	cbz	w11, 412034 <reap_children@@Base+0xcac>
  411ff8:	ldr	x8, [x19, #40]
  411ffc:	mov	x10, x22
  412000:	ldr	x8, [x8, #32]
  412004:	ldrb	w9, [x8, #50]
  412008:	mov	x8, x22
  41200c:	strb	w11, [x8], #1
  412010:	ldrb	w11, [x10]
  412014:	cmp	w11, #0xa
  412018:	b.ne	41202c <reap_children@@Base+0xca4>  // b.any
  41201c:	mov	x11, x10
  412020:	ldrb	w12, [x11, #1]!
  412024:	cmp	w12, w9
  412028:	csel	x10, x11, x10, eq  // eq = none
  41202c:	ldrb	w11, [x10, #1]!
  412030:	cbnz	w11, 41200c <reap_children@@Base+0xc84>
  412034:	strb	wzr, [x8]
  412038:	str	xzr, [sp, #8]
  41203c:	ldr	x2, [x19, #40]
  412040:	add	x1, sp, #0x8
  412044:	mov	x0, x22
  412048:	bl	413380 <construct_command_argv@@Base>
  41204c:	ldr	x8, [sp, #8]
  412050:	mov	x23, x0
  412054:	cbz	x8, 412074 <reap_children@@Base+0xcec>
  412058:	add	x9, x8, #0x1
  41205c:	str	x9, [sp, #8]
  412060:	strb	wzr, [x8]
  412064:	ldr	x8, [sp, #8]
  412068:	str	x8, [x19, #64]
  41206c:	cbz	w20, 41207c <reap_children@@Base+0xcf4>
  412070:	b	4120bc <reap_children@@Base+0xd34>
  412074:	str	xzr, [x19, #64]
  412078:	cbnz	w20, 4120bc <reap_children@@Base+0xd34>
  41207c:	cbz	x23, 4120bc <reap_children@@Base+0xd34>
  412080:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412084:	ldr	w8, [x8, #3260]
  412088:	cbz	w8, 4120bc <reap_children@@Base+0xd34>
  41208c:	ldr	x0, [x23]
  412090:	bl	406cb0 <free@plt>
  412094:	mov	x0, x23
  412098:	bl	406cb0 <free@plt>
  41209c:	ldr	x8, [x19, #40]
  4120a0:	ldr	w9, [x8, #136]
  4120a4:	and	w9, w9, #0xfffffffc
  4120a8:	orr	w9, w9, #0x2
  4120ac:	str	w9, [x8, #136]
  4120b0:	ldr	x0, [x19, #40]
  4120b4:	bl	41e888 <notice_finished_file@@Base>
  4120b8:	b	41228c <reap_children@@Base+0xf04>
  4120bc:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  4120c0:	ldr	w8, [x8, #228]
  4120c4:	cmp	w20, #0x0
  4120c8:	cset	w9, ne  // ne = any
  4120cc:	cmp	w8, #0x0
  4120d0:	cset	w8, eq  // eq = none
  4120d4:	orr	w8, w9, w8
  4120d8:	cmp	w8, #0x0
  4120dc:	csel	x21, x23, xzr, ne  // ne = any
  4120e0:	tbnz	w8, #0, 4120f8 <reap_children@@Base+0xd70>
  4120e4:	cbz	x23, 4120f8 <reap_children@@Base+0xd70>
  4120e8:	ldr	x0, [x23]
  4120ec:	bl	406cb0 <free@plt>
  4120f0:	mov	x0, x23
  4120f4:	b	412244 <reap_children@@Base+0xebc>
  4120f8:	cbz	x21, 412248 <reap_children@@Base+0xec0>
  4120fc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412100:	ldr	w8, [x8, #3304]
  412104:	cbz	w8, 41211c <reap_children@@Base+0xd94>
  412108:	cmp	w20, #0x0
  41210c:	cset	w9, eq  // eq = none
  412110:	cmp	w8, #0x3
  412114:	cset	w8, eq  // eq = none
  412118:	orr	w8, w8, w9
  41211c:	ldrb	w9, [x19, #24]
  412120:	add	x0, x19, #0x10
  412124:	and	w9, w9, #0xfe
  412128:	orr	w9, w9, w8
  41212c:	strb	w9, [x19, #24]
  412130:	cbz	w8, 412140 <reap_children@@Base+0xdb8>
  412134:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  412138:	str	x0, [x8, #1472]
  41213c:	b	41214c <reap_children@@Base+0xdc4>
  412140:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  412144:	str	xzr, [x8, #1472]
  412148:	bl	417d88 <output_dump@@Base>
  41214c:	adrp	x23, 43f000 <shell_var@@Base+0x20>
  412150:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412154:	ldr	w9, [x23, #24]
  412158:	ldr	w8, [x8, #3308]
  41215c:	orr	w8, w8, w9
  412160:	cbz	w8, 412188 <reap_children@@Base+0xe00>
  412164:	mov	x0, x22
  412168:	bl	406790 <strlen@plt>
  41216c:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  412170:	mov	x1, x0
  412174:	add	x2, x2, #0x96c
  412178:	mov	w0, wzr
  41217c:	mov	x3, x22
  412180:	bl	4185c0 <message@@Base>
  412184:	b	41219c <reap_children@@Base+0xe14>
  412188:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41218c:	ldr	w8, [x8, #3232]
  412190:	and	w9, w24, #0x2
  412194:	orr	w8, w8, w9
  412198:	cbz	w8, 412164 <reap_children@@Base+0xddc>
  41219c:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4121a0:	ldr	w9, [x8, #1624]
  4121a4:	add	w9, w9, #0x1
  4121a8:	str	w9, [x8, #1624]
  4121ac:	ldr	x22, [x21]
  4121b0:	cbz	x22, 41222c <reap_children@@Base+0xea4>
  4121b4:	mov	x0, x22
  4121b8:	bl	4112a8 <is_bourne_compatible_shell@@Base>
  4121bc:	cbz	w0, 41222c <reap_children@@Base+0xea4>
  4121c0:	ldr	x8, [x21, #8]
  4121c4:	cbz	x8, 41222c <reap_children@@Base+0xea4>
  4121c8:	ldrb	w9, [x8]
  4121cc:	cmp	w9, #0x2d
  4121d0:	b.ne	41222c <reap_children@@Base+0xea4>  // b.any
  4121d4:	ldrb	w9, [x8, #1]
  4121d8:	cmp	w9, #0x65
  4121dc:	b.eq	4121f4 <reap_children@@Base+0xe6c>  // b.none
  4121e0:	cmp	w9, #0x63
  4121e4:	b.ne	41222c <reap_children@@Base+0xea4>  // b.any
  4121e8:	ldrb	w8, [x8, #2]
  4121ec:	cbnz	w8, 41222c <reap_children@@Base+0xea4>
  4121f0:	b	412208 <reap_children@@Base+0xe80>
  4121f4:	ldrb	w9, [x8, #2]
  4121f8:	cmp	w9, #0x63
  4121fc:	b.ne	41222c <reap_children@@Base+0xea4>  // b.any
  412200:	ldrb	w8, [x8, #3]
  412204:	cbnz	w8, 41222c <reap_children@@Base+0xea4>
  412208:	ldr	x8, [x21, #16]
  41220c:	cbz	x8, 41222c <reap_children@@Base+0xea4>
  412210:	ldrb	w9, [x8]
  412214:	cmp	w9, #0x3a
  412218:	b.ne	41222c <reap_children@@Base+0xea4>  // b.any
  41221c:	ldrb	w8, [x8, #1]
  412220:	cbnz	w8, 41222c <reap_children@@Base+0xea4>
  412224:	ldr	x8, [x21, #24]
  412228:	cbz	x8, 412238 <reap_children@@Base+0xeb0>
  41222c:	cbnz	w20, 4122a4 <reap_children@@Base+0xf1c>
  412230:	ldr	w8, [x23, #24]
  412234:	cbz	w8, 4122a4 <reap_children@@Base+0xf1c>
  412238:	mov	x0, x22
  41223c:	bl	406cb0 <free@plt>
  412240:	mov	x0, x21
  412244:	bl	406cb0 <free@plt>
  412248:	mov	x0, x19
  41224c:	bl	411e98 <reap_children@@Base+0xb10>
  412250:	cbz	w0, 412260 <reap_children@@Base+0xed8>
  412254:	mov	x0, x19
  412258:	bl	411f10 <reap_children@@Base+0xb88>
  41225c:	b	412284 <reap_children@@Base+0xefc>
  412260:	ldr	x0, [x19, #40]
  412264:	mov	w1, #0x2                   	// #2
  412268:	bl	40b608 <set_command_state@@Base>
  41226c:	ldr	x8, [x19, #40]
  412270:	ldr	w9, [x8, #136]
  412274:	and	w9, w9, #0xfffffffc
  412278:	str	w9, [x8, #136]
  41227c:	ldr	x0, [x19, #40]
  412280:	bl	41e888 <notice_finished_file@@Base>
  412284:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  412288:	str	xzr, [x8, #1472]
  41228c:	ldp	x20, x19, [sp, #64]
  412290:	ldp	x22, x21, [sp, #48]
  412294:	ldp	x24, x23, [sp, #32]
  412298:	ldp	x29, x30, [sp, #16]
  41229c:	add	sp, sp, #0x50
  4122a0:	ret
  4122a4:	bl	418394 <output_start@@Base>
  4122a8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4122ac:	ldr	x0, [x8, #2512]
  4122b0:	bl	406d40 <fflush@plt>
  4122b4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4122b8:	ldr	x0, [x8, #2488]
  4122bc:	bl	406d40 <fflush@plt>
  4122c0:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  4122c4:	ldrb	w9, [x23, #3084]
  4122c8:	ldrb	w8, [x19, #80]
  4122cc:	mov	w10, #0x4                   	// #4
  4122d0:	cmp	w9, #0x0
  4122d4:	csel	w10, wzr, w10, ne  // ne = any
  4122d8:	and	w8, w8, #0xfffffffb
  4122dc:	orr	w8, w8, w10
  4122e0:	strb	w8, [x19, #80]
  4122e4:	tbnz	w9, #0, 4122f0 <reap_children@@Base+0xf68>
  4122e8:	mov	w9, #0x1                   	// #1
  4122ec:	strb	w9, [x23, #3084]
  4122f0:	ldr	x22, [x19, #8]
  4122f4:	and	w8, w8, #0xfffffff7
  4122f8:	strb	w8, [x19, #80]
  4122fc:	cbnz	x22, 412314 <reap_children@@Base+0xf8c>
  412300:	ldr	x0, [x19, #40]
  412304:	bl	421b08 <target_environment@@Base>
  412308:	ldrb	w8, [x19, #80]
  41230c:	mov	x22, x0
  412310:	str	x0, [x19, #8]
  412314:	tbz	w8, #0, 412348 <reap_children@@Base+0xfc0>
  412318:	tbnz	w8, #2, 412328 <reap_children@@Base+0xfa0>
  41231c:	bl	42360c <get_bad_stdin@@Base>
  412320:	mov	w2, w0
  412324:	b	41232c <reap_children@@Base+0xfa4>
  412328:	mov	w2, wzr
  41232c:	add	x3, sp, #0x8
  412330:	mov	x4, sp
  412334:	add	x5, sp, #0x4
  412338:	mov	x0, x21
  41233c:	mov	x1, x22
  412340:	bl	423668 <start_remote_job@@Base>
  412344:	cbz	w0, 4123d4 <reap_children@@Base+0x104c>
  412348:	adrp	x1, 43f000 <shell_var@@Base+0x20>
  41234c:	add	x1, x1, #0x60
  412350:	mov	w0, wzr
  412354:	mov	x2, xzr
  412358:	bl	4067f0 <sigprocmask@plt>
  41235c:	ldrb	w8, [x19, #80]
  412360:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  412364:	mov	w0, w20
  412368:	and	w8, w8, #0xfe
  41236c:	strb	w8, [x19, #80]
  412370:	ldr	x23, [x22, #2528]
  412374:	bl	4233b0 <jobserver_pre_child@@Base>
  412378:	ldrb	w8, [x19, #80]
  41237c:	mov	x0, x19
  412380:	mov	x2, x21
  412384:	ubfx	w1, w8, #2, #1
  412388:	bl	412e30 <child_execute_job@@Base>
  41238c:	str	w0, [x19, #76]
  412390:	mov	w0, w20
  412394:	str	x23, [x22, #2528]
  412398:	bl	423458 <jobserver_post_child@@Base>
  41239c:	ldr	w8, [x19, #76]
  4123a0:	tbnz	w8, #31, 4123b4 <reap_children@@Base+0x102c>
  4123a4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4123a8:	ldr	x9, [x8, #3064]
  4123ac:	add	x9, x9, #0x1
  4123b0:	str	x9, [x8, #3064]
  4123b4:	ldr	x0, [x19, #40]
  4123b8:	mov	w1, #0x2                   	// #2
  4123bc:	bl	40b608 <set_command_state@@Base>
  4123c0:	ldr	x0, [x21]
  4123c4:	bl	406cb0 <free@plt>
  4123c8:	mov	x0, x21
  4123cc:	bl	406cb0 <free@plt>
  4123d0:	b	412284 <reap_children@@Base+0xefc>
  4123d4:	ldrb	w8, [x19, #80]
  4123d8:	tbz	w8, #2, 4123f0 <reap_children@@Base+0x1068>
  4123dc:	ldr	w9, [sp, #4]
  4123e0:	cbnz	w9, 4123f0 <reap_children@@Base+0x1068>
  4123e4:	and	w8, w8, #0xfffffffb
  4123e8:	strb	w8, [x19, #80]
  4123ec:	strb	wzr, [x23, #3084]
  4123f0:	ldrb	w9, [sp, #8]
  4123f4:	bfxil	w8, w9, #0, #1
  4123f8:	strb	w8, [x19, #80]
  4123fc:	ldr	w8, [sp]
  412400:	str	w8, [x19, #76]
  412404:	tbz	w8, #31, 4123a4 <reap_children@@Base+0x101c>
  412408:	b	4123b4 <reap_children@@Base+0x102c>
  41240c:	stp	x29, x30, [sp, #-32]!
  412410:	stp	x20, x19, [sp, #16]
  412414:	mov	x19, x0
  412418:	add	x0, x0, #0x10
  41241c:	mov	x29, sp
  412420:	bl	418308 <output_close@@Base>
  412424:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  412428:	ldr	w8, [x20, #3072]
  41242c:	cbz	w8, 412534 <reap_children@@Base+0x11ac>
  412430:	bl	423230 <jobserver_enabled@@Base>
  412434:	cbz	w0, 412488 <reap_children@@Base+0x1100>
  412438:	ldr	w8, [x20, #3072]
  41243c:	cmp	w8, #0x2
  412440:	b.cc	412488 <reap_children@@Base+0x1100>  // b.lo, b.ul, b.last
  412444:	mov	w0, #0x1                   	// #1
  412448:	bl	423284 <jobserver_release@@Base>
  41244c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412450:	ldrb	w8, [x8, #3236]
  412454:	tbz	w8, #2, 412488 <reap_children@@Base+0x1100>
  412458:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  41245c:	add	x1, x1, #0x5ec
  412460:	mov	w2, #0x5                   	// #5
  412464:	mov	x0, xzr
  412468:	bl	406e10 <dcgettext@plt>
  41246c:	ldr	x8, [x19, #40]
  412470:	mov	x1, x19
  412474:	ldr	x2, [x8]
  412478:	bl	406ea0 <printf@plt>
  41247c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412480:	ldr	x0, [x8, #2512]
  412484:	bl	406d40 <fflush@plt>
  412488:	ldr	w8, [x20, #3072]
  41248c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  412490:	ldr	w9, [x9, #2592]
  412494:	sub	w8, w8, #0x1
  412498:	str	w8, [x20, #3072]
  41249c:	cbz	w9, 4124ac <reap_children@@Base+0x1124>
  4124a0:	ldp	x20, x19, [sp, #16]
  4124a4:	ldp	x29, x30, [sp], #32
  4124a8:	ret
  4124ac:	ldr	x0, [x19, #56]
  4124b0:	cbz	x0, 4124f0 <reap_children@@Base+0x1168>
  4124b4:	ldr	x8, [x19, #40]
  4124b8:	ldr	x8, [x8, #32]
  4124bc:	ldrh	w8, [x8, #48]
  4124c0:	cbz	w8, 4124ec <reap_children@@Base+0x1164>
  4124c4:	mov	x20, xzr
  4124c8:	ldr	x0, [x0, x20, lsl #3]
  4124cc:	bl	406cb0 <free@plt>
  4124d0:	ldr	x8, [x19, #40]
  4124d4:	ldr	x0, [x19, #56]
  4124d8:	add	x20, x20, #0x1
  4124dc:	ldr	x8, [x8, #32]
  4124e0:	ldrh	w8, [x8, #48]
  4124e4:	cmp	x20, x8
  4124e8:	b.cc	4124c8 <reap_children@@Base+0x1140>  // b.lo, b.ul, b.last
  4124ec:	bl	406cb0 <free@plt>
  4124f0:	ldr	x0, [x19, #8]
  4124f4:	cbz	x0, 41251c <reap_children@@Base+0x1194>
  4124f8:	ldr	x8, [x0]
  4124fc:	cbz	x8, 412518 <reap_children@@Base+0x1190>
  412500:	add	x20, x0, #0x8
  412504:	mov	x0, x8
  412508:	bl	406cb0 <free@plt>
  41250c:	ldr	x8, [x20], #8
  412510:	cbnz	x8, 412504 <reap_children@@Base+0x117c>
  412514:	ldr	x0, [x19, #8]
  412518:	bl	406cb0 <free@plt>
  41251c:	ldr	x0, [x19]
  412520:	bl	406cb0 <free@plt>
  412524:	mov	x0, x19
  412528:	ldp	x20, x19, [sp, #16]
  41252c:	ldp	x29, x30, [sp], #32
  412530:	b	406cb0 <free@plt>
  412534:	ldr	x8, [x19, #40]
  412538:	ldr	x20, [x8]
  41253c:	mov	x0, x20
  412540:	bl	406790 <strlen@plt>
  412544:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  412548:	add	x1, x0, #0x14
  41254c:	add	x2, x2, #0x5b7
  412550:	mov	x0, xzr
  412554:	mov	x3, x19
  412558:	mov	x4, x20
  41255c:	bl	4188bc <fatal@@Base>

0000000000412560 <new_job@@Base>:
  412560:	stp	x29, x30, [sp, #-96]!
  412564:	stp	x28, x27, [sp, #16]
  412568:	stp	x26, x25, [sp, #32]
  41256c:	stp	x24, x23, [sp, #48]
  412570:	stp	x22, x21, [sp, #64]
  412574:	stp	x20, x19, [sp, #80]
  412578:	mov	x29, sp
  41257c:	sub	sp, sp, #0x20
  412580:	ldr	x23, [x0, #32]
  412584:	mov	x19, x0
  412588:	bl	412ae0 <start_waiting_jobs@@Base>
  41258c:	mov	w0, wzr
  412590:	mov	w1, wzr
  412594:	bl	411388 <reap_children@@Base>
  412598:	mov	x0, x23
  41259c:	bl	4082c0 <chop_commands@@Base>
  4125a0:	mov	w0, #0x58                  	// #88
  4125a4:	bl	4178ac <xcalloc@@Base>
  4125a8:	add	x22, x0, #0x10
  4125ac:	mov	x20, x0
  4125b0:	mov	x0, x22
  4125b4:	bl	4181d0 <output_init@@Base>
  4125b8:	stp	x19, xzr, [x20, #40]
  4125bc:	ldrb	w8, [x20, #24]
  4125c0:	ldrb	w9, [x20, #80]
  4125c4:	ldr	w10, [x19, #136]
  4125c8:	stur	x19, [x29, #-8]
  4125cc:	tst	w8, #0x1
  4125d0:	and	w8, w9, #0xffffffbf
  4125d4:	lsr	w9, w10, #10
  4125d8:	and	w9, w9, #0x40
  4125dc:	orr	w8, w9, w8
  4125e0:	adrp	x10, 43c000 <stopchar_map@@Base+0x310>
  4125e4:	csel	x9, xzr, x22, eq  // eq = none
  4125e8:	strb	w8, [x20, #80]
  4125ec:	str	x9, [x10, #1472]
  4125f0:	ldrh	w8, [x23, #48]
  4125f4:	stur	x20, [x29, #-32]
  4125f8:	lsl	x0, x8, #3
  4125fc:	bl	417888 <xmalloc@@Base>
  412600:	ldrh	w8, [x23, #48]
  412604:	stp	x23, x0, [x29, #-24]
  412608:	cbz	w8, 412810 <new_job@@Base+0x2b0>
  41260c:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  412610:	mov	x28, xzr
  412614:	mov	w27, #0x7d                  	// #125
  412618:	mov	w20, #0x29                  	// #41
  41261c:	add	x22, x22, #0xcf0
  412620:	mov	w21, #0x20                  	// #32
  412624:	ldr	x8, [x23, #32]
  412628:	mov	w1, #0x24                  	// #36
  41262c:	ldr	x25, [x8, x28, lsl #3]
  412630:	mov	x0, x25
  412634:	bl	406cd0 <strchr@plt>
  412638:	cbz	x0, 4127e0 <new_job@@Base+0x280>
  41263c:	mov	x23, x0
  412640:	mov	x24, x25
  412644:	add	x19, x23, #0x1
  412648:	cmp	x24, x25
  41264c:	sub	x26, x19, x25
  412650:	b.eq	412664 <new_job@@Base+0x104>  // b.none
  412654:	mov	x0, x24
  412658:	mov	x1, x25
  41265c:	mov	x2, x26
  412660:	bl	406760 <memmove@plt>
  412664:	ldrb	w8, [x19]
  412668:	add	x9, x24, x26
  41266c:	cmp	w8, #0x7b
  412670:	b.eq	41267c <new_job@@Base+0x11c>  // b.none
  412674:	cmp	w8, #0x28
  412678:	b.ne	4127a4 <new_job@@Base+0x244>  // b.any
  41267c:	mov	x24, x9
  412680:	strb	w8, [x24], #1
  412684:	mov	x25, x23
  412688:	ldrb	w16, [x25, #2]!
  41268c:	cmp	w8, #0x28
  412690:	csel	w10, w20, w27, eq  // eq = none
  412694:	cbz	w16, 4127ac <new_job@@Base+0x24c>
  412698:	mov	w11, wzr
  41269c:	sub	x12, x23, #0x1
  4126a0:	add	x13, x23, #0x2
  4126a4:	mov	w14, #0x2                   	// #2
  4126a8:	mov	w15, #0x1                   	// #1
  4126ac:	cmp	w10, w16, uxtb
  4126b0:	b.ne	4126bc <new_job@@Base+0x15c>  // b.any
  4126b4:	subs	w11, w11, #0x1
  4126b8:	b.lt	4127ac <new_job@@Base+0x24c>  // b.tstop
  4126bc:	and	w17, w16, #0xff
  4126c0:	cmp	w17, #0x5c
  4126c4:	b.ne	412714 <new_job@@Base+0x1b4>  // b.any
  4126c8:	ldrb	w17, [x25, #1]
  4126cc:	cmp	w17, #0xa
  4126d0:	b.ne	412714 <new_job@@Base+0x1b4>  // b.any
  4126d4:	cmp	x14, #0x3
  4126d8:	b.lt	41274c <new_job@@Base+0x1ec>  // b.tstop
  4126dc:	mov	w17, wzr
  4126e0:	mov	x16, x14
  4126e4:	ldrb	w18, [x12, x16]
  4126e8:	cmp	w18, #0x5c
  4126ec:	mov	w18, w17
  4126f0:	b.ne	41273c <new_job@@Base+0x1dc>  // b.any
  4126f4:	sub	x16, x16, #0x1
  4126f8:	cmp	w18, #0x0
  4126fc:	add	x0, x16, #0x1
  412700:	cset	w17, eq  // eq = none
  412704:	cmp	x0, #0x3
  412708:	b.gt	4126e4 <new_job@@Base+0x184>
  41270c:	cbnz	w18, 41274c <new_job@@Base+0x1ec>
  412710:	b	412740 <new_job@@Base+0x1e0>
  412714:	cmp	w8, w16, uxtb
  412718:	add	x14, x14, #0x1
  41271c:	cinc	w11, w11, eq  // eq = none
  412720:	strb	w16, [x24]
  412724:	add	x25, x23, x14
  412728:	ldrb	w16, [x25]
  41272c:	add	x15, x15, #0x1
  412730:	add	x24, x9, x15
  412734:	cbnz	w16, 4126ac <new_job@@Base+0x14c>
  412738:	b	4127ac <new_job@@Base+0x24c>
  41273c:	cbz	w18, 41274c <new_job@@Base+0x1ec>
  412740:	add	x14, x14, #0x1
  412744:	mov	w16, #0x5c                  	// #92
  412748:	b	412720 <new_job@@Base+0x1c0>
  41274c:	ldrb	w16, [x13, x14]
  412750:	add	x14, x14, #0x1
  412754:	ldrh	w16, [x22, x16, lsl #1]
  412758:	tst	w16, #0x6
  41275c:	b.ne	41274c <new_job@@Base+0x1ec>  // b.any
  412760:	cmp	x15, #0x2
  412764:	add	x14, x14, #0x1
  412768:	b.lt	412798 <new_job@@Base+0x238>  // b.tstop
  41276c:	add	x16, x9, x15
  412770:	ldurb	w17, [x16, #-1]
  412774:	ldrh	w17, [x22, x17, lsl #1]
  412778:	tbz	w17, #1, 41279c <new_job@@Base+0x23c>
  41277c:	sub	x17, x15, #0x1
  412780:	cmp	x15, #0x2
  412784:	mov	x15, x17
  412788:	b.gt	41276c <new_job@@Base+0x20c>
  41278c:	add	x16, x9, x17
  412790:	mov	x15, x17
  412794:	b	41279c <new_job@@Base+0x23c>
  412798:	add	x16, x9, x15
  41279c:	strb	w21, [x16]
  4127a0:	b	412724 <new_job@@Base+0x1c4>
  4127a4:	mov	x24, x9
  4127a8:	mov	x25, x19
  4127ac:	mov	w1, #0x24                  	// #36
  4127b0:	mov	x0, x25
  4127b4:	bl	406cd0 <strchr@plt>
  4127b8:	mov	x23, x0
  4127bc:	cbnz	x0, 412644 <new_job@@Base+0xe4>
  4127c0:	cmp	x24, x25
  4127c4:	b.eq	4127e0 <new_job@@Base+0x280>  // b.none
  4127c8:	mov	x0, x25
  4127cc:	bl	406790 <strlen@plt>
  4127d0:	add	x2, x0, #0x1
  4127d4:	mov	x0, x24
  4127d8:	mov	x1, x25
  4127dc:	bl	406760 <memmove@plt>
  4127e0:	ldur	x23, [x29, #-24]
  4127e4:	ldur	x1, [x29, #-8]
  4127e8:	ldr	x8, [x23, #32]
  4127ec:	str	x28, [x23, #16]
  4127f0:	ldr	x0, [x8, x28, lsl #3]
  4127f4:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  4127f8:	ldur	x8, [x29, #-16]
  4127fc:	str	x0, [x8, x28, lsl #3]
  412800:	ldrh	w8, [x23, #48]
  412804:	add	x28, x28, #0x1
  412808:	cmp	x28, x8
  41280c:	b.cc	412624 <new_job@@Base+0xc4>  // b.lo, b.ul, b.last
  412810:	ldur	x28, [x29, #-32]
  412814:	ldur	x8, [x29, #-16]
  412818:	str	xzr, [x23, #16]
  41281c:	mov	x0, x28
  412820:	str	x8, [x28, #56]
  412824:	bl	411e98 <reap_children@@Base+0xb10>
  412828:	adrp	x19, 43f000 <shell_var@@Base+0x20>
  41282c:	ldr	w8, [x19, #232]
  412830:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  412834:	cbz	w8, 412868 <new_job@@Base+0x308>
  412838:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41283c:	ldr	w9, [x21, #3056]
  412840:	cmp	w9, w8
  412844:	b.ne	412934 <new_job@@Base+0x3d4>  // b.any
  412848:	mov	w0, #0x1                   	// #1
  41284c:	mov	w1, wzr
  412850:	bl	411388 <reap_children@@Base>
  412854:	ldr	w8, [x21, #3056]
  412858:	ldr	w9, [x19, #232]
  41285c:	cmp	w8, w9
  412860:	b.eq	412848 <new_job@@Base+0x2e8>  // b.none
  412864:	b	412934 <new_job@@Base+0x3d4>
  412868:	bl	423230 <jobserver_enabled@@Base>
  41286c:	cbz	w0, 412934 <new_job@@Base+0x3d4>
  412870:	adrp	x26, 426000 <_IO_stdin_used@@Base+0x2290>
  412874:	adrp	x27, 426000 <_IO_stdin_used@@Base+0x2290>
  412878:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  41287c:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  412880:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  412884:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  412888:	add	x26, x26, #0x5eb
  41288c:	add	x27, x27, #0x4a6
  412890:	add	x22, x22, #0x480
  412894:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  412898:	ldrb	w8, [x23, #3236]
  41289c:	tbz	w8, #2, 4128bc <new_job@@Base+0x35c>
  4128a0:	ldr	x8, [x24, #3048]
  4128a4:	mov	x0, x22
  4128a8:	cmp	x8, #0x0
  4128ac:	csel	x1, x27, x26, eq  // eq = none
  4128b0:	bl	406ea0 <printf@plt>
  4128b4:	ldr	x0, [x21, #2512]
  4128b8:	bl	406d40 <fflush@plt>
  4128bc:	ldr	w8, [x20, #3072]
  4128c0:	cbz	w8, 412934 <new_job@@Base+0x3d4>
  4128c4:	bl	423490 <jobserver_pre_acquire@@Base>
  4128c8:	mov	w0, wzr
  4128cc:	mov	w1, wzr
  4128d0:	bl	411388 <reap_children@@Base>
  4128d4:	bl	412ae0 <start_waiting_jobs@@Base>
  4128d8:	ldr	w8, [x20, #3072]
  4128dc:	cbz	w8, 412934 <new_job@@Base+0x3d4>
  4128e0:	ldr	x8, [x24, #3048]
  4128e4:	cbz	x8, 412acc <new_job@@Base+0x56c>
  4128e8:	ldr	x8, [x25, #3088]
  4128ec:	cmp	x8, #0x0
  4128f0:	cset	w0, ne  // ne = any
  4128f4:	bl	423494 <jobserver_acquire@@Base>
  4128f8:	cmp	w0, #0x1
  4128fc:	b.ne	412898 <new_job@@Base+0x338>  // b.any
  412900:	ldrb	w8, [x23, #3236]
  412904:	tbz	w8, #2, 412934 <new_job@@Base+0x3d4>
  412908:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  41290c:	add	x1, x1, #0x4de
  412910:	mov	w2, #0x5                   	// #5
  412914:	mov	x0, xzr
  412918:	bl	406e10 <dcgettext@plt>
  41291c:	ldr	x8, [x28, #40]
  412920:	mov	x1, x28
  412924:	ldr	x2, [x8]
  412928:	bl	406ea0 <printf@plt>
  41292c:	ldr	x0, [x21, #2512]
  412930:	bl	406d40 <fflush@plt>
  412934:	ldr	w8, [x20, #3072]
  412938:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41293c:	ldr	w9, [x9, #3308]
  412940:	add	w8, w8, #0x1
  412944:	str	w8, [x20, #3072]
  412948:	cbz	w9, 412a60 <new_job@@Base+0x500>
  41294c:	ldr	x1, [x28, #40]
  412950:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  412954:	add	x0, x0, #0x501
  412958:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  41295c:	ldur	x20, [x29, #-24]
  412960:	mov	x22, x0
  412964:	ldr	x24, [x20]
  412968:	cbz	x24, 4129a4 <new_job@@Base+0x444>
  41296c:	mov	x0, x24
  412970:	bl	406790 <strlen@plt>
  412974:	add	x9, x0, #0x1c
  412978:	mov	x8, sp
  41297c:	and	x9, x9, #0xfffffffffffffff0
  412980:	sub	x23, x8, x9
  412984:	mov	sp, x23
  412988:	ldr	x3, [x20, #8]
  41298c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412990:	add	x1, x1, #0x50e
  412994:	mov	x0, x23
  412998:	mov	x2, x24
  41299c:	bl	406830 <sprintf@plt>
  4129a0:	b	4129bc <new_job@@Base+0x45c>
  4129a4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4129a8:	add	x1, x1, #0x504
  4129ac:	mov	w2, #0x5                   	// #5
  4129b0:	mov	x0, xzr
  4129b4:	bl	406e10 <dcgettext@plt>
  4129b8:	mov	x23, x0
  4129bc:	ldrb	w20, [x22]
  4129c0:	mov	x0, x23
  4129c4:	bl	406790 <strlen@plt>
  4129c8:	ldr	x8, [x28, #40]
  4129cc:	mov	x21, x0
  4129d0:	ldr	x8, [x8]
  4129d4:	mov	x0, x8
  4129d8:	bl	406790 <strlen@plt>
  4129dc:	add	x21, x0, x21
  4129e0:	cbz	w20, 412a28 <new_job@@Base+0x4c8>
  4129e4:	mov	x0, x22
  4129e8:	bl	406790 <strlen@plt>
  4129ec:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4129f0:	add	x21, x0, x21
  4129f4:	add	x1, x1, #0x534
  4129f8:	mov	w2, #0x5                   	// #5
  4129fc:	mov	x0, xzr
  412a00:	bl	406e10 <dcgettext@plt>
  412a04:	ldr	x8, [x28, #40]
  412a08:	mov	x2, x0
  412a0c:	mov	w0, wzr
  412a10:	mov	x1, x21
  412a14:	ldr	x4, [x8]
  412a18:	mov	x3, x23
  412a1c:	mov	x5, x22
  412a20:	bl	4185c0 <message@@Base>
  412a24:	b	412a58 <new_job@@Base+0x4f8>
  412a28:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412a2c:	add	x1, x1, #0x515
  412a30:	mov	w2, #0x5                   	// #5
  412a34:	mov	x0, xzr
  412a38:	bl	406e10 <dcgettext@plt>
  412a3c:	ldr	x8, [x28, #40]
  412a40:	mov	x2, x0
  412a44:	mov	w0, wzr
  412a48:	mov	x1, x21
  412a4c:	ldr	x4, [x8]
  412a50:	mov	x3, x23
  412a54:	bl	4185c0 <message@@Base>
  412a58:	mov	x0, x22
  412a5c:	bl	406cb0 <free@plt>
  412a60:	mov	x0, x28
  412a64:	bl	412b24 <start_waiting_jobs@@Base+0x44>
  412a68:	ldr	w8, [x19, #232]
  412a6c:	ldur	x19, [x29, #-8]
  412a70:	cmp	w8, #0x1
  412a74:	b.eq	412a94 <new_job@@Base+0x534>  // b.none
  412a78:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  412a7c:	ldr	w8, [x8, #60]
  412a80:	cbz	w8, 412aa4 <new_job@@Base+0x544>
  412a84:	b	412a94 <new_job@@Base+0x534>
  412a88:	mov	w0, #0x1                   	// #1
  412a8c:	mov	w1, wzr
  412a90:	bl	411388 <reap_children@@Base>
  412a94:	ldr	w8, [x19, #136]
  412a98:	and	w8, w8, #0xc
  412a9c:	cmp	w8, #0x8
  412aa0:	b.eq	412a88 <new_job@@Base+0x528>  // b.none
  412aa4:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  412aa8:	str	xzr, [x8, #1472]
  412aac:	mov	sp, x29
  412ab0:	ldp	x20, x19, [sp, #80]
  412ab4:	ldp	x22, x21, [sp, #64]
  412ab8:	ldp	x24, x23, [sp, #48]
  412abc:	ldp	x26, x25, [sp, #32]
  412ac0:	ldp	x28, x27, [sp, #16]
  412ac4:	ldp	x29, x30, [sp], #96
  412ac8:	ret
  412acc:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  412ad0:	add	x2, x2, #0x4ad
  412ad4:	mov	x0, xzr
  412ad8:	mov	x1, xzr
  412adc:	bl	4188bc <fatal@@Base>

0000000000412ae0 <start_waiting_jobs@@Base>:
  412ae0:	stp	x29, x30, [sp, #-32]!
  412ae4:	str	x19, [sp, #16]
  412ae8:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  412aec:	mov	x29, sp
  412af0:	ldr	x8, [x19, #3088]
  412af4:	cbz	x8, 412b18 <start_waiting_jobs@@Base+0x38>
  412af8:	mov	w0, wzr
  412afc:	mov	w1, wzr
  412b00:	bl	411388 <reap_children@@Base>
  412b04:	ldr	x0, [x19, #3088]
  412b08:	ldr	x8, [x0, #32]
  412b0c:	str	x8, [x19, #3088]
  412b10:	bl	412b24 <start_waiting_jobs@@Base+0x44>
  412b14:	cbnz	w0, 412af0 <start_waiting_jobs@@Base+0x10>
  412b18:	ldr	x19, [sp, #16]
  412b1c:	ldp	x29, x30, [sp], #32
  412b20:	ret
  412b24:	sub	sp, sp, #0x60
  412b28:	stp	x29, x30, [sp, #24]
  412b2c:	stp	x24, x23, [sp, #48]
  412b30:	stp	x22, x21, [sp, #64]
  412b34:	stp	x20, x19, [sp, #80]
  412b38:	ldr	x20, [x0, #40]
  412b3c:	mov	x19, x0
  412b40:	mov	w0, #0x1                   	// #1
  412b44:	str	d8, [sp, #16]
  412b48:	str	x25, [sp, #40]
  412b4c:	add	x29, sp, #0x10
  412b50:	bl	423660 <start_remote_job_p@@Base>
  412b54:	ldrb	w8, [x19, #80]
  412b58:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  412b5c:	bfxil	w8, w0, #0, #1
  412b60:	strb	w8, [x19, #80]
  412b64:	tbnz	w0, #0, 412cc4 <start_waiting_jobs@@Base+0x1e4>
  412b68:	ldr	w8, [x22, #3056]
  412b6c:	cbz	w8, 412cc4 <start_waiting_jobs@@Base+0x1e4>
  412b70:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  412b74:	ldr	d0, [x23, #2376]
  412b78:	fcmp	d0, #0.0
  412b7c:	b.mi	412cc4 <start_waiting_jobs@@Base+0x1e4>  // b.first
  412b80:	bl	417c44 <make_access@@Base>
  412b84:	add	x0, sp, #0x8
  412b88:	mov	w1, #0x1                   	// #1
  412b8c:	bl	406870 <getloadavg@plt>
  412b90:	cmp	w0, #0x1
  412b94:	b.eq	412c14 <start_waiting_jobs@@Base+0x134>  // b.none
  412b98:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  412b9c:	ldr	w25, [x24, #2368]
  412ba0:	bl	406eb0 <__errno_location@plt>
  412ba4:	ldr	w8, [x0]
  412ba8:	mov	x21, x0
  412bac:	cmn	w25, #0x1
  412bb0:	b.eq	412bbc <start_waiting_jobs@@Base+0xdc>  // b.none
  412bb4:	cmp	w8, w25
  412bb8:	b.eq	412c08 <start_waiting_jobs@@Base+0x128>  // b.none
  412bbc:	cbz	w8, 412be4 <start_waiting_jobs@@Base+0x104>
  412bc0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412bc4:	add	x1, x1, #0x671
  412bc8:	mov	w2, #0x5                   	// #5
  412bcc:	mov	x0, xzr
  412bd0:	bl	406e10 <dcgettext@plt>
  412bd4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412bd8:	add	x1, x1, #0x68d
  412bdc:	bl	418a4c <perror_with_name@@Base>
  412be0:	b	412c08 <start_waiting_jobs@@Base+0x128>
  412be4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412be8:	add	x1, x1, #0x63d
  412bec:	mov	w2, #0x5                   	// #5
  412bf0:	mov	x0, xzr
  412bf4:	bl	406e10 <dcgettext@plt>
  412bf8:	mov	x2, x0
  412bfc:	mov	x0, xzr
  412c00:	mov	x1, xzr
  412c04:	bl	418744 <error@@Base>
  412c08:	ldr	w8, [x21]
  412c0c:	str	xzr, [sp, #8]
  412c10:	str	w8, [x24, #2368]
  412c14:	bl	417c40 <user_access@@Base>
  412c18:	mov	x0, xzr
  412c1c:	bl	4069c0 <time@plt>
  412c20:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412c24:	ldr	x9, [x8, #3208]
  412c28:	fmov	d0, #2.500000000000000000e-01
  412c2c:	cmp	x9, x0
  412c30:	b.ge	412c68 <start_waiting_jobs@@Base+0x188>  // b.tcont
  412c34:	adrp	x11, 43b000 <memcpy@GLIBC_2.17>
  412c38:	ldr	d1, [x11, #3064]
  412c3c:	sub	x10, x0, #0x1
  412c40:	fmov	d2, xzr
  412c44:	cmp	x9, x10
  412c48:	ucvtf	d1, d1
  412c4c:	fmul	d1, d1, d0
  412c50:	adrp	x12, 43b000 <memcpy@GLIBC_2.17>
  412c54:	fcsel	d3, d1, d2, eq  // eq = none
  412c58:	str	xzr, [x11, #3064]
  412c5c:	str	d3, [x12, #3200]
  412c60:	str	x0, [x8, #3208]
  412c64:	b	412c7c <start_waiting_jobs@@Base+0x19c>
  412c68:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412c6c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  412c70:	ldr	d1, [x8, #3064]
  412c74:	ldr	d3, [x9, #3200]
  412c78:	ucvtf	d2, d1
  412c7c:	ldr	d1, [sp, #8]
  412c80:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412c84:	ldrb	w8, [x8, #3236]
  412c88:	fadd	d2, d3, d2
  412c8c:	fmul	d0, d2, d0
  412c90:	fadd	d8, d1, d0
  412c94:	tbz	w8, #2, 412cb8 <start_waiting_jobs@@Base+0x1d8>
  412c98:	ldr	d2, [x23, #2376]
  412c9c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  412ca0:	add	x0, x0, #0x698
  412ca4:	mov	v0.16b, v8.16b
  412ca8:	bl	406ea0 <printf@plt>
  412cac:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412cb0:	ldr	x0, [x8, #2512]
  412cb4:	bl	406d40 <fflush@plt>
  412cb8:	ldr	d0, [x23, #2376]
  412cbc:	fcmp	d8, d0
  412cc0:	b.ge	412d78 <start_waiting_jobs@@Base+0x298>  // b.tcont
  412cc4:	mov	x0, x19
  412cc8:	bl	411f10 <reap_children@@Base+0xb88>
  412ccc:	ldr	w9, [x20, #136]
  412cd0:	ubfx	w8, w9, #2, #2
  412cd4:	cbz	w8, 412d58 <start_waiting_jobs@@Base+0x278>
  412cd8:	cmp	w8, #0x3
  412cdc:	b.eq	412d60 <start_waiting_jobs@@Base+0x280>  // b.none
  412ce0:	cmp	w8, #0x2
  412ce4:	b.ne	412d70 <start_waiting_jobs@@Base+0x290>  // b.any
  412ce8:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  412cec:	ldr	w8, [x19, #76]
  412cf0:	ldr	x9, [x23, #3048]
  412cf4:	cmp	w8, #0x1
  412cf8:	str	x9, [x19, #32]
  412cfc:	b.lt	412df0 <start_waiting_jobs@@Base+0x310>  // b.tstop
  412d00:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412d04:	ldrb	w8, [x8, #3236]
  412d08:	tbz	w8, #2, 412dd8 <start_waiting_jobs@@Base+0x2f8>
  412d0c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412d10:	add	x1, x1, #0x60f
  412d14:	mov	w2, #0x5                   	// #5
  412d18:	mov	x0, xzr
  412d1c:	bl	406e10 <dcgettext@plt>
  412d20:	ldr	x8, [x19, #40]
  412d24:	ldrsw	x2, [x19, #76]
  412d28:	mov	x21, x0
  412d2c:	adrp	x0, 43b000 <memcpy@GLIBC_2.17>
  412d30:	ldr	x20, [x8]
  412d34:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412d38:	add	x0, x0, #0xc18
  412d3c:	add	x1, x1, #0x511
  412d40:	bl	406830 <sprintf@plt>
  412d44:	ldrb	w8, [x19, #80]
  412d48:	tbnz	w8, #0, 412d9c <start_waiting_jobs@@Base+0x2bc>
  412d4c:	adrp	x4, 426000 <_IO_stdin_used@@Base+0x2290>
  412d50:	add	x4, x4, #0x5eb
  412d54:	b	412db4 <start_waiting_jobs@@Base+0x2d4>
  412d58:	and	w8, w9, #0xfffffffc
  412d5c:	str	w8, [x20, #136]
  412d60:	mov	x0, x20
  412d64:	bl	41e888 <notice_finished_file@@Base>
  412d68:	mov	x0, x19
  412d6c:	bl	41240c <reap_children@@Base+0x1084>
  412d70:	mov	w20, #0x1                   	// #1
  412d74:	b	412e0c <start_waiting_jobs@@Base+0x32c>
  412d78:	mov	w1, #0x2                   	// #2
  412d7c:	mov	x0, x20
  412d80:	bl	40b608 <set_command_state@@Base>
  412d84:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412d88:	ldr	x9, [x8, #3088]
  412d8c:	mov	w20, wzr
  412d90:	str	x9, [x19, #32]
  412d94:	str	x19, [x8, #3088]
  412d98:	b	412e0c <start_waiting_jobs@@Base+0x32c>
  412d9c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  412da0:	add	x1, x1, #0x397
  412da4:	mov	w2, #0x5                   	// #5
  412da8:	mov	x0, xzr
  412dac:	bl	406e10 <dcgettext@plt>
  412db0:	mov	x4, x0
  412db4:	adrp	x3, 43b000 <memcpy@GLIBC_2.17>
  412db8:	add	x3, x3, #0xc18
  412dbc:	mov	x0, x21
  412dc0:	mov	x1, x19
  412dc4:	mov	x2, x20
  412dc8:	bl	406ea0 <printf@plt>
  412dcc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412dd0:	ldr	x0, [x8, #2512]
  412dd4:	bl	406d40 <fflush@plt>
  412dd8:	ldr	w8, [x22, #3056]
  412ddc:	add	w8, w8, #0x1
  412de0:	str	w8, [x22, #3056]
  412de4:	ldrb	w8, [x19, #80]
  412de8:	orr	w8, w8, #0x20
  412dec:	strb	w8, [x19, #80]
  412df0:	adrp	x1, 43f000 <shell_var@@Base+0x20>
  412df4:	add	x1, x1, #0x60
  412df8:	mov	w0, #0x1                   	// #1
  412dfc:	mov	x2, xzr
  412e00:	str	x19, [x23, #3048]
  412e04:	mov	w20, #0x1                   	// #1
  412e08:	bl	4067f0 <sigprocmask@plt>
  412e0c:	mov	w0, w20
  412e10:	ldp	x20, x19, [sp, #80]
  412e14:	ldp	x22, x21, [sp, #64]
  412e18:	ldp	x24, x23, [sp, #48]
  412e1c:	ldr	x25, [sp, #40]
  412e20:	ldp	x29, x30, [sp, #24]
  412e24:	ldr	d8, [sp, #16]
  412e28:	add	sp, sp, #0x60
  412e2c:	ret

0000000000412e30 <child_execute_job@@Base>:
  412e30:	stp	x29, x30, [sp, #-96]!
  412e34:	stp	x28, x27, [sp, #16]
  412e38:	stp	x26, x25, [sp, #32]
  412e3c:	stp	x24, x23, [sp, #48]
  412e40:	stp	x22, x21, [sp, #64]
  412e44:	stp	x20, x19, [sp, #80]
  412e48:	mov	x29, sp
  412e4c:	sub	sp, sp, #0x220
  412e50:	mov	x19, x2
  412e54:	mov	x20, x0
  412e58:	cbz	w1, 412e6c <child_execute_job@@Base+0x3c>
  412e5c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  412e60:	ldr	x0, [x8, #2520]
  412e64:	bl	406940 <fileno@plt>
  412e68:	b	412e70 <child_execute_job@@Base+0x40>
  412e6c:	bl	42360c <get_bad_stdin@@Base>
  412e70:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  412e74:	mov	w24, w0
  412e78:	ldr	x0, [x27, #2512]
  412e7c:	bl	406940 <fileno@plt>
  412e80:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  412e84:	ldr	x8, [x26, #2488]
  412e88:	mov	w23, w0
  412e8c:	mov	x0, x8
  412e90:	bl	406940 <fileno@plt>
  412e94:	ldrb	w8, [x20, #24]
  412e98:	mov	w21, w0
  412e9c:	tbz	w8, #0, 412eb4 <child_execute_job@@Base+0x84>
  412ea0:	ldp	w8, w9, [x20, #16]
  412ea4:	cmp	w8, #0x0
  412ea8:	csel	w23, w8, w23, ge  // ge = tcont
  412eac:	cmp	w9, #0x0
  412eb0:	csel	w21, w9, w21, ge  // ge = tcont
  412eb4:	add	x0, sp, #0xd0
  412eb8:	bl	406d90 <posix_spawnattr_init@plt>
  412ebc:	mov	w22, w0
  412ec0:	cbnz	w0, 412f20 <child_execute_job@@Base+0xf0>
  412ec4:	add	x0, sp, #0x80
  412ec8:	bl	406c10 <posix_spawn_file_actions_init@plt>
  412ecc:	cbz	w0, 412ee0 <child_execute_job@@Base+0xb0>
  412ed0:	mov	w22, w0
  412ed4:	add	x0, sp, #0xd0
  412ed8:	bl	406a20 <posix_spawnattr_destroy@plt>
  412edc:	b	412f20 <child_execute_job@@Base+0xf0>
  412ee0:	mov	x0, sp
  412ee4:	bl	406a10 <sigemptyset@plt>
  412ee8:	add	x0, sp, #0xd0
  412eec:	mov	x1, sp
  412ef0:	bl	406be0 <posix_spawnattr_setsigmask@plt>
  412ef4:	cmp	w0, #0x0
  412ef8:	mov	w8, #0x41                  	// #65
  412efc:	mov	w9, #0x49                  	// #73
  412f00:	mov	w22, w0
  412f04:	csel	w25, w9, w8, eq  // eq = none
  412f08:	cbz	w0, 412f90 <child_execute_job@@Base+0x160>
  412f0c:	add	x0, sp, #0x80
  412f10:	bl	406af0 <posix_spawn_file_actions_destroy@plt>
  412f14:	add	x0, sp, #0xd0
  412f18:	bl	406a20 <posix_spawnattr_destroy@plt>
  412f1c:	cbz	w22, 4130f8 <child_execute_job@@Base+0x2c8>
  412f20:	mov	w8, #0xffffffff            	// #-1
  412f24:	str	w8, [sp]
  412f28:	ldr	x0, [x19]
  412f2c:	bl	406790 <strlen@plt>
  412f30:	mov	x20, x0
  412f34:	mov	w0, w22
  412f38:	bl	406b50 <strerror@plt>
  412f3c:	bl	406790 <strlen@plt>
  412f40:	ldr	x19, [x19]
  412f44:	add	x20, x0, x20
  412f48:	mov	w0, w22
  412f4c:	bl	406b50 <strerror@plt>
  412f50:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  412f54:	mov	x4, x0
  412f58:	add	x2, x2, #0xda
  412f5c:	mov	x0, xzr
  412f60:	mov	x1, x20
  412f64:	mov	x3, x19
  412f68:	bl	418744 <error@@Base>
  412f6c:	ldr	w0, [sp]
  412f70:	add	sp, sp, #0x220
  412f74:	ldp	x20, x19, [sp, #80]
  412f78:	ldp	x22, x21, [sp, #64]
  412f7c:	ldp	x24, x23, [sp, #48]
  412f80:	ldp	x26, x25, [sp, #32]
  412f84:	ldp	x28, x27, [sp, #16]
  412f88:	ldp	x29, x30, [sp], #96
  412f8c:	ret
  412f90:	tbnz	w24, #31, 412fc8 <child_execute_job@@Base+0x198>
  412f94:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  412f98:	ldr	x0, [x22, #2520]
  412f9c:	bl	406940 <fileno@plt>
  412fa0:	cmp	w24, w0
  412fa4:	b.eq	412fc8 <child_execute_job@@Base+0x198>  // b.none
  412fa8:	ldr	x0, [x22, #2520]
  412fac:	bl	406940 <fileno@plt>
  412fb0:	mov	w2, w0
  412fb4:	add	x0, sp, #0x80
  412fb8:	mov	w1, w24
  412fbc:	bl	406960 <posix_spawn_file_actions_adddup2@plt>
  412fc0:	mov	w22, w0
  412fc4:	cbnz	w0, 412f0c <child_execute_job@@Base+0xdc>
  412fc8:	ldr	x0, [x27, #2512]
  412fcc:	bl	406940 <fileno@plt>
  412fd0:	cmp	w23, w0
  412fd4:	b.eq	412ff8 <child_execute_job@@Base+0x1c8>  // b.none
  412fd8:	ldr	x0, [x27, #2512]
  412fdc:	bl	406940 <fileno@plt>
  412fe0:	mov	w2, w0
  412fe4:	add	x0, sp, #0x80
  412fe8:	mov	w1, w23
  412fec:	bl	406960 <posix_spawn_file_actions_adddup2@plt>
  412ff0:	mov	w22, w0
  412ff4:	cbnz	w0, 412f0c <child_execute_job@@Base+0xdc>
  412ff8:	ldr	x0, [x26, #2488]
  412ffc:	bl	406940 <fileno@plt>
  413000:	cmp	w21, w0
  413004:	b.eq	413028 <child_execute_job@@Base+0x1f8>  // b.none
  413008:	ldr	x0, [x26, #2488]
  41300c:	bl	406940 <fileno@plt>
  413010:	mov	w2, w0
  413014:	add	x0, sp, #0x80
  413018:	mov	w1, w21
  41301c:	bl	406960 <posix_spawn_file_actions_adddup2@plt>
  413020:	mov	w22, w0
  413024:	cbnz	w0, 412f0c <child_execute_job@@Base+0xdc>
  413028:	add	x0, sp, #0xd0
  41302c:	mov	w1, w25
  413030:	bl	406bc0 <posix_spawnattr_setflags@plt>
  413034:	mov	w22, w0
  413038:	cbnz	w0, 412f0c <child_execute_job@@Base+0xdc>
  41303c:	ldr	x9, [x20, #8]
  413040:	ldr	x8, [x9]
  413044:	cbz	x8, 413090 <child_execute_job@@Base+0x260>
  413048:	add	x9, x9, #0x8
  41304c:	ldrb	w10, [x8]
  413050:	cmp	w10, #0x50
  413054:	b.ne	413088 <child_execute_job@@Base+0x258>  // b.any
  413058:	ldrb	w10, [x8, #1]
  41305c:	cmp	w10, #0x41
  413060:	b.ne	413088 <child_execute_job@@Base+0x258>  // b.any
  413064:	ldrb	w10, [x8, #2]
  413068:	cmp	w10, #0x54
  41306c:	b.ne	413088 <child_execute_job@@Base+0x258>  // b.any
  413070:	ldrb	w10, [x8, #3]
  413074:	cmp	w10, #0x48
  413078:	b.ne	413088 <child_execute_job@@Base+0x258>  // b.any
  41307c:	ldrb	w10, [x8, #4]
  413080:	cmp	w10, #0x3d
  413084:	b.eq	4131d0 <child_execute_job@@Base+0x3a0>  // b.none
  413088:	ldr	x8, [x9], #8
  41308c:	cbnz	x8, 41304c <child_execute_job@@Base+0x21c>
  413090:	mov	x1, xzr
  413094:	ldr	x0, [x19]
  413098:	mov	w2, wzr
  41309c:	bl	4236a4 <find_in_given_path@@Base>
  4130a0:	cbz	x0, 413108 <child_execute_job@@Base+0x2d8>
  4130a4:	mov	x21, x0
  4130a8:	ldr	x5, [x20, #8]
  4130ac:	mov	x0, sp
  4130b0:	add	x2, sp, #0x80
  4130b4:	add	x3, sp, #0xd0
  4130b8:	mov	x1, x21
  4130bc:	mov	x4, x19
  4130c0:	bl	406d60 <posix_spawn@plt>
  4130c4:	cmp	w0, #0x4
  4130c8:	b.eq	4130a8 <child_execute_job@@Base+0x278>  // b.none
  4130cc:	mov	w22, w0
  4130d0:	cmp	w0, #0x8
  4130d4:	b.ne	413198 <child_execute_job@@Base+0x368>  // b.any
  4130d8:	ldr	x8, [x19]
  4130dc:	cbz	x8, 413114 <child_execute_job@@Base+0x2e4>
  4130e0:	mov	x22, xzr
  4130e4:	add	x8, x19, #0x8
  4130e8:	ldr	x9, [x8, x22]
  4130ec:	add	x22, x22, #0x8
  4130f0:	cbnz	x9, 4130e8 <child_execute_job@@Base+0x2b8>
  4130f4:	b	413118 <child_execute_job@@Base+0x2e8>
  4130f8:	ldr	w0, [sp]
  4130fc:	tbz	w0, #31, 412f70 <child_execute_job@@Base+0x140>
  413100:	mov	w22, wzr
  413104:	b	412f28 <child_execute_job@@Base+0xf8>
  413108:	bl	406eb0 <__errno_location@plt>
  41310c:	ldr	w22, [x0]
  413110:	b	412f0c <child_execute_job@@Base+0xdc>
  413114:	mov	x22, xzr
  413118:	add	x0, x22, #0x18
  41311c:	bl	417888 <xmalloc@@Base>
  413120:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  413124:	ldr	x24, [x8, #2352]
  413128:	mov	x23, x0
  41312c:	add	x0, x0, #0x10
  413130:	add	x1, x19, #0x8
  413134:	mov	x2, x22
  413138:	stp	x24, x21, [x23]
  41313c:	bl	406750 <memcpy@plt>
  413140:	ldr	x5, [x20, #8]
  413144:	mov	x0, sp
  413148:	add	x2, sp, #0x80
  41314c:	add	x3, sp, #0xd0
  413150:	mov	x1, x24
  413154:	mov	x4, x23
  413158:	bl	406d60 <posix_spawn@plt>
  41315c:	mov	w22, w0
  413160:	cmp	w0, #0x4
  413164:	b.ne	413190 <child_execute_job@@Base+0x360>  // b.any
  413168:	ldr	x1, [x23]
  41316c:	ldr	x5, [x20, #8]
  413170:	mov	x0, sp
  413174:	add	x2, sp, #0x80
  413178:	add	x3, sp, #0xd0
  41317c:	mov	x4, x23
  413180:	bl	406d60 <posix_spawn@plt>
  413184:	cmp	w0, #0x4
  413188:	b.eq	413168 <child_execute_job@@Base+0x338>  // b.none
  41318c:	mov	w22, w0
  413190:	mov	x0, x23
  413194:	bl	406cb0 <free@plt>
  413198:	cbnz	w22, 412f0c <child_execute_job@@Base+0xdc>
  41319c:	ldr	x0, [x20]
  4131a0:	bl	406cb0 <free@plt>
  4131a4:	ldr	x8, [x19]
  4131a8:	cmp	x21, x8
  4131ac:	b.eq	4131bc <child_execute_job@@Base+0x38c>  // b.none
  4131b0:	mov	w22, wzr
  4131b4:	str	x21, [x20]
  4131b8:	b	412f0c <child_execute_job@@Base+0xdc>
  4131bc:	mov	x0, x21
  4131c0:	bl	4178d4 <xstrdup@@Base>
  4131c4:	mov	w22, wzr
  4131c8:	str	x0, [x20]
  4131cc:	b	412f0c <child_execute_job@@Base+0xdc>
  4131d0:	add	x1, x8, #0x5
  4131d4:	b	413094 <child_execute_job@@Base+0x264>

00000000004131d8 <exec_command@@Base>:
  4131d8:	stp	x29, x30, [sp, #-48]!
  4131dc:	stp	x22, x21, [sp, #16]
  4131e0:	stp	x20, x19, [sp, #32]
  4131e4:	mov	x29, sp
  4131e8:	mov	x19, x1
  4131ec:	mov	x20, x0
  4131f0:	bl	417c48 <child_access@@Base>
  4131f4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4131f8:	str	x19, [x8, #2528]
  4131fc:	ldr	x0, [x20]
  413200:	mov	x1, x20
  413204:	bl	406c60 <execvp@plt>
  413208:	bl	406eb0 <__errno_location@plt>
  41320c:	ldr	w21, [x0]
  413210:	mov	x19, x0
  413214:	cmp	w21, #0x8
  413218:	b.eq	41324c <exec_command@@Base+0x74>  // b.none
  41321c:	cmp	w21, #0x2
  413220:	b.ne	413330 <exec_command@@Base+0x158>  // b.any
  413224:	ldr	x0, [x20]
  413228:	bl	406790 <strlen@plt>
  41322c:	mov	x21, x0
  413230:	mov	w0, #0x2                   	// #2
  413234:	bl	406b50 <strerror@plt>
  413238:	bl	406790 <strlen@plt>
  41323c:	ldr	x20, [x20]
  413240:	ldr	w8, [x19]
  413244:	add	x19, x0, x21
  413248:	b	413354 <exec_command@@Base+0x17c>
  41324c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  413250:	add	x0, x0, #0xdfb
  413254:	bl	406ec0 <getenv@plt>
  413258:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  41325c:	ldr	x10, [x10, #2352]
  413260:	mov	x8, xzr
  413264:	mov	x9, xzr
  413268:	add	x11, x20, #0x8
  41326c:	mov	x12, #0x100000000           	// #4294967296
  413270:	ldr	x13, [x11, x9, lsl #3]
  413274:	add	x9, x9, #0x1
  413278:	add	x8, x8, x12
  41327c:	cbnz	x13, 413270 <exec_command@@Base+0x98>
  413280:	cmp	x0, #0x0
  413284:	csel	x21, x10, x0, eq  // eq = none
  413288:	add	w10, w9, #0x2
  41328c:	lsl	x10, x10, #3
  413290:	add	x10, x10, #0xf
  413294:	mov	x11, sp
  413298:	and	x10, x10, #0xffffffff0
  41329c:	sub	x22, x11, x10
  4132a0:	mov	sp, x22
  4132a4:	mov	x11, #0x100000000           	// #4294967296
  4132a8:	ldr	x12, [x20]
  4132ac:	add	x8, x8, x11
  4132b0:	and	x10, x9, #0xffffffff
  4132b4:	sub	w9, w9, #0x1
  4132b8:	asr	x8, x8, #32
  4132bc:	sub	x11, x10, x9
  4132c0:	sub	x8, x8, x9
  4132c4:	add	x1, x20, x11, lsl #3
  4132c8:	add	x0, x22, x8, lsl #3
  4132cc:	lsl	x2, x10, #3
  4132d0:	stp	x21, x12, [x22]
  4132d4:	bl	406750 <memcpy@plt>
  4132d8:	mov	x0, x21
  4132dc:	mov	x1, x22
  4132e0:	bl	406c60 <execvp@plt>
  4132e4:	ldr	x0, [x22]
  4132e8:	bl	406790 <strlen@plt>
  4132ec:	ldr	w8, [x19]
  4132f0:	mov	x20, x0
  4132f4:	mov	w0, w8
  4132f8:	bl	406b50 <strerror@plt>
  4132fc:	bl	406790 <strlen@plt>
  413300:	ldr	w8, [x19]
  413304:	ldr	x21, [x22]
  413308:	add	x19, x0, x20
  41330c:	mov	w0, w8
  413310:	bl	406b50 <strerror@plt>
  413314:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  413318:	mov	x4, x0
  41331c:	add	x2, x2, #0xda
  413320:	mov	x0, xzr
  413324:	mov	x1, x19
  413328:	mov	x3, x21
  41332c:	b	413374 <exec_command@@Base+0x19c>
  413330:	ldr	x0, [x20]
  413334:	bl	406790 <strlen@plt>
  413338:	mov	x22, x0
  41333c:	mov	w0, w21
  413340:	bl	406b50 <strerror@plt>
  413344:	bl	406790 <strlen@plt>
  413348:	ldr	x20, [x20]
  41334c:	ldr	w8, [x19]
  413350:	add	x19, x0, x22
  413354:	mov	w0, w8
  413358:	bl	406b50 <strerror@plt>
  41335c:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  413360:	mov	x4, x0
  413364:	add	x2, x2, #0xda
  413368:	mov	x0, xzr
  41336c:	mov	x1, x19
  413370:	mov	x3, x20
  413374:	bl	418744 <error@@Base>
  413378:	mov	w0, #0x7f                  	// #127
  41337c:	bl	406770 <_exit@plt>

0000000000413380 <construct_command_argv@@Base>:
  413380:	stp	x29, x30, [sp, #-80]!
  413384:	stp	x24, x23, [sp, #32]
  413388:	adrp	x24, 43f000 <shell_var@@Base+0x20>
  41338c:	str	x25, [sp, #16]
  413390:	ldr	w25, [x24, #88]
  413394:	stp	x22, x21, [sp, #48]
  413398:	mov	x21, x0
  41339c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4133a0:	stp	x20, x19, [sp, #64]
  4133a4:	mov	x20, x1
  4133a8:	add	x0, x0, #0x556
  4133ac:	mov	x1, x2
  4133b0:	mov	x29, sp
  4133b4:	mov	x19, x2
  4133b8:	str	wzr, [x24, #88]
  4133bc:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  4133c0:	mov	x22, x0
  4133c4:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4133c8:	add	x0, x0, #0x55f
  4133cc:	mov	x1, x19
  4133d0:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  4133d4:	mov	x23, x0
  4133d8:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4133dc:	add	x0, x0, #0x56e
  4133e0:	mov	x1, x19
  4133e4:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  4133e8:	mov	x19, x0
  4133ec:	mov	x0, x21
  4133f0:	mov	x1, x20
  4133f4:	mov	x2, x22
  4133f8:	mov	x3, x23
  4133fc:	mov	x4, x19
  413400:	str	w25, [x24, #88]
  413404:	bl	413440 <construct_command_argv@@Base+0xc0>
  413408:	mov	x20, x0
  41340c:	mov	x0, x22
  413410:	bl	406cb0 <free@plt>
  413414:	mov	x0, x23
  413418:	bl	406cb0 <free@plt>
  41341c:	mov	x0, x19
  413420:	bl	406cb0 <free@plt>
  413424:	mov	x0, x20
  413428:	ldp	x20, x19, [sp, #64]
  41342c:	ldp	x22, x21, [sp, #48]
  413430:	ldp	x24, x23, [sp, #32]
  413434:	ldr	x25, [sp, #16]
  413438:	ldp	x29, x30, [sp], #80
  41343c:	ret
  413440:	sub	sp, sp, #0xa0
  413444:	stp	x24, x23, [sp, #112]
  413448:	stp	x22, x21, [sp, #128]
  41344c:	stp	x20, x19, [sp, #144]
  413450:	mov	x23, x4
  413454:	mov	x22, x2
  413458:	mov	x20, x1
  41345c:	stp	x29, x30, [sp, #64]
  413460:	stp	x28, x27, [sp, #80]
  413464:	stp	x26, x25, [sp, #96]
  413468:	add	x29, sp, #0x40
  41346c:	cbz	x1, 413474 <construct_command_argv@@Base+0xf4>
  413470:	str	xzr, [x20]
  413474:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  413478:	sub	x19, x0, #0x1
  41347c:	add	x28, x28, #0xcf0
  413480:	ldrb	w8, [x19, #1]!
  413484:	ldrh	w9, [x28, x8, lsl #1]
  413488:	tbnz	w9, #1, 413480 <construct_command_argv@@Base+0x100>
  41348c:	cbz	w8, 413c1c <construct_command_argv@@Base+0x89c>
  413490:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  413494:	ldr	w8, [x8, #32]
  413498:	adrp	x11, 43b000 <memcpy@GLIBC_2.17>
  41349c:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  4134a0:	adrp	x10, 424000 <_IO_stdin_used@@Base+0x290>
  4134a4:	ldr	x1, [x11, #2352]
  4134a8:	add	x9, x9, #0x78c
  4134ac:	add	x10, x10, #0xd5b
  4134b0:	cmp	w8, #0x0
  4134b4:	csel	x8, x10, x9, eq  // eq = none
  4134b8:	cmp	x3, #0x0
  4134bc:	csel	x21, x8, x3, eq  // eq = none
  4134c0:	adrp	x24, 43f000 <shell_var@@Base+0x20>
  4134c4:	cbz	x22, 4134dc <construct_command_argv@@Base+0x15c>
  4134c8:	mov	x0, x22
  4134cc:	bl	406c70 <strcmp@plt>
  4134d0:	cbnz	w0, 413874 <construct_command_argv@@Base+0x4f4>
  4134d4:	cbnz	x23, 4134e4 <construct_command_argv@@Base+0x164>
  4134d8:	b	413508 <construct_command_argv@@Base+0x188>
  4134dc:	mov	x22, x1
  4134e0:	cbz	x23, 413508 <construct_command_argv@@Base+0x188>
  4134e4:	ldrb	w8, [x23]
  4134e8:	sub	w9, w8, #0x9
  4134ec:	cmp	w9, #0x2
  4134f0:	b.cc	4134fc <construct_command_argv@@Base+0x17c>  // b.lo, b.ul, b.last
  4134f4:	cmp	w8, #0x20
  4134f8:	b.ne	413504 <construct_command_argv@@Base+0x184>  // b.any
  4134fc:	add	x23, x23, #0x1
  413500:	b	4134e4 <construct_command_argv@@Base+0x164>
  413504:	cbnz	w8, 413874 <construct_command_argv@@Base+0x4f4>
  413508:	ldrb	w8, [x21]
  41350c:	cmp	w8, #0x2d
  413510:	b.ne	413874 <construct_command_argv@@Base+0x4f4>  // b.any
  413514:	ldrb	w8, [x21, #1]
  413518:	cmp	w8, #0x65
  41351c:	b.eq	413534 <construct_command_argv@@Base+0x1b4>  // b.none
  413520:	cmp	w8, #0x63
  413524:	b.ne	413874 <construct_command_argv@@Base+0x4f4>  // b.any
  413528:	ldrb	w8, [x21, #2]
  41352c:	cbnz	w8, 413874 <construct_command_argv@@Base+0x4f4>
  413530:	b	413548 <construct_command_argv@@Base+0x1c8>
  413534:	ldrb	w8, [x21, #2]
  413538:	cmp	w8, #0x63
  41353c:	b.ne	413874 <construct_command_argv@@Base+0x4f4>  // b.any
  413540:	ldrb	w8, [x21, #3]
  413544:	cbnz	w8, 413874 <construct_command_argv@@Base+0x4f4>
  413548:	mov	x0, x19
  41354c:	bl	406790 <strlen@plt>
  413550:	add	x24, x0, #0x1
  413554:	lsl	x0, x24, #3
  413558:	bl	417888 <xmalloc@@Base>
  41355c:	mov	x23, x0
  413560:	mov	x0, x24
  413564:	bl	417888 <xmalloc@@Base>
  413568:	str	x0, [x23]
  41356c:	ldrb	w26, [x19]
  413570:	str	x0, [sp, #16]
  413574:	cbz	w26, 413c44 <construct_command_argv@@Base+0x8c4>
  413578:	mov	w24, wzr
  41357c:	mov	w8, #0x1                   	// #1
  413580:	mov	x11, x0
  413584:	mov	x25, x19
  413588:	stur	xzr, [x29, #-24]
  41358c:	str	wzr, [sp, #32]
  413590:	str	xzr, [sp, #24]
  413594:	and	w27, w26, #0xff
  413598:	tbz	w8, #0, 4135fc <construct_command_argv@@Base+0x27c>
  41359c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4135a0:	mov	w2, #0x15                  	// #21
  4135a4:	add	x0, x0, #0x6d7
  4135a8:	mov	w1, w27
  4135ac:	mov	x24, x11
  4135b0:	bl	406db0 <memchr@plt>
  4135b4:	cbnz	x0, 413860 <construct_command_argv@@Base+0x4e0>
  4135b8:	and	w8, w26, #0xff
  4135bc:	mov	x11, x24
  4135c0:	cmp	w8, #0xa
  4135c4:	b.ne	4135d4 <construct_command_argv@@Base+0x254>  // b.any
  4135c8:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  4135cc:	ldr	w9, [x9, #84]
  4135d0:	cbnz	w9, 413860 <construct_command_argv@@Base+0x4e0>
  4135d4:	cmp	w8, #0x21
  4135d8:	b.le	413664 <construct_command_argv@@Base+0x2e4>
  4135dc:	cmp	w8, #0x3c
  4135e0:	b.gt	4136f4 <construct_command_argv@@Base+0x374>
  4135e4:	cmp	w8, #0x22
  4135e8:	b.eq	4135f4 <construct_command_argv@@Base+0x274>  // b.none
  4135ec:	cmp	w8, #0x27
  4135f0:	b.ne	413778 <construct_command_argv@@Base+0x3f8>  // b.any
  4135f4:	mov	w24, w27
  4135f8:	b	41384c <construct_command_argv@@Base+0x4cc>
  4135fc:	cmp	w24, w27
  413600:	b.ne	413620 <construct_command_argv@@Base+0x2a0>  // b.any
  413604:	ldr	x8, [x23]
  413608:	cmp	x11, x8
  41360c:	b.eq	4136e4 <construct_command_argv@@Base+0x364>  // b.none
  413610:	ldurb	w8, [x11, #-1]
  413614:	cbz	w8, 4136e4 <construct_command_argv@@Base+0x364>
  413618:	mov	w24, wzr
  41361c:	b	41384c <construct_command_argv@@Base+0x4cc>
  413620:	and	w8, w26, #0xff
  413624:	cmp	w8, #0x5c
  413628:	b.ne	413730 <construct_command_argv@@Base+0x3b0>  // b.any
  41362c:	mov	x8, x25
  413630:	ldrb	w9, [x8, #1]!
  413634:	cmp	w9, #0xa
  413638:	b.ne	413740 <construct_command_argv@@Base+0x3c0>  // b.any
  41363c:	cmp	w24, #0x22
  413640:	b.eq	413848 <construct_command_argv@@Base+0x4c8>  // b.none
  413644:	mov	w9, #0x5c                  	// #92
  413648:	strb	w9, [x11]
  41364c:	ldrb	w9, [x8]
  413650:	add	x10, x11, #0x2
  413654:	mov	x25, x8
  413658:	strb	w9, [x11, #1]
  41365c:	mov	x11, x10
  413660:	b	41384c <construct_command_argv@@Base+0x4cc>
  413664:	cmp	w8, #0x9
  413668:	b.eq	41367c <construct_command_argv@@Base+0x2fc>  // b.none
  41366c:	cmp	w8, #0xa
  413670:	b.eq	413784 <construct_command_argv@@Base+0x404>  // b.none
  413674:	cmp	w8, #0x20
  413678:	b.ne	413778 <construct_command_argv@@Base+0x3f8>  // b.any
  41367c:	strb	wzr, [x11], #1
  413680:	ldur	x8, [x29, #-24]
  413684:	ldp	w10, w9, [sp, #24]
  413688:	add	x8, x8, #0x1
  41368c:	cmp	w10, #0x0
  413690:	str	x8, [sp, #8]
  413694:	str	x11, [x23, x8, lsl #3]
  413698:	cset	w8, eq  // eq = none
  41369c:	orr	w9, w9, w8
  4136a0:	str	w9, [sp, #28]
  4136a4:	cbz	w10, 4136b0 <construct_command_argv@@Base+0x330>
  4136a8:	ldr	w8, [sp, #28]
  4136ac:	cbz	w8, 413860 <construct_command_argv@@Base+0x4e0>
  4136b0:	ldur	x8, [x29, #-24]
  4136b4:	cbz	x8, 4137d8 <construct_command_argv@@Base+0x458>
  4136b8:	sub	x25, x25, #0x1
  4136bc:	ldrb	w8, [x25, #2]
  4136c0:	add	x25, x25, #0x1
  4136c4:	ldrh	w8, [x28, x8, lsl #1]
  4136c8:	tbnz	w8, #1, 4136bc <construct_command_argv@@Base+0x33c>
  4136cc:	ldr	x8, [sp, #8]
  4136d0:	mov	w24, wzr
  4136d4:	str	wzr, [sp, #24]
  4136d8:	str	wzr, [sp, #32]
  4136dc:	stur	x8, [x29, #-24]
  4136e0:	b	41384c <construct_command_argv@@Base+0x4cc>
  4136e4:	mov	w8, #0x1                   	// #1
  4136e8:	mov	w24, wzr
  4136ec:	str	w8, [sp, #32]
  4136f0:	b	41384c <construct_command_argv@@Base+0x4cc>
  4136f4:	cmp	w8, #0x5c
  4136f8:	b.eq	413798 <construct_command_argv@@Base+0x418>  // b.none
  4136fc:	cmp	w8, #0x3d
  413700:	b.ne	413778 <construct_command_argv@@Base+0x3f8>  // b.any
  413704:	ldr	w8, [sp, #28]
  413708:	cbnz	w8, 413718 <construct_command_argv@@Base+0x398>
  41370c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  413710:	ldr	w8, [x8, #2360]
  413714:	cbnz	w8, 413860 <construct_command_argv@@Base+0x4e0>
  413718:	mov	w8, #0x3d                  	// #61
  41371c:	strb	w8, [x11], #1
  413720:	mov	w8, #0x1                   	// #1
  413724:	mov	w24, wzr
  413728:	str	w8, [sp, #24]
  41372c:	b	41384c <construct_command_argv@@Base+0x4cc>
  413730:	cbz	x20, 413740 <construct_command_argv@@Base+0x3c0>
  413734:	and	w8, w26, #0xff
  413738:	cmp	w8, #0xa
  41373c:	b.eq	413cec <construct_command_argv@@Base+0x96c>  // b.none
  413740:	cmp	w24, #0x22
  413744:	b.ne	41377c <construct_command_argv@@Base+0x3fc>  // b.any
  413748:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  41374c:	mov	w2, #0x4                   	// #4
  413750:	add	x0, x0, #0x790
  413754:	mov	w1, w27
  413758:	mov	x27, x11
  41375c:	bl	406db0 <memchr@plt>
  413760:	mov	x11, x27
  413764:	cbz	x0, 41377c <construct_command_argv@@Base+0x3fc>
  413768:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41376c:	ldr	w8, [x8, #2360]
  413770:	cbz	w8, 41377c <construct_command_argv@@Base+0x3fc>
  413774:	b	413860 <construct_command_argv@@Base+0x4e0>
  413778:	mov	w24, wzr
  41377c:	strb	w26, [x11], #1
  413780:	b	41384c <construct_command_argv@@Base+0x4cc>
  413784:	cbnz	x20, 413cf4 <construct_command_argv@@Base+0x974>
  413788:	mov	w8, #0xa                   	// #10
  41378c:	mov	w24, wzr
  413790:	strb	w8, [x11], #1
  413794:	b	41384c <construct_command_argv@@Base+0x4cc>
  413798:	mov	x8, x25
  41379c:	ldrb	w9, [x8, #1]!
  4137a0:	cbz	w9, 413618 <construct_command_argv@@Base+0x298>
  4137a4:	cmp	w9, #0xa
  4137a8:	b.ne	413840 <construct_command_argv@@Base+0x4c0>  // b.any
  4137ac:	ldur	x9, [x29, #-24]
  4137b0:	ldr	x9, [x23, x9, lsl #3]
  4137b4:	cmp	x11, x9
  4137b8:	b.eq	4137c4 <construct_command_argv@@Base+0x444>  // b.none
  4137bc:	mov	w24, wzr
  4137c0:	b	413848 <construct_command_argv@@Base+0x4c8>
  4137c4:	ldrb	w8, [x25, #2]
  4137c8:	add	x25, x25, #0x1
  4137cc:	ldrh	w8, [x28, x8, lsl #1]
  4137d0:	tbnz	w8, #1, 4137c4 <construct_command_argv@@Base+0x444>
  4137d4:	b	413618 <construct_command_argv@@Base+0x298>
  4137d8:	ldr	x24, [x23]
  4137dc:	mov	w26, #0x8                   	// #8
  4137e0:	add	x8, x24, #0x1
  4137e4:	stur	x8, [x29, #-24]
  4137e8:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  4137ec:	add	x8, x8, #0x6fe
  4137f0:	cmp	x8, x24
  4137f4:	b.eq	413860 <construct_command_argv@@Base+0x4e0>  // b.none
  4137f8:	ldrb	w9, [x8]
  4137fc:	ldrb	w10, [x24]
  413800:	cmp	w9, w10
  413804:	b.ne	413824 <construct_command_argv@@Base+0x4a4>  // b.any
  413808:	cbz	w9, 413860 <construct_command_argv@@Base+0x4e0>
  41380c:	ldur	x1, [x29, #-24]
  413810:	add	x0, x8, #0x1
  413814:	mov	x27, x11
  413818:	bl	406c70 <strcmp@plt>
  41381c:	mov	x11, x27
  413820:	cbz	w0, 413860 <construct_command_argv@@Base+0x4e0>
  413824:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  413828:	add	x8, x8, #0x820
  41382c:	ldr	x8, [x8, x26]
  413830:	add	x26, x26, #0x8
  413834:	cmp	x26, #0x130
  413838:	b.ne	4137f0 <construct_command_argv@@Base+0x470>  // b.any
  41383c:	b	4136b8 <construct_command_argv@@Base+0x338>
  413840:	mov	w24, wzr
  413844:	strb	w9, [x11], #1
  413848:	mov	x25, x8
  41384c:	ldrb	w26, [x25, #1]!
  413850:	cmp	w24, #0x0
  413854:	cset	w8, eq  // eq = none
  413858:	cbnz	w26, 413594 <construct_command_argv@@Base+0x214>
  41385c:	cbz	w24, 413c50 <construct_command_argv@@Base+0x8d0>
  413860:	ldr	x0, [sp, #16]
  413864:	bl	406cb0 <free@plt>
  413868:	mov	x0, x23
  41386c:	bl	406cb0 <free@plt>
  413870:	adrp	x24, 43f000 <shell_var@@Base+0x20>
  413874:	mov	x0, x22
  413878:	bl	406790 <strlen@plt>
  41387c:	mov	x26, x0
  413880:	mov	x0, x19
  413884:	bl	406790 <strlen@plt>
  413888:	mov	x25, x0
  41388c:	cbz	x21, 4138a0 <construct_command_argv@@Base+0x520>
  413890:	mov	x0, x21
  413894:	bl	406790 <strlen@plt>
  413898:	mov	x23, x0
  41389c:	b	4138a4 <construct_command_argv@@Base+0x524>
  4138a0:	mov	x23, xzr
  4138a4:	ldr	w8, [x24, #84]
  4138a8:	cbz	w8, 413974 <construct_command_argv@@Base+0x5f4>
  4138ac:	mov	x0, x22
  4138b0:	bl	4112a8 <is_bourne_compatible_shell@@Base>
  4138b4:	cbz	w0, 413b34 <construct_command_argv@@Base+0x7b4>
  4138b8:	ldrb	w12, [x19]
  4138bc:	mov	x8, x19
  4138c0:	cbz	w12, 413b30 <construct_command_argv@@Base+0x7b0>
  4138c4:	mov	w10, #0x5                   	// #5
  4138c8:	mov	w9, #0x1                   	// #1
  4138cc:	movk	w10, #0x20, lsl #16
  4138d0:	mov	x8, x19
  4138d4:	mov	x11, x19
  4138d8:	and	x13, x12, #0xff
  4138dc:	ldrh	w13, [x28, x13, lsl #1]
  4138e0:	tbnz	w13, #1, 413900 <construct_command_argv@@Base+0x580>
  4138e4:	and	w13, w12, #0xff
  4138e8:	sub	w14, w13, #0x2b
  4138ec:	cmp	w14, #0x15
  4138f0:	b.hi	413908 <construct_command_argv@@Base+0x588>  // b.pmore
  4138f4:	lsl	w14, w9, w14
  4138f8:	tst	w14, w10
  4138fc:	b.eq	413908 <construct_command_argv@@Base+0x588>  // b.none
  413900:	ldrb	w12, [x11, #1]!
  413904:	b	4138d8 <construct_command_argv@@Base+0x558>
  413908:	cbz	w13, 413968 <construct_command_argv@@Base+0x5e8>
  41390c:	mov	x13, xzr
  413910:	mov	w16, wzr
  413914:	add	x14, x11, x13
  413918:	strb	w12, [x8, x13]
  41391c:	ldrb	w12, [x14]
  413920:	cmp	w12, #0x5c
  413924:	b.ne	413934 <construct_command_argv@@Base+0x5b4>  // b.any
  413928:	cmp	w16, #0x0
  41392c:	cset	w15, eq  // eq = none
  413930:	b	413944 <construct_command_argv@@Base+0x5c4>
  413934:	mov	w15, wzr
  413938:	cbnz	w16, 413944 <construct_command_argv@@Base+0x5c4>
  41393c:	cmp	w12, #0xa
  413940:	b.eq	413958 <construct_command_argv@@Base+0x5d8>  // b.none
  413944:	ldrb	w12, [x14, #1]
  413948:	add	x13, x13, #0x1
  41394c:	mov	w16, w15
  413950:	cbnz	w12, 413914 <construct_command_argv@@Base+0x594>
  413954:	b	413b2c <construct_command_argv@@Base+0x7ac>
  413958:	add	x11, x11, x13
  41395c:	ldrb	w12, [x11, #1]!
  413960:	add	x8, x8, x13
  413964:	add	x8, x8, #0x1
  413968:	tst	w12, #0xff
  41396c:	b.ne	4138d8 <construct_command_argv@@Base+0x558>  // b.any
  413970:	b	413b30 <construct_command_argv@@Base+0x7b0>
  413974:	mov	w8, #0x1                   	// #1
  413978:	bfi	x8, x26, #1, #63
  41397c:	add	x8, x8, x25, lsl #1
  413980:	add	x8, x8, x23
  413984:	add	x0, x8, #0x2
  413988:	str	x26, [sp, #32]
  41398c:	stur	x23, [x29, #-24]
  413990:	bl	417888 <xmalloc@@Base>
  413994:	ldrb	w24, [x22]
  413998:	mov	x25, x0
  41399c:	mov	x26, x0
  4139a0:	cbz	w24, 4139e0 <construct_command_argv@@Base+0x660>
  4139a4:	add	x23, x22, #0x1
  4139a8:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  4139ac:	add	x22, x22, #0x6d7
  4139b0:	mov	w27, #0x5c                  	// #92
  4139b4:	mov	x26, x25
  4139b8:	and	w1, w24, #0xff
  4139bc:	mov	w2, #0x15                  	// #21
  4139c0:	mov	x0, x22
  4139c4:	bl	406db0 <memchr@plt>
  4139c8:	cbz	x0, 4139d4 <construct_command_argv@@Base+0x654>
  4139cc:	strb	w27, [x26], #1
  4139d0:	ldurb	w24, [x23, #-1]
  4139d4:	strb	w24, [x26], #1
  4139d8:	ldrb	w24, [x23], #1
  4139dc:	cbnz	w24, 4139b8 <construct_command_argv@@Base+0x638>
  4139e0:	ldur	x23, [x29, #-24]
  4139e4:	mov	w22, #0x20                  	// #32
  4139e8:	strb	w22, [x26], #1
  4139ec:	cbz	x21, 413a00 <construct_command_argv@@Base+0x680>
  4139f0:	mov	x0, x26
  4139f4:	mov	x1, x21
  4139f8:	mov	x2, x23
  4139fc:	bl	406750 <memcpy@plt>
  413a00:	add	x23, x26, x23
  413a04:	mov	x26, x23
  413a08:	strb	w22, [x26], #1
  413a0c:	ldrb	w24, [x19]
  413a10:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  413a14:	cbz	w24, 413bc0 <construct_command_argv@@Base+0x840>
  413a18:	adrp	x11, 426000 <_IO_stdin_used@@Base+0x2290>
  413a1c:	mov	x14, #0x21                  	// #33
  413a20:	mov	w12, #0x5c                  	// #92
  413a24:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  413a28:	mov	w10, #0xa                   	// #10
  413a2c:	add	x11, x11, #0x6d7
  413a30:	mov	w13, #0x1                   	// #1
  413a34:	movk	x14, #0x400, lsl #48
  413a38:	cbz	x20, 413a48 <construct_command_argv@@Base+0x6c8>
  413a3c:	and	w8, w24, #0xff
  413a40:	cmp	w8, #0xa
  413a44:	b.eq	413bbc <construct_command_argv@@Base+0x83c>  // b.none
  413a48:	and	w8, w24, #0xff
  413a4c:	cmp	w8, #0x5c
  413a50:	b.ne	413a78 <construct_command_argv@@Base+0x6f8>  // b.any
  413a54:	mov	x8, x19
  413a58:	ldrb	w9, [x8, #1]!
  413a5c:	cmp	w9, #0xa
  413a60:	b.ne	413a78 <construct_command_argv@@Base+0x6f8>  // b.any
  413a64:	strb	w12, [x26]
  413a68:	ldr	w9, [x21, #3040]
  413a6c:	cbz	w9, 413ab8 <construct_command_argv@@Base+0x738>
  413a70:	add	x26, x23, #0x2
  413a74:	b	413ac0 <construct_command_argv@@Base+0x740>
  413a78:	ldr	w8, [x22, #2360]
  413a7c:	cbz	w8, 413ab0 <construct_command_argv@@Base+0x730>
  413a80:	ldr	w8, [x21, #3040]
  413a84:	cbnz	w8, 413ab0 <construct_command_argv@@Base+0x730>
  413a88:	and	w1, w24, #0xff
  413a8c:	sub	w8, w1, #0x22
  413a90:	cmp	w8, #0x3a
  413a94:	b.hi	413adc <construct_command_argv@@Base+0x75c>  // b.pmore
  413a98:	lsl	x8, x13, x8
  413a9c:	tst	x8, x14
  413aa0:	b.eq	413adc <construct_command_argv@@Base+0x75c>  // b.none
  413aa4:	strb	w12, [x26]
  413aa8:	ldrb	w24, [x19]
  413aac:	add	x26, x23, #0x2
  413ab0:	strb	w24, [x26]
  413ab4:	b	413ac8 <construct_command_argv@@Base+0x748>
  413ab8:	add	x26, x23, #0x3
  413abc:	strb	w12, [x23, #2]
  413ac0:	strb	w10, [x26]
  413ac4:	mov	x19, x8
  413ac8:	ldrb	w24, [x19, #1]!
  413acc:	mov	x23, x26
  413ad0:	add	x26, x26, #0x1
  413ad4:	cbnz	w24, 413a38 <construct_command_argv@@Base+0x6b8>
  413ad8:	b	413bc0 <construct_command_argv@@Base+0x840>
  413adc:	and	x8, x24, #0xff
  413ae0:	ldrh	w8, [x28, x8, lsl #1]
  413ae4:	tst	w8, #0x6
  413ae8:	b.ne	413aa4 <construct_command_argv@@Base+0x724>  // b.any
  413aec:	mov	w2, #0x15                  	// #21
  413af0:	mov	x0, x11
  413af4:	mov	x27, x20
  413af8:	mov	x20, x25
  413afc:	mov	x25, x11
  413b00:	bl	406db0 <memchr@plt>
  413b04:	mov	x14, #0x21                  	// #33
  413b08:	movk	x14, #0x400, lsl #48
  413b0c:	mov	w13, #0x1                   	// #1
  413b10:	mov	w12, #0x5c                  	// #92
  413b14:	mov	x11, x25
  413b18:	mov	x25, x20
  413b1c:	mov	x20, x27
  413b20:	mov	w10, #0xa                   	// #10
  413b24:	cbnz	x0, 413aa4 <construct_command_argv@@Base+0x724>
  413b28:	b	413ab0 <construct_command_argv@@Base+0x730>
  413b2c:	add	x8, x8, x13
  413b30:	strb	wzr, [x8]
  413b34:	lsl	x8, x23, #2
  413b38:	and	x8, x8, #0xfffffffffffffff8
  413b3c:	add	x0, x8, #0x20
  413b40:	bl	417888 <xmalloc@@Base>
  413b44:	mov	x23, x0
  413b48:	mov	x0, x22
  413b4c:	bl	4178d4 <xstrdup@@Base>
  413b50:	str	x0, [x23]
  413b54:	cbz	x21, 413b98 <construct_command_argv@@Base+0x818>
  413b58:	sub	x0, x29, #0x8
  413b5c:	sub	x1, x29, #0x10
  413b60:	stur	x21, [x29, #-8]
  413b64:	bl	417970 <find_next_token@@Base>
  413b68:	mov	w20, #0x1                   	// #1
  413b6c:	cbz	x0, 413bac <construct_command_argv@@Base+0x82c>
  413b70:	ldur	x1, [x29, #-16]
  413b74:	mov	x21, x20
  413b78:	bl	4178f0 <xstrndup@@Base>
  413b7c:	str	x0, [x23, x21, lsl #3]
  413b80:	sub	x0, x29, #0x8
  413b84:	sub	x1, x29, #0x10
  413b88:	add	x20, x20, #0x1
  413b8c:	bl	417970 <find_next_token@@Base>
  413b90:	cbnz	x0, 413b70 <construct_command_argv@@Base+0x7f0>
  413b94:	b	413bac <construct_command_argv@@Base+0x82c>
  413b98:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  413b9c:	add	x0, x0, #0x5eb
  413ba0:	bl	4178d4 <xstrdup@@Base>
  413ba4:	str	x0, [x23, #8]
  413ba8:	mov	w20, #0x2                   	// #2
  413bac:	add	w8, w20, #0x1
  413bb0:	str	x19, [x23, w20, uxtw #3]
  413bb4:	str	xzr, [x23, w8, uxtw #3]
  413bb8:	b	413c20 <construct_command_argv@@Base+0x8a0>
  413bbc:	str	x19, [x20]
  413bc0:	ldr	x8, [sp, #32]
  413bc4:	ldur	x9, [x29, #-24]
  413bc8:	add	x8, x25, x8
  413bcc:	add	x8, x8, x9
  413bd0:	add	x8, x8, #0x2
  413bd4:	cmp	x26, x8
  413bd8:	b.eq	413c14 <construct_command_argv@@Base+0x894>  // b.none
  413bdc:	strb	wzr, [x26]
  413be0:	ldr	w8, [x22, #2360]
  413be4:	cbz	w8, 413cfc <construct_command_argv@@Base+0x97c>
  413be8:	mov	x0, x25
  413bec:	mov	x1, xzr
  413bf0:	mov	x2, xzr
  413bf4:	mov	x3, xzr
  413bf8:	mov	x4, xzr
  413bfc:	bl	413440 <construct_command_argv@@Base+0xc0>
  413c00:	mov	x19, x0
  413c04:	mov	x0, x25
  413c08:	bl	406cb0 <free@plt>
  413c0c:	mov	x0, x19
  413c10:	b	413c24 <construct_command_argv@@Base+0x8a4>
  413c14:	mov	x0, x25
  413c18:	bl	406cb0 <free@plt>
  413c1c:	mov	x23, xzr
  413c20:	mov	x0, x23
  413c24:	ldp	x20, x19, [sp, #144]
  413c28:	ldp	x22, x21, [sp, #128]
  413c2c:	ldp	x24, x23, [sp, #112]
  413c30:	ldp	x26, x25, [sp, #96]
  413c34:	ldp	x28, x27, [sp, #80]
  413c38:	ldp	x29, x30, [sp, #64]
  413c3c:	add	sp, sp, #0xa0
  413c40:	ret
  413c44:	str	wzr, [sp, #32]
  413c48:	stur	xzr, [x29, #-24]
  413c4c:	mov	x11, x0
  413c50:	ldur	x9, [x29, #-24]
  413c54:	strb	wzr, [x11]
  413c58:	ldr	w10, [sp, #32]
  413c5c:	ldr	x8, [x23, x9, lsl #3]
  413c60:	ldrb	w8, [x8]
  413c64:	orr	w8, w10, w8
  413c68:	cmp	w8, #0x0
  413c6c:	cinc	x8, x9, ne  // ne = any
  413c70:	str	xzr, [x23, x8, lsl #3]
  413c74:	ldr	x24, [x23]
  413c78:	cmp	x8, #0x1
  413c7c:	b.ne	413cd8 <construct_command_argv@@Base+0x958>  // b.any
  413c80:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  413c84:	adrp	x27, 426000 <_IO_stdin_used@@Base+0x2290>
  413c88:	add	x25, x24, #0x1
  413c8c:	add	x8, x8, #0x6fe
  413c90:	mov	w26, #0x8                   	// #8
  413c94:	add	x27, x27, #0x820
  413c98:	cmp	x8, x24
  413c9c:	b.eq	413860 <construct_command_argv@@Base+0x4e0>  // b.none
  413ca0:	ldrb	w9, [x8]
  413ca4:	ldrb	w10, [x24]
  413ca8:	cmp	w9, w10
  413cac:	b.ne	413cc4 <construct_command_argv@@Base+0x944>  // b.any
  413cb0:	cbz	w9, 413860 <construct_command_argv@@Base+0x4e0>
  413cb4:	add	x0, x8, #0x1
  413cb8:	mov	x1, x25
  413cbc:	bl	406c70 <strcmp@plt>
  413cc0:	cbz	w0, 413860 <construct_command_argv@@Base+0x4e0>
  413cc4:	ldr	x8, [x27, x26]
  413cc8:	add	x26, x26, #0x8
  413ccc:	cmp	x26, #0x130
  413cd0:	b.ne	413c98 <construct_command_argv@@Base+0x918>  // b.any
  413cd4:	b	413c20 <construct_command_argv@@Base+0x8a0>
  413cd8:	cbnz	x24, 413c20 <construct_command_argv@@Base+0x8a0>
  413cdc:	ldr	x0, [sp, #16]
  413ce0:	bl	406cb0 <free@plt>
  413ce4:	mov	x0, x23
  413ce8:	b	413c18 <construct_command_argv@@Base+0x898>
  413cec:	str	x25, [x20]
  413cf0:	b	413860 <construct_command_argv@@Base+0x4e0>
  413cf4:	str	x25, [x20]
  413cf8:	b	413c50 <construct_command_argv@@Base+0x8d0>
  413cfc:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  413d00:	add	x1, x1, #0x794
  413d04:	mov	w2, #0x5                   	// #5
  413d08:	mov	x0, xzr
  413d0c:	bl	406e10 <dcgettext@plt>
  413d10:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  413d14:	mov	x2, x0
  413d18:	add	x3, x3, #0x7d2
  413d1c:	mov	w1, #0x1d                  	// #29
  413d20:	mov	w4, #0xe16                 	// #3606
  413d24:	mov	x0, xzr
  413d28:	bl	4188bc <fatal@@Base>

0000000000413d2c <load_file@@Base>:
  413d2c:	stp	x29, x30, [sp, #-96]!
  413d30:	stp	x26, x25, [sp, #32]
  413d34:	stp	x24, x23, [sp, #48]
  413d38:	stp	x22, x21, [sp, #64]
  413d3c:	stp	x20, x19, [sp, #80]
  413d40:	ldr	x21, [x1]
  413d44:	mov	x19, x0
  413d48:	str	x27, [sp, #16]
  413d4c:	mov	x29, sp
  413d50:	mov	x0, x21
  413d54:	mov	w22, w2
  413d58:	mov	x20, x1
  413d5c:	bl	406790 <strlen@plt>
  413d60:	add	x9, x0, #0x1a
  413d64:	mov	x8, sp
  413d68:	and	x9, x9, #0xfffffffffffffff0
  413d6c:	mov	x25, x0
  413d70:	sub	x24, x8, x9
  413d74:	mov	sp, x24
  413d78:	mov	w1, #0x28                  	// #40
  413d7c:	mov	x0, x21
  413d80:	bl	406cd0 <strchr@plt>
  413d84:	mov	x23, x0
  413d88:	cbz	x0, 413df8 <load_file@@Base+0xcc>
  413d8c:	add	x26, x23, #0x1
  413d90:	mov	w1, #0x29                  	// #41
  413d94:	mov	x0, x26
  413d98:	bl	406cd0 <strchr@plt>
  413d9c:	cbz	x0, 413dac <load_file@@Base+0x80>
  413da0:	ldrb	w8, [x0, #1]
  413da4:	mov	x27, x0
  413da8:	cbz	w8, 413db4 <load_file@@Base+0x88>
  413dac:	mov	x23, xzr
  413db0:	b	413df8 <load_file@@Base+0xcc>
  413db4:	cmp	x26, x27
  413db8:	b.eq	4141b8 <load_file@@Base+0x48c>  // b.none
  413dbc:	sub	x25, x23, x21
  413dc0:	mov	x0, x24
  413dc4:	mov	x1, x21
  413dc8:	mov	x2, x25
  413dcc:	bl	406750 <memcpy@plt>
  413dd0:	add	x23, x24, x25
  413dd4:	strb	wzr, [x23], #1
  413dd8:	sub	x21, x27, x26
  413ddc:	mov	x0, x23
  413de0:	mov	x1, x26
  413de4:	mov	x2, x21
  413de8:	str	x24, [x20]
  413dec:	bl	406750 <memcpy@plt>
  413df0:	strb	wzr, [x23, x21]
  413df4:	mov	x21, x24
  413df8:	mov	x0, x21
  413dfc:	bl	42016c <strcache_add@@Base>
  413e00:	str	x0, [x20]
  413e04:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  413e08:	add	x0, x0, #0x96f
  413e0c:	mov	x1, xzr
  413e10:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  413e14:	ldr	x26, [x20]
  413e18:	mov	x21, x0
  413e1c:	mov	x1, x26
  413e20:	bl	406e00 <strstr@plt>
  413e24:	cbz	x0, 413e48 <load_file@@Base+0x11c>
  413e28:	cmp	x0, x21
  413e2c:	b.eq	413e3c <load_file@@Base+0x110>  // b.none
  413e30:	ldurb	w8, [x0, #-1]
  413e34:	cmp	w8, #0x20
  413e38:	b.ne	413e48 <load_file@@Base+0x11c>  // b.any
  413e3c:	ldrb	w8, [x0, x25]
  413e40:	tst	w8, #0xffffffdf
  413e44:	b.eq	413f8c <load_file@@Base+0x260>  // b.none
  413e48:	cbnz	x23, 413ec8 <load_file@@Base+0x19c>
  413e4c:	mov	w1, #0x2f                  	// #47
  413e50:	mov	x0, x26
  413e54:	bl	406b80 <strrchr@plt>
  413e58:	cmp	x0, #0x0
  413e5c:	csinc	x23, x26, x0, eq  // eq = none
  413e60:	bl	406c80 <__ctype_b_loc@plt>
  413e64:	ldrb	w8, [x23]
  413e68:	cmp	x8, #0x5f
  413e6c:	b.eq	413e80 <load_file@@Base+0x154>  // b.none
  413e70:	ldr	x9, [x0]
  413e74:	ldrh	w10, [x9, x8, lsl #1]
  413e78:	mov	x9, x24
  413e7c:	tbz	w10, #3, 413ea8 <load_file@@Base+0x17c>
  413e80:	add	x10, x23, #0x1
  413e84:	mov	x9, x24
  413e88:	strb	w8, [x9], #1
  413e8c:	ldr	x11, [x0]
  413e90:	ldrb	w8, [x10], #1
  413e94:	ldrh	w11, [x11, x8, lsl #1]
  413e98:	cmp	x8, #0x5f
  413e9c:	and	w11, w11, #0x8
  413ea0:	b.eq	413e88 <load_file@@Base+0x15c>  // b.none
  413ea4:	cbnz	w11, 413e88 <load_file@@Base+0x15c>
  413ea8:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  413eac:	add	x8, x8, #0x97a
  413eb0:	ldr	x8, [x8]
  413eb4:	mov	w10, #0x7574                	// #30068
  413eb8:	movk	w10, #0x70, lsl #16
  413ebc:	mov	x23, x24
  413ec0:	stur	w10, [x9, #7]
  413ec4:	str	x8, [x9]
  413ec8:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  413ecc:	ldrb	w8, [x27, #3236]
  413ed0:	tbz	w8, #1, 413f00 <load_file@@Base+0x1d4>
  413ed4:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  413ed8:	add	x1, x1, #0x985
  413edc:	mov	w2, #0x5                   	// #5
  413ee0:	mov	x0, xzr
  413ee4:	bl	406e10 <dcgettext@plt>
  413ee8:	ldr	x2, [x20]
  413eec:	mov	x1, x23
  413ef0:	bl	406ea0 <printf@plt>
  413ef4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  413ef8:	ldr	x0, [x8, #2512]
  413efc:	bl	406d40 <fflush@plt>
  413f00:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  413f04:	ldr	x0, [x25, #3224]
  413f08:	ldr	x24, [x20]
  413f0c:	cbnz	x0, 413f20 <load_file@@Base+0x1f4>
  413f10:	mov	w1, #0x102                 	// #258
  413f14:	bl	406910 <dlopen@plt>
  413f18:	str	x0, [x25, #3224]
  413f1c:	cbz	x0, 4140f0 <load_file@@Base+0x3c4>
  413f20:	mov	x1, x23
  413f24:	bl	4069f0 <dlsym@plt>
  413f28:	mov	x26, x0
  413f2c:	cbnz	x0, 414008 <load_file@@Base+0x2dc>
  413f30:	mov	w1, #0x2f                  	// #47
  413f34:	mov	x0, x24
  413f38:	bl	406cd0 <strchr@plt>
  413f3c:	cbz	x0, 413f94 <load_file@@Base+0x268>
  413f40:	mov	w1, #0x101                 	// #257
  413f44:	mov	x0, x24
  413f48:	bl	406910 <dlopen@plt>
  413f4c:	mov	x25, x0
  413f50:	cbnz	x0, 413fb8 <load_file@@Base+0x28c>
  413f54:	bl	4069e0 <dlerror@plt>
  413f58:	mov	x20, x0
  413f5c:	cbz	w22, 4140cc <load_file@@Base+0x3a0>
  413f60:	ldrb	w8, [x27, #3236]
  413f64:	tbz	w8, #0, 413f84 <load_file@@Base+0x258>
  413f68:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  413f6c:	add	x0, x0, #0x96c
  413f70:	mov	x1, x20
  413f74:	bl	406ea0 <printf@plt>
  413f78:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  413f7c:	ldr	x0, [x8, #2512]
  413f80:	bl	406d40 <fflush@plt>
  413f84:	mov	w22, wzr
  413f88:	b	4140a8 <load_file@@Base+0x37c>
  413f8c:	mov	w22, #0x1                   	// #1
  413f90:	b	4140a0 <load_file@@Base+0x374>
  413f94:	adrp	x1, 425000 <_IO_stdin_used@@Base+0x1290>
  413f98:	add	x1, x1, #0x6f6
  413f9c:	mov	w0, #0x2                   	// #2
  413fa0:	mov	x2, x24
  413fa4:	bl	4176dc <concat@@Base>
  413fa8:	mov	w1, #0x101                 	// #257
  413fac:	bl	406910 <dlopen@plt>
  413fb0:	mov	x25, x0
  413fb4:	cbz	x0, 413f40 <load_file@@Base+0x214>
  413fb8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  413fbc:	add	x1, x1, #0x9d9
  413fc0:	mov	x0, x25
  413fc4:	bl	4069f0 <dlsym@plt>
  413fc8:	cbz	x0, 414128 <load_file@@Base+0x3fc>
  413fcc:	mov	x0, x25
  413fd0:	mov	x1, x23
  413fd4:	bl	4069f0 <dlsym@plt>
  413fd8:	cbz	x0, 41415c <load_file@@Base+0x430>
  413fdc:	mov	x26, x0
  413fe0:	mov	w0, #0x18                  	// #24
  413fe4:	bl	417888 <xmalloc@@Base>
  413fe8:	mov	x22, x0
  413fec:	mov	x0, x24
  413ff0:	bl	4178d4 <xstrdup@@Base>
  413ff4:	stp	x0, x25, [x22, #8]
  413ff8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  413ffc:	ldr	x9, [x8, #3216]
  414000:	str	x9, [x22]
  414004:	str	x22, [x8, #3216]
  414008:	mov	x0, x19
  41400c:	blr	x26
  414010:	mov	w22, w0
  414014:	cmp	w0, #0x1
  414018:	b.lt	4140a0 <load_file@@Base+0x374>  // b.tstop
  41401c:	mov	x0, x21
  414020:	bl	406790 <strlen@plt>
  414024:	ldr	x20, [x20]
  414028:	mov	x24, x0
  41402c:	mov	x0, x20
  414030:	bl	406790 <strlen@plt>
  414034:	add	x8, x24, x0
  414038:	add	x8, x8, #0x11
  41403c:	and	x8, x8, #0xfffffffffffffff0
  414040:	mov	x9, sp
  414044:	sub	x23, x9, x8
  414048:	mov	sp, x23
  41404c:	cbz	x24, 414070 <load_file@@Base+0x344>
  414050:	mov	x0, x23
  414054:	mov	x1, x21
  414058:	mov	x2, x24
  41405c:	bl	406750 <memcpy@plt>
  414060:	add	x8, x24, #0x1
  414064:	mov	w9, #0x20                  	// #32
  414068:	strb	w9, [x23, x24]
  41406c:	b	414074 <load_file@@Base+0x348>
  414070:	mov	x8, xzr
  414074:	add	x0, x23, x8
  414078:	mov	x1, x20
  41407c:	bl	406d50 <strcpy@plt>
  414080:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  414084:	add	x1, x1, #0x9a0
  414088:	mov	w4, #0x1                   	// #1
  41408c:	mov	x0, x19
  414090:	mov	x2, x23
  414094:	mov	w3, wzr
  414098:	mov	w5, wzr
  41409c:	bl	421154 <do_variable_definition@@Base>
  4140a0:	mov	x0, x21
  4140a4:	bl	406cb0 <free@plt>
  4140a8:	mov	w0, w22
  4140ac:	mov	sp, x29
  4140b0:	ldp	x20, x19, [sp, #80]
  4140b4:	ldp	x22, x21, [sp, #64]
  4140b8:	ldp	x24, x23, [sp, #48]
  4140bc:	ldp	x26, x25, [sp, #32]
  4140c0:	ldr	x27, [sp, #16]
  4140c4:	ldp	x29, x30, [sp], #96
  4140c8:	ret
  4140cc:	mov	x0, x20
  4140d0:	bl	406790 <strlen@plt>
  4140d4:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  4140d8:	mov	x1, x0
  4140dc:	add	x2, x2, #0x96c
  4140e0:	mov	x0, x19
  4140e4:	mov	x3, x20
  4140e8:	bl	418744 <error@@Base>
  4140ec:	b	4140a8 <load_file@@Base+0x37c>
  4140f0:	bl	4069e0 <dlerror@plt>
  4140f4:	mov	x20, x0
  4140f8:	bl	406790 <strlen@plt>
  4140fc:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  414100:	mov	x21, x0
  414104:	add	x1, x1, #0x9b2
  414108:	mov	w2, #0x5                   	// #5
  41410c:	mov	x0, xzr
  414110:	bl	406e10 <dcgettext@plt>
  414114:	mov	x2, x0
  414118:	mov	x0, x19
  41411c:	mov	x1, x21
  414120:	mov	x3, x20
  414124:	bl	4188bc <fatal@@Base>
  414128:	mov	x0, x24
  41412c:	bl	406790 <strlen@plt>
  414130:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  414134:	mov	x20, x0
  414138:	add	x1, x1, #0x9f2
  41413c:	mov	w2, #0x5                   	// #5
  414140:	mov	x0, xzr
  414144:	bl	406e10 <dcgettext@plt>
  414148:	mov	x2, x0
  41414c:	mov	x0, x19
  414150:	mov	x1, x20
  414154:	mov	x3, x24
  414158:	bl	4188bc <fatal@@Base>
  41415c:	bl	4069e0 <dlerror@plt>
  414160:	mov	x20, x0
  414164:	mov	x0, x23
  414168:	bl	406790 <strlen@plt>
  41416c:	mov	x21, x0
  414170:	mov	x0, x24
  414174:	bl	406790 <strlen@plt>
  414178:	add	x21, x0, x21
  41417c:	mov	x0, x20
  414180:	bl	406790 <strlen@plt>
  414184:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  414188:	add	x21, x21, x0
  41418c:	add	x1, x1, #0xa28
  414190:	mov	w2, #0x5                   	// #5
  414194:	mov	x0, xzr
  414198:	bl	406e10 <dcgettext@plt>
  41419c:	mov	x2, x0
  4141a0:	mov	x0, x19
  4141a4:	mov	x1, x21
  4141a8:	mov	x3, x23
  4141ac:	mov	x4, x24
  4141b0:	mov	x5, x20
  4141b4:	bl	4188bc <fatal@@Base>
  4141b8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4141bc:	add	x1, x1, #0x950
  4141c0:	mov	w2, #0x5                   	// #5
  4141c4:	mov	x0, xzr
  4141c8:	bl	406e10 <dcgettext@plt>
  4141cc:	ldr	x3, [x20]
  4141d0:	mov	x2, x0
  4141d4:	mov	x0, x19
  4141d8:	mov	x1, x25
  4141dc:	bl	4188bc <fatal@@Base>

00000000004141e0 <unload_file@@Base>:
  4141e0:	stp	x29, x30, [sp, #-48]!
  4141e4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4141e8:	str	x21, [sp, #16]
  4141ec:	ldr	x21, [x8, #3216]
  4141f0:	stp	x20, x19, [sp, #32]
  4141f4:	mov	x29, sp
  4141f8:	cbz	x21, 414264 <unload_file@@Base+0x84>
  4141fc:	mov	x19, x0
  414200:	add	x20, x0, #0x1
  414204:	ldr	x8, [x21, #8]
  414208:	cmp	x8, x19
  41420c:	b.eq	414234 <unload_file@@Base+0x54>  // b.none
  414210:	ldrb	w9, [x8]
  414214:	ldrb	w10, [x19]
  414218:	cmp	w9, w10
  41421c:	b.ne	41423c <unload_file@@Base+0x5c>  // b.any
  414220:	cbz	w9, 414234 <unload_file@@Base+0x54>
  414224:	add	x0, x8, #0x1
  414228:	mov	x1, x20
  41422c:	bl	406c70 <strcmp@plt>
  414230:	cbnz	w0, 41423c <unload_file@@Base+0x5c>
  414234:	ldr	x0, [x21, #16]
  414238:	cbnz	x0, 414248 <unload_file@@Base+0x68>
  41423c:	ldr	x21, [x21]
  414240:	cbnz	x21, 414204 <unload_file@@Base+0x24>
  414244:	b	414264 <unload_file@@Base+0x84>
  414248:	bl	4068b0 <dlclose@plt>
  41424c:	cbz	w0, 414260 <unload_file@@Base+0x80>
  414250:	ldr	x1, [x21, #8]
  414254:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  414258:	add	x0, x0, #0x9a8
  41425c:	bl	418a4c <perror_with_name@@Base>
  414260:	str	xzr, [x21, #16]
  414264:	ldp	x20, x19, [sp, #32]
  414268:	ldr	x21, [sp, #16]
  41426c:	ldp	x29, x30, [sp], #48
  414270:	ret

0000000000414274 <gmk_alloc@@Base>:
  414274:	mov	w0, w0
  414278:	b	417888 <xmalloc@@Base>

000000000041427c <gmk_free@@Base>:
  41427c:	b	406cb0 <free@plt>

0000000000414280 <gmk_eval@@Base>:
  414280:	sub	sp, sp, #0x50
  414284:	stp	x20, x19, [sp, #64]
  414288:	mov	x19, x0
  41428c:	stp	x29, x30, [sp, #48]
  414290:	add	x29, sp, #0x30
  414294:	cbz	x1, 4142ac <gmk_eval@@Base+0x2c>
  414298:	ldr	q0, [x1]
  41429c:	mov	x20, sp
  4142a0:	str	xzr, [sp, #16]
  4142a4:	str	q0, [sp]
  4142a8:	b	4142b0 <gmk_eval@@Base+0x30>
  4142ac:	mov	x20, xzr
  4142b0:	sub	x0, x29, #0x8
  4142b4:	sub	x1, x29, #0x10
  4142b8:	bl	40a36c <install_variable_buffer@@Base>
  4142bc:	mov	x0, x19
  4142c0:	bl	4178d4 <xstrdup@@Base>
  4142c4:	mov	x1, x20
  4142c8:	mov	x19, x0
  4142cc:	bl	4191d0 <eval_buffer@@Base>
  4142d0:	mov	x0, x19
  4142d4:	bl	406cb0 <free@plt>
  4142d8:	ldp	x1, x0, [x29, #-16]
  4142dc:	bl	40a3b8 <restore_variable_buffer@@Base>
  4142e0:	ldp	x20, x19, [sp, #64]
  4142e4:	ldp	x29, x30, [sp, #48]
  4142e8:	add	sp, sp, #0x50
  4142ec:	ret

00000000004142f0 <gmk_expand@@Base>:
  4142f0:	mov	x1, xzr
  4142f4:	b	409c00 <allocated_variable_expand_for_file@@Base>

00000000004142f8 <gmk_add_function@@Base>:
  4142f8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4142fc:	ldr	x8, [x8, #1552]
  414300:	mov	x5, x1
  414304:	mov	x1, x0
  414308:	mov	x0, x8
  41430c:	b	40d09c <define_new_function@@Base>

0000000000414310 <main@@Base>:
  414310:	stp	x29, x30, [sp, #-96]!
  414314:	stp	x28, x27, [sp, #16]
  414318:	stp	x26, x25, [sp, #32]
  41431c:	stp	x24, x23, [sp, #48]
  414320:	stp	x22, x21, [sp, #64]
  414324:	stp	x20, x19, [sp, #80]
  414328:	mov	x29, sp
  41432c:	sub	sp, sp, #0x1, lsl #12
  414330:	sub	sp, sp, #0x850
  414334:	mov	x19, sp
  414338:	str	x0, [x19, #48]
  41433c:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  414340:	add	x0, x0, #0x48
  414344:	mov	x24, x2
  414348:	mov	x23, x1
  41434c:	bl	4181d0 <output_init@@Base>
  414350:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  414354:	add	x22, x22, #0xcf0
  414358:	mov	w9, #0x20                  	// #32
  41435c:	mov	w8, #0x8                   	// #8
  414360:	strh	w9, [x22, #122]
  414364:	mov	w9, #0x800080              	// #8388736
  414368:	movk	w8, #0x4000, lsl #16
  41436c:	str	w9, [x22, #80]
  414370:	mov	w9, #0x80                  	// #128
  414374:	stur	w8, [x22, #70]
  414378:	mov	w8, #0x40                  	// #64
  41437c:	strh	w9, [x22, #250]
  414380:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  414384:	movk	w8, #0x10, lsl #16
  414388:	ldr	d0, [x9, #2640]
  41438c:	str	w8, [x22, #116]
  414390:	mov	w8, #0x80                  	// #128
  414394:	movk	w8, #0x100, lsl #16
  414398:	mov	w20, #0x1                   	// #1
  41439c:	stur	w8, [x22, #246]
  4143a0:	mov	w8, #0x2000                	// #8192
  4143a4:	mov	w21, #0x2                   	// #2
  4143a8:	strh	w20, [x22]
  4143ac:	strh	w8, [x22, #190]
  4143b0:	strh	w21, [x22, #64]
  4143b4:	strh	w21, [x22, #18]
  4143b8:	str	d0, [x22, #88]
  4143bc:	bl	406c80 <__ctype_b_loc@plt>
  4143c0:	ldr	x8, [x0]
  4143c4:	ldrh	w9, [x8, x21]
  4143c8:	tbz	w9, #13, 4143e0 <main@@Base+0xd0>
  4143cc:	ldrh	w10, [x22, x21]
  4143d0:	tbnz	w10, #1, 4143e0 <main@@Base+0xd0>
  4143d4:	add	x9, x22, x20, lsl #1
  4143d8:	orr	w10, w10, #0x4
  4143dc:	b	4143f0 <main@@Base+0xe0>
  4143e0:	tbz	w9, #3, 4143f4 <main@@Base+0xe4>
  4143e4:	add	x9, x22, x21
  4143e8:	ldrh	w10, [x9]
  4143ec:	orr	w10, w10, #0x2000
  4143f0:	strh	w10, [x9]
  4143f4:	add	x21, x21, #0x2
  4143f8:	cmp	x21, #0x200
  4143fc:	add	x20, x20, #0x1
  414400:	b.ne	4143c4 <main@@Base+0xb4>  // b.any
  414404:	adrp	x25, 426000 <_IO_stdin_used@@Base+0x2290>
  414408:	add	x25, x25, #0x5eb
  41440c:	mov	w0, #0x6                   	// #6
  414410:	mov	x1, x25
  414414:	bl	406f40 <setlocale@plt>
  414418:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x3290>
  41441c:	add	x22, x22, #0x964
  414420:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  414424:	add	x1, x1, #0x3b0
  414428:	mov	x0, x22
  41442c:	bl	406a40 <bindtextdomain@plt>
  414430:	mov	x0, x22
  414434:	bl	406c40 <textdomain@plt>
  414438:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  41443c:	add	x0, x0, #0x60
  414440:	bl	406a10 <sigemptyset@plt>
  414444:	adrp	x1, 408000 <set_file_variables@@Base+0x48c>
  414448:	add	x1, x1, #0x660
  41444c:	mov	w0, #0x1                   	// #1
  414450:	bl	415e2c <main@@Base+0x1b1c>
  414454:	cmp	x0, #0x1
  414458:	b.eq	414470 <main@@Base+0x160>  // b.none
  41445c:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  414460:	add	x0, x0, #0x60
  414464:	mov	w1, #0x1                   	// #1
  414468:	bl	406e80 <sigaddset@plt>
  41446c:	b	414478 <main@@Base+0x168>
  414470:	mov	w1, #0x1                   	// #1
  414474:	bl	415e2c <main@@Base+0x1b1c>
  414478:	adrp	x1, 408000 <set_file_variables@@Base+0x48c>
  41447c:	add	x1, x1, #0x660
  414480:	mov	w0, #0x3                   	// #3
  414484:	bl	415e2c <main@@Base+0x1b1c>
  414488:	cmp	x0, #0x1
  41448c:	b.eq	4144a4 <main@@Base+0x194>  // b.none
  414490:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  414494:	add	x0, x0, #0x60
  414498:	mov	w1, #0x3                   	// #3
  41449c:	bl	406e80 <sigaddset@plt>
  4144a0:	b	4144b0 <main@@Base+0x1a0>
  4144a4:	mov	w0, #0x3                   	// #3
  4144a8:	mov	w1, #0x1                   	// #1
  4144ac:	bl	415e2c <main@@Base+0x1b1c>
  4144b0:	adrp	x1, 408000 <set_file_variables@@Base+0x48c>
  4144b4:	add	x1, x1, #0x660
  4144b8:	mov	w0, #0x2                   	// #2
  4144bc:	bl	415e2c <main@@Base+0x1b1c>
  4144c0:	cmp	x0, #0x1
  4144c4:	b.eq	4144dc <main@@Base+0x1cc>  // b.none
  4144c8:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  4144cc:	add	x0, x0, #0x60
  4144d0:	mov	w1, #0x2                   	// #2
  4144d4:	bl	406e80 <sigaddset@plt>
  4144d8:	b	4144e8 <main@@Base+0x1d8>
  4144dc:	mov	w0, #0x2                   	// #2
  4144e0:	mov	w1, #0x1                   	// #1
  4144e4:	bl	415e2c <main@@Base+0x1b1c>
  4144e8:	adrp	x1, 408000 <set_file_variables@@Base+0x48c>
  4144ec:	add	x1, x1, #0x660
  4144f0:	mov	w0, #0xf                   	// #15
  4144f4:	bl	415e2c <main@@Base+0x1b1c>
  4144f8:	cmp	x0, #0x1
  4144fc:	b.eq	414514 <main@@Base+0x204>  // b.none
  414500:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  414504:	add	x0, x0, #0x60
  414508:	mov	w1, #0xf                   	// #15
  41450c:	bl	406e80 <sigaddset@plt>
  414510:	b	414520 <main@@Base+0x210>
  414514:	mov	w0, #0xf                   	// #15
  414518:	mov	w1, #0x1                   	// #1
  41451c:	bl	415e2c <main@@Base+0x1b1c>
  414520:	adrp	x1, 408000 <set_file_variables@@Base+0x48c>
  414524:	add	x1, x1, #0x660
  414528:	mov	w0, #0x18                  	// #24
  41452c:	bl	415e2c <main@@Base+0x1b1c>
  414530:	cmp	x0, #0x1
  414534:	b.eq	41454c <main@@Base+0x23c>  // b.none
  414538:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  41453c:	add	x0, x0, #0x60
  414540:	mov	w1, #0x18                  	// #24
  414544:	bl	406e80 <sigaddset@plt>
  414548:	b	414558 <main@@Base+0x248>
  41454c:	mov	w0, #0x18                  	// #24
  414550:	mov	w1, #0x1                   	// #1
  414554:	bl	415e2c <main@@Base+0x1b1c>
  414558:	adrp	x1, 408000 <set_file_variables@@Base+0x48c>
  41455c:	add	x1, x1, #0x660
  414560:	mov	w0, #0x19                  	// #25
  414564:	bl	415e2c <main@@Base+0x1b1c>
  414568:	cmp	x0, #0x1
  41456c:	b.eq	414584 <main@@Base+0x274>  // b.none
  414570:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  414574:	add	x0, x0, #0x60
  414578:	mov	w1, #0x19                  	// #25
  41457c:	bl	406e80 <sigaddset@plt>
  414580:	b	414590 <main@@Base+0x280>
  414584:	mov	w0, #0x19                  	// #25
  414588:	mov	w1, #0x1                   	// #1
  41458c:	bl	415e2c <main@@Base+0x1b1c>
  414590:	mov	w0, #0x11                  	// #17
  414594:	mov	x1, xzr
  414598:	bl	415e2c <main@@Base+0x1b1c>
  41459c:	mov	x0, xzr
  4145a0:	bl	4181d0 <output_init@@Base>
  4145a4:	ldr	x0, [x23]
  4145a8:	cbnz	x0, 4145b4 <main@@Base+0x2a4>
  4145ac:	mov	x0, x25
  4145b0:	str	x25, [x23]
  4145b4:	ldrb	w8, [x0]
  4145b8:	adrp	x20, 43f000 <shell_var@@Base+0x20>
  4145bc:	cbz	w8, 4145e0 <main@@Base+0x2d0>
  4145c0:	mov	w1, #0x2f                  	// #47
  4145c4:	bl	406b80 <strrchr@plt>
  4145c8:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  4145cc:	add	x25, x25, #0xcf0
  4145d0:	str	x0, [x20, #40]
  4145d4:	cbz	x0, 4145f0 <main@@Base+0x2e0>
  4145d8:	add	x8, x0, #0x1
  4145dc:	b	4145f4 <main@@Base+0x2e4>
  4145e0:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  4145e4:	str	x22, [x20, #40]
  4145e8:	add	x25, x25, #0xcf0
  4145ec:	b	4145f8 <main@@Base+0x2e8>
  4145f0:	ldr	x8, [x23]
  4145f4:	str	x8, [x20, #40]
  4145f8:	bl	417c40 <user_access@@Base>
  4145fc:	bl	4207d8 <init_hash_global_variable_set@@Base>
  414600:	bl	420458 <strcache_init@@Base>
  414604:	bl	40c1d4 <init_hash_files@@Base>
  414608:	bl	4098d4 <hash_init_directories@@Base>
  41460c:	bl	40d254 <hash_init_function_table@@Base>
  414610:	add	x0, x19, #0x844
  414614:	mov	w1, #0x1000                	// #4096
  414618:	bl	406780 <getcwd@plt>
  41461c:	cbz	x0, 41462c <main@@Base+0x31c>
  414620:	add	x0, x19, #0x844
  414624:	bl	4178d4 <xstrdup@@Base>
  414628:	b	414648 <main@@Base+0x338>
  41462c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414630:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  414634:	add	x0, x0, #0x3c2
  414638:	add	x1, x1, #0x5eb
  41463c:	bl	418a4c <perror_with_name@@Base>
  414640:	mov	x0, xzr
  414644:	strb	wzr, [x19, #2116]
  414648:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41464c:	ldr	x8, [x21, #2440]
  414650:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  414654:	str	x0, [x9, #4048]
  414658:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  41465c:	ldr	x5, [x8, #8]
  414660:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414664:	add	x20, x20, #0x5eb
  414668:	add	x0, x0, #0x3c9
  41466c:	mov	w1, #0xa                   	// #10
  414670:	mov	x2, x20
  414674:	mov	w3, wzr
  414678:	mov	w4, wzr
  41467c:	mov	x6, xzr
  414680:	str	x23, [x19, #40]
  414684:	bl	420860 <define_variable_in_set@@Base>
  414688:	ldr	w8, [x0, #44]
  41468c:	mov	w1, #0xd                   	// #13
  414690:	mov	x2, x20
  414694:	mov	w3, wzr
  414698:	orr	w8, w8, #0x10
  41469c:	str	w8, [x0, #44]
  4146a0:	ldr	x8, [x21, #2440]
  4146a4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4146a8:	add	x0, x0, #0x3d4
  4146ac:	mov	w4, wzr
  4146b0:	ldr	x5, [x8, #8]
  4146b4:	mov	x6, xzr
  4146b8:	bl	420860 <define_variable_in_set@@Base>
  4146bc:	ldr	w8, [x0, #44]
  4146c0:	adrp	x2, 424000 <_IO_stdin_used@@Base+0x290>
  4146c4:	add	x2, x2, #0xd5b
  4146c8:	mov	w1, #0xb                   	// #11
  4146cc:	orr	w8, w8, #0x10
  4146d0:	str	w8, [x0, #44]
  4146d4:	ldr	x8, [x21, #2440]
  4146d8:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4146dc:	add	x0, x0, #0x3e2
  4146e0:	mov	w3, wzr
  4146e4:	ldr	x5, [x8, #8]
  4146e8:	mov	w4, wzr
  4146ec:	mov	x6, xzr
  4146f0:	bl	420860 <define_variable_in_set@@Base>
  4146f4:	ldr	x8, [x21, #2440]
  4146f8:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  4146fc:	add	x0, x0, #0x9a0
  414700:	mov	w1, #0x7                   	// #7
  414704:	ldr	x5, [x8, #8]
  414708:	mov	x2, x20
  41470c:	mov	w3, wzr
  414710:	mov	w4, wzr
  414714:	mov	x6, xzr
  414718:	bl	420860 <define_variable_in_set@@Base>
  41471c:	ldr	x8, [x21, #2440]
  414720:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414724:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x3290>
  414728:	add	x0, x0, #0x49b
  41472c:	ldr	x5, [x8, #8]
  414730:	add	x2, x2, #0x3ee
  414734:	mov	w1, #0x9                   	// #9
  414738:	mov	w3, wzr
  41473c:	mov	w4, wzr
  414740:	mov	x6, xzr
  414744:	bl	420860 <define_variable_in_set@@Base>
  414748:	mov	x0, xzr
  41474c:	bl	40f3e0 <guile_gmake_setup@@Base>
  414750:	ldr	x21, [x24]
  414754:	cbz	x21, 414884 <main@@Base+0x574>
  414758:	adrp	x26, 428000 <_IO_stdin_used@@Base+0x4290>
  41475c:	adrp	x23, 43e000 <stdio_traced@@Base+0x1a38>
  414760:	mov	w22, wzr
  414764:	add	x26, x26, #0xdfb
  414768:	add	x23, x23, #0xfe0
  41476c:	mov	w27, #0x5                   	// #5
  414770:	str	wzr, [x19, #60]
  414774:	mov	x28, x21
  414778:	ldrb	w8, [x28], #1
  41477c:	ldrh	w9, [x25, x8, lsl #1]
  414780:	tbz	w9, #5, 414778 <main@@Base+0x468>
  414784:	cbz	w8, 414844 <main@@Base+0x534>
  414788:	sub	x8, x28, #0x1
  41478c:	sub	x20, x8, x21
  414790:	cmp	x20, #0xd
  414794:	b.ne	4147b0 <main@@Base+0x4a0>  // b.any
  414798:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  41479c:	mov	w2, #0xd                   	// #13
  4147a0:	mov	x0, x21
  4147a4:	add	x1, x1, #0x4a5
  4147a8:	bl	406a30 <strncmp@plt>
  4147ac:	cbz	w0, 414854 <main@@Base+0x544>
  4147b0:	mov	w25, wzr
  4147b4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4147b8:	ldr	x8, [x8, #2440]
  4147bc:	mov	w3, #0x1                   	// #1
  4147c0:	mov	w4, #0x1                   	// #1
  4147c4:	mov	x0, x21
  4147c8:	ldr	x5, [x8, #8]
  4147cc:	mov	x1, x20
  4147d0:	mov	x2, x28
  4147d4:	mov	x6, xzr
  4147d8:	bl	420860 <define_variable_in_set@@Base>
  4147dc:	ldr	x8, [x0]
  4147e0:	mov	x20, x0
  4147e4:	cmp	x8, x26
  4147e8:	b.eq	41480c <main@@Base+0x4fc>  // b.none
  4147ec:	ldrb	w9, [x8]
  4147f0:	cmp	w9, #0x53
  4147f4:	b.ne	41482c <main@@Base+0x51c>  // b.any
  4147f8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4147fc:	add	x0, x8, #0x1
  414800:	add	x1, x1, #0xdfc
  414804:	bl	406c70 <strcmp@plt>
  414808:	cbnz	w0, 41482c <main@@Base+0x51c>
  41480c:	mov	x0, x26
  414810:	bl	4178d4 <xstrdup@@Base>
  414814:	str	x0, [x23]
  414818:	mov	x0, x28
  41481c:	str	w27, [x23, #40]
  414820:	bl	4178d4 <xstrdup@@Base>
  414824:	mov	w25, #0x1                   	// #1
  414828:	str	x0, [x23, #8]
  41482c:	ldr	w8, [x20, #44]
  414830:	and	w8, w8, #0x9fffffff
  414834:	bfi	w8, w25, #29, #1
  414838:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  41483c:	add	x25, x25, #0xcf0
  414840:	str	w8, [x20, #44]
  414844:	add	w22, w22, #0x1
  414848:	ldr	x21, [x24, w22, uxtw #3]
  41484c:	cbnz	x21, 414774 <main@@Base+0x464>
  414850:	b	414888 <main@@Base+0x578>
  414854:	ldrb	w8, [x28]
  414858:	cmp	w8, #0x2d
  41485c:	b.ne	414870 <main@@Base+0x560>  // b.any
  414860:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  414864:	mov	w9, #0x1                   	// #1
  414868:	add	x28, x28, #0x1
  41486c:	str	w9, [x8, #1480]
  414870:	mov	x0, x28
  414874:	bl	406990 <atoi@plt>
  414878:	mov	w25, #0x1                   	// #1
  41487c:	str	w0, [x19, #60]
  414880:	b	4147b4 <main@@Base+0x4a4>
  414884:	str	wzr, [x19, #60]
  414888:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x290>
  41488c:	add	x20, x20, #0xe55
  414890:	mov	w1, #0xc                   	// #12
  414894:	mov	x0, x20
  414898:	bl	415e9c <main@@Base+0x1b8c>
  41489c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4148a0:	ldr	x8, [x8, #2440]
  4148a4:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  4148a8:	add	x2, x2, #0x5eb
  4148ac:	mov	w1, #0xc                   	// #12
  4148b0:	ldr	x5, [x8, #8]
  4148b4:	mov	w3, #0x1                   	// #1
  4148b8:	mov	x0, x20
  4148bc:	mov	w4, wzr
  4148c0:	mov	x6, xzr
  4148c4:	bl	420860 <define_variable_in_set@@Base>
  4148c8:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  4148cc:	add	x0, x0, #0xe58
  4148d0:	mov	w1, #0x9                   	// #9
  4148d4:	bl	415e9c <main@@Base+0x1b8c>
  4148d8:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  4148dc:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  4148e0:	ldr	w9, [x24, #3304]
  4148e4:	add	x21, x21, #0x48
  4148e8:	ldrb	w8, [x21, #8]
  4148ec:	ldp	x22, x0, [x19, #40]
  4148f0:	sub	w9, w9, #0x1
  4148f4:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  4148f8:	cmp	w9, #0x2
  4148fc:	and	w8, w8, #0xfe
  414900:	cset	w9, cc  // cc = lo, ul, last
  414904:	ldr	w20, [x25, #2396]
  414908:	orr	w8, w8, w9
  41490c:	adrp	x23, 43c000 <stopchar_map@@Base+0x310>
  414910:	csel	x9, x21, xzr, cc  // cc = lo, ul, last
  414914:	strb	w8, [x21, #8]
  414918:	mov	w8, #0xffffffff            	// #-1
  41491c:	mov	x1, x22
  414920:	mov	w2, wzr
  414924:	str	x9, [x23, #1472]
  414928:	str	w8, [x25, #2396]
  41492c:	bl	416004 <main@@Base+0x1cf4>
  414930:	ldr	w27, [x25, #2396]
  414934:	cmn	w27, #0x1
  414938:	b.ne	414940 <main@@Base+0x630>  // b.any
  41493c:	str	w20, [x25, #2396]
  414940:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  414944:	ldr	x0, [x20, #2512]
  414948:	bl	406940 <fileno@plt>
  41494c:	bl	406dd0 <isatty@plt>
  414950:	cbz	w0, 4149b8 <main@@Base+0x6a8>
  414954:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414958:	add	x0, x0, #0x4b3
  41495c:	mov	w1, #0xc                   	// #12
  414960:	bl	420c00 <lookup_variable@@Base>
  414964:	cbnz	x0, 4149b8 <main@@Base+0x6a8>
  414968:	ldr	x0, [x20, #2512]
  41496c:	bl	406940 <fileno@plt>
  414970:	bl	406810 <ttyname@plt>
  414974:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414978:	ldr	x8, [x8, #2440]
  41497c:	cmp	x0, #0x0
  414980:	mov	w1, #0xc                   	// #12
  414984:	mov	w3, wzr
  414988:	ldr	x5, [x8, #8]
  41498c:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  414990:	add	x8, x8, #0x4c0
  414994:	csel	x2, x8, x0, eq  // eq = none
  414998:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  41499c:	add	x0, x0, #0x4b3
  4149a0:	mov	w4, wzr
  4149a4:	mov	x6, xzr
  4149a8:	bl	420860 <define_variable_in_set@@Base>
  4149ac:	ldr	w8, [x0, #44]
  4149b0:	and	w8, w8, #0x9fffffff
  4149b4:	str	w8, [x0, #44]
  4149b8:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4149bc:	ldr	x0, [x20, #2488]
  4149c0:	bl	406940 <fileno@plt>
  4149c4:	bl	406dd0 <isatty@plt>
  4149c8:	cbz	w0, 414a30 <main@@Base+0x720>
  4149cc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4149d0:	add	x0, x0, #0x4c5
  4149d4:	mov	w1, #0xc                   	// #12
  4149d8:	bl	420c00 <lookup_variable@@Base>
  4149dc:	cbnz	x0, 414a30 <main@@Base+0x720>
  4149e0:	ldr	x0, [x20, #2488]
  4149e4:	bl	406940 <fileno@plt>
  4149e8:	bl	406810 <ttyname@plt>
  4149ec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4149f0:	ldr	x8, [x8, #2440]
  4149f4:	cmp	x0, #0x0
  4149f8:	mov	w1, #0xc                   	// #12
  4149fc:	mov	w3, wzr
  414a00:	ldr	x5, [x8, #8]
  414a04:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  414a08:	add	x8, x8, #0x4c0
  414a0c:	csel	x2, x8, x0, eq  // eq = none
  414a10:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414a14:	add	x0, x0, #0x4c5
  414a18:	mov	w4, wzr
  414a1c:	mov	x6, xzr
  414a20:	bl	420860 <define_variable_in_set@@Base>
  414a24:	ldr	w8, [x0, #44]
  414a28:	and	w8, w8, #0x9fffffff
  414a2c:	str	w8, [x0, #44]
  414a30:	ldr	w9, [x24, #3304]
  414a34:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  414a38:	ldrb	w8, [x8, #80]
  414a3c:	sub	w20, w9, #0x1
  414a40:	cmp	w20, #0x2
  414a44:	b.cc	414a58 <main@@Base+0x748>  // b.lo, b.ul, b.last
  414a48:	tbz	w8, #0, 414a58 <main@@Base+0x748>
  414a4c:	mov	x0, x21
  414a50:	bl	418308 <output_close@@Base>
  414a54:	ldrb	w8, [x21, #8]
  414a58:	cmp	w20, #0x2
  414a5c:	and	w8, w8, #0xfe
  414a60:	cset	w9, cc  // cc = lo, ul, last
  414a64:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414a68:	csel	x10, x21, xzr, cc  // cc = lo, ul, last
  414a6c:	orr	w8, w8, w9
  414a70:	add	x0, x0, #0x4d2
  414a74:	mov	w1, #0x9                   	// #9
  414a78:	strb	w8, [x21, #8]
  414a7c:	str	x10, [x23, #1472]
  414a80:	bl	420c00 <lookup_variable@@Base>
  414a84:	cbz	x0, 414aa8 <main@@Base+0x798>
  414a88:	ldr	x8, [x0, #8]
  414a8c:	mov	w0, wzr
  414a90:	ldrb	w9, [x8]
  414a94:	cbz	w9, 414aa8 <main@@Base+0x798>
  414a98:	cmp	w9, #0x2d
  414a9c:	b.eq	414aa8 <main@@Base+0x798>  // b.none
  414aa0:	mov	x0, x8
  414aa4:	bl	406990 <atoi@plt>
  414aa8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414aac:	ldr	w8, [x8, #3832]
  414ab0:	ldr	w10, [x19, #60]
  414ab4:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  414ab8:	ldr	w9, [x9, #3284]
  414abc:	cmp	w8, #0x0
  414ac0:	cset	w8, ne  // ne = any
  414ac4:	cmp	w10, #0x0
  414ac8:	cset	w10, eq  // eq = none
  414acc:	adrp	x26, 43f000 <shell_var@@Base+0x20>
  414ad0:	and	w8, w10, w8
  414ad4:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  414ad8:	str	w0, [x26, #56]
  414adc:	str	w8, [x10, #3296]
  414ae0:	cbnz	w9, 415e20 <main@@Base+0x1b10>
  414ae4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414ae8:	ldrb	w8, [x8, #3236]
  414aec:	tbz	w8, #0, 414af4 <main@@Base+0x7e4>
  414af0:	bl	4167dc <main@@Base+0x24cc>
  414af4:	ldrb	w8, [x19, #2116]
  414af8:	cbz	w8, 414b40 <main@@Base+0x830>
  414afc:	ldr	x20, [x22]
  414b00:	cbz	x20, 414b40 <main@@Base+0x830>
  414b04:	ldrb	w8, [x20]
  414b08:	cmp	w8, #0x2f
  414b0c:	b.eq	414b40 <main@@Base+0x830>  // b.none
  414b10:	mov	w1, #0x2f                  	// #47
  414b14:	mov	x0, x20
  414b18:	bl	406cd0 <strchr@plt>
  414b1c:	cbz	x0, 414b40 <main@@Base+0x830>
  414b20:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x1290>
  414b24:	add	x2, x2, #0x6f7
  414b28:	add	x1, x19, #0x844
  414b2c:	mov	w0, #0x3                   	// #3
  414b30:	mov	x3, x20
  414b34:	bl	4176dc <concat@@Base>
  414b38:	bl	4178d4 <xstrdup@@Base>
  414b3c:	str	x0, [x22]
  414b40:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  414b44:	ldr	x0, [x20, #3840]
  414b48:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  414b4c:	add	x8, x19, #0x844
  414b50:	str	x8, [x21, #16]
  414b54:	cbz	x0, 414bd8 <main@@Base+0x8c8>
  414b58:	cmn	w27, #0x1
  414b5c:	b.eq	414b94 <main@@Base+0x884>  // b.none
  414b60:	ldr	w8, [x19, #60]
  414b64:	cbnz	w8, 414bc8 <main@@Base+0x8b8>
  414b68:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  414b6c:	add	x1, x1, #0x525
  414b70:	mov	w2, #0x5                   	// #5
  414b74:	mov	x0, xzr
  414b78:	bl	406e10 <dcgettext@plt>
  414b7c:	mov	x2, x0
  414b80:	mov	w1, #0x14                  	// #20
  414b84:	mov	x0, xzr
  414b88:	mov	w3, w27
  414b8c:	bl	418744 <error@@Base>
  414b90:	b	414bc8 <main@@Base+0x8b8>
  414b94:	bl	4230d0 <jobserver_parse_auth@@Base>
  414b98:	cbnz	w0, 414bd8 <main@@Base+0x8c8>
  414b9c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  414ba0:	add	x1, x1, #0x4dc
  414ba4:	mov	w2, #0x5                   	// #5
  414ba8:	mov	x0, xzr
  414bac:	bl	406e10 <dcgettext@plt>
  414bb0:	mov	x2, x0
  414bb4:	mov	x0, xzr
  414bb8:	mov	x1, xzr
  414bbc:	bl	418744 <error@@Base>
  414bc0:	mov	w8, #0x1                   	// #1
  414bc4:	str	w8, [x25, #2396]
  414bc8:	bl	423244 <jobserver_clear@@Base>
  414bcc:	ldr	x0, [x20, #3840]
  414bd0:	bl	406cb0 <free@plt>
  414bd4:	str	xzr, [x20, #3840]
  414bd8:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  414bdc:	ldr	x8, [x20, #2440]
  414be0:	ldr	x2, [x22]
  414be4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414be8:	add	x0, x0, #0x560
  414bec:	ldr	x5, [x8, #8]
  414bf0:	mov	w1, #0xc                   	// #12
  414bf4:	mov	w3, wzr
  414bf8:	mov	w4, wzr
  414bfc:	mov	x6, xzr
  414c00:	bl	420860 <define_variable_in_set@@Base>
  414c04:	ldr	x8, [x20, #2440]
  414c08:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414c0c:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x3290>
  414c10:	add	x0, x0, #0x56d
  414c14:	ldr	x5, [x8, #8]
  414c18:	add	x2, x2, #0x572
  414c1c:	mov	w1, #0x4                   	// #4
  414c20:	mov	w4, #0x1                   	// #1
  414c24:	mov	w3, wzr
  414c28:	mov	x6, xzr
  414c2c:	bl	420860 <define_variable_in_set@@Base>
  414c30:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414c34:	ldr	x22, [x8, #3848]
  414c38:	cbz	x22, 414db4 <main@@Base+0xaa4>
  414c3c:	mov	x23, xzr
  414c40:	mov	x24, x22
  414c44:	ldr	x25, [x24, #8]
  414c48:	ldr	x0, [x25]
  414c4c:	bl	406790 <strlen@plt>
  414c50:	ldr	w8, [x25, #44]
  414c54:	mov	x20, x0
  414c58:	ldr	x0, [x25, #8]
  414c5c:	mvn	w8, w8
  414c60:	and	x25, x8, #0x1
  414c64:	bl	406790 <strlen@plt>
  414c68:	ldr	x24, [x24]
  414c6c:	add	x8, x0, x20
  414c70:	add	x9, x23, x25
  414c74:	add	x8, x9, x8, lsl #1
  414c78:	add	x23, x8, #0x2
  414c7c:	cbnz	x24, 414c44 <main@@Base+0x934>
  414c80:	add	x9, x23, #0xf
  414c84:	mov	x8, sp
  414c88:	and	x9, x9, #0xfffffffffffffff0
  414c8c:	sub	x2, x8, x9
  414c90:	mov	sp, x2
  414c94:	adrp	x16, 43b000 <memcpy@GLIBC_2.17>
  414c98:	mov	w8, #0x3a                  	// #58
  414c9c:	mov	w9, #0x3d                  	// #61
  414ca0:	mov	w10, #0x20                  	// #32
  414ca4:	mov	x11, x2
  414ca8:	add	x16, x16, #0xcf0
  414cac:	ldr	x12, [x22, #8]
  414cb0:	ldr	x13, [x12]
  414cb4:	ldrb	w14, [x13]
  414cb8:	cmp	w14, #0x24
  414cbc:	b.eq	414cdc <main@@Base+0x9cc>  // b.none
  414cc0:	cbz	w14, 414cf0 <main@@Base+0x9e0>
  414cc4:	cmp	w14, #0x5c
  414cc8:	mov	w15, #0x5c                  	// #92
  414ccc:	b.eq	414ce0 <main@@Base+0x9d0>  // b.none
  414cd0:	ldrh	w14, [x16, x14, lsl #1]
  414cd4:	tbz	w14, #1, 414ce4 <main@@Base+0x9d4>
  414cd8:	b	414ce0 <main@@Base+0x9d0>
  414cdc:	mov	w15, w14
  414ce0:	strb	w15, [x11], #1
  414ce4:	ldrb	w14, [x13], #1
  414ce8:	strb	w14, [x11], #1
  414cec:	b	414cb4 <main@@Base+0x9a4>
  414cf0:	ldrb	w13, [x12, #44]
  414cf4:	tbnz	w13, #0, 414cfc <main@@Base+0x9ec>
  414cf8:	strb	w8, [x11], #1
  414cfc:	strb	w9, [x11]
  414d00:	ldr	x12, [x12, #8]
  414d04:	mov	x13, x11
  414d08:	ldrb	w11, [x12]
  414d0c:	cmp	w11, #0x24
  414d10:	b.eq	414d34 <main@@Base+0xa24>  // b.none
  414d14:	cbz	w11, 414d4c <main@@Base+0xa3c>
  414d18:	cmp	w11, #0x5c
  414d1c:	mov	w14, #0x5c                  	// #92
  414d20:	b.eq	414d38 <main@@Base+0xa28>  // b.none
  414d24:	ldrh	w11, [x16, x11, lsl #1]
  414d28:	tbnz	w11, #1, 414d38 <main@@Base+0xa28>
  414d2c:	add	x11, x13, #0x1
  414d30:	b	414d40 <main@@Base+0xa30>
  414d34:	mov	w14, w11
  414d38:	add	x11, x13, #0x2
  414d3c:	strb	w14, [x13, #1]
  414d40:	ldrb	w13, [x12], #1
  414d44:	strb	w13, [x11]
  414d48:	b	414d04 <main@@Base+0x9f4>
  414d4c:	strb	w10, [x13, #1]
  414d50:	ldr	x22, [x22]
  414d54:	add	x11, x13, #0x2
  414d58:	cbnz	x22, 414cac <main@@Base+0x99c>
  414d5c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  414d60:	ldr	x8, [x20, #2440]
  414d64:	strb	wzr, [x13, #1]
  414d68:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  414d6c:	add	x0, x0, #0x600
  414d70:	ldr	x5, [x8, #8]
  414d74:	mov	w1, #0x17                  	// #23
  414d78:	mov	w3, #0x6                   	// #6
  414d7c:	mov	w4, wzr
  414d80:	mov	x6, xzr
  414d84:	bl	420860 <define_variable_in_set@@Base>
  414d88:	ldr	x8, [x20, #2440]
  414d8c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  414d90:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x3290>
  414d94:	add	x0, x0, #0x5f2
  414d98:	ldr	x5, [x8, #8]
  414d9c:	add	x2, x2, #0x582
  414da0:	mov	w1, #0xd                   	// #13
  414da4:	mov	w3, #0x1                   	// #1
  414da8:	mov	w4, #0x1                   	// #1
  414dac:	mov	x6, xzr
  414db0:	bl	420860 <define_variable_in_set@@Base>
  414db4:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  414db8:	ldr	x8, [x23, #3856]
  414dbc:	cbz	x8, 414df0 <main@@Base+0xae0>
  414dc0:	ldr	x9, [x8]
  414dc4:	ldr	x20, [x9]
  414dc8:	cbz	x20, 414df0 <main@@Base+0xae0>
  414dcc:	mov	w22, #0x1                   	// #1
  414dd0:	mov	x0, x20
  414dd4:	bl	406ca0 <chdir@plt>
  414dd8:	tbnz	w0, #31, 415e18 <main@@Base+0x1b08>
  414ddc:	ldr	x8, [x23, #3856]
  414de0:	ldr	x9, [x8]
  414de4:	ldr	x20, [x9, w22, uxtw #3]
  414de8:	add	w22, w22, #0x1
  414dec:	cbnz	x20, 414dd0 <main@@Base+0xac0>
  414df0:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  414df4:	ldr	w9, [x9, #3864]
  414df8:	cbnz	w9, 414e14 <main@@Base+0xb04>
  414dfc:	cbnz	x8, 414e08 <main@@Base+0xaf8>
  414e00:	ldr	w8, [x26, #56]
  414e04:	cbz	w8, 414e14 <main@@Base+0xb04>
  414e08:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e0c:	mov	w9, #0x1                   	// #1
  414e10:	str	w9, [x8, #3276]
  414e14:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e18:	ldr	w8, [x8, #3280]
  414e1c:	cbz	w8, 414e28 <main@@Base+0xb18>
  414e20:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e24:	str	wzr, [x8, #3276]
  414e28:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e2c:	ldr	w8, [x8, #3268]
  414e30:	cbz	w8, 414e40 <main@@Base+0xb30>
  414e34:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e38:	mov	w9, #0x1                   	// #1
  414e3c:	str	w9, [x8, #3264]
  414e40:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e44:	ldr	x8, [x8, #3872]
  414e48:	cbz	x8, 414e54 <main@@Base+0xb44>
  414e4c:	ldr	x0, [x8]
  414e50:	b	414e58 <main@@Base+0xb48>
  414e54:	mov	x0, xzr
  414e58:	bl	41ada0 <construct_include_path@@Base>
  414e5c:	ldr	x8, [x23, #3856]
  414e60:	cbz	x8, 414e94 <main@@Base+0xb84>
  414e64:	add	x0, x19, #0x844
  414e68:	mov	w1, #0x1000                	// #4096
  414e6c:	add	x20, x19, #0x844
  414e70:	bl	406780 <getcwd@plt>
  414e74:	cbnz	x0, 414e90 <main@@Base+0xb80>
  414e78:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414e7c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  414e80:	add	x0, x0, #0x3c2
  414e84:	add	x1, x1, #0x5eb
  414e88:	bl	418a4c <perror_with_name@@Base>
  414e8c:	mov	x20, xzr
  414e90:	str	x20, [x21, #16]
  414e94:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414e98:	ldr	x8, [x8, #2440]
  414e9c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  414ea0:	add	x0, x0, #0x59d
  414ea4:	add	x2, x19, #0x844
  414ea8:	ldr	x5, [x8, #8]
  414eac:	mov	w1, #0x6                   	// #6
  414eb0:	mov	w3, #0x2                   	// #2
  414eb4:	mov	w4, wzr
  414eb8:	mov	x6, xzr
  414ebc:	str	w27, [x19, #16]
  414ec0:	bl	420860 <define_variable_in_set@@Base>
  414ec4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  414ec8:	ldr	x8, [x8, #3880]
  414ecc:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  414ed0:	cbz	x8, 41506c <main@@Base+0xd5c>
  414ed4:	ldr	w9, [x8, #8]
  414ed8:	cbz	w9, 41506c <main@@Base+0xd5c>
  414edc:	adrp	x25, 427000 <_IO_stdin_used@@Base+0x3290>
  414ee0:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  414ee4:	mov	w27, #0xbbf0                	// #48112
  414ee8:	mov	x28, xzr
  414eec:	add	x25, x25, #0x5d2
  414ef0:	add	x26, x26, #0xef0
  414ef4:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  414ef8:	movk	w27, #0xfffe, lsl #16
  414efc:	mov	w22, #0x40c                 	// #1036
  414f00:	ldr	x9, [x8]
  414f04:	ldr	x9, [x9, x28, lsl #3]
  414f08:	ldrb	w10, [x9]
  414f0c:	cmp	w10, #0x2d
  414f10:	b.ne	41505c <main@@Base+0xd4c>  // b.any
  414f14:	ldrb	w9, [x9, #1]
  414f18:	cbnz	w9, 41505c <main@@Base+0xd4c>
  414f1c:	ldr	x8, [x23, #3824]
  414f20:	cbnz	x8, 415180 <main@@Base+0xe70>
  414f24:	mov	x0, x25
  414f28:	bl	406ec0 <getenv@plt>
  414f2c:	cbz	x0, 414f3c <main@@Base+0xc2c>
  414f30:	ldrb	w8, [x0]
  414f34:	mov	x21, x0
  414f38:	cbnz	w8, 414f44 <main@@Base+0xc34>
  414f3c:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x3290>
  414f40:	add	x21, x21, #0x5d9
  414f44:	mov	x0, x21
  414f48:	bl	406790 <strlen@plt>
  414f4c:	add	x9, x0, #0x19
  414f50:	mov	x8, sp
  414f54:	and	x9, x9, #0xfffffffffffffff0
  414f58:	sub	x20, x8, x9
  414f5c:	mov	sp, x20
  414f60:	mov	x0, x20
  414f64:	mov	x1, x21
  414f68:	bl	406d50 <strcpy@plt>
  414f6c:	bl	406790 <strlen@plt>
  414f70:	add	x8, x0, x20
  414f74:	ldurb	w8, [x8, #-1]
  414f78:	cmp	w8, #0x2f
  414f7c:	b.eq	414f90 <main@@Base+0xc80>  // b.none
  414f80:	mov	x0, x20
  414f84:	bl	406790 <strlen@plt>
  414f88:	mov	w8, #0x2f                  	// #47
  414f8c:	strh	w8, [x20, x0]
  414f90:	mov	x0, x20
  414f94:	bl	406790 <strlen@plt>
  414f98:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  414f9c:	add	x8, x8, #0x5de
  414fa0:	ldr	x8, [x8]
  414fa4:	add	x9, x20, x0
  414fa8:	mov	x0, x26
  414fac:	mov	x1, x20
  414fb0:	str	x8, [x9]
  414fb4:	strb	wzr, [x9, #8]
  414fb8:	bl	417ba0 <get_tmpfile@@Base>
  414fbc:	cbz	x0, 41518c <main@@Base+0xe7c>
  414fc0:	mov	x20, x0
  414fc4:	ldr	x0, [x24, #2520]
  414fc8:	bl	406bf0 <feof@plt>
  414fcc:	cbnz	w0, 41501c <main@@Base+0xd0c>
  414fd0:	ldr	x21, [x24, #2520]
  414fd4:	mov	x0, x21
  414fd8:	bl	406f50 <ferror@plt>
  414fdc:	cbnz	w0, 41501c <main@@Base+0xd0c>
  414fe0:	add	x0, x19, #0x40
  414fe4:	mov	w1, #0x1                   	// #1
  414fe8:	mov	w2, #0x800                 	// #2048
  414fec:	mov	x3, x21
  414ff0:	bl	406c90 <fread@plt>
  414ff4:	cbz	x0, 414fc4 <main@@Base+0xcb4>
  414ff8:	mov	x21, x0
  414ffc:	add	x0, x19, #0x40
  415000:	mov	w1, #0x1                   	// #1
  415004:	mov	x2, x21
  415008:	mov	x3, x20
  41500c:	bl	406d00 <fwrite@plt>
  415010:	cmp	x0, x21
  415014:	b.eq	414fc4 <main@@Base+0xcb4>  // b.none
  415018:	b	4150b0 <main@@Base+0xda0>
  41501c:	mov	x0, x20
  415020:	bl	406980 <fclose@plt>
  415024:	ldr	x0, [x23, #3824]
  415028:	bl	42016c <strcache_add@@Base>
  41502c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  415030:	ldr	x8, [x20, #3880]
  415034:	ldr	x8, [x8]
  415038:	str	x0, [x8, x28, lsl #3]
  41503c:	ldr	x0, [x23, #3824]
  415040:	bl	42016c <strcache_add@@Base>
  415044:	bl	40a5f4 <enter_file@@Base>
  415048:	ldr	w8, [x0, #136]
  41504c:	and	w8, w8, w27
  415050:	orr	w8, w8, w22
  415054:	str	w8, [x0, #136]
  415058:	ldr	x8, [x20, #3880]
  41505c:	ldr	w9, [x8, #8]
  415060:	add	x28, x28, #0x1
  415064:	cmp	x28, x9
  415068:	b.cc	414f00 <main@@Base+0xbf0>  // b.lo, b.ul, b.last
  41506c:	adrp	x1, 411000 <try_implicit_rule@@Base+0x1040>
  415070:	add	x1, x1, #0x374
  415074:	mov	w0, #0x11                  	// #17
  415078:	bl	415e2c <main@@Base+0x1b1c>
  41507c:	add	x0, x19, #0x40
  415080:	bl	406a10 <sigemptyset@plt>
  415084:	add	x0, x19, #0x40
  415088:	mov	w1, #0x11                  	// #17
  41508c:	bl	406e80 <sigaddset@plt>
  415090:	add	x1, x19, #0x40
  415094:	mov	w0, #0x2                   	// #2
  415098:	mov	x2, xzr
  41509c:	bl	4067f0 <sigprocmask@plt>
  4150a0:	tbz	w0, #31, 4150c4 <main@@Base+0xdb4>
  4150a4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4150a8:	add	x0, x0, #0x616
  4150ac:	bl	417cc8 <pfatal_with_name@@Base>
  4150b0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4150b4:	add	x1, x1, #0x5fe
  4150b8:	mov	w2, #0x5                   	// #5
  4150bc:	mov	x0, xzr
  4150c0:	b	415198 <main@@Base+0xe88>
  4150c4:	adrp	x1, 416000 <main@@Base+0x1cf0>
  4150c8:	add	x1, x1, #0x9e0
  4150cc:	mov	w0, #0xa                   	// #10
  4150d0:	bl	415e2c <main@@Base+0x1b1c>
  4150d4:	bl	408afc <set_default_suffixes@@Base>
  4150d8:	bl	408bfc <install_default_suffix_rules@@Base>
  4150dc:	bl	4216e0 <define_automatic_variables@@Base>
  4150e0:	mov	w0, wzr
  4150e4:	mov	w1, wzr
  4150e8:	bl	4169f8 <die@@Base+0x100>
  4150ec:	ldr	w8, [x0, #44]
  4150f0:	and	w8, w8, #0x9fffffff
  4150f4:	str	w8, [x0, #44]
  4150f8:	bl	408cf4 <define_default_variables@@Base>
  4150fc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  415100:	add	x0, x0, #0x638
  415104:	bl	42016c <strcache_add@@Base>
  415108:	bl	40a5f4 <enter_file@@Base>
  41510c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415110:	ldr	x8, [x8, #2440]
  415114:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  415118:	str	x0, [x9, #64]
  41511c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  415120:	ldr	x5, [x8, #8]
  415124:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  415128:	add	x0, x0, #0x641
  41512c:	add	x2, x2, #0x5eb
  415130:	mov	w1, #0xd                   	// #13
  415134:	mov	w3, #0x2                   	// #2
  415138:	mov	w4, wzr
  41513c:	mov	x6, xzr
  415140:	bl	420860 <define_variable_in_set@@Base>
  415144:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  415148:	ldr	x8, [x21, #3888]
  41514c:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  415150:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  415154:	str	x0, [x9, #48]
  415158:	cbz	x8, 4152b8 <main@@Base+0xfa8>
  41515c:	ldr	w9, [x8, #8]
  415160:	lsl	x22, x9, #3
  415164:	cbnz	w9, 4151a0 <main@@Base+0xe90>
  415168:	add	x9, x22, #0xf
  41516c:	mov	x8, sp
  415170:	and	x9, x9, #0xffffffff0
  415174:	sub	x2, x8, x9
  415178:	mov	sp, x2
  41517c:	b	415204 <main@@Base+0xef4>
  415180:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415184:	add	x1, x1, #0x5a4
  415188:	b	415b64 <main@@Base+0x1854>
  41518c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415190:	add	x1, x1, #0x5e7
  415194:	mov	w2, #0x5                   	// #5
  415198:	bl	406e10 <dcgettext@plt>
  41519c:	bl	417cc8 <pfatal_with_name@@Base>
  4151a0:	mov	x23, xzr
  4151a4:	ldr	x8, [x8]
  4151a8:	ldr	x0, [x8, x23, lsl #3]
  4151ac:	bl	4178d4 <xstrdup@@Base>
  4151b0:	mov	x20, x0
  4151b4:	bl	406790 <strlen@plt>
  4151b8:	add	x22, x22, x0, lsl #1
  4151bc:	mov	x0, x20
  4151c0:	mov	x1, xzr
  4151c4:	bl	4191d0 <eval_buffer@@Base>
  4151c8:	mov	x0, x20
  4151cc:	bl	406cb0 <free@plt>
  4151d0:	ldr	x8, [x21, #3888]
  4151d4:	add	x23, x23, #0x1
  4151d8:	ldr	w9, [x8, #8]
  4151dc:	cmp	x23, x9
  4151e0:	b.cc	4151a4 <main@@Base+0xe94>  // b.lo, b.ul, b.last
  4151e4:	add	x10, x22, #0xf
  4151e8:	mov	x8, sp
  4151ec:	and	x10, x10, #0xfffffffffffffff0
  4151f0:	sub	x2, x8, x10
  4151f4:	mov	sp, x2
  4151f8:	adrp	x15, 43b000 <memcpy@GLIBC_2.17>
  4151fc:	add	x15, x15, #0xcf0
  415200:	cbnz	w9, 41520c <main@@Base+0xefc>
  415204:	mov	x8, x2
  415208:	b	41528c <main@@Base+0xf7c>
  41520c:	mov	x10, #0x2d2d                	// #11565
  415210:	movk	x10, #0x7665, lsl #16
  415214:	movk	x10, #0x6c61, lsl #32
  415218:	mov	x9, xzr
  41521c:	movk	x10, #0x3d, lsl #48
  415220:	mov	w11, #0x20                  	// #32
  415224:	mov	x8, x2
  415228:	ldr	x12, [x21, #3888]
  41522c:	str	x10, [x8], #7
  415230:	ldr	x12, [x12]
  415234:	ldr	x12, [x12, x9, lsl #3]
  415238:	ldrb	w13, [x12]
  41523c:	cbz	w13, 415274 <main@@Base+0xf64>
  415240:	cmp	w13, #0x24
  415244:	b.ne	415254 <main@@Base+0xf44>  // b.any
  415248:	mov	w14, w13
  41524c:	strb	w14, [x8], #1
  415250:	b	415268 <main@@Base+0xf58>
  415254:	cmp	w13, #0x5c
  415258:	mov	w14, #0x5c                  	// #92
  41525c:	b.eq	41524c <main@@Base+0xf3c>  // b.none
  415260:	ldrh	w13, [x15, x13, lsl #1]
  415264:	tbnz	w13, #1, 41524c <main@@Base+0xf3c>
  415268:	ldrb	w13, [x12], #1
  41526c:	strb	w13, [x8], #1
  415270:	b	415238 <main@@Base+0xf28>
  415274:	ldr	x12, [x21, #3888]
  415278:	strb	w11, [x8], #1
  41527c:	add	x9, x9, #0x1
  415280:	ldr	w12, [x12, #8]
  415284:	cmp	x9, x12
  415288:	b.cc	415228 <main@@Base+0xf18>  // b.lo, b.ul, b.last
  41528c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  415290:	ldr	x9, [x9, #2440]
  415294:	sturb	wzr, [x8, #-1]
  415298:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  41529c:	add	x0, x0, #0x64f
  4152a0:	ldr	x5, [x9, #8]
  4152a4:	mov	w1, #0x10                  	// #16
  4152a8:	mov	w3, #0x6                   	// #6
  4152ac:	mov	w4, wzr
  4152b0:	mov	x6, xzr
  4152b4:	bl	420860 <define_variable_in_set@@Base>
  4152b8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4152bc:	ldr	x8, [x8, #3880]
  4152c0:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  4152c4:	cbnz	x8, 4152d0 <main@@Base+0xfc0>
  4152c8:	mov	x0, xzr
  4152cc:	b	4152d4 <main@@Base+0xfc4>
  4152d0:	ldr	x0, [x8]
  4152d4:	bl	418c5c <read_all_makefiles@@Base>
  4152d8:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  4152dc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4152e0:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  4152e4:	ldr	w21, [x8, #3268]
  4152e8:	ldr	w23, [x22, #3264]
  4152ec:	ldr	w24, [x25, #2396]
  4152f0:	adrp	x20, 424000 <_IO_stdin_used@@Base+0x290>
  4152f4:	add	x20, x20, #0xe55
  4152f8:	mov	x26, x0
  4152fc:	mov	w8, #0xffffffff            	// #-1
  415300:	mov	w1, #0xc                   	// #12
  415304:	mov	x0, x20
  415308:	str	w8, [x25, #2396]
  41530c:	bl	415e9c <main@@Base+0x1b8c>
  415310:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415314:	ldr	x8, [x8, #2440]
  415318:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  41531c:	add	x2, x2, #0x5eb
  415320:	mov	w1, #0xc                   	// #12
  415324:	ldr	x5, [x8, #8]
  415328:	mov	w3, #0x5                   	// #5
  41532c:	mov	x0, x20
  415330:	mov	w4, wzr
  415334:	mov	x6, xzr
  415338:	bl	420860 <define_variable_in_set@@Base>
  41533c:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  415340:	add	x0, x0, #0xe58
  415344:	mov	w1, #0x9                   	// #9
  415348:	bl	415e9c <main@@Base+0x1b8c>
  41534c:	ldr	w8, [x19, #16]
  415350:	cmn	w8, #0x1
  415354:	b.ne	4153bc <main@@Base+0x10ac>  // b.any
  415358:	ldr	w8, [x25, #2396]
  41535c:	cmn	w8, #0x1
  415360:	b.eq	4153bc <main@@Base+0x10ac>  // b.none
  415364:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415368:	ldr	x8, [x8, #3840]
  41536c:	cbz	x8, 4153c0 <main@@Base+0x10b0>
  415370:	ldr	w8, [x19, #60]
  415374:	cbnz	w8, 4153a4 <main@@Base+0x1094>
  415378:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  41537c:	add	x1, x1, #0x660
  415380:	mov	w2, #0x5                   	// #5
  415384:	mov	x0, xzr
  415388:	bl	406e10 <dcgettext@plt>
  41538c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415390:	ldr	w3, [x8, #2396]
  415394:	mov	x2, x0
  415398:	mov	w1, #0x14                  	// #20
  41539c:	mov	x0, xzr
  4153a0:	bl	418744 <error@@Base>
  4153a4:	bl	423244 <jobserver_clear@@Base>
  4153a8:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4153ac:	ldr	x0, [x20, #3840]
  4153b0:	bl	406cb0 <free@plt>
  4153b4:	str	xzr, [x20, #3840]
  4153b8:	b	4153c0 <main@@Base+0x10b0>
  4153bc:	str	w24, [x25, #2396]
  4153c0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4153c4:	ldr	w9, [x8, #3304]
  4153c8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  4153cc:	ldrb	w8, [x8, #80]
  4153d0:	sub	w20, w9, #0x1
  4153d4:	cmp	w20, #0x2
  4153d8:	b.cc	4153f4 <main@@Base+0x10e4>  // b.lo, b.ul, b.last
  4153dc:	tbz	w8, #0, 4153f4 <main@@Base+0x10e4>
  4153e0:	adrp	x24, 43f000 <shell_var@@Base+0x20>
  4153e4:	add	x24, x24, #0x48
  4153e8:	mov	x0, x24
  4153ec:	bl	418308 <output_close@@Base>
  4153f0:	ldrb	w8, [x24, #8]
  4153f4:	cmp	w20, #0x2
  4153f8:	and	w8, w8, #0xfe
  4153fc:	cset	w9, cc  // cc = lo, ul, last
  415400:	adrp	x11, 43f000 <shell_var@@Base+0x20>
  415404:	add	x11, x11, #0x48
  415408:	orr	w8, w8, w9
  41540c:	csel	x10, x11, xzr, cc  // cc = lo, ul, last
  415410:	strb	w8, [x11, #8]
  415414:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  415418:	str	x10, [x8, #1472]
  41541c:	cbnz	w23, 415478 <main@@Base+0x1168>
  415420:	ldr	w8, [x22, #3264]
  415424:	cbz	w8, 415478 <main@@Base+0x1168>
  415428:	adrp	x22, 43f000 <shell_var@@Base+0x20>
  41542c:	ldr	x8, [x22, #240]
  415430:	ldrb	w9, [x8, #136]
  415434:	tbz	w9, #4, 415448 <main@@Base+0x1138>
  415438:	ldr	x0, [x8, #24]
  41543c:	bl	417b74 <free_ns_chain@@Base>
  415440:	ldr	x8, [x22, #240]
  415444:	str	xzr, [x8, #24]
  415448:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41544c:	ldr	x8, [x8, #2440]
  415450:	adrp	x0, 423000 <fd_noinherit@@Base+0x38>
  415454:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  415458:	add	x0, x0, #0xe85
  41545c:	ldr	x5, [x8, #8]
  415460:	add	x2, x2, #0x5eb
  415464:	mov	w1, #0x8                   	// #8
  415468:	mov	w3, wzr
  41546c:	mov	w4, wzr
  415470:	mov	x6, xzr
  415474:	bl	420860 <define_variable_in_set@@Base>
  415478:	cbnz	w21, 41548c <main@@Base+0x117c>
  41547c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415480:	ldr	w8, [x8, #3268]
  415484:	cbz	w8, 41548c <main@@Base+0x117c>
  415488:	bl	408d68 <undefine_default_variables@@Base>
  41548c:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  415490:	ldr	x8, [x22, #3840]
  415494:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  415498:	cbnz	x8, 4154e8 <main@@Base+0x11d8>
  41549c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4154a0:	ldr	w8, [x8, #2396]
  4154a4:	cmn	w8, #0x1
  4154a8:	b.ne	4154b8 <main@@Base+0x11a8>  // b.any
  4154ac:	mov	w8, #0x1                   	// #1
  4154b0:	str	w8, [x21, #232]
  4154b4:	b	4154ec <main@@Base+0x11dc>
  4154b8:	cmp	w8, #0x2
  4154bc:	str	w8, [x21, #232]
  4154c0:	b.cc	4154ec <main@@Base+0x11dc>  // b.lo, b.ul, b.last
  4154c4:	sub	w0, w8, #0x1
  4154c8:	bl	422ee4 <jobserver_setup@@Base>
  4154cc:	cbz	w0, 4154ec <main@@Base+0x11dc>
  4154d0:	bl	4231f0 <jobserver_get_auth@@Base>
  4154d4:	str	x0, [x22, #3840]
  4154d8:	cbz	x0, 4154ec <main@@Base+0x11dc>
  4154dc:	ldr	w8, [x21, #232]
  4154e0:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  4154e4:	str	w8, [x9, #3896]
  4154e8:	str	wzr, [x21, #232]
  4154ec:	cmp	w20, #0x1
  4154f0:	b.hi	41551c <main@@Base+0x120c>  // b.pmore
  4154f4:	ldr	w8, [x21, #232]
  4154f8:	cmp	w8, #0x1
  4154fc:	b.ne	41551c <main@@Base+0x120c>  // b.any
  415500:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  415504:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  415508:	add	x0, x0, #0x48
  41550c:	str	xzr, [x8, #1472]
  415510:	bl	418308 <output_close@@Base>
  415514:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415518:	str	wzr, [x8, #3304]
  41551c:	mov	w0, #0x1                   	// #1
  415520:	mov	w1, wzr
  415524:	bl	4169f8 <die@@Base+0x100>
  415528:	bl	40afe0 <snap_deps@@Base>
  41552c:	bl	41f66c <convert_to_pattern@@Base>
  415530:	bl	408c80 <install_default_implicit_rules@@Base>
  415534:	bl	41f40c <snap_implicit_rules@@Base>
  415538:	bl	4225f4 <build_vpath_lists@@Base>
  41553c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415540:	ldr	x8, [x8, #3904]
  415544:	cbz	x8, 41558c <main@@Base+0x127c>
  415548:	ldr	x8, [x8]
  41554c:	ldr	x0, [x8]
  415550:	cbz	x0, 41558c <main@@Base+0x127c>
  415554:	add	x20, x8, #0x8
  415558:	mov	w8, #0x2                   	// #2
  41555c:	dup	v0.2d, x8
  415560:	mov	w21, #0x40c                 	// #1036
  415564:	str	q0, [x19, #16]
  415568:	bl	40a5f4 <enter_file@@Base>
  41556c:	ldr	w8, [x0, #136]
  415570:	ldr	q0, [x19, #16]
  415574:	and	w8, w8, #0xfffffff0
  415578:	orr	w8, w8, w21
  41557c:	str	q0, [x0, #112]
  415580:	str	w8, [x0, #136]
  415584:	ldr	x0, [x20], #8
  415588:	cbnz	x0, 415568 <main@@Base+0x1258>
  41558c:	ldr	w8, [x19, #60]
  415590:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  415594:	cbnz	w8, 4155c4 <main@@Base+0x12b4>
  415598:	ldr	x8, [x22, #3912]
  41559c:	cbz	x8, 4155c4 <main@@Base+0x12b4>
  4155a0:	ldr	x8, [x8]
  4155a4:	ldr	x0, [x8]
  4155a8:	cbz	x0, 4155c4 <main@@Base+0x12b4>
  4155ac:	add	x20, x8, #0x8
  4155b0:	mov	x21, #0xffffffffffffffff    	// #-1
  4155b4:	bl	40a5f4 <enter_file@@Base>
  4155b8:	stp	x21, x21, [x0, #112]
  4155bc:	ldr	x0, [x20], #8
  4155c0:	cbnz	x0, 4155b4 <main@@Base+0x12a4>
  4155c4:	bl	423658 <remote_setup@@Base>
  4155c8:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  4155cc:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  4155d0:	add	x0, x0, #0x48
  4155d4:	str	xzr, [x8, #1472]
  4155d8:	bl	418308 <output_close@@Base>
  4155dc:	cbnz	x26, 4155e8 <main@@Base+0x12d8>
  4155e0:	mov	w23, wzr
  4155e4:	b	4158e0 <main@@Base+0x15d0>
  4155e8:	ldrb	w8, [x27, #3236]
  4155ec:	tbz	w8, #0, 415610 <main@@Base+0x1300>
  4155f0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4155f4:	add	x1, x1, #0x69c
  4155f8:	mov	w2, #0x5                   	// #5
  4155fc:	mov	x0, xzr
  415600:	bl	406e10 <dcgettext@plt>
  415604:	bl	406ea0 <printf@plt>
  415608:	ldr	x0, [x28, #2512]
  41560c:	bl	406d40 <fflush@plt>
  415610:	mov	w8, wzr
  415614:	mov	x9, x26
  415618:	ldr	x9, [x9]
  41561c:	add	w8, w8, #0x1
  415620:	cbnz	x9, 415618 <main@@Base+0x1308>
  415624:	mov	w8, w8
  415628:	lsl	x8, x8, #3
  41562c:	add	x8, x8, #0xf
  415630:	mov	x9, sp
  415634:	and	x8, x8, #0xffffffff0
  415638:	sub	x25, x9, x8
  41563c:	mov	sp, x25
  415640:	adrp	x23, 427000 <_IO_stdin_used@@Base+0x3290>
  415644:	mov	w20, wzr
  415648:	mov	x24, xzr
  41564c:	add	x23, x23, #0x6b4
  415650:	mov	x21, x26
  415654:	ldr	x0, [x21, #16]
  415658:	ldr	x27, [x0, #104]
  41565c:	cbz	x27, 415678 <main@@Base+0x1368>
  415660:	ldr	x8, [x27, #24]
  415664:	cbnz	x8, 415670 <main@@Base+0x1360>
  415668:	ldr	x8, [x27, #32]
  41566c:	cbnz	x8, 4156a8 <main@@Base+0x1398>
  415670:	ldr	x27, [x27, #56]
  415674:	cbnz	x27, 415660 <main@@Base+0x1350>
  415678:	ldr	x8, [x0, #112]
  41567c:	cbnz	x8, 41568c <main@@Base+0x137c>
  415680:	mov	w1, wzr
  415684:	bl	41e0cc <f_mtime@@Base>
  415688:	mov	x8, x0
  41568c:	str	x8, [x25, w20, uxtw #3]
  415690:	ldr	x27, [x21]
  415694:	add	w20, w20, #0x1
  415698:	mov	x24, x21
  41569c:	mov	x21, x27
  4156a0:	cbnz	x27, 415654 <main@@Base+0x1344>
  4156a4:	b	415708 <main@@Base+0x13f8>
  4156a8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4156ac:	ldrb	w8, [x8, #3236]
  4156b0:	tbz	w8, #1, 4156d4 <main@@Base+0x13c4>
  4156b4:	mov	w2, #0x5                   	// #5
  4156b8:	mov	x0, xzr
  4156bc:	mov	x1, x23
  4156c0:	bl	406e10 <dcgettext@plt>
  4156c4:	ldr	x1, [x27]
  4156c8:	bl	406ea0 <printf@plt>
  4156cc:	ldr	x0, [x28, #2512]
  4156d0:	bl	406d40 <fflush@plt>
  4156d4:	ldr	x27, [x21]
  4156d8:	cbnz	x24, 4156f0 <main@@Base+0x13e0>
  4156dc:	mov	x0, x21
  4156e0:	bl	406cb0 <free@plt>
  4156e4:	mov	x21, xzr
  4156e8:	mov	x26, x27
  4156ec:	b	415698 <main@@Base+0x1388>
  4156f0:	mov	x0, x21
  4156f4:	str	x27, [x24]
  4156f8:	bl	406cb0 <free@plt>
  4156fc:	ldr	x27, [x24]
  415700:	mov	x21, x24
  415704:	b	415698 <main@@Base+0x1388>
  415708:	mov	w0, #0x1                   	// #1
  41570c:	mov	w1, #0x1                   	// #1
  415710:	mov	w21, #0x1                   	// #1
  415714:	bl	4169f8 <die@@Base+0x100>
  415718:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  41571c:	ldr	w20, [x27, #3236]
  415720:	tbnz	w20, #8, 415728 <main@@Base+0x1418>
  415724:	str	wzr, [x27, #3236]
  415728:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  41572c:	mov	x0, x26
  415730:	str	w21, [x23, #3300]
  415734:	bl	41ce04 <update_goal_chain@@Base>
  415738:	str	wzr, [x23, #3300]
  41573c:	str	w20, [x27, #3236]
  415740:	cbz	w0, 4159cc <main@@Base+0x16bc>
  415744:	cmp	w0, #0x3
  415748:	mov	w23, wzr
  41574c:	b.ne	4158e0 <main@@Base+0x15d0>  // b.any
  415750:	cbz	x26, 4155e0 <main@@Base+0x12d0>
  415754:	adrp	x24, 427000 <_IO_stdin_used@@Base+0x3290>
  415758:	mov	w23, wzr
  41575c:	mov	w21, wzr
  415760:	mov	w20, wzr
  415764:	add	x24, x24, #0x6e0
  415768:	str	wzr, [x19, #16]
  41576c:	ldr	x0, [x26, #16]
  415770:	ldr	w8, [x0, #136]
  415774:	tbnz	w8, #10, 4157d8 <main@@Base+0x14c8>
  415778:	ldrh	w27, [x26, #32]
  41577c:	tbnz	w27, #2, 415808 <main@@Base+0x14f8>
  415780:	mov	x24, x28
  415784:	mov	w28, w20
  415788:	ldr	x20, [x26, #8]
  41578c:	cbnz	x20, 415794 <main@@Base+0x1484>
  415790:	ldr	x20, [x0]
  415794:	mov	x0, x20
  415798:	bl	406790 <strlen@plt>
  41579c:	str	x0, [x19, #8]
  4157a0:	mov	w2, #0x5                   	// #5
  4157a4:	mov	x0, xzr
  4157a8:	tbnz	w27, #1, 41587c <main@@Base+0x156c>
  4157ac:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4157b0:	add	x1, x1, #0x726
  4157b4:	bl	406e10 <dcgettext@plt>
  4157b8:	ldr	x1, [x19, #8]
  4157bc:	mov	x2, x0
  4157c0:	mov	x0, xzr
  4157c4:	mov	x3, x20
  4157c8:	bl	418744 <error@@Base>
  4157cc:	mov	w8, #0x1                   	// #1
  4157d0:	str	w8, [x19, #16]
  4157d4:	b	41589c <main@@Base+0x158c>
  4157d8:	tst	w8, #0x3
  4157dc:	b.ne	415810 <main@@Base+0x1500>  // b.any
  4157e0:	ldr	x8, [x0, #112]
  4157e4:	cbnz	x8, 4157f4 <main@@Base+0x14e4>
  4157e8:	mov	w1, wzr
  4157ec:	bl	41e0cc <f_mtime@@Base>
  4157f0:	mov	x8, x0
  4157f4:	ldr	x9, [x25, w21, uxtw #3]
  4157f8:	cmp	x8, x9
  4157fc:	cset	w8, ne  // ne = any
  415800:	orr	w20, w20, w8
  415804:	b	4158c8 <main@@Base+0x15b8>
  415808:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  41580c:	b	4158c8 <main@@Base+0x15b8>
  415810:	ldrb	w8, [x26, #32]
  415814:	tbnz	w8, #2, 4158c8 <main@@Base+0x15b8>
  415818:	ldr	x0, [x0]
  41581c:	mov	w23, w20
  415820:	bl	406790 <strlen@plt>
  415824:	mov	x20, x0
  415828:	mov	w2, #0x5                   	// #5
  41582c:	mov	x0, xzr
  415830:	mov	x1, x24
  415834:	bl	406e10 <dcgettext@plt>
  415838:	ldr	x8, [x26, #16]
  41583c:	mov	x2, x0
  415840:	mov	x0, xzr
  415844:	mov	x1, x20
  415848:	ldr	x3, [x8]
  41584c:	bl	418744 <error@@Base>
  415850:	ldr	x8, [x26, #16]
  415854:	ldr	x0, [x8, #112]
  415858:	cbnz	x0, 415868 <main@@Base+0x1558>
  41585c:	mov	x0, x8
  415860:	mov	w1, wzr
  415864:	bl	41e0cc <f_mtime@@Base>
  415868:	cmp	x0, #0x1
  41586c:	mov	w20, w23
  415870:	b.ne	4158b4 <main@@Base+0x15a4>  // b.any
  415874:	mov	w8, wzr
  415878:	b	4158c0 <main@@Base+0x15b0>
  41587c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415880:	add	x1, x1, #0x700
  415884:	bl	406e10 <dcgettext@plt>
  415888:	ldr	x1, [x19, #8]
  41588c:	mov	x2, x0
  415890:	mov	x0, xzr
  415894:	mov	x3, x20
  415898:	bl	418744 <error@@Base>
  41589c:	mov	w20, w28
  4158a0:	mov	x28, x24
  4158a4:	adrp	x24, 427000 <_IO_stdin_used@@Base+0x3290>
  4158a8:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  4158ac:	add	x24, x24, #0x6e0
  4158b0:	b	4158c8 <main@@Base+0x15b8>
  4158b4:	ldr	x8, [x25, w21, uxtw #3]
  4158b8:	cmp	x0, x8
  4158bc:	cset	w8, ne  // ne = any
  4158c0:	orr	w20, w20, w8
  4158c4:	mov	w23, #0x2                   	// #2
  4158c8:	ldr	x26, [x26]
  4158cc:	add	w21, w21, #0x1
  4158d0:	cbnz	x26, 41576c <main@@Base+0x145c>
  4158d4:	cbnz	w20, 4159cc <main@@Base+0x16bc>
  4158d8:	ldr	w8, [x19, #16]
  4158dc:	cbnz	w8, 415e10 <main@@Base+0x1b00>
  4158e0:	mov	w0, #0x1                   	// #1
  4158e4:	mov	w1, wzr
  4158e8:	bl	4169f8 <die@@Base+0x100>
  4158ec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4158f0:	ldr	w8, [x8, #3832]
  4158f4:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  4158f8:	str	w8, [x9, #3296]
  4158fc:	ldr	w8, [x19, #60]
  415900:	cbz	w8, 415930 <main@@Base+0x1620>
  415904:	ldr	x8, [x22, #3912]
  415908:	cbz	x8, 415930 <main@@Base+0x1620>
  41590c:	ldr	x8, [x8]
  415910:	ldr	x0, [x8]
  415914:	cbz	x0, 415930 <main@@Base+0x1620>
  415918:	add	x20, x8, #0x8
  41591c:	mov	x21, #0xffffffffffffffff    	// #-1
  415920:	bl	40a5f4 <enter_file@@Base>
  415924:	stp	x21, x21, [x0, #112]
  415928:	ldr	x0, [x20], #8
  41592c:	cbnz	x0, 415920 <main@@Base+0x1610>
  415930:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  415934:	ldr	x0, [x20, #3824]
  415938:	cbz	x0, 415970 <main@@Base+0x1660>
  41593c:	bl	406f00 <unlink@plt>
  415940:	tbz	w0, #31, 415970 <main@@Base+0x1660>
  415944:	bl	406eb0 <__errno_location@plt>
  415948:	ldr	w8, [x0]
  41594c:	cmp	w8, #0x2
  415950:	b.eq	415970 <main@@Base+0x1660>  // b.none
  415954:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415958:	add	x1, x1, #0x7bc
  41595c:	mov	w2, #0x5                   	// #5
  415960:	mov	x0, xzr
  415964:	bl	406e10 <dcgettext@plt>
  415968:	ldr	x1, [x20, #3824]
  41596c:	bl	418a4c <perror_with_name@@Base>
  415970:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  415974:	ldr	x0, [x22, #3920]
  415978:	cbnz	x0, 4159bc <main@@Base+0x16ac>
  41597c:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  415980:	ldr	x8, [x8, #48]
  415984:	ldrb	w9, [x8, #44]
  415988:	tbnz	w9, #0, 415b1c <main@@Base+0x180c>
  41598c:	ldr	x21, [x8, #8]
  415990:	adrp	x24, 43e000 <stdio_traced@@Base+0x1a38>
  415994:	ldr	x20, [x24, #4040]
  415998:	mov	x0, x21
  41599c:	bl	406790 <strlen@plt>
  4159a0:	mov	x2, x0
  4159a4:	mov	x0, x20
  4159a8:	mov	x1, x21
  4159ac:	bl	4099c4 <variable_buffer_output@@Base>
  4159b0:	strb	wzr, [x0]
  4159b4:	ldr	x0, [x24, #4040]
  4159b8:	b	415b24 <main@@Base+0x1814>
  4159bc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4159c0:	ldr	x8, [x8, #3928]
  4159c4:	str	xzr, [x8]
  4159c8:	b	415be8 <main@@Base+0x18d8>
  4159cc:	mov	w0, wzr
  4159d0:	bl	40aad8 <remove_intermediates@@Base>
  4159d4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4159d8:	ldr	w8, [x8, #3256]
  4159dc:	cbz	w8, 4159e4 <main@@Base+0x16d4>
  4159e0:	bl	417010 <die@@Base+0x718>
  4159e4:	mov	w0, wzr
  4159e8:	bl	4170bc <die@@Base+0x7c4>
  4159ec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4159f0:	ldr	x8, [x8, #3880]
  4159f4:	ldr	x24, [x19, #40]
  4159f8:	cbz	x8, 415a80 <main@@Base+0x1770>
  4159fc:	ldr	x8, [x19, #48]
  415a00:	cmp	w8, #0x2
  415a04:	b.lt	415a80 <main@@Base+0x1770>  // b.tstop
  415a08:	adrp	x21, 424000 <_IO_stdin_used@@Base+0x290>
  415a0c:	mov	w22, wzr
  415a10:	mov	w23, #0x1                   	// #1
  415a14:	add	x21, x21, #0x847
  415a18:	ldr	x20, [x24, w23, sxtw #3]
  415a1c:	mov	w2, #0x2                   	// #2
  415a20:	mov	x1, x21
  415a24:	mov	x0, x20
  415a28:	bl	406a30 <strncmp@plt>
  415a2c:	cbnz	w0, 415a70 <main@@Base+0x1760>
  415a30:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415a34:	ldr	x8, [x8, #3880]
  415a38:	ldrb	w9, [x20, #2]
  415a3c:	sxtw	x20, w23
  415a40:	ldr	x8, [x8]
  415a44:	ldr	x2, [x8, w22, sxtw #3]
  415a48:	cbnz	w9, 415a58 <main@@Base+0x1748>
  415a4c:	add	x23, x20, #0x1
  415a50:	str	x2, [x24, x23, lsl #3]
  415a54:	b	415a6c <main@@Base+0x175c>
  415a58:	mov	w0, #0x2                   	// #2
  415a5c:	mov	x1, x21
  415a60:	bl	4176dc <concat@@Base>
  415a64:	bl	4178d4 <xstrdup@@Base>
  415a68:	str	x0, [x24, x20, lsl #3]
  415a6c:	add	w22, w22, #0x1
  415a70:	ldr	x8, [x19, #48]
  415a74:	add	w23, w23, #0x1
  415a78:	cmp	w23, w8
  415a7c:	b.lt	415a18 <main@@Base+0x1708>  // b.tstop
  415a80:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  415a84:	ldr	x8, [x9, #3824]
  415a88:	cbz	x8, 415ad4 <main@@Base+0x17c4>
  415a8c:	ldr	x21, [x19, #48]
  415a90:	mov	x22, x9
  415a94:	add	w8, w21, #0x2
  415a98:	sbfiz	x0, x8, #3, #32
  415a9c:	bl	417888 <xmalloc@@Base>
  415aa0:	sbfiz	x2, x21, #3, #32
  415aa4:	mov	x1, x24
  415aa8:	mov	x20, x0
  415aac:	bl	406750 <memcpy@plt>
  415ab0:	ldr	x2, [x22, #3824]
  415ab4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415ab8:	add	x1, x1, #0x742
  415abc:	mov	w0, #0x2                   	// #2
  415ac0:	bl	4176dc <concat@@Base>
  415ac4:	bl	4178d4 <xstrdup@@Base>
  415ac8:	add	x8, x20, w21, sxtw #3
  415acc:	mov	x24, x20
  415ad0:	stp	x0, xzr, [x8]
  415ad4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415ad8:	ldr	x8, [x8, #3856]
  415adc:	cbz	x8, 415c6c <main@@Base+0x195c>
  415ae0:	ldr	w8, [x8, #8]
  415ae4:	cbz	w8, 415c6c <main@@Base+0x195c>
  415ae8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  415aec:	ldr	x0, [x8, #4048]
  415af0:	cbz	x0, 415b10 <main@@Base+0x1800>
  415af4:	bl	406ca0 <chdir@plt>
  415af8:	tbz	w0, #31, 415c6c <main@@Base+0x195c>
  415afc:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  415b00:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  415b04:	add	x0, x0, #0x745
  415b08:	add	x1, x1, #0x5eb
  415b0c:	bl	418a4c <perror_with_name@@Base>
  415b10:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415b14:	add	x1, x1, #0x74b
  415b18:	b	415b64 <main@@Base+0x1854>
  415b1c:	ldr	x0, [x8, #8]
  415b20:	bl	40a2dc <variable_expand@@Base>
  415b24:	str	x0, [x19, #64]
  415b28:	ldrb	w8, [x0]
  415b2c:	cbnz	w8, 415b80 <main@@Base+0x1870>
  415b30:	ldr	x0, [x22, #3920]
  415b34:	cbnz	x0, 415be8 <main@@Base+0x18d8>
  415b38:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  415b3c:	add	x0, x0, #0x802
  415b40:	mov	w1, #0xd                   	// #13
  415b44:	bl	420c00 <lookup_variable@@Base>
  415b48:	cbz	x0, 415b5c <main@@Base+0x184c>
  415b4c:	ldr	x8, [x0, #8]
  415b50:	cbz	x8, 415b5c <main@@Base+0x184c>
  415b54:	ldrb	w8, [x8]
  415b58:	cbnz	w8, 415e04 <main@@Base+0x1af4>
  415b5c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415b60:	add	x1, x1, #0x81b
  415b64:	mov	w2, #0x5                   	// #5
  415b68:	mov	x0, xzr
  415b6c:	bl	406e10 <dcgettext@plt>
  415b70:	mov	x2, x0
  415b74:	mov	x0, xzr
  415b78:	mov	x1, xzr
  415b7c:	bl	4188bc <fatal@@Base>
  415b80:	bl	40a568 <lookup_file@@Base>
  415b84:	mov	x20, x0
  415b88:	cbnz	x0, 415bd4 <main@@Base+0x18c4>
  415b8c:	add	x0, x19, #0x40
  415b90:	mov	w1, #0x10                  	// #16
  415b94:	mov	w2, #0x1                   	// #1
  415b98:	mov	x3, xzr
  415b9c:	mov	w4, wzr
  415ba0:	bl	41b114 <parse_file_seq@@Base>
  415ba4:	cbz	x0, 415b30 <main@@Base+0x1820>
  415ba8:	ldr	x8, [x0]
  415bac:	mov	x21, x0
  415bb0:	cbnz	x8, 415df8 <main@@Base+0x1ae8>
  415bb4:	ldr	x0, [x21, #8]
  415bb8:	bl	42016c <strcache_add@@Base>
  415bbc:	bl	40a5f4 <enter_file@@Base>
  415bc0:	mov	x20, x0
  415bc4:	mov	x0, x21
  415bc8:	str	xzr, [x21, #8]
  415bcc:	bl	417b74 <free_ns_chain@@Base>
  415bd0:	cbz	x20, 415b30 <main@@Base+0x1820>
  415bd4:	mov	w0, #0x40                  	// #64
  415bd8:	bl	4178ac <xcalloc@@Base>
  415bdc:	str	x0, [x22, #3920]
  415be0:	str	x20, [x0, #16]
  415be4:	cbz	x0, 415b38 <main@@Base+0x1828>
  415be8:	ldrb	w8, [x27, #3236]
  415bec:	tbz	w8, #0, 415c14 <main@@Base+0x1904>
  415bf0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415bf4:	add	x1, x1, #0x846
  415bf8:	mov	w2, #0x5                   	// #5
  415bfc:	mov	x0, xzr
  415c00:	bl	406e10 <dcgettext@plt>
  415c04:	bl	406ea0 <printf@plt>
  415c08:	ldr	x0, [x28, #2512]
  415c0c:	bl	406d40 <fflush@plt>
  415c10:	ldr	x0, [x22, #3920]
  415c14:	bl	41ce04 <update_goal_chain@@Base>
  415c18:	cmp	w0, #0x3
  415c1c:	b.eq	415c30 <main@@Base+0x1920>  // b.none
  415c20:	cmp	w0, #0x2
  415c24:	b.ne	415c34 <main@@Base+0x1924>  // b.any
  415c28:	mov	w23, #0x1                   	// #1
  415c2c:	b	415c34 <main@@Base+0x1924>
  415c30:	mov	w23, #0x2                   	// #2
  415c34:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  415c38:	ldr	w8, [x8, #224]
  415c3c:	cbz	w8, 415c64 <main@@Base+0x1954>
  415c40:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415c44:	add	x1, x1, #0x861
  415c48:	mov	w2, #0x5                   	// #5
  415c4c:	mov	x0, xzr
  415c50:	bl	406e10 <dcgettext@plt>
  415c54:	mov	x2, x0
  415c58:	mov	x0, xzr
  415c5c:	mov	x1, xzr
  415c60:	bl	418744 <error@@Base>
  415c64:	mov	w0, w23
  415c68:	bl	4168f8 <die@@Base>
  415c6c:	ldr	w9, [x19, #60]
  415c70:	ldrb	w8, [x27, #3236]
  415c74:	add	w21, w9, #0x1
  415c78:	tbz	w8, #0, 415ccc <main@@Base+0x19bc>
  415c7c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415c80:	add	x1, x1, #0x777
  415c84:	mov	w2, #0x5                   	// #5
  415c88:	mov	x0, xzr
  415c8c:	bl	406e10 <dcgettext@plt>
  415c90:	mov	w1, w21
  415c94:	bl	406ea0 <printf@plt>
  415c98:	ldr	x1, [x24]
  415c9c:	cbz	x1, 415cbc <main@@Base+0x19ac>
  415ca0:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  415ca4:	add	x22, x24, #0x8
  415ca8:	add	x20, x20, #0x96b
  415cac:	mov	x0, x20
  415cb0:	bl	406ea0 <printf@plt>
  415cb4:	ldr	x1, [x22], #8
  415cb8:	cbnz	x1, 415cac <main@@Base+0x199c>
  415cbc:	mov	w0, #0xa                   	// #10
  415cc0:	bl	406ed0 <putchar@plt>
  415cc4:	ldr	x0, [x28, #2512]
  415cc8:	bl	406d40 <fflush@plt>
  415ccc:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  415cd0:	ldr	x28, [x25, #2528]
  415cd4:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  415cd8:	add	x27, x27, #0x616
  415cdc:	ldr	x20, [x28]
  415ce0:	cbz	x20, 415d8c <main@@Base+0x1a7c>
  415ce4:	adrp	x22, 427000 <_IO_stdin_used@@Base+0x3290>
  415ce8:	adrp	x23, 427000 <_IO_stdin_used@@Base+0x3290>
  415cec:	adrp	x26, 427000 <_IO_stdin_used@@Base+0x3290>
  415cf0:	add	x22, x22, #0x789
  415cf4:	add	x23, x23, #0x4d2
  415cf8:	add	x26, x26, #0x79a
  415cfc:	mov	w2, #0xa                   	// #10
  415d00:	mov	x0, x20
  415d04:	mov	x1, x22
  415d08:	bl	406a30 <strncmp@plt>
  415d0c:	cbnz	w0, 415d38 <main@@Base+0x1a28>
  415d10:	sub	x0, sp, #0x30
  415d14:	mov	sp, x0
  415d18:	str	x0, [x28]
  415d1c:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  415d20:	ldr	w3, [x8, #56]
  415d24:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415d28:	add	x1, x1, #0x794
  415d2c:	mov	x2, x23
  415d30:	bl	406830 <sprintf@plt>
  415d34:	b	415d84 <main@@Base+0x1a74>
  415d38:	mov	w2, #0xe                   	// #14
  415d3c:	mov	x0, x20
  415d40:	mov	x1, x26
  415d44:	bl	406a30 <strncmp@plt>
  415d48:	cbnz	w0, 415d84 <main@@Base+0x1a74>
  415d4c:	sub	x0, sp, #0x30
  415d50:	mov	sp, x0
  415d54:	str	x0, [x28]
  415d58:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  415d5c:	ldr	w8, [x8, #1480]
  415d60:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415d64:	add	x1, x1, #0x7a9
  415d68:	mov	w3, w21
  415d6c:	cmp	w8, #0x0
  415d70:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  415d74:	add	x8, x8, #0x5eb
  415d78:	csel	x2, x8, x27, eq  // eq = none
  415d7c:	bl	406830 <sprintf@plt>
  415d80:	mov	w21, wzr
  415d84:	ldr	x20, [x28, #8]!
  415d88:	cbnz	x20, 415cfc <main@@Base+0x19ec>
  415d8c:	cbz	w21, 415dcc <main@@Base+0x1abc>
  415d90:	sub	x20, sp, #0x30
  415d94:	mov	sp, x20
  415d98:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  415d9c:	ldr	w8, [x8, #1480]
  415da0:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415da4:	add	x1, x1, #0x7a9
  415da8:	mov	x0, x20
  415dac:	cmp	w8, #0x0
  415db0:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  415db4:	add	x8, x8, #0x5eb
  415db8:	csel	x2, x8, x27, eq  // eq = none
  415dbc:	mov	w3, w21
  415dc0:	bl	406830 <sprintf@plt>
  415dc4:	mov	x0, x20
  415dc8:	bl	406b20 <putenv@plt>
  415dcc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415dd0:	ldr	x0, [x8, #2512]
  415dd4:	bl	406d40 <fflush@plt>
  415dd8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  415ddc:	ldr	x0, [x8, #2488]
  415de0:	bl	406d40 <fflush@plt>
  415de4:	mov	w0, #0x1                   	// #1
  415de8:	bl	4233b0 <jobserver_pre_child@@Base>
  415dec:	ldr	x1, [x25, #2528]
  415df0:	mov	x0, x24
  415df4:	bl	4131d8 <exec_command@@Base>
  415df8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415dfc:	add	x1, x1, #0x7d6
  415e00:	b	415b64 <main@@Base+0x1854>
  415e04:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  415e08:	add	x1, x1, #0x810
  415e0c:	b	415b64 <main@@Base+0x1854>
  415e10:	mov	w0, #0x2                   	// #2
  415e14:	bl	4168f8 <die@@Base>
  415e18:	mov	x0, x20
  415e1c:	bl	417cc8 <pfatal_with_name@@Base>
  415e20:	bl	4167dc <main@@Base+0x24cc>
  415e24:	mov	w0, wzr
  415e28:	bl	4168f8 <die@@Base>
  415e2c:	sub	sp, sp, #0x160
  415e30:	add	x9, sp, #0x98
  415e34:	stp	x20, x19, [sp, #336]
  415e38:	add	x20, x9, #0x8
  415e3c:	mov	w19, w0
  415e40:	mov	w8, #0x10000000            	// #268435456
  415e44:	mov	x0, x20
  415e48:	stp	x29, x30, [sp, #304]
  415e4c:	str	x28, [sp, #320]
  415e50:	add	x29, sp, #0x130
  415e54:	str	x1, [sp, #152]
  415e58:	str	w8, [sp, #288]
  415e5c:	bl	406a10 <sigemptyset@plt>
  415e60:	mov	x0, x20
  415e64:	mov	w1, w19
  415e68:	bl	406e80 <sigaddset@plt>
  415e6c:	add	x1, sp, #0x98
  415e70:	mov	x2, sp
  415e74:	mov	w0, w19
  415e78:	bl	406b70 <sigaction@plt>
  415e7c:	ldr	x8, [sp]
  415e80:	ldp	x20, x19, [sp, #336]
  415e84:	ldr	x28, [sp, #320]
  415e88:	ldp	x29, x30, [sp, #304]
  415e8c:	cmp	w0, #0x0
  415e90:	csinv	x0, x8, xzr, eq  // eq = none
  415e94:	add	sp, sp, #0x160
  415e98:	ret
  415e9c:	stp	x29, x30, [sp, #-48]!
  415ea0:	mov	x2, x1
  415ea4:	add	x9, x2, #0x13
  415ea8:	mov	x8, sp
  415eac:	and	x9, x9, #0xfffffffffffffff0
  415eb0:	stp	x20, x19, [sp, #32]
  415eb4:	sub	x19, x8, x9
  415eb8:	add	x20, x2, x19
  415ebc:	stp	x22, x21, [sp, #16]
  415ec0:	mov	x29, sp
  415ec4:	mov	x1, x0
  415ec8:	mov	sp, x19
  415ecc:	mov	w8, #0x2824                	// #10276
  415ed0:	mov	x0, x19
  415ed4:	strh	w8, [x0], #2
  415ed8:	bl	406750 <memcpy@plt>
  415edc:	mov	w8, #0x29                  	// #41
  415ee0:	mov	x0, x19
  415ee4:	strh	w8, [x20, #2]
  415ee8:	bl	40a2dc <variable_expand@@Base>
  415eec:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  415ef0:	sub	x20, x0, #0x1
  415ef4:	add	x21, x21, #0xcf0
  415ef8:	ldrb	w8, [x20, #1]!
  415efc:	ldrh	w8, [x21, x8, lsl #1]
  415f00:	tst	w8, #0x6
  415f04:	b.ne	415ef8 <main@@Base+0x1be8>  // b.any
  415f08:	mov	x0, x20
  415f0c:	bl	406790 <strlen@plt>
  415f10:	cbz	x0, 415ff0 <main@@Base+0x1ce0>
  415f14:	lsl	x8, x0, #3
  415f18:	add	x8, x8, #0x1f
  415f1c:	mov	x9, sp
  415f20:	and	x8, x8, #0xfffffffffffffff0
  415f24:	sub	x19, x9, x8
  415f28:	mov	sp, x19
  415f2c:	add	x9, x0, #0x11
  415f30:	mov	x8, sp
  415f34:	and	x9, x9, #0xfffffffffffffff0
  415f38:	sub	x22, x8, x9
  415f3c:	mov	sp, x22
  415f40:	mov	w9, #0x2d                  	// #45
  415f44:	mov	x8, x22
  415f48:	strb	w9, [x8], #1
  415f4c:	mov	w9, #0x1                   	// #1
  415f50:	stp	xzr, x8, [x19]
  415f54:	ldrb	w10, [x20]
  415f58:	add	x8, x8, #0x1
  415f5c:	cmp	w10, #0x5c
  415f60:	b.eq	415f6c <main@@Base+0x1c5c>  // b.none
  415f64:	cbnz	w10, 415f84 <main@@Base+0x1c74>
  415f68:	b	415fb4 <main@@Base+0x1ca4>
  415f6c:	mov	x11, x20
  415f70:	ldrb	w12, [x11, #1]!
  415f74:	cbz	w12, 415f84 <main@@Base+0x1c74>
  415f78:	mov	w10, w12
  415f7c:	mov	x20, x11
  415f80:	b	415f8c <main@@Base+0x1c7c>
  415f84:	ldrh	w11, [x21, x10, lsl #1]
  415f88:	tbnz	w11, #1, 415f98 <main@@Base+0x1c88>
  415f8c:	add	x20, x20, #0x1
  415f90:	sturb	w10, [x8, #-1]
  415f94:	b	415f54 <main@@Base+0x1c44>
  415f98:	add	x9, x9, #0x1
  415f9c:	sturb	wzr, [x8, #-1]
  415fa0:	str	x8, [x19, x9, lsl #3]
  415fa4:	ldrb	w10, [x20, #1]!
  415fa8:	ldrh	w10, [x21, x10, lsl #1]
  415fac:	tbnz	w10, #1, 415fa4 <main@@Base+0x1c94>
  415fb0:	b	415f54 <main@@Base+0x1c44>
  415fb4:	add	w20, w9, #0x1
  415fb8:	str	xzr, [x19, w20, uxtw #3]
  415fbc:	ldr	x0, [x19, #8]
  415fc0:	sturb	wzr, [x8, #-1]
  415fc4:	ldrb	w8, [x0]
  415fc8:	cmp	w8, #0x2d
  415fcc:	b.eq	415fe0 <main@@Base+0x1cd0>  // b.none
  415fd0:	mov	w1, #0x3d                  	// #61
  415fd4:	bl	406cd0 <strchr@plt>
  415fd8:	cbnz	x0, 415fe0 <main@@Base+0x1cd0>
  415fdc:	str	x22, [x19, #8]
  415fe0:	mov	w2, #0x1                   	// #1
  415fe4:	mov	w0, w20
  415fe8:	mov	x1, x19
  415fec:	bl	416004 <main@@Base+0x1cf4>
  415ff0:	mov	sp, x29
  415ff4:	ldp	x20, x19, [sp, #32]
  415ff8:	ldp	x22, x21, [sp, #16]
  415ffc:	ldp	x29, x30, [sp], #48
  416000:	ret
  416004:	str	d8, [sp, #-112]!
  416008:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41600c:	ldrb	w8, [x8, #3940]
  416010:	stp	x22, x21, [sp, #80]
  416014:	stp	x20, x19, [sp, #96]
  416018:	mov	w19, w2
  41601c:	mov	x20, x1
  416020:	mov	w21, w0
  416024:	stp	x29, x30, [sp, #16]
  416028:	stp	x28, x27, [sp, #32]
  41602c:	stp	x26, x25, [sp, #48]
  416030:	stp	x24, x23, [sp, #64]
  416034:	mov	x29, sp
  416038:	cbnz	w8, 416154 <main@@Base+0x1e44>
  41603c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  416040:	add	x9, x9, #0xf64
  416044:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  416048:	mov	w17, #0x2d                  	// #45
  41604c:	adrp	x12, 426000 <_IO_stdin_used@@Base+0x2290>
  416050:	mov	x13, #0x205                 	// #517
  416054:	adrp	x14, 426000 <_IO_stdin_used@@Base+0x2290>
  416058:	mov	x10, xzr
  41605c:	mov	x11, xzr
  416060:	add	x8, x8, #0xfd8
  416064:	add	x12, x12, #0xa80
  416068:	movk	x13, #0x10, lsl #32
  41606c:	add	x14, x14, #0x5eb
  416070:	mov	w15, #0x1                   	// #1
  416074:	mov	w16, #0x3a                  	// #58
  416078:	strb	w17, [x9], #1
  41607c:	mov	w17, #0x15800000            	// #360710144
  416080:	lsr	x0, x13, x11
  416084:	mov	x18, x14
  416088:	tbnz	w0, #0, 416090 <main@@Base+0x1d80>
  41608c:	ldr	x18, [x12, #40]
  416090:	ldr	w0, [x12]
  416094:	add	x1, x8, x10
  416098:	str	x18, [x1]
  41609c:	sub	x18, x11, #0x1c
  4160a0:	cmp	x18, #0x8
  4160a4:	str	xzr, [x1, #16]
  4160a8:	str	w0, [x1, #24]
  4160ac:	b.cc	4160b4 <main@@Base+0x1da4>  // b.lo, b.ul, b.last
  4160b0:	strb	w0, [x9], #1
  4160b4:	ldr	w0, [x12, #4]
  4160b8:	cmp	w0, #0x7
  4160bc:	b.hi	416108 <main@@Base+0x1df8>  // b.pmore
  4160c0:	lsl	w0, w15, w0
  4160c4:	tst	w0, #0x7c
  4160c8:	b.eq	4160fc <main@@Base+0x1dec>  // b.none
  4160cc:	cmp	x18, #0x8
  4160d0:	b.cc	4160d8 <main@@Base+0x1dc8>  // b.lo, b.ul, b.last
  4160d4:	strb	w16, [x9], #1
  4160d8:	lsr	x1, x17, x11
  4160dc:	tst	x1, #0x1
  4160e0:	cinc	w0, w15, ne  // ne = any
  4160e4:	tbz	w1, #0, 416100 <main@@Base+0x1df0>
  4160e8:	cmp	x18, #0x8
  4160ec:	b.cc	416100 <main@@Base+0x1df0>  // b.lo, b.ul, b.last
  4160f0:	strb	w16, [x9], #1
  4160f4:	mov	w0, #0x2                   	// #2
  4160f8:	b	416100 <main@@Base+0x1df0>
  4160fc:	mov	w0, wzr
  416100:	add	x18, x8, x10
  416104:	str	w0, [x18, #8]
  416108:	add	x10, x10, #0x20
  41610c:	add	x11, x11, #0x1
  416110:	cmp	x10, #0x480
  416114:	add	x12, x12, #0x30
  416118:	b.ne	416080 <main@@Base+0x1d70>  // b.any
  41611c:	strb	wzr, [x9]
  416120:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x3290>
  416124:	mov	x10, xzr
  416128:	add	x9, x9, #0x170
  41612c:	add	x12, x9, x10
  416130:	ldp	q1, q0, [x12]
  416134:	add	x11, x8, x10
  416138:	add	x10, x10, #0x20
  41613c:	cmp	x10, #0x120
  416140:	str	q0, [x11, #1168]
  416144:	str	q1, [x11, #1152]
  416148:	b.ne	41612c <main@@Base+0x1e1c>  // b.any
  41614c:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  416150:	str	xzr, [x8, #1400]
  416154:	cmp	w19, #0x0
  416158:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41615c:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  416160:	cset	w9, eq  // eq = none
  416164:	cmp	w21, #0x1
  416168:	str	w9, [x8, #2536]
  41616c:	str	wzr, [x26, #2504]
  416170:	b.lt	4164ec <main@@Base+0x21dc>  // b.tstop
  416174:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  416178:	ldr	d8, [x8, #2648]
  41617c:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  416180:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  416184:	adrp	x28, 426000 <_IO_stdin_used@@Base+0x2290>
  416188:	add	x22, x22, #0xf64
  41618c:	add	x23, x23, #0xfd8
  416190:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  416194:	add	x28, x28, #0xa80
  416198:	str	wzr, [x29, #8]
  41619c:	mov	w0, w21
  4161a0:	mov	x1, x20
  4161a4:	mov	x2, x22
  4161a8:	mov	x3, x23
  4161ac:	mov	x4, xzr
  4161b0:	bl	406c50 <getopt_long@plt>
  4161b4:	ldr	x27, [x25, #2496]
  4161b8:	cmp	w0, #0x1
  4161bc:	b.eq	4161ec <main@@Base+0x1edc>  // b.none
  4161c0:	cmp	w0, #0x3f
  4161c4:	b.eq	4164b4 <main@@Base+0x21a4>  // b.none
  4161c8:	cmn	w0, #0x1
  4161cc:	b.eq	4164f8 <main@@Base+0x21e8>  // b.none
  4161d0:	mov	w8, #0x62                  	// #98
  4161d4:	mov	x24, x28
  4161d8:	cmp	w8, w0
  4161dc:	b.eq	4161fc <main@@Base+0x1eec>  // b.none
  4161e0:	ldr	w8, [x24, #48]!
  4161e4:	cbnz	w8, 4161d8 <main@@Base+0x1ec8>
  4161e8:	b	4164bc <main@@Base+0x21ac>
  4161ec:	mov	x0, x27
  4161f0:	mov	w1, w19
  4161f4:	bl	417170 <die@@Base+0x878>
  4161f8:	b	4164bc <main@@Base+0x21ac>
  4161fc:	cbz	w19, 41620c <main@@Base+0x1efc>
  416200:	ldrb	w8, [x24, #16]
  416204:	and	w8, w8, #0x1
  416208:	b	416210 <main@@Base+0x1f00>
  41620c:	mov	w8, #0x1                   	// #1
  416210:	ldr	w9, [x24, #4]
  416214:	cmp	w9, #0x7
  416218:	b.hi	41678c <main@@Base+0x247c>  // b.pmore
  41621c:	adrp	x12, 426000 <_IO_stdin_used@@Base+0x2290>
  416220:	add	x12, x12, #0xa60
  416224:	adr	x10, 416234 <main@@Base+0x1f24>
  416228:	ldrb	w11, [x12, x9]
  41622c:	add	x10, x10, x11, lsl #2
  416230:	br	x10
  416234:	cbz	w8, 4164bc <main@@Base+0x21ac>
  416238:	cbz	x27, 416328 <main@@Base+0x2018>
  41623c:	ldrb	w8, [x27]
  416240:	cbnz	w8, 416338 <main@@Base+0x2028>
  416244:	ldr	w8, [x24]
  416248:	mov	w9, #0x63                  	// #99
  41624c:	strh	w9, [x29, #12]
  416250:	cmp	w8, #0xff
  416254:	b.gt	416424 <main@@Base+0x2114>
  416258:	add	x28, x29, #0xc
  41625c:	strb	w8, [x29, #12]
  416260:	b	416428 <main@@Base+0x2118>
  416264:	cbz	w8, 4164bc <main@@Base+0x21ac>
  416268:	ldr	x8, [x24, #8]
  41626c:	cmp	w9, #0x0
  416270:	cset	w9, eq  // eq = none
  416274:	str	w9, [x8]
  416278:	b	4164bc <main@@Base+0x21ac>
  41627c:	cbnz	x27, 4162ac <main@@Base+0x1f9c>
  416280:	ldrsw	x9, [x26, #2504]
  416284:	cmp	w9, w21
  416288:	b.ge	4162a8 <main@@Base+0x1f98>  // b.tcont
  41628c:	ldr	x27, [x20, x9, lsl #3]
  416290:	ldrb	w10, [x27]
  416294:	cmp	w10, #0x2e
  416298:	b.eq	4164cc <main@@Base+0x21bc>  // b.none
  41629c:	sub	w10, w10, #0x30
  4162a0:	cmp	w10, #0x9
  4162a4:	b.ls	4164cc <main@@Base+0x21bc>  // b.plast
  4162a8:	mov	x27, xzr
  4162ac:	cbz	w8, 4164bc <main@@Base+0x21ac>
  4162b0:	cbz	x27, 4163fc <main@@Base+0x20ec>
  4162b4:	mov	x0, x27
  4162b8:	bl	406ac0 <atof@plt>
  4162bc:	b	416404 <main@@Base+0x20f4>
  4162c0:	cbnz	x27, 4162f0 <main@@Base+0x1fe0>
  4162c4:	ldrsw	x9, [x26, #2504]
  4162c8:	cmp	w9, w21
  4162cc:	b.ge	4162ec <main@@Base+0x1fdc>  // b.tcont
  4162d0:	ldr	x27, [x20, x9, lsl #3]
  4162d4:	mov	x10, x27
  4162d8:	ldrb	w11, [x10], #1
  4162dc:	sub	w12, w11, #0x30
  4162e0:	cmp	w12, #0xa
  4162e4:	b.cc	4162d8 <main@@Base+0x1fc8>  // b.lo, b.ul, b.last
  4162e8:	cbz	w11, 4164dc <main@@Base+0x21cc>
  4162ec:	mov	x27, xzr
  4162f0:	cbz	w8, 4164bc <main@@Base+0x21ac>
  4162f4:	cbz	x27, 416410 <main@@Base+0x2100>
  4162f8:	mov	x0, x27
  4162fc:	bl	406990 <atoi@plt>
  416300:	ldrb	w8, [x27], #1
  416304:	sub	w9, w8, #0x30
  416308:	cmp	w9, #0xa
  41630c:	b.cc	416300 <main@@Base+0x1ff0>  // b.lo, b.ul, b.last
  416310:	cmp	w0, #0x1
  416314:	b.lt	41648c <main@@Base+0x217c>  // b.tstop
  416318:	cbnz	w8, 41648c <main@@Base+0x217c>
  41631c:	ldr	x8, [x24, #8]
  416320:	str	w0, [x8]
  416324:	b	4164bc <main@@Base+0x21ac>
  416328:	ldr	x0, [x24, #24]
  41632c:	bl	4178d4 <xstrdup@@Base>
  416330:	ldr	w9, [x24, #4]
  416334:	mov	x27, x0
  416338:	cmp	w9, #0x2
  41633c:	b.ne	41635c <main@@Base+0x204c>  // b.any
  416340:	ldr	x24, [x24, #8]
  416344:	ldr	x0, [x24]
  416348:	bl	406cb0 <free@plt>
  41634c:	mov	x0, x27
  416350:	bl	4178d4 <xstrdup@@Base>
  416354:	str	x0, [x24]
  416358:	b	4164bc <main@@Base+0x21ac>
  41635c:	ldr	x8, [x24, #8]
  416360:	ldr	x28, [x8]
  416364:	cbz	x28, 416394 <main@@Base+0x2084>
  416368:	ldp	w9, w8, [x28, #8]
  41636c:	sub	w10, w8, #0x1
  416370:	cmp	w9, w10
  416374:	b.ne	4163b8 <main@@Base+0x20a8>  // b.any
  416378:	ldr	x0, [x28]
  41637c:	add	w8, w8, #0x5
  416380:	lsl	x1, x8, #3
  416384:	str	w8, [x28, #12]
  416388:	bl	417854 <xrealloc@@Base>
  41638c:	str	x0, [x28]
  416390:	b	4163b8 <main@@Base+0x20a8>
  416394:	mov	w0, #0x10                  	// #16
  416398:	bl	417888 <xmalloc@@Base>
  41639c:	mov	x28, x0
  4163a0:	str	d8, [x0, #8]
  4163a4:	mov	w0, #0x28                  	// #40
  4163a8:	bl	417888 <xmalloc@@Base>
  4163ac:	str	x0, [x28]
  4163b0:	ldr	x8, [x24, #8]
  4163b4:	str	x28, [x8]
  4163b8:	ldr	w8, [x24, #4]
  4163bc:	mov	x0, x27
  4163c0:	cmp	w8, #0x4
  4163c4:	b.ne	4163d0 <main@@Base+0x20c0>  // b.any
  4163c8:	bl	417310 <die@@Base+0xa18>
  4163cc:	b	4163d4 <main@@Base+0x20c4>
  4163d0:	bl	4178d4 <xstrdup@@Base>
  4163d4:	ldr	w8, [x28, #8]
  4163d8:	ldr	x9, [x28]
  4163dc:	add	w10, w8, #0x1
  4163e0:	str	w10, [x28, #8]
  4163e4:	str	x0, [x9, w8, uxtw #3]
  4163e8:	ldr	x8, [x28]
  4163ec:	adrp	x28, 426000 <_IO_stdin_used@@Base+0x2290>
  4163f0:	add	x28, x28, #0xa80
  4163f4:	str	xzr, [x8, w10, uxtw #3]
  4163f8:	b	4164bc <main@@Base+0x21ac>
  4163fc:	ldr	x8, [x24, #24]
  416400:	ldr	d0, [x8]
  416404:	ldr	x8, [x24, #8]
  416408:	str	d0, [x8]
  41640c:	b	4164bc <main@@Base+0x21ac>
  416410:	ldr	x8, [x24, #24]
  416414:	ldr	x9, [x24, #8]
  416418:	ldr	w8, [x8]
  41641c:	str	w8, [x9]
  416420:	b	4164bc <main@@Base+0x21ac>
  416424:	ldr	x28, [x24, #40]
  416428:	mov	x0, x28
  41642c:	bl	406790 <strlen@plt>
  416430:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  416434:	mov	x27, x0
  416438:	mov	w2, #0x5                   	// #5
  41643c:	mov	x0, xzr
  416440:	add	x1, x1, #0x89f
  416444:	bl	406e10 <dcgettext@plt>
  416448:	ldr	w8, [x24]
  41644c:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  416450:	add	x9, x9, #0x616
  416454:	mov	x2, x0
  416458:	cmp	w8, #0x100
  41645c:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  416460:	add	x8, x8, #0x8d6
  416464:	csel	x3, x9, x8, lt  // lt = tstop
  416468:	mov	x0, xzr
  41646c:	mov	x1, x27
  416470:	mov	x4, x28
  416474:	bl	418744 <error@@Base>
  416478:	mov	w8, #0x1                   	// #1
  41647c:	adrp	x28, 426000 <_IO_stdin_used@@Base+0x2290>
  416480:	str	w8, [x29, #8]
  416484:	add	x28, x28, #0xa80
  416488:	b	4164bc <main@@Base+0x21ac>
  41648c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  416490:	mov	w2, #0x5                   	// #5
  416494:	mov	x0, xzr
  416498:	add	x1, x1, #0x8d9
  41649c:	bl	406e10 <dcgettext@plt>
  4164a0:	ldr	w3, [x24]
  4164a4:	mov	x2, x0
  4164a8:	mov	x0, xzr
  4164ac:	mov	x1, xzr
  4164b0:	bl	418744 <error@@Base>
  4164b4:	mov	w8, #0x1                   	// #1
  4164b8:	str	w8, [x29, #8]
  4164bc:	ldr	w8, [x26, #2504]
  4164c0:	cmp	w8, w21
  4164c4:	b.lt	41619c <main@@Base+0x1e8c>  // b.tstop
  4164c8:	b	4164fc <main@@Base+0x21ec>
  4164cc:	add	w9, w9, #0x1
  4164d0:	str	w9, [x26, #2504]
  4164d4:	cbnz	w8, 4162b0 <main@@Base+0x1fa0>
  4164d8:	b	4164bc <main@@Base+0x21ac>
  4164dc:	add	w9, w9, #0x1
  4164e0:	str	w9, [x26, #2504]
  4164e4:	cbnz	w8, 4162f4 <main@@Base+0x1fe4>
  4164e8:	b	4164bc <main@@Base+0x21ac>
  4164ec:	mov	w8, wzr
  4164f0:	mov	w22, wzr
  4164f4:	b	41651c <main@@Base+0x220c>
  4164f8:	ldr	w8, [x26, #2504]
  4164fc:	ldr	w22, [x29, #8]
  416500:	b	41651c <main@@Base+0x220c>
  416504:	add	w9, w8, #0x1
  416508:	str	w9, [x26, #2504]
  41650c:	ldr	x0, [x20, w8, sxtw #3]
  416510:	mov	w1, w19
  416514:	bl	417170 <die@@Base+0x878>
  416518:	ldr	w8, [x26, #2504]
  41651c:	cmp	w8, w21
  416520:	b.lt	416504 <main@@Base+0x21f4>  // b.tstop
  416524:	cbnz	w19, 416538 <main@@Base+0x2228>
  416528:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  41652c:	ldr	w8, [x8, #1432]
  416530:	orr	w8, w8, w22
  416534:	cbnz	w8, 416790 <main@@Base+0x2480>
  416538:	adrp	x20, 43c000 <stopchar_map@@Base+0x310>
  41653c:	ldr	w8, [x20, #1436]
  416540:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  416544:	cbz	w8, 416550 <main@@Base+0x2240>
  416548:	mov	w8, #0xfff                 	// #4095
  41654c:	str	w8, [x21, #3236]
  416550:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  416554:	ldr	x8, [x8, #1440]
  416558:	cbz	x8, 416628 <main@@Base+0x2318>
  41655c:	ldr	x22, [x8]
  416560:	ldr	x19, [x22]
  416564:	cbz	x19, 416628 <main@@Base+0x2318>
  416568:	bl	406920 <__ctype_tolower_loc@plt>
  41656c:	ldr	x8, [x0]
  416570:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  416574:	add	x9, x9, #0xa68
  416578:	mov	w10, #0x9                   	// #9
  41657c:	mov	w11, #0x101                 	// #257
  416580:	ldrb	w12, [x19]
  416584:	and	x12, x12, #0xff
  416588:	ldr	w13, [x8, x12, lsl #2]
  41658c:	sub	w12, w13, #0x61
  416590:	cmp	w12, #0xd
  416594:	b.hi	4165b8 <main@@Base+0x22a8>  // b.pmore
  416598:	adr	x13, 4165ac <main@@Base+0x229c>
  41659c:	ldrb	w14, [x9, x12]
  4165a0:	add	x13, x13, x14, lsl #2
  4165a4:	mov	w12, wzr
  4165a8:	br	x13
  4165ac:	ldr	w12, [x21, #3236]
  4165b0:	orr	w12, w12, #0xfff
  4165b4:	b	4165f8 <main@@Base+0x22e8>
  4165b8:	cmp	w13, #0x76
  4165bc:	b.ne	416758 <main@@Base+0x2448>  // b.any
  4165c0:	ldr	w12, [x21, #3236]
  4165c4:	orr	w12, w12, #0x3
  4165c8:	b	4165f8 <main@@Base+0x22e8>
  4165cc:	ldr	w12, [x21, #3236]
  4165d0:	orr	w12, w12, w10
  4165d4:	b	4165f8 <main@@Base+0x22e8>
  4165d8:	ldr	w12, [x21, #3236]
  4165dc:	orr	w12, w12, #0x1
  4165e0:	b	4165f8 <main@@Base+0x22e8>
  4165e4:	ldr	w12, [x21, #3236]
  4165e8:	orr	w12, w12, w11
  4165ec:	b	4165f8 <main@@Base+0x22e8>
  4165f0:	ldr	w12, [x21, #3236]
  4165f4:	orr	w12, w12, #0x4
  4165f8:	add	x19, x19, #0x1
  4165fc:	str	w12, [x21, #3236]
  416600:	ldrb	w12, [x19], #1
  416604:	cbz	w12, 416620 <main@@Base+0x2310>
  416608:	cmp	w12, #0x2c
  41660c:	b.eq	416618 <main@@Base+0x2308>  // b.none
  416610:	cmp	w12, #0x20
  416614:	b.ne	416600 <main@@Base+0x22f0>  // b.any
  416618:	ldrb	w12, [x19]
  41661c:	cbnz	w12, 416584 <main@@Base+0x2274>
  416620:	ldr	x19, [x22, #8]!
  416624:	cbnz	x19, 416580 <main@@Base+0x2270>
  416628:	ldr	w8, [x21, #3236]
  41662c:	cbz	w8, 416640 <main@@Base+0x2330>
  416630:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  416634:	mov	w9, #0x1                   	// #1
  416638:	str	w9, [x8, #4056]
  41663c:	b	416644 <main@@Base+0x2334>
  416640:	str	wzr, [x20, #1436]
  416644:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  416648:	ldr	x19, [x20, #3240]
  41664c:	cbz	x19, 416728 <main@@Base+0x2418>
  416650:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  416654:	add	x8, x8, #0x5c7
  416658:	cmp	x19, x8
  41665c:	b.eq	41670c <main@@Base+0x23fc>  // b.none
  416660:	ldrb	w21, [x19]
  416664:	cmp	w21, #0x6e
  416668:	b.ne	416680 <main@@Base+0x2370>  // b.any
  41666c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  416670:	add	x0, x19, #0x1
  416674:	add	x1, x1, #0x5c8
  416678:	bl	406c70 <strcmp@plt>
  41667c:	cbz	w0, 41670c <main@@Base+0x23fc>
  416680:	adrp	x8, 426000 <_IO_stdin_used@@Base+0x2290>
  416684:	add	x8, x8, #0x4b
  416688:	cmp	x19, x8
  41668c:	b.eq	416714 <main@@Base+0x2404>  // b.none
  416690:	cmp	w21, #0x6c
  416694:	b.ne	4166ac <main@@Base+0x239c>  // b.any
  416698:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  41669c:	add	x0, x19, #0x1
  4166a0:	add	x1, x1, #0x4c
  4166a4:	bl	406c70 <strcmp@plt>
  4166a8:	cbz	w0, 416714 <main@@Base+0x2404>
  4166ac:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  4166b0:	add	x8, x8, #0x7fb
  4166b4:	cmp	x19, x8
  4166b8:	b.eq	41671c <main@@Base+0x240c>  // b.none
  4166bc:	cmp	w21, #0x74
  4166c0:	b.ne	4166d8 <main@@Base+0x23c8>  // b.any
  4166c4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4166c8:	add	x0, x19, #0x1
  4166cc:	add	x1, x1, #0x7fc
  4166d0:	bl	406c70 <strcmp@plt>
  4166d4:	cbz	w0, 41671c <main@@Base+0x240c>
  4166d8:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  4166dc:	add	x8, x8, #0x5cc
  4166e0:	cmp	x19, x8
  4166e4:	b.eq	416704 <main@@Base+0x23f4>  // b.none
  4166e8:	cmp	w21, #0x72
  4166ec:	b.ne	4167a8 <main@@Base+0x2498>  // b.any
  4166f0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4166f4:	add	x0, x19, #0x1
  4166f8:	add	x1, x1, #0x5cd
  4166fc:	bl	406c70 <strcmp@plt>
  416700:	cbnz	w0, 4167a8 <main@@Base+0x2498>
  416704:	mov	w8, #0x3                   	// #3
  416708:	b	416720 <main@@Base+0x2410>
  41670c:	mov	w8, wzr
  416710:	b	416720 <main@@Base+0x2410>
  416714:	mov	w8, #0x1                   	// #1
  416718:	b	416720 <main@@Base+0x2410>
  41671c:	mov	w8, #0x2                   	// #2
  416720:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  416724:	str	w8, [x9, #3304]
  416728:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41672c:	ldr	w8, [x8, #3864]
  416730:	ldp	x20, x19, [sp, #96]
  416734:	ldp	x22, x21, [sp, #80]
  416738:	ldp	x24, x23, [sp, #64]
  41673c:	ldp	x26, x25, [sp, #48]
  416740:	ldp	x28, x27, [sp, #32]
  416744:	ldp	x29, x30, [sp, #16]
  416748:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41674c:	str	w8, [x9, #3232]
  416750:	ldr	d8, [sp], #112
  416754:	ret
  416758:	mov	x0, x19
  41675c:	bl	406790 <strlen@plt>
  416760:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  416764:	mov	x20, x0
  416768:	add	x1, x1, #0x5a0
  41676c:	mov	w2, #0x5                   	// #5
  416770:	mov	x0, xzr
  416774:	bl	406e10 <dcgettext@plt>
  416778:	mov	x2, x0
  41677c:	mov	x0, xzr
  416780:	mov	x1, x20
  416784:	mov	x3, x19
  416788:	bl	4188bc <fatal@@Base>
  41678c:	bl	406bd0 <abort@plt>
  416790:	cmp	w22, #0x0
  416794:	mov	w0, w22
  416798:	cset	w19, ne  // ne = any
  41679c:	bl	4173d8 <die@@Base+0xae0>
  4167a0:	lsl	w0, w19, #1
  4167a4:	bl	4168f8 <die@@Base>
  4167a8:	mov	x0, x19
  4167ac:	bl	406790 <strlen@plt>
  4167b0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4167b4:	mov	x19, x0
  4167b8:	add	x1, x1, #0x5d4
  4167bc:	mov	w2, #0x5                   	// #5
  4167c0:	mov	x0, xzr
  4167c4:	bl	406e10 <dcgettext@plt>
  4167c8:	ldr	x3, [x20, #3240]
  4167cc:	mov	x2, x0
  4167d0:	mov	x0, xzr
  4167d4:	mov	x1, x19
  4167d8:	bl	4188bc <fatal@@Base>
  4167dc:	stp	x29, x30, [sp, #-48]!
  4167e0:	stp	x20, x19, [sp, #32]
  4167e4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4167e8:	ldr	w8, [x8, #3256]
  4167ec:	adrp	x20, 43c000 <stopchar_map@@Base+0x310>
  4167f0:	ldrb	w9, [x20, #1448]
  4167f4:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x5290>
  4167f8:	adrp	x11, 426000 <_IO_stdin_used@@Base+0x2290>
  4167fc:	add	x10, x10, #0xd00
  416800:	add	x11, x11, #0x5eb
  416804:	cmp	w8, #0x0
  416808:	csel	x19, x11, x10, eq  // eq = none
  41680c:	str	x21, [sp, #16]
  416810:	mov	x29, sp
  416814:	tbz	w9, #0, 416828 <main@@Base+0x2518>
  416818:	ldp	x20, x19, [sp, #32]
  41681c:	ldr	x21, [sp, #16]
  416820:	ldp	x29, x30, [sp], #48
  416824:	ret
  416828:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41682c:	ldr	x2, [x8, #2448]
  416830:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  416834:	add	x0, x0, #0x636
  416838:	mov	x1, x19
  41683c:	bl	406ea0 <printf@plt>
  416840:	adrp	x21, 43e000 <stdio_traced@@Base+0x1a38>
  416844:	ldr	x8, [x21, #4024]
  416848:	cbz	x8, 416880 <main@@Base+0x2570>
  41684c:	ldrb	w8, [x8]
  416850:	cbz	w8, 416880 <main@@Base+0x2570>
  416854:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  416858:	add	x1, x1, #0x655
  41685c:	mov	w2, #0x5                   	// #5
  416860:	mov	x0, xzr
  416864:	bl	406e10 <dcgettext@plt>
  416868:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41686c:	ldr	x2, [x8, #2456]
  416870:	ldr	x3, [x21, #4024]
  416874:	mov	x1, x19
  416878:	bl	406ea0 <printf@plt>
  41687c:	b	4168a4 <main@@Base+0x2594>
  416880:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  416884:	add	x1, x1, #0x645
  416888:	mov	w2, #0x5                   	// #5
  41688c:	mov	x0, xzr
  416890:	bl	406e10 <dcgettext@plt>
  416894:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  416898:	ldr	x2, [x8, #2456]
  41689c:	mov	x1, x19
  4168a0:	bl	406ea0 <printf@plt>
  4168a4:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  4168a8:	add	x0, x0, #0x66a
  4168ac:	mov	x1, x19
  4168b0:	bl	406ea0 <printf@plt>
  4168b4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4168b8:	add	x1, x1, #0x6a4
  4168bc:	mov	w2, #0x5                   	// #5
  4168c0:	mov	x0, xzr
  4168c4:	bl	406e10 <dcgettext@plt>
  4168c8:	mov	x1, x19
  4168cc:	mov	x2, x19
  4168d0:	mov	x3, x19
  4168d4:	bl	406ea0 <printf@plt>
  4168d8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4168dc:	ldr	x0, [x8, #2512]
  4168e0:	mov	w8, #0x1                   	// #1
  4168e4:	strb	w8, [x20, #1448]
  4168e8:	ldp	x20, x19, [sp, #32]
  4168ec:	ldr	x21, [sp, #16]
  4168f0:	ldp	x29, x30, [sp], #48
  4168f4:	b	406d40 <fflush@plt>

00000000004168f8 <die@@Base>:
  4168f8:	stp	x29, x30, [sp, #-48]!
  4168fc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  416900:	ldrb	w9, [x8, #3936]
  416904:	stp	x20, x19, [sp, #32]
  416908:	mov	w19, w0
  41690c:	str	x21, [sp, #16]
  416910:	mov	x29, sp
  416914:	tbnz	w9, #0, 4169d8 <die@@Base+0xe0>
  416918:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41691c:	ldr	w9, [x9, #3284]
  416920:	mov	w10, #0x1                   	// #1
  416924:	strb	w10, [x8, #3936]
  416928:	cbz	w9, 416930 <die@@Base+0x38>
  41692c:	bl	4167dc <main@@Base+0x24cc>
  416930:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  416934:	ldr	w8, [x21, #3056]
  416938:	cmp	w19, #0x0
  41693c:	cset	w20, ne  // ne = any
  416940:	cbz	w8, 416958 <die@@Base+0x60>
  416944:	mov	w0, #0x1                   	// #1
  416948:	mov	w1, w20
  41694c:	bl	411388 <reap_children@@Base>
  416950:	ldr	w8, [x21, #3056]
  416954:	cbnz	w8, 416944 <die@@Base+0x4c>
  416958:	bl	42365c <remote_cleanup@@Base>
  41695c:	mov	w0, wzr
  416960:	bl	40aad8 <remove_intermediates@@Base>
  416964:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  416968:	ldr	w8, [x8, #3256]
  41696c:	cbz	w8, 416974 <die@@Base+0x7c>
  416970:	bl	417010 <die@@Base+0x718>
  416974:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  416978:	ldr	w8, [x8, #4056]
  41697c:	cbz	w8, 416984 <die@@Base+0x8c>
  416980:	bl	40bd80 <verify_file_data_base@@Base>
  416984:	mov	w0, w19
  416988:	bl	4170bc <die@@Base+0x7c4>
  41698c:	adrp	x20, 43c000 <stopchar_map@@Base+0x310>
  416990:	ldr	x0, [x20, #1472]
  416994:	cbz	x0, 4169c0 <die@@Base+0xc8>
  416998:	bl	418308 <output_close@@Base>
  41699c:	ldr	x8, [x20, #1472]
  4169a0:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  4169a4:	add	x9, x9, #0x48
  4169a8:	cmp	x8, x9
  4169ac:	b.eq	4169bc <die@@Base+0xc4>  // b.none
  4169b0:	adrp	x0, 43f000 <shell_var@@Base+0x20>
  4169b4:	add	x0, x0, #0x48
  4169b8:	bl	418308 <output_close@@Base>
  4169bc:	str	xzr, [x20, #1472]
  4169c0:	mov	x0, xzr
  4169c4:	bl	418308 <output_close@@Base>
  4169c8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4169cc:	ldr	x0, [x8, #4048]
  4169d0:	cbz	x0, 4169d8 <die@@Base+0xe0>
  4169d4:	bl	406ca0 <chdir@plt>
  4169d8:	mov	w0, w19
  4169dc:	bl	4067b0 <exit@plt>
  4169e0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4169e4:	ldr	w9, [x8, #3236]
  4169e8:	cmp	w9, #0x0
  4169ec:	cset	w9, eq  // eq = none
  4169f0:	str	w9, [x8, #3236]
  4169f4:	ret
  4169f8:	stp	x29, x30, [sp, #-96]!
  4169fc:	stp	x28, x27, [sp, #16]
  416a00:	stp	x26, x25, [sp, #32]
  416a04:	stp	x24, x23, [sp, #48]
  416a08:	stp	x22, x21, [sp, #64]
  416a0c:	stp	x20, x19, [sp, #80]
  416a10:	mov	x29, sp
  416a14:	sub	sp, sp, #0x30
  416a18:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  416a1c:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  416a20:	add	x8, x8, #0x5f2
  416a24:	add	x9, x9, #0x600
  416a28:	ldr	x10, [x8]
  416a2c:	ldur	x8, [x8, #6]
  416a30:	ldr	q0, [x9]
  416a34:	ldr	x9, [x9, #16]
  416a38:	adrp	x26, 426000 <_IO_stdin_used@@Base+0x2290>
  416a3c:	mov	w20, w1
  416a40:	mov	w19, w0
  416a44:	mov	x24, xzr
  416a48:	mov	x22, xzr
  416a4c:	mov	x25, xzr
  416a50:	add	x26, x26, #0xa80
  416a54:	mov	w23, #0x62                  	// #98
  416a58:	stur	x10, [x29, #-16]
  416a5c:	stur	x8, [x29, #-10]
  416a60:	stur	q0, [x29, #-48]
  416a64:	stur	x9, [x29, #-32]
  416a68:	ldrb	w8, [x26, #16]
  416a6c:	tbz	w8, #1, 416a78 <die@@Base+0x180>
  416a70:	cbz	w20, 416a84 <die@@Base+0x18c>
  416a74:	tbz	w8, #2, 416a84 <die@@Base+0x18c>
  416a78:	ldr	w23, [x26, #48]!
  416a7c:	cbnz	w23, 416a68 <die@@Base+0x170>
  416a80:	b	416d44 <die@@Base+0x44c>
  416a84:	ldr	w8, [x26, #4]
  416a88:	cmp	w8, #0x7
  416a8c:	b.hi	41700c <die@@Base+0x714>  // b.pmore
  416a90:	adrp	x11, 426000 <_IO_stdin_used@@Base+0x2290>
  416a94:	add	x11, x11, #0xa76
  416a98:	adr	x9, 416a78 <die@@Base+0x180>
  416a9c:	ldrb	w10, [x11, x8]
  416aa0:	add	x9, x9, x10, lsl #2
  416aa4:	br	x9
  416aa8:	ldr	x9, [x26, #8]
  416aac:	ldr	w9, [x9]
  416ab0:	cmp	w9, #0x0
  416ab4:	cset	w10, ne  // ne = any
  416ab8:	cmp	w8, #0x1
  416abc:	cset	w8, eq  // eq = none
  416ac0:	cmp	w8, w10
  416ac4:	b.eq	416a78 <die@@Base+0x180>  // b.none
  416ac8:	ldr	x8, [x26, #32]
  416acc:	cbz	x8, 416adc <die@@Base+0x1e4>
  416ad0:	ldr	w8, [x8]
  416ad4:	cmp	w9, w8
  416ad8:	b.eq	416a78 <die@@Base+0x180>  // b.none
  416adc:	mov	x8, sp
  416ae0:	sub	x21, x8, #0x20
  416ae4:	mov	sp, x21
  416ae8:	stur	xzr, [x8, #-16]
  416aec:	b	416c94 <die@@Base+0x39c>
  416af0:	cbz	w19, 416a78 <die@@Base+0x180>
  416af4:	ldr	x8, [x26, #8]
  416af8:	ldr	x8, [x8]
  416afc:	cbz	x8, 416a78 <die@@Base+0x180>
  416b00:	ldr	w28, [x8, #8]
  416b04:	cbz	w28, 416a78 <die@@Base+0x180>
  416b08:	ldr	x27, [x8]
  416b0c:	mov	x21, xzr
  416b10:	mov	x8, x24
  416b14:	mov	x9, x22
  416b18:	mov	x11, sp
  416b1c:	sub	x22, x11, #0x20
  416b20:	mov	sp, x22
  416b24:	stur	x26, [x11, #-24]
  416b28:	ldr	x10, [x27]
  416b2c:	mov	x24, x22
  416b30:	stur	xzr, [x11, #-32]
  416b34:	stur	x10, [x11, #-16]
  416b38:	cbz	x8, 416b44 <die@@Base+0x24c>
  416b3c:	mov	x24, x8
  416b40:	str	x22, [x9]
  416b44:	cbz	x10, 416b60 <die@@Base+0x268>
  416b48:	ldr	x0, [x27]
  416b4c:	bl	406790 <strlen@plt>
  416b50:	add	x8, x0, x0, lsl #1
  416b54:	add	x8, x25, x8
  416b58:	add	x25, x8, #0x3
  416b5c:	b	416b64 <die@@Base+0x26c>
  416b60:	add	x25, x25, #0x3
  416b64:	cmp	w23, #0x100
  416b68:	b.lt	416b7c <die@@Base+0x284>  // b.tstop
  416b6c:	ldr	x0, [x26, #40]
  416b70:	bl	406790 <strlen@plt>
  416b74:	add	x8, x25, x0
  416b78:	add	x25, x8, #0x2
  416b7c:	add	x21, x21, #0x1
  416b80:	cmp	x21, x28
  416b84:	add	x27, x27, #0x8
  416b88:	mov	x8, x24
  416b8c:	mov	x9, x22
  416b90:	b.cc	416b18 <die@@Base+0x220>  // b.lo, b.ul, b.last
  416b94:	b	416a78 <die@@Base+0x180>
  416b98:	cbz	w19, 416a78 <die@@Base+0x180>
  416b9c:	ldr	x8, [x26, #8]
  416ba0:	ldr	x0, [x8]
  416ba4:	cbz	x0, 416a78 <die@@Base+0x180>
  416ba8:	mov	x8, sp
  416bac:	sub	x21, x8, #0x20
  416bb0:	mov	sp, x21
  416bb4:	mov	x27, x21
  416bb8:	stp	x26, x0, [x8, #-24]
  416bbc:	stur	xzr, [x8, #-32]
  416bc0:	cbz	x24, 416bcc <die@@Base+0x2d4>
  416bc4:	mov	x27, x24
  416bc8:	str	x21, [x22]
  416bcc:	bl	406790 <strlen@plt>
  416bd0:	add	x8, x0, x0, lsl #1
  416bd4:	add	x8, x25, x8
  416bd8:	cmp	w23, #0x100
  416bdc:	add	x25, x8, #0x3
  416be0:	b.ge	416d28 <die@@Base+0x430>  // b.tcont
  416be4:	b	416d38 <die@@Base+0x440>
  416be8:	cbz	w19, 416a78 <die@@Base+0x180>
  416bec:	ldr	x8, [x26, #32]
  416bf0:	cbz	x8, 416c08 <die@@Base+0x310>
  416bf4:	ldr	x9, [x26, #8]
  416bf8:	ldr	d1, [x8]
  416bfc:	ldr	d0, [x9]
  416c00:	fcmp	d0, d1
  416c04:	b.eq	416a78 <die@@Base+0x180>  // b.none
  416c08:	ldr	x9, [x26, #8]
  416c0c:	ldr	x8, [x26, #24]
  416c10:	ldr	d0, [x9]
  416c14:	cbz	x8, 416c24 <die@@Base+0x32c>
  416c18:	ldr	d1, [x8]
  416c1c:	fcmp	d0, d1
  416c20:	b.eq	416c7c <die@@Base+0x384>  // b.none
  416c24:	sub	x23, sp, #0x70
  416c28:	mov	sp, x23
  416c2c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  416c30:	mov	x0, x23
  416c34:	add	x1, x1, #0x62c
  416c38:	bl	406830 <sprintf@plt>
  416c3c:	b	416ce4 <die@@Base+0x3ec>
  416c40:	cbz	w19, 416a78 <die@@Base+0x180>
  416c44:	ldr	x8, [x26, #32]
  416c48:	cbz	x8, 416c60 <die@@Base+0x368>
  416c4c:	ldr	x9, [x26, #8]
  416c50:	ldr	w8, [x8]
  416c54:	ldr	w9, [x9]
  416c58:	cmp	w9, w8
  416c5c:	b.eq	416a78 <die@@Base+0x180>  // b.none
  416c60:	ldr	x9, [x26, #8]
  416c64:	ldr	x8, [x26, #24]
  416c68:	ldr	w2, [x9]
  416c6c:	cbz	x8, 416ccc <die@@Base+0x3d4>
  416c70:	ldr	w8, [x8]
  416c74:	cmp	w2, w8
  416c78:	b.ne	416ccc <die@@Base+0x3d4>  // b.any
  416c7c:	mov	x8, sp
  416c80:	sub	x21, x8, #0x20
  416c84:	mov	sp, x21
  416c88:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  416c8c:	add	x9, x9, #0x5eb
  416c90:	stur	x9, [x8, #-16]
  416c94:	mov	x27, x21
  416c98:	stp	xzr, x26, [x8, #-32]
  416c9c:	cbz	x24, 416ca8 <die@@Base+0x3b0>
  416ca0:	mov	x27, x24
  416ca4:	str	x21, [x22]
  416ca8:	cmp	w23, #0x100
  416cac:	b.ge	416cb8 <die@@Base+0x3c0>  // b.tcont
  416cb0:	add	x25, x25, #0x3
  416cb4:	b	416d38 <die@@Base+0x440>
  416cb8:	ldr	x0, [x26, #40]
  416cbc:	bl	406790 <strlen@plt>
  416cc0:	add	x8, x25, x0
  416cc4:	add	x25, x8, #0x5
  416cc8:	b	416d38 <die@@Base+0x440>
  416ccc:	sub	x23, sp, #0x20
  416cd0:	mov	sp, x23
  416cd4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  416cd8:	mov	x0, x23
  416cdc:	add	x1, x1, #0x7e6
  416ce0:	bl	406830 <sprintf@plt>
  416ce4:	mov	x8, sp
  416ce8:	sub	x21, x8, #0x20
  416cec:	mov	sp, x21
  416cf0:	mov	x27, x21
  416cf4:	stp	x26, x23, [x8, #-24]
  416cf8:	stur	xzr, [x8, #-32]
  416cfc:	cbz	x24, 416d08 <die@@Base+0x410>
  416d00:	mov	x27, x24
  416d04:	str	x21, [x22]
  416d08:	mov	x0, x23
  416d0c:	bl	406790 <strlen@plt>
  416d10:	ldr	w8, [x26]
  416d14:	add	x9, x0, x0, lsl #1
  416d18:	add	x9, x25, x9
  416d1c:	add	x25, x9, #0x3
  416d20:	cmp	w8, #0x100
  416d24:	b.lt	416d38 <die@@Base+0x440>  // b.tstop
  416d28:	ldr	x0, [x26, #40]
  416d2c:	bl	406790 <strlen@plt>
  416d30:	add	x8, x25, x0
  416d34:	add	x25, x8, #0x2
  416d38:	mov	x22, x21
  416d3c:	mov	x24, x27
  416d40:	b	416a78 <die@@Base+0x180>
  416d44:	add	x9, x25, #0x47
  416d48:	mov	x8, sp
  416d4c:	and	x9, x9, #0xfffffffffffffff0
  416d50:	sub	x20, x8, x9
  416d54:	add	x2, x25, #0x38
  416d58:	mov	sp, x20
  416d5c:	mov	x0, x20
  416d60:	mov	w1, wzr
  416d64:	bl	406a70 <memset@plt>
  416d68:	mov	w8, #0x2d                  	// #45
  416d6c:	mov	x23, x20
  416d70:	strb	w8, [x23], #1
  416d74:	cbz	x24, 416e8c <die@@Base+0x594>
  416d78:	mov	w8, #0x1                   	// #1
  416d7c:	ldr	x9, [x24, #16]
  416d80:	cbnz	x9, 416dac <die@@Base+0x4b4>
  416d84:	ldr	x9, [x24, #8]
  416d88:	ldr	w9, [x9]
  416d8c:	cmp	w9, #0xff
  416d90:	b.gt	416dac <die@@Base+0x4b4>
  416d94:	strb	w9, [x20, x8]
  416d98:	ldr	x24, [x24]
  416d9c:	add	x9, x8, #0x1
  416da0:	mov	x8, x9
  416da4:	cbnz	x24, 416d7c <die@@Base+0x484>
  416da8:	b	416e90 <die@@Base+0x598>
  416dac:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  416db0:	add	x22, x20, x8
  416db4:	mov	w21, #0x2d20                	// #11552
  416db8:	add	x25, x25, #0xcf0
  416dbc:	mov	w26, #0x3d                  	// #61
  416dc0:	mov	w27, #0x2d                  	// #45
  416dc4:	strh	w21, [x22]
  416dc8:	ldr	x9, [x24, #8]
  416dcc:	ldr	w9, [x9]
  416dd0:	cmp	w9, #0xff
  416dd4:	b.gt	416de4 <die@@Base+0x4ec>
  416dd8:	add	x8, x8, #0x3
  416ddc:	strb	w9, [x22, #2]
  416de0:	b	416e04 <die@@Base+0x50c>
  416de4:	strb	w27, [x22, #2]
  416de8:	ldr	x9, [x24, #8]
  416dec:	add	x22, x8, #0x3
  416df0:	add	x0, x20, x22
  416df4:	ldr	x1, [x9, #40]
  416df8:	bl	406d50 <strcpy@plt>
  416dfc:	bl	406790 <strlen@plt>
  416e00:	add	x8, x0, x22
  416e04:	ldr	x9, [x24, #16]
  416e08:	cbz	x9, 416e7c <die@@Base+0x584>
  416e0c:	ldrb	w10, [x9]
  416e10:	cbz	w10, 416e7c <die@@Base+0x584>
  416e14:	ldr	x10, [x24, #8]
  416e18:	ldr	w10, [x10]
  416e1c:	cmp	w10, #0x100
  416e20:	b.lt	416e6c <die@@Base+0x574>  // b.tstop
  416e24:	strb	w26, [x20, x8]
  416e28:	ldr	x9, [x24, #16]
  416e2c:	add	x8, x8, #0x1
  416e30:	b	416e6c <die@@Base+0x574>
  416e34:	cmp	w10, #0x5c
  416e38:	mov	w11, #0x5c                  	// #92
  416e3c:	b.eq	416e50 <die@@Base+0x558>  // b.none
  416e40:	ldrh	w10, [x25, x10, lsl #1]
  416e44:	tbz	w10, #1, 416e5c <die@@Base+0x564>
  416e48:	b	416e50 <die@@Base+0x558>
  416e4c:	mov	w11, w10
  416e50:	add	x10, x8, #0x1
  416e54:	strb	w11, [x20, x8]
  416e58:	mov	x8, x10
  416e5c:	ldrb	w10, [x9], #1
  416e60:	add	x11, x8, #0x1
  416e64:	strb	w10, [x20, x8]
  416e68:	mov	x8, x11
  416e6c:	ldrb	w10, [x9]
  416e70:	cmp	w10, #0x24
  416e74:	b.eq	416e4c <die@@Base+0x554>  // b.none
  416e78:	cbnz	w10, 416e34 <die@@Base+0x53c>
  416e7c:	ldr	x24, [x24]
  416e80:	add	x22, x20, x8
  416e84:	cbnz	x24, 416dc4 <die@@Base+0x4cc>
  416e88:	b	416e98 <die@@Base+0x5a0>
  416e8c:	mov	w9, #0x1                   	// #1
  416e90:	add	x22, x20, x9
  416e94:	mov	x8, x9
  416e98:	cmp	x8, #0x1
  416e9c:	b.ne	416eb0 <die@@Base+0x5b8>  // b.any
  416ea0:	mov	x8, xzr
  416ea4:	strb	wzr, [x20]
  416ea8:	mov	x22, x20
  416eac:	b	416ed4 <die@@Base+0x5dc>
  416eb0:	ldrb	w8, [x20]
  416eb4:	cmp	w8, #0x2d
  416eb8:	b.ne	416ed0 <die@@Base+0x5d8>  // b.any
  416ebc:	ldrb	w8, [x23]
  416ec0:	cmp	w8, #0x20
  416ec4:	cset	w8, eq  // eq = none
  416ec8:	lsl	x8, x8, #1
  416ecc:	b	416ed4 <die@@Base+0x5dc>
  416ed0:	mov	x8, xzr
  416ed4:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  416ed8:	ldr	x9, [x24, #2440]
  416edc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  416ee0:	add	x2, x20, x8
  416ee4:	add	x0, x0, #0x62f
  416ee8:	ldr	x5, [x9, #8]
  416eec:	mov	w1, #0x6                   	// #6
  416ef0:	mov	w3, #0x1                   	// #1
  416ef4:	mov	w4, #0x1                   	// #1
  416ef8:	mov	x6, xzr
  416efc:	bl	420860 <define_variable_in_set@@Base>
  416f00:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  416f04:	ldr	x8, [x8, #3888]
  416f08:	cbz	x8, 416f34 <die@@Base+0x63c>
  416f0c:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  416f10:	add	x9, x9, #0x618
  416f14:	ldr	q0, [x9]
  416f18:	mov	w9, #0x2a2d                	// #10797
  416f1c:	mov	w8, #0x20                  	// #32
  416f20:	movk	w9, #0x292d, lsl #16
  416f24:	strb	w8, [x22]
  416f28:	str	w9, [x22, #16]
  416f2c:	stur	q0, [x22, #1]
  416f30:	add	x22, x22, #0x14
  416f34:	cbz	w19, 416fac <die@@Base+0x6b4>
  416f38:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  416f3c:	ldr	w8, [x8, #32]
  416f40:	sub	x9, x29, #0x30
  416f44:	cmp	w8, #0x0
  416f48:	sub	x8, x29, #0x10
  416f4c:	csel	x19, x8, x9, eq  // eq = none
  416f50:	mov	x0, x19
  416f54:	bl	406790 <strlen@plt>
  416f58:	mov	x21, x0
  416f5c:	mov	x0, x19
  416f60:	mov	x1, x21
  416f64:	bl	420c00 <lookup_variable@@Base>
  416f68:	cbz	x0, 416fac <die@@Base+0x6b4>
  416f6c:	ldr	x8, [x0, #8]
  416f70:	cbz	x8, 416fac <die@@Base+0x6b4>
  416f74:	ldrb	w8, [x8]
  416f78:	cbz	w8, 416fac <die@@Base+0x6b4>
  416f7c:	mov	w8, #0x2d20                	// #11552
  416f80:	movk	w8, #0x202d, lsl #16
  416f84:	mov	w9, #0x2824                	// #10276
  416f88:	str	w8, [x22]
  416f8c:	strh	w9, [x22, #4]
  416f90:	add	x22, x22, #0x6
  416f94:	mov	x0, x22
  416f98:	mov	x1, x19
  416f9c:	mov	x2, x21
  416fa0:	bl	406750 <memcpy@plt>
  416fa4:	mov	w8, #0x29                  	// #41
  416fa8:	strb	w8, [x22, x21]
  416fac:	ldr	x9, [x24, #2440]
  416fb0:	ldrb	w8, [x20]
  416fb4:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  416fb8:	ldr	w10, [x10, #3248]
  416fbc:	ldr	x5, [x9, #8]
  416fc0:	cmp	w8, #0x2d
  416fc4:	csel	x2, x23, x20, eq  // eq = none
  416fc8:	cmp	w10, #0x0
  416fcc:	mov	w8, #0x2                   	// #2
  416fd0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  416fd4:	cinc	w3, w8, ne  // ne = any
  416fd8:	add	x0, x0, #0xe58
  416fdc:	mov	w1, #0x9                   	// #9
  416fe0:	mov	w4, #0x1                   	// #1
  416fe4:	mov	x6, xzr
  416fe8:	bl	420860 <define_variable_in_set@@Base>
  416fec:	mov	sp, x29
  416ff0:	ldp	x20, x19, [sp, #80]
  416ff4:	ldp	x22, x21, [sp, #64]
  416ff8:	ldp	x24, x23, [sp, #48]
  416ffc:	ldp	x26, x25, [sp, #32]
  417000:	ldp	x28, x27, [sp, #16]
  417004:	ldp	x29, x30, [sp], #96
  417008:	ret
  41700c:	bl	406bd0 <abort@plt>
  417010:	stp	x29, x30, [sp, #-32]!
  417014:	mov	x0, xzr
  417018:	str	x19, [sp, #16]
  41701c:	mov	x29, sp
  417020:	bl	4069c0 <time@plt>
  417024:	str	x0, [x29, #24]
  417028:	bl	4167dc <main@@Base+0x24cc>
  41702c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  417030:	add	x1, x1, #0x772
  417034:	mov	w2, #0x5                   	// #5
  417038:	mov	x0, xzr
  41703c:	bl	406e10 <dcgettext@plt>
  417040:	mov	x19, x0
  417044:	add	x0, x29, #0x18
  417048:	bl	4068c0 <ctime@plt>
  41704c:	mov	x1, x0
  417050:	mov	x0, x19
  417054:	bl	406ea0 <printf@plt>
  417058:	bl	42219c <print_variable_data_base@@Base>
  41705c:	bl	40945c <print_dir_data_base@@Base>
  417060:	bl	41feb8 <print_rule_data_base@@Base>
  417064:	bl	40b950 <print_file_data_base@@Base>
  417068:	bl	422d50 <print_vpath_data_base@@Base>
  41706c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  417070:	add	x0, x0, #0x793
  417074:	bl	4204b4 <strcache_print_stats@@Base>
  417078:	mov	x0, xzr
  41707c:	bl	4069c0 <time@plt>
  417080:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  417084:	str	x0, [x29, #24]
  417088:	add	x1, x1, #0x795
  41708c:	mov	w2, #0x5                   	// #5
  417090:	mov	x0, xzr
  417094:	bl	406e10 <dcgettext@plt>
  417098:	mov	x19, x0
  41709c:	add	x0, x29, #0x18
  4170a0:	bl	4068c0 <ctime@plt>
  4170a4:	mov	x1, x0
  4170a8:	mov	x0, x19
  4170ac:	bl	406ea0 <printf@plt>
  4170b0:	ldr	x19, [sp, #16]
  4170b4:	ldp	x29, x30, [sp], #32
  4170b8:	ret
  4170bc:	stp	x29, x30, [sp, #-32]!
  4170c0:	stp	x20, x19, [sp, #16]
  4170c4:	mov	x29, sp
  4170c8:	mov	w19, w0
  4170cc:	bl	423230 <jobserver_enabled@@Base>
  4170d0:	cbz	w0, 41711c <die@@Base+0x824>
  4170d4:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4170d8:	ldr	w3, [x20, #3072]
  4170dc:	cbz	w3, 41711c <die@@Base+0x824>
  4170e0:	cmp	w19, #0x2
  4170e4:	b.ne	417108 <die@@Base+0x810>  // b.any
  4170e8:	subs	w8, w3, #0x1
  4170ec:	str	w8, [x20, #3072]
  4170f0:	b.eq	41711c <die@@Base+0x824>  // b.none
  4170f4:	mov	w0, wzr
  4170f8:	bl	423284 <jobserver_release@@Base>
  4170fc:	ldr	w8, [x20, #3072]
  417100:	subs	w8, w8, #0x1
  417104:	b	4170ec <die@@Base+0x7f4>
  417108:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x4290>
  41710c:	add	x2, x2, #0x7b7
  417110:	mov	w1, #0x14                  	// #20
  417114:	mov	x0, xzr
  417118:	bl	418744 <error@@Base>
  41711c:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  417120:	ldr	w8, [x19, #3896]
  417124:	cbz	w8, 417164 <die@@Base+0x86c>
  417128:	bl	423324 <jobserver_acquire_all@@Base>
  41712c:	ldr	w4, [x19, #3896]
  417130:	add	w3, w0, #0x1
  417134:	cmp	w3, w4
  417138:	b.eq	417150 <die@@Base+0x858>  // b.none
  41713c:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x4290>
  417140:	add	x2, x2, #0x7f1
  417144:	mov	w1, #0x28                  	// #40
  417148:	mov	x0, xzr
  41714c:	bl	418744 <error@@Base>
  417150:	bl	423244 <jobserver_clear@@Base>
  417154:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  417158:	ldr	x0, [x19, #3840]
  41715c:	bl	406cb0 <free@plt>
  417160:	str	xzr, [x19, #3840]
  417164:	ldp	x20, x19, [sp, #16]
  417168:	ldp	x29, x30, [sp], #32
  41716c:	ret
  417170:	stp	x29, x30, [sp, #-64]!
  417174:	stp	x24, x23, [sp, #16]
  417178:	stp	x22, x21, [sp, #32]
  41717c:	stp	x20, x19, [sp, #48]
  417180:	ldrb	w8, [x0]
  417184:	mov	x20, x0
  417188:	mov	w21, w1
  41718c:	mov	x29, sp
  417190:	cmp	w8, #0x2d
  417194:	b.ne	4171a0 <die@@Base+0x8a8>  // b.any
  417198:	ldrb	w8, [x20, #1]
  41719c:	cbz	w8, 4172f8 <die@@Base+0xa00>
  4171a0:	mov	w2, #0x4                   	// #4
  4171a4:	mov	x0, xzr
  4171a8:	mov	x1, x20
  4171ac:	mov	w3, wzr
  4171b0:	bl	422100 <try_variable_definition@@Base>
  4171b4:	cbz	x0, 4171f4 <die@@Base+0x8fc>
  4171b8:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4171bc:	ldr	x8, [x20, #3848]
  4171c0:	mov	x19, x0
  4171c4:	cbz	x8, 4171dc <die@@Base+0x8e4>
  4171c8:	ldr	x9, [x8, #8]
  4171cc:	cmp	x9, x19
  4171d0:	b.eq	4172f8 <die@@Base+0xa00>  // b.none
  4171d4:	ldr	x8, [x8]
  4171d8:	cbnz	x8, 4171c8 <die@@Base+0x8d0>
  4171dc:	mov	w0, #0x10                  	// #16
  4171e0:	bl	417888 <xmalloc@@Base>
  4171e4:	ldr	x8, [x20, #3848]
  4171e8:	stp	x8, x19, [x0]
  4171ec:	str	x0, [x20, #3848]
  4171f0:	b	4172f8 <die@@Base+0xa00>
  4171f4:	cbnz	w21, 4172f8 <die@@Base+0xa00>
  4171f8:	mov	x0, x20
  4171fc:	bl	417310 <die@@Base+0xa18>
  417200:	bl	42016c <strcache_add@@Base>
  417204:	bl	40a5f4 <enter_file@@Base>
  417208:	ldr	w8, [x0, #136]
  41720c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  417210:	mov	x19, x0
  417214:	orr	w8, w8, #0x1000
  417218:	str	w8, [x0, #136]
  41721c:	ldr	x21, [x20, #3920]
  417220:	mov	w0, #0x40                  	// #64
  417224:	bl	4178ac <xcalloc@@Base>
  417228:	cbz	x21, 41723c <die@@Base+0x944>
  41722c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417230:	ldr	x9, [x8, #3928]
  417234:	str	x0, [x9]
  417238:	b	417244 <die@@Base+0x94c>
  41723c:	str	x0, [x20, #3920]
  417240:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417244:	str	x0, [x8, #3928]
  417248:	str	x19, [x0, #16]
  41724c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  417250:	add	x0, x0, #0x950
  417254:	mov	w1, #0xc                   	// #12
  417258:	bl	420c00 <lookup_variable@@Base>
  41725c:	cbz	x0, 4172c8 <die@@Base+0x9d0>
  417260:	ldr	x21, [x0, #8]
  417264:	mov	x0, x21
  417268:	bl	406790 <strlen@plt>
  41726c:	ldr	x8, [x19]
  417270:	mov	x22, x0
  417274:	mov	x0, x8
  417278:	bl	406790 <strlen@plt>
  41727c:	add	x24, x22, #0x1
  417280:	add	x23, x0, #0x1
  417284:	add	x8, x23, x24
  417288:	add	x8, x8, #0xf
  41728c:	and	x8, x8, #0xfffffffffffffff0
  417290:	mov	x9, sp
  417294:	sub	x20, x9, x8
  417298:	mov	sp, x20
  41729c:	mov	x0, x20
  4172a0:	mov	x1, x21
  4172a4:	mov	x2, x22
  4172a8:	bl	406750 <memcpy@plt>
  4172ac:	mov	w8, #0x20                  	// #32
  4172b0:	strb	w8, [x20, x22]
  4172b4:	ldr	x1, [x19]
  4172b8:	add	x0, x20, x24
  4172bc:	mov	x2, x23
  4172c0:	bl	406750 <memcpy@plt>
  4172c4:	b	4172cc <die@@Base+0x9d4>
  4172c8:	ldr	x20, [x19]
  4172cc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4172d0:	ldr	x8, [x8, #2440]
  4172d4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4172d8:	add	x0, x0, #0x950
  4172dc:	mov	w1, #0xc                   	// #12
  4172e0:	ldr	x5, [x8, #8]
  4172e4:	mov	x2, x20
  4172e8:	mov	w3, wzr
  4172ec:	mov	w4, wzr
  4172f0:	mov	x6, xzr
  4172f4:	bl	420860 <define_variable_in_set@@Base>
  4172f8:	mov	sp, x29
  4172fc:	ldp	x20, x19, [sp, #48]
  417300:	ldp	x22, x21, [sp, #32]
  417304:	ldp	x24, x23, [sp, #16]
  417308:	ldp	x29, x30, [sp], #64
  41730c:	ret
  417310:	stp	x29, x30, [sp, #-32]!
  417314:	stp	x20, x19, [sp, #16]
  417318:	ldrb	w8, [x0]
  41731c:	mov	x19, x0
  417320:	mov	x29, sp
  417324:	cmp	w8, #0x7e
  417328:	b.eq	417338 <die@@Base+0xa40>  // b.none
  41732c:	cbz	w8, 4173b4 <die@@Base+0xabc>
  417330:	mov	x20, xzr
  417334:	b	417378 <die@@Base+0xa80>
  417338:	mov	x0, x19
  41733c:	bl	41afd4 <tilde_expand@@Base>
  417340:	mov	x20, x0
  417344:	cbz	x0, 417354 <die@@Base+0xa5c>
  417348:	ldrb	w8, [x20]
  41734c:	cmp	w8, #0x0
  417350:	csel	x19, x19, x20, eq  // eq = none
  417354:	ldrb	w8, [x19]
  417358:	b	417378 <die@@Base+0xa80>
  41735c:	ldrb	w8, [x19, #1]
  417360:	cmp	w8, #0x2f
  417364:	b.ne	417390 <die@@Base+0xa98>  // b.any
  417368:	add	x19, x19, #0x1
  41736c:	ldrb	w8, [x19, #1]!
  417370:	cmp	w8, #0x2f
  417374:	b.eq	41736c <die@@Base+0xa74>  // b.none
  417378:	cmp	w8, #0x2e
  41737c:	b.eq	41735c <die@@Base+0xa64>  // b.none
  417380:	adrp	x9, 425000 <_IO_stdin_used@@Base+0x1290>
  417384:	add	x9, x9, #0x6f6
  417388:	cmp	w8, #0x0
  41738c:	csel	x19, x9, x19, eq  // eq = none
  417390:	mov	x0, x19
  417394:	bl	42016c <strcache_add@@Base>
  417398:	mov	x19, x0
  41739c:	mov	x0, x20
  4173a0:	bl	406cb0 <free@plt>
  4173a4:	mov	x0, x19
  4173a8:	ldp	x20, x19, [sp, #16]
  4173ac:	ldp	x29, x30, [sp], #32
  4173b0:	ret
  4173b4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4173b8:	add	x1, x1, #0xab2
  4173bc:	mov	w2, #0x5                   	// #5
  4173c0:	mov	x0, xzr
  4173c4:	bl	406e10 <dcgettext@plt>
  4173c8:	mov	x2, x0
  4173cc:	mov	x0, xzr
  4173d0:	mov	x1, xzr
  4173d4:	bl	4188bc <fatal@@Base>
  4173d8:	stp	x29, x30, [sp, #-32]!
  4173dc:	stp	x20, x19, [sp, #16]
  4173e0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4173e4:	ldr	w8, [x8, #3284]
  4173e8:	mov	w19, w0
  4173ec:	mov	x29, sp
  4173f0:	cbz	w8, 4173f8 <die@@Base+0xb00>
  4173f4:	bl	4167dc <main@@Base+0x24cc>
  4173f8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4173fc:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  417400:	add	x8, x8, #0x9b8
  417404:	add	x9, x9, #0x9d0
  417408:	cmp	w19, #0x0
  41740c:	csel	x8, x9, x8, eq  // eq = none
  417410:	ldr	x19, [x8]
  417414:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  417418:	add	x1, x1, #0xad4
  41741c:	mov	w2, #0x5                   	// #5
  417420:	mov	x0, xzr
  417424:	bl	406e10 <dcgettext@plt>
  417428:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41742c:	ldr	x2, [x8, #40]
  417430:	mov	x1, x0
  417434:	mov	x0, x19
  417438:	bl	406f20 <fprintf@plt>
  41743c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  417440:	adrp	x20, 427000 <_IO_stdin_used@@Base+0x3290>
  417444:	add	x1, x1, #0xb56
  417448:	add	x20, x20, #0x2a8
  41744c:	mov	w2, #0x5                   	// #5
  417450:	mov	x0, xzr
  417454:	bl	406e10 <dcgettext@plt>
  417458:	mov	x1, x19
  41745c:	bl	4067a0 <fputs@plt>
  417460:	ldr	x1, [x20], #8
  417464:	cbnz	x1, 41744c <die@@Base+0xb54>
  417468:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41746c:	ldr	x8, [x20, #4024]
  417470:	cbz	x8, 4174ac <die@@Base+0xbb4>
  417474:	ldrb	w8, [x8]
  417478:	cbz	w8, 4174ac <die@@Base+0xbb4>
  41747c:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  417480:	add	x1, x1, #0xb12
  417484:	mov	w2, #0x5                   	// #5
  417488:	mov	x0, xzr
  41748c:	bl	406e10 <dcgettext@plt>
  417490:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417494:	ldr	x2, [x8, #2456]
  417498:	ldr	x3, [x20, #4024]
  41749c:	mov	x1, x0
  4174a0:	mov	x0, x19
  4174a4:	bl	406f20 <fprintf@plt>
  4174a8:	b	4174d4 <die@@Base+0xbdc>
  4174ac:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4174b0:	add	x1, x1, #0xaf6
  4174b4:	mov	w2, #0x5                   	// #5
  4174b8:	mov	x0, xzr
  4174bc:	bl	406e10 <dcgettext@plt>
  4174c0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4174c4:	ldr	x2, [x8, #2456]
  4174c8:	mov	x1, x0
  4174cc:	mov	x0, x19
  4174d0:	bl	406f20 <fprintf@plt>
  4174d4:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4174d8:	add	x1, x1, #0xb33
  4174dc:	mov	w2, #0x5                   	// #5
  4174e0:	mov	x0, xzr
  4174e4:	bl	406e10 <dcgettext@plt>
  4174e8:	mov	x1, x0
  4174ec:	mov	x0, x19
  4174f0:	ldp	x20, x19, [sp, #16]
  4174f4:	ldp	x29, x30, [sp], #32
  4174f8:	b	406f20 <fprintf@plt>

00000000004174fc <alpha_compare@@Base>:
  4174fc:	ldr	x0, [x0]
  417500:	ldr	x1, [x1]
  417504:	ldrb	w8, [x0]
  417508:	ldrb	w9, [x1]
  41750c:	subs	w8, w8, w9
  417510:	b.ne	417518 <alpha_compare@@Base+0x1c>  // b.any
  417514:	b	406c70 <strcmp@plt>
  417518:	mov	w0, w8
  41751c:	ret

0000000000417520 <collapse_continuations@@Base>:
  417520:	stp	x29, x30, [sp, #-96]!
  417524:	mov	w1, #0xa                   	// #10
  417528:	stp	x28, x27, [sp, #16]
  41752c:	stp	x26, x25, [sp, #32]
  417530:	stp	x24, x23, [sp, #48]
  417534:	stp	x22, x21, [sp, #64]
  417538:	stp	x20, x19, [sp, #80]
  41753c:	mov	x29, sp
  417540:	mov	x19, x0
  417544:	mov	w24, #0xa                   	// #10
  417548:	bl	406cd0 <strchr@plt>
  41754c:	cbz	x0, 417690 <collapse_continuations@@Base+0x170>
  417550:	adrp	x25, 43b000 <memcpy@GLIBC_2.17>
  417554:	mov	x21, x0
  417558:	add	x25, x25, #0xcf0
  41755c:	adrp	x26, 43f000 <shell_var@@Base+0x20>
  417560:	mov	w27, #0x20                  	// #32
  417564:	mov	x20, x19
  417568:	mov	x22, x19
  41756c:	cmp	x21, x19
  417570:	b.ls	417594 <collapse_continuations@@Base+0x74>  // b.plast
  417574:	ldurb	w8, [x21, #-1]
  417578:	cmp	w8, #0x5c
  41757c:	b.ne	417594 <collapse_continuations@@Base+0x74>  // b.any
  417580:	sub	x8, x21, #0x2
  417584:	cmp	x8, x19
  417588:	b.cs	41759c <collapse_continuations@@Base+0x7c>  // b.hs, b.nlast
  41758c:	mov	w8, #0xfffffffe            	// #-2
  417590:	b	4175bc <collapse_continuations@@Base+0x9c>
  417594:	mov	w28, wzr
  417598:	b	4175c0 <collapse_continuations@@Base+0xa0>
  41759c:	mov	x8, #0xfffffffffffffffe    	// #-2
  4175a0:	ldrb	w9, [x21, x8]
  4175a4:	cmp	w9, #0x5c
  4175a8:	b.ne	4175bc <collapse_continuations@@Base+0x9c>  // b.any
  4175ac:	sub	x8, x8, #0x1
  4175b0:	add	x9, x21, x8
  4175b4:	cmp	x9, x19
  4175b8:	b.cs	4175a0 <collapse_continuations@@Base+0x80>  // b.hs, b.nlast
  4175bc:	add	w28, w8, #0x1
  4175c0:	cmp	w28, #0x0
  4175c4:	sub	x8, x21, x20
  4175c8:	cinc	w9, w28, lt  // lt = tstop
  4175cc:	add	x8, x8, w28, sxtw
  4175d0:	neg	w9, w9, asr #1
  4175d4:	cmp	x22, x20
  4175d8:	add	x23, x8, w9, sxtw
  4175dc:	b.eq	4175f0 <collapse_continuations@@Base+0xd0>  // b.none
  4175e0:	mov	x0, x22
  4175e4:	mov	x1, x20
  4175e8:	mov	x2, x23
  4175ec:	bl	406760 <memmove@plt>
  4175f0:	add	x8, x22, x23
  4175f4:	tbnz	w28, #0, 417604 <collapse_continuations@@Base+0xe4>
  4175f8:	add	x20, x21, #0x1
  4175fc:	strb	w24, [x8]
  417600:	b	417648 <collapse_continuations@@Base+0x128>
  417604:	mov	x20, x21
  417608:	ldrb	w9, [x20, #1]!
  41760c:	ldrh	w9, [x25, x9, lsl #1]
  417610:	tbnz	w9, #1, 417608 <collapse_continuations@@Base+0xe8>
  417614:	ldr	w9, [x26, #32]
  417618:	cbz	w9, 417624 <collapse_continuations@@Base+0x104>
  41761c:	mov	x9, x8
  417620:	b	417640 <collapse_continuations@@Base+0x120>
  417624:	mov	x9, x8
  417628:	cmp	x8, x19
  41762c:	b.ls	417640 <collapse_continuations@@Base+0x120>  // b.plast
  417630:	mov	x8, x9
  417634:	ldrb	w10, [x8, #-1]!
  417638:	ldrh	w10, [x25, x10, lsl #1]
  41763c:	tbnz	w10, #1, 417624 <collapse_continuations@@Base+0x104>
  417640:	strb	w27, [x9]
  417644:	mov	x8, x9
  417648:	mov	w1, #0xa                   	// #10
  41764c:	mov	x0, x20
  417650:	add	x22, x8, #0x1
  417654:	bl	406cd0 <strchr@plt>
  417658:	mov	x21, x0
  41765c:	cbnz	x0, 41756c <collapse_continuations@@Base+0x4c>
  417660:	mov	x0, x20
  417664:	bl	406790 <strlen@plt>
  417668:	add	x2, x0, #0x1
  41766c:	mov	x0, x22
  417670:	mov	x1, x20
  417674:	ldp	x20, x19, [sp, #80]
  417678:	ldp	x22, x21, [sp, #64]
  41767c:	ldp	x24, x23, [sp, #48]
  417680:	ldp	x26, x25, [sp, #32]
  417684:	ldp	x28, x27, [sp, #16]
  417688:	ldp	x29, x30, [sp], #96
  41768c:	b	406760 <memmove@plt>
  417690:	ldp	x20, x19, [sp, #80]
  417694:	ldp	x22, x21, [sp, #64]
  417698:	ldp	x24, x23, [sp, #48]
  41769c:	ldp	x26, x25, [sp, #32]
  4176a0:	ldp	x28, x27, [sp, #16]
  4176a4:	ldp	x29, x30, [sp], #96
  4176a8:	ret

00000000004176ac <print_spaces@@Base>:
  4176ac:	stp	x29, x30, [sp, #-32]!
  4176b0:	str	x19, [sp, #16]
  4176b4:	mov	x29, sp
  4176b8:	cbz	w0, 4176d0 <print_spaces@@Base+0x24>
  4176bc:	mov	w19, w0
  4176c0:	mov	w0, #0x20                  	// #32
  4176c4:	sub	w19, w19, #0x1
  4176c8:	bl	406ed0 <putchar@plt>
  4176cc:	cbnz	w19, 4176c0 <print_spaces@@Base+0x14>
  4176d0:	ldr	x19, [sp, #16]
  4176d4:	ldp	x29, x30, [sp], #32
  4176d8:	ret

00000000004176dc <concat@@Base>:
  4176dc:	sub	sp, sp, #0x140
  4176e0:	stp	x29, x30, [sp, #224]
  4176e4:	add	x29, sp, #0xe0
  4176e8:	mov	x8, #0xffffffffffffffc8    	// #-56
  4176ec:	mov	x9, sp
  4176f0:	sub	x10, x29, #0x58
  4176f4:	stp	x24, x23, [sp, #272]
  4176f8:	stp	x22, x21, [sp, #288]
  4176fc:	movk	x8, #0xff80, lsl #32
  417700:	add	x11, x29, #0x60
  417704:	adrp	x24, 43c000 <stopchar_map@@Base+0x310>
  417708:	add	x9, x9, #0x80
  41770c:	add	x10, x10, #0x38
  417710:	adrp	x22, 43c000 <stopchar_map@@Base+0x310>
  417714:	str	x28, [sp, #240]
  417718:	stp	x26, x25, [sp, #256]
  41771c:	stp	x20, x19, [sp, #304]
  417720:	stp	x1, x2, [x29, #-88]
  417724:	stp	x3, x4, [x29, #-72]
  417728:	stp	x5, x6, [x29, #-56]
  41772c:	stur	x7, [x29, #-40]
  417730:	stp	q0, q1, [sp]
  417734:	stp	q2, q3, [sp, #32]
  417738:	stp	q4, q5, [sp, #64]
  41773c:	stp	q6, q7, [sp, #96]
  417740:	stp	x9, x8, [x29, #-16]
  417744:	stp	x11, x10, [x29, #-32]
  417748:	cbz	w0, 4177f8 <concat@@Base+0x11c>
  41774c:	mov	w19, w0
  417750:	mov	x23, xzr
  417754:	mov	w25, #0x3c                  	// #60
  417758:	ldursw	x8, [x29, #-8]
  41775c:	tbz	w8, #31, 41777c <concat@@Base+0xa0>
  417760:	add	w9, w8, #0x8
  417764:	cmn	w8, #0x8
  417768:	stur	w9, [x29, #-8]
  41776c:	b.gt	41777c <concat@@Base+0xa0>
  417770:	ldur	x9, [x29, #-24]
  417774:	add	x8, x9, x8
  417778:	b	417788 <concat@@Base+0xac>
  41777c:	ldur	x8, [x29, #-32]
  417780:	add	x9, x8, #0x8
  417784:	stur	x9, [x29, #-32]
  417788:	ldr	x20, [x8]
  41778c:	sub	w19, w19, #0x1
  417790:	cbz	x20, 4177f0 <concat@@Base+0x114>
  417794:	mov	x0, x20
  417798:	bl	406790 <strlen@plt>
  41779c:	cbz	x0, 4177f0 <concat@@Base+0x114>
  4177a0:	ldr	x8, [x24, #1456]
  4177a4:	add	x26, x0, x23
  4177a8:	mov	x21, x0
  4177ac:	cmp	x26, x8
  4177b0:	b.ls	4177d8 <concat@@Base+0xfc>  // b.plast
  4177b4:	cmp	x8, #0x0
  4177b8:	ldr	x0, [x22, #1464]
  4177bc:	csel	x8, x25, x8, eq  // eq = none
  4177c0:	add	x8, x8, x21
  4177c4:	lsl	x1, x8, #1
  4177c8:	str	x1, [x24, #1456]
  4177cc:	bl	417854 <xrealloc@@Base>
  4177d0:	str	x0, [x22, #1464]
  4177d4:	b	4177dc <concat@@Base+0x100>
  4177d8:	ldr	x0, [x22, #1464]
  4177dc:	add	x0, x0, x23
  4177e0:	mov	x1, x20
  4177e4:	mov	x2, x21
  4177e8:	bl	406750 <memcpy@plt>
  4177ec:	mov	x23, x26
  4177f0:	cbnz	w19, 417758 <concat@@Base+0x7c>
  4177f4:	b	4177fc <concat@@Base+0x120>
  4177f8:	mov	x23, xzr
  4177fc:	ldr	x8, [x24, #1456]
  417800:	cmp	x23, x8
  417804:	b.ne	41782c <concat@@Base+0x150>  // b.any
  417808:	ldr	x0, [x22, #1464]
  41780c:	lsl	x8, x23, #1
  417810:	cmp	x23, #0x0
  417814:	mov	w9, #0x78                  	// #120
  417818:	csel	x1, x9, x8, eq  // eq = none
  41781c:	str	x1, [x24, #1456]
  417820:	bl	417854 <xrealloc@@Base>
  417824:	str	x0, [x22, #1464]
  417828:	b	417830 <concat@@Base+0x154>
  41782c:	ldr	x0, [x22, #1464]
  417830:	strb	wzr, [x0, x23]
  417834:	ldp	x20, x19, [sp, #304]
  417838:	ldp	x22, x21, [sp, #288]
  41783c:	ldp	x24, x23, [sp, #272]
  417840:	ldp	x26, x25, [sp, #256]
  417844:	ldr	x28, [sp, #240]
  417848:	ldp	x29, x30, [sp, #224]
  41784c:	add	sp, sp, #0x140
  417850:	ret

0000000000417854 <xrealloc@@Base>:
  417854:	stp	x29, x30, [sp, #-16]!
  417858:	cmp	x1, #0x0
  41785c:	csinc	x1, x1, xzr, ne  // ne = any
  417860:	mov	x29, sp
  417864:	cbz	x0, 417878 <xrealloc@@Base+0x24>
  417868:	bl	406b10 <realloc@plt>
  41786c:	cbz	x0, 417884 <xrealloc@@Base+0x30>
  417870:	ldp	x29, x30, [sp], #16
  417874:	ret
  417878:	mov	x0, x1
  41787c:	bl	4069d0 <malloc@plt>
  417880:	cbnz	x0, 417870 <xrealloc@@Base+0x1c>
  417884:	bl	418ad4 <out_of_memory@@Base>

0000000000417888 <xmalloc@@Base>:
  417888:	stp	x29, x30, [sp, #-16]!
  41788c:	cmp	x0, #0x0
  417890:	csinc	x0, x0, xzr, ne  // ne = any
  417894:	mov	x29, sp
  417898:	bl	4069d0 <malloc@plt>
  41789c:	cbz	x0, 4178a8 <xmalloc@@Base+0x20>
  4178a0:	ldp	x29, x30, [sp], #16
  4178a4:	ret
  4178a8:	bl	418ad4 <out_of_memory@@Base>

00000000004178ac <xcalloc@@Base>:
  4178ac:	stp	x29, x30, [sp, #-16]!
  4178b0:	cmp	x0, #0x0
  4178b4:	csinc	x0, x0, xzr, ne  // ne = any
  4178b8:	mov	w1, #0x1                   	// #1
  4178bc:	mov	x29, sp
  4178c0:	bl	406ae0 <calloc@plt>
  4178c4:	cbz	x0, 4178d0 <xcalloc@@Base+0x24>
  4178c8:	ldp	x29, x30, [sp], #16
  4178cc:	ret
  4178d0:	bl	418ad4 <out_of_memory@@Base>

00000000004178d4 <xstrdup@@Base>:
  4178d4:	stp	x29, x30, [sp, #-16]!
  4178d8:	mov	x29, sp
  4178dc:	bl	406b30 <strdup@plt>
  4178e0:	cbz	x0, 4178ec <xstrdup@@Base+0x18>
  4178e4:	ldp	x29, x30, [sp], #16
  4178e8:	ret
  4178ec:	bl	418ad4 <out_of_memory@@Base>

00000000004178f0 <xstrndup@@Base>:
  4178f0:	stp	x29, x30, [sp, #-16]!
  4178f4:	mov	x29, sp
  4178f8:	bl	406cc0 <strndup@plt>
  4178fc:	cbz	x0, 417908 <xstrndup@@Base+0x18>
  417900:	ldp	x29, x30, [sp], #16
  417904:	ret
  417908:	bl	418ad4 <out_of_memory@@Base>

000000000041790c <lindex@@Base>:
  41790c:	cmp	x0, x1
  417910:	b.cs	417928 <lindex@@Base+0x1c>  // b.hs, b.nlast
  417914:	ldrb	w8, [x0], #1
  417918:	cmp	w8, w2
  41791c:	b.ne	41790c <lindex@@Base>  // b.any
  417920:	sub	x0, x0, #0x1
  417924:	ret
  417928:	mov	x0, xzr
  41792c:	ret

0000000000417930 <end_of_token@@Base>:
  417930:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417934:	sub	x0, x0, #0x1
  417938:	add	x8, x8, #0xcf0
  41793c:	ldrb	w9, [x0, #1]!
  417940:	ldrh	w9, [x8, x9, lsl #1]
  417944:	tst	w9, #0x7
  417948:	b.eq	41793c <end_of_token@@Base+0xc>  // b.none
  41794c:	ret

0000000000417950 <next_token@@Base>:
  417950:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417954:	sub	x0, x0, #0x1
  417958:	add	x8, x8, #0xcf0
  41795c:	ldrb	w9, [x0, #1]!
  417960:	ldrh	w9, [x8, x9, lsl #1]
  417964:	tst	w9, #0x6
  417968:	b.ne	41795c <next_token@@Base+0xc>  // b.any
  41796c:	ret

0000000000417970 <find_next_token@@Base>:
  417970:	ldr	x9, [x0]
  417974:	mov	x8, x0
  417978:	sub	x0, x9, #0x1
  41797c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  417980:	add	x9, x9, #0xcf0
  417984:	ldrb	w10, [x0, #1]!
  417988:	ldrh	w11, [x9, x10, lsl #1]
  41798c:	tst	w11, #0x6
  417990:	b.ne	417984 <find_next_token@@Base+0x14>  // b.any
  417994:	cbz	w10, 4179cc <find_next_token@@Base+0x5c>
  417998:	tst	w11, #0x7
  41799c:	mov	x10, x0
  4179a0:	b.ne	4179b8 <find_next_token@@Base+0x48>  // b.any
  4179a4:	mov	x10, x0
  4179a8:	ldrb	w11, [x10, #1]!
  4179ac:	ldrh	w11, [x9, x11, lsl #1]
  4179b0:	tst	w11, #0x7
  4179b4:	b.eq	4179a8 <find_next_token@@Base+0x38>  // b.none
  4179b8:	str	x10, [x8]
  4179bc:	cbz	x1, 4179c8 <find_next_token@@Base+0x58>
  4179c0:	sub	x8, x10, x0
  4179c4:	str	x8, [x1]
  4179c8:	ret
  4179cc:	mov	x0, xzr
  4179d0:	ret

00000000004179d4 <writebuf@@Base>:
  4179d4:	stp	x29, x30, [sp, #-48]!
  4179d8:	stp	x22, x21, [sp, #16]
  4179dc:	stp	x20, x19, [sp, #32]
  4179e0:	mov	x29, sp
  4179e4:	cbz	x2, 417a44 <writebuf@@Base+0x70>
  4179e8:	mov	x19, x2
  4179ec:	mov	x20, x1
  4179f0:	mov	w21, w0
  4179f4:	mov	x22, x2
  4179f8:	mov	w0, w21
  4179fc:	mov	x1, x20
  417a00:	mov	x2, x22
  417a04:	bl	406bb0 <write@plt>
  417a08:	cmn	x0, #0x1
  417a0c:	b.ne	417a24 <writebuf@@Base+0x50>  // b.any
  417a10:	bl	406eb0 <__errno_location@plt>
  417a14:	ldr	w8, [x0]
  417a18:	cmp	w8, #0x4
  417a1c:	b.eq	4179f8 <writebuf@@Base+0x24>  // b.none
  417a20:	b	417a3c <writebuf@@Base+0x68>
  417a24:	tbnz	x0, #63, 417a48 <writebuf@@Base+0x74>
  417a28:	subs	x22, x22, x0
  417a2c:	add	x20, x20, x0
  417a30:	b.ne	4179f8 <writebuf@@Base+0x24>  // b.any
  417a34:	mov	x0, x19
  417a38:	b	417a48 <writebuf@@Base+0x74>
  417a3c:	mov	x0, #0xffffffffffffffff    	// #-1
  417a40:	b	417a48 <writebuf@@Base+0x74>
  417a44:	mov	x0, xzr
  417a48:	ldp	x20, x19, [sp, #32]
  417a4c:	ldp	x22, x21, [sp, #16]
  417a50:	ldp	x29, x30, [sp], #48
  417a54:	ret

0000000000417a58 <readbuf@@Base>:
  417a58:	stp	x29, x30, [sp, #-48]!
  417a5c:	stp	x20, x19, [sp, #32]
  417a60:	mov	x19, x1
  417a64:	mov	x20, x1
  417a68:	stp	x22, x21, [sp, #16]
  417a6c:	mov	x29, sp
  417a70:	cbz	x2, 417ac0 <readbuf@@Base+0x68>
  417a74:	mov	x21, x2
  417a78:	mov	w22, w0
  417a7c:	mov	x20, x19
  417a80:	mov	w0, w22
  417a84:	mov	x1, x20
  417a88:	mov	x2, x21
  417a8c:	bl	406da0 <read@plt>
  417a90:	cmn	x0, #0x1
  417a94:	b.ne	417aac <readbuf@@Base+0x54>  // b.any
  417a98:	bl	406eb0 <__errno_location@plt>
  417a9c:	ldr	w8, [x0]
  417aa0:	cmp	w8, #0x4
  417aa4:	b.eq	417a80 <readbuf@@Base+0x28>  // b.none
  417aa8:	b	417ac8 <readbuf@@Base+0x70>
  417aac:	tbnz	x0, #63, 417acc <readbuf@@Base+0x74>
  417ab0:	cbz	x0, 417ac0 <readbuf@@Base+0x68>
  417ab4:	subs	x21, x21, x0
  417ab8:	add	x20, x20, x0
  417abc:	b.ne	417a80 <readbuf@@Base+0x28>  // b.any
  417ac0:	sub	x0, x20, x19
  417ac4:	b	417acc <readbuf@@Base+0x74>
  417ac8:	mov	x0, #0xffffffffffffffff    	// #-1
  417acc:	ldp	x20, x19, [sp, #32]
  417ad0:	ldp	x22, x21, [sp, #16]
  417ad4:	ldp	x29, x30, [sp], #48
  417ad8:	ret

0000000000417adc <copy_dep_chain@@Base>:
  417adc:	stp	x29, x30, [sp, #-48]!
  417ae0:	stp	x22, x21, [sp, #16]
  417ae4:	stp	x20, x19, [sp, #32]
  417ae8:	mov	x29, sp
  417aec:	cbz	x0, 417b58 <copy_dep_chain@@Base+0x7c>
  417af0:	mov	x19, x0
  417af4:	mov	x22, xzr
  417af8:	mov	x20, xzr
  417afc:	mov	w0, #0x28                  	// #40
  417b00:	bl	4069d0 <malloc@plt>
  417b04:	cbz	x0, 417b70 <copy_dep_chain@@Base+0x94>
  417b08:	ldr	x8, [x19, #32]
  417b0c:	ldp	q0, q1, [x19]
  417b10:	mov	x21, x0
  417b14:	str	x8, [x0, #32]
  417b18:	ubfx	x8, x8, #8, #8
  417b1c:	stp	q0, q1, [x0]
  417b20:	tbz	w8, #3, 417b34 <copy_dep_chain@@Base+0x58>
  417b24:	ldr	x0, [x21, #8]
  417b28:	bl	406b30 <strdup@plt>
  417b2c:	cbz	x0, 417b70 <copy_dep_chain@@Base+0x94>
  417b30:	str	x0, [x21, #8]
  417b34:	str	xzr, [x21]
  417b38:	cbz	x20, 417b44 <copy_dep_chain@@Base+0x68>
  417b3c:	str	x21, [x22]
  417b40:	b	417b48 <copy_dep_chain@@Base+0x6c>
  417b44:	mov	x20, x21
  417b48:	ldr	x19, [x19]
  417b4c:	mov	x22, x21
  417b50:	cbnz	x19, 417afc <copy_dep_chain@@Base+0x20>
  417b54:	b	417b5c <copy_dep_chain@@Base+0x80>
  417b58:	mov	x20, xzr
  417b5c:	mov	x0, x20
  417b60:	ldp	x20, x19, [sp, #32]
  417b64:	ldp	x22, x21, [sp, #16]
  417b68:	ldp	x29, x30, [sp], #48
  417b6c:	ret
  417b70:	bl	418ad4 <out_of_memory@@Base>

0000000000417b74 <free_ns_chain@@Base>:
  417b74:	stp	x29, x30, [sp, #-32]!
  417b78:	str	x19, [sp, #16]
  417b7c:	mov	x29, sp
  417b80:	cbz	x0, 417b94 <free_ns_chain@@Base+0x20>
  417b84:	ldr	x19, [x0]
  417b88:	bl	406cb0 <free@plt>
  417b8c:	mov	x0, x19
  417b90:	cbnz	x19, 417b84 <free_ns_chain@@Base+0x10>
  417b94:	ldr	x19, [sp, #16]
  417b98:	ldp	x29, x30, [sp], #32
  417b9c:	ret

0000000000417ba0 <get_tmpfile@@Base>:
  417ba0:	stp	x29, x30, [sp, #-48]!
  417ba4:	stp	x20, x19, [sp, #32]
  417ba8:	mov	x20, x0
  417bac:	mov	w0, #0x3f                  	// #63
  417bb0:	str	x21, [sp, #16]
  417bb4:	mov	x29, sp
  417bb8:	mov	x21, x1
  417bbc:	bl	406e90 <umask@plt>
  417bc0:	mov	w19, w0
  417bc4:	mov	x0, x21
  417bc8:	bl	406790 <strlen@plt>
  417bcc:	adds	x8, x0, #0x1
  417bd0:	csinc	x0, x8, xzr, cc  // cc = lo, ul, last
  417bd4:	bl	4069d0 <malloc@plt>
  417bd8:	cbz	x0, 417c3c <get_tmpfile@@Base+0x9c>
  417bdc:	mov	x1, x21
  417be0:	str	x0, [x20]
  417be4:	bl	406d50 <strcpy@plt>
  417be8:	ldr	x0, [x20]
  417bec:	bl	406dc0 <mkstemp@plt>
  417bf0:	cmn	w0, #0x1
  417bf4:	b.ne	417c10 <get_tmpfile@@Base+0x70>  // b.any
  417bf8:	bl	406eb0 <__errno_location@plt>
  417bfc:	ldr	w8, [x0]
  417c00:	cmp	w8, #0x4
  417c04:	b.eq	417be8 <get_tmpfile@@Base+0x48>  // b.none
  417c08:	mov	x20, xzr
  417c0c:	b	417c20 <get_tmpfile@@Base+0x80>
  417c10:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  417c14:	add	x1, x1, #0x92c
  417c18:	bl	406a80 <fdopen@plt>
  417c1c:	mov	x20, x0
  417c20:	mov	w0, w19
  417c24:	bl	406e90 <umask@plt>
  417c28:	mov	x0, x20
  417c2c:	ldp	x20, x19, [sp, #32]
  417c30:	ldr	x21, [sp, #16]
  417c34:	ldp	x29, x30, [sp], #48
  417c38:	ret
  417c3c:	bl	418ad4 <out_of_memory@@Base>

0000000000417c40 <user_access@@Base>:
  417c40:	ret

0000000000417c44 <make_access@@Base>:
  417c44:	ret

0000000000417c48 <child_access@@Base>:
  417c48:	ret

0000000000417c4c <output_tmpfd@@Base>:
  417c4c:	stp	x29, x30, [sp, #-48]!
  417c50:	mov	w0, #0x3f                  	// #63
  417c54:	str	x21, [sp, #16]
  417c58:	stp	x20, x19, [sp, #32]
  417c5c:	mov	x29, sp
  417c60:	bl	406e90 <umask@plt>
  417c64:	mov	w19, w0
  417c68:	bl	4067e0 <tmpfile@plt>
  417c6c:	cbz	x0, 417cb0 <output_tmpfd@@Base+0x64>
  417c70:	mov	x20, x0
  417c74:	bl	406940 <fileno@plt>
  417c78:	bl	4067c0 <dup@plt>
  417c7c:	tbnz	w0, #31, 417cbc <output_tmpfd@@Base+0x70>
  417c80:	mov	w21, w0
  417c84:	mov	x0, x20
  417c88:	bl	406980 <fclose@plt>
  417c8c:	mov	w0, w21
  417c90:	bl	417d30 <pfatal_with_name@@Base+0x68>
  417c94:	mov	w0, w19
  417c98:	bl	406e90 <umask@plt>
  417c9c:	mov	w0, w21
  417ca0:	ldp	x20, x19, [sp, #32]
  417ca4:	ldr	x21, [sp, #16]
  417ca8:	ldp	x29, x30, [sp], #48
  417cac:	ret
  417cb0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  417cb4:	add	x0, x0, #0x850
  417cb8:	bl	417cc8 <pfatal_with_name@@Base>
  417cbc:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  417cc0:	add	x0, x0, #0x858
  417cc4:	bl	417cc8 <pfatal_with_name@@Base>

0000000000417cc8 <pfatal_with_name@@Base>:
  417cc8:	stp	x29, x30, [sp, #-48]!
  417ccc:	str	x21, [sp, #16]
  417cd0:	stp	x20, x19, [sp, #32]
  417cd4:	mov	x29, sp
  417cd8:	mov	x19, x0
  417cdc:	bl	406eb0 <__errno_location@plt>
  417ce0:	ldr	w0, [x0]
  417ce4:	bl	406b50 <strerror@plt>
  417ce8:	mov	x20, x0
  417cec:	mov	x0, x19
  417cf0:	bl	406790 <strlen@plt>
  417cf4:	mov	x21, x0
  417cf8:	mov	x0, x20
  417cfc:	bl	406790 <strlen@plt>
  417d00:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  417d04:	add	x21, x0, x21
  417d08:	add	x1, x1, #0xda
  417d0c:	mov	w2, #0x5                   	// #5
  417d10:	mov	x0, xzr
  417d14:	bl	406e10 <dcgettext@plt>
  417d18:	mov	x2, x0
  417d1c:	mov	x0, xzr
  417d20:	mov	x1, x21
  417d24:	mov	x3, x19
  417d28:	mov	x4, x20
  417d2c:	bl	4188bc <fatal@@Base>
  417d30:	stp	x29, x30, [sp, #-32]!
  417d34:	mov	w1, #0x3                   	// #3
  417d38:	mov	w2, wzr
  417d3c:	stp	x20, x19, [sp, #16]
  417d40:	mov	x29, sp
  417d44:	mov	w19, w0
  417d48:	bl	42388c <rpl_fcntl@@Base>
  417d4c:	tbnz	w0, #31, 417d7c <pfatal_with_name@@Base+0xb4>
  417d50:	orr	w20, w0, #0x400
  417d54:	mov	w1, #0x4                   	// #4
  417d58:	mov	w0, w19
  417d5c:	mov	w2, w20
  417d60:	bl	42388c <rpl_fcntl@@Base>
  417d64:	cmn	w0, #0x1
  417d68:	b.ne	417d7c <pfatal_with_name@@Base+0xb4>  // b.any
  417d6c:	bl	406eb0 <__errno_location@plt>
  417d70:	ldr	w8, [x0]
  417d74:	cmp	w8, #0x4
  417d78:	b.eq	417d54 <pfatal_with_name@@Base+0x8c>  // b.none
  417d7c:	ldp	x20, x19, [sp, #16]
  417d80:	ldp	x29, x30, [sp], #32
  417d84:	ret

0000000000417d88 <output_dump@@Base>:
  417d88:	stp	x29, x30, [sp, #-64]!
  417d8c:	stp	x24, x23, [sp, #16]
  417d90:	stp	x22, x21, [sp, #32]
  417d94:	stp	x20, x19, [sp, #48]
  417d98:	mov	x19, x0
  417d9c:	ldr	w0, [x0]
  417da0:	mov	x29, sp
  417da4:	cmn	w0, #0x1
  417da8:	b.eq	417dc4 <output_dump@@Base+0x3c>  // b.none
  417dac:	mov	w2, #0x2                   	// #2
  417db0:	mov	x1, xzr
  417db4:	bl	4068f0 <lseek@plt>
  417db8:	cmp	x0, #0x0
  417dbc:	cset	w22, gt
  417dc0:	b	417dc8 <output_dump@@Base+0x40>
  417dc4:	mov	w22, wzr
  417dc8:	ldr	w0, [x19, #4]
  417dcc:	cmn	w0, #0x1
  417dd0:	b.eq	417dec <output_dump@@Base+0x64>  // b.none
  417dd4:	mov	w2, #0x2                   	// #2
  417dd8:	mov	x1, xzr
  417ddc:	bl	4068f0 <lseek@plt>
  417de0:	cmp	x0, #0x0
  417de4:	cset	w23, gt
  417de8:	b	417df0 <output_dump@@Base+0x68>
  417dec:	mov	w23, wzr
  417df0:	orr	w8, w22, w23
  417df4:	cmp	w8, #0x1
  417df8:	b.ne	417f44 <output_dump@@Base+0x1bc>  // b.any
  417dfc:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  417e00:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  417e04:	ldr	q0, [x8, #2112]
  417e08:	ldr	w0, [x21, #2400]
  417e0c:	adrp	x20, 43c000 <stopchar_map@@Base+0x310>
  417e10:	add	x20, x20, #0x5d0
  417e14:	mov	w8, #0x1                   	// #1
  417e18:	mov	w1, #0x7                   	// #7
  417e1c:	mov	x2, x20
  417e20:	str	w8, [x20]
  417e24:	stur	q0, [x20, #8]
  417e28:	bl	42388c <rpl_fcntl@@Base>
  417e2c:	cmn	w0, #0x1
  417e30:	b.eq	417f58 <output_dump@@Base+0x1d0>  // b.none
  417e34:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417e38:	ldr	w8, [x8, #3276]
  417e3c:	mov	w24, wzr
  417e40:	cbz	w8, 417e60 <output_dump@@Base+0xd8>
  417e44:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417e48:	ldr	w8, [x8, #3304]
  417e4c:	cmp	w8, #0x3
  417e50:	b.eq	417e60 <output_dump@@Base+0xd8>  // b.none
  417e54:	mov	w0, #0x1                   	// #1
  417e58:	mov	w24, #0x1                   	// #1
  417e5c:	bl	417f7c <output_dump@@Base+0x1f4>
  417e60:	cbz	w22, 417e74 <output_dump@@Base+0xec>
  417e64:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417e68:	ldr	w0, [x19]
  417e6c:	ldr	x1, [x8, #2512]
  417e70:	bl	4180f0 <output_dump@@Base+0x368>
  417e74:	cbz	w23, 417e90 <output_dump@@Base+0x108>
  417e78:	ldp	w8, w0, [x19]
  417e7c:	cmp	w0, w8
  417e80:	b.eq	417e90 <output_dump@@Base+0x108>  // b.none
  417e84:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  417e88:	ldr	x1, [x8, #2488]
  417e8c:	bl	4180f0 <output_dump@@Base+0x368>
  417e90:	cbz	w24, 417e9c <output_dump@@Base+0x114>
  417e94:	mov	w0, wzr
  417e98:	bl	417f7c <output_dump@@Base+0x1f4>
  417e9c:	cbz	x20, 417ec0 <output_dump@@Base+0x138>
  417ea0:	mov	w8, #0x2                   	// #2
  417ea4:	strh	w8, [x20]
  417ea8:	ldr	w0, [x21, #2400]
  417eac:	mov	w1, #0x7                   	// #7
  417eb0:	mov	x2, x20
  417eb4:	bl	42388c <rpl_fcntl@@Base>
  417eb8:	cmn	w0, #0x1
  417ebc:	b.eq	417f6c <output_dump@@Base+0x1e4>  // b.none
  417ec0:	ldr	w0, [x19]
  417ec4:	cmn	w0, #0x1
  417ec8:	b.eq	417efc <output_dump@@Base+0x174>  // b.none
  417ecc:	mov	x1, xzr
  417ed0:	mov	w2, wzr
  417ed4:	bl	4068f0 <lseek@plt>
  417ed8:	ldr	w0, [x19]
  417edc:	mov	x1, xzr
  417ee0:	bl	406e50 <ftruncate@plt>
  417ee4:	cmn	w0, #0x1
  417ee8:	b.ne	417efc <output_dump@@Base+0x174>  // b.any
  417eec:	bl	406eb0 <__errno_location@plt>
  417ef0:	ldr	w8, [x0]
  417ef4:	cmp	w8, #0x4
  417ef8:	b.eq	417ed8 <output_dump@@Base+0x150>  // b.none
  417efc:	ldr	w0, [x19, #4]
  417f00:	cmn	w0, #0x1
  417f04:	b.eq	417f44 <output_dump@@Base+0x1bc>  // b.none
  417f08:	ldr	w8, [x19]
  417f0c:	cmp	w0, w8
  417f10:	b.eq	417f44 <output_dump@@Base+0x1bc>  // b.none
  417f14:	mov	x1, xzr
  417f18:	mov	w2, wzr
  417f1c:	bl	4068f0 <lseek@plt>
  417f20:	ldr	w0, [x19, #4]
  417f24:	mov	x1, xzr
  417f28:	bl	406e50 <ftruncate@plt>
  417f2c:	cmn	w0, #0x1
  417f30:	b.ne	417f44 <output_dump@@Base+0x1bc>  // b.any
  417f34:	bl	406eb0 <__errno_location@plt>
  417f38:	ldr	w8, [x0]
  417f3c:	cmp	w8, #0x4
  417f40:	b.eq	417f20 <output_dump@@Base+0x198>  // b.none
  417f44:	ldp	x20, x19, [sp, #48]
  417f48:	ldp	x22, x21, [sp, #32]
  417f4c:	ldp	x24, x23, [sp, #16]
  417f50:	ldp	x29, x30, [sp], #64
  417f54:	ret
  417f58:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  417f5c:	add	x0, x0, #0x8c9
  417f60:	bl	4067d0 <perror@plt>
  417f64:	mov	x20, xzr
  417f68:	b	417e34 <output_dump@@Base+0xac>
  417f6c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  417f70:	add	x0, x0, #0x8c9
  417f74:	bl	4067d0 <perror@plt>
  417f78:	b	417ec0 <output_dump@@Base+0x138>
  417f7c:	stp	x29, x30, [sp, #-80]!
  417f80:	stp	x26, x25, [sp, #16]
  417f84:	stp	x24, x23, [sp, #32]
  417f88:	stp	x22, x21, [sp, #48]
  417f8c:	stp	x20, x19, [sp, #64]
  417f90:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  417f94:	ldr	x8, [x21, #40]
  417f98:	mov	w19, w0
  417f9c:	mov	x29, sp
  417fa0:	mov	x0, x8
  417fa4:	bl	406790 <strlen@plt>
  417fa8:	adrp	x22, 43f000 <shell_var@@Base+0x20>
  417fac:	ldr	x20, [x22, #16]
  417fb0:	add	x25, x0, #0x17
  417fb4:	cbz	x20, 417fc4 <output_dump@@Base+0x23c>
  417fb8:	mov	x0, x20
  417fbc:	bl	406790 <strlen@plt>
  417fc0:	add	x25, x0, x25
  417fc4:	adrp	x23, 43f000 <shell_var@@Base+0x20>
  417fc8:	ldr	w8, [x23, #56]
  417fcc:	cbz	w8, 417fe8 <output_dump@@Base+0x260>
  417fd0:	cbz	x20, 418000 <output_dump@@Base+0x278>
  417fd4:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  417fd8:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  417fdc:	add	x8, x8, #0x9bd
  417fe0:	add	x9, x9, #0x99c
  417fe4:	b	418024 <output_dump@@Base+0x29c>
  417fe8:	cbz	x20, 418014 <output_dump@@Base+0x28c>
  417fec:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  417ff0:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  417ff4:	add	x8, x8, #0x933
  417ff8:	add	x9, x9, #0x916
  417ffc:	b	418024 <output_dump@@Base+0x29c>
  418000:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  418004:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  418008:	add	x8, x8, #0x976
  41800c:	add	x9, x9, #0x94f
  418010:	b	418024 <output_dump@@Base+0x29c>
  418014:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  418018:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  41801c:	add	x8, x8, #0x8f4
  418020:	add	x9, x9, #0x8d1
  418024:	cmp	w19, #0x0
  418028:	csel	x1, x9, x8, ne  // ne = any
  41802c:	mov	w2, #0x5                   	// #5
  418030:	mov	x0, xzr
  418034:	bl	406e10 <dcgettext@plt>
  418038:	mov	x19, x0
  41803c:	bl	406790 <strlen@plt>
  418040:	adrp	x26, 43c000 <stopchar_map@@Base+0x310>
  418044:	ldr	x9, [x26, #1528]
  418048:	adrp	x24, 43c000 <stopchar_map@@Base+0x310>
  41804c:	mov	x8, x0
  418050:	ldr	x0, [x24, #1520]
  418054:	add	x20, x8, x25
  418058:	cmp	x20, x9
  41805c:	b.ls	418070 <output_dump@@Base+0x2e8>  // b.plast
  418060:	mov	x1, x20
  418064:	bl	417854 <xrealloc@@Base>
  418068:	str	x0, [x24, #1520]
  41806c:	str	x20, [x26, #1528]
  418070:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  418074:	ldr	w8, [x8, #3256]
  418078:	cbz	w8, 418084 <output_dump@@Base+0x2fc>
  41807c:	mov	w8, #0x2023                	// #8227
  418080:	strh	w8, [x0], #2
  418084:	ldr	w3, [x23, #56]
  418088:	ldr	x4, [x22, #16]
  41808c:	ldr	x2, [x21, #40]
  418090:	mov	x1, x19
  418094:	cbz	w3, 4180a4 <output_dump@@Base+0x31c>
  418098:	cbz	x4, 4180b4 <output_dump@@Base+0x32c>
  41809c:	bl	406830 <sprintf@plt>
  4180a0:	b	4180c0 <output_dump@@Base+0x338>
  4180a4:	cbz	x4, 4180bc <output_dump@@Base+0x334>
  4180a8:	mov	x3, x4
  4180ac:	bl	406830 <sprintf@plt>
  4180b0:	b	4180c0 <output_dump@@Base+0x338>
  4180b4:	bl	406830 <sprintf@plt>
  4180b8:	b	4180c0 <output_dump@@Base+0x338>
  4180bc:	bl	406830 <sprintf@plt>
  4180c0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4180c4:	ldr	x19, [x8, #2512]
  4180c8:	ldr	x0, [x24, #1520]
  4180cc:	mov	x1, x19
  4180d0:	bl	4067a0 <fputs@plt>
  4180d4:	mov	x0, x19
  4180d8:	ldp	x20, x19, [sp, #64]
  4180dc:	ldp	x22, x21, [sp, #48]
  4180e0:	ldp	x24, x23, [sp, #32]
  4180e4:	ldp	x26, x25, [sp, #16]
  4180e8:	ldp	x29, x30, [sp], #80
  4180ec:	b	406d40 <fflush@plt>
  4180f0:	stp	x29, x30, [sp, #-64]!
  4180f4:	stp	x20, x19, [sp, #48]
  4180f8:	mov	x19, x1
  4180fc:	mov	x1, xzr
  418100:	mov	w2, wzr
  418104:	str	x23, [sp, #16]
  418108:	stp	x22, x21, [sp, #32]
  41810c:	mov	x29, sp
  418110:	mov	w20, w0
  418114:	bl	4068f0 <lseek@plt>
  418118:	cmn	x0, #0x1
  41811c:	b.eq	4181c0 <output_dump@@Base+0x438>  // b.none
  418120:	adrp	x22, 43c000 <stopchar_map@@Base+0x310>
  418124:	adrp	x21, 428000 <_IO_stdin_used@@Base+0x4290>
  418128:	adrp	x23, 428000 <_IO_stdin_used@@Base+0x4290>
  41812c:	add	x22, x22, #0x600
  418130:	add	x21, x21, #0x9e5
  418134:	add	x23, x23, #0x9ec
  418138:	mov	w2, #0x2000                	// #8192
  41813c:	mov	w0, w20
  418140:	mov	x1, x22
  418144:	bl	406da0 <read@plt>
  418148:	cmn	w0, #0x1
  41814c:	b.eq	41817c <output_dump@@Base+0x3f4>  // b.none
  418150:	tbnz	w0, #31, 418194 <output_dump@@Base+0x40c>
  418154:	cbz	w0, 4181ac <output_dump@@Base+0x424>
  418158:	sxtw	x1, w0
  41815c:	mov	w2, #0x1                   	// #1
  418160:	mov	x0, x22
  418164:	mov	x3, x19
  418168:	bl	406d00 <fwrite@plt>
  41816c:	cbz	x0, 418190 <output_dump@@Base+0x408>
  418170:	mov	x0, x19
  418174:	bl	406d40 <fflush@plt>
  418178:	b	418138 <output_dump@@Base+0x3b0>
  41817c:	bl	406eb0 <__errno_location@plt>
  418180:	ldr	w8, [x0]
  418184:	cmp	w8, #0x4
  418188:	b.eq	418138 <output_dump@@Base+0x3b0>  // b.none
  41818c:	b	418194 <output_dump@@Base+0x40c>
  418190:	mov	x21, x23
  418194:	mov	x0, x21
  418198:	ldp	x20, x19, [sp, #48]
  41819c:	ldp	x22, x21, [sp, #32]
  4181a0:	ldr	x23, [sp, #16]
  4181a4:	ldp	x29, x30, [sp], #64
  4181a8:	b	4067d0 <perror@plt>
  4181ac:	ldp	x20, x19, [sp, #48]
  4181b0:	ldp	x22, x21, [sp, #32]
  4181b4:	ldr	x23, [sp, #16]
  4181b8:	ldp	x29, x30, [sp], #64
  4181bc:	ret
  4181c0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  4181c4:	add	x0, x0, #0x9dd
  4181c8:	bl	4067d0 <perror@plt>
  4181cc:	b	418120 <output_dump@@Base+0x398>

00000000004181d0 <output_init@@Base>:
  4181d0:	stp	x29, x30, [sp, #-32]!
  4181d4:	str	x19, [sp, #16]
  4181d8:	mov	x29, sp
  4181dc:	cbz	x0, 418214 <output_init@@Base+0x44>
  4181e0:	movi	v0.2d, #0xffffffffffffffff
  4181e4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4181e8:	str	d0, [x0]
  4181ec:	ldr	w8, [x8, #3304]
  4181f0:	ldrb	w9, [x0, #8]
  4181f4:	cmp	w8, #0x0
  4181f8:	cset	w8, ne  // ne = any
  4181fc:	and	w9, w9, #0xfe
  418200:	orr	w8, w9, w8
  418204:	strb	w8, [x0, #8]
  418208:	ldr	x19, [sp, #16]
  41820c:	ldp	x29, x30, [sp], #32
  418210:	ret
  418214:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  418218:	ldr	x0, [x19, #2512]
  41821c:	mov	w2, #0x1                   	// #1
  418220:	mov	w3, #0x2000                	// #8192
  418224:	mov	x1, xzr
  418228:	bl	4068e0 <setvbuf@plt>
  41822c:	ldr	x0, [x19, #2512]
  418230:	bl	406940 <fileno@plt>
  418234:	bl	417d30 <pfatal_with_name@@Base+0x68>
  418238:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41823c:	ldr	x0, [x8, #2488]
  418240:	bl	406940 <fileno@plt>
  418244:	bl	417d30 <pfatal_with_name@@Base+0x68>
  418248:	ldr	x0, [x19, #2512]
  41824c:	bl	406940 <fileno@plt>
  418250:	mov	w1, #0x1                   	// #1
  418254:	bl	42388c <rpl_fcntl@@Base>
  418258:	cmn	w0, #0x1
  41825c:	b.ne	418270 <output_init@@Base+0xa0>  // b.any
  418260:	bl	406eb0 <__errno_location@plt>
  418264:	ldr	w8, [x0]
  418268:	cmp	w8, #0x9
  41826c:	b.eq	418208 <output_init@@Base+0x38>  // b.none
  418270:	ldr	x19, [sp, #16]
  418274:	adrp	x0, 418000 <output_dump@@Base+0x278>
  418278:	add	x0, x0, #0x284
  41827c:	ldp	x29, x30, [sp], #32
  418280:	b	423d20 <__libc_csu_fini@@Base+0x8>
  418284:	stp	x29, x30, [sp, #-32]!
  418288:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41828c:	stp	x20, x19, [sp, #16]
  418290:	ldr	x19, [x8, #2512]
  418294:	mov	x29, sp
  418298:	mov	x0, x19
  41829c:	bl	406f50 <ferror@plt>
  4182a0:	mov	w20, w0
  4182a4:	mov	x0, x19
  4182a8:	bl	406980 <fclose@plt>
  4182ac:	orr	w8, w0, w20
  4182b0:	cbnz	w8, 4182c0 <output_init@@Base+0xf0>
  4182b4:	ldp	x20, x19, [sp, #16]
  4182b8:	ldp	x29, x30, [sp], #32
  4182bc:	ret
  4182c0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4182c4:	add	x1, x1, #0x9f5
  4182c8:	mov	w2, #0x5                   	// #5
  4182cc:	mov	w19, w0
  4182d0:	mov	x0, xzr
  4182d4:	bl	406e10 <dcgettext@plt>
  4182d8:	mov	x2, x0
  4182dc:	cbnz	w19, 4182f0 <output_init@@Base+0x120>
  4182e0:	mov	x0, xzr
  4182e4:	mov	x1, xzr
  4182e8:	bl	418744 <error@@Base>
  4182ec:	b	418300 <output_init@@Base+0x130>
  4182f0:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4182f4:	add	x1, x1, #0x5eb
  4182f8:	mov	x0, x2
  4182fc:	bl	418a4c <perror_with_name@@Base>
  418300:	mov	w0, #0x1                   	// #1
  418304:	bl	4067b0 <exit@plt>

0000000000418308 <output_close@@Base>:
  418308:	stp	x29, x30, [sp, #-32]!
  41830c:	str	x19, [sp, #16]
  418310:	mov	x29, sp
  418314:	cbz	x0, 418378 <output_close@@Base+0x70>
  418318:	mov	x19, x0
  41831c:	bl	417d88 <output_dump@@Base>
  418320:	ldr	w0, [x19]
  418324:	tbnz	w0, #31, 41832c <output_close@@Base+0x24>
  418328:	bl	406b60 <close@plt>
  41832c:	ldr	w0, [x19, #4]
  418330:	tbnz	w0, #31, 418344 <output_close@@Base+0x3c>
  418334:	ldr	w8, [x19]
  418338:	cmp	w0, w8
  41833c:	b.eq	418344 <output_close@@Base+0x3c>  // b.none
  418340:	bl	406b60 <close@plt>
  418344:	movi	v0.2d, #0xffffffffffffffff
  418348:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41834c:	str	d0, [x19]
  418350:	ldr	w8, [x8, #3304]
  418354:	ldrb	w9, [x19, #8]
  418358:	cmp	w8, #0x0
  41835c:	cset	w8, ne  // ne = any
  418360:	and	w9, w9, #0xfe
  418364:	orr	w8, w9, w8
  418368:	strb	w8, [x19, #8]
  41836c:	ldr	x19, [sp, #16]
  418370:	ldp	x29, x30, [sp], #32
  418374:	ret
  418378:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  41837c:	ldr	w8, [x8, #1480]
  418380:	cbz	w8, 41836c <output_close@@Base+0x64>
  418384:	ldr	x19, [sp, #16]
  418388:	mov	w0, wzr
  41838c:	ldp	x29, x30, [sp], #32
  418390:	b	417f7c <output_dump@@Base+0x1f4>

0000000000418394 <output_start@@Base>:
  418394:	stp	x29, x30, [sp, #-48]!
  418398:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  41839c:	stp	x20, x19, [sp, #32]
  4183a0:	ldr	x19, [x8, #1472]
  4183a4:	str	x21, [sp, #16]
  4183a8:	mov	x29, sp
  4183ac:	cbz	x19, 4183c8 <output_start@@Base+0x34>
  4183b0:	ldrb	w8, [x19, #8]
  4183b4:	tbz	w8, #0, 4183c8 <output_start@@Base+0x34>
  4183b8:	ldr	w8, [x19]
  4183bc:	tbz	w8, #31, 4183c8 <output_start@@Base+0x34>
  4183c0:	ldr	w8, [x19, #4]
  4183c4:	tbnz	w8, #31, 418414 <output_start@@Base+0x80>
  4183c8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4183cc:	ldr	w8, [x8, #3304]
  4183d0:	cmp	w8, #0x3
  4183d4:	b.eq	4183dc <output_start@@Base+0x48>  // b.none
  4183d8:	cbnz	w8, 418404 <output_start@@Base+0x70>
  4183dc:	adrp	x19, 43c000 <stopchar_map@@Base+0x310>
  4183e0:	ldr	w8, [x19, #1480]
  4183e4:	cbnz	w8, 418404 <output_start@@Base+0x70>
  4183e8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4183ec:	ldr	w8, [x8, #3276]
  4183f0:	cbz	w8, 418404 <output_start@@Base+0x70>
  4183f4:	mov	w0, #0x1                   	// #1
  4183f8:	mov	w20, #0x1                   	// #1
  4183fc:	bl	417f7c <output_dump@@Base+0x1f4>
  418400:	str	w20, [x19, #1480]
  418404:	ldp	x20, x19, [sp, #32]
  418408:	ldr	x21, [sp, #16]
  41840c:	ldp	x29, x30, [sp], #48
  418410:	ret
  418414:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  418418:	ldr	w8, [x21, #2404]
  41841c:	tbz	w8, #31, 418428 <output_start@@Base+0x94>
  418420:	bl	418b34 <out_of_memory@@Base+0x60>
  418424:	str	w0, [x21, #2404]
  418428:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41842c:	ldr	x0, [x8, #2512]
  418430:	bl	406940 <fileno@plt>
  418434:	mov	w1, #0x1                   	// #1
  418438:	bl	42388c <rpl_fcntl@@Base>
  41843c:	cmn	w0, #0x1
  418440:	b.ne	418454 <output_start@@Base+0xc0>  // b.any
  418444:	bl	406eb0 <__errno_location@plt>
  418448:	ldr	w8, [x0]
  41844c:	cmp	w8, #0x9
  418450:	b.eq	418468 <output_start@@Base+0xd4>  // b.none
  418454:	bl	417c4c <output_tmpfd@@Base>
  418458:	tbnz	w0, #31, 4184c8 <output_start@@Base+0x134>
  41845c:	mov	w20, w0
  418460:	bl	422fc8 <fd_noinherit@@Base>
  418464:	str	w20, [x19]
  418468:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41846c:	ldr	x0, [x8, #2488]
  418470:	bl	406940 <fileno@plt>
  418474:	mov	w1, #0x1                   	// #1
  418478:	bl	42388c <rpl_fcntl@@Base>
  41847c:	cmn	w0, #0x1
  418480:	b.ne	418494 <output_start@@Base+0x100>  // b.any
  418484:	bl	406eb0 <__errno_location@plt>
  418488:	ldr	w8, [x0]
  41848c:	cmp	w8, #0x9
  418490:	b.eq	4183c8 <output_start@@Base+0x34>  // b.none
  418494:	ldr	w8, [x19]
  418498:	cmn	w8, #0x1
  41849c:	b.eq	4184b0 <output_start@@Base+0x11c>  // b.none
  4184a0:	ldr	w9, [x21, #2404]
  4184a4:	cbz	w9, 4184b0 <output_start@@Base+0x11c>
  4184a8:	str	w8, [x19, #4]
  4184ac:	b	4183c8 <output_start@@Base+0x34>
  4184b0:	bl	417c4c <output_tmpfd@@Base>
  4184b4:	tbnz	w0, #31, 4184c8 <output_start@@Base+0x134>
  4184b8:	mov	w20, w0
  4184bc:	bl	422fc8 <fd_noinherit@@Base>
  4184c0:	str	w20, [x19, #4]
  4184c4:	b	4183c8 <output_start@@Base+0x34>
  4184c8:	mov	x0, x19
  4184cc:	bl	418308 <output_close@@Base>
  4184d0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4184d4:	str	wzr, [x8, #3304]
  4184d8:	b	4183dc <output_start@@Base+0x48>

00000000004184dc <outputs@@Base>:
  4184dc:	stp	x29, x30, [sp, #-48]!
  4184e0:	str	x21, [sp, #16]
  4184e4:	stp	x20, x19, [sp, #32]
  4184e8:	mov	x29, sp
  4184ec:	cbz	x1, 418554 <outputs@@Base+0x78>
  4184f0:	ldrb	w8, [x1]
  4184f4:	mov	x19, x1
  4184f8:	cbz	w8, 418554 <outputs@@Base+0x78>
  4184fc:	mov	w20, w0
  418500:	bl	418394 <output_start@@Base>
  418504:	adrp	x8, 43c000 <stopchar_map@@Base+0x310>
  418508:	ldr	x8, [x8, #1472]
  41850c:	cbz	x8, 418518 <outputs@@Base+0x3c>
  418510:	ldrb	w9, [x8, #8]
  418514:	tbnz	w9, #0, 418564 <outputs@@Base+0x88>
  418518:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41851c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  418520:	add	x8, x8, #0x9b8
  418524:	add	x9, x9, #0x9d0
  418528:	cmp	w20, #0x0
  41852c:	csel	x8, x9, x8, eq  // eq = none
  418530:	ldr	x20, [x8]
  418534:	mov	x0, x19
  418538:	mov	x1, x20
  41853c:	bl	4067a0 <fputs@plt>
  418540:	mov	x0, x20
  418544:	ldp	x20, x19, [sp, #32]
  418548:	ldr	x21, [sp, #16]
  41854c:	ldp	x29, x30, [sp], #48
  418550:	b	406d40 <fflush@plt>
  418554:	ldp	x20, x19, [sp, #32]
  418558:	ldr	x21, [sp, #16]
  41855c:	ldp	x29, x30, [sp], #48
  418560:	ret
  418564:	cmp	w20, #0x0
  418568:	cset	w9, ne  // ne = any
  41856c:	ldr	w20, [x8, w9, uxtw #2]
  418570:	mov	x0, x19
  418574:	bl	406790 <strlen@plt>
  418578:	mov	x21, x0
  41857c:	mov	w2, #0x2                   	// #2
  418580:	mov	w0, w20
  418584:	mov	x1, xzr
  418588:	bl	4068f0 <lseek@plt>
  41858c:	cmn	w0, #0x1
  418590:	b.ne	4185a4 <outputs@@Base+0xc8>  // b.any
  418594:	bl	406eb0 <__errno_location@plt>
  418598:	ldr	w8, [x0]
  41859c:	cmp	w8, #0x4
  4185a0:	b.eq	41857c <outputs@@Base+0xa0>  // b.none
  4185a4:	mov	w0, w20
  4185a8:	mov	x1, x19
  4185ac:	mov	x2, x21
  4185b0:	ldp	x20, x19, [sp, #32]
  4185b4:	ldr	x21, [sp, #16]
  4185b8:	ldp	x29, x30, [sp], #48
  4185bc:	b	4179d4 <writebuf@@Base>

00000000004185c0 <message@@Base>:
  4185c0:	sub	sp, sp, #0x130
  4185c4:	stp	x29, x30, [sp, #240]
  4185c8:	stp	x22, x21, [sp, #272]
  4185cc:	add	x29, sp, #0xf0
  4185d0:	mov	w21, w0
  4185d4:	mov	x0, x2
  4185d8:	stp	x28, x23, [sp, #256]
  4185dc:	stp	x20, x19, [sp, #288]
  4185e0:	mov	x19, x2
  4185e4:	mov	x20, x1
  4185e8:	stp	x3, x4, [x29, #-104]
  4185ec:	stp	x5, x6, [x29, #-88]
  4185f0:	stur	x7, [x29, #-72]
  4185f4:	stp	q1, q2, [sp, #16]
  4185f8:	stp	q3, q4, [sp, #48]
  4185fc:	str	q0, [sp]
  418600:	stp	q5, q6, [sp, #80]
  418604:	str	q7, [sp, #112]
  418608:	bl	406790 <strlen@plt>
  41860c:	adrp	x23, 43f000 <shell_var@@Base+0x20>
  418610:	ldr	x8, [x23, #40]
  418614:	mov	x22, x0
  418618:	mov	x0, x8
  41861c:	bl	406790 <strlen@plt>
  418620:	add	x8, x20, x22
  418624:	add	x8, x8, x0
  418628:	add	x0, x8, #0x1a
  41862c:	bl	4186ec <message@@Base+0x12c>
  418630:	mov	x20, x0
  418634:	cbz	w21, 418678 <message@@Base+0xb8>
  418638:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41863c:	ldr	w3, [x8, #56]
  418640:	ldr	x2, [x23, #40]
  418644:	cbz	w3, 41865c <message@@Base+0x9c>
  418648:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41864c:	add	x1, x1, #0x861
  418650:	mov	x0, x20
  418654:	bl	406830 <sprintf@plt>
  418658:	b	41866c <message@@Base+0xac>
  41865c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418660:	add	x1, x1, #0x85c
  418664:	mov	x0, x20
  418668:	bl	406830 <sprintf@plt>
  41866c:	mov	x0, x20
  418670:	bl	406790 <strlen@plt>
  418674:	add	x20, x20, x0
  418678:	mov	x8, #0xffffffffffffffd8    	// #-40
  41867c:	mov	x10, sp
  418680:	sub	x11, x29, #0x68
  418684:	movk	x8, #0xff80, lsl #32
  418688:	add	x9, x29, #0x40
  41868c:	add	x10, x10, #0x80
  418690:	add	x11, x11, #0x28
  418694:	stp	x10, x8, [x29, #-16]
  418698:	stp	x9, x11, [x29, #-32]
  41869c:	ldp	q0, q1, [x29, #-32]
  4186a0:	sub	x2, x29, #0x40
  4186a4:	mov	x0, x20
  4186a8:	mov	x1, x19
  4186ac:	stp	q0, q1, [x29, #-64]
  4186b0:	bl	406d70 <vsprintf@plt>
  4186b4:	mov	x0, x20
  4186b8:	bl	406790 <strlen@plt>
  4186bc:	mov	w8, #0xa                   	// #10
  4186c0:	strh	w8, [x20, x0]
  4186c4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4186c8:	ldr	x1, [x8, #1536]
  4186cc:	mov	w0, wzr
  4186d0:	bl	4184dc <outputs@@Base>
  4186d4:	ldp	x20, x19, [sp, #288]
  4186d8:	ldp	x22, x21, [sp, #272]
  4186dc:	ldp	x28, x23, [sp, #256]
  4186e0:	ldp	x29, x30, [sp, #240]
  4186e4:	add	sp, sp, #0x130
  4186e8:	ret
  4186ec:	stp	x29, x30, [sp, #-32]!
  4186f0:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4186f4:	ldr	x9, [x8, #1544]
  4186f8:	stp	x20, x19, [sp, #16]
  4186fc:	mov	x19, x0
  418700:	mov	x29, sp
  418704:	cmp	x9, x0
  418708:	b.cs	418728 <message@@Base+0x168>  // b.hs, b.nlast
  41870c:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  418710:	ldr	x0, [x20, #1536]
  418714:	add	x1, x9, x19, lsl #1
  418718:	str	x1, [x8, #1544]
  41871c:	bl	417854 <xrealloc@@Base>
  418720:	str	x0, [x20, #1536]
  418724:	b	418730 <message@@Base+0x170>
  418728:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41872c:	ldr	x0, [x8, #1536]
  418730:	add	x8, x19, x0
  418734:	sturb	wzr, [x8, #-1]
  418738:	ldp	x20, x19, [sp, #16]
  41873c:	ldp	x29, x30, [sp], #32
  418740:	ret

0000000000418744 <error@@Base>:
  418744:	sub	sp, sp, #0x140
  418748:	stp	x29, x30, [sp, #240]
  41874c:	stp	x20, x19, [sp, #304]
  418750:	add	x29, sp, #0xf0
  418754:	mov	x20, x0
  418758:	mov	x0, x2
  41875c:	str	x28, [sp, #256]
  418760:	stp	x24, x23, [sp, #272]
  418764:	stp	x22, x21, [sp, #288]
  418768:	mov	x19, x2
  41876c:	mov	x21, x1
  418770:	stp	x3, x4, [x29, #-104]
  418774:	stp	x5, x6, [x29, #-88]
  418778:	stur	x7, [x29, #-72]
  41877c:	stp	q1, q2, [sp, #16]
  418780:	stp	q3, q4, [sp, #48]
  418784:	str	q0, [sp]
  418788:	stp	q5, q6, [sp, #80]
  41878c:	str	q7, [sp, #112]
  418790:	bl	406790 <strlen@plt>
  418794:	adrp	x24, 43f000 <shell_var@@Base+0x20>
  418798:	ldr	x8, [x24, #40]
  41879c:	mov	x22, x0
  4187a0:	mov	x0, x8
  4187a4:	bl	406790 <strlen@plt>
  4187a8:	mov	x23, x0
  4187ac:	cbz	x20, 4187c0 <error@@Base+0x7c>
  4187b0:	ldr	x0, [x20]
  4187b4:	cbz	x0, 4187c4 <error@@Base+0x80>
  4187b8:	bl	406790 <strlen@plt>
  4187bc:	b	4187c4 <error@@Base+0x80>
  4187c0:	mov	x0, xzr
  4187c4:	add	x8, x21, x22
  4187c8:	add	x8, x8, x23
  4187cc:	add	x8, x8, x0
  4187d0:	add	x0, x8, #0x1a
  4187d4:	bl	4186ec <message@@Base+0x12c>
  4187d8:	mov	x21, x0
  4187dc:	cbz	x20, 418804 <error@@Base+0xc0>
  4187e0:	ldr	x2, [x20]
  4187e4:	cbz	x2, 418804 <error@@Base+0xc0>
  4187e8:	ldp	x8, x9, [x20, #8]
  4187ec:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4187f0:	add	x1, x1, #0x86a
  4187f4:	mov	x0, x21
  4187f8:	add	x3, x9, x8
  4187fc:	bl	406830 <sprintf@plt>
  418800:	b	418838 <error@@Base+0xf4>
  418804:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  418808:	ldr	w3, [x8, #56]
  41880c:	ldr	x2, [x24, #40]
  418810:	cbz	w3, 418828 <error@@Base+0xe4>
  418814:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418818:	add	x1, x1, #0x861
  41881c:	mov	x0, x21
  418820:	bl	406830 <sprintf@plt>
  418824:	b	418838 <error@@Base+0xf4>
  418828:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41882c:	add	x1, x1, #0x85c
  418830:	mov	x0, x21
  418834:	bl	406830 <sprintf@plt>
  418838:	mov	x0, x21
  41883c:	bl	406790 <strlen@plt>
  418840:	sub	x9, x29, #0x68
  418844:	add	x8, x29, #0x50
  418848:	add	x9, x9, #0x28
  41884c:	mov	x10, sp
  418850:	stp	x8, x9, [x29, #-32]
  418854:	mov	x8, #0xffffffffffffffd8    	// #-40
  418858:	movk	x8, #0xff80, lsl #32
  41885c:	add	x9, x10, #0x80
  418860:	stp	x9, x8, [x29, #-16]
  418864:	ldp	q0, q1, [x29, #-32]
  418868:	add	x20, x21, x0
  41886c:	sub	x2, x29, #0x40
  418870:	mov	x0, x20
  418874:	mov	x1, x19
  418878:	stp	q0, q1, [x29, #-64]
  41887c:	bl	406d70 <vsprintf@plt>
  418880:	mov	x0, x20
  418884:	bl	406790 <strlen@plt>
  418888:	mov	w8, #0xa                   	// #10
  41888c:	strh	w8, [x20, x0]
  418890:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  418894:	ldr	x1, [x8, #1536]
  418898:	mov	w0, #0x1                   	// #1
  41889c:	bl	4184dc <outputs@@Base>
  4188a0:	ldp	x20, x19, [sp, #304]
  4188a4:	ldp	x22, x21, [sp, #288]
  4188a8:	ldp	x24, x23, [sp, #272]
  4188ac:	ldr	x28, [sp, #256]
  4188b0:	ldp	x29, x30, [sp, #240]
  4188b4:	add	sp, sp, #0x140
  4188b8:	ret

00000000004188bc <fatal@@Base>:
  4188bc:	sub	sp, sp, #0x150
  4188c0:	stp	x22, x21, [sp, #304]
  4188c4:	mov	x22, x1
  4188c8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4188cc:	stp	x29, x30, [sp, #240]
  4188d0:	stp	x20, x19, [sp, #320]
  4188d4:	add	x29, sp, #0xf0
  4188d8:	mov	x19, x2
  4188dc:	mov	x21, x0
  4188e0:	add	x1, x1, #0x873
  4188e4:	mov	w2, #0x5                   	// #5
  4188e8:	mov	x0, xzr
  4188ec:	str	x28, [sp, #256]
  4188f0:	stp	x26, x25, [sp, #272]
  4188f4:	stp	x24, x23, [sp, #288]
  4188f8:	stp	x3, x4, [x29, #-104]
  4188fc:	stp	x5, x6, [x29, #-88]
  418900:	stur	x7, [x29, #-72]
  418904:	stp	q1, q2, [sp, #16]
  418908:	stp	q3, q4, [sp, #48]
  41890c:	str	q0, [sp]
  418910:	stp	q5, q6, [sp, #80]
  418914:	str	q7, [sp, #112]
  418918:	bl	406e10 <dcgettext@plt>
  41891c:	mov	x20, x0
  418920:	mov	x0, x19
  418924:	bl	406790 <strlen@plt>
  418928:	adrp	x26, 43f000 <shell_var@@Base+0x20>
  41892c:	ldr	x8, [x26, #40]
  418930:	mov	x23, x0
  418934:	mov	x0, x8
  418938:	bl	406790 <strlen@plt>
  41893c:	mov	x24, x0
  418940:	mov	x25, xzr
  418944:	cbz	x21, 418960 <fatal@@Base+0xa4>
  418948:	ldr	x0, [x21]
  41894c:	cbnz	x0, 418958 <fatal@@Base+0x9c>
  418950:	mov	x25, xzr
  418954:	b	418960 <fatal@@Base+0xa4>
  418958:	bl	406790 <strlen@plt>
  41895c:	mov	x25, x0
  418960:	mov	x0, x20
  418964:	bl	406790 <strlen@plt>
  418968:	add	x8, x22, x23
  41896c:	add	x8, x8, x24
  418970:	add	x8, x8, x25
  418974:	add	x8, x8, x0
  418978:	add	x0, x8, #0x1d
  41897c:	bl	4186ec <message@@Base+0x12c>
  418980:	mov	x22, x0
  418984:	cbz	x21, 418990 <fatal@@Base+0xd4>
  418988:	ldr	x2, [x21]
  41898c:	cbnz	x2, 4189c8 <fatal@@Base+0x10c>
  418990:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  418994:	ldr	w3, [x8, #56]
  418998:	ldr	x2, [x26, #40]
  41899c:	cbnz	w3, 4189b4 <fatal@@Base+0xf8>
  4189a0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4189a4:	add	x1, x1, #0x88a
  4189a8:	mov	x0, x22
  4189ac:	bl	406830 <sprintf@plt>
  4189b0:	b	4189e0 <fatal@@Base+0x124>
  4189b4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4189b8:	add	x1, x1, #0x893
  4189bc:	mov	x0, x22
  4189c0:	bl	406830 <sprintf@plt>
  4189c4:	b	4189e0 <fatal@@Base+0x124>
  4189c8:	ldp	x8, x9, [x21, #8]
  4189cc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4189d0:	add	x1, x1, #0x87d
  4189d4:	mov	x0, x22
  4189d8:	add	x3, x9, x8
  4189dc:	bl	406830 <sprintf@plt>
  4189e0:	mov	x0, x22
  4189e4:	bl	406790 <strlen@plt>
  4189e8:	sub	x9, x29, #0x68
  4189ec:	add	x8, x29, #0x60
  4189f0:	add	x9, x9, #0x28
  4189f4:	mov	x10, sp
  4189f8:	stp	x8, x9, [x29, #-32]
  4189fc:	mov	x8, #0xffffffffffffffd8    	// #-40
  418a00:	movk	x8, #0xff80, lsl #32
  418a04:	add	x9, x10, #0x80
  418a08:	stp	x9, x8, [x29, #-16]
  418a0c:	ldp	q0, q1, [x29, #-32]
  418a10:	add	x21, x22, x0
  418a14:	sub	x2, x29, #0x40
  418a18:	mov	x0, x21
  418a1c:	mov	x1, x19
  418a20:	stp	q0, q1, [x29, #-64]
  418a24:	bl	406d70 <vsprintf@plt>
  418a28:	mov	x0, x21
  418a2c:	mov	x1, x20
  418a30:	bl	406a60 <strcat@plt>
  418a34:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  418a38:	ldr	x1, [x8, #1536]
  418a3c:	mov	w0, #0x1                   	// #1
  418a40:	bl	4184dc <outputs@@Base>
  418a44:	mov	w0, #0x2                   	// #2
  418a48:	bl	4168f8 <die@@Base>

0000000000418a4c <perror_with_name@@Base>:
  418a4c:	stp	x29, x30, [sp, #-48]!
  418a50:	stp	x22, x21, [sp, #16]
  418a54:	stp	x20, x19, [sp, #32]
  418a58:	mov	x29, sp
  418a5c:	mov	x19, x1
  418a60:	mov	x20, x0
  418a64:	bl	406eb0 <__errno_location@plt>
  418a68:	ldr	w0, [x0]
  418a6c:	bl	406b50 <strerror@plt>
  418a70:	mov	x21, x0
  418a74:	mov	x0, x20
  418a78:	bl	406790 <strlen@plt>
  418a7c:	mov	x22, x0
  418a80:	mov	x0, x19
  418a84:	bl	406790 <strlen@plt>
  418a88:	add	x22, x0, x22
  418a8c:	mov	x0, x21
  418a90:	bl	406790 <strlen@plt>
  418a94:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418a98:	add	x22, x22, x0
  418a9c:	add	x1, x1, #0x8a0
  418aa0:	mov	w2, #0x5                   	// #5
  418aa4:	mov	x0, xzr
  418aa8:	bl	406e10 <dcgettext@plt>
  418aac:	mov	x1, x22
  418ab0:	mov	x3, x20
  418ab4:	mov	x4, x19
  418ab8:	mov	x5, x21
  418abc:	ldp	x20, x19, [sp, #32]
  418ac0:	ldp	x22, x21, [sp, #16]
  418ac4:	mov	x2, x0
  418ac8:	mov	x0, xzr
  418acc:	ldp	x29, x30, [sp], #48
  418ad0:	b	418744 <error@@Base>

0000000000418ad4 <out_of_memory@@Base>:
  418ad4:	stp	x29, x30, [sp, #-48]!
  418ad8:	str	x21, [sp, #16]
  418adc:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  418ae0:	ldr	x0, [x21, #2512]
  418ae4:	stp	x20, x19, [sp, #32]
  418ae8:	mov	x29, sp
  418aec:	bl	406940 <fileno@plt>
  418af0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  418af4:	ldr	x19, [x8, #40]
  418af8:	mov	w20, w0
  418afc:	mov	x0, x19
  418b00:	bl	406790 <strlen@plt>
  418b04:	mov	x2, x0
  418b08:	mov	w0, w20
  418b0c:	mov	x1, x19
  418b10:	bl	4179d4 <writebuf@@Base>
  418b14:	ldr	x0, [x21, #2512]
  418b18:	bl	406940 <fileno@plt>
  418b1c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418b20:	add	x1, x1, #0x8a9
  418b24:	mov	w2, #0x1f                  	// #31
  418b28:	bl	4179d4 <writebuf@@Base>
  418b2c:	mov	w0, #0x2                   	// #2
  418b30:	bl	4067b0 <exit@plt>
  418b34:	sub	sp, sp, #0x130
  418b38:	stp	x20, x19, [sp, #288]
  418b3c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  418b40:	ldr	x0, [x20, #2512]
  418b44:	stp	x29, x30, [sp, #256]
  418b48:	str	x28, [sp, #272]
  418b4c:	add	x29, sp, #0x100
  418b50:	bl	406940 <fileno@plt>
  418b54:	mov	w1, #0x1                   	// #1
  418b58:	bl	42388c <rpl_fcntl@@Base>
  418b5c:	cmn	w0, #0x1
  418b60:	b.ne	418bc4 <out_of_memory@@Base+0xf0>  // b.any
  418b64:	bl	406eb0 <__errno_location@plt>
  418b68:	ldr	w8, [x0]
  418b6c:	cmp	w8, #0x9
  418b70:	b.ne	418bc4 <out_of_memory@@Base+0xf0>  // b.any
  418b74:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  418b78:	mov	x19, x0
  418b7c:	ldr	x0, [x20, #2488]
  418b80:	bl	406940 <fileno@plt>
  418b84:	mov	w1, #0x1                   	// #1
  418b88:	bl	42388c <rpl_fcntl@@Base>
  418b8c:	cmn	w0, #0x1
  418b90:	b.ne	418c40 <out_of_memory@@Base+0x16c>  // b.any
  418b94:	ldr	w8, [x19]
  418b98:	cmp	w8, #0x9
  418b9c:	b.ne	418c40 <out_of_memory@@Base+0x16c>  // b.any
  418ba0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  418ba4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418ba8:	add	x0, x0, #0xa09
  418bac:	add	x1, x1, #0xa22
  418bb0:	bl	418a4c <perror_with_name@@Base>
  418bb4:	mov	w0, wzr
  418bb8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  418bbc:	str	wzr, [x8, #3304]
  418bc0:	b	418c2c <out_of_memory@@Base+0x158>
  418bc4:	ldr	x0, [x20, #2512]
  418bc8:	bl	406940 <fileno@plt>
  418bcc:	ldr	x8, [x20, #2512]
  418bd0:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  418bd4:	str	w0, [x9, #2400]
  418bd8:	mov	x0, x8
  418bdc:	bl	406940 <fileno@plt>
  418be0:	add	x1, sp, #0x80
  418be4:	bl	423d40 <__libc_csu_fini@@Base+0x28>
  418be8:	cbnz	w0, 418c28 <out_of_memory@@Base+0x154>
  418bec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  418bf0:	ldr	x0, [x8, #2488]
  418bf4:	bl	406940 <fileno@plt>
  418bf8:	mov	x1, sp
  418bfc:	bl	423d40 <__libc_csu_fini@@Base+0x28>
  418c00:	cbnz	w0, 418c28 <out_of_memory@@Base+0x154>
  418c04:	ldr	x8, [sp, #128]
  418c08:	ldr	x9, [sp]
  418c0c:	cmp	x8, x9
  418c10:	b.ne	418c28 <out_of_memory@@Base+0x154>  // b.any
  418c14:	ldr	x8, [sp, #136]
  418c18:	ldr	x9, [sp, #8]
  418c1c:	cmp	x8, x9
  418c20:	cset	w0, eq  // eq = none
  418c24:	b	418c2c <out_of_memory@@Base+0x158>
  418c28:	mov	w0, wzr
  418c2c:	ldp	x20, x19, [sp, #288]
  418c30:	ldr	x28, [sp, #272]
  418c34:	ldp	x29, x30, [sp, #256]
  418c38:	add	sp, sp, #0x130
  418c3c:	ret
  418c40:	ldr	x0, [x20, #2488]
  418c44:	bl	406940 <fileno@plt>
  418c48:	mov	w8, w0
  418c4c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  418c50:	mov	w0, wzr
  418c54:	str	w8, [x9, #2400]
  418c58:	b	418c2c <out_of_memory@@Base+0x158>

0000000000418c5c <read_all_makefiles@@Base>:
  418c5c:	sub	sp, sp, #0x50
  418c60:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  418c64:	ldr	x8, [x8, #2440]
  418c68:	stp	x29, x30, [sp, #16]
  418c6c:	stp	x24, x23, [sp, #32]
  418c70:	stp	x22, x21, [sp, #48]
  418c74:	stp	x20, x19, [sp, #64]
  418c78:	ldr	x5, [x8, #8]
  418c7c:	mov	x19, x0
  418c80:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  418c84:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  418c88:	add	x0, x0, #0x802
  418c8c:	add	x2, x2, #0x5eb
  418c90:	mov	w1, #0xd                   	// #13
  418c94:	mov	w3, #0x2                   	// #2
  418c98:	mov	w4, wzr
  418c9c:	mov	x6, xzr
  418ca0:	add	x29, sp, #0x10
  418ca4:	bl	420860 <define_variable_in_set@@Base>
  418ca8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  418cac:	ldrb	w8, [x8, #3236]
  418cb0:	tbz	w8, #0, 418cd8 <read_all_makefiles@@Base+0x7c>
  418cb4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418cb8:	add	x1, x1, #0xa98
  418cbc:	mov	w2, #0x5                   	// #5
  418cc0:	mov	x0, xzr
  418cc4:	bl	406e10 <dcgettext@plt>
  418cc8:	bl	406ea0 <printf@plt>
  418ccc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  418cd0:	ldr	x0, [x8, #2512]
  418cd4:	bl	406d40 <fflush@plt>
  418cd8:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  418cdc:	ldr	w22, [x21, #88]
  418ce0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  418ce4:	add	x0, x0, #0xaae
  418ce8:	mov	x1, xzr
  418cec:	str	wzr, [x21, #88]
  418cf0:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  418cf4:	mov	x20, x0
  418cf8:	str	w22, [x21, #88]
  418cfc:	str	x0, [sp, #8]
  418d00:	add	x0, sp, #0x8
  418d04:	mov	x1, sp
  418d08:	bl	417970 <find_next_token@@Base>
  418d0c:	cbz	x0, 418d38 <read_all_makefiles@@Base+0xdc>
  418d10:	ldr	x8, [sp, #8]
  418d14:	ldrb	w9, [x8]
  418d18:	cbz	w9, 418d28 <read_all_makefiles@@Base+0xcc>
  418d1c:	add	x9, x8, #0x1
  418d20:	str	x9, [sp, #8]
  418d24:	strb	wzr, [x8]
  418d28:	bl	42016c <strcache_add@@Base>
  418d2c:	mov	w1, #0x7                   	// #7
  418d30:	bl	418e84 <read_all_makefiles@@Base+0x228>
  418d34:	b	418d00 <read_all_makefiles@@Base+0xa4>
  418d38:	mov	x0, x20
  418d3c:	bl	406cb0 <free@plt>
  418d40:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  418d44:	cbz	x19, 418da8 <read_all_makefiles@@Base+0x14c>
  418d48:	ldr	x0, [x19]
  418d4c:	cbz	x0, 418da8 <read_all_makefiles@@Base+0x14c>
  418d50:	adrp	x20, 426000 <_IO_stdin_used@@Base+0x2290>
  418d54:	mov	x23, xzr
  418d58:	add	x20, x20, #0x5eb
  418d5c:	mov	w1, wzr
  418d60:	bl	418e84 <read_all_makefiles@@Base+0x228>
  418d64:	mov	x21, x0
  418d68:	bl	406eb0 <__errno_location@plt>
  418d6c:	ldr	w8, [x0]
  418d70:	cbz	w8, 418d80 <read_all_makefiles@@Base+0x124>
  418d74:	ldr	x1, [x19, x23, lsl #3]
  418d78:	mov	x0, x20
  418d7c:	bl	418a4c <perror_with_name@@Base>
  418d80:	ldr	x8, [x21, #8]
  418d84:	cbnz	x8, 418d90 <read_all_makefiles@@Base+0x134>
  418d88:	ldr	x8, [x21, #16]
  418d8c:	ldr	x8, [x8]
  418d90:	add	x9, x19, x23, lsl #3
  418d94:	ldr	x0, [x9, #8]
  418d98:	add	x23, x23, #0x1
  418d9c:	str	x8, [x9]
  418da0:	cbnz	x0, 418d5c <read_all_makefiles@@Base+0x100>
  418da4:	cbnz	w23, 418e68 <read_all_makefiles@@Base+0x20c>
  418da8:	adrp	x19, 428000 <_IO_stdin_used@@Base+0x4290>
  418dac:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  418db0:	add	x19, x19, #0xa50
  418db4:	add	x0, x0, #0xabb
  418db8:	bl	409134 <file_exists_p@@Base>
  418dbc:	cbnz	w0, 418dcc <read_all_makefiles@@Base+0x170>
  418dc0:	ldr	x0, [x19, #8]!
  418dc4:	cbnz	x0, 418db8 <read_all_makefiles@@Base+0x15c>
  418dc8:	b	418dfc <read_all_makefiles@@Base+0x1a0>
  418dcc:	ldr	x0, [x19]
  418dd0:	cbz	x0, 418dfc <read_all_makefiles@@Base+0x1a0>
  418dd4:	mov	w1, wzr
  418dd8:	bl	418e84 <read_all_makefiles@@Base+0x228>
  418ddc:	bl	406eb0 <__errno_location@plt>
  418de0:	ldr	w8, [x0]
  418de4:	cbz	w8, 418e68 <read_all_makefiles@@Base+0x20c>
  418de8:	ldr	x1, [x19]
  418dec:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  418df0:	add	x0, x0, #0x5eb
  418df4:	bl	418a4c <perror_with_name@@Base>
  418df8:	b	418e68 <read_all_makefiles@@Base+0x20c>
  418dfc:	ldr	x8, [x22, #1560]
  418e00:	mov	x20, x8
  418e04:	cbz	x8, 418e10 <read_all_makefiles@@Base+0x1b4>
  418e08:	ldr	x8, [x20]
  418e0c:	cbnz	x8, 418e00 <read_all_makefiles@@Base+0x1a4>
  418e10:	adrp	x21, 428000 <_IO_stdin_used@@Base+0x4290>
  418e14:	adrp	x24, 43e000 <stdio_traced@@Base+0x1a38>
  418e18:	add	x21, x21, #0xa58
  418e1c:	mov	w23, #0x4                   	// #4
  418e20:	add	x24, x24, #0x618
  418e24:	mov	w0, #0x40                  	// #64
  418e28:	bl	4178ac <xcalloc@@Base>
  418e2c:	ldur	x8, [x21, #-8]
  418e30:	mov	x19, x0
  418e34:	mov	x0, x8
  418e38:	bl	42016c <strcache_add@@Base>
  418e3c:	bl	40a5f4 <enter_file@@Base>
  418e40:	cmp	x20, #0x0
  418e44:	csel	x8, x24, x20, eq  // eq = none
  418e48:	str	x0, [x19, #16]
  418e4c:	strb	w23, [x19, #32]
  418e50:	str	x19, [x8]
  418e54:	ldr	x8, [x21], #8
  418e58:	mov	x20, x19
  418e5c:	cbnz	x8, 418e24 <read_all_makefiles@@Base+0x1c8>
  418e60:	cbz	x19, 418e68 <read_all_makefiles@@Base+0x20c>
  418e64:	str	xzr, [x19]
  418e68:	ldr	x0, [x22, #1560]
  418e6c:	ldp	x20, x19, [sp, #64]
  418e70:	ldp	x22, x21, [sp, #48]
  418e74:	ldp	x24, x23, [sp, #32]
  418e78:	ldp	x29, x30, [sp, #16]
  418e7c:	add	sp, sp, #0x50
  418e80:	ret
  418e84:	sub	sp, sp, #0xb0
  418e88:	stp	x22, x21, [sp, #144]
  418e8c:	mov	x21, x0
  418e90:	mov	w0, #0x40                  	// #64
  418e94:	stp	x29, x30, [sp, #80]
  418e98:	stp	x28, x27, [sp, #96]
  418e9c:	stp	x26, x25, [sp, #112]
  418ea0:	stp	x24, x23, [sp, #128]
  418ea4:	stp	x20, x19, [sp, #160]
  418ea8:	add	x29, sp, #0x50
  418eac:	mov	w20, w1
  418eb0:	bl	4178ac <xcalloc@@Base>
  418eb4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  418eb8:	ldr	x9, [x8, #1560]
  418ebc:	adrp	x10, 428000 <_IO_stdin_used@@Base+0x4290>
  418ec0:	ldr	q0, [x10, #2608]
  418ec4:	mov	x19, x0
  418ec8:	str	x9, [x0]
  418ecc:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  418ed0:	ldrb	w9, [x9, #3236]
  418ed4:	add	x22, sp, #0x10
  418ed8:	str	x0, [x8, #1560]
  418edc:	str	x21, [sp, #56]
  418ee0:	str	q0, [sp, #64]
  418ee4:	tbnz	w9, #1, 418ef4 <read_all_makefiles@@Base+0x298>
  418ee8:	and	w28, w20, #0xffff
  418eec:	and	w23, w20, #0x8
  418ef0:	b	418f64 <read_all_makefiles@@Base+0x308>
  418ef4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418ef8:	add	x1, x1, #0xaef
  418efc:	mov	w2, #0x5                   	// #5
  418f00:	mov	x0, xzr
  418f04:	bl	406e10 <dcgettext@plt>
  418f08:	mov	x1, x21
  418f0c:	bl	406ea0 <printf@plt>
  418f10:	and	w28, w20, #0xffff
  418f14:	tbnz	w20, #0, 419068 <read_all_makefiles@@Base+0x40c>
  418f18:	tbnz	w28, #1, 419084 <read_all_makefiles@@Base+0x428>
  418f1c:	tbz	w28, #2, 418f38 <read_all_makefiles@@Base+0x2dc>
  418f20:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418f24:	add	x1, x1, #0xb27
  418f28:	mov	w2, #0x5                   	// #5
  418f2c:	mov	x0, xzr
  418f30:	bl	406e10 <dcgettext@plt>
  418f34:	bl	406ea0 <printf@plt>
  418f38:	and	w23, w28, #0x8
  418f3c:	tbz	w28, #3, 418f58 <read_all_makefiles@@Base+0x2fc>
  418f40:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  418f44:	add	x1, x1, #0xb35
  418f48:	mov	w2, #0x5                   	// #5
  418f4c:	mov	x0, xzr
  418f50:	bl	406e10 <dcgettext@plt>
  418f54:	bl	406ea0 <printf@plt>
  418f58:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  418f5c:	add	x0, x0, #0x375
  418f60:	bl	406c00 <puts@plt>
  418f64:	add	x26, x22, #0x28
  418f68:	cbnz	w23, 418f90 <read_all_makefiles@@Base+0x334>
  418f6c:	ldrb	w8, [x21]
  418f70:	cmp	w8, #0x7e
  418f74:	b.ne	418f90 <read_all_makefiles@@Base+0x334>  // b.any
  418f78:	mov	x0, x21
  418f7c:	bl	41afd4 <tilde_expand@@Base>
  418f80:	cmp	x0, #0x0
  418f84:	mov	x24, x0
  418f88:	csel	x21, x21, x0, eq  // eq = none
  418f8c:	b	418f94 <read_all_makefiles@@Base+0x338>
  418f90:	mov	x24, xzr
  418f94:	bl	406eb0 <__errno_location@plt>
  418f98:	adrp	x25, 424000 <_IO_stdin_used@@Base+0x290>
  418f9c:	mov	x23, x0
  418fa0:	add	x25, x25, #0xb3b
  418fa4:	str	wzr, [x0]
  418fa8:	mov	x0, x21
  418fac:	mov	x1, x25
  418fb0:	str	wzr, [x23]
  418fb4:	bl	4069b0 <fopen@plt>
  418fb8:	ldr	w8, [x23]
  418fbc:	cbnz	x0, 418fc8 <read_all_makefiles@@Base+0x36c>
  418fc0:	cmp	w8, #0x4
  418fc4:	b.eq	418fa8 <read_all_makefiles@@Base+0x34c>  // b.none
  418fc8:	cmp	w8, #0x18
  418fcc:	str	x0, [sp, #48]
  418fd0:	str	w8, [x19, #36]
  418fd4:	b.hi	418ff0 <read_all_makefiles@@Base+0x394>  // b.pmore
  418fd8:	mov	w9, #0x1                   	// #1
  418fdc:	mov	w10, #0x1000                	// #4096
  418fe0:	lsl	w9, w9, w8
  418fe4:	movk	w10, #0x180, lsl #16
  418fe8:	tst	w9, w10
  418fec:	b.ne	4191a0 <read_all_makefiles@@Base+0x544>  // b.any
  418ff0:	tbz	w28, #1, 4190b0 <read_all_makefiles@@Base+0x454>
  418ff4:	cbnz	x0, 4190b0 <read_all_makefiles@@Base+0x454>
  418ff8:	ldrb	w8, [x21]
  418ffc:	cmp	w8, #0x2f
  419000:	b.eq	4190b0 <read_all_makefiles@@Base+0x454>  // b.none
  419004:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  419008:	ldr	x8, [x22, #1576]
  41900c:	ldr	x1, [x8]
  419010:	cbz	x1, 4190b0 <read_all_makefiles@@Base+0x454>
  419014:	str	x26, [sp]
  419018:	adrp	x25, 425000 <_IO_stdin_used@@Base+0x1290>
  41901c:	adrp	x26, 424000 <_IO_stdin_used@@Base+0x290>
  419020:	str	w20, [sp, #12]
  419024:	mov	w20, #0x1                   	// #1
  419028:	add	x25, x25, #0x6f7
  41902c:	add	x26, x26, #0xb3b
  419030:	mov	w0, #0x3                   	// #3
  419034:	mov	x2, x25
  419038:	mov	x3, x21
  41903c:	bl	4176dc <concat@@Base>
  419040:	mov	x1, x26
  419044:	mov	x27, x0
  419048:	bl	4069b0 <fopen@plt>
  41904c:	str	x0, [sp, #48]
  419050:	cbnz	x0, 4190a4 <read_all_makefiles@@Base+0x448>
  419054:	ldr	x8, [x22, #1576]
  419058:	ldr	x1, [x8, w20, uxtw #3]
  41905c:	add	w20, w20, #0x1
  419060:	cbnz	x1, 419030 <read_all_makefiles@@Base+0x3d4>
  419064:	b	4190a8 <read_all_makefiles@@Base+0x44c>
  419068:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41906c:	add	x1, x1, #0xb05
  419070:	mov	w2, #0x5                   	// #5
  419074:	mov	x0, xzr
  419078:	bl	406e10 <dcgettext@plt>
  41907c:	bl	406ea0 <printf@plt>
  419080:	tbz	w28, #1, 418f1c <read_all_makefiles@@Base+0x2c0>
  419084:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  419088:	add	x1, x1, #0xb18
  41908c:	mov	w2, #0x5                   	// #5
  419090:	mov	x0, xzr
  419094:	bl	406e10 <dcgettext@plt>
  419098:	bl	406ea0 <printf@plt>
  41909c:	tbnz	w28, #2, 418f20 <read_all_makefiles@@Base+0x2c4>
  4190a0:	b	418f38 <read_all_makefiles@@Base+0x2dc>
  4190a4:	mov	x21, x27
  4190a8:	ldr	w20, [sp, #12]
  4190ac:	ldr	x26, [sp]
  4190b0:	mov	x0, x21
  4190b4:	bl	42016c <strcache_add@@Base>
  4190b8:	mov	x21, x0
  4190bc:	bl	40a568 <lookup_file@@Base>
  4190c0:	str	x0, [x19, #16]
  4190c4:	cbnz	x0, 4190d4 <read_all_makefiles@@Base+0x478>
  4190c8:	mov	x0, x21
  4190cc:	bl	40a5f4 <enter_file@@Base>
  4190d0:	str	x0, [x19, #16]
  4190d4:	ldr	x21, [x0]
  4190d8:	mov	x0, x24
  4190dc:	strb	w20, [x19, #32]
  4190e0:	bl	406cb0 <free@plt>
  4190e4:	ldr	x0, [sp, #48]
  4190e8:	cbz	x0, 419168 <read_all_makefiles@@Base+0x50c>
  4190ec:	str	wzr, [x19, #36]
  4190f0:	bl	406940 <fileno@plt>
  4190f4:	bl	422fc8 <fd_noinherit@@Base>
  4190f8:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  4190fc:	add	x1, x1, #0x802
  419100:	mov	w3, #0x2                   	// #2
  419104:	mov	w4, #0x6                   	// #6
  419108:	mov	x0, x26
  41910c:	mov	x2, x21
  419110:	mov	w5, wzr
  419114:	bl	421154 <do_variable_definition@@Base>
  419118:	mov	w8, #0xc8                  	// #200
  41911c:	mov	w0, #0xc8                  	// #200
  419120:	str	x8, [sp, #40]
  419124:	bl	417888 <xmalloc@@Base>
  419128:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41912c:	ldr	x21, [x20, #1552]
  419130:	mvn	w8, w28
  419134:	stp	x0, x0, [sp, #24]
  419138:	str	x0, [sp, #16]
  41913c:	and	w1, w8, #0x1
  419140:	add	x0, sp, #0x10
  419144:	str	x26, [x20, #1552]
  419148:	bl	4192b4 <eval_buffer@@Base+0xe4>
  41914c:	ldr	x0, [sp, #48]
  419150:	str	x21, [x20, #1552]
  419154:	bl	406980 <fclose@plt>
  419158:	ldr	x0, [sp, #32]
  41915c:	bl	406cb0 <free@plt>
  419160:	str	wzr, [x23]
  419164:	b	41917c <read_all_makefiles@@Base+0x520>
  419168:	ldr	w8, [x19, #36]
  41916c:	mov	w9, #0x1                   	// #1
  419170:	str	w8, [x23]
  419174:	ldr	x8, [x19, #16]
  419178:	str	x9, [x8, #112]
  41917c:	mov	x0, x19
  419180:	ldp	x20, x19, [sp, #160]
  419184:	ldp	x22, x21, [sp, #144]
  419188:	ldp	x24, x23, [sp, #128]
  41918c:	ldp	x26, x25, [sp, #112]
  419190:	ldp	x28, x27, [sp, #96]
  419194:	ldp	x29, x30, [sp, #80]
  419198:	add	sp, sp, #0xb0
  41919c:	ret
  4191a0:	mov	w0, w8
  4191a4:	bl	406b50 <strerror@plt>
  4191a8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4191ac:	ldr	x19, [x8, #1552]
  4191b0:	mov	x20, x0
  4191b4:	bl	406790 <strlen@plt>
  4191b8:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  4191bc:	mov	x1, x0
  4191c0:	add	x2, x2, #0x96c
  4191c4:	mov	x0, x19
  4191c8:	mov	x3, x20
  4191cc:	bl	4188bc <fatal@@Base>

00000000004191d0 <eval_buffer@@Base>:
  4191d0:	sub	sp, sp, #0x90
  4191d4:	stp	x29, x30, [sp, #96]
  4191d8:	stp	x22, x21, [sp, #112]
  4191dc:	stp	x20, x19, [sp, #128]
  4191e0:	add	x29, sp, #0x60
  4191e4:	mov	x19, x1
  4191e8:	mov	x20, x0
  4191ec:	bl	406790 <strlen@plt>
  4191f0:	stp	x20, x0, [sp, #48]
  4191f4:	stp	x20, x20, [sp, #32]
  4191f8:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  4191fc:	str	xzr, [sp, #64]
  419200:	cbz	x19, 41921c <eval_buffer@@Base+0x4c>
  419204:	ldr	x8, [x19, #16]
  419208:	ldr	q0, [x19]
  41920c:	ldr	x19, [x20, #1552]
  419210:	str	x8, [sp, #88]
  419214:	stur	q0, [sp, #72]
  419218:	b	419250 <eval_buffer@@Base+0x80>
  41921c:	ldr	x19, [x20, #1552]
  419220:	cbz	x19, 419240 <eval_buffer@@Base+0x70>
  419224:	ldr	x8, [x19, #16]
  419228:	ldr	q0, [x19]
  41922c:	add	x9, sp, #0x20
  419230:	add	x9, x9, #0x28
  419234:	str	x8, [x9, #16]
  419238:	str	q0, [x9]
  41923c:	b	419250 <eval_buffer@@Base+0x80>
  419240:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  419244:	ldr	q0, [x8, #2608]
  419248:	str	xzr, [sp, #72]
  41924c:	str	q0, [sp, #80]
  419250:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  419254:	add	x8, sp, #0x20
  419258:	ldr	x22, [x21, #2408]
  41925c:	add	x8, x8, #0x28
  419260:	str	x8, [x20, #1552]
  419264:	add	x8, sp, #0x8
  419268:	add	x0, sp, #0x20
  41926c:	mov	w1, #0x1                   	// #1
  419270:	stp	xzr, xzr, [sp, #16]
  419274:	str	xzr, [sp, #8]
  419278:	str	x8, [x21, #2408]
  41927c:	bl	4192b4 <eval_buffer@@Base+0xe4>
  419280:	ldr	x8, [x21, #2408]
  419284:	ldr	x0, [x8, #8]
  419288:	bl	406cb0 <free@plt>
  41928c:	ldr	x8, [x21, #2408]
  419290:	ldr	x0, [x8, #16]
  419294:	bl	406cb0 <free@plt>
  419298:	str	x22, [x21, #2408]
  41929c:	str	x19, [x20, #1552]
  4192a0:	ldp	x20, x19, [sp, #128]
  4192a4:	ldp	x22, x21, [sp, #112]
  4192a8:	ldp	x29, x30, [sp, #96]
  4192ac:	add	sp, sp, #0x90
  4192b0:	ret
  4192b4:	sub	sp, sp, #0x1a0
  4192b8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4192bc:	ldrb	w8, [x8, #2392]
  4192c0:	stp	x29, x30, [sp, #320]
  4192c4:	stp	x28, x27, [sp, #336]
  4192c8:	stp	x26, x25, [sp, #352]
  4192cc:	stp	x24, x23, [sp, #368]
  4192d0:	stp	x22, x21, [sp, #384]
  4192d4:	stp	x20, x19, [sp, #400]
  4192d8:	mov	x9, x0
  4192dc:	str	w8, [sp, #80]
  4192e0:	ldr	x8, [x9, #40]!
  4192e4:	add	x29, sp, #0x140
  4192e8:	mov	x23, x0
  4192ec:	mov	w0, #0xc8                  	// #200
  4192f0:	stur	x8, [x29, #-104]
  4192f4:	mov	w8, #0xc8                  	// #200
  4192f8:	mov	w19, w1
  4192fc:	str	x9, [sp, #144]
  419300:	str	x8, [sp, #56]
  419304:	bl	417888 <xmalloc@@Base>
  419308:	cmp	w19, #0x0
  41930c:	mov	w8, #0x1                   	// #1
  419310:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  419314:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  419318:	stp	wzr, w8, [sp, #84]
  41931c:	cset	w8, eq  // eq = none
  419320:	mov	x22, xzr
  419324:	mov	w26, wzr
  419328:	mov	x24, xzr
  41932c:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  419330:	add	x27, x27, #0xb6c
  419334:	mov	w20, #0x5                   	// #5
  419338:	add	x21, x21, #0xcf0
  41933c:	stp	w19, w8, [sp, #48]
  419340:	mov	w8, #0x1                   	// #1
  419344:	stp	xzr, x0, [sp, #96]
  419348:	stp	xzr, xzr, [sp, #64]
  41934c:	stp	xzr, xzr, [sp, #112]
  419350:	str	wzr, [sp, #152]
  419354:	str	wzr, [sp, #136]
  419358:	str	wzr, [sp, #128]
  41935c:	str	xzr, [sp, #160]
  419360:	str	w8, [sp, #92]
  419364:	ldr	x8, [x23, #48]
  419368:	mov	x0, x23
  41936c:	add	x8, x8, x22
  419370:	str	x8, [x23, #48]
  419374:	bl	41b7b0 <parse_file_seq@@Base+0x69c>
  419378:	mov	x22, x0
  41937c:	tbnz	x0, #63, 4193ec <eval_buffer@@Base+0x21c>
  419380:	ldr	x8, [x23, #48]
  419384:	ldr	x25, [x23]
  419388:	cmp	x8, #0x1
  41938c:	b.ne	419408 <eval_buffer@@Base+0x238>  // b.any
  419390:	ldrb	w19, [x25]
  419394:	cmp	w19, #0xef
  419398:	b.ne	41940c <eval_buffer@@Base+0x23c>  // b.any
  41939c:	ldrb	w8, [x25, #1]
  4193a0:	cmp	w8, #0xbb
  4193a4:	b.ne	419408 <eval_buffer@@Base+0x238>  // b.any
  4193a8:	ldrb	w8, [x25, #2]
  4193ac:	cmp	w8, #0xbf
  4193b0:	b.ne	419408 <eval_buffer@@Base+0x238>  // b.any
  4193b4:	ldrb	w8, [x28, #3236]
  4193b8:	add	x25, x25, #0x3
  4193bc:	tbz	w8, #0, 419408 <eval_buffer@@Base+0x238>
  4193c0:	ldr	x19, [sp, #144]
  4193c4:	ldr	x8, [x19]
  4193c8:	cbz	x8, 4193f4 <eval_buffer@@Base+0x224>
  4193cc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4193d0:	mov	w2, #0x5                   	// #5
  4193d4:	mov	x0, xzr
  4193d8:	add	x1, x1, #0xb47
  4193dc:	bl	406e10 <dcgettext@plt>
  4193e0:	ldr	x1, [x19]
  4193e4:	bl	406ea0 <printf@plt>
  4193e8:	b	419408 <eval_buffer@@Base+0x238>
  4193ec:	mov	w25, #0x3                   	// #3
  4193f0:	b	419a88 <eval_buffer@@Base+0x8b8>
  4193f4:	mov	w2, #0x5                   	// #5
  4193f8:	mov	x0, xzr
  4193fc:	mov	x1, x27
  419400:	bl	406e10 <dcgettext@plt>
  419404:	bl	406ea0 <printf@plt>
  419408:	ldrb	w19, [x25]
  41940c:	cbz	w19, 419a84 <eval_buffer@@Base+0x8b4>
  419410:	mov	x0, x25
  419414:	bl	406790 <strlen@plt>
  419418:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41941c:	ldrb	w8, [x8, #2392]
  419420:	cmp	w19, w8
  419424:	mov	x19, x0
  419428:	b.ne	41944c <eval_buffer@@Base+0x27c>  // b.any
  41942c:	ldr	w8, [sp, #152]
  419430:	cbnz	w8, 419a84 <eval_buffer@@Base+0x8b4>
  419434:	ldr	x8, [sp, #120]
  419438:	cbz	x8, 41944c <eval_buffer@@Base+0x27c>
  41943c:	ldr	w8, [sp, #128]
  419440:	cbz	w8, 41969c <eval_buffer@@Base+0x4cc>
  419444:	str	wzr, [sp, #152]
  419448:	b	419a84 <eval_buffer@@Base+0x8b4>
  41944c:	ldr	x8, [sp, #160]
  419450:	add	x19, x19, #0x1
  419454:	cmp	x8, x19
  419458:	b.cs	419474 <eval_buffer@@Base+0x2a4>  // b.hs, b.nlast
  41945c:	mov	x0, x24
  419460:	bl	406cb0 <free@plt>
  419464:	mov	x0, x19
  419468:	bl	417888 <xmalloc@@Base>
  41946c:	mov	x24, x0
  419470:	str	x19, [sp, #160]
  419474:	mov	x0, x24
  419478:	mov	x1, x25
  41947c:	bl	406d50 <strcpy@plt>
  419480:	bl	417520 <collapse_continuations@@Base>
  419484:	mov	w1, #0x4008                	// #16392
  419488:	mov	x0, x24
  41948c:	bl	41b634 <parse_file_seq@@Base+0x520>
  419490:	cbz	x0, 419498 <eval_buffer@@Base+0x2c8>
  419494:	strb	wzr, [x0]
  419498:	sub	x0, x24, #0x1
  41949c:	stp	x24, x22, [x29, #-152]
  4194a0:	ldrb	w8, [x0, #1]!
  4194a4:	ldrh	w8, [x21, x8, lsl #1]
  4194a8:	tst	w8, #0x6
  4194ac:	b.ne	4194a0 <eval_buffer@@Base+0x2d0>  // b.any
  4194b0:	sub	x1, x29, #0x78
  4194b4:	bl	41b9fc <parse_file_seq@@Base+0x8e8>
  4194b8:	ldurb	w24, [x29, #-120]
  4194bc:	mov	x22, x0
  4194c0:	tbnz	w24, #0, 419550 <eval_buffer@@Base+0x380>
  4194c4:	ldrb	w8, [x22]
  4194c8:	cbz	w8, 419574 <eval_buffer@@Base+0x3a4>
  4194cc:	mov	x0, x22
  4194d0:	bl	417930 <end_of_token@@Base>
  4194d4:	sub	x1, x0, x22
  4194d8:	stur	x0, [x29, #-112]
  4194dc:	stur	x1, [x29, #-80]
  4194e0:	ldrb	w8, [x0]
  4194e4:	ldur	x24, [x29, #-152]
  4194e8:	ldrh	w19, [x21, x8, lsl #1]
  4194ec:	tst	w19, #0x6
  4194f0:	b.eq	41950c <eval_buffer@@Base+0x33c>  // b.none
  4194f4:	add	x8, x0, #0x1
  4194f8:	stur	x8, [x29, #-112]
  4194fc:	ldrb	w9, [x8], #1
  419500:	ldrh	w19, [x21, x9, lsl #1]
  419504:	tst	w19, #0x6
  419508:	b.ne	4194f8 <eval_buffer@@Base+0x328>  // b.any
  41950c:	ldr	w8, [sp, #136]
  419510:	cbz	w8, 4195e4 <eval_buffer@@Base+0x414>
  419514:	cmp	x1, #0x5
  419518:	b.ne	4196f0 <eval_buffer@@Base+0x520>  // b.any
  41951c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  419520:	mov	w2, #0x5                   	// #5
  419524:	add	x0, x0, #0xb93
  419528:	mov	x1, x22
  41952c:	bl	406a30 <strncmp@plt>
  419530:	mov	w8, #0x9                   	// #9
  419534:	cmp	w0, #0x0
  419538:	and	w8, w19, w8
  41953c:	ccmp	w8, #0x0, #0x4, eq  // eq = none
  419540:	ldr	w8, [sp, #136]
  419544:	csel	w8, w8, wzr, eq  // eq = none
  419548:	str	w8, [sp, #136]
  41954c:	b	4196f0 <eval_buffer@@Base+0x520>
  419550:	tst	w24, #0x10
  419554:	mov	w8, #0x2                   	// #2
  419558:	csel	w25, w8, w20, eq  // eq = none
  41955c:	ldr	w8, [sp, #128]
  419560:	cbz	w8, 41957c <eval_buffer@@Base+0x3ac>
  419564:	ldr	w8, [sp, #136]
  419568:	tst	w24, #0x2
  41956c:	csinc	w8, w8, wzr, eq  // eq = none
  419570:	str	w8, [sp, #136]
  419574:	ldp	x24, x22, [x29, #-152]
  419578:	b	419a84 <eval_buffer@@Base+0x8b4>
  41957c:	ldr	x0, [sp, #120]
  419580:	cbz	x0, 4195bc <eval_buffer@@Base+0x3ec>
  419584:	ldp	w8, w5, [sp, #88]
  419588:	ldp	x2, x6, [sp, #96]
  41958c:	ldp	x3, x4, [sp, #64]
  419590:	ldr	x7, [sp, #112]
  419594:	mov	w8, w8
  419598:	stp	x8, xzr, [x29, #-96]
  41959c:	sub	x8, x29, #0x68
  4195a0:	str	x8, [sp, #16]
  4195a4:	ldr	w8, [sp, #80]
  4195a8:	mov	w1, w26
  4195ac:	strb	w8, [sp, #8]
  4195b0:	ldr	w8, [sp, #84]
  4195b4:	str	w8, [sp]
  4195b8:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  4195bc:	tbnz	w24, #2, 419614 <eval_buffer@@Base+0x444>
  4195c0:	ldr	x19, [sp, #144]
  4195c4:	tbnz	w24, #1, 4196f8 <eval_buffer@@Base+0x528>
  4195c8:	mov	x0, x19
  4195cc:	mov	x1, x22
  4195d0:	mov	w2, w25
  4195d4:	mov	w3, wzr
  4195d8:	bl	422100 <try_variable_definition@@Base>
  4195dc:	mov	x19, x0
  4195e0:	b	419a2c <eval_buffer@@Base+0x85c>
  4195e4:	ldr	x2, [sp, #144]
  4195e8:	mov	x0, x22
  4195ec:	bl	41c4bc <parse_file_seq@@Base+0x13a8>
  4195f0:	cmn	w0, #0x2
  4195f4:	b.eq	4196e4 <eval_buffer@@Base+0x514>  // b.none
  4195f8:	ldur	x22, [x29, #-144]
  4195fc:	cmn	w0, #0x1
  419600:	b.eq	41aa60 <eval_buffer@@Base+0x1890>  // b.none
  419604:	str	wzr, [sp, #136]
  419608:	mov	w25, #0x2                   	// #2
  41960c:	str	w0, [sp, #128]
  419610:	b	419a88 <eval_buffer@@Base+0x8b8>
  419614:	mov	x0, x22
  419618:	mov	x1, xzr
  41961c:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  419620:	mov	x19, x0
  419624:	bl	417950 <next_token@@Base>
  419628:	ldrb	w8, [x0]
  41962c:	cbz	w8, 41aa6c <eval_buffer@@Base+0x189c>
  419630:	mov	x20, x0
  419634:	bl	406790 <strlen@plt>
  419638:	ldp	x24, x22, [x29, #-152]
  41963c:	add	x8, x20, x0
  419640:	sub	x10, x8, #0x1
  419644:	mov	x8, x10
  419648:	subs	x9, x10, x20
  41964c:	b.ls	419660 <eval_buffer@@Base+0x490>  // b.plast
  419650:	mov	x10, x8
  419654:	ldrb	w11, [x10], #-1
  419658:	ldrh	w11, [x21, x11, lsl #1]
  41965c:	tbnz	w11, #1, 419644 <eval_buffer@@Base+0x474>
  419660:	add	x1, x9, #0x1
  419664:	mov	x0, x20
  419668:	mov	w2, w25
  41966c:	mov	x3, xzr
  419670:	strb	wzr, [x8, #1]
  419674:	bl	420b14 <undefine_variable_in_set@@Base>
  419678:	mov	x0, x19
  41967c:	bl	406cb0 <free@plt>
  419680:	str	xzr, [sp, #96]
  419684:	stp	xzr, xzr, [sp, #112]
  419688:	mov	w26, wzr
  41968c:	str	wzr, [sp, #152]
  419690:	str	wzr, [sp, #128]
  419694:	mov	w25, #0x2                   	// #2
  419698:	b	4197b4 <eval_buffer@@Base+0x5e4>
  41969c:	ldr	x9, [sp, #112]
  4196a0:	mov	x27, x28
  4196a4:	mov	x28, x22
  4196a8:	str	w26, [sp, #44]
  4196ac:	cbnz	x9, 4196b8 <eval_buffer@@Base+0x4e8>
  4196b0:	ldr	w8, [x23, #48]
  4196b4:	str	w8, [sp, #92]
  4196b8:	ldr	x8, [sp, #56]
  4196bc:	add	x22, x19, x9
  4196c0:	mov	x26, x24
  4196c4:	cmp	x22, x8
  4196c8:	b.ls	419764 <eval_buffer@@Base+0x594>  // b.plast
  4196cc:	ldr	x0, [sp, #104]
  4196d0:	lsl	x1, x22, #1
  4196d4:	str	x1, [sp, #56]
  4196d8:	bl	417854 <xrealloc@@Base>
  4196dc:	mov	x24, x0
  4196e0:	b	419768 <eval_buffer@@Base+0x598>
  4196e4:	ldr	w8, [sp, #128]
  4196e8:	cbz	w8, 4197bc <eval_buffer@@Base+0x5ec>
  4196ec:	str	wzr, [sp, #136]
  4196f0:	ldur	x22, [x29, #-144]
  4196f4:	b	419a84 <eval_buffer@@Base+0x8b4>
  4196f8:	mov	w0, #0x64                  	// #100
  4196fc:	bl	417888 <xmalloc@@Base>
  419700:	ldr	q0, [x19]
  419704:	ldr	x8, [x19, #16]
  419708:	mov	x20, x0
  41970c:	sub	x1, x29, #0x38
  419710:	mov	x0, x22
  419714:	stur	q0, [x29, #-80]
  419718:	stur	x8, [x29, #-64]
  41971c:	bl	421e38 <parse_variable_definition@@Base>
  419720:	cbz	x0, 4197f4 <eval_buffer@@Base+0x624>
  419724:	ldur	x8, [x29, #-48]
  419728:	ldrb	w8, [x8]
  41972c:	cbz	w8, 419754 <eval_buffer@@Base+0x584>
  419730:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  419734:	mov	w2, #0x5                   	// #5
  419738:	mov	x0, xzr
  41973c:	add	x1, x1, #0xf63
  419740:	bl	406e10 <dcgettext@plt>
  419744:	mov	x2, x0
  419748:	sub	x0, x29, #0x50
  41974c:	mov	x1, xzr
  419750:	bl	418744 <error@@Base>
  419754:	ldur	x8, [x29, #-56]
  419758:	ldur	w9, [x29, #-16]
  41975c:	strb	wzr, [x8, x9]
  419760:	b	419804 <eval_buffer@@Base+0x634>
  419764:	ldr	x24, [sp, #104]
  419768:	ldr	x20, [sp, #112]
  41976c:	sub	x19, x19, #0x1
  419770:	add	x1, x25, #0x1
  419774:	mov	x2, x19
  419778:	add	x0, x24, x20
  41977c:	bl	406750 <memcpy@plt>
  419780:	add	x8, x19, x20
  419784:	mov	w9, #0xa                   	// #10
  419788:	stp	x24, x22, [sp, #104]
  41978c:	strb	w9, [x24, x8]
  419790:	mov	x24, x26
  419794:	ldr	w26, [sp, #44]
  419798:	mov	x22, x28
  41979c:	mov	x28, x27
  4197a0:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  4197a4:	str	wzr, [sp, #152]
  4197a8:	str	wzr, [sp, #128]
  4197ac:	mov	w25, #0x2                   	// #2
  4197b0:	add	x27, x27, #0xb6c
  4197b4:	mov	w20, #0x5                   	// #5
  4197b8:	b	419a88 <eval_buffer@@Base+0x8b8>
  4197bc:	ldur	x8, [x29, #-80]
  4197c0:	sub	x8, x8, #0x4
  4197c4:	cmp	x8, #0x4
  4197c8:	b.hi	419c80 <eval_buffer@@Base+0xab0>  // b.pmore
  4197cc:	adrp	x11, 428000 <_IO_stdin_used@@Base+0x4290>
  4197d0:	add	x11, x11, #0xa40
  4197d4:	adr	x9, 4197e4 <eval_buffer@@Base+0x614>
  4197d8:	ldrh	w10, [x11, x8, lsl #1]
  4197dc:	add	x9, x9, x10, lsl #2
  4197e0:	br	x9
  4197e4:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  4197e8:	mov	w2, #0x4                   	// #4
  4197ec:	add	x0, x0, #0x496
  4197f0:	b	419b14 <eval_buffer@@Base+0x944>
  4197f4:	ldur	w8, [x29, #-12]
  4197f8:	and	w8, w8, #0xfc7fffff
  4197fc:	orr	w8, w8, #0x1000000
  419800:	stur	w8, [x29, #-12]
  419804:	mov	x0, x22
  419808:	mov	x1, xzr
  41980c:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  419810:	mov	x19, x0
  419814:	bl	417950 <next_token@@Base>
  419818:	ldrb	w8, [x0]
  41981c:	cbz	w8, 41aa78 <eval_buffer@@Base+0x18a8>
  419820:	mov	x22, x0
  419824:	str	x19, [sp, #128]
  419828:	str	w25, [sp, #152]
  41982c:	bl	406790 <strlen@plt>
  419830:	add	x8, x22, x0
  419834:	sub	x9, x8, #0x1
  419838:	mov	x8, x9
  41983c:	cmp	x9, x22
  419840:	b.ls	419854 <eval_buffer@@Base+0x684>  // b.plast
  419844:	mov	x9, x8
  419848:	ldrb	w10, [x9], #-1
  41984c:	ldrh	w10, [x21, x10, lsl #1]
  419850:	tbnz	w10, #1, 419838 <eval_buffer@@Base+0x668>
  419854:	mov	x0, x23
  419858:	str	x22, [sp, #120]
  41985c:	strb	wzr, [x8, #1]
  419860:	bl	41b7b0 <parse_file_seq@@Base+0x69c>
  419864:	tbnz	x0, #63, 41aa3c <eval_buffer@@Base+0x186c>
  419868:	mov	x28, xzr
  41986c:	mov	w22, #0x1                   	// #1
  419870:	mov	w25, #0x64                  	// #100
  419874:	ldr	x8, [x23, #48]
  419878:	ldr	x19, [x23]
  41987c:	add	x8, x8, x0
  419880:	mov	x0, x19
  419884:	str	x8, [x23, #48]
  419888:	bl	417520 <collapse_continuations@@Base>
  41988c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  419890:	ldrb	w8, [x19]
  419894:	ldrb	w9, [x9, #2392]
  419898:	cmp	w8, w9
  41989c:	b.eq	419970 <eval_buffer@@Base+0x7a0>  // b.none
  4198a0:	mov	x0, x19
  4198a4:	bl	417950 <next_token@@Base>
  4198a8:	mov	x27, x0
  4198ac:	bl	406790 <strlen@plt>
  4198b0:	cmp	x0, #0x6
  4198b4:	b.ne	4198d8 <eval_buffer@@Base+0x708>  // b.any
  4198b8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4198bc:	mov	w2, #0x6                   	// #6
  4198c0:	mov	x0, x27
  4198c4:	add	x1, x1, #0xd0e
  4198c8:	bl	406a30 <strncmp@plt>
  4198cc:	cbnz	w0, 4198ec <eval_buffer@@Base+0x71c>
  4198d0:	add	w22, w22, #0x1
  4198d4:	b	419970 <eval_buffer@@Base+0x7a0>
  4198d8:	cmp	x0, #0x7
  4198dc:	b.cc	4198fc <eval_buffer@@Base+0x72c>  // b.lo, b.ul, b.last
  4198e0:	ldrb	w8, [x27, #6]
  4198e4:	ldrh	w8, [x21, x8, lsl #1]
  4198e8:	tbnz	w8, #1, 4198b8 <eval_buffer@@Base+0x6e8>
  4198ec:	ldrb	w8, [x27, #5]
  4198f0:	ldrh	w8, [x21, x8, lsl #1]
  4198f4:	tbnz	w8, #1, 419904 <eval_buffer@@Base+0x734>
  4198f8:	b	419970 <eval_buffer@@Base+0x7a0>
  4198fc:	cmp	x0, #0x5
  419900:	b.ne	419970 <eval_buffer@@Base+0x7a0>  // b.any
  419904:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  419908:	mov	w2, #0x5                   	// #5
  41990c:	mov	x0, x27
  419910:	add	x1, x1, #0xb93
  419914:	bl	406a30 <strncmp@plt>
  419918:	cbnz	w0, 419970 <eval_buffer@@Base+0x7a0>
  41991c:	add	x27, x27, #0x5
  419920:	mov	w1, #0x4008                	// #16392
  419924:	mov	x0, x27
  419928:	bl	41b634 <parse_file_seq@@Base+0x520>
  41992c:	cbz	x0, 419934 <eval_buffer@@Base+0x764>
  419930:	strb	wzr, [x0]
  419934:	mov	x0, x27
  419938:	bl	417950 <next_token@@Base>
  41993c:	ldrb	w8, [x0]
  419940:	cbz	w8, 419968 <eval_buffer@@Base+0x798>
  419944:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  419948:	mov	w2, #0x5                   	// #5
  41994c:	mov	x0, xzr
  419950:	add	x1, x1, #0xfb3
  419954:	bl	406e10 <dcgettext@plt>
  419958:	mov	x2, x0
  41995c:	ldr	x0, [sp, #144]
  419960:	mov	x1, xzr
  419964:	bl	418744 <error@@Base>
  419968:	subs	w22, w22, #0x1
  41996c:	b.eq	4199d0 <eval_buffer@@Base+0x800>  // b.none
  419970:	mov	x0, x19
  419974:	bl	406790 <strlen@plt>
  419978:	add	x26, x0, x28
  41997c:	add	x24, x26, #0x1
  419980:	mov	x27, x0
  419984:	cmp	x24, x25
  419988:	b.ls	4199a4 <eval_buffer@@Base+0x7d4>  // b.plast
  41998c:	mov	w1, #0x1                   	// #1
  419990:	bfi	x1, x26, #1, #63
  419994:	mov	x0, x20
  419998:	lsl	x25, x26, #1
  41999c:	bl	417854 <xrealloc@@Base>
  4199a0:	mov	x20, x0
  4199a4:	add	x0, x20, x28
  4199a8:	mov	x1, x19
  4199ac:	mov	x2, x27
  4199b0:	bl	406750 <memcpy@plt>
  4199b4:	mov	w8, #0xa                   	// #10
  4199b8:	mov	x0, x23
  4199bc:	strb	w8, [x20, x26]
  4199c0:	bl	41b7b0 <parse_file_seq@@Base+0x69c>
  4199c4:	mov	x28, x24
  4199c8:	tbz	x0, #63, 419874 <eval_buffer@@Base+0x6a4>
  4199cc:	b	41aa3c <eval_buffer@@Base+0x186c>
  4199d0:	add	x8, x28, x20
  4199d4:	sub	x8, x8, #0x1
  4199d8:	cmp	x28, #0x0
  4199dc:	csel	x8, x20, x8, eq  // eq = none
  4199e0:	strb	wzr, [x8]
  4199e4:	ldur	w8, [x29, #-12]
  4199e8:	ldr	x1, [sp, #120]
  4199ec:	ldr	w3, [sp, #152]
  4199f0:	sub	x0, x29, #0x50
  4199f4:	ubfx	w4, w8, #23, #3
  4199f8:	mov	x2, x20
  4199fc:	mov	w5, wzr
  419a00:	bl	421154 <do_variable_definition@@Base>
  419a04:	mov	x19, x0
  419a08:	mov	x0, x20
  419a0c:	bl	406cb0 <free@plt>
  419a10:	ldr	x0, [sp, #128]
  419a14:	bl	406cb0 <free@plt>
  419a18:	ldurb	w24, [x29, #-120]
  419a1c:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  419a20:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  419a24:	add	x27, x27, #0xb6c
  419a28:	mov	w20, #0x5                   	// #5
  419a2c:	ldur	x22, [x29, #-144]
  419a30:	tbz	w24, #3, 419a40 <eval_buffer@@Base+0x870>
  419a34:	ldr	w8, [x19, #44]
  419a38:	and	w8, w8, #0x9fffffff
  419a3c:	str	w8, [x19, #44]
  419a40:	tbnz	w24, #5, 419a60 <eval_buffer@@Base+0x890>
  419a44:	mov	w26, wzr
  419a48:	str	xzr, [sp, #96]
  419a4c:	str	xzr, [sp, #120]
  419a50:	str	wzr, [sp, #152]
  419a54:	str	wzr, [sp, #128]
  419a58:	str	xzr, [sp, #112]
  419a5c:	b	419a80 <eval_buffer@@Base+0x8b0>
  419a60:	stp	xzr, xzr, [sp, #112]
  419a64:	ldr	w8, [x19, #44]
  419a68:	str	xzr, [sp, #96]
  419a6c:	mov	w26, wzr
  419a70:	str	wzr, [sp, #152]
  419a74:	orr	w8, w8, #0x80
  419a78:	str	wzr, [sp, #128]
  419a7c:	str	w8, [x19, #44]
  419a80:	ldur	x24, [x29, #-152]
  419a84:	mov	w25, #0x2                   	// #2
  419a88:	cmp	w25, #0x3
  419a8c:	b.ne	419364 <eval_buffer@@Base+0x194>  // b.any
  419a90:	b	41a9b8 <eval_buffer@@Base+0x17e8>
  419a94:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  419a98:	mov	w2, #0x6                   	// #6
  419a9c:	add	x0, x0, #0xbb9
  419aa0:	mov	x1, x22
  419aa4:	bl	406a30 <strncmp@plt>
  419aa8:	cbnz	w0, 419c80 <eval_buffer@@Base+0xab0>
  419aac:	b	419e90 <eval_buffer@@Base+0xcc0>
  419ab0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  419ab4:	mov	w2, #0x8                   	// #8
  419ab8:	add	x0, x0, #0xbb7
  419abc:	mov	x1, x22
  419ac0:	bl	406a30 <strncmp@plt>
  419ac4:	cbz	w0, 419e90 <eval_buffer@@Base+0xcc0>
  419ac8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  419acc:	mov	w2, #0x8                   	// #8
  419ad0:	add	x0, x0, #0xbc0
  419ad4:	mov	x1, x22
  419ad8:	bl	406a30 <strncmp@plt>
  419adc:	cbz	w0, 419d74 <eval_buffer@@Base+0xba4>
  419ae0:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  419ae4:	mov	w2, #0x8                   	// #8
  419ae8:	add	x0, x0, #0xbc9
  419aec:	b	419c74 <eval_buffer@@Base+0xaa4>
  419af0:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  419af4:	mov	w2, #0x5                   	// #5
  419af8:	add	x0, x0, #0xc96
  419afc:	mov	x1, x22
  419b00:	bl	406a30 <strncmp@plt>
  419b04:	cbz	w0, 41a088 <eval_buffer@@Base+0xeb8>
  419b08:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  419b0c:	mov	w2, #0x5                   	// #5
  419b10:	add	x0, x0, #0x93c
  419b14:	mov	x1, x22
  419b18:	bl	406a30 <strncmp@plt>
  419b1c:	cbnz	w0, 419c80 <eval_buffer@@Base+0xab0>
  419b20:	ldrb	w24, [x22]
  419b24:	ldr	x0, [sp, #120]
  419b28:	cmp	w24, #0x2d
  419b2c:	cset	w19, eq  // eq = none
  419b30:	cbz	x0, 419b6c <eval_buffer@@Base+0x99c>
  419b34:	ldp	w8, w5, [sp, #88]
  419b38:	ldp	x2, x6, [sp, #96]
  419b3c:	ldp	x3, x4, [sp, #64]
  419b40:	ldr	x7, [sp, #112]
  419b44:	mov	w8, w8
  419b48:	stp	x8, xzr, [x29, #-96]
  419b4c:	sub	x8, x29, #0x68
  419b50:	str	x8, [sp, #16]
  419b54:	ldr	w8, [sp, #80]
  419b58:	mov	w1, w26
  419b5c:	strb	w8, [sp, #8]
  419b60:	ldr	w8, [sp, #84]
  419b64:	str	w8, [sp]
  419b68:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  419b6c:	ldur	x0, [x29, #-112]
  419b70:	mov	x1, xzr
  419b74:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  419b78:	ldrb	w8, [x0]
  419b7c:	mov	x22, x0
  419b80:	cbz	w8, 41a284 <eval_buffer@@Base+0x10b4>
  419b84:	sub	x0, x29, #0x70
  419b88:	mov	w1, #0x10                  	// #16
  419b8c:	mov	w2, #0x1                   	// #1
  419b90:	mov	w4, #0x2                   	// #2
  419b94:	mov	x3, xzr
  419b98:	stur	x22, [x29, #-112]
  419b9c:	mov	w25, #0x2                   	// #2
  419ba0:	bl	41b114 <parse_file_seq@@Base>
  419ba4:	mov	x20, x0
  419ba8:	mov	x0, x22
  419bac:	bl	406cb0 <free@plt>
  419bb0:	cbz	x20, 41a2b0 <eval_buffer@@Base+0x10e0>
  419bb4:	ldr	x26, [sp, #144]
  419bb8:	ldp	x27, x8, [x20]
  419bbc:	sub	x1, x29, #0x38
  419bc0:	mov	x0, x26
  419bc4:	mov	w2, w19
  419bc8:	stur	x8, [x29, #-56]
  419bcc:	bl	413d2c <load_file@@Base>
  419bd0:	cmp	w24, #0x2d
  419bd4:	mov	w22, w0
  419bd8:	b.eq	419be0 <eval_buffer@@Base+0xa10>  // b.none
  419bdc:	cbz	w22, 41aa84 <eval_buffer@@Base+0x18b4>
  419be0:	mov	x0, x20
  419be4:	bl	406cb0 <free@plt>
  419be8:	cmn	w22, #0x1
  419bec:	ldur	x22, [x29, #-144]
  419bf0:	b.eq	419c38 <eval_buffer@@Base+0xa68>  // b.none
  419bf4:	mov	w0, #0x40                  	// #64
  419bf8:	bl	4178ac <xcalloc@@Base>
  419bfc:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  419c00:	ldr	x8, [x9, #1560]
  419c04:	mov	x20, x0
  419c08:	str	x8, [x0]
  419c0c:	ldur	x0, [x29, #-56]
  419c10:	str	x20, [x9, #1560]
  419c14:	bl	40a568 <lookup_file@@Base>
  419c18:	str	x0, [x20, #16]
  419c1c:	cbnz	x0, 419c2c <eval_buffer@@Base+0xa5c>
  419c20:	ldur	x0, [x29, #-56]
  419c24:	bl	40a5f4 <enter_file@@Base>
  419c28:	str	x0, [x20, #16]
  419c2c:	ldr	w8, [x0, #136]
  419c30:	orr	w8, w8, #0x40
  419c34:	str	w8, [x0, #136]
  419c38:	mov	w25, #0x2                   	// #2
  419c3c:	mov	x20, x27
  419c40:	cbnz	x27, 419bb8 <eval_buffer@@Base+0x9e8>
  419c44:	ldur	x24, [x29, #-152]
  419c48:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  419c4c:	str	xzr, [sp, #96]
  419c50:	stp	xzr, xzr, [sp, #112]
  419c54:	mov	w26, wzr
  419c58:	str	wzr, [sp, #152]
  419c5c:	str	wzr, [sp, #136]
  419c60:	str	wzr, [sp, #128]
  419c64:	b	4197b0 <eval_buffer@@Base+0x5e0>
  419c68:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  419c6c:	mov	w2, #0x7                   	// #7
  419c70:	add	x0, x0, #0xbc1
  419c74:	mov	x1, x22
  419c78:	bl	406a30 <strncmp@plt>
  419c7c:	cbz	w0, 419d74 <eval_buffer@@Base+0xba4>
  419c80:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  419c84:	ldrb	w8, [x25]
  419c88:	ldrb	w9, [x9, #2392]
  419c8c:	cmp	w8, w9
  419c90:	b.eq	41aaf8 <eval_buffer@@Base+0x1928>  // b.none
  419c94:	ldp	x7, x0, [sp, #112]
  419c98:	cbz	x0, 419cd0 <eval_buffer@@Base+0xb00>
  419c9c:	ldp	w8, w5, [sp, #88]
  419ca0:	ldp	x2, x6, [sp, #96]
  419ca4:	ldp	x3, x4, [sp, #64]
  419ca8:	mov	w1, w26
  419cac:	mov	w8, w8
  419cb0:	stp	x8, xzr, [x29, #-96]
  419cb4:	sub	x8, x29, #0x68
  419cb8:	str	x8, [sp, #16]
  419cbc:	ldr	w8, [sp, #80]
  419cc0:	strb	w8, [sp, #8]
  419cc4:	ldr	w8, [sp, #84]
  419cc8:	str	w8, [sp]
  419ccc:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  419cd0:	ldr	w8, [x23, #48]
  419cd4:	mov	w1, #0x4018                	// #16408
  419cd8:	mov	x0, x25
  419cdc:	str	w8, [sp, #88]
  419ce0:	bl	41b634 <parse_file_seq@@Base+0x520>
  419ce4:	cbz	x0, 419cfc <eval_buffer@@Base+0xb2c>
  419ce8:	ldrb	w8, [x0]
  419cec:	strb	wzr, [x0], #1
  419cf0:	cmp	w8, #0x23
  419cf4:	csel	x19, xzr, x0, eq  // eq = none
  419cf8:	b	419d00 <eval_buffer@@Base+0xb30>
  419cfc:	mov	x19, xzr
  419d00:	mov	x0, x25
  419d04:	bl	417520 <collapse_continuations@@Base>
  419d08:	sub	x1, x29, #0x80
  419d0c:	sub	x2, x29, #0x50
  419d10:	mov	x0, x25
  419d14:	bl	41cb98 <parse_file_seq@@Base+0x1a84>
  419d18:	mov	w28, w0
  419d1c:	cmp	w0, #0x9
  419d20:	b.hi	419f80 <eval_buffer@@Base+0xdb0>  // b.pmore
  419d24:	mov	w8, #0x1                   	// #1
  419d28:	lsl	w8, w8, w28
  419d2c:	mov	w9, #0x330                 	// #816
  419d30:	tst	w8, w9
  419d34:	b.eq	419d5c <eval_buffer@@Base+0xb8c>  // b.none
  419d38:	ldur	x22, [x29, #-144]
  419d3c:	mov	w8, #0x1                   	// #1
  419d40:	str	xzr, [sp, #96]
  419d44:	stp	xzr, xzr, [sp, #112]
  419d48:	mov	w26, wzr
  419d4c:	str	w8, [sp, #152]
  419d50:	mov	w25, #0x2                   	// #2
  419d54:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  419d58:	b	41a170 <eval_buffer@@Base+0xfa0>
  419d5c:	cmp	w28, #0x1
  419d60:	b.ne	419f80 <eval_buffer@@Base+0xdb0>  // b.any
  419d64:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  419d68:	cbnz	x19, 41aab8 <eval_buffer@@Base+0x18e8>
  419d6c:	ldur	x22, [x29, #-144]
  419d70:	b	41a15c <eval_buffer@@Base+0xf8c>
  419d74:	ldrb	w22, [x22]
  419d78:	ldr	x0, [sp, #120]
  419d7c:	cbz	x0, 419db8 <eval_buffer@@Base+0xbe8>
  419d80:	ldp	w8, w5, [sp, #88]
  419d84:	ldp	x2, x6, [sp, #96]
  419d88:	ldp	x3, x4, [sp, #64]
  419d8c:	ldr	x7, [sp, #112]
  419d90:	mov	w8, w8
  419d94:	stp	x8, xzr, [x29, #-96]
  419d98:	sub	x8, x29, #0x68
  419d9c:	str	x8, [sp, #16]
  419da0:	ldr	w8, [sp, #80]
  419da4:	mov	w1, w26
  419da8:	strb	w8, [sp, #8]
  419dac:	ldr	w8, [sp, #84]
  419db0:	str	w8, [sp]
  419db4:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  419db8:	ldur	x0, [x29, #-112]
  419dbc:	mov	x1, xzr
  419dc0:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  419dc4:	ldrb	w8, [x0]
  419dc8:	mov	x20, x0
  419dcc:	cbz	w8, 41a238 <eval_buffer@@Base+0x1068>
  419dd0:	sub	x0, x29, #0x70
  419dd4:	mov	w1, #0x10                  	// #16
  419dd8:	mov	w2, #0x1                   	// #1
  419ddc:	mov	w4, #0x2                   	// #2
  419de0:	mov	x3, xzr
  419de4:	stur	x20, [x29, #-112]
  419de8:	bl	41b114 <parse_file_seq@@Base>
  419dec:	mov	x19, x0
  419df0:	mov	x0, x20
  419df4:	bl	406cb0 <free@plt>
  419df8:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  419dfc:	ldr	x24, [x20, #2408]
  419e00:	sub	x8, x29, #0x38
  419e04:	stp	xzr, xzr, [x29, #-48]
  419e08:	stur	xzr, [x29, #-56]
  419e0c:	str	x8, [x20, #2408]
  419e10:	cbz	x19, 419e74 <eval_buffer@@Base+0xca4>
  419e14:	cmp	w22, #0x69
  419e18:	mov	w8, #0xa                   	// #10
  419e1c:	mov	w9, #0xe                   	// #14
  419e20:	csel	w8, w8, w9, eq  // eq = none
  419e24:	ldr	w9, [sp, #52]
  419e28:	ldr	x26, [sp, #144]
  419e2c:	orr	w20, w8, w9
  419e30:	ldp	x25, x0, [x19]
  419e34:	mov	w1, w20
  419e38:	bl	418e84 <read_all_makefiles@@Base+0x228>
  419e3c:	mov	x22, x0
  419e40:	bl	406eb0 <__errno_location@plt>
  419e44:	ldr	w8, [x0]
  419e48:	cbz	w8, 419e5c <eval_buffer@@Base+0xc8c>
  419e4c:	ldr	x8, [x26, #16]
  419e50:	ldr	q0, [x26]
  419e54:	str	x8, [x22, #56]
  419e58:	stur	q0, [x22, #40]
  419e5c:	mov	x0, x19
  419e60:	bl	406cb0 <free@plt>
  419e64:	mov	x19, x25
  419e68:	cbnz	x25, 419e30 <eval_buffer@@Base+0xc60>
  419e6c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  419e70:	ldr	x8, [x20, #2408]
  419e74:	ldr	x0, [x8, #8]
  419e78:	bl	406cb0 <free@plt>
  419e7c:	ldr	x8, [x20, #2408]
  419e80:	ldr	x0, [x8, #16]
  419e84:	bl	406cb0 <free@plt>
  419e88:	str	x24, [x20, #2408]
  419e8c:	b	41a240 <eval_buffer@@Base+0x1070>
  419e90:	ldrb	w22, [x22]
  419e94:	ldr	x0, [sp, #120]
  419e98:	cmp	w22, #0x75
  419e9c:	cset	w19, ne  // ne = any
  419ea0:	cbz	x0, 419edc <eval_buffer@@Base+0xd0c>
  419ea4:	ldp	w8, w5, [sp, #88]
  419ea8:	ldp	x2, x6, [sp, #96]
  419eac:	ldp	x3, x4, [sp, #64]
  419eb0:	ldr	x7, [sp, #112]
  419eb4:	mov	w8, w8
  419eb8:	stp	x8, xzr, [x29, #-96]
  419ebc:	sub	x8, x29, #0x68
  419ec0:	str	x8, [sp, #16]
  419ec4:	ldr	w8, [sp, #80]
  419ec8:	mov	w1, w26
  419ecc:	strb	w8, [sp, #8]
  419ed0:	ldr	w8, [sp, #84]
  419ed4:	str	w8, [sp]
  419ed8:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  419edc:	ldur	x0, [x29, #-112]
  419ee0:	adrp	x25, 426000 <_IO_stdin_used@@Base+0x2290>
  419ee4:	add	x25, x25, #0x5eb
  419ee8:	ldrb	w8, [x0]
  419eec:	cbz	w8, 41a260 <eval_buffer@@Base+0x1090>
  419ef0:	mov	x1, xzr
  419ef4:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  419ef8:	mov	x19, x0
  419efc:	stur	x0, [x29, #-128]
  419f00:	sub	x0, x29, #0x80
  419f04:	sub	x1, x29, #0x38
  419f08:	bl	417970 <find_next_token@@Base>
  419f0c:	ldr	x24, [sp, #144]
  419f10:	cbz	x0, 419f78 <eval_buffer@@Base+0xda8>
  419f14:	cmp	w22, #0x75
  419f18:	cset	w8, eq  // eq = none
  419f1c:	mov	x20, x0
  419f20:	lsl	w22, w8, #29
  419f24:	ldur	x1, [x29, #-56]
  419f28:	mov	x0, x20
  419f2c:	bl	420c00 <lookup_variable@@Base>
  419f30:	cbnz	x0, 419f54 <eval_buffer@@Base+0xd84>
  419f34:	ldur	x1, [x29, #-56]
  419f38:	mov	w3, #0x2                   	// #2
  419f3c:	mov	x0, x20
  419f40:	mov	x2, x25
  419f44:	mov	w4, wzr
  419f48:	mov	x5, xzr
  419f4c:	mov	x6, x24
  419f50:	bl	420860 <define_variable_in_set@@Base>
  419f54:	ldr	w8, [x0, #44]
  419f58:	sub	x1, x29, #0x38
  419f5c:	and	w8, w8, #0x9fffffff
  419f60:	orr	w8, w8, w22
  419f64:	str	w8, [x0, #44]
  419f68:	sub	x0, x29, #0x80
  419f6c:	bl	417970 <find_next_token@@Base>
  419f70:	mov	x20, x0
  419f74:	cbnz	x0, 419f24 <eval_buffer@@Base+0xd54>
  419f78:	mov	x0, x19
  419f7c:	b	41a288 <eval_buffer@@Base+0x10b8>
  419f80:	ldur	x1, [x29, #-128]
  419f84:	ldur	x2, [x29, #-80]
  419f88:	mov	x0, xzr
  419f8c:	bl	409c40 <variable_expand_string@@Base>
  419f90:	mov	x20, x19
  419f94:	mov	x19, x0
  419f98:	str	x20, [sp, #152]
  419f9c:	ldur	x8, [x29, #-80]
  419fa0:	ldur	x9, [x29, #-128]
  419fa4:	stur	x19, [x29, #-112]
  419fa8:	add	x8, x9, x8
  419fac:	stur	x8, [x29, #-128]
  419fb0:	cbnz	x20, 41a024 <eval_buffer@@Base+0xe54>
  419fb4:	mov	w1, #0x3b                  	// #59
  419fb8:	mov	x0, x19
  419fbc:	bl	41ab6c <find_percent@@Base+0x8>
  419fc0:	ldur	x19, [x29, #-112]
  419fc4:	mov	x20, x0
  419fc8:	cbz	x0, 41a024 <eval_buffer@@Base+0xe54>
  419fcc:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  419fd0:	ldr	x8, [x22, #4040]
  419fd4:	mov	x0, x19
  419fd8:	sub	x24, x19, x8
  419fdc:	sub	x26, x20, x8
  419fe0:	bl	406790 <strlen@plt>
  419fe4:	strb	wzr, [x20]
  419fe8:	ldur	x1, [x29, #-128]
  419fec:	add	x0, x19, x0
  419ff0:	mov	x2, #0xffffffffffffffff    	// #-1
  419ff4:	bl	409c40 <variable_expand_string@@Base>
  419ff8:	ldur	x19, [x29, #-128]
  419ffc:	mov	x0, x19
  41a000:	bl	406790 <strlen@plt>
  41a004:	ldr	x8, [x22, #4040]
  41a008:	add	x9, x19, x0
  41a00c:	stur	x9, [x29, #-128]
  41a010:	add	x19, x8, x24
  41a014:	ldur	x24, [x29, #-152]
  41a018:	add	x8, x8, x26
  41a01c:	add	x20, x8, #0x1
  41a020:	stur	x19, [x29, #-112]
  41a024:	mov	w1, #0x3a                  	// #58
  41a028:	mov	x0, x19
  41a02c:	bl	41ab6c <find_percent@@Base+0x8>
  41a030:	cbnz	x0, 41a108 <eval_buffer@@Base+0xf38>
  41a034:	ldur	x0, [x29, #-128]
  41a038:	sub	x1, x29, #0x80
  41a03c:	sub	x2, x29, #0x50
  41a040:	bl	41cb98 <parse_file_seq@@Base+0x1a84>
  41a044:	mov	w28, w0
  41a048:	cmp	w0, #0x1
  41a04c:	b.eq	41a12c <eval_buffer@@Base+0xf5c>  // b.none
  41a050:	ldur	x19, [x29, #-112]
  41a054:	mov	x0, x19
  41a058:	bl	406790 <strlen@plt>
  41a05c:	add	x8, x19, x0
  41a060:	add	x9, x8, #0x1
  41a064:	stur	x9, [x29, #-112]
  41a068:	mov	w9, #0x20                  	// #32
  41a06c:	strb	w9, [x8]
  41a070:	ldur	x0, [x29, #-112]
  41a074:	ldur	x1, [x29, #-128]
  41a078:	ldur	x2, [x29, #-80]
  41a07c:	bl	409c40 <variable_expand_string@@Base>
  41a080:	mov	x19, x0
  41a084:	b	419f9c <eval_buffer@@Base+0xdcc>
  41a088:	ldr	x0, [sp, #120]
  41a08c:	cbz	x0, 41a0c8 <eval_buffer@@Base+0xef8>
  41a090:	ldp	w8, w5, [sp, #88]
  41a094:	ldp	x2, x6, [sp, #96]
  41a098:	ldp	x3, x4, [sp, #64]
  41a09c:	ldr	x7, [sp, #112]
  41a0a0:	mov	w8, w8
  41a0a4:	stp	x8, xzr, [x29, #-96]
  41a0a8:	sub	x8, x29, #0x68
  41a0ac:	str	x8, [sp, #16]
  41a0b0:	ldr	w8, [sp, #80]
  41a0b4:	mov	w1, w26
  41a0b8:	strb	w8, [sp, #8]
  41a0bc:	ldr	w8, [sp, #84]
  41a0c0:	str	w8, [sp]
  41a0c4:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  41a0c8:	ldur	x0, [x29, #-112]
  41a0cc:	bl	40a2dc <variable_expand@@Base>
  41a0d0:	stur	x0, [x29, #-56]
  41a0d4:	sub	x0, x29, #0x38
  41a0d8:	sub	x1, x29, #0x80
  41a0dc:	bl	417970 <find_next_token@@Base>
  41a0e0:	ldur	x22, [x29, #-144]
  41a0e4:	cbz	x0, 41a2cc <eval_buffer@@Base+0x10fc>
  41a0e8:	ldur	x1, [x29, #-128]
  41a0ec:	bl	4178f0 <xstrndup@@Base>
  41a0f0:	mov	x19, x0
  41a0f4:	sub	x0, x29, #0x38
  41a0f8:	sub	x1, x29, #0x80
  41a0fc:	bl	417970 <find_next_token@@Base>
  41a100:	mov	x1, x0
  41a104:	b	41a2d4 <eval_buffer@@Base+0x1104>
  41a108:	ldur	x8, [x29, #-112]
  41a10c:	mov	x19, x0
  41a110:	cmp	x0, x8
  41a114:	b.ls	41a130 <eval_buffer@@Base+0xf60>  // b.plast
  41a118:	mov	x8, x19
  41a11c:	ldrb	w9, [x8, #-1]!
  41a120:	cmp	w9, #0x26
  41a124:	csel	x19, x8, x19, eq  // eq = none
  41a128:	b	41a130 <eval_buffer@@Base+0xf60>
  41a12c:	mov	x19, xzr
  41a130:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41a134:	ldr	x0, [x8, #4040]
  41a138:	bl	417950 <next_token@@Base>
  41a13c:	cmp	w28, #0x1
  41a140:	stur	x0, [x29, #-112]
  41a144:	b.ne	41a17c <eval_buffer@@Base+0xfac>  // b.any
  41a148:	ldrb	w8, [x0]
  41a14c:	ldur	x22, [x29, #-144]
  41a150:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  41a154:	mov	w20, #0x5                   	// #5
  41a158:	cbnz	w8, 41ab04 <eval_buffer@@Base+0x1934>
  41a15c:	str	xzr, [sp, #96]
  41a160:	stp	xzr, xzr, [sp, #112]
  41a164:	mov	w26, wzr
  41a168:	str	wzr, [sp, #152]
  41a16c:	mov	w25, #0x2                   	// #2
  41a170:	str	wzr, [sp, #136]
  41a174:	str	wzr, [sp, #128]
  41a178:	b	419a88 <eval_buffer@@Base+0x8b8>
  41a17c:	ldrb	w24, [x19]
  41a180:	mov	x25, x19
  41a184:	sub	x0, x29, #0x70
  41a188:	mov	w1, #0x10                  	// #16
  41a18c:	mov	w2, #0x1                   	// #1
  41a190:	mov	x3, xzr
  41a194:	mov	w4, wzr
  41a198:	strb	wzr, [x25], #1
  41a19c:	bl	41b114 <parse_file_seq@@Base>
  41a1a0:	cmp	w24, #0x26
  41a1a4:	cset	w26, eq  // eq = none
  41a1a8:	csel	x8, x19, x25, ne  // ne = any
  41a1ac:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  41a1b0:	strb	w24, [x19]
  41a1b4:	stur	x8, [x29, #-112]
  41a1b8:	cbz	x0, 41a300 <eval_buffer@@Base+0x1130>
  41a1bc:	add	x25, x8, #0x1
  41a1c0:	stur	x25, [x29, #-112]
  41a1c4:	ldrb	w8, [x8, #1]
  41a1c8:	str	x0, [sp, #120]
  41a1cc:	str	w26, [sp, #44]
  41a1d0:	cmp	w8, #0x3a
  41a1d4:	cset	w8, eq  // eq = none
  41a1d8:	str	w8, [sp, #84]
  41a1dc:	b.ne	41a1e8 <eval_buffer@@Base+0x1018>  // b.any
  41a1e0:	add	x25, x25, #0x1
  41a1e4:	stur	x25, [x29, #-112]
  41a1e8:	ldur	x27, [x29, #-128]
  41a1ec:	ldrb	w8, [x27]
  41a1f0:	cbz	w8, 41a320 <eval_buffer@@Base+0x1150>
  41a1f4:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  41a1f8:	ldr	x8, [x22, #4040]
  41a1fc:	mov	x0, x25
  41a200:	sub	x24, x25, x8
  41a204:	bl	406790 <strlen@plt>
  41a208:	mov	x19, x0
  41a20c:	add	x25, x25, x0
  41a210:	mov	x0, x27
  41a214:	bl	406790 <strlen@plt>
  41a218:	add	x2, x0, #0x1
  41a21c:	mov	x0, x25
  41a220:	mov	x1, x27
  41a224:	bl	4099c4 <variable_buffer_output@@Base>
  41a228:	ldr	x8, [x22, #4040]
  41a22c:	add	x25, x8, x24
  41a230:	stur	x25, [x29, #-112]
  41a234:	b	41a324 <eval_buffer@@Base+0x1154>
  41a238:	mov	x0, x20
  41a23c:	bl	406cb0 <free@plt>
  41a240:	ldur	x22, [x29, #-144]
  41a244:	mov	w20, #0x5                   	// #5
  41a248:	str	xzr, [sp, #96]
  41a24c:	str	xzr, [sp, #120]
  41a250:	mov	w26, wzr
  41a254:	str	wzr, [sp, #152]
  41a258:	str	wzr, [sp, #136]
  41a25c:	b	419a54 <eval_buffer@@Base+0x884>
  41a260:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41a264:	str	xzr, [sp, #96]
  41a268:	stp	xzr, xzr, [sp, #112]
  41a26c:	mov	w26, wzr
  41a270:	str	wzr, [sp, #152]
  41a274:	str	wzr, [sp, #136]
  41a278:	str	wzr, [sp, #128]
  41a27c:	str	w19, [x8, #284]
  41a280:	b	4196f0 <eval_buffer@@Base+0x520>
  41a284:	mov	x0, x22
  41a288:	bl	406cb0 <free@plt>
  41a28c:	str	xzr, [sp, #96]
  41a290:	stp	xzr, xzr, [sp, #112]
  41a294:	mov	w26, wzr
  41a298:	str	wzr, [sp, #152]
  41a29c:	str	wzr, [sp, #136]
  41a2a0:	str	wzr, [sp, #128]
  41a2a4:	mov	w25, #0x2                   	// #2
  41a2a8:	ldp	x24, x22, [x29, #-152]
  41a2ac:	b	4197b4 <eval_buffer@@Base+0x5e4>
  41a2b0:	mov	w26, wzr
  41a2b4:	str	xzr, [sp, #96]
  41a2b8:	stp	xzr, xzr, [sp, #112]
  41a2bc:	str	wzr, [sp, #152]
  41a2c0:	str	wzr, [sp, #136]
  41a2c4:	str	wzr, [sp, #128]
  41a2c8:	b	41a2a8 <eval_buffer@@Base+0x10d8>
  41a2cc:	mov	x19, xzr
  41a2d0:	mov	x1, xzr
  41a2d4:	mov	x0, x19
  41a2d8:	bl	4226e8 <construct_vpath_list@@Base>
  41a2dc:	mov	x0, x19
  41a2e0:	bl	406cb0 <free@plt>
  41a2e4:	str	xzr, [sp, #96]
  41a2e8:	stp	xzr, xzr, [sp, #112]
  41a2ec:	mov	w26, wzr
  41a2f0:	str	wzr, [sp, #152]
  41a2f4:	str	wzr, [sp, #136]
  41a2f8:	str	wzr, [sp, #128]
  41a2fc:	b	419a84 <eval_buffer@@Base+0x8b4>
  41a300:	ldp	x24, x22, [x29, #-152]
  41a304:	mov	w8, #0x1                   	// #1
  41a308:	str	w8, [sp, #152]
  41a30c:	str	xzr, [sp, #96]
  41a310:	stp	xzr, xzr, [sp, #112]
  41a314:	mov	w25, #0x2                   	// #2
  41a318:	mov	w20, #0x5                   	// #5
  41a31c:	b	41a170 <eval_buffer@@Base+0xfa0>
  41a320:	mov	x19, xzr
  41a324:	sub	x1, x29, #0x78
  41a328:	mov	x0, x25
  41a32c:	bl	41b9fc <parse_file_seq@@Base+0x8e8>
  41a330:	ldurb	w24, [x29, #-120]
  41a334:	stur	x0, [x29, #-112]
  41a338:	tbnz	w24, #0, 41a3b4 <eval_buffer@@Base+0x11e4>
  41a33c:	ldur	x0, [x29, #-128]
  41a340:	mov	w1, #0x3d                  	// #61
  41a344:	bl	41ab6c <find_percent@@Base+0x8>
  41a348:	ldur	x1, [x29, #-128]
  41a34c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41a350:	ldrb	w9, [x9, #2392]
  41a354:	ldr	x25, [sp, #120]
  41a358:	ldrb	w8, [x1]
  41a35c:	str	w9, [sp, #80]
  41a360:	cbz	w8, 41a628 <eval_buffer@@Base+0x1458>
  41a364:	ldur	x8, [x29, #-112]
  41a368:	adrp	x24, 43e000 <stdio_traced@@Base+0x1a38>
  41a36c:	ldr	x9, [x24, #4040]
  41a370:	mov	x2, #0xffffffffffffffff    	// #-1
  41a374:	add	x0, x8, x19
  41a378:	sub	x22, x8, x9
  41a37c:	bl	409c40 <variable_expand_string@@Base>
  41a380:	ldr	x8, [x24, #4040]
  41a384:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  41a388:	add	x27, x27, #0xb6c
  41a38c:	add	x0, x8, x22
  41a390:	ldp	x24, x22, [x29, #-152]
  41a394:	stur	x0, [x29, #-112]
  41a398:	cbnz	x20, 41a634 <eval_buffer@@Base+0x1464>
  41a39c:	mov	w1, #0x3b                  	// #59
  41a3a0:	bl	41ab6c <find_percent@@Base+0x8>
  41a3a4:	mov	x20, x0
  41a3a8:	cbz	x0, 41a634 <eval_buffer@@Base+0x1464>
  41a3ac:	strb	wzr, [x20], #1
  41a3b0:	b	41a634 <eval_buffer@@Base+0x1464>
  41a3b4:	ldr	x25, [sp, #152]
  41a3b8:	mov	x27, x0
  41a3bc:	cbz	x25, 41a410 <eval_buffer@@Base+0x1240>
  41a3c0:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  41a3c4:	ldr	x8, [x22, #4040]
  41a3c8:	mov	w9, #0x3b                  	// #59
  41a3cc:	strb	w9, [x25, #-1]!
  41a3d0:	mov	x0, x25
  41a3d4:	sub	x20, x27, x8
  41a3d8:	bl	417520 <collapse_continuations@@Base>
  41a3dc:	ldur	x19, [x29, #-112]
  41a3e0:	mov	x0, x19
  41a3e4:	bl	406790 <strlen@plt>
  41a3e8:	add	x19, x19, x0
  41a3ec:	mov	x0, x25
  41a3f0:	bl	406790 <strlen@plt>
  41a3f4:	add	x2, x0, #0x1
  41a3f8:	mov	x0, x19
  41a3fc:	mov	x1, x25
  41a400:	bl	4099c4 <variable_buffer_output@@Base>
  41a404:	ldr	x8, [x22, #4040]
  41a408:	add	x27, x8, x20
  41a40c:	stur	x27, [x29, #-112]
  41a410:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41a414:	ldr	x8, [x8, #2440]
  41a418:	tst	w24, #0x10
  41a41c:	mov	w9, #0x5                   	// #5
  41a420:	mov	w10, #0x2                   	// #2
  41a424:	csel	w9, w10, w9, eq  // eq = none
  41a428:	str	x8, [sp, #136]
  41a42c:	lsl	w8, w24, #2
  41a430:	tst	w24, #0x8
  41a434:	str	w9, [sp, #128]
  41a438:	lsl	w9, w9, #26
  41a43c:	ldur	x24, [x29, #-152]
  41a440:	ldr	x26, [sp, #120]
  41a444:	orr	w8, w8, #0x8
  41a448:	str	w9, [sp, #152]
  41a44c:	mov	w9, #0x60000000            	// #1610612736
  41a450:	csel	w9, w9, wzr, eq  // eq = none
  41a454:	and	w8, w8, #0x88888888
  41a458:	orr	w20, w9, w8
  41a45c:	ldr	x8, [x26, #8]
  41a460:	mov	x0, x26
  41a464:	stur	x8, [x29, #-56]
  41a468:	ldr	x25, [x26]
  41a46c:	bl	406cb0 <free@plt>
  41a470:	sub	x0, x29, #0x38
  41a474:	bl	41ac48 <find_percent_cached@@Base>
  41a478:	ldur	x19, [x29, #-56]
  41a47c:	cbz	x0, 41a4e4 <eval_buffer@@Base+0x1314>
  41a480:	mov	x1, x0
  41a484:	mov	x0, x19
  41a488:	bl	420714 <create_pattern_var@@Base>
  41a48c:	ldr	x8, [sp, #144]
  41a490:	mov	x1, x27
  41a494:	ldr	q0, [x8]
  41a498:	ldr	x9, [x8, #16]
  41a49c:	add	x8, x0, #0x20
  41a4a0:	str	q0, [x0, #48]
  41a4a4:	str	x9, [x0, #64]
  41a4a8:	mov	x0, x8
  41a4ac:	bl	422050 <assign_variable_definition@@Base>
  41a4b0:	ldr	w8, [x0, #44]
  41a4b4:	ldr	w10, [sp, #152]
  41a4b8:	mov	x19, x0
  41a4bc:	ldr	x0, [x0, #8]
  41a4c0:	and	w9, w8, #0xe3ffffff
  41a4c4:	and	w8, w8, #0x3800000
  41a4c8:	orr	w9, w9, w10
  41a4cc:	cmp	w8, #0x800, lsl #12
  41a4d0:	str	w9, [x19, #44]
  41a4d4:	b.ne	41a500 <eval_buffer@@Base+0x1330>  // b.any
  41a4d8:	mov	x1, xzr
  41a4dc:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  41a4e0:	b	41a504 <eval_buffer@@Base+0x1334>
  41a4e4:	mov	x0, x19
  41a4e8:	bl	40a568 <lookup_file@@Base>
  41a4ec:	cbz	x0, 41a50c <eval_buffer@@Base+0x133c>
  41a4f0:	ldr	x8, [x0, #104]
  41a4f4:	cmp	x8, #0x0
  41a4f8:	csel	x19, x0, x8, eq  // eq = none
  41a4fc:	b	41a51c <eval_buffer@@Base+0x134c>
  41a500:	bl	4178d4 <xstrdup@@Base>
  41a504:	str	x0, [x19, #8]
  41a508:	b	41a558 <eval_buffer@@Base+0x1388>
  41a50c:	mov	x0, x19
  41a510:	bl	42016c <strcache_add@@Base>
  41a514:	bl	40a5f4 <enter_file@@Base>
  41a518:	mov	x19, x0
  41a51c:	mov	w1, #0x1                   	// #1
  41a520:	mov	x0, x19
  41a524:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  41a528:	bl	420e28 <initialize_file_variables@@Base>
  41a52c:	ldr	x8, [x19, #80]
  41a530:	ldr	x0, [sp, #144]
  41a534:	ldr	w2, [sp, #128]
  41a538:	mov	w3, #0x1                   	// #1
  41a53c:	mov	x1, x27
  41a540:	str	x8, [x22, #2440]
  41a544:	bl	422100 <try_variable_definition@@Base>
  41a548:	cbz	x0, 41aac4 <eval_buffer@@Base+0x18f4>
  41a54c:	ldr	x8, [sp, #136]
  41a550:	mov	x19, x0
  41a554:	str	x8, [x22, #2440]
  41a558:	ldr	w8, [x19, #44]
  41a55c:	mov	w9, #0xff77                	// #65399
  41a560:	movk	w9, #0x9fff, lsl #16
  41a564:	mov	w10, #0x14000000            	// #335544320
  41a568:	and	w9, w8, w9
  41a56c:	and	w8, w8, #0x1c000000
  41a570:	mov	x26, x25
  41a574:	orr	w9, w20, w9
  41a578:	cmp	w8, w10
  41a57c:	str	w9, [x19, #44]
  41a580:	b.ne	41a594 <eval_buffer@@Base+0x13c4>  // b.any
  41a584:	ldur	x22, [x29, #-144]
  41a588:	mov	w25, #0x2                   	// #2
  41a58c:	cbnz	x26, 41a45c <eval_buffer@@Base+0x128c>
  41a590:	b	41a60c <eval_buffer@@Base+0x143c>
  41a594:	ldr	x22, [x19]
  41a598:	mov	x0, x22
  41a59c:	bl	406790 <strlen@plt>
  41a5a0:	mov	x1, x0
  41a5a4:	mov	x0, x22
  41a5a8:	bl	420c00 <lookup_variable@@Base>
  41a5ac:	cbz	x0, 41a584 <eval_buffer@@Base+0x13b4>
  41a5b0:	mov	x22, x0
  41a5b4:	cmp	x19, x0
  41a5b8:	b.eq	41a584 <eval_buffer@@Base+0x13b4>  // b.none
  41a5bc:	ldr	w8, [x22, #44]
  41a5c0:	ubfx	w8, w8, #26, #3
  41a5c4:	sub	w8, w8, #0x3
  41a5c8:	cmp	w8, #0x1
  41a5cc:	b.hi	41a584 <eval_buffer@@Base+0x13b4>  // b.pmore
  41a5d0:	ldr	x0, [x19, #8]
  41a5d4:	bl	406cb0 <free@plt>
  41a5d8:	ldr	x0, [x22, #8]
  41a5dc:	bl	4178d4 <xstrdup@@Base>
  41a5e0:	str	x0, [x19, #8]
  41a5e4:	ldr	w8, [x22, #44]
  41a5e8:	ldr	w9, [x19, #44]
  41a5ec:	lsr	w8, w8, #26
  41a5f0:	bfi	w9, w8, #26, #3
  41a5f4:	str	w9, [x19, #44]
  41a5f8:	ldr	w8, [x22, #44]
  41a5fc:	and	w9, w9, #0xfffffffc
  41a600:	bfxil	w9, w8, #0, #1
  41a604:	str	w9, [x19, #44]
  41a608:	b	41a584 <eval_buffer@@Base+0x13b4>
  41a60c:	str	xzr, [sp, #96]
  41a610:	stp	xzr, xzr, [sp, #112]
  41a614:	str	wzr, [sp, #152]
  41a618:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  41a61c:	add	x27, x27, #0xb6c
  41a620:	mov	w20, #0x5                   	// #5
  41a624:	b	41a7cc <eval_buffer@@Base+0x15fc>
  41a628:	ldp	x24, x22, [x29, #-152]
  41a62c:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  41a630:	add	x27, x27, #0xb6c
  41a634:	ldur	x19, [x29, #-112]
  41a638:	mov	w1, #0x3a                  	// #58
  41a63c:	mov	x0, x19
  41a640:	bl	406cd0 <strchr@plt>
  41a644:	cbz	x0, 41a680 <eval_buffer@@Base+0x14b0>
  41a648:	ldurb	w8, [x0, #-1]
  41a64c:	cmp	w8, #0x5c
  41a650:	b.ne	41a688 <eval_buffer@@Base+0x14b8>  // b.any
  41a654:	mov	w9, wzr
  41a658:	sub	x8, x0, #0x2
  41a65c:	ldrb	w11, [x8], #-1
  41a660:	mov	w10, w9
  41a664:	eor	w9, w9, #0x1
  41a668:	cmp	w11, #0x5c
  41a66c:	b.eq	41a65c <eval_buffer@@Base+0x148c>  // b.none
  41a670:	tbnz	w10, #0, 41a688 <eval_buffer@@Base+0x14b8>
  41a674:	add	x0, x0, #0x1
  41a678:	mov	w1, #0x3a                  	// #58
  41a67c:	b	41a640 <eval_buffer@@Base+0x1470>
  41a680:	str	xzr, [sp, #96]
  41a684:	b	41a6e0 <eval_buffer@@Base+0x1510>
  41a688:	sub	x0, x29, #0x70
  41a68c:	mov	w1, #0x10                  	// #16
  41a690:	mov	w2, #0x40                  	// #64
  41a694:	mov	w4, #0x4                   	// #4
  41a698:	mov	x3, xzr
  41a69c:	bl	41b114 <parse_file_seq@@Base>
  41a6a0:	ldur	x8, [x29, #-112]
  41a6a4:	add	x8, x8, #0x1
  41a6a8:	stur	x8, [x29, #-112]
  41a6ac:	cbz	x0, 41aad0 <eval_buffer@@Base+0x1900>
  41a6b0:	ldr	x8, [x0]
  41a6b4:	mov	x19, x0
  41a6b8:	cbnz	x8, 41aadc <eval_buffer@@Base+0x190c>
  41a6bc:	add	x0, x19, #0x8
  41a6c0:	bl	41ac48 <find_percent_cached@@Base>
  41a6c4:	str	x0, [sp, #64]
  41a6c8:	cbz	x0, 41aae8 <eval_buffer@@Base+0x1918>
  41a6cc:	ldr	x8, [x19, #8]
  41a6d0:	mov	x0, x19
  41a6d4:	str	x8, [sp, #96]
  41a6d8:	bl	406cb0 <free@plt>
  41a6dc:	ldur	x19, [x29, #-112]
  41a6e0:	mov	x0, x19
  41a6e4:	stur	x19, [x29, #-136]
  41a6e8:	bl	406790 <strlen@plt>
  41a6ec:	add	x8, x19, x0
  41a6f0:	sub	x8, x8, #0x1
  41a6f4:	sub	x0, x29, #0x88
  41a6f8:	sub	x1, x29, #0x38
  41a6fc:	stur	x8, [x29, #-56]
  41a700:	bl	40c7a8 <strip_whitespace@@Base>
  41a704:	ldur	x0, [x29, #-136]
  41a708:	ldur	x8, [x29, #-56]
  41a70c:	cmp	x0, x8
  41a710:	b.hi	41a730 <eval_buffer@@Base+0x1560>  // b.pmore
  41a714:	ldrb	w9, [x0]
  41a718:	cbz	w9, 41a730 <eval_buffer@@Base+0x1560>
  41a71c:	sub	x8, x8, x0
  41a720:	add	x1, x8, #0x1
  41a724:	bl	4178f0 <xstrndup@@Base>
  41a728:	str	x0, [sp, #72]
  41a72c:	b	41a734 <eval_buffer@@Base+0x1564>
  41a730:	str	xzr, [sp, #72]
  41a734:	cbz	x20, 41a774 <eval_buffer@@Base+0x15a4>
  41a738:	mov	x0, x20
  41a73c:	bl	406790 <strlen@plt>
  41a740:	ldr	w8, [x23, #48]
  41a744:	ldr	x9, [sp, #56]
  41a748:	mov	x19, x0
  41a74c:	str	w8, [sp, #92]
  41a750:	add	x8, x0, #0x2
  41a754:	cmp	x8, x9
  41a758:	b.ls	41a77c <eval_buffer@@Base+0x15ac>  // b.plast
  41a75c:	ldr	x0, [sp, #104]
  41a760:	lsl	x1, x8, #1
  41a764:	str	x1, [sp, #56]
  41a768:	bl	417854 <xrealloc@@Base>
  41a76c:	mov	x22, x0
  41a770:	b	41a780 <eval_buffer@@Base+0x15b0>
  41a774:	str	xzr, [sp, #112]
  41a778:	b	41a7a4 <eval_buffer@@Base+0x15d4>
  41a77c:	ldr	x22, [sp, #104]
  41a780:	mov	x0, x22
  41a784:	mov	x1, x20
  41a788:	mov	x2, x19
  41a78c:	bl	406750 <memcpy@plt>
  41a790:	add	x8, x19, #0x1
  41a794:	stp	x22, x8, [sp, #104]
  41a798:	mov	w8, #0xa                   	// #10
  41a79c:	strb	w8, [x22, x19]
  41a7a0:	ldur	x22, [x29, #-144]
  41a7a4:	ldr	w8, [sp, #48]
  41a7a8:	mov	w20, #0x5                   	// #5
  41a7ac:	cbz	w8, 41a7c4 <eval_buffer@@Base+0x15f4>
  41a7b0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41a7b4:	ldr	x8, [x8, #48]
  41a7b8:	ldr	x8, [x8, #8]
  41a7bc:	ldrb	w8, [x8]
  41a7c0:	cbz	w8, 41a7d4 <eval_buffer@@Base+0x1604>
  41a7c4:	mov	w25, wzr
  41a7c8:	str	wzr, [sp, #152]
  41a7cc:	ldr	w26, [sp, #44]
  41a7d0:	b	41a170 <eval_buffer@@Base+0xfa0>
  41a7d4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41a7d8:	ldr	x8, [x8, #240]
  41a7dc:	str	x8, [sp, #32]
  41a7e0:	ldr	x22, [x25, #8]
  41a7e4:	mov	w1, #0x25                  	// #37
  41a7e8:	str	x25, [sp, #136]
  41a7ec:	mov	x0, x22
  41a7f0:	bl	406cd0 <strchr@plt>
  41a7f4:	cbnz	x0, 41a9ac <eval_buffer@@Base+0x17dc>
  41a7f8:	ldrb	w8, [x22]
  41a7fc:	cmp	w8, #0x2e
  41a800:	str	w8, [sp, #152]
  41a804:	b.ne	41a818 <eval_buffer@@Base+0x1648>  // b.any
  41a808:	mov	w1, #0x2f                  	// #47
  41a80c:	mov	x0, x22
  41a810:	bl	406cd0 <strchr@plt>
  41a814:	cbz	x0, 41a95c <eval_buffer@@Base+0x178c>
  41a818:	ldr	x8, [sp, #32]
  41a81c:	ldr	x8, [x8, #24]
  41a820:	cbz	x8, 41a97c <eval_buffer@@Base+0x17ac>
  41a824:	mov	x26, x8
  41a828:	add	x8, x22, #0x1
  41a82c:	mov	x24, x26
  41a830:	str	x8, [sp, #128]
  41a834:	ldr	x25, [x24, #8]
  41a838:	mov	x8, x25
  41a83c:	cbnz	x25, 41a848 <eval_buffer@@Base+0x1678>
  41a840:	ldr	x8, [x24, #16]
  41a844:	ldr	x8, [x8]
  41a848:	ldrb	w8, [x8]
  41a84c:	cmp	w8, #0x2e
  41a850:	b.eq	41a8b4 <eval_buffer@@Base+0x16e4>  // b.none
  41a854:	mov	x8, x25
  41a858:	cbnz	x25, 41a864 <eval_buffer@@Base+0x1694>
  41a85c:	ldr	x8, [x24, #16]
  41a860:	ldr	x8, [x8]
  41a864:	cmp	x22, x8
  41a868:	b.eq	41a95c <eval_buffer@@Base+0x178c>  // b.none
  41a86c:	mov	x8, x25
  41a870:	cbnz	x25, 41a87c <eval_buffer@@Base+0x16ac>
  41a874:	ldr	x8, [x24, #16]
  41a878:	ldr	x8, [x8]
  41a87c:	ldrb	w8, [x8]
  41a880:	ldr	w9, [sp, #152]
  41a884:	cmp	w9, w8
  41a888:	b.ne	41a8b4 <eval_buffer@@Base+0x16e4>  // b.any
  41a88c:	ldr	w8, [sp, #152]
  41a890:	cbz	w8, 41a95c <eval_buffer@@Base+0x178c>
  41a894:	mov	x8, x25
  41a898:	cbnz	x25, 41a8a4 <eval_buffer@@Base+0x16d4>
  41a89c:	ldr	x8, [x24, #16]
  41a8a0:	ldr	x8, [x8]
  41a8a4:	ldr	x0, [sp, #128]
  41a8a8:	add	x1, x8, #0x1
  41a8ac:	bl	406c70 <strcmp@plt>
  41a8b0:	cbz	w0, 41a95c <eval_buffer@@Base+0x178c>
  41a8b4:	mov	x20, x26
  41a8b8:	ldr	x19, [x20, #8]
  41a8bc:	cbnz	x19, 41a8c8 <eval_buffer@@Base+0x16f8>
  41a8c0:	ldr	x8, [x20, #16]
  41a8c4:	ldr	x19, [x8]
  41a8c8:	mov	x0, x19
  41a8cc:	bl	406790 <strlen@plt>
  41a8d0:	mov	x27, x0
  41a8d4:	mov	x0, x22
  41a8d8:	mov	x1, x19
  41a8dc:	mov	x2, x27
  41a8e0:	bl	406a30 <strncmp@plt>
  41a8e4:	cbnz	w0, 41a948 <eval_buffer@@Base+0x1778>
  41a8e8:	add	x8, x22, x27
  41a8ec:	mov	x9, x25
  41a8f0:	cbnz	x25, 41a8fc <eval_buffer@@Base+0x172c>
  41a8f4:	ldr	x9, [x24, #16]
  41a8f8:	ldr	x9, [x9]
  41a8fc:	cmp	x8, x9
  41a900:	b.eq	41a95c <eval_buffer@@Base+0x178c>  // b.none
  41a904:	ldrb	w9, [x8]
  41a908:	mov	x10, x25
  41a90c:	cbnz	x25, 41a918 <eval_buffer@@Base+0x1748>
  41a910:	ldr	x10, [x24, #16]
  41a914:	ldr	x10, [x10]
  41a918:	ldrb	w10, [x10]
  41a91c:	cmp	w9, w10
  41a920:	b.ne	41a948 <eval_buffer@@Base+0x1778>  // b.any
  41a924:	cbz	w9, 41a95c <eval_buffer@@Base+0x178c>
  41a928:	add	x0, x8, #0x1
  41a92c:	mov	x8, x25
  41a930:	cbnz	x25, 41a93c <eval_buffer@@Base+0x176c>
  41a934:	ldr	x8, [x24, #16]
  41a938:	ldr	x8, [x8]
  41a93c:	add	x1, x8, #0x1
  41a940:	bl	406c70 <strcmp@plt>
  41a944:	cbz	w0, 41a95c <eval_buffer@@Base+0x178c>
  41a948:	ldr	x20, [x20]
  41a94c:	cbnz	x20, 41a8b8 <eval_buffer@@Base+0x16e8>
  41a950:	ldr	x24, [x24]
  41a954:	cbnz	x24, 41a834 <eval_buffer@@Base+0x1664>
  41a958:	b	41a97c <eval_buffer@@Base+0x17ac>
  41a95c:	ldr	x25, [sp, #136]
  41a960:	ldur	x24, [x29, #-152]
  41a964:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  41a968:	add	x27, x27, #0xb6c
  41a96c:	ldr	x25, [x25]
  41a970:	mov	w20, #0x5                   	// #5
  41a974:	cbnz	x25, 41a7e0 <eval_buffer@@Base+0x1610>
  41a978:	b	41a9b0 <eval_buffer@@Base+0x17e0>
  41a97c:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  41a980:	mov	w1, #0xd                   	// #13
  41a984:	mov	w3, #0x2                   	// #2
  41a988:	add	x0, x0, #0x641
  41a98c:	mov	x2, x22
  41a990:	mov	w4, wzr
  41a994:	mov	x5, xzr
  41a998:	mov	x6, xzr
  41a99c:	bl	420860 <define_variable_in_set@@Base>
  41a9a0:	ldp	x24, x22, [x29, #-152]
  41a9a4:	mov	w25, wzr
  41a9a8:	b	41a614 <eval_buffer@@Base+0x1444>
  41a9ac:	mov	w25, wzr
  41a9b0:	ldur	x22, [x29, #-144]
  41a9b4:	b	41a7c8 <eval_buffer@@Base+0x15f8>
  41a9b8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41a9bc:	ldr	x8, [x8, #2408]
  41a9c0:	ldr	w8, [x8]
  41a9c4:	cbnz	w8, 41ab38 <eval_buffer@@Base+0x1968>
  41a9c8:	ldp	x19, x7, [sp, #104]
  41a9cc:	ldr	x0, [sp, #120]
  41a9d0:	cbz	x0, 41aa0c <eval_buffer@@Base+0x183c>
  41a9d4:	ldp	w8, w5, [sp, #88]
  41a9d8:	ldr	w9, [sp, #80]
  41a9dc:	ldr	x2, [sp, #96]
  41a9e0:	ldp	x3, x4, [sp, #64]
  41a9e4:	mov	w8, w8
  41a9e8:	stp	x8, xzr, [x29, #-96]
  41a9ec:	sub	x8, x29, #0x68
  41a9f0:	str	x8, [sp, #16]
  41a9f4:	ldr	w8, [sp, #84]
  41a9f8:	mov	w1, w26
  41a9fc:	mov	x6, x19
  41aa00:	strb	w9, [sp, #8]
  41aa04:	str	w8, [sp]
  41aa08:	bl	41bba0 <parse_file_seq@@Base+0xa8c>
  41aa0c:	mov	x0, x24
  41aa10:	bl	406cb0 <free@plt>
  41aa14:	mov	x0, x19
  41aa18:	bl	406cb0 <free@plt>
  41aa1c:	ldp	x20, x19, [sp, #400]
  41aa20:	ldp	x22, x21, [sp, #384]
  41aa24:	ldp	x24, x23, [sp, #368]
  41aa28:	ldp	x26, x25, [sp, #352]
  41aa2c:	ldp	x28, x27, [sp, #336]
  41aa30:	ldp	x29, x30, [sp, #320]
  41aa34:	add	sp, sp, #0x1a0
  41aa38:	ret
  41aa3c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aa40:	add	x1, x1, #0xf8c
  41aa44:	mov	w2, #0x5                   	// #5
  41aa48:	mov	x0, xzr
  41aa4c:	bl	406e10 <dcgettext@plt>
  41aa50:	mov	x2, x0
  41aa54:	sub	x0, x29, #0x50
  41aa58:	mov	x1, xzr
  41aa5c:	bl	4188bc <fatal@@Base>
  41aa60:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aa64:	add	x1, x1, #0xb99
  41aa68:	b	41ab4c <eval_buffer@@Base+0x197c>
  41aa6c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aa70:	add	x1, x1, #0xf4f
  41aa74:	b	41ab4c <eval_buffer@@Base+0x197c>
  41aa78:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aa7c:	add	x1, x1, #0xf4f
  41aa80:	b	41aa44 <eval_buffer@@Base+0x1874>
  41aa84:	ldur	x0, [x29, #-56]
  41aa88:	bl	406790 <strlen@plt>
  41aa8c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aa90:	mov	x19, x0
  41aa94:	add	x1, x1, #0xbd2
  41aa98:	mov	w2, #0x5                   	// #5
  41aa9c:	mov	x0, xzr
  41aaa0:	bl	406e10 <dcgettext@plt>
  41aaa4:	ldur	x3, [x29, #-56]
  41aaa8:	mov	x2, x0
  41aaac:	mov	x0, x26
  41aab0:	mov	x1, x19
  41aab4:	bl	4188bc <fatal@@Base>
  41aab8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aabc:	add	x1, x1, #0xc0a
  41aac0:	b	41ab4c <eval_buffer@@Base+0x197c>
  41aac4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41aac8:	add	x1, x1, #0x53
  41aacc:	b	41aaf0 <eval_buffer@@Base+0x1920>
  41aad0:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aad4:	add	x1, x1, #0xc7a
  41aad8:	b	41aaf0 <eval_buffer@@Base+0x1920>
  41aadc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aae0:	add	x1, x1, #0xc91
  41aae4:	b	41ab4c <eval_buffer@@Base+0x197c>
  41aae8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aaec:	add	x1, x1, #0xcaa
  41aaf0:	mov	w2, #0x5                   	// #5
  41aaf4:	b	41ab54 <eval_buffer@@Base+0x1984>
  41aaf8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41aafc:	add	x1, x1, #0xbe5
  41ab00:	b	41ab4c <eval_buffer@@Base+0x197c>
  41ab04:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41ab08:	ldrb	w8, [x8, #2392]
  41ab0c:	cmp	w8, #0x9
  41ab10:	b.ne	41ab44 <eval_buffer@@Base+0x1974>  // b.any
  41ab14:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41ab18:	add	x1, x1, #0xc25
  41ab1c:	mov	w2, #0x8                   	// #8
  41ab20:	mov	x0, x25
  41ab24:	bl	406a30 <strncmp@plt>
  41ab28:	cbnz	w0, 41ab44 <eval_buffer@@Base+0x1974>
  41ab2c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41ab30:	add	x1, x1, #0xc2e
  41ab34:	b	41ab4c <eval_buffer@@Base+0x197c>
  41ab38:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41ab3c:	add	x1, x1, #0xcca
  41ab40:	b	41ab4c <eval_buffer@@Base+0x197c>
  41ab44:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41ab48:	add	x1, x1, #0xc68
  41ab4c:	mov	w2, #0x5                   	// #5
  41ab50:	mov	x0, xzr
  41ab54:	bl	406e10 <dcgettext@plt>
  41ab58:	mov	x2, x0
  41ab5c:	ldr	x0, [sp, #144]
  41ab60:	b	41aa58 <eval_buffer@@Base+0x1888>

000000000041ab64 <find_percent@@Base>:
  41ab64:	mov	w1, #0x25                  	// #37
  41ab68:	b	41ab6c <find_percent@@Base+0x8>
  41ab6c:	stp	x29, x30, [sp, #-64]!
  41ab70:	stp	x24, x23, [sp, #16]
  41ab74:	stp	x22, x21, [sp, #32]
  41ab78:	stp	x20, x19, [sp, #48]
  41ab7c:	mov	w19, w1
  41ab80:	mov	x20, x0
  41ab84:	mov	x21, xzr
  41ab88:	add	x23, x0, #0x1
  41ab8c:	mov	x22, x0
  41ab90:	mov	x29, sp
  41ab94:	mov	x0, x22
  41ab98:	mov	w1, w19
  41ab9c:	bl	406cd0 <strchr@plt>
  41aba0:	mov	x22, x0
  41aba4:	cbz	x0, 41ac30 <find_percent@@Base+0xcc>
  41aba8:	cmp	x22, x20
  41abac:	b.ls	41ac30 <find_percent@@Base+0xcc>  // b.plast
  41abb0:	ldurb	w8, [x22, #-1]
  41abb4:	cmp	w8, #0x5c
  41abb8:	b.ne	41ac30 <find_percent@@Base+0xcc>  // b.any
  41abbc:	sub	x8, x22, #0x2
  41abc0:	cmp	x8, x20
  41abc4:	b.cs	41abd0 <find_percent@@Base+0x6c>  // b.hs, b.nlast
  41abc8:	mov	w8, #0xfffffffe            	// #-2
  41abcc:	b	41abf0 <find_percent@@Base+0x8c>
  41abd0:	mov	x8, #0xfffffffffffffffe    	// #-2
  41abd4:	ldrb	w9, [x22, x8]
  41abd8:	cmp	w9, #0x5c
  41abdc:	b.ne	41abf0 <find_percent@@Base+0x8c>  // b.any
  41abe0:	sub	x8, x8, #0x1
  41abe4:	add	x9, x22, x8
  41abe8:	cmp	x9, x20
  41abec:	b.cs	41abd4 <find_percent@@Base+0x70>  // b.hs, b.nlast
  41abf0:	add	w24, w8, #0x1
  41abf4:	cbnz	x21, 41ac04 <find_percent@@Base+0xa0>
  41abf8:	mov	x0, x20
  41abfc:	bl	406790 <strlen@plt>
  41ac00:	mov	x21, x0
  41ac04:	cmp	w24, #0x0
  41ac08:	cinc	w9, w24, lt  // lt = tstop
  41ac0c:	sub	x8, x23, x22
  41ac10:	asr	w9, w9, #1
  41ac14:	add	x0, x22, w24, sxtw
  41ac18:	add	x22, x22, w9, sxtw
  41ac1c:	sub	x8, x8, w9, sxtw
  41ac20:	add	x2, x8, x21
  41ac24:	mov	x1, x22
  41ac28:	bl	406760 <memmove@plt>
  41ac2c:	tbnz	w24, #0, 41ab94 <find_percent@@Base+0x30>
  41ac30:	mov	x0, x22
  41ac34:	ldp	x20, x19, [sp, #48]
  41ac38:	ldp	x22, x21, [sp, #32]
  41ac3c:	ldp	x24, x23, [sp, #16]
  41ac40:	ldp	x29, x30, [sp], #64
  41ac44:	ret

000000000041ac48 <find_percent_cached@@Base>:
  41ac48:	stp	x29, x30, [sp, #-80]!
  41ac4c:	stp	x26, x25, [sp, #16]
  41ac50:	stp	x24, x23, [sp, #32]
  41ac54:	stp	x22, x21, [sp, #48]
  41ac58:	stp	x20, x19, [sp, #64]
  41ac5c:	ldr	x21, [x0]
  41ac60:	mov	x29, sp
  41ac64:	ldrb	w8, [x21]
  41ac68:	cmp	w8, #0x25
  41ac6c:	b.ne	41ac78 <find_percent_cached@@Base+0x30>  // b.any
  41ac70:	mov	x20, x21
  41ac74:	b	41ad80 <find_percent_cached@@Base+0x138>
  41ac78:	mov	x19, x0
  41ac7c:	mov	x24, xzr
  41ac80:	mov	x22, xzr
  41ac84:	mov	x23, x21
  41ac88:	mov	x20, x21
  41ac8c:	mov	w1, #0x25                  	// #37
  41ac90:	mov	x0, x20
  41ac94:	bl	406cd0 <strchr@plt>
  41ac98:	mov	x20, x0
  41ac9c:	cbz	x0, 41ad64 <find_percent_cached@@Base+0x11c>
  41aca0:	ldurb	w8, [x20, #-1]
  41aca4:	cmp	w8, #0x5c
  41aca8:	b.ne	41ad64 <find_percent_cached@@Base+0x11c>  // b.any
  41acac:	sub	x8, x20, #0x2
  41acb0:	cmp	x8, x23
  41acb4:	b.cs	41acc0 <find_percent_cached@@Base+0x78>  // b.hs, b.nlast
  41acb8:	mov	w8, #0xfffffffe            	// #-2
  41acbc:	b	41ace0 <find_percent_cached@@Base+0x98>
  41acc0:	mov	x8, #0xfffffffffffffffe    	// #-2
  41acc4:	ldrb	w9, [x20, x8]
  41acc8:	cmp	w9, #0x5c
  41accc:	b.ne	41ace0 <find_percent_cached@@Base+0x98>  // b.any
  41acd0:	sub	x8, x8, #0x1
  41acd4:	add	x9, x20, x8
  41acd8:	cmp	x9, x23
  41acdc:	b.cs	41acc4 <find_percent_cached@@Base+0x7c>  // b.hs, b.nlast
  41ace0:	add	w25, w8, #0x1
  41ace4:	cbnz	x24, 41ad2c <find_percent_cached@@Base+0xe4>
  41ace8:	mov	x0, x23
  41acec:	bl	406790 <strlen@plt>
  41acf0:	add	x9, x0, #0x10
  41acf4:	mov	x8, sp
  41acf8:	and	x9, x9, #0xfffffffffffffff0
  41acfc:	mov	x22, x0
  41ad00:	sub	x21, x8, x9
  41ad04:	add	x2, x0, #0x1
  41ad08:	mov	sp, x21
  41ad0c:	mov	x0, x21
  41ad10:	mov	x1, x23
  41ad14:	bl	406750 <memcpy@plt>
  41ad18:	sub	x8, x20, x23
  41ad1c:	add	x20, x21, x8
  41ad20:	mov	x23, x21
  41ad24:	mov	x24, x21
  41ad28:	str	x21, [x19]
  41ad2c:	cmp	w25, #0x0
  41ad30:	sub	x8, x20, x23
  41ad34:	cinc	w10, w25, lt  // lt = tstop
  41ad38:	add	x9, x24, x8
  41ad3c:	asr	w26, w10, #1
  41ad40:	add	x0, x9, w25, sxtw
  41ad44:	add	x1, x9, w26, sxtw
  41ad48:	sub	x9, x22, w26, sxtw
  41ad4c:	sub	x8, x9, x8
  41ad50:	add	x2, x8, #0x1
  41ad54:	bl	406760 <memmove@plt>
  41ad58:	add	x20, x20, w26, sxtw
  41ad5c:	tbnz	w25, #0, 41ac8c <find_percent_cached@@Base+0x44>
  41ad60:	b	41ad68 <find_percent_cached@@Base+0x120>
  41ad64:	cbz	x24, 41ad80 <find_percent_cached@@Base+0x138>
  41ad68:	mov	x0, x21
  41ad6c:	bl	42016c <strcache_add@@Base>
  41ad70:	str	x0, [x19]
  41ad74:	cbz	x20, 41ad80 <find_percent_cached@@Base+0x138>
  41ad78:	sub	x8, x20, x24
  41ad7c:	add	x20, x0, x8
  41ad80:	mov	x0, x20
  41ad84:	mov	sp, x29
  41ad88:	ldp	x20, x19, [sp, #64]
  41ad8c:	ldp	x22, x21, [sp, #48]
  41ad90:	ldp	x24, x23, [sp, #32]
  41ad94:	ldp	x26, x25, [sp, #16]
  41ad98:	ldp	x29, x30, [sp], #80
  41ad9c:	ret

000000000041ada0 <construct_include_path@@Base>:
  41ada0:	sub	sp, sp, #0xc0
  41ada4:	stp	x24, x23, [sp, #144]
  41ada8:	adrp	x23, 43e000 <stdio_traced@@Base+0x1a38>
  41adac:	stp	x29, x30, [sp, #128]
  41adb0:	stp	x22, x21, [sp, #160]
  41adb4:	stp	x20, x19, [sp, #176]
  41adb8:	add	x29, sp, #0x80
  41adbc:	cbz	x0, 41ade8 <construct_include_path@@Base+0x48>
  41adc0:	ldr	x8, [x0]
  41adc4:	mov	x20, x0
  41adc8:	cbz	x8, 41ae00 <construct_include_path@@Base+0x60>
  41adcc:	mov	x8, xzr
  41add0:	add	x9, x20, #0x8
  41add4:	ldr	x10, [x9, x8]
  41add8:	add	x8, x8, #0x8
  41addc:	cbnz	x10, 41add4 <construct_include_path@@Base+0x34>
  41ade0:	add	x0, x8, #0x28
  41ade4:	b	41ae04 <construct_include_path@@Base+0x64>
  41ade8:	mov	w0, #0x28                  	// #40
  41adec:	bl	417888 <xmalloc@@Base>
  41adf0:	mov	x19, x0
  41adf4:	mov	x24, xzr
  41adf8:	str	xzr, [x23, #1568]
  41adfc:	b	41aee0 <construct_include_path@@Base+0x140>
  41ae00:	mov	w0, #0x28                  	// #40
  41ae04:	bl	417888 <xmalloc@@Base>
  41ae08:	str	xzr, [x23, #1568]
  41ae0c:	ldr	x21, [x20]
  41ae10:	mov	x19, x0
  41ae14:	mov	x24, xzr
  41ae18:	cbz	x21, 41aee0 <construct_include_path@@Base+0x140>
  41ae1c:	ldrb	w8, [x21]
  41ae20:	cmp	w8, #0x7e
  41ae24:	b.ne	41ae40 <construct_include_path@@Base+0xa0>  // b.any
  41ae28:	mov	x0, x21
  41ae2c:	bl	41afd4 <tilde_expand@@Base>
  41ae30:	cmp	x0, #0x0
  41ae34:	mov	x22, x0
  41ae38:	csel	x21, x21, x0, eq  // eq = none
  41ae3c:	b	41ae44 <construct_include_path@@Base+0xa4>
  41ae40:	mov	x22, xzr
  41ae44:	add	x20, x20, #0x8
  41ae48:	mov	x1, sp
  41ae4c:	mov	x0, x21
  41ae50:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  41ae54:	cmn	w0, #0x1
  41ae58:	b.ne	41ae70 <construct_include_path@@Base+0xd0>  // b.any
  41ae5c:	bl	406eb0 <__errno_location@plt>
  41ae60:	ldr	w8, [x0]
  41ae64:	cmp	w8, #0x4
  41ae68:	b.eq	41ae48 <construct_include_path@@Base+0xa8>  // b.none
  41ae6c:	b	41aed0 <construct_include_path@@Base+0x130>
  41ae70:	cbnz	w0, 41aed0 <construct_include_path@@Base+0x130>
  41ae74:	ldr	w8, [sp, #16]
  41ae78:	and	w8, w8, #0xf000
  41ae7c:	cmp	w8, #0x4, lsl #12
  41ae80:	b.ne	41aed0 <construct_include_path@@Base+0x130>  // b.any
  41ae84:	mov	x0, x21
  41ae88:	bl	406790 <strlen@plt>
  41ae8c:	mov	x1, x0
  41ae90:	cmp	x0, #0x2
  41ae94:	b.cc	41aeac <construct_include_path@@Base+0x10c>  // b.lo, b.ul, b.last
  41ae98:	add	x8, x21, x1
  41ae9c:	ldurb	w8, [x8, #-1]
  41aea0:	sub	x0, x1, #0x1
  41aea4:	cmp	w8, #0x2f
  41aea8:	b.eq	41ae8c <construct_include_path@@Base+0xec>  // b.none
  41aeac:	ldr	x8, [x23, #1568]
  41aeb0:	cmp	x1, x8
  41aeb4:	b.ls	41aebc <construct_include_path@@Base+0x11c>  // b.plast
  41aeb8:	str	x1, [x23, #1568]
  41aebc:	mov	x0, x21
  41aec0:	bl	4203f8 <strcache_add_len@@Base>
  41aec4:	add	x8, x24, #0x1
  41aec8:	str	x0, [x19, x24, lsl #3]
  41aecc:	mov	x24, x8
  41aed0:	mov	x0, x22
  41aed4:	bl	406cb0 <free@plt>
  41aed8:	ldr	x21, [x20]
  41aedc:	cbnz	x21, 41ae1c <construct_include_path@@Base+0x7c>
  41aee0:	adrp	x21, 428000 <_IO_stdin_used@@Base+0x4290>
  41aee4:	add	x21, x21, #0xa70
  41aee8:	ldr	x0, [x21]
  41aeec:	mov	x1, sp
  41aef0:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  41aef4:	cmn	w0, #0x1
  41aef8:	b.ne	41af10 <construct_include_path@@Base+0x170>  // b.any
  41aefc:	bl	406eb0 <__errno_location@plt>
  41af00:	ldr	w8, [x0]
  41af04:	cmp	w8, #0x4
  41af08:	b.eq	41aee8 <construct_include_path@@Base+0x148>  // b.none
  41af0c:	b	41af74 <construct_include_path@@Base+0x1d4>
  41af10:	cbnz	w0, 41af74 <construct_include_path@@Base+0x1d4>
  41af14:	ldr	w8, [sp, #16]
  41af18:	and	w8, w8, #0xf000
  41af1c:	cmp	w8, #0x4, lsl #12
  41af20:	b.ne	41af74 <construct_include_path@@Base+0x1d4>  // b.any
  41af24:	ldr	x20, [x21]
  41af28:	mov	x0, x20
  41af2c:	bl	406790 <strlen@plt>
  41af30:	mov	x1, x0
  41af34:	cmp	x0, #0x2
  41af38:	b.cc	41af50 <construct_include_path@@Base+0x1b0>  // b.lo, b.ul, b.last
  41af3c:	add	x8, x20, x1
  41af40:	ldurb	w8, [x8, #-1]
  41af44:	sub	x0, x1, #0x1
  41af48:	cmp	w8, #0x2f
  41af4c:	b.eq	41af30 <construct_include_path@@Base+0x190>  // b.none
  41af50:	ldr	x8, [x23, #1568]
  41af54:	cmp	x1, x8
  41af58:	b.ls	41af60 <construct_include_path@@Base+0x1c0>  // b.plast
  41af5c:	str	x1, [x23, #1568]
  41af60:	mov	x0, x20
  41af64:	bl	4203f8 <strcache_add_len@@Base>
  41af68:	add	x8, x24, #0x1
  41af6c:	str	x0, [x19, x24, lsl #3]
  41af70:	mov	x24, x8
  41af74:	ldr	x8, [x21, #8]!
  41af78:	cbnz	x8, 41aee8 <construct_include_path@@Base+0x148>
  41af7c:	str	xzr, [x19, x24, lsl #3]
  41af80:	ldr	x2, [x19]
  41af84:	cbz	x2, 41afb4 <construct_include_path@@Base+0x214>
  41af88:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41af8c:	add	x21, x19, #0x8
  41af90:	add	x20, x20, #0xad0
  41af94:	mov	w4, #0x3                   	// #3
  41af98:	mov	x0, xzr
  41af9c:	mov	x1, x20
  41afa0:	mov	w3, wzr
  41afa4:	mov	w5, wzr
  41afa8:	bl	421154 <do_variable_definition@@Base>
  41afac:	ldr	x2, [x21], #8
  41afb0:	cbnz	x2, 41af94 <construct_include_path@@Base+0x1f4>
  41afb4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41afb8:	str	x19, [x8, #1576]
  41afbc:	ldp	x20, x19, [sp, #176]
  41afc0:	ldp	x22, x21, [sp, #160]
  41afc4:	ldp	x24, x23, [sp, #144]
  41afc8:	ldp	x29, x30, [sp, #128]
  41afcc:	add	sp, sp, #0xc0
  41afd0:	ret

000000000041afd4 <tilde_expand@@Base>:
  41afd4:	stp	x29, x30, [sp, #-48]!
  41afd8:	stp	x22, x21, [sp, #16]
  41afdc:	stp	x20, x19, [sp, #32]
  41afe0:	mov	x19, x0
  41afe4:	ldrb	w8, [x19, #1]!
  41afe8:	mov	x29, sp
  41afec:	cmp	w8, #0x2f
  41aff0:	b.eq	41aff8 <tilde_expand@@Base+0x24>  // b.none
  41aff4:	cbnz	w8, 41b02c <tilde_expand@@Base+0x58>
  41aff8:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  41affc:	ldr	w22, [x21, #88]
  41b000:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41b004:	add	x0, x0, #0xade
  41b008:	mov	x1, xzr
  41b00c:	str	wzr, [x21, #88]
  41b010:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  41b014:	str	w22, [x21, #88]
  41b018:	ldrb	w21, [x0]
  41b01c:	mov	x20, x0
  41b020:	cbz	w21, 41b070 <tilde_expand@@Base+0x9c>
  41b024:	cbnz	x20, 41b08c <tilde_expand@@Base+0xb8>
  41b028:	b	41b094 <tilde_expand@@Base+0xc0>
  41b02c:	mov	w1, #0x2f                  	// #47
  41b030:	mov	x0, x19
  41b034:	bl	406cd0 <strchr@plt>
  41b038:	mov	x20, x0
  41b03c:	cbz	x0, 41b044 <tilde_expand@@Base+0x70>
  41b040:	strb	wzr, [x20]
  41b044:	mov	x0, x19
  41b048:	bl	406ab0 <getpwnam@plt>
  41b04c:	cbz	x0, 41b0d4 <tilde_expand@@Base+0x100>
  41b050:	ldr	x1, [x0, #32]
  41b054:	cbz	x20, 41b100 <tilde_expand@@Base+0x12c>
  41b058:	adrp	x2, 425000 <_IO_stdin_used@@Base+0x1290>
  41b05c:	add	x3, x20, #0x1
  41b060:	add	x2, x2, #0x6f7
  41b064:	mov	w0, #0x3                   	// #3
  41b068:	bl	4176dc <concat@@Base>
  41b06c:	b	41b104 <tilde_expand@@Base+0x130>
  41b070:	mov	x0, x20
  41b074:	bl	406cb0 <free@plt>
  41b078:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41b07c:	add	x0, x0, #0xae6
  41b080:	bl	406ec0 <getenv@plt>
  41b084:	mov	x20, x0
  41b088:	cbz	x20, 41b094 <tilde_expand@@Base+0xc0>
  41b08c:	ldrb	w8, [x20]
  41b090:	cbnz	w8, 41b0ac <tilde_expand@@Base+0xd8>
  41b094:	bl	406f10 <getlogin@plt>
  41b098:	cbz	x0, 41b0e8 <tilde_expand@@Base+0x114>
  41b09c:	bl	406ab0 <getpwnam@plt>
  41b0a0:	cbz	x0, 41b0e8 <tilde_expand@@Base+0x114>
  41b0a4:	ldr	x20, [x0, #32]
  41b0a8:	cbz	x20, 41b0e8 <tilde_expand@@Base+0x114>
  41b0ac:	mov	w0, #0x2                   	// #2
  41b0b0:	mov	x1, x20
  41b0b4:	mov	x2, x19
  41b0b8:	bl	4176dc <concat@@Base>
  41b0bc:	bl	4178d4 <xstrdup@@Base>
  41b0c0:	mov	x19, x0
  41b0c4:	cbz	w21, 41b0ec <tilde_expand@@Base+0x118>
  41b0c8:	mov	x0, x20
  41b0cc:	bl	406cb0 <free@plt>
  41b0d0:	b	41b0ec <tilde_expand@@Base+0x118>
  41b0d4:	cbz	x20, 41b0e8 <tilde_expand@@Base+0x114>
  41b0d8:	mov	x19, xzr
  41b0dc:	mov	w8, #0x2f                  	// #47
  41b0e0:	strb	w8, [x20]
  41b0e4:	b	41b0ec <tilde_expand@@Base+0x118>
  41b0e8:	mov	x19, xzr
  41b0ec:	mov	x0, x19
  41b0f0:	ldp	x20, x19, [sp, #32]
  41b0f4:	ldp	x22, x21, [sp, #16]
  41b0f8:	ldp	x29, x30, [sp], #48
  41b0fc:	ret
  41b100:	mov	x0, x1
  41b104:	ldp	x20, x19, [sp, #32]
  41b108:	ldp	x22, x21, [sp, #16]
  41b10c:	ldp	x29, x30, [sp], #48
  41b110:	b	4178d4 <xstrdup@@Base>

000000000041b114 <parse_file_seq@@Base>:
  41b114:	sub	sp, sp, #0x100
  41b118:	orr	w9, w2, #0x1
  41b11c:	orr	w8, w2, #0x3
  41b120:	tst	w4, #0x20
  41b124:	csel	w8, w8, w9, eq  // eq = none
  41b128:	str	w8, [sp, #16]
  41b12c:	cmp	x1, #0x10
  41b130:	mov	w8, #0x10                  	// #16
  41b134:	stp	x29, x30, [sp, #160]
  41b138:	stp	x24, x23, [sp, #208]
  41b13c:	stp	x22, x21, [sp, #224]
  41b140:	stp	x20, x19, [sp, #240]
  41b144:	add	x29, sp, #0xa0
  41b148:	mov	w19, w4
  41b14c:	mov	x20, x3
  41b150:	mov	x22, x0
  41b154:	csel	x23, x1, x8, hi  // hi = pmore
  41b158:	stp	x28, x27, [sp, #176]
  41b15c:	stp	x26, x25, [sp, #192]
  41b160:	stur	xzr, [x29, #-8]
  41b164:	str	w9, [sp, #52]
  41b168:	tbnz	w4, #2, 41b174 <parse_file_seq@@Base+0x60>
  41b16c:	add	x0, sp, #0x50
  41b170:	bl	40975c <dir_setup_glob@@Base>
  41b174:	ldr	x28, [x22]
  41b178:	mov	x0, x28
  41b17c:	bl	406790 <strlen@plt>
  41b180:	adrp	x21, 43e000 <stdio_traced@@Base+0x1a38>
  41b184:	ldr	x8, [x21, #1592]
  41b188:	adrp	x26, 43e000 <stdio_traced@@Base+0x1a38>
  41b18c:	ldr	x10, [x26, #1584]
  41b190:	add	x24, x0, #0x1
  41b194:	cmp	x24, x8
  41b198:	str	x22, [sp, #8]
  41b19c:	b.ls	41b1bc <parse_file_seq@@Base+0xa8>  // b.plast
  41b1a0:	mov	x0, x10
  41b1a4:	mov	x1, x24
  41b1a8:	bl	417854 <xrealloc@@Base>
  41b1ac:	str	x0, [x26, #1584]
  41b1b0:	str	x24, [x21, #1592]
  41b1b4:	ldr	x28, [x22]
  41b1b8:	mov	x10, x0
  41b1bc:	ldr	w22, [sp, #16]
  41b1c0:	tst	w19, #0x2
  41b1c4:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  41b1c8:	cset	w8, eq  // eq = none
  41b1cc:	sub	x21, x29, #0x8
  41b1d0:	add	x27, x27, #0xcf0
  41b1d4:	eor	w8, w8, #0x1
  41b1d8:	str	w8, [sp, #48]
  41b1dc:	sub	x24, x28, #0x1
  41b1e0:	stp	xzr, xzr, [sp, #56]
  41b1e4:	ldrb	w8, [x24, #1]!
  41b1e8:	ldrh	w8, [x27, x8, lsl #1]
  41b1ec:	tst	w8, #0x6
  41b1f0:	b.ne	41b1e4 <parse_file_seq@@Base+0xd0>  // b.any
  41b1f4:	ldr	w9, [sp, #52]
  41b1f8:	tst	w9, w8
  41b1fc:	b.ne	41b604 <parse_file_seq@@Base+0x4f0>  // b.any
  41b200:	mov	x0, x24
  41b204:	mov	w1, w22
  41b208:	mov	x26, x10
  41b20c:	bl	41b634 <parse_file_seq@@Base+0x520>
  41b210:	cbz	x0, 41b264 <parse_file_seq@@Base+0x150>
  41b214:	tbnz	w19, #0, 41b274 <parse_file_seq@@Base+0x160>
  41b218:	sub	x8, x0, x24
  41b21c:	cmp	x8, #0x3
  41b220:	mov	x10, x26
  41b224:	b.lt	41b278 <parse_file_seq@@Base+0x164>  // b.tstop
  41b228:	ldrb	w8, [x24]
  41b22c:	and	w8, w8, #0xff
  41b230:	cmp	w8, #0x2e
  41b234:	b.ne	41b278 <parse_file_seq@@Base+0x164>  // b.any
  41b238:	ldrb	w8, [x24, #1]
  41b23c:	cmp	w8, #0x2f
  41b240:	b.ne	41b278 <parse_file_seq@@Base+0x164>  // b.any
  41b244:	add	x24, x24, #0x1
  41b248:	ldrb	w8, [x24, #1]!
  41b24c:	cmp	w8, #0x2f
  41b250:	b.eq	41b248 <parse_file_seq@@Base+0x134>  // b.none
  41b254:	sub	x9, x0, x24
  41b258:	cmp	x9, #0x3
  41b25c:	b.ge	41b22c <parse_file_seq@@Base+0x118>  // b.tcont
  41b260:	b	41b278 <parse_file_seq@@Base+0x164>
  41b264:	mov	x0, x24
  41b268:	bl	406790 <strlen@plt>
  41b26c:	add	x0, x24, x0
  41b270:	tbz	w19, #0, 41b218 <parse_file_seq@@Base+0x104>
  41b274:	mov	x10, x26
  41b278:	cmp	x24, x0
  41b27c:	b.eq	41b2a0 <parse_file_seq@@Base+0x18c>  // b.none
  41b280:	sub	x28, x0, x24
  41b284:	mov	x25, x0
  41b288:	mov	x0, x10
  41b28c:	mov	x1, x24
  41b290:	mov	x2, x28
  41b294:	bl	406750 <memcpy@plt>
  41b298:	mov	x10, x26
  41b29c:	b	41b2b0 <parse_file_seq@@Base+0x19c>
  41b2a0:	mov	w8, #0x2f2e                	// #12078
  41b2a4:	mov	x25, x0
  41b2a8:	strh	w8, [x10]
  41b2ac:	mov	w28, #0x2                   	// #2
  41b2b0:	strb	wzr, [x10, x28]
  41b2b4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41b2b8:	ldr	x24, [x8, #1584]
  41b2bc:	ldr	w9, [sp, #48]
  41b2c0:	cmp	x10, x24
  41b2c4:	cset	w8, ne  // ne = any
  41b2c8:	orr	w8, w8, w9
  41b2cc:	tbnz	w8, #0, 41b368 <parse_file_seq@@Base+0x254>
  41b2d0:	ldrb	w8, [x10]
  41b2d4:	cmp	w8, #0x28
  41b2d8:	b.eq	41b368 <parse_file_seq@@Base+0x254>  // b.none
  41b2dc:	add	x8, x28, x10
  41b2e0:	ldurb	w8, [x8, #-1]
  41b2e4:	cmp	w8, #0x29
  41b2e8:	b.eq	41b368 <parse_file_seq@@Base+0x254>  // b.none
  41b2ec:	mov	w1, #0x28                  	// #40
  41b2f0:	mov	x0, x10
  41b2f4:	bl	406cd0 <strchr@plt>
  41b2f8:	cbz	x0, 41b350 <parse_file_seq@@Base+0x23c>
  41b2fc:	mov	x9, x25
  41b300:	sub	x8, x9, #0x1
  41b304:	ldrb	w10, [x8, #1]!
  41b308:	ldrh	w11, [x27, x10, lsl #1]
  41b30c:	tst	w11, #0x6
  41b310:	b.ne	41b304 <parse_file_seq@@Base+0x1f0>  // b.any
  41b314:	b	41b320 <parse_file_seq@@Base+0x20c>
  41b318:	ldrb	w10, [x8, #1]!
  41b31c:	ldrh	w11, [x27, x10, lsl #1]
  41b320:	tst	w22, w11
  41b324:	b.eq	41b318 <parse_file_seq@@Base+0x204>  // b.none
  41b328:	cmp	x8, x9
  41b32c:	b.eq	41b344 <parse_file_seq@@Base+0x230>  // b.none
  41b330:	ldurb	w9, [x8, #-1]
  41b334:	cmp	w9, #0x29
  41b338:	b.eq	41b358 <parse_file_seq@@Base+0x244>  // b.none
  41b33c:	mov	x9, x8
  41b340:	cbnz	w10, 41b300 <parse_file_seq@@Base+0x1ec>
  41b344:	mov	x10, x26
  41b348:	cbnz	x28, 41b368 <parse_file_seq@@Base+0x254>
  41b34c:	b	41b5fc <parse_file_seq@@Base+0x4e8>
  41b350:	mov	x10, x26
  41b354:	b	41b368 <parse_file_seq@@Base+0x254>
  41b358:	add	x8, x28, x26
  41b35c:	add	x10, x0, #0x1
  41b360:	sub	x28, x8, x10
  41b364:	cbz	x28, 41b5fc <parse_file_seq@@Base+0x4e8>
  41b368:	cmp	x10, x24
  41b36c:	b.ls	41b3a0 <parse_file_seq@@Base+0x28c>  // b.plast
  41b370:	add	x8, x28, x10
  41b374:	ldurb	w8, [x8, #-1]
  41b378:	cmp	w8, #0x29
  41b37c:	b.ne	41b398 <parse_file_seq@@Base+0x284>  // b.any
  41b380:	cmp	x28, #0x1
  41b384:	mov	x10, x24
  41b388:	mov	x28, x25
  41b38c:	b.ne	41b3a4 <parse_file_seq@@Base+0x290>  // b.any
  41b390:	mov	x10, x24
  41b394:	b	41b1dc <parse_file_seq@@Base+0xc8>
  41b398:	mov	w8, #0x29                  	// #41
  41b39c:	strh	w8, [x10, x28]
  41b3a0:	mov	x28, x25
  41b3a4:	tbz	w19, #2, 41b3dc <parse_file_seq@@Base+0x2c8>
  41b3a8:	mov	w0, #0x2                   	// #2
  41b3ac:	mov	x1, x20
  41b3b0:	mov	x2, x24
  41b3b4:	mov	x26, x10
  41b3b8:	bl	4176dc <concat@@Base>
  41b3bc:	mov	x24, x0
  41b3c0:	mov	x0, x23
  41b3c4:	bl	4178ac <xcalloc@@Base>
  41b3c8:	str	x0, [x21]
  41b3cc:	mov	x0, x24
  41b3d0:	tbnz	w19, #4, 41b410 <parse_file_seq@@Base+0x2fc>
  41b3d4:	bl	42016c <strcache_add@@Base>
  41b3d8:	b	41b414 <parse_file_seq@@Base+0x300>
  41b3dc:	str	x24, [sp, #72]
  41b3e0:	ldrb	w8, [x24]
  41b3e4:	cmp	w8, #0x7e
  41b3e8:	b.ne	41b428 <parse_file_seq@@Base+0x314>  // b.any
  41b3ec:	mov	x0, x24
  41b3f0:	mov	x26, x10
  41b3f4:	bl	41afd4 <tilde_expand@@Base>
  41b3f8:	mov	x25, x0
  41b3fc:	cbz	x0, 41b408 <parse_file_seq@@Base+0x2f4>
  41b400:	mov	x24, x25
  41b404:	str	x25, [sp, #72]
  41b408:	mov	x10, x26
  41b40c:	b	41b42c <parse_file_seq@@Base+0x318>
  41b410:	bl	4178d4 <xstrdup@@Base>
  41b414:	ldr	x8, [x21]
  41b418:	mov	x10, x26
  41b41c:	str	x0, [x8, #8]
  41b420:	ldr	x21, [x21]
  41b424:	b	41b1dc <parse_file_seq@@Base+0xc8>
  41b428:	mov	x25, xzr
  41b42c:	str	x10, [sp, #40]
  41b430:	tbnz	w19, #1, 41b458 <parse_file_seq@@Base+0x344>
  41b434:	mov	x0, x24
  41b438:	bl	40706c <ar_name@@Base>
  41b43c:	cbz	w0, 41b458 <parse_file_seq@@Base+0x344>
  41b440:	add	x1, sp, #0x40
  41b444:	add	x2, sp, #0x38
  41b448:	mov	x0, x24
  41b44c:	bl	40711c <ar_parse_name@@Base>
  41b450:	ldr	x24, [sp, #64]
  41b454:	str	x24, [sp, #72]
  41b458:	tbnz	w19, #3, 41b470 <parse_file_seq@@Base+0x35c>
  41b45c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41b460:	mov	x0, x24
  41b464:	add	x1, x1, #0xaeb
  41b468:	bl	406a90 <strpbrk@plt>
  41b46c:	cbz	x0, 41b4d8 <parse_file_seq@@Base+0x3c4>
  41b470:	add	x3, sp, #0x50
  41b474:	mov	w1, #0x200                 	// #512
  41b478:	mov	x0, x24
  41b47c:	mov	x2, xzr
  41b480:	bl	406e40 <glob@plt>
  41b484:	cbz	w0, 41b4b4 <parse_file_seq@@Base+0x3a0>
  41b488:	cmp	w0, #0x3
  41b48c:	b.eq	41b4a0 <parse_file_seq@@Base+0x38c>  // b.none
  41b490:	cmp	w0, #0x1
  41b494:	stp	x25, x28, [sp, #24]
  41b498:	b.ne	41b4a8 <parse_file_seq@@Base+0x394>  // b.any
  41b49c:	b	41b630 <parse_file_seq@@Base+0x51c>
  41b4a0:	tbnz	w19, #3, 41b5dc <parse_file_seq@@Base+0x4c8>
  41b4a4:	stp	x25, x28, [sp, #24]
  41b4a8:	add	x28, sp, #0x48
  41b4ac:	mov	w25, #0x1                   	// #1
  41b4b0:	b	41b4cc <parse_file_seq@@Base+0x3b8>
  41b4b4:	ldr	x8, [sp, #80]
  41b4b8:	cmp	w8, #0x1
  41b4bc:	b.lt	41b5dc <parse_file_seq@@Base+0x4c8>  // b.tstop
  41b4c0:	stp	x25, x28, [sp, #24]
  41b4c4:	ldr	x28, [sp, #88]
  41b4c8:	and	x25, x8, #0xffffffff
  41b4cc:	mov	w8, #0x1                   	// #1
  41b4d0:	str	w8, [sp, #20]
  41b4d4:	b	41b4e8 <parse_file_seq@@Base+0x3d4>
  41b4d8:	stp	x25, x28, [sp, #24]
  41b4dc:	str	wzr, [sp, #20]
  41b4e0:	add	x28, sp, #0x48
  41b4e4:	mov	w25, #0x1                   	// #1
  41b4e8:	mov	x22, xzr
  41b4ec:	ldr	x1, [sp, #56]
  41b4f0:	ldr	x2, [x28, x22, lsl #3]
  41b4f4:	cbz	x1, 41b560 <parse_file_seq@@Base+0x44c>
  41b4f8:	mov	x0, x2
  41b4fc:	mov	x2, x23
  41b500:	bl	40739c <ar_glob@@Base>
  41b504:	cbz	x0, 41b570 <parse_file_seq@@Base+0x45c>
  41b508:	ldr	x8, [x21]
  41b50c:	cmp	x8, #0x0
  41b510:	csel	x8, x21, x8, eq  // eq = none
  41b514:	str	x0, [x8]
  41b518:	mov	x21, x0
  41b51c:	tbnz	w19, #4, 41b53c <parse_file_seq@@Base+0x428>
  41b520:	cbz	x20, 41b554 <parse_file_seq@@Base+0x440>
  41b524:	mov	w0, #0x2                   	// #2
  41b528:	mov	x1, x20
  41b52c:	mov	x2, x24
  41b530:	bl	4176dc <concat@@Base>
  41b534:	bl	42016c <strcache_add@@Base>
  41b538:	b	41b550 <parse_file_seq@@Base+0x43c>
  41b53c:	mov	w0, #0x2                   	// #2
  41b540:	mov	x1, x20
  41b544:	mov	x2, x24
  41b548:	bl	4176dc <concat@@Base>
  41b54c:	bl	4178d4 <xstrdup@@Base>
  41b550:	str	x0, [x21, #8]
  41b554:	ldr	x0, [x21]
  41b558:	cbnz	x0, 41b518 <parse_file_seq@@Base+0x404>
  41b55c:	b	41b5c4 <parse_file_seq@@Base+0x4b0>
  41b560:	mov	w0, #0x2                   	// #2
  41b564:	mov	x1, x20
  41b568:	bl	4176dc <concat@@Base>
  41b56c:	b	41b594 <parse_file_seq@@Base+0x480>
  41b570:	ldr	x2, [x28, x22, lsl #3]
  41b574:	ldr	x4, [sp, #56]
  41b578:	adrp	x3, 423000 <fd_noinherit@@Base+0x38>
  41b57c:	adrp	x5, 429000 <_IO_stdin_used@@Base+0x5290>
  41b580:	mov	w0, #0x5                   	// #5
  41b584:	mov	x1, x20
  41b588:	add	x3, x3, #0xe62
  41b58c:	add	x5, x5, #0xa97
  41b590:	bl	4176dc <concat@@Base>
  41b594:	mov	x26, x0
  41b598:	mov	x0, x23
  41b59c:	bl	4178ac <xcalloc@@Base>
  41b5a0:	str	x0, [x21]
  41b5a4:	mov	x0, x26
  41b5a8:	tbnz	w19, #4, 41b5b4 <parse_file_seq@@Base+0x4a0>
  41b5ac:	bl	42016c <strcache_add@@Base>
  41b5b0:	b	41b5b8 <parse_file_seq@@Base+0x4a4>
  41b5b4:	bl	4178d4 <xstrdup@@Base>
  41b5b8:	ldr	x8, [x21]
  41b5bc:	str	x0, [x8, #8]
  41b5c0:	ldr	x21, [x21]
  41b5c4:	add	x22, x22, #0x1
  41b5c8:	cmp	x22, x25
  41b5cc:	b.ne	41b4ec <parse_file_seq@@Base+0x3d8>  // b.any
  41b5d0:	ldp	w22, w8, [sp, #16]
  41b5d4:	ldp	x25, x28, [sp, #24]
  41b5d8:	cbz	w8, 41b5e4 <parse_file_seq@@Base+0x4d0>
  41b5dc:	add	x0, sp, #0x50
  41b5e0:	bl	406ce0 <globfree@plt>
  41b5e4:	ldr	x0, [sp, #64]
  41b5e8:	bl	406cb0 <free@plt>
  41b5ec:	mov	x0, x25
  41b5f0:	bl	406cb0 <free@plt>
  41b5f4:	ldr	x10, [sp, #40]
  41b5f8:	b	41b1dc <parse_file_seq@@Base+0xc8>
  41b5fc:	mov	x28, x25
  41b600:	b	41b1dc <parse_file_seq@@Base+0xc8>
  41b604:	ldr	x8, [sp, #8]
  41b608:	str	x24, [x8]
  41b60c:	ldur	x0, [x29, #-8]
  41b610:	ldp	x20, x19, [sp, #240]
  41b614:	ldp	x22, x21, [sp, #224]
  41b618:	ldp	x24, x23, [sp, #208]
  41b61c:	ldp	x26, x25, [sp, #192]
  41b620:	ldp	x28, x27, [sp, #176]
  41b624:	ldp	x29, x30, [sp, #160]
  41b628:	add	sp, sp, #0x100
  41b62c:	ret
  41b630:	bl	418ad4 <out_of_memory@@Base>
  41b634:	stp	x29, x30, [sp, #-96]!
  41b638:	stp	x24, x23, [sp, #48]
  41b63c:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  41b640:	stp	x28, x27, [sp, #16]
  41b644:	stp	x26, x25, [sp, #32]
  41b648:	stp	x22, x21, [sp, #64]
  41b64c:	stp	x20, x19, [sp, #80]
  41b650:	mov	x29, sp
  41b654:	mov	x19, x0
  41b658:	mov	x20, xzr
  41b65c:	orr	w22, w1, #0x1
  41b660:	add	x23, x0, #0x1
  41b664:	add	x24, x24, #0xcf0
  41b668:	mov	w25, #0x7d                  	// #125
  41b66c:	mov	w26, #0x29                  	// #41
  41b670:	mov	x21, x0
  41b674:	mov	x27, x21
  41b678:	ldrb	w8, [x21], #1
  41b67c:	ldrh	w9, [x24, x8, lsl #1]
  41b680:	tst	w22, w9
  41b684:	b.eq	41b674 <parse_file_seq@@Base+0x560>  // b.none
  41b688:	cmp	w8, #0x24
  41b68c:	b.ne	41b6f4 <parse_file_seq@@Base+0x5e0>  // b.any
  41b690:	ldrb	w8, [x21]
  41b694:	cbz	w8, 41b784 <parse_file_seq@@Base+0x670>
  41b698:	cmp	w8, #0x7b
  41b69c:	add	x21, x27, #0x2
  41b6a0:	b.eq	41b6ac <parse_file_seq@@Base+0x598>  // b.none
  41b6a4:	cmp	w8, #0x28
  41b6a8:	b.ne	41b674 <parse_file_seq@@Base+0x560>  // b.any
  41b6ac:	ldrb	w11, [x21]
  41b6b0:	cmp	w8, #0x28
  41b6b4:	csel	w9, w26, w25, eq  // eq = none
  41b6b8:	cbz	w11, 41b674 <parse_file_seq@@Base+0x560>
  41b6bc:	add	x21, x27, #0x3
  41b6c0:	mov	w10, #0x1                   	// #1
  41b6c4:	cmp	w8, w11, uxtb
  41b6c8:	b.ne	41b6d4 <parse_file_seq@@Base+0x5c0>  // b.any
  41b6cc:	add	w10, w10, #0x1
  41b6d0:	b	41b6e4 <parse_file_seq@@Base+0x5d0>
  41b6d4:	cmp	w9, w11, uxtb
  41b6d8:	b.ne	41b6e4 <parse_file_seq@@Base+0x5d0>  // b.any
  41b6dc:	subs	w10, w10, #0x1
  41b6e0:	b.eq	41b674 <parse_file_seq@@Base+0x560>  // b.none
  41b6e4:	ldrb	w11, [x21], #1
  41b6e8:	cbnz	w11, 41b6c4 <parse_file_seq@@Base+0x5b0>
  41b6ec:	sub	x21, x21, #0x1
  41b6f0:	b	41b674 <parse_file_seq@@Base+0x560>
  41b6f4:	cbz	w8, 41b784 <parse_file_seq@@Base+0x670>
  41b6f8:	cmp	x27, x19
  41b6fc:	b.ls	41b7a8 <parse_file_seq@@Base+0x694>  // b.plast
  41b700:	ldurb	w8, [x27, #-1]
  41b704:	cmp	w8, #0x5c
  41b708:	b.ne	41b7a8 <parse_file_seq@@Base+0x694>  // b.any
  41b70c:	sub	x8, x27, #0x2
  41b710:	cmp	x8, x19
  41b714:	b.cs	41b720 <parse_file_seq@@Base+0x60c>  // b.hs, b.nlast
  41b718:	mov	w8, #0xfffffffe            	// #-2
  41b71c:	b	41b740 <parse_file_seq@@Base+0x62c>
  41b720:	mov	x8, #0xfffffffffffffffe    	// #-2
  41b724:	ldrb	w9, [x27, x8]
  41b728:	cmp	w9, #0x5c
  41b72c:	b.ne	41b740 <parse_file_seq@@Base+0x62c>  // b.any
  41b730:	sub	x8, x8, #0x1
  41b734:	add	x9, x27, x8
  41b738:	cmp	x9, x19
  41b73c:	b.cs	41b724 <parse_file_seq@@Base+0x610>  // b.hs, b.nlast
  41b740:	add	w28, w8, #0x1
  41b744:	cbnz	x20, 41b754 <parse_file_seq@@Base+0x640>
  41b748:	mov	x0, x19
  41b74c:	bl	406790 <strlen@plt>
  41b750:	mov	x20, x0
  41b754:	cmp	w28, #0x0
  41b758:	cinc	w9, w28, lt  // lt = tstop
  41b75c:	sub	x8, x23, x27
  41b760:	asr	w9, w9, #1
  41b764:	add	x21, x27, w9, sxtw
  41b768:	sub	x8, x8, w9, sxtw
  41b76c:	add	x0, x27, w28, sxtw
  41b770:	add	x2, x8, x20
  41b774:	mov	x1, x21
  41b778:	bl	406760 <memmove@plt>
  41b77c:	tbnz	w28, #0, 41b674 <parse_file_seq@@Base+0x560>
  41b780:	b	41b788 <parse_file_seq@@Base+0x674>
  41b784:	mov	x21, xzr
  41b788:	mov	x0, x21
  41b78c:	ldp	x20, x19, [sp, #80]
  41b790:	ldp	x22, x21, [sp, #64]
  41b794:	ldp	x24, x23, [sp, #48]
  41b798:	ldp	x26, x25, [sp, #32]
  41b79c:	ldp	x28, x27, [sp, #16]
  41b7a0:	ldp	x29, x30, [sp], #96
  41b7a4:	ret
  41b7a8:	mov	x21, x27
  41b7ac:	b	41b788 <parse_file_seq@@Base+0x674>
  41b7b0:	stp	x29, x30, [sp, #-96]!
  41b7b4:	stp	x26, x25, [sp, #32]
  41b7b8:	stp	x24, x23, [sp, #48]
  41b7bc:	stp	x22, x21, [sp, #64]
  41b7c0:	stp	x20, x19, [sp, #80]
  41b7c4:	ldr	x8, [x0, #32]
  41b7c8:	mov	x19, x0
  41b7cc:	str	x27, [sp, #16]
  41b7d0:	mov	x29, sp
  41b7d4:	cbz	x8, 41b918 <parse_file_seq@@Base+0x804>
  41b7d8:	ldp	x21, x22, [x19, #16]
  41b7dc:	strb	wzr, [x21]
  41b7e0:	ldr	x2, [x19, #32]
  41b7e4:	mov	x0, x21
  41b7e8:	mov	w1, w22
  41b7ec:	bl	406f30 <fgets@plt>
  41b7f0:	mov	x20, xzr
  41b7f4:	cbz	x0, 41b988 <parse_file_seq@@Base+0x874>
  41b7f8:	adrp	x23, 428000 <_IO_stdin_used@@Base+0x4290>
  41b7fc:	add	x27, x21, x22
  41b800:	add	x22, x19, #0x28
  41b804:	add	x23, x23, #0xcda
  41b808:	mov	w26, #0xa                   	// #10
  41b80c:	mov	x24, x21
  41b810:	mov	x0, x21
  41b814:	bl	406790 <strlen@plt>
  41b818:	cbnz	x0, 41b840 <parse_file_seq@@Base+0x72c>
  41b81c:	mov	w2, #0x5                   	// #5
  41b820:	mov	x1, x23
  41b824:	bl	406e10 <dcgettext@plt>
  41b828:	mov	x2, x0
  41b82c:	mov	x0, x22
  41b830:	mov	x1, xzr
  41b834:	bl	418744 <error@@Base>
  41b838:	mov	w0, #0x1                   	// #1
  41b83c:	strb	w26, [x21]
  41b840:	add	x21, x21, x0
  41b844:	mov	x25, x21
  41b848:	ldrb	w8, [x25, #-1]!
  41b84c:	cmp	w8, #0xa
  41b850:	b.ne	41b8cc <parse_file_seq@@Base+0x7b8>  // b.any
  41b854:	sub	x8, x21, x24
  41b858:	cmp	x8, #0x2
  41b85c:	add	x20, x20, #0x1
  41b860:	b.lt	41b890 <parse_file_seq@@Base+0x77c>  // b.tstop
  41b864:	ldurb	w8, [x21, #-2]
  41b868:	cmp	w8, #0xd
  41b86c:	b.ne	41b890 <parse_file_seq@@Base+0x77c>  // b.any
  41b870:	mov	x0, x25
  41b874:	sub	x21, x25, #0x1
  41b878:	bl	406790 <strlen@plt>
  41b87c:	add	x2, x0, #0x1
  41b880:	mov	x0, x21
  41b884:	mov	x1, x25
  41b888:	bl	406760 <memmove@plt>
  41b88c:	mov	x21, x25
  41b890:	sub	x8, x21, #0x2
  41b894:	cmp	x8, x24
  41b898:	b.cc	41b984 <parse_file_seq@@Base+0x870>  // b.lo, b.ul, b.last
  41b89c:	mov	w9, wzr
  41b8a0:	ldrb	w10, [x8]
  41b8a4:	cmp	w10, #0x5c
  41b8a8:	b.ne	41b8bc <parse_file_seq@@Base+0x7a8>  // b.any
  41b8ac:	sub	x8, x8, #0x1
  41b8b0:	cmp	x8, x24
  41b8b4:	eor	w9, w9, #0x1
  41b8b8:	b.cs	41b8a0 <parse_file_seq@@Base+0x78c>  // b.hs, b.nlast
  41b8bc:	cbz	w9, 41b984 <parse_file_seq@@Base+0x870>
  41b8c0:	sub	x8, x27, x21
  41b8c4:	cmp	x8, #0x4f
  41b8c8:	b.gt	41b900 <parse_file_seq@@Base+0x7ec>
  41b8cc:	ldr	x8, [x19, #24]
  41b8d0:	mov	x0, x24
  41b8d4:	sub	x21, x21, x24
  41b8d8:	lsl	x1, x8, #1
  41b8dc:	str	x1, [x19, #24]
  41b8e0:	bl	417854 <xrealloc@@Base>
  41b8e4:	ldr	x8, [x19, #24]
  41b8e8:	mov	x24, x0
  41b8ec:	add	x21, x0, x21
  41b8f0:	str	x0, [x19, #16]
  41b8f4:	add	x27, x0, x8
  41b8f8:	str	x0, [x19]
  41b8fc:	strb	wzr, [x21]
  41b900:	ldr	x2, [x19, #32]
  41b904:	sub	w1, w27, w21
  41b908:	mov	x0, x21
  41b90c:	bl	406f30 <fgets@plt>
  41b910:	cbnz	x0, 41b810 <parse_file_seq@@Base+0x6fc>
  41b914:	b	41b988 <parse_file_seq@@Base+0x874>
  41b918:	ldp	x21, x22, [x19, #16]
  41b91c:	ldr	x20, [x19, #8]
  41b920:	add	x8, x21, x22
  41b924:	cmp	x20, x8
  41b928:	b.cs	41b9ac <parse_file_seq@@Base+0x898>  // b.hs, b.nlast
  41b92c:	str	x20, [x19]
  41b930:	mov	w1, #0xa                   	// #10
  41b934:	mov	x0, x20
  41b938:	bl	406cd0 <strchr@plt>
  41b93c:	cbz	x0, 41b9b4 <parse_file_seq@@Base+0x8a0>
  41b940:	cmp	x0, x20
  41b944:	b.ls	41b9c8 <parse_file_seq@@Base+0x8b4>  // b.plast
  41b948:	mov	w9, wzr
  41b94c:	mov	x8, x0
  41b950:	ldrb	w10, [x8, #-1]!
  41b954:	cmp	w10, #0x5c
  41b958:	mov	w10, w9
  41b95c:	b.ne	41b978 <parse_file_seq@@Base+0x864>  // b.any
  41b960:	cmp	w10, #0x0
  41b964:	cset	w9, eq  // eq = none
  41b968:	cmp	x8, x20
  41b96c:	b.hi	41b950 <parse_file_seq@@Base+0x83c>  // b.pmore
  41b970:	cbz	w10, 41b97c <parse_file_seq@@Base+0x868>
  41b974:	b	41b9c8 <parse_file_seq@@Base+0x8b4>
  41b978:	cbz	w10, 41b9c8 <parse_file_seq@@Base+0x8b4>
  41b97c:	add	x20, x0, #0x1
  41b980:	b	41b930 <parse_file_seq@@Base+0x81c>
  41b984:	sturb	wzr, [x21, #-1]
  41b988:	ldr	x0, [x19, #32]
  41b98c:	bl	406f50 <ferror@plt>
  41b990:	cbnz	w0, 41b9f4 <parse_file_seq@@Base+0x8e0>
  41b994:	cbnz	x20, 41b9d4 <parse_file_seq@@Base+0x8c0>
  41b998:	ldr	x8, [x19, #16]
  41b99c:	cmp	x21, x8
  41b9a0:	mov	x8, #0xffffffffffffffff    	// #-1
  41b9a4:	cneg	x20, x8, ne  // ne = any
  41b9a8:	b	41b9d4 <parse_file_seq@@Base+0x8c0>
  41b9ac:	mov	x20, #0xffffffffffffffff    	// #-1
  41b9b0:	b	41b9d4 <parse_file_seq@@Base+0x8c0>
  41b9b4:	add	x8, x21, x22
  41b9b8:	add	x8, x8, #0x1
  41b9bc:	mov	x20, xzr
  41b9c0:	str	x8, [x19, #8]
  41b9c4:	b	41b9d4 <parse_file_seq@@Base+0x8c0>
  41b9c8:	strb	wzr, [x0], #1
  41b9cc:	mov	x20, xzr
  41b9d0:	str	x0, [x19, #8]
  41b9d4:	mov	x0, x20
  41b9d8:	ldp	x20, x19, [sp, #80]
  41b9dc:	ldp	x22, x21, [sp, #64]
  41b9e0:	ldp	x24, x23, [sp, #48]
  41b9e4:	ldp	x26, x25, [sp, #32]
  41b9e8:	ldr	x27, [sp, #16]
  41b9ec:	ldp	x29, x30, [sp], #96
  41b9f0:	ret
  41b9f4:	ldr	x0, [x19, #40]
  41b9f8:	bl	417cc8 <pfatal_with_name@@Base>
  41b9fc:	sub	sp, sp, #0x80
  41ba00:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41ba04:	stp	x20, x19, [sp, #112]
  41ba08:	mov	x19, x1
  41ba0c:	sub	x20, x0, #0x1
  41ba10:	add	x8, x8, #0xcf0
  41ba14:	stp	x29, x30, [sp, #48]
  41ba18:	str	x25, [sp, #64]
  41ba1c:	stp	x24, x23, [sp, #80]
  41ba20:	stp	x22, x21, [sp, #96]
  41ba24:	add	x29, sp, #0x30
  41ba28:	str	wzr, [x1]
  41ba2c:	ldrb	w9, [x20, #1]!
  41ba30:	ldrh	w10, [x8, x9, lsl #1]
  41ba34:	tst	w10, #0x6
  41ba38:	b.ne	41ba2c <parse_file_seq@@Base+0x918>  // b.any
  41ba3c:	cbz	w9, 41ba64 <parse_file_seq@@Base+0x950>
  41ba40:	mov	x1, sp
  41ba44:	mov	x0, x20
  41ba48:	bl	421e38 <parse_variable_definition@@Base>
  41ba4c:	cbz	x0, 41ba84 <parse_file_seq@@Base+0x970>
  41ba50:	mov	x25, x20
  41ba54:	ldrb	w8, [x19]
  41ba58:	mov	x20, x25
  41ba5c:	orr	w8, w8, #0x1
  41ba60:	strb	w8, [x19]
  41ba64:	mov	x0, x20
  41ba68:	ldp	x20, x19, [sp, #112]
  41ba6c:	ldp	x22, x21, [sp, #96]
  41ba70:	ldp	x24, x23, [sp, #80]
  41ba74:	ldr	x25, [sp, #64]
  41ba78:	ldp	x29, x30, [sp, #48]
  41ba7c:	add	sp, sp, #0x80
  41ba80:	ret
  41ba84:	adrp	x22, 426000 <_IO_stdin_used@@Base+0x2290>
  41ba88:	adrp	x23, 429000 <_IO_stdin_used@@Base+0x5290>
  41ba8c:	adrp	x24, 428000 <_IO_stdin_used@@Base+0x4290>
  41ba90:	add	x22, x22, #0x3a
  41ba94:	add	x23, x23, #0xbbe
  41ba98:	add	x24, x24, #0xbb9
  41ba9c:	mov	x25, x20
  41baa0:	mov	x0, x25
  41baa4:	bl	417930 <end_of_token@@Base>
  41baa8:	sub	x8, x0, x25
  41baac:	mov	x21, x0
  41bab0:	cmp	x8, #0x8
  41bab4:	b.eq	41bae4 <parse_file_seq@@Base+0x9d0>  // b.none
  41bab8:	cmp	x8, #0x7
  41babc:	b.eq	41bb00 <parse_file_seq@@Base+0x9ec>  // b.none
  41bac0:	cmp	x8, #0x6
  41bac4:	b.ne	41ba64 <parse_file_seq@@Base+0x950>  // b.any
  41bac8:	mov	w2, #0x6                   	// #6
  41bacc:	mov	x0, x24
  41bad0:	mov	x1, x25
  41bad4:	bl	406a30 <strncmp@plt>
  41bad8:	cbnz	w0, 41bb48 <parse_file_seq@@Base+0xa34>
  41badc:	mov	w8, #0x8                   	// #8
  41bae0:	b	41bb18 <parse_file_seq@@Base+0xa04>
  41bae4:	mov	w2, #0x8                   	// #8
  41bae8:	mov	x0, x22
  41baec:	mov	x1, x25
  41baf0:	bl	406a30 <strncmp@plt>
  41baf4:	cbnz	w0, 41bb6c <parse_file_seq@@Base+0xa58>
  41baf8:	mov	w8, #0x10                  	// #16
  41bafc:	b	41bb18 <parse_file_seq@@Base+0xa04>
  41bb00:	mov	w2, #0x7                   	// #7
  41bb04:	mov	x0, x23
  41bb08:	mov	x1, x25
  41bb0c:	bl	406a30 <strncmp@plt>
  41bb10:	cbnz	w0, 41ba64 <parse_file_seq@@Base+0x950>
  41bb14:	mov	w8, #0x20                  	// #32
  41bb18:	ldrb	w9, [x19]
  41bb1c:	mov	x0, x21
  41bb20:	orr	w8, w9, w8
  41bb24:	strb	w8, [x19]
  41bb28:	bl	417950 <next_token@@Base>
  41bb2c:	ldrb	w8, [x0]
  41bb30:	cbz	w8, 41ba64 <parse_file_seq@@Base+0x950>
  41bb34:	mov	x1, sp
  41bb38:	mov	x25, x0
  41bb3c:	bl	421e38 <parse_variable_definition@@Base>
  41bb40:	cbz	x0, 41baa0 <parse_file_seq@@Base+0x98c>
  41bb44:	b	41ba54 <parse_file_seq@@Base+0x940>
  41bb48:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41bb4c:	add	x0, x0, #0xd0e
  41bb50:	mov	w2, #0x6                   	// #6
  41bb54:	mov	x1, x25
  41bb58:	bl	406a30 <strncmp@plt>
  41bb5c:	cbnz	w0, 41ba64 <parse_file_seq@@Base+0x950>
  41bb60:	ldrb	w8, [x19]
  41bb64:	orr	w8, w8, #0x2
  41bb68:	b	41bb8c <parse_file_seq@@Base+0xa78>
  41bb6c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41bb70:	add	x0, x0, #0xd0c
  41bb74:	mov	w2, #0x8                   	// #8
  41bb78:	mov	x1, x25
  41bb7c:	bl	406a30 <strncmp@plt>
  41bb80:	cbnz	w0, 41ba64 <parse_file_seq@@Base+0x950>
  41bb84:	ldrb	w8, [x19]
  41bb88:	orr	w8, w8, #0x4
  41bb8c:	mov	x0, x21
  41bb90:	strb	w8, [x19]
  41bb94:	bl	417950 <next_token@@Base>
  41bb98:	mov	x25, x0
  41bb9c:	b	41ba54 <parse_file_seq@@Base+0x940>
  41bba0:	sub	sp, sp, #0x90
  41bba4:	stp	x29, x30, [sp, #48]
  41bba8:	add	x29, sp, #0x30
  41bbac:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41bbb0:	stp	x20, x19, [sp, #128]
  41bbb4:	ldr	w8, [x8, #2808]
  41bbb8:	ldr	x20, [x29, #112]
  41bbbc:	stp	x28, x27, [sp, #64]
  41bbc0:	stp	x26, x25, [sp, #80]
  41bbc4:	stp	x24, x23, [sp, #96]
  41bbc8:	stp	x22, x21, [sp, #112]
  41bbcc:	str	x3, [sp, #24]
  41bbd0:	stur	w1, [x29, #-16]
  41bbd4:	cbnz	w8, 41c468 <parse_file_seq@@Base+0x1354>
  41bbd8:	ldr	x8, [x0, #8]
  41bbdc:	mov	x25, x0
  41bbe0:	sub	x0, x29, #0x8
  41bbe4:	mov	x19, x7
  41bbe8:	mov	x21, x6
  41bbec:	mov	w27, w5
  41bbf0:	mov	x26, x4
  41bbf4:	mov	x22, x2
  41bbf8:	stur	x8, [x29, #-8]
  41bbfc:	bl	41ac48 <find_percent_cached@@Base>
  41bc00:	mov	x23, x0
  41bc04:	str	x20, [sp, #8]
  41bc08:	cbz	x19, 41bc48 <parse_file_seq@@Base+0xb34>
  41bc0c:	ldrb	w24, [x29, #104]
  41bc10:	mov	w0, #0x38                  	// #56
  41bc14:	mov	x28, x20
  41bc18:	bl	417888 <xmalloc@@Base>
  41bc1c:	ldr	x8, [x28]
  41bc20:	mov	w9, w27
  41bc24:	mov	x20, x0
  41bc28:	str	xzr, [x0, #16]
  41bc2c:	stp	x8, x9, [x0]
  41bc30:	mov	x0, x21
  41bc34:	mov	x1, x19
  41bc38:	bl	4178f0 <xstrndup@@Base>
  41bc3c:	stp	x0, xzr, [x20, #24]
  41bc40:	strb	w24, [x20, #50]
  41bc44:	b	41bc54 <parse_file_seq@@Base+0xb40>
  41bc48:	ldur	w8, [x29, #-16]
  41bc4c:	cbnz	w8, 41c4a8 <parse_file_seq@@Base+0x1394>
  41bc50:	mov	x20, xzr
  41bc54:	ldr	w8, [x29, #96]
  41bc58:	stur	w8, [x29, #-12]
  41bc5c:	cbz	x26, 41bd74 <parse_file_seq@@Base+0xc60>
  41bc60:	ldr	x24, [sp, #8]
  41bc64:	mov	x19, x26
  41bc68:	mov	x1, x26
  41bc6c:	ldrb	w8, [x1]
  41bc70:	cmp	w8, #0x5c
  41bc74:	b.eq	41bc84 <parse_file_seq@@Base+0xb70>  // b.none
  41bc78:	mov	x21, x1
  41bc7c:	cbnz	w8, 41bce4 <parse_file_seq@@Base+0xbd0>
  41bc80:	b	41bcf0 <parse_file_seq@@Base+0xbdc>
  41bc84:	mov	x21, x1
  41bc88:	ldrb	w8, [x21, #1]!
  41bc8c:	cmp	w8, #0x5c
  41bc90:	b.eq	41bc88 <parse_file_seq@@Base+0xb74>  // b.none
  41bc94:	cmp	w8, #0x3a
  41bc98:	sub	x27, x21, x1
  41bc9c:	b.ne	41bcc4 <parse_file_seq@@Base+0xbb0>  // b.any
  41bca0:	tbz	w27, #0, 41bcc4 <parse_file_seq@@Base+0xbb0>
  41bca4:	cmp	x27, #0x2
  41bca8:	b.cc	41bce0 <parse_file_seq@@Base+0xbcc>  // b.lo, b.ul, b.last
  41bcac:	lsr	x2, x27, #1
  41bcb0:	mov	x0, x19
  41bcb4:	bl	406760 <memmove@plt>
  41bcb8:	ldrb	w8, [x21]
  41bcbc:	add	x19, x19, x27, lsr #1
  41bcc0:	b	41bce4 <parse_file_seq@@Base+0xbd0>
  41bcc4:	mov	x0, x19
  41bcc8:	mov	x2, x27
  41bccc:	bl	406760 <memmove@plt>
  41bcd0:	ldrb	w8, [x21]
  41bcd4:	add	x19, x19, x27
  41bcd8:	cbnz	w8, 41bce4 <parse_file_seq@@Base+0xbd0>
  41bcdc:	b	41bcf0 <parse_file_seq@@Base+0xbdc>
  41bce0:	mov	w8, #0x3a                  	// #58
  41bce4:	add	x1, x21, #0x1
  41bce8:	strb	w8, [x19], #1
  41bcec:	b	41bc6c <parse_file_seq@@Base+0xb58>
  41bcf0:	strb	wzr, [x19]
  41bcf4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41bcf8:	ldr	w8, [x8, #36]
  41bcfc:	cbz	w8, 41bd44 <parse_file_seq@@Base+0xc30>
  41bd00:	mov	w1, #0x24                  	// #36
  41bd04:	mov	x0, x26
  41bd08:	bl	406cd0 <strchr@plt>
  41bd0c:	cbz	x0, 41bd44 <parse_file_seq@@Base+0xc30>
  41bd10:	mov	w0, #0x28                  	// #40
  41bd14:	bl	4178ac <xcalloc@@Base>
  41bd18:	ldrh	w8, [x0, #32]
  41bd1c:	cmp	x22, #0x0
  41bd20:	mov	w9, #0xc00                 	// #3072
  41bd24:	mov	w10, #0x800                 	// #2048
  41bd28:	and	w8, w8, #0xfffff3ff
  41bd2c:	csel	w9, w10, w9, eq  // eq = none
  41bd30:	mov	x19, x0
  41bd34:	orr	w8, w9, w8
  41bd38:	str	x26, [x0, #8]
  41bd3c:	strh	w8, [x0, #32]
  41bd40:	b	41bd7c <parse_file_seq@@Base+0xc68>
  41bd44:	mov	x0, x26
  41bd48:	bl	40ad18 <split_prereqs@@Base>
  41bd4c:	mov	x19, x0
  41bd50:	mov	x0, x26
  41bd54:	bl	406cb0 <free@plt>
  41bd58:	orr	x8, x22, x23
  41bd5c:	cbnz	x8, 41bd7c <parse_file_seq@@Base+0xc68>
  41bd60:	mov	x0, x19
  41bd64:	mov	x1, xzr
  41bd68:	bl	40adbc <enter_prereqs@@Base>
  41bd6c:	mov	x19, x0
  41bd70:	b	41bdb4 <parse_file_seq@@Base+0xca0>
  41bd74:	ldr	x24, [sp, #8]
  41bd78:	mov	x19, xzr
  41bd7c:	cbz	x23, 41bdb4 <parse_file_seq@@Base+0xca0>
  41bd80:	cbnz	x22, 41c488 <parse_file_seq@@Base+0x1374>
  41bd84:	ldr	x22, [x25]
  41bd88:	mov	x0, x25
  41bd8c:	bl	406cb0 <free@plt>
  41bd90:	cbz	x22, 41c368 <parse_file_seq@@Base+0x1254>
  41bd94:	mov	w8, #0x1                   	// #1
  41bd98:	mov	x9, x22
  41bd9c:	ldr	x9, [x9]
  41bda0:	add	w8, w8, #0x1
  41bda4:	cbnz	x9, 41bd9c <parse_file_seq@@Base+0xc88>
  41bda8:	and	x8, x8, #0xffff
  41bdac:	lsl	x25, x8, #3
  41bdb0:	b	41c36c <parse_file_seq@@Base+0x1258>
  41bdb4:	ldr	x8, [sp, #24]
  41bdb8:	mov	x27, xzr
  41bdbc:	add	x8, x8, #0x1
  41bdc0:	str	x8, [sp, #16]
  41bdc4:	mov	x0, x25
  41bdc8:	ldr	x25, [x25]
  41bdcc:	bl	406cb0 <free@plt>
  41bdd0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41bdd4:	ldr	w8, [x8, #32]
  41bdd8:	cbz	w8, 41be3c <parse_file_seq@@Base+0xd28>
  41bddc:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41bde0:	ldr	w8, [x8, #36]
  41bde4:	cbz	w8, 41bfec <parse_file_seq@@Base+0xed8>
  41bde8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41bdec:	ldr	w8, [x8, #84]
  41bdf0:	cbnz	w8, 41bfb4 <parse_file_seq@@Base+0xea0>
  41bdf4:	ldur	x8, [x29, #-8]
  41bdf8:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  41bdfc:	add	x9, x9, #0xdf7
  41be00:	cmp	x8, x9
  41be04:	b.eq	41be28 <parse_file_seq@@Base+0xd14>  // b.none
  41be08:	ldrb	w9, [x8]
  41be0c:	cmp	w9, #0x2e
  41be10:	b.ne	41bfb4 <parse_file_seq@@Base+0xea0>  // b.any
  41be14:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41be18:	add	x0, x8, #0x1
  41be1c:	add	x1, x1, #0xdf8
  41be20:	bl	406c70 <strcmp@plt>
  41be24:	cbnz	w0, 41bfb4 <parse_file_seq@@Base+0xea0>
  41be28:	mov	w8, #0x1                   	// #1
  41be2c:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41be30:	str	w8, [x9, #84]
  41be34:	cbnz	x22, 41bfb8 <parse_file_seq@@Base+0xea4>
  41be38:	b	41bfd0 <parse_file_seq@@Base+0xebc>
  41be3c:	ldur	x8, [x29, #-8]
  41be40:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  41be44:	add	x9, x9, #0xdae
  41be48:	cmp	x8, x9
  41be4c:	b.eq	41be70 <parse_file_seq@@Base+0xd5c>  // b.none
  41be50:	ldrb	w9, [x8]
  41be54:	cmp	w9, #0x2e
  41be58:	b.ne	41bddc <parse_file_seq@@Base+0xcc8>  // b.any
  41be5c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41be60:	add	x0, x8, #0x1
  41be64:	add	x1, x1, #0xdaf
  41be68:	bl	406c70 <strcmp@plt>
  41be6c:	cbnz	w0, 41bddc <parse_file_seq@@Base+0xcc8>
  41be70:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41be74:	ldr	x8, [x21, #2440]
  41be78:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41be7c:	mov	w10, #0x1                   	// #1
  41be80:	str	w10, [x9, #32]
  41be84:	ldr	x5, [x8, #8]
  41be88:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  41be8c:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  41be90:	mov	w1, #0xb                   	// #11
  41be94:	add	x0, x0, #0x3e2
  41be98:	add	x2, x2, #0x78c
  41be9c:	mov	w3, wzr
  41bea0:	mov	w4, wzr
  41bea4:	mov	x6, xzr
  41bea8:	bl	420860 <define_variable_in_set@@Base>
  41beac:	ldr	x8, [x21, #2440]
  41beb0:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  41beb4:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x4290>
  41beb8:	mov	w1, #0x7                   	// #7
  41bebc:	ldr	x5, [x8, #8]
  41bec0:	add	x0, x0, #0x73a
  41bec4:	add	x2, x2, #0xdb5
  41bec8:	mov	w3, wzr
  41becc:	mov	w4, wzr
  41bed0:	mov	x6, xzr
  41bed4:	bl	420860 <define_variable_in_set@@Base>
  41bed8:	ldr	x8, [x21, #2440]
  41bedc:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  41bee0:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x4290>
  41bee4:	mov	w1, #0x2                   	// #2
  41bee8:	ldr	x5, [x8, #8]
  41beec:	add	x0, x0, #0x7f3
  41bef0:	add	x2, x2, #0xdb9
  41bef4:	mov	w3, wzr
  41bef8:	mov	w4, wzr
  41befc:	mov	x6, xzr
  41bf00:	bl	420860 <define_variable_in_set@@Base>
  41bf04:	ldr	x8, [x21, #2440]
  41bf08:	adrp	x23, 428000 <_IO_stdin_used@@Base+0x4290>
  41bf0c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41bf10:	add	x23, x23, #0xdc4
  41bf14:	ldr	x5, [x8, #8]
  41bf18:	mov	w1, #0x6                   	// #6
  41bf1c:	add	x0, x0, #0xdbd
  41bf20:	mov	x2, x23
  41bf24:	mov	w3, wzr
  41bf28:	mov	w4, wzr
  41bf2c:	mov	x6, xzr
  41bf30:	bl	420860 <define_variable_in_set@@Base>
  41bf34:	ldr	x8, [x21, #2440]
  41bf38:	adrp	x0, 424000 <_IO_stdin_used@@Base+0x290>
  41bf3c:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x4290>
  41bf40:	mov	w1, #0x2                   	// #2
  41bf44:	ldr	x5, [x8, #8]
  41bf48:	add	x0, x0, #0x7a6
  41bf4c:	add	x2, x2, #0xdc8
  41bf50:	mov	w3, wzr
  41bf54:	mov	w4, wzr
  41bf58:	mov	x6, xzr
  41bf5c:	bl	420860 <define_variable_in_set@@Base>
  41bf60:	ldr	x8, [x21, #2440]
  41bf64:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41bf68:	mov	w1, #0x6                   	// #6
  41bf6c:	add	x0, x0, #0xdcf
  41bf70:	ldr	x5, [x8, #8]
  41bf74:	mov	x2, x23
  41bf78:	mov	w3, wzr
  41bf7c:	mov	w4, wzr
  41bf80:	mov	x6, xzr
  41bf84:	bl	420860 <define_variable_in_set@@Base>
  41bf88:	ldr	x8, [x21, #2440]
  41bf8c:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41bf90:	adrp	x2, 428000 <_IO_stdin_used@@Base+0x4290>
  41bf94:	mov	w1, #0xc                   	// #12
  41bf98:	ldr	x5, [x8, #8]
  41bf9c:	add	x0, x0, #0xdd6
  41bfa0:	add	x2, x2, #0xde3
  41bfa4:	mov	w3, wzr
  41bfa8:	mov	w4, wzr
  41bfac:	mov	x6, xzr
  41bfb0:	bl	420860 <define_variable_in_set@@Base>
  41bfb4:	cbz	x22, 41bfd0 <parse_file_seq@@Base+0xebc>
  41bfb8:	ldur	x23, [x29, #-8]
  41bfbc:	ldr	x1, [sp, #24]
  41bfc0:	mov	x0, x22
  41bfc4:	mov	x2, x23
  41bfc8:	bl	40c69c <pattern_matches@@Base>
  41bfcc:	cbz	w0, 41c034 <parse_file_seq@@Base+0xf20>
  41bfd0:	cbz	x19, 41c068 <parse_file_seq@@Base+0xf54>
  41bfd4:	mov	x26, x19
  41bfd8:	cbz	x25, 41c06c <parse_file_seq@@Base+0xf58>
  41bfdc:	mov	x0, x19
  41bfe0:	bl	417adc <copy_dep_chain@@Base>
  41bfe4:	mov	x26, x0
  41bfe8:	b	41c06c <parse_file_seq@@Base+0xf58>
  41bfec:	ldur	x8, [x29, #-8]
  41bff0:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  41bff4:	add	x9, x9, #0xde6
  41bff8:	cmp	x8, x9
  41bffc:	b.eq	41c020 <parse_file_seq@@Base+0xf0c>  // b.none
  41c000:	ldrb	w9, [x8]
  41c004:	cmp	w9, #0x2e
  41c008:	b.ne	41bde8 <parse_file_seq@@Base+0xcd4>  // b.any
  41c00c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c010:	add	x0, x8, #0x1
  41c014:	add	x1, x1, #0xde7
  41c018:	bl	406c70 <strcmp@plt>
  41c01c:	cbnz	w0, 41bde8 <parse_file_seq@@Base+0xcd4>
  41c020:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41c024:	mov	w9, #0x1                   	// #1
  41c028:	str	w9, [x8, #36]
  41c02c:	cbnz	x22, 41bfb8 <parse_file_seq@@Base+0xea4>
  41c030:	b	41bfd0 <parse_file_seq@@Base+0xebc>
  41c034:	mov	x0, x23
  41c038:	bl	406790 <strlen@plt>
  41c03c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c040:	mov	x26, x0
  41c044:	mov	w2, #0x5                   	// #5
  41c048:	mov	x0, xzr
  41c04c:	add	x1, x1, #0xe01
  41c050:	bl	406e10 <dcgettext@plt>
  41c054:	mov	x2, x0
  41c058:	mov	x0, x24
  41c05c:	mov	x1, x26
  41c060:	mov	x3, x23
  41c064:	bl	418744 <error@@Base>
  41c068:	mov	x26, xzr
  41c06c:	ldur	x23, [x29, #-8]
  41c070:	ldur	w8, [x29, #-12]
  41c074:	cbz	w8, 41c0bc <parse_file_seq@@Base+0xfa8>
  41c078:	mov	x0, x23
  41c07c:	bl	40a568 <lookup_file@@Base>
  41c080:	cbz	x0, 41c098 <parse_file_seq@@Base+0xf84>
  41c084:	ldrb	w8, [x0, #137]
  41c088:	mov	x28, x0
  41c08c:	tbz	w8, #3, 41c098 <parse_file_seq@@Base+0xf84>
  41c090:	ldr	x8, [x28, #104]
  41c094:	cbz	x8, 41c434 <parse_file_seq@@Base+0x1320>
  41c098:	mov	x0, x23
  41c09c:	bl	42016c <strcache_add@@Base>
  41c0a0:	bl	40a5f4 <enter_file@@Base>
  41c0a4:	ldr	x8, [x0, #104]
  41c0a8:	mov	x28, x0
  41c0ac:	cbnz	x8, 41c0b4 <parse_file_seq@@Base+0xfa0>
  41c0b0:	str	x28, [x28, #104]
  41c0b4:	str	x20, [x28, #32]
  41c0b8:	b	41c1d8 <parse_file_seq@@Base+0x10c4>
  41c0bc:	mov	x0, x23
  41c0c0:	bl	42016c <strcache_add@@Base>
  41c0c4:	bl	40a5f4 <enter_file@@Base>
  41c0c8:	ldr	x8, [x0, #104]
  41c0cc:	mov	x28, x0
  41c0d0:	cbnz	x8, 41c434 <parse_file_seq@@Base+0x1320>
  41c0d4:	cbz	x20, 41c150 <parse_file_seq@@Base+0x103c>
  41c0d8:	ldr	x8, [x28, #32]
  41c0dc:	cmp	x20, x8
  41c0e0:	b.eq	41c178 <parse_file_seq@@Base+0x1064>  // b.none
  41c0e4:	cbz	x8, 41c1ac <parse_file_seq@@Base+0x1098>
  41c0e8:	ldrb	w8, [x28, #137]
  41c0ec:	tbz	w8, #3, 41c1ac <parse_file_seq@@Base+0x1098>
  41c0f0:	ldr	x0, [x28]
  41c0f4:	bl	406790 <strlen@plt>
  41c0f8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c0fc:	mov	x21, x0
  41c100:	mov	w2, #0x5                   	// #5
  41c104:	mov	x0, xzr
  41c108:	add	x1, x1, #0xe8b
  41c10c:	bl	406e10 <dcgettext@plt>
  41c110:	ldr	x3, [x28]
  41c114:	mov	x2, x0
  41c118:	mov	x0, x20
  41c11c:	mov	x1, x21
  41c120:	bl	418744 <error@@Base>
  41c124:	ldr	x24, [x28, #32]
  41c128:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c12c:	mov	w2, #0x5                   	// #5
  41c130:	mov	x0, xzr
  41c134:	add	x1, x1, #0xeb6
  41c138:	bl	406e10 <dcgettext@plt>
  41c13c:	ldr	x3, [x28]
  41c140:	mov	x2, x0
  41c144:	mov	x0, x24
  41c148:	ldr	x24, [sp, #8]
  41c14c:	b	41c1a4 <parse_file_seq@@Base+0x1090>
  41c150:	cmp	x26, #0x0
  41c154:	cset	w8, eq  // eq = none
  41c158:	cbnz	x26, 41c1b8 <parse_file_seq@@Base+0x10a4>
  41c15c:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41c160:	ldr	x9, [x9, #64]
  41c164:	cmp	x28, x9
  41c168:	b.ne	41c1b8 <parse_file_seq@@Base+0x10a4>  // b.any
  41c16c:	mov	w8, #0x1                   	// #1
  41c170:	str	xzr, [x28, #32]
  41c174:	b	41c1b8 <parse_file_seq@@Base+0x10a4>
  41c178:	ldr	x0, [x28]
  41c17c:	bl	406790 <strlen@plt>
  41c180:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c184:	mov	x21, x0
  41c188:	mov	w2, #0x5                   	// #5
  41c18c:	mov	x0, xzr
  41c190:	add	x1, x1, #0xe59
  41c194:	bl	406e10 <dcgettext@plt>
  41c198:	ldr	x3, [x28]
  41c19c:	mov	x2, x0
  41c1a0:	mov	x0, x24
  41c1a4:	mov	x1, x21
  41c1a8:	bl	418744 <error@@Base>
  41c1ac:	cmp	x26, #0x0
  41c1b0:	cset	w8, eq  // eq = none
  41c1b4:	str	x20, [x28, #32]
  41c1b8:	cbz	w8, 41c1d8 <parse_file_seq@@Base+0x10c4>
  41c1bc:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41c1c0:	ldr	x8, [x8, #240]
  41c1c4:	cmp	x28, x8
  41c1c8:	b.ne	41c1d8 <parse_file_seq@@Base+0x10c4>  // b.any
  41c1cc:	ldr	x0, [x28, #24]
  41c1d0:	bl	417b74 <free_ns_chain@@Base>
  41c1d4:	str	xzr, [x28, #24]
  41c1d8:	ldur	w8, [x29, #-16]
  41c1dc:	cbz	w8, 41c1f8 <parse_file_seq@@Base+0x10e4>
  41c1e0:	mov	w0, #0x28                  	// #40
  41c1e4:	bl	4178ac <xcalloc@@Base>
  41c1e8:	ldr	x8, [x28]
  41c1ec:	str	x27, [x0]
  41c1f0:	mov	x27, x0
  41c1f4:	stp	x8, x28, [x0, #8]
  41c1f8:	ldr	w8, [x28, #136]
  41c1fc:	orr	w8, w8, #0x800
  41c200:	str	w8, [x28, #136]
  41c204:	cbz	x22, 41c260 <parse_file_seq@@Base+0x114c>
  41c208:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  41c20c:	add	x0, x0, #0x5eb
  41c210:	bl	40a2dc <variable_expand@@Base>
  41c214:	ldr	x4, [sp, #16]
  41c218:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  41c21c:	add	x3, x3, #0x176
  41c220:	add	x5, x3, #0x1
  41c224:	mov	x1, x23
  41c228:	mov	x2, x22
  41c22c:	mov	x21, x0
  41c230:	bl	40c3a8 <patsubst_expand_pat@@Base>
  41c234:	sub	x1, x0, x21
  41c238:	mov	x0, x21
  41c23c:	bl	4203f8 <strcache_add_len@@Base>
  41c240:	str	x0, [x28, #40]
  41c244:	cbz	x26, 41c2a4 <parse_file_seq@@Base+0x1190>
  41c248:	ldrb	w8, [x26, #33]
  41c24c:	mov	x1, x0
  41c250:	tbnz	w8, #3, 41c268 <parse_file_seq@@Base+0x1154>
  41c254:	mov	x0, x26
  41c258:	bl	40adbc <enter_prereqs@@Base>
  41c25c:	mov	x26, x0
  41c260:	cbnz	x26, 41c26c <parse_file_seq@@Base+0x1158>
  41c264:	b	41c2a4 <parse_file_seq@@Base+0x1190>
  41c268:	str	x1, [x26, #24]
  41c26c:	ldr	x8, [x28, #24]
  41c270:	cbz	x8, 41c28c <parse_file_seq@@Base+0x1178>
  41c274:	mov	x9, x26
  41c278:	cbz	x20, 41c294 <parse_file_seq@@Base+0x1180>
  41c27c:	mov	x10, x9
  41c280:	ldr	x9, [x9]
  41c284:	cbnz	x9, 41c27c <parse_file_seq@@Base+0x1168>
  41c288:	str	x8, [x10]
  41c28c:	str	x26, [x28, #24]
  41c290:	b	41c2a4 <parse_file_seq@@Base+0x1190>
  41c294:	mov	x9, x8
  41c298:	ldr	x8, [x8]
  41c29c:	cbnz	x8, 41c294 <parse_file_seq@@Base+0x1180>
  41c2a0:	str	x26, [x9]
  41c2a4:	ldr	x8, [x28]
  41c2a8:	stur	x8, [x29, #-8]
  41c2ac:	cbz	x25, 41c2ec <parse_file_seq@@Base+0x11d8>
  41c2b0:	ldr	x8, [x25, #8]
  41c2b4:	sub	x0, x29, #0x8
  41c2b8:	stur	x8, [x29, #-8]
  41c2bc:	bl	41ac48 <find_percent_cached@@Base>
  41c2c0:	cbz	x0, 41bdc4 <parse_file_seq@@Base+0xcb0>
  41c2c4:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c2c8:	mov	w2, #0x5                   	// #5
  41c2cc:	mov	x0, xzr
  41c2d0:	add	x1, x1, #0xee3
  41c2d4:	bl	406e10 <dcgettext@plt>
  41c2d8:	mov	x2, x0
  41c2dc:	mov	x0, x24
  41c2e0:	mov	x1, xzr
  41c2e4:	bl	418744 <error@@Base>
  41c2e8:	b	41bdc4 <parse_file_seq@@Base+0xcb0>
  41c2ec:	cbz	x27, 41c3f4 <parse_file_seq@@Base+0x12e0>
  41c2f0:	adrp	x19, 428000 <_IO_stdin_used@@Base+0x4290>
  41c2f4:	add	x19, x19, #0xf1a
  41c2f8:	mov	x23, x27
  41c2fc:	ldr	x8, [x23]
  41c300:	ldr	x24, [x23, #16]
  41c304:	mov	x21, x27
  41c308:	cbz	x8, 41c318 <parse_file_seq@@Base+0x1204>
  41c30c:	mov	x0, x27
  41c310:	bl	417adc <copy_dep_chain@@Base>
  41c314:	mov	x21, x0
  41c318:	ldr	x8, [x24, #48]
  41c31c:	cbz	x8, 41c358 <parse_file_seq@@Base+0x1244>
  41c320:	ldr	x0, [x24]
  41c324:	bl	406790 <strlen@plt>
  41c328:	mov	x22, x0
  41c32c:	mov	w2, #0x5                   	// #5
  41c330:	mov	x0, xzr
  41c334:	mov	x1, x19
  41c338:	bl	406e10 <dcgettext@plt>
  41c33c:	ldr	x3, [x24]
  41c340:	mov	x2, x0
  41c344:	mov	x0, x20
  41c348:	mov	x1, x22
  41c34c:	bl	418744 <error@@Base>
  41c350:	ldr	x0, [x24, #48]
  41c354:	bl	417b74 <free_ns_chain@@Base>
  41c358:	str	x21, [x24, #48]
  41c35c:	ldr	x23, [x23]
  41c360:	cbnz	x23, 41c2fc <parse_file_seq@@Base+0x11e8>
  41c364:	b	41c3f4 <parse_file_seq@@Base+0x12e0>
  41c368:	mov	w25, #0x8                   	// #8
  41c36c:	mov	x0, x25
  41c370:	bl	417888 <xmalloc@@Base>
  41c374:	mov	x24, x0
  41c378:	mov	x0, x25
  41c37c:	bl	417888 <xmalloc@@Base>
  41c380:	ldur	x8, [x29, #-8]
  41c384:	mov	x25, x0
  41c388:	str	x8, [x24]
  41c38c:	str	x23, [x0]
  41c390:	mov	w23, #0x1                   	// #1
  41c394:	cbz	x22, 41c3d4 <parse_file_seq@@Base+0x12c0>
  41c398:	ldr	x8, [x22, #8]
  41c39c:	sub	x0, x29, #0x8
  41c3a0:	stur	x8, [x29, #-8]
  41c3a4:	bl	41ac48 <find_percent_cached@@Base>
  41c3a8:	cbz	x0, 41c414 <parse_file_seq@@Base+0x1300>
  41c3ac:	ldur	x8, [x29, #-8]
  41c3b0:	and	x9, x23, #0xffff
  41c3b4:	add	w23, w23, #0x1
  41c3b8:	str	x8, [x24, x9, lsl #3]
  41c3bc:	str	x0, [x25, x9, lsl #3]
  41c3c0:	ldr	x21, [x22]
  41c3c4:	mov	x0, x22
  41c3c8:	bl	406cb0 <free@plt>
  41c3cc:	mov	x22, x21
  41c3d0:	cbnz	x21, 41c398 <parse_file_seq@@Base+0x1284>
  41c3d4:	ldur	w3, [x29, #-12]
  41c3d8:	mov	w6, #0x1                   	// #1
  41c3dc:	mov	x0, x24
  41c3e0:	mov	x1, x25
  41c3e4:	mov	w2, w23
  41c3e8:	mov	x4, x19
  41c3ec:	mov	x5, x20
  41c3f0:	bl	41fdb8 <create_pattern_rule@@Base>
  41c3f4:	ldp	x20, x19, [sp, #128]
  41c3f8:	ldp	x22, x21, [sp, #112]
  41c3fc:	ldp	x24, x23, [sp, #96]
  41c400:	ldp	x26, x25, [sp, #80]
  41c404:	ldp	x28, x27, [sp, #64]
  41c408:	ldp	x29, x30, [sp, #48]
  41c40c:	add	sp, sp, #0x90
  41c410:	ret
  41c414:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c418:	add	x1, x1, #0xd8e
  41c41c:	mov	w2, #0x5                   	// #5
  41c420:	bl	406e10 <dcgettext@plt>
  41c424:	mov	x2, x0
  41c428:	ldr	x0, [sp, #8]
  41c42c:	mov	x1, xzr
  41c430:	bl	4188bc <fatal@@Base>
  41c434:	ldr	x0, [x28]
  41c438:	bl	406790 <strlen@plt>
  41c43c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c440:	mov	x19, x0
  41c444:	add	x1, x1, #0xe2e
  41c448:	mov	w2, #0x5                   	// #5
  41c44c:	mov	x0, xzr
  41c450:	bl	406e10 <dcgettext@plt>
  41c454:	ldr	x3, [x28]
  41c458:	mov	x2, x0
  41c45c:	mov	x0, x24
  41c460:	mov	x1, x19
  41c464:	bl	4188bc <fatal@@Base>
  41c468:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c46c:	add	x1, x1, #0xd15
  41c470:	mov	w2, #0x5                   	// #5
  41c474:	mov	x0, xzr
  41c478:	bl	406e10 <dcgettext@plt>
  41c47c:	mov	x2, x0
  41c480:	mov	x0, x20
  41c484:	b	41c42c <parse_file_seq@@Base+0x1318>
  41c488:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c48c:	add	x1, x1, #0xd66
  41c490:	mov	w2, #0x5                   	// #5
  41c494:	mov	x0, xzr
  41c498:	bl	406e10 <dcgettext@plt>
  41c49c:	mov	x2, x0
  41c4a0:	mov	x0, x24
  41c4a4:	b	41c42c <parse_file_seq@@Base+0x1318>
  41c4a8:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c4ac:	add	x1, x1, #0xd40
  41c4b0:	mov	w2, #0x5                   	// #5
  41c4b4:	mov	x0, xzr
  41c4b8:	b	41c420 <parse_file_seq@@Base+0x130c>
  41c4bc:	stp	x29, x30, [sp, #-96]!
  41c4c0:	stp	x28, x27, [sp, #16]
  41c4c4:	stp	x26, x25, [sp, #32]
  41c4c8:	stp	x24, x23, [sp, #48]
  41c4cc:	stp	x22, x21, [sp, #64]
  41c4d0:	stp	x20, x19, [sp, #80]
  41c4d4:	mov	x29, sp
  41c4d8:	sub	sp, sp, #0x10
  41c4dc:	mov	x19, x2
  41c4e0:	mov	x21, x1
  41c4e4:	cmp	x1, #0x4
  41c4e8:	mov	x22, x0
  41c4ec:	b.eq	41c570 <parse_file_seq@@Base+0x145c>  // b.none
  41c4f0:	cmp	x21, #0x6
  41c4f4:	b.eq	41c54c <parse_file_seq@@Base+0x1438>  // b.none
  41c4f8:	cmp	x21, #0x5
  41c4fc:	b.ne	41c5ac <parse_file_seq@@Base+0x1498>  // b.any
  41c500:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41c504:	add	x20, x20, #0xfdb
  41c508:	mov	w2, #0x5                   	// #5
  41c50c:	mov	x0, x20
  41c510:	mov	x1, x22
  41c514:	bl	406a30 <strncmp@plt>
  41c518:	cbz	w0, 41c5bc <parse_file_seq@@Base+0x14a8>
  41c51c:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41c520:	add	x20, x20, #0xfed
  41c524:	mov	w2, #0x5                   	// #5
  41c528:	mov	x0, x20
  41c52c:	mov	x1, x22
  41c530:	bl	406a30 <strncmp@plt>
  41c534:	cbz	w0, 41c5c4 <parse_file_seq@@Base+0x14b0>
  41c538:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41c53c:	add	x20, x20, #0xff8
  41c540:	mov	w2, #0x5                   	// #5
  41c544:	mov	w25, #0x5                   	// #5
  41c548:	b	41c59c <parse_file_seq@@Base+0x1488>
  41c54c:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41c550:	add	x20, x20, #0xfe1
  41c554:	mov	w2, #0x6                   	// #6
  41c558:	mov	x0, x20
  41c55c:	mov	x1, x22
  41c560:	bl	406a30 <strncmp@plt>
  41c564:	cbnz	w0, 41c5ac <parse_file_seq@@Base+0x1498>
  41c568:	mov	w25, #0x1                   	// #1
  41c56c:	b	41c5c8 <parse_file_seq@@Base+0x14b4>
  41c570:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41c574:	add	x20, x20, #0xfe8
  41c578:	mov	w2, #0x4                   	// #4
  41c57c:	mov	x0, x20
  41c580:	mov	x1, x22
  41c584:	bl	406a30 <strncmp@plt>
  41c588:	cbz	w0, 41c5b4 <parse_file_seq@@Base+0x14a0>
  41c58c:	adrp	x20, 428000 <_IO_stdin_used@@Base+0x4290>
  41c590:	add	x20, x20, #0xff3
  41c594:	mov	w2, #0x4                   	// #4
  41c598:	mov	w25, #0x4                   	// #4
  41c59c:	mov	x0, x20
  41c5a0:	mov	x1, x22
  41c5a4:	bl	406a30 <strncmp@plt>
  41c5a8:	cbz	w0, 41c5c8 <parse_file_seq@@Base+0x14b4>
  41c5ac:	mov	w0, #0xfffffffe            	// #-2
  41c5b0:	b	41cb20 <parse_file_seq@@Base+0x1a0c>
  41c5b4:	mov	w25, #0x2                   	// #2
  41c5b8:	b	41c5c8 <parse_file_seq@@Base+0x14b4>
  41c5bc:	mov	w25, wzr
  41c5c0:	b	41c5c8 <parse_file_seq@@Base+0x14b4>
  41c5c4:	mov	w25, #0x3                   	// #3
  41c5c8:	adrp	x27, 43b000 <memcpy@GLIBC_2.17>
  41c5cc:	add	x22, x22, x21
  41c5d0:	add	x27, x27, #0xcf0
  41c5d4:	ldrb	w8, [x22], #1
  41c5d8:	ldrh	w9, [x27, x8, lsl #1]
  41c5dc:	tst	w9, #0x6
  41c5e0:	b.ne	41c5d4 <parse_file_seq@@Base+0x14c0>  // b.any
  41c5e4:	sub	x21, x22, #0x1
  41c5e8:	cmp	w25, #0x4
  41c5ec:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  41c5f0:	b.eq	41c644 <parse_file_seq@@Base+0x1530>  // b.none
  41c5f4:	cmp	w25, #0x5
  41c5f8:	b.ne	41c67c <parse_file_seq@@Base+0x1568>  // b.any
  41c5fc:	cbz	w8, 41c634 <parse_file_seq@@Base+0x1520>
  41c600:	mov	x0, x20
  41c604:	bl	406790 <strlen@plt>
  41c608:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c60c:	mov	x21, x0
  41c610:	add	x1, x1, #0xffe
  41c614:	mov	w2, #0x5                   	// #5
  41c618:	mov	x0, xzr
  41c61c:	bl	406e10 <dcgettext@plt>
  41c620:	mov	x2, x0
  41c624:	mov	x0, x19
  41c628:	mov	x1, x21
  41c62c:	mov	x3, x20
  41c630:	bl	418744 <error@@Base>
  41c634:	ldr	x8, [x24, #2408]
  41c638:	ldr	w9, [x8]
  41c63c:	cbnz	w9, 41c880 <parse_file_seq@@Base+0x176c>
  41c640:	b	41cb40 <parse_file_seq@@Base+0x1a2c>
  41c644:	ldr	x8, [x24, #2408]
  41c648:	ldr	w23, [x8]
  41c64c:	cbz	w23, 41cb40 <parse_file_seq@@Base+0x1a2c>
  41c650:	ldr	x9, [x8, #16]
  41c654:	sub	w25, w23, #0x1
  41c658:	ldrb	w9, [x9, w25, uxtw]
  41c65c:	cbnz	w9, 41cb74 <parse_file_seq@@Base+0x1a60>
  41c660:	ldr	x9, [x8, #8]
  41c664:	ldrb	w10, [x9, x25]
  41c668:	cbz	w10, 41c7d0 <parse_file_seq@@Base+0x16bc>
  41c66c:	cmp	w10, #0x1
  41c670:	b.ne	41c7d8 <parse_file_seq@@Base+0x16c4>  // b.any
  41c674:	mov	w10, wzr
  41c678:	b	41c7d4 <parse_file_seq@@Base+0x16c0>
  41c67c:	ldr	x8, [x24, #2408]
  41c680:	ldr	w9, [x8, #4]
  41c684:	cbnz	w9, 41c6b8 <parse_file_seq@@Base+0x15a4>
  41c688:	mov	w9, #0x5                   	// #5
  41c68c:	mov	w0, #0x5                   	// #5
  41c690:	str	w9, [x8, #4]
  41c694:	bl	417888 <xmalloc@@Base>
  41c698:	ldr	x9, [x24, #2408]
  41c69c:	ldr	w8, [x9, #4]
  41c6a0:	str	x0, [x9, #8]
  41c6a4:	mov	x0, x8
  41c6a8:	bl	417888 <xmalloc@@Base>
  41c6ac:	ldr	x8, [x24, #2408]
  41c6b0:	ldr	w9, [x8, #4]
  41c6b4:	str	x0, [x8, #16]
  41c6b8:	ldr	w26, [x8]
  41c6bc:	add	w10, w26, #0x1
  41c6c0:	cmp	w10, w9
  41c6c4:	str	w10, [x8]
  41c6c8:	b.ls	41c700 <parse_file_seq@@Base+0x15ec>  // b.plast
  41c6cc:	ldr	x0, [x8, #8]
  41c6d0:	add	w1, w9, #0x5
  41c6d4:	str	w1, [x8, #4]
  41c6d8:	bl	417854 <xrealloc@@Base>
  41c6dc:	ldr	x9, [x24, #2408]
  41c6e0:	ldr	x8, [x9, #16]
  41c6e4:	ldr	w1, [x9, #4]
  41c6e8:	str	x0, [x9, #8]
  41c6ec:	mov	x0, x8
  41c6f0:	bl	417854 <xrealloc@@Base>
  41c6f4:	ldr	x8, [x24, #2408]
  41c6f8:	str	x0, [x8, #16]
  41c6fc:	b	41c704 <parse_file_seq@@Base+0x15f0>
  41c700:	ldr	x0, [x8, #16]
  41c704:	strb	wzr, [x0, x26]
  41c708:	cbz	w26, 41c72c <parse_file_seq@@Base+0x1618>
  41c70c:	ldr	x8, [x8, #8]
  41c710:	mov	x9, x26
  41c714:	mov	x10, x8
  41c718:	ldrb	w11, [x10]
  41c71c:	cbnz	w11, 41c828 <parse_file_seq@@Base+0x1714>
  41c720:	subs	x9, x9, #0x1
  41c724:	add	x10, x10, #0x1
  41c728:	b.ne	41c718 <parse_file_seq@@Base+0x1604>  // b.any
  41c72c:	cmp	w25, #0x1
  41c730:	b.hi	41c788 <parse_file_seq@@Base+0x1674>  // b.pmore
  41c734:	mov	x0, x21
  41c738:	mov	x1, xzr
  41c73c:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  41c740:	mov	x19, x0
  41c744:	bl	417930 <end_of_token@@Base>
  41c748:	mov	x8, x0
  41c74c:	ldrb	w9, [x8], #1
  41c750:	ldrh	w10, [x27, x9, lsl #1]
  41c754:	tst	w10, #0x6
  41c758:	b.ne	41c74c <parse_file_seq@@Base+0x1638>  // b.any
  41c75c:	cbnz	w9, 41cabc <parse_file_seq@@Base+0x19a8>
  41c760:	sub	x1, x0, x19
  41c764:	strb	wzr, [x0]
  41c768:	mov	x0, x19
  41c76c:	bl	420c00 <lookup_variable@@Base>
  41c770:	cbz	x0, 41c90c <parse_file_seq@@Base+0x17f8>
  41c774:	ldr	x8, [x0, #8]
  41c778:	ldrb	w8, [x8]
  41c77c:	cmp	w8, #0x0
  41c780:	cset	w8, ne  // ne = any
  41c784:	b	41c910 <parse_file_seq@@Base+0x17fc>
  41c788:	ldrb	w8, [x21]
  41c78c:	mov	w9, #0x2c                  	// #44
  41c790:	cmp	w8, #0x28
  41c794:	csel	w28, w9, w8, eq  // eq = none
  41c798:	cmp	w28, #0x2c
  41c79c:	b.eq	41c8c4 <parse_file_seq@@Base+0x17b0>  // b.none
  41c7a0:	cmp	w28, #0x27
  41c7a4:	b.eq	41c7b0 <parse_file_seq@@Base+0x169c>  // b.none
  41c7a8:	cmp	w28, #0x22
  41c7ac:	b.ne	41cabc <parse_file_seq@@Base+0x19a8>  // b.any
  41c7b0:	ldrb	w8, [x21, #1]!
  41c7b4:	cbz	w8, 41c7c0 <parse_file_seq@@Base+0x16ac>
  41c7b8:	cmp	w8, w28
  41c7bc:	b.ne	41c7b0 <parse_file_seq@@Base+0x169c>  // b.any
  41c7c0:	cbz	w8, 41cabc <parse_file_seq@@Base+0x19a8>
  41c7c4:	mov	x23, x21
  41c7c8:	stur	wzr, [x29, #-4]
  41c7cc:	b	41c954 <parse_file_seq@@Base+0x1840>
  41c7d0:	mov	w10, #0x2                   	// #2
  41c7d4:	strb	w10, [x9, x25]
  41c7d8:	ldrb	w9, [x21]
  41c7dc:	cbz	w9, 41c818 <parse_file_seq@@Base+0x1704>
  41c7e0:	mov	x8, x21
  41c7e4:	ldrb	w9, [x8, #1]!
  41c7e8:	ldrh	w9, [x27, x9, lsl #1]
  41c7ec:	tst	w9, #0x7
  41c7f0:	b.eq	41c7e4 <parse_file_seq@@Base+0x16d0>  // b.none
  41c7f4:	sub	x22, x8, x21
  41c7f8:	cmp	x22, #0x5
  41c7fc:	b.eq	41c834 <parse_file_seq@@Base+0x1720>  // b.none
  41c800:	cmp	x22, #0x4
  41c804:	b.ne	41c84c <parse_file_seq@@Base+0x1738>  // b.any
  41c808:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41c80c:	add	x0, x0, #0xff3
  41c810:	mov	w2, #0x4                   	// #4
  41c814:	b	41c840 <parse_file_seq@@Base+0x172c>
  41c818:	ldr	x8, [x8, #16]
  41c81c:	mov	w9, #0x1                   	// #1
  41c820:	strb	w9, [x8, x25]
  41c824:	b	41caec <parse_file_seq@@Base+0x19d8>
  41c828:	mov	w0, #0x1                   	// #1
  41c82c:	strb	w0, [x8, x26]
  41c830:	b	41cb20 <parse_file_seq@@Base+0x1a0c>
  41c834:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  41c838:	add	x0, x0, #0xff8
  41c83c:	mov	w2, #0x5                   	// #5
  41c840:	mov	x1, x21
  41c844:	bl	406a30 <strncmp@plt>
  41c848:	cbz	w0, 41c88c <parse_file_seq@@Base+0x1778>
  41c84c:	mov	x0, x21
  41c850:	mov	x1, x22
  41c854:	mov	x2, x19
  41c858:	bl	41c4bc <parse_file_seq@@Base+0x13a8>
  41c85c:	tbnz	w0, #31, 41c88c <parse_file_seq@@Base+0x1778>
  41c860:	ldr	x8, [x24, #2408]
  41c864:	ldr	x9, [x8, #8]
  41c868:	ldrb	w10, [x9, x25]
  41c86c:	cmp	w10, #0x1
  41c870:	b.hi	41c87c <parse_file_seq@@Base+0x1768>  // b.pmore
  41c874:	ldrb	w10, [x9, x23]
  41c878:	strb	w10, [x9, x25]
  41c87c:	ldr	w9, [x8]
  41c880:	sub	w9, w9, #0x1
  41c884:	str	w9, [x8]
  41c888:	b	41caec <parse_file_seq@@Base+0x19d8>
  41c88c:	mov	x0, x20
  41c890:	bl	406790 <strlen@plt>
  41c894:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41c898:	mov	x21, x0
  41c89c:	add	x1, x1, #0xffe
  41c8a0:	mov	w2, #0x5                   	// #5
  41c8a4:	mov	x0, xzr
  41c8a8:	bl	406e10 <dcgettext@plt>
  41c8ac:	mov	x2, x0
  41c8b0:	mov	x0, x19
  41c8b4:	mov	x1, x21
  41c8b8:	mov	x3, x20
  41c8bc:	bl	418744 <error@@Base>
  41c8c0:	b	41caec <parse_file_seq@@Base+0x19d8>
  41c8c4:	mov	w8, wzr
  41c8c8:	mov	x23, x22
  41c8cc:	ldrb	w9, [x23]
  41c8d0:	cmp	w9, #0x28
  41c8d4:	b.eq	41c900 <parse_file_seq@@Base+0x17ec>  // b.none
  41c8d8:	cmp	w9, #0x29
  41c8dc:	b.eq	41c8f8 <parse_file_seq@@Base+0x17e4>  // b.none
  41c8e0:	cbz	w9, 41cabc <parse_file_seq@@Base+0x19a8>
  41c8e4:	cmp	w8, #0x0
  41c8e8:	b.gt	41c904 <parse_file_seq@@Base+0x17f0>
  41c8ec:	cmp	w9, #0x2c
  41c8f0:	b.ne	41c904 <parse_file_seq@@Base+0x17f0>  // b.any
  41c8f4:	b	41c938 <parse_file_seq@@Base+0x1824>
  41c8f8:	sub	w8, w8, #0x1
  41c8fc:	b	41c904 <parse_file_seq@@Base+0x17f0>
  41c900:	add	w8, w8, #0x1
  41c904:	add	x23, x23, #0x1
  41c908:	b	41c8cc <parse_file_seq@@Base+0x17b8>
  41c90c:	mov	w8, wzr
  41c910:	ldr	x9, [x24, #2408]
  41c914:	cmp	w25, #0x1
  41c918:	cset	w10, eq  // eq = none
  41c91c:	cmp	w8, w10
  41c920:	ldr	x9, [x9, #8]
  41c924:	cset	w8, eq  // eq = none
  41c928:	mov	x0, x19
  41c92c:	strb	w8, [x9, x26]
  41c930:	bl	406cb0 <free@plt>
  41c934:	b	41caec <parse_file_seq@@Base+0x19d8>
  41c938:	add	x21, x23, #0x1
  41c93c:	ldurb	w8, [x21, #-2]
  41c940:	sub	x21, x21, #0x1
  41c944:	ldrh	w8, [x27, x8, lsl #1]
  41c948:	tbnz	w8, #1, 41c93c <parse_file_seq@@Base+0x1828>
  41c94c:	mov	w8, #0x1                   	// #1
  41c950:	stur	w8, [x29, #-4]
  41c954:	mov	x0, x22
  41c958:	strb	wzr, [x21]
  41c95c:	bl	40a2dc <variable_expand@@Base>
  41c960:	mov	x22, x0
  41c964:	bl	406790 <strlen@plt>
  41c968:	add	x9, x0, #0x10
  41c96c:	mov	x8, sp
  41c970:	and	x9, x9, #0xfffffffffffffff0
  41c974:	sub	x21, x8, x9
  41c978:	add	x2, x0, #0x1
  41c97c:	mov	sp, x21
  41c980:	mov	x0, x21
  41c984:	mov	x1, x22
  41c988:	bl	406750 <memcpy@plt>
  41c98c:	cmp	w28, #0x2c
  41c990:	b.eq	41c9a8 <parse_file_seq@@Base+0x1894>  // b.none
  41c994:	ldrb	w8, [x23, #1]!
  41c998:	ldrh	w8, [x27, x8, lsl #1]
  41c99c:	tst	w8, #0x6
  41c9a0:	b.ne	41c994 <parse_file_seq@@Base+0x1880>  // b.any
  41c9a4:	b	41c9ac <parse_file_seq@@Base+0x1898>
  41c9a8:	add	x23, x23, #0x1
  41c9ac:	ldur	w8, [x29, #-4]
  41c9b0:	tbnz	w8, #0, 41c9d0 <parse_file_seq@@Base+0x18bc>
  41c9b4:	ldrb	w8, [x23]
  41c9b8:	cmp	w8, #0x22
  41c9bc:	b.eq	41ca18 <parse_file_seq@@Base+0x1904>  // b.none
  41c9c0:	cmp	w8, #0x27
  41c9c4:	b.eq	41ca18 <parse_file_seq@@Base+0x1904>  // b.none
  41c9c8:	cmp	w8, #0x29
  41c9cc:	b.ne	41cabc <parse_file_seq@@Base+0x19a8>  // b.any
  41c9d0:	mov	x0, x23
  41c9d4:	bl	417950 <next_token@@Base>
  41c9d8:	mov	x22, x0
  41c9dc:	mov	w8, wzr
  41c9e0:	mov	x23, x0
  41c9e4:	ldrb	w9, [x23]
  41c9e8:	cmp	w9, #0x28
  41c9ec:	b.eq	41ca0c <parse_file_seq@@Base+0x18f8>  // b.none
  41c9f0:	cmp	w9, #0x29
  41c9f4:	b.eq	41ca00 <parse_file_seq@@Base+0x18ec>  // b.none
  41c9f8:	cbnz	w9, 41ca10 <parse_file_seq@@Base+0x18fc>
  41c9fc:	b	41cabc <parse_file_seq@@Base+0x19a8>
  41ca00:	subs	w8, w8, #0x1
  41ca04:	b.ge	41ca10 <parse_file_seq@@Base+0x18fc>  // b.tcont
  41ca08:	b	41ca30 <parse_file_seq@@Base+0x191c>
  41ca0c:	add	w8, w8, #0x1
  41ca10:	add	x23, x23, #0x1
  41ca14:	b	41c9e4 <parse_file_seq@@Base+0x18d0>
  41ca18:	add	x22, x23, #0x1
  41ca1c:	ldrb	w9, [x23, #1]!
  41ca20:	cbz	w9, 41ca2c <parse_file_seq@@Base+0x1918>
  41ca24:	cmp	w8, w9
  41ca28:	b.ne	41ca1c <parse_file_seq@@Base+0x1908>  // b.any
  41ca2c:	cbz	w9, 41cabc <parse_file_seq@@Base+0x19a8>
  41ca30:	strb	wzr, [x23], #1
  41ca34:	ldrb	w8, [x23], #1
  41ca38:	ldrh	w9, [x27, x8, lsl #1]
  41ca3c:	tst	w9, #0x6
  41ca40:	b.ne	41ca34 <parse_file_seq@@Base+0x1920>  // b.any
  41ca44:	cbz	w8, 41ca7c <parse_file_seq@@Base+0x1968>
  41ca48:	mov	x0, x20
  41ca4c:	bl	406790 <strlen@plt>
  41ca50:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  41ca54:	mov	x23, x0
  41ca58:	add	x1, x1, #0xffe
  41ca5c:	mov	w2, #0x5                   	// #5
  41ca60:	mov	x0, xzr
  41ca64:	bl	406e10 <dcgettext@plt>
  41ca68:	mov	x2, x0
  41ca6c:	mov	x0, x19
  41ca70:	mov	x1, x23
  41ca74:	mov	x3, x20
  41ca78:	bl	418744 <error@@Base>
  41ca7c:	mov	x0, x22
  41ca80:	bl	40a2dc <variable_expand@@Base>
  41ca84:	cmp	x21, x0
  41ca88:	b.eq	41cac4 <parse_file_seq@@Base+0x19b0>  // b.none
  41ca8c:	ldrb	w8, [x21]
  41ca90:	ldrb	w9, [x0]
  41ca94:	cmp	w8, w9
  41ca98:	b.ne	41cacc <parse_file_seq@@Base+0x19b8>  // b.any
  41ca9c:	cbz	w8, 41cac4 <parse_file_seq@@Base+0x19b0>
  41caa0:	add	x8, x21, #0x1
  41caa4:	add	x1, x0, #0x1
  41caa8:	mov	x0, x8
  41caac:	bl	406c70 <strcmp@plt>
  41cab0:	cmp	w0, #0x0
  41cab4:	cset	w8, eq  // eq = none
  41cab8:	b	41cad0 <parse_file_seq@@Base+0x19bc>
  41cabc:	mov	w0, #0xffffffff            	// #-1
  41cac0:	b	41cb20 <parse_file_seq@@Base+0x1a0c>
  41cac4:	mov	w8, #0x1                   	// #1
  41cac8:	b	41cad0 <parse_file_seq@@Base+0x19bc>
  41cacc:	mov	w8, wzr
  41cad0:	ldr	x9, [x24, #2408]
  41cad4:	cmp	w25, #0x3
  41cad8:	cset	w10, eq  // eq = none
  41cadc:	cmp	w8, w10
  41cae0:	ldr	x9, [x9, #8]
  41cae4:	cset	w8, eq  // eq = none
  41cae8:	strb	w8, [x9, x26]
  41caec:	ldr	x9, [x24, #2408]
  41caf0:	ldr	w8, [x9]
  41caf4:	cbz	w8, 41cb14 <parse_file_seq@@Base+0x1a00>
  41caf8:	ldr	x9, [x9, #8]
  41cafc:	mov	x10, xzr
  41cb00:	ldrb	w11, [x9, x10]
  41cb04:	cbnz	w11, 41cb1c <parse_file_seq@@Base+0x1a08>
  41cb08:	add	x10, x10, #0x1
  41cb0c:	cmp	x10, x8
  41cb10:	b.cc	41cb00 <parse_file_seq@@Base+0x19ec>  // b.lo, b.ul, b.last
  41cb14:	mov	w0, wzr
  41cb18:	b	41cb20 <parse_file_seq@@Base+0x1a0c>
  41cb1c:	mov	w0, #0x1                   	// #1
  41cb20:	mov	sp, x29
  41cb24:	ldp	x20, x19, [sp, #80]
  41cb28:	ldp	x22, x21, [sp, #64]
  41cb2c:	ldp	x24, x23, [sp, #48]
  41cb30:	ldp	x26, x25, [sp, #32]
  41cb34:	ldp	x28, x27, [sp, #16]
  41cb38:	ldp	x29, x30, [sp], #96
  41cb3c:	ret
  41cb40:	mov	x0, x20
  41cb44:	bl	406790 <strlen@plt>
  41cb48:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41cb4c:	mov	x21, x0
  41cb50:	add	x1, x1, #0x23
  41cb54:	mov	w2, #0x5                   	// #5
  41cb58:	mov	x0, xzr
  41cb5c:	bl	406e10 <dcgettext@plt>
  41cb60:	mov	x2, x0
  41cb64:	mov	x0, x19
  41cb68:	mov	x1, x21
  41cb6c:	mov	x3, x20
  41cb70:	bl	4188bc <fatal@@Base>
  41cb74:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41cb78:	add	x1, x1, #0x33
  41cb7c:	mov	w2, #0x5                   	// #5
  41cb80:	mov	x0, xzr
  41cb84:	bl	406e10 <dcgettext@plt>
  41cb88:	mov	x2, x0
  41cb8c:	mov	x0, x19
  41cb90:	mov	x1, xzr
  41cb94:	bl	4188bc <fatal@@Base>
  41cb98:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41cb9c:	add	x8, x8, #0xcf0
  41cba0:	ldrb	w13, [x0], #1
  41cba4:	ldrh	w9, [x8, x13, lsl #1]
  41cba8:	tbnz	w9, #1, 41cba0 <parse_file_seq@@Base+0x1a8c>
  41cbac:	cmp	w13, #0x2a
  41cbb0:	b.gt	41cbf0 <parse_file_seq@@Base+0x1adc>
  41cbb4:	cbz	w13, 41cc30 <parse_file_seq@@Base+0x1b1c>
  41cbb8:	cmp	w13, #0x21
  41cbbc:	b.eq	41cc40 <parse_file_seq@@Base+0x1b2c>  // b.none
  41cbc0:	cmp	w13, #0x26
  41cbc4:	b.ne	41cc58 <parse_file_seq@@Base+0x1b44>  // b.any
  41cbc8:	ldrb	w8, [x0]
  41cbcc:	cmp	w8, #0x3a
  41cbd0:	b.ne	41cc58 <parse_file_seq@@Base+0x1b44>  // b.any
  41cbd4:	mov	x9, x0
  41cbd8:	ldrb	w8, [x9, #1]!
  41cbdc:	mov	w10, #0x8                   	// #8
  41cbe0:	cmp	w8, #0x3a
  41cbe4:	cinc	w8, w10, eq  // eq = none
  41cbe8:	cinc	x9, x9, eq  // eq = none
  41cbec:	b	41cde4 <parse_file_seq@@Base+0x1cd0>
  41cbf0:	sub	w8, w13, #0x3a
  41cbf4:	cmp	w8, #0x5
  41cbf8:	b.hi	41cc38 <parse_file_seq@@Base+0x1b24>  // b.pmore
  41cbfc:	adrp	x9, 428000 <_IO_stdin_used@@Base+0x4290>
  41cc00:	add	x9, x9, #0xa4a
  41cc04:	adr	x10, 41cc14 <parse_file_seq@@Base+0x1b00>
  41cc08:	ldrb	w11, [x9, x8]
  41cc0c:	add	x10, x10, x11, lsl #2
  41cc10:	br	x10
  41cc14:	ldrb	w8, [x0]
  41cc18:	cmp	w8, #0x3a
  41cc1c:	b.eq	41cdb8 <parse_file_seq@@Base+0x1ca4>  // b.none
  41cc20:	cmp	w8, #0x3d
  41cc24:	b.eq	41cc4c <parse_file_seq@@Base+0x1b38>  // b.none
  41cc28:	mov	w8, #0x4                   	// #4
  41cc2c:	b	41cdb0 <parse_file_seq@@Base+0x1c9c>
  41cc30:	mov	w8, #0x1                   	// #1
  41cc34:	b	41cdb0 <parse_file_seq@@Base+0x1c9c>
  41cc38:	cmp	w13, #0x2b
  41cc3c:	b.ne	41cc58 <parse_file_seq@@Base+0x1b44>  // b.any
  41cc40:	ldrb	w8, [x0]
  41cc44:	cmp	w8, #0x3d
  41cc48:	b.ne	41cc58 <parse_file_seq@@Base+0x1b44>  // b.any
  41cc4c:	add	x9, x0, #0x1
  41cc50:	mov	w8, #0x7                   	// #7
  41cc54:	b	41cde4 <parse_file_seq@@Base+0x1cd0>
  41cc58:	mov	x10, #0xb                   	// #11
  41cc5c:	mov	w8, #0x2                   	// #2
  41cc60:	mov	w9, #0x1                   	// #1
  41cc64:	movk	x10, #0x4, lsl #32
  41cc68:	mov	x11, x0
  41cc6c:	and	w12, w13, #0xff
  41cc70:	cmp	w12, #0x2a
  41cc74:	b.le	41ccb4 <parse_file_seq@@Base+0x1ba0>
  41cc78:	cmp	w12, #0x3e
  41cc7c:	b.le	41ccd4 <parse_file_seq@@Base+0x1bc0>
  41cc80:	cmp	w12, #0x3f
  41cc84:	b.eq	41ccdc <parse_file_seq@@Base+0x1bc8>  // b.none
  41cc88:	cmp	w12, #0x5c
  41cc8c:	b.ne	41cce8 <parse_file_seq@@Base+0x1bd4>  // b.any
  41cc90:	ldrb	w12, [x11]
  41cc94:	sub	w12, w12, #0x3a
  41cc98:	cmp	w12, #0x22
  41cc9c:	b.hi	41cce8 <parse_file_seq@@Base+0x1bd4>  // b.pmore
  41cca0:	lsl	x12, x9, x12
  41cca4:	tst	x12, x10
  41cca8:	b.eq	41cce8 <parse_file_seq@@Base+0x1bd4>  // b.none
  41ccac:	add	x12, x11, #0x1
  41ccb0:	b	41ccec <parse_file_seq@@Base+0x1bd8>
  41ccb4:	cmp	w12, #0x23
  41ccb8:	b.gt	41ccf8 <parse_file_seq@@Base+0x1be4>
  41ccbc:	cbz	w12, 41cde0 <parse_file_seq@@Base+0x1ccc>
  41ccc0:	cmp	w12, #0x9
  41ccc4:	b.eq	41cde0 <parse_file_seq@@Base+0x1ccc>  // b.none
  41ccc8:	cmp	w12, #0x20
  41cccc:	b.ne	41cce8 <parse_file_seq@@Base+0x1bd4>  // b.any
  41ccd0:	b	41cde0 <parse_file_seq@@Base+0x1ccc>
  41ccd4:	cmp	w12, #0x2b
  41ccd8:	b.ne	41cd40 <parse_file_seq@@Base+0x1c2c>  // b.any
  41ccdc:	ldrb	w12, [x11]
  41cce0:	cmp	w12, #0x3d
  41cce4:	b.eq	41cde0 <parse_file_seq@@Base+0x1ccc>  // b.none
  41cce8:	mov	x12, x11
  41ccec:	ldrb	w13, [x12], #1
  41ccf0:	mov	x11, x12
  41ccf4:	b	41cc6c <parse_file_seq@@Base+0x1b58>
  41ccf8:	cmp	w12, #0x24
  41ccfc:	b.eq	41cd18 <parse_file_seq@@Base+0x1c04>  // b.none
  41cd00:	cmp	w12, #0x26
  41cd04:	b.ne	41cce8 <parse_file_seq@@Base+0x1bd4>  // b.any
  41cd08:	ldrb	w12, [x11]
  41cd0c:	cmp	w12, #0x3a
  41cd10:	b.ne	41cce8 <parse_file_seq@@Base+0x1bd4>  // b.any
  41cd14:	b	41cde0 <parse_file_seq@@Base+0x1ccc>
  41cd18:	mov	x12, x11
  41cd1c:	ldrb	w13, [x12], #1
  41cd20:	cmp	w13, #0x27
  41cd24:	b.le	41cd4c <parse_file_seq@@Base+0x1c38>
  41cd28:	cmp	w13, #0x28
  41cd2c:	b.eq	41cd5c <parse_file_seq@@Base+0x1c48>  // b.none
  41cd30:	cmp	w13, #0x7b
  41cd34:	b.ne	41cd9c <parse_file_seq@@Base+0x1c88>  // b.any
  41cd38:	mov	w8, #0x7d                  	// #125
  41cd3c:	b	41cd60 <parse_file_seq@@Base+0x1c4c>
  41cd40:	cmp	w12, #0x3a
  41cd44:	b.ne	41cce0 <parse_file_seq@@Base+0x1bcc>  // b.any
  41cd48:	b	41cde0 <parse_file_seq@@Base+0x1ccc>
  41cd4c:	cmp	w13, #0x24
  41cd50:	b.eq	41ccec <parse_file_seq@@Base+0x1bd8>  // b.none
  41cd54:	cbnz	w13, 41cd9c <parse_file_seq@@Base+0x1c88>
  41cd58:	b	41cddc <parse_file_seq@@Base+0x1cc8>
  41cd5c:	mov	w8, #0x29                  	// #41
  41cd60:	ldrb	w15, [x12]
  41cd64:	cbz	w15, 41cd9c <parse_file_seq@@Base+0x1c88>
  41cd68:	mov	w14, wzr
  41cd6c:	add	x12, x11, #0x2
  41cd70:	cmp	w13, w15, uxtb
  41cd74:	b.ne	41cd80 <parse_file_seq@@Base+0x1c6c>  // b.any
  41cd78:	add	w14, w14, #0x1
  41cd7c:	b	41cd90 <parse_file_seq@@Base+0x1c7c>
  41cd80:	cmp	w8, w15, uxtb
  41cd84:	b.ne	41cd90 <parse_file_seq@@Base+0x1c7c>  // b.any
  41cd88:	subs	w14, w14, #0x1
  41cd8c:	b.lt	41cd9c <parse_file_seq@@Base+0x1c88>  // b.tstop
  41cd90:	ldrb	w15, [x12], #1
  41cd94:	cbnz	w15, 41cd70 <parse_file_seq@@Base+0x1c5c>
  41cd98:	sub	x12, x12, #0x1
  41cd9c:	mov	w8, #0x3                   	// #3
  41cda0:	b	41ccec <parse_file_seq@@Base+0x1bd8>
  41cda4:	mov	w8, #0x6                   	// #6
  41cda8:	b	41cdb0 <parse_file_seq@@Base+0x1c9c>
  41cdac:	mov	w8, #0x7                   	// #7
  41cdb0:	mov	x9, x0
  41cdb4:	b	41cde4 <parse_file_seq@@Base+0x1cd0>
  41cdb8:	mov	x9, x0
  41cdbc:	ldrb	w8, [x9, #2]!
  41cdc0:	mov	w10, #0x5                   	// #5
  41cdc4:	mov	w11, #0x7                   	// #7
  41cdc8:	sub	x12, x9, #0x1
  41cdcc:	cmp	w8, #0x3d
  41cdd0:	csel	w8, w11, w10, eq  // eq = none
  41cdd4:	csel	x9, x9, x12, eq  // eq = none
  41cdd8:	b	41cde4 <parse_file_seq@@Base+0x1cd0>
  41cddc:	mov	x11, x12
  41cde0:	sub	x9, x11, #0x1
  41cde4:	sub	x10, x0, #0x1
  41cde8:	cbz	x1, 41cdf0 <parse_file_seq@@Base+0x1cdc>
  41cdec:	str	x10, [x1]
  41cdf0:	cbz	x2, 41cdfc <parse_file_seq@@Base+0x1ce8>
  41cdf4:	sub	x9, x9, x10
  41cdf8:	str	x9, [x2]
  41cdfc:	mov	w0, w8
  41ce00:	ret

000000000041ce04 <update_goal_chain@@Base>:
  41ce04:	sub	sp, sp, #0x80
  41ce08:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41ce0c:	ldr	w8, [x8, #228]
  41ce10:	stp	x29, x30, [sp, #32]
  41ce14:	stp	x24, x23, [sp, #80]
  41ce18:	add	x29, sp, #0x20
  41ce1c:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  41ce20:	stur	w8, [x29, #-12]
  41ce24:	ldr	w8, [x24, #3260]
  41ce28:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41ce2c:	stp	x28, x27, [sp, #48]
  41ce30:	stp	x26, x25, [sp, #64]
  41ce34:	stur	w8, [x29, #-8]
  41ce38:	ldr	w8, [x9, #24]
  41ce3c:	stp	x22, x21, [sp, #96]
  41ce40:	stp	x20, x19, [sp, #112]
  41ce44:	mov	x19, x0
  41ce48:	stur	w8, [x29, #-4]
  41ce4c:	bl	417adc <copy_dep_chain@@Base>
  41ce50:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  41ce54:	adrp	x12, 43e000 <stdio_traced@@Base+0x1a38>
  41ce58:	ldr	w8, [x23, #3300]
  41ce5c:	ldr	w9, [x12, #1640]
  41ce60:	adrp	x10, 43e000 <stdio_traced@@Base+0x1a38>
  41ce64:	mov	w26, #0x1                   	// #1
  41ce68:	cmp	w8, #0x0
  41ce6c:	add	w9, w9, #0x1
  41ce70:	csel	x11, xzr, x19, eq  // eq = none
  41ce74:	str	w9, [x12, #1640]
  41ce78:	str	x11, [x10, #1632]
  41ce7c:	cbz	x0, 41d1e0 <update_goal_chain@@Base+0x3dc>
  41ce80:	mov	x21, x0
  41ce84:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  41ce88:	mov	w19, #0x1                   	// #1
  41ce8c:	bl	412ae0 <start_waiting_jobs@@Base>
  41ce90:	mov	w0, #0x1                   	// #1
  41ce94:	mov	w1, wzr
  41ce98:	bl	411388 <reap_children@@Base>
  41ce9c:	mov	x25, xzr
  41cea0:	mov	x20, x21
  41cea4:	str	x21, [sp]
  41cea8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41ceac:	str	x20, [x8, #1648]
  41ceb0:	ldr	x8, [x20, #16]
  41ceb4:	str	x25, [sp, #8]
  41ceb8:	ldr	x9, [x8, #104]
  41cebc:	cmp	x9, #0x0
  41cec0:	csel	x9, x8, x9, eq  // eq = none
  41cec4:	cbz	x9, 41d088 <update_goal_chain@@Base+0x284>
  41cec8:	mov	w28, wzr
  41cecc:	ldrh	w8, [x20, #32]
  41ced0:	ldr	w10, [x9, #136]
  41ced4:	ubfx	w8, w8, #2, #1
  41ced8:	bfi	w10, w8, #16, #1
  41cedc:	str	w10, [x9, #136]
  41cee0:	mov	x22, x9
  41cee4:	ldr	x9, [x9, #72]
  41cee8:	cbnz	x9, 41cee0 <update_goal_chain@@Base+0xdc>
  41ceec:	ldr	w8, [x23, #3300]
  41cef0:	cbz	w8, 41cf30 <update_goal_chain@@Base+0x12c>
  41cef4:	ldrb	w9, [x22, #137]
  41cef8:	tbnz	w9, #4, 41cf14 <update_goal_chain@@Base+0x110>
  41cefc:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41cf00:	str	wzr, [x9, #24]
  41cf04:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41cf08:	str	wzr, [x24, #3260]
  41cf0c:	str	wzr, [x9, #228]
  41cf10:	b	41cf30 <update_goal_chain@@Base+0x12c>
  41cf14:	ldur	w10, [x29, #-12]
  41cf18:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41cf1c:	str	w10, [x9, #228]
  41cf20:	ldp	w9, w10, [x29, #-8]
  41cf24:	str	w9, [x24, #3260]
  41cf28:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41cf2c:	str	w10, [x9, #24]
  41cf30:	ldr	w25, [x27, #1624]
  41cf34:	cmp	w8, #0x0
  41cf38:	cset	w1, ne  // ne = any
  41cf3c:	mov	x0, x22
  41cf40:	bl	41d1ec <update_goal_chain@@Base+0x3e8>
  41cf44:	mov	x21, x22
  41cf48:	ldr	x22, [x22, #72]
  41cf4c:	cbnz	x22, 41cf44 <update_goal_chain@@Base+0x140>
  41cf50:	ldr	w8, [x27, #1624]
  41cf54:	cmp	w8, w25
  41cf58:	b.ls	41cf68 <update_goal_chain@@Base+0x164>  // b.plast
  41cf5c:	ldrh	w8, [x20, #32]
  41cf60:	orr	w8, w8, #0x100
  41cf64:	strh	w8, [x20, #32]
  41cf68:	mov	x9, x21
  41cf6c:	cbz	w0, 41cf80 <update_goal_chain@@Base+0x17c>
  41cf70:	ldr	w8, [x9, #136]!
  41cf74:	cmp	w19, #0x1
  41cf78:	b.ls	41cf90 <update_goal_chain@@Base+0x18c>  // b.plast
  41cf7c:	b	41cfc4 <update_goal_chain@@Base+0x1c0>
  41cf80:	ldr	w8, [x9, #136]!
  41cf84:	cmp	w19, #0x1
  41cf88:	b.hi	41cfc4 <update_goal_chain@@Base+0x1c0>  // b.pmore
  41cf8c:	tbz	w8, #10, 41cfc4 <update_goal_chain@@Base+0x1c0>
  41cf90:	ands	w10, w8, #0x3
  41cf94:	b.eq	41cfe8 <update_goal_chain@@Base+0x1e4>  // b.none
  41cf98:	adrp	x11, 43f000 <shell_var@@Base+0x20>
  41cf9c:	ldr	w13, [x24, #3260]
  41cfa0:	ldr	w11, [x11, #28]
  41cfa4:	ldr	w12, [x23, #3300]
  41cfa8:	and	w14, w8, #0xfffeffff
  41cfac:	str	w14, [x9]
  41cfb0:	cbz	w13, 41cfbc <update_goal_chain@@Base+0x1b8>
  41cfb4:	orr	w9, w12, w11
  41cfb8:	cbz	w9, 41d090 <update_goal_chain@@Base+0x28c>
  41cfbc:	mov	w19, w10
  41cfc0:	b	41cfd4 <update_goal_chain@@Base+0x1d0>
  41cfc4:	mov	x10, x21
  41cfc8:	and	w11, w8, #0xfffeffff
  41cfcc:	str	w11, [x9]
  41cfd0:	mov	x21, x10
  41cfd4:	ldr	x9, [x21, #56]
  41cfd8:	bic	w8, w26, w8, lsr #10
  41cfdc:	orr	w28, w8, w28
  41cfe0:	cbnz	x9, 41cecc <update_goal_chain@@Base+0xc8>
  41cfe4:	b	41d078 <update_goal_chain@@Base+0x274>
  41cfe8:	ldr	w8, [x23, #3300]
  41cfec:	ldr	x0, [x21, #112]
  41cff0:	cbz	w8, 41d004 <update_goal_chain@@Base+0x200>
  41cff4:	cbnz	x0, 41d014 <update_goal_chain@@Base+0x210>
  41cff8:	mov	x0, x21
  41cffc:	mov	w1, wzr
  41d000:	b	41d010 <update_goal_chain@@Base+0x20c>
  41d004:	cbnz	x0, 41d014 <update_goal_chain@@Base+0x210>
  41d008:	mov	w1, #0x1                   	// #1
  41d00c:	mov	x0, x21
  41d010:	bl	41e0cc <f_mtime@@Base>
  41d014:	mov	x10, x21
  41d018:	ldr	x21, [x21, #72]
  41d01c:	cbnz	x21, 41d014 <update_goal_chain@@Base+0x210>
  41d020:	mov	x9, x10
  41d024:	ldr	w8, [x9, #136]!
  41d028:	tbz	w8, #10, 41cfc8 <update_goal_chain@@Base+0x1c4>
  41d02c:	ldrb	w11, [x20, #33]
  41d030:	tbz	w11, #0, 41cfc8 <update_goal_chain@@Base+0x1c4>
  41d034:	ldr	x11, [x10, #120]
  41d038:	cmp	x0, x11
  41d03c:	b.eq	41cfc8 <update_goal_chain@@Base+0x1c4>  // b.none
  41d040:	ldr	w11, [x23, #3300]
  41d044:	cbz	w11, 41d070 <update_goal_chain@@Base+0x26c>
  41d048:	adrp	x11, 43f000 <shell_var@@Base+0x20>
  41d04c:	ldr	w11, [x11, #24]
  41d050:	ldr	w12, [x24, #3260]
  41d054:	and	w13, w8, #0xfffeffff
  41d058:	str	w13, [x9]
  41d05c:	orr	w11, w12, w11
  41d060:	cmp	w11, #0x0
  41d064:	csel	w19, wzr, w19, eq  // eq = none
  41d068:	tbz	w8, #16, 41cfd0 <update_goal_chain@@Base+0x1cc>
  41d06c:	b	41d168 <update_goal_chain@@Base+0x364>
  41d070:	mov	w19, wzr
  41d074:	b	41cfc8 <update_goal_chain@@Base+0x1c4>
  41d078:	cbz	w28, 41d088 <update_goal_chain@@Base+0x284>
  41d07c:	ldr	x8, [x20]
  41d080:	mov	x25, x20
  41d084:	b	41d15c <update_goal_chain@@Base+0x358>
  41d088:	mov	w22, #0x1                   	// #1
  41d08c:	b	41d098 <update_goal_chain@@Base+0x294>
  41d090:	mov	w22, wzr
  41d094:	mov	w19, w10
  41d098:	ldr	w8, [x23, #3300]
  41d09c:	cbnz	w8, 41d120 <update_goal_chain@@Base+0x31c>
  41d0a0:	ldr	x28, [x20, #16]
  41d0a4:	ldr	w21, [x28, #136]
  41d0a8:	tst	w21, #0x3
  41d0ac:	b.ne	41d120 <update_goal_chain@@Base+0x31c>  // b.any
  41d0b0:	ldrb	w8, [x20, #33]
  41d0b4:	tbnz	w8, #0, 41d120 <update_goal_chain@@Base+0x31c>
  41d0b8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d0bc:	ldr	w8, [x8, #3232]
  41d0c0:	ldr	w9, [x24, #3260]
  41d0c4:	orr	w8, w9, w8
  41d0c8:	cbnz	w8, 41d120 <update_goal_chain@@Base+0x31c>
  41d0cc:	ldr	x0, [x28]
  41d0d0:	bl	406790 <strlen@plt>
  41d0d4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d0d8:	mov	x25, x0
  41d0dc:	add	x1, x1, #0xc8
  41d0e0:	tbnz	w21, #13, 41d100 <update_goal_chain@@Base+0x2fc>
  41d0e4:	ldr	x8, [x28, #32]
  41d0e8:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x5290>
  41d0ec:	add	x9, x9, #0xe5
  41d0f0:	cmp	x8, #0x0
  41d0f4:	adrp	x8, 429000 <_IO_stdin_used@@Base+0x5290>
  41d0f8:	add	x8, x8, #0xc8
  41d0fc:	csel	x1, x8, x9, eq  // eq = none
  41d100:	mov	w2, #0x5                   	// #5
  41d104:	mov	x0, xzr
  41d108:	bl	406e10 <dcgettext@plt>
  41d10c:	ldr	x3, [x28]
  41d110:	mov	x2, x0
  41d114:	mov	w0, #0x1                   	// #1
  41d118:	mov	x1, x25
  41d11c:	bl	4185c0 <message@@Base>
  41d120:	ldr	x21, [x20]
  41d124:	ldr	x25, [sp, #8]
  41d128:	cbz	x25, 41d148 <update_goal_chain@@Base+0x344>
  41d12c:	mov	x0, x20
  41d130:	str	x21, [x25]
  41d134:	bl	406cb0 <free@plt>
  41d138:	ldr	x8, [x25]
  41d13c:	ldr	x21, [sp]
  41d140:	tbnz	w22, #0, 41d158 <update_goal_chain@@Base+0x354>
  41d144:	b	41d170 <update_goal_chain@@Base+0x36c>
  41d148:	mov	x0, x20
  41d14c:	bl	406cb0 <free@plt>
  41d150:	mov	x8, x21
  41d154:	tbz	w22, #0, 41d170 <update_goal_chain@@Base+0x36c>
  41d158:	str	x21, [sp]
  41d15c:	mov	x20, x8
  41d160:	cbnz	x8, 41cea8 <update_goal_chain@@Base+0xa4>
  41d164:	b	41d180 <update_goal_chain@@Base+0x37c>
  41d168:	mov	w22, wzr
  41d16c:	b	41d098 <update_goal_chain@@Base+0x294>
  41d170:	str	x21, [sp]
  41d174:	cbz	x8, 41d180 <update_goal_chain@@Base+0x37c>
  41d178:	cbnz	x21, 41ce8c <update_goal_chain@@Base+0x88>
  41d17c:	b	41d198 <update_goal_chain@@Base+0x394>
  41d180:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  41d184:	ldr	w8, [x9, #1640]
  41d188:	ldr	x21, [sp]
  41d18c:	add	w8, w8, #0x1
  41d190:	str	w8, [x9, #1640]
  41d194:	cbnz	x21, 41ce8c <update_goal_chain@@Base+0x88>
  41d198:	ldr	w8, [x23, #3300]
  41d19c:	cbz	w8, 41d1bc <update_goal_chain@@Base+0x3b8>
  41d1a0:	ldur	w9, [x29, #-12]
  41d1a4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41d1a8:	str	w9, [x8, #228]
  41d1ac:	ldp	w8, w9, [x29, #-8]
  41d1b0:	str	w8, [x24, #3260]
  41d1b4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41d1b8:	str	w9, [x8, #24]
  41d1bc:	mov	w0, w19
  41d1c0:	ldp	x20, x19, [sp, #112]
  41d1c4:	ldp	x22, x21, [sp, #96]
  41d1c8:	ldp	x24, x23, [sp, #80]
  41d1cc:	ldp	x26, x25, [sp, #64]
  41d1d0:	ldp	x28, x27, [sp, #48]
  41d1d4:	ldp	x29, x30, [sp, #32]
  41d1d8:	add	sp, sp, #0x80
  41d1dc:	ret
  41d1e0:	mov	w19, #0x1                   	// #1
  41d1e4:	cbnz	w8, 41d1a0 <update_goal_chain@@Base+0x39c>
  41d1e8:	b	41d1bc <update_goal_chain@@Base+0x3b8>
  41d1ec:	sub	sp, sp, #0xb0
  41d1f0:	stp	x29, x30, [sp, #80]
  41d1f4:	stp	x28, x27, [sp, #96]
  41d1f8:	stp	x26, x25, [sp, #112]
  41d1fc:	stp	x24, x23, [sp, #128]
  41d200:	stp	x22, x21, [sp, #144]
  41d204:	stp	x20, x19, [sp, #160]
  41d208:	ldr	x8, [x0, #104]
  41d20c:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41d210:	mov	w23, w1
  41d214:	add	x29, sp, #0x50
  41d218:	cmp	x8, #0x0
  41d21c:	csel	x19, x0, x8, eq  // eq = none
  41d220:	ldr	w9, [x19, #128]
  41d224:	ldr	w8, [x20, #1640]
  41d228:	cmp	w9, w8
  41d22c:	b.ne	41d2a4 <update_goal_chain@@Base+0x4a0>  // b.any
  41d230:	ldr	w9, [x19, #136]
  41d234:	mov	w10, #0x402                 	// #1026
  41d238:	movk	w10, #0x8, lsl #16
  41d23c:	orr	w11, w10, #0x10000
  41d240:	and	w11, w9, w11
  41d244:	cmp	w11, w10
  41d248:	b.eq	41d2a8 <update_goal_chain@@Base+0x4a4>  // b.none
  41d24c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d250:	ldrb	w8, [x8, #3236]
  41d254:	tbz	w8, #1, 41d290 <update_goal_chain@@Base+0x48c>
  41d258:	mov	x21, x0
  41d25c:	mov	w0, w23
  41d260:	bl	4176ac <print_spaces@@Base>
  41d264:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d268:	add	x1, x1, #0x13a
  41d26c:	mov	w2, #0x5                   	// #5
  41d270:	mov	x0, xzr
  41d274:	bl	406e10 <dcgettext@plt>
  41d278:	ldr	x1, [x21]
  41d27c:	bl	406ea0 <printf@plt>
  41d280:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d284:	ldr	x0, [x8, #2512]
  41d288:	bl	406d40 <fflush@plt>
  41d28c:	ldr	w9, [x19, #136]
  41d290:	mov	w10, #0xc                   	// #12
  41d294:	and	w8, w9, #0x3
  41d298:	bics	wzr, w10, w9
  41d29c:	csel	w26, w8, wzr, eq  // eq = none
  41d2a0:	b	41e0a8 <update_goal_chain@@Base+0x12a4>
  41d2a4:	cbz	x19, 41e09c <update_goal_chain@@Base+0x1298>
  41d2a8:	mov	w25, wzr
  41d2ac:	add	w9, w23, #0x1
  41d2b0:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  41d2b4:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41d2b8:	str	w9, [sp, #32]
  41d2bc:	str	w23, [sp, #16]
  41d2c0:	str	w8, [x19, #128]
  41d2c4:	ldrb	w8, [x28, #3236]
  41d2c8:	tbz	w8, #1, 41d2f8 <update_goal_chain@@Base+0x4f4>
  41d2cc:	mov	w0, w23
  41d2d0:	bl	4176ac <print_spaces@@Base>
  41d2d4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d2d8:	mov	w2, #0x5                   	// #5
  41d2dc:	mov	x0, xzr
  41d2e0:	add	x1, x1, #0x14e
  41d2e4:	bl	406e10 <dcgettext@plt>
  41d2e8:	ldr	x1, [x19]
  41d2ec:	bl	406ea0 <printf@plt>
  41d2f0:	ldr	x0, [x21, #2512]
  41d2f4:	bl	406d40 <fflush@plt>
  41d2f8:	ldr	w8, [x19, #136]
  41d2fc:	tbnz	w8, #10, 41d338 <update_goal_chain@@Base+0x534>
  41d300:	ubfx	w9, w8, #2, #2
  41d304:	cmp	w9, #0x2
  41d308:	b.cc	41d378 <update_goal_chain@@Base+0x574>  // b.lo, b.ul, b.last
  41d30c:	cmp	w9, #0x3
  41d310:	b.eq	41d45c <update_goal_chain@@Base+0x658>  // b.none
  41d314:	ldrb	w8, [x28, #3236]
  41d318:	tbz	w8, #1, 41d370 <update_goal_chain@@Base+0x56c>
  41d31c:	mov	w0, w23
  41d320:	bl	4176ac <print_spaces@@Base>
  41d324:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d328:	mov	w2, #0x5                   	// #5
  41d32c:	mov	x0, xzr
  41d330:	add	x1, x1, #0x1c0
  41d334:	b	41d35c <update_goal_chain@@Base+0x558>
  41d338:	ldr	w9, [x28, #3236]
  41d33c:	tbnz	w8, #1, 41d40c <update_goal_chain@@Base+0x608>
  41d340:	tbz	w9, #1, 41d370 <update_goal_chain@@Base+0x56c>
  41d344:	mov	w0, w23
  41d348:	bl	4176ac <print_spaces@@Base>
  41d34c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d350:	mov	w2, #0x5                   	// #5
  41d354:	mov	x0, xzr
  41d358:	add	x1, x1, #0x19d
  41d35c:	bl	406e10 <dcgettext@plt>
  41d360:	ldr	x1, [x19]
  41d364:	bl	406ea0 <printf@plt>
  41d368:	ldr	x0, [x21, #2512]
  41d36c:	bl	406d40 <fflush@plt>
  41d370:	mov	w26, wzr
  41d374:	b	41db58 <update_goal_chain@@Base+0xd54>
  41d378:	ldr	x9, [x19, #104]
  41d37c:	lsr	w10, w8, #16
  41d380:	bfi	w8, w10, #19, #1
  41d384:	str	w8, [x19, #136]
  41d388:	cmp	x9, #0x0
  41d38c:	csel	x8, x19, x9, eq  // eq = none
  41d390:	ldr	w9, [x8, #136]
  41d394:	orr	w9, w9, #0x200
  41d398:	str	w9, [x8, #136]
  41d39c:	ldr	x24, [x19, #112]
  41d3a0:	cbnz	x24, 41d3b4 <update_goal_chain@@Base+0x5b0>
  41d3a4:	mov	w1, #0x1                   	// #1
  41d3a8:	mov	x0, x19
  41d3ac:	bl	41e0cc <f_mtime@@Base>
  41d3b0:	mov	x24, x0
  41d3b4:	mov	x8, x19
  41d3b8:	mov	x27, x8
  41d3bc:	ldr	x8, [x8, #72]
  41d3c0:	cbnz	x8, 41d3b8 <update_goal_chain@@Base+0x5b4>
  41d3c4:	cmp	x24, #0x1
  41d3c8:	cset	w20, eq  // eq = none
  41d3cc:	b.ne	41d49c <update_goal_chain@@Base+0x698>  // b.any
  41d3d0:	ldrb	w8, [x28, #3236]
  41d3d4:	tbz	w8, #0, 41d404 <update_goal_chain@@Base+0x600>
  41d3d8:	ldr	w0, [sp, #32]
  41d3dc:	bl	4176ac <print_spaces@@Base>
  41d3e0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d3e4:	mov	w2, #0x5                   	// #5
  41d3e8:	mov	x0, xzr
  41d3ec:	add	x1, x1, #0x1f9
  41d3f0:	bl	406e10 <dcgettext@plt>
  41d3f4:	ldr	x1, [x27]
  41d3f8:	bl	406ea0 <printf@plt>
  41d3fc:	ldr	x0, [x21, #2512]
  41d400:	bl	406d40 <fflush@plt>
  41d404:	mov	w8, #0x1                   	// #1
  41d408:	b	41d51c <update_goal_chain@@Base+0x718>
  41d40c:	tbz	w9, #1, 41d440 <update_goal_chain@@Base+0x63c>
  41d410:	mov	w0, w23
  41d414:	bl	4176ac <print_spaces@@Base>
  41d418:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d41c:	mov	w2, #0x5                   	// #5
  41d420:	mov	x0, xzr
  41d424:	add	x1, x1, #0x16d
  41d428:	bl	406e10 <dcgettext@plt>
  41d42c:	ldr	x1, [x19]
  41d430:	bl	406ea0 <printf@plt>
  41d434:	ldr	x0, [x21, #2512]
  41d438:	bl	406d40 <fflush@plt>
  41d43c:	ldr	w8, [x19, #136]
  41d440:	mov	w9, #0x90000               	// #589824
  41d444:	and	w9, w8, w9
  41d448:	cmp	w9, #0x80, lsl #12
  41d44c:	b.ne	41d494 <update_goal_chain@@Base+0x690>  // b.any
  41d450:	mov	x0, x19
  41d454:	bl	41eef0 <notice_finished_file@@Base+0x668>
  41d458:	b	41d490 <update_goal_chain@@Base+0x68c>
  41d45c:	ldrb	w9, [x28, #3236]
  41d460:	tbz	w9, #1, 41d494 <update_goal_chain@@Base+0x690>
  41d464:	mov	w0, w23
  41d468:	bl	4176ac <print_spaces@@Base>
  41d46c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d470:	mov	w2, #0x5                   	// #5
  41d474:	mov	x0, xzr
  41d478:	add	x1, x1, #0x1db
  41d47c:	bl	406e10 <dcgettext@plt>
  41d480:	ldr	x1, [x19]
  41d484:	bl	406ea0 <printf@plt>
  41d488:	ldr	x0, [x21, #2512]
  41d48c:	bl	406d40 <fflush@plt>
  41d490:	ldr	w8, [x19, #136]
  41d494:	and	w26, w8, #0x3
  41d498:	b	41db58 <update_goal_chain@@Base+0xd54>
  41d49c:	mov	x9, #0xffffffffffffc9ff    	// #-13825
  41d4a0:	sub	x8, x24, #0x3
  41d4a4:	movk	x9, #0xfb9a, lsl #16
  41d4a8:	cmp	x8, x9
  41d4ac:	str	x24, [sp, #24]
  41d4b0:	b.hi	41d520 <update_goal_chain@@Base+0x71c>  // b.pmore
  41d4b4:	ldrb	w8, [x27, #136]
  41d4b8:	str	x24, [sp, #24]
  41d4bc:	tbz	w8, #7, 41d520 <update_goal_chain@@Base+0x71c>
  41d4c0:	mov	w8, #0xfffd                	// #65533
  41d4c4:	movk	w8, #0x3fff, lsl #16
  41d4c8:	add	w8, w24, w8
  41d4cc:	ands	w21, w8, #0x3fffffff
  41d4d0:	b.eq	41d508 <update_goal_chain@@Base+0x704>  // b.none
  41d4d4:	ldr	x0, [x27]
  41d4d8:	bl	406790 <strlen@plt>
  41d4dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d4e0:	mov	x22, x0
  41d4e4:	mov	w2, #0x5                   	// #5
  41d4e8:	mov	x0, xzr
  41d4ec:	add	x1, x1, #0x214
  41d4f0:	bl	406e10 <dcgettext@plt>
  41d4f4:	ldr	x3, [x27]
  41d4f8:	mov	x2, x0
  41d4fc:	mov	x0, xzr
  41d500:	mov	x1, x22
  41d504:	bl	418744 <error@@Base>
  41d508:	mov	w8, #0xc9ff                	// #51711
  41d50c:	movk	w8, #0x3b9a, lsl #16
  41d510:	sub	w8, w8, w21
  41d514:	add	x8, x24, w8, sxtw
  41d518:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41d51c:	str	x8, [sp, #24]
  41d520:	ldr	w8, [x27, #136]
  41d524:	tbnz	w8, #13, 41d5a4 <update_goal_chain@@Base+0x7a0>
  41d528:	tbnz	w8, #8, 41d5a4 <update_goal_chain@@Base+0x7a0>
  41d52c:	ldr	x9, [x27, #32]
  41d530:	cbnz	x9, 41d5a4 <update_goal_chain@@Base+0x7a0>
  41d534:	ldr	w1, [sp, #32]
  41d538:	mov	x0, x27
  41d53c:	bl	40ffc0 <try_implicit_rule@@Base>
  41d540:	ldr	w8, [x28, #3236]
  41d544:	cbz	w0, 41d568 <update_goal_chain@@Base+0x764>
  41d548:	tbz	w8, #3, 41d598 <update_goal_chain@@Base+0x794>
  41d54c:	ldr	w0, [sp, #32]
  41d550:	bl	4176ac <print_spaces@@Base>
  41d554:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d558:	mov	w2, #0x5                   	// #5
  41d55c:	mov	x0, xzr
  41d560:	add	x1, x1, #0x261
  41d564:	b	41d584 <update_goal_chain@@Base+0x780>
  41d568:	tbz	w8, #3, 41d598 <update_goal_chain@@Base+0x794>
  41d56c:	ldr	w0, [sp, #32]
  41d570:	bl	4176ac <print_spaces@@Base>
  41d574:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d578:	mov	w2, #0x5                   	// #5
  41d57c:	mov	x0, xzr
  41d580:	add	x1, x1, #0x283
  41d584:	bl	406e10 <dcgettext@plt>
  41d588:	ldr	x1, [x27]
  41d58c:	bl	406ea0 <printf@plt>
  41d590:	ldr	x0, [x21, #2512]
  41d594:	bl	406d40 <fflush@plt>
  41d598:	ldr	w8, [x27, #136]
  41d59c:	orr	w8, w8, #0x100
  41d5a0:	str	w8, [x27, #136]
  41d5a4:	ldr	x9, [x27, #32]
  41d5a8:	cbz	x9, 41d964 <update_goal_chain@@Base+0xb60>
  41d5ac:	str	x27, [sp, #56]
  41d5b0:	ldr	x8, [x27, #48]
  41d5b4:	str	w25, [sp, #20]
  41d5b8:	mov	w26, wzr
  41d5bc:	mov	w25, wzr
  41d5c0:	str	x8, [sp, #40]
  41d5c4:	add	x28, sp, #0x28
  41d5c8:	mov	x8, x27
  41d5cc:	str	x24, [sp, #8]
  41d5d0:	ldr	x21, [x8, #24]
  41d5d4:	ldr	x28, [x28]
  41d5d8:	cbz	x21, 41d7cc <update_goal_chain@@Base+0x9c8>
  41d5dc:	mov	x23, xzr
  41d5e0:	ldr	x24, [x21, #16]
  41d5e4:	ldr	x8, [x24, #72]
  41d5e8:	cbz	x8, 41d5fc <update_goal_chain@@Base+0x7f8>
  41d5ec:	mov	x24, x8
  41d5f0:	ldr	x8, [x8, #72]
  41d5f4:	cbnz	x8, 41d5ec <update_goal_chain@@Base+0x7e8>
  41d5f8:	str	x24, [x21, #16]
  41d5fc:	ldr	x22, [x24, #112]
  41d600:	cbnz	x22, 41d618 <update_goal_chain@@Base+0x814>
  41d604:	mov	w1, #0x1                   	// #1
  41d608:	mov	x0, x24
  41d60c:	bl	41e0cc <f_mtime@@Base>
  41d610:	ldr	x24, [x21, #16]
  41d614:	mov	x22, x0
  41d618:	ldr	x8, [x24, #72]
  41d61c:	cbz	x8, 41d630 <update_goal_chain@@Base+0x82c>
  41d620:	mov	x24, x8
  41d624:	ldr	x8, [x8, #72]
  41d628:	cbnz	x8, 41d620 <update_goal_chain@@Base+0x81c>
  41d62c:	str	x24, [x21, #16]
  41d630:	ldr	x8, [x24, #104]
  41d634:	cmp	x8, #0x0
  41d638:	csel	x8, x24, x8, eq  // eq = none
  41d63c:	ldrb	w8, [x8, #137]
  41d640:	tbnz	w8, #1, 41d678 <update_goal_chain@@Base+0x874>
  41d644:	str	x27, [x24, #96]
  41d648:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d64c:	ldr	w8, [x8, #3300]
  41d650:	str	w20, [sp, #36]
  41d654:	cbz	w8, 41d6d4 <update_goal_chain@@Base+0x8d0>
  41d658:	ldr	w9, [x27, #136]
  41d65c:	ldr	w8, [x24, #136]
  41d660:	lsr	w9, w9, #16
  41d664:	and	w23, w8, #0x10000
  41d668:	bfi	w8, w9, #16, #1
  41d66c:	str	w8, [x24, #136]
  41d670:	ldr	x24, [x21, #16]
  41d674:	b	41d6d8 <update_goal_chain@@Base+0x8d4>
  41d678:	ldr	x0, [x27]
  41d67c:	bl	406790 <strlen@plt>
  41d680:	ldr	x8, [x24]
  41d684:	mov	x22, x0
  41d688:	mov	x0, x8
  41d68c:	bl	406790 <strlen@plt>
  41d690:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d694:	add	x22, x0, x22
  41d698:	mov	w2, #0x5                   	// #5
  41d69c:	mov	x0, xzr
  41d6a0:	add	x1, x1, #0x2c5
  41d6a4:	bl	406e10 <dcgettext@plt>
  41d6a8:	ldr	x8, [x21, #16]
  41d6ac:	ldr	x3, [x27]
  41d6b0:	mov	x2, x0
  41d6b4:	mov	x0, xzr
  41d6b8:	ldr	x4, [x8]
  41d6bc:	mov	x1, x22
  41d6c0:	bl	418744 <error@@Base>
  41d6c4:	ldr	x8, [x21]
  41d6c8:	cbz	x23, 41d7c0 <update_goal_chain@@Base+0x9bc>
  41d6cc:	str	x8, [x23]
  41d6d0:	b	41d7c4 <update_goal_chain@@Base+0x9c0>
  41d6d4:	mov	w23, wzr
  41d6d8:	ldr	w1, [sp, #32]
  41d6dc:	ldr	x2, [sp, #24]
  41d6e0:	add	x3, sp, #0x24
  41d6e4:	mov	x0, x24
  41d6e8:	bl	41f050 <notice_finished_file@@Base+0x7c8>
  41d6ec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d6f0:	ldr	w8, [x8, #3300]
  41d6f4:	cmp	w0, w26
  41d6f8:	csel	w26, w0, w26, hi  // hi = pmore
  41d6fc:	cbz	w8, 41d714 <update_goal_chain@@Base+0x910>
  41d700:	ldr	x8, [x21, #16]
  41d704:	ldr	w9, [x8, #136]
  41d708:	and	w9, w9, #0xfffeffff
  41d70c:	orr	w9, w9, w23
  41d710:	str	w9, [x8, #136]
  41d714:	ldr	x0, [x21, #16]
  41d718:	ldrh	w9, [x21, #32]
  41d71c:	ldr	w10, [sp, #36]
  41d720:	ldr	x8, [x0, #72]
  41d724:	tst	w9, #0x200
  41d728:	csel	w20, w10, w20, eq  // eq = none
  41d72c:	cbz	x8, 41d740 <update_goal_chain@@Base+0x93c>
  41d730:	mov	x0, x8
  41d734:	ldr	x8, [x8, #72]
  41d738:	cbnz	x8, 41d730 <update_goal_chain@@Base+0x92c>
  41d73c:	str	x0, [x21, #16]
  41d740:	ldr	x8, [x0, #104]
  41d744:	cmp	x8, #0x0
  41d748:	csel	x8, x0, x8, eq  // eq = none
  41d74c:	ldr	w10, [x8, #136]
  41d750:	ldr	x8, [x8, #56]
  41d754:	ubfx	w10, w10, #2, #2
  41d758:	sub	w10, w10, #0x1
  41d75c:	cmp	w10, #0x2
  41d760:	cset	w10, cc  // cc = lo, ul, last
  41d764:	orr	w25, w25, w10
  41d768:	cbnz	x8, 41d74c <update_goal_chain@@Base+0x948>
  41d76c:	cbz	w26, 41d77c <update_goal_chain@@Base+0x978>
  41d770:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41d774:	ldr	w8, [x8, #28]
  41d778:	cbz	w8, 41d7cc <update_goal_chain@@Base+0x9c8>
  41d77c:	cbnz	w25, 41d7b8 <update_goal_chain@@Base+0x9b4>
  41d780:	ldr	x8, [x0, #112]
  41d784:	cbnz	x8, 41d798 <update_goal_chain@@Base+0x994>
  41d788:	mov	w1, #0x1                   	// #1
  41d78c:	bl	41e0cc <f_mtime@@Base>
  41d790:	ldrh	w9, [x21, #32]
  41d794:	mov	x8, x0
  41d798:	cmp	x8, x22
  41d79c:	ccmp	x22, #0x1, #0x4, eq  // eq = none
  41d7a0:	mov	w8, #0x100                 	// #256
  41d7a4:	csel	w8, w8, wzr, eq  // eq = none
  41d7a8:	and	w9, w9, #0xfffffeff
  41d7ac:	mov	w25, wzr
  41d7b0:	orr	w8, w8, w9
  41d7b4:	strh	w8, [x21, #32]
  41d7b8:	mov	x23, x21
  41d7bc:	b	41d7c4 <update_goal_chain@@Base+0x9c0>
  41d7c0:	str	x8, [x27, #24]
  41d7c4:	ldr	x21, [x21]
  41d7c8:	cbnz	x21, 41d5e0 <update_goal_chain@@Base+0x7dc>
  41d7cc:	cbz	x28, 41d7d8 <update_goal_chain@@Base+0x9d4>
  41d7d0:	ldr	x8, [x28, #16]
  41d7d4:	b	41d5d0 <update_goal_chain@@Base+0x7cc>
  41d7d8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d7dc:	ldr	w8, [x8, #3296]
  41d7e0:	orr	w8, w8, w20
  41d7e4:	cbz	w8, 41d9c4 <update_goal_chain@@Base+0xbc0>
  41d7e8:	ldr	x21, [x27, #24]
  41d7ec:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  41d7f0:	cbz	x21, 41d9c8 <update_goal_chain@@Base+0xbc4>
  41d7f4:	ldr	x8, [x21, #16]
  41d7f8:	ldrb	w9, [x8, #137]
  41d7fc:	tbz	w9, #6, 41d958 <update_goal_chain@@Base+0xb54>
  41d800:	ldr	x22, [x8, #112]
  41d804:	cbnz	x22, 41d81c <update_goal_chain@@Base+0xa18>
  41d808:	mov	w1, #0x1                   	// #1
  41d80c:	mov	x0, x8
  41d810:	bl	41e0cc <f_mtime@@Base>
  41d814:	ldr	x8, [x21, #16]
  41d818:	mov	x22, x0
  41d81c:	ldr	x9, [x8, #72]
  41d820:	cbz	x9, 41d834 <update_goal_chain@@Base+0xa30>
  41d824:	mov	x8, x9
  41d828:	ldr	x9, [x9, #72]
  41d82c:	cbnz	x9, 41d824 <update_goal_chain@@Base+0xa20>
  41d830:	str	x8, [x21, #16]
  41d834:	str	x27, [x8, #96]
  41d838:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41d83c:	ldr	w9, [x9, #3300]
  41d840:	cbz	w9, 41d864 <update_goal_chain@@Base+0xa60>
  41d844:	ldr	w10, [x27, #136]
  41d848:	ldr	w9, [x8, #136]
  41d84c:	lsr	w10, w10, #16
  41d850:	and	w23, w9, #0x10000
  41d854:	bfi	w9, w10, #16, #1
  41d858:	str	w9, [x8, #136]
  41d85c:	ldr	x8, [x21, #16]
  41d860:	b	41d868 <update_goal_chain@@Base+0xa64>
  41d864:	mov	w23, wzr
  41d868:	ldr	w1, [sp, #32]
  41d86c:	mov	x0, x8
  41d870:	str	wzr, [x8, #128]
  41d874:	bl	41d1ec <update_goal_chain@@Base+0x3e8>
  41d878:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41d87c:	ldr	w8, [x8, #3300]
  41d880:	cmp	w0, w26
  41d884:	csel	w26, w0, w26, hi  // hi = pmore
  41d888:	cbz	w8, 41d8a0 <update_goal_chain@@Base+0xa9c>
  41d88c:	ldr	x8, [x21, #16]
  41d890:	ldr	w9, [x8, #136]
  41d894:	and	w9, w9, #0xfffeffff
  41d898:	orr	w9, w9, w23
  41d89c:	str	w9, [x8, #136]
  41d8a0:	ldr	x0, [x21, #16]
  41d8a4:	ldr	x8, [x0, #72]
  41d8a8:	cbz	x8, 41d8bc <update_goal_chain@@Base+0xab8>
  41d8ac:	mov	x0, x8
  41d8b0:	ldr	x8, [x8, #72]
  41d8b4:	cbnz	x8, 41d8ac <update_goal_chain@@Base+0xaa8>
  41d8b8:	str	x0, [x21, #16]
  41d8bc:	ldr	x8, [x0, #104]
  41d8c0:	cmp	x8, #0x0
  41d8c4:	csel	x8, x0, x8, eq  // eq = none
  41d8c8:	ldr	w9, [x8, #136]
  41d8cc:	ldr	x8, [x8, #56]
  41d8d0:	ubfx	w9, w9, #2, #2
  41d8d4:	sub	w9, w9, #0x1
  41d8d8:	cmp	w9, #0x2
  41d8dc:	cset	w9, cc  // cc = lo, ul, last
  41d8e0:	orr	w25, w25, w9
  41d8e4:	cbnz	x8, 41d8c8 <update_goal_chain@@Base+0xac4>
  41d8e8:	cbz	w26, 41d8f8 <update_goal_chain@@Base+0xaf4>
  41d8ec:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41d8f0:	ldr	w8, [x8, #28]
  41d8f4:	cbz	w8, 41d9c8 <update_goal_chain@@Base+0xbc4>
  41d8f8:	cbnz	w25, 41d958 <update_goal_chain@@Base+0xb54>
  41d8fc:	ldrb	w8, [x27, #137]
  41d900:	tbz	w8, #5, 41d918 <update_goal_chain@@Base+0xb14>
  41d904:	ldr	x8, [x27, #32]
  41d908:	cbz	x8, 41d918 <update_goal_chain@@Base+0xb14>
  41d90c:	mov	x9, x21
  41d910:	ldrh	w10, [x9, #32]!
  41d914:	b	41d944 <update_goal_chain@@Base+0xb40>
  41d918:	ldr	x8, [x0, #112]
  41d91c:	cbnz	x8, 41d92c <update_goal_chain@@Base+0xb28>
  41d920:	mov	w1, #0x1                   	// #1
  41d924:	bl	41e0cc <f_mtime@@Base>
  41d928:	mov	x8, x0
  41d92c:	mov	x9, x21
  41d930:	ldrh	w10, [x9, #32]!
  41d934:	cmp	x8, x22
  41d938:	b.ne	41d944 <update_goal_chain@@Base+0xb40>  // b.any
  41d93c:	mov	w8, wzr
  41d940:	b	41d948 <update_goal_chain@@Base+0xb44>
  41d944:	mov	w8, #0x100                 	// #256
  41d948:	and	w10, w10, #0xfffffeff
  41d94c:	mov	w25, wzr
  41d950:	orr	w8, w8, w10
  41d954:	strh	w8, [x9]
  41d958:	ldr	x21, [x21]
  41d95c:	cbnz	x21, 41d7f4 <update_goal_chain@@Base+0x9f0>
  41d960:	b	41d9c8 <update_goal_chain@@Base+0xbc4>
  41d964:	tbnz	w8, #11, 41d5ac <update_goal_chain@@Base+0x7a8>
  41d968:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41d96c:	ldr	x8, [x8, #64]
  41d970:	cbz	x8, 41d5ac <update_goal_chain@@Base+0x7a8>
  41d974:	ldr	x9, [x8, #32]
  41d978:	cbz	x9, 41d5ac <update_goal_chain@@Base+0x7a8>
  41d97c:	ldrb	w9, [x28, #3236]
  41d980:	tbz	w9, #3, 41d9b8 <update_goal_chain@@Base+0xbb4>
  41d984:	ldr	w0, [sp, #32]
  41d988:	bl	4176ac <print_spaces@@Base>
  41d98c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41d990:	mov	w2, #0x5                   	// #5
  41d994:	mov	x0, xzr
  41d998:	add	x1, x1, #0x2a5
  41d99c:	bl	406e10 <dcgettext@plt>
  41d9a0:	ldr	x1, [x27]
  41d9a4:	bl	406ea0 <printf@plt>
  41d9a8:	ldr	x0, [x21, #2512]
  41d9ac:	bl	406d40 <fflush@plt>
  41d9b0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41d9b4:	ldr	x8, [x8, #64]
  41d9b8:	ldr	x8, [x8, #32]
  41d9bc:	str	x8, [x27, #32]
  41d9c0:	b	41d5ac <update_goal_chain@@Base+0x7a8>
  41d9c4:	adrp	x28, 43b000 <memcpy@GLIBC_2.17>
  41d9c8:	ldr	x8, [x27, #104]
  41d9cc:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41d9d0:	cmp	x8, #0x0
  41d9d4:	csel	x8, x27, x8, eq  // eq = none
  41d9d8:	ldr	w9, [x8, #136]
  41d9dc:	and	w9, w9, #0xfffffdff
  41d9e0:	str	w9, [x8, #136]
  41d9e4:	ldr	x8, [x19, #104]
  41d9e8:	cmp	x8, #0x0
  41d9ec:	csel	x8, x19, x8, eq  // eq = none
  41d9f0:	ldr	w9, [x8, #136]
  41d9f4:	and	w9, w9, #0xfffffdff
  41d9f8:	str	w9, [x8, #136]
  41d9fc:	ldrb	w8, [x28, #3236]
  41da00:	tbz	w8, #1, 41da30 <update_goal_chain@@Base+0xc2c>
  41da04:	ldr	w0, [sp, #32]
  41da08:	bl	4176ac <print_spaces@@Base>
  41da0c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41da10:	mov	w2, #0x5                   	// #5
  41da14:	mov	x0, xzr
  41da18:	add	x1, x1, #0x2eb
  41da1c:	bl	406e10 <dcgettext@plt>
  41da20:	ldr	x1, [x27]
  41da24:	bl	406ea0 <printf@plt>
  41da28:	ldr	x0, [x21, #2512]
  41da2c:	bl	406d40 <fflush@plt>
  41da30:	cbz	w25, 41da50 <update_goal_chain@@Base+0xc4c>
  41da34:	mov	w1, #0x1                   	// #1
  41da38:	mov	x0, x27
  41da3c:	bl	40b608 <set_command_state@@Base>
  41da40:	ldrb	w8, [x28, #3236]
  41da44:	tbnz	w8, #1, 41db1c <update_goal_chain@@Base+0xd18>
  41da48:	ldr	w23, [sp, #16]
  41da4c:	b	41db4c <update_goal_chain@@Base+0xd48>
  41da50:	cbz	w26, 41dba0 <update_goal_chain@@Base+0xd9c>
  41da54:	ldr	w8, [x27, #136]
  41da58:	and	w9, w26, #0x3
  41da5c:	cmp	w26, #0x1
  41da60:	mov	w10, #0x3                   	// #3
  41da64:	csel	w9, w10, w9, eq  // eq = none
  41da68:	and	w8, w8, #0xfffffffc
  41da6c:	orr	w8, w8, w9
  41da70:	mov	x0, x27
  41da74:	str	w8, [x27, #136]
  41da78:	bl	41e888 <notice_finished_file@@Base>
  41da7c:	ldrb	w8, [x28, #3236]
  41da80:	ldr	w23, [sp, #16]
  41da84:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41da88:	tbz	w8, #1, 41dab8 <update_goal_chain@@Base+0xcb4>
  41da8c:	mov	w0, w23
  41da90:	bl	4176ac <print_spaces@@Base>
  41da94:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41da98:	mov	w2, #0x5                   	// #5
  41da9c:	mov	x0, xzr
  41daa0:	add	x1, x1, #0x343
  41daa4:	bl	406e10 <dcgettext@plt>
  41daa8:	ldr	x1, [x27]
  41daac:	bl	406ea0 <printf@plt>
  41dab0:	ldr	x0, [x21, #2512]
  41dab4:	bl	406d40 <fflush@plt>
  41dab8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41dabc:	ldr	w8, [x8, #28]
  41dac0:	ldr	w25, [sp, #20]
  41dac4:	cbz	w8, 41db58 <update_goal_chain@@Base+0xd54>
  41dac8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41dacc:	ldr	w8, [x8, #24]
  41dad0:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41dad4:	ldr	w9, [x9, #3260]
  41dad8:	orr	w8, w8, w23
  41dadc:	orr	w8, w8, w9
  41dae0:	cbnz	w8, 41db58 <update_goal_chain@@Base+0xd54>
  41dae4:	ldr	x0, [x27]
  41dae8:	bl	406790 <strlen@plt>
  41daec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41daf0:	mov	x22, x0
  41daf4:	mov	w2, #0x5                   	// #5
  41daf8:	mov	x0, xzr
  41dafc:	add	x1, x1, #0x363
  41db00:	bl	406e10 <dcgettext@plt>
  41db04:	ldr	x3, [x27]
  41db08:	mov	x2, x0
  41db0c:	mov	x0, xzr
  41db10:	mov	x1, x22
  41db14:	bl	418744 <error@@Base>
  41db18:	b	41db58 <update_goal_chain@@Base+0xd54>
  41db1c:	ldr	w23, [sp, #16]
  41db20:	mov	w0, w23
  41db24:	bl	4176ac <print_spaces@@Base>
  41db28:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41db2c:	mov	w2, #0x5                   	// #5
  41db30:	mov	x0, xzr
  41db34:	add	x1, x1, #0x318
  41db38:	bl	406e10 <dcgettext@plt>
  41db3c:	ldr	x1, [x27]
  41db40:	bl	406ea0 <printf@plt>
  41db44:	ldr	x0, [x21, #2512]
  41db48:	bl	406d40 <fflush@plt>
  41db4c:	mov	w26, wzr
  41db50:	ldr	w25, [sp, #20]
  41db54:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41db58:	mov	x8, x19
  41db5c:	ldr	x19, [x19, #72]
  41db60:	cbnz	x19, 41db58 <update_goal_chain@@Base+0xd54>
  41db64:	cbz	w26, 41db74 <update_goal_chain@@Base+0xd70>
  41db68:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41db6c:	ldr	w9, [x9, #28]
  41db70:	cbz	w9, 41e0a8 <update_goal_chain@@Base+0x12a4>
  41db74:	ldr	w9, [x8, #136]
  41db78:	ubfx	w9, w9, #2, #2
  41db7c:	sub	w9, w9, #0x1
  41db80:	cmp	w9, #0x2
  41db84:	b.cc	41e09c <update_goal_chain@@Base+0x1298>  // b.lo, b.ul, b.last
  41db88:	ldr	x19, [x8, #56]
  41db8c:	cmp	w26, w25
  41db90:	csel	w25, w26, w25, hi  // hi = pmore
  41db94:	cbz	x19, 41e0a4 <update_goal_chain@@Base+0x12a0>
  41db98:	ldr	w8, [x20, #1640]
  41db9c:	b	41d2c0 <update_goal_chain@@Base+0x4bc>
  41dba0:	ldr	w8, [x27, #136]
  41dba4:	and	w8, w8, #0xc
  41dba8:	cmp	w8, #0x4
  41dbac:	b.ne	41dbbc <update_goal_chain@@Base+0xdb8>  // b.any
  41dbb0:	mov	x0, x27
  41dbb4:	mov	w1, wzr
  41dbb8:	bl	40b608 <set_command_state@@Base>
  41dbbc:	ldr	x24, [x27, #24]
  41dbc0:	ldr	x26, [sp, #8]
  41dbc4:	mov	w21, wzr
  41dbc8:	cbz	x24, 41dd04 <update_goal_chain@@Base+0xf00>
  41dbcc:	ldp	w23, w25, [sp, #16]
  41dbd0:	ldr	x8, [x24, #16]
  41dbd4:	ldr	x0, [x8, #112]
  41dbd8:	cbnz	x0, 41dbec <update_goal_chain@@Base+0xde8>
  41dbdc:	mov	w1, #0x1                   	// #1
  41dbe0:	mov	x0, x8
  41dbe4:	bl	41e0cc <f_mtime@@Base>
  41dbe8:	ldr	x8, [x24, #16]
  41dbec:	ldr	x9, [x8, #72]
  41dbf0:	cbz	x9, 41dc04 <update_goal_chain@@Base+0xe00>
  41dbf4:	mov	x8, x9
  41dbf8:	ldr	x9, [x9, #72]
  41dbfc:	cbnz	x9, 41dbf4 <update_goal_chain@@Base+0xdf0>
  41dc00:	str	x8, [x24, #16]
  41dc04:	ldrh	w9, [x24, #32]
  41dc08:	tbnz	w9, #9, 41dc2c <update_goal_chain@@Base+0xe28>
  41dc0c:	cmp	x0, #0x1
  41dc10:	b.ne	41dc20 <update_goal_chain@@Base+0xe1c>  // b.any
  41dc14:	ldrb	w8, [x8, #137]
  41dc18:	tst	w8, #0x40
  41dc1c:	csinc	w20, w20, wzr, ne  // ne = any
  41dc20:	ubfx	w8, w9, #8, #1
  41dc24:	orr	w21, w21, w8
  41dc28:	b	41dc30 <update_goal_chain@@Base+0xe2c>
  41dc2c:	ubfx	w8, w9, #8, #1
  41dc30:	ldr	x10, [sp, #24]
  41dc34:	cmp	x0, x10
  41dc38:	cset	w10, hi  // hi = pmore
  41dc3c:	cmp	x26, #0x1
  41dc40:	cset	w11, eq  // eq = none
  41dc44:	orr	w10, w11, w10
  41dc48:	orr	w10, w8, w10
  41dc4c:	and	w8, w9, #0xfffffeff
  41dc50:	orr	w8, w8, w10, lsl #8
  41dc54:	strh	w8, [x24, #32]
  41dc58:	b.eq	41dcf8 <update_goal_chain@@Base+0xef4>  // b.none
  41dc5c:	ldr	w8, [x28, #3236]
  41dc60:	tst	w8, #0x3
  41dc64:	b.eq	41dcf8 <update_goal_chain@@Base+0xef4>  // b.none
  41dc68:	tbnz	w9, #9, 41dc84 <update_goal_chain@@Base+0xe80>
  41dc6c:	cmp	x0, #0x1
  41dc70:	b.ne	41dc94 <update_goal_chain@@Base+0xe90>  // b.any
  41dc74:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dc78:	add	x1, x1, #0x3bf
  41dc7c:	tbnz	w8, #0, 41dcb4 <update_goal_chain@@Base+0xeb0>
  41dc80:	b	41dcf8 <update_goal_chain@@Base+0xef4>
  41dc84:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dc88:	add	x1, x1, #0x38d
  41dc8c:	tbnz	w8, #1, 41dcb4 <update_goal_chain@@Base+0xeb0>
  41dc90:	b	41dcf8 <update_goal_chain@@Base+0xef4>
  41dc94:	cbz	w10, 41dca8 <update_goal_chain@@Base+0xea4>
  41dc98:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dc9c:	add	x1, x1, #0x3f1
  41dca0:	tbnz	w8, #0, 41dcb4 <update_goal_chain@@Base+0xeb0>
  41dca4:	b	41dcf8 <update_goal_chain@@Base+0xef4>
  41dca8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dcac:	add	x1, x1, #0x41f
  41dcb0:	tbz	w8, #1, 41dcf8 <update_goal_chain@@Base+0xef4>
  41dcb4:	mov	w2, #0x5                   	// #5
  41dcb8:	mov	x0, xzr
  41dcbc:	bl	406e10 <dcgettext@plt>
  41dcc0:	cbz	x0, 41dcf8 <update_goal_chain@@Base+0xef4>
  41dcc4:	mov	x22, x0
  41dcc8:	ldr	w0, [sp, #32]
  41dccc:	bl	4176ac <print_spaces@@Base>
  41dcd0:	ldr	x1, [x24, #8]
  41dcd4:	cbnz	x1, 41dce0 <update_goal_chain@@Base+0xedc>
  41dcd8:	ldr	x8, [x24, #16]
  41dcdc:	ldr	x1, [x8]
  41dce0:	ldr	x2, [x27]
  41dce4:	mov	x0, x22
  41dce8:	bl	406ea0 <printf@plt>
  41dcec:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41dcf0:	ldr	x0, [x8, #2512]
  41dcf4:	bl	406d40 <fflush@plt>
  41dcf8:	ldr	x24, [x24]
  41dcfc:	cbnz	x24, 41dbd0 <update_goal_chain@@Base+0xdcc>
  41dd00:	b	41dd08 <update_goal_chain@@Base+0xf04>
  41dd04:	ldp	w23, w25, [sp, #16]
  41dd08:	ldr	x8, [x27, #104]
  41dd0c:	cbz	x8, 41dd18 <update_goal_chain@@Base+0xf14>
  41dd10:	ldr	x8, [x27, #24]
  41dd14:	cbz	x8, 41de68 <update_goal_chain@@Base+0x1064>
  41dd18:	cmp	x26, #0x1
  41dd1c:	b.ne	41dd60 <update_goal_chain@@Base+0xf5c>  // b.any
  41dd20:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41dd24:	cbnz	w20, 41dea0 <update_goal_chain@@Base+0x109c>
  41dd28:	ldr	x8, [x27, #32]
  41dd2c:	cbz	x8, 41ddb8 <update_goal_chain@@Base+0xfb4>
  41dd30:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41dd34:	ldr	w8, [x8, #3296]
  41dd38:	cbz	w8, 41ddb8 <update_goal_chain@@Base+0xfb4>
  41dd3c:	ldrb	w8, [x28, #3236]
  41dd40:	tbz	w8, #1, 41dea0 <update_goal_chain@@Base+0x109c>
  41dd44:	mov	w0, w23
  41dd48:	bl	4176ac <print_spaces@@Base>
  41dd4c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dd50:	mov	w2, #0x5                   	// #5
  41dd54:	mov	x0, xzr
  41dd58:	add	x1, x1, #0x4bf
  41dd5c:	b	41de8c <update_goal_chain@@Base+0x1088>
  41dd60:	cbnz	w21, 41dd20 <update_goal_chain@@Base+0xf1c>
  41dd64:	ldr	w8, [x27, #136]
  41dd68:	tbz	w8, #11, 41dd20 <update_goal_chain@@Base+0xf1c>
  41dd6c:	ldr	x8, [x27, #32]
  41dd70:	cbnz	x8, 41dd20 <update_goal_chain@@Base+0xf1c>
  41dd74:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41dd78:	ldr	w8, [x8, #3296]
  41dd7c:	cbnz	w8, 41dd20 <update_goal_chain@@Base+0xf1c>
  41dd80:	ldrb	w8, [x28, #3236]
  41dd84:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41dd88:	tbz	w8, #1, 41ddb8 <update_goal_chain@@Base+0xfb4>
  41dd8c:	mov	w0, w23
  41dd90:	bl	4176ac <print_spaces@@Base>
  41dd94:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dd98:	mov	w2, #0x5                   	// #5
  41dd9c:	mov	x0, xzr
  41dda0:	add	x1, x1, #0x484
  41dda4:	bl	406e10 <dcgettext@plt>
  41dda8:	ldr	x1, [x27]
  41ddac:	bl	406ea0 <printf@plt>
  41ddb0:	ldr	x0, [x21, #2512]
  41ddb4:	bl	406d40 <fflush@plt>
  41ddb8:	ldrb	w8, [x28, #3236]
  41ddbc:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41ddc0:	tbz	w8, #1, 41de48 <update_goal_chain@@Base+0x1044>
  41ddc4:	mov	w0, w23
  41ddc8:	bl	4176ac <print_spaces@@Base>
  41ddcc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41ddd0:	mov	w2, #0x5                   	// #5
  41ddd4:	mov	x0, xzr
  41ddd8:	add	x1, x1, #0x4e5
  41dddc:	bl	406e10 <dcgettext@plt>
  41dde0:	ldr	x1, [x27]
  41dde4:	bl	406ea0 <printf@plt>
  41dde8:	ldp	x8, x9, [x27]
  41ddec:	cmp	x8, x9
  41ddf0:	b.eq	41de34 <update_goal_chain@@Base+0x1030>  // b.none
  41ddf4:	ldrb	w10, [x8]
  41ddf8:	ldrb	w11, [x9]
  41ddfc:	cmp	w10, w11
  41de00:	b.ne	41de18 <update_goal_chain@@Base+0x1014>  // b.any
  41de04:	cbz	w10, 41de34 <update_goal_chain@@Base+0x1030>
  41de08:	add	x0, x8, #0x1
  41de0c:	add	x1, x9, #0x1
  41de10:	bl	406c70 <strcmp@plt>
  41de14:	cbz	w0, 41de34 <update_goal_chain@@Base+0x1030>
  41de18:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41de1c:	mov	w2, #0x5                   	// #5
  41de20:	mov	x0, xzr
  41de24:	add	x1, x1, #0x503
  41de28:	bl	406e10 <dcgettext@plt>
  41de2c:	ldr	x1, [x27, #8]
  41de30:	bl	406ea0 <printf@plt>
  41de34:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  41de38:	add	x0, x0, #0x6fe
  41de3c:	bl	406c00 <puts@plt>
  41de40:	ldr	x0, [x21, #2512]
  41de44:	bl	406d40 <fflush@plt>
  41de48:	mov	x0, x27
  41de4c:	bl	41e888 <notice_finished_file@@Base>
  41de50:	ldr	x8, [x27, #8]
  41de54:	mov	w26, wzr
  41de58:	str	x8, [x27]
  41de5c:	ldr	x27, [x27, #56]
  41de60:	cbnz	x27, 41de50 <update_goal_chain@@Base+0x104c>
  41de64:	b	41db58 <update_goal_chain@@Base+0xd54>
  41de68:	ldrb	w8, [x28, #3236]
  41de6c:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  41de70:	tbz	w8, #0, 41dea0 <update_goal_chain@@Base+0x109c>
  41de74:	mov	w0, w23
  41de78:	bl	4176ac <print_spaces@@Base>
  41de7c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41de80:	mov	w2, #0x5                   	// #5
  41de84:	mov	x0, xzr
  41de88:	add	x1, x1, #0x44d
  41de8c:	bl	406e10 <dcgettext@plt>
  41de90:	ldr	x1, [x27]
  41de94:	bl	406ea0 <printf@plt>
  41de98:	ldr	x0, [x21, #2512]
  41de9c:	bl	406d40 <fflush@plt>
  41dea0:	ldrb	w8, [x28, #3236]
  41dea4:	tbz	w8, #0, 41ded4 <update_goal_chain@@Base+0x10d0>
  41dea8:	mov	w0, w23
  41deac:	bl	4176ac <print_spaces@@Base>
  41deb0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41deb4:	mov	w2, #0x5                   	// #5
  41deb8:	mov	x0, xzr
  41debc:	add	x1, x1, #0x51b
  41dec0:	bl	406e10 <dcgettext@plt>
  41dec4:	ldr	x1, [x27]
  41dec8:	bl	406ea0 <printf@plt>
  41decc:	ldr	x0, [x21, #2512]
  41ded0:	bl	406d40 <fflush@plt>
  41ded4:	ldp	x8, x9, [x27]
  41ded8:	cmp	x8, x9
  41dedc:	b.eq	41df3c <update_goal_chain@@Base+0x1138>  // b.none
  41dee0:	ldrb	w10, [x8]
  41dee4:	ldrb	w11, [x9]
  41dee8:	cmp	w10, w11
  41deec:	b.ne	41df04 <update_goal_chain@@Base+0x1100>  // b.any
  41def0:	cbz	w10, 41df3c <update_goal_chain@@Base+0x1138>
  41def4:	add	x0, x8, #0x1
  41def8:	add	x1, x9, #0x1
  41defc:	bl	406c70 <strcmp@plt>
  41df00:	cbz	w0, 41df3c <update_goal_chain@@Base+0x1138>
  41df04:	ldrb	w8, [x28, #3236]
  41df08:	tbz	w8, #0, 41df30 <update_goal_chain@@Base+0x112c>
  41df0c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41df10:	mov	w2, #0x5                   	// #5
  41df14:	mov	x0, xzr
  41df18:	add	x1, x1, #0x535
  41df1c:	bl	406e10 <dcgettext@plt>
  41df20:	ldr	x1, [x27, #8]
  41df24:	bl	406ea0 <printf@plt>
  41df28:	ldr	x0, [x21, #2512]
  41df2c:	bl	406d40 <fflush@plt>
  41df30:	ldr	w8, [x27, #136]
  41df34:	orr	w8, w8, #0x20000
  41df38:	str	w8, [x27, #136]
  41df3c:	ldr	x0, [x27, #32]
  41df40:	cbz	x0, 41df78 <update_goal_chain@@Base+0x1174>
  41df44:	bl	4082c0 <chop_commands@@Base>
  41df48:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41df4c:	ldr	w8, [x8, #228]
  41df50:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41df54:	cbz	w8, 41df6c <update_goal_chain@@Base+0x1168>
  41df58:	ldr	x8, [x27, #32]
  41df5c:	ldrb	w8, [x8, #51]
  41df60:	tbnz	w8, #0, 41df6c <update_goal_chain@@Base+0x1168>
  41df64:	ldr	w8, [x27, #136]
  41df68:	b	41dfac <update_goal_chain@@Base+0x11a8>
  41df6c:	mov	x0, x27
  41df70:	bl	408598 <execute_file_commands@@Base>
  41df74:	b	41dfbc <update_goal_chain@@Base+0x11b8>
  41df78:	ldr	w8, [x27, #136]
  41df7c:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  41df80:	tbnz	w8, #13, 41dfac <update_goal_chain@@Base+0x11a8>
  41df84:	tbnz	w8, #11, 41dfac <update_goal_chain@@Base+0x11a8>
  41df88:	tbz	w8, #16, 41df98 <update_goal_chain@@Base+0x1194>
  41df8c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41df90:	ldr	w9, [x9, #3300]
  41df94:	cbnz	w9, 41dfa4 <update_goal_chain@@Base+0x11a0>
  41df98:	mov	x0, x27
  41df9c:	bl	41eef0 <notice_finished_file@@Base+0x668>
  41dfa0:	ldr	w8, [x27, #136]
  41dfa4:	orr	w8, w8, #0x3
  41dfa8:	b	41dfb0 <update_goal_chain@@Base+0x11ac>
  41dfac:	and	w8, w8, #0xfffffffc
  41dfb0:	mov	x0, x27
  41dfb4:	str	w8, [x27, #136]
  41dfb8:	bl	41e888 <notice_finished_file@@Base>
  41dfbc:	ldr	w8, [x27, #136]
  41dfc0:	mvn	w9, w8
  41dfc4:	tst	w9, #0xc
  41dfc8:	b.ne	41e008 <update_goal_chain@@Base+0x1204>  // b.any
  41dfcc:	ands	w8, w8, #0x3
  41dfd0:	b.eq	41e034 <update_goal_chain@@Base+0x1230>  // b.none
  41dfd4:	cmp	w8, #0x2
  41dfd8:	b.eq	41e058 <update_goal_chain@@Base+0x1254>  // b.none
  41dfdc:	cmp	w8, #0x3
  41dfe0:	b.ne	41e08c <update_goal_chain@@Base+0x1288>  // b.any
  41dfe4:	ldrb	w8, [x28, #3236]
  41dfe8:	tbz	w8, #0, 41e08c <update_goal_chain@@Base+0x1288>
  41dfec:	mov	w0, w23
  41dff0:	bl	4176ac <print_spaces@@Base>
  41dff4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41dff8:	mov	w2, #0x5                   	// #5
  41dffc:	mov	x0, xzr
  41e000:	add	x1, x1, #0x570
  41e004:	b	41e078 <update_goal_chain@@Base+0x1274>
  41e008:	ldrb	w8, [x28, #3236]
  41e00c:	tbz	w8, #1, 41d370 <update_goal_chain@@Base+0x56c>
  41e010:	mov	w0, w23
  41e014:	bl	4176ac <print_spaces@@Base>
  41e018:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41e01c:	mov	w2, #0x5                   	// #5
  41e020:	mov	x0, xzr
  41e024:	add	x1, x1, #0x552
  41e028:	bl	406e10 <dcgettext@plt>
  41e02c:	ldr	x1, [x27]
  41e030:	b	41d364 <update_goal_chain@@Base+0x560>
  41e034:	ldrb	w8, [x28, #3236]
  41e038:	tbz	w8, #0, 41e08c <update_goal_chain@@Base+0x1288>
  41e03c:	mov	w0, w23
  41e040:	bl	4176ac <print_spaces@@Base>
  41e044:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41e048:	mov	w2, #0x5                   	// #5
  41e04c:	mov	x0, xzr
  41e050:	add	x1, x1, #0x594
  41e054:	b	41e078 <update_goal_chain@@Base+0x1274>
  41e058:	ldrb	w8, [x28, #3236]
  41e05c:	tbz	w8, #0, 41e08c <update_goal_chain@@Base+0x1288>
  41e060:	mov	w0, w23
  41e064:	bl	4176ac <print_spaces@@Base>
  41e068:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41e06c:	mov	w2, #0x5                   	// #5
  41e070:	mov	x0, xzr
  41e074:	add	x1, x1, #0x5bb
  41e078:	bl	406e10 <dcgettext@plt>
  41e07c:	ldr	x1, [x27]
  41e080:	bl	406ea0 <printf@plt>
  41e084:	ldr	x0, [x21, #2512]
  41e088:	bl	406d40 <fflush@plt>
  41e08c:	ldr	w8, [x27, #136]
  41e090:	orr	w9, w8, #0x400
  41e094:	str	w9, [x27, #136]
  41e098:	b	41d494 <update_goal_chain@@Base+0x690>
  41e09c:	mov	w26, wzr
  41e0a0:	b	41e0a8 <update_goal_chain@@Base+0x12a4>
  41e0a4:	mov	w26, w25
  41e0a8:	mov	w0, w26
  41e0ac:	ldp	x20, x19, [sp, #160]
  41e0b0:	ldp	x22, x21, [sp, #144]
  41e0b4:	ldp	x24, x23, [sp, #128]
  41e0b8:	ldp	x26, x25, [sp, #112]
  41e0bc:	ldp	x28, x27, [sp, #96]
  41e0c0:	ldp	x29, x30, [sp, #80]
  41e0c4:	add	sp, sp, #0xb0
  41e0c8:	ret

000000000041e0cc <f_mtime@@Base>:
  41e0cc:	stp	x29, x30, [sp, #-96]!
  41e0d0:	stp	x28, x27, [sp, #16]
  41e0d4:	stp	x26, x25, [sp, #32]
  41e0d8:	stp	x24, x23, [sp, #48]
  41e0dc:	stp	x22, x21, [sp, #64]
  41e0e0:	stp	x20, x19, [sp, #80]
  41e0e4:	mov	x29, sp
  41e0e8:	sub	sp, sp, #0xb0
  41e0ec:	mov	x19, x0
  41e0f0:	ldr	x0, [x0]
  41e0f4:	mov	w21, w1
  41e0f8:	bl	40706c <ar_name@@Base>
  41e0fc:	cbz	w0, 41e1f8 <f_mtime@@Base+0x12c>
  41e100:	ldr	x0, [x19]
  41e104:	sub	x1, x29, #0x90
  41e108:	sub	x2, x29, #0x10
  41e10c:	bl	40711c <ar_parse_name@@Base>
  41e110:	ldur	x0, [x29, #-144]
  41e114:	bl	40a568 <lookup_file@@Base>
  41e118:	mov	x20, x0
  41e11c:	cbnz	x0, 41e130 <f_mtime@@Base+0x64>
  41e120:	ldur	x0, [x29, #-144]
  41e124:	bl	42016c <strcache_add@@Base>
  41e128:	bl	40a5f4 <enter_file@@Base>
  41e12c:	mov	x20, x0
  41e130:	mov	x0, x20
  41e134:	mov	w1, w21
  41e138:	bl	41e0cc <f_mtime@@Base>
  41e13c:	stur	x0, [x29, #-40]
  41e140:	mov	x25, x20
  41e144:	ldr	x20, [x20, #72]
  41e148:	cbnz	x20, 41e140 <f_mtime@@Base+0x74>
  41e14c:	cbz	w21, 41e1f0 <f_mtime@@Base+0x124>
  41e150:	ldr	x20, [x25, #8]
  41e154:	ldur	x1, [x29, #-144]
  41e158:	mov	x0, x20
  41e15c:	bl	406c70 <strcmp@plt>
  41e160:	cbz	w0, 41e1f0 <f_mtime@@Base+0x124>
  41e164:	mov	x0, x20
  41e168:	bl	406790 <strlen@plt>
  41e16c:	ldur	x21, [x29, #-16]
  41e170:	mov	x22, x0
  41e174:	mov	x0, x21
  41e178:	bl	406790 <strlen@plt>
  41e17c:	add	x8, x22, x0
  41e180:	add	x9, x8, #0x12
  41e184:	and	x9, x9, #0xfffffffffffffff0
  41e188:	mov	x10, sp
  41e18c:	sub	x24, x10, x9
  41e190:	mov	x23, x0
  41e194:	add	x26, x8, x24
  41e198:	mov	sp, x24
  41e19c:	mov	x0, x24
  41e1a0:	mov	x1, x20
  41e1a4:	mov	x2, x22
  41e1a8:	bl	406750 <memcpy@plt>
  41e1ac:	add	x0, x24, x22
  41e1b0:	mov	w8, #0x28                  	// #40
  41e1b4:	strb	w8, [x0], #1
  41e1b8:	mov	x1, x21
  41e1bc:	mov	x2, x23
  41e1c0:	bl	406750 <memcpy@plt>
  41e1c4:	mov	w8, #0x29                  	// #41
  41e1c8:	sturh	w8, [x26, #1]
  41e1cc:	ldp	x20, x21, [x25]
  41e1d0:	mov	x0, x24
  41e1d4:	bl	42016c <strcache_add@@Base>
  41e1d8:	cmp	x20, x21
  41e1dc:	mov	x1, x0
  41e1e0:	mov	x0, x19
  41e1e4:	b.eq	41e2a8 <f_mtime@@Base+0x1dc>  // b.none
  41e1e8:	bl	40a6d4 <rehash_file@@Base>
  41e1ec:	b	41e2ac <f_mtime@@Base+0x1e0>
  41e1f0:	mov	x21, x19
  41e1f4:	b	41e2b8 <f_mtime@@Base+0x1ec>
  41e1f8:	ldr	x0, [x19]
  41e1fc:	bl	41ecec <notice_finished_file@@Base+0x464>
  41e200:	mov	x20, x0
  41e204:	stur	x0, [x29, #-40]
  41e208:	cbz	w21, 41e2a0 <f_mtime@@Base+0x1d4>
  41e20c:	cmp	x20, #0x1
  41e210:	b.ne	41e2a0 <f_mtime@@Base+0x1d4>  // b.any
  41e214:	ldrb	w8, [x19, #138]
  41e218:	tbnz	w8, #1, 41e630 <f_mtime@@Base+0x564>
  41e21c:	ldr	x0, [x19]
  41e220:	sub	x1, x29, #0x28
  41e224:	mov	x2, xzr
  41e228:	mov	x3, xzr
  41e22c:	bl	422a38 <vpath_search@@Base>
  41e230:	mov	x20, x0
  41e234:	cbz	x0, 41e314 <f_mtime@@Base+0x248>
  41e238:	ldur	x8, [x29, #-40]
  41e23c:	cbz	x8, 41e244 <f_mtime@@Base+0x178>
  41e240:	str	x8, [x19, #112]
  41e244:	mov	x0, x20
  41e248:	bl	406790 <strlen@plt>
  41e24c:	ldr	x8, [x19]
  41e250:	mov	x21, x0
  41e254:	mov	x0, x8
  41e258:	bl	406790 <strlen@plt>
  41e25c:	mvn	x8, x0
  41e260:	add	x1, x21, x8
  41e264:	mov	x0, x20
  41e268:	bl	4229b8 <gpath_search@@Base>
  41e26c:	cbz	w0, 41e5d0 <f_mtime@@Base+0x504>
  41e270:	mov	x0, x19
  41e274:	mov	x1, x20
  41e278:	bl	40aaa4 <rename_file@@Base>
  41e27c:	mov	x0, x19
  41e280:	ldr	x19, [x19, #72]
  41e284:	cbnz	x19, 41e27c <f_mtime@@Base+0x1b0>
  41e288:	ldr	x20, [x0, #112]
  41e28c:	cbnz	x20, 41e68c <f_mtime@@Base+0x5c0>
  41e290:	mov	w1, #0x1                   	// #1
  41e294:	bl	41e0cc <f_mtime@@Base>
  41e298:	mov	x20, x0
  41e29c:	b	41e68c <f_mtime@@Base+0x5c0>
  41e2a0:	mov	x21, x19
  41e2a4:	b	41e638 <f_mtime@@Base+0x56c>
  41e2a8:	bl	40aaa4 <rename_file@@Base>
  41e2ac:	mov	x21, x19
  41e2b0:	ldr	x19, [x19, #72]
  41e2b4:	cbnz	x19, 41e2ac <f_mtime@@Base+0x1e0>
  41e2b8:	ldur	x0, [x29, #-144]
  41e2bc:	bl	406cb0 <free@plt>
  41e2c0:	ldr	w8, [x21, #136]
  41e2c4:	orr	w8, w8, #0x80
  41e2c8:	str	w8, [x21, #136]
  41e2cc:	ldur	x8, [x29, #-40]
  41e2d0:	cmp	x8, #0x1
  41e2d4:	b.ne	41e2e0 <f_mtime@@Base+0x214>  // b.any
  41e2d8:	mov	w20, #0x1                   	// #1
  41e2dc:	b	41e68c <f_mtime@@Base+0x5c0>
  41e2e0:	ldr	x0, [x21, #8]
  41e2e4:	bl	407170 <ar_member_date@@Base>
  41e2e8:	cmn	x0, #0x1
  41e2ec:	b.eq	41e308 <f_mtime@@Base+0x23c>  // b.none
  41e2f0:	mov	x1, x0
  41e2f4:	ldr	x0, [x21, #8]
  41e2f8:	mov	x2, xzr
  41e2fc:	bl	40b64c <file_timestamp_cons@@Base>
  41e300:	mov	x20, x0
  41e304:	b	41e30c <f_mtime@@Base+0x240>
  41e308:	mov	w20, #0x1                   	// #1
  41e30c:	stur	x20, [x29, #-40]
  41e310:	b	41e638 <f_mtime@@Base+0x56c>
  41e314:	ldr	x20, [x19]
  41e318:	ldrb	w8, [x20]
  41e31c:	cmp	w8, #0x2d
  41e320:	b.ne	41e630 <f_mtime@@Base+0x564>  // b.any
  41e324:	ldrb	w8, [x20, #1]
  41e328:	cmp	w8, #0x6c
  41e32c:	b.ne	41e630 <f_mtime@@Base+0x564>  // b.any
  41e330:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41e334:	add	x0, x0, #0x6ca
  41e338:	bl	40a2dc <variable_expand@@Base>
  41e33c:	bl	4178d4 <xstrdup@@Base>
  41e340:	mov	x21, x0
  41e344:	add	x0, x20, #0x2
  41e348:	stur	x0, [x29, #-152]
  41e34c:	bl	406790 <strlen@plt>
  41e350:	stur	x0, [x29, #-160]
  41e354:	sub	x0, x29, #0x10
  41e358:	sub	x1, x29, #0x18
  41e35c:	stur	x21, [x29, #-176]
  41e360:	stur	x21, [x29, #-16]
  41e364:	bl	417970 <find_next_token@@Base>
  41e368:	cbz	x0, 41e60c <f_mtime@@Base+0x540>
  41e36c:	adrp	x26, 429000 <_IO_stdin_used@@Base+0x5290>
  41e370:	mov	x28, x0
  41e374:	mov	x20, xzr
  41e378:	mov	w24, wzr
  41e37c:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  41e380:	add	x26, x26, #0x705
  41e384:	stur	wzr, [x29, #-164]
  41e388:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  41e38c:	add	x0, x0, #0x5eb
  41e390:	bl	40a2dc <variable_expand@@Base>
  41e394:	ldur	x8, [x29, #-24]
  41e398:	mov	x27, x0
  41e39c:	mov	x0, x28
  41e3a0:	ldrb	w23, [x28, x8]
  41e3a4:	strb	wzr, [x28, x8]
  41e3a8:	bl	41ab64 <find_percent@@Base>
  41e3ac:	cbz	x0, 41e440 <f_mtime@@Base+0x374>
  41e3b0:	sub	x25, x0, x28
  41e3b4:	mov	x21, x0
  41e3b8:	mov	x0, x27
  41e3bc:	mov	x1, x28
  41e3c0:	mov	x2, x25
  41e3c4:	bl	4099c4 <variable_buffer_output@@Base>
  41e3c8:	ldp	x2, x1, [x29, #-160]
  41e3cc:	bl	4099c4 <variable_buffer_output@@Base>
  41e3d0:	ldur	x8, [x29, #-24]
  41e3d4:	add	x1, x21, #0x1
  41e3d8:	sub	x2, x8, x25
  41e3dc:	bl	4099c4 <variable_buffer_output@@Base>
  41e3e0:	ldur	x8, [x29, #-24]
  41e3e4:	mov	x0, x27
  41e3e8:	strb	w23, [x28, x8]
  41e3ec:	bl	41ecec <notice_finished_file@@Base+0x464>
  41e3f0:	cmp	x0, #0x1
  41e3f4:	stur	x0, [x29, #-144]
  41e3f8:	b.ne	41e614 <f_mtime@@Base+0x548>  // b.any
  41e3fc:	sub	x1, x29, #0x90
  41e400:	sub	x2, x29, #0x1c
  41e404:	sub	x3, x29, #0x20
  41e408:	mov	x0, x27
  41e40c:	bl	422a38 <vpath_search@@Base>
  41e410:	cbz	x0, 41e480 <f_mtime@@Base+0x3b4>
  41e414:	ldur	w9, [x29, #-28]
  41e418:	cbz	x20, 41e488 <f_mtime@@Base+0x3bc>
  41e41c:	cmp	w9, w24
  41e420:	b.cc	41e488 <f_mtime@@Base+0x3bc>  // b.lo, b.ul, b.last
  41e424:	adrp	x28, 43e000 <stdio_traced@@Base+0x1a38>
  41e428:	b.ne	41e4a4 <f_mtime@@Base+0x3d8>  // b.any
  41e42c:	ldur	w8, [x29, #-32]
  41e430:	ldur	w9, [x29, #-164]
  41e434:	cmp	w8, w9
  41e438:	b.cc	41e494 <f_mtime@@Base+0x3c8>  // b.lo, b.ul, b.last
  41e43c:	b	41e4a4 <f_mtime@@Base+0x3d8>
  41e440:	mov	x0, x28
  41e444:	bl	406790 <strlen@plt>
  41e448:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41e44c:	mov	x21, x0
  41e450:	mov	w2, #0x5                   	// #5
  41e454:	mov	x0, xzr
  41e458:	add	x1, x1, #0x6da
  41e45c:	bl	406e10 <dcgettext@plt>
  41e460:	mov	x2, x0
  41e464:	mov	x0, xzr
  41e468:	mov	x1, x21
  41e46c:	mov	x3, x28
  41e470:	bl	418744 <error@@Base>
  41e474:	ldur	x8, [x29, #-24]
  41e478:	strb	w23, [x28, x8]
  41e47c:	b	41e5b8 <f_mtime@@Base+0x4ec>
  41e480:	adrp	x28, 43e000 <stdio_traced@@Base+0x1a38>
  41e484:	b	41e4a4 <f_mtime@@Base+0x3d8>
  41e488:	ldur	w8, [x29, #-32]
  41e48c:	mov	w24, w9
  41e490:	adrp	x28, 43e000 <stdio_traced@@Base+0x1a38>
  41e494:	ldur	x9, [x29, #-144]
  41e498:	mov	x20, x0
  41e49c:	stur	w8, [x29, #-164]
  41e4a0:	stur	x9, [x29, #-40]
  41e4a4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41e4a8:	ldr	x21, [x8, #1672]
  41e4ac:	cbz	x21, 41e4e4 <f_mtime@@Base+0x418>
  41e4b0:	mov	x0, x27
  41e4b4:	bl	406790 <strlen@plt>
  41e4b8:	cmp	x21, x0
  41e4bc:	b.cs	41e548 <f_mtime@@Base+0x47c>  // b.hs, b.nlast
  41e4c0:	ldr	x9, [x28, #1680]
  41e4c4:	ldr	x8, [x22, #1664]
  41e4c8:	adrp	x10, 43e000 <stdio_traced@@Base+0x1a38>
  41e4cc:	str	x0, [x10, #1672]
  41e4d0:	add	x9, x0, x9
  41e4d4:	add	x1, x9, #0x2
  41e4d8:	mov	x0, x8
  41e4dc:	bl	417854 <xrealloc@@Base>
  41e4e0:	b	41e544 <f_mtime@@Base+0x478>
  41e4e4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41e4e8:	ldr	w23, [x8, #1688]
  41e4ec:	ldr	x21, [x28, #1680]
  41e4f0:	adrp	x25, 429000 <_IO_stdin_used@@Base+0x5290>
  41e4f4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41e4f8:	add	x25, x25, #0x718
  41e4fc:	add	x0, x0, #0x6c5
  41e500:	bl	406790 <strlen@plt>
  41e504:	cmp	x0, x21
  41e508:	b.ls	41e514 <f_mtime@@Base+0x448>  // b.plast
  41e50c:	mov	x21, x0
  41e510:	str	x0, [x28, #1680]
  41e514:	ldr	x0, [x25], #8
  41e518:	cbnz	x0, 41e500 <f_mtime@@Base+0x434>
  41e51c:	add	w8, w23, #0x3
  41e520:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  41e524:	mov	x0, x27
  41e528:	str	w8, [x9, #1688]
  41e52c:	bl	406790 <strlen@plt>
  41e530:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41e534:	str	x0, [x8, #1672]
  41e538:	add	x8, x21, x0
  41e53c:	add	x0, x8, #0x2
  41e540:	bl	417888 <xmalloc@@Base>
  41e544:	str	x0, [x22, #1664]
  41e548:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41e54c:	ldr	w8, [x8, #1688]
  41e550:	adrp	x25, 429000 <_IO_stdin_used@@Base+0x5290>
  41e554:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  41e558:	add	x25, x25, #0x718
  41e55c:	mvn	w21, w8
  41e560:	add	x2, x2, #0x6c5
  41e564:	ldr	x0, [x22, #1664]
  41e568:	mov	x1, x26
  41e56c:	mov	x3, x27
  41e570:	bl	406830 <sprintf@plt>
  41e574:	ldr	x0, [x22, #1664]
  41e578:	bl	41ecec <notice_finished_file@@Base+0x464>
  41e57c:	cmp	x0, #0x1
  41e580:	stur	x0, [x29, #-144]
  41e584:	b.eq	41e5ac <f_mtime@@Base+0x4e0>  // b.none
  41e588:	cbz	x20, 41e594 <f_mtime@@Base+0x4c8>
  41e58c:	cmp	w21, w24
  41e590:	b.cs	41e5ac <f_mtime@@Base+0x4e0>  // b.hs, b.nlast
  41e594:	ldr	x0, [x22, #1664]
  41e598:	bl	42016c <strcache_add@@Base>
  41e59c:	ldur	x8, [x29, #-144]
  41e5a0:	mov	x20, x0
  41e5a4:	mov	w24, w21
  41e5a8:	stur	x8, [x29, #-40]
  41e5ac:	ldr	x2, [x25], #8
  41e5b0:	add	w21, w21, #0x1
  41e5b4:	cbnz	x2, 41e564 <f_mtime@@Base+0x498>
  41e5b8:	sub	x0, x29, #0x10
  41e5bc:	sub	x1, x29, #0x18
  41e5c0:	bl	417970 <find_next_token@@Base>
  41e5c4:	mov	x28, x0
  41e5c8:	cbnz	x0, 41e388 <f_mtime@@Base+0x2bc>
  41e5cc:	b	41e624 <f_mtime@@Base+0x558>
  41e5d0:	mov	x0, x19
  41e5d4:	mov	x1, x20
  41e5d8:	bl	40a6d4 <rehash_file@@Base>
  41e5dc:	mov	x21, x19
  41e5e0:	ldr	x19, [x19, #72]
  41e5e4:	cbnz	x19, 41e5dc <f_mtime@@Base+0x510>
  41e5e8:	ldur	x8, [x29, #-40]
  41e5ec:	cmn	x8, #0x1
  41e5f0:	b.eq	41e634 <f_mtime@@Base+0x568>  // b.none
  41e5f4:	cmp	x8, #0x2
  41e5f8:	b.eq	41e634 <f_mtime@@Base+0x568>  // b.none
  41e5fc:	mov	x0, x20
  41e600:	bl	41ecec <notice_finished_file@@Base+0x464>
  41e604:	stur	x0, [x29, #-40]
  41e608:	b	41e634 <f_mtime@@Base+0x568>
  41e60c:	mov	x20, xzr
  41e610:	b	41e624 <f_mtime@@Base+0x558>
  41e614:	stur	x0, [x29, #-40]
  41e618:	mov	x0, x27
  41e61c:	bl	42016c <strcache_add@@Base>
  41e620:	mov	x20, x0
  41e624:	ldur	x0, [x29, #-176]
  41e628:	bl	406cb0 <free@plt>
  41e62c:	cbnz	x20, 41e238 <f_mtime@@Base+0x16c>
  41e630:	mov	x21, x19
  41e634:	ldur	x20, [x29, #-40]
  41e638:	adrp	x22, 43f000 <shell_var@@Base+0x20>
  41e63c:	ldr	w8, [x22, #224]
  41e640:	cbz	w8, 41e6b0 <f_mtime@@Base+0x5e4>
  41e644:	ldr	x8, [x21, #104]
  41e648:	mov	w10, #0x410c                	// #16652
  41e64c:	cmp	x8, #0x0
  41e650:	csel	x8, x21, x8, eq  // eq = none
  41e654:	ldr	w9, [x8, #136]
  41e658:	ldr	w11, [x8, #136]
  41e65c:	cmp	x20, #0x1
  41e660:	b.eq	41e678 <f_mtime@@Base+0x5ac>  // b.none
  41e664:	and	w12, w11, w10
  41e668:	cmp	w12, #0x4, lsl #12
  41e66c:	b.ne	41e678 <f_mtime@@Base+0x5ac>  // b.any
  41e670:	and	w11, w11, #0xffffbfff
  41e674:	str	w11, [x8, #136]
  41e678:	eor	w11, w11, w9
  41e67c:	tbnz	w11, #10, 41e684 <f_mtime@@Base+0x5b8>
  41e680:	str	x20, [x8, #112]
  41e684:	ldr	x8, [x8, #56]
  41e688:	cbnz	x8, 41e658 <f_mtime@@Base+0x58c>
  41e68c:	mov	x0, x20
  41e690:	mov	sp, x29
  41e694:	ldp	x20, x19, [sp, #80]
  41e698:	ldp	x22, x21, [sp, #64]
  41e69c:	ldp	x24, x23, [sp, #48]
  41e6a0:	ldp	x26, x25, [sp, #32]
  41e6a4:	ldp	x28, x27, [sp, #16]
  41e6a8:	ldp	x29, x30, [sp], #96
  41e6ac:	ret
  41e6b0:	cmn	x20, #0x1
  41e6b4:	b.eq	41e644 <f_mtime@@Base+0x578>  // b.none
  41e6b8:	cmp	x20, #0x1
  41e6bc:	b.eq	41e644 <f_mtime@@Base+0x578>  // b.none
  41e6c0:	ldrb	w8, [x21, #137]
  41e6c4:	tbnz	w8, #2, 41e644 <f_mtime@@Base+0x578>
  41e6c8:	adrp	x19, 43e000 <stdio_traced@@Base+0x1a38>
  41e6cc:	ldr	x8, [x19, #1656]
  41e6d0:	cmp	x8, x20
  41e6d4:	b.cs	41e644 <f_mtime@@Base+0x578>  // b.hs, b.nlast
  41e6d8:	sub	x0, x29, #0x10
  41e6dc:	bl	40b804 <file_timestamp_now@@Base>
  41e6e0:	ldursw	x8, [x29, #-16]
  41e6e4:	add	x8, x8, x0
  41e6e8:	sub	x8, x8, #0x1
  41e6ec:	cmp	x8, x20
  41e6f0:	str	x8, [x19, #1656]
  41e6f4:	b.cs	41e7c4 <f_mtime@@Base+0x6f8>  // b.hs, b.nlast
  41e6f8:	ldur	x8, [x29, #-40]
  41e6fc:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x5290>
  41e700:	ldr	d0, [x10, #184]
  41e704:	adrp	x10, 429000 <_IO_stdin_used@@Base+0x5290>
  41e708:	sub	x8, x8, #0x3
  41e70c:	sub	x9, x0, #0x3
  41e710:	ldr	d1, [x10, #192]
  41e714:	lsr	x10, x8, #30
  41e718:	sub	x10, x10, x9, lsr #30
  41e71c:	and	w9, w9, #0x3fffffff
  41e720:	and	w8, w8, #0x3fffffff
  41e724:	sub	w8, w8, w9
  41e728:	scvtf	d2, w8
  41e72c:	fdiv	d0, d2, d0
  41e730:	ucvtf	d2, x10
  41e734:	fadd	d0, d0, d2
  41e738:	fcmp	d0, d1
  41e73c:	b.lt	41e768 <f_mtime@@Base+0x69c>  // b.tstop
  41e740:	mov	x8, #0x43f0000000000000    	// #4895412794951729152
  41e744:	fmov	d1, x8
  41e748:	fcmp	d0, d1
  41e74c:	b.hi	41e768 <f_mtime@@Base+0x69c>  // b.pmore
  41e750:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  41e754:	fcvtzu	x2, d0
  41e758:	add	x1, x1, #0x511
  41e75c:	sub	x0, x29, #0x90
  41e760:	bl	406830 <sprintf@plt>
  41e764:	b	41e778 <f_mtime@@Base+0x6ac>
  41e768:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41e76c:	add	x1, x1, #0xf9
  41e770:	sub	x0, x29, #0x90
  41e774:	bl	406830 <sprintf@plt>
  41e778:	ldr	x0, [x21]
  41e77c:	bl	406790 <strlen@plt>
  41e780:	mov	x19, x0
  41e784:	sub	x0, x29, #0x90
  41e788:	bl	406790 <strlen@plt>
  41e78c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41e790:	add	x19, x0, x19
  41e794:	add	x1, x1, #0xfe
  41e798:	mov	w2, #0x5                   	// #5
  41e79c:	mov	x0, xzr
  41e7a0:	bl	406e10 <dcgettext@plt>
  41e7a4:	ldr	x3, [x21]
  41e7a8:	mov	x2, x0
  41e7ac:	sub	x4, x29, #0x90
  41e7b0:	mov	x0, xzr
  41e7b4:	mov	x1, x19
  41e7b8:	bl	418744 <error@@Base>
  41e7bc:	mov	w8, #0x1                   	// #1
  41e7c0:	str	w8, [x22, #224]
  41e7c4:	ldur	x20, [x29, #-40]
  41e7c8:	b	41e644 <f_mtime@@Base+0x578>

000000000041e7cc <show_goal_error@@Base>:
  41e7cc:	stp	x29, x30, [sp, #-48]!
  41e7d0:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  41e7d4:	ldr	x8, [x8, #1648]
  41e7d8:	stp	x22, x21, [sp, #16]
  41e7dc:	stp	x20, x19, [sp, #32]
  41e7e0:	mov	x29, sp
  41e7e4:	ldrh	w9, [x8, #32]
  41e7e8:	and	w9, w9, #0x6
  41e7ec:	cmp	w9, #0x2
  41e7f0:	b.ne	41e878 <show_goal_error@@Base+0xac>  // b.any
  41e7f4:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  41e7f8:	ldr	x22, [x9, #1632]
  41e7fc:	cbz	x22, 41e878 <show_goal_error@@Base+0xac>
  41e800:	ldr	x8, [x8, #16]
  41e804:	ldr	x9, [x22, #16]
  41e808:	cmp	x8, x9
  41e80c:	b.eq	41e81c <show_goal_error@@Base+0x50>  // b.none
  41e810:	ldr	x22, [x22]
  41e814:	cbnz	x22, 41e804 <show_goal_error@@Base+0x38>
  41e818:	b	41e878 <show_goal_error@@Base+0xac>
  41e81c:	ldr	w19, [x22, #36]
  41e820:	cbz	w19, 41e878 <show_goal_error@@Base+0xac>
  41e824:	ldr	x0, [x8]
  41e828:	add	x20, x22, #0x28
  41e82c:	bl	406790 <strlen@plt>
  41e830:	mov	x21, x0
  41e834:	mov	w0, w19
  41e838:	bl	406b50 <strerror@plt>
  41e83c:	bl	406790 <strlen@plt>
  41e840:	ldr	x8, [x22, #16]
  41e844:	add	x21, x0, x21
  41e848:	ldr	x19, [x8]
  41e84c:	ldr	w8, [x22, #36]
  41e850:	mov	w0, w8
  41e854:	bl	406b50 <strerror@plt>
  41e858:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  41e85c:	mov	x4, x0
  41e860:	add	x2, x2, #0xda
  41e864:	mov	x0, x20
  41e868:	mov	x1, x21
  41e86c:	mov	x3, x19
  41e870:	bl	418744 <error@@Base>
  41e874:	str	wzr, [x22, #36]
  41e878:	ldp	x20, x19, [sp, #32]
  41e87c:	ldp	x22, x21, [sp, #16]
  41e880:	ldp	x29, x30, [sp], #48
  41e884:	ret

000000000041e888 <notice_finished_file@@Base>:
  41e888:	sub	sp, sp, #0xc0
  41e88c:	stp	x29, x30, [sp, #128]
  41e890:	stp	x22, x21, [sp, #160]
  41e894:	stp	x20, x19, [sp, #176]
  41e898:	str	x23, [sp, #144]
  41e89c:	ldr	w23, [x0, #136]
  41e8a0:	mov	w8, #0x40c                 	// #1036
  41e8a4:	mov	x19, x0
  41e8a8:	mov	w10, wzr
  41e8ac:	orr	w9, w23, w8
  41e8b0:	tst	w23, #0x3
  41e8b4:	adrp	x22, 43f000 <shell_var@@Base+0x20>
  41e8b8:	add	x29, sp, #0x80
  41e8bc:	str	w9, [x0, #136]
  41e8c0:	b.ne	41eb70 <notice_finished_file@@Base+0x2e8>  // b.any
  41e8c4:	ldr	w8, [x22, #228]
  41e8c8:	cbz	w8, 41eb70 <notice_finished_file@@Base+0x2e8>
  41e8cc:	ldr	x8, [x19, #32]
  41e8d0:	cbz	x8, 41e8dc <notice_finished_file@@Base+0x54>
  41e8d4:	ldrb	w10, [x8, #51]
  41e8d8:	tbnz	w10, #0, 41e938 <notice_finished_file@@Base+0xb0>
  41e8dc:	tbnz	w23, #13, 41e928 <notice_finished_file@@Base+0xa0>
  41e8e0:	cbz	x8, 41e95c <notice_finished_file@@Base+0xd4>
  41e8e4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41e8e8:	ldr	w8, [x8, #3232]
  41e8ec:	cbnz	w8, 41e914 <notice_finished_file@@Base+0x8c>
  41e8f0:	ldr	x20, [x19]
  41e8f4:	mov	x0, x20
  41e8f8:	bl	406790 <strlen@plt>
  41e8fc:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  41e900:	mov	x1, x0
  41e904:	add	x2, x2, #0x65c
  41e908:	mov	w0, wzr
  41e90c:	mov	x3, x20
  41e910:	bl	4185c0 <message@@Base>
  41e914:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41e918:	ldr	w8, [x8, #24]
  41e91c:	cbz	w8, 41e964 <notice_finished_file@@Base+0xdc>
  41e920:	mov	w8, wzr
  41e924:	b	41eb4c <notice_finished_file@@Base+0x2c4>
  41e928:	and	w9, w9, #0xfffffffc
  41e92c:	mov	w10, wzr
  41e930:	str	w9, [x19, #136]
  41e934:	b	41eb70 <notice_finished_file@@Base+0x2e8>
  41e938:	ldrh	w10, [x8, #48]
  41e93c:	cbz	x10, 41eb70 <notice_finished_file@@Base+0x2e8>
  41e940:	ldr	x11, [x8, #40]
  41e944:	mov	x12, xzr
  41e948:	ldrb	w13, [x11, x12]
  41e94c:	tbz	w13, #0, 41e8dc <notice_finished_file@@Base+0x54>
  41e950:	add	x12, x12, #0x1
  41e954:	cmp	x12, x10
  41e958:	b.cc	41e948 <notice_finished_file@@Base+0xc0>  // b.lo, b.ul, b.last
  41e95c:	mov	w10, wzr
  41e960:	b	41eb70 <notice_finished_file@@Base+0x2e8>
  41e964:	ldr	x0, [x19]
  41e968:	bl	40706c <ar_name@@Base>
  41e96c:	cbz	w0, 41e998 <notice_finished_file@@Base+0x110>
  41e970:	ldr	x0, [x19]
  41e974:	bl	407228 <ar_touch@@Base>
  41e978:	cmp	w0, #0x0
  41e97c:	mov	w8, #0x3                   	// #3
  41e980:	csel	w8, wzr, w8, eq  // eq = none
  41e984:	b	41eb4c <notice_finished_file@@Base+0x2c4>
  41e988:	bl	406eb0 <__errno_location@plt>
  41e98c:	ldr	w8, [x0]
  41e990:	cmp	w8, #0x4
  41e994:	b.ne	41e9f0 <notice_finished_file@@Base+0x168>  // b.any
  41e998:	ldr	x0, [x19]
  41e99c:	mov	w1, #0x42                  	// #66
  41e9a0:	mov	w2, #0x1b6                 	// #438
  41e9a4:	bl	406a00 <open@plt>
  41e9a8:	cmn	w0, #0x1
  41e9ac:	b.eq	41e988 <notice_finished_file@@Base+0x100>  // b.none
  41e9b0:	mov	w21, w0
  41e9b4:	tbnz	w0, #31, 41e9f0 <notice_finished_file@@Base+0x168>
  41e9b8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41e9bc:	mov	w8, #0x78                  	// #120
  41e9c0:	add	x20, x20, #0x673
  41e9c4:	strb	w8, [x29, #28]
  41e9c8:	mov	x1, sp
  41e9cc:	mov	w0, w21
  41e9d0:	bl	423d40 <__libc_csu_fini@@Base+0x28>
  41e9d4:	cmn	w0, #0x1
  41e9d8:	b.ne	41ea00 <notice_finished_file@@Base+0x178>  // b.any
  41e9dc:	bl	406eb0 <__errno_location@plt>
  41e9e0:	ldr	w8, [x0]
  41e9e4:	cmp	w8, #0x4
  41e9e8:	b.eq	41e9c8 <notice_finished_file@@Base+0x140>  // b.none
  41e9ec:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41e9f0:	ldr	x1, [x19]
  41e9f4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41e9f8:	add	x0, x0, #0x665
  41e9fc:	b	41eb44 <notice_finished_file@@Base+0x2bc>
  41ea00:	tbnz	w0, #31, 41ea38 <notice_finished_file@@Base+0x1b0>
  41ea04:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41ea08:	add	x20, x20, #0x682
  41ea0c:	add	x1, x29, #0x1c
  41ea10:	mov	w2, #0x1                   	// #1
  41ea14:	mov	w0, w21
  41ea18:	bl	406da0 <read@plt>
  41ea1c:	cmn	w0, #0x1
  41ea20:	b.ne	41ea44 <notice_finished_file@@Base+0x1bc>  // b.any
  41ea24:	bl	406eb0 <__errno_location@plt>
  41ea28:	ldr	w8, [x0]
  41ea2c:	cmp	w8, #0x4
  41ea30:	b.eq	41ea0c <notice_finished_file@@Base+0x184>  // b.none
  41ea34:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41ea38:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41ea3c:	add	x20, x20, #0x673
  41ea40:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41ea44:	tbnz	w0, #31, 41ea7c <notice_finished_file@@Base+0x1f4>
  41ea48:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41ea4c:	add	x20, x20, #0x690
  41ea50:	mov	w0, w21
  41ea54:	mov	x1, xzr
  41ea58:	mov	w2, wzr
  41ea5c:	bl	4068f0 <lseek@plt>
  41ea60:	cmn	x0, #0x1
  41ea64:	b.ne	41ea88 <notice_finished_file@@Base+0x200>  // b.any
  41ea68:	bl	406eb0 <__errno_location@plt>
  41ea6c:	ldr	w8, [x0]
  41ea70:	cmp	w8, #0x4
  41ea74:	b.eq	41ea50 <notice_finished_file@@Base+0x1c8>  // b.none
  41ea78:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41ea7c:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41ea80:	add	x20, x20, #0x682
  41ea84:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41ea88:	tbnz	x0, #63, 41eac0 <notice_finished_file@@Base+0x238>
  41ea8c:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41ea90:	add	x20, x20, #0x69f
  41ea94:	add	x1, x29, #0x1c
  41ea98:	mov	w2, #0x1                   	// #1
  41ea9c:	mov	w0, w21
  41eaa0:	bl	406bb0 <write@plt>
  41eaa4:	cmn	w0, #0x1
  41eaa8:	b.ne	41eacc <notice_finished_file@@Base+0x244>  // b.any
  41eaac:	bl	406eb0 <__errno_location@plt>
  41eab0:	ldr	w8, [x0]
  41eab4:	cmp	w8, #0x4
  41eab8:	b.eq	41ea94 <notice_finished_file@@Base+0x20c>  // b.none
  41eabc:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41eac0:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41eac4:	add	x20, x20, #0x690
  41eac8:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41eacc:	tbnz	w0, #31, 41eae4 <notice_finished_file@@Base+0x25c>
  41ead0:	ldr	x8, [sp, #48]
  41ead4:	cbz	x8, 41eaf0 <notice_finished_file@@Base+0x268>
  41ead8:	mov	w0, w21
  41eadc:	bl	406b60 <close@plt>
  41eae0:	b	41e920 <notice_finished_file@@Base+0x98>
  41eae4:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41eae8:	add	x20, x20, #0x69f
  41eaec:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41eaf0:	mov	w0, w21
  41eaf4:	bl	406b60 <close@plt>
  41eaf8:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41eafc:	add	x20, x20, #0x665
  41eb00:	ldr	x0, [x19]
  41eb04:	mov	w1, #0x202                 	// #514
  41eb08:	mov	w2, #0x1b6                 	// #438
  41eb0c:	bl	406a00 <open@plt>
  41eb10:	cmn	w0, #0x1
  41eb14:	b.ne	41eb2c <notice_finished_file@@Base+0x2a4>  // b.any
  41eb18:	bl	406eb0 <__errno_location@plt>
  41eb1c:	ldr	w8, [x0]
  41eb20:	cmp	w8, #0x4
  41eb24:	b.eq	41eb00 <notice_finished_file@@Base+0x278>  // b.none
  41eb28:	b	41eb3c <notice_finished_file@@Base+0x2b4>
  41eb2c:	mov	w21, w0
  41eb30:	tbz	w0, #31, 41ead8 <notice_finished_file@@Base+0x250>
  41eb34:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  41eb38:	add	x20, x20, #0x665
  41eb3c:	ldr	x1, [x19]
  41eb40:	mov	x0, x20
  41eb44:	bl	418a4c <perror_with_name@@Base>
  41eb48:	mov	w8, #0x3                   	// #3
  41eb4c:	ldr	w9, [x19, #136]
  41eb50:	adrp	x10, 43e000 <stdio_traced@@Base+0x1a38>
  41eb54:	and	w9, w9, #0xfffffffc
  41eb58:	orr	w9, w9, w8
  41eb5c:	str	w9, [x19, #136]
  41eb60:	ldr	w8, [x10, #1624]
  41eb64:	add	w8, w8, #0x1
  41eb68:	str	w8, [x10, #1624]
  41eb6c:	mov	w10, #0x1                   	// #1
  41eb70:	ldr	x11, [x19, #120]
  41eb74:	and	w8, w23, #0xc
  41eb78:	cbnz	x11, 41eb84 <notice_finished_file@@Base+0x2fc>
  41eb7c:	ldr	x11, [x19, #112]
  41eb80:	str	x11, [x19, #120]
  41eb84:	cmp	w8, #0x8
  41eb88:	b.ne	41eb98 <notice_finished_file@@Base+0x310>  // b.any
  41eb8c:	cbnz	w10, 41eb9c <notice_finished_file@@Base+0x314>
  41eb90:	tbnz	w9, #13, 41ec10 <notice_finished_file@@Base+0x388>
  41eb94:	b	41eb9c <notice_finished_file@@Base+0x314>
  41eb98:	cbz	w10, 41ec10 <notice_finished_file@@Base+0x388>
  41eb9c:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  41eba0:	adrp	x11, 43f000 <shell_var@@Base+0x20>
  41eba4:	ldr	w10, [x10, #3260]
  41eba8:	ldr	w11, [x11, #24]
  41ebac:	ldr	w12, [x22, #228]
  41ebb0:	orr	w10, w11, w10
  41ebb4:	orr	w10, w10, w12
  41ebb8:	cbz	w10, 41ebec <notice_finished_file@@Base+0x364>
  41ebbc:	ldr	x10, [x19, #32]
  41ebc0:	cbz	x10, 41ebec <notice_finished_file@@Base+0x364>
  41ebc4:	ldrh	w9, [x10, #48]
  41ebc8:	subs	x11, x9, #0x1
  41ebcc:	b.lt	41ebf0 <notice_finished_file@@Base+0x368>  // b.tstop
  41ebd0:	ldr	x12, [x10, #40]
  41ebd4:	add	x9, x12, x9
  41ebd8:	ldurb	w12, [x9, #-1]
  41ebdc:	mov	x9, x11
  41ebe0:	tbnz	w12, #0, 41ebc8 <notice_finished_file@@Base+0x340>
  41ebe4:	add	w9, w11, #0x1
  41ebe8:	b	41ec04 <notice_finished_file@@Base+0x37c>
  41ebec:	tbnz	w9, #11, 41ebf8 <notice_finished_file@@Base+0x370>
  41ebf0:	mov	w9, wzr
  41ebf4:	b	41ec04 <notice_finished_file@@Base+0x37c>
  41ebf8:	ldr	x9, [x19, #32]
  41ebfc:	cmp	x9, #0x0
  41ec00:	cset	w9, eq  // eq = none
  41ec04:	cmp	w9, #0x0
  41ec08:	csetm	x9, ne  // ne = any
  41ec0c:	str	x9, [x19, #112]
  41ec10:	ldr	x9, [x19, #104]
  41ec14:	cbz	x9, 41ec50 <notice_finished_file@@Base+0x3c8>
  41ec18:	ldr	x10, [x19, #112]
  41ec1c:	mov	x11, x9
  41ec20:	ldrb	w12, [x11, #137]
  41ec24:	tbz	w12, #2, 41ec50 <notice_finished_file@@Base+0x3c8>
  41ec28:	cbz	x10, 41ec3c <notice_finished_file@@Base+0x3b4>
  41ec2c:	ldr	x12, [x11, #112]
  41ec30:	sub	x13, x12, #0x1
  41ec34:	cmp	x13, x10
  41ec38:	csel	x10, x10, x12, cc  // cc = lo, ul, last
  41ec3c:	ldr	x11, [x11, #56]
  41ec40:	cbnz	x11, 41ec20 <notice_finished_file@@Base+0x398>
  41ec44:	str	x10, [x9, #112]
  41ec48:	ldr	x9, [x9, #56]
  41ec4c:	cbnz	x9, 41ec44 <notice_finished_file@@Base+0x3bc>
  41ec50:	ldr	w9, [x19, #136]
  41ec54:	and	w10, w9, #0x3
  41ec58:	cmp	w10, #0x1
  41ec5c:	b.eq	41ecc4 <notice_finished_file@@Base+0x43c>  // b.none
  41ec60:	cmp	w8, #0x8
  41ec64:	b.ne	41ecc4 <notice_finished_file@@Base+0x43c>  // b.any
  41ec68:	ldr	x20, [x19, #48]
  41ec6c:	cbz	x20, 41ecd4 <notice_finished_file@@Base+0x44c>
  41ec70:	ldr	x8, [x20, #16]
  41ec74:	ldr	w9, [x8, #136]
  41ec78:	orr	w9, w9, #0xc
  41ec7c:	str	w9, [x8, #136]
  41ec80:	ldr	x8, [x20, #16]
  41ec84:	ldr	w9, [x8, #136]
  41ec88:	orr	w9, w9, #0x400
  41ec8c:	str	w9, [x8, #136]
  41ec90:	ldr	x8, [x20, #16]
  41ec94:	ldr	w9, [x19, #136]
  41ec98:	ldr	w10, [x8, #136]
  41ec9c:	bfxil	w10, w9, #0, #2
  41eca0:	str	w10, [x8, #136]
  41eca4:	ldr	x0, [x20, #16]
  41eca8:	ldrb	w8, [x0, #137]
  41ecac:	tbnz	w8, #5, 41ecb8 <notice_finished_file@@Base+0x430>
  41ecb0:	mov	w1, wzr
  41ecb4:	bl	41e0cc <f_mtime@@Base>
  41ecb8:	ldr	x20, [x20]
  41ecbc:	cbnz	x20, 41ec70 <notice_finished_file@@Base+0x3e8>
  41ecc0:	b	41ecd4 <notice_finished_file@@Base+0x44c>
  41ecc4:	cmp	w10, #0x1
  41ecc8:	b.ne	41ecd4 <notice_finished_file@@Base+0x44c>  // b.any
  41eccc:	and	w8, w9, #0xfffffffc
  41ecd0:	str	w8, [x19, #136]
  41ecd4:	ldp	x20, x19, [sp, #176]
  41ecd8:	ldp	x22, x21, [sp, #160]
  41ecdc:	ldr	x23, [sp, #144]
  41ece0:	ldp	x29, x30, [sp, #128]
  41ece4:	add	sp, sp, #0xc0
  41ece8:	ret
  41ecec:	stp	x29, x30, [sp, #-64]!
  41ecf0:	stp	x28, x23, [sp, #16]
  41ecf4:	stp	x22, x21, [sp, #32]
  41ecf8:	stp	x20, x19, [sp, #48]
  41ecfc:	mov	x29, sp
  41ed00:	sub	sp, sp, #0x2, lsl #12
  41ed04:	sub	sp, sp, #0x90
  41ed08:	mov	x20, x0
  41ed0c:	sub	x1, x29, #0x80
  41ed10:	mov	x0, x20
  41ed14:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  41ed18:	cmn	w0, #0x1
  41ed1c:	b.ne	41ed34 <notice_finished_file@@Base+0x4ac>  // b.any
  41ed20:	bl	406eb0 <__errno_location@plt>
  41ed24:	ldr	w8, [x0]
  41ed28:	cmp	w8, #0x4
  41ed2c:	b.eq	41ed0c <notice_finished_file@@Base+0x484>  // b.none
  41ed30:	b	41ed54 <notice_finished_file@@Base+0x4cc>
  41ed34:	cbnz	w0, 41ed4c <notice_finished_file@@Base+0x4c4>
  41ed38:	ldp	x1, x2, [x29, #-40]
  41ed3c:	mov	x0, x20
  41ed40:	bl	40b64c <file_timestamp_cons@@Base>
  41ed44:	mov	x19, x0
  41ed48:	b	41ed68 <notice_finished_file@@Base+0x4e0>
  41ed4c:	bl	406eb0 <__errno_location@plt>
  41ed50:	ldr	w8, [x0]
  41ed54:	cmp	w8, #0x2
  41ed58:	mov	w19, #0x1                   	// #1
  41ed5c:	b.eq	41ed68 <notice_finished_file@@Base+0x4e0>  // b.none
  41ed60:	cmp	w8, #0x14
  41ed64:	b.ne	41ee80 <notice_finished_file@@Base+0x5f8>  // b.any
  41ed68:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41ed6c:	ldr	w8, [x8, #3272]
  41ed70:	cbz	w8, 41eed0 <notice_finished_file@@Base+0x648>
  41ed74:	mov	x0, x20
  41ed78:	bl	406790 <strlen@plt>
  41ed7c:	cmp	x0, #0x1, lsl #12
  41ed80:	b.hi	41eed0 <notice_finished_file@@Base+0x648>  // b.pmore
  41ed84:	add	x0, sp, #0x1, lsl #12
  41ed88:	add	x0, x0, #0xc
  41ed8c:	add	x22, sp, #0x1, lsl #12
  41ed90:	mov	x1, x20
  41ed94:	add	x22, x22, #0xc
  41ed98:	bl	406d50 <strcpy@plt>
  41ed9c:	add	x23, sp, #0x8
  41eda0:	add	x0, sp, #0x1, lsl #12
  41eda4:	add	x0, x0, #0xc
  41eda8:	sub	x1, x29, #0x80
  41edac:	bl	423d50 <__libc_csu_fini@@Base+0x38>
  41edb0:	cmn	w0, #0x1
  41edb4:	b.ne	41edcc <notice_finished_file@@Base+0x544>  // b.any
  41edb8:	bl	406eb0 <__errno_location@plt>
  41edbc:	ldr	w8, [x0]
  41edc0:	cmp	w8, #0x4
  41edc4:	b.eq	41eda0 <notice_finished_file@@Base+0x518>  // b.none
  41edc8:	b	41eea0 <notice_finished_file@@Base+0x618>
  41edcc:	cbnz	w0, 41ee98 <notice_finished_file@@Base+0x610>
  41edd0:	ldur	w8, [x29, #-112]
  41edd4:	and	w8, w8, #0xf000
  41edd8:	cmp	w8, #0xa, lsl #12
  41eddc:	b.ne	41eed0 <notice_finished_file@@Base+0x648>  // b.any
  41ede0:	ldp	x1, x2, [x29, #-40]
  41ede4:	add	x0, sp, #0x1, lsl #12
  41ede8:	add	x0, x0, #0xc
  41edec:	bl	40b64c <file_timestamp_cons@@Base>
  41edf0:	cmp	x0, x19
  41edf4:	csel	x19, x0, x19, hi  // hi = pmore
  41edf8:	add	x0, sp, #0x1, lsl #12
  41edfc:	add	x0, x0, #0xc
  41ee00:	add	x1, sp, #0x8
  41ee04:	mov	w2, #0x1000                	// #4096
  41ee08:	bl	406820 <readlink@plt>
  41ee0c:	cmn	x0, #0x1
  41ee10:	b.ne	41ee28 <notice_finished_file@@Base+0x5a0>  // b.any
  41ee14:	bl	406eb0 <__errno_location@plt>
  41ee18:	ldr	w8, [x0]
  41ee1c:	cmp	w8, #0x4
  41ee20:	b.eq	41edf8 <notice_finished_file@@Base+0x570>  // b.none
  41ee24:	b	41eebc <notice_finished_file@@Base+0x634>
  41ee28:	mov	x20, x0
  41ee2c:	tbnz	x0, #63, 41eebc <notice_finished_file@@Base+0x634>
  41ee30:	strb	wzr, [x23, x20]
  41ee34:	ldrb	w8, [sp, #8]
  41ee38:	add	x21, sp, #0x1, lsl #12
  41ee3c:	add	x21, x21, #0xc
  41ee40:	cmp	w8, #0x2f
  41ee44:	b.eq	41ee70 <notice_finished_file@@Base+0x5e8>  // b.none
  41ee48:	add	x0, sp, #0x1, lsl #12
  41ee4c:	add	x0, x0, #0xc
  41ee50:	mov	w1, #0x2f                  	// #47
  41ee54:	bl	406b80 <strrchr@plt>
  41ee58:	cbz	x0, 41ee70 <notice_finished_file@@Base+0x5e8>
  41ee5c:	sub	x8, x20, x22
  41ee60:	add	x8, x8, x0
  41ee64:	cmp	x8, #0xffe
  41ee68:	b.gt	41eed0 <notice_finished_file@@Base+0x648>
  41ee6c:	add	x21, x0, #0x1
  41ee70:	add	x1, sp, #0x8
  41ee74:	mov	x0, x21
  41ee78:	bl	406d50 <strcpy@plt>
  41ee7c:	b	41eda0 <notice_finished_file@@Base+0x518>
  41ee80:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41ee84:	add	x0, x0, #0x67b
  41ee88:	mov	x1, x20
  41ee8c:	bl	418a4c <perror_with_name@@Base>
  41ee90:	mov	w19, #0x1                   	// #1
  41ee94:	b	41eed0 <notice_finished_file@@Base+0x648>
  41ee98:	bl	406eb0 <__errno_location@plt>
  41ee9c:	ldr	w8, [x0]
  41eea0:	cmp	w8, #0x2
  41eea4:	b.eq	41eed0 <notice_finished_file@@Base+0x648>  // b.none
  41eea8:	cmp	w8, #0x14
  41eeac:	b.eq	41eed0 <notice_finished_file@@Base+0x648>  // b.none
  41eeb0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41eeb4:	add	x0, x0, #0x6ae
  41eeb8:	b	41eec4 <notice_finished_file@@Base+0x63c>
  41eebc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41eec0:	add	x0, x0, #0x6b6
  41eec4:	add	x1, sp, #0x1, lsl #12
  41eec8:	add	x1, x1, #0xc
  41eecc:	bl	418a4c <perror_with_name@@Base>
  41eed0:	mov	x0, x19
  41eed4:	add	sp, sp, #0x2, lsl #12
  41eed8:	add	sp, sp, #0x90
  41eedc:	ldp	x20, x19, [sp, #48]
  41eee0:	ldp	x22, x21, [sp, #32]
  41eee4:	ldp	x28, x23, [sp, #16]
  41eee8:	ldp	x29, x30, [sp], #64
  41eeec:	ret
  41eef0:	stp	x29, x30, [sp, #-48]!
  41eef4:	stp	x20, x19, [sp, #32]
  41eef8:	ldr	x8, [x0, #24]
  41eefc:	str	x21, [sp, #16]
  41ef00:	mov	x29, sp
  41ef04:	cbz	x8, 41ef40 <notice_finished_file@@Base+0x6b8>
  41ef08:	mov	w9, #0x402                 	// #1026
  41ef0c:	ldr	x20, [x8, #16]
  41ef10:	ldr	w10, [x20, #136]
  41ef14:	bics	wzr, w9, w10
  41ef18:	b.ne	41ef24 <notice_finished_file@@Base+0x69c>  // b.any
  41ef1c:	ldrb	w10, [x0, #138]
  41ef20:	tbnz	w10, #3, 41ef30 <notice_finished_file@@Base+0x6a8>
  41ef24:	ldr	x8, [x8]
  41ef28:	cbnz	x8, 41ef0c <notice_finished_file@@Base+0x684>
  41ef2c:	b	41ef40 <notice_finished_file@@Base+0x6b8>
  41ef30:	ldr	x8, [x20, #24]
  41ef34:	mov	x0, x20
  41ef38:	cbnz	x8, 41ef0c <notice_finished_file@@Base+0x684>
  41ef3c:	b	41ef44 <notice_finished_file@@Base+0x6bc>
  41ef40:	mov	x20, x0
  41ef44:	bl	41e7cc <show_goal_error@@Base>
  41ef48:	ldr	x0, [x20]
  41ef4c:	ldr	x21, [x20, #96]
  41ef50:	bl	406790 <strlen@plt>
  41ef54:	mov	x19, x0
  41ef58:	cbz	x21, 41efbc <notice_finished_file@@Base+0x734>
  41ef5c:	ldr	x0, [x21]
  41ef60:	bl	406790 <strlen@plt>
  41ef64:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41ef68:	add	x8, x19, x0
  41ef6c:	add	x1, x1, #0x5ea
  41ef70:	mov	w2, #0x5                   	// #5
  41ef74:	mov	x0, xzr
  41ef78:	add	x19, x8, #0x4
  41ef7c:	bl	406e10 <dcgettext@plt>
  41ef80:	ldr	x8, [x20, #96]
  41ef84:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41ef88:	ldr	w9, [x9, #28]
  41ef8c:	ldr	x4, [x20]
  41ef90:	ldr	x5, [x8]
  41ef94:	mov	x2, x0
  41ef98:	cbz	w9, 41f020 <notice_finished_file@@Base+0x798>
  41ef9c:	adrp	x3, 428000 <_IO_stdin_used@@Base+0x4290>
  41efa0:	adrp	x6, 427000 <_IO_stdin_used@@Base+0x3290>
  41efa4:	add	x3, x3, #0x89b
  41efa8:	add	x6, x6, #0x6fe
  41efac:	mov	x0, xzr
  41efb0:	mov	x1, x19
  41efb4:	bl	418744 <error@@Base>
  41efb8:	b	41f004 <notice_finished_file@@Base+0x77c>
  41efbc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41efc0:	add	x1, x1, #0x61a
  41efc4:	mov	w2, #0x5                   	// #5
  41efc8:	mov	x0, xzr
  41efcc:	add	x19, x19, #0x4
  41efd0:	bl	406e10 <dcgettext@plt>
  41efd4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41efd8:	ldr	w8, [x8, #28]
  41efdc:	ldr	x4, [x20]
  41efe0:	mov	x2, x0
  41efe4:	cbz	w8, 41f038 <notice_finished_file@@Base+0x7b0>
  41efe8:	adrp	x3, 428000 <_IO_stdin_used@@Base+0x4290>
  41efec:	adrp	x5, 427000 <_IO_stdin_used@@Base+0x3290>
  41eff0:	add	x3, x3, #0x89b
  41eff4:	add	x5, x5, #0x6fe
  41eff8:	mov	x0, xzr
  41effc:	mov	x1, x19
  41f000:	bl	418744 <error@@Base>
  41f004:	ldr	w8, [x20, #136]
  41f008:	ldr	x21, [sp, #16]
  41f00c:	and	w8, w8, #0xfff7ffff
  41f010:	str	w8, [x20, #136]
  41f014:	ldp	x20, x19, [sp, #32]
  41f018:	ldp	x29, x30, [sp], #48
  41f01c:	ret
  41f020:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  41f024:	add	x3, x3, #0x5eb
  41f028:	mov	x0, xzr
  41f02c:	mov	x1, x19
  41f030:	mov	x6, x3
  41f034:	bl	4188bc <fatal@@Base>
  41f038:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  41f03c:	add	x3, x3, #0x5eb
  41f040:	mov	x0, xzr
  41f044:	mov	x1, x19
  41f048:	mov	x5, x3
  41f04c:	bl	4188bc <fatal@@Base>
  41f050:	sub	sp, sp, #0x70
  41f054:	stp	x29, x30, [sp, #16]
  41f058:	stp	x28, x27, [sp, #32]
  41f05c:	stp	x26, x25, [sp, #48]
  41f060:	stp	x24, x23, [sp, #64]
  41f064:	stp	x22, x21, [sp, #80]
  41f068:	stp	x20, x19, [sp, #96]
  41f06c:	ldr	x8, [x0, #104]
  41f070:	mov	x20, x3
  41f074:	mov	x19, x0
  41f078:	add	w22, w1, #0x1
  41f07c:	cmp	x8, #0x0
  41f080:	csel	x8, x0, x8, eq  // eq = none
  41f084:	ldr	w9, [x8, #136]
  41f088:	add	x29, sp, #0x10
  41f08c:	str	x2, [sp]
  41f090:	orr	w9, w9, #0x200
  41f094:	str	w9, [x8, #136]
  41f098:	ldr	w8, [x0, #136]
  41f09c:	and	w9, w8, #0x6000
  41f0a0:	cmp	w9, #0x4, lsl #12
  41f0a4:	b.ne	41f0e4 <notice_finished_file@@Base+0x85c>  // b.any
  41f0a8:	ldr	x9, [x19, #32]
  41f0ac:	tbnz	w8, #8, 41f180 <notice_finished_file@@Base+0x8f8>
  41f0b0:	cbnz	x9, 41f180 <notice_finished_file@@Base+0x8f8>
  41f0b4:	mov	x0, x19
  41f0b8:	mov	w1, w22
  41f0bc:	bl	40ffc0 <try_implicit_rule@@Base>
  41f0c0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41f0c4:	ldr	w8, [x8, #3236]
  41f0c8:	cbz	w0, 41f13c <notice_finished_file@@Base+0x8b4>
  41f0cc:	tbz	w8, #3, 41f170 <notice_finished_file@@Base+0x8e8>
  41f0d0:	mov	w0, w22
  41f0d4:	bl	4176ac <print_spaces@@Base>
  41f0d8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41f0dc:	add	x1, x1, #0x261
  41f0e0:	b	41f150 <notice_finished_file@@Base+0x8c8>
  41f0e4:	mov	x0, x19
  41f0e8:	mov	w1, w22
  41f0ec:	bl	41d1ec <update_goal_chain@@Base+0x3e8>
  41f0f0:	mov	w24, w0
  41f0f4:	mov	x8, x19
  41f0f8:	mov	x22, x8
  41f0fc:	ldr	x8, [x8, #72]
  41f100:	cbnz	x8, 41f0f8 <notice_finished_file@@Base+0x870>
  41f104:	ldr	x0, [x22, #112]
  41f108:	cbnz	x0, 41f118 <notice_finished_file@@Base+0x890>
  41f10c:	mov	w1, #0x1                   	// #1
  41f110:	mov	x0, x22
  41f114:	bl	41e0cc <f_mtime@@Base>
  41f118:	mov	x23, x22
  41f11c:	ldr	x22, [x22, #72]
  41f120:	cbnz	x22, 41f118 <notice_finished_file@@Base+0x890>
  41f124:	cmp	x0, #0x1
  41f128:	b.eq	41f1cc <notice_finished_file@@Base+0x944>  // b.none
  41f12c:	ldr	x8, [sp]
  41f130:	cmp	x0, x8
  41f134:	b.ls	41f1d4 <notice_finished_file@@Base+0x94c>  // b.plast
  41f138:	b	41f1cc <notice_finished_file@@Base+0x944>
  41f13c:	tbz	w8, #3, 41f170 <notice_finished_file@@Base+0x8e8>
  41f140:	mov	w0, w22
  41f144:	bl	4176ac <print_spaces@@Base>
  41f148:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41f14c:	add	x1, x1, #0x283
  41f150:	mov	w2, #0x5                   	// #5
  41f154:	mov	x0, xzr
  41f158:	bl	406e10 <dcgettext@plt>
  41f15c:	ldr	x1, [x19]
  41f160:	bl	406ea0 <printf@plt>
  41f164:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41f168:	ldr	x0, [x8, #2512]
  41f16c:	bl	406d40 <fflush@plt>
  41f170:	ldr	w8, [x19, #136]
  41f174:	ldr	x9, [x19, #32]
  41f178:	orr	w8, w8, #0x100
  41f17c:	str	w8, [x19, #136]
  41f180:	cbz	x9, 41f3a0 <notice_finished_file@@Base+0xb18>
  41f184:	mov	x8, x19
  41f188:	mov	x24, x8
  41f18c:	ldr	x8, [x8, #72]
  41f190:	cbnz	x8, 41f188 <notice_finished_file@@Base+0x900>
  41f194:	ldr	x0, [x24, #112]
  41f198:	cbnz	x0, 41f1a8 <notice_finished_file@@Base+0x920>
  41f19c:	mov	w1, #0x1                   	// #1
  41f1a0:	mov	x0, x24
  41f1a4:	bl	41e0cc <f_mtime@@Base>
  41f1a8:	mov	x23, x24
  41f1ac:	ldr	x24, [x24, #72]
  41f1b0:	cbnz	x24, 41f1a8 <notice_finished_file@@Base+0x920>
  41f1b4:	cmp	x0, #0x1
  41f1b8:	b.eq	41f228 <notice_finished_file@@Base+0x9a0>  // b.none
  41f1bc:	ldr	x8, [sp]
  41f1c0:	cmp	x0, x8
  41f1c4:	b.ls	41f228 <notice_finished_file@@Base+0x9a0>  // b.plast
  41f1c8:	mov	w24, wzr
  41f1cc:	mov	w8, #0x1                   	// #1
  41f1d0:	str	w8, [x20]
  41f1d4:	ldr	x8, [x23, #104]
  41f1d8:	mov	w0, w24
  41f1dc:	cmp	x8, #0x0
  41f1e0:	csel	x8, x23, x8, eq  // eq = none
  41f1e4:	ldr	w9, [x8, #136]
  41f1e8:	and	w9, w9, #0xfffffdff
  41f1ec:	str	w9, [x8, #136]
  41f1f0:	ldr	x8, [x19, #104]
  41f1f4:	cmp	x8, #0x0
  41f1f8:	csel	x8, x19, x8, eq  // eq = none
  41f1fc:	ldr	w9, [x8, #136]
  41f200:	and	w9, w9, #0xfffffdff
  41f204:	str	w9, [x8, #136]
  41f208:	ldp	x20, x19, [sp, #96]
  41f20c:	ldp	x22, x21, [sp, #80]
  41f210:	ldp	x24, x23, [sp, #64]
  41f214:	ldp	x26, x25, [sp, #48]
  41f218:	ldp	x28, x27, [sp, #32]
  41f21c:	ldp	x29, x30, [sp, #16]
  41f220:	add	sp, sp, #0x70
  41f224:	ret
  41f228:	ldr	w8, [x23, #136]
  41f22c:	ubfx	w8, w8, #2, #2
  41f230:	cmp	w8, #0x2
  41f234:	b.eq	41f250 <notice_finished_file@@Base+0x9c8>  // b.none
  41f238:	cmp	w8, #0x1
  41f23c:	b.ne	41f244 <notice_finished_file@@Base+0x9bc>  // b.any
  41f240:	str	wzr, [x23, #128]
  41f244:	mov	x0, x23
  41f248:	mov	w1, wzr
  41f24c:	bl	40b608 <set_command_state@@Base>
  41f250:	mov	x26, x23
  41f254:	ldr	x21, [x26, #24]!
  41f258:	cbz	x21, 41f404 <notice_finished_file@@Base+0xb7c>
  41f25c:	mov	w28, wzr
  41f260:	mov	x25, xzr
  41f264:	mov	w24, wzr
  41f268:	ldr	x27, [x21, #16]
  41f26c:	ldr	x8, [x27, #104]
  41f270:	cmp	x8, #0x0
  41f274:	csel	x8, x27, x8, eq  // eq = none
  41f278:	ldrb	w8, [x8, #137]
  41f27c:	tbnz	w8, #1, 41f300 <notice_finished_file@@Base+0xa78>
  41f280:	str	x23, [x27, #96]
  41f284:	ldr	w8, [x20]
  41f288:	ldr	x2, [sp]
  41f28c:	sub	x3, x29, #0x4
  41f290:	mov	x0, x27
  41f294:	mov	w1, w22
  41f298:	stur	w8, [x29, #-4]
  41f29c:	bl	41f050 <notice_finished_file@@Base+0x7c8>
  41f2a0:	ldrb	w8, [x21, #33]
  41f2a4:	cmp	w0, w24
  41f2a8:	csel	w24, w0, w24, hi  // hi = pmore
  41f2ac:	tbnz	w8, #1, 41f2b8 <notice_finished_file@@Base+0xa30>
  41f2b0:	ldur	w8, [x29, #-4]
  41f2b4:	str	w8, [x20]
  41f2b8:	ldr	x8, [x21, #16]
  41f2bc:	ldr	x9, [x8, #72]
  41f2c0:	cbz	x9, 41f2d4 <notice_finished_file@@Base+0xa4c>
  41f2c4:	mov	x8, x9
  41f2c8:	ldr	x9, [x9, #72]
  41f2cc:	cbnz	x9, 41f2c4 <notice_finished_file@@Base+0xa3c>
  41f2d0:	str	x8, [x21, #16]
  41f2d4:	cbz	w24, 41f2e4 <notice_finished_file@@Base+0xa5c>
  41f2d8:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41f2dc:	ldr	w9, [x9, #28]
  41f2e0:	cbz	w9, 41f38c <notice_finished_file@@Base+0xb04>
  41f2e4:	ldr	w8, [x8, #136]
  41f2e8:	mov	x25, x21
  41f2ec:	ubfx	w8, w8, #2, #2
  41f2f0:	sub	w8, w8, #0x1
  41f2f4:	cmp	w8, #0x1
  41f2f8:	csinc	w28, w28, wzr, hi  // hi = pmore
  41f2fc:	b	41f37c <notice_finished_file@@Base+0xaf4>
  41f300:	ldr	x0, [x23]
  41f304:	bl	406790 <strlen@plt>
  41f308:	ldr	x8, [x27]
  41f30c:	mov	x27, x0
  41f310:	mov	x0, x8
  41f314:	bl	406790 <strlen@plt>
  41f318:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41f31c:	add	x27, x0, x27
  41f320:	mov	w2, #0x5                   	// #5
  41f324:	mov	x0, xzr
  41f328:	add	x1, x1, #0x2c5
  41f32c:	bl	406e10 <dcgettext@plt>
  41f330:	ldr	x8, [x21, #16]
  41f334:	ldr	x3, [x23]
  41f338:	mov	x2, x0
  41f33c:	mov	x0, xzr
  41f340:	ldr	x4, [x8]
  41f344:	mov	x1, x27
  41f348:	bl	418744 <error@@Base>
  41f34c:	ldr	x8, [x21]
  41f350:	cbz	x25, 41f368 <notice_finished_file@@Base+0xae0>
  41f354:	mov	x0, x21
  41f358:	str	x8, [x25]
  41f35c:	bl	406cb0 <free@plt>
  41f360:	mov	x21, x25
  41f364:	b	41f37c <notice_finished_file@@Base+0xaf4>
  41f368:	mov	x0, x21
  41f36c:	str	x8, [x26]
  41f370:	bl	406cb0 <free@plt>
  41f374:	mov	x21, xzr
  41f378:	mov	x25, x26
  41f37c:	ldr	x8, [x25]
  41f380:	mov	x25, x21
  41f384:	mov	x21, x8
  41f388:	cbnz	x8, 41f268 <notice_finished_file@@Base+0x9e0>
  41f38c:	cbz	w28, 41f1d4 <notice_finished_file@@Base+0x94c>
  41f390:	mov	w1, #0x1                   	// #1
  41f394:	mov	x0, x23
  41f398:	bl	40b608 <set_command_state@@Base>
  41f39c:	b	41f1d4 <notice_finished_file@@Base+0x94c>
  41f3a0:	tbnz	w8, #11, 41f184 <notice_finished_file@@Base+0x8fc>
  41f3a4:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  41f3a8:	ldr	x8, [x21, #64]
  41f3ac:	cbz	x8, 41f184 <notice_finished_file@@Base+0x8fc>
  41f3b0:	ldr	x9, [x8, #32]
  41f3b4:	cbz	x9, 41f184 <notice_finished_file@@Base+0x8fc>
  41f3b8:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  41f3bc:	ldrb	w9, [x9, #3236]
  41f3c0:	tbz	w9, #3, 41f3f8 <notice_finished_file@@Base+0xb70>
  41f3c4:	mov	w0, w22
  41f3c8:	bl	4176ac <print_spaces@@Base>
  41f3cc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41f3d0:	add	x1, x1, #0x63a
  41f3d4:	mov	w2, #0x5                   	// #5
  41f3d8:	mov	x0, xzr
  41f3dc:	bl	406e10 <dcgettext@plt>
  41f3e0:	ldr	x1, [x19]
  41f3e4:	bl	406ea0 <printf@plt>
  41f3e8:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  41f3ec:	ldr	x0, [x8, #2512]
  41f3f0:	bl	406d40 <fflush@plt>
  41f3f4:	ldr	x8, [x21, #64]
  41f3f8:	ldr	x8, [x8, #32]
  41f3fc:	str	x8, [x19, #32]
  41f400:	b	41f184 <notice_finished_file@@Base+0x8fc>
  41f404:	mov	w24, wzr
  41f408:	b	41f1d4 <notice_finished_file@@Base+0x94c>

000000000041f40c <snap_implicit_rules@@Base>:
  41f40c:	sub	sp, sp, #0x80
  41f410:	adrp	x0, 425000 <_IO_stdin_used@@Base+0x1290>
  41f414:	add	x0, x0, #0x8f1
  41f418:	mov	w1, #0xe                   	// #14
  41f41c:	stp	x29, x30, [sp, #32]
  41f420:	stp	x28, x27, [sp, #48]
  41f424:	stp	x26, x25, [sp, #64]
  41f428:	stp	x24, x23, [sp, #80]
  41f42c:	stp	x22, x21, [sp, #96]
  41f430:	stp	x20, x19, [sp, #112]
  41f434:	add	x29, sp, #0x20
  41f438:	bl	420c00 <lookup_variable@@Base>
  41f43c:	bl	40af6c <expand_extra_prereqs@@Base>
  41f440:	mov	x21, x0
  41f444:	adrp	x25, 43f000 <shell_var@@Base+0x20>
  41f448:	str	xzr, [x25, #256]
  41f44c:	cbz	x0, 41f490 <snap_implicit_rules@@Base+0x84>
  41f450:	mov	x20, xzr
  41f454:	mov	w26, wzr
  41f458:	mov	x19, x21
  41f45c:	ldr	x0, [x19, #8]
  41f460:	cbnz	x0, 41f46c <snap_implicit_rules@@Base+0x60>
  41f464:	ldr	x8, [x19, #16]
  41f468:	ldr	x0, [x8]
  41f46c:	bl	406790 <strlen@plt>
  41f470:	cmp	x0, x20
  41f474:	b.ls	41f480 <snap_implicit_rules@@Base+0x74>  // b.plast
  41f478:	mov	x20, x0
  41f47c:	str	x0, [x25, #256]
  41f480:	ldr	x19, [x19]
  41f484:	add	w26, w26, #0x1
  41f488:	cbnz	x19, 41f45c <snap_implicit_rules@@Base+0x50>
  41f48c:	b	41f494 <snap_implicit_rules@@Base+0x88>
  41f490:	mov	w26, wzr
  41f494:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f498:	ldr	x28, [x8, #248]
  41f49c:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41f4a0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f4a4:	adrp	x10, 43f000 <shell_var@@Base+0x20>
  41f4a8:	str	wzr, [x9, #268]
  41f4ac:	str	wzr, [x8, #264]
  41f4b0:	str	wzr, [x10, #280]
  41f4b4:	cbz	x28, 41f63c <snap_implicit_rules@@Base+0x230>
  41f4b8:	mov	w8, wzr
  41f4bc:	mov	w9, wzr
  41f4c0:	mov	x20, xzr
  41f4c4:	mov	x27, xzr
  41f4c8:	str	w26, [sp, #12]
  41f4cc:	str	x21, [sp, #16]
  41f4d0:	add	w9, w9, #0x1
  41f4d4:	str	w9, [x10, #280]
  41f4d8:	ldrh	w9, [x28, #48]
  41f4dc:	cmp	w8, w9
  41f4e0:	b.cs	41f4ec <snap_implicit_rules@@Base+0xe0>  // b.hs, b.nlast
  41f4e4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f4e8:	str	w9, [x8, #264]
  41f4ec:	mov	x8, x28
  41f4f0:	ldr	x21, [x8, #32]!
  41f4f4:	mov	x19, xzr
  41f4f8:	stur	x8, [x29, #-8]
  41f4fc:	cbz	x21, 41f5e4 <snap_implicit_rules@@Base+0x1d8>
  41f500:	ldr	x22, [x21, #8]
  41f504:	cbnz	x22, 41f510 <snap_implicit_rules@@Base+0x104>
  41f508:	ldr	x8, [x21, #16]
  41f50c:	ldr	x22, [x8]
  41f510:	mov	x0, x22
  41f514:	bl	406790 <strlen@plt>
  41f518:	mov	x24, x0
  41f51c:	mov	w1, #0x2f                  	// #47
  41f520:	mov	x0, x22
  41f524:	bl	406b80 <strrchr@plt>
  41f528:	mov	x23, x0
  41f52c:	cbz	x0, 41f53c <snap_implicit_rules@@Base+0x130>
  41f530:	mov	w1, #0x25                  	// #37
  41f534:	mov	x0, x23
  41f538:	bl	406cd0 <strchr@plt>
  41f53c:	ldr	x8, [x25, #256]
  41f540:	cmp	x24, x8
  41f544:	b.ls	41f54c <snap_implicit_rules@@Base+0x140>  // b.plast
  41f548:	str	x24, [x25, #256]
  41f54c:	ldr	x8, [x21]
  41f550:	add	w26, w26, #0x1
  41f554:	cmp	x8, #0x0
  41f558:	csel	x19, x21, x19, eq  // eq = none
  41f55c:	cbz	x0, 41f5d0 <snap_implicit_rules@@Base+0x1c4>
  41f560:	cmp	x23, x22
  41f564:	cinc	x8, x23, eq  // eq = none
  41f568:	sub	x23, x8, x22
  41f56c:	cmp	x23, x27
  41f570:	b.ls	41f588 <snap_implicit_rules@@Base+0x17c>  // b.plast
  41f574:	add	x1, x23, #0x1
  41f578:	mov	x0, x20
  41f57c:	bl	417854 <xrealloc@@Base>
  41f580:	mov	x20, x0
  41f584:	mov	x27, x23
  41f588:	mov	x0, x20
  41f58c:	mov	x1, x22
  41f590:	mov	x2, x23
  41f594:	bl	406750 <memcpy@plt>
  41f598:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  41f59c:	mov	x0, x20
  41f5a0:	add	x1, x1, #0x5eb
  41f5a4:	strb	wzr, [x20, x23]
  41f5a8:	bl	408db4 <dir_file_exists_p@@Base>
  41f5ac:	ldrh	w8, [x21, #32]
  41f5b0:	cmp	w0, #0x0
  41f5b4:	cset	w9, eq  // eq = none
  41f5b8:	and	w8, w8, #0xfffffeff
  41f5bc:	orr	w8, w8, w9, lsl #8
  41f5c0:	strh	w8, [x21, #32]
  41f5c4:	ldr	x21, [x21]
  41f5c8:	cbnz	x21, 41f500 <snap_implicit_rules@@Base+0xf4>
  41f5cc:	b	41f5e4 <snap_implicit_rules@@Base+0x1d8>
  41f5d0:	ldrh	w9, [x21, #32]
  41f5d4:	and	w9, w9, #0xfffffeff
  41f5d8:	strh	w9, [x21, #32]
  41f5dc:	mov	x21, x8
  41f5e0:	cbnz	x21, 41f500 <snap_implicit_rules@@Base+0xf4>
  41f5e4:	ldr	x21, [sp, #16]
  41f5e8:	cbz	x21, 41f604 <snap_implicit_rules@@Base+0x1f8>
  41f5ec:	mov	x0, x21
  41f5f0:	bl	417adc <copy_dep_chain@@Base>
  41f5f4:	ldur	x8, [x29, #-8]
  41f5f8:	cmp	x19, #0x0
  41f5fc:	csel	x8, x8, x19, eq  // eq = none
  41f600:	str	x0, [x8]
  41f604:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f608:	ldr	w8, [x8, #268]
  41f60c:	cmp	w26, w8
  41f610:	b.ls	41f61c <snap_implicit_rules@@Base+0x210>  // b.plast
  41f614:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f618:	str	w26, [x8, #268]
  41f61c:	ldr	x28, [x28]
  41f620:	adrp	x10, 43f000 <shell_var@@Base+0x20>
  41f624:	cbz	x28, 41f640 <snap_implicit_rules@@Base+0x234>
  41f628:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f62c:	ldr	w9, [x10, #280]
  41f630:	ldr	w8, [x8, #264]
  41f634:	ldr	w26, [sp, #12]
  41f638:	b	41f4d0 <snap_implicit_rules@@Base+0xc4>
  41f63c:	mov	x20, xzr
  41f640:	mov	x0, x20
  41f644:	bl	406cb0 <free@plt>
  41f648:	mov	x0, x21
  41f64c:	ldp	x20, x19, [sp, #112]
  41f650:	ldp	x22, x21, [sp, #96]
  41f654:	ldp	x24, x23, [sp, #80]
  41f658:	ldp	x26, x25, [sp, #64]
  41f65c:	ldp	x28, x27, [sp, #48]
  41f660:	ldp	x29, x30, [sp, #32]
  41f664:	add	sp, sp, #0x80
  41f668:	b	417b74 <free_ns_chain@@Base>

000000000041f66c <convert_to_pattern@@Base>:
  41f66c:	stp	x29, x30, [sp, #-96]!
  41f670:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f674:	ldr	x8, [x8, #240]
  41f678:	stp	x28, x27, [sp, #16]
  41f67c:	stp	x26, x25, [sp, #32]
  41f680:	stp	x24, x23, [sp, #48]
  41f684:	stp	x22, x21, [sp, #64]
  41f688:	stp	x20, x19, [sp, #80]
  41f68c:	ldr	x28, [x8, #24]
  41f690:	mov	x29, sp
  41f694:	cbz	x28, 41f90c <convert_to_pattern@@Base+0x2a0>
  41f698:	mov	x19, xzr
  41f69c:	mov	x20, x28
  41f6a0:	ldr	x0, [x20, #8]
  41f6a4:	cbnz	x0, 41f6b0 <convert_to_pattern@@Base+0x44>
  41f6a8:	ldr	x8, [x20, #16]
  41f6ac:	ldr	x0, [x8]
  41f6b0:	bl	406790 <strlen@plt>
  41f6b4:	ldr	x20, [x20]
  41f6b8:	cmp	x0, x19
  41f6bc:	csel	x19, x0, x19, hi  // hi = pmore
  41f6c0:	cbnz	x20, 41f6a0 <convert_to_pattern@@Base+0x34>
  41f6c4:	mov	w8, #0x1                   	// #1
  41f6c8:	bfi	x8, x19, #1, #63
  41f6cc:	add	x8, x8, #0xf
  41f6d0:	and	x8, x8, #0xfffffffffffffff0
  41f6d4:	mov	x9, sp
  41f6d8:	sub	x19, x9, x8
  41f6dc:	mov	sp, x19
  41f6e0:	cbz	x28, 41f90c <convert_to_pattern@@Base+0x2a0>
  41f6e4:	adrp	x21, 43f000 <shell_var@@Base+0x20>
  41f6e8:	ldr	x0, [x28, #8]
  41f6ec:	cbnz	x0, 41f6f8 <convert_to_pattern@@Base+0x8c>
  41f6f0:	ldr	x8, [x28, #16]
  41f6f4:	ldr	x0, [x8]
  41f6f8:	mov	x1, xzr
  41f6fc:	mov	x2, xzr
  41f700:	bl	41f92c <convert_to_pattern@@Base+0x2c0>
  41f704:	ldr	x8, [x28, #16]
  41f708:	ldr	x2, [x8, #32]
  41f70c:	cbz	x2, 41f728 <convert_to_pattern@@Base+0xbc>
  41f710:	ldr	x1, [x28, #8]
  41f714:	cbnz	x1, 41f71c <convert_to_pattern@@Base+0xb0>
  41f718:	ldr	x1, [x8]
  41f71c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  41f720:	add	x0, x0, #0x5eb
  41f724:	bl	41f92c <convert_to_pattern@@Base+0x2c0>
  41f728:	ldr	x23, [x28, #8]
  41f72c:	cbnz	x23, 41f738 <convert_to_pattern@@Base+0xcc>
  41f730:	ldr	x8, [x28, #16]
  41f734:	ldr	x23, [x8]
  41f738:	mov	x0, x23
  41f73c:	bl	406790 <strlen@plt>
  41f740:	mov	x22, x0
  41f744:	mov	x0, x19
  41f748:	mov	x1, x23
  41f74c:	mov	x2, x22
  41f750:	bl	406750 <memcpy@plt>
  41f754:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41f758:	ldr	x8, [x8, #240]
  41f75c:	ldr	x27, [x8, #24]
  41f760:	cbz	x27, 41f904 <convert_to_pattern@@Base+0x298>
  41f764:	add	x23, x19, x22
  41f768:	add	x20, x22, #0x1
  41f76c:	ldr	x25, [x27, #8]
  41f770:	mov	x0, x25
  41f774:	cbnz	x25, 41f780 <convert_to_pattern@@Base+0x114>
  41f778:	ldr	x8, [x27, #16]
  41f77c:	ldr	x0, [x8]
  41f780:	bl	406790 <strlen@plt>
  41f784:	mov	x24, x0
  41f788:	cmp	x22, x0
  41f78c:	b.ne	41f830 <convert_to_pattern@@Base+0x1c4>  // b.any
  41f790:	ldr	x8, [x28, #8]
  41f794:	mov	x9, x8
  41f798:	cbnz	x8, 41f7a4 <convert_to_pattern@@Base+0x138>
  41f79c:	ldr	x9, [x28, #16]
  41f7a0:	ldr	x9, [x9]
  41f7a4:	mov	x10, x25
  41f7a8:	cbnz	x25, 41f7b4 <convert_to_pattern@@Base+0x148>
  41f7ac:	ldr	x10, [x27, #16]
  41f7b0:	ldr	x10, [x10]
  41f7b4:	cmp	x9, x10
  41f7b8:	b.eq	41f8fc <convert_to_pattern@@Base+0x290>  // b.none
  41f7bc:	mov	x9, x8
  41f7c0:	cbnz	x8, 41f7cc <convert_to_pattern@@Base+0x160>
  41f7c4:	ldr	x9, [x28, #16]
  41f7c8:	ldr	x9, [x9]
  41f7cc:	ldrb	w9, [x9]
  41f7d0:	mov	x10, x25
  41f7d4:	cbnz	x25, 41f7e0 <convert_to_pattern@@Base+0x174>
  41f7d8:	ldr	x10, [x27, #16]
  41f7dc:	ldr	x10, [x10]
  41f7e0:	ldrb	w10, [x10]
  41f7e4:	cmp	w9, w10
  41f7e8:	b.ne	41f830 <convert_to_pattern@@Base+0x1c4>  // b.any
  41f7ec:	mov	x9, x8
  41f7f0:	cbnz	x8, 41f7fc <convert_to_pattern@@Base+0x190>
  41f7f4:	ldr	x9, [x28, #16]
  41f7f8:	ldr	x9, [x9]
  41f7fc:	ldrb	w9, [x9]
  41f800:	cbz	w9, 41f8fc <convert_to_pattern@@Base+0x290>
  41f804:	cbnz	x8, 41f810 <convert_to_pattern@@Base+0x1a4>
  41f808:	ldr	x8, [x28, #16]
  41f80c:	ldr	x8, [x8]
  41f810:	add	x0, x8, #0x1
  41f814:	mov	x8, x25
  41f818:	cbnz	x25, 41f824 <convert_to_pattern@@Base+0x1b8>
  41f81c:	ldr	x8, [x27, #16]
  41f820:	ldr	x8, [x8]
  41f824:	add	x1, x8, #0x1
  41f828:	bl	406c70 <strcmp@plt>
  41f82c:	cbz	w0, 41f8fc <convert_to_pattern@@Base+0x290>
  41f830:	cbnz	x25, 41f83c <convert_to_pattern@@Base+0x1d0>
  41f834:	ldr	x8, [x27, #16]
  41f838:	ldr	x25, [x8]
  41f83c:	add	x2, x24, #0x1
  41f840:	mov	x0, x23
  41f844:	mov	x1, x25
  41f848:	bl	406750 <memcpy@plt>
  41f84c:	mov	x0, x19
  41f850:	bl	40a568 <lookup_file@@Base>
  41f854:	cbz	x0, 41f8fc <convert_to_pattern@@Base+0x290>
  41f858:	ldr	x26, [x0, #32]
  41f85c:	mov	x25, x0
  41f860:	cbz	x26, 41f8fc <convert_to_pattern@@Base+0x290>
  41f864:	ldr	x8, [x25, #24]
  41f868:	cbz	x8, 41f898 <convert_to_pattern@@Base+0x22c>
  41f86c:	ldr	w8, [x21, #32]
  41f870:	cbnz	w8, 41f8fc <convert_to_pattern@@Base+0x290>
  41f874:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41f878:	mov	w2, #0x5                   	// #5
  41f87c:	mov	x0, xzr
  41f880:	add	x1, x1, #0x730
  41f884:	bl	406e10 <dcgettext@plt>
  41f888:	mov	x2, x0
  41f88c:	mov	x0, x26
  41f890:	mov	x1, xzr
  41f894:	bl	418744 <error@@Base>
  41f898:	cmp	x24, #0x2
  41f89c:	b.ne	41f8d4 <convert_to_pattern@@Base+0x268>  // b.any
  41f8a0:	ldrb	w8, [x23]
  41f8a4:	cmp	w8, #0x2e
  41f8a8:	b.ne	41f8d4 <convert_to_pattern@@Base+0x268>  // b.any
  41f8ac:	ldrb	w8, [x19, x20]
  41f8b0:	cmp	w8, #0x61
  41f8b4:	b.ne	41f8d4 <convert_to_pattern@@Base+0x268>  // b.any
  41f8b8:	ldr	x1, [x28, #8]
  41f8bc:	cbnz	x1, 41f8c8 <convert_to_pattern@@Base+0x25c>
  41f8c0:	ldr	x8, [x28, #16]
  41f8c4:	ldr	x1, [x8]
  41f8c8:	ldr	x2, [x25, #32]
  41f8cc:	mov	x0, xzr
  41f8d0:	bl	41f92c <convert_to_pattern@@Base+0x2c0>
  41f8d4:	ldr	x0, [x27, #8]
  41f8d8:	cbnz	x0, 41f8e4 <convert_to_pattern@@Base+0x278>
  41f8dc:	ldr	x8, [x27, #16]
  41f8e0:	ldr	x0, [x8]
  41f8e4:	ldr	x1, [x28, #8]
  41f8e8:	cbnz	x1, 41f8f4 <convert_to_pattern@@Base+0x288>
  41f8ec:	ldr	x8, [x28, #16]
  41f8f0:	ldr	x1, [x8]
  41f8f4:	ldr	x2, [x25, #32]
  41f8f8:	bl	41f92c <convert_to_pattern@@Base+0x2c0>
  41f8fc:	ldr	x27, [x27]
  41f900:	cbnz	x27, 41f76c <convert_to_pattern@@Base+0x100>
  41f904:	ldr	x28, [x28]
  41f908:	cbnz	x28, 41f6e8 <convert_to_pattern@@Base+0x7c>
  41f90c:	mov	sp, x29
  41f910:	ldp	x20, x19, [sp, #80]
  41f914:	ldp	x22, x21, [sp, #64]
  41f918:	ldp	x24, x23, [sp, #48]
  41f91c:	ldp	x26, x25, [sp, #32]
  41f920:	ldp	x28, x27, [sp, #16]
  41f924:	ldp	x29, x30, [sp], #96
  41f928:	ret
  41f92c:	stp	x29, x30, [sp, #-80]!
  41f930:	stp	x24, x23, [sp, #32]
  41f934:	mov	x23, x0
  41f938:	mov	w0, #0x8                   	// #8
  41f93c:	str	x25, [sp, #16]
  41f940:	stp	x22, x21, [sp, #48]
  41f944:	stp	x20, x19, [sp, #64]
  41f948:	mov	x29, sp
  41f94c:	mov	x19, x2
  41f950:	mov	x22, x1
  41f954:	bl	417888 <xmalloc@@Base>
  41f958:	mov	x20, x0
  41f95c:	mov	w0, #0x8                   	// #8
  41f960:	bl	417888 <xmalloc@@Base>
  41f964:	mov	x21, x0
  41f968:	cbz	x23, 41f9b8 <convert_to_pattern@@Base+0x34c>
  41f96c:	mov	x0, x23
  41f970:	bl	406790 <strlen@plt>
  41f974:	add	x9, x0, #0x11
  41f978:	mov	x8, sp
  41f97c:	and	x9, x9, #0xfffffffffffffff0
  41f980:	sub	x25, x8, x9
  41f984:	add	x24, x0, #0x1
  41f988:	mov	sp, x25
  41f98c:	mov	w8, #0x25                  	// #37
  41f990:	mov	x0, x25
  41f994:	strb	w8, [x0], #1
  41f998:	mov	x1, x23
  41f99c:	mov	x2, x24
  41f9a0:	bl	406750 <memcpy@plt>
  41f9a4:	mov	x0, x25
  41f9a8:	mov	x1, x24
  41f9ac:	bl	4203f8 <strcache_add_len@@Base>
  41f9b0:	str	x0, [x20]
  41f9b4:	b	41f9d0 <convert_to_pattern@@Base+0x364>
  41f9b8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  41f9bc:	add	x0, x0, #0x7e9
  41f9c0:	mov	w1, #0x5                   	// #5
  41f9c4:	bl	4203f8 <strcache_add_len@@Base>
  41f9c8:	str	x0, [x20]
  41f9cc:	add	x0, x0, #0x1
  41f9d0:	str	x0, [x21]
  41f9d4:	cbz	x22, 41fa2c <convert_to_pattern@@Base+0x3c0>
  41f9d8:	mov	x0, x22
  41f9dc:	bl	406790 <strlen@plt>
  41f9e0:	add	x9, x0, #0x11
  41f9e4:	mov	x8, sp
  41f9e8:	and	x9, x9, #0xfffffffffffffff0
  41f9ec:	sub	x24, x8, x9
  41f9f0:	add	x23, x0, #0x1
  41f9f4:	mov	sp, x24
  41f9f8:	mov	w8, #0x25                  	// #37
  41f9fc:	mov	x0, x24
  41fa00:	strb	w8, [x0], #1
  41fa04:	mov	x1, x22
  41fa08:	mov	x2, x23
  41fa0c:	bl	406750 <memcpy@plt>
  41fa10:	mov	w0, #0x28                  	// #40
  41fa14:	bl	4178ac <xcalloc@@Base>
  41fa18:	mov	x22, x0
  41fa1c:	mov	x0, x24
  41fa20:	mov	x1, x23
  41fa24:	bl	4203f8 <strcache_add_len@@Base>
  41fa28:	str	x0, [x22, #8]
  41fa2c:	mov	w2, #0x1                   	// #1
  41fa30:	mov	x0, x20
  41fa34:	mov	x1, x21
  41fa38:	mov	w3, wzr
  41fa3c:	mov	x4, x22
  41fa40:	mov	x5, x19
  41fa44:	mov	w6, wzr
  41fa48:	bl	41fdb8 <create_pattern_rule@@Base>
  41fa4c:	mov	sp, x29
  41fa50:	ldp	x20, x19, [sp, #64]
  41fa54:	ldp	x22, x21, [sp, #48]
  41fa58:	ldp	x24, x23, [sp, #32]
  41fa5c:	ldr	x25, [sp, #16]
  41fa60:	ldp	x29, x30, [sp], #80
  41fa64:	ret

000000000041fa68 <install_pattern_rule@@Base>:
  41fa68:	stp	x29, x30, [sp, #-64]!
  41fa6c:	stp	x20, x19, [sp, #48]
  41fa70:	mov	x19, x0
  41fa74:	mov	w0, #0x38                  	// #56
  41fa78:	str	x23, [sp, #16]
  41fa7c:	stp	x22, x21, [sp, #32]
  41fa80:	mov	x29, sp
  41fa84:	mov	w21, w1
  41fa88:	bl	417888 <xmalloc@@Base>
  41fa8c:	mov	w8, #0x1                   	// #1
  41fa90:	mov	x20, x0
  41fa94:	strh	w8, [x0, #48]
  41fa98:	mov	w0, #0x8                   	// #8
  41fa9c:	bl	417888 <xmalloc@@Base>
  41faa0:	str	x0, [x20, #8]
  41faa4:	mov	w0, #0x8                   	// #8
  41faa8:	bl	417888 <xmalloc@@Base>
  41faac:	str	x0, [x20, #24]
  41fab0:	mov	w0, #0x4                   	// #4
  41fab4:	bl	417888 <xmalloc@@Base>
  41fab8:	str	x0, [x20, #16]
  41fabc:	ldr	x23, [x19]
  41fac0:	mov	x22, x0
  41fac4:	mov	x0, x23
  41fac8:	bl	406790 <strlen@plt>
  41facc:	str	w0, [x22]
  41fad0:	ldr	x8, [x20, #8]
  41fad4:	str	x23, [x8]
  41fad8:	ldr	x0, [x20, #8]
  41fadc:	bl	41ac48 <find_percent_cached@@Base>
  41fae0:	ldr	x8, [x20, #24]
  41fae4:	mov	w1, #0x28                  	// #40
  41fae8:	mov	w2, #0x1                   	// #1
  41faec:	mov	x3, xzr
  41faf0:	str	x0, [x8]
  41faf4:	ldr	x8, [x20, #24]
  41faf8:	add	x0, x29, #0x18
  41fafc:	mov	w4, wzr
  41fb00:	ldr	x9, [x8]
  41fb04:	add	x9, x9, #0x1
  41fb08:	str	x9, [x8]
  41fb0c:	ldr	x8, [x19, #8]
  41fb10:	str	x8, [x29, #24]
  41fb14:	bl	41b114 <parse_file_seq@@Base>
  41fb18:	str	x0, [x20, #32]
  41fb1c:	mov	x0, x20
  41fb20:	mov	w1, wzr
  41fb24:	bl	41fb78 <install_pattern_rule@@Base+0x110>
  41fb28:	cbz	w0, 41fb64 <install_pattern_rule@@Base+0xfc>
  41fb2c:	cmp	w21, #0x0
  41fb30:	cset	w8, ne  // ne = any
  41fb34:	mov	w0, #0x38                  	// #56
  41fb38:	strb	w8, [x20, #50]
  41fb3c:	bl	417888 <xmalloc@@Base>
  41fb40:	str	x0, [x20, #40]
  41fb44:	stp	xzr, xzr, [x0, #8]
  41fb48:	str	xzr, [x0]
  41fb4c:	ldr	x0, [x19, #16]
  41fb50:	bl	4178d4 <xstrdup@@Base>
  41fb54:	ldr	x8, [x20, #40]
  41fb58:	mov	w9, #0x9                   	// #9
  41fb5c:	stp	x0, xzr, [x8, #24]
  41fb60:	strb	w9, [x8, #50]
  41fb64:	ldp	x20, x19, [sp, #48]
  41fb68:	ldp	x22, x21, [sp, #32]
  41fb6c:	ldr	x23, [sp, #16]
  41fb70:	ldp	x29, x30, [sp], #64
  41fb74:	ret
  41fb78:	sub	sp, sp, #0x70
  41fb7c:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41fb80:	stp	x29, x30, [sp, #16]
  41fb84:	stp	x28, x27, [sp, #32]
  41fb88:	stp	x26, x25, [sp, #48]
  41fb8c:	stp	x24, x23, [sp, #64]
  41fb90:	stp	x22, x21, [sp, #80]
  41fb94:	stp	x20, x19, [sp, #96]
  41fb98:	strh	wzr, [x0, #50]
  41fb9c:	str	xzr, [x0]
  41fba0:	add	x8, x8, #0xf8
  41fba4:	ldr	x9, [x8]
  41fba8:	mov	x19, x0
  41fbac:	add	x29, sp, #0x10
  41fbb0:	cbz	x9, 41fd88 <install_pattern_rule@@Base+0x320>
  41fbb4:	ldrh	w26, [x19, #48]
  41fbb8:	mov	x21, xzr
  41fbbc:	mov	x8, x9
  41fbc0:	stur	w1, [x29, #-4]
  41fbc4:	str	x9, [sp]
  41fbc8:	mov	x22, x8
  41fbcc:	cbz	w26, 41fd10 <install_pattern_rule@@Base+0x2a8>
  41fbd0:	ldrh	w27, [x22, #48]
  41fbd4:	mov	x28, xzr
  41fbd8:	cbz	w27, 41fc30 <install_pattern_rule@@Base+0x1c8>
  41fbdc:	ldr	x8, [x19, #8]
  41fbe0:	ldr	x24, [x22, #8]
  41fbe4:	mov	x20, xzr
  41fbe8:	ldr	x25, [x8, x28, lsl #3]
  41fbec:	add	x23, x25, #0x1
  41fbf0:	ldr	x8, [x24, x20, lsl #3]
  41fbf4:	cmp	x25, x8
  41fbf8:	b.eq	41fc20 <install_pattern_rule@@Base+0x1b8>  // b.none
  41fbfc:	ldrb	w9, [x25]
  41fc00:	ldrb	w10, [x8]
  41fc04:	cmp	w9, w10
  41fc08:	b.ne	41fc34 <install_pattern_rule@@Base+0x1cc>  // b.any
  41fc0c:	cbz	w9, 41fc20 <install_pattern_rule@@Base+0x1b8>
  41fc10:	add	x1, x8, #0x1
  41fc14:	mov	x0, x23
  41fc18:	bl	406c70 <strcmp@plt>
  41fc1c:	cbnz	w0, 41fc34 <install_pattern_rule@@Base+0x1cc>
  41fc20:	add	x20, x20, #0x1
  41fc24:	cmp	x20, x27
  41fc28:	b.cc	41fbf0 <install_pattern_rule@@Base+0x188>  // b.lo, b.ul, b.last
  41fc2c:	b	41fc34 <install_pattern_rule@@Base+0x1cc>
  41fc30:	mov	w20, wzr
  41fc34:	cmp	w20, w27
  41fc38:	b.ne	41fd04 <install_pattern_rule@@Base+0x29c>  // b.any
  41fc3c:	ldr	x23, [x22, #32]
  41fc40:	ldr	x20, [x19, #32]
  41fc44:	cbz	x23, 41fcfc <install_pattern_rule@@Base+0x294>
  41fc48:	cbz	x20, 41fcfc <install_pattern_rule@@Base+0x294>
  41fc4c:	ldr	x8, [x20, #8]
  41fc50:	mov	x10, x8
  41fc54:	cbnz	x8, 41fc60 <install_pattern_rule@@Base+0x1f8>
  41fc58:	ldr	x9, [x20, #16]
  41fc5c:	ldr	x10, [x9]
  41fc60:	ldr	x9, [x23, #8]
  41fc64:	mov	x11, x9
  41fc68:	cbnz	x9, 41fc74 <install_pattern_rule@@Base+0x20c>
  41fc6c:	ldr	x11, [x23, #16]
  41fc70:	ldr	x11, [x11]
  41fc74:	cmp	x10, x11
  41fc78:	b.eq	41fcec <install_pattern_rule@@Base+0x284>  // b.none
  41fc7c:	mov	x10, x8
  41fc80:	cbnz	x8, 41fc8c <install_pattern_rule@@Base+0x224>
  41fc84:	ldr	x10, [x20, #16]
  41fc88:	ldr	x10, [x10]
  41fc8c:	ldrb	w10, [x10]
  41fc90:	mov	x11, x9
  41fc94:	cbnz	x9, 41fca0 <install_pattern_rule@@Base+0x238>
  41fc98:	ldr	x11, [x23, #16]
  41fc9c:	ldr	x11, [x11]
  41fca0:	ldrb	w11, [x11]
  41fca4:	cmp	w10, w11
  41fca8:	b.ne	41fd04 <install_pattern_rule@@Base+0x29c>  // b.any
  41fcac:	mov	x10, x8
  41fcb0:	cbnz	x8, 41fcbc <install_pattern_rule@@Base+0x254>
  41fcb4:	ldr	x10, [x20, #16]
  41fcb8:	ldr	x10, [x10]
  41fcbc:	ldrb	w10, [x10]
  41fcc0:	cbz	w10, 41fcec <install_pattern_rule@@Base+0x284>
  41fcc4:	cbnz	x8, 41fcd0 <install_pattern_rule@@Base+0x268>
  41fcc8:	ldr	x8, [x20, #16]
  41fccc:	ldr	x8, [x8]
  41fcd0:	add	x0, x8, #0x1
  41fcd4:	cbnz	x9, 41fce0 <install_pattern_rule@@Base+0x278>
  41fcd8:	ldr	x8, [x23, #16]
  41fcdc:	ldr	x9, [x8]
  41fce0:	add	x1, x9, #0x1
  41fce4:	bl	406c70 <strcmp@plt>
  41fce8:	cbnz	w0, 41fd04 <install_pattern_rule@@Base+0x29c>
  41fcec:	ldr	x23, [x23]
  41fcf0:	ldr	x20, [x20]
  41fcf4:	cbz	x23, 41fcfc <install_pattern_rule@@Base+0x294>
  41fcf8:	cbnz	x20, 41fc4c <install_pattern_rule@@Base+0x1e4>
  41fcfc:	orr	x8, x23, x20
  41fd00:	cbz	x8, 41fd30 <install_pattern_rule@@Base+0x2c8>
  41fd04:	add	x28, x28, #0x1
  41fd08:	cmp	x28, x26
  41fd0c:	b.cc	41fbd8 <install_pattern_rule@@Base+0x170>  // b.lo, b.ul, b.last
  41fd10:	ldr	x8, [x22]
  41fd14:	mov	x21, x22
  41fd18:	cbnz	x8, 41fbc8 <install_pattern_rule@@Base+0x160>
  41fd1c:	ldr	x8, [sp]
  41fd20:	cbz	x8, 41fd80 <install_pattern_rule@@Base+0x318>
  41fd24:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41fd28:	ldr	x8, [x8, #272]
  41fd2c:	b	41fd88 <install_pattern_rule@@Base+0x320>
  41fd30:	ldur	w8, [x29, #-4]
  41fd34:	cbz	w8, 41fd6c <install_pattern_rule@@Base+0x304>
  41fd38:	mov	x0, x22
  41fd3c:	mov	x1, x21
  41fd40:	bl	42003c <print_rule_data_base@@Base+0x184>
  41fd44:	adrp	x11, 43f000 <shell_var@@Base+0x20>
  41fd48:	add	x11, x11, #0xf8
  41fd4c:	ldr	x8, [x11]
  41fd50:	adrp	x9, 43f000 <shell_var@@Base+0x20>
  41fd54:	ldr	x10, [x9, #272]
  41fd58:	cmp	x8, #0x0
  41fd5c:	csel	x8, x11, x10, eq  // eq = none
  41fd60:	str	x19, [x8]
  41fd64:	str	x19, [x9, #272]
  41fd68:	b	41fd94 <install_pattern_rule@@Base+0x32c>
  41fd6c:	mov	x0, x19
  41fd70:	mov	x1, xzr
  41fd74:	bl	42003c <print_rule_data_base@@Base+0x184>
  41fd78:	mov	w0, wzr
  41fd7c:	b	41fd98 <install_pattern_rule@@Base+0x330>
  41fd80:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41fd84:	add	x8, x8, #0xf8
  41fd88:	str	x19, [x8]
  41fd8c:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41fd90:	str	x19, [x8, #272]
  41fd94:	mov	w0, #0x1                   	// #1
  41fd98:	ldp	x20, x19, [sp, #96]
  41fd9c:	ldp	x22, x21, [sp, #80]
  41fda0:	ldp	x24, x23, [sp, #64]
  41fda4:	ldp	x26, x25, [sp, #48]
  41fda8:	ldp	x28, x27, [sp, #32]
  41fdac:	ldp	x29, x30, [sp, #16]
  41fdb0:	add	sp, sp, #0x70
  41fdb4:	ret

000000000041fdb8 <create_pattern_rule@@Base>:
  41fdb8:	stp	x29, x30, [sp, #-96]!
  41fdbc:	stp	x22, x21, [sp, #64]
  41fdc0:	mov	x22, x0
  41fdc4:	mov	w0, #0x38                  	// #56
  41fdc8:	str	x27, [sp, #16]
  41fdcc:	stp	x26, x25, [sp, #32]
  41fdd0:	stp	x24, x23, [sp, #48]
  41fdd4:	stp	x20, x19, [sp, #80]
  41fdd8:	mov	x29, sp
  41fddc:	mov	w20, w6
  41fde0:	mov	x24, x5
  41fde4:	mov	x25, x4
  41fde8:	mov	w19, w3
  41fdec:	mov	w23, w2
  41fdf0:	mov	x26, x1
  41fdf4:	and	w27, w2, #0xffff
  41fdf8:	bl	417888 <xmalloc@@Base>
  41fdfc:	and	x8, x23, #0xffff
  41fe00:	mov	x21, x0
  41fe04:	strh	w23, [x0, #48]
  41fe08:	stp	x25, x24, [x0, #32]
  41fe0c:	str	x22, [x0, #8]
  41fe10:	str	x26, [x0, #24]
  41fe14:	lsl	x0, x8, #2
  41fe18:	bl	417888 <xmalloc@@Base>
  41fe1c:	str	x0, [x21, #16]
  41fe20:	cbz	w27, 41fe80 <create_pattern_rule@@Base+0xc8>
  41fe24:	mov	x24, x0
  41fe28:	ldr	x0, [x22]
  41fe2c:	bl	406790 <strlen@plt>
  41fe30:	str	w0, [x24]
  41fe34:	ldr	x8, [x21, #24]
  41fe38:	cmp	w27, #0x1
  41fe3c:	ldr	x9, [x8]
  41fe40:	add	x9, x9, #0x1
  41fe44:	str	x9, [x8]
  41fe48:	b.eq	41fe80 <create_pattern_rule@@Base+0xc8>  // b.none
  41fe4c:	and	x23, x23, #0xffff
  41fe50:	mov	w24, #0x1                   	// #1
  41fe54:	ldr	x0, [x22, x24, lsl #3]
  41fe58:	ldr	x25, [x21, #16]
  41fe5c:	bl	406790 <strlen@plt>
  41fe60:	str	w0, [x25, x24, lsl #2]
  41fe64:	ldr	x8, [x21, #24]
  41fe68:	ldr	x9, [x8, x24, lsl #3]
  41fe6c:	add	x9, x9, #0x1
  41fe70:	str	x9, [x8, x24, lsl #3]
  41fe74:	add	x24, x24, #0x1
  41fe78:	cmp	x23, x24
  41fe7c:	b.ne	41fe54 <create_pattern_rule@@Base+0x9c>  // b.any
  41fe80:	mov	x0, x21
  41fe84:	mov	w1, w20
  41fe88:	bl	41fb78 <install_pattern_rule@@Base+0x110>
  41fe8c:	cbz	w0, 41fe9c <create_pattern_rule@@Base+0xe4>
  41fe90:	cmp	w19, #0x0
  41fe94:	cset	w8, ne  // ne = any
  41fe98:	strb	w8, [x21, #50]
  41fe9c:	ldp	x20, x19, [sp, #80]
  41fea0:	ldp	x22, x21, [sp, #64]
  41fea4:	ldp	x24, x23, [sp, #48]
  41fea8:	ldp	x26, x25, [sp, #32]
  41feac:	ldr	x27, [sp, #16]
  41feb0:	ldp	x29, x30, [sp], #96
  41feb4:	ret

000000000041feb8 <print_rule_data_base@@Base>:
  41feb8:	stp	x29, x30, [sp, #-80]!
  41febc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41fec0:	add	x1, x1, #0x76a
  41fec4:	mov	w2, #0x5                   	// #5
  41fec8:	mov	x0, xzr
  41fecc:	str	x25, [sp, #16]
  41fed0:	stp	x24, x23, [sp, #32]
  41fed4:	stp	x22, x21, [sp, #48]
  41fed8:	stp	x20, x19, [sp, #64]
  41fedc:	mov	x29, sp
  41fee0:	bl	406e10 <dcgettext@plt>
  41fee4:	bl	406c00 <puts@plt>
  41fee8:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  41feec:	ldr	x21, [x8, #248]
  41fef0:	cbz	x21, 41ffc8 <print_rule_data_base@@Base+0x110>
  41fef4:	mov	w20, wzr
  41fef8:	mov	w19, wzr
  41fefc:	mov	w22, #0x3a                  	// #58
  41ff00:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  41ff04:	mov	w24, #0x20                  	// #32
  41ff08:	mov	w0, #0xa                   	// #10
  41ff0c:	bl	406ed0 <putchar@plt>
  41ff10:	ldrh	w8, [x21, #48]
  41ff14:	cbz	w8, 41ff4c <print_rule_data_base@@Base+0x94>
  41ff18:	mov	x25, xzr
  41ff1c:	ldr	x8, [x21, #8]
  41ff20:	ldr	x1, [x23, #2512]
  41ff24:	ldr	x0, [x8, x25, lsl #3]
  41ff28:	bl	4067a0 <fputs@plt>
  41ff2c:	ldrh	w8, [x21, #48]
  41ff30:	add	x25, x25, #0x1
  41ff34:	cmp	x25, x8
  41ff38:	csel	w0, w22, w24, eq  // eq = none
  41ff3c:	bl	406ed0 <putchar@plt>
  41ff40:	ldrh	w8, [x21, #48]
  41ff44:	cmp	x25, x8
  41ff48:	b.cc	41ff1c <print_rule_data_base@@Base+0x64>  // b.lo, b.ul, b.last
  41ff4c:	ldrb	w8, [x21, #50]
  41ff50:	cbz	w8, 41ff5c <print_rule_data_base@@Base+0xa4>
  41ff54:	mov	w0, #0x3a                  	// #58
  41ff58:	bl	406ed0 <putchar@plt>
  41ff5c:	ldr	x0, [x21, #32]
  41ff60:	add	w19, w19, #0x1
  41ff64:	bl	40b88c <print_prereqs@@Base>
  41ff68:	ldr	x0, [x21, #40]
  41ff6c:	cbz	x0, 41ff74 <print_rule_data_base@@Base+0xbc>
  41ff70:	bl	408a04 <print_commands@@Base>
  41ff74:	ldrb	w8, [x21, #50]
  41ff78:	ldr	x21, [x21]
  41ff7c:	cmp	w8, #0x0
  41ff80:	cinc	w20, w20, ne  // ne = any
  41ff84:	cbnz	x21, 41ff08 <print_rule_data_base@@Base+0x50>
  41ff88:	cbz	w19, 41ffc8 <print_rule_data_base@@Base+0x110>
  41ff8c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41ff90:	add	x1, x1, #0x792
  41ff94:	mov	w2, #0x5                   	// #5
  41ff98:	mov	x0, xzr
  41ff9c:	bl	406e10 <dcgettext@plt>
  41ffa0:	ucvtf	d0, w20
  41ffa4:	ucvtf	d1, w19
  41ffa8:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  41ffac:	fdiv	d0, d0, d1
  41ffb0:	fmov	d1, x8
  41ffb4:	fmul	d0, d0, d1
  41ffb8:	mov	w1, w19
  41ffbc:	mov	w2, w20
  41ffc0:	bl	406ea0 <printf@plt>
  41ffc4:	b	41ffe4 <print_rule_data_base@@Base+0x12c>
  41ffc8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  41ffcc:	add	x1, x1, #0x77c
  41ffd0:	mov	w2, #0x5                   	// #5
  41ffd4:	mov	x0, xzr
  41ffd8:	bl	406e10 <dcgettext@plt>
  41ffdc:	bl	406c00 <puts@plt>
  41ffe0:	mov	w19, wzr
  41ffe4:	adrp	x20, 43f000 <shell_var@@Base+0x20>
  41ffe8:	ldr	w8, [x20, #280]
  41ffec:	cmp	w8, w19
  41fff0:	b.eq	41fff8 <print_rule_data_base@@Base+0x140>  // b.none
  41fff4:	cbnz	w8, 420010 <print_rule_data_base@@Base+0x158>
  41fff8:	ldp	x20, x19, [sp, #64]
  41fffc:	ldp	x22, x21, [sp, #48]
  420000:	ldp	x24, x23, [sp, #32]
  420004:	ldr	x25, [sp, #16]
  420008:	ldp	x29, x30, [sp], #80
  42000c:	ret
  420010:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  420014:	add	x1, x1, #0x7be
  420018:	mov	w2, #0x5                   	// #5
  42001c:	mov	x0, xzr
  420020:	bl	406e10 <dcgettext@plt>
  420024:	ldr	w3, [x20, #280]
  420028:	mov	x2, x0
  42002c:	mov	w1, #0x28                  	// #40
  420030:	mov	x0, xzr
  420034:	mov	w4, w19
  420038:	bl	4188bc <fatal@@Base>
  42003c:	stp	x29, x30, [sp, #-48]!
  420040:	stp	x20, x19, [sp, #32]
  420044:	str	x21, [sp, #16]
  420048:	mov	x20, x0
  42004c:	ldr	x21, [x0]
  420050:	ldr	x0, [x0, #32]
  420054:	mov	x29, sp
  420058:	mov	x19, x1
  42005c:	bl	417b74 <free_ns_chain@@Base>
  420060:	ldr	x0, [x20, #8]
  420064:	bl	406cb0 <free@plt>
  420068:	ldr	x0, [x20, #24]
  42006c:	bl	406cb0 <free@plt>
  420070:	ldr	x0, [x20, #16]
  420074:	bl	406cb0 <free@plt>
  420078:	mov	x0, x20
  42007c:	bl	406cb0 <free@plt>
  420080:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  420084:	ldr	x8, [x8, #248]
  420088:	cmp	x8, x20
  42008c:	b.eq	42009c <print_rule_data_base@@Base+0x1e4>  // b.none
  420090:	cbz	x19, 4200ac <print_rule_data_base@@Base+0x1f4>
  420094:	mov	x8, x19
  420098:	b	4200a8 <print_rule_data_base@@Base+0x1f0>
  42009c:	cbnz	x19, 4200d0 <print_rule_data_base@@Base+0x218>
  4200a0:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  4200a4:	add	x8, x8, #0xf8
  4200a8:	str	x21, [x8]
  4200ac:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  4200b0:	ldr	x9, [x8, #272]
  4200b4:	cmp	x9, x20
  4200b8:	b.ne	4200c0 <print_rule_data_base@@Base+0x208>  // b.any
  4200bc:	str	x19, [x8, #272]
  4200c0:	ldp	x20, x19, [sp, #32]
  4200c4:	ldr	x21, [sp, #16]
  4200c8:	ldp	x29, x30, [sp], #48
  4200cc:	ret
  4200d0:	bl	406bd0 <abort@plt>

00000000004200d4 <strcache_iscached@@Base>:
  4200d4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4200d8:	ldr	x8, [x8, #1696]
  4200dc:	cbz	x8, 420108 <strcache_iscached@@Base+0x34>
  4200e0:	add	x9, x8, #0xe
  4200e4:	cmp	x9, x0
  4200e8:	b.hi	420100 <strcache_iscached@@Base+0x2c>  // b.pmore
  4200ec:	ldrh	w9, [x8, #8]
  4200f0:	add	x9, x8, x9
  4200f4:	add	x9, x9, #0xe
  4200f8:	cmp	x9, x0
  4200fc:	b.hi	420164 <strcache_iscached@@Base+0x90>  // b.pmore
  420100:	ldr	x8, [x8]
  420104:	cbnz	x8, 4200e0 <strcache_iscached@@Base+0xc>
  420108:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  42010c:	ldr	x8, [x8, #1704]
  420110:	cbz	x8, 42013c <strcache_iscached@@Base+0x68>
  420114:	add	x9, x8, #0xe
  420118:	cmp	x9, x0
  42011c:	b.hi	420134 <strcache_iscached@@Base+0x60>  // b.pmore
  420120:	ldrh	w9, [x8, #8]
  420124:	add	x9, x8, x9
  420128:	add	x9, x9, #0xe
  42012c:	cmp	x9, x0
  420130:	b.hi	420164 <strcache_iscached@@Base+0x90>  // b.pmore
  420134:	ldr	x8, [x8]
  420138:	cbnz	x8, 420114 <strcache_iscached@@Base+0x40>
  42013c:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420140:	ldr	x8, [x8, #1712]
  420144:	cbz	x8, 42015c <strcache_iscached@@Base+0x88>
  420148:	add	x9, x8, #0x8
  42014c:	cmp	x9, x0
  420150:	b.eq	420164 <strcache_iscached@@Base+0x90>  // b.none
  420154:	ldr	x8, [x8]
  420158:	cbnz	x8, 420148 <strcache_iscached@@Base+0x74>
  42015c:	mov	w0, wzr
  420160:	ret
  420164:	mov	w0, #0x1                   	// #1
  420168:	ret

000000000042016c <strcache_add@@Base>:
  42016c:	stp	x29, x30, [sp, #-32]!
  420170:	str	x19, [sp, #16]
  420174:	mov	x29, sp
  420178:	mov	x19, x0
  42017c:	bl	406790 <strlen@plt>
  420180:	mov	x1, x0
  420184:	mov	x0, x19
  420188:	ldr	x19, [sp, #16]
  42018c:	ldp	x29, x30, [sp], #32
  420190:	b	420194 <strcache_add@@Base+0x28>
  420194:	stp	x29, x30, [sp, #-96]!
  420198:	mov	w8, #0xffff                	// #65535
  42019c:	stp	x22, x21, [sp, #64]
  4201a0:	stp	x20, x19, [sp, #80]
  4201a4:	mov	x20, x1
  4201a8:	cmp	x1, x8
  4201ac:	mov	x21, x0
  4201b0:	stp	x28, x27, [sp, #16]
  4201b4:	stp	x26, x25, [sp, #32]
  4201b8:	stp	x24, x23, [sp, #48]
  4201bc:	mov	x29, sp
  4201c0:	b.cc	4201fc <strcache_add@@Base+0x90>  // b.lo, b.ul, b.last
  4201c4:	add	x0, x20, #0x10
  4201c8:	bl	417888 <xmalloc@@Base>
  4201cc:	add	x23, x0, #0x8
  4201d0:	mov	x19, x0
  4201d4:	mov	x0, x23
  4201d8:	mov	x1, x21
  4201dc:	mov	x2, x20
  4201e0:	bl	406750 <memcpy@plt>
  4201e4:	strb	wzr, [x23, x20]
  4201e8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4201ec:	ldr	x9, [x8, #1712]
  4201f0:	str	x9, [x19]
  4201f4:	str	x19, [x8, #1712]
  4201f8:	b	4203d8 <strcache_add@@Base+0x26c>
  4201fc:	adrp	x0, 43e000 <stdio_traced@@Base+0x1a38>
  420200:	add	x0, x0, #0x6b8
  420204:	mov	x1, x21
  420208:	bl	40f53c <hash_find_slot@@Base>
  42020c:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420210:	ldr	x9, [x8, #1824]
  420214:	ldr	x23, [x0]
  420218:	mov	x19, x0
  42021c:	add	x9, x9, #0x1
  420220:	str	x9, [x8, #1824]
  420224:	cbz	x23, 420238 <strcache_add@@Base+0xcc>
  420228:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  42022c:	ldr	x8, [x8, #2344]
  420230:	cmp	x23, x8
  420234:	b.ne	4203d8 <strcache_add@@Base+0x26c>  // b.any
  420238:	adrp	x25, 43e000 <stdio_traced@@Base+0x1a38>
  42023c:	adrp	x11, 43e000 <stdio_traced@@Base+0x1a38>
  420240:	ldr	x8, [x25, #1808]
  420244:	ldr	x9, [x11, #1816]
  420248:	add	w24, w20, #0x1
  42024c:	ubfx	w10, w20, #1, #15
  420250:	cmp	w10, #0xff0
  420254:	add	x8, x8, #0x1
  420258:	add	x9, x9, w24, uxth
  42025c:	str	x8, [x25, #1808]
  420260:	str	x9, [x11, #1816]
  420264:	b.ls	4202cc <strcache_add@@Base+0x160>  // b.plast
  420268:	and	x8, x24, #0xffff
  42026c:	add	x0, x8, #0xe
  420270:	bl	417888 <xmalloc@@Base>
  420274:	strh	wzr, [x0, #8]
  420278:	strh	wzr, [x0, #12]
  42027c:	strh	w24, [x0, #10]
  420280:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420284:	ldr	x9, [x8, #1704]
  420288:	adrp	x10, 43e000 <stdio_traced@@Base+0x1a38>
  42028c:	add	x23, x0, #0xe
  420290:	mov	x22, x0
  420294:	str	x9, [x0]
  420298:	ldr	x9, [x10, #1832]
  42029c:	str	x0, [x8, #1704]
  4202a0:	mov	x0, x23
  4202a4:	mov	x1, x21
  4202a8:	add	x8, x9, #0x1
  4202ac:	mov	x2, x20
  4202b0:	str	x8, [x10, #1832]
  4202b4:	bl	406760 <memmove@plt>
  4202b8:	mov	w8, #0x10000               	// #65536
  4202bc:	strb	wzr, [x23, x20]
  4202c0:	strh	w24, [x22, #8]
  4202c4:	stur	w8, [x22, #10]
  4202c8:	b	4203c4 <strcache_add@@Base+0x258>
  4202cc:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4202d0:	ldr	x22, [x8, #1696]
  4202d4:	cbz	x22, 42030c <strcache_add@@Base+0x1a0>
  4202d8:	ldrh	w28, [x22, #10]
  4202dc:	cmp	w28, w24, uxth
  4202e0:	b.ls	4202f0 <strcache_add@@Base+0x184>  // b.plast
  4202e4:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  4202e8:	add	x27, x27, #0x6a0
  4202ec:	b	42034c <strcache_add@@Base+0x1e0>
  4202f0:	mov	x27, x22
  4202f4:	ldr	x22, [x22]
  4202f8:	cbz	x22, 42030c <strcache_add@@Base+0x1a0>
  4202fc:	ldrh	w28, [x22, #10]
  420300:	cmp	w28, w24, uxth
  420304:	b.ls	4202f0 <strcache_add@@Base+0x184>  // b.plast
  420308:	b	42034c <strcache_add@@Base+0x1e0>
  42030c:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  420310:	mov	w0, #0x1ff0                	// #8176
  420314:	add	x27, x27, #0x6a0
  420318:	bl	417888 <xmalloc@@Base>
  42031c:	mov	w8, #0x1fe20000            	// #534904832
  420320:	strh	wzr, [x0, #12]
  420324:	str	w8, [x0, #8]
  420328:	ldr	x8, [x27]
  42032c:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  420330:	mov	x22, x0
  420334:	mov	w28, #0x1fe2                	// #8162
  420338:	str	x8, [x0]
  42033c:	ldr	x8, [x9, #1832]
  420340:	str	x0, [x27]
  420344:	add	x8, x8, #0x1
  420348:	str	x8, [x9, #1832]
  42034c:	ldrh	w26, [x22, #8]
  420350:	and	x20, x20, #0xffff
  420354:	mov	x1, x21
  420358:	mov	x2, x20
  42035c:	add	x8, x22, x26
  420360:	add	x23, x8, #0xe
  420364:	mov	x0, x23
  420368:	bl	406760 <memmove@plt>
  42036c:	strb	wzr, [x23, x20]
  420370:	ldrh	w9, [x22, #12]
  420374:	add	w8, w26, w24
  420378:	strh	w8, [x22, #8]
  42037c:	sub	w8, w28, w24
  420380:	add	w9, w9, #0x1
  420384:	strh	w8, [x22, #10]
  420388:	strh	w9, [x22, #12]
  42038c:	ldr	x9, [x25, #1808]
  420390:	cmp	x9, #0x15
  420394:	b.cc	4203c4 <strcache_add@@Base+0x258>  // b.lo, b.ul, b.last
  420398:	adrp	x10, 43e000 <stdio_traced@@Base+0x1a38>
  42039c:	ldr	x10, [x10, #1816]
  4203a0:	udiv	x9, x10, x9
  4203a4:	cmp	x9, w8, uxth
  4203a8:	b.cc	4203c4 <strcache_add@@Base+0x258>  // b.lo, b.ul, b.last
  4203ac:	ldr	x8, [x22]
  4203b0:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  4203b4:	str	x8, [x27]
  4203b8:	ldr	x8, [x9, #1704]
  4203bc:	str	x8, [x22]
  4203c0:	str	x22, [x9, #1704]
  4203c4:	adrp	x0, 43e000 <stdio_traced@@Base+0x1a38>
  4203c8:	add	x0, x0, #0x6b8
  4203cc:	mov	x1, x23
  4203d0:	mov	x2, x19
  4203d4:	bl	40f668 <hash_insert_at@@Base>
  4203d8:	mov	x0, x23
  4203dc:	ldp	x20, x19, [sp, #80]
  4203e0:	ldp	x22, x21, [sp, #64]
  4203e4:	ldp	x24, x23, [sp, #48]
  4203e8:	ldp	x26, x25, [sp, #32]
  4203ec:	ldp	x28, x27, [sp, #16]
  4203f0:	ldp	x29, x30, [sp], #96
  4203f4:	ret

00000000004203f8 <strcache_add_len@@Base>:
  4203f8:	stp	x29, x30, [sp, #-32]!
  4203fc:	stp	x20, x19, [sp, #16]
  420400:	mov	x19, x1
  420404:	ldrb	w8, [x0, x19]
  420408:	mov	x1, x0
  42040c:	mov	x29, sp
  420410:	cbz	w8, 42043c <strcache_add_len@@Base+0x44>
  420414:	add	x9, x19, #0x10
  420418:	mov	x8, sp
  42041c:	and	x9, x9, #0xfffffffffffffff0
  420420:	sub	x20, x8, x9
  420424:	mov	sp, x20
  420428:	mov	x0, x20
  42042c:	mov	x2, x19
  420430:	bl	406750 <memcpy@plt>
  420434:	mov	x1, x20
  420438:	strb	wzr, [x20, x19]
  42043c:	mov	x0, x1
  420440:	mov	x1, x19
  420444:	bl	420194 <strcache_add@@Base+0x28>
  420448:	mov	sp, x29
  42044c:	ldp	x20, x19, [sp, #16]
  420450:	ldp	x29, x30, [sp], #32
  420454:	ret

0000000000420458 <strcache_init@@Base>:
  420458:	adrp	x0, 43e000 <stdio_traced@@Base+0x1a38>
  42045c:	adrp	x2, 420000 <print_rule_data_base@@Base+0x148>
  420460:	adrp	x3, 420000 <print_rule_data_base@@Base+0x148>
  420464:	adrp	x4, 420000 <print_rule_data_base@@Base+0x148>
  420468:	add	x0, x0, #0x6b8
  42046c:	add	x2, x2, #0x480
  420470:	add	x3, x3, #0x498
  420474:	add	x4, x4, #0x4a0
  420478:	mov	w1, #0x1f40                	// #8000
  42047c:	b	40f3e8 <hash_init@@Base>
  420480:	stp	x29, x30, [sp, #-16]!
  420484:	mov	x29, sp
  420488:	bl	40fcd8 <jhash_string@@Base>
  42048c:	mov	w0, w0
  420490:	ldp	x29, x30, [sp], #16
  420494:	ret
  420498:	mov	x0, xzr
  42049c:	ret
  4204a0:	cmp	x0, x1
  4204a4:	b.eq	4204ac <strcache_init@@Base+0x54>  // b.none
  4204a8:	b	406c70 <strcmp@plt>
  4204ac:	mov	w0, wzr
  4204b0:	ret

00000000004204b4 <strcache_print_stats@@Base>:
  4204b4:	stp	x29, x30, [sp, #-96]!
  4204b8:	stp	x26, x25, [sp, #32]
  4204bc:	stp	x24, x23, [sp, #48]
  4204c0:	stp	x22, x21, [sp, #64]
  4204c4:	stp	x20, x19, [sp, #80]
  4204c8:	adrp	x24, 43e000 <stdio_traced@@Base+0x1a38>
  4204cc:	ldr	x8, [x24, #1696]
  4204d0:	mov	x19, x0
  4204d4:	str	x27, [sp, #16]
  4204d8:	mov	x29, sp
  4204dc:	cbz	x8, 420520 <strcache_print_stats@@Base+0x6c>
  4204e0:	ldr	x8, [x8]
  4204e4:	cbz	x8, 420554 <strcache_print_stats@@Base+0xa0>
  4204e8:	mov	x25, xzr
  4204ec:	mov	x21, xzr
  4204f0:	mov	x20, xzr
  4204f4:	mov	w22, #0x1fe2                	// #8162
  4204f8:	ldrh	w9, [x8, #10]
  4204fc:	ldr	x8, [x8]
  420500:	add	x25, x25, #0x1
  420504:	cmp	x20, x9
  420508:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  42050c:	cmp	x22, x9
  420510:	add	x21, x21, x9
  420514:	csel	x22, x9, x22, hi  // hi = pmore
  420518:	cbnz	x8, 4204f8 <strcache_print_stats@@Base+0x44>
  42051c:	b	420564 <strcache_print_stats@@Base+0xb0>
  420520:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  420524:	add	x1, x1, #0x7ef
  420528:	mov	w2, #0x5                   	// #5
  42052c:	mov	x0, xzr
  420530:	bl	406e10 <dcgettext@plt>
  420534:	mov	x1, x19
  420538:	ldp	x20, x19, [sp, #80]
  42053c:	ldp	x22, x21, [sp, #64]
  420540:	ldp	x24, x23, [sp, #48]
  420544:	ldp	x26, x25, [sp, #32]
  420548:	ldr	x27, [sp, #16]
  42054c:	ldp	x29, x30, [sp], #96
  420550:	b	406ea0 <printf@plt>
  420554:	mov	x20, xzr
  420558:	mov	x21, xzr
  42055c:	mov	x25, xzr
  420560:	mov	w22, #0x1fe2                	// #8162
  420564:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420568:	ldr	x8, [x8, #1704]
  42056c:	cbz	x8, 4205a0 <strcache_print_stats@@Base+0xec>
  420570:	mov	x23, xzr
  420574:	ldrh	w9, [x8, #10]
  420578:	ldr	x8, [x8]
  42057c:	add	x23, x23, #0x1
  420580:	cmp	x20, x9
  420584:	csel	x20, x9, x20, cc  // cc = lo, ul, last
  420588:	cmp	x22, x9
  42058c:	add	x21, x21, x9
  420590:	csel	x22, x9, x22, hi  // hi = pmore
  420594:	cbnz	x8, 420574 <strcache_print_stats@@Base+0xc0>
  420598:	add	x25, x25, x23
  42059c:	b	4205a4 <strcache_print_stats@@Base+0xf0>
  4205a0:	mov	x23, xzr
  4205a4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4205a8:	add	x1, x1, #0x808
  4205ac:	mov	w2, #0x5                   	// #5
  4205b0:	mov	x0, xzr
  4205b4:	bl	406e10 <dcgettext@plt>
  4205b8:	adrp	x26, 43e000 <stdio_traced@@Base+0x1a38>
  4205bc:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  4205c0:	ldr	x4, [x26, #1808]
  4205c4:	ldr	x5, [x27, #1816]
  4205c8:	add	x2, x25, #0x1
  4205cc:	mov	x1, x19
  4205d0:	mov	x3, x23
  4205d4:	udiv	x6, x5, x4
  4205d8:	bl	406ea0 <printf@plt>
  4205dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4205e0:	add	x1, x1, #0x859
  4205e4:	mov	w2, #0x5                   	// #5
  4205e8:	mov	x0, xzr
  4205ec:	bl	406e10 <dcgettext@plt>
  4205f0:	ldr	x8, [x24, #1696]
  4205f4:	mov	w2, #0x1fe2                	// #8162
  4205f8:	mov	x1, x19
  4205fc:	ldrh	w3, [x8, #8]
  420600:	ldrh	w4, [x8, #12]
  420604:	udiv	w5, w3, w4
  420608:	bl	406ea0 <printf@plt>
  42060c:	cbz	x25, 420684 <strcache_print_stats@@Base+0x1d0>
  420610:	ldr	x8, [x24, #1696]
  420614:	ldr	x9, [x27, #1816]
  420618:	ldr	x10, [x26, #1808]
  42061c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  420620:	ldrh	w11, [x8, #8]
  420624:	ldrh	w8, [x8, #12]
  420628:	add	x1, x1, #0x8a1
  42062c:	mov	w2, #0x5                   	// #5
  420630:	mov	x0, xzr
  420634:	sub	x23, x9, x11
  420638:	sub	x24, x10, x8
  42063c:	udiv	x25, x21, x25
  420640:	bl	406e10 <dcgettext@plt>
  420644:	udiv	x4, x23, x24
  420648:	mov	x1, x19
  42064c:	mov	x2, x23
  420650:	mov	x3, x24
  420654:	bl	406ea0 <printf@plt>
  420658:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  42065c:	add	x1, x1, #0x8db
  420660:	mov	w2, #0x5                   	// #5
  420664:	mov	x0, xzr
  420668:	bl	406e10 <dcgettext@plt>
  42066c:	and	w5, w25, #0xffff
  420670:	mov	x1, x19
  420674:	mov	x2, x21
  420678:	mov	x3, x20
  42067c:	mov	x4, x22
  420680:	bl	406ea0 <printf@plt>
  420684:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  420688:	add	x1, x1, #0x923
  42068c:	mov	w2, #0x5                   	// #5
  420690:	mov	x0, xzr
  420694:	bl	406e10 <dcgettext@plt>
  420698:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  42069c:	ldr	x9, [x26, #1808]
  4206a0:	ldr	x2, [x8, #1824]
  4206a4:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  4206a8:	fmov	d0, x8
  4206ac:	mov	x1, x19
  4206b0:	sub	x8, x2, x9
  4206b4:	ucvtf	d1, x8
  4206b8:	fmul	d0, d1, d0
  4206bc:	ucvtf	d1, x2
  4206c0:	fdiv	d0, d0, d1
  4206c4:	fcvtzu	x3, d0
  4206c8:	bl	406ea0 <printf@plt>
  4206cc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4206d0:	add	x1, x1, #0x95f
  4206d4:	mov	w2, #0x5                   	// #5
  4206d8:	mov	x0, xzr
  4206dc:	bl	406e10 <dcgettext@plt>
  4206e0:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  4206e4:	ldr	x1, [x19, #2512]
  4206e8:	bl	4067a0 <fputs@plt>
  4206ec:	ldr	x1, [x19, #2512]
  4206f0:	ldp	x20, x19, [sp, #80]
  4206f4:	ldp	x22, x21, [sp, #64]
  4206f8:	ldp	x24, x23, [sp, #48]
  4206fc:	ldp	x26, x25, [sp, #32]
  420700:	ldr	x27, [sp, #16]
  420704:	adrp	x0, 43e000 <stdio_traced@@Base+0x1a38>
  420708:	add	x0, x0, #0x6b8
  42070c:	ldp	x29, x30, [sp], #96
  420710:	b	40fa00 <hash_print_stats@@Base>

0000000000420714 <create_pattern_var@@Base>:
  420714:	stp	x29, x30, [sp, #-48]!
  420718:	str	x21, [sp, #16]
  42071c:	stp	x20, x19, [sp, #32]
  420720:	mov	x29, sp
  420724:	mov	x21, x1
  420728:	mov	x19, x0
  42072c:	bl	406790 <strlen@plt>
  420730:	mov	x20, x0
  420734:	mov	w0, #0x50                  	// #80
  420738:	bl	4178ac <xcalloc@@Base>
  42073c:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  420740:	ldr	x8, [x9, #1840]
  420744:	cbz	x8, 4207a0 <create_pattern_var@@Base+0x8c>
  420748:	cmp	x20, #0xff
  42074c:	b.hi	420760 <create_pattern_var@@Base+0x4c>  // b.pmore
  420750:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  420754:	add	x9, x9, #0x738
  420758:	ldr	x9, [x9, x20, lsl #3]
  42075c:	cbnz	x9, 420790 <create_pattern_var@@Base+0x7c>
  420760:	ldr	x9, [x8, #24]
  420764:	cmp	x9, x20
  420768:	b.ls	420778 <create_pattern_var@@Base+0x64>  // b.plast
  42076c:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  420770:	add	x9, x9, #0x730
  420774:	b	420790 <create_pattern_var@@Base+0x7c>
  420778:	mov	x9, x8
  42077c:	ldr	x8, [x8]
  420780:	cbz	x8, 420790 <create_pattern_var@@Base+0x7c>
  420784:	ldr	x10, [x8, #24]
  420788:	cmp	x10, x20
  42078c:	b.ls	420778 <create_pattern_var@@Base+0x64>  // b.plast
  420790:	ldr	x8, [x9]
  420794:	str	x8, [x0]
  420798:	str	x0, [x9]
  42079c:	b	4207a8 <create_pattern_var@@Base+0x94>
  4207a0:	str	x0, [x9, #1840]
  4207a4:	str	xzr, [x0]
  4207a8:	add	x8, x21, #0x1
  4207ac:	cmp	x20, #0xff
  4207b0:	stp	x19, x20, [x0, #16]
  4207b4:	str	x8, [x0, #8]
  4207b8:	b.hi	4207c8 <create_pattern_var@@Base+0xb4>  // b.pmore
  4207bc:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4207c0:	add	x8, x8, #0x738
  4207c4:	str	x0, [x8, x20, lsl #3]
  4207c8:	ldp	x20, x19, [sp, #32]
  4207cc:	ldr	x21, [sp, #16]
  4207d0:	ldp	x29, x30, [sp], #48
  4207d4:	ret

00000000004207d8 <init_hash_global_variable_set@@Base>:
  4207d8:	adrp	x0, 43e000 <stdio_traced@@Base+0x1a38>
  4207dc:	adrp	x2, 420000 <print_rule_data_base@@Base+0x148>
  4207e0:	adrp	x3, 420000 <print_rule_data_base@@Base+0x148>
  4207e4:	adrp	x4, 420000 <print_rule_data_base@@Base+0x148>
  4207e8:	add	x0, x0, #0xf38
  4207ec:	add	x2, x2, #0x800
  4207f0:	add	x3, x3, #0x824
  4207f4:	add	x4, x4, #0x82c
  4207f8:	mov	w1, #0x20b                 	// #523
  4207fc:	b	40f3e8 <hash_init@@Base>
  420800:	stp	x29, x30, [sp, #-16]!
  420804:	ldr	x8, [x0]
  420808:	ldr	w1, [x0, #40]
  42080c:	mov	x29, sp
  420810:	mov	x0, x8
  420814:	bl	40fb74 <jhash@@Base>
  420818:	mov	w0, w0
  42081c:	ldp	x29, x30, [sp], #16
  420820:	ret
  420824:	mov	x0, xzr
  420828:	ret
  42082c:	ldr	w2, [x0, #40]
  420830:	ldr	w9, [x1, #40]
  420834:	mov	x8, x0
  420838:	subs	w0, w2, w9
  42083c:	b.eq	420844 <init_hash_global_variable_set@@Base+0x6c>  // b.none
  420840:	ret
  420844:	ldr	x0, [x8]
  420848:	ldr	x1, [x1]
  42084c:	cmp	x0, x1
  420850:	b.eq	420858 <init_hash_global_variable_set@@Base+0x80>  // b.none
  420854:	b	406c30 <memcmp@plt>
  420858:	mov	w0, wzr
  42085c:	ret

0000000000420860 <define_variable_in_set@@Base>:
  420860:	sub	sp, sp, #0x90
  420864:	stp	x28, x27, [sp, #64]
  420868:	adrp	x28, 43e000 <stdio_traced@@Base+0x1a38>
  42086c:	add	x28, x28, #0xf38
  420870:	cmp	x5, #0x0
  420874:	stp	x24, x23, [sp, #96]
  420878:	csel	x24, x28, x5, eq  // eq = none
  42087c:	stp	x26, x25, [sp, #80]
  420880:	stp	x22, x21, [sp, #112]
  420884:	mov	x25, x1
  420888:	mov	x22, x0
  42088c:	str	x0, [sp]
  420890:	mov	x1, sp
  420894:	mov	x0, x24
  420898:	stp	x29, x30, [sp, #48]
  42089c:	stp	x20, x19, [sp, #128]
  4208a0:	add	x29, sp, #0x30
  4208a4:	mov	x21, x6
  4208a8:	mov	w20, w4
  4208ac:	mov	w27, w3
  4208b0:	mov	x23, x2
  4208b4:	str	w25, [sp, #40]
  4208b8:	bl	40f53c <hash_find_slot@@Base>
  4208bc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4208c0:	ldr	w9, [x8, #3248]
  4208c4:	ldr	x19, [x0]
  4208c8:	mov	w8, #0x3                   	// #3
  4208cc:	mov	x26, x0
  4208d0:	cmp	w9, #0x0
  4208d4:	ccmp	w27, #0x1, #0x0, ne  // ne = any
  4208d8:	csel	w27, w8, w27, eq  // eq = none
  4208dc:	cbz	x19, 420950 <define_variable_in_set@@Base+0xf0>
  4208e0:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4208e4:	ldr	x8, [x8, #2344]
  4208e8:	cmp	x8, x19
  4208ec:	b.eq	420950 <define_variable_in_set@@Base+0xf0>  // b.none
  4208f0:	ldr	w8, [x19, #44]
  4208f4:	cbz	w9, 420914 <define_variable_in_set@@Base+0xb4>
  4208f8:	and	w9, w8, #0x1c000000
  4208fc:	mov	w10, #0x4000000             	// #67108864
  420900:	cmp	w9, w10
  420904:	b.ne	420914 <define_variable_in_set@@Base+0xb4>  // b.any
  420908:	and	w8, w8, #0xe3ffffff
  42090c:	orr	w8, w8, #0xc000000
  420910:	str	w8, [x19, #44]
  420914:	ubfx	w8, w8, #26, #3
  420918:	cmp	w27, w8
  42091c:	b.lt	420a7c <define_variable_in_set@@Base+0x21c>  // b.tstop
  420920:	ldr	x0, [x19, #8]
  420924:	bl	406cb0 <free@plt>
  420928:	mov	x0, x23
  42092c:	bl	4178d4 <xstrdup@@Base>
  420930:	add	x8, x19, #0x10
  420934:	str	x0, [x19, #8]
  420938:	cbz	x21, 420a58 <define_variable_in_set@@Base+0x1f8>
  42093c:	ldr	x9, [x21, #16]
  420940:	ldr	q0, [x21]
  420944:	str	x9, [x8, #16]
  420948:	str	q0, [x8]
  42094c:	b	420a5c <define_variable_in_set@@Base+0x1fc>
  420950:	mov	w0, #0x30                  	// #48
  420954:	bl	4178ac <xcalloc@@Base>
  420958:	mov	x19, x0
  42095c:	mov	x0, x22
  420960:	mov	x1, x25
  420964:	bl	4178f0 <xstrndup@@Base>
  420968:	str	x0, [x19]
  42096c:	mov	x0, x24
  420970:	mov	x1, x19
  420974:	mov	x2, x26
  420978:	str	w25, [x19, #40]
  42097c:	bl	40f668 <hash_insert_at@@Base>
  420980:	cmp	x24, x28
  420984:	b.ne	420998 <define_variable_in_set@@Base+0x138>  // b.any
  420988:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  42098c:	ldr	x9, [x8, #3984]
  420990:	add	x9, x9, #0x1
  420994:	str	x9, [x8, #3984]
  420998:	mov	x0, x23
  42099c:	bl	4178d4 <xstrdup@@Base>
  4209a0:	str	x0, [x19, #8]
  4209a4:	cbz	x21, 4209b8 <define_variable_in_set@@Base+0x158>
  4209a8:	ldr	x8, [x21, #16]
  4209ac:	ldr	q0, [x21]
  4209b0:	str	x8, [x19, #32]
  4209b4:	str	q0, [x19, #16]
  4209b8:	ldr	w8, [x19, #44]
  4209bc:	mov	w9, #0xffde                	// #65502
  4209c0:	movk	w9, #0x83ff, lsl #16
  4209c4:	and	w10, w20, #0x1
  4209c8:	bfi	w10, w27, #26, #3
  4209cc:	and	w8, w8, w9
  4209d0:	mov	w9, #0x20                  	// #32
  4209d4:	orr	w8, w10, w8
  4209d8:	movk	w9, #0x6000, lsl #16
  4209dc:	orr	w9, w8, w9
  4209e0:	str	w9, [x19, #44]
  4209e4:	ldrb	w9, [x22]
  4209e8:	sub	w10, w9, #0x61
  4209ec:	cmp	w10, #0x1a
  4209f0:	b.cc	420a14 <define_variable_in_set@@Base+0x1b4>  // b.lo, b.ul, b.last
  4209f4:	cmp	w9, #0x5f
  4209f8:	b.eq	420a14 <define_variable_in_set@@Base+0x1b4>  // b.none
  4209fc:	sub	w9, w9, #0x41
  420a00:	and	w9, w9, #0xff
  420a04:	cmp	w9, #0x19
  420a08:	b.ls	420a14 <define_variable_in_set@@Base+0x1b4>  // b.plast
  420a0c:	orr	w8, w8, #0x60000000
  420a10:	b	420a78 <define_variable_in_set@@Base+0x218>
  420a14:	add	x9, x22, #0x1
  420a18:	ldrb	w10, [x9]
  420a1c:	cmp	w10, #0x5f
  420a20:	b.eq	420a50 <define_variable_in_set@@Base+0x1f0>  // b.none
  420a24:	cbz	w10, 420a7c <define_variable_in_set@@Base+0x21c>
  420a28:	sub	w11, w10, #0x61
  420a2c:	cmp	w11, #0x1a
  420a30:	b.cc	420a50 <define_variable_in_set@@Base+0x1f0>  // b.lo, b.ul, b.last
  420a34:	sub	w11, w10, #0x41
  420a38:	and	w11, w11, #0xff
  420a3c:	cmp	w11, #0x19
  420a40:	b.ls	420a50 <define_variable_in_set@@Base+0x1f0>  // b.plast
  420a44:	sub	w11, w10, #0x30
  420a48:	cmp	w11, #0xa
  420a4c:	b.cs	420aa0 <define_variable_in_set@@Base+0x240>  // b.hs, b.nlast
  420a50:	add	x9, x9, #0x1
  420a54:	b	420a18 <define_variable_in_set@@Base+0x1b8>
  420a58:	str	xzr, [x8]
  420a5c:	ldr	w8, [x19, #44]
  420a60:	mov	w9, #0xfffe                	// #65534
  420a64:	movk	w9, #0xe3ff, lsl #16
  420a68:	and	w10, w20, #0x1
  420a6c:	and	w8, w8, w9
  420a70:	bfi	w10, w27, #26, #3
  420a74:	orr	w8, w10, w8
  420a78:	str	w8, [x19, #44]
  420a7c:	mov	x0, x19
  420a80:	ldp	x20, x19, [sp, #128]
  420a84:	ldp	x22, x21, [sp, #112]
  420a88:	ldp	x24, x23, [sp, #96]
  420a8c:	ldp	x26, x25, [sp, #80]
  420a90:	ldp	x28, x27, [sp, #64]
  420a94:	ldp	x29, x30, [sp, #48]
  420a98:	add	sp, sp, #0x90
  420a9c:	ret
  420aa0:	cbnz	w10, 420a0c <define_variable_in_set@@Base+0x1ac>
  420aa4:	b	420a7c <define_variable_in_set@@Base+0x21c>

0000000000420aa8 <free_variable_set@@Base>:
  420aa8:	stp	x29, x30, [sp, #-32]!
  420aac:	str	x19, [sp, #16]
  420ab0:	mov	x19, x0
  420ab4:	ldr	x0, [x0, #8]
  420ab8:	adrp	x1, 420000 <print_rule_data_base@@Base+0x148>
  420abc:	add	x1, x1, #0xaec
  420ac0:	mov	x29, sp
  420ac4:	bl	40f930 <hash_map@@Base>
  420ac8:	ldr	x0, [x19, #8]
  420acc:	mov	w1, #0x1                   	// #1
  420ad0:	bl	40f8ec <hash_free@@Base>
  420ad4:	ldr	x0, [x19, #8]
  420ad8:	bl	406cb0 <free@plt>
  420adc:	mov	x0, x19
  420ae0:	ldr	x19, [sp, #16]
  420ae4:	ldp	x29, x30, [sp], #32
  420ae8:	b	406cb0 <free@plt>
  420aec:	stp	x29, x30, [sp, #-32]!
  420af0:	str	x19, [sp, #16]
  420af4:	mov	x19, x0
  420af8:	ldr	x0, [x0]
  420afc:	mov	x29, sp
  420b00:	bl	406cb0 <free@plt>
  420b04:	ldr	x0, [x19, #8]
  420b08:	ldr	x19, [sp, #16]
  420b0c:	ldp	x29, x30, [sp], #32
  420b10:	b	406cb0 <free@plt>

0000000000420b14 <undefine_variable_in_set@@Base>:
  420b14:	sub	sp, sp, #0x60
  420b18:	stp	x22, x21, [sp, #64]
  420b1c:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  420b20:	add	x22, x22, #0xf38
  420b24:	cmp	x3, #0x0
  420b28:	stp	x20, x19, [sp, #80]
  420b2c:	csel	x19, x22, x3, eq  // eq = none
  420b30:	str	x0, [sp]
  420b34:	str	w1, [sp, #40]
  420b38:	mov	x1, sp
  420b3c:	mov	x0, x19
  420b40:	stp	x29, x30, [sp, #48]
  420b44:	add	x29, sp, #0x30
  420b48:	mov	w21, w2
  420b4c:	bl	40f53c <hash_find_slot@@Base>
  420b50:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  420b54:	ldr	w10, [x8, #3248]
  420b58:	ldr	x20, [x0]
  420b5c:	mov	w8, #0x3                   	// #3
  420b60:	cmp	w10, #0x0
  420b64:	ccmp	w21, #0x1, #0x0, ne  // ne = any
  420b68:	csel	w8, w8, w21, eq  // eq = none
  420b6c:	cbz	x20, 420bec <undefine_variable_in_set@@Base+0xd8>
  420b70:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  420b74:	ldr	x9, [x9, #2344]
  420b78:	cmp	x9, x20
  420b7c:	b.eq	420bec <undefine_variable_in_set@@Base+0xd8>  // b.none
  420b80:	ldr	w9, [x20, #44]
  420b84:	mov	x1, x0
  420b88:	cbz	w10, 420ba8 <undefine_variable_in_set@@Base+0x94>
  420b8c:	and	w10, w9, #0x1c000000
  420b90:	mov	w11, #0x4000000             	// #67108864
  420b94:	cmp	w10, w11
  420b98:	b.ne	420ba8 <undefine_variable_in_set@@Base+0x94>  // b.any
  420b9c:	and	w9, w9, #0xe3ffffff
  420ba0:	orr	w9, w9, #0xc000000
  420ba4:	str	w9, [x20, #44]
  420ba8:	ubfx	w9, w9, #26, #3
  420bac:	cmp	w8, w9
  420bb0:	b.lt	420bec <undefine_variable_in_set@@Base+0xd8>  // b.tstop
  420bb4:	mov	x0, x19
  420bb8:	bl	40f7ec <hash_delete_at@@Base>
  420bbc:	ldr	x0, [x20]
  420bc0:	bl	406cb0 <free@plt>
  420bc4:	ldr	x0, [x20, #8]
  420bc8:	bl	406cb0 <free@plt>
  420bcc:	mov	x0, x20
  420bd0:	bl	406cb0 <free@plt>
  420bd4:	cmp	x19, x22
  420bd8:	b.ne	420bec <undefine_variable_in_set@@Base+0xd8>  // b.any
  420bdc:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420be0:	ldr	x9, [x8, #3984]
  420be4:	add	x9, x9, #0x1
  420be8:	str	x9, [x8, #3984]
  420bec:	ldp	x20, x19, [sp, #80]
  420bf0:	ldp	x22, x21, [sp, #64]
  420bf4:	ldp	x29, x30, [sp, #48]
  420bf8:	add	sp, sp, #0x60
  420bfc:	ret

0000000000420c00 <lookup_variable@@Base>:
  420c00:	sub	sp, sp, #0x90
  420c04:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  420c08:	stp	x20, x19, [sp, #128]
  420c0c:	ldr	x20, [x8, #2440]
  420c10:	stp	x29, x30, [sp, #48]
  420c14:	stp	x28, x27, [sp, #64]
  420c18:	stp	x26, x25, [sp, #80]
  420c1c:	stp	x24, x23, [sp, #96]
  420c20:	stp	x22, x21, [sp, #112]
  420c24:	add	x29, sp, #0x30
  420c28:	str	x0, [sp]
  420c2c:	str	w1, [sp, #40]
  420c30:	cbz	x20, 420c68 <lookup_variable@@Base+0x68>
  420c34:	mov	w21, wzr
  420c38:	ldr	x0, [x20, #8]
  420c3c:	mov	x1, sp
  420c40:	bl	40f63c <hash_find_item@@Base>
  420c44:	cbz	x0, 420c58 <lookup_variable@@Base+0x58>
  420c48:	ldr	w8, [x0, #44]
  420c4c:	mov	x19, x0
  420c50:	cbz	w21, 420c90 <lookup_variable@@Base+0x90>
  420c54:	tbz	w8, #7, 420c90 <lookup_variable@@Base+0x90>
  420c58:	ldr	w8, [x20, #16]
  420c5c:	ldr	x20, [x20]
  420c60:	orr	w21, w8, w21
  420c64:	cbnz	x20, 420c38 <lookup_variable@@Base+0x38>
  420c68:	mov	x19, xzr
  420c6c:	mov	x0, x19
  420c70:	ldp	x20, x19, [sp, #128]
  420c74:	ldp	x22, x21, [sp, #112]
  420c78:	ldp	x24, x23, [sp, #96]
  420c7c:	ldp	x26, x25, [sp, #80]
  420c80:	ldp	x28, x27, [sp, #64]
  420c84:	ldp	x29, x30, [sp, #48]
  420c88:	add	sp, sp, #0x90
  420c8c:	ret
  420c90:	tbz	w8, #4, 420c6c <lookup_variable@@Base+0x6c>
  420c94:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420c98:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  420c9c:	ldr	x8, [x8, #3984]
  420ca0:	ldr	x9, [x9, #3992]
  420ca4:	cmp	x8, x9
  420ca8:	b.eq	420c6c <lookup_variable@@Base+0x6c>  // b.none
  420cac:	ldr	x8, [x19]
  420cb0:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x3290>
  420cb4:	add	x9, x9, #0x3c9
  420cb8:	cmp	x8, x9
  420cbc:	b.eq	420ce0 <lookup_variable@@Base+0xe0>  // b.none
  420cc0:	ldrb	w9, [x8]
  420cc4:	cmp	w9, #0x2e
  420cc8:	b.ne	420c6c <lookup_variable@@Base+0x6c>  // b.any
  420ccc:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  420cd0:	add	x0, x8, #0x1
  420cd4:	add	x1, x1, #0x3ca
  420cd8:	bl	406c70 <strcmp@plt>
  420cdc:	cbnz	w0, 420c6c <lookup_variable@@Base+0x6c>
  420ce0:	ldr	x21, [x19, #8]
  420ce4:	mov	x0, x21
  420ce8:	bl	406790 <strlen@plt>
  420cec:	mov	x9, #0xf7cf                	// #63439
  420cf0:	movk	x9, #0xe353, lsl #16
  420cf4:	movk	x9, #0x9ba5, lsl #32
  420cf8:	lsr	x8, x0, #2
  420cfc:	movk	x9, #0x20c4, lsl #48
  420d00:	adrp	x10, 43e000 <stdio_traced@@Base+0x1a38>
  420d04:	umulh	x8, x8, x9
  420d08:	add	x10, x10, #0xf38
  420d0c:	lsr	x8, x8, #4
  420d10:	mov	w9, #0x1f4                 	// #500
  420d14:	ldr	x25, [x10]
  420d18:	ldr	x22, [x10, #32]
  420d1c:	mul	x8, x8, x9
  420d20:	add	x20, x8, #0x1f4
  420d24:	mov	x0, x21
  420d28:	mov	x1, x20
  420d2c:	bl	417854 <xrealloc@@Base>
  420d30:	mov	x21, x0
  420d34:	cmp	x22, #0x1
  420d38:	str	x0, [x19, #8]
  420d3c:	b.lt	420de4 <lookup_variable@@Base+0x1e4>  // b.tstop
  420d40:	mov	x27, xzr
  420d44:	add	x28, x25, x22, lsl #3
  420d48:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  420d4c:	mov	w23, #0x20                  	// #32
  420d50:	ldr	x24, [x25]
  420d54:	cbz	x24, 420dd8 <lookup_variable@@Base+0x1d8>
  420d58:	ldr	x8, [x26, #2344]
  420d5c:	cmp	x8, x24
  420d60:	b.eq	420dd8 <lookup_variable@@Base+0x1d8>  // b.none
  420d64:	ldrsw	x22, [x24, #40]
  420d68:	add	x8, x22, #0x1
  420d6c:	add	x27, x27, x8
  420d70:	cmp	x27, x20
  420d74:	b.ls	420dc0 <lookup_variable@@Base+0x1c0>  // b.plast
  420d78:	mov	w9, #0x4dd3                	// #19923
  420d7c:	movk	w9, #0x1062, lsl #16
  420d80:	smull	x9, w8, w9
  420d84:	lsr	x10, x9, #63
  420d88:	asr	x9, x9, #37
  420d8c:	neg	w8, w8
  420d90:	add	w9, w9, w10
  420d94:	mov	w10, #0x1f4                 	// #500
  420d98:	madd	w8, w9, w10, w8
  420d9c:	ldr	x0, [x19, #8]
  420da0:	add	w8, w22, w8
  420da4:	add	w8, w8, #0x1f5
  420da8:	add	x20, x20, w8, sxtw
  420dac:	mov	x1, x20
  420db0:	sub	x21, x21, x0
  420db4:	bl	417854 <xrealloc@@Base>
  420db8:	add	x21, x0, x21
  420dbc:	str	x0, [x19, #8]
  420dc0:	ldr	x1, [x24]
  420dc4:	mov	x0, x21
  420dc8:	mov	x2, x22
  420dcc:	bl	406750 <memcpy@plt>
  420dd0:	add	x21, x21, x22
  420dd4:	strb	w23, [x21], #1
  420dd8:	add	x25, x25, #0x8
  420ddc:	cmp	x25, x28
  420de0:	b.cc	420d50 <lookup_variable@@Base+0x150>  // b.lo, b.ul, b.last
  420de4:	sturb	wzr, [x21, #-1]
  420de8:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  420dec:	ldr	x8, [x8, #3984]
  420df0:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  420df4:	str	x8, [x9, #3992]
  420df8:	b	420c6c <lookup_variable@@Base+0x6c>

0000000000420dfc <lookup_variable_in_set@@Base>:
  420dfc:	sub	sp, sp, #0x40
  420e00:	str	x0, [sp]
  420e04:	str	w1, [sp, #40]
  420e08:	mov	x1, sp
  420e0c:	mov	x0, x2
  420e10:	stp	x29, x30, [sp, #48]
  420e14:	add	x29, sp, #0x30
  420e18:	bl	40f63c <hash_find_item@@Base>
  420e1c:	ldp	x29, x30, [sp, #48]
  420e20:	add	sp, sp, #0x40
  420e24:	ret

0000000000420e28 <initialize_file_variables@@Base>:
  420e28:	stp	x29, x30, [sp, #-80]!
  420e2c:	stp	x24, x23, [sp, #32]
  420e30:	stp	x22, x21, [sp, #48]
  420e34:	stp	x20, x19, [sp, #64]
  420e38:	ldr	x19, [x0, #80]
  420e3c:	mov	x20, x0
  420e40:	mov	w21, w1
  420e44:	str	x25, [sp, #16]
  420e48:	mov	x29, sp
  420e4c:	cbnz	x19, 420e8c <initialize_file_variables@@Base+0x64>
  420e50:	mov	w0, #0x18                  	// #24
  420e54:	bl	417888 <xmalloc@@Base>
  420e58:	mov	x19, x0
  420e5c:	mov	w0, #0x58                  	// #88
  420e60:	bl	417888 <xmalloc@@Base>
  420e64:	adrp	x2, 420000 <print_rule_data_base@@Base+0x148>
  420e68:	adrp	x3, 420000 <print_rule_data_base@@Base+0x148>
  420e6c:	adrp	x4, 420000 <print_rule_data_base@@Base+0x148>
  420e70:	add	x2, x2, #0x800
  420e74:	add	x3, x3, #0x824
  420e78:	add	x4, x4, #0x82c
  420e7c:	mov	w1, #0x17                  	// #23
  420e80:	str	x0, [x19, #8]
  420e84:	bl	40f3e8 <hash_init@@Base>
  420e88:	str	x19, [x20, #80]
  420e8c:	ldr	x0, [x20, #104]
  420e90:	cbz	x0, 420eb8 <initialize_file_variables@@Base+0x90>
  420e94:	cmp	x0, x20
  420e98:	b.eq	420eb8 <initialize_file_variables@@Base+0x90>  // b.none
  420e9c:	mov	w1, w21
  420ea0:	bl	420e28 <initialize_file_variables@@Base>
  420ea4:	ldr	x8, [x20, #104]
  420ea8:	ldr	x8, [x8, #80]
  420eac:	str	wzr, [x19, #16]
  420eb0:	str	x8, [x19]
  420eb4:	b	420ffc <initialize_file_variables@@Base+0x1d4>
  420eb8:	ldr	x0, [x20, #96]
  420ebc:	cbz	x0, 420ed4 <initialize_file_variables@@Base+0xac>
  420ec0:	mov	w1, w21
  420ec4:	bl	420e28 <initialize_file_variables@@Base>
  420ec8:	ldr	x8, [x20, #96]
  420ecc:	ldr	x8, [x8, #80]
  420ed0:	b	420edc <initialize_file_variables@@Base+0xb4>
  420ed4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  420ed8:	add	x8, x8, #0x970
  420edc:	str	x8, [x19]
  420ee0:	mov	w8, #0x1                   	// #1
  420ee4:	str	w8, [x19, #16]
  420ee8:	cbnz	w21, 420fdc <initialize_file_variables@@Base+0x1b4>
  420eec:	ldr	w22, [x20, #136]
  420ef0:	tbnz	w22, #18, 420fdc <initialize_file_variables@@Base+0x1b4>
  420ef4:	ldr	x1, [x20]
  420ef8:	mov	x0, xzr
  420efc:	bl	421014 <initialize_file_variables@@Base+0x1ec>
  420f00:	cbz	x0, 420fd4 <initialize_file_variables@@Base+0x1ac>
  420f04:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  420f08:	ldr	x24, [x23, #2440]
  420f0c:	mov	x21, x0
  420f10:	bl	4210f8 <create_new_variable_set@@Base>
  420f14:	str	x0, [x20, #88]
  420f18:	str	x0, [x23, #2440]
  420f1c:	ldr	w25, [x21, #76]
  420f20:	ubfx	w4, w25, #23, #3
  420f24:	cmp	w4, #0x1
  420f28:	b.ne	420f70 <initialize_file_variables@@Base+0x148>  // b.any
  420f2c:	ldr	x22, [x21, #32]
  420f30:	mov	x0, x22
  420f34:	bl	406790 <strlen@plt>
  420f38:	ldr	x8, [x23, #2440]
  420f3c:	ldr	x2, [x21, #40]
  420f40:	mov	x1, x0
  420f44:	ubfx	w3, w25, #26, #3
  420f48:	ldr	x5, [x8, #8]
  420f4c:	add	x6, x21, #0x30
  420f50:	mov	x0, x22
  420f54:	mov	w4, wzr
  420f58:	bl	420860 <define_variable_in_set@@Base>
  420f5c:	ldr	w8, [x0, #44]
  420f60:	and	w8, w8, #0xfc7fffff
  420f64:	orr	w8, w8, #0x800000
  420f68:	str	w8, [x0, #44]
  420f6c:	b	420f88 <initialize_file_variables@@Base+0x160>
  420f70:	ldp	x1, x2, [x21, #32]
  420f74:	add	x0, x21, #0x30
  420f78:	ubfx	w3, w25, #26, #3
  420f7c:	mov	w5, #0x1                   	// #1
  420f80:	bl	421154 <do_variable_definition@@Base>
  420f84:	ldr	w8, [x0, #44]
  420f88:	ldr	w9, [x21, #76]
  420f8c:	lsr	w9, w9, #3
  420f90:	bfi	w8, w9, #3, #1
  420f94:	str	w8, [x0, #44]
  420f98:	ldr	w9, [x21, #76]
  420f9c:	lsr	w9, w9, #29
  420fa0:	bfi	w8, w9, #29, #2
  420fa4:	str	w8, [x0, #44]
  420fa8:	ldr	w9, [x21, #76]
  420fac:	lsr	w9, w9, #7
  420fb0:	bfi	w8, w9, #7, #1
  420fb4:	str	w8, [x0, #44]
  420fb8:	ldr	x1, [x20]
  420fbc:	mov	x0, x21
  420fc0:	bl	421014 <initialize_file_variables@@Base+0x1ec>
  420fc4:	mov	x21, x0
  420fc8:	cbnz	x0, 420f1c <initialize_file_variables@@Base+0xf4>
  420fcc:	str	x24, [x23, #2440]
  420fd0:	ldr	w22, [x20, #136]
  420fd4:	orr	w8, w22, #0x40000
  420fd8:	str	w8, [x20, #136]
  420fdc:	ldr	x8, [x20, #88]
  420fe0:	cbz	x8, 420ffc <initialize_file_variables@@Base+0x1d4>
  420fe4:	ldr	x9, [x19]
  420fe8:	str	x9, [x8]
  420fec:	ldr	w9, [x19, #16]
  420ff0:	str	w9, [x8, #16]
  420ff4:	str	x8, [x19]
  420ff8:	str	wzr, [x19, #16]
  420ffc:	ldp	x20, x19, [sp, #64]
  421000:	ldp	x22, x21, [sp, #48]
  421004:	ldp	x24, x23, [sp, #32]
  421008:	ldr	x25, [sp, #16]
  42100c:	ldp	x29, x30, [sp], #80
  421010:	ret
  421014:	stp	x29, x30, [sp, #-64]!
  421018:	stp	x20, x19, [sp, #48]
  42101c:	mov	x19, x0
  421020:	mov	x0, x1
  421024:	stp	x24, x23, [sp, #16]
  421028:	stp	x22, x21, [sp, #32]
  42102c:	mov	x29, sp
  421030:	mov	x20, x1
  421034:	bl	406790 <strlen@plt>
  421038:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  42103c:	add	x8, x8, #0x730
  421040:	cmp	x19, #0x0
  421044:	csel	x8, x8, x19, eq  // eq = none
  421048:	ldr	x19, [x8]
  42104c:	cbz	x19, 4210e0 <initialize_file_variables@@Base+0x2b8>
  421050:	mov	x21, x0
  421054:	ldr	x8, [x19, #24]
  421058:	subs	x24, x21, x8
  42105c:	b.cc	4210d8 <initialize_file_variables@@Base+0x2b0>  // b.lo, b.ul, b.last
  421060:	ldp	x23, x0, [x19, #8]
  421064:	mvn	x8, x0
  421068:	add	x22, x23, x8
  42106c:	cmp	x22, #0x1
  421070:	b.lt	421084 <initialize_file_variables@@Base+0x25c>  // b.tstop
  421074:	mov	x1, x20
  421078:	mov	x2, x22
  42107c:	bl	406a30 <strncmp@plt>
  421080:	cbnz	w0, 4210d8 <initialize_file_variables@@Base+0x2b0>
  421084:	add	x8, x20, x22
  421088:	add	x10, x24, #0x1
  42108c:	ldrb	w9, [x23]
  421090:	ldrb	w10, [x8, x10]
  421094:	cmp	w9, w10
  421098:	b.ne	4210d8 <initialize_file_variables@@Base+0x2b0>  // b.any
  42109c:	cbz	w9, 4210e0 <initialize_file_variables@@Base+0x2b8>
  4210a0:	add	x8, x24, x8
  4210a4:	add	x9, x23, #0x1
  4210a8:	add	x8, x8, #0x2
  4210ac:	cmp	x9, x8
  4210b0:	b.eq	4210e0 <initialize_file_variables@@Base+0x2b8>  // b.none
  4210b4:	ldrb	w9, [x9]
  4210b8:	ldrb	w10, [x8]
  4210bc:	cmp	w9, w10
  4210c0:	b.ne	4210d8 <initialize_file_variables@@Base+0x2b0>  // b.any
  4210c4:	cbz	w9, 4210e0 <initialize_file_variables@@Base+0x2b8>
  4210c8:	add	x0, x23, #0x2
  4210cc:	add	x1, x8, #0x1
  4210d0:	bl	406c70 <strcmp@plt>
  4210d4:	cbz	w0, 4210e0 <initialize_file_variables@@Base+0x2b8>
  4210d8:	ldr	x19, [x19]
  4210dc:	cbnz	x19, 421054 <initialize_file_variables@@Base+0x22c>
  4210e0:	mov	x0, x19
  4210e4:	ldp	x20, x19, [sp, #48]
  4210e8:	ldp	x22, x21, [sp, #32]
  4210ec:	ldp	x24, x23, [sp, #16]
  4210f0:	ldp	x29, x30, [sp], #64
  4210f4:	ret

00000000004210f8 <create_new_variable_set@@Base>:
  4210f8:	stp	x29, x30, [sp, #-32]!
  4210fc:	mov	w0, #0x58                  	// #88
  421100:	str	x19, [sp, #16]
  421104:	mov	x29, sp
  421108:	bl	417888 <xmalloc@@Base>
  42110c:	adrp	x2, 420000 <print_rule_data_base@@Base+0x148>
  421110:	adrp	x3, 420000 <print_rule_data_base@@Base+0x148>
  421114:	adrp	x4, 420000 <print_rule_data_base@@Base+0x148>
  421118:	add	x2, x2, #0x800
  42111c:	add	x3, x3, #0x824
  421120:	add	x4, x4, #0x82c
  421124:	mov	w1, #0xd                   	// #13
  421128:	mov	x19, x0
  42112c:	bl	40f3e8 <hash_init@@Base>
  421130:	mov	w0, #0x18                  	// #24
  421134:	bl	417888 <xmalloc@@Base>
  421138:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  42113c:	ldr	x8, [x8, #2440]
  421140:	str	wzr, [x0, #16]
  421144:	stp	x8, x19, [x0]
  421148:	ldr	x19, [sp, #16]
  42114c:	ldp	x29, x30, [sp], #32
  421150:	ret

0000000000421154 <do_variable_definition@@Base>:
  421154:	sub	sp, sp, #0xb0
  421158:	sub	w8, w4, #0x1
  42115c:	cmp	w8, #0x5
  421160:	stp	x29, x30, [sp, #80]
  421164:	stp	x28, x27, [sp, #96]
  421168:	stp	x26, x25, [sp, #112]
  42116c:	stp	x24, x23, [sp, #128]
  421170:	stp	x22, x21, [sp, #144]
  421174:	stp	x20, x19, [sp, #160]
  421178:	add	x29, sp, #0x50
  42117c:	b.hi	4214a4 <do_variable_definition@@Base+0x350>  // b.pmore
  421180:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x5290>
  421184:	add	x9, x9, #0x976
  421188:	adr	x10, 4211bc <do_variable_definition@@Base+0x68>
  42118c:	ldrb	w11, [x9, x8]
  421190:	add	x10, x10, x11, lsl #2
  421194:	mov	w27, w5
  421198:	mov	w24, w4
  42119c:	mov	w22, w3
  4211a0:	mov	x23, x2
  4211a4:	mov	x21, x1
  4211a8:	mov	x28, x0
  4211ac:	mov	x25, xzr
  4211b0:	mov	w20, wzr
  4211b4:	mov	w19, wzr
  4211b8:	br	x10
  4211bc:	mov	x0, x21
  4211c0:	bl	406790 <strlen@plt>
  4211c4:	mov	x1, x0
  4211c8:	cbz	w27, 4212b8 <do_variable_definition@@Base+0x164>
  4211cc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4211d0:	ldr	x8, [x8, #2440]
  4211d4:	ldr	x0, [x8, #8]
  4211d8:	str	w1, [sp, #72]
  4211dc:	add	x1, sp, #0x20
  4211e0:	str	x21, [sp, #32]
  4211e4:	bl	40f63c <hash_find_item@@Base>
  4211e8:	cbz	x0, 4212f8 <do_variable_definition@@Base+0x1a4>
  4211ec:	ldr	w8, [x0, #44]
  4211f0:	mov	x26, x0
  4211f4:	and	w20, w8, #0x2
  4211f8:	b	4212cc <do_variable_definition@@Base+0x178>
  4211fc:	mov	x0, x23
  421200:	mov	x1, xzr
  421204:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  421208:	mov	x23, x0
  42120c:	mov	w20, wzr
  421210:	mov	w19, wzr
  421214:	mov	w24, #0x1                   	// #1
  421218:	mov	x25, x0
  42121c:	b	4213b4 <do_variable_definition@@Base+0x260>
  421220:	mov	x0, x23
  421224:	mov	x1, xzr
  421228:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  42122c:	mov	x19, x0
  421230:	add	x0, sp, #0x18
  421234:	add	x1, sp, #0x10
  421238:	bl	40a36c <install_variable_buffer@@Base>
  42123c:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  421240:	ldr	x0, [x20, #4040]
  421244:	add	x1, sp, #0x20
  421248:	mov	w2, wzr
  42124c:	stp	x19, xzr, [sp, #32]
  421250:	bl	40c8d8 <func_shell_base@@Base>
  421254:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  421258:	add	x1, x1, #0x984
  42125c:	mov	w2, #0x1                   	// #1
  421260:	bl	4099c4 <variable_buffer_output@@Base>
  421264:	ldr	x0, [x20, #4040]
  421268:	bl	406b30 <strdup@plt>
  42126c:	ldp	x1, x8, [sp, #16]
  421270:	mov	x23, x0
  421274:	mov	x0, x8
  421278:	bl	40a3b8 <restore_variable_buffer@@Base>
  42127c:	mov	x0, x19
  421280:	bl	406cb0 <free@plt>
  421284:	mov	w20, wzr
  421288:	mov	w19, wzr
  42128c:	mov	w24, #0x2                   	// #2
  421290:	b	4213b0 <do_variable_definition@@Base+0x25c>
  421294:	mov	x0, x21
  421298:	bl	406790 <strlen@plt>
  42129c:	mov	x1, x0
  4212a0:	mov	x0, x21
  4212a4:	bl	420c00 <lookup_variable@@Base>
  4212a8:	mov	x25, xzr
  4212ac:	cbz	x0, 42130c <do_variable_definition@@Base+0x1b8>
  4212b0:	mov	x26, x0
  4212b4:	b	421410 <do_variable_definition@@Base+0x2bc>
  4212b8:	mov	x0, x21
  4212bc:	bl	420c00 <lookup_variable@@Base>
  4212c0:	mov	w20, wzr
  4212c4:	cbz	x0, 421494 <do_variable_definition@@Base+0x340>
  4212c8:	mov	x26, x0
  4212cc:	ldrb	w8, [x26, #44]
  4212d0:	str	w27, [sp, #12]
  4212d4:	tbnz	w8, #0, 4212e8 <do_variable_definition@@Base+0x194>
  4212d8:	cmp	w24, #0x6
  4212dc:	b.ne	42131c <do_variable_definition@@Base+0x1c8>  // b.any
  4212e0:	mov	x25, xzr
  4212e4:	b	4212f0 <do_variable_definition@@Base+0x19c>
  4212e8:	mov	x25, xzr
  4212ec:	mov	w24, #0x2                   	// #2
  4212f0:	mov	x27, x23
  4212f4:	b	421330 <do_variable_definition@@Base+0x1dc>
  4212f8:	mov	x25, xzr
  4212fc:	mov	w19, wzr
  421300:	mov	w20, #0x2                   	// #2
  421304:	mov	w24, #0x2                   	// #2
  421308:	b	4213b4 <do_variable_definition@@Base+0x260>
  42130c:	mov	w20, wzr
  421310:	mov	w24, #0x2                   	// #2
  421314:	mov	w19, #0x4                   	// #4
  421318:	b	4213b4 <do_variable_definition@@Base+0x260>
  42131c:	mov	x0, x23
  421320:	mov	x1, xzr
  421324:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  421328:	mov	x27, x0
  42132c:	mov	x25, x0
  421330:	mov	x0, x27
  421334:	bl	406790 <strlen@plt>
  421338:	cbz	x0, 421410 <do_variable_definition@@Base+0x2bc>
  42133c:	mov	x23, x0
  421340:	ldr	x0, [x26, #8]
  421344:	str	x28, [sp]
  421348:	str	w22, [sp, #8]
  42134c:	bl	406790 <strlen@plt>
  421350:	add	x22, x0, #0x1
  421354:	add	x28, x23, #0x1
  421358:	mov	x19, x0
  42135c:	add	x0, x28, x22
  421360:	bl	417888 <xmalloc@@Base>
  421364:	mov	x23, x0
  421368:	cbz	x19, 421388 <do_variable_definition@@Base+0x234>
  42136c:	ldr	x1, [x26, #8]
  421370:	mov	x0, x23
  421374:	mov	x2, x19
  421378:	bl	406750 <memcpy@plt>
  42137c:	mov	w8, #0x20                  	// #32
  421380:	strb	w8, [x23, x19]
  421384:	b	42138c <do_variable_definition@@Base+0x238>
  421388:	mov	x22, xzr
  42138c:	add	x0, x23, x22
  421390:	mov	x1, x27
  421394:	mov	x2, x28
  421398:	bl	406750 <memcpy@plt>
  42139c:	mov	x0, x25
  4213a0:	bl	406cb0 <free@plt>
  4213a4:	ldp	w22, w27, [sp, #8]
  4213a8:	ldr	x28, [sp]
  4213ac:	mov	w19, wzr
  4213b0:	mov	x25, x23
  4213b4:	mov	x0, x21
  4213b8:	bl	406790 <strlen@plt>
  4213bc:	cmp	w24, #0x2
  4213c0:	mov	x1, x0
  4213c4:	cset	w4, eq  // eq = none
  4213c8:	cbz	w27, 4213dc <do_variable_definition@@Base+0x288>
  4213cc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4213d0:	ldr	x8, [x8, #2440]
  4213d4:	ldr	x5, [x8, #8]
  4213d8:	b	4213e0 <do_variable_definition@@Base+0x28c>
  4213dc:	mov	x5, xzr
  4213e0:	mov	x0, x21
  4213e4:	mov	x2, x23
  4213e8:	mov	w3, w22
  4213ec:	mov	x6, x28
  4213f0:	bl	420860 <define_variable_in_set@@Base>
  4213f4:	ldr	w8, [x0, #44]
  4213f8:	and	w9, w20, #0x2
  4213fc:	orr	w9, w19, w9
  421400:	mov	x26, x0
  421404:	and	w8, w8, #0xfffffff9
  421408:	orr	w8, w9, w8
  42140c:	str	w8, [x0, #44]
  421410:	mov	x0, x25
  421414:	bl	406cb0 <free@plt>
  421418:	ldrb	w8, [x26, #44]
  42141c:	tbz	w8, #4, 421470 <do_variable_definition@@Base+0x31c>
  421420:	ldr	x8, [x26]
  421424:	adrp	x9, 427000 <_IO_stdin_used@@Base+0x3290>
  421428:	add	x9, x9, #0x3d4
  42142c:	cmp	x8, x9
  421430:	b.eq	421454 <do_variable_definition@@Base+0x300>  // b.none
  421434:	ldrb	w9, [x8]
  421438:	cmp	w9, #0x2e
  42143c:	b.ne	421470 <do_variable_definition@@Base+0x31c>  // b.any
  421440:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  421444:	add	x0, x8, #0x1
  421448:	add	x1, x1, #0x3d5
  42144c:	bl	406c70 <strcmp@plt>
  421450:	cbnz	w0, 421470 <do_variable_definition@@Base+0x31c>
  421454:	ldr	x8, [x26, #8]
  421458:	mov	w9, #0x9                   	// #9
  42145c:	ldrb	w8, [x8]
  421460:	cmp	w8, #0x0
  421464:	csel	w8, w9, w8, eq  // eq = none
  421468:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  42146c:	strb	w8, [x9, #2392]
  421470:	mov	x0, x26
  421474:	ldp	x20, x19, [sp, #160]
  421478:	ldp	x22, x21, [sp, #144]
  42147c:	ldp	x24, x23, [sp, #128]
  421480:	ldp	x26, x25, [sp, #112]
  421484:	ldp	x28, x27, [sp, #96]
  421488:	ldp	x29, x30, [sp, #80]
  42148c:	add	sp, sp, #0xb0
  421490:	ret
  421494:	mov	x25, xzr
  421498:	mov	w24, #0x2                   	// #2
  42149c:	mov	w19, w20
  4214a0:	b	4213b4 <do_variable_definition@@Base+0x260>
  4214a4:	bl	406bd0 <abort@plt>

00000000004214a8 <push_new_variable_scope@@Base>:
  4214a8:	stp	x29, x30, [sp, #-16]!
  4214ac:	mov	x29, sp
  4214b0:	bl	4210f8 <create_new_variable_set@@Base>
  4214b4:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4214b8:	str	x0, [x8, #2440]
  4214bc:	ldr	x10, [x0]
  4214c0:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  4214c4:	add	x9, x9, #0x970
  4214c8:	cmp	x10, x9
  4214cc:	b.ne	4214ec <push_new_variable_scope@@Base+0x44>  // b.any
  4214d0:	ldr	q0, [x9]
  4214d4:	ldr	x10, [x0, #8]
  4214d8:	str	q0, [x0]
  4214dc:	ldr	x11, [x8, #2440]
  4214e0:	mov	x0, x9
  4214e4:	str	x9, [x8, #2440]
  4214e8:	stp	x11, x10, [x9]
  4214ec:	ldp	x29, x30, [sp], #16
  4214f0:	ret

00000000004214f4 <pop_variable_scope@@Base>:
  4214f4:	stp	x29, x30, [sp, #-32]!
  4214f8:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  4214fc:	ldr	x0, [x9, #2440]
  421500:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  421504:	add	x8, x8, #0x970
  421508:	str	x19, [sp, #16]
  42150c:	cmp	x0, x8
  421510:	mov	x29, sp
  421514:	b.eq	421524 <pop_variable_scope@@Base+0x30>  // b.none
  421518:	ldp	x8, x19, [x0]
  42151c:	str	x8, [x9, #2440]
  421520:	b	421538 <pop_variable_scope@@Base+0x44>
  421524:	ldp	x0, x19, [x8]
  421528:	ldr	q0, [x0]
  42152c:	str	q0, [x8]
  421530:	ldr	w9, [x0, #16]
  421534:	str	w9, [x8, #16]
  421538:	bl	406cb0 <free@plt>
  42153c:	adrp	x1, 420000 <print_rule_data_base@@Base+0x148>
  421540:	add	x1, x1, #0xaec
  421544:	mov	x0, x19
  421548:	bl	40f930 <hash_map@@Base>
  42154c:	mov	w1, #0x1                   	// #1
  421550:	mov	x0, x19
  421554:	bl	40f8ec <hash_free@@Base>
  421558:	mov	x0, x19
  42155c:	ldr	x19, [sp, #16]
  421560:	ldp	x29, x30, [sp], #32
  421564:	b	406cb0 <free@plt>

0000000000421568 <merge_variable_set_lists@@Base>:
  421568:	sub	sp, sp, #0x70
  42156c:	stp	x29, x30, [sp, #16]
  421570:	stp	x28, x27, [sp, #32]
  421574:	stp	x26, x25, [sp, #48]
  421578:	stp	x24, x23, [sp, #64]
  42157c:	stp	x22, x21, [sp, #80]
  421580:	stp	x20, x19, [sp, #96]
  421584:	add	x29, sp, #0x10
  421588:	cbz	x1, 4216b8 <merge_variable_set_lists@@Base+0x150>
  42158c:	adrp	x23, 43b000 <memcpy@GLIBC_2.17>
  421590:	add	x23, x23, #0x970
  421594:	mov	x20, x1
  421598:	cmp	x1, x23
  42159c:	b.eq	4216b8 <merge_variable_set_lists@@Base+0x150>  // b.none
  4215a0:	ldr	x8, [x0]
  4215a4:	mov	x24, xzr
  4215a8:	cbz	x8, 421698 <merge_variable_set_lists@@Base+0x130>
  4215ac:	cmp	x8, x23
  4215b0:	b.eq	421698 <merge_variable_set_lists@@Base+0x130>  // b.none
  4215b4:	mov	x9, x8
  4215b8:	cmp	x9, x20
  4215bc:	b.eq	4216b8 <merge_variable_set_lists@@Base+0x150>  // b.none
  4215c0:	ldr	x9, [x9]
  4215c4:	cmp	x9, x23
  4215c8:	b.ne	4215b8 <merge_variable_set_lists@@Base+0x50>  // b.any
  4215cc:	cmp	x8, x23
  4215d0:	str	x0, [sp, #8]
  4215d4:	b.eq	4216d8 <merge_variable_set_lists@@Base+0x170>  // b.none
  4215d8:	adrp	x26, 43b000 <memcpy@GLIBC_2.17>
  4215dc:	adrp	x27, 43e000 <stdio_traced@@Base+0x1a38>
  4215e0:	ldp	x20, x10, [x20]
  4215e4:	mov	x24, x8
  4215e8:	ldr	x9, [x10, #32]
  4215ec:	cmp	x9, #0x1
  4215f0:	b.lt	421680 <merge_variable_set_lists@@Base+0x118>  // b.tstop
  4215f4:	ldr	x21, [x24, #8]
  4215f8:	ldr	x28, [x10]
  4215fc:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  421600:	add	x8, x8, #0xf38
  421604:	cmp	x21, x8
  421608:	add	x25, x28, x9, lsl #3
  42160c:	cset	w19, eq  // eq = none
  421610:	ldr	x22, [x28]
  421614:	cbz	x22, 421674 <merge_variable_set_lists@@Base+0x10c>
  421618:	ldr	x8, [x26, #2344]
  42161c:	cmp	x8, x22
  421620:	b.eq	421674 <merge_variable_set_lists@@Base+0x10c>  // b.none
  421624:	mov	x0, x21
  421628:	mov	x1, x22
  42162c:	bl	40f53c <hash_find_slot@@Base>
  421630:	ldr	x8, [x0]
  421634:	mov	x2, x0
  421638:	cbz	x8, 42165c <merge_variable_set_lists@@Base+0xf4>
  42163c:	ldr	x9, [x26, #2344]
  421640:	cmp	x9, x8
  421644:	b.eq	42165c <merge_variable_set_lists@@Base+0xf4>  // b.none
  421648:	ldr	x0, [x22, #8]
  42164c:	bl	406cb0 <free@plt>
  421650:	mov	x0, x22
  421654:	bl	406cb0 <free@plt>
  421658:	b	421674 <merge_variable_set_lists@@Base+0x10c>
  42165c:	mov	x0, x21
  421660:	mov	x1, x22
  421664:	bl	40f668 <hash_insert_at@@Base>
  421668:	ldr	x8, [x27, #3984]
  42166c:	add	x8, x8, x19
  421670:	str	x8, [x27, #3984]
  421674:	add	x28, x28, #0x8
  421678:	cmp	x28, x25
  42167c:	b.cc	421610 <merge_variable_set_lists@@Base+0xa8>  // b.lo, b.ul, b.last
  421680:	cmp	x20, x23
  421684:	b.eq	42169c <merge_variable_set_lists@@Base+0x134>  // b.none
  421688:	ldr	x8, [x24]
  42168c:	cmp	x8, x23
  421690:	b.ne	4215e0 <merge_variable_set_lists@@Base+0x78>  // b.any
  421694:	b	42169c <merge_variable_set_lists@@Base+0x134>
  421698:	str	x0, [sp, #8]
  42169c:	ldr	x8, [sp, #8]
  4216a0:	cmp	x20, x23
  4216a4:	b.eq	4216b8 <merge_variable_set_lists@@Base+0x150>  // b.none
  4216a8:	cbz	x24, 4216b4 <merge_variable_set_lists@@Base+0x14c>
  4216ac:	str	x20, [x24]
  4216b0:	b	4216b8 <merge_variable_set_lists@@Base+0x150>
  4216b4:	str	x20, [x8]
  4216b8:	ldp	x20, x19, [sp, #96]
  4216bc:	ldp	x22, x21, [sp, #80]
  4216c0:	ldp	x24, x23, [sp, #64]
  4216c4:	ldp	x26, x25, [sp, #48]
  4216c8:	ldp	x28, x27, [sp, #32]
  4216cc:	ldp	x29, x30, [sp, #16]
  4216d0:	add	sp, sp, #0x70
  4216d4:	ret
  4216d8:	mov	x24, xzr
  4216dc:	b	42169c <merge_variable_set_lists@@Base+0x134>

00000000004216e0 <define_automatic_variables@@Base>:
  4216e0:	sub	sp, sp, #0x100
  4216e4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  4216e8:	ldr	w2, [x8, #56]
  4216ec:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4216f0:	add	x1, x1, #0x7e6
  4216f4:	add	x0, sp, #0x8
  4216f8:	stp	x29, x30, [sp, #208]
  4216fc:	str	x21, [sp, #224]
  421700:	stp	x20, x19, [sp, #240]
  421704:	add	x29, sp, #0xd0
  421708:	bl	406830 <sprintf@plt>
  42170c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  421710:	ldr	x8, [x20, #2440]
  421714:	adrp	x0, 427000 <_IO_stdin_used@@Base+0x3290>
  421718:	add	x0, x0, #0x4d2
  42171c:	add	x2, sp, #0x8
  421720:	ldr	x5, [x8, #8]
  421724:	mov	w1, #0x9                   	// #9
  421728:	mov	w3, #0x1                   	// #1
  42172c:	mov	w4, wzr
  421730:	mov	x6, xzr
  421734:	bl	420860 <define_variable_in_set@@Base>
  421738:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  42173c:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  421740:	ldr	x8, [x8, #4024]
  421744:	ldr	x2, [x9, #2448]
  421748:	adrp	x3, 426000 <_IO_stdin_used@@Base+0x2290>
  42174c:	add	x3, x3, #0x5eb
  421750:	cbz	x8, 421774 <define_automatic_variables@@Base+0x94>
  421754:	ldrb	w9, [x8]
  421758:	adrp	x10, 428000 <_IO_stdin_used@@Base+0x4290>
  42175c:	add	x10, x10, #0x616
  421760:	cmp	w9, #0x0
  421764:	csel	x9, x3, x10, eq  // eq = none
  421768:	csel	x4, x3, x8, eq  // eq = none
  42176c:	mov	x3, x9
  421770:	b	421778 <define_automatic_variables@@Base+0x98>
  421774:	mov	x4, x3
  421778:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  42177c:	add	x1, x1, #0x5b0
  421780:	add	x0, sp, #0x8
  421784:	bl	406830 <sprintf@plt>
  421788:	ldr	x8, [x20, #2440]
  42178c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421790:	add	x0, x0, #0x986
  421794:	add	x2, sp, #0x8
  421798:	ldr	x5, [x8, #8]
  42179c:	mov	w1, #0xc                   	// #12
  4217a0:	mov	w3, wzr
  4217a4:	mov	w4, wzr
  4217a8:	mov	x6, xzr
  4217ac:	bl	420860 <define_variable_in_set@@Base>
  4217b0:	ldr	x8, [x20, #2440]
  4217b4:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  4217b8:	ldr	x2, [x9, #2456]
  4217bc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4217c0:	ldr	x5, [x8, #8]
  4217c4:	add	x0, x0, #0x993
  4217c8:	mov	w1, #0x9                   	// #9
  4217cc:	mov	w3, wzr
  4217d0:	mov	w4, wzr
  4217d4:	mov	x6, xzr
  4217d8:	bl	420860 <define_variable_in_set@@Base>
  4217dc:	ldr	x8, [x20, #2440]
  4217e0:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  4217e4:	ldr	x2, [x21, #2352]
  4217e8:	adrp	x0, 428000 <_IO_stdin_used@@Base+0x4290>
  4217ec:	ldr	x5, [x8, #8]
  4217f0:	add	x0, x0, #0xdfb
  4217f4:	mov	w1, #0x5                   	// #5
  4217f8:	mov	w3, wzr
  4217fc:	mov	w4, wzr
  421800:	mov	x6, xzr
  421804:	bl	420860 <define_variable_in_set@@Base>
  421808:	mov	x19, x0
  42180c:	ldr	x0, [x0, #8]
  421810:	ldrb	w8, [x0]
  421814:	cbz	w8, 421830 <define_automatic_variables@@Base+0x150>
  421818:	ldr	w8, [x19, #44]
  42181c:	lsr	w8, w8, #26
  421820:	orr	w8, w8, #0x2
  421824:	and	w8, w8, #0x7
  421828:	cmp	w8, #0x3
  42182c:	b.ne	421850 <define_automatic_variables@@Base+0x170>  // b.any
  421830:	bl	406cb0 <free@plt>
  421834:	ldr	w8, [x19, #44]
  421838:	and	w8, w8, #0xe3ffffff
  42183c:	orr	w8, w8, #0x8000000
  421840:	str	w8, [x19, #44]
  421844:	ldr	x0, [x21, #2352]
  421848:	bl	4178d4 <xstrdup@@Base>
  42184c:	str	x0, [x19, #8]
  421850:	ldr	x8, [x20, #2440]
  421854:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421858:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  42185c:	add	x0, x0, #0x99d
  421860:	ldr	x5, [x8, #8]
  421864:	add	x2, x2, #0x5eb
  421868:	mov	w1, #0x9                   	// #9
  42186c:	mov	w3, wzr
  421870:	mov	w4, wzr
  421874:	mov	x6, xzr
  421878:	bl	420860 <define_variable_in_set@@Base>
  42187c:	ldr	w8, [x0, #44]
  421880:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421884:	add	x2, x2, #0x9aa
  421888:	mov	w1, #0x2                   	// #2
  42188c:	and	w8, w8, #0x9fffffff
  421890:	orr	w8, w8, #0x40000000
  421894:	str	w8, [x0, #44]
  421898:	ldr	x8, [x20, #2440]
  42189c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4218a0:	add	x0, x0, #0x9a7
  4218a4:	mov	w3, #0x6                   	// #6
  4218a8:	ldr	x5, [x8, #8]
  4218ac:	mov	w4, #0x1                   	// #1
  4218b0:	mov	x6, xzr
  4218b4:	bl	420860 <define_variable_in_set@@Base>
  4218b8:	ldr	x8, [x20, #2440]
  4218bc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4218c0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  4218c4:	add	x0, x0, #0x9c5
  4218c8:	ldr	x5, [x8, #8]
  4218cc:	add	x2, x2, #0x9c8
  4218d0:	mov	w1, #0x2                   	// #2
  4218d4:	mov	w3, #0x6                   	// #6
  4218d8:	mov	w4, #0x1                   	// #1
  4218dc:	mov	x6, xzr
  4218e0:	bl	420860 <define_variable_in_set@@Base>
  4218e4:	ldr	x8, [x20, #2440]
  4218e8:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4218ec:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  4218f0:	add	x0, x0, #0x9e3
  4218f4:	ldr	x5, [x8, #8]
  4218f8:	add	x2, x2, #0x9e6
  4218fc:	mov	w1, #0x2                   	// #2
  421900:	mov	w3, #0x6                   	// #6
  421904:	mov	w4, #0x1                   	// #1
  421908:	mov	x6, xzr
  42190c:	bl	420860 <define_variable_in_set@@Base>
  421910:	ldr	x8, [x20, #2440]
  421914:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421918:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  42191c:	add	x0, x0, #0xa01
  421920:	ldr	x5, [x8, #8]
  421924:	add	x2, x2, #0xa04
  421928:	mov	w1, #0x2                   	// #2
  42192c:	mov	w3, #0x6                   	// #6
  421930:	mov	w4, #0x1                   	// #1
  421934:	mov	x6, xzr
  421938:	bl	420860 <define_variable_in_set@@Base>
  42193c:	ldr	x8, [x20, #2440]
  421940:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421944:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421948:	add	x0, x0, #0xa1f
  42194c:	ldr	x5, [x8, #8]
  421950:	add	x2, x2, #0xa22
  421954:	mov	w1, #0x2                   	// #2
  421958:	mov	w3, #0x6                   	// #6
  42195c:	mov	w4, #0x1                   	// #1
  421960:	mov	x6, xzr
  421964:	bl	420860 <define_variable_in_set@@Base>
  421968:	ldr	x8, [x20, #2440]
  42196c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421970:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421974:	add	x0, x0, #0xa3d
  421978:	ldr	x5, [x8, #8]
  42197c:	add	x2, x2, #0xa40
  421980:	mov	w1, #0x2                   	// #2
  421984:	mov	w3, #0x6                   	// #6
  421988:	mov	w4, #0x1                   	// #1
  42198c:	mov	x6, xzr
  421990:	bl	420860 <define_variable_in_set@@Base>
  421994:	ldr	x8, [x20, #2440]
  421998:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  42199c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  4219a0:	add	x0, x0, #0xa5b
  4219a4:	ldr	x5, [x8, #8]
  4219a8:	add	x2, x2, #0xa5e
  4219ac:	mov	w1, #0x2                   	// #2
  4219b0:	mov	w3, #0x6                   	// #6
  4219b4:	mov	w4, #0x1                   	// #1
  4219b8:	mov	x6, xzr
  4219bc:	bl	420860 <define_variable_in_set@@Base>
  4219c0:	ldr	x8, [x20, #2440]
  4219c4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4219c8:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  4219cc:	add	x0, x0, #0xa79
  4219d0:	ldr	x5, [x8, #8]
  4219d4:	add	x2, x2, #0xa7c
  4219d8:	mov	w1, #0x2                   	// #2
  4219dc:	mov	w3, #0x6                   	// #6
  4219e0:	mov	w4, #0x1                   	// #1
  4219e4:	mov	x6, xzr
  4219e8:	bl	420860 <define_variable_in_set@@Base>
  4219ec:	ldr	x8, [x20, #2440]
  4219f0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4219f4:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  4219f8:	add	x0, x0, #0xa89
  4219fc:	ldr	x5, [x8, #8]
  421a00:	add	x2, x2, #0xa8c
  421a04:	mov	w1, #0x2                   	// #2
  421a08:	mov	w3, #0x6                   	// #6
  421a0c:	mov	w4, #0x1                   	// #1
  421a10:	mov	x6, xzr
  421a14:	bl	420860 <define_variable_in_set@@Base>
  421a18:	ldr	x8, [x20, #2440]
  421a1c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421a20:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421a24:	add	x0, x0, #0xa99
  421a28:	ldr	x5, [x8, #8]
  421a2c:	add	x2, x2, #0xa9c
  421a30:	mov	w1, #0x2                   	// #2
  421a34:	mov	w3, #0x6                   	// #6
  421a38:	mov	w4, #0x1                   	// #1
  421a3c:	mov	x6, xzr
  421a40:	bl	420860 <define_variable_in_set@@Base>
  421a44:	ldr	x8, [x20, #2440]
  421a48:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421a4c:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421a50:	add	x0, x0, #0xaa9
  421a54:	ldr	x5, [x8, #8]
  421a58:	add	x2, x2, #0xaac
  421a5c:	mov	w1, #0x2                   	// #2
  421a60:	mov	w3, #0x6                   	// #6
  421a64:	mov	w4, #0x1                   	// #1
  421a68:	mov	x6, xzr
  421a6c:	bl	420860 <define_variable_in_set@@Base>
  421a70:	ldr	x8, [x20, #2440]
  421a74:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421a78:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421a7c:	add	x0, x0, #0xab9
  421a80:	ldr	x5, [x8, #8]
  421a84:	add	x2, x2, #0xabc
  421a88:	mov	w1, #0x2                   	// #2
  421a8c:	mov	w3, #0x6                   	// #6
  421a90:	mov	w4, #0x1                   	// #1
  421a94:	mov	x6, xzr
  421a98:	bl	420860 <define_variable_in_set@@Base>
  421a9c:	ldr	x8, [x20, #2440]
  421aa0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421aa4:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421aa8:	add	x0, x0, #0xac9
  421aac:	ldr	x5, [x8, #8]
  421ab0:	add	x2, x2, #0xacc
  421ab4:	mov	w1, #0x2                   	// #2
  421ab8:	mov	w3, #0x6                   	// #6
  421abc:	mov	w4, #0x1                   	// #1
  421ac0:	mov	x6, xzr
  421ac4:	bl	420860 <define_variable_in_set@@Base>
  421ac8:	ldr	x8, [x20, #2440]
  421acc:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  421ad0:	adrp	x2, 429000 <_IO_stdin_used@@Base+0x5290>
  421ad4:	add	x0, x0, #0xad9
  421ad8:	ldr	x5, [x8, #8]
  421adc:	add	x2, x2, #0xadc
  421ae0:	mov	w1, #0x2                   	// #2
  421ae4:	mov	w3, #0x6                   	// #6
  421ae8:	mov	w4, #0x1                   	// #1
  421aec:	mov	x6, xzr
  421af0:	bl	420860 <define_variable_in_set@@Base>
  421af4:	ldp	x20, x19, [sp, #240]
  421af8:	ldr	x21, [sp, #224]
  421afc:	ldp	x29, x30, [sp, #208]
  421b00:	add	sp, sp, #0x100
  421b04:	ret

0000000000421b08 <target_environment@@Base>:
  421b08:	sub	sp, sp, #0xf0
  421b0c:	adrp	x9, 43b000 <memcpy@GLIBC_2.17>
  421b10:	add	x8, x0, #0x50
  421b14:	add	x9, x9, #0x988
  421b18:	cmp	x0, #0x0
  421b1c:	stp	x29, x30, [sp, #144]
  421b20:	stp	x28, x27, [sp, #160]
  421b24:	stp	x26, x25, [sp, #176]
  421b28:	stp	x24, x23, [sp, #192]
  421b2c:	stp	x22, x21, [sp, #208]
  421b30:	stp	x20, x19, [sp, #224]
  421b34:	csel	x8, x9, x8, eq  // eq = none
  421b38:	ldr	x25, [x8]
  421b3c:	adrp	x2, 420000 <print_rule_data_base@@Base+0x148>
  421b40:	adrp	x3, 420000 <print_rule_data_base@@Base+0x148>
  421b44:	adrp	x4, 420000 <print_rule_data_base@@Base+0x148>
  421b48:	str	x0, [sp]
  421b4c:	add	x2, x2, #0x800
  421b50:	add	x3, x3, #0x824
  421b54:	add	x4, x4, #0x82c
  421b58:	add	x0, sp, #0x8
  421b5c:	mov	w1, #0x20b                 	// #523
  421b60:	add	x29, sp, #0x90
  421b64:	bl	40f3e8 <hash_init@@Base>
  421b68:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  421b6c:	cbz	x25, 421cec <target_environment@@Base+0x1e4>
  421b70:	mov	w26, #0x8                   	// #8
  421b74:	adrp	x20, 43e000 <stdio_traced@@Base+0x1a38>
  421b78:	adrp	x27, 428000 <_IO_stdin_used@@Base+0x4290>
  421b7c:	adrp	x28, 43e000 <stdio_traced@@Base+0x1a38>
  421b80:	movk	w26, #0x6000, lsl #16
  421b84:	add	x20, x20, #0xf38
  421b88:	add	x27, x27, #0xdfb
  421b8c:	add	x28, x28, #0xfe0
  421b90:	ldr	x9, [x25, #8]
  421b94:	ldr	x8, [x9, #32]
  421b98:	cmp	x8, #0x1
  421b9c:	b.lt	421ce4 <target_environment@@Base+0x1dc>  // b.tstop
  421ba0:	ldr	x19, [x9]
  421ba4:	add	x21, x19, x8, lsl #3
  421ba8:	ldr	x22, [x19]
  421bac:	cbz	x22, 421cd8 <target_environment@@Base+0x1d0>
  421bb0:	ldr	x8, [x24, #2344]
  421bb4:	cmp	x8, x22
  421bb8:	b.eq	421cd8 <target_environment@@Base+0x1d0>  // b.none
  421bbc:	ldr	w8, [x22, #44]
  421bc0:	bics	wzr, w26, w8
  421bc4:	b.ne	421c08 <target_environment@@Base+0x100>  // b.any
  421bc8:	ldr	x23, [x22]
  421bcc:	mov	x0, x23
  421bd0:	bl	406790 <strlen@plt>
  421bd4:	stur	w0, [x29, #-8]
  421bd8:	sub	x1, x29, #0x30
  421bdc:	mov	x0, x20
  421be0:	stur	x23, [x29, #-48]
  421be4:	bl	40f63c <hash_find_item@@Base>
  421be8:	cbz	x0, 421c04 <target_environment@@Base+0xfc>
  421bec:	ldr	w9, [x0, #44]
  421bf0:	ldr	w8, [x22, #44]
  421bf4:	lsr	w9, w9, #29
  421bf8:	bfi	w8, w9, #29, #2
  421bfc:	str	w8, [x22, #44]
  421c00:	b	421c08 <target_environment@@Base+0x100>
  421c04:	ldr	w8, [x22, #44]
  421c08:	ubfx	w9, w8, #29, #2
  421c0c:	cmp	w9, #0x1
  421c10:	b.eq	421c64 <target_environment@@Base+0x15c>  // b.none
  421c14:	cmp	w9, #0x2
  421c18:	b.eq	421ca0 <target_environment@@Base+0x198>  // b.none
  421c1c:	cmp	w9, #0x3
  421c20:	b.ne	421ca8 <target_environment@@Base+0x1a0>  // b.any
  421c24:	ubfx	w9, w8, #26, #3
  421c28:	cbz	w9, 421cd8 <target_environment@@Base+0x1d0>
  421c2c:	cmp	w9, #0x6
  421c30:	b.eq	421cd8 <target_environment@@Base+0x1d0>  // b.none
  421c34:	tbz	w8, #5, 421cd8 <target_environment@@Base+0x1d0>
  421c38:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  421c3c:	ldr	w8, [x8, #284]
  421c40:	cbnz	w8, 421ca8 <target_environment@@Base+0x1a0>
  421c44:	cmp	w9, #0x4
  421c48:	b.hi	421cd8 <target_environment@@Base+0x1d0>  // b.pmore
  421c4c:	mov	w8, #0x1                   	// #1
  421c50:	lsl	w8, w8, w9
  421c54:	mov	w9, #0x1a                  	// #26
  421c58:	tst	w8, w9
  421c5c:	b.ne	421ca8 <target_environment@@Base+0x1a0>  // b.any
  421c60:	b	421cd8 <target_environment@@Base+0x1d0>
  421c64:	ldr	x8, [x22]
  421c68:	cmp	x8, x27
  421c6c:	b.eq	421c90 <target_environment@@Base+0x188>  // b.none
  421c70:	ldrb	w9, [x8]
  421c74:	cmp	w9, #0x53
  421c78:	b.ne	421cd8 <target_environment@@Base+0x1d0>  // b.any
  421c7c:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  421c80:	add	x0, x8, #0x1
  421c84:	add	x1, x1, #0xdfc
  421c88:	bl	406c70 <strcmp@plt>
  421c8c:	cbnz	w0, 421cd8 <target_environment@@Base+0x1d0>
  421c90:	ldr	x8, [x28, #8]
  421c94:	mov	x22, x28
  421c98:	cbnz	x8, 421ca8 <target_environment@@Base+0x1a0>
  421c9c:	b	421cd8 <target_environment@@Base+0x1d0>
  421ca0:	tst	w8, #0x1c000000
  421ca4:	b.eq	421cd8 <target_environment@@Base+0x1d0>  // b.none
  421ca8:	add	x0, sp, #0x8
  421cac:	mov	x1, x22
  421cb0:	bl	40f53c <hash_find_slot@@Base>
  421cb4:	ldr	x8, [x0]
  421cb8:	mov	x2, x0
  421cbc:	cbz	x8, 421ccc <target_environment@@Base+0x1c4>
  421cc0:	ldr	x9, [x24, #2344]
  421cc4:	cmp	x9, x8
  421cc8:	b.ne	421cd8 <target_environment@@Base+0x1d0>  // b.any
  421ccc:	add	x0, sp, #0x8
  421cd0:	mov	x1, x22
  421cd4:	bl	40f668 <hash_insert_at@@Base>
  421cd8:	add	x19, x19, #0x8
  421cdc:	cmp	x19, x21
  421ce0:	b.cc	421ba8 <target_environment@@Base+0xa0>  // b.lo, b.ul, b.last
  421ce4:	ldr	x25, [x25]
  421ce8:	cbnz	x25, 421b90 <target_environment@@Base+0x88>
  421cec:	adrp	x8, 427000 <_IO_stdin_used@@Base+0x3290>
  421cf0:	add	x8, x8, #0x4d2
  421cf4:	mov	w9, #0x9                   	// #9
  421cf8:	add	x0, sp, #0x8
  421cfc:	sub	x1, x29, #0x30
  421d00:	stur	x8, [x29, #-48]
  421d04:	stur	w9, [x29, #-8]
  421d08:	bl	40f798 <hash_delete@@Base>
  421d0c:	ldr	x8, [sp, #56]
  421d10:	lsl	x8, x8, #3
  421d14:	add	x0, x8, #0x10
  421d18:	bl	417888 <xmalloc@@Base>
  421d1c:	ldr	x8, [sp, #40]
  421d20:	mov	x20, x0
  421d24:	cmp	x8, #0x1
  421d28:	b.lt	421dd4 <target_environment@@Base+0x2cc>  // b.tstop
  421d2c:	ldp	x26, x23, [sp]
  421d30:	adrp	x21, 427000 <_IO_stdin_used@@Base+0x3290>
  421d34:	add	x21, x21, #0x792
  421d38:	mov	x19, x20
  421d3c:	add	x25, x23, x8, lsl #3
  421d40:	ldr	x22, [x23]
  421d44:	cbz	x22, 421d8c <target_environment@@Base+0x284>
  421d48:	ldr	x8, [x24, #2344]
  421d4c:	cmp	x8, x22
  421d50:	b.eq	421d8c <target_environment@@Base+0x284>  // b.none
  421d54:	ldr	w8, [x22, #44]
  421d58:	tbz	w8, #0, 421d70 <target_environment@@Base+0x268>
  421d5c:	lsr	w8, w8, #26
  421d60:	orr	w8, w8, #0x2
  421d64:	and	w8, w8, #0x7
  421d68:	cmp	w8, #0x3
  421d6c:	b.ne	421d9c <target_environment@@Base+0x294>  // b.any
  421d70:	ldp	x1, x3, [x22]
  421d74:	mov	w0, #0x3                   	// #3
  421d78:	mov	x2, x21
  421d7c:	bl	4176dc <concat@@Base>
  421d80:	bl	4178d4 <xstrdup@@Base>
  421d84:	str	x0, [x19]
  421d88:	add	x19, x19, #0x8
  421d8c:	add	x23, x23, #0x8
  421d90:	cmp	x23, x25
  421d94:	b.cc	421d40 <target_environment@@Base+0x238>  // b.lo, b.ul, b.last
  421d98:	b	421dd8 <target_environment@@Base+0x2d0>
  421d9c:	mov	x0, x22
  421da0:	mov	x1, x26
  421da4:	bl	409a50 <recursively_expand_for_file@@Base>
  421da8:	ldr	x1, [x22]
  421dac:	mov	x22, x0
  421db0:	mov	w0, #0x3                   	// #3
  421db4:	mov	x2, x21
  421db8:	mov	x3, x22
  421dbc:	bl	4176dc <concat@@Base>
  421dc0:	bl	4178d4 <xstrdup@@Base>
  421dc4:	str	x0, [x19]
  421dc8:	mov	x0, x22
  421dcc:	bl	406cb0 <free@plt>
  421dd0:	b	421d88 <target_environment@@Base+0x280>
  421dd4:	mov	x19, x20
  421dd8:	mov	w0, #0x64                  	// #100
  421ddc:	bl	417888 <xmalloc@@Base>
  421de0:	str	x0, [x19]
  421de4:	adrp	x8, 43f000 <shell_var@@Base+0x20>
  421de8:	ldr	w8, [x8, #56]
  421dec:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  421df0:	adrp	x2, 427000 <_IO_stdin_used@@Base+0x3290>
  421df4:	add	x1, x1, #0x794
  421df8:	add	w3, w8, #0x1
  421dfc:	add	x2, x2, #0x4d2
  421e00:	bl	406830 <sprintf@plt>
  421e04:	add	x0, sp, #0x8
  421e08:	mov	w1, wzr
  421e0c:	str	xzr, [x19, #8]
  421e10:	bl	40f8ec <hash_free@@Base>
  421e14:	mov	x0, x20
  421e18:	ldp	x20, x19, [sp, #224]
  421e1c:	ldp	x22, x21, [sp, #208]
  421e20:	ldp	x24, x23, [sp, #192]
  421e24:	ldp	x26, x25, [sp, #176]
  421e28:	ldp	x28, x27, [sp, #160]
  421e2c:	ldp	x29, x30, [sp, #144]
  421e30:	add	sp, sp, #0xf0
  421e34:	ret

0000000000421e38 <parse_variable_definition@@Base>:
  421e38:	stp	x29, x30, [sp, #-32]!
  421e3c:	adrp	x10, 43b000 <memcpy@GLIBC_2.17>
  421e40:	stp	x20, x19, [sp, #16]
  421e44:	mov	x19, x1
  421e48:	sub	x8, x0, #0x1
  421e4c:	add	x10, x10, #0xcf0
  421e50:	mov	x29, sp
  421e54:	ldrb	w9, [x8, #1]!
  421e58:	ldrh	w9, [x10, x9, lsl #1]
  421e5c:	tst	w9, #0x6
  421e60:	b.ne	421e54 <parse_variable_definition@@Base+0x1c>  // b.any
  421e64:	str	x8, [x19]
  421e68:	str	wzr, [x19, #40]
  421e6c:	ldrb	w12, [x8]
  421e70:	mov	w11, #0x9                   	// #9
  421e74:	ldrh	w14, [x10, x12, lsl #1]
  421e78:	tst	w14, w11
  421e7c:	b.eq	421e94 <parse_variable_definition@@Base+0x5c>  // b.none
  421e80:	mov	x20, xzr
  421e84:	mov	x0, x20
  421e88:	ldp	x20, x19, [sp, #16]
  421e8c:	ldp	x29, x30, [sp], #32
  421e90:	ret
  421e94:	mov	x9, xzr
  421e98:	mov	x13, x8
  421e9c:	and	w15, w12, #0xff
  421ea0:	cmp	w15, #0x24
  421ea4:	b.ne	421ec8 <parse_variable_definition@@Base+0x90>  // b.any
  421ea8:	ldrb	w12, [x13, #1]
  421eac:	add	x20, x13, #0x2
  421eb0:	cmp	w12, #0x28
  421eb4:	b.eq	421f38 <parse_variable_definition@@Base+0x100>  // b.none
  421eb8:	cmp	w12, #0x7b
  421ebc:	b.eq	421f40 <parse_variable_definition@@Base+0x108>  // b.none
  421ec0:	cbnz	w12, 421f90 <parse_variable_definition@@Base+0x158>
  421ec4:	b	421e80 <parse_variable_definition@@Base+0x48>
  421ec8:	add	x20, x13, #0x1
  421ecc:	tbnz	w14, #1, 421ed8 <parse_variable_definition@@Base+0xa0>
  421ed0:	mov	w14, wzr
  421ed4:	b	421ef4 <parse_variable_definition@@Base+0xbc>
  421ed8:	ldrb	w12, [x20], #1
  421edc:	ldrh	w9, [x10, x12, lsl #1]
  421ee0:	tst	w9, #0x6
  421ee4:	b.ne	421ed8 <parse_variable_definition@@Base+0xa0>  // b.any
  421ee8:	cbz	w12, 421e80 <parse_variable_definition@@Base+0x48>
  421eec:	mov	w14, #0x1                   	// #1
  421ef0:	mov	x9, x13
  421ef4:	and	w13, w12, #0xff
  421ef8:	cmp	w13, #0x3d
  421efc:	b.eq	421fa8 <parse_variable_definition@@Base+0x170>  // b.none
  421f00:	ldrb	w13, [x20]
  421f04:	and	w12, w12, #0xff
  421f08:	cmp	w13, #0x3d
  421f0c:	b.ne	421f2c <parse_variable_definition@@Base+0xf4>  // b.any
  421f10:	cmp	w12, #0x39
  421f14:	b.gt	421f7c <parse_variable_definition@@Base+0x144>
  421f18:	cmp	w12, #0x21
  421f1c:	b.eq	421ffc <parse_variable_definition@@Base+0x1c4>  // b.none
  421f20:	cmp	w12, #0x2b
  421f24:	b.ne	421f8c <parse_variable_definition@@Base+0x154>  // b.any
  421f28:	b	422004 <parse_variable_definition@@Base+0x1cc>
  421f2c:	cmp	w12, #0x3a
  421f30:	b.ne	421f8c <parse_variable_definition@@Base+0x154>  // b.any
  421f34:	b	421fc8 <parse_variable_definition@@Base+0x190>
  421f38:	mov	w14, #0x29                  	// #41
  421f3c:	b	421f44 <parse_variable_definition@@Base+0x10c>
  421f40:	mov	w14, #0x7d                  	// #125
  421f44:	ldrb	w15, [x20]
  421f48:	cbz	w15, 421f90 <parse_variable_definition@@Base+0x158>
  421f4c:	add	x20, x13, #0x3
  421f50:	mov	w13, #0x1                   	// #1
  421f54:	cmp	w14, w15, uxtb
  421f58:	b.ne	421f64 <parse_variable_definition@@Base+0x12c>  // b.any
  421f5c:	subs	w13, w13, #0x1
  421f60:	b.eq	421f90 <parse_variable_definition@@Base+0x158>  // b.none
  421f64:	cmp	w12, w15, uxtb
  421f68:	ldrb	w15, [x20], #1
  421f6c:	cinc	w13, w13, eq  // eq = none
  421f70:	cbnz	w15, 421f54 <parse_variable_definition@@Base+0x11c>
  421f74:	sub	x20, x20, #0x1
  421f78:	b	421f90 <parse_variable_definition@@Base+0x158>
  421f7c:	cmp	w12, #0x3a
  421f80:	b.eq	42200c <parse_variable_definition@@Base+0x1d4>  // b.none
  421f84:	cmp	w12, #0x3f
  421f88:	b.eq	422014 <parse_variable_definition@@Base+0x1dc>  // b.none
  421f8c:	cbnz	w14, 421e80 <parse_variable_definition@@Base+0x48>
  421f90:	ldrb	w12, [x20]
  421f94:	mov	x13, x20
  421f98:	ldrh	w14, [x10, x12, lsl #1]
  421f9c:	tst	w14, w11
  421fa0:	b.eq	421e9c <parse_variable_definition@@Base+0x64>  // b.none
  421fa4:	b	421e80 <parse_variable_definition@@Base+0x48>
  421fa8:	ldr	w10, [x19, #44]
  421fac:	sub	x11, x20, #0x1
  421fb0:	cmp	x9, #0x0
  421fb4:	csel	x9, x11, x9, eq  // eq = none
  421fb8:	and	w10, w10, #0xfc7fffff
  421fbc:	orr	w10, w10, #0x1000000
  421fc0:	str	w10, [x19, #44]
  421fc4:	b	422038 <parse_variable_definition@@Base+0x200>
  421fc8:	cmp	w13, #0x3a
  421fcc:	b.ne	421e80 <parse_variable_definition@@Base+0x48>  // b.any
  421fd0:	ldrb	w10, [x20, #1]
  421fd4:	cmp	w10, #0x3d
  421fd8:	b.ne	421e80 <parse_variable_definition@@Base+0x48>  // b.any
  421fdc:	ldr	w10, [x19, #44]
  421fe0:	sub	x11, x20, #0x1
  421fe4:	cmp	x9, #0x0
  421fe8:	csel	x9, x11, x9, eq  // eq = none
  421fec:	and	w10, w10, #0xfc7fffff
  421ff0:	orr	w10, w10, #0x800000
  421ff4:	add	x20, x20, #0x2
  421ff8:	b	421fc0 <parse_variable_definition@@Base+0x188>
  421ffc:	mov	w10, #0x2800000             	// #41943040
  422000:	b	422018 <parse_variable_definition@@Base+0x1e0>
  422004:	mov	w10, #0x1800000             	// #25165824
  422008:	b	422018 <parse_variable_definition@@Base+0x1e0>
  42200c:	mov	w10, #0x800000              	// #8388608
  422010:	b	422018 <parse_variable_definition@@Base+0x1e0>
  422014:	mov	w10, #0x2000000             	// #33554432
  422018:	ldr	w11, [x19, #44]
  42201c:	sub	x12, x20, #0x1
  422020:	cmp	x9, #0x0
  422024:	csel	x9, x12, x9, eq  // eq = none
  422028:	and	w11, w11, #0xfc7fffff
  42202c:	orr	w10, w11, w10
  422030:	str	w10, [x19, #44]
  422034:	add	x20, x20, #0x1
  422038:	sub	w8, w9, w8
  42203c:	mov	x0, x20
  422040:	str	w8, [x19, #40]
  422044:	bl	417950 <next_token@@Base>
  422048:	str	x0, [x19, #8]
  42204c:	b	421e84 <parse_variable_definition@@Base+0x4c>

0000000000422050 <assign_variable_definition@@Base>:
  422050:	stp	x29, x30, [sp, #-48]!
  422054:	stp	x20, x19, [sp, #32]
  422058:	mov	x19, x0
  42205c:	mov	x0, x1
  422060:	mov	x1, x19
  422064:	str	x21, [sp, #16]
  422068:	mov	x29, sp
  42206c:	bl	421e38 <parse_variable_definition@@Base>
  422070:	cbz	x0, 4220e4 <assign_variable_definition@@Base+0x94>
  422074:	ldr	w20, [x19, #40]
  422078:	mov	x9, sp
  42207c:	add	w8, w20, #0x1
  422080:	add	x8, x8, #0xf
  422084:	and	x8, x8, #0x1fffffff0
  422088:	sub	x21, x9, x8
  42208c:	mov	sp, x21
  422090:	ldr	x1, [x19]
  422094:	mov	x0, x21
  422098:	mov	x2, x20
  42209c:	bl	406750 <memcpy@plt>
  4220a0:	mov	x0, x21
  4220a4:	mov	x1, xzr
  4220a8:	strb	wzr, [x21, x20]
  4220ac:	bl	409c00 <allocated_variable_expand_for_file@@Base>
  4220b0:	str	x0, [x19]
  4220b4:	ldrb	w8, [x0]
  4220b8:	cbnz	w8, 4220e8 <assign_variable_definition@@Base+0x98>
  4220bc:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  4220c0:	add	x1, x1, #0xf4f
  4220c4:	mov	w2, #0x5                   	// #5
  4220c8:	mov	x0, xzr
  4220cc:	add	x19, x19, #0x10
  4220d0:	bl	406e10 <dcgettext@plt>
  4220d4:	mov	x2, x0
  4220d8:	mov	x0, x19
  4220dc:	mov	x1, xzr
  4220e0:	bl	4188bc <fatal@@Base>
  4220e4:	mov	x19, xzr
  4220e8:	mov	x0, x19
  4220ec:	mov	sp, x29
  4220f0:	ldp	x20, x19, [sp, #32]
  4220f4:	ldr	x21, [sp, #16]
  4220f8:	ldp	x29, x30, [sp], #48
  4220fc:	ret

0000000000422100 <try_variable_definition@@Base>:
  422100:	sub	sp, sp, #0x60
  422104:	str	x21, [sp, #64]
  422108:	stp	x20, x19, [sp, #80]
  42210c:	mov	w19, w3
  422110:	mov	w20, w2
  422114:	mov	x21, x0
  422118:	stp	x29, x30, [sp, #48]
  42211c:	add	x29, sp, #0x30
  422120:	cbz	x0, 422140 <try_variable_definition@@Base+0x40>
  422124:	ldr	x8, [x21, #16]
  422128:	ldr	q0, [x21]
  42212c:	mov	x9, sp
  422130:	add	x9, x9, #0x10
  422134:	str	x8, [x9, #16]
  422138:	str	q0, [x9]
  42213c:	b	422144 <try_variable_definition@@Base+0x44>
  422140:	str	xzr, [sp, #16]
  422144:	mov	x0, sp
  422148:	bl	422050 <assign_variable_definition@@Base>
  42214c:	cbz	x0, 422180 <try_variable_definition@@Base+0x80>
  422150:	ldr	w8, [sp, #44]
  422154:	ldp	x1, x2, [sp]
  422158:	mov	x0, x21
  42215c:	mov	w3, w20
  422160:	ubfx	w4, w8, #23, #3
  422164:	mov	w5, w19
  422168:	bl	421154 <do_variable_definition@@Base>
  42216c:	ldr	x8, [sp]
  422170:	mov	x19, x0
  422174:	mov	x0, x8
  422178:	bl	406cb0 <free@plt>
  42217c:	b	422184 <try_variable_definition@@Base+0x84>
  422180:	mov	x19, xzr
  422184:	mov	x0, x19
  422188:	ldp	x20, x19, [sp, #80]
  42218c:	ldr	x21, [sp, #64]
  422190:	ldp	x29, x30, [sp, #48]
  422194:	add	sp, sp, #0x60
  422198:	ret

000000000042219c <print_variable_data_base@@Base>:
  42219c:	stp	x29, x30, [sp, #-48]!
  4221a0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4221a4:	add	x1, x1, #0xae9
  4221a8:	mov	w2, #0x5                   	// #5
  4221ac:	mov	x0, xzr
  4221b0:	stp	x22, x21, [sp, #16]
  4221b4:	stp	x20, x19, [sp, #32]
  4221b8:	mov	x29, sp
  4221bc:	bl	406e10 <dcgettext@plt>
  4221c0:	bl	406c00 <puts@plt>
  4221c4:	adrp	x0, 43e000 <stdio_traced@@Base+0x1a38>
  4221c8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4221cc:	add	x0, x0, #0xf38
  4221d0:	add	x1, x1, #0x5eb
  4221d4:	mov	w2, wzr
  4221d8:	bl	42228c <print_variable_data_base@@Base+0xf0>
  4221dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4221e0:	add	x1, x1, #0xaf7
  4221e4:	mov	w2, #0x5                   	// #5
  4221e8:	mov	x0, xzr
  4221ec:	bl	406e10 <dcgettext@plt>
  4221f0:	bl	406c00 <puts@plt>
  4221f4:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4221f8:	ldr	x22, [x8, #1840]
  4221fc:	cbz	x22, 422268 <print_variable_data_base@@Base+0xcc>
  422200:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x5290>
  422204:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  422208:	mov	w21, wzr
  42220c:	add	x19, x19, #0xb1b
  422210:	add	x20, x20, #0xd00
  422214:	ldr	x1, [x22, #16]
  422218:	mov	x0, x19
  42221c:	bl	406ea0 <printf@plt>
  422220:	add	x0, x22, #0x20
  422224:	mov	x1, x20
  422228:	bl	422310 <print_variable_data_base@@Base+0x174>
  42222c:	ldr	x22, [x22]
  422230:	sub	w21, w21, #0x1
  422234:	cbnz	x22, 422214 <print_variable_data_base@@Base+0x78>
  422238:	cbz	w21, 422268 <print_variable_data_base@@Base+0xcc>
  42223c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422240:	add	x1, x1, #0xb4a
  422244:	mov	w2, #0x5                   	// #5
  422248:	mov	x0, xzr
  42224c:	neg	w19, w21
  422250:	bl	406e10 <dcgettext@plt>
  422254:	mov	w1, w19
  422258:	ldp	x20, x19, [sp, #32]
  42225c:	ldp	x22, x21, [sp, #16]
  422260:	ldp	x29, x30, [sp], #48
  422264:	b	406ea0 <printf@plt>
  422268:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  42226c:	add	x1, x1, #0xb22
  422270:	mov	w2, #0x5                   	// #5
  422274:	mov	x0, xzr
  422278:	bl	406e10 <dcgettext@plt>
  42227c:	ldp	x20, x19, [sp, #32]
  422280:	ldp	x22, x21, [sp, #16]
  422284:	ldp	x29, x30, [sp], #48
  422288:	b	406c00 <puts@plt>
  42228c:	stp	x29, x30, [sp, #-32]!
  422290:	adrp	x9, 422000 <parse_variable_definition@@Base+0x1c8>
  422294:	adrp	x10, 422000 <parse_variable_definition@@Base+0x1c8>
  422298:	mov	x8, x1
  42229c:	add	x9, x9, #0x5d8
  4222a0:	add	x10, x10, #0x310
  4222a4:	cmp	w2, #0x0
  4222a8:	csel	x1, x10, x9, eq  // eq = none
  4222ac:	mov	x2, x8
  4222b0:	stp	x20, x19, [sp, #16]
  4222b4:	mov	x29, sp
  4222b8:	mov	x19, x0
  4222bc:	bl	40f990 <hash_map_arg@@Base>
  4222c0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4222c4:	add	x1, x1, #0xb71
  4222c8:	mov	w2, #0x5                   	// #5
  4222cc:	mov	x0, xzr
  4222d0:	bl	406e10 <dcgettext@plt>
  4222d4:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4222d8:	ldr	x1, [x20, #2512]
  4222dc:	bl	4067a0 <fputs@plt>
  4222e0:	ldr	x1, [x20, #2512]
  4222e4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4222e8:	add	x0, x0, #0xd00
  4222ec:	bl	4067a0 <fputs@plt>
  4222f0:	ldr	x1, [x20, #2512]
  4222f4:	mov	x0, x19
  4222f8:	bl	40fa00 <hash_print_stats@@Base>
  4222fc:	ldr	x1, [x20, #2512]
  422300:	ldp	x20, x19, [sp, #16]
  422304:	mov	w0, #0xa                   	// #10
  422308:	ldp	x29, x30, [sp], #32
  42230c:	b	406840 <putc@plt>
  422310:	stp	x29, x30, [sp, #-48]!
  422314:	stp	x22, x21, [sp, #16]
  422318:	stp	x20, x19, [sp, #32]
  42231c:	ldr	w8, [x0, #44]
  422320:	adrp	x9, 429000 <_IO_stdin_used@@Base+0x5290>
  422324:	add	x9, x9, #0x97c
  422328:	mov	x20, x1
  42232c:	ubfx	w8, w8, #26, #3
  422330:	adr	x10, 422350 <print_variable_data_base@@Base+0x1b4>
  422334:	ldrb	w11, [x9, x8]
  422338:	add	x10, x10, x11, lsl #2
  42233c:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  422340:	mov	x29, sp
  422344:	mov	x19, x0
  422348:	add	x1, x1, #0x50
  42234c:	br	x10
  422350:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  422354:	add	x1, x1, #0x1a
  422358:	b	422394 <print_variable_data_base@@Base+0x1f8>
  42235c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422360:	add	x1, x1, #0xb93
  422364:	b	422394 <print_variable_data_base@@Base+0x1f8>
  422368:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  42236c:	add	x1, x1, #0x22
  422370:	b	422394 <print_variable_data_base@@Base+0x1f8>
  422374:	adrp	x1, 428000 <_IO_stdin_used@@Base+0x4290>
  422378:	add	x1, x1, #0xabe
  42237c:	b	422394 <print_variable_data_base@@Base+0x1f8>
  422380:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  422384:	add	x1, x1, #0x43
  422388:	b	422394 <print_variable_data_base@@Base+0x1f8>
  42238c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422390:	add	x1, x1, #0xba8
  422394:	mov	w2, #0x5                   	// #5
  422398:	mov	x0, xzr
  42239c:	bl	406e10 <dcgettext@plt>
  4223a0:	adrp	x22, 43b000 <memcpy@GLIBC_2.17>
  4223a4:	ldr	x1, [x22, #2512]
  4223a8:	mov	x21, x0
  4223ac:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4223b0:	add	x0, x0, #0xd00
  4223b4:	bl	4067a0 <fputs@plt>
  4223b8:	ldr	x1, [x22, #2512]
  4223bc:	mov	x0, x21
  4223c0:	bl	4067a0 <fputs@plt>
  4223c4:	ldrb	w8, [x19, #44]
  4223c8:	tbz	w8, #7, 4223dc <print_variable_data_base@@Base+0x240>
  4223cc:	ldr	x1, [x22, #2512]
  4223d0:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4223d4:	add	x0, x0, #0xbbd
  4223d8:	bl	4067a0 <fputs@plt>
  4223dc:	ldr	x8, [x19, #16]
  4223e0:	cbz	x8, 422408 <print_variable_data_base@@Base+0x26c>
  4223e4:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4223e8:	add	x1, x1, #0xbc6
  4223ec:	mov	w2, #0x5                   	// #5
  4223f0:	mov	x0, xzr
  4223f4:	bl	406e10 <dcgettext@plt>
  4223f8:	ldp	x8, x9, [x19, #24]
  4223fc:	ldr	x1, [x19, #16]
  422400:	add	x2, x9, x8
  422404:	bl	406ea0 <printf@plt>
  422408:	mov	w0, #0xa                   	// #10
  42240c:	bl	406ed0 <putchar@plt>
  422410:	ldr	x1, [x22, #2512]
  422414:	mov	x0, x20
  422418:	bl	4067a0 <fputs@plt>
  42241c:	ldr	w21, [x19, #44]
  422420:	tbz	w21, #0, 422458 <print_variable_data_base@@Base+0x2bc>
  422424:	ldr	x20, [x19, #8]
  422428:	mov	w1, #0xa                   	// #10
  42242c:	mov	x0, x20
  422430:	bl	406cd0 <strchr@plt>
  422434:	cbz	x0, 422458 <print_variable_data_base@@Base+0x2bc>
  422438:	ldr	x1, [x19]
  42243c:	mov	x2, x20
  422440:	ldp	x20, x19, [sp, #32]
  422444:	ldp	x22, x21, [sp, #16]
  422448:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  42244c:	add	x0, x0, #0xbdd
  422450:	ldp	x29, x30, [sp], #48
  422454:	b	406ea0 <printf@plt>
  422458:	adrp	x8, 424000 <_IO_stdin_used@@Base+0x290>
  42245c:	adrp	x9, 426000 <_IO_stdin_used@@Base+0x2290>
  422460:	ldr	x1, [x19]
  422464:	add	x8, x8, #0x74b
  422468:	add	x9, x9, #0x5eb
  42246c:	tst	w21, #0x2
  422470:	csel	x8, x9, x8, eq  // eq = none
  422474:	adrp	x9, 423000 <fd_noinherit@@Base+0x38>
  422478:	add	x9, x9, #0xee5
  42247c:	tst	w21, #0x1
  422480:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  422484:	csel	x2, x9, x8, eq  // eq = none
  422488:	add	x0, x0, #0xbf1
  42248c:	bl	406ea0 <printf@plt>
  422490:	ldr	x0, [x19, #8]
  422494:	bl	417950 <next_token@@Base>
  422498:	ldr	x20, [x19, #8]
  42249c:	cmp	x0, x20
  4224a0:	b.eq	4224ac <print_variable_data_base@@Base+0x310>  // b.none
  4224a4:	ldrb	w8, [x0]
  4224a8:	cbz	w8, 4224ec <print_variable_data_base@@Base+0x350>
  4224ac:	ldrb	w8, [x19, #44]
  4224b0:	tbnz	w8, #0, 4224dc <print_variable_data_base@@Base+0x340>
  4224b4:	ldrb	w0, [x20]
  4224b8:	cmp	w0, #0x24
  4224bc:	b.eq	4224c8 <print_variable_data_base@@Base+0x32c>  // b.none
  4224c0:	cbnz	w0, 4224d0 <print_variable_data_base@@Base+0x334>
  4224c4:	b	4224fc <print_variable_data_base@@Base+0x360>
  4224c8:	bl	406ed0 <putchar@plt>
  4224cc:	ldrb	w0, [x20]
  4224d0:	bl	406ed0 <putchar@plt>
  4224d4:	add	x20, x20, #0x1
  4224d8:	b	4224b4 <print_variable_data_base@@Base+0x318>
  4224dc:	ldr	x1, [x22, #2512]
  4224e0:	mov	x0, x20
  4224e4:	bl	4067a0 <fputs@plt>
  4224e8:	b	4224fc <print_variable_data_base@@Base+0x360>
  4224ec:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4224f0:	add	x0, x0, #0xbf9
  4224f4:	mov	x1, x20
  4224f8:	bl	406ea0 <printf@plt>
  4224fc:	ldp	x20, x19, [sp, #32]
  422500:	ldp	x22, x21, [sp, #16]
  422504:	mov	w0, #0xa                   	// #10
  422508:	ldp	x29, x30, [sp], #48
  42250c:	b	406ed0 <putchar@plt>
  422510:	bl	406bd0 <abort@plt>

0000000000422514 <print_file_variables@@Base>:
  422514:	ldr	x8, [x0, #80]
  422518:	cbz	x8, 422530 <print_file_variables@@Base+0x1c>
  42251c:	ldr	x0, [x8, #8]
  422520:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422524:	add	x1, x1, #0xd00
  422528:	mov	w2, #0x1                   	// #1
  42252c:	b	42228c <print_variable_data_base@@Base+0xf0>
  422530:	ret

0000000000422534 <print_target_variables@@Base>:
  422534:	stp	x29, x30, [sp, #-48]!
  422538:	stp	x22, x21, [sp, #16]
  42253c:	stp	x20, x19, [sp, #32]
  422540:	ldr	x8, [x0, #80]
  422544:	mov	x29, sp
  422548:	cbz	x8, 4225a8 <print_target_variables@@Base+0x74>
  42254c:	ldr	x20, [x0]
  422550:	mov	x19, x0
  422554:	mov	x0, x20
  422558:	bl	406790 <strlen@plt>
  42255c:	add	x9, x0, #0x12
  422560:	mov	x8, sp
  422564:	and	x9, x9, #0xfffffffffffffff0
  422568:	sub	x22, x8, x9
  42256c:	mov	x21, x0
  422570:	mov	sp, x22
  422574:	mov	x0, x22
  422578:	mov	x1, x20
  42257c:	bl	406d50 <strcpy@plt>
  422580:	add	x8, x22, x21
  422584:	mov	w9, #0x203a                	// #8250
  422588:	strh	w9, [x8]
  42258c:	strb	wzr, [x8, #2]
  422590:	ldr	x8, [x19, #80]
  422594:	adrp	x1, 422000 <parse_variable_definition@@Base+0x1c8>
  422598:	add	x1, x1, #0x5bc
  42259c:	mov	x2, x22
  4225a0:	ldr	x0, [x8, #8]
  4225a4:	bl	40f990 <hash_map_arg@@Base>
  4225a8:	mov	sp, x29
  4225ac:	ldp	x20, x19, [sp, #32]
  4225b0:	ldp	x22, x21, [sp, #16]
  4225b4:	ldp	x29, x30, [sp], #48
  4225b8:	ret
  4225bc:	ldr	w8, [x0, #44]
  4225c0:	mov	w9, #0x18000000            	// #402653184
  4225c4:	and	w8, w8, #0x1c000000
  4225c8:	cmp	w8, w9
  4225cc:	b.ne	4225d4 <print_target_variables@@Base+0xa0>  // b.any
  4225d0:	ret
  4225d4:	b	422310 <print_variable_data_base@@Base+0x174>
  4225d8:	ldr	w8, [x0, #44]
  4225dc:	mov	w9, #0x18000000            	// #402653184
  4225e0:	and	w8, w8, #0x1c000000
  4225e4:	cmp	w8, w9
  4225e8:	b.ne	4225f0 <print_target_variables@@Base+0xbc>  // b.any
  4225ec:	b	422310 <print_variable_data_base@@Base+0x174>
  4225f0:	ret

00000000004225f4 <build_vpath_lists@@Base>:
  4225f4:	sub	sp, sp, #0x40
  4225f8:	stp	x20, x19, [sp, #48]
  4225fc:	adrp	x19, 43e000 <stdio_traced@@Base+0x1a38>
  422600:	ldr	x8, [x19, #4000]
  422604:	stp	x29, x30, [sp, #16]
  422608:	stp	x22, x21, [sp, #32]
  42260c:	add	x29, sp, #0x10
  422610:	cbz	x8, 422630 <build_vpath_lists@@Base+0x3c>
  422614:	mov	x10, xzr
  422618:	mov	x9, x8
  42261c:	ldr	x8, [x8]
  422620:	str	x10, [x9]
  422624:	mov	x10, x9
  422628:	cbnz	x8, 422618 <build_vpath_lists@@Base+0x24>
  42262c:	b	422634 <build_vpath_lists@@Base+0x40>
  422630:	mov	x9, xzr
  422634:	adrp	x20, 43f000 <shell_var@@Base+0x20>
  422638:	ldr	w21, [x20, #88]
  42263c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  422640:	add	x0, x0, #0xc25
  422644:	str	x9, [x19, #4000]
  422648:	str	wzr, [x20, #88]
  42264c:	bl	40a2dc <variable_expand@@Base>
  422650:	str	w21, [x20, #88]
  422654:	ldrb	w8, [x0]
  422658:	cbz	w8, 42268c <build_vpath_lists@@Base+0x98>
  42265c:	ldr	x22, [x19, #4000]
  422660:	mov	x1, x0
  422664:	mov	w8, #0x25                  	// #37
  422668:	sub	x0, x29, #0x4
  42266c:	sturh	w8, [x29, #-4]
  422670:	str	xzr, [x19, #4000]
  422674:	bl	4226e8 <construct_vpath_list@@Base>
  422678:	ldr	x8, [x19, #4000]
  42267c:	ldr	w21, [x20, #88]
  422680:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  422684:	str	x22, [x19, #4000]
  422688:	str	x8, [x9, #4008]
  42268c:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  422690:	add	x0, x0, #0xc37
  422694:	str	wzr, [x20, #88]
  422698:	bl	40a2dc <variable_expand@@Base>
  42269c:	str	w21, [x20, #88]
  4226a0:	ldrb	w8, [x0]
  4226a4:	cbz	w8, 4226d4 <build_vpath_lists@@Base+0xe0>
  4226a8:	ldr	x20, [x19, #4000]
  4226ac:	mov	x1, x0
  4226b0:	mov	w8, #0x25                  	// #37
  4226b4:	add	x0, sp, #0x8
  4226b8:	strh	w8, [sp, #8]
  4226bc:	str	xzr, [x19, #4000]
  4226c0:	bl	4226e8 <construct_vpath_list@@Base>
  4226c4:	ldr	x8, [x19, #4000]
  4226c8:	adrp	x9, 43e000 <stdio_traced@@Base+0x1a38>
  4226cc:	str	x20, [x19, #4000]
  4226d0:	str	x8, [x9, #4016]
  4226d4:	ldp	x20, x19, [sp, #48]
  4226d8:	ldp	x22, x21, [sp, #32]
  4226dc:	ldp	x29, x30, [sp, #16]
  4226e0:	add	sp, sp, #0x40
  4226e4:	ret

00000000004226e8 <construct_vpath_list@@Base>:
  4226e8:	sub	sp, sp, #0x70
  4226ec:	stp	x22, x21, [sp, #80]
  4226f0:	stp	x20, x19, [sp, #96]
  4226f4:	mov	x22, x1
  4226f8:	mov	x19, x0
  4226fc:	stp	x29, x30, [sp, #16]
  422700:	stp	x28, x27, [sp, #32]
  422704:	stp	x26, x25, [sp, #48]
  422708:	stp	x24, x23, [sp, #64]
  42270c:	add	x29, sp, #0x10
  422710:	cbz	x0, 4228c4 <construct_vpath_list@@Base+0x1dc>
  422714:	mov	x0, x19
  422718:	bl	41ab64 <find_percent@@Base>
  42271c:	mov	x20, x0
  422720:	cbz	x22, 4228cc <construct_vpath_list@@Base+0x1e4>
  422724:	adrp	x24, 43b000 <memcpy@GLIBC_2.17>
  422728:	add	x24, x24, #0xcf0
  42272c:	mov	w8, #0x42                  	// #66
  422730:	mov	x21, x22
  422734:	ldrb	w10, [x22], #1
  422738:	ldrh	w9, [x24, x10, lsl #1]
  42273c:	tst	w9, w8
  422740:	b.ne	422730 <construct_vpath_list@@Base+0x48>  // b.any
  422744:	mov	w25, #0x2                   	// #2
  422748:	cbz	w10, 422780 <construct_vpath_list@@Base+0x98>
  42274c:	ldrb	w10, [x21, #1]
  422750:	mov	w8, #0x42                  	// #66
  422754:	tst	w9, w8
  422758:	cinc	w25, w25, ne  // ne = any
  42275c:	cbz	w10, 422780 <construct_vpath_list@@Base+0x98>
  422760:	mov	w9, #0x1                   	// #1
  422764:	and	x10, x10, #0xff
  422768:	ldrh	w11, [x24, x10, lsl #1]
  42276c:	ldrb	w10, [x22, x9]
  422770:	add	x9, x9, #0x1
  422774:	tst	w11, w8
  422778:	cinc	w25, w25, ne  // ne = any
  42277c:	cbnz	w10, 422764 <construct_vpath_list@@Base+0x7c>
  422780:	mov	w8, w25
  422784:	lsl	x0, x8, #3
  422788:	bl	417888 <xmalloc@@Base>
  42278c:	ldrb	w8, [x21]
  422790:	mov	x22, x0
  422794:	cbz	w8, 422994 <construct_vpath_list@@Base+0x2ac>
  422798:	str	x20, [sp, #8]
  42279c:	mov	w27, wzr
  4227a0:	mov	x26, xzr
  4227a4:	mov	w28, #0x42                  	// #66
  4227a8:	sub	x20, x21, #0x1
  4227ac:	mov	w10, w8
  4227b0:	mov	x9, x21
  4227b4:	ands	w11, w10, #0xff
  4227b8:	b.eq	4227dc <construct_vpath_list@@Base+0xf4>  // b.none
  4227bc:	cmp	w11, #0x3a
  4227c0:	b.eq	4227dc <construct_vpath_list@@Base+0xf4>  // b.none
  4227c4:	and	x10, x10, #0xff
  4227c8:	ldrh	w10, [x24, x10, lsl #1]
  4227cc:	tbnz	w10, #1, 4227dc <construct_vpath_list@@Base+0xf4>
  4227d0:	ldrb	w10, [x9, #1]!
  4227d4:	add	x20, x20, #0x1
  4227d8:	b	4227b4 <construct_vpath_list@@Base+0xcc>
  4227dc:	sub	x23, x9, x21
  4227e0:	cmp	x23, #0x2
  4227e4:	b.cc	422804 <construct_vpath_list@@Base+0x11c>  // b.lo, b.ul, b.last
  4227e8:	ldurb	w9, [x9, #-1]
  4227ec:	cmp	w9, #0x2f
  4227f0:	b.ne	422810 <construct_vpath_list@@Base+0x128>  // b.any
  4227f4:	sub	x23, x23, #0x1
  4227f8:	cmp	x23, #0x1
  4227fc:	b.hi	422810 <construct_vpath_list@@Base+0x128>  // b.pmore
  422800:	mov	w23, #0x1                   	// #1
  422804:	and	w8, w8, #0xff
  422808:	cmp	w8, #0x2e
  42280c:	b.eq	422830 <construct_vpath_list@@Base+0x148>  // b.none
  422810:	mov	x0, x21
  422814:	mov	x1, x23
  422818:	bl	4203f8 <strcache_add_len@@Base>
  42281c:	bl	409444 <dir_name@@Base>
  422820:	cmp	x23, x26
  422824:	str	x0, [x22, w27, uxtw #3]
  422828:	add	w27, w27, #0x1
  42282c:	csel	x26, x23, x26, hi  // hi = pmore
  422830:	mov	x21, x20
  422834:	ldrb	w8, [x21, #1]!
  422838:	ldrh	w9, [x24, x8, lsl #1]
  42283c:	tst	w9, w28
  422840:	b.ne	422834 <construct_vpath_list@@Base+0x14c>  // b.any
  422844:	cbnz	w8, 4227a8 <construct_vpath_list@@Base+0xc0>
  422848:	ldr	x20, [sp, #8]
  42284c:	cbz	w27, 422994 <construct_vpath_list@@Base+0x2ac>
  422850:	sub	w8, w25, #0x1
  422854:	cmp	w27, w8
  422858:	b.cs	422870 <construct_vpath_list@@Base+0x188>  // b.hs, b.nlast
  42285c:	add	w8, w27, #0x1
  422860:	lsl	x1, x8, #3
  422864:	mov	x0, x22
  422868:	bl	417854 <xrealloc@@Base>
  42286c:	mov	x22, x0
  422870:	mov	w0, #0x30                  	// #48
  422874:	str	xzr, [x22, w27, uxtw #3]
  422878:	bl	417888 <xmalloc@@Base>
  42287c:	stp	x22, x26, [x0, #32]
  422880:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  422884:	ldr	x9, [x8, #4000]
  422888:	mov	x21, x0
  42288c:	str	x9, [x0]
  422890:	str	x0, [x8, #4000]
  422894:	mov	x0, x19
  422898:	bl	42016c <strcache_add@@Base>
  42289c:	mov	x22, x0
  4228a0:	str	x0, [x21, #8]
  4228a4:	mov	x0, x19
  4228a8:	bl	406790 <strlen@plt>
  4228ac:	sub	x8, x20, x19
  4228b0:	cmp	x20, #0x0
  4228b4:	add	x8, x22, x8
  4228b8:	csel	x8, xzr, x8, eq  // eq = none
  4228bc:	stp	x8, x0, [x21, #16]
  4228c0:	b	422974 <construct_vpath_list@@Base+0x28c>
  4228c4:	mov	x20, xzr
  4228c8:	cbnz	x22, 422724 <construct_vpath_list@@Base+0x3c>
  4228cc:	adrp	x23, 43e000 <stdio_traced@@Base+0x1a38>
  4228d0:	ldr	x24, [x23, #4000]
  4228d4:	cbz	x24, 422974 <construct_vpath_list@@Base+0x28c>
  4228d8:	mov	x26, xzr
  4228dc:	sub	x25, x20, x19
  4228e0:	add	x21, x19, #0x1
  4228e4:	mov	x22, x24
  4228e8:	ldr	x24, [x24]
  4228ec:	cbz	x19, 422950 <construct_vpath_list@@Base+0x268>
  4228f0:	cbz	x20, 4228fc <construct_vpath_list@@Base+0x214>
  4228f4:	ldr	x9, [x22, #16]
  4228f8:	b	422904 <construct_vpath_list@@Base+0x21c>
  4228fc:	ldr	x9, [x22, #16]
  422900:	cbz	x9, 422918 <construct_vpath_list@@Base+0x230>
  422904:	ldr	x8, [x22, #8]
  422908:	sub	x9, x9, x8
  42290c:	cmp	x25, x9
  422910:	b.eq	42291c <construct_vpath_list@@Base+0x234>  // b.none
  422914:	b	422948 <construct_vpath_list@@Base+0x260>
  422918:	ldr	x8, [x22, #8]
  42291c:	cmp	x8, x19
  422920:	b.eq	422950 <construct_vpath_list@@Base+0x268>  // b.none
  422924:	ldrb	w9, [x19]
  422928:	ldrb	w10, [x8]
  42292c:	cmp	w9, w10
  422930:	b.ne	422948 <construct_vpath_list@@Base+0x260>  // b.any
  422934:	cbz	w9, 422950 <construct_vpath_list@@Base+0x268>
  422938:	add	x1, x8, #0x1
  42293c:	mov	x0, x21
  422940:	bl	406c70 <strcmp@plt>
  422944:	cbz	w0, 422950 <construct_vpath_list@@Base+0x268>
  422948:	mov	x26, x22
  42294c:	b	422970 <construct_vpath_list@@Base+0x288>
  422950:	cbz	x26, 42295c <construct_vpath_list@@Base+0x274>
  422954:	str	x24, [x26]
  422958:	b	422960 <construct_vpath_list@@Base+0x278>
  42295c:	str	x24, [x23, #4000]
  422960:	ldr	x0, [x22, #32]
  422964:	bl	406cb0 <free@plt>
  422968:	mov	x0, x22
  42296c:	bl	406cb0 <free@plt>
  422970:	cbnz	x24, 4228e4 <construct_vpath_list@@Base+0x1fc>
  422974:	ldp	x20, x19, [sp, #96]
  422978:	ldp	x22, x21, [sp, #80]
  42297c:	ldp	x24, x23, [sp, #64]
  422980:	ldp	x26, x25, [sp, #48]
  422984:	ldp	x28, x27, [sp, #32]
  422988:	ldp	x29, x30, [sp, #16]
  42298c:	add	sp, sp, #0x70
  422990:	ret
  422994:	mov	x0, x22
  422998:	ldp	x20, x19, [sp, #96]
  42299c:	ldp	x22, x21, [sp, #80]
  4229a0:	ldp	x24, x23, [sp, #64]
  4229a4:	ldp	x26, x25, [sp, #48]
  4229a8:	ldp	x28, x27, [sp, #32]
  4229ac:	ldp	x29, x30, [sp, #16]
  4229b0:	add	sp, sp, #0x70
  4229b4:	b	406cb0 <free@plt>

00000000004229b8 <gpath_search@@Base>:
  4229b8:	stp	x29, x30, [sp, #-48]!
  4229bc:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  4229c0:	ldr	x8, [x8, #4016]
  4229c4:	stp	x22, x21, [sp, #16]
  4229c8:	stp	x20, x19, [sp, #32]
  4229cc:	mov	x29, sp
  4229d0:	cbz	x8, 422a1c <gpath_search@@Base+0x64>
  4229d4:	ldr	x9, [x8, #40]
  4229d8:	mov	x19, x1
  4229dc:	cmp	x9, x1
  4229e0:	b.cc	422a1c <gpath_search@@Base+0x64>  // b.lo, b.ul, b.last
  4229e4:	ldr	x8, [x8, #32]
  4229e8:	ldr	x21, [x8]
  4229ec:	cbz	x21, 422a1c <gpath_search@@Base+0x64>
  4229f0:	mov	x20, x0
  4229f4:	add	x22, x8, #0x8
  4229f8:	mov	x0, x21
  4229fc:	mov	x1, x20
  422a00:	mov	x2, x19
  422a04:	bl	406a30 <strncmp@plt>
  422a08:	cbnz	w0, 422a14 <gpath_search@@Base+0x5c>
  422a0c:	ldrb	w8, [x21, x19]
  422a10:	cbz	w8, 422a30 <gpath_search@@Base+0x78>
  422a14:	ldr	x21, [x22], #8
  422a18:	cbnz	x21, 4229f8 <gpath_search@@Base+0x40>
  422a1c:	mov	w0, wzr
  422a20:	ldp	x20, x19, [sp, #32]
  422a24:	ldp	x22, x21, [sp, #16]
  422a28:	ldp	x29, x30, [sp], #48
  422a2c:	ret
  422a30:	mov	w0, #0x1                   	// #1
  422a34:	b	422a20 <gpath_search@@Base+0x68>

0000000000422a38 <vpath_search@@Base>:
  422a38:	stp	x29, x30, [sp, #-64]!
  422a3c:	stp	x24, x23, [sp, #16]
  422a40:	stp	x22, x21, [sp, #32]
  422a44:	stp	x20, x19, [sp, #48]
  422a48:	ldrb	w8, [x0]
  422a4c:	mov	x29, sp
  422a50:	cmp	w8, #0x2f
  422a54:	b.eq	422a74 <vpath_search@@Base+0x3c>  // b.none
  422a58:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  422a5c:	adrp	x24, 43e000 <stdio_traced@@Base+0x1a38>
  422a60:	mov	x20, x0
  422a64:	ldr	x23, [x8, #4000]
  422a68:	ldr	x0, [x24, #4008]
  422a6c:	orr	x8, x23, x0
  422a70:	cbnz	x8, 422a8c <vpath_search@@Base+0x54>
  422a74:	mov	x0, xzr
  422a78:	ldp	x20, x19, [sp, #48]
  422a7c:	ldp	x22, x21, [sp, #32]
  422a80:	ldp	x24, x23, [sp, #16]
  422a84:	ldp	x29, x30, [sp], #64
  422a88:	ret
  422a8c:	mov	x19, x3
  422a90:	mov	x22, x2
  422a94:	mov	x21, x1
  422a98:	cbz	x2, 422aa4 <vpath_search@@Base+0x6c>
  422a9c:	str	wzr, [x22]
  422aa0:	str	wzr, [x19]
  422aa4:	cbz	x23, 422aec <vpath_search@@Base+0xb4>
  422aa8:	ldp	x0, x1, [x23, #8]
  422aac:	mov	x2, x20
  422ab0:	bl	40c69c <pattern_matches@@Base>
  422ab4:	cbz	w0, 422ad0 <vpath_search@@Base+0x98>
  422ab8:	mov	x0, x23
  422abc:	mov	x1, x20
  422ac0:	mov	x2, x21
  422ac4:	mov	x3, x19
  422ac8:	bl	422b08 <vpath_search@@Base+0xd0>
  422acc:	cbnz	x0, 422a78 <vpath_search@@Base+0x40>
  422ad0:	cbz	x22, 422ae0 <vpath_search@@Base+0xa8>
  422ad4:	ldr	w8, [x22]
  422ad8:	add	w8, w8, #0x1
  422adc:	str	w8, [x22]
  422ae0:	ldr	x23, [x23]
  422ae4:	cbnz	x23, 422aa8 <vpath_search@@Base+0x70>
  422ae8:	ldr	x0, [x24, #4008]
  422aec:	cbz	x0, 422a74 <vpath_search@@Base+0x3c>
  422af0:	mov	x1, x20
  422af4:	mov	x2, x21
  422af8:	mov	x3, x19
  422afc:	bl	422b08 <vpath_search@@Base+0xd0>
  422b00:	cbnz	x0, 422a78 <vpath_search@@Base+0x40>
  422b04:	b	422a74 <vpath_search@@Base+0x3c>
  422b08:	stp	x29, x30, [sp, #-96]!
  422b0c:	stp	x28, x27, [sp, #16]
  422b10:	stp	x26, x25, [sp, #32]
  422b14:	stp	x24, x23, [sp, #48]
  422b18:	stp	x22, x21, [sp, #64]
  422b1c:	stp	x20, x19, [sp, #80]
  422b20:	mov	x29, sp
  422b24:	sub	sp, sp, #0xa0
  422b28:	ldp	x28, x19, [x0, #32]
  422b2c:	mov	x0, x1
  422b30:	mov	x25, x3
  422b34:	mov	x20, x2
  422b38:	mov	x21, x1
  422b3c:	bl	40a568 <lookup_file@@Base>
  422b40:	cbz	x0, 422b54 <vpath_search@@Base+0x11c>
  422b44:	ldrb	w8, [x0, #137]
  422b48:	tst	w8, #0x8
  422b4c:	cset	w8, eq  // eq = none
  422b50:	b	422b58 <vpath_search@@Base+0x120>
  422b54:	mov	w8, #0x1                   	// #1
  422b58:	mov	x0, x21
  422b5c:	stur	w8, [x29, #-132]
  422b60:	bl	406790 <strlen@plt>
  422b64:	mov	x22, x0
  422b68:	mov	w1, #0x2f                  	// #47
  422b6c:	mov	x0, x21
  422b70:	bl	406b80 <strrchr@plt>
  422b74:	sub	x8, x0, x21
  422b78:	cmp	x0, #0x0
  422b7c:	csel	x23, xzr, x8, eq  // eq = none
  422b80:	cmp	x23, #0x0
  422b84:	csinv	x8, xzr, x23, eq  // eq = none
  422b88:	add	x10, x8, x22
  422b8c:	add	x8, x19, x23
  422b90:	add	x8, x8, x10
  422b94:	add	x8, x8, #0x12
  422b98:	and	x8, x8, #0xfffffffffffffff0
  422b9c:	mov	x9, sp
  422ba0:	csinc	x24, x21, x0, eq  // eq = none
  422ba4:	sub	x22, x9, x8
  422ba8:	mov	sp, x22
  422bac:	ldr	x26, [x28]
  422bb0:	cbz	x26, 422cd8 <vpath_search@@Base+0x2a0>
  422bb4:	stp	x25, x10, [x29, #-152]
  422bb8:	mov	w19, wzr
  422bbc:	add	x25, x10, #0x1
  422bc0:	mov	x0, x26
  422bc4:	bl	406790 <strlen@plt>
  422bc8:	mov	x27, x0
  422bcc:	mov	x0, x22
  422bd0:	mov	x1, x26
  422bd4:	mov	x2, x27
  422bd8:	bl	406750 <memcpy@plt>
  422bdc:	add	x26, x22, x27
  422be0:	cbz	x23, 422c00 <vpath_search@@Base+0x1c8>
  422be4:	mov	w8, #0x2f                  	// #47
  422be8:	strb	w8, [x26], #1
  422bec:	mov	x0, x26
  422bf0:	mov	x1, x21
  422bf4:	mov	x2, x23
  422bf8:	bl	406750 <memcpy@plt>
  422bfc:	add	x26, x26, x23
  422c00:	cmp	x26, x22
  422c04:	mov	x0, x26
  422c08:	b.eq	422c28 <vpath_search@@Base+0x1f0>  // b.none
  422c0c:	ldurb	w8, [x26, #-1]
  422c10:	mov	x0, x26
  422c14:	cmp	w8, #0x2f
  422c18:	b.eq	422c28 <vpath_search@@Base+0x1f0>  // b.none
  422c1c:	mov	x0, x26
  422c20:	mov	w8, #0x2f                  	// #47
  422c24:	strb	w8, [x0], #1
  422c28:	mov	x1, x24
  422c2c:	mov	x2, x25
  422c30:	bl	406750 <memcpy@plt>
  422c34:	mov	x0, x22
  422c38:	bl	40a568 <lookup_file@@Base>
  422c3c:	cbz	x0, 422c84 <vpath_search@@Base+0x24c>
  422c40:	ldur	w8, [x29, #-132]
  422c44:	tbz	w8, #0, 422c54 <vpath_search@@Base+0x21c>
  422c48:	mov	w8, #0x1                   	// #1
  422c4c:	cbnz	x20, 422c60 <vpath_search@@Base+0x228>
  422c50:	b	422c80 <vpath_search@@Base+0x248>
  422c54:	ldrb	w8, [x0, #137]
  422c58:	ubfx	w8, w8, #3, #1
  422c5c:	cbz	x20, 422c80 <vpath_search@@Base+0x248>
  422c60:	cbz	w8, 422c80 <vpath_search@@Base+0x248>
  422c64:	ldr	x9, [x0, #112]
  422c68:	cmp	x9, #0x2
  422c6c:	b.eq	422c78 <vpath_search@@Base+0x240>  // b.none
  422c70:	cmn	x9, #0x1
  422c74:	b.ne	422c80 <vpath_search@@Base+0x248>  // b.any
  422c78:	str	x9, [x20]
  422c7c:	mov	x20, xzr
  422c80:	tbnz	w8, #0, 422d38 <vpath_search@@Base+0x300>
  422c84:	mov	x0, x22
  422c88:	mov	x1, x24
  422c8c:	strb	wzr, [x26]
  422c90:	bl	408db4 <dir_file_exists_p@@Base>
  422c94:	cbz	w0, 422ccc <vpath_search@@Base+0x294>
  422c98:	mov	w8, #0x2f                  	// #47
  422c9c:	strb	w8, [x26]
  422ca0:	sub	x1, x29, #0x80
  422ca4:	mov	x0, x22
  422ca8:	bl	423d30 <__libc_csu_fini@@Base+0x18>
  422cac:	cmn	w0, #0x1
  422cb0:	b.ne	422cc8 <vpath_search@@Base+0x290>  // b.any
  422cb4:	bl	406eb0 <__errno_location@plt>
  422cb8:	ldr	w8, [x0]
  422cbc:	cmp	w8, #0x4
  422cc0:	b.eq	422ca0 <vpath_search@@Base+0x268>  // b.none
  422cc4:	b	422ccc <vpath_search@@Base+0x294>
  422cc8:	cbz	w0, 422ce0 <vpath_search@@Base+0x2a8>
  422ccc:	add	w19, w19, #0x1
  422cd0:	ldr	x26, [x28, w19, uxtw #3]
  422cd4:	cbnz	x26, 422bc0 <vpath_search@@Base+0x188>
  422cd8:	mov	x0, xzr
  422cdc:	b	422d18 <vpath_search@@Base+0x2e0>
  422ce0:	ldur	x21, [x29, #-152]
  422ce4:	cbz	x20, 422cf8 <vpath_search@@Base+0x2c0>
  422ce8:	ldp	x1, x2, [x29, #-40]
  422cec:	mov	x0, x22
  422cf0:	bl	40b64c <file_timestamp_cons@@Base>
  422cf4:	str	x0, [x20]
  422cf8:	cbz	x21, 422d00 <vpath_search@@Base+0x2c8>
  422cfc:	str	w19, [x21]
  422d00:	ldur	x8, [x29, #-144]
  422d04:	mov	x0, x22
  422d08:	sub	x8, x8, x22
  422d0c:	add	x8, x26, x8
  422d10:	add	x1, x8, #0x1
  422d14:	bl	4203f8 <strcache_add_len@@Base>
  422d18:	mov	sp, x29
  422d1c:	ldp	x20, x19, [sp, #80]
  422d20:	ldp	x22, x21, [sp, #64]
  422d24:	ldp	x24, x23, [sp, #48]
  422d28:	ldp	x26, x25, [sp, #32]
  422d2c:	ldp	x28, x27, [sp, #16]
  422d30:	ldp	x29, x30, [sp], #96
  422d34:	ret
  422d38:	ldur	x21, [x29, #-152]
  422d3c:	mov	w8, #0x2f                  	// #47
  422d40:	strb	w8, [x26]
  422d44:	cbz	x20, 422cf8 <vpath_search@@Base+0x2c0>
  422d48:	str	xzr, [x20]
  422d4c:	b	422cf8 <vpath_search@@Base+0x2c0>

0000000000422d50 <print_vpath_data_base@@Base>:
  422d50:	stp	x29, x30, [sp, #-80]!
  422d54:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422d58:	add	x1, x1, #0xc49
  422d5c:	mov	w2, #0x5                   	// #5
  422d60:	mov	x0, xzr
  422d64:	stp	x26, x25, [sp, #16]
  422d68:	stp	x24, x23, [sp, #32]
  422d6c:	stp	x22, x21, [sp, #48]
  422d70:	stp	x20, x19, [sp, #64]
  422d74:	mov	x29, sp
  422d78:	bl	406e10 <dcgettext@plt>
  422d7c:	bl	406c00 <puts@plt>
  422d80:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  422d84:	ldr	x23, [x22, #4000]
  422d88:	cbz	x23, 422e1c <print_vpath_data_base@@Base+0xcc>
  422d8c:	adrp	x20, 429000 <_IO_stdin_used@@Base+0x5290>
  422d90:	adrp	x21, 429000 <_IO_stdin_used@@Base+0x5290>
  422d94:	mov	w19, wzr
  422d98:	add	x20, x20, #0xc60
  422d9c:	mov	w24, #0x3a                  	// #58
  422da0:	mov	w25, #0xa                   	// #10
  422da4:	add	x21, x21, #0xc6a
  422da8:	ldr	x1, [x23, #8]
  422dac:	mov	x0, x20
  422db0:	add	w19, w19, #0x1
  422db4:	bl	406ea0 <printf@plt>
  422db8:	ldr	x8, [x23, #32]
  422dbc:	ldr	x1, [x8]
  422dc0:	cbz	x1, 422dec <print_vpath_data_base@@Base+0x9c>
  422dc4:	mov	w26, #0x1                   	// #1
  422dc8:	ldr	x8, [x8, w26, uxtw #3]
  422dcc:	mov	x0, x21
  422dd0:	cmp	x8, #0x0
  422dd4:	csel	w2, w25, w24, eq  // eq = none
  422dd8:	bl	406ea0 <printf@plt>
  422ddc:	ldr	x8, [x23, #32]
  422de0:	ldr	x1, [x8, w26, uxtw #3]
  422de4:	add	w26, w26, #0x1
  422de8:	cbnz	x1, 422dc8 <print_vpath_data_base@@Base+0x78>
  422dec:	ldr	x23, [x23]
  422df0:	cbnz	x23, 422da8 <print_vpath_data_base@@Base+0x58>
  422df4:	ldr	x8, [x22, #4000]
  422df8:	cbz	x8, 422e1c <print_vpath_data_base@@Base+0xcc>
  422dfc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422e00:	add	x1, x1, #0xc8a
  422e04:	mov	w2, #0x5                   	// #5
  422e08:	mov	x0, xzr
  422e0c:	bl	406e10 <dcgettext@plt>
  422e10:	mov	w1, w19
  422e14:	bl	406ea0 <printf@plt>
  422e18:	b	422e34 <print_vpath_data_base@@Base+0xe4>
  422e1c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422e20:	add	x1, x1, #0xc6f
  422e24:	mov	w2, #0x5                   	// #5
  422e28:	mov	x0, xzr
  422e2c:	bl	406e10 <dcgettext@plt>
  422e30:	bl	406c00 <puts@plt>
  422e34:	adrp	x8, 43e000 <stdio_traced@@Base+0x1a38>
  422e38:	ldr	x8, [x8, #4008]
  422e3c:	cbz	x8, 422eb8 <print_vpath_data_base@@Base+0x168>
  422e40:	ldr	x20, [x8, #32]
  422e44:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422e48:	add	x1, x1, #0xcd5
  422e4c:	mov	w2, #0x5                   	// #5
  422e50:	mov	x0, xzr
  422e54:	bl	406e10 <dcgettext@plt>
  422e58:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  422e5c:	ldr	x1, [x8, #2512]
  422e60:	bl	4067a0 <fputs@plt>
  422e64:	ldr	x1, [x20]
  422e68:	cbz	x1, 422ea0 <print_vpath_data_base@@Base+0x150>
  422e6c:	adrp	x19, 429000 <_IO_stdin_used@@Base+0x5290>
  422e70:	mov	w21, #0x1                   	// #1
  422e74:	mov	w22, #0x3a                  	// #58
  422e78:	mov	w23, #0xa                   	// #10
  422e7c:	add	x19, x19, #0xc6a
  422e80:	ldr	x8, [x20, w21, uxtw #3]
  422e84:	mov	x0, x19
  422e88:	cmp	x8, #0x0
  422e8c:	csel	w2, w23, w22, eq  // eq = none
  422e90:	bl	406ea0 <printf@plt>
  422e94:	ldr	x1, [x20, w21, uxtw #3]
  422e98:	add	w21, w21, #0x1
  422e9c:	cbnz	x1, 422e80 <print_vpath_data_base@@Base+0x130>
  422ea0:	ldp	x20, x19, [sp, #64]
  422ea4:	ldp	x22, x21, [sp, #48]
  422ea8:	ldp	x24, x23, [sp, #32]
  422eac:	ldp	x26, x25, [sp, #16]
  422eb0:	ldp	x29, x30, [sp], #80
  422eb4:	ret
  422eb8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422ebc:	add	x1, x1, #0xca7
  422ec0:	mov	w2, #0x5                   	// #5
  422ec4:	mov	x0, xzr
  422ec8:	bl	406e10 <dcgettext@plt>
  422ecc:	ldp	x20, x19, [sp, #64]
  422ed0:	ldp	x22, x21, [sp, #48]
  422ed4:	ldp	x24, x23, [sp, #32]
  422ed8:	ldp	x26, x25, [sp, #16]
  422edc:	ldp	x29, x30, [sp], #80
  422ee0:	b	406c00 <puts@plt>

0000000000422ee4 <jobserver_setup@@Base>:
  422ee4:	stp	x29, x30, [sp, #-48]!
  422ee8:	stp	x20, x19, [sp, #32]
  422eec:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  422ef0:	mov	w19, w0
  422ef4:	add	x20, x20, #0x9a0
  422ef8:	str	x21, [sp, #16]
  422efc:	mov	x29, sp
  422f00:	mov	x0, x20
  422f04:	bl	406850 <pipe@plt>
  422f08:	cmn	w0, #0x1
  422f0c:	b.ne	422f2c <jobserver_setup@@Base+0x48>  // b.any
  422f10:	bl	406eb0 <__errno_location@plt>
  422f14:	ldr	w8, [x0]
  422f18:	cmp	w8, #0x4
  422f1c:	b.eq	422f00 <jobserver_setup@@Base+0x1c>  // b.none
  422f20:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422f24:	add	x1, x1, #0xd03
  422f28:	b	422fb8 <jobserver_setup@@Base+0xd4>
  422f2c:	tbnz	w0, #31, 422f20 <jobserver_setup@@Base+0x3c>
  422f30:	ldr	w0, [x20]
  422f34:	bl	422fc8 <fd_noinherit@@Base>
  422f38:	ldr	w0, [x20, #4]
  422f3c:	bl	422fc8 <fd_noinherit@@Base>
  422f40:	cbz	w19, 422f8c <jobserver_setup@@Base+0xa8>
  422f44:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  422f48:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  422f4c:	add	x20, x20, #0x9a8
  422f50:	sub	w19, w19, #0x1
  422f54:	ldr	w0, [x21, #2468]
  422f58:	mov	w2, #0x1                   	// #1
  422f5c:	mov	x1, x20
  422f60:	bl	406bb0 <write@plt>
  422f64:	cmp	w0, #0x1
  422f68:	b.eq	422f88 <jobserver_setup@@Base+0xa4>  // b.none
  422f6c:	cmn	w0, #0x1
  422f70:	b.ne	422fb0 <jobserver_setup@@Base+0xcc>  // b.any
  422f74:	bl	406eb0 <__errno_location@plt>
  422f78:	ldr	w8, [x0]
  422f7c:	cmp	w8, #0x4
  422f80:	b.eq	422f54 <jobserver_setup@@Base+0x70>  // b.none
  422f84:	b	422fb0 <jobserver_setup@@Base+0xcc>
  422f88:	cbnz	w19, 422f50 <jobserver_setup@@Base+0x6c>
  422f8c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  422f90:	ldr	w0, [x8, #2464]
  422f94:	mov	w1, wzr
  422f98:	bl	42303c <fd_noinherit@@Base+0x74>
  422f9c:	ldp	x20, x19, [sp, #32]
  422fa0:	ldr	x21, [sp, #16]
  422fa4:	mov	w0, #0x1                   	// #1
  422fa8:	ldp	x29, x30, [sp], #48
  422fac:	ret
  422fb0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  422fb4:	add	x1, x1, #0xd16
  422fb8:	mov	w2, #0x5                   	// #5
  422fbc:	mov	x0, xzr
  422fc0:	bl	406e10 <dcgettext@plt>
  422fc4:	bl	417cc8 <pfatal_with_name@@Base>

0000000000422fc8 <fd_noinherit@@Base>:
  422fc8:	stp	x29, x30, [sp, #-32]!
  422fcc:	stp	x20, x19, [sp, #16]
  422fd0:	mov	w19, w0
  422fd4:	mov	x29, sp
  422fd8:	mov	w1, #0x1                   	// #1
  422fdc:	mov	w0, w19
  422fe0:	bl	42388c <rpl_fcntl@@Base>
  422fe4:	cmn	w0, #0x1
  422fe8:	b.ne	423000 <fd_noinherit@@Base+0x38>  // b.any
  422fec:	bl	406eb0 <__errno_location@plt>
  422ff0:	ldr	w8, [x0]
  422ff4:	cmp	w8, #0x4
  422ff8:	b.eq	422fd8 <fd_noinherit@@Base+0x10>  // b.none
  422ffc:	b	423030 <fd_noinherit@@Base+0x68>
  423000:	tbnz	w0, #31, 423030 <fd_noinherit@@Base+0x68>
  423004:	orr	w20, w0, #0x1
  423008:	mov	w1, #0x2                   	// #2
  42300c:	mov	w0, w19
  423010:	mov	w2, w20
  423014:	bl	42388c <rpl_fcntl@@Base>
  423018:	cmn	w0, #0x1
  42301c:	b.ne	423030 <fd_noinherit@@Base+0x68>  // b.any
  423020:	bl	406eb0 <__errno_location@plt>
  423024:	ldr	w8, [x0]
  423028:	cmp	w8, #0x4
  42302c:	b.eq	423008 <fd_noinherit@@Base+0x40>  // b.none
  423030:	ldp	x20, x19, [sp, #16]
  423034:	ldp	x29, x30, [sp], #32
  423038:	ret
  42303c:	stp	x29, x30, [sp, #-32]!
  423040:	stp	x20, x19, [sp, #16]
  423044:	mov	w20, w1
  423048:	mov	w19, w0
  42304c:	mov	x29, sp
  423050:	mov	w1, #0x3                   	// #3
  423054:	mov	w0, w19
  423058:	bl	42388c <rpl_fcntl@@Base>
  42305c:	cmn	w0, #0x1
  423060:	b.ne	423078 <fd_noinherit@@Base+0xb0>  // b.any
  423064:	bl	406eb0 <__errno_location@plt>
  423068:	ldr	w8, [x0]
  42306c:	cmp	w8, #0x4
  423070:	b.eq	423050 <fd_noinherit@@Base+0x88>  // b.none
  423074:	b	4230c4 <fd_noinherit@@Base+0xfc>
  423078:	tbnz	w0, #31, 4230c4 <fd_noinherit@@Base+0xfc>
  42307c:	and	w8, w0, #0xfffff7ff
  423080:	orr	w9, w0, #0x800
  423084:	cmp	w20, #0x0
  423088:	csel	w20, w9, w8, eq  // eq = none
  42308c:	mov	w1, #0x4                   	// #4
  423090:	mov	w0, w19
  423094:	mov	w2, w20
  423098:	bl	42388c <rpl_fcntl@@Base>
  42309c:	cmn	w0, #0x1
  4230a0:	b.ne	4230c0 <fd_noinherit@@Base+0xf8>  // b.any
  4230a4:	bl	406eb0 <__errno_location@plt>
  4230a8:	ldr	w8, [x0]
  4230ac:	cmp	w8, #0x4
  4230b0:	b.eq	42308c <fd_noinherit@@Base+0xc4>  // b.none
  4230b4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4230b8:	add	x0, x0, #0xde2
  4230bc:	bl	417cc8 <pfatal_with_name@@Base>
  4230c0:	tbnz	w0, #31, 4230b4 <fd_noinherit@@Base+0xec>
  4230c4:	ldp	x20, x19, [sp, #16]
  4230c8:	ldp	x29, x30, [sp], #32
  4230cc:	ret

00000000004230d0 <jobserver_parse_auth@@Base>:
  4230d0:	stp	x29, x30, [sp, #-32]!
  4230d4:	stp	x20, x19, [sp, #16]
  4230d8:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4230dc:	add	x20, x20, #0x9a0
  4230e0:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4230e4:	add	x3, x20, #0x4
  4230e8:	add	x1, x1, #0xd2a
  4230ec:	mov	x2, x20
  4230f0:	mov	x29, sp
  4230f4:	mov	x19, x0
  4230f8:	bl	406e30 <__isoc99_sscanf@plt>
  4230fc:	cmp	w0, #0x2
  423100:	b.ne	4231a4 <jobserver_parse_auth@@Base+0xd4>  // b.any
  423104:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423108:	ldrb	w8, [x8, #3236]
  42310c:	tbz	w8, #2, 423138 <jobserver_parse_auth@@Base+0x68>
  423110:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  423114:	add	x1, x1, #0xd65
  423118:	mov	w2, #0x5                   	// #5
  42311c:	mov	x0, xzr
  423120:	bl	406e10 <dcgettext@plt>
  423124:	ldp	w1, w2, [x20]
  423128:	bl	406ea0 <printf@plt>
  42312c:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423130:	ldr	x0, [x8, #2512]
  423134:	bl	406d40 <fflush@plt>
  423138:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  42313c:	ldr	w0, [x19, #2464]
  423140:	mov	w1, #0x1                   	// #1
  423144:	bl	42388c <rpl_fcntl@@Base>
  423148:	cmn	w0, #0x1
  42314c:	b.eq	42317c <jobserver_parse_auth@@Base+0xac>  // b.none
  423150:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423154:	ldr	w0, [x8, #2468]
  423158:	mov	w1, #0x1                   	// #1
  42315c:	bl	42388c <rpl_fcntl@@Base>
  423160:	cmn	w0, #0x1
  423164:	b.eq	42317c <jobserver_parse_auth@@Base+0xac>  // b.none
  423168:	ldr	w0, [x19, #2464]
  42316c:	mov	w1, wzr
  423170:	bl	42303c <fd_noinherit@@Base+0x74>
  423174:	mov	w0, #0x1                   	// #1
  423178:	b	423198 <jobserver_parse_auth@@Base+0xc8>
  42317c:	bl	406eb0 <__errno_location@plt>
  423180:	ldr	w8, [x0]
  423184:	cmp	w8, #0x9
  423188:	b.ne	4231d8 <jobserver_parse_auth@@Base+0x108>  // b.any
  42318c:	mov	w0, wzr
  423190:	movi	v0.2d, #0xffffffffffffffff
  423194:	str	d0, [x19, #2464]
  423198:	ldp	x20, x19, [sp, #16]
  42319c:	ldp	x29, x30, [sp], #32
  4231a0:	ret
  4231a4:	mov	x0, x19
  4231a8:	bl	406790 <strlen@plt>
  4231ac:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4231b0:	mov	x20, x0
  4231b4:	add	x1, x1, #0xd30
  4231b8:	mov	w2, #0x5                   	// #5
  4231bc:	mov	x0, xzr
  4231c0:	bl	406e10 <dcgettext@plt>
  4231c4:	mov	x2, x0
  4231c8:	mov	x0, xzr
  4231cc:	mov	x1, x20
  4231d0:	mov	x3, x19
  4231d4:	bl	4188bc <fatal@@Base>
  4231d8:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4231dc:	add	x1, x1, #0xd83
  4231e0:	mov	w2, #0x5                   	// #5
  4231e4:	mov	x0, xzr
  4231e8:	bl	406e10 <dcgettext@plt>
  4231ec:	bl	417cc8 <pfatal_with_name@@Base>

00000000004231f0 <jobserver_get_auth@@Base>:
  4231f0:	stp	x29, x30, [sp, #-32]!
  4231f4:	mov	w0, #0x2a                  	// #42
  4231f8:	str	x19, [sp, #16]
  4231fc:	mov	x29, sp
  423200:	bl	417888 <xmalloc@@Base>
  423204:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423208:	add	x8, x8, #0x9a0
  42320c:	ldp	w2, w3, [x8]
  423210:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  423214:	add	x1, x1, #0xd2a
  423218:	mov	x19, x0
  42321c:	bl	406830 <sprintf@plt>
  423220:	mov	x0, x19
  423224:	ldr	x19, [sp, #16]
  423228:	ldp	x29, x30, [sp], #32
  42322c:	ret

0000000000423230 <jobserver_enabled@@Base>:
  423230:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423234:	ldr	w8, [x8, #2464]
  423238:	mvn	w8, w8
  42323c:	lsr	w0, w8, #31
  423240:	ret

0000000000423244 <jobserver_clear@@Base>:
  423244:	stp	x29, x30, [sp, #-32]!
  423248:	str	x19, [sp, #16]
  42324c:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  423250:	ldr	w0, [x19, #2464]
  423254:	mov	x29, sp
  423258:	tbnz	w0, #31, 423260 <jobserver_clear@@Base+0x1c>
  42325c:	bl	406b60 <close@plt>
  423260:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423264:	ldr	w0, [x8, #2468]
  423268:	tbnz	w0, #31, 423270 <jobserver_clear@@Base+0x2c>
  42326c:	bl	406b60 <close@plt>
  423270:	movi	v0.2d, #0xffffffffffffffff
  423274:	str	d0, [x19, #2464]
  423278:	ldr	x19, [sp, #16]
  42327c:	ldp	x29, x30, [sp], #32
  423280:	ret

0000000000423284 <jobserver_release@@Base>:
  423284:	stp	x29, x30, [sp, #-48]!
  423288:	stp	x20, x19, [sp, #32]
  42328c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  423290:	str	x21, [sp, #16]
  423294:	mov	w19, w0
  423298:	adrp	x21, 43b000 <memcpy@GLIBC_2.17>
  42329c:	add	x20, x20, #0x9a8
  4232a0:	mov	x29, sp
  4232a4:	ldr	w0, [x21, #2468]
  4232a8:	mov	w2, #0x1                   	// #1
  4232ac:	mov	x1, x20
  4232b0:	bl	406bb0 <write@plt>
  4232b4:	cmn	w0, #0x1
  4232b8:	b.ne	4232d0 <jobserver_release@@Base+0x4c>  // b.any
  4232bc:	bl	406eb0 <__errno_location@plt>
  4232c0:	ldr	w8, [x0]
  4232c4:	cmp	w8, #0x4
  4232c8:	b.eq	4232a4 <jobserver_release@@Base+0x20>  // b.none
  4232cc:	b	4232e8 <jobserver_release@@Base+0x64>
  4232d0:	cmp	w0, #0x1
  4232d4:	b.ne	4232e8 <jobserver_release@@Base+0x64>  // b.any
  4232d8:	ldp	x20, x19, [sp, #32]
  4232dc:	ldr	x21, [sp, #16]
  4232e0:	ldp	x29, x30, [sp], #48
  4232e4:	ret
  4232e8:	cbnz	w19, 42330c <jobserver_release@@Base+0x88>
  4232ec:	ldp	x20, x19, [sp, #32]
  4232f0:	ldr	x21, [sp, #16]
  4232f4:	adrp	x0, 429000 <_IO_stdin_used@@Base+0x5290>
  4232f8:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  4232fc:	add	x0, x0, #0xda6
  423300:	add	x1, x1, #0x5eb
  423304:	ldp	x29, x30, [sp], #48
  423308:	b	418a4c <perror_with_name@@Base>
  42330c:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  423310:	add	x1, x1, #0xd96
  423314:	mov	w2, #0x5                   	// #5
  423318:	mov	x0, xzr
  42331c:	bl	406e10 <dcgettext@plt>
  423320:	bl	417cc8 <pfatal_with_name@@Base>

0000000000423324 <jobserver_acquire_all@@Base>:
  423324:	sub	sp, sp, #0x30
  423328:	stp	x20, x19, [sp, #32]
  42332c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  423330:	add	x20, x20, #0x9a0
  423334:	ldr	w0, [x20]
  423338:	mov	w1, #0x1                   	// #1
  42333c:	stp	x29, x30, [sp, #16]
  423340:	add	x29, sp, #0x10
  423344:	bl	42303c <fd_noinherit@@Base+0x74>
  423348:	ldr	w0, [x20, #4]
  42334c:	bl	406b60 <close@plt>
  423350:	mov	w8, #0xffffffff            	// #-1
  423354:	mov	w19, wzr
  423358:	str	w8, [x20, #4]
  42335c:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  423360:	ldr	w0, [x20, #2464]
  423364:	sub	x1, x29, #0x4
  423368:	mov	w2, #0x1                   	// #1
  42336c:	bl	406da0 <read@plt>
  423370:	cmn	w0, #0x1
  423374:	b.ne	42338c <jobserver_acquire_all@@Base+0x68>  // b.any
  423378:	bl	406eb0 <__errno_location@plt>
  42337c:	ldr	w8, [x0]
  423380:	cmp	w8, #0x4
  423384:	b.eq	423360 <jobserver_acquire_all@@Base+0x3c>  // b.none
  423388:	b	42339c <jobserver_acquire_all@@Base+0x78>
  42338c:	cmp	w0, #0x1
  423390:	b.ne	42339c <jobserver_acquire_all@@Base+0x78>  // b.any
  423394:	add	w19, w19, #0x1
  423398:	b	423360 <jobserver_acquire_all@@Base+0x3c>
  42339c:	mov	w0, w19
  4233a0:	ldp	x20, x19, [sp, #32]
  4233a4:	ldp	x29, x30, [sp, #16]
  4233a8:	add	sp, sp, #0x30
  4233ac:	ret

00000000004233b0 <jobserver_pre_child@@Base>:
  4233b0:	stp	x29, x30, [sp, #-16]!
  4233b4:	mov	x29, sp
  4233b8:	cbz	w0, 4233dc <jobserver_pre_child@@Base+0x2c>
  4233bc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4233c0:	ldr	w0, [x8, #2464]
  4233c4:	tbnz	w0, #31, 4233dc <jobserver_pre_child@@Base+0x2c>
  4233c8:	bl	4233e4 <fd_inherit@@Base>
  4233cc:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  4233d0:	ldr	w0, [x8, #2468]
  4233d4:	ldp	x29, x30, [sp], #16
  4233d8:	b	4233e4 <fd_inherit@@Base>
  4233dc:	ldp	x29, x30, [sp], #16
  4233e0:	ret

00000000004233e4 <fd_inherit@@Base>:
  4233e4:	stp	x29, x30, [sp, #-32]!
  4233e8:	stp	x20, x19, [sp, #16]
  4233ec:	mov	w19, w0
  4233f0:	mov	x29, sp
  4233f4:	mov	w1, #0x1                   	// #1
  4233f8:	mov	w0, w19
  4233fc:	bl	42388c <rpl_fcntl@@Base>
  423400:	cmn	w0, #0x1
  423404:	b.ne	42341c <fd_inherit@@Base+0x38>  // b.any
  423408:	bl	406eb0 <__errno_location@plt>
  42340c:	ldr	w8, [x0]
  423410:	cmp	w8, #0x4
  423414:	b.eq	4233f4 <fd_inherit@@Base+0x10>  // b.none
  423418:	b	42344c <fd_inherit@@Base+0x68>
  42341c:	tbnz	w0, #31, 42344c <fd_inherit@@Base+0x68>
  423420:	and	w20, w0, #0xfffffffe
  423424:	mov	w1, #0x2                   	// #2
  423428:	mov	w0, w19
  42342c:	mov	w2, w20
  423430:	bl	42388c <rpl_fcntl@@Base>
  423434:	cmn	w0, #0x1
  423438:	b.ne	42344c <fd_inherit@@Base+0x68>  // b.any
  42343c:	bl	406eb0 <__errno_location@plt>
  423440:	ldr	w8, [x0]
  423444:	cmp	w8, #0x4
  423448:	b.eq	423424 <fd_inherit@@Base+0x40>  // b.none
  42344c:	ldp	x20, x19, [sp, #16]
  423450:	ldp	x29, x30, [sp], #32
  423454:	ret

0000000000423458 <jobserver_post_child@@Base>:
  423458:	stp	x29, x30, [sp, #-16]!
  42345c:	mov	x29, sp
  423460:	cbz	w0, 423484 <jobserver_post_child@@Base+0x2c>
  423464:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423468:	ldr	w0, [x8, #2464]
  42346c:	tbnz	w0, #31, 423484 <jobserver_post_child@@Base+0x2c>
  423470:	bl	422fc8 <fd_noinherit@@Base>
  423474:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423478:	ldr	w0, [x8, #2468]
  42347c:	ldp	x29, x30, [sp], #16
  423480:	b	422fc8 <fd_noinherit@@Base>
  423484:	ldp	x29, x30, [sp], #16
  423488:	ret

000000000042348c <jobserver_signal@@Base>:
  42348c:	ret

0000000000423490 <jobserver_pre_acquire@@Base>:
  423490:	ret

0000000000423494 <jobserver_acquire@@Base>:
  423494:	sub	sp, sp, #0x150
  423498:	stp	x20, x19, [sp, #320]
  42349c:	mov	w19, w0
  4234a0:	add	x0, sp, #0x80
  4234a4:	stp	x29, x30, [sp, #272]
  4234a8:	str	x28, [sp, #288]
  4234ac:	stp	x22, x21, [sp, #304]
  4234b0:	add	x29, sp, #0x110
  4234b4:	bl	406a10 <sigemptyset@plt>
  4234b8:	cbz	w19, 4234d0 <jobserver_acquire@@Base+0x3c>
  4234bc:	adrp	x8, 428000 <_IO_stdin_used@@Base+0x4290>
  4234c0:	ldr	q0, [x8, #2608]
  4234c4:	sub	x19, x29, #0x10
  4234c8:	stur	q0, [x29, #-16]
  4234cc:	b	4234d4 <jobserver_acquire@@Base+0x40>
  4234d0:	mov	x19, xzr
  4234d4:	adrp	x20, 43b000 <memcpy@GLIBC_2.17>
  4234d8:	mov	w21, #0x1                   	// #1
  4234dc:	mov	x22, sp
  4234e0:	ldr	w8, [x20, #2464]
  4234e4:	movi	v0.2d, #0x0
  4234e8:	stp	q0, q0, [sp]
  4234ec:	stp	q0, q0, [sp, #32]
  4234f0:	add	w9, w8, #0x3f
  4234f4:	cmp	w8, #0x0
  4234f8:	csel	w9, w9, w8, lt  // lt = tstop
  4234fc:	stp	q0, q0, [sp, #64]
  423500:	stp	q0, q0, [sp, #96]
  423504:	asr	w10, w9, #6
  423508:	ldr	x11, [x22, w10, sxtw #3]
  42350c:	and	w9, w9, #0xffffffc0
  423510:	sub	w9, w8, w9
  423514:	lsl	x9, x21, x9
  423518:	orr	x9, x9, x11
  42351c:	add	w0, w8, #0x1
  423520:	mov	x1, sp
  423524:	add	x5, sp, #0x80
  423528:	mov	x2, xzr
  42352c:	mov	x3, xzr
  423530:	mov	x4, x19
  423534:	str	x9, [x22, w10, sxtw #3]
  423538:	bl	406ad0 <pselect@plt>
  42353c:	tbnz	w0, #31, 42359c <jobserver_acquire@@Base+0x108>
  423540:	cbz	w0, 4235bc <jobserver_acquire@@Base+0x128>
  423544:	ldr	w0, [x20, #2464]
  423548:	add	x1, x29, #0x1c
  42354c:	mov	w2, #0x1                   	// #1
  423550:	bl	406da0 <read@plt>
  423554:	cmn	w0, #0x1
  423558:	b.ne	423570 <jobserver_acquire@@Base+0xdc>  // b.any
  42355c:	bl	406eb0 <__errno_location@plt>
  423560:	ldr	w8, [x0]
  423564:	cmp	w8, #0x4
  423568:	b.eq	423544 <jobserver_acquire@@Base+0xb0>  // b.none
  42356c:	b	42357c <jobserver_acquire@@Base+0xe8>
  423570:	tbz	w0, #31, 4235b4 <jobserver_acquire@@Base+0x120>
  423574:	bl	406eb0 <__errno_location@plt>
  423578:	ldr	w8, [x0]
  42357c:	cmp	w8, #0xb
  423580:	b.eq	4234e0 <jobserver_acquire@@Base+0x4c>  // b.none
  423584:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  423588:	add	x1, x1, #0xdd3
  42358c:	mov	w2, #0x5                   	// #5
  423590:	mov	x0, xzr
  423594:	bl	406e10 <dcgettext@plt>
  423598:	bl	417cc8 <pfatal_with_name@@Base>
  42359c:	bl	406eb0 <__errno_location@plt>
  4235a0:	ldr	w8, [x0]
  4235a4:	cmp	w8, #0x4
  4235a8:	b.ne	4235d4 <jobserver_acquire@@Base+0x140>  // b.any
  4235ac:	mov	w0, wzr
  4235b0:	b	4235bc <jobserver_acquire@@Base+0x128>
  4235b4:	cmp	w0, #0x0
  4235b8:	cset	w0, ne  // ne = any
  4235bc:	ldp	x20, x19, [sp, #320]
  4235c0:	ldp	x22, x21, [sp, #304]
  4235c4:	ldr	x28, [sp, #288]
  4235c8:	ldp	x29, x30, [sp, #272]
  4235cc:	add	sp, sp, #0x150
  4235d0:	ret
  4235d4:	cmp	w8, #0x9
  4235d8:	b.ne	423600 <jobserver_acquire@@Base+0x16c>  // b.any
  4235dc:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  4235e0:	add	x1, x1, #0xdac
  4235e4:	mov	w2, #0x5                   	// #5
  4235e8:	mov	x0, xzr
  4235ec:	bl	406e10 <dcgettext@plt>
  4235f0:	mov	x2, x0
  4235f4:	mov	x0, xzr
  4235f8:	mov	x1, xzr
  4235fc:	bl	4188bc <fatal@@Base>
  423600:	adrp	x1, 429000 <_IO_stdin_used@@Base+0x5290>
  423604:	add	x1, x1, #0xdc1
  423608:	b	42358c <jobserver_acquire@@Base+0xf8>

000000000042360c <get_bad_stdin@@Base>:
  42360c:	stp	x29, x30, [sp, #-32]!
  423610:	str	x19, [sp, #16]
  423614:	adrp	x19, 43b000 <memcpy@GLIBC_2.17>
  423618:	ldr	w0, [x19, #2476]
  42361c:	mov	x29, sp
  423620:	cmn	w0, #0x1
  423624:	b.ne	42364c <get_bad_stdin@@Base+0x40>  // b.any
  423628:	add	x0, x29, #0x18
  42362c:	bl	406850 <pipe@plt>
  423630:	cbnz	w0, 423648 <get_bad_stdin@@Base+0x3c>
  423634:	ldr	w0, [x29, #28]
  423638:	bl	406b60 <close@plt>
  42363c:	ldr	w0, [x29, #24]
  423640:	str	w0, [x19, #2476]
  423644:	bl	422fc8 <fd_noinherit@@Base>
  423648:	ldr	w0, [x19, #2476]
  42364c:	ldr	x19, [sp, #16]
  423650:	ldp	x29, x30, [sp], #32
  423654:	ret

0000000000423658 <remote_setup@@Base>:
  423658:	ret

000000000042365c <remote_cleanup@@Base>:
  42365c:	ret

0000000000423660 <start_remote_job_p@@Base>:
  423660:	mov	w0, wzr
  423664:	ret

0000000000423668 <start_remote_job@@Base>:
  423668:	mov	w0, #0xffffffff            	// #-1
  42366c:	ret

0000000000423670 <remote_status@@Base>:
  423670:	stp	x29, x30, [sp, #-16]!
  423674:	mov	x29, sp
  423678:	bl	406eb0 <__errno_location@plt>
  42367c:	mov	x8, x0
  423680:	mov	w9, #0xa                   	// #10
  423684:	mov	w0, #0xffffffff            	// #-1
  423688:	str	w9, [x8]
  42368c:	ldp	x29, x30, [sp], #16
  423690:	ret

0000000000423694 <block_remote_children@@Base>:
  423694:	ret

0000000000423698 <unblock_remote_children@@Base>:
  423698:	ret

000000000042369c <remote_kill@@Base>:
  42369c:	mov	w0, #0xffffffff            	// #-1
  4236a0:	ret

00000000004236a4 <find_in_given_path@@Base>:
  4236a4:	stp	x29, x30, [sp, #-96]!
  4236a8:	stp	x20, x19, [sp, #80]
  4236ac:	mov	x19, x0
  4236b0:	mov	x8, x0
  4236b4:	stp	x28, x27, [sp, #16]
  4236b8:	stp	x26, x25, [sp, #32]
  4236bc:	stp	x24, x23, [sp, #48]
  4236c0:	stp	x22, x21, [sp, #64]
  4236c4:	mov	x29, sp
  4236c8:	ldrb	w9, [x8]
  4236cc:	cbz	w9, 4236e0 <find_in_given_path@@Base+0x3c>
  4236d0:	cmp	w9, #0x2f
  4236d4:	b.eq	423788 <find_in_given_path@@Base+0xe4>  // b.none
  4236d8:	add	x8, x8, #0x1
  4236dc:	b	4236c8 <find_in_given_path@@Base+0x24>
  4236e0:	adrp	x21, 426000 <_IO_stdin_used@@Base+0x2290>
  4236e4:	add	x21, x21, #0x5eb
  4236e8:	cmp	x1, #0x0
  4236ec:	csel	x0, x21, x1, eq  // eq = none
  4236f0:	bl	4178d4 <xstrdup@@Base>
  4236f4:	adrp	x25, 427000 <_IO_stdin_used@@Base+0x3290>
  4236f8:	mov	x20, x0
  4236fc:	mov	w24, #0x2                   	// #2
  423700:	add	x25, x25, #0x6fe
  423704:	mov	x26, x0
  423708:	mov	x27, xzr
  42370c:	ldrb	w28, [x26, x27]
  423710:	cbz	w28, 423724 <find_in_given_path@@Base+0x80>
  423714:	cmp	w28, #0x3a
  423718:	b.eq	423724 <find_in_given_path@@Base+0x80>  // b.none
  42371c:	add	x27, x27, #0x1
  423720:	b	42370c <find_in_given_path@@Base+0x68>
  423724:	cmp	x27, #0x0
  423728:	csel	x0, x25, x26, eq  // eq = none
  42372c:	mov	x1, x19
  423730:	mov	x2, x21
  423734:	strb	wzr, [x26, x27]
  423738:	bl	423870 <xconcatenated_filename@@Base>
  42373c:	mov	w1, #0x1                   	// #1
  423740:	mov	x22, x0
  423744:	bl	406900 <eaccess@plt>
  423748:	cbz	w0, 4237d0 <find_in_given_path@@Base+0x12c>
  42374c:	bl	406eb0 <__errno_location@plt>
  423750:	ldr	w8, [x0]
  423754:	mov	x23, x0
  423758:	mov	x0, x22
  42375c:	cmp	w8, #0x2
  423760:	csel	w24, w24, w8, eq  // eq = none
  423764:	bl	406cb0 <free@plt>
  423768:	add	x8, x26, x27
  42376c:	add	x26, x8, #0x1
  423770:	cbnz	w28, 423708 <find_in_given_path@@Base+0x64>
  423774:	mov	x0, x20
  423778:	bl	406cb0 <free@plt>
  42377c:	mov	x19, xzr
  423780:	str	w24, [x23]
  423784:	b	42382c <find_in_given_path@@Base+0x188>
  423788:	tbnz	w2, #0, 42382c <find_in_given_path@@Base+0x188>
  42378c:	adrp	x0, 426000 <_IO_stdin_used@@Base+0x2290>
  423790:	add	x0, x0, #0x5eb
  423794:	mov	x1, x19
  423798:	mov	x2, x0
  42379c:	bl	423870 <xconcatenated_filename@@Base>
  4237a0:	mov	w1, #0x1                   	// #1
  4237a4:	mov	x20, x0
  4237a8:	bl	406900 <eaccess@plt>
  4237ac:	cbz	w0, 42384c <find_in_given_path@@Base+0x1a8>
  4237b0:	bl	406eb0 <__errno_location@plt>
  4237b4:	ldr	w22, [x0]
  4237b8:	mov	x21, x0
  4237bc:	mov	x0, x20
  4237c0:	bl	406cb0 <free@plt>
  4237c4:	mov	x19, xzr
  4237c8:	str	w22, [x21]
  4237cc:	b	42382c <find_in_given_path@@Base+0x188>
  4237d0:	mov	x0, x22
  4237d4:	mov	x1, x19
  4237d8:	bl	406c70 <strcmp@plt>
  4237dc:	cbnz	w0, 423820 <find_in_given_path@@Base+0x17c>
  4237e0:	mov	x0, x22
  4237e4:	bl	406cb0 <free@plt>
  4237e8:	mov	x0, x19
  4237ec:	bl	406790 <strlen@plt>
  4237f0:	add	x0, x0, #0x3
  4237f4:	bl	417888 <xmalloc@@Base>
  4237f8:	mov	x22, x0
  4237fc:	mov	w8, #0x2f2e                	// #12078
  423800:	mov	x21, x0
  423804:	mov	x0, x19
  423808:	strh	w8, [x21], #2
  42380c:	bl	406790 <strlen@plt>
  423810:	add	x2, x0, #0x1
  423814:	mov	x0, x21
  423818:	mov	x1, x19
  42381c:	bl	406750 <memcpy@plt>
  423820:	mov	x0, x20
  423824:	bl	406cb0 <free@plt>
  423828:	mov	x19, x22
  42382c:	mov	x0, x19
  423830:	ldp	x20, x19, [sp, #80]
  423834:	ldp	x22, x21, [sp, #64]
  423838:	ldp	x24, x23, [sp, #48]
  42383c:	ldp	x26, x25, [sp, #32]
  423840:	ldp	x28, x27, [sp, #16]
  423844:	ldp	x29, x30, [sp], #96
  423848:	ret
  42384c:	mov	x0, x20
  423850:	mov	x1, x19
  423854:	bl	406c70 <strcmp@plt>
  423858:	cbz	w0, 423864 <find_in_given_path@@Base+0x1c0>
  42385c:	mov	x19, x20
  423860:	b	42382c <find_in_given_path@@Base+0x188>
  423864:	mov	x0, x20
  423868:	bl	406cb0 <free@plt>
  42386c:	b	42382c <find_in_given_path@@Base+0x188>

0000000000423870 <xconcatenated_filename@@Base>:
  423870:	stp	x29, x30, [sp, #-16]!
  423874:	mov	x29, sp
  423878:	bl	423b38 <concatenated_filename@@Base>
  42387c:	cbz	x0, 423888 <xconcatenated_filename@@Base+0x18>
  423880:	ldp	x29, x30, [sp], #16
  423884:	ret
  423888:	bl	423c50 <xalloc_die@@Base>

000000000042388c <rpl_fcntl@@Base>:
  42388c:	sub	sp, sp, #0x100
  423890:	stp	x29, x30, [sp, #208]
  423894:	add	x29, sp, #0xd0
  423898:	mov	x8, #0xffffffffffffffd0    	// #-48
  42389c:	mov	x9, sp
  4238a0:	sub	x10, x29, #0x50
  4238a4:	stp	x20, x19, [sp, #240]
  4238a8:	mov	w19, w0
  4238ac:	movk	x8, #0xff80, lsl #32
  4238b0:	add	x11, x29, #0x30
  4238b4:	cmp	w1, #0xb
  4238b8:	add	x9, x9, #0x80
  4238bc:	add	x10, x10, #0x30
  4238c0:	stp	x22, x21, [sp, #224]
  4238c4:	stp	x2, x3, [x29, #-80]
  4238c8:	stp	x4, x5, [x29, #-64]
  4238cc:	stp	x6, x7, [x29, #-48]
  4238d0:	stp	q1, q2, [sp, #16]
  4238d4:	stp	q3, q4, [sp, #48]
  4238d8:	str	q0, [sp]
  4238dc:	stp	q5, q6, [sp, #80]
  4238e0:	str	q7, [sp, #112]
  4238e4:	stp	x9, x8, [x29, #-16]
  4238e8:	stp	x11, x10, [x29, #-32]
  4238ec:	b.hi	423938 <rpl_fcntl@@Base+0xac>  // b.pmore
  4238f0:	mov	w8, #0x1                   	// #1
  4238f4:	lsl	w8, w8, w1
  4238f8:	mov	w9, #0x514                 	// #1300
  4238fc:	tst	w8, w9
  423900:	b.ne	423970 <rpl_fcntl@@Base+0xe4>  // b.any
  423904:	mov	w9, #0xa0a                 	// #2570
  423908:	tst	w8, w9
  42390c:	b.ne	423964 <rpl_fcntl@@Base+0xd8>  // b.any
  423910:	cbnz	w1, 423938 <rpl_fcntl@@Base+0xac>
  423914:	ldursw	x8, [x29, #-8]
  423918:	tbz	w8, #31, 423a18 <rpl_fcntl@@Base+0x18c>
  42391c:	add	w9, w8, #0x8
  423920:	cmn	w8, #0x8
  423924:	stur	w9, [x29, #-8]
  423928:	b.gt	423a18 <rpl_fcntl@@Base+0x18c>
  42392c:	ldur	x9, [x29, #-24]
  423930:	add	x8, x9, x8
  423934:	b	423a24 <rpl_fcntl@@Base+0x198>
  423938:	sub	w8, w1, #0x400
  42393c:	cmp	w8, #0xa
  423940:	b.hi	4239f4 <rpl_fcntl@@Base+0x168>  // b.pmore
  423944:	mov	w9, #0x1                   	// #1
  423948:	lsl	w9, w9, w8
  42394c:	mov	w10, #0x285                 	// #645
  423950:	tst	w9, w10
  423954:	b.ne	423970 <rpl_fcntl@@Base+0xe4>  // b.any
  423958:	mov	w10, #0x502                 	// #1282
  42395c:	tst	w9, w10
  423960:	b.eq	4239c8 <rpl_fcntl@@Base+0x13c>  // b.none
  423964:	mov	w0, w19
  423968:	bl	406d20 <fcntl@plt>
  42396c:	b	4239ac <rpl_fcntl@@Base+0x120>
  423970:	ldursw	x8, [x29, #-8]
  423974:	tbz	w8, #31, 423994 <rpl_fcntl@@Base+0x108>
  423978:	add	w9, w8, #0x8
  42397c:	cmn	w8, #0x8
  423980:	stur	w9, [x29, #-8]
  423984:	b.gt	423994 <rpl_fcntl@@Base+0x108>
  423988:	ldur	x9, [x29, #-24]
  42398c:	add	x8, x9, x8
  423990:	b	4239a0 <rpl_fcntl@@Base+0x114>
  423994:	ldur	x8, [x29, #-32]
  423998:	add	x9, x8, #0x8
  42399c:	stur	x9, [x29, #-32]
  4239a0:	ldr	w2, [x8]
  4239a4:	mov	w0, w19
  4239a8:	bl	406d20 <fcntl@plt>
  4239ac:	mov	w20, w0
  4239b0:	mov	w0, w20
  4239b4:	ldp	x20, x19, [sp, #240]
  4239b8:	ldp	x22, x21, [sp, #224]
  4239bc:	ldp	x29, x30, [sp, #208]
  4239c0:	add	sp, sp, #0x100
  4239c4:	ret
  4239c8:	cmp	w8, #0x6
  4239cc:	b.ne	4239f4 <rpl_fcntl@@Base+0x168>  // b.any
  4239d0:	ldursw	x8, [x29, #-8]
  4239d4:	tbz	w8, #31, 423a34 <rpl_fcntl@@Base+0x1a8>
  4239d8:	add	w9, w8, #0x8
  4239dc:	cmn	w8, #0x8
  4239e0:	stur	w9, [x29, #-8]
  4239e4:	b.gt	423a34 <rpl_fcntl@@Base+0x1a8>
  4239e8:	ldur	x9, [x29, #-24]
  4239ec:	add	x8, x9, x8
  4239f0:	b	423a40 <rpl_fcntl@@Base+0x1b4>
  4239f4:	ldursw	x8, [x29, #-8]
  4239f8:	tbz	w8, #31, 423aa0 <rpl_fcntl@@Base+0x214>
  4239fc:	add	w9, w8, #0x8
  423a00:	cmn	w8, #0x8
  423a04:	stur	w9, [x29, #-8]
  423a08:	b.gt	423aa0 <rpl_fcntl@@Base+0x214>
  423a0c:	ldur	x9, [x29, #-24]
  423a10:	add	x8, x9, x8
  423a14:	b	423aac <rpl_fcntl@@Base+0x220>
  423a18:	ldur	x8, [x29, #-32]
  423a1c:	add	x9, x8, #0x8
  423a20:	stur	x9, [x29, #-32]
  423a24:	ldr	w2, [x8]
  423a28:	mov	w0, w19
  423a2c:	mov	w1, wzr
  423a30:	b	4239a8 <rpl_fcntl@@Base+0x11c>
  423a34:	ldur	x8, [x29, #-32]
  423a38:	add	x9, x8, #0x8
  423a3c:	stur	x9, [x29, #-32]
  423a40:	adrp	x22, 43e000 <stdio_traced@@Base+0x1a38>
  423a44:	ldr	w9, [x22, #4032]
  423a48:	ldr	w21, [x8]
  423a4c:	tbnz	w9, #31, 423ac8 <rpl_fcntl@@Base+0x23c>
  423a50:	mov	w1, #0x406                 	// #1030
  423a54:	mov	w0, w19
  423a58:	mov	w2, w21
  423a5c:	bl	406d20 <fcntl@plt>
  423a60:	mov	w20, w0
  423a64:	tbz	w0, #31, 423abc <rpl_fcntl@@Base+0x230>
  423a68:	bl	406eb0 <__errno_location@plt>
  423a6c:	ldr	w8, [x0]
  423a70:	cmp	w8, #0x16
  423a74:	b.ne	423abc <rpl_fcntl@@Base+0x230>  // b.any
  423a78:	mov	w0, w19
  423a7c:	mov	w1, wzr
  423a80:	mov	w2, w21
  423a84:	bl	406d20 <fcntl@plt>
  423a88:	mov	w20, w0
  423a8c:	tbnz	w0, #31, 4239b0 <rpl_fcntl@@Base+0x124>
  423a90:	mov	w8, #0xffffffff            	// #-1
  423a94:	str	w8, [x22, #4032]
  423a98:	mov	w8, #0x1                   	// #1
  423a9c:	b	423ae8 <rpl_fcntl@@Base+0x25c>
  423aa0:	ldur	x8, [x29, #-32]
  423aa4:	add	x9, x8, #0x8
  423aa8:	stur	x9, [x29, #-32]
  423aac:	ldr	x2, [x8]
  423ab0:	mov	w0, w19
  423ab4:	bl	406d20 <fcntl@plt>
  423ab8:	b	4239ac <rpl_fcntl@@Base+0x120>
  423abc:	mov	w8, #0x1                   	// #1
  423ac0:	str	w8, [x22, #4032]
  423ac4:	b	4239b0 <rpl_fcntl@@Base+0x124>
  423ac8:	mov	w0, w19
  423acc:	mov	w1, wzr
  423ad0:	mov	w2, w21
  423ad4:	bl	406d20 <fcntl@plt>
  423ad8:	ldr	w8, [x22, #4032]
  423adc:	mov	w20, w0
  423ae0:	cmn	w8, #0x1
  423ae4:	cset	w8, eq  // eq = none
  423ae8:	cbz	w8, 4239b0 <rpl_fcntl@@Base+0x124>
  423aec:	tbnz	w20, #31, 4239b0 <rpl_fcntl@@Base+0x124>
  423af0:	mov	w1, #0x1                   	// #1
  423af4:	mov	w0, w20
  423af8:	bl	406d20 <fcntl@plt>
  423afc:	tbnz	w0, #31, 423b18 <rpl_fcntl@@Base+0x28c>
  423b00:	orr	w2, w0, #0x1
  423b04:	mov	w1, #0x2                   	// #2
  423b08:	mov	w0, w20
  423b0c:	bl	406d20 <fcntl@plt>
  423b10:	cmn	w0, #0x1
  423b14:	b.ne	4239b0 <rpl_fcntl@@Base+0x124>  // b.any
  423b18:	bl	406eb0 <__errno_location@plt>
  423b1c:	ldr	w21, [x0]
  423b20:	mov	x19, x0
  423b24:	mov	w0, w20
  423b28:	bl	406b60 <close@plt>
  423b2c:	str	w21, [x19]
  423b30:	mov	w20, #0xffffffff            	// #-1
  423b34:	b	4239b0 <rpl_fcntl@@Base+0x124>

0000000000423b38 <concatenated_filename@@Base>:
  423b38:	stp	x29, x30, [sp, #-64]!
  423b3c:	stp	x20, x19, [sp, #48]
  423b40:	mov	x20, x1
  423b44:	adrp	x1, 427000 <_IO_stdin_used@@Base+0x3290>
  423b48:	add	x1, x1, #0x6fe
  423b4c:	stp	x24, x23, [sp, #16]
  423b50:	stp	x22, x21, [sp, #32]
  423b54:	mov	x29, sp
  423b58:	mov	x19, x2
  423b5c:	mov	x21, x0
  423b60:	bl	406c70 <strcmp@plt>
  423b64:	cbz	w0, 423b8c <concatenated_filename@@Base+0x54>
  423b68:	mov	x0, x21
  423b6c:	bl	406790 <strlen@plt>
  423b70:	mov	x22, x0
  423b74:	cbz	x0, 423ba8 <concatenated_filename@@Base+0x70>
  423b78:	add	x8, x22, x21
  423b7c:	ldurb	w8, [x8, #-1]
  423b80:	cmp	w8, #0x2f
  423b84:	cset	w24, ne  // ne = any
  423b88:	b	423bac <concatenated_filename@@Base+0x74>
  423b8c:	mov	x0, x20
  423b90:	bl	406790 <strlen@plt>
  423b94:	mov	x21, x0
  423b98:	cbz	x19, 423c0c <concatenated_filename@@Base+0xd4>
  423b9c:	mov	x0, x19
  423ba0:	bl	406790 <strlen@plt>
  423ba4:	b	423c10 <concatenated_filename@@Base+0xd8>
  423ba8:	mov	w24, wzr
  423bac:	mov	x0, x20
  423bb0:	bl	406790 <strlen@plt>
  423bb4:	mov	x23, x0
  423bb8:	cbz	x19, 423bc8 <concatenated_filename@@Base+0x90>
  423bbc:	mov	x0, x19
  423bc0:	bl	406790 <strlen@plt>
  423bc4:	b	423bcc <concatenated_filename@@Base+0x94>
  423bc8:	mov	x0, xzr
  423bcc:	add	x8, x22, x24
  423bd0:	add	x8, x8, x23
  423bd4:	add	x8, x8, x0
  423bd8:	add	x0, x8, #0x1
  423bdc:	bl	4069d0 <malloc@plt>
  423be0:	mov	x23, x0
  423be4:	cbz	x0, 423c38 <concatenated_filename@@Base+0x100>
  423be8:	mov	x0, x23
  423bec:	mov	x1, x21
  423bf0:	mov	x2, x22
  423bf4:	bl	406750 <memcpy@plt>
  423bf8:	add	x0, x23, x22
  423bfc:	cbz	x24, 423c24 <concatenated_filename@@Base+0xec>
  423c00:	mov	w8, #0x2f                  	// #47
  423c04:	strb	w8, [x0], #1
  423c08:	b	423c24 <concatenated_filename@@Base+0xec>
  423c0c:	mov	x0, xzr
  423c10:	add	x8, x21, x0
  423c14:	add	x0, x8, #0x1
  423c18:	bl	4069d0 <malloc@plt>
  423c1c:	mov	x23, x0
  423c20:	cbz	x0, 423c38 <concatenated_filename@@Base+0x100>
  423c24:	mov	x1, x20
  423c28:	bl	406930 <stpcpy@plt>
  423c2c:	cbz	x19, 423c38 <concatenated_filename@@Base+0x100>
  423c30:	mov	x1, x19
  423c34:	bl	406930 <stpcpy@plt>
  423c38:	mov	x0, x23
  423c3c:	ldp	x20, x19, [sp, #48]
  423c40:	ldp	x22, x21, [sp, #32]
  423c44:	ldp	x24, x23, [sp, #16]
  423c48:	ldp	x29, x30, [sp], #64
  423c4c:	ret

0000000000423c50 <xalloc_die@@Base>:
  423c50:	stp	x29, x30, [sp, #-32]!
  423c54:	str	x19, [sp, #16]
  423c58:	adrp	x8, 43b000 <memcpy@GLIBC_2.17>
  423c5c:	ldr	w19, [x8, #2480]
  423c60:	adrp	x1, 426000 <_IO_stdin_used@@Base+0x2290>
  423c64:	add	x1, x1, #0x12b
  423c68:	mov	w2, #0x5                   	// #5
  423c6c:	mov	x0, xzr
  423c70:	mov	x29, sp
  423c74:	bl	406e10 <dcgettext@plt>
  423c78:	adrp	x2, 426000 <_IO_stdin_used@@Base+0x2290>
  423c7c:	mov	x3, x0
  423c80:	add	x2, x2, #0x96c
  423c84:	mov	w0, w19
  423c88:	mov	w1, wzr
  423c8c:	bl	418744 <error@@Base>
  423c90:	bl	406bd0 <abort@plt>
  423c94:	nop

0000000000423c98 <__libc_csu_init@@Base>:
  423c98:	stp	x29, x30, [sp, #-64]!
  423c9c:	mov	x29, sp
  423ca0:	stp	x19, x20, [sp, #16]
  423ca4:	adrp	x20, 43a000 <_IO_stdin_used@@Base+0x16290>
  423ca8:	add	x20, x20, #0xde0
  423cac:	stp	x21, x22, [sp, #32]
  423cb0:	adrp	x21, 43a000 <_IO_stdin_used@@Base+0x16290>
  423cb4:	add	x21, x21, #0xdd8
  423cb8:	sub	x20, x20, x21
  423cbc:	mov	w22, w0
  423cc0:	stp	x23, x24, [sp, #48]
  423cc4:	mov	x23, x1
  423cc8:	mov	x24, x2
  423ccc:	bl	406710 <memcpy@plt-0x40>
  423cd0:	cmp	xzr, x20, asr #3
  423cd4:	b.eq	423d00 <__libc_csu_init@@Base+0x68>  // b.none
  423cd8:	asr	x20, x20, #3
  423cdc:	mov	x19, #0x0                   	// #0
  423ce0:	ldr	x3, [x21, x19, lsl #3]
  423ce4:	mov	x2, x24
  423ce8:	add	x19, x19, #0x1
  423cec:	mov	x1, x23
  423cf0:	mov	w0, w22
  423cf4:	blr	x3
  423cf8:	cmp	x20, x19
  423cfc:	b.ne	423ce0 <__libc_csu_init@@Base+0x48>  // b.any
  423d00:	ldp	x19, x20, [sp, #16]
  423d04:	ldp	x21, x22, [sp, #32]
  423d08:	ldp	x23, x24, [sp, #48]
  423d0c:	ldp	x29, x30, [sp], #64
  423d10:	ret
  423d14:	nop

0000000000423d18 <__libc_csu_fini@@Base>:
  423d18:	ret
  423d1c:	nop
  423d20:	adrp	x2, 43b000 <memcpy@GLIBC_2.17>
  423d24:	mov	x1, #0x0                   	// #0
  423d28:	ldr	x2, [x2, #1048]
  423d2c:	b	406880 <__cxa_atexit@plt>
  423d30:	mov	x2, x1
  423d34:	mov	x1, x0
  423d38:	mov	w0, #0x0                   	// #0
  423d3c:	b	406ee0 <__xstat@plt>
  423d40:	mov	x2, x1
  423d44:	mov	w1, w0
  423d48:	mov	w0, #0x0                   	// #0
  423d4c:	b	406df0 <__fxstat@plt>
  423d50:	mov	x2, x1
  423d54:	mov	x1, x0
  423d58:	mov	w0, #0x0                   	// #0
  423d5c:	b	406d80 <__lxstat@plt>

Disassembly of section .fini:

0000000000423d60 <.fini>:
  423d60:	stp	x29, x30, [sp, #-16]!
  423d64:	mov	x29, sp
  423d68:	ldp	x29, x30, [sp], #16
  423d6c:	ret
