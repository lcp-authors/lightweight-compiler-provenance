
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//math.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002f88 <.init>:
    2f88:	stp	x29, x30, [sp, #-16]!
    2f8c:	mov	x29, sp
    2f90:	bl	3470 <PyNumber_FloorDivide@plt+0x10>
    2f94:	ldp	x29, x30, [sp], #16
    2f98:	ret

Disassembly of section .plt:

0000000000002fa0 <memcpy@plt-0x20>:
    2fa0:	stp	x16, x30, [sp, #-16]!
    2fa4:	adrp	x16, 1b000 <_Py_log1p@@Base+0x13110>
    2fa8:	ldr	x17, [x16, #4088]
    2fac:	add	x16, x16, #0xff8
    2fb0:	br	x17
    2fb4:	nop
    2fb8:	nop
    2fbc:	nop

0000000000002fc0 <memcpy@plt>:
    2fc0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fc4:	ldr	x17, [x16]
    2fc8:	add	x16, x16, #0x0
    2fcc:	br	x17

0000000000002fd0 <atan2@plt>:
    2fd0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fd4:	ldr	x17, [x16, #8]
    2fd8:	add	x16, x16, #0x8
    2fdc:	br	x17

0000000000002fe0 <PyLong_AsLongLongAndOverflow@plt>:
    2fe0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2fe4:	ldr	x17, [x16, #16]
    2fe8:	add	x16, x16, #0x10
    2fec:	br	x17

0000000000002ff0 <log2@plt>:
    2ff0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    2ff4:	ldr	x17, [x16, #24]
    2ff8:	add	x16, x16, #0x18
    2ffc:	br	x17

0000000000003000 <PyLong_FromDouble@plt>:
    3000:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3004:	ldr	x17, [x16, #32]
    3008:	add	x16, x16, #0x20
    300c:	br	x17

0000000000003010 <PyMem_Free@plt>:
    3010:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3014:	ldr	x17, [x16, #40]
    3018:	add	x16, x16, #0x28
    301c:	br	x17

0000000000003020 <ldexp@plt>:
    3020:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3024:	ldr	x17, [x16, #48]
    3028:	add	x16, x16, #0x30
    302c:	br	x17

0000000000003030 <PyErr_SetFromErrno@plt>:
    3030:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3034:	ldr	x17, [x16, #56]
    3038:	add	x16, x16, #0x38
    303c:	br	x17

0000000000003040 <PyLong_FromUnsignedLongLong@plt>:
    3040:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3044:	ldr	x17, [x16, #64]
    3048:	add	x16, x16, #0x40
    304c:	br	x17

0000000000003050 <PyLong_AsUnsignedLongLong@plt>:
    3050:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3054:	ldr	x17, [x16, #72]
    3058:	add	x16, x16, #0x48
    305c:	br	x17

0000000000003060 <PyNumber_Add@plt>:
    3060:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3064:	ldr	x17, [x16, #80]
    3068:	add	x16, x16, #0x50
    306c:	br	x17

0000000000003070 <__cxa_finalize@plt>:
    3070:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3074:	ldr	x17, [x16, #88]
    3078:	add	x16, x16, #0x58
    307c:	br	x17

0000000000003080 <_Py_Dealloc@plt>:
    3080:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3084:	ldr	x17, [x16, #96]
    3088:	add	x16, x16, #0x60
    308c:	br	x17

0000000000003090 <pow@plt>:
    3090:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3094:	ldr	x17, [x16, #104]
    3098:	add	x16, x16, #0x68
    309c:	br	x17

00000000000030a0 <PyErr_NoMemory@plt>:
    30a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30a4:	ldr	x17, [x16, #112]
    30a8:	add	x16, x16, #0x70
    30ac:	br	x17

00000000000030b0 <PyIter_Next@plt>:
    30b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30b4:	ldr	x17, [x16, #120]
    30b8:	add	x16, x16, #0x78
    30bc:	br	x17

00000000000030c0 <_PyLong_Sign@plt>:
    30c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30c4:	ldr	x17, [x16, #128]
    30c8:	add	x16, x16, #0x80
    30cc:	br	x17

00000000000030d0 <PyNumber_Multiply@plt>:
    30d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30d4:	ldr	x17, [x16, #136]
    30d8:	add	x16, x16, #0x88
    30dc:	br	x17

00000000000030e0 <log10@plt>:
    30e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30e4:	ldr	x17, [x16, #144]
    30e8:	add	x16, x16, #0x90
    30ec:	br	x17

00000000000030f0 <_PyLong_NumBits@plt>:
    30f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    30f4:	ldr	x17, [x16, #152]
    30f8:	add	x16, x16, #0x98
    30fc:	br	x17

0000000000003100 <_PyLong_Rshift@plt>:
    3100:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3104:	ldr	x17, [x16, #160]
    3108:	add	x16, x16, #0xa0
    310c:	br	x17

0000000000003110 <sqrt@plt>:
    3110:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3114:	ldr	x17, [x16, #168]
    3118:	add	x16, x16, #0xa8
    311c:	br	x17

0000000000003120 <_PyArg_UnpackKeywords@plt>:
    3120:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3124:	ldr	x17, [x16, #176]
    3128:	add	x16, x16, #0xb0
    312c:	br	x17

0000000000003130 <PyErr_SetString@plt>:
    3130:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3134:	ldr	x17, [x16, #184]
    3138:	add	x16, x16, #0xb8
    313c:	br	x17

0000000000003140 <PyObject_Malloc@plt>:
    3140:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3144:	ldr	x17, [x16, #192]
    3148:	add	x16, x16, #0xc0
    314c:	br	x17

0000000000003150 <_PyLong_Frexp@plt>:
    3150:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3154:	ldr	x17, [x16, #200]
    3158:	add	x16, x16, #0xc8
    315c:	br	x17

0000000000003160 <_PyObject_LookupSpecial@plt>:
    3160:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3164:	ldr	x17, [x16, #208]
    3168:	add	x16, x16, #0xd0
    316c:	br	x17

0000000000003170 <_PyLong_Copy@plt>:
    3170:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3174:	ldr	x17, [x16, #216]
    3178:	add	x16, x16, #0xd8
    317c:	br	x17

0000000000003180 <PyMem_Realloc@plt>:
    3180:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3184:	ldr	x17, [x16, #224]
    3188:	add	x16, x16, #0xe0
    318c:	br	x17

0000000000003190 <PyErr_ExceptionMatches@plt>:
    3190:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3194:	ldr	x17, [x16, #232]
    3198:	add	x16, x16, #0xe8
    319c:	br	x17

00000000000031a0 <log@plt>:
    31a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31a4:	ldr	x17, [x16, #240]
    31a8:	add	x16, x16, #0xf0
    31ac:	br	x17

00000000000031b0 <PyObject_Free@plt>:
    31b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31b4:	ldr	x17, [x16, #248]
    31b8:	add	x16, x16, #0xf8
    31bc:	br	x17

00000000000031c0 <PyFloat_FromDouble@plt>:
    31c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31c4:	ldr	x17, [x16, #256]
    31c8:	add	x16, x16, #0x100
    31cc:	br	x17

00000000000031d0 <PyType_Ready@plt>:
    31d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31d4:	ldr	x17, [x16, #264]
    31d8:	add	x16, x16, #0x108
    31dc:	br	x17

00000000000031e0 <PyLong_FromLong@plt>:
    31e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31e4:	ldr	x17, [x16, #272]
    31e8:	add	x16, x16, #0x110
    31ec:	br	x17

00000000000031f0 <PyObject_RichCompareBool@plt>:
    31f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    31f4:	ldr	x17, [x16, #280]
    31f8:	add	x16, x16, #0x118
    31fc:	br	x17

0000000000003200 <_PyLong_GCD@plt>:
    3200:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3204:	ldr	x17, [x16, #288]
    3208:	add	x16, x16, #0x120
    320c:	br	x17

0000000000003210 <PyErr_Clear@plt>:
    3210:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3214:	ldr	x17, [x16, #296]
    3218:	add	x16, x16, #0x128
    321c:	br	x17

0000000000003220 <PyBool_FromLong@plt>:
    3220:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3224:	ldr	x17, [x16, #304]
    3228:	add	x16, x16, #0x130
    322c:	br	x17

0000000000003230 <sin@plt>:
    3230:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3234:	ldr	x17, [x16, #312]
    3238:	add	x16, x16, #0x138
    323c:	br	x17

0000000000003240 <_Py_dg_stdnan@plt>:
    3240:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3244:	ldr	x17, [x16, #320]
    3248:	add	x16, x16, #0x140
    324c:	br	x17

0000000000003250 <log1p@plt>:
    3250:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3254:	ldr	x17, [x16, #328]
    3258:	add	x16, x16, #0x148
    325c:	br	x17

0000000000003260 <__gmon_start__@plt>:
    3260:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3264:	ldr	x17, [x16, #336]
    3268:	add	x16, x16, #0x150
    326c:	br	x17

0000000000003270 <erf@plt>:
    3270:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3274:	ldr	x17, [x16, #344]
    3278:	add	x16, x16, #0x158
    327c:	br	x17

0000000000003280 <_PyArg_CheckPositional@plt>:
    3280:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3284:	ldr	x17, [x16, #352]
    3288:	add	x16, x16, #0x160
    328c:	br	x17

0000000000003290 <PyLong_AsLongAndOverflow@plt>:
    3290:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3294:	ldr	x17, [x16, #360]
    3298:	add	x16, x16, #0x168
    329c:	br	x17

00000000000032a0 <Py_BuildValue@plt>:
    32a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32a4:	ldr	x17, [x16, #368]
    32a8:	add	x16, x16, #0x170
    32ac:	br	x17

00000000000032b0 <PyErr_Occurred@plt>:
    32b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32b4:	ldr	x17, [x16, #376]
    32b8:	add	x16, x16, #0x178
    32bc:	br	x17

00000000000032c0 <PyModule_Create2@plt>:
    32c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32c4:	ldr	x17, [x16, #384]
    32c8:	add	x16, x16, #0x180
    32cc:	br	x17

00000000000032d0 <_Py_CheckFunctionResult@plt>:
    32d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32d4:	ldr	x17, [x16, #392]
    32d8:	add	x16, x16, #0x188
    32dc:	br	x17

00000000000032e0 <PyFloat_AsDouble@plt>:
    32e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32e4:	ldr	x17, [x16, #400]
    32e8:	add	x16, x16, #0x190
    32ec:	br	x17

00000000000032f0 <PyArg_ParseTuple@plt>:
    32f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    32f4:	ldr	x17, [x16, #408]
    32f8:	add	x16, x16, #0x198
    32fc:	br	x17

0000000000003300 <Py_FatalError@plt>:
    3300:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3304:	ldr	x17, [x16, #416]
    3308:	add	x16, x16, #0x1a0
    330c:	br	x17

0000000000003310 <erfc@plt>:
    3310:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3314:	ldr	x17, [x16, #424]
    3318:	add	x16, x16, #0x1a8
    331c:	br	x17

0000000000003320 <modf@plt>:
    3320:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3324:	ldr	x17, [x16, #432]
    3328:	add	x16, x16, #0x1b0
    332c:	br	x17

0000000000003330 <PyLong_AsDouble@plt>:
    3330:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3334:	ldr	x17, [x16, #440]
    3338:	add	x16, x16, #0x1b8
    333c:	br	x17

0000000000003340 <frexp@plt>:
    3340:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3344:	ldr	x17, [x16, #448]
    3348:	add	x16, x16, #0x1c0
    334c:	br	x17

0000000000003350 <PyLong_FromUnsignedLong@plt>:
    3350:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3354:	ldr	x17, [x16, #456]
    3358:	add	x16, x16, #0x1c8
    335c:	br	x17

0000000000003360 <_Py_dg_infinity@plt>:
    3360:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3364:	ldr	x17, [x16, #464]
    3368:	add	x16, x16, #0x1d0
    336c:	br	x17

0000000000003370 <PyObject_GetIter@plt>:
    3370:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3374:	ldr	x17, [x16, #472]
    3378:	add	x16, x16, #0x1d8
    337c:	br	x17

0000000000003380 <PyModule_AddObject@plt>:
    3380:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3384:	ldr	x17, [x16, #480]
    3388:	add	x16, x16, #0x1e0
    338c:	br	x17

0000000000003390 <PySequence_Tuple@plt>:
    3390:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3394:	ldr	x17, [x16, #488]
    3398:	add	x16, x16, #0x1e8
    339c:	br	x17

00000000000033a0 <fmod@plt>:
    33a0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33a4:	ldr	x17, [x16, #496]
    33a8:	add	x16, x16, #0x1f0
    33ac:	br	x17

00000000000033b0 <PyType_IsSubtype@plt>:
    33b0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33b4:	ldr	x17, [x16, #504]
    33b8:	add	x16, x16, #0x1f8
    33bc:	br	x17

00000000000033c0 <PyErr_Format@plt>:
    33c0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33c4:	ldr	x17, [x16, #512]
    33c8:	add	x16, x16, #0x200
    33cc:	br	x17

00000000000033d0 <_PyObject_MakeTpCall@plt>:
    33d0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33d4:	ldr	x17, [x16, #520]
    33d8:	add	x16, x16, #0x208
    33dc:	br	x17

00000000000033e0 <PyNumber_Index@plt>:
    33e0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33e4:	ldr	x17, [x16, #528]
    33e8:	add	x16, x16, #0x210
    33ec:	br	x17

00000000000033f0 <__errno_location@plt>:
    33f0:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    33f4:	ldr	x17, [x16, #536]
    33f8:	add	x16, x16, #0x218
    33fc:	br	x17

0000000000003400 <cos@plt>:
    3400:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3404:	ldr	x17, [x16, #544]
    3408:	add	x16, x16, #0x220
    340c:	br	x17

0000000000003410 <PyMem_Malloc@plt>:
    3410:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3414:	ldr	x17, [x16, #552]
    3418:	add	x16, x16, #0x228
    341c:	br	x17

0000000000003420 <PyNumber_Subtract@plt>:
    3420:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3424:	ldr	x17, [x16, #560]
    3428:	add	x16, x16, #0x230
    342c:	br	x17

0000000000003430 <PyNumber_TrueDivide@plt>:
    3430:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3434:	ldr	x17, [x16, #568]
    3438:	add	x16, x16, #0x238
    343c:	br	x17

0000000000003440 <exp@plt>:
    3440:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3444:	ldr	x17, [x16, #576]
    3448:	add	x16, x16, #0x240
    344c:	br	x17

0000000000003450 <_PyLong_Lshift@plt>:
    3450:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3454:	ldr	x17, [x16, #584]
    3458:	add	x16, x16, #0x248
    345c:	br	x17

0000000000003460 <PyNumber_FloorDivide@plt>:
    3460:	adrp	x16, 1c000 <memcpy@GLIBC_2.17>
    3464:	ldr	x17, [x16, #592]
    3468:	add	x16, x16, #0x250
    346c:	br	x17

Disassembly of section .text:

0000000000003470 <PyInit_math@@Base-0x49a8>:
    3470:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    3474:	ldr	x0, [x0, #3928]
    3478:	cbz	x0, 3480 <PyNumber_FloorDivide@plt+0x20>
    347c:	b	3260 <__gmon_start__@plt>
    3480:	ret
    3484:	nop
    3488:	adrp	x0, 1c000 <_Py_log1p@@Base+0x14110>
    348c:	add	x0, x0, #0x9f0
    3490:	adrp	x1, 1c000 <_Py_log1p@@Base+0x14110>
    3494:	add	x1, x1, #0x9f0
    3498:	cmp	x1, x0
    349c:	b.eq	34b4 <PyNumber_FloorDivide@plt+0x54>  // b.none
    34a0:	adrp	x1, 1b000 <_Py_log1p@@Base+0x13110>
    34a4:	ldr	x1, [x1, #3808]
    34a8:	cbz	x1, 34b4 <PyNumber_FloorDivide@plt+0x54>
    34ac:	mov	x16, x1
    34b0:	br	x16
    34b4:	ret
    34b8:	adrp	x0, 1c000 <_Py_log1p@@Base+0x14110>
    34bc:	add	x0, x0, #0x9f0
    34c0:	adrp	x1, 1c000 <_Py_log1p@@Base+0x14110>
    34c4:	add	x1, x1, #0x9f0
    34c8:	sub	x1, x1, x0
    34cc:	lsr	x2, x1, #63
    34d0:	add	x1, x2, x1, asr #3
    34d4:	cmp	xzr, x1, asr #1
    34d8:	asr	x1, x1, #1
    34dc:	b.eq	34f4 <PyNumber_FloorDivide@plt+0x94>  // b.none
    34e0:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    34e4:	ldr	x2, [x2, #4040]
    34e8:	cbz	x2, 34f4 <PyNumber_FloorDivide@plt+0x94>
    34ec:	mov	x16, x2
    34f0:	br	x16
    34f4:	ret
    34f8:	stp	x29, x30, [sp, #-32]!
    34fc:	mov	x29, sp
    3500:	str	x19, [sp, #16]
    3504:	adrp	x19, 1c000 <_Py_log1p@@Base+0x14110>
    3508:	ldrb	w0, [x19, #2544]
    350c:	cbnz	w0, 3534 <PyNumber_FloorDivide@plt+0xd4>
    3510:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    3514:	ldr	x0, [x0, #3848]
    3518:	cbz	x0, 3528 <PyNumber_FloorDivide@plt+0xc8>
    351c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x14110>
    3520:	ldr	x0, [x0, #600]
    3524:	bl	3070 <__cxa_finalize@plt>
    3528:	bl	3488 <PyNumber_FloorDivide@plt+0x28>
    352c:	mov	w0, #0x1                   	// #1
    3530:	strb	w0, [x19, #2544]
    3534:	ldr	x19, [sp, #16]
    3538:	ldp	x29, x30, [sp], #32
    353c:	ret
    3540:	b	34b8 <PyNumber_FloorDivide@plt+0x58>
    3544:	nop
    3548:	fmov	d1, #5.000000000000000000e+00
    354c:	fcmpe	d0, d1
    3550:	b.pl	35a8 <PyNumber_FloorDivide@plt+0x148>  // b.nfrst
    3554:	movi	d1, #0x0
    3558:	adrp	x3, 8000 <_Py_log1p@@Base+0x110>
    355c:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    3560:	add	x1, x1, #0x4c0
    3564:	add	x2, x1, #0x68
    3568:	ldr	d3, [x3, #1072]
    356c:	mov	x0, #0x58                  	// #88
    3570:	fmov	d4, #1.000000000000000000e+00
    3574:	fmov	d2, d1
    3578:	b	3588 <PyNumber_FloorDivide@plt+0x128>
    357c:	ldr	d3, [x0, x1]
    3580:	ldr	d4, [x0, x2]
    3584:	sub	x0, x0, #0x8
    3588:	fmul	d2, d2, d0
    358c:	fmul	d1, d1, d0
    3590:	cmn	x0, #0x8
    3594:	fadd	d2, d2, d3
    3598:	fadd	d1, d1, d4
    359c:	b.ne	357c <PyNumber_FloorDivide@plt+0x11c>  // b.any
    35a0:	fdiv	d0, d2, d1
    35a4:	ret
    35a8:	movi	d3, #0x0
    35ac:	adrp	x3, 8000 <_Py_log1p@@Base+0x110>
    35b0:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    35b4:	add	x1, x1, #0x4c0
    35b8:	add	x2, x1, #0x68
    35bc:	ldr	d4, [x3, #1080]
    35c0:	mov	x0, #0x0                   	// #0
    35c4:	fmov	d1, d3
    35c8:	fmov	d2, d3
    35cc:	b	35d8 <PyNumber_FloorDivide@plt+0x178>
    35d0:	ldr	d4, [x0, x1]
    35d4:	ldr	d3, [x0, x2]
    35d8:	fdiv	d2, d2, d0
    35dc:	add	x0, x0, #0x8
    35e0:	fdiv	d1, d1, d0
    35e4:	cmp	x0, #0x68
    35e8:	fadd	d2, d2, d4
    35ec:	fadd	d1, d1, d3
    35f0:	b.ne	35d0 <PyNumber_FloorDivide@plt+0x170>  // b.any
    35f4:	fdiv	d0, d2, d1
    35f8:	ret
    35fc:	nop
    3600:	lsr	x1, x0, #62
    3604:	lsr	x5, x0, #59
    3608:	add	x6, x1, #0x1
    360c:	lsr	x4, x0, #53
    3610:	lsr	x3, x0, #41
    3614:	lsr	x2, x0, #17
    3618:	add	w1, w1, #0x1
    361c:	udiv	x0, x5, x6
    3620:	add	w1, w0, w1, lsl #1
    3624:	mov	x0, x1
    3628:	udiv	x1, x4, x1
    362c:	add	w1, w1, w0, lsl #3
    3630:	mov	x0, x1
    3634:	udiv	x1, x3, x1
    3638:	add	w1, w1, w0, lsl #7
    363c:	lsl	w0, w1, #15
    3640:	udiv	x1, x2, x1
    3644:	add	x0, x1, x0
    3648:	ret
    364c:	nop
    3650:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    3654:	mov	x0, x1
    3658:	ldr	x1, [x1, #8]
    365c:	ldr	x2, [x2, #3824]
    3660:	cmp	x1, x2
    3664:	b.eq	3694 <PyNumber_FloorDivide@plt+0x234>  // b.none
    3668:	stp	x29, x30, [sp, #-16]!
    366c:	mov	x29, sp
    3670:	bl	32e0 <PyFloat_AsDouble@plt>
    3674:	fmov	d1, #-1.000000000000000000e+00
    3678:	fcmp	d0, d1
    367c:	b.eq	36a8 <PyNumber_FloorDivide@plt+0x248>  // b.none
    3680:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3684:	ldp	x29, x30, [sp], #16
    3688:	ldr	d1, [x0, #1088]
    368c:	fmul	d0, d0, d1
    3690:	b	31c0 <PyFloat_FromDouble@plt>
    3694:	ldr	d0, [x0, #16]
    3698:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    369c:	ldr	d1, [x0, #1088]
    36a0:	fmul	d0, d0, d1
    36a4:	b	31c0 <PyFloat_FromDouble@plt>
    36a8:	bl	32b0 <PyErr_Occurred@plt>
    36ac:	cbnz	x0, 36c0 <PyNumber_FloorDivide@plt+0x260>
    36b0:	ldp	x29, x30, [sp], #16
    36b4:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    36b8:	ldr	d0, [x0, #1096]
    36bc:	b	31c0 <PyFloat_FromDouble@plt>
    36c0:	mov	x0, #0x0                   	// #0
    36c4:	ldp	x29, x30, [sp], #16
    36c8:	ret
    36cc:	nop
    36d0:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    36d4:	mov	x0, x1
    36d8:	ldr	x1, [x1, #8]
    36dc:	ldr	x2, [x2, #3824]
    36e0:	cmp	x1, x2
    36e4:	b.eq	3714 <PyNumber_FloorDivide@plt+0x2b4>  // b.none
    36e8:	stp	x29, x30, [sp, #-16]!
    36ec:	mov	x29, sp
    36f0:	bl	32e0 <PyFloat_AsDouble@plt>
    36f4:	fmov	d1, #-1.000000000000000000e+00
    36f8:	fcmp	d0, d1
    36fc:	b.eq	3728 <PyNumber_FloorDivide@plt+0x2c8>  // b.none
    3700:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3704:	ldp	x29, x30, [sp], #16
    3708:	ldr	d1, [x0, #1104]
    370c:	fmul	d0, d0, d1
    3710:	b	31c0 <PyFloat_FromDouble@plt>
    3714:	ldr	d0, [x0, #16]
    3718:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    371c:	ldr	d1, [x0, #1104]
    3720:	fmul	d0, d0, d1
    3724:	b	31c0 <PyFloat_FromDouble@plt>
    3728:	bl	32b0 <PyErr_Occurred@plt>
    372c:	cbnz	x0, 3740 <PyNumber_FloorDivide@plt+0x2e0>
    3730:	ldp	x29, x30, [sp], #16
    3734:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3738:	ldr	d0, [x0, #1112]
    373c:	b	31c0 <PyFloat_FromDouble@plt>
    3740:	mov	x0, #0x0                   	// #0
    3744:	ldp	x29, x30, [sp], #16
    3748:	ret
    374c:	nop
    3750:	stp	x29, x30, [sp, #-48]!
    3754:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3758:	fmov	d2, x0
    375c:	mov	x29, sp
    3760:	stp	d10, d11, [sp, #32]
    3764:	fabs	d10, d0
    3768:	stp	d8, d9, [sp, #16]
    376c:	fmov	d9, d0
    3770:	fcmp	d10, d2
    3774:	b.hi	3784 <PyNumber_FloorDivide@plt+0x324>  // b.pmore
    3778:	fabs	d11, d1
    377c:	fcmp	d11, d2
    3780:	b.ls	37bc <PyNumber_FloorDivide@plt+0x35c>  // b.plast
    3784:	fcmp	d9, d9
    3788:	b.vs	3804 <PyNumber_FloorDivide@plt+0x3a4>
    378c:	fcmp	d1, d1
    3790:	b.vs	380c <PyNumber_FloorDivide@plt+0x3ac>
    3794:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3798:	fmov	d0, x0
    379c:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    37a0:	fmov	d1, x0
    37a4:	fcmp	d10, d0
    37a8:	fcsel	d0, d9, d1, le
    37ac:	ldp	d8, d9, [sp, #16]
    37b0:	ldp	d10, d11, [sp, #32]
    37b4:	ldp	x29, x30, [sp], #48
    37b8:	ret
    37bc:	fcmp	d1, #0.0
    37c0:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    37c4:	fmov	d0, x0
    37c8:	b.eq	37ac <PyNumber_FloorDivide@plt+0x34c>  // b.none
    37cc:	fmov	d1, d11
    37d0:	fmov	d0, d10
    37d4:	bl	33a0 <fmod@plt>
    37d8:	fmov	d8, d0
    37dc:	fsub	d0, d11, d0
    37e0:	fcmpe	d8, d0
    37e4:	b.mi	37f0 <PyNumber_FloorDivide@plt+0x390>  // b.first
    37e8:	b.le	3814 <PyNumber_FloorDivide@plt+0x3b4>
    37ec:	fneg	d8, d0
    37f0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    37f4:	fmov	d0, x0
    37f8:	and	v0.8b, v9.8b, v0.8b
    37fc:	eor	v0.8b, v0.8b, v8.8b
    3800:	b	37ac <PyNumber_FloorDivide@plt+0x34c>
    3804:	fmov	d0, d9
    3808:	b	37ac <PyNumber_FloorDivide@plt+0x34c>
    380c:	fmov	d0, d1
    3810:	b	37ac <PyNumber_FloorDivide@plt+0x34c>
    3814:	fsub	d10, d10, d8
    3818:	fmov	d0, #5.000000000000000000e-01
    381c:	fmov	d1, d11
    3820:	fmul	d0, d10, d0
    3824:	bl	33a0 <fmod@plt>
    3828:	fadd	d0, d0, d0
    382c:	fsub	d8, d8, d0
    3830:	b	37f0 <PyNumber_FloorDivide@plt+0x390>
    3834:	nop
    3838:	stp	x29, x30, [sp, #-32]!
    383c:	fmov	d1, #2.000000000000000000e+00
    3840:	mov	x29, sp
    3844:	str	d8, [sp, #16]
    3848:	fmov	d8, d0
    384c:	fabs	d0, d0
    3850:	bl	33a0 <fmod@plt>
    3854:	fadd	d1, d0, d0
    3858:	fcvtas	w0, d1
    385c:	cmp	w0, #0x2
    3860:	b.eq	38ec <PyNumber_FloorDivide@plt+0x48c>  // b.none
    3864:	b.gt	38a8 <PyNumber_FloorDivide@plt+0x448>
    3868:	cbz	w0, 3920 <PyNumber_FloorDivide@plt+0x4c0>
    386c:	cmp	w0, #0x1
    3870:	b.ne	3984 <PyNumber_FloorDivide@plt+0x524>  // b.any
    3874:	fmov	d2, #5.000000000000000000e-01
    3878:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    387c:	fsub	d0, d0, d2
    3880:	ldr	d1, [x0, #1120]
    3884:	fmul	d0, d0, d1
    3888:	bl	3400 <cos@plt>
    388c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3890:	fmov	d1, x0
    3894:	and	v8.8b, v8.8b, v1.8b
    3898:	eor	v0.8b, v8.8b, v0.8b
    389c:	ldr	d8, [sp, #16]
    38a0:	ldp	x29, x30, [sp], #32
    38a4:	ret
    38a8:	cmp	w0, #0x3
    38ac:	b.eq	394c <PyNumber_FloorDivide@plt+0x4ec>  // b.none
    38b0:	cmp	w0, #0x4
    38b4:	b.ne	3984 <PyNumber_FloorDivide@plt+0x524>  // b.any
    38b8:	fmov	d2, #2.000000000000000000e+00
    38bc:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    38c0:	fsub	d0, d0, d2
    38c4:	ldr	d1, [x0, #1120]
    38c8:	fmul	d0, d0, d1
    38cc:	bl	3230 <sin@plt>
    38d0:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    38d4:	fmov	d1, x0
    38d8:	and	v8.8b, v8.8b, v1.8b
    38dc:	eor	v0.8b, v8.8b, v0.8b
    38e0:	ldr	d8, [sp, #16]
    38e4:	ldp	x29, x30, [sp], #32
    38e8:	ret
    38ec:	fmov	d1, #1.000000000000000000e+00
    38f0:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    38f4:	fsub	d0, d1, d0
    38f8:	ldr	d2, [x0, #1120]
    38fc:	fmul	d0, d0, d2
    3900:	bl	3230 <sin@plt>
    3904:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3908:	fmov	d1, x0
    390c:	and	v8.8b, v8.8b, v1.8b
    3910:	eor	v0.8b, v8.8b, v0.8b
    3914:	ldr	d8, [sp, #16]
    3918:	ldp	x29, x30, [sp], #32
    391c:	ret
    3920:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3924:	ldr	d1, [x0, #1120]
    3928:	fmul	d0, d0, d1
    392c:	bl	3230 <sin@plt>
    3930:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    3934:	fmov	d1, x0
    3938:	and	v8.8b, v8.8b, v1.8b
    393c:	eor	v0.8b, v8.8b, v0.8b
    3940:	ldr	d8, [sp, #16]
    3944:	ldp	x29, x30, [sp], #32
    3948:	ret
    394c:	fmov	d2, #1.500000000000000000e+00
    3950:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3954:	fsub	d0, d0, d2
    3958:	ldr	d1, [x0, #1120]
    395c:	fmul	d0, d0, d1
    3960:	bl	3400 <cos@plt>
    3964:	fneg	d0, d0
    3968:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    396c:	fmov	d1, x0
    3970:	and	v8.8b, v8.8b, v1.8b
    3974:	eor	v0.8b, v8.8b, v0.8b
    3978:	ldr	d8, [sp, #16]
    397c:	ldp	x29, x30, [sp], #32
    3980:	ret
    3984:	adrp	x0, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    3988:	add	x0, x0, #0xf10
    398c:	bl	3300 <Py_FatalError@plt>
    3990:	stp	x29, x30, [sp, #-48]!
    3994:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3998:	fmov	d1, x0
    399c:	mov	x29, sp
    39a0:	stp	d8, d9, [sp, #16]
    39a4:	fabs	d9, d0
    39a8:	fmov	d8, d0
    39ac:	fcmp	d9, d1
    39b0:	b.ls	39d4 <PyNumber_FloorDivide@plt+0x574>  // b.plast
    39b4:	fcmp	d0, d0
    39b8:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    39bc:	fmov	d0, x0
    39c0:	fcsel	d8, d8, d0, vs
    39c4:	fmov	d0, d8
    39c8:	ldp	d8, d9, [sp, #16]
    39cc:	ldp	x29, x30, [sp], #48
    39d0:	ret
    39d4:	frintm	d0, d0
    39d8:	fcmp	d0, d8
    39dc:	b.ne	39fc <PyNumber_FloorDivide@plt+0x59c>  // b.any
    39e0:	fmov	d0, #2.000000000000000000e+00
    39e4:	fcmpe	d8, d0
    39e8:	b.hi	39fc <PyNumber_FloorDivide@plt+0x59c>  // b.pmore
    39ec:	fcmpe	d8, #0.0
    39f0:	b.ls	3af0 <PyNumber_FloorDivide@plt+0x690>  // b.plast
    39f4:	movi	d8, #0x0
    39f8:	b	39c4 <PyNumber_FloorDivide@plt+0x564>
    39fc:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3a00:	ldr	d0, [x0, #1128]
    3a04:	fcmpe	d9, d0
    3a08:	b.mi	3ad4 <PyNumber_FloorDivide@plt+0x674>  // b.first
    3a0c:	fmov	d0, d9
    3a10:	stp	d10, d11, [sp, #32]
    3a14:	fmov	d10, #5.000000000000000000e-01
    3a18:	bl	3548 <PyNumber_FloorDivide@plt+0xe8>
    3a1c:	bl	31a0 <log@plt>
    3a20:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3a24:	ldr	d11, [x0, #1136]
    3a28:	fadd	d1, d9, d11
    3a2c:	fsub	d11, d0, d11
    3a30:	fsub	d0, d1, d10
    3a34:	bl	31a0 <log@plt>
    3a38:	fsub	d10, d9, d10
    3a3c:	fmov	d1, #1.000000000000000000e+00
    3a40:	fcmpe	d8, #0.0
    3a44:	fsub	d8, d0, d1
    3a48:	fmul	d10, d10, d8
    3a4c:	fadd	d8, d10, d11
    3a50:	b.mi	3a9c <PyNumber_FloorDivide@plt+0x63c>  // b.first
    3a54:	fabs	d1, d8
    3a58:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3a5c:	fmov	d0, x0
    3a60:	fcmp	d1, d0
    3a64:	b.le	3a88 <PyNumber_FloorDivide@plt+0x628>
    3a68:	bl	33f0 <__errno_location@plt>
    3a6c:	fmov	d0, d8
    3a70:	mov	w1, #0x22                  	// #34
    3a74:	ldp	d10, d11, [sp, #32]
    3a78:	str	w1, [x0]
    3a7c:	ldp	d8, d9, [sp, #16]
    3a80:	ldp	x29, x30, [sp], #48
    3a84:	ret
    3a88:	fmov	d0, d8
    3a8c:	ldp	d8, d9, [sp, #16]
    3a90:	ldp	d10, d11, [sp, #32]
    3a94:	ldp	x29, x30, [sp], #48
    3a98:	ret
    3a9c:	fmov	d0, d9
    3aa0:	bl	3838 <PyNumber_FloorDivide@plt+0x3d8>
    3aa4:	fabs	d0, d0
    3aa8:	bl	31a0 <log@plt>
    3aac:	fmov	d1, d0
    3ab0:	fmov	d0, d9
    3ab4:	fmov	d9, d1
    3ab8:	bl	31a0 <log@plt>
    3abc:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    3ac0:	ldr	d1, [x0, #1144]
    3ac4:	fsub	d1, d1, d9
    3ac8:	fsub	d1, d1, d0
    3acc:	fsub	d8, d1, d8
    3ad0:	b	3a54 <PyNumber_FloorDivide@plt+0x5f4>
    3ad4:	fmov	d0, d9
    3ad8:	bl	31a0 <log@plt>
    3adc:	fneg	d8, d0
    3ae0:	fmov	d0, d8
    3ae4:	ldp	d8, d9, [sp, #16]
    3ae8:	ldp	x29, x30, [sp], #48
    3aec:	ret
    3af0:	bl	33f0 <__errno_location@plt>
    3af4:	mov	w2, #0x21                  	// #33
    3af8:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
    3afc:	fmov	d8, x1
    3b00:	str	w2, [x0]
    3b04:	b	39c4 <PyNumber_FloorDivide@plt+0x564>
    3b08:	stp	x29, x30, [sp, #-96]!
    3b0c:	mov	x0, x1
    3b10:	mov	x29, sp
    3b14:	stp	x21, x22, [sp, #32]
    3b18:	bl	33e0 <PyNumber_Index@plt>
    3b1c:	cbz	x0, 3d60 <PyNumber_FloorDivide@plt+0x900>
    3b20:	stp	x19, x20, [sp, #16]
    3b24:	mov	x20, x0
    3b28:	bl	30c0 <_PyLong_Sign@plt>
    3b2c:	tbnz	w0, #31, 3db0 <PyNumber_FloorDivide@plt+0x950>
    3b30:	mov	x0, x20
    3b34:	bl	30c0 <_PyLong_Sign@plt>
    3b38:	cbnz	w0, 3b60 <PyNumber_FloorDivide@plt+0x700>
    3b3c:	ldr	x0, [x20]
    3b40:	sub	x0, x0, #0x1
    3b44:	str	x0, [x20]
    3b48:	cbz	x0, 3e84 <PyNumber_FloorDivide@plt+0xa24>
    3b4c:	ldp	x19, x20, [sp, #16]
    3b50:	mov	x0, #0x0                   	// #0
    3b54:	ldp	x21, x22, [sp, #32]
    3b58:	ldp	x29, x30, [sp], #96
    3b5c:	b	31e0 <PyLong_FromLong@plt>
    3b60:	mov	x0, x20
    3b64:	bl	30f0 <_PyLong_NumBits@plt>
    3b68:	cmn	x0, #0x1
    3b6c:	b.eq	3d98 <PyNumber_FloorDivide@plt+0x938>  // b.none
    3b70:	stp	x25, x26, [sp, #64]
    3b74:	sub	x25, x0, #0x1
    3b78:	cmp	x25, #0x3f
    3b7c:	lsr	x26, x25, #1
    3b80:	b.ls	3d28 <PyNumber_FloorDivide@plt+0x8c8>  // b.plast
    3b84:	stp	x23, x24, [sp, #48]
    3b88:	cmp	xzr, x25, lsr #7
    3b8c:	mov	w24, #0x1                   	// #1
    3b90:	mov	w19, #0x6                   	// #6
    3b94:	b.eq	3bac <PyNumber_FloorDivide@plt+0x74c>  // b.none
    3b98:	mov	w24, w19
    3b9c:	add	w19, w19, #0x1
    3ba0:	lsr	x0, x26, x19
    3ba4:	cbnz	x0, 3b98 <PyNumber_FloorDivide@plt+0x738>
    3ba8:	sub	w24, w24, #0x4
    3bac:	and	x1, x25, #0xfffffffffffffffe
    3bb0:	mov	x0, x20
    3bb4:	sub	x1, x1, #0x3e
    3bb8:	orr	x25, x25, #0x1
    3bbc:	bl	3100 <_PyLong_Rshift@plt>
    3bc0:	mov	x21, x0
    3bc4:	cbz	x0, 3e78 <PyNumber_FloorDivide@plt+0xa18>
    3bc8:	bl	3050 <PyLong_AsUnsignedLongLong@plt>
    3bcc:	mov	x22, x0
    3bd0:	ldr	x1, [x21]
    3bd4:	sub	x1, x1, #0x1
    3bd8:	str	x1, [x21]
    3bdc:	cbz	x1, 3ec8 <PyNumber_FloorDivide@plt+0xa68>
    3be0:	cmn	x22, #0x1
    3be4:	b.eq	3e6c <PyNumber_FloorDivide@plt+0xa0c>  // b.none
    3be8:	mov	x0, x22
    3bec:	bl	3600 <PyNumber_FloorDivide@plt+0x1a0>
    3bf0:	lsr	x24, x26, x24
    3bf4:	mov	w1, #0x1f                  	// #31
    3bf8:	sub	w1, w1, w24
    3bfc:	lsr	x0, x0, x1
    3c00:	bl	3040 <PyLong_FromUnsignedLongLong@plt>
    3c04:	mov	x21, x0
    3c08:	cbz	x0, 3e78 <PyNumber_FloorDivide@plt+0xa18>
    3c0c:	subs	w19, w19, #0x6
    3c10:	b.mi	3cc4 <PyNumber_FloorDivide@plt+0x864>  // b.first
    3c14:	str	x27, [sp, #80]
    3c18:	mov	x27, x24
    3c1c:	lsr	x24, x26, x19
    3c20:	add	x1, x27, x24
    3c24:	mov	x0, x20
    3c28:	sub	x1, x25, x1
    3c2c:	bl	3100 <_PyLong_Rshift@plt>
    3c30:	mov	x23, x0
    3c34:	cbz	x0, 3ea0 <PyNumber_FloorDivide@plt+0xa40>
    3c38:	mov	x1, x21
    3c3c:	bl	3460 <PyNumber_FloorDivide@plt>
    3c40:	ldr	x1, [x23]
    3c44:	mov	x22, x0
    3c48:	sub	x0, x1, #0x1
    3c4c:	str	x0, [x23]
    3c50:	cbz	x0, 3df8 <PyNumber_FloorDivide@plt+0x998>
    3c54:	cbz	x22, 3ea0 <PyNumber_FloorDivide@plt+0xa40>
    3c58:	sub	x1, x24, x27
    3c5c:	mov	x0, x21
    3c60:	sub	x1, x1, #0x1
    3c64:	bl	3450 <_PyLong_Lshift@plt>
    3c68:	ldr	x1, [x21]
    3c6c:	mov	x23, x0
    3c70:	sub	x0, x1, #0x1
    3c74:	str	x0, [x21]
    3c78:	cbz	x0, 3e04 <PyNumber_FloorDivide@plt+0x9a4>
    3c7c:	cbz	x23, 3d74 <PyNumber_FloorDivide@plt+0x914>
    3c80:	mov	x1, x22
    3c84:	mov	x0, x23
    3c88:	bl	3060 <PyNumber_Add@plt>
    3c8c:	mov	x21, x0
    3c90:	ldr	x1, [x23]
    3c94:	sub	x0, x1, #0x1
    3c98:	str	x0, [x23]
    3c9c:	cbz	x0, 3e60 <PyNumber_FloorDivide@plt+0xa00>
    3ca0:	ldr	x0, [x22]
    3ca4:	sub	x0, x0, #0x1
    3ca8:	str	x0, [x22]
    3cac:	cbz	x0, 3e10 <PyNumber_FloorDivide@plt+0x9b0>
    3cb0:	cbz	x21, 3ee0 <PyNumber_FloorDivide@plt+0xa80>
    3cb4:	sub	w19, w19, #0x1
    3cb8:	cmn	w19, #0x1
    3cbc:	b.ne	3c18 <PyNumber_FloorDivide@plt+0x7b8>  // b.any
    3cc0:	ldr	x27, [sp, #80]
    3cc4:	mov	x1, x21
    3cc8:	mov	x0, x21
    3ccc:	bl	30d0 <PyNumber_Multiply@plt>
    3cd0:	mov	x19, x0
    3cd4:	cbz	x0, 3ea4 <PyNumber_FloorDivide@plt+0xa44>
    3cd8:	mov	x1, x0
    3cdc:	mov	w2, #0x0                   	// #0
    3ce0:	mov	x0, x20
    3ce4:	bl	31f0 <PyObject_RichCompareBool@plt>
    3ce8:	ldr	x1, [x19]
    3cec:	mov	w22, w0
    3cf0:	sub	x1, x1, #0x1
    3cf4:	str	x1, [x19]
    3cf8:	cbz	x1, 3ef0 <PyNumber_FloorDivide@plt+0xa90>
    3cfc:	cmn	w22, #0x1
    3d00:	b.eq	3ea4 <PyNumber_FloorDivide@plt+0xa44>  // b.none
    3d04:	cbnz	w22, 3f14 <PyNumber_FloorDivide@plt+0xab4>
    3d08:	ldr	x0, [x20]
    3d0c:	sub	x0, x0, #0x1
    3d10:	str	x0, [x20]
    3d14:	cbz	x0, 3efc <PyNumber_FloorDivide@plt+0xa9c>
    3d18:	ldp	x19, x20, [sp, #16]
    3d1c:	ldp	x23, x24, [sp, #48]
    3d20:	ldp	x25, x26, [sp, #64]
    3d24:	b	3d64 <PyNumber_FloorDivide@plt+0x904>
    3d28:	mov	x0, x20
    3d2c:	bl	3050 <PyLong_AsUnsignedLongLong@plt>
    3d30:	ldr	x1, [x20]
    3d34:	mov	x19, x0
    3d38:	sub	x0, x1, #0x1
    3d3c:	str	x0, [x20]
    3d40:	cbz	x0, 3ed4 <PyNumber_FloorDivide@plt+0xa74>
    3d44:	cmn	x19, #0x1
    3d48:	b.ne	3e1c <PyNumber_FloorDivide@plt+0x9bc>  // b.any
    3d4c:	bl	32b0 <PyErr_Occurred@plt>
    3d50:	cbz	x0, 3e1c <PyNumber_FloorDivide@plt+0x9bc>
    3d54:	ldp	x19, x20, [sp, #16]
    3d58:	ldp	x25, x26, [sp, #64]
    3d5c:	nop
    3d60:	mov	x21, #0x0                   	// #0
    3d64:	mov	x0, x21
    3d68:	ldp	x21, x22, [sp, #32]
    3d6c:	ldp	x29, x30, [sp], #96
    3d70:	ret
    3d74:	ldr	x0, [x22]
    3d78:	sub	x0, x0, #0x1
    3d7c:	str	x0, [x22]
    3d80:	cbnz	x0, 3ee0 <PyNumber_FloorDivide@plt+0xa80>
    3d84:	mov	x0, x22
    3d88:	bl	3080 <_Py_Dealloc@plt>
    3d8c:	ldp	x23, x24, [sp, #48]
    3d90:	ldp	x25, x26, [sp, #64]
    3d94:	ldr	x27, [sp, #80]
    3d98:	ldr	x0, [x20]
    3d9c:	sub	x0, x0, #0x1
    3da0:	str	x0, [x20]
    3da4:	cbz	x0, 3dd8 <PyNumber_FloorDivide@plt+0x978>
    3da8:	ldp	x19, x20, [sp, #16]
    3dac:	b	3d60 <PyNumber_FloorDivide@plt+0x900>
    3db0:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    3db4:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    3db8:	add	x1, x1, #0xf30
    3dbc:	ldr	x0, [x0, #3872]
    3dc0:	ldr	x0, [x0]
    3dc4:	bl	3130 <PyErr_SetString@plt>
    3dc8:	ldr	x0, [x20]
    3dcc:	sub	x0, x0, #0x1
    3dd0:	str	x0, [x20]
    3dd4:	cbnz	x0, 3da8 <PyNumber_FloorDivide@plt+0x948>
    3dd8:	mov	x0, x20
    3ddc:	mov	x21, #0x0                   	// #0
    3de0:	bl	3080 <_Py_Dealloc@plt>
    3de4:	mov	x0, x21
    3de8:	ldp	x19, x20, [sp, #16]
    3dec:	ldp	x21, x22, [sp, #32]
    3df0:	ldp	x29, x30, [sp], #96
    3df4:	ret
    3df8:	mov	x0, x23
    3dfc:	bl	3080 <_Py_Dealloc@plt>
    3e00:	b	3c54 <PyNumber_FloorDivide@plt+0x7f4>
    3e04:	mov	x0, x21
    3e08:	bl	3080 <_Py_Dealloc@plt>
    3e0c:	b	3c7c <PyNumber_FloorDivide@plt+0x81c>
    3e10:	mov	x0, x22
    3e14:	bl	3080 <_Py_Dealloc@plt>
    3e18:	b	3cb0 <PyNumber_FloorDivide@plt+0x850>
    3e1c:	mov	x7, #0x1f                  	// #31
    3e20:	sub	x0, x7, x26
    3e24:	lsl	w0, w0, #1
    3e28:	lsl	x0, x19, x0
    3e2c:	bl	3600 <PyNumber_FloorDivide@plt+0x1a0>
    3e30:	sub	w26, w7, w26
    3e34:	ldp	x21, x22, [sp, #32]
    3e38:	lsr	x0, x0, x26
    3e3c:	ldp	x25, x26, [sp, #64]
    3e40:	mul	x1, x0, x0
    3e44:	sub	x1, x1, #0x1
    3e48:	cmp	x1, x19
    3e4c:	ldp	x19, x20, [sp, #16]
    3e50:	cset	x1, cs  // cs = hs, nlast
    3e54:	ldp	x29, x30, [sp], #96
    3e58:	sub	x0, x0, x1
    3e5c:	b	3040 <PyLong_FromUnsignedLongLong@plt>
    3e60:	mov	x0, x23
    3e64:	bl	3080 <_Py_Dealloc@plt>
    3e68:	b	3ca0 <PyNumber_FloorDivide@plt+0x840>
    3e6c:	bl	32b0 <PyErr_Occurred@plt>
    3e70:	cbz	x0, 3be8 <PyNumber_FloorDivide@plt+0x788>
    3e74:	nop
    3e78:	ldp	x23, x24, [sp, #48]
    3e7c:	ldp	x25, x26, [sp, #64]
    3e80:	b	3d98 <PyNumber_FloorDivide@plt+0x938>
    3e84:	mov	x0, x20
    3e88:	bl	3080 <_Py_Dealloc@plt>
    3e8c:	ldp	x19, x20, [sp, #16]
    3e90:	mov	x0, #0x0                   	// #0
    3e94:	ldp	x21, x22, [sp, #32]
    3e98:	ldp	x29, x30, [sp], #96
    3e9c:	b	31e0 <PyLong_FromLong@plt>
    3ea0:	ldr	x27, [sp, #80]
    3ea4:	ldr	x0, [x21]
    3ea8:	sub	x0, x0, #0x1
    3eac:	str	x0, [x21]
    3eb0:	cbnz	x0, 3e78 <PyNumber_FloorDivide@plt+0xa18>
    3eb4:	mov	x0, x21
    3eb8:	bl	3080 <_Py_Dealloc@plt>
    3ebc:	ldp	x23, x24, [sp, #48]
    3ec0:	ldp	x25, x26, [sp, #64]
    3ec4:	b	3d98 <PyNumber_FloorDivide@plt+0x938>
    3ec8:	mov	x0, x21
    3ecc:	bl	3080 <_Py_Dealloc@plt>
    3ed0:	b	3be0 <PyNumber_FloorDivide@plt+0x780>
    3ed4:	mov	x0, x20
    3ed8:	bl	3080 <_Py_Dealloc@plt>
    3edc:	b	3d44 <PyNumber_FloorDivide@plt+0x8e4>
    3ee0:	ldp	x23, x24, [sp, #48]
    3ee4:	ldp	x25, x26, [sp, #64]
    3ee8:	ldr	x27, [sp, #80]
    3eec:	b	3d98 <PyNumber_FloorDivide@plt+0x938>
    3ef0:	mov	x0, x19
    3ef4:	bl	3080 <_Py_Dealloc@plt>
    3ef8:	b	3cfc <PyNumber_FloorDivide@plt+0x89c>
    3efc:	mov	x0, x20
    3f00:	bl	3080 <_Py_Dealloc@plt>
    3f04:	ldp	x19, x20, [sp, #16]
    3f08:	ldp	x23, x24, [sp, #48]
    3f0c:	ldp	x25, x26, [sp, #64]
    3f10:	b	3d64 <PyNumber_FloorDivide@plt+0x904>
    3f14:	adrp	x1, 1b000 <_Py_log1p@@Base+0x13110>
    3f18:	mov	x0, x21
    3f1c:	ldr	x1, [x1, #4008]
    3f20:	ldr	x1, [x1]
    3f24:	bl	3420 <PyNumber_Subtract@plt>
    3f28:	mov	x1, x0
    3f2c:	ldr	x2, [x21]
    3f30:	sub	x0, x2, #0x1
    3f34:	str	x0, [x21]
    3f38:	cbz	x0, 3f44 <PyNumber_FloorDivide@plt+0xae4>
    3f3c:	mov	x21, x1
    3f40:	b	3d08 <PyNumber_FloorDivide@plt+0x8a8>
    3f44:	mov	x0, x21
    3f48:	mov	x21, x1
    3f4c:	bl	3080 <_Py_Dealloc@plt>
    3f50:	b	3d08 <PyNumber_FloorDivide@plt+0x8a8>
    3f54:	nop
    3f58:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    3f5c:	mov	x0, x1
    3f60:	ldr	x1, [x1, #8]
    3f64:	ldr	x2, [x2, #3824]
    3f68:	cmp	x1, x2
    3f6c:	b.eq	3f98 <PyNumber_FloorDivide@plt+0xb38>  // b.none
    3f70:	stp	x29, x30, [sp, #-16]!
    3f74:	mov	x29, sp
    3f78:	bl	32e0 <PyFloat_AsDouble@plt>
    3f7c:	fmov	d1, #-1.000000000000000000e+00
    3f80:	fcmp	d0, d1
    3f84:	b.eq	3fa8 <PyNumber_FloorDivide@plt+0xb48>  // b.none
    3f88:	fcmp	d0, d0
    3f8c:	cset	x0, vs
    3f90:	ldp	x29, x30, [sp], #16
    3f94:	b	3220 <PyBool_FromLong@plt>
    3f98:	ldr	d0, [x0, #16]
    3f9c:	fcmp	d0, d0
    3fa0:	cset	x0, vs
    3fa4:	b	3220 <PyBool_FromLong@plt>
    3fa8:	bl	32b0 <PyErr_Occurred@plt>
    3fac:	cbz	x0, 3f90 <PyNumber_FloorDivide@plt+0xb30>
    3fb0:	mov	x0, #0x0                   	// #0
    3fb4:	ldp	x29, x30, [sp], #16
    3fb8:	ret
    3fbc:	nop
    3fc0:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    3fc4:	mov	x0, x1
    3fc8:	ldr	x1, [x1, #8]
    3fcc:	ldr	x2, [x2, #3824]
    3fd0:	cmp	x1, x2
    3fd4:	b.eq	400c <PyNumber_FloorDivide@plt+0xbac>  // b.none
    3fd8:	stp	x29, x30, [sp, #-16]!
    3fdc:	mov	x29, sp
    3fe0:	bl	32e0 <PyFloat_AsDouble@plt>
    3fe4:	fmov	d1, #-1.000000000000000000e+00
    3fe8:	fcmp	d0, d1
    3fec:	b.eq	4028 <PyNumber_FloorDivide@plt+0xbc8>  // b.none
    3ff0:	fabs	d0, d0
    3ff4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    3ff8:	ldp	x29, x30, [sp], #16
    3ffc:	fmov	d1, x0
    4000:	fcmp	d0, d1
    4004:	cset	x0, ls  // ls = plast
    4008:	b	3220 <PyBool_FromLong@plt>
    400c:	ldr	d1, [x0, #16]
    4010:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4014:	fmov	d0, x0
    4018:	fabs	d1, d1
    401c:	fcmp	d1, d0
    4020:	cset	x0, ls  // ls = plast
    4024:	b	3220 <PyBool_FromLong@plt>
    4028:	bl	32b0 <PyErr_Occurred@plt>
    402c:	cbnz	x0, 403c <PyNumber_FloorDivide@plt+0xbdc>
    4030:	ldp	x29, x30, [sp], #16
    4034:	mov	x0, #0x1                   	// #1
    4038:	b	3220 <PyBool_FromLong@plt>
    403c:	mov	x0, #0x0                   	// #0
    4040:	ldp	x29, x30, [sp], #16
    4044:	ret
    4048:	stp	x29, x30, [sp, #-80]!
    404c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4050:	fmov	d2, x0
    4054:	mov	x29, sp
    4058:	stp	d8, d9, [sp, #16]
    405c:	fabs	d9, d0
    4060:	fmov	d8, d0
    4064:	fcmp	d9, d2
    4068:	b.ls	4088 <PyNumber_FloorDivide@plt+0xc28>  // b.plast
    406c:	fcmp	d0, d0
    4070:	b.vs	407c <PyNumber_FloorDivide@plt+0xc1c>
    4074:	fcmpe	d0, #0.0
    4078:	b.le	40f0 <PyNumber_FloorDivide@plt+0xc90>
    407c:	ldp	d8, d9, [sp, #16]
    4080:	ldp	x29, x30, [sp], #80
    4084:	ret
    4088:	fcmp	d0, #0.0
    408c:	b.eq	4110 <PyNumber_FloorDivide@plt+0xcb0>  // b.none
    4090:	frintm	d0, d0
    4094:	fcmp	d0, d8
    4098:	b.ne	40b0 <PyNumber_FloorDivide@plt+0xc50>  // b.any
    409c:	fcmpe	d8, #0.0
    40a0:	b.mi	40f0 <PyNumber_FloorDivide@plt+0xc90>  // b.first
    40a4:	fmov	d0, #2.300000000000000000e+01
    40a8:	fcmpe	d8, d0
    40ac:	b.ls	4220 <PyNumber_FloorDivide@plt+0xdc0>  // b.plast
    40b0:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    40b4:	ldr	d0, [x0, #1128]
    40b8:	fcmpe	d9, d0
    40bc:	b.mi	413c <PyNumber_FloorDivide@plt+0xcdc>  // b.first
    40c0:	mov	x0, #0x4069000000000000    	// #4641240890982006784
    40c4:	fmov	d0, x0
    40c8:	fcmpe	d9, d0
    40cc:	b.le	4170 <PyNumber_FloorDivide@plt+0xd10>
    40d0:	fcmpe	d8, #0.0
    40d4:	b.mi	42dc <PyNumber_FloorDivide@plt+0xe7c>  // b.first
    40d8:	bl	33f0 <__errno_location@plt>
    40dc:	mov	w2, #0x22                  	// #34
    40e0:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
    40e4:	fmov	d0, x1
    40e8:	str	w2, [x0]
    40ec:	b	407c <PyNumber_FloorDivide@plt+0xc1c>
    40f0:	bl	33f0 <__errno_location@plt>
    40f4:	mov	w2, #0x21                  	// #33
    40f8:	str	w2, [x0]
    40fc:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    4100:	fmov	d0, x1
    4104:	ldp	d8, d9, [sp, #16]
    4108:	ldp	x29, x30, [sp], #80
    410c:	ret
    4110:	bl	33f0 <__errno_location@plt>
    4114:	mov	x1, #0x7ff0000000000000    	// #9218868437227405312
    4118:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
    411c:	fmov	d0, x1
    4120:	fmov	d1, x2
    4124:	mov	w1, #0x21                  	// #33
    4128:	str	w1, [x0]
    412c:	bit	v0.8b, v8.8b, v1.8b
    4130:	ldp	d8, d9, [sp, #16]
    4134:	ldp	x29, x30, [sp], #80
    4138:	ret
    413c:	fmov	d0, #1.000000000000000000e+00
    4140:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4144:	fmov	d1, x0
    4148:	fdiv	d0, d0, d8
    414c:	fabs	d2, d0
    4150:	fcmp	d2, d1
    4154:	b.le	407c <PyNumber_FloorDivide@plt+0xc1c>
    4158:	str	d0, [sp, #72]
    415c:	bl	33f0 <__errno_location@plt>
    4160:	mov	w1, #0x22                  	// #34
    4164:	str	w1, [x0]
    4168:	ldr	d0, [sp, #72]
    416c:	b	407c <PyNumber_FloorDivide@plt+0xc1c>
    4170:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    4174:	stp	d10, d11, [sp, #32]
    4178:	ldr	d0, [x0, #1152]
    417c:	fcmpe	d9, d0
    4180:	fadd	d11, d9, d0
    4184:	b.gt	423c <PyNumber_FloorDivide@plt+0xddc>
    4188:	fsub	d10, d11, d0
    418c:	fsub	d10, d10, d9
    4190:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    4194:	fmov	d0, d9
    4198:	ldr	d1, [x0, #1136]
    419c:	fmul	d10, d10, d1
    41a0:	fdiv	d10, d10, d11
    41a4:	bl	3548 <PyNumber_FloorDivide@plt+0xe8>
    41a8:	fcmpe	d8, #0.0
    41ac:	fmov	d8, d0
    41b0:	b.mi	4250 <PyNumber_FloorDivide@plt+0xdf0>  // b.first
    41b4:	fmov	d0, d11
    41b8:	bl	3440 <exp@plt>
    41bc:	fdiv	d0, d8, d0
    41c0:	mov	x0, #0x800000000000        	// #140737488355328
    41c4:	movk	x0, #0x4061, lsl #48
    41c8:	fmov	d1, x0
    41cc:	fcmpe	d9, d1
    41d0:	fmul	d10, d10, d0
    41d4:	fadd	d10, d10, d0
    41d8:	b.pl	42b8 <PyNumber_FloorDivide@plt+0xe58>  // b.nfrst
    41dc:	fmov	d1, #5.000000000000000000e-01
    41e0:	fmov	d0, d11
    41e4:	fsub	d1, d9, d1
    41e8:	bl	3090 <pow@plt>
    41ec:	fmul	d0, d10, d0
    41f0:	fabs	d2, d0
    41f4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    41f8:	fmov	d1, x0
    41fc:	fcmp	d2, d1
    4200:	b.le	4248 <PyNumber_FloorDivide@plt+0xde8>
    4204:	str	d0, [sp, #72]
    4208:	bl	33f0 <__errno_location@plt>
    420c:	mov	w1, #0x22                  	// #34
    4210:	ldr	d0, [sp, #72]
    4214:	ldp	d10, d11, [sp, #32]
    4218:	str	w1, [x0]
    421c:	b	407c <PyNumber_FloorDivide@plt+0xc1c>
    4220:	fcvtzs	w0, d8
    4224:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    4228:	add	x1, x1, #0x4c0
    422c:	add	x1, x1, #0xd0
    4230:	sub	w0, w0, #0x1
    4234:	ldr	d0, [x1, w0, sxtw #3]
    4238:	b	407c <PyNumber_FloorDivide@plt+0xc1c>
    423c:	fsub	d10, d11, d9
    4240:	fsub	d10, d10, d0
    4244:	b	4190 <PyNumber_FloorDivide@plt+0xd30>
    4248:	ldp	d10, d11, [sp, #32]
    424c:	b	407c <PyNumber_FloorDivide@plt+0xc1c>
    4250:	fmov	d0, d9
    4254:	str	d12, [sp, #48]
    4258:	bl	3838 <PyNumber_FloorDivide@plt+0x3d8>
    425c:	fmov	d12, d0
    4260:	fmov	d0, d11
    4264:	bl	3440 <exp@plt>
    4268:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    426c:	ldr	d2, [x0, #1160]
    4270:	mov	x0, #0x800000000000        	// #140737488355328
    4274:	movk	x0, #0x4061, lsl #48
    4278:	fmov	d1, x0
    427c:	fdiv	d2, d2, d12
    4280:	fcmpe	d9, d1
    4284:	fdiv	d2, d2, d9
    4288:	fmul	d2, d2, d0
    428c:	fdiv	d0, d2, d8
    4290:	fmul	d8, d10, d0
    4294:	fsub	d8, d0, d8
    4298:	b.pl	42f0 <PyNumber_FloorDivide@plt+0xe90>  // b.nfrst
    429c:	fmov	d1, #5.000000000000000000e-01
    42a0:	fmov	d0, d11
    42a4:	fsub	d1, d9, d1
    42a8:	bl	3090 <pow@plt>
    42ac:	fdiv	d0, d8, d0
    42b0:	ldr	d12, [sp, #48]
    42b4:	b	41f0 <PyNumber_FloorDivide@plt+0xd90>
    42b8:	fmov	d2, #5.000000000000000000e-01
    42bc:	fmov	d1, #2.500000000000000000e-01
    42c0:	fmov	d0, d11
    42c4:	fmul	d9, d9, d2
    42c8:	fsub	d1, d9, d1
    42cc:	bl	3090 <pow@plt>
    42d0:	fmul	d8, d10, d0
    42d4:	fmul	d0, d8, d0
    42d8:	b	41f0 <PyNumber_FloorDivide@plt+0xd90>
    42dc:	fmov	d0, d8
    42e0:	bl	3838 <PyNumber_FloorDivide@plt+0x3d8>
    42e4:	movi	d8, #0x0
    42e8:	fdiv	d0, d8, d0
    42ec:	b	407c <PyNumber_FloorDivide@plt+0xc1c>
    42f0:	fmov	d2, #5.000000000000000000e-01
    42f4:	fmov	d1, #2.500000000000000000e-01
    42f8:	fmov	d0, d11
    42fc:	fmul	d9, d9, d2
    4300:	fsub	d1, d9, d1
    4304:	bl	3090 <pow@plt>
    4308:	fdiv	d8, d8, d0
    430c:	ldr	d12, [sp, #48]
    4310:	fdiv	d0, d8, d0
    4314:	b	41f0 <PyNumber_FloorDivide@plt+0xd90>
    4318:	stp	x29, x30, [sp, #-416]!
    431c:	mov	x0, x1
    4320:	mov	x29, sp
    4324:	stp	x19, x20, [sp, #16]
    4328:	bl	3370 <PyObject_GetIter@plt>
    432c:	cbz	x0, 4700 <PyNumber_FloorDivide@plt+0x12a0>
    4330:	stp	d10, d11, [sp, #96]
    4334:	movi	d11, #0x0
    4338:	stp	x21, x22, [sp, #32]
    433c:	mov	x22, x0
    4340:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    4344:	fmov	d10, d11
    4348:	stp	x23, x24, [sp, #48]
    434c:	adrp	x23, 1b000 <_Py_log1p@@Base+0x13110>
    4350:	adrp	x24, 1b000 <_Py_log1p@@Base+0x13110>
    4354:	stp	d8, d9, [sp, #80]
    4358:	fmov	d9, x0
    435c:	stp	x25, x26, [sp, #64]
    4360:	add	x25, sp, #0xa0
    4364:	mov	x0, x22
    4368:	ldr	x23, [x23, #3824]
    436c:	mov	x20, x25
    4370:	ldr	x24, [x24, #3984]
    4374:	mov	x26, #0x20                  	// #32
    4378:	mov	x21, #0x0                   	// #0
    437c:	str	d12, [sp, #112]
    4380:	bl	30b0 <PyIter_Next@plt>
    4384:	mov	x19, x0
    4388:	cbz	x0, 4484 <PyNumber_FloorDivide@plt+0x1024>
    438c:	nop
    4390:	ldr	x1, [x0, #8]
    4394:	cmp	x1, x23
    4398:	b.eq	4500 <PyNumber_FloorDivide@plt+0x10a0>  // b.none
    439c:	cmp	x1, x24
    43a0:	b.eq	4524 <PyNumber_FloorDivide@plt+0x10c4>  // b.none
    43a4:	bl	32e0 <PyFloat_AsDouble@plt>
    43a8:	fmov	d12, d0
    43ac:	fmov	d1, #-1.000000000000000000e+00
    43b0:	fcmp	d0, d1
    43b4:	b.eq	4538 <PyNumber_FloorDivide@plt+0x10d8>  // b.none
    43b8:	ldr	x0, [x19]
    43bc:	sub	x0, x0, #0x1
    43c0:	str	x0, [x19]
    43c4:	cbz	x0, 44e4 <PyNumber_FloorDivide@plt+0x1084>
    43c8:	fmov	d8, d12
    43cc:	cmp	x21, #0x0
    43d0:	b.le	44f8 <PyNumber_FloorDivide@plt+0x1098>
    43d4:	mov	x1, #0x0                   	// #0
    43d8:	mov	x19, #0x0                   	// #0
    43dc:	nop
    43e0:	ldr	d2, [x20, x1, lsl #3]
    43e4:	fabs	d4, d8
    43e8:	add	x1, x1, #0x1
    43ec:	fabs	d1, d2
    43f0:	fcmpe	d4, d1
    43f4:	fcsel	d3, d2, d8, mi  // mi = first
    43f8:	fcsel	d8, d8, d2, mi  // mi = first
    43fc:	fadd	d1, d3, d8
    4400:	str	d1, [sp, #136]
    4404:	ldr	d1, [sp, #136]
    4408:	fsub	d1, d1, d3
    440c:	str	d1, [sp, #144]
    4410:	ldr	d1, [sp, #144]
    4414:	fsub	d8, d8, d1
    4418:	str	d8, [sp, #152]
    441c:	ldr	d1, [sp, #152]
    4420:	fcmp	d1, #0.0
    4424:	b.eq	4434 <PyNumber_FloorDivide@plt+0xfd4>  // b.none
    4428:	ldr	d1, [sp, #152]
    442c:	str	d1, [x20, x19, lsl #3]
    4430:	add	x19, x19, #0x1
    4434:	ldr	d8, [sp, #136]
    4438:	cmp	x21, x1
    443c:	b.ne	43e0 <PyNumber_FloorDivide@plt+0xf80>  // b.any
    4440:	fcmp	d8, #0.0
    4444:	b.eq	4470 <PyNumber_FloorDivide@plt+0x1010>  // b.none
    4448:	fabs	d0, d8
    444c:	fcmp	d0, d9
    4450:	b.ls	4508 <PyNumber_FloorDivide@plt+0x10a8>  // b.plast
    4454:	fabs	d0, d12
    4458:	fcmp	d0, d9
    445c:	b.ls	46c0 <PyNumber_FloorDivide@plt+0x1260>  // b.plast
    4460:	b.le	4468 <PyNumber_FloorDivide@plt+0x1008>
    4464:	fadd	d11, d11, d12
    4468:	fadd	d10, d10, d12
    446c:	mov	x19, #0x0                   	// #0
    4470:	mov	x21, x19
    4474:	mov	x0, x22
    4478:	bl	30b0 <PyIter_Next@plt>
    447c:	mov	x19, x0
    4480:	cbnz	x0, 4390 <PyNumber_FloorDivide@plt+0xf30>
    4484:	bl	32b0 <PyErr_Occurred@plt>
    4488:	mov	x19, x0
    448c:	cbz	x0, 45e0 <PyNumber_FloorDivide@plt+0x1180>
    4490:	ldr	x0, [x22]
    4494:	mov	x19, #0x0                   	// #0
    4498:	sub	x0, x0, #0x1
    449c:	str	x0, [x22]
    44a0:	cbnz	x0, 45bc <PyNumber_FloorDivide@plt+0x115c>
    44a4:	mov	x0, x22
    44a8:	bl	3080 <_Py_Dealloc@plt>
    44ac:	cmp	x20, x25
    44b0:	b.eq	44bc <PyNumber_FloorDivide@plt+0x105c>  // b.none
    44b4:	mov	x0, x20
    44b8:	bl	3010 <PyMem_Free@plt>
    44bc:	ldp	x21, x22, [sp, #32]
    44c0:	ldp	x23, x24, [sp, #48]
    44c4:	ldp	x25, x26, [sp, #64]
    44c8:	ldp	d8, d9, [sp, #80]
    44cc:	ldp	d10, d11, [sp, #96]
    44d0:	ldr	d12, [sp, #112]
    44d4:	mov	x0, x19
    44d8:	ldp	x19, x20, [sp, #16]
    44dc:	ldp	x29, x30, [sp], #416
    44e0:	ret
    44e4:	mov	x0, x19
    44e8:	bl	3080 <_Py_Dealloc@plt>
    44ec:	cmp	x21, #0x0
    44f0:	fmov	d8, d12
    44f4:	b.gt	43d4 <PyNumber_FloorDivide@plt+0xf74>
    44f8:	mov	x19, #0x0                   	// #0
    44fc:	b	4440 <PyNumber_FloorDivide@plt+0xfe0>
    4500:	ldr	d12, [x0, #16]
    4504:	b	43b8 <PyNumber_FloorDivide@plt+0xf58>
    4508:	cmp	x19, x26
    450c:	lsl	x21, x19, #3
    4510:	b.ge	4548 <PyNumber_FloorDivide@plt+0x10e8>  // b.tcont
    4514:	add	x19, x19, #0x1
    4518:	str	d8, [x20, x21]
    451c:	mov	x21, x19
    4520:	b	4474 <PyNumber_FloorDivide@plt+0x1014>
    4524:	bl	3330 <PyLong_AsDouble@plt>
    4528:	fmov	d12, d0
    452c:	fmov	d1, #-1.000000000000000000e+00
    4530:	fcmp	d0, d1
    4534:	b.ne	43b8 <PyNumber_FloorDivide@plt+0xf58>  // b.any
    4538:	bl	32b0 <PyErr_Occurred@plt>
    453c:	cbnz	x0, 46e0 <PyNumber_FloorDivide@plt+0x1280>
    4540:	fmov	d12, #-1.000000000000000000e+00
    4544:	b	43b8 <PyNumber_FloorDivide@plt+0xf58>
    4548:	lsl	x26, x26, #1
    454c:	mov	x0, #0xffffffffffffffe     	// #1152921504606846974
    4550:	cmp	x26, x19
    4554:	ccmp	x26, x0, #0x2, gt
    4558:	b.hi	4590 <PyNumber_FloorDivide@plt+0x1130>  // b.pmore
    455c:	cmp	x20, x25
    4560:	lsl	x1, x26, #3
    4564:	b.eq	457c <PyNumber_FloorDivide@plt+0x111c>  // b.none
    4568:	mov	x0, x20
    456c:	bl	3180 <PyMem_Realloc@plt>
    4570:	cbz	x0, 4590 <PyNumber_FloorDivide@plt+0x1130>
    4574:	mov	x20, x0
    4578:	b	4514 <PyNumber_FloorDivide@plt+0x10b4>
    457c:	mov	x0, x1
    4580:	bl	3410 <PyMem_Malloc@plt>
    4584:	mov	x20, x0
    4588:	cbnz	x0, 45d0 <PyNumber_FloorDivide@plt+0x1170>
    458c:	mov	x20, x25
    4590:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4594:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4598:	mov	x19, #0x0                   	// #0
    459c:	add	x1, x1, #0xf78
    45a0:	ldr	x0, [x0, #3864]
    45a4:	ldr	x0, [x0]
    45a8:	bl	3130 <PyErr_SetString@plt>
    45ac:	ldr	x0, [x22]
    45b0:	sub	x0, x0, #0x1
    45b4:	str	x0, [x22]
    45b8:	cbz	x0, 44a4 <PyNumber_FloorDivide@plt+0x1044>
    45bc:	cmp	x20, x25
    45c0:	b.eq	44bc <PyNumber_FloorDivide@plt+0x105c>  // b.none
    45c4:	mov	x0, x20
    45c8:	bl	3010 <PyMem_Free@plt>
    45cc:	b	44bc <PyNumber_FloorDivide@plt+0x105c>
    45d0:	mov	x2, x21
    45d4:	mov	x1, x25
    45d8:	bl	2fc0 <memcpy@plt>
    45dc:	b	4514 <PyNumber_FloorDivide@plt+0x10b4>
    45e0:	fcmp	d10, #0.0
    45e4:	b.ne	46a8 <PyNumber_FloorDivide@plt+0x1248>  // b.any
    45e8:	str	xzr, [sp, #136]
    45ec:	cmp	x21, #0x0
    45f0:	b.le	4698 <PyNumber_FloorDivide@plt+0x1238>
    45f4:	sub	x21, x21, #0x1
    45f8:	ldr	d0, [x20, x21, lsl #3]
    45fc:	str	d0, [sp, #136]
    4600:	cbz	x21, 4698 <PyNumber_FloorDivide@plt+0x1238>
    4604:	sub	x21, x21, #0x1
    4608:	ldr	d2, [sp, #136]
    460c:	lsl	x0, x21, #3
    4610:	ldr	d0, [x20, x21, lsl #3]
    4614:	fadd	d1, d2, d0
    4618:	str	d1, [sp, #136]
    461c:	ldr	d1, [sp, #136]
    4620:	fsub	d1, d1, d2
    4624:	str	d1, [sp, #144]
    4628:	ldr	d1, [sp, #144]
    462c:	fsub	d0, d0, d1
    4630:	str	d0, [sp, #152]
    4634:	ldr	d0, [sp, #152]
    4638:	fcmp	d0, #0.0
    463c:	b.eq	4600 <PyNumber_FloorDivide@plt+0x11a0>  // b.none
    4640:	cbz	x21, 4698 <PyNumber_FloorDivide@plt+0x1238>
    4644:	ldr	d0, [sp, #152]
    4648:	fcmpe	d0, #0.0
    464c:	b.mi	4708 <PyNumber_FloorDivide@plt+0x12a8>  // b.first
    4650:	ldr	d0, [sp, #152]
    4654:	fcmpe	d0, #0.0
    4658:	b.le	4698 <PyNumber_FloorDivide@plt+0x1238>
    465c:	add	x0, x20, x0
    4660:	ldur	d0, [x0, #-8]
    4664:	fcmpe	d0, #0.0
    4668:	b.le	4698 <PyNumber_FloorDivide@plt+0x1238>
    466c:	ldr	d0, [sp, #152]
    4670:	ldr	d1, [sp, #136]
    4674:	ldr	d2, [sp, #136]
    4678:	fadd	d0, d0, d0
    467c:	fadd	d1, d1, d0
    4680:	fsub	d2, d1, d2
    4684:	str	d2, [sp, #144]
    4688:	ldr	d2, [sp, #144]
    468c:	fcmp	d2, d0
    4690:	b.ne	4698 <PyNumber_FloorDivide@plt+0x1238>  // b.any
    4694:	str	d1, [sp, #136]
    4698:	ldr	d0, [sp, #136]
    469c:	bl	31c0 <PyFloat_FromDouble@plt>
    46a0:	mov	x19, x0
    46a4:	b	45ac <PyNumber_FloorDivide@plt+0x114c>
    46a8:	fcmp	d11, d11
    46ac:	b.vs	471c <PyNumber_FloorDivide@plt+0x12bc>
    46b0:	fmov	d0, d10
    46b4:	bl	31c0 <PyFloat_FromDouble@plt>
    46b8:	mov	x19, x0
    46bc:	b	45ac <PyNumber_FloorDivide@plt+0x114c>
    46c0:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    46c4:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    46c8:	mov	x19, #0x0                   	// #0
    46cc:	add	x1, x1, #0xf58
    46d0:	ldr	x0, [x0, #3936]
    46d4:	ldr	x0, [x0]
    46d8:	bl	3130 <PyErr_SetString@plt>
    46dc:	b	45ac <PyNumber_FloorDivide@plt+0x114c>
    46e0:	ldr	x0, [x19]
    46e4:	sub	x0, x0, #0x1
    46e8:	str	x0, [x19]
    46ec:	cbnz	x0, 4490 <PyNumber_FloorDivide@plt+0x1030>
    46f0:	mov	x0, x19
    46f4:	mov	x19, #0x0                   	// #0
    46f8:	bl	3080 <_Py_Dealloc@plt>
    46fc:	b	45ac <PyNumber_FloorDivide@plt+0x114c>
    4700:	mov	x19, #0x0                   	// #0
    4704:	b	44d4 <PyNumber_FloorDivide@plt+0x1074>
    4708:	add	x1, x20, x0
    470c:	ldur	d0, [x1, #-8]
    4710:	fcmpe	d0, #0.0
    4714:	b.pl	4650 <PyNumber_FloorDivide@plt+0x11f0>  // b.nfrst
    4718:	b	466c <PyNumber_FloorDivide@plt+0x120c>
    471c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4720:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4724:	add	x1, x1, #0xf90
    4728:	ldr	x0, [x0, #3872]
    472c:	ldr	x0, [x0]
    4730:	bl	3130 <PyErr_SetString@plt>
    4734:	b	45ac <PyNumber_FloorDivide@plt+0x114c>
    4738:	stp	x29, x30, [sp, #-48]!
    473c:	mov	x29, sp
    4740:	stp	x19, x20, [sp, #16]
    4744:	sub	x19, x1, x0
    4748:	cmp	x19, #0x81
    474c:	stp	x21, x22, [sp, #32]
    4750:	mov	x20, x1
    4754:	mov	x22, x2
    4758:	lsr	x19, x19, #1
    475c:	b.hi	476c <PyNumber_FloorDivide@plt+0x130c>  // b.pmore
    4760:	mul	x1, x19, x2
    4764:	cmp	x1, #0x40
    4768:	b.ls	4840 <PyNumber_FloorDivide@plt+0x13e0>  // b.plast
    476c:	add	x19, x0, x19
    4770:	mov	x2, #0x0                   	// #0
    4774:	orr	x19, x19, #0x1
    4778:	sub	x3, x19, #0x2
    477c:	nop
    4780:	add	x2, x2, #0x1
    4784:	lsr	x3, x3, #1
    4788:	cbnz	x3, 4780 <PyNumber_FloorDivide@plt+0x1320>
    478c:	mov	x1, x19
    4790:	bl	4738 <PyNumber_FloorDivide@plt+0x12d8>
    4794:	mov	x21, x0
    4798:	cbz	x0, 47f8 <PyNumber_FloorDivide@plt+0x1398>
    479c:	mov	x0, x19
    47a0:	mov	x2, x22
    47a4:	mov	x1, x20
    47a8:	bl	4738 <PyNumber_FloorDivide@plt+0x12d8>
    47ac:	mov	x19, x0
    47b0:	cbz	x0, 4810 <PyNumber_FloorDivide@plt+0x13b0>
    47b4:	mov	x1, x0
    47b8:	mov	x0, x21
    47bc:	bl	30d0 <PyNumber_Multiply@plt>
    47c0:	mov	x20, x0
    47c4:	ldr	x1, [x21]
    47c8:	sub	x0, x1, #0x1
    47cc:	str	x0, [x21]
    47d0:	cbz	x0, 488c <PyNumber_FloorDivide@plt+0x142c>
    47d4:	ldr	x1, [x19]
    47d8:	sub	x1, x1, #0x1
    47dc:	str	x1, [x19]
    47e0:	cbz	x1, 4870 <PyNumber_FloorDivide@plt+0x1410>
    47e4:	mov	x0, x20
    47e8:	ldp	x19, x20, [sp, #16]
    47ec:	ldp	x21, x22, [sp, #32]
    47f0:	ldp	x29, x30, [sp], #48
    47f4:	ret
    47f8:	mov	x20, #0x0                   	// #0
    47fc:	mov	x0, x20
    4800:	ldp	x19, x20, [sp, #16]
    4804:	ldp	x21, x22, [sp, #32]
    4808:	ldp	x29, x30, [sp], #48
    480c:	ret
    4810:	ldr	x0, [x21]
    4814:	sub	x0, x0, #0x1
    4818:	str	x0, [x21]
    481c:	cbnz	x0, 47f8 <PyNumber_FloorDivide@plt+0x1398>
    4820:	mov	x0, x21
    4824:	mov	x20, #0x0                   	// #0
    4828:	bl	3080 <_Py_Dealloc@plt>
    482c:	mov	x0, x20
    4830:	ldp	x19, x20, [sp, #16]
    4834:	ldp	x21, x22, [sp, #32]
    4838:	ldp	x29, x30, [sp], #48
    483c:	ret
    4840:	add	x1, x0, #0x2
    4844:	cmp	x20, x1
    4848:	b.ls	4860 <PyNumber_FloorDivide@plt+0x1400>  // b.plast
    484c:	nop
    4850:	mul	x0, x0, x1
    4854:	add	x1, x1, #0x2
    4858:	cmp	x20, x1
    485c:	b.hi	4850 <PyNumber_FloorDivide@plt+0x13f0>  // b.pmore
    4860:	ldp	x19, x20, [sp, #16]
    4864:	ldp	x21, x22, [sp, #32]
    4868:	ldp	x29, x30, [sp], #48
    486c:	b	3350 <PyLong_FromUnsignedLong@plt>
    4870:	mov	x0, x19
    4874:	bl	3080 <_Py_Dealloc@plt>
    4878:	mov	x0, x20
    487c:	ldp	x19, x20, [sp, #16]
    4880:	ldp	x21, x22, [sp, #32]
    4884:	ldp	x29, x30, [sp], #48
    4888:	ret
    488c:	mov	x0, x21
    4890:	bl	3080 <_Py_Dealloc@plt>
    4894:	b	47d4 <PyNumber_FloorDivide@plt+0x1374>
    4898:	stp	x29, x30, [sp, #-96]!
    489c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    48a0:	mov	x29, sp
    48a4:	stp	x19, x20, [sp, #16]
    48a8:	mov	x19, x1
    48ac:	ldr	x1, [x0, #3824]
    48b0:	stp	x23, x24, [sp, #48]
    48b4:	ldr	x0, [x19, #8]
    48b8:	cmp	x0, x1
    48bc:	b.eq	48c8 <PyNumber_FloorDivide@plt+0x1468>  // b.none
    48c0:	bl	33b0 <PyType_IsSubtype@plt>
    48c4:	cbz	w0, 4b58 <PyNumber_FloorDivide@plt+0x16f8>
    48c8:	ldr	d0, [x19, #16]
    48cc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    48d0:	fmov	d1, x0
    48d4:	fabs	d2, d0
    48d8:	fcmp	d2, d1
    48dc:	b.hi	4b14 <PyNumber_FloorDivide@plt+0x16b4>  // b.pmore
    48e0:	frintm	d1, d0
    48e4:	fcmp	d1, d0
    48e8:	b.ne	4b14 <PyNumber_FloorDivide@plt+0x16b4>  // b.any
    48ec:	bl	3000 <PyLong_FromDouble@plt>
    48f0:	mov	x19, x0
    48f4:	cbz	x0, 4ad8 <PyNumber_FloorDivide@plt+0x1678>
    48f8:	add	x1, sp, #0x5c
    48fc:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    4900:	ldr	x1, [x19]
    4904:	mov	x24, x0
    4908:	sub	x0, x1, #0x1
    490c:	str	x0, [x19]
    4910:	cbz	x0, 4b44 <PyNumber_FloorDivide@plt+0x16e4>
    4914:	cmn	x24, #0x1
    4918:	b.eq	4b88 <PyNumber_FloorDivide@plt+0x1728>  // b.none
    491c:	ldr	w0, [sp, #92]
    4920:	cmp	w0, #0x1
    4924:	b.eq	4c2c <PyNumber_FloorDivide@plt+0x17cc>  // b.none
    4928:	cmp	x24, #0x0
    492c:	ccmn	w0, #0x1, #0x4, ge  // ge = tcont
    4930:	b.eq	4b9c <PyNumber_FloorDivide@plt+0x173c>  // b.none
    4934:	cmp	x24, #0x14
    4938:	b.le	4bbc <PyNumber_FloorDivide@plt+0x175c>
    493c:	mov	x0, #0x1                   	// #1
    4940:	str	x25, [sp, #64]
    4944:	bl	31e0 <PyLong_FromLong@plt>
    4948:	mov	x25, x0
    494c:	cbz	x0, 4ad4 <PyNumber_FloorDivide@plt+0x1674>
    4950:	ldr	x2, [x25]
    4954:	mov	x1, x24
    4958:	stp	x21, x22, [sp, #32]
    495c:	mov	x0, #0x0                   	// #0
    4960:	add	x3, x2, #0x1
    4964:	str	x3, [x25]
    4968:	mov	x22, x0
    496c:	lsr	x1, x1, #1
    4970:	add	x0, x0, #0x1
    4974:	cbnz	x1, 4968 <PyNumber_FloorDivide@plt+0x1508>
    4978:	mov	x23, x25
    497c:	subs	x22, x22, #0x1
    4980:	b.mi	4a4c <PyNumber_FloorDivide@plt+0x15ec>  // b.first
    4984:	mov	x0, #0x3                   	// #3
    4988:	b	4998 <PyNumber_FloorDivide@plt+0x1538>
    498c:	sub	x22, x22, #0x1
    4990:	cmn	x22, #0x1
    4994:	b.eq	4a44 <PyNumber_FloorDivide@plt+0x15e4>  // b.none
    4998:	lsr	x19, x24, x22
    499c:	cmp	x19, #0x2
    49a0:	b.ls	498c <PyNumber_FloorDivide@plt+0x152c>  // b.plast
    49a4:	add	x19, x19, #0x1
    49a8:	mov	x2, #0x0                   	// #0
    49ac:	orr	x19, x19, #0x1
    49b0:	sub	x1, x19, #0x2
    49b4:	nop
    49b8:	add	x2, x2, #0x1
    49bc:	lsr	x1, x1, #1
    49c0:	cbnz	x1, 49b8 <PyNumber_FloorDivide@plt+0x1558>
    49c4:	mov	x1, x19
    49c8:	bl	4738 <PyNumber_FloorDivide@plt+0x12d8>
    49cc:	mov	x20, x0
    49d0:	cbz	x0, 4ab0 <PyNumber_FloorDivide@plt+0x1650>
    49d4:	mov	x1, x0
    49d8:	mov	x0, x25
    49dc:	bl	30d0 <PyNumber_Multiply@plt>
    49e0:	mov	x21, x0
    49e4:	ldr	x1, [x20]
    49e8:	sub	x0, x1, #0x1
    49ec:	str	x0, [x20]
    49f0:	cbz	x0, 4aa0 <PyNumber_FloorDivide@plt+0x1640>
    49f4:	cbz	x21, 4ab0 <PyNumber_FloorDivide@plt+0x1650>
    49f8:	ldr	x0, [x25]
    49fc:	sub	x0, x0, #0x1
    4a00:	str	x0, [x25]
    4a04:	cbz	x0, 4af0 <PyNumber_FloorDivide@plt+0x1690>
    4a08:	mov	x1, x21
    4a0c:	mov	x0, x23
    4a10:	bl	30d0 <PyNumber_Multiply@plt>
    4a14:	mov	x20, x0
    4a18:	cbz	x0, 4aac <PyNumber_FloorDivide@plt+0x164c>
    4a1c:	ldr	x0, [x23]
    4a20:	sub	x0, x0, #0x1
    4a24:	str	x0, [x23]
    4a28:	cbz	x0, 4afc <PyNumber_FloorDivide@plt+0x169c>
    4a2c:	sub	x22, x22, #0x1
    4a30:	mov	x23, x20
    4a34:	mov	x25, x21
    4a38:	mov	x0, x19
    4a3c:	cmn	x22, #0x1
    4a40:	b.ne	4998 <PyNumber_FloorDivide@plt+0x1538>  // b.any
    4a44:	ldr	x2, [x25]
    4a48:	sub	x2, x2, #0x1
    4a4c:	str	x2, [x25]
    4a50:	cbz	x2, 4c20 <PyNumber_FloorDivide@plt+0x17c0>
    4a54:	fmov	d0, x24
    4a58:	mov	x0, x23
    4a5c:	cnt	v0.8b, v0.8b
    4a60:	addv	b0, v0.8b
    4a64:	umov	w1, v0.b[0]
    4a68:	sub	x1, x24, x1
    4a6c:	bl	3450 <_PyLong_Lshift@plt>
    4a70:	ldr	x1, [x23]
    4a74:	mov	x19, x0
    4a78:	sub	x0, x1, #0x1
    4a7c:	str	x0, [x23]
    4a80:	cbz	x0, 4be8 <PyNumber_FloorDivide@plt+0x1788>
    4a84:	mov	x0, x19
    4a88:	ldp	x19, x20, [sp, #16]
    4a8c:	ldp	x21, x22, [sp, #32]
    4a90:	ldp	x23, x24, [sp, #48]
    4a94:	ldr	x25, [sp, #64]
    4a98:	ldp	x29, x30, [sp], #96
    4a9c:	ret
    4aa0:	mov	x0, x20
    4aa4:	bl	3080 <_Py_Dealloc@plt>
    4aa8:	b	49f4 <PyNumber_FloorDivide@plt+0x1594>
    4aac:	mov	x25, x21
    4ab0:	ldr	x0, [x23]
    4ab4:	sub	x0, x0, #0x1
    4ab8:	str	x0, [x23]
    4abc:	cbz	x0, 4bfc <PyNumber_FloorDivide@plt+0x179c>
    4ac0:	ldr	x0, [x25]
    4ac4:	sub	x0, x0, #0x1
    4ac8:	str	x0, [x25]
    4acc:	cbz	x0, 4c08 <PyNumber_FloorDivide@plt+0x17a8>
    4ad0:	ldp	x21, x22, [sp, #32]
    4ad4:	ldr	x25, [sp, #64]
    4ad8:	mov	x19, #0x0                   	// #0
    4adc:	mov	x0, x19
    4ae0:	ldp	x19, x20, [sp, #16]
    4ae4:	ldp	x23, x24, [sp, #48]
    4ae8:	ldp	x29, x30, [sp], #96
    4aec:	ret
    4af0:	mov	x0, x25
    4af4:	bl	3080 <_Py_Dealloc@plt>
    4af8:	b	4a08 <PyNumber_FloorDivide@plt+0x15a8>
    4afc:	mov	x0, x23
    4b00:	bl	3080 <_Py_Dealloc@plt>
    4b04:	mov	x25, x21
    4b08:	mov	x23, x20
    4b0c:	mov	x0, x19
    4b10:	b	498c <PyNumber_FloorDivide@plt+0x152c>
    4b14:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4b18:	mov	x19, #0x0                   	// #0
    4b1c:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4b20:	add	x1, x1, #0xfa8
    4b24:	ldr	x0, [x0, #3872]
    4b28:	ldr	x0, [x0]
    4b2c:	bl	3130 <PyErr_SetString@plt>
    4b30:	mov	x0, x19
    4b34:	ldp	x19, x20, [sp, #16]
    4b38:	ldp	x23, x24, [sp, #48]
    4b3c:	ldp	x29, x30, [sp], #96
    4b40:	ret
    4b44:	mov	x0, x19
    4b48:	bl	3080 <_Py_Dealloc@plt>
    4b4c:	cmn	x24, #0x1
    4b50:	b.ne	491c <PyNumber_FloorDivide@plt+0x14bc>  // b.any
    4b54:	b	4b88 <PyNumber_FloorDivide@plt+0x1728>
    4b58:	mov	x0, x19
    4b5c:	bl	33e0 <PyNumber_Index@plt>
    4b60:	mov	x19, x0
    4b64:	cbz	x0, 4ad8 <PyNumber_FloorDivide@plt+0x1678>
    4b68:	add	x1, sp, #0x5c
    4b6c:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    4b70:	ldr	x1, [x19]
    4b74:	mov	x24, x0
    4b78:	sub	x0, x1, #0x1
    4b7c:	str	x0, [x19]
    4b80:	cbnz	x0, 4914 <PyNumber_FloorDivide@plt+0x14b4>
    4b84:	b	4b44 <PyNumber_FloorDivide@plt+0x16e4>
    4b88:	bl	32b0 <PyErr_Occurred@plt>
    4b8c:	cbnz	x0, 4ad8 <PyNumber_FloorDivide@plt+0x1678>
    4b90:	ldr	w0, [sp, #92]
    4b94:	cmp	w0, #0x1
    4b98:	b.eq	4c2c <PyNumber_FloorDivide@plt+0x17cc>  // b.none
    4b9c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4ba0:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    4ba4:	mov	x19, #0x0                   	// #0
    4ba8:	add	x1, x1, #0x8
    4bac:	ldr	x0, [x0, #3872]
    4bb0:	ldr	x0, [x0]
    4bb4:	bl	3130 <PyErr_SetString@plt>
    4bb8:	b	4adc <PyNumber_FloorDivide@plt+0x167c>
    4bbc:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    4bc0:	add	x0, x0, #0x4c0
    4bc4:	add	x0, x0, #0x188
    4bc8:	ldr	x0, [x0, x24, lsl #3]
    4bcc:	bl	3350 <PyLong_FromUnsignedLong@plt>
    4bd0:	mov	x19, x0
    4bd4:	mov	x0, x19
    4bd8:	ldp	x19, x20, [sp, #16]
    4bdc:	ldp	x23, x24, [sp, #48]
    4be0:	ldp	x29, x30, [sp], #96
    4be4:	ret
    4be8:	mov	x0, x23
    4bec:	bl	3080 <_Py_Dealloc@plt>
    4bf0:	ldp	x21, x22, [sp, #32]
    4bf4:	ldr	x25, [sp, #64]
    4bf8:	b	4adc <PyNumber_FloorDivide@plt+0x167c>
    4bfc:	mov	x0, x23
    4c00:	bl	3080 <_Py_Dealloc@plt>
    4c04:	b	4ac0 <PyNumber_FloorDivide@plt+0x1660>
    4c08:	mov	x0, x25
    4c0c:	mov	x19, #0x0                   	// #0
    4c10:	bl	3080 <_Py_Dealloc@plt>
    4c14:	ldp	x21, x22, [sp, #32]
    4c18:	ldr	x25, [sp, #64]
    4c1c:	b	4adc <PyNumber_FloorDivide@plt+0x167c>
    4c20:	mov	x0, x25
    4c24:	bl	3080 <_Py_Dealloc@plt>
    4c28:	b	4a54 <PyNumber_FloorDivide@plt+0x15f4>
    4c2c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4c30:	adrp	x1, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    4c34:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    4c38:	add	x1, x1, #0xfd8
    4c3c:	ldr	x0, [x0, #3936]
    4c40:	mov	x19, #0x0                   	// #0
    4c44:	ldr	x0, [x0]
    4c48:	bl	33c0 <PyErr_Format@plt>
    4c4c:	b	4adc <PyNumber_FloorDivide@plt+0x167c>
    4c50:	stp	x29, x30, [sp, #-96]!
    4c54:	mov	x29, sp
    4c58:	stp	x19, x20, [sp, #16]
    4c5c:	mov	x19, x2
    4c60:	sub	x2, x2, #0x1
    4c64:	stp	x21, x22, [sp, #32]
    4c68:	mov	x20, x1
    4c6c:	mov	x21, x0
    4c70:	cmp	x2, #0x1
    4c74:	b.hi	4d84 <PyNumber_FloorDivide@plt+0x1924>  // b.pmore
    4c78:	cmp	x19, #0x1
    4c7c:	ldr	x0, [x20]
    4c80:	b.le	4dac <PyNumber_FloorDivide@plt+0x194c>
    4c84:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    4c88:	ldr	x22, [x20, #8]
    4c8c:	ldr	x2, [x2, #3960]
    4c90:	cmp	x22, x2
    4c94:	b.eq	4dac <PyNumber_FloorDivide@plt+0x194c>  // b.none
    4c98:	bl	33e0 <PyNumber_Index@plt>
    4c9c:	mov	x19, x0
    4ca0:	cbz	x0, 4d64 <PyNumber_FloorDivide@plt+0x1904>
    4ca4:	adrp	x21, 1b000 <_Py_log1p@@Base+0x13110>
    4ca8:	ldr	x2, [x0, #8]
    4cac:	ldr	x1, [x21, #3984]
    4cb0:	cmp	x2, x1
    4cb4:	b.eq	4d7c <PyNumber_FloorDivide@plt+0x191c>  // b.none
    4cb8:	bl	3170 <_PyLong_Copy@plt>
    4cbc:	mov	x20, x0
    4cc0:	ldr	x1, [x19]
    4cc4:	sub	x0, x1, #0x1
    4cc8:	str	x0, [x19]
    4ccc:	cbz	x0, 4dd8 <PyNumber_FloorDivide@plt+0x1978>
    4cd0:	cbz	x20, 4d64 <PyNumber_FloorDivide@plt+0x1904>
    4cd4:	mov	x0, x22
    4cd8:	bl	33e0 <PyNumber_Index@plt>
    4cdc:	mov	x19, x0
    4ce0:	cbz	x0, 4f5c <PyNumber_FloorDivide@plt+0x1afc>
    4ce4:	ldr	x1, [x21, #3984]
    4ce8:	stp	x25, x26, [sp, #64]
    4cec:	ldr	x2, [x0, #8]
    4cf0:	cmp	x2, x1
    4cf4:	b.eq	4dd0 <PyNumber_FloorDivide@plt+0x1970>  // b.none
    4cf8:	bl	3170 <_PyLong_Copy@plt>
    4cfc:	mov	x26, x0
    4d00:	ldr	x1, [x19]
    4d04:	sub	x1, x1, #0x1
    4d08:	str	x1, [x19]
    4d0c:	cbz	x1, 4e08 <PyNumber_FloorDivide@plt+0x19a8>
    4d10:	cbz	x26, 4fec <PyNumber_FloorDivide@plt+0x1b8c>
    4d14:	ldr	x0, [x20, #16]
    4d18:	tbnz	x0, #63, 4f40 <PyNumber_FloorDivide@plt+0x1ae0>
    4d1c:	ldr	x0, [x26, #16]
    4d20:	tbnz	x0, #63, 4e54 <PyNumber_FloorDivide@plt+0x19f4>
    4d24:	mov	x1, x26
    4d28:	mov	x0, x20
    4d2c:	mov	w2, #0x0                   	// #0
    4d30:	bl	31f0 <PyObject_RichCompareBool@plt>
    4d34:	cmp	w0, #0x0
    4d38:	cbz	w0, 4e70 <PyNumber_FloorDivide@plt+0x1a10>
    4d3c:	b.gt	4e14 <PyNumber_FloorDivide@plt+0x19b4>
    4d40:	ldr	x1, [x20]
    4d44:	sub	x1, x1, #0x1
    4d48:	str	x1, [x20]
    4d4c:	cbz	x1, 4e48 <PyNumber_FloorDivide@plt+0x19e8>
    4d50:	ldr	x1, [x26]
    4d54:	sub	x1, x1, #0x1
    4d58:	str	x1, [x26]
    4d5c:	cbz	x1, 4de4 <PyNumber_FloorDivide@plt+0x1984>
    4d60:	ldp	x25, x26, [sp, #64]
    4d64:	mov	x19, #0x0                   	// #0
    4d68:	mov	x0, x19
    4d6c:	ldp	x19, x20, [sp, #16]
    4d70:	ldp	x21, x22, [sp, #32]
    4d74:	ldp	x29, x30, [sp], #96
    4d78:	ret
    4d7c:	mov	x20, x0
    4d80:	b	4cd4 <PyNumber_FloorDivide@plt+0x1874>
    4d84:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    4d88:	mov	x1, x19
    4d8c:	add	x0, x0, #0x38
    4d90:	mov	x3, #0x2                   	// #2
    4d94:	mov	x2, #0x1                   	// #1
    4d98:	bl	3280 <_PyArg_CheckPositional@plt>
    4d9c:	cbz	w0, 4d64 <PyNumber_FloorDivide@plt+0x1904>
    4da0:	cmp	x19, #0x1
    4da4:	ldr	x0, [x20]
    4da8:	b.gt	4c84 <PyNumber_FloorDivide@plt+0x1824>
    4dac:	mov	x1, x0
    4db0:	mov	x0, x21
    4db4:	bl	4898 <PyNumber_FloorDivide@plt+0x1438>
    4db8:	mov	x19, x0
    4dbc:	mov	x0, x19
    4dc0:	ldp	x19, x20, [sp, #16]
    4dc4:	ldp	x21, x22, [sp, #32]
    4dc8:	ldp	x29, x30, [sp], #96
    4dcc:	ret
    4dd0:	mov	x26, x0
    4dd4:	b	4d14 <PyNumber_FloorDivide@plt+0x18b4>
    4dd8:	mov	x0, x19
    4ddc:	bl	3080 <_Py_Dealloc@plt>
    4de0:	b	4cd0 <PyNumber_FloorDivide@plt+0x1870>
    4de4:	mov	x0, x26
    4de8:	mov	x19, #0x0                   	// #0
    4dec:	bl	3080 <_Py_Dealloc@plt>
    4df0:	mov	x0, x19
    4df4:	ldp	x19, x20, [sp, #16]
    4df8:	ldp	x21, x22, [sp, #32]
    4dfc:	ldp	x25, x26, [sp, #64]
    4e00:	ldp	x29, x30, [sp], #96
    4e04:	ret
    4e08:	mov	x0, x19
    4e0c:	bl	3080 <_Py_Dealloc@plt>
    4e10:	b	4d10 <PyNumber_FloorDivide@plt+0x18b0>
    4e14:	mov	x0, #0x0                   	// #0
    4e18:	bl	31e0 <PyLong_FromLong@plt>
    4e1c:	ldr	x1, [x20]
    4e20:	mov	x19, x0
    4e24:	sub	x0, x1, #0x1
    4e28:	str	x0, [x20]
    4e2c:	cbz	x0, 4fbc <PyNumber_FloorDivide@plt+0x1b5c>
    4e30:	ldr	x0, [x26]
    4e34:	sub	x0, x0, #0x1
    4e38:	str	x0, [x26]
    4e3c:	cbz	x0, 4fac <PyNumber_FloorDivide@plt+0x1b4c>
    4e40:	ldp	x25, x26, [sp, #64]
    4e44:	b	4d68 <PyNumber_FloorDivide@plt+0x1908>
    4e48:	mov	x0, x20
    4e4c:	bl	3080 <_Py_Dealloc@plt>
    4e50:	b	4d50 <PyNumber_FloorDivide@plt+0x18f0>
    4e54:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4e58:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    4e5c:	add	x1, x1, #0x68
    4e60:	ldr	x0, [x0, #3872]
    4e64:	ldr	x0, [x0]
    4e68:	bl	3130 <PyErr_SetString@plt>
    4e6c:	b	4d40 <PyNumber_FloorDivide@plt+0x18e0>
    4e70:	add	x1, sp, #0x5c
    4e74:	mov	x0, x26
    4e78:	stp	x23, x24, [sp, #48]
    4e7c:	bl	2fe0 <PyLong_AsLongLongAndOverflow@plt>
    4e80:	ldr	w1, [sp, #92]
    4e84:	mov	x24, x0
    4e88:	cmp	w1, #0x0
    4e8c:	b.gt	4fc8 <PyNumber_FloorDivide@plt+0x1b68>
    4e90:	cmn	x0, #0x1
    4e94:	b.eq	4f38 <PyNumber_FloorDivide@plt+0x1ad8>  // b.none
    4e98:	cbz	x0, 5030 <PyNumber_FloorDivide@plt+0x1bd0>
    4e9c:	cmp	x0, #0x1
    4ea0:	ldr	x0, [x20]
    4ea4:	add	x1, x0, #0x1
    4ea8:	b.eq	4f78 <PyNumber_FloorDivide@plt+0x1b18>  // b.none
    4eac:	add	x0, x0, #0x2
    4eb0:	str	x0, [x20]
    4eb4:	b.le	5078 <PyNumber_FloorDivide@plt+0x1c18>
    4eb8:	adrp	x25, 1b000 <_Py_log1p@@Base+0x13110>
    4ebc:	mov	x22, x20
    4ec0:	mov	x21, x20
    4ec4:	mov	x23, #0x1                   	// #1
    4ec8:	ldr	x25, [x25, #4008]
    4ecc:	b	4f04 <PyNumber_FloorDivide@plt+0x1aa4>
    4ed0:	mov	x1, x21
    4ed4:	mov	x0, x22
    4ed8:	cbz	x21, 4f84 <PyNumber_FloorDivide@plt+0x1b24>
    4edc:	bl	30d0 <PyNumber_Multiply@plt>
    4ee0:	mov	x19, x0
    4ee4:	ldr	x1, [x22]
    4ee8:	sub	x1, x1, #0x1
    4eec:	str	x1, [x22]
    4ef0:	cbz	x1, 4fa0 <PyNumber_FloorDivide@plt+0x1b40>
    4ef4:	mov	x22, x19
    4ef8:	cbz	x19, 5010 <PyNumber_FloorDivide@plt+0x1bb0>
    4efc:	cmp	x24, x23
    4f00:	b.eq	504c <PyNumber_FloorDivide@plt+0x1bec>  // b.none
    4f04:	ldr	x1, [x25]
    4f08:	mov	x19, x21
    4f0c:	mov	x0, x21
    4f10:	add	x23, x23, #0x1
    4f14:	bl	3420 <PyNumber_Subtract@plt>
    4f18:	mov	x21, x0
    4f1c:	ldr	x1, [x19]
    4f20:	sub	x1, x1, #0x1
    4f24:	str	x1, [x19]
    4f28:	cbnz	x1, 4ed0 <PyNumber_FloorDivide@plt+0x1a70>
    4f2c:	mov	x0, x19
    4f30:	bl	3080 <_Py_Dealloc@plt>
    4f34:	b	4ed0 <PyNumber_FloorDivide@plt+0x1a70>
    4f38:	ldp	x23, x24, [sp, #48]
    4f3c:	b	4d40 <PyNumber_FloorDivide@plt+0x18e0>
    4f40:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4f44:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    4f48:	add	x1, x1, #0x40
    4f4c:	ldr	x0, [x0, #3872]
    4f50:	ldr	x0, [x0]
    4f54:	bl	3130 <PyErr_SetString@plt>
    4f58:	b	4d40 <PyNumber_FloorDivide@plt+0x18e0>
    4f5c:	ldr	x0, [x20]
    4f60:	sub	x0, x0, #0x1
    4f64:	str	x0, [x20]
    4f68:	cbnz	x0, 4d64 <PyNumber_FloorDivide@plt+0x1904>
    4f6c:	mov	x0, x20
    4f70:	bl	3080 <_Py_Dealloc@plt>
    4f74:	b	4d68 <PyNumber_FloorDivide@plt+0x1908>
    4f78:	mov	x19, x20
    4f7c:	ldp	x23, x24, [sp, #48]
    4f80:	b	4e28 <PyNumber_FloorDivide@plt+0x19c8>
    4f84:	ldr	x1, [x22]
    4f88:	sub	x1, x1, #0x1
    4f8c:	str	x1, [x22]
    4f90:	cbnz	x1, 4f38 <PyNumber_FloorDivide@plt+0x1ad8>
    4f94:	bl	3080 <_Py_Dealloc@plt>
    4f98:	ldp	x23, x24, [sp, #48]
    4f9c:	b	4d40 <PyNumber_FloorDivide@plt+0x18e0>
    4fa0:	mov	x0, x22
    4fa4:	bl	3080 <_Py_Dealloc@plt>
    4fa8:	b	4ef4 <PyNumber_FloorDivide@plt+0x1a94>
    4fac:	mov	x0, x26
    4fb0:	bl	3080 <_Py_Dealloc@plt>
    4fb4:	ldp	x25, x26, [sp, #64]
    4fb8:	b	4d68 <PyNumber_FloorDivide@plt+0x1908>
    4fbc:	mov	x0, x20
    4fc0:	bl	3080 <_Py_Dealloc@plt>
    4fc4:	b	4e30 <PyNumber_FloorDivide@plt+0x19d0>
    4fc8:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    4fcc:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    4fd0:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    4fd4:	add	x1, x1, #0x90
    4fd8:	ldr	x0, [x0, #3936]
    4fdc:	ldr	x0, [x0]
    4fe0:	bl	33c0 <PyErr_Format@plt>
    4fe4:	ldp	x23, x24, [sp, #48]
    4fe8:	b	4d40 <PyNumber_FloorDivide@plt+0x18e0>
    4fec:	ldr	x0, [x20]
    4ff0:	sub	x0, x0, #0x1
    4ff4:	str	x0, [x20]
    4ff8:	cbnz	x0, 4d60 <PyNumber_FloorDivide@plt+0x1900>
    4ffc:	mov	x0, x20
    5000:	mov	x19, #0x0                   	// #0
    5004:	bl	3080 <_Py_Dealloc@plt>
    5008:	ldp	x25, x26, [sp, #64]
    500c:	b	4d68 <PyNumber_FloorDivide@plt+0x1908>
    5010:	ldr	x0, [x21]
    5014:	sub	x0, x0, #0x1
    5018:	str	x0, [x21]
    501c:	cbnz	x0, 4f38 <PyNumber_FloorDivide@plt+0x1ad8>
    5020:	mov	x0, x21
    5024:	bl	3080 <_Py_Dealloc@plt>
    5028:	ldp	x23, x24, [sp, #48]
    502c:	b	4d40 <PyNumber_FloorDivide@plt+0x18e0>
    5030:	mov	x0, #0x1                   	// #1
    5034:	bl	31e0 <PyLong_FromLong@plt>
    5038:	ldr	x1, [x20]
    503c:	mov	x19, x0
    5040:	ldp	x23, x24, [sp, #48]
    5044:	sub	x0, x1, #0x1
    5048:	b	4e28 <PyNumber_FloorDivide@plt+0x19c8>
    504c:	ldr	x1, [x21]
    5050:	sub	x1, x1, #0x1
    5054:	str	x1, [x21]
    5058:	cbz	x1, 506c <PyNumber_FloorDivide@plt+0x1c0c>
    505c:	ldr	x0, [x20]
    5060:	ldp	x23, x24, [sp, #48]
    5064:	sub	x0, x0, #0x1
    5068:	b	4e28 <PyNumber_FloorDivide@plt+0x19c8>
    506c:	mov	x0, x21
    5070:	bl	3080 <_Py_Dealloc@plt>
    5074:	b	505c <PyNumber_FloorDivide@plt+0x1bfc>
    5078:	mov	x19, x20
    507c:	mov	x21, x20
    5080:	b	5054 <PyNumber_FloorDivide@plt+0x1bf4>
    5084:	nop
    5088:	b	3310 <erfc@plt>
    508c:	nop
    5090:	b	3270 <erf@plt>
    5094:	nop
    5098:	sub	sp, sp, #0x70
    509c:	stp	x29, x30, [sp, #16]
    50a0:	add	x29, sp, #0x10
    50a4:	stp	x19, x20, [sp, #32]
    50a8:	mov	x19, x1
    50ac:	mov	x1, x2
    50b0:	str	x21, [sp, #48]
    50b4:	cbz	x3, 522c <PyNumber_FloorDivide@plt+0x1dcc>
    50b8:	ldr	x21, [x3, #16]
    50bc:	add	x21, x2, x21
    50c0:	add	x0, sp, #0x50
    50c4:	str	x0, [sp]
    50c8:	mov	w6, #0x2                   	// #2
    50cc:	mov	x0, x19
    50d0:	mov	w5, w6
    50d4:	adrp	x4, 1c000 <_Py_log1p@@Base+0x14110>
    50d8:	mov	w7, #0x0                   	// #0
    50dc:	add	x4, x4, #0x260
    50e0:	mov	x2, #0x0                   	// #0
    50e4:	bl	3120 <_PyArg_UnpackKeywords@plt>
    50e8:	mov	x19, x0
    50ec:	cbz	x0, 52b4 <PyNumber_FloorDivide@plt+0x1e54>
    50f0:	stp	d8, d9, [sp, #64]
    50f4:	adrp	x20, 1b000 <_Py_log1p@@Base+0x13110>
    50f8:	ldr	x0, [x19]
    50fc:	ldr	x1, [x20, #3824]
    5100:	ldr	x2, [x0, #8]
    5104:	cmp	x2, x1
    5108:	b.eq	5240 <PyNumber_FloorDivide@plt+0x1de0>  // b.none
    510c:	bl	32e0 <PyFloat_AsDouble@plt>
    5110:	fmov	d9, d0
    5114:	fmov	d1, #-1.000000000000000000e+00
    5118:	fcmp	d0, d1
    511c:	b.eq	5320 <PyNumber_FloorDivide@plt+0x1ec0>  // b.none
    5120:	ldr	x0, [x19, #8]
    5124:	ldr	x1, [x20, #3824]
    5128:	ldr	x2, [x0, #8]
    512c:	cmp	x2, x1
    5130:	b.eq	5258 <PyNumber_FloorDivide@plt+0x1df8>  // b.none
    5134:	bl	32e0 <PyFloat_AsDouble@plt>
    5138:	fmov	d8, d0
    513c:	fmov	d1, #-1.000000000000000000e+00
    5140:	fcmp	d0, d1
    5144:	b.eq	52e4 <PyNumber_FloorDivide@plt+0x1e84>  // b.none
    5148:	str	d10, [sp, #56]
    514c:	cmp	x21, #0x2
    5150:	b.eq	5268 <PyNumber_FloorDivide@plt+0x1e08>  // b.none
    5154:	ldr	x0, [x19, #16]
    5158:	cbz	x0, 5314 <PyNumber_FloorDivide@plt+0x1eb4>
    515c:	ldr	x1, [x20, #3824]
    5160:	ldr	x2, [x0, #8]
    5164:	cmp	x2, x1
    5168:	b.eq	52d4 <PyNumber_FloorDivide@plt+0x1e74>  // b.none
    516c:	bl	32e0 <PyFloat_AsDouble@plt>
    5170:	fmov	d10, d0
    5174:	fmov	d1, #-1.000000000000000000e+00
    5178:	fcmp	d0, d1
    517c:	b.eq	52f8 <PyNumber_FloorDivide@plt+0x1e98>  // b.none
    5180:	cmp	x21, #0x3
    5184:	b.eq	5330 <PyNumber_FloorDivide@plt+0x1ed0>  // b.none
    5188:	ldr	x0, [x19, #24]
    518c:	ldr	x20, [x20, #3824]
    5190:	ldr	x1, [x0, #8]
    5194:	cmp	x1, x20
    5198:	b.eq	52cc <PyNumber_FloorDivide@plt+0x1e6c>  // b.none
    519c:	bl	32e0 <PyFloat_AsDouble@plt>
    51a0:	fmov	d1, #-1.000000000000000000e+00
    51a4:	fcmp	d0, d1
    51a8:	b.eq	5284 <PyNumber_FloorDivide@plt+0x1e24>  // b.none
    51ac:	fcmpe	d10, #0.0
    51b0:	b.mi	528c <PyNumber_FloorDivide@plt+0x1e2c>  // b.first
    51b4:	fcmpe	d0, #0.0
    51b8:	b.mi	528c <PyNumber_FloorDivide@plt+0x1e2c>  // b.first
    51bc:	fcmp	d9, d8
    51c0:	mov	x0, #0x1                   	// #1
    51c4:	b.eq	520c <PyNumber_FloorDivide@plt+0x1dac>  // b.none
    51c8:	fabs	d2, d9
    51cc:	mov	x1, #0x7fefffffffffffff    	// #9218868437227405311
    51d0:	fmov	d1, x1
    51d4:	fcmp	d2, d1
    51d8:	b.gt	530c <PyNumber_FloorDivide@plt+0x1eac>
    51dc:	fabs	d2, d8
    51e0:	fcmp	d2, d1
    51e4:	b.gt	530c <PyNumber_FloorDivide@plt+0x1eac>
    51e8:	fmul	d1, d8, d10
    51ec:	fabd	d8, d8, d9
    51f0:	fabs	d1, d1
    51f4:	fcmpe	d8, d1
    51f8:	b.ls	520c <PyNumber_FloorDivide@plt+0x1dac>  // b.plast
    51fc:	fmul	d9, d9, d10
    5200:	fabs	d9, d9
    5204:	fcmpe	d8, d9
    5208:	b.hi	5340 <PyNumber_FloorDivide@plt+0x1ee0>  // b.pmore
    520c:	bl	3220 <PyBool_FromLong@plt>
    5210:	ldp	x29, x30, [sp, #16]
    5214:	ldp	x19, x20, [sp, #32]
    5218:	ldr	x21, [sp, #48]
    521c:	ldr	d10, [sp, #56]
    5220:	ldp	d8, d9, [sp, #64]
    5224:	add	sp, sp, #0x70
    5228:	ret
    522c:	cmp	x2, #0x2
    5230:	b.ne	5238 <PyNumber_FloorDivide@plt+0x1dd8>  // b.any
    5234:	cbnz	x19, 5278 <PyNumber_FloorDivide@plt+0x1e18>
    5238:	mov	x21, x1
    523c:	b	50c0 <PyNumber_FloorDivide@plt+0x1c60>
    5240:	ldr	d9, [x0, #16]
    5244:	ldr	x0, [x19, #8]
    5248:	ldr	x1, [x20, #3824]
    524c:	ldr	x2, [x0, #8]
    5250:	cmp	x2, x1
    5254:	b.ne	5134 <PyNumber_FloorDivide@plt+0x1cd4>  // b.any
    5258:	ldr	d8, [x0, #16]
    525c:	cmp	x21, #0x2
    5260:	str	d10, [sp, #56]
    5264:	b.ne	5154 <PyNumber_FloorDivide@plt+0x1cf4>  // b.any
    5268:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    526c:	movi	d0, #0x0
    5270:	ldr	d10, [x0, #1168]
    5274:	b	51bc <PyNumber_FloorDivide@plt+0x1d5c>
    5278:	mov	x21, x2
    527c:	stp	d8, d9, [sp, #64]
    5280:	b	50f4 <PyNumber_FloorDivide@plt+0x1c94>
    5284:	bl	32b0 <PyErr_Occurred@plt>
    5288:	cbnz	x0, 52ac <PyNumber_FloorDivide@plt+0x1e4c>
    528c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    5290:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    5294:	add	x1, x1, #0xa8
    5298:	ldr	x0, [x0, #3872]
    529c:	ldr	x0, [x0]
    52a0:	bl	3130 <PyErr_SetString@plt>
    52a4:	bl	32b0 <PyErr_Occurred@plt>
    52a8:	cbz	x0, 52dc <PyNumber_FloorDivide@plt+0x1e7c>
    52ac:	ldp	d8, d9, [sp, #64]
    52b0:	ldr	d10, [sp, #56]
    52b4:	mov	x0, #0x0                   	// #0
    52b8:	ldp	x29, x30, [sp, #16]
    52bc:	ldp	x19, x20, [sp, #32]
    52c0:	ldr	x21, [sp, #48]
    52c4:	add	sp, sp, #0x70
    52c8:	ret
    52cc:	ldr	d0, [x0, #16]
    52d0:	b	51ac <PyNumber_FloorDivide@plt+0x1d4c>
    52d4:	ldr	d10, [x0, #16]
    52d8:	b	5180 <PyNumber_FloorDivide@plt+0x1d20>
    52dc:	mov	x0, #0xffffffffffffffff    	// #-1
    52e0:	b	520c <PyNumber_FloorDivide@plt+0x1dac>
    52e4:	bl	32b0 <PyErr_Occurred@plt>
    52e8:	cbz	x0, 5148 <PyNumber_FloorDivide@plt+0x1ce8>
    52ec:	ldp	d8, d9, [sp, #64]
    52f0:	mov	x0, #0x0                   	// #0
    52f4:	b	52b8 <PyNumber_FloorDivide@plt+0x1e58>
    52f8:	bl	32b0 <PyErr_Occurred@plt>
    52fc:	cbnz	x0, 52ac <PyNumber_FloorDivide@plt+0x1e4c>
    5300:	cmp	x21, #0x3
    5304:	b.ne	5188 <PyNumber_FloorDivide@plt+0x1d28>  // b.any
    5308:	b	528c <PyNumber_FloorDivide@plt+0x1e2c>
    530c:	mov	x0, #0x0                   	// #0
    5310:	b	520c <PyNumber_FloorDivide@plt+0x1dac>
    5314:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    5318:	ldr	d10, [x0, #1168]
    531c:	b	5188 <PyNumber_FloorDivide@plt+0x1d28>
    5320:	bl	32b0 <PyErr_Occurred@plt>
    5324:	cbz	x0, 5120 <PyNumber_FloorDivide@plt+0x1cc0>
    5328:	ldp	d8, d9, [sp, #64]
    532c:	b	52f0 <PyNumber_FloorDivide@plt+0x1e90>
    5330:	fcmpe	d10, #0.0
    5334:	b.mi	528c <PyNumber_FloorDivide@plt+0x1e2c>  // b.first
    5338:	movi	d0, #0x0
    533c:	b	51bc <PyNumber_FloorDivide@plt+0x1d5c>
    5340:	fcmpe	d8, d0
    5344:	cset	x0, ls  // ls = plast
    5348:	b	520c <PyNumber_FloorDivide@plt+0x1dac>
    534c:	nop
    5350:	stp	x29, x30, [sp, #-112]!
    5354:	cmp	x2, #0x2
    5358:	mov	x29, sp
    535c:	stp	x19, x20, [sp, #16]
    5360:	mov	x19, x1
    5364:	b.eq	5384 <PyNumber_FloorDivide@plt+0x1f24>  // b.none
    5368:	mov	x1, x2
    536c:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    5370:	mov	x3, #0x2                   	// #2
    5374:	add	x0, x0, #0xc8
    5378:	mov	x2, x3
    537c:	bl	3280 <_PyArg_CheckPositional@plt>
    5380:	cbz	w0, 5700 <PyNumber_FloorDivide@plt+0x22a0>
    5384:	stp	x21, x22, [sp, #32]
    5388:	ldp	x0, x22, [x19]
    538c:	bl	33e0 <PyNumber_Index@plt>
    5390:	mov	x19, x0
    5394:	cbz	x0, 5478 <PyNumber_FloorDivide@plt+0x2018>
    5398:	adrp	x21, 1b000 <_Py_log1p@@Base+0x13110>
    539c:	ldr	x2, [x0, #8]
    53a0:	ldr	x1, [x21, #3984]
    53a4:	cmp	x2, x1
    53a8:	b.eq	5614 <PyNumber_FloorDivide@plt+0x21b4>  // b.none
    53ac:	bl	3170 <_PyLong_Copy@plt>
    53b0:	mov	x20, x0
    53b4:	ldr	x1, [x19]
    53b8:	sub	x0, x1, #0x1
    53bc:	str	x0, [x19]
    53c0:	cbz	x0, 5634 <PyNumber_FloorDivide@plt+0x21d4>
    53c4:	cbz	x20, 5478 <PyNumber_FloorDivide@plt+0x2018>
    53c8:	mov	x0, x22
    53cc:	bl	33e0 <PyNumber_Index@plt>
    53d0:	mov	x19, x0
    53d4:	cbz	x0, 5768 <PyNumber_FloorDivide@plt+0x2308>
    53d8:	ldr	x21, [x21, #3984]
    53dc:	ldr	x1, [x0, #8]
    53e0:	cmp	x1, x21
    53e4:	b.eq	5490 <PyNumber_FloorDivide@plt+0x2030>  // b.none
    53e8:	bl	3170 <_PyLong_Copy@plt>
    53ec:	mov	x21, x0
    53f0:	ldr	x1, [x19]
    53f4:	sub	x0, x1, #0x1
    53f8:	str	x0, [x19]
    53fc:	cbz	x0, 56bc <PyNumber_FloorDivide@plt+0x225c>
    5400:	cbnz	x21, 5494 <PyNumber_FloorDivide@plt+0x2034>
    5404:	ldr	x0, [x20]
    5408:	sub	x0, x0, #0x1
    540c:	str	x0, [x20]
    5410:	cbnz	x0, 5478 <PyNumber_FloorDivide@plt+0x2018>
    5414:	mov	x0, x20
    5418:	mov	x19, #0x0                   	// #0
    541c:	bl	3080 <_Py_Dealloc@plt>
    5420:	ldp	x21, x22, [sp, #32]
    5424:	b	5480 <PyNumber_FloorDivide@plt+0x2020>
    5428:	mov	x22, x19
    542c:	nop
    5430:	ldr	x0, [x22]
    5434:	sub	x0, x0, #0x1
    5438:	str	x0, [x22]
    543c:	cbnz	x0, 5800 <PyNumber_FloorDivide@plt+0x23a0>
    5440:	mov	x0, x22
    5444:	bl	3080 <_Py_Dealloc@plt>
    5448:	ldp	x23, x24, [sp, #48]
    544c:	ldp	x25, x26, [sp, #64]
    5450:	ldr	x27, [sp, #80]
    5454:	nop
    5458:	ldr	x0, [x20]
    545c:	sub	x0, x0, #0x1
    5460:	str	x0, [x20]
    5464:	cbz	x0, 56d8 <PyNumber_FloorDivide@plt+0x2278>
    5468:	ldr	x0, [x21]
    546c:	sub	x0, x0, #0x1
    5470:	str	x0, [x21]
    5474:	cbz	x0, 564c <PyNumber_FloorDivide@plt+0x21ec>
    5478:	ldp	x21, x22, [sp, #32]
    547c:	mov	x19, #0x0                   	// #0
    5480:	mov	x0, x19
    5484:	ldp	x19, x20, [sp, #16]
    5488:	ldp	x29, x30, [sp], #112
    548c:	ret
    5490:	mov	x21, x0
    5494:	ldr	x0, [x20, #16]
    5498:	tbnz	x0, #63, 5714 <PyNumber_FloorDivide@plt+0x22b4>
    549c:	ldr	x0, [x21, #16]
    54a0:	tbnz	x0, #63, 56e4 <PyNumber_FloorDivide@plt+0x2284>
    54a4:	mov	x1, x21
    54a8:	mov	x0, x20
    54ac:	bl	3420 <PyNumber_Subtract@plt>
    54b0:	mov	x19, x0
    54b4:	cbz	x0, 5458 <PyNumber_FloorDivide@plt+0x1ff8>
    54b8:	ldr	x1, [x0, #16]
    54bc:	tbnz	x1, #63, 566c <PyNumber_FloorDivide@plt+0x220c>
    54c0:	mov	x1, x21
    54c4:	mov	w2, #0x0                   	// #0
    54c8:	bl	31f0 <PyObject_RichCompareBool@plt>
    54cc:	mov	w22, w0
    54d0:	cmp	w0, #0x0
    54d4:	b.le	5730 <PyNumber_FloorDivide@plt+0x22d0>
    54d8:	ldr	x0, [x21]
    54dc:	stp	x25, x26, [sp, #64]
    54e0:	sub	x0, x0, #0x1
    54e4:	str	x0, [x21]
    54e8:	cbz	x0, 57c0 <PyNumber_FloorDivide@plt+0x2360>
    54ec:	mov	x21, x19
    54f0:	add	x1, sp, #0x6c
    54f4:	mov	x0, x21
    54f8:	bl	2fe0 <PyLong_AsLongLongAndOverflow@plt>
    54fc:	mov	x26, x0
    5500:	ldr	w1, [sp, #108]
    5504:	cmp	w1, #0x0
    5508:	b.gt	579c <PyNumber_FloorDivide@plt+0x233c>
    550c:	cmn	x0, #0x1
    5510:	b.eq	57d0 <PyNumber_FloorDivide@plt+0x2370>  // b.none
    5514:	cbz	x0, 5810 <PyNumber_FloorDivide@plt+0x23b0>
    5518:	cmp	x0, #0x1
    551c:	ldr	x0, [x20]
    5520:	add	x1, x0, #0x1
    5524:	b.eq	582c <PyNumber_FloorDivide@plt+0x23cc>  // b.none
    5528:	stp	x23, x24, [sp, #48]
    552c:	add	x0, x0, #0x2
    5530:	str	x0, [x20]
    5534:	b.le	5860 <PyNumber_FloorDivide@plt+0x2400>
    5538:	str	x27, [sp, #80]
    553c:	adrp	x27, 1b000 <_Py_log1p@@Base+0x13110>
    5540:	mov	x19, x20
    5544:	mov	x24, x20
    5548:	ldr	x27, [x27, #4008]
    554c:	mov	x25, #0x2                   	// #2
    5550:	ldr	x1, [x27]
    5554:	mov	x22, x24
    5558:	mov	x0, x24
    555c:	bl	3420 <PyNumber_Subtract@plt>
    5560:	mov	x24, x0
    5564:	ldr	x1, [x22]
    5568:	sub	x0, x1, #0x1
    556c:	str	x0, [x22]
    5570:	cbz	x0, 561c <PyNumber_FloorDivide@plt+0x21bc>
    5574:	cbz	x24, 5428 <PyNumber_FloorDivide@plt+0x1fc8>
    5578:	mov	x1, x24
    557c:	mov	x0, x19
    5580:	bl	30d0 <PyNumber_Multiply@plt>
    5584:	mov	x22, x0
    5588:	ldr	x1, [x19]
    558c:	sub	x0, x1, #0x1
    5590:	str	x0, [x19]
    5594:	cbz	x0, 5628 <PyNumber_FloorDivide@plt+0x21c8>
    5598:	cbz	x22, 57d8 <PyNumber_FloorDivide@plt+0x2378>
    559c:	mov	x0, x25
    55a0:	bl	3040 <PyLong_FromUnsignedLongLong@plt>
    55a4:	mov	x23, x0
    55a8:	cbz	x0, 5838 <PyNumber_FloorDivide@plt+0x23d8>
    55ac:	mov	x1, x0
    55b0:	mov	x0, x22
    55b4:	bl	3460 <PyNumber_FloorDivide@plt>
    55b8:	mov	x19, x0
    55bc:	ldr	x1, [x22]
    55c0:	sub	x0, x1, #0x1
    55c4:	str	x0, [x22]
    55c8:	cbz	x0, 56cc <PyNumber_FloorDivide@plt+0x226c>
    55cc:	ldr	x0, [x23]
    55d0:	sub	x0, x0, #0x1
    55d4:	str	x0, [x23]
    55d8:	cbz	x0, 5640 <PyNumber_FloorDivide@plt+0x21e0>
    55dc:	cbz	x19, 57d8 <PyNumber_FloorDivide@plt+0x2378>
    55e0:	cmp	x26, x25
    55e4:	add	x25, x25, #0x1
    55e8:	b.ne	5550 <PyNumber_FloorDivide@plt+0x20f0>  // b.any
    55ec:	ldr	x1, [x24]
    55f0:	ldr	x27, [sp, #80]
    55f4:	sub	x1, x1, #0x1
    55f8:	str	x1, [x24]
    55fc:	cbz	x1, 5854 <PyNumber_FloorDivide@plt+0x23f4>
    5600:	ldr	x0, [x20]
    5604:	ldp	x23, x24, [sp, #48]
    5608:	sub	x0, x0, #0x1
    560c:	ldp	x25, x26, [sp, #64]
    5610:	b	5690 <PyNumber_FloorDivide@plt+0x2230>
    5614:	mov	x20, x0
    5618:	b	53c8 <PyNumber_FloorDivide@plt+0x1f68>
    561c:	mov	x0, x22
    5620:	bl	3080 <_Py_Dealloc@plt>
    5624:	b	5574 <PyNumber_FloorDivide@plt+0x2114>
    5628:	mov	x0, x19
    562c:	bl	3080 <_Py_Dealloc@plt>
    5630:	b	5598 <PyNumber_FloorDivide@plt+0x2138>
    5634:	mov	x0, x19
    5638:	bl	3080 <_Py_Dealloc@plt>
    563c:	b	53c4 <PyNumber_FloorDivide@plt+0x1f64>
    5640:	mov	x0, x23
    5644:	bl	3080 <_Py_Dealloc@plt>
    5648:	b	55dc <PyNumber_FloorDivide@plt+0x217c>
    564c:	mov	x0, x21
    5650:	mov	x19, #0x0                   	// #0
    5654:	bl	3080 <_Py_Dealloc@plt>
    5658:	mov	x0, x19
    565c:	ldp	x19, x20, [sp, #16]
    5660:	ldp	x21, x22, [sp, #32]
    5664:	ldp	x29, x30, [sp], #112
    5668:	ret
    566c:	ldr	x1, [x0]
    5670:	sub	x1, x1, #0x1
    5674:	str	x1, [x0]
    5678:	cbz	x1, 5794 <PyNumber_FloorDivide@plt+0x2334>
    567c:	mov	x0, #0x0                   	// #0
    5680:	bl	31e0 <PyLong_FromLong@plt>
    5684:	ldr	x1, [x20]
    5688:	mov	x19, x0
    568c:	sub	x0, x1, #0x1
    5690:	str	x0, [x20]
    5694:	cbz	x0, 575c <PyNumber_FloorDivide@plt+0x22fc>
    5698:	ldr	x0, [x21]
    569c:	sub	x0, x0, #0x1
    56a0:	str	x0, [x21]
    56a4:	cbz	x0, 574c <PyNumber_FloorDivide@plt+0x22ec>
    56a8:	mov	x0, x19
    56ac:	ldp	x19, x20, [sp, #16]
    56b0:	ldp	x21, x22, [sp, #32]
    56b4:	ldp	x29, x30, [sp], #112
    56b8:	ret
    56bc:	mov	x0, x19
    56c0:	bl	3080 <_Py_Dealloc@plt>
    56c4:	cbnz	x21, 5494 <PyNumber_FloorDivide@plt+0x2034>
    56c8:	b	5404 <PyNumber_FloorDivide@plt+0x1fa4>
    56cc:	mov	x0, x22
    56d0:	bl	3080 <_Py_Dealloc@plt>
    56d4:	b	55cc <PyNumber_FloorDivide@plt+0x216c>
    56d8:	mov	x0, x20
    56dc:	bl	3080 <_Py_Dealloc@plt>
    56e0:	b	5468 <PyNumber_FloorDivide@plt+0x2008>
    56e4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    56e8:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    56ec:	add	x1, x1, #0x68
    56f0:	ldr	x0, [x0, #3872]
    56f4:	ldr	x0, [x0]
    56f8:	bl	3130 <PyErr_SetString@plt>
    56fc:	b	5458 <PyNumber_FloorDivide@plt+0x1ff8>
    5700:	mov	x19, #0x0                   	// #0
    5704:	mov	x0, x19
    5708:	ldp	x19, x20, [sp, #16]
    570c:	ldp	x29, x30, [sp], #112
    5710:	ret
    5714:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    5718:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    571c:	add	x1, x1, #0x40
    5720:	ldr	x0, [x0, #3872]
    5724:	ldr	x0, [x0]
    5728:	bl	3130 <PyErr_SetString@plt>
    572c:	b	5458 <PyNumber_FloorDivide@plt+0x1ff8>
    5730:	ldr	x0, [x19]
    5734:	sub	x0, x0, #0x1
    5738:	str	x0, [x19]
    573c:	cbz	x0, 5788 <PyNumber_FloorDivide@plt+0x2328>
    5740:	cbnz	w22, 5458 <PyNumber_FloorDivide@plt+0x1ff8>
    5744:	stp	x25, x26, [sp, #64]
    5748:	b	54f0 <PyNumber_FloorDivide@plt+0x2090>
    574c:	mov	x0, x21
    5750:	bl	3080 <_Py_Dealloc@plt>
    5754:	ldp	x21, x22, [sp, #32]
    5758:	b	5480 <PyNumber_FloorDivide@plt+0x2020>
    575c:	mov	x0, x20
    5760:	bl	3080 <_Py_Dealloc@plt>
    5764:	b	5698 <PyNumber_FloorDivide@plt+0x2238>
    5768:	ldr	x0, [x20]
    576c:	sub	x0, x0, #0x1
    5770:	str	x0, [x20]
    5774:	cbnz	x0, 5478 <PyNumber_FloorDivide@plt+0x2018>
    5778:	mov	x0, x20
    577c:	bl	3080 <_Py_Dealloc@plt>
    5780:	ldp	x21, x22, [sp, #32]
    5784:	b	5480 <PyNumber_FloorDivide@plt+0x2020>
    5788:	mov	x0, x19
    578c:	bl	3080 <_Py_Dealloc@plt>
    5790:	b	5740 <PyNumber_FloorDivide@plt+0x22e0>
    5794:	bl	3080 <_Py_Dealloc@plt>
    5798:	b	567c <PyNumber_FloorDivide@plt+0x221c>
    579c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    57a0:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    57a4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    57a8:	add	x1, x1, #0xd0
    57ac:	ldr	x0, [x0, #3936]
    57b0:	ldr	x0, [x0]
    57b4:	bl	33c0 <PyErr_Format@plt>
    57b8:	ldp	x25, x26, [sp, #64]
    57bc:	b	5458 <PyNumber_FloorDivide@plt+0x1ff8>
    57c0:	mov	x0, x21
    57c4:	mov	x21, x19
    57c8:	bl	3080 <_Py_Dealloc@plt>
    57cc:	b	54f0 <PyNumber_FloorDivide@plt+0x2090>
    57d0:	ldp	x25, x26, [sp, #64]
    57d4:	b	5458 <PyNumber_FloorDivide@plt+0x1ff8>
    57d8:	ldr	x0, [x24]
    57dc:	sub	x0, x0, #0x1
    57e0:	str	x0, [x24]
    57e4:	cbnz	x0, 5800 <PyNumber_FloorDivide@plt+0x23a0>
    57e8:	mov	x0, x24
    57ec:	bl	3080 <_Py_Dealloc@plt>
    57f0:	ldp	x23, x24, [sp, #48]
    57f4:	ldp	x25, x26, [sp, #64]
    57f8:	ldr	x27, [sp, #80]
    57fc:	b	5458 <PyNumber_FloorDivide@plt+0x1ff8>
    5800:	ldp	x23, x24, [sp, #48]
    5804:	ldp	x25, x26, [sp, #64]
    5808:	ldr	x27, [sp, #80]
    580c:	b	5458 <PyNumber_FloorDivide@plt+0x1ff8>
    5810:	mov	x0, #0x1                   	// #1
    5814:	bl	31e0 <PyLong_FromLong@plt>
    5818:	ldr	x1, [x20]
    581c:	mov	x19, x0
    5820:	ldp	x25, x26, [sp, #64]
    5824:	sub	x0, x1, #0x1
    5828:	b	5690 <PyNumber_FloorDivide@plt+0x2230>
    582c:	mov	x19, x20
    5830:	ldp	x25, x26, [sp, #64]
    5834:	b	5690 <PyNumber_FloorDivide@plt+0x2230>
    5838:	ldr	x0, [x24]
    583c:	sub	x0, x0, #0x1
    5840:	str	x0, [x24]
    5844:	cbnz	x0, 5430 <PyNumber_FloorDivide@plt+0x1fd0>
    5848:	mov	x0, x24
    584c:	bl	3080 <_Py_Dealloc@plt>
    5850:	b	5430 <PyNumber_FloorDivide@plt+0x1fd0>
    5854:	mov	x0, x24
    5858:	bl	3080 <_Py_Dealloc@plt>
    585c:	b	5600 <PyNumber_FloorDivide@plt+0x21a0>
    5860:	mov	x19, x20
    5864:	mov	x24, x20
    5868:	b	55f8 <PyNumber_FloorDivide@plt+0x2198>
    586c:	nop
    5870:	sub	sp, sp, #0x80
    5874:	mov	x0, x1
    5878:	mov	x1, x2
    587c:	stp	x29, x30, [sp, #16]
    5880:	add	x29, sp, #0x10
    5884:	stp	x19, x20, [sp, #32]
    5888:	stp	x21, x22, [sp, #48]
    588c:	cbz	x3, 59b4 <PyNumber_FloorDivide@plt+0x2554>
    5890:	ldr	x19, [x3, #16]
    5894:	add	x2, sp, #0x70
    5898:	str	x2, [sp]
    589c:	adrp	x4, 1c000 <_Py_log1p@@Base+0x14110>
    58a0:	add	x4, x4, #0x260
    58a4:	add	x19, x1, x19
    58a8:	mov	w6, #0x1                   	// #1
    58ac:	add	x4, x4, #0x40
    58b0:	mov	w5, w6
    58b4:	mov	w7, #0x0                   	// #0
    58b8:	mov	x2, #0x0                   	// #0
    58bc:	bl	3120 <_PyArg_UnpackKeywords@plt>
    58c0:	mov	x1, x0
    58c4:	cbz	x0, 5acc <PyNumber_FloorDivide@plt+0x266c>
    58c8:	cmp	x19, #0x1
    58cc:	ldr	x0, [x0]
    58d0:	b.eq	59c4 <PyNumber_FloorDivide@plt+0x2564>  // b.none
    58d4:	ldr	x19, [x1, #8]
    58d8:	bl	3370 <PyObject_GetIter@plt>
    58dc:	mov	x21, x0
    58e0:	cbz	x0, 5acc <PyNumber_FloorDivide@plt+0x266c>
    58e4:	cbz	x19, 59d0 <PyNumber_FloorDivide@plt+0x2570>
    58e8:	ldr	x0, [x19]
    58ec:	stp	x23, x24, [sp, #64]
    58f0:	adrp	x23, 1b000 <_Py_log1p@@Base+0x13110>
    58f4:	add	x0, x0, #0x1
    58f8:	str	x0, [x19]
    58fc:	ldr	x1, [x23, #3984]
    5900:	ldr	x0, [x19, #8]
    5904:	cmp	x0, x1
    5908:	b.eq	59f8 <PyNumber_FloorDivide@plt+0x2598>  // b.none
    590c:	adrp	x20, 1b000 <_Py_log1p@@Base+0x13110>
    5910:	ldr	x1, [x20, #3824]
    5914:	cmp	x0, x1
    5918:	b.eq	5b10 <PyNumber_FloorDivide@plt+0x26b0>  // b.none
    591c:	nop
    5920:	mov	x0, x21
    5924:	bl	30b0 <PyIter_Next@plt>
    5928:	mov	x20, x0
    592c:	mov	x0, x19
    5930:	cbz	x20, 5ae8 <PyNumber_FloorDivide@plt+0x2688>
    5934:	mov	x1, x20
    5938:	bl	30d0 <PyNumber_Multiply@plt>
    593c:	ldr	x1, [x19]
    5940:	mov	x22, x0
    5944:	sub	x0, x1, #0x1
    5948:	str	x0, [x19]
    594c:	cbz	x0, 59a8 <PyNumber_FloorDivide@plt+0x2548>
    5950:	ldr	x0, [x20]
    5954:	mov	x19, x22
    5958:	sub	x0, x0, #0x1
    595c:	str	x0, [x20]
    5960:	cbz	x0, 5998 <PyNumber_FloorDivide@plt+0x2538>
    5964:	cbnz	x22, 5920 <PyNumber_FloorDivide@plt+0x24c0>
    5968:	mov	x19, #0x0                   	// #0
    596c:	ldr	x0, [x21]
    5970:	sub	x0, x0, #0x1
    5974:	str	x0, [x21]
    5978:	cbz	x0, 5c1c <PyNumber_FloorDivide@plt+0x27bc>
    597c:	mov	x0, x19
    5980:	ldp	x29, x30, [sp, #16]
    5984:	ldp	x19, x20, [sp, #32]
    5988:	ldp	x21, x22, [sp, #48]
    598c:	ldp	x23, x24, [sp, #64]
    5990:	add	sp, sp, #0x80
    5994:	ret
    5998:	mov	x0, x20
    599c:	bl	3080 <_Py_Dealloc@plt>
    59a0:	cbnz	x22, 5920 <PyNumber_FloorDivide@plt+0x24c0>
    59a4:	b	5968 <PyNumber_FloorDivide@plt+0x2508>
    59a8:	mov	x0, x19
    59ac:	bl	3080 <_Py_Dealloc@plt>
    59b0:	b	5950 <PyNumber_FloorDivide@plt+0x24f0>
    59b4:	cmp	x2, #0x1
    59b8:	b.ne	5e34 <PyNumber_FloorDivide@plt+0x29d4>  // b.any
    59bc:	cbz	x0, 5a9c <PyNumber_FloorDivide@plt+0x263c>
    59c0:	ldr	x0, [x0]
    59c4:	bl	3370 <PyObject_GetIter@plt>
    59c8:	mov	x21, x0
    59cc:	cbz	x0, 5acc <PyNumber_FloorDivide@plt+0x266c>
    59d0:	mov	x0, #0x1                   	// #1
    59d4:	bl	31e0 <PyLong_FromLong@plt>
    59d8:	mov	x19, x0
    59dc:	cbz	x0, 5df4 <PyNumber_FloorDivide@plt+0x2994>
    59e0:	stp	x23, x24, [sp, #64]
    59e4:	adrp	x23, 1b000 <_Py_log1p@@Base+0x13110>
    59e8:	ldr	x1, [x23, #3984]
    59ec:	ldr	x0, [x19, #8]
    59f0:	cmp	x0, x1
    59f4:	b.ne	590c <PyNumber_FloorDivide@plt+0x24ac>  // b.any
    59f8:	add	x24, sp, #0x6c
    59fc:	mov	x0, x19
    5a00:	mov	x1, x24
    5a04:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    5a08:	ldr	w1, [sp, #108]
    5a0c:	mov	x22, x0
    5a10:	cbnz	w1, 5a94 <PyNumber_FloorDivide@plt+0x2634>
    5a14:	ldr	x0, [x19]
    5a18:	str	d8, [sp, #80]
    5a1c:	sub	x0, x0, #0x1
    5a20:	str	x0, [x19]
    5a24:	cbz	x0, 5cf0 <PyNumber_FloorDivide@plt+0x2890>
    5a28:	ldr	x19, [x23, #3984]
    5a2c:	mov	x0, #0x4040000000000000    	// #4629700416936869888
    5a30:	fmov	d8, x0
    5a34:	mov	x0, x21
    5a38:	bl	30b0 <PyIter_Next@plt>
    5a3c:	mov	x20, x0
    5a40:	cbz	x0, 5d7c <PyNumber_FloorDivide@plt+0x291c>
    5a44:	ldr	x1, [x0, #8]
    5a48:	cmp	x1, x19
    5a4c:	b.eq	5c4c <PyNumber_FloorDivide@plt+0x27ec>  // b.none
    5a50:	mov	x0, x22
    5a54:	bl	31e0 <PyLong_FromLong@plt>
    5a58:	mov	x22, x0
    5a5c:	cbz	x0, 5da4 <PyNumber_FloorDivide@plt+0x2944>
    5a60:	mov	x1, x20
    5a64:	bl	30d0 <PyNumber_Multiply@plt>
    5a68:	ldr	x1, [x22]
    5a6c:	mov	x19, x0
    5a70:	sub	x0, x1, #0x1
    5a74:	str	x0, [x22]
    5a78:	cbz	x0, 5cc0 <PyNumber_FloorDivide@plt+0x2860>
    5a7c:	ldr	x0, [x20]
    5a80:	sub	x0, x0, #0x1
    5a84:	str	x0, [x20]
    5a88:	cbz	x0, 5c40 <PyNumber_FloorDivide@plt+0x27e0>
    5a8c:	cbz	x19, 5dc8 <PyNumber_FloorDivide@plt+0x2968>
    5a90:	ldr	d8, [sp, #80]
    5a94:	ldr	x0, [x19, #8]
    5a98:	b	590c <PyNumber_FloorDivide@plt+0x24ac>
    5a9c:	add	x0, sp, #0x70
    5aa0:	str	x0, [sp]
    5aa4:	adrp	x4, 1c000 <_Py_log1p@@Base+0x14110>
    5aa8:	add	x4, x4, #0x260
    5aac:	mov	w6, w2
    5ab0:	mov	w5, w2
    5ab4:	add	x4, x4, #0x40
    5ab8:	mov	w7, #0x0                   	// #0
    5abc:	mov	x2, #0x0                   	// #0
    5ac0:	mov	x0, #0x0                   	// #0
    5ac4:	bl	3120 <_PyArg_UnpackKeywords@plt>
    5ac8:	cbnz	x0, 59c0 <PyNumber_FloorDivide@plt+0x2560>
    5acc:	mov	x19, #0x0                   	// #0
    5ad0:	mov	x0, x19
    5ad4:	ldp	x29, x30, [sp, #16]
    5ad8:	ldp	x19, x20, [sp, #32]
    5adc:	ldp	x21, x22, [sp, #48]
    5ae0:	add	sp, sp, #0x80
    5ae4:	ret
    5ae8:	bl	32b0 <PyErr_Occurred@plt>
    5aec:	cbz	x0, 596c <PyNumber_FloorDivide@plt+0x250c>
    5af0:	ldr	x0, [x19]
    5af4:	sub	x0, x0, #0x1
    5af8:	str	x0, [x19]
    5afc:	cbnz	x0, 5968 <PyNumber_FloorDivide@plt+0x2508>
    5b00:	mov	x0, x19
    5b04:	mov	x19, #0x0                   	// #0
    5b08:	bl	3080 <_Py_Dealloc@plt>
    5b0c:	b	596c <PyNumber_FloorDivide@plt+0x250c>
    5b10:	ldr	x0, [x19]
    5b14:	str	d8, [sp, #80]
    5b18:	ldr	d8, [x19, #16]
    5b1c:	sub	x0, x0, #0x1
    5b20:	str	x0, [x19]
    5b24:	cbz	x0, 5c10 <PyNumber_FloorDivide@plt+0x27b0>
    5b28:	ldr	x19, [x20, #3824]
    5b2c:	add	x22, sp, #0x6c
    5b30:	ldr	x23, [x23, #3984]
    5b34:	mov	x0, x21
    5b38:	bl	30b0 <PyIter_Next@plt>
    5b3c:	mov	x20, x0
    5b40:	cbz	x0, 5ccc <PyNumber_FloorDivide@plt+0x286c>
    5b44:	ldr	x1, [x0, #8]
    5b48:	cmp	x1, x19
    5b4c:	b.eq	5bf0 <PyNumber_FloorDivide@plt+0x2790>  // b.none
    5b50:	cmp	x1, x23
    5b54:	b.eq	5bac <PyNumber_FloorDivide@plt+0x274c>  // b.none
    5b58:	fmov	d0, d8
    5b5c:	bl	31c0 <PyFloat_FromDouble@plt>
    5b60:	mov	x22, x0
    5b64:	cbz	x0, 5d20 <PyNumber_FloorDivide@plt+0x28c0>
    5b68:	mov	x1, x20
    5b6c:	bl	30d0 <PyNumber_Multiply@plt>
    5b70:	ldr	x1, [x22]
    5b74:	mov	x19, x0
    5b78:	sub	x0, x1, #0x1
    5b7c:	str	x0, [x22]
    5b80:	cbz	x0, 5be4 <PyNumber_FloorDivide@plt+0x2784>
    5b84:	ldr	x0, [x20]
    5b88:	sub	x0, x0, #0x1
    5b8c:	str	x0, [x20]
    5b90:	cbz	x0, 5ba0 <PyNumber_FloorDivide@plt+0x2740>
    5b94:	cbz	x19, 5d58 <PyNumber_FloorDivide@plt+0x28f8>
    5b98:	ldr	d8, [sp, #80]
    5b9c:	b	5920 <PyNumber_FloorDivide@plt+0x24c0>
    5ba0:	mov	x0, x20
    5ba4:	bl	3080 <_Py_Dealloc@plt>
    5ba8:	b	5b94 <PyNumber_FloorDivide@plt+0x2734>
    5bac:	mov	x1, x22
    5bb0:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    5bb4:	ldr	w1, [sp, #108]
    5bb8:	fmov	d0, x0
    5bbc:	cbnz	w1, 5b58 <PyNumber_FloorDivide@plt+0x26f8>
    5bc0:	ldr	x0, [x20]
    5bc4:	scvtf	d0, d0
    5bc8:	sub	x0, x0, #0x1
    5bcc:	str	x0, [x20]
    5bd0:	fmul	d8, d8, d0
    5bd4:	cbnz	x0, 5b34 <PyNumber_FloorDivide@plt+0x26d4>
    5bd8:	mov	x0, x20
    5bdc:	bl	3080 <_Py_Dealloc@plt>
    5be0:	b	5b34 <PyNumber_FloorDivide@plt+0x26d4>
    5be4:	mov	x0, x22
    5be8:	bl	3080 <_Py_Dealloc@plt>
    5bec:	b	5b84 <PyNumber_FloorDivide@plt+0x2724>
    5bf0:	ldr	x1, [x0]
    5bf4:	ldr	d0, [x0, #16]
    5bf8:	sub	x1, x1, #0x1
    5bfc:	str	x1, [x0]
    5c00:	fmul	d8, d8, d0
    5c04:	cbnz	x1, 5b34 <PyNumber_FloorDivide@plt+0x26d4>
    5c08:	bl	3080 <_Py_Dealloc@plt>
    5c0c:	b	5b34 <PyNumber_FloorDivide@plt+0x26d4>
    5c10:	mov	x0, x19
    5c14:	bl	3080 <_Py_Dealloc@plt>
    5c18:	b	5b28 <PyNumber_FloorDivide@plt+0x26c8>
    5c1c:	mov	x0, x21
    5c20:	bl	3080 <_Py_Dealloc@plt>
    5c24:	mov	x0, x19
    5c28:	ldp	x29, x30, [sp, #16]
    5c2c:	ldp	x19, x20, [sp, #32]
    5c30:	ldp	x21, x22, [sp, #48]
    5c34:	ldp	x23, x24, [sp, #64]
    5c38:	add	sp, sp, #0x80
    5c3c:	ret
    5c40:	mov	x0, x20
    5c44:	bl	3080 <_Py_Dealloc@plt>
    5c48:	b	5a8c <PyNumber_FloorDivide@plt+0x262c>
    5c4c:	mov	x1, x24
    5c50:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    5c54:	ldr	w1, [sp, #108]
    5c58:	mul	x2, x22, x0
    5c5c:	cbnz	w1, 5a50 <PyNumber_FloorDivide@plt+0x25f0>
    5c60:	scvtf	d0, x0
    5c64:	scvtf	d1, x22
    5c68:	scvtf	d2, x2
    5c6c:	fmul	d0, d1, d0
    5c70:	fcmp	d0, d2
    5c74:	fneg	d3, d0
    5c78:	b.eq	5ca0 <PyNumber_FloorDivide@plt+0x2840>  // b.none
    5c7c:	fsub	d1, d2, d0
    5c80:	fcmp	d1, #0.0
    5c84:	fneg	d2, d1
    5c88:	fcsel	d1, d2, d1, lt  // lt = tstop
    5c8c:	fcmp	d0, #0.0
    5c90:	fmul	d1, d1, d8
    5c94:	fcsel	d0, d3, d0, lt  // lt = tstop
    5c98:	fcmpe	d1, d0
    5c9c:	b.hi	5a50 <PyNumber_FloorDivide@plt+0x25f0>  // b.pmore
    5ca0:	ldr	x0, [x20]
    5ca4:	mov	x22, x2
    5ca8:	sub	x0, x0, #0x1
    5cac:	str	x0, [x20]
    5cb0:	cbnz	x0, 5a34 <PyNumber_FloorDivide@plt+0x25d4>
    5cb4:	mov	x0, x20
    5cb8:	bl	3080 <_Py_Dealloc@plt>
    5cbc:	b	5a34 <PyNumber_FloorDivide@plt+0x25d4>
    5cc0:	mov	x0, x22
    5cc4:	bl	3080 <_Py_Dealloc@plt>
    5cc8:	b	5a7c <PyNumber_FloorDivide@plt+0x261c>
    5ccc:	ldr	x0, [x21]
    5cd0:	sub	x0, x0, #0x1
    5cd4:	str	x0, [x21]
    5cd8:	cbz	x0, 5d14 <PyNumber_FloorDivide@plt+0x28b4>
    5cdc:	bl	32b0 <PyErr_Occurred@plt>
    5ce0:	cbz	x0, 5cfc <PyNumber_FloorDivide@plt+0x289c>
    5ce4:	ldp	x23, x24, [sp, #64]
    5ce8:	ldr	d8, [sp, #80]
    5cec:	b	5acc <PyNumber_FloorDivide@plt+0x266c>
    5cf0:	mov	x0, x19
    5cf4:	bl	3080 <_Py_Dealloc@plt>
    5cf8:	b	5a28 <PyNumber_FloorDivide@plt+0x25c8>
    5cfc:	fmov	d0, d8
    5d00:	bl	31c0 <PyFloat_FromDouble@plt>
    5d04:	mov	x19, x0
    5d08:	ldp	x23, x24, [sp, #64]
    5d0c:	ldr	d8, [sp, #80]
    5d10:	b	5ad0 <PyNumber_FloorDivide@plt+0x2670>
    5d14:	mov	x0, x21
    5d18:	bl	3080 <_Py_Dealloc@plt>
    5d1c:	b	5cdc <PyNumber_FloorDivide@plt+0x287c>
    5d20:	ldr	x0, [x20]
    5d24:	sub	x0, x0, #0x1
    5d28:	str	x0, [x20]
    5d2c:	cbz	x0, 5ddc <PyNumber_FloorDivide@plt+0x297c>
    5d30:	ldr	x0, [x21]
    5d34:	sub	x0, x0, #0x1
    5d38:	str	x0, [x21]
    5d3c:	cbnz	x0, 5ce4 <PyNumber_FloorDivide@plt+0x2884>
    5d40:	mov	x0, x21
    5d44:	bl	3080 <_Py_Dealloc@plt>
    5d48:	mov	x19, #0x0                   	// #0
    5d4c:	ldr	d8, [sp, #80]
    5d50:	ldp	x23, x24, [sp, #64]
    5d54:	b	5ad0 <PyNumber_FloorDivide@plt+0x2670>
    5d58:	ldr	x0, [x21]
    5d5c:	sub	x0, x0, #0x1
    5d60:	str	x0, [x21]
    5d64:	cbnz	x0, 5ce4 <PyNumber_FloorDivide@plt+0x2884>
    5d68:	mov	x0, x21
    5d6c:	bl	3080 <_Py_Dealloc@plt>
    5d70:	ldp	x23, x24, [sp, #64]
    5d74:	ldr	d8, [sp, #80]
    5d78:	b	5ad0 <PyNumber_FloorDivide@plt+0x2670>
    5d7c:	ldr	x0, [x21]
    5d80:	sub	x0, x0, #0x1
    5d84:	str	x0, [x21]
    5d88:	cbz	x0, 5de8 <PyNumber_FloorDivide@plt+0x2988>
    5d8c:	bl	32b0 <PyErr_Occurred@plt>
    5d90:	cbz	x0, 5e1c <PyNumber_FloorDivide@plt+0x29bc>
    5d94:	mov	x19, #0x0                   	// #0
    5d98:	ldr	d8, [sp, #80]
    5d9c:	ldp	x23, x24, [sp, #64]
    5da0:	b	5ad0 <PyNumber_FloorDivide@plt+0x2670>
    5da4:	ldr	x0, [x20]
    5da8:	sub	x0, x0, #0x1
    5dac:	str	x0, [x20]
    5db0:	cbz	x0, 5e10 <PyNumber_FloorDivide@plt+0x29b0>
    5db4:	ldr	x0, [x21]
    5db8:	sub	x0, x0, #0x1
    5dbc:	str	x0, [x21]
    5dc0:	cbnz	x0, 5d94 <PyNumber_FloorDivide@plt+0x2934>
    5dc4:	b	5d40 <PyNumber_FloorDivide@plt+0x28e0>
    5dc8:	ldr	x0, [x21]
    5dcc:	sub	x0, x0, #0x1
    5dd0:	str	x0, [x21]
    5dd4:	cbnz	x0, 5d94 <PyNumber_FloorDivide@plt+0x2934>
    5dd8:	b	5d68 <PyNumber_FloorDivide@plt+0x2908>
    5ddc:	mov	x0, x20
    5de0:	bl	3080 <_Py_Dealloc@plt>
    5de4:	b	5d30 <PyNumber_FloorDivide@plt+0x28d0>
    5de8:	mov	x0, x21
    5dec:	bl	3080 <_Py_Dealloc@plt>
    5df0:	b	5d8c <PyNumber_FloorDivide@plt+0x292c>
    5df4:	ldr	x0, [x21]
    5df8:	sub	x0, x0, #0x1
    5dfc:	str	x0, [x21]
    5e00:	cbnz	x0, 5acc <PyNumber_FloorDivide@plt+0x266c>
    5e04:	mov	x0, x21
    5e08:	bl	3080 <_Py_Dealloc@plt>
    5e0c:	b	5ad0 <PyNumber_FloorDivide@plt+0x2670>
    5e10:	mov	x0, x20
    5e14:	bl	3080 <_Py_Dealloc@plt>
    5e18:	b	5db4 <PyNumber_FloorDivide@plt+0x2954>
    5e1c:	mov	x0, x22
    5e20:	bl	31e0 <PyLong_FromLong@plt>
    5e24:	mov	x19, x0
    5e28:	ldr	d8, [sp, #80]
    5e2c:	ldp	x23, x24, [sp, #64]
    5e30:	b	5ad0 <PyNumber_FloorDivide@plt+0x2670>
    5e34:	add	x2, sp, #0x70
    5e38:	str	x2, [sp]
    5e3c:	adrp	x4, 1c000 <_Py_log1p@@Base+0x14110>
    5e40:	add	x4, x4, #0x260
    5e44:	mov	w6, #0x1                   	// #1
    5e48:	add	x4, x4, #0x40
    5e4c:	mov	w5, w6
    5e50:	mov	w7, #0x0                   	// #0
    5e54:	mov	x2, #0x0                   	// #0
    5e58:	bl	3120 <_PyArg_UnpackKeywords@plt>
    5e5c:	mov	x1, x0
    5e60:	cbz	x0, 5acc <PyNumber_FloorDivide@plt+0x266c>
    5e64:	ldr	x0, [x1]
    5e68:	b	58d4 <PyNumber_FloorDivide@plt+0x2474>
    5e6c:	nop
    5e70:	stp	x29, x30, [sp, #-32]!
    5e74:	mov	x29, sp
    5e78:	str	d8, [sp, #16]
    5e7c:	fmov	d8, d0
    5e80:	bl	33f0 <__errno_location@plt>
    5e84:	ldr	w0, [x0]
    5e88:	cmp	w0, #0x21
    5e8c:	b.eq	5ef4 <PyNumber_FloorDivide@plt+0x2a94>  // b.none
    5e90:	cmp	w0, #0x22
    5e94:	b.ne	5ed4 <PyNumber_FloorDivide@plt+0x2a74>  // b.any
    5e98:	fabs	d0, d8
    5e9c:	fmov	d1, #1.000000000000000000e+00
    5ea0:	mov	w0, #0x0                   	// #0
    5ea4:	fcmpe	d0, d1
    5ea8:	b.mi	5ee8 <PyNumber_FloorDivide@plt+0x2a88>  // b.first
    5eac:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    5eb0:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    5eb4:	add	x1, x1, #0x110
    5eb8:	ldr	x0, [x0, #3936]
    5ebc:	ldr	x0, [x0]
    5ec0:	bl	3130 <PyErr_SetString@plt>
    5ec4:	mov	w0, #0x1                   	// #1
    5ec8:	ldr	d8, [sp, #16]
    5ecc:	ldp	x29, x30, [sp], #32
    5ed0:	ret
    5ed4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    5ed8:	ldr	x0, [x0, #3872]
    5edc:	ldr	x0, [x0]
    5ee0:	bl	3030 <PyErr_SetFromErrno@plt>
    5ee4:	mov	w0, #0x1                   	// #1
    5ee8:	ldr	d8, [sp, #16]
    5eec:	ldp	x29, x30, [sp], #32
    5ef0:	ret
    5ef4:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    5ef8:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    5efc:	add	x1, x1, #0xf8
    5f00:	ldr	x0, [x0, #3872]
    5f04:	ldr	x0, [x0]
    5f08:	bl	3130 <PyErr_SetString@plt>
    5f0c:	mov	w0, #0x1                   	// #1
    5f10:	ldr	d8, [sp, #16]
    5f14:	ldp	x29, x30, [sp], #32
    5f18:	ret
    5f1c:	nop
    5f20:	stp	x29, x30, [sp, #-80]!
    5f24:	mov	x29, sp
    5f28:	stp	x19, x20, [sp, #16]
    5f2c:	mov	x20, x1
    5f30:	stp	x21, x22, [sp, #32]
    5f34:	mov	x22, x2
    5f38:	mov	w21, w3
    5f3c:	str	d8, [sp, #48]
    5f40:	bl	32e0 <PyFloat_AsDouble@plt>
    5f44:	fmov	d1, #-1.000000000000000000e+00
    5f48:	fmov	d8, d0
    5f4c:	fcmp	d0, d1
    5f50:	b.eq	5fec <PyNumber_FloorDivide@plt+0x2b8c>  // b.none
    5f54:	bl	33f0 <__errno_location@plt>
    5f58:	fmov	d0, d8
    5f5c:	str	wzr, [x0]
    5f60:	mov	x19, x0
    5f64:	blr	x20
    5f68:	fcmp	d0, d0
    5f6c:	fccmp	d8, d8, #0x1, vs
    5f70:	b.vc	602c <PyNumber_FloorDivide@plt+0x2bcc>
    5f74:	fabs	d2, d0
    5f78:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5f7c:	fmov	d1, x0
    5f80:	fcmp	d2, d1
    5f84:	b.le	5f94 <PyNumber_FloorDivide@plt+0x2b34>
    5f88:	fabs	d8, d8
    5f8c:	fcmp	d8, d1
    5f90:	b.ls	600c <PyNumber_FloorDivide@plt+0x2bac>  // b.plast
    5f94:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    5f98:	fmov	d1, x0
    5f9c:	fcmp	d2, d1
    5fa0:	b.ls	5fbc <PyNumber_FloorDivide@plt+0x2b5c>  // b.plast
    5fa4:	mov	x16, x22
    5fa8:	ldr	d8, [sp, #48]
    5fac:	ldp	x19, x20, [sp, #16]
    5fb0:	ldp	x21, x22, [sp, #32]
    5fb4:	ldp	x29, x30, [sp], #80
    5fb8:	br	x16
    5fbc:	ldr	w0, [x19]
    5fc0:	cbz	w0, 5fa4 <PyNumber_FloorDivide@plt+0x2b44>
    5fc4:	str	d0, [sp, #72]
    5fc8:	bl	5e70 <PyNumber_FloorDivide@plt+0x2a10>
    5fcc:	ldr	d0, [sp, #72]
    5fd0:	cbz	w0, 5fa4 <PyNumber_FloorDivide@plt+0x2b44>
    5fd4:	mov	x0, #0x0                   	// #0
    5fd8:	ldr	d8, [sp, #48]
    5fdc:	ldp	x19, x20, [sp, #16]
    5fe0:	ldp	x21, x22, [sp, #32]
    5fe4:	ldp	x29, x30, [sp], #80
    5fe8:	ret
    5fec:	bl	32b0 <PyErr_Occurred@plt>
    5ff0:	cbz	x0, 5f54 <PyNumber_FloorDivide@plt+0x2af4>
    5ff4:	mov	x0, #0x0                   	// #0
    5ff8:	ldr	d8, [sp, #48]
    5ffc:	ldp	x19, x20, [sp, #16]
    6000:	ldp	x21, x22, [sp, #32]
    6004:	ldp	x29, x30, [sp], #80
    6008:	ret
    600c:	cbz	w21, 602c <PyNumber_FloorDivide@plt+0x2bcc>
    6010:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    6014:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6018:	add	x1, x1, #0x110
    601c:	ldr	x0, [x0, #3936]
    6020:	ldr	x0, [x0]
    6024:	bl	3130 <PyErr_SetString@plt>
    6028:	b	5fd4 <PyNumber_FloorDivide@plt+0x2b74>
    602c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    6030:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6034:	add	x1, x1, #0xf8
    6038:	ldr	x0, [x0, #3872]
    603c:	ldr	x0, [x0]
    6040:	bl	3130 <PyErr_SetString@plt>
    6044:	mov	x0, #0x0                   	// #0
    6048:	ldr	d8, [sp, #48]
    604c:	ldp	x19, x20, [sp, #16]
    6050:	ldp	x21, x22, [sp, #32]
    6054:	ldp	x29, x30, [sp], #80
    6058:	ret
    605c:	nop
    6060:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6064:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6068:	mov	x0, x1
    606c:	mov	w3, #0x0                   	// #0
    6070:	ldr	x2, [x2, #3904]
    6074:	ldr	x1, [x4, #3920]
    6078:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    607c:	nop
    6080:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6084:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6088:	mov	x0, x1
    608c:	mov	w3, #0x0                   	// #0
    6090:	ldr	x2, [x2, #3904]
    6094:	ldr	x1, [x4, #4032]
    6098:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    609c:	nop
    60a0:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    60a4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    60a8:	mov	x0, x1
    60ac:	mov	w3, #0x0                   	// #0
    60b0:	ldr	x2, [x2, #3904]
    60b4:	ldr	x1, [x4, #3856]
    60b8:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    60bc:	nop
    60c0:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    60c4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    60c8:	mov	x0, x1
    60cc:	mov	w3, #0x1                   	// #1
    60d0:	ldr	x2, [x2, #3904]
    60d4:	ldr	x1, [x4, #3968]
    60d8:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    60dc:	nop
    60e0:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    60e4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    60e8:	mov	x0, x1
    60ec:	mov	w3, #0x0                   	// #0
    60f0:	ldr	x2, [x2, #3904]
    60f4:	ldr	x1, [x4, #3912]
    60f8:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    60fc:	nop
    6100:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6104:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6108:	mov	x0, x1
    610c:	mov	w3, #0x0                   	// #0
    6110:	ldr	x2, [x2, #3904]
    6114:	ldr	x1, [x4, #4016]
    6118:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    611c:	nop
    6120:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6124:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6128:	mov	x0, x1
    612c:	mov	w3, #0x0                   	// #0
    6130:	ldr	x2, [x2, #3904]
    6134:	ldr	x1, [x4, #3880]
    6138:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    613c:	nop
    6140:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6144:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6148:	mov	x0, x1
    614c:	mov	w3, #0x1                   	// #1
    6150:	ldr	x2, [x2, #3904]
    6154:	ldr	x1, [x4, #3840]
    6158:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    615c:	nop
    6160:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6164:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6168:	mov	x0, x1
    616c:	mov	w3, #0x1                   	// #1
    6170:	ldr	x2, [x2, #3904]
    6174:	ldr	x1, [x4, #4064]
    6178:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    617c:	nop
    6180:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6184:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6188:	mov	x0, x1
    618c:	mov	w3, #0x1                   	// #1
    6190:	ldr	x2, [x2, #3904]
    6194:	ldr	x1, [x4, #3976]
    6198:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    619c:	nop
    61a0:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    61a4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    61a8:	mov	x0, x1
    61ac:	mov	w3, #0x0                   	// #0
    61b0:	ldr	x2, [x2, #3904]
    61b4:	ldr	x1, [x4, #4048]
    61b8:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    61bc:	nop
    61c0:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    61c4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    61c8:	mov	x0, x1
    61cc:	mov	w3, #0x0                   	// #0
    61d0:	ldr	x2, [x2, #3904]
    61d4:	ldr	x1, [x4, #4024]
    61d8:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    61dc:	nop
    61e0:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    61e4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    61e8:	mov	x0, x1
    61ec:	mov	w3, #0x0                   	// #0
    61f0:	ldr	x2, [x2, #3904]
    61f4:	ldr	x1, [x4, #4056]
    61f8:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    61fc:	nop
    6200:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6204:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6208:	mov	x0, x1
    620c:	mov	w3, #0x0                   	// #0
    6210:	ldr	x2, [x2, #3904]
    6214:	ldr	x1, [x4, #3944]
    6218:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    621c:	nop
    6220:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6224:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6228:	mov	x0, x1
    622c:	mov	w3, #0x0                   	// #0
    6230:	ldr	x2, [x2, #3904]
    6234:	ldr	x1, [x4, #3816]
    6238:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    623c:	nop
    6240:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6244:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6248:	mov	x0, x1
    624c:	mov	w3, #0x0                   	// #0
    6250:	ldr	x2, [x2, #3904]
    6254:	ldr	x1, [x4, #3896]
    6258:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    625c:	nop
    6260:	adrp	x4, 1b000 <_Py_log1p@@Base+0x13110>
    6264:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6268:	mov	x0, x1
    626c:	mov	w3, #0x0                   	// #0
    6270:	ldr	x2, [x2, #3904]
    6274:	ldr	x1, [x4, #3952]
    6278:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    627c:	nop
    6280:	stp	x29, x30, [sp, #-64]!
    6284:	cmp	x1, #0x2
    6288:	mov	x29, sp
    628c:	stp	x19, x20, [sp, #16]
    6290:	mov	x19, x0
    6294:	mov	x20, x2
    6298:	b.eq	62b0 <PyNumber_FloorDivide@plt+0x2e50>  // b.none
    629c:	mov	x0, x3
    62a0:	mov	x3, #0x2                   	// #2
    62a4:	mov	x2, x3
    62a8:	bl	3280 <_PyArg_CheckPositional@plt>
    62ac:	cbz	w0, 6394 <PyNumber_FloorDivide@plt+0x2f34>
    62b0:	ldr	x0, [x19]
    62b4:	stp	d8, d9, [sp, #32]
    62b8:	str	d10, [sp, #48]
    62bc:	bl	32e0 <PyFloat_AsDouble@plt>
    62c0:	fmov	d9, d0
    62c4:	ldr	x0, [x19, #8]
    62c8:	bl	32e0 <PyFloat_AsDouble@plt>
    62cc:	fmov	d10, d0
    62d0:	fmov	d1, #-1.000000000000000000e+00
    62d4:	fcmp	d9, d1
    62d8:	fccmp	d0, d1, #0x4, ne  // ne = any
    62dc:	b.eq	6384 <PyNumber_FloorDivide@plt+0x2f24>  // b.none
    62e0:	bl	33f0 <__errno_location@plt>
    62e4:	fmov	d1, d10
    62e8:	fmov	d0, d9
    62ec:	str	wzr, [x0]
    62f0:	mov	x19, x0
    62f4:	blr	x20
    62f8:	fcmp	d0, d0
    62fc:	fmov	d8, d0
    6300:	b.vs	63a4 <PyNumber_FloorDivide@plt+0x2f44>
    6304:	fabs	d1, d0
    6308:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    630c:	fmov	d0, x0
    6310:	fcmp	d1, d0
    6314:	b.gt	6344 <PyNumber_FloorDivide@plt+0x2ee4>
    6318:	ldr	w0, [x19]
    631c:	cbz	w0, 632c <PyNumber_FloorDivide@plt+0x2ecc>
    6320:	fmov	d0, d8
    6324:	bl	5e70 <PyNumber_FloorDivide@plt+0x2a10>
    6328:	cbnz	w0, 638c <PyNumber_FloorDivide@plt+0x2f2c>
    632c:	fmov	d0, d8
    6330:	ldr	d10, [sp, #48]
    6334:	ldp	x19, x20, [sp, #16]
    6338:	ldp	d8, d9, [sp, #32]
    633c:	ldp	x29, x30, [sp], #64
    6340:	b	31c0 <PyFloat_FromDouble@plt>
    6344:	fabs	d9, d9
    6348:	fcmp	d9, d0
    634c:	b.hi	6368 <PyNumber_FloorDivide@plt+0x2f08>  // b.pmore
    6350:	fabs	d10, d10
    6354:	fcmp	d10, d0
    6358:	b.hi	6368 <PyNumber_FloorDivide@plt+0x2f08>  // b.pmore
    635c:	mov	w0, #0x22                  	// #34
    6360:	str	w0, [x19]
    6364:	b	6320 <PyNumber_FloorDivide@plt+0x2ec0>
    6368:	str	wzr, [x19]
    636c:	fmov	d0, d8
    6370:	ldp	x19, x20, [sp, #16]
    6374:	ldp	d8, d9, [sp, #32]
    6378:	ldr	d10, [sp, #48]
    637c:	ldp	x29, x30, [sp], #64
    6380:	b	31c0 <PyFloat_FromDouble@plt>
    6384:	bl	32b0 <PyErr_Occurred@plt>
    6388:	cbz	x0, 62e0 <PyNumber_FloorDivide@plt+0x2e80>
    638c:	ldp	d8, d9, [sp, #32]
    6390:	ldr	d10, [sp, #48]
    6394:	mov	x0, #0x0                   	// #0
    6398:	ldp	x19, x20, [sp, #16]
    639c:	ldp	x29, x30, [sp], #64
    63a0:	ret
    63a4:	fcmp	d9, d10
    63a8:	b.vs	6368 <PyNumber_FloorDivide@plt+0x2f08>
    63ac:	mov	w0, #0x21                  	// #33
    63b0:	str	w0, [x19]
    63b4:	b	6320 <PyNumber_FloorDivide@plt+0x2ec0>
    63b8:	mov	x0, x1
    63bc:	adrp	x3, 8000 <_Py_log1p@@Base+0x110>
    63c0:	mov	x1, x2
    63c4:	add	x3, x3, #0x128
    63c8:	adrp	x2, 3000 <PyLong_FromDouble@plt>
    63cc:	add	x2, x2, #0x750
    63d0:	b	6280 <PyNumber_FloorDivide@plt+0x2e20>
    63d4:	nop
    63d8:	adrp	x5, 1b000 <_Py_log1p@@Base+0x13110>
    63dc:	mov	x4, x2
    63e0:	mov	x0, x1
    63e4:	adrp	x3, 8000 <_Py_log1p@@Base+0x110>
    63e8:	ldr	x2, [x5, #3800]
    63ec:	mov	x1, x4
    63f0:	add	x3, x3, #0x138
    63f4:	b	6280 <PyNumber_FloorDivide@plt+0x2e20>
    63f8:	mov	x0, x1
    63fc:	adrp	x3, 8000 <_Py_log1p@@Base+0x110>
    6400:	mov	x1, x2
    6404:	add	x3, x3, #0x148
    6408:	adrp	x2, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    640c:	add	x2, x2, #0x2e0
    6410:	b	6280 <PyNumber_FloorDivide@plt+0x2e20>
    6414:	nop
    6418:	stp	x29, x30, [sp, #-48]!
    641c:	mov	x29, sp
    6420:	stp	x19, x20, [sp, #16]
    6424:	mov	x20, x1
    6428:	str	d8, [sp, #32]
    642c:	bl	32e0 <PyFloat_AsDouble@plt>
    6430:	fmov	d1, #-1.000000000000000000e+00
    6434:	fmov	d8, d0
    6438:	fcmp	d0, d1
    643c:	b.eq	647c <PyNumber_FloorDivide@plt+0x301c>  // b.none
    6440:	bl	33f0 <__errno_location@plt>
    6444:	fmov	d0, d8
    6448:	mov	x19, x0
    644c:	str	wzr, [x0]
    6450:	blr	x20
    6454:	fmov	d8, d0
    6458:	ldr	w0, [x19]
    645c:	cbz	w0, 6468 <PyNumber_FloorDivide@plt+0x3008>
    6460:	bl	5e70 <PyNumber_FloorDivide@plt+0x2a10>
    6464:	cbnz	w0, 6484 <PyNumber_FloorDivide@plt+0x3024>
    6468:	fmov	d0, d8
    646c:	ldr	d8, [sp, #32]
    6470:	ldp	x19, x20, [sp, #16]
    6474:	ldp	x29, x30, [sp], #48
    6478:	b	31c0 <PyFloat_FromDouble@plt>
    647c:	bl	32b0 <PyErr_Occurred@plt>
    6480:	cbz	x0, 6440 <PyNumber_FloorDivide@plt+0x2fe0>
    6484:	mov	x0, #0x0                   	// #0
    6488:	ldr	d8, [sp, #32]
    648c:	ldp	x19, x20, [sp, #16]
    6490:	ldp	x29, x30, [sp], #48
    6494:	ret
    6498:	mov	x0, x1
    649c:	adrp	x1, 3000 <PyLong_FromDouble@plt>
    64a0:	add	x1, x1, #0x990
    64a4:	b	6418 <PyNumber_FloorDivide@plt+0x2fb8>
    64a8:	mov	x0, x1
    64ac:	adrp	x1, 4000 <PyNumber_FloorDivide@plt+0xba0>
    64b0:	add	x1, x1, #0x48
    64b4:	b	6418 <PyNumber_FloorDivide@plt+0x2fb8>
    64b8:	mov	x0, x1
    64bc:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    64c0:	add	x1, x1, #0x88
    64c4:	b	6418 <PyNumber_FloorDivide@plt+0x2fb8>
    64c8:	mov	x0, x1
    64cc:	adrp	x1, 5000 <PyNumber_FloorDivide@plt+0x1ba0>
    64d0:	add	x1, x1, #0x90
    64d4:	b	6418 <PyNumber_FloorDivide@plt+0x2fb8>
    64d8:	stp	x29, x30, [sp, #-64]!
    64dc:	cmp	x2, #0x2
    64e0:	mov	x29, sp
    64e4:	stp	x19, x20, [sp, #16]
    64e8:	mov	x19, x1
    64ec:	b.ne	65d0 <PyNumber_FloorDivide@plt+0x3170>  // b.any
    64f0:	ldr	x0, [x19]
    64f4:	adrp	x20, 1b000 <_Py_log1p@@Base+0x13110>
    64f8:	stp	d9, d10, [sp, #32]
    64fc:	ldr	x1, [x20, #3824]
    6500:	ldr	x2, [x0, #8]
    6504:	cmp	x2, x1
    6508:	b.eq	65b0 <PyNumber_FloorDivide@plt+0x3150>  // b.none
    650c:	bl	32e0 <PyFloat_AsDouble@plt>
    6510:	fmov	d9, d0
    6514:	fmov	d1, #-1.000000000000000000e+00
    6518:	fcmp	d0, d1
    651c:	b.eq	6618 <PyNumber_FloorDivide@plt+0x31b8>  // b.none
    6520:	ldr	x0, [x19, #8]
    6524:	ldr	x20, [x20, #3824]
    6528:	ldr	x1, [x0, #8]
    652c:	cmp	x1, x20
    6530:	b.eq	65c8 <PyNumber_FloorDivide@plt+0x3168>  // b.none
    6534:	bl	32e0 <PyFloat_AsDouble@plt>
    6538:	fmov	d10, d0
    653c:	fmov	d1, #-1.000000000000000000e+00
    6540:	fcmp	d0, d1
    6544:	b.eq	65fc <PyNumber_FloorDivide@plt+0x319c>  // b.none
    6548:	fabs	d1, d10
    654c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6550:	fmov	d0, x0
    6554:	fcmp	d1, d0
    6558:	b.le	6568 <PyNumber_FloorDivide@plt+0x3108>
    655c:	fabs	d1, d9
    6560:	fcmp	d1, d0
    6564:	b.ls	6628 <PyNumber_FloorDivide@plt+0x31c8>  // b.plast
    6568:	bl	33f0 <__errno_location@plt>
    656c:	fmov	d1, d10
    6570:	fmov	d0, d9
    6574:	str	wzr, [x0]
    6578:	mov	x19, x0
    657c:	bl	33a0 <fmod@plt>
    6580:	fcmp	d0, d0
    6584:	b.vs	663c <PyNumber_FloorDivide@plt+0x31dc>
    6588:	ldr	w0, [x19]
    658c:	cbz	w0, 65a0 <PyNumber_FloorDivide@plt+0x3140>
    6590:	str	d0, [sp, #56]
    6594:	bl	5e70 <PyNumber_FloorDivide@plt+0x2a10>
    6598:	ldr	d0, [sp, #56]
    659c:	cbnz	w0, 6604 <PyNumber_FloorDivide@plt+0x31a4>
    65a0:	ldp	x19, x20, [sp, #16]
    65a4:	ldp	d9, d10, [sp, #32]
    65a8:	ldp	x29, x30, [sp], #64
    65ac:	b	31c0 <PyFloat_FromDouble@plt>
    65b0:	ldr	d9, [x0, #16]
    65b4:	ldr	x0, [x19, #8]
    65b8:	ldr	x20, [x20, #3824]
    65bc:	ldr	x1, [x0, #8]
    65c0:	cmp	x1, x20
    65c4:	b.ne	6534 <PyNumber_FloorDivide@plt+0x30d4>  // b.any
    65c8:	ldr	d10, [x0, #16]
    65cc:	b	6548 <PyNumber_FloorDivide@plt+0x30e8>
    65d0:	mov	x1, x2
    65d4:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    65d8:	mov	x3, #0x2                   	// #2
    65dc:	add	x0, x0, #0x150
    65e0:	mov	x2, x3
    65e4:	bl	3280 <_PyArg_CheckPositional@plt>
    65e8:	cbnz	w0, 64f0 <PyNumber_FloorDivide@plt+0x3090>
    65ec:	mov	x0, #0x0                   	// #0
    65f0:	ldp	x19, x20, [sp, #16]
    65f4:	ldp	x29, x30, [sp], #64
    65f8:	ret
    65fc:	bl	32b0 <PyErr_Occurred@plt>
    6600:	cbz	x0, 6568 <PyNumber_FloorDivide@plt+0x3108>
    6604:	ldp	d9, d10, [sp, #32]
    6608:	mov	x0, #0x0                   	// #0
    660c:	ldp	x19, x20, [sp, #16]
    6610:	ldp	x29, x30, [sp], #64
    6614:	ret
    6618:	bl	32b0 <PyErr_Occurred@plt>
    661c:	cbz	x0, 6520 <PyNumber_FloorDivide@plt+0x30c0>
    6620:	ldp	d9, d10, [sp, #32]
    6624:	b	6608 <PyNumber_FloorDivide@plt+0x31a8>
    6628:	fmov	d0, d9
    662c:	ldp	x19, x20, [sp, #16]
    6630:	ldp	d9, d10, [sp, #32]
    6634:	ldp	x29, x30, [sp], #64
    6638:	b	31c0 <PyFloat_FromDouble@plt>
    663c:	fcmp	d9, d10
    6640:	b.vs	6650 <PyNumber_FloorDivide@plt+0x31f0>
    6644:	mov	w0, #0x21                  	// #33
    6648:	str	w0, [x19]
    664c:	b	6590 <PyNumber_FloorDivide@plt+0x3130>
    6650:	str	wzr, [x19]
    6654:	b	65a0 <PyNumber_FloorDivide@plt+0x3140>
    6658:	stp	x29, x30, [sp, #-64]!
    665c:	cmp	x2, #0x2
    6660:	mov	x29, sp
    6664:	stp	x19, x20, [sp, #16]
    6668:	mov	x19, x1
    666c:	b.ne	6778 <PyNumber_FloorDivide@plt+0x3318>  // b.any
    6670:	ldr	x0, [x19]
    6674:	adrp	x20, 1b000 <_Py_log1p@@Base+0x13110>
    6678:	ldr	x1, [x20, #3824]
    667c:	ldr	x2, [x0, #8]
    6680:	str	d10, [sp, #48]
    6684:	cmp	x2, x1
    6688:	b.eq	66c0 <PyNumber_FloorDivide@plt+0x3260>  // b.none
    668c:	bl	32e0 <PyFloat_AsDouble@plt>
    6690:	fmov	d10, d0
    6694:	fmov	d1, #-1.000000000000000000e+00
    6698:	fcmp	d0, d1
    669c:	b.eq	67d0 <PyNumber_FloorDivide@plt+0x3370>  // b.none
    66a0:	ldr	x0, [x19, #8]
    66a4:	stp	d8, d9, [sp, #32]
    66a8:	ldr	x20, [x20, #3824]
    66ac:	ldr	x1, [x0, #8]
    66b0:	cmp	x1, x20
    66b4:	b.ne	66dc <PyNumber_FloorDivide@plt+0x327c>  // b.any
    66b8:	ldr	d8, [x0, #16]
    66bc:	b	66f0 <PyNumber_FloorDivide@plt+0x3290>
    66c0:	ldr	d10, [x0, #16]
    66c4:	ldr	x0, [x19, #8]
    66c8:	stp	d8, d9, [sp, #32]
    66cc:	ldr	x20, [x20, #3824]
    66d0:	ldr	x1, [x0, #8]
    66d4:	cmp	x1, x20
    66d8:	b.eq	66b8 <PyNumber_FloorDivide@plt+0x3258>  // b.none
    66dc:	bl	32e0 <PyFloat_AsDouble@plt>
    66e0:	fmov	d8, d0
    66e4:	fmov	d1, #-1.000000000000000000e+00
    66e8:	fcmp	d0, d1
    66ec:	b.eq	6868 <PyNumber_FloorDivide@plt+0x3408>  // b.none
    66f0:	fabs	d9, d10
    66f4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    66f8:	fmov	d0, x0
    66fc:	fcmp	d9, d0
    6700:	b.hi	6710 <PyNumber_FloorDivide@plt+0x32b0>  // b.pmore
    6704:	fabs	d1, d8
    6708:	fcmp	d1, d0
    670c:	b.ls	68a0 <PyNumber_FloorDivide@plt+0x3440>  // b.plast
    6710:	bl	33f0 <__errno_location@plt>
    6714:	fcmp	d10, d10
    6718:	str	wzr, [x0]
    671c:	mov	x19, x0
    6720:	b.vs	68e8 <PyNumber_FloorDivide@plt+0x3488>
    6724:	fcmp	d8, d8
    6728:	b.vs	68f8 <PyNumber_FloorDivide@plt+0x3498>
    672c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6730:	fmov	d1, x0
    6734:	fabs	d0, d8
    6738:	fcmp	d9, d1
    673c:	b.le	67a4 <PyNumber_FloorDivide@plt+0x3344>
    6740:	fcmp	d0, d1
    6744:	b.ls	67fc <PyNumber_FloorDivide@plt+0x339c>  // b.plast
    6748:	fcmpe	d8, #0.0
    674c:	b.gt	6760 <PyNumber_FloorDivide@plt+0x3300>
    6750:	fcmp	d8, #0.0
    6754:	movi	d0, #0x0
    6758:	fmov	d9, #1.000000000000000000e+00
    675c:	fcsel	d9, d9, d0, eq  // eq = none
    6760:	fmov	d0, d9
    6764:	ldr	d10, [sp, #48]
    6768:	ldp	x19, x20, [sp, #16]
    676c:	ldp	d8, d9, [sp, #32]
    6770:	ldp	x29, x30, [sp], #64
    6774:	b	31c0 <PyFloat_FromDouble@plt>
    6778:	mov	x1, x2
    677c:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    6780:	mov	x3, #0x2                   	// #2
    6784:	add	x0, x0, #0x158
    6788:	mov	x2, x3
    678c:	bl	3280 <_PyArg_CheckPositional@plt>
    6790:	cbnz	w0, 6670 <PyNumber_FloorDivide@plt+0x3210>
    6794:	mov	x0, #0x0                   	// #0
    6798:	ldp	x19, x20, [sp, #16]
    679c:	ldp	x29, x30, [sp], #64
    67a0:	ret
    67a4:	fcmp	d0, d1
    67a8:	b.le	67e0 <PyNumber_FloorDivide@plt+0x3380>
    67ac:	fmov	d0, #1.000000000000000000e+00
    67b0:	fcmp	d9, d0
    67b4:	b.eq	6760 <PyNumber_FloorDivide@plt+0x3300>  // b.none
    67b8:	fcmpe	d8, #0.0
    67bc:	b.le	693c <PyNumber_FloorDivide@plt+0x34dc>
    67c0:	fcmpe	d9, d0
    67c4:	b.le	693c <PyNumber_FloorDivide@plt+0x34dc>
    67c8:	fmov	d9, d8
    67cc:	b	6760 <PyNumber_FloorDivide@plt+0x3300>
    67d0:	bl	32b0 <PyErr_Occurred@plt>
    67d4:	cbz	x0, 66a0 <PyNumber_FloorDivide@plt+0x3240>
    67d8:	ldr	d10, [sp, #48]
    67dc:	b	6794 <PyNumber_FloorDivide@plt+0x3334>
    67e0:	movi	d9, #0x0
    67e4:	ldr	d10, [sp, #48]
    67e8:	ldp	x19, x20, [sp, #16]
    67ec:	fmov	d0, d9
    67f0:	ldp	d8, d9, [sp, #32]
    67f4:	ldp	x29, x30, [sp], #64
    67f8:	b	31c0 <PyFloat_FromDouble@plt>
    67fc:	fmov	d1, #2.000000000000000000e+00
    6800:	bl	33a0 <fmod@plt>
    6804:	fmov	d1, #1.000000000000000000e+00
    6808:	fcmp	d0, d1
    680c:	b.ne	6908 <PyNumber_FloorDivide@plt+0x34a8>  // b.any
    6810:	fcmpe	d8, #0.0
    6814:	fmov	d9, d10
    6818:	ldr	w0, [x19]
    681c:	b.gt	6840 <PyNumber_FloorDivide@plt+0x33e0>
    6820:	fcmp	d8, #0.0
    6824:	fmov	d9, d0
    6828:	b.eq	6840 <PyNumber_FloorDivide@plt+0x33e0>  // b.none
    682c:	movi	d9, #0x0
    6830:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    6834:	fmov	d0, x1
    6838:	bit	v9.8b, v10.8b, v0.8b
    683c:	nop
    6840:	cbz	w0, 6760 <PyNumber_FloorDivide@plt+0x3300>
    6844:	fmov	d0, d9
    6848:	bl	5e70 <PyNumber_FloorDivide@plt+0x2a10>
    684c:	cbz	w0, 6760 <PyNumber_FloorDivide@plt+0x3300>
    6850:	mov	x0, #0x0                   	// #0
    6854:	ldr	d10, [sp, #48]
    6858:	ldp	x19, x20, [sp, #16]
    685c:	ldp	d8, d9, [sp, #32]
    6860:	ldp	x29, x30, [sp], #64
    6864:	ret
    6868:	bl	32b0 <PyErr_Occurred@plt>
    686c:	cbnz	x0, 6850 <PyNumber_FloorDivide@plt+0x33f0>
    6870:	fabs	d9, d10
    6874:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6878:	fmov	d0, x0
    687c:	fcmp	d9, d0
    6880:	b.ls	68a0 <PyNumber_FloorDivide@plt+0x3440>  // b.plast
    6884:	bl	33f0 <__errno_location@plt>
    6888:	fcmp	d10, d10
    688c:	str	wzr, [x0]
    6890:	mov	x19, x0
    6894:	b.vc	6724 <PyNumber_FloorDivide@plt+0x32c4>
    6898:	fmov	d9, d10
    689c:	b	6760 <PyNumber_FloorDivide@plt+0x3300>
    68a0:	bl	33f0 <__errno_location@plt>
    68a4:	fmov	d1, d8
    68a8:	fmov	d0, d10
    68ac:	str	wzr, [x0]
    68b0:	mov	x19, x0
    68b4:	bl	3090 <pow@plt>
    68b8:	fmov	d9, d0
    68bc:	fabs	d0, d0
    68c0:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    68c4:	fmov	d1, x0
    68c8:	fcmp	d0, d1
    68cc:	b.ls	68e0 <PyNumber_FloorDivide@plt+0x3480>  // b.plast
    68d0:	fcmp	d9, d9
    68d4:	b.vs	695c <PyNumber_FloorDivide@plt+0x34fc>
    68d8:	fcmp	d0, d1
    68dc:	b.gt	6924 <PyNumber_FloorDivide@plt+0x34c4>
    68e0:	ldr	w0, [x19]
    68e4:	b	6840 <PyNumber_FloorDivide@plt+0x33e0>
    68e8:	fcmp	d8, #0.0
    68ec:	fmov	d9, #1.000000000000000000e+00
    68f0:	b.eq	6760 <PyNumber_FloorDivide@plt+0x3300>  // b.none
    68f4:	b	6898 <PyNumber_FloorDivide@plt+0x3438>
    68f8:	fmov	d0, #1.000000000000000000e+00
    68fc:	fcmp	d10, d0
    6900:	fcsel	d9, d8, d10, ne  // ne = any
    6904:	b	6760 <PyNumber_FloorDivide@plt+0x3300>
    6908:	fcmpe	d8, #0.0
    690c:	ldr	w0, [x19]
    6910:	b.gt	6840 <PyNumber_FloorDivide@plt+0x33e0>
    6914:	fcmp	d8, #0.0
    6918:	movi	d9, #0x0
    691c:	fcsel	d9, d1, d9, eq  // eq = none
    6920:	b	6840 <PyNumber_FloorDivide@plt+0x33e0>
    6924:	fcmp	d10, #0.0
    6928:	mov	w1, #0x22                  	// #34
    692c:	mov	w0, #0x21                  	// #33
    6930:	csel	w0, w0, w1, eq  // eq = none
    6934:	str	w0, [x19]
    6938:	b	6844 <PyNumber_FloorDivide@plt+0x33e4>
    693c:	fcmpe	d8, #0.0
    6940:	b.pl	67e0 <PyNumber_FloorDivide@plt+0x3380>  // b.nfrst
    6944:	fmov	d0, #1.000000000000000000e+00
    6948:	fcmpe	d9, d0
    694c:	b.pl	67e0 <PyNumber_FloorDivide@plt+0x3380>  // b.nfrst
    6950:	fcmp	d10, #0.0
    6954:	fneg	d9, d8
    6958:	b.ne	6760 <PyNumber_FloorDivide@plt+0x3300>  // b.any
    695c:	mov	w0, #0x21                  	// #33
    6960:	str	w0, [x19]
    6964:	b	6844 <PyNumber_FloorDivide@plt+0x33e4>
    6968:	stp	x29, x30, [sp, #-48]!
    696c:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6970:	mov	x0, x1
    6974:	mov	x29, sp
    6978:	ldr	x2, [x2, #3824]
    697c:	ldr	x1, [x1, #8]
    6980:	str	d8, [sp, #16]
    6984:	cmp	x1, x2
    6988:	b.eq	69fc <PyNumber_FloorDivide@plt+0x359c>  // b.none
    698c:	bl	32e0 <PyFloat_AsDouble@plt>
    6990:	fmov	d8, d0
    6994:	fmov	d1, #-1.000000000000000000e+00
    6998:	fcmp	d0, d1
    699c:	b.eq	6a04 <PyNumber_FloorDivide@plt+0x35a4>  // b.none
    69a0:	fabs	d1, d8
    69a4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    69a8:	fmov	d0, x0
    69ac:	fcmp	d1, d0
    69b0:	b.ls	69cc <PyNumber_FloorDivide@plt+0x356c>  // b.plast
    69b4:	b.gt	6a1c <PyNumber_FloorDivide@plt+0x35bc>
    69b8:	fcmp	d8, d8
    69bc:	fmov	d1, d8
    69c0:	fmov	d0, d8
    69c4:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    69c8:	b.vs	69ec <PyNumber_FloorDivide@plt+0x358c>
    69cc:	bl	33f0 <__errno_location@plt>
    69d0:	mov	x1, x0
    69d4:	fmov	d0, d8
    69d8:	add	x0, sp, #0x28
    69dc:	str	wzr, [x1]
    69e0:	bl	3320 <modf@plt>
    69e4:	ldr	d1, [sp, #40]
    69e8:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    69ec:	ldr	d8, [sp, #16]
    69f0:	ldp	x29, x30, [sp], #48
    69f4:	add	x0, x0, #0x160
    69f8:	b	32a0 <Py_BuildValue@plt>
    69fc:	ldr	d8, [x0, #16]
    6a00:	b	69a0 <PyNumber_FloorDivide@plt+0x3540>
    6a04:	bl	32b0 <PyErr_Occurred@plt>
    6a08:	cbz	x0, 69cc <PyNumber_FloorDivide@plt+0x356c>
    6a0c:	mov	x0, #0x0                   	// #0
    6a10:	ldr	d8, [sp, #16]
    6a14:	ldp	x29, x30, [sp], #48
    6a18:	ret
    6a1c:	movi	d0, #0x0
    6a20:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6a24:	fmov	d2, x0
    6a28:	fmov	d1, d8
    6a2c:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    6a30:	add	x0, x0, #0x160
    6a34:	bit	v0.8b, v8.8b, v2.8b
    6a38:	ldr	d8, [sp, #16]
    6a3c:	ldp	x29, x30, [sp], #48
    6a40:	b	32a0 <Py_BuildValue@plt>
    6a44:	nop
    6a48:	fabs	d2, d0
    6a4c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6a50:	fmov	d1, x0
    6a54:	stp	x29, x30, [sp, #-32]!
    6a58:	mov	x29, sp
    6a5c:	fcmp	d2, d1
    6a60:	str	d8, [sp, #16]
    6a64:	fmov	d8, d0
    6a68:	b.ls	6a88 <PyNumber_FloorDivide@plt+0x3628>  // b.plast
    6a6c:	fcmp	d0, d0
    6a70:	b.vs	6a7c <PyNumber_FloorDivide@plt+0x361c>
    6a74:	fcmpe	d0, #0.0
    6a78:	b.le	6ab8 <PyNumber_FloorDivide@plt+0x3658>
    6a7c:	ldr	d8, [sp, #16]
    6a80:	ldp	x29, x30, [sp], #32
    6a84:	ret
    6a88:	fcmpe	d0, #0.0
    6a8c:	b.gt	6af0 <PyNumber_FloorDivide@plt+0x3690>
    6a90:	bl	33f0 <__errno_location@plt>
    6a94:	fcmp	d8, #0.0
    6a98:	mov	w2, #0x21                  	// #33
    6a9c:	b.ne	6ad8 <PyNumber_FloorDivide@plt+0x3678>  // b.any
    6aa0:	str	w2, [x0]
    6aa4:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
    6aa8:	fmov	d0, x1
    6aac:	ldr	d8, [sp, #16]
    6ab0:	ldp	x29, x30, [sp], #32
    6ab4:	ret
    6ab8:	bl	33f0 <__errno_location@plt>
    6abc:	mov	w2, #0x21                  	// #33
    6ac0:	str	w2, [x0]
    6ac4:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    6ac8:	fmov	d0, x1
    6acc:	ldr	d8, [sp, #16]
    6ad0:	ldp	x29, x30, [sp], #32
    6ad4:	ret
    6ad8:	str	w2, [x0]
    6adc:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    6ae0:	fmov	d0, x1
    6ae4:	ldr	d8, [sp, #16]
    6ae8:	ldp	x29, x30, [sp], #32
    6aec:	ret
    6af0:	ldr	d8, [sp, #16]
    6af4:	ldp	x29, x30, [sp], #32
    6af8:	b	2ff0 <log2@plt>
    6afc:	nop
    6b00:	stp	x29, x30, [sp, #-80]!
    6b04:	mov	x29, sp
    6b08:	ldr	x2, [x0, #8]
    6b0c:	ldr	x2, [x2, #168]
    6b10:	tbz	w2, #24, 6bb8 <PyNumber_FloorDivide@plt+0x3758>
    6b14:	stp	x19, x20, [sp, #16]
    6b18:	mov	x20, x1
    6b1c:	mov	x19, x0
    6b20:	ldr	x1, [x0, #16]
    6b24:	cmp	x1, #0x0
    6b28:	b.le	6bd0 <PyNumber_FloorDivide@plt+0x3770>
    6b2c:	stp	d8, d9, [sp, #32]
    6b30:	bl	3330 <PyLong_AsDouble@plt>
    6b34:	fmov	d9, #-1.000000000000000000e+00
    6b38:	fcmp	d0, d9
    6b3c:	b.ne	6ba0 <PyNumber_FloorDivide@plt+0x3740>  // b.any
    6b40:	str	d0, [sp, #56]
    6b44:	bl	32b0 <PyErr_Occurred@plt>
    6b48:	ldr	d0, [sp, #56]
    6b4c:	cbz	x0, 6ba0 <PyNumber_FloorDivide@plt+0x3740>
    6b50:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    6b54:	ldr	x0, [x0, #3936]
    6b58:	ldr	x0, [x0]
    6b5c:	bl	3190 <PyErr_ExceptionMatches@plt>
    6b60:	cbz	w0, 6c08 <PyNumber_FloorDivide@plt+0x37a8>
    6b64:	bl	3210 <PyErr_Clear@plt>
    6b68:	mov	x0, x19
    6b6c:	add	x1, sp, #0x48
    6b70:	bl	3150 <_PyLong_Frexp@plt>
    6b74:	fcmp	d0, d9
    6b78:	b.eq	6bf8 <PyNumber_FloorDivide@plt+0x3798>  // b.none
    6b7c:	blr	x20
    6b80:	fmov	d8, d0
    6b84:	fmov	d0, #2.000000000000000000e+00
    6b88:	blr	x20
    6b8c:	ldr	d1, [sp, #72]
    6b90:	scvtf	d1, d1
    6b94:	fmul	d1, d1, d0
    6b98:	fadd	d0, d1, d8
    6b9c:	b	6ba4 <PyNumber_FloorDivide@plt+0x3744>
    6ba0:	blr	x20
    6ba4:	bl	31c0 <PyFloat_FromDouble@plt>
    6ba8:	ldp	x19, x20, [sp, #16]
    6bac:	ldp	d8, d9, [sp, #32]
    6bb0:	ldp	x29, x30, [sp], #80
    6bb4:	ret
    6bb8:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    6bbc:	mov	w3, #0x0                   	// #0
    6bc0:	ldr	x2, [x2, #3904]
    6bc4:	bl	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    6bc8:	ldp	x29, x30, [sp], #80
    6bcc:	ret
    6bd0:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    6bd4:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6bd8:	add	x1, x1, #0xf8
    6bdc:	ldr	x0, [x0, #3872]
    6be0:	ldr	x0, [x0]
    6be4:	bl	3130 <PyErr_SetString@plt>
    6be8:	mov	x0, #0x0                   	// #0
    6bec:	ldp	x19, x20, [sp, #16]
    6bf0:	ldp	x29, x30, [sp], #80
    6bf4:	ret
    6bf8:	str	d0, [sp, #56]
    6bfc:	bl	32b0 <PyErr_Occurred@plt>
    6c00:	ldr	d0, [sp, #56]
    6c04:	cbz	x0, 6b7c <PyNumber_FloorDivide@plt+0x371c>
    6c08:	mov	x0, #0x0                   	// #0
    6c0c:	ldp	x19, x20, [sp, #16]
    6c10:	ldp	d8, d9, [sp, #32]
    6c14:	ldp	x29, x30, [sp], #80
    6c18:	ret
    6c1c:	nop
    6c20:	mov	x0, x1
    6c24:	adrp	x1, 6000 <PyNumber_FloorDivide@plt+0x2ba0>
    6c28:	add	x1, x1, #0xa48
    6c2c:	b	6b00 <PyNumber_FloorDivide@plt+0x36a0>
    6c30:	mov	x0, x1
    6c34:	adrp	x1, 6000 <PyNumber_FloorDivide@plt+0x2ba0>
    6c38:	add	x1, x1, #0xc40
    6c3c:	b	6b00 <PyNumber_FloorDivide@plt+0x36a0>
    6c40:	fabs	d2, d0
    6c44:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6c48:	fmov	d1, x0
    6c4c:	stp	x29, x30, [sp, #-32]!
    6c50:	mov	x29, sp
    6c54:	fcmp	d2, d1
    6c58:	str	d8, [sp, #16]
    6c5c:	fmov	d8, d0
    6c60:	b.hi	6c9c <PyNumber_FloorDivide@plt+0x383c>  // b.pmore
    6c64:	fcmpe	d0, #0.0
    6c68:	b.gt	6ccc <PyNumber_FloorDivide@plt+0x386c>
    6c6c:	bl	33f0 <__errno_location@plt>
    6c70:	fcmp	d8, #0.0
    6c74:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
    6c78:	mov	x2, #0x7ff8000000000000    	// #9221120237041090560
    6c7c:	fmov	d8, x1
    6c80:	fmov	d0, x2
    6c84:	mov	w1, #0x21                  	// #33
    6c88:	str	w1, [x0]
    6c8c:	fcsel	d0, d8, d0, eq  // eq = none
    6c90:	ldr	d8, [sp, #16]
    6c94:	ldp	x29, x30, [sp], #32
    6c98:	ret
    6c9c:	fcmp	d0, d0
    6ca0:	b.vs	6c90 <PyNumber_FloorDivide@plt+0x3830>
    6ca4:	fcmpe	d0, #0.0
    6ca8:	b.gt	6c90 <PyNumber_FloorDivide@plt+0x3830>
    6cac:	bl	33f0 <__errno_location@plt>
    6cb0:	mov	w2, #0x21                  	// #33
    6cb4:	str	w2, [x0]
    6cb8:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    6cbc:	fmov	d0, x1
    6cc0:	ldr	d8, [sp, #16]
    6cc4:	ldp	x29, x30, [sp], #32
    6cc8:	ret
    6ccc:	ldr	d8, [sp, #16]
    6cd0:	ldp	x29, x30, [sp], #32
    6cd4:	b	30e0 <log10@plt>
    6cd8:	stp	x29, x30, [sp, #-64]!
    6cdc:	mov	x0, x1
    6ce0:	mov	x29, sp
    6ce4:	ldr	x1, [x1, #16]
    6ce8:	stp	x19, x20, [sp, #16]
    6cec:	str	xzr, [sp, #56]
    6cf0:	cmp	x1, #0x1
    6cf4:	b.eq	6d2c <PyNumber_FloorDivide@plt+0x38cc>  // b.none
    6cf8:	cmp	x1, #0x2
    6cfc:	b.eq	6dc8 <PyNumber_FloorDivide@plt+0x3968>  // b.none
    6d00:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    6d04:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6d08:	mov	x19, #0x0                   	// #0
    6d0c:	add	x1, x1, #0x178
    6d10:	ldr	x0, [x0, #3888]
    6d14:	ldr	x0, [x0]
    6d18:	bl	3130 <PyErr_SetString@plt>
    6d1c:	mov	x0, x19
    6d20:	ldp	x19, x20, [sp, #16]
    6d24:	ldp	x29, x30, [sp], #64
    6d28:	ret
    6d2c:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6d30:	add	x2, sp, #0x30
    6d34:	add	x1, x1, #0x168
    6d38:	bl	32f0 <PyArg_ParseTuple@plt>
    6d3c:	cbz	w0, 6de0 <PyNumber_FloorDivide@plt+0x3980>
    6d40:	ldr	x0, [sp, #48]
    6d44:	str	x21, [sp, #32]
    6d48:	ldr	x21, [sp, #56]
    6d4c:	adrp	x20, 7000 <PyNumber_FloorDivide@plt+0x3ba0>
    6d50:	add	x20, x20, #0x6c8
    6d54:	mov	x1, x20
    6d58:	bl	6b00 <PyNumber_FloorDivide@plt+0x36a0>
    6d5c:	cmp	x0, #0x0
    6d60:	mov	x19, x0
    6d64:	ccmp	x21, #0x0, #0x4, ne  // ne = any
    6d68:	b.eq	6db4 <PyNumber_FloorDivide@plt+0x3954>  // b.none
    6d6c:	mov	x1, x20
    6d70:	mov	x0, x21
    6d74:	bl	6b00 <PyNumber_FloorDivide@plt+0x36a0>
    6d78:	mov	x20, x0
    6d7c:	cbz	x0, 6e10 <PyNumber_FloorDivide@plt+0x39b0>
    6d80:	mov	x1, x0
    6d84:	mov	x0, x19
    6d88:	bl	3430 <PyNumber_TrueDivide@plt>
    6d8c:	mov	x21, x0
    6d90:	ldr	x1, [x19]
    6d94:	sub	x1, x1, #0x1
    6d98:	str	x1, [x19]
    6d9c:	cbz	x1, 6e04 <PyNumber_FloorDivide@plt+0x39a4>
    6da0:	ldr	x1, [x20]
    6da4:	mov	x19, x21
    6da8:	sub	x0, x1, #0x1
    6dac:	str	x0, [x20]
    6db0:	cbz	x0, 6df4 <PyNumber_FloorDivide@plt+0x3994>
    6db4:	mov	x0, x19
    6db8:	ldp	x19, x20, [sp, #16]
    6dbc:	ldr	x21, [sp, #32]
    6dc0:	ldp	x29, x30, [sp], #64
    6dc4:	ret
    6dc8:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6dcc:	add	x3, sp, #0x38
    6dd0:	add	x1, x1, #0x170
    6dd4:	add	x2, sp, #0x30
    6dd8:	bl	32f0 <PyArg_ParseTuple@plt>
    6ddc:	cbnz	w0, 6d40 <PyNumber_FloorDivide@plt+0x38e0>
    6de0:	mov	x19, #0x0                   	// #0
    6de4:	mov	x0, x19
    6de8:	ldp	x19, x20, [sp, #16]
    6dec:	ldp	x29, x30, [sp], #64
    6df0:	ret
    6df4:	mov	x0, x20
    6df8:	bl	3080 <_Py_Dealloc@plt>
    6dfc:	ldr	x21, [sp, #32]
    6e00:	b	6d1c <PyNumber_FloorDivide@plt+0x38bc>
    6e04:	mov	x0, x19
    6e08:	bl	3080 <_Py_Dealloc@plt>
    6e0c:	b	6da0 <PyNumber_FloorDivide@plt+0x3940>
    6e10:	ldr	x0, [x19]
    6e14:	sub	x0, x0, #0x1
    6e18:	str	x0, [x19]
    6e1c:	cbz	x0, 6e2c <PyNumber_FloorDivide@plt+0x39cc>
    6e20:	mov	x19, #0x0                   	// #0
    6e24:	ldr	x21, [sp, #32]
    6e28:	b	6de4 <PyNumber_FloorDivide@plt+0x3984>
    6e2c:	mov	x0, x19
    6e30:	mov	x19, #0x0                   	// #0
    6e34:	bl	3080 <_Py_Dealloc@plt>
    6e38:	ldr	x21, [sp, #32]
    6e3c:	b	6d1c <PyNumber_FloorDivide@plt+0x38bc>
    6e40:	stp	x29, x30, [sp, #-80]!
    6e44:	cmp	x2, #0x2
    6e48:	mov	x29, sp
    6e4c:	stp	x19, x20, [sp, #16]
    6e50:	mov	x19, x1
    6e54:	b.ne	6f38 <PyNumber_FloorDivide@plt+0x3ad8>  // b.any
    6e58:	ldr	x0, [x19]
    6e5c:	adrp	x1, 1b000 <_Py_log1p@@Base+0x13110>
    6e60:	stp	d8, d9, [sp, #48]
    6e64:	ldr	x1, [x1, #3824]
    6e68:	ldr	x2, [x0, #8]
    6e6c:	cmp	x2, x1
    6e70:	b.eq	6f08 <PyNumber_FloorDivide@plt+0x3aa8>  // b.none
    6e74:	bl	32e0 <PyFloat_AsDouble@plt>
    6e78:	fmov	d8, d0
    6e7c:	fmov	d1, #-1.000000000000000000e+00
    6e80:	fcmp	d0, d1
    6e84:	b.eq	7000 <PyNumber_FloorDivide@plt+0x3ba0>  // b.none
    6e88:	ldr	x0, [x19, #8]
    6e8c:	ldr	x1, [x0, #8]
    6e90:	ldr	x1, [x1, #168]
    6e94:	tbz	w1, #24, 6f1c <PyNumber_FloorDivide@plt+0x3abc>
    6e98:	add	x1, sp, #0x4c
    6e9c:	bl	3290 <PyLong_AsLongAndOverflow@plt>
    6ea0:	mov	x19, x0
    6ea4:	cmn	x0, #0x1
    6ea8:	b.eq	7014 <PyNumber_FloorDivide@plt+0x3bb4>  // b.none
    6eac:	str	x21, [sp, #32]
    6eb0:	bl	33f0 <__errno_location@plt>
    6eb4:	ldr	w21, [sp, #76]
    6eb8:	mov	x20, x0
    6ebc:	cmp	w21, #0x0
    6ec0:	cbz	w21, 6f64 <PyNumber_FloorDivide@plt+0x3b04>
    6ec4:	b.lt	6fcc <PyNumber_FloorDivide@plt+0x3b6c>  // b.tstop
    6ec8:	fcmp	d8, #0.0
    6ecc:	b.eq	6ee8 <PyNumber_FloorDivide@plt+0x3a88>  // b.none
    6ed0:	fabs	d1, d8
    6ed4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6ed8:	fmov	d0, x0
    6edc:	fcmp	d1, d0
    6ee0:	b.ls	6f8c <PyNumber_FloorDivide@plt+0x3b2c>  // b.plast
    6ee4:	nop
    6ee8:	str	wzr, [x20]
    6eec:	fmov	d0, d8
    6ef0:	bl	31c0 <PyFloat_FromDouble@plt>
    6ef4:	ldp	x19, x20, [sp, #16]
    6ef8:	ldr	x21, [sp, #32]
    6efc:	ldp	d8, d9, [sp, #48]
    6f00:	ldp	x29, x30, [sp], #80
    6f04:	ret
    6f08:	ldr	d8, [x0, #16]
    6f0c:	ldr	x0, [x19, #8]
    6f10:	ldr	x1, [x0, #8]
    6f14:	ldr	x1, [x1, #168]
    6f18:	tbnz	w1, #24, 6e98 <PyNumber_FloorDivide@plt+0x3a38>
    6f1c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    6f20:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    6f24:	add	x1, x1, #0x1a8
    6f28:	ldr	x0, [x0, #3888]
    6f2c:	ldr	x0, [x0]
    6f30:	bl	3130 <PyErr_SetString@plt>
    6f34:	b	6fb8 <PyNumber_FloorDivide@plt+0x3b58>
    6f38:	mov	x1, x2
    6f3c:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    6f40:	mov	x3, #0x2                   	// #2
    6f44:	add	x0, x0, #0x1a0
    6f48:	mov	x2, x3
    6f4c:	bl	3280 <_PyArg_CheckPositional@plt>
    6f50:	cbnz	w0, 6e58 <PyNumber_FloorDivide@plt+0x39f8>
    6f54:	mov	x0, #0x0                   	// #0
    6f58:	ldp	x19, x20, [sp, #16]
    6f5c:	ldp	x29, x30, [sp], #80
    6f60:	ret
    6f64:	fcmp	d8, #0.0
    6f68:	b.eq	6ee8 <PyNumber_FloorDivide@plt+0x3a88>  // b.none
    6f6c:	fabs	d0, d8
    6f70:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6f74:	fmov	d9, x0
    6f78:	fcmp	d0, d9
    6f7c:	b.hi	6ee8 <PyNumber_FloorDivide@plt+0x3a88>  // b.pmore
    6f80:	mov	x0, #0x7fffffff            	// #2147483647
    6f84:	cmp	x19, x0
    6f88:	b.le	7020 <PyNumber_FloorDivide@plt+0x3bc0>
    6f8c:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
    6f90:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
    6f94:	fmov	d0, x0
    6f98:	fmov	d1, x1
    6f9c:	mov	w0, #0x22                  	// #34
    6fa0:	str	w0, [x20]
    6fa4:	bif	v8.8b, v0.8b, v1.8b
    6fa8:	fmov	d0, d8
    6fac:	bl	5e70 <PyNumber_FloorDivide@plt+0x2a10>
    6fb0:	cbz	w0, 6eec <PyNumber_FloorDivide@plt+0x3a8c>
    6fb4:	ldr	x21, [sp, #32]
    6fb8:	mov	x0, #0x0                   	// #0
    6fbc:	ldp	x19, x20, [sp, #16]
    6fc0:	ldp	d8, d9, [sp, #48]
    6fc4:	ldp	x29, x30, [sp], #80
    6fc8:	ret
    6fcc:	fcmp	d8, #0.0
    6fd0:	b.eq	6ee8 <PyNumber_FloorDivide@plt+0x3a88>  // b.none
    6fd4:	fabs	d1, d8
    6fd8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    6fdc:	fmov	d0, x0
    6fe0:	fcmp	d1, d0
    6fe4:	b.hi	6ee8 <PyNumber_FloorDivide@plt+0x3a88>  // b.pmore
    6fe8:	movi	d0, #0x0
    6fec:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    6ff0:	fmov	d1, x0
    6ff4:	str	wzr, [x20]
    6ff8:	bif	v8.8b, v0.8b, v1.8b
    6ffc:	b	6eec <PyNumber_FloorDivide@plt+0x3a8c>
    7000:	bl	32b0 <PyErr_Occurred@plt>
    7004:	cbz	x0, 6e88 <PyNumber_FloorDivide@plt+0x3a28>
    7008:	mov	x0, #0x0                   	// #0
    700c:	ldp	d8, d9, [sp, #48]
    7010:	b	6f58 <PyNumber_FloorDivide@plt+0x3af8>
    7014:	bl	32b0 <PyErr_Occurred@plt>
    7018:	cbz	x0, 6eac <PyNumber_FloorDivide@plt+0x3a4c>
    701c:	b	6fb8 <PyNumber_FloorDivide@plt+0x3b58>
    7020:	mov	x0, #0xffffffff80000000    	// #-2147483648
    7024:	cmp	x19, x0
    7028:	b.lt	6fe8 <PyNumber_FloorDivide@plt+0x3b88>  // b.tstop
    702c:	fmov	d0, d8
    7030:	str	wzr, [x20]
    7034:	mov	w0, w19
    7038:	bl	3020 <ldexp@plt>
    703c:	fmov	d8, d0
    7040:	fabs	d0, d0
    7044:	fcmp	d0, d9
    7048:	b.gt	7058 <PyNumber_FloorDivide@plt+0x3bf8>
    704c:	ldr	w0, [x20]
    7050:	cbnz	w0, 6fa8 <PyNumber_FloorDivide@plt+0x3b48>
    7054:	b	6eec <PyNumber_FloorDivide@plt+0x3a8c>
    7058:	mov	w0, #0x22                  	// #34
    705c:	str	w0, [x20]
    7060:	b	6fa8 <PyNumber_FloorDivide@plt+0x3b48>
    7064:	nop
    7068:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    706c:	mov	x0, x1
    7070:	ldr	x1, [x1, #8]
    7074:	ldr	x2, [x2, #3824]
    7078:	cmp	x1, x2
    707c:	b.eq	70c4 <PyNumber_FloorDivide@plt+0x3c64>  // b.none
    7080:	stp	x29, x30, [sp, #-16]!
    7084:	mov	x29, sp
    7088:	bl	32e0 <PyFloat_AsDouble@plt>
    708c:	fmov	d1, #-1.000000000000000000e+00
    7090:	fcmp	d0, d1
    7094:	b.eq	7100 <PyNumber_FloorDivide@plt+0x3ca0>  // b.none
    7098:	fabs	d2, d0
    709c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    70a0:	fmov	d1, x0
    70a4:	fcmp	d2, d1
    70a8:	b.le	70f4 <PyNumber_FloorDivide@plt+0x3c94>
    70ac:	ldp	x29, x30, [sp], #16
    70b0:	fmov	x1, d0
    70b4:	mov	x0, #0x1                   	// #1
    70b8:	cmp	x1, #0x0
    70bc:	cneg	x0, x0, lt  // lt = tstop
    70c0:	b	3220 <PyBool_FromLong@plt>
    70c4:	ldr	d0, [x0, #16]
    70c8:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    70cc:	fmov	d1, x0
    70d0:	mov	x0, #0x0                   	// #0
    70d4:	fabs	d2, d0
    70d8:	fcmp	d2, d1
    70dc:	b.le	70f0 <PyNumber_FloorDivide@plt+0x3c90>
    70e0:	fmov	x1, d0
    70e4:	mov	x0, #0x1                   	// #1
    70e8:	cmp	x1, #0x0
    70ec:	cneg	x0, x0, lt  // lt = tstop
    70f0:	b	3220 <PyBool_FromLong@plt>
    70f4:	ldp	x29, x30, [sp], #16
    70f8:	mov	x0, #0x0                   	// #0
    70fc:	b	3220 <PyBool_FromLong@plt>
    7100:	bl	32b0 <PyErr_Occurred@plt>
    7104:	cbz	x0, 70f4 <PyNumber_FloorDivide@plt+0x3c94>
    7108:	mov	x0, #0x0                   	// #0
    710c:	ldp	x29, x30, [sp], #16
    7110:	ret
    7114:	nop
    7118:	stp	x29, x30, [sp, #-48]!
    711c:	cmp	x2, #0x2
    7120:	mov	x29, sp
    7124:	stp	x19, x20, [sp, #16]
    7128:	mov	x19, x1
    712c:	str	x21, [sp, #32]
    7130:	b.eq	7150 <PyNumber_FloorDivide@plt+0x3cf0>  // b.none
    7134:	mov	x1, x2
    7138:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    713c:	mov	x3, #0x2                   	// #2
    7140:	add	x0, x0, #0x1d8
    7144:	mov	x2, x3
    7148:	bl	3280 <_PyArg_CheckPositional@plt>
    714c:	cbz	w0, 71fc <PyNumber_FloorDivide@plt+0x3d9c>
    7150:	ldp	x0, x20, [x19]
    7154:	bl	33e0 <PyNumber_Index@plt>
    7158:	mov	x19, x0
    715c:	cbz	x0, 71fc <PyNumber_FloorDivide@plt+0x3d9c>
    7160:	mov	x0, x20
    7164:	bl	33e0 <PyNumber_Index@plt>
    7168:	mov	x20, x0
    716c:	cbz	x0, 71ec <PyNumber_FloorDivide@plt+0x3d8c>
    7170:	mov	x1, x0
    7174:	mov	x0, x19
    7178:	bl	3200 <_PyLong_GCD@plt>
    717c:	mov	x21, x0
    7180:	ldr	x1, [x19]
    7184:	sub	x0, x1, #0x1
    7188:	str	x0, [x19]
    718c:	cbz	x0, 71d0 <PyNumber_FloorDivide@plt+0x3d70>
    7190:	ldr	x0, [x20]
    7194:	sub	x0, x0, #0x1
    7198:	str	x0, [x20]
    719c:	cbz	x0, 71b4 <PyNumber_FloorDivide@plt+0x3d54>
    71a0:	mov	x0, x21
    71a4:	ldp	x19, x20, [sp, #16]
    71a8:	ldr	x21, [sp, #32]
    71ac:	ldp	x29, x30, [sp], #48
    71b0:	ret
    71b4:	mov	x0, x20
    71b8:	bl	3080 <_Py_Dealloc@plt>
    71bc:	mov	x0, x21
    71c0:	ldp	x19, x20, [sp, #16]
    71c4:	ldr	x21, [sp, #32]
    71c8:	ldp	x29, x30, [sp], #48
    71cc:	ret
    71d0:	mov	x0, x19
    71d4:	bl	3080 <_Py_Dealloc@plt>
    71d8:	ldr	x0, [x20]
    71dc:	sub	x0, x0, #0x1
    71e0:	str	x0, [x20]
    71e4:	cbnz	x0, 71a0 <PyNumber_FloorDivide@plt+0x3d40>
    71e8:	b	71b4 <PyNumber_FloorDivide@plt+0x3d54>
    71ec:	ldr	x0, [x19]
    71f0:	sub	x0, x0, #0x1
    71f4:	str	x0, [x19]
    71f8:	cbz	x0, 7214 <PyNumber_FloorDivide@plt+0x3db4>
    71fc:	mov	x21, #0x0                   	// #0
    7200:	mov	x0, x21
    7204:	ldp	x19, x20, [sp, #16]
    7208:	ldr	x21, [sp, #32]
    720c:	ldp	x29, x30, [sp], #48
    7210:	ret
    7214:	mov	x0, x19
    7218:	mov	x21, #0x0                   	// #0
    721c:	bl	3080 <_Py_Dealloc@plt>
    7220:	b	71a0 <PyNumber_FloorDivide@plt+0x3d40>
    7224:	nop
    7228:	stp	x29, x30, [sp, #-48]!
    722c:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    7230:	mov	x0, x1
    7234:	mov	x29, sp
    7238:	ldr	x2, [x2, #3824]
    723c:	ldr	x1, [x1, #8]
    7240:	cmp	x1, x2
    7244:	b.eq	7294 <PyNumber_FloorDivide@plt+0x3e34>  // b.none
    7248:	bl	32e0 <PyFloat_AsDouble@plt>
    724c:	fmov	d1, #-1.000000000000000000e+00
    7250:	fcmp	d0, d1
    7254:	b.eq	729c <PyNumber_FloorDivide@plt+0x3e3c>  // b.none
    7258:	fcmp	d0, d0
    725c:	b.vs	72c8 <PyNumber_FloorDivide@plt+0x3e68>
    7260:	fabs	d2, d0
    7264:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7268:	fmov	d1, x0
    726c:	mov	w1, #0x0                   	// #0
    7270:	fcmp	d2, d1
    7274:	cset	w0, gt
    7278:	fcmp	d0, #0.0
    727c:	csinc	w0, w0, wzr, ne  // ne = any
    7280:	cbz	w0, 72ac <PyNumber_FloorDivide@plt+0x3e4c>
    7284:	ldp	x29, x30, [sp], #48
    7288:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    728c:	add	x0, x0, #0x1e0
    7290:	b	32a0 <Py_BuildValue@plt>
    7294:	ldr	d0, [x0, #16]
    7298:	b	7258 <PyNumber_FloorDivide@plt+0x3df8>
    729c:	str	d0, [sp, #24]
    72a0:	bl	32b0 <PyErr_Occurred@plt>
    72a4:	ldr	d0, [sp, #24]
    72a8:	cbnz	x0, 72d0 <PyNumber_FloorDivide@plt+0x3e70>
    72ac:	add	x0, sp, #0x2c
    72b0:	bl	3340 <frexp@plt>
    72b4:	ldr	w1, [sp, #44]
    72b8:	ldp	x29, x30, [sp], #48
    72bc:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    72c0:	add	x0, x0, #0x1e0
    72c4:	b	32a0 <Py_BuildValue@plt>
    72c8:	mov	w1, #0x0                   	// #0
    72cc:	b	7284 <PyNumber_FloorDivide@plt+0x3e24>
    72d0:	mov	x0, #0x0                   	// #0
    72d4:	ldp	x29, x30, [sp], #48
    72d8:	ret
    72dc:	nop
    72e0:	fcmp	d1, d0
    72e4:	fmov	d2, d0
    72e8:	fmov	d3, d1
    72ec:	b.vs	73ac <PyNumber_FloorDivide@plt+0x3f4c>
    72f0:	fabs	d5, d0
    72f4:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    72f8:	fmov	d4, x0
    72fc:	fabs	d6, d1
    7300:	fcmp	d5, d4
    7304:	b.le	7338 <PyNumber_FloorDivide@plt+0x3ed8>
    7308:	fcmp	d6, d4
    730c:	b.le	7390 <PyNumber_FloorDivide@plt+0x3f30>
    7310:	fmov	d1, #1.000000000000000000e+00
    7314:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7318:	fmov	d0, x0
    731c:	bif	v3.8b, v1.8b, v0.8b
    7320:	fcmp	d3, d1
    7324:	b.ne	7380 <PyNumber_FloorDivide@plt+0x3f20>  // b.any
    7328:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    732c:	ldr	d1, [x0, #1176]
    7330:	bsl	v0.8b, v2.8b, v1.8b
    7334:	ret
    7338:	fcmp	d6, d4
    733c:	cset	w0, gt
    7340:	fcmp	d0, #0.0
    7344:	csinc	w0, w0, wzr, ne  // ne = any
    7348:	cbz	w0, 73a8 <PyNumber_FloorDivide@plt+0x3f48>
    734c:	fmov	d1, #1.000000000000000000e+00
    7350:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    7354:	fmov	d0, x0
    7358:	bif	v3.8b, v1.8b, v0.8b
    735c:	fcmp	d3, d1
    7360:	b.ne	7370 <PyNumber_FloorDivide@plt+0x3f10>  // b.any
    7364:	movi	d1, #0x0
    7368:	bsl	v0.8b, v2.8b, v1.8b
    736c:	ret
    7370:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7374:	ldr	d1, [x0, #1120]
    7378:	bsl	v0.8b, v2.8b, v1.8b
    737c:	ret
    7380:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7384:	ldr	d1, [x0, #1184]
    7388:	bsl	v0.8b, v2.8b, v1.8b
    738c:	ret
    7390:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7394:	ldr	d0, [x0, #1192]
    7398:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
    739c:	fmov	d1, x0
    73a0:	bit	v0.8b, v2.8b, v1.8b
    73a4:	ret
    73a8:	b	2fd0 <atan2@plt>
    73ac:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    73b0:	fmov	d0, x0
    73b4:	ret
    73b8:	stp	x29, x30, [sp, #-48]!
    73bc:	adrp	x0, 1c000 <_Py_log1p@@Base+0x14110>
    73c0:	mov	x29, sp
    73c4:	stp	x19, x20, [sp, #16]
    73c8:	mov	x20, x1
    73cc:	add	x1, x0, #0x260
    73d0:	add	x1, x1, #0x80
    73d4:	mov	x0, x20
    73d8:	str	x21, [sp, #32]
    73dc:	bl	3160 <_PyObject_LookupSpecial@plt>
    73e0:	cbz	x0, 748c <PyNumber_FloorDivide@plt+0x402c>
    73e4:	ldr	x1, [x0, #8]
    73e8:	mov	x19, x0
    73ec:	ldr	x2, [x1, #168]
    73f0:	ldr	x1, [x1, #56]
    73f4:	tbz	w2, #11, 7448 <PyNumber_FloorDivide@plt+0x3fe8>
    73f8:	ldr	x4, [x0, x1]
    73fc:	cbz	x4, 7448 <PyNumber_FloorDivide@plt+0x3fe8>
    7400:	mov	x3, #0x0                   	// #0
    7404:	mov	x2, #0x0                   	// #0
    7408:	mov	x1, #0x0                   	// #0
    740c:	blr	x4
    7410:	mov	x2, #0x0                   	// #0
    7414:	mov	x1, x0
    7418:	mov	x0, x19
    741c:	bl	32d0 <_Py_CheckFunctionResult@plt>
    7420:	ldr	x1, [x19]
    7424:	mov	x21, x0
    7428:	sub	x1, x1, #0x1
    742c:	str	x1, [x19]
    7430:	cbz	x1, 7470 <PyNumber_FloorDivide@plt+0x4010>
    7434:	mov	x0, x21
    7438:	ldp	x19, x20, [sp, #16]
    743c:	ldr	x21, [sp, #32]
    7440:	ldp	x29, x30, [sp], #48
    7444:	ret
    7448:	mov	x1, #0x0                   	// #0
    744c:	mov	x0, x19
    7450:	mov	x3, #0x0                   	// #0
    7454:	mov	x2, #0x0                   	// #0
    7458:	bl	33d0 <_PyObject_MakeTpCall@plt>
    745c:	mov	x21, x0
    7460:	ldr	x1, [x19]
    7464:	sub	x1, x1, #0x1
    7468:	str	x1, [x19]
    746c:	cbnz	x1, 7434 <PyNumber_FloorDivide@plt+0x3fd4>
    7470:	mov	x0, x19
    7474:	bl	3080 <_Py_Dealloc@plt>
    7478:	mov	x0, x21
    747c:	ldp	x19, x20, [sp, #16]
    7480:	ldr	x21, [sp, #32]
    7484:	ldp	x29, x30, [sp], #48
    7488:	ret
    748c:	mov	x21, #0x0                   	// #0
    7490:	bl	32b0 <PyErr_Occurred@plt>
    7494:	cbnz	x0, 7434 <PyNumber_FloorDivide@plt+0x3fd4>
    7498:	mov	x0, x20
    749c:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    74a0:	adrp	x1, 1b000 <_Py_log1p@@Base+0x13110>
    74a4:	mov	w3, #0x0                   	// #0
    74a8:	ldp	x19, x20, [sp, #16]
    74ac:	ldr	x21, [sp, #32]
    74b0:	ldp	x29, x30, [sp], #48
    74b4:	ldr	x2, [x2, #3832]
    74b8:	ldr	x1, [x1, #4000]
    74bc:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>
    74c0:	stp	x29, x30, [sp, #-224]!
    74c4:	cmp	x2, #0x10
    74c8:	mov	x29, sp
    74cc:	stp	x19, x20, [sp, #16]
    74d0:	stp	x21, x22, [sp, #32]
    74d4:	mov	x21, x2
    74d8:	stp	x23, x24, [sp, #48]
    74dc:	mov	x23, x1
    74e0:	stp	x25, x26, [sp, #64]
    74e4:	stp	d8, d9, [sp, #80]
    74e8:	b.gt	7668 <PyNumber_FloorDivide@plt+0x4208>
    74ec:	cmp	x2, #0x0
    74f0:	b.le	76b4 <PyNumber_FloorDivide@plt+0x4254>
    74f4:	add	x25, sp, #0x60
    74f8:	mov	x22, x25
    74fc:	adrp	x24, 1b000 <_Py_log1p@@Base+0x13110>
    7500:	adrp	x26, 1b000 <_Py_log1p@@Base+0x13110>
    7504:	movi	d8, #0x0
    7508:	mov	w20, #0x0                   	// #0
    750c:	ldr	x24, [x24, #3824]
    7510:	mov	x19, #0x0                   	// #0
    7514:	ldr	x26, [x26, #3984]
    7518:	fmov	d9, #-1.000000000000000000e+00
    751c:	b	755c <PyNumber_FloorDivide@plt+0x40fc>
    7520:	cmp	x3, x26
    7524:	b.eq	764c <PyNumber_FloorDivide@plt+0x41ec>  // b.none
    7528:	bl	32e0 <PyFloat_AsDouble@plt>
    752c:	fcmp	d0, d9
    7530:	b.eq	7658 <PyNumber_FloorDivide@plt+0x41f8>  // b.none
    7534:	fabs	d0, d0
    7538:	fcmp	d0, d0
    753c:	cset	w0, vs
    7540:	orr	w20, w20, w0
    7544:	fcmp	d8, d0
    7548:	str	d0, [x22, x19, lsl #3]
    754c:	add	x19, x19, #0x1
    7550:	fcsel	d8, d8, d0, pl  // pl = nfrst
    7554:	cmp	x21, x19
    7558:	b.le	7598 <PyNumber_FloorDivide@plt+0x4138>
    755c:	ldr	x0, [x23, x19, lsl #3]
    7560:	ldr	x3, [x0, #8]
    7564:	cmp	x3, x24
    7568:	b.ne	7520 <PyNumber_FloorDivide@plt+0x40c0>  // b.any
    756c:	ldr	d0, [x0, #16]
    7570:	fabs	d0, d0
    7574:	fcmp	d0, d0
    7578:	str	d0, [x22, x19, lsl #3]
    757c:	add	x19, x19, #0x1
    7580:	cset	w0, vs
    7584:	fcmp	d8, d0
    7588:	orr	w20, w20, w0
    758c:	fcsel	d8, d8, d0, pl  // pl = nfrst
    7590:	cmp	x21, x19
    7594:	b.gt	755c <PyNumber_FloorDivide@plt+0x40fc>
    7598:	fabs	d1, d8
    759c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    75a0:	fmov	d0, x0
    75a4:	fcmp	d1, d0
    75a8:	b.gt	7610 <PyNumber_FloorDivide@plt+0x41b0>
    75ac:	cbnz	w20, 7688 <PyNumber_FloorDivide@plt+0x4228>
    75b0:	fcmp	d8, #0.0
    75b4:	ccmp	x21, #0x1, #0x4, ne  // ne = any
    75b8:	b.le	7610 <PyNumber_FloorDivide@plt+0x41b0>
    75bc:	movi	d3, #0x0
    75c0:	fmov	d2, #1.000000000000000000e+00
    75c4:	mov	x0, #0x0                   	// #0
    75c8:	ldr	d0, [x22, x0, lsl #3]
    75cc:	fmov	d1, d2
    75d0:	add	x0, x0, #0x1
    75d4:	cmp	x21, x0
    75d8:	fdiv	d0, d0, d8
    75dc:	fmul	d0, d0, d0
    75e0:	fadd	d2, d2, d0
    75e4:	fsub	d1, d1, d2
    75e8:	fadd	d0, d1, d0
    75ec:	fadd	d3, d3, d0
    75f0:	b.gt	75c8 <PyNumber_FloorDivide@plt+0x4168>
    75f4:	fmov	d0, #1.000000000000000000e+00
    75f8:	fsub	d0, d2, d0
    75fc:	fadd	d0, d0, d3
    7600:	fsqrt	d9, d0
    7604:	fcmp	d0, #0.0
    7608:	b.mi	76bc <PyNumber_FloorDivide@plt+0x425c>  // b.first
    760c:	fmul	d8, d8, d9
    7610:	cmp	x22, x25
    7614:	b.eq	7620 <PyNumber_FloorDivide@plt+0x41c0>  // b.none
    7618:	mov	x0, x22
    761c:	bl	31b0 <PyObject_Free@plt>
    7620:	fmov	d0, d8
    7624:	bl	31c0 <PyFloat_FromDouble@plt>
    7628:	mov	x19, x0
    762c:	mov	x0, x19
    7630:	ldp	x19, x20, [sp, #16]
    7634:	ldp	x21, x22, [sp, #32]
    7638:	ldp	x23, x24, [sp, #48]
    763c:	ldp	x25, x26, [sp, #64]
    7640:	ldp	d8, d9, [sp, #80]
    7644:	ldp	x29, x30, [sp], #224
    7648:	ret
    764c:	bl	3330 <PyLong_AsDouble@plt>
    7650:	fcmp	d0, d9
    7654:	b.ne	7534 <PyNumber_FloorDivide@plt+0x40d4>  // b.any
    7658:	bl	32b0 <PyErr_Occurred@plt>
    765c:	cbnz	x0, 769c <PyNumber_FloorDivide@plt+0x423c>
    7660:	fmov	d0, #1.000000000000000000e+00
    7664:	b	7544 <PyNumber_FloorDivide@plt+0x40e4>
    7668:	lsl	x0, x2, #3
    766c:	add	x25, sp, #0x60
    7670:	bl	3140 <PyObject_Malloc@plt>
    7674:	mov	x22, x0
    7678:	cbnz	x0, 74fc <PyNumber_FloorDivide@plt+0x409c>
    767c:	bl	30a0 <PyErr_NoMemory@plt>
    7680:	mov	x19, x0
    7684:	b	762c <PyNumber_FloorDivide@plt+0x41cc>
    7688:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    768c:	cmp	x22, x25
    7690:	fmov	d8, x1
    7694:	b.ne	7618 <PyNumber_FloorDivide@plt+0x41b8>  // b.any
    7698:	b	7620 <PyNumber_FloorDivide@plt+0x41c0>
    769c:	cmp	x22, x25
    76a0:	mov	x19, #0x0                   	// #0
    76a4:	b.eq	762c <PyNumber_FloorDivide@plt+0x41cc>  // b.none
    76a8:	mov	x0, x22
    76ac:	bl	31b0 <PyObject_Free@plt>
    76b0:	b	762c <PyNumber_FloorDivide@plt+0x41cc>
    76b4:	movi	d8, #0x0
    76b8:	b	7620 <PyNumber_FloorDivide@plt+0x41c0>
    76bc:	bl	3110 <sqrt@plt>
    76c0:	fmul	d8, d8, d9
    76c4:	b	7610 <PyNumber_FloorDivide@plt+0x41b0>
    76c8:	fabs	d2, d0
    76cc:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    76d0:	fmov	d1, x0
    76d4:	stp	x29, x30, [sp, #-32]!
    76d8:	mov	x29, sp
    76dc:	fcmp	d2, d1
    76e0:	str	d8, [sp, #16]
    76e4:	fmov	d8, d0
    76e8:	b.hi	7724 <PyNumber_FloorDivide@plt+0x42c4>  // b.pmore
    76ec:	fcmpe	d0, #0.0
    76f0:	b.gt	7754 <PyNumber_FloorDivide@plt+0x42f4>
    76f4:	bl	33f0 <__errno_location@plt>
    76f8:	fcmp	d8, #0.0
    76fc:	mov	x1, #0xfff0000000000000    	// #-4503599627370496
    7700:	mov	x2, #0x7ff8000000000000    	// #9221120237041090560
    7704:	fmov	d8, x1
    7708:	fmov	d0, x2
    770c:	mov	w1, #0x21                  	// #33
    7710:	str	w1, [x0]
    7714:	fcsel	d0, d8, d0, eq  // eq = none
    7718:	ldr	d8, [sp, #16]
    771c:	ldp	x29, x30, [sp], #32
    7720:	ret
    7724:	fcmp	d0, d0
    7728:	b.vs	7718 <PyNumber_FloorDivide@plt+0x42b8>
    772c:	fcmpe	d0, #0.0
    7730:	b.gt	7718 <PyNumber_FloorDivide@plt+0x42b8>
    7734:	bl	33f0 <__errno_location@plt>
    7738:	mov	w2, #0x21                  	// #33
    773c:	str	w2, [x0]
    7740:	mov	x1, #0x7ff8000000000000    	// #9221120237041090560
    7744:	fmov	d0, x1
    7748:	ldr	d8, [sp, #16]
    774c:	ldp	x29, x30, [sp], #32
    7750:	ret
    7754:	ldr	d8, [sp, #16]
    7758:	ldp	x29, x30, [sp], #32
    775c:	b	31a0 <log@plt>
    7760:	stp	x29, x30, [sp, #-304]!
    7764:	cmp	x2, #0x2
    7768:	mov	x29, sp
    776c:	stp	x19, x20, [sp, #16]
    7770:	mov	x19, x1
    7774:	b.eq	7794 <PyNumber_FloorDivide@plt+0x4334>  // b.none
    7778:	mov	x1, x2
    777c:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7780:	mov	x3, #0x2                   	// #2
    7784:	add	x0, x0, #0x1e8
    7788:	mov	x2, x3
    778c:	bl	3280 <_PyArg_CheckPositional@plt>
    7790:	cbz	w0, 7b60 <PyNumber_FloorDivide@plt+0x4700>
    7794:	stp	x21, x22, [sp, #32]
    7798:	ldp	x21, x19, [x19]
    779c:	ldr	x0, [x21, #8]
    77a0:	ldr	x0, [x0, #168]
    77a4:	tbz	w0, #26, 79c0 <PyNumber_FloorDivide@plt+0x4560>
    77a8:	ldr	x0, [x19, #8]
    77ac:	stp	x27, x28, [sp, #80]
    77b0:	mov	w28, #0x0                   	// #0
    77b4:	str	wzr, [sp, #172]
    77b8:	ldr	x0, [x0, #168]
    77bc:	tbz	w0, #26, 79ec <PyNumber_FloorDivide@plt+0x458c>
    77c0:	ldr	x22, [x19, #16]
    77c4:	ldr	x0, [x21, #16]
    77c8:	cmp	x0, x22
    77cc:	b.ne	7b2c <PyNumber_FloorDivide@plt+0x46cc>  // b.any
    77d0:	stp	x23, x24, [sp, #48]
    77d4:	cmp	x0, #0x10
    77d8:	b.gt	78e0 <PyNumber_FloorDivide@plt+0x4480>
    77dc:	add	x27, sp, #0xb0
    77e0:	stp	d8, d9, [sp, #96]
    77e4:	mov	x23, x27
    77e8:	cmp	x22, #0x0
    77ec:	b.le	7bd8 <PyNumber_FloorDivide@plt+0x4778>
    77f0:	stp	x25, x26, [sp, #64]
    77f4:	adrp	x26, 1b000 <_Py_log1p@@Base+0x13110>
    77f8:	add	x0, x21, #0x18
    77fc:	adrp	x25, 1b000 <_Py_log1p@@Base+0x13110>
    7800:	str	x0, [sp, #144]
    7804:	ldr	x0, [x26, #3824]
    7808:	str	x0, [sp, #136]
    780c:	add	x0, x19, #0x18
    7810:	str	x0, [sp, #160]
    7814:	ldr	x0, [x25, #3984]
    7818:	movi	d9, #0x0
    781c:	mov	w24, #0x0                   	// #0
    7820:	mov	x20, #0x0                   	// #0
    7824:	str	d10, [sp, #112]
    7828:	fmov	d10, #-1.000000000000000000e+00
    782c:	str	x0, [sp, #152]
    7830:	b	78a8 <PyNumber_FloorDivide@plt+0x4448>
    7834:	ldr	x2, [sp, #152]
    7838:	cmp	x1, x2
    783c:	b.eq	7918 <PyNumber_FloorDivide@plt+0x44b8>  // b.none
    7840:	bl	32e0 <PyFloat_AsDouble@plt>
    7844:	fcmp	d0, d10
    7848:	fmov	d8, d0
    784c:	b.eq	7928 <PyNumber_FloorDivide@plt+0x44c8>  // b.none
    7850:	ldr	x0, [sp, #160]
    7854:	ldr	x1, [x26, #3824]
    7858:	ldr	x0, [x0, x20, lsl #3]
    785c:	ldr	x2, [x0, #8]
    7860:	cmp	x2, x1
    7864:	b.eq	78d8 <PyNumber_FloorDivide@plt+0x4478>  // b.none
    7868:	ldr	x1, [x25, #3984]
    786c:	cmp	x2, x1
    7870:	b.eq	78fc <PyNumber_FloorDivide@plt+0x449c>  // b.none
    7874:	bl	32e0 <PyFloat_AsDouble@plt>
    7878:	fcmp	d0, d10
    787c:	b.eq	7908 <PyNumber_FloorDivide@plt+0x44a8>  // b.none
    7880:	fabd	d0, d8, d0
    7884:	fcmp	d0, d0
    7888:	str	d0, [x23, x20, lsl #3]
    788c:	add	x20, x20, #0x1
    7890:	cset	w0, vs
    7894:	fcmp	d0, d9
    7898:	orr	w24, w24, w0
    789c:	fcsel	d9, d9, d0, le
    78a0:	cmp	x22, x20
    78a4:	b.eq	7938 <PyNumber_FloorDivide@plt+0x44d8>  // b.none
    78a8:	ldp	x2, x0, [sp, #136]
    78ac:	ldr	x0, [x0, x20, lsl #3]
    78b0:	ldr	x1, [x0, #8]
    78b4:	cmp	x1, x2
    78b8:	b.ne	7834 <PyNumber_FloorDivide@plt+0x43d4>  // b.any
    78bc:	ldr	d8, [x0, #16]
    78c0:	ldr	x0, [sp, #160]
    78c4:	ldr	x1, [x26, #3824]
    78c8:	ldr	x0, [x0, x20, lsl #3]
    78cc:	ldr	x2, [x0, #8]
    78d0:	cmp	x2, x1
    78d4:	b.ne	7868 <PyNumber_FloorDivide@plt+0x4408>  // b.any
    78d8:	ldr	d0, [x0, #16]
    78dc:	b	7880 <PyNumber_FloorDivide@plt+0x4420>
    78e0:	lsl	x0, x0, #3
    78e4:	add	x27, sp, #0xb0
    78e8:	bl	3140 <PyObject_Malloc@plt>
    78ec:	mov	x23, x0
    78f0:	cbz	x0, 7bc0 <PyNumber_FloorDivide@plt+0x4760>
    78f4:	stp	d8, d9, [sp, #96]
    78f8:	b	77e8 <PyNumber_FloorDivide@plt+0x4388>
    78fc:	bl	3330 <PyLong_AsDouble@plt>
    7900:	fcmp	d0, d10
    7904:	b.ne	7880 <PyNumber_FloorDivide@plt+0x4420>  // b.any
    7908:	bl	32b0 <PyErr_Occurred@plt>
    790c:	cbnz	x0, 7a34 <PyNumber_FloorDivide@plt+0x45d4>
    7910:	fmov	d0, #-1.000000000000000000e+00
    7914:	b	7880 <PyNumber_FloorDivide@plt+0x4420>
    7918:	bl	3330 <PyLong_AsDouble@plt>
    791c:	fcmp	d0, d10
    7920:	fmov	d8, d0
    7924:	b.ne	7850 <PyNumber_FloorDivide@plt+0x43f0>  // b.any
    7928:	bl	32b0 <PyErr_Occurred@plt>
    792c:	cbnz	x0, 7a34 <PyNumber_FloorDivide@plt+0x45d4>
    7930:	fmov	d8, #-1.000000000000000000e+00
    7934:	b	7850 <PyNumber_FloorDivide@plt+0x43f0>
    7938:	fabs	d1, d9
    793c:	mov	x0, #0x7fefffffffffffff    	// #9218868437227405311
    7940:	fmov	d0, x0
    7944:	fcmp	d1, d0
    7948:	b.gt	7a90 <PyNumber_FloorDivide@plt+0x4630>
    794c:	cbnz	w24, 7b00 <PyNumber_FloorDivide@plt+0x46a0>
    7950:	fcmp	d9, #0.0
    7954:	ccmp	x22, #0x1, #0x4, ne  // ne = any
    7958:	b.le	7a90 <PyNumber_FloorDivide@plt+0x4630>
    795c:	movi	d3, #0x0
    7960:	add	x22, x23, x22, lsl #3
    7964:	mov	x0, x23
    7968:	fmov	d0, #1.000000000000000000e+00
    796c:	nop
    7970:	ldr	d1, [x0], #8
    7974:	fmov	d2, d0
    7978:	fdiv	d1, d1, d9
    797c:	cmp	x22, x0
    7980:	fmul	d1, d1, d1
    7984:	fadd	d0, d0, d1
    7988:	fsub	d2, d2, d0
    798c:	fadd	d1, d2, d1
    7990:	fadd	d3, d3, d1
    7994:	b.ne	7970 <PyNumber_FloorDivide@plt+0x4510>  // b.any
    7998:	fmov	d1, #1.000000000000000000e+00
    799c:	fsub	d0, d0, d1
    79a0:	fadd	d0, d0, d3
    79a4:	fsqrt	d8, d0
    79a8:	fcmp	d0, #0.0
    79ac:	b.mi	7be0 <PyNumber_FloorDivide@plt+0x4780>  // b.first
    79b0:	fmul	d9, d9, d8
    79b4:	ldr	d10, [sp, #112]
    79b8:	ldp	x25, x26, [sp, #64]
    79bc:	b	7a98 <PyNumber_FloorDivide@plt+0x4638>
    79c0:	mov	x0, x21
    79c4:	bl	3390 <PySequence_Tuple@plt>
    79c8:	mov	w1, #0x1                   	// #1
    79cc:	str	w1, [sp, #172]
    79d0:	mov	x21, x0
    79d4:	cbz	x0, 7a1c <PyNumber_FloorDivide@plt+0x45bc>
    79d8:	ldr	x0, [x19, #8]
    79dc:	stp	x27, x28, [sp, #80]
    79e0:	mov	w28, #0x0                   	// #0
    79e4:	ldr	x0, [x0, #168]
    79e8:	tbnz	w0, #26, 77c0 <PyNumber_FloorDivide@plt+0x4360>
    79ec:	mov	x0, x19
    79f0:	mov	w28, #0x1                   	// #1
    79f4:	bl	3390 <PySequence_Tuple@plt>
    79f8:	mov	x19, x0
    79fc:	cbnz	x0, 77c0 <PyNumber_FloorDivide@plt+0x4360>
    7a00:	ldr	w0, [sp, #172]
    7a04:	cbz	w0, 7a18 <PyNumber_FloorDivide@plt+0x45b8>
    7a08:	ldr	x0, [x21]
    7a0c:	sub	x0, x0, #0x1
    7a10:	str	x0, [x21]
    7a14:	cbz	x0, 7b84 <PyNumber_FloorDivide@plt+0x4724>
    7a18:	ldp	x27, x28, [sp, #80]
    7a1c:	mov	x19, #0x0                   	// #0
    7a20:	ldp	x21, x22, [sp, #32]
    7a24:	mov	x0, x19
    7a28:	ldp	x19, x20, [sp, #16]
    7a2c:	ldp	x29, x30, [sp], #304
    7a30:	ret
    7a34:	cmp	x23, x27
    7a38:	b.eq	7a44 <PyNumber_FloorDivide@plt+0x45e4>  // b.none
    7a3c:	mov	x0, x23
    7a40:	bl	31b0 <PyObject_Free@plt>
    7a44:	ldr	w0, [sp, #172]
    7a48:	cbz	w0, 7a5c <PyNumber_FloorDivide@plt+0x45fc>
    7a4c:	ldr	x0, [x21]
    7a50:	sub	x0, x0, #0x1
    7a54:	str	x0, [x21]
    7a58:	cbz	x0, 7b74 <PyNumber_FloorDivide@plt+0x4714>
    7a5c:	cbz	w28, 7a70 <PyNumber_FloorDivide@plt+0x4610>
    7a60:	ldr	x0, [x19]
    7a64:	sub	x0, x0, #0x1
    7a68:	str	x0, [x19]
    7a6c:	cbz	x0, 7b98 <PyNumber_FloorDivide@plt+0x4738>
    7a70:	mov	x19, #0x0                   	// #0
    7a74:	ldr	d10, [sp, #112]
    7a78:	ldp	x21, x22, [sp, #32]
    7a7c:	ldp	x23, x24, [sp, #48]
    7a80:	ldp	x25, x26, [sp, #64]
    7a84:	ldp	x27, x28, [sp, #80]
    7a88:	ldp	d8, d9, [sp, #96]
    7a8c:	b	7a24 <PyNumber_FloorDivide@plt+0x45c4>
    7a90:	ldp	x25, x26, [sp, #64]
    7a94:	ldr	d10, [sp, #112]
    7a98:	cmp	x23, x27
    7a9c:	b.eq	7aa8 <PyNumber_FloorDivide@plt+0x4648>  // b.none
    7aa0:	mov	x0, x23
    7aa4:	bl	31b0 <PyObject_Free@plt>
    7aa8:	ldr	w0, [sp, #172]
    7aac:	cbz	w0, 7ac0 <PyNumber_FloorDivide@plt+0x4660>
    7ab0:	ldr	x0, [x21]
    7ab4:	sub	x0, x0, #0x1
    7ab8:	str	x0, [x21]
    7abc:	cbz	x0, 7b20 <PyNumber_FloorDivide@plt+0x46c0>
    7ac0:	cbz	w28, 7ad4 <PyNumber_FloorDivide@plt+0x4674>
    7ac4:	ldr	x0, [x19]
    7ac8:	sub	x0, x0, #0x1
    7acc:	str	x0, [x19]
    7ad0:	cbz	x0, 7b14 <PyNumber_FloorDivide@plt+0x46b4>
    7ad4:	fmov	d0, d9
    7ad8:	bl	31c0 <PyFloat_FromDouble@plt>
    7adc:	mov	x19, x0
    7ae0:	ldp	x21, x22, [sp, #32]
    7ae4:	ldp	x23, x24, [sp, #48]
    7ae8:	ldp	x27, x28, [sp, #80]
    7aec:	ldp	d8, d9, [sp, #96]
    7af0:	mov	x0, x19
    7af4:	ldp	x19, x20, [sp, #16]
    7af8:	ldp	x29, x30, [sp], #304
    7afc:	ret
    7b00:	mov	x0, #0x7ff8000000000000    	// #9221120237041090560
    7b04:	fmov	d9, x0
    7b08:	ldp	x25, x26, [sp, #64]
    7b0c:	ldr	d10, [sp, #112]
    7b10:	b	7a98 <PyNumber_FloorDivide@plt+0x4638>
    7b14:	mov	x0, x19
    7b18:	bl	3080 <_Py_Dealloc@plt>
    7b1c:	b	7ad4 <PyNumber_FloorDivide@plt+0x4674>
    7b20:	mov	x0, x21
    7b24:	bl	3080 <_Py_Dealloc@plt>
    7b28:	b	7ac0 <PyNumber_FloorDivide@plt+0x4660>
    7b2c:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    7b30:	mov	x19, #0x0                   	// #0
    7b34:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7b38:	add	x1, x1, #0x1f0
    7b3c:	ldr	x0, [x0, #3872]
    7b40:	ldr	x0, [x0]
    7b44:	bl	3130 <PyErr_SetString@plt>
    7b48:	mov	x0, x19
    7b4c:	ldp	x19, x20, [sp, #16]
    7b50:	ldp	x21, x22, [sp, #32]
    7b54:	ldp	x27, x28, [sp, #80]
    7b58:	ldp	x29, x30, [sp], #304
    7b5c:	ret
    7b60:	mov	x19, #0x0                   	// #0
    7b64:	mov	x0, x19
    7b68:	ldp	x19, x20, [sp, #16]
    7b6c:	ldp	x29, x30, [sp], #304
    7b70:	ret
    7b74:	mov	x0, x21
    7b78:	bl	3080 <_Py_Dealloc@plt>
    7b7c:	cbnz	w28, 7a60 <PyNumber_FloorDivide@plt+0x4600>
    7b80:	b	7a70 <PyNumber_FloorDivide@plt+0x4610>
    7b84:	mov	x0, x21
    7b88:	bl	3080 <_Py_Dealloc@plt>
    7b8c:	ldp	x21, x22, [sp, #32]
    7b90:	ldp	x27, x28, [sp, #80]
    7b94:	b	7af0 <PyNumber_FloorDivide@plt+0x4690>
    7b98:	mov	x0, x19
    7b9c:	bl	3080 <_Py_Dealloc@plt>
    7ba0:	mov	x19, #0x0                   	// #0
    7ba4:	ldr	d10, [sp, #112]
    7ba8:	ldp	x21, x22, [sp, #32]
    7bac:	ldp	x23, x24, [sp, #48]
    7bb0:	ldp	x25, x26, [sp, #64]
    7bb4:	ldp	x27, x28, [sp, #80]
    7bb8:	ldp	d8, d9, [sp, #96]
    7bbc:	b	7af0 <PyNumber_FloorDivide@plt+0x4690>
    7bc0:	bl	30a0 <PyErr_NoMemory@plt>
    7bc4:	mov	x19, x0
    7bc8:	ldp	x21, x22, [sp, #32]
    7bcc:	ldp	x23, x24, [sp, #48]
    7bd0:	ldp	x27, x28, [sp, #80]
    7bd4:	b	7af0 <PyNumber_FloorDivide@plt+0x4690>
    7bd8:	movi	d9, #0x0
    7bdc:	b	7a98 <PyNumber_FloorDivide@plt+0x4638>
    7be0:	bl	3110 <sqrt@plt>
    7be4:	b	79b0 <PyNumber_FloorDivide@plt+0x4550>
    7be8:	stp	x29, x30, [sp, #-48]!
    7bec:	mov	x29, sp
    7bf0:	ldr	x0, [x1, #8]
    7bf4:	stp	x19, x20, [sp, #16]
    7bf8:	mov	x20, x1
    7bfc:	ldr	x1, [x0, #264]
    7c00:	str	x21, [sp, #32]
    7c04:	cbz	x1, 7c84 <PyNumber_FloorDivide@plt+0x4824>
    7c08:	adrp	x1, 1c000 <_Py_log1p@@Base+0x14110>
    7c0c:	add	x1, x1, #0x260
    7c10:	add	x1, x1, #0x98
    7c14:	mov	x0, x20
    7c18:	bl	3160 <_PyObject_LookupSpecial@plt>
    7c1c:	mov	x19, x0
    7c20:	cbz	x0, 7cdc <PyNumber_FloorDivide@plt+0x487c>
    7c24:	ldr	x1, [x0, #8]
    7c28:	ldr	x2, [x1, #168]
    7c2c:	ldr	x1, [x1, #56]
    7c30:	tbz	w2, #11, 7cc0 <PyNumber_FloorDivide@plt+0x4860>
    7c34:	ldr	x4, [x0, x1]
    7c38:	cbz	x4, 7cc0 <PyNumber_FloorDivide@plt+0x4860>
    7c3c:	mov	x3, #0x0                   	// #0
    7c40:	mov	x2, #0x0                   	// #0
    7c44:	mov	x1, #0x0                   	// #0
    7c48:	blr	x4
    7c4c:	mov	x2, #0x0                   	// #0
    7c50:	mov	x1, x0
    7c54:	mov	x0, x19
    7c58:	bl	32d0 <_Py_CheckFunctionResult@plt>
    7c5c:	mov	x21, x0
    7c60:	ldr	x1, [x19]
    7c64:	sub	x1, x1, #0x1
    7c68:	str	x1, [x19]
    7c6c:	cbz	x1, 7ca4 <PyNumber_FloorDivide@plt+0x4844>
    7c70:	mov	x0, x21
    7c74:	ldp	x19, x20, [sp, #16]
    7c78:	ldr	x21, [sp, #32]
    7c7c:	ldp	x29, x30, [sp], #48
    7c80:	ret
    7c84:	bl	31d0 <PyType_Ready@plt>
    7c88:	tbz	w0, #31, 7c08 <PyNumber_FloorDivide@plt+0x47a8>
    7c8c:	mov	x21, #0x0                   	// #0
    7c90:	mov	x0, x21
    7c94:	ldp	x19, x20, [sp, #16]
    7c98:	ldr	x21, [sp, #32]
    7c9c:	ldp	x29, x30, [sp], #48
    7ca0:	ret
    7ca4:	mov	x0, x19
    7ca8:	bl	3080 <_Py_Dealloc@plt>
    7cac:	mov	x0, x21
    7cb0:	ldp	x19, x20, [sp, #16]
    7cb4:	ldr	x21, [sp, #32]
    7cb8:	ldp	x29, x30, [sp], #48
    7cbc:	ret
    7cc0:	mov	x0, x19
    7cc4:	mov	x3, #0x0                   	// #0
    7cc8:	mov	x2, #0x0                   	// #0
    7ccc:	mov	x1, #0x0                   	// #0
    7cd0:	bl	33d0 <_PyObject_MakeTpCall@plt>
    7cd4:	mov	x21, x0
    7cd8:	b	7c60 <PyNumber_FloorDivide@plt+0x4800>
    7cdc:	bl	32b0 <PyErr_Occurred@plt>
    7ce0:	mov	x21, x0
    7ce4:	cbnz	x0, 7c8c <PyNumber_FloorDivide@plt+0x482c>
    7ce8:	adrp	x0, 1b000 <_Py_log1p@@Base+0x13110>
    7cec:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7cf0:	ldr	x2, [x20, #8]
    7cf4:	add	x1, x1, #0x228
    7cf8:	ldr	x0, [x0, #3888]
    7cfc:	ldr	x2, [x2, #24]
    7d00:	ldr	x0, [x0]
    7d04:	bl	33c0 <PyErr_Format@plt>
    7d08:	b	7c70 <PyNumber_FloorDivide@plt+0x4810>
    7d0c:	nop
    7d10:	stp	x29, x30, [sp, #-48]!
    7d14:	adrp	x0, 1c000 <_Py_log1p@@Base+0x14110>
    7d18:	mov	x29, sp
    7d1c:	stp	x19, x20, [sp, #16]
    7d20:	mov	x20, x1
    7d24:	add	x1, x0, #0x260
    7d28:	add	x1, x1, #0xb0
    7d2c:	mov	x0, x20
    7d30:	str	x21, [sp, #32]
    7d34:	bl	3160 <_PyObject_LookupSpecial@plt>
    7d38:	cbz	x0, 7de4 <PyNumber_FloorDivide@plt+0x4984>
    7d3c:	ldr	x1, [x0, #8]
    7d40:	mov	x19, x0
    7d44:	ldr	x2, [x1, #168]
    7d48:	ldr	x1, [x1, #56]
    7d4c:	tbz	w2, #11, 7da0 <PyNumber_FloorDivide@plt+0x4940>
    7d50:	ldr	x4, [x0, x1]
    7d54:	cbz	x4, 7da0 <PyNumber_FloorDivide@plt+0x4940>
    7d58:	mov	x3, #0x0                   	// #0
    7d5c:	mov	x2, #0x0                   	// #0
    7d60:	mov	x1, #0x0                   	// #0
    7d64:	blr	x4
    7d68:	mov	x2, #0x0                   	// #0
    7d6c:	mov	x1, x0
    7d70:	mov	x0, x19
    7d74:	bl	32d0 <_Py_CheckFunctionResult@plt>
    7d78:	ldr	x1, [x19]
    7d7c:	mov	x21, x0
    7d80:	sub	x1, x1, #0x1
    7d84:	str	x1, [x19]
    7d88:	cbz	x1, 7dc8 <PyNumber_FloorDivide@plt+0x4968>
    7d8c:	mov	x0, x21
    7d90:	ldp	x19, x20, [sp, #16]
    7d94:	ldr	x21, [sp, #32]
    7d98:	ldp	x29, x30, [sp], #48
    7d9c:	ret
    7da0:	mov	x1, #0x0                   	// #0
    7da4:	mov	x0, x19
    7da8:	mov	x3, #0x0                   	// #0
    7dac:	mov	x2, #0x0                   	// #0
    7db0:	bl	33d0 <_PyObject_MakeTpCall@plt>
    7db4:	mov	x21, x0
    7db8:	ldr	x1, [x19]
    7dbc:	sub	x1, x1, #0x1
    7dc0:	str	x1, [x19]
    7dc4:	cbnz	x1, 7d8c <PyNumber_FloorDivide@plt+0x492c>
    7dc8:	mov	x0, x19
    7dcc:	bl	3080 <_Py_Dealloc@plt>
    7dd0:	mov	x0, x21
    7dd4:	ldp	x19, x20, [sp, #16]
    7dd8:	ldr	x21, [sp, #32]
    7ddc:	ldp	x29, x30, [sp], #48
    7de0:	ret
    7de4:	mov	x21, #0x0                   	// #0
    7de8:	bl	32b0 <PyErr_Occurred@plt>
    7dec:	cbnz	x0, 7d8c <PyNumber_FloorDivide@plt+0x492c>
    7df0:	mov	x0, x20
    7df4:	adrp	x2, 1b000 <_Py_log1p@@Base+0x13110>
    7df8:	adrp	x1, 1b000 <_Py_log1p@@Base+0x13110>
    7dfc:	mov	w3, #0x0                   	// #0
    7e00:	ldp	x19, x20, [sp, #16]
    7e04:	ldr	x21, [sp, #32]
    7e08:	ldp	x29, x30, [sp], #48
    7e0c:	ldr	x2, [x2, #3832]
    7e10:	ldr	x1, [x1, #3992]
    7e14:	b	5f20 <PyNumber_FloorDivide@plt+0x2ac0>

0000000000007e18 <PyInit_math@@Base>:
    7e18:	stp	x29, x30, [sp, #-32]!
    7e1c:	adrp	x0, 1c000 <_Py_log1p@@Base+0x14110>
    7e20:	add	x0, x0, #0x260
    7e24:	mov	x29, sp
    7e28:	add	x0, x0, #0xc8
    7e2c:	mov	w1, #0x3f5                 	// #1013
    7e30:	str	x19, [sp, #16]
    7e34:	bl	32c0 <PyModule_Create2@plt>
    7e38:	mov	x19, x0
    7e3c:	cbz	x0, 7ee0 <PyInit_math@@Base+0xc8>
    7e40:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7e44:	ldr	d0, [x0, #1120]
    7e48:	bl	31c0 <PyFloat_FromDouble@plt>
    7e4c:	mov	x2, x0
    7e50:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7e54:	mov	x0, x19
    7e58:	add	x1, x1, #0x258
    7e5c:	bl	3380 <PyModule_AddObject@plt>
    7e60:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7e64:	ldr	d0, [x0, #1200]
    7e68:	bl	31c0 <PyFloat_FromDouble@plt>
    7e6c:	mov	x2, x0
    7e70:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7e74:	mov	x0, x19
    7e78:	add	x1, x1, #0x260
    7e7c:	bl	3380 <PyModule_AddObject@plt>
    7e80:	adrp	x0, 8000 <_Py_log1p@@Base+0x110>
    7e84:	ldr	d0, [x0, #1208]
    7e88:	bl	31c0 <PyFloat_FromDouble@plt>
    7e8c:	mov	x2, x0
    7e90:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7e94:	mov	x0, x19
    7e98:	add	x1, x1, #0x268
    7e9c:	bl	3380 <PyModule_AddObject@plt>
    7ea0:	mov	w0, #0x0                   	// #0
    7ea4:	bl	3360 <_Py_dg_infinity@plt>
    7ea8:	bl	31c0 <PyFloat_FromDouble@plt>
    7eac:	mov	x2, x0
    7eb0:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7eb4:	mov	x0, x19
    7eb8:	add	x1, x1, #0x270
    7ebc:	bl	3380 <PyModule_AddObject@plt>
    7ec0:	mov	w0, #0x0                   	// #0
    7ec4:	bl	3240 <_Py_dg_stdnan@plt>
    7ec8:	bl	31c0 <PyFloat_FromDouble@plt>
    7ecc:	mov	x2, x0
    7ed0:	adrp	x1, 8000 <_Py_log1p@@Base+0x110>
    7ed4:	mov	x0, x19
    7ed8:	add	x1, x1, #0x278
    7edc:	bl	3380 <PyModule_AddObject@plt>
    7ee0:	mov	x0, x19
    7ee4:	ldr	x19, [sp, #16]
    7ee8:	ldp	x29, x30, [sp], #32
    7eec:	ret

0000000000007ef0 <_Py_log1p@@Base>:
    7ef0:	fcmp	d0, #0.0
    7ef4:	b.ne	7efc <_Py_log1p@@Base+0xc>  // b.any
    7ef8:	ret
    7efc:	b	3250 <log1p@plt>

Disassembly of section .fini:

0000000000007f00 <.fini>:
    7f00:	stp	x29, x30, [sp, #-16]!
    7f04:	mov	x29, sp
    7f08:	ldp	x29, x30, [sp], #16
    7f0c:	ret
