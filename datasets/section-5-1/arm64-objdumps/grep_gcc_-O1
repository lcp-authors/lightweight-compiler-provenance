
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402210 <.init>:
  402210:	stp	x29, x30, [sp, #-16]!
  402214:	mov	x29, sp
  402218:	bl	402930 <wcrtomb@plt+0x60>
  40221c:	ldp	x29, x30, [sp], #16
  402220:	ret

Disassembly of section .plt:

0000000000402230 <mbrtowc@plt-0x20>:
  402230:	stp	x16, x30, [sp, #-16]!
  402234:	adrp	x16, 43d000 <_obstack_memory_used@@Base+0x26218>
  402238:	ldr	x17, [x16, #4088]
  40223c:	add	x16, x16, #0xff8
  402240:	br	x17
  402244:	nop
  402248:	nop
  40224c:	nop

0000000000402250 <mbrtowc@plt>:
  402250:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402254:	ldr	x17, [x16]
  402258:	add	x16, x16, #0x0
  40225c:	br	x17

0000000000402260 <memcpy@plt>:
  402260:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402264:	ldr	x17, [x16, #8]
  402268:	add	x16, x16, #0x8
  40226c:	br	x17

0000000000402270 <sigaltstack@plt>:
  402270:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402274:	ldr	x17, [x16, #16]
  402278:	add	x16, x16, #0x10
  40227c:	br	x17

0000000000402280 <memmove@plt>:
  402280:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402284:	ldr	x17, [x16, #24]
  402288:	add	x16, x16, #0x18
  40228c:	br	x17

0000000000402290 <isalpha@plt>:
  402290:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402294:	ldr	x17, [x16, #32]
  402298:	add	x16, x16, #0x20
  40229c:	br	x17

00000000004022a0 <_exit@plt>:
  4022a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #40]
  4022a8:	add	x16, x16, #0x28
  4022ac:	br	x17

00000000004022b0 <fwrite_unlocked@plt>:
  4022b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #48]
  4022b8:	add	x16, x16, #0x30
  4022bc:	br	x17

00000000004022c0 <strlen@plt>:
  4022c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #56]
  4022c8:	add	x16, x16, #0x38
  4022cc:	br	x17

00000000004022d0 <fputs@plt>:
  4022d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #64]
  4022d8:	add	x16, x16, #0x40
  4022dc:	br	x17

00000000004022e0 <exit@plt>:
  4022e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #72]
  4022e8:	add	x16, x16, #0x48
  4022ec:	br	x17

00000000004022f0 <error@plt>:
  4022f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #80]
  4022f8:	add	x16, x16, #0x50
  4022fc:	br	x17

0000000000402300 <fchdir@plt>:
  402300:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402304:	ldr	x17, [x16, #88]
  402308:	add	x16, x16, #0x58
  40230c:	br	x17

0000000000402310 <wctype@plt>:
  402310:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16, #96]
  402318:	add	x16, x16, #0x60
  40231c:	br	x17

0000000000402320 <__cxa_atexit@plt>:
  402320:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #104]
  402328:	add	x16, x16, #0x68
  40232c:	br	x17

0000000000402330 <iswcntrl@plt>:
  402330:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #112]
  402338:	add	x16, x16, #0x70
  40233c:	br	x17

0000000000402340 <qsort@plt>:
  402340:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #120]
  402348:	add	x16, x16, #0x78
  40234c:	br	x17

0000000000402350 <isblank@plt>:
  402350:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #128]
  402358:	add	x16, x16, #0x80
  40235c:	br	x17

0000000000402360 <lseek@plt>:
  402360:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #136]
  402368:	add	x16, x16, #0x88
  40236c:	br	x17

0000000000402370 <__fpending@plt>:
  402370:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #144]
  402378:	add	x16, x16, #0x90
  40237c:	br	x17

0000000000402380 <__ctype_tolower_loc@plt>:
  402380:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #152]
  402388:	add	x16, x16, #0x98
  40238c:	br	x17

0000000000402390 <fclose@plt>:
  402390:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #160]
  402398:	add	x16, x16, #0xa0
  40239c:	br	x17

00000000004023a0 <wctob@plt>:
  4023a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #168]
  4023a8:	add	x16, x16, #0xa8
  4023ac:	br	x17

00000000004023b0 <nl_langinfo@plt>:
  4023b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #176]
  4023b8:	add	x16, x16, #0xb0
  4023bc:	br	x17

00000000004023c0 <fopen@plt>:
  4023c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #184]
  4023c8:	add	x16, x16, #0xb8
  4023cc:	br	x17

00000000004023d0 <isspace@plt>:
  4023d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #192]
  4023d8:	add	x16, x16, #0xc0
  4023dc:	br	x17

00000000004023e0 <iswctype@plt>:
  4023e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #200]
  4023e8:	add	x16, x16, #0xc8
  4023ec:	br	x17

00000000004023f0 <malloc@plt>:
  4023f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #208]
  4023f8:	add	x16, x16, #0xd0
  4023fc:	br	x17

0000000000402400 <wcwidth@plt>:
  402400:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #216]
  402408:	add	x16, x16, #0xd8
  40240c:	br	x17

0000000000402410 <open@plt>:
  402410:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #224]
  402418:	add	x16, x16, #0xe0
  40241c:	br	x17

0000000000402420 <splice@plt>:
  402420:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #232]
  402428:	add	x16, x16, #0xe8
  40242c:	br	x17

0000000000402430 <islower@plt>:
  402430:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #240]
  402438:	add	x16, x16, #0xf0
  40243c:	br	x17

0000000000402440 <isxdigit@plt>:
  402440:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #248]
  402448:	add	x16, x16, #0xf8
  40244c:	br	x17

0000000000402450 <__strtol_internal@plt>:
  402450:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #256]
  402458:	add	x16, x16, #0x100
  40245c:	br	x17

0000000000402460 <sigemptyset@plt>:
  402460:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #264]
  402468:	add	x16, x16, #0x108
  40246c:	br	x17

0000000000402470 <strncmp@plt>:
  402470:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #272]
  402478:	add	x16, x16, #0x110
  40247c:	br	x17

0000000000402480 <bindtextdomain@plt>:
  402480:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #280]
  402488:	add	x16, x16, #0x118
  40248c:	br	x17

0000000000402490 <isdigit@plt>:
  402490:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #288]
  402498:	add	x16, x16, #0x120
  40249c:	br	x17

00000000004024a0 <__libc_start_main@plt>:
  4024a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #296]
  4024a8:	add	x16, x16, #0x128
  4024ac:	br	x17

00000000004024b0 <fstatfs@plt>:
  4024b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #304]
  4024b8:	add	x16, x16, #0x130
  4024bc:	br	x17

00000000004024c0 <memset@plt>:
  4024c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #312]
  4024c8:	add	x16, x16, #0x138
  4024cc:	br	x17

00000000004024d0 <calloc@plt>:
  4024d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #320]
  4024d8:	add	x16, x16, #0x140
  4024dc:	br	x17

00000000004024e0 <isupper@plt>:
  4024e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #328]
  4024e8:	add	x16, x16, #0x148
  4024ec:	br	x17

00000000004024f0 <readdir@plt>:
  4024f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #336]
  4024f8:	add	x16, x16, #0x150
  4024fc:	br	x17

0000000000402500 <realloc@plt>:
  402500:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #344]
  402508:	add	x16, x16, #0x158
  40250c:	br	x17

0000000000402510 <__ctype_toupper_loc@plt>:
  402510:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #352]
  402518:	add	x16, x16, #0x160
  40251c:	br	x17

0000000000402520 <closedir@plt>:
  402520:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #360]
  402528:	add	x16, x16, #0x168
  40252c:	br	x17

0000000000402530 <close@plt>:
  402530:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #368]
  402538:	add	x16, x16, #0x170
  40253c:	br	x17

0000000000402540 <sigaction@plt>:
  402540:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #376]
  402548:	add	x16, x16, #0x178
  40254c:	br	x17

0000000000402550 <strrchr@plt>:
  402550:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #384]
  402558:	add	x16, x16, #0x180
  40255c:	br	x17

0000000000402560 <__gmon_start__@plt>:
  402560:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #392]
  402568:	add	x16, x16, #0x188
  40256c:	br	x17

0000000000402570 <fdopendir@plt>:
  402570:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #400]
  402578:	add	x16, x16, #0x190
  40257c:	br	x17

0000000000402580 <write@plt>:
  402580:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #408]
  402588:	add	x16, x16, #0x198
  40258c:	br	x17

0000000000402590 <btowc@plt>:
  402590:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #416]
  402598:	add	x16, x16, #0x1a0
  40259c:	br	x17

00000000004025a0 <abort@plt>:
  4025a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #424]
  4025a8:	add	x16, x16, #0x1a8
  4025ac:	br	x17

00000000004025b0 <iscntrl@plt>:
  4025b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #432]
  4025b8:	add	x16, x16, #0x1b0
  4025bc:	br	x17

00000000004025c0 <mbsinit@plt>:
  4025c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #440]
  4025c8:	add	x16, x16, #0x1b8
  4025cc:	br	x17

00000000004025d0 <__overflow@plt>:
  4025d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #448]
  4025d8:	add	x16, x16, #0x1c0
  4025dc:	br	x17

00000000004025e0 <ispunct@plt>:
  4025e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #456]
  4025e8:	add	x16, x16, #0x1c8
  4025ec:	br	x17

00000000004025f0 <puts@plt>:
  4025f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #464]
  4025f8:	add	x16, x16, #0x1d0
  4025fc:	br	x17

0000000000402600 <fread_unlocked@plt>:
  402600:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #472]
  402608:	add	x16, x16, #0x1d8
  40260c:	br	x17

0000000000402610 <memcmp@plt>:
  402610:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #480]
  402618:	add	x16, x16, #0x1e0
  40261c:	br	x17

0000000000402620 <textdomain@plt>:
  402620:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #488]
  402628:	add	x16, x16, #0x1e8
  40262c:	br	x17

0000000000402630 <getopt_long@plt>:
  402630:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #496]
  402638:	add	x16, x16, #0x1f0
  40263c:	br	x17

0000000000402640 <strcmp@plt>:
  402640:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #504]
  402648:	add	x16, x16, #0x1f8
  40264c:	br	x17

0000000000402650 <__ctype_b_loc@plt>:
  402650:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #512]
  402658:	add	x16, x16, #0x200
  40265c:	br	x17

0000000000402660 <free@plt>:
  402660:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #520]
  402668:	add	x16, x16, #0x208
  40266c:	br	x17

0000000000402670 <__ctype_get_mb_cur_max@plt>:
  402670:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #528]
  402678:	add	x16, x16, #0x210
  40267c:	br	x17

0000000000402680 <mempcpy@plt>:
  402680:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #536]
  402688:	add	x16, x16, #0x218
  40268c:	br	x17

0000000000402690 <strchr@plt>:
  402690:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #544]
  402698:	add	x16, x16, #0x220
  40269c:	br	x17

00000000004026a0 <memrchr@plt>:
  4026a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #552]
  4026a8:	add	x16, x16, #0x228
  4026ac:	br	x17

00000000004026b0 <fnmatch@plt>:
  4026b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #560]
  4026b8:	add	x16, x16, #0x230
  4026bc:	br	x17

00000000004026c0 <fflush_unlocked@plt>:
  4026c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #568]
  4026c8:	add	x16, x16, #0x238
  4026cc:	br	x17

00000000004026d0 <fcntl@plt>:
  4026d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #576]
  4026d8:	add	x16, x16, #0x240
  4026dc:	br	x17

00000000004026e0 <strcpy@plt>:
  4026e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #584]
  4026e8:	add	x16, x16, #0x248
  4026ec:	br	x17

00000000004026f0 <dirfd@plt>:
  4026f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #592]
  4026f8:	add	x16, x16, #0x250
  4026fc:	br	x17

0000000000402700 <__lxstat@plt>:
  402700:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #600]
  402708:	add	x16, x16, #0x258
  40270c:	br	x17

0000000000402710 <read@plt>:
  402710:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #608]
  402718:	add	x16, x16, #0x260
  40271c:	br	x17

0000000000402720 <memchr@plt>:
  402720:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #616]
  402728:	add	x16, x16, #0x268
  40272c:	br	x17

0000000000402730 <isatty@plt>:
  402730:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #624]
  402738:	add	x16, x16, #0x270
  40273c:	br	x17

0000000000402740 <sysconf@plt>:
  402740:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #632]
  402748:	add	x16, x16, #0x278
  40274c:	br	x17

0000000000402750 <fputc_unlocked@plt>:
  402750:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #640]
  402758:	add	x16, x16, #0x280
  40275c:	br	x17

0000000000402760 <isgraph@plt>:
  402760:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #648]
  402768:	add	x16, x16, #0x288
  40276c:	br	x17

0000000000402770 <iswalnum@plt>:
  402770:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #656]
  402778:	add	x16, x16, #0x290
  40277c:	br	x17

0000000000402780 <__fxstat@plt>:
  402780:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #664]
  402788:	add	x16, x16, #0x298
  40278c:	br	x17

0000000000402790 <strstr@plt>:
  402790:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #672]
  402798:	add	x16, x16, #0x2a0
  40279c:	br	x17

00000000004027a0 <dcgettext@plt>:
  4027a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #680]
  4027a8:	add	x16, x16, #0x2a8
  4027ac:	br	x17

00000000004027b0 <fputs_unlocked@plt>:
  4027b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #688]
  4027b8:	add	x16, x16, #0x2b0
  4027bc:	br	x17

00000000004027c0 <strcoll@plt>:
  4027c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #696]
  4027c8:	add	x16, x16, #0x2b8
  4027cc:	br	x17

00000000004027d0 <isalnum@plt>:
  4027d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #704]
  4027d8:	add	x16, x16, #0x2c0
  4027dc:	br	x17

00000000004027e0 <towupper@plt>:
  4027e0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #712]
  4027e8:	add	x16, x16, #0x2c8
  4027ec:	br	x17

00000000004027f0 <iswprint@plt>:
  4027f0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #720]
  4027f8:	add	x16, x16, #0x2d0
  4027fc:	br	x17

0000000000402800 <vfprintf@plt>:
  402800:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #728]
  402808:	add	x16, x16, #0x2d8
  40280c:	br	x17

0000000000402810 <openat@plt>:
  402810:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #736]
  402818:	add	x16, x16, #0x2e0
  40281c:	br	x17

0000000000402820 <printf@plt>:
  402820:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #744]
  402828:	add	x16, x16, #0x2e8
  40282c:	br	x17

0000000000402830 <__assert_fail@plt>:
  402830:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #752]
  402838:	add	x16, x16, #0x2f0
  40283c:	br	x17

0000000000402840 <__errno_location@plt>:
  402840:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #760]
  402848:	add	x16, x16, #0x2f8
  40284c:	br	x17

0000000000402850 <getenv@plt>:
  402850:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #768]
  402858:	add	x16, x16, #0x300
  40285c:	br	x17

0000000000402860 <__xstat@plt>:
  402860:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #776]
  402868:	add	x16, x16, #0x308
  40286c:	br	x17

0000000000402870 <towlower@plt>:
  402870:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #784]
  402878:	add	x16, x16, #0x310
  40287c:	br	x17

0000000000402880 <fprintf@plt>:
  402880:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402884:	ldr	x17, [x16, #792]
  402888:	add	x16, x16, #0x318
  40288c:	br	x17

0000000000402890 <__uflow@plt>:
  402890:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  402894:	ldr	x17, [x16, #800]
  402898:	add	x16, x16, #0x320
  40289c:	br	x17

00000000004028a0 <isprint@plt>:
  4028a0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028a4:	ldr	x17, [x16, #808]
  4028a8:	add	x16, x16, #0x328
  4028ac:	br	x17

00000000004028b0 <setlocale@plt>:
  4028b0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028b4:	ldr	x17, [x16, #816]
  4028b8:	add	x16, x16, #0x330
  4028bc:	br	x17

00000000004028c0 <__fxstatat@plt>:
  4028c0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028c4:	ldr	x17, [x16, #824]
  4028c8:	add	x16, x16, #0x338
  4028cc:	br	x17

00000000004028d0 <wcrtomb@plt>:
  4028d0:	adrp	x16, 43e000 <mbrtowc@GLIBC_2.17>
  4028d4:	ldr	x17, [x16, #832]
  4028d8:	add	x16, x16, #0x340
  4028dc:	br	x17

Disassembly of section .text:

00000000004028e0 <_obstack_begin@@Base-0x142e4>:
  4028e0:	mov	x29, #0x0                   	// #0
  4028e4:	mov	x30, #0x0                   	// #0
  4028e8:	mov	x5, x0
  4028ec:	ldr	x1, [sp]
  4028f0:	add	x2, sp, #0x8
  4028f4:	mov	x6, sp
  4028f8:	movz	x0, #0x0, lsl #48
  4028fc:	movk	x0, #0x0, lsl #32
  402900:	movk	x0, #0x40, lsl #16
  402904:	movk	x0, #0x606c
  402908:	movz	x3, #0x0, lsl #48
  40290c:	movk	x3, #0x0, lsl #32
  402910:	movk	x3, #0x42, lsl #16
  402914:	movk	x3, #0x3de8
  402918:	movz	x4, #0x0, lsl #48
  40291c:	movk	x4, #0x0, lsl #32
  402920:	movk	x4, #0x42, lsl #16
  402924:	movk	x4, #0x3e68
  402928:	bl	4024a0 <__libc_start_main@plt>
  40292c:	bl	4025a0 <abort@plt>
  402930:	adrp	x0, 43d000 <_obstack_memory_used@@Base+0x26218>
  402934:	ldr	x0, [x0, #4064]
  402938:	cbz	x0, 402940 <wcrtomb@plt+0x70>
  40293c:	b	402560 <__gmon_start__@plt>
  402940:	ret
  402944:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  402948:	add	x0, x0, #0x430
  40294c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  402950:	add	x1, x1, #0x430
  402954:	cmp	x0, x1
  402958:	b.eq	40298c <wcrtomb@plt+0xbc>  // b.none
  40295c:	stp	x29, x30, [sp, #-32]!
  402960:	mov	x29, sp
  402964:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  402968:	ldr	x0, [x0, #3736]
  40296c:	str	x0, [sp, #24]
  402970:	mov	x1, x0
  402974:	cbz	x1, 402984 <wcrtomb@plt+0xb4>
  402978:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40297c:	add	x0, x0, #0x430
  402980:	blr	x1
  402984:	ldp	x29, x30, [sp], #32
  402988:	ret
  40298c:	ret
  402990:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  402994:	add	x0, x0, #0x430
  402998:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40299c:	add	x1, x1, #0x430
  4029a0:	sub	x0, x0, x1
  4029a4:	lsr	x1, x0, #63
  4029a8:	add	x0, x1, x0, asr #3
  4029ac:	cmp	xzr, x0, asr #1
  4029b0:	b.eq	4029e8 <wcrtomb@plt+0x118>  // b.none
  4029b4:	stp	x29, x30, [sp, #-32]!
  4029b8:	mov	x29, sp
  4029bc:	asr	x1, x0, #1
  4029c0:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  4029c4:	ldr	x0, [x0, #3744]
  4029c8:	str	x0, [sp, #24]
  4029cc:	mov	x2, x0
  4029d0:	cbz	x2, 4029e0 <wcrtomb@plt+0x110>
  4029d4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4029d8:	add	x0, x0, #0x430
  4029dc:	blr	x2
  4029e0:	ldp	x29, x30, [sp], #32
  4029e4:	ret
  4029e8:	ret
  4029ec:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4029f0:	ldrb	w0, [x0, #1120]
  4029f4:	cbnz	w0, 402a18 <wcrtomb@plt+0x148>
  4029f8:	stp	x29, x30, [sp, #-16]!
  4029fc:	mov	x29, sp
  402a00:	bl	402944 <wcrtomb@plt+0x74>
  402a04:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  402a08:	mov	w1, #0x1                   	// #1
  402a0c:	strb	w1, [x0, #1120]
  402a10:	ldp	x29, x30, [sp], #16
  402a14:	ret
  402a18:	ret
  402a1c:	stp	x29, x30, [sp, #-16]!
  402a20:	mov	x29, sp
  402a24:	bl	402990 <wcrtomb@plt+0xc0>
  402a28:	ldp	x29, x30, [sp], #16
  402a2c:	ret
  402a30:	stp	x29, x30, [sp, #-128]!
  402a34:	mov	x29, sp
  402a38:	stp	x19, x20, [sp, #16]
  402a3c:	stp	x21, x22, [sp, #32]
  402a40:	mov	x21, x1
  402a44:	mov	x22, x2
  402a48:	mov	x19, x4
  402a4c:	tst	w5, #0xff
  402a50:	b.ne	402ac8 <wcrtomb@plt+0x1f8>  // b.any
  402a54:	lsl	x3, x3, #6
  402a58:	ldr	x0, [x0, #16]
  402a5c:	add	x20, x0, x3
  402a60:	str	xzr, [x0, x3]
  402a64:	str	xzr, [x20, #8]
  402a68:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402a6c:	ldrb	w1, [x0, #3542]
  402a70:	mov	x0, #0x0                   	// #0
  402a74:	cbnz	w1, 402ad8 <wcrtomb@plt+0x208>
  402a78:	mov	x0, #0x100                 	// #256
  402a7c:	bl	413fec <wcrtomb@plt+0x1171c>
  402a80:	b	402ad8 <wcrtomb@plt+0x208>
  402a84:	add	x1, sp, #0x38
  402a88:	add	x0, x19, #0x1
  402a8c:	bl	405c9c <wcrtomb@plt+0x33cc>
  402a90:	mov	x3, x0
  402a94:	ldrb	w0, [x0]
  402a98:	cbz	w0, 402b00 <wcrtomb@plt+0x230>
  402a9c:	mov	x5, x20
  402aa0:	ldr	x4, [sp, #56]
  402aa4:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  402aa8:	add	x2, x2, #0xea8
  402aac:	mov	w1, #0x0                   	// #0
  402ab0:	mov	w0, #0x0                   	// #0
  402ab4:	bl	4022f0 <error@plt>
  402ab8:	mov	w0, #0x0                   	// #0
  402abc:	b	402b1c <wcrtomb@plt+0x24c>
  402ac0:	mov	w0, #0x1                   	// #1
  402ac4:	b	402b1c <wcrtomb@plt+0x24c>
  402ac8:	str	xzr, [sp, #64]
  402acc:	str	xzr, [sp, #72]
  402ad0:	add	x20, sp, #0x40
  402ad4:	mov	x0, #0x0                   	// #0
  402ad8:	str	x0, [x20, #32]
  402adc:	str	xzr, [x20, #40]
  402ae0:	mov	x2, x20
  402ae4:	mov	x1, x22
  402ae8:	mov	x0, x21
  402aec:	bl	422d20 <_obstack_memory_used@@Base+0xbf38>
  402af0:	mov	x20, x0
  402af4:	cbz	x0, 402ac0 <wcrtomb@plt+0x1f0>
  402af8:	str	x19, [sp, #56]
  402afc:	tbz	x19, #63, 402a84 <wcrtomb@plt+0x1b4>
  402b00:	mov	x3, x20
  402b04:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  402b08:	add	x2, x2, #0xeb0
  402b0c:	mov	w1, #0x0                   	// #0
  402b10:	mov	w0, #0x0                   	// #0
  402b14:	bl	4022f0 <error@plt>
  402b18:	mov	w0, #0x0                   	// #0
  402b1c:	ldp	x19, x20, [sp, #16]
  402b20:	ldp	x21, x22, [sp, #32]
  402b24:	ldp	x29, x30, [sp], #128
  402b28:	ret
  402b2c:	stp	x29, x30, [sp, #-16]!
  402b30:	mov	x29, sp
  402b34:	mov	x3, x0
  402b38:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  402b3c:	add	x2, x2, #0xeb0
  402b40:	mov	w1, #0x0                   	// #0
  402b44:	mov	w0, #0x2                   	// #2
  402b48:	bl	4022f0 <error@plt>
  402b4c:	stp	x29, x30, [sp, #-32]!
  402b50:	mov	x29, sp
  402b54:	str	x19, [sp, #16]
  402b58:	mov	x19, x0
  402b5c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  402b60:	add	x0, x0, #0xeb8
  402b64:	bl	402850 <getenv@plt>
  402b68:	cbz	x0, 402b78 <wcrtomb@plt+0x2a8>
  402b6c:	ldr	x19, [sp, #16]
  402b70:	ldp	x29, x30, [sp], #32
  402b74:	ret
  402b78:	mov	x0, x19
  402b7c:	bl	402b2c <wcrtomb@plt+0x25c>
  402b80:	stp	x29, x30, [sp, #-192]!
  402b84:	mov	x29, sp
  402b88:	stp	x19, x20, [sp, #16]
  402b8c:	stp	x21, x22, [sp, #32]
  402b90:	stp	x23, x24, [sp, #48]
  402b94:	stp	x25, x26, [sp, #64]
  402b98:	stp	x27, x28, [sp, #80]
  402b9c:	mov	x22, x0
  402ba0:	str	x0, [sp, #160]
  402ba4:	mov	x24, x1
  402ba8:	str	x1, [sp, #152]
  402bac:	mov	x19, x2
  402bb0:	mov	x1, #0x48                  	// #72
  402bb4:	mov	x0, #0x1                   	// #1
  402bb8:	bl	4141b4 <wcrtomb@plt+0x118e4>
  402bbc:	mov	x20, x0
  402bc0:	bl	40f208 <wcrtomb@plt+0xc938>
  402bc4:	str	x0, [x20, #8]
  402bc8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402bcc:	ldrb	w1, [x0, #3542]
  402bd0:	orr	x0, x19, #0x400000
  402bd4:	cmp	w1, #0x0
  402bd8:	csel	x23, x0, x19, ne  // ne = any
  402bdc:	str	x23, [sp, #168]
  402be0:	mov	x0, x23
  402be4:	bl	422d90 <_obstack_memory_used@@Base+0xbfa8>
  402be8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402bec:	ldrb	w0, [x0, #2248]
  402bf0:	cmp	w0, #0x0
  402bf4:	cset	w3, eq  // eq = none
  402bf8:	adrp	x19, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402bfc:	add	x21, x19, #0x8d0
  402c00:	lsl	w3, w3, #1
  402c04:	mov	x2, x23
  402c08:	mov	x1, x21
  402c0c:	ldr	x0, [x20, #8]
  402c10:	bl	40f5c4 <wcrtomb@plt+0xccf4>
  402c14:	ldrb	w19, [x19, #2256]
  402c18:	eor	w19, w19, #0x1
  402c1c:	ldrb	w0, [x21, #2]
  402c20:	orr	w19, w19, w0
  402c24:	and	w19, w19, #0xff
  402c28:	add	x0, x22, x24
  402c2c:	str	x0, [sp, #128]
  402c30:	mov	x0, #0x40                  	// #64
  402c34:	bl	413fec <wcrtomb@plt+0x1171c>
  402c38:	add	x0, x0, #0x40
  402c3c:	str	x0, [x20, #16]
  402c40:	str	xzr, [x20, #24]
  402c44:	str	xzr, [sp, #184]
  402c48:	sxtb	w19, w19
  402c4c:	cmp	w19, #0x0
  402c50:	mov	w26, #0x5c                  	// #92
  402c54:	mov	w0, #0x100                 	// #256
  402c58:	csel	w26, w26, w0, ne  // ne = any
  402c5c:	str	x22, [sp, #120]
  402c60:	mov	x27, x22
  402c64:	mov	x19, #0x1                   	// #1
  402c68:	mov	x28, #0x0                   	// #0
  402c6c:	str	xzr, [sp, #136]
  402c70:	mov	x22, #0x0                   	// #0
  402c74:	str	wzr, [sp, #108]
  402c78:	mov	w25, #0x5c                  	// #92
  402c7c:	mov	x24, #0x5555555555555555    	// #6148914691236517205
  402c80:	movk	x24, #0x155, lsl #48
  402c84:	b	402de0 <wcrtomb@plt+0x510>
  402c88:	add	x0, x0, #0x1
  402c8c:	sub	x2, x21, x0
  402c90:	mov	w1, w25
  402c94:	bl	402720 <memchr@plt>
  402c98:	cbz	x0, 402ccc <wcrtomb@plt+0x3fc>
  402c9c:	ldrb	w2, [x0, #1]
  402ca0:	sub	w1, w2, #0x31
  402ca4:	and	w1, w1, #0xff
  402ca8:	cmp	w1, #0x8
  402cac:	b.ls	402cd4 <wcrtomb@plt+0x404>  // b.plast
  402cb0:	cmp	w2, w26
  402cb4:	b.ne	402c88 <wcrtomb@plt+0x3b8>  // b.any
  402cb8:	add	x0, x0, #0x1
  402cbc:	cmp	x21, x0
  402cc0:	b.ne	402c88 <wcrtomb@plt+0x3b8>  // b.any
  402cc4:	str	wzr, [sp, #96]
  402cc8:	b	402d48 <wcrtomb@plt+0x478>
  402ccc:	str	wzr, [sp, #96]
  402cd0:	b	402d48 <wcrtomb@plt+0x478>
  402cd4:	ldr	x0, [sp, #120]
  402cd8:	cmp	x27, x0
  402cdc:	b.ls	402e24 <wcrtomb@plt+0x554>  // b.plast
  402ce0:	sub	x0, x27, x0
  402ce4:	str	x0, [sp, #96]
  402ce8:	ldr	x1, [sp, #136]
  402cec:	add	x0, x1, x0
  402cf0:	mov	x1, x0
  402cf4:	str	x0, [sp, #144]
  402cf8:	mov	x21, x0
  402cfc:	ldr	x0, [sp, #184]
  402d00:	cmp	x1, x0
  402d04:	b.ls	402d24 <wcrtomb@plt+0x454>  // b.plast
  402d08:	add	x1, sp, #0xb8
  402d0c:	mov	x0, x22
  402d10:	bl	414160 <wcrtomb@plt+0x11890>
  402d14:	mov	x22, x0
  402d18:	ldr	x0, [sp, #184]
  402d1c:	cmp	x0, x21
  402d20:	b.cc	402d08 <wcrtomb@plt+0x438>  // b.lo, b.ul, b.last
  402d24:	ldr	x2, [sp, #96]
  402d28:	ldr	x1, [sp, #120]
  402d2c:	ldr	x0, [sp, #136]
  402d30:	add	x0, x22, x0
  402d34:	bl	402260 <memcpy@plt>
  402d38:	ldr	x0, [sp, #144]
  402d3c:	str	x0, [sp, #136]
  402d40:	mov	w0, #0x1                   	// #1
  402d44:	str	w0, [sp, #96]
  402d48:	ldr	x3, [x20, #24]
  402d4c:	add	x0, x3, #0x1
  402d50:	cmp	x19, x0
  402d54:	b.hi	402d94 <wcrtomb@plt+0x4c4>  // b.pmore
  402d58:	ldr	x0, [x20, #16]
  402d5c:	sub	x0, x0, #0x40
  402d60:	cmp	x19, x24
  402d64:	b.cs	402e30 <wcrtomb@plt+0x560>  // b.hs, b.nlast
  402d68:	lsr	x1, x19, #1
  402d6c:	add	x1, x1, #0x1
  402d70:	add	x19, x19, x1
  402d74:	lsl	x1, x19, #6
  402d78:	bl	414068 <wcrtomb@plt+0x11798>
  402d7c:	add	x0, x0, #0x40
  402d80:	str	x0, [x20, #16]
  402d84:	ldr	x3, [x20, #24]
  402d88:	add	x0, x3, #0x1
  402d8c:	cmp	x0, x19
  402d90:	b.cs	402d58 <wcrtomb@plt+0x488>  // b.hs, b.nlast
  402d94:	ldr	w21, [sp, #96]
  402d98:	eor	w5, w21, #0x1
  402d9c:	mov	x4, x28
  402da0:	ldr	x2, [sp, #112]
  402da4:	mov	x1, x27
  402da8:	mov	x0, x20
  402dac:	bl	402a30 <wcrtomb@plt+0x160>
  402db0:	ands	w0, w0, #0xff
  402db4:	ldr	w0, [sp, #108]
  402db8:	csinc	w0, w0, wzr, ne  // ne = any
  402dbc:	str	w0, [sp, #108]
  402dc0:	add	x28, x28, #0x1
  402dc4:	cbz	w21, 402dd8 <wcrtomb@plt+0x508>
  402dc8:	ldr	x0, [x20, #24]
  402dcc:	add	x0, x0, #0x1
  402dd0:	str	x0, [x20, #24]
  402dd4:	str	x23, [sp, #120]
  402dd8:	cbz	x23, 402e34 <wcrtomb@plt+0x564>
  402ddc:	mov	x27, x23
  402de0:	ldr	x0, [sp, #128]
  402de4:	sub	x21, x0, x27
  402de8:	mov	x2, x21
  402dec:	mov	w1, #0xa                   	// #10
  402df0:	mov	x0, x27
  402df4:	bl	402720 <memchr@plt>
  402df8:	mov	x23, x0
  402dfc:	cbz	x0, 402e08 <wcrtomb@plt+0x538>
  402e00:	sub	x21, x0, x27
  402e04:	add	x23, x0, #0x1
  402e08:	str	x21, [sp, #112]
  402e0c:	str	wzr, [sp, #96]
  402e10:	subs	x21, x21, #0x1
  402e14:	b.mi	402d48 <wcrtomb@plt+0x478>  // b.first
  402e18:	add	x21, x27, x21
  402e1c:	mov	x0, x27
  402e20:	b	402c8c <wcrtomb@plt+0x3bc>
  402e24:	mov	w0, #0x1                   	// #1
  402e28:	str	w0, [sp, #96]
  402e2c:	b	402d48 <wcrtomb@plt+0x478>
  402e30:	bl	414264 <wcrtomb@plt+0x11994>
  402e34:	ldr	w0, [sp, #108]
  402e38:	cbnz	w0, 402f44 <wcrtomb@plt+0x674>
  402e3c:	ldr	x0, [sp, #120]
  402e40:	cbz	x0, 402e5c <wcrtomb@plt+0x58c>
  402e44:	ldr	x1, [sp, #160]
  402e48:	cmp	x0, x1
  402e4c:	b.hi	402f4c <wcrtomb@plt+0x67c>  // b.pmore
  402e50:	ldr	x0, [sp, #152]
  402e54:	str	x0, [sp, #136]
  402e58:	ldr	x22, [sp, #160]
  402e5c:	cbz	x22, 402eb0 <wcrtomb@plt+0x5e0>
  402e60:	ldr	x0, [x20, #16]
  402e64:	sub	x0, x0, #0x40
  402e68:	str	x0, [x20, #16]
  402e6c:	ldr	x0, [x20, #24]
  402e70:	add	x0, x0, #0x1
  402e74:	str	x0, [x20, #24]
  402e78:	mov	w5, #0x0                   	// #0
  402e7c:	mov	x4, #0xffffffffffffffff    	// #-1
  402e80:	mov	x3, #0x0                   	// #0
  402e84:	ldr	x2, [sp, #136]
  402e88:	mov	x1, x22
  402e8c:	mov	x0, x20
  402e90:	bl	402a30 <wcrtomb@plt+0x160>
  402e94:	and	w0, w0, #0xff
  402e98:	cbz	w0, 402f88 <wcrtomb@plt+0x6b8>
  402e9c:	ldr	x0, [sp, #160]
  402ea0:	cmp	x22, x0
  402ea4:	b.eq	402eb0 <wcrtomb@plt+0x5e0>  // b.none
  402ea8:	mov	x0, x22
  402eac:	bl	402660 <free@plt>
  402eb0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402eb4:	ldrb	w0, [x0, #3540]
  402eb8:	cbnz	w0, 402ecc <wcrtomb@plt+0x5fc>
  402ebc:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402ec0:	ldrb	w0, [x0, #3541]
  402ec4:	ldr	x21, [sp, #160]
  402ec8:	cbz	w0, 40305c <wcrtomb@plt+0x78c>
  402ecc:	ldr	x0, [sp, #168]
  402ed0:	and	x19, x0, #0x2000
  402ed4:	ldr	x0, [sp, #152]
  402ed8:	add	x0, x0, #0x2d
  402edc:	bl	413fec <wcrtomb@plt+0x1171c>
  402ee0:	mov	x21, x0
  402ee4:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  402ee8:	ldrb	w0, [x0, #3541]
  402eec:	cbz	w0, 402f8c <wcrtomb@plt+0x6bc>
  402ef0:	cbz	x19, 403000 <wcrtomb@plt+0x730>
  402ef4:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  402ef8:	add	x0, x0, #0xec8
  402efc:	ldrh	w1, [x0]
  402f00:	strh	w1, [x21]
  402f04:	ldrb	w0, [x0, #2]
  402f08:	strb	w0, [x21, #2]
  402f0c:	mov	x0, x21
  402f10:	bl	4022c0 <strlen@plt>
  402f14:	mov	x19, x0
  402f18:	ldr	x22, [sp, #152]
  402f1c:	mov	x2, x22
  402f20:	ldr	x1, [sp, #160]
  402f24:	add	x0, x21, x0
  402f28:	bl	402260 <memcpy@plt>
  402f2c:	add	x19, x22, x19
  402f30:	add	x22, x21, x19
  402f34:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  402f38:	add	x1, x1, #0xf00
  402f3c:	add	x1, x1, #0x18
  402f40:	b	403040 <wcrtomb@plt+0x770>
  402f44:	mov	w0, #0x2                   	// #2
  402f48:	bl	4022e0 <exit@plt>
  402f4c:	ldr	x0, [sp, #128]
  402f50:	ldr	x24, [sp, #120]
  402f54:	sub	x21, x0, x24
  402f58:	ldr	x25, [sp, #136]
  402f5c:	add	x19, x25, x21
  402f60:	mov	x1, x19
  402f64:	mov	x0, x22
  402f68:	bl	414068 <wcrtomb@plt+0x11798>
  402f6c:	mov	x22, x0
  402f70:	mov	x2, x21
  402f74:	mov	x1, x24
  402f78:	add	x0, x0, x25
  402f7c:	bl	402260 <memcpy@plt>
  402f80:	str	x19, [sp, #136]
  402f84:	b	402e5c <wcrtomb@plt+0x58c>
  402f88:	bl	4025a0 <abort@plt>
  402f8c:	cbz	x19, 40316c <wcrtomb@plt+0x89c>
  402f90:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  402f94:	add	x0, x0, #0xed0
  402f98:	ldp	x2, x3, [x0]
  402f9c:	stp	x2, x3, [x21]
  402fa0:	ldur	w0, [x0, #15]
  402fa4:	stur	w0, [x21, #15]
  402fa8:	mov	x0, x21
  402fac:	bl	4022c0 <strlen@plt>
  402fb0:	mov	x19, x0
  402fb4:	ldr	x22, [sp, #152]
  402fb8:	mov	x2, x22
  402fbc:	ldr	x1, [sp, #160]
  402fc0:	add	x0, x21, x0
  402fc4:	bl	402260 <memcpy@plt>
  402fc8:	add	x19, x22, x19
  402fcc:	add	x22, x21, x19
  402fd0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  402fd4:	add	x1, x1, #0xf00
  402fd8:	add	x1, x1, #0x20
  402fdc:	b	403040 <wcrtomb@plt+0x770>
  402fe0:	add	x22, x19, #0x3
  402fe4:	mov	x0, x22
  402fe8:	bl	4022c0 <strlen@plt>
  402fec:	mov	x2, x0
  402ff0:	mov	x1, x22
  402ff4:	mov	x0, x21
  402ff8:	bl	408990 <wcrtomb@plt+0x60c0>
  402ffc:	b	403120 <wcrtomb@plt+0x850>
  403000:	mov	w0, #0x5c5e                	// #23646
  403004:	movk	w0, #0x28, lsl #16
  403008:	str	w0, [x21]
  40300c:	mov	x0, x21
  403010:	bl	4022c0 <strlen@plt>
  403014:	mov	x19, x0
  403018:	ldr	x22, [sp, #152]
  40301c:	mov	x2, x22
  403020:	ldr	x1, [sp, #160]
  403024:	add	x0, x21, x0
  403028:	bl	402260 <memcpy@plt>
  40302c:	add	x19, x19, x22
  403030:	add	x22, x21, x19
  403034:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  403038:	add	x1, x1, #0xf00
  40303c:	add	x1, x1, #0x38
  403040:	mov	x0, x22
  403044:	bl	4026e0 <strcpy@plt>
  403048:	mov	x0, x22
  40304c:	bl	4022c0 <strlen@plt>
  403050:	add	x0, x0, x19
  403054:	str	x0, [sp, #152]
  403058:	mov	x23, x21
  40305c:	ldr	x2, [x20, #8]
  403060:	ldr	x1, [sp, #152]
  403064:	mov	x0, x21
  403068:	bl	40e610 <wcrtomb@plt+0xbd40>
  40306c:	ldr	x0, [x20, #8]
  403070:	bl	40e888 <wcrtomb@plt+0xbfb8>
  403074:	mov	x19, x0
  403078:	cbz	x0, 403130 <wcrtomb@plt+0x860>
  40307c:	mov	w0, #0x0                   	// #0
  403080:	bl	409504 <wcrtomb@plt+0x6c34>
  403084:	mov	x21, x0
  403088:	str	x0, [x20]
  40308c:	ldrb	w0, [x19]
  403090:	cbz	w0, 402fe0 <wcrtomb@plt+0x710>
  403094:	ldr	x0, [x20, #56]
  403098:	add	x0, x0, #0x1
  40309c:	str	x0, [x20, #56]
  4030a0:	add	x25, x19, #0x3
  4030a4:	mov	x0, x25
  4030a8:	bl	4022c0 <strlen@plt>
  4030ac:	mov	x24, x0
  4030b0:	ldrb	w22, [x19, #1]
  4030b4:	add	x22, x22, x0
  4030b8:	ldrb	w0, [x19, #2]
  4030bc:	add	x22, x22, x0
  4030c0:	mov	x0, x22
  4030c4:	bl	413fec <wcrtomb@plt+0x1171c>
  4030c8:	mov	x21, x0
  4030cc:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4030d0:	ldrb	w27, [x0, #2248]
  4030d4:	strb	w27, [x21]
  4030d8:	ldrb	w0, [x19, #1]
  4030dc:	add	x26, x21, w0, uxtb
  4030e0:	ldrb	w1, [x20, #64]
  4030e4:	orr	w0, w0, w1
  4030e8:	strb	w0, [x20, #64]
  4030ec:	mov	x2, x24
  4030f0:	mov	x1, x25
  4030f4:	mov	x0, x26
  4030f8:	bl	402260 <memcpy@plt>
  4030fc:	ldrb	w0, [x19, #2]
  403100:	cbz	w0, 403108 <wcrtomb@plt+0x838>
  403104:	strb	w27, [x26, x24]
  403108:	mov	x2, x22
  40310c:	mov	x1, x21
  403110:	ldr	x0, [x20]
  403114:	bl	408990 <wcrtomb@plt+0x60c0>
  403118:	mov	x0, x21
  40311c:	bl	402660 <free@plt>
  403120:	ldr	x0, [x20]
  403124:	bl	408e20 <wcrtomb@plt+0x6550>
  403128:	mov	x0, x19
  40312c:	bl	40f1f4 <wcrtomb@plt+0xc924>
  403130:	mov	w3, #0x1                   	// #1
  403134:	ldr	x2, [x20, #8]
  403138:	mov	x1, #0x0                   	// #0
  40313c:	mov	x0, #0x0                   	// #0
  403140:	bl	40f220 <wcrtomb@plt+0xc950>
  403144:	mov	x0, x23
  403148:	bl	402660 <free@plt>
  40314c:	mov	x0, x20
  403150:	ldp	x19, x20, [sp, #16]
  403154:	ldp	x21, x22, [sp, #32]
  403158:	ldp	x23, x24, [sp, #48]
  40315c:	ldp	x25, x26, [sp, #64]
  403160:	ldp	x27, x28, [sp, #80]
  403164:	ldp	x29, x30, [sp], #192
  403168:	ret
  40316c:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  403170:	add	x0, x0, #0xee8
  403174:	ldp	x2, x3, [x0]
  403178:	stp	x2, x3, [x21]
  40317c:	ldur	x0, [x0, #15]
  403180:	stur	x0, [x21, #15]
  403184:	mov	x0, x21
  403188:	bl	4022c0 <strlen@plt>
  40318c:	mov	x19, x0
  403190:	ldr	x22, [sp, #152]
  403194:	mov	x2, x22
  403198:	ldr	x1, [sp, #160]
  40319c:	add	x0, x21, x0
  4031a0:	bl	402260 <memcpy@plt>
  4031a4:	add	x19, x22, x19
  4031a8:	add	x22, x21, x19
  4031ac:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  4031b0:	add	x1, x1, #0xf00
  4031b4:	b	403040 <wcrtomb@plt+0x770>
  4031b8:	stp	x29, x30, [sp, #-256]!
  4031bc:	mov	x29, sp
  4031c0:	stp	x19, x20, [sp, #16]
  4031c4:	stp	x21, x22, [sp, #32]
  4031c8:	mov	x19, x0
  4031cc:	mov	x22, x1
  4031d0:	str	x1, [sp, #176]
  4031d4:	mov	x20, x2
  4031d8:	str	x3, [sp, #200]
  4031dc:	str	x4, [sp, #112]
  4031e0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4031e4:	ldrb	w0, [x0, #2248]
  4031e8:	str	w0, [sp, #192]
  4031ec:	ldr	x21, [x19, #8]
  4031f0:	mov	x0, x21
  4031f4:	bl	40e714 <wcrtomb@plt+0xbe44>
  4031f8:	str	x0, [sp, #184]
  4031fc:	mov	x0, x21
  403200:	bl	40e71c <wcrtomb@plt+0xbe4c>
  403204:	and	w0, w0, #0xff
  403208:	str	w0, [sp, #196]
  40320c:	str	x22, [sp, #248]
  403210:	add	x0, x22, x20
  403214:	str	x0, [sp, #160]
  403218:	cmp	x22, x0
  40321c:	b.cs	403610 <wcrtomb@plt+0xd40>  // b.hs, b.nlast
  403220:	stp	x23, x24, [sp, #48]
  403224:	stp	x25, x26, [sp, #64]
  403228:	stp	x27, x28, [sp, #80]
  40322c:	str	x22, [sp, #136]
  403230:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  403234:	add	x28, x0, #0x8c8
  403238:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40323c:	add	x0, x0, #0xdd5
  403240:	str	x0, [sp, #120]
  403244:	b	40354c <wcrtomb@plt+0xc7c>
  403248:	mov	x0, #0xffffffffffffffff    	// #-1
  40324c:	ldp	x23, x24, [sp, #48]
  403250:	ldp	x25, x26, [sp, #64]
  403254:	ldp	x27, x28, [sp, #80]
  403258:	b	403428 <wcrtomb@plt+0xb58>
  40325c:	ldr	x0, [sp, #160]
  403260:	sub	x2, x0, x21
  403264:	ldr	w1, [sp, #192]
  403268:	mov	x0, x21
  40326c:	bl	402720 <memchr@plt>
  403270:	cbz	x0, 4032d4 <wcrtomb@plt+0xa04>
  403274:	add	x20, x0, #0x1
  403278:	cmp	x23, x24
  40327c:	b.ge	4033dc <wcrtomb@plt+0xb0c>  // b.tcont
  403280:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  403284:	add	x1, x0, #0x8d0
  403288:	ldrb	w0, [x0, #2256]
  40328c:	eor	w0, w0, #0x1
  403290:	ldrb	w1, [x1, #2]
  403294:	orr	w0, w0, w1
  403298:	tst	w0, #0xff
  40329c:	b.ne	4033f8 <wcrtomb@plt+0xb28>  // b.any
  4032a0:	ldr	x0, [sp, #248]
  4032a4:	cmp	x0, x22
  4032a8:	b.cs	4032b0 <wcrtomb@plt+0x9e0>  // b.hs, b.nlast
  4032ac:	str	x22, [sp, #248]
  4032b0:	ldr	x3, [sp, #160]
  4032b4:	mov	x2, x21
  4032b8:	mov	x1, #0x0                   	// #0
  4032bc:	add	x0, sp, #0xf8
  4032c0:	bl	409600 <wcrtomb@plt+0x6d30>
  4032c4:	cbz	x0, 4033f8 <wcrtomb@plt+0xb28>
  4032c8:	ldr	x1, [sp, #248]
  4032cc:	str	x20, [sp, #136]
  4032d0:	b	403358 <wcrtomb@plt+0xa88>
  4032d4:	ldr	x20, [sp, #160]
  4032d8:	b	403278 <wcrtomb@plt+0x9a8>
  4032dc:	ldr	x20, [sp, #160]
  4032e0:	ldr	x0, [sp, #184]
  4032e4:	cbz	x0, 4033e4 <wcrtomb@plt+0xb14>
  4032e8:	mov	x5, #0x0                   	// #0
  4032ec:	add	x4, sp, #0xd8
  4032f0:	mov	w3, #0x0                   	// #0
  4032f4:	mov	x2, x20
  4032f8:	ldr	x22, [sp, #136]
  4032fc:	mov	x1, x22
  403300:	bl	40e6fc <wcrtomb@plt+0xbe2c>
  403304:	mov	x21, x0
  403308:	cmp	x0, #0x0
  40330c:	ccmp	x20, x0, #0x4, ne  // ne = any
  403310:	b.eq	403438 <wcrtomb@plt+0xb68>  // b.none
  403314:	ldr	x0, [sp, #216]
  403318:	cbz	x0, 403330 <wcrtomb@plt+0xa60>
  40331c:	ldr	x0, [sp, #176]
  403320:	sub	x2, x21, x0
  403324:	ldr	w1, [sp, #192]
  403328:	bl	4026a0 <memrchr@plt>
  40332c:	add	x22, x0, #0x1
  403330:	ldr	x20, [sp, #160]
  403334:	sub	x2, x20, x21
  403338:	ldr	w1, [sp, #192]
  40333c:	mov	x0, x21
  403340:	bl	402720 <memchr@plt>
  403344:	cmp	x0, #0x0
  403348:	csinc	x0, x20, x0, eq  // eq = none
  40334c:	str	x0, [sp, #136]
  403350:	str	xzr, [sp, #216]
  403354:	mov	x1, x22
  403358:	add	x5, sp, #0xd7
  40335c:	add	x4, sp, #0xd8
  403360:	mov	w3, #0x0                   	// #0
  403364:	ldr	x21, [sp, #136]
  403368:	mov	x2, x21
  40336c:	ldr	x0, [x19, #8]
  403370:	bl	40e6fc <wcrtomb@plt+0xbe2c>
  403374:	mov	x20, x0
  403378:	cmp	x0, #0x0
  40337c:	ccmp	x21, x0, #0x4, ne  // ne = any
  403380:	b.eq	40353c <wcrtomb@plt+0xc6c>  // b.none
  403384:	ldr	x0, [sp, #216]
  403388:	cbz	x0, 4033a0 <wcrtomb@plt+0xad0>
  40338c:	ldr	x0, [sp, #176]
  403390:	sub	x2, x20, x0
  403394:	ldr	w1, [sp, #192]
  403398:	bl	4026a0 <memrchr@plt>
  40339c:	add	x22, x0, #0x1
  4033a0:	ldr	x21, [sp, #160]
  4033a4:	sub	x2, x21, x20
  4033a8:	ldr	w1, [sp, #192]
  4033ac:	mov	x0, x20
  4033b0:	bl	402720 <memchr@plt>
  4033b4:	cmp	x0, #0x0
  4033b8:	csinc	x0, x21, x0, eq  // eq = none
  4033bc:	str	x0, [sp, #136]
  4033c0:	ldrb	w0, [sp, #215]
  4033c4:	cbz	w0, 4033f4 <wcrtomb@plt+0xb24>
  4033c8:	mov	x27, x22
  4033cc:	b	403450 <wcrtomb@plt+0xb80>
  4033d0:	ldr	x20, [sp, #160]
  4033d4:	str	x22, [sp, #136]
  4033d8:	b	4032e0 <wcrtomb@plt+0xa10>
  4033dc:	str	x22, [sp, #136]
  4033e0:	b	4032e0 <wcrtomb@plt+0xa10>
  4033e4:	ldr	x22, [sp, #136]
  4033e8:	mov	x1, x22
  4033ec:	str	x20, [sp, #136]
  4033f0:	b	403358 <wcrtomb@plt+0xa88>
  4033f4:	ldr	x20, [sp, #136]
  4033f8:	str	x20, [sp, #136]
  4033fc:	ldr	x0, [sp, #136]
  403400:	sub	x0, x0, x22
  403404:	str	x0, [sp, #128]
  403408:	ldr	x0, [sp, #176]
  40340c:	sub	x0, x22, x0
  403410:	ldr	x1, [sp, #200]
  403414:	ldr	x2, [sp, #128]
  403418:	str	x2, [x1]
  40341c:	ldp	x23, x24, [sp, #48]
  403420:	ldp	x25, x26, [sp, #64]
  403424:	ldp	x27, x28, [sp, #80]
  403428:	ldp	x19, x20, [sp, #16]
  40342c:	ldp	x21, x22, [sp, #32]
  403430:	ldp	x29, x30, [sp], #256
  403434:	ret
  403438:	str	x20, [sp, #136]
  40343c:	b	40353c <wcrtomb@plt+0xc6c>
  403440:	ldr	x27, [sp, #112]
  403444:	ldr	x22, [sp, #136]
  403448:	ldr	x0, [sp, #160]
  40344c:	str	x0, [sp, #136]
  403450:	ldr	x0, [x19, #24]
  403454:	cbz	x0, 40353c <wcrtomb@plt+0xc6c>
  403458:	ldr	x1, [sp, #136]
  40345c:	mov	x25, x1
  403460:	mov	x21, #0x0                   	// #0
  403464:	str	xzr, [sp, #128]
  403468:	sub	x0, x1, x22
  40346c:	sub	x0, x0, #0x1
  403470:	str	x0, [sp, #104]
  403474:	sub	x1, x1, x27
  403478:	str	x1, [sp, #168]
  40347c:	sub	x26, x1, #0x1
  403480:	sub	x0, x25, #0x1
  403484:	str	x0, [sp, #144]
  403488:	b	40365c <wcrtomb@plt+0xd8c>
  40348c:	bl	414264 <wcrtomb@plt+0x11994>
  403490:	ldr	x1, [sp, #120]
  403494:	ldrb	w1, [x1]
  403498:	cbnz	w1, 403618 <wcrtomb@plt+0xd48>
  40349c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4034a0:	ldrb	w0, [x0, #3540]
  4034a4:	cbz	w0, 403620 <wcrtomb@plt+0xd50>
  4034a8:	b	403700 <wcrtomb@plt+0xe30>
  4034ac:	ldr	x0, [x19, #16]
  4034b0:	add	x0, x0, x20
  4034b4:	ldrb	w1, [x0, #56]
  4034b8:	orr	w1, w1, #0x40
  4034bc:	strb	w1, [x0, #56]
  4034c0:	sub	x2, x21, #0x1
  4034c4:	add	x2, x23, x2
  4034c8:	ldr	x0, [x19, #16]
  4034cc:	mov	x4, x24
  4034d0:	sub	x3, x23, x22
  4034d4:	sub	x2, x2, x27
  4034d8:	mov	x1, x22
  4034dc:	add	x0, x0, x20
  4034e0:	bl	423524 <_obstack_memory_used@@Base+0xc73c>
  4034e4:	cmn	x0, #0x1
  4034e8:	b.lt	4034fc <wcrtomb@plt+0xc2c>  // b.tstop
  4034ec:	mov	x21, x0
  4034f0:	cmp	x0, #0x0
  4034f4:	b.gt	403790 <wcrtomb@plt+0xec0>
  4034f8:	b	403730 <wcrtomb@plt+0xe60>
  4034fc:	bl	414264 <wcrtomb@plt+0x11994>
  403500:	ldr	x21, [sp, #152]
  403504:	cmn	x0, #0x1
  403508:	b.ge	40364c <wcrtomb@plt+0xd7c>  // b.tcont
  40350c:	bl	414264 <wcrtomb@plt+0x11994>
  403510:	mov	x2, x21
  403514:	ldr	x21, [sp, #152]
  403518:	b	40362c <wcrtomb@plt+0xd5c>
  40351c:	str	x2, [sp, #128]
  403520:	mov	x25, x23
  403524:	b	40364c <wcrtomb@plt+0xd7c>
  403528:	ldr	x21, [sp, #152]
  40352c:	b	40364c <wcrtomb@plt+0xd7c>
  403530:	ldr	x0, [sp, #136]
  403534:	cmp	x0, x25
  403538:	b.hi	403608 <wcrtomb@plt+0xd38>  // b.pmore
  40353c:	ldr	x0, [sp, #136]
  403540:	ldr	x1, [sp, #160]
  403544:	cmp	x0, x1
  403548:	b.cs	4035f4 <wcrtomb@plt+0xd24>  // b.hs, b.nlast
  40354c:	ldr	x0, [sp, #112]
  403550:	cbnz	x0, 403440 <wcrtomb@plt+0xb70>
  403554:	str	xzr, [sp, #216]
  403558:	strb	wzr, [sp, #215]
  40355c:	ldr	x0, [x19]
  403560:	cbz	x0, 4032dc <wcrtomb@plt+0xa0c>
  403564:	ldr	x1, [sp, #160]
  403568:	ldr	x5, [sp, #136]
  40356c:	sub	x25, x1, x5
  403570:	ldrb	w1, [x19, #64]
  403574:	mov	w4, #0x1                   	// #1
  403578:	add	x3, sp, #0xe0
  40357c:	add	x2, x1, x25
  403580:	sub	x1, x5, x1
  403584:	bl	409348 <wcrtomb@plt+0x6a78>
  403588:	mov	x20, x0
  40358c:	tbnz	x0, #63, 403248 <wcrtomb@plt+0x978>
  403590:	ldr	x26, [sp, #136]
  403594:	add	x21, x26, x0
  403598:	ldr	x22, [sp, #176]
  40359c:	sub	x2, x21, x22
  4035a0:	ldr	w1, [sp, #192]
  4035a4:	mov	x0, x22
  4035a8:	bl	4026a0 <memrchr@plt>
  4035ac:	cmp	x0, #0x0
  4035b0:	csinc	x22, x22, x0, eq  // eq = none
  4035b4:	ldr	x23, [sp, #224]
  4035b8:	ldr	x24, [x19, #56]
  4035bc:	ldr	w0, [sp, #196]
  4035c0:	cmp	w0, #0x0
  4035c4:	ccmp	x23, x24, #0x1, ne  // ne = any
  4035c8:	b.lt	40325c <wcrtomb@plt+0x98c>  // b.tstop
  4035cc:	sub	x0, x21, x22
  4035d0:	cmp	x0, #0x10
  4035d4:	mov	x1, #0x10                  	// #16
  4035d8:	csel	x0, x0, x1, ge  // ge = tcont
  4035dc:	cmp	x0, x20, asr #2
  4035e0:	b.lt	4037a0 <wcrtomb@plt+0xed0>  // b.tstop
  4035e4:	cmp	x0, x25, asr #2
  4035e8:	b.ge	4033d0 <wcrtomb@plt+0xb00>  // b.tcont
  4035ec:	add	x0, x26, x0, lsl #2
  4035f0:	b	4037a4 <wcrtomb@plt+0xed4>
  4035f4:	mov	x0, #0xffffffffffffffff    	// #-1
  4035f8:	ldp	x23, x24, [sp, #48]
  4035fc:	ldp	x25, x26, [sp, #64]
  403600:	ldp	x27, x28, [sp, #80]
  403604:	b	403428 <wcrtomb@plt+0xb58>
  403608:	mov	x22, x25
  40360c:	b	403408 <wcrtomb@plt+0xb38>
  403610:	mov	x0, #0xffffffffffffffff    	// #-1
  403614:	b	403428 <wcrtomb@plt+0xb58>
  403618:	cmp	x26, x0
  40361c:	b.ne	40364c <wcrtomb@plt+0xd7c>  // b.any
  403620:	ldr	x0, [sp, #168]
  403624:	mov	x2, x0
  403628:	mov	x23, x27
  40362c:	ldr	x0, [sp, #112]
  403630:	cbz	x0, 4033fc <wcrtomb@plt+0xb2c>
  403634:	cmp	x25, x23
  403638:	b.hi	40351c <wcrtomb@plt+0xc4c>  // b.pmore
  40363c:	ldr	x0, [sp, #128]
  403640:	ccmp	x0, x2, #0x2, eq  // eq = none
  403644:	csel	x0, x0, x2, cs  // cs = hs, nlast
  403648:	str	x0, [sp, #128]
  40364c:	add	x21, x21, #0x1
  403650:	ldr	x0, [x19, #24]
  403654:	cmp	x0, x21
  403658:	b.ls	403530 <wcrtomb@plt+0xc60>  // b.plast
  40365c:	lsl	x20, x21, #6
  403660:	ldr	x0, [x19, #16]
  403664:	add	x0, x0, x20
  403668:	ldrb	w1, [x0, #56]
  40366c:	and	w1, w1, #0xffffffbf
  403670:	strb	w1, [x0, #56]
  403674:	ldr	x0, [x19, #16]
  403678:	ldrb	w1, [x28]
  40367c:	cmp	w1, #0xa
  403680:	cset	w2, eq  // eq = none
  403684:	add	x0, x0, x20
  403688:	ldrb	w1, [x0, #56]
  40368c:	bfi	w1, w2, #7, #1
  403690:	strb	w1, [x0, #56]
  403694:	add	x24, x19, #0x20
  403698:	ldr	x0, [x19, #16]
  40369c:	mov	x5, x24
  4036a0:	mov	x4, x26
  4036a4:	sub	x3, x27, x22
  4036a8:	ldr	x2, [sp, #104]
  4036ac:	mov	x1, x22
  4036b0:	add	x0, x0, x20
  4036b4:	bl	423548 <_obstack_memory_used@@Base+0xc760>
  4036b8:	cmn	x0, #0x1
  4036bc:	b.lt	40348c <wcrtomb@plt+0xbbc>  // b.tstop
  4036c0:	tbnz	x0, #63, 40364c <wcrtomb@plt+0xd7c>
  4036c4:	add	x23, x22, x0
  4036c8:	cmp	x23, x25
  4036cc:	b.hi	40364c <wcrtomb@plt+0xd7c>  // b.pmore
  4036d0:	ldr	x1, [x19, #48]
  4036d4:	ldr	x1, [x1]
  4036d8:	sub	x0, x1, x0
  4036dc:	mov	x2, x0
  4036e0:	ldr	x1, [sp, #112]
  4036e4:	cbz	x1, 403490 <wcrtomb@plt+0xbc0>
  4036e8:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4036ec:	ldrb	w1, [x1, #3540]
  4036f0:	cbz	w1, 403634 <wcrtomb@plt+0xd64>
  4036f4:	ldr	x1, [sp, #120]
  4036f8:	ldrb	w1, [x1]
  4036fc:	cbnz	w1, 403618 <wcrtomb@plt+0xd48>
  403700:	str	x21, [sp, #152]
  403704:	mov	x21, x2
  403708:	ldr	x1, [sp, #144]
  40370c:	add	x0, x23, x21
  403710:	bl	4097d8 <wcrtomb@plt+0x6f08>
  403714:	cbnz	x0, 40372c <wcrtomb@plt+0xe5c>
  403718:	ldr	x2, [sp, #144]
  40371c:	mov	x1, x23
  403720:	mov	x0, x22
  403724:	bl	4097f0 <wcrtomb@plt+0x6f20>
  403728:	cbz	x0, 403510 <wcrtomb@plt+0xc40>
  40372c:	cbnz	x21, 4034ac <wcrtomb@plt+0xbdc>
  403730:	ldr	x0, [sp, #144]
  403734:	cmp	x0, x23
  403738:	b.eq	403528 <wcrtomb@plt+0xc58>  // b.none
  40373c:	add	x3, x23, #0x1
  403740:	ldr	x0, [x19, #16]
  403744:	add	x0, x0, x20
  403748:	ldrb	w1, [x0, #56]
  40374c:	and	w1, w1, #0xffffffbf
  403750:	strb	w1, [x0, #56]
  403754:	ldr	x0, [sp, #136]
  403758:	sub	x4, x0, x3
  40375c:	ldr	x0, [x19, #16]
  403760:	mov	x5, x24
  403764:	sub	x4, x4, #0x1
  403768:	sub	x3, x3, x22
  40376c:	ldr	x2, [sp, #104]
  403770:	mov	x1, x22
  403774:	add	x0, x0, x20
  403778:	bl	423548 <_obstack_memory_used@@Base+0xc760>
  40377c:	tbnz	x0, #63, 403500 <wcrtomb@plt+0xc30>
  403780:	ldr	x1, [x19, #48]
  403784:	ldr	x1, [x1]
  403788:	sub	x21, x1, x0
  40378c:	add	x23, x22, x0
  403790:	cmp	x23, x25
  403794:	b.ls	403708 <wcrtomb@plt+0xe38>  // b.plast
  403798:	ldr	x21, [sp, #152]
  40379c:	b	40364c <wcrtomb@plt+0xd7c>
  4037a0:	mov	x0, x21
  4037a4:	ldr	x1, [sp, #160]
  4037a8:	sub	x2, x1, x0
  4037ac:	ldr	w1, [sp, #192]
  4037b0:	bl	402720 <memchr@plt>
  4037b4:	cbnz	x0, 403274 <wcrtomb@plt+0x9a4>
  4037b8:	ldr	x20, [sp, #160]
  4037bc:	str	x22, [sp, #136]
  4037c0:	b	4032e0 <wcrtomb@plt+0xa10>
  4037c4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4037c8:	add	x1, x0, #0x358
  4037cc:	ldr	x1, [x1, #8]
  4037d0:	str	x1, [x0, #856]
  4037d4:	ret
  4037d8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4037dc:	mov	w1, #0xffffffff            	// #-1
  4037e0:	str	w1, [x0, #1128]
  4037e4:	ret
  4037e8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4037ec:	add	x0, x0, #0x358
  4037f0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  4037f4:	add	x1, x1, #0xf40
  4037f8:	str	x1, [x0, #16]
  4037fc:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  403800:	add	x1, x1, #0xf48
  403804:	str	x1, [x0, #24]
  403808:	ret
  40380c:	and	w1, w0, #0xf000
  403810:	mov	w2, #0xb000                	// #45056
  403814:	and	w0, w0, w2
  403818:	cmp	w0, #0x2, lsl #12
  40381c:	mov	w0, #0xc000                	// #49152
  403820:	ccmp	w1, w0, #0x4, ne  // ne = any
  403824:	mov	w0, #0x1000                	// #4096
  403828:	ccmp	w1, w0, #0x4, ne  // ne = any
  40382c:	cset	w0, eq  // eq = none
  403830:	ret
  403834:	and	w0, w0, #0xff
  403838:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40383c:	ldr	w1, [x1, #1132]
  403840:	cmp	w1, #0x2
  403844:	b.eq	40385c <wcrtomb@plt+0xf8c>  // b.none
  403848:	cmp	w1, #0x0
  40384c:	cset	w1, eq  // eq = none
  403850:	eor	w0, w0, #0x1
  403854:	and	w0, w1, w0
  403858:	ret
  40385c:	mov	w0, #0x1                   	// #1
  403860:	b	403858 <wcrtomb@plt+0xf88>
  403864:	mov	x3, x0
  403868:	mov	x5, x1
  40386c:	mov	x0, #0x0                   	// #0
  403870:	b	403880 <wcrtomb@plt+0xfb0>
  403874:	cmp	w4, #0x20
  403878:	b.ne	40389c <wcrtomb@plt+0xfcc>  // b.any
  40387c:	add	x3, x3, #0x1
  403880:	ldrb	w4, [x3]
  403884:	cmp	w4, #0xd
  403888:	b.hi	403874 <wcrtomb@plt+0xfa4>  // b.pmore
  40388c:	cmp	w4, #0x8
  403890:	b.hi	40387c <wcrtomb@plt+0xfac>  // b.pmore
  403894:	cbnz	w4, 40389c <wcrtomb@plt+0xfcc>
  403898:	ret
  40389c:	cbz	x2, 4038a4 <wcrtomb@plt+0xfd4>
  4038a0:	str	x5, [x2, x0, lsl #3]
  4038a4:	add	x0, x0, #0x1
  4038a8:	mov	x4, x5
  4038ac:	b	4038d4 <wcrtomb@plt+0x1004>
  4038b0:	ldrb	w6, [x3, #1]
  4038b4:	cbz	w6, 4038c4 <wcrtomb@plt+0xff4>
  4038b8:	add	x3, x3, #0x2
  4038bc:	sturb	w6, [x4, #-1]
  4038c0:	b	4038f0 <wcrtomb@plt+0x1020>
  4038c4:	mov	x3, x1
  4038c8:	b	4038f0 <wcrtomb@plt+0x1020>
  4038cc:	cmp	w1, #0x8
  4038d0:	b.hi	403908 <wcrtomb@plt+0x1038>  // b.pmore
  4038d4:	mov	x1, x3
  4038d8:	mov	x5, x4
  4038dc:	ldrb	w6, [x1], #1
  4038e0:	strb	w6, [x4], #1
  4038e4:	cmp	w6, #0x5c
  4038e8:	b.eq	4038b0 <wcrtomb@plt+0xfe0>  // b.none
  4038ec:	mov	x3, x1
  4038f0:	ldrb	w1, [x3]
  4038f4:	cbz	w1, 403908 <wcrtomb@plt+0x1038>
  4038f8:	cmp	w1, #0xd
  4038fc:	b.ls	4038cc <wcrtomb@plt+0xffc>  // b.plast
  403900:	cmp	w1, #0x20
  403904:	b.ne	4038d4 <wcrtomb@plt+0x1004>  // b.any
  403908:	add	x5, x5, #0x2
  40390c:	strb	wzr, [x4]
  403910:	b	403880 <wcrtomb@plt+0xfb0>
  403914:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403918:	ldr	x0, [x0, #1136]
  40391c:	cbz	x0, 40392c <wcrtomb@plt+0x105c>
  403920:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403924:	ldr	x0, [x0, #1136]
  403928:	ret
  40392c:	stp	x29, x30, [sp, #-16]!
  403930:	mov	x29, sp
  403934:	mov	w2, #0x5                   	// #5
  403938:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  40393c:	add	x1, x1, #0xf50
  403940:	bl	4027a0 <dcgettext@plt>
  403944:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  403948:	str	x0, [x1, #1136]
  40394c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403950:	ldr	x0, [x0, #1136]
  403954:	ldp	x29, x30, [sp], #16
  403958:	ret
  40395c:	stp	x29, x30, [sp, #-32]!
  403960:	mov	x29, sp
  403964:	str	x19, [sp, #16]
  403968:	mov	w19, w0
  40396c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403970:	ldrb	w0, [x0, #1144]
  403974:	cbz	w0, 403990 <wcrtomb@plt+0x10c0>
  403978:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40397c:	mov	w1, #0x1                   	// #1
  403980:	strb	w1, [x0, #1145]
  403984:	ldr	x19, [sp, #16]
  403988:	ldp	x29, x30, [sp], #32
  40398c:	ret
  403990:	bl	403914 <wcrtomb@plt+0x1044>
  403994:	mov	x3, x0
  403998:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  40399c:	add	x2, x2, #0xeb0
  4039a0:	mov	w1, w19
  4039a4:	mov	w0, #0x0                   	// #0
  4039a8:	bl	4022f0 <error@plt>
  4039ac:	b	403978 <wcrtomb@plt+0x10a8>
  4039b0:	stp	x29, x30, [sp, #-48]!
  4039b4:	mov	x29, sp
  4039b8:	stp	x19, x20, [sp, #16]
  4039bc:	stp	x21, x22, [sp, #32]
  4039c0:	mov	x21, x0
  4039c4:	mov	w22, w1
  4039c8:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xe218>
  4039cc:	add	x19, x19, #0x748
  4039d0:	mov	w20, #0x0                   	// #0
  4039d4:	mov	x1, x19
  4039d8:	mov	x0, x21
  4039dc:	bl	402640 <strcmp@plt>
  4039e0:	cbz	w0, 403a2c <wcrtomb@plt+0x115c>
  4039e4:	add	w20, w20, #0x1
  4039e8:	add	x19, x19, #0x20
  4039ec:	cmp	w20, #0x6
  4039f0:	b.ne	4039d4 <wcrtomb@plt+0x1104>  // b.any
  4039f4:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  4039f8:	add	x1, x1, #0xf88
  4039fc:	mov	x0, x21
  403a00:	bl	402640 <strcmp@plt>
  403a04:	cbnz	w0, 403a70 <wcrtomb@plt+0x11a0>
  403a08:	mov	w2, #0x5                   	// #5
  403a0c:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  403a10:	add	x1, x1, #0xf90
  403a14:	mov	x0, #0x0                   	// #0
  403a18:	bl	4027a0 <dcgettext@plt>
  403a1c:	mov	x2, x0
  403a20:	mov	w1, #0x0                   	// #0
  403a24:	mov	w0, #0x2                   	// #2
  403a28:	bl	4022f0 <error@plt>
  403a2c:	cmp	w22, #0x0
  403a30:	ccmp	w22, w20, #0x4, ge  // ge = tcont
  403a34:	b.ne	403a4c <wcrtomb@plt+0x117c>  // b.any
  403a38:	mov	w0, w20
  403a3c:	ldp	x19, x20, [sp, #16]
  403a40:	ldp	x21, x22, [sp, #32]
  403a44:	ldp	x29, x30, [sp], #48
  403a48:	ret
  403a4c:	mov	w2, #0x5                   	// #5
  403a50:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  403a54:	add	x1, x1, #0xf68
  403a58:	mov	x0, #0x0                   	// #0
  403a5c:	bl	4027a0 <dcgettext@plt>
  403a60:	mov	x2, x0
  403a64:	mov	w1, #0x0                   	// #0
  403a68:	mov	w0, #0x2                   	// #2
  403a6c:	bl	4022f0 <error@plt>
  403a70:	mov	w2, #0x5                   	// #5
  403a74:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  403a78:	add	x1, x1, #0xfd0
  403a7c:	mov	x0, #0x0                   	// #0
  403a80:	bl	4027a0 <dcgettext@plt>
  403a84:	mov	x3, x21
  403a88:	mov	x2, x0
  403a8c:	mov	w1, #0x0                   	// #0
  403a90:	mov	w0, #0x2                   	// #2
  403a94:	bl	4022f0 <error@plt>
  403a98:	adds	x0, x0, x1
  403a9c:	b.cs	403aa4 <wcrtomb@plt+0x11d4>  // b.hs, b.nlast
  403aa0:	ret
  403aa4:	stp	x29, x30, [sp, #-16]!
  403aa8:	mov	x29, sp
  403aac:	mov	w2, #0x5                   	// #5
  403ab0:	adrp	x1, 423000 <_obstack_memory_used@@Base+0xc218>
  403ab4:	add	x1, x1, #0xfe8
  403ab8:	mov	x0, #0x0                   	// #0
  403abc:	bl	4027a0 <dcgettext@plt>
  403ac0:	mov	x2, x0
  403ac4:	mov	w1, #0x0                   	// #0
  403ac8:	mov	w0, #0x2                   	// #2
  403acc:	bl	4022f0 <error@plt>
  403ad0:	stp	x29, x30, [sp, #-32]!
  403ad4:	mov	x29, sp
  403ad8:	stp	x19, x20, [sp, #16]
  403adc:	mov	x20, x0
  403ae0:	mov	x19, x1
  403ae4:	adrp	x4, 426000 <_obstack_memory_used@@Base+0xf218>
  403ae8:	add	x4, x4, #0x6c8
  403aec:	mov	x3, x1
  403af0:	mov	w2, #0xa                   	// #10
  403af4:	mov	x1, #0x0                   	// #0
  403af8:	bl	41432c <wcrtomb@plt+0x11a5c>
  403afc:	cmp	w0, #0x1
  403b00:	b.hi	403b18 <wcrtomb@plt+0x1248>  // b.pmore
  403b04:	ldr	x0, [x19]
  403b08:	tbnz	x0, #63, 403b18 <wcrtomb@plt+0x1248>
  403b0c:	ldp	x19, x20, [sp, #16]
  403b10:	ldp	x29, x30, [sp], #32
  403b14:	ret
  403b18:	mov	w2, #0x5                   	// #5
  403b1c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  403b20:	add	x1, x1, #0x8
  403b24:	mov	x0, #0x0                   	// #0
  403b28:	bl	4027a0 <dcgettext@plt>
  403b2c:	mov	x4, x0
  403b30:	mov	x3, x20
  403b34:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xd218>
  403b38:	add	x2, x2, #0x28
  403b3c:	mov	w1, #0x0                   	// #0
  403b40:	mov	w0, #0x2                   	// #2
  403b44:	bl	4022f0 <error@plt>
  403b48:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403b4c:	ldr	w0, [x0, #1148]
  403b50:	cbz	w0, 403b58 <wcrtomb@plt+0x1288>
  403b54:	ret
  403b58:	stp	x29, x30, [sp, #-16]!
  403b5c:	mov	x29, sp
  403b60:	bl	409e24 <wcrtomb@plt+0x7554>
  403b64:	ldp	x29, x30, [sp], #16
  403b68:	ret
  403b6c:	stp	x29, x30, [sp, #-64]!
  403b70:	mov	x29, sp
  403b74:	stp	x19, x20, [sp, #16]
  403b78:	stp	x21, x22, [sp, #32]
  403b7c:	str	x23, [sp, #48]
  403b80:	mov	x19, x0
  403b84:	mov	x21, x1
  403b88:	mov	x20, x2
  403b8c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403b90:	add	x0, x0, #0x468
  403b94:	ldr	x1, [x0, #24]
  403b98:	ldr	x0, [x0, #32]
  403b9c:	cmp	x1, x0
  403ba0:	b.ls	403be4 <wcrtomb@plt+0x1314>  // b.plast
  403ba4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403ba8:	add	x0, x0, #0x468
  403bac:	ldr	x22, [x0, #48]
  403bb0:	ldr	x3, [x0, #32]
  403bb4:	lsl	x1, x3, #4
  403bb8:	ldr	x2, [x0, #40]
  403bbc:	add	x4, x2, x1
  403bc0:	add	x5, x22, #0x1
  403bc4:	str	x5, [x4, #8]
  403bc8:	str	x20, [x2, x1]
  403bcc:	add	x3, x3, #0x1
  403bd0:	str	x3, [x0, #32]
  403bd4:	add	x21, x19, x21
  403bd8:	mov	x20, #0x0                   	// #0
  403bdc:	mov	w23, #0xa                   	// #10
  403be0:	b	403c54 <wcrtomb@plt+0x1384>
  403be4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403be8:	ldr	x0, [x0, #1168]
  403bec:	cbz	x0, 403c24 <wcrtomb@plt+0x1354>
  403bf0:	mov	x2, #0x5555555555555555    	// #6148914691236517205
  403bf4:	movk	x2, #0x555, lsl #48
  403bf8:	cmp	x1, x2
  403bfc:	b.cs	403c40 <wcrtomb@plt+0x1370>  // b.hs, b.nlast
  403c00:	add	x2, x1, #0x1
  403c04:	add	x1, x2, x1, lsr #1
  403c08:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x27218>
  403c0c:	add	x22, x22, #0x468
  403c10:	str	x1, [x22, #24]
  403c14:	lsl	x1, x1, #4
  403c18:	bl	414068 <wcrtomb@plt+0x11798>
  403c1c:	str	x0, [x22, #40]
  403c20:	b	403ba4 <wcrtomb@plt+0x12d4>
  403c24:	cbz	x1, 403c44 <wcrtomb@plt+0x1374>
  403c28:	cmp	xzr, x1, lsr #60
  403c2c:	cset	x2, ne  // ne = any
  403c30:	tst	x1, #0x800000000000000
  403c34:	csinc	w2, w2, wzr, eq  // eq = none
  403c38:	cbz	w2, 403c08 <wcrtomb@plt+0x1338>
  403c3c:	bl	414264 <wcrtomb@plt+0x11994>
  403c40:	bl	414264 <wcrtomb@plt+0x11994>
  403c44:	mov	x1, #0x8                   	// #8
  403c48:	b	403c08 <wcrtomb@plt+0x1338>
  403c4c:	add	x19, x0, #0x1
  403c50:	add	x20, x20, #0x1
  403c54:	sub	x2, x21, x19
  403c58:	mov	w1, w23
  403c5c:	mov	x0, x19
  403c60:	bl	402720 <memchr@plt>
  403c64:	cbnz	x0, 403c4c <wcrtomb@plt+0x137c>
  403c68:	add	x0, x22, x20
  403c6c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  403c70:	str	x0, [x1, #1176]
  403c74:	ldp	x19, x20, [sp, #16]
  403c78:	ldp	x21, x22, [sp, #32]
  403c7c:	ldr	x23, [sp, #48]
  403c80:	ldp	x29, x30, [sp], #64
  403c84:	ret
  403c88:	stp	x29, x30, [sp, #-48]!
  403c8c:	mov	x29, sp
  403c90:	stp	x19, x20, [sp, #16]
  403c94:	str	x21, [sp, #32]
  403c98:	mov	x19, x0
  403c9c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403ca0:	ldr	x0, [x0, #1184]
  403ca4:	cmp	x0, x19
  403ca8:	b.cs	403d04 <wcrtomb@plt+0x1434>  // b.hs, b.nlast
  403cac:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  403cb0:	ldrb	w21, [x1, #2248]
  403cb4:	mov	x20, #0x0                   	// #0
  403cb8:	sub	x2, x19, x0
  403cbc:	mov	w1, w21
  403cc0:	bl	402720 <memchr@plt>
  403cc4:	cbz	x0, 403cd8 <wcrtomb@plt+0x1408>
  403cc8:	add	x20, x20, #0x1
  403ccc:	add	x0, x0, #0x1
  403cd0:	cmp	x19, x0
  403cd4:	b.hi	403cb8 <wcrtomb@plt+0x13e8>  // b.pmore
  403cd8:	adrp	x21, 43e000 <_obstack_memory_used@@Base+0x27218>
  403cdc:	add	x21, x21, #0x468
  403ce0:	mov	x1, x20
  403ce4:	ldr	x0, [x21, #64]
  403ce8:	bl	403a98 <wcrtomb@plt+0x11c8>
  403cec:	str	x0, [x21, #64]
  403cf0:	str	x19, [x21, #56]
  403cf4:	ldp	x19, x20, [sp, #16]
  403cf8:	ldr	x21, [sp, #32]
  403cfc:	ldp	x29, x30, [sp], #48
  403d00:	ret
  403d04:	mov	x20, #0x0                   	// #0
  403d08:	b	403cd8 <wcrtomb@plt+0x1408>
  403d0c:	stp	x29, x30, [sp, #-192]!
  403d10:	mov	x29, sp
  403d14:	stp	x21, x22, [sp, #32]
  403d18:	mov	x21, x0
  403d1c:	ldrb	w3, [x0]
  403d20:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  403d24:	add	x0, x0, #0x8d0
  403d28:	add	x0, x0, x3
  403d2c:	ldrsb	w22, [x0, #3]
  403d30:	tbnz	w22, #31, 403d44 <wcrtomb@plt+0x1474>
  403d34:	mov	w0, w22
  403d38:	ldp	x21, x22, [sp, #32]
  403d3c:	ldp	x29, x30, [sp], #192
  403d40:	ret
  403d44:	stp	x19, x20, [sp, #16]
  403d48:	mov	x3, x2
  403d4c:	mov	x2, x1
  403d50:	mov	x1, x21
  403d54:	add	x0, sp, #0x3c
  403d58:	bl	4169f8 <wcrtomb@plt+0x14128>
  403d5c:	mov	x19, x0
  403d60:	cmp	x0, #0x10
  403d64:	b.hi	403dac <wcrtomb@plt+0x14dc>  // b.pmore
  403d68:	add	x1, sp, #0x40
  403d6c:	ldr	w0, [sp, #60]
  403d70:	bl	40f8e4 <wcrtomb@plt+0xd014>
  403d74:	cbnz	w0, 403dac <wcrtomb@plt+0x14dc>
  403d78:	mov	w22, w19
  403d7c:	sub	w19, w19, #0x1
  403d80:	sxtw	x19, w19
  403d84:	cmp	w19, #0x0
  403d88:	b.le	403db8 <wcrtomb@plt+0x14e8>
  403d8c:	ldrb	w20, [x21, x19]
  403d90:	bl	402510 <__ctype_toupper_loc@plt>
  403d94:	sub	x19, x19, #0x1
  403d98:	and	x1, x20, #0xff
  403d9c:	ldr	x0, [x0]
  403da0:	ldr	w0, [x0, x1, lsl #2]
  403da4:	cmp	w20, w0
  403da8:	b.eq	403d84 <wcrtomb@plt+0x14b4>  // b.none
  403dac:	mov	w22, #0xffffffff            	// #-1
  403db0:	ldp	x19, x20, [sp, #16]
  403db4:	b	403d34 <wcrtomb@plt+0x1464>
  403db8:	ldp	x19, x20, [sp, #16]
  403dbc:	b	403d34 <wcrtomb@plt+0x1464>
  403dc0:	mov	x1, x0
  403dc4:	ldrb	w0, [x0]
  403dc8:	cbnz	w0, 403dd0 <wcrtomb@plt+0x1500>
  403dcc:	ret
  403dd0:	stp	x29, x30, [sp, #-16]!
  403dd4:	mov	x29, sp
  403dd8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403ddc:	ldr	x0, [x0, #872]
  403de0:	bl	4147a8 <wcrtomb@plt+0x11ed8>
  403de4:	ldp	x29, x30, [sp], #16
  403de8:	ret
  403dec:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  403df0:	ldr	w1, [x1, #1128]
  403df4:	cbnz	w1, 403dfc <wcrtomb@plt+0x152c>
  403df8:	ret
  403dfc:	stp	x29, x30, [sp, #-16]!
  403e00:	mov	x29, sp
  403e04:	bl	403dc0 <wcrtomb@plt+0x14f0>
  403e08:	ldp	x29, x30, [sp], #16
  403e0c:	ret
  403e10:	stp	x29, x30, [sp, #-16]!
  403e14:	mov	x29, sp
  403e18:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  403e1c:	ldr	x1, [x1, #1096]
  403e20:	bl	4027b0 <fputs_unlocked@plt>
  403e24:	tbnz	w0, #31, 403e30 <wcrtomb@plt+0x1560>
  403e28:	ldp	x29, x30, [sp], #16
  403e2c:	ret
  403e30:	bl	402840 <__errno_location@plt>
  403e34:	ldr	w1, [x0]
  403e38:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403e3c:	str	w1, [x0, #1148]
  403e40:	b	403e28 <wcrtomb@plt+0x1558>
  403e44:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  403e48:	ldr	w1, [x1, #1128]
  403e4c:	cbnz	w1, 403e54 <wcrtomb@plt+0x1584>
  403e50:	ret
  403e54:	ldrb	w0, [x0]
  403e58:	cbz	w0, 403e50 <wcrtomb@plt+0x1580>
  403e5c:	stp	x29, x30, [sp, #-16]!
  403e60:	mov	x29, sp
  403e64:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403e68:	ldr	x0, [x0, #880]
  403e6c:	bl	4147bc <wcrtomb@plt+0x11eec>
  403e70:	ldp	x29, x30, [sp], #16
  403e74:	ret
  403e78:	stp	x29, x30, [sp, #-32]!
  403e7c:	mov	x29, sp
  403e80:	str	x19, [sp, #16]
  403e84:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  403e88:	add	x19, x19, #0x358
  403e8c:	ldr	x0, [x19, #32]
  403e90:	bl	403dec <wcrtomb@plt+0x151c>
  403e94:	bl	403914 <wcrtomb@plt+0x1044>
  403e98:	bl	403e10 <wcrtomb@plt+0x1540>
  403e9c:	ldr	x0, [x19, #32]
  403ea0:	bl	403e44 <wcrtomb@plt+0x1574>
  403ea4:	ldr	x19, [sp, #16]
  403ea8:	ldp	x29, x30, [sp], #32
  403eac:	ret
  403eb0:	mov	w1, w0
  403eb4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403eb8:	ldr	x0, [x0, #1096]
  403ebc:	ldr	x2, [x0, #40]
  403ec0:	ldr	x3, [x0, #48]
  403ec4:	cmp	x2, x3
  403ec8:	b.cs	403edc <wcrtomb@plt+0x160c>  // b.hs, b.nlast
  403ecc:	add	x3, x2, #0x1
  403ed0:	str	x3, [x0, #40]
  403ed4:	strb	w1, [x2]
  403ed8:	ret
  403edc:	stp	x29, x30, [sp, #-16]!
  403ee0:	mov	x29, sp
  403ee4:	and	w1, w1, #0xff
  403ee8:	bl	4025d0 <__overflow@plt>
  403eec:	tbz	w0, #31, 403f00 <wcrtomb@plt+0x1630>
  403ef0:	bl	402840 <__errno_location@plt>
  403ef4:	ldr	w1, [x0]
  403ef8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403efc:	str	w1, [x0, #1148]
  403f00:	ldp	x29, x30, [sp], #16
  403f04:	ret
  403f08:	stp	x29, x30, [sp, #-32]!
  403f0c:	mov	x29, sp
  403f10:	stp	x19, x20, [sp, #16]
  403f14:	and	w20, w0, #0xff
  403f18:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  403f1c:	add	x19, x19, #0x358
  403f20:	ldr	x0, [x19, #40]
  403f24:	bl	403dec <wcrtomb@plt+0x151c>
  403f28:	mov	w0, w20
  403f2c:	bl	403eb0 <wcrtomb@plt+0x15e0>
  403f30:	ldr	x0, [x19, #40]
  403f34:	bl	403e44 <wcrtomb@plt+0x1574>
  403f38:	ldp	x19, x20, [sp, #16]
  403f3c:	ldp	x29, x30, [sp], #32
  403f40:	ret
  403f44:	stp	x29, x30, [sp, #-32]!
  403f48:	mov	x29, sp
  403f4c:	str	x19, [sp, #16]
  403f50:	mov	x19, x2
  403f54:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x27218>
  403f58:	ldr	x3, [x3, #1096]
  403f5c:	bl	4022b0 <fwrite_unlocked@plt>
  403f60:	cmp	x19, x0
  403f64:	b.eq	403f78 <wcrtomb@plt+0x16a8>  // b.none
  403f68:	bl	402840 <__errno_location@plt>
  403f6c:	ldr	w1, [x0]
  403f70:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  403f74:	str	w1, [x0, #1148]
  403f78:	ldr	x19, [sp, #16]
  403f7c:	ldp	x29, x30, [sp], #32
  403f80:	ret
  403f84:	stp	x29, x30, [sp, #-272]!
  403f88:	mov	x29, sp
  403f8c:	str	x1, [sp, #216]
  403f90:	str	x2, [sp, #224]
  403f94:	str	x3, [sp, #232]
  403f98:	str	x4, [sp, #240]
  403f9c:	str	x5, [sp, #248]
  403fa0:	str	x6, [sp, #256]
  403fa4:	str	x7, [sp, #264]
  403fa8:	str	q0, [sp, #80]
  403fac:	str	q1, [sp, #96]
  403fb0:	str	q2, [sp, #112]
  403fb4:	str	q3, [sp, #128]
  403fb8:	str	q4, [sp, #144]
  403fbc:	str	q5, [sp, #160]
  403fc0:	str	q6, [sp, #176]
  403fc4:	str	q7, [sp, #192]
  403fc8:	add	x1, sp, #0x110
  403fcc:	str	x1, [sp, #48]
  403fd0:	str	x1, [sp, #56]
  403fd4:	add	x1, sp, #0xd0
  403fd8:	str	x1, [sp, #64]
  403fdc:	mov	w1, #0xffffffc8            	// #-56
  403fe0:	str	w1, [sp, #72]
  403fe4:	mov	w1, #0xffffff80            	// #-128
  403fe8:	str	w1, [sp, #76]
  403fec:	ldp	x2, x3, [sp, #48]
  403ff0:	stp	x2, x3, [sp, #16]
  403ff4:	ldp	x2, x3, [sp, #64]
  403ff8:	stp	x2, x3, [sp, #32]
  403ffc:	add	x2, sp, #0x10
  404000:	mov	x1, x0
  404004:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404008:	ldr	x0, [x0, #1096]
  40400c:	bl	402800 <vfprintf@plt>
  404010:	tbnz	w0, #31, 40401c <wcrtomb@plt+0x174c>
  404014:	ldp	x29, x30, [sp], #272
  404018:	ret
  40401c:	bl	402840 <__errno_location@plt>
  404020:	ldr	w1, [x0]
  404024:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404028:	str	w1, [x0, #1148]
  40402c:	b	404014 <wcrtomb@plt+0x1744>
  404030:	stp	x29, x30, [sp, #-16]!
  404034:	mov	x29, sp
  404038:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40403c:	ldr	x0, [x0, #1096]
  404040:	bl	4026c0 <fflush_unlocked@plt>
  404044:	cbz	w0, 404058 <wcrtomb@plt+0x1788>
  404048:	bl	402840 <__errno_location@plt>
  40404c:	ldr	w1, [x0]
  404050:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404054:	str	w1, [x0, #1148]
  404058:	ldp	x29, x30, [sp], #16
  40405c:	ret
  404060:	stp	x29, x30, [sp, #-96]!
  404064:	mov	x29, sp
  404068:	stp	x19, x20, [sp, #16]
  40406c:	stp	x21, x22, [sp, #32]
  404070:	stp	x25, x26, [sp, #64]
  404074:	mov	x20, x0
  404078:	mov	x21, x1
  40407c:	mov	x22, x2
  404080:	and	w25, w3, #0xff
  404084:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404088:	ldr	w0, [x0, #1200]
  40408c:	cmp	w0, #0x1
  404090:	b.ne	404160 <wcrtomb@plt+0x1890>  // b.any
  404094:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404098:	ldr	w0, [x0, #1216]
  40409c:	cbnz	w0, 404218 <wcrtomb@plt+0x1948>
  4040a0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4040a4:	ldrb	w0, [x0, #1224]
  4040a8:	cbz	w0, 404104 <wcrtomb@plt+0x1834>
  4040ac:	stp	x23, x24, [sp, #48]
  4040b0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4040b4:	ldr	x0, [x0, #1184]
  4040b8:	cmp	x0, x22
  4040bc:	b.cc	404240 <wcrtomb@plt+0x1970>  // b.lo, b.ul, b.last
  4040c0:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  4040c4:	add	x19, x19, #0x468
  4040c8:	ldr	x23, [x19, #64]
  4040cc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4040d0:	ldr	x22, [x0, #904]
  4040d4:	mov	x0, x22
  4040d8:	bl	403dec <wcrtomb@plt+0x151c>
  4040dc:	mov	x2, x23
  4040e0:	ldr	w1, [x19, #100]
  4040e4:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xd218>
  4040e8:	add	x0, x0, #0x30
  4040ec:	bl	403f84 <wcrtomb@plt+0x16b4>
  4040f0:	mov	x0, x22
  4040f4:	bl	403e44 <wcrtomb@plt+0x1574>
  4040f8:	mov	w0, w25
  4040fc:	bl	403f08 <wcrtomb@plt+0x1638>
  404100:	ldp	x23, x24, [sp, #48]
  404104:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404108:	ldrb	w0, [x0, #1232]
  40410c:	cbnz	w0, 404268 <wcrtomb@plt+0x1998>
  404110:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404114:	ldrb	w0, [x0, #1256]
  404118:	cbz	w0, 4042bc <wcrtomb@plt+0x19ec>
  40411c:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x27218>
  404120:	add	x2, x2, #0x468
  404124:	ldrb	w1, [x2, #96]
  404128:	ldrb	w3, [x2, #104]
  40412c:	orr	w1, w1, w3
  404130:	and	w1, w1, #0xff
  404134:	ldr	w2, [x2, #88]
  404138:	orr	w1, w1, w2
  40413c:	cmp	w1, #0x0
  404140:	cset	w19, ne  // ne = any
  404144:	cmp	x21, #0x0
  404148:	csel	w19, w19, wzr, ne  // ne = any
  40414c:	cbz	w19, 4042c0 <wcrtomb@plt+0x19f0>
  404150:	mov	w0, #0x9                   	// #9
  404154:	bl	403eb0 <wcrtomb@plt+0x15e0>
  404158:	mov	w0, w19
  40415c:	b	4042c0 <wcrtomb@plt+0x19f0>
  404160:	stp	x23, x24, [sp, #48]
  404164:	add	x24, x20, x1
  404168:	ldrb	w26, [x20, x1]
  40416c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404170:	ldr	x0, [x0, #1208]
  404174:	cbz	x0, 4042f0 <wcrtomb@plt+0x1a20>
  404178:	str	xzr, [sp, #88]
  40417c:	mov	w0, #0xffffffff            	// #-1
  404180:	strb	w0, [x20, x1]
  404184:	mov	x19, x20
  404188:	adrp	x23, 43e000 <_obstack_memory_used@@Base+0x27218>
  40418c:	add	x23, x23, #0x468
  404190:	b	4041d0 <wcrtomb@plt+0x1900>
  404194:	ldr	x1, [x19, #8]!
  404198:	tst	x0, x1
  40419c:	b.eq	404194 <wcrtomb@plt+0x18c4>  // b.none
  4041a0:	ldrb	w1, [x19]
  4041a4:	tst	x1, x0
  4041a8:	b.eq	404208 <wcrtomb@plt+0x1938>  // b.none
  4041ac:	cmp	x24, x19
  4041b0:	b.ls	4042f0 <wcrtomb@plt+0x1a20>  // b.plast
  4041b4:	add	x2, sp, #0x58
  4041b8:	sub	x1, x24, x19
  4041bc:	mov	x0, x19
  4041c0:	bl	4169c8 <wcrtomb@plt+0x140f8>
  4041c4:	cmn	x0, #0x3
  4041c8:	b.hi	4042d4 <wcrtomb@plt+0x1a04>  // b.pmore
  4041cc:	add	x19, x19, x0
  4041d0:	tst	x19, #0x7
  4041d4:	b.eq	4041f4 <wcrtomb@plt+0x1924>  // b.none
  4041d8:	ldr	x0, [x23, #80]
  4041dc:	ldrb	w1, [x19]
  4041e0:	tst	x1, x0
  4041e4:	b.ne	4041ac <wcrtomb@plt+0x18dc>  // b.any
  4041e8:	add	x19, x19, #0x1
  4041ec:	tst	x19, #0x7
  4041f0:	b.ne	4041dc <wcrtomb@plt+0x190c>  // b.any
  4041f4:	ldr	x0, [x23, #80]
  4041f8:	ldr	x1, [x19]
  4041fc:	tst	x0, x1
  404200:	b.ne	4041a0 <wcrtomb@plt+0x18d0>  // b.any
  404204:	b	404194 <wcrtomb@plt+0x18c4>
  404208:	ldrb	w1, [x19, #1]!
  40420c:	tst	x1, x0
  404210:	b.ne	4041ac <wcrtomb@plt+0x18dc>  // b.any
  404214:	b	404208 <wcrtomb@plt+0x1938>
  404218:	bl	403e78 <wcrtomb@plt+0x15a8>
  40421c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404220:	ldr	w0, [x0, #1220]
  404224:	cbz	w0, 404234 <wcrtomb@plt+0x1964>
  404228:	mov	w0, w25
  40422c:	bl	403f08 <wcrtomb@plt+0x1638>
  404230:	b	4040a0 <wcrtomb@plt+0x17d0>
  404234:	mov	w0, #0x0                   	// #0
  404238:	bl	403eb0 <wcrtomb@plt+0x15e0>
  40423c:	b	4040a0 <wcrtomb@plt+0x17d0>
  404240:	mov	x0, x20
  404244:	bl	403c88 <wcrtomb@plt+0x13b8>
  404248:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  40424c:	add	x19, x19, #0x468
  404250:	mov	x1, #0x1                   	// #1
  404254:	ldr	x0, [x19, #64]
  404258:	bl	403a98 <wcrtomb@plt+0x11c8>
  40425c:	str	x0, [x19, #64]
  404260:	str	x22, [x19, #56]
  404264:	b	4040c0 <wcrtomb@plt+0x17f0>
  404268:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  40426c:	add	x19, x19, #0x468
  404270:	ldr	x1, [x19, #112]
  404274:	sub	x1, x20, x1
  404278:	ldr	x0, [x19, #120]
  40427c:	bl	403a98 <wcrtomb@plt+0x11c8>
  404280:	mov	x20, x0
  404284:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404288:	ldr	x22, [x0, #912]
  40428c:	mov	x0, x22
  404290:	bl	403dec <wcrtomb@plt+0x151c>
  404294:	mov	x2, x20
  404298:	ldr	w1, [x19, #100]
  40429c:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xd218>
  4042a0:	add	x0, x0, #0x30
  4042a4:	bl	403f84 <wcrtomb@plt+0x16b4>
  4042a8:	mov	x0, x22
  4042ac:	bl	403e44 <wcrtomb@plt+0x1574>
  4042b0:	mov	w0, w25
  4042b4:	bl	403f08 <wcrtomb@plt+0x1638>
  4042b8:	b	404110 <wcrtomb@plt+0x1840>
  4042bc:	mov	w0, #0x1                   	// #1
  4042c0:	ldp	x19, x20, [sp, #16]
  4042c4:	ldp	x21, x22, [sp, #32]
  4042c8:	ldp	x25, x26, [sp, #64]
  4042cc:	ldp	x29, x30, [sp], #96
  4042d0:	ret
  4042d4:	strb	w26, [x20, x21]
  4042d8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4042dc:	mov	w1, #0x1                   	// #1
  4042e0:	strb	w1, [x0, #1257]
  4042e4:	mov	w0, #0x0                   	// #0
  4042e8:	ldp	x23, x24, [sp, #48]
  4042ec:	b	4042c0 <wcrtomb@plt+0x19f0>
  4042f0:	strb	w26, [x20, x21]
  4042f4:	ldp	x23, x24, [sp, #48]
  4042f8:	b	404094 <wcrtomb@plt+0x17c4>
  4042fc:	stp	x29, x30, [sp, #-96]!
  404300:	mov	x29, sp
  404304:	stp	x19, x20, [sp, #16]
  404308:	stp	x21, x22, [sp, #32]
  40430c:	stp	x23, x24, [sp, #48]
  404310:	stp	x25, x26, [sp, #64]
  404314:	stp	x27, x28, [sp, #80]
  404318:	mov	x19, x0
  40431c:	mov	x26, x1
  404320:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404324:	add	x0, x0, #0x468
  404328:	ldr	x20, [x0, #136]
  40432c:	sub	x23, x20, x19
  404330:	ldr	x22, [x0, #144]
  404334:	ldr	x4, [x0, #152]
  404338:	sub	x1, x4, #0x8
  40433c:	ldr	x0, [x0, #160]
  404340:	add	x2, x22, x1
  404344:	sub	x2, x2, x20
  404348:	cmp	x2, x0
  40434c:	b.cc	404398 <wcrtomb@plt+0x1ac8>  // b.lo, b.ul, b.last
  404350:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404354:	str	x23, [x0, #1240]
  404358:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40435c:	add	x0, x0, #0x468
  404360:	ldr	x22, [x0, #152]
  404364:	sub	x1, x22, #0x8
  404368:	ldr	x22, [x0, #144]
  40436c:	add	x22, x22, x1
  404370:	sub	x22, x22, x20
  404374:	ldr	x1, [x0, #160]
  404378:	udiv	x0, x22, x1
  40437c:	msub	x0, x0, x1, x22
  404380:	sub	x22, x22, x0
  404384:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  404388:	add	x19, x19, #0x468
  40438c:	mov	w27, #0x3                   	// #3
  404390:	mov	w28, #0x1                   	// #1
  404394:	b	404598 <wcrtomb@plt+0x1cc8>
  404398:	neg	x21, x19
  40439c:	add	x2, x0, x19
  4043a0:	sub	x1, x1, x0
  4043a4:	cmp	x2, x1
  4043a8:	b.ls	4043d8 <wcrtomb@plt+0x1b08>  // b.plast
  4043ac:	mov	x5, #0xfffffffffffffff7    	// #-9
  4043b0:	sub	x5, x5, x0
  4043b4:	lsr	x3, x5, #1
  4043b8:	cmp	x1, x5, lsr #1
  4043bc:	b.hi	4043d4 <wcrtomb@plt+0x1b04>  // b.pmore
  4043c0:	lsl	x1, x1, #1
  4043c4:	cmp	x2, x1
  4043c8:	b.ls	4043d8 <wcrtomb@plt+0x1b08>  // b.plast
  4043cc:	cmp	x1, x3
  4043d0:	b.ls	4043c0 <wcrtomb@plt+0x1af0>  // b.plast
  4043d4:	bl	414264 <wcrtomb@plt+0x11994>
  4043d8:	ldr	w3, [x26, #16]
  4043dc:	and	w3, w3, #0xf000
  4043e0:	cmp	w3, #0x8, lsl #12
  4043e4:	b.ne	404410 <wcrtomb@plt+0x1b40>  // b.any
  4043e8:	ldr	x3, [x26, #48]
  4043ec:	adrp	x5, 43e000 <_obstack_memory_used@@Base+0x27218>
  4043f0:	ldr	x5, [x5, #1296]
  4043f4:	subs	x3, x3, x5
  4043f8:	add	x5, x3, x19
  4043fc:	ccmp	x3, x5, #0x0, pl  // pl = nfrst
  404400:	b.gt	404410 <wcrtomb@plt+0x1b40>
  404404:	cmp	x5, x2
  404408:	ccmp	x1, x5, #0x0, cs  // cs = hs, nlast
  40440c:	csel	x1, x1, x5, ls  // ls = plast
  404410:	add	x0, x0, #0x8
  404414:	add	x0, x0, x1
  404418:	mov	x24, x22
  40441c:	cmp	x4, x0
  404420:	b.cc	4044a8 <wcrtomb@plt+0x1bd8>  // b.lo, b.ul, b.last
  404424:	add	x0, x19, #0x1
  404428:	add	x20, x24, x0
  40442c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  404430:	ldr	x2, [x1, #1288]
  404434:	add	x3, x2, #0x1
  404438:	udiv	x1, x20, x2
  40443c:	msub	x1, x1, x2, x20
  404440:	sub	x20, x19, x1
  404444:	add	x20, x20, x3
  404448:	add	x20, x24, x20
  40444c:	add	x0, x24, x0
  404450:	cmp	x1, #0x0
  404454:	csel	x20, x0, x20, eq  // eq = none
  404458:	add	x21, x20, x21
  40445c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404460:	add	x0, x0, #0x468
  404464:	str	x21, [x0, #112]
  404468:	ldr	x25, [x0, #144]
  40446c:	sub	x1, x23, x22
  404470:	mov	x2, x19
  404474:	add	x1, x25, x1
  404478:	mov	x0, x21
  40447c:	bl	402280 <memmove@plt>
  404480:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  404484:	ldrb	w0, [x0, #2248]
  404488:	sturb	w0, [x21, #-1]
  40448c:	cmp	x25, x24
  404490:	b.eq	404358 <wcrtomb@plt+0x1a88>  // b.none
  404494:	mov	x0, x25
  404498:	bl	402660 <free@plt>
  40449c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4044a0:	str	x24, [x0, #1272]
  4044a4:	b	404358 <wcrtomb@plt+0x1a88>
  4044a8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4044ac:	str	x0, [x1, #1280]
  4044b0:	bl	413fec <wcrtomb@plt+0x1171c>
  4044b4:	mov	x24, x0
  4044b8:	b	404424 <wcrtomb@plt+0x1b54>
  4044bc:	ldr	w25, [x19, #176]
  4044c0:	ldr	x24, [x19, #168]
  4044c4:	mov	w2, w27
  4044c8:	mov	x1, x24
  4044cc:	mov	w0, w25
  4044d0:	bl	402360 <lseek@plt>
  4044d4:	mov	x23, x0
  4044d8:	tbnz	x0, #63, 4044f4 <wcrtomb@plt+0x1c24>
  4044dc:	sub	x1, x23, x24
  4044e0:	mov	x0, x21
  4044e4:	bl	403a98 <wcrtomb@plt+0x11c8>
  4044e8:	str	x0, [x19, #64]
  4044ec:	str	x23, [x19, #168]
  4044f0:	b	404598 <wcrtomb@plt+0x1cc8>
  4044f4:	bl	402840 <__errno_location@plt>
  4044f8:	ldr	w0, [x0]
  4044fc:	cmp	w0, #0x6
  404500:	b.eq	40450c <wcrtomb@plt+0x1c3c>  // b.none
  404504:	strb	w28, [x19, #181]
  404508:	b	404598 <wcrtomb@plt+0x1cc8>
  40450c:	ldr	w0, [x26, #16]
  404510:	and	w0, w0, #0xf000
  404514:	cmp	w0, #0x8, lsl #12
  404518:	b.ne	404504 <wcrtomb@plt+0x1c34>  // b.any
  40451c:	ldr	x0, [x26, #48]
  404520:	cmp	x24, x0
  404524:	b.ge	404504 <wcrtomb@plt+0x1c34>  // b.tcont
  404528:	mov	w2, #0x2                   	// #2
  40452c:	mov	x1, #0x0                   	// #0
  404530:	mov	w0, w25
  404534:	bl	402360 <lseek@plt>
  404538:	mov	x23, x0
  40453c:	tbnz	x0, #63, 404504 <wcrtomb@plt+0x1c34>
  404540:	b	4044dc <wcrtomb@plt+0x1c0c>
  404544:	mov	w0, #0x0                   	// #0
  404548:	mov	x1, #0x0                   	// #0
  40454c:	b	404554 <wcrtomb@plt+0x1c84>
  404550:	mov	w0, #0x1                   	// #1
  404554:	add	x3, x20, x1
  404558:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x27218>
  40455c:	str	x3, [x2, #1264]
  404560:	str	xzr, [x20, x1]
  404564:	ldp	x19, x20, [sp, #16]
  404568:	ldp	x21, x22, [sp, #32]
  40456c:	ldp	x23, x24, [sp, #48]
  404570:	ldp	x25, x26, [sp, #64]
  404574:	ldp	x27, x28, [sp, #80]
  404578:	ldp	x29, x30, [sp], #96
  40457c:	ret
  404580:	ldr	x0, [x19, #64]
  404584:	bl	403a98 <wcrtomb@plt+0x11c8>
  404588:	mov	x21, x0
  40458c:	str	x0, [x19, #64]
  404590:	ldrb	w0, [x19, #181]
  404594:	cbz	w0, 4044bc <wcrtomb@plt+0x1bec>
  404598:	mov	x2, x22
  40459c:	mov	x1, x20
  4045a0:	ldr	w0, [x19, #176]
  4045a4:	bl	4139a8 <wcrtomb@plt+0x110d8>
  4045a8:	mov	x1, x0
  4045ac:	cmn	x0, #0x1
  4045b0:	b.eq	404544 <wcrtomb@plt+0x1c74>  // b.none
  4045b4:	ldr	x0, [x19, #168]
  4045b8:	add	x0, x0, x1
  4045bc:	str	x0, [x19, #168]
  4045c0:	ldrb	w0, [x19, #180]
  4045c4:	eor	w2, w0, #0x1
  4045c8:	cmp	x1, #0x0
  4045cc:	cset	w0, eq  // eq = none
  4045d0:	orr	w0, w0, w2
  4045d4:	ands	w0, w0, #0xff
  4045d8:	b.ne	404554 <wcrtomb@plt+0x1c84>  // b.any
  4045dc:	add	x2, x20, x1
  4045e0:	cmp	x2, x20
  4045e4:	b.ls	404580 <wcrtomb@plt+0x1cb0>  // b.plast
  4045e8:	mov	x0, x20
  4045ec:	ldrb	w3, [x0]
  4045f0:	cbnz	w3, 404550 <wcrtomb@plt+0x1c80>
  4045f4:	add	x0, x0, #0x1
  4045f8:	cmp	x2, x0
  4045fc:	b.ne	4045ec <wcrtomb@plt+0x1d1c>  // b.any
  404600:	b	404580 <wcrtomb@plt+0x1cb0>
  404604:	stp	x29, x30, [sp, #-112]!
  404608:	mov	x29, sp
  40460c:	stp	x19, x20, [sp, #16]
  404610:	stp	x21, x22, [sp, #32]
  404614:	mov	x21, x0
  404618:	mov	x20, x1
  40461c:	and	w19, w2, #0xff
  404620:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404624:	ldrb	w0, [x0, #1310]
  404628:	cbz	w0, 404728 <wcrtomb@plt+0x1e58>
  40462c:	stp	x25, x26, [sp, #64]
  404630:	cmp	w19, #0x3a
  404634:	cset	w2, eq  // eq = none
  404638:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40463c:	add	x0, x1, #0x468
  404640:	ldrb	w0, [x0, #183]
  404644:	ldr	w1, [x1, #1128]
  404648:	cbz	w1, 404950 <wcrtomb@plt+0x2080>
  40464c:	cmp	w1, #0x0
  404650:	ccmp	w0, #0x0, #0x4, lt  // lt = tstop
  404654:	cset	w1, ne  // ne = any
  404658:	cmp	w1, w2
  40465c:	b.eq	40474c <wcrtomb@plt+0x1e7c>  // b.none
  404660:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  404664:	ldr	x26, [x1, #920]
  404668:	cmp	w19, #0x3a
  40466c:	b.eq	404758 <wcrtomb@plt+0x1e88>  // b.none
  404670:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  404674:	ldr	x25, [x1, #856]
  404678:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40467c:	ldrb	w1, [x1, #1310]
  404680:	cmp	w0, #0x0
  404684:	ccmp	w1, #0x0, #0x4, ne  // ne = any
  404688:	b.ne	404880 <wcrtomb@plt+0x1fb0>  // b.any
  40468c:	ldrb	w2, [x26]
  404690:	cbnz	w2, 40469c <wcrtomb@plt+0x1dcc>
  404694:	ldrb	w2, [x25]
  404698:	cbz	w2, 404968 <wcrtomb@plt+0x2098>
  40469c:	cbz	w0, 4048cc <wcrtomb@plt+0x1ffc>
  4046a0:	cbnz	w1, 404888 <wcrtomb@plt+0x1fb8>
  4046a4:	ldrb	w0, [x25]
  4046a8:	cbnz	w0, 404890 <wcrtomb@plt+0x1fc0>
  4046ac:	ldrb	w0, [x26]
  4046b0:	cbz	w0, 404968 <wcrtomb@plt+0x2098>
  4046b4:	cmp	x20, x21
  4046b8:	b.ls	4048f0 <wcrtomb@plt+0x2020>  // b.plast
  4046bc:	ldurb	w2, [x20, #-1]
  4046c0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4046c4:	ldrb	w1, [x0, #2248]
  4046c8:	mov	x0, #0x0                   	// #0
  4046cc:	cmp	w2, w1
  4046d0:	b.eq	4048dc <wcrtomb@plt+0x200c>  // b.none
  4046d4:	mvn	x1, x0
  4046d8:	ldrb	w1, [x20, x1]
  4046dc:	cmp	w1, #0xd
  4046e0:	cset	w19, eq  // eq = none
  4046e4:	add	x19, x0, w19, sxtw
  4046e8:	sub	x19, x20, x19
  4046ec:	subs	x22, x19, x21
  4046f0:	b.eq	404968 <wcrtomb@plt+0x2098>  // b.none
  4046f4:	mov	x0, x26
  4046f8:	bl	403dc0 <wcrtomb@plt+0x14f0>
  4046fc:	mov	x2, x22
  404700:	mov	x1, #0x1                   	// #1
  404704:	mov	x0, x21
  404708:	bl	403f44 <wcrtomb@plt+0x1674>
  40470c:	ldrb	w0, [x26]
  404710:	mov	x21, x19
  404714:	cbz	w0, 404968 <wcrtomb@plt+0x2098>
  404718:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40471c:	ldr	x0, [x0, #880]
  404720:	bl	4147bc <wcrtomb@plt+0x11eec>
  404724:	b	404968 <wcrtomb@plt+0x2098>
  404728:	sub	x1, x1, x21
  40472c:	mov	w3, w19
  404730:	mov	x2, x20
  404734:	sub	x1, x1, #0x1
  404738:	mov	x0, x21
  40473c:	bl	404060 <wcrtomb@plt+0x1790>
  404740:	and	w0, w0, #0xff
  404744:	cbnz	w0, 40462c <wcrtomb@plt+0x1d5c>
  404748:	b	4049a8 <wcrtomb@plt+0x20d8>
  40474c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  404750:	ldr	x26, [x1, #928]
  404754:	b	404668 <wcrtomb@plt+0x1d98>
  404758:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40475c:	ldr	x25, [x1, #864]
  404760:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  404764:	ldrb	w1, [x1, #1310]
  404768:	eor	w0, w0, #0x1
  40476c:	cmp	w1, #0x0
  404770:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  404774:	b.eq	40468c <wcrtomb@plt+0x1dbc>  // b.none
  404778:	stp	x23, x24, [sp, #48]
  40477c:	b	4049c4 <wcrtomb@plt+0x20f4>
  404780:	ldrb	w0, [x24, #182]
  404784:	cbz	w0, 404844 <wcrtomb@plt+0x1f74>
  404788:	ldrb	w0, [x24, #183]
  40478c:	cmp	w0, #0x0
  404790:	mov	w3, #0x2d                  	// #45
  404794:	mov	w0, #0x3a                  	// #58
  404798:	csel	w3, w3, w0, ne  // ne = any
  40479c:	mov	x2, x20
  4047a0:	mov	x0, x19
  4047a4:	bl	404060 <wcrtomb@plt+0x1790>
  4047a8:	and	w0, w0, #0xff
  4047ac:	cbz	w0, 404834 <wcrtomb@plt+0x1f64>
  4047b0:	mov	x0, x25
  4047b4:	bl	403dec <wcrtomb@plt+0x151c>
  4047b8:	ldr	x2, [sp, #104]
  4047bc:	mov	x1, #0x1                   	// #1
  4047c0:	mov	x0, x19
  4047c4:	bl	403f44 <wcrtomb@plt+0x1674>
  4047c8:	mov	x0, x25
  4047cc:	bl	403e44 <wcrtomb@plt+0x1574>
  4047d0:	ldrb	w0, [x24, #182]
  4047d4:	cbnz	w0, 40486c <wcrtomb@plt+0x1f9c>
  4047d8:	ldr	x22, [sp, #104]
  4047dc:	add	x22, x19, x22
  4047e0:	cmp	x20, x22
  4047e4:	b.ls	404878 <wcrtomb@plt+0x1fa8>  // b.plast
  4047e8:	ldr	x5, [x24, #192]
  4047ec:	mov	x4, x22
  4047f0:	add	x3, sp, #0x68
  4047f4:	mov	x2, x27
  4047f8:	mov	x1, x21
  4047fc:	ldr	x0, [x24, #184]
  404800:	blr	x5
  404804:	cmn	x0, #0x1
  404808:	b.eq	404898 <wcrtomb@plt+0x1fc8>  // b.none
  40480c:	add	x19, x21, x0
  404810:	cmp	x20, x19
  404814:	b.eq	4048c4 <wcrtomb@plt+0x1ff4>  // b.none
  404818:	ldr	x1, [sp, #104]
  40481c:	cbnz	x1, 404780 <wcrtomb@plt+0x1eb0>
  404820:	mov	x0, #0x1                   	// #1
  404824:	str	x0, [sp, #104]
  404828:	cmp	x23, #0x0
  40482c:	csel	x23, x23, x22, ne  // ne = any
  404830:	b	4047d8 <wcrtomb@plt+0x1f08>
  404834:	ldp	x23, x24, [sp, #48]
  404838:	ldp	x25, x26, [sp, #64]
  40483c:	ldp	x27, x28, [sp, #80]
  404840:	b	4049a8 <wcrtomb@plt+0x20d8>
  404844:	mov	x0, x26
  404848:	bl	403dc0 <wcrtomb@plt+0x14f0>
  40484c:	cmp	x23, #0x0
  404850:	csel	x23, x23, x22, ne  // ne = any
  404854:	sub	x2, x19, x23
  404858:	mov	x1, #0x1                   	// #1
  40485c:	mov	x0, x23
  404860:	bl	403f44 <wcrtomb@plt+0x1674>
  404864:	mov	x23, #0x0                   	// #0
  404868:	b	4047b0 <wcrtomb@plt+0x1ee0>
  40486c:	ldrb	w0, [x28]
  404870:	bl	403eb0 <wcrtomb@plt+0x15e0>
  404874:	b	4047d8 <wcrtomb@plt+0x1f08>
  404878:	ldp	x27, x28, [sp, #80]
  40487c:	b	40489c <wcrtomb@plt+0x1fcc>
  404880:	stp	x23, x24, [sp, #48]
  404884:	b	4049c4 <wcrtomb@plt+0x20f4>
  404888:	stp	x23, x24, [sp, #48]
  40488c:	b	4049c4 <wcrtomb@plt+0x20f4>
  404890:	stp	x23, x24, [sp, #48]
  404894:	b	4049c4 <wcrtomb@plt+0x20f4>
  404898:	ldp	x27, x28, [sp, #80]
  40489c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4048a0:	ldrb	w0, [x0, #1310]
  4048a4:	cbnz	w0, 4049f0 <wcrtomb@plt+0x2120>
  4048a8:	mov	x21, x23
  4048ac:	cbz	x23, 404a08 <wcrtomb@plt+0x2138>
  4048b0:	ldp	x23, x24, [sp, #48]
  4048b4:	b	4046ac <wcrtomb@plt+0x1ddc>
  4048b8:	mov	x22, x21
  4048bc:	mov	x23, #0x0                   	// #0
  4048c0:	b	40489c <wcrtomb@plt+0x1fcc>
  4048c4:	ldp	x27, x28, [sp, #80]
  4048c8:	b	40489c <wcrtomb@plt+0x1fcc>
  4048cc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4048d0:	ldrb	w0, [x0, #1310]
  4048d4:	cbnz	w0, 404984 <wcrtomb@plt+0x20b4>
  4048d8:	b	4046ac <wcrtomb@plt+0x1ddc>
  4048dc:	sub	x0, x20, #0x1
  4048e0:	cmp	x21, x0
  4048e4:	b.cs	4048fc <wcrtomb@plt+0x202c>  // b.hs, b.nlast
  4048e8:	mov	x0, #0x1                   	// #1
  4048ec:	b	4046d4 <wcrtomb@plt+0x1e04>
  4048f0:	mov	x0, #0x0                   	// #0
  4048f4:	mov	w19, #0x0                   	// #0
  4048f8:	b	4046e4 <wcrtomb@plt+0x1e14>
  4048fc:	mov	x0, #0x1                   	// #1
  404900:	mov	w19, #0x0                   	// #0
  404904:	b	4046e4 <wcrtomb@plt+0x1e14>
  404908:	sub	x2, x20, x21
  40490c:	mov	x1, #0x1                   	// #1
  404910:	mov	x0, x21
  404914:	bl	403f44 <wcrtomb@plt+0x1674>
  404918:	b	404984 <wcrtomb@plt+0x20b4>
  40491c:	bl	404030 <wcrtomb@plt+0x1760>
  404920:	b	404990 <wcrtomb@plt+0x20c0>
  404924:	stp	x23, x24, [sp, #48]
  404928:	stp	x27, x28, [sp, #80]
  40492c:	mov	w2, #0x5                   	// #5
  404930:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  404934:	add	x1, x1, #0x38
  404938:	mov	x0, #0x0                   	// #0
  40493c:	bl	4027a0 <dcgettext@plt>
  404940:	mov	x2, x0
  404944:	mov	w1, w19
  404948:	mov	w0, #0x2                   	// #2
  40494c:	bl	4022f0 <error@plt>
  404950:	cmp	w2, w0
  404954:	cset	w1, ne  // ne = any
  404958:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40495c:	ldrb	w0, [x0, #1310]
  404960:	tst	w1, w0
  404964:	b.ne	4049b8 <wcrtomb@plt+0x20e8>  // b.any
  404968:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40496c:	ldrb	w0, [x0, #1310]
  404970:	eor	w0, w0, #0x1
  404974:	cmp	x21, x20
  404978:	cset	w1, cc  // cc = lo, ul, last
  40497c:	tst	w1, w0
  404980:	b.ne	404908 <wcrtomb@plt+0x2038>  // b.any
  404984:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404988:	ldrb	w0, [x0, #1328]
  40498c:	cbnz	w0, 40491c <wcrtomb@plt+0x204c>
  404990:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404994:	ldr	w19, [x0, #1148]
  404998:	cbnz	w19, 404924 <wcrtomb@plt+0x2054>
  40499c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4049a0:	str	x20, [x0, #1336]
  4049a4:	ldp	x25, x26, [sp, #64]
  4049a8:	ldp	x19, x20, [sp, #16]
  4049ac:	ldp	x21, x22, [sp, #32]
  4049b0:	ldp	x29, x30, [sp], #112
  4049b4:	ret
  4049b8:	stp	x23, x24, [sp, #48]
  4049bc:	mov	x25, #0x0                   	// #0
  4049c0:	mov	x26, #0x0                   	// #0
  4049c4:	cmp	x20, x21
  4049c8:	b.ls	4048b8 <wcrtomb@plt+0x1fe8>  // b.plast
  4049cc:	stp	x27, x28, [sp, #80]
  4049d0:	mov	x22, x21
  4049d4:	mov	x23, #0x0                   	// #0
  4049d8:	sub	x27, x20, x21
  4049dc:	adrp	x24, 43e000 <_obstack_memory_used@@Base+0x27218>
  4049e0:	add	x24, x24, #0x468
  4049e4:	adrp	x28, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4049e8:	add	x28, x28, #0x8c8
  4049ec:	b	4047e8 <wcrtomb@plt+0x1f18>
  4049f0:	cbz	x20, 4049fc <wcrtomb@plt+0x212c>
  4049f4:	ldp	x23, x24, [sp, #48]
  4049f8:	b	404984 <wcrtomb@plt+0x20b4>
  4049fc:	ldp	x23, x24, [sp, #48]
  404a00:	ldp	x25, x26, [sp, #64]
  404a04:	b	4049a8 <wcrtomb@plt+0x20d8>
  404a08:	cbz	x22, 404a18 <wcrtomb@plt+0x2148>
  404a0c:	mov	x21, x22
  404a10:	ldp	x23, x24, [sp, #48]
  404a14:	b	4046ac <wcrtomb@plt+0x1ddc>
  404a18:	ldp	x23, x24, [sp, #48]
  404a1c:	ldp	x25, x26, [sp, #64]
  404a20:	b	4049a8 <wcrtomb@plt+0x20d8>
  404a24:	stp	x29, x30, [sp, #-64]!
  404a28:	mov	x29, sp
  404a2c:	stp	x21, x22, [sp, #32]
  404a30:	mov	x21, x0
  404a34:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404a38:	ldr	x0, [x0, #1336]
  404a3c:	cbz	x0, 404ab8 <wcrtomb@plt+0x21e8>
  404a40:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404a44:	ldr	x0, [x0, #1344]
  404a48:	cmp	x0, #0x0
  404a4c:	b.le	404ad4 <wcrtomb@plt+0x2204>
  404a50:	stp	x19, x20, [sp, #16]
  404a54:	str	x23, [sp, #48]
  404a58:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x27218>
  404a5c:	add	x20, x20, #0x468
  404a60:	adrp	x22, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  404a64:	add	x22, x22, #0x8c8
  404a68:	mov	w23, #0x2d                  	// #45
  404a6c:	ldr	x19, [x20, #208]
  404a70:	cmp	x19, x21
  404a74:	b.cs	404acc <wcrtomb@plt+0x21fc>  // b.hs, b.nlast
  404a78:	sub	x2, x21, x19
  404a7c:	ldrb	w1, [x22]
  404a80:	mov	x0, x19
  404a84:	bl	402720 <memchr@plt>
  404a88:	mov	w2, w23
  404a8c:	add	x1, x0, #0x1
  404a90:	mov	x0, x19
  404a94:	bl	404604 <wcrtomb@plt+0x1d34>
  404a98:	ldr	x1, [x20, #216]
  404a9c:	sub	x1, x1, #0x1
  404aa0:	str	x1, [x20, #216]
  404aa4:	cmp	x1, #0x0
  404aa8:	b.gt	404a6c <wcrtomb@plt+0x219c>
  404aac:	ldp	x19, x20, [sp, #16]
  404ab0:	ldr	x23, [sp, #48]
  404ab4:	b	404ad4 <wcrtomb@plt+0x2204>
  404ab8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404abc:	add	x0, x0, #0x468
  404ac0:	ldr	x1, [x0, #112]
  404ac4:	str	x1, [x0, #208]
  404ac8:	b	404a40 <wcrtomb@plt+0x2170>
  404acc:	ldp	x19, x20, [sp, #16]
  404ad0:	ldr	x23, [sp, #48]
  404ad4:	ldp	x21, x22, [sp, #32]
  404ad8:	ldp	x29, x30, [sp], #64
  404adc:	ret
  404ae0:	stp	x29, x30, [sp, #-128]!
  404ae4:	mov	x29, sp
  404ae8:	stp	x23, x24, [sp, #48]
  404aec:	mov	x23, x0
  404af0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404af4:	ldr	x0, [x0, #1352]
  404af8:	str	x0, [sp, #104]
  404afc:	cmp	x23, x1
  404b00:	b.cs	404e10 <wcrtomb@plt+0x2540>  // b.hs, b.nlast
  404b04:	stp	x19, x20, [sp, #16]
  404b08:	stp	x21, x22, [sp, #32]
  404b0c:	stp	x25, x26, [sp, #64]
  404b10:	stp	x27, x28, [sp, #80]
  404b14:	mov	x25, x1
  404b18:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x27218>
  404b1c:	add	x20, x20, #0x468
  404b20:	adrp	x28, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  404b24:	add	x28, x28, #0x8c8
  404b28:	b	404d38 <wcrtomb@plt+0x2468>
  404b2c:	ldrb	w0, [x20, #183]
  404b30:	cbz	w0, 404e68 <wcrtomb@plt+0x2598>
  404b34:	str	xzr, [sp, #120]
  404b38:	cmp	x25, x23
  404b3c:	b.ls	404b50 <wcrtomb@plt+0x2280>  // b.plast
  404b40:	mov	x22, x23
  404b44:	mov	x23, x25
  404b48:	mov	x21, x25
  404b4c:	b	404d90 <wcrtomb@plt+0x24c0>
  404b50:	mov	x23, x25
  404b54:	b	404d30 <wcrtomb@plt+0x2460>
  404b58:	mov	x0, x21
  404b5c:	mov	x21, x22
  404b60:	mov	x22, x23
  404b64:	mov	x23, x0
  404b68:	b	404d90 <wcrtomb@plt+0x24c0>
  404b6c:	mov	x0, x22
  404b70:	bl	404a24 <wcrtomb@plt+0x2154>
  404b74:	ldrb	w0, [x20, #232]
  404b78:	cbz	w0, 404da8 <wcrtomb@plt+0x24d8>
  404b7c:	ldrb	w0, [x20, #183]
  404b80:	mov	x24, #0x1                   	// #1
  404b84:	cbz	w0, 404ce0 <wcrtomb@plt+0x2410>
  404b88:	mov	x19, x22
  404b8c:	b	404c18 <wcrtomb@plt+0x2348>
  404b90:	ldr	x4, [x20, #112]
  404b94:	b	404db4 <wcrtomb@plt+0x24e4>
  404b98:	add	x0, x0, #0x1
  404b9c:	cmp	x0, x2
  404ba0:	b.eq	404bc0 <wcrtomb@plt+0x22f0>  // b.none
  404ba4:	cmp	x4, x19
  404ba8:	b.cs	404b98 <wcrtomb@plt+0x22c8>  // b.hs, b.nlast
  404bac:	sub	x19, x19, #0x1
  404bb0:	ldurb	w1, [x19, #-1]
  404bb4:	cmp	w1, w26
  404bb8:	b.ne	404bac <wcrtomb@plt+0x22dc>  // b.any
  404bbc:	b	404b98 <wcrtomb@plt+0x22c8>
  404bc0:	cmp	x3, x19
  404bc4:	cset	w1, ne  // ne = any
  404bc8:	ldrb	w0, [x20, #248]
  404bcc:	tst	w1, w0
  404bd0:	b.ne	404c58 <wcrtomb@plt+0x2388>  // b.any
  404bd4:	cmp	x22, x19
  404bd8:	b.ls	404c10 <wcrtomb@plt+0x2340>  // b.plast
  404bdc:	mov	w24, #0x2d                  	// #45
  404be0:	sub	x2, x22, x19
  404be4:	mov	w1, w26
  404be8:	mov	x0, x19
  404bec:	bl	402720 <memchr@plt>
  404bf0:	mov	x1, x0
  404bf4:	mov	x0, x19
  404bf8:	add	x19, x1, #0x1
  404bfc:	mov	w2, w24
  404c00:	mov	x1, x19
  404c04:	bl	404604 <wcrtomb@plt+0x1d34>
  404c08:	cmp	x19, x22
  404c0c:	b.cc	404be0 <wcrtomb@plt+0x2310>  // b.lo, b.ul, b.last
  404c10:	ldrb	w0, [x20, #183]
  404c14:	cbz	w0, 404dcc <wcrtomb@plt+0x24fc>
  404c18:	mov	x24, #0x0                   	// #0
  404c1c:	mov	w27, #0x3a                  	// #58
  404c20:	cmp	x21, x19
  404c24:	b.hi	404cb0 <wcrtomb@plt+0x23e0>  // b.pmore
  404c28:	mov	x21, x19
  404c2c:	b	404ce0 <wcrtomb@plt+0x2410>
  404c30:	cbz	x2, 404c40 <wcrtomb@plt+0x2370>
  404c34:	ldr	x0, [x20, #256]
  404c38:	mov	x19, x22
  404c3c:	tbnz	x0, #63, 404c10 <wcrtomb@plt+0x2340>
  404c40:	cmp	x3, x22
  404c44:	cset	w1, ne  // ne = any
  404c48:	ldrb	w0, [x20, #248]
  404c4c:	mov	x19, x22
  404c50:	tst	w1, w0
  404c54:	b.eq	404c10 <wcrtomb@plt+0x2340>  // b.none
  404c58:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404c5c:	ldr	x0, [x0, #936]
  404c60:	cbz	x0, 404bd4 <wcrtomb@plt+0x2304>
  404c64:	adrp	x24, 43e000 <_obstack_memory_used@@Base+0x27218>
  404c68:	add	x24, x24, #0x358
  404c6c:	ldr	x0, [x24, #40]
  404c70:	bl	403dec <wcrtomb@plt+0x151c>
  404c74:	ldr	x0, [x24, #80]
  404c78:	bl	403e10 <wcrtomb@plt+0x1540>
  404c7c:	ldr	x0, [x24, #40]
  404c80:	bl	403e44 <wcrtomb@plt+0x1574>
  404c84:	mov	w0, #0xa                   	// #10
  404c88:	bl	403eb0 <wcrtomb@plt+0x15e0>
  404c8c:	b	404bd4 <wcrtomb@plt+0x2304>
  404c90:	mov	w2, w27
  404c94:	mov	x1, x22
  404c98:	mov	x0, x19
  404c9c:	bl	404604 <wcrtomb@plt+0x1d34>
  404ca0:	add	x24, x24, #0x1
  404ca4:	cmp	x21, x22
  404ca8:	b.ls	404dec <wcrtomb@plt+0x251c>  // b.plast
  404cac:	mov	x19, x22
  404cb0:	ldr	x0, [x20, #224]
  404cb4:	cmp	x0, x24
  404cb8:	b.le	404cdc <wcrtomb@plt+0x240c>
  404cbc:	sub	x2, x21, x19
  404cc0:	mov	w1, w26
  404cc4:	mov	x0, x19
  404cc8:	bl	402720 <memchr@plt>
  404ccc:	add	x22, x0, #0x1
  404cd0:	ldrb	w0, [x20, #232]
  404cd4:	cbnz	w0, 404ca0 <wcrtomb@plt+0x23d0>
  404cd8:	b	404c90 <wcrtomb@plt+0x23c0>
  404cdc:	mov	x21, x19
  404ce0:	ldr	x0, [x20, #136]
  404ce4:	sub	x0, x0, x21
  404ce8:	ldr	x21, [x20, #168]
  404cec:	sub	x21, x21, x0
  404cf0:	str	x21, [x20, #264]
  404cf4:	ldrb	w1, [x20, #232]
  404cf8:	mov	x0, #0x0                   	// #0
  404cfc:	cbnz	w1, 404d0c <wcrtomb@plt+0x243c>
  404d00:	ldr	x0, [x20, #256]
  404d04:	cmp	x0, #0x0
  404d08:	csel	x0, x0, xzr, ge  // ge = tcont
  404d0c:	str	x0, [x20, #216]
  404d10:	mov	w0, #0x1                   	// #1
  404d14:	strb	w0, [x20, #248]
  404d18:	ldr	x0, [x20, #224]
  404d1c:	sub	x24, x0, x24
  404d20:	str	x24, [x20, #224]
  404d24:	cbz	x24, 404df4 <wcrtomb@plt+0x2524>
  404d28:	ldrb	w0, [x20, #272]
  404d2c:	cbnz	w0, 404df4 <wcrtomb@plt+0x2524>
  404d30:	cmp	x23, x25
  404d34:	b.cs	404e54 <wcrtomb@plt+0x2584>  // b.hs, b.nlast
  404d38:	ldr	x5, [x20, #192]
  404d3c:	mov	x4, #0x0                   	// #0
  404d40:	add	x3, sp, #0x78
  404d44:	sub	x2, x25, x23
  404d48:	mov	x1, x23
  404d4c:	ldr	x0, [x20, #184]
  404d50:	blr	x5
  404d54:	cmn	x0, #0x1
  404d58:	b.eq	404b2c <wcrtomb@plt+0x225c>  // b.none
  404d5c:	add	x22, x23, x0
  404d60:	ldr	x21, [sp, #120]
  404d64:	add	x21, x22, x21
  404d68:	ldrb	w1, [x20, #183]
  404d6c:	eor	w0, w1, #0x1
  404d70:	cmp	w0, #0x0
  404d74:	ccmp	x25, x22, #0x0, ne  // ne = any
  404d78:	b.eq	404e7c <wcrtomb@plt+0x25ac>  // b.none
  404d7c:	cmp	w0, #0x0
  404d80:	ccmp	x22, x23, #0x2, eq  // eq = none
  404d84:	b.ls	404e4c <wcrtomb@plt+0x257c>  // b.plast
  404d88:	cbnz	w1, 404b58 <wcrtomb@plt+0x2288>
  404d8c:	mov	x23, x21
  404d90:	ldrb	w26, [x28]
  404d94:	ldrb	w0, [x20, #232]
  404d98:	cbnz	w0, 404b7c <wcrtomb@plt+0x22ac>
  404d9c:	ldr	x0, [x20, #216]
  404da0:	cmp	x0, #0x0
  404da4:	b.gt	404b6c <wcrtomb@plt+0x229c>
  404da8:	ldr	x3, [x20, #208]
  404dac:	mov	x4, x3
  404db0:	cbz	x3, 404b90 <wcrtomb@plt+0x22c0>
  404db4:	ldr	x2, [x20, #240]
  404db8:	cmp	x2, #0x0
  404dbc:	b.le	404c30 <wcrtomb@plt+0x2360>
  404dc0:	mov	x19, x22
  404dc4:	mov	x0, #0x0                   	// #0
  404dc8:	b	404ba4 <wcrtomb@plt+0x22d4>
  404dcc:	ldrb	w0, [x20, #232]
  404dd0:	mov	x24, #0x1                   	// #1
  404dd4:	cbnz	w0, 404ce0 <wcrtomb@plt+0x2410>
  404dd8:	mov	w2, #0x3a                  	// #58
  404ddc:	mov	x1, x21
  404de0:	mov	x0, x22
  404de4:	bl	404604 <wcrtomb@plt+0x1d34>
  404de8:	b	404ce0 <wcrtomb@plt+0x2410>
  404dec:	mov	x21, x22
  404df0:	b	404ce0 <wcrtomb@plt+0x2410>
  404df4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404df8:	ldrb	w0, [x0, #1401]
  404dfc:	cbnz	w0, 404e2c <wcrtomb@plt+0x255c>
  404e00:	ldp	x19, x20, [sp, #16]
  404e04:	ldp	x21, x22, [sp, #32]
  404e08:	ldp	x25, x26, [sp, #64]
  404e0c:	ldp	x27, x28, [sp, #80]
  404e10:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404e14:	ldr	x0, [x0, #1352]
  404e18:	ldr	x1, [sp, #104]
  404e1c:	sub	x0, x1, x0
  404e20:	ldp	x23, x24, [sp, #48]
  404e24:	ldp	x29, x30, [sp], #128
  404e28:	ret
  404e2c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404e30:	ldrb	w0, [x0, #1145]
  404e34:	cbz	w0, 404e44 <wcrtomb@plt+0x2574>
  404e38:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404e3c:	ldr	w0, [x0, #968]
  404e40:	bl	4022e0 <exit@plt>
  404e44:	mov	w0, #0x0                   	// #0
  404e48:	b	404e40 <wcrtomb@plt+0x2570>
  404e4c:	mov	x23, x21
  404e50:	b	404d30 <wcrtomb@plt+0x2460>
  404e54:	ldp	x19, x20, [sp, #16]
  404e58:	ldp	x21, x22, [sp, #32]
  404e5c:	ldp	x25, x26, [sp, #64]
  404e60:	ldp	x27, x28, [sp, #80]
  404e64:	b	404e10 <wcrtomb@plt+0x2540>
  404e68:	ldp	x19, x20, [sp, #16]
  404e6c:	ldp	x21, x22, [sp, #32]
  404e70:	ldp	x25, x26, [sp, #64]
  404e74:	ldp	x27, x28, [sp, #80]
  404e78:	b	404e10 <wcrtomb@plt+0x2540>
  404e7c:	ldp	x19, x20, [sp, #16]
  404e80:	ldp	x21, x22, [sp, #32]
  404e84:	ldp	x25, x26, [sp, #64]
  404e88:	ldp	x27, x28, [sp, #80]
  404e8c:	b	404e10 <wcrtomb@plt+0x2540>
  404e90:	stp	x29, x30, [sp, #-400]!
  404e94:	mov	x29, sp
  404e98:	stp	x19, x20, [sp, #16]
  404e9c:	stp	x21, x22, [sp, #32]
  404ea0:	stp	x23, x24, [sp, #48]
  404ea4:	mov	w23, w0
  404ea8:	and	w21, w1, #0xff
  404eac:	add	x2, sp, #0x110
  404eb0:	mov	w1, w0
  404eb4:	mov	w0, #0x0                   	// #0
  404eb8:	bl	402780 <__fxstat@plt>
  404ebc:	cbnz	w0, 404f28 <wcrtomb@plt+0x2658>
  404ec0:	mov	w19, w0
  404ec4:	cbz	w23, 405a3c <wcrtomb@plt+0x316c>
  404ec8:	mov	w0, w21
  404ecc:	bl	403834 <wcrtomb@plt+0xf64>
  404ed0:	and	w0, w0, #0xff
  404ed4:	cbz	w0, 404ee8 <wcrtomb@plt+0x2618>
  404ed8:	ldr	w0, [sp, #288]
  404edc:	bl	40380c <wcrtomb@plt+0xf3c>
  404ee0:	and	w0, w0, #0xff
  404ee4:	cbnz	w0, 404f7c <wcrtomb@plt+0x26ac>
  404ee8:	cbz	w21, 405be0 <wcrtomb@plt+0x3310>
  404eec:	ldr	w0, [sp, #288]
  404ef0:	and	w0, w0, #0xf000
  404ef4:	cmp	w0, #0x4, lsl #12
  404ef8:	b.ne	404f54 <wcrtomb@plt+0x2684>  // b.any
  404efc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404f00:	ldr	w0, [x0, #944]
  404f04:	cmp	w0, #0x4
  404f08:	b.eq	404f7c <wcrtomb@plt+0x26ac>  // b.none
  404f0c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404f10:	ldrb	w0, [x0, #1440]
  404f14:	cbnz	w0, 405be0 <wcrtomb@plt+0x3310>
  404f18:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404f1c:	add	x0, x0, #0x468
  404f20:	add	x0, x0, #0x128
  404f24:	b	404f60 <wcrtomb@plt+0x2690>
  404f28:	bl	402840 <__errno_location@plt>
  404f2c:	ldr	w0, [x0]
  404f30:	bl	40395c <wcrtomb@plt+0x108c>
  404f34:	mov	w20, #0x1                   	// #1
  404f38:	cbnz	w23, 404f80 <wcrtomb@plt+0x26b0>
  404f3c:	mov	w0, w20
  404f40:	ldp	x19, x20, [sp, #16]
  404f44:	ldp	x21, x22, [sp, #32]
  404f48:	ldp	x23, x24, [sp, #48]
  404f4c:	ldp	x29, x30, [sp], #400
  404f50:	ret
  404f54:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404f58:	add	x0, x0, #0x468
  404f5c:	add	x0, x0, #0x118
  404f60:	ldr	x0, [x0, #8]
  404f64:	cbz	x0, 405be0 <wcrtomb@plt+0x3310>
  404f68:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  404f6c:	ldr	x1, [x1, #1136]
  404f70:	bl	41001c <wcrtomb@plt+0xd74c>
  404f74:	and	w0, w0, #0xff
  404f78:	cbz	w0, 405be0 <wcrtomb@plt+0x3310>
  404f7c:	mov	w20, #0x1                   	// #1
  404f80:	mov	w0, w23
  404f84:	bl	402530 <close@plt>
  404f88:	cbz	w0, 404f3c <wcrtomb@plt+0x266c>
  404f8c:	bl	402840 <__errno_location@plt>
  404f90:	ldr	w0, [x0]
  404f94:	bl	40395c <wcrtomb@plt+0x108c>
  404f98:	b	404f3c <wcrtomb@plt+0x266c>
  404f9c:	mov	w1, #0x0                   	// #0
  404fa0:	ldr	w0, [sp, #288]
  404fa4:	and	w0, w0, #0xf000
  404fa8:	cmp	w0, #0x4, lsl #12
  404fac:	cset	w2, eq  // eq = none
  404fb0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404fb4:	str	w2, [x0, #1216]
  404fb8:	cbz	w1, 405a48 <wcrtomb@plt+0x3178>
  404fbc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404fc0:	ldr	w0, [x0, #944]
  404fc4:	cmp	w0, #0x3
  404fc8:	b.eq	405004 <wcrtomb@plt+0x2734>  // b.none
  404fcc:	cmp	w0, #0x4
  404fd0:	b.eq	405328 <wcrtomb@plt+0x2a58>  // b.none
  404fd4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  404fd8:	ldr	w0, [x0, #1132]
  404fdc:	cmp	w0, #0x2
  404fe0:	b.eq	404ff0 <wcrtomb@plt+0x2720>  // b.none
  404fe4:	cmp	w0, #0x0
  404fe8:	ccmp	w21, #0x0, #0x0, eq  // eq = none
  404fec:	b.ne	405a48 <wcrtomb@plt+0x3178>  // b.any
  404ff0:	ldr	w0, [sp, #288]
  404ff4:	bl	40380c <wcrtomb@plt+0xf3c>
  404ff8:	and	w0, w0, #0xff
  404ffc:	cbz	w0, 405a48 <wcrtomb@plt+0x3178>
  405000:	b	404f7c <wcrtomb@plt+0x26ac>
  405004:	ldr	w0, [sp, #288]
  405008:	and	w0, w0, #0xf000
  40500c:	cmp	w0, #0x4, lsl #12
  405010:	b.ne	404fd4 <wcrtomb@plt+0x2704>  // b.any
  405014:	stp	x25, x26, [sp, #64]
  405018:	stp	x27, x28, [sp, #80]
  40501c:	eor	w20, w21, #0xfffffffe
  405020:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405024:	ldr	w0, [x0, #948]
  405028:	and	w20, w20, w0
  40502c:	mov	w0, w23
  405030:	bl	402530 <close@plt>
  405034:	cbnz	w0, 405078 <wcrtomb@plt+0x27a8>
  405038:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40503c:	ldr	x0, [x0, #1136]
  405040:	str	x0, [sp, #128]
  405044:	str	xzr, [sp, #136]
  405048:	mov	x2, #0x0                   	// #0
  40504c:	mov	w1, w20
  405050:	add	x0, sp, #0x80
  405054:	bl	415c60 <wcrtomb@plt+0x13390>
  405058:	mov	x24, x0
  40505c:	mov	w20, #0x1                   	// #1
  405060:	cbz	x0, 405088 <wcrtomb@plt+0x27b8>
  405064:	adrp	x26, 43e000 <_obstack_memory_used@@Base+0x27218>
  405068:	add	x26, x26, #0x468
  40506c:	adrp	x27, 424000 <_obstack_memory_used@@Base+0xd218>
  405070:	add	x27, x27, #0x48
  405074:	b	405134 <wcrtomb@plt+0x2864>
  405078:	bl	402840 <__errno_location@plt>
  40507c:	ldr	w0, [x0]
  405080:	bl	40395c <wcrtomb@plt+0x108c>
  405084:	b	405038 <wcrtomb@plt+0x2768>
  405088:	bl	414264 <wcrtomb@plt+0x11994>
  40508c:	sub	w1, w0, #0x1
  405090:	and	w1, w1, #0xffff
  405094:	cmp	w1, #0x1
  405098:	ccmp	w0, #0x4, #0x4, hi  // hi = pmore
  40509c:	b.eq	4050d0 <wcrtomb@plt+0x2800>  // b.none
  4050a0:	ldr	x0, [x26, #280]
  4050a4:	cbz	x0, 405164 <wcrtomb@plt+0x2894>
  4050a8:	add	x1, x22, #0xf8
  4050ac:	bl	41001c <wcrtomb@plt+0xd74c>
  4050b0:	and	w0, w0, #0xff
  4050b4:	cbz	w0, 405164 <wcrtomb@plt+0x2894>
  4050b8:	mov	w2, #0x4                   	// #4
  4050bc:	mov	x1, x22
  4050c0:	mov	x0, x24
  4050c4:	bl	4167e8 <wcrtomb@plt+0x13f18>
  4050c8:	mov	w28, #0x1                   	// #1
  4050cc:	b	405130 <wcrtomb@plt+0x2860>
  4050d0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4050d4:	ldr	w0, [x0, #944]
  4050d8:	cmp	w0, #0x4
  4050dc:	b.eq	4050b8 <wcrtomb@plt+0x27e8>  // b.none
  4050e0:	ldr	x0, [x26, #296]
  4050e4:	b	4050a4 <wcrtomb@plt+0x27d4>
  4050e8:	ldr	w0, [x24, #72]
  4050ec:	mov	w25, #0x1                   	// #1
  4050f0:	tbnz	w0, #1, 405100 <wcrtomb@plt+0x2830>
  4050f4:	tst	x0, #0x1
  4050f8:	ccmp	w23, #0x0, #0x4, ne  // ne = any
  4050fc:	cset	w25, ne  // ne = any
  405100:	ldrh	w1, [x22, #108]
  405104:	cmp	w1, #0x7
  405108:	b.eq	4051a4 <wcrtomb@plt+0x28d4>  // b.none
  40510c:	b.ls	405188 <wcrtomb@plt+0x28b8>  // b.plast
  405110:	cmp	w1, #0xc
  405114:	b.eq	4052dc <wcrtomb@plt+0x2a0c>  // b.none
  405118:	b.ls	4051e4 <wcrtomb@plt+0x2914>  // b.plast
  40511c:	cmp	w1, #0xd
  405120:	b.eq	405248 <wcrtomb@plt+0x2978>  // b.none
  405124:	cmp	w1, #0xe
  405128:	b.ne	4052d0 <wcrtomb@plt+0x2a00>  // b.any
  40512c:	mov	w28, #0x1                   	// #1
  405130:	and	w20, w20, w28
  405134:	mov	x0, x24
  405138:	bl	41612c <wcrtomb@plt+0x1385c>
  40513c:	mov	x22, x0
  405140:	cbz	x0, 4052e4 <wcrtomb@plt+0x2a14>
  405144:	ldr	x0, [x22, #88]
  405148:	cmp	x0, #0x0
  40514c:	cset	w23, eq  // eq = none
  405150:	and	w23, w21, w23
  405154:	ldrh	w0, [x22, #108]
  405158:	cmp	w0, #0x6
  40515c:	b.eq	4052d4 <wcrtomb@plt+0x2a04>  // b.none
  405160:	cbz	w23, 40508c <wcrtomb@plt+0x27bc>
  405164:	ldr	x0, [x22, #56]
  405168:	str	x0, [x26, #8]
  40516c:	ldrb	w1, [x26, #312]
  405170:	cbz	w1, 4050e8 <wcrtomb@plt+0x2818>
  405174:	ldrb	w1, [x0, #1]
  405178:	cbz	w1, 4050e8 <wcrtomb@plt+0x2818>
  40517c:	add	x0, x0, #0x2
  405180:	str	x0, [x26, #8]
  405184:	b	4050e8 <wcrtomb@plt+0x2818>
  405188:	cmp	w1, #0x2
  40518c:	b.eq	405264 <wcrtomb@plt+0x2994>  // b.none
  405190:	b.ls	4051b4 <wcrtomb@plt+0x28e4>  // b.plast
  405194:	cmp	w1, #0x3
  405198:	b.eq	4051f4 <wcrtomb@plt+0x2924>  // b.none
  40519c:	cmp	w1, #0x4
  4051a0:	b.ne	4052d0 <wcrtomb@plt+0x2a00>  // b.any
  4051a4:	ldr	w0, [x22, #64]
  4051a8:	bl	40395c <wcrtomb@plt+0x108c>
  4051ac:	mov	w28, #0x1                   	// #1
  4051b0:	b	405130 <wcrtomb@plt+0x2860>
  4051b4:	cmp	w1, #0x1
  4051b8:	b.ne	4052d0 <wcrtomb@plt+0x2a00>  // b.any
  4051bc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4051c0:	ldr	w0, [x0, #944]
  4051c4:	mov	w28, #0x1                   	// #1
  4051c8:	cmp	w0, #0x3
  4051cc:	b.eq	405130 <wcrtomb@plt+0x2860>  // b.none
  4051d0:	mov	w2, #0x4                   	// #4
  4051d4:	mov	x1, x22
  4051d8:	mov	x0, x24
  4051dc:	bl	4167e8 <wcrtomb@plt+0x13f18>
  4051e0:	b	405248 <wcrtomb@plt+0x2978>
  4051e4:	cmp	w1, #0xa
  4051e8:	b.eq	4051a4 <wcrtomb@plt+0x28d4>  // b.none
  4051ec:	cmp	w1, #0xb
  4051f0:	b.ne	405240 <wcrtomb@plt+0x2970>  // b.any
  4051f4:	mov	w0, w23
  4051f8:	bl	403834 <wcrtomb@plt+0xf64>
  4051fc:	ands	w28, w0, #0xff
  405200:	b.eq	405248 <wcrtomb@plt+0x2978>  // b.none
  405204:	ldr	w0, [x22, #136]
  405208:	cbnz	w0, 4052b8 <wcrtomb@plt+0x29e8>
  40520c:	cmp	w25, #0x0
  405210:	mov	w4, #0x100                 	// #256
  405214:	csel	w4, w19, w4, ne  // ne = any
  405218:	add	x3, sp, #0x90
  40521c:	ldr	x2, [x22, #48]
  405220:	ldr	w1, [x24, #44]
  405224:	bl	4028c0 <__fxstatat@plt>
  405228:	add	x1, sp, #0x90
  40522c:	cbz	w0, 4052bc <wcrtomb@plt+0x29ec>
  405230:	bl	402840 <__errno_location@plt>
  405234:	ldr	w0, [x0]
  405238:	bl	40395c <wcrtomb@plt+0x108c>
  40523c:	b	405130 <wcrtomb@plt+0x2860>
  405240:	cmp	w1, #0x8
  405244:	b.ne	4052d0 <wcrtomb@plt+0x2a00>  // b.any
  405248:	mov	w3, w23
  40524c:	mov	w2, w25
  405250:	ldr	x1, [x22, #48]
  405254:	ldr	w0, [x24, #44]
  405258:	bl	405bf4 <wcrtomb@plt+0x3324>
  40525c:	and	w28, w0, #0xff
  405260:	b	405130 <wcrtomb@plt+0x2860>
  405264:	ldrb	w28, [x26, #16]
  405268:	cbnz	w28, 405130 <wcrtomb@plt+0x2860>
  40526c:	mov	w2, #0x5                   	// #5
  405270:	mov	x1, x27
  405274:	mov	x0, #0x0                   	// #0
  405278:	bl	4027a0 <dcgettext@plt>
  40527c:	mov	x22, x0
  405280:	ldr	x23, [x26, #8]
  405284:	mov	w2, #0x5                   	// #5
  405288:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  40528c:	add	x1, x1, #0x58
  405290:	mov	x0, #0x0                   	// #0
  405294:	bl	4027a0 <dcgettext@plt>
  405298:	mov	x4, x0
  40529c:	mov	x3, x23
  4052a0:	mov	x2, x22
  4052a4:	mov	w1, #0x0                   	// #0
  4052a8:	mov	w0, #0x0                   	// #0
  4052ac:	bl	4022f0 <error@plt>
  4052b0:	mov	w28, #0x1                   	// #1
  4052b4:	b	405130 <wcrtomb@plt+0x2860>
  4052b8:	add	x1, x22, #0x78
  4052bc:	ldr	w0, [x1, #16]
  4052c0:	bl	40380c <wcrtomb@plt+0xf3c>
  4052c4:	and	w0, w0, #0xff
  4052c8:	cbz	w0, 405248 <wcrtomb@plt+0x2978>
  4052cc:	b	405130 <wcrtomb@plt+0x2860>
  4052d0:	bl	4025a0 <abort@plt>
  4052d4:	mov	w28, #0x1                   	// #1
  4052d8:	b	405130 <wcrtomb@plt+0x2860>
  4052dc:	mov	w28, #0x1                   	// #1
  4052e0:	b	405130 <wcrtomb@plt+0x2860>
  4052e4:	bl	402840 <__errno_location@plt>
  4052e8:	mov	x19, x0
  4052ec:	ldr	w0, [x0]
  4052f0:	cbnz	w0, 40530c <wcrtomb@plt+0x2a3c>
  4052f4:	mov	x0, x24
  4052f8:	bl	415fec <wcrtomb@plt+0x1371c>
  4052fc:	cbnz	w0, 405314 <wcrtomb@plt+0x2a44>
  405300:	ldp	x25, x26, [sp, #64]
  405304:	ldp	x27, x28, [sp, #80]
  405308:	b	404f3c <wcrtomb@plt+0x266c>
  40530c:	bl	40395c <wcrtomb@plt+0x108c>
  405310:	b	4052f4 <wcrtomb@plt+0x2a24>
  405314:	ldr	w0, [x19]
  405318:	bl	40395c <wcrtomb@plt+0x108c>
  40531c:	ldp	x25, x26, [sp, #64]
  405320:	ldp	x27, x28, [sp, #80]
  405324:	b	404f3c <wcrtomb@plt+0x266c>
  405328:	ldr	w0, [sp, #288]
  40532c:	and	w0, w0, #0xf000
  405330:	cmp	w0, #0x4, lsl #12
  405334:	b.ne	404fd4 <wcrtomb@plt+0x2704>  // b.any
  405338:	b	404f7c <wcrtomb@plt+0x26ac>
  40533c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405340:	ldr	x0, [x0, #1464]
  405344:	ldr	x1, [sp, #280]
  405348:	cmp	x1, x0
  40534c:	b.ne	405a84 <wcrtomb@plt+0x31b4>  // b.any
  405350:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405354:	ldr	x0, [x0, #1456]
  405358:	ldr	x1, [sp, #272]
  40535c:	cmp	x1, x0
  405360:	b.ne	405a84 <wcrtomb@plt+0x31b4>  // b.any
  405364:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405368:	ldrb	w0, [x0, #1144]
  40536c:	cbz	w0, 405384 <wcrtomb@plt+0x2ab4>
  405370:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405374:	mov	w1, #0x1                   	// #1
  405378:	strb	w1, [x0, #1145]
  40537c:	mov	w20, #0x1                   	// #1
  405380:	b	404f38 <wcrtomb@plt+0x2668>
  405384:	mov	w2, #0x5                   	// #5
  405388:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  40538c:	add	x1, x1, #0x78
  405390:	mov	x0, #0x0                   	// #0
  405394:	bl	4027a0 <dcgettext@plt>
  405398:	mov	x19, x0
  40539c:	bl	403914 <wcrtomb@plt+0x1044>
  4053a0:	bl	41398c <wcrtomb@plt+0x110bc>
  4053a4:	mov	x3, x0
  4053a8:	mov	x2, x19
  4053ac:	mov	w1, #0x0                   	// #0
  4053b0:	mov	w0, #0x0                   	// #0
  4053b4:	bl	4022f0 <error@plt>
  4053b8:	b	405370 <wcrtomb@plt+0x2aa0>
  4053bc:	mov	w2, #0x1                   	// #1
  4053c0:	mov	x1, #0x0                   	// #0
  4053c4:	mov	w0, #0x0                   	// #0
  4053c8:	bl	402360 <lseek@plt>
  4053cc:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4053d0:	add	x1, x1, #0x468
  4053d4:	str	x0, [x1, #168]
  4053d8:	lsr	x2, x0, #63
  4053dc:	and	w2, w2, #0xff
  4053e0:	strb	w2, [x1, #456]
  4053e4:	strb	w2, [x1, #181]
  4053e8:	tbz	x0, #63, 405af8 <wcrtomb@plt+0x3228>
  4053ec:	bl	402840 <__errno_location@plt>
  4053f0:	ldr	w0, [x0]
  4053f4:	cmp	w0, #0x1d
  4053f8:	b.ne	405408 <wcrtomb@plt+0x2b38>  // b.any
  4053fc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405400:	str	xzr, [x0, #1296]
  405404:	b	405af8 <wcrtomb@plt+0x3228>
  405408:	bl	40395c <wcrtomb@plt+0x108c>
  40540c:	str	wzr, [sp, #116]
  405410:	mov	x25, #0x0                   	// #0
  405414:	b	4057d4 <wcrtomb@plt+0x2f04>
  405418:	bl	402840 <__errno_location@plt>
  40541c:	ldr	w0, [x0]
  405420:	bl	40395c <wcrtomb@plt+0x108c>
  405424:	mov	x25, #0x0                   	// #0
  405428:	b	4057d4 <wcrtomb@plt+0x2f04>
  40542c:	ldr	x0, [x19, #112]
  405430:	ldr	x1, [x19, #136]
  405434:	sub	x20, x1, x0
  405438:	strb	wzr, [x1]
  40543c:	bl	4022c0 <strlen@plt>
  405440:	cmp	x20, x0
  405444:	b.ne	4054c4 <wcrtomb@plt+0x2bf4>  // b.any
  405448:	cbz	w21, 405654 <wcrtomb@plt+0x2d84>
  40544c:	ldrb	w0, [x19, #456]
  405450:	cbnz	w0, 405654 <wcrtomb@plt+0x2d84>
  405454:	ldr	w0, [sp, #288]
  405458:	and	w0, w0, #0xf000
  40545c:	cmp	w0, #0x8, lsl #12
  405460:	b.ne	405654 <wcrtomb@plt+0x2d84>  // b.any
  405464:	ldr	x0, [sp, #320]
  405468:	cmp	x20, x0
  40546c:	b.cs	405654 <wcrtomb@plt+0x2d84>  // b.hs, b.nlast
  405470:	cbnz	w23, 40548c <wcrtomb@plt+0x2bbc>
  405474:	mov	w2, #0x1                   	// #1
  405478:	mov	x1, #0x0                   	// #0
  40547c:	mov	w0, #0x0                   	// #0
  405480:	bl	402360 <lseek@plt>
  405484:	mov	x20, x0
  405488:	tbnz	x0, #63, 405654 <wcrtomb@plt+0x2d84>
  40548c:	mov	w2, #0x4                   	// #4
  405490:	mov	x1, x20
  405494:	mov	w0, w23
  405498:	bl	402360 <lseek@plt>
  40549c:	mov	x21, x0
  4054a0:	tbnz	x0, #63, 405654 <wcrtomb@plt+0x2d84>
  4054a4:	mov	w2, #0x0                   	// #0
  4054a8:	mov	x1, x20
  4054ac:	mov	w0, w23
  4054b0:	bl	402360 <lseek@plt>
  4054b4:	tbnz	x0, #63, 4054fc <wcrtomb@plt+0x2c2c>
  4054b8:	ldr	x0, [sp, #320]
  4054bc:	cmp	x21, x0
  4054c0:	b.ge	405654 <wcrtomb@plt+0x2d84>  // b.tcont
  4054c4:	ldr	w0, [x19, #72]
  4054c8:	cmp	w0, #0x2
  4054cc:	b.eq	4057c0 <wcrtomb@plt+0x2ef0>  // b.none
  4054d0:	ldrb	w0, [x19, #457]
  4054d4:	cbnz	w0, 4054e4 <wcrtomb@plt+0x2c14>
  4054d8:	mov	w0, #0x1                   	// #1
  4054dc:	strb	w0, [x19, #232]
  4054e0:	strb	w0, [x19, #272]
  4054e4:	ldrb	w0, [x19, #458]
  4054e8:	strb	w0, [x19, #180]
  4054ec:	mov	x28, x25
  4054f0:	ldr	w0, [sp, #112]
  4054f4:	str	w0, [sp, #108]
  4054f8:	b	405654 <wcrtomb@plt+0x2d84>
  4054fc:	bl	402840 <__errno_location@plt>
  405500:	ldr	w0, [x0]
  405504:	bl	40395c <wcrtomb@plt+0x108c>
  405508:	b	4054b8 <wcrtomb@plt+0x2be8>
  40550c:	cbz	x26, 405730 <wcrtomb@plt+0x2e60>
  405510:	add	x1, x22, #0x1
  405514:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x27218>
  405518:	add	x2, x2, #0x468
  40551c:	str	x1, [x2, #136]
  405520:	strb	w24, [x22]
  405524:	ldr	x2, [x2, #224]
  405528:	cbnz	x2, 4057a0 <wcrtomb@plt+0x2ed0>
  40552c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405530:	ldr	x0, [x0, #1344]
  405534:	cbz	x0, 405730 <wcrtomb@plt+0x2e60>
  405538:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40553c:	ldr	x0, [x0, #1264]
  405540:	bl	404a24 <wcrtomb@plt+0x2154>
  405544:	b	405730 <wcrtomb@plt+0x2e60>
  405548:	ldurb	w27, [x21, #-1]
  40554c:	sturb	w24, [x21, #-1]
  405550:	sub	x2, x22, x21
  405554:	add	x2, x2, #0x1
  405558:	ldr	w1, [sp, #112]
  40555c:	sub	x0, x21, #0x1
  405560:	bl	4026a0 <memrchr@plt>
  405564:	add	x20, x0, #0x1
  405568:	sturb	w27, [x21, #-1]
  40556c:	cmp	x21, x20
  405570:	b.eq	4055b4 <wcrtomb@plt+0x2ce4>  // b.none
  405574:	sub	x0, x21, x26
  405578:	sub	x26, x22, x20
  40557c:	cmp	x20, x0
  405580:	b.ls	4055bc <wcrtomb@plt+0x2cec>  // b.plast
  405584:	ldr	x1, [x19, #224]
  405588:	cbnz	x1, 4056b8 <wcrtomb@plt+0x2de8>
  40558c:	ldr	x0, [x19, #216]
  405590:	cbz	x0, 405a34 <wcrtomb@plt+0x3164>
  405594:	mov	x0, x20
  405598:	bl	404a24 <wcrtomb@plt+0x2154>
  40559c:	ldr	x0, [x19, #224]
  4055a0:	ldr	x1, [x19, #216]
  4055a4:	orr	x0, x0, x1
  4055a8:	cbnz	x0, 4056d4 <wcrtomb@plt+0x2e04>
  4055ac:	str	wzr, [sp, #116]
  4055b0:	b	405730 <wcrtomb@plt+0x2e60>
  4055b4:	sub	x20, x21, x26
  4055b8:	sub	x26, x22, x20
  4055bc:	ldr	x1, [x19, #240]
  4055c0:	cmp	x1, #0x0
  4055c4:	b.le	405600 <wcrtomb@plt+0x2d30>
  4055c8:	ldr	x3, [x19, #112]
  4055cc:	ldr	x2, [x19, #208]
  4055d0:	mov	x0, #0x0                   	// #0
  4055d4:	cmp	x3, x20
  4055d8:	b.cs	405600 <wcrtomb@plt+0x2d30>  // b.hs, b.nlast
  4055dc:	cmp	x2, x20
  4055e0:	b.eq	405610 <wcrtomb@plt+0x2d40>  // b.none
  4055e4:	add	x0, x0, #0x1
  4055e8:	sub	x20, x20, #0x1
  4055ec:	ldurb	w4, [x20, #-1]
  4055f0:	cmp	w4, w24
  4055f4:	b.ne	4055e8 <wcrtomb@plt+0x2d18>  // b.any
  4055f8:	cmp	x0, x1
  4055fc:	b.ne	4055d4 <wcrtomb@plt+0x2d04>  // b.any
  405600:	ldr	x0, [x19, #208]
  405604:	cmp	x0, x20
  405608:	b.eq	405610 <wcrtomb@plt+0x2d40>  // b.none
  40560c:	str	xzr, [x19, #208]
  405610:	sub	x27, x22, x20
  405614:	ldrb	w0, [x19, #104]
  405618:	cbnz	w0, 4056f4 <wcrtomb@plt+0x2e24>
  40561c:	ldrb	w0, [x19, #96]
  405620:	cbnz	w0, 405714 <wcrtomb@plt+0x2e44>
  405624:	add	x1, sp, #0x110
  405628:	mov	x0, x27
  40562c:	bl	4042fc <wcrtomb@plt+0x1a2c>
  405630:	mov	w21, #0x0                   	// #0
  405634:	ands	w20, w0, #0xff
  405638:	b.eq	405720 <wcrtomb@plt+0x2e50>  // b.none
  40563c:	cmp	x28, #0x0
  405640:	ccmp	w24, #0x0, #0x4, lt  // lt = tstop
  405644:	b.eq	405654 <wcrtomb@plt+0x2d84>  // b.none
  405648:	ldr	w0, [x19, #72]
  40564c:	cmp	w0, #0x1
  405650:	b.ne	40542c <wcrtomb@plt+0x2b5c>  // b.any
  405654:	ldr	x0, [x19, #112]
  405658:	str	x0, [x19, #56]
  40565c:	ldr	x1, [x19, #208]
  405660:	cbz	x1, 405668 <wcrtomb@plt+0x2d98>
  405664:	str	x0, [x19, #208]
  405668:	add	x21, x0, x27
  40566c:	ldr	x22, [x19, #136]
  405670:	cmp	x21, x22
  405674:	b.eq	40550c <wcrtomb@plt+0x2c3c>  // b.none
  405678:	ldr	w0, [sp, #108]
  40567c:	cbz	w0, 405548 <wcrtomb@plt+0x2c78>
  405680:	mov	x20, x21
  405684:	strb	wzr, [x22]
  405688:	mov	x0, x20
  40568c:	bl	4022c0 <strlen@plt>
  405690:	add	x20, x20, x0
  405694:	ldrb	w0, [sp, #108]
  405698:	strb	w0, [x22]
  40569c:	cmp	x22, x20
  4056a0:	b.eq	405548 <wcrtomb@plt+0x2c78>  // b.none
  4056a4:	ldrb	w0, [sp, #108]
  4056a8:	strb	w0, [x20], #1
  4056ac:	ldrb	w0, [x20]
  4056b0:	cbz	w0, 4056a4 <wcrtomb@plt+0x2dd4>
  4056b4:	b	405684 <wcrtomb@plt+0x2db4>
  4056b8:	mov	x1, x20
  4056bc:	bl	404ae0 <wcrtomb@plt+0x2210>
  4056c0:	add	x25, x25, x0
  4056c4:	ldr	x0, [x19, #216]
  4056c8:	cbnz	x0, 405594 <wcrtomb@plt+0x2cc4>
  4056cc:	ldr	x0, [x19, #224]
  4056d0:	cbz	x0, 405a34 <wcrtomb@plt+0x3164>
  4056d4:	ldrb	w0, [x19, #272]
  4056d8:	cbz	w0, 4055bc <wcrtomb@plt+0x2cec>
  4056dc:	cmp	x28, #0x0
  4056e0:	csel	x0, x28, xzr, ge  // ge = tcont
  4056e4:	cmp	x0, x25
  4056e8:	b.ge	4055bc <wcrtomb@plt+0x2cec>  // b.tcont
  4056ec:	str	wzr, [sp, #116]
  4056f0:	b	405730 <wcrtomb@plt+0x2e60>
  4056f4:	ldr	x1, [x19, #136]
  4056f8:	ldr	x0, [x19, #112]
  4056fc:	sub	x1, x1, x0
  405700:	sub	x1, x1, x27
  405704:	ldr	x0, [x19, #120]
  405708:	bl	403a98 <wcrtomb@plt+0x11c8>
  40570c:	str	x0, [x19, #120]
  405710:	b	40561c <wcrtomb@plt+0x2d4c>
  405714:	mov	x0, x20
  405718:	bl	403c88 <wcrtomb@plt+0x13b8>
  40571c:	b	405624 <wcrtomb@plt+0x2d54>
  405720:	bl	402840 <__errno_location@plt>
  405724:	ldr	w0, [x0]
  405728:	bl	40395c <wcrtomb@plt+0x108c>
  40572c:	str	w20, [sp, #116]
  405730:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405734:	add	x0, x0, #0x468
  405738:	ldrb	w1, [sp, #124]
  40573c:	strb	w1, [x0, #272]
  405740:	ldr	w1, [sp, #120]
  405744:	strb	w1, [x0, #232]
  405748:	cbnz	w1, 4057d0 <wcrtomb@plt+0x2f00>
  40574c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405750:	ldrb	w0, [x0, #1257]
  405754:	cbnz	w0, 405764 <wcrtomb@plt+0x2e94>
  405758:	cmp	x28, #0x0
  40575c:	ccmp	x28, x25, #0x0, ge  // ge = tcont
  405760:	b.ge	4058b0 <wcrtomb@plt+0x2fe0>  // b.tcont
  405764:	mov	w2, #0x5                   	// #5
  405768:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  40576c:	add	x1, x1, #0xa0
  405770:	mov	x0, #0x0                   	// #0
  405774:	bl	4027a0 <dcgettext@plt>
  405778:	mov	x19, x0
  40577c:	bl	403914 <wcrtomb@plt+0x1044>
  405780:	mov	x1, x0
  405784:	mov	x0, x19
  405788:	bl	403f84 <wcrtomb@plt+0x16b4>
  40578c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405790:	ldrb	w0, [x0, #1328]
  405794:	cbnz	w0, 4057b4 <wcrtomb@plt+0x2ee4>
  405798:	ldp	x27, x28, [sp, #80]
  40579c:	b	4057d4 <wcrtomb@plt+0x2f04>
  4057a0:	sub	x26, x27, x26
  4057a4:	add	x0, x0, x26
  4057a8:	bl	404ae0 <wcrtomb@plt+0x2210>
  4057ac:	add	x25, x25, x0
  4057b0:	b	40552c <wcrtomb@plt+0x2c5c>
  4057b4:	bl	404030 <wcrtomb@plt+0x1760>
  4057b8:	ldp	x27, x28, [sp, #80]
  4057bc:	b	4057d4 <wcrtomb@plt+0x2f04>
  4057c0:	str	wzr, [sp, #116]
  4057c4:	mov	x25, #0x0                   	// #0
  4057c8:	ldp	x27, x28, [sp, #80]
  4057cc:	b	4057d4 <wcrtomb@plt+0x2f04>
  4057d0:	ldp	x27, x28, [sp, #80]
  4057d4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4057d8:	ldrb	w0, [x0, #1585]
  4057dc:	cbz	w0, 405808 <wcrtomb@plt+0x2f38>
  4057e0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4057e4:	ldr	w0, [x0, #1216]
  4057e8:	cbnz	w0, 4058b8 <wcrtomb@plt+0x2fe8>
  4057ec:	mov	x1, x25
  4057f0:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xd218>
  4057f4:	add	x0, x0, #0xb8
  4057f8:	bl	403f84 <wcrtomb@plt+0x16b4>
  4057fc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405800:	ldrb	w0, [x0, #1328]
  405804:	cbnz	w0, 4058e0 <wcrtomb@plt+0x3010>
  405808:	cmp	x25, #0x0
  40580c:	cset	w2, ne  // ne = any
  405810:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405814:	ldr	w0, [x0, #1444]
  405818:	cmp	w0, #0x2
  40581c:	cset	w1, ne  // ne = any
  405820:	eor	w20, w2, w1
  405824:	cbz	w0, 405834 <wcrtomb@plt+0x2f64>
  405828:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40582c:	ldrb	w0, [x0, #1587]
  405830:	cbz	w0, 4059e4 <wcrtomb@plt+0x3114>
  405834:	cbnz	w23, 405a2c <wcrtomb@plt+0x315c>
  405838:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40583c:	ldr	x0, [x0, #1352]
  405840:	cbz	x0, 405994 <wcrtomb@plt+0x30c4>
  405844:	ldr	w0, [sp, #116]
  405848:	cbnz	w0, 405984 <wcrtomb@plt+0x30b4>
  40584c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405850:	ldrb	w0, [x0, #1584]
  405854:	cbnz	w0, 405878 <wcrtomb@plt+0x2fa8>
  405858:	mov	w2, #0x2                   	// #2
  40585c:	mov	x1, #0x0                   	// #0
  405860:	bl	402360 <lseek@plt>
  405864:	tbz	x0, #63, 405984 <wcrtomb@plt+0x30b4>
  405868:	bl	402840 <__errno_location@plt>
  40586c:	ldr	w0, [x0]
  405870:	cmp	w0, #0x16
  405874:	b.eq	405984 <wcrtomb@plt+0x30b4>  // b.none
  405878:	ldr	w0, [sp, #288]
  40587c:	and	w0, w0, #0xf000
  405880:	cmp	w0, #0x1, lsl #12
  405884:	b.eq	4058e8 <wcrtomb@plt+0x3018>  // b.none
  405888:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  40588c:	add	x19, x19, #0x468
  405890:	ldr	x2, [x19, #152]
  405894:	ldr	x1, [x19, #144]
  405898:	mov	w0, #0x0                   	// #0
  40589c:	bl	4139a8 <wcrtomb@plt+0x110d8>
  4058a0:	cbz	x0, 405974 <wcrtomb@plt+0x30a4>
  4058a4:	cmn	x0, #0x1
  4058a8:	b.ne	405890 <wcrtomb@plt+0x2fc0>  // b.any
  4058ac:	b	40597c <wcrtomb@plt+0x30ac>
  4058b0:	ldp	x27, x28, [sp, #80]
  4058b4:	b	4057d4 <wcrtomb@plt+0x2f04>
  4058b8:	bl	403e78 <wcrtomb@plt+0x15a8>
  4058bc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4058c0:	ldr	w0, [x0, #1220]
  4058c4:	cbz	w0, 4058d4 <wcrtomb@plt+0x3004>
  4058c8:	mov	w0, #0x3a                  	// #58
  4058cc:	bl	403f08 <wcrtomb@plt+0x1638>
  4058d0:	b	4057ec <wcrtomb@plt+0x2f1c>
  4058d4:	mov	w0, #0x0                   	// #0
  4058d8:	bl	403eb0 <wcrtomb@plt+0x15e0>
  4058dc:	b	4057ec <wcrtomb@plt+0x2f1c>
  4058e0:	bl	404030 <wcrtomb@plt+0x1760>
  4058e4:	b	405808 <wcrtomb@plt+0x2f38>
  4058e8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4058ec:	ldrb	w0, [x0, #1587]
  4058f0:	cbz	w0, 405888 <wcrtomb@plt+0x2fb8>
  4058f4:	mov	w5, #0x1                   	// #1
  4058f8:	mov	x4, #0x18000               	// #98304
  4058fc:	mov	x3, #0x0                   	// #0
  405900:	mov	w2, w5
  405904:	mov	x1, #0x0                   	// #0
  405908:	mov	w0, #0x0                   	// #0
  40590c:	bl	402420 <splice@plt>
  405910:	mov	x19, x0
  405914:	tbz	x0, #63, 40592c <wcrtomb@plt+0x305c>
  405918:	bl	402840 <__errno_location@plt>
  40591c:	ldr	w0, [x0]
  405920:	cmp	w0, #0x16
  405924:	b.ne	405964 <wcrtomb@plt+0x3094>  // b.any
  405928:	b	405888 <wcrtomb@plt+0x2fb8>
  40592c:	cmp	x0, #0x0
  405930:	b.le	405964 <wcrtomb@plt+0x3094>
  405934:	mov	w22, #0x1                   	// #1
  405938:	mov	x21, #0x18000               	// #98304
  40593c:	mov	w5, w22
  405940:	mov	x4, x21
  405944:	mov	x3, #0x0                   	// #0
  405948:	mov	w2, w22
  40594c:	mov	x1, #0x0                   	// #0
  405950:	mov	w0, #0x0                   	// #0
  405954:	bl	402420 <splice@plt>
  405958:	mov	x19, x0
  40595c:	cmp	x0, #0x0
  405960:	b.gt	40593c <wcrtomb@plt+0x306c>
  405964:	cmp	x19, #0x0
  405968:	cset	w0, eq  // eq = none
  40596c:	str	w0, [sp, #116]
  405970:	b	40597c <wcrtomb@plt+0x30ac>
  405974:	mov	w0, #0x1                   	// #1
  405978:	str	w0, [sp, #116]
  40597c:	ldr	w0, [sp, #116]
  405980:	eor	w23, w0, #0x1
  405984:	and	w23, w23, #0x1
  405988:	cbnz	w23, 4059d0 <wcrtomb@plt+0x3100>
  40598c:	ldp	x25, x26, [sp, #64]
  405990:	b	404f3c <wcrtomb@plt+0x266c>
  405994:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405998:	add	x0, x0, #0x468
  40599c:	ldr	x1, [x0, #264]
  4059a0:	ldr	x0, [x0, #168]
  4059a4:	cmp	x0, x1
  4059a8:	b.eq	4059b8 <wcrtomb@plt+0x30e8>  // b.none
  4059ac:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4059b0:	ldrb	w0, [x0, #1584]
  4059b4:	cbz	w0, 4059c0 <wcrtomb@plt+0x30f0>
  4059b8:	and	w23, w23, #0x1
  4059bc:	b	405988 <wcrtomb@plt+0x30b8>
  4059c0:	mov	w2, #0x0                   	// #0
  4059c4:	bl	402360 <lseek@plt>
  4059c8:	lsr	x23, x0, #63
  4059cc:	b	4059b8 <wcrtomb@plt+0x30e8>
  4059d0:	bl	402840 <__errno_location@plt>
  4059d4:	ldr	w0, [x0]
  4059d8:	bl	40395c <wcrtomb@plt+0x108c>
  4059dc:	ldp	x25, x26, [sp, #64]
  4059e0:	b	404f3c <wcrtomb@plt+0x266c>
  4059e4:	cmp	w2, w1
  4059e8:	b.eq	4059f4 <wcrtomb@plt+0x3124>  // b.none
  4059ec:	ldp	x25, x26, [sp, #64]
  4059f0:	b	404f38 <wcrtomb@plt+0x2668>
  4059f4:	bl	403e78 <wcrtomb@plt+0x15a8>
  4059f8:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  4059fc:	add	x19, x19, #0x468
  405a00:	ldr	w1, [x19, #92]
  405a04:	mov	w0, #0xa                   	// #10
  405a08:	and	w0, w1, w0
  405a0c:	bl	403eb0 <wcrtomb@plt+0x15e0>
  405a10:	ldrb	w0, [x19, #200]
  405a14:	cbnz	w0, 405a20 <wcrtomb@plt+0x3150>
  405a18:	ldp	x25, x26, [sp, #64]
  405a1c:	b	404f38 <wcrtomb@plt+0x2668>
  405a20:	bl	404030 <wcrtomb@plt+0x1760>
  405a24:	ldp	x25, x26, [sp, #64]
  405a28:	b	404f38 <wcrtomb@plt+0x2668>
  405a2c:	ldp	x25, x26, [sp, #64]
  405a30:	b	404f80 <wcrtomb@plt+0x26b0>
  405a34:	str	wzr, [sp, #116]
  405a38:	b	405730 <wcrtomb@plt+0x2e60>
  405a3c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405a40:	ldr	w0, [x0, #1216]
  405a44:	tbnz	w0, #31, 404f9c <wcrtomb@plt+0x26cc>
  405a48:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405a4c:	ldrb	w0, [x0, #1360]
  405a50:	str	w0, [sp, #120]
  405a54:	cbnz	w0, 405a84 <wcrtomb@plt+0x31b4>
  405a58:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405a5c:	ldr	w0, [x0, #1444]
  405a60:	cbnz	w0, 405a84 <wcrtomb@plt+0x31b4>
  405a64:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405a68:	ldr	x0, [x0, #1448]
  405a6c:	cmp	x0, #0x1
  405a70:	b.le	405a84 <wcrtomb@plt+0x31b4>
  405a74:	ldr	w0, [sp, #288]
  405a78:	and	w0, w0, #0xf000
  405a7c:	cmp	w0, #0x8, lsl #12
  405a80:	b.eq	40533c <wcrtomb@plt+0x2a6c>  // b.none
  405a84:	stp	x25, x26, [sp, #64]
  405a88:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  405a8c:	ldrb	w24, [x0, #2248]
  405a90:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405a94:	add	x0, x0, #0x468
  405a98:	ldrb	w1, [x0, #272]
  405a9c:	str	w1, [sp, #124]
  405aa0:	ldr	x3, [x0, #144]
  405aa4:	add	x1, x3, #0x1
  405aa8:	ldr	x0, [x0, #160]
  405aac:	udiv	x2, x1, x0
  405ab0:	msub	x1, x2, x0, x1
  405ab4:	add	x0, x0, #0x1
  405ab8:	sub	x0, x0, x1
  405abc:	add	x0, x3, x0
  405ac0:	cmp	x1, #0x0
  405ac4:	csinc	x1, x0, x3, ne  // ne = any
  405ac8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405acc:	add	x0, x0, #0x468
  405ad0:	str	x1, [x0, #136]
  405ad4:	str	x1, [x0, #112]
  405ad8:	sturb	w24, [x1, #-1]
  405adc:	str	w23, [x0, #176]
  405ae0:	cbz	w23, 4053bc <wcrtomb@plt+0x2aec>
  405ae4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405ae8:	add	x0, x0, #0x468
  405aec:	str	xzr, [x0, #168]
  405af0:	strb	wzr, [x0, #456]
  405af4:	strb	wzr, [x0, #181]
  405af8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405afc:	add	x0, x0, #0x468
  405b00:	str	xzr, [x0, #120]
  405b04:	str	xzr, [x0, #208]
  405b08:	str	xzr, [x0, #64]
  405b0c:	ldr	x1, [x0, #320]
  405b10:	str	x1, [x0, #224]
  405b14:	str	xzr, [x0, #264]
  405b18:	str	xzr, [x0, #216]
  405b1c:	cmp	w24, #0x0
  405b20:	cset	w1, eq  // eq = none
  405b24:	ldrb	w2, [x0, #458]
  405b28:	and	w1, w1, w2
  405b2c:	strb	w1, [x0, #180]
  405b30:	strb	wzr, [x0, #129]
  405b34:	add	x1, sp, #0x110
  405b38:	mov	x0, #0x0                   	// #0
  405b3c:	bl	4042fc <wcrtomb@plt+0x1a2c>
  405b40:	ands	w0, w0, #0xff
  405b44:	str	w0, [sp, #116]
  405b48:	b.eq	405418 <wcrtomb@plt+0x2b48>  // b.none
  405b4c:	stp	x27, x28, [sp, #80]
  405b50:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405b54:	add	x0, x0, #0x468
  405b58:	str	wzr, [x0, #100]
  405b5c:	ldrb	w0, [x0, #128]
  405b60:	cbz	w0, 405bb8 <wcrtomb@plt+0x32e8>
  405b64:	ldr	w0, [sp, #288]
  405b68:	and	w0, w0, #0xf000
  405b6c:	cmp	w0, #0x8, lsl #12
  405b70:	ldr	x0, [sp, #320]
  405b74:	csinv	x1, x0, xzr, eq  // eq = none
  405b78:	cmn	x1, #0x1
  405b7c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405b80:	ldrb	w2, [x0, #1224]
  405b84:	cset	x0, ne  // ne = any
  405b88:	and	x0, x0, x2
  405b8c:	add	x0, x0, x1
  405b90:	mov	x2, #0xcccccccccccccccc    	// #-3689348814741910324
  405b94:	movk	x2, #0xcccd
  405b98:	add	w19, w19, #0x1
  405b9c:	mov	x1, x0
  405ba0:	umulh	x0, x0, x2
  405ba4:	lsr	x0, x0, #3
  405ba8:	cmp	x1, #0x9
  405bac:	b.hi	405b98 <wcrtomb@plt+0x32c8>  // b.pmore
  405bb0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405bb4:	str	w19, [x0, #1228]
  405bb8:	ldr	w21, [sp, #116]
  405bbc:	mov	x28, #0xffffffffffffffff    	// #-1
  405bc0:	str	wzr, [sp, #108]
  405bc4:	mov	x27, #0x0                   	// #0
  405bc8:	mov	x26, #0x0                   	// #0
  405bcc:	mov	x25, #0x0                   	// #0
  405bd0:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  405bd4:	add	x19, x19, #0x468
  405bd8:	str	w24, [sp, #112]
  405bdc:	b	40563c <wcrtomb@plt+0x2d6c>
  405be0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  405be4:	ldr	w0, [x0, #1216]
  405be8:	tbz	w0, #31, 404fbc <wcrtomb@plt+0x26ec>
  405bec:	mov	w1, #0x1                   	// #1
  405bf0:	b	404fa0 <wcrtomb@plt+0x26d0>
  405bf4:	stp	x29, x30, [sp, #-64]!
  405bf8:	mov	x29, sp
  405bfc:	stp	x19, x20, [sp, #16]
  405c00:	stp	x21, x22, [sp, #32]
  405c04:	str	x23, [sp, #48]
  405c08:	mov	w19, w0
  405c0c:	mov	x20, x1
  405c10:	and	w22, w3, #0xff
  405c14:	ands	w23, w2, #0xff
  405c18:	mov	w21, #0x100                 	// #256
  405c1c:	mov	w0, #0x8100                	// #33024
  405c20:	csel	w21, w21, w0, ne  // ne = any
  405c24:	mov	w0, w22
  405c28:	bl	403834 <wcrtomb@plt+0xf64>
  405c2c:	ands	w0, w0, #0xff
  405c30:	cset	w2, ne  // ne = any
  405c34:	orr	w2, w21, w2, lsl #11
  405c38:	mov	x1, x20
  405c3c:	mov	w0, w19
  405c40:	bl	411f5c <wcrtomb@plt+0xf68c>
  405c44:	tbnz	w0, #31, 405c68 <wcrtomb@plt+0x3398>
  405c48:	mov	w1, w22
  405c4c:	bl	404e90 <wcrtomb@plt+0x25c0>
  405c50:	and	w0, w0, #0xff
  405c54:	ldp	x19, x20, [sp, #16]
  405c58:	ldp	x21, x22, [sp, #32]
  405c5c:	ldr	x23, [sp, #48]
  405c60:	ldp	x29, x30, [sp], #64
  405c64:	ret
  405c68:	cbnz	w23, 405c88 <wcrtomb@plt+0x33b8>
  405c6c:	bl	402840 <__errno_location@plt>
  405c70:	ldr	w1, [x0]
  405c74:	cmp	w1, #0x28
  405c78:	cset	w0, eq  // eq = none
  405c7c:	cmp	w1, #0x1f
  405c80:	csinc	w0, w0, wzr, ne  // ne = any
  405c84:	cbnz	w0, 405c54 <wcrtomb@plt+0x3384>
  405c88:	bl	402840 <__errno_location@plt>
  405c8c:	ldr	w0, [x0]
  405c90:	bl	40395c <wcrtomb@plt+0x108c>
  405c94:	mov	w0, #0x1                   	// #1
  405c98:	b	405c54 <wcrtomb@plt+0x3384>
  405c9c:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x27218>
  405ca0:	ldr	x5, [x2, #1160]
  405ca4:	cmp	x5, #0x1
  405ca8:	b.ls	405d08 <wcrtomb@plt+0x3438>  // b.plast
  405cac:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x27218>
  405cb0:	ldr	x4, [x2, #1168]
  405cb4:	mov	x2, #0x1                   	// #1
  405cb8:	add	x4, x4, #0x8
  405cbc:	lsl	x3, x2, #4
  405cc0:	ldr	x3, [x4, x3]
  405cc4:	cmp	x3, x0
  405cc8:	b.hi	405cdc <wcrtomb@plt+0x340c>  // b.pmore
  405ccc:	add	x2, x2, #0x1
  405cd0:	cmp	x2, x5
  405cd4:	b.ne	405cbc <wcrtomb@plt+0x33ec>  // b.any
  405cd8:	mov	x2, x5
  405cdc:	lsl	x2, x2, #4
  405ce0:	sub	x2, x2, #0x10
  405ce4:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x27218>
  405ce8:	ldr	x3, [x3, #1168]
  405cec:	add	x4, x3, x2
  405cf0:	add	x0, x0, #0x1
  405cf4:	ldr	x4, [x4, #8]
  405cf8:	sub	x0, x0, x4
  405cfc:	str	x0, [x1]
  405d00:	ldr	x0, [x3, x2]
  405d04:	ret
  405d08:	mov	x2, #0x1                   	// #1
  405d0c:	b	405cdc <wcrtomb@plt+0x340c>
  405d10:	stp	x29, x30, [sp, #-48]!
  405d14:	mov	x29, sp
  405d18:	stp	x19, x20, [sp, #16]
  405d1c:	stp	x21, x22, [sp, #32]
  405d20:	mov	w19, w0
  405d24:	cbz	w0, 405d94 <wcrtomb@plt+0x34c4>
  405d28:	adrp	x21, 43e000 <_obstack_memory_used@@Base+0x27218>
  405d2c:	ldr	x22, [x21, #1072]
  405d30:	mov	w2, #0x5                   	// #5
  405d34:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405d38:	add	x1, x1, #0xc0
  405d3c:	mov	x0, #0x0                   	// #0
  405d40:	bl	4027a0 <dcgettext@plt>
  405d44:	mov	x20, x0
  405d48:	bl	410740 <wcrtomb@plt+0xde70>
  405d4c:	mov	x2, x0
  405d50:	mov	x1, x20
  405d54:	mov	x0, x22
  405d58:	bl	402880 <fprintf@plt>
  405d5c:	ldr	x21, [x21, #1072]
  405d60:	mov	w2, #0x5                   	// #5
  405d64:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405d68:	add	x1, x1, #0xf0
  405d6c:	mov	x0, #0x0                   	// #0
  405d70:	bl	4027a0 <dcgettext@plt>
  405d74:	mov	x20, x0
  405d78:	bl	410740 <wcrtomb@plt+0xde70>
  405d7c:	mov	x2, x0
  405d80:	mov	x1, x20
  405d84:	mov	x0, x21
  405d88:	bl	402880 <fprintf@plt>
  405d8c:	mov	w0, w19
  405d90:	bl	4022e0 <exit@plt>
  405d94:	mov	w2, #0x5                   	// #5
  405d98:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405d9c:	add	x1, x1, #0xc0
  405da0:	mov	x0, #0x0                   	// #0
  405da4:	bl	4027a0 <dcgettext@plt>
  405da8:	mov	x20, x0
  405dac:	bl	410740 <wcrtomb@plt+0xde70>
  405db0:	mov	x1, x0
  405db4:	mov	x0, x20
  405db8:	bl	402820 <printf@plt>
  405dbc:	mov	w2, #0x5                   	// #5
  405dc0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405dc4:	add	x1, x1, #0x118
  405dc8:	mov	x0, #0x0                   	// #0
  405dcc:	bl	4027a0 <dcgettext@plt>
  405dd0:	bl	402820 <printf@plt>
  405dd4:	mov	w2, #0x5                   	// #5
  405dd8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405ddc:	add	x1, x1, #0x140
  405de0:	mov	x0, #0x0                   	// #0
  405de4:	bl	4027a0 <dcgettext@plt>
  405de8:	mov	x20, x0
  405dec:	bl	410740 <wcrtomb@plt+0xde70>
  405df0:	mov	x1, x0
  405df4:	mov	x0, x20
  405df8:	bl	402820 <printf@plt>
  405dfc:	mov	w2, #0x5                   	// #5
  405e00:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e04:	add	x1, x1, #0x1d8
  405e08:	mov	x0, #0x0                   	// #0
  405e0c:	bl	4027a0 <dcgettext@plt>
  405e10:	bl	402820 <printf@plt>
  405e14:	mov	w2, #0x5                   	// #5
  405e18:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e1c:	add	x1, x1, #0x2d8
  405e20:	mov	x0, #0x0                   	// #0
  405e24:	bl	4027a0 <dcgettext@plt>
  405e28:	bl	402820 <printf@plt>
  405e2c:	mov	w2, #0x5                   	// #5
  405e30:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e34:	add	x1, x1, #0x480
  405e38:	mov	x0, #0x0                   	// #0
  405e3c:	bl	4027a0 <dcgettext@plt>
  405e40:	bl	402820 <printf@plt>
  405e44:	mov	w2, #0x5                   	// #5
  405e48:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e4c:	add	x1, x1, #0x578
  405e50:	mov	x0, #0x0                   	// #0
  405e54:	bl	4027a0 <dcgettext@plt>
  405e58:	bl	402820 <printf@plt>
  405e5c:	mov	w2, #0x5                   	// #5
  405e60:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e64:	add	x1, x1, #0x750
  405e68:	mov	x0, #0x0                   	// #0
  405e6c:	bl	4027a0 <dcgettext@plt>
  405e70:	bl	402820 <printf@plt>
  405e74:	mov	w2, #0x5                   	// #5
  405e78:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e7c:	add	x1, x1, #0x898
  405e80:	mov	x0, #0x0                   	// #0
  405e84:	bl	4027a0 <dcgettext@plt>
  405e88:	bl	402820 <printf@plt>
  405e8c:	mov	w2, #0x5                   	// #5
  405e90:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405e94:	add	x1, x1, #0xa50
  405e98:	mov	x0, #0x0                   	// #0
  405e9c:	bl	4027a0 <dcgettext@plt>
  405ea0:	bl	402820 <printf@plt>
  405ea4:	mov	w2, #0x5                   	// #5
  405ea8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405eac:	add	x1, x1, #0xb68
  405eb0:	mov	x0, #0x0                   	// #0
  405eb4:	bl	4027a0 <dcgettext@plt>
  405eb8:	bl	402820 <printf@plt>
  405ebc:	mov	w2, #0x5                   	// #5
  405ec0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405ec4:	add	x1, x1, #0xcc0
  405ec8:	mov	x0, #0x0                   	// #0
  405ecc:	bl	4027a0 <dcgettext@plt>
  405ed0:	bl	402820 <printf@plt>
  405ed4:	mov	w2, #0x5                   	// #5
  405ed8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405edc:	add	x1, x1, #0xd90
  405ee0:	mov	x0, #0x0                   	// #0
  405ee4:	bl	4027a0 <dcgettext@plt>
  405ee8:	bl	402820 <printf@plt>
  405eec:	mov	w2, #0x5                   	// #5
  405ef0:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  405ef4:	add	x1, x1, #0xeb8
  405ef8:	mov	x0, #0x0                   	// #0
  405efc:	bl	4027a0 <dcgettext@plt>
  405f00:	bl	402820 <printf@plt>
  405f04:	bl	413f64 <wcrtomb@plt+0x11694>
  405f08:	b	405d8c <wcrtomb@plt+0x34bc>
  405f0c:	stp	x29, x30, [sp, #-128]!
  405f10:	mov	x29, sp
  405f14:	stp	x21, x22, [sp, #32]
  405f18:	stp	x25, x26, [sp, #64]
  405f1c:	mov	x26, x0
  405f20:	str	x1, [sp, #104]
  405f24:	ldr	x22, [x1]
  405f28:	ldr	x21, [x0]
  405f2c:	str	xzr, [sp, #120]
  405f30:	adds	x0, x22, #0x1
  405f34:	cset	x1, mi  // mi = first
  405f38:	tst	x0, #0x4000000000000000
  405f3c:	csinc	w1, w1, wzr, eq  // eq = none
  405f40:	cbnz	w1, 405f80 <wcrtomb@plt+0x36b0>
  405f44:	stp	x19, x20, [sp, #16]
  405f48:	stp	x27, x28, [sp, #80]
  405f4c:	lsl	x0, x0, #1
  405f50:	bl	413fec <wcrtomb@plt+0x1171c>
  405f54:	mov	x27, x0
  405f58:	cbz	x22, 406064 <wcrtomb@plt+0x3794>
  405f5c:	stp	x23, x24, [sp, #48]
  405f60:	mov	x20, x0
  405f64:	adrp	x24, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  405f68:	add	x24, x24, #0x8d0
  405f6c:	mov	x23, #0x1                   	// #1
  405f70:	mov	x25, #0x441                 	// #1089
  405f74:	movk	x25, #0x580, lsl #48
  405f78:	mov	w28, #0x5c                  	// #92
  405f7c:	b	405ff4 <wcrtomb@plt+0x3724>
  405f80:	stp	x19, x20, [sp, #16]
  405f84:	stp	x23, x24, [sp, #48]
  405f88:	stp	x27, x28, [sp, #80]
  405f8c:	bl	414264 <wcrtomb@plt+0x11994>
  405f90:	add	x2, sp, #0x78
  405f94:	mov	x1, x22
  405f98:	mov	x0, x21
  405f9c:	bl	4169c8 <wcrtomb@plt+0x140f8>
  405fa0:	mov	x19, x0
  405fa4:	cmn	x0, #0x2
  405fa8:	b.ne	406008 <wcrtomb@plt+0x3738>  // b.any
  405fac:	mov	x19, x22
  405fb0:	b	406018 <wcrtomb@plt+0x3748>
  405fb4:	str	xzr, [sp, #120]
  405fb8:	ldrb	w0, [x21]
  405fbc:	sub	w0, w0, #0x24
  405fc0:	and	w0, w0, #0xff
  405fc4:	cmp	w0, #0x3a
  405fc8:	b.hi	405fdc <wcrtomb@plt+0x370c>  // b.pmore
  405fcc:	lsl	x0, x23, x0
  405fd0:	tst	x0, x25
  405fd4:	b.eq	405fdc <wcrtomb@plt+0x370c>  // b.none
  405fd8:	strb	w28, [x20], #1
  405fdc:	ldrb	w0, [x21]
  405fe0:	strb	w0, [x20], #1
  405fe4:	mov	x19, x23
  405fe8:	add	x21, x21, x19
  405fec:	subs	x22, x22, x19
  405ff0:	b.eq	406030 <wcrtomb@plt+0x3760>  // b.none
  405ff4:	ldrb	w0, [x21]
  405ff8:	add	x0, x24, x0
  405ffc:	ldrsb	x19, [x0, #3]
  406000:	cmn	x19, #0x2
  406004:	b.eq	405f90 <wcrtomb@plt+0x36c0>  // b.none
  406008:	cmn	x19, #0x1
  40600c:	b.eq	405fb4 <wcrtomb@plt+0x36e4>  // b.none
  406010:	cmp	x19, #0x1
  406014:	b.eq	405fb8 <wcrtomb@plt+0x36e8>  // b.none
  406018:	mov	x2, x19
  40601c:	mov	x1, x21
  406020:	mov	x0, x20
  406024:	bl	402680 <mempcpy@plt>
  406028:	mov	x20, x0
  40602c:	b	405fe8 <wcrtomb@plt+0x3718>
  406030:	ldp	x23, x24, [sp, #48]
  406034:	ldr	x0, [x26]
  406038:	bl	402660 <free@plt>
  40603c:	str	x27, [x26]
  406040:	sub	x20, x20, x27
  406044:	ldr	x0, [sp, #104]
  406048:	str	x20, [x0]
  40604c:	ldp	x19, x20, [sp, #16]
  406050:	ldp	x27, x28, [sp, #80]
  406054:	ldp	x21, x22, [sp, #32]
  406058:	ldp	x25, x26, [sp, #64]
  40605c:	ldp	x29, x30, [sp], #128
  406060:	ret
  406064:	mov	x20, x0
  406068:	b	406034 <wcrtomb@plt+0x3764>
  40606c:	stp	x29, x30, [sp, #-448]!
  406070:	mov	x29, sp
  406074:	stp	x19, x20, [sp, #16]
  406078:	stp	x21, x22, [sp, #32]
  40607c:	stp	x23, x24, [sp, #48]
  406080:	stp	x25, x26, [sp, #64]
  406084:	stp	x27, x28, [sp, #80]
  406088:	mov	w28, w0
  40608c:	str	x1, [sp, #104]
  406090:	str	xzr, [sp, #440]
  406094:	str	xzr, [sp, #432]
  406098:	str	xzr, [sp, #424]
  40609c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4060a0:	mov	w1, #0x2                   	// #2
  4060a4:	str	w1, [x0, #968]
  4060a8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4060ac:	mov	w1, #0xa                   	// #10
  4060b0:	strb	w1, [x0, #2248]
  4060b4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4060b8:	add	x0, x0, #0x468
  4060bc:	mov	w1, #0xffffffff            	// #-1
  4060c0:	str	w1, [x0, #92]
  4060c4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  4060c8:	str	x1, [x0, #320]
  4060cc:	mov	x1, #0xffffffffffffffff    	// #-1
  4060d0:	str	x1, [x0, #240]
  4060d4:	str	x1, [x0, #256]
  4060d8:	str	x1, [sp, #416]
  4060dc:	strb	wzr, [x0, #182]
  4060e0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4060e4:	add	x1, x1, #0x6c8
  4060e8:	mov	w0, #0x6                   	// #6
  4060ec:	bl	4028b0 <setlocale@plt>
  4060f0:	adrp	x19, 424000 <_obstack_memory_used@@Base+0xd218>
  4060f4:	add	x19, x19, #0xfe8
  4060f8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  4060fc:	add	x1, x1, #0xfd0
  406100:	mov	x0, x19
  406104:	bl	402480 <bindtextdomain@plt>
  406108:	mov	x0, x19
  40610c:	bl	402620 <textdomain@plt>
  406110:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406114:	add	x0, x0, #0x8d0
  406118:	bl	40f7cc <wcrtomb@plt+0xcefc>
  40611c:	adrp	x0, 403000 <wcrtomb@plt+0x730>
  406120:	add	x0, x0, #0xb48
  406124:	bl	423e70 <_obstack_memory_used@@Base+0xd088>
  406128:	mov	x0, #0x0                   	// #0
  40612c:	bl	409ce4 <wcrtomb@plt+0x7414>
  406130:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xd218>
  406134:	add	x0, x0, #0xff0
  406138:	bl	402850 <getenv@plt>
  40613c:	cbz	x0, 406afc <wcrtomb@plt+0x422c>
  406140:	mov	x19, x0
  406144:	ldrb	w0, [x0]
  406148:	str	wzr, [sp, #140]
  40614c:	cbnz	w0, 406180 <wcrtomb@plt+0x38b0>
  406150:	mov	w24, #0x0                   	// #0
  406154:	str	wzr, [sp, #136]
  406158:	mov	w0, #0xffffffff            	// #-1
  40615c:	str	w0, [sp, #120]
  406160:	add	x22, sp, #0x90
  406164:	adrp	x27, 425000 <_obstack_memory_used@@Base+0xe218>
  406168:	add	x27, x27, #0x748
  40616c:	add	x0, x27, #0x230
  406170:	str	x0, [sp, #112]
  406174:	add	x0, x22, #0x15
  406178:	str	x0, [sp, #128]
  40617c:	b	406794 <wcrtomb@plt+0x3ec4>
  406180:	mov	x0, x19
  406184:	bl	4022c0 <strlen@plt>
  406188:	add	x0, x0, #0x1
  40618c:	bl	413fec <wcrtomb@plt+0x1171c>
  406190:	mov	x23, x0
  406194:	mov	x2, #0x0                   	// #0
  406198:	mov	x1, x0
  40619c:	mov	x0, x19
  4061a0:	bl	403864 <wcrtomb@plt+0xf94>
  4061a4:	mov	x20, x0
  4061a8:	mov	w0, #0x7fffffff            	// #2147483647
  4061ac:	sub	w0, w0, w28
  4061b0:	cmp	x20, w0, sxtw
  4061b4:	b.hi	406240 <wcrtomb@plt+0x3970>  // b.pmore
  4061b8:	sxtw	x0, w28
  4061bc:	add	x0, x0, #0x1
  4061c0:	add	x0, x0, x20
  4061c4:	lsl	x0, x0, #3
  4061c8:	bl	413fec <wcrtomb@plt+0x1171c>
  4061cc:	mov	x21, x0
  4061d0:	add	w28, w28, w20
  4061d4:	ldr	x22, [sp, #104]
  4061d8:	mov	x24, x0
  4061dc:	ldr	x0, [x22], #8
  4061e0:	str	x0, [x24], #8
  4061e4:	mov	x2, x24
  4061e8:	mov	x1, x23
  4061ec:	mov	x0, x19
  4061f0:	bl	403864 <wcrtomb@plt+0xf94>
  4061f4:	add	x0, x24, x0, lsl #3
  4061f8:	mov	x1, #0x0                   	// #0
  4061fc:	ldr	x2, [x22, x1]
  406200:	str	x2, [x0, x1]
  406204:	add	x1, x1, #0x8
  406208:	cbnz	x2, 4061fc <wcrtomb@plt+0x392c>
  40620c:	str	w20, [sp, #140]
  406210:	cbz	w20, 406b04 <wcrtomb@plt+0x4234>
  406214:	mov	w2, #0x5                   	// #5
  406218:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  40621c:	add	x1, x1, #0x0
  406220:	mov	x0, #0x0                   	// #0
  406224:	bl	4027a0 <dcgettext@plt>
  406228:	mov	x2, x0
  40622c:	mov	w1, #0x0                   	// #0
  406230:	mov	w0, #0x0                   	// #0
  406234:	bl	4022f0 <error@plt>
  406238:	str	x21, [sp, #104]
  40623c:	b	406150 <wcrtomb@plt+0x3880>
  406240:	bl	414264 <wcrtomb@plt+0x11994>
  406244:	mov	w24, #0x1                   	// #1
  406248:	b	406794 <wcrtomb@plt+0x3ec4>
  40624c:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  406250:	add	x19, x19, #0x468
  406254:	add	x19, x19, #0x118
  406258:	mov	x20, #0x0                   	// #0
  40625c:	adrp	x21, 43e000 <_obstack_memory_used@@Base+0x27218>
  406260:	adrp	x25, 410000 <wcrtomb@plt+0xd730>
  406264:	add	x25, x25, #0x19c
  406268:	mov	w26, #0xa                   	// #10
  40626c:	b	407560 <wcrtomb@plt+0x4c90>
  406270:	cmp	w19, #0x106
  406274:	mov	w21, #0x20000000            	// #536870912
  406278:	csel	w21, w21, wzr, eq  // eq = none
  40627c:	mov	w20, #0x50000000            	// #1342177280
  406280:	orr	w20, w21, w20
  406284:	orr	w21, w21, #0x10000000
  406288:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40628c:	ldr	x0, [x0, #1408]
  406290:	cbz	x0, 4062d4 <wcrtomb@plt+0x3a04>
  406294:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  406298:	add	x19, x19, #0x468
  40629c:	mov	w2, w20
  4062a0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4062a4:	ldr	x1, [x0, #1080]
  4062a8:	ldr	x0, [x19, #280]
  4062ac:	bl	41019c <wcrtomb@plt+0xd8cc>
  4062b0:	ldr	x0, [x19, #288]
  4062b4:	cbz	x0, 406a08 <wcrtomb@plt+0x4138>
  4062b8:	mov	w2, w21
  4062bc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4062c0:	ldr	x1, [x0, #1080]
  4062c4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4062c8:	ldr	x0, [x0, #1416]
  4062cc:	bl	41019c <wcrtomb@plt+0xd8cc>
  4062d0:	b	406794 <wcrtomb@plt+0x3ec4>
  4062d4:	bl	40fe74 <wcrtomb@plt+0xd5a4>
  4062d8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4062dc:	str	x0, [x1, #1408]
  4062e0:	b	406294 <wcrtomb@plt+0x39c4>
  4062e4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4062e8:	add	x1, x1, #0x468
  4062ec:	add	x1, x1, #0x100
  4062f0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4062f4:	ldr	x0, [x0, #1080]
  4062f8:	bl	403ad0 <wcrtomb@plt+0x1200>
  4062fc:	b	406794 <wcrtomb@plt+0x3ec4>
  406300:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406304:	add	x1, x1, #0x468
  406308:	add	x1, x1, #0xf0
  40630c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406310:	ldr	x0, [x0, #1080]
  406314:	bl	403ad0 <wcrtomb@plt+0x1200>
  406318:	b	406794 <wcrtomb@plt+0x3ec4>
  40631c:	add	x1, sp, #0x1a0
  406320:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406324:	ldr	x0, [x0, #1080]
  406328:	bl	403ad0 <wcrtomb@plt+0x1200>
  40632c:	b	406794 <wcrtomb@plt+0x3ec4>
  406330:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406334:	ldr	x19, [x0, #1080]
  406338:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  40633c:	add	x1, x1, #0x48
  406340:	mov	x0, x19
  406344:	bl	402640 <strcmp@plt>
  406348:	cbnz	w0, 40635c <wcrtomb@plt+0x3a8c>
  40634c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406350:	mov	w1, #0x1                   	// #1
  406354:	str	w1, [x0, #1132]
  406358:	b	406794 <wcrtomb@plt+0x3ec4>
  40635c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406360:	add	x1, x1, #0x50
  406364:	mov	x0, x19
  406368:	bl	402640 <strcmp@plt>
  40636c:	cbnz	w0, 406380 <wcrtomb@plt+0x3ab0>
  406370:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406374:	mov	w1, #0x2                   	// #2
  406378:	str	w1, [x0, #1132]
  40637c:	b	406794 <wcrtomb@plt+0x3ec4>
  406380:	mov	w2, #0x5                   	// #5
  406384:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406388:	add	x1, x1, #0x58
  40638c:	mov	x0, #0x0                   	// #0
  406390:	bl	4027a0 <dcgettext@plt>
  406394:	mov	x2, x0
  406398:	mov	w1, #0x0                   	// #0
  40639c:	mov	w0, #0x2                   	// #2
  4063a0:	bl	4022f0 <error@plt>
  4063a4:	ldr	w1, [sp, #120]
  4063a8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  4063ac:	add	x0, x0, #0x70
  4063b0:	bl	4039b0 <wcrtomb@plt+0x10e0>
  4063b4:	str	w0, [sp, #120]
  4063b8:	b	406794 <wcrtomb@plt+0x3ec4>
  4063bc:	ldr	w1, [sp, #120]
  4063c0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  4063c4:	add	x0, x0, #0x78
  4063c8:	bl	4039b0 <wcrtomb@plt+0x10e0>
  4063cc:	str	w0, [sp, #120]
  4063d0:	b	406794 <wcrtomb@plt+0x3ec4>
  4063d4:	ldr	w1, [sp, #120]
  4063d8:	adrp	x0, 423000 <_obstack_memory_used@@Base+0xc218>
  4063dc:	add	x0, x0, #0xf88
  4063e0:	bl	4039b0 <wcrtomb@plt+0x10e0>
  4063e4:	str	w0, [sp, #120]
  4063e8:	b	406794 <wcrtomb@plt+0x3ec4>
  4063ec:	ldr	w1, [sp, #120]
  4063f0:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xd218>
  4063f4:	add	x0, x0, #0xfe8
  4063f8:	bl	4039b0 <wcrtomb@plt+0x10e0>
  4063fc:	str	w0, [sp, #120]
  406400:	b	406794 <wcrtomb@plt+0x3ec4>
  406404:	ldr	w1, [sp, #120]
  406408:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40640c:	ldr	x0, [x0, #1080]
  406410:	bl	4039b0 <wcrtomb@plt+0x10e0>
  406414:	str	w0, [sp, #120]
  406418:	b	406794 <wcrtomb@plt+0x3ec4>
  40641c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406420:	mov	w1, #0x2                   	// #2
  406424:	str	w1, [x0, #1200]
  406428:	b	406794 <wcrtomb@plt+0x3ec4>
  40642c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406430:	mov	w1, #0x1                   	// #1
  406434:	strb	w1, [x0, #1256]
  406438:	b	406794 <wcrtomb@plt+0x3ec4>
  40643c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406440:	mov	w1, #0x1                   	// #1
  406444:	strb	w1, [x0, #1588]
  406448:	b	406794 <wcrtomb@plt+0x3ec4>
  40644c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406450:	mov	w1, #0x1                   	// #1
  406454:	str	w1, [x0, #1200]
  406458:	b	406794 <wcrtomb@plt+0x3ec4>
  40645c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406460:	mov	w1, #0x1                   	// #1
  406464:	strb	w1, [x0, #1232]
  406468:	b	406794 <wcrtomb@plt+0x3ec4>
  40646c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406470:	mov	w1, #0x1                   	// #1
  406474:	strb	w1, [x0, #1585]
  406478:	b	406794 <wcrtomb@plt+0x3ec4>
  40647c:	add	x19, x27, #0x200
  406480:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406484:	ldr	x5, [x0, #960]
  406488:	mov	x4, #0x4                   	// #4
  40648c:	mov	x3, x19
  406490:	add	x2, x27, #0x210
  406494:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406498:	ldr	x1, [x0, #1080]
  40649c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  4064a0:	add	x0, x0, #0x80
  4064a4:	bl	409b5c <wcrtomb@plt+0x728c>
  4064a8:	ldr	w0, [x19, x0, lsl #2]
  4064ac:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4064b0:	str	w0, [x1, #944]
  4064b4:	cmp	w0, #0x3
  4064b8:	ldr	w0, [sp, #136]
  4064bc:	csel	w0, w0, w25, ne  // ne = any
  4064c0:	str	w0, [sp, #136]
  4064c4:	b	406794 <wcrtomb@plt+0x3ec4>
  4064c8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4064cc:	ldr	x0, [x0, #1080]
  4064d0:	bl	4022c0 <strlen@plt>
  4064d4:	mov	x19, x0
  4064d8:	ldr	x0, [sp, #432]
  4064dc:	add	x0, x0, #0x1
  4064e0:	add	x0, x0, x19
  4064e4:	ldr	x1, [sp, #424]
  4064e8:	cmp	x0, x1
  4064ec:	b.hi	406544 <wcrtomb@plt+0x3c74>  // b.pmore
  4064f0:	ldr	x20, [sp, #432]
  4064f4:	mov	x2, x19
  4064f8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4064fc:	ldr	x1, [x0, #1080]
  406500:	ldr	x0, [sp, #440]
  406504:	add	x0, x0, x20
  406508:	bl	402260 <memcpy@plt>
  40650c:	ldr	x0, [sp, #432]
  406510:	add	x0, x19, x0
  406514:	add	x1, x0, #0x1
  406518:	str	x1, [sp, #432]
  40651c:	ldr	x1, [sp, #440]
  406520:	mov	w2, #0xa                   	// #10
  406524:	strb	w2, [x1, x0]
  406528:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  40652c:	add	x2, x2, #0x6c8
  406530:	add	x1, x19, #0x1
  406534:	ldr	x0, [sp, #440]
  406538:	add	x0, x0, x20
  40653c:	bl	403b6c <wcrtomb@plt+0x129c>
  406540:	b	406794 <wcrtomb@plt+0x3ec4>
  406544:	str	x0, [sp, #424]
  406548:	add	x1, sp, #0x1a8
  40654c:	ldr	x0, [sp, #440]
  406550:	bl	414160 <wcrtomb@plt+0x11890>
  406554:	str	x0, [sp, #440]
  406558:	b	4064f0 <wcrtomb@plt+0x3c20>
  40655c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406560:	ldr	x19, [x0, #1080]
  406564:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406568:	add	x1, x1, #0x90
  40656c:	mov	x0, x19
  406570:	bl	402640 <strcmp@plt>
  406574:	cbnz	w0, 40658c <wcrtomb@plt+0x3cbc>
  406578:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40657c:	ldr	x19, [x0, #1104]
  406580:	ldr	x21, [sp, #432]
  406584:	mov	x20, #0x1                   	// #1
  406588:	b	406608 <wcrtomb@plt+0x3d38>
  40658c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406590:	add	x1, x1, #0x98
  406594:	mov	x0, x19
  406598:	bl	4023c0 <fopen@plt>
  40659c:	mov	x19, x0
  4065a0:	cbnz	x0, 406580 <wcrtomb@plt+0x3cb0>
  4065a4:	bl	402840 <__errno_location@plt>
  4065a8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4065ac:	ldr	x3, [x1, #1080]
  4065b0:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  4065b4:	add	x2, x2, #0xeb0
  4065b8:	ldr	w1, [x0]
  4065bc:	mov	w0, #0x2                   	// #2
  4065c0:	bl	4022f0 <error@plt>
  4065c4:	add	x1, sp, #0x1a8
  4065c8:	ldr	x0, [sp, #440]
  4065cc:	bl	414160 <wcrtomb@plt+0x11890>
  4065d0:	str	x0, [sp, #440]
  4065d4:	ldr	x0, [sp, #432]
  4065d8:	ldr	x2, [sp, #424]
  4065dc:	sub	x2, x2, #0x1
  4065e0:	mov	x3, x19
  4065e4:	sub	x2, x2, x0
  4065e8:	mov	x1, x20
  4065ec:	ldr	x4, [sp, #440]
  4065f0:	add	x0, x4, x0
  4065f4:	bl	402600 <fread_unlocked@plt>
  4065f8:	cbz	x0, 406620 <wcrtomb@plt+0x3d50>
  4065fc:	ldr	x1, [sp, #432]
  406600:	add	x0, x1, x0
  406604:	str	x0, [sp, #432]
  406608:	ldr	x0, [sp, #432]
  40660c:	add	x0, x0, #0x1
  406610:	ldr	x1, [sp, #424]
  406614:	cmp	x0, x1
  406618:	b.cc	4065d4 <wcrtomb@plt+0x3d04>  // b.lo, b.ul, b.last
  40661c:	b	4065c4 <wcrtomb@plt+0x3cf4>
  406620:	ldr	w0, [x19]
  406624:	tbnz	w0, #5, 406690 <wcrtomb@plt+0x3dc0>
  406628:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40662c:	ldr	x0, [x0, #1104]
  406630:	cmp	x0, x19
  406634:	b.eq	406640 <wcrtomb@plt+0x3d70>  // b.none
  406638:	mov	x0, x19
  40663c:	bl	402390 <fclose@plt>
  406640:	ldr	x0, [sp, #432]
  406644:	cmp	x0, x21
  406648:	b.eq	406670 <wcrtomb@plt+0x3da0>  // b.none
  40664c:	ldr	x1, [sp, #440]
  406650:	add	x2, x1, x0
  406654:	ldurb	w2, [x2, #-1]
  406658:	cmp	w2, #0xa
  40665c:	b.eq	406670 <wcrtomb@plt+0x3da0>  // b.none
  406660:	add	x2, x0, #0x1
  406664:	str	x2, [sp, #432]
  406668:	mov	w2, #0xa                   	// #10
  40666c:	strb	w2, [x1, x0]
  406670:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406674:	ldr	x2, [x0, #1080]
  406678:	ldr	x1, [sp, #432]
  40667c:	sub	x1, x1, x21
  406680:	ldr	x0, [sp, #440]
  406684:	add	x0, x0, x21
  406688:	bl	403b6c <wcrtomb@plt+0x129c>
  40668c:	b	406794 <wcrtomb@plt+0x3ec4>
  406690:	bl	402840 <__errno_location@plt>
  406694:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406698:	ldr	x3, [x1, #1080]
  40669c:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  4066a0:	add	x2, x2, #0xeb0
  4066a4:	ldr	w1, [x0]
  4066a8:	mov	w0, #0x2                   	// #2
  4066ac:	bl	4022f0 <error@plt>
  4066b0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4066b4:	mov	w1, #0x1                   	// #1
  4066b8:	strb	w1, [x0, #3542]
  4066bc:	b	406794 <wcrtomb@plt+0x3ec4>
  4066c0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4066c4:	strb	wzr, [x0, #3542]
  4066c8:	b	406794 <wcrtomb@plt+0x3ec4>
  4066cc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4066d0:	mov	w1, #0x2                   	// #2
  4066d4:	str	w1, [x0, #1444]
  4066d8:	b	406794 <wcrtomb@plt+0x3ec4>
  4066dc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4066e0:	mov	w1, #0x1                   	// #1
  4066e4:	str	w1, [x0, #1444]
  4066e8:	b	406794 <wcrtomb@plt+0x3ec4>
  4066ec:	adrp	x4, 426000 <_obstack_memory_used@@Base+0xf218>
  4066f0:	add	x4, x4, #0x6c8
  4066f4:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x27218>
  4066f8:	add	x3, x3, #0x468
  4066fc:	add	x3, x3, #0x140
  406700:	mov	w2, #0xa                   	// #10
  406704:	mov	x1, #0x0                   	// #0
  406708:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40670c:	ldr	x0, [x0, #1080]
  406710:	bl	41432c <wcrtomb@plt+0x11a5c>
  406714:	cmp	w0, #0x1
  406718:	b.ls	406794 <wcrtomb@plt+0x3ec4>  // b.plast
  40671c:	mov	w2, #0x5                   	// #5
  406720:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406724:	add	x1, x1, #0xa0
  406728:	mov	x0, #0x0                   	// #0
  40672c:	bl	4027a0 <dcgettext@plt>
  406730:	mov	x2, x0
  406734:	mov	w1, #0x0                   	// #0
  406738:	mov	w0, #0x2                   	// #2
  40673c:	bl	4022f0 <error@plt>
  406740:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406744:	mov	w1, #0x1                   	// #1
  406748:	strb	w1, [x0, #1224]
  40674c:	b	406794 <wcrtomb@plt+0x3ec4>
  406750:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406754:	mov	w1, #0x1                   	// #1
  406758:	strb	w1, [x0, #1310]
  40675c:	b	406794 <wcrtomb@plt+0x3ec4>
  406760:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406764:	mov	w1, #0x1                   	// #1
  406768:	strb	w1, [x0, #1401]
  40676c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406770:	str	wzr, [x0, #968]
  406774:	b	406794 <wcrtomb@plt+0x3ec4>
  406778:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40677c:	mov	w1, #0x30a                 	// #778
  406780:	str	w1, [x0, #948]
  406784:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406788:	mov	w1, #0x3                   	// #3
  40678c:	str	w1, [x0, #944]
  406790:	str	w25, [sp, #136]
  406794:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406798:	ldr	w25, [x0, #1088]
  40679c:	mov	w21, w25
  4067a0:	mov	x20, x22
  4067a4:	mov	w23, #0x0                   	// #0
  4067a8:	add	x26, x27, #0x890
  4067ac:	mov	x4, #0x0                   	// #0
  4067b0:	ldr	x3, [sp, #112]
  4067b4:	mov	x2, x26
  4067b8:	ldr	x1, [sp, #104]
  4067bc:	mov	w0, w28
  4067c0:	bl	402630 <getopt_long@plt>
  4067c4:	mov	w19, w0
  4067c8:	sub	w0, w0, #0x30
  4067cc:	cmp	w0, #0x9
  4067d0:	b.hi	406b44 <wcrtomb@plt+0x4274>  // b.pmore
  4067d4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4067d8:	ldr	w1, [x0, #952]
  4067dc:	cmp	w23, #0x0
  4067e0:	mov	x0, x22
  4067e4:	ccmp	w1, w21, #0x0, ne  // ne = any
  4067e8:	b.eq	406b14 <wcrtomb@plt+0x4244>  // b.none
  4067ec:	mov	x20, x0
  4067f0:	strb	w19, [x20], #1
  4067f4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4067f8:	str	w21, [x0, #952]
  4067fc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406800:	ldr	w21, [x0, #1088]
  406804:	mov	w23, #0x1                   	// #1
  406808:	b	4067ac <wcrtomb@plt+0x3edc>
  40680c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406810:	mov	w1, #0x1                   	// #1
  406814:	strb	w1, [x0, #1144]
  406818:	b	406794 <wcrtomb@plt+0x3ec4>
  40681c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406820:	mov	w1, #0x1                   	// #1
  406824:	strb	w1, [x0, #1311]
  406828:	b	406794 <wcrtomb@plt+0x3ec4>
  40682c:	bl	409498 <wcrtomb@plt+0x6bc8>
  406830:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406834:	mov	w1, #0x1                   	// #1
  406838:	strb	w1, [x0, #3540]
  40683c:	b	406794 <wcrtomb@plt+0x3ec4>
  406840:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406844:	mov	w1, #0x1                   	// #1
  406848:	strb	w1, [x0, #3541]
  40684c:	b	406794 <wcrtomb@plt+0x3ec4>
  406850:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406854:	str	wzr, [x0, #1220]
  406858:	b	406794 <wcrtomb@plt+0x3ec4>
  40685c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406860:	strb	wzr, [x0, #2248]
  406864:	b	406794 <wcrtomb@plt+0x3ec4>
  406868:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40686c:	ldr	x19, [x0, #1080]
  406870:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406874:	add	x1, x1, #0xb8
  406878:	mov	x0, x19
  40687c:	bl	402640 <strcmp@plt>
  406880:	cbnz	w0, 406890 <wcrtomb@plt+0x3fc0>
  406884:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406888:	str	wzr, [x0, #1200]
  40688c:	b	406794 <wcrtomb@plt+0x3ec4>
  406890:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406894:	add	x1, x1, #0xc0
  406898:	mov	x0, x19
  40689c:	bl	402640 <strcmp@plt>
  4068a0:	cbnz	w0, 4068b4 <wcrtomb@plt+0x3fe4>
  4068a4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4068a8:	mov	w1, #0x1                   	// #1
  4068ac:	str	w1, [x0, #1200]
  4068b0:	b	406794 <wcrtomb@plt+0x3ec4>
  4068b4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4068b8:	add	x1, x1, #0xc8
  4068bc:	mov	x0, x19
  4068c0:	bl	402640 <strcmp@plt>
  4068c4:	cbnz	w0, 4068d8 <wcrtomb@plt+0x4008>
  4068c8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4068cc:	mov	w1, #0x2                   	// #2
  4068d0:	str	w1, [x0, #1200]
  4068d4:	b	406794 <wcrtomb@plt+0x3ec4>
  4068d8:	mov	w2, #0x5                   	// #5
  4068dc:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4068e0:	add	x1, x1, #0xd8
  4068e4:	mov	x0, #0x0                   	// #0
  4068e8:	bl	4027a0 <dcgettext@plt>
  4068ec:	mov	x2, x0
  4068f0:	mov	w1, #0x0                   	// #0
  4068f4:	mov	w0, #0x2                   	// #2
  4068f8:	bl	4022f0 <error@plt>
  4068fc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406900:	ldr	x19, [x0, #1080]
  406904:	cbz	x19, 4069f8 <wcrtomb@plt+0x4128>
  406908:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  40690c:	add	x1, x1, #0xf8
  406910:	mov	x0, x19
  406914:	bl	409dac <wcrtomb@plt+0x74dc>
  406918:	cbz	w0, 406944 <wcrtomb@plt+0x4074>
  40691c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406920:	add	x1, x1, #0x100
  406924:	mov	x0, x19
  406928:	bl	409dac <wcrtomb@plt+0x74dc>
  40692c:	cbz	w0, 406944 <wcrtomb@plt+0x4074>
  406930:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406934:	add	x1, x1, #0x108
  406938:	mov	x0, x19
  40693c:	bl	409dac <wcrtomb@plt+0x74dc>
  406940:	cbnz	w0, 406954 <wcrtomb@plt+0x4084>
  406944:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406948:	mov	w1, #0x1                   	// #1
  40694c:	str	w1, [x0, #1128]
  406950:	b	406794 <wcrtomb@plt+0x3ec4>
  406954:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406958:	add	x1, x1, #0x110
  40695c:	mov	x0, x19
  406960:	bl	409dac <wcrtomb@plt+0x74dc>
  406964:	cbz	w0, 406990 <wcrtomb@plt+0x40c0>
  406968:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  40696c:	add	x1, x1, #0x118
  406970:	mov	x0, x19
  406974:	bl	409dac <wcrtomb@plt+0x74dc>
  406978:	cbz	w0, 406990 <wcrtomb@plt+0x40c0>
  40697c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406980:	add	x1, x1, #0x120
  406984:	mov	x0, x19
  406988:	bl	409dac <wcrtomb@plt+0x74dc>
  40698c:	cbnz	w0, 40699c <wcrtomb@plt+0x40cc>
  406990:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406994:	str	wzr, [x0, #1128]
  406998:	b	406794 <wcrtomb@plt+0x3ec4>
  40699c:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4069a0:	add	x1, x1, #0x128
  4069a4:	mov	x0, x19
  4069a8:	bl	409dac <wcrtomb@plt+0x74dc>
  4069ac:	cbz	w0, 4069d8 <wcrtomb@plt+0x4108>
  4069b0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4069b4:	add	x1, x1, #0x130
  4069b8:	mov	x0, x19
  4069bc:	bl	409dac <wcrtomb@plt+0x74dc>
  4069c0:	cbz	w0, 4069d8 <wcrtomb@plt+0x4108>
  4069c4:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4069c8:	add	x1, x1, #0x138
  4069cc:	mov	x0, x19
  4069d0:	bl	409dac <wcrtomb@plt+0x74dc>
  4069d4:	cbnz	w0, 4069e8 <wcrtomb@plt+0x4118>
  4069d8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4069dc:	mov	w1, #0x2                   	// #2
  4069e0:	str	w1, [x0, #1128]
  4069e4:	b	406794 <wcrtomb@plt+0x3ec4>
  4069e8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4069ec:	mov	w1, #0x1                   	// #1
  4069f0:	str	w1, [x0, #1592]
  4069f4:	b	406794 <wcrtomb@plt+0x3ec4>
  4069f8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4069fc:	mov	w1, #0x2                   	// #2
  406a00:	str	w1, [x0, #1128]
  406a04:	b	406794 <wcrtomb@plt+0x3ec4>
  406a08:	bl	40fe74 <wcrtomb@plt+0xd5a4>
  406a0c:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a10:	str	x0, [x1, #1416]
  406a14:	b	4062b8 <wcrtomb@plt+0x39e8>
  406a18:	bl	40fe74 <wcrtomb@plt+0xd5a4>
  406a1c:	str	x0, [x19]
  406a20:	b	40756c <wcrtomb@plt+0x4c9c>
  406a24:	bl	402840 <__errno_location@plt>
  406a28:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a2c:	ldr	x3, [x1, #1080]
  406a30:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  406a34:	add	x2, x2, #0xeb0
  406a38:	ldr	w1, [x0]
  406a3c:	mov	w0, #0x2                   	// #2
  406a40:	bl	4022f0 <error@plt>
  406a44:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a48:	ldr	x0, [x0, #1080]
  406a4c:	bl	40f9b8 <wcrtomb@plt+0xd0e8>
  406a50:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a54:	ldr	x0, [x0, #1424]
  406a58:	cbz	x0, 406a9c <wcrtomb@plt+0x41cc>
  406a5c:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a60:	add	x19, x19, #0x468
  406a64:	mov	w2, #0x50000000            	// #1342177280
  406a68:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a6c:	ldr	x1, [x0, #1080]
  406a70:	ldr	x0, [x19, #296]
  406a74:	bl	41019c <wcrtomb@plt+0xd8cc>
  406a78:	ldr	x0, [x19, #304]
  406a7c:	cbz	x0, 406aac <wcrtomb@plt+0x41dc>
  406a80:	mov	w2, #0x10000000            	// #268435456
  406a84:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a88:	ldr	x1, [x0, #1080]
  406a8c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406a90:	ldr	x0, [x0, #1432]
  406a94:	bl	41019c <wcrtomb@plt+0xd8cc>
  406a98:	b	406794 <wcrtomb@plt+0x3ec4>
  406a9c:	bl	40fe74 <wcrtomb@plt+0xd5a4>
  406aa0:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406aa4:	str	x0, [x1, #1424]
  406aa8:	b	406a5c <wcrtomb@plt+0x418c>
  406aac:	bl	40fe74 <wcrtomb@plt+0xd5a4>
  406ab0:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406ab4:	str	x0, [x1, #1432]
  406ab8:	b	406a80 <wcrtomb@plt+0x41b0>
  406abc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406ac0:	ldr	x1, [x0, #1080]
  406ac4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406ac8:	str	x1, [x0, #936]
  406acc:	b	406794 <wcrtomb@plt+0x3ec4>
  406ad0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406ad4:	mov	w1, #0x1                   	// #1
  406ad8:	strb	w1, [x0, #1328]
  406adc:	b	406794 <wcrtomb@plt+0x3ec4>
  406ae0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406ae4:	ldr	x1, [x0, #1080]
  406ae8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406aec:	str	x1, [x0, #1600]
  406af0:	b	406794 <wcrtomb@plt+0x3ec4>
  406af4:	mov	w0, #0x2                   	// #2
  406af8:	bl	405d10 <wcrtomb@plt+0x3440>
  406afc:	str	wzr, [sp, #140]
  406b00:	b	406150 <wcrtomb@plt+0x3880>
  406b04:	str	x21, [sp, #104]
  406b08:	b	406150 <wcrtomb@plt+0x3880>
  406b0c:	mov	w24, #0xffffffff            	// #-1
  406b10:	b	406794 <wcrtomb@plt+0x3ec4>
  406b14:	ldrb	w0, [sp, #144]
  406b18:	cmp	w0, #0x30
  406b1c:	cset	x0, eq  // eq = none
  406b20:	sub	x0, x20, x0
  406b24:	ldr	x1, [sp, #128]
  406b28:	cmp	x0, x1
  406b2c:	b.ne	4067ec <wcrtomb@plt+0x3f1c>  // b.any
  406b30:	mov	w0, #0x2e2e                	// #11822
  406b34:	movk	w0, #0x2e, lsl #16
  406b38:	str	w0, [x1]
  406b3c:	add	x20, x22, #0x18
  406b40:	b	406b4c <wcrtomb@plt+0x427c>
  406b44:	cmp	x20, x22
  406b48:	b.eq	406b5c <wcrtomb@plt+0x428c>  // b.none
  406b4c:	strb	wzr, [x20]
  406b50:	add	x1, sp, #0x1a0
  406b54:	mov	x0, x22
  406b58:	bl	403ad0 <wcrtomb@plt+0x1200>
  406b5c:	cmn	w19, #0x1
  406b60:	b.eq	406b84 <wcrtomb@plt+0x42b4>  // b.none
  406b64:	cmp	w19, #0x109
  406b68:	b.hi	406af4 <wcrtomb@plt+0x4224>  // b.pmore
  406b6c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  406b70:	add	x0, x0, #0x530
  406b74:	ldrh	w0, [x0, w19, uxtw #1]
  406b78:	adr	x1, 406b84 <wcrtomb@plt+0x42b4>
  406b7c:	add	x0, x1, w0, sxth #2
  406b80:	br	x0
  406b84:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406b88:	ldrb	w20, [x0, #1588]
  406b8c:	cbnz	w20, 406ca8 <wcrtomb@plt+0x43d8>
  406b90:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406b94:	ldr	w22, [x0, #1592]
  406b98:	cbnz	w22, 406cf4 <wcrtomb@plt+0x4424>
  406b9c:	ldr	x0, [sp, #440]
  406ba0:	cbz	x0, 406d08 <wcrtomb@plt+0x4438>
  406ba4:	ldr	x0, [sp, #432]
  406ba8:	cbnz	x0, 406cfc <wcrtomb@plt+0x442c>
  406bac:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406bb0:	add	x0, x0, #0x468
  406bb4:	ldrb	w1, [x0, #183]
  406bb8:	eor	w1, w1, #0x1
  406bbc:	strb	w1, [x0, #183]
  406bc0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406bc4:	strb	wzr, [x0, #3540]
  406bc8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406bcc:	strb	wzr, [x0, #3541]
  406bd0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406bd4:	ldrb	w19, [x0, #1401]
  406bd8:	cbz	w19, 406d78 <wcrtomb@plt+0x44a8>
  406bdc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406be0:	str	wzr, [x0, #1444]
  406be4:	mov	w19, w20
  406be8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406bec:	add	x0, x0, #0x468
  406bf0:	strb	wzr, [x0, #457]
  406bf4:	mov	w1, #0x1                   	// #1
  406bf8:	strb	w1, [x0, #272]
  406bfc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c00:	add	x0, x0, #0x468
  406c04:	ldrb	w1, [x0, #457]
  406c08:	ldrb	w2, [x0, #272]
  406c0c:	orr	w1, w1, w2
  406c10:	strb	w1, [x0, #232]
  406c14:	ldr	x0, [x0, #256]
  406c18:	tbnz	x0, #63, 406e70 <wcrtomb@plt+0x45a0>
  406c1c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c20:	ldr	x0, [x0, #1368]
  406c24:	tbnz	x0, #63, 406e80 <wcrtomb@plt+0x45b0>
  406c28:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c2c:	ldr	x0, [x0, #1448]
  406c30:	cbz	x0, 406c60 <wcrtomb@plt+0x4390>
  406c34:	ldr	x0, [sp, #432]
  406c38:	cbnz	x0, 406c70 <wcrtomb@plt+0x43a0>
  406c3c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c40:	ldrb	w0, [x0, #1311]
  406c44:	cbz	w0, 406c70 <wcrtomb@plt+0x43a0>
  406c48:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406c4c:	ldrb	w0, [x0, #3541]
  406c50:	cbnz	w0, 406c70 <wcrtomb@plt+0x43a0>
  406c54:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406c58:	ldrb	w0, [x0, #3540]
  406c5c:	cbnz	w0, 406c70 <wcrtomb@plt+0x43a0>
  406c60:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c64:	ldr	w0, [x0, #1444]
  406c68:	cmp	w0, #0x2
  406c6c:	b.ne	40753c <wcrtomb@plt+0x4c6c>  // b.any
  406c70:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c74:	ldr	w0, [x0, #1128]
  406c78:	cmp	w0, #0x2
  406c7c:	b.eq	406e90 <wcrtomb@plt+0x45c0>  // b.none
  406c80:	bl	4147a4 <wcrtomb@plt+0x11ed4>
  406c84:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406c88:	ldr	w0, [x0, #1128]
  406c8c:	cbnz	w0, 406ec0 <wcrtomb@plt+0x45f0>
  406c90:	mov	x0, #0x1                   	// #1
  406c94:	mov	w1, w0
  406c98:	mov	w2, #0x0                   	// #0
  406c9c:	adrp	x4, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  406ca0:	add	x4, x4, #0x8d3
  406ca4:	b	406fe8 <wcrtomb@plt+0x4718>
  406ca8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406cac:	ldr	x19, [x0, #1096]
  406cb0:	bl	410740 <wcrtomb@plt+0xde70>
  406cb4:	mov	x4, #0x0                   	// #0
  406cb8:	adrp	x3, 425000 <_obstack_memory_used@@Base+0xe218>
  406cbc:	add	x3, x3, #0x140
  406cc0:	adrp	x2, 425000 <_obstack_memory_used@@Base+0xe218>
  406cc4:	add	x2, x2, #0x148
  406cc8:	mov	x1, x0
  406ccc:	mov	x0, x19
  406cd0:	bl	413ee8 <wcrtomb@plt+0x11618>
  406cd4:	mov	w2, #0x5                   	// #5
  406cd8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406cdc:	add	x1, x1, #0x158
  406ce0:	mov	x0, #0x0                   	// #0
  406ce4:	bl	4027a0 <dcgettext@plt>
  406ce8:	bl	4025f0 <puts@plt>
  406cec:	mov	w0, #0x0                   	// #0
  406cf0:	b	407520 <wcrtomb@plt+0x4c50>
  406cf4:	mov	w0, #0x0                   	// #0
  406cf8:	bl	405d10 <wcrtomb@plt+0x3440>
  406cfc:	sub	x0, x0, #0x1
  406d00:	str	x0, [sp, #432]
  406d04:	b	406bd0 <wcrtomb@plt+0x4300>
  406d08:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406d0c:	ldr	w19, [x0, #1088]
  406d10:	cmp	w19, w28
  406d14:	b.ge	406d70 <wcrtomb@plt+0x44a0>  // b.tcont
  406d18:	sbfiz	x21, x19, #3, #32
  406d1c:	ldr	x23, [sp, #104]
  406d20:	ldr	x0, [x23, x21]
  406d24:	bl	4022c0 <strlen@plt>
  406d28:	str	x0, [sp, #432]
  406d2c:	add	w19, w19, #0x1
  406d30:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406d34:	str	w19, [x1, #1088]
  406d38:	add	x1, x0, #0x1
  406d3c:	ldr	x0, [x23, x21]
  406d40:	bl	414204 <wcrtomb@plt+0x11934>
  406d44:	str	x0, [sp, #440]
  406d48:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  406d4c:	add	x2, x2, #0x6c8
  406d50:	ldr	x1, [sp, #432]
  406d54:	bl	403b6c <wcrtomb@plt+0x129c>
  406d58:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406d5c:	add	x0, x0, #0x468
  406d60:	ldr	x1, [x0, #48]
  406d64:	add	x1, x1, #0x1
  406d68:	str	x1, [x0, #48]
  406d6c:	b	406bd0 <wcrtomb@plt+0x4300>
  406d70:	mov	w0, #0x2                   	// #2
  406d74:	bl	405d10 <wcrtomb@plt+0x3440>
  406d78:	add	x2, sp, #0x120
  406d7c:	mov	w1, #0x1                   	// #1
  406d80:	mov	w0, #0x0                   	// #0
  406d84:	bl	402780 <__fxstat@plt>
  406d88:	cbnz	w0, 406da4 <wcrtomb@plt+0x44d4>
  406d8c:	ldr	w0, [sp, #304]
  406d90:	and	w0, w0, #0xf000
  406d94:	cmp	w0, #0x8, lsl #12
  406d98:	b.eq	406dc0 <wcrtomb@plt+0x44f0>  // b.none
  406d9c:	cmp	w0, #0x2, lsl #12
  406da0:	b.eq	406e10 <wcrtomb@plt+0x4540>  // b.none
  406da4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406da8:	ldrb	w0, [x0, #1587]
  406dac:	cbnz	w0, 406be8 <wcrtomb@plt+0x4318>
  406db0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406db4:	ldr	w0, [x0, #1444]
  406db8:	cbz	w0, 406bfc <wcrtomb@plt+0x432c>
  406dbc:	b	406be8 <wcrtomb@plt+0x4318>
  406dc0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406dc4:	add	x0, x0, #0x468
  406dc8:	add	x0, x0, #0x148
  406dcc:	ldp	x2, x3, [sp, #288]
  406dd0:	stp	x2, x3, [x0]
  406dd4:	ldp	x2, x3, [sp, #304]
  406dd8:	stp	x2, x3, [x0, #16]
  406ddc:	ldp	x2, x3, [sp, #320]
  406de0:	stp	x2, x3, [x0, #32]
  406de4:	ldp	x2, x3, [sp, #336]
  406de8:	stp	x2, x3, [x0, #48]
  406dec:	ldp	x2, x3, [sp, #352]
  406df0:	stp	x2, x3, [x0, #64]
  406df4:	ldp	x2, x3, [sp, #368]
  406df8:	stp	x2, x3, [x0, #80]
  406dfc:	ldp	x2, x3, [sp, #384]
  406e00:	stp	x2, x3, [x0, #96]
  406e04:	ldp	x2, x3, [sp, #400]
  406e08:	stp	x2, x3, [x0, #112]
  406e0c:	b	406da4 <wcrtomb@plt+0x44d4>
  406e10:	add	x2, sp, #0x90
  406e14:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  406e18:	add	x1, x1, #0x1b8
  406e1c:	mov	w0, #0x0                   	// #0
  406e20:	bl	402860 <__xstat@plt>
  406e24:	cbnz	w0, 406e68 <wcrtomb@plt+0x4598>
  406e28:	ldr	x1, [sp, #296]
  406e2c:	ldr	x0, [sp, #152]
  406e30:	cmp	x1, x0
  406e34:	b.eq	406e40 <wcrtomb@plt+0x4570>  // b.none
  406e38:	mov	w19, #0x1                   	// #1
  406e3c:	b	406da4 <wcrtomb@plt+0x44d4>
  406e40:	ldr	x1, [sp, #288]
  406e44:	ldr	x0, [sp, #144]
  406e48:	cmp	x1, x0
  406e4c:	b.eq	406e58 <wcrtomb@plt+0x4588>  // b.none
  406e50:	mov	w19, #0x1                   	// #1
  406e54:	b	406da4 <wcrtomb@plt+0x44d4>
  406e58:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406e5c:	mov	w1, #0x1                   	// #1
  406e60:	strb	w1, [x0, #1587]
  406e64:	b	406da4 <wcrtomb@plt+0x44d4>
  406e68:	mov	w19, #0x1                   	// #1
  406e6c:	b	406da4 <wcrtomb@plt+0x44d4>
  406e70:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406e74:	ldr	x1, [sp, #416]
  406e78:	str	x1, [x0, #1384]
  406e7c:	b	406c1c <wcrtomb@plt+0x434c>
  406e80:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  406e84:	ldr	x1, [sp, #416]
  406e88:	str	x1, [x0, #1368]
  406e8c:	b	406c28 <wcrtomb@plt+0x4358>
  406e90:	cbnz	w19, 406ea4 <wcrtomb@plt+0x45d4>
  406e94:	mov	w0, w22
  406e98:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406e9c:	str	w0, [x1, #1128]
  406ea0:	b	406c80 <wcrtomb@plt+0x43b0>
  406ea4:	bl	414764 <wcrtomb@plt+0x11e94>
  406ea8:	cbz	w0, 406e98 <wcrtomb@plt+0x45c8>
  406eac:	mov	w0, #0x1                   	// #1
  406eb0:	bl	402730 <isatty@plt>
  406eb4:	cmp	w0, #0x0
  406eb8:	cset	w0, ne  // ne = any
  406ebc:	b	406e98 <wcrtomb@plt+0x45c8>
  406ec0:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  406ec4:	add	x0, x0, #0x1c8
  406ec8:	bl	402850 <getenv@plt>
  406ecc:	cbz	x0, 406ee8 <wcrtomb@plt+0x4618>
  406ed0:	ldrb	w1, [x0]
  406ed4:	cbz	w1, 406ee8 <wcrtomb@plt+0x4618>
  406ed8:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  406edc:	add	x2, x1, #0x358
  406ee0:	str	x0, [x1, #856]
  406ee4:	str	x0, [x2, #8]
  406ee8:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  406eec:	add	x0, x0, #0x1d8
  406ef0:	bl	402850 <getenv@plt>
  406ef4:	cbz	x0, 406c90 <wcrtomb@plt+0x43c0>
  406ef8:	ldrb	w1, [x0]
  406efc:	cbz	w1, 406c90 <wcrtomb@plt+0x43c0>
  406f00:	bl	414238 <wcrtomb@plt+0x11968>
  406f04:	mov	x23, x0
  406f08:	add	x21, x0, #0x1
  406f0c:	mov	x25, #0x0                   	// #0
  406f10:	adrp	x27, 425000 <_obstack_memory_used@@Base+0xe218>
  406f14:	add	x27, x27, #0x748
  406f18:	adrp	x0, 424000 <_obstack_memory_used@@Base+0xd218>
  406f1c:	add	x0, x0, #0xfc8
  406f20:	str	x0, [sp, #112]
  406f24:	b	406f74 <wcrtomb@plt+0x46a4>
  406f28:	sturb	wzr, [x21, #-1]
  406f2c:	add	x19, x27, #0xc0
  406f30:	ldr	x0, [sp, #112]
  406f34:	mov	x1, x23
  406f38:	bl	402640 <strcmp@plt>
  406f3c:	cbz	w0, 406f48 <wcrtomb@plt+0x4678>
  406f40:	ldr	x0, [x19, #24]!
  406f44:	cbnz	x0, 406f34 <wcrtomb@plt+0x4664>
  406f48:	ldr	x0, [x19, #8]
  406f4c:	cmp	x0, #0x0
  406f50:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  406f54:	b.ne	406fac <wcrtomb@plt+0x46dc>  // b.any
  406f58:	ldr	x0, [x19, #16]
  406f5c:	cbz	x0, 406f64 <wcrtomb@plt+0x4694>
  406f60:	blr	x0
  406f64:	cbz	w20, 406c90 <wcrtomb@plt+0x43c0>
  406f68:	mov	x23, x26
  406f6c:	mov	x25, #0x0                   	// #0
  406f70:	add	x21, x21, #0x1
  406f74:	mov	x26, x21
  406f78:	ldurb	w20, [x21, #-1]
  406f7c:	cmp	w20, #0x3a
  406f80:	ccmp	w20, #0x0, #0x4, ne  // ne = any
  406f84:	b.eq	406f28 <wcrtomb@plt+0x4658>  // b.none
  406f88:	cmp	w20, #0x3d
  406f8c:	b.eq	406fb4 <wcrtomb@plt+0x46e4>  // b.none
  406f90:	cbz	x25, 406f70 <wcrtomb@plt+0x46a0>
  406f94:	cmp	w20, #0x3b
  406f98:	b.eq	406f70 <wcrtomb@plt+0x46a0>  // b.none
  406f9c:	sub	w20, w20, #0x30
  406fa0:	cmp	w20, #0x9
  406fa4:	b.ls	406f70 <wcrtomb@plt+0x46a0>  // b.plast
  406fa8:	b	406c90 <wcrtomb@plt+0x43c0>
  406fac:	str	x25, [x0]
  406fb0:	b	406f58 <wcrtomb@plt+0x4688>
  406fb4:	sub	x0, x21, #0x1
  406fb8:	cmp	x25, #0x0
  406fbc:	ccmp	x0, x23, #0x4, eq  // eq = none
  406fc0:	b.eq	406c90 <wcrtomb@plt+0x43c0>  // b.none
  406fc4:	sturb	wzr, [x21, #-1]
  406fc8:	mov	x25, x21
  406fcc:	b	406f70 <wcrtomb@plt+0x46a0>
  406fd0:	orr	w2, w3, w2
  406fd4:	and	w2, w2, #0xff
  406fd8:	mov	w1, w3
  406fdc:	add	x0, x0, #0x1
  406fe0:	cmp	x0, #0x100
  406fe4:	b.eq	40700c <wcrtomb@plt+0x473c>  // b.none
  406fe8:	ldrsb	w3, [x0, x4]
  406fec:	tst	w2, w0
  406ff0:	ccmp	w3, #0x1, #0x4, eq  // eq = none
  406ff4:	b.eq	406fdc <wcrtomb@plt+0x470c>  // b.none
  406ff8:	mov	w3, w1
  406ffc:	lsl	w1, w1, #1
  407000:	cmp	w1, w0
  407004:	b.le	406ff8 <wcrtomb@plt+0x4728>
  407008:	b	406fd0 <wcrtomb@plt+0x4700>
  40700c:	and	x0, x2, #0xff
  407010:	mov	x1, #0x101010101010101     	// #72340172838076673
  407014:	mul	x0, x0, x1
  407018:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40701c:	str	x0, [x1, #1208]
  407020:	ldr	w0, [sp, #120]
  407024:	tbnz	w0, #31, 407244 <wcrtomb@plt+0x4974>
  407028:	cmp	w0, #0x2
  40702c:	b.eq	4071a8 <wcrtomb@plt+0x48d8>  // b.none
  407030:	ldr	w0, [sp, #120]
  407034:	cmp	w0, #0x1
  407038:	b.ls	407240 <wcrtomb@plt+0x4970>  // b.plast
  40703c:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  407040:	add	x19, x19, #0x468
  407044:	ldr	w0, [sp, #120]
  407048:	sbfiz	x1, x0, #5, #32
  40704c:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  407050:	add	x0, x0, #0x748
  407054:	add	x0, x0, x1
  407058:	ldr	x1, [x0, #24]
  40705c:	str	x1, [x19, #192]
  407060:	ldr	x3, [x0, #16]
  407064:	ldrsw	x2, [x0, #12]
  407068:	ldr	x1, [sp, #432]
  40706c:	ldr	x0, [sp, #440]
  407070:	blr	x3
  407074:	str	x0, [x19, #184]
  407078:	strb	wzr, [sp, #280]
  40707c:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  407080:	ldrb	w1, [x1, #2248]
  407084:	strb	w1, [sp, #281]
  407088:	strb	wzr, [sp, #282]
  40708c:	ldr	x5, [x19, #192]
  407090:	mov	x4, #0x0                   	// #0
  407094:	add	x3, sp, #0x110
  407098:	mov	x2, #0x1                   	// #1
  40709c:	add	x1, sp, #0x119
  4070a0:	blr	x5
  4070a4:	cmp	x0, #0x0
  4070a8:	cset	w1, eq  // eq = none
  4070ac:	ldrb	w0, [x19, #183]
  4070b0:	cmp	w1, w0
  4070b4:	cset	w0, eq  // eq = none
  4070b8:	strb	w0, [x19, #458]
  4070bc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4070c0:	ldr	w0, [x0, #1088]
  4070c4:	sub	w28, w28, w0
  4070c8:	cmp	w24, #0x0
  4070cc:	ccmp	w28, #0x1, #0x0, eq  // eq = none
  4070d0:	b.gt	40745c <wcrtomb@plt+0x4b8c>
  4070d4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4070d8:	ldr	w0, [x0, #944]
  4070dc:	cmp	w0, #0x3
  4070e0:	csetm	w0, eq  // eq = none
  4070e4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4070e8:	str	w0, [x1, #1216]
  4070ec:	mov	w0, #0x1e                  	// #30
  4070f0:	bl	402740 <sysconf@plt>
  4070f4:	sub	x2, x0, #0x1
  4070f8:	mov	x1, #0xfffffffffffffffa    	// #-6
  4070fc:	movk	x1, #0x7fff, lsl #48
  407100:	cmp	x2, x1
  407104:	b.hi	407468 <wcrtomb@plt+0x4b98>  // b.pmore
  407108:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  40710c:	str	x0, [x1, #1288]
  407110:	mov	x1, #0x18000               	// #98304
  407114:	udiv	x2, x1, x0
  407118:	msub	x2, x2, x0, x1
  40711c:	add	x1, x0, x1
  407120:	sub	x1, x1, x2
  407124:	cmp	x2, #0x0
  407128:	mov	x2, #0x18000               	// #98304
  40712c:	csel	x1, x1, x2, ne  // ne = any
  407130:	add	x0, x0, #0x8
  407134:	add	x0, x0, x1
  407138:	adrp	x19, 43e000 <_obstack_memory_used@@Base+0x27218>
  40713c:	add	x19, x19, #0x468
  407140:	str	x0, [x19, #152]
  407144:	bl	413fec <wcrtomb@plt+0x1171c>
  407148:	str	x0, [x19, #144]
  40714c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  407150:	ldr	w0, [x0, #948]
  407154:	tbz	w0, #1, 407170 <wcrtomb@plt+0x48a0>
  407158:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40715c:	ldr	w0, [x0, #1132]
  407160:	cbnz	w0, 407170 <wcrtomb@plt+0x48a0>
  407164:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  407168:	mov	w1, #0x1                   	// #1
  40716c:	str	w1, [x0, #1132]
  407170:	cmp	w28, #0x0
  407174:	b.le	40746c <wcrtomb@plt+0x4b9c>
  407178:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40717c:	ldrsw	x19, [x0, #1088]
  407180:	ldr	x0, [sp, #104]
  407184:	add	x19, x0, x19, lsl #3
  407188:	mov	w21, #0x1                   	// #1
  40718c:	adrp	x23, 425000 <_obstack_memory_used@@Base+0xe218>
  407190:	add	x23, x23, #0x90
  407194:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x27218>
  407198:	add	x22, x22, #0x468
  40719c:	mov	w24, #0x1                   	// #1
  4071a0:	mov	w25, #0xffffff9c            	// #-100
  4071a4:	b	4074dc <wcrtomb@plt+0x4c0c>
  4071a8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4071ac:	ldrb	w0, [x0, #2256]
  4071b0:	cbnz	w0, 4071e4 <wcrtomb@plt+0x4914>
  4071b4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4071b8:	ldr	x0, [x0, #1176]
  4071bc:	cmp	x0, #0x1
  4071c0:	b.ne	40703c <wcrtomb@plt+0x476c>  // b.any
  4071c4:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4071c8:	ldrb	w0, [x0, #3540]
  4071cc:	cbz	w0, 40703c <wcrtomb@plt+0x476c>
  4071d0:	add	x1, sp, #0x1b0
  4071d4:	add	x0, sp, #0x1b8
  4071d8:	bl	405f0c <wcrtomb@plt+0x363c>
  4071dc:	str	w22, [sp, #120]
  4071e0:	b	40703c <wcrtomb@plt+0x476c>
  4071e4:	ldr	x20, [sp, #440]
  4071e8:	ldr	x21, [sp, #432]
  4071ec:	str	xzr, [sp, #144]
  4071f0:	mov	x19, #0x0                   	// #0
  4071f4:	adrp	x23, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4071f8:	add	x23, x23, #0x8d0
  4071fc:	b	40720c <wcrtomb@plt+0x493c>
  407200:	cmn	x1, #0x3
  407204:	b.hi	4071d0 <wcrtomb@plt+0x4900>  // b.pmore
  407208:	add	x19, x19, x1
  40720c:	cmp	x21, x19
  407210:	b.ls	40759c <wcrtomb@plt+0x4ccc>  // b.plast
  407214:	add	x0, x20, x19
  407218:	ldrb	w1, [x20, x19]
  40721c:	add	x1, x23, x1
  407220:	ldrsb	x1, [x1, #3]
  407224:	cmn	x1, #0x2
  407228:	b.ne	407200 <wcrtomb@plt+0x4930>  // b.any
  40722c:	add	x2, sp, #0x90
  407230:	sub	x1, x21, x19
  407234:	bl	4169c8 <wcrtomb@plt+0x140f8>
  407238:	mov	x1, x0
  40723c:	b	407200 <wcrtomb@plt+0x4930>
  407240:	ldr	w22, [sp, #120]
  407244:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  407248:	ldr	x0, [x0, #1176]
  40724c:	cmp	x0, #0x1
  407250:	b.hi	40725c <wcrtomb@plt+0x498c>  // b.pmore
  407254:	str	w22, [sp, #120]
  407258:	b	40703c <wcrtomb@plt+0x476c>
  40725c:	ldr	x23, [sp, #440]
  407260:	str	x23, [sp, #128]
  407264:	ldr	x25, [sp, #432]
  407268:	add	x0, x25, #0x1
  40726c:	bl	413fec <wcrtomb@plt+0x1171c>
  407270:	str	x0, [sp, #120]
  407274:	str	xzr, [sp, #144]
  407278:	mov	x27, x0
  40727c:	mov	x21, #0x11                  	// #17
  407280:	movk	x21, #0x220, lsl #16
  407284:	movk	x21, #0x14, lsl #32
  407288:	movk	x21, #0x220, lsl #48
  40728c:	mov	x20, #0x2                   	// #2
  407290:	movk	x20, #0x6000, lsl #48
  407294:	mov	x19, #0x400                 	// #1024
  407298:	movk	x19, #0x80, lsl #32
  40729c:	movk	x19, #0x13fe, lsl #48
  4072a0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4072a4:	add	x0, x0, #0xdd6
  4072a8:	str	x0, [sp, #112]
  4072ac:	b	407338 <wcrtomb@plt+0x4a68>
  4072b0:	cmp	w1, #0x2e
  4072b4:	b.hi	4072e4 <wcrtomb@plt+0x4a14>  // b.pmore
  4072b8:	cmp	w1, #0x23
  4072bc:	b.ls	4072ec <wcrtomb@plt+0x4a1c>  // b.plast
  4072c0:	mov	x0, #0x1                   	// #1
  4072c4:	lsl	x0, x0, x1
  4072c8:	mov	x1, #0x441000000000        	// #74835510165504
  4072cc:	tst	x0, x1
  4072d0:	b.ne	407438 <wcrtomb@plt+0x4b68>  // b.any
  4072d4:	mov	x1, #0x90000000000         	// #9895604649984
  4072d8:	tst	x0, x1
  4072dc:	b.eq	4072ec <wcrtomb@plt+0x4a1c>  // b.none
  4072e0:	b	4073b0 <wcrtomb@plt+0x4ae0>
  4072e4:	cmp	w1, #0x3f
  4072e8:	b.eq	4073b0 <wcrtomb@plt+0x4ae0>  // b.none
  4072ec:	ldr	x0, [sp, #112]
  4072f0:	ldrb	w0, [x0]
  4072f4:	cbnz	w0, 4073ec <wcrtomb@plt+0x4b1c>
  4072f8:	ldrb	w1, [x23]
  4072fc:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  407300:	add	x0, x0, #0x8d0
  407304:	add	x0, x0, x1
  407308:	ldrsb	x26, [x0, #3]
  40730c:	cmn	x26, #0x2
  407310:	b.eq	407408 <wcrtomb@plt+0x4b38>  // b.none
  407314:	cmp	x26, #0x10
  407318:	b.hi	407438 <wcrtomb@plt+0x4b68>  // b.pmore
  40731c:	mov	x2, x26
  407320:	mov	x1, x23
  407324:	mov	x0, x27
  407328:	bl	402680 <mempcpy@plt>
  40732c:	mov	x27, x0
  407330:	add	x23, x23, x26
  407334:	sub	x25, x25, x26
  407338:	cbz	x25, 407420 <wcrtomb@plt+0x4b50>
  40733c:	ldrb	w1, [x23]
  407340:	cmp	w1, #0x5b
  407344:	b.eq	407438 <wcrtomb@plt+0x4b68>  // b.none
  407348:	b.ls	4072b0 <wcrtomb@plt+0x49e0>  // b.plast
  40734c:	cmp	w1, #0x5c
  407350:	b.ne	407398 <wcrtomb@plt+0x4ac8>  // b.any
  407354:	cmp	x25, #0x1
  407358:	b.ls	4072ec <wcrtomb@plt+0x4a1c>  // b.plast
  40735c:	ldrb	w1, [x23, #1]
  407360:	cmp	w1, #0x3c
  407364:	b.ls	4073b8 <wcrtomb@plt+0x4ae8>  // b.plast
  407368:	sub	w0, w1, #0x3e
  40736c:	and	w1, w0, #0xff
  407370:	cmp	w1, #0x3e
  407374:	b.hi	4073c0 <wcrtomb@plt+0x4af0>  // b.pmore
  407378:	mov	x0, #0x1                   	// #1
  40737c:	lsl	x0, x0, x1
  407380:	tst	x0, x21
  407384:	b.ne	407438 <wcrtomb@plt+0x4b68>  // b.any
  407388:	tst	x0, x20
  40738c:	b.eq	4073c0 <wcrtomb@plt+0x4af0>  // b.none
  407390:	cbnz	w22, 4073c0 <wcrtomb@plt+0x4af0>
  407394:	b	407438 <wcrtomb@plt+0x4b68>
  407398:	cmp	w1, #0x5e
  40739c:	b.eq	407438 <wcrtomb@plt+0x4b68>  // b.none
  4073a0:	sub	w0, w1, #0x7b
  4073a4:	and	w0, w0, #0xff
  4073a8:	cmp	w0, #0x1
  4073ac:	b.hi	4072ec <wcrtomb@plt+0x4a1c>  // b.pmore
  4073b0:	cbz	w22, 4072ec <wcrtomb@plt+0x4a1c>
  4073b4:	b	407438 <wcrtomb@plt+0x4b68>
  4073b8:	cmp	w1, #0x9
  4073bc:	b.hi	4073cc <wcrtomb@plt+0x4afc>  // b.pmore
  4073c0:	add	x23, x23, #0x1
  4073c4:	sub	x25, x25, #0x1
  4073c8:	b	4072ec <wcrtomb@plt+0x4a1c>
  4073cc:	mov	x0, #0x1                   	// #1
  4073d0:	lsl	x0, x0, x1
  4073d4:	tst	x0, x19
  4073d8:	b.ne	407438 <wcrtomb@plt+0x4b68>  // b.any
  4073dc:	mov	x1, #0x90000000000         	// #9895604649984
  4073e0:	tst	x0, x1
  4073e4:	b.eq	4073c0 <wcrtomb@plt+0x4af0>  // b.none
  4073e8:	b	407390 <wcrtomb@plt+0x4ac0>
  4073ec:	add	x2, sp, #0x90
  4073f0:	mov	x1, x25
  4073f4:	mov	x0, x23
  4073f8:	bl	403d0c <wcrtomb@plt+0x143c>
  4073fc:	tbnz	w0, #31, 407438 <wcrtomb@plt+0x4b68>
  407400:	sxtw	x26, w0
  407404:	b	40731c <wcrtomb@plt+0x4a4c>
  407408:	add	x2, sp, #0x90
  40740c:	mov	x1, x25
  407410:	mov	x0, x23
  407414:	bl	4169c8 <wcrtomb@plt+0x140f8>
  407418:	mov	x26, x0
  40741c:	b	407314 <wcrtomb@plt+0x4a44>
  407420:	ldr	x1, [sp, #120]
  407424:	sub	x2, x27, x1
  407428:	ldr	x0, [sp, #432]
  40742c:	cmp	x0, x2
  407430:	b.ne	407448 <wcrtomb@plt+0x4b78>  // b.any
  407434:	mov	w22, #0x2                   	// #2
  407438:	ldr	x0, [sp, #120]
  40743c:	bl	402660 <free@plt>
  407440:	str	w22, [sp, #120]
  407444:	b	40703c <wcrtomb@plt+0x476c>
  407448:	str	x2, [sp, #432]
  40744c:	ldr	x0, [sp, #128]
  407450:	bl	402260 <memcpy@plt>
  407454:	mov	w22, #0x2                   	// #2
  407458:	b	407438 <wcrtomb@plt+0x4b68>
  40745c:	mvn	w0, w24
  407460:	lsr	w0, w0, #31
  407464:	b	4070e4 <wcrtomb@plt+0x4814>
  407468:	bl	4025a0 <abort@plt>
  40746c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  407470:	ldr	w0, [x0, #944]
  407474:	cmp	w0, #0x3
  407478:	ldr	w0, [sp, #136]
  40747c:	ldr	w1, [sp, #140]
  407480:	ccmp	w0, w1, #0x4, eq  // eq = none
  407484:	b.gt	407498 <wcrtomb@plt+0x4bc8>
  407488:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xe218>
  40748c:	add	x19, x19, #0x748
  407490:	add	x19, x19, #0x1f0
  407494:	b	407188 <wcrtomb@plt+0x48b8>
  407498:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  40749c:	mov	w1, #0x1                   	// #1
  4074a0:	strb	w1, [x0, #1440]
  4074a4:	adrp	x19, 425000 <_obstack_memory_used@@Base+0xe218>
  4074a8:	add	x19, x19, #0x748
  4074ac:	add	x19, x19, #0x1e0
  4074b0:	b	407188 <wcrtomb@plt+0x48b8>
  4074b4:	str	x20, [x22, #8]
  4074b8:	mov	w3, w24
  4074bc:	mov	w2, w24
  4074c0:	mov	x1, x20
  4074c4:	mov	w0, w25
  4074c8:	bl	405bf4 <wcrtomb@plt+0x3324>
  4074cc:	and	w0, w0, #0xff
  4074d0:	and	w21, w21, w0
  4074d4:	ldr	x0, [x19]
  4074d8:	cbz	x0, 40750c <wcrtomb@plt+0x4c3c>
  4074dc:	ldr	x20, [x19], #8
  4074e0:	mov	x1, x23
  4074e4:	mov	x0, x20
  4074e8:	bl	402640 <strcmp@plt>
  4074ec:	cbnz	w0, 4074b4 <wcrtomb@plt+0x4be4>
  4074f0:	ldr	x0, [x22, #472]
  4074f4:	str	x0, [x22, #8]
  4074f8:	mov	w1, w24
  4074fc:	mov	w0, #0x0                   	// #0
  407500:	bl	404e90 <wcrtomb@plt+0x25c0>
  407504:	and	w0, w0, #0xff
  407508:	b	4074d0 <wcrtomb@plt+0x4c00>
  40750c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  407510:	ldrb	w0, [x0, #1145]
  407514:	cmp	w0, #0x0
  407518:	mov	w0, #0x2                   	// #2
  40751c:	csel	w0, w21, w0, eq  // eq = none
  407520:	ldp	x19, x20, [sp, #16]
  407524:	ldp	x21, x22, [sp, #32]
  407528:	ldp	x23, x24, [sp, #48]
  40752c:	ldp	x25, x26, [sp, #64]
  407530:	ldp	x27, x28, [sp, #80]
  407534:	ldp	x29, x30, [sp], #448
  407538:	ret
  40753c:	mov	w0, #0x1                   	// #1
  407540:	b	407520 <wcrtomb@plt+0x4c50>
  407544:	mov	w4, w26
  407548:	mov	w3, #0x50000000            	// #1342177280
  40754c:	mov	x0, x25
  407550:	bl	41067c <wcrtomb@plt+0xddac>
  407554:	cbnz	w0, 406a24 <wcrtomb@plt+0x4154>
  407558:	add	x20, x20, #0x1
  40755c:	add	x19, x19, #0x8
  407560:	mov	x23, x19
  407564:	ldr	x0, [x19]
  407568:	cbz	x0, 406a18 <wcrtomb@plt+0x4148>
  40756c:	ldr	x1, [x23]
  407570:	ldr	x2, [x21, #1080]
  407574:	cbz	w20, 407544 <wcrtomb@plt+0x4c74>
  407578:	mov	w4, w26
  40757c:	mov	w3, #0x10000000            	// #268435456
  407580:	mov	x0, x25
  407584:	bl	41067c <wcrtomb@plt+0xddac>
  407588:	cbnz	w0, 406a24 <wcrtomb@plt+0x4154>
  40758c:	add	w0, w20, #0x1
  407590:	cmp	w0, #0x1
  407594:	b.gt	406794 <wcrtomb@plt+0x3ec4>
  407598:	b	407558 <wcrtomb@plt+0x4c88>
  40759c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4075a0:	ldrb	w0, [x0, #3542]
  4075a4:	cbz	w0, 40703c <wcrtomb@plt+0x476c>
  4075a8:	ldr	x21, [sp, #440]
  4075ac:	ldr	x20, [sp, #432]
  4075b0:	str	xzr, [sp, #144]
  4075b4:	mov	x19, #0x0                   	// #0
  4075b8:	cmp	x20, x19
  4075bc:	b.ls	40703c <wcrtomb@plt+0x476c>  // b.plast
  4075c0:	add	x2, sp, #0x90
  4075c4:	sub	x1, x20, x19
  4075c8:	add	x0, x21, x19
  4075cc:	bl	403d0c <wcrtomb@plt+0x143c>
  4075d0:	tbnz	w0, #31, 4071d0 <wcrtomb@plt+0x4900>
  4075d4:	add	x19, x19, w0, sxtw
  4075d8:	b	4075b8 <wcrtomb@plt+0x4ce8>
  4075dc:	sub	sp, sp, #0x210
  4075e0:	stp	x29, x30, [sp]
  4075e4:	mov	x29, sp
  4075e8:	stp	x19, x20, [sp, #16]
  4075ec:	stp	x21, x22, [sp, #32]
  4075f0:	stp	x23, x24, [sp, #48]
  4075f4:	stp	x25, x26, [sp, #64]
  4075f8:	stp	x27, x28, [sp, #80]
  4075fc:	mov	x28, x0
  407600:	str	x1, [sp, #104]
  407604:	mov	x22, x1
  407608:	str	xzr, [sp, #520]
  40760c:	mov	w0, #0x1                   	// #1
  407610:	bl	409504 <wcrtomb@plt+0x6c34>
  407614:	mov	x24, x0
  407618:	mov	x20, x28
  40761c:	mov	x23, #0x0                   	// #0
  407620:	adrp	x25, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  407624:	add	x25, x25, #0xdd5
  407628:	adrp	x26, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40762c:	add	x26, x26, #0x8c8
  407630:	b	407684 <wcrtomb@plt+0x4db4>
  407634:	ldrb	w0, [x26]
  407638:	cmp	w0, #0xa
  40763c:	b.eq	4076cc <wcrtomb@plt+0x4dfc>  // b.none
  407640:	add	x27, x21, #0x2
  407644:	ldr	x0, [sp, #520]
  407648:	cmp	x27, x0
  40764c:	b.hi	4076f0 <wcrtomb@plt+0x4e20>  // b.pmore
  407650:	mov	x2, x21
  407654:	mov	x1, x20
  407658:	add	x0, x23, #0x1
  40765c:	bl	402260 <memcpy@plt>
  407660:	ldrb	w1, [x26]
  407664:	add	x0, x23, x21
  407668:	strb	w1, [x0, #1]
  40766c:	add	x2, x21, #0x2
  407670:	mov	x1, x23
  407674:	mov	x0, x24
  407678:	bl	408990 <wcrtomb@plt+0x60c0>
  40767c:	cbz	x19, 407804 <wcrtomb@plt+0x4f34>
  407680:	mov	x20, x19
  407684:	mov	x2, x22
  407688:	mov	w1, #0xa                   	// #10
  40768c:	mov	x0, x20
  407690:	bl	402720 <memchr@plt>
  407694:	mov	x19, x0
  407698:	cbz	x0, 407864 <wcrtomb@plt+0x4f94>
  40769c:	sub	x21, x0, x20
  4076a0:	add	x19, x0, #0x1
  4076a4:	add	x0, x21, #0x1
  4076a8:	sub	x22, x22, x0
  4076ac:	ldrb	w0, [x25]
  4076b0:	cbnz	w0, 407634 <wcrtomb@plt+0x4d64>
  4076b4:	mov	x2, x21
  4076b8:	mov	x1, x20
  4076bc:	mov	x0, x24
  4076c0:	bl	408990 <wcrtomb@plt+0x60c0>
  4076c4:	mov	x20, x19
  4076c8:	b	407684 <wcrtomb@plt+0x4db4>
  4076cc:	cmp	x19, #0x0
  4076d0:	ccmp	x20, x28, #0x0, ne  // ne = any
  4076d4:	b.ls	407640 <wcrtomb@plt+0x4d70>  // b.plast
  4076d8:	add	x2, x21, #0x2
  4076dc:	sub	x1, x20, #0x1
  4076e0:	mov	x0, x24
  4076e4:	bl	408990 <wcrtomb@plt+0x60c0>
  4076e8:	mov	x20, x19
  4076ec:	b	407684 <wcrtomb@plt+0x4db4>
  4076f0:	mov	x0, x23
  4076f4:	bl	402660 <free@plt>
  4076f8:	str	x27, [sp, #520]
  4076fc:	add	x1, sp, #0x208
  407700:	mov	x0, #0x0                   	// #0
  407704:	bl	414160 <wcrtomb@plt+0x11890>
  407708:	mov	x23, x0
  40770c:	ldrb	w0, [x26]
  407710:	strb	w0, [x23]
  407714:	b	407650 <wcrtomb@plt+0x4d80>
  407718:	sub	x19, x19, #0x1
  40771c:	cmp	x21, x19
  407720:	b.eq	407758 <wcrtomb@plt+0x4e88>  // b.none
  407724:	add	x0, sp, #0x88
  407728:	add	x0, x0, x19, lsl #2
  40772c:	add	x2, sp, #0x70
  407730:	ldr	w1, [x0, #4]
  407734:	add	x0, sp, #0x78
  407738:	bl	4028d0 <wcrtomb@plt>
  40773c:	cmp	w0, #0x1
  407740:	b.le	407718 <wcrtomb@plt+0x4e48>
  407744:	sxtw	x2, w0
  407748:	add	x1, sp, #0x78
  40774c:	mov	x0, x24
  407750:	bl	408990 <wcrtomb@plt+0x60c0>
  407754:	b	407718 <wcrtomb@plt+0x4e48>
  407758:	add	x20, x20, #0x1
  40775c:	cmp	x20, x23
  407760:	b.eq	4077ac <wcrtomb@plt+0x4edc>  // b.none
  407764:	ldrb	w0, [x20]
  407768:	ldrb	w1, [x22, w0, sxtw]
  40776c:	cbnz	w1, 407758 <wcrtomb@plt+0x4e88>
  407770:	mov	w1, #0x1                   	// #1
  407774:	strb	w1, [x22, w0, sxtw]
  407778:	add	x0, x26, w0, sxtw #2
  40777c:	add	x1, sp, #0x88
  407780:	ldr	w0, [x0, #260]
  407784:	bl	40f8e4 <wcrtomb@plt+0xd014>
  407788:	cmp	w0, #0x0
  40778c:	b.le	407758 <wcrtomb@plt+0x4e88>
  407790:	sub	w19, w0, #0x2
  407794:	sxtw	x19, w19
  407798:	sxtw	x21, w0
  40779c:	sub	x21, x21, #0x3
  4077a0:	sub	w0, w0, #0x1
  4077a4:	sub	x21, x21, x0
  4077a8:	b	407724 <wcrtomb@plt+0x4e54>
  4077ac:	mov	x0, x24
  4077b0:	bl	408e20 <wcrtomb@plt+0x6550>
  4077b4:	mov	x0, #0x28                  	// #40
  4077b8:	bl	413fec <wcrtomb@plt+0x1171c>
  4077bc:	str	x24, [x0]
  4077c0:	str	x25, [x0, #8]
  4077c4:	str	x28, [x0, #16]
  4077c8:	ldr	x1, [sp, #104]
  4077cc:	str	x1, [x0, #24]
  4077d0:	str	xzr, [x0, #32]
  4077d4:	ldp	x19, x20, [sp, #16]
  4077d8:	ldp	x21, x22, [sp, #32]
  4077dc:	ldp	x23, x24, [sp, #48]
  4077e0:	ldp	x25, x26, [sp, #64]
  4077e4:	ldp	x27, x28, [sp, #80]
  4077e8:	ldp	x29, x30, [sp]
  4077ec:	add	sp, sp, #0x210
  4077f0:	ret
  4077f4:	mov	x2, x22
  4077f8:	mov	x1, x20
  4077fc:	mov	x0, x24
  407800:	bl	408990 <wcrtomb@plt+0x60c0>
  407804:	mov	x0, x23
  407808:	bl	402660 <free@plt>
  40780c:	mov	x0, x24
  407810:	bl	408e18 <wcrtomb@plt+0x6548>
  407814:	mov	x25, x0
  407818:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40781c:	ldrb	w0, [x0, #3542]
  407820:	cbz	w0, 4077ac <wcrtomb@plt+0x4edc>
  407824:	str	xzr, [sp, #112]
  407828:	add	x0, sp, #0x200
  40782c:	stp	xzr, xzr, [x0, #-248]
  407830:	mov	x2, #0xf0                  	// #240
  407834:	mov	w1, #0x0                   	// #0
  407838:	add	x0, sp, #0x118
  40783c:	bl	4024c0 <memset@plt>
  407840:	ldr	x0, [sp, #104]
  407844:	add	x23, x28, x0
  407848:	cmp	x28, x23
  40784c:	b.cs	4077ac <wcrtomb@plt+0x4edc>  // b.hs, b.nlast
  407850:	mov	x20, x28
  407854:	add	x22, sp, #0x108
  407858:	adrp	x26, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40785c:	add	x26, x26, #0x8d0
  407860:	b	407764 <wcrtomb@plt+0x4e94>
  407864:	ldrb	w0, [x25]
  407868:	cbz	w0, 4077f4 <wcrtomb@plt+0x4f24>
  40786c:	mov	x21, x22
  407870:	mov	x22, #0x0                   	// #0
  407874:	b	407640 <wcrtomb@plt+0x4d70>
  407878:	stp	x29, x30, [sp, #-192]!
  40787c:	mov	x29, sp
  407880:	stp	x21, x22, [sp, #32]
  407884:	stp	x23, x24, [sp, #48]
  407888:	stp	x27, x28, [sp, #80]
  40788c:	mov	x27, x0
  407890:	str	x1, [sp, #120]
  407894:	str	x2, [sp, #128]
  407898:	str	x3, [sp, #136]
  40789c:	mov	x23, x4
  4078a0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4078a4:	ldrb	w0, [x0, #2248]
  4078a8:	str	w0, [sp, #116]
  4078ac:	ldr	x24, [x27]
  4078b0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4078b4:	ldrb	w0, [x0, #3541]
  4078b8:	cbnz	w0, 407938 <wcrtomb@plt+0x5068>
  4078bc:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4078c0:	add	x1, x0, #0x8d0
  4078c4:	ldrb	w28, [x1, #2]
  4078c8:	eor	w28, w28, #0x1
  4078cc:	ldrb	w0, [x0, #2256]
  4078d0:	and	w28, w28, w0
  4078d4:	and	w28, w28, #0xff
  4078d8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4078dc:	ldrb	w0, [x0, #3540]
  4078e0:	orr	w1, w28, w0
  4078e4:	cmp	x4, #0x0
  4078e8:	cset	w0, ne  // ne = any
  4078ec:	orr	w0, w0, w1
  4078f0:	and	w0, w0, #0xff
  4078f4:	str	w0, [sp, #112]
  4078f8:	cmp	x23, #0x0
  4078fc:	ldr	x0, [sp, #120]
  407900:	csel	x22, x23, x0, ne  // ne = any
  407904:	str	x22, [sp, #184]
  407908:	ldr	x1, [sp, #128]
  40790c:	add	x21, x0, x1
  407910:	cmp	x22, x21
  407914:	b.hi	407b0c <wcrtomb@plt+0x523c>  // b.pmore
  407918:	stp	x19, x20, [sp, #16]
  40791c:	stp	x25, x26, [sp, #64]
  407920:	adrp	x25, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  407924:	add	x25, x25, #0xdd5
  407928:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40792c:	add	x0, x0, #0x8d0
  407930:	str	x0, [sp, #104]
  407934:	b	407b5c <wcrtomb@plt+0x528c>
  407938:	str	wzr, [sp, #112]
  40793c:	mov	w28, #0x0                   	// #0
  407940:	b	4078f8 <wcrtomb@plt+0x5028>
  407944:	ldr	x0, [x27, #32]
  407948:	cbz	x0, 407970 <wcrtomb@plt+0x50a0>
  40794c:	mov	x4, x23
  407950:	ldr	x3, [sp, #136]
  407954:	ldr	x2, [sp, #128]
  407958:	ldr	x1, [sp, #120]
  40795c:	ldr	x0, [x27, #32]
  407960:	bl	4031b8 <wcrtomb@plt+0x8e8>
  407964:	ldp	x19, x20, [sp, #16]
  407968:	ldp	x25, x26, [sp, #64]
  40796c:	b	4079ec <wcrtomb@plt+0x511c>
  407970:	add	x1, x27, #0x18
  407974:	add	x0, x27, #0x10
  407978:	bl	405f0c <wcrtomb@plt+0x363c>
  40797c:	mov	x2, #0xa46                 	// #2630
  407980:	movk	x2, #0x1, lsl #16
  407984:	ldr	x1, [x27, #24]
  407988:	ldr	x0, [x27, #16]
  40798c:	bl	402b80 <wcrtomb@plt+0x2b0>
  407990:	str	x0, [x27, #32]
  407994:	b	40794c <wcrtomb@plt+0x507c>
  407998:	mov	x3, x21
  40799c:	add	x2, x22, x19
  4079a0:	add	x1, sp, #0x98
  4079a4:	add	x0, sp, #0xb8
  4079a8:	bl	409600 <wcrtomb@plt+0x6d30>
  4079ac:	cbz	x0, 407ba8 <wcrtomb@plt+0x52d8>
  4079b0:	ldr	x19, [sp, #184]
  4079b4:	sub	x19, x19, #0x1
  4079b8:	b	407b50 <wcrtomb@plt+0x5280>
  4079bc:	cmp	x23, #0x0
  4079c0:	cinc	x20, x20, eq  // eq = none
  4079c4:	b	4079d4 <wcrtomb@plt+0x5104>
  4079c8:	mov	w26, #0x1                   	// #1
  4079cc:	b	407a4c <wcrtomb@plt+0x517c>
  4079d0:	cbz	x23, 407ac8 <wcrtomb@plt+0x51f8>
  4079d4:	ldr	x0, [sp, #120]
  4079d8:	sub	x0, x19, x0
  4079dc:	ldr	x1, [sp, #136]
  4079e0:	str	x20, [x1]
  4079e4:	ldp	x19, x20, [sp, #16]
  4079e8:	ldp	x25, x26, [sp, #64]
  4079ec:	ldp	x21, x22, [sp, #32]
  4079f0:	ldp	x23, x24, [sp, #48]
  4079f4:	ldp	x27, x28, [sp, #80]
  4079f8:	ldp	x29, x30, [sp], #192
  4079fc:	ret
  407a00:	add	x1, x27, #0x18
  407a04:	add	x0, x27, #0x10
  407a08:	bl	405f0c <wcrtomb@plt+0x363c>
  407a0c:	mov	x2, #0xa46                 	// #2630
  407a10:	movk	x2, #0x1, lsl #16
  407a14:	ldr	x1, [x27, #24]
  407a18:	ldr	x0, [x27, #16]
  407a1c:	bl	402b80 <wcrtomb@plt+0x2b0>
  407a20:	str	x0, [x27, #32]
  407a24:	b	407a78 <wcrtomb@plt+0x51a8>
  407a28:	cbz	x20, 407b3c <wcrtomb@plt+0x526c>
  407a2c:	mov	w4, w26
  407a30:	add	x3, sp, #0xa0
  407a34:	sub	x2, x20, #0x1
  407a38:	mov	x1, x19
  407a3c:	mov	x0, x24
  407a40:	bl	409348 <wcrtomb@plt+0x6a78>
  407a44:	cbnz	x0, 407b3c <wcrtomb@plt+0x526c>
  407a48:	ldr	x20, [sp, #176]
  407a4c:	add	x22, x19, x20
  407a50:	mov	x1, x21
  407a54:	mov	x0, x22
  407a58:	bl	4097d8 <wcrtomb@plt+0x6f08>
  407a5c:	cbz	x0, 4079d0 <wcrtomb@plt+0x5100>
  407a60:	cbnz	x23, 407a28 <wcrtomb@plt+0x5158>
  407a64:	ldr	x0, [sp, #104]
  407a68:	ldrb	w0, [x0]
  407a6c:	cbnz	w0, 407a28 <wcrtomb@plt+0x5158>
  407a70:	ldr	x0, [x27, #32]
  407a74:	cbz	x0, 407a00 <wcrtomb@plt+0x5130>
  407a78:	sub	x2, x21, x22
  407a7c:	ldr	w1, [sp, #116]
  407a80:	mov	x0, x22
  407a84:	bl	402720 <memchr@plt>
  407a88:	cmp	x0, #0x0
  407a8c:	csinc	x20, x21, x0, eq  // eq = none
  407a90:	mov	x4, #0x0                   	// #0
  407a94:	ldr	x3, [sp, #136]
  407a98:	sub	x2, x20, x19
  407a9c:	mov	x1, x19
  407aa0:	ldr	x0, [x27, #32]
  407aa4:	bl	4031b8 <wcrtomb@plt+0x8e8>
  407aa8:	cmn	x0, #0x1
  407aac:	b.ne	407b04 <wcrtomb@plt+0x5234>  // b.any
  407ab0:	sub	x19, x20, #0x1
  407ab4:	b	407b3c <wcrtomb@plt+0x526c>
  407ab8:	mov	x0, #0xffffffffffffffff    	// #-1
  407abc:	ldp	x19, x20, [sp, #16]
  407ac0:	ldp	x25, x26, [sp, #64]
  407ac4:	b	4079ec <wcrtomb@plt+0x511c>
  407ac8:	add	x0, x19, x20
  407acc:	sub	x2, x21, x0
  407ad0:	ldr	w1, [sp, #116]
  407ad4:	bl	402720 <memchr@plt>
  407ad8:	cmp	x0, #0x0
  407adc:	csinc	x21, x21, x0, eq  // eq = none
  407ae0:	ldr	x0, [sp, #120]
  407ae4:	sub	x2, x19, x0
  407ae8:	ldr	w1, [sp, #116]
  407aec:	mov	x19, x0
  407af0:	bl	4026a0 <memrchr@plt>
  407af4:	cmp	x0, #0x0
  407af8:	csinc	x19, x19, x0, eq  // eq = none
  407afc:	sub	x20, x21, x19
  407b00:	b	4079d4 <wcrtomb@plt+0x5104>
  407b04:	mov	x21, x20
  407b08:	b	407ae0 <wcrtomb@plt+0x5210>
  407b0c:	mov	x0, #0xffffffffffffffff    	// #-1
  407b10:	b	4079ec <wcrtomb@plt+0x511c>
  407b14:	mov	x0, #0xffffffffffffffff    	// #-1
  407b18:	ldp	x19, x20, [sp, #16]
  407b1c:	ldp	x25, x26, [sp, #64]
  407b20:	b	4079ec <wcrtomb@plt+0x511c>
  407b24:	mov	x1, x21
  407b28:	sub	x0, x19, x0
  407b2c:	bl	4097d8 <wcrtomb@plt+0x6f08>
  407b30:	cmp	x0, #0x0
  407b34:	cset	w0, eq  // eq = none
  407b38:	cbnz	w0, 4079c8 <wcrtomb@plt+0x50f8>
  407b3c:	mov	x1, x21
  407b40:	mov	x0, x19
  407b44:	bl	4097c0 <wcrtomb@plt+0x6ef0>
  407b48:	add	x19, x19, x0
  407b4c:	str	x19, [sp, #184]
  407b50:	add	x22, x19, #0x1
  407b54:	cmp	x22, x21
  407b58:	b.hi	407ab8 <wcrtomb@plt+0x51e8>  // b.pmore
  407b5c:	sub	x2, x21, x22
  407b60:	ldrb	w1, [x25]
  407b64:	ldrb	w4, [sp, #112]
  407b68:	add	x3, sp, #0xa0
  407b6c:	add	x2, x2, x1
  407b70:	sub	x1, x22, x1
  407b74:	mov	x0, x24
  407b78:	bl	409348 <wcrtomb@plt+0x6a78>
  407b7c:	mov	x19, x0
  407b80:	tbnz	x0, #63, 407b14 <wcrtomb@plt+0x5244>
  407b84:	ldrb	w20, [x25]
  407b88:	ldr	x0, [sp, #176]
  407b8c:	sub	x20, x0, w20, uxtb #1
  407b90:	ldr	x1, [x27, #8]
  407b94:	ldr	x0, [sp, #160]
  407b98:	cmp	x1, x0
  407b9c:	b.le	407944 <wcrtomb@plt+0x5074>
  407ba0:	str	xzr, [sp, #152]
  407ba4:	cbnz	w28, 407998 <wcrtomb@plt+0x50c8>
  407ba8:	add	x19, x22, x19
  407bac:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  407bb0:	ldrb	w0, [x0, #3540]
  407bb4:	cmp	x23, #0x0
  407bb8:	cset	w2, ne  // ne = any
  407bbc:	eor	w1, w0, #0x1
  407bc0:	tst	w2, w1
  407bc4:	b.ne	4079d4 <wcrtomb@plt+0x5104>  // b.any
  407bc8:	ldrb	w1, [x25]
  407bcc:	cbnz	w1, 4079bc <wcrtomb@plt+0x50ec>
  407bd0:	cbz	w0, 407ac8 <wcrtomb@plt+0x51f8>
  407bd4:	ldr	x0, [sp, #152]
  407bd8:	cbnz	x0, 407b24 <wcrtomb@plt+0x5254>
  407bdc:	ldr	x0, [sp, #184]
  407be0:	sub	x2, x19, x0
  407be4:	ldr	w1, [sp, #116]
  407be8:	bl	4026a0 <memrchr@plt>
  407bec:	cbz	x0, 407bf8 <wcrtomb@plt+0x5328>
  407bf0:	add	x0, x0, #0x1
  407bf4:	str	x0, [sp, #184]
  407bf8:	mov	x2, x21
  407bfc:	mov	x1, x19
  407c00:	ldr	x0, [sp, #184]
  407c04:	bl	4097f0 <wcrtomb@plt+0x6f20>
  407c08:	cmp	x0, #0x0
  407c0c:	cset	w0, eq  // eq = none
  407c10:	b	407b38 <wcrtomb@plt+0x5268>
  407c14:	cbz	x0, 407c5c <wcrtomb@plt+0x538c>
  407c18:	stp	x29, x30, [sp, #-32]!
  407c1c:	mov	x29, sp
  407c20:	stp	x19, x20, [sp, #16]
  407c24:	mov	x19, x0
  407c28:	mov	x20, x1
  407c2c:	ldr	x0, [x0]
  407c30:	bl	407c14 <wcrtomb@plt+0x5344>
  407c34:	mov	x1, x20
  407c38:	ldr	x0, [x19, #8]
  407c3c:	bl	407c14 <wcrtomb@plt+0x5344>
  407c40:	ldr	x1, [x20]
  407c44:	ldr	x0, [x19, #16]
  407c48:	str	x0, [x1, #24]
  407c4c:	str	x0, [x20]
  407c50:	ldp	x19, x20, [sp, #16]
  407c54:	ldp	x29, x30, [sp], #32
  407c58:	ret
  407c5c:	ret
  407c60:	cbz	x0, 407d24 <wcrtomb@plt+0x5454>
  407c64:	stp	x29, x30, [sp, #-48]!
  407c68:	mov	x29, sp
  407c6c:	stp	x19, x20, [sp, #16]
  407c70:	stp	x21, x22, [sp, #32]
  407c74:	mov	x20, x0
  407c78:	mov	x19, x1
  407c7c:	mov	x21, x2
  407c80:	and	w22, w3, #0xff
  407c84:	mov	w3, w22
  407c88:	ldr	x0, [x0]
  407c8c:	bl	407c60 <wcrtomb@plt+0x5390>
  407c90:	mov	w3, w22
  407c94:	mov	x2, x21
  407c98:	mov	x1, x19
  407c9c:	ldr	x0, [x20, #8]
  407ca0:	bl	407c60 <wcrtomb@plt+0x5390>
  407ca4:	cbnz	x19, 407cc8 <wcrtomb@plt+0x53f8>
  407ca8:	ldr	x0, [x20, #16]
  407cac:	str	x21, [x0, #32]
  407cb0:	ldp	x19, x20, [sp, #16]
  407cb4:	ldp	x21, x22, [sp, #32]
  407cb8:	ldp	x29, x30, [sp], #48
  407cbc:	ret
  407cc0:	ldr	x19, [x19, #32]
  407cc4:	cbz	x19, 407ca8 <wcrtomb@plt+0x53d8>
  407cc8:	ldr	x3, [x19, #8]
  407ccc:	cbz	x3, 407cc0 <wcrtomb@plt+0x53f0>
  407cd0:	ldrb	w6, [x20, #24]
  407cd4:	ldrb	w5, [x3, #24]
  407cd8:	cmp	w6, w5
  407cdc:	b.eq	407cf4 <wcrtomb@plt+0x5424>  // b.none
  407ce0:	add	x4, x3, #0x8
  407ce4:	csel	x3, x4, x3, cs  // cs = hs, nlast
  407ce8:	ldr	x3, [x3]
  407cec:	cbnz	x3, 407cd4 <wcrtomb@plt+0x5404>
  407cf0:	b	407cc0 <wcrtomb@plt+0x53f0>
  407cf4:	ldr	x1, [x20, #16]
  407cf8:	ldr	x0, [x3, #16]
  407cfc:	str	x0, [x1, #32]
  407d00:	cbnz	w22, 407cb0 <wcrtomb@plt+0x53e0>
  407d04:	ldr	x0, [x0]
  407d08:	cbz	x0, 407cb0 <wcrtomb@plt+0x53e0>
  407d0c:	ldr	x0, [x20, #16]
  407d10:	ldr	x1, [x0]
  407d14:	cbnz	x1, 407cb0 <wcrtomb@plt+0x53e0>
  407d18:	mov	x1, #0xffffffffffffffff    	// #-1
  407d1c:	str	x1, [x0]
  407d20:	b	407cb0 <wcrtomb@plt+0x53e0>
  407d24:	ret
  407d28:	cbz	x0, 407d84 <wcrtomb@plt+0x54b4>
  407d2c:	stp	x29, x30, [sp, #-48]!
  407d30:	mov	x29, sp
  407d34:	stp	x19, x20, [sp, #16]
  407d38:	str	x21, [sp, #32]
  407d3c:	mov	x19, x0
  407d40:	mov	x21, x1
  407d44:	mov	x20, x2
  407d48:	ldr	x0, [x0]
  407d4c:	bl	407d28 <wcrtomb@plt+0x5458>
  407d50:	mov	x2, x20
  407d54:	mov	x1, x21
  407d58:	ldr	x0, [x19, #8]
  407d5c:	bl	407d28 <wcrtomb@plt+0x5458>
  407d60:	ldrb	w0, [x19, #24]
  407d64:	ldrb	w1, [x20, x0]
  407d68:	cmp	x1, x21
  407d6c:	b.le	407d74 <wcrtomb@plt+0x54a4>
  407d70:	strb	w21, [x20, x0]
  407d74:	ldp	x19, x20, [sp, #16]
  407d78:	ldr	x21, [sp, #32]
  407d7c:	ldp	x29, x30, [sp], #48
  407d80:	ret
  407d84:	ret
  407d88:	cbz	x1, 407dfc <wcrtomb@plt+0x552c>
  407d8c:	stp	x29, x30, [sp, #-32]!
  407d90:	mov	x29, sp
  407d94:	stp	x19, x20, [sp, #16]
  407d98:	mov	x19, x0
  407d9c:	mov	x20, x1
  407da0:	ldr	x1, [x1]
  407da4:	bl	407d88 <wcrtomb@plt+0x54b8>
  407da8:	ands	w0, w0, #0xff
  407dac:	b.eq	407df0 <wcrtomb@plt+0x5520>  // b.none
  407db0:	ldr	x1, [x20, #8]
  407db4:	mov	x0, x19
  407db8:	bl	407d88 <wcrtomb@plt+0x54b8>
  407dbc:	ands	w0, w0, #0xff
  407dc0:	b.eq	407df0 <wcrtomb@plt+0x5520>  // b.none
  407dc4:	cbz	x19, 407de8 <wcrtomb@plt+0x5518>
  407dc8:	ldrb	w2, [x20, #24]
  407dcc:	ldrb	w1, [x19, #24]
  407dd0:	cmp	w2, w1
  407dd4:	b.eq	407de8 <wcrtomb@plt+0x5518>  // b.none
  407dd8:	add	x0, x19, #0x8
  407ddc:	csel	x19, x0, x19, cs  // cs = hs, nlast
  407de0:	ldr	x19, [x19]
  407de4:	cbnz	x19, 407dcc <wcrtomb@plt+0x54fc>
  407de8:	cmp	x19, #0x0
  407dec:	cset	w0, ne  // ne = any
  407df0:	ldp	x19, x20, [sp, #16]
  407df4:	ldp	x29, x30, [sp], #32
  407df8:	ret
  407dfc:	mov	w0, #0x1                   	// #1
  407e00:	ret
  407e04:	cbz	x0, 407e48 <wcrtomb@plt+0x5578>
  407e08:	stp	x29, x30, [sp, #-32]!
  407e0c:	mov	x29, sp
  407e10:	stp	x19, x20, [sp, #16]
  407e14:	mov	x19, x0
  407e18:	mov	x20, x1
  407e1c:	ldr	x0, [x0]
  407e20:	bl	407e04 <wcrtomb@plt+0x5534>
  407e24:	mov	x1, x20
  407e28:	ldr	x0, [x19, #8]
  407e2c:	bl	407e04 <wcrtomb@plt+0x5534>
  407e30:	ldr	x1, [x19, #16]
  407e34:	ldrb	w0, [x19, #24]
  407e38:	str	x1, [x20, x0, lsl #3]
  407e3c:	ldp	x19, x20, [sp, #16]
  407e40:	ldp	x29, x30, [sp], #32
  407e44:	ret
  407e48:	ret
  407e4c:	mov	x4, x0
  407e50:	mov	x5, x2
  407e54:	add	x1, x0, x1
  407e58:	ldr	w2, [x2, #2452]
  407e5c:	tbnz	w2, #31, 407ea4 <wcrtomb@plt+0x55d4>
  407e60:	cmp	x4, x1
  407e64:	b.cs	407ecc <wcrtomb@plt+0x55fc>  // b.hs, b.nlast
  407e68:	ldrb	w0, [x4]
  407e6c:	add	x0, x5, x0, lsl #3
  407e70:	ldr	x0, [x0, #376]
  407e74:	cbnz	x0, 407ee4 <wcrtomb@plt+0x5614>
  407e78:	add	x4, x4, #0x1
  407e7c:	tst	x4, #0xf
  407e80:	b.ne	407e60 <wcrtomb@plt+0x5590>  // b.any
  407e84:	stp	x29, x30, [sp, #-16]!
  407e88:	mov	x29, sp
  407e8c:	sub	x3, x1, x4
  407e90:	ldr	w1, [x5, #2448]
  407e94:	mov	x0, x4
  407e98:	bl	411e30 <wcrtomb@plt+0xf560>
  407e9c:	ldp	x29, x30, [sp], #16
  407ea0:	ret
  407ea4:	cmp	x0, x1
  407ea8:	b.cs	407ed4 <wcrtomb@plt+0x5604>  // b.hs, b.nlast
  407eac:	ldrb	w0, [x4]
  407eb0:	add	x0, x5, x0, lsl #3
  407eb4:	ldr	x0, [x0, #376]
  407eb8:	cbnz	x0, 407edc <wcrtomb@plt+0x560c>
  407ebc:	add	x4, x4, #0x1
  407ec0:	cmp	x1, x4
  407ec4:	b.ne	407eac <wcrtomb@plt+0x55dc>  // b.any
  407ec8:	ret
  407ecc:	mov	x0, #0x0                   	// #0
  407ed0:	ret
  407ed4:	mov	x0, #0x0                   	// #0
  407ed8:	ret
  407edc:	mov	x0, x4
  407ee0:	ret
  407ee4:	mov	x0, x4
  407ee8:	ret
  407eec:	stp	x29, x30, [sp, #-80]!
  407ef0:	mov	x29, sp
  407ef4:	stp	x19, x20, [sp, #16]
  407ef8:	stp	x21, x22, [sp, #32]
  407efc:	stp	x23, x24, [sp, #48]
  407f00:	mov	x21, x0
  407f04:	mov	x20, x1
  407f08:	mov	x22, x3
  407f0c:	and	w24, w4, #0xff
  407f10:	ldr	x23, [x0, #2440]
  407f14:	cbz	x23, 408150 <wcrtomb@plt+0x5880>
  407f18:	ldr	x0, [x0, #104]
  407f1c:	cmp	x2, x0
  407f20:	b.lt	408348 <wcrtomb@plt+0x5a78>  // b.tstop
  407f24:	ldr	x4, [x21, #96]
  407f28:	add	x19, x1, x2
  407f2c:	ldr	x0, [x4]
  407f30:	cbnz	x0, 408020 <wcrtomb@plt+0x5750>
  407f34:	str	x25, [sp, #64]
  407f38:	ldr	w25, [x21, #2448]
  407f3c:	mov	x0, x1
  407f40:	tbnz	w25, #31, 407f80 <wcrtomb@plt+0x56b0>
  407f44:	mov	x2, x21
  407f48:	sub	x1, x19, x0
  407f4c:	bl	407e4c <wcrtomb@plt+0x557c>
  407f50:	cbz	x0, 408350 <wcrtomb@plt+0x5a80>
  407f54:	ldrb	w1, [x0], #1
  407f58:	ldrb	w1, [x23, x1]
  407f5c:	add	x1, x21, x1, lsl #3
  407f60:	ldr	x4, [x1, #376]
  407f64:	ldr	x1, [x4]
  407f68:	cbnz	x1, 408088 <wcrtomb@plt+0x57b8>
  407f6c:	cmp	x19, x0
  407f70:	b.hi	407fdc <wcrtomb@plt+0x570c>  // b.pmore
  407f74:	mov	x0, #0xffffffffffffffff    	// #-1
  407f78:	ldr	x25, [sp, #64]
  407f7c:	b	408074 <wcrtomb@plt+0x57a4>
  407f80:	ldrb	w1, [x0], #1
  407f84:	ldrb	w1, [x23, x1]
  407f88:	add	x1, x21, x1, lsl #3
  407f8c:	ldr	x4, [x1, #376]
  407f90:	cbnz	x4, 407f64 <wcrtomb@plt+0x5694>
  407f94:	cmp	x19, x0
  407f98:	b.hi	407f80 <wcrtomb@plt+0x56b0>  // b.pmore
  407f9c:	mov	x0, #0xffffffffffffffff    	// #-1
  407fa0:	ldr	x25, [sp, #64]
  407fa4:	b	408074 <wcrtomb@plt+0x57a4>
  407fa8:	add	x3, x21, w3, sxtw #3
  407fac:	ldr	x4, [x3, #376]
  407fb0:	cbnz	x4, 407fcc <wcrtomb@plt+0x56fc>
  407fb4:	cmp	x19, x0
  407fb8:	b.hi	407f40 <wcrtomb@plt+0x5670>  // b.pmore
  407fbc:	mov	x0, #0xffffffffffffffff    	// #-1
  407fc0:	ldr	x25, [sp, #64]
  407fc4:	b	408074 <wcrtomb@plt+0x57a4>
  407fc8:	ldr	x4, [x1, #16]
  407fcc:	ldr	x1, [x4]
  407fd0:	cbnz	x1, 408094 <wcrtomb@plt+0x57c4>
  407fd4:	cmp	x19, x0
  407fd8:	b.eq	40835c <wcrtomb@plt+0x5a8c>  // b.none
  407fdc:	mov	x5, x0
  407fe0:	ldrb	w1, [x0], #1
  407fe4:	ldrb	w3, [x23, x1]
  407fe8:	ldr	x1, [x4, #8]
  407fec:	ldrb	w6, [x1, #24]
  407ff0:	cmp	w3, w6
  407ff4:	b.eq	407fc8 <wcrtomb@plt+0x56f8>  // b.none
  407ff8:	add	x2, x1, #0x8
  407ffc:	csel	x1, x2, x1, cs  // cs = hs, nlast
  408000:	ldr	x1, [x1]
  408004:	cbnz	x1, 407fec <wcrtomb@plt+0x571c>
  408008:	ldr	x4, [x4, #32]
  40800c:	cbz	x4, 407fa8 <wcrtomb@plt+0x56d8>
  408010:	ldr	x1, [x4]
  408014:	cbnz	x1, 4080a0 <wcrtomb@plt+0x57d0>
  408018:	ldr	x1, [x4, #8]
  40801c:	b	407fec <wcrtomb@plt+0x571c>
  408020:	mov	x5, x1
  408024:	ldr	x0, [x4]
  408028:	cmn	x0, #0x1
  40802c:	b.ne	4080a8 <wcrtomb@plt+0x57d8>  // b.any
  408030:	mov	x3, x4
  408034:	ldr	x3, [x3, #32]
  408038:	ldr	x0, [x3]
  40803c:	cmn	x0, #0x1
  408040:	b.eq	408034 <wcrtomb@plt+0x5764>  // b.none
  408044:	ldr	x0, [x3, #40]
  408048:	sub	x0, x5, x0
  40804c:	cbz	w24, 408058 <wcrtomb@plt+0x5788>
  408050:	cmp	x19, x5
  408054:	b.hi	4080c4 <wcrtomb@plt+0x57f4>  // b.pmore
  408058:	ldr	x1, [x3]
  40805c:	lsr	x1, x1, #1
  408060:	str	x1, [x22]
  408064:	sub	x0, x0, x20
  408068:	str	x0, [x22, #8]
  40806c:	ldr	x1, [x3, #40]
  408070:	str	x1, [x22, #16]
  408074:	ldp	x19, x20, [sp, #16]
  408078:	ldp	x21, x22, [sp, #32]
  40807c:	ldp	x23, x24, [sp, #48]
  408080:	ldp	x29, x30, [sp], #80
  408084:	ret
  408088:	mov	x5, x0
  40808c:	ldr	x25, [sp, #64]
  408090:	b	408024 <wcrtomb@plt+0x5754>
  408094:	mov	x5, x0
  408098:	ldr	x25, [sp, #64]
  40809c:	b	408024 <wcrtomb@plt+0x5754>
  4080a0:	ldr	x25, [sp, #64]
  4080a4:	b	408024 <wcrtomb@plt+0x5754>
  4080a8:	mov	x3, x4
  4080ac:	b	408044 <wcrtomb@plt+0x5774>
  4080b0:	ldr	x4, [x2, #16]
  4080b4:	ldr	x1, [x4]
  4080b8:	cbnz	x1, 408110 <wcrtomb@plt+0x5840>
  4080bc:	cmp	x19, x5
  4080c0:	b.eq	408058 <wcrtomb@plt+0x5788>  // b.none
  4080c4:	ldrb	w1, [x5], #1
  4080c8:	ldrb	w6, [x23, x1]
  4080cc:	b	4080e8 <wcrtomb@plt+0x5818>
  4080d0:	ldr	x4, [x4, #32]
  4080d4:	cbz	x4, 408058 <wcrtomb@plt+0x5788>
  4080d8:	ldr	x2, [x3, #40]
  4080dc:	ldr	x1, [x4, #40]
  4080e0:	cmp	x2, x1
  4080e4:	b.gt	408058 <wcrtomb@plt+0x5788>
  4080e8:	ldr	x2, [x4, #8]
  4080ec:	cbz	x2, 4080d0 <wcrtomb@plt+0x5800>
  4080f0:	ldrb	w7, [x2, #24]
  4080f4:	cmp	w6, w7
  4080f8:	b.eq	4080b0 <wcrtomb@plt+0x57e0>  // b.none
  4080fc:	add	x1, x2, #0x8
  408100:	csel	x2, x1, x2, cs  // cs = hs, nlast
  408104:	ldr	x2, [x2]
  408108:	cbnz	x2, 4080f0 <wcrtomb@plt+0x5820>
  40810c:	b	4080d0 <wcrtomb@plt+0x5800>
  408110:	cmn	x1, #0x1
  408114:	b.ne	408148 <wcrtomb@plt+0x5878>  // b.any
  408118:	mov	x2, x4
  40811c:	ldr	x2, [x2, #32]
  408120:	ldr	x1, [x2]
  408124:	cmn	x1, #0x1
  408128:	b.eq	40811c <wcrtomb@plt+0x584c>  // b.none
  40812c:	ldr	x1, [x2, #40]
  408130:	sub	x1, x5, x1
  408134:	cmp	x0, x1
  408138:	csel	x6, x0, x1, cc  // cc = lo, ul, last
  40813c:	mov	x0, x6
  408140:	csel	x3, x3, x2, cc  // cc = lo, ul, last
  408144:	b	4080bc <wcrtomb@plt+0x57ec>
  408148:	mov	x2, x4
  40814c:	b	40812c <wcrtomb@plt+0x585c>
  408150:	ldr	x0, [x0, #104]
  408154:	cmp	x2, x0
  408158:	b.lt	408368 <wcrtomb@plt+0x5a98>  // b.tstop
  40815c:	ldr	x4, [x21, #96]
  408160:	add	x19, x1, x2
  408164:	ldr	x0, [x4]
  408168:	cbnz	x0, 40823c <wcrtomb@plt+0x596c>
  40816c:	ldr	w23, [x21, #2448]
  408170:	mov	x0, x1
  408174:	tbnz	w23, #31, 4081ac <wcrtomb@plt+0x58dc>
  408178:	mov	x2, x21
  40817c:	sub	x1, x19, x0
  408180:	bl	407e4c <wcrtomb@plt+0x557c>
  408184:	cbz	x0, 408370 <wcrtomb@plt+0x5aa0>
  408188:	ldrb	w1, [x0], #1
  40818c:	add	x1, x21, x1, lsl #3
  408190:	ldr	x4, [x1, #376]
  408194:	ldr	x1, [x4]
  408198:	cbnz	x1, 408294 <wcrtomb@plt+0x59c4>
  40819c:	cmp	x0, x19
  4081a0:	b.cc	4081fc <wcrtomb@plt+0x592c>  // b.lo, b.ul, b.last
  4081a4:	mov	x0, #0xffffffffffffffff    	// #-1
  4081a8:	b	408074 <wcrtomb@plt+0x57a4>
  4081ac:	ldrb	w1, [x0], #1
  4081b0:	add	x1, x21, x1, lsl #3
  4081b4:	ldr	x4, [x1, #376]
  4081b8:	cbnz	x4, 408194 <wcrtomb@plt+0x58c4>
  4081bc:	cmp	x19, x0
  4081c0:	b.hi	4081ac <wcrtomb@plt+0x58dc>  // b.pmore
  4081c4:	mov	x0, #0xffffffffffffffff    	// #-1
  4081c8:	b	408074 <wcrtomb@plt+0x57a4>
  4081cc:	add	x5, x21, w5, sxtw #3
  4081d0:	ldr	x4, [x5, #376]
  4081d4:	cbnz	x4, 4081ec <wcrtomb@plt+0x591c>
  4081d8:	cmp	x19, x0
  4081dc:	b.hi	408174 <wcrtomb@plt+0x58a4>  // b.pmore
  4081e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4081e4:	b	408074 <wcrtomb@plt+0x57a4>
  4081e8:	ldr	x4, [x1, #16]
  4081ec:	ldr	x1, [x4]
  4081f0:	cbnz	x1, 40829c <wcrtomb@plt+0x59cc>
  4081f4:	cmp	x19, x0
  4081f8:	b.eq	408378 <wcrtomb@plt+0x5aa8>  // b.none
  4081fc:	mov	x3, x0
  408200:	ldrb	w5, [x0], #1
  408204:	ldr	x1, [x4, #8]
  408208:	ldrb	w6, [x1, #24]
  40820c:	cmp	w5, w6
  408210:	b.eq	4081e8 <wcrtomb@plt+0x5918>  // b.none
  408214:	add	x2, x1, #0x8
  408218:	csel	x1, x2, x1, cs  // cs = hs, nlast
  40821c:	ldr	x1, [x1]
  408220:	cbnz	x1, 408208 <wcrtomb@plt+0x5938>
  408224:	ldr	x4, [x4, #32]
  408228:	cbz	x4, 4081cc <wcrtomb@plt+0x58fc>
  40822c:	ldr	x1, [x4]
  408230:	cbnz	x1, 408240 <wcrtomb@plt+0x5970>
  408234:	ldr	x1, [x4, #8]
  408238:	b	408208 <wcrtomb@plt+0x5938>
  40823c:	mov	x3, x1
  408240:	ldr	x0, [x4]
  408244:	cmn	x0, #0x1
  408248:	b.ne	4082a4 <wcrtomb@plt+0x59d4>  // b.any
  40824c:	mov	x2, x4
  408250:	ldr	x2, [x2, #32]
  408254:	ldr	x0, [x2]
  408258:	cmn	x0, #0x1
  40825c:	b.eq	408250 <wcrtomb@plt+0x5980>  // b.none
  408260:	ldr	x0, [x2, #40]
  408264:	sub	x0, x3, x0
  408268:	cbz	w24, 408274 <wcrtomb@plt+0x59a4>
  40826c:	cmp	x19, x3
  408270:	b.hi	4082c0 <wcrtomb@plt+0x59f0>  // b.pmore
  408274:	ldr	x1, [x2]
  408278:	lsr	x1, x1, #1
  40827c:	str	x1, [x22]
  408280:	sub	x0, x0, x20
  408284:	str	x0, [x22, #8]
  408288:	ldr	x1, [x2, #40]
  40828c:	str	x1, [x22, #16]
  408290:	b	408074 <wcrtomb@plt+0x57a4>
  408294:	mov	x3, x0
  408298:	b	408240 <wcrtomb@plt+0x5970>
  40829c:	mov	x3, x0
  4082a0:	b	408240 <wcrtomb@plt+0x5970>
  4082a4:	mov	x2, x4
  4082a8:	b	408260 <wcrtomb@plt+0x5990>
  4082ac:	ldr	x4, [x1, #16]
  4082b0:	ldr	x1, [x4]
  4082b4:	cbnz	x1, 408308 <wcrtomb@plt+0x5a38>
  4082b8:	cmp	x19, x3
  4082bc:	b.eq	408274 <wcrtomb@plt+0x59a4>  // b.none
  4082c0:	ldrb	w6, [x3], #1
  4082c4:	b	4082e0 <wcrtomb@plt+0x5a10>
  4082c8:	ldr	x4, [x4, #32]
  4082cc:	cbz	x4, 408274 <wcrtomb@plt+0x59a4>
  4082d0:	ldr	x5, [x2, #40]
  4082d4:	ldr	x1, [x4, #40]
  4082d8:	cmp	x5, x1
  4082dc:	b.gt	408274 <wcrtomb@plt+0x59a4>
  4082e0:	ldr	x1, [x4, #8]
  4082e4:	cbz	x1, 4082c8 <wcrtomb@plt+0x59f8>
  4082e8:	ldrb	w7, [x1, #24]
  4082ec:	cmp	w6, w7
  4082f0:	b.eq	4082ac <wcrtomb@plt+0x59dc>  // b.none
  4082f4:	add	x5, x1, #0x8
  4082f8:	csel	x1, x5, x1, cs  // cs = hs, nlast
  4082fc:	ldr	x1, [x1]
  408300:	cbnz	x1, 4082e8 <wcrtomb@plt+0x5a18>
  408304:	b	4082c8 <wcrtomb@plt+0x59f8>
  408308:	cmn	x1, #0x1
  40830c:	b.ne	408340 <wcrtomb@plt+0x5a70>  // b.any
  408310:	mov	x1, x4
  408314:	ldr	x1, [x1, #32]
  408318:	ldr	x5, [x1]
  40831c:	cmn	x5, #0x1
  408320:	b.eq	408314 <wcrtomb@plt+0x5a44>  // b.none
  408324:	ldr	x5, [x1, #40]
  408328:	sub	x5, x3, x5
  40832c:	cmp	x0, x5
  408330:	csel	x6, x0, x5, cc  // cc = lo, ul, last
  408334:	mov	x0, x6
  408338:	csel	x2, x2, x1, cc  // cc = lo, ul, last
  40833c:	b	4082b8 <wcrtomb@plt+0x59e8>
  408340:	mov	x1, x4
  408344:	b	408324 <wcrtomb@plt+0x5a54>
  408348:	mov	x0, #0xffffffffffffffff    	// #-1
  40834c:	b	408074 <wcrtomb@plt+0x57a4>
  408350:	mov	x0, #0xffffffffffffffff    	// #-1
  408354:	ldr	x25, [sp, #64]
  408358:	b	408074 <wcrtomb@plt+0x57a4>
  40835c:	mov	x0, #0xffffffffffffffff    	// #-1
  408360:	ldr	x25, [sp, #64]
  408364:	b	408074 <wcrtomb@plt+0x57a4>
  408368:	mov	x0, #0xffffffffffffffff    	// #-1
  40836c:	b	408074 <wcrtomb@plt+0x57a4>
  408370:	mov	x0, #0xffffffffffffffff    	// #-1
  408374:	b	408074 <wcrtomb@plt+0x57a4>
  408378:	mov	x0, #0xffffffffffffffff    	// #-1
  40837c:	b	408074 <wcrtomb@plt+0x57a4>
  408380:	stp	x29, x30, [sp, #-128]!
  408384:	mov	x29, sp
  408388:	stp	x21, x22, [sp, #32]
  40838c:	ldr	x21, [x0, #104]
  408390:	cbz	x21, 4086f4 <wcrtomb@plt+0x5e24>
  408394:	stp	x23, x24, [sp, #48]
  408398:	stp	x27, x28, [sp, #80]
  40839c:	mov	x23, x0
  4083a0:	mov	x28, x1
  4083a4:	mov	x24, x2
  4083a8:	cmp	x2, x21
  4083ac:	b.lt	408704 <wcrtomb@plt+0x5e34>  // b.tstop
  4083b0:	cmp	x21, #0x1
  4083b4:	b.eq	408430 <wcrtomb@plt+0x5b60>  // b.none
  4083b8:	stp	x19, x20, [sp, #16]
  4083bc:	stp	x25, x26, [sp, #64]
  4083c0:	ldr	x19, [x0, #2440]
  4083c4:	add	x22, x0, #0x78
  4083c8:	str	x21, [sp, #112]
  4083cc:	ldr	x20, [x0, #2424]
  4083d0:	add	x20, x20, x21
  4083d4:	add	x0, x1, x21
  4083d8:	ldrb	w25, [x23, #2448]
  4083dc:	ldrb	w26, [x23, #2456]
  4083e0:	mov	x1, #0xc                   	// #12
  4083e4:	mul	x2, x21, x1
  4083e8:	smulh	x1, x21, x1
  4083ec:	cmp	x1, x2, asr #63
  4083f0:	cset	x1, ne  // ne = any
  4083f4:	cmp	x2, x24
  4083f8:	cset	w2, lt  // lt = tstop
  4083fc:	and	w1, w1, #0x1
  408400:	eor	w1, w1, #0x1
  408404:	tst	w2, w1
  408408:	b.ne	408458 <wcrtomb@plt+0x5b88>  // b.any
  40840c:	add	x24, x28, x24
  408410:	ldurb	w1, [x0, #-1]
  408414:	ldrb	w6, [x22, x1]
  408418:	sub	x1, x24, x0
  40841c:	cmp	x1, w6, uxtb
  408420:	b.lt	40872c <wcrtomb@plt+0x5e5c>  // b.tstop
  408424:	mov	x8, x21
  408428:	mov	x2, #0x0                   	// #0
  40842c:	b	4086c4 <wcrtomb@plt+0x5df4>
  408430:	mov	x2, x0
  408434:	mov	x1, x24
  408438:	mov	x0, x28
  40843c:	bl	407e4c <wcrtomb@plt+0x557c>
  408440:	sub	x21, x0, x28
  408444:	cmp	x0, #0x0
  408448:	csinv	x21, x21, xzr, ne  // ne = any
  40844c:	ldp	x23, x24, [sp, #48]
  408450:	ldp	x27, x28, [sp, #80]
  408454:	b	4086f4 <wcrtomb@plt+0x5e24>
  408458:	add	x27, x21, x21, lsl #1
  40845c:	lsl	x27, x27, #2
  408460:	sub	x27, x27, x21
  408464:	sub	x27, x24, x27
  408468:	add	x27, x28, x27
  40846c:	cmp	x0, x27
  408470:	b.hi	40840c <wcrtomb@plt+0x5b3c>  // b.pmore
  408474:	str	x21, [sp, #104]
  408478:	add	x1, x28, x24
  40847c:	str	x1, [sp, #120]
  408480:	b	4085b4 <wcrtomb@plt+0x5ce4>
  408484:	ldurb	w2, [x1, #-1]
  408488:	ldrb	w2, [x22, x2]
  40848c:	add	x1, x1, x2
  408490:	ldurb	w2, [x1, #-1]
  408494:	ldrb	w2, [x22, x2]
  408498:	add	x1, x1, x2
  40849c:	ldurb	w2, [x1, #-1]
  4084a0:	ldrb	w2, [x22, x2]
  4084a4:	add	x1, x1, w2, uxtb
  4084a8:	cbz	w2, 4085f8 <wcrtomb@plt+0x5d28>
  4084ac:	ldurb	w2, [x1, #-1]
  4084b0:	ldrb	w2, [x22, x2]
  4084b4:	add	x1, x1, x2
  4084b8:	ldurb	w2, [x1, #-1]
  4084bc:	ldrb	w2, [x22, x2]
  4084c0:	add	x1, x1, x2
  4084c4:	sub	x0, x1, x0
  4084c8:	cmp	x0, #0x7f
  4084cc:	b.gt	408604 <wcrtomb@plt+0x5d34>
  4084d0:	sub	x0, x1, #0x1
  4084d4:	mov	x2, x23
  4084d8:	ldr	x1, [sp, #120]
  4084dc:	sub	x1, x1, x0
  4084e0:	bl	407e4c <wcrtomb@plt+0x557c>
  4084e4:	cbz	x0, 408714 <wcrtomb@plt+0x5e44>
  4084e8:	add	x1, x0, #0x1
  4084ec:	cmp	x1, x27
  4084f0:	b.cc	4085f8 <wcrtomb@plt+0x5d28>  // b.lo, b.ul, b.last
  4084f4:	mov	x0, x1
  4084f8:	b	40840c <wcrtomb@plt+0x5b3c>
  4084fc:	mov	x4, #0xfffffffffffffffd    	// #-3
  408500:	mov	x0, #0x2                   	// #2
  408504:	b	4087fc <wcrtomb@plt+0x5f2c>
  408508:	add	x2, x2, x6
  40850c:	add	x0, x2, #0x1
  408510:	cmp	x21, x0
  408514:	b.lt	408528 <wcrtomb@plt+0x5c58>  // b.tstop
  408518:	mvn	x2, x2
  40851c:	b	4087d0 <wcrtomb@plt+0x5f00>
  408520:	cmp	x0, x21
  408524:	b.le	408570 <wcrtomb@plt+0x5ca0>
  408528:	ldr	x0, [sp, #112]
  40852c:	sub	x1, x1, x0
  408530:	sub	x21, x1, x28
  408534:	ldp	x19, x20, [sp, #16]
  408538:	ldp	x23, x24, [sp, #48]
  40853c:	ldp	x25, x26, [sp, #64]
  408540:	ldp	x27, x28, [sp, #80]
  408544:	b	4086f4 <wcrtomb@plt+0x5e24>
  408548:	cmp	w25, w4
  40854c:	b.ne	4085a0 <wcrtomb@plt+0x5cd0>  // b.any
  408550:	sub	x6, x0, #0x1
  408554:	ldurb	w0, [x1, #-2]
  408558:	cbz	x19, 408564 <wcrtomb@plt+0x5c94>
  40855c:	and	x0, x0, #0xff
  408560:	ldrb	w0, [x19, x0]
  408564:	cmp	w26, w0
  408568:	b.eq	4084fc <wcrtomb@plt+0x5c2c>  // b.none
  40856c:	mov	x0, #0x2                   	// #2
  408570:	ldr	x2, [x23, #2432]
  408574:	add	x2, x2, x0, lsl #3
  408578:	ldur	x2, [x2, #-16]
  40857c:	add	x1, x1, x2
  408580:	cmp	x27, x1
  408584:	b.cc	408610 <wcrtomb@plt+0x5d40>  // b.lo, b.ul, b.last
  408588:	ldurb	w3, [x1, #-1]
  40858c:	mov	w4, w3
  408590:	cbz	x19, 408548 <wcrtomb@plt+0x5c78>
  408594:	and	x4, x3, #0xff
  408598:	ldrb	w4, [x19, x4]
  40859c:	b	408548 <wcrtomb@plt+0x5c78>
  4085a0:	and	x3, x3, #0xff
  4085a4:	ldrb	w0, [x22, x3]
  4085a8:	add	x0, x1, x0
  4085ac:	cmp	x27, x0
  4085b0:	b.cc	40860c <wcrtomb@plt+0x5d3c>  // b.lo, b.ul, b.last
  4085b4:	ldurb	w1, [x0, #-1]
  4085b8:	ldrb	w1, [x22, x1]
  4085bc:	add	x1, x0, x1
  4085c0:	ldurb	w2, [x1, #-1]
  4085c4:	ldrb	w2, [x22, x2]
  4085c8:	add	x1, x1, w2, uxtb
  4085cc:	cbz	w2, 4085f8 <wcrtomb@plt+0x5d28>
  4085d0:	ldurb	w2, [x1, #-1]
  4085d4:	ldrb	w2, [x22, x2]
  4085d8:	add	x1, x1, x2
  4085dc:	ldurb	w2, [x1, #-1]
  4085e0:	ldrb	w2, [x22, x2]
  4085e4:	add	x1, x1, x2
  4085e8:	ldurb	w2, [x1, #-1]
  4085ec:	ldrb	w2, [x22, x2]
  4085f0:	add	x1, x1, w2, uxtb
  4085f4:	cbnz	w2, 408484 <wcrtomb@plt+0x5bb4>
  4085f8:	ldr	x2, [sp, #104]
  4085fc:	mov	x6, #0x0                   	// #0
  408600:	b	408554 <wcrtomb@plt+0x5c84>
  408604:	mov	x0, x1
  408608:	b	4085ac <wcrtomb@plt+0x5cdc>
  40860c:	mov	x1, x0
  408610:	mov	x0, x1
  408614:	b	40840c <wcrtomb@plt+0x5b3c>
  408618:	mov	x4, #0xfffffffffffffffd    	// #-3
  40861c:	mov	x1, #0x2                   	// #2
  408620:	b	40878c <wcrtomb@plt+0x5ebc>
  408624:	add	x3, x3, x9
  408628:	add	x1, x3, #0x1
  40862c:	cmp	x21, x1
  408630:	b.lt	408644 <wcrtomb@plt+0x5d74>  // b.tstop
  408634:	mvn	x3, x3
  408638:	b	408760 <wcrtomb@plt+0x5e90>
  40863c:	cmp	x21, x1
  408640:	b.ge	40868c <wcrtomb@plt+0x5dbc>  // b.tcont
  408644:	ldr	x1, [sp, #112]
  408648:	sub	x0, x0, x1
  40864c:	sub	x21, x0, x28
  408650:	ldp	x19, x20, [sp, #16]
  408654:	ldp	x23, x24, [sp, #48]
  408658:	ldp	x25, x26, [sp, #64]
  40865c:	ldp	x27, x28, [sp, #80]
  408660:	b	4086f4 <wcrtomb@plt+0x5e24>
  408664:	cmp	w25, w4
  408668:	b.ne	4086b8 <wcrtomb@plt+0x5de8>  // b.any
  40866c:	sub	x9, x1, #0x1
  408670:	ldurb	w1, [x0, #-2]
  408674:	cbz	x19, 408680 <wcrtomb@plt+0x5db0>
  408678:	and	x1, x1, #0xff
  40867c:	ldrb	w1, [x19, x1]
  408680:	cmp	w26, w1
  408684:	b.eq	408618 <wcrtomb@plt+0x5d48>  // b.none
  408688:	mov	x1, #0x2                   	// #2
  40868c:	ldr	x3, [x23, #2432]
  408690:	add	x3, x3, x1, lsl #3
  408694:	ldur	x3, [x3, #-16]
  408698:	add	x0, x0, x3
  40869c:	cmp	x24, x0
  4086a0:	b.cc	4086b8 <wcrtomb@plt+0x5de8>  // b.lo, b.ul, b.last
  4086a4:	ldurb	w4, [x0, #-1]
  4086a8:	cbz	x19, 408664 <wcrtomb@plt+0x5d94>
  4086ac:	and	x4, x4, #0xff
  4086b0:	ldrb	w4, [x19, x4]
  4086b4:	b	408664 <wcrtomb@plt+0x5d94>
  4086b8:	sub	x1, x24, x0
  4086bc:	cmp	x1, w6, sxtw
  4086c0:	b.lt	4086e0 <wcrtomb@plt+0x5e10>  // b.tstop
  4086c4:	add	x0, x0, w6, sxtw
  4086c8:	ldurb	w1, [x0, #-1]
  4086cc:	ldrb	w6, [x22, x1]
  4086d0:	cbnz	w6, 4086b8 <wcrtomb@plt+0x5de8>
  4086d4:	mov	x3, x8
  4086d8:	mov	x9, x2
  4086dc:	b	408670 <wcrtomb@plt+0x5da0>
  4086e0:	mov	x21, #0xffffffffffffffff    	// #-1
  4086e4:	ldp	x19, x20, [sp, #16]
  4086e8:	ldp	x23, x24, [sp, #48]
  4086ec:	ldp	x25, x26, [sp, #64]
  4086f0:	ldp	x27, x28, [sp, #80]
  4086f4:	mov	x0, x21
  4086f8:	ldp	x21, x22, [sp, #32]
  4086fc:	ldp	x29, x30, [sp], #128
  408700:	ret
  408704:	mov	x21, #0xffffffffffffffff    	// #-1
  408708:	ldp	x23, x24, [sp, #48]
  40870c:	ldp	x27, x28, [sp, #80]
  408710:	b	4086f4 <wcrtomb@plt+0x5e24>
  408714:	mov	x21, #0xffffffffffffffff    	// #-1
  408718:	ldp	x19, x20, [sp, #16]
  40871c:	ldp	x23, x24, [sp, #48]
  408720:	ldp	x25, x26, [sp, #64]
  408724:	ldp	x27, x28, [sp, #80]
  408728:	b	4086f4 <wcrtomb@plt+0x5e24>
  40872c:	mov	x21, #0xffffffffffffffff    	// #-1
  408730:	ldp	x19, x20, [sp, #16]
  408734:	ldp	x23, x24, [sp, #48]
  408738:	ldp	x25, x26, [sp, #64]
  40873c:	ldp	x27, x28, [sp, #80]
  408740:	b	4086f4 <wcrtomb@plt+0x5e24>
  408744:	ldrb	w5, [x20, x3]
  408748:	cmp	w4, w5
  40874c:	b.ne	40863c <wcrtomb@plt+0x5d6c>  // b.any
  408750:	add	x1, x1, #0x1
  408754:	sub	x3, x3, #0x1
  408758:	cmp	x21, x1
  40875c:	b.lt	408644 <wcrtomb@plt+0x5d74>  // b.tstop
  408760:	ldrb	w4, [x0, x3]
  408764:	cbz	x19, 408744 <wcrtomb@plt+0x5e74>
  408768:	and	x4, x4, #0xff
  40876c:	ldrb	w4, [x19, x4]
  408770:	ldrb	w5, [x20, x3]
  408774:	ldrb	w5, [x19, x5]
  408778:	b	408748 <wcrtomb@plt+0x5e78>
  40877c:	ldrb	w7, [x20, x4]
  408780:	sub	x4, x4, #0x1
  408784:	cmp	w7, w5
  408788:	b.ne	40868c <wcrtomb@plt+0x5dbc>  // b.any
  40878c:	add	x1, x1, #0x1
  408790:	cmp	x1, x3
  408794:	b.gt	408624 <wcrtomb@plt+0x5d54>
  408798:	ldrb	w5, [x0, x4]
  40879c:	cbz	x19, 40877c <wcrtomb@plt+0x5eac>
  4087a0:	and	x5, x5, #0xff
  4087a4:	ldrb	w5, [x19, x5]
  4087a8:	ldrb	w7, [x20, x4]
  4087ac:	ldrb	w7, [x19, x7]
  4087b0:	b	408780 <wcrtomb@plt+0x5eb0>
  4087b4:	ldrb	w4, [x20, x2]
  4087b8:	cmp	w3, w4
  4087bc:	b.ne	408520 <wcrtomb@plt+0x5c50>  // b.any
  4087c0:	add	x0, x0, #0x1
  4087c4:	sub	x2, x2, #0x1
  4087c8:	cmp	x21, x0
  4087cc:	b.lt	408528 <wcrtomb@plt+0x5c58>  // b.tstop
  4087d0:	ldrb	w3, [x1, x2]
  4087d4:	cbz	x19, 4087b4 <wcrtomb@plt+0x5ee4>
  4087d8:	and	x3, x3, #0xff
  4087dc:	ldrb	w3, [x19, x3]
  4087e0:	ldrb	w4, [x20, x2]
  4087e4:	ldrb	w4, [x19, x4]
  4087e8:	b	4087b8 <wcrtomb@plt+0x5ee8>
  4087ec:	ldrb	w5, [x20, x4]
  4087f0:	sub	x4, x4, #0x1
  4087f4:	cmp	w5, w3
  4087f8:	b.ne	408570 <wcrtomb@plt+0x5ca0>  // b.any
  4087fc:	add	x0, x0, #0x1
  408800:	cmp	x0, x2
  408804:	b.gt	408508 <wcrtomb@plt+0x5c38>
  408808:	ldrb	w3, [x1, x4]
  40880c:	cbz	x19, 4087ec <wcrtomb@plt+0x5f1c>
  408810:	and	x3, x3, #0xff
  408814:	ldrb	w3, [x19, x3]
  408818:	ldrb	w5, [x20, x4]
  40881c:	ldrb	w5, [x19, x5]
  408820:	b	4087f0 <wcrtomb@plt+0x5f20>
  408824:	stp	x29, x30, [sp, #-32]!
  408828:	mov	x29, sp
  40882c:	stp	x19, x20, [sp, #16]
  408830:	mov	x19, x0
  408834:	mov	x20, x3
  408838:	ldr	x0, [x0, #2440]
  40883c:	cbz	x0, 408868 <wcrtomb@plt+0x5f98>
  408840:	mov	x0, x19
  408844:	bl	408380 <wcrtomb@plt+0x5ab0>
  408848:	tbnz	x0, #63, 40885c <wcrtomb@plt+0x5f8c>
  40884c:	str	xzr, [x20]
  408850:	str	x0, [x20, #8]
  408854:	ldr	x1, [x19, #104]
  408858:	str	x1, [x20, #16]
  40885c:	ldp	x19, x20, [sp, #16]
  408860:	ldp	x29, x30, [sp], #32
  408864:	ret
  408868:	mov	x0, x19
  40886c:	bl	408380 <wcrtomb@plt+0x5ab0>
  408870:	b	408848 <wcrtomb@plt+0x5f78>
  408874:	stp	x29, x30, [sp, #-32]!
  408878:	mov	x29, sp
  40887c:	stp	x19, x20, [sp, #16]
  408880:	mov	x20, x0
  408884:	mov	x0, #0x9a8                 	// #2472
  408888:	bl	413fec <wcrtomb@plt+0x1171c>
  40888c:	mov	x19, x0
  408890:	adrp	x4, 402000 <mbrtowc@plt-0x250>
  408894:	add	x4, x4, #0x660
  408898:	adrp	x3, 413000 <wcrtomb@plt+0x10730>
  40889c:	add	x3, x3, #0xfec
  4088a0:	mov	x2, #0x0                   	// #0
  4088a4:	mov	x1, #0x0                   	// #0
  4088a8:	bl	416bc4 <_obstack_begin@@Base>
  4088ac:	str	xzr, [x19, #88]
  4088b0:	ldr	x0, [x19, #32]
  4088b4:	ldr	x1, [x19, #24]
  4088b8:	sub	x0, x0, x1
  4088bc:	cmp	x0, #0x3f
  4088c0:	b.ls	408970 <wcrtomb@plt+0x60a0>  // b.plast
  4088c4:	ldr	x2, [x19, #24]
  4088c8:	add	x2, x2, #0x40
  4088cc:	ldr	x0, [x19, #16]
  4088d0:	cmp	x2, x0
  4088d4:	b.eq	408980 <wcrtomb@plt+0x60b0>  // b.none
  4088d8:	ldr	x1, [x19, #48]
  4088dc:	add	x2, x2, x1
  4088e0:	bic	x1, x2, x1
  4088e4:	ldr	x2, [x19, #8]
  4088e8:	ldr	x3, [x19, #32]
  4088ec:	sub	x4, x1, x2
  4088f0:	sub	x2, x3, x2
  4088f4:	cmp	x4, x2
  4088f8:	csel	x1, x1, x3, ls  // ls = plast
  4088fc:	str	x1, [x19, #24]
  408900:	str	x1, [x19, #16]
  408904:	str	x0, [x19, #96]
  408908:	str	xzr, [x0]
  40890c:	ldr	x0, [x19, #96]
  408910:	str	xzr, [x0, #8]
  408914:	ldr	x0, [x19, #96]
  408918:	str	xzr, [x0, #16]
  40891c:	ldr	x0, [x19, #96]
  408920:	str	xzr, [x0, #24]
  408924:	ldr	x0, [x19, #96]
  408928:	str	xzr, [x0, #32]
  40892c:	ldr	x0, [x19, #96]
  408930:	str	xzr, [x0, #40]
  408934:	ldr	x0, [x19, #96]
  408938:	str	xzr, [x0, #48]
  40893c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  408940:	str	x0, [x19, #104]
  408944:	mov	x0, #0xffffffffffffffff    	// #-1
  408948:	str	x0, [x19, #112]
  40894c:	str	xzr, [x19, #2424]
  408950:	str	x20, [x19, #2440]
  408954:	adrp	x0, 407000 <wcrtomb@plt+0x4730>
  408958:	add	x0, x0, #0xeec
  40895c:	str	x0, [x19, #2464]
  408960:	mov	x0, x19
  408964:	ldp	x19, x20, [sp, #16]
  408968:	ldp	x29, x30, [sp], #32
  40896c:	ret
  408970:	mov	x1, #0x40                  	// #64
  408974:	mov	x0, x19
  408978:	bl	416c18 <_obstack_newchunk@@Base>
  40897c:	b	4088c4 <wcrtomb@plt+0x5ff4>
  408980:	ldrb	w1, [x19, #80]
  408984:	orr	w1, w1, #0x2
  408988:	strb	w1, [x19, #80]
  40898c:	b	4088d8 <wcrtomb@plt+0x6008>
  408990:	stp	x29, x30, [sp, #-256]!
  408994:	mov	x29, sp
  408998:	stp	x23, x24, [sp, #48]
  40899c:	stp	x25, x26, [sp, #64]
  4089a0:	stp	x27, x28, [sp, #80]
  4089a4:	mov	x25, x0
  4089a8:	mov	x24, x1
  4089ac:	ldr	x27, [x0, #96]
  4089b0:	ldr	x28, [x0, #2440]
  4089b4:	ldr	x3, [x0, #2464]
  4089b8:	str	x3, [sp, #96]
  4089bc:	add	x1, x1, x2
  4089c0:	adrp	x0, 408000 <wcrtomb@plt+0x5730>
  4089c4:	add	x0, x0, #0x824
  4089c8:	cmp	x3, x0
  4089cc:	csel	x24, x1, x24, eq  // eq = none
  4089d0:	cbz	x2, 408c18 <wcrtomb@plt+0x6348>
  4089d4:	stp	x19, x20, [sp, #16]
  4089d8:	stp	x21, x22, [sp, #32]
  4089dc:	sub	x26, x2, #0x1
  4089e0:	adrp	x0, 408000 <wcrtomb@plt+0x5730>
  4089e4:	add	x0, x0, #0x824
  4089e8:	str	x0, [sp, #104]
  4089ec:	add	x22, sp, #0xa0
  4089f0:	add	x23, sp, #0x70
  4089f4:	b	408dd4 <wcrtomb@plt+0x6504>
  4089f8:	ldurb	w20, [x24, #-1]
  4089fc:	sub	x24, x24, #0x1
  408a00:	b	408de8 <wcrtomb@plt+0x6518>
  408a04:	mov	x21, x0
  408a08:	add	x1, x23, x0, lsl #2
  408a0c:	stur	w3, [x1, #-4]
  408a10:	ldr	x19, [x19, #8]
  408a14:	add	x0, x0, #0x1
  408a18:	cbz	x19, 408c78 <wcrtomb@plt+0x63a8>
  408a1c:	ldrb	w1, [x19, #24]
  408a20:	cmp	w1, w20
  408a24:	b.eq	408dc4 <wcrtomb@plt+0x64f4>  // b.none
  408a28:	add	x2, x22, x0, lsl #3
  408a2c:	stur	x19, [x2, #-8]
  408a30:	b.ls	408a04 <wcrtomb@plt+0x6134>  // b.plast
  408a34:	mov	x21, x0
  408a38:	add	x1, x23, x0, lsl #2
  408a3c:	stur	wzr, [x1, #-4]
  408a40:	ldr	x19, [x19]
  408a44:	b	408a14 <wcrtomb@plt+0x6144>
  408a48:	mov	x1, #0x20                  	// #32
  408a4c:	mov	x0, x25
  408a50:	bl	416c18 <_obstack_newchunk@@Base>
  408a54:	b	408c8c <wcrtomb@plt+0x63bc>
  408a58:	ldrb	w0, [x25, #80]
  408a5c:	orr	w0, w0, #0x2
  408a60:	strb	w0, [x25, #80]
  408a64:	b	408ca0 <wcrtomb@plt+0x63d0>
  408a68:	mov	x1, #0x40                  	// #64
  408a6c:	mov	x0, x25
  408a70:	bl	416c18 <_obstack_newchunk@@Base>
  408a74:	b	408ce8 <wcrtomb@plt+0x6418>
  408a78:	ldrb	w0, [x25, #80]
  408a7c:	orr	w0, w0, #0x2
  408a80:	strb	w0, [x25, #80]
  408a84:	b	408cfc <wcrtomb@plt+0x642c>
  408a88:	ldr	x1, [x22, x0, lsl #3]
  408a8c:	str	x19, [x1, #8]
  408a90:	b	408d84 <wcrtomb@plt+0x64b4>
  408a94:	cbz	x0, 408dc4 <wcrtomb@plt+0x64f4>
  408a98:	ldr	w1, [x23, x0, lsl #2]
  408a9c:	cbnz	w1, 408b30 <wcrtomb@plt+0x6260>
  408aa0:	ldr	x2, [x22, x0, lsl #3]
  408aa4:	ldrb	w1, [x2, #25]
  408aa8:	sub	w1, w1, #0x1
  408aac:	and	w1, w1, #0xff
  408ab0:	strb	w1, [x2, #25]
  408ab4:	cbz	w1, 408dc4 <wcrtomb@plt+0x64f4>
  408ab8:	ldr	x2, [x22, x0, lsl #3]
  408abc:	ldrb	w1, [x2, #25]
  408ac0:	cmp	w1, #0x2
  408ac4:	b.ne	408b54 <wcrtomb@plt+0x6284>  // b.any
  408ac8:	add	x1, x0, #0x1
  408acc:	ldr	w1, [x23, x1, lsl #2]
  408ad0:	cbnz	w1, 408bd8 <wcrtomb@plt+0x6308>
  408ad4:	ldr	x3, [x2, #8]
  408ad8:	ldr	x1, [x3]
  408adc:	ldr	x5, [x1]
  408ae0:	ldr	x4, [x1, #8]
  408ae4:	str	x2, [x1]
  408ae8:	str	x5, [x2, #8]
  408aec:	str	x3, [x1, #8]
  408af0:	str	x4, [x3]
  408af4:	ldrb	w4, [x1, #25]
  408af8:	cmp	w4, #0x1
  408afc:	csetm	w4, eq  // eq = none
  408b00:	strb	w4, [x2, #25]
  408b04:	ldrb	w2, [x1, #25]
  408b08:	cmp	w2, #0xff
  408b0c:	cset	w2, eq  // eq = none
  408b10:	strb	w2, [x3, #25]
  408b14:	strb	wzr, [x1, #25]
  408b18:	sub	x0, x0, #0x1
  408b1c:	ldr	w2, [x23, x0, lsl #2]
  408b20:	cbnz	w2, 408c04 <wcrtomb@plt+0x6334>
  408b24:	ldr	x0, [x22, x0, lsl #3]
  408b28:	str	x1, [x0]
  408b2c:	b	408dc4 <wcrtomb@plt+0x64f4>
  408b30:	cmp	w1, #0x1
  408b34:	b.ne	408dc4 <wcrtomb@plt+0x64f4>  // b.any
  408b38:	ldr	x2, [x22, x0, lsl #3]
  408b3c:	ldrb	w1, [x2, #25]
  408b40:	add	w1, w1, #0x1
  408b44:	and	w1, w1, #0xff
  408b48:	strb	w1, [x2, #25]
  408b4c:	cbz	w1, 408dc4 <wcrtomb@plt+0x64f4>
  408b50:	b	408ab8 <wcrtomb@plt+0x61e8>
  408b54:	cmp	w1, #0xfe
  408b58:	b.ne	408c00 <wcrtomb@plt+0x6330>  // b.any
  408b5c:	add	x1, x0, #0x1
  408b60:	ldr	w1, [x23, x1, lsl #2]
  408b64:	cbnz	w1, 408b84 <wcrtomb@plt+0x62b4>
  408b68:	ldr	x1, [x2]
  408b6c:	ldr	x3, [x1, #8]
  408b70:	str	x2, [x1, #8]
  408b74:	str	x3, [x2]
  408b78:	strb	wzr, [x2, #25]
  408b7c:	strb	wzr, [x1, #25]
  408b80:	b	408b18 <wcrtomb@plt+0x6248>
  408b84:	cmp	w1, #0x1
  408b88:	b.ne	408bd4 <wcrtomb@plt+0x6304>  // b.any
  408b8c:	ldr	x3, [x2]
  408b90:	ldr	x1, [x3, #8]
  408b94:	ldr	x4, [x1, #8]
  408b98:	ldr	x5, [x1]
  408b9c:	str	x3, [x1]
  408ba0:	str	x5, [x3, #8]
  408ba4:	str	x2, [x1, #8]
  408ba8:	str	x4, [x2]
  408bac:	ldrb	w4, [x1, #25]
  408bb0:	cmp	w4, #0x1
  408bb4:	csetm	w4, eq  // eq = none
  408bb8:	strb	w4, [x3, #25]
  408bbc:	ldrb	w3, [x1, #25]
  408bc0:	cmp	w3, #0xff
  408bc4:	cset	w3, eq  // eq = none
  408bc8:	strb	w3, [x2, #25]
  408bcc:	strb	wzr, [x1, #25]
  408bd0:	b	408b18 <wcrtomb@plt+0x6248>
  408bd4:	bl	4025a0 <abort@plt>
  408bd8:	cmp	w1, #0x1
  408bdc:	b.ne	408bfc <wcrtomb@plt+0x632c>  // b.any
  408be0:	ldr	x1, [x2, #8]
  408be4:	ldr	x3, [x1]
  408be8:	str	x2, [x1]
  408bec:	str	x3, [x2, #8]
  408bf0:	strb	wzr, [x2, #25]
  408bf4:	strb	wzr, [x1, #25]
  408bf8:	b	408b18 <wcrtomb@plt+0x6248>
  408bfc:	bl	4025a0 <abort@plt>
  408c00:	bl	4025a0 <abort@plt>
  408c04:	ldr	x0, [x22, x0, lsl #3]
  408c08:	str	x1, [x0, #8]
  408c0c:	b	408dc4 <wcrtomb@plt+0x64f4>
  408c10:	ldp	x19, x20, [sp, #16]
  408c14:	ldp	x21, x22, [sp, #32]
  408c18:	ldr	x0, [x27]
  408c1c:	cbnz	x0, 408c30 <wcrtomb@plt+0x6360>
  408c20:	ldr	x0, [x25, #88]
  408c24:	lsl	x0, x0, #1
  408c28:	add	x0, x0, #0x1
  408c2c:	str	x0, [x27]
  408c30:	ldr	x0, [x25, #88]
  408c34:	add	x0, x0, #0x1
  408c38:	str	x0, [x25, #88]
  408c3c:	ldr	x0, [x27, #40]
  408c40:	ldr	x1, [x25, #104]
  408c44:	cmp	x0, x1
  408c48:	b.ge	408c50 <wcrtomb@plt+0x6380>  // b.tcont
  408c4c:	str	x0, [x25, #104]
  408c50:	ldr	x0, [x27, #40]
  408c54:	ldr	x1, [x25, #112]
  408c58:	cmp	x0, x1
  408c5c:	b.le	408c64 <wcrtomb@plt+0x6394>
  408c60:	str	x0, [x25, #112]
  408c64:	ldp	x23, x24, [sp, #48]
  408c68:	ldp	x25, x26, [sp, #64]
  408c6c:	ldp	x27, x28, [sp, #80]
  408c70:	ldp	x29, x30, [sp], #256
  408c74:	ret
  408c78:	ldr	x0, [x25, #32]
  408c7c:	ldr	x1, [x25, #24]
  408c80:	sub	x0, x0, x1
  408c84:	cmp	x0, #0x1f
  408c88:	b.ls	408a48 <wcrtomb@plt+0x6178>  // b.plast
  408c8c:	ldr	x1, [x25, #24]
  408c90:	add	x1, x1, #0x20
  408c94:	ldr	x19, [x25, #16]
  408c98:	cmp	x1, x19
  408c9c:	b.eq	408a58 <wcrtomb@plt+0x6188>  // b.none
  408ca0:	ldr	x0, [x25, #48]
  408ca4:	add	x1, x1, x0
  408ca8:	bic	x0, x1, x0
  408cac:	ldr	x1, [x25, #8]
  408cb0:	ldr	x2, [x25, #32]
  408cb4:	sub	x3, x0, x1
  408cb8:	sub	x1, x2, x1
  408cbc:	cmp	x3, x1
  408cc0:	csel	x0, x0, x2, ls  // ls = plast
  408cc4:	str	x0, [x25, #24]
  408cc8:	str	x0, [x25, #16]
  408ccc:	str	xzr, [x19]
  408cd0:	str	xzr, [x19, #8]
  408cd4:	ldr	x0, [x25, #32]
  408cd8:	ldr	x1, [x25, #24]
  408cdc:	sub	x0, x0, x1
  408ce0:	cmp	x0, #0x3f
  408ce4:	b.ls	408a68 <wcrtomb@plt+0x6198>  // b.plast
  408ce8:	ldr	x1, [x25, #24]
  408cec:	add	x1, x1, #0x40
  408cf0:	ldr	x2, [x25, #16]
  408cf4:	cmp	x1, x2
  408cf8:	b.eq	408a78 <wcrtomb@plt+0x61a8>  // b.none
  408cfc:	ldr	x0, [x25, #48]
  408d00:	add	x1, x1, x0
  408d04:	bic	x0, x1, x0
  408d08:	ldr	x1, [x25, #8]
  408d0c:	ldr	x3, [x25, #32]
  408d10:	sub	x4, x0, x1
  408d14:	sub	x1, x3, x1
  408d18:	cmp	x4, x1
  408d1c:	csel	x0, x0, x3, ls  // ls = plast
  408d20:	str	x0, [x25, #24]
  408d24:	str	x0, [x25, #16]
  408d28:	str	x2, [x19, #16]
  408d2c:	str	xzr, [x2]
  408d30:	ldr	x0, [x19, #16]
  408d34:	str	xzr, [x0, #8]
  408d38:	ldr	x0, [x19, #16]
  408d3c:	str	x27, [x0, #16]
  408d40:	ldr	x0, [x19, #16]
  408d44:	str	xzr, [x0, #24]
  408d48:	ldr	x0, [x19, #16]
  408d4c:	str	xzr, [x0, #32]
  408d50:	ldr	x1, [x19, #16]
  408d54:	ldr	x0, [x27, #40]
  408d58:	add	x0, x0, #0x1
  408d5c:	str	x0, [x1, #40]
  408d60:	ldr	x0, [x19, #16]
  408d64:	str	xzr, [x0, #48]
  408d68:	strb	w20, [x19, #24]
  408d6c:	strb	wzr, [x19, #25]
  408d70:	sub	x0, x21, #0x1
  408d74:	ldr	w1, [x23, x0, lsl #2]
  408d78:	cbnz	w1, 408a88 <wcrtomb@plt+0x61b8>
  408d7c:	ldr	x1, [x22, x0, lsl #3]
  408d80:	str	x19, [x1]
  408d84:	cbz	x0, 408dc4 <wcrtomb@plt+0x64f4>
  408d88:	sub	x21, x21, #0x2
  408d8c:	mov	w4, #0xff                  	// #255
  408d90:	mov	w3, #0x1                   	// #1
  408d94:	add	x1, x22, x21, lsl #3
  408d98:	ldr	x1, [x1, #8]
  408d9c:	ldrb	w2, [x1, #25]
  408da0:	cbnz	w2, 408a94 <wcrtomb@plt+0x61c4>
  408da4:	add	x2, x23, x21, lsl #2
  408da8:	ldr	w2, [x2, #4]
  408dac:	cmp	w2, #0x0
  408db0:	csel	w2, w4, w3, eq  // eq = none
  408db4:	strb	w2, [x1, #25]
  408db8:	sub	x21, x21, #0x1
  408dbc:	subs	x0, x0, #0x1
  408dc0:	b.ne	408d94 <wcrtomb@plt+0x64c4>  // b.any
  408dc4:	ldr	x27, [x19, #16]
  408dc8:	sub	x26, x26, #0x1
  408dcc:	cmn	x26, #0x1
  408dd0:	b.eq	408c10 <wcrtomb@plt+0x6340>  // b.none
  408dd4:	ldr	x0, [sp, #96]
  408dd8:	ldr	x1, [sp, #104]
  408ddc:	cmp	x0, x1
  408de0:	b.eq	4089f8 <wcrtomb@plt+0x6128>  // b.none
  408de4:	ldrb	w20, [x24], #1
  408de8:	cbz	x28, 408df4 <wcrtomb@plt+0x6524>
  408dec:	and	x20, x20, #0xff
  408df0:	ldrb	w20, [x28, x20]
  408df4:	mov	x0, x27
  408df8:	ldr	x19, [x0, #8]!
  408dfc:	str	x0, [sp, #160]
  408e00:	str	wzr, [sp, #112]
  408e04:	mov	x0, #0x2                   	// #2
  408e08:	mov	w3, #0x1                   	// #1
  408e0c:	mov	x21, #0x1                   	// #1
  408e10:	cbnz	x19, 408a1c <wcrtomb@plt+0x614c>
  408e14:	b	408c78 <wcrtomb@plt+0x63a8>
  408e18:	ldr	x0, [x0, #88]
  408e1c:	ret
  408e20:	sub	sp, sp, #0x960
  408e24:	stp	x29, x30, [sp]
  408e28:	mov	x29, sp
  408e2c:	stp	x19, x20, [sp, #16]
  408e30:	stp	x21, x22, [sp, #32]
  408e34:	stp	x23, x24, [sp, #48]
  408e38:	str	x25, [sp, #64]
  408e3c:	mov	x20, x0
  408e40:	ldr	x19, [x0, #2440]
  408e44:	add	x0, x0, #0x78
  408e48:	cmp	x19, #0x0
  408e4c:	add	x21, sp, #0x860
  408e50:	csel	x21, x21, x0, ne  // ne = any
  408e54:	ldr	x23, [x20, #88]
  408e58:	cmp	x23, #0x1
  408e5c:	cset	w25, eq  // eq = none
  408e60:	b.eq	408edc <wcrtomb@plt+0x660c>  // b.none
  408e64:	ldr	x0, [x20, #104]
  408e68:	cmp	x0, #0xff
  408e6c:	mov	x2, #0x100                 	// #256
  408e70:	mov	x1, #0xff                  	// #255
  408e74:	csel	x1, x0, x1, le
  408e78:	mov	x0, x21
  408e7c:	bl	4024c0 <memset@plt>
  408e80:	ldr	x22, [x20, #96]
  408e84:	str	x22, [sp, #2136]
  408e88:	cbnz	x22, 409064 <wcrtomb@plt+0x6794>
  408e8c:	cmp	x23, #0x1
  408e90:	b.eq	4090b4 <wcrtomb@plt+0x67e4>  // b.none
  408e94:	add	x22, x20, #0x178
  408e98:	cmp	x19, #0x0
  408e9c:	add	x1, sp, #0x58
  408ea0:	csel	x22, x1, x22, ne  // ne = any
  408ea4:	mov	x2, #0x800                 	// #2048
  408ea8:	mov	w1, #0x0                   	// #0
  408eac:	mov	x0, x22
  408eb0:	bl	4024c0 <memset@plt>
  408eb4:	ldr	x0, [x20, #96]
  408eb8:	mov	x1, x22
  408ebc:	ldr	x0, [x0, #8]
  408ec0:	bl	407e04 <wcrtomb@plt+0x5534>
  408ec4:	mov	w6, #0xffffffff            	// #-1
  408ec8:	mov	w3, #0xfffffffe            	// #-2
  408ecc:	mov	x1, #0x0                   	// #0
  408ed0:	add	x5, x20, #0x178
  408ed4:	mov	w7, w6
  408ed8:	b	40911c <wcrtomb@plt+0x684c>
  408edc:	ldr	x22, [x20, #96]
  408ee0:	str	x22, [sp, #2136]
  408ee4:	cbz	x22, 408efc <wcrtomb@plt+0x662c>
  408ee8:	add	x1, sp, #0x858
  408eec:	ldr	x0, [x22, #8]
  408ef0:	bl	407c14 <wcrtomb@plt+0x5344>
  408ef4:	ldr	x22, [x22, #24]
  408ef8:	cbnz	x22, 408ee8 <wcrtomb@plt+0x6618>
  408efc:	ldr	x22, [x20, #104]
  408f00:	ldr	x0, [x20, #32]
  408f04:	ldr	x1, [x20, #24]
  408f08:	sub	x0, x0, x1
  408f0c:	cmp	x22, x0
  408f10:	b.hi	408fdc <wcrtomb@plt+0x670c>  // b.pmore
  408f14:	ldr	x1, [x20, #24]
  408f18:	add	x1, x1, x22
  408f1c:	ldr	x2, [x20, #16]
  408f20:	cmp	x1, x2
  408f24:	b.eq	408fec <wcrtomb@plt+0x671c>  // b.none
  408f28:	ldr	x0, [x20, #48]
  408f2c:	add	x1, x1, x0
  408f30:	bic	x0, x1, x0
  408f34:	ldr	x1, [x20, #8]
  408f38:	ldr	x3, [x20, #32]
  408f3c:	sub	x4, x0, x1
  408f40:	sub	x1, x3, x1
  408f44:	cmp	x4, x1
  408f48:	csel	x0, x0, x3, ls  // ls = plast
  408f4c:	str	x0, [x20, #24]
  408f50:	str	x0, [x20, #16]
  408f54:	str	x2, [x20, #2424]
  408f58:	ldr	x1, [x20, #96]
  408f5c:	ldr	x0, [x20, #104]
  408f60:	cmp	x0, #0x0
  408f64:	b.le	408f90 <wcrtomb@plt+0x66c0>
  408f68:	mov	x0, #0x0                   	// #0
  408f6c:	ldr	x2, [x1, #8]
  408f70:	ldrb	w3, [x2, #24]
  408f74:	ldr	x2, [x20, #2424]
  408f78:	strb	w3, [x2, x0]
  408f7c:	ldr	x1, [x1, #24]
  408f80:	add	x0, x0, #0x1
  408f84:	ldr	x2, [x20, #104]
  408f88:	cmp	x2, x0
  408f8c:	b.gt	408f6c <wcrtomb@plt+0x669c>
  408f90:	ldr	x0, [x20, #2440]
  408f94:	bl	408874 <wcrtomb@plt+0x5fa4>
  408f98:	mov	x22, x0
  408f9c:	adrp	x1, 408000 <wcrtomb@plt+0x5730>
  408fa0:	add	x1, x1, #0x824
  408fa4:	str	x1, [x0, #2464]
  408fa8:	ldr	x2, [x20, #104]
  408fac:	ldr	x1, [x20, #2424]
  408fb0:	bl	408990 <wcrtomb@plt+0x60c0>
  408fb4:	mov	x1, #0x0                   	// #0
  408fb8:	mov	x0, x20
  408fbc:	bl	416d68 <_obstack_free@@Base>
  408fc0:	mov	x2, #0x9a8                 	// #2472
  408fc4:	mov	x1, x22
  408fc8:	mov	x0, x20
  408fcc:	bl	402260 <memcpy@plt>
  408fd0:	mov	x0, x22
  408fd4:	bl	402660 <free@plt>
  408fd8:	b	408e64 <wcrtomb@plt+0x6594>
  408fdc:	mov	x1, x22
  408fe0:	mov	x0, x20
  408fe4:	bl	416c18 <_obstack_newchunk@@Base>
  408fe8:	b	408f14 <wcrtomb@plt+0x6644>
  408fec:	ldrb	w0, [x20, #80]
  408ff0:	orr	w0, w0, #0x2
  408ff4:	strb	w0, [x20, #80]
  408ff8:	b	408f28 <wcrtomb@plt+0x6658>
  408ffc:	ldr	x24, [x24, #32]
  409000:	cbz	x24, 40905c <wcrtomb@plt+0x678c>
  409004:	ldr	x1, [x22, #8]
  409008:	ldr	x0, [x24, #8]
  40900c:	bl	407d88 <wcrtomb@plt+0x54b8>
  409010:	and	w0, w0, #0xff
  409014:	cbnz	w0, 409034 <wcrtomb@plt+0x6764>
  409018:	ldr	x0, [x22, #40]
  40901c:	ldr	x1, [x24, #40]
  409020:	sub	x0, x0, x1
  409024:	ldr	x1, [x24, #48]
  409028:	cmp	x0, x1
  40902c:	b.ge	409034 <wcrtomb@plt+0x6764>  // b.tcont
  409030:	str	x0, [x24, #48]
  409034:	ldr	x0, [x22]
  409038:	cbz	x0, 408ffc <wcrtomb@plt+0x672c>
  40903c:	ldr	x0, [x22, #40]
  409040:	ldr	x1, [x24, #40]
  409044:	sub	x0, x0, x1
  409048:	ldr	x1, [x24, #56]
  40904c:	cmp	x1, x0
  409050:	b.le	408ffc <wcrtomb@plt+0x672c>
  409054:	str	x0, [x24, #56]
  409058:	b	408ffc <wcrtomb@plt+0x672c>
  40905c:	ldr	x22, [x22, #24]
  409060:	cbz	x22, 408e8c <wcrtomb@plt+0x65bc>
  409064:	add	x1, sp, #0x858
  409068:	ldr	x0, [x22, #8]
  40906c:	bl	407c14 <wcrtomb@plt+0x5344>
  409070:	mov	x2, x21
  409074:	ldr	x1, [x22, #40]
  409078:	ldr	x0, [x22, #8]
  40907c:	bl	407d28 <wcrtomb@plt+0x5458>
  409080:	mov	w3, w25
  409084:	ldr	x2, [x20, #96]
  409088:	ldr	x1, [x22, #32]
  40908c:	ldr	x0, [x22, #8]
  409090:	bl	407c60 <wcrtomb@plt+0x5390>
  409094:	cmp	x23, #0x1
  409098:	b.ne	40905c <wcrtomb@plt+0x678c>  // b.any
  40909c:	ldr	x0, [x20, #104]
  4090a0:	str	x0, [x22, #48]
  4090a4:	str	x0, [x22, #56]
  4090a8:	ldr	x24, [x22, #32]
  4090ac:	cbnz	x24, 409004 <wcrtomb@plt+0x6734>
  4090b0:	b	40905c <wcrtomb@plt+0x678c>
  4090b4:	ldr	x0, [x20, #96]
  4090b8:	ldr	x0, [x0, #24]
  4090bc:	cbnz	x0, 4090cc <wcrtomb@plt+0x67fc>
  4090c0:	b	408e94 <wcrtomb@plt+0x65c4>
  4090c4:	ldr	x0, [x0, #24]
  4090c8:	cbz	x0, 408e94 <wcrtomb@plt+0x65c4>
  4090cc:	ldr	x1, [x0, #16]
  4090d0:	ldr	x1, [x1, #56]
  4090d4:	ldr	x2, [x0, #56]
  4090d8:	cmp	x2, x1
  4090dc:	b.le	4090e4 <wcrtomb@plt+0x6814>
  4090e0:	str	x1, [x0, #56]
  4090e4:	ldr	x1, [x0, #56]
  4090e8:	ldr	x2, [x0, #48]
  4090ec:	cmp	x2, x1
  4090f0:	b.le	4090c4 <wcrtomb@plt+0x67f4>
  4090f4:	str	x1, [x0, #48]
  4090f8:	b	4090c4 <wcrtomb@plt+0x67f4>
  4090fc:	cmp	w2, w6
  409100:	csel	w6, w0, w7, eq  // eq = none
  409104:	b	409110 <wcrtomb@plt+0x6840>
  409108:	mov	w6, w0
  40910c:	mov	w3, w2
  409110:	add	x1, x1, #0x1
  409114:	cmp	x1, #0x100
  409118:	b.eq	409164 <wcrtomb@plt+0x6894>  // b.none
  40911c:	mov	w0, w1
  409120:	mov	w2, w1
  409124:	cbz	x19, 409138 <wcrtomb@plt+0x6868>
  409128:	ldrb	w2, [x19, x1]
  40912c:	and	x4, x2, #0xff
  409130:	ldr	x4, [x22, x4, lsl #3]
  409134:	str	x4, [x5, x1, lsl #3]
  409138:	ldr	x4, [x5, x1, lsl #3]
  40913c:	cbz	x4, 409110 <wcrtomb@plt+0x6840>
  409140:	cmn	w3, #0x1
  409144:	b.lt	409108 <wcrtomb@plt+0x6838>  // b.tstop
  409148:	cmp	w2, w3
  40914c:	b.eq	4090fc <wcrtomb@plt+0x682c>  // b.none
  409150:	cmp	x1, w2, sxtw
  409154:	ccmp	w3, w6, #0x0, eq  // eq = none
  409158:	csel	w6, w6, w0, ne  // ne = any
  40915c:	csel	w3, w3, w7, eq  // eq = none
  409160:	b	409110 <wcrtomb@plt+0x6840>
  409164:	str	w3, [x20, #2448]
  409168:	str	w6, [x20, #2452]
  40916c:	cmp	x23, #0x1
  409170:	b.eq	4091b4 <wcrtomb@plt+0x68e4>  // b.none
  409174:	cbz	x19, 409198 <wcrtomb@plt+0x68c8>
  409178:	mov	x1, #0x0                   	// #0
  40917c:	add	x20, x20, #0x78
  409180:	ldrb	w0, [x19, x1]
  409184:	ldrb	w0, [x21, x0]
  409188:	strb	w0, [x20, x1]
  40918c:	add	x1, x1, #0x1
  409190:	cmp	x1, #0x100
  409194:	b.ne	409180 <wcrtomb@plt+0x68b0>  // b.any
  409198:	ldp	x19, x20, [sp, #16]
  40919c:	ldp	x21, x22, [sp, #32]
  4091a0:	ldp	x23, x24, [sp, #48]
  4091a4:	ldr	x25, [sp, #64]
  4091a8:	ldp	x29, x30, [sp]
  4091ac:	add	sp, sp, #0x960
  4091b0:	ret
  4091b4:	ldr	x22, [x20, #104]
  4091b8:	ldr	x0, [x20, #32]
  4091bc:	ldr	x1, [x20, #24]
  4091c0:	sub	x0, x0, x1
  4091c4:	cmp	x22, x0
  4091c8:	b.hi	409308 <wcrtomb@plt+0x6a38>  // b.pmore
  4091cc:	ldr	x1, [x20, #24]
  4091d0:	add	x1, x1, x22
  4091d4:	ldr	x2, [x20, #16]
  4091d8:	cmp	x1, x2
  4091dc:	b.eq	409318 <wcrtomb@plt+0x6a48>  // b.none
  4091e0:	ldr	x0, [x20, #48]
  4091e4:	add	x1, x1, x0
  4091e8:	bic	x0, x1, x0
  4091ec:	ldr	x1, [x20, #8]
  4091f0:	ldr	x3, [x20, #32]
  4091f4:	sub	x4, x0, x1
  4091f8:	sub	x1, x3, x1
  4091fc:	cmp	x4, x1
  409200:	csel	x0, x0, x3, ls  // ls = plast
  409204:	str	x0, [x20, #24]
  409208:	str	x0, [x20, #16]
  40920c:	str	x2, [x20, #2424]
  409210:	ldr	x0, [x20, #104]
  409214:	ldr	x1, [x20, #96]
  409218:	subs	x0, x0, #0x1
  40921c:	b.mi	409240 <wcrtomb@plt+0x6970>  // b.first
  409220:	ldr	x2, [x1, #8]
  409224:	ldrb	w3, [x2, #24]
  409228:	ldr	x2, [x20, #2424]
  40922c:	strb	w3, [x2, x0]
  409230:	ldr	x1, [x1, #24]
  409234:	sub	x0, x0, #0x1
  409238:	cmn	x0, #0x1
  40923c:	b.ne	409220 <wcrtomb@plt+0x6950>  // b.any
  409240:	ldr	x0, [x20, #104]
  409244:	cmp	x0, #0x1
  409248:	b.le	409174 <wcrtomb@plt+0x68a4>
  40924c:	sub	x0, x0, #0x1
  409250:	lsl	x22, x0, #3
  409254:	ldr	x1, [x20, #32]
  409258:	ldr	x2, [x20, #24]
  40925c:	sub	x1, x1, x2
  409260:	cmp	x1, x0, lsl #3
  409264:	b.cc	409328 <wcrtomb@plt+0x6a58>  // b.lo, b.ul, b.last
  409268:	ldr	x1, [x20, #24]
  40926c:	add	x1, x1, x22
  409270:	ldr	x2, [x20, #16]
  409274:	cmp	x1, x2
  409278:	b.eq	409338 <wcrtomb@plt+0x6a68>  // b.none
  40927c:	ldr	x0, [x20, #48]
  409280:	add	x1, x1, x0
  409284:	bic	x0, x1, x0
  409288:	ldr	x1, [x20, #8]
  40928c:	ldr	x3, [x20, #32]
  409290:	sub	x4, x0, x1
  409294:	sub	x1, x3, x1
  409298:	cmp	x4, x1
  40929c:	csel	x0, x0, x3, ls  // ls = plast
  4092a0:	str	x0, [x20, #24]
  4092a4:	str	x0, [x20, #16]
  4092a8:	str	x2, [x20, #2432]
  4092ac:	ldr	x0, [x20, #96]
  4092b0:	ldr	x1, [x0, #24]
  4092b4:	ldr	x2, [x20, #104]
  4092b8:	cmp	x2, #0x1
  4092bc:	b.le	4092e8 <wcrtomb@plt+0x6a18>
  4092c0:	mov	x0, #0x0                   	// #0
  4092c4:	ldr	x3, [x1, #48]
  4092c8:	ldr	x2, [x20, #2432]
  4092cc:	str	x3, [x2, x0, lsl #3]
  4092d0:	ldr	x1, [x1, #24]
  4092d4:	add	x0, x0, #0x1
  4092d8:	ldr	x2, [x20, #104]
  4092dc:	sub	x3, x2, #0x1
  4092e0:	cmp	x3, x0
  4092e4:	b.gt	4092c4 <wcrtomb@plt+0x69f4>
  4092e8:	ldr	x0, [x20, #2424]
  4092ec:	add	x2, x0, x2
  4092f0:	ldurb	w0, [x2, #-2]
  4092f4:	cbz	x19, 409300 <wcrtomb@plt+0x6a30>
  4092f8:	and	x0, x0, #0xff
  4092fc:	ldrb	w0, [x19, x0]
  409300:	strb	w0, [x20, #2456]
  409304:	b	409174 <wcrtomb@plt+0x68a4>
  409308:	mov	x1, x22
  40930c:	mov	x0, x20
  409310:	bl	416c18 <_obstack_newchunk@@Base>
  409314:	b	4091cc <wcrtomb@plt+0x68fc>
  409318:	ldrb	w0, [x20, #80]
  40931c:	orr	w0, w0, #0x2
  409320:	strb	w0, [x20, #80]
  409324:	b	4091e0 <wcrtomb@plt+0x6910>
  409328:	mov	x1, x22
  40932c:	mov	x0, x20
  409330:	bl	416c18 <_obstack_newchunk@@Base>
  409334:	b	409268 <wcrtomb@plt+0x6998>
  409338:	ldrb	w0, [x20, #80]
  40933c:	orr	w0, w0, #0x2
  409340:	strb	w0, [x20, #80]
  409344:	b	40927c <wcrtomb@plt+0x69ac>
  409348:	stp	x29, x30, [sp, #-16]!
  40934c:	mov	x29, sp
  409350:	ldr	x5, [x0, #2464]
  409354:	blr	x5
  409358:	ldp	x29, x30, [sp], #16
  40935c:	ret
  409360:	stp	x29, x30, [sp, #-32]!
  409364:	mov	x29, sp
  409368:	str	x19, [sp, #16]
  40936c:	mov	x19, x0
  409370:	mov	x1, #0x0                   	// #0
  409374:	bl	416d68 <_obstack_free@@Base>
  409378:	mov	x0, x19
  40937c:	bl	402660 <free@plt>
  409380:	ldr	x19, [sp, #16]
  409384:	ldp	x29, x30, [sp], #32
  409388:	ret
  40938c:	stp	x29, x30, [sp, #-96]!
  409390:	mov	x29, sp
  409394:	stp	x19, x20, [sp, #16]
  409398:	stp	x21, x22, [sp, #32]
  40939c:	stp	x23, x24, [sp, #48]
  4093a0:	str	x25, [sp, #64]
  4093a4:	mov	x20, x0
  4093a8:	mov	x22, x1
  4093ac:	and	w24, w2, #0xff
  4093b0:	str	xzr, [sp, #88]
  4093b4:	mov	x19, #0x0                   	// #0
  4093b8:	adrp	x23, 43e000 <_obstack_memory_used@@Base+0x27218>
  4093bc:	add	x23, x23, #0x648
  4093c0:	adrp	x25, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4093c4:	add	x25, x25, #0x8d0
  4093c8:	b	409418 <wcrtomb@plt+0x6b48>
  4093cc:	add	x3, x25, w3, sxtw
  4093d0:	ldrsb	w0, [x3, #3]
  4093d4:	cmn	w0, #0x2
  4093d8:	b.ne	40943c <wcrtomb@plt+0x6b6c>  // b.any
  4093dc:	str	wzr, [sp, #84]
  4093e0:	add	x3, sp, #0x58
  4093e4:	sub	x2, x2, x19
  4093e8:	add	x0, sp, #0x54
  4093ec:	bl	4169f8 <wcrtomb@plt+0x14128>
  4093f0:	mov	x21, x0
  4093f4:	ldr	w0, [sp, #84]
  4093f8:	cmp	w0, #0x5f
  4093fc:	b.eq	409408 <wcrtomb@plt+0x6b38>  // b.none
  409400:	bl	402770 <iswalnum@plt>
  409404:	cbz	w0, 40943c <wcrtomb@plt+0x6b6c>
  409408:	add	x19, x19, x21
  40940c:	cmp	x21, #0x0
  409410:	cinc	x19, x19, eq  // eq = none
  409414:	cbz	w24, 40943c <wcrtomb@plt+0x6b6c>
  409418:	sub	x2, x22, x20
  40941c:	cmp	x2, x19
  409420:	b.ls	40943c <wcrtomb@plt+0x6b6c>  // b.plast
  409424:	add	x1, x20, x19
  409428:	ldrb	w3, [x20, x19]
  40942c:	ldrb	w0, [x23, w3, sxtw]
  409430:	cbz	w0, 4093cc <wcrtomb@plt+0x6afc>
  409434:	add	x19, x19, #0x1
  409438:	b	409414 <wcrtomb@plt+0x6b44>
  40943c:	mov	x0, x19
  409440:	ldp	x19, x20, [sp, #16]
  409444:	ldp	x21, x22, [sp, #32]
  409448:	ldp	x23, x24, [sp, #48]
  40944c:	ldr	x25, [sp, #64]
  409450:	ldp	x29, x30, [sp], #96
  409454:	ret
  409458:	ret
  40945c:	mov	x4, x0
  409460:	ldrb	w0, [x0]
  409464:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409468:	add	x3, x3, #0x8d0
  40946c:	add	x3, x3, x0
  409470:	ldrsb	x0, [x3, #3]
  409474:	cmn	x0, #0x2
  409478:	b.eq	409480 <wcrtomb@plt+0x6bb0>  // b.none
  40947c:	ret
  409480:	stp	x29, x30, [sp, #-16]!
  409484:	mov	x29, sp
  409488:	mov	x0, x4
  40948c:	bl	4169c8 <wcrtomb@plt+0x140f8>
  409490:	ldp	x29, x30, [sp], #16
  409494:	ret
  409498:	stp	x29, x30, [sp, #-48]!
  40949c:	mov	x29, sp
  4094a0:	stp	x19, x20, [sp, #16]
  4094a4:	stp	x21, x22, [sp, #32]
  4094a8:	mov	x19, #0x0                   	// #0
  4094ac:	adrp	x21, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4094b0:	add	x21, x21, #0x9d4
  4094b4:	mov	w22, #0x1                   	// #1
  4094b8:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x27218>
  4094bc:	add	x20, x20, #0x648
  4094c0:	b	4094e0 <wcrtomb@plt+0x6c10>
  4094c4:	bl	402770 <iswalnum@plt>
  4094c8:	cmp	w0, #0x0
  4094cc:	cset	w1, ne  // ne = any
  4094d0:	strb	w1, [x20, x19]
  4094d4:	add	x19, x19, #0x1
  4094d8:	cmp	x19, #0x100
  4094dc:	b.eq	4094f4 <wcrtomb@plt+0x6c24>  // b.none
  4094e0:	ldr	w0, [x21, x19, lsl #2]
  4094e4:	mov	w1, w22
  4094e8:	cmp	w0, #0x5f
  4094ec:	b.ne	4094c4 <wcrtomb@plt+0x6bf4>  // b.any
  4094f0:	b	4094d0 <wcrtomb@plt+0x6c00>
  4094f4:	ldp	x19, x20, [sp, #16]
  4094f8:	ldp	x21, x22, [sp, #32]
  4094fc:	ldp	x29, x30, [sp], #48
  409500:	ret
  409504:	stp	x29, x30, [sp, #-64]!
  409508:	mov	x29, sp
  40950c:	stp	x19, x20, [sp, #16]
  409510:	stp	x21, x22, [sp, #32]
  409514:	and	w19, w0, #0xff
  409518:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40951c:	ldrb	w0, [x0, #3542]
  409520:	cbz	w0, 4095dc <wcrtomb@plt+0x6d0c>
  409524:	bl	402670 <__ctype_get_mb_cur_max@plt>
  409528:	cmp	w19, #0x0
  40952c:	ccmp	x0, #0x1, #0x4, eq  // eq = none
  409530:	b.ne	4095f8 <wcrtomb@plt+0x6d28>  // b.any
  409534:	mov	x0, #0x100                 	// #256
  409538:	bl	413fec <wcrtomb@plt+0x1171c>
  40953c:	mov	x21, x0
  409540:	bl	402670 <__ctype_get_mb_cur_max@plt>
  409544:	mov	x19, #0x0                   	// #0
  409548:	cmp	x0, #0x1
  40954c:	b.eq	40955c <wcrtomb@plt+0x6c8c>  // b.none
  409550:	adrp	x22, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409554:	add	x22, x22, #0x9d4
  409558:	b	4095bc <wcrtomb@plt+0x6cec>
  40955c:	mov	x19, #0x0                   	// #0
  409560:	b	409574 <wcrtomb@plt+0x6ca4>
  409564:	strb	w0, [x21, x19]
  409568:	add	x19, x19, #0x1
  40956c:	cmp	x19, #0x100
  409570:	b.eq	4095e0 <wcrtomb@plt+0x6d10>  // b.none
  409574:	mov	w0, w19
  409578:	add	w1, w19, #0x80
  40957c:	cmp	w1, #0x17f
  409580:	b.hi	409564 <wcrtomb@plt+0x6c94>  // b.pmore
  409584:	bl	402510 <__ctype_toupper_loc@plt>
  409588:	ldr	x0, [x0]
  40958c:	ldr	w0, [x0, x19, lsl #2]
  409590:	b	409564 <wcrtomb@plt+0x6c94>
  409594:	str	xzr, [sp, #56]
  409598:	add	x2, sp, #0x38
  40959c:	mov	w1, w0
  4095a0:	add	x0, x21, x19
  4095a4:	bl	4028d0 <wcrtomb@plt>
  4095a8:	cmp	x0, #0x1
  4095ac:	b.ne	4095d8 <wcrtomb@plt+0x6d08>  // b.any
  4095b0:	add	x19, x19, #0x1
  4095b4:	cmp	x19, #0x100
  4095b8:	b.eq	4095e0 <wcrtomb@plt+0x6d10>  // b.none
  4095bc:	ldr	w20, [x22, x19, lsl #2]
  4095c0:	mov	w0, w20
  4095c4:	bl	4027e0 <towupper@plt>
  4095c8:	cmp	w20, w0
  4095cc:	b.ne	409594 <wcrtomb@plt+0x6cc4>  // b.any
  4095d0:	strb	w19, [x21, x19]
  4095d4:	b	4095b0 <wcrtomb@plt+0x6ce0>
  4095d8:	bl	4025a0 <abort@plt>
  4095dc:	mov	x21, #0x0                   	// #0
  4095e0:	mov	x0, x21
  4095e4:	bl	408874 <wcrtomb@plt+0x5fa4>
  4095e8:	ldp	x19, x20, [sp, #16]
  4095ec:	ldp	x21, x22, [sp, #32]
  4095f0:	ldp	x29, x30, [sp], #64
  4095f4:	ret
  4095f8:	mov	x21, #0x0                   	// #0
  4095fc:	b	4095e0 <wcrtomb@plt+0x6d10>
  409600:	stp	x29, x30, [sp, #-96]!
  409604:	mov	x29, sp
  409608:	stp	x19, x20, [sp, #16]
  40960c:	mov	x20, x2
  409610:	ldr	x19, [x0]
  409614:	cmp	x19, x2
  409618:	b.cs	409674 <wcrtomb@plt+0x6da4>  // b.hs, b.nlast
  40961c:	stp	x21, x22, [sp, #32]
  409620:	stp	x23, x24, [sp, #48]
  409624:	mov	x21, x0
  409628:	mov	x22, x1
  40962c:	mov	x24, x3
  409630:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409634:	ldrb	w0, [x0, #2258]
  409638:	cbz	w0, 409754 <wcrtomb@plt+0x6e84>
  40963c:	cmp	x2, x3
  409640:	b.cs	409654 <wcrtomb@plt+0x6d84>  // b.hs, b.nlast
  409644:	ldrb	w0, [x2]
  409648:	and	w0, w0, #0xc0
  40964c:	cmp	w0, #0x80
  409650:	b.eq	40967c <wcrtomb@plt+0x6dac>  // b.none
  409654:	str	x20, [x21]
  409658:	mov	x1, x20
  40965c:	mov	x0, #0x1                   	// #1
  409660:	cbnz	x22, 409704 <wcrtomb@plt+0x6e34>
  409664:	mov	x0, #0x0                   	// #0
  409668:	ldp	x21, x22, [sp, #32]
  40966c:	ldp	x23, x24, [sp, #48]
  409670:	b	40971c <wcrtomb@plt+0x6e4c>
  409674:	sub	x0, x2, x19
  409678:	b	40971c <wcrtomb@plt+0x6e4c>
  40967c:	ldurb	w0, [x2, #-1]
  409680:	and	w0, w0, #0xc0
  409684:	cmp	w0, #0x80
  409688:	b.ne	4096b8 <wcrtomb@plt+0x6de8>  // b.any
  40968c:	ldurb	w0, [x2, #-2]
  409690:	and	w0, w0, #0xc0
  409694:	cmp	w0, #0x80
  409698:	b.ne	409728 <wcrtomb@plt+0x6e58>  // b.any
  40969c:	ldurb	w0, [x2, #-3]
  4096a0:	and	w0, w0, #0xc0
  4096a4:	cmp	w0, #0x80
  4096a8:	b.eq	409654 <wcrtomb@plt+0x6d84>  // b.none
  4096ac:	str	x25, [sp, #64]
  4096b0:	mov	w25, #0x3                   	// #3
  4096b4:	b	4096c0 <wcrtomb@plt+0x6df0>
  4096b8:	str	x25, [sp, #64]
  4096bc:	mov	w25, #0x1                   	// #1
  4096c0:	str	xzr, [sp, #88]
  4096c4:	sxtw	x25, w25
  4096c8:	sub	x23, x20, x25
  4096cc:	ldrb	w1, [x23]
  4096d0:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4096d4:	add	x0, x0, #0x8d0
  4096d8:	add	x0, x0, x1
  4096dc:	ldrsb	x0, [x0, #3]
  4096e0:	cmn	x0, #0x2
  4096e4:	b.eq	409734 <wcrtomb@plt+0x6e64>  // b.none
  4096e8:	cmp	x25, x0
  4096ec:	mov	x1, x20
  4096f0:	ccmn	x0, #0x3, #0x2, cc  // cc = lo, ul, last
  4096f4:	b.ls	409748 <wcrtomb@plt+0x6e78>  // b.plast
  4096f8:	str	x1, [x21]
  4096fc:	cbz	x22, 4097b8 <wcrtomb@plt+0x6ee8>
  409700:	ldr	x25, [sp, #64]
  409704:	str	x0, [x22]
  409708:	sub	x19, x20, x19
  40970c:	cmp	x20, x1
  409710:	csel	x0, x19, xzr, ne  // ne = any
  409714:	ldp	x21, x22, [sp, #32]
  409718:	ldp	x23, x24, [sp, #48]
  40971c:	ldp	x19, x20, [sp, #16]
  409720:	ldp	x29, x30, [sp], #96
  409724:	ret
  409728:	str	x25, [sp, #64]
  40972c:	mov	w25, #0x2                   	// #2
  409730:	b	4096c0 <wcrtomb@plt+0x6df0>
  409734:	add	x2, sp, #0x58
  409738:	sub	x1, x24, x23
  40973c:	mov	x0, x23
  409740:	bl	4169c8 <wcrtomb@plt+0x140f8>
  409744:	b	4096e8 <wcrtomb@plt+0x6e18>
  409748:	add	x1, x23, x0
  40974c:	mov	x19, x23
  409750:	b	4096f8 <wcrtomb@plt+0x6e28>
  409754:	str	x25, [sp, #64]
  409758:	str	xzr, [sp, #88]
  40975c:	adrp	x23, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409760:	add	x23, x23, #0x8d0
  409764:	mov	x25, #0x1                   	// #1
  409768:	b	409798 <wcrtomb@plt+0x6ec8>
  40976c:	add	x2, sp, #0x58
  409770:	sub	x1, x24, x19
  409774:	mov	x0, x19
  409778:	bl	4169c8 <wcrtomb@plt+0x140f8>
  40977c:	b	4097ac <wcrtomb@plt+0x6edc>
  409780:	str	xzr, [sp, #88]
  409784:	mov	x0, x25
  409788:	add	x1, x19, x0
  40978c:	cmp	x20, x1
  409790:	b.ls	4096f8 <wcrtomb@plt+0x6e28>  // b.plast
  409794:	mov	x19, x1
  409798:	ldrb	w4, [x19]
  40979c:	add	x4, x23, x4
  4097a0:	ldrsb	x0, [x4, #3]
  4097a4:	cmn	x0, #0x2
  4097a8:	b.eq	40976c <wcrtomb@plt+0x6e9c>  // b.none
  4097ac:	cmn	x0, #0x3
  4097b0:	b.ls	409788 <wcrtomb@plt+0x6eb8>  // b.plast
  4097b4:	b	409780 <wcrtomb@plt+0x6eb0>
  4097b8:	ldr	x25, [sp, #64]
  4097bc:	b	409708 <wcrtomb@plt+0x6e38>
  4097c0:	stp	x29, x30, [sp, #-16]!
  4097c4:	mov	x29, sp
  4097c8:	mov	w2, #0x1                   	// #1
  4097cc:	bl	40938c <wcrtomb@plt+0x6abc>
  4097d0:	ldp	x29, x30, [sp], #16
  4097d4:	ret
  4097d8:	stp	x29, x30, [sp, #-16]!
  4097dc:	mov	x29, sp
  4097e0:	mov	w2, #0x0                   	// #0
  4097e4:	bl	40938c <wcrtomb@plt+0x6abc>
  4097e8:	ldp	x29, x30, [sp], #16
  4097ec:	ret
  4097f0:	cmp	x0, x1
  4097f4:	b.eq	409880 <wcrtomb@plt+0x6fb0>  // b.none
  4097f8:	stp	x29, x30, [sp, #-48]!
  4097fc:	mov	x29, sp
  409800:	stp	x19, x20, [sp, #16]
  409804:	mov	x20, x2
  409808:	ldurb	w2, [x1, #-1]
  40980c:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409810:	ldrb	w3, [x3, #2256]
  409814:	cbz	w3, 40983c <wcrtomb@plt+0x6f6c>
  409818:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  40981c:	ldrb	w3, [x3, #2258]
  409820:	cbz	w3, 409854 <wcrtomb@plt+0x6f84>
  409824:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409828:	add	x3, x3, #0x8d0
  40982c:	add	x3, x3, w2, sxtw
  409830:	ldrsb	w3, [x3, #3]
  409834:	cmn	w3, #0x2
  409838:	b.eq	409854 <wcrtomb@plt+0x6f84>  // b.none
  40983c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409840:	add	x0, x0, #0x648
  409844:	ldrb	w0, [x0, w2, sxtw]
  409848:	ldp	x19, x20, [sp, #16]
  40984c:	ldp	x29, x30, [sp], #48
  409850:	ret
  409854:	sub	x19, x1, #0x1
  409858:	str	x0, [sp, #40]
  40985c:	mov	x3, x20
  409860:	mov	x2, x19
  409864:	mov	x1, #0x0                   	// #0
  409868:	add	x0, sp, #0x28
  40986c:	bl	409600 <wcrtomb@plt+0x6d30>
  409870:	mov	x1, x20
  409874:	sub	x0, x19, x0
  409878:	bl	4097d8 <wcrtomb@plt+0x6f08>
  40987c:	b	409848 <wcrtomb@plt+0x6f78>
  409880:	mov	x0, #0x0                   	// #0
  409884:	ret
  409888:	stp	x29, x30, [sp, #-16]!
  40988c:	mov	x29, sp
  409890:	mov	w0, #0x1                   	// #1
  409894:	bl	405d10 <wcrtomb@plt+0x3440>
  409898:	ldp	x29, x30, [sp], #16
  40989c:	ret
  4098a0:	stp	x29, x30, [sp, #-96]!
  4098a4:	mov	x29, sp
  4098a8:	stp	x19, x20, [sp, #16]
  4098ac:	stp	x23, x24, [sp, #48]
  4098b0:	stp	x25, x26, [sp, #64]
  4098b4:	stp	x27, x28, [sp, #80]
  4098b8:	mov	x25, x0
  4098bc:	mov	x24, x1
  4098c0:	mov	x27, x2
  4098c4:	mov	x23, x3
  4098c8:	bl	4022c0 <strlen@plt>
  4098cc:	ldr	x19, [x24]
  4098d0:	cbz	x19, 409990 <wcrtomb@plt+0x70c0>
  4098d4:	stp	x21, x22, [sp, #32]
  4098d8:	mov	x22, x0
  4098dc:	mov	x21, x27
  4098e0:	mov	w28, #0x0                   	// #0
  4098e4:	mov	x26, #0xffffffffffffffff    	// #-1
  4098e8:	mov	x20, #0x0                   	// #0
  4098ec:	b	409910 <wcrtomb@plt+0x7040>
  4098f0:	mov	x26, x20
  4098f4:	ldp	x21, x22, [sp, #32]
  4098f8:	b	409974 <wcrtomb@plt+0x70a4>
  4098fc:	mov	x26, x20
  409900:	add	x20, x20, #0x1
  409904:	ldr	x19, [x24, x20, lsl #3]
  409908:	add	x21, x21, x23
  40990c:	cbz	x19, 409964 <wcrtomb@plt+0x7094>
  409910:	mov	x2, x22
  409914:	mov	x1, x25
  409918:	mov	x0, x19
  40991c:	bl	402470 <strncmp@plt>
  409920:	cbnz	w0, 409900 <wcrtomb@plt+0x7030>
  409924:	mov	x0, x19
  409928:	bl	4022c0 <strlen@plt>
  40992c:	cmp	x0, x22
  409930:	b.eq	4098f0 <wcrtomb@plt+0x7020>  // b.none
  409934:	cmn	x26, #0x1
  409938:	b.eq	4098fc <wcrtomb@plt+0x702c>  // b.none
  40993c:	cbz	x27, 40995c <wcrtomb@plt+0x708c>
  409940:	mov	x2, x23
  409944:	mov	x1, x21
  409948:	madd	x0, x26, x23, x27
  40994c:	bl	402610 <memcmp@plt>
  409950:	cmp	w0, #0x0
  409954:	csinc	w28, w28, wzr, eq  // eq = none
  409958:	b	409900 <wcrtomb@plt+0x7030>
  40995c:	mov	w28, #0x1                   	// #1
  409960:	b	409900 <wcrtomb@plt+0x7030>
  409964:	cmp	w28, #0x0
  409968:	mov	x0, #0xfffffffffffffffe    	// #-2
  40996c:	csel	x26, x26, x0, eq  // eq = none
  409970:	ldp	x21, x22, [sp, #32]
  409974:	mov	x0, x26
  409978:	ldp	x19, x20, [sp, #16]
  40997c:	ldp	x23, x24, [sp, #48]
  409980:	ldp	x25, x26, [sp, #64]
  409984:	ldp	x27, x28, [sp, #80]
  409988:	ldp	x29, x30, [sp], #96
  40998c:	ret
  409990:	mov	x26, #0xffffffffffffffff    	// #-1
  409994:	b	409974 <wcrtomb@plt+0x70a4>
  409998:	stp	x29, x30, [sp, #-48]!
  40999c:	mov	x29, sp
  4099a0:	stp	x19, x20, [sp, #16]
  4099a4:	str	x21, [sp, #32]
  4099a8:	mov	x21, x0
  4099ac:	mov	x20, x1
  4099b0:	cmn	x2, #0x1
  4099b4:	b.eq	409a18 <wcrtomb@plt+0x7148>  // b.none
  4099b8:	mov	w2, #0x5                   	// #5
  4099bc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4099c0:	add	x1, x1, #0x40
  4099c4:	mov	x0, #0x0                   	// #0
  4099c8:	bl	4027a0 <dcgettext@plt>
  4099cc:	mov	x19, x0
  4099d0:	mov	x2, x20
  4099d4:	mov	w1, #0x8                   	// #8
  4099d8:	mov	w0, #0x0                   	// #0
  4099dc:	bl	413660 <wcrtomb@plt+0x10d90>
  4099e0:	mov	x20, x0
  4099e4:	mov	x1, x21
  4099e8:	mov	w0, #0x1                   	// #1
  4099ec:	bl	413974 <wcrtomb@plt+0x110a4>
  4099f0:	mov	x4, x0
  4099f4:	mov	x3, x20
  4099f8:	mov	x2, x19
  4099fc:	mov	w1, #0x0                   	// #0
  409a00:	mov	w0, #0x0                   	// #0
  409a04:	bl	4022f0 <error@plt>
  409a08:	ldp	x19, x20, [sp, #16]
  409a0c:	ldr	x21, [sp, #32]
  409a10:	ldp	x29, x30, [sp], #48
  409a14:	ret
  409a18:	mov	w2, #0x5                   	// #5
  409a1c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  409a20:	add	x1, x1, #0x20
  409a24:	mov	x0, #0x0                   	// #0
  409a28:	bl	4027a0 <dcgettext@plt>
  409a2c:	mov	x19, x0
  409a30:	b	4099d0 <wcrtomb@plt+0x7100>
  409a34:	stp	x29, x30, [sp, #-96]!
  409a38:	mov	x29, sp
  409a3c:	stp	x19, x20, [sp, #16]
  409a40:	stp	x21, x22, [sp, #32]
  409a44:	stp	x23, x24, [sp, #48]
  409a48:	mov	x24, x0
  409a4c:	mov	x20, x1
  409a50:	mov	x22, x2
  409a54:	mov	w2, #0x5                   	// #5
  409a58:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  409a5c:	add	x1, x1, #0x60
  409a60:	mov	x0, #0x0                   	// #0
  409a64:	bl	4027a0 <dcgettext@plt>
  409a68:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  409a6c:	ldr	x1, [x1, #1072]
  409a70:	bl	4027b0 <fputs_unlocked@plt>
  409a74:	ldr	x21, [x24]
  409a78:	cbz	x21, 409b14 <wcrtomb@plt+0x7244>
  409a7c:	stp	x25, x26, [sp, #64]
  409a80:	stp	x27, x28, [sp, #80]
  409a84:	mov	x23, #0x0                   	// #0
  409a88:	mov	x19, #0x0                   	// #0
  409a8c:	adrp	x25, 43e000 <_obstack_memory_used@@Base+0x27218>
  409a90:	adrp	x26, 426000 <_obstack_memory_used@@Base+0xf218>
  409a94:	add	x26, x26, #0x78
  409a98:	adrp	x27, 426000 <_obstack_memory_used@@Base+0xf218>
  409a9c:	add	x27, x27, #0x80
  409aa0:	b	409ad4 <wcrtomb@plt+0x7204>
  409aa4:	ldr	x23, [x25, #1072]
  409aa8:	mov	x0, x21
  409aac:	bl	41398c <wcrtomb@plt+0x110bc>
  409ab0:	mov	x2, x0
  409ab4:	mov	x1, x26
  409ab8:	mov	x0, x23
  409abc:	bl	402880 <fprintf@plt>
  409ac0:	mov	x23, x20
  409ac4:	add	x19, x19, #0x1
  409ac8:	ldr	x21, [x24, x19, lsl #3]
  409acc:	add	x20, x20, x22
  409ad0:	cbz	x21, 409b0c <wcrtomb@plt+0x723c>
  409ad4:	cbz	x19, 409aa4 <wcrtomb@plt+0x71d4>
  409ad8:	mov	x2, x22
  409adc:	mov	x1, x20
  409ae0:	mov	x0, x23
  409ae4:	bl	402610 <memcmp@plt>
  409ae8:	cbnz	w0, 409aa4 <wcrtomb@plt+0x71d4>
  409aec:	ldr	x28, [x25, #1072]
  409af0:	mov	x0, x21
  409af4:	bl	41398c <wcrtomb@plt+0x110bc>
  409af8:	mov	x2, x0
  409afc:	mov	x1, x27
  409b00:	mov	x0, x28
  409b04:	bl	402880 <fprintf@plt>
  409b08:	b	409ac4 <wcrtomb@plt+0x71f4>
  409b0c:	ldp	x25, x26, [sp, #64]
  409b10:	ldp	x27, x28, [sp, #80]
  409b14:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409b18:	ldr	x0, [x0, #1072]
  409b1c:	ldr	x1, [x0, #40]
  409b20:	ldr	x2, [x0, #48]
  409b24:	cmp	x1, x2
  409b28:	b.cs	409b50 <wcrtomb@plt+0x7280>  // b.hs, b.nlast
  409b2c:	add	x2, x1, #0x1
  409b30:	str	x2, [x0, #40]
  409b34:	mov	w0, #0xa                   	// #10
  409b38:	strb	w0, [x1]
  409b3c:	ldp	x19, x20, [sp, #16]
  409b40:	ldp	x21, x22, [sp, #32]
  409b44:	ldp	x23, x24, [sp, #48]
  409b48:	ldp	x29, x30, [sp], #96
  409b4c:	ret
  409b50:	mov	w1, #0xa                   	// #10
  409b54:	bl	4025d0 <__overflow@plt>
  409b58:	b	409b3c <wcrtomb@plt+0x726c>
  409b5c:	stp	x29, x30, [sp, #-64]!
  409b60:	mov	x29, sp
  409b64:	stp	x19, x20, [sp, #16]
  409b68:	stp	x21, x22, [sp, #32]
  409b6c:	stp	x23, x24, [sp, #48]
  409b70:	mov	x23, x0
  409b74:	mov	x22, x1
  409b78:	mov	x19, x2
  409b7c:	mov	x20, x3
  409b80:	mov	x21, x4
  409b84:	mov	x24, x5
  409b88:	mov	x3, x4
  409b8c:	mov	x2, x20
  409b90:	mov	x1, x19
  409b94:	mov	x0, x22
  409b98:	bl	4098a0 <wcrtomb@plt+0x6fd0>
  409b9c:	tbnz	x0, #63, 409bb4 <wcrtomb@plt+0x72e4>
  409ba0:	ldp	x19, x20, [sp, #16]
  409ba4:	ldp	x21, x22, [sp, #32]
  409ba8:	ldp	x23, x24, [sp, #48]
  409bac:	ldp	x29, x30, [sp], #64
  409bb0:	ret
  409bb4:	mov	x2, x0
  409bb8:	mov	x1, x22
  409bbc:	mov	x0, x23
  409bc0:	bl	409998 <wcrtomb@plt+0x70c8>
  409bc4:	mov	x2, x21
  409bc8:	mov	x1, x20
  409bcc:	mov	x0, x19
  409bd0:	bl	409a34 <wcrtomb@plt+0x7164>
  409bd4:	blr	x24
  409bd8:	mov	x0, #0xffffffffffffffff    	// #-1
  409bdc:	b	409ba0 <wcrtomb@plt+0x72d0>
  409be0:	stp	x29, x30, [sp, #-64]!
  409be4:	mov	x29, sp
  409be8:	stp	x21, x22, [sp, #32]
  409bec:	ldr	x22, [x1]
  409bf0:	cbz	x22, 409c40 <wcrtomb@plt+0x7370>
  409bf4:	stp	x19, x20, [sp, #16]
  409bf8:	str	x23, [sp, #48]
  409bfc:	mov	x23, x0
  409c00:	mov	x21, x3
  409c04:	mov	x19, x2
  409c08:	add	x20, x1, #0x8
  409c0c:	mov	x2, x21
  409c10:	mov	x1, x19
  409c14:	mov	x0, x23
  409c18:	bl	402610 <memcmp@plt>
  409c1c:	cbz	w0, 409c38 <wcrtomb@plt+0x7368>
  409c20:	ldr	x22, [x20], #8
  409c24:	add	x19, x19, x21
  409c28:	cbnz	x22, 409c0c <wcrtomb@plt+0x733c>
  409c2c:	ldp	x19, x20, [sp, #16]
  409c30:	ldr	x23, [sp, #48]
  409c34:	b	409c40 <wcrtomb@plt+0x7370>
  409c38:	ldp	x19, x20, [sp, #16]
  409c3c:	ldr	x23, [sp, #48]
  409c40:	mov	x0, x22
  409c44:	ldp	x21, x22, [sp, #32]
  409c48:	ldp	x29, x30, [sp], #64
  409c4c:	ret
  409c50:	ret
  409c54:	stp	x29, x30, [sp, #-48]!
  409c58:	mov	x29, sp
  409c5c:	stp	x19, x20, [sp, #16]
  409c60:	str	x21, [sp, #32]
  409c64:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409c68:	add	x19, x0, #0x750
  409c6c:	ldr	x1, [x0, #1872]
  409c70:	mov	w0, #0x0                   	// #0
  409c74:	blr	x1
  409c78:	ldr	x20, [x19, #8]
  409c7c:	ldr	x21, [x19, #16]
  409c80:	ldr	x0, [x19, #16]
  409c84:	bl	4022c0 <strlen@plt>
  409c88:	mov	x2, x0
  409c8c:	mov	x1, x21
  409c90:	mov	w0, #0x2                   	// #2
  409c94:	bl	402580 <write@plt>
  409c98:	mov	x2, #0x2                   	// #2
  409c9c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  409ca0:	add	x1, x1, #0x88
  409ca4:	mov	w0, w2
  409ca8:	bl	402580 <write@plt>
  409cac:	mov	x0, x20
  409cb0:	bl	4022c0 <strlen@plt>
  409cb4:	mov	x2, x0
  409cb8:	mov	x1, x20
  409cbc:	mov	w0, #0x2                   	// #2
  409cc0:	bl	402580 <write@plt>
  409cc4:	mov	x2, #0x1                   	// #1
  409cc8:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  409ccc:	add	x1, x1, #0xe8
  409cd0:	mov	w0, #0x2                   	// #2
  409cd4:	bl	402580 <write@plt>
  409cd8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409cdc:	ldr	w0, [x0, #968]
  409ce0:	bl	4022a0 <_exit@plt>
  409ce4:	stp	x29, x30, [sp, #-208]!
  409ce8:	mov	x29, sp
  409cec:	stp	x19, x20, [sp, #16]
  409cf0:	mov	x19, x0
  409cf4:	str	wzr, [sp, #192]
  409cf8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409cfc:	add	x0, x0, #0x770
  409d00:	str	x0, [sp, #184]
  409d04:	mov	x0, #0x4000                	// #16384
  409d08:	str	x0, [sp, #200]
  409d0c:	mov	x1, #0x0                   	// #0
  409d10:	add	x0, sp, #0xb8
  409d14:	bl	402270 <sigaltstack@plt>
  409d18:	cbnz	w0, 409da0 <wcrtomb@plt+0x74d0>
  409d1c:	adrp	x0, 409000 <wcrtomb@plt+0x6730>
  409d20:	add	x0, x0, #0xc50
  409d24:	cmp	x19, #0x0
  409d28:	csel	x19, x0, x19, eq  // eq = none
  409d2c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409d30:	add	x20, x0, #0x750
  409d34:	str	x19, [x0, #1872]
  409d38:	mov	w2, #0x5                   	// #5
  409d3c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  409d40:	add	x1, x1, #0x90
  409d44:	mov	x0, #0x0                   	// #0
  409d48:	bl	4027a0 <dcgettext@plt>
  409d4c:	str	x0, [x20, #24]
  409d50:	mov	w2, #0x5                   	// #5
  409d54:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  409d58:	add	x1, x1, #0xa0
  409d5c:	mov	x0, #0x0                   	// #0
  409d60:	bl	4027a0 <dcgettext@plt>
  409d64:	str	x0, [x20, #8]
  409d68:	bl	410740 <wcrtomb@plt+0xde70>
  409d6c:	str	x0, [x20, #16]
  409d70:	add	x0, sp, #0x28
  409d74:	bl	402460 <sigemptyset@plt>
  409d78:	mov	w0, #0x4                   	// #4
  409d7c:	movk	w0, #0xc800, lsl #16
  409d80:	str	w0, [sp, #168]
  409d84:	adrp	x0, 409000 <wcrtomb@plt+0x6730>
  409d88:	add	x0, x0, #0xc54
  409d8c:	str	x0, [sp, #32]
  409d90:	mov	x2, #0x0                   	// #0
  409d94:	add	x1, sp, #0x20
  409d98:	mov	w0, #0xb                   	// #11
  409d9c:	bl	402540 <sigaction@plt>
  409da0:	ldp	x19, x20, [sp, #16]
  409da4:	ldp	x29, x30, [sp], #208
  409da8:	ret
  409dac:	cmp	x0, x1
  409db0:	b.eq	409e04 <wcrtomb@plt+0x7534>  // b.none
  409db4:	mov	x4, #0x0                   	// #0
  409db8:	ldrb	w2, [x0, x4]
  409dbc:	sub	w5, w2, #0x41
  409dc0:	add	w3, w2, #0x20
  409dc4:	cmp	w5, #0x1a
  409dc8:	csel	w2, w3, w2, cc  // cc = lo, ul, last
  409dcc:	ldrb	w3, [x1, x4]
  409dd0:	sub	w6, w3, #0x41
  409dd4:	add	w5, w3, #0x20
  409dd8:	cmp	w6, #0x1a
  409ddc:	csel	w3, w5, w3, cc  // cc = lo, ul, last
  409de0:	and	w5, w3, #0xff
  409de4:	ands	w6, w2, #0xff
  409de8:	b.eq	409df8 <wcrtomb@plt+0x7528>  // b.none
  409dec:	add	x4, x4, #0x1
  409df0:	cmp	w6, w5
  409df4:	b.eq	409db8 <wcrtomb@plt+0x74e8>  // b.none
  409df8:	and	w2, w2, #0xff
  409dfc:	sub	w0, w2, w3, uxtb
  409e00:	ret
  409e04:	mov	w0, #0x0                   	// #0
  409e08:	b	409e00 <wcrtomb@plt+0x7530>
  409e0c:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409e10:	str	x0, [x1, #1904]
  409e14:	ret
  409e18:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409e1c:	strb	w0, [x1, #1912]
  409e20:	ret
  409e24:	stp	x29, x30, [sp, #-48]!
  409e28:	mov	x29, sp
  409e2c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409e30:	ldr	x0, [x0, #1096]
  409e34:	bl	423600 <_obstack_memory_used@@Base+0xc818>
  409e38:	cbz	w0, 409e58 <wcrtomb@plt+0x7588>
  409e3c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409e40:	ldrb	w0, [x0, #1912]
  409e44:	cbz	w0, 409e70 <wcrtomb@plt+0x75a0>
  409e48:	bl	402840 <__errno_location@plt>
  409e4c:	ldr	w0, [x0]
  409e50:	cmp	w0, #0x20
  409e54:	b.ne	409e70 <wcrtomb@plt+0x75a0>  // b.any
  409e58:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409e5c:	ldr	x0, [x0, #1072]
  409e60:	bl	423600 <_obstack_memory_used@@Base+0xc818>
  409e64:	cbnz	w0, 409ef4 <wcrtomb@plt+0x7624>
  409e68:	ldp	x29, x30, [sp], #48
  409e6c:	ret
  409e70:	stp	x19, x20, [sp, #16]
  409e74:	str	x21, [sp, #32]
  409e78:	mov	w2, #0x5                   	// #5
  409e7c:	adrp	x1, 424000 <_obstack_memory_used@@Base+0xd218>
  409e80:	add	x1, x1, #0x38
  409e84:	mov	x0, #0x0                   	// #0
  409e88:	bl	4027a0 <dcgettext@plt>
  409e8c:	mov	x19, x0
  409e90:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  409e94:	ldr	x20, [x0, #1904]
  409e98:	cbz	x20, 409ed4 <wcrtomb@plt+0x7604>
  409e9c:	bl	402840 <__errno_location@plt>
  409ea0:	ldr	w21, [x0]
  409ea4:	mov	x0, x20
  409ea8:	bl	4137bc <wcrtomb@plt+0x10eec>
  409eac:	mov	x4, x19
  409eb0:	mov	x3, x0
  409eb4:	adrp	x2, 424000 <_obstack_memory_used@@Base+0xd218>
  409eb8:	add	x2, x2, #0x28
  409ebc:	mov	w1, w21
  409ec0:	mov	w0, #0x0                   	// #0
  409ec4:	bl	4022f0 <error@plt>
  409ec8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409ecc:	ldr	w0, [x0, #968]
  409ed0:	bl	4022a0 <_exit@plt>
  409ed4:	bl	402840 <__errno_location@plt>
  409ed8:	mov	x3, x19
  409edc:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  409ee0:	add	x2, x2, #0xeb0
  409ee4:	ldr	w1, [x0]
  409ee8:	mov	w0, #0x0                   	// #0
  409eec:	bl	4022f0 <error@plt>
  409ef0:	b	409ec8 <wcrtomb@plt+0x75f8>
  409ef4:	stp	x19, x20, [sp, #16]
  409ef8:	str	x21, [sp, #32]
  409efc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  409f00:	ldr	w0, [x0, #968]
  409f04:	bl	4022a0 <_exit@plt>
  409f08:	and	w4, w0, #0x7
  409f0c:	ands	w3, w2, #0x1
  409f10:	csel	w3, w4, w3, ne  // ne = any
  409f14:	ubfx	x5, x0, #3, #3
  409f18:	ands	w4, w2, #0x2
  409f1c:	csel	w4, w5, w4, ne  // ne = any
  409f20:	orr	w3, w3, w4
  409f24:	ubfx	x0, x0, #6, #3
  409f28:	ands	w2, w2, #0x4
  409f2c:	csel	w2, w0, w2, ne  // ne = any
  409f30:	orr	w2, w3, w2
  409f34:	tst	w2, w1
  409f38:	cset	w0, ne  // ne = any
  409f3c:	ret
  409f40:	stp	x29, x30, [sp, #-16]!
  409f44:	mov	x29, sp
  409f48:	ldr	x3, [x3, #296]
  409f4c:	add	x2, x2, x2, lsl #2
  409f50:	add	x3, x3, x2, lsl #4
  409f54:	mov	w2, w1
  409f58:	mov	w1, w0
  409f5c:	ldrh	w0, [x3, #34]
  409f60:	bl	409f08 <wcrtomb@plt+0x7638>
  409f64:	ldp	x29, x30, [sp], #16
  409f68:	ret
  409f6c:	lsr	w2, w0, #6
  409f70:	ldr	x1, [x1, x2, lsl #3]
  409f74:	lsr	x0, x1, x0
  409f78:	and	w0, w0, #0x1
  409f7c:	ret
  409f80:	lsr	w3, w0, #6
  409f84:	mov	x2, #0x1                   	// #1
  409f88:	lsl	x2, x2, x0
  409f8c:	ldr	x0, [x1, x3, lsl #3]
  409f90:	orr	x0, x0, x2
  409f94:	str	x0, [x1, x3, lsl #3]
  409f98:	ret
  409f9c:	stp	x29, x30, [sp, #-48]!
  409fa0:	mov	x29, sp
  409fa4:	str	x21, [sp, #32]
  409fa8:	mov	x21, x0
  409fac:	ldr	x0, [x0, #144]
  409fb0:	add	x0, x0, x1, lsl #3
  409fb4:	ldur	x2, [x0, #-8]
  409fb8:	cmp	x2, #0x103
  409fbc:	b.le	40a004 <wcrtomb@plt+0x7734>
  409fc0:	sub	x2, x2, #0x105
  409fc4:	mov	x0, #0x1                   	// #1
  409fc8:	cmp	x2, x0
  409fcc:	b.hi	40a010 <wcrtomb@plt+0x7740>  // b.pmore
  409fd0:	stp	x19, x20, [sp, #16]
  409fd4:	sub	x20, x1, #0x1
  409fd8:	mov	x1, x20
  409fdc:	mov	x0, x21
  409fe0:	bl	409f9c <wcrtomb@plt+0x76cc>
  409fe4:	mov	x19, x0
  409fe8:	sub	x1, x20, x0
  409fec:	mov	x0, x21
  409ff0:	bl	409f9c <wcrtomb@plt+0x76cc>
  409ff4:	add	x19, x19, #0x1
  409ff8:	add	x0, x19, x0
  409ffc:	ldp	x19, x20, [sp, #16]
  40a000:	b	40a010 <wcrtomb@plt+0x7740>
  40a004:	mov	x0, #0x1                   	// #1
  40a008:	cmp	x2, #0x100
  40a00c:	b.gt	40a01c <wcrtomb@plt+0x774c>
  40a010:	ldr	x21, [sp, #32]
  40a014:	ldp	x29, x30, [sp], #48
  40a018:	ret
  40a01c:	sub	x1, x1, #0x1
  40a020:	mov	x0, x21
  40a024:	bl	409f9c <wcrtomb@plt+0x76cc>
  40a028:	add	x0, x0, #0x1
  40a02c:	b	40a010 <wcrtomb@plt+0x7740>
  40a030:	ldr	x9, [x1, #8]
  40a034:	cmp	x9, #0x0
  40a038:	b.le	40a0cc <wcrtomb@plt+0x77fc>
  40a03c:	ldr	x6, [x1]
  40a040:	mov	x5, x9
  40a044:	mov	x4, #0x0                   	// #0
  40a048:	b	40a05c <wcrtomb@plt+0x778c>
  40a04c:	b.eq	40a080 <wcrtomb@plt+0x77b0>  // b.none
  40a050:	mov	x5, x2
  40a054:	cmp	x4, x5
  40a058:	b.ge	40a0c4 <wcrtomb@plt+0x77f4>  // b.tcont
  40a05c:	add	x2, x4, x5
  40a060:	asr	x2, x2, #1
  40a064:	lsl	x3, x2, #4
  40a068:	add	x8, x6, x3
  40a06c:	ldr	x3, [x6, x3]
  40a070:	cmp	x3, x0
  40a074:	b.ge	40a04c <wcrtomb@plt+0x777c>  // b.tcont
  40a078:	add	x4, x2, #0x1
  40a07c:	b	40a054 <wcrtomb@plt+0x7784>
  40a080:	ldr	w0, [x8, #8]
  40a084:	add	x4, x2, #0x1
  40a088:	cmp	x9, x4
  40a08c:	b.le	40a0bc <wcrtomb@plt+0x77ec>
  40a090:	add	x3, x2, #0x1
  40a094:	lsl	x3, x3, #4
  40a098:	ldr	x2, [x1]
  40a09c:	add	x2, x2, x3
  40a0a0:	ldp	x6, x7, [x2]
  40a0a4:	stp	x6, x7, [x2, #-16]
  40a0a8:	mov	x2, x4
  40a0ac:	add	x4, x4, #0x1
  40a0b0:	add	x3, x3, #0x10
  40a0b4:	cmp	x4, x9
  40a0b8:	b.ne	40a098 <wcrtomb@plt+0x77c8>  // b.any
  40a0bc:	str	x2, [x1, #8]
  40a0c0:	b	40a0c8 <wcrtomb@plt+0x77f8>
  40a0c4:	mov	w0, #0x0                   	// #0
  40a0c8:	ret
  40a0cc:	mov	w0, #0x0                   	// #0
  40a0d0:	b	40a0c8 <wcrtomb@plt+0x77f8>
  40a0d4:	ldr	x3, [x1, #8]
  40a0d8:	cmp	x3, #0x0
  40a0dc:	b.le	40a108 <wcrtomb@plt+0x7838>
  40a0e0:	ldr	x4, [x0, #344]
  40a0e4:	ldr	x1, [x1]
  40a0e8:	add	x3, x1, x3, lsl #4
  40a0ec:	mov	w0, #0x0                   	// #0
  40a0f0:	ldr	x2, [x1], #16
  40a0f4:	ldr	w2, [x4, x2, lsl #2]
  40a0f8:	orr	w0, w0, w2
  40a0fc:	cmp	x1, x3
  40a100:	b.ne	40a0f0 <wcrtomb@plt+0x7820>  // b.any
  40a104:	ret
  40a108:	mov	w0, #0x0                   	// #0
  40a10c:	b	40a104 <wcrtomb@plt+0x7834>
  40a110:	ldr	x2, [x0]
  40a114:	ldr	x0, [x1]
  40a118:	cmp	x2, x0
  40a11c:	b.lt	40a12c <wcrtomb@plt+0x785c>  // b.tstop
  40a120:	cmp	x2, x0
  40a124:	cset	w0, gt
  40a128:	ret
  40a12c:	mov	w0, #0xffffffff            	// #-1
  40a130:	b	40a128 <wcrtomb@plt+0x7858>
  40a134:	mov	x0, x1
  40a138:	mov	w1, #0x1                   	// #1
  40a13c:	strb	w1, [x5]
  40a140:	ret
  40a144:	stp	x29, x30, [sp, #-64]!
  40a148:	mov	x29, sp
  40a14c:	stp	x19, x20, [sp, #16]
  40a150:	str	x21, [sp, #32]
  40a154:	mov	x20, x0
  40a158:	mov	x19, x3
  40a15c:	ldrb	w3, [x1]
  40a160:	add	x3, x19, x3, lsl #2
  40a164:	ldr	w21, [x3, #1308]
  40a168:	cmn	w21, #0x1
  40a16c:	b.eq	40a188 <wcrtomb@plt+0x78b8>  // b.none
  40a170:	str	w21, [x20]
  40a174:	mov	w0, #0x1                   	// #1
  40a178:	ldp	x19, x20, [sp, #16]
  40a17c:	ldr	x21, [sp, #32]
  40a180:	ldp	x29, x30, [sp], #64
  40a184:	ret
  40a188:	add	x3, x19, #0x110
  40a18c:	add	x0, sp, #0x3c
  40a190:	bl	4169f8 <wcrtomb@plt+0x14128>
  40a194:	sub	x1, x0, #0x1
  40a198:	cmn	x1, #0x4
  40a19c:	b.hi	40a1ac <wcrtomb@plt+0x78dc>  // b.pmore
  40a1a0:	ldr	w1, [sp, #60]
  40a1a4:	str	w1, [x20]
  40a1a8:	b	40a178 <wcrtomb@plt+0x78a8>
  40a1ac:	str	xzr, [x19, #272]
  40a1b0:	b	40a170 <wcrtomb@plt+0x78a0>
  40a1b4:	stp	x29, x30, [sp, #-32]!
  40a1b8:	mov	x29, sp
  40a1bc:	str	x19, [sp, #16]
  40a1c0:	mov	x19, x0
  40a1c4:	mov	x3, x0
  40a1c8:	ldr	x2, [x0, #40]
  40a1cc:	ldr	x1, [x0, #32]
  40a1d0:	add	x0, x0, #0x48
  40a1d4:	bl	40a144 <wcrtomb@plt+0x7874>
  40a1d8:	mov	w1, w0
  40a1dc:	cmp	w0, #0x1
  40a1e0:	b.ne	40a214 <wcrtomb@plt+0x7944>  // b.any
  40a1e4:	ldr	x0, [x19, #32]
  40a1e8:	ldrb	w0, [x0]
  40a1ec:	sxtw	x1, w1
  40a1f0:	ldr	x2, [x19, #32]
  40a1f4:	add	x2, x2, x1
  40a1f8:	str	x2, [x19, #32]
  40a1fc:	ldr	x2, [x19, #40]
  40a200:	sub	x1, x2, x1
  40a204:	str	x1, [x19, #40]
  40a208:	ldr	x19, [sp, #16]
  40a20c:	ldp	x29, x30, [sp], #32
  40a210:	ret
  40a214:	mov	w0, #0xffffffff            	// #-1
  40a218:	b	40a1ec <wcrtomb@plt+0x791c>
  40a21c:	stp	x29, x30, [sp, #-16]!
  40a220:	mov	x29, sp
  40a224:	ldr	x1, [x0, #40]
  40a228:	cbz	x1, 40a238 <wcrtomb@plt+0x7968>
  40a22c:	bl	40a1b4 <wcrtomb@plt+0x78e4>
  40a230:	ldp	x29, x30, [sp], #16
  40a234:	ret
  40a238:	mov	w2, #0x5                   	// #5
  40a23c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40a240:	add	x1, x1, #0xb0
  40a244:	mov	x0, #0x0                   	// #0
  40a248:	bl	4027a0 <dcgettext@plt>
  40a24c:	bl	402b2c <wcrtomb@plt+0x25c>
  40a250:	stp	xzr, xzr, [x0]
  40a254:	stp	xzr, xzr, [x0, #16]
  40a258:	ret
  40a25c:	stp	x29, x30, [sp, #-32]!
  40a260:	mov	x29, sp
  40a264:	stp	x19, x20, [sp, #16]
  40a268:	mov	x20, x1
  40a26c:	ldr	x5, [x1]
  40a270:	asr	x19, x5, #1
  40a274:	adds	x19, x5, x19
  40a278:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  40a27c:	csel	x19, x19, x1, vc
  40a280:	tbnz	x3, #63, 40a28c <wcrtomb@plt+0x79bc>
  40a284:	cmp	x19, x3
  40a288:	csel	x19, x19, x3, le
  40a28c:	mul	x6, x19, x4
  40a290:	smulh	x1, x19, x4
  40a294:	cmp	x1, x6, asr #63
  40a298:	b.ne	40a2b0 <wcrtomb@plt+0x79e0>  // b.any
  40a29c:	mov	x1, x6
  40a2a0:	cmp	x6, #0x7f
  40a2a4:	b.gt	40a2c0 <wcrtomb@plt+0x79f0>
  40a2a8:	mov	x1, #0x80                  	// #128
  40a2ac:	b	40a2b4 <wcrtomb@plt+0x79e4>
  40a2b0:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  40a2b4:	sdiv	x19, x1, x4
  40a2b8:	msub	x6, x19, x4, x1
  40a2bc:	sub	x1, x1, x6
  40a2c0:	cbz	x0, 40a310 <wcrtomb@plt+0x7a40>
  40a2c4:	sub	x6, x19, x5
  40a2c8:	cmp	x6, x2
  40a2cc:	b.ge	40a2fc <wcrtomb@plt+0x7a2c>  // b.tcont
  40a2d0:	adds	x5, x5, x2
  40a2d4:	mov	x19, x5
  40a2d8:	b.vs	40a318 <wcrtomb@plt+0x7a48>
  40a2dc:	cmp	x3, #0x0
  40a2e0:	ccmp	x5, x3, #0x4, ge  // ge = tcont
  40a2e4:	b.gt	40a318 <wcrtomb@plt+0x7a48>
  40a2e8:	mul	x2, x5, x4
  40a2ec:	smulh	x5, x5, x4
  40a2f0:	mov	x1, x2
  40a2f4:	cmp	x5, x2, asr #63
  40a2f8:	b.ne	40a318 <wcrtomb@plt+0x7a48>  // b.any
  40a2fc:	bl	414068 <wcrtomb@plt+0x11798>
  40a300:	str	x19, [x20]
  40a304:	ldp	x19, x20, [sp, #16]
  40a308:	ldp	x29, x30, [sp], #32
  40a30c:	ret
  40a310:	str	xzr, [x20]
  40a314:	b	40a2c4 <wcrtomb@plt+0x79f4>
  40a318:	bl	414264 <wcrtomb@plt+0x11994>
  40a31c:	mov	x5, x2
  40a320:	ldr	x2, [x2]
  40a324:	cmp	x2, x1
  40a328:	b.le	40a330 <wcrtomb@plt+0x7a60>
  40a32c:	ret
  40a330:	stp	x29, x30, [sp, #-16]!
  40a334:	mov	x29, sp
  40a338:	mov	x2, #0x1                   	// #1
  40a33c:	mov	x1, x5
  40a340:	bl	40a25c <wcrtomb@plt+0x798c>
  40a344:	ldp	x29, x30, [sp], #16
  40a348:	ret
  40a34c:	stp	x29, x30, [sp, #-48]!
  40a350:	mov	x29, sp
  40a354:	stp	x19, x20, [sp, #16]
  40a358:	str	x21, [sp, #32]
  40a35c:	mov	x21, x0
  40a360:	mov	x20, x1
  40a364:	ldr	x1, [x0, #8]
  40a368:	cmp	x1, #0x0
  40a36c:	b.le	40a408 <wcrtomb@plt+0x7b38>
  40a370:	ldr	x5, [x0]
  40a374:	mov	x19, #0x0                   	// #0
  40a378:	b	40a390 <wcrtomb@plt+0x7ac0>
  40a37c:	cbz	x4, 40a3f4 <wcrtomb@plt+0x7b24>
  40a380:	add	x19, x19, #0x1
  40a384:	add	x5, x5, #0x20
  40a388:	cmp	x1, x19
  40a38c:	b.eq	40a3bc <wcrtomb@plt+0x7aec>  // b.none
  40a390:	mov	x7, x5
  40a394:	mov	x2, #0x0                   	// #0
  40a398:	mov	x4, #0x0                   	// #0
  40a39c:	ldr	x3, [x20, x2]
  40a3a0:	ldr	x6, [x7, x2]
  40a3a4:	eor	x3, x3, x6
  40a3a8:	orr	x4, x4, x3
  40a3ac:	add	x2, x2, #0x8
  40a3b0:	cmp	x2, #0x20
  40a3b4:	b.ne	40a39c <wcrtomb@plt+0x7acc>  // b.any
  40a3b8:	b	40a37c <wcrtomb@plt+0x7aac>
  40a3bc:	mov	x19, x1
  40a3c0:	mov	x2, x21
  40a3c4:	ldr	x0, [x2], #16
  40a3c8:	mov	x4, #0x20                  	// #32
  40a3cc:	mov	x3, #0xfffffffffffffeeb    	// #-277
  40a3d0:	movk	x3, #0x7fff, lsl #48
  40a3d4:	bl	40a31c <wcrtomb@plt+0x7a4c>
  40a3d8:	str	x0, [x21]
  40a3dc:	ldr	x1, [x21, #8]
  40a3e0:	add	x1, x1, #0x1
  40a3e4:	str	x1, [x21, #8]
  40a3e8:	add	x0, x0, x19, lsl #5
  40a3ec:	ld1	{v0.16b, v1.16b}, [x20]
  40a3f0:	st1	{v0.16b, v1.16b}, [x0]
  40a3f4:	mov	x0, x19
  40a3f8:	ldp	x19, x20, [sp, #16]
  40a3fc:	ldr	x21, [sp, #32]
  40a400:	ldp	x29, x30, [sp], #48
  40a404:	ret
  40a408:	mov	x19, #0x0                   	// #0
  40a40c:	b	40a3c0 <wcrtomb@plt+0x7af0>
  40a410:	stp	x29, x30, [sp, #-64]!
  40a414:	mov	x29, sp
  40a418:	stp	x19, x20, [sp, #16]
  40a41c:	stp	x21, x22, [sp, #32]
  40a420:	str	x23, [sp, #48]
  40a424:	mov	x22, x0
  40a428:	mov	x23, x1
  40a42c:	mov	x21, x2
  40a430:	ldr	x20, [x2, #8]
  40a434:	cmp	x20, #0x0
  40a438:	b.le	40a514 <wcrtomb@plt+0x7c44>
  40a43c:	mov	x1, x0
  40a440:	ldr	x0, [x2]
  40a444:	mov	x5, x20
  40a448:	mov	x19, #0x0                   	// #0
  40a44c:	b	40a460 <wcrtomb@plt+0x7b90>
  40a450:	b.eq	40a484 <wcrtomb@plt+0x7bb4>  // b.none
  40a454:	mov	x5, x3
  40a458:	cmp	x19, x5
  40a45c:	b.ge	40a494 <wcrtomb@plt+0x7bc4>  // b.tcont
  40a460:	add	x3, x19, x5
  40a464:	asr	x3, x3, #1
  40a468:	lsl	x4, x3, #4
  40a46c:	add	x2, x0, x4
  40a470:	ldr	x4, [x0, x4]
  40a474:	cmp	x4, x1
  40a478:	b.ge	40a450 <wcrtomb@plt+0x7b80>  // b.tcont
  40a47c:	add	x19, x3, #0x1
  40a480:	b	40a458 <wcrtomb@plt+0x7b88>
  40a484:	ldr	w0, [x2, #8]
  40a488:	orr	w23, w0, w23
  40a48c:	str	w23, [x2, #8]
  40a490:	b	40a500 <wcrtomb@plt+0x7c30>
  40a494:	mov	x4, #0x10                  	// #16
  40a498:	mov	x3, #0xffffffffffffffff    	// #-1
  40a49c:	add	x2, x21, x4
  40a4a0:	mov	x1, x20
  40a4a4:	bl	40a31c <wcrtomb@plt+0x7a4c>
  40a4a8:	str	x0, [x21]
  40a4ac:	cmp	x19, x20
  40a4b0:	b.ge	40a4e0 <wcrtomb@plt+0x7c10>  // b.tcont
  40a4b4:	lsl	x1, x20, #4
  40a4b8:	sub	x1, x1, #0x10
  40a4bc:	ldr	x0, [x21]
  40a4c0:	add	x2, x0, x20, lsl #4
  40a4c4:	add	x0, x0, x1
  40a4c8:	ldp	x4, x5, [x0]
  40a4cc:	stp	x4, x5, [x2]
  40a4d0:	sub	x20, x20, #0x1
  40a4d4:	sub	x1, x1, #0x10
  40a4d8:	cmp	x19, x20
  40a4dc:	b.ne	40a4bc <wcrtomb@plt+0x7bec>  // b.any
  40a4e0:	ldr	x0, [x21]
  40a4e4:	lsl	x19, x19, #4
  40a4e8:	add	x1, x0, x19
  40a4ec:	str	x22, [x0, x19]
  40a4f0:	str	x23, [x1, #8]
  40a4f4:	ldr	x0, [x21, #8]
  40a4f8:	add	x0, x0, #0x1
  40a4fc:	str	x0, [x21, #8]
  40a500:	ldp	x19, x20, [sp, #16]
  40a504:	ldp	x21, x22, [sp, #32]
  40a508:	ldr	x23, [sp, #48]
  40a50c:	ldp	x29, x30, [sp], #64
  40a510:	ret
  40a514:	ldr	x0, [x2], #16
  40a518:	mov	x4, #0x10                  	// #16
  40a51c:	mov	x3, #0xffffffffffffffff    	// #-1
  40a520:	mov	x1, x20
  40a524:	bl	40a31c <wcrtomb@plt+0x7a4c>
  40a528:	str	x0, [x21]
  40a52c:	mov	x19, #0x0                   	// #0
  40a530:	b	40a4e0 <wcrtomb@plt+0x7c10>
  40a534:	stp	x29, x30, [sp, #-48]!
  40a538:	mov	x29, sp
  40a53c:	stp	x19, x20, [sp, #16]
  40a540:	str	x21, [sp, #32]
  40a544:	mov	x21, x0
  40a548:	mov	x20, x1
  40a54c:	mov	x19, x2
  40a550:	mov	x4, #0x10                  	// #16
  40a554:	mov	x3, #0xffffffffffffffff    	// #-1
  40a558:	add	x2, x2, x4
  40a55c:	ldr	x1, [x19, #8]
  40a560:	ldr	x0, [x19]
  40a564:	bl	40a31c <wcrtomb@plt+0x7a4c>
  40a568:	str	x0, [x19]
  40a56c:	ldr	x2, [x19, #8]
  40a570:	add	x1, x2, #0x1
  40a574:	str	x1, [x19, #8]
  40a578:	add	x2, x0, x2, lsl #4
  40a57c:	str	x21, [x2]
  40a580:	str	x20, [x2, #8]
  40a584:	ldp	x19, x20, [sp, #16]
  40a588:	ldr	x21, [sp, #32]
  40a58c:	ldp	x29, x30, [sp], #48
  40a590:	ret
  40a594:	stp	x29, x30, [sp, #-48]!
  40a598:	mov	x29, sp
  40a59c:	stp	x19, x20, [sp, #16]
  40a5a0:	str	x21, [sp, #32]
  40a5a4:	mov	x19, x0
  40a5a8:	mov	x20, x1
  40a5ac:	and	w21, w2, #0xff
  40a5b0:	ldr	x1, [x0, #160]
  40a5b4:	ldr	x0, [x0, #152]
  40a5b8:	cmp	x1, x0
  40a5bc:	b.eq	40a648 <wcrtomb@plt+0x7d78>  // b.none
  40a5c0:	ldrb	w0, [x19, #1048]
  40a5c4:	cbz	w0, 40a5d4 <wcrtomb@plt+0x7d04>
  40a5c8:	ldr	x1, [x19, #280]
  40a5cc:	ldr	x0, [x19, #152]
  40a5d0:	strb	w21, [x1, x0]
  40a5d4:	ldr	x1, [x19, #144]
  40a5d8:	ldr	x0, [x19, #152]
  40a5dc:	add	x2, x0, #0x1
  40a5e0:	str	x2, [x19, #152]
  40a5e4:	str	x20, [x1, x0, lsl #3]
  40a5e8:	cmp	x20, #0x106
  40a5ec:	b.gt	40a688 <wcrtomb@plt+0x7db8>
  40a5f0:	cmp	x20, #0x104
  40a5f4:	b.gt	40a698 <wcrtomb@plt+0x7dc8>
  40a5f8:	cmp	x20, #0x100
  40a5fc:	b.eq	40a618 <wcrtomb@plt+0x7d48>  // b.none
  40a600:	sub	x20, x20, #0x101
  40a604:	cmp	x20, #0x2
  40a608:	b.ls	40a624 <wcrtomb@plt+0x7d54>  // b.plast
  40a60c:	ldr	x0, [x19, #176]
  40a610:	add	x0, x0, #0x1
  40a614:	str	x0, [x19, #176]
  40a618:	ldr	x0, [x19, #136]
  40a61c:	add	x0, x0, #0x1
  40a620:	str	x0, [x19, #136]
  40a624:	ldr	x0, [x19, #136]
  40a628:	ldr	x1, [x19, #168]
  40a62c:	cmp	x0, x1
  40a630:	b.le	40a638 <wcrtomb@plt+0x7d68>
  40a634:	str	x0, [x19, #168]
  40a638:	ldp	x19, x20, [sp, #16]
  40a63c:	ldr	x21, [sp, #32]
  40a640:	ldp	x29, x30, [sp], #48
  40a644:	ret
  40a648:	mov	x4, #0x8                   	// #8
  40a64c:	mov	x3, #0xffffffffffffffff    	// #-1
  40a650:	mov	x2, #0x1                   	// #1
  40a654:	add	x1, x19, #0xa0
  40a658:	ldr	x0, [x19, #144]
  40a65c:	bl	40a25c <wcrtomb@plt+0x798c>
  40a660:	str	x0, [x19, #144]
  40a664:	ldrb	w0, [x19, #1048]
  40a668:	cbz	w0, 40a5d4 <wcrtomb@plt+0x7d04>
  40a66c:	ldr	x0, [x19, #280]
  40a670:	ldr	x1, [x19, #160]
  40a674:	tbnz	x1, #63, 40a684 <wcrtomb@plt+0x7db4>
  40a678:	bl	414068 <wcrtomb@plt+0x11798>
  40a67c:	str	x0, [x19, #280]
  40a680:	b	40a5c0 <wcrtomb@plt+0x7cf0>
  40a684:	bl	414264 <wcrtomb@plt+0x11994>
  40a688:	cmp	x20, #0x112
  40a68c:	b.ne	40a60c <wcrtomb@plt+0x7d3c>  // b.any
  40a690:	strb	wzr, [x19, #192]
  40a694:	b	40a60c <wcrtomb@plt+0x7d3c>
  40a698:	ldr	x0, [x19, #136]
  40a69c:	sub	x0, x0, #0x1
  40a6a0:	str	x0, [x19, #136]
  40a6a4:	b	40a624 <wcrtomb@plt+0x7d54>
  40a6a8:	stp	x29, x30, [sp, #-64]!
  40a6ac:	mov	x29, sp
  40a6b0:	stp	x19, x20, [sp, #16]
  40a6b4:	stp	x21, x22, [sp, #32]
  40a6b8:	mov	x19, x0
  40a6bc:	mov	x21, x2
  40a6c0:	ldrb	w0, [x0, #1048]
  40a6c4:	cbnz	w0, 40a714 <wcrtomb@plt+0x7e44>
  40a6c8:	str	x23, [sp, #48]
  40a6cc:	lsl	x20, x1, #3
  40a6d0:	mov	x22, #0x0                   	// #0
  40a6d4:	mov	w23, #0x3                   	// #3
  40a6d8:	cmp	x2, #0x0
  40a6dc:	b.le	40a70c <wcrtomb@plt+0x7e3c>
  40a6e0:	ldr	x0, [x19, #144]
  40a6e4:	mov	w2, w23
  40a6e8:	ldr	x1, [x0, x20]
  40a6ec:	mov	x0, x19
  40a6f0:	bl	40a594 <wcrtomb@plt+0x7cc4>
  40a6f4:	add	x22, x22, #0x1
  40a6f8:	add	x20, x20, #0x8
  40a6fc:	cmp	x21, x22
  40a700:	b.ne	40a6e0 <wcrtomb@plt+0x7e10>  // b.any
  40a704:	ldr	x23, [sp, #48]
  40a708:	b	40a748 <wcrtomb@plt+0x7e78>
  40a70c:	ldr	x23, [sp, #48]
  40a710:	b	40a748 <wcrtomb@plt+0x7e78>
  40a714:	cmp	x2, #0x0
  40a718:	b.le	40a748 <wcrtomb@plt+0x7e78>
  40a71c:	mov	x20, x1
  40a720:	add	x21, x2, x1
  40a724:	ldr	x1, [x19, #280]
  40a728:	ldr	x0, [x19, #144]
  40a72c:	ldrb	w2, [x1, x20]
  40a730:	ldr	x1, [x0, x20, lsl #3]
  40a734:	mov	x0, x19
  40a738:	bl	40a594 <wcrtomb@plt+0x7cc4>
  40a73c:	add	x20, x20, #0x1
  40a740:	cmp	x21, x20
  40a744:	b.ne	40a724 <wcrtomb@plt+0x7e54>  // b.any
  40a748:	ldp	x19, x20, [sp, #16]
  40a74c:	ldp	x21, x22, [sp, #32]
  40a750:	ldp	x29, x30, [sp], #64
  40a754:	ret
  40a758:	stp	x29, x30, [sp, #-80]!
  40a75c:	mov	x29, sp
  40a760:	stp	x19, x20, [sp, #16]
  40a764:	ldr	x19, [x0, #352]
  40a768:	ldr	x2, [x0, #304]
  40a76c:	cmp	x2, x19
  40a770:	b.le	40a8b0 <wcrtomb@plt+0x7fe0>
  40a774:	stp	x21, x22, [sp, #32]
  40a778:	str	x23, [sp, #48]
  40a77c:	mov	x20, x0
  40a780:	ldr	x0, [x0, #368]
  40a784:	mov	x1, #0x0                   	// #0
  40a788:	cbz	x0, 40a794 <wcrtomb@plt+0x7ec4>
  40a78c:	sub	x0, x0, #0x10
  40a790:	add	x1, x19, #0x2
  40a794:	str	x1, [sp, #72]
  40a798:	mov	x4, #0x8                   	// #8
  40a79c:	mov	x3, #0xffffffffffffffff    	// #-1
  40a7a0:	sub	x2, x2, x19
  40a7a4:	add	x1, sp, #0x48
  40a7a8:	bl	40a25c <wcrtomb@plt+0x798c>
  40a7ac:	str	xzr, [x0, #8]
  40a7b0:	str	xzr, [x0], #16
  40a7b4:	str	x0, [x20, #368]
  40a7b8:	ldr	x21, [sp, #72]
  40a7bc:	sub	x22, x21, #0x2
  40a7c0:	str	x22, [x20, #352]
  40a7c4:	ldr	x0, [x20, #376]
  40a7c8:	cmp	xzr, x22, lsr #61
  40a7cc:	cset	x1, ne  // ne = any
  40a7d0:	tst	x22, #0x1000000000000000
  40a7d4:	csinc	w1, w1, wzr, eq  // eq = none
  40a7d8:	cbnz	w1, 40a86c <wcrtomb@plt+0x7f9c>
  40a7dc:	lsl	x23, x22, #3
  40a7e0:	mov	x1, x23
  40a7e4:	bl	414068 <wcrtomb@plt+0x11798>
  40a7e8:	str	x0, [x20, #376]
  40a7ec:	ldr	x0, [x20, #384]
  40a7f0:	tbnz	x22, #63, 40a870 <wcrtomb@plt+0x7fa0>
  40a7f4:	mov	x1, x22
  40a7f8:	bl	414068 <wcrtomb@plt+0x11798>
  40a7fc:	str	x0, [x20, #384]
  40a800:	mov	x1, x23
  40a804:	ldr	x0, [x20, #392]
  40a808:	bl	414068 <wcrtomb@plt+0x11798>
  40a80c:	str	x0, [x20, #392]
  40a810:	ldrb	w0, [x20, #1048]
  40a814:	cbz	w0, 40a85c <wcrtomb@plt+0x7f8c>
  40a818:	ldr	x0, [x20, #432]
  40a81c:	sub	x1, x0, #0x10
  40a820:	cmp	x0, #0x0
  40a824:	csel	x0, x1, x0, ne  // ne = any
  40a828:	ldr	x1, [sp, #72]
  40a82c:	cmp	xzr, x1, lsr #61
  40a830:	cset	x2, ne  // ne = any
  40a834:	tst	x1, #0x1000000000000000
  40a838:	csinc	w2, w2, wzr, eq  // eq = none
  40a83c:	cbnz	w2, 40a874 <wcrtomb@plt+0x7fa4>
  40a840:	lsl	x1, x1, #3
  40a844:	bl	414068 <wcrtomb@plt+0x11798>
  40a848:	cbnz	x19, 40a854 <wcrtomb@plt+0x7f84>
  40a84c:	str	xzr, [x0, #8]
  40a850:	str	xzr, [x0]
  40a854:	add	x0, x0, #0x10
  40a858:	str	x0, [x20, #432]
  40a85c:	cmp	x22, x19
  40a860:	b.le	40a8bc <wcrtomb@plt+0x7fec>
  40a864:	sub	x1, x21, #0x2
  40a868:	b	40a884 <wcrtomb@plt+0x7fb4>
  40a86c:	bl	414264 <wcrtomb@plt+0x11994>
  40a870:	bl	414264 <wcrtomb@plt+0x11994>
  40a874:	bl	414264 <wcrtomb@plt+0x11994>
  40a878:	add	x19, x19, #0x1
  40a87c:	cmp	x19, x1
  40a880:	b.eq	40a8a8 <wcrtomb@plt+0x7fd8>  // b.none
  40a884:	ldr	x0, [x20, #368]
  40a888:	str	xzr, [x0, x19, lsl #3]
  40a88c:	ldr	x0, [x20, #376]
  40a890:	str	xzr, [x0, x19, lsl #3]
  40a894:	ldrb	w0, [x20, #1048]
  40a898:	cbz	w0, 40a878 <wcrtomb@plt+0x7fa8>
  40a89c:	ldr	x0, [x20, #432]
  40a8a0:	str	xzr, [x0, x19, lsl #3]
  40a8a4:	b	40a878 <wcrtomb@plt+0x7fa8>
  40a8a8:	ldp	x21, x22, [sp, #32]
  40a8ac:	ldr	x23, [sp, #48]
  40a8b0:	ldp	x19, x20, [sp, #16]
  40a8b4:	ldp	x29, x30, [sp], #80
  40a8b8:	ret
  40a8bc:	ldp	x21, x22, [sp, #32]
  40a8c0:	ldr	x23, [sp, #48]
  40a8c4:	b	40a8b0 <wcrtomb@plt+0x7fe0>
  40a8c8:	stp	x29, x30, [sp, #-48]!
  40a8cc:	mov	x29, sp
  40a8d0:	stp	x19, x20, [sp, #16]
  40a8d4:	stp	x21, x22, [sp, #32]
  40a8d8:	mov	w21, w0
  40a8dc:	mov	x22, x1
  40a8e0:	add	w0, w0, #0x80
  40a8e4:	cmp	w0, #0x17f
  40a8e8:	b.hi	40a8f8 <wcrtomb@plt+0x8028>  // b.pmore
  40a8ec:	bl	402510 <__ctype_toupper_loc@plt>
  40a8f0:	ldr	x0, [x0]
  40a8f4:	ldr	w21, [x0, w21, sxtw #2]
  40a8f8:	mov	x19, #0x0                   	// #0
  40a8fc:	b	40a914 <wcrtomb@plt+0x8044>
  40a900:	cmp	w21, w2
  40a904:	b.eq	40a938 <wcrtomb@plt+0x8068>  // b.none
  40a908:	add	x19, x19, #0x1
  40a90c:	cmp	x19, #0x100
  40a910:	b.eq	40a948 <wcrtomb@plt+0x8078>  // b.none
  40a914:	mov	w20, w19
  40a918:	mov	w2, w19
  40a91c:	add	w3, w19, #0x80
  40a920:	cmp	w3, #0x17f
  40a924:	b.hi	40a900 <wcrtomb@plt+0x8030>  // b.pmore
  40a928:	bl	402510 <__ctype_toupper_loc@plt>
  40a92c:	ldr	x0, [x0]
  40a930:	ldr	w2, [x0, x19, lsl #2]
  40a934:	b	40a900 <wcrtomb@plt+0x8030>
  40a938:	mov	x1, x22
  40a93c:	mov	w0, w20
  40a940:	bl	409f80 <wcrtomb@plt+0x76b0>
  40a944:	b	40a908 <wcrtomb@plt+0x8038>
  40a948:	ldp	x19, x20, [sp, #16]
  40a94c:	ldp	x21, x22, [sp, #32]
  40a950:	ldp	x29, x30, [sp], #48
  40a954:	ret
  40a958:	stp	x29, x30, [sp, #-96]!
  40a95c:	mov	x29, sp
  40a960:	stp	x19, x20, [sp, #16]
  40a964:	mov	x20, x0
  40a968:	str	xzr, [sp, #72]
  40a96c:	add	x2, sp, #0x48
  40a970:	add	x0, sp, #0x50
  40a974:	bl	4028d0 <wcrtomb@plt>
  40a978:	cmn	x0, #0x1
  40a97c:	b.eq	40aa10 <wcrtomb@plt+0x8140>  // b.none
  40a980:	stp	x21, x22, [sp, #32]
  40a984:	stp	x23, x24, [sp, #48]
  40a988:	mov	x19, x0
  40a98c:	mov	w22, w0
  40a990:	ldrb	w1, [sp, #80]
  40a994:	cmp	w0, #0x1
  40a998:	b.eq	40aa04 <wcrtomb@plt+0x8134>  // b.none
  40a99c:	mov	w2, #0x1                   	// #1
  40a9a0:	mov	x0, x20
  40a9a4:	bl	40a594 <wcrtomb@plt+0x7cc4>
  40a9a8:	cmp	w19, #0x1
  40a9ac:	b.le	40aa28 <wcrtomb@plt+0x8158>
  40a9b0:	add	x21, sp, #0x51
  40a9b4:	mov	w19, #0x1                   	// #1
  40a9b8:	sub	w24, w22, #0x1
  40a9bc:	mov	x23, #0x105                 	// #261
  40a9c0:	cmp	w24, w19
  40a9c4:	cset	w2, eq  // eq = none
  40a9c8:	ubfiz	w2, w2, #1, #7
  40a9cc:	ldrb	w1, [x21], #1
  40a9d0:	mov	x0, x20
  40a9d4:	bl	40a594 <wcrtomb@plt+0x7cc4>
  40a9d8:	mov	x1, x23
  40a9dc:	mov	x0, x20
  40a9e0:	bl	40aa34 <wcrtomb@plt+0x8164>
  40a9e4:	add	w19, w19, #0x1
  40a9e8:	cmp	w22, w19
  40a9ec:	b.ne	40a9c0 <wcrtomb@plt+0x80f0>  // b.any
  40a9f0:	ldp	x21, x22, [sp, #32]
  40a9f4:	ldp	x23, x24, [sp, #48]
  40a9f8:	ldp	x19, x20, [sp, #16]
  40a9fc:	ldp	x29, x30, [sp], #96
  40aa00:	ret
  40aa04:	ldp	x21, x22, [sp, #32]
  40aa08:	ldp	x23, x24, [sp, #48]
  40aa0c:	b	40aa18 <wcrtomb@plt+0x8148>
  40aa10:	strb	wzr, [sp, #80]
  40aa14:	mov	x1, #0x0                   	// #0
  40aa18:	mov	w2, #0x3                   	// #3
  40aa1c:	mov	x0, x20
  40aa20:	bl	40a594 <wcrtomb@plt+0x7cc4>
  40aa24:	b	40a9f8 <wcrtomb@plt+0x8128>
  40aa28:	ldp	x21, x22, [sp, #32]
  40aa2c:	ldp	x23, x24, [sp, #48]
  40aa30:	b	40a9f8 <wcrtomb@plt+0x8128>
  40aa34:	stp	x29, x30, [sp, #-48]!
  40aa38:	mov	x29, sp
  40aa3c:	stp	x19, x20, [sp, #16]
  40aa40:	mov	x19, x0
  40aa44:	cmp	x1, #0x113
  40aa48:	cset	w2, eq  // eq = none
  40aa4c:	ldrb	w0, [x0, #1048]
  40aa50:	tst	w2, w0
  40aa54:	b.ne	40aa70 <wcrtomb@plt+0x81a0>  // b.any
  40aa58:	mov	w2, #0x3                   	// #3
  40aa5c:	mov	x0, x19
  40aa60:	bl	40a594 <wcrtomb@plt+0x7cc4>
  40aa64:	ldp	x19, x20, [sp, #16]
  40aa68:	ldp	x29, x30, [sp], #48
  40aa6c:	ret
  40aa70:	ldr	x0, [x19, #104]
  40aa74:	cmp	x0, #0x0
  40aa78:	b.le	40aae0 <wcrtomb@plt+0x8210>
  40aa7c:	str	x21, [sp, #32]
  40aa80:	ldr	x0, [x19, #96]
  40aa84:	ldr	w1, [x0]
  40aa88:	mov	x0, x19
  40aa8c:	bl	40a958 <wcrtomb@plt+0x8088>
  40aa90:	mov	x20, #0x0                   	// #0
  40aa94:	mov	x21, #0x106                 	// #262
  40aa98:	b	40aab8 <wcrtomb@plt+0x81e8>
  40aa9c:	ldr	x0, [x19, #96]
  40aaa0:	ldr	w1, [x0, x20, lsl #2]
  40aaa4:	mov	x0, x19
  40aaa8:	bl	40a958 <wcrtomb@plt+0x8088>
  40aaac:	mov	x1, x21
  40aab0:	mov	x0, x19
  40aab4:	bl	40aa34 <wcrtomb@plt+0x8164>
  40aab8:	add	x20, x20, #0x1
  40aabc:	ldr	x0, [x19, #104]
  40aac0:	cmp	x0, x20
  40aac4:	b.gt	40aa9c <wcrtomb@plt+0x81cc>
  40aac8:	str	xzr, [x19, #104]
  40aacc:	ldr	x1, [x19, #80]
  40aad0:	cmn	x1, #0x1
  40aad4:	b.ne	40ab00 <wcrtomb@plt+0x8230>  // b.any
  40aad8:	ldr	x21, [sp, #32]
  40aadc:	b	40aa64 <wcrtomb@plt+0x8194>
  40aae0:	str	xzr, [x19, #104]
  40aae4:	ldr	x1, [x19, #80]
  40aae8:	cmn	x1, #0x1
  40aaec:	b.eq	40aa64 <wcrtomb@plt+0x8194>  // b.none
  40aaf0:	add	x1, x1, #0x114
  40aaf4:	mov	x0, x19
  40aaf8:	bl	40aa34 <wcrtomb@plt+0x8164>
  40aafc:	b	40aa64 <wcrtomb@plt+0x8194>
  40ab00:	add	x1, x1, #0x114
  40ab04:	mov	x0, x19
  40ab08:	bl	40aa34 <wcrtomb@plt+0x8164>
  40ab0c:	mov	x1, #0x106                 	// #262
  40ab10:	mov	x0, x19
  40ab14:	bl	40aa34 <wcrtomb@plt+0x8164>
  40ab18:	ldr	x21, [sp, #32]
  40ab1c:	b	40aa64 <wcrtomb@plt+0x8194>
  40ab20:	stp	x29, x30, [sp, #-48]!
  40ab24:	mov	x29, sp
  40ab28:	stp	x19, x20, [sp, #16]
  40ab2c:	stp	x21, x22, [sp, #32]
  40ab30:	mov	x19, x0
  40ab34:	mov	x21, x1
  40ab38:	mov	x0, x1
  40ab3c:	bl	4022c0 <strlen@plt>
  40ab40:	cbnz	x0, 40ab58 <wcrtomb@plt+0x8288>
  40ab44:	mov	x0, x19
  40ab48:	ldp	x19, x20, [sp, #16]
  40ab4c:	ldp	x21, x22, [sp, #32]
  40ab50:	ldp	x29, x30, [sp], #48
  40ab54:	ret
  40ab58:	mov	x20, x0
  40ab5c:	mov	x0, x19
  40ab60:	bl	4022c0 <strlen@plt>
  40ab64:	mov	x22, x0
  40ab68:	add	x1, x0, x20
  40ab6c:	add	x1, x1, #0x1
  40ab70:	mov	x0, x19
  40ab74:	bl	414068 <wcrtomb@plt+0x11798>
  40ab78:	mov	x19, x0
  40ab7c:	add	x2, x20, #0x1
  40ab80:	mov	x1, x21
  40ab84:	add	x0, x0, x22
  40ab88:	bl	402260 <memcpy@plt>
  40ab8c:	b	40ab44 <wcrtomb@plt+0x8274>
  40ab90:	stp	x29, x30, [sp, #-32]!
  40ab94:	mov	x29, sp
  40ab98:	stp	x19, x20, [sp, #16]
  40ab9c:	mov	x20, x0
  40aba0:	mov	x19, x1
  40aba4:	ldr	x1, [x1, #16]
  40aba8:	ldr	x0, [x0, #8]
  40abac:	cmp	x1, x0
  40abb0:	b.lt	40abcc <wcrtomb@plt+0x82fc>  // b.tstop
  40abb4:	ldr	x2, [x20, #8]
  40abb8:	str	x2, [x19, #8]
  40abbc:	cbnz	x2, 40abfc <wcrtomb@plt+0x832c>
  40abc0:	ldp	x19, x20, [sp, #16]
  40abc4:	ldp	x29, x30, [sp], #32
  40abc8:	ret
  40abcc:	ldr	x0, [x19]
  40abd0:	bl	402660 <free@plt>
  40abd4:	ldr	x2, [x20, #8]
  40abd8:	mov	x1, x19
  40abdc:	ldr	x0, [x1, #16]!
  40abe0:	mov	x4, #0x10                  	// #16
  40abe4:	mov	x3, #0xffffffffffffffff    	// #-1
  40abe8:	sub	x2, x2, x0
  40abec:	mov	x0, #0x0                   	// #0
  40abf0:	bl	40a25c <wcrtomb@plt+0x798c>
  40abf4:	str	x0, [x19]
  40abf8:	b	40abb4 <wcrtomb@plt+0x82e4>
  40abfc:	lsl	x2, x2, #4
  40ac00:	ldr	x1, [x20]
  40ac04:	ldr	x0, [x19]
  40ac08:	bl	402260 <memcpy@plt>
  40ac0c:	b	40abc0 <wcrtomb@plt+0x82f0>
  40ac10:	stp	x29, x30, [sp, #-48]!
  40ac14:	mov	x29, sp
  40ac18:	stp	x19, x20, [sp, #16]
  40ac1c:	stp	x21, x22, [sp, #32]
  40ac20:	mov	x20, x0
  40ac24:	mov	x21, x1
  40ac28:	mov	w22, w2
  40ac2c:	mov	x19, x3
  40ac30:	ldr	x0, [x3, #16]
  40ac34:	ldr	x1, [x20, #8]
  40ac38:	sub	x0, x0, x1
  40ac3c:	ldr	x1, [x21, #8]
  40ac40:	cmp	x0, x1
  40ac44:	b.lt	40ac5c <wcrtomb@plt+0x838c>  // b.tstop
  40ac48:	str	xzr, [x19, #8]
  40ac4c:	mov	x5, #0x0                   	// #0
  40ac50:	mov	x3, #0x0                   	// #0
  40ac54:	mov	w7, #0x0                   	// #0
  40ac58:	b	40ace4 <wcrtomb@plt+0x8414>
  40ac5c:	ldr	x0, [x3]
  40ac60:	bl	402660 <free@plt>
  40ac64:	ldr	x0, [x20, #8]
  40ac68:	mov	x1, x19
  40ac6c:	str	x0, [x1, #16]!
  40ac70:	mov	x4, #0x10                  	// #16
  40ac74:	mov	x3, #0xffffffffffffffff    	// #-1
  40ac78:	ldr	x2, [x21, #8]
  40ac7c:	mov	x0, #0x0                   	// #0
  40ac80:	bl	40a25c <wcrtomb@plt+0x798c>
  40ac84:	str	x0, [x19]
  40ac88:	b	40ac48 <wcrtomb@plt+0x8378>
  40ac8c:	ldr	x0, [x21, #8]
  40ac90:	mov	w6, w7
  40ac94:	cmp	x0, x5
  40ac98:	b.gt	40ad58 <wcrtomb@plt+0x8488>
  40ac9c:	lsl	x4, x3, #4
  40aca0:	ldr	x0, [x20]
  40aca4:	ldr	x1, [x0, x4]
  40aca8:	ldr	x2, [x19, #8]
  40acac:	ldr	x0, [x19]
  40acb0:	lsl	x2, x2, #4
  40acb4:	str	x1, [x0, x2]
  40acb8:	add	x3, x3, #0x1
  40acbc:	ldr	x1, [x20]
  40acc0:	add	x1, x1, x4
  40acc4:	ldr	w0, [x1, #8]
  40acc8:	ldr	x1, [x19]
  40accc:	ldr	x4, [x19, #8]
  40acd0:	add	x2, x4, #0x1
  40acd4:	str	x2, [x19, #8]
  40acd8:	add	x4, x1, x4, lsl #4
  40acdc:	orr	w0, w0, w6
  40ace0:	str	w0, [x4, #8]
  40ace4:	ldr	x0, [x20, #8]
  40ace8:	cmp	x0, x3
  40acec:	b.gt	40ac8c <wcrtomb@plt+0x83bc>
  40acf0:	ldr	x0, [x21, #8]
  40acf4:	cmp	x0, x5
  40acf8:	b.le	40ad90 <wcrtomb@plt+0x84c0>
  40acfc:	lsl	x0, x5, #4
  40ad00:	ldr	x1, [x21]
  40ad04:	add	x2, x1, x0
  40ad08:	ldr	w2, [x2, #8]
  40ad0c:	tst	w22, w2
  40ad10:	b.eq	40ad50 <wcrtomb@plt+0x8480>  // b.none
  40ad14:	ldr	x4, [x1, x0]
  40ad18:	ldr	x1, [x19, #8]
  40ad1c:	ldr	x2, [x19]
  40ad20:	lsl	x1, x1, #4
  40ad24:	str	x4, [x2, x1]
  40ad28:	ldr	x1, [x21]
  40ad2c:	add	x0, x1, x0
  40ad30:	ldr	w1, [x0, #8]
  40ad34:	ldr	x2, [x19]
  40ad38:	ldr	x0, [x19, #8]
  40ad3c:	add	x4, x0, #0x1
  40ad40:	str	x4, [x19, #8]
  40ad44:	add	x0, x2, x0, lsl #4
  40ad48:	and	w1, w1, w22
  40ad4c:	str	w1, [x0, #8]
  40ad50:	add	x5, x5, #0x1
  40ad54:	b	40ace4 <wcrtomb@plt+0x8414>
  40ad58:	ldr	x1, [x20]
  40ad5c:	lsl	x0, x3, #4
  40ad60:	ldr	x2, [x1, x0]
  40ad64:	lsl	x0, x5, #4
  40ad68:	ldr	x1, [x21]
  40ad6c:	add	x4, x1, x0
  40ad70:	ldr	x0, [x1, x0]
  40ad74:	cmp	x2, x0
  40ad78:	b.gt	40acfc <wcrtomb@plt+0x842c>
  40ad7c:	b.ne	40ac9c <wcrtomb@plt+0x83cc>  // b.any
  40ad80:	add	x5, x5, #0x1
  40ad84:	ldr	w0, [x4, #8]
  40ad88:	and	w6, w22, w0
  40ad8c:	b	40ac9c <wcrtomb@plt+0x83cc>
  40ad90:	ldp	x19, x20, [sp, #16]
  40ad94:	ldp	x21, x22, [sp, #32]
  40ad98:	ldp	x29, x30, [sp], #48
  40ad9c:	ret
  40ada0:	stp	x29, x30, [sp, #-32]!
  40ada4:	mov	x29, sp
  40ada8:	stp	x19, x20, [sp, #16]
  40adac:	mov	x20, x0
  40adb0:	ldr	x0, [x0, #280]
  40adb4:	bl	402660 <free@plt>
  40adb8:	ldr	x0, [x20, #96]
  40adbc:	bl	402660 <free@plt>
  40adc0:	ldr	x0, [x20, #408]
  40adc4:	bl	402660 <free@plt>
  40adc8:	ldr	x0, [x20, #432]
  40adcc:	cbz	x0, 40ae04 <wcrtomb@plt+0x8534>
  40add0:	ldr	x0, [x20, #352]
  40add4:	tbnz	x0, #63, 40adf8 <wcrtomb@plt+0x8528>
  40add8:	mov	x19, #0xffffffffffffffff    	// #-1
  40addc:	ldr	x0, [x20, #432]
  40ade0:	ldr	x0, [x0, x19, lsl #3]
  40ade4:	bl	402660 <free@plt>
  40ade8:	add	x19, x19, #0x1
  40adec:	ldr	x0, [x20, #352]
  40adf0:	cmp	x0, x19
  40adf4:	b.gt	40addc <wcrtomb@plt+0x850c>
  40adf8:	ldr	x0, [x20, #432]
  40adfc:	sub	x0, x0, #0x10
  40ae00:	bl	402660 <free@plt>
  40ae04:	ldp	x19, x20, [sp, #16]
  40ae08:	ldp	x29, x30, [sp], #32
  40ae0c:	ret
  40ae10:	stp	x29, x30, [sp, #-32]!
  40ae14:	mov	x29, sp
  40ae18:	str	x19, [sp, #16]
  40ae1c:	mov	x19, x0
  40ae20:	ldr	x0, [x0]
  40ae24:	cbz	x0, 40ae34 <wcrtomb@plt+0x8564>
  40ae28:	bl	402660 <free@plt>
  40ae2c:	ldr	x0, [x19, #8]!
  40ae30:	cbnz	x0, 40ae28 <wcrtomb@plt+0x8558>
  40ae34:	ldr	x19, [sp, #16]
  40ae38:	ldp	x29, x30, [sp], #32
  40ae3c:	ret
  40ae40:	stp	x29, x30, [sp, #-32]!
  40ae44:	mov	x29, sp
  40ae48:	str	x19, [sp, #16]
  40ae4c:	mov	x19, x0
  40ae50:	ldr	x0, [x0]
  40ae54:	bl	40ae10 <wcrtomb@plt+0x8540>
  40ae58:	ldr	x0, [x19]
  40ae5c:	bl	402660 <free@plt>
  40ae60:	ldr	x0, [x19, #8]
  40ae64:	bl	402660 <free@plt>
  40ae68:	ldr	x0, [x19, #16]
  40ae6c:	bl	402660 <free@plt>
  40ae70:	ldr	x0, [x19, #24]
  40ae74:	bl	402660 <free@plt>
  40ae78:	mov	x0, x19
  40ae7c:	bl	402660 <free@plt>
  40ae80:	ldr	x19, [sp, #16]
  40ae84:	ldp	x29, x30, [sp], #32
  40ae88:	ret
  40ae8c:	stp	x29, x30, [sp, #-32]!
  40ae90:	mov	x29, sp
  40ae94:	stp	x19, x20, [sp, #16]
  40ae98:	mov	x20, x0
  40ae9c:	cmp	xzr, x1, lsr #60
  40aea0:	cset	x0, ne  // ne = any
  40aea4:	tst	x1, #0x800000000000000
  40aea8:	csinc	w0, w0, wzr, eq  // eq = none
  40aeac:	cbnz	w0, 40aed4 <wcrtomb@plt+0x8604>
  40aeb0:	mov	x19, x1
  40aeb4:	lsl	x0, x1, #4
  40aeb8:	bl	413fec <wcrtomb@plt+0x1171c>
  40aebc:	str	x0, [x20]
  40aec0:	str	x19, [x20, #16]
  40aec4:	str	xzr, [x20, #8]
  40aec8:	ldp	x19, x20, [sp, #16]
  40aecc:	ldp	x29, x30, [sp], #32
  40aed0:	ret
  40aed4:	bl	414264 <wcrtomb@plt+0x11994>
  40aed8:	stp	x29, x30, [sp, #-128]!
  40aedc:	mov	x29, sp
  40aee0:	stp	x19, x20, [sp, #16]
  40aee4:	stp	x21, x22, [sp, #32]
  40aee8:	stp	x23, x24, [sp, #48]
  40aeec:	stp	x25, x26, [sp, #64]
  40aef0:	stp	x27, x28, [sp, #80]
  40aef4:	mov	x24, x0
  40aef8:	str	x1, [sp, #120]
  40aefc:	str	w2, [sp, #100]
  40af00:	ldr	x21, [x1, #8]
  40af04:	cmp	x21, #0x0
  40af08:	b.le	40b154 <wcrtomb@plt+0x8884>
  40af0c:	ldr	x0, [x1]
  40af10:	add	x3, x0, x21, lsl #4
  40af14:	mov	x20, #0x0                   	// #0
  40af18:	ldr	w1, [x0, #8]
  40af1c:	ldr	x2, [x0], #16
  40af20:	add	x1, x1, x2
  40af24:	eor	x20, x20, x1
  40af28:	cmp	x0, x3
  40af2c:	b.ne	40af18 <wcrtomb@plt+0x8648>  // b.any
  40af30:	ldr	x27, [x24, #304]
  40af34:	mov	x19, #0x0                   	// #0
  40af38:	cmp	x27, #0x0
  40af3c:	b.le	40aff0 <wcrtomb@plt+0x8720>
  40af40:	ldr	x0, [x24, #296]
  40af44:	mov	x19, #0x0                   	// #0
  40af48:	b	40af68 <wcrtomb@plt+0x8698>
  40af4c:	mov	x2, #0x0                   	// #0
  40af50:	cmp	x21, x2
  40af54:	b.eq	40b134 <wcrtomb@plt+0x8864>  // b.none
  40af58:	add	x19, x19, #0x1
  40af5c:	add	x0, x0, #0x50
  40af60:	cmp	x19, x27
  40af64:	b.ge	40afe8 <wcrtomb@plt+0x8718>  // b.tcont
  40af68:	ldr	x1, [x0]
  40af6c:	cmp	x1, x20
  40af70:	b.ne	40af58 <wcrtomb@plt+0x8688>  // b.any
  40af74:	ldr	x1, [x0, #16]
  40af78:	cmp	x1, x21
  40af7c:	b.ne	40af58 <wcrtomb@plt+0x8688>  // b.any
  40af80:	ldrb	w1, [x0, #32]
  40af84:	ldr	w3, [sp, #100]
  40af88:	cmp	w1, w3
  40af8c:	b.ne	40af58 <wcrtomb@plt+0x8688>  // b.any
  40af90:	cmp	x21, #0x0
  40af94:	b.le	40af4c <wcrtomb@plt+0x867c>
  40af98:	ldr	x1, [sp, #120]
  40af9c:	ldr	x6, [x1]
  40afa0:	ldr	x5, [x0, #8]
  40afa4:	mov	x1, #0x0                   	// #0
  40afa8:	mov	x2, #0x0                   	// #0
  40afac:	add	x8, x6, #0x8
  40afb0:	add	x7, x5, #0x8
  40afb4:	ldr	w4, [x8, x1]
  40afb8:	ldr	w3, [x7, x1]
  40afbc:	cmp	w4, w3
  40afc0:	b.ne	40af50 <wcrtomb@plt+0x8680>  // b.any
  40afc4:	ldr	x4, [x6, x1]
  40afc8:	ldr	x3, [x5, x1]
  40afcc:	cmp	x4, x3
  40afd0:	b.ne	40af50 <wcrtomb@plt+0x8680>  // b.any
  40afd4:	add	x2, x2, #0x1
  40afd8:	add	x1, x1, #0x10
  40afdc:	cmp	x2, x21
  40afe0:	b.ne	40afb4 <wcrtomb@plt+0x86e4>  // b.any
  40afe4:	b	40b134 <wcrtomb@plt+0x8864>
  40afe8:	cmp	x21, #0x0
  40afec:	b.le	40b078 <wcrtomb@plt+0x87a8>
  40aff0:	ldr	x28, [x24, #336]
  40aff4:	ldr	x0, [sp, #120]
  40aff8:	ldr	x0, [x0]
  40affc:	str	x0, [sp, #104]
  40b000:	mov	x22, #0x0                   	// #0
  40b004:	str	xzr, [sp, #112]
  40b008:	mov	w26, #0x0                   	// #0
  40b00c:	b	40b030 <wcrtomb@plt+0x8760>
  40b010:	ldr	x0, [x24, #144]
  40b014:	ldr	x0, [x0, x25, lsl #3]
  40b018:	cmp	x0, #0x112
  40b01c:	mov	w0, #0x1ff                 	// #511
  40b020:	csel	w26, w26, w0, ne  // ne = any
  40b024:	add	x22, x22, #0x1
  40b028:	cmp	x22, x21
  40b02c:	b.ge	40b080 <wcrtomb@plt+0x87b0>  // b.tcont
  40b030:	lsl	x0, x22, #4
  40b034:	ldr	x1, [sp, #104]
  40b038:	ldr	x25, [x1, x0]
  40b03c:	ldr	w23, [x28, x25, lsl #2]
  40b040:	cbz	w23, 40b010 <wcrtomb@plt+0x8740>
  40b044:	mov	w2, #0x7                   	// #7
  40b048:	ldr	w1, [sp, #100]
  40b04c:	mov	w0, w23
  40b050:	bl	409f08 <wcrtomb@plt+0x7638>
  40b054:	ands	w0, w0, #0xff
  40b058:	orr	w23, w26, w23
  40b05c:	csel	w26, w23, w26, ne  // ne = any
  40b060:	ldr	x0, [sp, #112]
  40b064:	cbnz	x0, 40b024 <wcrtomb@plt+0x8754>
  40b068:	ldr	x0, [x24, #144]
  40b06c:	ldr	x0, [x0, x25, lsl #3]
  40b070:	str	x0, [sp, #112]
  40b074:	b	40b024 <wcrtomb@plt+0x8754>
  40b078:	str	xzr, [sp, #112]
  40b07c:	mov	w26, #0x0                   	// #0
  40b080:	mov	x4, #0x50                  	// #80
  40b084:	mov	x3, #0xffffffffffffffff    	// #-1
  40b088:	add	x2, x24, #0x138
  40b08c:	mov	x1, x27
  40b090:	ldr	x0, [x24, #296]
  40b094:	bl	40a31c <wcrtomb@plt+0x7a4c>
  40b098:	str	x0, [x24, #296]
  40b09c:	add	x21, x19, x19, lsl #2
  40b0a0:	lsl	x21, x21, #4
  40b0a4:	str	x20, [x0, x21]
  40b0a8:	ldr	x0, [x24, #296]
  40b0ac:	add	x0, x0, x21
  40b0b0:	ldr	x20, [sp, #120]
  40b0b4:	ldr	x1, [x20, #8]
  40b0b8:	add	x0, x0, #0x8
  40b0bc:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40b0c0:	ldr	x1, [x24, #296]
  40b0c4:	add	x1, x1, x21
  40b0c8:	add	x1, x1, #0x8
  40b0cc:	mov	x0, x20
  40b0d0:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40b0d4:	ldr	x0, [x24, #296]
  40b0d8:	add	x0, x0, x21
  40b0dc:	ldrb	w1, [sp, #100]
  40b0e0:	strb	w1, [x0, #32]
  40b0e4:	ldr	x0, [x24, #296]
  40b0e8:	add	x0, x0, x21
  40b0ec:	strh	w26, [x0, #34]
  40b0f0:	ldr	x0, [x24, #296]
  40b0f4:	add	x0, x0, x21
  40b0f8:	ldr	x1, [sp, #112]
  40b0fc:	str	x1, [x0, #40]
  40b100:	ldr	x0, [x24, #296]
  40b104:	add	x0, x0, x21
  40b108:	str	xzr, [x0, #56]
  40b10c:	ldr	x0, [x24, #296]
  40b110:	add	x0, x0, x21
  40b114:	str	xzr, [x0, #48]
  40b118:	ldr	x0, [x24, #296]
  40b11c:	add	x21, x0, x21
  40b120:	mov	x0, #0xffffffffffffffff    	// #-1
  40b124:	str	x0, [x21, #72]
  40b128:	ldr	x0, [x24, #304]
  40b12c:	add	x0, x0, #0x1
  40b130:	str	x0, [x24, #304]
  40b134:	mov	x0, x19
  40b138:	ldp	x19, x20, [sp, #16]
  40b13c:	ldp	x21, x22, [sp, #32]
  40b140:	ldp	x23, x24, [sp, #48]
  40b144:	ldp	x25, x26, [sp, #64]
  40b148:	ldp	x27, x28, [sp, #80]
  40b14c:	ldp	x29, x30, [sp], #128
  40b150:	ret
  40b154:	ldr	x27, [x0, #304]
  40b158:	mov	x20, #0x0                   	// #0
  40b15c:	cmp	x27, #0x0
  40b160:	b.gt	40af40 <wcrtomb@plt+0x8670>
  40b164:	mov	x19, #0x0                   	// #0
  40b168:	str	xzr, [sp, #112]
  40b16c:	mov	w26, #0x0                   	// #0
  40b170:	b	40b080 <wcrtomb@plt+0x87b0>
  40b174:	stp	x29, x30, [sp, #-48]!
  40b178:	mov	x29, sp
  40b17c:	stp	x19, x20, [sp, #16]
  40b180:	str	x21, [sp, #32]
  40b184:	mov	x21, x0
  40b188:	mov	x20, x1
  40b18c:	mov	x0, #0x30                  	// #48
  40b190:	bl	413fec <wcrtomb@plt+0x1171c>
  40b194:	mov	x19, x0
  40b198:	mov	x0, #0x8                   	// #8
  40b19c:	bl	4141ec <wcrtomb@plt+0x1191c>
  40b1a0:	str	x0, [x19]
  40b1a4:	mov	x0, x20
  40b1a8:	bl	4141ec <wcrtomb@plt+0x1191c>
  40b1ac:	str	x0, [x19, #8]
  40b1b0:	mov	x0, x20
  40b1b4:	bl	4141ec <wcrtomb@plt+0x1191c>
  40b1b8:	str	x0, [x19, #16]
  40b1bc:	mov	x0, x20
  40b1c0:	bl	4141ec <wcrtomb@plt+0x1191c>
  40b1c4:	str	x0, [x19, #24]
  40b1c8:	strb	wzr, [x19, #32]
  40b1cc:	strb	wzr, [x19, #33]
  40b1d0:	str	x21, [x19, #40]
  40b1d4:	mov	x0, x19
  40b1d8:	ldp	x19, x20, [sp, #16]
  40b1dc:	ldr	x21, [sp, #32]
  40b1e0:	ldp	x29, x30, [sp], #48
  40b1e4:	ret
  40b1e8:	stp	x29, x30, [sp, #-64]!
  40b1ec:	mov	x29, sp
  40b1f0:	stp	x19, x20, [sp, #16]
  40b1f4:	stp	x21, x22, [sp, #32]
  40b1f8:	mov	x20, x0
  40b1fc:	mov	x21, x1
  40b200:	mov	x19, x2
  40b204:	add	x0, x2, #0x1
  40b208:	bl	413fec <wcrtomb@plt+0x1171c>
  40b20c:	mov	x2, x19
  40b210:	mov	x1, x21
  40b214:	bl	402260 <memcpy@plt>
  40b218:	mov	x22, x0
  40b21c:	strb	wzr, [x0, x19]
  40b220:	ldr	x21, [x20]
  40b224:	cbz	x21, 40b2fc <wcrtomb@plt+0x8a2c>
  40b228:	mov	x0, x21
  40b22c:	mov	x19, #0x0                   	// #0
  40b230:	mov	x1, x22
  40b234:	bl	402790 <strstr@plt>
  40b238:	cbnz	x0, 40b258 <wcrtomb@plt+0x8988>
  40b23c:	add	x19, x19, #0x1
  40b240:	ldr	x0, [x20, x19, lsl #3]
  40b244:	cbnz	x0, 40b230 <wcrtomb@plt+0x8960>
  40b248:	stp	x23, x24, [sp, #48]
  40b24c:	mov	x24, x20
  40b250:	mov	x23, #0x0                   	// #0
  40b254:	b	40b278 <wcrtomb@plt+0x89a8>
  40b258:	mov	x0, x22
  40b25c:	bl	402660 <free@plt>
  40b260:	mov	x0, x20
  40b264:	b	40b2e8 <wcrtomb@plt+0x8a18>
  40b268:	add	x23, x23, #0x1
  40b26c:	add	x24, x20, x23, lsl #3
  40b270:	ldr	x21, [x20, x23, lsl #3]
  40b274:	cbz	x21, 40b2b0 <wcrtomb@plt+0x89e0>
  40b278:	mov	x1, x21
  40b27c:	mov	x0, x22
  40b280:	bl	402790 <strstr@plt>
  40b284:	cbz	x0, 40b268 <wcrtomb@plt+0x8998>
  40b288:	mov	x0, x21
  40b28c:	bl	402660 <free@plt>
  40b290:	sub	x19, x19, #0x1
  40b294:	cmp	x19, x23
  40b298:	b.eq	40b2ac <wcrtomb@plt+0x89dc>  // b.none
  40b29c:	ldr	x0, [x20, x19, lsl #3]
  40b2a0:	str	x0, [x24]
  40b2a4:	str	xzr, [x20, x19, lsl #3]
  40b2a8:	b	40b26c <wcrtomb@plt+0x899c>
  40b2ac:	mov	x19, x23
  40b2b0:	add	x19, x19, #0x2
  40b2b4:	cmp	xzr, x19, lsr #61
  40b2b8:	cset	x0, ne  // ne = any
  40b2bc:	tst	x19, #0x1000000000000000
  40b2c0:	csinc	w0, w0, wzr, eq  // eq = none
  40b2c4:	cbnz	w0, 40b2f8 <wcrtomb@plt+0x8a28>
  40b2c8:	ldp	x23, x24, [sp, #48]
  40b2cc:	lsl	x19, x19, #3
  40b2d0:	mov	x1, x19
  40b2d4:	mov	x0, x20
  40b2d8:	bl	414068 <wcrtomb@plt+0x11798>
  40b2dc:	add	x19, x0, x19
  40b2e0:	stur	x22, [x19, #-16]
  40b2e4:	stur	xzr, [x19, #-8]
  40b2e8:	ldp	x19, x20, [sp, #16]
  40b2ec:	ldp	x21, x22, [sp, #32]
  40b2f0:	ldp	x29, x30, [sp], #64
  40b2f4:	ret
  40b2f8:	bl	414264 <wcrtomb@plt+0x11994>
  40b2fc:	mov	x19, #0x2                   	// #2
  40b300:	b	40b2cc <wcrtomb@plt+0x89fc>
  40b304:	stp	x29, x30, [sp, #-48]!
  40b308:	mov	x29, sp
  40b30c:	stp	x19, x20, [sp, #16]
  40b310:	str	x21, [sp, #32]
  40b314:	mov	x19, x0
  40b318:	mov	x21, x1
  40b31c:	ldr	x20, [x1]
  40b320:	cbz	x20, 40b348 <wcrtomb@plt+0x8a78>
  40b324:	mov	x0, x20
  40b328:	bl	4022c0 <strlen@plt>
  40b32c:	mov	x2, x0
  40b330:	mov	x1, x20
  40b334:	mov	x0, x19
  40b338:	bl	40b1e8 <wcrtomb@plt+0x8918>
  40b33c:	mov	x19, x0
  40b340:	ldr	x20, [x21, #8]!
  40b344:	cbnz	x20, 40b324 <wcrtomb@plt+0x8a54>
  40b348:	mov	x0, x19
  40b34c:	ldp	x19, x20, [sp, #16]
  40b350:	ldr	x21, [sp, #32]
  40b354:	ldp	x29, x30, [sp], #48
  40b358:	ret
  40b35c:	stp	x29, x30, [sp, #-272]!
  40b360:	mov	x29, sp
  40b364:	stp	x19, x20, [sp, #16]
  40b368:	stp	x21, x22, [sp, #32]
  40b36c:	stp	x23, x24, [sp, #48]
  40b370:	stp	x25, x26, [sp, #64]
  40b374:	stp	x27, x28, [sp, #80]
  40b378:	mov	x28, x0
  40b37c:	mov	x19, x1
  40b380:	and	w0, w2, #0xff
  40b384:	str	w0, [sp, #108]
  40b388:	add	x22, x28, x28, lsl #2
  40b38c:	lsl	x22, x22, #4
  40b390:	mov	x20, x22
  40b394:	ldr	x0, [x1, #296]
  40b398:	add	x0, x0, x22
  40b39c:	ldrh	w0, [x0, #34]
  40b3a0:	cbz	w0, 40b4b8 <wcrtomb@plt+0x8be8>
  40b3a4:	ldr	x0, [x1, #376]
  40b3a8:	add	x23, x0, x28, lsl #3
  40b3ac:	ldr	x21, [x0, x28, lsl #3]
  40b3b0:	cbz	x21, 40b4c0 <wcrtomb@plt+0x8bf0>
  40b3b4:	ldr	x0, [x19, #384]
  40b3b8:	strb	wzr, [x0, x28]
  40b3bc:	ldr	x0, [x19, #296]
  40b3c0:	add	x0, x0, x22
  40b3c4:	mov	x3, x19
  40b3c8:	mov	x2, x28
  40b3cc:	mov	w1, #0x4                   	// #4
  40b3d0:	ldrb	w0, [x0, #32]
  40b3d4:	bl	409f40 <wcrtomb@plt+0x7670>
  40b3d8:	and	w0, w0, #0xff
  40b3dc:	cbz	w0, 40b3f0 <wcrtomb@plt+0x8b20>
  40b3e0:	ldr	x1, [x19, #384]
  40b3e4:	ldrb	w0, [x1, x28]
  40b3e8:	orr	w0, w0, #0x4
  40b3ec:	strb	w0, [x1, x28]
  40b3f0:	ldr	x0, [x19, #296]
  40b3f4:	add	x0, x0, x22
  40b3f8:	mov	x3, x19
  40b3fc:	mov	x2, x28
  40b400:	mov	w1, #0x2                   	// #2
  40b404:	ldrb	w0, [x0, #32]
  40b408:	bl	409f40 <wcrtomb@plt+0x7670>
  40b40c:	and	w0, w0, #0xff
  40b410:	cbz	w0, 40b424 <wcrtomb@plt+0x8b54>
  40b414:	ldr	x1, [x19, #384]
  40b418:	ldrb	w0, [x1, x28]
  40b41c:	orr	w0, w0, #0x2
  40b420:	strb	w0, [x1, x28]
  40b424:	ldr	x0, [x19, #296]
  40b428:	add	x0, x0, x22
  40b42c:	mov	x3, x19
  40b430:	mov	x2, x28
  40b434:	mov	w1, #0x1                   	// #1
  40b438:	ldrb	w0, [x0, #32]
  40b43c:	bl	409f40 <wcrtomb@plt+0x7670>
  40b440:	and	w0, w0, #0xff
  40b444:	cbz	w0, 40b458 <wcrtomb@plt+0x8b88>
  40b448:	ldr	x1, [x19, #384]
  40b44c:	ldrb	w0, [x1, x28]
  40b450:	orr	w0, w0, #0x1
  40b454:	strb	w0, [x1, x28]
  40b458:	ldr	x1, [x19, #176]
  40b45c:	add	x0, sp, #0xf8
  40b460:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40b464:	ldr	x0, [x19, #296]
  40b468:	add	x22, x0, x22
  40b46c:	ldr	x0, [x22, #16]
  40b470:	mov	x24, #0x0                   	// #0
  40b474:	cmp	x0, #0x0
  40b478:	b.gt	40b5a4 <wcrtomb@plt+0x8cd4>
  40b47c:	ldr	x1, [x19, #176]
  40b480:	add	x0, sp, #0xe0
  40b484:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40b488:	mov	x0, #0xffffffffffffffff    	// #-1
  40b48c:	str	x0, [sp, #168]
  40b490:	str	x0, [sp, #176]
  40b494:	str	x0, [sp, #184]
  40b498:	str	x0, [sp, #192]
  40b49c:	ldr	x0, [sp, #256]
  40b4a0:	cmp	x0, #0x0
  40b4a4:	b.le	40b858 <wcrtomb@plt+0x8f88>
  40b4a8:	mov	x22, #0x0                   	// #0
  40b4ac:	mov	w25, #0x1                   	// #1
  40b4b0:	add	x24, x19, #0x3f0
  40b4b4:	b	40b734 <wcrtomb@plt+0x8e64>
  40b4b8:	ldr	x0, [x1, #368]
  40b4bc:	b	40b3a8 <wcrtomb@plt+0x8ad8>
  40b4c0:	ldr	w0, [x19, #360]
  40b4c4:	cmp	w0, #0x3ff
  40b4c8:	b.le	40b518 <wcrtomb@plt+0x8c48>
  40b4cc:	ldrsw	x21, [x19, #364]
  40b4d0:	ldr	x0, [x19, #352]
  40b4d4:	cmp	x21, x0
  40b4d8:	b.ge	40b514 <wcrtomb@plt+0x8c44>  // b.tcont
  40b4dc:	ldr	x0, [x19, #368]
  40b4e0:	ldr	x0, [x0, x21, lsl #3]
  40b4e4:	bl	402660 <free@plt>
  40b4e8:	ldr	x0, [x19, #376]
  40b4ec:	ldr	x0, [x0, x21, lsl #3]
  40b4f0:	bl	402660 <free@plt>
  40b4f4:	ldr	x0, [x19, #376]
  40b4f8:	str	xzr, [x0, x21, lsl #3]
  40b4fc:	ldr	x0, [x19, #368]
  40b500:	str	xzr, [x0, x21, lsl #3]
  40b504:	add	x21, x21, #0x1
  40b508:	ldr	x0, [x19, #352]
  40b50c:	cmp	x0, x21
  40b510:	b.gt	40b4dc <wcrtomb@plt+0x8c0c>
  40b514:	str	wzr, [x19, #360]
  40b518:	ldr	w0, [x19, #360]
  40b51c:	add	w0, w0, #0x1
  40b520:	str	w0, [x19, #360]
  40b524:	mov	x0, #0x800                 	// #2048
  40b528:	bl	413fec <wcrtomb@plt+0x1171c>
  40b52c:	mov	x21, x0
  40b530:	str	x0, [x23]
  40b534:	add	x2, x0, #0x800
  40b538:	mov	x1, #0xfffffffffffffffe    	// #-2
  40b53c:	str	x1, [x0], #8
  40b540:	cmp	x0, x2
  40b544:	b.ne	40b53c <wcrtomb@plt+0x8c6c>  // b.any
  40b548:	b	40b3b4 <wcrtomb@plt+0x8ae4>
  40b54c:	ldr	x0, [x0]
  40b550:	add	x0, x0, x22, lsl #4
  40b554:	add	x2, sp, #0xf8
  40b558:	ldp	x0, x1, [x0]
  40b55c:	bl	40a410 <wcrtomb@plt+0x7b40>
  40b560:	add	x22, x22, #0x1
  40b564:	ldr	x0, [x19, #296]
  40b568:	add	x0, x0, x20
  40b56c:	ldr	x0, [x0, #8]
  40b570:	ldr	x0, [x0, x23]
  40b574:	add	x0, x0, x0, lsl #1
  40b578:	ldr	x1, [x19, #320]
  40b57c:	add	x0, x1, x0, lsl #3
  40b580:	ldr	x1, [x0, #8]
  40b584:	cmp	x1, x22
  40b588:	b.gt	40b54c <wcrtomb@plt+0x8c7c>
  40b58c:	add	x24, x24, #0x1
  40b590:	ldr	x0, [x19, #296]
  40b594:	add	x0, x0, x20
  40b598:	ldr	x0, [x0, #16]
  40b59c:	cmp	x0, x24
  40b5a0:	b.le	40b47c <wcrtomb@plt+0x8bac>
  40b5a4:	lsl	x23, x24, #4
  40b5a8:	ldr	x0, [x19, #296]
  40b5ac:	add	x0, x0, x20
  40b5b0:	ldr	x0, [x0, #8]
  40b5b4:	ldr	x0, [x0, x23]
  40b5b8:	add	x0, x0, x0, lsl #1
  40b5bc:	ldr	x1, [x19, #320]
  40b5c0:	add	x0, x1, x0, lsl #3
  40b5c4:	ldr	x1, [x0, #8]
  40b5c8:	mov	x22, #0x0                   	// #0
  40b5cc:	cmp	x1, #0x0
  40b5d0:	b.gt	40b54c <wcrtomb@plt+0x8c7c>
  40b5d4:	b	40b58c <wcrtomb@plt+0x8cbc>
  40b5d8:	add	x0, sp, #0x88
  40b5dc:	bl	40a250 <wcrtomb@plt+0x7980>
  40b5e0:	ldr	x0, [x19, #144]
  40b5e4:	ldr	x0, [x0, x26, lsl #3]
  40b5e8:	add	x1, sp, #0x88
  40b5ec:	bl	409f80 <wcrtomb@plt+0x76b0>
  40b5f0:	ldr	x0, [x19, #144]
  40b5f4:	ldr	x0, [x0, x26, lsl #3]
  40b5f8:	ldrb	w1, [sp, #108]
  40b5fc:	cmp	x0, w1, uxtb
  40b600:	cset	w26, eq  // eq = none
  40b604:	b	40b790 <wcrtomb@plt+0x8ec0>
  40b608:	cmp	x0, #0x10a
  40b60c:	b.ne	40b724 <wcrtomb@plt+0x8e54>  // b.any
  40b610:	add	x1, sp, #0x88
  40b614:	ldr	x0, [x19, #24]
  40b618:	ldr	x2, [x19]
  40b61c:	add	x0, x2, x0, lsl #5
  40b620:	ld1	{v0.16b, v1.16b}, [x0]
  40b624:	st1	{v0.16b, v1.16b}, [x1]
  40b628:	ldr	w0, [sp, #108]
  40b62c:	bl	409f6c <wcrtomb@plt+0x769c>
  40b630:	and	w26, w0, #0xff
  40b634:	ldr	x27, [x19, #296]
  40b638:	add	x27, x27, x20
  40b63c:	mov	w2, w25
  40b640:	ldrb	w1, [x27, #32]
  40b644:	mov	w0, w23
  40b648:	bl	409f08 <wcrtomb@plt+0x7638>
  40b64c:	and	w0, w0, #0xff
  40b650:	cbz	w0, 40b790 <wcrtomb@plt+0x8ec0>
  40b654:	ldr	x0, [x27, #56]
  40b658:	cbz	x0, 40b674 <wcrtomb@plt+0x8da4>
  40b65c:	ldr	x2, [x19, #296]
  40b660:	add	x2, x2, x20
  40b664:	add	x2, x2, #0x30
  40b668:	ldp	x0, x1, [sp, #112]
  40b66c:	bl	40a410 <wcrtomb@plt+0x7b40>
  40b670:	b	40b790 <wcrtomb@plt+0x8ec0>
  40b674:	mov	x1, #0x1                   	// #1
  40b678:	add	x0, x27, #0x30
  40b67c:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40b680:	b	40b65c <wcrtomb@plt+0x8d8c>
  40b684:	add	x2, sp, #0x88
  40b688:	add	x1, x19, #0x3f0
  40b68c:	add	x4, x19, #0x410
  40b690:	ldr	x0, [x1], #8
  40b694:	ldr	x3, [x2]
  40b698:	bic	x0, x3, x0
  40b69c:	str	x0, [x2], #8
  40b6a0:	cmp	x1, x4
  40b6a4:	b.ne	40b690 <wcrtomb@plt+0x8dc0>  // b.any
  40b6a8:	b	40b7bc <wcrtomb@plt+0x8eec>
  40b6ac:	add	x2, sp, #0x88
  40b6b0:	add	x1, x19, #0x3d0
  40b6b4:	ldr	x0, [x1], #8
  40b6b8:	ldr	x3, [x2]
  40b6bc:	bic	x0, x3, x0
  40b6c0:	str	x0, [x2], #8
  40b6c4:	cmp	x1, x24
  40b6c8:	b.ne	40b6b4 <wcrtomb@plt+0x8de4>  // b.any
  40b6cc:	b	40b7d4 <wcrtomb@plt+0x8f04>
  40b6d0:	add	x3, sp, #0x88
  40b6d4:	add	x0, x19, #0x3d0
  40b6d8:	ldr	x1, [x0]
  40b6dc:	ldr	x2, [x0, #32]
  40b6e0:	orr	x2, x1, x2
  40b6e4:	ldr	x1, [x3]
  40b6e8:	and	x1, x1, x2
  40b6ec:	str	x1, [x3], #8
  40b6f0:	add	x0, x0, #0x8
  40b6f4:	cmp	x24, x0
  40b6f8:	b.ne	40b6d8 <wcrtomb@plt+0x8e08>  // b.any
  40b6fc:	b	40b7ec <wcrtomb@plt+0x8f1c>
  40b700:	add	x0, sp, #0xa8
  40b704:	add	x2, sp, #0x88
  40b708:	add	x4, x0, #0x20
  40b70c:	ldr	x1, [x2], #8
  40b710:	ldr	x3, [x0]
  40b714:	bic	x1, x3, x1
  40b718:	str	x1, [x0], #8
  40b71c:	cmp	x4, x0
  40b720:	b.ne	40b70c <wcrtomb@plt+0x8e3c>  // b.any
  40b724:	add	x22, x22, #0x1
  40b728:	ldr	x0, [sp, #256]
  40b72c:	cmp	x0, x22
  40b730:	b.le	40b858 <wcrtomb@plt+0x8f88>
  40b734:	lsl	x0, x22, #4
  40b738:	ldr	x1, [sp, #248]
  40b73c:	add	x2, x1, x0
  40b740:	ldp	x4, x5, [x2]
  40b744:	stp	x4, x5, [sp, #112]
  40b748:	ldr	w23, [x2, #8]
  40b74c:	ldr	x26, [x1, x0]
  40b750:	ldr	x0, [x19, #144]
  40b754:	ldr	x0, [x0, x26, lsl #3]
  40b758:	cmp	x0, #0xff
  40b75c:	b.ls	40b5d8 <wcrtomb@plt+0x8d08>  // b.plast
  40b760:	cmp	x0, #0x113
  40b764:	b.le	40b608 <wcrtomb@plt+0x8d38>
  40b768:	add	x1, sp, #0x88
  40b76c:	ldr	x2, [x19]
  40b770:	add	x0, x2, x0, lsl #5
  40b774:	sub	x0, x0, #0x2, lsl #12
  40b778:	sub	x0, x0, #0x280
  40b77c:	ld1	{v0.16b, v1.16b}, [x0]
  40b780:	st1	{v0.16b, v1.16b}, [x1]
  40b784:	ldr	w0, [sp, #108]
  40b788:	bl	409f6c <wcrtomb@plt+0x769c>
  40b78c:	and	w26, w0, #0xff
  40b790:	cmp	w23, #0x1ff
  40b794:	b.eq	40b820 <wcrtomb@plt+0x8f50>  // b.none
  40b798:	ldr	x0, [x19, #296]
  40b79c:	add	x0, x0, x20
  40b7a0:	ldrb	w27, [x0, #32]
  40b7a4:	mov	w2, #0x4                   	// #4
  40b7a8:	mov	w1, w27
  40b7ac:	mov	w0, w23
  40b7b0:	bl	409f08 <wcrtomb@plt+0x7638>
  40b7b4:	and	w0, w0, #0xff
  40b7b8:	cbz	w0, 40b684 <wcrtomb@plt+0x8db4>
  40b7bc:	mov	w2, #0x2                   	// #2
  40b7c0:	mov	w1, w27
  40b7c4:	mov	w0, w23
  40b7c8:	bl	409f08 <wcrtomb@plt+0x7638>
  40b7cc:	and	w0, w0, #0xff
  40b7d0:	cbz	w0, 40b6ac <wcrtomb@plt+0x8ddc>
  40b7d4:	mov	w2, w25
  40b7d8:	mov	w1, w27
  40b7dc:	mov	w0, w23
  40b7e0:	bl	409f08 <wcrtomb@plt+0x7638>
  40b7e4:	and	w0, w0, #0xff
  40b7e8:	cbz	w0, 40b6d0 <wcrtomb@plt+0x8e00>
  40b7ec:	ldr	x0, [sp, #136]
  40b7f0:	ldr	x1, [sp, #144]
  40b7f4:	orr	x0, x0, x1
  40b7f8:	ldr	x1, [sp, #152]
  40b7fc:	ldr	x2, [sp, #160]
  40b800:	orr	x1, x1, x2
  40b804:	orr	x0, x0, x1
  40b808:	cbz	x0, 40b724 <wcrtomb@plt+0x8e54>
  40b80c:	add	x1, sp, #0x88
  40b810:	ldr	w0, [sp, #108]
  40b814:	bl	409f6c <wcrtomb@plt+0x769c>
  40b818:	and	w0, w0, #0xff
  40b81c:	cbz	w0, 40b700 <wcrtomb@plt+0x8e30>
  40b820:	cbz	w26, 40b700 <wcrtomb@plt+0x8e30>
  40b824:	add	x0, sp, #0xa8
  40b828:	add	x2, sp, #0x88
  40b82c:	add	x4, x0, #0x20
  40b830:	ldr	x1, [x0]
  40b834:	ldr	x3, [x2], #8
  40b838:	and	x1, x1, x3
  40b83c:	str	x1, [x0], #8
  40b840:	cmp	x0, x4
  40b844:	b.ne	40b830 <wcrtomb@plt+0x8f60>  // b.any
  40b848:	add	x2, sp, #0xe0
  40b84c:	ldp	x0, x1, [sp, #112]
  40b850:	bl	40a534 <wcrtomb@plt+0x7c64>
  40b854:	b	40b724 <wcrtomb@plt+0x8e54>
  40b858:	ldr	x1, [x19, #176]
  40b85c:	add	x0, sp, #0xc8
  40b860:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40b864:	ldr	x2, [sp, #232]
  40b868:	cmp	x2, #0x0
  40b86c:	b.le	40b9b8 <wcrtomb@plt+0x90e8>
  40b870:	ldrb	w0, [x19, #328]
  40b874:	cbz	w0, 40b8ac <wcrtomb@plt+0x8fdc>
  40b878:	ldrb	w0, [x19, #1048]
  40b87c:	cbz	w0, 40b948 <wcrtomb@plt+0x9078>
  40b880:	ldr	x4, [x19, #280]
  40b884:	ldr	x3, [sp, #224]
  40b888:	mov	x1, #0x0                   	// #0
  40b88c:	lsl	x0, x1, #4
  40b890:	ldr	x0, [x3, x0]
  40b894:	ldrb	w0, [x4, x0]
  40b898:	add	x1, x1, #0x1
  40b89c:	ands	w0, w0, #0x1
  40b8a0:	ccmp	x2, x1, #0x4, ne  // ne = any
  40b8a4:	b.gt	40b88c <wcrtomb@plt+0x8fbc>
  40b8a8:	cbnz	w0, 40b948 <wcrtomb@plt+0x9078>
  40b8ac:	mov	x0, #0x1                   	// #1
  40b8b0:	mov	w20, #0x0                   	// #0
  40b8b4:	add	x6, x19, #0x3e8
  40b8b8:	add	x5, x19, #0x3c8
  40b8bc:	add	x1, sp, #0xa8
  40b8c0:	add	x1, x1, x0, lsl #3
  40b8c4:	ldur	x2, [x1, #-8]
  40b8c8:	ldr	x1, [x6, x0, lsl #3]
  40b8cc:	orr	w3, w20, #0x4
  40b8d0:	tst	x2, x1
  40b8d4:	csel	w20, w3, w20, ne  // ne = any
  40b8d8:	ldr	x3, [x5, x0, lsl #3]
  40b8dc:	orr	w4, w20, #0x2
  40b8e0:	tst	x2, x3
  40b8e4:	csel	w20, w4, w20, ne  // ne = any
  40b8e8:	orr	x1, x1, x3
  40b8ec:	orr	w3, w20, #0x1
  40b8f0:	bics	xzr, x2, x1
  40b8f4:	csel	w20, w3, w20, ne  // ne = any
  40b8f8:	add	x0, x0, #0x1
  40b8fc:	cmp	x0, #0x5
  40b900:	b.ne	40b8bc <wcrtomb@plt+0x8fec>  // b.any
  40b904:	add	x1, sp, #0xe0
  40b908:	mov	x0, x19
  40b90c:	bl	40a0d4 <wcrtomb@plt+0x7804>
  40b910:	mov	w23, w0
  40b914:	mov	x22, #0xffffffffffffffff    	// #-1
  40b918:	bics	wzr, w20, w0
  40b91c:	b.ne	40b970 <wcrtomb@plt+0x90a0>  // b.any
  40b920:	and	w20, w23, w20
  40b924:	mov	x23, x22
  40b928:	tbnz	w20, #2, 40b988 <wcrtomb@plt+0x90b8>
  40b92c:	mov	x25, x22
  40b930:	tbnz	w20, #1, 40b9a0 <wcrtomb@plt+0x90d0>
  40b934:	mov	x0, x19
  40b938:	bl	40a758 <wcrtomb@plt+0x7e88>
  40b93c:	mov	x20, #0x0                   	// #0
  40b940:	add	x24, x19, #0x1cc
  40b944:	b	40ba00 <wcrtomb@plt+0x9130>
  40b948:	ldr	x0, [x19, #296]
  40b94c:	add	x3, sp, #0xc8
  40b950:	mov	w2, #0xffffffff            	// #-1
  40b954:	add	x1, sp, #0xe0
  40b958:	add	x0, x0, #0x8
  40b95c:	bl	40ac10 <wcrtomb@plt+0x8340>
  40b960:	add	x1, sp, #0xe0
  40b964:	add	x0, sp, #0xc8
  40b968:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40b96c:	b	40b8ac <wcrtomb@plt+0x8fdc>
  40b970:	eor	w2, w0, #0x7
  40b974:	add	x1, sp, #0xe0
  40b978:	mov	x0, x19
  40b97c:	bl	40aed8 <wcrtomb@plt+0x8608>
  40b980:	mov	x22, x0
  40b984:	b	40b920 <wcrtomb@plt+0x9050>
  40b988:	mov	w2, #0x4                   	// #4
  40b98c:	add	x1, sp, #0xe0
  40b990:	mov	x0, x19
  40b994:	bl	40aed8 <wcrtomb@plt+0x8608>
  40b998:	mov	x23, x0
  40b99c:	b	40b92c <wcrtomb@plt+0x905c>
  40b9a0:	mov	w2, #0x2                   	// #2
  40b9a4:	add	x1, sp, #0xe0
  40b9a8:	mov	x0, x19
  40b9ac:	bl	40aed8 <wcrtomb@plt+0x8608>
  40b9b0:	mov	x25, x0
  40b9b4:	b	40b934 <wcrtomb@plt+0x9064>
  40b9b8:	ldrb	w0, [x19, #328]
  40b9bc:	cbz	w0, 40b9d8 <wcrtomb@plt+0x9108>
  40b9c0:	ldr	w25, [x19, #364]
  40b9c4:	sub	w25, w25, #0x1
  40b9c8:	sxtw	x25, w25
  40b9cc:	ldr	x22, [x19, #400]
  40b9d0:	mov	x23, #0x0                   	// #0
  40b9d4:	b	40b93c <wcrtomb@plt+0x906c>
  40b9d8:	mov	x25, #0xffffffffffffffff    	// #-1
  40b9dc:	mov	x23, x25
  40b9e0:	mov	x22, x25
  40b9e4:	b	40b93c <wcrtomb@plt+0x906c>
  40b9e8:	cmp	w0, #0x4
  40b9ec:	csel	x0, x22, x23, ne  // ne = any
  40b9f0:	str	x0, [x21, x20, lsl #3]
  40b9f4:	add	x20, x20, #0x1
  40b9f8:	cmp	x20, #0x100
  40b9fc:	b.eq	40ba28 <wcrtomb@plt+0x9158>  // b.none
  40ba00:	add	x1, sp, #0xa8
  40ba04:	mov	w0, w20
  40ba08:	bl	409f6c <wcrtomb@plt+0x769c>
  40ba0c:	and	w0, w0, #0xff
  40ba10:	cbz	w0, 40b9f4 <wcrtomb@plt+0x9124>
  40ba14:	ldrb	w0, [x24, x20]
  40ba18:	cmp	w0, #0x2
  40ba1c:	b.ne	40b9e8 <wcrtomb@plt+0x9118>  // b.any
  40ba20:	str	x25, [x21, x20, lsl #3]
  40ba24:	b	40b9f4 <wcrtomb@plt+0x9124>
  40ba28:	ldr	x0, [sp, #224]
  40ba2c:	bl	402660 <free@plt>
  40ba30:	ldr	x0, [sp, #248]
  40ba34:	bl	402660 <free@plt>
  40ba38:	ldr	x0, [sp, #200]
  40ba3c:	bl	402660 <free@plt>
  40ba40:	ldrb	w20, [x19, #459]
  40ba44:	add	x1, sp, #0xa8
  40ba48:	mov	w0, w20
  40ba4c:	bl	409f6c <wcrtomb@plt+0x769c>
  40ba50:	and	w0, w0, #0xff
  40ba54:	cbz	w0, 40ba74 <wcrtomb@plt+0x91a4>
  40ba58:	and	x20, x20, #0xff
  40ba5c:	ldr	x1, [x21, x20, lsl #3]
  40ba60:	ldr	x0, [x19, #392]
  40ba64:	str	x1, [x0, x28, lsl #3]
  40ba68:	ldrb	w0, [x19, #459]
  40ba6c:	mov	x1, #0xffffffffffffffff    	// #-1
  40ba70:	str	x1, [x21, x0, lsl #3]
  40ba74:	ldrb	w0, [sp, #108]
  40ba78:	ldr	x0, [x21, x0, lsl #3]
  40ba7c:	ldp	x19, x20, [sp, #16]
  40ba80:	ldp	x21, x22, [sp, #32]
  40ba84:	ldp	x23, x24, [sp, #48]
  40ba88:	ldp	x25, x26, [sp, #64]
  40ba8c:	ldp	x27, x28, [sp, #80]
  40ba90:	ldp	x29, x30, [sp], #272
  40ba94:	ret
  40ba98:	stp	x29, x30, [sp, #-96]!
  40ba9c:	mov	x29, sp
  40baa0:	stp	x19, x20, [sp, #16]
  40baa4:	stp	x21, x22, [sp, #32]
  40baa8:	stp	x23, x24, [sp, #48]
  40baac:	stp	x25, x26, [sp, #64]
  40bab0:	mov	x19, x0
  40bab4:	mov	x25, x1
  40bab8:	mov	x23, x2
  40babc:	mov	x2, x3
  40bac0:	ldr	x1, [x23]
  40bac4:	mov	x3, x0
  40bac8:	sub	x2, x2, x1
  40bacc:	add	x0, sp, #0x5c
  40bad0:	bl	40a144 <wcrtomb@plt+0x7874>
  40bad4:	mov	w24, w0
  40bad8:	str	xzr, [x19, #416]
  40badc:	mov	x20, x25
  40bae0:	mov	w22, #0x0                   	// #0
  40bae4:	cmp	w0, #0x0
  40bae8:	b.gt	40bb38 <wcrtomb@plt+0x9268>
  40baec:	b	40bbb4 <wcrtomb@plt+0x92e4>
  40baf0:	ldr	x0, [x23]
  40baf4:	ldrb	w2, [x0]
  40baf8:	and	x0, x2, #0xff
  40bafc:	ldr	x0, [x21, x0, lsl #3]
  40bb00:	cmn	x0, #0x2
  40bb04:	b.eq	40bba0 <wcrtomb@plt+0x92d0>  // b.none
  40bb08:	ldr	x2, [x23]
  40bb0c:	add	x0, x2, #0x1
  40bb10:	str	x0, [x23]
  40bb14:	ldrb	w0, [x2]
  40bb18:	ldr	x20, [x21, x0, lsl #3]
  40bb1c:	add	w22, w22, #0x1
  40bb20:	cmp	w24, w22
  40bb24:	b.eq	40bbb0 <wcrtomb@plt+0x92e0>  // b.none
  40bb28:	cbz	w22, 40bb38 <wcrtomb@plt+0x9268>
  40bb2c:	ldrsw	x0, [x19, #364]
  40bb30:	cmp	x0, x20
  40bb34:	b.gt	40bbb4 <wcrtomb@plt+0x92e4>
  40bb38:	lsl	x26, x20, #3
  40bb3c:	ldr	x0, [x19, #368]
  40bb40:	ldr	x21, [x0, x20, lsl #3]
  40bb44:	cbnz	x21, 40baf0 <wcrtomb@plt+0x9220>
  40bb48:	ldr	x0, [x19, #376]
  40bb4c:	ldr	x21, [x0, x20, lsl #3]
  40bb50:	cbnz	x21, 40baf0 <wcrtomb@plt+0x9220>
  40bb54:	ldr	x0, [x23]
  40bb58:	ldrb	w2, [x0]
  40bb5c:	mov	x1, x19
  40bb60:	mov	x0, x20
  40bb64:	bl	40b35c <wcrtomb@plt+0x8a8c>
  40bb68:	ldr	x0, [x19, #368]
  40bb6c:	ldr	x21, [x0, x26]
  40bb70:	cbnz	x21, 40baf0 <wcrtomb@plt+0x9220>
  40bb74:	ldr	x0, [x19, #376]
  40bb78:	ldr	x21, [x0, x26]
  40bb7c:	cbnz	x21, 40baf0 <wcrtomb@plt+0x9220>
  40bb80:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  40bb84:	add	x3, x3, #0x350
  40bb88:	mov	w2, #0xc93                 	// #3219
  40bb8c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40bb90:	add	x1, x1, #0xc0
  40bb94:	adrp	x0, 425000 <_obstack_memory_used@@Base+0xe218>
  40bb98:	add	x0, x0, #0xb0
  40bb9c:	bl	402830 <__assert_fail@plt>
  40bba0:	mov	x1, x19
  40bba4:	mov	x0, x20
  40bba8:	bl	40b35c <wcrtomb@plt+0x8a8c>
  40bbac:	b	40bb08 <wcrtomb@plt+0x9238>
  40bbb0:	mov	w22, w24
  40bbb4:	sub	w22, w24, w22
  40bbb8:	ldr	x24, [x23]
  40bbbc:	add	x22, x24, w22, sxtw
  40bbc0:	str	x22, [x23]
  40bbc4:	mov	x22, x20
  40bbc8:	ldr	w0, [sp, #92]
  40bbcc:	cmn	w0, #0x1
  40bbd0:	b.eq	40bc84 <wcrtomb@plt+0x93b4>  // b.none
  40bbd4:	add	x25, x25, x25, lsl #2
  40bbd8:	lsl	x25, x25, #4
  40bbdc:	ldr	x0, [x19, #296]
  40bbe0:	add	x0, x0, x25
  40bbe4:	ldr	x0, [x0, #72]
  40bbe8:	tbnz	x0, #63, 40bca0 <wcrtomb@plt+0x93d0>
  40bbec:	mov	x23, x20
  40bbf0:	lsl	x21, x20, #3
  40bbf4:	ldr	x22, [x19, #432]
  40bbf8:	ldr	x1, [x22, x20, lsl #3]
  40bbfc:	cbz	x1, 40bd34 <wcrtomb@plt+0x9464>
  40bc00:	ldr	x0, [x19, #296]
  40bc04:	add	x0, x0, x25
  40bc08:	ldr	x0, [x0, #72]
  40bc0c:	ldr	x22, [x1, x0, lsl #3]
  40bc10:	tbz	x22, #63, 40bc84 <wcrtomb@plt+0x93b4>
  40bc14:	cmn	x20, #0x1
  40bc18:	b.eq	40bd64 <wcrtomb@plt+0x9494>  // b.none
  40bc1c:	ldr	x0, [x19, #296]
  40bc20:	add	x23, x23, x23, lsl #2
  40bc24:	add	x1, x0, x23, lsl #4
  40bc28:	add	x0, x0, x25
  40bc2c:	add	x3, x19, #0x198
  40bc30:	mov	w2, #0xffffffff            	// #-1
  40bc34:	add	x1, x1, #0x8
  40bc38:	add	x0, x0, #0x30
  40bc3c:	bl	40ac10 <wcrtomb@plt+0x8340>
  40bc40:	add	x20, x19, #0x198
  40bc44:	mov	x1, x20
  40bc48:	mov	x0, x19
  40bc4c:	bl	40a0d4 <wcrtomb@plt+0x7804>
  40bc50:	eor	w2, w0, #0x7
  40bc54:	mov	x1, x20
  40bc58:	mov	x0, x19
  40bc5c:	bl	40aed8 <wcrtomb@plt+0x8608>
  40bc60:	mov	x22, x0
  40bc64:	mov	x0, x19
  40bc68:	bl	40a758 <wcrtomb@plt+0x7e88>
  40bc6c:	ldr	x2, [x19, #432]
  40bc70:	ldr	x0, [x19, #296]
  40bc74:	add	x25, x0, x25
  40bc78:	ldr	x1, [x25, #72]
  40bc7c:	ldr	x0, [x2, x21]
  40bc80:	str	x22, [x0, x1, lsl #3]
  40bc84:	mov	x0, x22
  40bc88:	ldp	x19, x20, [sp, #16]
  40bc8c:	ldp	x21, x22, [sp, #32]
  40bc90:	ldp	x23, x24, [sp, #48]
  40bc94:	ldp	x25, x26, [sp, #64]
  40bc98:	ldp	x29, x30, [sp], #96
  40bc9c:	ret
  40bca0:	ldr	x0, [x19, #440]
  40bca4:	cmp	x0, #0x3ff
  40bca8:	b.le	40bd18 <wcrtomb@plt+0x9448>
  40bcac:	ldr	x0, [x19, #352]
  40bcb0:	tbnz	x0, #63, 40bcdc <wcrtomb@plt+0x940c>
  40bcb4:	mov	x21, #0xffffffffffffffff    	// #-1
  40bcb8:	ldr	x0, [x19, #432]
  40bcbc:	ldr	x0, [x0, x21, lsl #3]
  40bcc0:	bl	402660 <free@plt>
  40bcc4:	ldr	x0, [x19, #432]
  40bcc8:	str	xzr, [x0, x21, lsl #3]
  40bccc:	add	x21, x21, #0x1
  40bcd0:	ldr	x0, [x19, #352]
  40bcd4:	cmp	x0, x21
  40bcd8:	b.gt	40bcb8 <wcrtomb@plt+0x93e8>
  40bcdc:	ldr	x0, [x19, #304]
  40bce0:	cmp	x0, #0x0
  40bce4:	b.le	40bd14 <wcrtomb@plt+0x9444>
  40bce8:	mov	x2, #0x0                   	// #0
  40bcec:	mov	x1, #0x0                   	// #0
  40bcf0:	mov	x3, #0xffffffffffffffff    	// #-1
  40bcf4:	ldr	x0, [x19, #296]
  40bcf8:	add	x0, x0, x2
  40bcfc:	str	x3, [x0, #72]
  40bd00:	add	x1, x1, #0x1
  40bd04:	add	x2, x2, #0x50
  40bd08:	ldr	x0, [x19, #304]
  40bd0c:	cmp	x0, x1
  40bd10:	b.gt	40bcf4 <wcrtomb@plt+0x9424>
  40bd14:	str	xzr, [x19, #440]
  40bd18:	ldr	x1, [x19, #440]
  40bd1c:	add	x0, x1, #0x1
  40bd20:	str	x0, [x19, #440]
  40bd24:	ldr	x0, [x19, #296]
  40bd28:	add	x0, x0, x25
  40bd2c:	str	x1, [x0, #72]
  40bd30:	b	40bbec <wcrtomb@plt+0x931c>
  40bd34:	mov	x0, #0x2000                	// #8192
  40bd38:	bl	413fec <wcrtomb@plt+0x1171c>
  40bd3c:	str	x0, [x22, x20, lsl #3]
  40bd40:	mov	x0, #0x0                   	// #0
  40bd44:	mov	x2, #0xffffffffffffffff    	// #-1
  40bd48:	ldr	x1, [x19, #432]
  40bd4c:	ldr	x1, [x1, x21]
  40bd50:	str	x2, [x1, x0]
  40bd54:	add	x0, x0, #0x8
  40bd58:	cmp	x0, #0x2, lsl #12
  40bd5c:	b.ne	40bd48 <wcrtomb@plt+0x9478>  // b.any
  40bd60:	b	40bc14 <wcrtomb@plt+0x9344>
  40bd64:	ldr	x0, [x19, #296]
  40bd68:	add	x0, x0, x25
  40bd6c:	add	x1, x19, #0x198
  40bd70:	add	x0, x0, #0x30
  40bd74:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40bd78:	b	40bc40 <wcrtomb@plt+0x9370>
  40bd7c:	stp	x29, x30, [sp, #-144]!
  40bd80:	mov	x29, sp
  40bd84:	stp	x19, x20, [sp, #16]
  40bd88:	stp	x21, x22, [sp, #32]
  40bd8c:	stp	x23, x24, [sp, #48]
  40bd90:	stp	x25, x26, [sp, #64]
  40bd94:	stp	x27, x28, [sp, #80]
  40bd98:	mov	x19, x0
  40bd9c:	mov	x21, x1
  40bda0:	mov	x23, x2
  40bda4:	and	w0, w3, #0xff
  40bda8:	str	w0, [sp, #116]
  40bdac:	mov	x26, x4
  40bdb0:	ldr	x0, [x19, #304]
  40bdb4:	cmp	x0, #0x3ff
  40bdb8:	b.le	40bee4 <wcrtomb@plt+0x9614>
  40bdbc:	ldr	w20, [x19, #364]
  40bdc0:	sxtw	x22, w20
  40bdc4:	cmp	x0, w20, sxtw
  40bdc8:	b.le	40be0c <wcrtomb@plt+0x953c>
  40bdcc:	sbfiz	x0, x20, #2, #32
  40bdd0:	add	x20, x0, w20, sxtw
  40bdd4:	lsl	x20, x20, #4
  40bdd8:	ldr	x0, [x19, #296]
  40bddc:	add	x0, x0, x20
  40bde0:	ldr	x0, [x0, #8]
  40bde4:	bl	402660 <free@plt>
  40bde8:	ldr	x0, [x19, #296]
  40bdec:	add	x0, x0, x20
  40bdf0:	ldr	x0, [x0, #48]
  40bdf4:	bl	402660 <free@plt>
  40bdf8:	add	x22, x22, #0x1
  40bdfc:	add	x20, x20, #0x50
  40be00:	ldr	x0, [x19, #304]
  40be04:	cmp	x22, x0
  40be08:	b.lt	40bdd8 <wcrtomb@plt+0x9508>  // b.tstop
  40be0c:	ldrsw	x0, [x19, #364]
  40be10:	str	x0, [x19, #304]
  40be14:	ldr	x0, [x19, #368]
  40be18:	cbz	x0, 40be68 <wcrtomb@plt+0x9598>
  40be1c:	ldr	x0, [x19, #352]
  40be20:	cmp	x0, #0x0
  40be24:	b.le	40be64 <wcrtomb@plt+0x9594>
  40be28:	mov	x20, #0x0                   	// #0
  40be2c:	ldr	x0, [x19, #368]
  40be30:	ldr	x0, [x0, x20, lsl #3]
  40be34:	bl	402660 <free@plt>
  40be38:	ldr	x0, [x19, #376]
  40be3c:	ldr	x0, [x0, x20, lsl #3]
  40be40:	bl	402660 <free@plt>
  40be44:	ldr	x0, [x19, #376]
  40be48:	str	xzr, [x0, x20, lsl #3]
  40be4c:	ldr	x0, [x19, #368]
  40be50:	str	xzr, [x0, x20, lsl #3]
  40be54:	add	x20, x20, #0x1
  40be58:	ldr	x0, [x19, #352]
  40be5c:	cmp	x20, x0
  40be60:	b.lt	40be2c <wcrtomb@plt+0x955c>  // b.tstop
  40be64:	str	wzr, [x19, #360]
  40be68:	ldrb	w0, [x19, #1048]
  40be6c:	cbz	w0, 40bee4 <wcrtomb@plt+0x9614>
  40be70:	ldr	x0, [x19, #432]
  40be74:	cbz	x0, 40bee4 <wcrtomb@plt+0x9614>
  40be78:	ldr	x0, [x19, #352]
  40be7c:	tbnz	x0, #63, 40bea8 <wcrtomb@plt+0x95d8>
  40be80:	mov	x20, #0xffffffffffffffff    	// #-1
  40be84:	ldr	x0, [x19, #432]
  40be88:	ldr	x0, [x0, x20, lsl #3]
  40be8c:	bl	402660 <free@plt>
  40be90:	ldr	x0, [x19, #432]
  40be94:	str	xzr, [x0, x20, lsl #3]
  40be98:	add	x20, x20, #0x1
  40be9c:	ldr	x0, [x19, #352]
  40bea0:	cmp	x20, x0
  40bea4:	b.lt	40be84 <wcrtomb@plt+0x95b4>  // b.tstop
  40bea8:	ldr	w0, [x19, #364]
  40beac:	cmp	w0, #0x0
  40beb0:	b.le	40bee0 <wcrtomb@plt+0x9610>
  40beb4:	mov	x2, #0x0                   	// #0
  40beb8:	mov	x1, #0x0                   	// #0
  40bebc:	mov	x3, #0xffffffffffffffff    	// #-1
  40bec0:	ldr	x0, [x19, #296]
  40bec4:	add	x0, x0, x2
  40bec8:	str	x3, [x0, #72]
  40becc:	add	x1, x1, #0x1
  40bed0:	add	x2, x2, #0x50
  40bed4:	ldrsw	x0, [x19, #364]
  40bed8:	cmp	x1, x0
  40bedc:	b.lt	40bec0 <wcrtomb@plt+0x95f0>  // b.tstop
  40bee0:	str	xzr, [x19, #440]
  40bee4:	ldr	x0, [x19, #352]
  40bee8:	cbz	x0, 40bf28 <wcrtomb@plt+0x9658>
  40beec:	str	x21, [sp, #136]
  40bef0:	ldr	x25, [x19, #368]
  40bef4:	ldrb	w28, [x19, #459]
  40bef8:	ldrb	w0, [x23]
  40befc:	str	w0, [sp, #112]
  40bf00:	strb	w28, [x23]
  40bf04:	str	xzr, [x19, #272]
  40bf08:	ldr	x0, [x19, #424]
  40bf0c:	cbz	x0, 40bf34 <wcrtomb@plt+0x9664>
  40bf10:	str	xzr, [sp, #96]
  40bf14:	mov	x27, #0x0                   	// #0
  40bf18:	mov	x20, #0x0                   	// #0
  40bf1c:	add	x0, x19, w28, sxtw
  40bf20:	str	x0, [sp, #120]
  40bf24:	b	40bfe4 <wcrtomb@plt+0x9714>
  40bf28:	mov	x0, x19
  40bf2c:	bl	40a758 <wcrtomb@plt+0x7e88>
  40bf30:	b	40beec <wcrtomb@plt+0x961c>
  40bf34:	ldr	x1, [x19, #176]
  40bf38:	add	x0, x19, #0x198
  40bf3c:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40bf40:	b	40bf10 <wcrtomb@plt+0x9640>
  40bf44:	ldr	x0, [sp, #136]
  40bf48:	ldrb	w1, [x0]
  40bf4c:	ldr	x1, [x24, x1, lsl #3]
  40bf50:	cmp	x20, x1
  40bf54:	b.ne	40c018 <wcrtomb@plt+0x9748>  // b.any
  40bf58:	add	x0, x0, #0x1
  40bf5c:	str	x0, [sp, #136]
  40bf60:	ldrb	w1, [x0]
  40bf64:	add	x0, x0, #0x1
  40bf68:	ldr	x1, [x24, x1, lsl #3]
  40bf6c:	cmp	x20, x1
  40bf70:	b.eq	40bf5c <wcrtomb@plt+0x968c>  // b.none
  40bf74:	b	40c018 <wcrtomb@plt+0x9748>
  40bf78:	mov	x3, x19
  40bf7c:	sub	x2, x23, x21
  40bf80:	mov	x1, x21
  40bf84:	add	x0, sp, #0x84
  40bf88:	bl	40a144 <wcrtomb@plt+0x7874>
  40bf8c:	add	x21, x21, w0, sxtw
  40bf90:	cmp	x27, x21
  40bf94:	b.hi	40bf78 <wcrtomb@plt+0x96a8>  // b.pmore
  40bf98:	str	x21, [sp, #136]
  40bf9c:	ldr	x0, [x19, #296]
  40bfa0:	add	x22, x22, x22, lsl #2
  40bfa4:	add	x22, x0, x22, lsl #4
  40bfa8:	ldr	x0, [x22, #56]
  40bfac:	cbz	x0, 40bfcc <wcrtomb@plt+0x96fc>
  40bfb0:	ldr	x1, [sp, #136]
  40bfb4:	ldrb	w0, [x1]
  40bfb8:	add	x0, x19, x0, lsl #2
  40bfbc:	ldr	w0, [x0, #1308]
  40bfc0:	cmp	x23, x1
  40bfc4:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40bfc8:	b.eq	40c040 <wcrtomb@plt+0x9770>  // b.none
  40bfcc:	ldr	x0, [sp, #136]
  40bfd0:	add	x1, x0, #0x1
  40bfd4:	str	x1, [sp, #136]
  40bfd8:	ldrb	w0, [x0]
  40bfdc:	mov	x27, x20
  40bfe0:	ldr	x20, [x24, x0, lsl #3]
  40bfe4:	mov	x22, x20
  40bfe8:	lsl	x0, x20, #3
  40bfec:	str	x0, [sp, #104]
  40bff0:	ldr	x24, [x25, x20, lsl #3]
  40bff4:	cbz	x24, 40c068 <wcrtomb@plt+0x9798>
  40bff8:	ldrsw	x0, [x19, #364]
  40bffc:	cmp	x0, x20
  40c000:	b.le	40bf9c <wcrtomb@plt+0x96cc>
  40c004:	ldr	x1, [x19, #296]
  40c008:	add	x0, x22, x22, lsl #2
  40c00c:	add	x0, x1, x0, lsl #4
  40c010:	ldr	x0, [x0, #56]
  40c014:	cbz	x0, 40bf44 <wcrtomb@plt+0x9674>
  40c018:	ldr	x27, [sp, #136]
  40c01c:	ldrb	w0, [x27]
  40c020:	add	x0, x19, x0
  40c024:	ldrb	w0, [x0, #716]
  40c028:	cbnz	w0, 40c038 <wcrtomb@plt+0x9768>
  40c02c:	cmp	x27, x21
  40c030:	b.hi	40bf78 <wcrtomb@plt+0x96a8>  // b.pmore
  40c034:	b	40bf98 <wcrtomb@plt+0x96c8>
  40c038:	mov	x21, x27
  40c03c:	b	40bf98 <wcrtomb@plt+0x96c8>
  40c040:	mov	x3, x23
  40c044:	add	x2, sp, #0x88
  40c048:	mov	x1, x20
  40c04c:	mov	x0, x19
  40c050:	bl	40ba98 <wcrtomb@plt+0x91c8>
  40c054:	ldr	x21, [sp, #136]
  40c058:	ldr	x25, [x19, #368]
  40c05c:	mov	x27, x20
  40c060:	mov	x20, x0
  40c064:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c068:	tbnz	x20, #63, 40c10c <wcrtomb@plt+0x983c>
  40c06c:	ldr	x0, [x19, #376]
  40c070:	ldr	x1, [sp, #104]
  40c074:	ldr	x0, [x0, x1]
  40c078:	cbz	x0, 40c278 <wcrtomb@plt+0x99a8>
  40c07c:	ldr	x24, [sp, #136]
  40c080:	ldrb	w27, [x24]
  40c084:	ldr	x0, [x19, #384]
  40c088:	add	x1, x19, w27, sxtw
  40c08c:	ldrb	w0, [x0, x20]
  40c090:	ldrb	w1, [x1, #460]
  40c094:	and	w0, w0, w1
  40c098:	tst	w0, #0xff
  40c09c:	b.ne	40c1a4 <wcrtomb@plt+0x98d4>  // b.any
  40c0a0:	cmp	x23, x24
  40c0a4:	b.eq	40c1e0 <wcrtomb@plt+0x9910>  // b.none
  40c0a8:	ldrsw	x0, [x19, #364]
  40c0ac:	cmp	x20, x0
  40c0b0:	b.lt	40c20c <wcrtomb@plt+0x993c>  // b.tstop
  40c0b4:	ldr	x0, [x19, #296]
  40c0b8:	add	x22, x22, x22, lsl #2
  40c0bc:	add	x22, x0, x22, lsl #4
  40c0c0:	ldr	x0, [x22, #56]
  40c0c4:	cbz	x0, 40c0e4 <wcrtomb@plt+0x9814>
  40c0c8:	ldr	x1, [sp, #136]
  40c0cc:	ldrb	w0, [x1]
  40c0d0:	add	x0, x19, x0, lsl #2
  40c0d4:	ldr	w0, [x0, #1308]
  40c0d8:	cmp	x23, x1
  40c0dc:	ccmn	w0, #0x1, #0x0, hi  // hi = pmore
  40c0e0:	b.eq	40c250 <wcrtomb@plt+0x9980>  // b.none
  40c0e4:	ldr	x0, [x19, #376]
  40c0e8:	ldr	x1, [sp, #104]
  40c0ec:	ldr	x1, [x0, x1]
  40c0f0:	ldr	x0, [sp, #136]
  40c0f4:	add	x2, x0, #0x1
  40c0f8:	str	x2, [sp, #136]
  40c0fc:	ldrb	w0, [x0]
  40c100:	mov	x27, x20
  40c104:	ldr	x20, [x1, x0, lsl #3]
  40c108:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c10c:	cmn	x20, #0x2
  40c110:	b.eq	40c170 <wcrtomb@plt+0x98a0>  // b.none
  40c114:	ldr	x21, [sp, #136]
  40c118:	cmp	x23, x21
  40c11c:	b.cc	40c1a0 <wcrtomb@plt+0x98d0>  // b.lo, b.ul, b.last
  40c120:	ldurb	w0, [x21, #-1]
  40c124:	cmp	w0, w28
  40c128:	b.ne	40c1a0 <wcrtomb@plt+0x98d0>  // b.any
  40c12c:	ldr	x0, [x19, #392]
  40c130:	ldr	x20, [x0, x27, lsl #3]
  40c134:	tbnz	x20, #63, 40c1a0 <wcrtomb@plt+0x98d0>
  40c138:	ldr	x0, [sp, #96]
  40c13c:	add	x0, x0, #0x1
  40c140:	str	x0, [sp, #96]
  40c144:	ldr	w0, [sp, #116]
  40c148:	cbnz	w0, 40bfe4 <wcrtomb@plt+0x9714>
  40c14c:	ldr	x0, [sp, #120]
  40c150:	ldrb	w0, [x0, #460]
  40c154:	mov	x20, #0x0                   	// #0
  40c158:	cmp	w0, #0x4
  40c15c:	b.eq	40bfe4 <wcrtomb@plt+0x9714>  // b.none
  40c160:	cmp	w0, #0x2
  40c164:	b.eq	40c190 <wcrtomb@plt+0x98c0>  // b.none
  40c168:	ldr	x20, [x19, #400]
  40c16c:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c170:	ldr	x0, [sp, #136]
  40c174:	ldurb	w2, [x0, #-1]
  40c178:	mov	x1, x19
  40c17c:	mov	x0, x27
  40c180:	bl	40b35c <wcrtomb@plt+0x8a8c>
  40c184:	mov	x20, x0
  40c188:	ldr	x25, [x19, #368]
  40c18c:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c190:	ldr	w20, [x19, #364]
  40c194:	sub	w20, w20, #0x1
  40c198:	sxtw	x20, w20
  40c19c:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c1a0:	str	xzr, [sp, #136]
  40c1a4:	cbz	x26, 40c1b8 <wcrtomb@plt+0x98e8>
  40c1a8:	ldr	x0, [x26]
  40c1ac:	ldr	x1, [sp, #96]
  40c1b0:	add	x0, x0, x1
  40c1b4:	str	x0, [x26]
  40c1b8:	ldrb	w0, [sp, #112]
  40c1bc:	strb	w0, [x23]
  40c1c0:	ldr	x0, [sp, #136]
  40c1c4:	ldp	x19, x20, [sp, #16]
  40c1c8:	ldp	x21, x22, [sp, #32]
  40c1cc:	ldp	x23, x24, [sp, #48]
  40c1d0:	ldp	x25, x26, [sp, #64]
  40c1d4:	ldp	x27, x28, [sp, #80]
  40c1d8:	ldp	x29, x30, [sp], #144
  40c1dc:	ret
  40c1e0:	ldr	x1, [x19, #296]
  40c1e4:	add	x0, x20, x20, lsl #2
  40c1e8:	add	x0, x1, x0, lsl #4
  40c1ec:	mov	x3, x19
  40c1f0:	mov	x2, x20
  40c1f4:	mov	w1, #0x4                   	// #4
  40c1f8:	ldrb	w0, [x0, #32]
  40c1fc:	bl	409f40 <wcrtomb@plt+0x7670>
  40c200:	and	w0, w0, #0xff
  40c204:	cbz	w0, 40c0a8 <wcrtomb@plt+0x97d8>
  40c208:	b	40c1a4 <wcrtomb@plt+0x98d4>
  40c20c:	add	x27, x19, w27, sxtw
  40c210:	ldrb	w0, [x27, #716]
  40c214:	cbnz	w0, 40c248 <wcrtomb@plt+0x9978>
  40c218:	cmp	x21, x24
  40c21c:	b.cs	40c240 <wcrtomb@plt+0x9970>  // b.hs, b.nlast
  40c220:	mov	x3, x19
  40c224:	sub	x2, x23, x21
  40c228:	mov	x1, x21
  40c22c:	add	x0, sp, #0x84
  40c230:	bl	40a144 <wcrtomb@plt+0x7874>
  40c234:	add	x21, x21, w0, sxtw
  40c238:	cmp	x24, x21
  40c23c:	b.hi	40c220 <wcrtomb@plt+0x9950>  // b.pmore
  40c240:	str	x21, [sp, #136]
  40c244:	b	40c0b4 <wcrtomb@plt+0x97e4>
  40c248:	mov	x21, x24
  40c24c:	b	40c240 <wcrtomb@plt+0x9970>
  40c250:	mov	x3, x23
  40c254:	add	x2, sp, #0x88
  40c258:	mov	x1, x20
  40c25c:	mov	x0, x19
  40c260:	bl	40ba98 <wcrtomb@plt+0x91c8>
  40c264:	ldr	x21, [sp, #136]
  40c268:	ldr	x25, [x19, #368]
  40c26c:	mov	x27, x20
  40c270:	mov	x20, x0
  40c274:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c278:	ldr	x0, [sp, #136]
  40c27c:	ldrb	w2, [x0]
  40c280:	mov	x1, x19
  40c284:	mov	x0, x20
  40c288:	bl	40b35c <wcrtomb@plt+0x8a8c>
  40c28c:	ldr	x25, [x19, #368]
  40c290:	b	40bfe4 <wcrtomb@plt+0x9714>
  40c294:	stp	x29, x30, [sp, #-112]!
  40c298:	mov	x29, sp
  40c29c:	stp	x19, x20, [sp, #16]
  40c2a0:	stp	x21, x22, [sp, #32]
  40c2a4:	stp	x23, x24, [sp, #48]
  40c2a8:	stp	x25, x26, [sp, #64]
  40c2ac:	stp	x27, x28, [sp, #80]
  40c2b0:	mov	x19, x0
  40c2b4:	mov	x20, x1
  40c2b8:	mov	x23, x2
  40c2bc:	and	w0, w3, #0xff
  40c2c0:	str	w0, [sp, #100]
  40c2c4:	mov	x25, x4
  40c2c8:	ldr	x0, [x19, #304]
  40c2cc:	cmp	x0, #0x3ff
  40c2d0:	b.le	40c3fc <wcrtomb@plt+0x9b2c>
  40c2d4:	ldr	w21, [x19, #364]
  40c2d8:	sxtw	x22, w21
  40c2dc:	cmp	x0, w21, sxtw
  40c2e0:	b.le	40c324 <wcrtomb@plt+0x9a54>
  40c2e4:	sbfiz	x0, x21, #2, #32
  40c2e8:	add	x21, x0, w21, sxtw
  40c2ec:	lsl	x21, x21, #4
  40c2f0:	ldr	x0, [x19, #296]
  40c2f4:	add	x0, x0, x21
  40c2f8:	ldr	x0, [x0, #8]
  40c2fc:	bl	402660 <free@plt>
  40c300:	ldr	x0, [x19, #296]
  40c304:	add	x0, x0, x21
  40c308:	ldr	x0, [x0, #48]
  40c30c:	bl	402660 <free@plt>
  40c310:	add	x22, x22, #0x1
  40c314:	add	x21, x21, #0x50
  40c318:	ldr	x0, [x19, #304]
  40c31c:	cmp	x22, x0
  40c320:	b.lt	40c2f0 <wcrtomb@plt+0x9a20>  // b.tstop
  40c324:	ldrsw	x0, [x19, #364]
  40c328:	str	x0, [x19, #304]
  40c32c:	ldr	x0, [x19, #368]
  40c330:	cbz	x0, 40c380 <wcrtomb@plt+0x9ab0>
  40c334:	ldr	x0, [x19, #352]
  40c338:	cmp	x0, #0x0
  40c33c:	b.le	40c37c <wcrtomb@plt+0x9aac>
  40c340:	mov	x21, #0x0                   	// #0
  40c344:	ldr	x0, [x19, #368]
  40c348:	ldr	x0, [x0, x21, lsl #3]
  40c34c:	bl	402660 <free@plt>
  40c350:	ldr	x0, [x19, #376]
  40c354:	ldr	x0, [x0, x21, lsl #3]
  40c358:	bl	402660 <free@plt>
  40c35c:	ldr	x0, [x19, #376]
  40c360:	str	xzr, [x0, x21, lsl #3]
  40c364:	ldr	x0, [x19, #368]
  40c368:	str	xzr, [x0, x21, lsl #3]
  40c36c:	add	x21, x21, #0x1
  40c370:	ldr	x0, [x19, #352]
  40c374:	cmp	x21, x0
  40c378:	b.lt	40c344 <wcrtomb@plt+0x9a74>  // b.tstop
  40c37c:	str	wzr, [x19, #360]
  40c380:	ldrb	w0, [x19, #1048]
  40c384:	cbz	w0, 40c3fc <wcrtomb@plt+0x9b2c>
  40c388:	ldr	x0, [x19, #432]
  40c38c:	cbz	x0, 40c3fc <wcrtomb@plt+0x9b2c>
  40c390:	ldr	x0, [x19, #352]
  40c394:	tbnz	x0, #63, 40c3c0 <wcrtomb@plt+0x9af0>
  40c398:	mov	x21, #0xffffffffffffffff    	// #-1
  40c39c:	ldr	x0, [x19, #432]
  40c3a0:	ldr	x0, [x0, x21, lsl #3]
  40c3a4:	bl	402660 <free@plt>
  40c3a8:	ldr	x0, [x19, #432]
  40c3ac:	str	xzr, [x0, x21, lsl #3]
  40c3b0:	add	x21, x21, #0x1
  40c3b4:	ldr	x0, [x19, #352]
  40c3b8:	cmp	x21, x0
  40c3bc:	b.lt	40c39c <wcrtomb@plt+0x9acc>  // b.tstop
  40c3c0:	ldr	w0, [x19, #364]
  40c3c4:	cmp	w0, #0x0
  40c3c8:	b.le	40c3f8 <wcrtomb@plt+0x9b28>
  40c3cc:	mov	x2, #0x0                   	// #0
  40c3d0:	mov	x1, #0x0                   	// #0
  40c3d4:	mov	x3, #0xffffffffffffffff    	// #-1
  40c3d8:	ldr	x0, [x19, #296]
  40c3dc:	add	x0, x0, x2
  40c3e0:	str	x3, [x0, #72]
  40c3e4:	add	x1, x1, #0x1
  40c3e8:	add	x2, x2, #0x50
  40c3ec:	ldrsw	x0, [x19, #364]
  40c3f0:	cmp	x1, x0
  40c3f4:	b.lt	40c3d8 <wcrtomb@plt+0x9b08>  // b.tstop
  40c3f8:	str	xzr, [x19, #440]
  40c3fc:	ldr	x0, [x19, #352]
  40c400:	cbz	x0, 40c430 <wcrtomb@plt+0x9b60>
  40c404:	ldr	x24, [x19, #368]
  40c408:	ldrb	w26, [x19, #459]
  40c40c:	ldrb	w0, [x23]
  40c410:	str	w0, [sp, #96]
  40c414:	strb	w26, [x23]
  40c418:	mov	x27, #0x0                   	// #0
  40c41c:	mov	x2, #0x0                   	// #0
  40c420:	mov	x22, #0x0                   	// #0
  40c424:	add	x0, x19, w26, sxtw
  40c428:	str	x0, [sp, #104]
  40c42c:	b	40c604 <wcrtomb@plt+0x9d34>
  40c430:	mov	x0, x19
  40c434:	bl	40a758 <wcrtomb@plt+0x7e88>
  40c438:	b	40c404 <wcrtomb@plt+0x9b34>
  40c43c:	ldrb	w2, [x20, #1]
  40c440:	ldr	x2, [x1, x2, lsl #3]
  40c444:	cmp	x21, x2
  40c448:	b.ne	40c5ec <wcrtomb@plt+0x9d1c>  // b.any
  40c44c:	ldrb	w2, [x0, #1]!
  40c450:	ldr	x2, [x1, x2, lsl #3]
  40c454:	cmp	x21, x2
  40c458:	b.eq	40c44c <wcrtomb@plt+0x9b7c>  // b.none
  40c45c:	b	40c5ec <wcrtomb@plt+0x9d1c>
  40c460:	mov	x21, x22
  40c464:	mov	x22, x2
  40c468:	tbnz	x21, #63, 40c4c0 <wcrtomb@plt+0x9bf0>
  40c46c:	mov	x0, x21
  40c470:	ldr	x1, [x19, #376]
  40c474:	ldr	x28, [x1, x21, lsl #3]
  40c478:	cbz	x28, 40c570 <wcrtomb@plt+0x9ca0>
  40c47c:	ldrb	w22, [x20]
  40c480:	ldr	x1, [x19, #384]
  40c484:	add	x2, x19, w22, sxtw
  40c488:	ldrb	w1, [x1, x21]
  40c48c:	ldrb	w2, [x2, #460]
  40c490:	and	w1, w1, w2
  40c494:	tst	w1, #0xff
  40c498:	b.ne	40c5a0 <wcrtomb@plt+0x9cd0>  // b.any
  40c49c:	cmp	x23, x20
  40c4a0:	b.eq	40c540 <wcrtomb@plt+0x9c70>  // b.none
  40c4a4:	add	x20, x20, #0x1
  40c4a8:	and	x22, x22, #0xff
  40c4ac:	ldr	x0, [x28, x22, lsl #3]
  40c4b0:	mov	x22, x21
  40c4b4:	b	40c5fc <wcrtomb@plt+0x9d2c>
  40c4b8:	mov	x20, x0
  40c4bc:	b	40c468 <wcrtomb@plt+0x9b98>
  40c4c0:	cmn	x21, #0x2
  40c4c4:	b.eq	40c518 <wcrtomb@plt+0x9c48>  // b.none
  40c4c8:	cmp	x23, x20
  40c4cc:	b.cc	40c588 <wcrtomb@plt+0x9cb8>  // b.lo, b.ul, b.last
  40c4d0:	ldurb	w0, [x20, #-1]
  40c4d4:	cmp	w0, w26
  40c4d8:	b.ne	40c590 <wcrtomb@plt+0x9cc0>  // b.any
  40c4dc:	ldr	x0, [x19, #392]
  40c4e0:	ldr	x0, [x0, x22, lsl #3]
  40c4e4:	tbnz	x0, #63, 40c598 <wcrtomb@plt+0x9cc8>
  40c4e8:	add	x27, x27, #0x1
  40c4ec:	ldr	w1, [sp, #100]
  40c4f0:	cbnz	w1, 40c5fc <wcrtomb@plt+0x9d2c>
  40c4f4:	ldr	x0, [sp, #104]
  40c4f8:	ldrb	w1, [x0, #460]
  40c4fc:	mov	x0, #0x0                   	// #0
  40c500:	cmp	w1, #0x4
  40c504:	b.eq	40c5fc <wcrtomb@plt+0x9d2c>  // b.none
  40c508:	cmp	w1, #0x2
  40c50c:	b.eq	40c530 <wcrtomb@plt+0x9c60>  // b.none
  40c510:	ldr	x0, [x19, #400]
  40c514:	b	40c5fc <wcrtomb@plt+0x9d2c>
  40c518:	ldurb	w2, [x20, #-1]
  40c51c:	mov	x1, x19
  40c520:	mov	x0, x22
  40c524:	bl	40b35c <wcrtomb@plt+0x8a8c>
  40c528:	ldr	x24, [x19, #368]
  40c52c:	b	40c5fc <wcrtomb@plt+0x9d2c>
  40c530:	ldr	w0, [x19, #364]
  40c534:	sub	w0, w0, #0x1
  40c538:	sxtw	x0, w0
  40c53c:	b	40c5fc <wcrtomb@plt+0x9d2c>
  40c540:	ldr	x1, [x19, #296]
  40c544:	add	x0, x21, x21, lsl #2
  40c548:	add	x0, x1, x0, lsl #4
  40c54c:	mov	x3, x19
  40c550:	mov	x2, x21
  40c554:	mov	w1, #0x4                   	// #4
  40c558:	ldrb	w0, [x0, #32]
  40c55c:	bl	409f40 <wcrtomb@plt+0x7670>
  40c560:	and	w0, w0, #0xff
  40c564:	cbz	w0, 40c4a4 <wcrtomb@plt+0x9bd4>
  40c568:	mov	x0, x20
  40c56c:	b	40c5a4 <wcrtomb@plt+0x9cd4>
  40c570:	ldrb	w2, [x20]
  40c574:	mov	x1, x19
  40c578:	bl	40b35c <wcrtomb@plt+0x8a8c>
  40c57c:	ldr	x24, [x19, #368]
  40c580:	mov	x0, x21
  40c584:	b	40c5fc <wcrtomb@plt+0x9d2c>
  40c588:	mov	x0, #0x0                   	// #0
  40c58c:	b	40c5a4 <wcrtomb@plt+0x9cd4>
  40c590:	mov	x0, #0x0                   	// #0
  40c594:	b	40c5a4 <wcrtomb@plt+0x9cd4>
  40c598:	mov	x0, #0x0                   	// #0
  40c59c:	b	40c5a4 <wcrtomb@plt+0x9cd4>
  40c5a0:	mov	x0, x20
  40c5a4:	cbz	x25, 40c5b4 <wcrtomb@plt+0x9ce4>
  40c5a8:	ldr	x1, [x25]
  40c5ac:	add	x27, x1, x27
  40c5b0:	str	x27, [x25]
  40c5b4:	ldrb	w1, [sp, #96]
  40c5b8:	strb	w1, [x23]
  40c5bc:	ldp	x19, x20, [sp, #16]
  40c5c0:	ldp	x21, x22, [sp, #32]
  40c5c4:	ldp	x23, x24, [sp, #48]
  40c5c8:	ldp	x25, x26, [sp, #64]
  40c5cc:	ldp	x27, x28, [sp, #80]
  40c5d0:	ldp	x29, x30, [sp], #112
  40c5d4:	ret
  40c5d8:	mov	x0, x20
  40c5dc:	ldrb	w2, [x0], #1
  40c5e0:	ldr	x21, [x1, x2, lsl #3]
  40c5e4:	ldr	x1, [x24, x21, lsl #3]
  40c5e8:	cbz	x1, 40c4b8 <wcrtomb@plt+0x9be8>
  40c5ec:	mov	x20, x0
  40c5f0:	ldrb	w0, [x20], #1
  40c5f4:	ldr	x0, [x1, x0, lsl #3]
  40c5f8:	mov	x22, x21
  40c5fc:	mov	x2, x22
  40c600:	mov	x22, x0
  40c604:	ldr	x1, [x24, x22, lsl #3]
  40c608:	cbz	x1, 40c460 <wcrtomb@plt+0x9b90>
  40c60c:	ldrsw	x0, [x19, #364]
  40c610:	cmp	x0, x22
  40c614:	b.le	40c5d8 <wcrtomb@plt+0x9d08>
  40c618:	ldrb	w0, [x20]
  40c61c:	ldr	x0, [x1, x0, lsl #3]
  40c620:	cmp	x22, x0
  40c624:	b.ne	40c638 <wcrtomb@plt+0x9d68>  // b.any
  40c628:	ldrb	w0, [x20, #1]!
  40c62c:	ldr	x0, [x1, x0, lsl #3]
  40c630:	cmp	x22, x0
  40c634:	b.eq	40c628 <wcrtomb@plt+0x9d58>  // b.none
  40c638:	mov	x0, x20
  40c63c:	ldrb	w2, [x0], #1
  40c640:	ldr	x21, [x1, x2, lsl #3]
  40c644:	ldr	x1, [x24, x21, lsl #3]
  40c648:	cbnz	x1, 40c43c <wcrtomb@plt+0x9b6c>
  40c64c:	mov	x20, x0
  40c650:	b	40c468 <wcrtomb@plt+0x9b98>
  40c654:	stp	x29, x30, [sp, #-240]!
  40c658:	mov	x29, sp
  40c65c:	stp	x19, x20, [sp, #16]
  40c660:	stp	x21, x22, [sp, #32]
  40c664:	stp	x23, x24, [sp, #48]
  40c668:	stp	x25, x26, [sp, #64]
  40c66c:	stp	x27, x28, [sp, #80]
  40c670:	mov	x19, x0
  40c674:	and	w20, w1, #0xff
  40c678:	ldr	x0, [x0, #176]
  40c67c:	cmp	xzr, x0, lsr #59
  40c680:	cset	x1, ne  // ne = any
  40c684:	tst	x0, #0x400000000000000
  40c688:	csinc	w1, w1, wzr, eq  // eq = none
  40c68c:	cbnz	w1, 40c728 <wcrtomb@plt+0x9e58>
  40c690:	lsl	x0, x0, #5
  40c694:	bl	413fec <wcrtomb@plt+0x1171c>
  40c698:	str	x0, [sp, #144]
  40c69c:	ldr	x24, [x19, #176]
  40c6a0:	add	x24, x0, x24, lsl #4
  40c6a4:	ldr	x0, [x19, #168]
  40c6a8:	mov	x1, #0x18                  	// #24
  40c6ac:	mul	x2, x0, x1
  40c6b0:	umulh	x1, x0, x1
  40c6b4:	cmp	x1, #0x0
  40c6b8:	cset	x1, ne  // ne = any
  40c6bc:	cmp	x2, #0x0
  40c6c0:	csinc	x1, x1, xzr, ge  // ge = tcont
  40c6c4:	cbnz	w1, 40c72c <wcrtomb@plt+0x9e5c>
  40c6c8:	add	x0, x0, x0, lsl #1
  40c6cc:	lsl	x0, x0, #3
  40c6d0:	bl	413fec <wcrtomb@plt+0x1171c>
  40c6d4:	mov	x21, x0
  40c6d8:	str	x0, [sp, #152]
  40c6dc:	mov	x1, #0x105                 	// #261
  40c6e0:	mov	x0, x19
  40c6e4:	bl	40aa34 <wcrtomb@plt+0x8164>
  40c6e8:	strb	w20, [x19, #328]
  40c6ec:	ldr	x1, [x19, #176]
  40c6f0:	add	x0, sp, #0xc0
  40c6f4:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40c6f8:	mov	x1, #0x18                  	// #24
  40c6fc:	ldr	x0, [x19, #152]
  40c700:	bl	4141b4 <wcrtomb@plt+0x118e4>
  40c704:	str	x0, [x19, #320]
  40c708:	ldr	x0, [x19, #152]
  40c70c:	cmp	x0, #0x0
  40c710:	b.le	40c9a0 <wcrtomb@plt+0xa0d0>
  40c714:	mov	x20, x21
  40c718:	ldr	x26, [sp, #144]
  40c71c:	mov	x22, #0x0                   	// #0
  40c720:	mov	w23, #0xffffffff            	// #-1
  40c724:	b	40c79c <wcrtomb@plt+0x9ecc>
  40c728:	bl	414264 <wcrtomb@plt+0x11994>
  40c72c:	bl	414264 <wcrtomb@plt+0x11994>
  40c730:	cmp	x0, #0x105
  40c734:	b.eq	40c84c <wcrtomb@plt+0x9f7c>  // b.none
  40c738:	cmp	x0, #0x106
  40c73c:	b.ne	40c964 <wcrtomb@plt+0xa094>  // b.any
  40c740:	ldur	x0, [x20, #-40]
  40c744:	ldur	x1, [x20, #-16]
  40c748:	add	x0, x0, x1
  40c74c:	stur	x0, [x20, #-40]
  40c750:	ldur	x0, [x20, #-32]
  40c754:	ldur	x1, [x20, #-8]
  40c758:	add	x0, x0, x1
  40c75c:	stur	x0, [x20, #-32]
  40c760:	ldurb	w0, [x20, #-48]
  40c764:	ldurb	w1, [x20, #-24]
  40c768:	orr	w0, w0, w1
  40c76c:	sturb	w0, [x20, #-48]
  40c770:	sub	x20, x20, #0x18
  40c774:	b	40c78c <wcrtomb@plt+0x9ebc>
  40c778:	mov	w0, #0x1                   	// #1
  40c77c:	strb	w0, [x20]
  40c780:	str	xzr, [x20, #16]
  40c784:	str	xzr, [x20, #8]
  40c788:	add	x20, x20, #0x18
  40c78c:	add	x22, x22, #0x1
  40c790:	ldr	x0, [x19, #152]
  40c794:	cmp	x0, x22
  40c798:	b.le	40c9a0 <wcrtomb@plt+0xa0d0>
  40c79c:	lsl	x27, x22, #3
  40c7a0:	ldr	x0, [x19, #144]
  40c7a4:	ldr	x0, [x0, x22, lsl #3]
  40c7a8:	cmp	x0, #0x103
  40c7ac:	b.gt	40c730 <wcrtomb@plt+0x9e60>
  40c7b0:	cmp	x0, #0x101
  40c7b4:	b.gt	40c7d4 <wcrtomb@plt+0x9f04>
  40c7b8:	cmp	x0, #0x100
  40c7bc:	b.eq	40c778 <wcrtomb@plt+0x9ea8>  // b.none
  40c7c0:	cmp	x0, #0x101
  40c7c4:	b.ne	40c964 <wcrtomb@plt+0xa094>  // b.any
  40c7c8:	mov	w0, #0x1                   	// #1
  40c7cc:	sturb	w0, [x20, #-24]
  40c7d0:	b	40c78c <wcrtomb@plt+0x9ebc>
  40c7d4:	ldur	x0, [x20, #-16]
  40c7d8:	sub	x1, x26, x0, lsl #4
  40c7dc:	str	x1, [sp, #216]
  40c7e0:	str	x0, [sp, #224]
  40c7e4:	ldur	x21, [x20, #-8]
  40c7e8:	cmp	x21, #0x0
  40c7ec:	b.le	40c838 <wcrtomb@plt+0x9f68>
  40c7f0:	sub	x21, x24, x21, lsl #4
  40c7f4:	mov	x25, x24
  40c7f8:	ldr	x1, [x21]
  40c7fc:	add	x1, x1, x1, lsl #1
  40c800:	ldr	x0, [x19, #320]
  40c804:	add	x3, sp, #0xc0
  40c808:	mov	w2, w23
  40c80c:	add	x1, x0, x1, lsl #3
  40c810:	add	x0, sp, #0xd8
  40c814:	bl	40ac10 <wcrtomb@plt+0x8340>
  40c818:	ldr	x1, [x21], #16
  40c81c:	add	x1, x1, x1, lsl #1
  40c820:	ldr	x0, [x19, #320]
  40c824:	add	x1, x0, x1, lsl #3
  40c828:	add	x0, sp, #0xc0
  40c82c:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40c830:	cmp	x21, x25
  40c834:	b.ne	40c7f8 <wcrtomb@plt+0x9f28>  // b.any
  40c838:	ldr	x0, [x19, #144]
  40c83c:	ldr	x0, [x0, x27]
  40c840:	cmp	x0, #0x103
  40c844:	b.eq	40c78c <wcrtomb@plt+0x9ebc>  // b.none
  40c848:	b	40c7c8 <wcrtomb@plt+0x9ef8>
  40c84c:	ldur	x0, [x20, #-16]
  40c850:	str	x0, [sp, #120]
  40c854:	str	x0, [sp, #224]
  40c858:	sub	x0, x26, x0, lsl #4
  40c85c:	str	x0, [sp, #104]
  40c860:	str	x0, [sp, #216]
  40c864:	ldur	x0, [x20, #-8]
  40c868:	str	x0, [sp, #112]
  40c86c:	lsl	x0, x0, #4
  40c870:	str	x0, [sp, #128]
  40c874:	ldur	x28, [x20, #-32]
  40c878:	lsl	x27, x28, #4
  40c87c:	add	x0, x0, x27
  40c880:	sub	x0, x24, x0
  40c884:	str	x0, [sp, #136]
  40c888:	cmp	x28, #0x0
  40c88c:	b.le	40c8d8 <wcrtomb@plt+0xa008>
  40c890:	mov	x21, x0
  40c894:	add	x25, x27, x0
  40c898:	ldr	x1, [x21]
  40c89c:	add	x1, x1, x1, lsl #1
  40c8a0:	ldr	x0, [x19, #320]
  40c8a4:	add	x3, sp, #0xc0
  40c8a8:	mov	w2, w23
  40c8ac:	add	x1, x0, x1, lsl #3
  40c8b0:	add	x0, sp, #0xd8
  40c8b4:	bl	40ac10 <wcrtomb@plt+0x8340>
  40c8b8:	ldr	x1, [x21], #16
  40c8bc:	add	x1, x1, x1, lsl #1
  40c8c0:	ldr	x0, [x19, #320]
  40c8c4:	add	x1, x0, x1, lsl #3
  40c8c8:	add	x0, sp, #0xc0
  40c8cc:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40c8d0:	cmp	x25, x21
  40c8d4:	b.ne	40c898 <wcrtomb@plt+0x9fc8>  // b.any
  40c8d8:	ldurb	w5, [x20, #-48]
  40c8dc:	cbz	w5, 40c8f4 <wcrtomb@plt+0xa024>
  40c8e0:	ldur	x0, [x20, #-40]
  40c8e4:	ldr	x1, [sp, #120]
  40c8e8:	add	x0, x0, x1
  40c8ec:	stur	x0, [x20, #-40]
  40c8f0:	str	x26, [sp, #104]
  40c8f4:	ldurb	w4, [x20, #-24]
  40c8f8:	cbz	w4, 40c924 <wcrtomb@plt+0xa054>
  40c8fc:	ldr	x0, [sp, #112]
  40c900:	add	x28, x0, x28
  40c904:	stur	x28, [x20, #-32]
  40c908:	cmp	w5, #0x0
  40c90c:	ccmp	w4, #0x0, #0x4, ne  // ne = any
  40c910:	cset	w0, ne  // ne = any
  40c914:	sturb	w0, [x20, #-48]
  40c918:	sub	x20, x20, #0x18
  40c91c:	ldr	x26, [sp, #104]
  40c920:	b	40c78c <wcrtomb@plt+0x9ebc>
  40c924:	ldr	x1, [sp, #136]
  40c928:	mov	x0, x1
  40c92c:	ldr	x2, [sp, #128]
  40c930:	add	x1, x1, x2
  40c934:	ldr	x2, [sp, #112]
  40c938:	cmp	x2, #0x0
  40c93c:	b.le	40c954 <wcrtomb@plt+0xa084>
  40c940:	add	x2, x0, x27
  40c944:	ldp	x2, x3, [x2]
  40c948:	stp	x2, x3, [x0], #16
  40c94c:	cmp	x1, x0
  40c950:	b.ne	40c940 <wcrtomb@plt+0xa070>  // b.any
  40c954:	sub	x24, x24, x27
  40c958:	ldr	x0, [sp, #112]
  40c95c:	stur	x0, [x20, #-32]
  40c960:	b	40c908 <wcrtomb@plt+0xa038>
  40c964:	cmp	x0, #0x112
  40c968:	cset	w0, eq  // eq = none
  40c96c:	strb	w0, [x20]
  40c970:	mov	x0, #0x1                   	// #1
  40c974:	str	x0, [x20, #16]
  40c978:	str	x0, [x20, #8]
  40c97c:	add	x20, x20, #0x18
  40c980:	str	x22, [x24]
  40c984:	str	x22, [x26]
  40c988:	mov	w0, #0x1ff                 	// #511
  40c98c:	str	w0, [x24, #8]
  40c990:	str	w0, [x26, #8]
  40c994:	add	x26, x26, #0x10
  40c998:	add	x24, x24, #0x10
  40c99c:	b	40c78c <wcrtomb@plt+0x9ebc>
  40c9a0:	ldr	x1, [x19, #176]
  40c9a4:	add	x0, sp, #0xa8
  40c9a8:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40c9ac:	ldr	x0, [x19, #152]
  40c9b0:	cmp	x0, #0x0
  40c9b4:	b.le	40cae0 <wcrtomb@plt+0xa210>
  40c9b8:	mov	x21, #0x0                   	// #0
  40c9bc:	mov	x20, #0x0                   	// #0
  40c9c0:	mov	w25, #0x82                  	// #130
  40c9c4:	mov	w26, #0x155                 	// #341
  40c9c8:	mov	w27, #0xaa                  	// #170
  40c9cc:	b	40ca64 <wcrtomb@plt+0xa194>
  40c9d0:	cmp	x0, #0x110
  40c9d4:	csel	w28, w26, w27, ne  // ne = any
  40c9d8:	b	40cac4 <wcrtomb@plt+0xa1f4>
  40c9dc:	mov	w28, w25
  40c9e0:	b	40cac4 <wcrtomb@plt+0xa1f4>
  40c9e4:	add	x22, x22, #0x1
  40c9e8:	ldr	x0, [x19, #152]
  40c9ec:	cmp	x22, x0
  40c9f0:	b.ge	40ca50 <wcrtomb@plt+0xa180>  // b.tcont
  40c9f4:	cmp	x20, x22
  40c9f8:	b.eq	40c9e4 <wcrtomb@plt+0xa114>  // b.none
  40c9fc:	ldr	x24, [x19, #320]
  40ca00:	add	x23, x22, x22, lsl #1
  40ca04:	add	x23, x24, x23, lsl #3
  40ca08:	ldr	x0, [x23, #8]
  40ca0c:	cmp	x0, #0x0
  40ca10:	b.le	40c9e4 <wcrtomb@plt+0xa114>
  40ca14:	mov	x1, x23
  40ca18:	mov	x0, x20
  40ca1c:	bl	40a030 <wcrtomb@plt+0x7760>
  40ca20:	ands	w0, w28, w0
  40ca24:	str	w0, [sp, #104]
  40ca28:	b.eq	40c9e4 <wcrtomb@plt+0xa114>  // b.none
  40ca2c:	add	x1, sp, #0xa8
  40ca30:	mov	x0, x23
  40ca34:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40ca38:	mov	x3, x23
  40ca3c:	ldr	w2, [sp, #104]
  40ca40:	add	x1, x24, x21
  40ca44:	add	x0, sp, #0xa8
  40ca48:	bl	40ac10 <wcrtomb@plt+0x8340>
  40ca4c:	b	40c9e4 <wcrtomb@plt+0xa114>
  40ca50:	add	x20, x20, #0x1
  40ca54:	add	x21, x21, #0x18
  40ca58:	ldr	x0, [x19, #152]
  40ca5c:	cmp	x20, x0
  40ca60:	b.ge	40cae0 <wcrtomb@plt+0xa210>  // b.tcont
  40ca64:	ldr	x1, [x19, #320]
  40ca68:	add	x1, x1, x21
  40ca6c:	ldr	x0, [x1, #8]
  40ca70:	cmp	x0, #0x0
  40ca74:	b.le	40ca50 <wcrtomb@plt+0xa180>
  40ca78:	ldr	x0, [x19, #144]
  40ca7c:	ldr	x0, [x0, x20, lsl #3]
  40ca80:	sub	x2, x0, #0x100
  40ca84:	cmp	x0, #0x10a
  40ca88:	ccmp	x2, #0x11, #0x2, ne  // ne = any
  40ca8c:	b.hi	40ca50 <wcrtomb@plt+0xa180>  // b.pmore
  40ca90:	cmp	x0, #0x10f
  40ca94:	b.eq	40c9dc <wcrtomb@plt+0xa10c>  // b.none
  40ca98:	b.gt	40c9d0 <wcrtomb@plt+0xa100>
  40ca9c:	mov	w28, #0x1c0                 	// #448
  40caa0:	cmp	x0, #0x10d
  40caa4:	b.eq	40cac4 <wcrtomb@plt+0xa1f4>  // b.none
  40caa8:	mov	w28, #0x28                  	// #40
  40caac:	cmp	x0, #0x10e
  40cab0:	b.eq	40cac4 <wcrtomb@plt+0xa1f4>  // b.none
  40cab4:	cmp	x0, #0x10c
  40cab8:	mov	w0, #0x1ff                 	// #511
  40cabc:	mov	w28, #0x124                 	// #292
  40cac0:	csel	w28, w0, w28, ne  // ne = any
  40cac4:	mov	x0, x20
  40cac8:	bl	40a030 <wcrtomb@plt+0x7760>
  40cacc:	ldr	x0, [x19, #152]
  40cad0:	cmp	x0, #0x0
  40cad4:	b.le	40ca50 <wcrtomb@plt+0xa180>
  40cad8:	mov	x22, #0x0                   	// #0
  40cadc:	b	40c9f4 <wcrtomb@plt+0xa124>
  40cae0:	ldr	x0, [sp, #168]
  40cae4:	bl	402660 <free@plt>
  40cae8:	ldr	x0, [x19, #152]
  40caec:	bl	4141ec <wcrtomb@plt+0x1191c>
  40caf0:	mov	x20, x0
  40caf4:	ldr	x8, [x19, #152]
  40caf8:	cmp	x8, #0x0
  40cafc:	b.le	40cb88 <wcrtomb@plt+0xa2b8>
  40cb00:	ldr	x6, [x19, #320]
  40cb04:	mov	x2, #0x0                   	// #0
  40cb08:	mov	w7, #0x8                   	// #8
  40cb0c:	b	40cb70 <wcrtomb@plt+0xa2a0>
  40cb10:	ldrb	w1, [x20, x2]
  40cb14:	orr	w1, w1, #0x1
  40cb18:	strb	w1, [x20, x2]
  40cb1c:	add	x0, x0, #0x10
  40cb20:	cmp	x4, x0
  40cb24:	b.eq	40cb60 <wcrtomb@plt+0xa290>  // b.none
  40cb28:	ldr	x1, [x0]
  40cb2c:	cmp	x1, x2
  40cb30:	b.eq	40cb10 <wcrtomb@plt+0xa240>  // b.none
  40cb34:	b.ge	40cb48 <wcrtomb@plt+0xa278>  // b.tcont
  40cb38:	ldrb	w3, [x20, x1]
  40cb3c:	orr	w3, w3, #0x2
  40cb40:	strb	w3, [x20, x1]
  40cb44:	b	40cb1c <wcrtomb@plt+0xa24c>
  40cb48:	ldrb	w3, [x20, x1]
  40cb4c:	ands	w3, w3, #0x8
  40cb50:	orr	w5, w3, #0x4
  40cb54:	csel	w3, w7, w5, eq  // eq = none
  40cb58:	strb	w3, [x20, x1]
  40cb5c:	b	40cb1c <wcrtomb@plt+0xa24c>
  40cb60:	add	x2, x2, #0x1
  40cb64:	add	x6, x6, #0x18
  40cb68:	cmp	x2, x8
  40cb6c:	b.eq	40cb88 <wcrtomb@plt+0xa2b8>  // b.none
  40cb70:	ldr	x4, [x6, #8]
  40cb74:	cmp	x4, #0x0
  40cb78:	b.le	40cb60 <wcrtomb@plt+0xa290>
  40cb7c:	ldr	x0, [x6]
  40cb80:	add	x4, x0, x4, lsl #4
  40cb84:	b	40cb28 <wcrtomb@plt+0xa258>
  40cb88:	ldrb	w0, [x20]
  40cb8c:	orr	w0, w0, #0x10
  40cb90:	strb	w0, [x20]
  40cb94:	ldr	x1, [x19, #176]
  40cb98:	add	x0, sp, #0xa8
  40cb9c:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40cba0:	ldr	x0, [x19, #152]
  40cba4:	cmp	xzr, x0, lsr #62
  40cba8:	cset	x1, ne  // ne = any
  40cbac:	tst	x0, #0x2000000000000000
  40cbb0:	csinc	w1, w1, wzr, eq  // eq = none
  40cbb4:	cbnz	w1, 40cbd8 <wcrtomb@plt+0xa308>
  40cbb8:	lsl	x0, x0, #2
  40cbbc:	bl	413fec <wcrtomb@plt+0x1171c>
  40cbc0:	str	x0, [x19, #336]
  40cbc4:	ldr	x1, [x19, #152]
  40cbc8:	cmp	x1, #0x0
  40cbcc:	b.le	40cdb4 <wcrtomb@plt+0xa4e4>
  40cbd0:	mov	x27, #0x0                   	// #0
  40cbd4:	b	40cd74 <wcrtomb@plt+0xa4a4>
  40cbd8:	bl	414264 <wcrtomb@plt+0x11994>
  40cbdc:	ldr	x2, [x19, #336]
  40cbe0:	ldr	x3, [sp, #128]
  40cbe4:	ldr	w0, [x2, x3]
  40cbe8:	orr	w1, w0, w1
  40cbec:	str	w1, [x2, x3]
  40cbf0:	b	40cd08 <wcrtomb@plt+0xa438>
  40cbf4:	add	x1, x24, x24, lsl #1
  40cbf8:	ldr	x0, [sp, #136]
  40cbfc:	add	x1, x0, x1, lsl #3
  40cc00:	mov	x0, x24
  40cc04:	bl	40a030 <wcrtomb@plt+0x7760>
  40cc08:	b	40cc78 <wcrtomb@plt+0xa3a8>
  40cc0c:	add	x3, sp, #0xa8
  40cc10:	mov	w2, #0xffffffff            	// #-1
  40cc14:	ldr	x1, [sp, #120]
  40cc18:	mov	x0, x28
  40cc1c:	bl	40ac10 <wcrtomb@plt+0x8340>
  40cc20:	ldr	x1, [sp, #120]
  40cc24:	add	x0, sp, #0xa8
  40cc28:	bl	40ab90 <wcrtomb@plt+0x82c0>
  40cc2c:	b	40ccdc <wcrtomb@plt+0xa40c>
  40cc30:	add	x26, x26, #0x1
  40cc34:	add	x0, x0, #0x10
  40cc38:	cmp	x26, x25
  40cc3c:	b.eq	40cce4 <wcrtomb@plt+0xa414>  // b.none
  40cc40:	ldr	w4, [x0, #8]
  40cc44:	cmp	w1, w4
  40cc48:	b.ne	40cc30 <wcrtomb@plt+0xa360>  // b.any
  40cc4c:	ldr	x28, [x0]
  40cc50:	ldrb	w4, [x20, x28]
  40cc54:	tst	w4, #0x6
  40cc58:	b.ne	40cc30 <wcrtomb@plt+0xa360>  // b.any
  40cc5c:	ldr	x5, [x2, x28, lsl #3]
  40cc60:	cmp	x3, x5
  40cc64:	b.ne	40cc30 <wcrtomb@plt+0xa360>  // b.any
  40cc68:	ldr	w5, [sp, #112]
  40cc6c:	eor	w4, w5, w4
  40cc70:	tbnz	w4, #0, 40cc30 <wcrtomb@plt+0xa360>
  40cc74:	tbnz	w5, #0, 40cbf4 <wcrtomb@plt+0xa324>
  40cc78:	add	x28, x28, x28, lsl #1
  40cc7c:	ldr	x0, [sp, #136]
  40cc80:	add	x1, x0, x28, lsl #3
  40cc84:	str	x1, [sp, #120]
  40cc88:	add	x28, x24, x24, lsl #1
  40cc8c:	add	x28, x0, x28, lsl #3
  40cc90:	ldr	x0, [x28, #8]
  40cc94:	cmp	x0, #0x3
  40cc98:	b.gt	40cc0c <wcrtomb@plt+0xa33c>
  40cc9c:	cmp	x0, #0x0
  40cca0:	b.le	40ccdc <wcrtomb@plt+0xa40c>
  40cca4:	str	xzr, [sp, #104]
  40cca8:	ldr	x0, [x28]
  40ccac:	ldr	x1, [sp, #104]
  40ccb0:	add	x0, x0, x1, lsl #4
  40ccb4:	ldr	x2, [sp, #120]
  40ccb8:	ldp	x0, x1, [x0]
  40ccbc:	bl	40a410 <wcrtomb@plt+0x7b40>
  40ccc0:	ldr	x1, [sp, #104]
  40ccc4:	add	x0, x1, #0x1
  40ccc8:	mov	x1, x0
  40cccc:	str	x0, [sp, #104]
  40ccd0:	ldr	x0, [x28, #8]
  40ccd4:	cmp	x1, x0
  40ccd8:	b.lt	40cca8 <wcrtomb@plt+0xa3d8>  // b.tstop
  40ccdc:	cmp	x26, x25
  40cce0:	b.lt	40cd08 <wcrtomb@plt+0xa438>  // b.tstop
  40cce4:	ldr	x0, [x23]
  40cce8:	add	x1, x0, x25, lsl #4
  40ccec:	add	x22, x0, x22
  40ccf0:	ldp	x2, x3, [x22]
  40ccf4:	stp	x2, x3, [x1]
  40ccf8:	ldr	w0, [sp, #112]
  40ccfc:	orr	w0, w0, #0x10
  40cd00:	strb	w0, [x20, x24]
  40cd04:	add	x25, x25, #0x1
  40cd08:	add	x21, x21, #0x1
  40cd0c:	ldr	x0, [x23, #8]
  40cd10:	cmp	x21, x0
  40cd14:	b.ge	40cd60 <wcrtomb@plt+0xa490>  // b.tcont
  40cd18:	ldr	x0, [x23]
  40cd1c:	lsl	x22, x21, #4
  40cd20:	add	x1, x0, x22
  40cd24:	ldr	w1, [x1, #8]
  40cd28:	cbz	w1, 40cd08 <wcrtomb@plt+0xa438>
  40cd2c:	ldr	x24, [x0, x22]
  40cd30:	ldr	x2, [x19, #144]
  40cd34:	ldr	x3, [x2, x24, lsl #3]
  40cd38:	tbnz	x3, #63, 40cbdc <wcrtomb@plt+0xa30c>
  40cd3c:	ldrb	w4, [x20, x24]
  40cd40:	str	w4, [sp, #112]
  40cd44:	tst	w4, #0x6
  40cd48:	b.ne	40cce4 <wcrtomb@plt+0xa414>  // b.any
  40cd4c:	cmp	x25, #0x0
  40cd50:	b.le	40cce4 <wcrtomb@plt+0xa414>
  40cd54:	mov	x26, #0x0                   	// #0
  40cd58:	b	40cc40 <wcrtomb@plt+0xa370>
  40cd5c:	mov	x25, #0x0                   	// #0
  40cd60:	str	x25, [x23, #8]
  40cd64:	add	x27, x27, #0x1
  40cd68:	ldr	x1, [x19, #152]
  40cd6c:	cmp	x27, x1
  40cd70:	b.ge	40cdb4 <wcrtomb@plt+0xa4e4>  // b.tcont
  40cd74:	ldrb	w0, [x20, x27]
  40cd78:	tbz	w0, #4, 40cd64 <wcrtomb@plt+0xa494>
  40cd7c:	ldr	x1, [x19, #320]
  40cd80:	str	x1, [sp, #136]
  40cd84:	lsl	x0, x27, #2
  40cd88:	str	x0, [sp, #128]
  40cd8c:	ldr	x0, [x19, #336]
  40cd90:	str	wzr, [x0, x27, lsl #2]
  40cd94:	add	x23, x27, x27, lsl #1
  40cd98:	add	x23, x1, x23, lsl #3
  40cd9c:	ldr	x0, [x23, #8]
  40cda0:	cmp	x0, #0x0
  40cda4:	b.le	40cd5c <wcrtomb@plt+0xa48c>
  40cda8:	mov	x25, #0x0                   	// #0
  40cdac:	mov	x21, #0x0                   	// #0
  40cdb0:	b	40cd18 <wcrtomb@plt+0xa448>
  40cdb4:	mov	x0, x1
  40cdb8:	cmp	xzr, x1, lsr #61
  40cdbc:	cset	x2, ne  // ne = any
  40cdc0:	tst	x1, #0x1000000000000000
  40cdc4:	csinc	w1, w2, wzr, eq  // eq = none
  40cdc8:	cbnz	w1, 40ce98 <wcrtomb@plt+0xa5c8>
  40cdcc:	lsl	x0, x0, #3
  40cdd0:	bl	413fec <wcrtomb@plt+0x1171c>
  40cdd4:	mov	x21, x0
  40cdd8:	str	xzr, [x0]
  40cddc:	ldr	x1, [x19, #152]
  40cde0:	cmp	x1, #0x1
  40cde4:	b.le	40ce00 <wcrtomb@plt+0xa530>
  40cde8:	add	x0, x0, #0x8
  40cdec:	add	x1, x21, x1, lsl #3
  40cdf0:	mov	x2, #0xffffffffffffffff    	// #-1
  40cdf4:	str	x2, [x0], #8
  40cdf8:	cmp	x1, x0
  40cdfc:	b.ne	40cdf4 <wcrtomb@plt+0xa524>  // b.any
  40ce00:	ldr	x0, [x19, #176]
  40ce04:	cmp	xzr, x0, lsr #61
  40ce08:	cset	x1, ne  // ne = any
  40ce0c:	tst	x0, #0x1000000000000000
  40ce10:	csinc	w1, w1, wzr, eq  // eq = none
  40ce14:	cbnz	w1, 40ce9c <wcrtomb@plt+0xa5cc>
  40ce18:	lsl	x0, x0, #3
  40ce1c:	bl	413fec <wcrtomb@plt+0x1171c>
  40ce20:	mov	x28, x0
  40ce24:	ldr	x0, [x19, #176]
  40ce28:	mov	x1, #0x18                  	// #24
  40ce2c:	mul	x2, x0, x1
  40ce30:	umulh	x1, x0, x1
  40ce34:	cmp	x1, #0x0
  40ce38:	cset	x1, ne  // ne = any
  40ce3c:	cmp	x2, #0x0
  40ce40:	csinc	x1, x1, xzr, ge  // ge = tcont
  40ce44:	cbnz	w1, 40cea0 <wcrtomb@plt+0xa5d0>
  40ce48:	add	x0, x0, x0, lsl #1
  40ce4c:	lsl	x0, x0, #3
  40ce50:	bl	413fec <wcrtomb@plt+0x1171c>
  40ce54:	mov	x27, x0
  40ce58:	ldr	x0, [x19, #176]
  40ce5c:	cmp	xzr, x0, lsr #62
  40ce60:	cset	x1, ne  // ne = any
  40ce64:	tst	x0, #0x2000000000000000
  40ce68:	csinc	w1, w1, wzr, eq  // eq = none
  40ce6c:	cbnz	w1, 40cea4 <wcrtomb@plt+0xa5d4>
  40ce70:	lsl	x0, x0, #2
  40ce74:	bl	413fec <wcrtomb@plt+0x1171c>
  40ce78:	mov	x26, x0
  40ce7c:	ldrb	w0, [x19, #1048]
  40ce80:	cbz	w0, 40ceac <wcrtomb@plt+0xa5dc>
  40ce84:	ldr	x0, [x19, #176]
  40ce88:	tbnz	x0, #63, 40cea8 <wcrtomb@plt+0xa5d8>
  40ce8c:	bl	413fec <wcrtomb@plt+0x1171c>
  40ce90:	mov	x25, x0
  40ce94:	b	40ceb0 <wcrtomb@plt+0xa5e0>
  40ce98:	bl	414264 <wcrtomb@plt+0x11994>
  40ce9c:	bl	414264 <wcrtomb@plt+0x11994>
  40cea0:	bl	414264 <wcrtomb@plt+0x11994>
  40cea4:	bl	414264 <wcrtomb@plt+0x11994>
  40cea8:	bl	414264 <wcrtomb@plt+0x11994>
  40ceac:	mov	x25, #0x0                   	// #0
  40ceb0:	ldr	x0, [x19, #152]
  40ceb4:	cmp	x0, #0x0
  40ceb8:	b.le	40cfe0 <wcrtomb@plt+0xa710>
  40cebc:	mov	x22, #0x0                   	// #0
  40cec0:	mov	x23, #0x1                   	// #1
  40cec4:	mov	x24, #0x0                   	// #0
  40cec8:	adrp	x0, 40a000 <wcrtomb@plt+0x7730>
  40cecc:	add	x0, x0, #0x110
  40ced0:	str	x0, [sp, #104]
  40ced4:	b	40cf64 <wcrtomb@plt+0xa694>
  40ced8:	ldr	x0, [x19, #320]
  40cedc:	ldr	x0, [x0, x22]
  40cee0:	bl	402660 <free@plt>
  40cee4:	ldr	x0, [x19, #320]
  40cee8:	str	xzr, [x0, x22]
  40ceec:	ldr	x0, [x19, #320]
  40cef0:	add	x0, x0, x22
  40cef4:	str	xzr, [x0, #8]
  40cef8:	b	40cf50 <wcrtomb@plt+0xa680>
  40cefc:	ldr	x0, [x21, x0, lsl #3]
  40cf00:	str	x0, [x3, x1]
  40cf04:	add	x2, x2, #0x1
  40cf08:	ldr	x0, [x19, #320]
  40cf0c:	add	x0, x0, x22
  40cf10:	ldr	x1, [x0, #8]
  40cf14:	cmp	x2, x1
  40cf18:	b.ge	40cf40 <wcrtomb@plt+0xa670>  // b.tcont
  40cf1c:	lsl	x1, x2, #4
  40cf20:	ldr	x3, [x0]
  40cf24:	ldr	x0, [x3, x1]
  40cf28:	ldr	x4, [x21, x0, lsl #3]
  40cf2c:	cmn	x4, #0x1
  40cf30:	b.ne	40cefc <wcrtomb@plt+0xa62c>  // b.any
  40cf34:	str	x23, [x21, x0, lsl #3]
  40cf38:	add	x23, x23, #0x1
  40cf3c:	b	40cefc <wcrtomb@plt+0xa62c>
  40cf40:	ldr	x3, [sp, #104]
  40cf44:	mov	x2, #0x10                  	// #16
  40cf48:	ldr	x0, [x0]
  40cf4c:	bl	402340 <qsort@plt>
  40cf50:	add	x24, x24, #0x1
  40cf54:	add	x22, x22, #0x18
  40cf58:	ldr	x0, [x19, #152]
  40cf5c:	cmp	x24, x0
  40cf60:	b.ge	40cfcc <wcrtomb@plt+0xa6fc>  // b.tcont
  40cf64:	ldr	x1, [x21, x24, lsl #3]
  40cf68:	cmn	x1, #0x1
  40cf6c:	b.eq	40ced8 <wcrtomb@plt+0xa608>  // b.none
  40cf70:	ldr	x0, [x19, #144]
  40cf74:	ldr	x0, [x0, x24, lsl #3]
  40cf78:	str	x0, [x28, x1, lsl #3]
  40cf7c:	ldr	x0, [x19, #320]
  40cf80:	add	x0, x0, x22
  40cf84:	add	x2, x1, x1, lsl #1
  40cf88:	add	x2, x27, x2, lsl #3
  40cf8c:	ldp	x4, x5, [x0]
  40cf90:	stp	x4, x5, [x2]
  40cf94:	ldr	x4, [x0, #16]
  40cf98:	str	x4, [x2, #16]
  40cf9c:	ldr	x2, [x19, #336]
  40cfa0:	ldr	w2, [x2, x24, lsl #2]
  40cfa4:	str	w2, [x26, x1, lsl #2]
  40cfa8:	cbz	x25, 40cfb8 <wcrtomb@plt+0xa6e8>
  40cfac:	ldr	x2, [x19, #280]
  40cfb0:	ldrb	w2, [x2, x24]
  40cfb4:	strb	w2, [x25, x1]
  40cfb8:	ldr	x1, [x0, #8]
  40cfbc:	cmp	x1, #0x0
  40cfc0:	b.le	40cf40 <wcrtomb@plt+0xa670>
  40cfc4:	mov	x2, #0x0                   	// #0
  40cfc8:	b	40cf1c <wcrtomb@plt+0xa64c>
  40cfcc:	cmp	x23, #0x0
  40cfd0:	b.le	40d040 <wcrtomb@plt+0xa770>
  40cfd4:	mov	x2, #0x0                   	// #0
  40cfd8:	mov	x0, #0x0                   	// #0
  40cfdc:	b	40cff8 <wcrtomb@plt+0xa728>
  40cfe0:	mov	x23, #0x1                   	// #1
  40cfe4:	b	40cfd4 <wcrtomb@plt+0xa704>
  40cfe8:	add	x0, x0, #0x1
  40cfec:	add	x2, x2, #0x18
  40cff0:	cmp	x23, x0
  40cff4:	b.le	40d040 <wcrtomb@plt+0xa770>
  40cff8:	ldr	x1, [x19, #144]
  40cffc:	ldr	x3, [x28, x0, lsl #3]
  40d000:	str	x3, [x1, x0, lsl #3]
  40d004:	ldr	x1, [x19, #320]
  40d008:	add	x1, x1, x2
  40d00c:	add	x3, x27, x2
  40d010:	ldp	x4, x5, [x3]
  40d014:	stp	x4, x5, [x1]
  40d018:	ldr	x3, [x3, #16]
  40d01c:	str	x3, [x1, #16]
  40d020:	ldr	x1, [x19, #336]
  40d024:	ldr	w3, [x26, x0, lsl #2]
  40d028:	str	w3, [x1, x0, lsl #2]
  40d02c:	cbz	x25, 40cfe8 <wcrtomb@plt+0xa718>
  40d030:	ldr	x1, [x19, #280]
  40d034:	ldrb	w3, [x25, x0]
  40d038:	strb	w3, [x1, x0]
  40d03c:	b	40cfe8 <wcrtomb@plt+0xa718>
  40d040:	str	x23, [x19, #176]
  40d044:	str	x23, [x19, #152]
  40d048:	mov	x0, x28
  40d04c:	bl	402660 <free@plt>
  40d050:	mov	x0, x27
  40d054:	bl	402660 <free@plt>
  40d058:	mov	x0, x26
  40d05c:	bl	402660 <free@plt>
  40d060:	mov	x0, x25
  40d064:	bl	402660 <free@plt>
  40d068:	mov	x0, x21
  40d06c:	bl	402660 <free@plt>
  40d070:	ldr	x0, [sp, #168]
  40d074:	bl	402660 <free@plt>
  40d078:	mov	x0, x20
  40d07c:	bl	402660 <free@plt>
  40d080:	mov	x20, #0x0                   	// #0
  40d084:	mov	x0, #0x1ff                 	// #511
  40d088:	bfxil	x20, x0, #0, #32
  40d08c:	mov	x1, #0x1                   	// #1
  40d090:	add	x0, sp, #0xd8
  40d094:	bl	40ae8c <wcrtomb@plt+0x85bc>
  40d098:	add	x2, sp, #0xd8
  40d09c:	mov	x0, #0x0                   	// #0
  40d0a0:	mov	x1, x20
  40d0a4:	bl	40a534 <wcrtomb@plt+0x7c64>
  40d0a8:	ldr	x0, [x19, #152]
  40d0ac:	cmp	xzr, x0, lsr #62
  40d0b0:	cset	x1, ne  // ne = any
  40d0b4:	tst	x0, #0x2000000000000000
  40d0b8:	csinc	w1, w1, wzr, eq  // eq = none
  40d0bc:	cbnz	w1, 40d0e8 <wcrtomb@plt+0xa818>
  40d0c0:	lsl	x0, x0, #2
  40d0c4:	bl	413fec <wcrtomb@plt+0x1171c>
  40d0c8:	str	x0, [x19, #344]
  40d0cc:	ldr	x0, [x19, #152]
  40d0d0:	cmp	x0, #0x0
  40d0d4:	b.le	40d1e4 <wcrtomb@plt+0xa914>
  40d0d8:	mov	x4, #0x0                   	// #0
  40d0dc:	mov	x7, #0x0                   	// #0
  40d0e0:	mov	w6, #0x49                  	// #73
  40d0e4:	b	40d174 <wcrtomb@plt+0xa8a4>
  40d0e8:	bl	414264 <wcrtomb@plt+0x11994>
  40d0ec:	add	x1, x1, #0x1
  40d0f0:	ldr	x0, [x19, #320]
  40d0f4:	add	x0, x0, x4
  40d0f8:	ldr	x2, [x0, #8]
  40d0fc:	cmp	x2, x1
  40d100:	b.le	40d160 <wcrtomb@plt+0xa890>
  40d104:	lsl	x3, x1, #4
  40d108:	ldr	x2, [x0]
  40d10c:	add	x2, x2, x3
  40d110:	ldr	w0, [x2, #8]
  40d114:	eor	w0, w0, w0, asr #2
  40d118:	tst	w0, w6
  40d11c:	b.eq	40d130 <wcrtomb@plt+0xa860>  // b.none
  40d120:	ldr	x2, [x19, #344]
  40d124:	ldr	w0, [x2, x5]
  40d128:	orr	w0, w0, #0x4
  40d12c:	str	w0, [x2, x5]
  40d130:	ldr	x0, [x19, #320]
  40d134:	ldr	x0, [x0, x4]
  40d138:	add	x0, x0, x3
  40d13c:	ldr	w0, [x0, #8]
  40d140:	eor	w0, w0, w0, asr #1
  40d144:	tst	w0, w6
  40d148:	b.eq	40d0ec <wcrtomb@plt+0xa81c>  // b.none
  40d14c:	ldr	x2, [x19, #344]
  40d150:	ldr	w0, [x2, x5]
  40d154:	orr	w0, w0, #0x2
  40d158:	str	w0, [x2, x5]
  40d15c:	b	40d0ec <wcrtomb@plt+0xa81c>
  40d160:	add	x7, x7, #0x1
  40d164:	add	x4, x4, #0x18
  40d168:	ldr	x0, [x19, #152]
  40d16c:	cmp	x0, x7
  40d170:	b.le	40d1e4 <wcrtomb@plt+0xa914>
  40d174:	lsl	x5, x7, #2
  40d178:	ldr	x0, [x19, #344]
  40d17c:	str	wzr, [x0, x7, lsl #2]
  40d180:	ldr	x0, [x19, #336]
  40d184:	ldr	w0, [x0, x7, lsl #2]
  40d188:	eor	w0, w0, w0, asr #2
  40d18c:	tst	w0, w6
  40d190:	b.eq	40d1a4 <wcrtomb@plt+0xa8d4>  // b.none
  40d194:	ldr	x1, [x19, #344]
  40d198:	ldr	w0, [x1, x7, lsl #2]
  40d19c:	orr	w0, w0, #0x4
  40d1a0:	str	w0, [x1, x7, lsl #2]
  40d1a4:	ldr	x0, [x19, #336]
  40d1a8:	ldr	w0, [x0, x5]
  40d1ac:	eor	w0, w0, w0, asr #1
  40d1b0:	tst	w0, w6
  40d1b4:	b.eq	40d1c8 <wcrtomb@plt+0xa8f8>  // b.none
  40d1b8:	ldr	x1, [x19, #344]
  40d1bc:	ldr	w0, [x1, x5]
  40d1c0:	orr	w0, w0, #0x2
  40d1c4:	str	w0, [x1, x5]
  40d1c8:	ldr	x0, [x19, #320]
  40d1cc:	add	x0, x0, x4
  40d1d0:	ldr	x1, [x0, #8]
  40d1d4:	cmp	x1, #0x0
  40d1d8:	b.le	40d160 <wcrtomb@plt+0xa890>
  40d1dc:	mov	x1, #0x0                   	// #0
  40d1e0:	b	40d104 <wcrtomb@plt+0xa834>
  40d1e4:	add	x1, sp, #0xd8
  40d1e8:	mov	x0, x19
  40d1ec:	bl	40a0d4 <wcrtomb@plt+0x7804>
  40d1f0:	mov	w20, w0
  40d1f4:	tbnz	w20, #2, 40d264 <wcrtomb@plt+0xa994>
  40d1f8:	eor	w2, w20, #0x7
  40d1fc:	add	x1, sp, #0xd8
  40d200:	mov	x0, x19
  40d204:	bl	40aed8 <wcrtomb@plt+0x8608>
  40d208:	str	w0, [x19, #364]
  40d20c:	sxtw	x1, w0
  40d210:	str	x1, [x19, #400]
  40d214:	tbnz	w20, #1, 40d278 <wcrtomb@plt+0xa9a8>
  40d218:	ldr	w0, [x19, #364]
  40d21c:	add	w0, w0, #0x1
  40d220:	str	w0, [x19, #364]
  40d224:	str	wzr, [x19, #360]
  40d228:	ldr	x0, [sp, #144]
  40d22c:	bl	402660 <free@plt>
  40d230:	ldr	x0, [sp, #152]
  40d234:	bl	402660 <free@plt>
  40d238:	ldr	x0, [sp, #192]
  40d23c:	bl	402660 <free@plt>
  40d240:	ldr	x0, [sp, #216]
  40d244:	bl	402660 <free@plt>
  40d248:	ldp	x19, x20, [sp, #16]
  40d24c:	ldp	x21, x22, [sp, #32]
  40d250:	ldp	x23, x24, [sp, #48]
  40d254:	ldp	x25, x26, [sp, #64]
  40d258:	ldp	x27, x28, [sp, #80]
  40d25c:	ldp	x29, x30, [sp], #240
  40d260:	ret
  40d264:	mov	w2, #0x4                   	// #4
  40d268:	add	x1, sp, #0xd8
  40d26c:	mov	x0, x19
  40d270:	bl	40aed8 <wcrtomb@plt+0x8608>
  40d274:	b	40d1f8 <wcrtomb@plt+0xa928>
  40d278:	mov	w2, #0x2                   	// #2
  40d27c:	add	x1, sp, #0xd8
  40d280:	mov	x0, x19
  40d284:	bl	40aed8 <wcrtomb@plt+0x8608>
  40d288:	str	w0, [x19, #364]
  40d28c:	b	40d218 <wcrtomb@plt+0xa948>
  40d290:	stp	x29, x30, [sp, #-288]!
  40d294:	mov	x29, sp
  40d298:	stp	x19, x20, [sp, #16]
  40d29c:	stp	x21, x22, [sp, #32]
  40d2a0:	stp	x23, x24, [sp, #48]
  40d2a4:	stp	x25, x26, [sp, #64]
  40d2a8:	stp	x27, x28, [sp, #80]
  40d2ac:	mov	x19, x0
  40d2b0:	str	xzr, [x0, #104]
  40d2b4:	add	x0, sp, #0x100
  40d2b8:	bl	40a250 <wcrtomb@plt+0x7980>
  40d2bc:	mov	x0, x19
  40d2c0:	bl	40a21c <wcrtomb@plt+0x794c>
  40d2c4:	str	w0, [sp, #108]
  40d2c8:	mov	w20, w0
  40d2cc:	mov	w1, #0x1                   	// #1
  40d2d0:	str	w1, [sp, #104]
  40d2d4:	cmp	w0, #0x5e
  40d2d8:	b.eq	40d2fc <wcrtomb@plt+0xaa2c>  // b.none
  40d2dc:	ldr	w21, [x19, #72]
  40d2e0:	cmp	w20, #0x3a
  40d2e4:	cset	w23, eq  // eq = none
  40d2e8:	mov	w27, #0x2                   	// #2
  40d2ec:	add	x26, sp, #0x78
  40d2f0:	add	x0, x26, #0x4
  40d2f4:	str	x0, [sp, #96]
  40d2f8:	b	40d380 <wcrtomb@plt+0xaab0>
  40d2fc:	mov	x0, x19
  40d300:	bl	40a21c <wcrtomb@plt+0x794c>
  40d304:	mov	w20, w0
  40d308:	ldrb	w0, [x19, #1049]
  40d30c:	str	w0, [sp, #104]
  40d310:	b	40d2dc <wcrtomb@plt+0xaa0c>
  40d314:	mov	x0, x19
  40d318:	bl	40a21c <wcrtomb@plt+0x794c>
  40d31c:	mov	w22, w0
  40d320:	ldr	w25, [x19, #72]
  40d324:	cmp	w0, #0x3a
  40d328:	b.eq	40d3b0 <wcrtomb@plt+0xaae0>  // b.none
  40d32c:	cmp	w0, #0x2e
  40d330:	mov	w0, #0x3d                  	// #61
  40d334:	ccmp	w22, w0, #0x4, ne  // ne = any
  40d338:	b.eq	40d3c0 <wcrtomb@plt+0xaaf0>  // b.none
  40d33c:	cmp	w22, #0x100
  40d340:	b.eq	40d39c <wcrtomb@plt+0xaacc>  // b.none
  40d344:	cmp	w22, #0x2d
  40d348:	b.eq	40d544 <wcrtomb@plt+0xac74>  // b.none
  40d34c:	cmp	w20, #0x3a
  40d350:	mov	w0, #0x4                   	// #4
  40d354:	csel	w0, w27, w0, eq  // eq = none
  40d358:	orr	w23, w23, w0
  40d35c:	ldrb	w0, [x19, #1048]
  40d360:	cbz	w0, 40d67c <wcrtomb@plt+0xadac>
  40d364:	cmn	w21, #0x1
  40d368:	b.ne	40d6c4 <wcrtomb@plt+0xadf4>  // b.any
  40d36c:	mov	w21, w25
  40d370:	mov	w20, w22
  40d374:	str	wzr, [sp, #104]
  40d378:	cmp	w20, #0x5d
  40d37c:	b.eq	40d770 <wcrtomb@plt+0xaea0>  // b.none
  40d380:	and	w23, w23, #0xfffffffd
  40d384:	cmp	w20, #0x5b
  40d388:	b.eq	40d314 <wcrtomb@plt+0xaa44>  // b.none
  40d38c:	cmp	w20, #0x5c
  40d390:	b.ne	40d39c <wcrtomb@plt+0xaacc>  // b.any
  40d394:	ldr	x0, [x19, #448]
  40d398:	tbnz	w0, #0, 40d530 <wcrtomb@plt+0xac60>
  40d39c:	mov	x0, x19
  40d3a0:	bl	40a21c <wcrtomb@plt+0x794c>
  40d3a4:	mov	w22, w0
  40d3a8:	ldr	w25, [x19, #72]
  40d3ac:	b	40d344 <wcrtomb@plt+0xaa74>
  40d3b0:	ldr	x0, [x19, #448]
  40d3b4:	tbz	w0, #2, 40d344 <wcrtomb@plt+0xaa74>
  40d3b8:	mov	w20, #0x0                   	// #0
  40d3bc:	b	40d470 <wcrtomb@plt+0xaba0>
  40d3c0:	mov	w20, #0x0                   	// #0
  40d3c4:	b	40d470 <wcrtomb@plt+0xaba0>
  40d3c8:	ldr	x1, [x19, #32]
  40d3cc:	ldrb	w1, [x1]
  40d3d0:	cmp	w1, #0x5d
  40d3d4:	b.ne	40d488 <wcrtomb@plt+0xabb8>  // b.any
  40d3d8:	strb	wzr, [x26, w20, sxtw]
  40d3dc:	mov	x0, x19
  40d3e0:	bl	40a21c <wcrtomb@plt+0x794c>
  40d3e4:	cmp	w22, #0x3a
  40d3e8:	b.ne	40d528 <wcrtomb@plt+0xac58>  // b.any
  40d3ec:	ldrb	w0, [x19, #457]
  40d3f0:	cbz	w0, 40d424 <wcrtomb@plt+0xab54>
  40d3f4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d3f8:	add	x1, x1, #0xd0
  40d3fc:	mov	x0, x26
  40d400:	bl	402640 <strcmp@plt>
  40d404:	mov	w21, w0
  40d408:	cbz	w0, 40d49c <wcrtomb@plt+0xabcc>
  40d40c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d410:	add	x1, x1, #0xd8
  40d414:	mov	x0, x26
  40d418:	bl	402640 <strcmp@plt>
  40d41c:	mov	w21, w0
  40d420:	cbz	w0, 40d49c <wcrtomb@plt+0xabcc>
  40d424:	adrp	x20, 426000 <_obstack_memory_used@@Base+0xf218>
  40d428:	add	x20, x20, #0x350
  40d42c:	add	x20, x20, #0x20
  40d430:	mov	w21, #0x0                   	// #0
  40d434:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d438:	add	x1, x1, #0xc8
  40d43c:	mov	x0, x26
  40d440:	bl	402640 <strcmp@plt>
  40d444:	cbz	w0, 40d49c <wcrtomb@plt+0xabcc>
  40d448:	add	w21, w21, #0x1
  40d44c:	ldr	x1, [x20, #24]!
  40d450:	cbnz	x1, 40d43c <wcrtomb@plt+0xab6c>
  40d454:	mov	w2, #0x5                   	// #5
  40d458:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d45c:	add	x1, x1, #0x118
  40d460:	mov	x0, #0x0                   	// #0
  40d464:	bl	4027a0 <dcgettext@plt>
  40d468:	bl	402b2c <wcrtomb@plt+0x25c>
  40d46c:	strb	wzr, [sp, #120]
  40d470:	mov	x0, x19
  40d474:	bl	40a21c <wcrtomb@plt+0x794c>
  40d478:	ldr	x1, [x19, #40]
  40d47c:	cbz	x1, 40d3d8 <wcrtomb@plt+0xab08>
  40d480:	cmp	w22, w0
  40d484:	b.eq	40d3c8 <wcrtomb@plt+0xaaf8>  // b.none
  40d488:	cmp	w20, #0x1f
  40d48c:	b.gt	40d46c <wcrtomb@plt+0xab9c>
  40d490:	strb	w0, [x26, w20, sxtw]
  40d494:	add	w20, w20, #0x1
  40d498:	b	40d470 <wcrtomb@plt+0xaba0>
  40d49c:	ldrb	w0, [x19, #1048]
  40d4a0:	mov	w20, #0x0                   	// #0
  40d4a4:	cbz	w0, 40d4e4 <wcrtomb@plt+0xac14>
  40d4a8:	sbfiz	x0, x21, #1, #32
  40d4ac:	add	x0, x0, w21, sxtw
  40d4b0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d4b4:	add	x1, x1, #0x350
  40d4b8:	add	x0, x1, x0, lsl #3
  40d4bc:	ldrb	w0, [x0, #48]
  40d4c0:	cbnz	w0, 40d4e0 <wcrtomb@plt+0xac10>
  40d4c4:	str	w0, [sp, #104]
  40d4c8:	orr	w23, w23, #0x8
  40d4cc:	mov	x0, x19
  40d4d0:	bl	40a21c <wcrtomb@plt+0x794c>
  40d4d4:	mov	w20, w0
  40d4d8:	ldr	w21, [x19, #72]
  40d4dc:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d4e0:	mov	w20, #0x0                   	// #0
  40d4e4:	sbfiz	x0, x21, #1, #32
  40d4e8:	add	x0, x0, w21, sxtw
  40d4ec:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d4f0:	add	x1, x1, #0x350
  40d4f4:	add	x0, x1, x0, lsl #3
  40d4f8:	ldr	x21, [x0, #40]
  40d4fc:	b	40d518 <wcrtomb@plt+0xac48>
  40d500:	add	x1, sp, #0x100
  40d504:	mov	w0, w20
  40d508:	bl	409f80 <wcrtomb@plt+0x76b0>
  40d50c:	add	w20, w20, #0x1
  40d510:	cmp	w20, #0x100
  40d514:	b.eq	40d4c8 <wcrtomb@plt+0xabf8>  // b.none
  40d518:	mov	w0, w20
  40d51c:	blr	x21
  40d520:	cbz	w0, 40d50c <wcrtomb@plt+0xac3c>
  40d524:	b	40d500 <wcrtomb@plt+0xac30>
  40d528:	str	wzr, [sp, #104]
  40d52c:	b	40d4c8 <wcrtomb@plt+0xabf8>
  40d530:	mov	x0, x19
  40d534:	bl	40a21c <wcrtomb@plt+0x794c>
  40d538:	mov	w20, w0
  40d53c:	ldr	w21, [x19, #72]
  40d540:	b	40d39c <wcrtomb@plt+0xaacc>
  40d544:	mov	x0, x19
  40d548:	bl	40a21c <wcrtomb@plt+0x794c>
  40d54c:	mov	w24, w0
  40d550:	ldr	w28, [x19, #72]
  40d554:	cmp	w0, #0x5b
  40d558:	b.eq	40d588 <wcrtomb@plt+0xacb8>  // b.none
  40d55c:	cmp	w0, #0x5d
  40d560:	b.eq	40d5fc <wcrtomb@plt+0xad2c>  // b.none
  40d564:	cmp	w0, #0x5c
  40d568:	b.ne	40d598 <wcrtomb@plt+0xacc8>  // b.any
  40d56c:	ldr	x0, [x19, #448]
  40d570:	tbz	w0, #0, 40d598 <wcrtomb@plt+0xacc8>
  40d574:	mov	x0, x19
  40d578:	bl	40a21c <wcrtomb@plt+0x794c>
  40d57c:	mov	w24, w0
  40d580:	ldr	w28, [x19, #72]
  40d584:	b	40d598 <wcrtomb@plt+0xacc8>
  40d588:	ldr	x0, [x19, #32]
  40d58c:	ldrb	w0, [x0]
  40d590:	cmp	w0, #0x2e
  40d594:	b.eq	40d5f8 <wcrtomb@plt+0xad28>  // b.none
  40d598:	orr	w23, w23, #0x8
  40d59c:	mov	x0, x19
  40d5a0:	bl	40a21c <wcrtomb@plt+0x794c>
  40d5a4:	mov	w22, w0
  40d5a8:	ldr	w25, [x19, #72]
  40d5ac:	cmp	w28, w21
  40d5b0:	ccmn	w21, #0x1, #0x4, eq  // eq = none
  40d5b4:	b.ne	40d34c <wcrtomb@plt+0xaa7c>  // b.any
  40d5b8:	ldrb	w0, [x19, #1049]
  40d5bc:	cbnz	w0, 40d618 <wcrtomb@plt+0xad48>
  40d5c0:	sub	w0, w24, #0x30
  40d5c4:	and	w0, w0, #0xff
  40d5c8:	cmp	w0, #0x9
  40d5cc:	cset	w0, ls  // ls = plast
  40d5d0:	sub	w1, w20, #0x30
  40d5d4:	and	w1, w1, #0xff
  40d5d8:	cmp	w1, #0x9
  40d5dc:	cset	w1, ls  // ls = plast
  40d5e0:	ands	w0, w0, w1
  40d5e4:	b.ne	40d618 <wcrtomb@plt+0xad48>  // b.any
  40d5e8:	mov	w21, w25
  40d5ec:	mov	w20, w22
  40d5f0:	str	w0, [sp, #104]
  40d5f4:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d5f8:	str	wzr, [sp, #104]
  40d5fc:	ldr	x0, [x19, #32]
  40d600:	sub	x0, x0, #0x1
  40d604:	str	x0, [x19, #32]
  40d608:	ldr	x0, [x19, #40]
  40d60c:	add	x0, x0, #0x1
  40d610:	str	x0, [x19, #40]
  40d614:	b	40d34c <wcrtomb@plt+0xaa7c>
  40d618:	cmp	w24, w20
  40d61c:	b.lt	40d764 <wcrtomb@plt+0xae94>  // b.tstop
  40d620:	sbfiz	x21, x20, #1, #32
  40d624:	add	w24, w24, #0x1
  40d628:	b	40d648 <wcrtomb@plt+0xad78>
  40d62c:	add	x1, sp, #0x100
  40d630:	mov	w0, w20
  40d634:	bl	409f80 <wcrtomb@plt+0x76b0>
  40d638:	add	w20, w20, #0x1
  40d63c:	add	x21, x21, #0x2
  40d640:	cmp	w24, w20
  40d644:	b.eq	40d670 <wcrtomb@plt+0xada0>  // b.none
  40d648:	ldrb	w0, [x19, #457]
  40d64c:	cbz	w0, 40d62c <wcrtomb@plt+0xad5c>
  40d650:	bl	402650 <__ctype_b_loc@plt>
  40d654:	ldr	x0, [x0]
  40d658:	ldrh	w0, [x0, x21]
  40d65c:	tbz	w0, #10, 40d62c <wcrtomb@plt+0xad5c>
  40d660:	add	x1, sp, #0x100
  40d664:	mov	w0, w20
  40d668:	bl	40a8c8 <wcrtomb@plt+0x7ff8>
  40d66c:	b	40d638 <wcrtomb@plt+0xad68>
  40d670:	mov	w21, w25
  40d674:	mov	w20, w22
  40d678:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d67c:	ldrb	w0, [x19, #457]
  40d680:	cbz	w0, 40d694 <wcrtomb@plt+0xadc4>
  40d684:	bl	402650 <__ctype_b_loc@plt>
  40d688:	ldr	x0, [x0]
  40d68c:	ldrh	w0, [x0, w20, sxtw #1]
  40d690:	tbnz	w0, #10, 40d6ac <wcrtomb@plt+0xaddc>
  40d694:	add	x1, sp, #0x100
  40d698:	mov	w0, w20
  40d69c:	bl	409f80 <wcrtomb@plt+0x76b0>
  40d6a0:	mov	w21, w25
  40d6a4:	mov	w20, w22
  40d6a8:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d6ac:	add	x1, sp, #0x100
  40d6b0:	mov	w0, w20
  40d6b4:	bl	40a8c8 <wcrtomb@plt+0x7ff8>
  40d6b8:	mov	w21, w25
  40d6bc:	mov	w20, w22
  40d6c0:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d6c4:	ldrb	w0, [x19, #457]
  40d6c8:	cbnz	w0, 40d6e4 <wcrtomb@plt+0xae14>
  40d6cc:	str	w21, [sp, #120]
  40d6d0:	mov	w24, #0x1                   	// #1
  40d6d4:	add	x20, sp, #0x78
  40d6d8:	mov	w21, #0x0                   	// #0
  40d6dc:	add	x28, x19, #0x70
  40d6e0:	b	40d724 <wcrtomb@plt+0xae54>
  40d6e4:	ldr	x1, [sp, #96]
  40d6e8:	mov	w0, w21
  40d6ec:	bl	40f8e4 <wcrtomb@plt+0xd014>
  40d6f0:	add	w24, w0, #0x1
  40d6f4:	str	w21, [sp, #120]
  40d6f8:	cmp	w24, #0x0
  40d6fc:	b.gt	40d6d4 <wcrtomb@plt+0xae04>
  40d700:	mov	w21, w25
  40d704:	mov	w20, w22
  40d708:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d70c:	add	x1, sp, #0x100
  40d710:	bl	409f80 <wcrtomb@plt+0x76b0>
  40d714:	add	w21, w21, #0x1
  40d718:	add	x20, x20, #0x4
  40d71c:	cmp	w21, w24
  40d720:	b.ge	40d700 <wcrtomb@plt+0xae30>  // b.tcont
  40d724:	ldr	w0, [x20]
  40d728:	bl	4023a0 <wctob@plt>
  40d72c:	tbz	w0, #31, 40d70c <wcrtomb@plt+0xae3c>
  40d730:	mov	x4, #0x4                   	// #4
  40d734:	mov	x3, #0xffffffffffffffff    	// #-1
  40d738:	mov	x2, x28
  40d73c:	ldr	x1, [x19, #104]
  40d740:	ldr	x0, [x19, #96]
  40d744:	bl	40a31c <wcrtomb@plt+0x7a4c>
  40d748:	str	x0, [x19, #96]
  40d74c:	ldr	x1, [x19, #104]
  40d750:	add	x2, x1, #0x1
  40d754:	str	x2, [x19, #104]
  40d758:	ldr	w2, [x20]
  40d75c:	str	w2, [x0, x1, lsl #2]
  40d760:	b	40d714 <wcrtomb@plt+0xae44>
  40d764:	mov	w21, w25
  40d768:	mov	w20, w22
  40d76c:	b	40d378 <wcrtomb@plt+0xaaa8>
  40d770:	cmp	w23, #0x7
  40d774:	b.eq	40d7cc <wcrtomb@plt+0xaefc>  // b.none
  40d778:	mov	x0, #0x112                 	// #274
  40d77c:	ldr	w1, [sp, #104]
  40d780:	cbz	w1, 40d7b0 <wcrtomb@plt+0xaee0>
  40d784:	ldrb	w0, [x19, #1048]
  40d788:	cbz	w0, 40d83c <wcrtomb@plt+0xaf6c>
  40d78c:	ldr	w0, [sp, #108]
  40d790:	cmp	w0, #0x5e
  40d794:	b.eq	40d7e8 <wcrtomb@plt+0xaf18>  // b.none
  40d798:	ldr	x0, [x19, #104]
  40d79c:	cbnz	x0, 40d7e8 <wcrtomb@plt+0xaf18>
  40d7a0:	add	x1, sp, #0x100
  40d7a4:	mov	x0, x19
  40d7a8:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40d7ac:	add	x0, x0, #0x114
  40d7b0:	ldp	x19, x20, [sp, #16]
  40d7b4:	ldp	x21, x22, [sp, #32]
  40d7b8:	ldp	x23, x24, [sp, #48]
  40d7bc:	ldp	x25, x26, [sp, #64]
  40d7c0:	ldp	x27, x28, [sp, #80]
  40d7c4:	ldp	x29, x30, [sp], #288
  40d7c8:	ret
  40d7cc:	mov	w2, #0x5                   	// #5
  40d7d0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d7d4:	add	x1, x1, #0xe0
  40d7d8:	mov	x0, #0x0                   	// #0
  40d7dc:	bl	4027a0 <dcgettext@plt>
  40d7e0:	bl	402b4c <wcrtomb@plt+0x27c>
  40d7e4:	b	40d778 <wcrtomb@plt+0xaea8>
  40d7e8:	ldr	w0, [sp, #108]
  40d7ec:	cmp	w0, #0x5e
  40d7f0:	cset	w0, eq  // eq = none
  40d7f4:	strb	w0, [x19, #88]
  40d7f8:	ldr	x0, [sp, #256]
  40d7fc:	ldr	x1, [sp, #264]
  40d800:	orr	x0, x0, x1
  40d804:	ldr	x1, [sp, #272]
  40d808:	ldr	x2, [sp, #280]
  40d80c:	orr	x1, x1, x2
  40d810:	orr	x0, x0, x1
  40d814:	mov	x1, #0xffffffffffffffff    	// #-1
  40d818:	cbnz	x0, 40d828 <wcrtomb@plt+0xaf58>
  40d81c:	str	x1, [x19, #80]
  40d820:	mov	x0, #0x113                 	// #275
  40d824:	b	40d7b0 <wcrtomb@plt+0xaee0>
  40d828:	add	x1, sp, #0x100
  40d82c:	mov	x0, x19
  40d830:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40d834:	mov	x1, x0
  40d838:	b	40d81c <wcrtomb@plt+0xaf4c>
  40d83c:	ldr	w0, [sp, #108]
  40d840:	cmp	w0, #0x5e
  40d844:	b.ne	40d7a0 <wcrtomb@plt+0xaed0>  // b.any
  40d848:	add	x0, sp, #0x100
  40d84c:	add	x2, sp, #0x120
  40d850:	ldr	x1, [x0]
  40d854:	mvn	x1, x1
  40d858:	str	x1, [x0], #8
  40d85c:	cmp	x0, x2
  40d860:	b.ne	40d850 <wcrtomb@plt+0xaf80>  // b.any
  40d864:	ldr	x0, [x19, #448]
  40d868:	tbz	w0, #8, 40d7a0 <wcrtomb@plt+0xaed0>
  40d86c:	ldr	x0, [sp, #256]
  40d870:	and	x0, x0, #0xfffffffffffffbff
  40d874:	str	x0, [sp, #256]
  40d878:	b	40d7a0 <wcrtomb@plt+0xaed0>
  40d87c:	stp	x29, x30, [sp, #-96]!
  40d880:	mov	x29, sp
  40d884:	stp	x19, x20, [sp, #16]
  40d888:	stp	x21, x22, [sp, #32]
  40d88c:	stp	x23, x24, [sp, #48]
  40d890:	mov	x19, x0
  40d894:	mov	w23, #0x2                   	// #2
  40d898:	mov	w22, #0x0                   	// #0
  40d89c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40d8a0:	add	x21, x0, #0x268
  40d8a4:	mov	w24, #0x1                   	// #1
  40d8a8:	ldr	x0, [x19, #40]
  40d8ac:	cbz	x0, 40d8d8 <wcrtomb@plt+0xb008>
  40d8b0:	mov	x0, x19
  40d8b4:	bl	40a1b4 <wcrtomb@plt+0x78e4>
  40d8b8:	mov	w20, w0
  40d8bc:	sub	w0, w0, #0xa
  40d8c0:	cmp	w0, #0x72
  40d8c4:	b.hi	40dd54 <wcrtomb@plt+0xb484>  // b.pmore
  40d8c8:	ldrh	w0, [x21, w0, uxtw #1]
  40d8cc:	adr	x1, 40d8d8 <wcrtomb@plt+0xb008>
  40d8d0:	add	x0, x1, w0, sxth #2
  40d8d4:	br	x0
  40d8d8:	mov	x0, #0xffffffffffffffff    	// #-1
  40d8dc:	str	x0, [x19, #48]
  40d8e0:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40d8e4:	cbnz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40d8e8:	ldr	x0, [x19, #40]
  40d8ec:	cbz	x0, 40d900 <wcrtomb@plt+0xb030>
  40d8f0:	mov	w22, w24
  40d8f4:	subs	w23, w23, #0x1
  40d8f8:	b.ne	40d8a8 <wcrtomb@plt+0xafd8>  // b.any
  40d8fc:	bl	4025a0 <abort@plt>
  40d900:	mov	w2, #0x5                   	// #5
  40d904:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40d908:	add	x1, x1, #0x130
  40d90c:	bl	4027a0 <dcgettext@plt>
  40d910:	bl	402b2c <wcrtomb@plt+0x25c>
  40d914:	cbnz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40d918:	ldr	x0, [x19, #448]
  40d91c:	tbnz	w0, #3, 40d934 <wcrtomb@plt+0xb064>
  40d920:	ldr	x0, [x19, #48]
  40d924:	sub	x1, x0, #0x106
  40d928:	cmp	x1, #0x1
  40d92c:	ccmn	x0, #0x1, #0x4, hi  // hi = pmore
  40d930:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40d934:	mov	x0, #0x10c                 	// #268
  40d938:	str	x0, [x19, #48]
  40d93c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40d940:	cbnz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40d944:	ldr	x1, [x19, #448]
  40d948:	tbnz	w1, #3, 40d9e0 <wcrtomb@plt+0xb110>
  40d94c:	ldr	x2, [x19, #40]
  40d950:	cbz	x2, 40d9e0 <wcrtomb@plt+0xb110>
  40d954:	lsr	x0, x1, #13
  40d958:	eor	x0, x0, #0x1
  40d95c:	and	w3, w0, #0x1
  40d960:	and	x0, x0, #0x1
  40d964:	cmp	x2, x0
  40d968:	b.le	40d98c <wcrtomb@plt+0xb0bc>
  40d96c:	ldr	x0, [x19, #32]
  40d970:	ldrb	w4, [x0]
  40d974:	cmp	w4, #0x5c
  40d978:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40d97c:	cset	x3, ne  // ne = any
  40d980:	ldrb	w0, [x0, x3]
  40d984:	cmp	w0, #0x29
  40d988:	b.eq	40d9e0 <wcrtomb@plt+0xb110>  // b.none
  40d98c:	lsr	x0, x1, #15
  40d990:	eor	x0, x0, #0x1
  40d994:	and	w3, w0, #0x1
  40d998:	and	x0, x0, #0x1
  40d99c:	cmp	x2, x0
  40d9a0:	b.le	40d9c4 <wcrtomb@plt+0xb0f4>
  40d9a4:	ldr	x0, [x19, #32]
  40d9a8:	ldrb	w4, [x0]
  40d9ac:	cmp	w4, #0x5c
  40d9b0:	ccmp	w3, #0x0, #0x4, eq  // eq = none
  40d9b4:	cset	x3, ne  // ne = any
  40d9b8:	ldrb	w0, [x0, x3]
  40d9bc:	cmp	w0, #0x7c
  40d9c0:	b.eq	40d9e0 <wcrtomb@plt+0xb110>  // b.none
  40d9c4:	tst	x1, #0x800
  40d9c8:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  40d9cc:	b.le	40dd54 <wcrtomb@plt+0xb484>
  40d9d0:	ldr	x0, [x19, #32]
  40d9d4:	ldrb	w0, [x0]
  40d9d8:	cmp	w0, #0xa
  40d9dc:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40d9e0:	mov	x0, #0x10d                 	// #269
  40d9e4:	str	x0, [x19, #48]
  40d9e8:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40d9ec:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40d9f0:	ldr	x0, [x19, #448]
  40d9f4:	tbnz	w0, #14, 40dd54 <wcrtomb@plt+0xb484>
  40d9f8:	strb	wzr, [x19, #120]
  40d9fc:	mov	x0, #0x112                 	// #274
  40da00:	str	x0, [x19, #48]
  40da04:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da08:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40da0c:	ldr	x0, [x19, #448]
  40da10:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40da14:	mov	x0, #0x10c                 	// #268
  40da18:	str	x0, [x19, #48]
  40da1c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da20:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40da24:	ldr	x0, [x19, #448]
  40da28:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40da2c:	mov	x0, #0x10d                 	// #269
  40da30:	str	x0, [x19, #48]
  40da34:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da38:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40da3c:	ldr	x0, [x19, #448]
  40da40:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40da44:	mov	x0, #0x10e                 	// #270
  40da48:	str	x0, [x19, #48]
  40da4c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da50:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40da54:	ldr	x0, [x19, #448]
  40da58:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40da5c:	mov	x0, #0x10f                 	// #271
  40da60:	str	x0, [x19, #48]
  40da64:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da68:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40da6c:	ldr	x0, [x19, #448]
  40da70:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40da74:	mov	x0, #0x110                 	// #272
  40da78:	str	x0, [x19, #48]
  40da7c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da80:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40da84:	ldr	x0, [x19, #448]
  40da88:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40da8c:	mov	x0, #0x111                 	// #273
  40da90:	str	x0, [x19, #48]
  40da94:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40da98:	ldr	x0, [x19, #448]
  40da9c:	tbnz	w0, #10, 40dd54 <wcrtomb@plt+0xb484>
  40daa0:	ubfx	w1, w0, #1, #1
  40daa4:	cmp	w1, w22
  40daa8:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40daac:	tbnz	w0, #4, 40dab8 <wcrtomb@plt+0xb1e8>
  40dab0:	ldrb	w0, [x19, #120]
  40dab4:	cbnz	w0, 40dd54 <wcrtomb@plt+0xb484>
  40dab8:	mov	x0, #0x101                 	// #257
  40dabc:	str	x0, [x19, #48]
  40dac0:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40dac4:	cbnz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40dac8:	ldr	x0, [x19, #448]
  40dacc:	tbnz	w0, #4, 40dad8 <wcrtomb@plt+0xb208>
  40dad0:	ldrb	w0, [x19, #120]
  40dad4:	cbnz	w0, 40dd54 <wcrtomb@plt+0xb484>
  40dad8:	mov	x0, #0x102                 	// #258
  40dadc:	str	x0, [x19, #48]
  40dae0:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40dae4:	ldr	x0, [x19, #448]
  40dae8:	tbnz	w0, #10, 40dd54 <wcrtomb@plt+0xb484>
  40daec:	ubfx	w1, w0, #1, #1
  40daf0:	cmp	w1, w22
  40daf4:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40daf8:	tbnz	w0, #4, 40db04 <wcrtomb@plt+0xb234>
  40dafc:	ldrb	w0, [x19, #120]
  40db00:	cbnz	w0, 40dd54 <wcrtomb@plt+0xb484>
  40db04:	mov	x0, #0x103                 	// #259
  40db08:	str	x0, [x19, #48]
  40db0c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40db10:	ldr	x6, [x19, #448]
  40db14:	tbz	w6, #9, 40dd54 <wcrtomb@plt+0xb484>
  40db18:	lsr	x0, x6, #12
  40db1c:	eor	x0, x0, #0x1
  40db20:	and	w0, w0, #0x1
  40db24:	cmp	w0, w22
  40db28:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40db2c:	tbnz	w6, #4, 40db38 <wcrtomb@plt+0xb268>
  40db30:	ldrb	w0, [x19, #120]
  40db34:	cbnz	w0, 40dd54 <wcrtomb@plt+0xb484>
  40db38:	ldr	x1, [x19, #32]
  40db3c:	ldr	x4, [x19, #40]
  40db40:	add	x4, x1, x4
  40db44:	mov	w0, #0xffffffff            	// #-1
  40db48:	str	w0, [x19, #68]
  40db4c:	str	w0, [x19, #64]
  40db50:	mov	w5, #0x8030                	// #32816
  40db54:	cmp	x1, x4
  40db58:	b.ne	40dba8 <wcrtomb@plt+0xb2d8>  // b.any
  40db5c:	mov	x1, x4
  40db60:	cbnz	w22, 40db78 <wcrtomb@plt+0xb2a8>
  40db64:	cmp	x1, x4
  40db68:	b.eq	40db78 <wcrtomb@plt+0xb2a8>  // b.none
  40db6c:	ldrb	w0, [x1]
  40db70:	cmp	w0, #0x7d
  40db74:	b.eq	40dc88 <wcrtomb@plt+0xb3b8>  // b.none
  40db78:	tbnz	w6, #21, 40dd54 <wcrtomb@plt+0xb484>
  40db7c:	mov	w2, #0x5                   	// #5
  40db80:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40db84:	add	x1, x1, #0x148
  40db88:	mov	x0, #0x0                   	// #0
  40db8c:	bl	4027a0 <dcgettext@plt>
  40db90:	bl	402b2c <wcrtomb@plt+0x25c>
  40db94:	sub	w0, w3, #0x30
  40db98:	str	w0, [x19, #64]
  40db9c:	add	x1, x1, #0x1
  40dba0:	cmp	x4, x1
  40dba4:	b.eq	40db5c <wcrtomb@plt+0xb28c>  // b.none
  40dba8:	ldrb	w3, [x1]
  40dbac:	sub	w2, w3, #0x30
  40dbb0:	and	w2, w2, #0xff
  40dbb4:	cmp	w2, #0x9
  40dbb8:	b.hi	40dbdc <wcrtomb@plt+0xb30c>  // b.pmore
  40dbbc:	ldr	w0, [x19, #64]
  40dbc0:	tbnz	w0, #31, 40db94 <wcrtomb@plt+0xb2c4>
  40dbc4:	add	w0, w0, w0, lsl #2
  40dbc8:	add	w0, w3, w0, lsl #1
  40dbcc:	cmp	w0, w5
  40dbd0:	csel	w0, w0, w5, le
  40dbd4:	sub	w0, w0, #0x30
  40dbd8:	b	40db98 <wcrtomb@plt+0xb2c8>
  40dbdc:	cmp	x4, x1
  40dbe0:	b.eq	40db60 <wcrtomb@plt+0xb290>  // b.none
  40dbe4:	cmp	w3, #0x2c
  40dbe8:	b.eq	40dc0c <wcrtomb@plt+0xb33c>  // b.none
  40dbec:	ldr	w0, [x19, #64]
  40dbf0:	str	w0, [x19, #68]
  40dbf4:	cbz	w22, 40db6c <wcrtomb@plt+0xb29c>
  40dbf8:	ldrb	w0, [x1]
  40dbfc:	cmp	w0, #0x5c
  40dc00:	b.ne	40db78 <wcrtomb@plt+0xb2a8>  // b.any
  40dc04:	add	x1, x1, #0x1
  40dc08:	b	40db64 <wcrtomb@plt+0xb294>
  40dc0c:	ldr	w0, [x19, #64]
  40dc10:	tbnz	w0, #31, 40dc28 <wcrtomb@plt+0xb358>
  40dc14:	add	x1, x1, #0x1
  40dc18:	mov	w3, #0x8030                	// #32816
  40dc1c:	cmp	x4, x1
  40dc20:	b.ne	40dc44 <wcrtomb@plt+0xb374>  // b.any
  40dc24:	b	40db60 <wcrtomb@plt+0xb290>
  40dc28:	str	wzr, [x19, #64]
  40dc2c:	b	40dc14 <wcrtomb@plt+0xb344>
  40dc30:	sub	w0, w2, #0x30
  40dc34:	str	w0, [x19, #68]
  40dc38:	add	x1, x1, #0x1
  40dc3c:	cmp	x4, x1
  40dc40:	b.eq	40db60 <wcrtomb@plt+0xb290>  // b.none
  40dc44:	ldrb	w2, [x1]
  40dc48:	sub	w0, w2, #0x30
  40dc4c:	and	w0, w0, #0xff
  40dc50:	cmp	w0, #0x9
  40dc54:	b.hi	40dc78 <wcrtomb@plt+0xb3a8>  // b.pmore
  40dc58:	ldr	w0, [x19, #68]
  40dc5c:	tbnz	w0, #31, 40dc30 <wcrtomb@plt+0xb360>
  40dc60:	add	w0, w0, w0, lsl #2
  40dc64:	add	w0, w2, w0, lsl #1
  40dc68:	cmp	w0, w3
  40dc6c:	csel	w0, w0, w3, le
  40dc70:	sub	w0, w0, #0x30
  40dc74:	b	40dc34 <wcrtomb@plt+0xb364>
  40dc78:	cbz	w22, 40db64 <wcrtomb@plt+0xb294>
  40dc7c:	cmp	x4, x1
  40dc80:	b.ne	40dbf8 <wcrtomb@plt+0xb328>  // b.any
  40dc84:	b	40db78 <wcrtomb@plt+0xb2a8>
  40dc88:	ldr	w2, [x19, #64]
  40dc8c:	tbnz	w2, #31, 40db78 <wcrtomb@plt+0xb2a8>
  40dc90:	ldr	w0, [x19, #68]
  40dc94:	cmp	w0, #0x0
  40dc98:	ccmp	w2, w0, #0x4, ge  // ge = tcont
  40dc9c:	b.gt	40db78 <wcrtomb@plt+0xb2a8>
  40dca0:	mov	w2, #0x7fff                	// #32767
  40dca4:	cmp	w0, w2
  40dca8:	b.gt	40dccc <wcrtomb@plt+0xb3fc>
  40dcac:	add	x1, x1, #0x1
  40dcb0:	str	x1, [x19, #32]
  40dcb4:	sub	x1, x4, x1
  40dcb8:	str	x1, [x19, #40]
  40dcbc:	strb	wzr, [x19, #120]
  40dcc0:	mov	x0, #0x104                 	// #260
  40dcc4:	str	x0, [x19, #48]
  40dcc8:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40dccc:	mov	w2, #0x5                   	// #5
  40dcd0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40dcd4:	add	x1, x1, #0x160
  40dcd8:	mov	x0, #0x0                   	// #0
  40dcdc:	bl	4027a0 <dcgettext@plt>
  40dce0:	bl	402b2c <wcrtomb@plt+0x25c>
  40dce4:	ldr	x0, [x19, #448]
  40dce8:	tbnz	w0, #10, 40dd54 <wcrtomb@plt+0xb484>
  40dcec:	lsr	x0, x0, #15
  40dcf0:	eor	x0, x0, #0x1
  40dcf4:	and	w0, w0, #0x1
  40dcf8:	cmp	w0, w22
  40dcfc:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40dd00:	mov	w0, #0x1                   	// #1
  40dd04:	strb	w0, [x19, #120]
  40dd08:	mov	x0, #0x106                 	// #262
  40dd0c:	str	x0, [x19, #48]
  40dd10:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40dd14:	ldr	x0, [x19, #448]
  40dd18:	tst	x0, #0x400
  40dd1c:	ccmp	w22, #0x0, #0x0, eq  // eq = none
  40dd20:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40dd24:	tbz	w0, #11, 40dd54 <wcrtomb@plt+0xb484>
  40dd28:	mov	w0, #0x1                   	// #1
  40dd2c:	strb	w0, [x19, #120]
  40dd30:	mov	x0, #0x106                 	// #262
  40dd34:	str	x0, [x19, #48]
  40dd38:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40dd3c:	ldr	x0, [x19, #448]
  40dd40:	lsr	x0, x0, #13
  40dd44:	eor	x0, x0, #0x1
  40dd48:	and	w0, w0, #0x1
  40dd4c:	cmp	w0, w22
  40dd50:	b.eq	40dd94 <wcrtomb@plt+0xb4c4>  // b.none
  40dd54:	strb	wzr, [x19, #120]
  40dd58:	ldrb	w0, [x19, #1048]
  40dd5c:	cbnz	w0, 40e084 <wcrtomb@plt+0xb7b4>
  40dd60:	ldrb	w0, [x19, #457]
  40dd64:	cbz	w0, 40dd78 <wcrtomb@plt+0xb4a8>
  40dd68:	bl	402650 <__ctype_b_loc@plt>
  40dd6c:	ldr	x0, [x0]
  40dd70:	ldrh	w0, [x0, w20, sxtw #1]
  40dd74:	tbnz	w0, #10, 40e090 <wcrtomb@plt+0xb7c0>
  40dd78:	sxtw	x0, w20
  40dd7c:	str	x0, [x19, #48]
  40dd80:	ldp	x19, x20, [sp, #16]
  40dd84:	ldp	x21, x22, [sp, #32]
  40dd88:	ldp	x23, x24, [sp, #48]
  40dd8c:	ldp	x29, x30, [sp], #96
  40dd90:	ret
  40dd94:	ldr	x0, [x19, #56]
  40dd98:	add	x0, x0, #0x1
  40dd9c:	str	x0, [x19, #56]
  40dda0:	mov	w0, #0x1                   	// #1
  40dda4:	strb	w0, [x19, #120]
  40dda8:	mov	x0, #0x107                 	// #263
  40ddac:	str	x0, [x19, #48]
  40ddb0:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40ddb4:	ldr	x1, [x19, #448]
  40ddb8:	lsr	x0, x1, #13
  40ddbc:	eor	x0, x0, #0x1
  40ddc0:	and	w0, w0, #0x1
  40ddc4:	cmp	w0, w22
  40ddc8:	b.ne	40dd54 <wcrtomb@plt+0xb484>  // b.any
  40ddcc:	ldr	x0, [x19, #56]
  40ddd0:	cbnz	x0, 40ddd8 <wcrtomb@plt+0xb508>
  40ddd4:	tbnz	w1, #17, 40dd54 <wcrtomb@plt+0xb484>
  40ddd8:	sub	x0, x0, #0x1
  40dddc:	str	x0, [x19, #56]
  40dde0:	strb	wzr, [x19, #120]
  40dde4:	mov	x0, #0x108                 	// #264
  40dde8:	str	x0, [x19, #48]
  40ddec:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40ddf0:	cbnz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40ddf4:	ldr	x0, [x19, #24]
  40ddf8:	tbnz	x0, #63, 40de1c <wcrtomb@plt+0xb54c>
  40ddfc:	strb	wzr, [x19, #120]
  40de00:	ldrb	w1, [x19, #1048]
  40de04:	mov	x0, #0x10a                 	// #266
  40de08:	cbnz	w1, 40de14 <wcrtomb@plt+0xb544>
  40de0c:	ldr	x0, [x19, #24]
  40de10:	add	x0, x0, #0x114
  40de14:	str	x0, [x19, #48]
  40de18:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40de1c:	mov	x0, #0xffffffffffffffff    	// #-1
  40de20:	str	x0, [sp, #72]
  40de24:	str	x0, [sp, #80]
  40de28:	str	x0, [sp, #88]
  40de2c:	ldr	x2, [x19, #448]
  40de30:	tst	x2, #0x40
  40de34:	mov	x1, #0xfffffffffffffbff    	// #-1025
  40de38:	csel	x0, x1, x0, eq  // eq = none
  40de3c:	str	x0, [sp, #64]
  40de40:	tbnz	w2, #7, 40de60 <wcrtomb@plt+0xb590>
  40de44:	ldrb	w0, [x19, #1048]
  40de48:	cbz	w0, 40de9c <wcrtomb@plt+0xb5cc>
  40de4c:	mov	x0, #0x0                   	// #0
  40de50:	add	x2, x19, #0x51c
  40de54:	add	x4, sp, #0x40
  40de58:	mov	x6, #0x1                   	// #1
  40de5c:	b	40de78 <wcrtomb@plt+0xb5a8>
  40de60:	and	x0, x0, #0xfffffffffffffffe
  40de64:	str	x0, [sp, #64]
  40de68:	b	40de44 <wcrtomb@plt+0xb574>
  40de6c:	add	x0, x0, #0x1
  40de70:	cmp	x0, #0x100
  40de74:	b.eq	40de9c <wcrtomb@plt+0xb5cc>  // b.none
  40de78:	ldr	w1, [x2, x0, lsl #2]
  40de7c:	cmn	w1, #0x1
  40de80:	b.ne	40de6c <wcrtomb@plt+0xb59c>  // b.any
  40de84:	lsr	w3, w0, #6
  40de88:	lsl	x1, x6, x0
  40de8c:	ldr	x5, [x4, x3, lsl #3]
  40de90:	bic	x1, x5, x1
  40de94:	str	x1, [x4, x3, lsl #3]
  40de98:	b	40de6c <wcrtomb@plt+0xb59c>
  40de9c:	add	x1, sp, #0x40
  40dea0:	mov	x0, x19
  40dea4:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40dea8:	str	x0, [x19, #24]
  40deac:	b	40ddfc <wcrtomb@plt+0xb52c>
  40deb0:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40deb4:	ldr	x0, [x19, #448]
  40deb8:	and	x21, x0, #0x80000
  40debc:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40dec0:	ldrb	w0, [x19, #1048]
  40dec4:	cbz	w0, 40df10 <wcrtomb@plt+0xb640>
  40dec8:	cmp	w20, #0x73
  40decc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40ded0:	add	x0, x0, #0x180
  40ded4:	cinc	x0, x0, eq  // eq = none
  40ded8:	ldr	x22, [x19, #32]
  40dedc:	ldr	x21, [x19, #40]
  40dee0:	str	x0, [x19, #32]
  40dee4:	cset	x1, eq  // eq = none
  40dee8:	mov	x0, #0xb                   	// #11
  40deec:	sub	x0, x0, x1
  40def0:	str	x0, [x19, #40]
  40def4:	mov	x0, x19
  40def8:	bl	40d290 <wcrtomb@plt+0xa9c0>
  40defc:	str	x0, [x19, #48]
  40df00:	str	x22, [x19, #32]
  40df04:	str	x21, [x19, #40]
  40df08:	strb	wzr, [x19, #120]
  40df0c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40df10:	add	x0, sp, #0x40
  40df14:	bl	40a250 <wcrtomb@plt+0x7980>
  40df18:	bl	402650 <__ctype_b_loc@plt>
  40df1c:	mov	x22, x0
  40df20:	b	40df3c <wcrtomb@plt+0xb66c>
  40df24:	add	x1, sp, #0x40
  40df28:	mov	w0, w21
  40df2c:	bl	409f80 <wcrtomb@plt+0x76b0>
  40df30:	add	x21, x21, #0x1
  40df34:	cmp	x21, #0x100
  40df38:	b.eq	40df4c <wcrtomb@plt+0xb67c>  // b.none
  40df3c:	ldr	x1, [x22]
  40df40:	ldrh	w1, [x1, x21, lsl #1]
  40df44:	tbz	w1, #13, 40df30 <wcrtomb@plt+0xb660>
  40df48:	b	40df24 <wcrtomb@plt+0xb654>
  40df4c:	cmp	w20, #0x53
  40df50:	b.eq	40df70 <wcrtomb@plt+0xb6a0>  // b.none
  40df54:	strb	wzr, [x19, #120]
  40df58:	add	x1, sp, #0x40
  40df5c:	mov	x0, x19
  40df60:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40df64:	add	x0, x0, #0x114
  40df68:	str	x0, [x19, #48]
  40df6c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40df70:	add	x0, sp, #0x40
  40df74:	add	x2, sp, #0x60
  40df78:	ldr	x1, [x0]
  40df7c:	mvn	x1, x1
  40df80:	str	x1, [x0], #8
  40df84:	cmp	x0, x2
  40df88:	b.ne	40df78 <wcrtomb@plt+0xb6a8>  // b.any
  40df8c:	b	40df54 <wcrtomb@plt+0xb684>
  40df90:	cbz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40df94:	ldr	x0, [x19, #448]
  40df98:	and	x21, x0, #0x80000
  40df9c:	tbnz	w0, #19, 40dd54 <wcrtomb@plt+0xb484>
  40dfa0:	ldrb	w0, [x19, #1048]
  40dfa4:	cbz	w0, 40dff0 <wcrtomb@plt+0xb720>
  40dfa8:	cmp	w20, #0x77
  40dfac:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40dfb0:	add	x0, x0, #0x190
  40dfb4:	cinc	x0, x0, eq  // eq = none
  40dfb8:	ldr	x22, [x19, #32]
  40dfbc:	ldr	x21, [x19, #40]
  40dfc0:	str	x0, [x19, #32]
  40dfc4:	cset	x1, eq  // eq = none
  40dfc8:	mov	x0, #0xc                   	// #12
  40dfcc:	sub	x0, x0, x1
  40dfd0:	str	x0, [x19, #40]
  40dfd4:	mov	x0, x19
  40dfd8:	bl	40d290 <wcrtomb@plt+0xa9c0>
  40dfdc:	str	x0, [x19, #48]
  40dfe0:	str	x22, [x19, #32]
  40dfe4:	str	x21, [x19, #40]
  40dfe8:	strb	wzr, [x19, #120]
  40dfec:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40dff0:	add	x0, sp, #0x40
  40dff4:	bl	40a250 <wcrtomb@plt+0x7980>
  40dff8:	add	x22, x19, #0x1cc
  40dffc:	b	40e018 <wcrtomb@plt+0xb748>
  40e000:	add	x1, sp, #0x40
  40e004:	mov	w0, w21
  40e008:	bl	409f80 <wcrtomb@plt+0x76b0>
  40e00c:	add	x21, x21, #0x1
  40e010:	cmp	x21, #0x100
  40e014:	b.eq	40e028 <wcrtomb@plt+0xb758>  // b.none
  40e018:	ldrb	w0, [x22, x21]
  40e01c:	cmp	w0, #0x2
  40e020:	b.ne	40e00c <wcrtomb@plt+0xb73c>  // b.any
  40e024:	b	40e000 <wcrtomb@plt+0xb730>
  40e028:	cmp	w20, #0x57
  40e02c:	b.eq	40e04c <wcrtomb@plt+0xb77c>  // b.none
  40e030:	strb	wzr, [x19, #120]
  40e034:	add	x1, sp, #0x40
  40e038:	mov	x0, x19
  40e03c:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40e040:	add	x0, x0, #0x114
  40e044:	str	x0, [x19, #48]
  40e048:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40e04c:	add	x0, sp, #0x40
  40e050:	add	x2, sp, #0x60
  40e054:	ldr	x1, [x0]
  40e058:	mvn	x1, x1
  40e05c:	str	x1, [x0], #8
  40e060:	cmp	x0, x2
  40e064:	b.ne	40e054 <wcrtomb@plt+0xb784>  // b.any
  40e068:	b	40e030 <wcrtomb@plt+0xb760>
  40e06c:	cbnz	w22, 40dd54 <wcrtomb@plt+0xb484>
  40e070:	strb	wzr, [x19, #120]
  40e074:	mov	x0, x19
  40e078:	bl	40d290 <wcrtomb@plt+0xa9c0>
  40e07c:	str	x0, [x19, #48]
  40e080:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40e084:	mov	x0, #0x109                 	// #265
  40e088:	str	x0, [x19, #48]
  40e08c:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40e090:	add	x0, sp, #0x40
  40e094:	bl	40a250 <wcrtomb@plt+0x7980>
  40e098:	add	x1, sp, #0x40
  40e09c:	mov	w0, w20
  40e0a0:	bl	40a8c8 <wcrtomb@plt+0x7ff8>
  40e0a4:	add	x1, sp, #0x40
  40e0a8:	mov	x0, x19
  40e0ac:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40e0b0:	add	x0, x0, #0x114
  40e0b4:	str	x0, [x19, #48]
  40e0b8:	b	40dd80 <wcrtomb@plt+0xb4b0>
  40e0bc:	stp	x29, x30, [sp, #-32]!
  40e0c0:	mov	x29, sp
  40e0c4:	stp	x19, x20, [sp, #16]
  40e0c8:	mov	x19, x0
  40e0cc:	bl	40e5b0 <wcrtomb@plt+0xbce0>
  40e0d0:	ldr	x0, [x19, #128]
  40e0d4:	cmp	x0, #0x106
  40e0d8:	b.ne	40e10c <wcrtomb@plt+0xb83c>  // b.any
  40e0dc:	mov	x20, #0x106                 	// #262
  40e0e0:	mov	x0, x19
  40e0e4:	bl	40d87c <wcrtomb@plt+0xafac>
  40e0e8:	str	x0, [x19, #128]
  40e0ec:	mov	x0, x19
  40e0f0:	bl	40e5b0 <wcrtomb@plt+0xbce0>
  40e0f4:	mov	x1, x20
  40e0f8:	mov	x0, x19
  40e0fc:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e100:	ldr	x0, [x19, #128]
  40e104:	cmp	x0, #0x106
  40e108:	b.eq	40e0e0 <wcrtomb@plt+0xb810>  // b.none
  40e10c:	ldp	x19, x20, [sp, #16]
  40e110:	ldp	x29, x30, [sp], #32
  40e114:	ret
  40e118:	stp	x29, x30, [sp, #-208]!
  40e11c:	mov	x29, sp
  40e120:	stp	x19, x20, [sp, #16]
  40e124:	mov	x19, x0
  40e128:	ldr	x1, [x0, #128]
  40e12c:	cmp	x1, #0xff
  40e130:	mov	x0, #0x109                 	// #265
  40e134:	ccmp	x1, x0, #0x0, hi  // hi = pmore
  40e138:	b.le	40e34c <wcrtomb@plt+0xba7c>
  40e13c:	cmp	x1, #0x10a
  40e140:	b.ne	40e14c <wcrtomb@plt+0xb87c>  // b.any
  40e144:	ldrb	w0, [x19, #1050]
  40e148:	cbnz	w0, 40e188 <wcrtomb@plt+0xb8b8>
  40e14c:	mov	x0, x19
  40e150:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e154:	mov	x0, x19
  40e158:	bl	40d87c <wcrtomb@plt+0xafac>
  40e15c:	str	x0, [x19, #128]
  40e160:	ldr	x1, [x19, #128]
  40e164:	sub	x0, x1, #0x101
  40e168:	cmp	x0, #0x3
  40e16c:	b.hi	40e5a4 <wcrtomb@plt+0xbcd4>  // b.pmore
  40e170:	stp	x23, x24, [sp, #48]
  40e174:	str	x25, [sp, #64]
  40e178:	mov	x24, #0x101                 	// #257
  40e17c:	mov	x23, #0x105                 	// #261
  40e180:	mov	x25, #0x103                 	// #259
  40e184:	b	40e494 <wcrtomb@plt+0xbbc4>
  40e188:	stp	x21, x22, [sp, #32]
  40e18c:	ldr	x0, [x19, #200]
  40e190:	cbnz	x0, 40e200 <wcrtomb@plt+0xb930>
  40e194:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40e198:	add	x0, x0, #0x350
  40e19c:	add	x0, x0, #0x158
  40e1a0:	ld1	{v0.16b, v1.16b}, [x0]
  40e1a4:	add	x0, sp, #0x50
  40e1a8:	st1	{v0.16b, v1.16b}, [x0]
  40e1ac:	ldr	x0, [x19, #448]
  40e1b0:	tbz	w0, #6, 40e330 <wcrtomb@plt+0xba60>
  40e1b4:	tbnz	w0, #7, 40e33c <wcrtomb@plt+0xba6c>
  40e1b8:	add	x1, sp, #0x50
  40e1bc:	mov	x0, x19
  40e1c0:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40e1c4:	add	x0, x0, #0x114
  40e1c8:	str	x0, [x19, #200]
  40e1cc:	adrp	x20, 426000 <_obstack_memory_used@@Base+0xf218>
  40e1d0:	add	x20, x20, #0x350
  40e1d4:	add	x20, x20, #0x178
  40e1d8:	add	x21, x19, #0xd0
  40e1dc:	add	x22, x19, #0x110
  40e1e0:	mov	x1, x20
  40e1e4:	mov	x0, x19
  40e1e8:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40e1ec:	add	x0, x0, #0x114
  40e1f0:	str	x0, [x21], #8
  40e1f4:	add	x20, x20, #0x20
  40e1f8:	cmp	x22, x21
  40e1fc:	b.ne	40e1e0 <wcrtomb@plt+0xb910>  // b.any
  40e200:	ldr	x1, [x19, #200]
  40e204:	mov	x0, x19
  40e208:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e20c:	ldr	x1, [x19, #208]
  40e210:	mov	x0, x19
  40e214:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e218:	mov	x1, #0xe0                  	// #224
  40e21c:	mov	x0, x19
  40e220:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e224:	ldr	x1, [x19, #224]
  40e228:	mov	x0, x19
  40e22c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e230:	mov	x1, #0x105                 	// #261
  40e234:	mov	x0, x19
  40e238:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e23c:	mov	x1, #0x106                 	// #262
  40e240:	mov	x0, x19
  40e244:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e248:	mov	x1, #0xed                  	// #237
  40e24c:	mov	x0, x19
  40e250:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e254:	ldr	x1, [x19, #240]
  40e258:	mov	x0, x19
  40e25c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e260:	mov	x1, #0x105                 	// #261
  40e264:	mov	x0, x19
  40e268:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e26c:	mov	x1, #0x106                 	// #262
  40e270:	mov	x0, x19
  40e274:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e278:	ldr	x1, [x19, #232]
  40e27c:	mov	x0, x19
  40e280:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e284:	mov	x1, #0xf0                  	// #240
  40e288:	mov	x0, x19
  40e28c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e290:	ldr	x1, [x19, #248]
  40e294:	mov	x0, x19
  40e298:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e29c:	mov	x1, #0x105                 	// #261
  40e2a0:	mov	x0, x19
  40e2a4:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2a8:	mov	x1, #0x106                 	// #262
  40e2ac:	mov	x0, x19
  40e2b0:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2b4:	mov	x1, #0xf4                  	// #244
  40e2b8:	mov	x0, x19
  40e2bc:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2c0:	ldr	x1, [x19, #264]
  40e2c4:	mov	x0, x19
  40e2c8:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2cc:	mov	x1, #0x105                 	// #261
  40e2d0:	mov	x0, x19
  40e2d4:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2d8:	mov	x1, #0x106                 	// #262
  40e2dc:	mov	x0, x19
  40e2e0:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2e4:	ldr	x1, [x19, #256]
  40e2e8:	mov	x0, x19
  40e2ec:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e2f0:	mov	w20, #0x3                   	// #3
  40e2f4:	mov	x22, #0x105                 	// #261
  40e2f8:	mov	x21, #0x106                 	// #262
  40e2fc:	ldr	x1, [x19, #216]
  40e300:	mov	x0, x19
  40e304:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e308:	mov	x1, x22
  40e30c:	mov	x0, x19
  40e310:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e314:	mov	x1, x21
  40e318:	mov	x0, x19
  40e31c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e320:	subs	w20, w20, #0x1
  40e324:	b.ne	40e2fc <wcrtomb@plt+0xba2c>  // b.any
  40e328:	ldp	x21, x22, [sp, #32]
  40e32c:	b	40e154 <wcrtomb@plt+0xb884>
  40e330:	mov	x1, #0xfffffffffffffbff    	// #-1025
  40e334:	str	x1, [sp, #80]
  40e338:	b	40e1b4 <wcrtomb@plt+0xb8e4>
  40e33c:	ldr	x0, [sp, #80]
  40e340:	and	x0, x0, #0xfffffffffffffffe
  40e344:	str	x0, [sp, #80]
  40e348:	b	40e1b8 <wcrtomb@plt+0xb8e8>
  40e34c:	cmp	x1, #0x109
  40e350:	b.eq	40e36c <wcrtomb@plt+0xba9c>  // b.none
  40e354:	cmp	x1, #0x107
  40e358:	b.eq	40e3fc <wcrtomb@plt+0xbb2c>  // b.none
  40e35c:	mov	x1, #0x100                 	// #256
  40e360:	mov	x0, x19
  40e364:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e368:	b	40e160 <wcrtomb@plt+0xb890>
  40e36c:	ldr	w1, [x19, #72]
  40e370:	cmn	w1, #0x1
  40e374:	b.eq	40e398 <wcrtomb@plt+0xbac8>  // b.none
  40e378:	mov	x0, x19
  40e37c:	bl	40a958 <wcrtomb@plt+0x8088>
  40e380:	ldrb	w0, [x19, #457]
  40e384:	cbnz	w0, 40e3a8 <wcrtomb@plt+0xbad8>
  40e388:	mov	x0, x19
  40e38c:	bl	40d87c <wcrtomb@plt+0xafac>
  40e390:	str	x0, [x19, #128]
  40e394:	b	40e160 <wcrtomb@plt+0xb890>
  40e398:	mov	x1, #0x112                 	// #274
  40e39c:	mov	x0, x19
  40e3a0:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e3a4:	b	40e388 <wcrtomb@plt+0xbab8>
  40e3a8:	add	x1, sp, #0x50
  40e3ac:	ldr	w0, [x19, #72]
  40e3b0:	bl	40f8e4 <wcrtomb@plt+0xd014>
  40e3b4:	cmp	w0, #0x0
  40e3b8:	b.le	40e388 <wcrtomb@plt+0xbab8>
  40e3bc:	stp	x21, x22, [sp, #32]
  40e3c0:	add	x21, sp, #0x50
  40e3c4:	sub	w0, w0, #0x1
  40e3c8:	add	x20, x21, #0x4
  40e3cc:	add	x20, x20, x0, lsl #2
  40e3d0:	mov	x22, #0x106                 	// #262
  40e3d4:	ldr	w1, [x21], #4
  40e3d8:	mov	x0, x19
  40e3dc:	bl	40a958 <wcrtomb@plt+0x8088>
  40e3e0:	mov	x1, x22
  40e3e4:	mov	x0, x19
  40e3e8:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e3ec:	cmp	x20, x21
  40e3f0:	b.ne	40e3d4 <wcrtomb@plt+0xbb04>  // b.any
  40e3f4:	ldp	x21, x22, [sp, #32]
  40e3f8:	b	40e388 <wcrtomb@plt+0xbab8>
  40e3fc:	mov	x0, x19
  40e400:	bl	40d87c <wcrtomb@plt+0xafac>
  40e404:	str	x0, [x19, #128]
  40e408:	mov	x0, x19
  40e40c:	bl	40e0bc <wcrtomb@plt+0xb7ec>
  40e410:	ldr	x0, [x19, #128]
  40e414:	cmp	x0, #0x108
  40e418:	b.ne	40e42c <wcrtomb@plt+0xbb5c>  // b.any
  40e41c:	mov	x0, x19
  40e420:	bl	40d87c <wcrtomb@plt+0xafac>
  40e424:	str	x0, [x19, #128]
  40e428:	b	40e160 <wcrtomb@plt+0xb890>
  40e42c:	stp	x21, x22, [sp, #32]
  40e430:	stp	x23, x24, [sp, #48]
  40e434:	str	x25, [sp, #64]
  40e438:	mov	w2, #0x5                   	// #5
  40e43c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40e440:	add	x1, x1, #0x1a0
  40e444:	mov	x0, #0x0                   	// #0
  40e448:	bl	4027a0 <dcgettext@plt>
  40e44c:	bl	402b2c <wcrtomb@plt+0x25c>
  40e450:	ldr	x0, [x19, #64]
  40e454:	cbnz	x0, 40e4b4 <wcrtomb@plt+0xbbe4>
  40e458:	ldr	x20, [x19, #152]
  40e45c:	mov	x1, x20
  40e460:	mov	x0, x19
  40e464:	bl	409f9c <wcrtomb@plt+0x76cc>
  40e468:	sub	x20, x20, x0
  40e46c:	str	x20, [x19, #152]
  40e470:	mov	x0, x19
  40e474:	bl	40d87c <wcrtomb@plt+0xafac>
  40e478:	str	x0, [x19, #128]
  40e47c:	mov	x0, x19
  40e480:	bl	40e118 <wcrtomb@plt+0xb848>
  40e484:	ldr	x1, [x19, #128]
  40e488:	sub	x0, x1, #0x101
  40e48c:	cmp	x0, #0x3
  40e490:	b.hi	40e59c <wcrtomb@plt+0xbccc>  // b.pmore
  40e494:	cmp	x1, #0x104
  40e498:	b.eq	40e450 <wcrtomb@plt+0xbb80>  // b.none
  40e49c:	mov	x0, x19
  40e4a0:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e4a4:	mov	x0, x19
  40e4a8:	bl	40d87c <wcrtomb@plt+0xafac>
  40e4ac:	str	x0, [x19, #128]
  40e4b0:	b	40e484 <wcrtomb@plt+0xbbb4>
  40e4b4:	stp	x21, x22, [sp, #32]
  40e4b8:	ldr	x22, [x19, #152]
  40e4bc:	mov	x1, x22
  40e4c0:	mov	x0, x19
  40e4c4:	bl	409f9c <wcrtomb@plt+0x76cc>
  40e4c8:	mov	x21, x0
  40e4cc:	sub	x22, x22, x0
  40e4d0:	ldr	w0, [x19, #68]
  40e4d4:	tbnz	w0, #31, 40e574 <wcrtomb@plt+0xbca4>
  40e4d8:	ldr	w0, [x19, #64]
  40e4dc:	cbz	w0, 40e584 <wcrtomb@plt+0xbcb4>
  40e4e0:	ldr	w0, [x19, #64]
  40e4e4:	cmp	w0, #0x1
  40e4e8:	b.le	40e594 <wcrtomb@plt+0xbcc4>
  40e4ec:	mov	w20, #0x1                   	// #1
  40e4f0:	mov	x2, x21
  40e4f4:	mov	x1, x22
  40e4f8:	mov	x0, x19
  40e4fc:	bl	40a6a8 <wcrtomb@plt+0x7dd8>
  40e500:	mov	x1, x23
  40e504:	mov	x0, x19
  40e508:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e50c:	add	w20, w20, #0x1
  40e510:	ldr	w0, [x19, #64]
  40e514:	cmp	w0, w20
  40e518:	b.gt	40e4f0 <wcrtomb@plt+0xbc20>
  40e51c:	ldr	w0, [x19, #68]
  40e520:	cmp	w0, w20
  40e524:	b.le	40e560 <wcrtomb@plt+0xbc90>
  40e528:	mov	x2, x21
  40e52c:	mov	x1, x22
  40e530:	mov	x0, x19
  40e534:	bl	40a6a8 <wcrtomb@plt+0x7dd8>
  40e538:	mov	x1, x24
  40e53c:	mov	x0, x19
  40e540:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e544:	mov	x1, x23
  40e548:	mov	x0, x19
  40e54c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e550:	add	w20, w20, #0x1
  40e554:	ldr	w0, [x19, #68]
  40e558:	cmp	w0, w20
  40e55c:	b.gt	40e528 <wcrtomb@plt+0xbc58>
  40e560:	mov	x0, x19
  40e564:	bl	40d87c <wcrtomb@plt+0xafac>
  40e568:	str	x0, [x19, #128]
  40e56c:	ldp	x21, x22, [sp, #32]
  40e570:	b	40e484 <wcrtomb@plt+0xbbb4>
  40e574:	mov	x1, x25
  40e578:	mov	x0, x19
  40e57c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e580:	b	40e4d8 <wcrtomb@plt+0xbc08>
  40e584:	mov	x1, x24
  40e588:	mov	x0, x19
  40e58c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e590:	b	40e4e0 <wcrtomb@plt+0xbc10>
  40e594:	mov	w20, #0x1                   	// #1
  40e598:	b	40e51c <wcrtomb@plt+0xbc4c>
  40e59c:	ldp	x23, x24, [sp, #48]
  40e5a0:	ldr	x25, [sp, #64]
  40e5a4:	ldp	x19, x20, [sp, #16]
  40e5a8:	ldp	x29, x30, [sp], #208
  40e5ac:	ret
  40e5b0:	stp	x29, x30, [sp, #-32]!
  40e5b4:	mov	x29, sp
  40e5b8:	stp	x19, x20, [sp, #16]
  40e5bc:	mov	x19, x0
  40e5c0:	bl	40e118 <wcrtomb@plt+0xb848>
  40e5c4:	ldr	x0, [x19, #128]
  40e5c8:	sub	x1, x0, #0x106
  40e5cc:	tst	x1, #0xfffffffffffffffd
  40e5d0:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  40e5d4:	b.lt	40e604 <wcrtomb@plt+0xbd34>  // b.tstop
  40e5d8:	mov	x20, #0x105                 	// #261
  40e5dc:	mov	x0, x19
  40e5e0:	bl	40e118 <wcrtomb@plt+0xb848>
  40e5e4:	mov	x1, x20
  40e5e8:	mov	x0, x19
  40e5ec:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e5f0:	ldr	x0, [x19, #128]
  40e5f4:	sub	x1, x0, #0x106
  40e5f8:	tst	x1, #0xfffffffffffffffd
  40e5fc:	ccmp	x0, #0x0, #0x1, ne  // ne = any
  40e600:	b.ge	40e5dc <wcrtomb@plt+0xbd0c>  // b.tcont
  40e604:	ldp	x19, x20, [sp, #16]
  40e608:	ldp	x29, x30, [sp], #32
  40e60c:	ret
  40e610:	stp	x29, x30, [sp, #-32]!
  40e614:	mov	x29, sp
  40e618:	str	x19, [sp, #16]
  40e61c:	str	x0, [x2, #32]
  40e620:	str	x1, [x2, #40]
  40e624:	mov	x0, #0xffffffffffffffff    	// #-1
  40e628:	str	x0, [x2, #48]
  40e62c:	mov	w0, #0x1                   	// #1
  40e630:	strb	w0, [x2, #120]
  40e634:	ldrb	w0, [x2, #456]
  40e638:	cbz	w0, 40e6ac <wcrtomb@plt+0xbddc>
  40e63c:	mov	x19, x2
  40e640:	ldr	x0, [x2, #184]
  40e644:	cbz	x0, 40e6c4 <wcrtomb@plt+0xbdf4>
  40e648:	mov	x0, x19
  40e64c:	bl	40d87c <wcrtomb@plt+0xafac>
  40e650:	str	x0, [x19, #128]
  40e654:	ldr	x0, [x19, #168]
  40e658:	str	x0, [x19, #136]
  40e65c:	mov	x0, x19
  40e660:	bl	40e0bc <wcrtomb@plt+0xb7ec>
  40e664:	ldr	x0, [x19, #128]
  40e668:	cmn	x0, #0x1
  40e66c:	b.ne	40e6d4 <wcrtomb@plt+0xbe04>  // b.any
  40e670:	ldr	x1, [x19, #184]
  40e674:	mvn	x1, x1
  40e678:	mov	x0, x19
  40e67c:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e680:	mov	x1, #0x105                 	// #261
  40e684:	mov	x0, x19
  40e688:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e68c:	ldr	x0, [x19, #184]
  40e690:	cbnz	x0, 40e6ec <wcrtomb@plt+0xbe1c>
  40e694:	ldr	x0, [x19, #184]
  40e698:	add	x0, x0, #0x1
  40e69c:	str	x0, [x19, #184]
  40e6a0:	ldr	x19, [sp, #16]
  40e6a4:	ldp	x29, x30, [sp], #32
  40e6a8:	ret
  40e6ac:	mov	w2, #0x5                   	// #5
  40e6b0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40e6b4:	add	x1, x1, #0x1b0
  40e6b8:	mov	x0, #0x0                   	// #0
  40e6bc:	bl	4027a0 <dcgettext@plt>
  40e6c0:	bl	402b2c <wcrtomb@plt+0x25c>
  40e6c4:	mov	x1, #0x10b                 	// #267
  40e6c8:	mov	x0, x2
  40e6cc:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e6d0:	b	40e648 <wcrtomb@plt+0xbd78>
  40e6d4:	mov	w2, #0x5                   	// #5
  40e6d8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40e6dc:	add	x1, x1, #0x1c8
  40e6e0:	mov	x0, #0x0                   	// #0
  40e6e4:	bl	4027a0 <dcgettext@plt>
  40e6e8:	bl	402b2c <wcrtomb@plt+0x25c>
  40e6ec:	mov	x1, #0x106                 	// #262
  40e6f0:	mov	x0, x19
  40e6f4:	bl	40aa34 <wcrtomb@plt+0x8164>
  40e6f8:	b	40e694 <wcrtomb@plt+0xbdc4>
  40e6fc:	stp	x29, x30, [sp, #-16]!
  40e700:	mov	x29, sp
  40e704:	ldr	x6, [x0, #1040]
  40e708:	blr	x6
  40e70c:	ldp	x29, x30, [sp], #16
  40e710:	ret
  40e714:	ldr	x0, [x0, #288]
  40e718:	ret
  40e71c:	ldrb	w0, [x0, #192]
  40e720:	ret
  40e724:	stp	x29, x30, [sp, #-48]!
  40e728:	mov	x29, sp
  40e72c:	stp	x19, x20, [sp, #16]
  40e730:	str	x21, [sp, #32]
  40e734:	mov	x19, x0
  40e738:	ldr	x0, [x0]
  40e73c:	bl	402660 <free@plt>
  40e740:	ldr	x0, [x19, #144]
  40e744:	bl	402660 <free@plt>
  40e748:	ldrb	w0, [x19, #1048]
  40e74c:	cbnz	w0, 40e87c <wcrtomb@plt+0xbfac>
  40e750:	ldr	x0, [x19, #336]
  40e754:	bl	402660 <free@plt>
  40e758:	ldr	x0, [x19, #344]
  40e75c:	bl	402660 <free@plt>
  40e760:	ldr	x0, [x19, #304]
  40e764:	cmp	x0, #0x0
  40e768:	b.le	40e7a8 <wcrtomb@plt+0xbed8>
  40e76c:	mov	x20, #0x0                   	// #0
  40e770:	mov	x21, #0x0                   	// #0
  40e774:	ldr	x0, [x19, #296]
  40e778:	add	x0, x0, x20
  40e77c:	ldr	x0, [x0, #8]
  40e780:	bl	402660 <free@plt>
  40e784:	ldr	x0, [x19, #296]
  40e788:	add	x0, x0, x20
  40e78c:	ldr	x0, [x0, #48]
  40e790:	bl	402660 <free@plt>
  40e794:	add	x21, x21, #0x1
  40e798:	add	x20, x20, #0x50
  40e79c:	ldr	x0, [x19, #304]
  40e7a0:	cmp	x0, x21
  40e7a4:	b.gt	40e774 <wcrtomb@plt+0xbea4>
  40e7a8:	ldr	x0, [x19, #296]
  40e7ac:	bl	402660 <free@plt>
  40e7b0:	ldr	x0, [x19, #320]
  40e7b4:	cbz	x0, 40e7f4 <wcrtomb@plt+0xbf24>
  40e7b8:	ldr	x0, [x19, #152]
  40e7bc:	cmp	x0, #0x0
  40e7c0:	b.le	40e7ec <wcrtomb@plt+0xbf1c>
  40e7c4:	mov	x21, #0x0                   	// #0
  40e7c8:	mov	x20, #0x0                   	// #0
  40e7cc:	ldr	x0, [x19, #320]
  40e7d0:	ldr	x0, [x0, x21]
  40e7d4:	bl	402660 <free@plt>
  40e7d8:	add	x20, x20, #0x1
  40e7dc:	add	x21, x21, #0x18
  40e7e0:	ldr	x0, [x19, #152]
  40e7e4:	cmp	x0, x20
  40e7e8:	b.gt	40e7cc <wcrtomb@plt+0xbefc>
  40e7ec:	ldr	x0, [x19, #320]
  40e7f0:	bl	402660 <free@plt>
  40e7f4:	ldr	x0, [x19, #368]
  40e7f8:	cbz	x0, 40e858 <wcrtomb@plt+0xbf88>
  40e7fc:	ldr	x0, [x19, #352]
  40e800:	cmp	x0, #0x0
  40e804:	b.le	40e834 <wcrtomb@plt+0xbf64>
  40e808:	mov	x20, #0x0                   	// #0
  40e80c:	ldr	x0, [x19, #368]
  40e810:	ldr	x0, [x0, x20, lsl #3]
  40e814:	bl	402660 <free@plt>
  40e818:	ldr	x0, [x19, #376]
  40e81c:	ldr	x0, [x0, x20, lsl #3]
  40e820:	bl	402660 <free@plt>
  40e824:	add	x20, x20, #0x1
  40e828:	ldr	x0, [x19, #352]
  40e82c:	cmp	x0, x20
  40e830:	b.gt	40e80c <wcrtomb@plt+0xbf3c>
  40e834:	ldr	x0, [x19, #368]
  40e838:	sub	x0, x0, #0x10
  40e83c:	bl	402660 <free@plt>
  40e840:	ldr	x0, [x19, #376]
  40e844:	bl	402660 <free@plt>
  40e848:	ldr	x0, [x19, #392]
  40e84c:	bl	402660 <free@plt>
  40e850:	ldr	x0, [x19, #384]
  40e854:	bl	402660 <free@plt>
  40e858:	ldr	x0, [x19, #288]
  40e85c:	cbz	x0, 40e86c <wcrtomb@plt+0xbf9c>
  40e860:	bl	40e724 <wcrtomb@plt+0xbe54>
  40e864:	ldr	x0, [x19, #288]
  40e868:	bl	402660 <free@plt>
  40e86c:	ldp	x19, x20, [sp, #16]
  40e870:	ldr	x21, [sp, #32]
  40e874:	ldp	x29, x30, [sp], #48
  40e878:	ret
  40e87c:	mov	x0, x19
  40e880:	bl	40ada0 <wcrtomb@plt+0x84d0>
  40e884:	b	40e750 <wcrtomb@plt+0xbe80>
  40e888:	stp	x29, x30, [sp, #-160]!
  40e88c:	mov	x29, sp
  40e890:	stp	x23, x24, [sp, #48]
  40e894:	stp	x27, x28, [sp, #80]
  40e898:	mov	x28, x0
  40e89c:	ldrb	w0, [x0, #1048]
  40e8a0:	eor	w0, w0, #0x1
  40e8a4:	ldrb	w1, [x28, #457]
  40e8a8:	and	w0, w0, w1
  40e8ac:	and	w0, w0, #0xff
  40e8b0:	str	w0, [sp, #148]
  40e8b4:	ldr	x23, [x28, #152]
  40e8b8:	cmp	x23, #0x2
  40e8bc:	b.le	40f1cc <wcrtomb@plt+0xc8fc>
  40e8c0:	stp	x19, x20, [sp, #16]
  40e8c4:	stp	x21, x22, [sp, #32]
  40e8c8:	stp	x25, x26, [sp, #64]
  40e8cc:	mov	x21, #0x0                   	// #0
  40e8d0:	str	wzr, [sp, #156]
  40e8d4:	str	wzr, [sp, #152]
  40e8d8:	mov	x26, #0x1                   	// #1
  40e8dc:	mov	x0, #0x8                   	// #8
  40e8e0:	str	x0, [sp, #120]
  40e8e4:	b	40eb8c <wcrtomb@plt+0xc2bc>
  40e8e8:	cmn	x19, #0x1
  40e8ec:	b.eq	40ed3c <wcrtomb@plt+0xc46c>  // b.none
  40e8f0:	cbnz	x19, 40f00c <wcrtomb@plt+0xc73c>
  40e8f4:	mov	x23, #0x0                   	// #0
  40e8f8:	cbz	x21, 40f1e4 <wcrtomb@plt+0xc914>
  40e8fc:	mov	x0, x21
  40e900:	ldr	x21, [x21, #40]
  40e904:	bl	40ae40 <wcrtomb@plt+0x8570>
  40e908:	cbnz	x21, 40e8fc <wcrtomb@plt+0xc02c>
  40e90c:	ldp	x19, x20, [sp, #16]
  40e910:	ldp	x21, x22, [sp, #32]
  40e914:	ldp	x25, x26, [sp, #64]
  40e918:	mov	x0, x23
  40e91c:	ldp	x23, x24, [sp, #48]
  40e920:	ldp	x27, x28, [sp, #80]
  40e924:	ldp	x29, x30, [sp], #160
  40e928:	ret
  40e92c:	cmp	x19, #0x10c
  40e930:	b.eq	40eb54 <wcrtomb@plt+0xc284>  // b.none
  40e934:	b.le	40e968 <wcrtomb@plt+0xc098>
  40e938:	cmp	x19, #0x10d
  40e93c:	b.ne	40eaf0 <wcrtomb@plt+0xc220>  // b.any
  40e940:	mov	x1, #0x2                   	// #2
  40e944:	mov	x0, x21
  40e948:	bl	40b174 <wcrtomb@plt+0x88a4>
  40e94c:	mov	x21, x0
  40e950:	mov	w0, #0x1                   	// #1
  40e954:	strb	w0, [x21, #33]
  40e958:	mov	x19, x26
  40e95c:	mov	w0, #0x1                   	// #1
  40e960:	str	w0, [sp, #156]
  40e964:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40e968:	cmp	x19, #0x106
  40e96c:	b.ne	40eac8 <wcrtomb@plt+0xc1f8>  // b.any
  40e970:	ldr	x20, [x21, #40]
  40e974:	str	x20, [sp, #128]
  40e978:	ldr	x19, [x20, #24]
  40e97c:	ldr	x1, [x21, #24]
  40e980:	mov	x0, x19
  40e984:	bl	402640 <strcmp@plt>
  40e988:	cbnz	w0, 40ec30 <wcrtomb@plt+0xc360>
  40e98c:	ldrb	w0, [x20, #32]
  40e990:	ldrb	w1, [x21, #32]
  40e994:	and	w0, w0, w1
  40e998:	strb	w0, [x20, #32]
  40e99c:	ldrb	w0, [x20, #33]
  40e9a0:	ldrb	w1, [x21, #33]
  40e9a4:	and	w0, w0, w1
  40e9a8:	strb	w0, [x20, #33]
  40e9ac:	ldr	x0, [sp, #128]
  40e9b0:	ldr	x2, [x0, #8]
  40e9b4:	ldrb	w0, [x2]
  40e9b8:	cbz	w0, 40e9d8 <wcrtomb@plt+0xc108>
  40e9bc:	ldr	x1, [x21, #8]
  40e9c0:	ldrb	w3, [x1]
  40e9c4:	cmp	w3, w0
  40e9c8:	b.ne	40e9d8 <wcrtomb@plt+0xc108>  // b.any
  40e9cc:	ldrb	w0, [x2, #1]!
  40e9d0:	add	x1, x1, #0x1
  40e9d4:	cbnz	w0, 40e9c0 <wcrtomb@plt+0xc0f0>
  40e9d8:	strb	wzr, [x2]
  40e9dc:	ldr	x0, [sp, #128]
  40e9e0:	ldr	x20, [x0, #16]
  40e9e4:	mov	x0, x20
  40e9e8:	bl	4022c0 <strlen@plt>
  40e9ec:	mov	x19, x0
  40e9f0:	ldr	x22, [x21, #16]
  40e9f4:	mov	x0, x22
  40e9f8:	bl	4022c0 <strlen@plt>
  40e9fc:	cmp	x19, x0
  40ea00:	csel	x3, x19, x0, le
  40ea04:	cmp	x3, #0x0
  40ea08:	b.le	40ec58 <wcrtomb@plt+0xc388>
  40ea0c:	mov	x1, #0x0                   	// #0
  40ea10:	mov	x2, #0x0                   	// #0
  40ea14:	sub	x4, x19, #0x1
  40ea18:	add	x20, x20, x4
  40ea1c:	sub	x0, x0, #0x1
  40ea20:	add	x22, x22, x0
  40ea24:	ldrb	w4, [x20, x1]
  40ea28:	ldrb	w0, [x22, x1]
  40ea2c:	cmp	w4, w0
  40ea30:	b.ne	40ec44 <wcrtomb@plt+0xc374>  // b.any
  40ea34:	add	x2, x2, #0x1
  40ea38:	sub	x1, x1, #0x1
  40ea3c:	cmp	x3, x2
  40ea40:	b.ne	40ea24 <wcrtomb@plt+0xc154>  // b.any
  40ea44:	mov	x1, #0x0                   	// #0
  40ea48:	sub	x19, x19, x3
  40ea4c:	ldr	x0, [sp, #128]
  40ea50:	ldr	x2, [x0, #16]
  40ea54:	add	x4, x2, x1
  40ea58:	ldrb	w4, [x4, x19]
  40ea5c:	strb	w4, [x2, x1]
  40ea60:	add	x1, x1, #0x1
  40ea64:	cmp	x3, x1
  40ea68:	b.ne	40ea4c <wcrtomb@plt+0xc17c>  // b.any
  40ea6c:	ldr	x1, [sp, #128]
  40ea70:	ldr	x0, [x1, #16]
  40ea74:	strb	wzr, [x0, x3]
  40ea78:	ldr	x27, [x1]
  40ea7c:	ldr	x0, [x21]
  40ea80:	str	x0, [sp, #136]
  40ea84:	mov	x0, #0x8                   	// #8
  40ea88:	bl	4141ec <wcrtomb@plt+0x1191c>
  40ea8c:	str	x0, [sp, #104]
  40ea90:	ldr	x0, [x27]
  40ea94:	cbnz	x0, 40ed2c <wcrtomb@plt+0xc45c>
  40ea98:	ldr	x20, [sp, #128]
  40ea9c:	ldr	x0, [x20]
  40eaa0:	bl	40ae10 <wcrtomb@plt+0x8540>
  40eaa4:	ldr	x0, [x20]
  40eaa8:	bl	402660 <free@plt>
  40eaac:	ldr	x0, [sp, #104]
  40eab0:	str	x0, [x20]
  40eab4:	mov	x0, x21
  40eab8:	bl	40ae40 <wcrtomb@plt+0x8570>
  40eabc:	mov	x19, x26
  40eac0:	mov	x21, x20
  40eac4:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40eac8:	cmp	x19, #0x108
  40eacc:	b.le	40ebd4 <wcrtomb@plt+0xc304>
  40ead0:	cmp	x19, #0x10a
  40ead4:	b.ne	40f00c <wcrtomb@plt+0xc73c>  // b.any
  40ead8:	mov	x1, #0x2                   	// #2
  40eadc:	mov	x0, x21
  40eae0:	bl	40b174 <wcrtomb@plt+0x88a4>
  40eae4:	mov	x21, x0
  40eae8:	mov	x19, x26
  40eaec:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40eaf0:	sub	x0, x19, #0x10e
  40eaf4:	cmp	x0, #0x5
  40eaf8:	b.ls	40ead8 <wcrtomb@plt+0xc208>  // b.plast
  40eafc:	cmp	x19, #0x113
  40eb00:	b.le	40f00c <wcrtomb@plt+0xc73c>
  40eb04:	mov	x27, #0xffffffffffffdd80    	// #-8832
  40eb08:	add	x19, x27, x19, lsl #5
  40eb0c:	ldr	x27, [x28]
  40eb10:	add	x27, x27, x19
  40eb14:	mov	w20, #0x0                   	// #0
  40eb18:	str	w20, [sp, #144]
  40eb1c:	mov	x1, x27
  40eb20:	mov	w0, w20
  40eb24:	bl	409f6c <wcrtomb@plt+0x769c>
  40eb28:	and	w0, w0, #0xff
  40eb2c:	cbnz	w0, 40ef30 <wcrtomb@plt+0xc660>
  40eb30:	add	w20, w20, #0x1
  40eb34:	cmp	w20, #0x100
  40eb38:	b.ne	40eb18 <wcrtomb@plt+0xc248>  // b.any
  40eb3c:	mov	x1, #0x2                   	// #2
  40eb40:	mov	x0, x21
  40eb44:	bl	40b174 <wcrtomb@plt+0x88a4>
  40eb48:	mov	x21, x0
  40eb4c:	mov	x19, x26
  40eb50:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40eb54:	mov	x1, #0x2                   	// #2
  40eb58:	mov	x0, x21
  40eb5c:	bl	40b174 <wcrtomb@plt+0x88a4>
  40eb60:	mov	x21, x0
  40eb64:	mov	w0, #0x1                   	// #1
  40eb68:	strb	w0, [x21, #32]
  40eb6c:	mov	x19, x26
  40eb70:	mov	w0, #0x1                   	// #1
  40eb74:	str	w0, [sp, #152]
  40eb78:	add	x26, x19, #0x1
  40eb7c:	ldr	x23, [x28, #152]
  40eb80:	add	x19, x19, #0x2
  40eb84:	cmp	x19, x23
  40eb88:	b.ge	40f194 <wcrtomb@plt+0xc8c4>  // b.tcont
  40eb8c:	ldr	x24, [x28, #144]
  40eb90:	str	x26, [sp, #104]
  40eb94:	lsl	x22, x26, #3
  40eb98:	ldr	x19, [x24, x26, lsl #3]
  40eb9c:	cmp	x19, #0x105
  40eba0:	b.eq	40ee04 <wcrtomb@plt+0xc534>  // b.none
  40eba4:	b.gt	40e92c <wcrtomb@plt+0xc05c>
  40eba8:	cmp	x19, #0x100
  40ebac:	b.eq	40ead8 <wcrtomb@plt+0xc208>  // b.none
  40ebb0:	b.le	40e8e8 <wcrtomb@plt+0xc018>
  40ebb4:	cmp	x19, #0x102
  40ebb8:	b.le	40ebf8 <wcrtomb@plt+0xc328>
  40ebbc:	cmp	x19, #0x103
  40ebc0:	b.ne	40f00c <wcrtomb@plt+0xc73c>  // b.any
  40ebc4:	ldr	x0, [x21, #24]
  40ebc8:	strb	wzr, [x0]
  40ebcc:	mov	x19, x26
  40ebd0:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40ebd4:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  40ebd8:	add	x3, x3, #0x350
  40ebdc:	add	x3, x3, #0x278
  40ebe0:	mov	w2, #0xff6                 	// #4086
  40ebe4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40ebe8:	add	x1, x1, #0xc0
  40ebec:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40ebf0:	add	x0, x0, #0x1d8
  40ebf4:	bl	402830 <__assert_fail@plt>
  40ebf8:	ldr	x0, [x21]
  40ebfc:	bl	40ae10 <wcrtomb@plt+0x8540>
  40ec00:	ldr	x0, [x21]
  40ec04:	str	xzr, [x0]
  40ec08:	ldr	x0, [x21, #24]
  40ec0c:	strb	wzr, [x0]
  40ec10:	ldr	x0, [x21, #16]
  40ec14:	strb	wzr, [x0]
  40ec18:	ldr	x0, [x21, #8]
  40ec1c:	strb	wzr, [x0]
  40ec20:	strb	wzr, [x21, #32]
  40ec24:	strb	wzr, [x21, #33]
  40ec28:	mov	x19, x26
  40ec2c:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40ec30:	strb	wzr, [x19]
  40ec34:	ldr	x0, [sp, #128]
  40ec38:	strb	wzr, [x0, #32]
  40ec3c:	strb	wzr, [x0, #33]
  40ec40:	b	40e9ac <wcrtomb@plt+0xc0dc>
  40ec44:	mov	x3, x2
  40ec48:	cmp	x2, #0x0
  40ec4c:	b.gt	40ea44 <wcrtomb@plt+0xc174>
  40ec50:	mov	x3, #0x0                   	// #0
  40ec54:	b	40ea6c <wcrtomb@plt+0xc19c>
  40ec58:	mov	x3, #0x0                   	// #0
  40ec5c:	b	40ea6c <wcrtomb@plt+0xc19c>
  40ec60:	add	x1, x1, #0x1
  40ec64:	ldrb	w2, [x20, x1]
  40ec68:	cbnz	w2, 40ecb4 <wcrtomb@plt+0xc3e4>
  40ec6c:	b	40ecc0 <wcrtomb@plt+0xc3f0>
  40ec70:	mov	x2, x22
  40ec74:	mov	x1, x20
  40ec78:	mov	x0, x19
  40ec7c:	bl	40b1e8 <wcrtomb@plt+0x8918>
  40ec80:	mov	x19, x0
  40ec84:	ldrb	w1, [x20, #1]!
  40ec88:	cbz	w1, 40ece0 <wcrtomb@plt+0xc410>
  40ec8c:	str	w1, [sp, #144]
  40ec90:	mov	x0, x23
  40ec94:	bl	402690 <strchr@plt>
  40ec98:	cbz	x0, 40ec84 <wcrtomb@plt+0xc3b4>
  40ec9c:	ldrb	w25, [x20, #1]
  40eca0:	mov	x22, #0x0                   	// #0
  40eca4:	str	w25, [sp, #112]
  40eca8:	ldr	w2, [sp, #112]
  40ecac:	mov	x1, #0x1                   	// #1
  40ecb0:	cbz	w25, 40ecc0 <wcrtomb@plt+0xc3f0>
  40ecb4:	ldrb	w3, [x0, x1]
  40ecb8:	cmp	w3, w2
  40ecbc:	b.eq	40ec60 <wcrtomb@plt+0xc390>  // b.none
  40ecc0:	cmp	x22, x1
  40ecc4:	csel	x22, x22, x1, ge  // ge = tcont
  40ecc8:	ldr	w1, [sp, #144]
  40eccc:	add	x0, x0, #0x1
  40ecd0:	bl	402690 <strchr@plt>
  40ecd4:	cbnz	x0, 40eca8 <wcrtomb@plt+0xc3d8>
  40ecd8:	cbz	x22, 40ec84 <wcrtomb@plt+0xc3b4>
  40ecdc:	b	40ec70 <wcrtomb@plt+0xc3a0>
  40ece0:	mov	x1, x19
  40ece4:	ldr	x0, [sp, #104]
  40ece8:	bl	40b304 <wcrtomb@plt+0x8a34>
  40ecec:	str	x0, [sp, #104]
  40ecf0:	mov	x0, x19
  40ecf4:	bl	40ae10 <wcrtomb@plt+0x8540>
  40ecf8:	mov	x0, x19
  40ecfc:	bl	402660 <free@plt>
  40ed00:	ldr	x23, [x24], #8
  40ed04:	cbz	x23, 40ed24 <wcrtomb@plt+0xc454>
  40ed08:	ldr	x20, [x27]
  40ed0c:	ldr	x0, [sp, #120]
  40ed10:	bl	4141ec <wcrtomb@plt+0x1191c>
  40ed14:	mov	x19, x0
  40ed18:	ldrb	w1, [x20]
  40ed1c:	cbnz	w1, 40ec8c <wcrtomb@plt+0xc3bc>
  40ed20:	b	40ece0 <wcrtomb@plt+0xc410>
  40ed24:	ldr	x0, [x27, #8]!
  40ed28:	cbz	x0, 40ea98 <wcrtomb@plt+0xc1c8>
  40ed2c:	ldr	x24, [sp, #136]
  40ed30:	ldr	x23, [x24], #8
  40ed34:	cbnz	x23, 40ed08 <wcrtomb@plt+0xc438>
  40ed38:	b	40ed24 <wcrtomb@plt+0xc454>
  40ed3c:	ldr	x23, [x21, #40]
  40ed40:	cbnz	x23, 40ede0 <wcrtomb@plt+0xc510>
  40ed44:	ldr	x24, [x21]
  40ed48:	ldr	x19, [x24], #8
  40ed4c:	adrp	x22, 426000 <_obstack_memory_used@@Base+0xf218>
  40ed50:	add	x22, x22, #0x6c8
  40ed54:	cbz	x19, 40edd4 <wcrtomb@plt+0xc504>
  40ed58:	mov	x0, x19
  40ed5c:	bl	4022c0 <strlen@plt>
  40ed60:	mov	x20, x0
  40ed64:	mov	x0, x22
  40ed68:	bl	4022c0 <strlen@plt>
  40ed6c:	cmp	x20, x0
  40ed70:	csel	x22, x22, x19, ls  // ls = plast
  40ed74:	ldr	x19, [x24], #8
  40ed78:	cbnz	x19, 40ed58 <wcrtomb@plt+0xc488>
  40ed7c:	ldr	x1, [x21, #24]
  40ed80:	mov	x0, x22
  40ed84:	bl	402640 <strcmp@plt>
  40ed88:	cbnz	w0, 40f1d4 <wcrtomb@plt+0xc904>
  40ed8c:	ldr	w0, [sp, #152]
  40ed90:	cbz	w0, 40ed9c <wcrtomb@plt+0xc4cc>
  40ed94:	ldrb	w19, [x21, #32]
  40ed98:	cbz	w19, 40edac <wcrtomb@plt+0xc4dc>
  40ed9c:	mov	w19, #0x1                   	// #1
  40eda0:	ldr	w0, [sp, #156]
  40eda4:	cbz	w0, 40edac <wcrtomb@plt+0xc4dc>
  40eda8:	ldrb	w19, [x21, #33]
  40edac:	ldrb	w24, [x21, #32]
  40edb0:	ldrb	w20, [x21, #33]
  40edb4:	ldrb	w0, [x22]
  40edb8:	cbnz	w0, 40f19c <wcrtomb@plt+0xc8cc>
  40edbc:	mov	x0, x21
  40edc0:	bl	40ae40 <wcrtomb@plt+0x8570>
  40edc4:	ldp	x19, x20, [sp, #16]
  40edc8:	ldp	x21, x22, [sp, #32]
  40edcc:	ldp	x25, x26, [sp, #64]
  40edd0:	b	40e918 <wcrtomb@plt+0xc048>
  40edd4:	adrp	x22, 426000 <_obstack_memory_used@@Base+0xf218>
  40edd8:	add	x22, x22, #0x6c8
  40eddc:	b	40ed7c <wcrtomb@plt+0xc4ac>
  40ede0:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  40ede4:	add	x3, x3, #0x350
  40ede8:	add	x3, x3, #0x278
  40edec:	mov	w2, #0x1039                	// #4153
  40edf0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40edf4:	add	x1, x1, #0xc0
  40edf8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40edfc:	add	x0, x0, #0x208
  40ee00:	bl	402830 <__assert_fail@plt>
  40ee04:	ldr	x20, [x21, #40]
  40ee08:	ldr	x1, [x21]
  40ee0c:	ldr	x0, [x20]
  40ee10:	bl	40b304 <wcrtomb@plt+0x8a34>
  40ee14:	str	x0, [x20]
  40ee18:	ldr	x0, [x20, #16]
  40ee1c:	ldrb	w1, [x0]
  40ee20:	cbz	w1, 40ee30 <wcrtomb@plt+0xc560>
  40ee24:	ldr	x19, [x21, #8]
  40ee28:	ldrb	w1, [x19]
  40ee2c:	cbnz	w1, 40ee9c <wcrtomb@plt+0xc5cc>
  40ee30:	ldr	x0, [x20, #24]
  40ee34:	ldrb	w0, [x0]
  40ee38:	cbnz	w0, 40eefc <wcrtomb@plt+0xc62c>
  40ee3c:	ldr	x0, [x21, #24]
  40ee40:	ldrb	w0, [x0]
  40ee44:	cbnz	w0, 40ee50 <wcrtomb@plt+0xc580>
  40ee48:	ldr	x0, [x20, #16]
  40ee4c:	strb	wzr, [x0]
  40ee50:	ldr	x1, [x21, #16]
  40ee54:	ldr	x0, [x20, #16]
  40ee58:	bl	40ab20 <wcrtomb@plt+0x8250>
  40ee5c:	str	x0, [x20, #16]
  40ee60:	ldr	x0, [x20, #24]
  40ee64:	ldrb	w1, [x0]
  40ee68:	cbnz	w1, 40ee74 <wcrtomb@plt+0xc5a4>
  40ee6c:	ldrb	w1, [x20, #32]
  40ee70:	cbz	w1, 40ef10 <wcrtomb@plt+0xc640>
  40ee74:	ldr	x1, [x21, #24]
  40ee78:	ldrb	w2, [x1]
  40ee7c:	cbnz	w2, 40ee88 <wcrtomb@plt+0xc5b8>
  40ee80:	ldrb	w2, [x21, #33]
  40ee84:	cbz	w2, 40ef10 <wcrtomb@plt+0xc640>
  40ee88:	bl	40ab20 <wcrtomb@plt+0x8250>
  40ee8c:	str	x0, [x20, #24]
  40ee90:	ldrb	w0, [x21, #33]
  40ee94:	strb	w0, [x20, #33]
  40ee98:	b	40ef1c <wcrtomb@plt+0xc64c>
  40ee9c:	bl	4022c0 <strlen@plt>
  40eea0:	mov	x22, x0
  40eea4:	mov	x0, x19
  40eea8:	bl	4022c0 <strlen@plt>
  40eeac:	mov	x24, x0
  40eeb0:	add	x23, x22, x0
  40eeb4:	mov	x0, x23
  40eeb8:	bl	413fec <wcrtomb@plt+0x1171c>
  40eebc:	mov	x19, x0
  40eec0:	mov	x2, x22
  40eec4:	ldr	x1, [x20, #16]
  40eec8:	bl	402260 <memcpy@plt>
  40eecc:	mov	x2, x24
  40eed0:	ldr	x1, [x21, #8]
  40eed4:	add	x0, x19, x22
  40eed8:	bl	402260 <memcpy@plt>
  40eedc:	mov	x2, x23
  40eee0:	mov	x1, x19
  40eee4:	ldr	x0, [x20]
  40eee8:	bl	40b1e8 <wcrtomb@plt+0x8918>
  40eeec:	str	x0, [x20]
  40eef0:	mov	x0, x19
  40eef4:	bl	402660 <free@plt>
  40eef8:	b	40ee30 <wcrtomb@plt+0xc560>
  40eefc:	ldr	x1, [x21, #8]
  40ef00:	ldr	x0, [x20, #8]
  40ef04:	bl	40ab20 <wcrtomb@plt+0x8250>
  40ef08:	str	x0, [x20, #8]
  40ef0c:	b	40ee3c <wcrtomb@plt+0xc56c>
  40ef10:	strb	wzr, [x0]
  40ef14:	strb	wzr, [x20, #32]
  40ef18:	strb	wzr, [x20, #33]
  40ef1c:	mov	x0, x21
  40ef20:	bl	40ae40 <wcrtomb@plt+0x8570>
  40ef24:	mov	x19, x26
  40ef28:	mov	x21, x20
  40ef2c:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40ef30:	cmp	w20, #0xff
  40ef34:	b.gt	40eb3c <wcrtomb@plt+0xc26c>
  40ef38:	sxtw	x19, w20
  40ef3c:	add	w25, w20, #0x1
  40ef40:	cmp	w25, #0xff
  40ef44:	b.gt	40f00c <wcrtomb@plt+0xc73c>
  40ef48:	sbfiz	x0, x20, #2, #32
  40ef4c:	str	x0, [sp, #136]
  40ef50:	add	x0, x0, #0x4
  40ef54:	str	x0, [sp, #112]
  40ef58:	ldr	w0, [sp, #144]
  40ef5c:	add	w0, w0, #0x80
  40ef60:	str	w0, [sp, #144]
  40ef64:	str	w20, [sp, #128]
  40ef68:	b	40ef8c <wcrtomb@plt+0xc6bc>
  40ef6c:	cmp	w20, w0
  40ef70:	b.ne	40efec <wcrtomb@plt+0xc71c>  // b.any
  40ef74:	add	w25, w25, #0x1
  40ef78:	ldr	x0, [sp, #112]
  40ef7c:	add	x0, x0, #0x4
  40ef80:	str	x0, [sp, #112]
  40ef84:	cmp	w25, #0x100
  40ef88:	b.eq	40f00c <wcrtomb@plt+0xc73c>  // b.none
  40ef8c:	mov	w20, w25
  40ef90:	mov	x1, x27
  40ef94:	mov	w0, w25
  40ef98:	bl	409f6c <wcrtomb@plt+0x769c>
  40ef9c:	and	w0, w0, #0xff
  40efa0:	cbz	w0, 40ef74 <wcrtomb@plt+0xc6a4>
  40efa4:	ldr	w0, [sp, #148]
  40efa8:	cbz	w0, 40efec <wcrtomb@plt+0xc71c>
  40efac:	add	w0, w25, #0x80
  40efb0:	cmp	w0, #0x17f
  40efb4:	b.hi	40efc8 <wcrtomb@plt+0xc6f8>  // b.pmore
  40efb8:	bl	402510 <__ctype_toupper_loc@plt>
  40efbc:	ldr	x0, [x0]
  40efc0:	ldr	x1, [sp, #112]
  40efc4:	ldr	w20, [x0, x1]
  40efc8:	ldr	w0, [sp, #128]
  40efcc:	ldr	w1, [sp, #144]
  40efd0:	cmp	w1, #0x17f
  40efd4:	b.hi	40ef6c <wcrtomb@plt+0xc69c>  // b.pmore
  40efd8:	bl	402510 <__ctype_toupper_loc@plt>
  40efdc:	ldr	x0, [x0]
  40efe0:	ldr	x1, [sp, #136]
  40efe4:	ldr	w0, [x0, x1]
  40efe8:	b	40ef6c <wcrtomb@plt+0xc69c>
  40efec:	cmp	w25, #0xff
  40eff0:	b.gt	40f00c <wcrtomb@plt+0xc73c>
  40eff4:	mov	x1, #0x2                   	// #2
  40eff8:	mov	x0, x21
  40effc:	bl	40b174 <wcrtomb@plt+0x88a4>
  40f000:	mov	x21, x0
  40f004:	mov	x19, x26
  40f008:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40f00c:	add	x25, x26, #0x2
  40f010:	add	x0, x24, x22
  40f014:	ldr	x0, [x0, #8]
  40f018:	mov	x20, x25
  40f01c:	cmp	x0, #0x105
  40f020:	b.eq	40f0ac <wcrtomb@plt+0xc7dc>  // b.none
  40f024:	sub	x1, x20, x26
  40f028:	asr	x1, x1, #1
  40f02c:	add	x1, x1, #0x1
  40f030:	mov	x0, x21
  40f034:	bl	40b174 <wcrtomb@plt+0x88a4>
  40f038:	mov	x21, x0
  40f03c:	and	w0, w19, #0xff
  40f040:	ldr	w1, [sp, #148]
  40f044:	cbz	w1, 40f068 <wcrtomb@plt+0xc798>
  40f048:	mov	w0, w19
  40f04c:	add	w1, w19, #0x80
  40f050:	cmp	w1, #0x17f
  40f054:	b.hi	40f064 <wcrtomb@plt+0xc794>  // b.pmore
  40f058:	bl	402510 <__ctype_toupper_loc@plt>
  40f05c:	ldr	x0, [x0]
  40f060:	ldr	w0, [x0, w19, sxtw #2]
  40f064:	and	w0, w0, #0xff
  40f068:	ldr	x1, [x21, #16]
  40f06c:	strb	w0, [x1]
  40f070:	ldr	x1, [x21, #8]
  40f074:	strb	w0, [x1]
  40f078:	ldr	x1, [x21, #24]
  40f07c:	strb	w0, [x1]
  40f080:	cmp	x20, x25
  40f084:	b.le	40f188 <wcrtomb@plt+0xc8b8>
  40f088:	add	x22, x22, #0x10
  40f08c:	mov	x0, #0xfffffffffffffffd    	// #-3
  40f090:	ldr	x1, [sp, #104]
  40f094:	sub	x19, x0, x1
  40f098:	add	x19, x19, x20
  40f09c:	lsr	x24, x19, #1
  40f0a0:	add	x23, x24, #0x2
  40f0a4:	mov	x19, #0x1                   	// #1
  40f0a8:	b	40f120 <wcrtomb@plt+0xc850>
  40f0ac:	sub	x23, x23, #0x1
  40f0b0:	cmp	x25, x23
  40f0b4:	b.ge	40f024 <wcrtomb@plt+0xc754>  // b.tcont
  40f0b8:	add	x1, x24, #0x8
  40f0bc:	b	40f0d8 <wcrtomb@plt+0xc808>
  40f0c0:	ldr	x0, [x1, x20, lsl #3]
  40f0c4:	cmp	x0, #0x105
  40f0c8:	b.ne	40f024 <wcrtomb@plt+0xc754>  // b.any
  40f0cc:	add	x20, x20, #0x2
  40f0d0:	cmp	x20, x23
  40f0d4:	b.ge	40f024 <wcrtomb@plt+0xc754>  // b.tcont
  40f0d8:	cmp	x26, x20
  40f0dc:	b.eq	40f0c0 <wcrtomb@plt+0xc7f0>  // b.none
  40f0e0:	ldr	x0, [x24, x20, lsl #3]
  40f0e4:	sub	x0, x0, #0x1
  40f0e8:	cmp	x0, #0xfe
  40f0ec:	b.ls	40f0c0 <wcrtomb@plt+0xc7f0>  // b.plast
  40f0f0:	b	40f024 <wcrtomb@plt+0xc754>
  40f0f4:	and	w0, w0, #0xff
  40f0f8:	ldr	x1, [x21, #16]
  40f0fc:	strb	w0, [x1, x19]
  40f100:	ldr	x1, [x21, #8]
  40f104:	strb	w0, [x1, x19]
  40f108:	ldr	x1, [x21, #24]
  40f10c:	strb	w0, [x1, x19]
  40f110:	add	x19, x19, #0x1
  40f114:	add	x22, x22, #0x10
  40f118:	cmp	x23, x19
  40f11c:	b.eq	40f154 <wcrtomb@plt+0xc884>  // b.none
  40f120:	ldr	x0, [x28, #144]
  40f124:	ldr	x20, [x0, x22]
  40f128:	and	w0, w20, #0xff
  40f12c:	ldr	w1, [sp, #148]
  40f130:	cbz	w1, 40f0f8 <wcrtomb@plt+0xc828>
  40f134:	mov	w0, w20
  40f138:	add	w1, w20, #0x80
  40f13c:	cmp	w1, #0x17f
  40f140:	b.hi	40f0f4 <wcrtomb@plt+0xc824>  // b.pmore
  40f144:	bl	402510 <__ctype_toupper_loc@plt>
  40f148:	ldr	x0, [x0]
  40f14c:	ldr	w0, [x0, w20, sxtw #2]
  40f150:	b	40f0f4 <wcrtomb@plt+0xc824>
  40f154:	add	x2, x24, #0x2
  40f158:	add	x19, x25, x24, lsl #1
  40f15c:	ldr	x0, [x21, #16]
  40f160:	strb	wzr, [x0, x2]
  40f164:	ldr	x0, [x21, #8]
  40f168:	strb	wzr, [x0, x2]
  40f16c:	ldr	x0, [x21, #24]
  40f170:	strb	wzr, [x0, x2]
  40f174:	ldr	x1, [x21, #24]
  40f178:	ldr	x0, [x21]
  40f17c:	bl	40b1e8 <wcrtomb@plt+0x8918>
  40f180:	str	x0, [x21]
  40f184:	b	40eb78 <wcrtomb@plt+0xc2a8>
  40f188:	mov	x19, x26
  40f18c:	mov	x2, #0x1                   	// #1
  40f190:	b	40f15c <wcrtomb@plt+0xc88c>
  40f194:	mov	x23, #0x0                   	// #0
  40f198:	b	40e8f8 <wcrtomb@plt+0xc028>
  40f19c:	mov	x0, x22
  40f1a0:	bl	4022c0 <strlen@plt>
  40f1a4:	add	x0, x0, #0x4
  40f1a8:	bl	413fec <wcrtomb@plt+0x1171c>
  40f1ac:	mov	x23, x0
  40f1b0:	strb	w19, [x0]
  40f1b4:	strb	w24, [x0, #1]
  40f1b8:	strb	w20, [x0, #2]
  40f1bc:	mov	x1, x22
  40f1c0:	add	x0, x0, #0x3
  40f1c4:	bl	4026e0 <strcpy@plt>
  40f1c8:	b	40e8f8 <wcrtomb@plt+0xc028>
  40f1cc:	mov	x23, #0x0                   	// #0
  40f1d0:	b	40e918 <wcrtomb@plt+0xc048>
  40f1d4:	mov	w20, #0x0                   	// #0
  40f1d8:	mov	w24, #0x0                   	// #0
  40f1dc:	mov	w19, #0x0                   	// #0
  40f1e0:	b	40edb4 <wcrtomb@plt+0xc4e4>
  40f1e4:	ldp	x19, x20, [sp, #16]
  40f1e8:	ldp	x21, x22, [sp, #32]
  40f1ec:	ldp	x25, x26, [sp, #64]
  40f1f0:	b	40e918 <wcrtomb@plt+0xc048>
  40f1f4:	stp	x29, x30, [sp, #-16]!
  40f1f8:	mov	x29, sp
  40f1fc:	bl	402660 <free@plt>
  40f200:	ldp	x29, x30, [sp], #16
  40f204:	ret
  40f208:	stp	x29, x30, [sp, #-16]!
  40f20c:	mov	x29, sp
  40f210:	mov	x0, #0x920                 	// #2336
  40f214:	bl	413fec <wcrtomb@plt+0x1171c>
  40f218:	ldp	x29, x30, [sp], #16
  40f21c:	ret
  40f220:	stp	x29, x30, [sp, #-144]!
  40f224:	mov	x29, sp
  40f228:	stp	x19, x20, [sp, #16]
  40f22c:	mov	x20, x2
  40f230:	and	w2, w3, #0xff
  40f234:	str	w2, [sp, #108]
  40f238:	cbz	x0, 40f244 <wcrtomb@plt+0xc974>
  40f23c:	mov	x2, x20
  40f240:	bl	40e610 <wcrtomb@plt+0xbd40>
  40f244:	bl	40f208 <wcrtomb@plt+0xc938>
  40f248:	mov	x19, x0
  40f24c:	mov	x2, #0x920                 	// #2336
  40f250:	mov	x1, x20
  40f254:	bl	402260 <memcpy@plt>
  40f258:	strb	wzr, [x19, #1048]
  40f25c:	adrp	x0, 40c000 <wcrtomb@plt+0x9730>
  40f260:	add	x0, x0, #0x294
  40f264:	str	x0, [x19, #1040]
  40f268:	str	xzr, [x19, #280]
  40f26c:	str	xzr, [x19, #288]
  40f270:	str	xzr, [x19, #296]
  40f274:	str	xzr, [x19, #304]
  40f278:	str	xzr, [x19, #336]
  40f27c:	str	xzr, [x19, #344]
  40f280:	str	xzr, [x19, #320]
  40f284:	str	xzr, [x19, #352]
  40f288:	str	xzr, [x19, #368]
  40f28c:	str	xzr, [x19, #376]
  40f290:	str	xzr, [x19, #384]
  40f294:	str	xzr, [x19, #392]
  40f298:	ldr	x0, [x19, #16]
  40f29c:	cmp	xzr, x0, lsr #59
  40f2a0:	cset	x1, ne  // ne = any
  40f2a4:	tst	x0, #0x400000000000000
  40f2a8:	csinc	w1, w1, wzr, eq  // eq = none
  40f2ac:	cbnz	w1, 40f32c <wcrtomb@plt+0xca5c>
  40f2b0:	stp	x23, x24, [sp, #48]
  40f2b4:	lsl	x0, x0, #5
  40f2b8:	bl	413fec <wcrtomb@plt+0x1171c>
  40f2bc:	str	x0, [x19]
  40f2c0:	ldr	x2, [x20, #8]
  40f2c4:	cbnz	x2, 40f340 <wcrtomb@plt+0xca70>
  40f2c8:	ldr	x0, [x20, #152]
  40f2cc:	cmp	xzr, x0, lsr #60
  40f2d0:	cset	x23, ne  // ne = any
  40f2d4:	tst	x0, #0x800000000000000
  40f2d8:	csinc	w23, w23, wzr, eq  // eq = none
  40f2dc:	cbnz	w23, 40f350 <wcrtomb@plt+0xca80>
  40f2e0:	lsl	x0, x0, #4
  40f2e4:	bl	413fec <wcrtomb@plt+0x1171c>
  40f2e8:	str	x0, [x19, #144]
  40f2ec:	ldr	x0, [x20, #152]
  40f2f0:	lsl	x1, x0, #1
  40f2f4:	str	x1, [x19, #160]
  40f2f8:	cmp	x0, #0x0
  40f2fc:	b.le	40f598 <wcrtomb@plt+0xccc8>
  40f300:	stp	x21, x22, [sp, #32]
  40f304:	stp	x25, x26, [sp, #64]
  40f308:	stp	x27, x28, [sp, #80]
  40f30c:	mov	w3, w23
  40f310:	mov	w25, w23
  40f314:	mov	x21, #0x0                   	// #0
  40f318:	mov	x22, #0x0                   	// #0
  40f31c:	mov	x24, #0xffffffffffffffff    	// #-1
  40f320:	mov	x28, #0x102                 	// #258
  40f324:	mov	x27, #0x100                 	// #256
  40f328:	b	40f3d4 <wcrtomb@plt+0xcb04>
  40f32c:	stp	x21, x22, [sp, #32]
  40f330:	stp	x23, x24, [sp, #48]
  40f334:	stp	x25, x26, [sp, #64]
  40f338:	stp	x27, x28, [sp, #80]
  40f33c:	bl	414264 <wcrtomb@plt+0x11994>
  40f340:	lsl	x2, x2, #5
  40f344:	ldr	x1, [x20]
  40f348:	bl	402260 <memcpy@plt>
  40f34c:	b	40f2c8 <wcrtomb@plt+0xc9f8>
  40f350:	stp	x21, x22, [sp, #32]
  40f354:	stp	x25, x26, [sp, #64]
  40f358:	stp	x27, x28, [sp, #80]
  40f35c:	bl	414264 <wcrtomb@plt+0x11994>
  40f360:	sub	x1, x0, #0x112
  40f364:	cmp	x1, #0x1
  40f368:	b.hi	40f3f8 <wcrtomb@plt+0xcb28>  // b.pmore
  40f36c:	str	x24, [sp, #112]
  40f370:	str	x24, [sp, #120]
  40f374:	str	x24, [sp, #128]
  40f378:	str	x24, [sp, #136]
  40f37c:	add	x1, sp, #0x70
  40f380:	mov	x0, x19
  40f384:	bl	40a34c <wcrtomb@plt+0x7a7c>
  40f388:	ldr	x1, [x19, #144]
  40f38c:	add	x0, x0, #0x114
  40f390:	str	x0, [x1, x21, lsl #3]
  40f394:	add	x1, x21, #0x2
  40f398:	ldr	x0, [x19, #144]
  40f39c:	add	x21, x0, x21, lsl #3
  40f3a0:	str	x28, [x21, #8]
  40f3a4:	ldr	x0, [x20, #144]
  40f3a8:	add	x26, x0, x26
  40f3ac:	ldr	x0, [x26, #8]
  40f3b0:	sub	x0, x0, #0x101
  40f3b4:	cmp	x0, #0x3
  40f3b8:	cinc	x22, x22, cc  // cc = lo, ul, last
  40f3bc:	mov	w3, #0x1                   	// #1
  40f3c0:	add	x22, x22, #0x1
  40f3c4:	ldr	x0, [x20, #152]
  40f3c8:	cmp	x22, x0
  40f3cc:	b.ge	40f444 <wcrtomb@plt+0xcb74>  // b.tcont
  40f3d0:	mov	x21, x1
  40f3d4:	lsl	x26, x22, #3
  40f3d8:	ldr	x0, [x20, #144]
  40f3dc:	ldr	x0, [x0, x22, lsl #3]
  40f3e0:	cmp	x0, #0x111
  40f3e4:	b.gt	40f360 <wcrtomb@plt+0xca90>
  40f3e8:	cmp	x0, #0x10d
  40f3ec:	b.gt	40f42c <wcrtomb@plt+0xcb5c>
  40f3f0:	cmp	x0, #0x10a
  40f3f4:	b.eq	40f36c <wcrtomb@plt+0xca9c>  // b.none
  40f3f8:	add	x1, x21, #0x1
  40f3fc:	ldr	x2, [x19, #144]
  40f400:	str	x0, [x2, x21, lsl #3]
  40f404:	ldr	x0, [x20, #144]
  40f408:	ldr	x2, [x0, x26]
  40f40c:	cmp	x2, #0xff
  40f410:	cset	w0, ls  // ls = plast
  40f414:	cmp	x2, #0x113
  40f418:	cset	w2, gt
  40f41c:	orr	w0, w0, w2
  40f420:	cmp	w0, #0x0
  40f424:	csel	w25, w25, w0, eq  // eq = none
  40f428:	b	40f3c0 <wcrtomb@plt+0xcaf0>
  40f42c:	ldrb	w1, [x20, #1048]
  40f430:	cbz	w1, 40f3f8 <wcrtomb@plt+0xcb28>
  40f434:	add	x1, x21, #0x1
  40f438:	ldr	x0, [x19, #144]
  40f43c:	str	x27, [x0, x21, lsl #3]
  40f440:	b	40f3c0 <wcrtomb@plt+0xcaf0>
  40f444:	str	x1, [x19, #152]
  40f448:	cbz	w25, 40f4c8 <wcrtomb@plt+0xcbf8>
  40f44c:	cbnz	w3, 40f458 <wcrtomb@plt+0xcb88>
  40f450:	ldrb	w0, [x20, #1048]
  40f454:	cbz	w0, 40f4e8 <wcrtomb@plt+0xcc18>
  40f458:	str	x19, [x20, #288]
  40f45c:	ldp	x21, x22, [sp, #32]
  40f460:	ldp	x25, x26, [sp, #64]
  40f464:	ldp	x27, x28, [sp, #80]
  40f468:	ldr	x2, [x20, #152]
  40f46c:	cmp	x2, #0x0
  40f470:	b.le	40f5a0 <wcrtomb@plt+0xccd0>
  40f474:	ldr	x3, [x20, #144]
  40f478:	mov	x1, #0x0                   	// #0
  40f47c:	ldr	x0, [x3, x1, lsl #3]
  40f480:	cmp	x0, #0x111
  40f484:	b.le	40f4f8 <wcrtomb@plt+0xcc28>
  40f488:	sub	x0, x0, #0x112
  40f48c:	cmp	x0, #0x1
  40f490:	b.hi	40f500 <wcrtomb@plt+0xcc30>  // b.pmore
  40f494:	adrp	x0, 40a000 <wcrtomb@plt+0x7730>
  40f498:	add	x0, x0, #0x134
  40f49c:	str	x0, [x20, #1040]
  40f4a0:	ldr	x0, [x20, #288]
  40f4a4:	cbz	x0, 40f4b8 <wcrtomb@plt+0xcbe8>
  40f4a8:	mov	w1, #0x1                   	// #1
  40f4ac:	strb	w1, [x20, #192]
  40f4b0:	ldrb	w1, [sp, #108]
  40f4b4:	bl	40c654 <wcrtomb@plt+0x9d84>
  40f4b8:	ldp	x23, x24, [sp, #48]
  40f4bc:	ldp	x19, x20, [sp, #16]
  40f4c0:	ldp	x29, x30, [sp], #144
  40f4c4:	ret
  40f4c8:	ldp	x21, x22, [sp, #32]
  40f4cc:	ldp	x25, x26, [sp, #64]
  40f4d0:	ldp	x27, x28, [sp, #80]
  40f4d4:	mov	x0, x19
  40f4d8:	bl	40e724 <wcrtomb@plt+0xbe54>
  40f4dc:	mov	x0, x19
  40f4e0:	bl	402660 <free@plt>
  40f4e4:	b	40f468 <wcrtomb@plt+0xcb98>
  40f4e8:	ldp	x21, x22, [sp, #32]
  40f4ec:	ldp	x25, x26, [sp, #64]
  40f4f0:	ldp	x27, x28, [sp, #80]
  40f4f4:	b	40f4d4 <wcrtomb@plt+0xcc04>
  40f4f8:	cmp	x0, #0x10d
  40f4fc:	b.gt	40f57c <wcrtomb@plt+0xccac>
  40f500:	add	x1, x1, #0x1
  40f504:	cmp	x2, x1
  40f508:	b.ne	40f47c <wcrtomb@plt+0xcbac>  // b.any
  40f50c:	ldrb	w4, [x20, #1050]
  40f510:	cbz	w4, 40f56c <wcrtomb@plt+0xcc9c>
  40f514:	ldr	x3, [x20, #144]
  40f518:	mov	x1, #0x0                   	// #0
  40f51c:	ldr	x0, [x3, x1, lsl #3]
  40f520:	cmp	x0, #0x113
  40f524:	b.eq	40f56c <wcrtomb@plt+0xcc9c>  // b.none
  40f528:	b.gt	40f53c <wcrtomb@plt+0xcc6c>
  40f52c:	cmp	x0, #0x10a
  40f530:	b.eq	40f588 <wcrtomb@plt+0xccb8>  // b.none
  40f534:	cmp	x0, #0x112
  40f538:	csel	w23, w23, w4, ne  // ne = any
  40f53c:	add	x1, x1, #0x1
  40f540:	cmp	x2, x1
  40f544:	b.ne	40f51c <wcrtomb@plt+0xcc4c>  // b.any
  40f548:	cbz	w23, 40f5a8 <wcrtomb@plt+0xccd8>
  40f54c:	mov	x0, x20
  40f550:	bl	40ada0 <wcrtomb@plt+0x84d0>
  40f554:	strb	wzr, [x20, #1048]
  40f558:	adrp	x0, 40c000 <wcrtomb@plt+0x9730>
  40f55c:	add	x0, x0, #0x294
  40f560:	str	x0, [x20, #1040]
  40f564:	mov	w0, #0x1                   	// #1
  40f568:	strb	w0, [x20, #192]
  40f56c:	ldrb	w1, [sp, #108]
  40f570:	mov	x0, x20
  40f574:	bl	40c654 <wcrtomb@plt+0x9d84>
  40f578:	b	40f4a0 <wcrtomb@plt+0xcbd0>
  40f57c:	ldrb	w0, [x20, #1048]
  40f580:	cbnz	w0, 40f494 <wcrtomb@plt+0xcbc4>
  40f584:	b	40f500 <wcrtomb@plt+0xcc30>
  40f588:	stp	x21, x22, [sp, #32]
  40f58c:	stp	x25, x26, [sp, #64]
  40f590:	stp	x27, x28, [sp, #80]
  40f594:	bl	4025a0 <abort@plt>
  40f598:	str	xzr, [x19, #152]
  40f59c:	b	40f4d4 <wcrtomb@plt+0xcc04>
  40f5a0:	ldrb	w0, [x20, #1050]
  40f5a4:	cbz	w0, 40f56c <wcrtomb@plt+0xcc9c>
  40f5a8:	ldr	x0, [x20, #288]
  40f5ac:	cbz	x0, 40f54c <wcrtomb@plt+0xcc7c>
  40f5b0:	bl	40e724 <wcrtomb@plt+0xbe54>
  40f5b4:	ldr	x0, [x20, #288]
  40f5b8:	bl	402660 <free@plt>
  40f5bc:	str	xzr, [x20, #288]
  40f5c0:	b	40f54c <wcrtomb@plt+0xcc7c>
  40f5c4:	stp	x29, x30, [sp, #-80]!
  40f5c8:	mov	x29, sp
  40f5cc:	stp	x19, x20, [sp, #16]
  40f5d0:	stp	x21, x22, [sp, #32]
  40f5d4:	stp	x23, x24, [sp, #48]
  40f5d8:	stp	x25, x26, [sp, #64]
  40f5dc:	mov	x21, x0
  40f5e0:	mov	x22, x1
  40f5e4:	mov	x19, x2
  40f5e8:	mov	w20, w3
  40f5ec:	mov	x2, #0x410                 	// #1040
  40f5f0:	mov	w1, #0x0                   	// #0
  40f5f4:	bl	4024c0 <memset@plt>
  40f5f8:	ldrb	w2, [x22]
  40f5fc:	adrp	x0, 40c000 <wcrtomb@plt+0x9730>
  40f600:	add	x1, x0, #0x294
  40f604:	adrp	x0, 40b000 <wcrtomb@plt+0x8730>
  40f608:	add	x0, x0, #0xd7c
  40f60c:	cmp	w2, #0x0
  40f610:	csel	x0, x0, x1, ne  // ne = any
  40f614:	str	x0, [x21, #1040]
  40f618:	mov	x2, #0x504                 	// #1284
  40f61c:	mov	x1, x22
  40f620:	add	x0, x21, #0x418
  40f624:	bl	402260 <memcpy@plt>
  40f628:	ldrb	w0, [x21, #1048]
  40f62c:	eor	w0, w0, #0x1
  40f630:	strb	w0, [x21, #192]
  40f634:	mov	x0, #0xffffffffffffffff    	// #-1
  40f638:	str	x0, [x21, #24]
  40f63c:	mov	w0, #0x1                   	// #1
  40f640:	strb	w0, [x21, #456]
  40f644:	ubfx	w0, w19, #22, #1
  40f648:	strb	w0, [x21, #457]
  40f64c:	and	w0, w20, #0x1
  40f650:	strb	w0, [x21, #458]
  40f654:	tst	x20, #0x2
  40f658:	mov	w0, #0xa                   	// #10
  40f65c:	csel	w0, w0, wzr, eq  // eq = none
  40f660:	strb	w0, [x21, #459]
  40f664:	str	x19, [x21, #448]
  40f668:	mov	w19, #0x0                   	// #0
  40f66c:	mov	w24, #0x1                   	// #1
  40f670:	mov	w26, #0x2                   	// #2
  40f674:	add	x25, x21, #0x3d0
  40f678:	adrp	x23, 426000 <_obstack_memory_used@@Base+0xf218>
  40f67c:	add	x23, x23, #0x218
  40f680:	b	40f6f4 <wcrtomb@plt+0xce24>
  40f684:	ldrb	w0, [x21, #458]
  40f688:	cbnz	w0, 40f704 <wcrtomb@plt+0xce34>
  40f68c:	and	w20, w19, #0xff
  40f690:	add	x0, x21, w19, uxtb
  40f694:	mov	w1, #0x4                   	// #4
  40f698:	strb	w1, [x0, #460]
  40f69c:	add	x1, x21, #0x3f0
  40f6a0:	mov	w0, w20
  40f6a4:	bl	409f80 <wcrtomb@plt+0x76b0>
  40f6a8:	b	40f6cc <wcrtomb@plt+0xcdfc>
  40f6ac:	mov	w1, w20
  40f6b0:	mov	x0, x23
  40f6b4:	bl	402690 <strchr@plt>
  40f6b8:	cmp	x0, #0x0
  40f6bc:	cset	w0, ne  // ne = any
  40f6c0:	b	40f6e0 <wcrtomb@plt+0xce10>
  40f6c4:	add	x0, x21, w20, sxtw
  40f6c8:	strb	w24, [x0, #460]
  40f6cc:	ldrb	w0, [x21, #1050]
  40f6d0:	cbz	w0, 40f6ac <wcrtomb@plt+0xcddc>
  40f6d4:	and	w0, w19, #0xc0
  40f6d8:	cmp	w0, #0x80
  40f6dc:	cset	w0, ne  // ne = any
  40f6e0:	add	x20, x21, w20, sxtw
  40f6e4:	strb	w0, [x20, #716]
  40f6e8:	add	w19, w19, #0x1
  40f6ec:	cmp	w19, #0x100
  40f6f0:	b.eq	40f750 <wcrtomb@plt+0xce80>  // b.none
  40f6f4:	and	w22, w19, #0xff
  40f6f8:	ldrb	w0, [x21, #459]
  40f6fc:	cmp	w0, w19, uxtb
  40f700:	b.eq	40f684 <wcrtomb@plt+0xcdb4>  // b.none
  40f704:	and	w20, w19, #0xff
  40f708:	add	x0, x21, w19, uxtb #2
  40f70c:	ldr	w0, [x0, #1308]
  40f710:	cmn	w0, #0x1
  40f714:	b.eq	40f6c4 <wcrtomb@plt+0xcdf4>  // b.none
  40f718:	bl	402650 <__ctype_b_loc@plt>
  40f71c:	and	x1, x22, #0xff
  40f720:	ldr	x0, [x0]
  40f724:	ldrh	w0, [x0, x1, lsl #1]
  40f728:	and	w0, w0, #0x8
  40f72c:	cmp	w22, #0x5f
  40f730:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40f734:	b.eq	40f6c4 <wcrtomb@plt+0xcdf4>  // b.none
  40f738:	add	x0, x21, w20, sxtw
  40f73c:	strb	w26, [x0, #460]
  40f740:	mov	x1, x25
  40f744:	mov	w0, w20
  40f748:	bl	409f80 <wcrtomb@plt+0x76b0>
  40f74c:	b	40f6cc <wcrtomb@plt+0xcdfc>
  40f750:	ldp	x19, x20, [sp, #16]
  40f754:	ldp	x21, x22, [sp, #32]
  40f758:	ldp	x23, x24, [sp, #48]
  40f75c:	ldp	x25, x26, [sp, #64]
  40f760:	ldp	x29, x30, [sp], #80
  40f764:	ret
  40f768:	stp	x29, x30, [sp, #-32]!
  40f76c:	mov	x29, sp
  40f770:	stp	x19, x20, [sp, #16]
  40f774:	mov	x19, x0
  40f778:	mov	x20, x1
  40f77c:	mov	x2, #0x1c0                 	// #448
  40f780:	mov	w1, #0x0                   	// #0
  40f784:	bl	4024c0 <memset@plt>
  40f788:	mov	x0, #0xffffffffffffffff    	// #-1
  40f78c:	str	x0, [x19, #24]
  40f790:	ldrb	w0, [x20, #192]
  40f794:	strb	w0, [x19, #192]
  40f798:	mov	x2, #0x250                 	// #592
  40f79c:	add	x1, x20, #0x1c0
  40f7a0:	add	x0, x19, #0x1c0
  40f7a4:	bl	402260 <memcpy@plt>
  40f7a8:	ldr	x0, [x20, #1040]
  40f7ac:	str	x0, [x19, #1040]
  40f7b0:	mov	x2, #0x504                 	// #1284
  40f7b4:	add	x1, x20, #0x418
  40f7b8:	add	x0, x19, #0x418
  40f7bc:	bl	402260 <memcpy@plt>
  40f7c0:	ldp	x19, x20, [sp, #16]
  40f7c4:	ldp	x29, x30, [sp], #32
  40f7c8:	ret
  40f7cc:	stp	x29, x30, [sp, #-80]!
  40f7d0:	mov	x29, sp
  40f7d4:	stp	x19, x20, [sp, #16]
  40f7d8:	stp	x21, x22, [sp, #32]
  40f7dc:	mov	x20, x0
  40f7e0:	bl	402670 <__ctype_get_mb_cur_max@plt>
  40f7e4:	cmp	x0, #0x1
  40f7e8:	cset	w1, hi  // hi = pmore
  40f7ec:	strb	w1, [x20]
  40f7f0:	mov	w1, #0x0                   	// #0
  40f7f4:	b.hi	40f83c <wcrtomb@plt+0xcf6c>  // b.pmore
  40f7f8:	mov	w19, #0x0                   	// #0
  40f7fc:	and	w0, w19, #0xff
  40f800:	strb	w0, [sp, #72]
  40f804:	strb	wzr, [sp, #73]
  40f808:	add	w0, w0, #0x1
  40f80c:	strb	w0, [sp, #64]
  40f810:	strb	wzr, [sp, #65]
  40f814:	add	x1, sp, #0x40
  40f818:	add	x0, sp, #0x48
  40f81c:	bl	4027c0 <strcoll@plt>
  40f820:	tbz	w0, #31, 40f838 <wcrtomb@plt+0xcf68>
  40f824:	add	w19, w19, #0x1
  40f828:	cmp	w19, #0xff
  40f82c:	b.ne	40f7fc <wcrtomb@plt+0xcf2c>  // b.any
  40f830:	mov	w1, #0x1                   	// #1
  40f834:	b	40f83c <wcrtomb@plt+0xcf6c>
  40f838:	mov	w1, #0x0                   	// #0
  40f83c:	strb	w1, [x20, #1]
  40f840:	str	xzr, [sp, #56]
  40f844:	add	x3, sp, #0x38
  40f848:	mov	x2, #0x2                   	// #2
  40f84c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40f850:	add	x1, x1, #0x5d0
  40f854:	add	x0, sp, #0x34
  40f858:	bl	4169f8 <wcrtomb@plt+0x14128>
  40f85c:	mov	w1, #0x0                   	// #0
  40f860:	cmp	x0, #0x2
  40f864:	b.eq	40f8d4 <wcrtomb@plt+0xd004>  // b.none
  40f868:	strb	w1, [x20, #2]
  40f86c:	mov	w19, #0x0                   	// #0
  40f870:	mov	x21, #0x1                   	// #1
  40f874:	mov	w22, #0xffffffff            	// #-1
  40f878:	strb	w19, [sp, #51]
  40f87c:	str	xzr, [sp, #56]
  40f880:	add	x3, sp, #0x38
  40f884:	mov	x2, x21
  40f888:	add	x1, sp, #0x33
  40f88c:	add	x0, sp, #0x34
  40f890:	bl	4169f8 <wcrtomb@plt+0x14128>
  40f894:	add	x1, x20, w19, uxtb
  40f898:	cmp	x0, #0x0
  40f89c:	csel	x2, x0, x21, ne  // ne = any
  40f8a0:	strb	w2, [x1, #3]
  40f8a4:	cmp	x0, #0x2
  40f8a8:	ldr	w1, [sp, #52]
  40f8ac:	csel	w1, w1, w22, cc  // cc = lo, ul, last
  40f8b0:	add	x0, x20, w19, uxtb #2
  40f8b4:	str	w1, [x0, #260]
  40f8b8:	add	w19, w19, #0x1
  40f8bc:	cmp	w19, #0x100
  40f8c0:	b.ne	40f878 <wcrtomb@plt+0xcfa8>  // b.any
  40f8c4:	ldp	x19, x20, [sp, #16]
  40f8c8:	ldp	x21, x22, [sp, #32]
  40f8cc:	ldp	x29, x30, [sp], #80
  40f8d0:	ret
  40f8d4:	ldr	w0, [sp, #52]
  40f8d8:	cmp	w0, #0x100
  40f8dc:	cset	w1, eq  // eq = none
  40f8e0:	b	40f868 <wcrtomb@plt+0xcf98>
  40f8e4:	stp	x29, x30, [sp, #-80]!
  40f8e8:	mov	x29, sp
  40f8ec:	stp	x19, x20, [sp, #16]
  40f8f0:	stp	x21, x22, [sp, #32]
  40f8f4:	stp	x23, x24, [sp, #48]
  40f8f8:	stp	x25, x26, [sp, #64]
  40f8fc:	mov	w23, w0
  40f900:	mov	x26, x1
  40f904:	bl	4027e0 <towupper@plt>
  40f908:	mov	w21, w0
  40f90c:	bl	402870 <towlower@plt>
  40f910:	mov	w22, w0
  40f914:	mov	w25, #0x0                   	// #0
  40f918:	cmp	w23, w21
  40f91c:	b.eq	40f928 <wcrtomb@plt+0xd058>  // b.none
  40f920:	str	w21, [x26]
  40f924:	mov	w25, #0x1                   	// #1
  40f928:	cmp	w21, w22
  40f92c:	ccmp	w23, w22, #0x4, ne  // ne = any
  40f930:	b.eq	40f944 <wcrtomb@plt+0xd074>  // b.none
  40f934:	mov	w0, w22
  40f938:	bl	4027e0 <towupper@plt>
  40f93c:	cmp	w0, w21
  40f940:	b.eq	40f954 <wcrtomb@plt+0xd084>  // b.none
  40f944:	adrp	x20, 426000 <_obstack_memory_used@@Base+0xf218>
  40f948:	add	x20, x20, #0x5d8
  40f94c:	add	x24, x20, #0x26
  40f950:	b	40f96c <wcrtomb@plt+0xd09c>
  40f954:	str	w22, [x26, w25, sxtw #2]
  40f958:	add	w25, w25, #0x1
  40f95c:	b	40f944 <wcrtomb@plt+0xd074>
  40f960:	add	x20, x20, #0x2
  40f964:	cmp	x24, x20
  40f968:	b.eq	40f99c <wcrtomb@plt+0xd0cc>  // b.none
  40f96c:	ldrsh	w19, [x20]
  40f970:	cmp	w22, w19
  40f974:	ccmp	w21, w19, #0x4, ne  // ne = any
  40f978:	ccmp	w23, w19, #0x4, ne  // ne = any
  40f97c:	b.eq	40f960 <wcrtomb@plt+0xd090>  // b.none
  40f980:	mov	w0, w19
  40f984:	bl	4027e0 <towupper@plt>
  40f988:	cmp	w0, w21
  40f98c:	b.ne	40f960 <wcrtomb@plt+0xd090>  // b.any
  40f990:	str	w19, [x26, w25, sxtw #2]
  40f994:	add	w25, w25, #0x1
  40f998:	b	40f960 <wcrtomb@plt+0xd090>
  40f99c:	mov	w0, w25
  40f9a0:	ldp	x19, x20, [sp, #16]
  40f9a4:	ldp	x21, x22, [sp, #32]
  40f9a8:	ldp	x23, x24, [sp, #48]
  40f9ac:	ldp	x25, x26, [sp, #64]
  40f9b0:	ldp	x29, x30, [sp], #80
  40f9b4:	ret
  40f9b8:	stp	x29, x30, [sp, #-32]!
  40f9bc:	mov	x29, sp
  40f9c0:	str	x19, [sp, #16]
  40f9c4:	mov	x19, x0
  40f9c8:	bl	423744 <_obstack_memory_used@@Base+0xc95c>
  40f9cc:	ldrb	w1, [x0]
  40f9d0:	cmp	w1, #0x0
  40f9d4:	csel	x19, x19, x0, eq  // eq = none
  40f9d8:	mov	x0, x19
  40f9dc:	bl	4237a0 <_obstack_memory_used@@Base+0xc9b8>
  40f9e0:	ldrb	w1, [x19, x0]
  40f9e4:	cmp	w1, #0x0
  40f9e8:	strb	wzr, [x19, x0]
  40f9ec:	cset	w0, ne  // ne = any
  40f9f0:	ldr	x19, [sp, #16]
  40f9f4:	ldp	x29, x30, [sp], #32
  40f9f8:	ret
  40f9fc:	stp	x29, x30, [sp, #-16]!
  40fa00:	mov	x29, sp
  40fa04:	ldr	x3, [x3]
  40fa08:	blr	x3
  40fa0c:	ldp	x29, x30, [sp], #16
  40fa10:	ret
  40fa14:	stp	x29, x30, [sp, #-16]!
  40fa18:	mov	x29, sp
  40fa1c:	bl	402660 <free@plt>
  40fa20:	ldp	x29, x30, [sp], #16
  40fa24:	ret
  40fa28:	stp	x29, x30, [sp, #-16]!
  40fa2c:	mov	x29, sp
  40fa30:	bl	411708 <wcrtomb@plt+0xee38>
  40fa34:	cmp	w0, #0x0
  40fa38:	cset	w0, eq  // eq = none
  40fa3c:	ldp	x29, x30, [sp], #16
  40fa40:	ret
  40fa44:	stp	x29, x30, [sp, #-16]!
  40fa48:	mov	x29, sp
  40fa4c:	bl	402640 <strcmp@plt>
  40fa50:	cmp	w0, #0x0
  40fa54:	cset	w0, eq  // eq = none
  40fa58:	ldp	x29, x30, [sp], #16
  40fa5c:	ret
  40fa60:	stp	x29, x30, [sp, #-64]!
  40fa64:	mov	x29, sp
  40fa68:	stp	x19, x20, [sp, #16]
  40fa6c:	stp	x21, x22, [sp, #32]
  40fa70:	mov	x21, x0
  40fa74:	mov	x19, x1
  40fa78:	tbz	w2, #3, 40fac0 <wcrtomb@plt+0xd1f0>
  40fa7c:	tbnz	w2, #4, 40fadc <wcrtomb@plt+0xd20c>
  40fa80:	bl	4022c0 <strlen@plt>
  40fa84:	mov	x22, x0
  40fa88:	mov	x2, x0
  40fa8c:	mov	x1, x19
  40fa90:	mov	x0, x21
  40fa94:	bl	402470 <strncmp@plt>
  40fa98:	mov	w20, w0
  40fa9c:	cbnz	w0, 40faac <wcrtomb@plt+0xd1dc>
  40faa0:	ldrb	w0, [x19, x22]
  40faa4:	cmp	w0, #0x2f
  40faa8:	csel	w20, w20, w0, eq  // eq = none
  40faac:	mov	w0, w20
  40fab0:	ldp	x19, x20, [sp, #16]
  40fab4:	ldp	x21, x22, [sp, #32]
  40fab8:	ldp	x29, x30, [sp], #64
  40fabc:	ret
  40fac0:	tbz	w2, #4, 40fad0 <wcrtomb@plt+0xd200>
  40fac4:	bl	411708 <wcrtomb@plt+0xee38>
  40fac8:	mov	w20, w0
  40facc:	b	40faac <wcrtomb@plt+0xd1dc>
  40fad0:	bl	402640 <strcmp@plt>
  40fad4:	mov	w20, w0
  40fad8:	b	40faac <wcrtomb@plt+0xd1dc>
  40fadc:	stp	x23, x24, [sp, #48]
  40fae0:	mov	x0, x1
  40fae4:	bl	414238 <wcrtomb@plt+0x11968>
  40fae8:	mov	x22, x0
  40faec:	mov	w23, #0x2f                  	// #47
  40faf0:	mov	w24, #0x2f                  	// #47
  40faf4:	b	40fb1c <wcrtomb@plt+0xd24c>
  40faf8:	strb	wzr, [x0]
  40fafc:	mov	x1, x22
  40fb00:	mov	x0, x21
  40fb04:	bl	411708 <wcrtomb@plt+0xee38>
  40fb08:	mov	w20, w0
  40fb0c:	cmp	w0, #0x0
  40fb10:	b.le	40fb3c <wcrtomb@plt+0xd26c>
  40fb14:	mov	x0, x19
  40fb18:	strb	w24, [x0], #1
  40fb1c:	mov	w1, w23
  40fb20:	bl	402690 <strchr@plt>
  40fb24:	mov	x19, x0
  40fb28:	cbnz	x0, 40faf8 <wcrtomb@plt+0xd228>
  40fb2c:	mov	x1, x22
  40fb30:	mov	x0, x21
  40fb34:	bl	411708 <wcrtomb@plt+0xee38>
  40fb38:	mov	w20, w0
  40fb3c:	mov	x0, x22
  40fb40:	bl	402660 <free@plt>
  40fb44:	ldp	x23, x24, [sp, #48]
  40fb48:	b	40faac <wcrtomb@plt+0xd1dc>
  40fb4c:	stp	x29, x30, [sp, #-16]!
  40fb50:	mov	x29, sp
  40fb54:	bl	410f74 <wcrtomb@plt+0xe6a4>
  40fb58:	ldp	x29, x30, [sp], #16
  40fb5c:	ret
  40fb60:	stp	x29, x30, [sp, #-128]!
  40fb64:	mov	x29, sp
  40fb68:	stp	x19, x20, [sp, #16]
  40fb6c:	stp	x21, x22, [sp, #32]
  40fb70:	stp	x23, x24, [sp, #48]
  40fb74:	mov	x21, x1
  40fb78:	str	x0, [sp, #80]
  40fb7c:	strb	wzr, [sp, #64]
  40fb80:	stur	xzr, [sp, #68]
  40fb84:	strb	wzr, [sp, #76]
  40fb88:	mov	x19, #0x0                   	// #0
  40fb8c:	mov	w22, #0x1                   	// #1
  40fb90:	add	x23, sp, #0x44
  40fb94:	adrp	x24, 426000 <_obstack_memory_used@@Base+0xf218>
  40fb98:	add	x24, x24, #0x700
  40fb9c:	b	40fca4 <wcrtomb@plt+0xd3d4>
  40fba0:	ldrb	w0, [x20]
  40fba4:	b	40fc80 <wcrtomb@plt+0xd3b0>
  40fba8:	mov	x0, x23
  40fbac:	bl	4025c0 <mbsinit@plt>
  40fbb0:	cbz	w0, 40fc2c <wcrtomb@plt+0xd35c>
  40fbb4:	strb	w22, [sp, #64]
  40fbb8:	ldr	x20, [sp, #80]
  40fbbc:	bl	402670 <__ctype_get_mb_cur_max@plt>
  40fbc0:	mov	x1, x0
  40fbc4:	mov	x0, x20
  40fbc8:	bl	413a20 <wcrtomb@plt+0x11150>
  40fbcc:	mov	x3, x23
  40fbd0:	mov	x2, x0
  40fbd4:	mov	x1, x20
  40fbd8:	add	x0, sp, #0x64
  40fbdc:	bl	4169f8 <wcrtomb@plt+0x14128>
  40fbe0:	str	x0, [sp, #88]
  40fbe4:	cmn	x0, #0x1
  40fbe8:	b.eq	40fc4c <wcrtomb@plt+0xd37c>  // b.none
  40fbec:	cmn	x0, #0x2
  40fbf0:	b.eq	40fce4 <wcrtomb@plt+0xd414>  // b.none
  40fbf4:	cbnz	x0, 40fc14 <wcrtomb@plt+0xd344>
  40fbf8:	mov	x0, #0x1                   	// #1
  40fbfc:	str	x0, [sp, #88]
  40fc00:	ldr	x0, [sp, #80]
  40fc04:	ldrb	w0, [x0]
  40fc08:	cbnz	w0, 40fcf8 <wcrtomb@plt+0xd428>
  40fc0c:	ldr	w0, [sp, #100]
  40fc10:	cbnz	w0, 40fd18 <wcrtomb@plt+0xd448>
  40fc14:	strb	w22, [sp, #96]
  40fc18:	mov	x0, x23
  40fc1c:	bl	4025c0 <mbsinit@plt>
  40fc20:	cbz	w0, 40fc58 <wcrtomb@plt+0xd388>
  40fc24:	strb	wzr, [sp, #64]
  40fc28:	b	40fc58 <wcrtomb@plt+0xd388>
  40fc2c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  40fc30:	add	x3, x3, #0x660
  40fc34:	mov	w2, #0x96                  	// #150
  40fc38:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40fc3c:	add	x1, x1, #0x600
  40fc40:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40fc44:	add	x0, x0, #0x610
  40fc48:	bl	402830 <__assert_fail@plt>
  40fc4c:	mov	x0, #0x1                   	// #1
  40fc50:	str	x0, [sp, #88]
  40fc54:	strb	wzr, [sp, #96]
  40fc58:	strb	w22, [sp, #76]
  40fc5c:	ldrb	w0, [sp, #96]
  40fc60:	cbz	w0, 40fc6c <wcrtomb@plt+0xd39c>
  40fc64:	ldr	w0, [sp, #100]
  40fc68:	cbz	w0, 40fd38 <wcrtomb@plt+0xd468>
  40fc6c:	ldr	x20, [sp, #80]
  40fc70:	ldrb	w0, [sp, #96]
  40fc74:	cbz	w0, 40fba0 <wcrtomb@plt+0xd2d0>
  40fc78:	ldr	w0, [sp, #100]
  40fc7c:	bl	402870 <towlower@plt>
  40fc80:	lsl	x1, x19, #5
  40fc84:	sub	x19, x1, x19
  40fc88:	add	x0, x19, w0, uxtw
  40fc8c:	udiv	x19, x0, x21
  40fc90:	msub	x19, x19, x21, x0
  40fc94:	ldr	x0, [sp, #88]
  40fc98:	add	x20, x20, x0
  40fc9c:	str	x20, [sp, #80]
  40fca0:	strb	wzr, [sp, #76]
  40fca4:	ldrb	w0, [sp, #76]
  40fca8:	cbnz	w0, 40fc5c <wcrtomb@plt+0xd38c>
  40fcac:	ldrb	w0, [sp, #64]
  40fcb0:	cbnz	w0, 40fbb8 <wcrtomb@plt+0xd2e8>
  40fcb4:	ldr	x2, [sp, #80]
  40fcb8:	ldrb	w1, [x2]
  40fcbc:	ubfx	x0, x1, #5, #3
  40fcc0:	ldr	w0, [x24, x0, lsl #2]
  40fcc4:	lsr	w0, w0, w1
  40fcc8:	tbz	w0, #0, 40fba8 <wcrtomb@plt+0xd2d8>
  40fccc:	mov	x0, #0x1                   	// #1
  40fcd0:	str	x0, [sp, #88]
  40fcd4:	ldrb	w1, [x2]
  40fcd8:	str	w1, [sp, #100]
  40fcdc:	strb	w0, [sp, #96]
  40fce0:	b	40fc58 <wcrtomb@plt+0xd388>
  40fce4:	ldr	x0, [sp, #80]
  40fce8:	bl	4022c0 <strlen@plt>
  40fcec:	str	x0, [sp, #88]
  40fcf0:	strb	wzr, [sp, #96]
  40fcf4:	b	40fc58 <wcrtomb@plt+0xd388>
  40fcf8:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  40fcfc:	add	x3, x3, #0x660
  40fd00:	mov	w2, #0xb2                  	// #178
  40fd04:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40fd08:	add	x1, x1, #0x600
  40fd0c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40fd10:	add	x0, x0, #0x628
  40fd14:	bl	402830 <__assert_fail@plt>
  40fd18:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  40fd1c:	add	x3, x3, #0x660
  40fd20:	mov	w2, #0xb3                  	// #179
  40fd24:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  40fd28:	add	x1, x1, #0x600
  40fd2c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  40fd30:	add	x0, x0, #0x640
  40fd34:	bl	402830 <__assert_fail@plt>
  40fd38:	mov	x0, x19
  40fd3c:	ldp	x19, x20, [sp, #16]
  40fd40:	ldp	x21, x22, [sp, #32]
  40fd44:	ldp	x23, x24, [sp, #48]
  40fd48:	ldp	x29, x30, [sp], #128
  40fd4c:	ret
  40fd50:	stp	x29, x30, [sp, #-32]!
  40fd54:	mov	x29, sp
  40fd58:	stp	x19, x20, [sp, #16]
  40fd5c:	mov	x19, x0
  40fd60:	mov	x20, x1
  40fd64:	mov	x0, #0x10                  	// #16
  40fd68:	bl	413fec <wcrtomb@plt+0x1171c>
  40fd6c:	str	x20, [x0, #8]
  40fd70:	ldr	x1, [x19, #8]
  40fd74:	str	x1, [x0]
  40fd78:	str	x0, [x19, #8]
  40fd7c:	ldp	x19, x20, [sp, #16]
  40fd80:	ldp	x29, x30, [sp], #32
  40fd84:	ret
  40fd88:	and	w8, w1, #0x8000000
  40fd8c:	and	w9, w1, #0x2
  40fd90:	mov	x7, #0x1                   	// #1
  40fd94:	mov	x6, #0x401                 	// #1025
  40fd98:	movk	x6, #0x8000, lsl #16
  40fd9c:	and	w3, w1, #0x20
  40fda0:	mov	x5, #0x2180                	// #8576
  40fda4:	mov	x4, #0x200                 	// #512
  40fda8:	movk	x4, #0x4000, lsl #16
  40fdac:	b	40fdfc <wcrtomb@plt+0xd52c>
  40fdb0:	sub	w1, w1, #0x21
  40fdb4:	lsl	x1, x7, x1
  40fdb8:	tst	x1, x6
  40fdbc:	b.ne	40fe5c <wcrtomb@plt+0xd58c>  // b.any
  40fdc0:	tst	x1, x5
  40fdc4:	b.ne	40fe30 <wcrtomb@plt+0xd560>  // b.any
  40fdc8:	tst	x1, x4
  40fdcc:	b.eq	40fdf8 <wcrtomb@plt+0xd528>  // b.none
  40fdd0:	mov	w0, #0x1                   	// #1
  40fdd4:	b	40fe1c <wcrtomb@plt+0xd54c>
  40fdd8:	cmp	w1, #0x5c
  40fddc:	b.eq	40fe3c <wcrtomb@plt+0xd56c>  // b.none
  40fde0:	cmp	w1, #0x5c
  40fde4:	b.ls	40fe20 <wcrtomb@plt+0xd550>  // b.plast
  40fde8:	sub	w1, w1, #0x7b
  40fdec:	and	w1, w1, #0xfffffffd
  40fdf0:	tst	w1, #0xff
  40fdf4:	b.eq	40fe30 <wcrtomb@plt+0xd560>  // b.none
  40fdf8:	mov	x0, x2
  40fdfc:	mov	x2, x0
  40fe00:	ldrb	w1, [x2], #1
  40fe04:	cmp	w1, #0x40
  40fe08:	b.hi	40fdd8 <wcrtomb@plt+0xd508>  // b.pmore
  40fe0c:	cmp	w1, #0x20
  40fe10:	b.hi	40fdb0 <wcrtomb@plt+0xd4e0>  // b.pmore
  40fe14:	cbnz	w1, 40fdf8 <wcrtomb@plt+0xd528>
  40fe18:	mov	w0, #0x0                   	// #0
  40fe1c:	ret
  40fe20:	cmp	w1, #0x5b
  40fe24:	b.ne	40fdf8 <wcrtomb@plt+0xd528>  // b.any
  40fe28:	mov	w0, #0x1                   	// #1
  40fe2c:	b	40fe1c <wcrtomb@plt+0xd54c>
  40fe30:	cbz	w8, 40fdf8 <wcrtomb@plt+0xd528>
  40fe34:	mov	w0, #0x1                   	// #1
  40fe38:	b	40fe1c <wcrtomb@plt+0xd54c>
  40fe3c:	mov	w1, w8
  40fe40:	cbnz	w8, 40fdf8 <wcrtomb@plt+0xd528>
  40fe44:	cbnz	w9, 40fe54 <wcrtomb@plt+0xd584>
  40fe48:	ldrb	w0, [x0, #1]
  40fe4c:	cmp	w0, #0x0
  40fe50:	cset	w1, ne  // ne = any
  40fe54:	add	x2, x2, w1, sxtw
  40fe58:	b	40fdf8 <wcrtomb@plt+0xd528>
  40fe5c:	cbz	w3, 40fdf8 <wcrtomb@plt+0xd528>
  40fe60:	ldrb	w0, [x0, #1]
  40fe64:	cmp	w0, #0x28
  40fe68:	b.ne	40fdf8 <wcrtomb@plt+0xd528>  // b.any
  40fe6c:	mov	w0, #0x1                   	// #1
  40fe70:	b	40fe1c <wcrtomb@plt+0xd54c>
  40fe74:	stp	x29, x30, [sp, #-16]!
  40fe78:	mov	x29, sp
  40fe7c:	mov	x0, #0x10                  	// #16
  40fe80:	bl	4141ec <wcrtomb@plt+0x1191c>
  40fe84:	ldp	x29, x30, [sp], #16
  40fe88:	ret
  40fe8c:	stp	x29, x30, [sp, #-64]!
  40fe90:	mov	x29, sp
  40fe94:	stp	x19, x20, [sp, #16]
  40fe98:	stp	x21, x22, [sp, #32]
  40fe9c:	str	x23, [sp, #48]
  40fea0:	mov	x23, x0
  40fea4:	ldr	x21, [x0]
  40fea8:	cbnz	x21, 40ff3c <wcrtomb@plt+0xd66c>
  40feac:	ldr	x19, [x23, #8]
  40feb0:	cbz	x19, 40fed0 <wcrtomb@plt+0xd600>
  40feb4:	mov	x20, x19
  40feb8:	ldr	x19, [x19]
  40febc:	ldr	x0, [x20, #8]
  40fec0:	bl	402660 <free@plt>
  40fec4:	mov	x0, x20
  40fec8:	bl	402660 <free@plt>
  40fecc:	cbnz	x19, 40feb4 <wcrtomb@plt+0xd5e4>
  40fed0:	mov	x0, x23
  40fed4:	bl	402660 <free@plt>
  40fed8:	ldp	x19, x20, [sp, #16]
  40fedc:	ldp	x21, x22, [sp, #32]
  40fee0:	ldr	x23, [sp, #48]
  40fee4:	ldp	x29, x30, [sp], #64
  40fee8:	ret
  40feec:	add	x0, x0, #0x8
  40fef0:	bl	423414 <_obstack_memory_used@@Base+0xc62c>
  40fef4:	add	x22, x22, #0x1
  40fef8:	add	x20, x20, #0x48
  40fefc:	ldr	x1, [x19, #32]
  40ff00:	cmp	x22, x1
  40ff04:	b.cs	40ff1c <wcrtomb@plt+0xd64c>  // b.hs, b.nlast
  40ff08:	ldr	x1, [x19, #16]
  40ff0c:	add	x0, x1, x20
  40ff10:	ldr	w1, [x1, x20]
  40ff14:	tbz	w1, #27, 40fef4 <wcrtomb@plt+0xd624>
  40ff18:	b	40feec <wcrtomb@plt+0xd61c>
  40ff1c:	ldr	x0, [x19, #16]
  40ff20:	bl	402660 <free@plt>
  40ff24:	b	40ff30 <wcrtomb@plt+0xd660>
  40ff28:	ldr	x0, [x19, #16]
  40ff2c:	bl	411154 <wcrtomb@plt+0xe884>
  40ff30:	mov	x0, x19
  40ff34:	bl	402660 <free@plt>
  40ff38:	cbz	x21, 40feac <wcrtomb@plt+0xd5dc>
  40ff3c:	mov	x19, x21
  40ff40:	ldr	x21, [x21]
  40ff44:	ldr	w1, [x19, #8]
  40ff48:	cbz	w1, 40ff28 <wcrtomb@plt+0xd658>
  40ff4c:	cmp	w1, #0x1
  40ff50:	b.ne	40ff30 <wcrtomb@plt+0xd660>  // b.any
  40ff54:	ldr	x0, [x19, #32]
  40ff58:	cbz	x0, 40ff1c <wcrtomb@plt+0xd64c>
  40ff5c:	mov	x20, #0x0                   	// #0
  40ff60:	mov	x22, #0x0                   	// #0
  40ff64:	b	40ff08 <wcrtomb@plt+0xd638>
  40ff68:	stp	x29, x30, [sp, #-64]!
  40ff6c:	mov	x29, sp
  40ff70:	stp	x19, x20, [sp, #16]
  40ff74:	stp	x21, x22, [sp, #32]
  40ff78:	str	x23, [sp, #48]
  40ff7c:	mov	x23, x0
  40ff80:	mov	x19, x1
  40ff84:	mov	w22, w2
  40ff88:	adrp	x21, 40f000 <wcrtomb@plt+0xc730>
  40ff8c:	add	x0, x21, #0xa60
  40ff90:	adrp	x21, 402000 <mbrtowc@plt-0x250>
  40ff94:	add	x21, x21, #0x6b0
  40ff98:	tst	x22, #0x10000000
  40ff9c:	csel	x21, x21, x0, ne  // ne = any
  40ffa0:	mov	x0, x23
  40ffa4:	blr	x21
  40ffa8:	cmp	w0, #0x0
  40ffac:	cset	w0, eq  // eq = none
  40ffb0:	tbnz	w22, #30, 40ffc4 <wcrtomb@plt+0xd6f4>
  40ffb4:	ldrb	w1, [x19]
  40ffb8:	cmp	w1, #0x0
  40ffbc:	csinc	w20, w0, wzr, ne  // ne = any
  40ffc0:	cbz	w20, 410000 <wcrtomb@plt+0xd730>
  40ffc4:	ldp	x19, x20, [sp, #16]
  40ffc8:	ldp	x21, x22, [sp, #32]
  40ffcc:	ldr	x23, [sp, #48]
  40ffd0:	ldp	x29, x30, [sp], #64
  40ffd4:	ret
  40ffd8:	mov	w2, w22
  40ffdc:	add	x1, x19, #0x1
  40ffe0:	mov	x0, x23
  40ffe4:	blr	x21
  40ffe8:	cmp	w0, #0x0
  40ffec:	cset	w0, eq  // eq = none
  40fff0:	ldrb	w1, [x19, #1]!
  40fff4:	cmp	w1, #0x0
  40fff8:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  40fffc:	b.ne	40ffc4 <wcrtomb@plt+0xd6f4>  // b.any
  410000:	mov	w0, w20
  410004:	cmp	w1, #0x2f
  410008:	b.ne	40fff0 <wcrtomb@plt+0xd720>  // b.any
  41000c:	ldrb	w1, [x19, #1]
  410010:	cmp	w1, #0x2f
  410014:	b.ne	40ffd8 <wcrtomb@plt+0xd708>  // b.any
  410018:	b	40fff0 <wcrtomb@plt+0xd720>
  41001c:	stp	x29, x30, [sp, #-80]!
  410020:	mov	x29, sp
  410024:	stp	x19, x20, [sp, #16]
  410028:	ldr	x20, [x0]
  41002c:	cbz	x20, 410194 <wcrtomb@plt+0xd8c4>
  410030:	stp	x21, x22, [sp, #32]
  410034:	stp	x23, x24, [sp, #48]
  410038:	stp	x25, x26, [sp, #64]
  41003c:	mov	x22, x1
  410040:	mov	x21, #0x0                   	// #0
  410044:	mov	w23, #0x2f                  	// #47
  410048:	b	410128 <wcrtomb@plt+0xd858>
  41004c:	mov	x0, x22
  410050:	bl	4022c0 <strlen@plt>
  410054:	add	x0, x0, #0x1
  410058:	bl	413fec <wcrtomb@plt+0x1171c>
  41005c:	mov	x21, x0
  410060:	b	410134 <wcrtomb@plt+0xd864>
  410064:	cbnz	w24, 41011c <wcrtomb@plt+0xd84c>
  410068:	mov	w1, w23
  41006c:	mov	x0, x19
  410070:	bl	402690 <strchr@plt>
  410074:	cbz	x0, 41011c <wcrtomb@plt+0xd84c>
  410078:	add	x19, x0, #0x1
  41007c:	mov	x1, x19
  410080:	mov	x0, x21
  410084:	bl	4026e0 <strcpy@plt>
  410088:	mov	x1, x21
  41008c:	mov	x0, x26
  410090:	bl	410d40 <wcrtomb@plt+0xe470>
  410094:	cbnz	x0, 410154 <wcrtomb@plt+0xd884>
  410098:	cbz	w25, 410064 <wcrtomb@plt+0xd794>
  41009c:	mov	w1, w23
  4100a0:	mov	x0, x21
  4100a4:	bl	402550 <strrchr@plt>
  4100a8:	cbz	x0, 410064 <wcrtomb@plt+0xd794>
  4100ac:	strb	wzr, [x0]
  4100b0:	b	410088 <wcrtomb@plt+0xd7b8>
  4100b4:	ldr	x25, [x20, #32]
  4100b8:	ldr	x19, [x20, #16]
  4100bc:	cbz	x25, 41011c <wcrtomb@plt+0xd84c>
  4100c0:	add	x19, x19, #0x8
  4100c4:	mov	x24, #0x0                   	// #0
  4100c8:	b	410100 <wcrtomb@plt+0xd830>
  4100cc:	mov	w4, #0x0                   	// #0
  4100d0:	mov	x3, #0x0                   	// #0
  4100d4:	mov	x2, #0x0                   	// #0
  4100d8:	mov	x1, x22
  4100dc:	mov	x0, x19
  4100e0:	bl	42345c <_obstack_memory_used@@Base+0xc674>
  4100e4:	cmp	w0, #0x0
  4100e8:	cset	w0, eq  // eq = none
  4100ec:	cbnz	w0, 41018c <wcrtomb@plt+0xd8bc>
  4100f0:	add	x24, x24, #0x1
  4100f4:	add	x19, x19, #0x48
  4100f8:	cmp	x25, x24
  4100fc:	b.eq	41011c <wcrtomb@plt+0xd84c>  // b.none
  410100:	ldur	w2, [x19, #-8]
  410104:	tbnz	w2, #27, 4100cc <wcrtomb@plt+0xd7fc>
  410108:	mov	x1, x22
  41010c:	ldr	x0, [x19]
  410110:	bl	40ff68 <wcrtomb@plt+0xd698>
  410114:	and	w0, w0, #0xff
  410118:	b	4100ec <wcrtomb@plt+0xd81c>
  41011c:	ldr	x0, [x20]
  410120:	cbz	x0, 41014c <wcrtomb@plt+0xd87c>
  410124:	mov	x20, x0
  410128:	ldr	w0, [x20, #8]
  41012c:	cbnz	w0, 4100b4 <wcrtomb@plt+0xd7e4>
  410130:	cbz	x21, 41004c <wcrtomb@plt+0xd77c>
  410134:	ldr	w24, [x20, #12]
  410138:	ldr	x26, [x20, #16]
  41013c:	mov	x19, x22
  410140:	and	w25, w24, #0x8
  410144:	and	w24, w24, #0x40000000
  410148:	b	41007c <wcrtomb@plt+0xd7ac>
  41014c:	mov	w19, #0x1                   	// #1
  410150:	b	410158 <wcrtomb@plt+0xd888>
  410154:	mov	w19, #0x0                   	// #0
  410158:	mov	x0, x21
  41015c:	bl	402660 <free@plt>
  410160:	ldr	w0, [x20, #12]
  410164:	eor	x0, x0, #0x20000000
  410168:	ubfx	w0, w0, #29, #1
  41016c:	cmp	w0, w19
  410170:	cset	w0, ne  // ne = any
  410174:	ldp	x21, x22, [sp, #32]
  410178:	ldp	x23, x24, [sp, #48]
  41017c:	ldp	x25, x26, [sp, #64]
  410180:	ldp	x19, x20, [sp, #16]
  410184:	ldp	x29, x30, [sp], #80
  410188:	ret
  41018c:	mov	w19, #0x0                   	// #0
  410190:	b	410158 <wcrtomb@plt+0xd888>
  410194:	mov	w0, #0x0                   	// #0
  410198:	b	410180 <wcrtomb@plt+0xd8b0>
  41019c:	stp	x29, x30, [sp, #-64]!
  4101a0:	mov	x29, sp
  4101a4:	stp	x19, x20, [sp, #16]
  4101a8:	stp	x21, x22, [sp, #32]
  4101ac:	mov	x20, x0
  4101b0:	mov	x21, x1
  4101b4:	mov	w19, w2
  4101b8:	tst	w2, #0x18000000
  4101bc:	b.eq	4103b4 <wcrtomb@plt+0xdae4>  // b.none
  4101c0:	mov	w1, w2
  4101c4:	mov	x0, x21
  4101c8:	bl	40fd88 <wcrtomb@plt+0xd4b8>
  4101cc:	and	w0, w0, #0xff
  4101d0:	cbz	w0, 4103b4 <wcrtomb@plt+0xdae4>
  4101d4:	stp	x23, x24, [sp, #48]
  4101d8:	ldr	x0, [x20]
  4101dc:	cbz	x0, 4101ec <wcrtomb@plt+0xd91c>
  4101e0:	ldr	w1, [x0, #8]
  4101e4:	cmp	w1, #0x1
  4101e8:	b.eq	410268 <wcrtomb@plt+0xd998>  // b.none
  4101ec:	mov	x0, #0x28                  	// #40
  4101f0:	bl	4141ec <wcrtomb@plt+0x1191c>
  4101f4:	mov	w1, #0x1                   	// #1
  4101f8:	str	w1, [x0, #8]
  4101fc:	str	w19, [x0, #12]
  410200:	ldr	x1, [x20]
  410204:	str	x1, [x0]
  410208:	str	x0, [x20]
  41020c:	ldr	x22, [x20]
  410210:	ldr	x1, [x22, #24]
  410214:	ldr	x0, [x22, #32]
  410218:	cmp	x0, x1
  41021c:	b.eq	410278 <wcrtomb@plt+0xd9a8>  // b.none
  410220:	ldr	x1, [x22, #16]
  410224:	ldr	x0, [x22, #32]
  410228:	add	x3, x0, #0x1
  41022c:	str	x3, [x22, #32]
  410230:	add	x0, x0, x0, lsl #3
  410234:	lsl	x0, x0, #3
  410238:	add	x23, x1, x0
  41023c:	str	w19, [x1, x0]
  410240:	tbz	w19, #27, 410388 <wcrtomb@plt+0xdab8>
  410244:	asr	w0, w19, #3
  410248:	and	w0, w0, #0x2
  41024c:	mov	w20, #0x9                   	// #9
  410250:	orr	w20, w0, w20
  410254:	tbz	w19, #3, 410354 <wcrtomb@plt+0xda84>
  410258:	mov	x0, x21
  41025c:	bl	4022c0 <strlen@plt>
  410260:	mov	x19, x0
  410264:	b	4102ec <wcrtomb@plt+0xda1c>
  410268:	ldr	w0, [x0, #12]
  41026c:	eor	w0, w19, w0
  410270:	tbz	w0, #29, 41020c <wcrtomb@plt+0xd93c>
  410274:	b	4101ec <wcrtomb@plt+0xd91c>
  410278:	ldr	x0, [x22, #16]
  41027c:	cbz	x0, 4102b8 <wcrtomb@plt+0xd9e8>
  410280:	mov	x2, #0xf683                	// #63107
  410284:	movk	x2, #0xda12, lsl #16
  410288:	movk	x2, #0x684b, lsl #32
  41028c:	movk	x2, #0x12f, lsl #48
  410290:	cmp	x1, x2
  410294:	b.hi	4102e4 <wcrtomb@plt+0xda14>  // b.pmore
  410298:	add	x2, x1, #0x1
  41029c:	add	x1, x2, x1, lsr #1
  4102a0:	str	x1, [x22, #24]
  4102a4:	add	x1, x1, x1, lsl #3
  4102a8:	lsl	x1, x1, #3
  4102ac:	bl	414068 <wcrtomb@plt+0x11798>
  4102b0:	str	x0, [x22, #16]
  4102b4:	b	410220 <wcrtomb@plt+0xd950>
  4102b8:	cmp	x1, #0x0
  4102bc:	csinc	x1, x1, xzr, ne  // ne = any
  4102c0:	mov	x2, #0x48                  	// #72
  4102c4:	mul	x3, x1, x2
  4102c8:	umulh	x2, x1, x2
  4102cc:	cmp	x2, #0x0
  4102d0:	cset	x2, ne  // ne = any
  4102d4:	cmp	x3, #0x0
  4102d8:	csinc	x2, x2, xzr, ge  // ge = tcont
  4102dc:	cbz	w2, 4102a0 <wcrtomb@plt+0xd9d0>
  4102e0:	bl	414264 <wcrtomb@plt+0x11994>
  4102e4:	bl	414264 <wcrtomb@plt+0x11994>
  4102e8:	mov	x19, x0
  4102ec:	cbz	x19, 410374 <wcrtomb@plt+0xdaa4>
  4102f0:	sub	x0, x19, #0x1
  4102f4:	ldrb	w1, [x21, x0]
  4102f8:	cmp	w1, #0x2f
  4102fc:	b.eq	4102e8 <wcrtomb@plt+0xda18>  // b.none
  410300:	add	x0, x19, #0x7
  410304:	bl	413fec <wcrtomb@plt+0x1171c>
  410308:	mov	x24, x0
  41030c:	mov	x2, x19
  410310:	mov	x1, x21
  410314:	bl	402260 <memcpy@plt>
  410318:	add	x1, x24, x19
  41031c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  410320:	add	x0, x0, #0x658
  410324:	ldr	w2, [x0]
  410328:	str	w2, [x24, x19]
  41032c:	ldur	w0, [x0, #3]
  410330:	stur	w0, [x1, #3]
  410334:	mov	w2, w20
  410338:	mov	x1, x24
  41033c:	add	x0, x23, #0x8
  410340:	bl	423290 <_obstack_memory_used@@Base+0xc4a8>
  410344:	mov	w19, w0
  410348:	mov	x0, x24
  41034c:	bl	402660 <free@plt>
  410350:	b	410368 <wcrtomb@plt+0xda98>
  410354:	mov	w2, w20
  410358:	mov	x1, x21
  41035c:	add	x0, x23, #0x8
  410360:	bl	423290 <_obstack_memory_used@@Base+0xc4a8>
  410364:	mov	w19, w0
  410368:	cbnz	w19, 410374 <wcrtomb@plt+0xdaa4>
  41036c:	ldp	x23, x24, [sp, #48]
  410370:	b	410464 <wcrtomb@plt+0xdb94>
  410374:	ldr	x0, [x22, #32]
  410378:	sub	x0, x0, #0x1
  41037c:	str	x0, [x22, #32]
  410380:	ldp	x23, x24, [sp, #48]
  410384:	b	410464 <wcrtomb@plt+0xdb94>
  410388:	tbnz	w19, #26, 410398 <wcrtomb@plt+0xdac8>
  41038c:	str	x21, [x23, #8]
  410390:	ldp	x23, x24, [sp, #48]
  410394:	b	410464 <wcrtomb@plt+0xdb94>
  410398:	mov	x0, x21
  41039c:	bl	414238 <wcrtomb@plt+0x11968>
  4103a0:	mov	x21, x0
  4103a4:	mov	x1, x0
  4103a8:	mov	x0, x20
  4103ac:	bl	40fd50 <wcrtomb@plt+0xd480>
  4103b0:	b	41038c <wcrtomb@plt+0xdabc>
  4103b4:	ldr	x0, [x20]
  4103b8:	cbz	x0, 4103d8 <wcrtomb@plt+0xdb08>
  4103bc:	ldr	w1, [x0, #8]
  4103c0:	cbnz	w1, 4103d8 <wcrtomb@plt+0xdb08>
  4103c4:	ldr	w0, [x0, #12]
  4103c8:	eor	w0, w19, w0
  4103cc:	and	w0, w0, #0x7ffffff8
  4103d0:	and	w0, w0, #0xe000001f
  4103d4:	cbz	w0, 410424 <wcrtomb@plt+0xdb54>
  4103d8:	mov	x0, #0x28                  	// #40
  4103dc:	bl	4141ec <wcrtomb@plt+0x1191c>
  4103e0:	mov	x22, x0
  4103e4:	str	wzr, [x0, #8]
  4103e8:	str	w19, [x0, #12]
  4103ec:	tbnz	w19, #4, 410474 <wcrtomb@plt+0xdba4>
  4103f0:	adrp	x2, 40f000 <wcrtomb@plt+0xc730>
  4103f4:	add	x2, x2, #0xb4c
  4103f8:	adrp	x3, 40f000 <wcrtomb@plt+0xc730>
  4103fc:	add	x3, x3, #0xa44
  410400:	adrp	x4, 40f000 <wcrtomb@plt+0xc730>
  410404:	add	x4, x4, #0xa14
  410408:	mov	x1, #0x0                   	// #0
  41040c:	mov	x0, #0x0                   	// #0
  410410:	bl	410fc8 <wcrtomb@plt+0xe6f8>
  410414:	str	x0, [x22, #16]
  410418:	ldr	x0, [x20]
  41041c:	str	x0, [x22]
  410420:	str	x22, [x20]
  410424:	ldr	x22, [x20]
  410428:	mov	x0, x21
  41042c:	bl	414238 <wcrtomb@plt+0x11968>
  410430:	mov	x20, x0
  410434:	and	w19, w19, #0x1ffffffe
  410438:	and	w19, w19, #0xf0000003
  41043c:	mov	w0, #0x10000000            	// #268435456
  410440:	cmp	w19, w0
  410444:	b.eq	410488 <wcrtomb@plt+0xdbb8>  // b.none
  410448:	mov	x1, x20
  41044c:	ldr	x0, [x22, #16]
  410450:	bl	411500 <wcrtomb@plt+0xec30>
  410454:	cmp	x20, x0
  410458:	b.eq	410464 <wcrtomb@plt+0xdb94>  // b.none
  41045c:	mov	x0, x20
  410460:	bl	402660 <free@plt>
  410464:	ldp	x19, x20, [sp, #16]
  410468:	ldp	x21, x22, [sp, #32]
  41046c:	ldp	x29, x30, [sp], #64
  410470:	ret
  410474:	adrp	x2, 40f000 <wcrtomb@plt+0xc730>
  410478:	add	x2, x2, #0xb60
  41047c:	adrp	x3, 40f000 <wcrtomb@plt+0xc730>
  410480:	add	x3, x3, #0xa28
  410484:	b	410400 <wcrtomb@plt+0xdb30>
  410488:	mov	x1, x20
  41048c:	mov	x2, x20
  410490:	mov	w4, #0x0                   	// #0
  410494:	mov	w5, #0x1                   	// #1
  410498:	b	4104ac <wcrtomb@plt+0xdbdc>
  41049c:	add	x1, x1, w0, sxtw
  4104a0:	ldrb	w0, [x1], #1
  4104a4:	strb	w0, [x2], #1
  4104a8:	cbz	w0, 410448 <wcrtomb@plt+0xdb78>
  4104ac:	ldrb	w3, [x1]
  4104b0:	mov	w0, w4
  4104b4:	cmp	w3, #0x5c
  4104b8:	b.ne	41049c <wcrtomb@plt+0xdbcc>  // b.any
  4104bc:	ldrb	w0, [x1, #1]
  4104c0:	cbz	w0, 4104cc <wcrtomb@plt+0xdbfc>
  4104c4:	mov	w0, w5
  4104c8:	b	41049c <wcrtomb@plt+0xdbcc>
  4104cc:	ldrb	w0, [x1]
  4104d0:	add	x1, x1, #0x1
  4104d4:	strb	w0, [x2], #1
  4104d8:	b	4104ac <wcrtomb@plt+0xdbdc>
  4104dc:	stp	x29, x30, [sp, #-112]!
  4104e0:	mov	x29, sp
  4104e4:	stp	x19, x20, [sp, #16]
  4104e8:	stp	x21, x22, [sp, #32]
  4104ec:	stp	x23, x24, [sp, #48]
  4104f0:	stp	x25, x26, [sp, #64]
  4104f4:	stp	x27, x28, [sp, #80]
  4104f8:	mov	x23, x0
  4104fc:	mov	x22, x1
  410500:	mov	x20, x2
  410504:	mov	w24, w3
  410508:	and	w21, w4, #0xff
  41050c:	mov	x25, x5
  410510:	str	xzr, [sp, #104]
  410514:	mov	x19, #0x0                   	// #0
  410518:	mov	x27, #0x0                   	// #0
  41051c:	b	410538 <wcrtomb@plt+0xdc68>
  410520:	add	x1, sp, #0x68
  410524:	mov	x0, x27
  410528:	bl	414160 <wcrtomb@plt+0x11890>
  41052c:	mov	x27, x0
  410530:	strb	w26, [x27, x19]
  410534:	add	x19, x19, #0x1
  410538:	ldr	x4, [x20, #8]
  41053c:	ldr	x0, [x20, #16]
  410540:	cmp	x4, x0
  410544:	b.cs	410564 <wcrtomb@plt+0xdc94>  // b.hs, b.nlast
  410548:	add	x0, x4, #0x1
  41054c:	str	x0, [x20, #8]
  410550:	ldrb	w26, [x4]
  410554:	ldr	x0, [sp, #104]
  410558:	cmp	x0, x19
  41055c:	b.ne	410530 <wcrtomb@plt+0xdc60>  // b.any
  410560:	b	410520 <wcrtomb@plt+0xdc50>
  410564:	mov	x0, x20
  410568:	bl	402890 <__uflow@plt>
  41056c:	mov	w26, w0
  410570:	cmn	w0, #0x1
  410574:	b.ne	410554 <wcrtomb@plt+0xdc84>  // b.any
  410578:	ldr	w0, [x20]
  41057c:	and	w26, w0, #0x20
  410580:	tbz	w0, #5, 41058c <wcrtomb@plt+0xdcbc>
  410584:	bl	402840 <__errno_location@plt>
  410588:	ldr	w26, [x0]
  41058c:	add	x1, x19, #0x1
  410590:	mov	x0, x27
  410594:	bl	414068 <wcrtomb@plt+0x11798>
  410598:	mov	x20, x0
  41059c:	strb	w21, [x0, x19]
  4105a0:	cbz	x19, 410644 <wcrtomb@plt+0xdd74>
  4105a4:	add	x0, x0, x19
  4105a8:	ldurb	w0, [x0, #-1]
  4105ac:	cmp	w0, w21
  4105b0:	cinc	x19, x19, ne  // ne = any
  4105b4:	add	x19, x20, x19
  4105b8:	mov	x1, x20
  4105bc:	mov	x0, x22
  4105c0:	bl	40fd50 <wcrtomb@plt+0xd480>
  4105c4:	cmp	x20, x19
  4105c8:	b.cs	410650 <wcrtomb@plt+0xdd80>  // b.hs, b.nlast
  4105cc:	ubfiz	x28, x21, #1, #8
  4105d0:	mov	x27, x20
  4105d4:	b	410600 <wcrtomb@plt+0xdd30>
  4105d8:	strb	wzr, [x0]
  4105dc:	mov	x3, x25
  4105e0:	mov	w2, w24
  4105e4:	mov	x1, x27
  4105e8:	mov	x0, x22
  4105ec:	blr	x23
  4105f0:	add	x27, x20, #0x1
  4105f4:	add	x20, x20, #0x1
  4105f8:	cmp	x19, x20
  4105fc:	b.eq	410650 <wcrtomb@plt+0xdd80>  // b.none
  410600:	ldrb	w0, [x20]
  410604:	cmp	w0, w21
  410608:	b.ne	4105f4 <wcrtomb@plt+0xdd24>  // b.any
  41060c:	bl	402650 <__ctype_b_loc@plt>
  410610:	ldr	x2, [x0]
  410614:	ldrh	w1, [x2, x28]
  410618:	mov	x0, x20
  41061c:	tbz	w1, #13, 4105d8 <wcrtomb@plt+0xdd08>
  410620:	cmp	x20, x27
  410624:	b.eq	4105f0 <wcrtomb@plt+0xdd20>  // b.none
  410628:	ldurb	w1, [x0, #-1]
  41062c:	ldrh	w1, [x2, x1, lsl #1]
  410630:	tbz	w1, #13, 4105d8 <wcrtomb@plt+0xdd08>
  410634:	sub	x0, x0, #0x1
  410638:	cmp	x0, x27
  41063c:	b.ne	410628 <wcrtomb@plt+0xdd58>  // b.any
  410640:	b	4105f0 <wcrtomb@plt+0xdd20>
  410644:	mov	x1, x0
  410648:	mov	x0, x22
  41064c:	bl	40fd50 <wcrtomb@plt+0xd480>
  410650:	bl	402840 <__errno_location@plt>
  410654:	str	w26, [x0]
  410658:	cmp	w26, #0x0
  41065c:	csetm	w0, ne  // ne = any
  410660:	ldp	x19, x20, [sp, #16]
  410664:	ldp	x21, x22, [sp, #32]
  410668:	ldp	x23, x24, [sp, #48]
  41066c:	ldp	x25, x26, [sp, #64]
  410670:	ldp	x27, x28, [sp, #80]
  410674:	ldp	x29, x30, [sp], #112
  410678:	ret
  41067c:	stp	x29, x30, [sp, #-64]!
  410680:	mov	x29, sp
  410684:	stp	x19, x20, [sp, #16]
  410688:	stp	x21, x22, [sp, #32]
  41068c:	str	x0, [sp, #56]
  410690:	mov	x20, x1
  410694:	mov	x0, x2
  410698:	mov	w19, w3
  41069c:	and	w21, w4, #0xff
  4106a0:	ldrb	w2, [x2]
  4106a4:	cmp	w2, #0x2d
  4106a8:	b.eq	4106f8 <wcrtomb@plt+0xde28>  // b.none
  4106ac:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4106b0:	add	x1, x1, #0x98
  4106b4:	bl	4023c0 <fopen@plt>
  4106b8:	mov	x22, x0
  4106bc:	cbz	x0, 410738 <wcrtomb@plt+0xde68>
  4106c0:	add	x5, sp, #0x38
  4106c4:	mov	w4, w21
  4106c8:	mov	w3, w19
  4106cc:	mov	x2, x22
  4106d0:	mov	x1, x20
  4106d4:	adrp	x0, 40f000 <wcrtomb@plt+0xc730>
  4106d8:	add	x0, x0, #0x9fc
  4106dc:	bl	4104dc <wcrtomb@plt+0xdc0c>
  4106e0:	mov	w19, w0
  4106e4:	mov	x0, x22
  4106e8:	bl	402390 <fclose@plt>
  4106ec:	cmp	w0, #0x0
  4106f0:	csinv	w19, w19, wzr, eq  // eq = none
  4106f4:	b	410724 <wcrtomb@plt+0xde54>
  4106f8:	ldrb	w1, [x0, #1]
  4106fc:	cbnz	w1, 4106ac <wcrtomb@plt+0xdddc>
  410700:	add	x5, sp, #0x38
  410704:	mov	w4, w21
  410708:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  41070c:	ldr	x2, [x0, #1104]
  410710:	mov	x1, x20
  410714:	adrp	x0, 40f000 <wcrtomb@plt+0xc730>
  410718:	add	x0, x0, #0x9fc
  41071c:	bl	4104dc <wcrtomb@plt+0xdc0c>
  410720:	mov	w19, w0
  410724:	mov	w0, w19
  410728:	ldp	x19, x20, [sp, #16]
  41072c:	ldp	x21, x22, [sp, #32]
  410730:	ldp	x29, x30, [sp], #64
  410734:	ret
  410738:	mov	w19, #0xffffffff            	// #-1
  41073c:	b	410724 <wcrtomb@plt+0xde54>
  410740:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  410744:	ldr	x0, [x0, #1112]
  410748:	ret
  41074c:	ror	x2, x0, #3
  410750:	udiv	x0, x2, x1
  410754:	msub	x0, x0, x1, x2
  410758:	ret
  41075c:	cmp	x1, x0
  410760:	cset	w0, eq  // eq = none
  410764:	ret
  410768:	mov	x1, x0
  41076c:	ldr	x2, [x0, #40]
  410770:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  410774:	add	x0, x0, #0x6e8
  410778:	cmp	x2, x0
  41077c:	b.eq	41081c <wcrtomb@plt+0xdf4c>  // b.none
  410780:	ldr	s0, [x2, #8]
  410784:	mov	w0, #0xcccd                	// #52429
  410788:	movk	w0, #0x3dcc, lsl #16
  41078c:	fmov	s1, w0
  410790:	fcmpe	s0, s1
  410794:	b.le	4107f8 <wcrtomb@plt+0xdf28>
  410798:	mov	w0, #0x6666                	// #26214
  41079c:	movk	w0, #0x3f66, lsl #16
  4107a0:	fmov	s1, w0
  4107a4:	fcmpe	s0, s1
  4107a8:	b.pl	4107f8 <wcrtomb@plt+0xdf28>  // b.nfrst
  4107ac:	mov	w0, #0xcccd                	// #52429
  4107b0:	movk	w0, #0x3f8c, lsl #16
  4107b4:	fmov	s1, w0
  4107b8:	ldr	s2, [x2, #12]
  4107bc:	fcmpe	s2, s1
  4107c0:	b.le	4107f8 <wcrtomb@plt+0xdf28>
  4107c4:	ldr	s1, [x2]
  4107c8:	fcmpe	s1, #0.0
  4107cc:	b.lt	4107f8 <wcrtomb@plt+0xdf28>  // b.tstop
  4107d0:	mov	w0, #0xcccd                	// #52429
  4107d4:	movk	w0, #0x3dcc, lsl #16
  4107d8:	fmov	s2, w0
  4107dc:	fadd	s1, s1, s2
  4107e0:	ldr	s2, [x2, #4]
  4107e4:	fcmpe	s1, s2
  4107e8:	b.pl	4107f8 <wcrtomb@plt+0xdf28>  // b.nfrst
  4107ec:	fmov	s3, #1.000000000000000000e+00
  4107f0:	fcmpe	s2, s3
  4107f4:	b.ls	41080c <wcrtomb@plt+0xdf3c>  // b.plast
  4107f8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4107fc:	add	x0, x0, #0x6e8
  410800:	str	x0, [x1, #40]
  410804:	mov	w0, #0x0                   	// #0
  410808:	ret
  41080c:	mov	w0, #0x1                   	// #1
  410810:	fcmpe	s0, s1
  410814:	b.le	4107f8 <wcrtomb@plt+0xdf28>
  410818:	b	410808 <wcrtomb@plt+0xdf38>
  41081c:	mov	w0, #0x1                   	// #1
  410820:	b	410808 <wcrtomb@plt+0xdf38>
  410824:	ldrb	w2, [x1, #16]
  410828:	cbnz	w2, 410850 <wcrtomb@plt+0xdf80>
  41082c:	ucvtf	s0, x0
  410830:	ldr	s1, [x1, #8]
  410834:	fdiv	s0, s0, s1
  410838:	mov	w0, #0x5f800000            	// #1602224128
  41083c:	fmov	s1, w0
  410840:	mov	x0, #0x0                   	// #0
  410844:	fcmpe	s0, s1
  410848:	b.ge	4108f8 <wcrtomb@plt+0xe028>  // b.tcont
  41084c:	fcvtzu	x0, s0
  410850:	cmp	x0, #0xa
  410854:	mov	x1, #0xa                   	// #10
  410858:	csel	x0, x0, x1, cs  // cs = hs, nlast
  41085c:	orr	x0, x0, #0x1
  410860:	mov	x5, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  410864:	movk	x5, #0xaaab
  410868:	cmn	x0, #0x1
  41086c:	b.ne	410894 <wcrtomb@plt+0xdfc4>  // b.any
  410870:	mov	x0, #0x0                   	// #0
  410874:	b	4108f8 <wcrtomb@plt+0xe028>
  410878:	mov	x1, #0x3                   	// #3
  41087c:	udiv	x2, x0, x1
  410880:	msub	x1, x2, x1, x0
  410884:	cbnz	x1, 4108e0 <wcrtomb@plt+0xe010>
  410888:	add	x0, x0, #0x2
  41088c:	cmn	x0, #0x1
  410890:	b.eq	4108fc <wcrtomb@plt+0xe02c>  // b.none
  410894:	cmp	x0, #0x9
  410898:	b.ls	410878 <wcrtomb@plt+0xdfa8>  // b.plast
  41089c:	umulh	x1, x0, x5
  4108a0:	and	x2, x1, #0xfffffffffffffffe
  4108a4:	add	x1, x2, x1, lsr #1
  4108a8:	cmp	x0, x1
  4108ac:	b.eq	410888 <wcrtomb@plt+0xdfb8>  // b.none
  4108b0:	mov	x3, #0x10                  	// #16
  4108b4:	mov	x2, #0x9                   	// #9
  4108b8:	mov	x1, #0x3                   	// #3
  4108bc:	add	x2, x2, x3
  4108c0:	add	x1, x1, #0x2
  4108c4:	cmp	x2, x0
  4108c8:	b.cs	41087c <wcrtomb@plt+0xdfac>  // b.hs, b.nlast
  4108cc:	add	x3, x3, #0x8
  4108d0:	udiv	x4, x0, x1
  4108d4:	msub	x4, x4, x1, x0
  4108d8:	cbnz	x4, 4108bc <wcrtomb@plt+0xdfec>
  4108dc:	b	410888 <wcrtomb@plt+0xdfb8>
  4108e0:	cmp	xzr, x0, lsr #61
  4108e4:	cset	x1, ne  // ne = any
  4108e8:	tst	x0, #0x1000000000000000
  4108ec:	csinc	w1, w1, wzr, eq  // eq = none
  4108f0:	cmp	w1, #0x0
  4108f4:	csel	x0, x0, xzr, eq  // eq = none
  4108f8:	ret
  4108fc:	mov	x0, #0x0                   	// #0
  410900:	b	4108f8 <wcrtomb@plt+0xe028>
  410904:	stp	x29, x30, [sp, #-32]!
  410908:	mov	x29, sp
  41090c:	str	x19, [sp, #16]
  410910:	mov	x19, x0
  410914:	mov	x0, x1
  410918:	ldr	x2, [x19, #48]
  41091c:	ldr	x1, [x19, #16]
  410920:	blr	x2
  410924:	ldr	x1, [x19, #16]
  410928:	cmp	x1, x0
  41092c:	b.ls	410944 <wcrtomb@plt+0xe074>  // b.plast
  410930:	ldr	x1, [x19]
  410934:	add	x0, x1, x0, lsl #4
  410938:	ldr	x19, [sp, #16]
  41093c:	ldp	x29, x30, [sp], #32
  410940:	ret
  410944:	bl	4025a0 <abort@plt>
  410948:	stp	x29, x30, [sp, #-80]!
  41094c:	mov	x29, sp
  410950:	stp	x21, x22, [sp, #32]
  410954:	stp	x23, x24, [sp, #48]
  410958:	mov	x21, x0
  41095c:	ldr	x22, [x1]
  410960:	ldr	x0, [x1, #8]
  410964:	cmp	x22, x0
  410968:	b.cs	410a9c <wcrtomb@plt+0xe1cc>  // b.hs, b.nlast
  41096c:	stp	x19, x20, [sp, #16]
  410970:	str	x25, [sp, #64]
  410974:	mov	x23, x1
  410978:	and	w24, w2, #0xff
  41097c:	mov	x25, #0x10                  	// #16
  410980:	b	410a3c <wcrtomb@plt+0xe16c>
  410984:	str	x20, [x0]
  410988:	ldr	x0, [x21, #24]
  41098c:	add	x0, x0, #0x1
  410990:	str	x0, [x21, #24]
  410994:	str	xzr, [x2]
  410998:	ldr	x0, [x21, #72]
  41099c:	str	x0, [x2, #8]
  4109a0:	str	x2, [x21, #72]
  4109a4:	cbz	x19, 4109d8 <wcrtomb@plt+0xe108>
  4109a8:	ldr	x20, [x19]
  4109ac:	mov	x1, x20
  4109b0:	mov	x0, x21
  4109b4:	bl	410904 <wcrtomb@plt+0xe034>
  4109b8:	mov	x2, x19
  4109bc:	ldr	x19, [x19, #8]
  4109c0:	ldr	x1, [x0]
  4109c4:	cbz	x1, 410984 <wcrtomb@plt+0xe0b4>
  4109c8:	ldr	x1, [x0, #8]
  4109cc:	str	x1, [x2, #8]
  4109d0:	str	x2, [x0, #8]
  4109d4:	b	4109a4 <wcrtomb@plt+0xe0d4>
  4109d8:	ldr	x20, [x22]
  4109dc:	str	xzr, [x22, #8]
  4109e0:	cbnz	w24, 410a2c <wcrtomb@plt+0xe15c>
  4109e4:	mov	x1, x20
  4109e8:	mov	x0, x21
  4109ec:	bl	410904 <wcrtomb@plt+0xe034>
  4109f0:	mov	x19, x0
  4109f4:	ldr	x0, [x0]
  4109f8:	cbz	x0, 410a68 <wcrtomb@plt+0xe198>
  4109fc:	ldr	x0, [x21, #72]
  410a00:	cbz	x0, 410a50 <wcrtomb@plt+0xe180>
  410a04:	ldr	x1, [x0, #8]
  410a08:	str	x1, [x21, #72]
  410a0c:	str	x20, [x0]
  410a10:	ldr	x1, [x19, #8]
  410a14:	str	x1, [x0, #8]
  410a18:	str	x0, [x19, #8]
  410a1c:	str	xzr, [x22]
  410a20:	ldr	x0, [x23, #24]
  410a24:	sub	x0, x0, #0x1
  410a28:	str	x0, [x23, #24]
  410a2c:	add	x22, x22, #0x10
  410a30:	ldr	x0, [x23, #8]
  410a34:	cmp	x0, x22
  410a38:	b.ls	410a7c <wcrtomb@plt+0xe1ac>  // b.plast
  410a3c:	ldr	x0, [x22]
  410a40:	cbz	x0, 410a2c <wcrtomb@plt+0xe15c>
  410a44:	ldr	x19, [x22, #8]
  410a48:	cbnz	x19, 4109a8 <wcrtomb@plt+0xe0d8>
  410a4c:	b	4109d8 <wcrtomb@plt+0xe108>
  410a50:	mov	x0, x25
  410a54:	bl	4023f0 <malloc@plt>
  410a58:	cbnz	x0, 410a0c <wcrtomb@plt+0xe13c>
  410a5c:	ldp	x19, x20, [sp, #16]
  410a60:	ldr	x25, [sp, #64]
  410a64:	b	410a88 <wcrtomb@plt+0xe1b8>
  410a68:	str	x20, [x19]
  410a6c:	ldr	x0, [x21, #24]
  410a70:	add	x0, x0, #0x1
  410a74:	str	x0, [x21, #24]
  410a78:	b	410a1c <wcrtomb@plt+0xe14c>
  410a7c:	mov	w24, #0x1                   	// #1
  410a80:	ldp	x19, x20, [sp, #16]
  410a84:	ldr	x25, [sp, #64]
  410a88:	mov	w0, w24
  410a8c:	ldp	x21, x22, [sp, #32]
  410a90:	ldp	x23, x24, [sp, #48]
  410a94:	ldp	x29, x30, [sp], #80
  410a98:	ret
  410a9c:	mov	w24, #0x1                   	// #1
  410aa0:	b	410a88 <wcrtomb@plt+0xe1b8>
  410aa4:	stp	x29, x30, [sp, #-64]!
  410aa8:	mov	x29, sp
  410aac:	stp	x19, x20, [sp, #16]
  410ab0:	stp	x21, x22, [sp, #32]
  410ab4:	str	x23, [sp, #48]
  410ab8:	mov	x21, x0
  410abc:	mov	x20, x1
  410ac0:	mov	x22, x2
  410ac4:	and	w23, w3, #0xff
  410ac8:	bl	410904 <wcrtomb@plt+0xe034>
  410acc:	mov	x19, x0
  410ad0:	str	x0, [x22]
  410ad4:	ldr	x0, [x0]
  410ad8:	cbz	x0, 410b74 <wcrtomb@plt+0xe2a4>
  410adc:	cmp	x0, x20
  410ae0:	b.eq	410b34 <wcrtomb@plt+0xe264>  // b.none
  410ae4:	ldr	x2, [x21, #56]
  410ae8:	mov	x1, x0
  410aec:	mov	x0, x20
  410af0:	blr	x2
  410af4:	and	w0, w0, #0xff
  410af8:	cbnz	w0, 410b34 <wcrtomb@plt+0xe264>
  410afc:	ldr	x0, [x19, #8]
  410b00:	cbz	x0, 410b74 <wcrtomb@plt+0xe2a4>
  410b04:	ldr	x1, [x0]
  410b08:	cmp	x1, x20
  410b0c:	b.eq	410b68 <wcrtomb@plt+0xe298>  // b.none
  410b10:	ldr	x2, [x21, #56]
  410b14:	mov	x0, x20
  410b18:	blr	x2
  410b1c:	and	w0, w0, #0xff
  410b20:	cbnz	w0, 410b68 <wcrtomb@plt+0xe298>
  410b24:	ldr	x19, [x19, #8]
  410b28:	ldr	x0, [x19, #8]
  410b2c:	cbnz	x0, 410b04 <wcrtomb@plt+0xe234>
  410b30:	b	410b74 <wcrtomb@plt+0xe2a4>
  410b34:	ldr	x0, [x19]
  410b38:	cbz	w23, 410b74 <wcrtomb@plt+0xe2a4>
  410b3c:	ldr	x1, [x19, #8]
  410b40:	cbz	x1, 410b60 <wcrtomb@plt+0xe290>
  410b44:	ldp	x2, x3, [x1]
  410b48:	stp	x2, x3, [x19]
  410b4c:	str	xzr, [x1]
  410b50:	ldr	x2, [x21, #72]
  410b54:	str	x2, [x1, #8]
  410b58:	str	x1, [x21, #72]
  410b5c:	b	410b74 <wcrtomb@plt+0xe2a4>
  410b60:	str	xzr, [x19]
  410b64:	b	410b74 <wcrtomb@plt+0xe2a4>
  410b68:	ldr	x1, [x19, #8]
  410b6c:	ldr	x0, [x1]
  410b70:	cbnz	w23, 410b88 <wcrtomb@plt+0xe2b8>
  410b74:	ldp	x19, x20, [sp, #16]
  410b78:	ldp	x21, x22, [sp, #32]
  410b7c:	ldr	x23, [sp, #48]
  410b80:	ldp	x29, x30, [sp], #64
  410b84:	ret
  410b88:	ldr	x2, [x1, #8]
  410b8c:	str	x2, [x19, #8]
  410b90:	str	xzr, [x1]
  410b94:	ldr	x2, [x21, #72]
  410b98:	str	x2, [x1, #8]
  410b9c:	str	x1, [x21, #72]
  410ba0:	b	410b74 <wcrtomb@plt+0xe2a4>
  410ba4:	ldr	x0, [x0, #16]
  410ba8:	ret
  410bac:	ldr	x0, [x0, #24]
  410bb0:	ret
  410bb4:	ldr	x0, [x0, #32]
  410bb8:	ret
  410bbc:	ldr	x3, [x0]
  410bc0:	ldr	x4, [x0, #8]
  410bc4:	cmp	x3, x4
  410bc8:	b.cs	410c10 <wcrtomb@plt+0xe340>  // b.hs, b.nlast
  410bcc:	mov	x0, #0x0                   	// #0
  410bd0:	b	410bec <wcrtomb@plt+0xe31c>
  410bd4:	mov	x2, #0x1                   	// #1
  410bd8:	cmp	x0, x2
  410bdc:	csel	x0, x0, x2, cs  // cs = hs, nlast
  410be0:	add	x3, x3, #0x10
  410be4:	cmp	x3, x4
  410be8:	b.cs	410c14 <wcrtomb@plt+0xe344>  // b.hs, b.nlast
  410bec:	ldr	x1, [x3]
  410bf0:	cbz	x1, 410be0 <wcrtomb@plt+0xe310>
  410bf4:	ldr	x1, [x3, #8]
  410bf8:	cbz	x1, 410bd4 <wcrtomb@plt+0xe304>
  410bfc:	mov	x2, #0x1                   	// #1
  410c00:	add	x2, x2, #0x1
  410c04:	ldr	x1, [x1, #8]
  410c08:	cbnz	x1, 410c00 <wcrtomb@plt+0xe330>
  410c0c:	b	410bd8 <wcrtomb@plt+0xe308>
  410c10:	mov	x0, #0x0                   	// #0
  410c14:	ret
  410c18:	mov	x6, x0
  410c1c:	ldr	x3, [x0]
  410c20:	ldr	x4, [x0, #8]
  410c24:	cmp	x3, x4
  410c28:	b.cs	410c6c <wcrtomb@plt+0xe39c>  // b.hs, b.nlast
  410c2c:	mov	x2, #0x0                   	// #0
  410c30:	mov	x5, #0x0                   	// #0
  410c34:	b	410c44 <wcrtomb@plt+0xe374>
  410c38:	add	x3, x3, #0x10
  410c3c:	cmp	x3, x4
  410c40:	b.cs	410c74 <wcrtomb@plt+0xe3a4>  // b.hs, b.nlast
  410c44:	ldr	x1, [x3]
  410c48:	cbz	x1, 410c38 <wcrtomb@plt+0xe368>
  410c4c:	add	x5, x5, #0x1
  410c50:	add	x2, x2, #0x1
  410c54:	ldr	x1, [x3, #8]
  410c58:	cbz	x1, 410c38 <wcrtomb@plt+0xe368>
  410c5c:	add	x2, x2, #0x1
  410c60:	ldr	x1, [x1, #8]
  410c64:	cbnz	x1, 410c5c <wcrtomb@plt+0xe38c>
  410c68:	b	410c38 <wcrtomb@plt+0xe368>
  410c6c:	mov	x2, #0x0                   	// #0
  410c70:	mov	x5, #0x0                   	// #0
  410c74:	ldr	x1, [x6, #24]
  410c78:	mov	w0, #0x0                   	// #0
  410c7c:	cmp	x1, x5
  410c80:	b.eq	410c88 <wcrtomb@plt+0xe3b8>  // b.none
  410c84:	ret
  410c88:	ldr	x0, [x6, #32]
  410c8c:	cmp	x0, x2
  410c90:	cset	w0, eq  // eq = none
  410c94:	b	410c84 <wcrtomb@plt+0xe3b4>
  410c98:	stp	x29, x30, [sp, #-64]!
  410c9c:	mov	x29, sp
  410ca0:	stp	x19, x20, [sp, #16]
  410ca4:	stp	x21, x22, [sp, #32]
  410ca8:	str	x23, [sp, #48]
  410cac:	mov	x20, x0
  410cb0:	mov	x19, x1
  410cb4:	ldr	x21, [x0, #16]
  410cb8:	ldr	x23, [x0, #24]
  410cbc:	bl	410bbc <wcrtomb@plt+0xe2ec>
  410cc0:	mov	x22, x0
  410cc4:	ldr	x2, [x20, #32]
  410cc8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  410ccc:	add	x1, x1, #0x678
  410cd0:	mov	x0, x19
  410cd4:	bl	402880 <fprintf@plt>
  410cd8:	mov	x2, x21
  410cdc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  410ce0:	add	x1, x1, #0x690
  410ce4:	mov	x0, x19
  410ce8:	bl	402880 <fprintf@plt>
  410cec:	ucvtf	d1, x23
  410cf0:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  410cf4:	fmov	d0, x0
  410cf8:	fmul	d1, d1, d0
  410cfc:	ucvtf	d0, x21
  410d00:	fdiv	d0, d1, d0
  410d04:	mov	x2, x23
  410d08:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  410d0c:	add	x1, x1, #0x6a8
  410d10:	mov	x0, x19
  410d14:	bl	402880 <fprintf@plt>
  410d18:	mov	x2, x22
  410d1c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  410d20:	add	x1, x1, #0x6d0
  410d24:	mov	x0, x19
  410d28:	bl	402880 <fprintf@plt>
  410d2c:	ldp	x19, x20, [sp, #16]
  410d30:	ldp	x21, x22, [sp, #32]
  410d34:	ldr	x23, [sp, #48]
  410d38:	ldp	x29, x30, [sp], #64
  410d3c:	ret
  410d40:	stp	x29, x30, [sp, #-48]!
  410d44:	mov	x29, sp
  410d48:	stp	x19, x20, [sp, #16]
  410d4c:	str	x21, [sp, #32]
  410d50:	mov	x21, x0
  410d54:	mov	x20, x1
  410d58:	bl	410904 <wcrtomb@plt+0xe034>
  410d5c:	mov	x19, x0
  410d60:	ldr	x0, [x0]
  410d64:	cbz	x0, 410dac <wcrtomb@plt+0xe4dc>
  410d68:	ldr	x1, [x19]
  410d6c:	cmp	x1, x20
  410d70:	b.eq	410d94 <wcrtomb@plt+0xe4c4>  // b.none
  410d74:	ldr	x2, [x21, #56]
  410d78:	mov	x0, x20
  410d7c:	blr	x2
  410d80:	and	w0, w0, #0xff
  410d84:	cbnz	w0, 410d94 <wcrtomb@plt+0xe4c4>
  410d88:	ldr	x19, [x19, #8]
  410d8c:	cbnz	x19, 410d68 <wcrtomb@plt+0xe498>
  410d90:	b	410d98 <wcrtomb@plt+0xe4c8>
  410d94:	ldr	x19, [x19]
  410d98:	mov	x0, x19
  410d9c:	ldp	x19, x20, [sp, #16]
  410da0:	ldr	x21, [sp, #32]
  410da4:	ldp	x29, x30, [sp], #48
  410da8:	ret
  410dac:	mov	x19, x0
  410db0:	b	410d98 <wcrtomb@plt+0xe4c8>
  410db4:	ldr	x1, [x0, #32]
  410db8:	cbz	x1, 410dec <wcrtomb@plt+0xe51c>
  410dbc:	ldr	x1, [x0]
  410dc0:	ldr	x2, [x0, #8]
  410dc4:	cmp	x1, x2
  410dc8:	b.cs	410de0 <wcrtomb@plt+0xe510>  // b.hs, b.nlast
  410dcc:	ldr	x0, [x1]
  410dd0:	cbnz	x0, 410df0 <wcrtomb@plt+0xe520>
  410dd4:	add	x1, x1, #0x10
  410dd8:	cmp	x1, x2
  410ddc:	b.cc	410dcc <wcrtomb@plt+0xe4fc>  // b.lo, b.ul, b.last
  410de0:	stp	x29, x30, [sp, #-16]!
  410de4:	mov	x29, sp
  410de8:	bl	4025a0 <abort@plt>
  410dec:	mov	x0, #0x0                   	// #0
  410df0:	ret
  410df4:	stp	x29, x30, [sp, #-32]!
  410df8:	mov	x29, sp
  410dfc:	stp	x19, x20, [sp, #16]
  410e00:	mov	x20, x0
  410e04:	mov	x19, x1
  410e08:	bl	410904 <wcrtomb@plt+0xe034>
  410e0c:	mov	x3, x0
  410e10:	mov	x2, x0
  410e14:	b	410e28 <wcrtomb@plt+0xe558>
  410e18:	ldr	x0, [x1]
  410e1c:	b	410e5c <wcrtomb@plt+0xe58c>
  410e20:	ldr	x2, [x2, #8]
  410e24:	cbz	x2, 410e3c <wcrtomb@plt+0xe56c>
  410e28:	ldr	x4, [x2]
  410e2c:	cmp	x4, x19
  410e30:	b.ne	410e20 <wcrtomb@plt+0xe550>  // b.any
  410e34:	ldr	x1, [x2, #8]
  410e38:	cbnz	x1, 410e18 <wcrtomb@plt+0xe548>
  410e3c:	ldr	x1, [x20, #8]
  410e40:	add	x3, x3, #0x10
  410e44:	cmp	x1, x3
  410e48:	b.ls	410e58 <wcrtomb@plt+0xe588>  // b.plast
  410e4c:	ldr	x0, [x3]
  410e50:	cbz	x0, 410e40 <wcrtomb@plt+0xe570>
  410e54:	b	410e5c <wcrtomb@plt+0xe58c>
  410e58:	mov	x0, #0x0                   	// #0
  410e5c:	ldp	x19, x20, [sp, #16]
  410e60:	ldp	x29, x30, [sp], #32
  410e64:	ret
  410e68:	mov	x6, x0
  410e6c:	ldr	x5, [x0]
  410e70:	ldr	x0, [x0, #8]
  410e74:	cmp	x5, x0
  410e78:	b.cs	410ecc <wcrtomb@plt+0xe5fc>  // b.hs, b.nlast
  410e7c:	mov	x0, #0x0                   	// #0
  410e80:	sub	x4, x1, #0x8
  410e84:	b	410e98 <wcrtomb@plt+0xe5c8>
  410e88:	add	x5, x5, #0x10
  410e8c:	ldr	x1, [x6, #8]
  410e90:	cmp	x1, x5
  410e94:	b.ls	410ec8 <wcrtomb@plt+0xe5f8>  // b.plast
  410e98:	ldr	x1, [x5]
  410e9c:	cbz	x1, 410e88 <wcrtomb@plt+0xe5b8>
  410ea0:	cmp	x2, x0
  410ea4:	b.ls	410ec8 <wcrtomb@plt+0xe5f8>  // b.plast
  410ea8:	mov	x1, x5
  410eac:	add	x0, x0, #0x1
  410eb0:	ldr	x3, [x1]
  410eb4:	str	x3, [x4, x0, lsl #3]
  410eb8:	ldr	x1, [x1, #8]
  410ebc:	cbz	x1, 410e88 <wcrtomb@plt+0xe5b8>
  410ec0:	cmp	x2, x0
  410ec4:	b.ne	410eac <wcrtomb@plt+0xe5dc>  // b.any
  410ec8:	ret
  410ecc:	mov	x0, #0x0                   	// #0
  410ed0:	b	410ec8 <wcrtomb@plt+0xe5f8>
  410ed4:	stp	x29, x30, [sp, #-64]!
  410ed8:	mov	x29, sp
  410edc:	stp	x19, x20, [sp, #16]
  410ee0:	stp	x23, x24, [sp, #48]
  410ee4:	mov	x24, x0
  410ee8:	ldr	x23, [x0]
  410eec:	ldr	x0, [x0, #8]
  410ef0:	cmp	x23, x0
  410ef4:	b.cs	410f54 <wcrtomb@plt+0xe684>  // b.hs, b.nlast
  410ef8:	stp	x21, x22, [sp, #32]
  410efc:	mov	x21, x1
  410f00:	mov	x22, x2
  410f04:	mov	x20, #0x0                   	// #0
  410f08:	b	410f1c <wcrtomb@plt+0xe64c>
  410f0c:	add	x23, x23, #0x10
  410f10:	ldr	x0, [x24, #8]
  410f14:	cmp	x0, x23
  410f18:	b.ls	410f4c <wcrtomb@plt+0xe67c>  // b.plast
  410f1c:	ldr	x0, [x23]
  410f20:	cbz	x0, 410f0c <wcrtomb@plt+0xe63c>
  410f24:	mov	x19, x23
  410f28:	mov	x1, x22
  410f2c:	ldr	x0, [x19]
  410f30:	blr	x21
  410f34:	and	w0, w0, #0xff
  410f38:	cbz	w0, 410f5c <wcrtomb@plt+0xe68c>
  410f3c:	add	x20, x20, #0x1
  410f40:	ldr	x19, [x19, #8]
  410f44:	cbnz	x19, 410f28 <wcrtomb@plt+0xe658>
  410f48:	b	410f0c <wcrtomb@plt+0xe63c>
  410f4c:	ldp	x21, x22, [sp, #32]
  410f50:	b	410f60 <wcrtomb@plt+0xe690>
  410f54:	mov	x20, #0x0                   	// #0
  410f58:	b	410f60 <wcrtomb@plt+0xe690>
  410f5c:	ldp	x21, x22, [sp, #32]
  410f60:	mov	x0, x20
  410f64:	ldp	x19, x20, [sp, #16]
  410f68:	ldp	x23, x24, [sp, #48]
  410f6c:	ldp	x29, x30, [sp], #64
  410f70:	ret
  410f74:	mov	x4, x0
  410f78:	ldrb	w2, [x0]
  410f7c:	cbz	w2, 410fa4 <wcrtomb@plt+0xe6d4>
  410f80:	mov	x0, #0x0                   	// #0
  410f84:	lsl	x3, x0, #5
  410f88:	sub	x0, x3, x0
  410f8c:	add	x2, x0, w2, uxtb
  410f90:	udiv	x0, x2, x1
  410f94:	msub	x0, x0, x1, x2
  410f98:	ldrb	w2, [x4, #1]!
  410f9c:	cbnz	w2, 410f84 <wcrtomb@plt+0xe6b4>
  410fa0:	ret
  410fa4:	mov	x0, #0x0                   	// #0
  410fa8:	b	410fa0 <wcrtomb@plt+0xe6d0>
  410fac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  410fb0:	add	x1, x1, #0x6e8
  410fb4:	ldp	x2, x3, [x1]
  410fb8:	stp	x2, x3, [x0]
  410fbc:	ldr	w1, [x1, #16]
  410fc0:	str	w1, [x0, #16]
  410fc4:	ret
  410fc8:	stp	x29, x30, [sp, #-64]!
  410fcc:	mov	x29, sp
  410fd0:	stp	x19, x20, [sp, #16]
  410fd4:	stp	x21, x22, [sp, #32]
  410fd8:	stp	x23, x24, [sp, #48]
  410fdc:	mov	x24, x0
  410fe0:	mov	x20, x1
  410fe4:	mov	x23, x4
  410fe8:	adrp	x1, 410000 <wcrtomb@plt+0xd730>
  410fec:	add	x1, x1, #0x74c
  410ff0:	cmp	x2, #0x0
  410ff4:	csel	x22, x1, x2, eq  // eq = none
  410ff8:	adrp	x1, 410000 <wcrtomb@plt+0xd730>
  410ffc:	add	x1, x1, #0x75c
  411000:	cmp	x3, #0x0
  411004:	csel	x21, x1, x3, eq  // eq = none
  411008:	mov	x0, #0x50                  	// #80
  41100c:	bl	4023f0 <malloc@plt>
  411010:	mov	x19, x0
  411014:	cbz	x0, 411084 <wcrtomb@plt+0xe7b4>
  411018:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  41101c:	add	x0, x0, #0x6e8
  411020:	cmp	x20, #0x0
  411024:	csel	x20, x0, x20, eq  // eq = none
  411028:	str	x20, [x19, #40]
  41102c:	mov	x0, x19
  411030:	bl	410768 <wcrtomb@plt+0xde98>
  411034:	and	w0, w0, #0xff
  411038:	cbz	w0, 41109c <wcrtomb@plt+0xe7cc>
  41103c:	mov	x1, x20
  411040:	mov	x0, x24
  411044:	bl	410824 <wcrtomb@plt+0xdf54>
  411048:	mov	x20, x0
  41104c:	str	x0, [x19, #16]
  411050:	cbz	x0, 41109c <wcrtomb@plt+0xe7cc>
  411054:	mov	x1, #0x10                  	// #16
  411058:	bl	4024d0 <calloc@plt>
  41105c:	str	x0, [x19]
  411060:	cbz	x0, 41109c <wcrtomb@plt+0xe7cc>
  411064:	add	x20, x0, x20, lsl #4
  411068:	str	x20, [x19, #8]
  41106c:	str	xzr, [x19, #24]
  411070:	str	xzr, [x19, #32]
  411074:	str	x22, [x19, #48]
  411078:	str	x21, [x19, #56]
  41107c:	str	x23, [x19, #64]
  411080:	str	xzr, [x19, #72]
  411084:	mov	x0, x19
  411088:	ldp	x19, x20, [sp, #16]
  41108c:	ldp	x21, x22, [sp, #32]
  411090:	ldp	x23, x24, [sp, #48]
  411094:	ldp	x29, x30, [sp], #64
  411098:	ret
  41109c:	mov	x0, x19
  4110a0:	bl	402660 <free@plt>
  4110a4:	mov	x19, #0x0                   	// #0
  4110a8:	b	411084 <wcrtomb@plt+0xe7b4>
  4110ac:	stp	x29, x30, [sp, #-48]!
  4110b0:	mov	x29, sp
  4110b4:	stp	x19, x20, [sp, #16]
  4110b8:	str	x21, [sp, #32]
  4110bc:	mov	x20, x0
  4110c0:	ldr	x21, [x0]
  4110c4:	ldr	x0, [x0, #8]
  4110c8:	cmp	x21, x0
  4110cc:	b.cc	411140 <wcrtomb@plt+0xe870>  // b.lo, b.ul, b.last
  4110d0:	str	xzr, [x20, #24]
  4110d4:	str	xzr, [x20, #32]
  4110d8:	ldp	x19, x20, [sp, #16]
  4110dc:	ldr	x21, [sp, #32]
  4110e0:	ldp	x29, x30, [sp], #48
  4110e4:	ret
  4110e8:	str	xzr, [x19]
  4110ec:	ldr	x0, [x19, #8]
  4110f0:	ldr	x1, [x20, #72]
  4110f4:	str	x1, [x19, #8]
  4110f8:	str	x19, [x20, #72]
  4110fc:	cbz	x0, 411118 <wcrtomb@plt+0xe848>
  411100:	mov	x19, x0
  411104:	ldr	x1, [x20, #64]
  411108:	cbz	x1, 4110e8 <wcrtomb@plt+0xe818>
  41110c:	ldr	x0, [x19]
  411110:	blr	x1
  411114:	b	4110e8 <wcrtomb@plt+0xe818>
  411118:	ldr	x1, [x20, #64]
  41111c:	cbz	x1, 411128 <wcrtomb@plt+0xe858>
  411120:	ldr	x0, [x21]
  411124:	blr	x1
  411128:	str	xzr, [x21]
  41112c:	str	xzr, [x21, #8]
  411130:	add	x21, x21, #0x10
  411134:	ldr	x0, [x20, #8]
  411138:	cmp	x0, x21
  41113c:	b.ls	4110d0 <wcrtomb@plt+0xe800>  // b.plast
  411140:	ldr	x0, [x21]
  411144:	cbz	x0, 411130 <wcrtomb@plt+0xe860>
  411148:	ldr	x19, [x21, #8]
  41114c:	cbnz	x19, 411104 <wcrtomb@plt+0xe834>
  411150:	b	411118 <wcrtomb@plt+0xe848>
  411154:	stp	x29, x30, [sp, #-48]!
  411158:	mov	x29, sp
  41115c:	stp	x19, x20, [sp, #16]
  411160:	str	x21, [sp, #32]
  411164:	mov	x21, x0
  411168:	ldr	x0, [x0, #64]
  41116c:	cbz	x0, 4111c0 <wcrtomb@plt+0xe8f0>
  411170:	ldr	x0, [x21, #32]
  411174:	cbz	x0, 4111c0 <wcrtomb@plt+0xe8f0>
  411178:	ldr	x20, [x21]
  41117c:	ldr	x0, [x21, #8]
  411180:	cmp	x20, x0
  411184:	b.cc	41119c <wcrtomb@plt+0xe8cc>  // b.lo, b.ul, b.last
  411188:	b	4111d0 <wcrtomb@plt+0xe900>
  41118c:	add	x20, x20, #0x10
  411190:	ldr	x0, [x21, #8]
  411194:	cmp	x0, x20
  411198:	b.ls	4111c0 <wcrtomb@plt+0xe8f0>  // b.plast
  41119c:	ldr	x0, [x20]
  4111a0:	cbz	x0, 41118c <wcrtomb@plt+0xe8bc>
  4111a4:	mov	x19, x20
  4111a8:	ldr	x1, [x21, #64]
  4111ac:	ldr	x0, [x19]
  4111b0:	blr	x1
  4111b4:	ldr	x19, [x19, #8]
  4111b8:	cbnz	x19, 4111a8 <wcrtomb@plt+0xe8d8>
  4111bc:	b	41118c <wcrtomb@plt+0xe8bc>
  4111c0:	ldr	x20, [x21]
  4111c4:	ldr	x0, [x21, #8]
  4111c8:	cmp	x20, x0
  4111cc:	b.cc	411218 <wcrtomb@plt+0xe948>  // b.lo, b.ul, b.last
  4111d0:	ldr	x19, [x21, #72]
  4111d4:	cbz	x19, 4111e8 <wcrtomb@plt+0xe918>
  4111d8:	mov	x0, x19
  4111dc:	ldr	x19, [x19, #8]
  4111e0:	bl	402660 <free@plt>
  4111e4:	cbnz	x19, 4111d8 <wcrtomb@plt+0xe908>
  4111e8:	ldr	x0, [x21]
  4111ec:	bl	402660 <free@plt>
  4111f0:	mov	x0, x21
  4111f4:	bl	402660 <free@plt>
  4111f8:	ldp	x19, x20, [sp, #16]
  4111fc:	ldr	x21, [sp, #32]
  411200:	ldp	x29, x30, [sp], #48
  411204:	ret
  411208:	add	x20, x20, #0x10
  41120c:	ldr	x0, [x21, #8]
  411210:	cmp	x0, x20
  411214:	b.ls	4111d0 <wcrtomb@plt+0xe900>  // b.plast
  411218:	ldr	x19, [x20, #8]
  41121c:	cbz	x19, 411208 <wcrtomb@plt+0xe938>
  411220:	mov	x0, x19
  411224:	ldr	x19, [x19, #8]
  411228:	bl	402660 <free@plt>
  41122c:	cbnz	x19, 411220 <wcrtomb@plt+0xe950>
  411230:	b	411208 <wcrtomb@plt+0xe938>
  411234:	stp	x29, x30, [sp, #-128]!
  411238:	mov	x29, sp
  41123c:	stp	x19, x20, [sp, #16]
  411240:	str	x21, [sp, #32]
  411244:	mov	x19, x0
  411248:	mov	x0, x1
  41124c:	ldr	x21, [x19, #40]
  411250:	mov	x1, x21
  411254:	bl	410824 <wcrtomb@plt+0xdf54>
  411258:	cbz	x0, 41134c <wcrtomb@plt+0xea7c>
  41125c:	mov	x20, x0
  411260:	ldr	x0, [x19, #16]
  411264:	cmp	x0, x20
  411268:	b.eq	411364 <wcrtomb@plt+0xea94>  // b.none
  41126c:	mov	x1, #0x10                  	// #16
  411270:	mov	x0, x20
  411274:	bl	4024d0 <calloc@plt>
  411278:	str	x0, [sp, #48]
  41127c:	cbz	x0, 41136c <wcrtomb@plt+0xea9c>
  411280:	str	x20, [sp, #64]
  411284:	add	x20, x0, x20, lsl #4
  411288:	str	x20, [sp, #56]
  41128c:	str	xzr, [sp, #72]
  411290:	str	xzr, [sp, #80]
  411294:	str	x21, [sp, #88]
  411298:	ldr	x0, [x19, #48]
  41129c:	str	x0, [sp, #96]
  4112a0:	ldr	x0, [x19, #56]
  4112a4:	str	x0, [sp, #104]
  4112a8:	ldr	x0, [x19, #64]
  4112ac:	str	x0, [sp, #112]
  4112b0:	ldr	x0, [x19, #72]
  4112b4:	str	x0, [sp, #120]
  4112b8:	mov	w2, #0x0                   	// #0
  4112bc:	mov	x1, x19
  4112c0:	add	x0, sp, #0x30
  4112c4:	bl	410948 <wcrtomb@plt+0xe078>
  4112c8:	ands	w20, w0, #0xff
  4112cc:	b.ne	411314 <wcrtomb@plt+0xea44>  // b.any
  4112d0:	ldr	x0, [sp, #120]
  4112d4:	str	x0, [x19, #72]
  4112d8:	mov	w2, #0x1                   	// #1
  4112dc:	add	x1, sp, #0x30
  4112e0:	mov	x0, x19
  4112e4:	bl	410948 <wcrtomb@plt+0xe078>
  4112e8:	and	w0, w0, #0xff
  4112ec:	cbz	w0, 411348 <wcrtomb@plt+0xea78>
  4112f0:	mov	w2, #0x0                   	// #0
  4112f4:	add	x1, sp, #0x30
  4112f8:	mov	x0, x19
  4112fc:	bl	410948 <wcrtomb@plt+0xe078>
  411300:	and	w0, w0, #0xff
  411304:	cbz	w0, 411348 <wcrtomb@plt+0xea78>
  411308:	ldr	x0, [sp, #48]
  41130c:	bl	402660 <free@plt>
  411310:	b	411350 <wcrtomb@plt+0xea80>
  411314:	ldr	x0, [x19]
  411318:	bl	402660 <free@plt>
  41131c:	ldr	x0, [sp, #48]
  411320:	str	x0, [x19]
  411324:	ldr	x0, [sp, #56]
  411328:	str	x0, [x19, #8]
  41132c:	ldr	x0, [sp, #64]
  411330:	str	x0, [x19, #16]
  411334:	ldr	x0, [sp, #72]
  411338:	str	x0, [x19, #24]
  41133c:	ldr	x0, [sp, #120]
  411340:	str	x0, [x19, #72]
  411344:	b	411350 <wcrtomb@plt+0xea80>
  411348:	bl	4025a0 <abort@plt>
  41134c:	mov	w20, #0x0                   	// #0
  411350:	mov	w0, w20
  411354:	ldp	x19, x20, [sp, #16]
  411358:	ldr	x21, [sp, #32]
  41135c:	ldp	x29, x30, [sp], #128
  411360:	ret
  411364:	mov	w20, #0x1                   	// #1
  411368:	b	411350 <wcrtomb@plt+0xea80>
  41136c:	mov	w20, #0x0                   	// #0
  411370:	b	411350 <wcrtomb@plt+0xea80>
  411374:	stp	x29, x30, [sp, #-64]!
  411378:	mov	x29, sp
  41137c:	stp	x19, x20, [sp, #16]
  411380:	str	x21, [sp, #32]
  411384:	cbz	x1, 4113c4 <wcrtomb@plt+0xeaf4>
  411388:	mov	x19, x0
  41138c:	mov	x20, x1
  411390:	mov	x21, x2
  411394:	mov	w3, #0x0                   	// #0
  411398:	add	x2, sp, #0x38
  41139c:	bl	410aa4 <wcrtomb@plt+0xe1d4>
  4113a0:	mov	x1, x0
  4113a4:	cbz	x0, 4113c8 <wcrtomb@plt+0xeaf8>
  4113a8:	mov	w0, #0x0                   	// #0
  4113ac:	cbz	x21, 4113b4 <wcrtomb@plt+0xeae4>
  4113b0:	str	x1, [x21]
  4113b4:	ldp	x19, x20, [sp, #16]
  4113b8:	ldr	x21, [sp, #32]
  4113bc:	ldp	x29, x30, [sp], #64
  4113c0:	ret
  4113c4:	bl	4025a0 <abort@plt>
  4113c8:	ldr	x0, [x19, #24]
  4113cc:	ucvtf	s1, x0
  4113d0:	ldr	x1, [x19, #40]
  4113d4:	ldr	x0, [x19, #16]
  4113d8:	ucvtf	s0, x0
  4113dc:	ldr	s2, [x1, #8]
  4113e0:	fmul	s0, s0, s2
  4113e4:	fcmpe	s1, s0
  4113e8:	b.gt	411430 <wcrtomb@plt+0xeb60>
  4113ec:	ldr	x0, [sp, #56]
  4113f0:	ldr	x1, [x0]
  4113f4:	cbz	x1, 4114dc <wcrtomb@plt+0xec0c>
  4113f8:	ldr	x1, [x19, #72]
  4113fc:	cbz	x1, 4114c4 <wcrtomb@plt+0xebf4>
  411400:	ldr	x0, [x1, #8]
  411404:	str	x0, [x19, #72]
  411408:	str	x20, [x1]
  41140c:	ldr	x0, [sp, #56]
  411410:	ldr	x2, [x0, #8]
  411414:	str	x2, [x1, #8]
  411418:	str	x1, [x0, #8]
  41141c:	ldr	x0, [x19, #32]
  411420:	add	x0, x0, #0x1
  411424:	str	x0, [x19, #32]
  411428:	mov	w0, #0x1                   	// #1
  41142c:	b	4113b4 <wcrtomb@plt+0xeae4>
  411430:	mov	x0, x19
  411434:	bl	410768 <wcrtomb@plt+0xde98>
  411438:	ldr	x1, [x19, #40]
  41143c:	ldr	s2, [x1, #8]
  411440:	ldr	x0, [x19, #16]
  411444:	ucvtf	s0, x0
  411448:	ldr	x0, [x19, #24]
  41144c:	ucvtf	s1, x0
  411450:	fmul	s3, s2, s0
  411454:	fcmpe	s1, s3
  411458:	b.le	4113ec <wcrtomb@plt+0xeb1c>
  41145c:	ldrb	w0, [x1, #16]
  411460:	cbz	w0, 4114b4 <wcrtomb@plt+0xebe4>
  411464:	ldr	s1, [x1, #12]
  411468:	fmul	s0, s0, s1
  41146c:	mov	w0, #0x5f800000            	// #1602224128
  411470:	fmov	s1, w0
  411474:	mov	w0, #0xffffffff            	// #-1
  411478:	fcmpe	s0, s1
  41147c:	b.ge	4113b4 <wcrtomb@plt+0xeae4>  // b.tcont
  411480:	fcvtzu	x1, s0
  411484:	mov	x0, x19
  411488:	bl	411234 <wcrtomb@plt+0xe964>
  41148c:	and	w1, w0, #0xff
  411490:	mov	w0, #0xffffffff            	// #-1
  411494:	cbz	w1, 4113b4 <wcrtomb@plt+0xeae4>
  411498:	mov	w3, #0x0                   	// #0
  41149c:	add	x2, sp, #0x38
  4114a0:	mov	x1, x20
  4114a4:	mov	x0, x19
  4114a8:	bl	410aa4 <wcrtomb@plt+0xe1d4>
  4114ac:	cbz	x0, 4113ec <wcrtomb@plt+0xeb1c>
  4114b0:	bl	4025a0 <abort@plt>
  4114b4:	ldr	s1, [x1, #12]
  4114b8:	fmul	s0, s0, s1
  4114bc:	fmul	s0, s0, s2
  4114c0:	b	41146c <wcrtomb@plt+0xeb9c>
  4114c4:	mov	x0, #0x10                  	// #16
  4114c8:	bl	4023f0 <malloc@plt>
  4114cc:	mov	x1, x0
  4114d0:	mov	w0, #0xffffffff            	// #-1
  4114d4:	cbz	x1, 4113b4 <wcrtomb@plt+0xeae4>
  4114d8:	b	411408 <wcrtomb@plt+0xeb38>
  4114dc:	str	x20, [x0]
  4114e0:	ldr	x0, [x19, #32]
  4114e4:	add	x0, x0, #0x1
  4114e8:	str	x0, [x19, #32]
  4114ec:	ldr	x0, [x19, #24]
  4114f0:	add	x0, x0, #0x1
  4114f4:	str	x0, [x19, #24]
  4114f8:	mov	w0, #0x1                   	// #1
  4114fc:	b	4113b4 <wcrtomb@plt+0xeae4>
  411500:	stp	x29, x30, [sp, #-48]!
  411504:	mov	x29, sp
  411508:	str	x19, [sp, #16]
  41150c:	mov	x19, x1
  411510:	add	x2, sp, #0x28
  411514:	bl	411374 <wcrtomb@plt+0xeaa4>
  411518:	cmn	w0, #0x1
  41151c:	b.eq	411538 <wcrtomb@plt+0xec68>  // b.none
  411520:	cmp	w0, #0x0
  411524:	ldr	x0, [sp, #40]
  411528:	csel	x0, x0, x19, eq  // eq = none
  41152c:	ldr	x19, [sp, #16]
  411530:	ldp	x29, x30, [sp], #48
  411534:	ret
  411538:	mov	x0, #0x0                   	// #0
  41153c:	b	41152c <wcrtomb@plt+0xec5c>
  411540:	stp	x29, x30, [sp, #-64]!
  411544:	mov	x29, sp
  411548:	stp	x19, x20, [sp, #16]
  41154c:	mov	x19, x0
  411550:	mov	w3, #0x1                   	// #1
  411554:	add	x2, sp, #0x38
  411558:	bl	410aa4 <wcrtomb@plt+0xe1d4>
  41155c:	mov	x20, x0
  411560:	cbz	x0, 41157c <wcrtomb@plt+0xecac>
  411564:	ldr	x0, [x19, #32]
  411568:	sub	x0, x0, #0x1
  41156c:	str	x0, [x19, #32]
  411570:	ldr	x0, [sp, #56]
  411574:	ldr	x0, [x0]
  411578:	cbz	x0, 41158c <wcrtomb@plt+0xecbc>
  41157c:	mov	x0, x20
  411580:	ldp	x19, x20, [sp, #16]
  411584:	ldp	x29, x30, [sp], #64
  411588:	ret
  41158c:	ldr	x0, [x19, #24]
  411590:	sub	x0, x0, #0x1
  411594:	str	x0, [x19, #24]
  411598:	ucvtf	s0, x0
  41159c:	ldr	x1, [x19, #40]
  4115a0:	ldr	x0, [x19, #16]
  4115a4:	ucvtf	s1, x0
  4115a8:	ldr	s2, [x1]
  4115ac:	fmul	s1, s1, s2
  4115b0:	fcmpe	s0, s1
  4115b4:	b.pl	41157c <wcrtomb@plt+0xecac>  // b.nfrst
  4115b8:	mov	x0, x19
  4115bc:	bl	410768 <wcrtomb@plt+0xde98>
  4115c0:	ldr	x1, [x19, #40]
  4115c4:	ldr	x0, [x19, #16]
  4115c8:	ucvtf	s0, x0
  4115cc:	ldr	x0, [x19, #24]
  4115d0:	ucvtf	s2, x0
  4115d4:	ldr	s1, [x1]
  4115d8:	fmul	s1, s0, s1
  4115dc:	fcmpe	s2, s1
  4115e0:	b.pl	41157c <wcrtomb@plt+0xecac>  // b.nfrst
  4115e4:	ldrb	w0, [x1, #16]
  4115e8:	cbz	w0, 411630 <wcrtomb@plt+0xed60>
  4115ec:	ldr	s1, [x1, #4]
  4115f0:	fmul	s0, s0, s1
  4115f4:	fcvtzu	x1, s0
  4115f8:	mov	x0, x19
  4115fc:	bl	411234 <wcrtomb@plt+0xe964>
  411600:	and	w0, w0, #0xff
  411604:	cbnz	w0, 41157c <wcrtomb@plt+0xecac>
  411608:	str	x21, [sp, #32]
  41160c:	ldr	x21, [x19, #72]
  411610:	cbz	x21, 411624 <wcrtomb@plt+0xed54>
  411614:	mov	x0, x21
  411618:	ldr	x21, [x21, #8]
  41161c:	bl	402660 <free@plt>
  411620:	cbnz	x21, 411614 <wcrtomb@plt+0xed44>
  411624:	str	xzr, [x19, #72]
  411628:	ldr	x21, [sp, #32]
  41162c:	b	41157c <wcrtomb@plt+0xecac>
  411630:	ldr	s1, [x1, #4]
  411634:	fmul	s0, s0, s1
  411638:	ldr	s1, [x1, #8]
  41163c:	fmul	s0, s0, s1
  411640:	fcvtzu	x1, s0
  411644:	b	4115f8 <wcrtomb@plt+0xed28>
  411648:	stp	x29, x30, [sp, #-32]!
  41164c:	mov	x29, sp
  411650:	str	x19, [sp, #16]
  411654:	mov	w19, w0
  411658:	bl	402400 <wcwidth@plt>
  41165c:	tbnz	w0, #31, 41166c <wcrtomb@plt+0xed9c>
  411660:	ldr	x19, [sp, #16]
  411664:	ldp	x29, x30, [sp], #32
  411668:	ret
  41166c:	mov	w0, w19
  411670:	bl	402330 <iswcntrl@plt>
  411674:	cmp	w0, #0x0
  411678:	cset	w0, eq  // eq = none
  41167c:	b	411660 <wcrtomb@plt+0xed90>
  411680:	stp	x29, x30, [sp, #-48]!
  411684:	mov	x29, sp
  411688:	stp	x19, x20, [sp, #16]
  41168c:	mov	x20, x0
  411690:	mov	x19, x1
  411694:	ldr	x0, [x1], #24
  411698:	cmp	x0, x1
  41169c:	b.eq	4116cc <wcrtomb@plt+0xedfc>  // b.none
  4116a0:	str	x0, [x20]
  4116a4:	ldr	x0, [x19, #8]
  4116a8:	str	x0, [x20, #8]
  4116ac:	ldrb	w0, [x19, #16]
  4116b0:	strb	w0, [x20, #16]
  4116b4:	cbz	w0, 4116c0 <wcrtomb@plt+0xedf0>
  4116b8:	ldr	w0, [x19, #20]
  4116bc:	str	w0, [x20, #20]
  4116c0:	ldp	x19, x20, [sp, #16]
  4116c4:	ldp	x29, x30, [sp], #48
  4116c8:	ret
  4116cc:	str	x21, [sp, #32]
  4116d0:	add	x21, x20, #0x18
  4116d4:	ldr	x2, [x19, #8]
  4116d8:	mov	x0, x21
  4116dc:	bl	402260 <memcpy@plt>
  4116e0:	str	x21, [x20]
  4116e4:	ldr	x21, [sp, #32]
  4116e8:	b	4116a4 <wcrtomb@plt+0xedd4>
  4116ec:	ubfx	x2, x0, #5, #3
  4116f0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4116f4:	add	x1, x1, #0x700
  4116f8:	ldr	w1, [x1, x2, lsl #2]
  4116fc:	lsr	w0, w1, w0
  411700:	and	w0, w0, #0x1
  411704:	ret
  411708:	cmp	x0, x1
  41170c:	b.eq	411d54 <wcrtomb@plt+0xf484>  // b.none
  411710:	stp	x29, x30, [sp, #-192]!
  411714:	mov	x29, sp
  411718:	stp	x19, x20, [sp, #16]
  41171c:	stp	x21, x22, [sp, #32]
  411720:	stp	x23, x24, [sp, #48]
  411724:	mov	x21, x0
  411728:	mov	x22, x1
  41172c:	bl	402670 <__ctype_get_mb_cur_max@plt>
  411730:	cmp	x0, #0x1
  411734:	b.ls	411cd8 <wcrtomb@plt+0xf408>  // b.plast
  411738:	str	x21, [sp, #80]
  41173c:	strb	wzr, [sp, #64]
  411740:	stur	xzr, [sp, #68]
  411744:	strb	wzr, [sp, #76]
  411748:	str	x22, [sp, #144]
  41174c:	strb	wzr, [sp, #128]
  411750:	stur	xzr, [sp, #132]
  411754:	strb	wzr, [sp, #140]
  411758:	mov	w20, #0x1                   	// #1
  41175c:	add	x21, sp, #0x44
  411760:	add	x22, sp, #0x84
  411764:	b	4119c0 <wcrtomb@plt+0xf0f0>
  411768:	b.cs	411788 <wcrtomb@plt+0xeeb8>  // b.hs, b.nlast
  41176c:	ldr	x1, [sp, #144]
  411770:	ldr	x0, [sp, #80]
  411774:	bl	402610 <memcmp@plt>
  411778:	mov	w1, #0x1                   	// #1
  41177c:	cmp	w0, #0x0
  411780:	cneg	w0, w1, le
  411784:	b	411d40 <wcrtomb@plt+0xf470>
  411788:	mov	x2, x0
  41178c:	ldr	x1, [sp, #144]
  411790:	ldr	x0, [sp, #80]
  411794:	bl	402610 <memcmp@plt>
  411798:	mov	w1, #0x1                   	// #1
  41179c:	cmp	w0, #0x0
  4117a0:	cneg	w0, w1, lt  // lt = tstop
  4117a4:	b	411d40 <wcrtomb@plt+0xf470>
  4117a8:	mov	x0, x21
  4117ac:	bl	4025c0 <mbsinit@plt>
  4117b0:	cbz	w0, 41182c <wcrtomb@plt+0xef5c>
  4117b4:	strb	w20, [sp, #64]
  4117b8:	ldr	x19, [sp, #80]
  4117bc:	bl	402670 <__ctype_get_mb_cur_max@plt>
  4117c0:	mov	x1, x0
  4117c4:	mov	x0, x19
  4117c8:	bl	413a20 <wcrtomb@plt+0x11150>
  4117cc:	mov	x3, x21
  4117d0:	mov	x2, x0
  4117d4:	mov	x1, x19
  4117d8:	add	x0, sp, #0x64
  4117dc:	bl	4169f8 <wcrtomb@plt+0x14128>
  4117e0:	str	x0, [sp, #88]
  4117e4:	cmn	x0, #0x1
  4117e8:	b.eq	41184c <wcrtomb@plt+0xef7c>  // b.none
  4117ec:	cmn	x0, #0x2
  4117f0:	b.eq	41185c <wcrtomb@plt+0xef8c>  // b.none
  4117f4:	cbnz	x0, 411814 <wcrtomb@plt+0xef44>
  4117f8:	mov	x0, #0x1                   	// #1
  4117fc:	str	x0, [sp, #88]
  411800:	ldr	x0, [sp, #80]
  411804:	ldrb	w0, [x0]
  411808:	cbnz	w0, 411870 <wcrtomb@plt+0xefa0>
  41180c:	ldr	w0, [sp, #100]
  411810:	cbnz	w0, 411890 <wcrtomb@plt+0xefc0>
  411814:	strb	w20, [sp, #96]
  411818:	mov	x0, x21
  41181c:	bl	4025c0 <mbsinit@plt>
  411820:	cbz	w0, 411a04 <wcrtomb@plt+0xf134>
  411824:	strb	wzr, [sp, #64]
  411828:	b	411a04 <wcrtomb@plt+0xf134>
  41182c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411830:	add	x3, x3, #0x720
  411834:	mov	w2, #0x96                  	// #150
  411838:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41183c:	add	x1, x1, #0x600
  411840:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411844:	add	x0, x0, #0x610
  411848:	bl	402830 <__assert_fail@plt>
  41184c:	mov	x0, #0x1                   	// #1
  411850:	str	x0, [sp, #88]
  411854:	strb	wzr, [sp, #96]
  411858:	b	411a04 <wcrtomb@plt+0xf134>
  41185c:	ldr	x0, [sp, #80]
  411860:	bl	4022c0 <strlen@plt>
  411864:	str	x0, [sp, #88]
  411868:	strb	wzr, [sp, #96]
  41186c:	b	411a04 <wcrtomb@plt+0xf134>
  411870:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411874:	add	x3, x3, #0x720
  411878:	mov	w2, #0xb2                  	// #178
  41187c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411880:	add	x1, x1, #0x600
  411884:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411888:	add	x0, x0, #0x628
  41188c:	bl	402830 <__assert_fail@plt>
  411890:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411894:	add	x3, x3, #0x720
  411898:	mov	w2, #0xb3                  	// #179
  41189c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4118a0:	add	x1, x1, #0x600
  4118a4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4118a8:	add	x0, x0, #0x640
  4118ac:	bl	402830 <__assert_fail@plt>
  4118b0:	mov	x0, x22
  4118b4:	bl	4025c0 <mbsinit@plt>
  4118b8:	cbz	w0, 411934 <wcrtomb@plt+0xf064>
  4118bc:	strb	w20, [sp, #128]
  4118c0:	ldr	x19, [sp, #144]
  4118c4:	bl	402670 <__ctype_get_mb_cur_max@plt>
  4118c8:	mov	x1, x0
  4118cc:	mov	x0, x19
  4118d0:	bl	413a20 <wcrtomb@plt+0x11150>
  4118d4:	mov	x3, x22
  4118d8:	mov	x2, x0
  4118dc:	mov	x1, x19
  4118e0:	add	x0, sp, #0xa4
  4118e4:	bl	4169f8 <wcrtomb@plt+0x14128>
  4118e8:	str	x0, [sp, #152]
  4118ec:	cmn	x0, #0x1
  4118f0:	b.eq	411954 <wcrtomb@plt+0xf084>  // b.none
  4118f4:	cmn	x0, #0x2
  4118f8:	b.eq	411a60 <wcrtomb@plt+0xf190>  // b.none
  4118fc:	cbnz	x0, 41191c <wcrtomb@plt+0xf04c>
  411900:	mov	x0, #0x1                   	// #1
  411904:	str	x0, [sp, #152]
  411908:	ldr	x0, [sp, #144]
  41190c:	ldrb	w0, [x0]
  411910:	cbnz	w0, 411a74 <wcrtomb@plt+0xf1a4>
  411914:	ldr	w0, [sp, #164]
  411918:	cbnz	w0, 411a94 <wcrtomb@plt+0xf1c4>
  41191c:	strb	w20, [sp, #160]
  411920:	mov	x0, x22
  411924:	bl	4025c0 <mbsinit@plt>
  411928:	cbz	w0, 411960 <wcrtomb@plt+0xf090>
  41192c:	strb	wzr, [sp, #128]
  411930:	b	411960 <wcrtomb@plt+0xf090>
  411934:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411938:	add	x3, x3, #0x720
  41193c:	mov	w2, #0x96                  	// #150
  411940:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411944:	add	x1, x1, #0x600
  411948:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  41194c:	add	x0, x0, #0x610
  411950:	bl	402830 <__assert_fail@plt>
  411954:	mov	x0, #0x1                   	// #1
  411958:	str	x0, [sp, #152]
  41195c:	strb	wzr, [sp, #160]
  411960:	strb	w20, [sp, #140]
  411964:	ldrb	w0, [sp, #160]
  411968:	cbz	w0, 411d64 <wcrtomb@plt+0xf494>
  41196c:	ldr	w23, [sp, #164]
  411970:	cbz	w23, 411ab4 <wcrtomb@plt+0xf1e4>
  411974:	ldrb	w0, [sp, #96]
  411978:	cbz	w0, 411d5c <wcrtomb@plt+0xf48c>
  41197c:	ldr	w0, [sp, #100]
  411980:	bl	402870 <towlower@plt>
  411984:	mov	w19, w0
  411988:	mov	w0, w23
  41198c:	bl	402870 <towlower@plt>
  411990:	sub	w0, w19, w0
  411994:	cbnz	w0, 411d40 <wcrtomb@plt+0xf470>
  411998:	ldr	x0, [sp, #80]
  41199c:	ldr	x1, [sp, #88]
  4119a0:	add	x0, x0, x1
  4119a4:	str	x0, [sp, #80]
  4119a8:	strb	wzr, [sp, #76]
  4119ac:	ldr	x0, [sp, #144]
  4119b0:	ldr	x1, [sp, #152]
  4119b4:	add	x0, x0, x1
  4119b8:	str	x0, [sp, #144]
  4119bc:	strb	wzr, [sp, #140]
  4119c0:	ldrb	w0, [sp, #76]
  4119c4:	cbnz	w0, 411a08 <wcrtomb@plt+0xf138>
  4119c8:	ldrb	w0, [sp, #64]
  4119cc:	cbnz	w0, 4117b8 <wcrtomb@plt+0xeee8>
  4119d0:	ldr	x3, [sp, #80]
  4119d4:	ldrb	w2, [x3]
  4119d8:	ubfx	x0, x2, #5, #3
  4119dc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4119e0:	add	x1, x1, #0x700
  4119e4:	ldr	w0, [x1, x0, lsl #2]
  4119e8:	lsr	w0, w0, w2
  4119ec:	tbz	w0, #0, 4117a8 <wcrtomb@plt+0xeed8>
  4119f0:	mov	x0, #0x1                   	// #1
  4119f4:	str	x0, [sp, #88]
  4119f8:	ldrb	w1, [x3]
  4119fc:	str	w1, [sp, #100]
  411a00:	strb	w0, [sp, #96]
  411a04:	strb	w20, [sp, #76]
  411a08:	ldrb	w0, [sp, #96]
  411a0c:	cbz	w0, 411a18 <wcrtomb@plt+0xf148>
  411a10:	ldr	w0, [sp, #100]
  411a14:	cbz	w0, 411d8c <wcrtomb@plt+0xf4bc>
  411a18:	ldrb	w0, [sp, #140]
  411a1c:	cbnz	w0, 411964 <wcrtomb@plt+0xf094>
  411a20:	ldrb	w0, [sp, #128]
  411a24:	cbnz	w0, 4118c0 <wcrtomb@plt+0xeff0>
  411a28:	ldr	x3, [sp, #144]
  411a2c:	ldrb	w2, [x3]
  411a30:	ubfx	x0, x2, #5, #3
  411a34:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411a38:	add	x1, x1, #0x700
  411a3c:	ldr	w0, [x1, x0, lsl #2]
  411a40:	lsr	w0, w0, w2
  411a44:	tbz	w0, #0, 4118b0 <wcrtomb@plt+0xefe0>
  411a48:	mov	x0, #0x1                   	// #1
  411a4c:	str	x0, [sp, #152]
  411a50:	ldrb	w1, [x3]
  411a54:	str	w1, [sp, #164]
  411a58:	strb	w0, [sp, #160]
  411a5c:	b	411960 <wcrtomb@plt+0xf090>
  411a60:	ldr	x0, [sp, #144]
  411a64:	bl	4022c0 <strlen@plt>
  411a68:	str	x0, [sp, #152]
  411a6c:	strb	wzr, [sp, #160]
  411a70:	b	411960 <wcrtomb@plt+0xf090>
  411a74:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411a78:	add	x3, x3, #0x720
  411a7c:	mov	w2, #0xb2                  	// #178
  411a80:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411a84:	add	x1, x1, #0x600
  411a88:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411a8c:	add	x0, x0, #0x628
  411a90:	bl	402830 <__assert_fail@plt>
  411a94:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411a98:	add	x3, x3, #0x720
  411a9c:	mov	w2, #0xb3                  	// #179
  411aa0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411aa4:	add	x1, x1, #0x600
  411aa8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411aac:	add	x0, x0, #0x640
  411ab0:	bl	402830 <__assert_fail@plt>
  411ab4:	ldrb	w0, [sp, #76]
  411ab8:	cbz	w0, 411d94 <wcrtomb@plt+0xf4c4>
  411abc:	b	411dd8 <wcrtomb@plt+0xf508>
  411ac0:	add	x0, sp, #0x44
  411ac4:	bl	4025c0 <mbsinit@plt>
  411ac8:	cbz	w0, 411b4c <wcrtomb@plt+0xf27c>
  411acc:	mov	w0, #0x1                   	// #1
  411ad0:	strb	w0, [sp, #64]
  411ad4:	ldr	x19, [sp, #80]
  411ad8:	bl	402670 <__ctype_get_mb_cur_max@plt>
  411adc:	mov	x1, x0
  411ae0:	mov	x0, x19
  411ae4:	bl	413a20 <wcrtomb@plt+0x11150>
  411ae8:	add	x3, sp, #0x44
  411aec:	mov	x2, x0
  411af0:	mov	x1, x19
  411af4:	add	x0, sp, #0x64
  411af8:	bl	4169f8 <wcrtomb@plt+0x14128>
  411afc:	str	x0, [sp, #88]
  411b00:	cmn	x0, #0x1
  411b04:	b.eq	411b6c <wcrtomb@plt+0xf29c>  // b.none
  411b08:	cmn	x0, #0x2
  411b0c:	b.eq	411b7c <wcrtomb@plt+0xf2ac>  // b.none
  411b10:	cbnz	x0, 411b30 <wcrtomb@plt+0xf260>
  411b14:	mov	x0, #0x1                   	// #1
  411b18:	str	x0, [sp, #88]
  411b1c:	ldr	x0, [sp, #80]
  411b20:	ldrb	w0, [x0]
  411b24:	cbnz	w0, 411b90 <wcrtomb@plt+0xf2c0>
  411b28:	ldr	w0, [sp, #100]
  411b2c:	cbnz	w0, 411bb0 <wcrtomb@plt+0xf2e0>
  411b30:	mov	w0, #0x1                   	// #1
  411b34:	strb	w0, [sp, #96]
  411b38:	add	x0, sp, #0x44
  411b3c:	bl	4025c0 <mbsinit@plt>
  411b40:	cbz	w0, 411dd0 <wcrtomb@plt+0xf500>
  411b44:	strb	wzr, [sp, #64]
  411b48:	b	411dd0 <wcrtomb@plt+0xf500>
  411b4c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411b50:	add	x3, x3, #0x720
  411b54:	mov	w2, #0x96                  	// #150
  411b58:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411b5c:	add	x1, x1, #0x600
  411b60:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411b64:	add	x0, x0, #0x610
  411b68:	bl	402830 <__assert_fail@plt>
  411b6c:	mov	x0, #0x1                   	// #1
  411b70:	str	x0, [sp, #88]
  411b74:	strb	wzr, [sp, #96]
  411b78:	b	411dd0 <wcrtomb@plt+0xf500>
  411b7c:	ldr	x0, [sp, #80]
  411b80:	bl	4022c0 <strlen@plt>
  411b84:	str	x0, [sp, #88]
  411b88:	strb	wzr, [sp, #96]
  411b8c:	b	411dd0 <wcrtomb@plt+0xf500>
  411b90:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411b94:	add	x3, x3, #0x720
  411b98:	mov	w2, #0xb2                  	// #178
  411b9c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411ba0:	add	x1, x1, #0x600
  411ba4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411ba8:	add	x0, x0, #0x628
  411bac:	bl	402830 <__assert_fail@plt>
  411bb0:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411bb4:	add	x3, x3, #0x720
  411bb8:	mov	w2, #0xb3                  	// #179
  411bbc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411bc0:	add	x1, x1, #0x600
  411bc4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411bc8:	add	x0, x0, #0x640
  411bcc:	bl	402830 <__assert_fail@plt>
  411bd0:	add	x0, sp, #0x84
  411bd4:	bl	4025c0 <mbsinit@plt>
  411bd8:	cbz	w0, 411c5c <wcrtomb@plt+0xf38c>
  411bdc:	mov	w0, #0x1                   	// #1
  411be0:	strb	w0, [sp, #128]
  411be4:	ldr	x19, [sp, #144]
  411be8:	bl	402670 <__ctype_get_mb_cur_max@plt>
  411bec:	mov	x1, x0
  411bf0:	mov	x0, x19
  411bf4:	bl	413a20 <wcrtomb@plt+0x11150>
  411bf8:	add	x3, sp, #0x84
  411bfc:	mov	x2, x0
  411c00:	mov	x1, x19
  411c04:	add	x0, sp, #0xa4
  411c08:	bl	4169f8 <wcrtomb@plt+0x14128>
  411c0c:	cmn	x0, #0x1
  411c10:	b.eq	411cc0 <wcrtomb@plt+0xf3f0>  // b.none
  411c14:	cmn	x0, #0x2
  411c18:	b.eq	411cc8 <wcrtomb@plt+0xf3f8>  // b.none
  411c1c:	cbnz	x0, 411ca8 <wcrtomb@plt+0xf3d8>
  411c20:	mov	x0, #0x1                   	// #1
  411c24:	str	x0, [sp, #152]
  411c28:	ldr	x0, [sp, #144]
  411c2c:	ldrb	w0, [x0]
  411c30:	cbnz	w0, 411c7c <wcrtomb@plt+0xf3ac>
  411c34:	ldr	w0, [sp, #164]
  411c38:	cbz	w0, 411ca8 <wcrtomb@plt+0xf3d8>
  411c3c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411c40:	add	x3, x3, #0x720
  411c44:	mov	w2, #0xb3                  	// #179
  411c48:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411c4c:	add	x1, x1, #0x600
  411c50:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411c54:	add	x0, x0, #0x640
  411c58:	bl	402830 <__assert_fail@plt>
  411c5c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411c60:	add	x3, x3, #0x720
  411c64:	mov	w2, #0x96                  	// #150
  411c68:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411c6c:	add	x1, x1, #0x600
  411c70:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411c74:	add	x0, x0, #0x610
  411c78:	bl	402830 <__assert_fail@plt>
  411c7c:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  411c80:	add	x3, x3, #0x720
  411c84:	mov	w2, #0xb2                  	// #178
  411c88:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  411c8c:	add	x1, x1, #0x600
  411c90:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411c94:	add	x0, x0, #0x628
  411c98:	bl	402830 <__assert_fail@plt>
  411c9c:	ldrb	w1, [sp, #160]
  411ca0:	mov	w0, #0xffffffff            	// #-1
  411ca4:	cbz	w1, 411d40 <wcrtomb@plt+0xf470>
  411ca8:	ldr	w0, [sp, #164]
  411cac:	cmp	w0, #0x0
  411cb0:	csetm	w0, ne  // ne = any
  411cb4:	b	411d40 <wcrtomb@plt+0xf470>
  411cb8:	mov	w0, #0x1                   	// #1
  411cbc:	b	411d40 <wcrtomb@plt+0xf470>
  411cc0:	mov	w0, #0xffffffff            	// #-1
  411cc4:	b	411d40 <wcrtomb@plt+0xf470>
  411cc8:	mov	w0, #0xffffffff            	// #-1
  411ccc:	b	411d40 <wcrtomb@plt+0xf470>
  411cd0:	mov	w0, #0xffffffff            	// #-1
  411cd4:	b	411d40 <wcrtomb@plt+0xf470>
  411cd8:	bl	402650 <__ctype_b_loc@plt>
  411cdc:	ldr	x24, [x0]
  411ce0:	mov	x20, #0x0                   	// #0
  411ce4:	b	411cf8 <wcrtomb@plt+0xf428>
  411ce8:	cbz	w19, 411d3c <wcrtomb@plt+0xf46c>
  411cec:	add	x20, x20, #0x1
  411cf0:	cmp	w19, w2
  411cf4:	b.ne	411d3c <wcrtomb@plt+0xf46c>  // b.any
  411cf8:	ldrb	w19, [x21, x20]
  411cfc:	and	x23, x19, #0xff
  411d00:	ldrh	w0, [x24, x23, lsl #1]
  411d04:	tbz	w0, #8, 411d18 <wcrtomb@plt+0xf448>
  411d08:	bl	402380 <__ctype_tolower_loc@plt>
  411d0c:	ldr	x0, [x0]
  411d10:	ldr	w0, [x0, x23, lsl #2]
  411d14:	and	w19, w0, #0xff
  411d18:	ldrb	w2, [x22, x20]
  411d1c:	and	x23, x2, #0xff
  411d20:	ldrh	w0, [x24, x23, lsl #1]
  411d24:	tbz	w0, #8, 411ce8 <wcrtomb@plt+0xf418>
  411d28:	bl	402380 <__ctype_tolower_loc@plt>
  411d2c:	ldr	x0, [x0]
  411d30:	ldr	w2, [x0, x23, lsl #2]
  411d34:	and	w2, w2, #0xff
  411d38:	b	411ce8 <wcrtomb@plt+0xf418>
  411d3c:	sub	w0, w19, w2
  411d40:	ldp	x19, x20, [sp, #16]
  411d44:	ldp	x21, x22, [sp, #32]
  411d48:	ldp	x23, x24, [sp, #48]
  411d4c:	ldp	x29, x30, [sp], #192
  411d50:	ret
  411d54:	mov	w0, #0x0                   	// #0
  411d58:	ret
  411d5c:	mov	w0, #0x1                   	// #1
  411d60:	b	411d40 <wcrtomb@plt+0xf470>
  411d64:	ldrb	w0, [sp, #96]
  411d68:	cbnz	w0, 411cd0 <wcrtomb@plt+0xf400>
  411d6c:	ldr	x2, [sp, #88]
  411d70:	ldr	x0, [sp, #152]
  411d74:	cmp	x2, x0
  411d78:	b.ne	411768 <wcrtomb@plt+0xee98>  // b.any
  411d7c:	ldr	x1, [sp, #144]
  411d80:	ldr	x0, [sp, #80]
  411d84:	bl	402610 <memcmp@plt>
  411d88:	b	411994 <wcrtomb@plt+0xf0c4>
  411d8c:	ldrb	w0, [sp, #76]
  411d90:	cbnz	w0, 411dec <wcrtomb@plt+0xf51c>
  411d94:	ldrb	w0, [sp, #64]
  411d98:	cbnz	w0, 411ad4 <wcrtomb@plt+0xf204>
  411d9c:	ldr	x2, [sp, #80]
  411da0:	ldrb	w1, [x2]
  411da4:	ubfx	x3, x1, #5, #3
  411da8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411dac:	add	x0, x0, #0x700
  411db0:	ldr	w0, [x0, x3, lsl #2]
  411db4:	lsr	w0, w0, w1
  411db8:	tbz	w0, #0, 411ac0 <wcrtomb@plt+0xf1f0>
  411dbc:	mov	x0, #0x1                   	// #1
  411dc0:	str	x0, [sp, #88]
  411dc4:	ldrb	w1, [x2]
  411dc8:	str	w1, [sp, #100]
  411dcc:	strb	w0, [sp, #96]
  411dd0:	mov	w0, #0x1                   	// #1
  411dd4:	strb	w0, [sp, #76]
  411dd8:	ldrb	w0, [sp, #96]
  411ddc:	cbz	w0, 411cb8 <wcrtomb@plt+0xf3e8>
  411de0:	ldr	w1, [sp, #100]
  411de4:	mov	w0, #0x1                   	// #1
  411de8:	cbnz	w1, 411d40 <wcrtomb@plt+0xf470>
  411dec:	ldrb	w0, [sp, #140]
  411df0:	cbnz	w0, 411c9c <wcrtomb@plt+0xf3cc>
  411df4:	ldrb	w0, [sp, #128]
  411df8:	cbnz	w0, 411be4 <wcrtomb@plt+0xf314>
  411dfc:	ldr	x2, [sp, #144]
  411e00:	ldrb	w1, [x2]
  411e04:	ubfx	x3, x1, #5, #3
  411e08:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  411e0c:	add	x0, x0, #0x700
  411e10:	ldr	w0, [x0, x3, lsl #2]
  411e14:	lsr	w0, w0, w1
  411e18:	tbz	w0, #0, 411bd0 <wcrtomb@plt+0xf300>
  411e1c:	mov	x0, #0x1                   	// #1
  411e20:	str	x0, [sp, #152]
  411e24:	ldrb	w0, [x2]
  411e28:	str	w0, [sp, #164]
  411e2c:	b	411ca8 <wcrtomb@plt+0xf3d8>
  411e30:	and	w4, w2, #0xff
  411e34:	cmp	w4, w1, uxtb
  411e38:	b.eq	411e80 <wcrtomb@plt+0xf5b0>  // b.none
  411e3c:	and	w5, w1, #0xff
  411e40:	cbz	x3, 411ea4 <wcrtomb@plt+0xf5d4>
  411e44:	add	x7, x0, x3
  411e48:	mov	x6, x7
  411e4c:	tst	x0, #0x7
  411e50:	b.eq	411ea4 <wcrtomb@plt+0xf5d4>  // b.none
  411e54:	ldrb	w3, [x0]
  411e58:	cmp	w3, w5
  411e5c:	ccmp	w3, w4, #0x4, ne  // ne = any
  411e60:	b.eq	411f58 <wcrtomb@plt+0xf688>  // b.none
  411e64:	add	x0, x0, #0x1
  411e68:	sub	x3, x6, x0
  411e6c:	cmp	x0, x7
  411e70:	b.eq	411e9c <wcrtomb@plt+0xf5cc>  // b.none
  411e74:	tst	x0, #0x7
  411e78:	b.ne	411e54 <wcrtomb@plt+0xf584>  // b.any
  411e7c:	b	411ea4 <wcrtomb@plt+0xf5d4>
  411e80:	stp	x29, x30, [sp, #-16]!
  411e84:	mov	x29, sp
  411e88:	mov	x2, x3
  411e8c:	and	w1, w1, #0xff
  411e90:	bl	402720 <memchr@plt>
  411e94:	ldp	x29, x30, [sp], #16
  411e98:	ret
  411e9c:	mov	x0, x7
  411ea0:	mov	x3, #0x0                   	// #0
  411ea4:	ubfiz	w6, w1, #8, #8
  411ea8:	and	w1, w1, #0xff
  411eac:	orr	w1, w6, w1
  411eb0:	sxtw	x9, w1
  411eb4:	ubfiz	w7, w2, #8, #8
  411eb8:	and	w2, w2, #0xff
  411ebc:	orr	w2, w7, w2
  411ec0:	sxtw	x8, w2
  411ec4:	sbfiz	x6, x1, #16, #32
  411ec8:	orr	x6, x6, x9
  411ecc:	sbfiz	x7, x2, #16, #32
  411ed0:	orr	x7, x7, x8
  411ed4:	orr	x6, x6, x6, lsl #32
  411ed8:	orr	x7, x7, x7, lsl #32
  411edc:	cmp	x3, #0x7
  411ee0:	b.ls	411f24 <wcrtomb@plt+0xf654>  // b.plast
  411ee4:	mov	x8, #0xfefefefefefefefe    	// #-72340172838076674
  411ee8:	movk	x8, #0xfeff
  411eec:	ldr	x1, [x0]
  411ef0:	eor	x2, x1, x6
  411ef4:	eor	x1, x1, x7
  411ef8:	add	x9, x2, x8
  411efc:	bic	x2, x9, x2
  411f00:	add	x9, x1, x8
  411f04:	bic	x1, x9, x1
  411f08:	orr	x1, x2, x1
  411f0c:	tst	x1, #0x8080808080808080
  411f10:	b.ne	411f24 <wcrtomb@plt+0xf654>  // b.any
  411f14:	add	x0, x0, #0x8
  411f18:	sub	x3, x3, #0x8
  411f1c:	cmp	x3, #0x7
  411f20:	b.hi	411eec <wcrtomb@plt+0xf61c>  // b.pmore
  411f24:	add	x2, x0, x3
  411f28:	cbz	x3, 411f50 <wcrtomb@plt+0xf680>
  411f2c:	ldrb	w1, [x0]
  411f30:	cmp	w1, w4
  411f34:	ccmp	w1, w5, #0x4, ne  // ne = any
  411f38:	b.eq	411f58 <wcrtomb@plt+0xf688>  // b.none
  411f3c:	add	x0, x0, #0x1
  411f40:	cmp	x2, x0
  411f44:	b.ne	411f2c <wcrtomb@plt+0xf65c>  // b.any
  411f48:	mov	x0, #0x0                   	// #0
  411f4c:	ret
  411f50:	mov	x0, #0x0                   	// #0
  411f54:	ret
  411f58:	ret
  411f5c:	stp	x29, x30, [sp, #-64]!
  411f60:	mov	x29, sp
  411f64:	str	x3, [sp, #56]
  411f68:	mov	w3, #0x0                   	// #0
  411f6c:	tbnz	w2, #6, 411f80 <wcrtomb@plt+0xf6b0>
  411f70:	bl	402810 <openat@plt>
  411f74:	bl	413a58 <wcrtomb@plt+0x11188>
  411f78:	ldp	x29, x30, [sp], #64
  411f7c:	ret
  411f80:	add	x3, sp, #0x40
  411f84:	str	x3, [sp, #16]
  411f88:	str	x3, [sp, #24]
  411f8c:	add	x3, sp, #0x30
  411f90:	str	x3, [sp, #32]
  411f94:	str	wzr, [sp, #44]
  411f98:	str	wzr, [sp, #40]
  411f9c:	ldr	x3, [sp, #24]
  411fa0:	sub	x3, x3, #0x8
  411fa4:	ldr	w3, [x3]
  411fa8:	b	411f70 <wcrtomb@plt+0xf6a0>
  411fac:	stp	xzr, xzr, [x8]
  411fb0:	stp	xzr, xzr, [x8, #16]
  411fb4:	stp	xzr, xzr, [x8, #32]
  411fb8:	str	xzr, [x8, #48]
  411fbc:	cmp	w0, #0xa
  411fc0:	b.eq	411fcc <wcrtomb@plt+0xf6fc>  // b.none
  411fc4:	str	w0, [x8]
  411fc8:	ret
  411fcc:	stp	x29, x30, [sp, #-16]!
  411fd0:	mov	x29, sp
  411fd4:	bl	4025a0 <abort@plt>
  411fd8:	stp	x29, x30, [sp, #-48]!
  411fdc:	mov	x29, sp
  411fe0:	stp	x19, x20, [sp, #16]
  411fe4:	str	x21, [sp, #32]
  411fe8:	mov	x20, x0
  411fec:	mov	w21, w1
  411ff0:	mov	w2, #0x5                   	// #5
  411ff4:	mov	x1, x0
  411ff8:	mov	x0, #0x0                   	// #0
  411ffc:	bl	4027a0 <dcgettext@plt>
  412000:	mov	x19, x0
  412004:	cmp	x20, x0
  412008:	b.eq	412020 <wcrtomb@plt+0xf750>  // b.none
  41200c:	mov	x0, x19
  412010:	ldp	x19, x20, [sp, #16]
  412014:	ldr	x21, [sp, #32]
  412018:	ldp	x29, x30, [sp], #48
  41201c:	ret
  412020:	bl	423958 <_obstack_memory_used@@Base+0xcb70>
  412024:	ldrb	w1, [x0]
  412028:	and	w1, w1, #0xffffffdf
  41202c:	cmp	w1, #0x55
  412030:	b.ne	4120b0 <wcrtomb@plt+0xf7e0>  // b.any
  412034:	ldrb	w1, [x0, #1]
  412038:	and	w1, w1, #0xffffffdf
  41203c:	cmp	w1, #0x54
  412040:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  412044:	ldrb	w1, [x0, #2]
  412048:	and	w1, w1, #0xffffffdf
  41204c:	cmp	w1, #0x46
  412050:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  412054:	ldrb	w1, [x0, #3]
  412058:	cmp	w1, #0x2d
  41205c:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  412060:	ldrb	w1, [x0, #4]
  412064:	cmp	w1, #0x38
  412068:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  41206c:	ldrb	w0, [x0, #5]
  412070:	cbz	w0, 412090 <wcrtomb@plt+0xf7c0>
  412074:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xf218>
  412078:	add	x0, x19, #0x760
  41207c:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xf218>
  412080:	add	x19, x19, #0x738
  412084:	cmp	w21, #0x9
  412088:	csel	x19, x19, x0, eq  // eq = none
  41208c:	b	41200c <wcrtomb@plt+0xf73c>
  412090:	ldrb	w1, [x19]
  412094:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xf218>
  412098:	add	x0, x19, #0x740
  41209c:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xf218>
  4120a0:	add	x19, x19, #0x758
  4120a4:	cmp	w1, #0x60
  4120a8:	csel	x19, x19, x0, eq  // eq = none
  4120ac:	b	41200c <wcrtomb@plt+0xf73c>
  4120b0:	cmp	w1, #0x47
  4120b4:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  4120b8:	ldrb	w1, [x0, #1]
  4120bc:	and	w1, w1, #0xffffffdf
  4120c0:	cmp	w1, #0x42
  4120c4:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  4120c8:	ldrb	w1, [x0, #2]
  4120cc:	cmp	w1, #0x31
  4120d0:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  4120d4:	ldrb	w1, [x0, #3]
  4120d8:	cmp	w1, #0x38
  4120dc:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  4120e0:	ldrb	w1, [x0, #4]
  4120e4:	cmp	w1, #0x30
  4120e8:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  4120ec:	ldrb	w1, [x0, #5]
  4120f0:	cmp	w1, #0x33
  4120f4:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  4120f8:	ldrb	w1, [x0, #6]
  4120fc:	cmp	w1, #0x30
  412100:	b.ne	412074 <wcrtomb@plt+0xf7a4>  // b.any
  412104:	ldrb	w0, [x0, #7]
  412108:	cbnz	w0, 412074 <wcrtomb@plt+0xf7a4>
  41210c:	ldrb	w1, [x19]
  412110:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xf218>
  412114:	add	x0, x19, #0x748
  412118:	adrp	x19, 426000 <_obstack_memory_used@@Base+0xf218>
  41211c:	add	x19, x19, #0x750
  412120:	cmp	w1, #0x60
  412124:	csel	x19, x19, x0, eq  // eq = none
  412128:	b	41200c <wcrtomb@plt+0xf73c>
  41212c:	sub	sp, sp, #0xf0
  412130:	stp	x29, x30, [sp, #16]
  412134:	add	x29, sp, #0x10
  412138:	stp	x19, x20, [sp, #32]
  41213c:	stp	x21, x22, [sp, #48]
  412140:	stp	x23, x24, [sp, #64]
  412144:	stp	x25, x26, [sp, #80]
  412148:	stp	x27, x28, [sp, #96]
  41214c:	mov	x28, x0
  412150:	mov	x26, x1
  412154:	str	x2, [sp, #136]
  412158:	mov	x24, x3
  41215c:	mov	w25, w4
  412160:	mov	w19, w5
  412164:	str	w5, [sp, #184]
  412168:	str	x6, [sp, #152]
  41216c:	str	x7, [sp, #200]
  412170:	bl	402670 <__ctype_get_mb_cur_max@plt>
  412174:	str	x0, [sp, #168]
  412178:	mov	x0, x19
  41217c:	ubfx	x0, x0, #1, #1
  412180:	str	x0, [sp, #112]
  412184:	mov	w0, #0x1                   	// #1
  412188:	str	w0, [sp, #128]
  41218c:	str	wzr, [sp, #180]
  412190:	str	wzr, [sp, #124]
  412194:	str	wzr, [sp, #132]
  412198:	str	xzr, [sp, #144]
  41219c:	str	xzr, [sp, #160]
  4121a0:	str	xzr, [sp, #192]
  4121a4:	mov	w23, w25
  4121a8:	mov	x25, x24
  4121ac:	cmp	w23, #0x4
  4121b0:	b.eq	412320 <wcrtomb@plt+0xfa50>  // b.none
  4121b4:	b.ls	412204 <wcrtomb@plt+0xf934>  // b.plast
  4121b8:	cmp	w23, #0x7
  4121bc:	b.eq	412390 <wcrtomb@plt+0xfac0>  // b.none
  4121c0:	b.ls	412250 <wcrtomb@plt+0xf980>  // b.plast
  4121c4:	sub	w0, w23, #0x8
  4121c8:	cmp	w0, #0x2
  4121cc:	b.hi	412380 <wcrtomb@plt+0xfab0>  // b.pmore
  4121d0:	cmp	w23, #0xa
  4121d4:	b.ne	4122c4 <wcrtomb@plt+0xf9f4>  // b.any
  4121d8:	mov	x27, #0x0                   	// #0
  4121dc:	ldr	w0, [sp, #112]
  4121e0:	cbz	w0, 4122f0 <wcrtomb@plt+0xfa20>
  4121e4:	ldr	x0, [sp, #240]
  4121e8:	bl	4022c0 <strlen@plt>
  4121ec:	str	x0, [sp, #144]
  4121f0:	ldr	x0, [sp, #240]
  4121f4:	str	x0, [sp, #160]
  4121f8:	mov	w0, #0x1                   	// #1
  4121fc:	str	w0, [sp, #132]
  412200:	b	412288 <wcrtomb@plt+0xf9b8>
  412204:	cmp	w23, #0x2
  412208:	b.eq	41235c <wcrtomb@plt+0xfa8c>  // b.none
  41220c:	b.ls	41221c <wcrtomb@plt+0xf94c>  // b.plast
  412210:	mov	w0, #0x1                   	// #1
  412214:	str	w0, [sp, #132]
  412218:	b	412228 <wcrtomb@plt+0xf958>
  41221c:	cbz	w23, 412384 <wcrtomb@plt+0xfab4>
  412220:	cmp	w23, #0x1
  412224:	b.ne	412380 <wcrtomb@plt+0xfab0>  // b.any
  412228:	mov	w0, #0x1                   	// #1
  41222c:	str	w0, [sp, #112]
  412230:	mov	x0, #0x1                   	// #1
  412234:	str	x0, [sp, #144]
  412238:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  41223c:	add	x0, x0, #0x760
  412240:	str	x0, [sp, #160]
  412244:	mov	x27, #0x0                   	// #0
  412248:	mov	w23, #0x2                   	// #2
  41224c:	b	412288 <wcrtomb@plt+0xf9b8>
  412250:	cmp	w23, #0x5
  412254:	b.eq	412290 <wcrtomb@plt+0xf9c0>  // b.none
  412258:	cmp	w23, #0x6
  41225c:	b.ne	412380 <wcrtomb@plt+0xfab0>  // b.any
  412260:	mov	w0, #0x1                   	// #1
  412264:	str	w0, [sp, #112]
  412268:	str	w0, [sp, #132]
  41226c:	mov	x0, #0x1                   	// #1
  412270:	str	x0, [sp, #144]
  412274:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  412278:	add	x0, x0, #0x738
  41227c:	str	x0, [sp, #160]
  412280:	mov	x27, #0x0                   	// #0
  412284:	mov	w23, #0x5                   	// #5
  412288:	mov	x24, #0x0                   	// #0
  41228c:	b	412d7c <wcrtomb@plt+0x104ac>
  412290:	ldr	w0, [sp, #112]
  412294:	cbnz	w0, 4123a4 <wcrtomb@plt+0xfad4>
  412298:	cbz	x26, 4123c8 <wcrtomb@plt+0xfaf8>
  41229c:	mov	w0, #0x22                  	// #34
  4122a0:	strb	w0, [x28]
  4122a4:	mov	w0, #0x1                   	// #1
  4122a8:	str	w0, [sp, #132]
  4122ac:	mov	x27, #0x1                   	// #1
  4122b0:	str	x27, [sp, #144]
  4122b4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4122b8:	add	x0, x0, #0x738
  4122bc:	str	x0, [sp, #160]
  4122c0:	b	412288 <wcrtomb@plt+0xf9b8>
  4122c4:	mov	w1, w23
  4122c8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4122cc:	add	x0, x0, #0x768
  4122d0:	bl	411fd8 <wcrtomb@plt+0xf708>
  4122d4:	str	x0, [sp, #200]
  4122d8:	mov	w1, w23
  4122dc:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4122e0:	add	x0, x0, #0x760
  4122e4:	bl	411fd8 <wcrtomb@plt+0xf708>
  4122e8:	str	x0, [sp, #240]
  4122ec:	b	4121d8 <wcrtomb@plt+0xf908>
  4122f0:	ldr	x1, [sp, #200]
  4122f4:	ldrb	w0, [x1]
  4122f8:	cbnz	w0, 412310 <wcrtomb@plt+0xfa40>
  4122fc:	mov	x27, #0x0                   	// #0
  412300:	b	4121e4 <wcrtomb@plt+0xf914>
  412304:	add	x27, x27, #0x1
  412308:	ldrb	w0, [x1, x27]
  41230c:	cbz	w0, 4121e4 <wcrtomb@plt+0xf914>
  412310:	cmp	x26, x27
  412314:	b.ls	412304 <wcrtomb@plt+0xfa34>  // b.plast
  412318:	strb	w0, [x28, x27]
  41231c:	b	412304 <wcrtomb@plt+0xfa34>
  412320:	ldr	w0, [sp, #112]
  412324:	cbnz	w0, 412228 <wcrtomb@plt+0xf958>
  412328:	mov	w0, #0x1                   	// #1
  41232c:	str	w0, [sp, #132]
  412330:	cbz	x26, 4123e8 <wcrtomb@plt+0xfb18>
  412334:	mov	w0, #0x27                  	// #39
  412338:	strb	w0, [x28]
  41233c:	str	wzr, [sp, #112]
  412340:	mov	x27, #0x1                   	// #1
  412344:	str	x27, [sp, #144]
  412348:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  41234c:	add	x0, x0, #0x760
  412350:	str	x0, [sp, #160]
  412354:	mov	w23, #0x2                   	// #2
  412358:	b	412288 <wcrtomb@plt+0xf9b8>
  41235c:	ldr	w0, [sp, #112]
  412360:	cbz	w0, 412330 <wcrtomb@plt+0xfa60>
  412364:	mov	x0, #0x1                   	// #1
  412368:	str	x0, [sp, #144]
  41236c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  412370:	add	x0, x0, #0x760
  412374:	str	x0, [sp, #160]
  412378:	mov	x27, #0x0                   	// #0
  41237c:	b	412288 <wcrtomb@plt+0xf9b8>
  412380:	bl	4025a0 <abort@plt>
  412384:	str	wzr, [sp, #112]
  412388:	mov	x27, #0x0                   	// #0
  41238c:	b	412288 <wcrtomb@plt+0xf9b8>
  412390:	str	wzr, [sp, #112]
  412394:	mov	w0, #0x1                   	// #1
  412398:	str	w0, [sp, #132]
  41239c:	mov	x27, #0x0                   	// #0
  4123a0:	b	412288 <wcrtomb@plt+0xf9b8>
  4123a4:	ldr	w0, [sp, #112]
  4123a8:	str	w0, [sp, #132]
  4123ac:	mov	x0, #0x1                   	// #1
  4123b0:	str	x0, [sp, #144]
  4123b4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4123b8:	add	x0, x0, #0x738
  4123bc:	str	x0, [sp, #160]
  4123c0:	mov	x27, #0x0                   	// #0
  4123c4:	b	412288 <wcrtomb@plt+0xf9b8>
  4123c8:	mov	w0, #0x1                   	// #1
  4123cc:	str	w0, [sp, #132]
  4123d0:	mov	x27, #0x1                   	// #1
  4123d4:	str	x27, [sp, #144]
  4123d8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4123dc:	add	x0, x0, #0x738
  4123e0:	str	x0, [sp, #160]
  4123e4:	b	412288 <wcrtomb@plt+0xf9b8>
  4123e8:	str	wzr, [sp, #112]
  4123ec:	mov	x27, #0x1                   	// #1
  4123f0:	str	x27, [sp, #144]
  4123f4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4123f8:	add	x0, x0, #0x760
  4123fc:	str	x0, [sp, #160]
  412400:	mov	w23, #0x2                   	// #2
  412404:	b	412288 <wcrtomb@plt+0xf9b8>
  412408:	ldr	x0, [sp, #144]
  41240c:	add	x20, x24, x0
  412410:	cmp	x0, #0x1
  412414:	ccmn	x25, #0x1, #0x0, hi  // hi = pmore
  412418:	b.ne	412428 <wcrtomb@plt+0xfb58>  // b.any
  41241c:	ldr	x0, [sp, #136]
  412420:	bl	4022c0 <strlen@plt>
  412424:	mov	x25, x0
  412428:	cmp	x20, x25
  41242c:	b.hi	413058 <wcrtomb@plt+0x10788>  // b.pmore
  412430:	ldr	x0, [sp, #136]
  412434:	add	x20, x0, x24
  412438:	ldr	x2, [sp, #144]
  41243c:	ldr	x1, [sp, #160]
  412440:	mov	x0, x20
  412444:	bl	402610 <memcmp@plt>
  412448:	cbnz	w0, 413058 <wcrtomb@plt+0x10788>
  41244c:	ldr	w0, [sp, #112]
  412450:	cbnz	w0, 412478 <wcrtomb@plt+0xfba8>
  412454:	ldrb	w20, [x20]
  412458:	cmp	w20, #0x7e
  41245c:	b.hi	412944 <wcrtomb@plt+0x10074>  // b.pmore
  412460:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  412464:	add	x0, x0, #0x7d8
  412468:	ldrh	w0, [x0, w20, uxtw #1]
  41246c:	adr	x1, 412478 <wcrtomb@plt+0xfba8>
  412470:	add	x0, x1, w0, sxth #2
  412474:	br	x0
  412478:	mov	x24, x25
  41247c:	mov	w25, w23
  412480:	b	412fe0 <wcrtomb@plt+0x10710>
  412484:	ldr	w0, [sp, #132]
  412488:	cbnz	w0, 4124a4 <wcrtomb@plt+0xfbd4>
  41248c:	ldr	x0, [sp, #184]
  412490:	tbnz	w0, #0, 412d78 <wcrtomb@plt+0x104a8>
  412494:	ldr	w0, [sp, #132]
  412498:	mov	w22, w0
  41249c:	mov	w19, w0
  4124a0:	b	412cb8 <wcrtomb@plt+0x103e8>
  4124a4:	ldr	w0, [sp, #112]
  4124a8:	cbnz	w0, 412f94 <wcrtomb@plt+0x106c4>
  4124ac:	mov	w22, w0
  4124b0:	cmp	w23, #0x2
  4124b4:	cset	w1, eq  // eq = none
  4124b8:	ldr	w0, [sp, #124]
  4124bc:	eor	w0, w0, #0x1
  4124c0:	ands	w0, w1, w0
  4124c4:	b.eq	412528 <wcrtomb@plt+0xfc58>  // b.none
  4124c8:	cmp	x26, x27
  4124cc:	b.ls	4124d8 <wcrtomb@plt+0xfc08>  // b.plast
  4124d0:	mov	w1, #0x27                  	// #39
  4124d4:	strb	w1, [x28, x27]
  4124d8:	add	x1, x27, #0x1
  4124dc:	cmp	x26, x1
  4124e0:	b.ls	4124ec <wcrtomb@plt+0xfc1c>  // b.plast
  4124e4:	mov	w2, #0x24                  	// #36
  4124e8:	strb	w2, [x28, x1]
  4124ec:	add	x1, x27, #0x2
  4124f0:	cmp	x26, x1
  4124f4:	b.ls	412500 <wcrtomb@plt+0xfc30>  // b.plast
  4124f8:	mov	w2, #0x27                  	// #39
  4124fc:	strb	w2, [x28, x1]
  412500:	add	x1, x27, #0x3
  412504:	cmp	x26, x1
  412508:	b.ls	413044 <wcrtomb@plt+0x10774>  // b.plast
  41250c:	mov	w2, #0x5c                  	// #92
  412510:	strb	w2, [x28, x1]
  412514:	add	x27, x27, #0x4
  412518:	str	w0, [sp, #124]
  41251c:	mov	w19, #0x0                   	// #0
  412520:	mov	w20, #0x30                  	// #48
  412524:	b	412ce0 <wcrtomb@plt+0x10410>
  412528:	cmp	x26, x27
  41252c:	b.hi	41254c <wcrtomb@plt+0xfc7c>  // b.pmore
  412530:	add	x2, x27, #0x1
  412534:	cbnz	w21, 41255c <wcrtomb@plt+0xfc8c>
  412538:	mov	w0, w19
  41253c:	mov	w19, w21
  412540:	mov	x27, x2
  412544:	mov	w20, #0x30                  	// #48
  412548:	b	412cb8 <wcrtomb@plt+0x103e8>
  41254c:	mov	w1, #0x5c                  	// #92
  412550:	strb	w1, [x28, x27]
  412554:	add	x2, x27, #0x1
  412558:	cbz	w21, 412598 <wcrtomb@plt+0xfcc8>
  41255c:	add	x1, x24, #0x1
  412560:	cmp	x1, x25
  412564:	b.cs	412580 <wcrtomb@plt+0xfcb0>  // b.hs, b.nlast
  412568:	ldr	x3, [sp, #136]
  41256c:	ldrb	w1, [x3, x1]
  412570:	sub	w1, w1, #0x30
  412574:	and	w1, w1, #0xff
  412578:	cmp	w1, #0x9
  41257c:	b.ls	4125ac <wcrtomb@plt+0xfcdc>  // b.plast
  412580:	mov	w1, w0
  412584:	mov	w0, w19
  412588:	mov	w19, w1
  41258c:	mov	x27, x2
  412590:	mov	w20, #0x30                  	// #48
  412594:	b	412cc8 <wcrtomb@plt+0x103f8>
  412598:	mov	w0, w19
  41259c:	mov	w19, w21
  4125a0:	mov	x27, x2
  4125a4:	mov	w20, #0x30                  	// #48
  4125a8:	b	412ce0 <wcrtomb@plt+0x10410>
  4125ac:	cmp	x26, x2
  4125b0:	b.ls	4125bc <wcrtomb@plt+0xfcec>  // b.plast
  4125b4:	mov	w1, #0x30                  	// #48
  4125b8:	strb	w1, [x28, x2]
  4125bc:	add	x1, x27, #0x2
  4125c0:	cmp	x26, x1
  4125c4:	b.ls	4125d0 <wcrtomb@plt+0xfd00>  // b.plast
  4125c8:	mov	w2, #0x30                  	// #48
  4125cc:	strb	w2, [x28, x1]
  4125d0:	add	x2, x27, #0x3
  4125d4:	b	412580 <wcrtomb@plt+0xfcb0>
  4125d8:	mov	w22, #0x0                   	// #0
  4125dc:	cmp	w23, #0x2
  4125e0:	b.eq	4125fc <wcrtomb@plt+0xfd2c>  // b.none
  4125e4:	cmp	w23, #0x5
  4125e8:	b.eq	412610 <wcrtomb@plt+0xfd40>  // b.none
  4125ec:	mov	w19, #0x0                   	// #0
  4125f0:	mov	w0, #0x0                   	// #0
  4125f4:	mov	w20, #0x3f                  	// #63
  4125f8:	b	412cb8 <wcrtomb@plt+0x103e8>
  4125fc:	ldr	w0, [sp, #112]
  412600:	cbnz	w0, 412fa0 <wcrtomb@plt+0x106d0>
  412604:	mov	w19, w0
  412608:	mov	w20, #0x3f                  	// #63
  41260c:	b	41292c <wcrtomb@plt+0x1005c>
  412610:	ldr	x0, [sp, #184]
  412614:	tbz	w0, #2, 412de0 <wcrtomb@plt+0x10510>
  412618:	add	x4, x24, #0x2
  41261c:	cmp	x4, x25
  412620:	b.cs	412df0 <wcrtomb@plt+0x10520>  // b.hs, b.nlast
  412624:	ldr	x0, [sp, #136]
  412628:	add	x0, x0, x24
  41262c:	ldrb	w20, [x0, #1]
  412630:	cmp	w20, #0x3f
  412634:	b.eq	412648 <wcrtomb@plt+0xfd78>  // b.none
  412638:	mov	w19, #0x0                   	// #0
  41263c:	mov	w0, #0x0                   	// #0
  412640:	mov	w20, #0x3f                  	// #63
  412644:	b	412cb8 <wcrtomb@plt+0x103e8>
  412648:	ldr	x0, [sp, #136]
  41264c:	ldrb	w3, [x0, x4]
  412650:	cmp	w3, #0x3e
  412654:	b.hi	412e00 <wcrtomb@plt+0x10530>  // b.pmore
  412658:	mov	x1, #0x1                   	// #1
  41265c:	lsl	x1, x1, x3
  412660:	mov	w19, #0x0                   	// #0
  412664:	mov	w0, #0x0                   	// #0
  412668:	mov	x2, #0xa38200000000        	// #179778741075968
  41266c:	movk	x2, #0x7000, lsl #48
  412670:	tst	x1, x2
  412674:	b.eq	412cb8 <wcrtomb@plt+0x103e8>  // b.none
  412678:	ldr	w0, [sp, #112]
  41267c:	cbnz	w0, 413038 <wcrtomb@plt+0x10768>
  412680:	cmp	x26, x27
  412684:	b.ls	412690 <wcrtomb@plt+0xfdc0>  // b.plast
  412688:	mov	w0, #0x3f                  	// #63
  41268c:	strb	w0, [x28, x27]
  412690:	add	x0, x27, #0x1
  412694:	cmp	x26, x0
  412698:	b.ls	4126a4 <wcrtomb@plt+0xfdd4>  // b.plast
  41269c:	mov	w1, #0x22                  	// #34
  4126a0:	strb	w1, [x28, x0]
  4126a4:	add	x0, x27, #0x2
  4126a8:	cmp	x26, x0
  4126ac:	b.ls	4126b8 <wcrtomb@plt+0xfde8>  // b.plast
  4126b0:	mov	w1, #0x22                  	// #34
  4126b4:	strb	w1, [x28, x0]
  4126b8:	add	x0, x27, #0x3
  4126bc:	cmp	x26, x0
  4126c0:	b.ls	4126cc <wcrtomb@plt+0xfdfc>  // b.plast
  4126c4:	mov	w1, #0x3f                  	// #63
  4126c8:	strb	w1, [x28, x0]
  4126cc:	add	x27, x27, #0x4
  4126d0:	ldr	w0, [sp, #112]
  4126d4:	mov	w19, w0
  4126d8:	mov	w20, w3
  4126dc:	mov	x24, x4
  4126e0:	b	412cb8 <wcrtomb@plt+0x103e8>
  4126e4:	mov	w22, #0x0                   	// #0
  4126e8:	mov	w20, #0x8                   	// #8
  4126ec:	mov	w0, #0x62                  	// #98
  4126f0:	b	412720 <wcrtomb@plt+0xfe50>
  4126f4:	mov	w22, #0x0                   	// #0
  4126f8:	mov	w20, #0xc                   	// #12
  4126fc:	mov	w0, #0x66                  	// #102
  412700:	b	412720 <wcrtomb@plt+0xfe50>
  412704:	mov	w22, #0x0                   	// #0
  412708:	mov	w20, #0xd                   	// #13
  41270c:	mov	w0, #0x72                  	// #114
  412710:	ldr	w1, [sp, #112]
  412714:	cmp	w1, #0x0
  412718:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  41271c:	b.eq	4127f8 <wcrtomb@plt+0xff28>  // b.none
  412720:	ldr	w1, [sp, #132]
  412724:	cbnz	w1, 412e34 <wcrtomb@plt+0x10564>
  412728:	mov	w19, w1
  41272c:	mov	w0, w1
  412730:	b	412cb8 <wcrtomb@plt+0x103e8>
  412734:	mov	w22, #0x0                   	// #0
  412738:	mov	w20, #0x9                   	// #9
  41273c:	mov	w0, #0x74                  	// #116
  412740:	b	412710 <wcrtomb@plt+0xfe40>
  412744:	mov	w22, #0x0                   	// #0
  412748:	mov	w20, #0xb                   	// #11
  41274c:	mov	w0, #0x76                  	// #118
  412750:	b	412720 <wcrtomb@plt+0xfe50>
  412754:	mov	w22, #0x0                   	// #0
  412758:	cmp	w23, #0x2
  41275c:	b.eq	412788 <wcrtomb@plt+0xfeb8>  // b.none
  412760:	ldr	w0, [sp, #132]
  412764:	cmp	w0, #0x0
  412768:	ldr	w0, [sp, #112]
  41276c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412770:	ldr	w0, [sp, #176]
  412774:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412778:	b.ne	412e4c <wcrtomb@plt+0x1057c>  // b.any
  41277c:	mov	w20, #0x5c                  	// #92
  412780:	mov	w0, w20
  412784:	b	412720 <wcrtomb@plt+0xfe50>
  412788:	ldr	w0, [sp, #112]
  41278c:	cbnz	w0, 412fac <wcrtomb@plt+0x106dc>
  412790:	mov	w19, w0
  412794:	mov	w20, #0x5c                  	// #92
  412798:	eor	w0, w0, #0x1
  41279c:	ldr	w1, [sp, #124]
  4127a0:	and	w0, w1, w0
  4127a4:	tst	w0, #0xff
  4127a8:	b.eq	412d58 <wcrtomb@plt+0x10488>  // b.none
  4127ac:	cmp	x26, x27
  4127b0:	b.ls	4127bc <wcrtomb@plt+0xfeec>  // b.plast
  4127b4:	mov	w0, #0x27                  	// #39
  4127b8:	strb	w0, [x28, x27]
  4127bc:	add	x0, x27, #0x1
  4127c0:	cmp	x26, x0
  4127c4:	b.ls	4127d0 <wcrtomb@plt+0xff00>  // b.plast
  4127c8:	mov	w1, #0x27                  	// #39
  4127cc:	strb	w1, [x28, x0]
  4127d0:	add	x27, x27, #0x2
  4127d4:	str	wzr, [sp, #124]
  4127d8:	b	412d58 <wcrtomb@plt+0x10488>
  4127dc:	mov	w0, #0x6e                  	// #110
  4127e0:	b	412710 <wcrtomb@plt+0xfe40>
  4127e4:	mov	w0, #0x6e                  	// #110
  4127e8:	b	412710 <wcrtomb@plt+0xfe40>
  4127ec:	mov	w22, #0x0                   	// #0
  4127f0:	mov	w0, #0x6e                  	// #110
  4127f4:	b	412710 <wcrtomb@plt+0xfe40>
  4127f8:	mov	x24, x25
  4127fc:	mov	w25, #0x2                   	// #2
  412800:	b	412fcc <wcrtomb@plt+0x106fc>
  412804:	mov	w0, #0x61                  	// #97
  412808:	b	412720 <wcrtomb@plt+0xfe50>
  41280c:	mov	w0, #0x61                  	// #97
  412810:	b	412720 <wcrtomb@plt+0xfe50>
  412814:	mov	w22, #0x0                   	// #0
  412818:	cmp	x25, #0x1
  41281c:	cset	w0, ne  // ne = any
  412820:	cmn	x25, #0x1
  412824:	b.eq	41283c <wcrtomb@plt+0xff6c>  // b.none
  412828:	cbnz	w0, 412e0c <wcrtomb@plt+0x1053c>
  41282c:	cbz	x24, 412864 <wcrtomb@plt+0xff94>
  412830:	mov	w19, #0x0                   	// #0
  412834:	mov	w0, #0x0                   	// #0
  412838:	b	412cb8 <wcrtomb@plt+0x103e8>
  41283c:	ldr	x0, [sp, #136]
  412840:	ldrb	w0, [x0, #1]
  412844:	cmp	w0, #0x0
  412848:	cset	w0, ne  // ne = any
  41284c:	b	412828 <wcrtomb@plt+0xff58>
  412850:	mov	w22, #0x0                   	// #0
  412854:	b	41282c <wcrtomb@plt+0xff5c>
  412858:	mov	w22, #0x0                   	// #0
  41285c:	b	412864 <wcrtomb@plt+0xff94>
  412860:	mov	w19, w22
  412864:	cmp	w23, #0x2
  412868:	cset	w0, eq  // eq = none
  41286c:	ldr	w1, [sp, #112]
  412870:	ands	w0, w1, w0
  412874:	b.eq	412cb8 <wcrtomb@plt+0x103e8>  // b.none
  412878:	mov	x24, x25
  41287c:	mov	w25, #0x2                   	// #2
  412880:	b	412fcc <wcrtomb@plt+0x106fc>
  412884:	ldr	w19, [sp, #112]
  412888:	b	412864 <wcrtomb@plt+0xff94>
  41288c:	mov	w22, #0x0                   	// #0
  412890:	mov	w19, #0x0                   	// #0
  412894:	b	412864 <wcrtomb@plt+0xff94>
  412898:	mov	w22, #0x0                   	// #0
  41289c:	cmp	w23, #0x2
  4128a0:	b.eq	4128b4 <wcrtomb@plt+0xffe4>  // b.none
  4128a4:	str	w19, [sp, #180]
  4128a8:	mov	w0, #0x0                   	// #0
  4128ac:	mov	w20, #0x27                  	// #39
  4128b0:	b	412cb8 <wcrtomb@plt+0x103e8>
  4128b4:	ldr	w0, [sp, #112]
  4128b8:	cbnz	w0, 412fb8 <wcrtomb@plt+0x106e8>
  4128bc:	cmp	x26, #0x0
  4128c0:	mov	x0, #0x0                   	// #0
  4128c4:	ldr	x1, [sp, #192]
  4128c8:	ccmp	x1, #0x0, #0x0, ne  // ne = any
  4128cc:	b.eq	4128fc <wcrtomb@plt+0x1002c>  // b.none
  4128d0:	cmp	x26, x27
  4128d4:	b.ls	4128e0 <wcrtomb@plt+0x10010>  // b.plast
  4128d8:	mov	w0, #0x27                  	// #39
  4128dc:	strb	w0, [x28, x27]
  4128e0:	add	x0, x27, #0x1
  4128e4:	cmp	x26, x0
  4128e8:	b.ls	412934 <wcrtomb@plt+0x10064>  // b.plast
  4128ec:	mov	w1, #0x5c                  	// #92
  4128f0:	strb	w1, [x28, x0]
  4128f4:	mov	x0, x26
  4128f8:	ldr	x26, [sp, #192]
  4128fc:	add	x1, x27, #0x2
  412900:	cmp	x1, x0
  412904:	b.cs	412910 <wcrtomb@plt+0x10040>  // b.hs, b.nlast
  412908:	mov	w2, #0x27                  	// #39
  41290c:	strb	w2, [x28, x1]
  412910:	add	x27, x27, #0x3
  412914:	str	w19, [sp, #180]
  412918:	ldr	w1, [sp, #112]
  41291c:	str	w1, [sp, #124]
  412920:	str	x26, [sp, #192]
  412924:	mov	x26, x0
  412928:	mov	w20, #0x27                  	// #39
  41292c:	mov	w0, #0x0                   	// #0
  412930:	b	412ce0 <wcrtomb@plt+0x10410>
  412934:	mov	x0, x26
  412938:	ldr	x26, [sp, #192]
  41293c:	b	4128fc <wcrtomb@plt+0x1002c>
  412940:	mov	w22, #0x0                   	// #0
  412944:	ldr	x0, [sp, #168]
  412948:	cmp	x0, #0x1
  41294c:	b.ne	412988 <wcrtomb@plt+0x100b8>  // b.any
  412950:	bl	402650 <__ctype_b_loc@plt>
  412954:	and	x1, x20, #0xff
  412958:	ldr	x0, [x0]
  41295c:	ldrh	w19, [x0, x1, lsl #1]
  412960:	ubfx	x19, x19, #14, #1
  412964:	ldr	x0, [sp, #168]
  412968:	mov	x2, x0
  41296c:	eor	w0, w19, #0x1
  412970:	ldr	w1, [sp, #132]
  412974:	and	w0, w1, w0
  412978:	ands	w0, w0, #0xff
  41297c:	b.eq	412cb8 <wcrtomb@plt+0x103e8>  // b.none
  412980:	mov	w19, #0x0                   	// #0
  412984:	b	412b34 <wcrtomb@plt+0x10264>
  412988:	str	xzr, [sp, #232]
  41298c:	cmn	x25, #0x1
  412990:	b.eq	4129b4 <wcrtomb@plt+0x100e4>  // b.none
  412994:	mov	x0, #0x0                   	// #0
  412998:	str	w21, [sp, #176]
  41299c:	str	w20, [sp, #208]
  4129a0:	str	w22, [sp, #212]
  4129a4:	mov	x22, x0
  4129a8:	str	x27, [sp, #216]
  4129ac:	ldr	w27, [sp, #112]
  4129b0:	b	412a84 <wcrtomb@plt+0x101b4>
  4129b4:	ldr	x0, [sp, #136]
  4129b8:	bl	4022c0 <strlen@plt>
  4129bc:	mov	x25, x0
  4129c0:	b	412994 <wcrtomb@plt+0x100c4>
  4129c4:	ldr	w20, [sp, #208]
  4129c8:	mov	x2, x22
  4129cc:	mov	x0, x21
  4129d0:	ldr	w21, [sp, #176]
  4129d4:	ldr	w22, [sp, #212]
  4129d8:	ldr	x27, [sp, #216]
  4129dc:	mov	w19, #0x0                   	// #0
  4129e0:	cmp	x0, x25
  4129e4:	b.cs	412b2c <wcrtomb@plt+0x1025c>  // b.hs, b.nlast
  4129e8:	mov	x1, x2
  4129ec:	ldr	x2, [sp, #136]
  4129f0:	ldrb	w0, [x2, x0]
  4129f4:	cbz	w0, 412a14 <wcrtomb@plt+0x10144>
  4129f8:	add	x1, x1, #0x1
  4129fc:	add	x0, x24, x1
  412a00:	cmp	x25, x0
  412a04:	b.hi	4129f0 <wcrtomb@plt+0x10120>  // b.pmore
  412a08:	mov	x2, x1
  412a0c:	mov	w19, #0x0                   	// #0
  412a10:	b	412b2c <wcrtomb@plt+0x1025c>
  412a14:	mov	x2, x1
  412a18:	mov	w19, #0x0                   	// #0
  412a1c:	b	412b2c <wcrtomb@plt+0x1025c>
  412a20:	add	x1, x1, #0x1
  412a24:	cmp	x1, x21
  412a28:	b.eq	412a64 <wcrtomb@plt+0x10194>  // b.none
  412a2c:	ldrb	w0, [x1]
  412a30:	sub	w0, w0, #0x5b
  412a34:	and	w0, w0, #0xff
  412a38:	cmp	w0, #0x21
  412a3c:	b.hi	412a20 <wcrtomb@plt+0x10150>  // b.pmore
  412a40:	mov	x2, #0x1                   	// #1
  412a44:	lsl	x0, x2, x0
  412a48:	mov	x2, #0x2b                  	// #43
  412a4c:	movk	x2, #0x2, lsl #32
  412a50:	tst	x0, x2
  412a54:	b.eq	412a20 <wcrtomb@plt+0x10150>  // b.none
  412a58:	mov	x24, x25
  412a5c:	mov	w25, #0x2                   	// #2
  412a60:	b	412fcc <wcrtomb@plt+0x106fc>
  412a64:	ldr	w0, [sp, #228]
  412a68:	bl	4027f0 <iswprint@plt>
  412a6c:	cmp	w0, #0x0
  412a70:	csel	w19, w19, wzr, ne  // ne = any
  412a74:	add	x22, x22, x20
  412a78:	add	x0, sp, #0xe8
  412a7c:	bl	4025c0 <mbsinit@plt>
  412a80:	cbnz	w0, 412ae4 <wcrtomb@plt+0x10214>
  412a84:	add	x21, x24, x22
  412a88:	add	x3, sp, #0xe8
  412a8c:	sub	x2, x25, x21
  412a90:	ldr	x0, [sp, #136]
  412a94:	add	x1, x0, x21
  412a98:	add	x0, sp, #0xe4
  412a9c:	bl	4169f8 <wcrtomb@plt+0x14128>
  412aa0:	mov	x20, x0
  412aa4:	cbz	x0, 412b18 <wcrtomb@plt+0x10248>
  412aa8:	cmn	x0, #0x1
  412aac:	b.eq	412afc <wcrtomb@plt+0x1022c>  // b.none
  412ab0:	cmn	x0, #0x2
  412ab4:	b.eq	4129c4 <wcrtomb@plt+0x100f4>  // b.none
  412ab8:	cmp	w27, #0x0
  412abc:	ccmp	w23, #0x2, #0x0, ne  // ne = any
  412ac0:	b.ne	412a64 <wcrtomb@plt+0x10194>  // b.any
  412ac4:	cmp	x0, #0x1
  412ac8:	b.ls	412a64 <wcrtomb@plt+0x10194>  // b.plast
  412acc:	add	x1, x21, #0x1
  412ad0:	ldr	x0, [sp, #136]
  412ad4:	add	x1, x0, x1
  412ad8:	add	x0, x0, x20
  412adc:	add	x21, x0, x21
  412ae0:	b	412a2c <wcrtomb@plt+0x1015c>
  412ae4:	ldr	w21, [sp, #176]
  412ae8:	ldr	w20, [sp, #208]
  412aec:	mov	x2, x22
  412af0:	ldr	w22, [sp, #212]
  412af4:	ldr	x27, [sp, #216]
  412af8:	b	412b2c <wcrtomb@plt+0x1025c>
  412afc:	ldr	w21, [sp, #176]
  412b00:	ldr	w20, [sp, #208]
  412b04:	mov	x2, x22
  412b08:	ldr	w22, [sp, #212]
  412b0c:	ldr	x27, [sp, #216]
  412b10:	mov	w19, #0x0                   	// #0
  412b14:	b	412b2c <wcrtomb@plt+0x1025c>
  412b18:	ldr	w21, [sp, #176]
  412b1c:	ldr	w20, [sp, #208]
  412b20:	mov	x2, x22
  412b24:	ldr	w22, [sp, #212]
  412b28:	ldr	x27, [sp, #216]
  412b2c:	cmp	x2, #0x1
  412b30:	b.ls	41296c <wcrtomb@plt+0x1009c>  // b.plast
  412b34:	add	x5, x24, x2
  412b38:	mov	w0, #0x0                   	// #0
  412b3c:	eor	w1, w19, #0x1
  412b40:	ldr	w2, [sp, #132]
  412b44:	and	w1, w2, w1
  412b48:	and	w1, w1, #0xff
  412b4c:	mov	w3, w1
  412b50:	mov	w6, #0x5c                  	// #92
  412b54:	mov	w7, #0x24                  	// #36
  412b58:	ldr	w9, [sp, #112]
  412b5c:	ldr	w4, [sp, #124]
  412b60:	ldr	x8, [sp, #136]
  412b64:	b	412be0 <wcrtomb@plt+0x10310>
  412b68:	cbz	w22, 412b7c <wcrtomb@plt+0x102ac>
  412b6c:	cmp	x26, x27
  412b70:	b.ls	412b78 <wcrtomb@plt+0x102a8>  // b.plast
  412b74:	strb	w6, [x28, x27]
  412b78:	add	x27, x27, #0x1
  412b7c:	add	x2, x24, #0x1
  412b80:	cmp	x2, x5
  412b84:	b.cs	412c98 <wcrtomb@plt+0x103c8>  // b.hs, b.nlast
  412b88:	eor	w22, w0, #0x1
  412b8c:	and	w22, w4, w22
  412b90:	ands	w22, w22, #0xff
  412b94:	b.eq	412cac <wcrtomb@plt+0x103dc>  // b.none
  412b98:	cmp	x26, x27
  412b9c:	b.ls	412ba8 <wcrtomb@plt+0x102d8>  // b.plast
  412ba0:	mov	w4, #0x27                  	// #39
  412ba4:	strb	w4, [x28, x27]
  412ba8:	add	x4, x27, #0x1
  412bac:	cmp	x26, x4
  412bb0:	b.ls	412bbc <wcrtomb@plt+0x102ec>  // b.plast
  412bb4:	mov	w10, #0x27                  	// #39
  412bb8:	strb	w10, [x28, x4]
  412bbc:	add	x27, x27, #0x2
  412bc0:	mov	w22, w3
  412bc4:	mov	x24, x2
  412bc8:	mov	w4, w3
  412bcc:	cmp	x26, x27
  412bd0:	b.ls	412bd8 <wcrtomb@plt+0x10308>  // b.plast
  412bd4:	strb	w20, [x28, x27]
  412bd8:	add	x27, x27, #0x1
  412bdc:	ldrb	w20, [x8, x24]
  412be0:	cbz	w1, 412b68 <wcrtomb@plt+0x10298>
  412be4:	cbnz	w9, 412f74 <wcrtomb@plt+0x106a4>
  412be8:	cmp	w23, #0x2
  412bec:	cset	w0, eq  // eq = none
  412bf0:	eor	w2, w4, #0x1
  412bf4:	ands	w0, w0, w2
  412bf8:	b.eq	412c38 <wcrtomb@plt+0x10368>  // b.none
  412bfc:	cmp	x26, x27
  412c00:	b.ls	412c0c <wcrtomb@plt+0x1033c>  // b.plast
  412c04:	mov	w2, #0x27                  	// #39
  412c08:	strb	w2, [x28, x27]
  412c0c:	add	x2, x27, #0x1
  412c10:	cmp	x26, x2
  412c14:	b.ls	412c1c <wcrtomb@plt+0x1034c>  // b.plast
  412c18:	strb	w7, [x28, x2]
  412c1c:	add	x2, x27, #0x2
  412c20:	cmp	x26, x2
  412c24:	b.ls	412c30 <wcrtomb@plt+0x10360>  // b.plast
  412c28:	mov	w4, #0x27                  	// #39
  412c2c:	strb	w4, [x28, x2]
  412c30:	add	x27, x27, #0x3
  412c34:	mov	w4, w0
  412c38:	cmp	x26, x27
  412c3c:	b.ls	412c44 <wcrtomb@plt+0x10374>  // b.plast
  412c40:	strb	w6, [x28, x27]
  412c44:	add	x0, x27, #0x1
  412c48:	cmp	x26, x0
  412c4c:	b.ls	412c5c <wcrtomb@plt+0x1038c>  // b.plast
  412c50:	lsr	w2, w20, #6
  412c54:	add	w2, w2, #0x30
  412c58:	strb	w2, [x28, x0]
  412c5c:	add	x0, x27, #0x2
  412c60:	cmp	x26, x0
  412c64:	b.ls	412c74 <wcrtomb@plt+0x103a4>  // b.plast
  412c68:	ubfx	x2, x20, #3, #3
  412c6c:	add	w2, w2, #0x30
  412c70:	strb	w2, [x28, x0]
  412c74:	add	x27, x27, #0x3
  412c78:	and	w20, w20, #0x7
  412c7c:	add	w20, w20, #0x30
  412c80:	add	x2, x24, #0x1
  412c84:	cmp	x5, x2
  412c88:	b.ls	412ca0 <wcrtomb@plt+0x103d0>  // b.plast
  412c8c:	mov	w0, w3
  412c90:	mov	x24, x2
  412c94:	b	412bcc <wcrtomb@plt+0x102fc>
  412c98:	str	w4, [sp, #124]
  412c9c:	b	412798 <wcrtomb@plt+0xfec8>
  412ca0:	str	w4, [sp, #124]
  412ca4:	mov	w0, w1
  412ca8:	b	412798 <wcrtomb@plt+0xfec8>
  412cac:	mov	x24, x2
  412cb0:	b	412bcc <wcrtomb@plt+0x102fc>
  412cb4:	mov	w0, w22
  412cb8:	cmp	w21, #0x0
  412cbc:	ldr	w1, [sp, #112]
  412cc0:	ccmp	w1, #0x0, #0x0, eq  // eq = none
  412cc4:	b.eq	412ce0 <wcrtomb@plt+0x10410>  // b.none
  412cc8:	ldr	x2, [sp, #152]
  412ccc:	cbz	x2, 412ce0 <wcrtomb@plt+0x10410>
  412cd0:	ubfx	x1, x20, #5, #8
  412cd4:	ldr	w1, [x2, x1, lsl #2]
  412cd8:	lsr	w1, w1, w20
  412cdc:	tbnz	w1, #0, 412ce4 <wcrtomb@plt+0x10414>
  412ce0:	cbz	w22, 412798 <wcrtomb@plt+0xfec8>
  412ce4:	ldr	w0, [sp, #112]
  412ce8:	cbnz	w0, 412fc4 <wcrtomb@plt+0x106f4>
  412cec:	cmp	w23, #0x2
  412cf0:	cset	w0, eq  // eq = none
  412cf4:	ldr	w1, [sp, #124]
  412cf8:	eor	w1, w1, #0x1
  412cfc:	ands	w0, w0, w1
  412d00:	b.eq	412d44 <wcrtomb@plt+0x10474>  // b.none
  412d04:	cmp	x26, x27
  412d08:	b.ls	412d14 <wcrtomb@plt+0x10444>  // b.plast
  412d0c:	mov	w1, #0x27                  	// #39
  412d10:	strb	w1, [x28, x27]
  412d14:	add	x1, x27, #0x1
  412d18:	cmp	x26, x1
  412d1c:	b.ls	412d28 <wcrtomb@plt+0x10458>  // b.plast
  412d20:	mov	w2, #0x24                  	// #36
  412d24:	strb	w2, [x28, x1]
  412d28:	add	x1, x27, #0x2
  412d2c:	cmp	x26, x1
  412d30:	b.ls	412d3c <wcrtomb@plt+0x1046c>  // b.plast
  412d34:	mov	w2, #0x27                  	// #39
  412d38:	strb	w2, [x28, x1]
  412d3c:	add	x27, x27, #0x3
  412d40:	str	w0, [sp, #124]
  412d44:	cmp	x26, x27
  412d48:	b.ls	412d54 <wcrtomb@plt+0x10484>  // b.plast
  412d4c:	mov	w0, #0x5c                  	// #92
  412d50:	strb	w0, [x28, x27]
  412d54:	add	x27, x27, #0x1
  412d58:	cmp	x27, x26
  412d5c:	b.cs	412d64 <wcrtomb@plt+0x10494>  // b.hs, b.nlast
  412d60:	strb	w20, [x28, x27]
  412d64:	add	x27, x27, #0x1
  412d68:	cmp	w19, #0x0
  412d6c:	ldr	w0, [sp, #128]
  412d70:	csel	w0, w0, w19, ne  // ne = any
  412d74:	str	w0, [sp, #128]
  412d78:	add	x24, x24, #0x1
  412d7c:	cmp	x25, x24
  412d80:	cset	w19, ne  // ne = any
  412d84:	cmn	x25, #0x1
  412d88:	b.eq	412e5c <wcrtomb@plt+0x1058c>  // b.none
  412d8c:	cbz	w19, 412e70 <wcrtomb@plt+0x105a0>
  412d90:	cmp	w23, #0x2
  412d94:	cset	w21, ne  // ne = any
  412d98:	ldr	w0, [sp, #132]
  412d9c:	and	w21, w0, w21
  412da0:	ldr	x0, [sp, #144]
  412da4:	cmp	x0, #0x0
  412da8:	cset	w0, ne  // ne = any
  412dac:	str	w0, [sp, #176]
  412db0:	csel	w22, w21, wzr, ne  // ne = any
  412db4:	cbnz	w22, 412408 <wcrtomb@plt+0xfb38>
  412db8:	ldr	x0, [sp, #136]
  412dbc:	ldrb	w20, [x0, x24]
  412dc0:	cmp	w20, #0x7e
  412dc4:	b.hi	412944 <wcrtomb@plt+0x10074>  // b.pmore
  412dc8:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  412dcc:	add	x0, x0, #0x8d8
  412dd0:	ldrh	w0, [x0, w20, uxtw #1]
  412dd4:	adr	x1, 412de0 <wcrtomb@plt+0x10510>
  412dd8:	add	x0, x1, w0, sxth #2
  412ddc:	br	x0
  412de0:	mov	w19, #0x0                   	// #0
  412de4:	mov	w0, #0x0                   	// #0
  412de8:	mov	w20, #0x3f                  	// #63
  412dec:	b	412cb8 <wcrtomb@plt+0x103e8>
  412df0:	mov	w19, #0x0                   	// #0
  412df4:	mov	w0, #0x0                   	// #0
  412df8:	mov	w20, #0x3f                  	// #63
  412dfc:	b	412cb8 <wcrtomb@plt+0x103e8>
  412e00:	mov	w19, #0x0                   	// #0
  412e04:	mov	w0, #0x0                   	// #0
  412e08:	b	412cb8 <wcrtomb@plt+0x103e8>
  412e0c:	mov	w19, #0x0                   	// #0
  412e10:	mov	w0, #0x0                   	// #0
  412e14:	b	412cb8 <wcrtomb@plt+0x103e8>
  412e18:	mov	w19, w22
  412e1c:	ldr	w0, [sp, #112]
  412e20:	b	412cb8 <wcrtomb@plt+0x103e8>
  412e24:	mov	w19, w22
  412e28:	mov	w22, #0x0                   	// #0
  412e2c:	mov	w0, #0x0                   	// #0
  412e30:	b	412cb8 <wcrtomb@plt+0x103e8>
  412e34:	mov	w20, w0
  412e38:	mov	w19, #0x0                   	// #0
  412e3c:	b	412ce4 <wcrtomb@plt+0x10414>
  412e40:	mov	w19, #0x0                   	// #0
  412e44:	mov	w20, #0x61                  	// #97
  412e48:	b	412ce4 <wcrtomb@plt+0x10414>
  412e4c:	mov	w19, #0x0                   	// #0
  412e50:	mov	w0, #0x0                   	// #0
  412e54:	mov	w20, #0x5c                  	// #92
  412e58:	b	412798 <wcrtomb@plt+0xfec8>
  412e5c:	ldr	x0, [sp, #136]
  412e60:	ldrb	w0, [x0, x24]
  412e64:	cmp	w0, #0x0
  412e68:	cset	w19, ne  // ne = any
  412e6c:	b	412d8c <wcrtomb@plt+0x104bc>
  412e70:	cmp	w23, #0x2
  412e74:	cset	w1, eq  // eq = none
  412e78:	cmp	w1, #0x0
  412e7c:	ldr	w0, [sp, #112]
  412e80:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412e84:	ccmp	x27, #0x0, #0x0, ne  // ne = any
  412e88:	b.eq	412f88 <wcrtomb@plt+0x106b8>  // b.none
  412e8c:	eor	w0, w0, #0x1
  412e90:	and	w0, w0, #0xff
  412e94:	cmp	w1, #0x0
  412e98:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412e9c:	cset	w1, ne  // ne = any
  412ea0:	ldr	w2, [sp, #180]
  412ea4:	ands	w1, w2, w1
  412ea8:	b.eq	412f1c <wcrtomb@plt+0x1064c>  // b.none
  412eac:	ldr	w0, [sp, #128]
  412eb0:	cbnz	w0, 412ee4 <wcrtomb@plt+0x10614>
  412eb4:	cmp	x26, #0x0
  412eb8:	cset	w0, eq  // eq = none
  412ebc:	ldr	x2, [sp, #192]
  412ec0:	cmp	x2, #0x0
  412ec4:	csel	w0, w0, wzr, ne  // ne = any
  412ec8:	str	w0, [sp, #180]
  412ecc:	mov	w23, #0x2                   	// #2
  412ed0:	cbz	w0, 412f18 <wcrtomb@plt+0x10648>
  412ed4:	ldr	w0, [sp, #128]
  412ed8:	str	w0, [sp, #112]
  412edc:	ldr	x26, [sp, #192]
  412ee0:	b	4121ac <wcrtomb@plt+0xf8dc>
  412ee4:	ldr	x0, [sp, #240]
  412ee8:	str	x0, [sp]
  412eec:	ldr	x7, [sp, #200]
  412ef0:	ldr	x6, [sp, #152]
  412ef4:	ldr	w5, [sp, #184]
  412ef8:	mov	w4, #0x5                   	// #5
  412efc:	mov	x3, x25
  412f00:	ldr	x2, [sp, #136]
  412f04:	ldr	x1, [sp, #192]
  412f08:	mov	x0, x28
  412f0c:	bl	41212c <wcrtomb@plt+0xf85c>
  412f10:	mov	x27, x0
  412f14:	b	413014 <wcrtomb@plt+0x10744>
  412f18:	mov	w0, w1
  412f1c:	ldr	x1, [sp, #160]
  412f20:	cmp	x1, #0x0
  412f24:	ccmp	w0, #0x0, #0x4, ne  // ne = any
  412f28:	b.eq	412f64 <wcrtomb@plt+0x10694>  // b.none
  412f2c:	mov	x0, x1
  412f30:	ldrb	w2, [x1]
  412f34:	cbz	w2, 412f64 <wcrtomb@plt+0x10694>
  412f38:	mov	x1, x27
  412f3c:	sub	x0, x0, x27
  412f40:	b	412f50 <wcrtomb@plt+0x10680>
  412f44:	add	x1, x1, #0x1
  412f48:	ldrb	w2, [x0, x1]
  412f4c:	cbz	w2, 412f60 <wcrtomb@plt+0x10690>
  412f50:	cmp	x26, x1
  412f54:	b.ls	412f44 <wcrtomb@plt+0x10674>  // b.plast
  412f58:	strb	w2, [x28, x1]
  412f5c:	b	412f44 <wcrtomb@plt+0x10674>
  412f60:	mov	x27, x1
  412f64:	cmp	x26, x27
  412f68:	b.ls	413014 <wcrtomb@plt+0x10744>  // b.plast
  412f6c:	strb	wzr, [x28, x27]
  412f70:	b	413014 <wcrtomb@plt+0x10744>
  412f74:	mov	x24, x25
  412f78:	mov	w25, w23
  412f7c:	ldr	w0, [sp, #112]
  412f80:	str	w0, [sp, #132]
  412f84:	b	412fcc <wcrtomb@plt+0x106fc>
  412f88:	mov	x24, x25
  412f8c:	mov	w25, #0x2                   	// #2
  412f90:	b	412fcc <wcrtomb@plt+0x106fc>
  412f94:	mov	x24, x25
  412f98:	mov	w25, w23
  412f9c:	b	412fcc <wcrtomb@plt+0x106fc>
  412fa0:	mov	x24, x25
  412fa4:	mov	w25, w23
  412fa8:	b	412fcc <wcrtomb@plt+0x106fc>
  412fac:	mov	x24, x25
  412fb0:	mov	w25, w23
  412fb4:	b	412fcc <wcrtomb@plt+0x106fc>
  412fb8:	mov	x24, x25
  412fbc:	mov	w25, w23
  412fc0:	b	412fcc <wcrtomb@plt+0x106fc>
  412fc4:	mov	x24, x25
  412fc8:	mov	w25, w23
  412fcc:	ldr	w0, [sp, #132]
  412fd0:	cmp	w0, #0x0
  412fd4:	ccmp	w25, #0x2, #0x0, ne  // ne = any
  412fd8:	mov	w0, #0x4                   	// #4
  412fdc:	csel	w25, w25, w0, ne  // ne = any
  412fe0:	ldr	x0, [sp, #240]
  412fe4:	str	x0, [sp]
  412fe8:	ldr	x7, [sp, #200]
  412fec:	mov	x6, #0x0                   	// #0
  412ff0:	ldr	w0, [sp, #184]
  412ff4:	and	w5, w0, #0xfffffffd
  412ff8:	mov	w4, w25
  412ffc:	mov	x3, x24
  413000:	ldr	x2, [sp, #136]
  413004:	mov	x1, x26
  413008:	mov	x0, x28
  41300c:	bl	41212c <wcrtomb@plt+0xf85c>
  413010:	mov	x27, x0
  413014:	mov	x0, x27
  413018:	ldp	x19, x20, [sp, #32]
  41301c:	ldp	x21, x22, [sp, #48]
  413020:	ldp	x23, x24, [sp, #64]
  413024:	ldp	x25, x26, [sp, #80]
  413028:	ldp	x27, x28, [sp, #96]
  41302c:	ldp	x29, x30, [sp, #16]
  413030:	add	sp, sp, #0xf0
  413034:	ret
  413038:	mov	x24, x25
  41303c:	mov	w25, w23
  413040:	b	412fe0 <wcrtomb@plt+0x10710>
  413044:	add	x27, x27, #0x4
  413048:	str	w0, [sp, #124]
  41304c:	mov	w19, #0x0                   	// #0
  413050:	mov	w20, #0x30                  	// #48
  413054:	b	412cb8 <wcrtomb@plt+0x103e8>
  413058:	ldr	x0, [sp, #136]
  41305c:	ldrb	w20, [x0, x24]
  413060:	cmp	w20, #0x7e
  413064:	b.hi	412940 <wcrtomb@plt+0x10070>  // b.pmore
  413068:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  41306c:	add	x0, x0, #0x9d8
  413070:	ldrh	w0, [x0, w20, uxtw #1]
  413074:	adr	x1, 413080 <wcrtomb@plt+0x107b0>
  413078:	add	x0, x1, w0, sxth #2
  41307c:	br	x0
  413080:	sub	sp, sp, #0x80
  413084:	stp	x29, x30, [sp, #16]
  413088:	add	x29, sp, #0x10
  41308c:	stp	x19, x20, [sp, #32]
  413090:	stp	x21, x22, [sp, #48]
  413094:	stp	x23, x24, [sp, #64]
  413098:	stp	x25, x26, [sp, #80]
  41309c:	stp	x27, x28, [sp, #96]
  4130a0:	mov	w19, w0
  4130a4:	str	x1, [sp, #112]
  4130a8:	str	x2, [sp, #120]
  4130ac:	mov	x20, x3
  4130b0:	bl	402840 <__errno_location@plt>
  4130b4:	mov	x23, x0
  4130b8:	ldr	w28, [x0]
  4130bc:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4130c0:	ldr	x21, [x0, #976]
  4130c4:	tbnz	w19, #31, 413208 <wcrtomb@plt+0x10938>
  4130c8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4130cc:	ldr	w0, [x0, #984]
  4130d0:	cmp	w0, w19
  4130d4:	b.gt	413138 <wcrtomb@plt+0x10868>
  4130d8:	mov	w0, #0x7fffffff            	// #2147483647
  4130dc:	cmp	w19, w0
  4130e0:	b.eq	41320c <wcrtomb@plt+0x1093c>  // b.none
  4130e4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4130e8:	add	x0, x0, #0x3d0
  4130ec:	add	x0, x0, #0x10
  4130f0:	cmp	x21, x0
  4130f4:	b.eq	413210 <wcrtomb@plt+0x10940>  // b.none
  4130f8:	add	w24, w19, #0x1
  4130fc:	sbfiz	x1, x24, #4, #32
  413100:	mov	x0, x21
  413104:	bl	414068 <wcrtomb@plt+0x11798>
  413108:	mov	x21, x0
  41310c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  413110:	str	x21, [x0, #976]
  413114:	adrp	x22, 43e000 <_obstack_memory_used@@Base+0x27218>
  413118:	add	x22, x22, #0x3d0
  41311c:	ldr	w0, [x22, #8]
  413120:	sub	w2, w24, w0
  413124:	sbfiz	x2, x2, #4, #32
  413128:	mov	w1, #0x0                   	// #0
  41312c:	add	x0, x21, w0, sxtw #4
  413130:	bl	4024c0 <memset@plt>
  413134:	str	w24, [x22, #8]
  413138:	sbfiz	x19, x19, #4, #32
  41313c:	add	x27, x21, x19
  413140:	ldr	x25, [x21, x19]
  413144:	ldr	x22, [x27, #8]
  413148:	ldr	w24, [x20, #4]
  41314c:	orr	w24, w24, #0x1
  413150:	add	x26, x20, #0x8
  413154:	ldr	x0, [x20, #48]
  413158:	str	x0, [sp]
  41315c:	ldr	x7, [x20, #40]
  413160:	mov	x6, x26
  413164:	mov	w5, w24
  413168:	ldr	w4, [x20]
  41316c:	ldr	x3, [sp, #120]
  413170:	ldr	x2, [sp, #112]
  413174:	mov	x1, x25
  413178:	mov	x0, x22
  41317c:	bl	41212c <wcrtomb@plt+0xf85c>
  413180:	cmp	x25, x0
  413184:	b.hi	4131e0 <wcrtomb@plt+0x10910>  // b.pmore
  413188:	add	x25, x0, #0x1
  41318c:	str	x25, [x21, x19]
  413190:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413194:	add	x0, x0, #0x780
  413198:	cmp	x22, x0
  41319c:	b.eq	4131a8 <wcrtomb@plt+0x108d8>  // b.none
  4131a0:	mov	x0, x22
  4131a4:	bl	402660 <free@plt>
  4131a8:	mov	x0, x25
  4131ac:	bl	413fec <wcrtomb@plt+0x1171c>
  4131b0:	mov	x22, x0
  4131b4:	str	x0, [x27, #8]
  4131b8:	ldr	x1, [x20, #48]
  4131bc:	str	x1, [sp]
  4131c0:	ldr	x7, [x20, #40]
  4131c4:	mov	x6, x26
  4131c8:	mov	w5, w24
  4131cc:	ldr	w4, [x20]
  4131d0:	ldr	x3, [sp, #120]
  4131d4:	ldr	x2, [sp, #112]
  4131d8:	mov	x1, x25
  4131dc:	bl	41212c <wcrtomb@plt+0xf85c>
  4131e0:	str	w28, [x23]
  4131e4:	mov	x0, x22
  4131e8:	ldp	x19, x20, [sp, #32]
  4131ec:	ldp	x21, x22, [sp, #48]
  4131f0:	ldp	x23, x24, [sp, #64]
  4131f4:	ldp	x25, x26, [sp, #80]
  4131f8:	ldp	x27, x28, [sp, #96]
  4131fc:	ldp	x29, x30, [sp, #16]
  413200:	add	sp, sp, #0x80
  413204:	ret
  413208:	bl	4025a0 <abort@plt>
  41320c:	bl	414264 <wcrtomb@plt+0x11994>
  413210:	add	w24, w19, #0x1
  413214:	sbfiz	x1, x24, #4, #32
  413218:	mov	x0, #0x0                   	// #0
  41321c:	bl	414068 <wcrtomb@plt+0x11798>
  413220:	mov	x21, x0
  413224:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  413228:	add	x1, x0, #0x3d0
  41322c:	str	x21, [x0, #976]
  413230:	ldp	x0, x1, [x1, #16]
  413234:	stp	x0, x1, [x21]
  413238:	b	413114 <wcrtomb@plt+0x10844>
  41323c:	stp	x29, x30, [sp, #-48]!
  413240:	mov	x29, sp
  413244:	stp	x19, x20, [sp, #16]
  413248:	str	x21, [sp, #32]
  41324c:	mov	x20, x0
  413250:	bl	402840 <__errno_location@plt>
  413254:	mov	x19, x0
  413258:	ldr	w21, [x0]
  41325c:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413260:	add	x2, x2, #0x780
  413264:	add	x2, x2, #0x100
  413268:	cmp	x20, #0x0
  41326c:	mov	x1, #0x38                  	// #56
  413270:	csel	x0, x2, x20, eq  // eq = none
  413274:	bl	414204 <wcrtomb@plt+0x11934>
  413278:	str	w21, [x19]
  41327c:	ldp	x19, x20, [sp, #16]
  413280:	ldr	x21, [sp, #32]
  413284:	ldp	x29, x30, [sp], #48
  413288:	ret
  41328c:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413290:	add	x1, x1, #0x780
  413294:	add	x1, x1, #0x100
  413298:	cmp	x0, #0x0
  41329c:	csel	x0, x1, x0, eq  // eq = none
  4132a0:	ldr	w0, [x0]
  4132a4:	ret
  4132a8:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4132ac:	add	x2, x2, #0x780
  4132b0:	add	x2, x2, #0x100
  4132b4:	cmp	x0, #0x0
  4132b8:	csel	x0, x2, x0, eq  // eq = none
  4132bc:	str	w1, [x0]
  4132c0:	ret
  4132c4:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4132c8:	add	x3, x3, #0x780
  4132cc:	add	x3, x3, #0x100
  4132d0:	cmp	x0, #0x0
  4132d4:	csel	x0, x3, x0, eq  // eq = none
  4132d8:	add	x0, x0, #0x8
  4132dc:	ubfx	x4, x1, #5, #3
  4132e0:	and	w1, w1, #0x1f
  4132e4:	ldr	w5, [x0, x4, lsl #2]
  4132e8:	lsr	w3, w5, w1
  4132ec:	eor	w2, w3, w2
  4132f0:	and	w2, w2, #0x1
  4132f4:	lsl	w2, w2, w1
  4132f8:	eor	w2, w2, w5
  4132fc:	str	w2, [x0, x4, lsl #2]
  413300:	and	w0, w3, #0x1
  413304:	ret
  413308:	mov	x2, x0
  41330c:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413310:	add	x0, x0, #0x780
  413314:	add	x0, x0, #0x100
  413318:	cmp	x2, #0x0
  41331c:	csel	x2, x0, x2, eq  // eq = none
  413320:	ldr	w0, [x2, #4]
  413324:	str	w1, [x2, #4]
  413328:	ret
  41332c:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413330:	add	x3, x3, #0x780
  413334:	add	x3, x3, #0x100
  413338:	cmp	x0, #0x0
  41333c:	csel	x0, x3, x0, eq  // eq = none
  413340:	mov	w3, #0xa                   	// #10
  413344:	str	w3, [x0]
  413348:	cmp	x1, #0x0
  41334c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
  413350:	b.eq	413360 <wcrtomb@plt+0x10a90>  // b.none
  413354:	str	x1, [x0, #40]
  413358:	str	x2, [x0, #48]
  41335c:	ret
  413360:	stp	x29, x30, [sp, #-16]!
  413364:	mov	x29, sp
  413368:	bl	4025a0 <abort@plt>
  41336c:	sub	sp, sp, #0x60
  413370:	stp	x29, x30, [sp, #16]
  413374:	add	x29, sp, #0x10
  413378:	stp	x19, x20, [sp, #32]
  41337c:	stp	x21, x22, [sp, #48]
  413380:	stp	x23, x24, [sp, #64]
  413384:	str	x25, [sp, #80]
  413388:	mov	x21, x0
  41338c:	mov	x22, x1
  413390:	mov	x23, x2
  413394:	mov	x24, x3
  413398:	mov	x19, x4
  41339c:	adrp	x4, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4133a0:	add	x4, x4, #0x780
  4133a4:	add	x4, x4, #0x100
  4133a8:	cmp	x19, #0x0
  4133ac:	csel	x19, x4, x19, eq  // eq = none
  4133b0:	bl	402840 <__errno_location@plt>
  4133b4:	mov	x20, x0
  4133b8:	ldr	w25, [x0]
  4133bc:	ldr	x7, [x19, #40]
  4133c0:	ldr	w5, [x19, #4]
  4133c4:	ldr	w4, [x19]
  4133c8:	ldr	x0, [x19, #48]
  4133cc:	str	x0, [sp]
  4133d0:	add	x6, x19, #0x8
  4133d4:	mov	x3, x24
  4133d8:	mov	x2, x23
  4133dc:	mov	x1, x22
  4133e0:	mov	x0, x21
  4133e4:	bl	41212c <wcrtomb@plt+0xf85c>
  4133e8:	str	w25, [x20]
  4133ec:	ldp	x19, x20, [sp, #32]
  4133f0:	ldp	x21, x22, [sp, #48]
  4133f4:	ldp	x23, x24, [sp, #64]
  4133f8:	ldr	x25, [sp, #80]
  4133fc:	ldp	x29, x30, [sp, #16]
  413400:	add	sp, sp, #0x60
  413404:	ret
  413408:	sub	sp, sp, #0x80
  41340c:	stp	x29, x30, [sp, #16]
  413410:	add	x29, sp, #0x10
  413414:	stp	x19, x20, [sp, #32]
  413418:	stp	x21, x22, [sp, #48]
  41341c:	stp	x23, x24, [sp, #64]
  413420:	stp	x25, x26, [sp, #80]
  413424:	stp	x27, x28, [sp, #96]
  413428:	mov	x22, x0
  41342c:	mov	x23, x1
  413430:	mov	x20, x2
  413434:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413438:	add	x0, x0, #0x780
  41343c:	add	x0, x0, #0x100
  413440:	cmp	x3, #0x0
  413444:	csel	x19, x0, x3, eq  // eq = none
  413448:	bl	402840 <__errno_location@plt>
  41344c:	mov	x21, x0
  413450:	ldr	w28, [x0]
  413454:	cmp	x20, #0x0
  413458:	cset	w24, eq  // eq = none
  41345c:	ldr	w0, [x19, #4]
  413460:	orr	w24, w24, w0
  413464:	add	x27, x19, #0x8
  413468:	ldr	x7, [x19, #40]
  41346c:	ldr	w4, [x19]
  413470:	ldr	x0, [x19, #48]
  413474:	str	x0, [sp]
  413478:	mov	x6, x27
  41347c:	mov	w5, w24
  413480:	mov	x3, x23
  413484:	mov	x2, x22
  413488:	mov	x1, #0x0                   	// #0
  41348c:	mov	x0, #0x0                   	// #0
  413490:	bl	41212c <wcrtomb@plt+0xf85c>
  413494:	mov	x25, x0
  413498:	add	x26, x0, #0x1
  41349c:	mov	x0, x26
  4134a0:	bl	413fec <wcrtomb@plt+0x1171c>
  4134a4:	str	x0, [sp, #120]
  4134a8:	ldr	x7, [x19, #40]
  4134ac:	ldr	w4, [x19]
  4134b0:	ldr	x1, [x19, #48]
  4134b4:	str	x1, [sp]
  4134b8:	mov	x6, x27
  4134bc:	mov	w5, w24
  4134c0:	mov	x3, x23
  4134c4:	mov	x2, x22
  4134c8:	mov	x1, x26
  4134cc:	bl	41212c <wcrtomb@plt+0xf85c>
  4134d0:	str	w28, [x21]
  4134d4:	cbz	x20, 4134dc <wcrtomb@plt+0x10c0c>
  4134d8:	str	x25, [x20]
  4134dc:	ldr	x0, [sp, #120]
  4134e0:	ldp	x19, x20, [sp, #32]
  4134e4:	ldp	x21, x22, [sp, #48]
  4134e8:	ldp	x23, x24, [sp, #64]
  4134ec:	ldp	x25, x26, [sp, #80]
  4134f0:	ldp	x27, x28, [sp, #96]
  4134f4:	ldp	x29, x30, [sp, #16]
  4134f8:	add	sp, sp, #0x80
  4134fc:	ret
  413500:	stp	x29, x30, [sp, #-16]!
  413504:	mov	x29, sp
  413508:	mov	x3, x2
  41350c:	mov	x2, #0x0                   	// #0
  413510:	bl	413408 <wcrtomb@plt+0x10b38>
  413514:	ldp	x29, x30, [sp], #16
  413518:	ret
  41351c:	stp	x29, x30, [sp, #-48]!
  413520:	mov	x29, sp
  413524:	stp	x19, x20, [sp, #16]
  413528:	str	x21, [sp, #32]
  41352c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  413530:	add	x1, x0, #0x3d0
  413534:	ldr	x21, [x0, #976]
  413538:	ldr	w20, [x1, #8]
  41353c:	cmp	w20, #0x1
  413540:	b.le	413564 <wcrtomb@plt+0x10c94>
  413544:	add	x19, x21, #0x18
  413548:	sub	w20, w20, #0x2
  41354c:	add	x0, x21, #0x28
  413550:	add	x20, x0, x20, lsl #4
  413554:	ldr	x0, [x19], #16
  413558:	bl	402660 <free@plt>
  41355c:	cmp	x19, x20
  413560:	b.ne	413554 <wcrtomb@plt+0x10c84>  // b.any
  413564:	ldr	x0, [x21, #8]
  413568:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  41356c:	add	x1, x1, #0x780
  413570:	cmp	x0, x1
  413574:	b.eq	413598 <wcrtomb@plt+0x10cc8>  // b.none
  413578:	bl	402660 <free@plt>
  41357c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  413580:	add	x0, x0, #0x3d0
  413584:	mov	x1, #0x100                 	// #256
  413588:	str	x1, [x0, #16]
  41358c:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413590:	add	x1, x1, #0x780
  413594:	str	x1, [x0, #24]
  413598:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  41359c:	add	x0, x0, #0x3d0
  4135a0:	add	x0, x0, #0x10
  4135a4:	cmp	x21, x0
  4135a8:	b.eq	4135c4 <wcrtomb@plt+0x10cf4>  // b.none
  4135ac:	mov	x0, x21
  4135b0:	bl	402660 <free@plt>
  4135b4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4135b8:	add	x0, x1, #0x3d0
  4135bc:	add	x0, x0, #0x10
  4135c0:	str	x0, [x1, #976]
  4135c4:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  4135c8:	mov	w1, #0x1                   	// #1
  4135cc:	str	w1, [x0, #984]
  4135d0:	ldp	x19, x20, [sp, #16]
  4135d4:	ldr	x21, [sp, #32]
  4135d8:	ldp	x29, x30, [sp], #48
  4135dc:	ret
  4135e0:	stp	x29, x30, [sp, #-16]!
  4135e4:	mov	x29, sp
  4135e8:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4135ec:	add	x3, x3, #0x780
  4135f0:	add	x3, x3, #0x100
  4135f4:	mov	x2, #0xffffffffffffffff    	// #-1
  4135f8:	bl	413080 <wcrtomb@plt+0x107b0>
  4135fc:	ldp	x29, x30, [sp], #16
  413600:	ret
  413604:	stp	x29, x30, [sp, #-16]!
  413608:	mov	x29, sp
  41360c:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  413610:	add	x3, x3, #0x780
  413614:	add	x3, x3, #0x100
  413618:	bl	413080 <wcrtomb@plt+0x107b0>
  41361c:	ldp	x29, x30, [sp], #16
  413620:	ret
  413624:	stp	x29, x30, [sp, #-16]!
  413628:	mov	x29, sp
  41362c:	mov	x1, x0
  413630:	mov	w0, #0x0                   	// #0
  413634:	bl	4135e0 <wcrtomb@plt+0x10d10>
  413638:	ldp	x29, x30, [sp], #16
  41363c:	ret
  413640:	stp	x29, x30, [sp, #-16]!
  413644:	mov	x29, sp
  413648:	mov	x2, x1
  41364c:	mov	x1, x0
  413650:	mov	w0, #0x0                   	// #0
  413654:	bl	413604 <wcrtomb@plt+0x10d34>
  413658:	ldp	x29, x30, [sp], #16
  41365c:	ret
  413660:	stp	x29, x30, [sp, #-96]!
  413664:	mov	x29, sp
  413668:	stp	x19, x20, [sp, #16]
  41366c:	mov	w19, w0
  413670:	mov	w0, w1
  413674:	mov	x20, x2
  413678:	add	x8, sp, #0x28
  41367c:	bl	411fac <wcrtomb@plt+0xf6dc>
  413680:	add	x3, sp, #0x28
  413684:	mov	x2, #0xffffffffffffffff    	// #-1
  413688:	mov	x1, x20
  41368c:	mov	w0, w19
  413690:	bl	413080 <wcrtomb@plt+0x107b0>
  413694:	ldp	x19, x20, [sp, #16]
  413698:	ldp	x29, x30, [sp], #96
  41369c:	ret
  4136a0:	stp	x29, x30, [sp, #-112]!
  4136a4:	mov	x29, sp
  4136a8:	stp	x19, x20, [sp, #16]
  4136ac:	str	x21, [sp, #32]
  4136b0:	mov	w19, w0
  4136b4:	mov	w0, w1
  4136b8:	mov	x20, x2
  4136bc:	mov	x21, x3
  4136c0:	add	x8, sp, #0x38
  4136c4:	bl	411fac <wcrtomb@plt+0xf6dc>
  4136c8:	add	x3, sp, #0x38
  4136cc:	mov	x2, x21
  4136d0:	mov	x1, x20
  4136d4:	mov	w0, w19
  4136d8:	bl	413080 <wcrtomb@plt+0x107b0>
  4136dc:	ldp	x19, x20, [sp, #16]
  4136e0:	ldr	x21, [sp, #32]
  4136e4:	ldp	x29, x30, [sp], #112
  4136e8:	ret
  4136ec:	stp	x29, x30, [sp, #-16]!
  4136f0:	mov	x29, sp
  4136f4:	mov	x2, x1
  4136f8:	mov	w1, w0
  4136fc:	mov	w0, #0x0                   	// #0
  413700:	bl	413660 <wcrtomb@plt+0x10d90>
  413704:	ldp	x29, x30, [sp], #16
  413708:	ret
  41370c:	stp	x29, x30, [sp, #-16]!
  413710:	mov	x29, sp
  413714:	mov	x3, x2
  413718:	mov	x2, x1
  41371c:	mov	w1, w0
  413720:	mov	w0, #0x0                   	// #0
  413724:	bl	4136a0 <wcrtomb@plt+0x10dd0>
  413728:	ldp	x29, x30, [sp], #16
  41372c:	ret
  413730:	stp	x29, x30, [sp, #-96]!
  413734:	mov	x29, sp
  413738:	stp	x19, x20, [sp, #16]
  41373c:	mov	x19, x0
  413740:	mov	x20, x1
  413744:	and	w1, w2, #0xff
  413748:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  41374c:	add	x2, x2, #0x780
  413750:	add	x0, x2, #0x100
  413754:	ldp	x2, x3, [x2, #256]
  413758:	stp	x2, x3, [sp, #40]
  41375c:	ldp	x2, x3, [x0, #16]
  413760:	stp	x2, x3, [sp, #56]
  413764:	ldp	x2, x3, [x0, #32]
  413768:	stp	x2, x3, [sp, #72]
  41376c:	ldr	x0, [x0, #48]
  413770:	str	x0, [sp, #88]
  413774:	mov	w2, #0x1                   	// #1
  413778:	add	x0, sp, #0x28
  41377c:	bl	4132c4 <wcrtomb@plt+0x109f4>
  413780:	add	x3, sp, #0x28
  413784:	mov	x2, x20
  413788:	mov	x1, x19
  41378c:	mov	w0, #0x0                   	// #0
  413790:	bl	413080 <wcrtomb@plt+0x107b0>
  413794:	ldp	x19, x20, [sp, #16]
  413798:	ldp	x29, x30, [sp], #96
  41379c:	ret
  4137a0:	stp	x29, x30, [sp, #-16]!
  4137a4:	mov	x29, sp
  4137a8:	mov	w2, w1
  4137ac:	mov	x1, #0xffffffffffffffff    	// #-1
  4137b0:	bl	413730 <wcrtomb@plt+0x10e60>
  4137b4:	ldp	x29, x30, [sp], #16
  4137b8:	ret
  4137bc:	stp	x29, x30, [sp, #-16]!
  4137c0:	mov	x29, sp
  4137c4:	mov	w1, #0x3a                  	// #58
  4137c8:	bl	4137a0 <wcrtomb@plt+0x10ed0>
  4137cc:	ldp	x29, x30, [sp], #16
  4137d0:	ret
  4137d4:	stp	x29, x30, [sp, #-16]!
  4137d8:	mov	x29, sp
  4137dc:	mov	w2, #0x3a                  	// #58
  4137e0:	bl	413730 <wcrtomb@plt+0x10e60>
  4137e4:	ldp	x29, x30, [sp], #16
  4137e8:	ret
  4137ec:	stp	x29, x30, [sp, #-160]!
  4137f0:	mov	x29, sp
  4137f4:	stp	x19, x20, [sp, #16]
  4137f8:	mov	w19, w0
  4137fc:	mov	w0, w1
  413800:	mov	x20, x2
  413804:	add	x8, sp, #0x20
  413808:	bl	411fac <wcrtomb@plt+0xf6dc>
  41380c:	ldp	x0, x1, [sp, #32]
  413810:	stp	x0, x1, [sp, #104]
  413814:	ldp	x0, x1, [sp, #48]
  413818:	stp	x0, x1, [sp, #120]
  41381c:	ldp	x0, x1, [sp, #64]
  413820:	stp	x0, x1, [sp, #136]
  413824:	ldr	x0, [sp, #80]
  413828:	str	x0, [sp, #152]
  41382c:	mov	w2, #0x1                   	// #1
  413830:	mov	w1, #0x3a                  	// #58
  413834:	add	x0, sp, #0x68
  413838:	bl	4132c4 <wcrtomb@plt+0x109f4>
  41383c:	add	x3, sp, #0x68
  413840:	mov	x2, #0xffffffffffffffff    	// #-1
  413844:	mov	x1, x20
  413848:	mov	w0, w19
  41384c:	bl	413080 <wcrtomb@plt+0x107b0>
  413850:	ldp	x19, x20, [sp, #16]
  413854:	ldp	x29, x30, [sp], #160
  413858:	ret
  41385c:	stp	x29, x30, [sp, #-112]!
  413860:	mov	x29, sp
  413864:	stp	x19, x20, [sp, #16]
  413868:	str	x21, [sp, #32]
  41386c:	mov	w19, w0
  413870:	mov	x20, x3
  413874:	mov	x21, x4
  413878:	adrp	x5, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  41387c:	add	x5, x5, #0x780
  413880:	add	x0, x5, #0x100
  413884:	ldp	x4, x5, [x5, #256]
  413888:	stp	x4, x5, [sp, #56]
  41388c:	ldp	x4, x5, [x0, #16]
  413890:	stp	x4, x5, [sp, #72]
  413894:	ldp	x4, x5, [x0, #32]
  413898:	stp	x4, x5, [sp, #88]
  41389c:	ldr	x0, [x0, #48]
  4138a0:	str	x0, [sp, #104]
  4138a4:	add	x0, sp, #0x38
  4138a8:	bl	41332c <wcrtomb@plt+0x10a5c>
  4138ac:	add	x3, sp, #0x38
  4138b0:	mov	x2, x21
  4138b4:	mov	x1, x20
  4138b8:	mov	w0, w19
  4138bc:	bl	413080 <wcrtomb@plt+0x107b0>
  4138c0:	ldp	x19, x20, [sp, #16]
  4138c4:	ldr	x21, [sp, #32]
  4138c8:	ldp	x29, x30, [sp], #112
  4138cc:	ret
  4138d0:	stp	x29, x30, [sp, #-16]!
  4138d4:	mov	x29, sp
  4138d8:	mov	x4, #0xffffffffffffffff    	// #-1
  4138dc:	bl	41385c <wcrtomb@plt+0x10f8c>
  4138e0:	ldp	x29, x30, [sp], #16
  4138e4:	ret
  4138e8:	stp	x29, x30, [sp, #-16]!
  4138ec:	mov	x29, sp
  4138f0:	mov	x3, x2
  4138f4:	mov	x2, x1
  4138f8:	mov	x1, x0
  4138fc:	mov	w0, #0x0                   	// #0
  413900:	bl	4138d0 <wcrtomb@plt+0x11000>
  413904:	ldp	x29, x30, [sp], #16
  413908:	ret
  41390c:	stp	x29, x30, [sp, #-16]!
  413910:	mov	x29, sp
  413914:	mov	x4, x3
  413918:	mov	x3, x2
  41391c:	mov	x2, x1
  413920:	mov	x1, x0
  413924:	mov	w0, #0x0                   	// #0
  413928:	bl	41385c <wcrtomb@plt+0x10f8c>
  41392c:	ldp	x29, x30, [sp], #16
  413930:	ret
  413934:	stp	x29, x30, [sp, #-16]!
  413938:	mov	x29, sp
  41393c:	adrp	x3, 43e000 <_obstack_memory_used@@Base+0x27218>
  413940:	add	x3, x3, #0x3d0
  413944:	add	x3, x3, #0x20
  413948:	bl	413080 <wcrtomb@plt+0x107b0>
  41394c:	ldp	x29, x30, [sp], #16
  413950:	ret
  413954:	stp	x29, x30, [sp, #-16]!
  413958:	mov	x29, sp
  41395c:	mov	x2, x1
  413960:	mov	x1, x0
  413964:	mov	w0, #0x0                   	// #0
  413968:	bl	413934 <wcrtomb@plt+0x11064>
  41396c:	ldp	x29, x30, [sp], #16
  413970:	ret
  413974:	stp	x29, x30, [sp, #-16]!
  413978:	mov	x29, sp
  41397c:	mov	x2, #0xffffffffffffffff    	// #-1
  413980:	bl	413934 <wcrtomb@plt+0x11064>
  413984:	ldp	x29, x30, [sp], #16
  413988:	ret
  41398c:	stp	x29, x30, [sp, #-16]!
  413990:	mov	x29, sp
  413994:	mov	x1, x0
  413998:	mov	w0, #0x0                   	// #0
  41399c:	bl	413974 <wcrtomb@plt+0x110a4>
  4139a0:	ldp	x29, x30, [sp], #16
  4139a4:	ret
  4139a8:	stp	x29, x30, [sp, #-64]!
  4139ac:	mov	x29, sp
  4139b0:	stp	x19, x20, [sp, #16]
  4139b4:	stp	x21, x22, [sp, #32]
  4139b8:	str	x23, [sp, #48]
  4139bc:	mov	w23, w0
  4139c0:	mov	x22, x1
  4139c4:	mov	x20, x2
  4139c8:	mov	x21, #0x7ff00000            	// #2146435072
  4139cc:	b	4139d4 <wcrtomb@plt+0x11104>
  4139d0:	mov	x20, x21
  4139d4:	mov	x2, x20
  4139d8:	mov	x1, x22
  4139dc:	mov	w0, w23
  4139e0:	bl	402710 <read@plt>
  4139e4:	mov	x19, x0
  4139e8:	tbz	x0, #63, 413a0c <wcrtomb@plt+0x1113c>
  4139ec:	bl	402840 <__errno_location@plt>
  4139f0:	ldr	w2, [x0]
  4139f4:	cmp	w2, #0x4
  4139f8:	b.eq	4139d4 <wcrtomb@plt+0x11104>  // b.none
  4139fc:	cmp	x20, x21
  413a00:	ccmp	w2, #0x16, #0x0, hi  // hi = pmore
  413a04:	b.eq	4139d0 <wcrtomb@plt+0x11100>  // b.none
  413a08:	mov	x0, x19
  413a0c:	ldp	x19, x20, [sp, #16]
  413a10:	ldp	x21, x22, [sp, #32]
  413a14:	ldr	x23, [sp, #48]
  413a18:	ldp	x29, x30, [sp], #64
  413a1c:	ret
  413a20:	stp	x29, x30, [sp, #-32]!
  413a24:	mov	x29, sp
  413a28:	stp	x19, x20, [sp, #16]
  413a2c:	mov	x19, x0
  413a30:	mov	x20, x1
  413a34:	mov	x2, x1
  413a38:	mov	w1, #0x0                   	// #0
  413a3c:	bl	402720 <memchr@plt>
  413a40:	sub	x19, x0, x19
  413a44:	cmp	x0, #0x0
  413a48:	csinc	x0, x20, x19, eq  // eq = none
  413a4c:	ldp	x19, x20, [sp, #16]
  413a50:	ldp	x29, x30, [sp], #32
  413a54:	ret
  413a58:	stp	x29, x30, [sp, #-48]!
  413a5c:	mov	x29, sp
  413a60:	stp	x19, x20, [sp, #16]
  413a64:	mov	w19, w0
  413a68:	cmp	w0, #0x2
  413a6c:	b.ls	413a80 <wcrtomb@plt+0x111b0>  // b.plast
  413a70:	mov	w0, w19
  413a74:	ldp	x19, x20, [sp, #16]
  413a78:	ldp	x29, x30, [sp], #48
  413a7c:	ret
  413a80:	stp	x21, x22, [sp, #32]
  413a84:	bl	423aac <_obstack_memory_used@@Base+0xccc4>
  413a88:	mov	w21, w0
  413a8c:	bl	402840 <__errno_location@plt>
  413a90:	mov	x20, x0
  413a94:	ldr	w22, [x0]
  413a98:	mov	w0, w19
  413a9c:	bl	402530 <close@plt>
  413aa0:	str	w22, [x20]
  413aa4:	mov	w19, w21
  413aa8:	ldp	x21, x22, [sp, #32]
  413aac:	b	413a70 <wcrtomb@plt+0x111a0>
  413ab0:	sub	sp, sp, #0x50
  413ab4:	stp	x29, x30, [sp, #32]
  413ab8:	add	x29, sp, #0x20
  413abc:	stp	x19, x20, [sp, #48]
  413ac0:	str	x21, [sp, #64]
  413ac4:	mov	x20, x0
  413ac8:	mov	x21, x4
  413acc:	mov	x19, x5
  413ad0:	cbz	x1, 413bac <wcrtomb@plt+0x112dc>
  413ad4:	mov	x4, x3
  413ad8:	mov	x3, x2
  413adc:	mov	x2, x1
  413ae0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413ae4:	add	x1, x1, #0xb58
  413ae8:	bl	402880 <fprintf@plt>
  413aec:	mov	w2, #0x5                   	// #5
  413af0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413af4:	add	x1, x1, #0xb70
  413af8:	mov	x0, #0x0                   	// #0
  413afc:	bl	4027a0 <dcgettext@plt>
  413b00:	mov	w3, #0x7e4                 	// #2020
  413b04:	mov	x2, x0
  413b08:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413b0c:	add	x1, x1, #0xe98
  413b10:	mov	x0, x20
  413b14:	bl	402880 <fprintf@plt>
  413b18:	mov	x1, x20
  413b1c:	mov	w0, #0xa                   	// #10
  413b20:	bl	402750 <fputc_unlocked@plt>
  413b24:	mov	w2, #0x5                   	// #5
  413b28:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413b2c:	add	x1, x1, #0xb78
  413b30:	mov	x0, #0x0                   	// #0
  413b34:	bl	4027a0 <dcgettext@plt>
  413b38:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  413b3c:	add	x2, x2, #0xc28
  413b40:	mov	x1, x0
  413b44:	mov	x0, x20
  413b48:	bl	402880 <fprintf@plt>
  413b4c:	mov	x1, x20
  413b50:	mov	w0, #0xa                   	// #10
  413b54:	bl	402750 <fputc_unlocked@plt>
  413b58:	cmp	x19, #0x5
  413b5c:	b.eq	413d18 <wcrtomb@plt+0x11448>  // b.none
  413b60:	b.hi	413c00 <wcrtomb@plt+0x11330>  // b.pmore
  413b64:	cmp	x19, #0x2
  413b68:	b.eq	413cbc <wcrtomb@plt+0x113ec>  // b.none
  413b6c:	b.ls	413bbc <wcrtomb@plt+0x112ec>  // b.plast
  413b70:	cmp	x19, #0x3
  413b74:	b.eq	413ce8 <wcrtomb@plt+0x11418>  // b.none
  413b78:	mov	w2, #0x5                   	// #5
  413b7c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413b80:	add	x1, x1, #0xc98
  413b84:	mov	x0, #0x0                   	// #0
  413b88:	bl	4027a0 <dcgettext@plt>
  413b8c:	ldr	x5, [x21, #24]
  413b90:	ldr	x4, [x21, #16]
  413b94:	ldr	x3, [x21, #8]
  413b98:	ldr	x2, [x21]
  413b9c:	mov	x1, x0
  413ba0:	mov	x0, x20
  413ba4:	bl	402880 <fprintf@plt>
  413ba8:	b	413bec <wcrtomb@plt+0x1131c>
  413bac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413bb0:	add	x1, x1, #0xb68
  413bb4:	bl	402880 <fprintf@plt>
  413bb8:	b	413aec <wcrtomb@plt+0x1121c>
  413bbc:	cbz	x19, 413bec <wcrtomb@plt+0x1131c>
  413bc0:	cmp	x19, #0x1
  413bc4:	b.ne	413dd8 <wcrtomb@plt+0x11508>  // b.any
  413bc8:	mov	w2, #0x5                   	// #5
  413bcc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413bd0:	add	x1, x1, #0xc50
  413bd4:	mov	x0, #0x0                   	// #0
  413bd8:	bl	4027a0 <dcgettext@plt>
  413bdc:	ldr	x2, [x21]
  413be0:	mov	x1, x0
  413be4:	mov	x0, x20
  413be8:	bl	402880 <fprintf@plt>
  413bec:	ldp	x19, x20, [sp, #48]
  413bf0:	ldr	x21, [sp, #64]
  413bf4:	ldp	x29, x30, [sp, #32]
  413bf8:	add	sp, sp, #0x50
  413bfc:	ret
  413c00:	cmp	x19, #0x8
  413c04:	b.eq	413d8c <wcrtomb@plt+0x114bc>  // b.none
  413c08:	b.ls	413c68 <wcrtomb@plt+0x11398>  // b.plast
  413c0c:	cmp	x19, #0x9
  413c10:	b.ne	413dd8 <wcrtomb@plt+0x11508>  // b.any
  413c14:	mov	w2, #0x5                   	// #5
  413c18:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413c1c:	add	x1, x1, #0xd68
  413c20:	mov	x0, #0x0                   	// #0
  413c24:	bl	4027a0 <dcgettext@plt>
  413c28:	ldr	x1, [x21, #64]
  413c2c:	str	x1, [sp, #16]
  413c30:	ldr	x1, [x21, #56]
  413c34:	str	x1, [sp, #8]
  413c38:	ldr	x1, [x21, #48]
  413c3c:	str	x1, [sp]
  413c40:	ldr	x7, [x21, #40]
  413c44:	ldr	x6, [x21, #32]
  413c48:	ldr	x5, [x21, #24]
  413c4c:	ldr	x4, [x21, #16]
  413c50:	ldr	x3, [x21, #8]
  413c54:	ldr	x2, [x21]
  413c58:	mov	x1, x0
  413c5c:	mov	x0, x20
  413c60:	bl	402880 <fprintf@plt>
  413c64:	b	413bec <wcrtomb@plt+0x1131c>
  413c68:	cmp	x19, #0x6
  413c6c:	b.eq	413d50 <wcrtomb@plt+0x11480>  // b.none
  413c70:	cmp	x19, #0x7
  413c74:	b.ne	413dd8 <wcrtomb@plt+0x11508>  // b.any
  413c78:	mov	w2, #0x5                   	// #5
  413c7c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413c80:	add	x1, x1, #0xd08
  413c84:	mov	x0, #0x0                   	// #0
  413c88:	bl	4027a0 <dcgettext@plt>
  413c8c:	ldr	x1, [x21, #48]
  413c90:	str	x1, [sp]
  413c94:	ldr	x7, [x21, #40]
  413c98:	ldr	x6, [x21, #32]
  413c9c:	ldr	x5, [x21, #24]
  413ca0:	ldr	x4, [x21, #16]
  413ca4:	ldr	x3, [x21, #8]
  413ca8:	ldr	x2, [x21]
  413cac:	mov	x1, x0
  413cb0:	mov	x0, x20
  413cb4:	bl	402880 <fprintf@plt>
  413cb8:	b	413bec <wcrtomb@plt+0x1131c>
  413cbc:	mov	w2, #0x5                   	// #5
  413cc0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413cc4:	add	x1, x1, #0xc60
  413cc8:	mov	x0, #0x0                   	// #0
  413ccc:	bl	4027a0 <dcgettext@plt>
  413cd0:	ldr	x3, [x21, #8]
  413cd4:	ldr	x2, [x21]
  413cd8:	mov	x1, x0
  413cdc:	mov	x0, x20
  413ce0:	bl	402880 <fprintf@plt>
  413ce4:	b	413bec <wcrtomb@plt+0x1131c>
  413ce8:	mov	w2, #0x5                   	// #5
  413cec:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413cf0:	add	x1, x1, #0xc78
  413cf4:	mov	x0, #0x0                   	// #0
  413cf8:	bl	4027a0 <dcgettext@plt>
  413cfc:	ldr	x4, [x21, #16]
  413d00:	ldr	x3, [x21, #8]
  413d04:	ldr	x2, [x21]
  413d08:	mov	x1, x0
  413d0c:	mov	x0, x20
  413d10:	bl	402880 <fprintf@plt>
  413d14:	b	413bec <wcrtomb@plt+0x1131c>
  413d18:	mov	w2, #0x5                   	// #5
  413d1c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413d20:	add	x1, x1, #0xcb8
  413d24:	mov	x0, #0x0                   	// #0
  413d28:	bl	4027a0 <dcgettext@plt>
  413d2c:	ldr	x6, [x21, #32]
  413d30:	ldr	x5, [x21, #24]
  413d34:	ldr	x4, [x21, #16]
  413d38:	ldr	x3, [x21, #8]
  413d3c:	ldr	x2, [x21]
  413d40:	mov	x1, x0
  413d44:	mov	x0, x20
  413d48:	bl	402880 <fprintf@plt>
  413d4c:	b	413bec <wcrtomb@plt+0x1131c>
  413d50:	mov	w2, #0x5                   	// #5
  413d54:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413d58:	add	x1, x1, #0xce0
  413d5c:	mov	x0, #0x0                   	// #0
  413d60:	bl	4027a0 <dcgettext@plt>
  413d64:	ldr	x7, [x21, #40]
  413d68:	ldr	x6, [x21, #32]
  413d6c:	ldr	x5, [x21, #24]
  413d70:	ldr	x4, [x21, #16]
  413d74:	ldr	x3, [x21, #8]
  413d78:	ldr	x2, [x21]
  413d7c:	mov	x1, x0
  413d80:	mov	x0, x20
  413d84:	bl	402880 <fprintf@plt>
  413d88:	b	413bec <wcrtomb@plt+0x1131c>
  413d8c:	mov	w2, #0x5                   	// #5
  413d90:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413d94:	add	x1, x1, #0xd38
  413d98:	mov	x0, #0x0                   	// #0
  413d9c:	bl	4027a0 <dcgettext@plt>
  413da0:	ldr	x1, [x21, #56]
  413da4:	str	x1, [sp, #8]
  413da8:	ldr	x1, [x21, #48]
  413dac:	str	x1, [sp]
  413db0:	ldr	x7, [x21, #40]
  413db4:	ldr	x6, [x21, #32]
  413db8:	ldr	x5, [x21, #24]
  413dbc:	ldr	x4, [x21, #16]
  413dc0:	ldr	x3, [x21, #8]
  413dc4:	ldr	x2, [x21]
  413dc8:	mov	x1, x0
  413dcc:	mov	x0, x20
  413dd0:	bl	402880 <fprintf@plt>
  413dd4:	b	413bec <wcrtomb@plt+0x1131c>
  413dd8:	mov	w2, #0x5                   	// #5
  413ddc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413de0:	add	x1, x1, #0xda0
  413de4:	mov	x0, #0x0                   	// #0
  413de8:	bl	4027a0 <dcgettext@plt>
  413dec:	ldr	x1, [x21, #64]
  413df0:	str	x1, [sp, #16]
  413df4:	ldr	x1, [x21, #56]
  413df8:	str	x1, [sp, #8]
  413dfc:	ldr	x1, [x21, #48]
  413e00:	str	x1, [sp]
  413e04:	ldr	x7, [x21, #40]
  413e08:	ldr	x6, [x21, #32]
  413e0c:	ldr	x5, [x21, #24]
  413e10:	ldr	x4, [x21, #16]
  413e14:	ldr	x3, [x21, #8]
  413e18:	ldr	x2, [x21]
  413e1c:	mov	x1, x0
  413e20:	mov	x0, x20
  413e24:	bl	402880 <fprintf@plt>
  413e28:	b	413bec <wcrtomb@plt+0x1131c>
  413e2c:	stp	x29, x30, [sp, #-16]!
  413e30:	mov	x29, sp
  413e34:	ldr	x5, [x4]
  413e38:	cbz	x5, 413e58 <wcrtomb@plt+0x11588>
  413e3c:	mov	x5, #0x0                   	// #0
  413e40:	add	x5, x5, #0x1
  413e44:	ldr	x6, [x4, x5, lsl #3]
  413e48:	cbnz	x6, 413e40 <wcrtomb@plt+0x11570>
  413e4c:	bl	413ab0 <wcrtomb@plt+0x111e0>
  413e50:	ldp	x29, x30, [sp], #16
  413e54:	ret
  413e58:	mov	x5, #0x0                   	// #0
  413e5c:	b	413e4c <wcrtomb@plt+0x1157c>
  413e60:	stp	x29, x30, [sp, #-96]!
  413e64:	mov	x29, sp
  413e68:	ldr	x7, [x4]
  413e6c:	ldr	w8, [x4, #24]
  413e70:	ldr	x11, [x4, #8]
  413e74:	add	x4, sp, #0x10
  413e78:	mov	x5, #0x0                   	// #0
  413e7c:	b	413eb8 <wcrtomb@plt+0x115e8>
  413e80:	add	w9, w8, #0x8
  413e84:	cmp	w9, #0x0
  413e88:	b.le	413ecc <wcrtomb@plt+0x115fc>
  413e8c:	add	x10, x7, #0xf
  413e90:	mov	w8, w9
  413e94:	mov	x6, x7
  413e98:	and	x7, x10, #0xfffffffffffffff8
  413e9c:	ldr	x6, [x6]
  413ea0:	str	x6, [x4]
  413ea4:	cbz	x6, 413ed8 <wcrtomb@plt+0x11608>
  413ea8:	add	x5, x5, #0x1
  413eac:	add	x4, x4, #0x8
  413eb0:	cmp	x5, #0xa
  413eb4:	b.eq	413ed8 <wcrtomb@plt+0x11608>  // b.none
  413eb8:	tbnz	w8, #31, 413e80 <wcrtomb@plt+0x115b0>
  413ebc:	add	x9, x7, #0xf
  413ec0:	mov	x6, x7
  413ec4:	and	x7, x9, #0xfffffffffffffff8
  413ec8:	b	413e9c <wcrtomb@plt+0x115cc>
  413ecc:	add	x6, x11, w8, sxtw
  413ed0:	mov	w8, w9
  413ed4:	b	413e9c <wcrtomb@plt+0x115cc>
  413ed8:	add	x4, sp, #0x10
  413edc:	bl	413ab0 <wcrtomb@plt+0x111e0>
  413ee0:	ldp	x29, x30, [sp], #96
  413ee4:	ret
  413ee8:	stp	x29, x30, [sp, #-240]!
  413eec:	mov	x29, sp
  413ef0:	str	x4, [sp, #208]
  413ef4:	str	x5, [sp, #216]
  413ef8:	str	x6, [sp, #224]
  413efc:	str	x7, [sp, #232]
  413f00:	str	q0, [sp, #80]
  413f04:	str	q1, [sp, #96]
  413f08:	str	q2, [sp, #112]
  413f0c:	str	q3, [sp, #128]
  413f10:	str	q4, [sp, #144]
  413f14:	str	q5, [sp, #160]
  413f18:	str	q6, [sp, #176]
  413f1c:	str	q7, [sp, #192]
  413f20:	add	x4, sp, #0xf0
  413f24:	str	x4, [sp, #48]
  413f28:	str	x4, [sp, #56]
  413f2c:	add	x4, sp, #0xd0
  413f30:	str	x4, [sp, #64]
  413f34:	mov	w4, #0xffffffe0            	// #-32
  413f38:	str	w4, [sp, #72]
  413f3c:	mov	w4, #0xffffff80            	// #-128
  413f40:	str	w4, [sp, #76]
  413f44:	ldp	x4, x5, [sp, #48]
  413f48:	stp	x4, x5, [sp, #16]
  413f4c:	ldp	x4, x5, [sp, #64]
  413f50:	stp	x4, x5, [sp, #32]
  413f54:	add	x4, sp, #0x10
  413f58:	bl	413e60 <wcrtomb@plt+0x11590>
  413f5c:	ldp	x29, x30, [sp], #240
  413f60:	ret
  413f64:	stp	x29, x30, [sp, #-16]!
  413f68:	mov	x29, sp
  413f6c:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  413f70:	ldr	x1, [x0, #1096]
  413f74:	mov	w0, #0xa                   	// #10
  413f78:	bl	402750 <fputc_unlocked@plt>
  413f7c:	mov	w2, #0x5                   	// #5
  413f80:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413f84:	add	x1, x1, #0xde0
  413f88:	mov	x0, #0x0                   	// #0
  413f8c:	bl	4027a0 <dcgettext@plt>
  413f90:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413f94:	add	x1, x1, #0xdf8
  413f98:	bl	402820 <printf@plt>
  413f9c:	mov	w2, #0x5                   	// #5
  413fa0:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413fa4:	add	x1, x1, #0xe10
  413fa8:	mov	x0, #0x0                   	// #0
  413fac:	bl	4027a0 <dcgettext@plt>
  413fb0:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  413fb4:	add	x2, x2, #0xe28
  413fb8:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  413fbc:	add	x1, x1, #0x148
  413fc0:	bl	402820 <printf@plt>
  413fc4:	mov	w2, #0x5                   	// #5
  413fc8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413fcc:	add	x1, x1, #0xe50
  413fd0:	mov	x0, #0x0                   	// #0
  413fd4:	bl	4027a0 <dcgettext@plt>
  413fd8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  413fdc:	add	x1, x1, #0xe78
  413fe0:	bl	402820 <printf@plt>
  413fe4:	ldp	x29, x30, [sp], #16
  413fe8:	ret
  413fec:	stp	x29, x30, [sp, #-32]!
  413ff0:	mov	x29, sp
  413ff4:	str	x19, [sp, #16]
  413ff8:	mov	x19, x0
  413ffc:	bl	4023f0 <malloc@plt>
  414000:	cmp	x0, #0x0
  414004:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414008:	b.ne	414018 <wcrtomb@plt+0x11748>  // b.any
  41400c:	ldr	x19, [sp, #16]
  414010:	ldp	x29, x30, [sp], #32
  414014:	ret
  414018:	bl	414264 <wcrtomb@plt+0x11994>
  41401c:	stp	x29, x30, [sp, #-16]!
  414020:	mov	x29, sp
  414024:	mul	x3, x0, x1
  414028:	umulh	x2, x0, x1
  41402c:	cmp	x2, #0x0
  414030:	cset	x2, ne  // ne = any
  414034:	cmp	x3, #0x0
  414038:	csinc	x2, x2, xzr, ge  // ge = tcont
  41403c:	cbnz	w2, 414050 <wcrtomb@plt+0x11780>
  414040:	mul	x0, x0, x1
  414044:	bl	413fec <wcrtomb@plt+0x1171c>
  414048:	ldp	x29, x30, [sp], #16
  41404c:	ret
  414050:	bl	414264 <wcrtomb@plt+0x11994>
  414054:	stp	x29, x30, [sp, #-16]!
  414058:	mov	x29, sp
  41405c:	bl	413fec <wcrtomb@plt+0x1171c>
  414060:	ldp	x29, x30, [sp], #16
  414064:	ret
  414068:	stp	x29, x30, [sp, #-32]!
  41406c:	mov	x29, sp
  414070:	cmp	x1, #0x0
  414074:	ccmp	x0, #0x0, #0x4, eq  // eq = none
  414078:	b.ne	4140a0 <wcrtomb@plt+0x117d0>  // b.any
  41407c:	str	x19, [sp, #16]
  414080:	mov	x19, x1
  414084:	bl	402500 <realloc@plt>
  414088:	cmp	x0, #0x0
  41408c:	ccmp	x19, #0x0, #0x4, eq  // eq = none
  414090:	b.ne	4140ac <wcrtomb@plt+0x117dc>  // b.any
  414094:	ldr	x19, [sp, #16]
  414098:	ldp	x29, x30, [sp], #32
  41409c:	ret
  4140a0:	bl	402660 <free@plt>
  4140a4:	mov	x0, #0x0                   	// #0
  4140a8:	b	414098 <wcrtomb@plt+0x117c8>
  4140ac:	bl	414264 <wcrtomb@plt+0x11994>
  4140b0:	stp	x29, x30, [sp, #-16]!
  4140b4:	mov	x29, sp
  4140b8:	mul	x4, x1, x2
  4140bc:	umulh	x3, x1, x2
  4140c0:	cmp	x3, #0x0
  4140c4:	cset	x3, ne  // ne = any
  4140c8:	cmp	x4, #0x0
  4140cc:	csinc	x3, x3, xzr, ge  // ge = tcont
  4140d0:	cbnz	w3, 4140e4 <wcrtomb@plt+0x11814>
  4140d4:	mul	x1, x1, x2
  4140d8:	bl	414068 <wcrtomb@plt+0x11798>
  4140dc:	ldp	x29, x30, [sp], #16
  4140e0:	ret
  4140e4:	bl	414264 <wcrtomb@plt+0x11994>
  4140e8:	stp	x29, x30, [sp, #-16]!
  4140ec:	mov	x29, sp
  4140f0:	ldr	x3, [x1]
  4140f4:	cbz	x0, 414128 <wcrtomb@plt+0x11858>
  4140f8:	mov	x4, #0x5555555555555555    	// #6148914691236517205
  4140fc:	movk	x4, #0x5554
  414100:	udiv	x4, x4, x2
  414104:	cmp	x4, x3
  414108:	b.ls	41415c <wcrtomb@plt+0x1188c>  // b.plast
  41410c:	add	x4, x3, #0x1
  414110:	add	x3, x4, x3, lsr #1
  414114:	str	x3, [x1]
  414118:	mul	x1, x3, x2
  41411c:	bl	414068 <wcrtomb@plt+0x11798>
  414120:	ldp	x29, x30, [sp], #16
  414124:	ret
  414128:	cbnz	x3, 41413c <wcrtomb@plt+0x1186c>
  41412c:	mov	x3, #0x80                  	// #128
  414130:	udiv	x3, x3, x2
  414134:	cmp	x2, #0x80
  414138:	cinc	x3, x3, hi  // hi = pmore
  41413c:	mul	x5, x3, x2
  414140:	umulh	x4, x3, x2
  414144:	cmp	x4, #0x0
  414148:	cset	x4, ne  // ne = any
  41414c:	cmp	x5, #0x0
  414150:	csinc	x4, x4, xzr, ge  // ge = tcont
  414154:	cbz	w4, 414114 <wcrtomb@plt+0x11844>
  414158:	bl	414264 <wcrtomb@plt+0x11994>
  41415c:	bl	414264 <wcrtomb@plt+0x11994>
  414160:	stp	x29, x30, [sp, #-16]!
  414164:	mov	x29, sp
  414168:	mov	x2, x1
  41416c:	ldr	x1, [x1]
  414170:	cbz	x0, 41419c <wcrtomb@plt+0x118cc>
  414174:	mov	x3, #0x5555555555555555    	// #6148914691236517205
  414178:	movk	x3, #0x5553
  41417c:	cmp	x1, x3
  414180:	b.hi	4141a8 <wcrtomb@plt+0x118d8>  // b.pmore
  414184:	add	x3, x1, #0x1
  414188:	add	x1, x3, x1, lsr #1
  41418c:	str	x1, [x2]
  414190:	bl	414068 <wcrtomb@plt+0x11798>
  414194:	ldp	x29, x30, [sp], #16
  414198:	ret
  41419c:	cbz	x1, 4141ac <wcrtomb@plt+0x118dc>
  4141a0:	tbz	x1, #63, 41418c <wcrtomb@plt+0x118bc>
  4141a4:	bl	414264 <wcrtomb@plt+0x11994>
  4141a8:	bl	414264 <wcrtomb@plt+0x11994>
  4141ac:	mov	x1, #0x80                  	// #128
  4141b0:	b	41418c <wcrtomb@plt+0x118bc>
  4141b4:	stp	x29, x30, [sp, #-16]!
  4141b8:	mov	x29, sp
  4141bc:	mul	x3, x0, x1
  4141c0:	umulh	x2, x0, x1
  4141c4:	cmp	x2, #0x0
  4141c8:	cset	x2, ne  // ne = any
  4141cc:	cmp	x3, #0x0
  4141d0:	csinc	x2, x2, xzr, ge  // ge = tcont
  4141d4:	cbnz	w2, 4141e8 <wcrtomb@plt+0x11918>
  4141d8:	bl	4024d0 <calloc@plt>
  4141dc:	cbz	x0, 4141e8 <wcrtomb@plt+0x11918>
  4141e0:	ldp	x29, x30, [sp], #16
  4141e4:	ret
  4141e8:	bl	414264 <wcrtomb@plt+0x11994>
  4141ec:	stp	x29, x30, [sp, #-16]!
  4141f0:	mov	x29, sp
  4141f4:	mov	x1, #0x1                   	// #1
  4141f8:	bl	4141b4 <wcrtomb@plt+0x118e4>
  4141fc:	ldp	x29, x30, [sp], #16
  414200:	ret
  414204:	stp	x29, x30, [sp, #-32]!
  414208:	mov	x29, sp
  41420c:	stp	x19, x20, [sp, #16]
  414210:	mov	x20, x0
  414214:	mov	x19, x1
  414218:	mov	x0, x1
  41421c:	bl	413fec <wcrtomb@plt+0x1171c>
  414220:	mov	x2, x19
  414224:	mov	x1, x20
  414228:	bl	402260 <memcpy@plt>
  41422c:	ldp	x19, x20, [sp, #16]
  414230:	ldp	x29, x30, [sp], #32
  414234:	ret
  414238:	stp	x29, x30, [sp, #-32]!
  41423c:	mov	x29, sp
  414240:	str	x19, [sp, #16]
  414244:	mov	x19, x0
  414248:	bl	4022c0 <strlen@plt>
  41424c:	add	x1, x0, #0x1
  414250:	mov	x0, x19
  414254:	bl	414204 <wcrtomb@plt+0x11934>
  414258:	ldr	x19, [sp, #16]
  41425c:	ldp	x29, x30, [sp], #32
  414260:	ret
  414264:	stp	x29, x30, [sp, #-32]!
  414268:	mov	x29, sp
  41426c:	str	x19, [sp, #16]
  414270:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  414274:	ldr	w19, [x0, #968]
  414278:	mov	w2, #0x5                   	// #5
  41427c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  414280:	add	x1, x1, #0xec8
  414284:	mov	x0, #0x0                   	// #0
  414288:	bl	4027a0 <dcgettext@plt>
  41428c:	mov	x3, x0
  414290:	adrp	x2, 423000 <_obstack_memory_used@@Base+0xc218>
  414294:	add	x2, x2, #0xeb0
  414298:	mov	w1, #0x0                   	// #0
  41429c:	mov	w0, w19
  4142a0:	bl	4022f0 <error@plt>
  4142a4:	bl	4025a0 <abort@plt>
  4142a8:	mov	x4, x0
  4142ac:	sub	w3, w2, #0x1
  4142b0:	cbz	w2, 414324 <wcrtomb@plt+0x11a54>
  4142b4:	sxtw	x2, w1
  4142b8:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
  4142bc:	sdiv	x5, x5, x2
  4142c0:	mov	w0, #0x0                   	// #0
  4142c4:	mov	x7, #0x7fffffffffffffff    	// #9223372036854775807
  4142c8:	mov	w9, #0x0                   	// #0
  4142cc:	mov	w8, #0x1                   	// #1
  4142d0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4142d4:	b	414300 <wcrtomb@plt+0x11a30>
  4142d8:	str	x10, [x4]
  4142dc:	mov	w1, w8
  4142e0:	b	4142f0 <wcrtomb@plt+0x11a20>
  4142e4:	mul	x1, x1, x2
  4142e8:	str	x1, [x4]
  4142ec:	mov	w1, w9
  4142f0:	orr	w0, w0, w1
  4142f4:	sub	w3, w3, #0x1
  4142f8:	cmn	w3, #0x1
  4142fc:	b.eq	414328 <wcrtomb@plt+0x11a58>  // b.none
  414300:	ldr	x1, [x4]
  414304:	cmp	x1, x5
  414308:	b.lt	4142d8 <wcrtomb@plt+0x11a08>  // b.tstop
  41430c:	sdiv	x6, x7, x2
  414310:	cmp	x1, x6
  414314:	b.le	4142e4 <wcrtomb@plt+0x11a14>
  414318:	str	x7, [x4]
  41431c:	mov	w1, w8
  414320:	b	4142f0 <wcrtomb@plt+0x11a20>
  414324:	mov	w0, #0x0                   	// #0
  414328:	ret
  41432c:	stp	x29, x30, [sp, #-96]!
  414330:	mov	x29, sp
  414334:	cmp	w2, #0x24
  414338:	b.hi	4143b0 <wcrtomb@plt+0x11ae0>  // b.pmore
  41433c:	stp	x19, x20, [sp, #16]
  414340:	stp	x21, x22, [sp, #32]
  414344:	stp	x23, x24, [sp, #48]
  414348:	mov	x20, x0
  41434c:	mov	w21, w2
  414350:	mov	x24, x3
  414354:	mov	x23, x4
  414358:	cmp	x1, #0x0
  41435c:	add	x0, sp, #0x58
  414360:	csel	x19, x0, x1, eq  // eq = none
  414364:	bl	402840 <__errno_location@plt>
  414368:	mov	x22, x0
  41436c:	str	wzr, [x0]
  414370:	mov	w3, #0x0                   	// #0
  414374:	mov	w2, w21
  414378:	mov	x1, x19
  41437c:	mov	x0, x20
  414380:	bl	402450 <__strtol_internal@plt>
  414384:	str	x0, [sp, #80]
  414388:	ldr	x21, [x19]
  41438c:	cmp	x21, x20
  414390:	b.eq	4143e0 <wcrtomb@plt+0x11b10>  // b.none
  414394:	ldr	w1, [x22]
  414398:	cbz	w1, 4144d4 <wcrtomb@plt+0x11c04>
  41439c:	mov	w22, #0x4                   	// #4
  4143a0:	cmp	w1, #0x22
  4143a4:	b.ne	4144ec <wcrtomb@plt+0x11c1c>  // b.any
  4143a8:	mov	w22, #0x1                   	// #1
  4143ac:	b	4144d8 <wcrtomb@plt+0x11c08>
  4143b0:	stp	x19, x20, [sp, #16]
  4143b4:	stp	x21, x22, [sp, #32]
  4143b8:	stp	x23, x24, [sp, #48]
  4143bc:	str	x25, [sp, #64]
  4143c0:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  4143c4:	add	x3, x3, #0xf18
  4143c8:	mov	w2, #0x54                  	// #84
  4143cc:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4143d0:	add	x1, x1, #0xee0
  4143d4:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  4143d8:	add	x0, x0, #0xef0
  4143dc:	bl	402830 <__assert_fail@plt>
  4143e0:	cbz	x23, 414754 <wcrtomb@plt+0x11e84>
  4143e4:	ldrb	w1, [x20]
  4143e8:	mov	w22, #0x4                   	// #4
  4143ec:	cbz	w1, 4144ec <wcrtomb@plt+0x11c1c>
  4143f0:	mov	x0, x23
  4143f4:	bl	402690 <strchr@plt>
  4143f8:	cbz	x0, 41475c <wcrtomb@plt+0x11e8c>
  4143fc:	str	x25, [sp, #64]
  414400:	mov	x0, #0x1                   	// #1
  414404:	str	x0, [sp, #80]
  414408:	ldrb	w20, [x21]
  41440c:	mov	w22, #0x0                   	// #0
  414410:	mov	w1, w20
  414414:	mov	x0, x23
  414418:	bl	402690 <strchr@plt>
  41441c:	cbz	x0, 414514 <wcrtomb@plt+0x11c44>
  414420:	sub	w0, w20, #0x45
  414424:	and	w0, w0, #0xff
  414428:	cmp	w0, #0x2f
  41442c:	b.hi	414540 <wcrtomb@plt+0x11c70>  // b.pmore
  414430:	mov	x1, #0x1                   	// #1
  414434:	lsl	x0, x1, x0
  414438:	mov	w25, #0x1                   	// #1
  41443c:	mov	w1, #0x400                 	// #1024
  414440:	mov	x2, #0x8945                	// #35141
  414444:	movk	x2, #0x30, lsl #16
  414448:	movk	x2, #0x8144, lsl #32
  41444c:	tst	x0, x2
  414450:	b.eq	414490 <wcrtomb@plt+0x11bc0>  // b.none
  414454:	mov	w1, #0x30                  	// #48
  414458:	mov	x0, x23
  41445c:	bl	402690 <strchr@plt>
  414460:	cbz	x0, 41454c <wcrtomb@plt+0x11c7c>
  414464:	ldrb	w0, [x21, #1]
  414468:	cmp	w0, #0x44
  41446c:	b.eq	414558 <wcrtomb@plt+0x11c88>  // b.none
  414470:	cmp	w0, #0x69
  414474:	b.eq	414528 <wcrtomb@plt+0x11c58>  // b.none
  414478:	cmp	w0, #0x42
  41447c:	mov	w25, #0x2                   	// #2
  414480:	csinc	w25, w25, wzr, eq  // eq = none
  414484:	mov	w1, #0x400                 	// #1024
  414488:	mov	w0, #0x3e8                 	// #1000
  41448c:	csel	w1, w1, w0, ne  // ne = any
  414490:	cmp	w20, #0x5a
  414494:	b.eq	414704 <wcrtomb@plt+0x11e34>  // b.none
  414498:	b.hi	4145d0 <wcrtomb@plt+0x11d00>  // b.pmore
  41449c:	cmp	w20, #0x4d
  4144a0:	b.eq	414674 <wcrtomb@plt+0x11da4>  // b.none
  4144a4:	b.hi	414598 <wcrtomb@plt+0x11cc8>  // b.pmore
  4144a8:	cmp	w20, #0x45
  4144ac:	b.eq	4146c4 <wcrtomb@plt+0x11df4>  // b.none
  4144b0:	b.ls	414564 <wcrtomb@plt+0x11c94>  // b.plast
  4144b4:	cmp	w20, #0x47
  4144b8:	b.eq	414628 <wcrtomb@plt+0x11d58>  // b.none
  4144bc:	cmp	w20, #0x4b
  4144c0:	b.ne	414714 <wcrtomb@plt+0x11e44>  // b.any
  4144c4:	mov	w2, #0x1                   	// #1
  4144c8:	add	x0, sp, #0x50
  4144cc:	bl	4142a8 <wcrtomb@plt+0x119d8>
  4144d0:	b	41472c <wcrtomb@plt+0x11e5c>
  4144d4:	mov	w22, #0x0                   	// #0
  4144d8:	cbz	x23, 414504 <wcrtomb@plt+0x11c34>
  4144dc:	ldrb	w20, [x21]
  4144e0:	cbnz	w20, 41450c <wcrtomb@plt+0x11c3c>
  4144e4:	ldr	x0, [sp, #80]
  4144e8:	str	x0, [x24]
  4144ec:	mov	w0, w22
  4144f0:	ldp	x19, x20, [sp, #16]
  4144f4:	ldp	x21, x22, [sp, #32]
  4144f8:	ldp	x23, x24, [sp, #48]
  4144fc:	ldp	x29, x30, [sp], #96
  414500:	ret
  414504:	str	x0, [x24]
  414508:	b	4144ec <wcrtomb@plt+0x11c1c>
  41450c:	str	x25, [sp, #64]
  414510:	b	414410 <wcrtomb@plt+0x11b40>
  414514:	ldr	x0, [sp, #80]
  414518:	str	x0, [x24]
  41451c:	orr	w22, w22, #0x2
  414520:	ldr	x25, [sp, #64]
  414524:	b	4144ec <wcrtomb@plt+0x11c1c>
  414528:	ldrb	w0, [x21, #2]
  41452c:	cmp	w0, #0x42
  414530:	mov	w25, #0x3                   	// #3
  414534:	csinc	w25, w25, wzr, eq  // eq = none
  414538:	mov	w1, #0x400                 	// #1024
  41453c:	b	414490 <wcrtomb@plt+0x11bc0>
  414540:	mov	w25, #0x1                   	// #1
  414544:	mov	w1, #0x400                 	// #1024
  414548:	b	414490 <wcrtomb@plt+0x11bc0>
  41454c:	mov	w25, #0x1                   	// #1
  414550:	mov	w1, #0x400                 	// #1024
  414554:	b	414490 <wcrtomb@plt+0x11bc0>
  414558:	mov	w25, #0x2                   	// #2
  41455c:	mov	w1, #0x3e8                 	// #1000
  414560:	b	414490 <wcrtomb@plt+0x11bc0>
  414564:	cmp	w20, #0x42
  414568:	b.ne	414714 <wcrtomb@plt+0x11e44>  // b.any
  41456c:	ldr	x0, [sp, #80]
  414570:	mov	x1, #0xffe0000000000000    	// #-9007199254740992
  414574:	cmp	x0, x1
  414578:	b.lt	4146a4 <wcrtomb@plt+0x11dd4>  // b.tstop
  41457c:	mov	x1, #0x1fffffffffffff      	// #9007199254740991
  414580:	cmp	x0, x1
  414584:	b.gt	4146b4 <wcrtomb@plt+0x11de4>
  414588:	lsl	x0, x0, #10
  41458c:	str	x0, [sp, #80]
  414590:	mov	w0, #0x0                   	// #0
  414594:	b	41472c <wcrtomb@plt+0x11e5c>
  414598:	cmp	w20, #0x54
  41459c:	b.eq	4146d4 <wcrtomb@plt+0x11e04>  // b.none
  4145a0:	cmp	w20, #0x59
  4145a4:	b.ne	4145b8 <wcrtomb@plt+0x11ce8>  // b.any
  4145a8:	mov	w2, #0x8                   	// #8
  4145ac:	add	x0, sp, #0x50
  4145b0:	bl	4142a8 <wcrtomb@plt+0x119d8>
  4145b4:	b	41472c <wcrtomb@plt+0x11e5c>
  4145b8:	cmp	w20, #0x50
  4145bc:	b.ne	414714 <wcrtomb@plt+0x11e44>  // b.any
  4145c0:	mov	w2, #0x5                   	// #5
  4145c4:	add	x0, sp, #0x50
  4145c8:	bl	4142a8 <wcrtomb@plt+0x119d8>
  4145cc:	b	41472c <wcrtomb@plt+0x11e5c>
  4145d0:	cmp	w20, #0x6b
  4145d4:	b.eq	4144c4 <wcrtomb@plt+0x11bf4>  // b.none
  4145d8:	b.ls	414618 <wcrtomb@plt+0x11d48>  // b.plast
  4145dc:	cmp	w20, #0x74
  4145e0:	b.eq	4146d4 <wcrtomb@plt+0x11e04>  // b.none
  4145e4:	cmp	w20, #0x77
  4145e8:	b.ne	41466c <wcrtomb@plt+0x11d9c>  // b.any
  4145ec:	ldr	x0, [sp, #80]
  4145f0:	mov	x1, #0xc000000000000000    	// #-4611686018427387904
  4145f4:	cmp	x0, x1
  4145f8:	b.lt	4146e4 <wcrtomb@plt+0x11e14>  // b.tstop
  4145fc:	mov	x1, #0x3fffffffffffffff    	// #4611686018427387903
  414600:	cmp	x0, x1
  414604:	b.gt	4146f4 <wcrtomb@plt+0x11e24>
  414608:	lsl	x0, x0, #1
  41460c:	str	x0, [sp, #80]
  414610:	mov	w0, #0x0                   	// #0
  414614:	b	41472c <wcrtomb@plt+0x11e5c>
  414618:	cmp	w20, #0x63
  41461c:	b.eq	414728 <wcrtomb@plt+0x11e58>  // b.none
  414620:	cmp	w20, #0x67
  414624:	b.ne	414638 <wcrtomb@plt+0x11d68>  // b.any
  414628:	mov	w2, #0x3                   	// #3
  41462c:	add	x0, sp, #0x50
  414630:	bl	4142a8 <wcrtomb@plt+0x119d8>
  414634:	b	41472c <wcrtomb@plt+0x11e5c>
  414638:	cmp	w20, #0x62
  41463c:	b.ne	414714 <wcrtomb@plt+0x11e44>  // b.any
  414640:	ldr	x0, [sp, #80]
  414644:	mov	x1, #0xffc0000000000000    	// #-18014398509481984
  414648:	cmp	x0, x1
  41464c:	b.lt	414684 <wcrtomb@plt+0x11db4>  // b.tstop
  414650:	mov	x1, #0x3fffffffffffff      	// #18014398509481983
  414654:	cmp	x0, x1
  414658:	b.gt	414694 <wcrtomb@plt+0x11dc4>
  41465c:	lsl	x0, x0, #9
  414660:	str	x0, [sp, #80]
  414664:	mov	w0, #0x0                   	// #0
  414668:	b	41472c <wcrtomb@plt+0x11e5c>
  41466c:	cmp	w20, #0x6d
  414670:	b.ne	414714 <wcrtomb@plt+0x11e44>  // b.any
  414674:	mov	w2, #0x2                   	// #2
  414678:	add	x0, sp, #0x50
  41467c:	bl	4142a8 <wcrtomb@plt+0x119d8>
  414680:	b	41472c <wcrtomb@plt+0x11e5c>
  414684:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  414688:	str	x0, [sp, #80]
  41468c:	mov	w0, #0x1                   	// #1
  414690:	b	41472c <wcrtomb@plt+0x11e5c>
  414694:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  414698:	str	x0, [sp, #80]
  41469c:	mov	w0, #0x1                   	// #1
  4146a0:	b	41472c <wcrtomb@plt+0x11e5c>
  4146a4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4146a8:	str	x0, [sp, #80]
  4146ac:	mov	w0, #0x1                   	// #1
  4146b0:	b	41472c <wcrtomb@plt+0x11e5c>
  4146b4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4146b8:	str	x0, [sp, #80]
  4146bc:	mov	w0, #0x1                   	// #1
  4146c0:	b	41472c <wcrtomb@plt+0x11e5c>
  4146c4:	mov	w2, #0x6                   	// #6
  4146c8:	add	x0, sp, #0x50
  4146cc:	bl	4142a8 <wcrtomb@plt+0x119d8>
  4146d0:	b	41472c <wcrtomb@plt+0x11e5c>
  4146d4:	mov	w2, #0x4                   	// #4
  4146d8:	add	x0, sp, #0x50
  4146dc:	bl	4142a8 <wcrtomb@plt+0x119d8>
  4146e0:	b	41472c <wcrtomb@plt+0x11e5c>
  4146e4:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  4146e8:	str	x0, [sp, #80]
  4146ec:	mov	w0, #0x1                   	// #1
  4146f0:	b	41472c <wcrtomb@plt+0x11e5c>
  4146f4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4146f8:	str	x0, [sp, #80]
  4146fc:	mov	w0, #0x1                   	// #1
  414700:	b	41472c <wcrtomb@plt+0x11e5c>
  414704:	mov	w2, #0x7                   	// #7
  414708:	add	x0, sp, #0x50
  41470c:	bl	4142a8 <wcrtomb@plt+0x119d8>
  414710:	b	41472c <wcrtomb@plt+0x11e5c>
  414714:	ldr	x0, [sp, #80]
  414718:	str	x0, [x24]
  41471c:	orr	w22, w22, #0x2
  414720:	ldr	x25, [sp, #64]
  414724:	b	4144ec <wcrtomb@plt+0x11c1c>
  414728:	mov	w0, #0x0                   	// #0
  41472c:	orr	w22, w22, w0
  414730:	ldr	x0, [x19]
  414734:	add	x1, x0, w25, sxtw
  414738:	str	x1, [x19]
  41473c:	ldrb	w1, [x0, w25, sxtw]
  414740:	orr	w0, w22, #0x2
  414744:	cmp	w1, #0x0
  414748:	csel	w22, w0, w22, ne  // ne = any
  41474c:	ldr	x25, [sp, #64]
  414750:	b	4144e4 <wcrtomb@plt+0x11c14>
  414754:	mov	w22, #0x4                   	// #4
  414758:	b	4144ec <wcrtomb@plt+0x11c1c>
  41475c:	mov	w22, #0x4                   	// #4
  414760:	b	4144ec <wcrtomb@plt+0x11c1c>
  414764:	stp	x29, x30, [sp, #-16]!
  414768:	mov	x29, sp
  41476c:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  414770:	add	x0, x0, #0xf28
  414774:	bl	402850 <getenv@plt>
  414778:	mov	x2, x0
  41477c:	mov	w0, #0x0                   	// #0
  414780:	cbz	x2, 41479c <wcrtomb@plt+0x11ecc>
  414784:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  414788:	add	x1, x1, #0xf30
  41478c:	mov	x0, x2
  414790:	bl	402640 <strcmp@plt>
  414794:	cmp	w0, #0x0
  414798:	cset	w0, ne  // ne = any
  41479c:	ldp	x29, x30, [sp], #16
  4147a0:	ret
  4147a4:	ret
  4147a8:	stp	x29, x30, [sp, #-16]!
  4147ac:	mov	x29, sp
  4147b0:	bl	402820 <printf@plt>
  4147b4:	ldp	x29, x30, [sp], #16
  4147b8:	ret
  4147bc:	stp	x29, x30, [sp, #-16]!
  4147c0:	mov	x29, sp
  4147c4:	adrp	x1, 43e000 <_obstack_memory_used@@Base+0x27218>
  4147c8:	ldr	x1, [x1, #1096]
  4147cc:	bl	4022d0 <fputs@plt>
  4147d0:	ldp	x29, x30, [sp], #16
  4147d4:	ret
  4147d8:	ldr	x3, [x0, #8]
  4147dc:	ldr	x2, [x1, #8]
  4147e0:	cmp	x3, x2
  4147e4:	b.eq	4147f0 <wcrtomb@plt+0x11f20>  // b.none
  4147e8:	mov	w0, #0x0                   	// #0
  4147ec:	ret
  4147f0:	ldr	x2, [x0]
  4147f4:	ldr	x0, [x1]
  4147f8:	cmp	x2, x0
  4147fc:	cset	w0, eq  // eq = none
  414800:	b	4147ec <wcrtomb@plt+0x11f1c>
  414804:	ldr	x0, [x0, #8]
  414808:	udiv	x2, x0, x1
  41480c:	msub	x0, x2, x1, x0
  414810:	ret
  414814:	ldr	x0, [x0]
  414818:	udiv	x2, x0, x1
  41481c:	msub	x0, x2, x1, x0
  414820:	ret
  414824:	ldr	x2, [x0]
  414828:	ldr	x0, [x1]
  41482c:	cmp	x2, x0
  414830:	cset	w0, eq  // eq = none
  414834:	ret
  414838:	ldr	x0, [x0]
  41483c:	ldr	x2, [x0, #128]
  414840:	ldr	x0, [x1]
  414844:	ldr	x0, [x0, #128]
  414848:	cmp	x2, x0
  41484c:	b.cc	41485c <wcrtomb@plt+0x11f8c>  // b.lo, b.ul, b.last
  414850:	cmp	x2, x0
  414854:	cset	w0, hi  // hi = pmore
  414858:	ret
  41485c:	mov	w0, #0xffffffff            	// #-1
  414860:	b	414858 <wcrtomb@plt+0x11f88>
  414864:	stp	x29, x30, [sp, #-32]!
  414868:	mov	x29, sp
  41486c:	str	x19, [sp, #16]
  414870:	mov	x19, x0
  414874:	ldr	x0, [x0, #48]
  414878:	add	x1, x1, #0x100
  41487c:	adds	x1, x1, x0
  414880:	b.cs	4148a8 <wcrtomb@plt+0x11fd8>  // b.hs, b.nlast
  414884:	str	x1, [x19, #48]
  414888:	ldr	x0, [x19, #32]
  41488c:	bl	402500 <realloc@plt>
  414890:	cbz	x0, 4148c8 <wcrtomb@plt+0x11ff8>
  414894:	str	x0, [x19, #32]
  414898:	mov	w0, #0x1                   	// #1
  41489c:	ldr	x19, [sp, #16]
  4148a0:	ldp	x29, x30, [sp], #32
  4148a4:	ret
  4148a8:	ldr	x0, [x19, #32]
  4148ac:	bl	402660 <free@plt>
  4148b0:	str	xzr, [x19, #32]
  4148b4:	bl	402840 <__errno_location@plt>
  4148b8:	mov	w1, #0x24                  	// #36
  4148bc:	str	w1, [x0]
  4148c0:	mov	w0, #0x0                   	// #0
  4148c4:	b	41489c <wcrtomb@plt+0x11fcc>
  4148c8:	ldr	x0, [x19, #32]
  4148cc:	bl	402660 <free@plt>
  4148d0:	str	xzr, [x19, #32]
  4148d4:	mov	w0, #0x0                   	// #0
  4148d8:	b	41489c <wcrtomb@plt+0x11fcc>
  4148dc:	stp	x29, x30, [sp, #-48]!
  4148e0:	mov	x29, sp
  4148e4:	stp	x19, x20, [sp, #16]
  4148e8:	str	x21, [sp, #32]
  4148ec:	mov	x20, x0
  4148f0:	mov	x19, x1
  4148f4:	and	w2, w2, #0xff
  4148f8:	add	x21, x1, #0x78
  4148fc:	ldr	x0, [x1, #88]
  414900:	cbnz	x0, 41490c <wcrtomb@plt+0x1203c>
  414904:	ldr	w0, [x20, #72]
  414908:	tbnz	w0, #0, 41491c <wcrtomb@plt+0x1204c>
  41490c:	ldr	w0, [x20, #72]
  414910:	tst	x0, #0x2
  414914:	ccmp	w2, #0x0, #0x0, eq  // eq = none
  414918:	b.eq	414994 <wcrtomb@plt+0x120c4>  // b.none
  41491c:	mov	x2, x21
  414920:	ldr	x1, [x19, #48]
  414924:	mov	w0, #0x0                   	// #0
  414928:	bl	402860 <__xstat@plt>
  41492c:	cbz	w0, 4149b0 <wcrtomb@plt+0x120e0>
  414930:	bl	402840 <__errno_location@plt>
  414934:	mov	x20, x0
  414938:	ldr	w0, [x0]
  41493c:	cmp	w0, #0x2
  414940:	b.ne	414964 <wcrtomb@plt+0x12094>  // b.any
  414944:	mov	x2, x21
  414948:	ldr	x1, [x19, #48]
  41494c:	mov	w0, #0x0                   	// #0
  414950:	bl	402700 <__lxstat@plt>
  414954:	cbnz	w0, 414964 <wcrtomb@plt+0x12094>
  414958:	str	wzr, [x20]
  41495c:	mov	w0, #0xd                   	// #13
  414960:	b	4149d8 <wcrtomb@plt+0x12108>
  414964:	ldr	w0, [x20]
  414968:	str	w0, [x19, #64]
  41496c:	stp	xzr, xzr, [x19, #120]
  414970:	stp	xzr, xzr, [x21, #16]
  414974:	stp	xzr, xzr, [x21, #32]
  414978:	stp	xzr, xzr, [x21, #48]
  41497c:	stp	xzr, xzr, [x21, #64]
  414980:	stp	xzr, xzr, [x21, #80]
  414984:	stp	xzr, xzr, [x21, #96]
  414988:	stp	xzr, xzr, [x21, #112]
  41498c:	mov	w0, #0xa                   	// #10
  414990:	b	4149d8 <wcrtomb@plt+0x12108>
  414994:	mov	w4, #0x100                 	// #256
  414998:	mov	x3, x21
  41499c:	ldr	x2, [x19, #48]
  4149a0:	ldr	w1, [x20, #44]
  4149a4:	mov	w0, #0x0                   	// #0
  4149a8:	bl	4028c0 <__fxstatat@plt>
  4149ac:	cbnz	w0, 4149e8 <wcrtomb@plt+0x12118>
  4149b0:	ldr	w0, [x19, #136]
  4149b4:	and	w0, w0, #0xf000
  4149b8:	cmp	w0, #0x4, lsl #12
  4149bc:	b.eq	4149f8 <wcrtomb@plt+0x12128>  // b.none
  4149c0:	cmp	w0, #0xa, lsl #12
  4149c4:	b.eq	414a6c <wcrtomb@plt+0x1219c>  // b.none
  4149c8:	cmp	w0, #0x8, lsl #12
  4149cc:	mov	w0, #0x3                   	// #3
  4149d0:	mov	w1, #0x8                   	// #8
  4149d4:	csel	w0, w0, w1, ne  // ne = any
  4149d8:	ldp	x19, x20, [sp, #16]
  4149dc:	ldr	x21, [sp, #32]
  4149e0:	ldp	x29, x30, [sp], #48
  4149e4:	ret
  4149e8:	bl	402840 <__errno_location@plt>
  4149ec:	ldr	w0, [x0]
  4149f0:	str	w0, [x19, #64]
  4149f4:	b	41496c <wcrtomb@plt+0x1209c>
  4149f8:	ldr	w1, [x19, #140]
  4149fc:	mov	w0, #0xffffffff            	// #-1
  414a00:	cmp	w1, #0x1
  414a04:	b.ls	414a24 <wcrtomb@plt+0x12154>  // b.plast
  414a08:	ldr	x2, [x19, #88]
  414a0c:	cmp	x2, #0x0
  414a10:	b.le	414a24 <wcrtomb@plt+0x12154>
  414a14:	ldr	w0, [x20, #72]
  414a18:	tst	x0, #0x20
  414a1c:	cset	w0, eq  // eq = none
  414a20:	sub	w0, w1, w0, lsl #1
  414a24:	str	w0, [x19, #104]
  414a28:	ldrb	w1, [x19, #248]
  414a2c:	mov	w0, #0x1                   	// #1
  414a30:	cmp	w1, #0x2e
  414a34:	b.ne	4149d8 <wcrtomb@plt+0x12108>  // b.any
  414a38:	ldrb	w0, [x19, #249]
  414a3c:	cbz	w0, 414a58 <wcrtomb@plt+0x12188>
  414a40:	ldr	w1, [x19, #248]
  414a44:	and	w1, w1, #0xffff00
  414a48:	mov	w0, #0x1                   	// #1
  414a4c:	mov	w2, #0x2e00                	// #11776
  414a50:	cmp	w1, w2
  414a54:	b.ne	4149d8 <wcrtomb@plt+0x12108>  // b.any
  414a58:	ldr	x0, [x19, #88]
  414a5c:	cmp	x0, #0x0
  414a60:	mov	w0, #0x5                   	// #5
  414a64:	csinc	w0, w0, wzr, ne  // ne = any
  414a68:	b	4149d8 <wcrtomb@plt+0x12108>
  414a6c:	mov	w0, #0xc                   	// #12
  414a70:	b	4149d8 <wcrtomb@plt+0x12108>
  414a74:	stp	x29, x30, [sp, #-48]!
  414a78:	mov	x29, sp
  414a7c:	stp	x19, x20, [sp, #16]
  414a80:	stp	x21, x22, [sp, #32]
  414a84:	mov	x21, x0
  414a88:	mov	x19, x1
  414a8c:	mov	x20, x2
  414a90:	ldr	x22, [x0, #64]
  414a94:	ldr	x1, [x0, #56]
  414a98:	cmp	x1, x2
  414a9c:	b.cs	414ac8 <wcrtomb@plt+0x121f8>  // b.hs, b.nlast
  414aa0:	add	x1, x2, #0x28
  414aa4:	str	x1, [x0, #56]
  414aa8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  414aac:	cmp	x1, x0
  414ab0:	b.hi	414b38 <wcrtomb@plt+0x12268>  // b.pmore
  414ab4:	lsl	x1, x1, #3
  414ab8:	ldr	x0, [x21, #16]
  414abc:	bl	402500 <realloc@plt>
  414ac0:	cbz	x0, 414b38 <wcrtomb@plt+0x12268>
  414ac4:	str	x0, [x21, #16]
  414ac8:	ldr	x1, [x21, #16]
  414acc:	cbz	x19, 414adc <wcrtomb@plt+0x1220c>
  414ad0:	str	x19, [x1], #8
  414ad4:	ldr	x19, [x19, #16]
  414ad8:	cbnz	x19, 414ad0 <wcrtomb@plt+0x12200>
  414adc:	mov	x3, x22
  414ae0:	mov	x2, #0x8                   	// #8
  414ae4:	mov	x1, x20
  414ae8:	ldr	x0, [x21, #16]
  414aec:	bl	402340 <qsort@plt>
  414af0:	ldr	x6, [x21, #16]
  414af4:	ldr	x0, [x6]
  414af8:	subs	x5, x20, #0x1
  414afc:	b.eq	414b20 <wcrtomb@plt+0x12250>  // b.none
  414b00:	mov	x2, x5
  414b04:	mov	x1, x6
  414b08:	ldr	x3, [x1]
  414b0c:	ldr	x4, [x1, #8]!
  414b10:	str	x4, [x3, #16]
  414b14:	subs	x2, x2, #0x1
  414b18:	b.ne	414b08 <wcrtomb@plt+0x12238>  // b.any
  414b1c:	add	x6, x6, x5, lsl #3
  414b20:	ldr	x1, [x6]
  414b24:	str	xzr, [x1, #16]
  414b28:	ldp	x19, x20, [sp, #16]
  414b2c:	ldp	x21, x22, [sp, #32]
  414b30:	ldp	x29, x30, [sp], #48
  414b34:	ret
  414b38:	ldr	x0, [x21, #16]
  414b3c:	bl	402660 <free@plt>
  414b40:	str	xzr, [x21, #16]
  414b44:	str	xzr, [x21, #56]
  414b48:	mov	x0, x19
  414b4c:	b	414b28 <wcrtomb@plt+0x12258>
  414b50:	stp	x29, x30, [sp, #-48]!
  414b54:	mov	x29, sp
  414b58:	stp	x19, x20, [sp, #16]
  414b5c:	stp	x21, x22, [sp, #32]
  414b60:	mov	x21, x0
  414b64:	mov	x22, x1
  414b68:	mov	x20, x2
  414b6c:	add	x0, x2, #0x100
  414b70:	and	x0, x0, #0xfffffffffffffff8
  414b74:	bl	4023f0 <malloc@plt>
  414b78:	mov	x19, x0
  414b7c:	cbz	x0, 414bc4 <wcrtomb@plt+0x122f4>
  414b80:	mov	x2, x20
  414b84:	mov	x1, x22
  414b88:	add	x0, x0, #0xf8
  414b8c:	bl	402260 <memcpy@plt>
  414b90:	add	x0, x19, x20
  414b94:	strb	wzr, [x0, #248]
  414b98:	str	x20, [x19, #96]
  414b9c:	str	x21, [x19, #80]
  414ba0:	ldr	x0, [x21, #32]
  414ba4:	str	x0, [x19, #56]
  414ba8:	str	wzr, [x19, #64]
  414bac:	str	xzr, [x19, #24]
  414bb0:	strh	wzr, [x19, #110]
  414bb4:	mov	w0, #0x3                   	// #3
  414bb8:	strh	w0, [x19, #112]
  414bbc:	str	xzr, [x19, #32]
  414bc0:	str	xzr, [x19, #40]
  414bc4:	mov	x0, x19
  414bc8:	ldp	x19, x20, [sp, #16]
  414bcc:	ldp	x21, x22, [sp, #32]
  414bd0:	ldp	x29, x30, [sp], #48
  414bd4:	ret
  414bd8:	stp	x29, x30, [sp, #-32]!
  414bdc:	mov	x29, sp
  414be0:	str	x19, [sp, #16]
  414be4:	mov	x19, x0
  414be8:	ldr	w1, [x0, #72]
  414bec:	mov	w0, #0x102                 	// #258
  414bf0:	tst	w1, w0
  414bf4:	b.eq	414c34 <wcrtomb@plt+0x12364>  // b.none
  414bf8:	adrp	x4, 402000 <mbrtowc@plt-0x250>
  414bfc:	add	x4, x4, #0x660
  414c00:	adrp	x3, 414000 <wcrtomb@plt+0x11730>
  414c04:	add	x3, x3, #0x7d8
  414c08:	adrp	x2, 414000 <wcrtomb@plt+0x11730>
  414c0c:	add	x2, x2, #0x804
  414c10:	mov	x1, #0x0                   	// #0
  414c14:	mov	x0, #0x1f                  	// #31
  414c18:	bl	410fc8 <wcrtomb@plt+0xe6f8>
  414c1c:	str	x0, [x19, #88]
  414c20:	cmp	x0, #0x0
  414c24:	cset	w0, ne  // ne = any
  414c28:	ldr	x19, [sp, #16]
  414c2c:	ldp	x29, x30, [sp], #32
  414c30:	ret
  414c34:	mov	x0, #0x20                  	// #32
  414c38:	bl	4023f0 <malloc@plt>
  414c3c:	str	x0, [x19, #88]
  414c40:	cbz	x0, 414c50 <wcrtomb@plt+0x12380>
  414c44:	bl	42367c <_obstack_memory_used@@Base+0xc894>
  414c48:	mov	w0, #0x1                   	// #1
  414c4c:	b	414c28 <wcrtomb@plt+0x12358>
  414c50:	mov	w0, #0x0                   	// #0
  414c54:	b	414c28 <wcrtomb@plt+0x12358>
  414c58:	stp	x29, x30, [sp, #-16]!
  414c5c:	mov	x29, sp
  414c60:	mov	x3, x0
  414c64:	mov	x0, x1
  414c68:	ldr	w4, [x3, #72]
  414c6c:	lsl	w2, w4, #11
  414c70:	and	w2, w2, #0x8000
  414c74:	mov	w1, #0x4900                	// #18688
  414c78:	movk	w1, #0x8, lsl #16
  414c7c:	orr	w2, w2, w1
  414c80:	tbz	w4, #9, 414c98 <wcrtomb@plt+0x123c8>
  414c84:	mov	x1, x0
  414c88:	ldr	w0, [x3, #44]
  414c8c:	bl	411f5c <wcrtomb@plt+0xf68c>
  414c90:	ldp	x29, x30, [sp], #16
  414c94:	ret
  414c98:	mov	w1, w2
  414c9c:	bl	4237e0 <_obstack_memory_used@@Base+0xc9f8>
  414ca0:	b	414c90 <wcrtomb@plt+0x123c0>
  414ca4:	stp	x29, x30, [sp, #-32]!
  414ca8:	mov	x29, sp
  414cac:	stp	x19, x20, [sp, #16]
  414cb0:	mov	x19, x0
  414cb4:	cbnz	x0, 414cd4 <wcrtomb@plt+0x12404>
  414cb8:	ldp	x19, x20, [sp, #16]
  414cbc:	ldp	x29, x30, [sp], #32
  414cc0:	ret
  414cc4:	bl	402520 <closedir@plt>
  414cc8:	mov	x0, x20
  414ccc:	bl	402660 <free@plt>
  414cd0:	cbz	x19, 414cb8 <wcrtomb@plt+0x123e8>
  414cd4:	mov	x20, x19
  414cd8:	ldr	x19, [x19, #16]
  414cdc:	ldr	x0, [x20, #24]
  414ce0:	cbnz	x0, 414cc4 <wcrtomb@plt+0x123f4>
  414ce4:	b	414cc8 <wcrtomb@plt+0x123f8>
  414ce8:	stp	x29, x30, [sp, #-16]!
  414cec:	mov	x29, sp
  414cf0:	ldr	w2, [x0, #72]
  414cf4:	mov	w1, #0x102                 	// #258
  414cf8:	tst	w2, w1
  414cfc:	b.eq	414d14 <wcrtomb@plt+0x12444>  // b.none
  414d00:	ldr	x0, [x0, #88]
  414d04:	cbz	x0, 414d0c <wcrtomb@plt+0x1243c>
  414d08:	bl	411154 <wcrtomb@plt+0xe884>
  414d0c:	ldp	x29, x30, [sp], #16
  414d10:	ret
  414d14:	ldr	x0, [x0, #88]
  414d18:	bl	402660 <free@plt>
  414d1c:	b	414d0c <wcrtomb@plt+0x1243c>
  414d20:	stp	x29, x30, [sp, #-32]!
  414d24:	mov	x29, sp
  414d28:	str	x19, [sp, #16]
  414d2c:	mov	x19, x0
  414d30:	mov	x0, x19
  414d34:	bl	4238b0 <_obstack_memory_used@@Base+0xcac8>
  414d38:	and	w0, w0, #0xff
  414d3c:	cbnz	w0, 414d54 <wcrtomb@plt+0x12484>
  414d40:	mov	x0, x19
  414d44:	bl	423904 <_obstack_memory_used@@Base+0xcb1c>
  414d48:	tbnz	w0, #31, 414d30 <wcrtomb@plt+0x12460>
  414d4c:	bl	402530 <close@plt>
  414d50:	b	414d30 <wcrtomb@plt+0x12460>
  414d54:	ldr	x19, [sp, #16]
  414d58:	ldp	x29, x30, [sp], #32
  414d5c:	ret
  414d60:	stp	x29, x30, [sp, #-192]!
  414d64:	mov	x29, sp
  414d68:	stp	x19, x20, [sp, #16]
  414d6c:	stp	x21, x22, [sp, #32]
  414d70:	mov	x19, x0
  414d74:	ldr	x21, [x0, #80]
  414d78:	ldr	w0, [x21, #72]
  414d7c:	tbz	w0, #9, 414e44 <wcrtomb@plt+0x12574>
  414d80:	mov	w22, w1
  414d84:	ldr	x20, [x21, #80]
  414d88:	cbz	x20, 414dac <wcrtomb@plt+0x124dc>
  414d8c:	ldr	x0, [x19, #120]
  414d90:	str	x0, [sp, #56]
  414d94:	add	x1, sp, #0x38
  414d98:	mov	x0, x20
  414d9c:	bl	410d40 <wcrtomb@plt+0xe470>
  414da0:	cbz	x0, 414ddc <wcrtomb@plt+0x1250c>
  414da4:	ldr	x0, [x0, #8]
  414da8:	b	414e48 <wcrtomb@plt+0x12578>
  414dac:	adrp	x4, 402000 <mbrtowc@plt-0x250>
  414db0:	add	x4, x4, #0x660
  414db4:	adrp	x3, 414000 <wcrtomb@plt+0x11730>
  414db8:	add	x3, x3, #0x824
  414dbc:	adrp	x2, 414000 <wcrtomb@plt+0x11730>
  414dc0:	add	x2, x2, #0x814
  414dc4:	mov	x1, #0x0                   	// #0
  414dc8:	mov	x0, #0xd                   	// #13
  414dcc:	bl	410fc8 <wcrtomb@plt+0xe6f8>
  414dd0:	mov	x20, x0
  414dd4:	str	x0, [x21, #80]
  414dd8:	cbnz	x0, 414d8c <wcrtomb@plt+0x124bc>
  414ddc:	tbnz	w22, #31, 414e58 <wcrtomb@plt+0x12588>
  414de0:	add	x1, sp, #0x48
  414de4:	mov	w0, w22
  414de8:	bl	4024b0 <fstatfs@plt>
  414dec:	cbnz	w0, 414e60 <wcrtomb@plt+0x12590>
  414df0:	cbz	x20, 414e2c <wcrtomb@plt+0x1255c>
  414df4:	mov	x0, #0x10                  	// #16
  414df8:	bl	4023f0 <malloc@plt>
  414dfc:	mov	x21, x0
  414e00:	cbz	x0, 414e2c <wcrtomb@plt+0x1255c>
  414e04:	ldr	x0, [x19, #120]
  414e08:	str	x0, [x21]
  414e0c:	ldr	x0, [sp, #72]
  414e10:	str	x0, [x21, #8]
  414e14:	mov	x1, x21
  414e18:	mov	x0, x20
  414e1c:	bl	411500 <wcrtomb@plt+0xec30>
  414e20:	cbz	x0, 414e38 <wcrtomb@plt+0x12568>
  414e24:	cmp	x21, x0
  414e28:	b.ne	414e34 <wcrtomb@plt+0x12564>  // b.any
  414e2c:	ldr	x0, [sp, #72]
  414e30:	b	414e48 <wcrtomb@plt+0x12578>
  414e34:	bl	4025a0 <abort@plt>
  414e38:	mov	x0, x21
  414e3c:	bl	402660 <free@plt>
  414e40:	b	414e2c <wcrtomb@plt+0x1255c>
  414e44:	mov	x0, #0x0                   	// #0
  414e48:	ldp	x19, x20, [sp, #16]
  414e4c:	ldp	x21, x22, [sp, #32]
  414e50:	ldp	x29, x30, [sp], #192
  414e54:	ret
  414e58:	mov	x0, #0x0                   	// #0
  414e5c:	b	414e48 <wcrtomb@plt+0x12578>
  414e60:	mov	x0, #0x0                   	// #0
  414e64:	b	414e48 <wcrtomb@plt+0x12578>
  414e68:	stp	x29, x30, [sp, #-16]!
  414e6c:	mov	x29, sp
  414e70:	bl	414d60 <wcrtomb@plt+0x12490>
  414e74:	mov	x1, x0
  414e78:	mov	x0, #0x4973                	// #18803
  414e7c:	movk	x0, #0x5265, lsl #16
  414e80:	cmp	x1, x0
  414e84:	b.eq	414ef8 <wcrtomb@plt+0x12628>  // b.none
  414e88:	cmp	x1, x0
  414e8c:	b.le	414ecc <wcrtomb@plt+0x125fc>
  414e90:	mov	w0, #0x2                   	// #2
  414e94:	mov	x2, #0x5342                	// #21314
  414e98:	movk	x2, #0x5846, lsl #16
  414e9c:	cmp	x1, x2
  414ea0:	b.eq	414ef0 <wcrtomb@plt+0x12620>  // b.none
  414ea4:	mov	w0, #0x0                   	// #0
  414ea8:	mov	x2, #0x4d42                	// #19778
  414eac:	movk	x2, #0xff53, lsl #16
  414eb0:	cmp	x1, x2
  414eb4:	b.eq	414ef0 <wcrtomb@plt+0x12620>  // b.none
  414eb8:	mov	x0, #0x414f                	// #16719
  414ebc:	movk	x0, #0x5346, lsl #16
  414ec0:	cmp	x1, x0
  414ec4:	cset	w0, ne  // ne = any
  414ec8:	b	414ef0 <wcrtomb@plt+0x12620>
  414ecc:	mov	x0, #0x6969                	// #26985
  414ed0:	cmp	x1, x0
  414ed4:	b.eq	414f00 <wcrtomb@plt+0x12630>  // b.none
  414ed8:	mov	w0, #0x0                   	// #0
  414edc:	mov	x2, #0x9fa0                	// #40864
  414ee0:	cmp	x1, x2
  414ee4:	b.eq	414ef0 <wcrtomb@plt+0x12620>  // b.none
  414ee8:	cmp	x1, #0x0
  414eec:	cset	w0, ne  // ne = any
  414ef0:	ldp	x29, x30, [sp], #16
  414ef4:	ret
  414ef8:	mov	w0, #0x2                   	// #2
  414efc:	b	414ef0 <wcrtomb@plt+0x12620>
  414f00:	mov	w0, #0x0                   	// #0
  414f04:	b	414ef0 <wcrtomb@plt+0x12620>
  414f08:	stp	x29, x30, [sp, #-48]!
  414f0c:	mov	x29, sp
  414f10:	stp	x19, x20, [sp, #16]
  414f14:	mov	x20, x0
  414f18:	mov	x19, x1
  414f1c:	ldr	w1, [x0, #72]
  414f20:	mov	w0, #0x102                 	// #258
  414f24:	tst	w1, w0
  414f28:	b.eq	414f98 <wcrtomb@plt+0x126c8>  // b.none
  414f2c:	str	x21, [sp, #32]
  414f30:	mov	x0, #0x18                  	// #24
  414f34:	bl	4023f0 <malloc@plt>
  414f38:	mov	x21, x0
  414f3c:	cbz	x0, 414fbc <wcrtomb@plt+0x126ec>
  414f40:	ldr	x0, [x19, #120]
  414f44:	str	x0, [x21]
  414f48:	ldr	x0, [x19, #128]
  414f4c:	str	x0, [x21, #8]
  414f50:	str	x19, [x21, #16]
  414f54:	mov	x1, x21
  414f58:	ldr	x0, [x20, #88]
  414f5c:	bl	411500 <wcrtomb@plt+0xec30>
  414f60:	mov	x20, x0
  414f64:	mov	w0, #0x1                   	// #1
  414f68:	cmp	x21, x20
  414f6c:	b.eq	414fe4 <wcrtomb@plt+0x12714>  // b.none
  414f70:	mov	x0, x21
  414f74:	bl	402660 <free@plt>
  414f78:	cbz	x20, 414fc8 <wcrtomb@plt+0x126f8>
  414f7c:	ldr	x0, [x20, #16]
  414f80:	str	x0, [x19]
  414f84:	mov	w0, #0x2                   	// #2
  414f88:	strh	w0, [x19, #108]
  414f8c:	mov	w0, #0x1                   	// #1
  414f90:	ldr	x21, [sp, #32]
  414f94:	b	414fd8 <wcrtomb@plt+0x12708>
  414f98:	add	x1, x19, #0x78
  414f9c:	ldr	x0, [x20, #88]
  414fa0:	bl	423690 <_obstack_memory_used@@Base+0xc8a8>
  414fa4:	ands	w0, w0, #0xff
  414fa8:	b.eq	414fd4 <wcrtomb@plt+0x12704>  // b.none
  414fac:	str	x19, [x19]
  414fb0:	mov	w1, #0x2                   	// #2
  414fb4:	strh	w1, [x19, #108]
  414fb8:	b	414fd8 <wcrtomb@plt+0x12708>
  414fbc:	mov	w0, #0x0                   	// #0
  414fc0:	ldr	x21, [sp, #32]
  414fc4:	b	414fd8 <wcrtomb@plt+0x12708>
  414fc8:	mov	w0, #0x0                   	// #0
  414fcc:	ldr	x21, [sp, #32]
  414fd0:	b	414fd8 <wcrtomb@plt+0x12708>
  414fd4:	mov	w0, #0x1                   	// #1
  414fd8:	ldp	x19, x20, [sp, #16]
  414fdc:	ldp	x29, x30, [sp], #48
  414fe0:	ret
  414fe4:	ldr	x21, [sp, #32]
  414fe8:	b	414fd8 <wcrtomb@plt+0x12708>
  414fec:	stp	x29, x30, [sp, #-32]!
  414ff0:	mov	x29, sp
  414ff4:	stp	x19, x20, [sp, #16]
  414ff8:	mov	x19, x0
  414ffc:	mov	w20, w1
  415000:	ldr	w1, [x0, #44]
  415004:	cmp	w1, w20
  415008:	mov	w0, #0xffffff9c            	// #-100
  41500c:	ccmp	w1, w0, #0x4, eq  // eq = none
  415010:	b.ne	41503c <wcrtomb@plt+0x1276c>  // b.any
  415014:	and	w2, w2, #0xff
  415018:	cbnz	w2, 415040 <wcrtomb@plt+0x12770>
  41501c:	ldr	w0, [x19, #72]
  415020:	tst	x0, #0x4
  415024:	ccmp	w1, #0x0, #0x1, eq  // eq = none
  415028:	b.ge	415054 <wcrtomb@plt+0x12784>  // b.tcont
  41502c:	str	w20, [x19, #44]
  415030:	ldp	x19, x20, [sp, #16]
  415034:	ldp	x29, x30, [sp], #32
  415038:	ret
  41503c:	bl	4025a0 <abort@plt>
  415040:	add	x0, x19, #0x60
  415044:	bl	4238b8 <_obstack_memory_used@@Base+0xcad0>
  415048:	tbnz	w0, #31, 41502c <wcrtomb@plt+0x1275c>
  41504c:	bl	402530 <close@plt>
  415050:	b	41502c <wcrtomb@plt+0x1275c>
  415054:	mov	w0, w1
  415058:	bl	402530 <close@plt>
  41505c:	b	41502c <wcrtomb@plt+0x1275c>
  415060:	stp	x29, x30, [sp, #-32]!
  415064:	mov	x29, sp
  415068:	stp	x19, x20, [sp, #16]
  41506c:	mov	x19, x0
  415070:	ldr	w0, [x0, #72]
  415074:	mov	w20, #0x0                   	// #0
  415078:	tbnz	w0, #2, 415094 <wcrtomb@plt+0x127c4>
  41507c:	and	w20, w0, #0x4
  415080:	tbz	w0, #9, 4150ac <wcrtomb@plt+0x127dc>
  415084:	mov	w2, #0x1                   	// #1
  415088:	mov	w1, #0xffffff9c            	// #-100
  41508c:	mov	x0, x19
  415090:	bl	414fec <wcrtomb@plt+0x1271c>
  415094:	add	x0, x19, #0x60
  415098:	bl	414d20 <wcrtomb@plt+0x12450>
  41509c:	mov	w0, w20
  4150a0:	ldp	x19, x20, [sp, #16]
  4150a4:	ldp	x29, x30, [sp], #32
  4150a8:	ret
  4150ac:	ldr	w0, [x19, #40]
  4150b0:	bl	402300 <fchdir@plt>
  4150b4:	cmp	w0, #0x0
  4150b8:	cset	w20, ne  // ne = any
  4150bc:	b	415094 <wcrtomb@plt+0x127c4>
  4150c0:	stp	x29, x30, [sp, #-192]!
  4150c4:	mov	x29, sp
  4150c8:	stp	x19, x20, [sp, #16]
  4150cc:	stp	x21, x22, [sp, #32]
  4150d0:	stp	x23, x24, [sp, #48]
  4150d4:	mov	x20, x0
  4150d8:	mov	x23, x1
  4150dc:	mov	w21, w2
  4150e0:	mov	x19, x3
  4150e4:	cbz	x3, 4151e8 <wcrtomb@plt+0x12918>
  4150e8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  4150ec:	add	x1, x1, #0xf38
  4150f0:	mov	x0, x3
  4150f4:	bl	402640 <strcmp@plt>
  4150f8:	cbnz	w0, 4151e8 <wcrtomb@plt+0x12918>
  4150fc:	ldr	w3, [x20, #72]
  415100:	tbnz	w3, #2, 415140 <wcrtomb@plt+0x12870>
  415104:	tbz	w21, #31, 41519c <wcrtomb@plt+0x128cc>
  415108:	tbz	w3, #9, 415120 <wcrtomb@plt+0x12850>
  41510c:	add	x22, x20, #0x60
  415110:	mov	x0, x22
  415114:	bl	4238b0 <_obstack_memory_used@@Base+0xcac8>
  415118:	and	w0, w0, #0xff
  41511c:	cbz	w0, 41515c <wcrtomb@plt+0x1288c>
  415120:	mov	w24, #0x1                   	// #1
  415124:	mov	x1, x19
  415128:	mov	x0, x20
  41512c:	bl	414c58 <wcrtomb@plt+0x12388>
  415130:	mov	w22, w0
  415134:	tbz	w0, #31, 4151fc <wcrtomb@plt+0x1292c>
  415138:	mov	w19, #0xffffffff            	// #-1
  41513c:	b	415264 <wcrtomb@plt+0x12994>
  415140:	tst	x3, #0x200
  415144:	mov	w19, #0x0                   	// #0
  415148:	ccmp	w21, #0x0, #0x1, ne  // ne = any
  41514c:	b.lt	415264 <wcrtomb@plt+0x12994>  // b.tstop
  415150:	mov	w0, w21
  415154:	bl	402530 <close@plt>
  415158:	b	415264 <wcrtomb@plt+0x12994>
  41515c:	mov	x0, x22
  415160:	bl	423904 <_obstack_memory_used@@Base+0xcb1c>
  415164:	mov	w22, w0
  415168:	tbnz	w0, #31, 415120 <wcrtomb@plt+0x12850>
  41516c:	ldr	w0, [x20, #72]
  415170:	tbnz	w0, #1, 4151a8 <wcrtomb@plt+0x128d8>
  415174:	mov	w21, w22
  415178:	mov	w24, #0x1                   	// #1
  41517c:	ldr	w0, [x20, #72]
  415180:	tbnz	w0, #9, 4151b4 <wcrtomb@plt+0x128e4>
  415184:	mov	w0, w22
  415188:	bl	402300 <fchdir@plt>
  41518c:	mov	w19, w0
  415190:	b	415260 <wcrtomb@plt+0x12990>
  415194:	mov	w24, #0x0                   	// #0
  415198:	b	415124 <wcrtomb@plt+0x12854>
  41519c:	mov	w22, w21
  4151a0:	mov	w24, #0x1                   	// #1
  4151a4:	b	4151fc <wcrtomb@plt+0x1292c>
  4151a8:	mov	w21, w22
  4151ac:	mov	w24, #0x1                   	// #1
  4151b0:	b	41521c <wcrtomb@plt+0x1294c>
  4151b4:	eor	w2, w24, #0x1
  4151b8:	mov	w1, w22
  4151bc:	mov	x0, x20
  4151c0:	bl	414fec <wcrtomb@plt+0x1271c>
  4151c4:	mov	w19, #0x0                   	// #0
  4151c8:	b	415264 <wcrtomb@plt+0x12994>
  4151cc:	bl	402840 <__errno_location@plt>
  4151d0:	mov	x20, x0
  4151d4:	ldr	w21, [x0]
  4151d8:	mov	w0, w22
  4151dc:	bl	402530 <close@plt>
  4151e0:	str	w21, [x20]
  4151e4:	b	415264 <wcrtomb@plt+0x12994>
  4151e8:	ldr	w3, [x20, #72]
  4151ec:	tbnz	w3, #2, 415140 <wcrtomb@plt+0x12870>
  4151f0:	tbnz	w21, #31, 415194 <wcrtomb@plt+0x128c4>
  4151f4:	mov	w22, w21
  4151f8:	mov	w24, #0x0                   	// #0
  4151fc:	ldr	w0, [x20, #72]
  415200:	tbnz	w0, #1, 41521c <wcrtomb@plt+0x1294c>
  415204:	cbz	x19, 41517c <wcrtomb@plt+0x128ac>
  415208:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41520c:	add	x1, x1, #0xf38
  415210:	mov	x0, x19
  415214:	bl	402640 <strcmp@plt>
  415218:	cbnz	w0, 41517c <wcrtomb@plt+0x128ac>
  41521c:	add	x2, sp, #0x40
  415220:	mov	w1, w22
  415224:	mov	w0, #0x0                   	// #0
  415228:	bl	402780 <__fxstat@plt>
  41522c:	cbnz	w0, 41525c <wcrtomb@plt+0x1298c>
  415230:	ldr	x1, [x23, #120]
  415234:	ldr	x0, [sp, #64]
  415238:	cmp	x1, x0
  41523c:	b.ne	415250 <wcrtomb@plt+0x12980>  // b.any
  415240:	ldr	x1, [x23, #128]
  415244:	ldr	x0, [sp, #72]
  415248:	cmp	x1, x0
  41524c:	b.eq	41517c <wcrtomb@plt+0x128ac>  // b.none
  415250:	bl	402840 <__errno_location@plt>
  415254:	mov	w1, #0x2                   	// #2
  415258:	str	w1, [x0]
  41525c:	mov	w19, #0xffffffff            	// #-1
  415260:	tbnz	w21, #31, 4151cc <wcrtomb@plt+0x128fc>
  415264:	mov	w0, w19
  415268:	ldp	x19, x20, [sp, #16]
  41526c:	ldp	x21, x22, [sp, #32]
  415270:	ldp	x23, x24, [sp, #48]
  415274:	ldp	x29, x30, [sp], #192
  415278:	ret
  41527c:	stp	x29, x30, [sp, #-48]!
  415280:	mov	x29, sp
  415284:	ldr	w3, [x0, #72]
  415288:	mov	w2, #0x102                 	// #258
  41528c:	tst	w3, w2
  415290:	b.ne	4152e8 <wcrtomb@plt+0x12a18>  // b.any
  415294:	ldr	x2, [x1, #8]
  415298:	cbz	x2, 41530c <wcrtomb@plt+0x12a3c>
  41529c:	ldr	x3, [x2, #88]
  4152a0:	tbnz	x3, #63, 41530c <wcrtomb@plt+0x12a3c>
  4152a4:	ldr	x3, [x0, #88]
  4152a8:	ldr	x4, [x3, #16]
  4152ac:	cbz	x4, 415318 <wcrtomb@plt+0x12a48>
  4152b0:	ldr	x5, [x3]
  4152b4:	ldr	x4, [x1, #128]
  4152b8:	cmp	x5, x4
  4152bc:	b.ne	41530c <wcrtomb@plt+0x12a3c>  // b.any
  4152c0:	ldr	x4, [x3, #8]
  4152c4:	ldr	x1, [x1, #120]
  4152c8:	cmp	x4, x1
  4152cc:	b.ne	41530c <wcrtomb@plt+0x12a3c>  // b.any
  4152d0:	ldr	x1, [x2, #120]
  4152d4:	str	x1, [x3, #8]
  4152d8:	ldr	x0, [x0, #88]
  4152dc:	ldr	x1, [x2, #128]
  4152e0:	str	x1, [x0]
  4152e4:	b	41530c <wcrtomb@plt+0x12a3c>
  4152e8:	ldr	x2, [x1, #120]
  4152ec:	str	x2, [sp, #24]
  4152f0:	ldr	x1, [x1, #128]
  4152f4:	str	x1, [sp, #32]
  4152f8:	add	x1, sp, #0x18
  4152fc:	ldr	x0, [x0, #88]
  415300:	bl	411540 <wcrtomb@plt+0xec70>
  415304:	cbz	x0, 415314 <wcrtomb@plt+0x12a44>
  415308:	bl	402660 <free@plt>
  41530c:	ldp	x29, x30, [sp], #48
  415310:	ret
  415314:	bl	4025a0 <abort@plt>
  415318:	bl	4025a0 <abort@plt>
  41531c:	stp	x29, x30, [sp, #-176]!
  415320:	mov	x29, sp
  415324:	stp	x19, x20, [sp, #16]
  415328:	stp	x21, x22, [sp, #32]
  41532c:	stp	x23, x24, [sp, #48]
  415330:	stp	x27, x28, [sp, #80]
  415334:	mov	x20, x0
  415338:	str	w1, [sp, #140]
  41533c:	ldr	x24, [x0]
  415340:	ldr	x0, [x24, #24]
  415344:	str	x0, [sp, #144]
  415348:	cbz	x0, 41543c <wcrtomb@plt+0x12b6c>
  41534c:	bl	4026f0 <dirfd@plt>
  415350:	str	w0, [sp, #172]
  415354:	tbnz	w0, #31, 415408 <wcrtomb@plt+0x12b38>
  415358:	stp	x25, x26, [sp, #64]
  41535c:	ldr	x0, [x20, #64]
  415360:	cmp	x0, #0x0
  415364:	mov	x0, #0x86a0                	// #34464
  415368:	movk	x0, #0x1, lsl #16
  41536c:	csinv	x0, x0, xzr, eq  // eq = none
  415370:	str	x0, [sp, #120]
  415374:	mov	w0, #0x1                   	// #1
  415378:	str	w0, [sp, #156]
  41537c:	ldr	x0, [x24, #72]
  415380:	sub	x1, x0, #0x1
  415384:	mov	x2, x1
  415388:	ldr	x1, [x24, #56]
  41538c:	ldrb	w2, [x1, x2]
  415390:	sub	x1, x0, #0x1
  415394:	cmp	w2, #0x2f
  415398:	csel	x2, x1, x0, eq  // eq = none
  41539c:	str	x2, [sp, #128]
  4153a0:	ldr	w0, [x20, #72]
  4153a4:	str	xzr, [sp, #112]
  4153a8:	tbz	w0, #2, 4153c4 <wcrtomb@plt+0x12af4>
  4153ac:	ldr	x0, [x20, #32]
  4153b0:	add	x1, x0, x2
  4153b4:	add	x1, x1, #0x1
  4153b8:	str	x1, [sp, #112]
  4153bc:	mov	w1, #0x2f                  	// #47
  4153c0:	strb	w1, [x0, x2]
  4153c4:	ldr	x0, [sp, #128]
  4153c8:	add	x23, x0, #0x1
  4153cc:	ldr	x26, [x20, #48]
  4153d0:	sub	x26, x26, x23
  4153d4:	ldr	x0, [x24, #88]
  4153d8:	add	x0, x0, #0x1
  4153dc:	str	x0, [sp, #104]
  4153e0:	ldr	x27, [x24, #24]
  4153e4:	cbz	x27, 415af8 <wcrtomb@plt+0x13228>
  4153e8:	bl	402840 <__errno_location@plt>
  4153ec:	mov	x28, x0
  4153f0:	str	wzr, [sp, #152]
  4153f4:	str	wzr, [sp, #136]
  4153f8:	str	xzr, [sp, #96]
  4153fc:	mov	x25, #0x0                   	// #0
  415400:	mov	x27, #0x0                   	// #0
  415404:	b	4158fc <wcrtomb@plt+0x1302c>
  415408:	ldr	x0, [x24, #24]
  41540c:	bl	402520 <closedir@plt>
  415410:	str	xzr, [x24, #24]
  415414:	mov	x27, #0x0                   	// #0
  415418:	ldr	w0, [sp, #140]
  41541c:	cmp	w0, #0x3
  415420:	b.ne	4157cc <wcrtomb@plt+0x12efc>  // b.any
  415424:	mov	w0, #0x4                   	// #4
  415428:	strh	w0, [x24, #108]
  41542c:	bl	402840 <__errno_location@plt>
  415430:	ldr	w0, [x0]
  415434:	str	w0, [x24, #64]
  415438:	b	4157cc <wcrtomb@plt+0x12efc>
  41543c:	ldr	w3, [x20, #72]
  415440:	mov	w1, #0x204                 	// #516
  415444:	and	w1, w3, w1
  415448:	mov	w0, #0xffffff9c            	// #-100
  41544c:	cmp	w1, #0x200
  415450:	b.eq	415548 <wcrtomb@plt+0x12c78>  // b.none
  415454:	ldr	x1, [x24, #48]
  415458:	and	w2, w3, #0x10
  41545c:	tbz	w3, #4, 415478 <wcrtomb@plt+0x12ba8>
  415460:	mov	w2, #0x8000                	// #32768
  415464:	tbz	w3, #0, 415478 <wcrtomb@plt+0x12ba8>
  415468:	ldr	x2, [x24, #88]
  41546c:	cmp	x2, #0x0
  415470:	cset	w2, ne  // ne = any
  415474:	lsl	w2, w2, #15
  415478:	add	x3, sp, #0xac
  41547c:	bl	423994 <_obstack_memory_used@@Base+0xcbac>
  415480:	mov	x27, x0
  415484:	str	x0, [x24, #24]
  415488:	cbz	x0, 415550 <wcrtomb@plt+0x12c80>
  41548c:	ldrh	w0, [x24, #108]
  415490:	cmp	w0, #0xb
  415494:	b.eq	415574 <wcrtomb@plt+0x12ca4>  // b.none
  415498:	ldr	w0, [x20, #72]
  41549c:	tbnz	w0, #8, 415590 <wcrtomb@plt+0x12cc0>
  4154a0:	stp	x25, x26, [sp, #64]
  4154a4:	ldr	x0, [x20, #64]
  4154a8:	cmp	x0, #0x0
  4154ac:	mov	x0, #0x86a0                	// #34464
  4154b0:	movk	x0, #0x1, lsl #16
  4154b4:	csinv	x0, x0, xzr, eq  // eq = none
  4154b8:	str	x0, [sp, #120]
  4154bc:	str	wzr, [sp, #156]
  4154c0:	ldr	w0, [sp, #140]
  4154c4:	cmp	w0, #0x2
  4154c8:	b.eq	41537c <wcrtomb@plt+0x12aac>  // b.none
  4154cc:	ldr	w0, [x20, #72]
  4154d0:	and	w0, w0, #0x38
  4154d4:	cmp	w0, #0x18
  4154d8:	b.eq	4155dc <wcrtomb@plt+0x12d0c>  // b.none
  4154dc:	ldr	w0, [sp, #140]
  4154e0:	cmp	w0, #0x3
  4154e4:	cset	w21, eq  // eq = none
  4154e8:	mov	w19, #0x1                   	// #1
  4154ec:	ldr	w0, [x20, #72]
  4154f0:	tbnz	w0, #9, 415618 <wcrtomb@plt+0x12d48>
  4154f4:	ldr	w2, [sp, #172]
  4154f8:	tbz	w2, #31, 415630 <wcrtomb@plt+0x12d60>
  4154fc:	cmp	w21, #0x0
  415500:	ccmp	w19, #0x0, #0x4, ne  // ne = any
  415504:	b.eq	415514 <wcrtomb@plt+0x12c44>  // b.none
  415508:	bl	402840 <__errno_location@plt>
  41550c:	ldr	w0, [x0]
  415510:	str	w0, [x24, #64]
  415514:	ldrh	w0, [x24, #110]
  415518:	orr	w0, w0, #0x1
  41551c:	strh	w0, [x24, #110]
  415520:	ldr	x0, [x24, #24]
  415524:	bl	402520 <closedir@plt>
  415528:	str	xzr, [x24, #24]
  41552c:	ldr	w0, [x20, #72]
  415530:	tbz	w0, #9, 41553c <wcrtomb@plt+0x12c6c>
  415534:	ldr	w0, [sp, #172]
  415538:	tbz	w0, #31, 415650 <wcrtomb@plt+0x12d80>
  41553c:	str	xzr, [x24, #24]
  415540:	str	wzr, [sp, #156]
  415544:	b	41537c <wcrtomb@plt+0x12aac>
  415548:	ldr	w0, [x20, #44]
  41554c:	b	415454 <wcrtomb@plt+0x12b84>
  415550:	ldr	w0, [sp, #140]
  415554:	cmp	w0, #0x3
  415558:	b.ne	4157cc <wcrtomb@plt+0x12efc>  // b.any
  41555c:	mov	w0, #0x4                   	// #4
  415560:	strh	w0, [x24, #108]
  415564:	bl	402840 <__errno_location@plt>
  415568:	ldr	w0, [x0]
  41556c:	str	w0, [x24, #64]
  415570:	b	4157cc <wcrtomb@plt+0x12efc>
  415574:	stp	x25, x26, [sp, #64]
  415578:	mov	w2, #0x0                   	// #0
  41557c:	mov	x1, x24
  415580:	mov	x0, x20
  415584:	bl	4148dc <wcrtomb@plt+0x1200c>
  415588:	strh	w0, [x24, #108]
  41558c:	b	4154a4 <wcrtomb@plt+0x12bd4>
  415590:	mov	x1, x24
  415594:	mov	x0, x20
  415598:	bl	41527c <wcrtomb@plt+0x129ac>
  41559c:	mov	w2, #0x0                   	// #0
  4155a0:	mov	x1, x24
  4155a4:	mov	x0, x20
  4155a8:	bl	4148dc <wcrtomb@plt+0x1200c>
  4155ac:	mov	x1, x24
  4155b0:	mov	x0, x20
  4155b4:	bl	414f08 <wcrtomb@plt+0x12638>
  4155b8:	and	w0, w0, #0xff
  4155bc:	cbz	w0, 4155c8 <wcrtomb@plt+0x12cf8>
  4155c0:	stp	x25, x26, [sp, #64]
  4155c4:	b	4154a4 <wcrtomb@plt+0x12bd4>
  4155c8:	bl	402840 <__errno_location@plt>
  4155cc:	mov	w1, #0xc                   	// #12
  4155d0:	str	w1, [x0]
  4155d4:	ldr	x27, [sp, #144]
  4155d8:	b	4157cc <wcrtomb@plt+0x12efc>
  4155dc:	ldr	w0, [x24, #140]
  4155e0:	cmp	w0, #0x2
  4155e4:	b.ne	4154dc <wcrtomb@plt+0x12c0c>  // b.any
  4155e8:	ldr	w1, [sp, #172]
  4155ec:	mov	x0, x24
  4155f0:	bl	414e68 <wcrtomb@plt+0x12598>
  4155f4:	cmp	w0, #0x0
  4155f8:	cset	w19, eq  // eq = none
  4155fc:	ldr	w0, [sp, #140]
  415600:	cmp	w0, #0x3
  415604:	cset	w21, eq  // eq = none
  415608:	orr	w0, w21, w19
  41560c:	str	w0, [sp, #156]
  415610:	cbz	w0, 41537c <wcrtomb@plt+0x12aac>
  415614:	b	4154ec <wcrtomb@plt+0x12c1c>
  415618:	mov	w2, #0x3                   	// #3
  41561c:	mov	w1, #0x406                 	// #1030
  415620:	ldr	w0, [sp, #172]
  415624:	bl	423ac8 <_obstack_memory_used@@Base+0xcce0>
  415628:	str	w0, [sp, #172]
  41562c:	b	4154f4 <wcrtomb@plt+0x12c24>
  415630:	mov	x3, #0x0                   	// #0
  415634:	mov	x1, x24
  415638:	mov	x0, x20
  41563c:	bl	4150c0 <wcrtomb@plt+0x127f0>
  415640:	mov	w1, #0x1                   	// #1
  415644:	str	w1, [sp, #156]
  415648:	cbz	w0, 41537c <wcrtomb@plt+0x12aac>
  41564c:	b	4154fc <wcrtomb@plt+0x12c2c>
  415650:	bl	402530 <close@plt>
  415654:	b	41553c <wcrtomb@plt+0x12c6c>
  415658:	ldr	w0, [x28]
  41565c:	cbz	w0, 415680 <wcrtomb@plt+0x12db0>
  415660:	str	w0, [x24, #64]
  415664:	ldr	x0, [sp, #144]
  415668:	orr	x0, x0, x25
  41566c:	cmp	x0, #0x0
  415670:	mov	w0, #0x7                   	// #7
  415674:	mov	w1, #0x4                   	// #4
  415678:	csel	w0, w0, w1, ne  // ne = any
  41567c:	strh	w0, [x24, #108]
  415680:	ldr	x0, [x24, #24]
  415684:	cbz	x0, 415690 <wcrtomb@plt+0x12dc0>
  415688:	bl	402520 <closedir@plt>
  41568c:	str	xzr, [x24, #24]
  415690:	ldr	w0, [sp, #136]
  415694:	cbnz	w0, 415a68 <wcrtomb@plt+0x13198>
  415698:	ldr	w0, [x20, #72]
  41569c:	tbz	w0, #2, 4156bc <wcrtomb@plt+0x12dec>
  4156a0:	ldr	x0, [x20, #48]
  4156a4:	cmp	x25, #0x0
  4156a8:	ccmp	x0, x23, #0x4, ne  // ne = any
  4156ac:	cset	x0, eq  // eq = none
  4156b0:	ldr	x1, [sp, #112]
  4156b4:	sub	x0, x1, x0
  4156b8:	strb	wzr, [x0]
  4156bc:	ldr	x0, [sp, #144]
  4156c0:	cmp	x0, #0x0
  4156c4:	ldr	w0, [sp, #156]
  4156c8:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4156cc:	b.eq	4156fc <wcrtomb@plt+0x12e2c>  // b.none
  4156d0:	cmp	x25, #0x0
  4156d4:	ldr	w0, [sp, #140]
  4156d8:	ccmp	w0, #0x1, #0x4, ne  // ne = any
  4156dc:	b.ne	415700 <wcrtomb@plt+0x12e30>  // b.any
  4156e0:	ldr	x0, [x24, #88]
  4156e4:	cbnz	x0, 415b04 <wcrtomb@plt+0x13234>
  4156e8:	mov	x0, x20
  4156ec:	bl	415060 <wcrtomb@plt+0x12790>
  4156f0:	cmp	w0, #0x0
  4156f4:	cset	w0, ne  // ne = any
  4156f8:	cbnz	w0, 415b28 <wcrtomb@plt+0x13258>
  4156fc:	cbz	x25, 415b50 <wcrtomb@plt+0x13280>
  415700:	ldr	w0, [sp, #152]
  415704:	cbnz	w0, 415b8c <wcrtomb@plt+0x132bc>
  415708:	ldr	x0, [x20, #64]
  41570c:	cmp	x0, #0x0
  415710:	ccmp	x25, #0x1, #0x0, ne  // ne = any
  415714:	b.hi	415bb8 <wcrtomb@plt+0x132e8>  // b.pmore
  415718:	ldp	x25, x26, [sp, #64]
  41571c:	b	4157cc <wcrtomb@plt+0x12efc>
  415720:	ldrb	w0, [x22, #20]
  415724:	cbz	w0, 4158f4 <wcrtomb@plt+0x13024>
  415728:	ldrh	w0, [x22, #20]
  41572c:	cmp	w0, #0x2e
  415730:	b.ne	415924 <wcrtomb@plt+0x13054>  // b.any
  415734:	b	4158f4 <wcrtomb@plt+0x13024>
  415738:	ldr	x26, [x20, #32]
  41573c:	ldr	x0, [sp, #128]
  415740:	add	x1, x0, #0x2
  415744:	add	x1, x1, x21
  415748:	mov	x0, x20
  41574c:	bl	414864 <wcrtomb@plt+0x11f94>
  415750:	ands	w0, w0, #0xff
  415754:	b.eq	41578c <wcrtomb@plt+0x12ebc>  // b.none
  415758:	ldr	x1, [x20, #32]
  41575c:	cmp	x1, x26
  415760:	b.eq	4157e8 <wcrtomb@plt+0x12f18>  // b.none
  415764:	ldr	w2, [x20, #72]
  415768:	add	x1, x1, x23
  41576c:	tst	x2, #0x4
  415770:	ldr	x2, [sp, #112]
  415774:	csel	x1, x1, x2, ne  // ne = any
  415778:	str	x1, [sp, #112]
  41577c:	ldr	x26, [x20, #48]
  415780:	sub	x26, x26, x23
  415784:	str	w0, [sp, #136]
  415788:	b	415954 <wcrtomb@plt+0x13084>
  41578c:	ldr	w21, [x28]
  415790:	mov	x0, x19
  415794:	bl	402660 <free@plt>
  415798:	mov	x0, x27
  41579c:	bl	414ca4 <wcrtomb@plt+0x123d4>
  4157a0:	ldr	x0, [x24, #24]
  4157a4:	bl	402520 <closedir@plt>
  4157a8:	str	xzr, [x24, #24]
  4157ac:	mov	w0, #0x7                   	// #7
  4157b0:	strh	w0, [x24, #108]
  4157b4:	ldr	w0, [x20, #72]
  4157b8:	orr	w0, w0, #0x2000
  4157bc:	str	w0, [x20, #72]
  4157c0:	str	w21, [x28]
  4157c4:	mov	x27, #0x0                   	// #0
  4157c8:	ldp	x25, x26, [sp, #64]
  4157cc:	mov	x0, x27
  4157d0:	ldp	x19, x20, [sp, #16]
  4157d4:	ldp	x21, x22, [sp, #32]
  4157d8:	ldp	x23, x24, [sp, #48]
  4157dc:	ldp	x27, x28, [sp, #80]
  4157e0:	ldp	x29, x30, [sp], #176
  4157e4:	ret
  4157e8:	ldr	w0, [sp, #136]
  4157ec:	b	41577c <wcrtomb@plt+0x12eac>
  4157f0:	mov	x0, x19
  4157f4:	bl	402660 <free@plt>
  4157f8:	mov	x0, x27
  4157fc:	bl	414ca4 <wcrtomb@plt+0x123d4>
  415800:	ldr	x0, [x24, #24]
  415804:	bl	402520 <closedir@plt>
  415808:	str	xzr, [x24, #24]
  41580c:	mov	w0, #0x7                   	// #7
  415810:	strh	w0, [x24, #108]
  415814:	ldr	w0, [x20, #72]
  415818:	orr	w0, w0, #0x2000
  41581c:	str	w0, [x20, #72]
  415820:	mov	w0, #0x24                  	// #36
  415824:	str	w0, [x28]
  415828:	mov	x27, #0x0                   	// #0
  41582c:	ldp	x25, x26, [sp, #64]
  415830:	b	4157cc <wcrtomb@plt+0x12efc>
  415834:	ldr	x0, [x19, #56]
  415838:	str	x0, [x19, #48]
  41583c:	ldr	x2, [x19, #96]
  415840:	add	x2, x2, #0x1
  415844:	add	x1, x19, #0xf8
  415848:	ldr	x0, [sp, #112]
  41584c:	bl	402280 <memmove@plt>
  415850:	b	415988 <wcrtomb@plt+0x130b8>
  415854:	ldrb	w0, [x22, #18]
  415858:	and	w0, w0, #0xfffffffb
  41585c:	tst	w0, #0xff
  415860:	b.eq	4159a8 <wcrtomb@plt+0x130d8>  // b.none
  415864:	mov	w0, #0xb                   	// #11
  415868:	strh	w0, [x19, #108]
  41586c:	ldrb	w1, [x22, #18]
  415870:	cmp	w1, #0x6
  415874:	b.eq	415bd4 <wcrtomb@plt+0x13304>  // b.none
  415878:	b.hi	415be4 <wcrtomb@plt+0x13314>  // b.pmore
  41587c:	cmp	w1, #0x2
  415880:	b.eq	4158a0 <wcrtomb@plt+0x12fd0>  // b.none
  415884:	mov	w0, #0x1                   	// #1
  415888:	cmp	w1, #0x4
  41588c:	b.eq	4159d4 <wcrtomb@plt+0x13104>  // b.none
  415890:	cmp	w1, w0
  415894:	b.eq	415c1c <wcrtomb@plt+0x1334c>  // b.none
  415898:	mov	w1, #0x0                   	// #0
  41589c:	b	4158b0 <wcrtomb@plt+0x12fe0>
  4158a0:	mov	w0, #0x1                   	// #1
  4158a4:	b	4158ac <wcrtomb@plt+0x12fdc>
  4158a8:	mov	w0, #0x0                   	// #0
  4158ac:	mov	w1, #0x2000                	// #8192
  4158b0:	str	w1, [x19, #136]
  4158b4:	eor	w0, w0, #0x1
  4158b8:	mov	w0, w0
  4158bc:	add	x0, x0, #0x1
  4158c0:	str	x0, [x19, #168]
  4158c4:	str	xzr, [x19, #16]
  4158c8:	cbz	x27, 415a08 <wcrtomb@plt+0x13138>
  4158cc:	ldr	x0, [sp, #96]
  4158d0:	str	x19, [x0, #16]
  4158d4:	mov	x0, #0x2710                	// #10000
  4158d8:	cmp	x25, x0
  4158dc:	b.eq	415a10 <wcrtomb@plt+0x13140>  // b.none
  4158e0:	add	x25, x25, #0x1
  4158e4:	ldr	x0, [sp, #120]
  4158e8:	cmp	x25, x0
  4158ec:	b.cs	415690 <wcrtomb@plt+0x12dc0>  // b.hs, b.nlast
  4158f0:	str	x19, [sp, #96]
  4158f4:	ldr	x0, [x24, #24]
  4158f8:	cbz	x0, 415690 <wcrtomb@plt+0x12dc0>
  4158fc:	str	wzr, [x28]
  415900:	ldr	x0, [x24, #24]
  415904:	bl	4024f0 <readdir@plt>
  415908:	mov	x22, x0
  41590c:	cbz	x0, 415658 <wcrtomb@plt+0x12d88>
  415910:	ldr	w0, [x20, #72]
  415914:	tbnz	w0, #5, 415924 <wcrtomb@plt+0x13054>
  415918:	ldrb	w0, [x22, #19]
  41591c:	cmp	w0, #0x2e
  415920:	b.eq	415720 <wcrtomb@plt+0x12e50>  // b.none
  415924:	add	x19, x22, #0x13
  415928:	mov	x0, x19
  41592c:	bl	4022c0 <strlen@plt>
  415930:	mov	x21, x0
  415934:	mov	x2, x0
  415938:	mov	x1, x19
  41593c:	mov	x0, x20
  415940:	bl	414b50 <wcrtomb@plt+0x12280>
  415944:	mov	x19, x0
  415948:	cbz	x0, 41578c <wcrtomb@plt+0x12ebc>
  41594c:	cmp	x21, x26
  415950:	b.cs	415738 <wcrtomb@plt+0x12e68>  // b.hs, b.nlast
  415954:	adds	x21, x23, x21
  415958:	b.cs	4157f0 <wcrtomb@plt+0x12f20>  // b.hs, b.nlast
  41595c:	ldr	x0, [sp, #104]
  415960:	str	x0, [x19, #88]
  415964:	ldr	x0, [x20]
  415968:	str	x0, [x19, #8]
  41596c:	str	x21, [x19, #72]
  415970:	ldr	x0, [x22]
  415974:	str	x0, [x19, #128]
  415978:	ldr	w0, [x20, #72]
  41597c:	tbnz	w0, #2, 415834 <wcrtomb@plt+0x12f64>
  415980:	add	x0, x19, #0xf8
  415984:	str	x0, [x19, #48]
  415988:	ldr	x0, [x20, #64]
  41598c:	cbz	x0, 415998 <wcrtomb@plt+0x130c8>
  415990:	ldr	w0, [x20, #72]
  415994:	tbz	w0, #10, 4159f0 <wcrtomb@plt+0x13120>
  415998:	ldr	w0, [x20, #72]
  41599c:	and	w0, w0, #0x18
  4159a0:	cmp	w0, #0x18
  4159a4:	b.eq	415854 <wcrtomb@plt+0x12f84>  // b.none
  4159a8:	mov	w0, #0xb                   	// #11
  4159ac:	strh	w0, [x19, #108]
  4159b0:	ldrb	w1, [x22, #18]
  4159b4:	cmp	w1, #0x6
  4159b8:	b.eq	415c04 <wcrtomb@plt+0x13334>  // b.none
  4159bc:	b.hi	415c24 <wcrtomb@plt+0x13354>  // b.pmore
  4159c0:	cmp	w1, #0x2
  4159c4:	b.eq	4158a8 <wcrtomb@plt+0x12fd8>  // b.none
  4159c8:	mov	w0, #0x0                   	// #0
  4159cc:	cmp	w1, #0x4
  4159d0:	b.ne	415c14 <wcrtomb@plt+0x13344>  // b.any
  4159d4:	mov	w1, #0x4000                	// #16384
  4159d8:	b	4158b0 <wcrtomb@plt+0x12fe0>
  4159dc:	mov	w0, #0x1                   	// #1
  4159e0:	b	4159e8 <wcrtomb@plt+0x13118>
  4159e4:	mov	w0, #0x0                   	// #0
  4159e8:	mov	w1, #0xa000                	// #40960
  4159ec:	b	4158b0 <wcrtomb@plt+0x12fe0>
  4159f0:	mov	w2, #0x0                   	// #0
  4159f4:	mov	x1, x19
  4159f8:	mov	x0, x20
  4159fc:	bl	4148dc <wcrtomb@plt+0x1200c>
  415a00:	strh	w0, [x19, #108]
  415a04:	b	4158c4 <wcrtomb@plt+0x12ff4>
  415a08:	mov	x27, x19
  415a0c:	b	4158d4 <wcrtomb@plt+0x13004>
  415a10:	ldr	x0, [x20, #64]
  415a14:	cbz	x0, 415a24 <wcrtomb@plt+0x13154>
  415a18:	str	x19, [sp, #96]
  415a1c:	mov	x25, #0x2711                	// #10001
  415a20:	b	4158f4 <wcrtomb@plt+0x13024>
  415a24:	ldr	w1, [sp, #172]
  415a28:	mov	x0, x24
  415a2c:	bl	414d60 <wcrtomb@plt+0x12490>
  415a30:	mov	x1, #0x1994                	// #6548
  415a34:	movk	x1, #0x102, lsl #16
  415a38:	cmp	x0, x1
  415a3c:	b.eq	415c50 <wcrtomb@plt+0x13380>  // b.none
  415a40:	mov	x1, #0x4d42                	// #19778
  415a44:	movk	x1, #0xff53, lsl #16
  415a48:	cmp	x0, x1
  415a4c:	b.eq	415c50 <wcrtomb@plt+0x13380>  // b.none
  415a50:	mov	x1, #0x6969                	// #26985
  415a54:	cmp	x0, x1
  415a58:	b.eq	415c50 <wcrtomb@plt+0x13380>  // b.none
  415a5c:	mov	w0, #0x1                   	// #1
  415a60:	str	w0, [sp, #152]
  415a64:	b	415a18 <wcrtomb@plt+0x13148>
  415a68:	ldr	x2, [x20, #32]
  415a6c:	ldr	x0, [x20, #8]
  415a70:	cbnz	x0, 415a90 <wcrtomb@plt+0x131c0>
  415a74:	ldr	x0, [x27, #88]
  415a78:	tbnz	x0, #63, 415698 <wcrtomb@plt+0x12dc8>
  415a7c:	mov	x0, x27
  415a80:	b	415acc <wcrtomb@plt+0x131fc>
  415a84:	str	x2, [x0, #56]
  415a88:	ldr	x0, [x0, #16]
  415a8c:	cbz	x0, 415a74 <wcrtomb@plt+0x131a4>
  415a90:	ldr	x1, [x0, #48]
  415a94:	add	x3, x0, #0xf8
  415a98:	cmp	x1, x3
  415a9c:	b.eq	415a84 <wcrtomb@plt+0x131b4>  // b.none
  415aa0:	ldr	x3, [x0, #56]
  415aa4:	sub	x1, x1, x3
  415aa8:	add	x1, x2, x1
  415aac:	str	x1, [x0, #48]
  415ab0:	b	415a84 <wcrtomb@plt+0x131b4>
  415ab4:	str	x2, [x0, #56]
  415ab8:	ldr	x1, [x0, #16]
  415abc:	cbz	x1, 415af0 <wcrtomb@plt+0x13220>
  415ac0:	mov	x0, x1
  415ac4:	ldr	x1, [x0, #88]
  415ac8:	tbnz	x1, #63, 415698 <wcrtomb@plt+0x12dc8>
  415acc:	ldr	x1, [x0, #48]
  415ad0:	add	x3, x0, #0xf8
  415ad4:	cmp	x1, x3
  415ad8:	b.eq	415ab4 <wcrtomb@plt+0x131e4>  // b.none
  415adc:	ldr	x3, [x0, #56]
  415ae0:	sub	x1, x1, x3
  415ae4:	add	x1, x2, x1
  415ae8:	str	x1, [x0, #48]
  415aec:	b	415ab4 <wcrtomb@plt+0x131e4>
  415af0:	ldr	x0, [x0, #8]
  415af4:	b	415ac4 <wcrtomb@plt+0x131f4>
  415af8:	str	wzr, [sp, #152]
  415afc:	mov	x25, #0x0                   	// #0
  415b00:	b	415698 <wcrtomb@plt+0x12dc8>
  415b04:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  415b08:	add	x3, x3, #0xf38
  415b0c:	mov	w2, #0xffffffff            	// #-1
  415b10:	ldr	x1, [x24, #8]
  415b14:	mov	x0, x20
  415b18:	bl	4150c0 <wcrtomb@plt+0x127f0>
  415b1c:	cmp	w0, #0x0
  415b20:	cset	w0, ne  // ne = any
  415b24:	b	4156f8 <wcrtomb@plt+0x12e28>
  415b28:	mov	w0, #0x7                   	// #7
  415b2c:	strh	w0, [x24, #108]
  415b30:	ldr	w0, [x20, #72]
  415b34:	orr	w0, w0, #0x2000
  415b38:	str	w0, [x20, #72]
  415b3c:	mov	x0, x27
  415b40:	bl	414ca4 <wcrtomb@plt+0x123d4>
  415b44:	mov	x27, #0x0                   	// #0
  415b48:	ldp	x25, x26, [sp, #64]
  415b4c:	b	4157cc <wcrtomb@plt+0x12efc>
  415b50:	ldr	w0, [sp, #140]
  415b54:	cmp	w0, #0x3
  415b58:	b.eq	415b70 <wcrtomb@plt+0x132a0>  // b.none
  415b5c:	mov	x0, x27
  415b60:	bl	414ca4 <wcrtomb@plt+0x123d4>
  415b64:	mov	x27, #0x0                   	// #0
  415b68:	ldp	x25, x26, [sp, #64]
  415b6c:	b	4157cc <wcrtomb@plt+0x12efc>
  415b70:	ldrh	w0, [x24, #108]
  415b74:	cmp	w0, #0x7
  415b78:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  415b7c:	b.eq	415b5c <wcrtomb@plt+0x1328c>  // b.none
  415b80:	mov	w0, #0x6                   	// #6
  415b84:	strh	w0, [x24, #108]
  415b88:	b	415b5c <wcrtomb@plt+0x1328c>
  415b8c:	adrp	x0, 414000 <wcrtomb@plt+0x11730>
  415b90:	add	x0, x0, #0x838
  415b94:	str	x0, [x20, #64]
  415b98:	mov	x2, x25
  415b9c:	mov	x1, x27
  415ba0:	mov	x0, x20
  415ba4:	bl	414a74 <wcrtomb@plt+0x121a4>
  415ba8:	mov	x27, x0
  415bac:	str	xzr, [x20, #64]
  415bb0:	ldp	x25, x26, [sp, #64]
  415bb4:	b	4157cc <wcrtomb@plt+0x12efc>
  415bb8:	mov	x2, x25
  415bbc:	mov	x1, x27
  415bc0:	mov	x0, x20
  415bc4:	bl	414a74 <wcrtomb@plt+0x121a4>
  415bc8:	mov	x27, x0
  415bcc:	ldp	x25, x26, [sp, #64]
  415bd0:	b	4157cc <wcrtomb@plt+0x12efc>
  415bd4:	mov	w0, #0x6000                	// #24576
  415bd8:	str	w0, [x19, #136]
  415bdc:	mov	x0, #0x1                   	// #1
  415be0:	b	4158c0 <wcrtomb@plt+0x12ff0>
  415be4:	cmp	w1, #0xa
  415be8:	b.eq	4159dc <wcrtomb@plt+0x1310c>  // b.none
  415bec:	mov	w0, #0x1                   	// #1
  415bf0:	cmp	w1, #0xc
  415bf4:	b.eq	415c38 <wcrtomb@plt+0x13368>  // b.none
  415bf8:	cmp	w1, #0x8
  415bfc:	b.eq	415c48 <wcrtomb@plt+0x13378>  // b.none
  415c00:	b	415898 <wcrtomb@plt+0x12fc8>
  415c04:	mov	w0, #0x6000                	// #24576
  415c08:	str	w0, [x19, #136]
  415c0c:	mov	x0, #0x2                   	// #2
  415c10:	b	4158c0 <wcrtomb@plt+0x12ff0>
  415c14:	cmp	w1, #0x1
  415c18:	b.ne	415898 <wcrtomb@plt+0x12fc8>  // b.any
  415c1c:	mov	w1, #0x1000                	// #4096
  415c20:	b	4158b0 <wcrtomb@plt+0x12fe0>
  415c24:	cmp	w1, #0xa
  415c28:	b.eq	4159e4 <wcrtomb@plt+0x13114>  // b.none
  415c2c:	mov	w0, #0x0                   	// #0
  415c30:	cmp	w1, #0xc
  415c34:	b.ne	415c40 <wcrtomb@plt+0x13370>  // b.any
  415c38:	mov	w1, #0xc000                	// #49152
  415c3c:	b	4158b0 <wcrtomb@plt+0x12fe0>
  415c40:	cmp	w1, #0x8
  415c44:	b.ne	415898 <wcrtomb@plt+0x12fc8>  // b.any
  415c48:	mov	w1, #0x8000                	// #32768
  415c4c:	b	4158b0 <wcrtomb@plt+0x12fe0>
  415c50:	add	x25, x25, #0x1
  415c54:	str	x19, [sp, #96]
  415c58:	str	wzr, [sp, #152]
  415c5c:	b	4158f4 <wcrtomb@plt+0x13024>
  415c60:	stp	x29, x30, [sp, #-112]!
  415c64:	mov	x29, sp
  415c68:	stp	x19, x20, [sp, #16]
  415c6c:	tst	w1, #0xfffff000
  415c70:	b.ne	415d60 <wcrtomb@plt+0x13490>  // b.any
  415c74:	stp	x21, x22, [sp, #32]
  415c78:	stp	x23, x24, [sp, #48]
  415c7c:	stp	x25, x26, [sp, #64]
  415c80:	mov	x24, x0
  415c84:	mov	w21, w1
  415c88:	mov	x25, x2
  415c8c:	mov	w0, #0x204                 	// #516
  415c90:	and	w0, w1, w0
  415c94:	cmp	w0, #0x204
  415c98:	b.eq	415d74 <wcrtomb@plt+0x134a4>  // b.none
  415c9c:	mov	w0, #0x12                  	// #18
  415ca0:	tst	w1, w0
  415ca4:	b.eq	415d94 <wcrtomb@plt+0x134c4>  // b.none
  415ca8:	mov	x1, #0x80                  	// #128
  415cac:	mov	x0, #0x1                   	// #1
  415cb0:	bl	4024d0 <calloc@plt>
  415cb4:	mov	x20, x0
  415cb8:	cbz	x0, 415fdc <wcrtomb@plt+0x1370c>
  415cbc:	str	x25, [x0, #64]
  415cc0:	and	w0, w21, #0xfffffdff
  415cc4:	orr	w0, w0, #0x4
  415cc8:	tst	x21, #0x2
  415ccc:	csel	w0, w21, w0, eq  // eq = none
  415cd0:	str	w0, [x20, #72]
  415cd4:	mov	w0, #0xffffff9c            	// #-100
  415cd8:	str	w0, [x20, #44]
  415cdc:	ldr	x0, [x24]
  415ce0:	cbz	x0, 415db4 <wcrtomb@plt+0x134e4>
  415ce4:	mov	x22, x24
  415ce8:	mov	x19, #0x0                   	// #0
  415cec:	bl	4022c0 <strlen@plt>
  415cf0:	cmp	x19, x0
  415cf4:	csel	x19, x19, x0, cs  // cs = hs, nlast
  415cf8:	ldr	x0, [x22, #8]!
  415cfc:	cbnz	x0, 415cec <wcrtomb@plt+0x1341c>
  415d00:	add	x19, x19, #0x1
  415d04:	cmp	x19, #0x1, lsl #12
  415d08:	mov	x1, #0x1000                	// #4096
  415d0c:	csel	x1, x19, x1, cs  // cs = hs, nlast
  415d10:	mov	x0, x20
  415d14:	bl	414864 <wcrtomb@plt+0x11f94>
  415d18:	and	w0, w0, #0xff
  415d1c:	cbz	w0, 415f88 <wcrtomb@plt+0x136b8>
  415d20:	stp	x27, x28, [sp, #80]
  415d24:	ldr	x26, [x24]
  415d28:	cbz	x26, 415fb0 <wcrtomb@plt+0x136e0>
  415d2c:	mov	x2, #0x0                   	// #0
  415d30:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  415d34:	add	x1, x1, #0x6c8
  415d38:	mov	x0, x20
  415d3c:	bl	414b50 <wcrtomb@plt+0x12280>
  415d40:	mov	x26, x0
  415d44:	cbz	x0, 415f7c <wcrtomb@plt+0x136ac>
  415d48:	mov	x0, #0xffffffffffffffff    	// #-1
  415d4c:	str	x0, [x26, #88]
  415d50:	str	w0, [x26, #104]
  415d54:	mov	w27, #0x1                   	// #1
  415d58:	cbnz	x25, 415fb4 <wcrtomb@plt+0x136e4>
  415d5c:	b	415fbc <wcrtomb@plt+0x136ec>
  415d60:	bl	402840 <__errno_location@plt>
  415d64:	mov	w1, #0x16                  	// #22
  415d68:	str	w1, [x0]
  415d6c:	mov	x20, #0x0                   	// #0
  415d70:	b	415fa0 <wcrtomb@plt+0x136d0>
  415d74:	bl	402840 <__errno_location@plt>
  415d78:	mov	w1, #0x16                  	// #22
  415d7c:	str	w1, [x0]
  415d80:	mov	x20, #0x0                   	// #0
  415d84:	ldp	x21, x22, [sp, #32]
  415d88:	ldp	x23, x24, [sp, #48]
  415d8c:	ldp	x25, x26, [sp, #64]
  415d90:	b	415fa0 <wcrtomb@plt+0x136d0>
  415d94:	bl	402840 <__errno_location@plt>
  415d98:	mov	w1, #0x16                  	// #22
  415d9c:	str	w1, [x0]
  415da0:	mov	x20, #0x0                   	// #0
  415da4:	ldp	x21, x22, [sp, #32]
  415da8:	ldp	x23, x24, [sp, #48]
  415dac:	ldp	x25, x26, [sp, #64]
  415db0:	b	415fa0 <wcrtomb@plt+0x136d0>
  415db4:	mov	x19, #0x0                   	// #0
  415db8:	b	415d00 <wcrtomb@plt+0x13430>
  415dbc:	add	x0, x19, x0
  415dc0:	ldurb	w0, [x0, #-1]
  415dc4:	sub	x1, x19, #0x2
  415dc8:	cmp	w0, #0x2f
  415dcc:	b.ne	415e30 <wcrtomb@plt+0x13560>  // b.any
  415dd0:	ldrb	w0, [x1, x2]
  415dd4:	cmp	w0, #0x2f
  415dd8:	b.ne	415e30 <wcrtomb@plt+0x13560>  // b.any
  415ddc:	sub	x2, x2, #0x1
  415de0:	cmp	x2, #0x1
  415de4:	b.hi	415dd0 <wcrtomb@plt+0x13500>  // b.pmore
  415de8:	b	415e30 <wcrtomb@plt+0x13560>
  415dec:	mov	w2, #0x0                   	// #0
  415df0:	mov	x1, x19
  415df4:	mov	x0, x20
  415df8:	bl	4148dc <wcrtomb@plt+0x1200c>
  415dfc:	strh	w0, [x19, #108]
  415e00:	cbz	x25, 415e84 <wcrtomb@plt+0x135b4>
  415e04:	str	x23, [x19, #16]
  415e08:	mov	x23, x19
  415e0c:	add	x22, x22, #0x1
  415e10:	ldr	x19, [x24, x22, lsl #3]
  415e14:	cbz	x19, 415e98 <wcrtomb@plt+0x135c8>
  415e18:	mov	x0, x19
  415e1c:	bl	4022c0 <strlen@plt>
  415e20:	mov	x2, x0
  415e24:	cmp	w21, #0x0
  415e28:	ccmp	x0, #0x2, #0x0, eq  // eq = none
  415e2c:	b.hi	415dbc <wcrtomb@plt+0x134ec>  // b.pmore
  415e30:	mov	x1, x19
  415e34:	mov	x0, x20
  415e38:	bl	414b50 <wcrtomb@plt+0x12280>
  415e3c:	mov	x19, x0
  415e40:	cbz	x0, 415f6c <wcrtomb@plt+0x1369c>
  415e44:	str	xzr, [x0, #88]
  415e48:	str	x26, [x0, #8]
  415e4c:	add	x0, x0, #0xf8
  415e50:	str	x0, [x19, #48]
  415e54:	cmp	x23, #0x0
  415e58:	ccmp	w27, #0x0, #0x4, ne  // ne = any
  415e5c:	b.eq	415dec <wcrtomb@plt+0x1351c>  // b.none
  415e60:	strh	w28, [x19, #108]
  415e64:	mov	x0, #0x2                   	// #2
  415e68:	str	x0, [x19, #168]
  415e6c:	cbnz	x25, 415e04 <wcrtomb@plt+0x13534>
  415e70:	str	xzr, [x19, #16]
  415e74:	ldr	x0, [sp, #104]
  415e78:	str	x19, [x0, #16]
  415e7c:	str	x19, [sp, #104]
  415e80:	b	415e0c <wcrtomb@plt+0x1353c>
  415e84:	str	xzr, [x19, #16]
  415e88:	cbnz	x23, 415e74 <wcrtomb@plt+0x135a4>
  415e8c:	str	x19, [sp, #104]
  415e90:	mov	x23, x19
  415e94:	b	415e0c <wcrtomb@plt+0x1353c>
  415e98:	cmp	x25, #0x0
  415e9c:	ccmp	x22, #0x1, #0x0, ne  // ne = any
  415ea0:	b.hi	415f1c <wcrtomb@plt+0x1364c>  // b.pmore
  415ea4:	mov	x2, #0x0                   	// #0
  415ea8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  415eac:	add	x1, x1, #0x6c8
  415eb0:	mov	x0, x20
  415eb4:	bl	414b50 <wcrtomb@plt+0x12280>
  415eb8:	str	x0, [x20]
  415ebc:	cbz	x0, 415f6c <wcrtomb@plt+0x1369c>
  415ec0:	str	x23, [x0, #16]
  415ec4:	ldr	x0, [x20]
  415ec8:	mov	w1, #0x9                   	// #9
  415ecc:	strh	w1, [x0, #108]
  415ed0:	ldr	x0, [x20]
  415ed4:	mov	x1, #0x1                   	// #1
  415ed8:	str	x1, [x0, #88]
  415edc:	mov	x0, x20
  415ee0:	bl	414bd8 <wcrtomb@plt+0x12308>
  415ee4:	and	w0, w0, #0xff
  415ee8:	cbz	w0, 415f6c <wcrtomb@plt+0x1369c>
  415eec:	ldr	w1, [x20, #72]
  415ef0:	mov	w0, #0x204                 	// #516
  415ef4:	tst	w1, w0
  415ef8:	b.eq	415f44 <wcrtomb@plt+0x13674>  // b.none
  415efc:	mov	w1, #0xffffffff            	// #-1
  415f00:	add	x0, x20, #0x60
  415f04:	bl	423888 <_obstack_memory_used@@Base+0xcaa0>
  415f08:	ldp	x21, x22, [sp, #32]
  415f0c:	ldp	x23, x24, [sp, #48]
  415f10:	ldp	x25, x26, [sp, #64]
  415f14:	ldp	x27, x28, [sp, #80]
  415f18:	b	415fa0 <wcrtomb@plt+0x136d0>
  415f1c:	mov	x2, x22
  415f20:	mov	x1, x23
  415f24:	mov	x0, x20
  415f28:	bl	414a74 <wcrtomb@plt+0x121a4>
  415f2c:	mov	x23, x0
  415f30:	b	415ea4 <wcrtomb@plt+0x135d4>
  415f34:	mov	x23, x19
  415f38:	b	415ea4 <wcrtomb@plt+0x135d4>
  415f3c:	mov	x23, x26
  415f40:	b	415ea4 <wcrtomb@plt+0x135d4>
  415f44:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  415f48:	add	x1, x1, #0x1e8
  415f4c:	mov	x0, x20
  415f50:	bl	414c58 <wcrtomb@plt+0x12388>
  415f54:	str	w0, [x20, #40]
  415f58:	tbz	w0, #31, 415efc <wcrtomb@plt+0x1362c>
  415f5c:	ldr	w0, [x20, #72]
  415f60:	orr	w0, w0, #0x4
  415f64:	str	w0, [x20, #72]
  415f68:	b	415efc <wcrtomb@plt+0x1362c>
  415f6c:	mov	x0, x23
  415f70:	bl	414ca4 <wcrtomb@plt+0x123d4>
  415f74:	mov	x0, x26
  415f78:	bl	402660 <free@plt>
  415f7c:	ldr	x0, [x20, #32]
  415f80:	bl	402660 <free@plt>
  415f84:	ldp	x27, x28, [sp, #80]
  415f88:	mov	x0, x20
  415f8c:	bl	402660 <free@plt>
  415f90:	mov	x20, #0x0                   	// #0
  415f94:	ldp	x21, x22, [sp, #32]
  415f98:	ldp	x23, x24, [sp, #48]
  415f9c:	ldp	x25, x26, [sp, #64]
  415fa0:	mov	x0, x20
  415fa4:	ldp	x19, x20, [sp, #16]
  415fa8:	ldp	x29, x30, [sp], #112
  415fac:	ret
  415fb0:	cbz	x25, 415f3c <wcrtomb@plt+0x1366c>
  415fb4:	ldr	w27, [x20, #72]
  415fb8:	ubfx	x27, x27, #10, #1
  415fbc:	ldr	x19, [x24]
  415fc0:	cbz	x19, 415f34 <wcrtomb@plt+0x13664>
  415fc4:	str	xzr, [sp, #104]
  415fc8:	mov	x22, #0x0                   	// #0
  415fcc:	mov	x23, #0x0                   	// #0
  415fd0:	and	w21, w21, #0x800
  415fd4:	mov	w28, #0xb                   	// #11
  415fd8:	b	415e18 <wcrtomb@plt+0x13548>
  415fdc:	ldp	x21, x22, [sp, #32]
  415fe0:	ldp	x23, x24, [sp, #48]
  415fe4:	ldp	x25, x26, [sp, #64]
  415fe8:	b	415fa0 <wcrtomb@plt+0x136d0>
  415fec:	stp	x29, x30, [sp, #-32]!
  415ff0:	mov	x29, sp
  415ff4:	stp	x19, x20, [sp, #16]
  415ff8:	mov	x20, x0
  415ffc:	ldr	x0, [x0]
  416000:	cbz	x0, 416018 <wcrtomb@plt+0x13748>
  416004:	ldr	x1, [x0, #88]
  416008:	tbz	x1, #63, 41606c <wcrtomb@plt+0x1379c>
  41600c:	mov	x19, x0
  416010:	mov	x0, x19
  416014:	bl	402660 <free@plt>
  416018:	ldr	x0, [x20, #8]
  41601c:	cbz	x0, 416024 <wcrtomb@plt+0x13754>
  416020:	bl	414ca4 <wcrtomb@plt+0x123d4>
  416024:	ldr	x0, [x20, #16]
  416028:	bl	402660 <free@plt>
  41602c:	ldr	x0, [x20, #32]
  416030:	bl	402660 <free@plt>
  416034:	ldr	w0, [x20, #72]
  416038:	tbz	w0, #9, 416078 <wcrtomb@plt+0x137a8>
  41603c:	ldr	w0, [x20, #44]
  416040:	tbnz	w0, #31, 41607c <wcrtomb@plt+0x137ac>
  416044:	bl	402530 <close@plt>
  416048:	cbz	w0, 41607c <wcrtomb@plt+0x137ac>
  41604c:	bl	402840 <__errno_location@plt>
  416050:	ldr	w19, [x0]
  416054:	b	4160e4 <wcrtomb@plt+0x13814>
  416058:	ldr	x19, [x0, #8]
  41605c:	bl	402660 <free@plt>
  416060:	ldr	x0, [x19, #88]
  416064:	tbnz	x0, #63, 416010 <wcrtomb@plt+0x13740>
  416068:	mov	x0, x19
  41606c:	ldr	x19, [x0, #16]
  416070:	cbnz	x19, 41605c <wcrtomb@plt+0x1378c>
  416074:	b	416058 <wcrtomb@plt+0x13788>
  416078:	tbz	w0, #2, 4160b8 <wcrtomb@plt+0x137e8>
  41607c:	add	x0, x20, #0x60
  416080:	bl	414d20 <wcrtomb@plt+0x12450>
  416084:	ldr	x0, [x20, #80]
  416088:	mov	w19, #0x0                   	// #0
  41608c:	cbz	x0, 416114 <wcrtomb@plt+0x13844>
  416090:	bl	411154 <wcrtomb@plt+0xe884>
  416094:	mov	x0, x20
  416098:	bl	414ce8 <wcrtomb@plt+0x12418>
  41609c:	mov	x0, x20
  4160a0:	bl	402660 <free@plt>
  4160a4:	cbnz	w19, 416104 <wcrtomb@plt+0x13834>
  4160a8:	mov	w0, w19
  4160ac:	ldp	x19, x20, [sp, #16]
  4160b0:	ldp	x29, x30, [sp], #32
  4160b4:	ret
  4160b8:	ldr	w0, [x20, #40]
  4160bc:	bl	402300 <fchdir@plt>
  4160c0:	mov	w19, w0
  4160c4:	cbz	w0, 4160d0 <wcrtomb@plt+0x13800>
  4160c8:	bl	402840 <__errno_location@plt>
  4160cc:	ldr	w19, [x0]
  4160d0:	ldr	w0, [x20, #40]
  4160d4:	bl	402530 <close@plt>
  4160d8:	cmp	w19, #0x0
  4160dc:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  4160e0:	b.ne	4160f8 <wcrtomb@plt+0x13828>  // b.any
  4160e4:	add	x0, x20, #0x60
  4160e8:	bl	414d20 <wcrtomb@plt+0x12450>
  4160ec:	ldr	x0, [x20, #80]
  4160f0:	cbnz	x0, 416090 <wcrtomb@plt+0x137c0>
  4160f4:	b	416094 <wcrtomb@plt+0x137c4>
  4160f8:	bl	402840 <__errno_location@plt>
  4160fc:	ldr	w19, [x0]
  416100:	b	4160e4 <wcrtomb@plt+0x13814>
  416104:	bl	402840 <__errno_location@plt>
  416108:	str	w19, [x0]
  41610c:	mov	w19, #0xffffffff            	// #-1
  416110:	b	4160a8 <wcrtomb@plt+0x137d8>
  416114:	mov	x0, x20
  416118:	bl	414ce8 <wcrtomb@plt+0x12418>
  41611c:	mov	x0, x20
  416120:	bl	402660 <free@plt>
  416124:	mov	w19, #0x0                   	// #0
  416128:	b	4160a8 <wcrtomb@plt+0x137d8>
  41612c:	stp	x29, x30, [sp, #-64]!
  416130:	mov	x29, sp
  416134:	stp	x19, x20, [sp, #16]
  416138:	ldr	x19, [x0]
  41613c:	cbz	x19, 416794 <wcrtomb@plt+0x13ec4>
  416140:	mov	x20, x0
  416144:	ldr	w0, [x0, #72]
  416148:	tbnz	w0, #13, 416790 <wcrtomb@plt+0x13ec0>
  41614c:	ldrh	w0, [x19, #112]
  416150:	mov	w1, #0x3                   	// #3
  416154:	strh	w1, [x19, #112]
  416158:	cmp	w0, #0x1
  41615c:	b.eq	41617c <wcrtomb@plt+0x138ac>  // b.none
  416160:	cmp	w0, #0x2
  416164:	b.eq	416194 <wcrtomb@plt+0x138c4>  // b.none
  416168:	ldrh	w1, [x19, #108]
  41616c:	cmp	w1, #0x1
  416170:	b.eq	416220 <wcrtomb@plt+0x13950>  // b.none
  416174:	stp	x21, x22, [sp, #32]
  416178:	b	416438 <wcrtomb@plt+0x13b68>
  41617c:	mov	w2, #0x0                   	// #0
  416180:	mov	x1, x19
  416184:	mov	x0, x20
  416188:	bl	4148dc <wcrtomb@plt+0x1200c>
  41618c:	strh	w0, [x19, #108]
  416190:	b	416794 <wcrtomb@plt+0x13ec4>
  416194:	ldrh	w1, [x19, #108]
  416198:	sub	w0, w1, #0xc
  41619c:	and	w0, w0, #0xffff
  4161a0:	cmp	w0, #0x1
  4161a4:	b.ls	4161b8 <wcrtomb@plt+0x138e8>  // b.plast
  4161a8:	cmp	w1, #0x1
  4161ac:	b.eq	416228 <wcrtomb@plt+0x13958>  // b.none
  4161b0:	stp	x21, x22, [sp, #32]
  4161b4:	b	416438 <wcrtomb@plt+0x13b68>
  4161b8:	mov	w2, #0x1                   	// #1
  4161bc:	mov	x1, x19
  4161c0:	mov	x0, x20
  4161c4:	bl	4148dc <wcrtomb@plt+0x1200c>
  4161c8:	and	w1, w0, #0xffff
  4161cc:	strh	w0, [x19, #108]
  4161d0:	cmp	w1, #0x1
  4161d4:	b.ne	4162e8 <wcrtomb@plt+0x13a18>  // b.any
  4161d8:	ldr	w0, [x20, #72]
  4161dc:	tbnz	w0, #2, 4162e8 <wcrtomb@plt+0x13a18>
  4161e0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4161e4:	add	x1, x1, #0x1e8
  4161e8:	mov	x0, x20
  4161ec:	bl	414c58 <wcrtomb@plt+0x12388>
  4161f0:	str	w0, [x19, #68]
  4161f4:	tbnz	w0, #31, 416208 <wcrtomb@plt+0x13938>
  4161f8:	ldrh	w0, [x19, #110]
  4161fc:	orr	w0, w0, #0x2
  416200:	strh	w0, [x19, #110]
  416204:	b	4162e8 <wcrtomb@plt+0x13a18>
  416208:	bl	402840 <__errno_location@plt>
  41620c:	ldr	w0, [x0]
  416210:	str	w0, [x19, #64]
  416214:	mov	w0, #0x7                   	// #7
  416218:	strh	w0, [x19, #108]
  41621c:	b	4162e8 <wcrtomb@plt+0x13a18>
  416220:	cmp	w0, #0x4
  416224:	b.eq	416240 <wcrtomb@plt+0x13970>  // b.none
  416228:	ldr	w1, [x20, #72]
  41622c:	tbz	w1, #6, 41627c <wcrtomb@plt+0x139ac>
  416230:	ldr	x2, [x19, #120]
  416234:	ldr	x0, [x20, #24]
  416238:	cmp	x2, x0
  41623c:	b.eq	41627c <wcrtomb@plt+0x139ac>  // b.none
  416240:	ldrh	w0, [x19, #110]
  416244:	tbnz	w0, #1, 416270 <wcrtomb@plt+0x139a0>
  416248:	ldr	x0, [x20, #8]
  41624c:	cbz	x0, 416258 <wcrtomb@plt+0x13988>
  416250:	bl	414ca4 <wcrtomb@plt+0x123d4>
  416254:	str	xzr, [x20, #8]
  416258:	mov	w0, #0x6                   	// #6
  41625c:	strh	w0, [x19, #108]
  416260:	mov	x1, x19
  416264:	mov	x0, x20
  416268:	bl	41527c <wcrtomb@plt+0x129ac>
  41626c:	b	416794 <wcrtomb@plt+0x13ec4>
  416270:	ldr	w0, [x19, #68]
  416274:	bl	402530 <close@plt>
  416278:	b	416248 <wcrtomb@plt+0x13978>
  41627c:	ldr	x0, [x20, #8]
  416280:	cbz	x0, 41634c <wcrtomb@plt+0x13a7c>
  416284:	tbnz	w1, #12, 41633c <wcrtomb@plt+0x13a6c>
  416288:	ldr	x3, [x19, #48]
  41628c:	mov	w2, #0xffffffff            	// #-1
  416290:	mov	x1, x19
  416294:	mov	x0, x20
  416298:	bl	4150c0 <wcrtomb@plt+0x127f0>
  41629c:	cbnz	w0, 416394 <wcrtomb@plt+0x13ac4>
  4162a0:	ldr	x19, [x20, #8]
  4162a4:	str	xzr, [x20, #8]
  4162a8:	ldr	x2, [x20, #32]
  4162ac:	ldr	x3, [x19, #8]
  4162b0:	ldr	x0, [x3, #72]
  4162b4:	sub	x1, x0, #0x1
  4162b8:	ldr	x3, [x3, #56]
  4162bc:	ldrb	w3, [x3, x1]
  4162c0:	cmp	w3, #0x2f
  4162c4:	csel	x1, x1, x0, eq  // eq = none
  4162c8:	add	x0, x2, x1
  4162cc:	mov	w3, #0x2f                  	// #47
  4162d0:	strb	w3, [x2, x1]
  4162d4:	ldr	x2, [x19, #96]
  4162d8:	add	x2, x2, #0x1
  4162dc:	add	x1, x19, #0xf8
  4162e0:	add	x0, x0, #0x1
  4162e4:	bl	402280 <memmove@plt>
  4162e8:	str	x19, [x20]
  4162ec:	ldrh	w0, [x19, #108]
  4162f0:	cmp	w0, #0xb
  4162f4:	b.eq	416620 <wcrtomb@plt+0x13d50>  // b.none
  4162f8:	ldrh	w0, [x19, #108]
  4162fc:	cmp	w0, #0x1
  416300:	b.ne	416794 <wcrtomb@plt+0x13ec4>  // b.any
  416304:	ldr	x0, [x19, #88]
  416308:	cbnz	x0, 416314 <wcrtomb@plt+0x13a44>
  41630c:	ldr	x0, [x19, #120]
  416310:	str	x0, [x20, #24]
  416314:	mov	x1, x19
  416318:	mov	x0, x20
  41631c:	bl	414f08 <wcrtomb@plt+0x12638>
  416320:	and	w0, w0, #0xff
  416324:	cbnz	w0, 416794 <wcrtomb@plt+0x13ec4>
  416328:	bl	402840 <__errno_location@plt>
  41632c:	mov	w1, #0xc                   	// #12
  416330:	str	w1, [x0]
  416334:	mov	x19, #0x0                   	// #0
  416338:	b	416794 <wcrtomb@plt+0x13ec4>
  41633c:	and	w1, w1, #0xffffefff
  416340:	str	w1, [x20, #72]
  416344:	bl	414ca4 <wcrtomb@plt+0x123d4>
  416348:	str	xzr, [x20, #8]
  41634c:	mov	w1, #0x3                   	// #3
  416350:	mov	x0, x20
  416354:	bl	41531c <wcrtomb@plt+0x12a4c>
  416358:	str	x0, [x20, #8]
  41635c:	cbnz	x0, 4162a0 <wcrtomb@plt+0x139d0>
  416360:	ldr	w1, [x20, #72]
  416364:	tbnz	w1, #13, 4167a4 <wcrtomb@plt+0x13ed4>
  416368:	ldr	w0, [x19, #64]
  41636c:	cbz	w0, 416384 <wcrtomb@plt+0x13ab4>
  416370:	ldrh	w0, [x19, #108]
  416374:	cmp	w0, #0x4
  416378:	b.eq	416384 <wcrtomb@plt+0x13ab4>  // b.none
  41637c:	mov	w0, #0x7                   	// #7
  416380:	strh	w0, [x19, #108]
  416384:	mov	x1, x19
  416388:	mov	x0, x20
  41638c:	bl	41527c <wcrtomb@plt+0x129ac>
  416390:	b	416794 <wcrtomb@plt+0x13ec4>
  416394:	bl	402840 <__errno_location@plt>
  416398:	ldr	w0, [x0]
  41639c:	str	w0, [x19, #64]
  4163a0:	ldrh	w0, [x19, #110]
  4163a4:	orr	w0, w0, #0x1
  4163a8:	strh	w0, [x19, #110]
  4163ac:	ldr	x0, [x20, #8]
  4163b0:	cbz	x0, 4162a0 <wcrtomb@plt+0x139d0>
  4163b4:	ldr	x1, [x0, #8]
  4163b8:	ldr	x1, [x1, #48]
  4163bc:	str	x1, [x0, #48]
  4163c0:	ldr	x0, [x0, #16]
  4163c4:	cbnz	x0, 4163b4 <wcrtomb@plt+0x13ae4>
  4163c8:	b	4162a0 <wcrtomb@plt+0x139d0>
  4163cc:	str	x0, [x20]
  4163d0:	ldr	x1, [x20, #32]
  4163d4:	ldr	x0, [x0, #72]
  4163d8:	strb	wzr, [x1, x0]
  4163dc:	mov	w1, #0x3                   	// #3
  4163e0:	mov	x0, x20
  4163e4:	bl	41531c <wcrtomb@plt+0x12a4c>
  4163e8:	mov	x22, x0
  4163ec:	cbnz	x0, 416404 <wcrtomb@plt+0x13b34>
  4163f0:	ldr	w0, [x20, #72]
  4163f4:	tbz	w0, #13, 416450 <wcrtomb@plt+0x13b80>
  4163f8:	mov	x19, x22
  4163fc:	ldp	x21, x22, [sp, #32]
  416400:	b	416794 <wcrtomb@plt+0x13ec4>
  416404:	mov	x0, x21
  416408:	bl	402660 <free@plt>
  41640c:	mov	x19, x22
  416410:	ldp	x21, x22, [sp, #32]
  416414:	b	4162a8 <wcrtomb@plt+0x139d8>
  416418:	str	x19, [x20]
  41641c:	mov	x0, x21
  416420:	bl	402660 <free@plt>
  416424:	ldr	x0, [x19, #88]
  416428:	cbz	x0, 4164e4 <wcrtomb@plt+0x13c14>
  41642c:	ldrh	w0, [x19, #112]
  416430:	cmp	w0, #0x4
  416434:	b.ne	416598 <wcrtomb@plt+0x13cc8>  // b.any
  416438:	mov	x21, x19
  41643c:	ldr	x19, [x19, #16]
  416440:	cbnz	x19, 416418 <wcrtomb@plt+0x13b48>
  416444:	ldr	x0, [x21, #8]
  416448:	ldr	x1, [x0, #24]
  41644c:	cbnz	x1, 4163cc <wcrtomb@plt+0x13afc>
  416450:	ldr	x22, [x21, #8]
  416454:	str	x22, [x20]
  416458:	mov	x0, x21
  41645c:	bl	402660 <free@plt>
  416460:	ldr	x0, [x22, #88]
  416464:	cmn	x0, #0x1
  416468:	b.eq	4166e0 <wcrtomb@plt+0x13e10>  // b.none
  41646c:	ldrh	w0, [x22, #108]
  416470:	cmp	w0, #0xb
  416474:	b.eq	4166fc <wcrtomb@plt+0x13e2c>  // b.none
  416478:	ldr	x1, [x20, #32]
  41647c:	ldr	x0, [x22, #72]
  416480:	strb	wzr, [x1, x0]
  416484:	ldr	x0, [x22, #88]
  416488:	cbz	x0, 416704 <wcrtomb@plt+0x13e34>
  41648c:	ldrh	w0, [x22, #110]
  416490:	tbz	w0, #1, 416754 <wcrtomb@plt+0x13e84>
  416494:	ldr	w0, [x20, #72]
  416498:	tbnz	w0, #2, 4164b0 <wcrtomb@plt+0x13be0>
  41649c:	tbz	w0, #9, 41672c <wcrtomb@plt+0x13e5c>
  4164a0:	mov	w2, #0x1                   	// #1
  4164a4:	ldr	w1, [x22, #68]
  4164a8:	mov	x0, x20
  4164ac:	bl	414fec <wcrtomb@plt+0x1271c>
  4164b0:	ldr	w0, [x22, #68]
  4164b4:	bl	402530 <close@plt>
  4164b8:	ldrh	w0, [x22, #108]
  4164bc:	cmp	w0, #0x2
  4164c0:	b.eq	4167d4 <wcrtomb@plt+0x13f04>  // b.none
  4164c4:	ldr	w0, [x22, #64]
  4164c8:	cbnz	w0, 4167cc <wcrtomb@plt+0x13efc>
  4164cc:	mov	w0, #0x6                   	// #6
  4164d0:	strh	w0, [x22, #108]
  4164d4:	mov	x1, x22
  4164d8:	mov	x0, x20
  4164dc:	bl	41527c <wcrtomb@plt+0x129ac>
  4164e0:	b	4167d4 <wcrtomb@plt+0x13f04>
  4164e4:	mov	x0, x20
  4164e8:	bl	415060 <wcrtomb@plt+0x12790>
  4164ec:	cbnz	w0, 416574 <wcrtomb@plt+0x13ca4>
  4164f0:	mov	x0, x20
  4164f4:	bl	414ce8 <wcrtomb@plt+0x12418>
  4164f8:	ldr	x2, [x19, #96]
  4164fc:	str	x2, [x19, #72]
  416500:	add	x22, x19, #0xf8
  416504:	add	x2, x2, #0x1
  416508:	mov	x1, x22
  41650c:	ldr	x0, [x20, #32]
  416510:	bl	402280 <memmove@plt>
  416514:	mov	w1, #0x2f                  	// #47
  416518:	mov	x0, x22
  41651c:	bl	402550 <strrchr@plt>
  416520:	cbz	x0, 416558 <wcrtomb@plt+0x13c88>
  416524:	cmp	x22, x0
  416528:	b.eq	41658c <wcrtomb@plt+0x13cbc>  // b.none
  41652c:	str	x23, [sp, #48]
  416530:	add	x21, x0, #0x1
  416534:	mov	x0, x21
  416538:	bl	4022c0 <strlen@plt>
  41653c:	mov	x23, x0
  416540:	add	x2, x0, #0x1
  416544:	mov	x1, x21
  416548:	mov	x0, x22
  41654c:	bl	402280 <memmove@plt>
  416550:	str	x23, [x19, #96]
  416554:	ldr	x23, [sp, #48]
  416558:	ldr	x0, [x20, #32]
  41655c:	str	x0, [x19, #56]
  416560:	str	x0, [x19, #48]
  416564:	mov	x0, x20
  416568:	bl	414bd8 <wcrtomb@plt+0x12308>
  41656c:	ldp	x21, x22, [sp, #32]
  416570:	b	4162e8 <wcrtomb@plt+0x13a18>
  416574:	ldr	w0, [x20, #72]
  416578:	orr	w0, w0, #0x2000
  41657c:	str	w0, [x20, #72]
  416580:	mov	x19, #0x0                   	// #0
  416584:	ldp	x21, x22, [sp, #32]
  416588:	b	416794 <wcrtomb@plt+0x13ec4>
  41658c:	ldrb	w1, [x0, #1]
  416590:	cbz	w1, 416558 <wcrtomb@plt+0x13c88>
  416594:	b	41652c <wcrtomb@plt+0x13c5c>
  416598:	cmp	w0, #0x2
  41659c:	b.eq	4165a8 <wcrtomb@plt+0x13cd8>  // b.none
  4165a0:	ldp	x21, x22, [sp, #32]
  4165a4:	b	4162a8 <wcrtomb@plt+0x139d8>
  4165a8:	mov	w2, #0x1                   	// #1
  4165ac:	mov	x1, x19
  4165b0:	mov	x0, x20
  4165b4:	bl	4148dc <wcrtomb@plt+0x1200c>
  4165b8:	and	w1, w0, #0xffff
  4165bc:	strh	w0, [x19, #108]
  4165c0:	cmp	w1, #0x1
  4165c4:	b.eq	4165d8 <wcrtomb@plt+0x13d08>  // b.none
  4165c8:	mov	w0, #0x3                   	// #3
  4165cc:	strh	w0, [x19, #112]
  4165d0:	ldp	x21, x22, [sp, #32]
  4165d4:	b	4162a8 <wcrtomb@plt+0x139d8>
  4165d8:	ldr	w0, [x20, #72]
  4165dc:	tbnz	w0, #2, 4165c8 <wcrtomb@plt+0x13cf8>
  4165e0:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  4165e4:	add	x1, x1, #0x1e8
  4165e8:	mov	x0, x20
  4165ec:	bl	414c58 <wcrtomb@plt+0x12388>
  4165f0:	str	w0, [x19, #68]
  4165f4:	tbnz	w0, #31, 416608 <wcrtomb@plt+0x13d38>
  4165f8:	ldrh	w0, [x19, #110]
  4165fc:	orr	w0, w0, #0x2
  416600:	strh	w0, [x19, #110]
  416604:	b	4165c8 <wcrtomb@plt+0x13cf8>
  416608:	bl	402840 <__errno_location@plt>
  41660c:	ldr	w0, [x0]
  416610:	str	w0, [x19, #64]
  416614:	mov	w0, #0x7                   	// #7
  416618:	strh	w0, [x19, #108]
  41661c:	b	4165c8 <wcrtomb@plt+0x13cf8>
  416620:	ldr	x0, [x19, #168]
  416624:	cmp	x0, #0x2
  416628:	b.eq	416640 <wcrtomb@plt+0x13d70>  // b.none
  41662c:	cmp	x0, #0x1
  416630:	b.eq	416794 <wcrtomb@plt+0x13ec4>  // b.none
  416634:	stp	x21, x22, [sp, #32]
  416638:	str	x23, [sp, #48]
  41663c:	bl	4025a0 <abort@plt>
  416640:	stp	x21, x22, [sp, #32]
  416644:	ldr	x21, [x19, #8]
  416648:	ldr	w0, [x21, #104]
  41664c:	cbnz	w0, 416660 <wcrtomb@plt+0x13d90>
  416650:	ldr	w0, [x20, #72]
  416654:	and	w0, w0, #0x18
  416658:	cmp	w0, #0x18
  41665c:	b.eq	416690 <wcrtomb@plt+0x13dc0>  // b.none
  416660:	mov	w2, #0x0                   	// #0
  416664:	mov	x1, x19
  416668:	mov	x0, x20
  41666c:	bl	4148dc <wcrtomb@plt+0x1200c>
  416670:	and	w1, w0, #0xffff
  416674:	strh	w0, [x19, #108]
  416678:	ldr	w0, [x19, #136]
  41667c:	and	w0, w0, #0xf000
  416680:	cmp	w0, #0x4, lsl #12
  416684:	b.eq	4166ac <wcrtomb@plt+0x13ddc>  // b.none
  416688:	ldp	x21, x22, [sp, #32]
  41668c:	b	4162f8 <wcrtomb@plt+0x13a28>
  416690:	ldr	w1, [x20, #44]
  416694:	mov	x0, x21
  416698:	bl	414e68 <wcrtomb@plt+0x12598>
  41669c:	cmp	w0, #0x2
  4166a0:	b.ne	416660 <wcrtomb@plt+0x13d90>  // b.any
  4166a4:	ldp	x21, x22, [sp, #32]
  4166a8:	b	4162f8 <wcrtomb@plt+0x13a28>
  4166ac:	ldr	x0, [x19, #88]
  4166b0:	cbz	x0, 4167ac <wcrtomb@plt+0x13edc>
  4166b4:	ldr	w0, [x21, #104]
  4166b8:	sub	w0, w0, #0x1
  4166bc:	cmn	w0, #0x3
  4166c0:	b.ls	4166d4 <wcrtomb@plt+0x13e04>  // b.plast
  4166c4:	cmp	w1, #0x1
  4166c8:	b.ne	4167c4 <wcrtomb@plt+0x13ef4>  // b.any
  4166cc:	ldp	x21, x22, [sp, #32]
  4166d0:	b	416314 <wcrtomb@plt+0x13a44>
  4166d4:	str	w0, [x21, #104]
  4166d8:	ldp	x21, x22, [sp, #32]
  4166dc:	b	4162f8 <wcrtomb@plt+0x13a28>
  4166e0:	mov	x0, x22
  4166e4:	bl	402660 <free@plt>
  4166e8:	bl	402840 <__errno_location@plt>
  4166ec:	str	wzr, [x0]
  4166f0:	str	xzr, [x20]
  4166f4:	ldp	x21, x22, [sp, #32]
  4166f8:	b	416794 <wcrtomb@plt+0x13ec4>
  4166fc:	str	x23, [sp, #48]
  416700:	bl	4025a0 <abort@plt>
  416704:	mov	x0, x20
  416708:	bl	415060 <wcrtomb@plt+0x12790>
  41670c:	cbz	w0, 4164b8 <wcrtomb@plt+0x13be8>
  416710:	bl	402840 <__errno_location@plt>
  416714:	ldr	w0, [x0]
  416718:	str	w0, [x22, #64]
  41671c:	ldr	w0, [x20, #72]
  416720:	orr	w0, w0, #0x2000
  416724:	str	w0, [x20, #72]
  416728:	b	4164b8 <wcrtomb@plt+0x13be8>
  41672c:	ldr	w0, [x22, #68]
  416730:	bl	402300 <fchdir@plt>
  416734:	cbz	w0, 4164b0 <wcrtomb@plt+0x13be0>
  416738:	bl	402840 <__errno_location@plt>
  41673c:	ldr	w0, [x0]
  416740:	str	w0, [x22, #64]
  416744:	ldr	w0, [x20, #72]
  416748:	orr	w0, w0, #0x2000
  41674c:	str	w0, [x20, #72]
  416750:	b	4164b0 <wcrtomb@plt+0x13be0>
  416754:	tbnz	w0, #0, 4164b8 <wcrtomb@plt+0x13be8>
  416758:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  41675c:	add	x3, x3, #0xf38
  416760:	mov	w2, #0xffffffff            	// #-1
  416764:	ldr	x1, [x22, #8]
  416768:	mov	x0, x20
  41676c:	bl	4150c0 <wcrtomb@plt+0x127f0>
  416770:	cbz	w0, 4164b8 <wcrtomb@plt+0x13be8>
  416774:	bl	402840 <__errno_location@plt>
  416778:	ldr	w0, [x0]
  41677c:	str	w0, [x22, #64]
  416780:	ldr	w0, [x20, #72]
  416784:	orr	w0, w0, #0x2000
  416788:	str	w0, [x20, #72]
  41678c:	b	4164b8 <wcrtomb@plt+0x13be8>
  416790:	mov	x19, #0x0                   	// #0
  416794:	mov	x0, x19
  416798:	ldp	x19, x20, [sp, #16]
  41679c:	ldp	x29, x30, [sp], #64
  4167a0:	ret
  4167a4:	mov	x19, x0
  4167a8:	b	416794 <wcrtomb@plt+0x13ec4>
  4167ac:	cmp	w1, #0x1
  4167b0:	b.ne	4167bc <wcrtomb@plt+0x13eec>  // b.any
  4167b4:	ldp	x21, x22, [sp, #32]
  4167b8:	b	41630c <wcrtomb@plt+0x13a3c>
  4167bc:	ldp	x21, x22, [sp, #32]
  4167c0:	b	416794 <wcrtomb@plt+0x13ec4>
  4167c4:	ldp	x21, x22, [sp, #32]
  4167c8:	b	416794 <wcrtomb@plt+0x13ec4>
  4167cc:	mov	w0, #0x7                   	// #7
  4167d0:	strh	w0, [x22, #108]
  4167d4:	ldr	w0, [x20, #72]
  4167d8:	tst	x0, #0x2000
  4167dc:	csel	x19, x19, x22, ne  // ne = any
  4167e0:	ldp	x21, x22, [sp, #32]
  4167e4:	b	416794 <wcrtomb@plt+0x13ec4>
  4167e8:	cmp	w2, #0x4
  4167ec:	b.hi	4167fc <wcrtomb@plt+0x13f2c>  // b.pmore
  4167f0:	strh	w2, [x1, #112]
  4167f4:	mov	w0, #0x0                   	// #0
  4167f8:	ret
  4167fc:	stp	x29, x30, [sp, #-16]!
  416800:	mov	x29, sp
  416804:	bl	402840 <__errno_location@plt>
  416808:	mov	w1, #0x16                  	// #22
  41680c:	str	w1, [x0]
  416810:	mov	w0, #0x1                   	// #1
  416814:	ldp	x29, x30, [sp], #16
  416818:	ret
  41681c:	stp	x29, x30, [sp, #-64]!
  416820:	mov	x29, sp
  416824:	tst	w1, #0xffffefff
  416828:	b.ne	4168cc <wcrtomb@plt+0x13ffc>  // b.any
  41682c:	stp	x19, x20, [sp, #16]
  416830:	stp	x21, x22, [sp, #32]
  416834:	mov	x19, x0
  416838:	mov	w20, w1
  41683c:	ldr	x22, [x0]
  416840:	bl	402840 <__errno_location@plt>
  416844:	mov	x21, x0
  416848:	str	wzr, [x0]
  41684c:	ldr	w0, [x19, #72]
  416850:	tbnz	w0, #13, 4169ac <wcrtomb@plt+0x140dc>
  416854:	ldrh	w1, [x22, #108]
  416858:	cmp	w1, #0x9
  41685c:	b.eq	4168e0 <wcrtomb@plt+0x14010>  // b.none
  416860:	mov	x0, #0x0                   	// #0
  416864:	cmp	w1, #0x1
  416868:	b.ne	4169bc <wcrtomb@plt+0x140ec>  // b.any
  41686c:	str	x23, [sp, #48]
  416870:	ldr	x0, [x19, #8]
  416874:	cbz	x0, 41687c <wcrtomb@plt+0x13fac>
  416878:	bl	414ca4 <wcrtomb@plt+0x123d4>
  41687c:	mov	w23, #0x1                   	// #1
  416880:	cmp	w20, #0x1, lsl #12
  416884:	b.eq	4168f0 <wcrtomb@plt+0x14020>  // b.none
  416888:	ldr	x0, [x22, #88]
  41688c:	cbnz	x0, 4168a8 <wcrtomb@plt+0x13fd8>
  416890:	ldr	x0, [x22, #48]
  416894:	ldrb	w0, [x0]
  416898:	cmp	w0, #0x2f
  41689c:	b.eq	4168a8 <wcrtomb@plt+0x13fd8>  // b.none
  4168a0:	ldr	w0, [x19, #72]
  4168a4:	tbz	w0, #2, 416904 <wcrtomb@plt+0x14034>
  4168a8:	mov	w1, w23
  4168ac:	mov	x0, x19
  4168b0:	bl	41531c <wcrtomb@plt+0x12a4c>
  4168b4:	str	x0, [x19, #8]
  4168b8:	ldp	x19, x20, [sp, #16]
  4168bc:	ldp	x21, x22, [sp, #32]
  4168c0:	ldr	x23, [sp, #48]
  4168c4:	ldp	x29, x30, [sp], #64
  4168c8:	ret
  4168cc:	bl	402840 <__errno_location@plt>
  4168d0:	mov	w1, #0x16                  	// #22
  4168d4:	str	w1, [x0]
  4168d8:	mov	x0, #0x0                   	// #0
  4168dc:	b	4168c4 <wcrtomb@plt+0x13ff4>
  4168e0:	ldr	x0, [x22, #16]
  4168e4:	ldp	x19, x20, [sp, #16]
  4168e8:	ldp	x21, x22, [sp, #32]
  4168ec:	b	4168c4 <wcrtomb@plt+0x13ff4>
  4168f0:	ldr	w0, [x19, #72]
  4168f4:	orr	w0, w0, #0x1000
  4168f8:	str	w0, [x19, #72]
  4168fc:	mov	w23, #0x2                   	// #2
  416900:	b	416888 <wcrtomb@plt+0x13fb8>
  416904:	adrp	x1, 425000 <_obstack_memory_used@@Base+0xe218>
  416908:	add	x1, x1, #0x1e8
  41690c:	mov	x0, x19
  416910:	bl	414c58 <wcrtomb@plt+0x12388>
  416914:	mov	w20, w0
  416918:	tbnz	w0, #31, 416958 <wcrtomb@plt+0x14088>
  41691c:	mov	w1, w23
  416920:	mov	x0, x19
  416924:	bl	41531c <wcrtomb@plt+0x12a4c>
  416928:	str	x0, [x19, #8]
  41692c:	ldr	w0, [x19, #72]
  416930:	tbz	w0, #9, 416970 <wcrtomb@plt+0x140a0>
  416934:	mov	w2, #0x1                   	// #1
  416938:	mov	w1, w20
  41693c:	mov	x0, x19
  416940:	bl	414fec <wcrtomb@plt+0x1271c>
  416944:	ldr	x0, [x19, #8]
  416948:	ldp	x19, x20, [sp, #16]
  41694c:	ldp	x21, x22, [sp, #32]
  416950:	ldr	x23, [sp, #48]
  416954:	b	4168c4 <wcrtomb@plt+0x13ff4>
  416958:	str	xzr, [x19, #8]
  41695c:	mov	x0, #0x0                   	// #0
  416960:	ldp	x19, x20, [sp, #16]
  416964:	ldp	x21, x22, [sp, #32]
  416968:	ldr	x23, [sp, #48]
  41696c:	b	4168c4 <wcrtomb@plt+0x13ff4>
  416970:	mov	w0, w20
  416974:	bl	402300 <fchdir@plt>
  416978:	cbnz	w0, 416988 <wcrtomb@plt+0x140b8>
  41697c:	mov	w0, w20
  416980:	bl	402530 <close@plt>
  416984:	b	416944 <wcrtomb@plt+0x14074>
  416988:	ldr	w19, [x21]
  41698c:	mov	w0, w20
  416990:	bl	402530 <close@plt>
  416994:	str	w19, [x21]
  416998:	mov	x0, #0x0                   	// #0
  41699c:	ldp	x19, x20, [sp, #16]
  4169a0:	ldp	x21, x22, [sp, #32]
  4169a4:	ldr	x23, [sp, #48]
  4169a8:	b	4168c4 <wcrtomb@plt+0x13ff4>
  4169ac:	mov	x0, #0x0                   	// #0
  4169b0:	ldp	x19, x20, [sp, #16]
  4169b4:	ldp	x21, x22, [sp, #32]
  4169b8:	b	4168c4 <wcrtomb@plt+0x13ff4>
  4169bc:	ldp	x19, x20, [sp, #16]
  4169c0:	ldp	x21, x22, [sp, #32]
  4169c4:	b	4168c4 <wcrtomb@plt+0x13ff4>
  4169c8:	stp	x29, x30, [sp, #-16]!
  4169cc:	mov	x29, sp
  4169d0:	adrp	x3, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  4169d4:	add	x3, x3, #0x8b8
  4169d8:	cmp	x2, #0x0
  4169dc:	csel	x3, x3, x2, eq  // eq = none
  4169e0:	mov	x2, x1
  4169e4:	mov	x1, x0
  4169e8:	mov	x0, #0x0                   	// #0
  4169ec:	bl	4169f8 <wcrtomb@plt+0x14128>
  4169f0:	ldp	x29, x30, [sp], #16
  4169f4:	ret
  4169f8:	stp	x29, x30, [sp, #-64]!
  4169fc:	mov	x29, sp
  416a00:	stp	x19, x20, [sp, #16]
  416a04:	stp	x21, x22, [sp, #32]
  416a08:	mov	x19, x0
  416a0c:	mov	x22, x1
  416a10:	mov	x21, x2
  416a14:	cmp	x0, #0x0
  416a18:	add	x0, sp, #0x3c
  416a1c:	csel	x19, x0, x19, eq  // eq = none
  416a20:	mov	x0, x19
  416a24:	bl	402250 <mbrtowc@plt>
  416a28:	mov	x20, x0
  416a2c:	cmp	x21, #0x0
  416a30:	ccmn	x0, #0x3, #0x0, ne  // ne = any
  416a34:	b.hi	416a4c <wcrtomb@plt+0x1417c>  // b.pmore
  416a38:	mov	x0, x20
  416a3c:	ldp	x19, x20, [sp, #16]
  416a40:	ldp	x21, x22, [sp, #32]
  416a44:	ldp	x29, x30, [sp], #64
  416a48:	ret
  416a4c:	mov	w0, #0x0                   	// #0
  416a50:	bl	423830 <_obstack_memory_used@@Base+0xca48>
  416a54:	and	w0, w0, #0xff
  416a58:	cbnz	w0, 416a38 <wcrtomb@plt+0x14168>
  416a5c:	ldrb	w0, [x22]
  416a60:	str	w0, [x19]
  416a64:	mov	x20, #0x1                   	// #1
  416a68:	b	416a38 <wcrtomb@plt+0x14168>
  416a6c:	stp	x29, x30, [sp, #-16]!
  416a70:	mov	x29, sp
  416a74:	mov	x2, x0
  416a78:	ldrb	w0, [x0, #80]
  416a7c:	tbz	w0, #0, 416a94 <wcrtomb@plt+0x141c4>
  416a80:	ldr	x3, [x2, #56]
  416a84:	ldr	x0, [x2, #72]
  416a88:	blr	x3
  416a8c:	ldp	x29, x30, [sp], #16
  416a90:	ret
  416a94:	ldr	x2, [x2, #56]
  416a98:	mov	x0, x1
  416a9c:	blr	x2
  416aa0:	b	416a8c <wcrtomb@plt+0x141bc>
  416aa4:	stp	x29, x30, [sp, #-16]!
  416aa8:	mov	x29, sp
  416aac:	mov	x2, x0
  416ab0:	ldrb	w0, [x0, #80]
  416ab4:	tbz	w0, #0, 416acc <wcrtomb@plt+0x141fc>
  416ab8:	ldr	x3, [x2, #64]
  416abc:	ldr	x0, [x2, #72]
  416ac0:	blr	x3
  416ac4:	ldp	x29, x30, [sp], #16
  416ac8:	ret
  416acc:	ldr	x2, [x2, #64]
  416ad0:	mov	x0, x1
  416ad4:	blr	x2
  416ad8:	b	416ac4 <wcrtomb@plt+0x141f4>
  416adc:	stp	x29, x30, [sp, #-48]!
  416ae0:	mov	x29, sp
  416ae4:	stp	x19, x20, [sp, #16]
  416ae8:	str	x21, [sp, #32]
  416aec:	mov	x19, x0
  416af0:	cmp	x2, #0x0
  416af4:	mov	x0, #0x10                  	// #16
  416af8:	csel	x20, x2, x0, ne  // ne = any
  416afc:	cmp	x1, #0x0
  416b00:	mov	x0, #0xfe0                 	// #4064
  416b04:	csel	x1, x1, x0, ne  // ne = any
  416b08:	str	x1, [x19]
  416b0c:	sub	x21, x20, #0x1
  416b10:	str	x21, [x19, #48]
  416b14:	mov	x0, x19
  416b18:	bl	416a6c <wcrtomb@plt+0x1419c>
  416b1c:	str	x0, [x19, #8]
  416b20:	cbz	x0, 416b70 <wcrtomb@plt+0x142a0>
  416b24:	add	x2, x0, #0x10
  416b28:	add	x2, x2, x21
  416b2c:	neg	x20, x20
  416b30:	and	x20, x2, x20
  416b34:	str	x20, [x19, #16]
  416b38:	str	x20, [x19, #24]
  416b3c:	ldr	x1, [x19]
  416b40:	add	x1, x0, x1
  416b44:	str	x1, [x0]
  416b48:	str	x1, [x19, #32]
  416b4c:	str	xzr, [x0, #8]
  416b50:	ldrb	w0, [x19, #80]
  416b54:	and	w0, w0, #0xfffffff9
  416b58:	strb	w0, [x19, #80]
  416b5c:	mov	w0, #0x1                   	// #1
  416b60:	ldp	x19, x20, [sp, #16]
  416b64:	ldr	x21, [sp, #32]
  416b68:	ldp	x29, x30, [sp], #48
  416b6c:	ret
  416b70:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  416b74:	ldr	x0, [x0, #1064]
  416b78:	blr	x0
  416b7c:	stp	x29, x30, [sp, #-32]!
  416b80:	mov	x29, sp
  416b84:	str	x19, [sp, #16]
  416b88:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  416b8c:	ldr	x19, [x0, #1072]
  416b90:	mov	w2, #0x5                   	// #5
  416b94:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  416b98:	add	x1, x1, #0xec8
  416b9c:	mov	x0, #0x0                   	// #0
  416ba0:	bl	4027a0 <dcgettext@plt>
  416ba4:	mov	x2, x0
  416ba8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  416bac:	add	x1, x1, #0xb60
  416bb0:	mov	x0, x19
  416bb4:	bl	402880 <fprintf@plt>
  416bb8:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  416bbc:	ldr	w0, [x0, #968]
  416bc0:	bl	4022e0 <exit@plt>

0000000000416bc4 <_obstack_begin@@Base>:
  416bc4:	stp	x29, x30, [sp, #-16]!
  416bc8:	mov	x29, sp
  416bcc:	str	x3, [x0, #56]
  416bd0:	str	x4, [x0, #64]
  416bd4:	ldrb	w3, [x0, #80]
  416bd8:	and	w3, w3, #0xfffffffe
  416bdc:	strb	w3, [x0, #80]
  416be0:	bl	416adc <wcrtomb@plt+0x1420c>
  416be4:	ldp	x29, x30, [sp], #16
  416be8:	ret

0000000000416bec <_obstack_begin_1@@Base>:
  416bec:	stp	x29, x30, [sp, #-16]!
  416bf0:	mov	x29, sp
  416bf4:	str	x3, [x0, #56]
  416bf8:	str	x4, [x0, #64]
  416bfc:	str	x5, [x0, #72]
  416c00:	ldrb	w3, [x0, #80]
  416c04:	orr	w3, w3, #0x1
  416c08:	strb	w3, [x0, #80]
  416c0c:	bl	416adc <wcrtomb@plt+0x1420c>
  416c10:	ldp	x29, x30, [sp], #16
  416c14:	ret

0000000000416c18 <_obstack_newchunk@@Base>:
  416c18:	stp	x29, x30, [sp, #-64]!
  416c1c:	mov	x29, sp
  416c20:	stp	x19, x20, [sp, #16]
  416c24:	stp	x21, x22, [sp, #32]
  416c28:	str	x23, [sp, #48]
  416c2c:	mov	x19, x0
  416c30:	ldr	x22, [x0, #8]
  416c34:	ldr	x21, [x0, #24]
  416c38:	ldr	x0, [x0, #16]
  416c3c:	sub	x21, x21, x0
  416c40:	add	x1, x21, x1
  416c44:	ldr	x0, [x19, #48]
  416c48:	add	x0, x1, x0
  416c4c:	lsr	x20, x21, #3
  416c50:	add	x20, x20, #0x64
  416c54:	add	x20, x20, x0
  416c58:	ldr	x2, [x19]
  416c5c:	cmp	x2, x0
  416c60:	csel	x2, x2, x0, cs  // cs = hs, nlast
  416c64:	cmp	x2, x20
  416c68:	csel	x20, x2, x20, cs  // cs = hs, nlast
  416c6c:	cmp	x21, x1
  416c70:	ccmp	x1, x0, #0x2, ls  // ls = plast
  416c74:	b.hi	416d10 <_obstack_newchunk@@Base+0xf8>  // b.pmore
  416c78:	mov	x1, x20
  416c7c:	mov	x0, x19
  416c80:	bl	416a6c <wcrtomb@plt+0x1419c>
  416c84:	mov	x23, x0
  416c88:	cbz	x0, 416d10 <_obstack_newchunk@@Base+0xf8>
  416c8c:	str	x0, [x19, #8]
  416c90:	str	x22, [x0, #8]
  416c94:	add	x2, x0, x20
  416c98:	str	x2, [x19, #32]
  416c9c:	mov	x1, x0
  416ca0:	str	x2, [x1], #16
  416ca4:	ldr	x20, [x19, #48]
  416ca8:	add	x1, x1, x20
  416cac:	bic	x20, x1, x20
  416cb0:	mov	x2, x21
  416cb4:	ldr	x1, [x19, #16]
  416cb8:	mov	x0, x20
  416cbc:	bl	402260 <memcpy@plt>
  416cc0:	ldrb	w0, [x19, #80]
  416cc4:	tbnz	w0, #1, 416ce4 <_obstack_newchunk@@Base+0xcc>
  416cc8:	ldr	x0, [x19, #48]
  416ccc:	add	x1, x22, #0x10
  416cd0:	add	x1, x1, x0
  416cd4:	bic	x0, x1, x0
  416cd8:	ldr	x1, [x19, #16]
  416cdc:	cmp	x1, x0
  416ce0:	b.eq	416d1c <_obstack_newchunk@@Base+0x104>  // b.none
  416ce4:	str	x20, [x19, #16]
  416ce8:	add	x20, x20, x21
  416cec:	str	x20, [x19, #24]
  416cf0:	ldrb	w0, [x19, #80]
  416cf4:	and	w0, w0, #0xfffffffd
  416cf8:	strb	w0, [x19, #80]
  416cfc:	ldp	x19, x20, [sp, #16]
  416d00:	ldp	x21, x22, [sp, #32]
  416d04:	ldr	x23, [sp, #48]
  416d08:	ldp	x29, x30, [sp], #64
  416d0c:	ret
  416d10:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x27218>
  416d14:	ldr	x0, [x0, #1064]
  416d18:	blr	x0
  416d1c:	ldr	x0, [x22, #8]
  416d20:	str	x0, [x23, #8]
  416d24:	mov	x1, x22
  416d28:	mov	x0, x19
  416d2c:	bl	416aa4 <wcrtomb@plt+0x141d4>
  416d30:	b	416ce4 <_obstack_newchunk@@Base+0xcc>

0000000000416d34 <_obstack_allocated_p@@Base>:
  416d34:	ldr	x0, [x0, #8]
  416d38:	cbnz	x0, 416d48 <_obstack_allocated_p@@Base+0x14>
  416d3c:	b	416d5c <_obstack_allocated_p@@Base+0x28>
  416d40:	ldr	x0, [x0, #8]
  416d44:	cbz	x0, 416d5c <_obstack_allocated_p@@Base+0x28>
  416d48:	cmp	x1, x0
  416d4c:	b.ls	416d40 <_obstack_allocated_p@@Base+0xc>  // b.plast
  416d50:	ldr	x2, [x0]
  416d54:	cmp	x2, x1
  416d58:	b.cc	416d40 <_obstack_allocated_p@@Base+0xc>  // b.lo, b.ul, b.last
  416d5c:	cmp	x0, #0x0
  416d60:	cset	w0, ne  // ne = any
  416d64:	ret

0000000000416d68 <_obstack_free@@Base>:
  416d68:	stp	x29, x30, [sp, #-48]!
  416d6c:	mov	x29, sp
  416d70:	stp	x19, x20, [sp, #16]
  416d74:	str	x21, [sp, #32]
  416d78:	mov	x19, x0
  416d7c:	mov	x21, x1
  416d80:	ldr	x1, [x0, #8]
  416d84:	cbnz	x1, 416db0 <_obstack_free@@Base+0x48>
  416d88:	cbz	x21, 416dd8 <_obstack_free@@Base+0x70>
  416d8c:	bl	4025a0 <abort@plt>
  416d90:	ldr	x20, [x1, #8]
  416d94:	mov	x0, x19
  416d98:	bl	416aa4 <wcrtomb@plt+0x141d4>
  416d9c:	ldrb	w2, [x19, #80]
  416da0:	orr	w2, w2, #0x2
  416da4:	strb	w2, [x19, #80]
  416da8:	cbz	x20, 416d88 <_obstack_free@@Base+0x20>
  416dac:	mov	x1, x20
  416db0:	cmp	x21, x1
  416db4:	b.ls	416d90 <_obstack_free@@Base+0x28>  // b.plast
  416db8:	ldr	x0, [x1]
  416dbc:	cmp	x0, x21
  416dc0:	b.cc	416d90 <_obstack_free@@Base+0x28>  // b.lo, b.ul, b.last
  416dc4:	str	x21, [x19, #24]
  416dc8:	str	x21, [x19, #16]
  416dcc:	ldr	x0, [x1]
  416dd0:	str	x0, [x19, #32]
  416dd4:	str	x1, [x19, #8]
  416dd8:	ldp	x19, x20, [sp, #16]
  416ddc:	ldr	x21, [sp, #32]
  416de0:	ldp	x29, x30, [sp], #48
  416de4:	ret

0000000000416de8 <_obstack_memory_used@@Base>:
  416de8:	ldr	x1, [x0, #8]
  416dec:	cbz	x1, 416e0c <_obstack_memory_used@@Base+0x24>
  416df0:	mov	x0, #0x0                   	// #0
  416df4:	ldr	x2, [x1]
  416df8:	sub	x2, x2, x1
  416dfc:	add	x0, x0, x2
  416e00:	ldr	x1, [x1, #8]
  416e04:	cbnz	x1, 416df4 <_obstack_memory_used@@Base+0xc>
  416e08:	ret
  416e0c:	mov	x0, #0x0                   	// #0
  416e10:	b	416e08 <_obstack_memory_used@@Base+0x20>
  416e14:	mov	x2, x0
  416e18:	ldr	w0, [x0, #144]
  416e1c:	cmp	w0, #0x1
  416e20:	b.eq	416e58 <_obstack_memory_used@@Base+0x70>  // b.none
  416e24:	add	x1, x1, #0x1
  416e28:	ldr	x3, [x2, #48]
  416e2c:	cmp	x1, x3
  416e30:	b.ge	416e5c <_obstack_memory_used@@Base+0x74>  // b.tcont
  416e34:	ldr	x4, [x2, #16]
  416e38:	mov	w0, #0x1                   	// #1
  416e3c:	ldr	w2, [x4, x1, lsl #2]
  416e40:	cmn	w2, #0x1
  416e44:	b.ne	416e58 <_obstack_memory_used@@Base+0x70>  // b.any
  416e48:	add	w0, w0, #0x1
  416e4c:	add	x1, x1, #0x1
  416e50:	cmp	x3, x1
  416e54:	b.ne	416e3c <_obstack_memory_used@@Base+0x54>  // b.any
  416e58:	ret
  416e5c:	mov	w0, #0x1                   	// #1
  416e60:	b	416e58 <_obstack_memory_used@@Base+0x70>
  416e64:	ldr	w2, [x0, #144]
  416e68:	cmp	w2, #0x1
  416e6c:	b.eq	416e7c <_obstack_memory_used@@Base+0x94>  // b.none
  416e70:	ldr	x0, [x0, #16]
  416e74:	ldr	w0, [x0, x1, lsl #2]
  416e78:	ret
  416e7c:	ldr	x0, [x0, #8]
  416e80:	ldrb	w0, [x0, x1]
  416e84:	b	416e78 <_obstack_memory_used@@Base+0x90>
  416e88:	ldr	x1, [x0, #88]
  416e8c:	ldr	x4, [x0, #64]
  416e90:	cmp	x4, x1
  416e94:	csel	x4, x4, x1, le
  416e98:	ldr	x1, [x0, #48]
  416e9c:	cmp	x4, x1
  416ea0:	b.le	416edc <_obstack_memory_used@@Base+0xf4>
  416ea4:	ldr	x2, [x0]
  416ea8:	ldr	x3, [x0, #40]
  416eac:	add	x2, x2, x1
  416eb0:	ldrb	w2, [x2, x3]
  416eb4:	ldr	x3, [x0, #120]
  416eb8:	ldrb	w3, [x3, x2]
  416ebc:	ldr	x2, [x0, #8]
  416ec0:	strb	w3, [x2, x1]
  416ec4:	add	x1, x1, #0x1
  416ec8:	cmp	x4, x1
  416ecc:	b.ne	416ea4 <_obstack_memory_used@@Base+0xbc>  // b.any
  416ed0:	str	x4, [x0, #48]
  416ed4:	str	x4, [x0, #56]
  416ed8:	ret
  416edc:	mov	x4, x1
  416ee0:	b	416ed0 <_obstack_memory_used@@Base+0xe8>
  416ee4:	mov	x3, x0
  416ee8:	cmp	x0, #0x0
  416eec:	cset	w0, eq  // eq = none
  416ef0:	cmp	x1, #0x0
  416ef4:	csinc	w0, w0, wzr, ne  // ne = any
  416ef8:	cbnz	w0, 416f38 <_obstack_memory_used@@Base+0x150>
  416efc:	ldr	x2, [x3, #8]
  416f00:	ldr	x4, [x1, #8]
  416f04:	cmp	x2, x4
  416f08:	b.ne	416f3c <_obstack_memory_used@@Base+0x154>  // b.any
  416f0c:	subs	x2, x2, #0x1
  416f10:	b.mi	416f30 <_obstack_memory_used@@Base+0x148>  // b.first
  416f14:	ldr	x5, [x3, #16]
  416f18:	ldr	x4, [x1, #16]
  416f1c:	ldr	x5, [x5, x2, lsl #3]
  416f20:	ldr	x4, [x4, x2, lsl #3]
  416f24:	cmp	x5, x4
  416f28:	b.eq	416f0c <_obstack_memory_used@@Base+0x124>  // b.none
  416f2c:	b	416f3c <_obstack_memory_used@@Base+0x154>
  416f30:	mov	w0, #0x1                   	// #1
  416f34:	b	416f3c <_obstack_memory_used@@Base+0x154>
  416f38:	mov	w0, #0x0                   	// #0
  416f3c:	ret
  416f40:	ldr	x3, [x0, #8]
  416f44:	cmp	x3, #0x0
  416f48:	b.le	416f98 <_obstack_memory_used@@Base+0x1b0>
  416f4c:	sub	x3, x3, #0x1
  416f50:	mov	x4, #0x0                   	// #0
  416f54:	cmp	x3, x4
  416f58:	b.ls	416f84 <_obstack_memory_used@@Base+0x19c>  // b.plast
  416f5c:	add	x2, x3, x4
  416f60:	lsr	x2, x2, #1
  416f64:	ldr	x5, [x0, #16]
  416f68:	ldr	x5, [x5, x2, lsl #3]
  416f6c:	cmp	x5, x1
  416f70:	b.lt	416f7c <_obstack_memory_used@@Base+0x194>  // b.tstop
  416f74:	mov	x3, x2
  416f78:	b	416f54 <_obstack_memory_used@@Base+0x16c>
  416f7c:	add	x4, x2, #0x1
  416f80:	b	416f54 <_obstack_memory_used@@Base+0x16c>
  416f84:	ldr	x0, [x0, #16]
  416f88:	ldr	x0, [x0, x4, lsl #3]
  416f8c:	cmp	x0, x1
  416f90:	csinc	x0, xzr, x4, ne  // ne = any
  416f94:	ret
  416f98:	mov	x0, #0x0                   	// #0
  416f9c:	b	416f94 <_obstack_memory_used@@Base+0x1ac>
  416fa0:	tbnz	x1, #63, 416fe8 <_obstack_memory_used@@Base+0x200>
  416fa4:	ldr	x2, [x0, #8]
  416fa8:	cmp	x2, x1
  416fac:	b.le	416fe8 <_obstack_memory_used@@Base+0x200>
  416fb0:	sub	x2, x2, #0x1
  416fb4:	str	x2, [x0, #8]
  416fb8:	cmp	x2, x1
  416fbc:	b.le	416fe8 <_obstack_memory_used@@Base+0x200>
  416fc0:	add	x2, x1, #0x1
  416fc4:	lsl	x2, x2, #3
  416fc8:	ldr	x3, [x0, #16]
  416fcc:	ldr	x4, [x3, x2]
  416fd0:	str	x4, [x3, x1, lsl #3]
  416fd4:	add	x1, x1, #0x1
  416fd8:	add	x2, x2, #0x8
  416fdc:	ldr	x3, [x0, #8]
  416fe0:	cmp	x3, x1
  416fe4:	b.gt	416fc8 <_obstack_memory_used@@Base+0x1e0>
  416fe8:	ret
  416fec:	ldrb	w2, [x1, #48]
  416ff0:	cmp	w2, #0x4
  416ff4:	b.eq	417008 <_obstack_memory_used@@Base+0x220>  // b.none
  416ff8:	cmp	w2, #0x11
  416ffc:	b.eq	417038 <_obstack_memory_used@@Base+0x250>  // b.none
  417000:	mov	w0, #0x0                   	// #0
  417004:	ret
  417008:	ldr	x2, [x0, #224]
  41700c:	cbz	x2, 417000 <_obstack_memory_used@@Base+0x218>
  417010:	ldrsw	x3, [x1, #40]
  417014:	ldr	x2, [x2, x3, lsl #3]
  417018:	str	x2, [x1, #40]
  41701c:	mov	w1, #0x1                   	// #1
  417020:	lsl	w1, w1, w2
  417024:	sxtw	x1, w1
  417028:	ldr	x2, [x0, #160]
  41702c:	orr	x1, x2, x1
  417030:	str	x1, [x0, #160]
  417034:	b	417000 <_obstack_memory_used@@Base+0x218>
  417038:	ldr	x2, [x1, #8]
  41703c:	cbz	x2, 417000 <_obstack_memory_used@@Base+0x218>
  417040:	ldrb	w3, [x2, #48]
  417044:	cmp	w3, #0x11
  417048:	b.ne	417000 <_obstack_memory_used@@Base+0x218>  // b.any
  41704c:	ldr	x3, [x2, #40]
  417050:	ldr	x2, [x2, #8]
  417054:	str	x2, [x1, #8]
  417058:	cbz	x2, 417060 <_obstack_memory_used@@Base+0x278>
  41705c:	str	x1, [x2]
  417060:	ldr	x2, [x0, #224]
  417064:	ldr	x1, [x1, #40]
  417068:	ldr	x1, [x2, x1, lsl #3]
  41706c:	str	x1, [x2, x3, lsl #3]
  417070:	cmp	x3, #0x3f
  417074:	b.gt	417000 <_obstack_memory_used@@Base+0x218>
  417078:	mov	x1, #0x1                   	// #1
  41707c:	lsl	x1, x1, x3
  417080:	ldr	x2, [x0, #160]
  417084:	bic	x1, x2, x1
  417088:	str	x1, [x0, #160]
  41708c:	b	417000 <_obstack_memory_used@@Base+0x218>
  417090:	ldrb	w0, [x1, #48]
  417094:	cmp	w0, #0xb
  417098:	b.eq	4170c8 <_obstack_memory_used@@Base+0x2e0>  // b.none
  41709c:	cmp	w0, #0x10
  4170a0:	b.eq	4170d8 <_obstack_memory_used@@Base+0x2f0>  // b.none
  4170a4:	ldr	x0, [x1, #8]
  4170a8:	cbz	x0, 4170b4 <_obstack_memory_used@@Base+0x2cc>
  4170ac:	ldr	x2, [x1, #32]
  4170b0:	str	x2, [x0, #32]
  4170b4:	ldr	x0, [x1, #16]
  4170b8:	cbz	x0, 4170d0 <_obstack_memory_used@@Base+0x2e8>
  4170bc:	ldr	x1, [x1, #32]
  4170c0:	str	x1, [x0, #32]
  4170c4:	b	4170d0 <_obstack_memory_used@@Base+0x2e8>
  4170c8:	ldr	x0, [x1, #8]
  4170cc:	str	x1, [x0, #32]
  4170d0:	mov	w0, #0x0                   	// #0
  4170d4:	ret
  4170d8:	ldr	x0, [x1, #8]
  4170dc:	ldr	x2, [x1, #16]
  4170e0:	ldr	x2, [x2, #24]
  4170e4:	str	x2, [x0, #32]
  4170e8:	ldr	x0, [x1, #16]
  4170ec:	ldr	x1, [x1, #32]
  4170f0:	str	x1, [x0, #32]
  4170f4:	b	4170d0 <_obstack_memory_used@@Base+0x2e8>
  4170f8:	ldr	x3, [x1, #72]
  4170fc:	ldr	x4, [x1, #104]
  417100:	cmp	x4, x3
  417104:	b.le	417170 <_obstack_memory_used@@Base+0x388>
  417108:	ldr	x4, [x1, #8]
  41710c:	ldrb	w3, [x4, x3]
  417110:	strb	w3, [x0]
  417114:	ldr	w4, [x1, #144]
  417118:	cmp	w4, #0x1
  41711c:	b.le	417140 <_obstack_memory_used@@Base+0x358>
  417120:	ldr	x4, [x1, #72]
  417124:	ldr	x5, [x1, #48]
  417128:	cmp	x4, x5
  41712c:	b.eq	417140 <_obstack_memory_used@@Base+0x358>  // b.none
  417130:	ldr	x5, [x1, #16]
  417134:	ldr	w4, [x5, x4, lsl #2]
  417138:	cmn	w4, #0x1
  41713c:	b.eq	417180 <_obstack_memory_used@@Base+0x398>  // b.none
  417140:	cmp	w3, #0x5c
  417144:	b.eq	417190 <_obstack_memory_used@@Base+0x3a8>  // b.none
  417148:	cmp	w3, #0x5b
  41714c:	b.eq	4171d8 <_obstack_memory_used@@Base+0x3f0>  // b.none
  417150:	cmp	w3, #0x5d
  417154:	b.eq	417278 <_obstack_memory_used@@Base+0x490>  // b.none
  417158:	cmp	w3, #0x5e
  41715c:	b.ne	417260 <_obstack_memory_used@@Base+0x478>  // b.any
  417160:	mov	w1, #0x19                  	// #25
  417164:	strb	w1, [x0, #8]
  417168:	mov	w0, #0x1                   	// #1
  41716c:	b	41717c <_obstack_memory_used@@Base+0x394>
  417170:	mov	w1, #0x2                   	// #2
  417174:	strb	w1, [x0, #8]
  417178:	mov	w0, #0x0                   	// #0
  41717c:	ret
  417180:	mov	w1, #0x1                   	// #1
  417184:	strb	w1, [x0, #8]
  417188:	mov	w0, #0x1                   	// #1
  41718c:	b	41717c <_obstack_memory_used@@Base+0x394>
  417190:	tbz	w2, #0, 4171a8 <_obstack_memory_used@@Base+0x3c0>
  417194:	ldr	x2, [x1, #72]
  417198:	add	x2, x2, #0x1
  41719c:	ldr	x3, [x1, #88]
  4171a0:	cmp	x2, x3
  4171a4:	b.lt	4171b8 <_obstack_memory_used@@Base+0x3d0>  // b.tstop
  4171a8:	mov	w1, #0x1                   	// #1
  4171ac:	strb	w1, [x0, #8]
  4171b0:	mov	w0, #0x1                   	// #1
  4171b4:	b	41717c <_obstack_memory_used@@Base+0x394>
  4171b8:	str	x2, [x1, #72]
  4171bc:	ldr	x1, [x1, #8]
  4171c0:	ldrb	w1, [x1, x2]
  4171c4:	strb	w1, [x0]
  4171c8:	mov	w1, #0x1                   	// #1
  4171cc:	strb	w1, [x0, #8]
  4171d0:	mov	w0, #0x1                   	// #1
  4171d4:	b	41717c <_obstack_memory_used@@Base+0x394>
  4171d8:	ldr	x3, [x1, #72]
  4171dc:	add	x5, x3, #0x1
  4171e0:	ldr	x4, [x1, #88]
  4171e4:	cmp	x5, x4
  4171e8:	b.ge	417214 <_obstack_memory_used@@Base+0x42c>  // b.tcont
  4171ec:	ldr	x1, [x1, #8]
  4171f0:	add	x3, x1, x3
  4171f4:	ldrb	w1, [x3, #1]
  4171f8:	strb	w1, [x0]
  4171fc:	cmp	w1, #0x3a
  417200:	b.eq	41724c <_obstack_memory_used@@Base+0x464>  // b.none
  417204:	cmp	w1, #0x3d
  417208:	b.eq	41723c <_obstack_memory_used@@Base+0x454>  // b.none
  41720c:	cmp	w1, #0x2e
  417210:	b.eq	41722c <_obstack_memory_used@@Base+0x444>  // b.none
  417214:	mov	w1, #0x1                   	// #1
  417218:	strb	w1, [x0, #8]
  41721c:	mov	w1, #0x5b                  	// #91
  417220:	strb	w1, [x0]
  417224:	mov	w0, #0x1                   	// #1
  417228:	b	41717c <_obstack_memory_used@@Base+0x394>
  41722c:	mov	w1, #0x1a                  	// #26
  417230:	strb	w1, [x0, #8]
  417234:	mov	w0, #0x2                   	// #2
  417238:	b	41717c <_obstack_memory_used@@Base+0x394>
  41723c:	mov	w1, #0x1c                  	// #28
  417240:	strb	w1, [x0, #8]
  417244:	mov	w0, #0x2                   	// #2
  417248:	b	41717c <_obstack_memory_used@@Base+0x394>
  41724c:	tbz	w2, #2, 417214 <_obstack_memory_used@@Base+0x42c>
  417250:	mov	w1, #0x1e                  	// #30
  417254:	strb	w1, [x0, #8]
  417258:	mov	w0, #0x2                   	// #2
  41725c:	b	41717c <_obstack_memory_used@@Base+0x394>
  417260:	cmp	w3, #0x2d
  417264:	b.ne	4171a8 <_obstack_memory_used@@Base+0x3c0>  // b.any
  417268:	mov	w1, #0x16                  	// #22
  41726c:	strb	w1, [x0, #8]
  417270:	mov	w0, #0x1                   	// #1
  417274:	b	41717c <_obstack_memory_used@@Base+0x394>
  417278:	mov	w1, #0x15                  	// #21
  41727c:	strb	w1, [x0, #8]
  417280:	mov	w0, #0x1                   	// #1
  417284:	b	41717c <_obstack_memory_used@@Base+0x394>
  417288:	ldrb	w2, [x1, #48]
  41728c:	cmp	w2, #0x11
  417290:	b.eq	41729c <_obstack_memory_used@@Base+0x4b4>  // b.none
  417294:	mov	w0, #0x0                   	// #0
  417298:	ret
  41729c:	ldr	x2, [x1, #40]
  4172a0:	cmp	x0, x2
  4172a4:	b.ne	417294 <_obstack_memory_used@@Base+0x4ac>  // b.any
  4172a8:	ldrb	w0, [x1, #50]
  4172ac:	orr	w0, w0, #0x8
  4172b0:	strb	w0, [x1, #50]
  4172b4:	b	417294 <_obstack_memory_used@@Base+0x4ac>
  4172b8:	stp	x29, x30, [sp, #-144]!
  4172bc:	mov	x29, sp
  4172c0:	stp	x21, x22, [sp, #32]
  4172c4:	stp	x23, x24, [sp, #48]
  4172c8:	stp	x27, x28, [sp, #80]
  4172cc:	mov	x27, x0
  4172d0:	str	w1, [sp, #104]
  4172d4:	ldr	x23, [x0, #152]
  4172d8:	add	x22, x3, x3, lsl #1
  4172dc:	ldr	x0, [x23, #48]
  4172e0:	add	x22, x0, x22, lsl #3
  4172e4:	ldr	x0, [x22, #8]
  4172e8:	cmp	x0, #0x0
  4172ec:	b.le	41747c <_obstack_memory_used@@Base+0x694>
  4172f0:	stp	x19, x20, [sp, #16]
  4172f4:	stp	x25, x26, [sp, #64]
  4172f8:	mov	x24, x2
  4172fc:	mov	x26, x3
  417300:	mov	x25, x4
  417304:	add	x0, x4, x4, lsl #2
  417308:	lsl	x0, x0, #3
  41730c:	str	x0, [sp, #136]
  417310:	mov	x0, #0x1                   	// #1
  417314:	lsl	x0, x0, x2
  417318:	str	x0, [sp, #120]
  41731c:	mvn	w0, w0
  417320:	and	w0, w0, #0xffff
  417324:	str	w0, [sp, #132]
  417328:	mov	x19, #0x0                   	// #0
  41732c:	and	w0, w1, #0x1
  417330:	str	w0, [sp, #128]
  417334:	and	w28, w1, #0x2
  417338:	b	417400 <_obstack_memory_used@@Base+0x618>
  41733c:	ldr	x0, [x23, #40]
  417340:	ldr	x1, [sp, #112]
  417344:	add	x0, x0, x1
  417348:	ldr	x0, [x0, #16]
  41734c:	ldr	x3, [x0]
  417350:	cmp	x26, x3
  417354:	b.eq	4173c8 <_obstack_memory_used@@Base+0x5e0>  // b.none
  417358:	mov	x4, x25
  41735c:	mov	x2, x24
  417360:	ldr	w1, [sp, #104]
  417364:	mov	x0, x27
  417368:	bl	4172b8 <_obstack_memory_used@@Base+0x4d0>
  41736c:	cmn	w0, #0x1
  417370:	b.eq	4174a8 <_obstack_memory_used@@Base+0x6c0>  // b.none
  417374:	cbnz	w0, 41737c <_obstack_memory_used@@Base+0x594>
  417378:	cbnz	w28, 4174b4 <_obstack_memory_used@@Base+0x6cc>
  41737c:	cmp	x24, #0x3f
  417380:	b.gt	417394 <_obstack_memory_used@@Base+0x5ac>
  417384:	ldrh	w0, [x20, #34]
  417388:	ldr	w1, [sp, #132]
  41738c:	and	w0, w1, w0
  417390:	strh	w0, [x20, #34]
  417394:	add	x20, x20, #0x28
  417398:	ldurb	w0, [x20, #-8]
  41739c:	cbz	w0, 4173f0 <_obstack_memory_used@@Base+0x608>
  4173a0:	ldr	x0, [x20]
  4173a4:	cmp	x0, x21
  4173a8:	b.ne	417394 <_obstack_memory_used@@Base+0x5ac>  // b.any
  4173ac:	cmp	x24, #0x3f
  4173b0:	b.gt	41733c <_obstack_memory_used@@Base+0x554>
  4173b4:	ldrh	w0, [x20, #34]
  4173b8:	ldr	x1, [sp, #120]
  4173bc:	tst	x0, x1
  4173c0:	b.ne	41733c <_obstack_memory_used@@Base+0x554>  // b.any
  4173c4:	b	417394 <_obstack_memory_used@@Base+0x5ac>
  4173c8:	ldr	x0, [sp, #104]
  4173cc:	sbfx	x0, x0, #0, #1
  4173d0:	ldp	x19, x20, [sp, #16]
  4173d4:	ldp	x25, x26, [sp, #64]
  4173d8:	b	417484 <_obstack_memory_used@@Base+0x69c>
  4173dc:	ldr	w0, [sp, #128]
  4173e0:	cbz	w0, 4173f0 <_obstack_memory_used@@Base+0x608>
  4173e4:	ldr	x0, [x2, x1]
  4173e8:	cmp	x0, x24
  4173ec:	b.eq	417498 <_obstack_memory_used@@Base+0x6b0>  // b.none
  4173f0:	add	x19, x19, #0x1
  4173f4:	ldr	x0, [x22, #8]
  4173f8:	cmp	x0, x19
  4173fc:	b.le	417474 <_obstack_memory_used@@Base+0x68c>
  417400:	ldr	x0, [x22, #16]
  417404:	ldr	x21, [x0, x19, lsl #3]
  417408:	lsl	x1, x21, #4
  41740c:	ldr	x2, [x23]
  417410:	add	x0, x2, x1
  417414:	ldrb	w0, [x0, #8]
  417418:	cmp	w0, #0x8
  41741c:	b.eq	4173dc <_obstack_memory_used@@Base+0x5f4>  // b.none
  417420:	cmp	w0, #0x9
  417424:	b.eq	417454 <_obstack_memory_used@@Base+0x66c>  // b.none
  417428:	cmp	w0, #0x4
  41742c:	b.ne	4173f0 <_obstack_memory_used@@Base+0x608>  // b.any
  417430:	cmn	x25, #0x1
  417434:	b.eq	4173f0 <_obstack_memory_used@@Base+0x608>  // b.none
  417438:	ldr	x20, [x27, #216]
  41743c:	ldr	x0, [sp, #136]
  417440:	add	x20, x20, x0
  417444:	add	x0, x21, x21, lsl #1
  417448:	lsl	x0, x0, #3
  41744c:	str	x0, [sp, #112]
  417450:	b	4173a0 <_obstack_memory_used@@Base+0x5b8>
  417454:	cbz	w28, 4173f0 <_obstack_memory_used@@Base+0x608>
  417458:	ldr	x0, [x2, x1]
  41745c:	cmp	x0, x24
  417460:	b.ne	4173f0 <_obstack_memory_used@@Base+0x608>  // b.any
  417464:	mov	w0, #0x0                   	// #0
  417468:	ldp	x19, x20, [sp, #16]
  41746c:	ldp	x25, x26, [sp, #64]
  417470:	b	417484 <_obstack_memory_used@@Base+0x69c>
  417474:	ldp	x19, x20, [sp, #16]
  417478:	ldp	x25, x26, [sp, #64]
  41747c:	ldr	x0, [sp, #104]
  417480:	ubfx	x0, x0, #1, #1
  417484:	ldp	x21, x22, [sp, #32]
  417488:	ldp	x23, x24, [sp, #48]
  41748c:	ldp	x27, x28, [sp, #80]
  417490:	ldp	x29, x30, [sp], #144
  417494:	ret
  417498:	mov	w0, #0xffffffff            	// #-1
  41749c:	ldp	x19, x20, [sp, #16]
  4174a0:	ldp	x25, x26, [sp, #64]
  4174a4:	b	417484 <_obstack_memory_used@@Base+0x69c>
  4174a8:	ldp	x19, x20, [sp, #16]
  4174ac:	ldp	x25, x26, [sp, #64]
  4174b0:	b	417484 <_obstack_memory_used@@Base+0x69c>
  4174b4:	ldp	x19, x20, [sp, #16]
  4174b8:	ldp	x25, x26, [sp, #64]
  4174bc:	b	417484 <_obstack_memory_used@@Base+0x69c>
  4174c0:	mov	x7, x0
  4174c4:	mov	x6, x4
  4174c8:	add	x1, x1, x1, lsl #2
  4174cc:	ldr	x0, [x0, #216]
  4174d0:	add	x1, x0, x1, lsl #3
  4174d4:	ldr	x4, [x1, #16]
  4174d8:	cmp	x4, x6
  4174dc:	b.gt	417510 <_obstack_memory_used@@Base+0x728>
  4174e0:	ldr	x8, [x1, #24]
  4174e4:	mov	w0, #0x1                   	// #1
  4174e8:	cmp	x8, x6
  4174ec:	b.lt	41750c <_obstack_memory_used@@Base+0x724>  // b.tstop
  4174f0:	cmp	x4, x6
  4174f4:	cset	w1, eq  // eq = none
  4174f8:	cmp	x8, x6
  4174fc:	b.eq	417518 <_obstack_memory_used@@Base+0x730>  // b.none
  417500:	mov	w0, #0x0                   	// #0
  417504:	cmp	x4, x6
  417508:	b.eq	41751c <_obstack_memory_used@@Base+0x734>  // b.none
  41750c:	ret
  417510:	mov	w0, #0xffffffff            	// #-1
  417514:	ret
  417518:	orr	w1, w1, #0x2
  41751c:	stp	x29, x30, [sp, #-16]!
  417520:	mov	x29, sp
  417524:	mov	x4, x5
  417528:	mov	x0, x7
  41752c:	bl	4172b8 <_obstack_memory_used@@Base+0x4d0>
  417530:	ldp	x29, x30, [sp], #16
  417534:	ret
  417538:	mov	x6, x0
  41753c:	ldr	x7, [x0, #200]
  417540:	mov	x4, x7
  417544:	mov	x0, #0x0                   	// #0
  417548:	cmp	x4, x0
  41754c:	b.le	417584 <_obstack_memory_used@@Base+0x79c>
  417550:	add	x2, x4, x0
  417554:	add	x2, x2, x2, lsr #63
  417558:	asr	x2, x2, #1
  41755c:	ldr	x5, [x6, #216]
  417560:	add	x3, x2, x2, lsl #2
  417564:	add	x3, x5, x3, lsl #3
  417568:	ldr	x3, [x3, #8]
  41756c:	cmp	x3, x1
  417570:	b.lt	41757c <_obstack_memory_used@@Base+0x794>  // b.tstop
  417574:	mov	x4, x2
  417578:	b	417548 <_obstack_memory_used@@Base+0x760>
  41757c:	add	x0, x2, #0x1
  417580:	b	417548 <_obstack_memory_used@@Base+0x760>
  417584:	cmp	x7, x0
  417588:	b.le	4175a8 <_obstack_memory_used@@Base+0x7c0>
  41758c:	ldr	x3, [x6, #216]
  417590:	add	x2, x0, x0, lsl #2
  417594:	add	x2, x3, x2, lsl #3
  417598:	ldr	x2, [x2, #8]
  41759c:	cmp	x2, x1
  4175a0:	csinv	x0, x0, xzr, eq  // eq = none
  4175a4:	ret
  4175a8:	mov	x0, #0xffffffffffffffff    	// #-1
  4175ac:	b	4175a4 <_obstack_memory_used@@Base+0x7bc>
  4175b0:	stp	x29, x30, [sp, #-112]!
  4175b4:	mov	x29, sp
  4175b8:	stp	x19, x20, [sp, #16]
  4175bc:	stp	x21, x22, [sp, #32]
  4175c0:	stp	x23, x24, [sp, #48]
  4175c4:	stp	x25, x26, [sp, #64]
  4175c8:	stp	x27, x28, [sp, #80]
  4175cc:	mov	x19, x0
  4175d0:	mov	x20, x1
  4175d4:	mov	x25, x2
  4175d8:	mov	x22, x3
  4175dc:	mov	x26, x4
  4175e0:	mov	x23, x5
  4175e4:	ldr	x28, [x0, #152]
  4175e8:	mov	x1, x3
  4175ec:	bl	417538 <_obstack_memory_used@@Base+0x750>
  4175f0:	str	x0, [sp, #96]
  4175f4:	mov	x1, x23
  4175f8:	mov	x0, x19
  4175fc:	bl	417538 <_obstack_memory_used@@Base+0x750>
  417600:	str	x0, [sp, #104]
  417604:	ldr	x0, [x20, #8]
  417608:	cmp	x0, #0x0
  41760c:	b.le	4176b0 <_obstack_memory_used@@Base+0x8c8>
  417610:	mov	x24, #0x0                   	// #0
  417614:	ldr	x0, [x20, #16]
  417618:	ldr	x1, [x0, x24, lsl #3]
  41761c:	ldr	x0, [x19, #216]
  417620:	add	x2, x1, x1, lsl #2
  417624:	ldr	x0, [x0, x2, lsl #3]
  417628:	ldr	x2, [x28]
  41762c:	lsl	x0, x0, #4
  417630:	ldr	x27, [x2, x0]
  417634:	ldr	x5, [sp, #96]
  417638:	mov	x4, x22
  41763c:	mov	x3, x25
  417640:	mov	x2, x27
  417644:	mov	x0, x19
  417648:	bl	4174c0 <_obstack_memory_used@@Base+0x6d8>
  41764c:	mov	w21, w0
  417650:	ldr	x0, [x20, #16]
  417654:	ldr	x5, [sp, #104]
  417658:	mov	x4, x23
  41765c:	mov	x3, x26
  417660:	mov	x2, x27
  417664:	ldr	x1, [x0, x24, lsl #3]
  417668:	mov	x0, x19
  41766c:	bl	4174c0 <_obstack_memory_used@@Base+0x6d8>
  417670:	cmp	w21, w0
  417674:	b.eq	417698 <_obstack_memory_used@@Base+0x8b0>  // b.none
  417678:	mov	w0, #0x1                   	// #1
  41767c:	ldp	x19, x20, [sp, #16]
  417680:	ldp	x21, x22, [sp, #32]
  417684:	ldp	x23, x24, [sp, #48]
  417688:	ldp	x25, x26, [sp, #64]
  41768c:	ldp	x27, x28, [sp, #80]
  417690:	ldp	x29, x30, [sp], #112
  417694:	ret
  417698:	add	x24, x24, #0x1
  41769c:	ldr	x0, [x20, #8]
  4176a0:	cmp	x0, x24
  4176a4:	b.gt	417614 <_obstack_memory_used@@Base+0x82c>
  4176a8:	mov	w0, #0x0                   	// #0
  4176ac:	b	41767c <_obstack_memory_used@@Base+0x894>
  4176b0:	mov	w0, #0x0                   	// #0
  4176b4:	b	41767c <_obstack_memory_used@@Base+0x894>
  4176b8:	stp	x29, x30, [sp, #-96]!
  4176bc:	mov	x29, sp
  4176c0:	stp	x19, x20, [sp, #16]
  4176c4:	stp	x21, x22, [sp, #32]
  4176c8:	stp	x23, x24, [sp, #48]
  4176cc:	stp	x25, x26, [sp, #64]
  4176d0:	mov	x20, x0
  4176d4:	mov	x19, x1
  4176d8:	mov	x23, x2
  4176dc:	mov	w22, w3
  4176e0:	mov	x24, x5
  4176e4:	and	w26, w6, #0xff
  4176e8:	ldr	x25, [x1, #72]
  4176ec:	mov	x1, x25
  4176f0:	mov	x0, x19
  4176f4:	bl	416e14 <_obstack_memory_used@@Base+0x2c>
  4176f8:	cmp	w0, #0x1
  4176fc:	b.gt	417740 <_obstack_memory_used@@Base+0x958>
  417700:	add	x3, x25, w22, sxtw
  417704:	str	x3, [x19, #72]
  417708:	ldrb	w1, [x23, #8]
  41770c:	and	w0, w1, #0xfffffffb
  417710:	and	w0, w0, #0xff
  417714:	cmp	w0, #0x1a
  417718:	ccmp	w1, #0x1c, #0x4, ne  // ne = any
  41771c:	b.eq	417784 <_obstack_memory_used@@Base+0x99c>  // b.none
  417720:	cmp	w26, #0x0
  417724:	ccmp	w1, #0x16, #0x0, eq  // eq = none
  417728:	b.eq	417928 <_obstack_memory_used@@Base+0xb40>  // b.none
  41772c:	str	wzr, [x20]
  417730:	ldrb	w0, [x23]
  417734:	strb	w0, [x20, #8]
  417738:	mov	w0, #0x0                   	// #0
  41773c:	b	41776c <_obstack_memory_used@@Base+0x984>
  417740:	mov	w21, w0
  417744:	mov	w0, #0x1                   	// #1
  417748:	str	w0, [x20]
  41774c:	ldr	x1, [x19, #72]
  417750:	mov	x0, x19
  417754:	bl	416e64 <_obstack_memory_used@@Base+0x7c>
  417758:	str	w0, [x20, #8]
  41775c:	ldr	x0, [x19, #72]
  417760:	add	x21, x0, w21, sxtw
  417764:	str	x21, [x19, #72]
  417768:	mov	w0, #0x0                   	// #0
  41776c:	ldp	x19, x20, [sp, #16]
  417770:	ldp	x21, x22, [sp, #32]
  417774:	ldp	x23, x24, [sp, #48]
  417778:	ldp	x25, x26, [sp, #64]
  41777c:	ldp	x29, x30, [sp], #96
  417780:	ret
  417784:	ldr	x1, [x19, #104]
  417788:	mov	w0, #0x7                   	// #7
  41778c:	cmp	x3, x1
  417790:	b.ge	41776c <_obstack_memory_used@@Base+0x984>  // b.tcont
  417794:	ldrb	w24, [x23]
  417798:	mov	x21, #0x0                   	// #0
  41779c:	b	41787c <_obstack_memory_used@@Base+0xa94>
  4177a0:	ldrb	w0, [x19, #139]
  4177a4:	cbnz	w0, 4177c0 <_obstack_memory_used@@Base+0x9d8>
  4177a8:	ldr	x1, [x19, #8]
  4177ac:	ldr	x0, [x19, #72]
  4177b0:	add	x2, x0, #0x1
  4177b4:	str	x2, [x19, #72]
  4177b8:	ldrb	w22, [x1, x0]
  4177bc:	b	4178a0 <_obstack_memory_used@@Base+0xab8>
  4177c0:	ldrb	w0, [x19, #140]
  4177c4:	cbz	w0, 417848 <_obstack_memory_used@@Base+0xa60>
  4177c8:	ldr	x26, [x19, #72]
  4177cc:	ldr	x0, [x19, #48]
  4177d0:	cmp	x26, x0
  4177d4:	b.eq	4177e8 <_obstack_memory_used@@Base+0xa00>  // b.none
  4177d8:	ldr	x0, [x19, #16]
  4177dc:	ldr	w0, [x0, x26, lsl #2]
  4177e0:	cmn	w0, #0x1
  4177e4:	b.eq	41781c <_obstack_memory_used@@Base+0xa34>  // b.none
  4177e8:	ldr	x1, [x19, #24]
  4177ec:	ldr	x0, [x19]
  4177f0:	ldr	x2, [x1, x26, lsl #3]
  4177f4:	ldr	x1, [x19, #40]
  4177f8:	add	x0, x0, x2
  4177fc:	ldrb	w22, [x0, x1]
  417800:	tst	w22, #0xffffff80
  417804:	b.eq	417830 <_obstack_memory_used@@Base+0xa48>  // b.none
  417808:	ldr	x0, [x19, #8]
  41780c:	add	x1, x26, #0x1
  417810:	str	x1, [x19, #72]
  417814:	ldrb	w22, [x0, x26]
  417818:	b	4178a0 <_obstack_memory_used@@Base+0xab8>
  41781c:	ldr	x0, [x19, #8]
  417820:	add	x1, x26, #0x1
  417824:	str	x1, [x19, #72]
  417828:	ldrb	w22, [x0, x26]
  41782c:	b	4178a0 <_obstack_memory_used@@Base+0xab8>
  417830:	mov	x1, x26
  417834:	mov	x0, x19
  417838:	bl	416e14 <_obstack_memory_used@@Base+0x2c>
  41783c:	add	x26, x26, w0, sxtw
  417840:	str	x26, [x19, #72]
  417844:	b	4178a0 <_obstack_memory_used@@Base+0xab8>
  417848:	ldr	x0, [x19]
  41784c:	ldr	x2, [x19, #40]
  417850:	ldr	x1, [x19, #72]
  417854:	add	x3, x1, #0x1
  417858:	str	x3, [x19, #72]
  41785c:	add	x0, x0, x2
  417860:	ldrb	w22, [x0, x1]
  417864:	b	4178a0 <_obstack_memory_used@@Base+0xab8>
  417868:	ldr	x0, [x20, #8]
  41786c:	strb	w22, [x0, x21]
  417870:	add	x21, x21, #0x1
  417874:	cmp	x21, #0x20
  417878:	b.eq	417954 <_obstack_memory_used@@Base+0xb6c>  // b.none
  41787c:	mov	w25, w21
  417880:	ldrb	w0, [x23, #8]
  417884:	cmp	w0, #0x1e
  417888:	b.eq	4177a0 <_obstack_memory_used@@Base+0x9b8>  // b.none
  41788c:	ldr	x1, [x19, #8]
  417890:	ldr	x0, [x19, #72]
  417894:	add	x2, x0, #0x1
  417898:	str	x2, [x19, #72]
  41789c:	ldrb	w22, [x1, x0]
  4178a0:	ldr	x0, [x19, #72]
  4178a4:	ldr	x1, [x19, #104]
  4178a8:	cmp	x1, x0
  4178ac:	b.le	41794c <_obstack_memory_used@@Base+0xb64>
  4178b0:	cmp	w24, w22
  4178b4:	b.ne	417868 <_obstack_memory_used@@Base+0xa80>  // b.any
  4178b8:	ldr	x1, [x19, #8]
  4178bc:	ldrb	w1, [x1, x0]
  4178c0:	cmp	w1, #0x5d
  4178c4:	b.ne	417868 <_obstack_memory_used@@Base+0xa80>  // b.any
  4178c8:	add	x0, x0, #0x1
  4178cc:	str	x0, [x19, #72]
  4178d0:	ldr	x0, [x20, #8]
  4178d4:	strb	wzr, [x0, w25, sxtw]
  4178d8:	ldrb	w1, [x23, #8]
  4178dc:	cmp	w1, #0x1c
  4178e0:	b.eq	417908 <_obstack_memory_used@@Base+0xb20>  // b.none
  4178e4:	cmp	w1, #0x1e
  4178e8:	b.eq	417918 <_obstack_memory_used@@Base+0xb30>  // b.none
  4178ec:	mov	w0, #0x0                   	// #0
  4178f0:	cmp	w1, #0x1a
  4178f4:	b.ne	41776c <_obstack_memory_used@@Base+0x984>  // b.any
  4178f8:	mov	w0, #0x3                   	// #3
  4178fc:	str	w0, [x20]
  417900:	mov	w0, #0x0                   	// #0
  417904:	b	41776c <_obstack_memory_used@@Base+0x984>
  417908:	mov	w0, #0x2                   	// #2
  41790c:	str	w0, [x20]
  417910:	mov	w0, #0x0                   	// #0
  417914:	b	41776c <_obstack_memory_used@@Base+0x984>
  417918:	mov	w0, #0x4                   	// #4
  41791c:	str	w0, [x20]
  417920:	mov	w0, #0x0                   	// #0
  417924:	b	41776c <_obstack_memory_used@@Base+0x984>
  417928:	mov	x2, x24
  41792c:	mov	x1, x19
  417930:	add	x0, sp, #0x50
  417934:	bl	4170f8 <_obstack_memory_used@@Base+0x310>
  417938:	ldrb	w0, [sp, #88]
  41793c:	cmp	w0, #0x15
  417940:	b.eq	41772c <_obstack_memory_used@@Base+0x944>  // b.none
  417944:	mov	w0, #0xb                   	// #11
  417948:	b	41776c <_obstack_memory_used@@Base+0x984>
  41794c:	mov	w0, #0x7                   	// #7
  417950:	b	41776c <_obstack_memory_used@@Base+0x984>
  417954:	mov	w0, #0x7                   	// #7
  417958:	b	41776c <_obstack_memory_used@@Base+0x984>
  41795c:	stp	x29, x30, [sp, #-48]!
  417960:	mov	x29, sp
  417964:	stp	x19, x20, [sp, #16]
  417968:	str	x21, [sp, #32]
  41796c:	mov	x19, x0
  417970:	mov	x21, x1
  417974:	mov	x20, x2
  417978:	b	4179ac <_obstack_memory_used@@Base+0xbc4>
  41797c:	mov	x19, x4
  417980:	mov	x1, x19
  417984:	mov	x0, x20
  417988:	blr	x21
  41798c:	cbnz	w0, 4179c0 <_obstack_memory_used@@Base+0xbd8>
  417990:	ldr	x4, [x19]
  417994:	cbz	x4, 4179c0 <_obstack_memory_used@@Base+0xbd8>
  417998:	ldr	x3, [x4, #16]
  41799c:	cmp	x3, #0x0
  4179a0:	ccmp	x3, x19, #0x4, ne  // ne = any
  4179a4:	b.eq	41797c <_obstack_memory_used@@Base+0xb94>  // b.none
  4179a8:	mov	x19, x3
  4179ac:	ldr	x3, [x19, #8]
  4179b0:	cbnz	x3, 4179a8 <_obstack_memory_used@@Base+0xbc0>
  4179b4:	ldr	x3, [x19, #16]
  4179b8:	cbnz	x3, 4179a8 <_obstack_memory_used@@Base+0xbc0>
  4179bc:	b	417980 <_obstack_memory_used@@Base+0xb98>
  4179c0:	ldp	x19, x20, [sp, #16]
  4179c4:	ldr	x21, [sp, #32]
  4179c8:	ldp	x29, x30, [sp], #48
  4179cc:	ret
  4179d0:	stp	x29, x30, [sp, #-48]!
  4179d4:	mov	x29, sp
  4179d8:	stp	x19, x20, [sp, #16]
  4179dc:	str	x21, [sp, #32]
  4179e0:	mov	x19, x0
  4179e4:	mov	x21, x1
  4179e8:	mov	x20, x2
  4179ec:	b	4179f8 <_obstack_memory_used@@Base+0xc10>
  4179f0:	mov	x3, x4
  4179f4:	mov	x19, x3
  4179f8:	mov	x1, x19
  4179fc:	mov	x0, x20
  417a00:	blr	x21
  417a04:	cbnz	w0, 417a34 <_obstack_memory_used@@Base+0xc4c>
  417a08:	ldr	x3, [x19, #8]
  417a0c:	cbnz	x3, 4179f4 <_obstack_memory_used@@Base+0xc0c>
  417a10:	ldr	x4, [x19, #16]
  417a14:	cmp	x4, #0x0
  417a18:	ccmp	x4, x3, #0x4, ne  // ne = any
  417a1c:	b.ne	4179f0 <_obstack_memory_used@@Base+0xc08>  // b.any
  417a20:	ldr	x4, [x19]
  417a24:	mov	x3, x19
  417a28:	cbz	x4, 417a34 <_obstack_memory_used@@Base+0xc4c>
  417a2c:	mov	x19, x4
  417a30:	b	417a10 <_obstack_memory_used@@Base+0xc28>
  417a34:	ldp	x19, x20, [sp, #16]
  417a38:	ldr	x21, [sp, #32]
  417a3c:	ldp	x29, x30, [sp], #48
  417a40:	ret
  417a44:	stp	x29, x30, [sp, #-32]!
  417a48:	mov	x29, sp
  417a4c:	stp	x19, x20, [sp, #16]
  417a50:	mov	x19, x0
  417a54:	mov	x20, x1
  417a58:	ldr	w0, [x0, #144]
  417a5c:	cmp	w0, #0x1
  417a60:	b.le	417a9c <_obstack_memory_used@@Base+0xcb4>
  417a64:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  417a68:	cmp	x1, x0
  417a6c:	b.hi	417ad0 <_obstack_memory_used@@Base+0xce8>  // b.pmore
  417a70:	lsl	x1, x1, #2
  417a74:	ldr	x0, [x19, #16]
  417a78:	bl	402500 <realloc@plt>
  417a7c:	cbz	x0, 417ad8 <_obstack_memory_used@@Base+0xcf0>
  417a80:	str	x0, [x19, #16]
  417a84:	ldr	x0, [x19, #24]
  417a88:	cbz	x0, 417a9c <_obstack_memory_used@@Base+0xcb4>
  417a8c:	lsl	x1, x20, #3
  417a90:	bl	402500 <realloc@plt>
  417a94:	cbz	x0, 417ae0 <_obstack_memory_used@@Base+0xcf8>
  417a98:	str	x0, [x19, #24]
  417a9c:	ldrb	w0, [x19, #139]
  417aa0:	cbnz	w0, 417ab8 <_obstack_memory_used@@Base+0xcd0>
  417aa4:	str	x20, [x19, #64]
  417aa8:	mov	w0, #0x0                   	// #0
  417aac:	ldp	x19, x20, [sp, #16]
  417ab0:	ldp	x29, x30, [sp], #32
  417ab4:	ret
  417ab8:	mov	x1, x20
  417abc:	ldr	x0, [x19, #8]
  417ac0:	bl	402500 <realloc@plt>
  417ac4:	cbz	x0, 417ae8 <_obstack_memory_used@@Base+0xd00>
  417ac8:	str	x0, [x19, #8]
  417acc:	b	417aa4 <_obstack_memory_used@@Base+0xcbc>
  417ad0:	mov	w0, #0xc                   	// #12
  417ad4:	b	417aac <_obstack_memory_used@@Base+0xcc4>
  417ad8:	mov	w0, #0xc                   	// #12
  417adc:	b	417aac <_obstack_memory_used@@Base+0xcc4>
  417ae0:	mov	w0, #0xc                   	// #12
  417ae4:	b	417aac <_obstack_memory_used@@Base+0xcc4>
  417ae8:	mov	w0, #0xc                   	// #12
  417aec:	b	417aac <_obstack_memory_used@@Base+0xcc4>
  417af0:	stp	x29, x30, [sp, #-32]!
  417af4:	mov	x29, sp
  417af8:	stp	x19, x20, [sp, #16]
  417afc:	mov	x19, x0
  417b00:	mov	x20, x1
  417b04:	ldr	x0, [x0]
  417b08:	ldr	x2, [x19, #8]
  417b0c:	cmp	x0, x2
  417b10:	b.eq	417b38 <_obstack_memory_used@@Base+0xd50>  // b.none
  417b14:	ldr	x1, [x19, #16]
  417b18:	ldr	x0, [x19, #8]
  417b1c:	add	x2, x0, #0x1
  417b20:	str	x2, [x19, #8]
  417b24:	str	x20, [x1, x0, lsl #3]
  417b28:	mov	w0, #0x1                   	// #1
  417b2c:	ldp	x19, x20, [sp, #16]
  417b30:	ldp	x29, x30, [sp], #32
  417b34:	ret
  417b38:	add	x0, x0, #0x1
  417b3c:	lsl	x1, x0, #1
  417b40:	str	x1, [x19]
  417b44:	lsl	x1, x0, #4
  417b48:	ldr	x0, [x19, #16]
  417b4c:	bl	402500 <realloc@plt>
  417b50:	cbz	x0, 417b5c <_obstack_memory_used@@Base+0xd74>
  417b54:	str	x0, [x19, #16]
  417b58:	b	417b14 <_obstack_memory_used@@Base+0xd2c>
  417b5c:	mov	w0, #0x0                   	// #0
  417b60:	b	417b2c <_obstack_memory_used@@Base+0xd44>
  417b64:	stp	x29, x30, [sp, #-48]!
  417b68:	mov	x29, sp
  417b6c:	stp	x19, x20, [sp, #16]
  417b70:	stp	x21, x22, [sp, #32]
  417b74:	mov	x19, x0
  417b78:	mov	x21, x1
  417b7c:	mov	x20, x2
  417b80:	mov	x22, x3
  417b84:	ldr	w0, [x0, #128]
  417b88:	cmp	w0, #0xf
  417b8c:	b.eq	417c00 <_obstack_memory_used@@Base+0xe18>  // b.none
  417b90:	ldr	x4, [x19, #112]
  417b94:	ldr	w5, [x19, #128]
  417b98:	add	w0, w5, #0x1
  417b9c:	str	w0, [x19, #128]
  417ba0:	sbfiz	x5, x5, #6, #32
  417ba4:	add	x0, x5, #0x8
  417ba8:	add	x0, x4, x0
  417bac:	add	x4, x4, x5
  417bb0:	str	xzr, [x4, #8]
  417bb4:	str	x21, [x4, #16]
  417bb8:	str	x20, [x4, #24]
  417bbc:	ldp	x2, x3, [x22]
  417bc0:	stp	x2, x3, [x4, #48]
  417bc4:	ldrb	w1, [x4, #58]
  417bc8:	and	w1, w1, #0xfffffff3
  417bcc:	strb	w1, [x4, #58]
  417bd0:	str	xzr, [x4, #32]
  417bd4:	str	xzr, [x4, #40]
  417bd8:	mov	x1, #0xffffffffffffffff    	// #-1
  417bdc:	str	x1, [x4, #64]
  417be0:	cbz	x21, 417be8 <_obstack_memory_used@@Base+0xe00>
  417be4:	str	x0, [x21]
  417be8:	cbz	x20, 417bf0 <_obstack_memory_used@@Base+0xe08>
  417bec:	str	x0, [x20]
  417bf0:	ldp	x19, x20, [sp, #16]
  417bf4:	ldp	x21, x22, [sp, #32]
  417bf8:	ldp	x29, x30, [sp], #48
  417bfc:	ret
  417c00:	mov	x0, #0x3c8                 	// #968
  417c04:	bl	4023f0 <malloc@plt>
  417c08:	cbz	x0, 417bf0 <_obstack_memory_used@@Base+0xe08>
  417c0c:	ldr	x1, [x19, #112]
  417c10:	str	x1, [x0]
  417c14:	str	x0, [x19, #112]
  417c18:	str	wzr, [x19, #128]
  417c1c:	b	417b90 <_obstack_memory_used@@Base+0xda8>
  417c20:	stp	x29, x30, [sp, #-64]!
  417c24:	mov	x29, sp
  417c28:	stp	x19, x20, [sp, #16]
  417c2c:	stp	x21, x22, [sp, #32]
  417c30:	mov	x19, x0
  417c34:	mov	x22, x1
  417c38:	ldr	x20, [x0]
  417c3c:	add	x21, sp, #0x38
  417c40:	add	x3, x19, #0x28
  417c44:	mov	x2, #0x0                   	// #0
  417c48:	mov	x1, #0x0                   	// #0
  417c4c:	mov	x0, x22
  417c50:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  417c54:	str	x0, [x21]
  417c58:	cbz	x0, 417c8c <_obstack_memory_used@@Base+0xea4>
  417c5c:	str	x20, [x0]
  417c60:	ldr	x1, [x21]
  417c64:	ldrb	w0, [x1, #50]
  417c68:	orr	w0, w0, #0x4
  417c6c:	strb	w0, [x1, #50]
  417c70:	ldr	x20, [x21]
  417c74:	ldr	x0, [x19, #8]
  417c78:	cbz	x0, 417c9c <_obstack_memory_used@@Base+0xeb4>
  417c7c:	add	x21, x20, #0x8
  417c80:	mov	x19, x0
  417c84:	b	417c40 <_obstack_memory_used@@Base+0xe58>
  417c88:	ldr	x0, [sp, #56]
  417c8c:	ldp	x19, x20, [sp, #16]
  417c90:	ldp	x21, x22, [sp, #32]
  417c94:	ldp	x29, x30, [sp], #64
  417c98:	ret
  417c9c:	ldr	x2, [x19, #16]
  417ca0:	cmp	x2, #0x0
  417ca4:	ccmp	x2, x0, #0x4, ne  // ne = any
  417ca8:	b.ne	417cc4 <_obstack_memory_used@@Base+0xedc>  // b.any
  417cac:	ldr	x2, [x19]
  417cb0:	ldr	x20, [x20]
  417cb4:	mov	x0, x19
  417cb8:	cbz	x2, 417c88 <_obstack_memory_used@@Base+0xea0>
  417cbc:	mov	x19, x2
  417cc0:	b	417c9c <_obstack_memory_used@@Base+0xeb4>
  417cc4:	add	x21, x20, #0x10
  417cc8:	mov	x19, x2
  417ccc:	b	417c40 <_obstack_memory_used@@Base+0xe58>
  417cd0:	stp	x29, x30, [sp, #-32]!
  417cd4:	mov	x29, sp
  417cd8:	stp	xzr, xzr, [sp, #16]
  417cdc:	strb	w3, [sp, #24]
  417ce0:	add	x3, sp, #0x10
  417ce4:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  417ce8:	ldp	x29, x30, [sp], #32
  417cec:	ret
  417cf0:	stp	x29, x30, [sp, #-80]!
  417cf4:	mov	x29, sp
  417cf8:	stp	x19, x20, [sp, #16]
  417cfc:	stp	x21, x22, [sp, #32]
  417d00:	stp	x23, x24, [sp, #48]
  417d04:	str	x25, [sp, #64]
  417d08:	mov	x24, x0
  417d0c:	mov	x20, x2
  417d10:	ldr	x25, [x1]
  417d14:	ldr	x19, [x2, #8]
  417d18:	ldrb	w0, [x1, #56]
  417d1c:	tst	x0, #0x10
  417d20:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  417d24:	b.ne	417d64 <_obstack_memory_used@@Base+0xf7c>  // b.any
  417d28:	mov	w3, #0x8                   	// #8
  417d2c:	mov	x2, #0x0                   	// #0
  417d30:	mov	x1, #0x0                   	// #0
  417d34:	mov	x0, x25
  417d38:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  417d3c:	mov	x21, x0
  417d40:	mov	w3, #0x9                   	// #9
  417d44:	mov	x2, #0x0                   	// #0
  417d48:	mov	x1, #0x0                   	// #0
  417d4c:	mov	x0, x25
  417d50:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  417d54:	mov	x22, x0
  417d58:	mov	x23, x0
  417d5c:	cbz	x19, 417dc4 <_obstack_memory_used@@Base+0xfdc>
  417d60:	b	417dac <_obstack_memory_used@@Base+0xfc4>
  417d64:	ldr	x0, [x2, #40]
  417d68:	cmp	x0, #0x3f
  417d6c:	b.gt	417e20 <_obstack_memory_used@@Base+0x1038>
  417d70:	ldr	x1, [x25, #160]
  417d74:	lsr	x0, x1, x0
  417d78:	tbz	w0, #0, 417e20 <_obstack_memory_used@@Base+0x1038>
  417d7c:	mov	w3, #0x8                   	// #8
  417d80:	mov	x2, #0x0                   	// #0
  417d84:	mov	x1, #0x0                   	// #0
  417d88:	mov	x0, x25
  417d8c:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  417d90:	mov	x21, x0
  417d94:	mov	w3, #0x9                   	// #9
  417d98:	mov	x2, #0x0                   	// #0
  417d9c:	mov	x1, #0x0                   	// #0
  417da0:	mov	x0, x25
  417da4:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  417da8:	mov	x23, x0
  417dac:	mov	w3, #0x10                  	// #16
  417db0:	mov	x2, x23
  417db4:	mov	x1, x19
  417db8:	mov	x0, x25
  417dbc:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  417dc0:	mov	x22, x0
  417dc4:	mov	w3, #0x10                  	// #16
  417dc8:	mov	x2, x22
  417dcc:	mov	x1, x21
  417dd0:	mov	x0, x25
  417dd4:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  417dd8:	mov	x19, x0
  417ddc:	cmp	x0, #0x0
  417de0:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  417de4:	b.eq	417e3c <_obstack_memory_used@@Base+0x1054>  // b.none
  417de8:	cmp	x21, #0x0
  417dec:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  417df0:	b.eq	417e3c <_obstack_memory_used@@Base+0x1054>  // b.none
  417df4:	ldr	x0, [x20, #40]
  417df8:	str	x0, [x23, #40]
  417dfc:	str	x0, [x21, #40]
  417e00:	ldrb	w0, [x20, #50]
  417e04:	ubfx	x0, x0, #3, #1
  417e08:	ldrb	w1, [x23, #50]
  417e0c:	bfi	w1, w0, #3, #1
  417e10:	strb	w1, [x23, #50]
  417e14:	ldrb	w1, [x21, #50]
  417e18:	bfi	w1, w0, #3, #1
  417e1c:	strb	w1, [x21, #50]
  417e20:	mov	x0, x19
  417e24:	ldp	x19, x20, [sp, #16]
  417e28:	ldp	x21, x22, [sp, #32]
  417e2c:	ldp	x23, x24, [sp, #48]
  417e30:	ldr	x25, [sp, #64]
  417e34:	ldp	x29, x30, [sp], #80
  417e38:	ret
  417e3c:	mov	w0, #0xc                   	// #12
  417e40:	str	w0, [x24]
  417e44:	mov	x19, #0x0                   	// #0
  417e48:	b	417e20 <_obstack_memory_used@@Base+0x1038>
  417e4c:	stp	x29, x30, [sp, #-48]!
  417e50:	mov	x29, sp
  417e54:	stp	x19, x20, [sp, #16]
  417e58:	mov	x20, x0
  417e5c:	mov	x19, x1
  417e60:	str	wzr, [sp, #44]
  417e64:	ldr	x2, [x1, #8]
  417e68:	cbz	x2, 417e78 <_obstack_memory_used@@Base+0x1090>
  417e6c:	ldrb	w0, [x2, #48]
  417e70:	cmp	w0, #0x11
  417e74:	b.eq	417e9c <_obstack_memory_used@@Base+0x10b4>  // b.none
  417e78:	ldr	x2, [x19, #16]
  417e7c:	cbz	x2, 417e8c <_obstack_memory_used@@Base+0x10a4>
  417e80:	ldrb	w0, [x2, #48]
  417e84:	cmp	w0, #0x11
  417e88:	b.eq	417eb8 <_obstack_memory_used@@Base+0x10d0>  // b.none
  417e8c:	ldr	w0, [sp, #44]
  417e90:	ldp	x19, x20, [sp, #16]
  417e94:	ldp	x29, x30, [sp], #48
  417e98:	ret
  417e9c:	mov	x1, x20
  417ea0:	add	x0, sp, #0x2c
  417ea4:	bl	417cf0 <_obstack_memory_used@@Base+0xf08>
  417ea8:	str	x0, [x19, #8]
  417eac:	cbz	x0, 417e78 <_obstack_memory_used@@Base+0x1090>
  417eb0:	str	x19, [x0]
  417eb4:	b	417e78 <_obstack_memory_used@@Base+0x1090>
  417eb8:	mov	x1, x20
  417ebc:	add	x0, sp, #0x2c
  417ec0:	bl	417cf0 <_obstack_memory_used@@Base+0xf08>
  417ec4:	str	x0, [x19, #16]
  417ec8:	cbz	x0, 417e8c <_obstack_memory_used@@Base+0x10a4>
  417ecc:	str	x19, [x0]
  417ed0:	b	417e8c <_obstack_memory_used@@Base+0x10a4>
  417ed4:	stp	x29, x30, [sp, #-32]!
  417ed8:	mov	x29, sp
  417edc:	stp	x19, x20, [sp, #16]
  417ee0:	mov	x19, x0
  417ee4:	mov	x20, x1
  417ee8:	mov	x0, #0x1                   	// #1
  417eec:	str	x0, [x19]
  417ef0:	str	x0, [x19, #8]
  417ef4:	mov	x0, #0x8                   	// #8
  417ef8:	bl	4023f0 <malloc@plt>
  417efc:	str	x0, [x19, #16]
  417f00:	cbz	x0, 417f18 <_obstack_memory_used@@Base+0x1130>
  417f04:	str	x20, [x0]
  417f08:	mov	w0, #0x0                   	// #0
  417f0c:	ldp	x19, x20, [sp, #16]
  417f10:	ldp	x29, x30, [sp], #32
  417f14:	ret
  417f18:	str	xzr, [x19, #8]
  417f1c:	str	xzr, [x19]
  417f20:	mov	w0, #0xc                   	// #12
  417f24:	b	417f0c <_obstack_memory_used@@Base+0x1124>
  417f28:	stp	x29, x30, [sp, #-32]!
  417f2c:	mov	x29, sp
  417f30:	stp	x19, x20, [sp, #16]
  417f34:	mov	x19, x0
  417f38:	mov	x20, x1
  417f3c:	ldr	x1, [x0]
  417f40:	cbz	x1, 417f70 <_obstack_memory_used@@Base+0x1188>
  417f44:	ldr	x0, [x0, #8]
  417f48:	cbnz	x0, 417f84 <_obstack_memory_used@@Base+0x119c>
  417f4c:	ldr	x0, [x19, #16]
  417f50:	str	x20, [x0]
  417f54:	ldr	x0, [x19, #8]
  417f58:	add	x0, x0, #0x1
  417f5c:	str	x0, [x19, #8]
  417f60:	mov	w0, #0x1                   	// #1
  417f64:	ldp	x19, x20, [sp, #16]
  417f68:	ldp	x29, x30, [sp], #32
  417f6c:	ret
  417f70:	mov	x1, x20
  417f74:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  417f78:	cmp	w0, #0x0
  417f7c:	cset	w0, eq  // eq = none
  417f80:	b	417f64 <_obstack_memory_used@@Base+0x117c>
  417f84:	cmp	x1, x0
  417f88:	b.eq	417fe4 <_obstack_memory_used@@Base+0x11fc>  // b.none
  417f8c:	ldr	x3, [x19, #16]
  417f90:	ldr	x0, [x3]
  417f94:	cmp	x0, x20
  417f98:	b.le	418004 <_obstack_memory_used@@Base+0x121c>
  417f9c:	ldr	x0, [x19, #8]
  417fa0:	cmp	x0, #0x0
  417fa4:	b.le	417fc8 <_obstack_memory_used@@Base+0x11e0>
  417fa8:	lsl	x1, x0, #3
  417fac:	sub	x1, x1, #0x8
  417fb0:	ldr	x2, [x19, #16]
  417fb4:	ldr	x3, [x2, x1]
  417fb8:	str	x3, [x2, x0, lsl #3]
  417fbc:	sub	x1, x1, #0x8
  417fc0:	subs	x0, x0, #0x1
  417fc4:	b.ne	417fb0 <_obstack_memory_used@@Base+0x11c8>  // b.any
  417fc8:	ldr	x1, [x19, #16]
  417fcc:	str	x20, [x1, x0, lsl #3]
  417fd0:	ldr	x0, [x19, #8]
  417fd4:	add	x0, x0, #0x1
  417fd8:	str	x0, [x19, #8]
  417fdc:	mov	w0, #0x1                   	// #1
  417fe0:	b	417f64 <_obstack_memory_used@@Base+0x117c>
  417fe4:	lsl	x0, x1, #1
  417fe8:	str	x0, [x19]
  417fec:	lsl	x1, x1, #4
  417ff0:	ldr	x0, [x19, #16]
  417ff4:	bl	402500 <realloc@plt>
  417ff8:	cbz	x0, 418040 <_obstack_memory_used@@Base+0x1258>
  417ffc:	str	x0, [x19, #16]
  418000:	b	417f8c <_obstack_memory_used@@Base+0x11a4>
  418004:	ldr	x0, [x19, #8]
  418008:	lsl	x2, x0, #3
  41800c:	add	x1, x3, x2
  418010:	ldur	x1, [x1, #-8]
  418014:	cmp	x20, x1
  418018:	b.ge	417fc8 <_obstack_memory_used@@Base+0x11e0>  // b.tcont
  41801c:	str	x1, [x3, x2]
  418020:	sub	x0, x0, #0x1
  418024:	ldr	x3, [x19, #16]
  418028:	add	x1, x3, x2
  41802c:	sub	x2, x2, #0x8
  418030:	ldur	x1, [x1, #-16]
  418034:	cmp	x1, x20
  418038:	b.gt	41801c <_obstack_memory_used@@Base+0x1234>
  41803c:	b	417fc8 <_obstack_memory_used@@Base+0x11e0>
  418040:	mov	w0, #0x0                   	// #0
  418044:	b	417f64 <_obstack_memory_used@@Base+0x117c>
  418048:	stp	x29, x30, [sp, #-64]!
  41804c:	mov	x29, sp
  418050:	stp	x19, x20, [sp, #16]
  418054:	stp	x21, x22, [sp, #32]
  418058:	stp	x23, x24, [sp, #48]
  41805c:	mov	x21, x0
  418060:	mov	x22, x1
  418064:	mov	x20, x2
  418068:	mov	x24, x3
  41806c:	mov	w23, w4
  418070:	b	4180b8 <_obstack_memory_used@@Base+0x12d0>
  418074:	mov	x1, x20
  418078:	mov	x0, x22
  41807c:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  418080:	and	w0, w0, #0xff
  418084:	cbz	w0, 418144 <_obstack_memory_used@@Base+0x135c>
  418088:	add	x19, x19, x19, lsl #1
  41808c:	lsl	x19, x19, #3
  418090:	ldr	x0, [x21, #40]
  418094:	add	x0, x0, x19
  418098:	ldr	x1, [x0, #8]
  41809c:	cbz	x1, 41815c <_obstack_memory_used@@Base+0x1374>
  4180a0:	cmp	x1, #0x2
  4180a4:	b.eq	418118 <_obstack_memory_used@@Base+0x1330>  // b.none
  4180a8:	ldr	x0, [x21, #40]
  4180ac:	add	x19, x0, x19
  4180b0:	ldr	x0, [x19, #16]
  4180b4:	ldr	x20, [x0]
  4180b8:	mov	x1, x20
  4180bc:	mov	x0, x22
  4180c0:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  4180c4:	cbnz	x0, 41813c <_obstack_memory_used@@Base+0x1354>
  4180c8:	mov	x19, x20
  4180cc:	lsl	x0, x20, #4
  4180d0:	ldr	x1, [x21]
  4180d4:	add	x2, x1, x0
  4180d8:	ldrb	w2, [x2, #8]
  4180dc:	cmp	w2, w23
  4180e0:	b.ne	418074 <_obstack_memory_used@@Base+0x128c>  // b.any
  4180e4:	ldr	x0, [x1, x0]
  4180e8:	cmp	x0, x24
  4180ec:	b.ne	418074 <_obstack_memory_used@@Base+0x128c>  // b.any
  4180f0:	mov	w0, #0x0                   	// #0
  4180f4:	cmp	w23, #0x9
  4180f8:	b.ne	418148 <_obstack_memory_used@@Base+0x1360>  // b.any
  4180fc:	mov	x1, x20
  418100:	mov	x0, x22
  418104:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  418108:	ands	w0, w0, #0xff
  41810c:	mov	w0, #0xc                   	// #12
  418110:	csel	w0, w0, wzr, eq  // eq = none
  418114:	b	418148 <_obstack_memory_used@@Base+0x1360>
  418118:	ldr	x0, [x0, #16]
  41811c:	mov	w4, w23
  418120:	mov	x3, x24
  418124:	ldr	x2, [x0, #8]
  418128:	mov	x1, x22
  41812c:	mov	x0, x21
  418130:	bl	418048 <_obstack_memory_used@@Base+0x1260>
  418134:	cbz	w0, 4180a8 <_obstack_memory_used@@Base+0x12c0>
  418138:	b	418148 <_obstack_memory_used@@Base+0x1360>
  41813c:	mov	w0, #0x0                   	// #0
  418140:	b	418148 <_obstack_memory_used@@Base+0x1360>
  418144:	mov	w0, #0xc                   	// #12
  418148:	ldp	x19, x20, [sp, #16]
  41814c:	ldp	x21, x22, [sp, #32]
  418150:	ldp	x23, x24, [sp, #48]
  418154:	ldp	x29, x30, [sp], #64
  418158:	ret
  41815c:	mov	w0, #0x0                   	// #0
  418160:	b	418148 <_obstack_memory_used@@Base+0x1360>
  418164:	stp	x29, x30, [sp, #-32]!
  418168:	mov	x29, sp
  41816c:	str	x19, [sp, #16]
  418170:	mov	x19, x0
  418174:	str	x1, [x0]
  418178:	str	xzr, [x0, #8]
  41817c:	lsl	x0, x1, #3
  418180:	bl	4023f0 <malloc@plt>
  418184:	str	x0, [x19, #16]
  418188:	cmp	x0, #0x0
  41818c:	mov	w0, #0xc                   	// #12
  418190:	csel	w0, w0, wzr, eq  // eq = none
  418194:	ldr	x19, [sp, #16]
  418198:	ldp	x29, x30, [sp], #32
  41819c:	ret
  4181a0:	stp	x29, x30, [sp, #-64]!
  4181a4:	mov	x29, sp
  4181a8:	stp	x19, x20, [sp, #16]
  4181ac:	stp	x21, x22, [sp, #32]
  4181b0:	stp	x23, x24, [sp, #48]
  4181b4:	mov	x21, x0
  4181b8:	mov	x20, x1
  4181bc:	mov	x22, x2
  4181c0:	mov	x23, x1
  4181c4:	str	x2, [x23], #32
  4181c8:	ldr	x1, [x1, #16]
  4181cc:	mov	x0, x23
  4181d0:	bl	418164 <_obstack_memory_used@@Base+0x137c>
  4181d4:	cbnz	w0, 4182a8 <_obstack_memory_used@@Base+0x14c0>
  4181d8:	mov	w24, w0
  4181dc:	ldr	x0, [x20, #16]
  4181e0:	cmp	x0, #0x0
  4181e4:	b.le	418230 <_obstack_memory_used@@Base+0x1448>
  4181e8:	mov	x19, #0x0                   	// #0
  4181ec:	b	418200 <_obstack_memory_used@@Base+0x1418>
  4181f0:	add	x19, x19, #0x1
  4181f4:	ldr	x0, [x20, #16]
  4181f8:	cmp	x0, x19
  4181fc:	b.le	418230 <_obstack_memory_used@@Base+0x1448>
  418200:	ldr	x0, [x20, #24]
  418204:	ldr	x1, [x0, x19, lsl #3]
  418208:	ldr	x3, [x21]
  41820c:	add	x3, x3, x1, lsl #4
  418210:	ldrb	w3, [x3, #8]
  418214:	tbnz	w3, #3, 4181f0 <_obstack_memory_used@@Base+0x1408>
  418218:	mov	x0, x23
  41821c:	bl	417af0 <_obstack_memory_used@@Base+0xd08>
  418220:	and	w0, w0, #0xff
  418224:	cbnz	w0, 4181f0 <_obstack_memory_used@@Base+0x1408>
  418228:	mov	w24, #0xc                   	// #12
  41822c:	b	41826c <_obstack_memory_used@@Base+0x1484>
  418230:	ldr	x19, [x21, #136]
  418234:	and	x22, x22, x19
  418238:	add	x22, x22, x22, lsl #1
  41823c:	lsl	x19, x22, #3
  418240:	ldr	x21, [x21, #64]
  418244:	add	x22, x21, x19
  418248:	ldr	x0, [x21, x19]
  41824c:	ldr	x1, [x22, #8]
  418250:	cmp	x1, x0
  418254:	b.le	418284 <_obstack_memory_used@@Base+0x149c>
  418258:	ldr	x1, [x22, #16]
  41825c:	ldr	x0, [x21, x19]
  418260:	add	x2, x0, #0x1
  418264:	str	x2, [x21, x19]
  418268:	str	x20, [x1, x0, lsl #3]
  41826c:	mov	w0, w24
  418270:	ldp	x19, x20, [sp, #16]
  418274:	ldp	x21, x22, [sp, #32]
  418278:	ldp	x23, x24, [sp, #48]
  41827c:	ldp	x29, x30, [sp], #64
  418280:	ret
  418284:	add	x0, x0, #0x1
  418288:	lsl	x23, x0, #1
  41828c:	lsl	x1, x0, #4
  418290:	ldr	x0, [x22, #16]
  418294:	bl	402500 <realloc@plt>
  418298:	cbz	x0, 4182b0 <_obstack_memory_used@@Base+0x14c8>
  41829c:	str	x0, [x22, #16]
  4182a0:	str	x23, [x22, #8]
  4182a4:	b	418258 <_obstack_memory_used@@Base+0x1470>
  4182a8:	mov	w24, #0xc                   	// #12
  4182ac:	b	41826c <_obstack_memory_used@@Base+0x1484>
  4182b0:	mov	w24, #0xc                   	// #12
  4182b4:	b	41826c <_obstack_memory_used@@Base+0x1484>
  4182b8:	stp	x29, x30, [sp, #-48]!
  4182bc:	mov	x29, sp
  4182c0:	stp	x19, x20, [sp, #16]
  4182c4:	str	x21, [sp, #32]
  4182c8:	mov	x20, x0
  4182cc:	ldr	x0, [x0, #88]
  4182d0:	ldr	x21, [x20, #64]
  4182d4:	cmp	x21, x0
  4182d8:	csel	x21, x21, x0, le
  4182dc:	ldr	x19, [x20, #48]
  4182e0:	cmp	x21, x19
  4182e4:	b.le	418348 <_obstack_memory_used@@Base+0x1560>
  4182e8:	bl	402510 <__ctype_toupper_loc@plt>
  4182ec:	ldr	x1, [x20]
  4182f0:	ldr	x2, [x20, #40]
  4182f4:	add	x1, x1, x19
  4182f8:	ldrb	w1, [x1, x2]
  4182fc:	ldr	x2, [x20, #120]
  418300:	cbnz	x2, 41833c <_obstack_memory_used@@Base+0x1554>
  418304:	ldr	x2, [x20, #8]
  418308:	and	x1, x1, #0xff
  41830c:	ldr	x3, [x0]
  418310:	ldr	w1, [x3, x1, lsl #2]
  418314:	strb	w1, [x2, x19]
  418318:	add	x19, x19, #0x1
  41831c:	cmp	x21, x19
  418320:	b.ne	4182ec <_obstack_memory_used@@Base+0x1504>  // b.any
  418324:	str	x21, [x20, #48]
  418328:	str	x21, [x20, #56]
  41832c:	ldp	x19, x20, [sp, #16]
  418330:	ldr	x21, [sp, #32]
  418334:	ldp	x29, x30, [sp], #48
  418338:	ret
  41833c:	and	x1, x1, #0xff
  418340:	ldrb	w1, [x2, x1]
  418344:	b	418304 <_obstack_memory_used@@Base+0x151c>
  418348:	mov	x21, x19
  41834c:	b	418324 <_obstack_memory_used@@Base+0x153c>
  418350:	stp	x29, x30, [sp, #-160]!
  418354:	mov	x29, sp
  418358:	stp	x19, x20, [sp, #16]
  41835c:	stp	x21, x22, [sp, #32]
  418360:	stp	x23, x24, [sp, #48]
  418364:	mov	x19, x0
  418368:	ldr	x0, [x0, #88]
  41836c:	ldr	x21, [x19, #64]
  418370:	cmp	x21, x0
  418374:	csel	x21, x21, x0, le
  418378:	ldr	x24, [x19, #48]
  41837c:	cmp	x21, x24
  418380:	b.le	4184e8 <_obstack_memory_used@@Base+0x1700>
  418384:	str	x25, [sp, #64]
  418388:	mov	x23, #0x1                   	// #1
  41838c:	add	x22, x19, #0x20
  418390:	mov	w20, #0xffffffff            	// #-1
  418394:	b	418490 <_obstack_memory_used@@Base+0x16a8>
  418398:	ldr	w0, [x19, #144]
  41839c:	cmp	w0, #0x0
  4183a0:	b.le	418418 <_obstack_memory_used@@Base+0x1630>
  4183a4:	cmp	x2, #0x0
  4183a8:	b.le	418420 <_obstack_memory_used@@Base+0x1638>
  4183ac:	mov	x4, x2
  4183b0:	mov	x1, x23
  4183b4:	b	4183bc <_obstack_memory_used@@Base+0x15d4>
  4183b8:	mov	x1, x0
  4183bc:	ldr	x0, [x19]
  4183c0:	ldr	x3, [x19, #40]
  4183c4:	add	x0, x0, x24
  4183c8:	add	x0, x0, x1
  4183cc:	add	x0, x0, x3
  4183d0:	ldurb	w0, [x0, #-1]
  4183d4:	ldr	x3, [x19, #120]
  4183d8:	ldrb	w3, [x3, x0]
  4183dc:	ldr	x0, [x19, #8]
  4183e0:	add	x0, x0, x24
  4183e4:	add	x0, x0, x1
  4183e8:	sturb	w3, [x0, #-1]
  4183ec:	add	x0, sp, #0x60
  4183f0:	add	x0, x1, x0
  4183f4:	sturb	w3, [x0, #-1]
  4183f8:	ldr	w0, [x19, #144]
  4183fc:	cmp	w0, w1
  418400:	b.le	418428 <_obstack_memory_used@@Base+0x1640>
  418404:	add	x0, x1, #0x1
  418408:	cmp	x1, x4
  41840c:	b.ne	4183b8 <_obstack_memory_used@@Base+0x15d0>  // b.any
  418410:	add	x1, sp, #0x60
  418414:	b	4184b0 <_obstack_memory_used@@Base+0x16c8>
  418418:	add	x1, sp, #0x60
  41841c:	b	4184b0 <_obstack_memory_used@@Base+0x16c8>
  418420:	add	x1, sp, #0x60
  418424:	b	4184b0 <_obstack_memory_used@@Base+0x16c8>
  418428:	add	x1, sp, #0x60
  41842c:	b	4184b0 <_obstack_memory_used@@Base+0x16c8>
  418430:	ldr	x0, [x19]
  418434:	ldr	x1, [x19, #40]
  418438:	add	x0, x0, x24
  41843c:	ldrb	w0, [x0, x1]
  418440:	str	w0, [sp, #92]
  418444:	ldr	x1, [x19, #120]
  418448:	cbnz	x1, 418504 <_obstack_memory_used@@Base+0x171c>
  41844c:	str	x25, [x19, #32]
  418450:	mov	x0, x23
  418454:	add	x1, x24, #0x1
  418458:	ldr	x2, [x19, #16]
  41845c:	ldr	w3, [sp, #92]
  418460:	str	w3, [x2, x24, lsl #2]
  418464:	add	x0, x24, x0
  418468:	cmp	x1, x0
  41846c:	b.ge	418514 <_obstack_memory_used@@Base+0x172c>  // b.tcont
  418470:	ldr	x2, [x19, #16]
  418474:	str	w20, [x2, x1, lsl #2]
  418478:	add	x1, x1, #0x1
  41847c:	cmp	x0, x1
  418480:	b.ne	418470 <_obstack_memory_used@@Base+0x1688>  // b.any
  418484:	mov	x24, x0
  418488:	cmp	x24, x21
  41848c:	b.ge	41851c <_obstack_memory_used@@Base+0x1734>  // b.tcont
  418490:	sub	x2, x21, x24
  418494:	ldr	x25, [x19, #32]
  418498:	ldr	x0, [x19, #120]
  41849c:	cbnz	x0, 418398 <_obstack_memory_used@@Base+0x15b0>
  4184a0:	ldr	x1, [x19, #40]
  4184a4:	add	x0, x24, x1
  4184a8:	ldr	x1, [x19]
  4184ac:	add	x1, x1, x0
  4184b0:	mov	x3, x22
  4184b4:	add	x0, sp, #0x5c
  4184b8:	bl	4169f8 <wcrtomb@plt+0x14128>
  4184bc:	sub	x1, x0, #0x1
  4184c0:	cmn	x1, #0x3
  4184c4:	b.hi	418430 <_obstack_memory_used@@Base+0x1648>  // b.pmore
  4184c8:	cmn	x0, #0x2
  4184cc:	b.ne	418454 <_obstack_memory_used@@Base+0x166c>  // b.any
  4184d0:	ldr	x1, [x19, #64]
  4184d4:	ldr	x0, [x19, #88]
  4184d8:	cmp	x1, x0
  4184dc:	b.ge	418430 <_obstack_memory_used@@Base+0x1648>  // b.tcont
  4184e0:	str	x25, [x19, #32]
  4184e4:	ldr	x25, [sp, #64]
  4184e8:	str	x24, [x19, #48]
  4184ec:	str	x24, [x19, #56]
  4184f0:	ldp	x19, x20, [sp, #16]
  4184f4:	ldp	x21, x22, [sp, #32]
  4184f8:	ldp	x23, x24, [sp, #48]
  4184fc:	ldp	x29, x30, [sp], #160
  418500:	ret
  418504:	and	x0, x0, #0xff
  418508:	ldrb	w0, [x1, x0]
  41850c:	str	w0, [sp, #92]
  418510:	b	41844c <_obstack_memory_used@@Base+0x1664>
  418514:	mov	x24, x1
  418518:	b	418488 <_obstack_memory_used@@Base+0x16a0>
  41851c:	ldr	x25, [sp, #64]
  418520:	b	4184e8 <_obstack_memory_used@@Base+0x1700>
  418524:	stp	x29, x30, [sp, #-176]!
  418528:	mov	x29, sp
  41852c:	stp	x19, x20, [sp, #16]
  418530:	stp	x21, x22, [sp, #32]
  418534:	mov	x20, x0
  418538:	ldr	x19, [x0, #48]
  41853c:	ldr	x0, [x0, #88]
  418540:	ldr	x22, [x20, #64]
  418544:	cmp	x22, x0
  418548:	csel	x22, x22, x0, le
  41854c:	ldrb	w0, [x20, #138]
  418550:	cbnz	w0, 41855c <_obstack_memory_used@@Base+0x1774>
  418554:	ldr	x0, [x20, #120]
  418558:	cbz	x0, 418584 <_obstack_memory_used@@Base+0x179c>
  41855c:	ldr	x21, [x20, #56]
  418560:	cmp	x22, x19
  418564:	b.gt	41878c <_obstack_memory_used@@Base+0x19a4>
  418568:	str	x19, [x20, #48]
  41856c:	str	x21, [x20, #56]
  418570:	mov	w0, #0x0                   	// #0
  418574:	ldp	x19, x20, [sp, #16]
  418578:	ldp	x21, x22, [sp, #32]
  41857c:	ldp	x29, x30, [sp], #176
  418580:	ret
  418584:	ldrb	w0, [x20, #140]
  418588:	cbnz	w0, 41855c <_obstack_memory_used@@Base+0x1774>
  41858c:	cmp	x19, x22
  418590:	b.ge	41877c <_obstack_memory_used@@Base+0x1994>  // b.tcont
  418594:	stp	x23, x24, [sp, #48]
  418598:	stp	x25, x26, [sp, #64]
  41859c:	str	x27, [sp, #80]
  4185a0:	add	x24, x20, #0x20
  4185a4:	mov	w23, #0xffffffff            	// #-1
  4185a8:	b	41862c <_obstack_memory_used@@Base+0x1844>
  4185ac:	bl	402510 <__ctype_toupper_loc@plt>
  4185b0:	ldr	x1, [x20, #8]
  4185b4:	and	x21, x21, #0xff
  4185b8:	ldr	x0, [x0]
  4185bc:	ldr	w0, [x0, x21, lsl #2]
  4185c0:	strb	w0, [x1, x19]
  4185c4:	ldr	x0, [x20, #16]
  4185c8:	ldr	x1, [x20, #8]
  4185cc:	ldrb	w1, [x1, x19]
  4185d0:	str	w1, [x0, x19, lsl #2]
  4185d4:	add	x19, x19, #0x1
  4185d8:	b	418624 <_obstack_memory_used@@Base+0x183c>
  4185dc:	ldr	x0, [x20, #8]
  4185e0:	mov	x2, x21
  4185e4:	add	x1, sp, #0x68
  4185e8:	add	x0, x0, x19
  4185ec:	bl	402260 <memcpy@plt>
  4185f0:	add	x19, x19, #0x1
  4185f4:	ldr	x0, [x20, #16]
  4185f8:	str	w25, [x0, x26, lsl #2]
  4185fc:	add	x2, x26, x21
  418600:	cmp	x19, x2
  418604:	b.ge	418624 <_obstack_memory_used@@Base+0x183c>  // b.tcont
  418608:	mov	x1, x19
  41860c:	ldr	x0, [x20, #16]
  418610:	str	w23, [x0, x1, lsl #2]
  418614:	add	x1, x1, #0x1
  418618:	cmp	x2, x1
  41861c:	b.ne	41860c <_obstack_memory_used@@Base+0x1824>  // b.any
  418620:	mov	x19, x2
  418624:	cmp	x19, x22
  418628:	b.ge	418770 <_obstack_memory_used@@Base+0x1988>  // b.tcont
  41862c:	ldr	x25, [x20]
  418630:	ldr	x27, [x20, #40]
  418634:	add	x0, x25, x27
  418638:	ldrb	w21, [x0, x19]
  41863c:	tst	w21, #0xffffff80
  418640:	b.ne	418650 <_obstack_memory_used@@Base+0x1868>  // b.any
  418644:	mov	x0, x24
  418648:	bl	4025c0 <mbsinit@plt>
  41864c:	cbnz	w0, 4185ac <_obstack_memory_used@@Base+0x17c4>
  418650:	ldr	x0, [x20, #32]
  418654:	str	x0, [sp, #168]
  418658:	mov	x26, x19
  41865c:	add	x1, x27, x19
  418660:	mov	x3, x24
  418664:	sub	x2, x22, x19
  418668:	add	x1, x25, x1
  41866c:	add	x0, sp, #0x64
  418670:	bl	4169f8 <wcrtomb@plt+0x14128>
  418674:	mov	x21, x0
  418678:	sub	x0, x0, #0x1
  41867c:	cmn	x0, #0x4
  418680:	b.hi	4186e0 <_obstack_memory_used@@Base+0x18f8>  // b.pmore
  418684:	ldr	w27, [sp, #100]
  418688:	mov	w0, w27
  41868c:	bl	4027e0 <towupper@plt>
  418690:	mov	w25, w0
  418694:	cmp	w27, w0
  418698:	b.eq	4186bc <_obstack_memory_used@@Base+0x18d4>  // b.none
  41869c:	add	x2, sp, #0xa8
  4186a0:	mov	w1, w0
  4186a4:	add	x0, sp, #0x68
  4186a8:	bl	4028d0 <wcrtomb@plt>
  4186ac:	cmp	x21, x0
  4186b0:	b.eq	4185dc <_obstack_memory_used@@Base+0x17f4>  // b.none
  4186b4:	mov	x21, x19
  4186b8:	b	418798 <_obstack_memory_used@@Base+0x19b0>
  4186bc:	ldr	x0, [x20, #8]
  4186c0:	ldr	x1, [x20, #40]
  4186c4:	add	x1, x19, x1
  4186c8:	ldr	x3, [x20]
  4186cc:	mov	x2, x21
  4186d0:	add	x1, x3, x1
  4186d4:	add	x0, x0, x19
  4186d8:	bl	402260 <memcpy@plt>
  4186dc:	b	4185f0 <_obstack_memory_used@@Base+0x1808>
  4186e0:	cmn	x0, #0x3
  4186e4:	b.hi	418720 <_obstack_memory_used@@Base+0x1938>  // b.pmore
  4186e8:	ldr	x1, [x20, #64]
  4186ec:	ldr	x0, [x20, #88]
  4186f0:	cmp	x1, x0
  4186f4:	b.lt	418758 <_obstack_memory_used@@Base+0x1970>  // b.tstop
  4186f8:	ldr	x0, [x20]
  4186fc:	ldr	x1, [x20, #40]
  418700:	add	x0, x0, x19
  418704:	ldrb	w0, [x0, x1]
  418708:	ldr	x1, [x20, #8]
  41870c:	strb	w0, [x1, x19]
  418710:	add	x19, x19, #0x1
  418714:	ldr	x1, [x20, #16]
  418718:	str	w0, [x1, x26, lsl #2]
  41871c:	b	418624 <_obstack_memory_used@@Base+0x183c>
  418720:	ldr	x0, [x20]
  418724:	ldr	x1, [x20, #40]
  418728:	add	x0, x0, x19
  41872c:	ldrb	w0, [x0, x1]
  418730:	ldr	x1, [x20, #8]
  418734:	strb	w0, [x1, x19]
  418738:	add	x19, x19, #0x1
  41873c:	ldr	x1, [x20, #16]
  418740:	str	w0, [x1, x26, lsl #2]
  418744:	cmn	x21, #0x1
  418748:	b.ne	418624 <_obstack_memory_used@@Base+0x183c>  // b.any
  41874c:	ldr	x0, [sp, #168]
  418750:	str	x0, [x20, #32]
  418754:	b	418624 <_obstack_memory_used@@Base+0x183c>
  418758:	ldr	x0, [sp, #168]
  41875c:	str	x0, [x20, #32]
  418760:	ldp	x23, x24, [sp, #48]
  418764:	ldp	x25, x26, [sp, #64]
  418768:	ldr	x27, [sp, #80]
  41876c:	b	41877c <_obstack_memory_used@@Base+0x1994>
  418770:	ldp	x23, x24, [sp, #48]
  418774:	ldp	x25, x26, [sp, #64]
  418778:	ldr	x27, [sp, #80]
  41877c:	str	x19, [x20, #48]
  418780:	str	x19, [x20, #56]
  418784:	mov	w0, #0x0                   	// #0
  418788:	b	418574 <_obstack_memory_used@@Base+0x178c>
  41878c:	stp	x23, x24, [sp, #48]
  418790:	stp	x25, x26, [sp, #64]
  418794:	str	x27, [sp, #80]
  418798:	sub	x2, x22, x19
  41879c:	ldr	x0, [x20, #32]
  4187a0:	str	x0, [sp, #168]
  4187a4:	ldr	x1, [x20, #120]
  4187a8:	cbnz	x1, 418874 <_obstack_memory_used@@Base+0x1a8c>
  4187ac:	ldr	x0, [x20, #40]
  4187b0:	add	x0, x21, x0
  4187b4:	ldr	x25, [x20]
  4187b8:	add	x25, x25, x0
  4187bc:	add	x3, x20, #0x20
  4187c0:	mov	x1, x25
  4187c4:	add	x0, sp, #0x64
  4187c8:	bl	4169f8 <wcrtomb@plt+0x14128>
  4187cc:	mov	x23, x0
  4187d0:	sub	x27, x0, #0x1
  4187d4:	cmn	x27, #0x4
  4187d8:	b.hi	418a90 <_obstack_memory_used@@Base+0x1ca8>  // b.pmore
  4187dc:	ldr	w26, [sp, #100]
  4187e0:	mov	w0, w26
  4187e4:	bl	4027e0 <towupper@plt>
  4187e8:	mov	w24, w0
  4187ec:	cmp	w26, w0
  4187f0:	b.eq	418a50 <_obstack_memory_used@@Base+0x1c68>  // b.none
  4187f4:	add	x2, sp, #0xa8
  4187f8:	mov	w1, w0
  4187fc:	add	x0, sp, #0x68
  418800:	bl	4028d0 <wcrtomb@plt>
  418804:	mov	x26, x0
  418808:	cmp	x23, x0
  41880c:	b.ne	4188f4 <_obstack_memory_used@@Base+0x1b0c>  // b.any
  418810:	ldr	x0, [x20, #8]
  418814:	mov	x2, x26
  418818:	add	x1, sp, #0x68
  41881c:	add	x0, x0, x19
  418820:	bl	402260 <memcpy@plt>
  418824:	ldrb	w0, [x20, #140]
  418828:	cbnz	w0, 418a68 <_obstack_memory_used@@Base+0x1c80>
  41882c:	add	x21, x21, x23
  418830:	add	x0, x19, #0x1
  418834:	ldr	x1, [x20, #16]
  418838:	str	w24, [x1, x19, lsl #2]
  41883c:	add	x1, x19, x23
  418840:	cmp	x0, x1
  418844:	b.ge	418b44 <_obstack_memory_used@@Base+0x1d5c>  // b.tcont
  418848:	mov	w3, #0xffffffff            	// #-1
  41884c:	ldr	x2, [x20, #16]
  418850:	str	w3, [x2, x0, lsl #2]
  418854:	add	x0, x0, #0x1
  418858:	cmp	x1, x0
  41885c:	b.ne	41884c <_obstack_memory_used@@Base+0x1a64>  // b.any
  418860:	mov	x19, x1
  418864:	ldp	x23, x24, [sp, #48]
  418868:	ldp	x25, x26, [sp, #64]
  41886c:	ldr	x27, [sp, #80]
  418870:	b	418560 <_obstack_memory_used@@Base+0x1778>
  418874:	ldr	w6, [x20, #144]
  418878:	cmp	w6, #0x0
  41887c:	b.le	4188dc <_obstack_memory_used@@Base+0x1af4>
  418880:	cmp	x2, #0x0
  418884:	b.le	4188e4 <_obstack_memory_used@@Base+0x1afc>
  418888:	ldr	x5, [x20]
  41888c:	ldr	x3, [x20, #40]
  418890:	add	x3, x21, x3
  418894:	mov	x7, x2
  418898:	mov	x0, #0x1                   	// #1
  41889c:	sub	x3, x3, #0x1
  4188a0:	add	x5, x5, x3
  4188a4:	b	4188ac <_obstack_memory_used@@Base+0x1ac4>
  4188a8:	mov	x0, x3
  4188ac:	ldrb	w3, [x5, x0]
  4188b0:	ldrb	w4, [x1, x3]
  4188b4:	add	x3, sp, #0x68
  4188b8:	add	x3, x0, x3
  4188bc:	sturb	w4, [x3, #-1]
  4188c0:	cmp	w6, w0
  4188c4:	b.le	4188ec <_obstack_memory_used@@Base+0x1b04>
  4188c8:	add	x3, x0, #0x1
  4188cc:	cmp	x0, x7
  4188d0:	b.ne	4188a8 <_obstack_memory_used@@Base+0x1ac0>  // b.any
  4188d4:	add	x25, sp, #0x68
  4188d8:	b	4187bc <_obstack_memory_used@@Base+0x19d4>
  4188dc:	add	x25, sp, #0x68
  4188e0:	b	4187bc <_obstack_memory_used@@Base+0x19d4>
  4188e4:	add	x25, sp, #0x68
  4188e8:	b	4187bc <_obstack_memory_used@@Base+0x19d4>
  4188ec:	add	x25, sp, #0x68
  4188f0:	b	4187bc <_obstack_memory_used@@Base+0x19d4>
  4188f4:	cmn	x0, #0x1
  4188f8:	b.eq	418a38 <_obstack_memory_used@@Base+0x1c50>  // b.none
  4188fc:	mov	x22, x19
  418900:	add	x25, x19, x0
  418904:	ldr	x0, [x20, #64]
  418908:	cmp	x25, x0
  41890c:	b.ls	418928 <_obstack_memory_used@@Base+0x1b40>  // b.plast
  418910:	ldr	x0, [sp, #168]
  418914:	str	x0, [x20, #32]
  418918:	ldp	x23, x24, [sp, #48]
  41891c:	ldp	x25, x26, [sp, #64]
  418920:	ldr	x27, [sp, #80]
  418924:	b	418568 <_obstack_memory_used@@Base+0x1780>
  418928:	ldr	x1, [x20, #24]
  41892c:	cbz	x1, 418a14 <_obstack_memory_used@@Base+0x1c2c>
  418930:	ldrb	w0, [x20, #140]
  418934:	cbnz	w0, 41895c <_obstack_memory_used@@Base+0x1b74>
  418938:	cbz	x22, 418954 <_obstack_memory_used@@Base+0x1b6c>
  41893c:	mov	x0, #0x0                   	// #0
  418940:	ldr	x1, [x20, #24]
  418944:	str	x0, [x1, x0, lsl #3]
  418948:	add	x0, x0, #0x1
  41894c:	cmp	x22, x0
  418950:	b.ne	418940 <_obstack_memory_used@@Base+0x1b58>  // b.any
  418954:	mov	w0, #0x1                   	// #1
  418958:	strb	w0, [x20, #140]
  41895c:	ldr	x0, [x20, #8]
  418960:	mov	x2, x26
  418964:	add	x1, sp, #0x68
  418968:	add	x0, x0, x22
  41896c:	bl	402260 <memcpy@plt>
  418970:	lsl	x0, x22, #2
  418974:	ldr	x1, [x20, #16]
  418978:	str	w24, [x1, x22, lsl #2]
  41897c:	ldr	x1, [x20, #24]
  418980:	str	x21, [x1, x22, lsl #3]
  418984:	cmp	x26, #0x1
  418988:	b.ls	4189c8 <_obstack_memory_used@@Base+0x1be0>  // b.plast
  41898c:	add	x0, x0, #0x4
  418990:	mov	x1, #0x1                   	// #1
  418994:	mov	w3, #0xffffffff            	// #-1
  418998:	cmp	x23, x1
  41899c:	csel	x2, x27, x1, ls  // ls = plast
  4189a0:	ldr	x5, [x20, #24]
  4189a4:	lsl	x4, x0, #1
  4189a8:	add	x2, x21, x2
  4189ac:	str	x2, [x5, x4]
  4189b0:	ldr	x2, [x20, #16]
  4189b4:	str	w3, [x2, x0]
  4189b8:	add	x1, x1, #0x1
  4189bc:	add	x0, x0, #0x4
  4189c0:	cmp	x26, x1
  4189c4:	b.ne	418998 <_obstack_memory_used@@Base+0x1bb0>  // b.any
  4189c8:	sub	x26, x26, x23
  4189cc:	ldr	x0, [x20, #88]
  4189d0:	add	x0, x26, x0
  4189d4:	str	x0, [x20, #88]
  4189d8:	ldr	x1, [x20, #96]
  4189dc:	cmp	x21, x1
  4189e0:	b.ge	4189f0 <_obstack_memory_used@@Base+0x1c08>  // b.tcont
  4189e4:	ldr	x1, [x20, #104]
  4189e8:	add	x26, x1, x26
  4189ec:	str	x26, [x20, #104]
  4189f0:	ldr	x22, [x20, #64]
  4189f4:	cmp	x22, x0
  4189f8:	csel	x22, x22, x0, le
  4189fc:	mov	x19, x25
  418a00:	add	x21, x21, x23
  418a04:	ldp	x23, x24, [sp, #48]
  418a08:	ldp	x25, x26, [sp, #64]
  418a0c:	ldr	x27, [sp, #80]
  418a10:	b	418560 <_obstack_memory_used@@Base+0x1778>
  418a14:	lsl	x0, x0, #3
  418a18:	bl	4023f0 <malloc@plt>
  418a1c:	str	x0, [x20, #24]
  418a20:	cbnz	x0, 418930 <_obstack_memory_used@@Base+0x1b48>
  418a24:	mov	w0, #0xc                   	// #12
  418a28:	ldp	x23, x24, [sp, #48]
  418a2c:	ldp	x25, x26, [sp, #64]
  418a30:	ldr	x27, [sp, #80]
  418a34:	b	418574 <_obstack_memory_used@@Base+0x178c>
  418a38:	ldr	x0, [x20, #8]
  418a3c:	mov	x2, x23
  418a40:	mov	x1, x25
  418a44:	add	x0, x0, x19
  418a48:	bl	402260 <memcpy@plt>
  418a4c:	b	418824 <_obstack_memory_used@@Base+0x1a3c>
  418a50:	ldr	x0, [x20, #8]
  418a54:	mov	x2, x23
  418a58:	mov	x1, x25
  418a5c:	add	x0, x0, x19
  418a60:	bl	402260 <memcpy@plt>
  418a64:	b	418824 <_obstack_memory_used@@Base+0x1a3c>
  418a68:	lsl	x1, x19, #3
  418a6c:	mov	x0, x21
  418a70:	add	x3, x23, x21
  418a74:	ldr	x2, [x20, #24]
  418a78:	str	x0, [x2, x1]
  418a7c:	add	x1, x1, #0x8
  418a80:	add	x0, x0, #0x1
  418a84:	cmp	x0, x3
  418a88:	b.ne	418a74 <_obstack_memory_used@@Base+0x1c8c>  // b.any
  418a8c:	b	41882c <_obstack_memory_used@@Base+0x1a44>
  418a90:	cmn	x27, #0x3
  418a94:	b.hi	418aa8 <_obstack_memory_used@@Base+0x1cc0>  // b.pmore
  418a98:	ldr	x1, [x20, #64]
  418a9c:	ldr	x0, [x20, #88]
  418aa0:	cmp	x1, x0
  418aa4:	b.lt	418b2c <_obstack_memory_used@@Base+0x1d44>  // b.tstop
  418aa8:	ldr	x0, [x20]
  418aac:	ldr	x1, [x20, #40]
  418ab0:	add	x0, x0, x21
  418ab4:	ldrb	w0, [x0, x1]
  418ab8:	ldr	x1, [x20, #120]
  418abc:	cbnz	x1, 418afc <_obstack_memory_used@@Base+0x1d14>
  418ac0:	mov	x2, x19
  418ac4:	ldr	x1, [x20, #8]
  418ac8:	strb	w0, [x1, x19]
  418acc:	ldrb	w1, [x20, #140]
  418ad0:	cbnz	w1, 418b08 <_obstack_memory_used@@Base+0x1d20>
  418ad4:	add	x21, x21, #0x1
  418ad8:	add	x19, x19, #0x1
  418adc:	ldr	x1, [x20, #16]
  418ae0:	str	w0, [x1, x2, lsl #2]
  418ae4:	cmn	x23, #0x1
  418ae8:	b.eq	418b14 <_obstack_memory_used@@Base+0x1d2c>  // b.none
  418aec:	ldp	x23, x24, [sp, #48]
  418af0:	ldp	x25, x26, [sp, #64]
  418af4:	ldr	x27, [sp, #80]
  418af8:	b	418560 <_obstack_memory_used@@Base+0x1778>
  418afc:	and	x0, x0, #0xff
  418b00:	ldrb	w0, [x1, x0]
  418b04:	b	418ac0 <_obstack_memory_used@@Base+0x1cd8>
  418b08:	ldr	x1, [x20, #24]
  418b0c:	str	x21, [x1, x19, lsl #3]
  418b10:	b	418ad4 <_obstack_memory_used@@Base+0x1cec>
  418b14:	ldr	x0, [sp, #168]
  418b18:	str	x0, [x20, #32]
  418b1c:	ldp	x23, x24, [sp, #48]
  418b20:	ldp	x25, x26, [sp, #64]
  418b24:	ldr	x27, [sp, #80]
  418b28:	b	418560 <_obstack_memory_used@@Base+0x1778>
  418b2c:	ldr	x0, [sp, #168]
  418b30:	str	x0, [x20, #32]
  418b34:	ldp	x23, x24, [sp, #48]
  418b38:	ldp	x25, x26, [sp, #64]
  418b3c:	ldr	x27, [sp, #80]
  418b40:	b	418568 <_obstack_memory_used@@Base+0x1780>
  418b44:	mov	x19, x0
  418b48:	ldp	x23, x24, [sp, #48]
  418b4c:	ldp	x25, x26, [sp, #64]
  418b50:	ldr	x27, [sp, #80]
  418b54:	b	418560 <_obstack_memory_used@@Base+0x1778>
  418b58:	stp	x29, x30, [sp, #-32]!
  418b5c:	mov	x29, sp
  418b60:	stp	x19, x20, [sp, #16]
  418b64:	mov	x19, x0
  418b68:	ldr	x0, [x0, #64]
  418b6c:	mov	x2, #0xffffffffffffffe     	// #1152921504606846974
  418b70:	cmp	x0, x2
  418b74:	b.hi	418c2c <_obstack_memory_used@@Base+0x1e44>  // b.pmore
  418b78:	lsl	x0, x0, #1
  418b7c:	ldr	x2, [x19, #88]
  418b80:	cmp	x0, x2
  418b84:	csel	x0, x0, x2, le
  418b88:	sxtw	x1, w1
  418b8c:	cmp	x0, x1
  418b90:	csel	x1, x0, x1, ge  // ge = tcont
  418b94:	mov	x0, x19
  418b98:	bl	417a44 <_obstack_memory_used@@Base+0xc5c>
  418b9c:	mov	w20, w0
  418ba0:	cbnz	w0, 418be4 <_obstack_memory_used@@Base+0x1dfc>
  418ba4:	ldr	x0, [x19, #184]
  418ba8:	cbz	x0, 418bc4 <_obstack_memory_used@@Base+0x1ddc>
  418bac:	ldr	x1, [x19, #64]
  418bb0:	add	x1, x1, #0x1
  418bb4:	lsl	x1, x1, #3
  418bb8:	bl	402500 <realloc@plt>
  418bbc:	cbz	x0, 418c34 <_obstack_memory_used@@Base+0x1e4c>
  418bc0:	str	x0, [x19, #184]
  418bc4:	ldrb	w0, [x19, #136]
  418bc8:	cbz	w0, 418c00 <_obstack_memory_used@@Base+0x1e18>
  418bcc:	ldr	w0, [x19, #144]
  418bd0:	cmp	w0, #0x1
  418bd4:	b.le	418bf4 <_obstack_memory_used@@Base+0x1e0c>
  418bd8:	mov	x0, x19
  418bdc:	bl	418524 <_obstack_memory_used@@Base+0x173c>
  418be0:	mov	w20, w0
  418be4:	mov	w0, w20
  418be8:	ldp	x19, x20, [sp, #16]
  418bec:	ldp	x29, x30, [sp], #32
  418bf0:	ret
  418bf4:	mov	x0, x19
  418bf8:	bl	4182b8 <_obstack_memory_used@@Base+0x14d0>
  418bfc:	b	418be4 <_obstack_memory_used@@Base+0x1dfc>
  418c00:	ldr	w0, [x19, #144]
  418c04:	cmp	w0, #0x1
  418c08:	b.gt	418c20 <_obstack_memory_used@@Base+0x1e38>
  418c0c:	ldr	x0, [x19, #120]
  418c10:	cbz	x0, 418be4 <_obstack_memory_used@@Base+0x1dfc>
  418c14:	mov	x0, x19
  418c18:	bl	416e88 <_obstack_memory_used@@Base+0xa0>
  418c1c:	b	418be4 <_obstack_memory_used@@Base+0x1dfc>
  418c20:	mov	x0, x19
  418c24:	bl	418350 <_obstack_memory_used@@Base+0x1568>
  418c28:	b	418be4 <_obstack_memory_used@@Base+0x1dfc>
  418c2c:	mov	w20, #0xc                   	// #12
  418c30:	b	418be4 <_obstack_memory_used@@Base+0x1dfc>
  418c34:	mov	w20, #0xc                   	// #12
  418c38:	b	418be4 <_obstack_memory_used@@Base+0x1dfc>
  418c3c:	stp	x29, x30, [sp, #-48]!
  418c40:	mov	x29, sp
  418c44:	stp	x19, x20, [sp, #16]
  418c48:	str	x21, [sp, #32]
  418c4c:	mov	x19, x0
  418c50:	mov	x20, x1
  418c54:	ldr	x21, [x0, #192]
  418c58:	ldr	x0, [x0, #64]
  418c5c:	cmp	x0, x1
  418c60:	b.gt	418c70 <_obstack_memory_used@@Base+0x1e88>
  418c64:	ldr	x1, [x19, #88]
  418c68:	cmp	x0, x1
  418c6c:	b.lt	418c88 <_obstack_memory_used@@Base+0x1ea0>  // b.tstop
  418c70:	ldr	x0, [x19, #48]
  418c74:	cmp	x0, x20
  418c78:	b.gt	418c98 <_obstack_memory_used@@Base+0x1eb0>
  418c7c:	ldr	x1, [x19, #88]
  418c80:	cmp	x0, x1
  418c84:	b.ge	418c98 <_obstack_memory_used@@Base+0x1eb0>  // b.tcont
  418c88:	add	w1, w20, #0x1
  418c8c:	mov	x0, x19
  418c90:	bl	418b58 <_obstack_memory_used@@Base+0x1d70>
  418c94:	cbnz	w0, 418ca4 <_obstack_memory_used@@Base+0x1ebc>
  418c98:	mov	w0, #0x0                   	// #0
  418c9c:	cmp	x21, x20
  418ca0:	b.lt	418cb4 <_obstack_memory_used@@Base+0x1ecc>  // b.tstop
  418ca4:	ldp	x19, x20, [sp, #16]
  418ca8:	ldr	x21, [sp, #32]
  418cac:	ldp	x29, x30, [sp], #48
  418cb0:	ret
  418cb4:	sub	x2, x20, x21
  418cb8:	add	x21, x21, #0x1
  418cbc:	ldr	x0, [x19, #184]
  418cc0:	lsl	x2, x2, #3
  418cc4:	mov	w1, #0x0                   	// #0
  418cc8:	add	x0, x0, x21, lsl #3
  418ccc:	bl	4024c0 <memset@plt>
  418cd0:	str	x20, [x19, #192]
  418cd4:	mov	w0, #0x0                   	// #0
  418cd8:	b	418ca4 <_obstack_memory_used@@Base+0x1ebc>
  418cdc:	cbz	x1, 418e7c <_obstack_memory_used@@Base+0x2094>
  418ce0:	stp	x29, x30, [sp, #-48]!
  418ce4:	mov	x29, sp
  418ce8:	stp	x19, x20, [sp, #16]
  418cec:	str	x21, [sp, #32]
  418cf0:	mov	x19, x0
  418cf4:	mov	x21, x1
  418cf8:	ldr	x1, [x1, #8]
  418cfc:	mov	w0, #0x0                   	// #0
  418d00:	cbz	x1, 418e6c <_obstack_memory_used@@Base+0x2084>
  418d04:	ldr	x2, [x19]
  418d08:	ldr	x0, [x19, #8]
  418d0c:	add	x0, x0, x1, lsl #1
  418d10:	cmp	x2, x0
  418d14:	b.lt	418d68 <_obstack_memory_used@@Base+0x1f80>  // b.tstop
  418d18:	ldr	x0, [x19, #8]
  418d1c:	cbz	x0, 418d8c <_obstack_memory_used@@Base+0x1fa4>
  418d20:	ldr	x2, [x21, #8]
  418d24:	add	x20, x0, x2, lsl #1
  418d28:	sub	x0, x0, #0x1
  418d2c:	subs	x2, x2, #0x1
  418d30:	ccmp	x0, #0x0, #0x1, pl  // pl = nfrst
  418d34:	b.ge	418dc4 <_obstack_memory_used@@Base+0x1fdc>  // b.tcont
  418d38:	tbz	x2, #63, 418df8 <_obstack_memory_used@@Base+0x2010>
  418d3c:	ldr	x1, [x19, #8]
  418d40:	ldr	x2, [x21, #8]
  418d44:	add	x2, x1, x2, lsl #1
  418d48:	sub	x5, x2, #0x1
  418d4c:	mov	w0, #0x0                   	// #0
  418d50:	subs	x2, x2, x20
  418d54:	b.eq	418e6c <_obstack_memory_used@@Base+0x2084>  // b.none
  418d58:	sub	x3, x1, #0x1
  418d5c:	add	x1, x1, x2
  418d60:	str	x1, [x19, #8]
  418d64:	b	418e28 <_obstack_memory_used@@Base+0x2040>
  418d68:	add	x1, x1, x2
  418d6c:	lsl	x20, x1, #1
  418d70:	lsl	x1, x1, #4
  418d74:	ldr	x0, [x19, #16]
  418d78:	bl	402500 <realloc@plt>
  418d7c:	cbz	x0, 418e84 <_obstack_memory_used@@Base+0x209c>
  418d80:	str	x0, [x19, #16]
  418d84:	str	x20, [x19]
  418d88:	b	418d18 <_obstack_memory_used@@Base+0x1f30>
  418d8c:	ldr	x0, [x21, #8]
  418d90:	str	x0, [x19, #8]
  418d94:	ldr	x2, [x21, #8]
  418d98:	lsl	x2, x2, #3
  418d9c:	ldr	x1, [x21, #16]
  418da0:	ldr	x0, [x19, #16]
  418da4:	bl	402260 <memcpy@plt>
  418da8:	mov	w0, #0x0                   	// #0
  418dac:	b	418e6c <_obstack_memory_used@@Base+0x2084>
  418db0:	sub	x2, x2, #0x1
  418db4:	sub	x0, x0, #0x1
  418db8:	cmp	x2, #0x0
  418dbc:	ccmp	x0, #0x0, #0x1, ge  // ge = tcont
  418dc0:	b.lt	418d38 <_obstack_memory_used@@Base+0x1f50>  // b.tstop
  418dc4:	ldr	x1, [x19, #16]
  418dc8:	ldr	x4, [x1, x0, lsl #3]
  418dcc:	ldr	x3, [x21, #16]
  418dd0:	ldr	x3, [x3, x2, lsl #3]
  418dd4:	cmp	x4, x3
  418dd8:	b.eq	418db0 <_obstack_memory_used@@Base+0x1fc8>  // b.none
  418ddc:	b.ge	418df0 <_obstack_memory_used@@Base+0x2008>  // b.tcont
  418de0:	sub	x2, x2, #0x1
  418de4:	sub	x20, x20, #0x1
  418de8:	str	x3, [x1, x20, lsl #3]
  418dec:	b	418db8 <_obstack_memory_used@@Base+0x1fd0>
  418df0:	sub	x0, x0, #0x1
  418df4:	b	418db8 <_obstack_memory_used@@Base+0x1fd0>
  418df8:	add	x2, x2, #0x1
  418dfc:	sub	x20, x20, x2
  418e00:	ldr	x0, [x19, #16]
  418e04:	lsl	x2, x2, #3
  418e08:	ldr	x1, [x21, #16]
  418e0c:	add	x0, x0, x20, lsl #3
  418e10:	bl	402260 <memcpy@plt>
  418e14:	b	418d3c <_obstack_memory_used@@Base+0x1f54>
  418e18:	add	x4, x3, x2
  418e1c:	str	x0, [x1, x4, lsl #3]
  418e20:	subs	x3, x3, #0x1
  418e24:	b.mi	418e58 <_obstack_memory_used@@Base+0x2070>  // b.first
  418e28:	ldr	x1, [x19, #16]
  418e2c:	ldr	x4, [x1, x5, lsl #3]
  418e30:	ldr	x0, [x1, x3, lsl #3]
  418e34:	cmp	x4, x0
  418e38:	b.le	418e18 <_obstack_memory_used@@Base+0x2030>
  418e3c:	sub	x5, x5, #0x1
  418e40:	add	x0, x3, x2
  418e44:	str	x4, [x1, x0, lsl #3]
  418e48:	subs	x2, x2, #0x1
  418e4c:	b.ne	418e28 <_obstack_memory_used@@Base+0x2040>  // b.any
  418e50:	mov	w0, #0x0                   	// #0
  418e54:	b	418e6c <_obstack_memory_used@@Base+0x2084>
  418e58:	ldr	x0, [x19, #16]
  418e5c:	lsl	x2, x2, #3
  418e60:	add	x1, x0, x20, lsl #3
  418e64:	bl	402260 <memcpy@plt>
  418e68:	mov	w0, #0x0                   	// #0
  418e6c:	ldp	x19, x20, [sp, #16]
  418e70:	ldr	x21, [sp, #32]
  418e74:	ldp	x29, x30, [sp], #48
  418e78:	ret
  418e7c:	mov	w0, #0x0                   	// #0
  418e80:	ret
  418e84:	mov	w0, #0xc                   	// #12
  418e88:	b	418e6c <_obstack_memory_used@@Base+0x2084>
  418e8c:	stp	x29, x30, [sp, #-32]!
  418e90:	mov	x29, sp
  418e94:	stp	x19, x20, [sp, #16]
  418e98:	mov	x19, x0
  418e9c:	ldr	x0, [x1, #8]
  418ea0:	str	x0, [x19, #8]
  418ea4:	cmp	x0, #0x0
  418ea8:	b.le	418ef4 <_obstack_memory_used@@Base+0x210c>
  418eac:	mov	x20, x1
  418eb0:	str	x0, [x19]
  418eb4:	lsl	x0, x0, #3
  418eb8:	bl	4023f0 <malloc@plt>
  418ebc:	str	x0, [x19, #16]
  418ec0:	cbz	x0, 418ee4 <_obstack_memory_used@@Base+0x20fc>
  418ec4:	ldr	x2, [x20, #8]
  418ec8:	lsl	x2, x2, #3
  418ecc:	ldr	x1, [x20, #16]
  418ed0:	bl	402260 <memcpy@plt>
  418ed4:	mov	w0, #0x0                   	// #0
  418ed8:	ldp	x19, x20, [sp, #16]
  418edc:	ldp	x29, x30, [sp], #32
  418ee0:	ret
  418ee4:	str	xzr, [x19, #8]
  418ee8:	str	xzr, [x19]
  418eec:	mov	w0, #0xc                   	// #12
  418ef0:	b	418ed8 <_obstack_memory_used@@Base+0x20f0>
  418ef4:	stp	xzr, xzr, [x19]
  418ef8:	str	xzr, [x19, #16]
  418efc:	mov	w0, #0x0                   	// #0
  418f00:	b	418ed8 <_obstack_memory_used@@Base+0x20f0>
  418f04:	stp	x29, x30, [sp, #-64]!
  418f08:	mov	x29, sp
  418f0c:	stp	x19, x20, [sp, #16]
  418f10:	stp	x21, x22, [sp, #32]
  418f14:	mov	x21, x0
  418f18:	mov	x19, x2
  418f1c:	cbz	x1, 418f3c <_obstack_memory_used@@Base+0x2154>
  418f20:	mov	x20, x1
  418f24:	ldr	x0, [x1, #8]
  418f28:	cmp	x0, #0x0
  418f2c:	ccmp	x2, #0x0, #0x4, gt
  418f30:	b.ne	418f68 <_obstack_memory_used@@Base+0x2180>  // b.any
  418f34:	cmp	x0, #0x0
  418f38:	b.gt	418f74 <_obstack_memory_used@@Base+0x218c>
  418f3c:	cbz	x19, 418f4c <_obstack_memory_used@@Base+0x2164>
  418f40:	ldr	x0, [x19, #8]
  418f44:	cmp	x0, #0x0
  418f48:	b.gt	418ff4 <_obstack_memory_used@@Base+0x220c>
  418f4c:	stp	xzr, xzr, [x21]
  418f50:	str	xzr, [x21, #16]
  418f54:	mov	w0, #0x0                   	// #0
  418f58:	ldp	x19, x20, [sp, #16]
  418f5c:	ldp	x21, x22, [sp, #32]
  418f60:	ldp	x29, x30, [sp], #64
  418f64:	ret
  418f68:	ldr	x1, [x2, #8]
  418f6c:	cmp	x1, #0x0
  418f70:	b.gt	418f84 <_obstack_memory_used@@Base+0x219c>
  418f74:	mov	x1, x20
  418f78:	mov	x0, x21
  418f7c:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  418f80:	b	418f58 <_obstack_memory_used@@Base+0x2170>
  418f84:	add	x0, x0, x1
  418f88:	str	x0, [x21]
  418f8c:	lsl	x0, x0, #3
  418f90:	bl	4023f0 <malloc@plt>
  418f94:	str	x0, [x21, #16]
  418f98:	cbz	x0, 4190a4 <_obstack_memory_used@@Base+0x22bc>
  418f9c:	stp	x23, x24, [sp, #48]
  418fa0:	ldr	x2, [x20, #8]
  418fa4:	mov	x0, #0x0                   	// #0
  418fa8:	mov	x22, #0x0                   	// #0
  418fac:	mov	x23, #0x0                   	// #0
  418fb0:	mov	x24, #0x0                   	// #0
  418fb4:	cmp	x2, #0x0
  418fb8:	b.gt	419024 <_obstack_memory_used@@Base+0x223c>
  418fbc:	ldr	x1, [x19, #8]
  418fc0:	cmp	x1, x22
  418fc4:	b.le	419094 <_obstack_memory_used@@Base+0x22ac>
  418fc8:	ldr	x0, [x21, #16]
  418fcc:	sub	x2, x1, x22
  418fd0:	ldr	x1, [x19, #16]
  418fd4:	lsl	x2, x2, #3
  418fd8:	add	x1, x1, x22, lsl #3
  418fdc:	add	x0, x0, x24, lsl #3
  418fe0:	bl	402260 <memcpy@plt>
  418fe4:	ldr	x0, [x19, #8]
  418fe8:	sub	x22, x0, x22
  418fec:	add	x24, x24, x22
  418ff0:	b	419094 <_obstack_memory_used@@Base+0x22ac>
  418ff4:	mov	x1, x19
  418ff8:	mov	x0, x21
  418ffc:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  419000:	b	418f58 <_obstack_memory_used@@Base+0x2170>
  419004:	add	x22, x22, #0x1
  419008:	add	x24, x0, #0x1
  41900c:	ldr	x1, [x21, #16]
  419010:	str	x2, [x1, x0, lsl #3]
  419014:	ldr	x2, [x20, #8]
  419018:	add	x0, x0, #0x1
  41901c:	cmp	x23, x2
  419020:	b.ge	418fbc <_obstack_memory_used@@Base+0x21d4>  // b.tcont
  419024:	mov	x24, x0
  419028:	ldr	x1, [x19, #8]
  41902c:	cmp	x1, x22
  419030:	b.le	419064 <_obstack_memory_used@@Base+0x227c>
  419034:	ldr	x1, [x20, #16]
  419038:	ldr	x1, [x1, x23, lsl #3]
  41903c:	ldr	x2, [x19, #16]
  419040:	ldr	x2, [x2, x22, lsl #3]
  419044:	cmp	x1, x2
  419048:	b.gt	419004 <_obstack_memory_used@@Base+0x221c>
  41904c:	cinc	x22, x22, eq  // eq = none
  419050:	add	x23, x23, #0x1
  419054:	add	x24, x0, #0x1
  419058:	ldr	x2, [x21, #16]
  41905c:	str	x1, [x2, x0, lsl #3]
  419060:	b	419014 <_obstack_memory_used@@Base+0x222c>
  419064:	cmp	x2, x23
  419068:	b.le	419094 <_obstack_memory_used@@Base+0x22ac>
  41906c:	ldr	x3, [x21, #16]
  419070:	sub	x2, x2, x23
  419074:	ldr	x1, [x20, #16]
  419078:	lsl	x2, x2, #3
  41907c:	add	x1, x1, x23, lsl #3
  419080:	add	x0, x3, x0, lsl #3
  419084:	bl	402260 <memcpy@plt>
  419088:	ldr	x0, [x20, #8]
  41908c:	sub	x23, x0, x23
  419090:	add	x24, x24, x23
  419094:	str	x24, [x21, #8]
  419098:	mov	w0, #0x0                   	// #0
  41909c:	ldp	x23, x24, [sp, #48]
  4190a0:	b	418f58 <_obstack_memory_used@@Base+0x2170>
  4190a4:	mov	w0, #0xc                   	// #12
  4190a8:	b	418f58 <_obstack_memory_used@@Base+0x2170>
  4190ac:	stp	x29, x30, [sp, #-48]!
  4190b0:	mov	x29, sp
  4190b4:	stp	x19, x20, [sp, #16]
  4190b8:	mov	x19, x1
  4190bc:	ldr	x1, [x1, #8]
  4190c0:	cbz	x1, 419248 <_obstack_memory_used@@Base+0x2460>
  4190c4:	stp	x21, x22, [sp, #32]
  4190c8:	mov	x21, x0
  4190cc:	mov	x20, x2
  4190d0:	ldr	x2, [x2, #8]
  4190d4:	mov	w0, #0x0                   	// #0
  4190d8:	cbz	x2, 41925c <_obstack_memory_used@@Base+0x2474>
  4190dc:	add	x1, x1, x2
  4190e0:	ldr	x22, [x21]
  4190e4:	ldr	x0, [x21, #8]
  4190e8:	add	x0, x1, x0
  4190ec:	cmp	x0, x22
  4190f0:	b.gt	419118 <_obstack_memory_used@@Base+0x2330>
  4190f4:	ldr	x3, [x21, #8]
  4190f8:	ldr	x5, [x19, #8]
  4190fc:	ldr	x6, [x20, #8]
  419100:	add	x1, x3, x5
  419104:	add	x1, x1, x6
  419108:	sub	x5, x5, #0x1
  41910c:	sub	x6, x6, #0x1
  419110:	sub	x3, x3, #0x1
  419114:	b	419190 <_obstack_memory_used@@Base+0x23a8>
  419118:	add	x22, x1, x22
  41911c:	lsl	x1, x22, #3
  419120:	ldr	x0, [x21, #16]
  419124:	bl	402500 <realloc@plt>
  419128:	cbz	x0, 419250 <_obstack_memory_used@@Base+0x2468>
  41912c:	str	x0, [x21, #16]
  419130:	str	x22, [x21]
  419134:	b	4190f4 <_obstack_memory_used@@Base+0x230c>
  419138:	tbnz	x3, #63, 419158 <_obstack_memory_used@@Base+0x2370>
  41913c:	ldr	x2, [x21, #16]
  419140:	ldr	x0, [x2, x3, lsl #3]
  419144:	cmp	x4, x0
  419148:	b.ge	419178 <_obstack_memory_used@@Base+0x2390>  // b.tcont
  41914c:	sub	x3, x3, #0x1
  419150:	cmn	x3, #0x1
  419154:	b.ne	419140 <_obstack_memory_used@@Base+0x2358>  // b.any
  419158:	sub	x1, x1, #0x1
  41915c:	ldr	x0, [x21, #16]
  419160:	str	x4, [x0, x1, lsl #3]
  419164:	subs	x5, x5, #0x1
  419168:	b.mi	4191b4 <_obstack_memory_used@@Base+0x23cc>  // b.first
  41916c:	subs	x6, x6, #0x1
  419170:	b.pl	419190 <_obstack_memory_used@@Base+0x23a8>  // b.nfrst
  419174:	b	4191b4 <_obstack_memory_used@@Base+0x23cc>
  419178:	tbnz	x3, #63, 419158 <_obstack_memory_used@@Base+0x2370>
  41917c:	cmp	x4, x0
  419180:	b.ne	419158 <_obstack_memory_used@@Base+0x2370>  // b.any
  419184:	b	419164 <_obstack_memory_used@@Base+0x237c>
  419188:	subs	x5, x5, #0x1
  41918c:	b.mi	4191b4 <_obstack_memory_used@@Base+0x23cc>  // b.first
  419190:	ldr	x0, [x19, #16]
  419194:	ldr	x4, [x0, x5, lsl #3]
  419198:	ldr	x0, [x20, #16]
  41919c:	ldr	x0, [x0, x6, lsl #3]
  4191a0:	cmp	x4, x0
  4191a4:	b.eq	419138 <_obstack_memory_used@@Base+0x2350>  // b.none
  4191a8:	b.ge	419188 <_obstack_memory_used@@Base+0x23a0>  // b.tcont
  4191ac:	subs	x6, x6, #0x1
  4191b0:	b.pl	419190 <_obstack_memory_used@@Base+0x23a8>  // b.nfrst
  4191b4:	ldr	x0, [x21, #8]
  4191b8:	sub	x3, x0, #0x1
  4191bc:	ldr	x2, [x19, #8]
  4191c0:	add	x2, x0, x2
  4191c4:	ldr	x4, [x20, #8]
  4191c8:	add	x2, x2, x4
  4191cc:	sub	x6, x2, #0x1
  4191d0:	sub	x2, x2, x1
  4191d4:	add	x0, x0, x2
  4191d8:	str	x0, [x21, #8]
  4191dc:	cmp	x2, #0x0
  4191e0:	ccmp	x3, #0x0, #0x1, gt
  4191e4:	b.ge	41921c <_obstack_memory_used@@Base+0x2434>  // b.tcont
  4191e8:	ldr	x0, [x21, #16]
  4191ec:	lsl	x2, x2, #3
  4191f0:	add	x1, x0, x1, lsl #3
  4191f4:	bl	402260 <memcpy@plt>
  4191f8:	mov	w0, #0x0                   	// #0
  4191fc:	ldp	x21, x22, [sp, #32]
  419200:	ldp	x19, x20, [sp, #16]
  419204:	ldp	x29, x30, [sp], #48
  419208:	ret
  41920c:	add	x5, x3, x2
  419210:	str	x4, [x0, x5, lsl #3]
  419214:	subs	x3, x3, #0x1
  419218:	b.mi	4191e8 <_obstack_memory_used@@Base+0x2400>  // b.first
  41921c:	ldr	x0, [x21, #16]
  419220:	ldr	x5, [x0, x6, lsl #3]
  419224:	ldr	x4, [x0, x3, lsl #3]
  419228:	cmp	x5, x4
  41922c:	b.le	41920c <_obstack_memory_used@@Base+0x2424>
  419230:	sub	x6, x6, #0x1
  419234:	add	x4, x3, x2
  419238:	str	x5, [x0, x4, lsl #3]
  41923c:	subs	x2, x2, #0x1
  419240:	b.ne	41921c <_obstack_memory_used@@Base+0x2434>  // b.any
  419244:	b	4191e8 <_obstack_memory_used@@Base+0x2400>
  419248:	mov	w0, #0x0                   	// #0
  41924c:	b	419200 <_obstack_memory_used@@Base+0x2418>
  419250:	mov	w0, #0xc                   	// #12
  419254:	ldp	x21, x22, [sp, #32]
  419258:	b	419200 <_obstack_memory_used@@Base+0x2418>
  41925c:	ldp	x21, x22, [sp, #32]
  419260:	b	419200 <_obstack_memory_used@@Base+0x2418>
  419264:	stp	x29, x30, [sp, #-80]!
  419268:	mov	x29, sp
  41926c:	stp	x19, x20, [sp, #16]
  419270:	stp	x21, x22, [sp, #32]
  419274:	mov	x21, x0
  419278:	mov	x19, x1
  41927c:	ldr	x1, [x1, #72]
  419280:	ldr	x3, [x19, #104]
  419284:	cmp	x3, x1
  419288:	b.le	419370 <_obstack_memory_used@@Base+0x2588>
  41928c:	mov	x22, x2
  419290:	ldr	x0, [x19, #8]
  419294:	ldrb	w20, [x0, x1]
  419298:	strb	w20, [x21]
  41929c:	ldrb	w1, [x21, #10]
  4192a0:	and	w1, w1, #0xffffff9f
  4192a4:	strb	w1, [x21, #10]
  4192a8:	ldr	w0, [x19, #144]
  4192ac:	cmp	w0, #0x1
  4192b0:	b.le	4192d4 <_obstack_memory_used@@Base+0x24ec>
  4192b4:	ldr	x1, [x19, #72]
  4192b8:	ldr	x2, [x19, #48]
  4192bc:	cmp	x1, x2
  4192c0:	b.eq	4192d4 <_obstack_memory_used@@Base+0x24ec>  // b.none
  4192c4:	ldr	x2, [x19, #16]
  4192c8:	ldr	w1, [x2, x1, lsl #2]
  4192cc:	cmn	w1, #0x1
  4192d0:	b.eq	41938c <_obstack_memory_used@@Base+0x25a4>  // b.none
  4192d4:	cmp	w20, #0x5c
  4192d8:	b.eq	4193a8 <_obstack_memory_used@@Base+0x25c0>  // b.none
  4192dc:	mov	w0, #0x1                   	// #1
  4192e0:	strb	w0, [x21, #8]
  4192e4:	ldr	w0, [x19, #144]
  4192e8:	cmp	w0, #0x1
  4192ec:	b.le	419718 <_obstack_memory_used@@Base+0x2930>
  4192f0:	str	x23, [sp, #48]
  4192f4:	ldr	x1, [x19, #72]
  4192f8:	mov	x0, x19
  4192fc:	bl	416e64 <_obstack_memory_used@@Base+0x7c>
  419300:	mov	w23, w0
  419304:	bl	402770 <iswalnum@plt>
  419308:	cmp	w23, #0x5f
  41930c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  419310:	cset	w1, ne  // ne = any
  419314:	ldrb	w0, [x21, #10]
  419318:	bfi	w0, w1, #6, #1
  41931c:	strb	w0, [x21, #10]
  419320:	ldr	x23, [sp, #48]
  419324:	cmp	w20, #0x2e
  419328:	b.eq	4198d4 <_obstack_memory_used@@Base+0x2aec>  // b.none
  41932c:	b.ls	419748 <_obstack_memory_used@@Base+0x2960>  // b.plast
  419330:	cmp	w20, #0x7b
  419334:	b.eq	41988c <_obstack_memory_used@@Base+0x2aa4>  // b.none
  419338:	b.ls	4197d4 <_obstack_memory_used@@Base+0x29ec>  // b.plast
  41933c:	cmp	w20, #0x7c
  419340:	b.eq	419858 <_obstack_memory_used@@Base+0x2a70>  // b.none
  419344:	mov	w0, #0x1                   	// #1
  419348:	cmp	w20, #0x7d
  41934c:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419350:	mov	w0, #0x1                   	// #1
  419354:	mov	x1, #0x1200                	// #4608
  419358:	bics	xzr, x1, x22
  41935c:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419360:	mov	w0, #0x18                  	// #24
  419364:	strb	w0, [x21, #8]
  419368:	mov	w0, #0x1                   	// #1
  41936c:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419370:	mov	w0, #0x2                   	// #2
  419374:	strb	w0, [x21, #8]
  419378:	mov	w0, #0x0                   	// #0
  41937c:	ldp	x19, x20, [sp, #16]
  419380:	ldp	x21, x22, [sp, #32]
  419384:	ldp	x29, x30, [sp], #80
  419388:	ret
  41938c:	mov	w0, #0x1                   	// #1
  419390:	strb	w0, [x21, #8]
  419394:	ldrb	w0, [x21, #10]
  419398:	orr	w0, w0, #0x20
  41939c:	strb	w0, [x21, #10]
  4193a0:	mov	w0, #0x1                   	// #1
  4193a4:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4193a8:	ldr	x2, [x19, #72]
  4193ac:	add	x1, x2, #0x1
  4193b0:	ldr	x3, [x19, #88]
  4193b4:	cmp	x1, x3
  4193b8:	b.lt	4193cc <_obstack_memory_used@@Base+0x25e4>  // b.tstop
  4193bc:	mov	w0, #0x24                  	// #36
  4193c0:	strb	w0, [x21, #8]
  4193c4:	mov	w0, #0x1                   	// #1
  4193c8:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4193cc:	ldrb	w3, [x19, #139]
  4193d0:	cbnz	w3, 419448 <_obstack_memory_used@@Base+0x2660>
  4193d4:	ldr	x0, [x19, #8]
  4193d8:	ldrb	w20, [x0, x1]
  4193dc:	strb	w20, [x21]
  4193e0:	mov	w0, #0x1                   	// #1
  4193e4:	strb	w0, [x21, #8]
  4193e8:	ldr	w0, [x19, #144]
  4193ec:	cmp	w0, #0x1
  4193f0:	b.le	4194c4 <_obstack_memory_used@@Base+0x26dc>
  4193f4:	ldr	x1, [x19, #72]
  4193f8:	add	x1, x1, #0x1
  4193fc:	mov	x0, x19
  419400:	bl	416e64 <_obstack_memory_used@@Base+0x7c>
  419404:	mov	w19, w0
  419408:	bl	402770 <iswalnum@plt>
  41940c:	cmp	w19, #0x5f
  419410:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  419414:	cset	w1, ne  // ne = any
  419418:	ldrb	w0, [x21, #10]
  41941c:	bfi	w0, w1, #6, #1
  419420:	strb	w0, [x21, #10]
  419424:	sub	w0, w20, #0x27
  419428:	cmp	w0, #0x56
  41942c:	b.hi	419950 <_obstack_memory_used@@Base+0x2b68>  // b.pmore
  419430:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  419434:	add	x1, x1, #0xf40
  419438:	ldrh	w0, [x1, w0, uxtw #1]
  41943c:	adr	x1, 419448 <_obstack_memory_used@@Base+0x2660>
  419440:	add	x0, x1, w0, sxth #2
  419444:	br	x0
  419448:	cmp	w0, #0x1
  41944c:	b.le	419484 <_obstack_memory_used@@Base+0x269c>
  419450:	ldr	x0, [x19, #16]
  419454:	lsl	x4, x1, #2
  419458:	ldr	w3, [x0, x1, lsl #2]
  41945c:	cmn	w3, #0x1
  419460:	b.eq	4194b8 <_obstack_memory_used@@Base+0x26d0>  // b.none
  419464:	add	x2, x2, #0x2
  419468:	ldr	x3, [x19, #48]
  41946c:	cmp	x3, x2
  419470:	b.eq	419484 <_obstack_memory_used@@Base+0x269c>  // b.none
  419474:	add	x0, x0, x4
  419478:	ldr	w0, [x0, #4]
  41947c:	cmn	w0, #0x1
  419480:	b.eq	4194b8 <_obstack_memory_used@@Base+0x26d0>  // b.none
  419484:	ldrb	w0, [x19, #140]
  419488:	cbz	w0, 419958 <_obstack_memory_used@@Base+0x2b70>
  41948c:	ldr	x2, [x19, #24]
  419490:	ldr	x0, [x19]
  419494:	ldr	x3, [x2, x1, lsl #3]
  419498:	ldr	x2, [x19, #40]
  41949c:	add	x0, x0, x3
  4194a0:	ldrb	w20, [x0, x2]
  4194a4:	tst	w20, #0xffffff80
  4194a8:	b.eq	4193dc <_obstack_memory_used@@Base+0x25f4>  // b.none
  4194ac:	ldr	x0, [x19, #8]
  4194b0:	ldrb	w20, [x0, x1]
  4194b4:	b	4193dc <_obstack_memory_used@@Base+0x25f4>
  4194b8:	ldr	x0, [x19, #8]
  4194bc:	ldrb	w20, [x0, x1]
  4194c0:	b	4193dc <_obstack_memory_used@@Base+0x25f4>
  4194c4:	bl	402650 <__ctype_b_loc@plt>
  4194c8:	and	x1, x20, #0xff
  4194cc:	ldr	x0, [x0]
  4194d0:	ldrh	w0, [x0, x1, lsl #1]
  4194d4:	and	w0, w0, #0x8
  4194d8:	cmp	w20, #0x5f
  4194dc:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  4194e0:	cset	w1, ne  // ne = any
  4194e4:	ldrb	w0, [x21, #10]
  4194e8:	bfi	w0, w1, #6, #1
  4194ec:	strb	w0, [x21, #10]
  4194f0:	b	419424 <_obstack_memory_used@@Base+0x263c>
  4194f4:	mov	w0, #0x2                   	// #2
  4194f8:	mov	x1, #0x8400                	// #33792
  4194fc:	tst	x22, x1
  419500:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419504:	mov	w0, #0xa                   	// #10
  419508:	strb	w0, [x21, #8]
  41950c:	mov	w0, #0x2                   	// #2
  419510:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419514:	mov	w0, #0x2                   	// #2
  419518:	tbnz	w22, #14, 41937c <_obstack_memory_used@@Base+0x2594>
  41951c:	mov	w0, #0x4                   	// #4
  419520:	strb	w0, [x21, #8]
  419524:	sub	w0, w20, #0x31
  419528:	sxtw	x0, w0
  41952c:	str	x0, [x21]
  419530:	mov	w0, #0x2                   	// #2
  419534:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419538:	mov	w0, #0x2                   	// #2
  41953c:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  419540:	mov	w0, #0xc                   	// #12
  419544:	strb	w0, [x21, #8]
  419548:	mov	w0, #0x6                   	// #6
  41954c:	str	w0, [x21]
  419550:	mov	w0, #0x2                   	// #2
  419554:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419558:	mov	w0, #0x2                   	// #2
  41955c:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  419560:	mov	w0, #0xc                   	// #12
  419564:	strb	w0, [x21, #8]
  419568:	mov	w0, #0x9                   	// #9
  41956c:	str	w0, [x21]
  419570:	mov	w0, #0x2                   	// #2
  419574:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419578:	mov	w0, #0x2                   	// #2
  41957c:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  419580:	mov	w0, #0xc                   	// #12
  419584:	strb	w0, [x21, #8]
  419588:	mov	w0, #0x100                 	// #256
  41958c:	str	w0, [x21]
  419590:	mov	w0, #0x2                   	// #2
  419594:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419598:	mov	w0, #0x2                   	// #2
  41959c:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  4195a0:	mov	w0, #0xc                   	// #12
  4195a4:	strb	w0, [x21, #8]
  4195a8:	mov	w0, #0x200                 	// #512
  4195ac:	str	w0, [x21]
  4195b0:	mov	w0, #0x2                   	// #2
  4195b4:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4195b8:	mov	w0, #0x2                   	// #2
  4195bc:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  4195c0:	mov	w0, #0x20                  	// #32
  4195c4:	strb	w0, [x21, #8]
  4195c8:	mov	w0, #0x2                   	// #2
  4195cc:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4195d0:	mov	w0, #0x2                   	// #2
  4195d4:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  4195d8:	mov	w0, #0x21                  	// #33
  4195dc:	strb	w0, [x21, #8]
  4195e0:	mov	w0, #0x2                   	// #2
  4195e4:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4195e8:	mov	w0, #0x2                   	// #2
  4195ec:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  4195f0:	mov	w0, #0x22                  	// #34
  4195f4:	strb	w0, [x21, #8]
  4195f8:	mov	w0, #0x2                   	// #2
  4195fc:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419600:	mov	w0, #0x2                   	// #2
  419604:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  419608:	mov	w0, #0x23                  	// #35
  41960c:	strb	w0, [x21, #8]
  419610:	mov	w0, #0x2                   	// #2
  419614:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419618:	mov	w0, #0x2                   	// #2
  41961c:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  419620:	mov	w0, #0xc                   	// #12
  419624:	strb	w0, [x21, #8]
  419628:	mov	w0, #0x40                  	// #64
  41962c:	str	w0, [x21]
  419630:	mov	w0, #0x2                   	// #2
  419634:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419638:	mov	w0, #0x2                   	// #2
  41963c:	tbnz	w22, #19, 41937c <_obstack_memory_used@@Base+0x2594>
  419640:	mov	w0, #0xc                   	// #12
  419644:	strb	w0, [x21, #8]
  419648:	mov	w0, #0x80                  	// #128
  41964c:	str	w0, [x21]
  419650:	mov	w0, #0x2                   	// #2
  419654:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419658:	mov	w0, #0x2                   	// #2
  41965c:	tbnz	w22, #13, 41937c <_obstack_memory_used@@Base+0x2594>
  419660:	mov	w0, #0x8                   	// #8
  419664:	strb	w0, [x21, #8]
  419668:	mov	w0, #0x2                   	// #2
  41966c:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419670:	mov	w0, #0x2                   	// #2
  419674:	tbnz	w22, #13, 41937c <_obstack_memory_used@@Base+0x2594>
  419678:	mov	w0, #0x9                   	// #9
  41967c:	strb	w0, [x21, #8]
  419680:	mov	w0, #0x2                   	// #2
  419684:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419688:	mov	x2, #0x402                 	// #1026
  41968c:	and	x2, x22, x2
  419690:	mov	w0, #0x2                   	// #2
  419694:	cmp	x2, #0x2
  419698:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  41969c:	mov	w0, #0x12                  	// #18
  4196a0:	strb	w0, [x21, #8]
  4196a4:	mov	w0, #0x2                   	// #2
  4196a8:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4196ac:	mov	x2, #0x402                 	// #1026
  4196b0:	and	x2, x22, x2
  4196b4:	mov	w0, #0x2                   	// #2
  4196b8:	cmp	x2, #0x2
  4196bc:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  4196c0:	mov	w0, #0x13                  	// #19
  4196c4:	strb	w0, [x21, #8]
  4196c8:	mov	w0, #0x2                   	// #2
  4196cc:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4196d0:	mov	x2, #0x1200                	// #4608
  4196d4:	and	x2, x22, x2
  4196d8:	mov	w0, #0x2                   	// #2
  4196dc:	cmp	x2, #0x200
  4196e0:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  4196e4:	mov	w0, #0x17                  	// #23
  4196e8:	strb	w0, [x21, #8]
  4196ec:	mov	w0, #0x2                   	// #2
  4196f0:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4196f4:	mov	x2, #0x1200                	// #4608
  4196f8:	and	x2, x22, x2
  4196fc:	mov	w0, #0x2                   	// #2
  419700:	cmp	x2, #0x200
  419704:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419708:	mov	w0, #0x18                  	// #24
  41970c:	strb	w0, [x21, #8]
  419710:	mov	w0, #0x2                   	// #2
  419714:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419718:	bl	402650 <__ctype_b_loc@plt>
  41971c:	and	x1, x20, #0xff
  419720:	ldr	x0, [x0]
  419724:	ldrh	w0, [x0, x1, lsl #1]
  419728:	and	w0, w0, #0x8
  41972c:	cmp	w20, #0x5f
  419730:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  419734:	cset	w1, ne  // ne = any
  419738:	ldrb	w0, [x21, #10]
  41973c:	bfi	w0, w1, #6, #1
  419740:	strb	w0, [x21, #10]
  419744:	b	419324 <_obstack_memory_used@@Base+0x253c>
  419748:	cmp	w20, #0x29
  41974c:	b.eq	4198ac <_obstack_memory_used@@Base+0x2ac4>  // b.none
  419750:	b.ls	419788 <_obstack_memory_used@@Base+0x29a0>  // b.plast
  419754:	cmp	w20, #0x2a
  419758:	b.eq	41987c <_obstack_memory_used@@Base+0x2a94>  // b.none
  41975c:	mov	w0, #0x1                   	// #1
  419760:	cmp	w20, #0x2b
  419764:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419768:	mov	w0, #0x1                   	// #1
  41976c:	mov	x1, #0x402                 	// #1026
  419770:	tst	x22, x1
  419774:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419778:	mov	w0, #0x12                  	// #18
  41977c:	strb	w0, [x21, #8]
  419780:	mov	w0, #0x1                   	// #1
  419784:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419788:	cmp	w20, #0x24
  41978c:	b.eq	4198e4 <_obstack_memory_used@@Base+0x2afc>  // b.none
  419790:	cmp	w20, #0x28
  419794:	b.ne	4197b0 <_obstack_memory_used@@Base+0x29c8>  // b.any
  419798:	mov	w0, #0x1                   	// #1
  41979c:	tbz	w22, #13, 41937c <_obstack_memory_used@@Base+0x2594>
  4197a0:	mov	w0, #0x8                   	// #8
  4197a4:	strb	w0, [x21, #8]
  4197a8:	mov	w0, #0x1                   	// #1
  4197ac:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4197b0:	mov	w0, #0x1                   	// #1
  4197b4:	cmp	w20, #0xa
  4197b8:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  4197bc:	mov	w0, #0x1                   	// #1
  4197c0:	tbz	w22, #11, 41937c <_obstack_memory_used@@Base+0x2594>
  4197c4:	mov	w0, #0xa                   	// #10
  4197c8:	strb	w0, [x21, #8]
  4197cc:	mov	w0, #0x1                   	// #1
  4197d0:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4197d4:	cmp	w20, #0x5b
  4197d8:	b.eq	4198c4 <_obstack_memory_used@@Base+0x2adc>  // b.none
  4197dc:	cmp	w20, #0x5e
  4197e0:	b.ne	41982c <_obstack_memory_used@@Base+0x2a44>  // b.any
  4197e4:	and	x0, x22, #0xfffff8
  4197e8:	and	x0, x0, #0xffffffffff80000f
  4197ec:	cbnz	x0, 419814 <_obstack_memory_used@@Base+0x2a2c>
  4197f0:	ldr	x0, [x19, #72]
  4197f4:	cbz	x0, 419814 <_obstack_memory_used@@Base+0x2a2c>
  4197f8:	ldr	x1, [x19, #8]
  4197fc:	add	x0, x1, x0
  419800:	ldurb	w1, [x0, #-1]
  419804:	tst	x22, #0x800
  419808:	mov	w0, #0x1                   	// #1
  41980c:	ccmp	w1, #0xa, #0x0, ne  // ne = any
  419810:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419814:	mov	w0, #0xc                   	// #12
  419818:	strb	w0, [x21, #8]
  41981c:	mov	w0, #0x10                  	// #16
  419820:	str	w0, [x21]
  419824:	mov	w0, #0x1                   	// #1
  419828:	b	41937c <_obstack_memory_used@@Base+0x2594>
  41982c:	mov	w0, #0x1                   	// #1
  419830:	cmp	w20, #0x3f
  419834:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419838:	mov	w0, #0x1                   	// #1
  41983c:	mov	x1, #0x402                 	// #1026
  419840:	tst	x22, x1
  419844:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  419848:	mov	w0, #0x13                  	// #19
  41984c:	strb	w0, [x21, #8]
  419850:	mov	w0, #0x1                   	// #1
  419854:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419858:	mov	x2, #0x8400                	// #33792
  41985c:	and	x2, x22, x2
  419860:	mov	w0, #0x1                   	// #1
  419864:	cmp	x2, #0x8, lsl #12
  419868:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  41986c:	mov	w0, #0xa                   	// #10
  419870:	strb	w0, [x21, #8]
  419874:	mov	w0, #0x1                   	// #1
  419878:	b	41937c <_obstack_memory_used@@Base+0x2594>
  41987c:	mov	w0, #0xb                   	// #11
  419880:	strb	w0, [x21, #8]
  419884:	mov	w0, #0x1                   	// #1
  419888:	b	41937c <_obstack_memory_used@@Base+0x2594>
  41988c:	mov	w0, #0x1                   	// #1
  419890:	mov	x1, #0x1200                	// #4608
  419894:	bics	xzr, x1, x22
  419898:	b.ne	41937c <_obstack_memory_used@@Base+0x2594>  // b.any
  41989c:	mov	w0, #0x17                  	// #23
  4198a0:	strb	w0, [x21, #8]
  4198a4:	mov	w0, #0x1                   	// #1
  4198a8:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4198ac:	mov	w0, #0x1                   	// #1
  4198b0:	tbz	w22, #13, 41937c <_obstack_memory_used@@Base+0x2594>
  4198b4:	mov	w0, #0x9                   	// #9
  4198b8:	strb	w0, [x21, #8]
  4198bc:	mov	w0, #0x1                   	// #1
  4198c0:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4198c4:	mov	w0, #0x14                  	// #20
  4198c8:	strb	w0, [x21, #8]
  4198cc:	mov	w0, #0x1                   	// #1
  4198d0:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4198d4:	mov	w0, #0x5                   	// #5
  4198d8:	strb	w0, [x21, #8]
  4198dc:	mov	w0, #0x1                   	// #1
  4198e0:	b	41937c <_obstack_memory_used@@Base+0x2594>
  4198e4:	tbnz	w22, #3, 4198fc <_obstack_memory_used@@Base+0x2b14>
  4198e8:	ldr	x0, [x19, #72]
  4198ec:	add	x0, x0, #0x1
  4198f0:	ldr	x1, [x19, #88]
  4198f4:	cmp	x0, x1
  4198f8:	b.ne	419914 <_obstack_memory_used@@Base+0x2b2c>  // b.any
  4198fc:	mov	w0, #0xc                   	// #12
  419900:	strb	w0, [x21, #8]
  419904:	mov	w0, #0x20                  	// #32
  419908:	str	w0, [x21]
  41990c:	mov	w0, #0x1                   	// #1
  419910:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419914:	str	x0, [x19, #72]
  419918:	mov	x2, x22
  41991c:	mov	x1, x19
  419920:	add	x0, sp, #0x40
  419924:	bl	419264 <_obstack_memory_used@@Base+0x247c>
  419928:	ldr	x0, [x19, #72]
  41992c:	sub	x0, x0, #0x1
  419930:	str	x0, [x19, #72]
  419934:	ldrb	w1, [sp, #72]
  419938:	sub	w1, w1, #0x9
  41993c:	and	w1, w1, #0xff
  419940:	mov	w0, #0x1                   	// #1
  419944:	cmp	w1, w0
  419948:	b.hi	41937c <_obstack_memory_used@@Base+0x2594>  // b.pmore
  41994c:	b	4198fc <_obstack_memory_used@@Base+0x2b14>
  419950:	mov	w0, #0x2                   	// #2
  419954:	b	41937c <_obstack_memory_used@@Base+0x2594>
  419958:	ldr	x0, [x19]
  41995c:	ldr	x2, [x19, #40]
  419960:	add	x1, x0, x1
  419964:	ldrb	w20, [x1, x2]
  419968:	b	4193dc <_obstack_memory_used@@Base+0x25f4>
  41996c:	stp	x29, x30, [sp, #-32]!
  419970:	mov	x29, sp
  419974:	str	x19, [sp, #16]
  419978:	mov	x19, x1
  41997c:	bl	419264 <_obstack_memory_used@@Base+0x247c>
  419980:	ldr	x1, [x19, #72]
  419984:	add	x0, x1, w0, sxtw
  419988:	str	x0, [x19, #72]
  41998c:	ldr	x19, [sp, #16]
  419990:	ldp	x29, x30, [sp], #32
  419994:	ret
  419998:	stp	x29, x30, [sp, #-64]!
  41999c:	mov	x29, sp
  4199a0:	stp	x19, x20, [sp, #16]
  4199a4:	stp	x21, x22, [sp, #32]
  4199a8:	stp	x23, x24, [sp, #48]
  4199ac:	mov	x22, x0
  4199b0:	mov	x19, x1
  4199b4:	mov	x21, x2
  4199b8:	mov	x20, #0xffffffffffffffff    	// #-1
  4199bc:	mov	x24, #0x8030                	// #32816
  4199c0:	mov	x23, #0xfffffffffffffffe    	// #-2
  4199c4:	b	4199cc <_obstack_memory_used@@Base+0x2be4>
  4199c8:	mov	x20, x23
  4199cc:	mov	x2, x21
  4199d0:	mov	x1, x22
  4199d4:	mov	x0, x19
  4199d8:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  4199dc:	ldrb	w1, [x19]
  4199e0:	ldrb	w3, [x19, #8]
  4199e4:	cmp	w3, #0x2
  4199e8:	b.eq	419a4c <_obstack_memory_used@@Base+0x2c64>  // b.none
  4199ec:	cmp	w1, #0x2c
  4199f0:	ccmp	w3, #0x18, #0x4, ne  // ne = any
  4199f4:	b.eq	419a50 <_obstack_memory_used@@Base+0x2c68>  // b.none
  4199f8:	cmp	w3, #0x1
  4199fc:	b.ne	4199c8 <_obstack_memory_used@@Base+0x2be0>  // b.any
  419a00:	sub	w0, w1, #0x30
  419a04:	and	w0, w0, #0xff
  419a08:	cmp	w0, #0x9
  419a0c:	ccmn	x20, #0x2, #0x4, ls  // ls = plast
  419a10:	b.ne	419a1c <_obstack_memory_used@@Base+0x2c34>  // b.any
  419a14:	mov	x20, x23
  419a18:	b	4199cc <_obstack_memory_used@@Base+0x2be4>
  419a1c:	cmn	x20, #0x1
  419a20:	b.eq	419a40 <_obstack_memory_used@@Base+0x2c58>  // b.none
  419a24:	add	x20, x20, x20, lsl #2
  419a28:	and	x1, x1, #0xff
  419a2c:	add	x1, x1, x20, lsl #1
  419a30:	cmp	x1, x24
  419a34:	csel	x1, x1, x24, le
  419a38:	sub	x20, x1, #0x30
  419a3c:	b	4199cc <_obstack_memory_used@@Base+0x2be4>
  419a40:	sub	w1, w1, #0x30
  419a44:	sxtw	x20, w1
  419a48:	b	4199cc <_obstack_memory_used@@Base+0x2be4>
  419a4c:	mov	x20, #0xfffffffffffffffe    	// #-2
  419a50:	mov	x0, x20
  419a54:	ldp	x19, x20, [sp, #16]
  419a58:	ldp	x21, x22, [sp, #32]
  419a5c:	ldp	x23, x24, [sp, #48]
  419a60:	ldp	x29, x30, [sp], #64
  419a64:	ret
  419a68:	stp	x29, x30, [sp, #-32]!
  419a6c:	mov	x29, sp
  419a70:	str	x19, [sp, #16]
  419a74:	mov	x19, x0
  419a78:	ldr	x0, [x0]
  419a7c:	bl	402660 <free@plt>
  419a80:	ldr	x0, [x19, #8]
  419a84:	bl	402660 <free@plt>
  419a88:	ldr	x0, [x19, #16]
  419a8c:	bl	402660 <free@plt>
  419a90:	ldr	x0, [x19, #24]
  419a94:	bl	402660 <free@plt>
  419a98:	mov	x0, x19
  419a9c:	bl	402660 <free@plt>
  419aa0:	ldr	x19, [sp, #16]
  419aa4:	ldp	x29, x30, [sp], #32
  419aa8:	ret
  419aac:	stp	x29, x30, [sp, #-16]!
  419ab0:	mov	x29, sp
  419ab4:	ldr	w1, [x0, #8]
  419ab8:	and	w1, w1, #0x7ffff
  419abc:	and	w1, w1, #0xfffc00ff
  419ac0:	cmp	w1, #0x6
  419ac4:	b.eq	419ad8 <_obstack_memory_used@@Base+0x2cf0>  // b.none
  419ac8:	cmp	w1, #0x3
  419acc:	b.eq	419ae4 <_obstack_memory_used@@Base+0x2cfc>  // b.none
  419ad0:	ldp	x29, x30, [sp], #16
  419ad4:	ret
  419ad8:	ldr	x0, [x0]
  419adc:	bl	419a68 <_obstack_memory_used@@Base+0x2c80>
  419ae0:	b	419ad0 <_obstack_memory_used@@Base+0x2ce8>
  419ae4:	ldr	x0, [x0]
  419ae8:	bl	402660 <free@plt>
  419aec:	b	419ad0 <_obstack_memory_used@@Base+0x2ce8>
  419af0:	stp	x29, x30, [sp, #-16]!
  419af4:	mov	x29, sp
  419af8:	add	x0, x1, #0x28
  419afc:	bl	419aac <_obstack_memory_used@@Base+0x2cc4>
  419b00:	mov	w0, #0x0                   	// #0
  419b04:	ldp	x29, x30, [sp], #16
  419b08:	ret
  419b0c:	stp	x29, x30, [sp, #-96]!
  419b10:	mov	x29, sp
  419b14:	stp	x19, x20, [sp, #16]
  419b18:	stp	x21, x22, [sp, #32]
  419b1c:	stp	x23, x24, [sp, #48]
  419b20:	mov	x19, x0
  419b24:	mov	x21, x1
  419b28:	mov	x20, x2
  419b2c:	and	w22, w2, #0xff
  419b30:	ldr	x23, [x0, #8]
  419b34:	ldr	x0, [x0, #16]
  419b38:	cmp	x0, x23
  419b3c:	b.cs	419bf8 <_obstack_memory_used@@Base+0x2e10>  // b.hs, b.nlast
  419b40:	ldr	x0, [x19, #16]
  419b44:	ldr	x1, [x19]
  419b48:	lsl	x0, x0, #4
  419b4c:	add	x2, x1, x0
  419b50:	str	x21, [x1, x0]
  419b54:	str	x20, [x2, #8]
  419b58:	ldr	x0, [x19, #16]
  419b5c:	ldr	x1, [x19]
  419b60:	add	x0, x1, x0, lsl #4
  419b64:	ldr	w1, [x0, #8]
  419b68:	and	w1, w1, #0xfffc00ff
  419b6c:	str	w1, [x0, #8]
  419b70:	cmp	w22, #0x5
  419b74:	b.eq	419cdc <_obstack_memory_used@@Base+0x2ef4>  // b.none
  419b78:	cmp	w22, #0x6
  419b7c:	cset	w2, eq  // eq = none
  419b80:	ldr	x0, [x19, #16]
  419b84:	ldr	x1, [x19]
  419b88:	add	x0, x1, x0, lsl #4
  419b8c:	ldrb	w1, [x0, #10]
  419b90:	bfi	w1, w2, #4, #1
  419b94:	strb	w1, [x0, #10]
  419b98:	ldr	x1, [x19, #16]
  419b9c:	ldr	x0, [x19, #24]
  419ba0:	mov	x2, #0xffffffffffffffff    	// #-1
  419ba4:	str	x2, [x0, x1, lsl #3]
  419ba8:	ldr	x0, [x19, #16]
  419bac:	add	x0, x0, x0, lsl #1
  419bb0:	ldr	x1, [x19, #40]
  419bb4:	add	x0, x1, x0, lsl #3
  419bb8:	stp	xzr, xzr, [x0]
  419bbc:	str	xzr, [x0, #16]
  419bc0:	ldr	x0, [x19, #16]
  419bc4:	add	x0, x0, x0, lsl #1
  419bc8:	ldr	x1, [x19, #48]
  419bcc:	add	x0, x1, x0, lsl #3
  419bd0:	stp	xzr, xzr, [x0]
  419bd4:	str	xzr, [x0, #16]
  419bd8:	ldr	x0, [x19, #16]
  419bdc:	add	x1, x0, #0x1
  419be0:	str	x1, [x19, #16]
  419be4:	ldp	x19, x20, [sp, #16]
  419be8:	ldp	x21, x22, [sp, #32]
  419bec:	ldp	x23, x24, [sp, #48]
  419bf0:	ldp	x29, x30, [sp], #96
  419bf4:	ret
  419bf8:	lsl	x24, x23, #1
  419bfc:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  419c00:	movk	x0, #0xaaa, lsl #48
  419c04:	cmp	x0, x23, lsl #1
  419c08:	b.cc	419cf0 <_obstack_memory_used@@Base+0x2f08>  // b.lo, b.ul, b.last
  419c0c:	lsl	x1, x23, #5
  419c10:	ldr	x0, [x19]
  419c14:	bl	402500 <realloc@plt>
  419c18:	cbz	x0, 419cf8 <_obstack_memory_used@@Base+0x2f10>
  419c1c:	stp	x25, x26, [sp, #64]
  419c20:	str	x27, [sp, #80]
  419c24:	str	x0, [x19]
  419c28:	lsl	x25, x23, #4
  419c2c:	mov	x1, x25
  419c30:	ldr	x0, [x19, #24]
  419c34:	bl	402500 <realloc@plt>
  419c38:	mov	x26, x0
  419c3c:	mov	x1, x25
  419c40:	ldr	x0, [x19, #32]
  419c44:	bl	402500 <realloc@plt>
  419c48:	mov	x25, x0
  419c4c:	add	x23, x23, x23, lsl #1
  419c50:	lsl	x23, x23, #4
  419c54:	mov	x1, x23
  419c58:	ldr	x0, [x19, #40]
  419c5c:	bl	402500 <realloc@plt>
  419c60:	mov	x27, x0
  419c64:	mov	x1, x23
  419c68:	ldr	x0, [x19, #48]
  419c6c:	bl	402500 <realloc@plt>
  419c70:	mov	x23, x0
  419c74:	cmp	x26, #0x0
  419c78:	ccmp	x25, #0x0, #0x4, ne  // ne = any
  419c7c:	b.eq	419cac <_obstack_memory_used@@Base+0x2ec4>  // b.none
  419c80:	cmp	x27, #0x0
  419c84:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  419c88:	b.eq	419cac <_obstack_memory_used@@Base+0x2ec4>  // b.none
  419c8c:	str	x26, [x19, #24]
  419c90:	str	x25, [x19, #32]
  419c94:	str	x27, [x19, #40]
  419c98:	str	x0, [x19, #48]
  419c9c:	str	x24, [x19, #8]
  419ca0:	ldp	x25, x26, [sp, #64]
  419ca4:	ldr	x27, [sp, #80]
  419ca8:	b	419b40 <_obstack_memory_used@@Base+0x2d58>
  419cac:	mov	x0, x26
  419cb0:	bl	402660 <free@plt>
  419cb4:	mov	x0, x25
  419cb8:	bl	402660 <free@plt>
  419cbc:	mov	x0, x27
  419cc0:	bl	402660 <free@plt>
  419cc4:	mov	x0, x23
  419cc8:	bl	402660 <free@plt>
  419ccc:	mov	x0, #0xffffffffffffffff    	// #-1
  419cd0:	ldp	x25, x26, [sp, #64]
  419cd4:	ldr	x27, [sp, #80]
  419cd8:	b	419be4 <_obstack_memory_used@@Base+0x2dfc>
  419cdc:	ldr	w0, [x19, #180]
  419ce0:	mov	w2, #0x1                   	// #1
  419ce4:	cmp	w0, w2
  419ce8:	b.gt	419b80 <_obstack_memory_used@@Base+0x2d98>
  419cec:	b	419b78 <_obstack_memory_used@@Base+0x2d90>
  419cf0:	mov	x0, #0xffffffffffffffff    	// #-1
  419cf4:	b	419be4 <_obstack_memory_used@@Base+0x2dfc>
  419cf8:	mov	x0, #0xffffffffffffffff    	// #-1
  419cfc:	b	419be4 <_obstack_memory_used@@Base+0x2dfc>
  419d00:	stp	x29, x30, [sp, #-32]!
  419d04:	mov	x29, sp
  419d08:	stp	x19, x20, [sp, #16]
  419d0c:	mov	x20, x0
  419d10:	mov	x19, x1
  419d14:	ldrb	w0, [x1, #48]
  419d18:	cmp	w0, #0x10
  419d1c:	b.ne	419d44 <_obstack_memory_used@@Base+0x2f5c>  // b.any
  419d20:	ldr	x0, [x1, #8]
  419d24:	ldr	x1, [x0, #24]
  419d28:	str	x1, [x19, #24]
  419d2c:	ldr	x0, [x0, #56]
  419d30:	str	x0, [x19, #56]
  419d34:	mov	w0, #0x0                   	// #0
  419d38:	ldp	x19, x20, [sp, #16]
  419d3c:	ldp	x29, x30, [sp], #32
  419d40:	ret
  419d44:	str	x1, [x19, #24]
  419d48:	ldp	x1, x2, [x1, #40]
  419d4c:	mov	x0, x20
  419d50:	bl	419b0c <_obstack_memory_used@@Base+0x2d24>
  419d54:	mov	x1, x0
  419d58:	str	x0, [x19, #56]
  419d5c:	cmn	x0, #0x1
  419d60:	b.eq	419d94 <_obstack_memory_used@@Base+0x2fac>  // b.none
  419d64:	ldrb	w2, [x19, #48]
  419d68:	mov	w0, #0x0                   	// #0
  419d6c:	cmp	w2, #0xc
  419d70:	b.ne	419d38 <_obstack_memory_used@@Base+0x2f50>  // b.any
  419d74:	ldr	x0, [x20]
  419d78:	add	x1, x0, x1, lsl #4
  419d7c:	ldr	w0, [x1, #8]
  419d80:	ldr	w2, [x19, #40]
  419d84:	bfi	w0, w2, #8, #10
  419d88:	str	w0, [x1, #8]
  419d8c:	mov	w0, #0x0                   	// #0
  419d90:	b	419d38 <_obstack_memory_used@@Base+0x2f50>
  419d94:	mov	w0, #0xc                   	// #12
  419d98:	b	419d38 <_obstack_memory_used@@Base+0x2f50>
  419d9c:	stp	x29, x30, [sp, #-48]!
  419da0:	mov	x29, sp
  419da4:	stp	x19, x20, [sp, #16]
  419da8:	stp	x21, x22, [sp, #32]
  419dac:	mov	x19, x0
  419db0:	mov	x20, x1
  419db4:	mov	w22, w2
  419db8:	lsl	x21, x1, #4
  419dbc:	ldr	x1, [x0]
  419dc0:	add	x1, x1, x21
  419dc4:	ldp	x2, x3, [x1]
  419dc8:	mov	x1, x2
  419dcc:	mov	x2, x3
  419dd0:	bl	419b0c <_obstack_memory_used@@Base+0x2d24>
  419dd4:	cmn	x0, #0x1
  419dd8:	b.eq	419e38 <_obstack_memory_used@@Base+0x3050>  // b.none
  419ddc:	lsl	x3, x0, #4
  419de0:	ldr	x1, [x19]
  419de4:	add	x1, x1, x3
  419de8:	ldr	w2, [x1, #8]
  419dec:	bfi	w2, w22, #8, #10
  419df0:	str	w2, [x1, #8]
  419df4:	ldr	x1, [x19]
  419df8:	add	x5, x1, x3
  419dfc:	add	x1, x1, x21
  419e00:	ldr	w4, [x1, #8]
  419e04:	ubfx	x4, x4, #8, #10
  419e08:	ldr	w2, [x5, #8]
  419e0c:	ubfx	x1, x2, #8, #10
  419e10:	orr	w4, w4, w1
  419e14:	bfi	w2, w4, #8, #10
  419e18:	str	w2, [x5, #8]
  419e1c:	ldr	x1, [x19]
  419e20:	add	x3, x1, x3
  419e24:	ldrb	w1, [x3, #10]
  419e28:	orr	w1, w1, #0x4
  419e2c:	strb	w1, [x3, #10]
  419e30:	ldr	x1, [x19, #32]
  419e34:	str	x20, [x1, x0, lsl #3]
  419e38:	ldp	x19, x20, [sp, #16]
  419e3c:	ldp	x21, x22, [sp, #32]
  419e40:	ldp	x29, x30, [sp], #48
  419e44:	ret
  419e48:	stp	x29, x30, [sp, #-80]!
  419e4c:	mov	x29, sp
  419e50:	stp	x19, x20, [sp, #16]
  419e54:	stp	x21, x22, [sp, #32]
  419e58:	stp	x23, x24, [sp, #48]
  419e5c:	stp	x25, x26, [sp, #64]
  419e60:	mov	x20, x0
  419e64:	mov	x21, x1
  419e68:	mov	x19, x2
  419e6c:	mov	x25, x3
  419e70:	mov	w23, w4
  419e74:	b	41a028 <_obstack_memory_used@@Base+0x3240>
  419e78:	lsl	x26, x21, #3
  419e7c:	ldr	x0, [x20, #24]
  419e80:	ldr	x21, [x0, x21, lsl #3]
  419e84:	mov	x24, x19
  419e88:	add	x19, x19, x19, lsl #1
  419e8c:	lsl	x22, x19, #3
  419e90:	ldr	x0, [x20, #40]
  419e94:	add	x0, x0, x22
  419e98:	str	xzr, [x0, #8]
  419e9c:	mov	w2, w23
  419ea0:	mov	x1, x21
  419ea4:	mov	x0, x20
  419ea8:	bl	419d9c <_obstack_memory_used@@Base+0x2fb4>
  419eac:	mov	x19, x0
  419eb0:	cmn	x0, #0x1
  419eb4:	b.eq	41a108 <_obstack_memory_used@@Base+0x3320>  // b.none
  419eb8:	ldr	x0, [x20, #24]
  419ebc:	ldr	x1, [x0, x26]
  419ec0:	str	x1, [x0, x24, lsl #3]
  419ec4:	ldr	x0, [x20, #40]
  419ec8:	mov	x1, x19
  419ecc:	add	x0, x0, x22
  419ed0:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  419ed4:	and	w0, w0, #0xff
  419ed8:	cbnz	w0, 41a028 <_obstack_memory_used@@Base+0x3240>
  419edc:	mov	w0, #0xc                   	// #12
  419ee0:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  419ee4:	ldr	x0, [x20, #24]
  419ee8:	ldr	x1, [x0, x21, lsl #3]
  419eec:	str	x1, [x0, x19, lsl #3]
  419ef0:	mov	w0, #0x0                   	// #0
  419ef4:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  419ef8:	ldr	x0, [x2, #16]
  419efc:	ldr	x24, [x0]
  419f00:	add	x22, x19, x19, lsl #1
  419f04:	lsl	x22, x22, #3
  419f08:	add	x1, x1, x22
  419f0c:	str	xzr, [x1, #8]
  419f10:	cmp	x21, x25
  419f14:	ccmp	x21, x19, #0x4, eq  // eq = none
  419f18:	b.ne	419f6c <_obstack_memory_used@@Base+0x3184>  // b.any
  419f1c:	ldr	x0, [x20]
  419f20:	add	x3, x0, x3
  419f24:	ldr	w0, [x3, #8]
  419f28:	ubfx	x0, x0, #8, #10
  419f2c:	orr	w23, w23, w0
  419f30:	mov	w2, w23
  419f34:	mov	x1, x24
  419f38:	mov	x0, x20
  419f3c:	bl	419d9c <_obstack_memory_used@@Base+0x2fb4>
  419f40:	mov	x19, x0
  419f44:	cmn	x0, #0x1
  419f48:	b.eq	41a110 <_obstack_memory_used@@Base+0x3328>  // b.none
  419f4c:	ldr	x0, [x20, #40]
  419f50:	mov	x1, x19
  419f54:	add	x0, x0, x22
  419f58:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  419f5c:	and	w0, w0, #0xff
  419f60:	cbz	w0, 419f8c <_obstack_memory_used@@Base+0x31a4>
  419f64:	mov	x21, x24
  419f68:	b	41a028 <_obstack_memory_used@@Base+0x3240>
  419f6c:	ldr	x2, [x20, #40]
  419f70:	mov	x1, x24
  419f74:	add	x0, x2, x22
  419f78:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  419f7c:	ands	w0, w0, #0xff
  419f80:	mov	w0, #0xc                   	// #12
  419f84:	csel	w0, w0, wzr, eq  // eq = none
  419f88:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  419f8c:	mov	w0, #0xc                   	// #12
  419f90:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  419f94:	sub	x1, x1, #0x1
  419f98:	add	x2, x2, x5
  419f9c:	ldrb	w0, [x2, #10]
  419fa0:	tst	x0, #0x4
  419fa4:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  419fa8:	b.le	41a0ac <_obstack_memory_used@@Base+0x32c4>
  419fac:	ldr	x0, [x3, x1, lsl #3]
  419fb0:	cmp	x21, x0
  419fb4:	b.ne	419f94 <_obstack_memory_used@@Base+0x31ac>  // b.any
  419fb8:	ldr	w0, [x2, #8]
  419fbc:	ubfx	x0, x0, #8, #10
  419fc0:	cmp	w23, w0
  419fc4:	b.ne	419f94 <_obstack_memory_used@@Base+0x31ac>  // b.any
  419fc8:	cmn	x1, #0x1
  419fcc:	b.eq	41a0ac <_obstack_memory_used@@Base+0x32c4>  // b.none
  419fd0:	ldr	x0, [x20, #40]
  419fd4:	add	x0, x0, x24
  419fd8:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  419fdc:	and	w0, w0, #0xff
  419fe0:	cbz	w0, 41a128 <_obstack_memory_used@@Base+0x3340>
  419fe4:	ldr	x0, [x20, #40]
  419fe8:	add	x22, x0, x22
  419fec:	ldr	x0, [x22, #16]
  419ff0:	ldr	x21, [x0, #8]
  419ff4:	mov	w2, w23
  419ff8:	mov	x1, x21
  419ffc:	mov	x0, x20
  41a000:	bl	419d9c <_obstack_memory_used@@Base+0x2fb4>
  41a004:	mov	x19, x0
  41a008:	cmn	x0, #0x1
  41a00c:	b.eq	41a130 <_obstack_memory_used@@Base+0x3348>  // b.none
  41a010:	ldr	x0, [x20, #40]
  41a014:	mov	x1, x19
  41a018:	add	x0, x0, x24
  41a01c:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41a020:	and	w0, w0, #0xff
  41a024:	cbz	w0, 41a100 <_obstack_memory_used@@Base+0x3318>
  41a028:	lsl	x3, x21, #4
  41a02c:	ldr	x0, [x20]
  41a030:	add	x0, x0, x3
  41a034:	ldrb	w0, [x0, #8]
  41a038:	cmp	w0, #0x4
  41a03c:	b.eq	419e78 <_obstack_memory_used@@Base+0x3090>  // b.none
  41a040:	ldr	x1, [x20, #40]
  41a044:	add	x22, x21, x21, lsl #1
  41a048:	lsl	x22, x22, #3
  41a04c:	add	x2, x1, x22
  41a050:	ldr	x0, [x2, #8]
  41a054:	cbz	x0, 419ee4 <_obstack_memory_used@@Base+0x30fc>
  41a058:	cmp	x0, #0x1
  41a05c:	b.eq	419ef8 <_obstack_memory_used@@Base+0x3110>  // b.none
  41a060:	ldr	x0, [x2, #16]
  41a064:	ldr	x21, [x0]
  41a068:	add	x19, x19, x19, lsl #1
  41a06c:	lsl	x24, x19, #3
  41a070:	add	x1, x1, x24
  41a074:	str	xzr, [x1, #8]
  41a078:	ldr	x5, [x20, #16]
  41a07c:	sub	x1, x5, #0x1
  41a080:	ldr	x0, [x20]
  41a084:	add	x2, x0, x1, lsl #4
  41a088:	ldrb	w3, [x2, #10]
  41a08c:	tst	x3, #0x4
  41a090:	ccmp	x1, #0x0, #0x4, ne  // ne = any
  41a094:	b.le	41a0ac <_obstack_memory_used@@Base+0x32c4>
  41a098:	ldr	x3, [x20, #32]
  41a09c:	add	x5, x0, x5, lsl #4
  41a0a0:	sub	x5, x5, x2
  41a0a4:	sub	x5, x5, #0x20
  41a0a8:	b	419fac <_obstack_memory_used@@Base+0x31c4>
  41a0ac:	mov	w2, w23
  41a0b0:	mov	x1, x21
  41a0b4:	mov	x0, x20
  41a0b8:	bl	419d9c <_obstack_memory_used@@Base+0x2fb4>
  41a0bc:	mov	x19, x0
  41a0c0:	cmn	x0, #0x1
  41a0c4:	b.eq	41a118 <_obstack_memory_used@@Base+0x3330>  // b.none
  41a0c8:	ldr	x0, [x20, #40]
  41a0cc:	mov	x1, x19
  41a0d0:	add	x0, x0, x24
  41a0d4:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41a0d8:	and	w0, w0, #0xff
  41a0dc:	cbz	w0, 41a120 <_obstack_memory_used@@Base+0x3338>
  41a0e0:	mov	w4, w23
  41a0e4:	mov	x3, x25
  41a0e8:	mov	x2, x19
  41a0ec:	mov	x1, x21
  41a0f0:	mov	x0, x20
  41a0f4:	bl	419e48 <_obstack_memory_used@@Base+0x3060>
  41a0f8:	cbz	w0, 419fe4 <_obstack_memory_used@@Base+0x31fc>
  41a0fc:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a100:	mov	w0, #0xc                   	// #12
  41a104:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a108:	mov	w0, #0xc                   	// #12
  41a10c:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a110:	mov	w0, #0xc                   	// #12
  41a114:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a118:	mov	w0, #0xc                   	// #12
  41a11c:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a120:	mov	w0, #0xc                   	// #12
  41a124:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a128:	mov	w0, #0xc                   	// #12
  41a12c:	b	41a134 <_obstack_memory_used@@Base+0x334c>
  41a130:	mov	w0, #0xc                   	// #12
  41a134:	ldp	x19, x20, [sp, #16]
  41a138:	ldp	x21, x22, [sp, #32]
  41a13c:	ldp	x23, x24, [sp, #48]
  41a140:	ldp	x25, x26, [sp, #64]
  41a144:	ldp	x29, x30, [sp], #80
  41a148:	ret
  41a14c:	stp	x29, x30, [sp, #-160]!
  41a150:	mov	x29, sp
  41a154:	stp	x19, x20, [sp, #16]
  41a158:	stp	x21, x22, [sp, #32]
  41a15c:	stp	x23, x24, [sp, #48]
  41a160:	stp	x25, x26, [sp, #64]
  41a164:	stp	x27, x28, [sp, #80]
  41a168:	mov	x25, x0
  41a16c:	mov	x19, x1
  41a170:	mov	x23, x2
  41a174:	and	w28, w3, #0xff
  41a178:	add	x22, x2, x2, lsl #1
  41a17c:	lsl	x22, x22, #3
  41a180:	ldr	x0, [x1, #40]
  41a184:	add	x0, x0, x22
  41a188:	ldr	x1, [x0, #8]
  41a18c:	add	x1, x1, #0x1
  41a190:	add	x0, sp, #0x88
  41a194:	bl	418164 <_obstack_memory_used@@Base+0x137c>
  41a198:	mov	w24, w0
  41a19c:	cbnz	w0, 41a330 <_obstack_memory_used@@Base+0x3548>
  41a1a0:	mov	x26, x22
  41a1a4:	ldr	x0, [x19, #48]
  41a1a8:	add	x0, x0, x22
  41a1ac:	mov	x1, #0xffffffffffffffff    	// #-1
  41a1b0:	str	x1, [x0, #8]
  41a1b4:	ldr	x0, [x19]
  41a1b8:	lsl	x20, x23, #4
  41a1bc:	add	x2, x0, x20
  41a1c0:	ldr	w1, [x2, #8]
  41a1c4:	tst	w1, #0x3ff00
  41a1c8:	b.eq	41a1f0 <_obstack_memory_used@@Base+0x3408>  // b.none
  41a1cc:	ldr	x1, [x19, #40]
  41a1d0:	add	x1, x1, x22
  41a1d4:	ldr	x3, [x1, #8]
  41a1d8:	cbz	x3, 41a358 <_obstack_memory_used@@Base+0x3570>
  41a1dc:	ldr	x1, [x1, #16]
  41a1e0:	ldr	x1, [x1]
  41a1e4:	add	x0, x0, x1, lsl #4
  41a1e8:	ldrb	w0, [x0, #10]
  41a1ec:	tbz	w0, #2, 41a224 <_obstack_memory_used@@Base+0x343c>
  41a1f0:	ldr	x0, [x19]
  41a1f4:	add	x0, x0, x20
  41a1f8:	ldrb	w0, [x0, #8]
  41a1fc:	tbz	w0, #3, 41a358 <_obstack_memory_used@@Base+0x3570>
  41a200:	ldr	x0, [x19, #40]
  41a204:	add	x0, x0, x22
  41a208:	ldr	x1, [x0, #8]
  41a20c:	cmp	x1, #0x0
  41a210:	b.le	41a358 <_obstack_memory_used@@Base+0x3570>
  41a214:	str	wzr, [sp, #108]
  41a218:	mov	x21, #0x0                   	// #0
  41a21c:	mov	w27, #0x1                   	// #1
  41a220:	b	41a294 <_obstack_memory_used@@Base+0x34ac>
  41a224:	ldr	w4, [x2, #8]
  41a228:	ubfx	x4, x4, #8, #10
  41a22c:	mov	x3, x23
  41a230:	mov	x2, x23
  41a234:	mov	x1, x23
  41a238:	mov	x0, x19
  41a23c:	bl	419e48 <_obstack_memory_used@@Base+0x3060>
  41a240:	cbz	w0, 41a1f0 <_obstack_memory_used@@Base+0x3408>
  41a244:	mov	w24, w0
  41a248:	b	41a330 <_obstack_memory_used@@Base+0x3548>
  41a24c:	str	w27, [sp, #108]
  41a250:	b	41a27c <_obstack_memory_used@@Base+0x3494>
  41a254:	mov	w3, #0x0                   	// #0
  41a258:	mov	x1, x19
  41a25c:	add	x0, sp, #0x70
  41a260:	bl	41a14c <_obstack_memory_used@@Base+0x3364>
  41a264:	cbz	w0, 41a2cc <_obstack_memory_used@@Base+0x34e4>
  41a268:	mov	w24, w0
  41a26c:	b	41a330 <_obstack_memory_used@@Base+0x3548>
  41a270:	ldr	x0, [sp, #128]
  41a274:	bl	402660 <free@plt>
  41a278:	str	w27, [sp, #108]
  41a27c:	add	x21, x21, #0x1
  41a280:	ldr	x0, [x19, #40]
  41a284:	add	x0, x0, x26
  41a288:	ldr	x1, [x0, #8]
  41a28c:	cmp	x1, x21
  41a290:	b.le	41a2f0 <_obstack_memory_used@@Base+0x3508>
  41a294:	ldr	x0, [x0, #16]
  41a298:	ldr	x2, [x0, x21, lsl #3]
  41a29c:	add	x20, x2, x2, lsl #1
  41a2a0:	lsl	x20, x20, #3
  41a2a4:	ldr	x0, [x19, #48]
  41a2a8:	add	x0, x0, x20
  41a2ac:	ldr	x1, [x0, #8]
  41a2b0:	cmn	x1, #0x1
  41a2b4:	b.eq	41a24c <_obstack_memory_used@@Base+0x3464>  // b.none
  41a2b8:	cbz	x1, 41a254 <_obstack_memory_used@@Base+0x346c>
  41a2bc:	ldp	x2, x3, [x0]
  41a2c0:	stp	x2, x3, [sp, #112]
  41a2c4:	ldr	x0, [x0, #16]
  41a2c8:	str	x0, [sp, #128]
  41a2cc:	add	x1, sp, #0x70
  41a2d0:	add	x0, sp, #0x88
  41a2d4:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  41a2d8:	cbnz	w0, 41a268 <_obstack_memory_used@@Base+0x3480>
  41a2dc:	ldr	x0, [x19, #48]
  41a2e0:	add	x20, x0, x20
  41a2e4:	ldr	x0, [x20, #8]
  41a2e8:	cbnz	x0, 41a27c <_obstack_memory_used@@Base+0x3494>
  41a2ec:	b	41a270 <_obstack_memory_used@@Base+0x3488>
  41a2f0:	mov	x1, x23
  41a2f4:	add	x0, sp, #0x88
  41a2f8:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41a2fc:	and	w0, w0, #0xff
  41a300:	cbz	w0, 41a350 <_obstack_memory_used@@Base+0x3568>
  41a304:	eor	w28, w28, #0x1
  41a308:	ldr	w0, [sp, #108]
  41a30c:	tst	w0, w28
  41a310:	b.eq	41a36c <_obstack_memory_used@@Base+0x3584>  // b.none
  41a314:	ldr	x0, [x19, #48]
  41a318:	add	x22, x0, x22
  41a31c:	str	xzr, [x22, #8]
  41a320:	ldp	x0, x1, [sp, #136]
  41a324:	stp	x0, x1, [x25]
  41a328:	ldr	x0, [sp, #152]
  41a32c:	str	x0, [x25, #16]
  41a330:	mov	w0, w24
  41a334:	ldp	x19, x20, [sp, #16]
  41a338:	ldp	x21, x22, [sp, #32]
  41a33c:	ldp	x23, x24, [sp, #48]
  41a340:	ldp	x25, x26, [sp, #64]
  41a344:	ldp	x27, x28, [sp, #80]
  41a348:	ldp	x29, x30, [sp], #160
  41a34c:	ret
  41a350:	mov	w24, #0xc                   	// #12
  41a354:	b	41a330 <_obstack_memory_used@@Base+0x3548>
  41a358:	mov	x1, x23
  41a35c:	add	x0, sp, #0x88
  41a360:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41a364:	and	w0, w0, #0xff
  41a368:	cbz	w0, 41a388 <_obstack_memory_used@@Base+0x35a0>
  41a36c:	ldr	x0, [x19, #48]
  41a370:	add	x22, x0, x22
  41a374:	ldp	x0, x1, [sp, #136]
  41a378:	stp	x0, x1, [x22]
  41a37c:	ldr	x0, [sp, #152]
  41a380:	str	x0, [x22, #16]
  41a384:	b	41a320 <_obstack_memory_used@@Base+0x3538>
  41a388:	mov	w24, #0xc                   	// #12
  41a38c:	b	41a330 <_obstack_memory_used@@Base+0x3548>
  41a390:	stp	x29, x30, [sp, #-32]!
  41a394:	mov	x29, sp
  41a398:	str	x19, [sp, #16]
  41a39c:	mov	x19, x0
  41a3a0:	ldr	x0, [x0, #48]
  41a3a4:	bl	402660 <free@plt>
  41a3a8:	ldr	x0, [x19, #72]
  41a3ac:	bl	402660 <free@plt>
  41a3b0:	ldr	x0, [x19, #80]
  41a3b4:	add	x1, x19, #0x8
  41a3b8:	cmp	x0, x1
  41a3bc:	b.eq	41a3d0 <_obstack_memory_used@@Base+0x35e8>  // b.none
  41a3c0:	ldr	x0, [x0, #16]
  41a3c4:	bl	402660 <free@plt>
  41a3c8:	ldr	x0, [x19, #80]
  41a3cc:	bl	402660 <free@plt>
  41a3d0:	ldr	x0, [x19, #24]
  41a3d4:	bl	402660 <free@plt>
  41a3d8:	ldr	x0, [x19, #96]
  41a3dc:	bl	402660 <free@plt>
  41a3e0:	ldr	x0, [x19, #88]
  41a3e4:	bl	402660 <free@plt>
  41a3e8:	mov	x0, x19
  41a3ec:	bl	402660 <free@plt>
  41a3f0:	ldr	x19, [sp, #16]
  41a3f4:	ldp	x29, x30, [sp], #32
  41a3f8:	ret
  41a3fc:	stp	x29, x30, [sp, #-112]!
  41a400:	mov	x29, sp
  41a404:	stp	x19, x20, [sp, #16]
  41a408:	stp	x21, x22, [sp, #32]
  41a40c:	str	x0, [sp, #104]
  41a410:	mov	x22, x2
  41a414:	ldr	x2, [x2, #8]
  41a418:	cbz	x2, 41a480 <_obstack_memory_used@@Base+0x3698>
  41a41c:	stp	x23, x24, [sp, #48]
  41a420:	stp	x25, x26, [sp, #64]
  41a424:	mov	x24, x1
  41a428:	mov	w25, w3
  41a42c:	add	x23, x2, w3, uxtw
  41a430:	cmp	x2, #0x0
  41a434:	b.le	41a450 <_obstack_memory_used@@Base+0x3668>
  41a438:	ldr	x0, [x22, #16]
  41a43c:	add	x2, x0, x2, lsl #3
  41a440:	ldr	x1, [x0], #8
  41a444:	add	x23, x23, x1
  41a448:	cmp	x2, x0
  41a44c:	b.ne	41a440 <_obstack_memory_used@@Base+0x3658>  // b.any
  41a450:	ldr	x0, [x24, #136]
  41a454:	and	x0, x23, x0
  41a458:	add	x0, x0, x0, lsl #1
  41a45c:	lsl	x0, x0, #3
  41a460:	ldr	x1, [x24, #64]
  41a464:	add	x2, x1, x0
  41a468:	ldr	x21, [x1, x0]
  41a46c:	cmp	x21, #0x0
  41a470:	b.le	41a4d8 <_obstack_memory_used@@Base+0x36f0>
  41a474:	ldr	x26, [x2, #16]
  41a478:	mov	x19, #0x0                   	// #0
  41a47c:	b	41a498 <_obstack_memory_used@@Base+0x36b0>
  41a480:	str	wzr, [x0]
  41a484:	mov	x20, #0x0                   	// #0
  41a488:	b	41a6a8 <_obstack_memory_used@@Base+0x38c0>
  41a48c:	add	x19, x19, #0x1
  41a490:	cmp	x19, x21
  41a494:	b.eq	41a4d8 <_obstack_memory_used@@Base+0x36f0>  // b.none
  41a498:	ldr	x20, [x26, x19, lsl #3]
  41a49c:	ldr	x0, [x20]
  41a4a0:	cmp	x0, x23
  41a4a4:	b.ne	41a48c <_obstack_memory_used@@Base+0x36a4>  // b.any
  41a4a8:	ldrb	w0, [x20, #104]
  41a4ac:	and	w0, w0, #0xf
  41a4b0:	cmp	w0, w25
  41a4b4:	b.ne	41a48c <_obstack_memory_used@@Base+0x36a4>  // b.any
  41a4b8:	mov	x1, x22
  41a4bc:	ldr	x0, [x20, #80]
  41a4c0:	bl	416ee4 <_obstack_memory_used@@Base+0xfc>
  41a4c4:	and	w0, w0, #0xff
  41a4c8:	cbz	w0, 41a48c <_obstack_memory_used@@Base+0x36a4>
  41a4cc:	ldp	x23, x24, [sp, #48]
  41a4d0:	ldp	x25, x26, [sp, #64]
  41a4d4:	b	41a6a8 <_obstack_memory_used@@Base+0x38c0>
  41a4d8:	mov	x1, #0x1                   	// #1
  41a4dc:	mov	x0, #0x70                  	// #112
  41a4e0:	bl	4024d0 <calloc@plt>
  41a4e4:	mov	x20, x0
  41a4e8:	cbz	x0, 41a5a8 <_obstack_memory_used@@Base+0x37c0>
  41a4ec:	stp	x27, x28, [sp, #80]
  41a4f0:	add	x27, x0, #0x8
  41a4f4:	mov	x1, x22
  41a4f8:	mov	x0, x27
  41a4fc:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41a500:	cbnz	w0, 41a53c <_obstack_memory_used@@Base+0x3754>
  41a504:	ldrb	w0, [x20, #104]
  41a508:	bfxil	w0, w25, #0, #4
  41a50c:	strb	w0, [x20, #104]
  41a510:	str	x27, [x20, #80]
  41a514:	ldr	x0, [x22, #8]
  41a518:	cmp	x0, #0x0
  41a51c:	b.le	41a688 <_obstack_memory_used@@Base+0x38a0>
  41a520:	mov	x26, #0x0                   	// #0
  41a524:	mov	x21, #0x0                   	// #0
  41a528:	and	w0, w25, #0x4
  41a52c:	str	w0, [sp, #100]
  41a530:	and	w28, w25, #0x2
  41a534:	and	w25, w25, #0x1
  41a538:	b	41a610 <_obstack_memory_used@@Base+0x3828>
  41a53c:	mov	x0, x20
  41a540:	bl	402660 <free@plt>
  41a544:	ldp	x27, x28, [sp, #80]
  41a548:	b	41a5a8 <_obstack_memory_used@@Base+0x37c0>
  41a54c:	and	x0, x0, #0xff
  41a550:	orr	w0, w0, #0x10
  41a554:	strb	w0, [x20, #104]
  41a558:	b	41a668 <_obstack_memory_used@@Base+0x3880>
  41a55c:	ldrb	w0, [x20, #104]
  41a560:	orr	w0, w0, #0x40
  41a564:	strb	w0, [x20, #104]
  41a568:	b	41a668 <_obstack_memory_used@@Base+0x3880>
  41a56c:	mov	x0, #0x18                  	// #24
  41a570:	bl	4023f0 <malloc@plt>
  41a574:	cbz	x0, 41a59c <_obstack_memory_used@@Base+0x37b4>
  41a578:	str	x0, [x20, #80]
  41a57c:	mov	x1, x22
  41a580:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41a584:	cbnz	w0, 41a5c4 <_obstack_memory_used@@Base+0x37dc>
  41a588:	ldrb	w0, [x20, #104]
  41a58c:	orr	w0, w0, #0xffffff80
  41a590:	strb	w0, [x20, #104]
  41a594:	mov	x26, #0x0                   	// #0
  41a598:	b	41a678 <_obstack_memory_used@@Base+0x3890>
  41a59c:	mov	x0, x20
  41a5a0:	bl	41a390 <_obstack_memory_used@@Base+0x35a8>
  41a5a4:	ldp	x27, x28, [sp, #80]
  41a5a8:	mov	w0, #0xc                   	// #12
  41a5ac:	ldr	x1, [sp, #104]
  41a5b0:	str	w0, [x1]
  41a5b4:	mov	x20, #0x0                   	// #0
  41a5b8:	ldp	x23, x24, [sp, #48]
  41a5bc:	ldp	x25, x26, [sp, #64]
  41a5c0:	b	41a6a8 <_obstack_memory_used@@Base+0x38c0>
  41a5c4:	mov	x0, x20
  41a5c8:	bl	41a390 <_obstack_memory_used@@Base+0x35a8>
  41a5cc:	ldp	x27, x28, [sp, #80]
  41a5d0:	b	41a5a8 <_obstack_memory_used@@Base+0x37c0>
  41a5d4:	tbz	w19, #1, 41a5dc <_obstack_memory_used@@Base+0x37f4>
  41a5d8:	cbnz	w25, 41a5f0 <_obstack_memory_used@@Base+0x3808>
  41a5dc:	tbz	w19, #4, 41a5e4 <_obstack_memory_used@@Base+0x37fc>
  41a5e0:	cbz	w28, 41a5f0 <_obstack_memory_used@@Base+0x3808>
  41a5e4:	tbz	w19, #6, 41a600 <_obstack_memory_used@@Base+0x3818>
  41a5e8:	ldr	w0, [sp, #100]
  41a5ec:	cbnz	w0, 41a600 <_obstack_memory_used@@Base+0x3818>
  41a5f0:	sub	x1, x21, x26
  41a5f4:	mov	x0, x27
  41a5f8:	bl	416fa0 <_obstack_memory_used@@Base+0x1b8>
  41a5fc:	add	x26, x26, #0x1
  41a600:	add	x21, x21, #0x1
  41a604:	ldr	x0, [x22, #8]
  41a608:	cmp	x21, x0
  41a60c:	b.ge	41a688 <_obstack_memory_used@@Base+0x38a0>  // b.tcont
  41a610:	ldr	x0, [x22, #16]
  41a614:	ldr	x0, [x0, x21, lsl #3]
  41a618:	ldr	x1, [x24]
  41a61c:	add	x0, x1, x0, lsl #4
  41a620:	ldrb	w2, [x0, #8]
  41a624:	ldr	w19, [x0, #8]
  41a628:	ubfx	x19, x19, #8, #10
  41a62c:	cmp	w19, #0x0
  41a630:	ccmp	w2, #0x1, #0x0, eq  // eq = none
  41a634:	b.eq	41a600 <_obstack_memory_used@@Base+0x3818>  // b.none
  41a638:	ldrb	w1, [x20, #104]
  41a63c:	ubfx	x3, x1, #5, #1
  41a640:	ldrb	w0, [x0, #10]
  41a644:	ubfx	x0, x0, #4, #1
  41a648:	orr	w3, w3, w0
  41a64c:	mov	w0, w1
  41a650:	bfi	w0, w3, #5, #1
  41a654:	strb	w0, [x20, #104]
  41a658:	cmp	w2, #0x2
  41a65c:	b.eq	41a54c <_obstack_memory_used@@Base+0x3764>  // b.none
  41a660:	cmp	w2, #0x4
  41a664:	b.eq	41a55c <_obstack_memory_used@@Base+0x3774>  // b.none
  41a668:	cbz	w19, 41a600 <_obstack_memory_used@@Base+0x3818>
  41a66c:	ldr	x0, [x20, #80]
  41a670:	cmp	x27, x0
  41a674:	b.eq	41a56c <_obstack_memory_used@@Base+0x3784>  // b.none
  41a678:	tbz	w19, #0, 41a5d4 <_obstack_memory_used@@Base+0x37ec>
  41a67c:	cbz	w25, 41a5f0 <_obstack_memory_used@@Base+0x3808>
  41a680:	tbnz	w19, #1, 41a5f0 <_obstack_memory_used@@Base+0x3808>
  41a684:	b	41a5dc <_obstack_memory_used@@Base+0x37f4>
  41a688:	mov	x2, x23
  41a68c:	mov	x1, x20
  41a690:	mov	x0, x24
  41a694:	bl	4181a0 <_obstack_memory_used@@Base+0x13b8>
  41a698:	cbnz	w0, 41a6bc <_obstack_memory_used@@Base+0x38d4>
  41a69c:	ldp	x23, x24, [sp, #48]
  41a6a0:	ldp	x25, x26, [sp, #64]
  41a6a4:	ldp	x27, x28, [sp, #80]
  41a6a8:	mov	x0, x20
  41a6ac:	ldp	x19, x20, [sp, #16]
  41a6b0:	ldp	x21, x22, [sp, #32]
  41a6b4:	ldp	x29, x30, [sp], #112
  41a6b8:	ret
  41a6bc:	mov	x0, x20
  41a6c0:	bl	41a390 <_obstack_memory_used@@Base+0x35a8>
  41a6c4:	ldp	x27, x28, [sp, #80]
  41a6c8:	b	41a5a8 <_obstack_memory_used@@Base+0x37c0>
  41a6cc:	stp	x29, x30, [sp, #-32]!
  41a6d0:	mov	x29, sp
  41a6d4:	stp	x19, x20, [sp, #16]
  41a6d8:	ldr	x20, [x0]
  41a6dc:	ldr	x19, [x20, #112]
  41a6e0:	cbz	x19, 41a6f4 <_obstack_memory_used@@Base+0x390c>
  41a6e4:	mov	x0, x19
  41a6e8:	ldr	x19, [x19]
  41a6ec:	bl	402660 <free@plt>
  41a6f0:	cbnz	x19, 41a6e4 <_obstack_memory_used@@Base+0x38fc>
  41a6f4:	str	xzr, [x20, #112]
  41a6f8:	mov	w0, #0xf                   	// #15
  41a6fc:	str	w0, [x20, #128]
  41a700:	str	xzr, [x20, #104]
  41a704:	ldr	x0, [x20, #32]
  41a708:	bl	402660 <free@plt>
  41a70c:	str	xzr, [x20, #32]
  41a710:	ldp	x19, x20, [sp, #16]
  41a714:	ldp	x29, x30, [sp], #32
  41a718:	ret
  41a71c:	stp	x29, x30, [sp, #-32]!
  41a720:	mov	x29, sp
  41a724:	str	x19, [sp, #16]
  41a728:	mov	x19, x0
  41a72c:	ldr	x0, [x0, #16]
  41a730:	bl	402660 <free@plt>
  41a734:	ldr	x0, [x19, #24]
  41a738:	bl	402660 <free@plt>
  41a73c:	ldrb	w0, [x19, #139]
  41a740:	cbnz	w0, 41a750 <_obstack_memory_used@@Base+0x3968>
  41a744:	ldr	x19, [sp, #16]
  41a748:	ldp	x29, x30, [sp], #32
  41a74c:	ret
  41a750:	ldr	x0, [x19, #8]
  41a754:	bl	402660 <free@plt>
  41a758:	b	41a744 <_obstack_memory_used@@Base+0x395c>
  41a75c:	stp	x29, x30, [sp, #-64]!
  41a760:	mov	x29, sp
  41a764:	stp	x19, x20, [sp, #16]
  41a768:	stp	x21, x22, [sp, #32]
  41a76c:	mov	x21, x0
  41a770:	ldr	x0, [x0]
  41a774:	cbz	x0, 41a7a0 <_obstack_memory_used@@Base+0x39b8>
  41a778:	ldr	x0, [x21, #16]
  41a77c:	cbz	x0, 41a7a0 <_obstack_memory_used@@Base+0x39b8>
  41a780:	mov	x19, #0x0                   	// #0
  41a784:	ldr	x0, [x21]
  41a788:	add	x0, x0, x19, lsl #4
  41a78c:	bl	419aac <_obstack_memory_used@@Base+0x2cc4>
  41a790:	add	x19, x19, #0x1
  41a794:	ldr	x0, [x21, #16]
  41a798:	cmp	x0, x19
  41a79c:	b.hi	41a784 <_obstack_memory_used@@Base+0x399c>  // b.pmore
  41a7a0:	ldr	x0, [x21, #24]
  41a7a4:	bl	402660 <free@plt>
  41a7a8:	ldr	x0, [x21, #16]
  41a7ac:	cbz	x0, 41a810 <_obstack_memory_used@@Base+0x3a28>
  41a7b0:	mov	x19, #0x0                   	// #0
  41a7b4:	mov	x20, #0x0                   	// #0
  41a7b8:	b	41a7dc <_obstack_memory_used@@Base+0x39f4>
  41a7bc:	add	x0, x0, x19
  41a7c0:	ldr	x0, [x0, #16]
  41a7c4:	bl	402660 <free@plt>
  41a7c8:	add	x20, x20, #0x1
  41a7cc:	add	x19, x19, #0x18
  41a7d0:	ldr	x0, [x21, #16]
  41a7d4:	cmp	x0, x20
  41a7d8:	b.ls	41a810 <_obstack_memory_used@@Base+0x3a28>  // b.plast
  41a7dc:	ldr	x0, [x21, #48]
  41a7e0:	cbz	x0, 41a7f0 <_obstack_memory_used@@Base+0x3a08>
  41a7e4:	add	x0, x0, x19
  41a7e8:	ldr	x0, [x0, #16]
  41a7ec:	bl	402660 <free@plt>
  41a7f0:	ldr	x0, [x21, #56]
  41a7f4:	cbz	x0, 41a804 <_obstack_memory_used@@Base+0x3a1c>
  41a7f8:	add	x0, x0, x19
  41a7fc:	ldr	x0, [x0, #16]
  41a800:	bl	402660 <free@plt>
  41a804:	ldr	x0, [x21, #40]
  41a808:	cbnz	x0, 41a7bc <_obstack_memory_used@@Base+0x39d4>
  41a80c:	b	41a7c8 <_obstack_memory_used@@Base+0x39e0>
  41a810:	ldr	x0, [x21, #40]
  41a814:	bl	402660 <free@plt>
  41a818:	ldr	x0, [x21, #48]
  41a81c:	bl	402660 <free@plt>
  41a820:	ldr	x0, [x21, #56]
  41a824:	bl	402660 <free@plt>
  41a828:	ldr	x0, [x21]
  41a82c:	bl	402660 <free@plt>
  41a830:	ldr	x0, [x21, #64]
  41a834:	cbz	x0, 41a8a0 <_obstack_memory_used@@Base+0x3ab8>
  41a838:	str	x23, [sp, #48]
  41a83c:	mov	x22, #0x0                   	// #0
  41a840:	mov	x23, #0x0                   	// #0
  41a844:	b	41a864 <_obstack_memory_used@@Base+0x3a7c>
  41a848:	ldr	x0, [x20, #16]
  41a84c:	bl	402660 <free@plt>
  41a850:	add	x23, x23, #0x1
  41a854:	add	x22, x22, #0x18
  41a858:	ldr	x0, [x21, #136]
  41a85c:	cmp	x0, x23
  41a860:	b.cc	41a89c <_obstack_memory_used@@Base+0x3ab4>  // b.lo, b.ul, b.last
  41a864:	ldr	x0, [x21, #64]
  41a868:	add	x20, x0, x22
  41a86c:	ldr	x0, [x0, x22]
  41a870:	cmp	x0, #0x0
  41a874:	b.le	41a848 <_obstack_memory_used@@Base+0x3a60>
  41a878:	mov	x19, #0x0                   	// #0
  41a87c:	ldr	x1, [x20, #16]
  41a880:	ldr	x0, [x1, x19, lsl #3]
  41a884:	bl	41a390 <_obstack_memory_used@@Base+0x35a8>
  41a888:	add	x19, x19, #0x1
  41a88c:	ldr	x1, [x20]
  41a890:	cmp	x1, x19
  41a894:	b.gt	41a87c <_obstack_memory_used@@Base+0x3a94>
  41a898:	b	41a848 <_obstack_memory_used@@Base+0x3a60>
  41a89c:	ldr	x23, [sp, #48]
  41a8a0:	ldr	x0, [x21, #64]
  41a8a4:	bl	402660 <free@plt>
  41a8a8:	ldr	x0, [x21, #120]
  41a8ac:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41a8b0:	add	x1, x1, #0xff0
  41a8b4:	cmp	x0, x1
  41a8b8:	b.eq	41a8c0 <_obstack_memory_used@@Base+0x3ad8>  // b.none
  41a8bc:	bl	402660 <free@plt>
  41a8c0:	ldr	x0, [x21, #224]
  41a8c4:	bl	402660 <free@plt>
  41a8c8:	mov	x0, x21
  41a8cc:	bl	402660 <free@plt>
  41a8d0:	ldp	x19, x20, [sp, #16]
  41a8d4:	ldp	x21, x22, [sp, #32]
  41a8d8:	ldp	x29, x30, [sp], #64
  41a8dc:	ret
  41a8e0:	stp	x29, x30, [sp, #-128]!
  41a8e4:	mov	x29, sp
  41a8e8:	stp	x19, x20, [sp, #16]
  41a8ec:	stp	x21, x22, [sp, #32]
  41a8f0:	mov	x22, x0
  41a8f4:	add	x21, x1, x1, lsl #1
  41a8f8:	ldr	x0, [x0, #56]
  41a8fc:	add	x21, x0, x21, lsl #3
  41a900:	stp	xzr, xzr, [sp, #104]
  41a904:	str	xzr, [sp, #120]
  41a908:	ldr	x0, [x21, #8]
  41a90c:	cmp	x0, #0x0
  41a910:	b.le	41a9ac <_obstack_memory_used@@Base+0x3bc4>
  41a914:	stp	x23, x24, [sp, #48]
  41a918:	stp	x25, x26, [sp, #64]
  41a91c:	str	x27, [sp, #80]
  41a920:	mov	x23, x1
  41a924:	mov	x24, x2
  41a928:	mov	x25, x3
  41a92c:	mov	x20, #0x0                   	// #0
  41a930:	b	41aa28 <_obstack_memory_used@@Base+0x3c40>
  41a934:	ldr	x0, [sp, #120]
  41a938:	bl	402660 <free@plt>
  41a93c:	ldp	x23, x24, [sp, #48]
  41a940:	ldp	x25, x26, [sp, #64]
  41a944:	ldr	x27, [sp, #80]
  41a948:	b	41a9b8 <_obstack_memory_used@@Base+0x3bd0>
  41a94c:	cmp	x0, #0x0
  41a950:	b.le	41a9cc <_obstack_memory_used@@Base+0x3be4>
  41a954:	mov	x19, #0x0                   	// #0
  41a958:	b	41a984 <_obstack_memory_used@@Base+0x3b9c>
  41a95c:	mov	x1, x20
  41a960:	mov	x0, x24
  41a964:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41a968:	sub	x1, x0, #0x1
  41a96c:	mov	x0, x24
  41a970:	bl	416fa0 <_obstack_memory_used@@Base+0x1b8>
  41a974:	add	x19, x19, #0x1
  41a978:	ldr	x0, [x21, #8]
  41a97c:	cmp	x0, x19
  41a980:	b.le	41a9a0 <_obstack_memory_used@@Base+0x3bb8>
  41a984:	ldr	x0, [x21, #16]
  41a988:	ldr	x20, [x0, x19, lsl #3]
  41a98c:	mov	x1, x20
  41a990:	add	x0, sp, #0x68
  41a994:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41a998:	cbnz	x0, 41a974 <_obstack_memory_used@@Base+0x3b8c>
  41a99c:	b	41a95c <_obstack_memory_used@@Base+0x3b74>
  41a9a0:	ldp	x23, x24, [sp, #48]
  41a9a4:	ldp	x25, x26, [sp, #64]
  41a9a8:	ldr	x27, [sp, #80]
  41a9ac:	ldr	x0, [sp, #120]
  41a9b0:	bl	402660 <free@plt>
  41a9b4:	mov	w19, #0x0                   	// #0
  41a9b8:	mov	w0, w19
  41a9bc:	ldp	x19, x20, [sp, #16]
  41a9c0:	ldp	x21, x22, [sp, #32]
  41a9c4:	ldp	x29, x30, [sp], #128
  41a9c8:	ret
  41a9cc:	ldp	x23, x24, [sp, #48]
  41a9d0:	ldp	x25, x26, [sp, #64]
  41a9d4:	ldr	x27, [sp, #80]
  41a9d8:	b	41a9ac <_obstack_memory_used@@Base+0x3bc4>
  41a9dc:	mov	x1, x26
  41a9e0:	mov	x0, x21
  41a9e4:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41a9e8:	cbnz	x0, 41aa18 <_obstack_memory_used@@Base+0x3c30>
  41a9ec:	mov	x1, x26
  41a9f0:	mov	x0, x24
  41a9f4:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41a9f8:	cbz	x0, 41aa18 <_obstack_memory_used@@Base+0x3c30>
  41a9fc:	ldr	x2, [x22, #56]
  41aa00:	add	x2, x2, x19
  41aa04:	mov	x1, x25
  41aa08:	add	x0, sp, #0x68
  41aa0c:	bl	4190ac <_obstack_memory_used@@Base+0x22c4>
  41aa10:	mov	w19, w0
  41aa14:	cbnz	w0, 41a934 <_obstack_memory_used@@Base+0x3b4c>
  41aa18:	add	x20, x20, #0x1
  41aa1c:	ldr	x0, [x21, #8]
  41aa20:	cmp	x0, x20
  41aa24:	b.le	41a94c <_obstack_memory_used@@Base+0x3b64>
  41aa28:	ldr	x0, [x21, #16]
  41aa2c:	ldr	x4, [x0, x20, lsl #3]
  41aa30:	cmp	x23, x4
  41aa34:	b.eq	41aa18 <_obstack_memory_used@@Base+0x3c30>  // b.none
  41aa38:	ldr	x5, [x22]
  41aa3c:	add	x5, x5, x4, lsl #4
  41aa40:	ldrb	w0, [x5, #8]
  41aa44:	tbz	w0, #3, 41aa18 <_obstack_memory_used@@Base+0x3c30>
  41aa48:	add	x4, x4, x4, lsl #1
  41aa4c:	lsl	x19, x4, #3
  41aa50:	ldr	x0, [x22, #40]
  41aa54:	add	x0, x0, x19
  41aa58:	ldr	x1, [x0, #16]
  41aa5c:	ldr	x26, [x1]
  41aa60:	ldr	x0, [x0, #8]
  41aa64:	cmp	x0, #0x1
  41aa68:	b.le	41a9dc <_obstack_memory_used@@Base+0x3bf4>
  41aa6c:	ldr	x27, [x1, #8]
  41aa70:	mov	x1, x26
  41aa74:	mov	x0, x21
  41aa78:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41aa7c:	cbnz	x0, 41aa90 <_obstack_memory_used@@Base+0x3ca8>
  41aa80:	mov	x1, x26
  41aa84:	mov	x0, x24
  41aa88:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41aa8c:	cbnz	x0, 41a9fc <_obstack_memory_used@@Base+0x3c14>
  41aa90:	cmp	x27, #0x0
  41aa94:	b.le	41aa18 <_obstack_memory_used@@Base+0x3c30>
  41aa98:	mov	x1, x27
  41aa9c:	mov	x0, x21
  41aaa0:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41aaa4:	cbnz	x0, 41aa18 <_obstack_memory_used@@Base+0x3c30>
  41aaa8:	mov	x1, x27
  41aaac:	mov	x0, x24
  41aab0:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41aab4:	cbz	x0, 41aa18 <_obstack_memory_used@@Base+0x3c30>
  41aab8:	b	41a9fc <_obstack_memory_used@@Base+0x3c14>
  41aabc:	stp	x29, x30, [sp, #-64]!
  41aac0:	mov	x29, sp
  41aac4:	str	x23, [sp, #48]
  41aac8:	mov	x23, x0
  41aacc:	ldr	x0, [x0, #232]
  41aad0:	cmp	x0, #0x0
  41aad4:	b.le	41ab6c <_obstack_memory_used@@Base+0x3d84>
  41aad8:	stp	x19, x20, [sp, #16]
  41aadc:	stp	x21, x22, [sp, #32]
  41aae0:	mov	x22, #0x0                   	// #0
  41aae4:	b	41ab00 <_obstack_memory_used@@Base+0x3d18>
  41aae8:	mov	x0, x21
  41aaec:	bl	402660 <free@plt>
  41aaf0:	add	x22, x22, #0x1
  41aaf4:	ldr	x0, [x23, #232]
  41aaf8:	cmp	x0, x22
  41aafc:	b.le	41ab64 <_obstack_memory_used@@Base+0x3d7c>
  41ab00:	ldr	x0, [x23, #248]
  41ab04:	ldr	x21, [x0, x22, lsl #3]
  41ab08:	ldr	x0, [x21, #32]
  41ab0c:	cmp	x0, #0x0
  41ab10:	b.le	41ab40 <_obstack_memory_used@@Base+0x3d58>
  41ab14:	mov	x19, #0x0                   	// #0
  41ab18:	ldr	x1, [x21, #40]
  41ab1c:	ldr	x20, [x1, x19, lsl #3]
  41ab20:	ldr	x0, [x20, #32]
  41ab24:	bl	402660 <free@plt>
  41ab28:	mov	x0, x20
  41ab2c:	bl	402660 <free@plt>
  41ab30:	add	x19, x19, #0x1
  41ab34:	ldr	x1, [x21, #32]
  41ab38:	cmp	x1, x19
  41ab3c:	b.gt	41ab18 <_obstack_memory_used@@Base+0x3d30>
  41ab40:	ldr	x0, [x21, #40]
  41ab44:	bl	402660 <free@plt>
  41ab48:	ldr	x0, [x21, #16]
  41ab4c:	cbz	x0, 41aae8 <_obstack_memory_used@@Base+0x3d00>
  41ab50:	ldr	x0, [x0, #16]
  41ab54:	bl	402660 <free@plt>
  41ab58:	ldr	x0, [x21, #16]
  41ab5c:	bl	402660 <free@plt>
  41ab60:	b	41aae8 <_obstack_memory_used@@Base+0x3d00>
  41ab64:	ldp	x19, x20, [sp, #16]
  41ab68:	ldp	x21, x22, [sp, #32]
  41ab6c:	str	xzr, [x23, #232]
  41ab70:	str	xzr, [x23, #200]
  41ab74:	ldr	x23, [sp, #48]
  41ab78:	ldp	x29, x30, [sp], #64
  41ab7c:	ret
  41ab80:	cbz	x0, 41abfc <_obstack_memory_used@@Base+0x3e14>
  41ab84:	stp	x29, x30, [sp, #-48]!
  41ab88:	mov	x29, sp
  41ab8c:	stp	x19, x20, [sp, #16]
  41ab90:	mov	x20, x0
  41ab94:	ldr	x0, [x0]
  41ab98:	cmp	x0, #0x0
  41ab9c:	b.le	41abe4 <_obstack_memory_used@@Base+0x3dfc>
  41aba0:	str	x21, [sp, #32]
  41aba4:	mov	x19, #0x0                   	// #0
  41aba8:	mov	x21, #0x0                   	// #0
  41abac:	ldr	x1, [x20, #16]
  41abb0:	add	x1, x1, x19
  41abb4:	ldr	x0, [x1, #40]
  41abb8:	bl	402660 <free@plt>
  41abbc:	ldr	x1, [x20, #16]
  41abc0:	add	x1, x1, x19
  41abc4:	ldr	x0, [x1, #16]
  41abc8:	bl	402660 <free@plt>
  41abcc:	add	x21, x21, #0x1
  41abd0:	add	x19, x19, #0x30
  41abd4:	ldr	x0, [x20]
  41abd8:	cmp	x0, x21
  41abdc:	b.gt	41abac <_obstack_memory_used@@Base+0x3dc4>
  41abe0:	ldr	x21, [sp, #32]
  41abe4:	ldr	x0, [x20, #16]
  41abe8:	bl	402660 <free@plt>
  41abec:	mov	w0, #0x0                   	// #0
  41abf0:	ldp	x19, x20, [sp, #16]
  41abf4:	ldp	x29, x30, [sp], #48
  41abf8:	ret
  41abfc:	mov	w0, #0x0                   	// #0
  41ac00:	ret
  41ac04:	stp	x29, x30, [sp, #-48]!
  41ac08:	mov	x29, sp
  41ac0c:	mov	x3, x0
  41ac10:	ldr	x4, [x1, #56]
  41ac14:	ldrb	w2, [x1, #48]
  41ac18:	cmp	w2, #0xb
  41ac1c:	b.hi	41ac84 <_obstack_memory_used@@Base+0x3e9c>  // b.pmore
  41ac20:	cmp	w2, #0x9
  41ac24:	b.hi	41aca0 <_obstack_memory_used@@Base+0x3eb8>  // b.pmore
  41ac28:	cmp	w2, #0x4
  41ac2c:	b.eq	41ad74 <_obstack_memory_used@@Base+0x3f8c>  // b.none
  41ac30:	b.ls	41ac60 <_obstack_memory_used@@Base+0x3e78>  // b.plast
  41ac34:	sub	w2, w2, #0x8
  41ac38:	and	w2, w2, #0xff
  41ac3c:	cmp	w2, #0x1
  41ac40:	b.hi	41ac6c <_obstack_memory_used@@Base+0x3e84>  // b.pmore
  41ac44:	ldr	x1, [x1, #32]
  41ac48:	add	x4, x4, x4, lsl #1
  41ac4c:	ldr	x0, [x3, #40]
  41ac50:	ldr	x1, [x1, #56]
  41ac54:	add	x0, x0, x4, lsl #3
  41ac58:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  41ac5c:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41ac60:	mov	w0, #0x0                   	// #0
  41ac64:	cmp	w2, #0x2
  41ac68:	b.eq	41ac98 <_obstack_memory_used@@Base+0x3eb0>  // b.none
  41ac6c:	ldr	x0, [x1, #32]
  41ac70:	ldr	x1, [x0, #56]
  41ac74:	ldr	x0, [x3, #24]
  41ac78:	str	x1, [x0, x4, lsl #3]
  41ac7c:	mov	w0, #0x0                   	// #0
  41ac80:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41ac84:	cmp	w2, #0xc
  41ac88:	b.eq	41ac44 <_obstack_memory_used@@Base+0x3e5c>  // b.none
  41ac8c:	mov	w0, #0x0                   	// #0
  41ac90:	cmp	w2, #0x10
  41ac94:	b.ne	41ac6c <_obstack_memory_used@@Base+0x3e84>  // b.any
  41ac98:	ldp	x29, x30, [sp], #48
  41ac9c:	ret
  41aca0:	stp	x19, x20, [sp, #16]
  41aca4:	str	x21, [sp, #32]
  41aca8:	ldrb	w0, [x0, #176]
  41acac:	orr	w0, w0, #0x1
  41acb0:	strb	w0, [x3, #176]
  41acb4:	ldr	x0, [x1, #8]
  41acb8:	cbz	x0, 41ad28 <_obstack_memory_used@@Base+0x3f40>
  41acbc:	ldr	x0, [x0, #24]
  41acc0:	ldr	x19, [x0, #56]
  41acc4:	ldr	x0, [x1, #16]
  41acc8:	cbz	x0, 41ad34 <_obstack_memory_used@@Base+0x3f4c>
  41accc:	ldr	x0, [x0, #24]
  41acd0:	ldr	x20, [x0, #56]
  41acd4:	add	x4, x4, x4, lsl #1
  41acd8:	lsl	x4, x4, #3
  41acdc:	ldr	x0, [x3, #40]
  41ace0:	add	x21, x0, x4
  41ace4:	mov	x1, #0x2                   	// #2
  41ace8:	str	x1, [x0, x4]
  41acec:	mov	x0, #0x10                  	// #16
  41acf0:	bl	4023f0 <malloc@plt>
  41acf4:	str	x0, [x21, #16]
  41acf8:	cbz	x0, 41adb0 <_obstack_memory_used@@Base+0x3fc8>
  41acfc:	cmp	x19, x20
  41ad00:	b.eq	41ad40 <_obstack_memory_used@@Base+0x3f58>  // b.none
  41ad04:	mov	x1, #0x2                   	// #2
  41ad08:	str	x1, [x21, #8]
  41ad0c:	b.ge	41ad5c <_obstack_memory_used@@Base+0x3f74>  // b.tcont
  41ad10:	str	x19, [x0]
  41ad14:	str	x20, [x0, #8]
  41ad18:	mov	w0, #0x0                   	// #0
  41ad1c:	ldp	x19, x20, [sp, #16]
  41ad20:	ldr	x21, [sp, #32]
  41ad24:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41ad28:	ldr	x0, [x1, #32]
  41ad2c:	ldr	x19, [x0, #56]
  41ad30:	b	41acc4 <_obstack_memory_used@@Base+0x3edc>
  41ad34:	ldr	x0, [x1, #32]
  41ad38:	ldr	x20, [x0, #56]
  41ad3c:	b	41acd4 <_obstack_memory_used@@Base+0x3eec>
  41ad40:	mov	x1, #0x1                   	// #1
  41ad44:	str	x1, [x21, #8]
  41ad48:	str	x19, [x0]
  41ad4c:	mov	w0, #0x0                   	// #0
  41ad50:	ldp	x19, x20, [sp, #16]
  41ad54:	ldr	x21, [sp, #32]
  41ad58:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41ad5c:	str	x20, [x0]
  41ad60:	str	x19, [x0, #8]
  41ad64:	mov	w0, #0x0                   	// #0
  41ad68:	ldp	x19, x20, [sp, #16]
  41ad6c:	ldr	x21, [sp, #32]
  41ad70:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41ad74:	ldr	x0, [x1, #32]
  41ad78:	ldr	x2, [x0, #56]
  41ad7c:	ldr	x0, [x3, #24]
  41ad80:	str	x2, [x0, x4, lsl #3]
  41ad84:	ldrb	w1, [x1, #48]
  41ad88:	mov	w0, #0x0                   	// #0
  41ad8c:	cmp	w1, #0x4
  41ad90:	b.ne	41ac98 <_obstack_memory_used@@Base+0x3eb0>  // b.any
  41ad94:	ldr	x1, [x3, #24]
  41ad98:	add	x2, x4, x4, lsl #1
  41ad9c:	ldr	x0, [x3, #40]
  41ada0:	ldr	x1, [x1, x4, lsl #3]
  41ada4:	add	x0, x0, x2, lsl #3
  41ada8:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  41adac:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41adb0:	mov	w0, #0xc                   	// #12
  41adb4:	ldp	x19, x20, [sp, #16]
  41adb8:	ldr	x21, [sp, #32]
  41adbc:	b	41ac98 <_obstack_memory_used@@Base+0x3eb0>
  41adc0:	stp	x29, x30, [sp, #-32]!
  41adc4:	mov	x29, sp
  41adc8:	stp	x19, x20, [sp, #16]
  41adcc:	mov	x20, x0
  41add0:	tbnz	x1, #63, 41ae18 <_obstack_memory_used@@Base+0x4030>
  41add4:	ldr	x0, [x0, #88]
  41add8:	cmp	x0, x1
  41addc:	b.eq	41ae20 <_obstack_memory_used@@Base+0x4038>  // b.none
  41ade0:	ldr	w0, [x20, #144]
  41ade4:	cmp	w0, #0x1
  41ade8:	b.le	41ae7c <_obstack_memory_used@@Base+0x4094>
  41adec:	ldr	x0, [x20, #16]
  41adf0:	ldr	w19, [x0, x1, lsl #2]
  41adf4:	cmn	w19, #0x1
  41adf8:	b.ne	41ae34 <_obstack_memory_used@@Base+0x404c>  // b.any
  41adfc:	sub	x1, x1, #0x1
  41ae00:	cmn	x1, #0x1
  41ae04:	b.ne	41adf0 <_obstack_memory_used@@Base+0x4008>  // b.any
  41ae08:	ldr	w0, [x20, #112]
  41ae0c:	ldp	x19, x20, [sp, #16]
  41ae10:	ldp	x29, x30, [sp], #32
  41ae14:	ret
  41ae18:	ldr	w0, [x0, #112]
  41ae1c:	b	41ae0c <_obstack_memory_used@@Base+0x4024>
  41ae20:	tst	x2, #0x2
  41ae24:	mov	w0, #0x8                   	// #8
  41ae28:	mov	w1, #0xa                   	// #10
  41ae2c:	csel	w0, w0, w1, ne  // ne = any
  41ae30:	b	41ae0c <_obstack_memory_used@@Base+0x4024>
  41ae34:	ldrb	w0, [x20, #142]
  41ae38:	cbnz	w0, 41ae5c <_obstack_memory_used@@Base+0x4074>
  41ae3c:	mov	w0, #0x0                   	// #0
  41ae40:	cmp	w19, #0xa
  41ae44:	b.ne	41ae0c <_obstack_memory_used@@Base+0x4024>  // b.any
  41ae48:	ldrb	w0, [x20, #141]
  41ae4c:	cmp	w0, #0x0
  41ae50:	cset	w0, ne  // ne = any
  41ae54:	lsl	w0, w0, #1
  41ae58:	b	41ae0c <_obstack_memory_used@@Base+0x4024>
  41ae5c:	mov	w0, w19
  41ae60:	bl	402770 <iswalnum@plt>
  41ae64:	mov	w1, w0
  41ae68:	cmp	w19, #0x5f
  41ae6c:	mov	w0, #0x1                   	// #1
  41ae70:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  41ae74:	b.ne	41ae0c <_obstack_memory_used@@Base+0x4024>  // b.any
  41ae78:	b	41ae3c <_obstack_memory_used@@Base+0x4054>
  41ae7c:	ldr	x0, [x20, #8]
  41ae80:	ldrb	w2, [x0, x1]
  41ae84:	ubfx	x1, x2, #6, #2
  41ae88:	ldr	x0, [x20, #128]
  41ae8c:	ldr	x1, [x0, x1, lsl #3]
  41ae90:	lsr	x1, x1, x2
  41ae94:	mov	w0, #0x1                   	// #1
  41ae98:	tbnz	w1, #0, 41ae0c <_obstack_memory_used@@Base+0x4024>
  41ae9c:	mov	w0, #0x0                   	// #0
  41aea0:	cmp	w2, #0xa
  41aea4:	b.ne	41ae0c <_obstack_memory_used@@Base+0x4024>  // b.any
  41aea8:	ldrb	w0, [x20, #141]
  41aeac:	cmp	w0, #0x0
  41aeb0:	cset	w0, ne  // ne = any
  41aeb4:	lsl	w0, w0, #1
  41aeb8:	b	41ae0c <_obstack_memory_used@@Base+0x4024>
  41aebc:	stp	x29, x30, [sp, #-32]!
  41aec0:	mov	x29, sp
  41aec4:	str	x19, [sp, #16]
  41aec8:	mov	x4, x0
  41aecc:	mov	x19, x1
  41aed0:	mov	x1, x2
  41aed4:	ldr	x0, [x0, #8]
  41aed8:	ldrb	w2, [x0, x2]
  41aedc:	ldrb	w3, [x19, #8]
  41aee0:	cmp	w3, #0x5
  41aee4:	b.eq	41af6c <_obstack_memory_used@@Base+0x4184>  // b.none
  41aee8:	b.hi	41af58 <_obstack_memory_used@@Base+0x4170>  // b.pmore
  41aeec:	cmp	w3, #0x1
  41aef0:	b.eq	41af8c <_obstack_memory_used@@Base+0x41a4>  // b.none
  41aef4:	mov	w0, #0x0                   	// #0
  41aef8:	cmp	w3, #0x3
  41aefc:	b.ne	41afd4 <_obstack_memory_used@@Base+0x41ec>  // b.any
  41af00:	ubfx	x3, x2, #6, #2
  41af04:	ldr	x0, [x19]
  41af08:	ldr	x0, [x0, x3, lsl #3]
  41af0c:	lsr	x2, x0, x2
  41af10:	mov	w0, #0x0                   	// #0
  41af14:	tbz	w2, #0, 41afd4 <_obstack_memory_used@@Base+0x41ec>
  41af18:	ldr	w2, [x19, #8]
  41af1c:	mov	w0, #0x1                   	// #1
  41af20:	tst	w2, #0x3ff00
  41af24:	b.eq	41afd4 <_obstack_memory_used@@Base+0x41ec>  // b.none
  41af28:	ldr	w2, [x4, #160]
  41af2c:	mov	x0, x4
  41af30:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41af34:	mov	w1, w0
  41af38:	ldr	w0, [x19, #8]
  41af3c:	ubfx	x2, x0, #8, #10
  41af40:	tbz	w0, #10, 41afb4 <_obstack_memory_used@@Base+0x41cc>
  41af44:	mov	w0, #0x0                   	// #0
  41af48:	tbz	w1, #0, 41afd4 <_obstack_memory_used@@Base+0x41ec>
  41af4c:	mov	w0, #0x0                   	// #0
  41af50:	tbz	w2, #3, 41afbc <_obstack_memory_used@@Base+0x41d4>
  41af54:	b	41afd4 <_obstack_memory_used@@Base+0x41ec>
  41af58:	mov	w0, #0x0                   	// #0
  41af5c:	cmp	w3, #0x7
  41af60:	b.ne	41afd4 <_obstack_memory_used@@Base+0x41ec>  // b.any
  41af64:	mov	w0, #0x0                   	// #0
  41af68:	tbnz	w2, #7, 41afd4 <_obstack_memory_used@@Base+0x41ec>
  41af6c:	cmp	w2, #0xa
  41af70:	b.eq	41afa0 <_obstack_memory_used@@Base+0x41b8>  // b.none
  41af74:	cbnz	w2, 41af18 <_obstack_memory_used@@Base+0x4130>
  41af78:	ldr	x0, [x4, #152]
  41af7c:	ldr	x2, [x0, #216]
  41af80:	mov	w0, #0x0                   	// #0
  41af84:	tbz	w2, #7, 41af18 <_obstack_memory_used@@Base+0x4130>
  41af88:	b	41afd4 <_obstack_memory_used@@Base+0x41ec>
  41af8c:	ldrb	w3, [x19]
  41af90:	mov	w0, #0x0                   	// #0
  41af94:	cmp	w3, w2
  41af98:	b.ne	41afd4 <_obstack_memory_used@@Base+0x41ec>  // b.any
  41af9c:	b	41af18 <_obstack_memory_used@@Base+0x4130>
  41afa0:	ldr	x0, [x4, #152]
  41afa4:	ldr	x2, [x0, #216]
  41afa8:	mov	w0, #0x0                   	// #0
  41afac:	tbnz	w2, #6, 41af18 <_obstack_memory_used@@Base+0x4130>
  41afb0:	b	41afd4 <_obstack_memory_used@@Base+0x41ec>
  41afb4:	tbz	w2, #3, 41afbc <_obstack_memory_used@@Base+0x41d4>
  41afb8:	tbnz	w1, #0, 41afe0 <_obstack_memory_used@@Base+0x41f8>
  41afbc:	tbz	w2, #5, 41afc8 <_obstack_memory_used@@Base+0x41e0>
  41afc0:	mov	w0, #0x0                   	// #0
  41afc4:	tbz	w1, #1, 41afd4 <_obstack_memory_used@@Base+0x41ec>
  41afc8:	ubfx	x0, x1, #3, #1
  41afcc:	tst	x2, #0x80
  41afd0:	csinc	w0, w0, wzr, ne  // ne = any
  41afd4:	ldr	x19, [sp, #16]
  41afd8:	ldp	x29, x30, [sp], #32
  41afdc:	ret
  41afe0:	mov	w0, #0x0                   	// #0
  41afe4:	b	41afd4 <_obstack_memory_used@@Base+0x41ec>
  41afe8:	stp	x29, x30, [sp, #-96]!
  41afec:	mov	x29, sp
  41aff0:	stp	x21, x22, [sp, #32]
  41aff4:	stp	x23, x24, [sp, #48]
  41aff8:	mov	x23, x0
  41affc:	ldr	x22, [x0, #152]
  41b000:	ldr	x0, [x1, #8]
  41b004:	cmp	x0, #0x0
  41b008:	b.le	41b110 <_obstack_memory_used@@Base+0x4328>
  41b00c:	stp	x19, x20, [sp, #16]
  41b010:	stp	x25, x26, [sp, #64]
  41b014:	mov	x20, x1
  41b018:	mov	x24, x2
  41b01c:	mov	x19, #0x0                   	// #0
  41b020:	mov	x26, #0x30                  	// #48
  41b024:	mov	x25, #0x1                   	// #1
  41b028:	b	41b058 <_obstack_memory_used@@Base+0x4270>
  41b02c:	lsl	x27, x1, #1
  41b030:	lsl	x1, x1, #4
  41b034:	bl	402500 <realloc@plt>
  41b038:	cbz	x0, 41b118 <_obstack_memory_used@@Base+0x4330>
  41b03c:	str	x0, [x23, #248]
  41b040:	str	x27, [x23, #240]
  41b044:	b	41b0a8 <_obstack_memory_used@@Base+0x42c0>
  41b048:	add	x19, x19, #0x1
  41b04c:	ldr	x0, [x20, #8]
  41b050:	cmp	x0, x19
  41b054:	b.le	41b0f4 <_obstack_memory_used@@Base+0x430c>
  41b058:	ldr	x0, [x20, #16]
  41b05c:	ldr	x21, [x0, x19, lsl #3]
  41b060:	lsl	x3, x21, #4
  41b064:	ldr	x4, [x22]
  41b068:	add	x0, x4, x3
  41b06c:	ldrb	w0, [x0, #8]
  41b070:	cmp	w0, #0x8
  41b074:	b.ne	41b048 <_obstack_memory_used@@Base+0x4260>  // b.any
  41b078:	ldr	x0, [x4, x3]
  41b07c:	cmp	x0, #0x3f
  41b080:	b.gt	41b048 <_obstack_memory_used@@Base+0x4260>
  41b084:	ldr	x1, [x22, #160]
  41b088:	lsr	x0, x1, x0
  41b08c:	tbz	w0, #0, 41b048 <_obstack_memory_used@@Base+0x4260>
  41b090:	stp	x27, x28, [sp, #80]
  41b094:	ldr	x0, [x23, #248]
  41b098:	ldr	x1, [x23, #240]
  41b09c:	ldr	x2, [x23, #232]
  41b0a0:	cmp	x1, x2
  41b0a4:	b.eq	41b02c <_obstack_memory_used@@Base+0x4244>  // b.none
  41b0a8:	ldr	x28, [x23, #232]
  41b0ac:	ldr	x27, [x23, #248]
  41b0b0:	mov	x1, x26
  41b0b4:	mov	x0, x25
  41b0b8:	bl	4024d0 <calloc@plt>
  41b0bc:	str	x0, [x27, x28, lsl #3]
  41b0c0:	ldr	x1, [x23, #232]
  41b0c4:	ldr	x0, [x23, #248]
  41b0c8:	ldr	x0, [x0, x1, lsl #3]
  41b0cc:	cbz	x0, 41b118 <_obstack_memory_used@@Base+0x4330>
  41b0d0:	str	x21, [x0, #8]
  41b0d4:	ldr	x1, [x23, #248]
  41b0d8:	ldr	x0, [x23, #232]
  41b0dc:	add	x2, x0, #0x1
  41b0e0:	str	x2, [x23, #232]
  41b0e4:	ldr	x0, [x1, x0, lsl #3]
  41b0e8:	str	x24, [x0]
  41b0ec:	ldp	x27, x28, [sp, #80]
  41b0f0:	b	41b048 <_obstack_memory_used@@Base+0x4260>
  41b0f4:	mov	w0, #0x0                   	// #0
  41b0f8:	ldp	x19, x20, [sp, #16]
  41b0fc:	ldp	x25, x26, [sp, #64]
  41b100:	ldp	x21, x22, [sp, #32]
  41b104:	ldp	x23, x24, [sp, #48]
  41b108:	ldp	x29, x30, [sp], #96
  41b10c:	ret
  41b110:	mov	w0, #0x0                   	// #0
  41b114:	b	41b100 <_obstack_memory_used@@Base+0x4318>
  41b118:	mov	w0, #0xc                   	// #12
  41b11c:	ldp	x19, x20, [sp, #16]
  41b120:	ldp	x25, x26, [sp, #64]
  41b124:	ldp	x27, x28, [sp, #80]
  41b128:	b	41b100 <_obstack_memory_used@@Base+0x4318>
  41b12c:	stp	x29, x30, [sp, #-112]!
  41b130:	mov	x29, sp
  41b134:	stp	x19, x20, [sp, #16]
  41b138:	stp	x21, x22, [sp, #32]
  41b13c:	stp	x23, x24, [sp, #48]
  41b140:	mov	x20, x0
  41b144:	mov	x21, x1
  41b148:	mov	x22, x2
  41b14c:	mov	w23, w3
  41b150:	ldr	x1, [x1, #8]
  41b154:	add	x0, sp, #0x58
  41b158:	bl	418164 <_obstack_memory_used@@Base+0x137c>
  41b15c:	mov	w24, w0
  41b160:	cbnz	w0, 41b244 <_obstack_memory_used@@Base+0x445c>
  41b164:	ldr	x0, [x21, #8]
  41b168:	cmp	x0, #0x0
  41b16c:	b.le	41b260 <_obstack_memory_used@@Base+0x4478>
  41b170:	str	x25, [sp, #64]
  41b174:	mov	x19, #0x0                   	// #0
  41b178:	b	41b1e0 <_obstack_memory_used@@Base+0x43f8>
  41b17c:	add	x4, x4, #0x1
  41b180:	cmp	x3, x4
  41b184:	b.eq	41b210 <_obstack_memory_used@@Base+0x4428>  // b.none
  41b188:	ldr	x6, [x8, x4, lsl #3]
  41b18c:	lsl	x0, x6, #4
  41b190:	add	x7, x5, x0
  41b194:	ldrb	w7, [x7, #8]
  41b198:	cmp	w23, w7
  41b19c:	b.ne	41b17c <_obstack_memory_used@@Base+0x4394>  // b.any
  41b1a0:	ldr	x0, [x5, x0]
  41b1a4:	cmp	x22, x0
  41b1a8:	b.ne	41b17c <_obstack_memory_used@@Base+0x4394>  // b.any
  41b1ac:	cmn	x6, #0x1
  41b1b0:	b.eq	41b210 <_obstack_memory_used@@Base+0x4428>  // b.none
  41b1b4:	mov	w4, w23
  41b1b8:	mov	x3, x22
  41b1bc:	add	x1, sp, #0x58
  41b1c0:	mov	x0, x20
  41b1c4:	bl	418048 <_obstack_memory_used@@Base+0x1260>
  41b1c8:	mov	w25, w0
  41b1cc:	cbnz	w0, 41b234 <_obstack_memory_used@@Base+0x444c>
  41b1d0:	add	x19, x19, #0x1
  41b1d4:	ldr	x0, [x21, #8]
  41b1d8:	cmp	x0, x19
  41b1dc:	b.le	41b25c <_obstack_memory_used@@Base+0x4474>
  41b1e0:	ldr	x0, [x21, #16]
  41b1e4:	ldr	x2, [x0, x19, lsl #3]
  41b1e8:	add	x1, x2, x2, lsl #1
  41b1ec:	ldr	x0, [x20, #48]
  41b1f0:	add	x1, x0, x1, lsl #3
  41b1f4:	ldr	x3, [x1, #8]
  41b1f8:	cmp	x3, #0x0
  41b1fc:	b.le	41b210 <_obstack_memory_used@@Base+0x4428>
  41b200:	ldr	x8, [x1, #16]
  41b204:	ldr	x5, [x20]
  41b208:	mov	x4, #0x0                   	// #0
  41b20c:	b	41b188 <_obstack_memory_used@@Base+0x43a0>
  41b210:	add	x0, sp, #0x58
  41b214:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  41b218:	mov	w25, w0
  41b21c:	cbz	w0, 41b1d0 <_obstack_memory_used@@Base+0x43e8>
  41b220:	ldr	x0, [sp, #104]
  41b224:	bl	402660 <free@plt>
  41b228:	mov	w24, w25
  41b22c:	ldr	x25, [sp, #64]
  41b230:	b	41b244 <_obstack_memory_used@@Base+0x445c>
  41b234:	ldr	x0, [sp, #104]
  41b238:	bl	402660 <free@plt>
  41b23c:	mov	w24, w25
  41b240:	ldr	x25, [sp, #64]
  41b244:	mov	w0, w24
  41b248:	ldp	x19, x20, [sp, #16]
  41b24c:	ldp	x21, x22, [sp, #32]
  41b250:	ldp	x23, x24, [sp, #48]
  41b254:	ldp	x29, x30, [sp], #112
  41b258:	ret
  41b25c:	ldr	x25, [sp, #64]
  41b260:	ldr	x0, [x21, #16]
  41b264:	bl	402660 <free@plt>
  41b268:	ldp	x0, x1, [sp, #88]
  41b26c:	stp	x0, x1, [x21]
  41b270:	ldr	x0, [sp, #104]
  41b274:	str	x0, [x21, #16]
  41b278:	b	41b244 <_obstack_memory_used@@Base+0x445c>
  41b27c:	stp	x29, x30, [sp, #-32]!
  41b280:	mov	x29, sp
  41b284:	stp	x19, x20, [sp, #16]
  41b288:	mov	x19, x0
  41b28c:	mov	x20, x1
  41b290:	mov	x1, x2
  41b294:	ldr	w2, [x0, #160]
  41b298:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41b29c:	ldr	x4, [x20, #16]
  41b2a0:	cmp	x4, #0x0
  41b2a4:	b.le	41b2ec <_obstack_memory_used@@Base+0x4504>
  41b2a8:	ldr	x6, [x20, #24]
  41b2ac:	ldr	x1, [x19, #152]
  41b2b0:	ldr	x5, [x1]
  41b2b4:	mov	x2, #0x0                   	// #0
  41b2b8:	and	w9, w0, #0x8
  41b2bc:	and	w8, w0, #0x2
  41b2c0:	and	w7, w0, #0x1
  41b2c4:	b	41b300 <_obstack_memory_used@@Base+0x4518>
  41b2c8:	tbz	w1, #3, 41b2d0 <_obstack_memory_used@@Base+0x44e8>
  41b2cc:	cbnz	w7, 41b2f4 <_obstack_memory_used@@Base+0x450c>
  41b2d0:	tbz	w1, #5, 41b2d8 <_obstack_memory_used@@Base+0x44f0>
  41b2d4:	cbz	w8, 41b2f4 <_obstack_memory_used@@Base+0x450c>
  41b2d8:	tbz	w1, #7, 41b2e0 <_obstack_memory_used@@Base+0x44f8>
  41b2dc:	cbz	w9, 41b2f4 <_obstack_memory_used@@Base+0x450c>
  41b2e0:	ldp	x19, x20, [sp, #16]
  41b2e4:	ldp	x29, x30, [sp], #32
  41b2e8:	ret
  41b2ec:	mov	x0, #0x0                   	// #0
  41b2f0:	b	41b2e0 <_obstack_memory_used@@Base+0x44f8>
  41b2f4:	add	x2, x2, #0x1
  41b2f8:	cmp	x4, x2
  41b2fc:	b.eq	41b330 <_obstack_memory_used@@Base+0x4548>  // b.none
  41b300:	ldr	x0, [x6, x2, lsl #3]
  41b304:	add	x3, x5, x0, lsl #4
  41b308:	ldr	w1, [x3, #8]
  41b30c:	ubfx	x1, x1, #8, #10
  41b310:	ldrb	w3, [x3, #8]
  41b314:	cmp	w3, #0x2
  41b318:	b.ne	41b2f4 <_obstack_memory_used@@Base+0x450c>  // b.any
  41b31c:	cbz	w1, 41b2e0 <_obstack_memory_used@@Base+0x44f8>
  41b320:	tbz	w1, #2, 41b2c8 <_obstack_memory_used@@Base+0x44e0>
  41b324:	cbz	w7, 41b2f4 <_obstack_memory_used@@Base+0x450c>
  41b328:	tbz	w1, #3, 41b2d0 <_obstack_memory_used@@Base+0x44e8>
  41b32c:	b	41b2f4 <_obstack_memory_used@@Base+0x450c>
  41b330:	mov	x0, #0x0                   	// #0
  41b334:	b	41b2e0 <_obstack_memory_used@@Base+0x44f8>
  41b338:	stp	x29, x30, [sp, #-48]!
  41b33c:	mov	x29, sp
  41b340:	stp	x19, x20, [sp, #16]
  41b344:	str	x21, [sp, #32]
  41b348:	mov	x20, x0
  41b34c:	mov	x0, x3
  41b350:	mov	x21, x4
  41b354:	ldr	x19, [x20]
  41b358:	sub	x19, x19, #0x1
  41b35c:	str	x19, [x20]
  41b360:	add	x19, x19, x19, lsl #1
  41b364:	lsl	x19, x19, #4
  41b368:	ldr	x3, [x20, #16]
  41b36c:	ldr	x3, [x3, x19]
  41b370:	str	x3, [x1]
  41b374:	ldr	x1, [x20, #16]
  41b378:	add	x1, x1, x19
  41b37c:	lsl	x2, x2, #4
  41b380:	ldr	x1, [x1, #16]
  41b384:	bl	402260 <memcpy@plt>
  41b388:	ldr	x0, [x21, #16]
  41b38c:	bl	402660 <free@plt>
  41b390:	ldr	x0, [x20, #16]
  41b394:	add	x0, x0, x19
  41b398:	ldr	x0, [x0, #16]
  41b39c:	bl	402660 <free@plt>
  41b3a0:	ldr	x0, [x20, #16]
  41b3a4:	add	x0, x0, x19
  41b3a8:	ldp	x2, x3, [x0, #24]
  41b3ac:	stp	x2, x3, [x21]
  41b3b0:	ldr	x0, [x0, #40]
  41b3b4:	str	x0, [x21, #16]
  41b3b8:	ldr	x0, [x20, #16]
  41b3bc:	add	x19, x0, x19
  41b3c0:	ldr	x0, [x19, #8]
  41b3c4:	ldp	x19, x20, [sp, #16]
  41b3c8:	ldr	x21, [sp, #32]
  41b3cc:	ldp	x29, x30, [sp], #48
  41b3d0:	ret
  41b3d4:	stp	x29, x30, [sp, #-64]!
  41b3d8:	mov	x29, sp
  41b3dc:	stp	x19, x20, [sp, #16]
  41b3e0:	stp	x21, x22, [sp, #32]
  41b3e4:	stp	x23, x24, [sp, #48]
  41b3e8:	mov	x21, x0
  41b3ec:	mov	x19, x1
  41b3f0:	mov	x20, x2
  41b3f4:	mov	x23, x3
  41b3f8:	mov	x22, x4
  41b3fc:	tbz	w5, #22, 41b434 <_obstack_memory_used@@Base+0x464c>
  41b400:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b404:	add	x1, x1, #0xd0
  41b408:	mov	x0, x4
  41b40c:	bl	402640 <strcmp@plt>
  41b410:	cbz	w0, 41b48c <_obstack_memory_used@@Base+0x46a4>
  41b414:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b418:	add	x1, x1, #0xd8
  41b41c:	mov	x0, x22
  41b420:	bl	402640 <strcmp@plt>
  41b424:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b428:	add	x1, x1, #0xc8
  41b42c:	cmp	w0, #0x0
  41b430:	csel	x22, x1, x22, eq  // eq = none
  41b434:	ldr	x0, [x20, #72]
  41b438:	ldr	x1, [x23]
  41b43c:	cmp	x1, x0
  41b440:	b.eq	41b498 <_obstack_memory_used@@Base+0x46b0>  // b.none
  41b444:	ldr	x24, [x20, #24]
  41b448:	ldr	x23, [x20, #72]
  41b44c:	add	x0, x23, #0x1
  41b450:	str	x0, [x20, #72]
  41b454:	mov	x0, x22
  41b458:	bl	402310 <wctype@plt>
  41b45c:	str	x0, [x24, x23, lsl #3]
  41b460:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b464:	add	x1, x1, #0x240
  41b468:	mov	x0, x22
  41b46c:	bl	402640 <strcmp@plt>
  41b470:	mov	w20, w0
  41b474:	cbnz	w0, 41b550 <_obstack_memory_used@@Base+0x4768>
  41b478:	cbnz	x21, 41b4bc <_obstack_memory_used@@Base+0x46d4>
  41b47c:	bl	402650 <__ctype_b_loc@plt>
  41b480:	mov	x2, #0x0                   	// #0
  41b484:	mov	x6, #0x1                   	// #1
  41b488:	b	41b510 <_obstack_memory_used@@Base+0x4728>
  41b48c:	adrp	x22, 426000 <_obstack_memory_used@@Base+0xf218>
  41b490:	add	x22, x22, #0xc8
  41b494:	b	41b434 <_obstack_memory_used@@Base+0x464c>
  41b498:	lsl	x0, x0, #1
  41b49c:	add	x24, x0, #0x1
  41b4a0:	lsl	x1, x24, #3
  41b4a4:	ldr	x0, [x20, #24]
  41b4a8:	bl	402500 <realloc@plt>
  41b4ac:	cbz	x0, 41bdb8 <_obstack_memory_used@@Base+0x4fd0>
  41b4b0:	str	x0, [x20, #24]
  41b4b4:	str	x24, [x23]
  41b4b8:	b	41b444 <_obstack_memory_used@@Base+0x465c>
  41b4bc:	bl	402650 <__ctype_b_loc@plt>
  41b4c0:	mov	x4, x0
  41b4c4:	mov	x1, #0x0                   	// #0
  41b4c8:	mov	x5, #0x1                   	// #1
  41b4cc:	b	41b4dc <_obstack_memory_used@@Base+0x46f4>
  41b4d0:	add	x1, x1, #0x1
  41b4d4:	cmp	x1, #0x100
  41b4d8:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b4dc:	ldr	x0, [x4]
  41b4e0:	ldrh	w2, [x0, x1, lsl #1]
  41b4e4:	tbz	w2, #3, 41b4d0 <_obstack_memory_used@@Base+0x46e8>
  41b4e8:	ldrb	w2, [x21, x1]
  41b4ec:	ubfx	x0, x2, #6, #2
  41b4f0:	lsl	x2, x5, x2
  41b4f4:	ldr	x3, [x19, x0, lsl #3]
  41b4f8:	orr	x2, x3, x2
  41b4fc:	str	x2, [x19, x0, lsl #3]
  41b500:	b	41b4d0 <_obstack_memory_used@@Base+0x46e8>
  41b504:	add	x2, x2, #0x1
  41b508:	cmp	x2, #0x100
  41b50c:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b510:	ldr	x1, [x0]
  41b514:	ldrh	w1, [x1, x2, lsl #1]
  41b518:	tbz	w1, #3, 41b504 <_obstack_memory_used@@Base+0x471c>
  41b51c:	add	x3, x2, #0x3f
  41b520:	cmp	x2, #0x0
  41b524:	csel	x3, x3, x2, lt  // lt = tstop
  41b528:	asr	x3, x3, #6
  41b52c:	negs	x5, x2
  41b530:	and	x4, x2, #0x3f
  41b534:	and	x5, x5, #0x3f
  41b538:	csneg	x4, x4, x5, mi  // mi = first
  41b53c:	lsl	x4, x6, x4
  41b540:	ldr	x1, [x19, x3, lsl #3]
  41b544:	orr	x4, x1, x4
  41b548:	str	x4, [x19, x3, lsl #3]
  41b54c:	b	41b504 <_obstack_memory_used@@Base+0x471c>
  41b550:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b554:	add	x1, x1, #0x258
  41b558:	mov	x0, x22
  41b55c:	bl	402640 <strcmp@plt>
  41b560:	mov	w20, w0
  41b564:	cbnz	w0, 41b610 <_obstack_memory_used@@Base+0x4828>
  41b568:	cbnz	x21, 41b57c <_obstack_memory_used@@Base+0x4794>
  41b56c:	bl	402650 <__ctype_b_loc@plt>
  41b570:	mov	x1, #0x0                   	// #0
  41b574:	mov	x5, #0x1                   	// #1
  41b578:	b	41b5d0 <_obstack_memory_used@@Base+0x47e8>
  41b57c:	bl	402650 <__ctype_b_loc@plt>
  41b580:	mov	x4, x0
  41b584:	mov	x1, #0x0                   	// #0
  41b588:	mov	x5, #0x1                   	// #1
  41b58c:	b	41b59c <_obstack_memory_used@@Base+0x47b4>
  41b590:	add	x1, x1, #0x1
  41b594:	cmp	x1, #0x100
  41b598:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b59c:	ldr	x0, [x4]
  41b5a0:	ldrh	w0, [x0, x1, lsl #1]
  41b5a4:	tbz	w0, #1, 41b590 <_obstack_memory_used@@Base+0x47a8>
  41b5a8:	ldrb	w0, [x21, x1]
  41b5ac:	ubfx	x3, x0, #6, #2
  41b5b0:	lsl	x0, x5, x0
  41b5b4:	ldr	x2, [x19, x3, lsl #3]
  41b5b8:	orr	x0, x2, x0
  41b5bc:	str	x0, [x19, x3, lsl #3]
  41b5c0:	b	41b590 <_obstack_memory_used@@Base+0x47a8>
  41b5c4:	add	x1, x1, #0x1
  41b5c8:	cmp	x1, #0x100
  41b5cc:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b5d0:	ldr	x2, [x0]
  41b5d4:	ldrh	w2, [x2, x1, lsl #1]
  41b5d8:	tbz	w2, #1, 41b5c4 <_obstack_memory_used@@Base+0x47dc>
  41b5dc:	add	x2, x1, #0x3f
  41b5e0:	cmp	x1, #0x0
  41b5e4:	csel	x2, x2, x1, lt  // lt = tstop
  41b5e8:	asr	x2, x2, #6
  41b5ec:	negs	x4, x1
  41b5f0:	and	x3, x1, #0x3f
  41b5f4:	and	x4, x4, #0x3f
  41b5f8:	csneg	x3, x3, x4, mi  // mi = first
  41b5fc:	lsl	x3, x5, x3
  41b600:	ldr	x4, [x19, x2, lsl #3]
  41b604:	orr	x3, x4, x3
  41b608:	str	x3, [x19, x2, lsl #3]
  41b60c:	b	41b5c4 <_obstack_memory_used@@Base+0x47dc>
  41b610:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b614:	add	x1, x1, #0xd8
  41b618:	mov	x0, x22
  41b61c:	bl	402640 <strcmp@plt>
  41b620:	mov	w20, w0
  41b624:	cbnz	w0, 41b6d4 <_obstack_memory_used@@Base+0x48ec>
  41b628:	cbnz	x21, 41b640 <_obstack_memory_used@@Base+0x4858>
  41b62c:	bl	402650 <__ctype_b_loc@plt>
  41b630:	mov	x4, x0
  41b634:	mov	x0, #0x0                   	// #0
  41b638:	mov	x5, #0x1                   	// #1
  41b63c:	b	41b694 <_obstack_memory_used@@Base+0x48ac>
  41b640:	bl	402650 <__ctype_b_loc@plt>
  41b644:	mov	x4, x0
  41b648:	mov	x0, #0x0                   	// #0
  41b64c:	mov	x5, #0x1                   	// #1
  41b650:	b	41b660 <_obstack_memory_used@@Base+0x4878>
  41b654:	add	x0, x0, #0x1
  41b658:	cmp	x0, #0x100
  41b65c:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b660:	ldr	x1, [x4]
  41b664:	ldrh	w1, [x1, x0, lsl #1]
  41b668:	tbz	w1, #9, 41b654 <_obstack_memory_used@@Base+0x486c>
  41b66c:	ldrb	w1, [x21, x0]
  41b670:	ubfx	x3, x1, #6, #2
  41b674:	lsl	x1, x5, x1
  41b678:	ldr	x2, [x19, x3, lsl #3]
  41b67c:	orr	x1, x2, x1
  41b680:	str	x1, [x19, x3, lsl #3]
  41b684:	b	41b654 <_obstack_memory_used@@Base+0x486c>
  41b688:	add	x0, x0, #0x1
  41b68c:	cmp	x0, #0x100
  41b690:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b694:	ldr	x1, [x4]
  41b698:	ldrh	w1, [x1, x0, lsl #1]
  41b69c:	tbz	w1, #9, 41b688 <_obstack_memory_used@@Base+0x48a0>
  41b6a0:	add	x1, x0, #0x3f
  41b6a4:	cmp	x0, #0x0
  41b6a8:	csel	x1, x1, x0, lt  // lt = tstop
  41b6ac:	asr	x1, x1, #6
  41b6b0:	negs	x3, x0
  41b6b4:	and	x2, x0, #0x3f
  41b6b8:	and	x3, x3, #0x3f
  41b6bc:	csneg	x2, x2, x3, mi  // mi = first
  41b6c0:	lsl	x2, x5, x2
  41b6c4:	ldr	x3, [x19, x1, lsl #3]
  41b6c8:	orr	x2, x3, x2
  41b6cc:	str	x2, [x19, x1, lsl #3]
  41b6d0:	b	41b688 <_obstack_memory_used@@Base+0x48a0>
  41b6d4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b6d8:	add	x1, x1, #0x230
  41b6dc:	mov	x0, x22
  41b6e0:	bl	402640 <strcmp@plt>
  41b6e4:	mov	w20, w0
  41b6e8:	cbnz	w0, 41b798 <_obstack_memory_used@@Base+0x49b0>
  41b6ec:	cbnz	x21, 41b704 <_obstack_memory_used@@Base+0x491c>
  41b6f0:	bl	402650 <__ctype_b_loc@plt>
  41b6f4:	mov	x4, x0
  41b6f8:	mov	x0, #0x0                   	// #0
  41b6fc:	mov	x5, #0x1                   	// #1
  41b700:	b	41b758 <_obstack_memory_used@@Base+0x4970>
  41b704:	bl	402650 <__ctype_b_loc@plt>
  41b708:	mov	x4, x0
  41b70c:	mov	x0, #0x0                   	// #0
  41b710:	mov	x5, #0x1                   	// #1
  41b714:	b	41b724 <_obstack_memory_used@@Base+0x493c>
  41b718:	add	x0, x0, #0x1
  41b71c:	cmp	x0, #0x100
  41b720:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b724:	ldr	x1, [x4]
  41b728:	ldrh	w1, [x1, x0, lsl #1]
  41b72c:	tbz	w1, #13, 41b718 <_obstack_memory_used@@Base+0x4930>
  41b730:	ldrb	w1, [x21, x0]
  41b734:	ubfx	x3, x1, #6, #2
  41b738:	lsl	x1, x5, x1
  41b73c:	ldr	x2, [x19, x3, lsl #3]
  41b740:	orr	x1, x2, x1
  41b744:	str	x1, [x19, x3, lsl #3]
  41b748:	b	41b718 <_obstack_memory_used@@Base+0x4930>
  41b74c:	add	x0, x0, #0x1
  41b750:	cmp	x0, #0x100
  41b754:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b758:	ldr	x1, [x4]
  41b75c:	ldrh	w1, [x1, x0, lsl #1]
  41b760:	tbz	w1, #13, 41b74c <_obstack_memory_used@@Base+0x4964>
  41b764:	add	x1, x0, #0x3f
  41b768:	cmp	x0, #0x0
  41b76c:	csel	x1, x1, x0, lt  // lt = tstop
  41b770:	asr	x1, x1, #6
  41b774:	negs	x3, x0
  41b778:	and	x2, x0, #0x3f
  41b77c:	and	x3, x3, #0x3f
  41b780:	csneg	x2, x2, x3, mi  // mi = first
  41b784:	lsl	x2, x5, x2
  41b788:	ldr	x3, [x19, x1, lsl #3]
  41b78c:	orr	x2, x3, x2
  41b790:	str	x2, [x19, x1, lsl #3]
  41b794:	b	41b74c <_obstack_memory_used@@Base+0x4964>
  41b798:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b79c:	add	x1, x1, #0xc8
  41b7a0:	mov	x0, x22
  41b7a4:	bl	402640 <strcmp@plt>
  41b7a8:	mov	w20, w0
  41b7ac:	cbnz	w0, 41b85c <_obstack_memory_used@@Base+0x4a74>
  41b7b0:	cbnz	x21, 41b7c8 <_obstack_memory_used@@Base+0x49e0>
  41b7b4:	bl	402650 <__ctype_b_loc@plt>
  41b7b8:	mov	x4, x0
  41b7bc:	mov	x0, #0x0                   	// #0
  41b7c0:	mov	x5, #0x1                   	// #1
  41b7c4:	b	41b81c <_obstack_memory_used@@Base+0x4a34>
  41b7c8:	bl	402650 <__ctype_b_loc@plt>
  41b7cc:	mov	x3, x0
  41b7d0:	mov	x0, #0x0                   	// #0
  41b7d4:	mov	x5, #0x1                   	// #1
  41b7d8:	b	41b7e8 <_obstack_memory_used@@Base+0x4a00>
  41b7dc:	add	x0, x0, #0x1
  41b7e0:	cmp	x0, #0x100
  41b7e4:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b7e8:	ldr	x1, [x3]
  41b7ec:	ldrh	w1, [x1, x0, lsl #1]
  41b7f0:	tbz	w1, #10, 41b7dc <_obstack_memory_used@@Base+0x49f4>
  41b7f4:	ldrb	w1, [x21, x0]
  41b7f8:	ubfx	x4, x1, #6, #2
  41b7fc:	lsl	x1, x5, x1
  41b800:	ldr	x2, [x19, x4, lsl #3]
  41b804:	orr	x1, x2, x1
  41b808:	str	x1, [x19, x4, lsl #3]
  41b80c:	b	41b7dc <_obstack_memory_used@@Base+0x49f4>
  41b810:	add	x0, x0, #0x1
  41b814:	cmp	x0, #0x100
  41b818:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b81c:	ldr	x1, [x4]
  41b820:	ldrh	w1, [x1, x0, lsl #1]
  41b824:	tbz	w1, #10, 41b810 <_obstack_memory_used@@Base+0x4a28>
  41b828:	add	x1, x0, #0x3f
  41b82c:	cmp	x0, #0x0
  41b830:	csel	x1, x1, x0, lt  // lt = tstop
  41b834:	asr	x1, x1, #6
  41b838:	negs	x3, x0
  41b83c:	and	x2, x0, #0x3f
  41b840:	and	x3, x3, #0x3f
  41b844:	csneg	x2, x2, x3, mi  // mi = first
  41b848:	lsl	x2, x5, x2
  41b84c:	ldr	x3, [x19, x1, lsl #3]
  41b850:	orr	x2, x3, x2
  41b854:	str	x2, [x19, x1, lsl #3]
  41b858:	b	41b810 <_obstack_memory_used@@Base+0x4a28>
  41b85c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b860:	add	x1, x1, #0x220
  41b864:	mov	x0, x22
  41b868:	bl	402640 <strcmp@plt>
  41b86c:	mov	w20, w0
  41b870:	cbnz	w0, 41b920 <_obstack_memory_used@@Base+0x4b38>
  41b874:	cbnz	x21, 41b88c <_obstack_memory_used@@Base+0x4aa4>
  41b878:	bl	402650 <__ctype_b_loc@plt>
  41b87c:	mov	x4, x0
  41b880:	mov	x0, #0x0                   	// #0
  41b884:	mov	x5, #0x1                   	// #1
  41b888:	b	41b8e0 <_obstack_memory_used@@Base+0x4af8>
  41b88c:	bl	402650 <__ctype_b_loc@plt>
  41b890:	mov	x1, x0
  41b894:	mov	x0, #0x0                   	// #0
  41b898:	mov	x5, #0x1                   	// #1
  41b89c:	b	41b8ac <_obstack_memory_used@@Base+0x4ac4>
  41b8a0:	add	x0, x0, #0x1
  41b8a4:	cmp	x0, #0x100
  41b8a8:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b8ac:	ldr	x2, [x1]
  41b8b0:	ldrh	w2, [x2, x0, lsl #1]
  41b8b4:	tbz	w2, #11, 41b8a0 <_obstack_memory_used@@Base+0x4ab8>
  41b8b8:	ldrb	w2, [x21, x0]
  41b8bc:	ubfx	x4, x2, #6, #2
  41b8c0:	lsl	x2, x5, x2
  41b8c4:	ldr	x3, [x19, x4, lsl #3]
  41b8c8:	orr	x2, x3, x2
  41b8cc:	str	x2, [x19, x4, lsl #3]
  41b8d0:	b	41b8a0 <_obstack_memory_used@@Base+0x4ab8>
  41b8d4:	add	x0, x0, #0x1
  41b8d8:	cmp	x0, #0x100
  41b8dc:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b8e0:	ldr	x1, [x4]
  41b8e4:	ldrh	w1, [x1, x0, lsl #1]
  41b8e8:	tbz	w1, #11, 41b8d4 <_obstack_memory_used@@Base+0x4aec>
  41b8ec:	add	x1, x0, #0x3f
  41b8f0:	cmp	x0, #0x0
  41b8f4:	csel	x1, x1, x0, lt  // lt = tstop
  41b8f8:	asr	x1, x1, #6
  41b8fc:	negs	x3, x0
  41b900:	and	x2, x0, #0x3f
  41b904:	and	x3, x3, #0x3f
  41b908:	csneg	x2, x2, x3, mi  // mi = first
  41b90c:	lsl	x2, x5, x2
  41b910:	ldr	x3, [x19, x1, lsl #3]
  41b914:	orr	x2, x3, x2
  41b918:	str	x2, [x19, x1, lsl #3]
  41b91c:	b	41b8d4 <_obstack_memory_used@@Base+0x4aec>
  41b920:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b924:	add	x1, x1, #0x248
  41b928:	mov	x0, x22
  41b92c:	bl	402640 <strcmp@plt>
  41b930:	mov	w20, w0
  41b934:	cbnz	w0, 41b9e4 <_obstack_memory_used@@Base+0x4bfc>
  41b938:	cbnz	x21, 41b950 <_obstack_memory_used@@Base+0x4b68>
  41b93c:	bl	402650 <__ctype_b_loc@plt>
  41b940:	mov	x4, x0
  41b944:	mov	x0, #0x0                   	// #0
  41b948:	mov	x5, #0x1                   	// #1
  41b94c:	b	41b9a4 <_obstack_memory_used@@Base+0x4bbc>
  41b950:	bl	402650 <__ctype_b_loc@plt>
  41b954:	mov	x2, x0
  41b958:	mov	x0, #0x0                   	// #0
  41b95c:	mov	x5, #0x1                   	// #1
  41b960:	b	41b970 <_obstack_memory_used@@Base+0x4b88>
  41b964:	add	x0, x0, #0x1
  41b968:	cmp	x0, #0x100
  41b96c:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b970:	ldr	x1, [x2]
  41b974:	ldrh	w1, [x1, x0, lsl #1]
  41b978:	tbz	w1, #14, 41b964 <_obstack_memory_used@@Base+0x4b7c>
  41b97c:	ldrb	w1, [x21, x0]
  41b980:	ubfx	x4, x1, #6, #2
  41b984:	lsl	x1, x5, x1
  41b988:	ldr	x3, [x19, x4, lsl #3]
  41b98c:	orr	x1, x3, x1
  41b990:	str	x1, [x19, x4, lsl #3]
  41b994:	b	41b964 <_obstack_memory_used@@Base+0x4b7c>
  41b998:	add	x0, x0, #0x1
  41b99c:	cmp	x0, #0x100
  41b9a0:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41b9a4:	ldr	x1, [x4]
  41b9a8:	ldrh	w1, [x1, x0, lsl #1]
  41b9ac:	tbz	w1, #14, 41b998 <_obstack_memory_used@@Base+0x4bb0>
  41b9b0:	add	x1, x0, #0x3f
  41b9b4:	cmp	x0, #0x0
  41b9b8:	csel	x1, x1, x0, lt  // lt = tstop
  41b9bc:	asr	x1, x1, #6
  41b9c0:	negs	x2, x0
  41b9c4:	and	x3, x0, #0x3f
  41b9c8:	and	x2, x2, #0x3f
  41b9cc:	csneg	x2, x3, x2, mi  // mi = first
  41b9d0:	lsl	x2, x5, x2
  41b9d4:	ldr	x3, [x19, x1, lsl #3]
  41b9d8:	orr	x2, x3, x2
  41b9dc:	str	x2, [x19, x1, lsl #3]
  41b9e0:	b	41b998 <_obstack_memory_used@@Base+0x4bb0>
  41b9e4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41b9e8:	add	x1, x1, #0xd0
  41b9ec:	mov	x0, x22
  41b9f0:	bl	402640 <strcmp@plt>
  41b9f4:	mov	w20, w0
  41b9f8:	cbnz	w0, 41baa8 <_obstack_memory_used@@Base+0x4cc0>
  41b9fc:	cbnz	x21, 41ba14 <_obstack_memory_used@@Base+0x4c2c>
  41ba00:	bl	402650 <__ctype_b_loc@plt>
  41ba04:	mov	x4, x0
  41ba08:	mov	x0, #0x0                   	// #0
  41ba0c:	mov	x5, #0x1                   	// #1
  41ba10:	b	41ba68 <_obstack_memory_used@@Base+0x4c80>
  41ba14:	bl	402650 <__ctype_b_loc@plt>
  41ba18:	mov	x2, x0
  41ba1c:	mov	x0, #0x0                   	// #0
  41ba20:	mov	x5, #0x1                   	// #1
  41ba24:	b	41ba34 <_obstack_memory_used@@Base+0x4c4c>
  41ba28:	add	x0, x0, #0x1
  41ba2c:	cmp	x0, #0x100
  41ba30:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41ba34:	ldr	x1, [x2]
  41ba38:	ldrh	w1, [x1, x0, lsl #1]
  41ba3c:	tbz	w1, #8, 41ba28 <_obstack_memory_used@@Base+0x4c40>
  41ba40:	ldrb	w1, [x21, x0]
  41ba44:	ubfx	x4, x1, #6, #2
  41ba48:	lsl	x1, x5, x1
  41ba4c:	ldr	x3, [x19, x4, lsl #3]
  41ba50:	orr	x1, x3, x1
  41ba54:	str	x1, [x19, x4, lsl #3]
  41ba58:	b	41ba28 <_obstack_memory_used@@Base+0x4c40>
  41ba5c:	add	x0, x0, #0x1
  41ba60:	cmp	x0, #0x100
  41ba64:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41ba68:	ldr	x1, [x4]
  41ba6c:	ldrh	w1, [x1, x0, lsl #1]
  41ba70:	tbz	w1, #8, 41ba5c <_obstack_memory_used@@Base+0x4c74>
  41ba74:	add	x1, x0, #0x3f
  41ba78:	cmp	x0, #0x0
  41ba7c:	csel	x1, x1, x0, lt  // lt = tstop
  41ba80:	asr	x1, x1, #6
  41ba84:	negs	x2, x0
  41ba88:	and	x3, x0, #0x3f
  41ba8c:	and	x2, x2, #0x3f
  41ba90:	csneg	x2, x3, x2, mi  // mi = first
  41ba94:	lsl	x2, x5, x2
  41ba98:	ldr	x3, [x19, x1, lsl #3]
  41ba9c:	orr	x2, x3, x2
  41baa0:	str	x2, [x19, x1, lsl #3]
  41baa4:	b	41ba5c <_obstack_memory_used@@Base+0x4c74>
  41baa8:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41baac:	add	x1, x1, #0x260
  41bab0:	mov	x0, x22
  41bab4:	bl	402640 <strcmp@plt>
  41bab8:	mov	w20, w0
  41babc:	cbnz	w0, 41bb6c <_obstack_memory_used@@Base+0x4d84>
  41bac0:	cbnz	x21, 41bad8 <_obstack_memory_used@@Base+0x4cf0>
  41bac4:	bl	402650 <__ctype_b_loc@plt>
  41bac8:	mov	x3, x0
  41bacc:	mov	x0, #0x0                   	// #0
  41bad0:	mov	x5, #0x1                   	// #1
  41bad4:	b	41bb2c <_obstack_memory_used@@Base+0x4d44>
  41bad8:	bl	402650 <__ctype_b_loc@plt>
  41badc:	mov	x2, x0
  41bae0:	mov	x0, #0x0                   	// #0
  41bae4:	mov	x5, #0x1                   	// #1
  41bae8:	b	41baf8 <_obstack_memory_used@@Base+0x4d10>
  41baec:	add	x0, x0, #0x1
  41baf0:	cmp	x0, #0x100
  41baf4:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41baf8:	ldr	x1, [x2]
  41bafc:	ldrh	w1, [x1, x0, lsl #1]
  41bb00:	tbz	w1, #0, 41baec <_obstack_memory_used@@Base+0x4d04>
  41bb04:	ldrb	w1, [x21, x0]
  41bb08:	ubfx	x4, x1, #6, #2
  41bb0c:	lsl	x1, x5, x1
  41bb10:	ldr	x3, [x19, x4, lsl #3]
  41bb14:	orr	x1, x3, x1
  41bb18:	str	x1, [x19, x4, lsl #3]
  41bb1c:	b	41baec <_obstack_memory_used@@Base+0x4d04>
  41bb20:	add	x0, x0, #0x1
  41bb24:	cmp	x0, #0x100
  41bb28:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bb2c:	ldr	x1, [x3]
  41bb30:	ldrh	w1, [x1, x0, lsl #1]
  41bb34:	tbz	w1, #0, 41bb20 <_obstack_memory_used@@Base+0x4d38>
  41bb38:	add	x1, x0, #0x3f
  41bb3c:	cmp	x0, #0x0
  41bb40:	csel	x1, x1, x0, lt  // lt = tstop
  41bb44:	asr	x1, x1, #6
  41bb48:	negs	x2, x0
  41bb4c:	and	x4, x0, #0x3f
  41bb50:	and	x2, x2, #0x3f
  41bb54:	csneg	x2, x4, x2, mi  // mi = first
  41bb58:	lsl	x2, x5, x2
  41bb5c:	ldr	x4, [x19, x1, lsl #3]
  41bb60:	orr	x2, x4, x2
  41bb64:	str	x2, [x19, x1, lsl #3]
  41bb68:	b	41bb20 <_obstack_memory_used@@Base+0x4d38>
  41bb6c:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41bb70:	add	x1, x1, #0x250
  41bb74:	mov	x0, x22
  41bb78:	bl	402640 <strcmp@plt>
  41bb7c:	mov	w20, w0
  41bb80:	cbnz	w0, 41bc30 <_obstack_memory_used@@Base+0x4e48>
  41bb84:	cbnz	x21, 41bb9c <_obstack_memory_used@@Base+0x4db4>
  41bb88:	bl	402650 <__ctype_b_loc@plt>
  41bb8c:	mov	x3, x0
  41bb90:	mov	x0, #0x0                   	// #0
  41bb94:	mov	x5, #0x1                   	// #1
  41bb98:	b	41bbf0 <_obstack_memory_used@@Base+0x4e08>
  41bb9c:	bl	402650 <__ctype_b_loc@plt>
  41bba0:	mov	x2, x0
  41bba4:	mov	x0, #0x0                   	// #0
  41bba8:	mov	x5, #0x1                   	// #1
  41bbac:	b	41bbbc <_obstack_memory_used@@Base+0x4dd4>
  41bbb0:	add	x0, x0, #0x1
  41bbb4:	cmp	x0, #0x100
  41bbb8:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bbbc:	ldr	x1, [x2]
  41bbc0:	ldrsh	w1, [x1, x0, lsl #1]
  41bbc4:	tbz	w1, #31, 41bbb0 <_obstack_memory_used@@Base+0x4dc8>
  41bbc8:	ldrb	w1, [x21, x0]
  41bbcc:	ubfx	x4, x1, #6, #2
  41bbd0:	lsl	x1, x5, x1
  41bbd4:	ldr	x3, [x19, x4, lsl #3]
  41bbd8:	orr	x1, x3, x1
  41bbdc:	str	x1, [x19, x4, lsl #3]
  41bbe0:	b	41bbb0 <_obstack_memory_used@@Base+0x4dc8>
  41bbe4:	add	x0, x0, #0x1
  41bbe8:	cmp	x0, #0x100
  41bbec:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bbf0:	ldr	x1, [x3]
  41bbf4:	ldrsh	w1, [x1, x0, lsl #1]
  41bbf8:	tbz	w1, #31, 41bbe4 <_obstack_memory_used@@Base+0x4dfc>
  41bbfc:	add	x1, x0, #0x3f
  41bc00:	cmp	x0, #0x0
  41bc04:	csel	x1, x1, x0, lt  // lt = tstop
  41bc08:	asr	x1, x1, #6
  41bc0c:	negs	x2, x0
  41bc10:	and	x4, x0, #0x3f
  41bc14:	and	x2, x2, #0x3f
  41bc18:	csneg	x2, x4, x2, mi  // mi = first
  41bc1c:	lsl	x2, x5, x2
  41bc20:	ldr	x4, [x19, x1, lsl #3]
  41bc24:	orr	x2, x4, x2
  41bc28:	str	x2, [x19, x1, lsl #3]
  41bc2c:	b	41bbe4 <_obstack_memory_used@@Base+0x4dfc>
  41bc30:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41bc34:	add	x1, x1, #0x238
  41bc38:	mov	x0, x22
  41bc3c:	bl	402640 <strcmp@plt>
  41bc40:	mov	w20, w0
  41bc44:	cbnz	w0, 41bcf4 <_obstack_memory_used@@Base+0x4f0c>
  41bc48:	cbnz	x21, 41bc60 <_obstack_memory_used@@Base+0x4e78>
  41bc4c:	bl	402650 <__ctype_b_loc@plt>
  41bc50:	mov	x3, x0
  41bc54:	mov	x0, #0x0                   	// #0
  41bc58:	mov	x5, #0x1                   	// #1
  41bc5c:	b	41bcb4 <_obstack_memory_used@@Base+0x4ecc>
  41bc60:	bl	402650 <__ctype_b_loc@plt>
  41bc64:	mov	x2, x0
  41bc68:	mov	x0, #0x0                   	// #0
  41bc6c:	mov	x5, #0x1                   	// #1
  41bc70:	b	41bc80 <_obstack_memory_used@@Base+0x4e98>
  41bc74:	add	x0, x0, #0x1
  41bc78:	cmp	x0, #0x100
  41bc7c:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bc80:	ldr	x1, [x2]
  41bc84:	ldrh	w1, [x1, x0, lsl #1]
  41bc88:	tbz	w1, #2, 41bc74 <_obstack_memory_used@@Base+0x4e8c>
  41bc8c:	ldrb	w1, [x21, x0]
  41bc90:	ubfx	x4, x1, #6, #2
  41bc94:	lsl	x1, x5, x1
  41bc98:	ldr	x3, [x19, x4, lsl #3]
  41bc9c:	orr	x1, x3, x1
  41bca0:	str	x1, [x19, x4, lsl #3]
  41bca4:	b	41bc74 <_obstack_memory_used@@Base+0x4e8c>
  41bca8:	add	x0, x0, #0x1
  41bcac:	cmp	x0, #0x100
  41bcb0:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bcb4:	ldr	x1, [x3]
  41bcb8:	ldrh	w1, [x1, x0, lsl #1]
  41bcbc:	tbz	w1, #2, 41bca8 <_obstack_memory_used@@Base+0x4ec0>
  41bcc0:	add	x1, x0, #0x3f
  41bcc4:	cmp	x0, #0x0
  41bcc8:	csel	x1, x1, x0, lt  // lt = tstop
  41bccc:	asr	x1, x1, #6
  41bcd0:	negs	x2, x0
  41bcd4:	and	x4, x0, #0x3f
  41bcd8:	and	x2, x2, #0x3f
  41bcdc:	csneg	x2, x4, x2, mi  // mi = first
  41bce0:	lsl	x2, x5, x2
  41bce4:	ldr	x4, [x19, x1, lsl #3]
  41bce8:	orr	x2, x4, x2
  41bcec:	str	x2, [x19, x1, lsl #3]
  41bcf0:	b	41bca8 <_obstack_memory_used@@Base+0x4ec0>
  41bcf4:	adrp	x1, 426000 <_obstack_memory_used@@Base+0xf218>
  41bcf8:	add	x1, x1, #0x228
  41bcfc:	mov	x0, x22
  41bd00:	bl	402640 <strcmp@plt>
  41bd04:	mov	w20, w0
  41bd08:	cbnz	w0, 41bdd4 <_obstack_memory_used@@Base+0x4fec>
  41bd0c:	cbnz	x21, 41bd24 <_obstack_memory_used@@Base+0x4f3c>
  41bd10:	bl	402650 <__ctype_b_loc@plt>
  41bd14:	mov	x3, x0
  41bd18:	mov	x0, #0x0                   	// #0
  41bd1c:	mov	x5, #0x1                   	// #1
  41bd20:	b	41bd78 <_obstack_memory_used@@Base+0x4f90>
  41bd24:	bl	402650 <__ctype_b_loc@plt>
  41bd28:	mov	x2, x0
  41bd2c:	mov	x0, #0x0                   	// #0
  41bd30:	mov	x5, #0x1                   	// #1
  41bd34:	b	41bd44 <_obstack_memory_used@@Base+0x4f5c>
  41bd38:	add	x0, x0, #0x1
  41bd3c:	cmp	x0, #0x100
  41bd40:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bd44:	ldr	x1, [x2]
  41bd48:	ldrh	w1, [x1, x0, lsl #1]
  41bd4c:	tbz	w1, #12, 41bd38 <_obstack_memory_used@@Base+0x4f50>
  41bd50:	ldrb	w1, [x21, x0]
  41bd54:	ubfx	x4, x1, #6, #2
  41bd58:	lsl	x1, x5, x1
  41bd5c:	ldr	x3, [x19, x4, lsl #3]
  41bd60:	orr	x1, x3, x1
  41bd64:	str	x1, [x19, x4, lsl #3]
  41bd68:	b	41bd38 <_obstack_memory_used@@Base+0x4f50>
  41bd6c:	add	x0, x0, #0x1
  41bd70:	cmp	x0, #0x100
  41bd74:	b.eq	41bdbc <_obstack_memory_used@@Base+0x4fd4>  // b.none
  41bd78:	ldr	x1, [x3]
  41bd7c:	ldrh	w1, [x1, x0, lsl #1]
  41bd80:	tbz	w1, #12, 41bd6c <_obstack_memory_used@@Base+0x4f84>
  41bd84:	add	x1, x0, #0x3f
  41bd88:	cmp	x0, #0x0
  41bd8c:	csel	x1, x1, x0, lt  // lt = tstop
  41bd90:	asr	x1, x1, #6
  41bd94:	negs	x2, x0
  41bd98:	and	x4, x0, #0x3f
  41bd9c:	and	x2, x2, #0x3f
  41bda0:	csneg	x2, x4, x2, mi  // mi = first
  41bda4:	lsl	x2, x5, x2
  41bda8:	ldr	x4, [x19, x1, lsl #3]
  41bdac:	orr	x2, x4, x2
  41bdb0:	str	x2, [x19, x1, lsl #3]
  41bdb4:	b	41bd6c <_obstack_memory_used@@Base+0x4f84>
  41bdb8:	mov	w20, #0xc                   	// #12
  41bdbc:	mov	w0, w20
  41bdc0:	ldp	x19, x20, [sp, #16]
  41bdc4:	ldp	x21, x22, [sp, #32]
  41bdc8:	ldp	x23, x24, [sp, #48]
  41bdcc:	ldp	x29, x30, [sp], #64
  41bdd0:	ret
  41bdd4:	mov	w20, #0x4                   	// #4
  41bdd8:	b	41bdbc <_obstack_memory_used@@Base+0x4fd4>
  41bddc:	stp	x29, x30, [sp, #-112]!
  41bde0:	mov	x29, sp
  41bde4:	stp	x19, x20, [sp, #16]
  41bde8:	stp	x21, x22, [sp, #32]
  41bdec:	stp	x23, x24, [sp, #48]
  41bdf0:	stp	x25, x26, [sp, #64]
  41bdf4:	mov	x21, x0
  41bdf8:	mov	x25, x1
  41bdfc:	mov	x26, x2
  41be00:	mov	x20, x3
  41be04:	and	w24, w4, #0xff
  41be08:	mov	x23, x5
  41be0c:	str	xzr, [sp, #104]
  41be10:	mov	x1, #0x1                   	// #1
  41be14:	mov	x0, #0x20                  	// #32
  41be18:	bl	4024d0 <calloc@plt>
  41be1c:	mov	x19, x0
  41be20:	cbz	x0, 41bf84 <_obstack_memory_used@@Base+0x519c>
  41be24:	mov	x1, #0x1                   	// #1
  41be28:	mov	x0, #0x50                  	// #80
  41be2c:	bl	4024d0 <calloc@plt>
  41be30:	mov	x22, x0
  41be34:	cbz	x0, 41bf94 <_obstack_memory_used@@Base+0x51ac>
  41be38:	ldrb	w0, [x0, #32]
  41be3c:	bfxil	w0, w24, #0, #1
  41be40:	strb	w0, [x22, #32]
  41be44:	mov	x5, #0x0                   	// #0
  41be48:	mov	x4, x26
  41be4c:	add	x3, sp, #0x68
  41be50:	mov	x2, x22
  41be54:	mov	x1, x19
  41be58:	mov	x0, x25
  41be5c:	bl	41b3d4 <_obstack_memory_used@@Base+0x45ec>
  41be60:	mov	w25, w0
  41be64:	cbnz	w0, 41bfac <_obstack_memory_used@@Base+0x51c4>
  41be68:	ldrb	w1, [x20]
  41be6c:	mov	x3, #0x1                   	// #1
  41be70:	cbz	w1, 41be90 <_obstack_memory_used@@Base+0x50a8>
  41be74:	ubfx	x0, x1, #6, #2
  41be78:	lsl	x1, x3, x1
  41be7c:	ldr	x2, [x19, x0, lsl #3]
  41be80:	orr	x1, x2, x1
  41be84:	str	x1, [x19, x0, lsl #3]
  41be88:	ldrb	w1, [x20, #1]!
  41be8c:	cbnz	w1, 41be74 <_obstack_memory_used@@Base+0x508c>
  41be90:	cbz	w24, 41beb0 <_obstack_memory_used@@Base+0x50c8>
  41be94:	mov	x0, #0x0                   	// #0
  41be98:	ldr	x1, [x19, x0, lsl #3]
  41be9c:	mvn	x1, x1
  41bea0:	str	x1, [x19, x0, lsl #3]
  41bea4:	add	x0, x0, #0x1
  41bea8:	cmp	x0, #0x4
  41beac:	b.ne	41be98 <_obstack_memory_used@@Base+0x50b0>  // b.any
  41beb0:	ldr	w0, [x21, #180]
  41beb4:	cmp	w0, #0x1
  41beb8:	b.le	41bee0 <_obstack_memory_used@@Base+0x50f8>
  41bebc:	ldr	x3, [x21, #120]
  41bec0:	mov	x0, #0x0                   	// #0
  41bec4:	ldr	x1, [x19, x0]
  41bec8:	ldr	x2, [x3, x0]
  41becc:	and	x1, x1, x2
  41bed0:	str	x1, [x19, x0]
  41bed4:	add	x0, x0, #0x8
  41bed8:	cmp	x0, #0x20
  41bedc:	b.ne	41bec4 <_obstack_memory_used@@Base+0x50dc>  // b.any
  41bee0:	stur	wzr, [sp, #97]
  41bee4:	sturh	wzr, [sp, #101]
  41bee8:	strb	wzr, [sp, #103]
  41beec:	str	x19, [sp, #88]
  41bef0:	mov	w0, #0x3                   	// #3
  41bef4:	strb	w0, [sp, #96]
  41bef8:	add	x3, sp, #0x58
  41befc:	mov	x2, #0x0                   	// #0
  41bf00:	mov	x1, #0x0                   	// #0
  41bf04:	mov	x0, x21
  41bf08:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41bf0c:	mov	x20, x0
  41bf10:	cbz	x0, 41bfd4 <_obstack_memory_used@@Base+0x51ec>
  41bf14:	ldr	w0, [x21, #180]
  41bf18:	cmp	w0, #0x1
  41bf1c:	b.le	41bfc8 <_obstack_memory_used@@Base+0x51e0>
  41bf20:	mov	w0, #0x6                   	// #6
  41bf24:	strb	w0, [sp, #96]
  41bf28:	str	x22, [sp, #88]
  41bf2c:	ldrb	w0, [x21, #176]
  41bf30:	orr	w0, w0, #0x2
  41bf34:	strb	w0, [x21, #176]
  41bf38:	add	x3, sp, #0x58
  41bf3c:	mov	x2, #0x0                   	// #0
  41bf40:	mov	x1, #0x0                   	// #0
  41bf44:	mov	x0, x21
  41bf48:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41bf4c:	mov	x2, x0
  41bf50:	cbz	x0, 41bfd4 <_obstack_memory_used@@Base+0x51ec>
  41bf54:	mov	w3, #0xa                   	// #10
  41bf58:	mov	x1, x20
  41bf5c:	mov	x0, x21
  41bf60:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41bf64:	mov	x20, x0
  41bf68:	mov	x0, x20
  41bf6c:	ldp	x19, x20, [sp, #16]
  41bf70:	ldp	x21, x22, [sp, #32]
  41bf74:	ldp	x23, x24, [sp, #48]
  41bf78:	ldp	x25, x26, [sp, #64]
  41bf7c:	ldp	x29, x30, [sp], #112
  41bf80:	ret
  41bf84:	mov	w0, #0xc                   	// #12
  41bf88:	str	w0, [x23]
  41bf8c:	mov	x20, x19
  41bf90:	b	41bf68 <_obstack_memory_used@@Base+0x5180>
  41bf94:	mov	x0, x19
  41bf98:	bl	402660 <free@plt>
  41bf9c:	mov	w0, #0xc                   	// #12
  41bfa0:	str	w0, [x23]
  41bfa4:	mov	x20, x22
  41bfa8:	b	41bf68 <_obstack_memory_used@@Base+0x5180>
  41bfac:	mov	x0, x19
  41bfb0:	bl	402660 <free@plt>
  41bfb4:	mov	x0, x22
  41bfb8:	bl	419a68 <_obstack_memory_used@@Base+0x2c80>
  41bfbc:	str	w25, [x23]
  41bfc0:	mov	x20, #0x0                   	// #0
  41bfc4:	b	41bf68 <_obstack_memory_used@@Base+0x5180>
  41bfc8:	mov	x0, x22
  41bfcc:	bl	419a68 <_obstack_memory_used@@Base+0x2c80>
  41bfd0:	b	41bf68 <_obstack_memory_used@@Base+0x5180>
  41bfd4:	mov	x0, x19
  41bfd8:	bl	402660 <free@plt>
  41bfdc:	mov	x0, x22
  41bfe0:	bl	419a68 <_obstack_memory_used@@Base+0x2c80>
  41bfe4:	mov	w0, #0xc                   	// #12
  41bfe8:	str	w0, [x23]
  41bfec:	mov	x20, #0x0                   	// #0
  41bff0:	b	41bf68 <_obstack_memory_used@@Base+0x5180>
  41bff4:	stp	x29, x30, [sp, #-384]!
  41bff8:	mov	x29, sp
  41bffc:	stp	x21, x22, [sp, #32]
  41c000:	stp	x23, x24, [sp, #48]
  41c004:	stp	x25, x26, [sp, #64]
  41c008:	stp	x27, x28, [sp, #80]
  41c00c:	str	x0, [sp, #104]
  41c010:	mov	x28, x1
  41c014:	mov	x22, x2
  41c018:	ldr	x26, [x0]
  41c01c:	ldr	w0, [x26, #180]
  41c020:	mov	w24, #0x0                   	// #0
  41c024:	cmp	w0, #0x1
  41c028:	b.eq	41c048 <_obstack_memory_used@@Base+0x5260>  // b.none
  41c02c:	ldr	x0, [x28, #16]
  41c030:	cmp	x0, #0x0
  41c034:	b.le	41c37c <_obstack_memory_used@@Base+0x5594>
  41c038:	stp	x19, x20, [sp, #16]
  41c03c:	mov	x25, #0x0                   	// #0
  41c040:	mov	w23, #0x1                   	// #1
  41c044:	b	41c09c <_obstack_memory_used@@Base+0x52b4>
  41c048:	ldr	x0, [sp, #104]
  41c04c:	ldr	x24, [x0, #24]
  41c050:	ubfx	w24, w24, #22, #1
  41c054:	b	41c02c <_obstack_memory_used@@Base+0x5244>
  41c058:	ldrb	w20, [x1, x27]
  41c05c:	strb	w23, [x22, x20]
  41c060:	cbz	w24, 41c074 <_obstack_memory_used@@Base+0x528c>
  41c064:	bl	402380 <__ctype_tolower_loc@plt>
  41c068:	ldr	x0, [x0]
  41c06c:	ldrsw	x0, [x0, x20, lsl #2]
  41c070:	strb	w23, [x22, x0]
  41c074:	ldr	x0, [sp, #104]
  41c078:	ldr	x0, [x0, #24]
  41c07c:	tbz	w0, #22, 41c08c <_obstack_memory_used@@Base+0x52a4>
  41c080:	ldr	w0, [x26, #180]
  41c084:	cmp	w0, #0x1
  41c088:	b.gt	41c104 <_obstack_memory_used@@Base+0x531c>
  41c08c:	add	x25, x25, #0x1
  41c090:	ldr	x0, [x28, #16]
  41c094:	cmp	x0, x25
  41c098:	b.le	41c378 <_obstack_memory_used@@Base+0x5590>
  41c09c:	ldr	x0, [x28, #24]
  41c0a0:	ldr	x19, [x0, x25, lsl #3]
  41c0a4:	lsl	x27, x19, #4
  41c0a8:	ldr	x1, [x26]
  41c0ac:	add	x0, x1, x27
  41c0b0:	ldrb	w0, [x0, #8]
  41c0b4:	mov	w20, w0
  41c0b8:	cmp	w0, #0x1
  41c0bc:	b.eq	41c058 <_obstack_memory_used@@Base+0x5270>  // b.none
  41c0c0:	cmp	w0, #0x3
  41c0c4:	b.eq	41c1c4 <_obstack_memory_used@@Base+0x53dc>  // b.none
  41c0c8:	cmp	w0, #0x6
  41c0cc:	b.eq	41c240 <_obstack_memory_used@@Base+0x5458>  // b.none
  41c0d0:	and	w1, w0, #0xfffffffd
  41c0d4:	and	w1, w1, #0xff
  41c0d8:	cmp	w1, #0x5
  41c0dc:	ccmp	w0, #0x2, #0x4, ne  // ne = any
  41c0e0:	b.ne	41c08c <_obstack_memory_used@@Base+0x52a4>  // b.any
  41c0e4:	mov	x2, #0x100                 	// #256
  41c0e8:	mov	w1, #0x1                   	// #1
  41c0ec:	mov	x0, x22
  41c0f0:	bl	4024c0 <memset@plt>
  41c0f4:	cmp	w20, #0x2
  41c0f8:	b.eq	41c360 <_obstack_memory_used@@Base+0x5578>  // b.none
  41c0fc:	ldp	x19, x20, [sp, #16]
  41c100:	b	41c37c <_obstack_memory_used@@Base+0x5594>
  41c104:	ldr	x0, [x26]
  41c108:	ldrb	w0, [x0, x27]
  41c10c:	strb	w0, [sp, #128]
  41c110:	add	x19, x19, #0x1
  41c114:	ldr	x0, [x26, #16]
  41c118:	add	x3, sp, #0x81
  41c11c:	cmp	x19, x0
  41c120:	b.cs	41c1bc <_obstack_memory_used@@Base+0x53d4>  // b.hs, b.nlast
  41c124:	mov	w5, #0xff                  	// #255
  41c128:	movk	w5, #0x20, lsl #16
  41c12c:	mov	w4, #0x1                   	// #1
  41c130:	movk	w4, #0x20, lsl #16
  41c134:	lsl	x1, x19, #4
  41c138:	ldr	x2, [x26]
  41c13c:	add	x0, x2, x1
  41c140:	ldr	w0, [x0, #8]
  41c144:	and	w0, w0, w5
  41c148:	cmp	w0, w4
  41c14c:	b.ne	41c168 <_obstack_memory_used@@Base+0x5380>  // b.any
  41c150:	ldrb	w0, [x2, x1]
  41c154:	strb	w0, [x3], #1
  41c158:	add	x19, x19, #0x1
  41c15c:	ldr	x0, [x26, #16]
  41c160:	cmp	x0, x19
  41c164:	b.hi	41c134 <_obstack_memory_used@@Base+0x534c>  // b.pmore
  41c168:	str	xzr, [sp, #120]
  41c16c:	add	x0, sp, #0x80
  41c170:	sub	x19, x3, x0
  41c174:	add	x3, sp, #0x78
  41c178:	mov	x2, x19
  41c17c:	mov	x1, x0
  41c180:	add	x0, sp, #0x74
  41c184:	bl	4169f8 <wcrtomb@plt+0x14128>
  41c188:	cmp	x19, x0
  41c18c:	b.ne	41c08c <_obstack_memory_used@@Base+0x52a4>  // b.any
  41c190:	ldr	w0, [sp, #116]
  41c194:	bl	402870 <towlower@plt>
  41c198:	add	x2, sp, #0x78
  41c19c:	mov	w1, w0
  41c1a0:	add	x0, sp, #0x80
  41c1a4:	bl	4028d0 <wcrtomb@plt>
  41c1a8:	cmn	x0, #0x1
  41c1ac:	b.eq	41c08c <_obstack_memory_used@@Base+0x52a4>  // b.none
  41c1b0:	ldrb	w0, [sp, #128]
  41c1b4:	strb	w23, [x22, x0]
  41c1b8:	b	41c08c <_obstack_memory_used@@Base+0x52a4>
  41c1bc:	add	x3, sp, #0x81
  41c1c0:	b	41c168 <_obstack_memory_used@@Base+0x5380>
  41c1c4:	str	xzr, [sp, #96]
  41c1c8:	b	41c224 <_obstack_memory_used@@Base+0x543c>
  41c1cc:	strb	w23, [x22, w2, sxtw]
  41c1d0:	add	w20, w20, #0x1
  41c1d4:	add	x19, x19, #0x1
  41c1d8:	cmp	w20, #0x40
  41c1dc:	b.eq	41c210 <_obstack_memory_used@@Base+0x5428>  // b.none
  41c1e0:	mov	w2, w19
  41c1e4:	lsr	x0, x21, x20
  41c1e8:	tbz	w0, #0, 41c1d0 <_obstack_memory_used@@Base+0x53e8>
  41c1ec:	strb	w23, [x22, x19]
  41c1f0:	cbz	w24, 41c1d0 <_obstack_memory_used@@Base+0x53e8>
  41c1f4:	add	w1, w19, #0x80
  41c1f8:	cmp	w1, #0x17f
  41c1fc:	b.hi	41c1cc <_obstack_memory_used@@Base+0x53e4>  // b.pmore
  41c200:	bl	402380 <__ctype_tolower_loc@plt>
  41c204:	ldr	x0, [x0]
  41c208:	ldr	w2, [x0, x19, lsl #2]
  41c20c:	b	41c1cc <_obstack_memory_used@@Base+0x53e4>
  41c210:	ldr	x0, [sp, #96]
  41c214:	add	x0, x0, #0x8
  41c218:	str	x0, [sp, #96]
  41c21c:	cmp	x0, #0x20
  41c220:	b.eq	41c08c <_obstack_memory_used@@Base+0x52a4>  // b.none
  41c224:	ldr	x0, [x26]
  41c228:	ldr	x0, [x0, x27]
  41c22c:	ldr	x1, [sp, #96]
  41c230:	ldr	x21, [x0, x1]
  41c234:	lsl	x19, x1, #3
  41c238:	mov	w20, #0x0                   	// #0
  41c23c:	b	41c1e0 <_obstack_memory_used@@Base+0x53f8>
  41c240:	ldr	x20, [x1, x27]
  41c244:	ldr	w0, [x26, #180]
  41c248:	cmp	w0, #0x1
  41c24c:	b.le	41c274 <_obstack_memory_used@@Base+0x548c>
  41c250:	ldr	x0, [x20, #72]
  41c254:	cbnz	x0, 41c268 <_obstack_memory_used@@Base+0x5480>
  41c258:	ldrb	w0, [x20, #32]
  41c25c:	tbnz	w0, #0, 41c268 <_obstack_memory_used@@Base+0x5480>
  41c260:	ldr	x0, [x20, #64]
  41c264:	cbz	x0, 41c274 <_obstack_memory_used@@Base+0x548c>
  41c268:	strb	wzr, [sp, #120]
  41c26c:	mov	x19, #0x1                   	// #1
  41c270:	b	41c29c <_obstack_memory_used@@Base+0x54b4>
  41c274:	ldr	x0, [x20, #40]
  41c278:	mov	x19, #0x0                   	// #0
  41c27c:	cmp	x0, #0x0
  41c280:	b.gt	41c2d8 <_obstack_memory_used@@Base+0x54f0>
  41c284:	b	41c08c <_obstack_memory_used@@Base+0x52a4>
  41c288:	ldrb	w0, [sp, #120]
  41c28c:	add	w0, w0, #0x1
  41c290:	and	w0, w0, #0xff
  41c294:	strb	w0, [sp, #120]
  41c298:	cbz	w0, 41c08c <_obstack_memory_used@@Base+0x52a4>
  41c29c:	str	xzr, [sp, #128]
  41c2a0:	add	x3, sp, #0x80
  41c2a4:	mov	x2, x19
  41c2a8:	add	x1, sp, #0x78
  41c2ac:	mov	x0, #0x0                   	// #0
  41c2b0:	bl	4169f8 <wcrtomb@plt+0x14128>
  41c2b4:	cmn	x0, #0x2
  41c2b8:	b.ne	41c288 <_obstack_memory_used@@Base+0x54a0>  // b.any
  41c2bc:	ldrb	w0, [sp, #120]
  41c2c0:	strb	w23, [x22, x0]
  41c2c4:	b	41c288 <_obstack_memory_used@@Base+0x54a0>
  41c2c8:	add	x19, x19, #0x1
  41c2cc:	ldr	x0, [x20, #40]
  41c2d0:	cmp	x0, x19
  41c2d4:	b.le	41c08c <_obstack_memory_used@@Base+0x52a4>
  41c2d8:	str	xzr, [sp, #120]
  41c2dc:	lsl	x27, x19, #2
  41c2e0:	ldr	x0, [x20]
  41c2e4:	add	x2, sp, #0x78
  41c2e8:	ldr	w1, [x0, x19, lsl #2]
  41c2ec:	add	x0, sp, #0x80
  41c2f0:	bl	4028d0 <wcrtomb@plt>
  41c2f4:	cmn	x0, #0x1
  41c2f8:	b.eq	41c318 <_obstack_memory_used@@Base+0x5530>  // b.none
  41c2fc:	ldrb	w21, [sp, #128]
  41c300:	strb	w23, [x22, x21]
  41c304:	cbz	w24, 41c318 <_obstack_memory_used@@Base+0x5530>
  41c308:	bl	402380 <__ctype_tolower_loc@plt>
  41c30c:	ldr	x0, [x0]
  41c310:	ldrsw	x0, [x0, x21, lsl #2]
  41c314:	strb	w23, [x22, x0]
  41c318:	ldr	x0, [sp, #104]
  41c31c:	ldr	x0, [x0, #24]
  41c320:	tbz	w0, #22, 41c2c8 <_obstack_memory_used@@Base+0x54e0>
  41c324:	ldr	w0, [x26, #180]
  41c328:	cmp	w0, #0x1
  41c32c:	b.le	41c2c8 <_obstack_memory_used@@Base+0x54e0>
  41c330:	ldr	x0, [x20]
  41c334:	ldr	w0, [x0, x27]
  41c338:	bl	402870 <towlower@plt>
  41c33c:	add	x2, sp, #0x78
  41c340:	mov	w1, w0
  41c344:	add	x0, sp, #0x80
  41c348:	bl	4028d0 <wcrtomb@plt>
  41c34c:	cmn	x0, #0x1
  41c350:	b.eq	41c2c8 <_obstack_memory_used@@Base+0x54e0>  // b.none
  41c354:	ldrb	w0, [sp, #128]
  41c358:	strb	w23, [x22, x0]
  41c35c:	b	41c2c8 <_obstack_memory_used@@Base+0x54e0>
  41c360:	ldr	x1, [sp, #104]
  41c364:	ldrb	w0, [x1, #56]
  41c368:	orr	w0, w0, #0x1
  41c36c:	strb	w0, [x1, #56]
  41c370:	ldp	x19, x20, [sp, #16]
  41c374:	b	41c37c <_obstack_memory_used@@Base+0x5594>
  41c378:	ldp	x19, x20, [sp, #16]
  41c37c:	ldp	x21, x22, [sp, #32]
  41c380:	ldp	x23, x24, [sp, #48]
  41c384:	ldp	x25, x26, [sp, #64]
  41c388:	ldp	x27, x28, [sp, #80]
  41c38c:	ldp	x29, x30, [sp], #384
  41c390:	ret
  41c394:	stp	x29, x30, [sp, #-128]!
  41c398:	mov	x29, sp
  41c39c:	stp	x19, x20, [sp, #16]
  41c3a0:	stp	x21, x22, [sp, #32]
  41c3a4:	mov	x19, x0
  41c3a8:	mov	x21, x1
  41c3ac:	mov	w22, w2
  41c3b0:	ldr	x20, [x0, #40]
  41c3b4:	cmp	x20, x1
  41c3b8:	b.le	41c4bc <_obstack_memory_used@@Base+0x56d4>
  41c3bc:	ldr	w0, [x0, #144]
  41c3c0:	cmp	w0, #0x1
  41c3c4:	b.gt	41c4c4 <_obstack_memory_used@@Base+0x56dc>
  41c3c8:	ldr	x0, [x19, #80]
  41c3cc:	str	x0, [x19, #88]
  41c3d0:	ldr	x0, [x19, #96]
  41c3d4:	str	x0, [x19, #104]
  41c3d8:	str	xzr, [x19, #48]
  41c3dc:	str	xzr, [x19, #40]
  41c3e0:	str	xzr, [x19, #56]
  41c3e4:	strb	wzr, [x19, #140]
  41c3e8:	tst	x22, #0x1
  41c3ec:	mov	w0, #0x4                   	// #4
  41c3f0:	mov	w1, #0x6                   	// #6
  41c3f4:	csel	w0, w0, w1, ne  // ne = any
  41c3f8:	str	w0, [x19, #112]
  41c3fc:	ldrb	w0, [x19, #139]
  41c400:	mov	x20, x21
  41c404:	cbnz	w0, 41c410 <_obstack_memory_used@@Base+0x5628>
  41c408:	ldr	x0, [x19]
  41c40c:	str	x0, [x19, #8]
  41c410:	cbz	x20, 41c47c <_obstack_memory_used@@Base+0x5694>
  41c414:	ldr	x0, [x19, #56]
  41c418:	cmp	x0, x20
  41c41c:	b.le	41c6d0 <_obstack_memory_used@@Base+0x58e8>
  41c420:	ldrb	w0, [x19, #140]
  41c424:	cbnz	w0, 41c4cc <_obstack_memory_used@@Base+0x56e4>
  41c428:	mov	w2, w22
  41c42c:	sub	x1, x20, #0x1
  41c430:	mov	x0, x19
  41c434:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41c438:	str	w0, [x19, #112]
  41c43c:	ldr	w0, [x19, #144]
  41c440:	cmp	w0, #0x1
  41c444:	b.gt	41c69c <_obstack_memory_used@@Base+0x58b4>
  41c448:	ldrb	w0, [x19, #139]
  41c44c:	cbnz	w0, 41c6b8 <_obstack_memory_used@@Base+0x58d0>
  41c450:	ldr	x0, [x19, #48]
  41c454:	sub	x0, x0, x20
  41c458:	str	x0, [x19, #48]
  41c45c:	ldr	x0, [x19, #56]
  41c460:	sub	x0, x0, x20
  41c464:	str	x0, [x19, #56]
  41c468:	ldrb	w0, [x19, #139]
  41c46c:	cbnz	w0, 41c47c <_obstack_memory_used@@Base+0x5694>
  41c470:	ldr	x0, [x19, #8]
  41c474:	add	x0, x0, x20
  41c478:	str	x0, [x19, #8]
  41c47c:	str	x21, [x19, #40]
  41c480:	ldr	x0, [x19, #88]
  41c484:	sub	x0, x0, x20
  41c488:	str	x0, [x19, #88]
  41c48c:	ldr	x1, [x19, #104]
  41c490:	sub	x20, x1, x20
  41c494:	str	x20, [x19, #104]
  41c498:	ldr	w1, [x19, #144]
  41c49c:	cmp	w1, #0x1
  41c4a0:	b.le	41c9e4 <_obstack_memory_used@@Base+0x5bfc>
  41c4a4:	ldrb	w0, [x19, #136]
  41c4a8:	cbz	w0, 41c9d8 <_obstack_memory_used@@Base+0x5bf0>
  41c4ac:	mov	x0, x19
  41c4b0:	bl	418524 <_obstack_memory_used@@Base+0x173c>
  41c4b4:	cbz	w0, 41c9f0 <_obstack_memory_used@@Base+0x5c08>
  41c4b8:	b	41c9f8 <_obstack_memory_used@@Base+0x5c10>
  41c4bc:	sub	x20, x1, x20
  41c4c0:	b	41c410 <_obstack_memory_used@@Base+0x5628>
  41c4c4:	str	xzr, [x19, #32]
  41c4c8:	b	41c3c8 <_obstack_memory_used@@Base+0x55e0>
  41c4cc:	stp	x23, x24, [sp, #48]
  41c4d0:	stp	x25, x26, [sp, #64]
  41c4d4:	ldr	x25, [x19, #48]
  41c4d8:	ldr	x24, [x19, #24]
  41c4dc:	mov	x1, x25
  41c4e0:	mov	x2, #0x0                   	// #0
  41c4e4:	b	41c4f4 <_obstack_memory_used@@Base+0x570c>
  41c4e8:	mov	x1, x23
  41c4ec:	cmp	x2, x1
  41c4f0:	b.ge	41c518 <_obstack_memory_used@@Base+0x5730>  // b.tcont
  41c4f4:	add	x23, x2, x1
  41c4f8:	add	x23, x23, x23, lsr #63
  41c4fc:	asr	x23, x23, #1
  41c500:	ldr	x0, [x24, x23, lsl #3]
  41c504:	cmp	x0, x20
  41c508:	b.gt	41c4e8 <_obstack_memory_used@@Base+0x5700>
  41c50c:	b.ge	41c520 <_obstack_memory_used@@Base+0x5738>  // b.tcont
  41c510:	add	x2, x23, #0x1
  41c514:	b	41c4ec <_obstack_memory_used@@Base+0x5704>
  41c518:	cmp	x0, x20
  41c51c:	cinc	x23, x23, lt  // lt = tstop
  41c520:	mov	w2, w22
  41c524:	sub	x1, x23, #0x1
  41c528:	mov	x0, x19
  41c52c:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41c530:	str	w0, [x19, #112]
  41c534:	cmp	x20, x25
  41c538:	ccmp	x20, x23, #0x0, lt  // lt = tstop
  41c53c:	b.eq	41c5c0 <_obstack_memory_used@@Base+0x57d8>  // b.none
  41c540:	ldr	x0, [x19, #80]
  41c544:	sub	x0, x0, x21
  41c548:	add	x0, x0, x20
  41c54c:	str	x0, [x19, #88]
  41c550:	ldr	x0, [x19, #96]
  41c554:	sub	x0, x0, x21
  41c558:	add	x0, x0, x20
  41c55c:	str	x0, [x19, #104]
  41c560:	strb	wzr, [x19, #140]
  41c564:	sub	x1, x24, #0x8
  41c568:	cmp	x23, #0x0
  41c56c:	b.le	41c584 <_obstack_memory_used@@Base+0x579c>
  41c570:	ldr	x0, [x1, x23, lsl #3]
  41c574:	cmp	x0, x20
  41c578:	b.ne	41c584 <_obstack_memory_used@@Base+0x579c>  // b.any
  41c57c:	subs	x23, x23, #0x1
  41c580:	b.ne	41c570 <_obstack_memory_used@@Base+0x5788>  // b.any
  41c584:	cmp	x23, x25
  41c588:	b.ge	41c64c <_obstack_memory_used@@Base+0x5864>  // b.tcont
  41c58c:	ldr	x1, [x19, #16]
  41c590:	ldr	w0, [x1, x23, lsl #2]
  41c594:	cmn	w0, #0x1
  41c598:	b.ne	41c64c <_obstack_memory_used@@Base+0x5864>  // b.any
  41c59c:	add	x23, x23, #0x1
  41c5a0:	cmp	x25, x23
  41c5a4:	b.ne	41c590 <_obstack_memory_used@@Base+0x57a8>  // b.any
  41c5a8:	str	xzr, [x19, #48]
  41c5ac:	ldr	x0, [x19, #48]
  41c5b0:	str	x0, [x19, #56]
  41c5b4:	ldp	x23, x24, [sp, #48]
  41c5b8:	ldp	x25, x26, [sp, #64]
  41c5bc:	b	41c468 <_obstack_memory_used@@Base+0x5680>
  41c5c0:	ldr	x0, [x24, x23, lsl #3]
  41c5c4:	cmp	x0, x20
  41c5c8:	b.ne	41c540 <_obstack_memory_used@@Base+0x5758>  // b.any
  41c5cc:	ldr	x0, [x19, #16]
  41c5d0:	sub	x2, x25, x20
  41c5d4:	lsl	x2, x2, #2
  41c5d8:	add	x1, x0, x20, lsl #2
  41c5dc:	bl	402280 <memmove@plt>
  41c5e0:	ldr	x0, [x19, #8]
  41c5e4:	ldr	x2, [x19, #48]
  41c5e8:	sub	x2, x2, x20
  41c5ec:	add	x1, x0, x20
  41c5f0:	bl	402280 <memmove@plt>
  41c5f4:	ldr	x0, [x19, #48]
  41c5f8:	sub	x0, x0, x20
  41c5fc:	str	x0, [x19, #48]
  41c600:	ldr	x1, [x19, #56]
  41c604:	sub	x1, x1, x20
  41c608:	str	x1, [x19, #56]
  41c60c:	cmp	x0, #0x0
  41c610:	b.le	41c9cc <_obstack_memory_used@@Base+0x5be4>
  41c614:	lsl	x2, x20, #3
  41c618:	mov	x0, #0x0                   	// #0
  41c61c:	ldr	x3, [x19, #24]
  41c620:	ldr	x1, [x3, x2]
  41c624:	sub	x1, x1, x20
  41c628:	str	x1, [x3, x0, lsl #3]
  41c62c:	add	x0, x0, #0x1
  41c630:	add	x2, x2, #0x8
  41c634:	ldr	x1, [x19, #48]
  41c638:	cmp	x1, x0
  41c63c:	b.gt	41c61c <_obstack_memory_used@@Base+0x5834>
  41c640:	ldp	x23, x24, [sp, #48]
  41c644:	ldp	x25, x26, [sp, #64]
  41c648:	b	41c468 <_obstack_memory_used@@Base+0x5680>
  41c64c:	cmp	x23, x25
  41c650:	b.eq	41c5a8 <_obstack_memory_used@@Base+0x57c0>  // b.none
  41c654:	ldr	x2, [x24, x23, lsl #3]
  41c658:	sub	x2, x2, x20
  41c65c:	str	x2, [x19, #48]
  41c660:	cbz	x2, 41c5ac <_obstack_memory_used@@Base+0x57c4>
  41c664:	cmp	x2, #0x0
  41c668:	b.le	41c68c <_obstack_memory_used@@Base+0x58a4>
  41c66c:	mov	x0, #0x0                   	// #0
  41c670:	mov	w3, #0xffffffff            	// #-1
  41c674:	ldr	x1, [x19, #16]
  41c678:	str	w3, [x1, x0, lsl #2]
  41c67c:	add	x0, x0, #0x1
  41c680:	ldr	x2, [x19, #48]
  41c684:	cmp	x2, x0
  41c688:	b.gt	41c674 <_obstack_memory_used@@Base+0x588c>
  41c68c:	mov	w1, #0xff                  	// #255
  41c690:	ldr	x0, [x19, #8]
  41c694:	bl	4024c0 <memset@plt>
  41c698:	b	41c5ac <_obstack_memory_used@@Base+0x57c4>
  41c69c:	ldr	x0, [x19, #16]
  41c6a0:	ldr	x2, [x19, #48]
  41c6a4:	sub	x2, x2, x20
  41c6a8:	lsl	x2, x2, #2
  41c6ac:	add	x1, x0, x20, lsl #2
  41c6b0:	bl	402280 <memmove@plt>
  41c6b4:	b	41c448 <_obstack_memory_used@@Base+0x5660>
  41c6b8:	ldr	x0, [x19, #8]
  41c6bc:	ldr	x2, [x19, #48]
  41c6c0:	sub	x2, x2, x20
  41c6c4:	add	x1, x0, x20
  41c6c8:	bl	402280 <memmove@plt>
  41c6cc:	b	41c450 <_obstack_memory_used@@Base+0x5668>
  41c6d0:	stp	x25, x26, [sp, #64]
  41c6d4:	ldr	x26, [x19, #48]
  41c6d8:	ldrb	w0, [x19, #140]
  41c6dc:	cbnz	w0, 41c7d4 <_obstack_memory_used@@Base+0x59ec>
  41c6e0:	str	xzr, [x19, #48]
  41c6e4:	ldr	w0, [x19, #144]
  41c6e8:	cmp	w0, #0x1
  41c6ec:	b.le	41c960 <_obstack_memory_used@@Base+0x5b78>
  41c6f0:	stp	x23, x24, [sp, #48]
  41c6f4:	ldrb	w1, [x19, #137]
  41c6f8:	cbz	w1, 41c748 <_obstack_memory_used@@Base+0x5960>
  41c6fc:	ldr	x1, [x19]
  41c700:	ldr	x24, [x19, #40]
  41c704:	add	x24, x1, x24
  41c708:	sub	x0, x20, w0, sxtw
  41c70c:	add	x0, x24, x0
  41c710:	cmp	x1, x0
  41c714:	csel	x1, x1, x0, cs  // cs = hs, nlast
  41c718:	mov	x25, x20
  41c71c:	sub	x23, x20, #0x1
  41c720:	add	x23, x24, x23
  41c724:	cmp	x1, x23
  41c728:	b.hi	41c748 <_obstack_memory_used@@Base+0x5960>  // b.pmore
  41c72c:	ldrb	w0, [x23]
  41c730:	and	w0, w0, #0xc0
  41c734:	cmp	w0, #0x80
  41c738:	b.ne	41c7fc <_obstack_memory_used@@Base+0x5a14>  // b.any
  41c73c:	sub	x23, x23, #0x1
  41c740:	cmp	x1, x23
  41c744:	b.ls	41c72c <_obstack_memory_used@@Base+0x5944>  // b.plast
  41c748:	ldr	x0, [x19, #40]
  41c74c:	ldr	x1, [x19, #56]
  41c750:	add	x0, x0, x1
  41c754:	cmp	x21, x0
  41c758:	b.le	41ca30 <_obstack_memory_used@@Base+0x5c48>
  41c75c:	stp	x27, x28, [sp, #80]
  41c760:	add	x27, x19, #0x20
  41c764:	ldr	x23, [x19, #80]
  41c768:	sub	x23, x23, x0
  41c76c:	ldr	x28, [x19, #32]
  41c770:	mov	x25, x0
  41c774:	ldr	x1, [x19]
  41c778:	mov	x3, x27
  41c77c:	mov	x2, x23
  41c780:	add	x1, x1, x0
  41c784:	add	x0, sp, #0x78
  41c788:	bl	4169f8 <wcrtomb@plt+0x14128>
  41c78c:	sub	x1, x0, #0x1
  41c790:	cmn	x1, #0x4
  41c794:	b.hi	41c8c4 <_obstack_memory_used@@Base+0x5adc>  // b.pmore
  41c798:	ldr	w24, [sp, #120]
  41c79c:	add	x0, x25, x0
  41c7a0:	cmp	x21, x0
  41c7a4:	b.gt	41c764 <_obstack_memory_used@@Base+0x597c>
  41c7a8:	sub	x0, x0, x21
  41c7ac:	str	x0, [x19, #48]
  41c7b0:	cmn	w24, #0x1
  41c7b4:	b.ne	41c8e8 <_obstack_memory_used@@Base+0x5b00>  // b.any
  41c7b8:	ldp	x27, x28, [sp, #80]
  41c7bc:	mov	w2, w22
  41c7c0:	sub	x1, x26, #0x1
  41c7c4:	mov	x0, x19
  41c7c8:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41c7cc:	str	w0, [x19, #112]
  41c7d0:	b	41c868 <_obstack_memory_used@@Base+0x5a80>
  41c7d4:	ldr	x0, [x19, #80]
  41c7d8:	sub	x0, x0, x21
  41c7dc:	add	x0, x0, x20
  41c7e0:	str	x0, [x19, #88]
  41c7e4:	ldr	x0, [x19, #96]
  41c7e8:	sub	x0, x0, x21
  41c7ec:	add	x0, x0, x20
  41c7f0:	str	x0, [x19, #104]
  41c7f4:	strb	wzr, [x19, #140]
  41c7f8:	b	41c6e0 <_obstack_memory_used@@Base+0x58f8>
  41c7fc:	ldr	x2, [x19, #88]
  41c800:	add	x2, x24, x2
  41c804:	sub	x2, x2, x23
  41c808:	ldr	x3, [x19, #120]
  41c80c:	mov	x1, x23
  41c810:	cbnz	x3, 41c884 <_obstack_memory_used@@Base+0x5a9c>
  41c814:	str	xzr, [sp, #120]
  41c818:	add	x3, sp, #0x78
  41c81c:	add	x0, sp, #0x6c
  41c820:	bl	4169f8 <wcrtomb@plt+0x14128>
  41c824:	add	x24, x24, x25
  41c828:	sub	x23, x24, x23
  41c82c:	cmp	x23, x0
  41c830:	ccmn	x0, #0x3, #0x2, ls  // ls = plast
  41c834:	b.hi	41c748 <_obstack_memory_used@@Base+0x5960>  // b.pmore
  41c838:	str	xzr, [x19, #32]
  41c83c:	sub	x23, x0, x23
  41c840:	str	x23, [x19, #48]
  41c844:	ldr	w24, [sp, #108]
  41c848:	cmn	w24, #0x1
  41c84c:	b.eq	41c748 <_obstack_memory_used@@Base+0x5960>  // b.none
  41c850:	ldrb	w0, [x19, #142]
  41c854:	cbnz	w0, 41c8f0 <_obstack_memory_used@@Base+0x5b08>
  41c858:	mov	w1, #0x0                   	// #0
  41c85c:	cmp	w24, #0xa
  41c860:	b.eq	41c90c <_obstack_memory_used@@Base+0x5b24>  // b.none
  41c864:	str	w1, [x19, #112]
  41c868:	ldr	x2, [x19, #48]
  41c86c:	cbnz	x2, 41c920 <_obstack_memory_used@@Base+0x5b38>
  41c870:	ldr	x0, [x19, #48]
  41c874:	str	x0, [x19, #56]
  41c878:	ldp	x23, x24, [sp, #48]
  41c87c:	ldp	x25, x26, [sp, #64]
  41c880:	b	41c468 <_obstack_memory_used@@Base+0x5680>
  41c884:	cmp	x2, #0x6
  41c888:	mov	x0, #0x6                   	// #6
  41c88c:	csel	x0, x2, x0, le
  41c890:	subs	w0, w0, #0x1
  41c894:	b.mi	41c8bc <_obstack_memory_used@@Base+0x5ad4>  // b.first
  41c898:	sxtw	x0, w0
  41c89c:	add	x4, sp, #0x70
  41c8a0:	ldrb	w1, [x23, x0]
  41c8a4:	ldrb	w1, [x3, x1]
  41c8a8:	strb	w1, [x0, x4]
  41c8ac:	sub	x0, x0, #0x1
  41c8b0:	tbz	w0, #31, 41c8a0 <_obstack_memory_used@@Base+0x5ab8>
  41c8b4:	add	x1, sp, #0x70
  41c8b8:	b	41c814 <_obstack_memory_used@@Base+0x5a2c>
  41c8bc:	add	x1, sp, #0x70
  41c8c0:	b	41c814 <_obstack_memory_used@@Base+0x5a2c>
  41c8c4:	cmp	x0, #0x0
  41c8c8:	mov	w24, #0x0                   	// #0
  41c8cc:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  41c8d0:	b.eq	41c8dc <_obstack_memory_used@@Base+0x5af4>  // b.none
  41c8d4:	ldr	x0, [x19]
  41c8d8:	ldrb	w24, [x0, x25]
  41c8dc:	str	x28, [x19, #32]
  41c8e0:	mov	x0, #0x1                   	// #1
  41c8e4:	b	41c79c <_obstack_memory_used@@Base+0x59b4>
  41c8e8:	ldp	x27, x28, [sp, #80]
  41c8ec:	b	41c850 <_obstack_memory_used@@Base+0x5a68>
  41c8f0:	mov	w0, w24
  41c8f4:	bl	402770 <iswalnum@plt>
  41c8f8:	cmp	w24, #0x5f
  41c8fc:	mov	w1, #0x1                   	// #1
  41c900:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41c904:	b.ne	41c864 <_obstack_memory_used@@Base+0x5a7c>  // b.any
  41c908:	b	41c858 <_obstack_memory_used@@Base+0x5a70>
  41c90c:	ldrb	w0, [x19, #141]
  41c910:	cmp	w0, #0x0
  41c914:	cset	w1, ne  // ne = any
  41c918:	lsl	w1, w1, #1
  41c91c:	b	41c864 <_obstack_memory_used@@Base+0x5a7c>
  41c920:	cmp	x2, #0x0
  41c924:	b.le	41c948 <_obstack_memory_used@@Base+0x5b60>
  41c928:	mov	x0, #0x0                   	// #0
  41c92c:	mov	w3, #0xffffffff            	// #-1
  41c930:	ldr	x1, [x19, #16]
  41c934:	str	w3, [x1, x0, lsl #2]
  41c938:	add	x0, x0, #0x1
  41c93c:	ldr	x2, [x19, #48]
  41c940:	cmp	x2, x0
  41c944:	b.gt	41c930 <_obstack_memory_used@@Base+0x5b48>
  41c948:	ldrb	w0, [x19, #139]
  41c94c:	cbz	w0, 41c870 <_obstack_memory_used@@Base+0x5a88>
  41c950:	mov	w1, #0xff                  	// #255
  41c954:	ldr	x0, [x19, #8]
  41c958:	bl	4024c0 <memset@plt>
  41c95c:	b	41c870 <_obstack_memory_used@@Base+0x5a88>
  41c960:	ldr	x0, [x19]
  41c964:	ldr	x1, [x19, #40]
  41c968:	add	x0, x0, x20
  41c96c:	add	x0, x0, x1
  41c970:	ldurb	w0, [x0, #-1]
  41c974:	str	xzr, [x19, #56]
  41c978:	ldr	x1, [x19, #120]
  41c97c:	cbz	x1, 41c988 <_obstack_memory_used@@Base+0x5ba0>
  41c980:	and	x0, x0, #0xff
  41c984:	ldrb	w0, [x1, x0]
  41c988:	ubfx	x1, x0, #6, #2
  41c98c:	ldr	x2, [x19, #128]
  41c990:	ldr	x1, [x2, x1, lsl #3]
  41c994:	lsr	x1, x1, x0
  41c998:	mov	w2, #0x1                   	// #1
  41c99c:	tbnz	w1, #0, 41c9ac <_obstack_memory_used@@Base+0x5bc4>
  41c9a0:	mov	w2, #0x0                   	// #0
  41c9a4:	cmp	w0, #0xa
  41c9a8:	b.eq	41c9b8 <_obstack_memory_used@@Base+0x5bd0>  // b.none
  41c9ac:	str	w2, [x19, #112]
  41c9b0:	ldp	x25, x26, [sp, #64]
  41c9b4:	b	41c468 <_obstack_memory_used@@Base+0x5680>
  41c9b8:	ldrb	w0, [x19, #141]
  41c9bc:	cmp	w0, #0x0
  41c9c0:	cset	w2, ne  // ne = any
  41c9c4:	lsl	w2, w2, #1
  41c9c8:	b	41c9ac <_obstack_memory_used@@Base+0x5bc4>
  41c9cc:	ldp	x23, x24, [sp, #48]
  41c9d0:	ldp	x25, x26, [sp, #64]
  41c9d4:	b	41c468 <_obstack_memory_used@@Base+0x5680>
  41c9d8:	mov	x0, x19
  41c9dc:	bl	418350 <_obstack_memory_used@@Base+0x1568>
  41c9e0:	b	41c9f0 <_obstack_memory_used@@Base+0x5c08>
  41c9e4:	ldrb	w1, [x19, #139]
  41c9e8:	cbnz	w1, 41ca08 <_obstack_memory_used@@Base+0x5c20>
  41c9ec:	str	x0, [x19, #48]
  41c9f0:	str	xzr, [x19, #72]
  41c9f4:	mov	w0, #0x0                   	// #0
  41c9f8:	ldp	x19, x20, [sp, #16]
  41c9fc:	ldp	x21, x22, [sp, #32]
  41ca00:	ldp	x29, x30, [sp], #128
  41ca04:	ret
  41ca08:	ldrb	w0, [x19, #136]
  41ca0c:	cbnz	w0, 41ca24 <_obstack_memory_used@@Base+0x5c3c>
  41ca10:	ldr	x0, [x19, #120]
  41ca14:	cbz	x0, 41c9f0 <_obstack_memory_used@@Base+0x5c08>
  41ca18:	mov	x0, x19
  41ca1c:	bl	416e88 <_obstack_memory_used@@Base+0xa0>
  41ca20:	b	41c9f0 <_obstack_memory_used@@Base+0x5c08>
  41ca24:	mov	x0, x19
  41ca28:	bl	4182b8 <_obstack_memory_used@@Base+0x14d0>
  41ca2c:	b	41c9f0 <_obstack_memory_used@@Base+0x5c08>
  41ca30:	sub	x0, x0, x21
  41ca34:	str	x0, [x19, #48]
  41ca38:	b	41c7bc <_obstack_memory_used@@Base+0x59d4>
  41ca3c:	stp	x29, x30, [sp, #-80]!
  41ca40:	mov	x29, sp
  41ca44:	stp	x19, x20, [sp, #16]
  41ca48:	stp	x21, x22, [sp, #32]
  41ca4c:	stp	x23, x24, [sp, #48]
  41ca50:	mov	x24, x2
  41ca54:	mov	x20, x3
  41ca58:	lsl	x21, x1, #4
  41ca5c:	ldr	x23, [x0]
  41ca60:	add	x1, x23, x21
  41ca64:	ldrb	w22, [x1, #8]
  41ca68:	cmp	w22, #0x7
  41ca6c:	b.eq	41cabc <_obstack_memory_used@@Base+0x5cd4>  // b.none
  41ca70:	str	x25, [sp, #64]
  41ca74:	mov	x25, x0
  41ca78:	mov	x1, x3
  41ca7c:	mov	x0, x2
  41ca80:	bl	416e14 <_obstack_memory_used@@Base+0x2c>
  41ca84:	mov	w19, w0
  41ca88:	cmp	w22, #0x5
  41ca8c:	b.eq	41cbc4 <_obstack_memory_used@@Base+0x5ddc>  // b.none
  41ca90:	cmp	w22, #0x6
  41ca94:	ccmp	w0, #0x1, #0x4, eq  // eq = none
  41ca98:	b.gt	41cc00 <_obstack_memory_used@@Base+0x5e18>
  41ca9c:	mov	w19, #0x0                   	// #0
  41caa0:	ldr	x25, [sp, #64]
  41caa4:	mov	w0, w19
  41caa8:	ldp	x19, x20, [sp, #16]
  41caac:	ldp	x21, x22, [sp, #32]
  41cab0:	ldp	x23, x24, [sp, #48]
  41cab4:	ldp	x29, x30, [sp], #80
  41cab8:	ret
  41cabc:	ldr	x0, [x2, #8]
  41cac0:	add	x2, x0, x3
  41cac4:	ldrb	w1, [x0, x3]
  41cac8:	mov	w19, #0x0                   	// #0
  41cacc:	cmp	w1, #0xc1
  41cad0:	b.ls	41caa4 <_obstack_memory_used@@Base+0x5cbc>  // b.plast
  41cad4:	ldr	x4, [x24, #88]
  41cad8:	add	x3, x3, #0x1
  41cadc:	cmp	x3, x4
  41cae0:	b.ge	41caa4 <_obstack_memory_used@@Base+0x5cbc>  // b.tcont
  41cae4:	ldrb	w0, [x2, #1]
  41cae8:	cmp	w1, #0xdf
  41caec:	b.ls	41cb48 <_obstack_memory_used@@Base+0x5d60>  // b.plast
  41caf0:	cmp	w1, #0xef
  41caf4:	b.hi	41cb60 <_obstack_memory_used@@Base+0x5d78>  // b.pmore
  41caf8:	cmp	w1, #0xe0
  41cafc:	mov	w19, #0x0                   	// #0
  41cb00:	mov	w1, #0x9f                  	// #159
  41cb04:	ccmp	w0, w1, #0x2, eq  // eq = none
  41cb08:	b.ls	41caa4 <_obstack_memory_used@@Base+0x5cbc>  // b.plast
  41cb0c:	mov	w19, #0x3                   	// #3
  41cb10:	sxtw	x3, w19
  41cb14:	add	x20, x3, x20
  41cb18:	cmp	x4, x20
  41cb1c:	b.lt	41cd00 <_obstack_memory_used@@Base+0x5f18>  // b.tstop
  41cb20:	mov	x1, #0x1                   	// #1
  41cb24:	ldrb	w0, [x2, x1]
  41cb28:	sub	w0, w0, #0x80
  41cb2c:	and	w0, w0, #0xff
  41cb30:	cmp	w0, #0x3f
  41cb34:	b.hi	41cd08 <_obstack_memory_used@@Base+0x5f20>  // b.pmore
  41cb38:	add	x1, x1, #0x1
  41cb3c:	cmp	x3, x1
  41cb40:	b.gt	41cb24 <_obstack_memory_used@@Base+0x5d3c>
  41cb44:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cb48:	sub	w0, w0, #0x80
  41cb4c:	and	w0, w0, #0xff
  41cb50:	cmp	w0, #0x40
  41cb54:	cset	w19, cc  // cc = lo, ul, last
  41cb58:	lsl	w19, w19, #1
  41cb5c:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cb60:	cmp	w1, #0xf7
  41cb64:	b.hi	41cb84 <_obstack_memory_used@@Base+0x5d9c>  // b.pmore
  41cb68:	cmp	w1, #0xf0
  41cb6c:	mov	w19, #0x0                   	// #0
  41cb70:	mov	w1, #0x8f                  	// #143
  41cb74:	ccmp	w0, w1, #0x2, eq  // eq = none
  41cb78:	b.ls	41caa4 <_obstack_memory_used@@Base+0x5cbc>  // b.plast
  41cb7c:	mov	w19, #0x4                   	// #4
  41cb80:	b	41cb10 <_obstack_memory_used@@Base+0x5d28>
  41cb84:	cmp	w1, #0xfb
  41cb88:	b.hi	41cba4 <_obstack_memory_used@@Base+0x5dbc>  // b.pmore
  41cb8c:	cmp	w1, #0xf8
  41cb90:	mov	w1, #0x87                  	// #135
  41cb94:	ccmp	w0, w1, #0x2, eq  // eq = none
  41cb98:	b.ls	41cce8 <_obstack_memory_used@@Base+0x5f00>  // b.plast
  41cb9c:	mov	w19, #0x5                   	// #5
  41cba0:	b	41cb10 <_obstack_memory_used@@Base+0x5d28>
  41cba4:	cmp	w1, #0xfd
  41cba8:	b.hi	41ccf0 <_obstack_memory_used@@Base+0x5f08>  // b.pmore
  41cbac:	cmp	w1, #0xfc
  41cbb0:	mov	w1, #0x83                  	// #131
  41cbb4:	ccmp	w0, w1, #0x2, eq  // eq = none
  41cbb8:	b.ls	41ccf8 <_obstack_memory_used@@Base+0x5f10>  // b.plast
  41cbbc:	mov	w19, #0x6                   	// #6
  41cbc0:	b	41cb10 <_obstack_memory_used@@Base+0x5d28>
  41cbc4:	cmp	w0, #0x1
  41cbc8:	b.le	41cd10 <_obstack_memory_used@@Base+0x5f28>
  41cbcc:	ldr	x0, [x25, #216]
  41cbd0:	tbnz	w0, #6, 41cbe4 <_obstack_memory_used@@Base+0x5dfc>
  41cbd4:	ldr	x1, [x24, #8]
  41cbd8:	ldrb	w1, [x1, x20]
  41cbdc:	cmp	w1, #0xa
  41cbe0:	b.eq	41cd1c <_obstack_memory_used@@Base+0x5f34>  // b.none
  41cbe4:	tbz	w0, #7, 41cd6c <_obstack_memory_used@@Base+0x5f84>
  41cbe8:	ldr	x0, [x24, #8]
  41cbec:	ldrb	w0, [x0, x20]
  41cbf0:	cmp	w0, #0x0
  41cbf4:	csel	w19, w19, wzr, ne  // ne = any
  41cbf8:	ldr	x25, [sp, #64]
  41cbfc:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cc00:	ldr	x22, [x23, x21]
  41cc04:	ldr	x0, [x22, #64]
  41cc08:	cbnz	x0, 41cc24 <_obstack_memory_used@@Base+0x5e3c>
  41cc0c:	ldr	x0, [x22, #72]
  41cc10:	cbnz	x0, 41cc24 <_obstack_memory_used@@Base+0x5e3c>
  41cc14:	ldr	x0, [x22, #40]
  41cc18:	cbnz	x0, 41cd4c <_obstack_memory_used@@Base+0x5f64>
  41cc1c:	mov	w20, #0x0                   	// #0
  41cc20:	b	41cc94 <_obstack_memory_used@@Base+0x5eac>
  41cc24:	mov	x1, x20
  41cc28:	mov	x0, x24
  41cc2c:	bl	416e64 <_obstack_memory_used@@Base+0x7c>
  41cc30:	mov	w20, w0
  41cc34:	ldr	x2, [x22, #40]
  41cc38:	cmp	x2, #0x0
  41cc3c:	b.le	41cc60 <_obstack_memory_used@@Base+0x5e78>
  41cc40:	ldr	x3, [x22]
  41cc44:	mov	x1, #0x0                   	// #0
  41cc48:	ldr	w0, [x3, x1, lsl #2]
  41cc4c:	cmp	w0, w20
  41cc50:	b.eq	41ccd4 <_obstack_memory_used@@Base+0x5eec>  // b.none
  41cc54:	add	x1, x1, #0x1
  41cc58:	cmp	x2, x1
  41cc5c:	b.ne	41cc48 <_obstack_memory_used@@Base+0x5e60>  // b.any
  41cc60:	ldr	x0, [x22, #72]
  41cc64:	cmp	x0, #0x0
  41cc68:	b.le	41cc94 <_obstack_memory_used@@Base+0x5eac>
  41cc6c:	mov	x21, #0x0                   	// #0
  41cc70:	ldr	x0, [x22, #24]
  41cc74:	ldr	x1, [x0, x21, lsl #3]
  41cc78:	mov	w0, w20
  41cc7c:	bl	4023e0 <iswctype@plt>
  41cc80:	cbnz	w0, 41ccd4 <_obstack_memory_used@@Base+0x5eec>
  41cc84:	add	x21, x21, #0x1
  41cc88:	ldr	x0, [x22, #72]
  41cc8c:	cmp	x0, x21
  41cc90:	b.gt	41cc70 <_obstack_memory_used@@Base+0x5e88>
  41cc94:	ldr	x2, [x22, #64]
  41cc98:	cmp	x2, #0x0
  41cc9c:	b.le	41cd34 <_obstack_memory_used@@Base+0x5f4c>
  41cca0:	ldr	x3, [x22, #8]
  41cca4:	mov	x0, #0x0                   	// #0
  41cca8:	b	41ccb8 <_obstack_memory_used@@Base+0x5ed0>
  41ccac:	add	x0, x0, #0x1
  41ccb0:	cmp	x2, x0
  41ccb4:	b.eq	41cd34 <_obstack_memory_used@@Base+0x5f4c>  // b.none
  41ccb8:	ldr	w1, [x3, x0, lsl #2]
  41ccbc:	cmp	w20, w1
  41ccc0:	b.cc	41ccac <_obstack_memory_used@@Base+0x5ec4>  // b.lo, b.ul, b.last
  41ccc4:	ldr	x1, [x22, #16]
  41ccc8:	ldr	w1, [x1, x0, lsl #2]
  41cccc:	cmp	w20, w1
  41ccd0:	b.hi	41ccac <_obstack_memory_used@@Base+0x5ec4>  // b.pmore
  41ccd4:	ldrb	w0, [x22, #32]
  41ccd8:	tst	x0, #0x1
  41ccdc:	csel	w19, w19, wzr, eq  // eq = none
  41cce0:	ldr	x25, [sp, #64]
  41cce4:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cce8:	mov	w19, #0x0                   	// #0
  41ccec:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41ccf0:	mov	w19, #0x0                   	// #0
  41ccf4:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41ccf8:	mov	w19, #0x0                   	// #0
  41ccfc:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd00:	mov	w19, #0x0                   	// #0
  41cd04:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd08:	mov	w19, #0x0                   	// #0
  41cd0c:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd10:	mov	w19, #0x0                   	// #0
  41cd14:	ldr	x25, [sp, #64]
  41cd18:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd1c:	mov	w19, #0x0                   	// #0
  41cd20:	ldr	x25, [sp, #64]
  41cd24:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd28:	mov	w19, #0x0                   	// #0
  41cd2c:	ldr	x25, [sp, #64]
  41cd30:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd34:	ldrb	w0, [x22, #32]
  41cd38:	tbz	w0, #0, 41cd28 <_obstack_memory_used@@Base+0x5f40>
  41cd3c:	cmp	w19, #0x0
  41cd40:	csinc	w19, w19, wzr, gt
  41cd44:	ldr	x25, [sp, #64]
  41cd48:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd4c:	mov	x1, x20
  41cd50:	mov	x0, x24
  41cd54:	bl	416e64 <_obstack_memory_used@@Base+0x7c>
  41cd58:	mov	w20, w0
  41cd5c:	ldr	x2, [x22, #40]
  41cd60:	cmp	x2, #0x0
  41cd64:	b.gt	41cc40 <_obstack_memory_used@@Base+0x5e58>
  41cd68:	b	41cc94 <_obstack_memory_used@@Base+0x5eac>
  41cd6c:	ldr	x25, [sp, #64]
  41cd70:	b	41caa4 <_obstack_memory_used@@Base+0x5cbc>
  41cd74:	stp	x29, x30, [sp, #-288]!
  41cd78:	mov	x29, sp
  41cd7c:	stp	x23, x24, [sp, #48]
  41cd80:	stp	x27, x28, [sp, #80]
  41cd84:	mov	x24, x0
  41cd88:	mov	x28, x1
  41cd8c:	mov	x0, #0x3800                	// #14336
  41cd90:	bl	4023f0 <malloc@plt>
  41cd94:	str	x0, [sp, #112]
  41cd98:	cbz	x0, 41d704 <_obstack_memory_used@@Base+0x691c>
  41cd9c:	stp	x19, x20, [sp, #16]
  41cda0:	str	x0, [sp, #120]
  41cda4:	add	x0, x0, #0x1, lsl #12
  41cda8:	add	x0, x0, #0x800
  41cdac:	str	x0, [sp, #96]
  41cdb0:	str	xzr, [x28, #88]
  41cdb4:	str	xzr, [x28, #96]
  41cdb8:	stp	xzr, xzr, [sp, #128]
  41cdbc:	stp	xzr, xzr, [sp, #144]
  41cdc0:	ldr	x0, [x28, #16]
  41cdc4:	cmp	x0, #0x0
  41cdc8:	b.le	41d718 <_obstack_memory_used@@Base+0x6930>
  41cdcc:	stp	x21, x22, [sp, #32]
  41cdd0:	stp	x25, x26, [sp, #64]
  41cdd4:	mov	x19, #0x0                   	// #0
  41cdd8:	mov	x27, #0x0                   	// #0
  41cddc:	b	41d17c <_obstack_memory_used@@Base+0x6394>
  41cde0:	ldrb	w2, [x2, x1]
  41cde4:	add	x3, sp, #0x80
  41cde8:	ubfx	x4, x2, #6, #2
  41cdec:	mov	x1, #0x1                   	// #1
  41cdf0:	lsl	x2, x1, x2
  41cdf4:	ldr	x1, [x3, x4, lsl #3]
  41cdf8:	orr	x1, x1, x2
  41cdfc:	str	x1, [x3, x4, lsl #3]
  41ce00:	cbz	w0, 41cebc <_obstack_memory_used@@Base+0x60d4>
  41ce04:	tbnz	w0, #5, 41cf74 <_obstack_memory_used@@Base+0x618c>
  41ce08:	tbnz	w0, #7, 41cf90 <_obstack_memory_used@@Base+0x61a8>
  41ce0c:	tbz	w0, #2, 41ce64 <_obstack_memory_used@@Base+0x607c>
  41ce10:	cmp	w25, #0x1
  41ce14:	b.eq	41cf9c <_obstack_memory_used@@Base+0x61b4>  // b.none
  41ce18:	ldr	w1, [x24, #180]
  41ce1c:	cmp	w1, #0x1
  41ce20:	b.le	41cfb0 <_obstack_memory_used@@Base+0x61c8>
  41ce24:	ldr	x7, [x24, #120]
  41ce28:	add	x4, sp, #0x80
  41ce2c:	mov	x3, #0x0                   	// #0
  41ce30:	mov	x2, #0x0                   	// #0
  41ce34:	add	x6, x24, #0xb8
  41ce38:	ldr	x1, [x7, x2, lsl #3]
  41ce3c:	ldr	x5, [x6, x2, lsl #3]
  41ce40:	orn	x1, x5, x1
  41ce44:	ldr	x5, [x4]
  41ce48:	and	x1, x1, x5
  41ce4c:	str	x1, [x4], #8
  41ce50:	orr	x3, x3, x1
  41ce54:	add	x2, x2, #0x1
  41ce58:	cmp	x2, #0x4
  41ce5c:	b.ne	41ce38 <_obstack_memory_used@@Base+0x6050>  // b.any
  41ce60:	cbz	x3, 41d16c <_obstack_memory_used@@Base+0x6384>
  41ce64:	tbz	w0, #3, 41cebc <_obstack_memory_used@@Base+0x60d4>
  41ce68:	cmp	w25, #0x1
  41ce6c:	b.eq	41cfe4 <_obstack_memory_used@@Base+0x61fc>  // b.none
  41ce70:	ldr	w0, [x24, #180]
  41ce74:	cmp	w0, #0x1
  41ce78:	b.le	41cff8 <_obstack_memory_used@@Base+0x6210>
  41ce7c:	ldr	x6, [x24, #120]
  41ce80:	add	x3, sp, #0x80
  41ce84:	mov	x2, #0x0                   	// #0
  41ce88:	mov	x1, #0x0                   	// #0
  41ce8c:	add	x5, x24, #0xb8
  41ce90:	ldr	x0, [x5, x1, lsl #3]
  41ce94:	ldr	x4, [x6, x1, lsl #3]
  41ce98:	and	x0, x0, x4
  41ce9c:	ldr	x4, [x3]
  41cea0:	bic	x0, x4, x0
  41cea4:	str	x0, [x3], #8
  41cea8:	orr	x2, x2, x0
  41ceac:	add	x1, x1, #0x1
  41ceb0:	cmp	x1, #0x4
  41ceb4:	b.ne	41ce90 <_obstack_memory_used@@Base+0x60a8>  // b.any
  41ceb8:	cbz	x2, 41d16c <_obstack_memory_used@@Base+0x6384>
  41cebc:	cmp	x19, #0x0
  41cec0:	b.le	41d1f4 <_obstack_memory_used@@Base+0x640c>
  41cec4:	ldr	x23, [sp, #112]
  41cec8:	add	x21, x23, #0x1, lsl #12
  41cecc:	add	x21, x21, #0x7f8
  41ced0:	mov	x20, #0x0                   	// #0
  41ced4:	b	41d084 <_obstack_memory_used@@Base+0x629c>
  41ced8:	ldr	x5, [x2, x1]
  41cedc:	add	x3, sp, #0x80
  41cee0:	mov	x1, #0x0                   	// #0
  41cee4:	ldr	x2, [x3]
  41cee8:	ldr	x4, [x5, x1]
  41ceec:	orr	x2, x2, x4
  41cef0:	str	x2, [x3], #8
  41cef4:	add	x1, x1, #0x8
  41cef8:	cmp	x1, #0x20
  41cefc:	b.ne	41cee4 <_obstack_memory_used@@Base+0x60fc>  // b.any
  41cf00:	b	41ce00 <_obstack_memory_used@@Base+0x6018>
  41cf04:	ldr	w1, [x24, #180]
  41cf08:	cmp	w1, #0x1
  41cf0c:	b.le	41cf3c <_obstack_memory_used@@Base+0x6154>
  41cf10:	ldr	x5, [x24, #120]
  41cf14:	add	x3, sp, #0x80
  41cf18:	mov	x1, #0x0                   	// #0
  41cf1c:	ldr	x2, [x3]
  41cf20:	ldr	x4, [x5, x1]
  41cf24:	orr	x2, x2, x4
  41cf28:	str	x2, [x3], #8
  41cf2c:	add	x1, x1, #0x8
  41cf30:	cmp	x1, #0x20
  41cf34:	b.ne	41cf1c <_obstack_memory_used@@Base+0x6134>  // b.any
  41cf38:	b	41cf4c <_obstack_memory_used@@Base+0x6164>
  41cf3c:	mov	x2, #0xffffffffffffffff    	// #-1
  41cf40:	mov	x3, #0xffffffffffffffff    	// #-1
  41cf44:	stp	x2, x3, [sp, #128]
  41cf48:	stp	x2, x3, [sp, #144]
  41cf4c:	ldr	x1, [x24, #216]
  41cf50:	tbnz	w1, #6, 41cf60 <_obstack_memory_used@@Base+0x6178>
  41cf54:	ldr	x2, [sp, #128]
  41cf58:	and	x2, x2, #0xfffffffffffffbff
  41cf5c:	str	x2, [sp, #128]
  41cf60:	tbz	w1, #7, 41ce00 <_obstack_memory_used@@Base+0x6018>
  41cf64:	ldr	x1, [sp, #128]
  41cf68:	and	x1, x1, #0xfffffffffffffffe
  41cf6c:	str	x1, [sp, #128]
  41cf70:	b	41ce00 <_obstack_memory_used@@Base+0x6018>
  41cf74:	ldr	x1, [sp, #128]
  41cf78:	stp	xzr, xzr, [sp, #128]
  41cf7c:	stp	xzr, xzr, [sp, #144]
  41cf80:	tbz	w1, #10, 41d16c <_obstack_memory_used@@Base+0x6384>
  41cf84:	mov	x1, #0x400                 	// #1024
  41cf88:	str	x1, [sp, #128]
  41cf8c:	b	41ce08 <_obstack_memory_used@@Base+0x6020>
  41cf90:	stp	xzr, xzr, [sp, #128]
  41cf94:	stp	xzr, xzr, [sp, #144]
  41cf98:	b	41d16c <_obstack_memory_used@@Base+0x6384>
  41cf9c:	ldrb	w1, [x26, #10]
  41cfa0:	tbnz	w1, #6, 41ce18 <_obstack_memory_used@@Base+0x6030>
  41cfa4:	stp	xzr, xzr, [sp, #128]
  41cfa8:	stp	xzr, xzr, [sp, #144]
  41cfac:	b	41d16c <_obstack_memory_used@@Base+0x6384>
  41cfb0:	add	x4, sp, #0x80
  41cfb4:	mov	x3, #0x0                   	// #0
  41cfb8:	mov	x2, #0x0                   	// #0
  41cfbc:	add	x6, x24, #0xb8
  41cfc0:	ldr	x1, [x6, x2, lsl #3]
  41cfc4:	ldr	x5, [x4]
  41cfc8:	and	x1, x1, x5
  41cfcc:	str	x1, [x4], #8
  41cfd0:	orr	x3, x3, x1
  41cfd4:	add	x2, x2, #0x1
  41cfd8:	cmp	x2, #0x4
  41cfdc:	b.ne	41cfc0 <_obstack_memory_used@@Base+0x61d8>  // b.any
  41cfe0:	b	41ce60 <_obstack_memory_used@@Base+0x6078>
  41cfe4:	ldrb	w0, [x26, #10]
  41cfe8:	tbz	w0, #6, 41ce70 <_obstack_memory_used@@Base+0x6088>
  41cfec:	stp	xzr, xzr, [sp, #128]
  41cff0:	stp	xzr, xzr, [sp, #144]
  41cff4:	b	41d16c <_obstack_memory_used@@Base+0x6384>
  41cff8:	add	x3, sp, #0x80
  41cffc:	mov	x2, #0x0                   	// #0
  41d000:	mov	x1, #0x0                   	// #0
  41d004:	add	x5, x24, #0xb8
  41d008:	ldr	x0, [x5, x1, lsl #3]
  41d00c:	ldr	x4, [x3]
  41d010:	bic	x0, x4, x0
  41d014:	str	x0, [x3], #8
  41d018:	orr	x2, x2, x0
  41d01c:	add	x1, x1, #0x1
  41d020:	cmp	x1, #0x4
  41d024:	b.ne	41d008 <_obstack_memory_used@@Base+0x6220>  // b.any
  41d028:	b	41ceb8 <_obstack_memory_used@@Base+0x60d0>
  41d02c:	mov	x0, #0x1                   	// #1
  41d030:	mov	x3, #0x0                   	// #0
  41d034:	mov	x6, x21
  41d038:	lsl	x2, x0, #3
  41d03c:	add	x1, sp, #0x80
  41d040:	add	x1, x2, x1
  41d044:	ldur	x1, [x1, #-8]
  41d048:	ldr	x4, [x21, x0, lsl #3]
  41d04c:	and	x1, x1, x4
  41d050:	add	x4, sp, #0xa0
  41d054:	add	x2, x2, x4
  41d058:	stur	x1, [x2, #-8]
  41d05c:	orr	x3, x3, x1
  41d060:	add	x0, x0, #0x1
  41d064:	cmp	x0, #0x5
  41d068:	b.ne	41d038 <_obstack_memory_used@@Base+0x6250>  // b.any
  41d06c:	cbnz	x3, 41d0b8 <_obstack_memory_used@@Base+0x62d0>
  41d070:	add	x20, x20, #0x1
  41d074:	add	x21, x21, #0x20
  41d078:	add	x23, x23, #0x18
  41d07c:	cmp	x20, x19
  41d080:	b.ge	41d164 <_obstack_memory_used@@Base+0x637c>  // b.tcont
  41d084:	cmp	w25, #0x1
  41d088:	b.ne	41d02c <_obstack_memory_used@@Base+0x6244>  // b.any
  41d08c:	ldrb	w2, [x26]
  41d090:	ubfx	x0, x2, #6, #2
  41d094:	lsl	x1, x20, #5
  41d098:	add	x0, x1, x0, lsl #3
  41d09c:	ldr	x1, [sp, #96]
  41d0a0:	ldr	x1, [x1, x0]
  41d0a4:	lsr	x1, x1, x2
  41d0a8:	and	x0, x1, #0x1
  41d0ac:	mov	x3, #0x0                   	// #0
  41d0b0:	tbz	w1, #0, 41d070 <_obstack_memory_used@@Base+0x6288>
  41d0b4:	b	41d034 <_obstack_memory_used@@Base+0x624c>
  41d0b8:	add	x2, sp, #0x80
  41d0bc:	mov	x1, #0x1                   	// #1
  41d0c0:	mov	x22, #0x0                   	// #0
  41d0c4:	mov	x5, #0x0                   	// #0
  41d0c8:	ldr	x3, [x2]
  41d0cc:	ldr	x0, [x6, x1, lsl #3]
  41d0d0:	bic	x4, x0, x3
  41d0d4:	add	x7, sp, #0xc0
  41d0d8:	add	x7, x7, x1, lsl #3
  41d0dc:	stur	x4, [x7, #-8]
  41d0e0:	orr	x5, x5, x4
  41d0e4:	bic	x0, x3, x0
  41d0e8:	str	x0, [x2], #8
  41d0ec:	orr	x22, x22, x0
  41d0f0:	add	x1, x1, #0x1
  41d0f4:	cmp	x1, #0x5
  41d0f8:	b.ne	41d0c8 <_obstack_memory_used@@Base+0x62e0>  // b.any
  41d0fc:	cbz	x5, 41d144 <_obstack_memory_used@@Base+0x635c>
  41d100:	ldr	x0, [sp, #96]
  41d104:	add	x0, x0, x19, lsl #5
  41d108:	ldp	x2, x3, [sp, #192]
  41d10c:	stp	x2, x3, [x0]
  41d110:	ldp	x2, x3, [sp, #208]
  41d114:	stp	x2, x3, [x0, #16]
  41d118:	ldp	x0, x1, [sp, #160]
  41d11c:	stp	x0, x1, [x6, #8]
  41d120:	ldp	x0, x1, [sp, #176]
  41d124:	stp	x0, x1, [x6, #24]
  41d128:	add	x0, x19, x19, lsl #1
  41d12c:	mov	x1, x23
  41d130:	ldr	x2, [sp, #120]
  41d134:	add	x0, x2, x0, lsl #3
  41d138:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41d13c:	cbnz	w0, 41d244 <_obstack_memory_used@@Base+0x645c>
  41d140:	add	x19, x19, #0x1
  41d144:	ldr	x0, [x28, #24]
  41d148:	ldr	x1, [sp, #104]
  41d14c:	ldr	x1, [x0, x1]
  41d150:	mov	x0, x23
  41d154:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41d158:	and	w0, w0, #0xff
  41d15c:	cbz	w0, 41d244 <_obstack_memory_used@@Base+0x645c>
  41d160:	cbnz	x22, 41d070 <_obstack_memory_used@@Base+0x6288>
  41d164:	cmp	x19, x20
  41d168:	b.eq	41d1fc <_obstack_memory_used@@Base+0x6414>  // b.none
  41d16c:	add	x27, x27, #0x1
  41d170:	ldr	x0, [x28, #16]
  41d174:	cmp	x27, x0
  41d178:	b.ge	41d28c <_obstack_memory_used@@Base+0x64a4>  // b.tcont
  41d17c:	lsl	x0, x27, #3
  41d180:	str	x0, [sp, #104]
  41d184:	ldr	x0, [x28, #24]
  41d188:	ldr	x1, [x0, x27, lsl #3]
  41d18c:	lsl	x1, x1, #4
  41d190:	ldr	x2, [x24]
  41d194:	add	x26, x2, x1
  41d198:	ldrb	w25, [x26, #8]
  41d19c:	ldr	w0, [x26, #8]
  41d1a0:	ubfx	x0, x0, #8, #10
  41d1a4:	cmp	w25, #0x1
  41d1a8:	b.eq	41cde0 <_obstack_memory_used@@Base+0x5ff8>  // b.none
  41d1ac:	cmp	w25, #0x3
  41d1b0:	b.eq	41ced8 <_obstack_memory_used@@Base+0x60f0>  // b.none
  41d1b4:	cmp	w25, #0x5
  41d1b8:	b.eq	41cf04 <_obstack_memory_used@@Base+0x611c>  // b.none
  41d1bc:	cmp	w25, #0x7
  41d1c0:	b.ne	41d16c <_obstack_memory_used@@Base+0x6384>  // b.any
  41d1c4:	mov	x2, #0xffffffffffffffff    	// #-1
  41d1c8:	mov	x3, #0xffffffffffffffff    	// #-1
  41d1cc:	stp	x2, x3, [sp, #128]
  41d1d0:	ldr	x1, [x24, #216]
  41d1d4:	tbnz	w1, #6, 41d1e0 <_obstack_memory_used@@Base+0x63f8>
  41d1d8:	mov	x2, #0xfffffffffffffbff    	// #-1025
  41d1dc:	str	x2, [sp, #128]
  41d1e0:	tbz	w1, #7, 41ce00 <_obstack_memory_used@@Base+0x6018>
  41d1e4:	ldr	x1, [sp, #128]
  41d1e8:	and	x1, x1, #0xfffffffffffffffe
  41d1ec:	str	x1, [sp, #128]
  41d1f0:	b	41ce00 <_obstack_memory_used@@Base+0x6018>
  41d1f4:	mov	x20, #0x0                   	// #0
  41d1f8:	b	41d164 <_obstack_memory_used@@Base+0x637c>
  41d1fc:	ldr	x0, [sp, #96]
  41d200:	add	x0, x0, x19, lsl #5
  41d204:	ldp	x2, x3, [sp, #128]
  41d208:	stp	x2, x3, [x0]
  41d20c:	ldp	x2, x3, [sp, #144]
  41d210:	stp	x2, x3, [x0, #16]
  41d214:	ldr	x1, [x28, #24]
  41d218:	add	x0, x19, x19, lsl #1
  41d21c:	ldr	x2, [sp, #104]
  41d220:	ldr	x1, [x1, x2]
  41d224:	ldr	x2, [sp, #120]
  41d228:	add	x0, x2, x0, lsl #3
  41d22c:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  41d230:	cbnz	w0, 41d244 <_obstack_memory_used@@Base+0x645c>
  41d234:	add	x19, x19, #0x1
  41d238:	stp	xzr, xzr, [sp, #128]
  41d23c:	stp	xzr, xzr, [sp, #144]
  41d240:	b	41d16c <_obstack_memory_used@@Base+0x6384>
  41d244:	cmp	x19, #0x0
  41d248:	b.le	41d270 <_obstack_memory_used@@Base+0x6488>
  41d24c:	ldr	x0, [sp, #112]
  41d250:	mov	x20, x0
  41d254:	add	x19, x19, x19, lsl #1
  41d258:	add	x19, x0, x19, lsl #3
  41d25c:	ldr	x0, [x20, #16]
  41d260:	bl	402660 <free@plt>
  41d264:	add	x20, x20, #0x18
  41d268:	cmp	x20, x19
  41d26c:	b.ne	41d25c <_obstack_memory_used@@Base+0x6474>  // b.any
  41d270:	ldr	x0, [sp, #112]
  41d274:	bl	402660 <free@plt>
  41d278:	mov	w0, #0x0                   	// #0
  41d27c:	ldp	x19, x20, [sp, #16]
  41d280:	ldp	x21, x22, [sp, #32]
  41d284:	ldp	x25, x26, [sp, #64]
  41d288:	b	41d3c4 <_obstack_memory_used@@Base+0x65dc>
  41d28c:	cmp	x19, #0x0
  41d290:	b.le	41d300 <_obstack_memory_used@@Base+0x6518>
  41d294:	add	x1, x19, #0x1
  41d298:	add	x0, sp, #0x100
  41d29c:	bl	418164 <_obstack_memory_used@@Base+0x137c>
  41d2a0:	str	w0, [sp, #284]
  41d2a4:	cbnz	w0, 41d380 <_obstack_memory_used@@Base+0x6598>
  41d2a8:	mov	x0, #0xa855                	// #43093
  41d2ac:	movk	x0, #0xaaaa, lsl #16
  41d2b0:	movk	x0, #0xaaaa, lsl #32
  41d2b4:	movk	x0, #0xaaa, lsl #48
  41d2b8:	cmp	x19, x0
  41d2bc:	b.hi	41d380 <_obstack_memory_used@@Base+0x6598>  // b.pmore
  41d2c0:	add	x0, x19, x19, lsl #1
  41d2c4:	lsl	x0, x0, #3
  41d2c8:	str	x0, [sp, #120]
  41d2cc:	bl	4023f0 <malloc@plt>
  41d2d0:	mov	x22, x0
  41d2d4:	cbz	x0, 41d380 <_obstack_memory_used@@Base+0x6598>
  41d2d8:	lsl	x27, x19, #3
  41d2dc:	add	x26, x0, x27
  41d2e0:	add	x27, x26, x27
  41d2e4:	stp	xzr, xzr, [sp, #224]
  41d2e8:	stp	xzr, xzr, [sp, #240]
  41d2ec:	ldr	x0, [sp, #112]
  41d2f0:	add	x23, x0, #0x8
  41d2f4:	str	wzr, [sp, #104]
  41d2f8:	mov	x25, #0x0                   	// #0
  41d2fc:	b	41d448 <_obstack_memory_used@@Base+0x6660>
  41d300:	ldp	x21, x22, [sp, #32]
  41d304:	ldp	x25, x26, [sp, #64]
  41d308:	ldr	x0, [sp, #112]
  41d30c:	bl	402660 <free@plt>
  41d310:	cbnz	x19, 41d70c <_obstack_memory_used@@Base+0x6924>
  41d314:	mov	x1, #0x100                 	// #256
  41d318:	mov	x0, #0x8                   	// #8
  41d31c:	bl	4024d0 <calloc@plt>
  41d320:	str	x0, [x28, #88]
  41d324:	cmp	x0, #0x0
  41d328:	cset	w0, ne  // ne = any
  41d32c:	ldp	x19, x20, [sp, #16]
  41d330:	b	41d3c4 <_obstack_memory_used@@Base+0x65dc>
  41d334:	add	x20, x20, #0x1
  41d338:	ldr	x0, [x21]
  41d33c:	cmp	x0, x20
  41d340:	b.le	41d3d4 <_obstack_memory_used@@Base+0x65ec>
  41d344:	ldr	x0, [x21, #8]
  41d348:	ldr	x1, [x0, x20, lsl #3]
  41d34c:	ldr	x0, [x24, #24]
  41d350:	ldr	x1, [x0, x1, lsl #3]
  41d354:	cmn	x1, #0x1
  41d358:	b.eq	41d334 <_obstack_memory_used@@Base+0x654c>  // b.none
  41d35c:	add	x1, x1, x1, lsl #1
  41d360:	ldr	x0, [x24, #48]
  41d364:	add	x1, x0, x1, lsl #3
  41d368:	add	x0, sp, #0x100
  41d36c:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  41d370:	str	w0, [sp, #284]
  41d374:	cbz	w0, 41d334 <_obstack_memory_used@@Base+0x654c>
  41d378:	mov	x0, x22
  41d37c:	bl	402660 <free@plt>
  41d380:	ldr	x0, [sp, #272]
  41d384:	bl	402660 <free@plt>
  41d388:	ldr	x0, [sp, #112]
  41d38c:	mov	x20, x0
  41d390:	add	x19, x19, x19, lsl #1
  41d394:	add	x19, x0, x19, lsl #3
  41d398:	ldr	x0, [x20, #16]
  41d39c:	bl	402660 <free@plt>
  41d3a0:	add	x20, x20, #0x18
  41d3a4:	cmp	x20, x19
  41d3a8:	b.ne	41d398 <_obstack_memory_used@@Base+0x65b0>  // b.any
  41d3ac:	ldr	x0, [sp, #112]
  41d3b0:	bl	402660 <free@plt>
  41d3b4:	mov	w0, #0x0                   	// #0
  41d3b8:	ldp	x19, x20, [sp, #16]
  41d3bc:	ldp	x21, x22, [sp, #32]
  41d3c0:	ldp	x25, x26, [sp, #64]
  41d3c4:	ldp	x23, x24, [sp, #48]
  41d3c8:	ldp	x27, x28, [sp, #80]
  41d3cc:	ldp	x29, x30, [sp], #288
  41d3d0:	ret
  41d3d4:	mov	w3, #0x0                   	// #0
  41d3d8:	add	x2, sp, #0x100
  41d3dc:	mov	x1, x24
  41d3e0:	add	x0, sp, #0x11c
  41d3e4:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  41d3e8:	mov	x20, x25
  41d3ec:	str	x0, [x22, x25, lsl #3]
  41d3f0:	cbz	x0, 41d464 <_obstack_memory_used@@Base+0x667c>
  41d3f4:	ldrsb	w1, [x0, #104]
  41d3f8:	tbnz	w1, #31, 41d470 <_obstack_memory_used@@Base+0x6688>
  41d3fc:	str	x0, [x26, x20, lsl #3]
  41d400:	str	x0, [x27, x20, lsl #3]
  41d404:	add	x21, sp, #0xe0
  41d408:	ldr	x0, [sp, #112]
  41d40c:	str	x0, [sp, #96]
  41d410:	add	x20, x0, x20, lsl #5
  41d414:	add	x3, x21, #0x20
  41d418:	mov	x0, x21
  41d41c:	ldr	x1, [x0]
  41d420:	ldr	x2, [x20, #6144]
  41d424:	orr	x1, x1, x2
  41d428:	str	x1, [x0], #8
  41d42c:	add	x20, x20, #0x8
  41d430:	cmp	x0, x3
  41d434:	b.ne	41d41c <_obstack_memory_used@@Base+0x6634>  // b.any
  41d438:	add	x25, x25, #0x1
  41d43c:	add	x23, x23, #0x18
  41d440:	cmp	x25, x19
  41d444:	b.eq	41d4e0 <_obstack_memory_used@@Base+0x66f8>  // b.none
  41d448:	str	xzr, [sp, #264]
  41d44c:	mov	x21, x23
  41d450:	ldr	x0, [x23]
  41d454:	cmp	x0, #0x0
  41d458:	b.le	41d3d4 <_obstack_memory_used@@Base+0x65ec>
  41d45c:	mov	x20, #0x0                   	// #0
  41d460:	b	41d344 <_obstack_memory_used@@Base+0x655c>
  41d464:	ldr	w1, [sp, #284]
  41d468:	cbz	w1, 41d3f4 <_obstack_memory_used@@Base+0x660c>
  41d46c:	b	41d378 <_obstack_memory_used@@Base+0x6590>
  41d470:	mov	w3, #0x1                   	// #1
  41d474:	add	x2, sp, #0x100
  41d478:	mov	x1, x24
  41d47c:	add	x0, sp, #0x11c
  41d480:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  41d484:	str	x0, [x26, x20, lsl #3]
  41d488:	cbz	x0, 41d4d4 <_obstack_memory_used@@Base+0x66ec>
  41d48c:	ldr	x1, [x22, x20, lsl #3]
  41d490:	cmp	x0, x1
  41d494:	b.eq	41d4ac <_obstack_memory_used@@Base+0x66c4>  // b.none
  41d498:	ldr	w0, [x24, #180]
  41d49c:	cmp	w0, #0x2
  41d4a0:	ldr	w0, [sp, #104]
  41d4a4:	csinc	w0, w0, wzr, lt  // lt = tstop
  41d4a8:	str	w0, [sp, #104]
  41d4ac:	mov	w3, #0x2                   	// #2
  41d4b0:	add	x2, sp, #0x100
  41d4b4:	mov	x1, x24
  41d4b8:	add	x0, sp, #0x11c
  41d4bc:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  41d4c0:	str	x0, [x27, x20, lsl #3]
  41d4c4:	cbnz	x0, 41d404 <_obstack_memory_used@@Base+0x661c>
  41d4c8:	ldr	w0, [sp, #284]
  41d4cc:	cbz	w0, 41d404 <_obstack_memory_used@@Base+0x661c>
  41d4d0:	b	41d378 <_obstack_memory_used@@Base+0x6590>
  41d4d4:	ldr	w1, [sp, #284]
  41d4d8:	cbz	w1, 41d48c <_obstack_memory_used@@Base+0x66a4>
  41d4dc:	b	41d378 <_obstack_memory_used@@Base+0x6590>
  41d4e0:	ldr	w0, [sp, #104]
  41d4e4:	cbnz	w0, 41d630 <_obstack_memory_used@@Base+0x6848>
  41d4e8:	mov	x1, #0x100                 	// #256
  41d4ec:	mov	x0, #0x8                   	// #8
  41d4f0:	bl	4024d0 <calloc@plt>
  41d4f4:	mov	x9, x0
  41d4f8:	str	x0, [x28, #88]
  41d4fc:	cbz	x0, 41d378 <_obstack_memory_used@@Base+0x6590>
  41d500:	ldr	x0, [sp, #112]
  41d504:	add	x8, x0, #0x1, lsl #12
  41d508:	add	x8, x8, #0x800
  41d50c:	mov	x7, #0x0                   	// #0
  41d510:	add	x24, x24, #0xb8
  41d514:	mov	x11, #0x0                   	// #0
  41d518:	ldr	x0, [x21]
  41d51c:	cbz	x0, 41d540 <_obstack_memory_used@@Base+0x6758>
  41d520:	mov	x10, x7
  41d524:	add	x3, x9, x7, lsl #9
  41d528:	mov	x2, #0x1                   	// #1
  41d52c:	tbnz	w0, #0, 41d5d8 <_obstack_memory_used@@Base+0x67f0>
  41d530:	lsl	x2, x2, #1
  41d534:	lsr	x0, x0, #1
  41d538:	add	x3, x3, #0x8
  41d53c:	cbnz	x0, 41d52c <_obstack_memory_used@@Base+0x6744>
  41d540:	add	x7, x7, #0x1
  41d544:	add	x21, x21, #0x8
  41d548:	add	x8, x8, #0x8
  41d54c:	cmp	x7, #0x4
  41d550:	b.ne	41d518 <_obstack_memory_used@@Base+0x6730>  // b.any
  41d554:	ldr	x0, [sp, #224]
  41d558:	tbz	w0, #10, 41d584 <_obstack_memory_used@@Base+0x679c>
  41d55c:	mov	x0, #0x0                   	// #0
  41d560:	ldr	x1, [sp, #112]
  41d564:	add	x3, x1, #0x1, lsl #12
  41d568:	add	x3, x3, #0x800
  41d56c:	lsl	x1, x0, #5
  41d570:	ldr	x1, [x3, x1]
  41d574:	tbnz	w1, #10, 41d6ec <_obstack_memory_used@@Base+0x6904>
  41d578:	add	x0, x0, #0x1
  41d57c:	cmp	x0, x19
  41d580:	b.ne	41d56c <_obstack_memory_used@@Base+0x6784>  // b.any
  41d584:	mov	x0, x22
  41d588:	bl	402660 <free@plt>
  41d58c:	ldr	x0, [sp, #272]
  41d590:	bl	402660 <free@plt>
  41d594:	ldr	x0, [sp, #120]
  41d598:	ldr	x1, [sp, #96]
  41d59c:	add	x19, x0, x1
  41d5a0:	ldr	x20, [sp, #96]
  41d5a4:	ldr	x0, [x20, #16]
  41d5a8:	bl	402660 <free@plt>
  41d5ac:	add	x0, x20, #0x18
  41d5b0:	str	x0, [sp, #96]
  41d5b4:	cmp	x19, x0
  41d5b8:	b.ne	41d5a0 <_obstack_memory_used@@Base+0x67b8>  // b.any
  41d5bc:	ldr	x0, [sp, #112]
  41d5c0:	bl	402660 <free@plt>
  41d5c4:	mov	w0, #0x1                   	// #1
  41d5c8:	ldp	x19, x20, [sp, #16]
  41d5cc:	ldp	x21, x22, [sp, #32]
  41d5d0:	ldp	x25, x26, [sp, #64]
  41d5d4:	b	41d3c4 <_obstack_memory_used@@Base+0x65dc>
  41d5d8:	mov	x6, x8
  41d5dc:	ldr	x1, [x8]
  41d5e0:	tst	x2, x1
  41d5e4:	b.ne	41d61c <_obstack_memory_used@@Base+0x6834>  // b.any
  41d5e8:	mov	x1, #0x0                   	// #0
  41d5ec:	add	x1, x1, #0x1
  41d5f0:	mov	x5, x1
  41d5f4:	lsl	x4, x1, #5
  41d5f8:	ldr	x4, [x6, x4]
  41d5fc:	tst	x2, x4
  41d600:	b.eq	41d5ec <_obstack_memory_used@@Base+0x6804>  // b.none
  41d604:	ldr	x1, [x24, x10, lsl #3]
  41d608:	tst	x2, x1
  41d60c:	b.eq	41d624 <_obstack_memory_used@@Base+0x683c>  // b.none
  41d610:	ldr	x1, [x26, x5, lsl #3]
  41d614:	str	x1, [x3]
  41d618:	b	41d530 <_obstack_memory_used@@Base+0x6748>
  41d61c:	mov	x5, x11
  41d620:	b	41d604 <_obstack_memory_used@@Base+0x681c>
  41d624:	ldr	x1, [x22, x5, lsl #3]
  41d628:	str	x1, [x3]
  41d62c:	b	41d530 <_obstack_memory_used@@Base+0x6748>
  41d630:	mov	x1, #0x200                 	// #512
  41d634:	mov	x0, #0x8                   	// #8
  41d638:	bl	4024d0 <calloc@plt>
  41d63c:	mov	x9, x0
  41d640:	str	x0, [x28, #96]
  41d644:	cbz	x0, 41d378 <_obstack_memory_used@@Base+0x6590>
  41d648:	add	x10, x0, #0x800
  41d64c:	ldr	x0, [sp, #112]
  41d650:	add	x7, x0, #0x1, lsl #12
  41d654:	add	x7, x7, #0x800
  41d658:	mov	w8, #0x0                   	// #0
  41d65c:	mov	x11, #0x0                   	// #0
  41d660:	ldr	x0, [x21]
  41d664:	cbz	x0, 41d684 <_obstack_memory_used@@Base+0x689c>
  41d668:	mov	x3, x10
  41d66c:	mov	x2, #0x1                   	// #1
  41d670:	tbnz	w0, #0, 41d6a0 <_obstack_memory_used@@Base+0x68b8>
  41d674:	lsl	x2, x2, #1
  41d678:	lsr	x0, x0, #1
  41d67c:	add	x3, x3, #0x8
  41d680:	cbnz	x0, 41d670 <_obstack_memory_used@@Base+0x6888>
  41d684:	add	x21, x21, #0x8
  41d688:	add	w8, w8, #0x40
  41d68c:	add	x10, x10, #0x200
  41d690:	add	x7, x7, #0x8
  41d694:	cmp	w8, #0x100
  41d698:	b.ne	41d660 <_obstack_memory_used@@Base+0x6878>  // b.any
  41d69c:	b	41d554 <_obstack_memory_used@@Base+0x676c>
  41d6a0:	mov	x6, x7
  41d6a4:	ldr	x1, [x7]
  41d6a8:	tst	x2, x1
  41d6ac:	b.ne	41d6e4 <_obstack_memory_used@@Base+0x68fc>  // b.any
  41d6b0:	mov	x1, #0x0                   	// #0
  41d6b4:	add	x1, x1, #0x1
  41d6b8:	mov	x5, x1
  41d6bc:	lsl	x4, x1, #5
  41d6c0:	ldr	x4, [x6, x4]
  41d6c4:	tst	x2, x4
  41d6c8:	b.eq	41d6b4 <_obstack_memory_used@@Base+0x68cc>  // b.none
  41d6cc:	sub	x1, x3, #0x8, lsl #12
  41d6d0:	ldr	x4, [x22, x5, lsl #3]
  41d6d4:	str	x4, [x1, #30720]
  41d6d8:	ldr	x1, [x26, x5, lsl #3]
  41d6dc:	str	x1, [x3]
  41d6e0:	b	41d674 <_obstack_memory_used@@Base+0x688c>
  41d6e4:	mov	x5, x11
  41d6e8:	b	41d6cc <_obstack_memory_used@@Base+0x68e4>
  41d6ec:	ldr	x0, [x27, x0, lsl #3]
  41d6f0:	str	x0, [x9, #80]
  41d6f4:	ldr	w1, [sp, #104]
  41d6f8:	cbz	w1, 41d584 <_obstack_memory_used@@Base+0x679c>
  41d6fc:	str	x0, [x9, #2128]
  41d700:	b	41d584 <_obstack_memory_used@@Base+0x679c>
  41d704:	mov	w0, #0x0                   	// #0
  41d708:	b	41d3c4 <_obstack_memory_used@@Base+0x65dc>
  41d70c:	mov	w0, #0x0                   	// #0
  41d710:	ldp	x19, x20, [sp, #16]
  41d714:	b	41d3c4 <_obstack_memory_used@@Base+0x65dc>
  41d718:	mov	x19, #0x0                   	// #0
  41d71c:	b	41d308 <_obstack_memory_used@@Base+0x6520>
  41d720:	stp	x29, x30, [sp, #-208]!
  41d724:	mov	x29, sp
  41d728:	stp	x19, x20, [sp, #16]
  41d72c:	stp	x21, x22, [sp, #32]
  41d730:	stp	x23, x24, [sp, #48]
  41d734:	stp	x25, x26, [sp, #64]
  41d738:	stp	x27, x28, [sp, #80]
  41d73c:	mov	x21, x1
  41d740:	str	x2, [x29, #120]
  41d744:	mov	x22, x3
  41d748:	ldr	x0, [x0]
  41d74c:	str	x0, [x29, #136]
  41d750:	str	xzr, [x29, #152]
  41d754:	mov	x0, #0x2                   	// #2
  41d758:	str	x0, [x29, #160]
  41d75c:	str	xzr, [x29, #168]
  41d760:	tst	w4, #0xff
  41d764:	b.eq	41d7d0 <_obstack_memory_used@@Base+0x69e8>  // b.none
  41d768:	mov	x0, #0x60                  	// #96
  41d76c:	bl	4023f0 <malloc@plt>
  41d770:	str	x0, [x29, #168]
  41d774:	cbz	x0, 41dd04 <_obstack_memory_used@@Base+0x6f1c>
  41d778:	add	x26, x29, #0x98
  41d77c:	ldr	x0, [x29, #136]
  41d780:	ldr	x19, [x0, #144]
  41d784:	stp	xzr, xzr, [x29, #176]
  41d788:	str	xzr, [x29, #192]
  41d78c:	ldr	x0, [x29, #120]
  41d790:	lsl	x0, x0, #4
  41d794:	str	x0, [x29, #112]
  41d798:	cmp	x0, #0xfbf
  41d79c:	b.hi	41d7d8 <_obstack_memory_used@@Base+0x69f0>  // b.pmore
  41d7a0:	sub	sp, sp, x0
  41d7a4:	mov	x0, sp
  41d7a8:	str	x0, [x29, #104]
  41d7ac:	str	wzr, [x29, #100]
  41d7b0:	ldr	x2, [x29, #112]
  41d7b4:	mov	x1, x22
  41d7b8:	ldr	x0, [x29, #104]
  41d7bc:	bl	402260 <memcpy@plt>
  41d7c0:	ldr	x0, [x22]
  41d7c4:	str	x0, [x29, #200]
  41d7c8:	ldr	x25, [x29, #120]
  41d7cc:	b	41db24 <_obstack_memory_used@@Base+0x6d3c>
  41d7d0:	mov	x26, #0x0                   	// #0
  41d7d4:	b	41d77c <_obstack_memory_used@@Base+0x6994>
  41d7d8:	ldr	x0, [x29, #112]
  41d7dc:	bl	4023f0 <malloc@plt>
  41d7e0:	str	x0, [x29, #104]
  41d7e4:	mov	w1, #0x1                   	// #1
  41d7e8:	str	w1, [x29, #100]
  41d7ec:	cbnz	x0, 41d7b0 <_obstack_memory_used@@Base+0x69c8>
  41d7f0:	mov	x0, x26
  41d7f4:	bl	41ab80 <_obstack_memory_used@@Base+0x3d98>
  41d7f8:	mov	w0, #0xc                   	// #12
  41d7fc:	b	41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41d800:	ldr	x0, [x2, x1]
  41d804:	add	x0, x0, #0x1
  41d808:	ldr	x1, [x29, #120]
  41d80c:	cmp	x1, x0
  41d810:	b.le	41db5c <_obstack_memory_used@@Base+0x6d74>
  41d814:	lsl	x0, x0, #4
  41d818:	add	x1, x22, x0
  41d81c:	str	x20, [x22, x0]
  41d820:	mov	x0, #0xffffffffffffffff    	// #-1
  41d824:	str	x0, [x1, #8]
  41d828:	b	41db5c <_obstack_memory_used@@Base+0x6d74>
  41d82c:	ldr	x0, [x2, x1]
  41d830:	add	x0, x0, #0x1
  41d834:	ldr	x1, [x29, #120]
  41d838:	cmp	x1, x0
  41d83c:	b.le	41db5c <_obstack_memory_used@@Base+0x6d74>
  41d840:	lsl	x0, x0, #4
  41d844:	add	x2, x22, x0
  41d848:	ldr	x1, [x22, x0]
  41d84c:	cmp	x20, x1
  41d850:	b.gt	41d874 <_obstack_memory_used@@Base+0x6a8c>
  41d854:	ldrb	w1, [x3, #10]
  41d858:	tbz	w1, #3, 41d86c <_obstack_memory_used@@Base+0x6a84>
  41d85c:	ldr	x1, [x29, #104]
  41d860:	ldr	x0, [x1, x0]
  41d864:	cmn	x0, #0x1
  41d868:	b.ne	41d88c <_obstack_memory_used@@Base+0x6aa4>  // b.any
  41d86c:	str	x20, [x2, #8]
  41d870:	b	41db5c <_obstack_memory_used@@Base+0x6d74>
  41d874:	str	x20, [x2, #8]
  41d878:	ldr	x2, [x29, #112]
  41d87c:	mov	x1, x22
  41d880:	ldr	x0, [x29, #104]
  41d884:	bl	402260 <memcpy@plt>
  41d888:	b	41db5c <_obstack_memory_used@@Base+0x6d74>
  41d88c:	ldr	x2, [x29, #112]
  41d890:	mov	x0, x22
  41d894:	bl	402260 <memcpy@plt>
  41d898:	b	41db5c <_obstack_memory_used@@Base+0x6d74>
  41d89c:	cbz	x26, 41d924 <_obstack_memory_used@@Base+0x6b3c>
  41d8a0:	mov	x0, x22
  41d8a4:	mov	x1, #0x0                   	// #0
  41d8a8:	b	41d8bc <_obstack_memory_used@@Base+0x6ad4>
  41d8ac:	add	x1, x1, #0x1
  41d8b0:	add	x0, x0, #0x10
  41d8b4:	cmp	x25, x1
  41d8b8:	b.eq	41d8fc <_obstack_memory_used@@Base+0x6b14>  // b.none
  41d8bc:	ldr	x2, [x0]
  41d8c0:	tbnz	x2, #63, 41d8ac <_obstack_memory_used@@Base+0x6ac4>
  41d8c4:	ldr	x2, [x0, #8]
  41d8c8:	cmn	x2, #0x1
  41d8cc:	b.ne	41d8ac <_obstack_memory_used@@Base+0x6ac4>  // b.any
  41d8d0:	ldr	x0, [x29, #120]
  41d8d4:	cmp	x0, x1
  41d8d8:	b.eq	41d8fc <_obstack_memory_used@@Base+0x6b14>  // b.none
  41d8dc:	add	x4, x29, #0xb0
  41d8e0:	mov	x3, x22
  41d8e4:	mov	x2, x25
  41d8e8:	add	x1, x29, #0xc8
  41d8ec:	mov	x0, x26
  41d8f0:	bl	41b338 <_obstack_memory_used@@Base+0x4550>
  41d8f4:	mov	x19, x0
  41d8f8:	b	41db74 <_obstack_memory_used@@Base+0x6d8c>
  41d8fc:	ldr	x0, [x29, #192]
  41d900:	bl	402660 <free@plt>
  41d904:	ldr	w0, [x29, #100]
  41d908:	cbnz	w0, 41d918 <_obstack_memory_used@@Base+0x6b30>
  41d90c:	mov	x0, x26
  41d910:	bl	41ab80 <_obstack_memory_used@@Base+0x3d98>
  41d914:	b	41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41d918:	ldr	x0, [x29, #104]
  41d91c:	bl	402660 <free@plt>
  41d920:	b	41d90c <_obstack_memory_used@@Base+0x6b24>
  41d924:	ldr	x0, [x29, #192]
  41d928:	bl	402660 <free@plt>
  41d92c:	mov	w0, #0x0                   	// #0
  41d930:	ldr	w1, [x29, #100]
  41d934:	cbz	w1, 41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41d938:	ldr	x0, [x29, #104]
  41d93c:	bl	402660 <free@plt>
  41d940:	mov	w0, #0x0                   	// #0
  41d944:	b	41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41d948:	ldr	x0, [x21, #184]
  41d94c:	ldr	x1, [x29, #200]
  41d950:	ldr	x24, [x0, x1, lsl #3]
  41d954:	add	x24, x24, #0x8
  41d958:	add	x20, x19, x19, lsl #1
  41d95c:	ldr	x0, [x23, #40]
  41d960:	add	x20, x0, x20, lsl #3
  41d964:	mov	x1, x19
  41d968:	add	x0, x29, #0xb0
  41d96c:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41d970:	and	w0, w0, #0xff
  41d974:	cbz	w0, 41da2c <_obstack_memory_used@@Base+0x6c44>
  41d978:	ldr	x27, [x20, #8]
  41d97c:	cmp	x27, #0x0
  41d980:	b.le	41dd0c <_obstack_memory_used@@Base+0x6f24>
  41d984:	ldr	x28, [x20, #16]
  41d988:	mov	x19, #0xffffffffffffffff    	// #-1
  41d98c:	mov	x20, #0x0                   	// #0
  41d990:	b	41da80 <_obstack_memory_used@@Base+0x6c98>
  41d994:	mov	x1, x19
  41d998:	add	x0, x29, #0xb0
  41d99c:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41d9a0:	cbnz	x0, 41dc88 <_obstack_memory_used@@Base+0x6ea0>
  41d9a4:	cbz	x26, 41db20 <_obstack_memory_used@@Base+0x6d38>
  41d9a8:	ldr	x20, [x29, #200]
  41d9ac:	ldr	x24, [x26]
  41d9b0:	add	x0, x24, #0x1
  41d9b4:	str	x0, [x26]
  41d9b8:	ldr	x1, [x26, #8]
  41d9bc:	cmp	x0, x1
  41d9c0:	b.eq	41da4c <_obstack_memory_used@@Base+0x6c64>  // b.none
  41d9c4:	add	x24, x24, x24, lsl #1
  41d9c8:	lsl	x24, x24, #4
  41d9cc:	ldr	x0, [x26, #16]
  41d9d0:	str	x20, [x0, x24]
  41d9d4:	ldr	x0, [x26, #16]
  41d9d8:	add	x0, x0, x24
  41d9dc:	str	x23, [x0, #8]
  41d9e0:	ldr	x20, [x26, #16]
  41d9e4:	add	x20, x20, x24
  41d9e8:	ldr	x23, [x29, #112]
  41d9ec:	mov	x0, x23
  41d9f0:	bl	4023f0 <malloc@plt>
  41d9f4:	str	x0, [x20, #16]
  41d9f8:	ldr	x0, [x26, #16]
  41d9fc:	add	x0, x0, x24
  41da00:	ldr	x0, [x0, #16]
  41da04:	cbz	x0, 41da2c <_obstack_memory_used@@Base+0x6c44>
  41da08:	mov	x2, x23
  41da0c:	mov	x1, x22
  41da10:	bl	402260 <memcpy@plt>
  41da14:	ldr	x0, [x26, #16]
  41da18:	add	x0, x0, x24
  41da1c:	add	x1, x29, #0xb0
  41da20:	add	x0, x0, #0x18
  41da24:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41da28:	cbz	w0, 41db20 <_obstack_memory_used@@Base+0x6d38>
  41da2c:	ldr	x0, [x29, #192]
  41da30:	bl	402660 <free@plt>
  41da34:	ldr	w0, [x29, #100]
  41da38:	cbnz	w0, 41dc90 <_obstack_memory_used@@Base+0x6ea8>
  41da3c:	mov	x0, x26
  41da40:	bl	41ab80 <_obstack_memory_used@@Base+0x3d98>
  41da44:	mov	w0, #0xc                   	// #12
  41da48:	b	41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41da4c:	add	x1, x1, x1, lsl #1
  41da50:	lsl	x1, x1, #5
  41da54:	ldr	x0, [x26, #16]
  41da58:	bl	402500 <realloc@plt>
  41da5c:	cbz	x0, 41da2c <_obstack_memory_used@@Base+0x6c44>
  41da60:	ldr	x1, [x26, #8]
  41da64:	lsl	x1, x1, #1
  41da68:	str	x1, [x26, #8]
  41da6c:	str	x0, [x26, #16]
  41da70:	b	41d9c4 <_obstack_memory_used@@Base+0x6bdc>
  41da74:	add	x20, x20, #0x1
  41da78:	cmp	x27, x20
  41da7c:	b.eq	41db20 <_obstack_memory_used@@Base+0x6d38>  // b.none
  41da80:	ldr	x23, [x28, x20, lsl #3]
  41da84:	mov	x1, x23
  41da88:	mov	x0, x24
  41da8c:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41da90:	cbz	x0, 41da74 <_obstack_memory_used@@Base+0x6c8c>
  41da94:	cmn	x19, #0x1
  41da98:	b.ne	41d994 <_obstack_memory_used@@Base+0x6bac>  // b.any
  41da9c:	mov	x19, x23
  41daa0:	b	41da74 <_obstack_memory_used@@Base+0x6c8c>
  41daa4:	ldr	x3, [x29, #200]
  41daa8:	mov	x2, x21
  41daac:	mov	x1, x19
  41dab0:	mov	x0, x23
  41dab4:	bl	41ca3c <_obstack_memory_used@@Base+0x5c54>
  41dab8:	sxtw	x20, w0
  41dabc:	cbnz	w0, 41dc1c <_obstack_memory_used@@Base+0x6e34>
  41dac0:	ldr	x20, [x29, #200]
  41dac4:	ldr	x1, [x23]
  41dac8:	mov	x2, x20
  41dacc:	add	x1, x1, x24
  41dad0:	mov	x0, x21
  41dad4:	bl	41aebc <_obstack_memory_used@@Base+0x40d4>
  41dad8:	and	w0, w0, #0xff
  41dadc:	cbz	w0, 41dd0c <_obstack_memory_used@@Base+0x6f24>
  41dae0:	ldr	x0, [x23, #24]
  41dae4:	ldr	x19, [x0, x27, lsl #3]
  41dae8:	add	x20, x20, #0x1
  41daec:	str	x20, [x29, #200]
  41daf0:	cbz	x26, 41db1c <_obstack_memory_used@@Base+0x6d34>
  41daf4:	ldr	x0, [x21, #168]
  41daf8:	cmp	x20, x0
  41dafc:	b.gt	41dd0c <_obstack_memory_used@@Base+0x6f24>
  41db00:	ldr	x0, [x21, #184]
  41db04:	ldr	x0, [x0, x20, lsl #3]
  41db08:	cbz	x0, 41dd0c <_obstack_memory_used@@Base+0x6f24>
  41db0c:	mov	x1, x19
  41db10:	add	x0, x0, #0x8
  41db14:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41db18:	cbz	x0, 41dd0c <_obstack_memory_used@@Base+0x6f24>
  41db1c:	str	xzr, [x29, #184]
  41db20:	tbnz	x19, #63, 41dd10 <_obstack_memory_used@@Base+0x6f28>
  41db24:	ldr	x20, [x29, #200]
  41db28:	ldr	x0, [x22, #8]
  41db2c:	cmp	x0, x20
  41db30:	b.lt	41dcc0 <_obstack_memory_used@@Base+0x6ed8>  // b.tstop
  41db34:	str	x25, [x29, #128]
  41db38:	lsl	x1, x19, #4
  41db3c:	ldr	x0, [x29, #136]
  41db40:	ldr	x2, [x0]
  41db44:	add	x3, x2, x1
  41db48:	ldrb	w0, [x3, #8]
  41db4c:	cmp	w0, #0x8
  41db50:	b.eq	41d800 <_obstack_memory_used@@Base+0x6a18>  // b.none
  41db54:	cmp	w0, #0x9
  41db58:	b.eq	41d82c <_obstack_memory_used@@Base+0x6a44>  // b.none
  41db5c:	ldr	x0, [x22, #8]
  41db60:	cmp	x0, x20
  41db64:	b.ne	41db74 <_obstack_memory_used@@Base+0x6d8c>  // b.any
  41db68:	ldr	x0, [x21, #176]
  41db6c:	cmp	x0, x19
  41db70:	b.eq	41d89c <_obstack_memory_used@@Base+0x6ab4>  // b.none
  41db74:	ldr	x23, [x21, #152]
  41db78:	mov	x27, x19
  41db7c:	lsl	x24, x19, #4
  41db80:	ldr	x2, [x23]
  41db84:	add	x0, x2, x24
  41db88:	ldrb	w1, [x0, #8]
  41db8c:	tbnz	w1, #3, 41d948 <_obstack_memory_used@@Base+0x6b60>
  41db90:	ldrb	w0, [x0, #10]
  41db94:	tbnz	w0, #4, 41daa4 <_obstack_memory_used@@Base+0x6cbc>
  41db98:	cmp	w1, #0x4
  41db9c:	b.ne	41dac0 <_obstack_memory_used@@Base+0x6cd8>  // b.any
  41dba0:	ldr	x0, [x2, x24]
  41dba4:	add	x0, x0, #0x1
  41dba8:	ldr	x1, [x29, #120]
  41dbac:	cmp	x1, x0
  41dbb0:	b.le	41dc30 <_obstack_memory_used@@Base+0x6e48>
  41dbb4:	lsl	x1, x0, #4
  41dbb8:	add	x2, x22, x1
  41dbbc:	ldr	x2, [x2, #8]
  41dbc0:	ldr	x20, [x22, x1]
  41dbc4:	sub	x20, x2, x20
  41dbc8:	cbz	x26, 41dc3c <_obstack_memory_used@@Base+0x6e54>
  41dbcc:	lsl	x0, x0, #4
  41dbd0:	add	x1, x22, x0
  41dbd4:	ldr	x0, [x22, x0]
  41dbd8:	cmn	x0, #0x1
  41dbdc:	b.eq	41dd0c <_obstack_memory_used@@Base+0x6f24>  // b.none
  41dbe0:	ldr	x1, [x1, #8]
  41dbe4:	cmn	x1, #0x1
  41dbe8:	b.eq	41dd0c <_obstack_memory_used@@Base+0x6f24>  // b.none
  41dbec:	cbz	x20, 41dc40 <_obstack_memory_used@@Base+0x6e58>
  41dbf0:	ldr	x3, [x21, #8]
  41dbf4:	ldr	x1, [x29, #200]
  41dbf8:	ldr	x2, [x21, #48]
  41dbfc:	sub	x2, x2, x1
  41dc00:	cmp	x20, x2
  41dc04:	b.gt	41dd0c <_obstack_memory_used@@Base+0x6f24>
  41dc08:	mov	x2, x20
  41dc0c:	add	x1, x3, x1
  41dc10:	add	x0, x3, x0
  41dc14:	bl	402610 <memcmp@plt>
  41dc18:	cbnz	w0, 41dd0c <_obstack_memory_used@@Base+0x6f24>
  41dc1c:	ldr	x0, [x23, #24]
  41dc20:	ldr	x19, [x0, x27, lsl #3]
  41dc24:	ldr	x0, [x29, #200]
  41dc28:	add	x20, x20, x0
  41dc2c:	b	41daec <_obstack_memory_used@@Base+0x6d04>
  41dc30:	cbz	x26, 41dc40 <_obstack_memory_used@@Base+0x6e58>
  41dc34:	mov	x19, #0xffffffffffffffff    	// #-1
  41dc38:	b	41db20 <_obstack_memory_used@@Base+0x6d38>
  41dc3c:	cbnz	x20, 41dc1c <_obstack_memory_used@@Base+0x6e34>
  41dc40:	mov	x1, x19
  41dc44:	add	x0, x29, #0xb0
  41dc48:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41dc4c:	and	w0, w0, #0xff
  41dc50:	cbz	w0, 41da2c <_obstack_memory_used@@Base+0x6c44>
  41dc54:	ldr	x1, [x23, #40]
  41dc58:	add	x0, x27, x27, lsl #1
  41dc5c:	add	x0, x1, x0, lsl #3
  41dc60:	ldr	x0, [x0, #16]
  41dc64:	ldr	x19, [x0]
  41dc68:	ldr	x0, [x21, #184]
  41dc6c:	ldr	x1, [x29, #200]
  41dc70:	ldr	x0, [x0, x1, lsl #3]
  41dc74:	mov	x1, x19
  41dc78:	add	x0, x0, #0x8
  41dc7c:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41dc80:	cbz	x0, 41dac0 <_obstack_memory_used@@Base+0x6cd8>
  41dc84:	b	41db20 <_obstack_memory_used@@Base+0x6d38>
  41dc88:	mov	x19, x23
  41dc8c:	b	41db20 <_obstack_memory_used@@Base+0x6d38>
  41dc90:	ldr	x0, [x29, #104]
  41dc94:	bl	402660 <free@plt>
  41dc98:	b	41da3c <_obstack_memory_used@@Base+0x6c54>
  41dc9c:	ldr	x0, [x29, #192]
  41dca0:	bl	402660 <free@plt>
  41dca4:	mov	w0, #0x1                   	// #1
  41dca8:	ldr	w1, [x29, #100]
  41dcac:	cbz	w1, 41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41dcb0:	ldr	x0, [x29, #104]
  41dcb4:	bl	402660 <free@plt>
  41dcb8:	mov	w0, #0x1                   	// #1
  41dcbc:	b	41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41dcc0:	ldr	x0, [x29, #192]
  41dcc4:	bl	402660 <free@plt>
  41dcc8:	ldr	w0, [x29, #100]
  41dccc:	cbnz	w0, 41dcf8 <_obstack_memory_used@@Base+0x6f10>
  41dcd0:	mov	x0, x26
  41dcd4:	bl	41ab80 <_obstack_memory_used@@Base+0x3d98>
  41dcd8:	mov	sp, x29
  41dcdc:	ldp	x19, x20, [sp, #16]
  41dce0:	ldp	x21, x22, [sp, #32]
  41dce4:	ldp	x23, x24, [sp, #48]
  41dce8:	ldp	x25, x26, [sp, #64]
  41dcec:	ldp	x27, x28, [sp, #80]
  41dcf0:	ldp	x29, x30, [sp], #208
  41dcf4:	ret
  41dcf8:	ldr	x0, [x29, #104]
  41dcfc:	bl	402660 <free@plt>
  41dd00:	b	41dcd0 <_obstack_memory_used@@Base+0x6ee8>
  41dd04:	mov	w0, #0xc                   	// #12
  41dd08:	b	41dcd8 <_obstack_memory_used@@Base+0x6ef0>
  41dd0c:	mov	x19, #0xffffffffffffffff    	// #-1
  41dd10:	cmn	x19, #0x2
  41dd14:	b.eq	41da2c <_obstack_memory_used@@Base+0x6c44>  // b.none
  41dd18:	cbz	x26, 41dc9c <_obstack_memory_used@@Base+0x6eb4>
  41dd1c:	add	x4, x29, #0xb0
  41dd20:	mov	x3, x22
  41dd24:	ldr	x2, [x29, #128]
  41dd28:	add	x1, x29, #0xc8
  41dd2c:	mov	x0, x26
  41dd30:	bl	41b338 <_obstack_memory_used@@Base+0x4550>
  41dd34:	mov	x19, x0
  41dd38:	b	41db24 <_obstack_memory_used@@Base+0x6d3c>
  41dd3c:	stp	x29, x30, [sp, #-288]!
  41dd40:	mov	x29, sp
  41dd44:	stp	x19, x20, [sp, #16]
  41dd48:	stp	x23, x24, [sp, #48]
  41dd4c:	stp	x25, x26, [sp, #64]
  41dd50:	stp	x27, x28, [sp, #80]
  41dd54:	mov	x26, x0
  41dd58:	mov	x24, x2
  41dd5c:	mov	x27, x3
  41dd60:	mov	x28, x5
  41dd64:	ldr	x23, [x1]
  41dd68:	ldrb	w0, [x2, #8]
  41dd6c:	cmp	w0, #0xc
  41dd70:	b.eq	41e8ac <_obstack_memory_used@@Base+0x7ac4>  // b.none
  41dd74:	mov	x19, x1
  41dd78:	mov	x20, x4
  41dd7c:	b.ls	41de24 <_obstack_memory_used@@Base+0x703c>  // b.plast
  41dd80:	cmp	w0, #0x18
  41dd84:	b.eq	41de58 <_obstack_memory_used@@Base+0x7070>  // b.none
  41dd88:	b.ls	41def8 <_obstack_memory_used@@Base+0x7110>  // b.plast
  41dd8c:	cmp	w0, #0x23
  41dd90:	b.hi	41eb14 <_obstack_memory_used@@Base+0x7d2c>  // b.pmore
  41dd94:	cmp	w0, #0x21
  41dd98:	b.hi	41ead4 <_obstack_memory_used@@Base+0x7cec>  // b.pmore
  41dd9c:	cset	w4, eq  // eq = none
  41dda0:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x10218>
  41dda4:	add	x3, x3, #0x218
  41dda8:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  41ddac:	add	x2, x2, #0x240
  41ddb0:	ldr	x1, [x26, #120]
  41ddb4:	mov	x0, x23
  41ddb8:	bl	41bddc <_obstack_memory_used@@Base+0x4ff4>
  41ddbc:	mov	x25, x0
  41ddc0:	ldr	w0, [x28]
  41ddc4:	cmp	w0, #0x0
  41ddc8:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  41ddcc:	b.eq	41ef34 <_obstack_memory_used@@Base+0x814c>  // b.none
  41ddd0:	mov	x2, x27
  41ddd4:	mov	x1, x26
  41ddd8:	mov	x0, x24
  41dddc:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41dde0:	ldrb	w1, [x24, #8]
  41dde4:	cmp	w1, #0x12
  41dde8:	cset	w19, eq  // eq = none
  41ddec:	sub	w0, w1, #0x12
  41ddf0:	and	w0, w0, #0xff
  41ddf4:	cmp	w1, #0xb
  41ddf8:	ccmp	w1, #0x17, #0x4, ne  // ne = any
  41ddfc:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  41de00:	b.hi	41ef08 <_obstack_memory_used@@Base+0x8120>  // b.pmore
  41de04:	stp	x21, x22, [sp, #32]
  41de08:	adrp	x0, 417000 <_obstack_memory_used@@Base+0x218>
  41de0c:	add	x0, x0, #0x288
  41de10:	str	x0, [sp, #112]
  41de14:	adrp	x0, 419000 <_obstack_memory_used@@Base+0x2218>
  41de18:	add	x0, x0, #0xaf0
  41de1c:	str	x0, [sp, #120]
  41de20:	b	41ed78 <_obstack_memory_used@@Base+0x7f90>
  41de24:	cmp	w0, #0x5
  41de28:	b.eq	41ea90 <_obstack_memory_used@@Base+0x7ca8>  // b.none
  41de2c:	b.ls	41de88 <_obstack_memory_used@@Base+0x70a0>  // b.plast
  41de30:	cmp	w0, #0x9
  41de34:	b.eq	41e898 <_obstack_memory_used@@Base+0x7ab0>  // b.none
  41de38:	b.ls	41dfd8 <_obstack_memory_used@@Base+0x71f0>  // b.plast
  41de3c:	mov	x25, #0x0                   	// #0
  41de40:	cmp	w0, #0xa
  41de44:	b.eq	41ef08 <_obstack_memory_used@@Base+0x8120>  // b.none
  41de48:	tbnz	w27, #5, 41e854 <_obstack_memory_used@@Base+0x7a6c>
  41de4c:	tbnz	w27, #4, 41e864 <_obstack_memory_used@@Base+0x7a7c>
  41de50:	cmp	w0, #0x9
  41de54:	b.eq	41e898 <_obstack_memory_used@@Base+0x7ab0>  // b.none
  41de58:	mov	w0, #0x1                   	// #1
  41de5c:	strb	w0, [x24, #8]
  41de60:	mov	x3, x24
  41de64:	mov	x2, #0x0                   	// #0
  41de68:	mov	x1, #0x0                   	// #0
  41de6c:	mov	x0, x23
  41de70:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41de74:	mov	x25, x0
  41de78:	cbnz	x0, 41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41de7c:	mov	w0, #0xc                   	// #12
  41de80:	str	w0, [x28]
  41de84:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41de88:	cmp	w0, #0x2
  41de8c:	b.eq	41ef2c <_obstack_memory_used@@Base+0x8144>  // b.none
  41de90:	cmp	w0, #0x4
  41de94:	b.ne	41df18 <_obstack_memory_used@@Base+0x7130>  // b.any
  41de98:	ldr	x1, [x2]
  41de9c:	mov	w0, #0x1                   	// #1
  41dea0:	lsl	w0, w0, w1
  41dea4:	sxtw	x0, w0
  41dea8:	ldr	x1, [x23, #168]
  41deac:	tst	x0, x1
  41deb0:	b.eq	41e838 <_obstack_memory_used@@Base+0x7a50>  // b.none
  41deb4:	ldr	x1, [x23, #160]
  41deb8:	orr	x0, x1, x0
  41debc:	str	x0, [x23, #160]
  41dec0:	mov	x3, x2
  41dec4:	mov	x2, #0x0                   	// #0
  41dec8:	mov	x1, #0x0                   	// #0
  41decc:	mov	x0, x23
  41ded0:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41ded4:	mov	x25, x0
  41ded8:	cbz	x0, 41e848 <_obstack_memory_used@@Base+0x7a60>
  41dedc:	ldr	x0, [x23, #152]
  41dee0:	add	x0, x0, #0x1
  41dee4:	str	x0, [x23, #152]
  41dee8:	ldrb	w0, [x23, #176]
  41deec:	orr	w0, w0, #0x2
  41def0:	strb	w0, [x23, #176]
  41def4:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41def8:	cmp	w0, #0x14
  41defc:	b.eq	41e0b8 <_obstack_memory_used@@Base+0x72d0>  // b.none
  41df00:	b.ls	41de48 <_obstack_memory_used@@Base+0x7060>  // b.plast
  41df04:	tbz	w3, #24, 41de48 <_obstack_memory_used@@Base+0x7060>
  41df08:	mov	w0, #0xd                   	// #13
  41df0c:	str	w0, [x5]
  41df10:	mov	x25, #0x0                   	// #0
  41df14:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41df18:	mov	x3, x2
  41df1c:	mov	x2, #0x0                   	// #0
  41df20:	mov	x1, #0x0                   	// #0
  41df24:	mov	x0, x23
  41df28:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41df2c:	mov	x25, x0
  41df30:	cbz	x0, 41dfcc <_obstack_memory_used@@Base+0x71e4>
  41df34:	ldr	w0, [x23, #180]
  41df38:	mov	w20, #0x10                  	// #16
  41df3c:	cmp	w0, #0x1
  41df40:	b.le	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41df44:	ldr	x0, [x26, #72]
  41df48:	ldr	x1, [x26, #104]
  41df4c:	cmp	x1, x0
  41df50:	b.le	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41df54:	ldr	x1, [x26, #48]
  41df58:	cmp	x0, x1
  41df5c:	b.eq	41ddd0 <_obstack_memory_used@@Base+0x6fe8>  // b.none
  41df60:	ldr	x1, [x26, #16]
  41df64:	ldr	w0, [x1, x0, lsl #2]
  41df68:	cmn	w0, #0x1
  41df6c:	b.ne	41ddd0 <_obstack_memory_used@@Base+0x6fe8>  // b.any
  41df70:	mov	x2, x27
  41df74:	mov	x1, x26
  41df78:	mov	x0, x24
  41df7c:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41df80:	mov	x3, x24
  41df84:	mov	x2, #0x0                   	// #0
  41df88:	mov	x1, #0x0                   	// #0
  41df8c:	mov	x0, x23
  41df90:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41df94:	mov	x19, x0
  41df98:	mov	w3, w20
  41df9c:	mov	x2, x0
  41dfa0:	mov	x1, x25
  41dfa4:	mov	x0, x23
  41dfa8:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41dfac:	mov	x25, x0
  41dfb0:	cmp	x19, #0x0
  41dfb4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41dfb8:	b.ne	41df44 <_obstack_memory_used@@Base+0x715c>  // b.any
  41dfbc:	mov	w0, #0xc                   	// #12
  41dfc0:	str	w0, [x28]
  41dfc4:	mov	x25, #0x0                   	// #0
  41dfc8:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41dfcc:	mov	w0, #0xc                   	// #12
  41dfd0:	str	w0, [x28]
  41dfd4:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41dfd8:	stp	x21, x22, [sp, #32]
  41dfdc:	ldr	x21, [x1, #48]
  41dfe0:	add	x0, x21, #0x1
  41dfe4:	str	x0, [x1, #48]
  41dfe8:	orr	x2, x3, #0x800000
  41dfec:	mov	x1, x26
  41dff0:	mov	x0, x24
  41dff4:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41dff8:	ldrb	w1, [x24, #8]
  41dffc:	mov	x0, #0x0                   	// #0
  41e000:	cmp	w1, #0x9
  41e004:	b.ne	41e050 <_obstack_memory_used@@Base+0x7268>  // b.any
  41e008:	cmp	x21, #0x8
  41e00c:	b.hi	41e028 <_obstack_memory_used@@Base+0x7240>  // b.pmore
  41e010:	mov	w1, #0x1                   	// #1
  41e014:	lsl	w1, w1, w21
  41e018:	sxtw	x1, w1
  41e01c:	ldr	x2, [x23, #168]
  41e020:	orr	x1, x2, x1
  41e024:	str	x1, [x23, #168]
  41e028:	mov	w3, #0x11                  	// #17
  41e02c:	mov	x2, #0x0                   	// #0
  41e030:	mov	x1, x0
  41e034:	mov	x0, x23
  41e038:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41e03c:	mov	x25, x0
  41e040:	cbz	x0, 41e0ac <_obstack_memory_used@@Base+0x72c4>
  41e044:	str	x21, [x0, #40]
  41e048:	ldp	x21, x22, [sp, #32]
  41e04c:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41e050:	mov	x5, x28
  41e054:	add	x4, x20, #0x1
  41e058:	mov	x3, x27
  41e05c:	mov	x2, x24
  41e060:	mov	x1, x19
  41e064:	mov	x0, x26
  41e068:	bl	41f14c <_obstack_memory_used@@Base+0x8364>
  41e06c:	ldr	w1, [x28]
  41e070:	cbz	w1, 41e080 <_obstack_memory_used@@Base+0x7298>
  41e074:	mov	x25, #0x0                   	// #0
  41e078:	ldp	x21, x22, [sp, #32]
  41e07c:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e080:	ldrb	w1, [x24, #8]
  41e084:	cmp	w1, #0x9
  41e088:	b.eq	41e008 <_obstack_memory_used@@Base+0x7220>  // b.none
  41e08c:	cbz	x0, 41e0a0 <_obstack_memory_used@@Base+0x72b8>
  41e090:	mov	x2, #0x0                   	// #0
  41e094:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2218>
  41e098:	add	x1, x1, #0xaf0
  41e09c:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41e0a0:	mov	w0, #0x8                   	// #8
  41e0a4:	str	w0, [x28]
  41e0a8:	b	41e074 <_obstack_memory_used@@Base+0x728c>
  41e0ac:	mov	w0, #0xc                   	// #12
  41e0b0:	str	w0, [x28]
  41e0b4:	b	41e074 <_obstack_memory_used@@Base+0x728c>
  41e0b8:	stp	x21, x22, [sp, #32]
  41e0bc:	str	xzr, [sp, #168]
  41e0c0:	mov	x1, #0x1                   	// #1
  41e0c4:	mov	x0, #0x20                  	// #32
  41e0c8:	bl	4024d0 <calloc@plt>
  41e0cc:	mov	x20, x0
  41e0d0:	mov	x1, #0x1                   	// #1
  41e0d4:	mov	x0, #0x50                  	// #80
  41e0d8:	bl	4024d0 <calloc@plt>
  41e0dc:	mov	x21, x0
  41e0e0:	cmp	x20, #0x0
  41e0e4:	cset	w0, eq  // eq = none
  41e0e8:	cmp	x21, #0x0
  41e0ec:	csinc	w0, w0, wzr, ne  // ne = any
  41e0f0:	str	w0, [sp, #96]
  41e0f4:	cbnz	w0, 41e144 <_obstack_memory_used@@Base+0x735c>
  41e0f8:	mov	x2, x27
  41e0fc:	mov	x1, x26
  41e100:	mov	x0, x24
  41e104:	bl	4170f8 <_obstack_memory_used@@Base+0x310>
  41e108:	mov	w19, w0
  41e10c:	ldrb	w0, [x24, #8]
  41e110:	cmp	w0, #0x2
  41e114:	b.eq	41e160 <_obstack_memory_used@@Base+0x7378>  // b.none
  41e118:	ldr	w1, [sp, #96]
  41e11c:	str	w1, [sp, #152]
  41e120:	cmp	w0, #0x19
  41e124:	b.eq	41e168 <_obstack_memory_used@@Base+0x7380>  // b.none
  41e128:	ldrb	w0, [x24, #8]
  41e12c:	cmp	w0, #0x15
  41e130:	b.eq	41e1c0 <_obstack_memory_used@@Base+0x73d8>  // b.none
  41e134:	str	xzr, [sp, #136]
  41e138:	mov	w6, #0x1                   	// #1
  41e13c:	str	xzr, [sp, #120]
  41e140:	b	41e570 <_obstack_memory_used@@Base+0x7788>
  41e144:	mov	x0, x20
  41e148:	bl	402660 <free@plt>
  41e14c:	mov	x0, x21
  41e150:	bl	402660 <free@plt>
  41e154:	mov	w0, #0xc                   	// #12
  41e158:	str	w0, [x28]
  41e15c:	b	41e1e0 <_obstack_memory_used@@Base+0x73f8>
  41e160:	str	w0, [x28]
  41e164:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e168:	ldrb	w0, [x21, #32]
  41e16c:	orr	w0, w0, #0x1
  41e170:	strb	w0, [x21, #32]
  41e174:	tbz	w27, #8, 41e184 <_obstack_memory_used@@Base+0x739c>
  41e178:	ldr	x0, [x20]
  41e17c:	orr	x0, x0, #0x400
  41e180:	str	x0, [x20]
  41e184:	ldr	x0, [x26, #72]
  41e188:	add	x19, x0, w19, sxtw
  41e18c:	str	x19, [x26, #72]
  41e190:	mov	x2, x27
  41e194:	mov	x1, x26
  41e198:	mov	x0, x24
  41e19c:	bl	4170f8 <_obstack_memory_used@@Base+0x310>
  41e1a0:	mov	w19, w0
  41e1a4:	ldrb	w0, [x24, #8]
  41e1a8:	mov	w1, #0x1                   	// #1
  41e1ac:	str	w1, [sp, #152]
  41e1b0:	cmp	w0, #0x2
  41e1b4:	b.ne	41e128 <_obstack_memory_used@@Base+0x7340>  // b.any
  41e1b8:	str	w0, [x28]
  41e1bc:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e1c0:	mov	w0, #0x1                   	// #1
  41e1c4:	strb	w0, [x24, #8]
  41e1c8:	b	41e134 <_obstack_memory_used@@Base+0x734c>
  41e1cc:	str	w0, [x28]
  41e1d0:	mov	x0, x20
  41e1d4:	bl	402660 <free@plt>
  41e1d8:	mov	x0, x21
  41e1dc:	bl	419a68 <_obstack_memory_used@@Base+0x2c80>
  41e1e0:	ldr	w0, [x28]
  41e1e4:	cbnz	w0, 41ef3c <_obstack_memory_used@@Base+0x8154>
  41e1e8:	mov	x25, #0x0                   	// #0
  41e1ec:	ldp	x21, x22, [sp, #32]
  41e1f0:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41e1f4:	mov	w0, #0x7                   	// #7
  41e1f8:	str	w0, [x28]
  41e1fc:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e200:	ldr	x0, [x26, #72]
  41e204:	add	x0, x0, w19, sxtw
  41e208:	str	x0, [x26, #72]
  41e20c:	mov	x2, x27
  41e210:	mov	x1, x26
  41e214:	add	x0, sp, #0xd0
  41e218:	bl	4170f8 <_obstack_memory_used@@Base+0x310>
  41e21c:	mov	w3, w0
  41e220:	ldrb	w0, [sp, #216]
  41e224:	cmp	w0, #0x2
  41e228:	b.eq	41e250 <_obstack_memory_used@@Base+0x7468>  // b.none
  41e22c:	cmp	w0, #0x15
  41e230:	b.ne	41e25c <_obstack_memory_used@@Base+0x7474>  // b.any
  41e234:	neg	w0, w19
  41e238:	ldr	x1, [x26, #72]
  41e23c:	add	x0, x1, w0, sxtw
  41e240:	str	x0, [x26, #72]
  41e244:	mov	w0, #0x1                   	// #1
  41e248:	strb	w0, [x24, #8]
  41e24c:	b	41e5d8 <_obstack_memory_used@@Base+0x77f0>
  41e250:	mov	w0, #0x7                   	// #7
  41e254:	str	w0, [x28]
  41e258:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e25c:	add	x0, sp, #0x100
  41e260:	str	x0, [sp, #200]
  41e264:	mov	w0, #0x3                   	// #3
  41e268:	str	w0, [sp, #192]
  41e26c:	mov	w6, #0x1                   	// #1
  41e270:	mov	x5, x27
  41e274:	mov	x4, x23
  41e278:	add	x2, sp, #0xd0
  41e27c:	mov	x1, x26
  41e280:	add	x0, sp, #0xc0
  41e284:	bl	4176b8 <_obstack_memory_used@@Base+0x8d0>
  41e288:	cbnz	w0, 41e39c <_obstack_memory_used@@Base+0x75b4>
  41e28c:	mov	x2, x27
  41e290:	mov	x1, x26
  41e294:	mov	x0, x24
  41e298:	bl	4170f8 <_obstack_memory_used@@Base+0x310>
  41e29c:	mov	w19, w0
  41e2a0:	ldr	w0, [x23, #180]
  41e2a4:	cmp	w0, #0x2
  41e2a8:	csel	x0, x21, xzr, ge  // ge = tcont
  41e2ac:	str	x0, [sp, #112]
  41e2b0:	ldr	w1, [sp, #176]
  41e2b4:	str	w1, [sp, #144]
  41e2b8:	sub	w0, w1, #0x2
  41e2bc:	tst	w0, #0xfffffffd
  41e2c0:	b.eq	41ef60 <_obstack_memory_used@@Base+0x8178>  // b.none
  41e2c4:	ldr	w0, [sp, #192]
  41e2c8:	str	w0, [sp, #128]
  41e2cc:	sub	w0, w0, #0x2
  41e2d0:	tst	w0, #0xfffffffd
  41e2d4:	b.eq	41ef68 <_obstack_memory_used@@Base+0x8180>  // b.none
  41e2d8:	cmp	w1, #0x3
  41e2dc:	cset	w0, eq  // eq = none
  41e2e0:	str	w0, [sp, #156]
  41e2e4:	b.eq	41e3a4 <_obstack_memory_used@@Base+0x75bc>  // b.none
  41e2e8:	ldr	w0, [sp, #128]
  41e2ec:	cmp	w0, #0x3
  41e2f0:	b.eq	41e3cc <_obstack_memory_used@@Base+0x75e4>  // b.none
  41e2f4:	ldr	w0, [sp, #144]
  41e2f8:	mov	w22, #0x0                   	// #0
  41e2fc:	cbnz	w0, 41e304 <_obstack_memory_used@@Base+0x751c>
  41e300:	ldrb	w22, [sp, #184]
  41e304:	ldr	w0, [sp, #128]
  41e308:	cbnz	w0, 41e3f8 <_obstack_memory_used@@Base+0x7610>
  41e30c:	ldrb	w25, [sp, #200]
  41e310:	ldr	w0, [sp, #144]
  41e314:	cmp	w0, #0x0
  41e318:	ldr	w0, [sp, #156]
  41e31c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
  41e320:	b.ne	41e414 <_obstack_memory_used@@Base+0x762c>  // b.any
  41e324:	ldr	w22, [sp, #184]
  41e328:	ldr	w0, [sp, #128]
  41e32c:	cmp	w0, #0x0
  41e330:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41e334:	b.eq	41e43c <_obstack_memory_used@@Base+0x7654>  // b.none
  41e338:	ldr	w25, [sp, #200]
  41e33c:	cmn	w22, #0x1
  41e340:	ccmn	w25, #0x1, #0x4, ne  // ne = any
  41e344:	b.eq	41ef84 <_obstack_memory_used@@Base+0x819c>  // b.none
  41e348:	tst	x27, #0x10000
  41e34c:	ccmp	w25, w22, #0x2, ne  // ne = any
  41e350:	b.cc	41ef8c <_obstack_memory_used@@Base+0x81a4>  // b.lo, b.ul, b.last
  41e354:	ldr	x0, [sp, #112]
  41e358:	cbz	x0, 41e390 <_obstack_memory_used@@Base+0x75a8>
  41e35c:	ldr	x0, [x0, #64]
  41e360:	ldr	x1, [sp, #136]
  41e364:	cmp	x0, x1
  41e368:	b.eq	41e454 <_obstack_memory_used@@Base+0x766c>  // b.none
  41e36c:	ldr	x3, [sp, #112]
  41e370:	ldr	x1, [x3, #64]
  41e374:	ldr	x0, [x3, #8]
  41e378:	str	w22, [x0, x1, lsl #2]
  41e37c:	ldr	x1, [x3, #16]
  41e380:	ldr	x0, [x3, #64]
  41e384:	add	x2, x0, #0x1
  41e388:	str	x2, [x3, #64]
  41e38c:	str	w25, [x1, x0, lsl #2]
  41e390:	mov	x0, #0x0                   	// #0
  41e394:	mov	x4, #0x1                   	// #1
  41e398:	b	41e4dc <_obstack_memory_used@@Base+0x76f4>
  41e39c:	str	w0, [x28]
  41e3a0:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e3a4:	ldr	x0, [sp, #184]
  41e3a8:	bl	4022c0 <strlen@plt>
  41e3ac:	cmp	x0, #0x1
  41e3b0:	b.hi	41ef74 <_obstack_memory_used@@Base+0x818c>  // b.pmore
  41e3b4:	ldr	w0, [sp, #128]
  41e3b8:	cmp	w0, #0x3
  41e3bc:	b.eq	41efc0 <_obstack_memory_used@@Base+0x81d8>  // b.none
  41e3c0:	ldr	x0, [sp, #184]
  41e3c4:	ldrb	w22, [x0]
  41e3c8:	b	41e304 <_obstack_memory_used@@Base+0x751c>
  41e3cc:	ldr	x0, [sp, #200]
  41e3d0:	bl	4022c0 <strlen@plt>
  41e3d4:	cmp	x0, #0x1
  41e3d8:	b.hi	41ef7c <_obstack_memory_used@@Base+0x8194>  // b.pmore
  41e3dc:	ldr	w0, [sp, #144]
  41e3e0:	cbz	w0, 41e300 <_obstack_memory_used@@Base+0x7518>
  41e3e4:	ldr	w0, [sp, #144]
  41e3e8:	cmp	w0, #0x3
  41e3ec:	b.eq	41e3c0 <_obstack_memory_used@@Base+0x75d8>  // b.none
  41e3f0:	mov	w22, #0x0                   	// #0
  41e3f4:	b	41e304 <_obstack_memory_used@@Base+0x751c>
  41e3f8:	mov	w25, #0x0                   	// #0
  41e3fc:	ldr	w0, [sp, #128]
  41e400:	cmp	w0, #0x3
  41e404:	b.ne	41e310 <_obstack_memory_used@@Base+0x7528>  // b.any
  41e408:	ldr	x0, [sp, #200]
  41e40c:	ldrb	w25, [x0]
  41e410:	b	41e310 <_obstack_memory_used@@Base+0x7528>
  41e414:	ldr	x0, [sp, #112]
  41e418:	cbz	x0, 41efac <_obstack_memory_used@@Base+0x81c4>
  41e41c:	mov	w0, w22
  41e420:	bl	402590 <btowc@plt>
  41e424:	mov	w22, w0
  41e428:	ldr	w0, [sp, #192]
  41e42c:	cmp	w0, #0x0
  41e430:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41e434:	b.ne	41e338 <_obstack_memory_used@@Base+0x7550>  // b.any
  41e438:	b	41e444 <_obstack_memory_used@@Base+0x765c>
  41e43c:	ldr	x0, [sp, #112]
  41e440:	cbz	x0, 41e33c <_obstack_memory_used@@Base+0x7554>
  41e444:	mov	w0, w25
  41e448:	bl	402590 <btowc@plt>
  41e44c:	mov	w25, w0
  41e450:	b	41e33c <_obstack_memory_used@@Base+0x7554>
  41e454:	lsl	x0, x1, #1
  41e458:	add	x0, x0, #0x1
  41e45c:	str	x0, [sp, #136]
  41e460:	lsl	x0, x0, #2
  41e464:	str	x0, [sp, #144]
  41e468:	mov	x1, x0
  41e46c:	ldr	x2, [sp, #112]
  41e470:	ldr	x0, [x2, #8]
  41e474:	bl	402500 <realloc@plt>
  41e478:	str	x0, [sp, #128]
  41e47c:	ldr	x1, [sp, #144]
  41e480:	ldr	x2, [sp, #112]
  41e484:	ldr	x0, [x2, #16]
  41e488:	bl	402500 <realloc@plt>
  41e48c:	str	x0, [sp, #144]
  41e490:	ldr	x1, [sp, #128]
  41e494:	cmp	x1, #0x0
  41e498:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41e49c:	b.eq	41e4b8 <_obstack_memory_used@@Base+0x76d0>  // b.none
  41e4a0:	ldr	x0, [sp, #112]
  41e4a4:	ldr	x1, [sp, #128]
  41e4a8:	str	x1, [x0, #8]
  41e4ac:	ldr	x1, [sp, #144]
  41e4b0:	str	x1, [x0, #16]
  41e4b4:	b	41e36c <_obstack_memory_used@@Base+0x7584>
  41e4b8:	mov	x0, x1
  41e4bc:	bl	402660 <free@plt>
  41e4c0:	ldr	x0, [sp, #144]
  41e4c4:	bl	402660 <free@plt>
  41e4c8:	mov	w0, #0xc                   	// #12
  41e4cc:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41e4d0:	add	x0, x0, #0x1
  41e4d4:	cmp	x0, #0x100
  41e4d8:	b.eq	41ef94 <_obstack_memory_used@@Base+0x81ac>  // b.none
  41e4dc:	cmp	w0, w22
  41e4e0:	ccmp	w25, w0, #0x0, cs  // cs = hs, nlast
  41e4e4:	b.cc	41e4d0 <_obstack_memory_used@@Base+0x76e8>  // b.lo, b.ul, b.last
  41e4e8:	add	x1, x0, #0x3f
  41e4ec:	cmp	x0, #0x0
  41e4f0:	csel	x1, x1, x0, lt  // lt = tstop
  41e4f4:	asr	x1, x1, #6
  41e4f8:	lsl	x2, x4, x0
  41e4fc:	ldr	x3, [x20, x1, lsl #3]
  41e500:	orr	x2, x3, x2
  41e504:	str	x2, [x20, x1, lsl #3]
  41e508:	b	41e4d0 <_obstack_memory_used@@Base+0x76e8>
  41e50c:	cmp	w0, #0x3
  41e510:	b.eq	41e670 <_obstack_memory_used@@Base+0x7888>  // b.none
  41e514:	mov	x5, x27
  41e518:	ldr	x4, [sp, #184]
  41e51c:	add	x3, sp, #0xa8
  41e520:	mov	x2, x21
  41e524:	mov	x1, x20
  41e528:	ldr	x0, [x26, #120]
  41e52c:	bl	41b3d4 <_obstack_memory_used@@Base+0x45ec>
  41e530:	str	w0, [x28]
  41e534:	cbz	w0, 41e558 <_obstack_memory_used@@Base+0x7770>
  41e538:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e53c:	ldrb	w1, [sp, #184]
  41e540:	ubfx	x2, x1, #6, #2
  41e544:	mov	x0, #0x1                   	// #1
  41e548:	lsl	x1, x0, x1
  41e54c:	ldr	x0, [x20, x2, lsl #3]
  41e550:	orr	x0, x0, x1
  41e554:	str	x0, [x20, x2, lsl #3]
  41e558:	ldrb	w0, [x24, #8]
  41e55c:	cmp	w0, #0x2
  41e560:	b.eq	41e6a4 <_obstack_memory_used@@Base+0x78bc>  // b.none
  41e564:	cmp	w0, #0x15
  41e568:	b.eq	41e6b0 <_obstack_memory_used@@Base+0x78c8>  // b.none
  41e56c:	ldr	w6, [sp, #96]
  41e570:	add	x0, sp, #0xe0
  41e574:	str	x0, [sp, #184]
  41e578:	mov	w0, #0x3                   	// #3
  41e57c:	str	w0, [sp, #176]
  41e580:	mov	x5, x27
  41e584:	mov	x4, x23
  41e588:	mov	w3, w19
  41e58c:	mov	x2, x24
  41e590:	mov	x1, x26
  41e594:	add	x0, sp, #0xb0
  41e598:	bl	4176b8 <_obstack_memory_used@@Base+0x8d0>
  41e59c:	cbnz	w0, 41e1cc <_obstack_memory_used@@Base+0x73e4>
  41e5a0:	mov	x2, x27
  41e5a4:	mov	x1, x26
  41e5a8:	mov	x0, x24
  41e5ac:	bl	4170f8 <_obstack_memory_used@@Base+0x310>
  41e5b0:	mov	w19, w0
  41e5b4:	ldr	w0, [sp, #176]
  41e5b8:	sub	w0, w0, #0x2
  41e5bc:	tst	w0, #0xfffffffd
  41e5c0:	b.eq	41e5d8 <_obstack_memory_used@@Base+0x77f0>  // b.none
  41e5c4:	ldrb	w0, [x24, #8]
  41e5c8:	cmp	w0, #0x2
  41e5cc:	b.eq	41e1f4 <_obstack_memory_used@@Base+0x740c>  // b.none
  41e5d0:	cmp	w0, #0x16
  41e5d4:	b.eq	41e200 <_obstack_memory_used@@Base+0x7418>  // b.none
  41e5d8:	ldr	w0, [sp, #176]
  41e5dc:	cmp	w0, #0x2
  41e5e0:	b.eq	41e63c <_obstack_memory_used@@Base+0x7854>  // b.none
  41e5e4:	b.hi	41e50c <_obstack_memory_used@@Base+0x7724>  // b.pmore
  41e5e8:	cbz	w0, 41e53c <_obstack_memory_used@@Base+0x7754>
  41e5ec:	ldr	x0, [x21, #40]
  41e5f0:	ldr	x1, [sp, #120]
  41e5f4:	cmp	x0, x1
  41e5f8:	b.eq	41e618 <_obstack_memory_used@@Base+0x7830>  // b.none
  41e5fc:	ldr	x1, [x21]
  41e600:	ldr	x0, [x21, #40]
  41e604:	add	x2, x0, #0x1
  41e608:	str	x2, [x21, #40]
  41e60c:	ldr	w2, [sp, #184]
  41e610:	str	w2, [x1, x0, lsl #2]
  41e614:	b	41e558 <_obstack_memory_used@@Base+0x7770>
  41e618:	lsl	x0, x1, #1
  41e61c:	add	x0, x0, #0x1
  41e620:	str	x0, [sp, #120]
  41e624:	lsl	x1, x0, #2
  41e628:	ldr	x0, [x21]
  41e62c:	bl	402500 <realloc@plt>
  41e630:	cbz	x0, 41e82c <_obstack_memory_used@@Base+0x7a44>
  41e634:	str	x0, [x21]
  41e638:	b	41e5fc <_obstack_memory_used@@Base+0x7814>
  41e63c:	ldr	x22, [sp, #184]
  41e640:	mov	x0, x22
  41e644:	bl	4022c0 <strlen@plt>
  41e648:	cmp	x0, #0x1
  41e64c:	b.ne	41ef48 <_obstack_memory_used@@Base+0x8160>  // b.any
  41e650:	ldrb	w1, [x22]
  41e654:	ubfx	x2, x1, #6, #2
  41e658:	lsl	x1, x0, x1
  41e65c:	ldr	x0, [x20, x2, lsl #3]
  41e660:	orr	x0, x0, x1
  41e664:	str	x0, [x20, x2, lsl #3]
  41e668:	str	wzr, [x28]
  41e66c:	b	41e558 <_obstack_memory_used@@Base+0x7770>
  41e670:	ldr	x22, [sp, #184]
  41e674:	mov	x0, x22
  41e678:	bl	4022c0 <strlen@plt>
  41e67c:	cmp	x0, #0x1
  41e680:	b.ne	41ef54 <_obstack_memory_used@@Base+0x816c>  // b.any
  41e684:	ldrb	w1, [x22]
  41e688:	ubfx	x2, x1, #6, #2
  41e68c:	lsl	x1, x0, x1
  41e690:	ldr	x0, [x20, x2, lsl #3]
  41e694:	orr	x0, x0, x1
  41e698:	str	x0, [x20, x2, lsl #3]
  41e69c:	str	wzr, [x28]
  41e6a0:	b	41e558 <_obstack_memory_used@@Base+0x7770>
  41e6a4:	mov	w0, #0x7                   	// #7
  41e6a8:	str	w0, [x28]
  41e6ac:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e6b0:	ldr	x0, [x26, #72]
  41e6b4:	add	x19, x0, w19, sxtw
  41e6b8:	str	x19, [x26, #72]
  41e6bc:	ldr	w0, [sp, #152]
  41e6c0:	cbz	w0, 41e6e0 <_obstack_memory_used@@Base+0x78f8>
  41e6c4:	mov	x0, #0x0                   	// #0
  41e6c8:	ldr	x1, [x20, x0, lsl #3]
  41e6cc:	mvn	x1, x1
  41e6d0:	str	x1, [x20, x0, lsl #3]
  41e6d4:	add	x0, x0, #0x1
  41e6d8:	cmp	x0, #0x4
  41e6dc:	b.ne	41e6c8 <_obstack_memory_used@@Base+0x78e0>  // b.any
  41e6e0:	ldr	w2, [x23, #180]
  41e6e4:	cmp	w2, #0x1
  41e6e8:	b.le	41e710 <_obstack_memory_used@@Base+0x7928>
  41e6ec:	ldr	x3, [x23, #120]
  41e6f0:	mov	x0, #0x0                   	// #0
  41e6f4:	ldr	x1, [x20, x0]
  41e6f8:	ldr	x4, [x3, x0]
  41e6fc:	and	x1, x1, x4
  41e700:	str	x1, [x20, x0]
  41e704:	add	x0, x0, #0x8
  41e708:	cmp	x0, #0x20
  41e70c:	b.ne	41e6f4 <_obstack_memory_used@@Base+0x790c>  // b.any
  41e710:	ldr	x0, [x21, #40]
  41e714:	cbnz	x0, 41e748 <_obstack_memory_used@@Base+0x7960>
  41e718:	ldr	x0, [x21, #48]
  41e71c:	cbnz	x0, 41e748 <_obstack_memory_used@@Base+0x7960>
  41e720:	ldr	x0, [x21, #56]
  41e724:	cbnz	x0, 41e748 <_obstack_memory_used@@Base+0x7960>
  41e728:	ldr	x0, [x21, #64]
  41e72c:	cbnz	x0, 41e748 <_obstack_memory_used@@Base+0x7960>
  41e730:	cmp	w2, #0x1
  41e734:	b.le	41e7f4 <_obstack_memory_used@@Base+0x7a0c>
  41e738:	ldr	x0, [x21, #72]
  41e73c:	cbnz	x0, 41e748 <_obstack_memory_used@@Base+0x7960>
  41e740:	ldrb	w0, [x21, #32]
  41e744:	tbz	w0, #0, 41e7f4 <_obstack_memory_used@@Base+0x7a0c>
  41e748:	ldrb	w0, [x23, #176]
  41e74c:	orr	w0, w0, #0x2
  41e750:	strb	w0, [x23, #176]
  41e754:	mov	w0, #0x6                   	// #6
  41e758:	strb	w0, [sp, #264]
  41e75c:	str	x21, [sp, #256]
  41e760:	add	x3, sp, #0x100
  41e764:	mov	x2, #0x0                   	// #0
  41e768:	mov	x1, #0x0                   	// #0
  41e76c:	mov	x0, x23
  41e770:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41e774:	mov	x25, x0
  41e778:	cbz	x0, 41e82c <_obstack_memory_used@@Base+0x7a44>
  41e77c:	mov	x0, #0x0                   	// #0
  41e780:	ldr	x2, [x20, x0, lsl #3]
  41e784:	cbnz	x2, 41e7a4 <_obstack_memory_used@@Base+0x79bc>
  41e788:	add	x0, x0, #0x1
  41e78c:	cmp	x0, #0x4
  41e790:	b.ne	41e780 <_obstack_memory_used@@Base+0x7998>  // b.any
  41e794:	mov	x0, x20
  41e798:	bl	402660 <free@plt>
  41e79c:	ldp	x21, x22, [sp, #32]
  41e7a0:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41e7a4:	cmp	w0, #0x3
  41e7a8:	b.gt	41e794 <_obstack_memory_used@@Base+0x79ac>
  41e7ac:	mov	w0, #0x3                   	// #3
  41e7b0:	strb	w0, [sp, #264]
  41e7b4:	str	x20, [sp, #256]
  41e7b8:	add	x3, sp, #0x100
  41e7bc:	mov	x2, #0x0                   	// #0
  41e7c0:	mov	x1, #0x0                   	// #0
  41e7c4:	mov	x0, x23
  41e7c8:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41e7cc:	mov	x1, x0
  41e7d0:	cbz	x0, 41e82c <_obstack_memory_used@@Base+0x7a44>
  41e7d4:	mov	w3, #0xa                   	// #10
  41e7d8:	mov	x2, x25
  41e7dc:	mov	x0, x23
  41e7e0:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41e7e4:	mov	x25, x0
  41e7e8:	cbz	x0, 41e82c <_obstack_memory_used@@Base+0x7a44>
  41e7ec:	ldp	x21, x22, [sp, #32]
  41e7f0:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41e7f4:	mov	x0, x21
  41e7f8:	bl	419a68 <_obstack_memory_used@@Base+0x2c80>
  41e7fc:	mov	w0, #0x3                   	// #3
  41e800:	strb	w0, [sp, #264]
  41e804:	str	x20, [sp, #256]
  41e808:	add	x3, sp, #0x100
  41e80c:	mov	x2, #0x0                   	// #0
  41e810:	mov	x1, #0x0                   	// #0
  41e814:	mov	x0, x23
  41e818:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41e81c:	mov	x25, x0
  41e820:	cbz	x0, 41e82c <_obstack_memory_used@@Base+0x7a44>
  41e824:	ldp	x21, x22, [sp, #32]
  41e828:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41e82c:	mov	w0, #0xc                   	// #12
  41e830:	str	w0, [x28]
  41e834:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41e838:	mov	w0, #0x6                   	// #6
  41e83c:	str	w0, [x5]
  41e840:	mov	x25, #0x0                   	// #0
  41e844:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e848:	mov	w0, #0xc                   	// #12
  41e84c:	str	w0, [x28]
  41e850:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e854:	mov	w0, #0xd                   	// #13
  41e858:	str	w0, [x28]
  41e85c:	mov	x25, #0x0                   	// #0
  41e860:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e864:	mov	x2, x27
  41e868:	mov	x1, x26
  41e86c:	mov	x0, x24
  41e870:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41e874:	mov	x5, x28
  41e878:	mov	x4, x20
  41e87c:	mov	x3, x27
  41e880:	mov	x2, x24
  41e884:	mov	x1, x19
  41e888:	mov	x0, x26
  41e88c:	bl	41dd3c <_obstack_memory_used@@Base+0x6f54>
  41e890:	mov	x25, x0
  41e894:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e898:	tbnz	w27, #17, 41de58 <_obstack_memory_used@@Base+0x7070>
  41e89c:	mov	w0, #0x10                  	// #16
  41e8a0:	str	w0, [x28]
  41e8a4:	mov	x25, #0x0                   	// #0
  41e8a8:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e8ac:	ldr	w1, [x2]
  41e8b0:	mov	w0, #0x30f                 	// #783
  41e8b4:	tst	w1, w0
  41e8b8:	b.eq	41e8c4 <_obstack_memory_used@@Base+0x7adc>  // b.none
  41e8bc:	ldrb	w0, [x23, #176]
  41e8c0:	tbz	w0, #4, 41e958 <_obstack_memory_used@@Base+0x7b70>
  41e8c4:	ldr	w0, [x24]
  41e8c8:	sub	w1, w0, #0x100
  41e8cc:	tst	w1, #0xfffffeff
  41e8d0:	b.ne	41ea68 <_obstack_memory_used@@Base+0x7c80>  // b.any
  41e8d4:	cmp	w0, #0x100
  41e8d8:	b.eq	41ea2c <_obstack_memory_used@@Base+0x7c44>  // b.none
  41e8dc:	mov	w0, #0x5                   	// #5
  41e8e0:	str	w0, [x24]
  41e8e4:	mov	x3, x24
  41e8e8:	mov	x2, #0x0                   	// #0
  41e8ec:	mov	x1, #0x0                   	// #0
  41e8f0:	mov	x0, x23
  41e8f4:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41e8f8:	mov	x20, x0
  41e8fc:	mov	w0, #0xa                   	// #10
  41e900:	str	w0, [x24]
  41e904:	mov	x3, x24
  41e908:	mov	x2, #0x0                   	// #0
  41e90c:	mov	x1, #0x0                   	// #0
  41e910:	mov	x0, x23
  41e914:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41e918:	mov	x19, x0
  41e91c:	mov	w3, #0xa                   	// #10
  41e920:	mov	x2, x0
  41e924:	mov	x1, x20
  41e928:	mov	x0, x23
  41e92c:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41e930:	mov	x25, x0
  41e934:	cmp	x20, #0x0
  41e938:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41e93c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41e940:	b.eq	41ea58 <_obstack_memory_used@@Base+0x7c70>  // b.none
  41e944:	mov	x2, x27
  41e948:	mov	x1, x26
  41e94c:	mov	x0, x24
  41e950:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41e954:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41e958:	ldrb	w0, [x23, #176]
  41e95c:	orr	w0, w0, #0x10
  41e960:	strb	w0, [x23, #176]
  41e964:	tbnz	w0, #3, 41e99c <_obstack_memory_used@@Base+0x7bb4>
  41e968:	mov	x0, #0x3ff000000000000     	// #287948901175001088
  41e96c:	str	x0, [x23, #184]
  41e970:	mov	x0, #0x7fffffe07fffffe     	// #576460743847706622
  41e974:	movk	x0, #0x87ff, lsl #16
  41e978:	str	x0, [x23, #192]
  41e97c:	ldrb	w0, [x23, #176]
  41e980:	tbz	w0, #2, 41e98c <_obstack_memory_used@@Base+0x7ba4>
  41e984:	stp	xzr, xzr, [x23, #200]
  41e988:	b	41e8c4 <_obstack_memory_used@@Base+0x7adc>
  41e98c:	stp	x21, x22, [sp, #32]
  41e990:	mov	w20, #0x80                  	// #128
  41e994:	mov	w19, #0x2                   	// #2
  41e998:	b	41e9a8 <_obstack_memory_used@@Base+0x7bc0>
  41e99c:	stp	x21, x22, [sp, #32]
  41e9a0:	mov	w20, #0x0                   	// #0
  41e9a4:	mov	w19, #0x0                   	// #0
  41e9a8:	sxtw	x19, w19
  41e9ac:	sbfiz	x21, x20, #1, #32
  41e9b0:	bl	402650 <__ctype_b_loc@plt>
  41e9b4:	mov	x5, x0
  41e9b8:	add	x4, x23, #0xb8
  41e9bc:	mov	x6, #0x1                   	// #1
  41e9c0:	b	41ea18 <_obstack_memory_used@@Base+0x7c30>
  41e9c4:	add	w0, w0, #0x1
  41e9c8:	add	x3, x3, #0x2
  41e9cc:	cmp	w0, #0x40
  41e9d0:	b.eq	41ea04 <_obstack_memory_used@@Base+0x7c1c>  // b.none
  41e9d4:	add	w2, w20, w0
  41e9d8:	ldr	x1, [x5]
  41e9dc:	ldrh	w1, [x1, x3]
  41e9e0:	and	w1, w1, #0x8
  41e9e4:	cmp	w2, #0x5f
  41e9e8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
  41e9ec:	b.eq	41e9c4 <_obstack_memory_used@@Base+0x7bdc>  // b.none
  41e9f0:	lsl	x1, x6, x0
  41e9f4:	ldr	x2, [x4, x19, lsl #3]
  41e9f8:	orr	x1, x2, x1
  41e9fc:	str	x1, [x4, x19, lsl #3]
  41ea00:	b	41e9c4 <_obstack_memory_used@@Base+0x7bdc>
  41ea04:	add	w20, w20, #0x40
  41ea08:	add	x19, x19, #0x1
  41ea0c:	add	x21, x21, #0x80
  41ea10:	cmp	w19, #0x3
  41ea14:	b.gt	41ea24 <_obstack_memory_used@@Base+0x7c3c>
  41ea18:	mov	x3, x21
  41ea1c:	mov	w0, #0x0                   	// #0
  41ea20:	b	41e9d4 <_obstack_memory_used@@Base+0x7bec>
  41ea24:	ldp	x21, x22, [sp, #32]
  41ea28:	b	41e8c4 <_obstack_memory_used@@Base+0x7adc>
  41ea2c:	mov	w0, #0x6                   	// #6
  41ea30:	str	w0, [x24]
  41ea34:	mov	x3, x24
  41ea38:	mov	x2, #0x0                   	// #0
  41ea3c:	mov	x1, #0x0                   	// #0
  41ea40:	mov	x0, x23
  41ea44:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41ea48:	mov	x20, x0
  41ea4c:	mov	w0, #0x9                   	// #9
  41ea50:	str	w0, [x24]
  41ea54:	b	41e904 <_obstack_memory_used@@Base+0x7b1c>
  41ea58:	mov	w0, #0xc                   	// #12
  41ea5c:	str	w0, [x28]
  41ea60:	mov	x25, #0x0                   	// #0
  41ea64:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ea68:	mov	x3, x24
  41ea6c:	mov	x2, #0x0                   	// #0
  41ea70:	mov	x1, #0x0                   	// #0
  41ea74:	mov	x0, x23
  41ea78:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41ea7c:	mov	x25, x0
  41ea80:	cbnz	x0, 41e944 <_obstack_memory_used@@Base+0x7b5c>
  41ea84:	mov	w0, #0xc                   	// #12
  41ea88:	str	w0, [x28]
  41ea8c:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ea90:	mov	x3, x2
  41ea94:	mov	x2, #0x0                   	// #0
  41ea98:	mov	x1, #0x0                   	// #0
  41ea9c:	mov	x0, x23
  41eaa0:	bl	417b64 <_obstack_memory_used@@Base+0xd7c>
  41eaa4:	mov	x25, x0
  41eaa8:	cbz	x0, 41eac8 <_obstack_memory_used@@Base+0x7ce0>
  41eaac:	ldr	w0, [x23, #180]
  41eab0:	cmp	w0, #0x1
  41eab4:	b.le	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41eab8:	ldrb	w0, [x23, #176]
  41eabc:	orr	w0, w0, #0x2
  41eac0:	strb	w0, [x23, #176]
  41eac4:	b	41ddd0 <_obstack_memory_used@@Base+0x6fe8>
  41eac8:	mov	w0, #0xc                   	// #12
  41eacc:	str	w0, [x28]
  41ead0:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ead4:	cmp	w0, #0x23
  41ead8:	cset	w4, eq  // eq = none
  41eadc:	adrp	x3, 426000 <_obstack_memory_used@@Base+0xf218>
  41eae0:	add	x3, x3, #0x6c8
  41eae4:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  41eae8:	add	x2, x2, #0x230
  41eaec:	ldr	x1, [x26, #120]
  41eaf0:	mov	x0, x23
  41eaf4:	bl	41bddc <_obstack_memory_used@@Base+0x4ff4>
  41eaf8:	mov	x25, x0
  41eafc:	ldr	w0, [x28]
  41eb00:	cmp	w0, #0x0
  41eb04:	ccmp	x25, #0x0, #0x0, ne  // ne = any
  41eb08:	b.ne	41ddd0 <_obstack_memory_used@@Base+0x6fe8>  // b.any
  41eb0c:	mov	x25, #0x0                   	// #0
  41eb10:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41eb14:	mov	w0, #0x5                   	// #5
  41eb18:	str	w0, [x5]
  41eb1c:	mov	x25, #0x0                   	// #0
  41eb20:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41eb24:	mov	x2, x27
  41eb28:	mov	x1, x24
  41eb2c:	mov	x0, x26
  41eb30:	bl	419998 <_obstack_memory_used@@Base+0x2bb0>
  41eb34:	mov	x21, x0
  41eb38:	cmn	x0, #0x1
  41eb3c:	b.eq	41eb7c <_obstack_memory_used@@Base+0x7d94>  // b.none
  41eb40:	cmn	x0, #0x2
  41eb44:	b.eq	41eb5c <_obstack_memory_used@@Base+0x7d74>  // b.none
  41eb48:	ldrb	w0, [x24, #8]
  41eb4c:	cmp	w0, #0x18
  41eb50:	b.eq	41ec70 <_obstack_memory_used@@Base+0x7e88>  // b.none
  41eb54:	cmp	w0, #0x1
  41eb58:	b.eq	41ebd4 <_obstack_memory_used@@Base+0x7dec>  // b.none
  41eb5c:	tbnz	w27, #21, 41eba8 <_obstack_memory_used@@Base+0x7dc0>
  41eb60:	ldrb	w0, [x24, #8]
  41eb64:	cmp	w0, #0x2
  41eb68:	b.ne	41ec60 <_obstack_memory_used@@Base+0x7e78>  // b.any
  41eb6c:	mov	w0, #0x9                   	// #9
  41eb70:	str	w0, [x28]
  41eb74:	mov	x0, #0x0                   	// #0
  41eb78:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41eb7c:	ldrb	w0, [x24, #8]
  41eb80:	cmp	w0, #0x1
  41eb84:	b.ne	41ebc4 <_obstack_memory_used@@Base+0x7ddc>  // b.any
  41eb88:	ldrb	w0, [x24]
  41eb8c:	mov	x22, #0x0                   	// #0
  41eb90:	cmp	w0, #0x2c
  41eb94:	b.ne	41ebc4 <_obstack_memory_used@@Base+0x7ddc>  // b.any
  41eb98:	ldrb	w0, [x24]
  41eb9c:	cmp	w0, #0x2c
  41eba0:	b.eq	41ebdc <_obstack_memory_used@@Base+0x7df4>  // b.none
  41eba4:	tbz	w27, #21, 41ec60 <_obstack_memory_used@@Base+0x7e78>
  41eba8:	str	x20, [x26, #72]
  41ebac:	ldp	x0, x1, [sp, #96]
  41ebb0:	stp	x0, x1, [x24]
  41ebb4:	mov	w0, #0x1                   	// #1
  41ebb8:	strb	w0, [x24, #8]
  41ebbc:	mov	x0, x25
  41ebc0:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41ebc4:	mov	w0, #0xa                   	// #10
  41ebc8:	str	w0, [x28]
  41ebcc:	mov	x0, #0x0                   	// #0
  41ebd0:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41ebd4:	mov	x22, x21
  41ebd8:	b	41eb98 <_obstack_memory_used@@Base+0x7db0>
  41ebdc:	mov	x2, x27
  41ebe0:	mov	x1, x24
  41ebe4:	mov	x0, x26
  41ebe8:	bl	419998 <_obstack_memory_used@@Base+0x2bb0>
  41ebec:	mov	x21, x0
  41ebf0:	cmn	x22, #0x2
  41ebf4:	ccmn	x0, #0x2, #0x4, ne  // ne = any
  41ebf8:	b.eq	41eb5c <_obstack_memory_used@@Base+0x7d74>  // b.none
  41ebfc:	cmp	x0, x22
  41ec00:	ccmn	x0, #0x1, #0x4, lt  // lt = tstop
  41ec04:	b.ne	41ec78 <_obstack_memory_used@@Base+0x7e90>  // b.any
  41ec08:	ldrb	w0, [x24, #8]
  41ec0c:	cmp	w0, #0x18
  41ec10:	b.ne	41ec78 <_obstack_memory_used@@Base+0x7e90>  // b.any
  41ec14:	cmn	x21, #0x1
  41ec18:	b.eq	41ec88 <_obstack_memory_used@@Base+0x7ea0>  // b.none
  41ec1c:	mov	x0, #0x7fff                	// #32767
  41ec20:	cmp	x21, x0
  41ec24:	cset	x0, gt
  41ec28:	cbnz	x0, 41ec98 <_obstack_memory_used@@Base+0x7eb0>
  41ec2c:	mov	x2, x27
  41ec30:	mov	x1, x26
  41ec34:	mov	x0, x24
  41ec38:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41ec3c:	cbz	x25, 41eea4 <_obstack_memory_used@@Base+0x80bc>
  41ec40:	orr	x0, x21, x22
  41ec44:	cbnz	x0, 41eca8 <_obstack_memory_used@@Base+0x7ec0>
  41ec48:	mov	x2, #0x0                   	// #0
  41ec4c:	ldr	x1, [sp, #120]
  41ec50:	mov	x0, x25
  41ec54:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41ec58:	mov	x0, #0x0                   	// #0
  41ec5c:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41ec60:	mov	w0, #0xa                   	// #10
  41ec64:	str	w0, [x28]
  41ec68:	mov	x0, #0x0                   	// #0
  41ec6c:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41ec70:	mov	x22, x21
  41ec74:	b	41ec08 <_obstack_memory_used@@Base+0x7e20>
  41ec78:	mov	w0, #0xa                   	// #10
  41ec7c:	str	w0, [x28]
  41ec80:	mov	x0, #0x0                   	// #0
  41ec84:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41ec88:	mov	x0, #0x7fff                	// #32767
  41ec8c:	cmp	x22, x0
  41ec90:	cset	x0, gt
  41ec94:	b	41ec28 <_obstack_memory_used@@Base+0x7e40>
  41ec98:	mov	w0, #0xf                   	// #15
  41ec9c:	str	w0, [x28]
  41eca0:	mov	x0, #0x0                   	// #0
  41eca4:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41eca8:	cmp	x22, #0x0
  41ecac:	b.le	41ee84 <_obstack_memory_used@@Base+0x809c>
  41ecb0:	cmp	x22, #0x1
  41ecb4:	b.le	41ee70 <_obstack_memory_used@@Base+0x8088>
  41ecb8:	str	x25, [sp, #96]
  41ecbc:	mov	x19, x25
  41ecc0:	mov	x20, #0x2                   	// #2
  41ecc4:	mov	x1, x23
  41ecc8:	mov	x0, x19
  41eccc:	bl	417c20 <_obstack_memory_used@@Base+0xe38>
  41ecd0:	mov	x19, x0
  41ecd4:	mov	w3, #0x10                  	// #16
  41ecd8:	mov	x2, x0
  41ecdc:	ldr	x1, [sp, #96]
  41ece0:	mov	x0, x23
  41ece4:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41ece8:	str	x0, [sp, #96]
  41ecec:	cmp	x19, #0x0
  41ecf0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41ecf4:	b.eq	41ed20 <_obstack_memory_used@@Base+0x7f38>  // b.none
  41ecf8:	add	x20, x20, #0x1
  41ecfc:	cmp	x20, x22
  41ed00:	b.le	41ecc4 <_obstack_memory_used@@Base+0x7edc>
  41ed04:	cmp	x21, x22
  41ed08:	b.eq	41efa4 <_obstack_memory_used@@Base+0x81bc>  // b.none
  41ed0c:	mov	x1, x23
  41ed10:	mov	x0, x19
  41ed14:	bl	417c20 <_obstack_memory_used@@Base+0xe38>
  41ed18:	mov	x19, x0
  41ed1c:	cbnz	x0, 41edbc <_obstack_memory_used@@Base+0x7fd4>
  41ed20:	mov	w0, #0xc                   	// #12
  41ed24:	str	w0, [x28]
  41ed28:	mov	x0, #0x0                   	// #0
  41ed2c:	ldr	w1, [x28]
  41ed30:	cmp	w1, #0x0
  41ed34:	ccmp	x0, #0x0, #0x0, ne  // ne = any
  41ed38:	b.eq	41eebc <_obstack_memory_used@@Base+0x80d4>  // b.none
  41ed3c:	mov	x25, x0
  41ed40:	tbz	w27, #24, 41ed54 <_obstack_memory_used@@Base+0x7f6c>
  41ed44:	ldrb	w0, [x24, #8]
  41ed48:	cmp	w0, #0xb
  41ed4c:	ccmp	w0, #0x17, #0x4, ne  // ne = any
  41ed50:	b.eq	41eee0 <_obstack_memory_used@@Base+0x80f8>  // b.none
  41ed54:	ldrb	w1, [x24, #8]
  41ed58:	cmp	w1, #0x12
  41ed5c:	cset	w19, eq  // eq = none
  41ed60:	sub	w0, w1, #0x12
  41ed64:	and	w0, w0, #0xff
  41ed68:	cmp	w1, #0x17
  41ed6c:	ccmp	w1, #0xb, #0x4, ne  // ne = any
  41ed70:	ccmp	w0, #0x1, #0x0, ne  // ne = any
  41ed74:	b.hi	41ef24 <_obstack_memory_used@@Base+0x813c>  // b.pmore
  41ed78:	ldr	x20, [x26, #72]
  41ed7c:	ldp	x2, x3, [x24]
  41ed80:	stp	x2, x3, [sp, #96]
  41ed84:	cmp	w1, #0x17
  41ed88:	b.eq	41eb24 <_obstack_memory_used@@Base+0x7d3c>  // b.none
  41ed8c:	and	x22, x19, #0xff
  41ed90:	mov	x21, #0xffffffffffffffff    	// #-1
  41ed94:	cmp	w1, #0x13
  41ed98:	cneg	x21, x21, eq  // eq = none
  41ed9c:	mov	x2, x27
  41eda0:	mov	x1, x26
  41eda4:	mov	x0, x24
  41eda8:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41edac:	cbz	x25, 41eeb4 <_obstack_memory_used@@Base+0x80cc>
  41edb0:	cbnz	w19, 41ee70 <_obstack_memory_used@@Base+0x8088>
  41edb4:	mov	x19, x25
  41edb8:	str	xzr, [sp, #96]
  41edbc:	ldrb	w0, [x19, #48]
  41edc0:	cmp	w0, #0x11
  41edc4:	b.eq	41ee90 <_obstack_memory_used@@Base+0x80a8>  // b.none
  41edc8:	cmn	x21, #0x1
  41edcc:	cset	w3, eq  // eq = none
  41edd0:	add	w3, w3, #0xa
  41edd4:	mov	x2, #0x0                   	// #0
  41edd8:	mov	x1, x19
  41eddc:	mov	x0, x23
  41ede0:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41ede4:	mov	x20, x0
  41ede8:	cbz	x0, 41ed20 <_obstack_memory_used@@Base+0x7f38>
  41edec:	add	x22, x22, #0x2
  41edf0:	cmp	x21, x22
  41edf4:	b.lt	41ee50 <_obstack_memory_used@@Base+0x8068>  // b.tstop
  41edf8:	mov	x1, x23
  41edfc:	mov	x0, x19
  41ee00:	bl	417c20 <_obstack_memory_used@@Base+0xe38>
  41ee04:	mov	x19, x0
  41ee08:	mov	w3, #0x10                  	// #16
  41ee0c:	mov	x2, x0
  41ee10:	mov	x1, x20
  41ee14:	mov	x0, x23
  41ee18:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41ee1c:	mov	x1, x0
  41ee20:	cmp	x19, #0x0
  41ee24:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  41ee28:	b.eq	41ed20 <_obstack_memory_used@@Base+0x7f38>  // b.none
  41ee2c:	mov	w3, #0xa                   	// #10
  41ee30:	mov	x2, #0x0                   	// #0
  41ee34:	mov	x0, x23
  41ee38:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41ee3c:	mov	x20, x0
  41ee40:	cbz	x0, 41ed20 <_obstack_memory_used@@Base+0x7f38>
  41ee44:	add	x22, x22, #0x1
  41ee48:	cmp	x21, x22
  41ee4c:	b.ge	41edf8 <_obstack_memory_used@@Base+0x8010>  // b.tcont
  41ee50:	ldr	x0, [sp, #96]
  41ee54:	cbz	x0, 41ef9c <_obstack_memory_used@@Base+0x81b4>
  41ee58:	mov	w3, #0x10                  	// #16
  41ee5c:	mov	x2, x20
  41ee60:	ldr	x1, [sp, #96]
  41ee64:	mov	x0, x23
  41ee68:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41ee6c:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41ee70:	cmp	x22, x21
  41ee74:	b.eq	41eeac <_obstack_memory_used@@Base+0x80c4>  // b.none
  41ee78:	mov	x19, x25
  41ee7c:	str	x25, [sp, #96]
  41ee80:	b	41ed0c <_obstack_memory_used@@Base+0x7f24>
  41ee84:	mov	x19, x25
  41ee88:	str	xzr, [sp, #96]
  41ee8c:	b	41edbc <_obstack_memory_used@@Base+0x7fd4>
  41ee90:	ldr	x2, [x19, #40]
  41ee94:	ldr	x1, [sp, #112]
  41ee98:	mov	x0, x19
  41ee9c:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41eea0:	b	41edc8 <_obstack_memory_used@@Base+0x7fe0>
  41eea4:	mov	x0, x25
  41eea8:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41eeac:	mov	x0, x25
  41eeb0:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41eeb4:	mov	x0, x25
  41eeb8:	b	41ed2c <_obstack_memory_used@@Base+0x7f44>
  41eebc:	cbz	x25, 41efd8 <_obstack_memory_used@@Base+0x81f0>
  41eec0:	mov	x2, #0x0                   	// #0
  41eec4:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2218>
  41eec8:	add	x1, x1, #0xaf0
  41eecc:	mov	x0, x25
  41eed0:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41eed4:	mov	x25, #0x0                   	// #0
  41eed8:	ldp	x21, x22, [sp, #32]
  41eedc:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41eee0:	cbz	x25, 41eef8 <_obstack_memory_used@@Base+0x8110>
  41eee4:	mov	x2, #0x0                   	// #0
  41eee8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2218>
  41eeec:	add	x1, x1, #0xaf0
  41eef0:	mov	x0, x25
  41eef4:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41eef8:	mov	w0, #0xd                   	// #13
  41eefc:	str	w0, [x28]
  41ef00:	mov	x25, #0x0                   	// #0
  41ef04:	ldp	x21, x22, [sp, #32]
  41ef08:	mov	x0, x25
  41ef0c:	ldp	x19, x20, [sp, #16]
  41ef10:	ldp	x23, x24, [sp, #48]
  41ef14:	ldp	x25, x26, [sp, #64]
  41ef18:	ldp	x27, x28, [sp, #80]
  41ef1c:	ldp	x29, x30, [sp], #288
  41ef20:	ret
  41ef24:	ldp	x21, x22, [sp, #32]
  41ef28:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ef2c:	mov	x25, #0x0                   	// #0
  41ef30:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ef34:	mov	x25, #0x0                   	// #0
  41ef38:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ef3c:	mov	x25, #0x0                   	// #0
  41ef40:	ldp	x21, x22, [sp, #32]
  41ef44:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41ef48:	mov	w0, #0x3                   	// #3
  41ef4c:	str	w0, [x28]
  41ef50:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41ef54:	mov	w0, #0x3                   	// #3
  41ef58:	str	w0, [x28]
  41ef5c:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41ef60:	mov	w0, #0xb                   	// #11
  41ef64:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41ef68:	mov	w0, #0xb                   	// #11
  41ef6c:	str	w0, [x28]
  41ef70:	b	41e1d0 <_obstack_memory_used@@Base+0x73e8>
  41ef74:	mov	w0, #0x3                   	// #3
  41ef78:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41ef7c:	mov	w0, #0x3                   	// #3
  41ef80:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41ef84:	mov	w0, #0x3                   	// #3
  41ef88:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41ef8c:	mov	w0, #0xb                   	// #11
  41ef90:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41ef94:	str	wzr, [x28]
  41ef98:	b	41e558 <_obstack_memory_used@@Base+0x7770>
  41ef9c:	mov	x25, x20
  41efa0:	b	41ed40 <_obstack_memory_used@@Base+0x7f58>
  41efa4:	ldr	x25, [sp, #96]
  41efa8:	b	41ed40 <_obstack_memory_used@@Base+0x7f58>
  41efac:	ldr	w0, [sp, #128]
  41efb0:	cmp	w0, #0x0
  41efb4:	ccmp	w0, #0x3, #0x4, ne  // ne = any
  41efb8:	b.ne	41e338 <_obstack_memory_used@@Base+0x7550>  // b.any
  41efbc:	b	41e33c <_obstack_memory_used@@Base+0x7554>
  41efc0:	ldr	x0, [sp, #200]
  41efc4:	bl	4022c0 <strlen@plt>
  41efc8:	cmp	x0, #0x1
  41efcc:	b.ls	41e3c0 <_obstack_memory_used@@Base+0x75d8>  // b.plast
  41efd0:	mov	w0, #0x3                   	// #3
  41efd4:	b	41ef6c <_obstack_memory_used@@Base+0x8184>
  41efd8:	ldp	x21, x22, [sp, #32]
  41efdc:	b	41ef08 <_obstack_memory_used@@Base+0x8120>
  41efe0:	stp	x29, x30, [sp, #-96]!
  41efe4:	mov	x29, sp
  41efe8:	stp	x19, x20, [sp, #16]
  41efec:	stp	x21, x22, [sp, #32]
  41eff0:	stp	x23, x24, [sp, #48]
  41eff4:	stp	x25, x26, [sp, #64]
  41eff8:	stp	x27, x28, [sp, #80]
  41effc:	mov	x26, x0
  41f000:	mov	x25, x1
  41f004:	mov	x22, x2
  41f008:	mov	x27, x3
  41f00c:	mov	x23, x4
  41f010:	mov	x21, x5
  41f014:	ldr	x28, [x1]
  41f018:	bl	41dd3c <_obstack_memory_used@@Base+0x6f54>
  41f01c:	mov	x20, x0
  41f020:	ldr	w0, [x21]
  41f024:	cmp	w0, #0x0
  41f028:	ccmp	x20, #0x0, #0x0, ne  // ne = any
  41f02c:	b.eq	41f144 <_obstack_memory_used@@Base+0x835c>  // b.none
  41f030:	ldrb	w1, [x22, #8]
  41f034:	and	w0, w1, #0xfffffff7
  41f038:	and	w0, w0, #0xff
  41f03c:	cmp	w0, #0x2
  41f040:	b.ne	41f09c <_obstack_memory_used@@Base+0x82b4>  // b.any
  41f044:	b	41f124 <_obstack_memory_used@@Base+0x833c>
  41f048:	cbz	x20, 41f124 <_obstack_memory_used@@Base+0x833c>
  41f04c:	mov	x2, #0x0                   	// #0
  41f050:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2218>
  41f054:	add	x1, x1, #0xaf0
  41f058:	mov	x0, x20
  41f05c:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41f060:	mov	x20, #0x0                   	// #0
  41f064:	b	41f124 <_obstack_memory_used@@Base+0x833c>
  41f068:	mov	w3, #0x10                  	// #16
  41f06c:	mov	x2, x19
  41f070:	mov	x1, x20
  41f074:	mov	x0, x28
  41f078:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41f07c:	mov	x24, x0
  41f080:	cbz	x0, 41f0f0 <_obstack_memory_used@@Base+0x8308>
  41f084:	mov	x20, x0
  41f088:	ldrb	w1, [x22, #8]
  41f08c:	and	w0, w1, #0xfffffff7
  41f090:	and	w0, w0, #0xff
  41f094:	cmp	w0, #0x2
  41f098:	b.eq	41f124 <_obstack_memory_used@@Base+0x833c>  // b.none
  41f09c:	cmp	x23, #0x0
  41f0a0:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  41f0a4:	b.eq	41f124 <_obstack_memory_used@@Base+0x833c>  // b.none
  41f0a8:	mov	x5, x21
  41f0ac:	mov	x4, x23
  41f0b0:	mov	x3, x27
  41f0b4:	mov	x2, x22
  41f0b8:	mov	x1, x25
  41f0bc:	mov	x0, x26
  41f0c0:	bl	41dd3c <_obstack_memory_used@@Base+0x6f54>
  41f0c4:	mov	x19, x0
  41f0c8:	ldr	w0, [x21]
  41f0cc:	cmp	w0, #0x0
  41f0d0:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  41f0d4:	b.eq	41f048 <_obstack_memory_used@@Base+0x8260>  // b.none
  41f0d8:	cmp	x20, #0x0
  41f0dc:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  41f0e0:	b.ne	41f068 <_obstack_memory_used@@Base+0x8280>  // b.any
  41f0e4:	cmp	x20, #0x0
  41f0e8:	csel	x20, x20, x19, ne  // ne = any
  41f0ec:	b	41f088 <_obstack_memory_used@@Base+0x82a0>
  41f0f0:	adrp	x22, 419000 <_obstack_memory_used@@Base+0x2218>
  41f0f4:	add	x22, x22, #0xaf0
  41f0f8:	mov	x2, #0x0                   	// #0
  41f0fc:	mov	x1, x22
  41f100:	mov	x0, x19
  41f104:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41f108:	mov	x2, #0x0                   	// #0
  41f10c:	mov	x1, x22
  41f110:	mov	x0, x20
  41f114:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41f118:	mov	w0, #0xc                   	// #12
  41f11c:	str	w0, [x21]
  41f120:	mov	x20, x24
  41f124:	mov	x0, x20
  41f128:	ldp	x19, x20, [sp, #16]
  41f12c:	ldp	x21, x22, [sp, #32]
  41f130:	ldp	x23, x24, [sp, #48]
  41f134:	ldp	x25, x26, [sp, #64]
  41f138:	ldp	x27, x28, [sp, #80]
  41f13c:	ldp	x29, x30, [sp], #96
  41f140:	ret
  41f144:	mov	x20, #0x0                   	// #0
  41f148:	b	41f124 <_obstack_memory_used@@Base+0x833c>
  41f14c:	stp	x29, x30, [sp, #-112]!
  41f150:	mov	x29, sp
  41f154:	stp	x19, x20, [sp, #16]
  41f158:	stp	x21, x22, [sp, #32]
  41f15c:	stp	x23, x24, [sp, #48]
  41f160:	stp	x25, x26, [sp, #64]
  41f164:	stp	x27, x28, [sp, #80]
  41f168:	mov	x22, x0
  41f16c:	str	x1, [sp, #96]
  41f170:	mov	x20, x2
  41f174:	mov	x25, x3
  41f178:	str	x3, [sp, #104]
  41f17c:	mov	x24, x4
  41f180:	mov	x23, x5
  41f184:	ldr	x21, [x1]
  41f188:	ldr	x28, [x21, #168]
  41f18c:	bl	41efe0 <_obstack_memory_used@@Base+0x81f8>
  41f190:	mov	x19, x0
  41f194:	ldr	w0, [x23]
  41f198:	cmp	w0, #0x0
  41f19c:	ccmp	x19, #0x0, #0x0, ne  // ne = any
  41f1a0:	b.eq	41f2a0 <_obstack_memory_used@@Base+0x84b8>  // b.none
  41f1a4:	orr	x25, x25, #0x800000
  41f1a8:	mov	w26, #0xa                   	// #10
  41f1ac:	b	41f1ec <_obstack_memory_used@@Base+0x8404>
  41f1b0:	cbz	x19, 41f280 <_obstack_memory_used@@Base+0x8498>
  41f1b4:	mov	x2, #0x0                   	// #0
  41f1b8:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2218>
  41f1bc:	add	x1, x1, #0xaf0
  41f1c0:	mov	x0, x19
  41f1c4:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  41f1c8:	mov	x19, #0x0                   	// #0
  41f1cc:	b	41f280 <_obstack_memory_used@@Base+0x8498>
  41f1d0:	mov	x2, #0x0                   	// #0
  41f1d4:	mov	w3, w26
  41f1d8:	mov	x1, x19
  41f1dc:	mov	x0, x21
  41f1e0:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  41f1e4:	mov	x19, x0
  41f1e8:	cbz	x0, 41f278 <_obstack_memory_used@@Base+0x8490>
  41f1ec:	ldrb	w0, [x20, #8]
  41f1f0:	cmp	w0, #0xa
  41f1f4:	b.ne	41f280 <_obstack_memory_used@@Base+0x8498>  // b.any
  41f1f8:	mov	x2, x25
  41f1fc:	mov	x1, x22
  41f200:	mov	x0, x20
  41f204:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  41f208:	ldrb	w1, [x20, #8]
  41f20c:	and	w0, w1, #0xfffffff7
  41f210:	and	w0, w0, #0xff
  41f214:	cmp	w0, #0x2
  41f218:	b.eq	41f1d0 <_obstack_memory_used@@Base+0x83e8>  // b.none
  41f21c:	cmp	x24, #0x0
  41f220:	ccmp	w1, #0x9, #0x0, ne  // ne = any
  41f224:	b.eq	41f270 <_obstack_memory_used@@Base+0x8488>  // b.none
  41f228:	ldr	x27, [x21, #168]
  41f22c:	str	x28, [x21, #168]
  41f230:	mov	x5, x23
  41f234:	mov	x4, x24
  41f238:	ldr	x3, [sp, #104]
  41f23c:	mov	x2, x20
  41f240:	ldr	x1, [sp, #96]
  41f244:	mov	x0, x22
  41f248:	bl	41efe0 <_obstack_memory_used@@Base+0x81f8>
  41f24c:	mov	x2, x0
  41f250:	ldr	w0, [x23]
  41f254:	cmp	w0, #0x0
  41f258:	ccmp	x2, #0x0, #0x0, ne  // ne = any
  41f25c:	b.eq	41f1b0 <_obstack_memory_used@@Base+0x83c8>  // b.none
  41f260:	ldr	x0, [x21, #168]
  41f264:	orr	x27, x0, x27
  41f268:	str	x27, [x21, #168]
  41f26c:	b	41f1d4 <_obstack_memory_used@@Base+0x83ec>
  41f270:	mov	x2, #0x0                   	// #0
  41f274:	b	41f1d4 <_obstack_memory_used@@Base+0x83ec>
  41f278:	mov	w0, #0xc                   	// #12
  41f27c:	str	w0, [x23]
  41f280:	mov	x0, x19
  41f284:	ldp	x19, x20, [sp, #16]
  41f288:	ldp	x21, x22, [sp, #32]
  41f28c:	ldp	x23, x24, [sp, #48]
  41f290:	ldp	x25, x26, [sp, #64]
  41f294:	ldp	x27, x28, [sp, #80]
  41f298:	ldp	x29, x30, [sp], #112
  41f29c:	ret
  41f2a0:	mov	x19, #0x0                   	// #0
  41f2a4:	b	41f280 <_obstack_memory_used@@Base+0x8498>
  41f2a8:	stp	x29, x30, [sp, #-80]!
  41f2ac:	mov	x29, sp
  41f2b0:	stp	x19, x20, [sp, #16]
  41f2b4:	stp	x21, x22, [sp, #32]
  41f2b8:	stp	x23, x24, [sp, #48]
  41f2bc:	mov	x23, x0
  41f2c0:	mov	x22, x1
  41f2c4:	ldr	x1, [x2, #8]
  41f2c8:	cbz	x1, 41f328 <_obstack_memory_used@@Base+0x8540>
  41f2cc:	stp	x25, x26, [sp, #64]
  41f2d0:	mov	x25, x2
  41f2d4:	mov	x21, x1
  41f2d8:	cmp	x1, #0x0
  41f2dc:	b.le	41f2f8 <_obstack_memory_used@@Base+0x8510>
  41f2e0:	ldr	x3, [x2, #16]
  41f2e4:	add	x1, x3, x1, lsl #3
  41f2e8:	ldr	x0, [x3], #8
  41f2ec:	add	x21, x21, x0
  41f2f0:	cmp	x3, x1
  41f2f4:	b.ne	41f2e8 <_obstack_memory_used@@Base+0x8500>  // b.any
  41f2f8:	ldr	x0, [x22, #136]
  41f2fc:	and	x0, x21, x0
  41f300:	add	x0, x0, x0, lsl #1
  41f304:	lsl	x0, x0, #3
  41f308:	ldr	x1, [x22, #64]
  41f30c:	add	x2, x1, x0
  41f310:	ldr	x24, [x1, x0]
  41f314:	cmp	x24, #0x0
  41f318:	b.le	41f36c <_obstack_memory_used@@Base+0x8584>
  41f31c:	ldr	x26, [x2, #16]
  41f320:	mov	x20, #0x0                   	// #0
  41f324:	b	41f340 <_obstack_memory_used@@Base+0x8558>
  41f328:	str	wzr, [x0]
  41f32c:	mov	x19, #0x0                   	// #0
  41f330:	b	41f4a0 <_obstack_memory_used@@Base+0x86b8>
  41f334:	add	x20, x20, #0x1
  41f338:	cmp	x24, x20
  41f33c:	b.eq	41f36c <_obstack_memory_used@@Base+0x8584>  // b.none
  41f340:	ldr	x19, [x26, x20, lsl #3]
  41f344:	ldr	x0, [x19]
  41f348:	cmp	x21, x0
  41f34c:	b.ne	41f334 <_obstack_memory_used@@Base+0x854c>  // b.any
  41f350:	mov	x1, x25
  41f354:	add	x0, x19, #0x8
  41f358:	bl	416ee4 <_obstack_memory_used@@Base+0xfc>
  41f35c:	and	w0, w0, #0xff
  41f360:	cbz	w0, 41f334 <_obstack_memory_used@@Base+0x854c>
  41f364:	ldp	x25, x26, [sp, #64]
  41f368:	b	41f4a0 <_obstack_memory_used@@Base+0x86b8>
  41f36c:	mov	x1, #0x1                   	// #1
  41f370:	mov	x0, #0x70                  	// #112
  41f374:	bl	4024d0 <calloc@plt>
  41f378:	mov	x19, x0
  41f37c:	cbz	x0, 41f3bc <_obstack_memory_used@@Base+0x85d4>
  41f380:	add	x20, x0, #0x8
  41f384:	mov	x1, x25
  41f388:	mov	x0, x20
  41f38c:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41f390:	cbnz	w0, 41f3b4 <_obstack_memory_used@@Base+0x85cc>
  41f394:	str	x20, [x19, #80]
  41f398:	ldr	x6, [x25, #8]
  41f39c:	cmp	x6, #0x0
  41f3a0:	b.le	41f488 <_obstack_memory_used@@Base+0x86a0>
  41f3a4:	ldr	x7, [x22]
  41f3a8:	ldr	x0, [x25, #16]
  41f3ac:	add	x6, x0, x6, lsl #3
  41f3b0:	b	41f420 <_obstack_memory_used@@Base+0x8638>
  41f3b4:	mov	x0, x19
  41f3b8:	bl	402660 <free@plt>
  41f3bc:	mov	w0, #0xc                   	// #12
  41f3c0:	str	w0, [x23]
  41f3c4:	mov	x19, #0x0                   	// #0
  41f3c8:	ldp	x25, x26, [sp, #64]
  41f3cc:	b	41f4a0 <_obstack_memory_used@@Base+0x86b8>
  41f3d0:	ldr	w1, [x2, #8]
  41f3d4:	tst	w1, #0x3ff00
  41f3d8:	b.eq	41f414 <_obstack_memory_used@@Base+0x862c>  // b.none
  41f3dc:	ldrb	w1, [x19, #104]
  41f3e0:	ubfx	x3, x1, #5, #1
  41f3e4:	ldrb	w4, [x2, #10]
  41f3e8:	ubfx	x4, x4, #4, #1
  41f3ec:	orr	w3, w3, w4
  41f3f0:	bfi	w1, w3, #5, #1
  41f3f4:	strb	w1, [x19, #104]
  41f3f8:	ldr	w1, [x2, #8]
  41f3fc:	tst	w1, #0x3ff00
  41f400:	b.eq	41f414 <_obstack_memory_used@@Base+0x862c>  // b.none
  41f404:	b	41f478 <_obstack_memory_used@@Base+0x8690>
  41f408:	and	x1, x1, #0xff
  41f40c:	orr	w1, w1, #0x10
  41f410:	strb	w1, [x19, #104]
  41f414:	add	x0, x0, #0x8
  41f418:	cmp	x6, x0
  41f41c:	b.eq	41f488 <_obstack_memory_used@@Base+0x86a0>  // b.none
  41f420:	ldr	x2, [x0]
  41f424:	add	x2, x7, x2, lsl #4
  41f428:	ldrb	w3, [x2, #8]
  41f42c:	cmp	w3, #0x1
  41f430:	b.eq	41f3d0 <_obstack_memory_used@@Base+0x85e8>  // b.none
  41f434:	ldrb	w1, [x19, #104]
  41f438:	ubfx	x4, x1, #5, #1
  41f43c:	ldrb	w5, [x2, #10]
  41f440:	ubfx	x5, x5, #4, #1
  41f444:	orr	w4, w4, w5
  41f448:	bfi	w1, w4, #5, #1
  41f44c:	strb	w1, [x19, #104]
  41f450:	cmp	w3, #0x2
  41f454:	b.eq	41f408 <_obstack_memory_used@@Base+0x8620>  // b.none
  41f458:	cmp	w3, #0x4
  41f45c:	b.ne	41f470 <_obstack_memory_used@@Base+0x8688>  // b.any
  41f460:	ldrb	w1, [x19, #104]
  41f464:	orr	w1, w1, #0x40
  41f468:	strb	w1, [x19, #104]
  41f46c:	b	41f414 <_obstack_memory_used@@Base+0x862c>
  41f470:	cmp	w3, #0xc
  41f474:	b.ne	41f3f8 <_obstack_memory_used@@Base+0x8610>  // b.any
  41f478:	ldrb	w1, [x19, #104]
  41f47c:	orr	w1, w1, #0xffffff80
  41f480:	strb	w1, [x19, #104]
  41f484:	b	41f414 <_obstack_memory_used@@Base+0x862c>
  41f488:	mov	x2, x21
  41f48c:	mov	x1, x19
  41f490:	mov	x0, x22
  41f494:	bl	4181a0 <_obstack_memory_used@@Base+0x13b8>
  41f498:	cbnz	w0, 41f4b8 <_obstack_memory_used@@Base+0x86d0>
  41f49c:	ldp	x25, x26, [sp, #64]
  41f4a0:	mov	x0, x19
  41f4a4:	ldp	x19, x20, [sp, #16]
  41f4a8:	ldp	x21, x22, [sp, #32]
  41f4ac:	ldp	x23, x24, [sp, #48]
  41f4b0:	ldp	x29, x30, [sp], #80
  41f4b4:	ret
  41f4b8:	mov	x0, x19
  41f4bc:	bl	41a390 <_obstack_memory_used@@Base+0x35a8>
  41f4c0:	b	41f3bc <_obstack_memory_used@@Base+0x85d4>
  41f4c4:	cmp	x3, #0x0
  41f4c8:	b.le	41f574 <_obstack_memory_used@@Base+0x878c>
  41f4cc:	stp	x29, x30, [sp, #-96]!
  41f4d0:	mov	x29, sp
  41f4d4:	stp	x19, x20, [sp, #16]
  41f4d8:	stp	x21, x22, [sp, #32]
  41f4dc:	stp	x23, x24, [sp, #48]
  41f4e0:	mov	x24, x0
  41f4e4:	mov	x20, x1
  41f4e8:	mov	x23, x2
  41f4ec:	mov	x21, x3
  41f4f0:	mov	x19, #0x0                   	// #0
  41f4f4:	b	41f50c <_obstack_memory_used@@Base+0x8724>
  41f4f8:	ldr	x0, [x23, x19, lsl #3]
  41f4fc:	str	x0, [x20, x19, lsl #3]
  41f500:	add	x19, x19, #0x1
  41f504:	cmp	x21, x19
  41f508:	b.eq	41f55c <_obstack_memory_used@@Base+0x8774>  // b.none
  41f50c:	ldr	x1, [x20, x19, lsl #3]
  41f510:	cbz	x1, 41f4f8 <_obstack_memory_used@@Base+0x8710>
  41f514:	ldr	x2, [x23, x19, lsl #3]
  41f518:	cbz	x2, 41f500 <_obstack_memory_used@@Base+0x8718>
  41f51c:	add	x2, x2, #0x8
  41f520:	add	x1, x1, #0x8
  41f524:	add	x0, sp, #0x40
  41f528:	bl	418f04 <_obstack_memory_used@@Base+0x211c>
  41f52c:	str	w0, [sp, #92]
  41f530:	cbnz	w0, 41f560 <_obstack_memory_used@@Base+0x8778>
  41f534:	add	x2, sp, #0x40
  41f538:	mov	x1, x24
  41f53c:	add	x0, sp, #0x5c
  41f540:	bl	41f2a8 <_obstack_memory_used@@Base+0x84c0>
  41f544:	str	x0, [x20, x19, lsl #3]
  41f548:	ldr	x0, [sp, #80]
  41f54c:	bl	402660 <free@plt>
  41f550:	ldr	w0, [sp, #92]
  41f554:	cbz	w0, 41f500 <_obstack_memory_used@@Base+0x8718>
  41f558:	b	41f560 <_obstack_memory_used@@Base+0x8778>
  41f55c:	mov	w0, #0x0                   	// #0
  41f560:	ldp	x19, x20, [sp, #16]
  41f564:	ldp	x21, x22, [sp, #32]
  41f568:	ldp	x23, x24, [sp, #48]
  41f56c:	ldp	x29, x30, [sp], #96
  41f570:	ret
  41f574:	mov	w0, #0x0                   	// #0
  41f578:	ret
  41f57c:	stp	x29, x30, [sp, #-144]!
  41f580:	mov	x29, sp
  41f584:	stp	x21, x22, [sp, #32]
  41f588:	stp	x23, x24, [sp, #48]
  41f58c:	stp	x27, x28, [sp, #80]
  41f590:	mov	x24, x0
  41f594:	mov	x23, x1
  41f598:	mov	x22, x2
  41f59c:	str	x3, [sp, #104]
  41f5a0:	mov	w28, w4
  41f5a4:	mov	x1, x2
  41f5a8:	bl	417538 <_obstack_memory_used@@Base+0x750>
  41f5ac:	cmn	x0, #0x1
  41f5b0:	b.eq	41f790 <_obstack_memory_used@@Base+0x89a8>  // b.none
  41f5b4:	stp	x19, x20, [sp, #16]
  41f5b8:	stp	x25, x26, [sp, #64]
  41f5bc:	ldr	x25, [x24, #152]
  41f5c0:	add	x0, x0, x0, lsl #2
  41f5c4:	lsl	x27, x0, #3
  41f5c8:	b	41f640 <_obstack_memory_used@@Base+0x8858>
  41f5cc:	ldr	x0, [x25, #40]
  41f5d0:	add	x21, x21, x21, lsl #1
  41f5d4:	add	x21, x0, x21, lsl #3
  41f5d8:	ldr	x0, [x21, #16]
  41f5dc:	ldr	x20, [x0]
  41f5e0:	mov	x1, x20
  41f5e4:	mov	x0, x23
  41f5e8:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41f5ec:	cbnz	x0, 41f6a4 <_obstack_memory_used@@Base+0x88bc>
  41f5f0:	mov	x1, x20
  41f5f4:	add	x0, sp, #0x70
  41f5f8:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  41f5fc:	str	w0, [sp, #140]
  41f600:	mov	w3, w28
  41f604:	ldr	x2, [sp, #104]
  41f608:	add	x1, sp, #0x70
  41f60c:	mov	x0, x25
  41f610:	bl	41b12c <_obstack_memory_used@@Base+0x4344>
  41f614:	mov	w19, w0
  41f618:	add	x1, sp, #0x70
  41f61c:	mov	x0, x23
  41f620:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  41f624:	mov	w20, w0
  41f628:	ldr	x0, [sp, #128]
  41f62c:	bl	402660 <free@plt>
  41f630:	ldr	w0, [sp, #140]
  41f634:	orr	w1, w19, w20
  41f638:	orr	w1, w1, w0
  41f63c:	cbnz	w1, 41f64c <_obstack_memory_used@@Base+0x8864>
  41f640:	ldr	x19, [x24, #216]
  41f644:	add	x19, x19, x27
  41f648:	b	41f6b0 <_obstack_memory_used@@Base+0x88c8>
  41f64c:	cbnz	w0, 41f798 <_obstack_memory_used@@Base+0x89b0>
  41f650:	cmp	w19, #0x0
  41f654:	csel	w0, w19, w20, ne  // ne = any
  41f658:	ldp	x19, x20, [sp, #16]
  41f65c:	ldp	x25, x26, [sp, #64]
  41f660:	b	41f77c <_obstack_memory_used@@Base+0x8994>
  41f664:	mov	x1, x26
  41f668:	add	x0, sp, #0x70
  41f66c:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  41f670:	str	w0, [sp, #140]
  41f674:	cbnz	w0, 41f7a4 <_obstack_memory_used@@Base+0x89bc>
  41f678:	ldr	x21, [x24, #184]
  41f67c:	add	x2, sp, #0x70
  41f680:	mov	x1, x25
  41f684:	add	x0, sp, #0x8c
  41f688:	bl	41f2a8 <_obstack_memory_used@@Base+0x84c0>
  41f68c:	str	x0, [x21, x20, lsl #3]
  41f690:	ldr	x0, [sp, #128]
  41f694:	bl	402660 <free@plt>
  41f698:	ldr	x0, [x24, #184]
  41f69c:	ldr	x0, [x0, x20, lsl #3]
  41f6a0:	cbz	x0, 41f760 <_obstack_memory_used@@Base+0x8978>
  41f6a4:	add	x19, x19, #0x28
  41f6a8:	ldurb	w0, [x19, #-8]
  41f6ac:	cbz	w0, 41f774 <_obstack_memory_used@@Base+0x898c>
  41f6b0:	ldr	x21, [x19]
  41f6b4:	mov	x1, x21
  41f6b8:	mov	x0, x23
  41f6bc:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41f6c0:	cbz	x0, 41f6a4 <_obstack_memory_used@@Base+0x88bc>
  41f6c4:	ldr	x20, [x19, #24]
  41f6c8:	add	x20, x22, x20
  41f6cc:	ldr	x0, [x19, #16]
  41f6d0:	sub	x20, x20, x0
  41f6d4:	cmp	x22, x20
  41f6d8:	b.eq	41f5cc <_obstack_memory_used@@Base+0x87e4>  // b.none
  41f6dc:	ldr	x0, [x25, #24]
  41f6e0:	ldr	x26, [x0, x21, lsl #3]
  41f6e4:	ldr	x0, [x24, #184]
  41f6e8:	ldr	x21, [x0, x20, lsl #3]
  41f6ec:	cbz	x21, 41f664 <_obstack_memory_used@@Base+0x887c>
  41f6f0:	add	x21, x21, #0x8
  41f6f4:	mov	x1, x26
  41f6f8:	mov	x0, x21
  41f6fc:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41f700:	cbnz	x0, 41f6a4 <_obstack_memory_used@@Base+0x88bc>
  41f704:	mov	x1, x21
  41f708:	add	x0, sp, #0x70
  41f70c:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41f710:	str	w0, [sp, #140]
  41f714:	mov	x1, x26
  41f718:	add	x0, sp, #0x70
  41f71c:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41f720:	and	w0, w0, #0xff
  41f724:	ldr	w1, [sp, #140]
  41f728:	cmp	w1, #0x0
  41f72c:	cset	w1, ne  // ne = any
  41f730:	eor	w0, w0, #0x1
  41f734:	orr	w0, w1, w0
  41f738:	cbz	w0, 41f678 <_obstack_memory_used@@Base+0x8890>
  41f73c:	ldr	x0, [sp, #128]
  41f740:	bl	402660 <free@plt>
  41f744:	ldr	w0, [sp, #140]
  41f748:	cmp	w0, #0x0
  41f74c:	mov	w1, #0xc                   	// #12
  41f750:	csel	w0, w0, w1, ne  // ne = any
  41f754:	ldp	x19, x20, [sp, #16]
  41f758:	ldp	x25, x26, [sp, #64]
  41f75c:	b	41f77c <_obstack_memory_used@@Base+0x8994>
  41f760:	ldr	w0, [sp, #140]
  41f764:	cbz	w0, 41f6a4 <_obstack_memory_used@@Base+0x88bc>
  41f768:	ldp	x19, x20, [sp, #16]
  41f76c:	ldp	x25, x26, [sp, #64]
  41f770:	b	41f77c <_obstack_memory_used@@Base+0x8994>
  41f774:	ldp	x19, x20, [sp, #16]
  41f778:	ldp	x25, x26, [sp, #64]
  41f77c:	ldp	x21, x22, [sp, #32]
  41f780:	ldp	x23, x24, [sp, #48]
  41f784:	ldp	x27, x28, [sp, #80]
  41f788:	ldp	x29, x30, [sp], #144
  41f78c:	ret
  41f790:	mov	w0, #0x0                   	// #0
  41f794:	b	41f77c <_obstack_memory_used@@Base+0x8994>
  41f798:	ldp	x19, x20, [sp, #16]
  41f79c:	ldp	x25, x26, [sp, #64]
  41f7a0:	b	41f77c <_obstack_memory_used@@Base+0x8994>
  41f7a4:	ldp	x19, x20, [sp, #16]
  41f7a8:	ldp	x25, x26, [sp, #64]
  41f7ac:	b	41f77c <_obstack_memory_used@@Base+0x8994>
  41f7b0:	stp	x29, x30, [sp, #-240]!
  41f7b4:	mov	x29, sp
  41f7b8:	stp	x19, x20, [sp, #16]
  41f7bc:	stp	x21, x22, [sp, #32]
  41f7c0:	stp	x23, x24, [sp, #48]
  41f7c4:	stp	x27, x28, [sp, #80]
  41f7c8:	mov	x19, x0
  41f7cc:	mov	x7, x1
  41f7d0:	str	x1, [sp, #144]
  41f7d4:	mov	x20, x2
  41f7d8:	mov	x23, x3
  41f7dc:	str	x4, [sp, #168]
  41f7e0:	str	x5, [sp, #120]
  41f7e4:	str	w6, [sp, #140]
  41f7e8:	ldr	x27, [x0, #152]
  41f7ec:	str	wzr, [sp, #236]
  41f7f0:	ldr	x1, [x27]
  41f7f4:	lsl	x0, x2, #4
  41f7f8:	ldr	x0, [x1, x0]
  41f7fc:	str	x0, [sp, #128]
  41f800:	ldrsw	x22, [x19, #224]
  41f804:	add	x22, x22, x5
  41f808:	ldr	x21, [x7, #8]
  41f80c:	cmp	x22, x21
  41f810:	b.ge	41f8e4 <_obstack_memory_used@@Base+0x8afc>  // b.tcont
  41f814:	ldr	x0, [sp, #144]
  41f818:	ldr	x22, [x0]
  41f81c:	cbz	x22, 41fd00 <_obstack_memory_used@@Base+0x8f18>
  41f820:	ldr	x1, [x19, #184]
  41f824:	str	x1, [sp, #160]
  41f828:	ldr	x1, [x19, #72]
  41f82c:	str	x1, [sp, #152]
  41f830:	ldr	x21, [x0, #16]
  41f834:	str	x21, [x19, #184]
  41f838:	str	x22, [x19, #72]
  41f83c:	str	x19, [sp, #104]
  41f840:	ldr	w2, [x19, #160]
  41f844:	sub	x1, x22, #0x1
  41f848:	mov	x0, x19
  41f84c:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41f850:	mov	w24, w0
  41f854:	cmp	x22, x23
  41f858:	b.eq	41fd38 <_obstack_memory_used@@Base+0x8f50>  // b.none
  41f85c:	ldr	x21, [x21, x22, lsl #3]
  41f860:	cbz	x21, 41fd7c <_obstack_memory_used@@Base+0x8f94>
  41f864:	ldrb	w0, [x21, #104]
  41f868:	tbnz	w0, #6, 41f940 <_obstack_memory_used@@Base+0x8b58>
  41f86c:	stp	xzr, xzr, [sp, #208]
  41f870:	str	xzr, [sp, #224]
  41f874:	ldrb	w0, [x21, #104]
  41f878:	tbz	w0, #6, 41f8c8 <_obstack_memory_used@@Base+0x8ae0>
  41f87c:	ldr	x0, [sp, #216]
  41f880:	cbz	x0, 41f8a4 <_obstack_memory_used@@Base+0x8abc>
  41f884:	ldr	w4, [sp, #140]
  41f888:	ldr	x3, [sp, #128]
  41f88c:	mov	x2, x22
  41f890:	add	x1, sp, #0xd0
  41f894:	mov	x0, x19
  41f898:	bl	41f57c <_obstack_memory_used@@Base+0x8794>
  41f89c:	str	w0, [sp, #236]
  41f8a0:	cbnz	w0, 41f958 <_obstack_memory_used@@Base+0x8b70>
  41f8a4:	mov	w3, w24
  41f8a8:	add	x2, sp, #0xd0
  41f8ac:	mov	x1, x27
  41f8b0:	add	x0, sp, #0xec
  41f8b4:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  41f8b8:	mov	x21, x0
  41f8bc:	cbz	x0, 41f968 <_obstack_memory_used@@Base+0x8b80>
  41f8c0:	ldr	x0, [x19, #184]
  41f8c4:	str	x21, [x0, x22, lsl #3]
  41f8c8:	ldr	x0, [sp, #120]
  41f8cc:	cmp	x22, x0
  41f8d0:	b.ge	41fc64 <_obstack_memory_used@@Base+0x8e7c>  // b.tcont
  41f8d4:	stp	x25, x26, [sp, #64]
  41f8d8:	add	x24, x22, #0x1
  41f8dc:	str	xzr, [sp, #96]
  41f8e0:	b	41fb38 <_obstack_memory_used@@Base+0x8d50>
  41f8e4:	add	x22, x22, #0x1
  41f8e8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  41f8ec:	sub	x0, x0, x21
  41f8f0:	cmp	x0, x22
  41f8f4:	b.lt	41fcb8 <_obstack_memory_used@@Base+0x8ed0>  // b.tstop
  41f8f8:	add	x24, x21, x22
  41f8fc:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  41f900:	cmp	x24, x0
  41f904:	b.hi	41fcc0 <_obstack_memory_used@@Base+0x8ed8>  // b.pmore
  41f908:	stp	x25, x26, [sp, #64]
  41f90c:	lsl	x1, x24, #3
  41f910:	mov	x25, x7
  41f914:	ldr	x0, [x7, #16]
  41f918:	bl	402500 <realloc@plt>
  41f91c:	cbz	x0, 41fcc8 <_obstack_memory_used@@Base+0x8ee0>
  41f920:	str	x0, [x25, #16]
  41f924:	str	x24, [x25, #8]
  41f928:	lsl	x2, x22, #3
  41f92c:	mov	w1, #0x0                   	// #0
  41f930:	add	x0, x0, x21, lsl #3
  41f934:	bl	4024c0 <memset@plt>
  41f938:	ldp	x25, x26, [sp, #64]
  41f93c:	b	41f814 <_obstack_memory_used@@Base+0x8a2c>
  41f940:	add	x1, x21, #0x8
  41f944:	add	x0, sp, #0xd0
  41f948:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  41f94c:	str	w0, [sp, #236]
  41f950:	cbz	w0, 41f874 <_obstack_memory_used@@Base+0x8a8c>
  41f954:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41f958:	ldr	x0, [sp, #224]
  41f95c:	bl	402660 <free@plt>
  41f960:	ldr	w0, [sp, #236]
  41f964:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41f968:	ldr	w0, [sp, #236]
  41f96c:	cbz	w0, 41f8c0 <_obstack_memory_used@@Base+0x8ad8>
  41f970:	ldr	x0, [sp, #224]
  41f974:	bl	402660 <free@plt>
  41f978:	ldr	w0, [sp, #236]
  41f97c:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41f980:	ldr	x0, [sp, #224]
  41f984:	bl	402660 <free@plt>
  41f988:	ldr	w0, [sp, #236]
  41f98c:	ldp	x25, x26, [sp, #64]
  41f990:	ldp	x19, x20, [sp, #16]
  41f994:	ldp	x21, x22, [sp, #32]
  41f998:	ldp	x23, x24, [sp, #48]
  41f99c:	ldp	x27, x28, [sp, #80]
  41f9a0:	ldp	x29, x30, [sp], #240
  41f9a4:	ret
  41f9a8:	mov	x3, x22
  41f9ac:	ldr	x2, [sp, #104]
  41f9b0:	mov	x1, x25
  41f9b4:	mov	x0, x23
  41f9b8:	bl	41ca3c <_obstack_memory_used@@Base+0x5c54>
  41f9bc:	cmp	w0, #0x1
  41f9c0:	b.le	41fbc4 <_obstack_memory_used@@Base+0x8ddc>
  41f9c4:	ldr	x1, [x23, #24]
  41f9c8:	ldr	x28, [x1, x25, lsl #3]
  41f9cc:	add	x20, x22, w0, sxtw
  41f9d0:	ldr	x0, [x19, #184]
  41f9d4:	ldr	x1, [x0, x20, lsl #3]
  41f9d8:	str	xzr, [sp, #192]
  41f9dc:	cbz	x1, 41f9f4 <_obstack_memory_used@@Base+0x8c0c>
  41f9e0:	add	x1, x1, #0x8
  41f9e4:	add	x0, sp, #0xb8
  41f9e8:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  41f9ec:	str	w0, [sp, #180]
  41f9f0:	cbnz	w0, 41fa90 <_obstack_memory_used@@Base+0x8ca8>
  41f9f4:	mov	x1, x28
  41f9f8:	add	x0, sp, #0xb8
  41f9fc:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41fa00:	and	w0, w0, #0xff
  41fa04:	cbz	w0, 41fba0 <_obstack_memory_used@@Base+0x8db8>
  41fa08:	ldr	x28, [x19, #184]
  41fa0c:	add	x2, sp, #0xb8
  41fa10:	mov	x1, x23
  41fa14:	add	x0, sp, #0xb4
  41fa18:	bl	41f2a8 <_obstack_memory_used@@Base+0x84c0>
  41fa1c:	str	x0, [x28, x20, lsl #3]
  41fa20:	ldr	x0, [x19, #184]
  41fa24:	ldr	x0, [x0, x20, lsl #3]
  41fa28:	cbz	x0, 41fbac <_obstack_memory_used@@Base+0x8dc4>
  41fa2c:	ldr	x0, [x23, #24]
  41fa30:	ldr	x1, [x0, x25, lsl #3]
  41fa34:	add	x0, sp, #0xd0
  41fa38:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  41fa3c:	and	w0, w0, #0xff
  41fa40:	cbz	w0, 41fbcc <_obstack_memory_used@@Base+0x8de4>
  41fa44:	add	x26, x26, #0x1
  41fa48:	ldr	x0, [x21, #40]
  41fa4c:	cmp	x26, x0
  41fa50:	b.ge	41fbf0 <_obstack_memory_used@@Base+0x8e08>  // b.tcont
  41fa54:	ldr	x0, [x21, #48]
  41fa58:	ldr	x25, [x0, x26, lsl #3]
  41fa5c:	lsl	x28, x25, #4
  41fa60:	ldr	x0, [x23]
  41fa64:	add	x0, x0, x28
  41fa68:	ldrb	w0, [x0, #10]
  41fa6c:	tbnz	w0, #4, 41f9a8 <_obstack_memory_used@@Base+0x8bc0>
  41fa70:	ldr	x1, [x23]
  41fa74:	mov	x2, x22
  41fa78:	add	x1, x1, x28
  41fa7c:	mov	x0, x19
  41fa80:	bl	41aebc <_obstack_memory_used@@Base+0x40d4>
  41fa84:	and	w0, w0, #0xff
  41fa88:	cbz	w0, 41fa44 <_obstack_memory_used@@Base+0x8c5c>
  41fa8c:	b	41fa2c <_obstack_memory_used@@Base+0x8c44>
  41fa90:	ldr	x0, [sp, #200]
  41fa94:	bl	402660 <free@plt>
  41fa98:	ldr	w0, [sp, #180]
  41fa9c:	str	w0, [sp, #236]
  41faa0:	cbnz	w0, 41fbdc <_obstack_memory_used@@Base+0x8df4>
  41faa4:	mov	x20, x24
  41faa8:	ldr	x0, [sp, #216]
  41faac:	cbz	x0, 41faec <_obstack_memory_used@@Base+0x8d04>
  41fab0:	ldr	w3, [sp, #140]
  41fab4:	ldr	x2, [sp, #128]
  41fab8:	add	x1, sp, #0xd0
  41fabc:	mov	x0, x27
  41fac0:	bl	41b12c <_obstack_memory_used@@Base+0x4344>
  41fac4:	str	w0, [sp, #236]
  41fac8:	cbnz	w0, 41fc00 <_obstack_memory_used@@Base+0x8e18>
  41facc:	ldr	w4, [sp, #140]
  41fad0:	ldr	x3, [sp, #128]
  41fad4:	mov	x2, x24
  41fad8:	add	x1, sp, #0xd0
  41fadc:	mov	x0, x19
  41fae0:	bl	41f57c <_obstack_memory_used@@Base+0x8794>
  41fae4:	str	w0, [sp, #236]
  41fae8:	cbnz	w0, 41fc14 <_obstack_memory_used@@Base+0x8e2c>
  41faec:	ldr	w2, [x19, #160]
  41faf0:	mov	x1, x22
  41faf4:	ldr	x0, [sp, #104]
  41faf8:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41fafc:	mov	w3, w0
  41fb00:	add	x2, sp, #0xd0
  41fb04:	mov	x1, x27
  41fb08:	add	x0, sp, #0xec
  41fb0c:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  41fb10:	mov	x21, x0
  41fb14:	cbz	x0, 41fc28 <_obstack_memory_used@@Base+0x8e40>
  41fb18:	ldr	x0, [x19, #184]
  41fb1c:	ldr	x1, [sp, #112]
  41fb20:	str	x21, [x0, x1]
  41fb24:	str	xzr, [sp, #96]
  41fb28:	add	x24, x24, #0x1
  41fb2c:	ldr	x0, [sp, #120]
  41fb30:	cmp	x0, x20
  41fb34:	b.le	41fcac <_obstack_memory_used@@Base+0x8ec4>
  41fb38:	sub	x22, x24, #0x1
  41fb3c:	ldrsw	x0, [x19, #224]
  41fb40:	ldr	x1, [sp, #96]
  41fb44:	cmp	x1, x0
  41fb48:	b.gt	41fc60 <_obstack_memory_used@@Base+0x8e78>
  41fb4c:	str	xzr, [sp, #216]
  41fb50:	lsl	x0, x24, #3
  41fb54:	str	x0, [sp, #112]
  41fb58:	ldr	x0, [x19, #184]
  41fb5c:	ldr	x1, [x0, x24, lsl #3]
  41fb60:	cbz	x1, 41fcf4 <_obstack_memory_used@@Base+0x8f0c>
  41fb64:	add	x1, x1, #0x8
  41fb68:	add	x0, sp, #0xd0
  41fb6c:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  41fb70:	str	w0, [sp, #236]
  41fb74:	cbnz	w0, 41f980 <_obstack_memory_used@@Base+0x8b98>
  41fb78:	cbz	x21, 41faa4 <_obstack_memory_used@@Base+0x8cbc>
  41fb7c:	ldr	x23, [x19, #152]
  41fb80:	str	wzr, [sp, #180]
  41fb84:	stp	xzr, xzr, [sp, #184]
  41fb88:	str	xzr, [sp, #200]
  41fb8c:	ldr	x0, [x21, #40]
  41fb90:	cmp	x0, #0x0
  41fb94:	b.le	41fbf0 <_obstack_memory_used@@Base+0x8e08>
  41fb98:	mov	x26, #0x0                   	// #0
  41fb9c:	b	41fa54 <_obstack_memory_used@@Base+0x8c6c>
  41fba0:	ldr	x0, [sp, #200]
  41fba4:	bl	402660 <free@plt>
  41fba8:	b	41fbd4 <_obstack_memory_used@@Base+0x8dec>
  41fbac:	ldr	w0, [sp, #180]
  41fbb0:	cbz	w0, 41fa2c <_obstack_memory_used@@Base+0x8c44>
  41fbb4:	ldr	x0, [sp, #200]
  41fbb8:	bl	402660 <free@plt>
  41fbbc:	ldr	w0, [sp, #180]
  41fbc0:	b	41fa9c <_obstack_memory_used@@Base+0x8cb4>
  41fbc4:	cbz	w0, 41fa70 <_obstack_memory_used@@Base+0x8c88>
  41fbc8:	b	41fa2c <_obstack_memory_used@@Base+0x8c44>
  41fbcc:	ldr	x0, [sp, #200]
  41fbd0:	bl	402660 <free@plt>
  41fbd4:	mov	w0, #0xc                   	// #12
  41fbd8:	str	w0, [sp, #236]
  41fbdc:	ldr	x0, [sp, #224]
  41fbe0:	bl	402660 <free@plt>
  41fbe4:	ldr	w0, [sp, #236]
  41fbe8:	ldp	x25, x26, [sp, #64]
  41fbec:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fbf0:	ldr	x0, [sp, #200]
  41fbf4:	bl	402660 <free@plt>
  41fbf8:	str	wzr, [sp, #236]
  41fbfc:	b	41faa4 <_obstack_memory_used@@Base+0x8cbc>
  41fc00:	ldr	x0, [sp, #224]
  41fc04:	bl	402660 <free@plt>
  41fc08:	ldr	w0, [sp, #236]
  41fc0c:	ldp	x25, x26, [sp, #64]
  41fc10:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fc14:	ldr	x0, [sp, #224]
  41fc18:	bl	402660 <free@plt>
  41fc1c:	ldr	w0, [sp, #236]
  41fc20:	ldp	x25, x26, [sp, #64]
  41fc24:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fc28:	ldr	w0, [sp, #236]
  41fc2c:	cbnz	w0, 41fc4c <_obstack_memory_used@@Base+0x8e64>
  41fc30:	ldr	x0, [x19, #184]
  41fc34:	ldr	x1, [sp, #112]
  41fc38:	str	xzr, [x0, x1]
  41fc3c:	ldr	x0, [sp, #96]
  41fc40:	add	x0, x0, #0x1
  41fc44:	str	x0, [sp, #96]
  41fc48:	b	41fb28 <_obstack_memory_used@@Base+0x8d40>
  41fc4c:	ldr	x0, [sp, #224]
  41fc50:	bl	402660 <free@plt>
  41fc54:	ldr	w0, [sp, #236]
  41fc58:	ldp	x25, x26, [sp, #64]
  41fc5c:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fc60:	ldp	x25, x26, [sp, #64]
  41fc64:	ldr	x0, [sp, #224]
  41fc68:	bl	402660 <free@plt>
  41fc6c:	ldr	x0, [x19, #184]
  41fc70:	ldr	x1, [sp, #120]
  41fc74:	ldr	x0, [x0, x1, lsl #3]
  41fc78:	cbz	x0, 41fcd4 <_obstack_memory_used@@Base+0x8eec>
  41fc7c:	ldr	x1, [sp, #144]
  41fc80:	str	x22, [x1]
  41fc84:	ldr	x1, [sp, #160]
  41fc88:	str	x1, [x19, #184]
  41fc8c:	ldr	x1, [sp, #152]
  41fc90:	str	x1, [x19, #72]
  41fc94:	ldr	x1, [sp, #168]
  41fc98:	add	x0, x0, #0x8
  41fc9c:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  41fca0:	cmp	x0, #0x0
  41fca4:	cset	w0, eq  // eq = none
  41fca8:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fcac:	mov	x22, x20
  41fcb0:	ldp	x25, x26, [sp, #64]
  41fcb4:	b	41fc64 <_obstack_memory_used@@Base+0x8e7c>
  41fcb8:	mov	w0, #0xc                   	// #12
  41fcbc:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fcc0:	mov	w0, #0xc                   	// #12
  41fcc4:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fcc8:	mov	w0, #0xc                   	// #12
  41fccc:	ldp	x25, x26, [sp, #64]
  41fcd0:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fcd4:	ldr	x0, [sp, #144]
  41fcd8:	str	x22, [x0]
  41fcdc:	ldr	x0, [sp, #160]
  41fce0:	str	x0, [x19, #184]
  41fce4:	ldr	x0, [sp, #152]
  41fce8:	str	x0, [x19, #72]
  41fcec:	mov	w0, #0x1                   	// #1
  41fcf0:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fcf4:	cbnz	x21, 41fb7c <_obstack_memory_used@@Base+0x8d94>
  41fcf8:	mov	x20, x24
  41fcfc:	b	41faec <_obstack_memory_used@@Base+0x8d04>
  41fd00:	ldr	x0, [x19, #184]
  41fd04:	str	x0, [sp, #160]
  41fd08:	ldr	x0, [x19, #72]
  41fd0c:	str	x0, [sp, #152]
  41fd10:	ldr	x0, [sp, #144]
  41fd14:	ldr	x0, [x0, #16]
  41fd18:	str	x0, [x19, #184]
  41fd1c:	str	x23, [x19, #72]
  41fd20:	str	x19, [sp, #104]
  41fd24:	ldr	w2, [x19, #160]
  41fd28:	sub	x1, x23, #0x1
  41fd2c:	mov	x0, x19
  41fd30:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  41fd34:	mov	w24, w0
  41fd38:	mov	x1, x20
  41fd3c:	add	x0, sp, #0xd0
  41fd40:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  41fd44:	str	w0, [sp, #236]
  41fd48:	cbnz	w0, 41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fd4c:	ldr	w3, [sp, #140]
  41fd50:	ldr	x2, [sp, #128]
  41fd54:	add	x1, sp, #0xd0
  41fd58:	mov	x0, x27
  41fd5c:	bl	41b12c <_obstack_memory_used@@Base+0x4344>
  41fd60:	str	w0, [sp, #236]
  41fd64:	mov	x22, x23
  41fd68:	cbz	w0, 41f87c <_obstack_memory_used@@Base+0x8a94>
  41fd6c:	ldr	x0, [sp, #224]
  41fd70:	bl	402660 <free@plt>
  41fd74:	ldr	w0, [sp, #236]
  41fd78:	b	41f990 <_obstack_memory_used@@Base+0x8ba8>
  41fd7c:	stp	xzr, xzr, [sp, #208]
  41fd80:	str	xzr, [sp, #224]
  41fd84:	b	41f8c8 <_obstack_memory_used@@Base+0x8ae0>
  41fd88:	stp	x29, x30, [sp, #-80]!
  41fd8c:	mov	x29, sp
  41fd90:	stp	x19, x20, [sp, #16]
  41fd94:	stp	x21, x22, [sp, #32]
  41fd98:	stp	x23, x24, [sp, #48]
  41fd9c:	mov	x19, x0
  41fda0:	mov	x23, x1
  41fda4:	mov	x22, x2
  41fda8:	mov	x21, x3
  41fdac:	mov	x20, x4
  41fdb0:	mov	x1, x2
  41fdb4:	mov	w6, #0x8                   	// #8
  41fdb8:	mov	x5, x4
  41fdbc:	mov	x4, x3
  41fdc0:	ldr	x3, [x2, #8]
  41fdc4:	ldr	x2, [x1], #16
  41fdc8:	bl	41f7b0 <_obstack_memory_used@@Base+0x89c8>
  41fdcc:	cbz	w0, 41fde4 <_obstack_memory_used@@Base+0x8ffc>
  41fdd0:	ldp	x19, x20, [sp, #16]
  41fdd4:	ldp	x21, x22, [sp, #32]
  41fdd8:	ldp	x23, x24, [sp, #48]
  41fddc:	ldp	x29, x30, [sp], #80
  41fde0:	ret
  41fde4:	str	x25, [sp, #64]
  41fde8:	ldr	x25, [x23]
  41fdec:	ldr	x24, [x22, #8]
  41fdf0:	ldr	x1, [x19, #208]
  41fdf4:	ldr	x0, [x19, #200]
  41fdf8:	cmp	x0, x1
  41fdfc:	b.ge	41fee8 <_obstack_memory_used@@Base+0x9100>  // b.tcont
  41fe00:	ldr	x0, [x19, #200]
  41fe04:	cmp	x0, #0x0
  41fe08:	b.le	41fe2c <_obstack_memory_used@@Base+0x9044>
  41fe0c:	add	x0, x0, x0, lsl #2
  41fe10:	lsl	x0, x0, #3
  41fe14:	sub	x0, x0, #0x28
  41fe18:	ldr	x1, [x19, #216]
  41fe1c:	add	x0, x1, x0
  41fe20:	ldr	x1, [x0, #8]
  41fe24:	cmp	x20, x1
  41fe28:	b.eq	41ff44 <_obstack_memory_used@@Base+0x915c>  // b.none
  41fe2c:	ldr	x0, [x19, #200]
  41fe30:	ldr	x1, [x19, #216]
  41fe34:	add	x0, x0, x0, lsl #2
  41fe38:	str	x21, [x1, x0, lsl #3]
  41fe3c:	ldr	x0, [x19, #200]
  41fe40:	ldr	x1, [x19, #216]
  41fe44:	add	x0, x0, x0, lsl #2
  41fe48:	add	x0, x1, x0, lsl #3
  41fe4c:	str	x20, [x0, #8]
  41fe50:	ldr	x0, [x19, #200]
  41fe54:	ldr	x1, [x19, #216]
  41fe58:	add	x0, x0, x0, lsl #2
  41fe5c:	add	x0, x1, x0, lsl #3
  41fe60:	str	x25, [x0, #16]
  41fe64:	ldr	x0, [x19, #200]
  41fe68:	ldr	x1, [x19, #216]
  41fe6c:	add	x0, x0, x0, lsl #2
  41fe70:	add	x0, x1, x0, lsl #3
  41fe74:	str	x24, [x0, #24]
  41fe78:	ldr	x0, [x19, #200]
  41fe7c:	ldr	x1, [x19, #216]
  41fe80:	add	x0, x0, x0, lsl #2
  41fe84:	add	x0, x1, x0, lsl #3
  41fe88:	cmp	x25, x24
  41fe8c:	csetm	w1, eq  // eq = none
  41fe90:	strh	w1, [x0, #34]
  41fe94:	ldr	x1, [x19, #216]
  41fe98:	ldr	x0, [x19, #200]
  41fe9c:	add	x2, x0, #0x1
  41fea0:	str	x2, [x19, #200]
  41fea4:	add	x0, x0, x0, lsl #2
  41fea8:	add	x0, x1, x0, lsl #3
  41feac:	strb	wzr, [x0, #32]
  41feb0:	ldrsw	x1, [x19, #224]
  41feb4:	sub	x0, x24, x25
  41feb8:	cmp	x1, x0
  41febc:	b.ge	41fec8 <_obstack_memory_used@@Base+0x90e0>  // b.tcont
  41fec0:	sub	w24, w24, w25
  41fec4:	str	w24, [x19, #224]
  41fec8:	ldr	x1, [x22, #8]
  41fecc:	add	x20, x20, x1
  41fed0:	ldr	x1, [x23]
  41fed4:	sub	x1, x20, x1
  41fed8:	mov	x0, x19
  41fedc:	bl	418c3c <_obstack_memory_used@@Base+0x1e54>
  41fee0:	ldr	x25, [sp, #64]
  41fee4:	b	41fdd0 <_obstack_memory_used@@Base+0x8fe8>
  41fee8:	add	x1, x1, x1, lsl #2
  41feec:	lsl	x1, x1, #4
  41fef0:	ldr	x0, [x19, #216]
  41fef4:	bl	402500 <realloc@plt>
  41fef8:	cbz	x0, 41ff30 <_obstack_memory_used@@Base+0x9148>
  41fefc:	str	x0, [x19, #216]
  41ff00:	ldr	x2, [x19, #208]
  41ff04:	add	x2, x2, x2, lsl #2
  41ff08:	ldr	x1, [x19, #200]
  41ff0c:	add	x3, x1, x1, lsl #2
  41ff10:	lsl	x2, x2, #3
  41ff14:	mov	w1, #0x0                   	// #0
  41ff18:	add	x0, x0, x3, lsl #3
  41ff1c:	bl	4024c0 <memset@plt>
  41ff20:	ldr	x0, [x19, #208]
  41ff24:	lsl	x0, x0, #1
  41ff28:	str	x0, [x19, #208]
  41ff2c:	b	41fe00 <_obstack_memory_used@@Base+0x9018>
  41ff30:	ldr	x0, [x19, #216]
  41ff34:	bl	402660 <free@plt>
  41ff38:	mov	w0, #0xc                   	// #12
  41ff3c:	ldr	x25, [sp, #64]
  41ff40:	b	41fdd0 <_obstack_memory_used@@Base+0x8fe8>
  41ff44:	mov	w1, #0x1                   	// #1
  41ff48:	strb	w1, [x0, #32]
  41ff4c:	b	41fe2c <_obstack_memory_used@@Base+0x9044>
  41ff50:	stp	x29, x30, [sp, #-208]!
  41ff54:	mov	x29, sp
  41ff58:	stp	x19, x20, [sp, #16]
  41ff5c:	stp	x27, x28, [sp, #80]
  41ff60:	mov	x19, x0
  41ff64:	mov	x28, x1
  41ff68:	ldr	x27, [x0, #152]
  41ff6c:	ldr	x0, [x0, #72]
  41ff70:	mov	x1, x0
  41ff74:	str	x0, [sp, #104]
  41ff78:	ldr	x0, [x28, #8]
  41ff7c:	cmp	x0, #0x0
  41ff80:	b.le	4205cc <_obstack_memory_used@@Base+0x97e4>
  41ff84:	stp	x21, x22, [sp, #32]
  41ff88:	stp	x23, x24, [sp, #48]
  41ff8c:	stp	x25, x26, [sp, #64]
  41ff90:	lsl	x0, x1, #3
  41ff94:	str	x0, [sp, #128]
  41ff98:	str	xzr, [sp, #96]
  41ff9c:	b	41ffd4 <_obstack_memory_used@@Base+0x91ec>
  41ffa0:	tbz	w1, #3, 41ffa8 <_obstack_memory_used@@Base+0x91c0>
  41ffa4:	tbnz	w0, #0, 41ffb8 <_obstack_memory_used@@Base+0x91d0>
  41ffa8:	tbz	w1, #5, 41ffb0 <_obstack_memory_used@@Base+0x91c8>
  41ffac:	tbz	w0, #1, 41ffb8 <_obstack_memory_used@@Base+0x91d0>
  41ffb0:	tbz	w1, #7, 42002c <_obstack_memory_used@@Base+0x9244>
  41ffb4:	tbnz	w0, #3, 42002c <_obstack_memory_used@@Base+0x9244>
  41ffb8:	ldr	x0, [sp, #96]
  41ffbc:	add	x0, x0, #0x1
  41ffc0:	mov	x1, x0
  41ffc4:	str	x0, [sp, #96]
  41ffc8:	ldr	x0, [x28, #8]
  41ffcc:	cmp	x0, x1
  41ffd0:	b.le	4205c0 <_obstack_memory_used@@Base+0x97d8>
  41ffd4:	ldr	x0, [x28, #16]
  41ffd8:	ldr	x1, [sp, #96]
  41ffdc:	ldr	x21, [x0, x1, lsl #3]
  41ffe0:	lsl	x22, x21, #4
  41ffe4:	ldr	x20, [x27]
  41ffe8:	add	x20, x20, x22
  41ffec:	ldrb	w0, [x20, #8]
  41fff0:	cmp	w0, #0x4
  41fff4:	b.ne	41ffb8 <_obstack_memory_used@@Base+0x91d0>  // b.any
  41fff8:	ldr	w0, [x20, #8]
  41fffc:	tst	w0, #0x3ff00
  420000:	b.eq	42002c <_obstack_memory_used@@Base+0x9244>  // b.none
  420004:	ldr	w2, [x19, #160]
  420008:	ldr	x1, [sp, #104]
  42000c:	mov	x0, x19
  420010:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  420014:	ldr	w2, [x20, #8]
  420018:	ubfx	x1, x2, #8, #10
  42001c:	tbz	w2, #10, 41ffa0 <_obstack_memory_used@@Base+0x91b8>
  420020:	tbz	w0, #0, 41ffb8 <_obstack_memory_used@@Base+0x91d0>
  420024:	tbz	w1, #3, 41ffa8 <_obstack_memory_used@@Base+0x91c0>
  420028:	b	41ffb8 <_obstack_memory_used@@Base+0x91d0>
  42002c:	ldr	x20, [x19, #200]
  420030:	ldr	x1, [sp, #104]
  420034:	mov	x0, x19
  420038:	bl	417538 <_obstack_memory_used@@Base+0x750>
  42003c:	cmn	x0, #0x1
  420040:	b.eq	420068 <_obstack_memory_used@@Base+0x9280>  // b.none
  420044:	add	x0, x0, x0, lsl #2
  420048:	ldr	x1, [x19, #216]
  42004c:	add	x0, x1, x0, lsl #3
  420050:	ldr	x1, [x0]
  420054:	cmp	x21, x1
  420058:	b.eq	4203a0 <_obstack_memory_used@@Base+0x95b8>  // b.none
  42005c:	add	x0, x0, #0x28
  420060:	ldurb	w1, [x0, #-8]
  420064:	cbnz	w1, 420050 <_obstack_memory_used@@Base+0x9268>
  420068:	ldr	x0, [x19, #152]
  42006c:	str	x0, [sp, #112]
  420070:	ldr	x0, [x0]
  420074:	ldr	x0, [x0, x22]
  420078:	str	x0, [sp, #120]
  42007c:	ldr	x0, [x19, #232]
  420080:	cmp	x0, #0x0
  420084:	b.le	4203a0 <_obstack_memory_used@@Base+0x95b8>
  420088:	ldr	x0, [x19, #8]
  42008c:	mov	x1, #0x0                   	// #0
  420090:	str	x27, [sp, #152]
  420094:	str	x21, [sp, #136]
  420098:	str	x20, [sp, #160]
  42009c:	mov	x27, x0
  4200a0:	str	x28, [sp, #168]
  4200a4:	mov	x28, x1
  4200a8:	b	42018c <_obstack_memory_used@@Base+0x93a4>
  4200ac:	mov	x2, x21
  4200b0:	add	x1, x27, x26
  4200b4:	add	x0, x27, x24
  4200b8:	bl	402610 <memcmp@plt>
  4200bc:	cbnz	w0, 42016c <_obstack_memory_used@@Base+0x9384>
  4200c0:	add	x24, x24, x21
  4200c4:	ldr	x4, [sp, #104]
  4200c8:	mov	x3, x28
  4200cc:	mov	x2, x25
  4200d0:	mov	x1, x20
  4200d4:	mov	x0, x19
  4200d8:	bl	41fd88 <_obstack_memory_used@@Base+0x8fa0>
  4200dc:	ldr	x27, [x19, #8]
  4200e0:	cmp	w0, #0x1
  4200e4:	b.hi	4205fc <_obstack_memory_used@@Base+0x9814>  // b.pmore
  4200e8:	add	x22, x22, #0x1
  4200ec:	ldr	x0, [x20, #32]
  4200f0:	cmp	x22, x0
  4200f4:	b.ge	420144 <_obstack_memory_used@@Base+0x935c>  // b.tcont
  4200f8:	ldr	x0, [x20, #40]
  4200fc:	ldr	x25, [x0, x22, lsl #3]
  420100:	mov	x26, x23
  420104:	ldr	x23, [x25, #8]
  420108:	sub	x21, x23, x26
  42010c:	cmp	x21, #0x0
  420110:	b.le	4200c0 <_obstack_memory_used@@Base+0x92d8>
  420114:	add	x1, x21, x24
  420118:	ldr	x0, [x19, #48]
  42011c:	cmp	x1, x0
  420120:	b.le	4200ac <_obstack_memory_used@@Base+0x92c4>
  420124:	ldr	x0, [x19, #88]
  420128:	cmp	x1, x0
  42012c:	b.gt	42016c <_obstack_memory_used@@Base+0x9384>
  420130:	mov	x0, x19
  420134:	bl	418c3c <_obstack_memory_used@@Base+0x1e54>
  420138:	cbnz	w0, 4205e8 <_obstack_memory_used@@Base+0x9800>
  42013c:	ldr	x27, [x19, #8]
  420140:	b	4200ac <_obstack_memory_used@@Base+0x92c4>
  420144:	ldr	x28, [sp, #144]
  420148:	cmp	x22, #0x0
  42014c:	cinc	x23, x23, gt
  420150:	ldr	x0, [sp, #104]
  420154:	cmp	x0, x23
  420158:	b.lt	42017c <_obstack_memory_used@@Base+0x9394>  // b.tstop
  42015c:	mov	x25, x0
  420160:	ldr	x26, [sp, #112]
  420164:	ldr	x22, [sp, #120]
  420168:	b	4202e8 <_obstack_memory_used@@Base+0x9500>
  42016c:	ldr	x28, [sp, #144]
  420170:	ldr	x0, [x20, #32]
  420174:	cmp	x0, x22
  420178:	b.le	4201d8 <_obstack_memory_used@@Base+0x93f0>
  42017c:	add	x28, x28, #0x1
  420180:	ldr	x0, [x19, #232]
  420184:	cmp	x28, x0
  420188:	b.ge	420390 <_obstack_memory_used@@Base+0x95a8>  // b.tcont
  42018c:	ldr	x0, [x19, #248]
  420190:	ldr	x20, [x0, x28, lsl #3]
  420194:	ldr	x0, [x20, #8]
  420198:	ldr	x1, [sp, #112]
  42019c:	ldr	x1, [x1]
  4201a0:	lsl	x0, x0, #4
  4201a4:	ldr	x0, [x1, x0]
  4201a8:	ldr	x1, [sp, #120]
  4201ac:	cmp	x1, x0
  4201b0:	b.ne	42017c <_obstack_memory_used@@Base+0x9394>  // b.any
  4201b4:	ldr	x23, [x20]
  4201b8:	ldr	x0, [x20, #32]
  4201bc:	cmp	x0, #0x0
  4201c0:	b.le	4201e0 <_obstack_memory_used@@Base+0x93f8>
  4201c4:	ldr	x24, [sp, #104]
  4201c8:	mov	x22, #0x0                   	// #0
  4201cc:	str	x28, [sp, #144]
  4201d0:	ldr	x28, [sp, #136]
  4201d4:	b	4200f8 <_obstack_memory_used@@Base+0x9310>
  4201d8:	mov	x23, x26
  4201dc:	b	420148 <_obstack_memory_used@@Base+0x9360>
  4201e0:	ldr	x24, [sp, #104]
  4201e4:	b	420150 <_obstack_memory_used@@Base+0x9368>
  4201e8:	ldr	x0, [x19, #88]
  4201ec:	cmp	x0, x24
  4201f0:	b.le	42017c <_obstack_memory_used@@Base+0x9394>
  4201f4:	add	w1, w24, #0x1
  4201f8:	mov	x0, x19
  4201fc:	bl	418b58 <_obstack_memory_used@@Base+0x1d70>
  420200:	cbnz	w0, 4205e8 <_obstack_memory_used@@Base+0x9800>
  420204:	ldr	x27, [x19, #8]
  420208:	b	420304 <_obstack_memory_used@@Base+0x951c>
  42020c:	add	x0, x0, #0x1
  420210:	cmp	x4, x0
  420214:	b.eq	4202dc <_obstack_memory_used@@Base+0x94f4>  // b.none
  420218:	ldr	x21, [x5, x0, lsl #3]
  42021c:	lsl	x1, x21, #4
  420220:	add	x2, x3, x1
  420224:	ldrb	w2, [x2, #8]
  420228:	cmp	w2, #0x9
  42022c:	b.ne	42020c <_obstack_memory_used@@Base+0x9424>  // b.any
  420230:	ldr	x1, [x3, x1]
  420234:	cmp	x22, x1
  420238:	b.ne	42020c <_obstack_memory_used@@Base+0x9424>  // b.any
  42023c:	cmn	x21, #0x1
  420240:	b.eq	4202dc <_obstack_memory_used@@Base+0x94f4>  // b.none
  420244:	ldr	x0, [x20, #16]
  420248:	cbz	x0, 420348 <_obstack_memory_used@@Base+0x9560>
  42024c:	mov	w6, #0x9                   	// #9
  420250:	mov	x5, x23
  420254:	mov	x4, x21
  420258:	ldr	x3, [x20]
  42025c:	ldr	x2, [x20, #8]
  420260:	ldr	x1, [x20, #16]
  420264:	mov	x0, x19
  420268:	bl	41f7b0 <_obstack_memory_used@@Base+0x89c8>
  42026c:	cmp	w0, #0x1
  420270:	b.eq	4202dc <_obstack_memory_used@@Base+0x94f4>  // b.none
  420274:	cbnz	w0, 4205e8 <_obstack_memory_used@@Base+0x9800>
  420278:	ldr	x0, [x20, #24]
  42027c:	ldr	x1, [x20, #32]
  420280:	cmp	x1, x0
  420284:	b.eq	42036c <_obstack_memory_used@@Base+0x9584>  // b.none
  420288:	mov	x1, #0x28                  	// #40
  42028c:	mov	x0, #0x1                   	// #1
  420290:	bl	4024d0 <calloc@plt>
  420294:	mov	x2, x0
  420298:	cbz	x0, 4205e4 <_obstack_memory_used@@Base+0x97fc>
  42029c:	ldr	x1, [x20, #32]
  4202a0:	ldr	x0, [x20, #40]
  4202a4:	str	x2, [x0, x1, lsl #3]
  4202a8:	str	x21, [x2]
  4202ac:	str	x23, [x2, #8]
  4202b0:	ldr	x0, [x20, #32]
  4202b4:	add	x0, x0, #0x1
  4202b8:	str	x0, [x20, #32]
  4202bc:	mov	x4, x25
  4202c0:	ldr	x3, [sp, #136]
  4202c4:	mov	x1, x20
  4202c8:	mov	x0, x19
  4202cc:	bl	41fd88 <_obstack_memory_used@@Base+0x8fa0>
  4202d0:	ldr	x27, [x19, #8]
  4202d4:	cmp	w0, #0x1
  4202d8:	b.hi	4205fc <_obstack_memory_used@@Base+0x9814>  // b.pmore
  4202dc:	add	x23, x23, #0x1
  4202e0:	cmp	x25, x23
  4202e4:	b.lt	42017c <_obstack_memory_used@@Base+0x9394>  // b.tstop
  4202e8:	ldr	x0, [x20]
  4202ec:	sub	x0, x23, x0
  4202f0:	cmp	x0, #0x0
  4202f4:	b.le	420320 <_obstack_memory_used@@Base+0x9538>
  4202f8:	ldr	x0, [x19, #48]
  4202fc:	cmp	x0, x24
  420300:	b.le	4201e8 <_obstack_memory_used@@Base+0x9400>
  420304:	add	x1, x24, #0x1
  420308:	add	x0, x27, x23
  42030c:	ldrb	w2, [x27, x24]
  420310:	ldurb	w0, [x0, #-1]
  420314:	cmp	w2, w0
  420318:	b.ne	42017c <_obstack_memory_used@@Base+0x9394>  // b.any
  42031c:	mov	x24, x1
  420320:	ldr	x0, [x19, #184]
  420324:	ldr	x0, [x0, x23, lsl #3]
  420328:	cbz	x0, 4202dc <_obstack_memory_used@@Base+0x94f4>
  42032c:	ldr	x4, [x0, #16]
  420330:	cmp	x4, #0x0
  420334:	b.le	4202dc <_obstack_memory_used@@Base+0x94f4>
  420338:	ldr	x5, [x0, #24]
  42033c:	ldr	x3, [x26]
  420340:	mov	x0, #0x0                   	// #0
  420344:	b	420218 <_obstack_memory_used@@Base+0x9430>
  420348:	ldr	x1, [x20]
  42034c:	sub	x1, x23, x1
  420350:	add	x1, x1, #0x1
  420354:	mov	x0, #0x18                  	// #24
  420358:	bl	4024d0 <calloc@plt>
  42035c:	str	x0, [x20, #16]
  420360:	cbnz	x0, 42024c <_obstack_memory_used@@Base+0x9464>
  420364:	mov	w0, #0xc                   	// #12
  420368:	b	4205e8 <_obstack_memory_used@@Base+0x9800>
  42036c:	lsl	x0, x0, #1
  420370:	add	x27, x0, #0x1
  420374:	lsl	x1, x27, #3
  420378:	ldr	x0, [x20, #40]
  42037c:	bl	402500 <realloc@plt>
  420380:	cbz	x0, 4205e4 <_obstack_memory_used@@Base+0x97fc>
  420384:	str	x0, [x20, #40]
  420388:	str	x27, [x20, #24]
  42038c:	b	420288 <_obstack_memory_used@@Base+0x94a0>
  420390:	ldr	x27, [sp, #152]
  420394:	ldr	x21, [sp, #136]
  420398:	ldr	x20, [sp, #160]
  42039c:	ldr	x28, [sp, #168]
  4203a0:	str	wzr, [sp, #204]
  4203a4:	lsl	x0, x21, #3
  4203a8:	str	x0, [sp, #136]
  4203ac:	ldr	x0, [x19, #200]
  4203b0:	cmp	x0, x20
  4203b4:	b.le	41ffb8 <_obstack_memory_used@@Base+0x91d0>
  4203b8:	add	x0, x21, x21, lsl #1
  4203bc:	lsl	x0, x0, #3
  4203c0:	str	x0, [sp, #144]
  4203c4:	add	x22, x20, x20, lsl #2
  4203c8:	lsl	x22, x22, #3
  4203cc:	ldr	x26, [sp, #104]
  4203d0:	str	x28, [sp, #152]
  4203d4:	b	420484 <_obstack_memory_used@@Base+0x969c>
  4203d8:	ldr	x1, [x27, #24]
  4203dc:	ldr	x2, [sp, #136]
  4203e0:	ldr	x24, [x1, x2]
  4203e4:	add	x24, x24, x24, lsl #1
  4203e8:	ldr	x1, [x27, #48]
  4203ec:	add	x24, x1, x24, lsl #3
  4203f0:	b	4204d4 <_obstack_memory_used@@Base+0x96ec>
  4203f4:	ldr	w3, [sp, #120]
  4203f8:	mov	x2, x24
  4203fc:	mov	x1, x27
  420400:	add	x0, sp, #0xcc
  420404:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  420408:	str	x0, [x25, x23, lsl #3]
  42040c:	ldr	x0, [x19, #184]
  420410:	ldr	x0, [x0, x23, lsl #3]
  420414:	cbnz	x0, 42055c <_obstack_memory_used@@Base+0x9774>
  420418:	ldr	w0, [sp, #204]
  42041c:	cbz	w0, 42055c <_obstack_memory_used@@Base+0x9774>
  420420:	ldp	x21, x22, [sp, #32]
  420424:	ldp	x23, x24, [sp, #48]
  420428:	ldp	x25, x26, [sp, #64]
  42042c:	b	420444 <_obstack_memory_used@@Base+0x965c>
  420430:	ldr	x0, [sp, #192]
  420434:	bl	402660 <free@plt>
  420438:	ldp	x21, x22, [sp, #32]
  42043c:	ldp	x23, x24, [sp, #48]
  420440:	ldp	x25, x26, [sp, #64]
  420444:	ldr	w0, [sp, #204]
  420448:	ldp	x19, x20, [sp, #16]
  42044c:	ldp	x27, x28, [sp, #80]
  420450:	ldp	x29, x30, [sp], #208
  420454:	ret
  420458:	ldr	w0, [sp, #204]
  42045c:	cbz	w0, 42055c <_obstack_memory_used@@Base+0x9774>
  420460:	ldp	x21, x22, [sp, #32]
  420464:	ldp	x23, x24, [sp, #48]
  420468:	ldp	x25, x26, [sp, #64]
  42046c:	b	420444 <_obstack_memory_used@@Base+0x965c>
  420470:	add	x20, x20, #0x1
  420474:	add	x22, x22, #0x28
  420478:	ldr	x0, [x19, #200]
  42047c:	cmp	x0, x20
  420480:	b.le	4205b8 <_obstack_memory_used@@Base+0x97d0>
  420484:	ldr	x0, [x19, #216]
  420488:	add	x1, x0, x22
  42048c:	ldr	x0, [x0, x22]
  420490:	cmp	x0, x21
  420494:	b.ne	420470 <_obstack_memory_used@@Base+0x9688>  // b.any
  420498:	ldr	x0, [x1, #8]
  42049c:	cmp	x0, x26
  4204a0:	b.ne	420470 <_obstack_memory_used@@Base+0x9688>  // b.any
  4204a4:	ldr	x0, [x1, #24]
  4204a8:	ldr	x23, [x1, #16]
  4204ac:	subs	x28, x0, x23
  4204b0:	b.ne	4203d8 <_obstack_memory_used@@Base+0x95f0>  // b.any
  4204b4:	ldr	x1, [x27, #40]
  4204b8:	ldr	x2, [sp, #144]
  4204bc:	add	x1, x1, x2
  4204c0:	ldr	x1, [x1, #16]
  4204c4:	ldr	x24, [x1]
  4204c8:	add	x24, x24, x24, lsl #1
  4204cc:	ldr	x1, [x27, #48]
  4204d0:	add	x24, x1, x24, lsl #3
  4204d4:	add	x0, x0, x26
  4204d8:	sub	x23, x0, x23
  4204dc:	ldr	w2, [x19, #160]
  4204e0:	sub	x1, x23, #0x1
  4204e4:	mov	x0, x19
  4204e8:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  4204ec:	str	w0, [sp, #120]
  4204f0:	ldr	x25, [x19, #184]
  4204f4:	ldr	x0, [x25, x23, lsl #3]
  4204f8:	ldr	x1, [sp, #128]
  4204fc:	ldr	x1, [x25, x1]
  420500:	str	xzr, [sp, #112]
  420504:	cbz	x1, 420510 <_obstack_memory_used@@Base+0x9728>
  420508:	ldr	x1, [x1, #16]
  42050c:	str	x1, [sp, #112]
  420510:	cbz	x0, 4203f4 <_obstack_memory_used@@Base+0x960c>
  420514:	mov	x2, x24
  420518:	ldr	x1, [x0, #80]
  42051c:	add	x0, sp, #0xb0
  420520:	bl	418f04 <_obstack_memory_used@@Base+0x211c>
  420524:	str	w0, [sp, #204]
  420528:	cbnz	w0, 420430 <_obstack_memory_used@@Base+0x9648>
  42052c:	ldr	x25, [x19, #184]
  420530:	ldr	w3, [sp, #120]
  420534:	add	x2, sp, #0xb0
  420538:	mov	x1, x27
  42053c:	add	x0, sp, #0xcc
  420540:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  420544:	str	x0, [x25, x23, lsl #3]
  420548:	ldr	x0, [sp, #192]
  42054c:	bl	402660 <free@plt>
  420550:	ldr	x0, [x19, #184]
  420554:	ldr	x0, [x0, x23, lsl #3]
  420558:	cbz	x0, 420458 <_obstack_memory_used@@Base+0x9670>
  42055c:	cbnz	x28, 420470 <_obstack_memory_used@@Base+0x9688>
  420560:	ldr	x0, [x19, #184]
  420564:	ldr	x1, [sp, #128]
  420568:	ldr	x0, [x0, x1]
  42056c:	ldr	x0, [x0, #16]
  420570:	ldr	x1, [sp, #112]
  420574:	cmp	x0, x1
  420578:	b.le	420470 <_obstack_memory_used@@Base+0x9688>
  42057c:	mov	x2, x26
  420580:	mov	x1, x24
  420584:	mov	x0, x19
  420588:	bl	41afe8 <_obstack_memory_used@@Base+0x4200>
  42058c:	str	w0, [sp, #204]
  420590:	cbnz	w0, 4205d4 <_obstack_memory_used@@Base+0x97ec>
  420594:	mov	x1, x24
  420598:	mov	x0, x19
  42059c:	bl	41ff50 <_obstack_memory_used@@Base+0x9168>
  4205a0:	str	w0, [sp, #204]
  4205a4:	cbz	w0, 420470 <_obstack_memory_used@@Base+0x9688>
  4205a8:	ldp	x21, x22, [sp, #32]
  4205ac:	ldp	x23, x24, [sp, #48]
  4205b0:	ldp	x25, x26, [sp, #64]
  4205b4:	b	420444 <_obstack_memory_used@@Base+0x965c>
  4205b8:	ldr	x28, [sp, #152]
  4205bc:	b	41ffb8 <_obstack_memory_used@@Base+0x91d0>
  4205c0:	ldp	x21, x22, [sp, #32]
  4205c4:	ldp	x23, x24, [sp, #48]
  4205c8:	ldp	x25, x26, [sp, #64]
  4205cc:	str	wzr, [sp, #204]
  4205d0:	b	420444 <_obstack_memory_used@@Base+0x965c>
  4205d4:	ldp	x21, x22, [sp, #32]
  4205d8:	ldp	x23, x24, [sp, #48]
  4205dc:	ldp	x25, x26, [sp, #64]
  4205e0:	b	420444 <_obstack_memory_used@@Base+0x965c>
  4205e4:	mov	w0, #0xc                   	// #12
  4205e8:	str	w0, [sp, #204]
  4205ec:	ldp	x21, x22, [sp, #32]
  4205f0:	ldp	x23, x24, [sp, #48]
  4205f4:	ldp	x25, x26, [sp, #64]
  4205f8:	b	420444 <_obstack_memory_used@@Base+0x965c>
  4205fc:	str	w0, [sp, #204]
  420600:	ldp	x21, x22, [sp, #32]
  420604:	ldp	x23, x24, [sp, #48]
  420608:	ldp	x25, x26, [sp, #64]
  42060c:	b	420444 <_obstack_memory_used@@Base+0x965c>
  420610:	stp	x29, x30, [sp, #-112]!
  420614:	mov	x29, sp
  420618:	stp	x19, x20, [sp, #16]
  42061c:	stp	x21, x22, [sp, #32]
  420620:	stp	x23, x24, [sp, #48]
  420624:	mov	x23, x0
  420628:	mov	x20, x1
  42062c:	mov	x19, x2
  420630:	ldr	x22, [x1, #152]
  420634:	ldr	x21, [x1, #72]
  420638:	ldr	x1, [x1, #192]
  42063c:	cmp	x1, x21
  420640:	b.ge	420678 <_obstack_memory_used@@Base+0x9890>  // b.tcont
  420644:	ldr	x0, [x20, #184]
  420648:	str	x2, [x0, x21, lsl #3]
  42064c:	str	x21, [x20, #192]
  420650:	ldr	x0, [x22, #152]
  420654:	cmp	x0, #0x0
  420658:	ccmp	x19, #0x0, #0x4, ne  // ne = any
  42065c:	b.ne	420744 <_obstack_memory_used@@Base+0x995c>  // b.any
  420660:	mov	x0, x19
  420664:	ldp	x19, x20, [sp, #16]
  420668:	ldp	x21, x22, [sp, #32]
  42066c:	ldp	x23, x24, [sp, #48]
  420670:	ldp	x29, x30, [sp], #112
  420674:	ret
  420678:	ldr	x24, [x20, #184]
  42067c:	ldr	x0, [x24, x21, lsl #3]
  420680:	cbz	x0, 4206f4 <_obstack_memory_used@@Base+0x990c>
  420684:	ldr	x2, [x0, #80]
  420688:	cbz	x19, 4206fc <_obstack_memory_used@@Base+0x9914>
  42068c:	ldr	x24, [x19, #80]
  420690:	mov	x1, x24
  420694:	add	x0, sp, #0x58
  420698:	bl	418f04 <_obstack_memory_used@@Base+0x211c>
  42069c:	str	w0, [x23]
  4206a0:	mov	x19, #0x0                   	// #0
  4206a4:	cbnz	w0, 420660 <_obstack_memory_used@@Base+0x9878>
  4206a8:	str	x25, [sp, #64]
  4206ac:	ldr	x1, [x20, #72]
  4206b0:	ldr	w2, [x20, #160]
  4206b4:	sub	x1, x1, #0x1
  4206b8:	mov	x0, x20
  4206bc:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  4206c0:	ldr	x25, [x20, #184]
  4206c4:	mov	w3, w0
  4206c8:	add	x2, sp, #0x58
  4206cc:	mov	x1, x22
  4206d0:	mov	x0, x23
  4206d4:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  4206d8:	mov	x19, x0
  4206dc:	str	x0, [x25, x21, lsl #3]
  4206e0:	cbz	x24, 42073c <_obstack_memory_used@@Base+0x9954>
  4206e4:	ldr	x0, [sp, #104]
  4206e8:	bl	402660 <free@plt>
  4206ec:	ldr	x25, [sp, #64]
  4206f0:	b	420650 <_obstack_memory_used@@Base+0x9868>
  4206f4:	str	x2, [x24, x21, lsl #3]
  4206f8:	b	420650 <_obstack_memory_used@@Base+0x9868>
  4206fc:	ldp	x0, x1, [x2]
  420700:	stp	x0, x1, [sp, #88]
  420704:	ldr	x0, [x2, #16]
  420708:	str	x0, [sp, #104]
  42070c:	ldr	w2, [x20, #160]
  420710:	sub	x1, x21, #0x1
  420714:	mov	x0, x20
  420718:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  42071c:	mov	w3, w0
  420720:	add	x2, sp, #0x58
  420724:	mov	x1, x22
  420728:	mov	x0, x23
  42072c:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  420730:	mov	x19, x0
  420734:	str	x0, [x24, x21, lsl #3]
  420738:	b	420650 <_obstack_memory_used@@Base+0x9868>
  42073c:	ldr	x25, [sp, #64]
  420740:	b	420650 <_obstack_memory_used@@Base+0x9868>
  420744:	add	x22, x19, #0x8
  420748:	mov	x2, x21
  42074c:	mov	x1, x22
  420750:	mov	x0, x20
  420754:	bl	41afe8 <_obstack_memory_used@@Base+0x4200>
  420758:	str	w0, [x23]
  42075c:	cbnz	w0, 420788 <_obstack_memory_used@@Base+0x99a0>
  420760:	ldrb	w0, [x19, #104]
  420764:	tbz	w0, #6, 420660 <_obstack_memory_used@@Base+0x9878>
  420768:	mov	x1, x22
  42076c:	mov	x0, x20
  420770:	bl	41ff50 <_obstack_memory_used@@Base+0x9168>
  420774:	str	w0, [x23]
  420778:	cbnz	w0, 420790 <_obstack_memory_used@@Base+0x99a8>
  42077c:	ldr	x0, [x20, #184]
  420780:	ldr	x19, [x0, x21, lsl #3]
  420784:	b	420660 <_obstack_memory_used@@Base+0x9878>
  420788:	mov	x19, #0x0                   	// #0
  42078c:	b	420660 <_obstack_memory_used@@Base+0x9878>
  420790:	mov	x19, #0x0                   	// #0
  420794:	b	420660 <_obstack_memory_used@@Base+0x9878>
  420798:	stp	x29, x30, [sp, #-240]!
  42079c:	mov	x29, sp
  4207a0:	stp	x19, x20, [sp, #16]
  4207a4:	stp	x21, x22, [sp, #32]
  4207a8:	stp	x23, x24, [sp, #48]
  4207ac:	stp	x25, x26, [sp, #64]
  4207b0:	mov	x22, x0
  4207b4:	mov	x20, x1
  4207b8:	mov	x19, x2
  4207bc:	mov	x24, x3
  4207c0:	ldr	x25, [x0, #152]
  4207c4:	str	wzr, [sp, #236]
  4207c8:	lsl	x0, x2, #3
  4207cc:	str	x0, [sp, #112]
  4207d0:	ldr	x0, [x22, #184]
  4207d4:	ldr	x23, [x0, x2, lsl #3]
  4207d8:	cbz	x23, 4208b8 <_obstack_memory_used@@Base+0x9ad0>
  4207dc:	add	x23, x23, #0x8
  4207e0:	ldr	x0, [x3, #8]
  4207e4:	cbz	x0, 4208c0 <_obstack_memory_used@@Base+0x9ad8>
  4207e8:	str	wzr, [sp, #176]
  4207ec:	mov	x2, x3
  4207f0:	mov	x1, x25
  4207f4:	add	x0, sp, #0xb0
  4207f8:	bl	41f2a8 <_obstack_memory_used@@Base+0x84c0>
  4207fc:	mov	x26, x0
  420800:	ldr	w21, [sp, #176]
  420804:	cbnz	w21, 4208e4 <_obstack_memory_used@@Base+0x9afc>
  420808:	ldr	x21, [x0, #56]
  42080c:	cbnz	x21, 420870 <_obstack_memory_used@@Base+0x9a88>
  420810:	stp	x27, x28, [sp, #80]
  420814:	add	x27, x0, #0x38
  420818:	ldr	x1, [x24, #8]
  42081c:	mov	x0, x27
  420820:	bl	418164 <_obstack_memory_used@@Base+0x137c>
  420824:	str	w0, [sp, #176]
  420828:	cbnz	w0, 420dbc <_obstack_memory_used@@Base+0x9fd4>
  42082c:	ldr	x0, [x24, #8]
  420830:	cmp	x0, #0x0
  420834:	b.le	420900 <_obstack_memory_used@@Base+0x9b18>
  420838:	ldr	x0, [x24, #16]
  42083c:	ldr	x1, [x0, x21, lsl #3]
  420840:	add	x1, x1, x1, lsl #1
  420844:	ldr	x0, [x25, #56]
  420848:	add	x1, x0, x1, lsl #3
  42084c:	mov	x0, x27
  420850:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  420854:	str	w0, [sp, #176]
  420858:	cbnz	w0, 420dc8 <_obstack_memory_used@@Base+0x9fe0>
  42085c:	add	x21, x21, #0x1
  420860:	ldr	x0, [x24, #8]
  420864:	cmp	x21, x0
  420868:	b.lt	420838 <_obstack_memory_used@@Base+0x9a50>  // b.tstop
  42086c:	ldp	x27, x28, [sp, #80]
  420870:	add	x2, x26, #0x38
  420874:	mov	x1, x23
  420878:	mov	x0, x24
  42087c:	bl	4190ac <_obstack_memory_used@@Base+0x22c4>
  420880:	mov	w21, w0
  420884:	str	w0, [sp, #236]
  420888:	cbnz	w0, 4208e4 <_obstack_memory_used@@Base+0x9afc>
  42088c:	ldr	x0, [x20, #40]
  420890:	cbnz	x0, 420908 <_obstack_memory_used@@Base+0x9b20>
  420894:	ldr	x21, [x20]
  420898:	mov	x2, x24
  42089c:	mov	x1, x25
  4208a0:	add	x0, sp, #0xec
  4208a4:	bl	41f2a8 <_obstack_memory_used@@Base+0x84c0>
  4208a8:	str	x0, [x21, x19, lsl #3]
  4208ac:	ldr	w21, [sp, #236]
  4208b0:	cbz	w21, 4208d0 <_obstack_memory_used@@Base+0x9ae8>
  4208b4:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  4208b8:	ldr	x0, [x3, #8]
  4208bc:	cbnz	x0, 420b1c <_obstack_memory_used@@Base+0x9d34>
  4208c0:	ldr	x0, [x20]
  4208c4:	str	xzr, [x0, x19, lsl #3]
  4208c8:	mov	w21, #0x0                   	// #0
  4208cc:	cbz	x23, 4208e4 <_obstack_memory_used@@Base+0x9afc>
  4208d0:	ldr	x0, [x22, #184]
  4208d4:	ldr	x0, [x0, x19, lsl #3]
  4208d8:	ldrb	w0, [x0, #104]
  4208dc:	mov	w21, #0x0                   	// #0
  4208e0:	tbnz	w0, #6, 420b3c <_obstack_memory_used@@Base+0x9d54>
  4208e4:	mov	w0, w21
  4208e8:	ldp	x19, x20, [sp, #16]
  4208ec:	ldp	x21, x22, [sp, #32]
  4208f0:	ldp	x23, x24, [sp, #48]
  4208f4:	ldp	x25, x26, [sp, #64]
  4208f8:	ldp	x29, x30, [sp], #240
  4208fc:	ret
  420900:	ldp	x27, x28, [sp, #80]
  420904:	b	420870 <_obstack_memory_used@@Base+0x9a88>
  420908:	ldr	x0, [x22, #216]
  42090c:	str	x0, [sp, #120]
  420910:	ldr	x0, [x20, #40]
  420914:	cmp	x0, #0x0
  420918:	b.le	420b14 <_obstack_memory_used@@Base+0x9d2c>
  42091c:	stp	x27, x28, [sp, #80]
  420920:	mov	x27, #0x0                   	// #0
  420924:	b	4209b4 <_obstack_memory_used@@Base+0x9bcc>
  420928:	ldr	x6, [x24, #8]
  42092c:	cmp	x6, #0x0
  420930:	b.le	4209a4 <_obstack_memory_used@@Base+0x9bbc>
  420934:	ldr	x0, [x24, #16]
  420938:	add	x6, x0, x6, lsl #3
  42093c:	mov	x1, #0xffffffffffffffff    	// #-1
  420940:	str	x1, [sp, #104]
  420944:	b	420960 <_obstack_memory_used@@Base+0x9b78>
  420948:	ldr	x2, [x5, x4]
  42094c:	cmp	x28, x2
  420950:	csel	x1, x1, x3, ne  // ne = any
  420954:	add	x0, x0, #0x8
  420958:	cmp	x0, x6
  42095c:	b.eq	420998 <_obstack_memory_used@@Base+0x9bb0>  // b.none
  420960:	ldr	x3, [x0]
  420964:	lsl	x4, x3, #4
  420968:	add	x2, x5, x4
  42096c:	ldrb	w2, [x2, #8]
  420970:	cmp	w2, #0x8
  420974:	b.eq	420948 <_obstack_memory_used@@Base+0x9b60>  // b.none
  420978:	cmp	w2, #0x9
  42097c:	b.ne	420954 <_obstack_memory_used@@Base+0x9b6c>  // b.any
  420980:	ldr	x2, [x5, x4]
  420984:	cmp	x28, x2
  420988:	ldr	x2, [sp, #104]
  42098c:	csel	x2, x2, x3, ne  // ne = any
  420990:	str	x2, [sp, #104]
  420994:	b	420954 <_obstack_memory_used@@Base+0x9b6c>
  420998:	tbz	x1, #63, 420a10 <_obstack_memory_used@@Base+0x9c28>
  42099c:	ldr	x0, [sp, #104]
  4209a0:	tbz	x0, #63, 420a3c <_obstack_memory_used@@Base+0x9c54>
  4209a4:	add	x27, x27, #0x1
  4209a8:	ldr	x0, [x20, #40]
  4209ac:	cmp	x27, x0
  4209b0:	b.ge	420b10 <_obstack_memory_used@@Base+0x9d28>  // b.tcont
  4209b4:	ldr	x0, [x20, #48]
  4209b8:	ldr	x0, [x0, x27, lsl #3]
  4209bc:	add	x0, x0, x0, lsl #2
  4209c0:	ldr	x3, [sp, #120]
  4209c4:	add	x1, x3, x0, lsl #3
  4209c8:	ldr	x2, [x1, #16]
  4209cc:	cmp	x19, x2
  4209d0:	b.le	4209a4 <_obstack_memory_used@@Base+0x9bbc>
  4209d4:	ldr	x2, [x1, #8]
  4209d8:	cmp	x19, x2
  4209dc:	b.gt	4209a4 <_obstack_memory_used@@Base+0x9bbc>
  4209e0:	ldr	x5, [x25]
  4209e4:	ldr	x0, [x3, x0, lsl #3]
  4209e8:	lsl	x0, x0, #4
  4209ec:	ldr	x28, [x5, x0]
  4209f0:	ldr	x0, [x1, #24]
  4209f4:	cmp	x19, x0
  4209f8:	b.eq	420928 <_obstack_memory_used@@Base+0x9b40>  // b.none
  4209fc:	ldr	x0, [x24, #8]
  420a00:	mov	x26, #0x0                   	// #0
  420a04:	cmp	x0, #0x0
  420a08:	b.gt	420ac0 <_obstack_memory_used@@Base+0x9cd8>
  420a0c:	b	4209a4 <_obstack_memory_used@@Base+0x9bbc>
  420a10:	mov	x3, x23
  420a14:	mov	x2, x24
  420a18:	mov	x0, x25
  420a1c:	bl	41a8e0 <_obstack_memory_used@@Base+0x3af8>
  420a20:	mov	w21, w0
  420a24:	cbnz	w0, 420dd4 <_obstack_memory_used@@Base+0x9fec>
  420a28:	ldr	x0, [sp, #104]
  420a2c:	tbnz	x0, #63, 4209a4 <_obstack_memory_used@@Base+0x9bbc>
  420a30:	ldr	x0, [x24, #8]
  420a34:	cmp	x0, #0x0
  420a38:	b.le	4209a4 <_obstack_memory_used@@Base+0x9bbc>
  420a3c:	mov	x26, #0x0                   	// #0
  420a40:	b	420a54 <_obstack_memory_used@@Base+0x9c6c>
  420a44:	add	x26, x26, #0x1
  420a48:	ldr	x0, [x24, #8]
  420a4c:	cmp	x26, x0
  420a50:	b.ge	4209a4 <_obstack_memory_used@@Base+0x9bbc>  // b.tcont
  420a54:	ldr	x0, [x24, #16]
  420a58:	ldr	x21, [x0, x26, lsl #3]
  420a5c:	add	x28, x21, x21, lsl #1
  420a60:	lsl	x28, x28, #3
  420a64:	ldr	x0, [x25, #56]
  420a68:	ldr	x1, [sp, #104]
  420a6c:	add	x0, x0, x28
  420a70:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  420a74:	cbnz	x0, 420a44 <_obstack_memory_used@@Base+0x9c5c>
  420a78:	ldr	x0, [x25, #48]
  420a7c:	ldr	x1, [sp, #104]
  420a80:	add	x0, x0, x28
  420a84:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  420a88:	cbnz	x0, 420a44 <_obstack_memory_used@@Base+0x9c5c>
  420a8c:	mov	x3, x23
  420a90:	mov	x2, x24
  420a94:	mov	x1, x21
  420a98:	mov	x0, x25
  420a9c:	bl	41a8e0 <_obstack_memory_used@@Base+0x3af8>
  420aa0:	mov	w21, w0
  420aa4:	cbnz	w0, 420ddc <_obstack_memory_used@@Base+0x9ff4>
  420aa8:	sub	x26, x26, #0x1
  420aac:	b	420a44 <_obstack_memory_used@@Base+0x9c5c>
  420ab0:	add	x26, x26, #0x1
  420ab4:	ldr	x0, [x24, #8]
  420ab8:	cmp	x26, x0
  420abc:	b.ge	4209a4 <_obstack_memory_used@@Base+0x9bbc>  // b.tcont
  420ac0:	ldr	x0, [x24, #16]
  420ac4:	ldr	x1, [x0, x26, lsl #3]
  420ac8:	lsl	x2, x1, #4
  420acc:	ldr	x3, [x25]
  420ad0:	add	x0, x3, x2
  420ad4:	ldrb	w0, [x0, #8]
  420ad8:	sub	w0, w0, #0x8
  420adc:	cmp	w0, #0x1
  420ae0:	b.hi	420ab0 <_obstack_memory_used@@Base+0x9cc8>  // b.pmore
  420ae4:	ldr	x0, [x3, x2]
  420ae8:	cmp	x28, x0
  420aec:	b.ne	420ab0 <_obstack_memory_used@@Base+0x9cc8>  // b.any
  420af0:	mov	x3, x23
  420af4:	mov	x2, x24
  420af8:	mov	x0, x25
  420afc:	bl	41a8e0 <_obstack_memory_used@@Base+0x3af8>
  420b00:	mov	w21, w0
  420b04:	cbz	w0, 420ab0 <_obstack_memory_used@@Base+0x9cc8>
  420b08:	ldp	x27, x28, [sp, #80]
  420b0c:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420b10:	ldp	x27, x28, [sp, #80]
  420b14:	str	wzr, [sp, #236]
  420b18:	b	420894 <_obstack_memory_used@@Base+0x9aac>
  420b1c:	ldr	x20, [x1]
  420b20:	mov	x2, x3
  420b24:	mov	x1, x25
  420b28:	add	x0, sp, #0xec
  420b2c:	bl	41f2a8 <_obstack_memory_used@@Base+0x84c0>
  420b30:	str	x0, [x20, x19, lsl #3]
  420b34:	ldr	w21, [sp, #236]
  420b38:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420b3c:	mov	x1, x19
  420b40:	mov	x0, x22
  420b44:	bl	417538 <_obstack_memory_used@@Base+0x750>
  420b48:	mov	x1, x0
  420b4c:	str	x0, [sp, #160]
  420b50:	cmn	x0, #0x1
  420b54:	b.eq	4208e4 <_obstack_memory_used@@Base+0x9afc>  // b.none
  420b58:	stp	x27, x28, [sp, #80]
  420b5c:	ldr	x28, [x22, #152]
  420b60:	str	xzr, [sp, #176]
  420b64:	ldr	x0, [x23, #8]
  420b68:	cmp	x0, #0x0
  420b6c:	b.le	420db0 <_obstack_memory_used@@Base+0x9fc8>
  420b70:	add	x0, x1, x1, lsl #2
  420b74:	lsl	x0, x0, #3
  420b78:	str	x0, [sp, #168]
  420b7c:	mov	x27, #0x0                   	// #0
  420b80:	add	x0, x20, #0x20
  420b84:	str	x0, [sp, #144]
  420b88:	add	x0, sp, #0xd0
  420b8c:	str	x0, [sp, #136]
  420b90:	b	420bac <_obstack_memory_used@@Base+0x9dc4>
  420b94:	cmp	w1, #0x4
  420b98:	b.eq	420bdc <_obstack_memory_used@@Base+0x9df4>  // b.none
  420b9c:	add	x27, x27, #0x1
  420ba0:	ldr	x0, [x23, #8]
  420ba4:	cmp	x27, x0
  420ba8:	b.ge	420d8c <_obstack_memory_used@@Base+0x9fa4>  // b.tcont
  420bac:	ldr	x0, [x23, #16]
  420bb0:	ldr	x24, [x0, x27, lsl #3]
  420bb4:	ldr	x0, [x28]
  420bb8:	add	x0, x0, x24, lsl #4
  420bbc:	ldrb	w1, [x0, #8]
  420bc0:	ldr	x0, [x20, #16]
  420bc4:	cmp	x24, x0
  420bc8:	b.ne	420b94 <_obstack_memory_used@@Base+0x9dac>  // b.any
  420bcc:	ldr	x0, [x20, #24]
  420bd0:	cmp	x19, x0
  420bd4:	b.ne	420b94 <_obstack_memory_used@@Base+0x9dac>  // b.any
  420bd8:	b	420b9c <_obstack_memory_used@@Base+0x9db4>
  420bdc:	ldr	x21, [x22, #216]
  420be0:	ldr	x0, [sp, #168]
  420be4:	add	x21, x21, x0
  420be8:	add	x0, x24, x24, lsl #1
  420bec:	lsl	x0, x0, #3
  420bf0:	str	x0, [sp, #128]
  420bf4:	lsl	x0, x24, #3
  420bf8:	str	x0, [sp, #120]
  420bfc:	ldr	x25, [sp, #160]
  420c00:	add	x0, x19, #0x1
  420c04:	str	x0, [sp, #152]
  420c08:	b	420ca8 <_obstack_memory_used@@Base+0x9ec0>
  420c0c:	ldr	x0, [x28, #40]
  420c10:	ldr	x1, [sp, #128]
  420c14:	add	x0, x0, x1
  420c18:	ldr	x0, [x0, #16]
  420c1c:	ldr	x0, [x0]
  420c20:	str	x0, [sp, #104]
  420c24:	b	420cd8 <_obstack_memory_used@@Base+0x9ef0>
  420c28:	ldp	x0, x1, [x20]
  420c2c:	stp	x0, x1, [sp, #176]
  420c30:	ldp	x0, x1, [x20, #16]
  420c34:	stp	x0, x1, [sp, #192]
  420c38:	ldp	x0, x1, [x20, #32]
  420c3c:	stp	x0, x1, [sp, #208]
  420c40:	ldr	x0, [x20, #48]
  420c44:	str	x0, [sp, #224]
  420c48:	ldr	x1, [sp, #144]
  420c4c:	ldr	x0, [sp, #136]
  420c50:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  420c54:	mov	w21, w0
  420c58:	cbz	w0, 420d2c <_obstack_memory_used@@Base+0x9f44>
  420c5c:	b	420d98 <_obstack_memory_used@@Base+0x9fb0>
  420c60:	ldr	x0, [sp, #176]
  420c64:	ldr	x1, [sp, #112]
  420c68:	str	x26, [x0, x1]
  420c6c:	mov	x1, x25
  420c70:	ldr	x21, [sp, #136]
  420c74:	mov	x0, x21
  420c78:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  420c7c:	sub	x1, x0, #0x1
  420c80:	mov	x0, x21
  420c84:	bl	416fa0 <_obstack_memory_used@@Base+0x1b8>
  420c88:	add	x21, x25, x25, lsl #2
  420c8c:	ldr	x0, [x22, #216]
  420c90:	add	x21, x0, x21, lsl #3
  420c94:	add	x25, x25, #0x1
  420c98:	add	x1, x21, #0x28
  420c9c:	ldrb	w0, [x21, #32]
  420ca0:	cbz	w0, 420b9c <_obstack_memory_used@@Base+0x9db4>
  420ca4:	mov	x21, x1
  420ca8:	ldr	x0, [x21]
  420cac:	cmp	x24, x0
  420cb0:	b.ne	420c94 <_obstack_memory_used@@Base+0x9eac>  // b.any
  420cb4:	ldr	x0, [x21, #24]
  420cb8:	ldr	x1, [x21, #16]
  420cbc:	sub	x0, x0, x1
  420cc0:	add	x26, x19, x0
  420cc4:	cbz	x0, 420c0c <_obstack_memory_used@@Base+0x9e24>
  420cc8:	ldr	x0, [x28, #24]
  420ccc:	ldr	x1, [sp, #120]
  420cd0:	ldr	x0, [x0, x1]
  420cd4:	str	x0, [sp, #104]
  420cd8:	ldr	x0, [x20, #24]
  420cdc:	cmp	x26, x0
  420ce0:	b.gt	420c94 <_obstack_memory_used@@Base+0x9eac>
  420ce4:	ldr	x0, [x20]
  420ce8:	ldr	x0, [x0, x26, lsl #3]
  420cec:	cbz	x0, 420c94 <_obstack_memory_used@@Base+0x9eac>
  420cf0:	ldr	x1, [sp, #104]
  420cf4:	add	x0, x0, #0x8
  420cf8:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  420cfc:	cbz	x0, 420c94 <_obstack_memory_used@@Base+0x9eac>
  420d00:	mov	x5, x26
  420d04:	ldr	x4, [sp, #104]
  420d08:	mov	x3, x19
  420d0c:	mov	x2, x24
  420d10:	ldr	x1, [sp, #144]
  420d14:	mov	x0, x22
  420d18:	bl	4175b0 <_obstack_memory_used@@Base+0x7c8>
  420d1c:	and	w0, w0, #0xff
  420d20:	cbnz	w0, 420c94 <_obstack_memory_used@@Base+0x9eac>
  420d24:	ldr	x0, [sp, #176]
  420d28:	cbz	x0, 420c28 <_obstack_memory_used@@Base+0x9e40>
  420d2c:	str	x24, [sp, #192]
  420d30:	str	x19, [sp, #200]
  420d34:	mov	x1, x25
  420d38:	ldr	x0, [sp, #136]
  420d3c:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  420d40:	and	w0, w0, #0xff
  420d44:	cbz	w0, 420d94 <_obstack_memory_used@@Base+0x9fac>
  420d48:	ldr	x0, [sp, #176]
  420d4c:	ldr	x1, [sp, #112]
  420d50:	ldr	x26, [x0, x1]
  420d54:	add	x1, sp, #0xb0
  420d58:	mov	x0, x22
  420d5c:	bl	420dec <_obstack_memory_used@@Base+0xa004>
  420d60:	mov	w21, w0
  420d64:	cbnz	w0, 420d98 <_obstack_memory_used@@Base+0x9fb0>
  420d68:	ldr	x1, [x20, #8]
  420d6c:	cbz	x1, 420c60 <_obstack_memory_used@@Base+0x9e78>
  420d70:	ldr	x3, [sp, #152]
  420d74:	ldr	x2, [sp, #176]
  420d78:	mov	x0, x28
  420d7c:	bl	41f4c4 <_obstack_memory_used@@Base+0x86dc>
  420d80:	mov	w21, w0
  420d84:	cbz	w0, 420c60 <_obstack_memory_used@@Base+0x9e78>
  420d88:	b	420d98 <_obstack_memory_used@@Base+0x9fb0>
  420d8c:	mov	w21, #0x0                   	// #0
  420d90:	b	420d98 <_obstack_memory_used@@Base+0x9fb0>
  420d94:	mov	w21, #0xc                   	// #12
  420d98:	ldr	x0, [sp, #176]
  420d9c:	cbz	x0, 420de4 <_obstack_memory_used@@Base+0x9ffc>
  420da0:	ldr	x0, [sp, #224]
  420da4:	bl	402660 <free@plt>
  420da8:	ldp	x27, x28, [sp, #80]
  420dac:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420db0:	mov	w21, #0x0                   	// #0
  420db4:	ldp	x27, x28, [sp, #80]
  420db8:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420dbc:	mov	w21, #0xc                   	// #12
  420dc0:	ldp	x27, x28, [sp, #80]
  420dc4:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420dc8:	mov	w21, #0xc                   	// #12
  420dcc:	ldp	x27, x28, [sp, #80]
  420dd0:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420dd4:	ldp	x27, x28, [sp, #80]
  420dd8:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420ddc:	ldp	x27, x28, [sp, #80]
  420de0:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420de4:	ldp	x27, x28, [sp, #80]
  420de8:	b	4208e4 <_obstack_memory_used@@Base+0x9afc>
  420dec:	stp	x29, x30, [sp, #-176]!
  420df0:	mov	x29, sp
  420df4:	stp	x19, x20, [sp, #16]
  420df8:	stp	x21, x22, [sp, #32]
  420dfc:	stp	x23, x24, [sp, #48]
  420e00:	mov	x20, x0
  420e04:	mov	x23, x1
  420e08:	ldr	x19, [x1, #24]
  420e0c:	ldr	x1, [x1, #16]
  420e10:	add	x0, sp, #0x98
  420e14:	bl	417ed4 <_obstack_memory_used@@Base+0x10ec>
  420e18:	mov	w21, w0
  420e1c:	cbnz	w0, 421048 <_obstack_memory_used@@Base+0xa260>
  420e20:	add	x3, sp, #0x98
  420e24:	mov	x2, x19
  420e28:	mov	x1, x23
  420e2c:	mov	x0, x20
  420e30:	bl	420798 <_obstack_memory_used@@Base+0x99b0>
  420e34:	str	w0, [sp, #140]
  420e38:	cbnz	w0, 42102c <_obstack_memory_used@@Base+0xa244>
  420e3c:	stp	x25, x26, [sp, #64]
  420e40:	stp	x27, x28, [sp, #80]
  420e44:	mov	w27, w0
  420e48:	str	w0, [sp, #136]
  420e4c:	add	x0, x23, #0x20
  420e50:	str	x0, [sp, #128]
  420e54:	b	420fb8 <_obstack_memory_used@@Base+0xa1d0>
  420e58:	ldr	x2, [sp, #104]
  420e5c:	mov	w1, #0x0                   	// #0
  420e60:	bl	4024c0 <memset@plt>
  420e64:	ldr	x0, [sp, #168]
  420e68:	bl	402660 <free@plt>
  420e6c:	ldr	w21, [sp, #140]
  420e70:	ldp	x25, x26, [sp, #64]
  420e74:	ldp	x27, x28, [sp, #80]
  420e78:	b	421048 <_obstack_memory_used@@Base+0xa260>
  420e7c:	ldr	x0, [x23, #24]
  420e80:	str	x0, [sp, #112]
  420e84:	ldr	x0, [x20, #152]
  420e88:	mov	x3, x19
  420e8c:	mov	x2, x20
  420e90:	mov	x1, x22
  420e94:	str	x0, [sp, #120]
  420e98:	bl	41ca3c <_obstack_memory_used@@Base+0x5c54>
  420e9c:	mov	w21, w0
  420ea0:	cmp	w0, #0x0
  420ea4:	b.le	420f94 <_obstack_memory_used@@Base+0xa1ac>
  420ea8:	add	x0, x19, w0, sxtw
  420eac:	ldr	x2, [sp, #112]
  420eb0:	cmp	x2, x0
  420eb4:	b.lt	420edc <_obstack_memory_used@@Base+0xa0f4>  // b.tstop
  420eb8:	ldr	x1, [x23]
  420ebc:	ldr	x0, [x1, x0, lsl #3]
  420ec0:	cbz	x0, 420f4c <_obstack_memory_used@@Base+0xa164>
  420ec4:	ldr	x1, [sp, #120]
  420ec8:	ldr	x1, [x1, #24]
  420ecc:	ldr	x1, [x1, x22, lsl #3]
  420ed0:	add	x0, x0, #0x8
  420ed4:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  420ed8:	cbz	x0, 420f4c <_obstack_memory_used@@Base+0xa164>
  420edc:	ldr	x0, [x23, #40]
  420ee0:	cbz	x0, 420f0c <_obstack_memory_used@@Base+0xa124>
  420ee4:	ldr	x0, [x24, #24]
  420ee8:	mov	x5, x19
  420eec:	mov	x4, x22
  420ef0:	add	x3, x19, w21, sxtw
  420ef4:	ldr	x2, [x0, x22, lsl #3]
  420ef8:	ldr	x1, [sp, #128]
  420efc:	mov	x0, x20
  420f00:	bl	4175b0 <_obstack_memory_used@@Base+0x7c8>
  420f04:	and	w0, w0, #0xff
  420f08:	cbnz	w0, 420f20 <_obstack_memory_used@@Base+0xa138>
  420f0c:	mov	x1, x22
  420f10:	add	x0, sp, #0x98
  420f14:	bl	417f28 <_obstack_memory_used@@Base+0x1140>
  420f18:	and	w0, w0, #0xff
  420f1c:	cbz	w0, 421034 <_obstack_memory_used@@Base+0xa24c>
  420f20:	add	x25, x25, #0x1
  420f24:	ldr	x0, [x26, #40]
  420f28:	cmp	x25, x0
  420f2c:	b.ge	420f9c <_obstack_memory_used@@Base+0xa1b4>  // b.tcont
  420f30:	ldr	x0, [x26, #48]
  420f34:	ldr	x22, [x0, x25, lsl #3]
  420f38:	lsl	x28, x22, #4
  420f3c:	ldr	x0, [x24]
  420f40:	add	x0, x0, x28
  420f44:	ldrb	w0, [x0, #10]
  420f48:	tbnz	w0, #4, 420e7c <_obstack_memory_used@@Base+0xa094>
  420f4c:	ldr	x1, [x24]
  420f50:	mov	x2, x19
  420f54:	add	x1, x1, x28
  420f58:	mov	x0, x20
  420f5c:	bl	41aebc <_obstack_memory_used@@Base+0x40d4>
  420f60:	and	w0, w0, #0xff
  420f64:	cbz	w0, 420f20 <_obstack_memory_used@@Base+0xa138>
  420f68:	ldr	x0, [x23]
  420f6c:	ldr	x1, [sp, #104]
  420f70:	ldr	x0, [x0, x1]
  420f74:	cbz	x0, 420f20 <_obstack_memory_used@@Base+0xa138>
  420f78:	ldr	x1, [x24, #24]
  420f7c:	ldr	x1, [x1, x22, lsl #3]
  420f80:	add	x0, x0, #0x8
  420f84:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  420f88:	cbz	x0, 420f20 <_obstack_memory_used@@Base+0xa138>
  420f8c:	mov	w21, #0x1                   	// #1
  420f90:	b	420edc <_obstack_memory_used@@Base+0xa0f4>
  420f94:	cbz	w0, 420f4c <_obstack_memory_used@@Base+0xa164>
  420f98:	b	420edc <_obstack_memory_used@@Base+0xa0f4>
  420f9c:	add	x3, sp, #0x98
  420fa0:	mov	x2, x19
  420fa4:	mov	x1, x23
  420fa8:	mov	x0, x20
  420fac:	bl	420798 <_obstack_memory_used@@Base+0x99b0>
  420fb0:	mov	w21, w0
  420fb4:	cbnz	w0, 421060 <_obstack_memory_used@@Base+0xa278>
  420fb8:	cmp	x19, #0x0
  420fbc:	b.le	42101c <_obstack_memory_used@@Base+0xa234>
  420fc0:	ldr	x0, [x23]
  420fc4:	lsl	x1, x19, #3
  420fc8:	str	x1, [sp, #104]
  420fcc:	ldr	x1, [x0, x19, lsl #3]
  420fd0:	cmp	x1, #0x0
  420fd4:	ldr	w1, [sp, #136]
  420fd8:	csinc	w27, w1, w27, ne  // ne = any
  420fdc:	ldr	w1, [x20, #224]
  420fe0:	cmp	w1, w27
  420fe4:	b.lt	420e58 <_obstack_memory_used@@Base+0xa070>  // b.tstop
  420fe8:	str	xzr, [sp, #160]
  420fec:	sub	x19, x19, #0x1
  420ff0:	ldr	x0, [x20, #184]
  420ff4:	ldr	x1, [sp, #104]
  420ff8:	add	x0, x0, x1
  420ffc:	ldur	x26, [x0, #-8]
  421000:	cbz	x26, 420f9c <_obstack_memory_used@@Base+0xa1b4>
  421004:	ldr	x24, [x20, #152]
  421008:	ldr	x0, [x26, #40]
  42100c:	cmp	x0, #0x0
  421010:	b.le	420f9c <_obstack_memory_used@@Base+0xa1b4>
  421014:	mov	x25, #0x0                   	// #0
  421018:	b	420f30 <_obstack_memory_used@@Base+0xa148>
  42101c:	ldr	w21, [sp, #140]
  421020:	ldp	x25, x26, [sp, #64]
  421024:	ldp	x27, x28, [sp, #80]
  421028:	b	421040 <_obstack_memory_used@@Base+0xa258>
  42102c:	ldr	w21, [sp, #140]
  421030:	b	421040 <_obstack_memory_used@@Base+0xa258>
  421034:	mov	w21, #0xc                   	// #12
  421038:	ldp	x25, x26, [sp, #64]
  42103c:	ldp	x27, x28, [sp, #80]
  421040:	ldr	x0, [sp, #168]
  421044:	bl	402660 <free@plt>
  421048:	mov	w0, w21
  42104c:	ldp	x19, x20, [sp, #16]
  421050:	ldp	x21, x22, [sp, #32]
  421054:	ldp	x23, x24, [sp, #48]
  421058:	ldp	x29, x30, [sp], #176
  42105c:	ret
  421060:	ldp	x25, x26, [sp, #64]
  421064:	ldp	x27, x28, [sp, #80]
  421068:	b	421040 <_obstack_memory_used@@Base+0xa258>
  42106c:	sub	sp, sp, #0x250
  421070:	stp	x29, x30, [sp]
  421074:	mov	x29, sp
  421078:	stp	x19, x20, [sp, #16]
  42107c:	stp	x21, x22, [sp, #32]
  421080:	stp	x25, x26, [sp, #64]
  421084:	stp	x27, x28, [sp, #80]
  421088:	mov	x25, x0
  42108c:	str	x1, [sp, #168]
  421090:	str	x2, [sp, #152]
  421094:	mov	x19, x3
  421098:	mov	x21, x4
  42109c:	mov	x22, x5
  4210a0:	str	x6, [sp, #160]
  4210a4:	str	x7, [sp, #248]
  4210a8:	ldr	w0, [sp, #592]
  4210ac:	str	w0, [sp, #120]
  4210b0:	ldr	x27, [x25]
  4210b4:	mov	x2, #0x100                 	// #256
  4210b8:	mov	w1, #0x0                   	// #0
  4210bc:	add	x0, sp, #0x148
  4210c0:	bl	4024c0 <memset@plt>
  4210c4:	str	x27, [sp, #480]
  4210c8:	ldr	x26, [x25, #32]
  4210cc:	cbz	x26, 4210e4 <_obstack_memory_used@@Base+0xa2fc>
  4210d0:	ldrb	w0, [x25, #56]
  4210d4:	tst	x0, #0x8
  4210d8:	ccmp	x19, x21, #0x4, ne  // ne = any
  4210dc:	b.ne	4213e8 <_obstack_memory_used@@Base+0xa600>  // b.any
  4210e0:	mov	x26, #0x0                   	// #0
  4210e4:	ldr	x1, [x25, #48]
  4210e8:	ldr	x2, [sp, #160]
  4210ec:	sub	x0, x2, #0x1
  4210f0:	sub	x0, x0, x1
  4210f4:	cmp	x1, x2
  4210f8:	csel	x0, x0, xzr, cc  // cc = lo, ul, last
  4210fc:	str	x0, [sp, #208]
  421100:	ldr	x0, [x25, #16]
  421104:	cbz	x0, 421f44 <_obstack_memory_used@@Base+0xb15c>
  421108:	ldr	x0, [x27, #72]
  42110c:	cbz	x0, 421f50 <_obstack_memory_used@@Base+0xb168>
  421110:	ldr	x1, [x27, #80]
  421114:	cbz	x1, 421f5c <_obstack_memory_used@@Base+0xb174>
  421118:	ldr	x2, [x27, #88]
  42111c:	cbz	x2, 421f68 <_obstack_memory_used@@Base+0xb180>
  421120:	ldr	x3, [x27, #96]
  421124:	cbz	x3, 421f74 <_obstack_memory_used@@Base+0xb18c>
  421128:	ldr	x0, [x0, #16]
  42112c:	cbnz	x0, 421164 <_obstack_memory_used@@Base+0xa37c>
  421130:	ldr	x0, [x1, #16]
  421134:	cbnz	x0, 421164 <_obstack_memory_used@@Base+0xa37c>
  421138:	ldr	x1, [x2, #16]
  42113c:	cbz	x1, 421148 <_obstack_memory_used@@Base+0xa360>
  421140:	ldrsb	w1, [x25, #56]
  421144:	tbnz	w1, #31, 421164 <_obstack_memory_used@@Base+0xa37c>
  421148:	cmp	x19, #0x0
  42114c:	mov	w1, #0x1                   	// #1
  421150:	str	w1, [sp, #132]
  421154:	ccmp	x21, #0x0, #0x4, ne  // ne = any
  421158:	b.ne	421624 <_obstack_memory_used@@Base+0xa83c>  // b.any
  42115c:	mov	x21, x0
  421160:	mov	x19, x0
  421164:	mov	w20, #0x1                   	// #1
  421168:	ldr	x0, [sp, #160]
  42116c:	ldr	x1, [sp, #208]
  421170:	subs	x0, x0, x1
  421174:	str	x0, [sp, #200]
  421178:	b.ne	421188 <_obstack_memory_used@@Base+0xa3a0>  // b.any
  42117c:	ldr	x0, [x27, #152]
  421180:	cmp	x0, #0x0
  421184:	cset	w20, ne  // ne = any
  421188:	ldr	x5, [x25, #40]
  42118c:	str	x5, [sp, #216]
  421190:	ldr	x0, [x25, #24]
  421194:	ldr	w3, [x27, #180]
  421198:	ldr	x1, [x27, #16]
  42119c:	add	x1, x1, #0x1
  4211a0:	sxtw	x2, w3
  4211a4:	cmp	x1, x2
  4211a8:	csel	x1, x1, x2, ge  // ge = tcont
  4211ac:	ldr	x4, [sp, #152]
  4211b0:	add	x2, x4, #0x1
  4211b4:	cmp	x1, x2
  4211b8:	csel	x1, x1, x2, le
  4211bc:	ldr	x2, [sp, #168]
  4211c0:	str	x2, [sp, #328]
  4211c4:	str	x4, [sp, #416]
  4211c8:	str	x4, [sp, #408]
  4211cc:	str	x5, [sp, #448]
  4211d0:	and	x2, x0, #0x400000
  4211d4:	ubfx	w0, w0, #22, #1
  4211d8:	strb	w0, [sp, #464]
  4211dc:	orr	x0, x2, x5
  4211e0:	cmp	x0, #0x0
  4211e4:	cset	w0, ne  // ne = any
  4211e8:	strb	w0, [sp, #467]
  4211ec:	str	w3, [sp, #472]
  4211f0:	ldrb	w0, [x27, #176]
  4211f4:	ubfx	x2, x0, #2, #1
  4211f8:	strb	w2, [sp, #465]
  4211fc:	ubfx	x0, x0, #3, #1
  421200:	strb	w0, [sp, #466]
  421204:	str	x4, [sp, #432]
  421208:	str	x4, [sp, #424]
  42120c:	add	x0, sp, #0x148
  421210:	bl	417a44 <_obstack_memory_used@@Base+0xc5c>
  421214:	str	w0, [sp, #188]
  421218:	cbnz	w0, 421ea4 <_obstack_memory_used@@Base+0xb0bc>
  42121c:	stp	x23, x24, [sp, #48]
  421220:	add	x0, x27, #0xb8
  421224:	str	x0, [sp, #456]
  421228:	ldrb	w0, [x27, #176]
  42122c:	ubfx	x0, x0, #4, #1
  421230:	strb	w0, [sp, #470]
  421234:	ldrb	w0, [sp, #467]
  421238:	cbz	w0, 421fd4 <_obstack_memory_used@@Base+0xb1ec>
  42123c:	mov	x0, #0x0                   	// #0
  421240:	str	x0, [sp, #376]
  421244:	str	x0, [sp, #384]
  421248:	str	x22, [sp, #432]
  42124c:	str	x22, [sp, #424]
  421250:	ldrb	w0, [x25, #56]
  421254:	ubfx	x0, x0, #7, #1
  421258:	strb	w0, [sp, #469]
  42125c:	ldr	x0, [x27, #152]
  421260:	lsl	x22, x0, #1
  421264:	ldr	w1, [sp, #120]
  421268:	str	w1, [sp, #488]
  42126c:	mov	x1, #0xffffffffffffffff    	// #-1
  421270:	str	x1, [sp, #496]
  421274:	cmp	xzr, x0, lsl #1
  421278:	b.ge	4212b8 <_obstack_memory_used@@Base+0xa4d0>  // b.tcont
  42127c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  421280:	movk	x0, #0x666, lsl #48
  421284:	cmp	x22, x0
  421288:	b.hi	421fc4 <_obstack_memory_used@@Base+0xb1dc>  // b.pmore
  42128c:	add	x0, x22, x22, lsl #2
  421290:	lsl	x0, x0, #3
  421294:	bl	4023f0 <malloc@plt>
  421298:	mov	x23, x0
  42129c:	str	x0, [sp, #544]
  4212a0:	lsl	x0, x22, #3
  4212a4:	bl	4023f0 <malloc@plt>
  4212a8:	str	x0, [sp, #576]
  4212ac:	cmp	x23, #0x0
  4212b0:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4212b4:	b.eq	421fc4 <_obstack_memory_used@@Base+0xb1dc>  // b.none
  4212b8:	str	x22, [sp, #536]
  4212bc:	mov	w0, #0x1                   	// #1
  4212c0:	str	w0, [sp, #552]
  4212c4:	str	x22, [sp, #568]
  4212c8:	ldr	x0, [sp, #200]
  4212cc:	cmp	x0, #0x1
  4212d0:	b.ls	4213f4 <_obstack_memory_used@@Base+0xa60c>  // b.plast
  4212d4:	ldr	x0, [sp, #392]
  4212d8:	mov	x1, #0x1ffffffffffffffe    	// #2305843009213693950
  4212dc:	cmp	x0, x1
  4212e0:	b.hi	421eb0 <_obstack_memory_used@@Base+0xb0c8>  // b.pmore
  4212e4:	add	x0, x0, #0x1
  4212e8:	lsl	x0, x0, #3
  4212ec:	bl	4023f0 <malloc@plt>
  4212f0:	str	x0, [sp, #512]
  4212f4:	cbz	x0, 421ec0 <_obstack_memory_used@@Base+0xb0d8>
  4212f8:	str	x19, [sp, #584]
  4212fc:	ldr	x0, [sp, #120]
  421300:	tst	x0, #0x1
  421304:	mov	w0, #0x4                   	// #4
  421308:	mov	w1, #0x6                   	// #6
  42130c:	csel	w0, w0, w1, ne  // ne = any
  421310:	str	w0, [sp, #440]
  421314:	mov	w0, #0x1                   	// #1
  421318:	cmp	x19, x21
  42131c:	cneg	w0, w0, gt
  421320:	str	w0, [sp, #192]
  421324:	csel	x0, x19, x21, le
  421328:	str	x0, [sp, #144]
  42132c:	csel	x0, x19, x21, ge  // ge = tcont
  421330:	mov	x3, x0
  421334:	ldr	w0, [x27, #180]
  421338:	str	w0, [sp, #232]
  42133c:	mov	w1, #0x8                   	// #8
  421340:	str	w1, [sp, #184]
  421344:	cbz	x26, 421398 <_obstack_memory_used@@Base+0xa5b0>
  421348:	mov	w2, #0x4                   	// #4
  42134c:	cmp	w0, #0x1
  421350:	b.eq	421370 <_obstack_memory_used@@Base+0xa588>  // b.none
  421354:	ldr	x0, [x25, #24]
  421358:	and	x0, x0, #0x400000
  42135c:	ldr	x1, [sp, #216]
  421360:	orr	x0, x1, x0
  421364:	cmp	x0, #0x0
  421368:	ldr	w0, [sp, #188]
  42136c:	csel	w2, w0, w2, ne  // ne = any
  421370:	cmp	x19, x21
  421374:	mov	w0, #0x2                   	// #2
  421378:	ldr	w1, [sp, #188]
  42137c:	csel	w0, w1, w0, gt
  421380:	ldr	x1, [sp, #216]
  421384:	cmp	x1, #0x0
  421388:	cset	w1, ne  // ne = any
  42138c:	orr	w1, w1, w2
  421390:	orr	w0, w1, w0
  421394:	str	w0, [sp, #184]
  421398:	cmp	x19, x3
  42139c:	cset	w1, gt
  4213a0:	ldr	x0, [sp, #144]
  4213a4:	cmp	x19, x0
  4213a8:	cset	w0, lt  // lt = tstop
  4213ac:	orr	w0, w1, w0
  4213b0:	str	w0, [sp, #196]
  4213b4:	cbnz	w0, 421ed0 <_obstack_memory_used@@Base+0xb0e8>
  4213b8:	str	w20, [sp, #128]
  4213bc:	cmp	x19, x21
  4213c0:	add	x0, sp, #0x248
  4213c4:	csel	x0, x0, xzr, le
  4213c8:	str	x0, [sp, #240]
  4213cc:	cmp	x0, #0x0
  4213d0:	cset	w0, ne  // ne = any
  4213d4:	str	w0, [sp, #236]
  4213d8:	str	x27, [sp, #176]
  4213dc:	str	x25, [sp, #224]
  4213e0:	mov	x25, x3
  4213e4:	b	422064 <_obstack_memory_used@@Base+0xb27c>
  4213e8:	tst	x0, #0x1
  4213ec:	csel	x26, x26, xzr, eq  // eq = none
  4213f0:	b	4210e4 <_obstack_memory_used@@Base+0xa2fc>
  4213f4:	ldrb	w0, [x27, #176]
  4213f8:	tbz	w0, #1, 4212f8 <_obstack_memory_used@@Base+0xa510>
  4213fc:	b	4212d4 <_obstack_memory_used@@Base+0xa4ec>
  421400:	cmp	w0, #0x3
  421404:	b.gt	4214a4 <_obstack_memory_used@@Base+0xa6bc>
  421408:	ldr	w20, [sp, #188]
  42140c:	ldrsw	x21, [sp, #192]
  421410:	ldr	x23, [sp, #144]
  421414:	ldr	x22, [sp, #152]
  421418:	b	4216a8 <_obstack_memory_used@@Base+0xa8c0>
  42141c:	ldr	x0, [sp, #584]
  421420:	ldr	w2, [sp, #196]
  421424:	mov	w3, #0x1                   	// #1
  421428:	cmp	x25, x0
  42142c:	b.le	4214f0 <_obstack_memory_used@@Base+0xa708>
  421430:	ldr	x4, [sp, #216]
  421434:	ldr	x5, [sp, #168]
  421438:	ldrb	w1, [x5, x0]
  42143c:	ldrb	w1, [x4, x1]
  421440:	ldrb	w1, [x26, x1]
  421444:	cbnz	w1, 4214e8 <_obstack_memory_used@@Base+0xa700>
  421448:	add	x0, x0, #0x1
  42144c:	mov	w2, w3
  421450:	cmp	x0, x25
  421454:	b.ne	421438 <_obstack_memory_used@@Base+0xa650>  // b.any
  421458:	str	x25, [sp, #584]
  42145c:	ldr	x0, [sp, #584]
  421460:	ldr	w1, [sp, #188]
  421464:	ldr	x2, [sp, #152]
  421468:	cmp	x2, x0
  42146c:	b.le	421478 <_obstack_memory_used@@Base+0xa690>
  421470:	ldr	x1, [sp, #168]
  421474:	ldrb	w1, [x1, x0]
  421478:	sxtw	x0, w1
  42147c:	ldr	x2, [sp, #216]
  421480:	cbz	x2, 421488 <_obstack_memory_used@@Base+0xa6a0>
  421484:	ldrb	w0, [x2, w1, sxtw]
  421488:	ldrb	w0, [x26, x0]
  42148c:	cbnz	w0, 4214fc <_obstack_memory_used@@Base+0xa714>
  421490:	ldr	x27, [sp, #176]
  421494:	mov	w0, #0x1                   	// #1
  421498:	str	w0, [sp, #132]
  42149c:	ldp	x23, x24, [sp, #48]
  4214a0:	b	42160c <_obstack_memory_used@@Base+0xa824>
  4214a4:	ldr	x0, [sp, #584]
  4214a8:	ldr	x1, [sp, #144]
  4214ac:	cmp	x1, x0
  4214b0:	b.gt	4214d4 <_obstack_memory_used@@Base+0xa6ec>
  4214b4:	ldr	w3, [sp, #196]
  4214b8:	ldr	w4, [sp, #188]
  4214bc:	mov	w5, #0x1                   	// #1
  4214c0:	ldr	x6, [sp, #216]
  4214c4:	ldr	x8, [sp, #144]
  4214c8:	ldr	x9, [sp, #168]
  4214cc:	ldr	x7, [sp, #152]
  4214d0:	b	4215e4 <_obstack_memory_used@@Base+0xa7fc>
  4214d4:	ldr	x27, [sp, #176]
  4214d8:	mov	w0, #0x1                   	// #1
  4214dc:	str	w0, [sp, #132]
  4214e0:	ldp	x23, x24, [sp, #48]
  4214e4:	b	42160c <_obstack_memory_used@@Base+0xa824>
  4214e8:	cbz	w2, 4214fc <_obstack_memory_used@@Base+0xa714>
  4214ec:	str	x0, [sp, #584]
  4214f0:	ldr	x0, [sp, #584]
  4214f4:	cmp	x0, x25
  4214f8:	b.eq	421460 <_obstack_memory_used@@Base+0xa678>  // b.none
  4214fc:	ldr	w2, [sp, #120]
  421500:	ldr	x1, [sp, #584]
  421504:	add	x0, sp, #0x148
  421508:	bl	41c394 <_obstack_memory_used@@Base+0x55ac>
  42150c:	str	w0, [sp, #132]
  421510:	cbnz	w0, 421f04 <_obstack_memory_used@@Base+0xb11c>
  421514:	ldr	w0, [sp, #232]
  421518:	cmp	w0, #0x1
  42151c:	b.eq	421538 <_obstack_memory_used@@Base+0xa750>  // b.none
  421520:	ldr	x0, [sp, #376]
  421524:	cbz	x0, 421538 <_obstack_memory_used@@Base+0xa750>
  421528:	ldr	x0, [sp, #344]
  42152c:	ldr	w0, [x0]
  421530:	cmn	w0, #0x1
  421534:	b.eq	422044 <_obstack_memory_used@@Base+0xb25c>  // b.none
  421538:	str	wzr, [sp, #552]
  42153c:	str	xzr, [sp, #528]
  421540:	str	xzr, [sp, #520]
  421544:	ldr	x19, [sp, #480]
  421548:	ldr	x0, [sp, #400]
  42154c:	mov	x1, x0
  421550:	str	x0, [sp, #112]
  421554:	str	wzr, [sp, #264]
  421558:	ldr	x20, [x19, #72]
  42155c:	ldrsb	w0, [x20, #104]
  421560:	tbz	w0, #31, 4216f0 <_obstack_memory_used@@Base+0xa908>
  421564:	ldr	w2, [sp, #488]
  421568:	sub	x1, x1, #0x1
  42156c:	add	x0, sp, #0x148
  421570:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  421574:	tbnz	w0, #0, 4216ec <_obstack_memory_used@@Base+0xa904>
  421578:	cbz	w0, 4216f0 <_obstack_memory_used@@Base+0xa908>
  42157c:	and	w1, w0, #0x6
  421580:	cmp	w1, #0x6
  421584:	b.eq	42174c <_obstack_memory_used@@Base+0xa964>  // b.none
  421588:	tbnz	w0, #1, 421754 <_obstack_memory_used@@Base+0xa96c>
  42158c:	tbz	w0, #2, 4216f0 <_obstack_memory_used@@Base+0xa908>
  421590:	mov	w3, w0
  421594:	ldr	x2, [x20, #80]
  421598:	mov	x1, x19
  42159c:	add	x0, sp, #0x108
  4215a0:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  4215a4:	mov	x20, x0
  4215a8:	cbnz	x0, 4216f0 <_obstack_memory_used@@Base+0xa908>
  4215ac:	ldr	x27, [sp, #176]
  4215b0:	b	421fac <_obstack_memory_used@@Base+0xb1c4>
  4215b4:	cbz	w2, 4214fc <_obstack_memory_used@@Base+0xa714>
  4215b8:	str	x0, [sp, #584]
  4215bc:	b	4214f0 <_obstack_memory_used@@Base+0xa708>
  4215c0:	sxtw	x2, w1
  4215c4:	cbz	x6, 4215cc <_obstack_memory_used@@Base+0xa7e4>
  4215c8:	ldrb	w2, [x6, w1, sxtw]
  4215cc:	ldrb	w1, [x26, x2]
  4215d0:	cbnz	w1, 421644 <_obstack_memory_used@@Base+0xa85c>
  4215d4:	sub	x0, x0, #0x1
  4215d8:	mov	w3, w5
  4215dc:	cmp	x0, x8
  4215e0:	b.lt	4215f8 <_obstack_memory_used@@Base+0xa810>  // b.tstop
  4215e4:	mov	w1, w4
  4215e8:	cmp	x7, x0
  4215ec:	b.le	4215c0 <_obstack_memory_used@@Base+0xa7d8>
  4215f0:	ldrb	w1, [x9, x0]
  4215f4:	b	4215c0 <_obstack_memory_used@@Base+0xa7d8>
  4215f8:	ldr	x27, [sp, #176]
  4215fc:	str	x0, [sp, #584]
  421600:	mov	w0, #0x1                   	// #1
  421604:	str	w0, [sp, #132]
  421608:	ldp	x23, x24, [sp, #48]
  42160c:	ldr	x0, [sp, #512]
  421610:	bl	402660 <free@plt>
  421614:	ldr	x0, [x27, #152]
  421618:	cbnz	x0, 421f28 <_obstack_memory_used@@Base+0xb140>
  42161c:	add	x0, sp, #0x148
  421620:	bl	41a71c <_obstack_memory_used@@Base+0x3934>
  421624:	ldr	w0, [sp, #132]
  421628:	ldp	x19, x20, [sp, #16]
  42162c:	ldp	x21, x22, [sp, #32]
  421630:	ldp	x25, x26, [sp, #64]
  421634:	ldp	x27, x28, [sp, #80]
  421638:	ldp	x29, x30, [sp]
  42163c:	add	sp, sp, #0x250
  421640:	ret
  421644:	cbz	w3, 42164c <_obstack_memory_used@@Base+0xa864>
  421648:	str	x0, [sp, #584]
  42164c:	ldr	x1, [sp, #144]
  421650:	cmp	x1, x0
  421654:	b.le	4214fc <_obstack_memory_used@@Base+0xa714>
  421658:	ldr	x27, [sp, #176]
  42165c:	mov	w0, #0x1                   	// #1
  421660:	str	w0, [sp, #132]
  421664:	ldp	x23, x24, [sp, #48]
  421668:	b	42160c <_obstack_memory_used@@Base+0xa824>
  42166c:	ldr	w2, [sp, #120]
  421670:	mov	x1, x19
  421674:	add	x0, sp, #0x148
  421678:	bl	41c394 <_obstack_memory_used@@Base+0x55ac>
  42167c:	cbnz	w0, 421ef4 <_obstack_memory_used@@Base+0xb10c>
  421680:	ldr	x0, [sp, #368]
  421684:	sub	x0, x19, x0
  421688:	b	4216c0 <_obstack_memory_used@@Base+0xa8d8>
  42168c:	ldrb	w0, [x26, w1, sxtw]
  421690:	cbnz	w0, 4214fc <_obstack_memory_used@@Base+0xa714>
  421694:	add	x19, x21, x19
  421698:	str	x19, [sp, #584]
  42169c:	cmp	x19, x23
  4216a0:	ccmp	x19, x25, #0x0, ge  // ge = tcont
  4216a4:	b.gt	4216d8 <_obstack_memory_used@@Base+0xa8f0>
  4216a8:	ldr	x19, [sp, #584]
  4216ac:	ldr	x0, [sp, #368]
  4216b0:	sub	x0, x19, x0
  4216b4:	ldr	x1, [sp, #384]
  4216b8:	cmp	x1, x0
  4216bc:	b.ls	42166c <_obstack_memory_used@@Base+0xa884>  // b.plast
  4216c0:	mov	w1, w20
  4216c4:	cmp	x19, x22
  4216c8:	b.ge	42168c <_obstack_memory_used@@Base+0xa8a4>  // b.tcont
  4216cc:	ldr	x1, [sp, #336]
  4216d0:	ldrb	w1, [x1, x0]
  4216d4:	b	42168c <_obstack_memory_used@@Base+0xa8a4>
  4216d8:	ldr	x27, [sp, #176]
  4216dc:	mov	w0, #0x1                   	// #1
  4216e0:	str	w0, [sp, #132]
  4216e4:	ldp	x23, x24, [sp, #48]
  4216e8:	b	42160c <_obstack_memory_used@@Base+0xa824>
  4216ec:	ldr	x20, [x19, #80]
  4216f0:	ldr	x0, [sp, #512]
  4216f4:	cbz	x0, 4217b0 <_obstack_memory_used@@Base+0xa9c8>
  4216f8:	ldr	x1, [sp, #112]
  4216fc:	str	x20, [x0, x1, lsl #3]
  421700:	ldr	x0, [x19, #152]
  421704:	ldr	w1, [sp, #236]
  421708:	mov	w22, w1
  42170c:	cbnz	x0, 42175c <_obstack_memory_used@@Base+0xa974>
  421710:	ldrb	w0, [x20, #104]
  421714:	mov	x28, #0xffffffffffffffff    	// #-1
  421718:	mov	x27, #0x0                   	// #0
  42171c:	tbnz	w0, #4, 4217bc <_obstack_memory_used@@Base+0xa9d4>
  421720:	ldr	x21, [sp, #400]
  421724:	ldr	x0, [sp, #240]
  421728:	str	x0, [sp, #104]
  42172c:	ldr	x0, [sp, #432]
  421730:	cmp	x21, x0
  421734:	b.ge	421b80 <_obstack_memory_used@@Base+0xad98>  // b.tcont
  421738:	add	x0, sp, #0x110
  42173c:	str	x0, [sp, #96]
  421740:	str	x25, [sp, #136]
  421744:	mov	w25, w22
  421748:	b	421ae8 <_obstack_memory_used@@Base+0xad00>
  42174c:	ldr	x20, [x19, #96]
  421750:	b	4216f0 <_obstack_memory_used@@Base+0xa908>
  421754:	ldr	x20, [x19, #88]
  421758:	b	4216f0 <_obstack_memory_used@@Base+0xa908>
  42175c:	add	x19, x20, #0x8
  421760:	mov	x2, #0x0                   	// #0
  421764:	mov	x1, x19
  421768:	add	x0, sp, #0x148
  42176c:	bl	41afe8 <_obstack_memory_used@@Base+0x4200>
  421770:	str	w0, [sp, #264]
  421774:	sxtw	x28, w0
  421778:	cbnz	w0, 421bc0 <_obstack_memory_used@@Base+0xadd8>
  42177c:	ldrb	w0, [x20, #104]
  421780:	ldr	w1, [sp, #196]
  421784:	mov	w22, w1
  421788:	tbz	w0, #6, 421710 <_obstack_memory_used@@Base+0xa928>
  42178c:	mov	x1, x19
  421790:	add	x0, sp, #0x148
  421794:	bl	41ff50 <_obstack_memory_used@@Base+0x9168>
  421798:	str	w0, [sp, #264]
  42179c:	ldr	w1, [sp, #196]
  4217a0:	mov	w22, w1
  4217a4:	sxtw	x28, w0
  4217a8:	cbz	w0, 421710 <_obstack_memory_used@@Base+0xa928>
  4217ac:	b	421bc0 <_obstack_memory_used@@Base+0xadd8>
  4217b0:	ldr	w0, [sp, #236]
  4217b4:	mov	w22, w0
  4217b8:	b	421710 <_obstack_memory_used@@Base+0xa928>
  4217bc:	ldrsb	w0, [x20, #104]
  4217c0:	tbnz	w0, #31, 4217d8 <_obstack_memory_used@@Base+0xa9f0>
  4217c4:	ldr	x28, [sp, #112]
  4217c8:	mov	x27, #0x1                   	// #1
  4217cc:	ldr	w0, [sp, #128]
  4217d0:	cbnz	w0, 421720 <_obstack_memory_used@@Base+0xa938>
  4217d4:	b	421bc0 <_obstack_memory_used@@Base+0xadd8>
  4217d8:	ldr	x2, [sp, #112]
  4217dc:	mov	x1, x20
  4217e0:	add	x0, sp, #0x148
  4217e4:	bl	41b27c <_obstack_memory_used@@Base+0x4494>
  4217e8:	mov	x27, x0
  4217ec:	cbnz	x0, 4217c4 <_obstack_memory_used@@Base+0xa9dc>
  4217f0:	mov	x28, #0xffffffffffffffff    	// #-1
  4217f4:	b	421720 <_obstack_memory_used@@Base+0xa938>
  4217f8:	ldr	x1, [sp, #416]
  4217fc:	cmp	x0, x1
  421800:	b.ge	421af8 <_obstack_memory_used@@Base+0xad10>  // b.tcont
  421804:	add	w1, w21, #0x1
  421808:	add	x0, sp, #0x148
  42180c:	bl	418b58 <_obstack_memory_used@@Base+0x1d70>
  421810:	str	w0, [sp, #264]
  421814:	cbz	w0, 421b04 <_obstack_memory_used@@Base+0xad1c>
  421818:	ldr	x27, [sp, #176]
  42181c:	b	421fac <_obstack_memory_used@@Base+0xb1c4>
  421820:	ldr	x1, [sp, #416]
  421824:	cmp	x0, x1
  421828:	b.ge	421b04 <_obstack_memory_used@@Base+0xad1c>  // b.tcont
  42182c:	b	421804 <_obstack_memory_used@@Base+0xaa1c>
  421830:	ldr	x22, [sp, #480]
  421834:	ldr	x0, [x20, #16]
  421838:	cmp	x0, #0x0
  42183c:	b.le	421fbc <_obstack_memory_used@@Base+0xb1d4>
  421840:	mov	x23, #0x0                   	// #0
  421844:	b	421928 <_obstack_memory_used@@Base+0xab40>
  421848:	tbz	w1, #3, 421850 <_obstack_memory_used@@Base+0xaa68>
  42184c:	tbnz	w0, #0, 421918 <_obstack_memory_used@@Base+0xab30>
  421850:	tbz	w1, #5, 421858 <_obstack_memory_used@@Base+0xaa70>
  421854:	tbz	w0, #1, 421918 <_obstack_memory_used@@Base+0xab30>
  421858:	tbz	w1, #7, 421860 <_obstack_memory_used@@Base+0xaa78>
  42185c:	tbz	w0, #3, 421918 <_obstack_memory_used@@Base+0xab30>
  421860:	ldr	x3, [sp, #400]
  421864:	add	x2, sp, #0x148
  421868:	mov	x1, x24
  42186c:	mov	x0, x22
  421870:	bl	41ca3c <_obstack_memory_used@@Base+0x5c54>
  421874:	cbz	w0, 421918 <_obstack_memory_used@@Base+0xab30>
  421878:	ldr	x19, [sp, #400]
  42187c:	add	x19, x19, w0, sxtw
  421880:	ldr	w1, [sp, #552]
  421884:	cmp	w1, w0
  421888:	csel	w0, w1, w0, ge  // ge = tcont
  42188c:	str	w0, [sp, #552]
  421890:	mov	x1, x19
  421894:	add	x0, sp, #0x148
  421898:	bl	418c3c <_obstack_memory_used@@Base+0x1e54>
  42189c:	str	w0, [sp, #268]
  4218a0:	cbnz	w0, 4219b8 <_obstack_memory_used@@Base+0xabd0>
  4218a4:	ldr	x0, [x22, #24]
  4218a8:	ldr	x2, [x0, x24, lsl #3]
  4218ac:	add	x2, x2, x2, lsl #1
  4218b0:	ldr	x0, [x22, #48]
  4218b4:	add	x2, x0, x2, lsl #3
  4218b8:	ldr	x24, [sp, #512]
  4218bc:	ldr	x0, [x24, x19, lsl #3]
  4218c0:	cbz	x0, 421974 <_obstack_memory_used@@Base+0xab8c>
  4218c4:	ldr	x1, [x0, #80]
  4218c8:	ldr	x0, [sp, #96]
  4218cc:	bl	418f04 <_obstack_memory_used@@Base+0x211c>
  4218d0:	str	w0, [sp, #268]
  4218d4:	cbnz	w0, 4219b8 <_obstack_memory_used@@Base+0xabd0>
  4218d8:	ldr	w2, [sp, #488]
  4218dc:	sub	x1, x19, #0x1
  4218e0:	add	x0, sp, #0x148
  4218e4:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  4218e8:	ldr	x24, [sp, #512]
  4218ec:	mov	w3, w0
  4218f0:	ldr	x2, [sp, #96]
  4218f4:	mov	x1, x22
  4218f8:	add	x0, sp, #0x10c
  4218fc:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  421900:	str	x0, [x24, x19, lsl #3]
  421904:	ldr	x0, [sp, #288]
  421908:	bl	402660 <free@plt>
  42190c:	ldr	x0, [sp, #512]
  421910:	ldr	x0, [x0, x19, lsl #3]
  421914:	cbz	x0, 4219b0 <_obstack_memory_used@@Base+0xabc8>
  421918:	add	x23, x23, #0x1
  42191c:	ldr	x0, [x20, #16]
  421920:	cmp	x23, x0
  421924:	b.ge	421fbc <_obstack_memory_used@@Base+0xb1d4>  // b.tcont
  421928:	ldr	x0, [x20, #24]
  42192c:	ldr	x24, [x0, x23, lsl #3]
  421930:	ldr	x19, [x22]
  421934:	add	x19, x19, x24, lsl #4
  421938:	ldrb	w0, [x19, #10]
  42193c:	tbz	w0, #4, 421918 <_obstack_memory_used@@Base+0xab30>
  421940:	ldr	w0, [x19, #8]
  421944:	tst	w0, #0x3ff00
  421948:	b.eq	421860 <_obstack_memory_used@@Base+0xaa78>  // b.none
  42194c:	ldr	w2, [sp, #488]
  421950:	ldr	x1, [sp, #400]
  421954:	add	x0, sp, #0x148
  421958:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  42195c:	ldr	w2, [x19, #8]
  421960:	ubfx	x1, x2, #8, #10
  421964:	tbz	w2, #10, 421848 <_obstack_memory_used@@Base+0xaa60>
  421968:	tbz	w0, #0, 421918 <_obstack_memory_used@@Base+0xab30>
  42196c:	tbz	w1, #3, 421850 <_obstack_memory_used@@Base+0xaa68>
  421970:	b	421918 <_obstack_memory_used@@Base+0xab30>
  421974:	ldp	x0, x1, [x2]
  421978:	stp	x0, x1, [sp, #272]
  42197c:	ldr	x0, [x2, #16]
  421980:	str	x0, [sp, #288]
  421984:	ldr	w2, [sp, #488]
  421988:	sub	x1, x19, #0x1
  42198c:	add	x0, sp, #0x148
  421990:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  421994:	mov	w3, w0
  421998:	ldr	x2, [sp, #96]
  42199c:	mov	x1, x22
  4219a0:	add	x0, sp, #0x10c
  4219a4:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  4219a8:	str	x0, [x24, x19, lsl #3]
  4219ac:	b	42190c <_obstack_memory_used@@Base+0xab24>
  4219b0:	ldr	w0, [sp, #268]
  4219b4:	cbz	w0, 421918 <_obstack_memory_used@@Base+0xab30>
  4219b8:	str	w0, [sp, #264]
  4219bc:	ldr	x0, [sp, #512]
  4219c0:	cbz	x0, 4221c4 <_obstack_memory_used@@Base+0xb3dc>
  4219c4:	mov	x19, #0x0                   	// #0
  4219c8:	b	421b38 <_obstack_memory_used@@Base+0xad50>
  4219cc:	ldr	x22, [x20, #96]
  4219d0:	cbz	x22, 421a04 <_obstack_memory_used@@Base+0xac1c>
  4219d4:	ldr	w2, [sp, #488]
  4219d8:	ldr	x1, [sp, #400]
  4219dc:	sub	x1, x1, #0x1
  4219e0:	add	x0, sp, #0x148
  4219e4:	bl	41adc0 <_obstack_memory_used@@Base+0x3fd8>
  4219e8:	tbz	w0, #0, 4219f8 <_obstack_memory_used@@Base+0xac10>
  4219ec:	add	x19, x22, w19, uxtb #3
  4219f0:	ldr	x19, [x19, #2048]
  4219f4:	b	421b30 <_obstack_memory_used@@Base+0xad48>
  4219f8:	and	x19, x19, #0xff
  4219fc:	ldr	x19, [x22, x19, lsl #3]
  421a00:	b	421b30 <_obstack_memory_used@@Base+0xad48>
  421a04:	mov	x1, x20
  421a08:	ldr	x0, [sp, #480]
  421a0c:	bl	41cd74 <_obstack_memory_used@@Base+0x5f8c>
  421a10:	and	w0, w0, #0xff
  421a14:	cbnz	w0, 421b20 <_obstack_memory_used@@Base+0xad38>
  421a18:	mov	w0, #0xc                   	// #12
  421a1c:	str	w0, [sp, #264]
  421a20:	b	4219bc <_obstack_memory_used@@Base+0xabd4>
  421a24:	ldr	w0, [sp, #264]
  421a28:	cbnz	w0, 421fa8 <_obstack_memory_used@@Base+0xb1c0>
  421a2c:	ldr	x0, [sp, #512]
  421a30:	cbz	x0, 421b94 <_obstack_memory_used@@Base+0xadac>
  421a34:	cmp	x27, #0x0
  421a38:	ldr	w0, [sp, #128]
  421a3c:	eor	w0, w0, #0x1
  421a40:	csel	w0, w0, wzr, ne  // ne = any
  421a44:	cbnz	w0, 421b9c <_obstack_memory_used@@Base+0xadb4>
  421a48:	ldr	x3, [sp, #520]
  421a4c:	ldr	x0, [sp, #400]
  421a50:	ldr	x2, [sp, #512]
  421a54:	add	x0, x0, #0x1
  421a58:	cmp	x3, x0
  421a5c:	b.lt	421ba4 <_obstack_memory_used@@Base+0xadbc>  // b.tstop
  421a60:	ldr	x1, [sp, #400]
  421a64:	add	x1, x1, #0x1
  421a68:	str	x1, [sp, #400]
  421a6c:	ldr	x1, [x2, x0, lsl #3]
  421a70:	cbz	x1, 421a54 <_obstack_memory_used@@Base+0xac6c>
  421a74:	mov	x2, #0x0                   	// #0
  421a78:	add	x1, sp, #0x148
  421a7c:	add	x0, sp, #0x108
  421a80:	bl	420610 <_obstack_memory_used@@Base+0x9828>
  421a84:	ldr	w1, [sp, #264]
  421a88:	cmp	w1, #0x0
  421a8c:	ccmp	x0, #0x0, #0x0, eq  // eq = none
  421a90:	b.eq	421a48 <_obstack_memory_used@@Base+0xac60>  // b.none
  421a94:	mov	x19, x0
  421a98:	cbnz	x0, 421b50 <_obstack_memory_used@@Base+0xad68>
  421a9c:	ldr	x25, [sp, #136]
  421aa0:	b	421ba8 <_obstack_memory_used@@Base+0xadc0>
  421aa4:	cmp	x20, x19
  421aa8:	ldr	w0, [sp, #196]
  421aac:	csel	w25, w25, w0, eq  // eq = none
  421ab0:	ldr	x0, [sp, #112]
  421ab4:	csel	x0, x21, x0, eq  // eq = none
  421ab8:	str	x0, [sp, #112]
  421abc:	b	421b54 <_obstack_memory_used@@Base+0xad6c>
  421ac0:	ldr	x28, [sp, #400]
  421ac4:	ldr	w0, [sp, #128]
  421ac8:	cbz	w0, 421b78 <_obstack_memory_used@@Base+0xad90>
  421acc:	mov	x27, #0x1                   	// #1
  421ad0:	str	xzr, [sp, #104]
  421ad4:	ldr	x21, [sp, #400]
  421ad8:	ldr	x0, [sp, #432]
  421adc:	cmp	x21, x0
  421ae0:	b.ge	421b8c <_obstack_memory_used@@Base+0xada4>  // b.tcont
  421ae4:	mov	x20, x19
  421ae8:	add	x21, x21, #0x1
  421aec:	ldr	x0, [sp, #392]
  421af0:	cmp	x21, x0
  421af4:	b.ge	4217f8 <_obstack_memory_used@@Base+0xaa10>  // b.tcont
  421af8:	ldr	x0, [sp, #376]
  421afc:	cmp	x21, x0
  421b00:	b.ge	421820 <_obstack_memory_used@@Base+0xaa38>  // b.tcont
  421b04:	ldrb	w0, [x20, #104]
  421b08:	tbnz	w0, #5, 421830 <_obstack_memory_used@@Base+0xaa48>
  421b0c:	ldr	x0, [sp, #400]
  421b10:	add	x1, x0, #0x1
  421b14:	str	x1, [sp, #400]
  421b18:	ldr	x1, [sp, #336]
  421b1c:	ldrb	w19, [x1, x0]
  421b20:	ldr	x0, [x20, #88]
  421b24:	cbz	x0, 4219cc <_obstack_memory_used@@Base+0xabe4>
  421b28:	and	x19, x19, #0xff
  421b2c:	ldr	x19, [x0, x19, lsl #3]
  421b30:	ldr	x0, [sp, #512]
  421b34:	cbz	x0, 421b4c <_obstack_memory_used@@Base+0xad64>
  421b38:	mov	x2, x19
  421b3c:	add	x1, sp, #0x148
  421b40:	add	x0, sp, #0x108
  421b44:	bl	420610 <_obstack_memory_used@@Base+0x9828>
  421b48:	mov	x19, x0
  421b4c:	cbz	x19, 421a24 <_obstack_memory_used@@Base+0xac3c>
  421b50:	cbnz	w25, 421aa4 <_obstack_memory_used@@Base+0xacbc>
  421b54:	ldrb	w0, [x19, #104]
  421b58:	tbz	w0, #4, 421ad4 <_obstack_memory_used@@Base+0xacec>
  421b5c:	tbz	w0, #7, 421ac0 <_obstack_memory_used@@Base+0xacd8>
  421b60:	ldr	x2, [sp, #400]
  421b64:	mov	x1, x19
  421b68:	add	x0, sp, #0x148
  421b6c:	bl	41b27c <_obstack_memory_used@@Base+0x4494>
  421b70:	cbz	x0, 421ad4 <_obstack_memory_used@@Base+0xacec>
  421b74:	b	421ac0 <_obstack_memory_used@@Base+0xacd8>
  421b78:	ldr	x25, [sp, #136]
  421b7c:	b	421bc0 <_obstack_memory_used@@Base+0xadd8>
  421b80:	ldr	x0, [sp, #240]
  421b84:	str	x0, [sp, #104]
  421b88:	b	421ba8 <_obstack_memory_used@@Base+0xadc0>
  421b8c:	ldr	x25, [sp, #136]
  421b90:	b	421ba8 <_obstack_memory_used@@Base+0xadc0>
  421b94:	ldr	x25, [sp, #136]
  421b98:	b	421ba8 <_obstack_memory_used@@Base+0xadc0>
  421b9c:	ldr	x25, [sp, #136]
  421ba0:	b	421ba8 <_obstack_memory_used@@Base+0xadc0>
  421ba4:	ldr	x25, [sp, #136]
  421ba8:	ldr	x1, [sp, #104]
  421bac:	cbz	x1, 421bc0 <_obstack_memory_used@@Base+0xadd8>
  421bb0:	ldr	x0, [x1]
  421bb4:	ldr	x2, [sp, #112]
  421bb8:	add	x0, x0, x2
  421bbc:	str	x0, [x1]
  421bc0:	cmn	x28, #0x1
  421bc4:	b.eq	42203c <_obstack_memory_used@@Base+0xb254>  // b.none
  421bc8:	cmn	x28, #0x2
  421bcc:	b.eq	421ee0 <_obstack_memory_used@@Base+0xb0f8>  // b.none
  421bd0:	str	x28, [sp, #496]
  421bd4:	ldr	x0, [sp, #200]
  421bd8:	cmp	x0, #0x1
  421bdc:	cset	w23, hi  // hi = pmore
  421be0:	ldr	x1, [sp, #224]
  421be4:	ldrb	w0, [x1, #56]
  421be8:	tst	x0, #0x10
  421bec:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  421bf0:	b.ne	4220cc <_obstack_memory_used@@Base+0xb2e4>  // b.any
  421bf4:	ldr	x27, [sp, #176]
  421bf8:	ldr	x0, [x27, #152]
  421bfc:	cbnz	x0, 4220f4 <_obstack_memory_used@@Base+0xb30c>
  421c00:	mov	x25, x1
  421c04:	ldr	x1, [sp, #200]
  421c08:	cbz	x1, 421f10 <_obstack_memory_used@@Base+0xb128>
  421c0c:	cmp	x1, #0x1
  421c10:	b.ls	421f80 <_obstack_memory_used@@Base+0xb198>  // b.plast
  421c14:	ldr	x2, [sp, #248]
  421c18:	add	x0, x2, #0x10
  421c1c:	add	x2, x2, x1, lsl #4
  421c20:	mov	x1, #0xffffffffffffffff    	// #-1
  421c24:	str	x1, [x0, #8]
  421c28:	str	x1, [x0], #16
  421c2c:	cmp	x0, x2
  421c30:	b.ne	421c24 <_obstack_memory_used@@Base+0xae3c>  // b.any
  421c34:	ldr	x1, [sp, #248]
  421c38:	str	xzr, [x1]
  421c3c:	ldr	x0, [sp, #496]
  421c40:	str	x0, [x1, #8]
  421c44:	ldrb	w0, [x25, #56]
  421c48:	tst	x0, #0x10
  421c4c:	ccmp	w23, #0x0, #0x4, eq  // eq = none
  421c50:	b.ne	421d54 <_obstack_memory_used@@Base+0xaf6c>  // b.any
  421c54:	ldrb	w6, [sp, #468]
  421c58:	ldr	x8, [sp, #376]
  421c5c:	ldr	x9, [sp, #352]
  421c60:	ldr	x4, [sp, #584]
  421c64:	ldr	x0, [sp, #200]
  421c68:	lsl	x0, x0, #4
  421c6c:	ldr	x1, [sp, #248]
  421c70:	add	x5, x0, x1
  421c74:	ldr	x7, [sp, #384]
  421c78:	b	421dc0 <_obstack_memory_used@@Base+0xafd8>
  421c7c:	sub	x28, x28, #0x1
  421c80:	cmn	x28, #0x1
  421c84:	b.eq	42200c <_obstack_memory_used@@Base+0xb224>  // b.none
  421c88:	ldr	x1, [x2, x28, lsl #3]
  421c8c:	cbz	x1, 421c7c <_obstack_memory_used@@Base+0xae94>
  421c90:	ldrb	w0, [x1, #104]
  421c94:	tbz	w0, #4, 421c7c <_obstack_memory_used@@Base+0xae94>
  421c98:	mov	x2, x28
  421c9c:	add	x0, sp, #0x148
  421ca0:	bl	41b27c <_obstack_memory_used@@Base+0x4494>
  421ca4:	mov	x22, x0
  421ca8:	b	42215c <_obstack_memory_used@@Base+0xb374>
  421cac:	mov	x3, x27
  421cb0:	mov	x2, x20
  421cb4:	mov	x1, x19
  421cb8:	mov	x0, x24
  421cbc:	bl	41f4c4 <_obstack_memory_used@@Base+0x86dc>
  421cc0:	mov	w21, w0
  421cc4:	mov	x0, x20
  421cc8:	bl	402660 <free@plt>
  421ccc:	cbz	w21, 421d14 <_obstack_memory_used@@Base+0xaf2c>
  421cd0:	mov	x20, #0x0                   	// #0
  421cd4:	b	422024 <_obstack_memory_used@@Base+0xb23c>
  421cd8:	str	x19, [sp, #272]
  421cdc:	str	xzr, [sp, #280]
  421ce0:	str	x22, [sp, #288]
  421ce4:	str	x28, [sp, #296]
  421ce8:	stp	xzr, xzr, [sp, #304]
  421cec:	str	xzr, [sp, #320]
  421cf0:	add	x1, sp, #0x110
  421cf4:	add	x0, sp, #0x148
  421cf8:	bl	420dec <_obstack_memory_used@@Base+0xa004>
  421cfc:	mov	w21, w0
  421d00:	ldr	x0, [sp, #320]
  421d04:	bl	402660 <free@plt>
  421d08:	cbnz	w21, 422020 <_obstack_memory_used@@Base+0xb238>
  421d0c:	ldr	x20, [x19]
  421d10:	cbz	x20, 42200c <_obstack_memory_used@@Base+0xb224>
  421d14:	ldr	x27, [sp, #176]
  421d18:	ldr	x25, [sp, #224]
  421d1c:	ldr	x0, [sp, #512]
  421d20:	bl	402660 <free@plt>
  421d24:	str	x19, [sp, #512]
  421d28:	str	x22, [sp, #504]
  421d2c:	str	x28, [sp, #496]
  421d30:	b	421c04 <_obstack_memory_used@@Base+0xae1c>
  421d34:	ldr	x27, [sp, #176]
  421d38:	mov	w0, #0x1                   	// #1
  421d3c:	str	w0, [sp, #132]
  421d40:	ldp	x23, x24, [sp, #48]
  421d44:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421d48:	ldr	x27, [sp, #176]
  421d4c:	ldr	x25, [sp, #224]
  421d50:	b	421c04 <_obstack_memory_used@@Base+0xae1c>
  421d54:	ldrb	w0, [x27, #176]
  421d58:	ldr	w4, [sp, #132]
  421d5c:	tbz	w0, #0, 421d6c <_obstack_memory_used@@Base+0xaf84>
  421d60:	ldr	x0, [x27, #152]
  421d64:	cmp	x0, #0x0
  421d68:	cset	w4, gt
  421d6c:	and	w4, w4, #0x1
  421d70:	ldr	x3, [sp, #248]
  421d74:	ldr	x2, [sp, #200]
  421d78:	add	x1, sp, #0x148
  421d7c:	mov	x0, x25
  421d80:	bl	41d720 <_obstack_memory_used@@Base+0x6938>
  421d84:	cbz	w0, 421c54 <_obstack_memory_used@@Base+0xae6c>
  421d88:	str	w0, [sp, #132]
  421d8c:	ldp	x23, x24, [sp, #48]
  421d90:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421d94:	ldr	x3, [x9, x10, lsl #3]
  421d98:	str	x3, [x2, #8]
  421d9c:	ldr	x3, [x2]
  421da0:	add	x3, x3, x4
  421da4:	str	x3, [x2]
  421da8:	ldr	x3, [x2, #8]
  421dac:	add	x3, x3, x4
  421db0:	str	x3, [x2, #8]
  421db4:	add	x1, x1, #0x10
  421db8:	cmp	x1, x5
  421dbc:	b.eq	421dfc <_obstack_memory_used@@Base+0xb014>  // b.none
  421dc0:	mov	x2, x1
  421dc4:	ldr	x3, [x1]
  421dc8:	cmn	x3, #0x1
  421dcc:	b.eq	421db4 <_obstack_memory_used@@Base+0xafcc>  // b.none
  421dd0:	cbz	w6, 421d9c <_obstack_memory_used@@Base+0xafb4>
  421dd4:	mov	x10, x7
  421dd8:	cmp	x3, x8
  421ddc:	b.eq	421de4 <_obstack_memory_used@@Base+0xaffc>  // b.none
  421de0:	ldr	x10, [x9, x3, lsl #3]
  421de4:	str	x10, [x2]
  421de8:	ldr	x10, [x2, #8]
  421dec:	mov	x3, x7
  421df0:	cmp	x8, x10
  421df4:	b.ne	421d94 <_obstack_memory_used@@Base+0xafac>  // b.any
  421df8:	b	421d98 <_obstack_memory_used@@Base+0xafb0>
  421dfc:	ldr	x1, [sp, #208]
  421e00:	cmp	x1, #0x0
  421e04:	b.le	421e30 <_obstack_memory_used@@Base+0xb048>
  421e08:	ldr	x1, [sp, #248]
  421e0c:	add	x0, x1, x0
  421e10:	ldr	x2, [sp, #160]
  421e14:	add	x2, x1, x2, lsl #4
  421e18:	mov	x1, #0xffffffffffffffff    	// #-1
  421e1c:	str	x1, [x0]
  421e20:	str	x1, [x0, #8]
  421e24:	add	x0, x0, #0x10
  421e28:	cmp	x2, x0
  421e2c:	b.ne	421e1c <_obstack_memory_used@@Base+0xb034>  // b.any
  421e30:	ldr	x0, [x27, #224]
  421e34:	cbz	x0, 421f18 <_obstack_memory_used@@Base+0xb130>
  421e38:	ldr	x0, [sp, #200]
  421e3c:	cmp	x0, #0x1
  421e40:	b.ls	421f20 <_obstack_memory_used@@Base+0xb138>  // b.plast
  421e44:	ldr	x4, [sp, #248]
  421e48:	add	x2, x4, #0x10
  421e4c:	sub	x3, x0, #0x1
  421e50:	mov	x0, #0x0                   	// #0
  421e54:	b	421e88 <_obstack_memory_used@@Base+0xb0a0>
  421e58:	add	x1, x4, x1, lsl #4
  421e5c:	ldr	x1, [x1, #16]
  421e60:	str	x1, [x2]
  421e64:	ldr	x1, [x27, #224]
  421e68:	ldr	x1, [x1, x0, lsl #3]
  421e6c:	add	x1, x4, x1, lsl #4
  421e70:	ldr	x1, [x1, #24]
  421e74:	str	x1, [x2, #8]
  421e78:	add	x0, x0, #0x1
  421e7c:	add	x2, x2, #0x10
  421e80:	cmp	x0, x3
  421e84:	b.eq	421e9c <_obstack_memory_used@@Base+0xb0b4>  // b.none
  421e88:	ldr	x1, [x27, #224]
  421e8c:	ldr	x1, [x1, x0, lsl #3]
  421e90:	cmp	x1, x0
  421e94:	b.ne	421e58 <_obstack_memory_used@@Base+0xb070>  // b.any
  421e98:	b	421e78 <_obstack_memory_used@@Base+0xb090>
  421e9c:	ldp	x23, x24, [sp, #48]
  421ea0:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421ea4:	ldr	w0, [sp, #188]
  421ea8:	str	w0, [sp, #132]
  421eac:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421eb0:	mov	w0, #0xc                   	// #12
  421eb4:	str	w0, [sp, #132]
  421eb8:	ldp	x23, x24, [sp, #48]
  421ebc:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421ec0:	mov	w0, #0xc                   	// #12
  421ec4:	str	w0, [sp, #132]
  421ec8:	ldp	x23, x24, [sp, #48]
  421ecc:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421ed0:	mov	w0, #0x1                   	// #1
  421ed4:	str	w0, [sp, #132]
  421ed8:	ldp	x23, x24, [sp, #48]
  421edc:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421ee0:	ldr	x27, [sp, #176]
  421ee4:	mov	w0, #0xc                   	// #12
  421ee8:	str	w0, [sp, #132]
  421eec:	ldp	x23, x24, [sp, #48]
  421ef0:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421ef4:	ldr	x27, [sp, #176]
  421ef8:	str	w0, [sp, #132]
  421efc:	ldp	x23, x24, [sp, #48]
  421f00:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421f04:	ldr	x27, [sp, #176]
  421f08:	ldp	x23, x24, [sp, #48]
  421f0c:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421f10:	ldp	x23, x24, [sp, #48]
  421f14:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421f18:	ldp	x23, x24, [sp, #48]
  421f1c:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421f20:	ldp	x23, x24, [sp, #48]
  421f24:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421f28:	add	x0, sp, #0x148
  421f2c:	bl	41aabc <_obstack_memory_used@@Base+0x3cd4>
  421f30:	ldr	x0, [sp, #576]
  421f34:	bl	402660 <free@plt>
  421f38:	ldr	x0, [sp, #544]
  421f3c:	bl	402660 <free@plt>
  421f40:	b	42161c <_obstack_memory_used@@Base+0xa834>
  421f44:	mov	w0, #0x1                   	// #1
  421f48:	str	w0, [sp, #132]
  421f4c:	b	421624 <_obstack_memory_used@@Base+0xa83c>
  421f50:	mov	w0, #0x1                   	// #1
  421f54:	str	w0, [sp, #132]
  421f58:	b	421624 <_obstack_memory_used@@Base+0xa83c>
  421f5c:	mov	w0, #0x1                   	// #1
  421f60:	str	w0, [sp, #132]
  421f64:	b	421624 <_obstack_memory_used@@Base+0xa83c>
  421f68:	mov	w0, #0x1                   	// #1
  421f6c:	str	w0, [sp, #132]
  421f70:	b	421624 <_obstack_memory_used@@Base+0xa83c>
  421f74:	mov	w0, #0x1                   	// #1
  421f78:	str	w0, [sp, #132]
  421f7c:	b	421624 <_obstack_memory_used@@Base+0xa83c>
  421f80:	ldr	x1, [sp, #248]
  421f84:	str	xzr, [x1]
  421f88:	ldr	x0, [sp, #496]
  421f8c:	str	x0, [x1, #8]
  421f90:	b	421c54 <_obstack_memory_used@@Base+0xae6c>
  421f94:	ldr	x27, [sp, #176]
  421f98:	mov	w0, #0xc                   	// #12
  421f9c:	str	w0, [sp, #132]
  421fa0:	ldp	x23, x24, [sp, #48]
  421fa4:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421fa8:	ldr	x27, [sp, #176]
  421fac:	mov	w0, #0xc                   	// #12
  421fb0:	str	w0, [sp, #132]
  421fb4:	ldp	x23, x24, [sp, #48]
  421fb8:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421fbc:	str	wzr, [sp, #264]
  421fc0:	b	421b0c <_obstack_memory_used@@Base+0xad24>
  421fc4:	mov	w0, #0xc                   	// #12
  421fc8:	str	w0, [sp, #132]
  421fcc:	ldp	x23, x24, [sp, #48]
  421fd0:	b	42160c <_obstack_memory_used@@Base+0xa824>
  421fd4:	ldr	x0, [sp, #168]
  421fd8:	str	x0, [sp, #336]
  421fdc:	ldr	w0, [x27, #180]
  421fe0:	cmp	w0, #0x2
  421fe4:	ldr	x0, [sp, #152]
  421fe8:	csel	x0, x0, xzr, lt  // lt = tstop
  421fec:	b	421240 <_obstack_memory_used@@Base+0xa458>
  421ff0:	ldr	x27, [sp, #176]
  421ff4:	mov	x0, x19
  421ff8:	bl	402660 <free@plt>
  421ffc:	mov	w21, #0xc                   	// #12
  422000:	str	w21, [sp, #132]
  422004:	ldp	x23, x24, [sp, #48]
  422008:	b	42160c <_obstack_memory_used@@Base+0xa824>
  42200c:	mov	x0, x19
  422010:	bl	402660 <free@plt>
  422014:	mov	x0, x20
  422018:	bl	402660 <free@plt>
  42201c:	b	42203c <_obstack_memory_used@@Base+0xb254>
  422020:	mov	x20, #0x0                   	// #0
  422024:	mov	x0, x19
  422028:	bl	402660 <free@plt>
  42202c:	mov	x0, x20
  422030:	bl	402660 <free@plt>
  422034:	cmp	w21, #0x1
  422038:	b.ne	4220c4 <_obstack_memory_used@@Base+0xb2dc>  // b.any
  42203c:	add	x0, sp, #0x148
  422040:	bl	41aabc <_obstack_memory_used@@Base+0x3cd4>
  422044:	ldr	x0, [sp, #584]
  422048:	ldr	w1, [sp, #192]
  42204c:	add	x0, x0, w1, sxtw
  422050:	str	x0, [sp, #584]
  422054:	ldr	x1, [sp, #144]
  422058:	cmp	x0, x1
  42205c:	ccmp	x0, x25, #0x0, ge  // ge = tcont
  422060:	b.gt	421d34 <_obstack_memory_used@@Base+0xaf4c>
  422064:	ldr	w0, [sp, #184]
  422068:	cmp	w0, #0x7
  42206c:	b.eq	42141c <_obstack_memory_used@@Base+0xa634>  // b.none
  422070:	b.gt	4214fc <_obstack_memory_used@@Base+0xa714>
  422074:	cmp	w0, #0x5
  422078:	b.le	421400 <_obstack_memory_used@@Base+0xa618>
  42207c:	ldr	w0, [sp, #184]
  422080:	cmp	w0, #0x6
  422084:	b.ne	421408 <_obstack_memory_used@@Base+0xa620>  // b.any
  422088:	ldr	x0, [sp, #584]
  42208c:	ldr	w2, [sp, #196]
  422090:	mov	w3, #0x1                   	// #1
  422094:	cmp	x25, x0
  422098:	b.le	4214f0 <_obstack_memory_used@@Base+0xa708>
  42209c:	ldr	x4, [sp, #168]
  4220a0:	ldrb	w1, [x4, x0]
  4220a4:	ldrb	w1, [x26, x1]
  4220a8:	cbnz	w1, 4215b4 <_obstack_memory_used@@Base+0xa7cc>
  4220ac:	add	x0, x0, #0x1
  4220b0:	mov	w2, w3
  4220b4:	cmp	x0, x25
  4220b8:	b.ne	4220a0 <_obstack_memory_used@@Base+0xb2b8>  // b.any
  4220bc:	str	x25, [sp, #584]
  4220c0:	b	42145c <_obstack_memory_used@@Base+0xa674>
  4220c4:	ldr	x27, [sp, #176]
  4220c8:	b	422000 <_obstack_memory_used@@Base+0xb218>
  4220cc:	mov	x2, x28
  4220d0:	ldr	x0, [sp, #512]
  4220d4:	ldr	x1, [x0, x28, lsl #3]
  4220d8:	add	x0, sp, #0x148
  4220dc:	bl	41b27c <_obstack_memory_used@@Base+0x4494>
  4220e0:	str	x0, [sp, #504]
  4220e4:	ldr	x0, [sp, #176]
  4220e8:	ldrb	w0, [x0, #176]
  4220ec:	tbnz	w0, #0, 422118 <_obstack_memory_used@@Base+0xb330>
  4220f0:	b	42210c <_obstack_memory_used@@Base+0xb324>
  4220f4:	mov	x2, x28
  4220f8:	ldr	x0, [sp, #512]
  4220fc:	ldr	x1, [x0, x28, lsl #3]
  422100:	add	x0, sp, #0x148
  422104:	bl	41b27c <_obstack_memory_used@@Base+0x4494>
  422108:	str	x0, [sp, #504]
  42210c:	ldr	x0, [sp, #176]
  422110:	ldr	x0, [x0, #152]
  422114:	cbz	x0, 421d48 <_obstack_memory_used@@Base+0xaf60>
  422118:	ldr	x24, [sp, #480]
  42211c:	ldr	x22, [sp, #504]
  422120:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  422124:	cmp	x28, x0
  422128:	b.hi	421f94 <_obstack_memory_used@@Base+0xb1ac>  // b.pmore
  42212c:	add	x20, x28, #0x1
  422130:	lsl	x20, x20, #3
  422134:	mov	x0, x20
  422138:	bl	4023f0 <malloc@plt>
  42213c:	mov	x19, x0
  422140:	cbz	x0, 421ff0 <_obstack_memory_used@@Base+0xb208>
  422144:	ldr	x0, [x24, #152]
  422148:	cbz	x0, 421cd8 <_obstack_memory_used@@Base+0xaef0>
  42214c:	mov	x0, x20
  422150:	bl	4023f0 <malloc@plt>
  422154:	mov	x20, x0
  422158:	cbz	x0, 421ff0 <_obstack_memory_used@@Base+0xb208>
  42215c:	add	x27, x28, #0x1
  422160:	lsl	x2, x27, #3
  422164:	mov	w1, #0x0                   	// #0
  422168:	mov	x0, x20
  42216c:	bl	4024c0 <memset@plt>
  422170:	str	x19, [sp, #272]
  422174:	str	x20, [sp, #280]
  422178:	str	x22, [sp, #288]
  42217c:	str	x28, [sp, #296]
  422180:	stp	xzr, xzr, [sp, #304]
  422184:	str	xzr, [sp, #320]
  422188:	add	x1, sp, #0x110
  42218c:	add	x0, sp, #0x148
  422190:	bl	420dec <_obstack_memory_used@@Base+0xa004>
  422194:	mov	w21, w0
  422198:	ldr	x0, [sp, #320]
  42219c:	bl	402660 <free@plt>
  4221a0:	cbnz	w21, 422024 <_obstack_memory_used@@Base+0xb23c>
  4221a4:	ldr	x0, [x19]
  4221a8:	cbnz	x0, 421cac <_obstack_memory_used@@Base+0xaec4>
  4221ac:	ldr	x0, [x20]
  4221b0:	cbnz	x0, 421cac <_obstack_memory_used@@Base+0xaec4>
  4221b4:	subs	x28, x28, #0x1
  4221b8:	b.mi	42200c <_obstack_memory_used@@Base+0xb224>  // b.first
  4221bc:	ldr	x2, [sp, #512]
  4221c0:	b	421c88 <_obstack_memory_used@@Base+0xaea0>
  4221c4:	ldr	x25, [sp, #136]
  4221c8:	ldr	w0, [sp, #264]
  4221cc:	cbz	w0, 421ba8 <_obstack_memory_used@@Base+0xadc0>
  4221d0:	ldr	x27, [sp, #176]
  4221d4:	b	421fac <_obstack_memory_used@@Base+0xb1c4>
  4221d8:	stp	x29, x30, [sp, #-288]!
  4221dc:	mov	x29, sp
  4221e0:	stp	x19, x20, [sp, #16]
  4221e4:	stp	x21, x22, [sp, #32]
  4221e8:	stp	x23, x24, [sp, #48]
  4221ec:	mov	x20, x0
  4221f0:	mov	x24, x1
  4221f4:	mov	x21, x2
  4221f8:	mov	x23, x3
  4221fc:	str	wzr, [sp, #284]
  422200:	ldrb	w0, [x0, #56]
  422204:	str	x3, [x20, #24]
  422208:	str	xzr, [x20, #16]
  42220c:	str	xzr, [x20, #48]
  422210:	mov	w1, #0xffffff90            	// #-112
  422214:	and	w0, w0, w1
  422218:	strb	w0, [x20, #56]
  42221c:	ldr	x19, [x20]
  422220:	ldr	x0, [x20, #8]
  422224:	cmp	x0, #0xe7
  422228:	b.ls	422474 <_obstack_memory_used@@Base+0xb68c>  // b.plast
  42222c:	mov	x2, #0xe8                  	// #232
  422230:	str	x2, [x20, #16]
  422234:	mov	w1, #0x0                   	// #0
  422238:	mov	x0, x19
  42223c:	bl	4024c0 <memset@plt>
  422240:	mov	w0, #0xf                   	// #15
  422244:	str	w0, [x19, #128]
  422248:	mov	x0, #0x5555555555555555    	// #6148914691236517205
  42224c:	movk	x0, #0x555, lsl #48
  422250:	cmp	x21, x0
  422254:	b.cs	422ca4 <_obstack_memory_used@@Base+0xbebc>  // b.hs, b.nlast
  422258:	stp	x25, x26, [sp, #64]
  42225c:	add	x0, x21, #0x1
  422260:	str	x0, [x19, #8]
  422264:	lsl	x0, x0, #4
  422268:	bl	4023f0 <malloc@plt>
  42226c:	str	x0, [x19]
  422270:	cbz	x21, 422498 <_obstack_memory_used@@Base+0xb6b0>
  422274:	mov	x22, #0x1                   	// #1
  422278:	lsl	x22, x22, #1
  42227c:	cmp	x21, x22
  422280:	b.cs	422278 <_obstack_memory_used@@Base+0xb490>  // b.hs, b.nlast
  422284:	mov	x1, x22
  422288:	mov	x0, #0x18                  	// #24
  42228c:	bl	4024d0 <calloc@plt>
  422290:	str	x0, [x19, #64]
  422294:	sub	x22, x22, #0x1
  422298:	str	x22, [x19, #136]
  42229c:	bl	402670 <__ctype_get_mb_cur_max@plt>
  4222a0:	str	w0, [x19, #180]
  4222a4:	mov	w0, #0xe                   	// #14
  4222a8:	bl	4023b0 <nl_langinfo@plt>
  4222ac:	ldrb	w1, [x0]
  4222b0:	and	w1, w1, #0xffffffdf
  4222b4:	and	w1, w1, #0xff
  4222b8:	cmp	w1, #0x55
  4222bc:	b.ne	422318 <_obstack_memory_used@@Base+0xb530>  // b.any
  4222c0:	ldrb	w1, [x0, #1]
  4222c4:	and	w1, w1, #0xffffffdf
  4222c8:	and	w1, w1, #0xff
  4222cc:	cmp	w1, #0x54
  4222d0:	b.ne	422318 <_obstack_memory_used@@Base+0xb530>  // b.any
  4222d4:	ldrb	w1, [x0, #2]
  4222d8:	and	w1, w1, #0xffffffdf
  4222dc:	and	w1, w1, #0xff
  4222e0:	cmp	w1, #0x46
  4222e4:	b.ne	422318 <_obstack_memory_used@@Base+0xb530>  // b.any
  4222e8:	ldrb	w1, [x0, #3]
  4222ec:	cmp	w1, #0x2d
  4222f0:	cset	x2, eq  // eq = none
  4222f4:	add	x2, x2, #0x3
  4222f8:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x10218>
  4222fc:	add	x1, x1, #0x220
  422300:	add	x0, x0, x2
  422304:	bl	402640 <strcmp@plt>
  422308:	cbnz	w0, 422318 <_obstack_memory_used@@Base+0xb530>
  42230c:	ldrb	w0, [x19, #176]
  422310:	orr	w0, w0, #0x4
  422314:	strb	w0, [x19, #176]
  422318:	ldrb	w0, [x19, #176]
  42231c:	and	w0, w0, #0xfffffff7
  422320:	strb	w0, [x19, #176]
  422324:	ldr	w0, [x19, #180]
  422328:	cmp	w0, #0x1
  42232c:	b.le	422344 <_obstack_memory_used@@Base+0xb55c>
  422330:	ldrb	w0, [x19, #176]
  422334:	tbz	w0, #2, 4224a0 <_obstack_memory_used@@Base+0xb6b8>
  422338:	adrp	x0, 426000 <_obstack_memory_used@@Base+0xf218>
  42233c:	add	x0, x0, #0xff0
  422340:	str	x0, [x19, #120]
  422344:	ldr	x0, [x19]
  422348:	cbz	x0, 422ca0 <_obstack_memory_used@@Base+0xbeb8>
  42234c:	ldr	x0, [x19, #64]
  422350:	cbz	x0, 4224e4 <_obstack_memory_used@@Base+0xb6fc>
  422354:	str	wzr, [sp, #284]
  422358:	mov	x22, x21
  42235c:	ldr	x0, [x20, #40]
  422360:	ands	x25, x23, #0x400000
  422364:	orr	x26, x0, x25
  422368:	stp	xzr, xzr, [sp, #136]
  42236c:	stp	xzr, xzr, [sp, #152]
  422370:	stp	xzr, xzr, [sp, #168]
  422374:	stp	xzr, xzr, [sp, #184]
  422378:	stp	xzr, xzr, [sp, #200]
  42237c:	stp	xzr, xzr, [sp, #216]
  422380:	stp	xzr, xzr, [sp, #232]
  422384:	stp	xzr, xzr, [sp, #248]
  422388:	add	x1, sp, #0x200
  42238c:	stp	xzr, xzr, [x1, #-248]
  422390:	str	x24, [sp, #128]
  422394:	str	x21, [sp, #216]
  422398:	str	x21, [sp, #208]
  42239c:	str	x0, [sp, #248]
  4223a0:	cset	w0, ne  // ne = any
  4223a4:	strb	w0, [sp, #264]
  4223a8:	cmp	x26, #0x0
  4223ac:	cset	w0, ne  // ne = any
  4223b0:	strb	w0, [sp, #267]
  4223b4:	ldr	w0, [x19, #180]
  4223b8:	str	w0, [sp, #272]
  4223bc:	ldrb	w0, [x19, #176]
  4223c0:	ubfx	x1, x0, #2, #1
  4223c4:	strb	w1, [sp, #265]
  4223c8:	ubfx	x0, x0, #3, #1
  4223cc:	strb	w0, [sp, #266]
  4223d0:	str	x21, [sp, #232]
  4223d4:	str	x21, [sp, #224]
  4223d8:	cmp	x21, #0x0
  4223dc:	b.gt	4224ec <_obstack_memory_used@@Base+0xb704>
  4223e0:	ldrb	w0, [sp, #267]
  4223e4:	cmp	w0, #0x0
  4223e8:	ldr	x0, [sp, #136]
  4223ec:	csel	x24, x0, x24, ne  // ne = any
  4223f0:	str	x24, [sp, #136]
  4223f4:	cbz	x25, 42250c <_obstack_memory_used@@Base+0xb724>
  4223f8:	ldr	w0, [x19, #180]
  4223fc:	cmp	w0, #0x1
  422400:	b.le	422500 <_obstack_memory_used@@Base+0xb718>
  422404:	add	x0, sp, #0x80
  422408:	bl	418524 <_obstack_memory_used@@Base+0x173c>
  42240c:	cbnz	w0, 422444 <_obstack_memory_used@@Base+0xb65c>
  422410:	ldr	x0, [sp, #184]
  422414:	cmp	x22, x0
  422418:	b.le	422530 <_obstack_memory_used@@Base+0xb748>
  42241c:	ldr	x1, [sp, #192]
  422420:	ldrsw	x0, [x19, #180]
  422424:	ldr	x2, [sp, #176]
  422428:	add	x0, x0, x2
  42242c:	cmp	x1, x0
  422430:	b.gt	422530 <_obstack_memory_used@@Base+0xb748>
  422434:	lsl	x1, x1, #1
  422438:	add	x0, sp, #0x80
  42243c:	bl	417a44 <_obstack_memory_used@@Base+0xc5c>
  422440:	cbz	w0, 422404 <_obstack_memory_used@@Base+0xb61c>
  422444:	str	w0, [sp, #284]
  422448:	mov	x0, x20
  42244c:	bl	41a6cc <_obstack_memory_used@@Base+0x38e4>
  422450:	add	x0, sp, #0x80
  422454:	bl	41a71c <_obstack_memory_used@@Base+0x3934>
  422458:	mov	x0, x19
  42245c:	bl	41a75c <_obstack_memory_used@@Base+0x3974>
  422460:	str	xzr, [x20]
  422464:	str	xzr, [x20, #8]
  422468:	ldr	w0, [sp, #284]
  42246c:	ldp	x25, x26, [sp, #64]
  422470:	b	422b84 <_obstack_memory_used@@Base+0xbd9c>
  422474:	mov	x1, #0xe8                  	// #232
  422478:	mov	x0, x19
  42247c:	bl	402500 <realloc@plt>
  422480:	mov	x19, x0
  422484:	cbz	x0, 422c24 <_obstack_memory_used@@Base+0xbe3c>
  422488:	mov	x0, #0xe8                  	// #232
  42248c:	str	x0, [x20, #8]
  422490:	str	x19, [x20]
  422494:	b	42222c <_obstack_memory_used@@Base+0xb444>
  422498:	mov	x22, #0x1                   	// #1
  42249c:	b	422284 <_obstack_memory_used@@Base+0xb49c>
  4224a0:	mov	x1, #0x1                   	// #1
  4224a4:	mov	x0, #0x20                  	// #32
  4224a8:	bl	4024d0 <calloc@plt>
  4224ac:	str	x0, [x19, #120]
  4224b0:	cbz	x0, 422c98 <_obstack_memory_used@@Base+0xbeb0>
  4224b4:	str	x27, [sp, #80]
  4224b8:	mov	x25, #0x0                   	// #0
  4224bc:	mov	x27, #0x1                   	// #1
  4224c0:	b	4224d0 <_obstack_memory_used@@Base+0xb6e8>
  4224c4:	add	x25, x25, #0x8
  4224c8:	cmp	x25, #0x20
  4224cc:	b.eq	4224dc <_obstack_memory_used@@Base+0xb6f4>  // b.none
  4224d0:	lsl	w22, w25, #3
  4224d4:	mov	w26, #0x0                   	// #0
  4224d8:	b	422ce8 <_obstack_memory_used@@Base+0xbf00>
  4224dc:	ldr	x27, [sp, #80]
  4224e0:	b	422344 <_obstack_memory_used@@Base+0xb55c>
  4224e4:	ldp	x25, x26, [sp, #64]
  4224e8:	b	422ca4 <_obstack_memory_used@@Base+0xbebc>
  4224ec:	add	x1, x21, #0x1
  4224f0:	add	x0, sp, #0x80
  4224f4:	bl	417a44 <_obstack_memory_used@@Base+0xc5c>
  4224f8:	cbz	w0, 4223e0 <_obstack_memory_used@@Base+0xb5f8>
  4224fc:	b	422444 <_obstack_memory_used@@Base+0xb65c>
  422500:	add	x0, sp, #0x80
  422504:	bl	4182b8 <_obstack_memory_used@@Base+0x14d0>
  422508:	b	422530 <_obstack_memory_used@@Base+0xb748>
  42250c:	ldr	w0, [x19, #180]
  422510:	cmp	w0, #0x1
  422514:	b.gt	422528 <_obstack_memory_used@@Base+0xb740>
  422518:	cbz	x26, 422724 <_obstack_memory_used@@Base+0xb93c>
  42251c:	add	x0, sp, #0x80
  422520:	bl	416e88 <_obstack_memory_used@@Base+0xa0>
  422524:	b	422530 <_obstack_memory_used@@Base+0xb748>
  422528:	add	x0, sp, #0x80
  42252c:	bl	418350 <_obstack_memory_used@@Base+0x1568>
  422530:	str	wzr, [sp, #284]
  422534:	str	xzr, [x20, #48]
  422538:	ldr	x24, [x20]
  42253c:	str	x23, [x24, #216]
  422540:	orr	x2, x23, #0x800000
  422544:	add	x1, sp, #0x80
  422548:	add	x0, sp, #0x68
  42254c:	bl	41996c <_obstack_memory_used@@Base+0x2b84>
  422550:	add	x5, sp, #0x11c
  422554:	mov	x4, #0x0                   	// #0
  422558:	mov	x3, x23
  42255c:	add	x2, sp, #0x68
  422560:	mov	x1, x20
  422564:	add	x0, sp, #0x80
  422568:	bl	41f14c <_obstack_memory_used@@Base+0x8364>
  42256c:	mov	x21, x0
  422570:	ldr	w0, [sp, #284]
  422574:	cmp	w0, #0x0
  422578:	ccmp	x21, #0x0, #0x0, ne  // ne = any
  42257c:	b.eq	42273c <_obstack_memory_used@@Base+0xb954>  // b.none
  422580:	mov	w3, #0x2                   	// #2
  422584:	mov	x2, #0x0                   	// #0
  422588:	mov	x1, #0x0                   	// #0
  42258c:	mov	x0, x24
  422590:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  422594:	mov	x22, x0
  422598:	cbz	x21, 4225b0 <_obstack_memory_used@@Base+0xb7c8>
  42259c:	mov	w3, #0x10                  	// #16
  4225a0:	mov	x2, x0
  4225a4:	mov	x1, x21
  4225a8:	mov	x0, x24
  4225ac:	bl	417cd0 <_obstack_memory_used@@Base+0xee8>
  4225b0:	cmp	x22, #0x0
  4225b4:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  4225b8:	b.eq	422734 <_obstack_memory_used@@Base+0xb94c>  // b.none
  4225bc:	str	x0, [x19, #104]
  4225c0:	ldr	x21, [x20]
  4225c4:	ldr	x22, [x21, #8]
  4225c8:	lsl	x23, x22, #3
  4225cc:	mov	x0, x23
  4225d0:	bl	4023f0 <malloc@plt>
  4225d4:	mov	x24, x0
  4225d8:	str	x0, [x21, #24]
  4225dc:	mov	x0, x23
  4225e0:	bl	4023f0 <malloc@plt>
  4225e4:	mov	x23, x0
  4225e8:	str	x0, [x21, #32]
  4225ec:	add	x22, x22, x22, lsl #1
  4225f0:	lsl	x22, x22, #3
  4225f4:	mov	x0, x22
  4225f8:	bl	4023f0 <malloc@plt>
  4225fc:	mov	x26, x0
  422600:	str	x0, [x21, #40]
  422604:	mov	x0, x22
  422608:	bl	4023f0 <malloc@plt>
  42260c:	str	x0, [x21, #48]
  422610:	cmp	x24, #0x0
  422614:	ccmp	x23, #0x0, #0x4, ne  // ne = any
  422618:	cset	w24, eq  // eq = none
  42261c:	cmp	x26, #0x0
  422620:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  422624:	csinc	w24, w24, wzr, ne  // ne = any
  422628:	cbnz	w24, 422c84 <_obstack_memory_used@@Base+0xbe9c>
  42262c:	ldr	x0, [x20, #48]
  422630:	lsl	x0, x0, #3
  422634:	bl	4023f0 <malloc@plt>
  422638:	str	x0, [x21, #224]
  42263c:	cbz	x0, 4226b4 <_obstack_memory_used@@Base+0xb8cc>
  422640:	ldr	x0, [x20, #48]
  422644:	cbz	x0, 422664 <_obstack_memory_used@@Base+0xb87c>
  422648:	mov	x0, #0x0                   	// #0
  42264c:	ldr	x1, [x21, #224]
  422650:	str	x0, [x1, x0, lsl #3]
  422654:	add	x0, x0, #0x1
  422658:	ldr	x1, [x20, #48]
  42265c:	cmp	x0, x1
  422660:	b.cc	42264c <_obstack_memory_used@@Base+0xb864>  // b.lo, b.ul, b.last
  422664:	mov	x2, x21
  422668:	adrp	x1, 416000 <wcrtomb@plt+0x13730>
  42266c:	add	x1, x1, #0xfec
  422670:	ldr	x0, [x21, #104]
  422674:	bl	4179d0 <_obstack_memory_used@@Base+0xbe8>
  422678:	ldr	x3, [x20, #48]
  42267c:	cbz	x3, 422744 <_obstack_memory_used@@Base+0xb95c>
  422680:	ldr	x5, [x21, #224]
  422684:	mov	x4, x3
  422688:	mov	x0, #0x0                   	// #0
  42268c:	mov	x1, x0
  422690:	ldr	x2, [x5, x0, lsl #3]
  422694:	cmp	x0, x2
  422698:	b.ne	4226ac <_obstack_memory_used@@Base+0xb8c4>  // b.any
  42269c:	add	x0, x0, #0x1
  4226a0:	mov	x1, x0
  4226a4:	cmp	x4, x0
  4226a8:	b.ne	42268c <_obstack_memory_used@@Base+0xb8a4>  // b.any
  4226ac:	cmp	x1, x3
  4226b0:	b.eq	422744 <_obstack_memory_used@@Base+0xb95c>  // b.none
  4226b4:	mov	x2, x20
  4226b8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x218>
  4226bc:	add	x1, x1, #0xe4c
  4226c0:	ldr	x0, [x21, #104]
  4226c4:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  4226c8:	cbnz	w0, 422c90 <_obstack_memory_used@@Base+0xbea8>
  4226cc:	mov	x2, x21
  4226d0:	adrp	x1, 419000 <_obstack_memory_used@@Base+0x2218>
  4226d4:	add	x1, x1, #0xd00
  4226d8:	ldr	x0, [x21, #104]
  4226dc:	bl	41795c <_obstack_memory_used@@Base+0xb74>
  4226e0:	cbnz	w0, 422c90 <_obstack_memory_used@@Base+0xbea8>
  4226e4:	mov	x2, x21
  4226e8:	adrp	x1, 417000 <_obstack_memory_used@@Base+0x218>
  4226ec:	add	x1, x1, #0x90
  4226f0:	ldr	x0, [x21, #104]
  4226f4:	bl	4179d0 <_obstack_memory_used@@Base+0xbe8>
  4226f8:	mov	x2, x21
  4226fc:	adrp	x1, 41a000 <_obstack_memory_used@@Base+0x3218>
  422700:	add	x1, x1, #0xc04
  422704:	ldr	x0, [x21, #104]
  422708:	bl	4179d0 <_obstack_memory_used@@Base+0xbe8>
  42270c:	cbnz	w0, 422c90 <_obstack_memory_used@@Base+0xbea8>
  422710:	str	x27, [sp, #80]
  422714:	mov	w26, w24
  422718:	mov	x22, #0x0                   	// #0
  42271c:	mov	w27, #0x1                   	// #1
  422720:	b	422780 <_obstack_memory_used@@Base+0xb998>
  422724:	ldr	x0, [sp, #192]
  422728:	str	x0, [sp, #176]
  42272c:	str	x0, [sp, #184]
  422730:	b	422530 <_obstack_memory_used@@Base+0xb748>
  422734:	mov	w0, #0xc                   	// #12
  422738:	str	w0, [sp, #284]
  42273c:	str	xzr, [x19, #104]
  422740:	b	422448 <_obstack_memory_used@@Base+0xb660>
  422744:	ldr	x0, [x21, #224]
  422748:	bl	402660 <free@plt>
  42274c:	str	xzr, [x21, #224]
  422750:	b	4226b4 <_obstack_memory_used@@Base+0xb8cc>
  422754:	cbz	w26, 4227c4 <_obstack_memory_used@@Base+0xb9dc>
  422758:	mov	w26, w24
  42275c:	mov	x22, #0x0                   	// #0
  422760:	b	422780 <_obstack_memory_used@@Base+0xb998>
  422764:	ldr	x0, [sp, #120]
  422768:	bl	402660 <free@plt>
  42276c:	mov	w26, #0x1                   	// #1
  422770:	add	x22, x22, #0x1
  422774:	ldr	x0, [x21, #16]
  422778:	cmp	x0, x22
  42277c:	b.eq	422754 <_obstack_memory_used@@Base+0xb96c>  // b.none
  422780:	add	x23, x22, x22, lsl #1
  422784:	lsl	x23, x23, #3
  422788:	ldr	x0, [x21, #48]
  42278c:	add	x0, x0, x23
  422790:	ldr	x0, [x0, #8]
  422794:	cbnz	x0, 422770 <_obstack_memory_used@@Base+0xb988>
  422798:	mov	w3, w27
  42279c:	mov	x2, x22
  4227a0:	mov	x1, x21
  4227a4:	add	x0, sp, #0x68
  4227a8:	bl	41a14c <_obstack_memory_used@@Base+0x3364>
  4227ac:	cbnz	w0, 422c8c <_obstack_memory_used@@Base+0xbea4>
  4227b0:	ldr	x0, [x21, #48]
  4227b4:	add	x23, x0, x23
  4227b8:	ldr	x0, [x23, #8]
  4227bc:	cbnz	x0, 422770 <_obstack_memory_used@@Base+0xb988>
  4227c0:	b	422764 <_obstack_memory_used@@Base+0xb97c>
  4227c4:	ldrb	w0, [x20, #56]
  4227c8:	tbz	w0, #4, 4228f8 <_obstack_memory_used@@Base+0xbb10>
  4227cc:	ldr	x0, [x21, #152]
  4227d0:	cbz	x0, 422890 <_obstack_memory_used@@Base+0xbaa8>
  4227d4:	ldr	x22, [x21, #16]
  4227d8:	add	x0, x22, x22, lsl #1
  4227dc:	lsl	x0, x0, #3
  4227e0:	bl	4023f0 <malloc@plt>
  4227e4:	str	x0, [x21, #56]
  4227e8:	cbz	x0, 422c6c <_obstack_memory_used@@Base+0xbe84>
  4227ec:	cbz	x22, 422890 <_obstack_memory_used@@Base+0xbaa8>
  4227f0:	mov	x2, #0x0                   	// #0
  4227f4:	mov	x1, #0x0                   	// #0
  4227f8:	ldr	x0, [x21, #56]
  4227fc:	add	x0, x0, x2
  422800:	stp	xzr, xzr, [x0]
  422804:	str	xzr, [x0, #16]
  422808:	add	x1, x1, #0x1
  42280c:	ldr	x0, [x21, #16]
  422810:	add	x2, x2, #0x18
  422814:	cmp	x0, x1
  422818:	b.hi	4227f8 <_obstack_memory_used@@Base+0xba10>  // b.pmore
  42281c:	cbz	x0, 422890 <_obstack_memory_used@@Base+0xbaa8>
  422820:	mov	x23, #0x0                   	// #0
  422824:	mov	x24, #0x0                   	// #0
  422828:	ldr	x0, [x21, #48]
  42282c:	add	x0, x0, x23
  422830:	ldr	x27, [x0, #16]
  422834:	ldr	x0, [x0, #8]
  422838:	cmp	x0, #0x0
  42283c:	b.le	42287c <_obstack_memory_used@@Base+0xba94>
  422840:	mov	x22, #0x0                   	// #0
  422844:	ldr	x0, [x27, x22, lsl #3]
  422848:	add	x0, x0, x0, lsl #1
  42284c:	ldr	x2, [x21, #56]
  422850:	mov	x1, x24
  422854:	add	x0, x2, x0, lsl #3
  422858:	bl	417af0 <_obstack_memory_used@@Base+0xd08>
  42285c:	and	w0, w0, #0xff
  422860:	cbz	w0, 422c78 <_obstack_memory_used@@Base+0xbe90>
  422864:	add	x22, x22, #0x1
  422868:	ldr	x0, [x21, #48]
  42286c:	add	x0, x0, x23
  422870:	ldr	x0, [x0, #8]
  422874:	cmp	x22, x0
  422878:	b.lt	422844 <_obstack_memory_used@@Base+0xba5c>  // b.tstop
  42287c:	add	x24, x24, #0x1
  422880:	add	x23, x23, #0x18
  422884:	ldr	x0, [x21, #16]
  422888:	cmp	x24, x0
  42288c:	b.cc	422828 <_obstack_memory_used@@Base+0xba40>  // b.lo, b.ul, b.last
  422890:	str	wzr, [sp, #284]
  422894:	ldrb	w1, [x19, #176]
  422898:	ubfx	x1, x1, #2, #1
  42289c:	cmp	x25, #0x0
  4228a0:	csel	w1, w1, wzr, eq  // eq = none
  4228a4:	cbnz	w1, 42290c <_obstack_memory_used@@Base+0xbb24>
  4228a8:	ldr	x0, [x19, #104]
  4228ac:	ldr	x0, [x0, #24]
  4228b0:	ldr	x1, [x0, #56]
  4228b4:	str	x1, [x19, #144]
  4228b8:	add	x1, x1, x1, lsl #1
  4228bc:	ldr	x0, [x19, #48]
  4228c0:	add	x1, x0, x1, lsl #3
  4228c4:	add	x0, sp, #0x68
  4228c8:	bl	418e8c <_obstack_memory_used@@Base+0x20a4>
  4228cc:	mov	w22, w0
  4228d0:	str	w0, [sp, #100]
  4228d4:	cbnz	w0, 422b5c <_obstack_memory_used@@Base+0xbd74>
  4228d8:	ldr	x0, [x19, #152]
  4228dc:	cmp	x0, #0x0
  4228e0:	b.le	422b24 <_obstack_memory_used@@Base+0xbd3c>
  4228e4:	ldr	x3, [sp, #112]
  4228e8:	cmp	x3, #0x0
  4228ec:	b.le	422b24 <_obstack_memory_used@@Base+0xbd3c>
  4228f0:	mov	x21, #0x0                   	// #0
  4228f4:	b	422ad0 <_obstack_memory_used@@Base+0xbce8>
  4228f8:	ldr	x0, [x20, #48]
  4228fc:	cbz	x0, 4227cc <_obstack_memory_used@@Base+0xb9e4>
  422900:	ldrb	w0, [x21, #176]
  422904:	tbnz	w0, #0, 4227d4 <_obstack_memory_used@@Base+0xb9ec>
  422908:	b	4227cc <_obstack_memory_used@@Base+0xb9e4>
  42290c:	ldr	x0, [x20, #40]
  422910:	cbnz	x0, 4228a8 <_obstack_memory_used@@Base+0xbac0>
  422914:	ldr	x6, [x19, #16]
  422918:	cbz	x6, 422a54 <_obstack_memory_used@@Base+0xbc6c>
  42291c:	ldr	x4, [x19]
  422920:	mov	w8, w26
  422924:	mov	x5, #0x0                   	// #0
  422928:	mov	w9, w1
  42292c:	mov	x3, #0x1                   	// #1
  422930:	mov	w2, #0x10001               	// #65537
  422934:	movk	x2, #0x1, lsl #48
  422938:	b	422954 <_obstack_memory_used@@Base+0xbb6c>
  42293c:	cmp	w0, #0x2
  422940:	b.ne	4229a4 <_obstack_memory_used@@Base+0xbbbc>  // b.any
  422944:	add	x5, x5, #0x1
  422948:	add	x4, x4, #0x10
  42294c:	cmp	x6, x5
  422950:	b.eq	422c2c <_obstack_memory_used@@Base+0xbe44>  // b.none
  422954:	ldrb	w0, [x4, #8]
  422958:	cmp	w0, #0x5
  42295c:	b.eq	4229fc <_obstack_memory_used@@Base+0xbc14>  // b.none
  422960:	b.hi	42298c <_obstack_memory_used@@Base+0xbba4>  // b.pmore
  422964:	cmp	w0, #0x3
  422968:	b.eq	4229e4 <_obstack_memory_used@@Base+0xbbfc>  // b.none
  42296c:	cmp	w0, #0x3
  422970:	b.hi	422944 <_obstack_memory_used@@Base+0xbb5c>  // b.pmore
  422974:	cmp	w0, #0x1
  422978:	b.ne	42293c <_obstack_memory_used@@Base+0xbb54>  // b.any
  42297c:	ldrsb	w0, [x4]
  422980:	cmp	w0, #0x0
  422984:	csel	w26, w26, w1, ge  // ge = tcont
  422988:	b	422944 <_obstack_memory_used@@Base+0xbb5c>
  42298c:	cmp	w0, #0xb
  422990:	b.hi	4229a8 <_obstack_memory_used@@Base+0xbbc0>  // b.pmore
  422994:	cmp	w0, #0x7
  422998:	b.hi	422944 <_obstack_memory_used@@Base+0xbb5c>  // b.pmore
  42299c:	cmp	w0, #0x6
  4229a0:	b.eq	4228a8 <_obstack_memory_used@@Base+0xbac0>  // b.none
  4229a4:	bl	4025a0 <abort@plt>
  4229a8:	cmp	w0, #0xc
  4229ac:	b.ne	4229a4 <_obstack_memory_used@@Base+0xbbbc>  // b.any
  4229b0:	ldr	w0, [x4]
  4229b4:	cmp	w0, #0x40
  4229b8:	b.hi	4229d8 <_obstack_memory_used@@Base+0xbbf0>  // b.pmore
  4229bc:	cmp	w0, #0xf
  4229c0:	b.ls	4228a8 <_obstack_memory_used@@Base+0xbac0>  // b.plast
  4229c4:	sub	w0, w0, #0x10
  4229c8:	lsl	x0, x3, x0
  4229cc:	tst	x0, x2
  4229d0:	b.eq	4228a8 <_obstack_memory_used@@Base+0xbac0>  // b.none
  4229d4:	b	422944 <_obstack_memory_used@@Base+0xbb5c>
  4229d8:	cmp	w0, #0x80
  4229dc:	b.eq	422944 <_obstack_memory_used@@Base+0xbb5c>  // b.none
  4229e0:	b	4228a8 <_obstack_memory_used@@Base+0xbac0>
  4229e4:	ldr	x0, [x4]
  4229e8:	ldr	x7, [x0, #16]
  4229ec:	cbnz	x7, 4228a8 <_obstack_memory_used@@Base+0xbac0>
  4229f0:	ldr	x0, [x0, #24]
  4229f4:	cbz	x0, 422944 <_obstack_memory_used@@Base+0xbb5c>
  4229f8:	b	4228a8 <_obstack_memory_used@@Base+0xbac0>
  4229fc:	mov	w8, w9
  422a00:	b	422944 <_obstack_memory_used@@Base+0xbb5c>
  422a04:	ldrsb	w1, [x4, x3]
  422a08:	tbnz	w1, #31, 422a44 <_obstack_memory_used@@Base+0xbc5c>
  422a0c:	add	x0, x0, #0x1
  422a10:	ldr	x1, [x19, #16]
  422a14:	cmp	x0, x1
  422a18:	b.cs	422c40 <_obstack_memory_used@@Base+0xbe58>  // b.hs, b.nlast
  422a1c:	lsl	x3, x0, #4
  422a20:	ldr	x4, [x19]
  422a24:	add	x2, x4, x3
  422a28:	ldrb	w1, [x2, #8]
  422a2c:	cmp	w1, #0x1
  422a30:	b.eq	422a04 <_obstack_memory_used@@Base+0xbc1c>  // b.none
  422a34:	cmp	w1, #0x5
  422a38:	b.ne	422a0c <_obstack_memory_used@@Base+0xbc24>  // b.any
  422a3c:	strb	w5, [x2, #8]
  422a40:	b	422a0c <_obstack_memory_used@@Base+0xbc24>
  422a44:	ldrb	w1, [x2, #10]
  422a48:	and	w1, w1, #0xffffffdf
  422a4c:	strb	w1, [x2, #10]
  422a50:	b	422a0c <_obstack_memory_used@@Base+0xbc24>
  422a54:	mov	w8, w26
  422a58:	b	422c40 <_obstack_memory_used@@Base+0xbe58>
  422a5c:	add	x2, x2, #0x1
  422a60:	cmp	x3, x2
  422a64:	b.eq	422ac0 <_obstack_memory_used@@Base+0xbcd8>  // b.none
  422a68:	ldr	x4, [x5, x2, lsl #3]
  422a6c:	lsl	x4, x4, #4
  422a70:	add	x7, x0, x4
  422a74:	ldrb	w7, [x7, #8]
  422a78:	cmp	w7, #0x9
  422a7c:	b.ne	422a5c <_obstack_memory_used@@Base+0xbc74>  // b.any
  422a80:	ldr	x7, [x0, x4]
  422a84:	ldr	x4, [x6]
  422a88:	cmp	x7, x4
  422a8c:	b.ne	422a5c <_obstack_memory_used@@Base+0xbc74>  // b.any
  422a90:	cmp	x2, x3
  422a94:	b.eq	422ac0 <_obstack_memory_used@@Base+0xbcd8>  // b.none
  422a98:	ldr	x0, [x19, #40]
  422a9c:	add	x1, x1, x1, lsl #1
  422aa0:	add	x1, x0, x1, lsl #3
  422aa4:	ldr	x0, [x1, #16]
  422aa8:	ldr	x24, [x0]
  422aac:	mov	x1, x24
  422ab0:	add	x0, sp, #0x68
  422ab4:	bl	416f40 <_obstack_memory_used@@Base+0x158>
  422ab8:	mov	x23, x0
  422abc:	cbz	x0, 422b04 <_obstack_memory_used@@Base+0xbd1c>
  422ac0:	add	x21, x21, #0x1
  422ac4:	ldr	x3, [sp, #112]
  422ac8:	cmp	x3, x21
  422acc:	b.le	422b24 <_obstack_memory_used@@Base+0xbd3c>
  422ad0:	ldr	x5, [sp, #120]
  422ad4:	ldr	x0, [x19]
  422ad8:	ldr	x1, [x5, x21, lsl #3]
  422adc:	add	x6, x0, x1, lsl #4
  422ae0:	ldrb	w2, [x6, #8]
  422ae4:	cmp	w2, #0x4
  422ae8:	b.ne	422ac0 <_obstack_memory_used@@Base+0xbcd8>  // b.any
  422aec:	cmp	x3, #0x0
  422af0:	b.le	422afc <_obstack_memory_used@@Base+0xbd14>
  422af4:	mov	x2, #0x0                   	// #0
  422af8:	b	422a68 <_obstack_memory_used@@Base+0xbc80>
  422afc:	mov	x2, #0x0                   	// #0
  422b00:	b	422a90 <_obstack_memory_used@@Base+0xbca8>
  422b04:	add	x24, x24, x24, lsl #1
  422b08:	ldr	x1, [x19, #48]
  422b0c:	add	x1, x1, x24, lsl #3
  422b10:	add	x0, sp, #0x68
  422b14:	bl	418cdc <_obstack_memory_used@@Base+0x1ef4>
  422b18:	cbnz	w0, 422c08 <_obstack_memory_used@@Base+0xbe20>
  422b1c:	mov	x21, x23
  422b20:	b	422ac0 <_obstack_memory_used@@Base+0xbcd8>
  422b24:	mov	w3, #0x0                   	// #0
  422b28:	add	x2, sp, #0x68
  422b2c:	mov	x1, x19
  422b30:	add	x0, sp, #0x64
  422b34:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  422b38:	str	x0, [x19, #72]
  422b3c:	cbz	x0, 422b98 <_obstack_memory_used@@Base+0xbdb0>
  422b40:	ldrsb	w1, [x0, #104]
  422b44:	tbnz	w1, #31, 422ba0 <_obstack_memory_used@@Base+0xbdb8>
  422b48:	str	x0, [x19, #96]
  422b4c:	str	x0, [x19, #88]
  422b50:	str	x0, [x19, #80]
  422b54:	ldr	x0, [sp, #120]
  422b58:	bl	402660 <free@plt>
  422b5c:	str	w22, [sp, #284]
  422b60:	mov	x0, x20
  422b64:	bl	41a6cc <_obstack_memory_used@@Base+0x38e4>
  422b68:	add	x0, sp, #0x80
  422b6c:	bl	41a71c <_obstack_memory_used@@Base+0x3934>
  422b70:	ldr	w0, [sp, #284]
  422b74:	cbnz	w0, 422c10 <_obstack_memory_used@@Base+0xbe28>
  422b78:	ldr	w0, [sp, #284]
  422b7c:	ldp	x25, x26, [sp, #64]
  422b80:	ldr	x27, [sp, #80]
  422b84:	ldp	x19, x20, [sp, #16]
  422b88:	ldp	x21, x22, [sp, #32]
  422b8c:	ldp	x23, x24, [sp, #48]
  422b90:	ldp	x29, x30, [sp], #288
  422b94:	ret
  422b98:	ldr	w22, [sp, #100]
  422b9c:	b	422b5c <_obstack_memory_used@@Base+0xbd74>
  422ba0:	mov	w3, #0x1                   	// #1
  422ba4:	add	x2, sp, #0x68
  422ba8:	mov	x1, x19
  422bac:	add	x0, sp, #0x64
  422bb0:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  422bb4:	str	x0, [x19, #80]
  422bb8:	mov	w3, #0x2                   	// #2
  422bbc:	add	x2, sp, #0x68
  422bc0:	mov	x1, x19
  422bc4:	add	x0, sp, #0x64
  422bc8:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  422bcc:	str	x0, [x19, #88]
  422bd0:	mov	w3, #0x6                   	// #6
  422bd4:	add	x2, sp, #0x68
  422bd8:	mov	x1, x19
  422bdc:	add	x0, sp, #0x64
  422be0:	bl	41a3fc <_obstack_memory_used@@Base+0x3614>
  422be4:	str	x0, [x19, #96]
  422be8:	ldr	x1, [x19, #80]
  422bec:	cbz	x1, 422c00 <_obstack_memory_used@@Base+0xbe18>
  422bf0:	ldr	x1, [x19, #88]
  422bf4:	cmp	x1, #0x0
  422bf8:	ccmp	x0, #0x0, #0x4, ne  // ne = any
  422bfc:	b.ne	422b54 <_obstack_memory_used@@Base+0xbd6c>  // b.any
  422c00:	ldr	w22, [sp, #100]
  422c04:	b	422b5c <_obstack_memory_used@@Base+0xbd74>
  422c08:	mov	w22, w0
  422c0c:	b	422b5c <_obstack_memory_used@@Base+0xbd74>
  422c10:	mov	x0, x19
  422c14:	bl	41a75c <_obstack_memory_used@@Base+0x3974>
  422c18:	str	xzr, [x20]
  422c1c:	str	xzr, [x20, #8]
  422c20:	b	422b78 <_obstack_memory_used@@Base+0xbd90>
  422c24:	mov	w0, #0xc                   	// #12
  422c28:	b	422b84 <_obstack_memory_used@@Base+0xbd9c>
  422c2c:	cmp	w26, #0x0
  422c30:	mov	x0, #0x0                   	// #0
  422c34:	ccmp	w8, #0x0, #0x0, eq  // eq = none
  422c38:	mov	w5, #0x7                   	// #7
  422c3c:	b.ne	422a1c <_obstack_memory_used@@Base+0xbc34>  // b.any
  422c40:	mov	w0, #0x1                   	// #1
  422c44:	str	w0, [x19, #180]
  422c48:	ldrb	w0, [x19, #176]
  422c4c:	ldr	x1, [x19, #152]
  422c50:	cmp	x1, #0x0
  422c54:	ccmp	w8, #0x0, #0x0, le
  422c58:	cset	w1, ne  // ne = any
  422c5c:	and	w0, w0, #0xfffffffb
  422c60:	bfi	w0, w1, #1, #1
  422c64:	strb	w0, [x19, #176]
  422c68:	b	4228a8 <_obstack_memory_used@@Base+0xbac0>
  422c6c:	mov	w0, #0xc                   	// #12
  422c70:	ldr	x27, [sp, #80]
  422c74:	b	422c90 <_obstack_memory_used@@Base+0xbea8>
  422c78:	mov	w0, #0xc                   	// #12
  422c7c:	ldr	x27, [sp, #80]
  422c80:	b	422c90 <_obstack_memory_used@@Base+0xbea8>
  422c84:	mov	w0, #0xc                   	// #12
  422c88:	b	422c90 <_obstack_memory_used@@Base+0xbea8>
  422c8c:	ldr	x27, [sp, #80]
  422c90:	str	w0, [sp, #284]
  422c94:	b	422448 <_obstack_memory_used@@Base+0xb660>
  422c98:	ldp	x25, x26, [sp, #64]
  422c9c:	b	422ca4 <_obstack_memory_used@@Base+0xbebc>
  422ca0:	ldp	x25, x26, [sp, #64]
  422ca4:	mov	w0, #0xc                   	// #12
  422ca8:	str	w0, [sp, #284]
  422cac:	mov	x0, x19
  422cb0:	bl	41a75c <_obstack_memory_used@@Base+0x3974>
  422cb4:	str	xzr, [x20]
  422cb8:	str	xzr, [x20, #8]
  422cbc:	ldr	w0, [sp, #284]
  422cc0:	b	422b84 <_obstack_memory_used@@Base+0xbd9c>
  422cc4:	tst	w22, #0xffffff80
  422cc8:	b.ne	422cd8 <_obstack_memory_used@@Base+0xbef0>  // b.any
  422ccc:	ldrb	w0, [x19, #176]
  422cd0:	orr	w0, w0, #0x8
  422cd4:	strb	w0, [x19, #176]
  422cd8:	add	w26, w26, #0x1
  422cdc:	add	w22, w22, #0x1
  422ce0:	cmp	w26, #0x40
  422ce4:	b.eq	4224c4 <_obstack_memory_used@@Base+0xb6dc>  // b.none
  422ce8:	mov	w0, w22
  422cec:	bl	402590 <btowc@plt>
  422cf0:	cmn	w0, #0x1
  422cf4:	b.eq	422cc4 <_obstack_memory_used@@Base+0xbedc>  // b.none
  422cf8:	ldr	x3, [x19, #120]
  422cfc:	lsl	x1, x27, x26
  422d00:	ldr	x2, [x3, x25]
  422d04:	orr	x1, x2, x1
  422d08:	str	x1, [x3, x25]
  422d0c:	tst	w22, #0xffffff80
  422d10:	b.ne	422cd8 <_obstack_memory_used@@Base+0xbef0>  // b.any
  422d14:	cmp	w0, w22
  422d18:	b.eq	422cd8 <_obstack_memory_used@@Base+0xbef0>  // b.none
  422d1c:	b	422ccc <_obstack_memory_used@@Base+0xbee4>
  422d20:	stp	x29, x30, [sp, #-16]!
  422d24:	mov	x29, sp
  422d28:	mov	x4, x0
  422d2c:	mov	x0, x2
  422d30:	adrp	x2, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  422d34:	ldr	x3, [x2, #3544]
  422d38:	ubfx	w5, w3, #25, #1
  422d3c:	ldrb	w2, [x0, #56]
  422d40:	bfi	w2, w5, #4, #1
  422d44:	orr	w2, w2, #0xffffff80
  422d48:	strb	w2, [x0, #56]
  422d4c:	mov	x2, x1
  422d50:	mov	x1, x4
  422d54:	bl	4221d8 <_obstack_memory_used@@Base+0xb3f0>
  422d58:	cbz	w0, 422d88 <_obstack_memory_used@@Base+0xbfa0>
  422d5c:	adrp	x2, 426000 <_obstack_memory_used@@Base+0xf218>
  422d60:	add	x2, x2, #0xff0
  422d64:	add	x1, x2, #0x20
  422d68:	add	x2, x2, #0x1a0
  422d6c:	ldr	x0, [x2, w0, sxtw #3]
  422d70:	mov	w2, #0x5                   	// #5
  422d74:	add	x1, x1, x0
  422d78:	mov	x0, #0x0                   	// #0
  422d7c:	bl	4027a0 <dcgettext@plt>
  422d80:	ldp	x29, x30, [sp], #16
  422d84:	ret
  422d88:	mov	x0, #0x0                   	// #0
  422d8c:	b	422d80 <_obstack_memory_used@@Base+0xbf98>
  422d90:	mov	x2, x0
  422d94:	adrp	x1, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  422d98:	ldr	x0, [x1, #3544]
  422d9c:	str	x2, [x1, #3544]
  422da0:	ret
  422da4:	stp	x29, x30, [sp, #-48]!
  422da8:	mov	x29, sp
  422dac:	stp	x19, x20, [sp, #16]
  422db0:	str	x21, [sp, #32]
  422db4:	mov	x19, x0
  422db8:	ldr	x20, [x0]
  422dbc:	ldr	x21, [x0, #32]
  422dc0:	mov	x2, #0x100                 	// #256
  422dc4:	mov	w1, #0x0                   	// #0
  422dc8:	mov	x0, x21
  422dcc:	bl	4024c0 <memset@plt>
  422dd0:	mov	x2, x21
  422dd4:	ldr	x1, [x20, #72]
  422dd8:	mov	x0, x19
  422ddc:	bl	41bff4 <_obstack_memory_used@@Base+0x520c>
  422de0:	ldr	x1, [x20, #80]
  422de4:	ldr	x0, [x20, #72]
  422de8:	cmp	x0, x1
  422dec:	b.eq	422dfc <_obstack_memory_used@@Base+0xc014>  // b.none
  422df0:	mov	x2, x21
  422df4:	mov	x0, x19
  422df8:	bl	41bff4 <_obstack_memory_used@@Base+0x520c>
  422dfc:	ldr	x1, [x20, #88]
  422e00:	ldr	x0, [x20, #72]
  422e04:	cmp	x0, x1
  422e08:	b.eq	422e18 <_obstack_memory_used@@Base+0xc030>  // b.none
  422e0c:	mov	x2, x21
  422e10:	mov	x0, x19
  422e14:	bl	41bff4 <_obstack_memory_used@@Base+0x520c>
  422e18:	ldr	x1, [x20, #96]
  422e1c:	ldr	x0, [x20, #72]
  422e20:	cmp	x0, x1
  422e24:	b.eq	422e34 <_obstack_memory_used@@Base+0xc04c>  // b.none
  422e28:	mov	x2, x21
  422e2c:	mov	x0, x19
  422e30:	bl	41bff4 <_obstack_memory_used@@Base+0x520c>
  422e34:	ldrb	w0, [x19, #56]
  422e38:	orr	w0, w0, #0x8
  422e3c:	strb	w0, [x19, #56]
  422e40:	mov	w0, #0x0                   	// #0
  422e44:	ldp	x19, x20, [sp, #16]
  422e48:	ldr	x21, [sp, #32]
  422e4c:	ldp	x29, x30, [sp], #48
  422e50:	ret
  422e54:	sub	sp, sp, #0x80
  422e58:	stp	x29, x30, [sp, #16]
  422e5c:	add	x29, sp, #0x10
  422e60:	stp	x21, x22, [sp, #48]
  422e64:	stp	x23, x24, [sp, #64]
  422e68:	str	x1, [sp, #112]
  422e6c:	add	x24, x3, x4
  422e70:	cmp	x3, #0x0
  422e74:	ccmp	x3, x2, #0x0, ge  // ge = tcont
  422e78:	b.gt	423130 <_obstack_memory_used@@Base+0xc348>
  422e7c:	stp	x19, x20, [sp, #32]
  422e80:	stp	x25, x26, [sp, #80]
  422e84:	stp	x27, x28, [sp, #96]
  422e88:	mov	x22, x0
  422e8c:	mov	x25, x2
  422e90:	mov	x21, x3
  422e94:	mov	x26, x5
  422e98:	mov	x20, x6
  422e9c:	and	w28, w7, #0xff
  422ea0:	cmp	x24, x2
  422ea4:	b.gt	422f80 <_obstack_memory_used@@Base+0xc198>
  422ea8:	cmp	x4, #0x0
  422eac:	ccmp	x3, x24, #0x4, ge  // ge = tcont
  422eb0:	b.gt	422f88 <_obstack_memory_used@@Base+0xc1a0>
  422eb4:	tbnz	x24, #63, 423154 <_obstack_memory_used@@Base+0xc36c>
  422eb8:	cmp	x4, #0x0
  422ebc:	ccmp	x3, x24, #0x0, lt  // lt = tstop
  422ec0:	b.le	423154 <_obstack_memory_used@@Base+0xc36c>
  422ec4:	ldrb	w0, [x22, #56]
  422ec8:	ubfx	x27, x0, #5, #2
  422ecc:	cmp	x24, x21
  422ed0:	b.le	422ee0 <_obstack_memory_used@@Base+0xc0f8>
  422ed4:	ldr	x1, [x22, #32]
  422ed8:	cbz	x1, 422ee0 <_obstack_memory_used@@Base+0xc0f8>
  422edc:	tbz	w0, #3, 422f90 <_obstack_memory_used@@Base+0xc1a8>
  422ee0:	ldrb	w0, [x22, #56]
  422ee4:	tbnz	w0, #4, 422fbc <_obstack_memory_used@@Base+0xc1d4>
  422ee8:	mov	x19, #0x1                   	// #1
  422eec:	cbz	x20, 422f08 <_obstack_memory_used@@Base+0xc120>
  422ef0:	ldrb	w0, [x22, #56]
  422ef4:	and	w0, w0, #0x6
  422ef8:	cmp	w0, #0x4
  422efc:	b.eq	422f9c <_obstack_memory_used@@Base+0xc1b4>  // b.none
  422f00:	ldr	x19, [x22, #48]
  422f04:	add	x19, x19, #0x1
  422f08:	str	x19, [sp, #120]
  422f0c:	lsl	x0, x19, #4
  422f10:	bl	4023f0 <malloc@plt>
  422f14:	mov	x23, x0
  422f18:	cbz	x0, 423138 <_obstack_memory_used@@Base+0xc350>
  422f1c:	str	w27, [sp]
  422f20:	mov	x7, x0
  422f24:	mov	x6, x19
  422f28:	mov	x5, x26
  422f2c:	mov	x4, x24
  422f30:	mov	x3, x21
  422f34:	mov	x2, x25
  422f38:	ldr	x1, [sp, #112]
  422f3c:	mov	x0, x22
  422f40:	bl	42106c <_obstack_memory_used@@Base+0xa284>
  422f44:	cbz	w0, 422fc8 <_obstack_memory_used@@Base+0xc1e0>
  422f48:	cmp	w0, #0x1
  422f4c:	cset	x21, eq  // eq = none
  422f50:	sub	x21, x21, #0x2
  422f54:	mov	x0, x23
  422f58:	bl	402660 <free@plt>
  422f5c:	ldp	x19, x20, [sp, #32]
  422f60:	ldp	x25, x26, [sp, #80]
  422f64:	ldp	x27, x28, [sp, #96]
  422f68:	mov	x0, x21
  422f6c:	ldp	x21, x22, [sp, #48]
  422f70:	ldp	x23, x24, [sp, #64]
  422f74:	ldp	x29, x30, [sp, #16]
  422f78:	add	sp, sp, #0x80
  422f7c:	ret
  422f80:	mov	x24, x2
  422f84:	b	422ec4 <_obstack_memory_used@@Base+0xc0dc>
  422f88:	mov	x24, x2
  422f8c:	b	422ec4 <_obstack_memory_used@@Base+0xc0dc>
  422f90:	mov	x0, x22
  422f94:	bl	422da4 <_obstack_memory_used@@Base+0xbfbc>
  422f98:	b	422ee0 <_obstack_memory_used@@Base+0xc0f8>
  422f9c:	ldr	x0, [x20]
  422fa0:	ldr	x1, [x22, #48]
  422fa4:	cmp	x0, x1
  422fa8:	b.hi	422f00 <_obstack_memory_used@@Base+0xc118>  // b.pmore
  422fac:	cmp	x0, #0x0
  422fb0:	csel	x19, x0, x19, gt
  422fb4:	csel	x20, x20, xzr, gt
  422fb8:	b	422f08 <_obstack_memory_used@@Base+0xc120>
  422fbc:	mov	x19, #0x1                   	// #1
  422fc0:	mov	x20, #0x0                   	// #0
  422fc4:	b	422f08 <_obstack_memory_used@@Base+0xc120>
  422fc8:	cbz	x20, 423068 <_obstack_memory_used@@Base+0xc280>
  422fcc:	ldrb	w24, [x22, #56]
  422fd0:	ubfx	x24, x24, #1, #2
  422fd4:	add	x25, x19, #0x1
  422fd8:	cbz	w24, 423074 <_obstack_memory_used@@Base+0xc28c>
  422fdc:	cmp	w24, #0x1
  422fe0:	b.eq	4230b8 <_obstack_memory_used@@Base+0xc2d0>  // b.none
  422fe4:	mov	w24, #0x2                   	// #2
  422fe8:	cmp	x19, #0x0
  422fec:	b.le	42310c <_obstack_memory_used@@Base+0xc324>
  422ff0:	add	x1, x23, #0x8
  422ff4:	ldr	x0, [sp, #120]
  422ff8:	lsl	x2, x0, #3
  422ffc:	mov	x0, #0x0                   	// #0
  423000:	ldur	x4, [x1, #-8]
  423004:	ldr	x3, [x20, #8]
  423008:	str	x4, [x3, x0]
  42300c:	ldr	x4, [x1], #16
  423010:	ldr	x3, [x20, #16]
  423014:	str	x4, [x3, x0]
  423018:	add	x0, x0, #0x8
  42301c:	cmp	x0, x2
  423020:	b.ne	423000 <_obstack_memory_used@@Base+0xc218>  // b.any
  423024:	ldr	x0, [x20]
  423028:	cmp	x0, x19
  42302c:	b.ls	423054 <_obstack_memory_used@@Base+0xc26c>  // b.plast
  423030:	mov	x0, #0xffffffffffffffff    	// #-1
  423034:	ldr	x1, [x20, #16]
  423038:	str	x0, [x1, x19, lsl #3]
  42303c:	ldr	x1, [x20, #8]
  423040:	str	x0, [x1, x19, lsl #3]
  423044:	add	x19, x19, #0x1
  423048:	ldr	x1, [x20]
  42304c:	cmp	x19, x1
  423050:	b.cc	423034 <_obstack_memory_used@@Base+0xc24c>  // b.lo, b.ul, b.last
  423054:	ldrb	w0, [x22, #56]
  423058:	bfi	w0, w24, #1, #2
  42305c:	strb	w0, [x22, #56]
  423060:	tst	w0, #0x6
  423064:	b.eq	42314c <_obstack_memory_used@@Base+0xc364>  // b.none
  423068:	cbnz	w28, 423124 <_obstack_memory_used@@Base+0xc33c>
  42306c:	ldr	x21, [x23]
  423070:	b	422f54 <_obstack_memory_used@@Base+0xc16c>
  423074:	lsl	x26, x25, #3
  423078:	mov	x0, x26
  42307c:	bl	4023f0 <malloc@plt>
  423080:	mov	x24, x0
  423084:	str	x0, [x20, #8]
  423088:	cbz	x0, 423114 <_obstack_memory_used@@Base+0xc32c>
  42308c:	mov	x0, x26
  423090:	bl	4023f0 <malloc@plt>
  423094:	str	x0, [x20, #16]
  423098:	cbz	x0, 4230a8 <_obstack_memory_used@@Base+0xc2c0>
  42309c:	str	x25, [x20]
  4230a0:	mov	w24, #0x1                   	// #1
  4230a4:	b	422fe8 <_obstack_memory_used@@Base+0xc200>
  4230a8:	mov	x0, x24
  4230ac:	bl	402660 <free@plt>
  4230b0:	mov	w24, #0x0                   	// #0
  4230b4:	b	423054 <_obstack_memory_used@@Base+0xc26c>
  4230b8:	ldr	x0, [x20]
  4230bc:	cmp	x0, x25
  4230c0:	b.cs	422fe8 <_obstack_memory_used@@Base+0xc200>  // b.hs, b.nlast
  4230c4:	lsl	x27, x25, #3
  4230c8:	mov	x1, x27
  4230cc:	ldr	x0, [x20, #8]
  4230d0:	bl	402500 <realloc@plt>
  4230d4:	mov	x26, x0
  4230d8:	cbz	x0, 42311c <_obstack_memory_used@@Base+0xc334>
  4230dc:	mov	x1, x27
  4230e0:	ldr	x0, [x20, #16]
  4230e4:	bl	402500 <realloc@plt>
  4230e8:	cbz	x0, 4230fc <_obstack_memory_used@@Base+0xc314>
  4230ec:	str	x26, [x20, #8]
  4230f0:	str	x0, [x20, #16]
  4230f4:	str	x25, [x20]
  4230f8:	b	422fe8 <_obstack_memory_used@@Base+0xc200>
  4230fc:	mov	x0, x26
  423100:	bl	402660 <free@plt>
  423104:	mov	w24, #0x0                   	// #0
  423108:	b	423054 <_obstack_memory_used@@Base+0xc26c>
  42310c:	mov	x19, #0x0                   	// #0
  423110:	b	423024 <_obstack_memory_used@@Base+0xc23c>
  423114:	mov	w24, #0x0                   	// #0
  423118:	b	423054 <_obstack_memory_used@@Base+0xc26c>
  42311c:	mov	w24, #0x0                   	// #0
  423120:	b	423054 <_obstack_memory_used@@Base+0xc26c>
  423124:	ldr	x3, [x23, #8]
  423128:	sub	x21, x3, x21
  42312c:	b	422f54 <_obstack_memory_used@@Base+0xc16c>
  423130:	mov	x21, #0xffffffffffffffff    	// #-1
  423134:	b	422f68 <_obstack_memory_used@@Base+0xc180>
  423138:	mov	x21, #0xfffffffffffffffe    	// #-2
  42313c:	ldp	x19, x20, [sp, #32]
  423140:	ldp	x25, x26, [sp, #80]
  423144:	ldp	x27, x28, [sp, #96]
  423148:	b	422f68 <_obstack_memory_used@@Base+0xc180>
  42314c:	mov	x21, #0xfffffffffffffffe    	// #-2
  423150:	b	422f54 <_obstack_memory_used@@Base+0xc16c>
  423154:	ldrb	w27, [x22, #56]
  423158:	ubfx	x27, x27, #5, #2
  42315c:	mov	x24, #0x0                   	// #0
  423160:	b	422ee0 <_obstack_memory_used@@Base+0xc0f8>
  423164:	stp	x29, x30, [sp, #-112]!
  423168:	mov	x29, sp
  42316c:	stp	x19, x20, [sp, #16]
  423170:	stp	x27, x28, [sp, #80]
  423174:	str	x1, [sp, #104]
  423178:	ldr	x27, [sp, #112]
  42317c:	cmp	x4, #0x0
  423180:	ccmp	x27, #0x0, #0x1, ge  // ge = tcont
  423184:	ccmp	x2, #0x0, #0x1, ge  // ge = tcont
  423188:	b.lt	423260 <_obstack_memory_used@@Base+0xc478>  // b.tstop
  42318c:	stp	x21, x22, [sp, #32]
  423190:	stp	x23, x24, [sp, #48]
  423194:	stp	x25, x26, [sp, #64]
  423198:	mov	x22, x0
  42319c:	mov	x19, x2
  4231a0:	mov	x21, x3
  4231a4:	mov	x20, x4
  4231a8:	mov	x23, x5
  4231ac:	mov	x24, x6
  4231b0:	mov	x25, x7
  4231b4:	adds	x28, x2, x4
  4231b8:	b.vs	423268 <_obstack_memory_used@@Base+0xc480>
  4231bc:	cmp	x4, #0x0
  4231c0:	b.le	423254 <_obstack_memory_used@@Base+0xc46c>
  4231c4:	mov	x26, #0x0                   	// #0
  4231c8:	cmp	x2, #0x0
  4231cc:	b.gt	423220 <_obstack_memory_used@@Base+0xc438>
  4231d0:	ldrb	w7, [sp, #120]
  4231d4:	mov	x6, x25
  4231d8:	mov	x5, x27
  4231dc:	mov	x4, x24
  4231e0:	mov	x3, x23
  4231e4:	mov	x2, x28
  4231e8:	mov	x1, x21
  4231ec:	mov	x0, x22
  4231f0:	bl	422e54 <_obstack_memory_used@@Base+0xc06c>
  4231f4:	mov	x19, x0
  4231f8:	mov	x0, x26
  4231fc:	bl	402660 <free@plt>
  423200:	ldp	x21, x22, [sp, #32]
  423204:	ldp	x23, x24, [sp, #48]
  423208:	ldp	x25, x26, [sp, #64]
  42320c:	mov	x0, x19
  423210:	ldp	x19, x20, [sp, #16]
  423214:	ldp	x27, x28, [sp, #80]
  423218:	ldp	x29, x30, [sp], #112
  42321c:	ret
  423220:	mov	x0, x28
  423224:	bl	4023f0 <malloc@plt>
  423228:	mov	x26, x0
  42322c:	cbz	x0, 42327c <_obstack_memory_used@@Base+0xc494>
  423230:	mov	x2, x19
  423234:	ldr	x1, [sp, #104]
  423238:	bl	402260 <memcpy@plt>
  42323c:	mov	x2, x20
  423240:	mov	x1, x21
  423244:	add	x0, x26, x19
  423248:	bl	402260 <memcpy@plt>
  42324c:	mov	x21, x26
  423250:	b	4231d0 <_obstack_memory_used@@Base+0xc3e8>
  423254:	ldr	x21, [sp, #104]
  423258:	mov	x26, #0x0                   	// #0
  42325c:	b	4231d0 <_obstack_memory_used@@Base+0xc3e8>
  423260:	mov	x19, #0xfffffffffffffffe    	// #-2
  423264:	b	42320c <_obstack_memory_used@@Base+0xc424>
  423268:	mov	x19, #0xfffffffffffffffe    	// #-2
  42326c:	ldp	x21, x22, [sp, #32]
  423270:	ldp	x23, x24, [sp, #48]
  423274:	ldp	x25, x26, [sp, #64]
  423278:	b	42320c <_obstack_memory_used@@Base+0xc424>
  42327c:	mov	x19, #0xfffffffffffffffe    	// #-2
  423280:	ldp	x21, x22, [sp, #32]
  423284:	ldp	x23, x24, [sp, #48]
  423288:	ldp	x25, x26, [sp, #64]
  42328c:	b	42320c <_obstack_memory_used@@Base+0xc424>
  423290:	stp	x29, x30, [sp, #-64]!
  423294:	mov	x29, sp
  423298:	stp	x19, x20, [sp, #16]
  42329c:	stp	x21, x22, [sp, #32]
  4232a0:	str	x23, [sp, #48]
  4232a4:	mov	x19, x0
  4232a8:	mov	x22, x1
  4232ac:	mov	w20, w2
  4232b0:	tst	x20, #0x1
  4232b4:	mov	x21, #0xb2fc                	// #45820
  4232b8:	movk	x21, #0x3, lsl #16
  4232bc:	mov	x23, #0x2c6                 	// #710
  4232c0:	movk	x23, #0x101, lsl #16
  4232c4:	csel	x23, x21, x23, ne  // ne = any
  4232c8:	str	xzr, [x0]
  4232cc:	str	xzr, [x0, #8]
  4232d0:	str	xzr, [x0, #16]
  4232d4:	mov	x0, #0x100                 	// #256
  4232d8:	bl	4023f0 <malloc@plt>
  4232dc:	str	x0, [x19, #32]
  4232e0:	cbz	x0, 42337c <_obstack_memory_used@@Base+0xc594>
  4232e4:	sbfiz	x21, x20, #21, #32
  4232e8:	and	x21, x21, #0x400000
  4232ec:	orr	x21, x21, x23
  4232f0:	mov	w1, #0x0                   	// #0
  4232f4:	tbz	w20, #2, 423304 <_obstack_memory_used@@Base+0xc51c>
  4232f8:	and	x21, x21, #0xffffffffffffffbf
  4232fc:	orr	x21, x21, #0x100
  423300:	mov	w1, #0x1                   	// #1
  423304:	ldrb	w0, [x19, #56]
  423308:	bfi	w0, w1, #7, #1
  42330c:	ubfx	x20, x20, #3, #1
  423310:	bfi	w0, w20, #4, #1
  423314:	strb	w0, [x19, #56]
  423318:	str	xzr, [x19, #40]
  42331c:	mov	x0, x22
  423320:	bl	4022c0 <strlen@plt>
  423324:	mov	x3, x21
  423328:	mov	x2, x0
  42332c:	mov	x1, x22
  423330:	mov	x0, x19
  423334:	bl	4221d8 <_obstack_memory_used@@Base+0xb3f0>
  423338:	mov	w20, w0
  42333c:	cmp	w0, #0x10
  423340:	b.eq	423368 <_obstack_memory_used@@Base+0xc580>  // b.none
  423344:	cbnz	w0, 42336c <_obstack_memory_used@@Base+0xc584>
  423348:	mov	x0, x19
  42334c:	bl	422da4 <_obstack_memory_used@@Base+0xbfbc>
  423350:	mov	w0, w20
  423354:	ldp	x19, x20, [sp, #16]
  423358:	ldp	x21, x22, [sp, #32]
  42335c:	ldr	x23, [sp, #48]
  423360:	ldp	x29, x30, [sp], #64
  423364:	ret
  423368:	mov	w20, #0x8                   	// #8
  42336c:	ldr	x0, [x19, #32]
  423370:	bl	402660 <free@plt>
  423374:	str	xzr, [x19, #32]
  423378:	b	423350 <_obstack_memory_used@@Base+0xc568>
  42337c:	mov	w20, #0xc                   	// #12
  423380:	b	423350 <_obstack_memory_used@@Base+0xc568>
  423384:	stp	x29, x30, [sp, #-48]!
  423388:	mov	x29, sp
  42338c:	stp	x19, x20, [sp, #16]
  423390:	stp	x21, x22, [sp, #32]
  423394:	cmp	w0, #0x10
  423398:	b.hi	423404 <_obstack_memory_used@@Base+0xc61c>  // b.pmore
  42339c:	mov	x21, x2
  4233a0:	mov	x20, x3
  4233a4:	adrp	x4, 426000 <_obstack_memory_used@@Base+0xf218>
  4233a8:	add	x4, x4, #0xff0
  4233ac:	add	x1, x4, #0x20
  4233b0:	add	x4, x4, #0x1a0
  4233b4:	ldr	x0, [x4, w0, sxtw #3]
  4233b8:	mov	w2, #0x5                   	// #5
  4233bc:	add	x1, x1, x0
  4233c0:	mov	x0, #0x0                   	// #0
  4233c4:	bl	4027a0 <dcgettext@plt>
  4233c8:	mov	x22, x0
  4233cc:	bl	4022c0 <strlen@plt>
  4233d0:	add	x19, x0, #0x1
  4233d4:	cbz	x20, 4233f0 <_obstack_memory_used@@Base+0xc608>
  4233d8:	mov	x2, x19
  4233dc:	cmp	x19, x20
  4233e0:	b.hi	423408 <_obstack_memory_used@@Base+0xc620>  // b.pmore
  4233e4:	mov	x1, x22
  4233e8:	mov	x0, x21
  4233ec:	bl	402260 <memcpy@plt>
  4233f0:	mov	x0, x19
  4233f4:	ldp	x19, x20, [sp, #16]
  4233f8:	ldp	x21, x22, [sp, #32]
  4233fc:	ldp	x29, x30, [sp], #48
  423400:	ret
  423404:	bl	4025a0 <abort@plt>
  423408:	sub	x2, x20, #0x1
  42340c:	strb	wzr, [x21, x2]
  423410:	b	4233e4 <_obstack_memory_used@@Base+0xc5fc>
  423414:	stp	x29, x30, [sp, #-32]!
  423418:	mov	x29, sp
  42341c:	str	x19, [sp, #16]
  423420:	mov	x19, x0
  423424:	ldr	x0, [x0]
  423428:	cbz	x0, 423430 <_obstack_memory_used@@Base+0xc648>
  42342c:	bl	41a75c <_obstack_memory_used@@Base+0x3974>
  423430:	str	xzr, [x19]
  423434:	str	xzr, [x19, #8]
  423438:	ldr	x0, [x19, #32]
  42343c:	bl	402660 <free@plt>
  423440:	str	xzr, [x19, #32]
  423444:	ldr	x0, [x19, #40]
  423448:	bl	402660 <free@plt>
  42344c:	str	xzr, [x19, #40]
  423450:	ldr	x19, [sp, #16]
  423454:	ldp	x29, x30, [sp], #32
  423458:	ret
  42345c:	tst	w4, #0xfffffff8
  423460:	b.ne	42351c <_obstack_memory_used@@Base+0xc734>  // b.any
  423464:	sub	sp, sp, #0x50
  423468:	stp	x29, x30, [sp, #16]
  42346c:	add	x29, sp, #0x10
  423470:	stp	x19, x20, [sp, #32]
  423474:	stp	x21, x22, [sp, #48]
  423478:	str	x23, [sp, #64]
  42347c:	mov	x20, x0
  423480:	mov	x21, x1
  423484:	mov	x23, x2
  423488:	mov	x22, x3
  42348c:	mov	w19, w4
  423490:	tbz	w19, #2, 4234e4 <_obstack_memory_used@@Base+0xc6fc>
  423494:	ldr	x3, [x3]
  423498:	ldr	x2, [x22, #8]
  42349c:	ldrb	w0, [x20, #56]
  4234a0:	tbz	w0, #4, 4234f8 <_obstack_memory_used@@Base+0xc710>
  4234a4:	str	w19, [sp]
  4234a8:	mov	x7, #0x0                   	// #0
  4234ac:	mov	x6, #0x0                   	// #0
  4234b0:	mov	x5, x2
  4234b4:	mov	x4, x2
  4234b8:	mov	x1, x21
  4234bc:	mov	x0, x20
  4234c0:	bl	42106c <_obstack_memory_used@@Base+0xa284>
  4234c4:	cmp	w0, #0x0
  4234c8:	cset	w0, ne  // ne = any
  4234cc:	ldp	x19, x20, [sp, #32]
  4234d0:	ldp	x21, x22, [sp, #48]
  4234d4:	ldr	x23, [sp, #64]
  4234d8:	ldp	x29, x30, [sp, #16]
  4234dc:	add	sp, sp, #0x50
  4234e0:	ret
  4234e4:	mov	x0, x1
  4234e8:	bl	4022c0 <strlen@plt>
  4234ec:	mov	x2, x0
  4234f0:	mov	x3, #0x0                   	// #0
  4234f4:	b	42349c <_obstack_memory_used@@Base+0xc6b4>
  4234f8:	str	w19, [sp]
  4234fc:	mov	x7, x22
  423500:	mov	x6, x23
  423504:	mov	x5, x2
  423508:	mov	x4, x2
  42350c:	mov	x1, x21
  423510:	mov	x0, x20
  423514:	bl	42106c <_obstack_memory_used@@Base+0xa284>
  423518:	b	4234c4 <_obstack_memory_used@@Base+0xc6dc>
  42351c:	mov	w0, #0x2                   	// #2
  423520:	ret
  423524:	stp	x29, x30, [sp, #-16]!
  423528:	mov	x29, sp
  42352c:	mov	x5, x2
  423530:	mov	w7, #0x1                   	// #1
  423534:	mov	x6, x4
  423538:	mov	x4, #0x0                   	// #0
  42353c:	bl	422e54 <_obstack_memory_used@@Base+0xc06c>
  423540:	ldp	x29, x30, [sp], #16
  423544:	ret
  423548:	stp	x29, x30, [sp, #-16]!
  42354c:	mov	x29, sp
  423550:	mov	w7, #0x0                   	// #0
  423554:	mov	x6, x5
  423558:	mov	x5, x2
  42355c:	bl	422e54 <_obstack_memory_used@@Base+0xc06c>
  423560:	ldp	x29, x30, [sp], #16
  423564:	ret
  423568:	sub	sp, sp, #0x20
  42356c:	stp	x29, x30, [sp, #16]
  423570:	add	x29, sp, #0x10
  423574:	mov	w8, #0x1                   	// #1
  423578:	strb	w8, [sp, #8]
  42357c:	str	x7, [sp]
  423580:	mov	x7, x6
  423584:	mov	x6, #0x0                   	// #0
  423588:	bl	423164 <_obstack_memory_used@@Base+0xc37c>
  42358c:	ldp	x29, x30, [sp, #16]
  423590:	add	sp, sp, #0x20
  423594:	ret
  423598:	sub	sp, sp, #0x20
  42359c:	stp	x29, x30, [sp, #16]
  4235a0:	add	x29, sp, #0x10
  4235a4:	strb	wzr, [sp, #8]
  4235a8:	ldr	x8, [sp, #32]
  4235ac:	str	x8, [sp]
  4235b0:	bl	423164 <_obstack_memory_used@@Base+0xc37c>
  4235b4:	ldp	x29, x30, [sp, #16]
  4235b8:	add	sp, sp, #0x20
  4235bc:	ret
  4235c0:	cbz	x2, 4235e4 <_obstack_memory_used@@Base+0xc7fc>
  4235c4:	ldrb	w5, [x0, #56]
  4235c8:	mov	w6, #0x1                   	// #1
  4235cc:	bfi	w5, w6, #1, #2
  4235d0:	strb	w5, [x0, #56]
  4235d4:	str	x2, [x1]
  4235d8:	str	x3, [x1, #8]
  4235dc:	str	x4, [x1, #16]
  4235e0:	ret
  4235e4:	ldrb	w2, [x0, #56]
  4235e8:	and	w2, w2, #0xfffffff9
  4235ec:	strb	w2, [x0, #56]
  4235f0:	str	xzr, [x1]
  4235f4:	str	xzr, [x1, #16]
  4235f8:	str	xzr, [x1, #8]
  4235fc:	b	4235e0 <_obstack_memory_used@@Base+0xc7f8>
  423600:	stp	x29, x30, [sp, #-48]!
  423604:	mov	x29, sp
  423608:	stp	x19, x20, [sp, #16]
  42360c:	str	x21, [sp, #32]
  423610:	mov	x19, x0
  423614:	bl	402370 <__fpending@plt>
  423618:	mov	x21, x0
  42361c:	ldr	w20, [x19]
  423620:	and	w20, w20, #0x20
  423624:	mov	x0, x19
  423628:	bl	402390 <fclose@plt>
  42362c:	cbnz	w20, 423658 <_obstack_memory_used@@Base+0xc870>
  423630:	cbz	w0, 423648 <_obstack_memory_used@@Base+0xc860>
  423634:	cbnz	x21, 42366c <_obstack_memory_used@@Base+0xc884>
  423638:	bl	402840 <__errno_location@plt>
  42363c:	ldr	w0, [x0]
  423640:	cmp	w0, #0x9
  423644:	csetm	w0, ne  // ne = any
  423648:	ldp	x19, x20, [sp, #16]
  42364c:	ldr	x21, [sp, #32]
  423650:	ldp	x29, x30, [sp], #48
  423654:	ret
  423658:	cbnz	w0, 423674 <_obstack_memory_used@@Base+0xc88c>
  42365c:	bl	402840 <__errno_location@plt>
  423660:	str	wzr, [x0]
  423664:	mov	w0, #0xffffffff            	// #-1
  423668:	b	423648 <_obstack_memory_used@@Base+0xc860>
  42366c:	mov	w0, #0xffffffff            	// #-1
  423670:	b	423648 <_obstack_memory_used@@Base+0xc860>
  423674:	mov	w0, #0xffffffff            	// #-1
  423678:	b	423648 <_obstack_memory_used@@Base+0xc860>
  42367c:	str	xzr, [x0, #16]
  423680:	mov	w1, #0xf616                	// #62998
  423684:	movk	w1, #0x95, lsl #16
  423688:	str	w1, [x0, #24]
  42368c:	ret
  423690:	mov	x2, x0
  423694:	ldr	w3, [x0, #24]
  423698:	mov	w0, #0xf616                	// #62998
  42369c:	movk	w0, #0x95, lsl #16
  4236a0:	cmp	w3, w0
  4236a4:	b.ne	4236d8 <_obstack_memory_used@@Base+0xc8f0>  // b.any
  4236a8:	ldr	x3, [x2, #16]
  4236ac:	cbz	x3, 423724 <_obstack_memory_used@@Base+0xc93c>
  4236b0:	ldr	x4, [x1, #8]
  4236b4:	ldr	x0, [x2]
  4236b8:	cmp	x4, x0
  4236bc:	b.eq	423700 <_obstack_memory_used@@Base+0xc918>  // b.none
  4236c0:	add	x4, x3, #0x1
  4236c4:	str	x4, [x2, #16]
  4236c8:	mov	w0, #0x0                   	// #0
  4236cc:	tst	x3, x4
  4236d0:	b.eq	423718 <_obstack_memory_used@@Base+0xc930>  // b.none
  4236d4:	ret
  4236d8:	stp	x29, x30, [sp, #-16]!
  4236dc:	mov	x29, sp
  4236e0:	adrp	x3, 427000 <_obstack_memory_used@@Base+0x10218>
  4236e4:	add	x3, x3, #0x250
  4236e8:	mov	w2, #0x3c                  	// #60
  4236ec:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x10218>
  4236f0:	add	x1, x1, #0x228
  4236f4:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x10218>
  4236f8:	add	x0, x0, #0x238
  4236fc:	bl	402830 <__assert_fail@plt>
  423700:	ldr	x5, [x1]
  423704:	ldr	x4, [x2, #8]
  423708:	mov	w0, #0x1                   	// #1
  42370c:	cmp	x5, x4
  423710:	b.ne	4236c0 <_obstack_memory_used@@Base+0xc8d8>  // b.any
  423714:	b	4236d4 <_obstack_memory_used@@Base+0xc8ec>
  423718:	mov	w0, #0x1                   	// #1
  42371c:	cbz	x4, 4236d4 <_obstack_memory_used@@Base+0xc8ec>
  423720:	b	42372c <_obstack_memory_used@@Base+0xc944>
  423724:	mov	x0, #0x1                   	// #1
  423728:	str	x0, [x2, #16]
  42372c:	ldr	x0, [x1]
  423730:	str	x0, [x2, #8]
  423734:	ldr	x0, [x1, #8]
  423738:	str	x0, [x2]
  42373c:	mov	w0, #0x0                   	// #0
  423740:	ret
  423744:	ldrb	w1, [x0]
  423748:	cmp	w1, #0x2f
  42374c:	b.ne	42375c <_obstack_memory_used@@Base+0xc974>  // b.any
  423750:	ldrb	w1, [x0, #1]!
  423754:	cmp	w1, #0x2f
  423758:	b.eq	423750 <_obstack_memory_used@@Base+0xc968>  // b.none
  42375c:	ldrb	w2, [x0]
  423760:	cbz	w2, 42379c <_obstack_memory_used@@Base+0xc9b4>
  423764:	mov	x3, x0
  423768:	mov	w1, #0x0                   	// #0
  42376c:	mov	w5, #0x1                   	// #1
  423770:	mov	w4, #0x0                   	// #0
  423774:	b	42378c <_obstack_memory_used@@Base+0xc9a4>
  423778:	cmp	w1, #0x0
  42377c:	csel	x0, x0, x3, eq  // eq = none
  423780:	csel	w1, w1, w4, eq  // eq = none
  423784:	ldrb	w2, [x3, #1]!
  423788:	cbz	w2, 42379c <_obstack_memory_used@@Base+0xc9b4>
  42378c:	cmp	w2, #0x2f
  423790:	b.ne	423778 <_obstack_memory_used@@Base+0xc990>  // b.any
  423794:	mov	w1, w5
  423798:	b	423784 <_obstack_memory_used@@Base+0xc99c>
  42379c:	ret
  4237a0:	stp	x29, x30, [sp, #-32]!
  4237a4:	mov	x29, sp
  4237a8:	str	x19, [sp, #16]
  4237ac:	mov	x19, x0
  4237b0:	bl	4022c0 <strlen@plt>
  4237b4:	cmp	x0, #0x1
  4237b8:	b.ls	4237cc <_obstack_memory_used@@Base+0xc9e4>  // b.plast
  4237bc:	sub	x1, x0, #0x1
  4237c0:	ldrb	w2, [x19, x1]
  4237c4:	cmp	w2, #0x2f
  4237c8:	b.eq	4237d8 <_obstack_memory_used@@Base+0xc9f0>  // b.none
  4237cc:	ldr	x19, [sp, #16]
  4237d0:	ldp	x29, x30, [sp], #32
  4237d4:	ret
  4237d8:	mov	x0, x1
  4237dc:	b	4237b4 <_obstack_memory_used@@Base+0xc9cc>
  4237e0:	stp	x29, x30, [sp, #-64]!
  4237e4:	mov	x29, sp
  4237e8:	str	x2, [sp, #56]
  4237ec:	mov	w2, #0x0                   	// #0
  4237f0:	tbnz	w1, #6, 423804 <_obstack_memory_used@@Base+0xca1c>
  4237f4:	bl	402410 <open@plt>
  4237f8:	bl	413a58 <wcrtomb@plt+0x11188>
  4237fc:	ldp	x29, x30, [sp], #64
  423800:	ret
  423804:	add	x2, sp, #0x40
  423808:	str	x2, [sp, #16]
  42380c:	str	x2, [sp, #24]
  423810:	add	x2, sp, #0x30
  423814:	str	x2, [sp, #32]
  423818:	str	wzr, [sp, #44]
  42381c:	str	wzr, [sp, #40]
  423820:	ldr	x2, [sp, #24]
  423824:	sub	x2, x2, #0x8
  423828:	ldr	w2, [x2]
  42382c:	b	4237f4 <_obstack_memory_used@@Base+0xca0c>
  423830:	stp	x29, x30, [sp, #-288]!
  423834:	mov	x29, sp
  423838:	mov	x2, #0x101                 	// #257
  42383c:	add	x1, sp, #0x18
  423840:	bl	423a04 <_obstack_memory_used@@Base+0xcc1c>
  423844:	cbnz	w0, 423880 <_obstack_memory_used@@Base+0xca98>
  423848:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x10218>
  42384c:	add	x1, x1, #0x260
  423850:	add	x0, sp, #0x18
  423854:	bl	402640 <strcmp@plt>
  423858:	cbz	w0, 423874 <_obstack_memory_used@@Base+0xca8c>
  42385c:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x10218>
  423860:	add	x1, x1, #0x268
  423864:	add	x0, sp, #0x18
  423868:	bl	402640 <strcmp@plt>
  42386c:	cmp	w0, #0x0
  423870:	cset	w0, ne  // ne = any
  423874:	and	w0, w0, #0x1
  423878:	ldp	x29, x30, [sp], #288
  42387c:	ret
  423880:	mov	w0, #0x0                   	// #0
  423884:	b	423878 <_obstack_memory_used@@Base+0xca90>
  423888:	mov	w2, #0x1                   	// #1
  42388c:	strb	w2, [x0, #28]
  423890:	str	wzr, [x0, #20]
  423894:	str	wzr, [x0, #24]
  423898:	str	w1, [x0]
  42389c:	str	w1, [x0, #4]
  4238a0:	str	w1, [x0, #8]
  4238a4:	str	w1, [x0, #12]
  4238a8:	str	w1, [x0, #16]
  4238ac:	ret
  4238b0:	ldrb	w0, [x0, #28]
  4238b4:	ret
  4238b8:	mov	x2, x0
  4238bc:	ldrb	w4, [x0, #28]
  4238c0:	eor	w4, w4, #0x1
  4238c4:	ldr	w3, [x0, #20]
  4238c8:	add	w3, w4, w3
  4238cc:	and	w5, w3, #0x3
  4238d0:	and	x3, x3, #0x3
  4238d4:	ldr	w0, [x0, x3, lsl #2]
  4238d8:	str	w1, [x2, x3, lsl #2]
  4238dc:	str	w5, [x2, #20]
  4238e0:	ldr	w1, [x2, #24]
  4238e4:	cmp	w1, w5
  4238e8:	b.eq	4238f4 <_obstack_memory_used@@Base+0xcb0c>  // b.none
  4238ec:	strb	wzr, [x2, #28]
  4238f0:	ret
  4238f4:	add	w4, w4, w1
  4238f8:	and	w4, w4, #0x3
  4238fc:	str	w4, [x2, #24]
  423900:	b	4238ec <_obstack_memory_used@@Base+0xcb04>
  423904:	mov	x1, x0
  423908:	ldrb	w0, [x0, #28]
  42390c:	cbnz	w0, 423940 <_obstack_memory_used@@Base+0xcb58>
  423910:	ldr	w2, [x1, #20]
  423914:	mov	w3, w2
  423918:	ldr	w0, [x1, x3, lsl #2]
  42391c:	ldr	w4, [x1, #16]
  423920:	str	w4, [x1, x3, lsl #2]
  423924:	ldr	w3, [x1, #24]
  423928:	cmp	w2, w3
  42392c:	b.eq	42394c <_obstack_memory_used@@Base+0xcb64>  // b.none
  423930:	add	w2, w2, #0x3
  423934:	and	w2, w2, #0x3
  423938:	str	w2, [x1, #20]
  42393c:	ret
  423940:	stp	x29, x30, [sp, #-16]!
  423944:	mov	x29, sp
  423948:	bl	4025a0 <abort@plt>
  42394c:	mov	w2, #0x1                   	// #1
  423950:	strb	w2, [x1, #28]
  423954:	ret
  423958:	stp	x29, x30, [sp, #-16]!
  42395c:	mov	x29, sp
  423960:	mov	w0, #0xe                   	// #14
  423964:	bl	4023b0 <nl_langinfo@plt>
  423968:	cbz	x0, 423988 <_obstack_memory_used@@Base+0xcba0>
  42396c:	ldrb	w2, [x0]
  423970:	adrp	x1, 427000 <_obstack_memory_used@@Base+0x10218>
  423974:	add	x1, x1, #0x270
  423978:	cmp	w2, #0x0
  42397c:	csel	x0, x1, x0, eq  // eq = none
  423980:	ldp	x29, x30, [sp], #16
  423984:	ret
  423988:	adrp	x0, 427000 <_obstack_memory_used@@Base+0x10218>
  42398c:	add	x0, x0, #0x270
  423990:	b	423980 <_obstack_memory_used@@Base+0xcb98>
  423994:	stp	x29, x30, [sp, #-48]!
  423998:	mov	x29, sp
  42399c:	stp	x19, x20, [sp, #16]
  4239a0:	stp	x21, x22, [sp, #32]
  4239a4:	mov	x21, x3
  4239a8:	mov	w3, #0x4900                	// #18688
  4239ac:	movk	w3, #0x8, lsl #16
  4239b0:	orr	w2, w2, w3
  4239b4:	bl	411f5c <wcrtomb@plt+0xf68c>
  4239b8:	mov	x20, #0x0                   	// #0
  4239bc:	tbnz	w0, #31, 4239d4 <_obstack_memory_used@@Base+0xcbec>
  4239c0:	mov	w19, w0
  4239c4:	bl	402570 <fdopendir@plt>
  4239c8:	mov	x20, x0
  4239cc:	cbz	x0, 4239e8 <_obstack_memory_used@@Base+0xcc00>
  4239d0:	str	w19, [x21]
  4239d4:	mov	x0, x20
  4239d8:	ldp	x19, x20, [sp, #16]
  4239dc:	ldp	x21, x22, [sp, #32]
  4239e0:	ldp	x29, x30, [sp], #48
  4239e4:	ret
  4239e8:	bl	402840 <__errno_location@plt>
  4239ec:	mov	x21, x0
  4239f0:	ldr	w22, [x0]
  4239f4:	mov	w0, w19
  4239f8:	bl	402530 <close@plt>
  4239fc:	str	w22, [x21]
  423a00:	b	4239d4 <_obstack_memory_used@@Base+0xcbec>
  423a04:	stp	x29, x30, [sp, #-48]!
  423a08:	mov	x29, sp
  423a0c:	stp	x19, x20, [sp, #16]
  423a10:	str	x21, [sp, #32]
  423a14:	mov	x21, x1
  423a18:	mov	x20, x2
  423a1c:	mov	x1, #0x0                   	// #0
  423a20:	bl	4028b0 <setlocale@plt>
  423a24:	cbz	x0, 423a60 <_obstack_memory_used@@Base+0xcc78>
  423a28:	mov	x19, x0
  423a2c:	bl	4022c0 <strlen@plt>
  423a30:	cmp	x20, x0
  423a34:	b.hi	423a70 <_obstack_memory_used@@Base+0xcc88>  // b.pmore
  423a38:	mov	w0, #0x22                  	// #34
  423a3c:	cbz	x20, 423a84 <_obstack_memory_used@@Base+0xcc9c>
  423a40:	sub	x20, x20, #0x1
  423a44:	mov	x2, x20
  423a48:	mov	x1, x19
  423a4c:	mov	x0, x21
  423a50:	bl	402260 <memcpy@plt>
  423a54:	strb	wzr, [x21, x20]
  423a58:	mov	w0, #0x22                  	// #34
  423a5c:	b	423a84 <_obstack_memory_used@@Base+0xcc9c>
  423a60:	mov	w0, #0x16                  	// #22
  423a64:	cbz	x20, 423a84 <_obstack_memory_used@@Base+0xcc9c>
  423a68:	strb	wzr, [x21]
  423a6c:	b	423a84 <_obstack_memory_used@@Base+0xcc9c>
  423a70:	add	x2, x0, #0x1
  423a74:	mov	x1, x19
  423a78:	mov	x0, x21
  423a7c:	bl	402260 <memcpy@plt>
  423a80:	mov	w0, #0x0                   	// #0
  423a84:	ldp	x19, x20, [sp, #16]
  423a88:	ldr	x21, [sp, #32]
  423a8c:	ldp	x29, x30, [sp], #48
  423a90:	ret
  423a94:	stp	x29, x30, [sp, #-16]!
  423a98:	mov	x29, sp
  423a9c:	mov	x1, #0x0                   	// #0
  423aa0:	bl	4028b0 <setlocale@plt>
  423aa4:	ldp	x29, x30, [sp], #16
  423aa8:	ret
  423aac:	stp	x29, x30, [sp, #-16]!
  423ab0:	mov	x29, sp
  423ab4:	mov	w2, #0x3                   	// #3
  423ab8:	mov	w1, #0x0                   	// #0
  423abc:	bl	423ac8 <_obstack_memory_used@@Base+0xcce0>
  423ac0:	ldp	x29, x30, [sp], #16
  423ac4:	ret
  423ac8:	stp	x29, x30, [sp, #-112]!
  423acc:	mov	x29, sp
  423ad0:	stp	x19, x20, [sp, #16]
  423ad4:	mov	w19, w0
  423ad8:	str	x2, [sp, #80]
  423adc:	str	x3, [sp, #88]
  423ae0:	str	x4, [sp, #96]
  423ae4:	str	x5, [sp, #104]
  423ae8:	add	x0, sp, #0x70
  423aec:	str	x0, [sp, #48]
  423af0:	str	x0, [sp, #56]
  423af4:	add	x0, sp, #0x50
  423af8:	str	x0, [sp, #64]
  423afc:	mov	w0, #0xffffffe0            	// #-32
  423b00:	str	w0, [sp, #72]
  423b04:	str	wzr, [sp, #76]
  423b08:	cbz	w1, 423b4c <_obstack_memory_used@@Base+0xcd64>
  423b0c:	cmp	w1, #0x406
  423b10:	b.eq	423bb4 <_obstack_memory_used@@Base+0xcdcc>  // b.none
  423b14:	cmp	w1, #0xb
  423b18:	b.gt	423d14 <_obstack_memory_used@@Base+0xcf2c>
  423b1c:	tbz	w1, #31, 423cf0 <_obstack_memory_used@@Base+0xcf08>
  423b20:	ldr	w2, [sp, #72]
  423b24:	ldr	x0, [sp, #48]
  423b28:	tbnz	w2, #31, 423da8 <_obstack_memory_used@@Base+0xcfc0>
  423b2c:	add	x2, x0, #0xf
  423b30:	and	x2, x2, #0xfffffffffffffff8
  423b34:	str	x2, [sp, #48]
  423b38:	ldr	x2, [x0]
  423b3c:	mov	w0, w19
  423b40:	bl	4026d0 <fcntl@plt>
  423b44:	mov	w20, w0
  423b48:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423b4c:	ldr	w1, [sp, #72]
  423b50:	ldr	x0, [sp, #48]
  423b54:	tbnz	w1, #31, 423b88 <_obstack_memory_used@@Base+0xcda0>
  423b58:	add	x1, x0, #0xb
  423b5c:	and	x1, x1, #0xfffffffffffffff8
  423b60:	str	x1, [sp, #48]
  423b64:	ldr	w2, [x0]
  423b68:	mov	w1, #0x0                   	// #0
  423b6c:	mov	w0, w19
  423b70:	bl	4026d0 <fcntl@plt>
  423b74:	mov	w20, w0
  423b78:	mov	w0, w20
  423b7c:	ldp	x19, x20, [sp, #16]
  423b80:	ldp	x29, x30, [sp], #112
  423b84:	ret
  423b88:	add	w2, w1, #0x8
  423b8c:	str	w2, [sp, #72]
  423b90:	cmp	w2, #0x0
  423b94:	b.le	423ba8 <_obstack_memory_used@@Base+0xcdc0>
  423b98:	add	x1, x0, #0xb
  423b9c:	and	x1, x1, #0xfffffffffffffff8
  423ba0:	str	x1, [sp, #48]
  423ba4:	b	423b64 <_obstack_memory_used@@Base+0xcd7c>
  423ba8:	ldr	x0, [sp, #56]
  423bac:	add	x0, x0, w1, sxtw
  423bb0:	b	423b64 <_obstack_memory_used@@Base+0xcd7c>
  423bb4:	str	x21, [sp, #32]
  423bb8:	ldr	w1, [sp, #72]
  423bbc:	ldr	x0, [sp, #48]
  423bc0:	tbnz	w1, #31, 423c0c <_obstack_memory_used@@Base+0xce24>
  423bc4:	add	x1, x0, #0xb
  423bc8:	and	x1, x1, #0xfffffffffffffff8
  423bcc:	str	x1, [sp, #48]
  423bd0:	ldr	w21, [x0]
  423bd4:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  423bd8:	ldr	w0, [x0, #2240]
  423bdc:	tbnz	w0, #31, 423c9c <_obstack_memory_used@@Base+0xceb4>
  423be0:	mov	w2, w21
  423be4:	mov	w1, #0x406                 	// #1030
  423be8:	mov	w0, w19
  423bec:	bl	4026d0 <fcntl@plt>
  423bf0:	mov	w20, w0
  423bf4:	tbnz	w0, #31, 423c38 <_obstack_memory_used@@Base+0xce50>
  423bf8:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  423bfc:	mov	w1, #0x1                   	// #1
  423c00:	str	w1, [x0, #2240]
  423c04:	ldr	x21, [sp, #32]
  423c08:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423c0c:	add	w2, w1, #0x8
  423c10:	str	w2, [sp, #72]
  423c14:	cmp	w2, #0x0
  423c18:	b.le	423c2c <_obstack_memory_used@@Base+0xce44>
  423c1c:	add	x1, x0, #0xb
  423c20:	and	x1, x1, #0xfffffffffffffff8
  423c24:	str	x1, [sp, #48]
  423c28:	b	423bd0 <_obstack_memory_used@@Base+0xcde8>
  423c2c:	ldr	x0, [sp, #56]
  423c30:	add	x0, x0, w1, sxtw
  423c34:	b	423bd0 <_obstack_memory_used@@Base+0xcde8>
  423c38:	bl	402840 <__errno_location@plt>
  423c3c:	ldr	w0, [x0]
  423c40:	cmp	w0, #0x16
  423c44:	b.ne	423bf8 <_obstack_memory_used@@Base+0xce10>  // b.any
  423c48:	mov	w2, w21
  423c4c:	mov	w1, #0x0                   	// #0
  423c50:	mov	w0, w19
  423c54:	bl	4026d0 <fcntl@plt>
  423c58:	mov	w20, w0
  423c5c:	tbnz	w0, #31, 423dd4 <_obstack_memory_used@@Base+0xcfec>
  423c60:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  423c64:	mov	w1, #0xffffffff            	// #-1
  423c68:	str	w1, [x0, #2240]
  423c6c:	mov	w1, #0x1                   	// #1
  423c70:	mov	w0, w20
  423c74:	bl	4026d0 <fcntl@plt>
  423c78:	tbnz	w0, #31, 423ccc <_obstack_memory_used@@Base+0xcee4>
  423c7c:	orr	w2, w0, #0x1
  423c80:	mov	w1, #0x2                   	// #2
  423c84:	mov	w0, w20
  423c88:	bl	4026d0 <fcntl@plt>
  423c8c:	cmn	w0, #0x1
  423c90:	b.eq	423ccc <_obstack_memory_used@@Base+0xcee4>  // b.none
  423c94:	ldr	x21, [sp, #32]
  423c98:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423c9c:	mov	w2, w21
  423ca0:	mov	w1, #0x0                   	// #0
  423ca4:	mov	w0, w19
  423ca8:	bl	4026d0 <fcntl@plt>
  423cac:	mov	w20, w0
  423cb0:	tbnz	w0, #31, 423ddc <_obstack_memory_used@@Base+0xcff4>
  423cb4:	adrp	x0, 442000 <__progname@@GLIBC_2.17+0x3ba8>
  423cb8:	ldr	w0, [x0, #2240]
  423cbc:	cmn	w0, #0x1
  423cc0:	b.eq	423c6c <_obstack_memory_used@@Base+0xce84>  // b.none
  423cc4:	ldr	x21, [sp, #32]
  423cc8:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423ccc:	bl	402840 <__errno_location@plt>
  423cd0:	mov	x19, x0
  423cd4:	ldr	w21, [x0]
  423cd8:	mov	w0, w20
  423cdc:	bl	402530 <close@plt>
  423ce0:	str	w21, [x19]
  423ce4:	mov	w20, #0xffffffff            	// #-1
  423ce8:	ldr	x21, [sp, #32]
  423cec:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423cf0:	mov	x2, #0x1                   	// #1
  423cf4:	lsl	x2, x2, x1
  423cf8:	mov	x0, #0x515                 	// #1301
  423cfc:	tst	x2, x0
  423d00:	b.ne	423d50 <_obstack_memory_used@@Base+0xcf68>  // b.any
  423d04:	mov	x0, #0xa0a                 	// #2570
  423d08:	tst	x2, x0
  423d0c:	b.ne	423d40 <_obstack_memory_used@@Base+0xcf58>  // b.any
  423d10:	b	423b20 <_obstack_memory_used@@Base+0xcd38>
  423d14:	sub	w0, w1, #0x400
  423d18:	cmp	w0, #0xa
  423d1c:	b.hi	423b20 <_obstack_memory_used@@Base+0xcd38>  // b.pmore
  423d20:	mov	x2, #0x1                   	// #1
  423d24:	lsl	x2, x2, x0
  423d28:	mov	x0, #0x2c5                 	// #709
  423d2c:	tst	x2, x0
  423d30:	b.ne	423d50 <_obstack_memory_used@@Base+0xcf68>  // b.any
  423d34:	mov	x0, #0x502                 	// #1282
  423d38:	tst	x2, x0
  423d3c:	b.eq	423b20 <_obstack_memory_used@@Base+0xcd38>  // b.none
  423d40:	mov	w0, w19
  423d44:	bl	4026d0 <fcntl@plt>
  423d48:	mov	w20, w0
  423d4c:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423d50:	ldr	w2, [sp, #72]
  423d54:	ldr	x0, [sp, #48]
  423d58:	tbnz	w2, #31, 423d7c <_obstack_memory_used@@Base+0xcf94>
  423d5c:	add	x2, x0, #0xb
  423d60:	and	x2, x2, #0xfffffffffffffff8
  423d64:	str	x2, [sp, #48]
  423d68:	ldr	w2, [x0]
  423d6c:	mov	w0, w19
  423d70:	bl	4026d0 <fcntl@plt>
  423d74:	mov	w20, w0
  423d78:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423d7c:	add	w3, w2, #0x8
  423d80:	str	w3, [sp, #72]
  423d84:	cmp	w3, #0x0
  423d88:	b.le	423d9c <_obstack_memory_used@@Base+0xcfb4>
  423d8c:	add	x2, x0, #0xb
  423d90:	and	x2, x2, #0xfffffffffffffff8
  423d94:	str	x2, [sp, #48]
  423d98:	b	423d68 <_obstack_memory_used@@Base+0xcf80>
  423d9c:	ldr	x0, [sp, #56]
  423da0:	add	x0, x0, w2, sxtw
  423da4:	b	423d68 <_obstack_memory_used@@Base+0xcf80>
  423da8:	add	w3, w2, #0x8
  423dac:	str	w3, [sp, #72]
  423db0:	cmp	w3, #0x0
  423db4:	b.le	423dc8 <_obstack_memory_used@@Base+0xcfe0>
  423db8:	add	x2, x0, #0xf
  423dbc:	and	x2, x2, #0xfffffffffffffff8
  423dc0:	str	x2, [sp, #48]
  423dc4:	b	423b38 <_obstack_memory_used@@Base+0xcd50>
  423dc8:	ldr	x0, [sp, #56]
  423dcc:	add	x0, x0, w2, sxtw
  423dd0:	b	423b38 <_obstack_memory_used@@Base+0xcd50>
  423dd4:	ldr	x21, [sp, #32]
  423dd8:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423ddc:	ldr	x21, [sp, #32]
  423de0:	b	423b78 <_obstack_memory_used@@Base+0xcd90>
  423de4:	nop
  423de8:	stp	x29, x30, [sp, #-64]!
  423dec:	mov	x29, sp
  423df0:	stp	x19, x20, [sp, #16]
  423df4:	adrp	x20, 43d000 <_obstack_memory_used@@Base+0x26218>
  423df8:	add	x20, x20, #0xdf0
  423dfc:	stp	x21, x22, [sp, #32]
  423e00:	adrp	x21, 43d000 <_obstack_memory_used@@Base+0x26218>
  423e04:	add	x21, x21, #0xde8
  423e08:	sub	x20, x20, x21
  423e0c:	mov	w22, w0
  423e10:	stp	x23, x24, [sp, #48]
  423e14:	mov	x23, x1
  423e18:	mov	x24, x2
  423e1c:	bl	402210 <mbrtowc@plt-0x40>
  423e20:	cmp	xzr, x20, asr #3
  423e24:	b.eq	423e50 <_obstack_memory_used@@Base+0xd068>  // b.none
  423e28:	asr	x20, x20, #3
  423e2c:	mov	x19, #0x0                   	// #0
  423e30:	ldr	x3, [x21, x19, lsl #3]
  423e34:	mov	x2, x24
  423e38:	add	x19, x19, #0x1
  423e3c:	mov	x1, x23
  423e40:	mov	w0, w22
  423e44:	blr	x3
  423e48:	cmp	x20, x19
  423e4c:	b.ne	423e30 <_obstack_memory_used@@Base+0xd048>  // b.any
  423e50:	ldp	x19, x20, [sp, #16]
  423e54:	ldp	x21, x22, [sp, #32]
  423e58:	ldp	x23, x24, [sp, #48]
  423e5c:	ldp	x29, x30, [sp], #64
  423e60:	ret
  423e64:	nop
  423e68:	ret
  423e6c:	nop
  423e70:	adrp	x2, 43e000 <_obstack_memory_used@@Base+0x27218>
  423e74:	mov	x1, #0x0                   	// #0
  423e78:	ldr	x2, [x2, #848]
  423e7c:	b	402320 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000423e80 <.fini>:
  423e80:	stp	x29, x30, [sp, #-16]!
  423e84:	mov	x29, sp
  423e88:	ldp	x29, x30, [sp], #16
  423e8c:	ret
