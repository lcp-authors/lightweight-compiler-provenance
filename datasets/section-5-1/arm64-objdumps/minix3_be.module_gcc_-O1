
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//minix3_be.module_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_minix_close>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	ldr	x0, [x0, #80]
   c:	bl	0 <grub_free>
  10:	mov	w0, #0x0                   	// #0
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <grub_minix_read_inode>:
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	str	w1, [x0, #100]
  28:	sub	w2, w1, #0x1
  2c:	ldrh	w5, [x0, #6]
  30:	ldrh	w3, [x0, #8]
  34:	lsr	w1, w5, #8
  38:	orr	w5, w1, w5, lsl #8
  3c:	and	w5, w5, #0xffff
  40:	add	w1, w5, #0x2
  44:	lsr	w5, w3, #8
  48:	orr	w5, w5, w3, lsl #8
  4c:	add	w5, w1, w5, uxth
  50:	mov	w5, w5
  54:	ldr	x6, [x0, #128]
  58:	lsr	w1, w2, #3
  5c:	add	x4, x0, #0x20
  60:	mov	x3, #0x40                  	// #64
  64:	ubfiz	x2, x2, #6, #3
  68:	madd	x1, x5, x6, x1
  6c:	ldr	x0, [x0, #112]
  70:	bl	0 <grub_disk_read>
  74:	mov	w0, #0x0                   	// #0
  78:	ldp	x29, x30, [sp], #16
  7c:	ret

0000000000000080 <grub_get_indir>:
  80:	stp	x29, x30, [sp, #-32]!
  84:	mov	x29, sp
  88:	mov	w1, w1
  8c:	ldr	x5, [x0, #128]
  90:	add	x4, sp, #0x1c
  94:	mov	x3, #0x4                   	// #4
  98:	ubfiz	x2, x2, #2, #32
  9c:	mul	x1, x1, x5
  a0:	ldr	x0, [x0, #112]
  a4:	bl	0 <grub_disk_read>
  a8:	ldr	w0, [sp, #28]
  ac:	rev	w0, w0
  b0:	ldp	x29, x30, [sp], #32
  b4:	ret

00000000000000b8 <grub_minix_read_file>:
  b8:	stp	x29, x30, [sp, #-128]!
  bc:	mov	x29, sp
  c0:	stp	x19, x20, [sp, #16]
  c4:	mov	x19, x0
  c8:	str	x4, [sp, #104]
  cc:	ldr	w0, [x0, #40]
  d0:	rev	w0, w0
  d4:	cmp	x0, x3
  d8:	b.cc	170 <grub_minix_read_file+0xb8>  // b.lo, b.ul, b.last
  dc:	stp	x21, x22, [sp, #32]
  e0:	stp	x27, x28, [sp, #80]
  e4:	mov	x27, x1
  e8:	mov	x28, x2
  ec:	mov	x22, x5
  f0:	ldr	x4, [sp, #104]
  f4:	add	x2, x3, x4
  f8:	sub	x1, x0, x3
  fc:	cmp	x0, x2
 100:	csel	x0, x1, x4, cc  // cc = lo, ul, last
 104:	mov	x1, x0
 108:	str	x0, [sp, #104]
 10c:	mov	x0, #0x0                   	// #0
 110:	cbz	x1, 380 <grub_minix_read_file+0x2c8>
 114:	stp	x25, x26, [sp, #64]
 118:	add	x1, x1, x3
 11c:	ldr	x0, [x19, #128]
 120:	sub	x26, x1, #0x1
 124:	ubfx	x26, x26, #9, #32
 128:	udiv	x26, x26, x0
 12c:	str	w26, [sp, #96]
 130:	add	w26, w26, #0x1
 134:	and	x3, x3, #0xffffffff
 138:	lsl	x0, x0, #9
 13c:	udiv	x20, x3, x0
 140:	str	w20, [sp, #100]
 144:	msub	x0, x20, x0, x3
 148:	str	x0, [sp, #112]
 14c:	cmp	w26, w20
 150:	b.ls	33c <grub_minix_read_file+0x284>  // b.plast
 154:	stp	x23, x24, [sp, #48]
 158:	add	x24, x20, #0xe
 15c:	add	x24, x19, x24, lsl #2
 160:	adrp	x25, 0 <grub_minix_close>
 164:	and	x0, x1, #0xffffffff
 168:	str	x0, [sp, #120]
 16c:	b	218 <grub_minix_read_file+0x160>
 170:	adrp	x0, 0 <grub_minix_close>
 174:	ldr	x1, [x0]
 178:	mov	w0, #0xb                   	// #11
 17c:	bl	0 <grub_error>
 180:	mov	x0, #0xffffffffffffffff    	// #-1
 184:	b	388 <grub_minix_read_file+0x2d0>
 188:	ldr	w0, [x24]
 18c:	rev	w0, w0
 190:	ldr	x1, [x25]
 194:	ldr	w1, [x1]
 198:	cbnz	w1, 350 <grub_minix_read_file+0x298>
 19c:	ldr	w1, [sp, #96]
 1a0:	lsl	x3, x21, #9
 1a4:	cmp	w1, w20
 1a8:	b.eq	308 <grub_minix_read_file+0x250>  // b.none
 1ac:	mov	x23, #0x0                   	// #0
 1b0:	ldr	w1, [sp, #100]
 1b4:	cmp	w1, w20
 1b8:	b.eq	328 <grub_minix_read_file+0x270>  // b.none
 1bc:	ldr	x1, [x19, #112]
 1c0:	str	x27, [x1, #48]
 1c4:	ldr	x1, [x19, #112]
 1c8:	str	x28, [x1, #56]
 1cc:	mov	w0, w0
 1d0:	ldr	x1, [x19, #128]
 1d4:	mov	x4, x22
 1d8:	mov	x2, x23
 1dc:	mul	x1, x0, x1
 1e0:	ldr	x0, [x19, #112]
 1e4:	bl	0 <grub_disk_read>
 1e8:	ldr	x0, [x19, #112]
 1ec:	str	xzr, [x0, #48]
 1f0:	ldr	x0, [x25]
 1f4:	ldr	w0, [x0]
 1f8:	cbnz	w0, 368 <grub_minix_read_file+0x2b0>
 1fc:	ldr	x5, [x19, #128]
 200:	add	x22, x22, x5, lsl #9
 204:	sub	x22, x22, x23
 208:	add	w20, w20, #0x1
 20c:	add	x24, x24, #0x4
 210:	cmp	w26, w20
 214:	b.ls	338 <grub_minix_read_file+0x280>  // b.plast
 218:	ldr	x21, [x19, #128]
 21c:	cmp	w20, #0x6
 220:	b.ls	188 <grub_minix_read_file+0xd0>  // b.plast
 224:	sub	w2, w20, #0x7
 228:	ldr	w0, [x19, #96]
 22c:	cmp	w0, w2
 230:	b.hi	274 <grub_minix_read_file+0x1bc>  // b.pmore
 234:	sub	w23, w2, w0
 238:	mov	w1, w0
 23c:	umull	x3, w0, w0
 240:	sub	w2, w2, w0
 244:	cmp	x2, x3
 248:	b.cc	288 <grub_minix_read_file+0x1d0>  // b.lo, b.ul, b.last
 24c:	msub	w23, w0, w0, w23
 250:	mul	x1, x1, x3
 254:	cmp	x1, w23, uxtw
 258:	b.hi	2b8 <grub_minix_read_file+0x200>  // b.pmore
 25c:	adrp	x0, 0 <grub_minix_close>
 260:	ldr	x1, [x0]
 264:	mov	w0, #0xb                   	// #11
 268:	bl	0 <grub_error>
 26c:	mov	w0, #0x0                   	// #0
 270:	b	190 <grub_minix_read_file+0xd8>
 274:	ldr	w1, [x19, #84]
 278:	rev	w1, w1
 27c:	mov	x0, x19
 280:	bl	80 <grub_get_indir>
 284:	b	190 <grub_minix_read_file+0xd8>
 288:	ldr	w1, [x19, #88]
 28c:	udiv	w2, w23, w0
 290:	rev	w1, w1
 294:	mov	x0, x19
 298:	bl	80 <grub_get_indir>
 29c:	ldr	w2, [x19, #96]
 2a0:	udiv	w1, w23, w2
 2a4:	msub	w2, w1, w2, w23
 2a8:	mov	w1, w0
 2ac:	mov	x0, x19
 2b0:	bl	80 <grub_get_indir>
 2b4:	b	190 <grub_minix_read_file+0xd8>
 2b8:	ldr	w1, [x19, #92]
 2bc:	udiv	w2, w23, w0
 2c0:	udiv	w2, w2, w0
 2c4:	rev	w1, w1
 2c8:	mov	x0, x19
 2cc:	bl	80 <grub_get_indir>
 2d0:	ldr	w3, [x19, #96]
 2d4:	udiv	w2, w23, w3
 2d8:	udiv	w1, w2, w3
 2dc:	msub	w2, w1, w3, w2
 2e0:	mov	w1, w0
 2e4:	mov	x0, x19
 2e8:	bl	80 <grub_get_indir>
 2ec:	ldr	w2, [x19, #96]
 2f0:	udiv	w1, w23, w2
 2f4:	msub	w2, w1, w2, w23
 2f8:	mov	w1, w0
 2fc:	mov	x0, x19
 300:	bl	80 <grub_get_indir>
 304:	b	190 <grub_minix_read_file+0xd8>
 308:	ldr	x1, [x19, #128]
 30c:	lsl	x1, x1, #9
 310:	ldr	x2, [sp, #120]
 314:	udiv	x3, x2, x1
 318:	msub	x3, x3, x1, x2
 31c:	cmp	x3, #0x0
 320:	csel	x3, x3, x1, ne  // ne = any
 324:	b	1ac <grub_minix_read_file+0xf4>
 328:	ldr	x1, [sp, #112]
 32c:	sub	x3, x3, x1
 330:	mov	x23, x1
 334:	b	1bc <grub_minix_read_file+0x104>
 338:	ldp	x23, x24, [sp, #48]
 33c:	ldr	x0, [sp, #104]
 340:	ldp	x21, x22, [sp, #32]
 344:	ldp	x25, x26, [sp, #64]
 348:	ldp	x27, x28, [sp, #80]
 34c:	b	388 <grub_minix_read_file+0x2d0>
 350:	mov	x0, #0xffffffffffffffff    	// #-1
 354:	ldp	x21, x22, [sp, #32]
 358:	ldp	x23, x24, [sp, #48]
 35c:	ldp	x25, x26, [sp, #64]
 360:	ldp	x27, x28, [sp, #80]
 364:	b	388 <grub_minix_read_file+0x2d0>
 368:	mov	x0, #0xffffffffffffffff    	// #-1
 36c:	ldp	x21, x22, [sp, #32]
 370:	ldp	x23, x24, [sp, #48]
 374:	ldp	x25, x26, [sp, #64]
 378:	ldp	x27, x28, [sp, #80]
 37c:	b	388 <grub_minix_read_file+0x2d0>
 380:	ldp	x21, x22, [sp, #32]
 384:	ldp	x27, x28, [sp, #80]
 388:	ldp	x19, x20, [sp, #16]
 38c:	ldp	x29, x30, [sp], #128
 390:	ret
 394:	nop
	...

00000000000003b0 <grub_minix_read>:
 3b0:	stp	x29, x30, [sp, #-16]!
 3b4:	mov	x29, sp
 3b8:	mov	x5, x1
 3bc:	mov	x4, x2
 3c0:	ldr	x3, [x0, #24]
 3c4:	ldr	x2, [x0, #96]
 3c8:	ldr	x1, [x0, #88]
 3cc:	ldr	x0, [x0, #80]
 3d0:	bl	b8 <grub_minix_read_file>
 3d4:	ldp	x29, x30, [sp], #16
 3d8:	ret

00000000000003dc <grub_minix_mount>:
 3dc:	stp	x29, x30, [sp, #-32]!
 3e0:	mov	x29, sp
 3e4:	stp	x19, x20, [sp, #16]
 3e8:	mov	x20, x0
 3ec:	mov	x0, #0x88                  	// #136
 3f0:	bl	0 <grub_malloc>
 3f4:	mov	x19, x0
 3f8:	cbz	x0, 4b8 <grub_minix_mount+0xdc>
 3fc:	mov	x4, x0
 400:	mov	x3, #0x20                  	// #32
 404:	mov	x2, #0x0                   	// #0
 408:	mov	x1, #0x2                   	// #2
 40c:	mov	x0, x20
 410:	bl	0 <grub_disk_read>
 414:	adrp	x0, 0 <grub_minix_close>
 418:	ldr	x0, [x0]
 41c:	ldr	w0, [x0]
 420:	cbnz	w0, 49c <grub_minix_mount+0xc0>
 424:	ldrh	w1, [x19, #24]
 428:	mov	w0, #0x5a4d                	// #23117
 42c:	cmp	w1, w0
 430:	b.ne	49c <grub_minix_mount+0xc0>  // b.any
 434:	mov	w0, #0x3c                  	// #60
 438:	str	w0, [x19, #120]
 43c:	ldrh	w1, [x19, #12]
 440:	lsr	w0, w1, #8
 444:	orr	w1, w0, w1, lsl #8
 448:	and	w1, w1, #0xffff
 44c:	cmp	w1, #0x13
 450:	b.hi	49c <grub_minix_mount+0xc0>  // b.pmore
 454:	str	x20, [x19, #112]
 458:	str	wzr, [x19, #104]
 45c:	ldrh	w0, [x19, #28]
 460:	mov	w2, #0xffff                	// #65535
 464:	cmp	w0, w2
 468:	b.eq	4c8 <grub_minix_mount+0xec>  // b.none
 46c:	and	w2, w0, #0xfffffffd
 470:	cbz	w2, 49c <grub_minix_mount+0xc0>
 474:	and	w2, w0, #0xffffff01
 478:	cbnz	w2, 49c <grub_minix_mount+0xc0>
 47c:	ubfx	x0, x0, #1, #7
 480:	str	x0, [x19, #128]
 484:	add	w1, w1, #0x9
 488:	ldr	x0, [x19, #128]
 48c:	lsl	x1, x0, x1
 490:	lsr	x1, x1, #2
 494:	str	w1, [x19, #96]
 498:	cbnz	w1, 4b8 <grub_minix_mount+0xdc>
 49c:	mov	x0, x19
 4a0:	bl	0 <grub_free>
 4a4:	adrp	x0, 0 <grub_minix_close>
 4a8:	ldr	x1, [x0]
 4ac:	mov	w0, #0x9                   	// #9
 4b0:	bl	0 <grub_error>
 4b4:	mov	x19, #0x0                   	// #0
 4b8:	mov	x0, x19
 4bc:	ldp	x19, x20, [sp, #16]
 4c0:	ldp	x29, x30, [sp], #32
 4c4:	ret
 4c8:	mov	x0, #0x2                   	// #2
 4cc:	str	x0, [x19, #128]
 4d0:	b	484 <grub_minix_mount+0xa8>
 4d4:	nop
	...

00000000000004e8 <grub_minix_find_file>:
 4e8:	stp	x29, x30, [sp, #-192]!
 4ec:	mov	x29, sp
 4f0:	stp	x19, x20, [sp, #16]
 4f4:	stp	x21, x22, [sp, #32]
 4f8:	stp	x23, x24, [sp, #48]
 4fc:	stp	x25, x26, [sp, #64]
 500:	stp	x27, x28, [sp, #80]
 504:	mov	x19, x0
 508:	str	x1, [sp, #104]
 50c:	mov	x21, x1
 510:	mov	x27, #0x4                   	// #4
 514:	add	x25, sp, #0x80
 518:	mov	x23, x25
 51c:	mov	w28, #0xffffa000            	// #-24576
 520:	ldrb	w0, [x21]
 524:	cmp	w0, #0x2f
 528:	b.ne	538 <grub_minix_find_file+0x50>  // b.any
 52c:	ldrb	w0, [x21, #1]!
 530:	cmp	w0, #0x2f
 534:	b.eq	52c <grub_minix_find_file+0x44>  // b.none
 538:	cbz	w0, 744 <grub_minix_find_file+0x25c>
 53c:	ldrh	w0, [x19, #32]
 540:	tbz	w0, #6, 57c <grub_minix_find_file+0x94>
 544:	ldrb	w0, [x21]
 548:	cmp	w0, #0x2f
 54c:	mov	x24, x21
 550:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 554:	b.eq	568 <grub_minix_find_file+0x80>  // b.none
 558:	ldrb	w0, [x24, #1]!
 55c:	cmp	w0, #0x2f
 560:	ccmp	w0, #0x0, #0x4, ne  // ne = any
 564:	b.ne	558 <grub_minix_find_file+0x70>  // b.any
 568:	ldr	w0, [x19, #40]
 56c:	cbz	w0, 590 <grub_minix_find_file+0xa8>
 570:	mov	w20, #0x0                   	// #0
 574:	sub	x26, x24, x21
 578:	b	69c <grub_minix_find_file+0x1b4>
 57c:	adrp	x0, 0 <grub_minix_close>
 580:	ldr	x1, [x0]
 584:	mov	w0, #0x4                   	// #4
 588:	bl	0 <grub_error>
 58c:	b	5b0 <grub_minix_find_file+0xc8>
 590:	ldr	x2, [sp, #104]
 594:	adrp	x0, 0 <grub_minix_close>
 598:	ldr	x1, [x0]
 59c:	mov	w0, #0x5                   	// #5
 5a0:	bl	0 <grub_error>
 5a4:	adrp	x0, 0 <grub_minix_close>
 5a8:	ldr	x0, [x0]
 5ac:	ldr	w0, [x0]
 5b0:	ldp	x19, x20, [sp, #16]
 5b4:	ldp	x21, x22, [sp, #32]
 5b8:	ldp	x23, x24, [sp, #48]
 5bc:	ldp	x25, x26, [sp, #64]
 5c0:	ldp	x27, x28, [sp, #80]
 5c4:	ldp	x29, x30, [sp], #192
 5c8:	ret
 5cc:	adrp	x0, 0 <grub_minix_close>
 5d0:	ldr	x0, [x0]
 5d4:	ldr	w0, [x0]
 5d8:	b	5b0 <grub_minix_find_file+0xc8>
 5dc:	adrp	x0, 0 <grub_minix_close>
 5e0:	ldr	x0, [x0]
 5e4:	ldr	w0, [x0]
 5e8:	b	5b0 <grub_minix_find_file+0xc8>
 5ec:	ldr	w22, [x19, #40]
 5f0:	ldr	w0, [x19, #104]
 5f4:	add	w0, w0, #0x1
 5f8:	str	w0, [x19, #104]
 5fc:	cmp	w0, #0x8
 600:	b.gt	668 <grub_minix_find_file+0x180>
 604:	rev	w26, w22
 608:	rev	w22, w22
 60c:	add	x0, x22, #0x1
 610:	bl	0 <grub_malloc>
 614:	mov	x21, x0
 618:	cbz	x0, 678 <grub_minix_find_file+0x190>
 61c:	mov	x5, x0
 620:	mov	x4, x22
 624:	mov	x3, #0x0                   	// #0
 628:	mov	x2, #0x0                   	// #0
 62c:	mov	x1, #0x0                   	// #0
 630:	mov	x0, x19
 634:	bl	b8 <grub_minix_read_file>
 638:	tbnz	x0, #63, 678 <grub_minix_find_file+0x190>
 63c:	strb	wzr, [x21, w26, uxtw]
 640:	ldrb	w0, [x21]
 644:	cmp	w0, #0x2f
 648:	csinc	w1, w20, wzr, ne  // ne = any
 64c:	mov	x0, x19
 650:	bl	1c <grub_minix_read_inode>
 654:	cbnz	w0, 678 <grub_minix_find_file+0x190>
 658:	mov	x1, x21
 65c:	mov	x0, x19
 660:	bl	4e8 <grub_minix_find_file>
 664:	b	678 <grub_minix_find_file+0x190>
 668:	adrp	x0, 0 <grub_minix_close>
 66c:	ldr	x1, [x0]
 670:	mov	w0, #0x19                  	// #25
 674:	bl	0 <grub_error>
 678:	adrp	x0, 0 <grub_minix_close>
 67c:	ldr	x0, [x0]
 680:	ldr	w0, [x0]
 684:	cbz	w0, 73c <grub_minix_find_file+0x254>
 688:	b	5b0 <grub_minix_find_file+0xc8>
 68c:	ldr	w0, [x19, #40]
 690:	rev	w0, w0
 694:	cmp	w20, w0
 698:	b.cs	590 <grub_minix_find_file+0xa8>  // b.hs, b.nlast
 69c:	mov	w22, w20
 6a0:	add	x5, sp, #0x7c
 6a4:	mov	x4, x27
 6a8:	mov	x3, x22
 6ac:	mov	x2, #0x0                   	// #0
 6b0:	mov	x1, #0x0                   	// #0
 6b4:	mov	x0, x19
 6b8:	bl	b8 <grub_minix_read_file>
 6bc:	tbnz	x0, #63, 5cc <grub_minix_find_file+0xe4>
 6c0:	mov	x5, x23
 6c4:	ldrsw	x4, [x19, #120]
 6c8:	add	x3, x22, #0x4
 6cc:	mov	x2, #0x0                   	// #0
 6d0:	mov	x1, #0x0                   	// #0
 6d4:	mov	x0, x19
 6d8:	bl	b8 <grub_minix_read_file>
 6dc:	tbnz	x0, #63, 5dc <grub_minix_find_file+0xf4>
 6e0:	ldr	w0, [x19, #120]
 6e4:	add	w1, w0, #0x4
 6e8:	add	w20, w20, w1
 6ec:	strb	wzr, [x25, w0, sxtw]
 6f0:	mov	x2, x26
 6f4:	mov	x1, x23
 6f8:	mov	x0, x21
 6fc:	bl	0 <grub_strncmp>
 700:	cbnz	w0, 68c <grub_minix_find_file+0x1a4>
 704:	ldrb	w0, [x25, x26]
 708:	cbnz	w0, 68c <grub_minix_find_file+0x1a4>
 70c:	ldr	w20, [x19, #100]
 710:	ldr	w1, [sp, #124]
 714:	rev	w1, w1
 718:	mov	x0, x19
 71c:	bl	1c <grub_minix_read_inode>
 720:	ldrh	w0, [x19, #32]
 724:	lsr	w1, w0, #8
 728:	orr	w0, w1, w0, lsl #8
 72c:	and	w0, w0, w28
 730:	and	w0, w0, #0xffff
 734:	cmp	w0, #0xa, lsl #12
 738:	b.eq	5ec <grub_minix_find_file+0x104>  // b.none
 73c:	mov	x21, x24
 740:	b	520 <grub_minix_find_file+0x38>
 744:	mov	w0, #0x0                   	// #0
 748:	b	5b0 <grub_minix_find_file+0xc8>
 74c:	nop
	...

0000000000000770 <grub_minix_open>:
 770:	stp	x29, x30, [sp, #-48]!
 774:	mov	x29, sp
 778:	stp	x19, x20, [sp, #16]
 77c:	str	x21, [sp, #32]
 780:	mov	x21, x0
 784:	mov	x20, x1
 788:	ldr	x0, [x0, #8]
 78c:	ldr	x0, [x0]
 790:	bl	3dc <grub_minix_mount>
 794:	cbz	x0, 7f4 <grub_minix_open+0x84>
 798:	mov	x19, x0
 79c:	mov	w1, #0x1                   	// #1
 7a0:	bl	1c <grub_minix_read_inode>
 7a4:	adrp	x0, 0 <grub_minix_close>
 7a8:	ldr	x0, [x0]
 7ac:	ldr	w0, [x0]
 7b0:	cbnz	w0, 804 <grub_minix_open+0x94>
 7b4:	cbz	x20, 7c4 <grub_minix_open+0x54>
 7b8:	ldrb	w0, [x20]
 7bc:	cmp	w0, #0x2f
 7c0:	b.eq	81c <grub_minix_open+0xac>  // b.none
 7c4:	mov	x2, x20
 7c8:	adrp	x0, 0 <grub_minix_close>
 7cc:	ldr	x1, [x0]
 7d0:	mov	w0, #0x7                   	// #7
 7d4:	bl	0 <grub_error>
 7d8:	adrp	x0, 0 <grub_minix_close>
 7dc:	ldr	x0, [x0]
 7e0:	ldr	w0, [x0]
 7e4:	ldp	x19, x20, [sp, #16]
 7e8:	ldr	x21, [sp, #32]
 7ec:	ldp	x29, x30, [sp], #48
 7f0:	ret
 7f4:	adrp	x0, 0 <grub_minix_close>
 7f8:	ldr	x0, [x0]
 7fc:	ldr	w0, [x0]
 800:	b	7e4 <grub_minix_open+0x74>
 804:	mov	x0, x19
 808:	bl	0 <grub_free>
 80c:	adrp	x0, 0 <grub_minix_close>
 810:	ldr	x0, [x0]
 814:	ldr	w0, [x0]
 818:	b	7e4 <grub_minix_open+0x74>
 81c:	mov	x1, x20
 820:	mov	x0, x19
 824:	bl	4e8 <grub_minix_find_file>
 828:	adrp	x0, 0 <grub_minix_close>
 82c:	ldr	x0, [x0]
 830:	ldr	w0, [x0]
 834:	cbnz	w0, 84c <grub_minix_open+0xdc>
 838:	str	x19, [x21, #80]
 83c:	ldr	w1, [x19, #40]
 840:	rev	w1, w1
 844:	str	x1, [x21, #64]
 848:	b	7e4 <grub_minix_open+0x74>
 84c:	mov	x0, x19
 850:	bl	0 <grub_free>
 854:	adrp	x0, 0 <grub_minix_close>
 858:	ldr	x0, [x0]
 85c:	ldr	w0, [x0]
 860:	b	7e4 <grub_minix_open+0x74>
 864:	nop
	...

0000000000000878 <grub_minix_dir>:
 878:	stp	x29, x30, [sp, #-192]!
 87c:	mov	x29, sp
 880:	stp	x19, x20, [sp, #16]
 884:	stp	x21, x22, [sp, #32]
 888:	stp	x23, x24, [sp, #48]
 88c:	mov	x20, x1
 890:	mov	x22, x2
 894:	mov	x23, x3
 898:	ldr	x0, [x0]
 89c:	bl	3dc <grub_minix_mount>
 8a0:	cbz	x0, 8e8 <grub_minix_dir+0x70>
 8a4:	mov	x19, x0
 8a8:	mov	w1, #0x1                   	// #1
 8ac:	bl	1c <grub_minix_read_inode>
 8b0:	adrp	x0, 0 <grub_minix_close>
 8b4:	ldr	x0, [x0]
 8b8:	ldr	w0, [x0]
 8bc:	cbz	w0, 8f8 <grub_minix_dir+0x80>
 8c0:	mov	x0, x19
 8c4:	bl	0 <grub_free>
 8c8:	adrp	x0, 0 <grub_minix_close>
 8cc:	ldr	x0, [x0]
 8d0:	ldr	w0, [x0]
 8d4:	ldp	x19, x20, [sp, #16]
 8d8:	ldp	x21, x22, [sp, #32]
 8dc:	ldp	x23, x24, [sp, #48]
 8e0:	ldp	x29, x30, [sp], #192
 8e4:	ret
 8e8:	adrp	x0, 0 <grub_minix_close>
 8ec:	ldr	x0, [x0]
 8f0:	ldr	w0, [x0]
 8f4:	b	8d4 <grub_minix_dir+0x5c>
 8f8:	mov	x1, x20
 8fc:	mov	x0, x19
 900:	bl	4e8 <grub_minix_find_file>
 904:	adrp	x0, 0 <grub_minix_close>
 908:	ldr	x0, [x0]
 90c:	ldr	w20, [x0]
 910:	cbnz	w20, 8c0 <grub_minix_dir+0x48>
 914:	ldrh	w0, [x19, #32]
 918:	tbz	w0, #6, 93c <grub_minix_dir+0xc4>
 91c:	ldr	w0, [x19, #40]
 920:	cbz	w0, 8c0 <grub_minix_dir+0x48>
 924:	stp	x25, x26, [sp, #64]
 928:	str	x27, [sp, #80]
 92c:	mov	x25, #0x10                  	// #16
 930:	mov	x24, #0x4                   	// #4
 934:	add	x21, sp, #0x80
 938:	b	9ec <grub_minix_dir+0x174>
 93c:	adrp	x0, 0 <grub_minix_close>
 940:	ldr	x1, [x0]
 944:	mov	w0, #0x4                   	// #4
 948:	bl	0 <grub_error>
 94c:	b	8c0 <grub_minix_dir+0x48>
 950:	adrp	x0, 0 <grub_minix_close>
 954:	ldr	x0, [x0]
 958:	ldr	w0, [x0]
 95c:	ldp	x25, x26, [sp, #64]
 960:	ldr	x27, [sp, #80]
 964:	b	8d4 <grub_minix_dir+0x5c>
 968:	adrp	x0, 0 <grub_minix_close>
 96c:	ldr	x0, [x0]
 970:	ldr	w0, [x0]
 974:	ldp	x25, x26, [sp, #64]
 978:	ldr	x27, [sp, #80]
 97c:	b	8d4 <grub_minix_dir+0x5c>
 980:	rev	w1, w1
 984:	mov	x0, x19
 988:	bl	1c <grub_minix_read_inode>
 98c:	ldrh	w1, [x19, #32]
 990:	ubfx	x1, x1, #6, #1
 994:	ldrb	w0, [sp, #112]
 998:	bfxil	w0, w1, #0, #1
 99c:	orr	w0, w0, #0x2
 9a0:	strb	w0, [sp, #112]
 9a4:	ldr	w0, [x19, #48]
 9a8:	rev	w0, w0
 9ac:	str	w0, [sp, #116]
 9b0:	mov	x2, x23
 9b4:	add	x1, sp, #0x70
 9b8:	mov	x0, x21
 9bc:	blr	x22
 9c0:	cbnz	w0, a6c <grub_minix_dir+0x1f4>
 9c4:	mov	w1, w27
 9c8:	mov	x0, x19
 9cc:	bl	1c <grub_minix_read_inode>
 9d0:	ldr	w0, [x19, #120]
 9d4:	add	w0, w0, #0x4
 9d8:	add	w20, w20, w0
 9dc:	ldr	w0, [x19, #40]
 9e0:	rev	w0, w0
 9e4:	cmp	w20, w0
 9e8:	b.cs	a60 <grub_minix_dir+0x1e8>  // b.hs, b.nlast
 9ec:	ldr	w27, [x19, #100]
 9f0:	mov	x2, x25
 9f4:	mov	w1, #0x0                   	// #0
 9f8:	add	x0, sp, #0x70
 9fc:	bl	0 <grub_memset>
 a00:	mov	w26, w20
 a04:	add	x5, sp, #0x6c
 a08:	mov	x4, x24
 a0c:	mov	x3, x26
 a10:	mov	x2, #0x0                   	// #0
 a14:	mov	x1, #0x0                   	// #0
 a18:	mov	x0, x19
 a1c:	bl	b8 <grub_minix_read_file>
 a20:	tbnz	x0, #63, 950 <grub_minix_dir+0xd8>
 a24:	mov	x5, x21
 a28:	ldrsw	x4, [x19, #120]
 a2c:	add	x3, x26, #0x4
 a30:	mov	x2, #0x0                   	// #0
 a34:	mov	x1, #0x0                   	// #0
 a38:	mov	x0, x19
 a3c:	bl	b8 <grub_minix_read_file>
 a40:	tbnz	x0, #63, 968 <grub_minix_dir+0xf0>
 a44:	ldr	w0, [x19, #120]
 a48:	strb	wzr, [x21, w0, sxtw]
 a4c:	ldr	w1, [sp, #108]
 a50:	cbnz	w1, 980 <grub_minix_dir+0x108>
 a54:	add	w0, w0, #0x4
 a58:	add	w20, w20, w0
 a5c:	b	9dc <grub_minix_dir+0x164>
 a60:	ldp	x25, x26, [sp, #64]
 a64:	ldr	x27, [sp, #80]
 a68:	b	8c0 <grub_minix_dir+0x48>
 a6c:	ldp	x25, x26, [sp, #64]
 a70:	ldr	x27, [sp, #80]
 a74:	b	8c0 <grub_minix_dir+0x48>
	...

0000000000000a88 <grub_mod_init>:
 a88:	stp	x29, x30, [sp, #-16]!
 a8c:	mov	x29, sp
 a90:	adrp	x0, 0 <grub_minix_close>
 a94:	ldr	x1, [x0]
 a98:	adrp	x0, 0 <grub_minix_close>
 a9c:	ldr	x0, [x0]
 aa0:	bl	0 <grub_list_push>
 aa4:	ldp	x29, x30, [sp], #16
 aa8:	ret
 aac:	nop
	...

0000000000000ac0 <grub_mod_fini>:
 ac0:	stp	x29, x30, [sp, #-16]!
 ac4:	mov	x29, sp
 ac8:	adrp	x0, 0 <grub_minix_close>
 acc:	ldr	x0, [x0]
 ad0:	bl	0 <grub_list_remove>
 ad4:	ldp	x29, x30, [sp], #16
 ad8:	ret
 adc:	nop
	...
