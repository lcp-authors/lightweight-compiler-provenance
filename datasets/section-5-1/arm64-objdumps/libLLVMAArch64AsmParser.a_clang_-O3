In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libLLVMAArch64AsmParser.a_clang_-O3:

AArch64AsmParser.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <LLVMInitializeAArch64AsmParser>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	str	x19, [sp, #16]
       8:	mov	x29, sp
       c:	bl	0 <_ZN4llvm21getTheAArch64leTargetEv>
      10:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
      14:	add	x19, x19, #0x0
      18:	str	x19, [x0, #104]
      1c:	bl	0 <_ZN4llvm21getTheAArch64beTargetEv>
      20:	str	x19, [x0, #104]
      24:	bl	0 <_ZN4llvm17getTheARM64TargetEv>
      28:	str	x19, [x0, #104]
      2c:	bl	0 <_ZN4llvm20getTheARM64_32TargetEv>
      30:	str	x19, [x0, #104]
      34:	bl	0 <_ZN4llvm22getTheAArch64_32TargetEv>
      38:	str	x19, [x0, #104]
      3c:	ldr	x19, [sp, #16]
      40:	ldp	x29, x30, [sp], #32
      44:	ret

0000000000000048 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE>:
      48:	sub	sp, sp, #0x60
      4c:	stp	x29, x30, [sp, #32]
      50:	str	x23, [sp, #48]
      54:	stp	x22, x21, [sp, #64]
      58:	stp	x20, x19, [sp, #80]
      5c:	add	x29, sp, #0x20
      60:	mov	x23, x0
      64:	mov	w0, #0xf8                  	// #248
      68:	mov	x21, x3
      6c:	mov	x22, x2
      70:	mov	x20, x1
      74:	bl	0 <_Znwm>
      78:	mov	x1, x21
      7c:	mov	x2, x23
      80:	mov	x3, x22
      84:	mov	x19, x0
      88:	bl	0 <_ZN4llvm17MCTargetAsmParserC2ERKNS_15MCTargetOptionsERKNS_15MCSubtargetInfoERKNS_11MCInstrInfoE>
      8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
      90:	add	x8, x8, #0x0
      94:	movi	v0.2d, #0x0
      98:	mov	x9, #0x1000000000          	// #68719476736
      9c:	mov	x0, x21
      a0:	str	x8, [x19]
      a4:	stp	q0, q0, [x19, #176]
      a8:	str	x9, [x19, #208]
      ac:	strh	wzr, [x19, #224]
      b0:	bl	0 <_ZNK4llvm15MCTargetOptions10getABINameEv>
      b4:	cmp	x1, #0x5
      b8:	mov	w8, wzr
      bc:	b.ne	e8 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE+0xa0>  // b.any
      c0:	ldr	w8, [x0]
      c4:	ldrb	w9, [x0, #4]
      c8:	mov	w10, #0x6c69                	// #27753
      cc:	movk	w10, #0x3370, lsl #16
      d0:	mov	w11, #0x32                  	// #50
      d4:	eor	w8, w8, w10
      d8:	eor	w9, w9, w11
      dc:	orr	w8, w8, w9
      e0:	cmp	w8, #0x0
      e4:	cset	w8, eq  // eq = none
      e8:	mov	x0, x19
      ec:	mov	x1, x20
      f0:	strb	w8, [x19, #240]
      f4:	bl	0 <_ZN4llvm20MCAsmParserExtension10InitializeERNS_11MCAsmParserE>
      f8:	ldr	x0, [x19, #8]
      fc:	ldr	x8, [x0]
     100:	ldr	x8, [x8, #56]
     104:	blr	x8
     108:	ldr	x8, [x0, #16]
     10c:	cbnz	x8, 124 <_ZN4llvm19RegisterMCAsmParserIN12_GLOBAL__N_116AArch64AsmParserEE9AllocatorERKNS_15MCSubtargetInfoERNS_11MCAsmParserERKNS_11MCInstrInfoERKNS_15MCTargetOptionsE+0xdc>
     110:	mov	x21, x0
     114:	mov	w0, #0x18                  	// #24
     118:	bl	0 <_Znwm>
     11c:	mov	x1, x21
     120:	bl	0 <_ZN4llvm21AArch64TargetStreamerC1ERNS_10MCStreamerE>
     124:	ldr	x8, [x20]
     128:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     12c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     130:	add	x1, x1, #0x0
     134:	ldr	x8, [x8, #24]
     138:	add	x3, x3, #0x0
     13c:	mov	w2, #0x6                   	// #6
     140:	mov	w4, #0x6                   	// #6
     144:	mov	x0, x20
     148:	blr	x8
     14c:	ldr	x8, [x20]
     150:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     154:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
     158:	add	x1, x1, #0x0
     15c:	ldr	x8, [x8, #24]
     160:	add	x3, x3, #0x0
     164:	mov	w2, #0x5                   	// #5
     168:	mov	w4, #0x6                   	// #6
     16c:	mov	x0, x20
     170:	blr	x8
     174:	ldr	x8, [x20]
     178:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
     17c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     180:	add	x21, x21, #0x0
     184:	ldr	x8, [x8, #24]
     188:	add	x1, x1, #0x0
     18c:	mov	w2, #0x6                   	// #6
     190:	mov	w4, #0x6                   	// #6
     194:	mov	x0, x20
     198:	mov	x3, x21
     19c:	blr	x8
     1a0:	ldr	x8, [x20]
     1a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     1a8:	add	x1, x1, #0x0
     1ac:	mov	w2, #0x6                   	// #6
     1b0:	ldr	x8, [x8, #24]
     1b4:	mov	w4, #0x6                   	// #6
     1b8:	mov	x0, x20
     1bc:	mov	x3, x21
     1c0:	blr	x8
     1c4:	mov	x0, x19
     1c8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
     1cc:	ldp	x1, x2, [x0, #184]
     1d0:	ldr	x3, [x0, #200]
     1d4:	add	x0, sp, #0x8
     1d8:	bl	208 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
     1dc:	ldr	x8, [sp, #24]
     1e0:	ldur	q0, [sp, #8]
     1e4:	mov	x0, x19
     1e8:	ldp	x22, x21, [sp, #64]
     1ec:	str	x8, [x19, #40]
     1f0:	stur	q0, [x19, #24]
     1f4:	ldp	x20, x19, [sp, #80]
     1f8:	ldr	x23, [sp, #48]
     1fc:	ldp	x29, x30, [sp, #32]
     200:	add	sp, sp, #0x60
     204:	ret

0000000000000208 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>:
     208:	mov	x8, xzr
     20c:	stp	xzr, xzr, [x0]
     210:	str	xzr, [x0, #16]
     214:	tbnz	x2, #60, 308 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x100>
     218:	tbnz	x2, #61, 314 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x10c>
     21c:	tbnz	x2, #62, 320 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x118>
     220:	tbnz	x2, #63, 32c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x124>
     224:	tbnz	w3, #0, 338 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x130>
     228:	tbnz	x2, #54, 344 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x13c>
     22c:	tbnz	x1, #43, 350 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x148>
     230:	tbnz	x1, #51, 35c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x154>
     234:	tbnz	x1, #42, 368 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x160>
     238:	tbnz	w1, #9, 374 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x16c>
     23c:	tbnz	w1, #22, 380 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x178>
     240:	tbnz	x1, #49, 38c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x184>
     244:	tbnz	x1, #61, 398 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x190>
     248:	tbnz	x1, #46, 3a4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x19c>
     24c:	tbnz	w1, #25, 3b0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1a8>
     250:	tbnz	x2, #46, 3bc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1b4>
     254:	tbnz	w1, #1, 3c8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1c0>
     258:	tbnz	w2, #27, 3d4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1cc>
     25c:	tbnz	x1, #54, 3e0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1d8>
     260:	tbnz	x2, #44, 3ec <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1e4>
     264:	tbnz	w1, #30, 3f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1f0>
     268:	tbnz	x1, #63, 404 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1fc>
     26c:	tbnz	x1, #32, 410 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x208>
     270:	tbnz	x1, #48, 41c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x214>
     274:	tbnz	w1, #23, 428 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x220>
     278:	tbnz	w2, #30, 434 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x22c>
     27c:	tbnz	w2, #29, 440 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x238>
     280:	tbnz	w2, #28, 44c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x244>
     284:	tbnz	w1, #0, 458 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x250>
     288:	tbnz	w1, #27, 464 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x25c>
     28c:	tbnz	w1, #11, 470 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x268>
     290:	tbnz	x1, #44, 47c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x274>
     294:	tbnz	x1, #60, 488 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x280>
     298:	tbnz	w2, #0, 494 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x28c>
     29c:	tbnz	x1, #35, 4a0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x298>
     2a0:	tbnz	w1, #31, 4ac <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2a4>
     2a4:	tbnz	w2, #31, 4b8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2b0>
     2a8:	tbnz	x1, #36, 4c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2bc>
     2ac:	tbnz	x2, #33, 4d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2c8>
     2b0:	tbnz	x2, #34, 4dc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2d4>
     2b4:	tbnz	x2, #35, 4e8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2e0>
     2b8:	tbnz	x2, #38, 4f4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2ec>
     2bc:	tbnz	x2, #37, 500 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2f8>
     2c0:	tbnz	x2, #36, 50c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x304>
     2c4:	tbnz	x1, #62, 518 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x310>
     2c8:	tbnz	w1, #3, 524 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x31c>
     2cc:	tbnz	x1, #33, 530 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x328>
     2d0:	tbnz	w2, #26, 53c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x334>
     2d4:	tbnz	x1, #57, 548 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x340>
     2d8:	tbnz	w1, #12, 554 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x34c>
     2dc:	tbnz	w1, #8, 560 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x358>
     2e0:	tbnz	x1, #47, 56c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x364>
     2e4:	tbnz	x2, #45, 578 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x370>
     2e8:	tbnz	w1, #28, 584 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x37c>
     2ec:	tbnz	x2, #47, 590 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x388>
     2f0:	tbz	x1, #50, 59c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x394>
     2f4:	tbnz	w1, #10, 5a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3a0>
     2f8:	tbnz	x1, #52, 5b4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3ac>
     2fc:	tbnz	x1, #59, 5c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3b8>
     300:	tbnz	x1, #53, 5cc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3c4>
     304:	ret
     308:	mov	x8, #0x20000000000000      	// #9007199254740992
     30c:	str	x8, [x0]
     310:	tbz	x2, #61, 21c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x14>
     314:	orr	x8, x8, #0x40000000000000
     318:	str	x8, [x0]
     31c:	tbz	x2, #62, 220 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x18>
     320:	orr	x8, x8, #0x80000000000000
     324:	str	x8, [x0]
     328:	tbz	x2, #63, 224 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x1c>
     32c:	orr	x8, x8, #0x100000000000000
     330:	str	x8, [x0]
     334:	tbz	w3, #0, 228 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x20>
     338:	orr	x8, x8, #0x200000000000000
     33c:	str	x8, [x0]
     340:	tbz	x2, #54, 22c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x24>
     344:	orr	x8, x8, #0x400000000000000
     348:	str	x8, [x0]
     34c:	tbz	x1, #43, 230 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x28>
     350:	orr	x8, x8, #0x100000
     354:	str	x8, [x0]
     358:	tbz	x1, #51, 234 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x2c>
     35c:	orr	x8, x8, #0x4000000
     360:	str	x8, [x0]
     364:	tbz	x1, #42, 238 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x30>
     368:	orr	x8, x8, #0x80000
     36c:	str	x8, [x0]
     370:	tbz	w1, #9, 23c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x34>
     374:	orr	x8, x8, #0x20
     378:	str	x8, [x0]
     37c:	tbz	w1, #22, 240 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x38>
     380:	orr	x8, x8, #0x100
     384:	str	x8, [x0]
     388:	tbz	x1, #49, 244 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x3c>
     38c:	orr	x8, x8, #0x2000000
     390:	str	x8, [x0]
     394:	tbz	x1, #61, 248 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x40>
     398:	orr	x8, x8, #0x200000000
     39c:	str	x8, [x0]
     3a0:	tbz	x1, #46, 24c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x44>
     3a4:	orr	x8, x8, #0x400000
     3a8:	str	x8, [x0]
     3ac:	tbz	w1, #25, 250 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x48>
     3b0:	orr	x8, x8, #0x400
     3b4:	str	x8, [x0]
     3b8:	tbz	x2, #46, 254 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x4c>
     3bc:	orr	x8, x8, #0x8000000000000
     3c0:	str	x8, [x0]
     3c4:	tbz	w1, #1, 258 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x50>
     3c8:	orr	x8, x8, #0x2
     3cc:	str	x8, [x0]
     3d0:	tbz	w2, #27, 25c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x54>
     3d4:	orr	x8, x8, #0x4000000000
     3d8:	str	x8, [x0]
     3dc:	tbz	x1, #54, 260 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x58>
     3e0:	orr	x8, x8, #0x20000000
     3e4:	str	x8, [x0]
     3e8:	tbz	x2, #44, 264 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x5c>
     3ec:	orr	x8, x8, #0x2000000000000
     3f0:	str	x8, [x0]
     3f4:	tbz	w1, #30, 268 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x60>
     3f8:	orr	x8, x8, #0x2000
     3fc:	str	x8, [x0]
     400:	tbz	x1, #63, 26c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x64>
     404:	orr	x8, x8, #0x800000000
     408:	str	x8, [x0]
     40c:	tbz	x1, #32, 270 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x68>
     410:	orr	x8, x8, #0x8000
     414:	str	x8, [x0]
     418:	tbz	x1, #48, 274 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x6c>
     41c:	orr	x8, x8, #0x1000000
     420:	str	x8, [x0]
     424:	tbz	w1, #23, 278 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x70>
     428:	orr	x8, x8, #0x200
     42c:	str	x8, [x0]
     430:	tbz	w2, #30, 27c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x74>
     434:	orr	x8, x8, #0x20000000000
     438:	str	x8, [x0]
     43c:	tbz	w2, #29, 280 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x78>
     440:	orr	x8, x8, #0x10000000000
     444:	str	x8, [x0]
     448:	tbz	w2, #28, 284 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x7c>
     44c:	orr	x8, x8, #0x8000000000
     450:	str	x8, [x0]
     454:	tbz	w1, #0, 288 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x80>
     458:	orr	x8, x8, #0x1
     45c:	str	x8, [x0]
     460:	tbz	w1, #27, 28c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x84>
     464:	orr	x8, x8, #0x800
     468:	str	x8, [x0]
     46c:	tbz	w1, #11, 290 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x88>
     470:	orr	x8, x8, #0x80
     474:	str	x8, [x0]
     478:	tbz	x1, #44, 294 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x8c>
     47c:	orr	x8, x8, #0x200000
     480:	str	x8, [x0]
     484:	tbz	x1, #60, 298 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x90>
     488:	orr	x8, x8, #0x100000000
     48c:	str	x8, [x0]
     490:	tbz	w2, #0, 29c <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x94>
     494:	orr	x8, x8, #0x1000000000
     498:	str	x8, [x0]
     49c:	tbz	x1, #35, 2a0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x98>
     4a0:	orr	x8, x8, #0x20000
     4a4:	str	x8, [x0]
     4a8:	tbz	w1, #31, 2a4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0x9c>
     4ac:	orr	x8, x8, #0x4000
     4b0:	str	x8, [x0]
     4b4:	tbz	w2, #31, 2a8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa0>
     4b8:	orr	x8, x8, #0x40000000000
     4bc:	str	x8, [x0]
     4c0:	tbz	x1, #36, 2ac <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa4>
     4c4:	orr	x8, x8, #0x40000
     4c8:	str	x8, [x0]
     4cc:	tbz	x2, #33, 2b0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xa8>
     4d0:	orr	x8, x8, #0x80000000000
     4d4:	str	x8, [x0]
     4d8:	tbz	x2, #34, 2b4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xac>
     4dc:	orr	x8, x8, #0x100000000000
     4e0:	str	x8, [x0]
     4e4:	tbz	x2, #35, 2b8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb0>
     4e8:	orr	x8, x8, #0x200000000000
     4ec:	str	x8, [x0]
     4f0:	tbz	x2, #38, 2bc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb4>
     4f4:	orr	x8, x8, #0x1000000000000
     4f8:	str	x8, [x0]
     4fc:	tbz	x2, #37, 2c0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xb8>
     500:	orr	x8, x8, #0x800000000000
     504:	str	x8, [x0]
     508:	tbz	x2, #36, 2c4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xbc>
     50c:	orr	x8, x8, #0x400000000000
     510:	str	x8, [x0]
     514:	tbz	x1, #62, 2c8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc0>
     518:	orr	x8, x8, #0x400000000
     51c:	str	x8, [x0]
     520:	tbz	w1, #3, 2cc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc4>
     524:	orr	x8, x8, #0x4
     528:	str	x8, [x0]
     52c:	tbz	x1, #33, 2d0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xc8>
     530:	orr	x8, x8, #0x10000
     534:	str	x8, [x0]
     538:	tbz	w2, #26, 2d4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xcc>
     53c:	orr	x8, x8, #0x2000000000
     540:	str	x8, [x0]
     544:	tbz	x1, #57, 2d8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd0>
     548:	orr	x8, x8, #0x40000000
     54c:	str	x8, [x0]
     550:	tbz	w1, #12, 2dc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd4>
     554:	orr	x8, x8, #0x10
     558:	str	x8, [x0]
     55c:	tbz	w1, #8, 2e0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xd8>
     560:	orr	x8, x8, #0x8
     564:	str	x8, [x0]
     568:	tbz	x1, #47, 2e4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xdc>
     56c:	orr	x8, x8, #0x800000
     570:	str	x8, [x0]
     574:	tbz	x2, #45, 2e8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe0>
     578:	orr	x8, x8, #0x4000000000000
     57c:	str	x8, [x0]
     580:	tbz	w1, #28, 2ec <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe4>
     584:	orr	x8, x8, #0x1000
     588:	str	x8, [x0]
     58c:	tbz	x2, #47, 2f0 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xe8>
     590:	orr	x8, x8, #0x10000000000000
     594:	str	x8, [x0]
     598:	tbnz	x1, #50, 2f4 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xec>
     59c:	orr	x8, x8, #0x800000000000000
     5a0:	str	x8, [x0]
     5a4:	tbz	w1, #10, 2f8 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf0>
     5a8:	orr	x8, x8, #0x40
     5ac:	str	x8, [x0]
     5b0:	tbz	x1, #52, 2fc <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf4>
     5b4:	orr	x8, x8, #0x8000000
     5b8:	str	x8, [x0]
     5bc:	tbz	x1, #59, 300 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xf8>
     5c0:	orr	x8, x8, #0x80000000
     5c4:	str	x8, [x0]
     5c8:	tbz	x1, #53, 304 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE+0xfc>
     5cc:	orr	x8, x8, #0x10000000
     5d0:	str	x8, [x0]
     5d4:	ret

00000000000005d8 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev>:
     5d8:	stp	x29, x30, [sp, #-48]!
     5dc:	str	x21, [sp, #16]
     5e0:	stp	x20, x19, [sp, #32]
     5e4:	mov	x29, sp
     5e8:	ldr	w8, [x0, #204]
     5ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     5f0:	mov	x19, x0
     5f4:	add	x9, x9, #0x0
     5f8:	str	x9, [x0]
     5fc:	cbz	w8, 63c <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x64>
     600:	ldr	w8, [x19, #200]
     604:	cbz	w8, 63c <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x64>
     608:	mov	x20, xzr
     60c:	lsl	x21, x8, #3
     610:	b	620 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x48>
     614:	add	x20, x20, #0x8
     618:	cmp	x21, x20
     61c:	b.eq	63c <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x64>  // b.none
     620:	ldr	x8, [x19, #192]
     624:	ldr	x0, [x8, x20]
     628:	cmn	x0, #0x8
     62c:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     630:	b.eq	614 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x3c>  // b.none
     634:	bl	0 <free>
     638:	b	614 <_ZN12_GLOBAL__N_116AArch64AsmParserD2Ev+0x3c>
     63c:	ldr	x0, [x19, #192]
     640:	bl	0 <free>
     644:	mov	x0, x19
     648:	ldp	x20, x19, [sp, #32]
     64c:	ldr	x21, [sp, #16]
     650:	ldp	x29, x30, [sp], #48
     654:	b	0 <_ZN4llvm17MCTargetAsmParserD2Ev>

0000000000000658 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev>:
     658:	stp	x29, x30, [sp, #-48]!
     65c:	str	x21, [sp, #16]
     660:	stp	x20, x19, [sp, #32]
     664:	mov	x29, sp
     668:	ldr	w8, [x0, #204]
     66c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     670:	mov	x19, x0
     674:	add	x9, x9, #0x0
     678:	str	x9, [x0]
     67c:	cbz	w8, 6bc <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x64>
     680:	ldr	w8, [x19, #200]
     684:	cbz	w8, 6bc <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x64>
     688:	mov	x20, xzr
     68c:	lsl	x21, x8, #3
     690:	b	6a0 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x48>
     694:	add	x20, x20, #0x8
     698:	cmp	x21, x20
     69c:	b.eq	6bc <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x64>  // b.none
     6a0:	ldr	x8, [x19, #192]
     6a4:	ldr	x0, [x8, x20]
     6a8:	cmn	x0, #0x8
     6ac:	ccmp	x0, #0x0, #0x4, ne  // ne = any
     6b0:	b.eq	694 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x3c>  // b.none
     6b4:	bl	0 <free>
     6b8:	b	694 <_ZN12_GLOBAL__N_116AArch64AsmParserD0Ev+0x3c>
     6bc:	ldr	x0, [x19, #192]
     6c0:	bl	0 <free>
     6c4:	mov	x0, x19
     6c8:	bl	0 <_ZN4llvm17MCTargetAsmParserD2Ev>
     6cc:	mov	x0, x19
     6d0:	ldp	x20, x19, [sp, #32]
     6d4:	ldr	x21, [sp, #16]
     6d8:	ldp	x29, x30, [sp], #48
     6dc:	b	0 <_ZdlPv>

00000000000006e0 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_>:
     6e0:	sub	sp, sp, #0x70
     6e4:	stp	x29, x30, [sp, #48]
     6e8:	str	x23, [sp, #64]
     6ec:	stp	x22, x21, [sp, #80]
     6f0:	stp	x20, x19, [sp, #96]
     6f4:	add	x29, sp, #0x30
     6f8:	mov	x20, x0
     6fc:	ldr	x0, [x0, #8]
     700:	mov	x19, x3
     704:	mov	x22, x2
     708:	mov	x21, x1
     70c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     710:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     714:	str	x0, [x22]
     718:	ldr	x22, [x20, #8]
     71c:	mov	x0, x22
     720:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     724:	ldr	w8, [x0]
     728:	cmp	w8, #0x2
     72c:	b.ne	788 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_+0xa8>  // b.any
     730:	ldur	q0, [x0, #8]
     734:	add	x8, sp, #0x10
     738:	mov	x0, sp
     73c:	add	x23, sp, #0x10
     740:	str	q0, [sp]
     744:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
     748:	ldp	x1, x2, [sp, #16]
     74c:	mov	x0, x20
     750:	mov	w3, wzr
     754:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
     758:	cbz	w0, 790 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_+0xb0>
     75c:	str	w0, [x21]
     760:	ldr	x8, [x22]
     764:	mov	x0, x22
     768:	ldr	x8, [x8, #136]
     76c:	blr	x8
     770:	mov	w21, wzr
     774:	ldr	x0, [sp, #16]
     778:	add	x8, x23, #0x10
     77c:	cmp	x0, x8
     780:	b.ne	7a4 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_+0xc4>  // b.any
     784:	b	7a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_+0xc8>
     788:	mov	w21, #0x1                   	// #1
     78c:	b	7a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_+0xc8>
     790:	mov	w21, #0x1                   	// #1
     794:	ldr	x0, [sp, #16]
     798:	add	x8, x23, #0x10
     79c:	cmp	x0, x8
     7a0:	b.eq	7a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13ParseRegisterERjRN4llvm5SMLocES4_+0xc8>  // b.none
     7a4:	bl	0 <_ZdlPv>
     7a8:	ldr	x0, [x20, #8]
     7ac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     7b0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     7b4:	sub	x8, x0, #0x1
     7b8:	str	x8, [x19]
     7bc:	mov	w0, w21
     7c0:	ldp	x20, x19, [sp, #96]
     7c4:	ldp	x22, x21, [sp, #80]
     7c8:	ldr	x23, [sp, #64]
     7cc:	ldp	x29, x30, [sp, #48]
     7d0:	add	sp, sp, #0x70
     7d4:	ret

00000000000007d8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE>:
     7d8:	sub	sp, sp, #0x1d0
     7dc:	stp	x29, x30, [sp, #368]
     7e0:	stp	x28, x27, [sp, #384]
     7e4:	stp	x26, x25, [sp, #400]
     7e8:	stp	x24, x23, [sp, #416]
     7ec:	stp	x22, x21, [sp, #432]
     7f0:	stp	x20, x19, [sp, #448]
     7f4:	add	x29, sp, #0x170
     7f8:	stp	x5, x2, [sp, #24]
     7fc:	str	x3, [sp, #40]
     800:	mov	x20, x0
     804:	ldr	x27, [x20, #8]!
     808:	mov	x28, x0
     80c:	sub	x8, x29, #0x40
     810:	add	x0, sp, #0x20
     814:	mov	x19, x4
     818:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
     81c:	ldp	x0, x8, [x29, #-64]
     820:	cmp	x8, #0x3
     824:	b.ne	aa4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2cc>  // b.any
     828:	ldrh	w8, [x0]
     82c:	ldrb	w9, [x0, #2]
     830:	mov	w10, #0x6562                	// #25954
     834:	mov	w11, #0x71                  	// #113
     838:	eor	w8, w8, w10
     83c:	eor	w9, w9, w11
     840:	orr	w8, w8, w9
     844:	tst	w8, #0xffff
     848:	b.eq	aac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2d4>  // b.none
     84c:	ldrh	w8, [x0]
     850:	ldrb	w9, [x0, #2]
     854:	mov	w10, #0x6e62                	// #28258
     858:	mov	w11, #0x65                  	// #101
     85c:	eor	w8, w8, w10
     860:	eor	w9, w9, w11
     864:	orr	w8, w8, w9
     868:	tst	w8, #0xffff
     86c:	b.eq	ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2e0>  // b.none
     870:	ldrh	w9, [x0]
     874:	ldrb	w10, [x0, #2]
     878:	mov	w11, #0x6862                	// #26722
     87c:	mov	w8, #0x73                  	// #115
     880:	eor	w9, w9, w11
     884:	eor	w10, w10, w8
     888:	orr	w9, w9, w10
     88c:	tst	w9, #0xffff
     890:	b.eq	ac4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2ec>  // b.none
     894:	ldrh	w9, [x0]
     898:	ldrb	w10, [x0, #2]
     89c:	mov	w11, #0x6362                	// #25442
     8a0:	eor	w9, w9, w11
     8a4:	eor	w8, w10, w8
     8a8:	orr	w8, w9, w8
     8ac:	tst	w8, #0xffff
     8b0:	b.eq	ad0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2f8>  // b.none
     8b4:	ldrh	w8, [x0]
     8b8:	ldrb	w9, [x0, #2]
     8bc:	mov	w10, #0x6c62                	// #27746
     8c0:	mov	w11, #0x6f                  	// #111
     8c4:	eor	w8, w8, w10
     8c8:	eor	w9, w9, w11
     8cc:	orr	w8, w8, w9
     8d0:	tst	w8, #0xffff
     8d4:	b.eq	adc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x304>  // b.none
     8d8:	ldrh	w8, [x0]
     8dc:	ldrb	w9, [x0, #2]
     8e0:	mov	w10, #0x6362                	// #25442
     8e4:	mov	w11, #0x63                  	// #99
     8e8:	eor	w8, w8, w10
     8ec:	eor	w9, w9, w11
     8f0:	orr	w8, w8, w9
     8f4:	tst	w8, #0xffff
     8f8:	b.eq	ae8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x310>  // b.none
     8fc:	ldrh	w8, [x0]
     900:	ldrb	w9, [x0, #2]
     904:	mov	w10, #0x6d62                	// #28002
     908:	mov	w11, #0x69                  	// #105
     90c:	eor	w8, w8, w10
     910:	eor	w9, w9, w11
     914:	orr	w8, w8, w9
     918:	tst	w8, #0xffff
     91c:	b.eq	af4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x31c>  // b.none
     920:	ldrh	w8, [x0]
     924:	ldrb	w9, [x0, #2]
     928:	mov	w10, #0x7062                	// #28770
     92c:	mov	w11, #0x6c                  	// #108
     930:	eor	w8, w8, w10
     934:	eor	w9, w9, w11
     938:	orr	w8, w8, w9
     93c:	tst	w8, #0xffff
     940:	b.eq	b00 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x328>  // b.none
     944:	ldrh	w9, [x0]
     948:	ldrb	w10, [x0, #2]
     94c:	mov	w8, #0x7662                	// #30306
     950:	mov	w11, #0x73                  	// #115
     954:	eor	w9, w9, w8
     958:	eor	w10, w10, w11
     95c:	orr	w9, w9, w10
     960:	tst	w9, #0xffff
     964:	b.eq	b0c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x334>  // b.none
     968:	ldrh	w9, [x0]
     96c:	ldrb	w10, [x0, #2]
     970:	mov	w11, #0x63                  	// #99
     974:	eor	w8, w9, w8
     978:	eor	w9, w10, w11
     97c:	orr	w8, w8, w9
     980:	tst	w8, #0xffff
     984:	b.eq	b18 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x340>  // b.none
     988:	ldrh	w8, [x0]
     98c:	ldrb	w9, [x0, #2]
     990:	mov	w10, #0x6862                	// #26722
     994:	mov	w11, #0x69                  	// #105
     998:	eor	w8, w8, w10
     99c:	eor	w9, w9, w11
     9a0:	orr	w8, w8, w9
     9a4:	tst	w8, #0xffff
     9a8:	b.eq	b24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x34c>  // b.none
     9ac:	ldrh	w8, [x0]
     9b0:	ldrb	w9, [x0, #2]
     9b4:	mov	w10, #0x6c62                	// #27746
     9b8:	mov	w11, #0x73                  	// #115
     9bc:	eor	w8, w8, w10
     9c0:	eor	w9, w9, w11
     9c4:	orr	w8, w8, w9
     9c8:	tst	w8, #0xffff
     9cc:	b.eq	b30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x358>  // b.none
     9d0:	ldrh	w8, [x0]
     9d4:	ldrb	w9, [x0, #2]
     9d8:	mov	w10, #0x6762                	// #26466
     9dc:	mov	w11, #0x65                  	// #101
     9e0:	eor	w8, w8, w10
     9e4:	eor	w9, w9, w11
     9e8:	orr	w8, w8, w9
     9ec:	tst	w8, #0xffff
     9f0:	b.eq	b3c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x364>  // b.none
     9f4:	ldrh	w9, [x0]
     9f8:	ldrb	w10, [x0, #2]
     9fc:	mov	w11, #0x6c62                	// #27746
     a00:	mov	w8, #0x74                  	// #116
     a04:	eor	w9, w9, w11
     a08:	eor	w10, w10, w8
     a0c:	orr	w9, w9, w10
     a10:	tst	w9, #0xffff
     a14:	b.eq	b48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x370>  // b.none
     a18:	ldrh	w9, [x0]
     a1c:	ldrb	w10, [x0, #2]
     a20:	mov	w11, #0x6762                	// #26466
     a24:	eor	w9, w9, w11
     a28:	eor	w8, w10, w8
     a2c:	orr	w8, w9, w8
     a30:	tst	w8, #0xffff
     a34:	b.eq	b54 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x37c>  // b.none
     a38:	ldrh	w8, [x0]
     a3c:	ldrb	w9, [x0, #2]
     a40:	mov	w10, #0x6c62                	// #27746
     a44:	mov	w11, #0x65                  	// #101
     a48:	eor	w8, w8, w10
     a4c:	eor	w9, w9, w11
     a50:	orr	w8, w8, w9
     a54:	tst	w8, #0xffff
     a58:	b.eq	b60 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x388>  // b.none
     a5c:	ldrh	w8, [x0]
     a60:	ldrb	w9, [x0, #2]
     a64:	mov	w10, #0x6162                	// #24930
     a68:	mov	w11, #0x6c                  	// #108
     a6c:	eor	w8, w8, w10
     a70:	eor	w9, w9, w11
     a74:	orr	w8, w8, w9
     a78:	tst	w8, #0xffff
     a7c:	b.eq	b6c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x394>  // b.none
     a80:	ldrh	w8, [x0]
     a84:	ldrb	w9, [x0, #2]
     a88:	mov	w10, #0x6e62                	// #28258
     a8c:	mov	w11, #0x76                  	// #118
     a90:	eor	w8, w8, w10
     a94:	eor	w9, w9, w11
     a98:	orr	w8, w8, w9
     a9c:	tst	w8, #0xffff
     aa0:	b.eq	b78 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a0>  // b.none
     aa4:	ldp	x8, x9, [sp, #32]
     aa8:	b	b90 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3b8>
     aac:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ab0:	add	x9, x9, #0x0
     ab4:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ab8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     abc:	add	x9, x9, #0x0
     ac0:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ac4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ac8:	add	x9, x9, #0x0
     acc:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ad0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ad4:	add	x9, x9, #0x0
     ad8:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     adc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     ae0:	add	x9, x9, #0x0
     ae4:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     ae8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     aec:	add	x9, x9, #0x0
     af0:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     af4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     af8:	add	x9, x9, #0x0
     afc:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b00:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b04:	add	x9, x9, #0x0
     b08:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b0c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b10:	add	x9, x9, #0x0
     b14:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b18:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b1c:	add	x9, x9, #0x0
     b20:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b24:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b28:	add	x9, x9, #0x0
     b2c:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b30:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b34:	add	x9, x9, #0x0
     b38:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b3c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b40:	add	x9, x9, #0x0
     b44:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b48:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b4c:	add	x9, x9, #0x0
     b50:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b54:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b58:	add	x9, x9, #0x0
     b5c:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b60:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b64:	add	x9, x9, #0x0
     b68:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b6c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b70:	add	x9, x9, #0x0
     b74:	b	b80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3a8>
     b78:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     b7c:	add	x9, x9, #0x0
     b80:	and	x8, x9, #0xffffffffffffff00
     b84:	and	x9, x9, #0xff
     b88:	orr	x8, x8, x9
     b8c:	mov	w9, #0x4                   	// #4
     b90:	sub	x10, x29, #0x40
     b94:	add	x10, x10, #0x10
     b98:	cmp	x0, x10
     b9c:	stp	x8, x9, [sp, #32]
     ba0:	b.eq	ba8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x3d0>  // b.none
     ba4:	bl	0 <_ZdlPv>
     ba8:	mov	x0, x27
     bac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     bb0:	ldr	w8, [x0]
     bb4:	str	x20, [sp, #16]
     bb8:	cmp	w8, #0x2
     bbc:	b.ne	c2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x454>  // b.any
     bc0:	mov	x0, x27
     bc4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     bc8:	ldr	w8, [x0]
     bcc:	cmp	w8, #0x3
     bd0:	b.eq	bec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x414>  // b.none
     bd4:	cmp	w8, #0x2
     bd8:	b.ne	2788 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1fb0>  // b.any
     bdc:	ldp	x8, x9, [x0, #8]
     be0:	cmp	x9, #0x4
     be4:	b.eq	c18 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x440>  // b.none
     be8:	b	c2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x454>
     bec:	ldp	x8, x9, [x0, #8]
     bf0:	subs	x10, x9, #0x1
     bf4:	cset	w11, cs  // cs = hs, nlast
     bf8:	cinc	x8, x8, cs  // cs = hs, nlast
     bfc:	cmp	x10, x11
     c00:	csel	x10, x10, x11, hi  // hi = pmore
     c04:	cmp	x9, x10
     c08:	csel	x9, x9, x10, cc  // cc = lo, ul, last
     c0c:	sub	x9, x9, x11
     c10:	cmp	x9, #0x4
     c14:	b.ne	c2c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x454>  // b.any
     c18:	ldr	w8, [x8]
     c1c:	mov	w9, #0x722e                	// #29230
     c20:	movk	w9, #0x7165, lsl #16
     c24:	cmp	w8, w9
     c28:	b.eq	ffc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x824>  // b.none
     c2c:	ldp	x23, x24, [sp, #32]
     c30:	cbz	x24, c78 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4a0>
     c34:	mov	w1, #0x2e                  	// #46
     c38:	mov	x0, x23
     c3c:	mov	x2, x24
     c40:	bl	0 <memchr>
     c44:	cbz	x0, c78 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4a0>
     c48:	sub	x22, x0, x23
     c4c:	cmp	x24, x22
     c50:	csel	x24, x24, x22, cc  // cc = lo, ul, last
     c54:	cmp	x24, #0x4
     c58:	b.ne	c8c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4b4>  // b.any
     c5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     c60:	add	x1, x1, #0x0
     c64:	mov	x0, x23
     c68:	mov	x2, x24
     c6c:	bl	0 <bcmp>
     c70:	cbnz	w0, d28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x550>
     c74:	b	dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>
     c78:	mov	x22, #0xffffffffffffffff    	// #-1
     c7c:	cmp	x24, x22
     c80:	csel	x24, x24, x22, cc  // cc = lo, ul, last
     c84:	cmp	x24, #0x4
     c88:	b.eq	c5c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x484>  // b.none
     c8c:	cmp	x24, #0x3
     c90:	b.eq	cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x4f8>  // b.none
     c94:	cmp	x24, #0x2
     c98:	b.ne	d28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x550>  // b.any
     c9c:	ldrh	w8, [x23]
     ca0:	mov	w9, #0x6369                	// #25449
     ca4:	cmp	w8, w9
     ca8:	b.eq	dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>  // b.none
     cac:	ldrh	w8, [x23]
     cb0:	mov	w9, #0x6364                	// #25444
     cb4:	cmp	w8, w9
     cb8:	b.eq	dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>  // b.none
     cbc:	ldrh	w8, [x23]
     cc0:	mov	w9, #0x7461                	// #29793
     cc4:	cmp	w8, w9
     cc8:	b.ne	d28 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x550>  // b.any
     ccc:	b	dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>
     cd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
     cd4:	add	x1, x1, #0x0
     cd8:	mov	x0, x23
     cdc:	mov	x2, x24
     ce0:	bl	0 <bcmp>
     ce4:	cbz	w0, dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>
     ce8:	ldrh	w8, [x23]
     cec:	ldrb	w9, [x23, #2]
     cf0:	mov	w10, #0x7664                	// #30308
     cf4:	eor	w8, w8, w10
     cf8:	eor	w9, w9, #0x70
     cfc:	orr	w8, w8, w9
     d00:	tst	w8, #0xffff
     d04:	b.eq	dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>  // b.none
     d08:	ldrh	w8, [x23]
     d0c:	ldrb	w9, [x23, #2]
     d10:	mov	w10, #0x7063                	// #28771
     d14:	eor	w8, w8, w10
     d18:	eor	w9, w9, #0x70
     d1c:	orr	w8, w8, w9
     d20:	tst	w8, #0xffff
     d24:	b.eq	dfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x624>  // b.none
     d28:	ldr	x0, [x20]
     d2c:	ldr	x8, [x0]
     d30:	ldr	x8, [x8, #48]
     d34:	blr	x8
     d38:	mov	x26, x0
     d3c:	mov	w0, #0x70                  	// #112
     d40:	bl	0 <_Znwm>
     d44:	mov	x8, x0
     d48:	mov	w9, #0x6                   	// #6
     d4c:	strb	wzr, [x8, #32]!
     d50:	str	w9, [x0, #48]
     d54:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     d58:	add	x9, x9, #0x0
     d5c:	mov	x25, x0
     d60:	str	x9, [x0]
     d64:	str	x26, [x0, #104]
     d68:	stp	x19, x23, [x0, #64]
     d6c:	str	w24, [x0, #80]
     d70:	strb	wzr, [x0, #84]
     d74:	str	x19, [x0, #56]
     d78:	stp	x8, xzr, [x0, #16]
     d7c:	ldr	x0, [sp, #24]
     d80:	ldp	w8, w9, [x0, #8]
     d84:	cmp	w8, w9
     d88:	b.cs	26c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ef0>  // b.hs, b.nlast
     d8c:	ldr	x10, [x0]
     d90:	cmp	w8, w9
     d94:	str	x25, [x10, w8, uxtw #3]
     d98:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
     d9c:	add	w8, w8, #0x1
     da0:	cmp	x24, #0x1
     da4:	str	w8, [x0, #8]
     da8:	stp	x23, x24, [x28, #176]
     dac:	b.ne	11f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa18>  // b.any
     db0:	cmn	x22, #0x1
     db4:	b.eq	11f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa18>  // b.none
     db8:	ldrb	w8, [x23]
     dbc:	cmp	w8, #0x62
     dc0:	b.ne	11f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa18>  // b.any
     dc4:	str	x19, [sp, #8]
     dc8:	ldp	x23, x19, [sp, #32]
     dcc:	add	x8, x22, #0x1
     dd0:	cmp	x19, x22
     dd4:	csinc	x21, x19, x22, ls  // ls = plast
     dd8:	cmp	x19, x8
     ddc:	b.ls	1088 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x8b0>  // b.plast
     de0:	add	x0, x23, x21
     de4:	sub	x2, x19, x21
     de8:	mov	w1, #0x2e                  	// #46
     dec:	bl	0 <memchr>
     df0:	cbz	x0, 1088 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x8b0>
     df4:	sub	x22, x0, x23
     df8:	b	108c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x8b4>
     dfc:	mov	w1, #0x2e                  	// #46
     e00:	mov	x0, x23
     e04:	mov	x2, x24
     e08:	bl	0 <memchr>
     e0c:	cbz	x0, e48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x670>
     e10:	sub	x8, x0, x23
     e14:	cmn	x8, #0x1
     e18:	b.eq	e48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x670>  // b.none
     e1c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
     e20:	add	x8, x8, #0x0
     e24:	mov	w9, #0x103                 	// #259
     e28:	stp	x8, xzr, [x29, #-64]
     e2c:	sturh	w9, [x29, #-48]
     e30:	ldr	x0, [x20]
     e34:	sub	x1, x29, #0x40
     e38:	mov	x2, xzr
     e3c:	mov	x3, xzr
     e40:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
     e44:	b	1514 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd3c>
     e48:	mov	x21, x28
     e4c:	str	x23, [x21, #176]!
     e50:	ldur	x0, [x21, #-168]
     e54:	str	x24, [x21, #8]
     e58:	ldr	x8, [x0]
     e5c:	ldr	x8, [x8, #48]
     e60:	blr	x8
     e64:	mov	x24, x0
     e68:	mov	w0, #0x70                  	// #112
     e6c:	bl	0 <_Znwm>
     e70:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     e74:	mov	x8, x0
     e78:	add	x9, x9, #0x0
     e7c:	strb	wzr, [x8, #32]!
     e80:	str	x9, [x0]
     e84:	mov	w9, #0x6                   	// #6
     e88:	str	w9, [x0, #48]
     e8c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
     e90:	add	x9, x9, #0x0
     e94:	stp	x19, x9, [x0, #64]
     e98:	mov	w9, #0x3                   	// #3
     e9c:	mov	x23, x0
     ea0:	str	x24, [x0, #104]
     ea4:	str	w9, [x0, #80]
     ea8:	strb	wzr, [x0, #84]
     eac:	str	x19, [x0, #56]
     eb0:	stp	x8, xzr, [x0, #16]
     eb4:	ldr	x0, [sp, #24]
     eb8:	ldp	w8, w9, [x0, #8]
     ebc:	cmp	w8, w9
     ec0:	b.cs	26ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f14>  // b.hs, b.nlast
     ec4:	ldr	x10, [x0]
     ec8:	cmp	w8, w9
     ecc:	str	x23, [x10, w8, uxtw #3]
     ed0:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
     ed4:	add	w8, w8, #0x1
     ed8:	str	w8, [x0, #8]
     edc:	ldr	x23, [x28, #8]
     ee0:	mov	x0, x23
     ee4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
     ee8:	ldp	x26, x25, [x0, #8]
     eec:	mov	x22, x0
     ef0:	stp	x26, x25, [x29, #-24]
     ef4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
     ef8:	ldp	x8, x9, [x28, #176]
     efc:	mov	x24, x0
     f00:	cmp	x9, #0x4
     f04:	b.eq	1870 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1098>  // b.none
     f08:	cmp	x9, #0x3
     f0c:	b.eq	1750 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf78>  // b.none
     f10:	cmp	x9, #0x2
     f14:	b.ne	2134 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x195c>  // b.any
     f18:	ldrh	w9, [x8]
     f1c:	mov	w10, #0x6369                	// #25449
     f20:	cmp	w9, w10
     f24:	b.eq	1938 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1160>  // b.none
     f28:	ldrh	w9, [x8]
     f2c:	mov	w10, #0x6364                	// #25444
     f30:	cmp	w9, w10
     f34:	b.eq	1a90 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12b8>  // b.none
     f38:	ldrh	w8, [x8]
     f3c:	mov	w9, #0x7461                	// #29793
     f40:	cmp	w8, w9
     f44:	b.ne	2134 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x195c>  // b.any
     f48:	mov	x0, x26
     f4c:	mov	x1, x25
     f50:	bl	0 <_ZN4llvm9AArch64AT14lookupATByNameENS_9StringRefE>
     f54:	cbz	x0, 1e6c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1694>
     f58:	mov	x25, x0
     f5c:	mov	x0, x28
     f60:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
     f64:	ldr	q0, [x25, #16]
     f68:	ldp	x8, x9, [x0, #184]
     f6c:	ldr	x10, [x0, #200]
     f70:	ldr	x11, [x25, #32]
     f74:	stur	q0, [x29, #-64]
     f78:	ldp	x12, x13, [x29, #-64]
     f7c:	and	x10, x11, x10
     f80:	and	x8, x12, x8
     f84:	and	x9, x13, x9
     f88:	stur	x8, [x29, #-64]
     f8c:	stp	x9, x10, [x29, #-56]
     f90:	ldp	x11, x12, [x25, #16]
     f94:	ldr	x13, [x25, #32]
     f98:	eor	x8, x8, x11
     f9c:	eor	x9, x9, x12
     fa0:	eor	x10, x10, x13
     fa4:	orr	x8, x8, x9
     fa8:	orr	x8, x8, x10
     fac:	cbz	x8, 1b44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x136c>
     fb0:	ldr	x19, [x25]
     fb4:	sub	x8, x29, #0x80
     fb8:	add	x21, x8, #0x10
     fbc:	stur	x21, [x29, #-128]
     fc0:	cbz	x19, 27c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ff0>
     fc4:	mov	x0, x19
     fc8:	bl	0 <strlen>
     fcc:	mov	x20, x0
     fd0:	cmp	x0, #0x10
     fd4:	stur	x0, [x29, #-64]
     fd8:	b.cc	2344 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b6c>  // b.lo, b.ul, b.last
     fdc:	sub	x0, x29, #0x80
     fe0:	sub	x1, x29, #0x40
     fe4:	mov	x2, xzr
     fe8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
     fec:	ldur	x8, [x29, #-64]
     ff0:	stur	x0, [x29, #-128]
     ff4:	stur	x8, [x29, #-112]
     ff8:	b	2348 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b70>
     ffc:	ldp	x8, x9, [sp, #32]
    1000:	stp	x8, x9, [x29, #-128]
    1004:	ldr	x0, [x20]
    1008:	ldr	x8, [x0]
    100c:	ldr	x8, [x8, #136]
    1010:	blr	x8
    1014:	ldr	x0, [x20]
    1018:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    101c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    1020:	ldr	x21, [x20]
    1024:	mov	x20, x0
    1028:	mov	x0, x21
    102c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    1030:	ldr	w8, [x0]
    1034:	cmp	w8, #0x2
    1038:	b.ne	1a0c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1234>  // b.any
    103c:	ldur	q0, [x0, #8]
    1040:	sub	x8, x29, #0x40
    1044:	sub	x0, x29, #0x60
    1048:	mov	x24, x19
    104c:	stur	q0, [x29, #-96]
    1050:	sub	x19, x29, #0x40
    1054:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    1058:	ldp	x1, x2, [x29, #-64]
    105c:	mov	x0, x28
    1060:	mov	w3, wzr
    1064:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    1068:	cbz	w0, 19ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1214>
    106c:	str	w0, [sp, #80]
    1070:	ldr	x8, [x21]
    1074:	mov	x0, x21
    1078:	ldr	x8, [x8, #136]
    107c:	blr	x8
    1080:	mov	w21, wzr
    1084:	b	19f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1218>
    1088:	mov	x22, #0xffffffffffffffff    	// #-1
    108c:	cmp	x21, x22
    1090:	csel	x8, x22, x21, cc  // cc = lo, ul, last
    1094:	cmp	x19, x8
    1098:	csel	x8, x19, x8, cc  // cc = lo, ul, last
    109c:	ldr	x19, [sp, #8]
    10a0:	add	x23, x23, x21
    10a4:	sub	x24, x8, x21
    10a8:	mov	x0, x28
    10ac:	mov	x1, x23
    10b0:	mov	x2, x24
    10b4:	add	x26, x19, x21
    10b8:	bl	8a90 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>
    10bc:	cmp	w0, #0x10
    10c0:	b.ne	10f4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x91c>  // b.any
    10c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    10c8:	add	x8, x8, #0x0
    10cc:	mov	w9, #0x103                 	// #259
    10d0:	stp	x8, xzr, [x29, #-64]
    10d4:	sturh	w9, [x29, #-48]
    10d8:	ldr	x0, [x20]
    10dc:	sub	x2, x29, #0x40
    10e0:	mov	x1, x26
    10e4:	mov	x3, xzr
    10e8:	mov	x4, xzr
    10ec:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    10f0:	b	1514 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd3c>
    10f4:	mov	w21, w0
    10f8:	ldr	x0, [x20]
    10fc:	ldr	x8, [x0]
    1100:	ldr	x8, [x8, #48]
    1104:	blr	x8
    1108:	mov	x25, x0
    110c:	mov	w0, #0x70                  	// #112
    1110:	bl	0 <_Znwm>
    1114:	mov	x8, x0
    1118:	mov	w9, #0x6                   	// #6
    111c:	strb	wzr, [x8, #32]!
    1120:	str	w9, [x0, #48]
    1124:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1128:	ldr	x11, [sp, #24]
    112c:	add	x9, x9, #0x0
    1130:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    1134:	stp	x26, x9, [x0, #64]
    1138:	mov	w9, #0x1                   	// #1
    113c:	add	x10, x10, #0x0
    1140:	str	x25, [x0, #104]
    1144:	str	x10, [x0]
    1148:	str	w9, [x0, #80]
    114c:	strb	w9, [x0, #84]
    1150:	str	x26, [x0, #56]
    1154:	stp	x8, xzr, [x0, #16]
    1158:	ldp	w8, w9, [x11, #8]
    115c:	cmp	w8, w9
    1160:	b.cs	2710 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f38>  // b.hs, b.nlast
    1164:	ldr	x10, [x11]
    1168:	cmp	w8, w9
    116c:	str	x0, [x10, w8, uxtw #3]
    1170:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
    1174:	add	w8, w8, #0x1
    1178:	str	w8, [x11, #8]
    117c:	ldr	x0, [x20]
    1180:	ldr	x8, [x0]
    1184:	ldr	x8, [x8, #48]
    1188:	blr	x8
    118c:	mov	x25, x0
    1190:	mov	w0, #0x70                  	// #112
    1194:	bl	0 <_Znwm>
    1198:	ldr	x11, [sp, #24]
    119c:	mov	x8, x0
    11a0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    11a4:	mov	w9, #0x2                   	// #2
    11a8:	strb	wzr, [x8, #32]!
    11ac:	add	x10, x10, #0x0
    11b0:	str	x10, [x0]
    11b4:	str	w9, [x0, #48]
    11b8:	str	x25, [x0, #104]
    11bc:	str	w21, [x0, #72]
    11c0:	stp	x19, x19, [x0, #56]
    11c4:	stp	x8, xzr, [x0, #16]
    11c8:	ldp	w8, w9, [x11, #8]
    11cc:	mov	x26, x0
    11d0:	cmp	w8, w9
    11d4:	b.cs	2744 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f6c>  // b.hs, b.nlast
    11d8:	ldr	x10, [x11]
    11dc:	cmp	w8, w9
    11e0:	str	x26, [x10, w8, uxtw #3]
    11e4:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
    11e8:	add	w8, w8, #0x1
    11ec:	str	w8, [x11, #8]
    11f0:	cmn	x22, #0x1
    11f4:	b.eq	130c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb34>  // b.none
    11f8:	add	x19, x19, #0x1
    11fc:	mov	w25, #0x1                   	// #1
    1200:	stp	x27, x28, [sp]
    1204:	ldp	x26, x23, [sp, #32]
    1208:	add	x9, x22, #0x1
    120c:	cmp	x23, x22
    1210:	csinc	x8, x23, x22, ls  // ls = plast
    1214:	cmp	x23, x9
    1218:	b.ls	1238 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa60>  // b.plast
    121c:	add	x0, x26, x8
    1220:	sub	x2, x23, x8
    1224:	mov	w1, #0x2e                  	// #46
    1228:	bl	0 <memchr>
    122c:	cbz	x0, 1238 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa60>
    1230:	sub	x27, x0, x26
    1234:	b	123c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa64>
    1238:	mov	x27, #0xffffffffffffffff    	// #-1
    123c:	ldr	x0, [x20]
    1240:	cmp	x23, x22
    1244:	csel	x28, x23, x22, cc  // cc = lo, ul, last
    1248:	cmp	x28, x27
    124c:	ldr	x8, [x0]
    1250:	csel	x9, x27, x28, cc  // cc = lo, ul, last
    1254:	cmp	x23, x9
    1258:	csel	x9, x23, x9, cc  // cc = lo, ul, last
    125c:	ldr	x8, [x8, #48]
    1260:	add	x20, x26, x28
    1264:	sub	x24, x9, x28
    1268:	add	x21, x19, x28
    126c:	blr	x8
    1270:	mov	x23, x0
    1274:	mov	w0, #0x70                  	// #112
    1278:	bl	0 <_Znwm>
    127c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    1280:	mov	x8, x0
    1284:	add	x9, x9, #0x0
    1288:	strb	wzr, [x8, #32]!
    128c:	str	x9, [x0]
    1290:	mov	w9, #0x6                   	// #6
    1294:	mov	x22, x0
    1298:	str	w9, [x0, #48]
    129c:	str	x23, [x0, #104]
    12a0:	stp	x21, x20, [x0, #64]
    12a4:	str	w24, [x0, #80]
    12a8:	strb	w25, [x0, #84]
    12ac:	str	x21, [x0, #56]
    12b0:	stp	x8, xzr, [x0, #16]
    12b4:	ldr	x0, [sp, #24]
    12b8:	ldp	w8, w9, [x0, #8]
    12bc:	cmp	w8, w9
    12c0:	b.cs	12f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb18>  // b.hs, b.nlast
    12c4:	ldr	x10, [x0]
    12c8:	ldr	x20, [sp, #16]
    12cc:	cmp	w8, w9
    12d0:	str	x22, [x10, w8, uxtw #3]
    12d4:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
    12d8:	add	w8, w8, #0x1
    12dc:	cmn	x27, #0x1
    12e0:	mov	x22, x27
    12e4:	str	w8, [x0, #8]
    12e8:	b.ne	1204 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa2c>  // b.any
    12ec:	b	1304 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb2c>
    12f0:	mov	x1, xzr
    12f4:	bl	0 <LLVMInitializeAArch64AsmParser>
    12f8:	ldr	x0, [sp, #24]
    12fc:	ldp	w8, w9, [x0, #8]
    1300:	b	12c4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xaec>
    1304:	add	x23, x26, x28
    1308:	ldp	x27, x28, [sp]
    130c:	cmp	x24, #0x6
    1310:	b.eq	1408 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc30>  // b.none
    1314:	cmp	x24, #0x5
    1318:	b.eq	1370 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xb98>  // b.none
    131c:	cmp	x24, #0x4
    1320:	b.ne	1430 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc58>  // b.any
    1324:	ldr	w8, [x23]
    1328:	mov	w9, #0x6363                	// #25443
    132c:	movk	w9, #0x706d, lsl #16
    1330:	cmp	w8, w9
    1334:	b.eq	146c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc94>  // b.none
    1338:	ldr	w8, [x23]
    133c:	mov	w9, #0x7363                	// #29539
    1340:	movk	w9, #0x6e69, lsl #16
    1344:	add	w9, w9, #0x3f, lsl #12
    1348:	cmp	w8, w9
    134c:	b.eq	146c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc94>  // b.none
    1350:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1354:	add	x1, x1, #0x0
    1358:	mov	x0, x23
    135c:	mov	x2, x24
    1360:	bl	0 <bcmp>
    1364:	cmp	w0, #0x0
    1368:	cset	w26, ne  // ne = any
    136c:	b	1470 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc98>
    1370:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1374:	add	x1, x1, #0x0
    1378:	mov	x0, x23
    137c:	mov	x2, x24
    1380:	bl	0 <bcmp>
    1384:	cbz	w0, 1440 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc68>
    1388:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    138c:	add	x1, x1, #0x0
    1390:	mov	x0, x23
    1394:	mov	x2, x24
    1398:	bl	0 <bcmp>
    139c:	cbz	w0, 1440 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc68>
    13a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    13a4:	add	x1, x1, #0x0
    13a8:	mov	x0, x23
    13ac:	mov	x2, x24
    13b0:	bl	0 <bcmp>
    13b4:	cbz	w0, 1440 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc68>
    13b8:	ldr	w8, [x23]
    13bc:	ldrb	w9, [x23, #4]
    13c0:	mov	w10, #0x7363                	// #29539
    13c4:	movk	w10, #0x6e69, lsl #16
    13c8:	mov	w11, #0x76                  	// #118
    13cc:	eor	w8, w8, w10
    13d0:	eor	w9, w9, w11
    13d4:	orr	w8, w8, w9
    13d8:	cbz	w8, 1440 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc68>
    13dc:	ldr	w8, [x23]
    13e0:	ldrb	w9, [x23, #4]
    13e4:	mov	w10, #0x7363                	// #29539
    13e8:	movk	w10, #0x656e, lsl #16
    13ec:	mov	w11, #0x67                  	// #103
    13f0:	eor	w8, w8, w10
    13f4:	eor	w9, w9, w11
    13f8:	orr	w8, w8, w9
    13fc:	cmp	w8, #0x0
    1400:	cset	w26, ne  // ne = any
    1404:	b	1444 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xc6c>
    1408:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    140c:	add	x1, x1, #0x0
    1410:	mov	x0, x23
    1414:	mov	x2, x24
    1418:	bl	0 <bcmp>
    141c:	cmp	w0, #0x0
    1420:	str	wzr, [sp, #16]
    1424:	mov	w19, wzr
    1428:	cset	w26, ne  // ne = any
    142c:	b	14c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf0>
    1430:	str	wzr, [sp, #16]
    1434:	mov	w19, wzr
    1438:	mov	w26, #0x1                   	// #1
    143c:	b	14c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf0>
    1440:	mov	w26, wzr
    1444:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1448:	add	x1, x1, #0x0
    144c:	mov	x0, x23
    1450:	mov	x2, x24
    1454:	bl	0 <bcmp>
    1458:	cmp	w0, #0x0
    145c:	cset	w8, eq  // eq = none
    1460:	mov	w19, wzr
    1464:	str	w8, [sp, #16]
    1468:	b	14c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf0>
    146c:	mov	w26, wzr
    1470:	ldr	w8, [x23]
    1474:	mov	w9, #0x7363                	// #29539
    1478:	movk	w9, #0x7465, lsl #16
    147c:	mov	w10, #0x6963                	// #26979
    1480:	movk	w10, #0x636e, lsl #16
    1484:	cmp	w8, w9
    1488:	cset	w9, eq  // eq = none
    148c:	cmp	w8, w10
    1490:	str	w9, [sp, #16]
    1494:	b.eq	14c4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcec>  // b.none
    1498:	ldr	w8, [x23]
    149c:	mov	w9, #0x6963                	// #26979
    14a0:	movk	w9, #0x766e, lsl #16
    14a4:	cmp	w8, w9
    14a8:	b.eq	14c4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcec>  // b.none
    14ac:	ldr	w8, [x23]
    14b0:	mov	w9, #0x6e63                	// #28259
    14b4:	movk	w9, #0x6765, lsl #16
    14b8:	cmp	w8, w9
    14bc:	cset	w19, eq  // eq = none
    14c0:	b	14c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xcf0>
    14c4:	mov	w19, #0x1                   	// #1
    14c8:	ldr	x0, [x20]
    14cc:	ldr	x8, [x0]
    14d0:	ldr	x8, [x8, #40]
    14d4:	blr	x8
    14d8:	ldr	w8, [x0, #16]
    14dc:	cbz	w8, 27a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1fd0>
    14e0:	ldr	x8, [x0, #8]
    14e4:	ldr	w8, [x8]
    14e8:	cmp	w8, #0x9
    14ec:	b.ne	153c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd64>  // b.any
    14f0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    14f4:	add	x8, x8, #0x0
    14f8:	mov	w9, #0x103                 	// #259
    14fc:	stp	x8, xzr, [x29, #-64]
    1500:	sturh	w9, [x29, #-48]
    1504:	ldr	x0, [x20]
    1508:	sub	x2, x29, #0x40
    150c:	mov	w1, #0x9                   	// #9
    1510:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    1514:	mov	w19, w0
    1518:	and	w0, w19, #0x1
    151c:	ldp	x20, x19, [sp, #448]
    1520:	ldp	x22, x21, [sp, #432]
    1524:	ldp	x24, x23, [sp, #416]
    1528:	ldp	x26, x25, [sp, #400]
    152c:	ldp	x28, x27, [sp, #384]
    1530:	ldp	x29, x30, [sp, #368]
    1534:	add	sp, sp, #0x1d0
    1538:	ret
    153c:	ldr	w8, [sp, #16]
    1540:	eor	w21, w19, #0x1
    1544:	orr	w22, w8, w19
    1548:	mov	w8, #0x3                   	// #3
    154c:	b	1564 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd8c>
    1550:	ldr	x0, [x20]
    1554:	mov	w1, #0x19                  	// #25
    1558:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    155c:	mov	w8, w19
    1560:	tbz	w0, #0, 14f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd18>
    1564:	cmp	w8, #0x0
    1568:	cset	w10, eq  // eq = none
    156c:	subs	w19, w8, #0x1
    1570:	cset	w9, ne  // ne = any
    1574:	bic	w10, w10, w26
    1578:	mov	w2, #0x1                   	// #1
    157c:	tbnz	w10, #0, 1598 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xdc0>
    1580:	orr	w9, w9, w21
    1584:	cbz	w9, 1598 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xdc0>
    1588:	ldr	w9, [sp, #16]
    158c:	cmp	w8, #0x2
    1590:	cset	w8, eq  // eq = none
    1594:	and	w2, w9, w8
    1598:	ldr	x1, [sp, #24]
    159c:	mov	x0, x28
    15a0:	mov	w3, w22
    15a4:	bl	8e78 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>
    15a8:	tbnz	w0, #0, 2538 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d60>
    15ac:	mov	x0, x27
    15b0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    15b4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    15b8:	ldr	x8, [x20]
    15bc:	mov	x24, x0
    15c0:	mov	w1, #0x14                  	// #20
    15c4:	mov	x0, x8
    15c8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    15cc:	tbz	w0, #0, 1658 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe80>
    15d0:	ldr	x0, [x20]
    15d4:	ldr	x8, [x0]
    15d8:	ldr	x8, [x8, #48]
    15dc:	blr	x8
    15e0:	mov	x25, x0
    15e4:	mov	w0, #0x70                  	// #112
    15e8:	bl	0 <_Znwm>
    15ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    15f0:	mov	x8, x0
    15f4:	add	x9, x9, #0x0
    15f8:	strb	wzr, [x8, #32]!
    15fc:	str	x9, [x0]
    1600:	mov	w9, #0x6                   	// #6
    1604:	str	w9, [x0, #48]
    1608:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    160c:	add	x9, x9, #0x0
    1610:	stp	x24, x9, [x0, #64]
    1614:	mov	w9, #0x1                   	// #1
    1618:	mov	x23, x0
    161c:	str	x25, [x0, #104]
    1620:	str	w9, [x0, #80]
    1624:	strb	wzr, [x0, #84]
    1628:	str	x24, [x0, #56]
    162c:	stp	x8, xzr, [x0, #16]
    1630:	ldr	x0, [sp, #24]
    1634:	ldp	w8, w9, [x0, #8]
    1638:	cmp	w8, w9
    163c:	b.cs	1708 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf30>  // b.hs, b.nlast
    1640:	ldr	x10, [x0]
    1644:	cmp	w8, w9
    1648:	str	x23, [x10, w8, uxtw #3]
    164c:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
    1650:	add	w8, w8, #0x1
    1654:	str	w8, [x0, #8]
    1658:	mov	x0, x27
    165c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    1660:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    1664:	ldr	x8, [x20]
    1668:	mov	x24, x0
    166c:	mov	w1, #0x22                  	// #34
    1670:	mov	x0, x8
    1674:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    1678:	tbz	w0, #0, 1550 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd78>
    167c:	ldr	x0, [x20]
    1680:	ldr	x8, [x0]
    1684:	ldr	x8, [x8, #48]
    1688:	blr	x8
    168c:	mov	x25, x0
    1690:	mov	w0, #0x70                  	// #112
    1694:	bl	0 <_Znwm>
    1698:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    169c:	mov	x8, x0
    16a0:	add	x9, x9, #0x0
    16a4:	strb	wzr, [x8, #32]!
    16a8:	str	x9, [x0]
    16ac:	mov	w9, #0x6                   	// #6
    16b0:	str	w9, [x0, #48]
    16b4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    16b8:	add	x9, x9, #0x0
    16bc:	stp	x24, x9, [x0, #64]
    16c0:	mov	w9, #0x1                   	// #1
    16c4:	mov	x23, x0
    16c8:	str	x25, [x0, #104]
    16cc:	str	w9, [x0, #80]
    16d0:	strb	wzr, [x0, #84]
    16d4:	str	x24, [x0, #56]
    16d8:	stp	x8, xzr, [x0, #16]
    16dc:	ldr	x0, [sp, #24]
    16e0:	ldp	w8, w9, [x0, #8]
    16e4:	cmp	w8, w9
    16e8:	b.cs	172c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf54>  // b.hs, b.nlast
    16ec:	ldr	x10, [x0]
    16f0:	cmp	w8, w9
    16f4:	str	x23, [x10, w8, uxtw #3]
    16f8:	b.cs	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>  // b.hs, b.nlast
    16fc:	add	w8, w8, #0x1
    1700:	str	w8, [x0, #8]
    1704:	b	1550 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd78>
    1708:	mov	x1, xzr
    170c:	bl	0 <LLVMInitializeAArch64AsmParser>
    1710:	ldr	x0, [sp, #24]
    1714:	ldp	w8, w9, [x0, #8]
    1718:	ldr	x10, [x0]
    171c:	cmp	w8, w9
    1720:	str	x23, [x10, w8, uxtw #3]
    1724:	b.cc	1650 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xe78>  // b.lo, b.ul, b.last
    1728:	b	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>
    172c:	mov	x1, xzr
    1730:	bl	0 <LLVMInitializeAArch64AsmParser>
    1734:	ldr	x0, [sp, #24]
    1738:	ldp	w8, w9, [x0, #8]
    173c:	ldr	x10, [x0]
    1740:	cmp	w8, w9
    1744:	str	x23, [x10, w8, uxtw #3]
    1748:	b.cc	16fc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xf24>  // b.lo, b.ul, b.last
    174c:	b	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>
    1750:	ldrh	w9, [x8]
    1754:	ldrb	w10, [x8, #2]
    1758:	mov	w11, #0x6663                	// #26211
    175c:	eor	w9, w9, w11
    1760:	eor	w10, w10, #0x70
    1764:	orr	w9, w9, w10
    1768:	tst	w9, #0xffff
    176c:	b.eq	17b0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xfd8>  // b.none
    1770:	ldrh	w9, [x8]
    1774:	ldrb	w10, [x8, #2]
    1778:	mov	w11, #0x7664                	// #30308
    177c:	eor	w9, w9, w11
    1780:	eor	w10, w10, #0x70
    1784:	orr	w9, w9, w10
    1788:	tst	w9, #0xffff
    178c:	b.eq	17b0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xfd8>  // b.none
    1790:	ldrh	w9, [x8]
    1794:	ldrb	w8, [x8, #2]
    1798:	mov	w10, #0x7063                	// #28771
    179c:	eor	w9, w9, w10
    17a0:	eor	w8, w8, #0x70
    17a4:	orr	w8, w9, w8
    17a8:	tst	w8, #0xffff
    17ac:	b.ne	2134 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x195c>  // b.any
    17b0:	mov	x0, x26
    17b4:	mov	x1, x25
    17b8:	bl	0 <_ZN4llvm12AArch64PRCTX17lookupPRCTXByNameENS_9StringRefE>
    17bc:	cbz	x0, 1a84 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12ac>
    17c0:	mov	x25, x0
    17c4:	mov	x0, x28
    17c8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    17cc:	ldr	q0, [x25, #16]
    17d0:	ldp	x8, x9, [x0, #184]
    17d4:	ldr	x10, [x0, #200]
    17d8:	ldr	x11, [x25, #32]
    17dc:	stur	q0, [x29, #-64]
    17e0:	ldp	x12, x13, [x29, #-64]
    17e4:	and	x10, x11, x10
    17e8:	and	x8, x12, x8
    17ec:	and	x9, x13, x9
    17f0:	stur	x8, [x29, #-64]
    17f4:	stp	x9, x10, [x29, #-56]
    17f8:	ldp	x11, x12, [x25, #16]
    17fc:	ldr	x13, [x25, #32]
    1800:	eor	x8, x8, x11
    1804:	eor	x9, x9, x12
    1808:	eor	x10, x10, x13
    180c:	orr	x8, x8, x9
    1810:	orr	x8, x8, x10
    1814:	cbz	x8, 1b60 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1388>
    1818:	sub	x8, x29, #0x80
    181c:	mov	x0, x21
    1820:	bl	0 <_ZNK4llvm9StringRef5upperB5cxx11Ev>
    1824:	ldr	x19, [x25]
    1828:	add	x8, sp, #0x50
    182c:	add	x21, x8, #0x10
    1830:	str	x21, [sp, #80]
    1834:	cbz	x19, 27c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ff0>
    1838:	mov	x0, x19
    183c:	bl	0 <strlen>
    1840:	mov	x20, x0
    1844:	cmp	x0, #0x10
    1848:	stur	x0, [x29, #-64]
    184c:	b.cc	1c14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x143c>  // b.lo, b.ul, b.last
    1850:	add	x0, sp, #0x50
    1854:	sub	x1, x29, #0x40
    1858:	mov	x2, xzr
    185c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1860:	ldur	x8, [x29, #-64]
    1864:	str	x0, [sp, #80]
    1868:	str	x8, [sp, #96]
    186c:	b	1c18 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1440>
    1870:	ldr	w8, [x8]
    1874:	mov	w9, #0x6c74                	// #27764
    1878:	movk	w9, #0x6962, lsl #16
    187c:	cmp	w8, w9
    1880:	b.ne	2134 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x195c>  // b.any
    1884:	mov	x0, x26
    1888:	mov	x1, x25
    188c:	bl	0 <_ZN4llvm11AArch64TLBI16lookupTLBIByNameENS_9StringRefE>
    1890:	cbz	x0, 1c30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1458>
    1894:	mov	x25, x0
    1898:	mov	x0, x28
    189c:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    18a0:	ldr	q0, [x25, #16]
    18a4:	ldp	x8, x9, [x0, #184]
    18a8:	ldr	x10, [x0, #200]
    18ac:	ldr	x11, [x25, #32]
    18b0:	stur	q0, [x29, #-64]
    18b4:	ldp	x12, x13, [x29, #-64]
    18b8:	and	x10, x11, x10
    18bc:	and	x8, x12, x8
    18c0:	and	x9, x13, x9
    18c4:	stur	x8, [x29, #-64]
    18c8:	stp	x9, x10, [x29, #-56]
    18cc:	ldp	x11, x12, [x25, #16]
    18d0:	ldr	x13, [x25, #32]
    18d4:	eor	x8, x8, x11
    18d8:	eor	x9, x9, x12
    18dc:	eor	x10, x10, x13
    18e0:	orr	x8, x8, x9
    18e4:	orr	x8, x8, x10
    18e8:	cbz	x8, 1b44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x136c>
    18ec:	ldr	x19, [x25]
    18f0:	sub	x8, x29, #0x80
    18f4:	add	x21, x8, #0x10
    18f8:	stur	x21, [x29, #-128]
    18fc:	cbz	x19, 27c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ff0>
    1900:	mov	x0, x19
    1904:	bl	0 <strlen>
    1908:	mov	x20, x0
    190c:	cmp	x0, #0x10
    1910:	stur	x0, [x29, #-64]
    1914:	b.cc	1e20 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1648>  // b.lo, b.ul, b.last
    1918:	sub	x0, x29, #0x80
    191c:	sub	x1, x29, #0x40
    1920:	mov	x2, xzr
    1924:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1928:	ldur	x8, [x29, #-64]
    192c:	stur	x0, [x29, #-128]
    1930:	stur	x8, [x29, #-112]
    1934:	b	1e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x164c>
    1938:	mov	x0, x26
    193c:	mov	x1, x25
    1940:	bl	0 <_ZN4llvm9AArch64IC14lookupICByNameENS_9StringRefE>
    1944:	cbz	x0, 1c3c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1464>
    1948:	mov	x25, x0
    194c:	mov	x0, x28
    1950:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    1954:	ldr	q0, [x25, #16]
    1958:	ldp	x8, x9, [x0, #184]
    195c:	ldr	x10, [x0, #200]
    1960:	ldr	x11, [x25, #32]
    1964:	stur	q0, [x29, #-64]
    1968:	ldp	x12, x13, [x29, #-64]
    196c:	and	x10, x11, x10
    1970:	and	x8, x12, x8
    1974:	and	x9, x13, x9
    1978:	stur	x8, [x29, #-64]
    197c:	stp	x9, x10, [x29, #-56]
    1980:	ldp	x11, x12, [x25, #16]
    1984:	ldr	x13, [x25, #32]
    1988:	eor	x8, x8, x11
    198c:	eor	x9, x9, x12
    1990:	eor	x10, x10, x13
    1994:	orr	x8, x8, x9
    1998:	orr	x8, x8, x10
    199c:	cbz	x8, 1b44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x136c>
    19a0:	ldr	x19, [x25]
    19a4:	sub	x8, x29, #0x80
    19a8:	add	x21, x8, #0x10
    19ac:	stur	x21, [x29, #-128]
    19b0:	cbz	x19, 27c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ff0>
    19b4:	mov	x0, x19
    19b8:	bl	0 <strlen>
    19bc:	mov	x20, x0
    19c0:	cmp	x0, #0x10
    19c4:	stur	x0, [x29, #-64]
    19c8:	b.cc	1e3c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1664>  // b.lo, b.ul, b.last
    19cc:	sub	x0, x29, #0x80
    19d0:	sub	x1, x29, #0x40
    19d4:	mov	x2, xzr
    19d8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    19dc:	ldur	x8, [x29, #-64]
    19e0:	stur	x0, [x29, #-128]
    19e4:	stur	x8, [x29, #-112]
    19e8:	b	1e40 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1668>
    19ec:	mov	w21, #0x1                   	// #1
    19f0:	ldur	x0, [x29, #-64]
    19f4:	add	x8, x19, #0x10
    19f8:	cmp	x0, x8
    19fc:	b.eq	1a04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x122c>  // b.none
    1a00:	bl	0 <_ZdlPv>
    1a04:	mov	x19, x24
    1a08:	cbz	w21, 1a7c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x12a4>
    1a0c:	add	x1, sp, #0x50
    1a10:	sub	x2, x29, #0x60
    1a14:	mov	w3, #0x1                   	// #1
    1a18:	mov	x0, x28
    1a1c:	stp	xzr, xzr, [x29, #-96]
    1a20:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    1a24:	cmp	w0, #0x2
    1a28:	b.eq	2538 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d60>  // b.none
    1a2c:	cbnz	w0, 1a44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x126c>
    1a30:	ldur	x8, [x29, #-88]
    1a34:	cbz	x8, 1b54 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x137c>
    1a38:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1a3c:	add	x8, x8, #0x0
    1a40:	b	1e80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a8>
    1a44:	add	x1, sp, #0x50
    1a48:	sub	x2, x29, #0x60
    1a4c:	mov	w3, #0x2                   	// #2
    1a50:	mov	x0, x28
    1a54:	stp	xzr, xzr, [x29, #-96]
    1a58:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    1a5c:	cmp	w0, #0x2
    1a60:	b.eq	2538 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d60>  // b.none
    1a64:	cbnz	w0, 1bdc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1404>
    1a68:	ldur	x8, [x29, #-88]
    1a6c:	cbz	x8, 1e60 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1688>
    1a70:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1a74:	add	x8, x8, #0x0
    1a78:	b	1e80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a8>
    1a7c:	mov	w19, wzr
    1a80:	b	2368 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b90>
    1a84:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1a88:	add	x8, x8, #0x0
    1a8c:	b	e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x64c>
    1a90:	mov	x0, x26
    1a94:	mov	x1, x25
    1a98:	bl	0 <_ZN4llvm9AArch64DC14lookupDCByNameENS_9StringRefE>
    1a9c:	cbz	x0, 1cb4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14dc>
    1aa0:	mov	x25, x0
    1aa4:	mov	x0, x28
    1aa8:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    1aac:	ldr	q0, [x25, #16]
    1ab0:	ldp	x8, x9, [x0, #184]
    1ab4:	ldr	x10, [x0, #200]
    1ab8:	ldr	x11, [x25, #32]
    1abc:	stur	q0, [x29, #-64]
    1ac0:	ldp	x12, x13, [x29, #-64]
    1ac4:	and	x10, x11, x10
    1ac8:	and	x8, x12, x8
    1acc:	and	x9, x13, x9
    1ad0:	stur	x8, [x29, #-64]
    1ad4:	stp	x9, x10, [x29, #-56]
    1ad8:	ldp	x11, x12, [x25, #16]
    1adc:	ldr	x13, [x25, #32]
    1ae0:	eor	x8, x8, x11
    1ae4:	eor	x9, x9, x12
    1ae8:	eor	x10, x10, x13
    1aec:	orr	x8, x8, x9
    1af0:	orr	x8, x8, x10
    1af4:	cbz	x8, 1b44 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x136c>
    1af8:	ldr	x19, [x25]
    1afc:	sub	x8, x29, #0x80
    1b00:	add	x21, x8, #0x10
    1b04:	stur	x21, [x29, #-128]
    1b08:	cbz	x19, 27c8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ff0>
    1b0c:	mov	x0, x19
    1b10:	bl	0 <strlen>
    1b14:	mov	x20, x0
    1b18:	cmp	x0, #0x10
    1b1c:	stur	x0, [x29, #-64]
    1b20:	b.cc	2100 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1928>  // b.lo, b.ul, b.last
    1b24:	sub	x0, x29, #0x80
    1b28:	sub	x1, x29, #0x40
    1b2c:	mov	x2, xzr
    1b30:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    1b34:	ldur	x8, [x29, #-64]
    1b38:	stur	x0, [x29, #-128]
    1b3c:	stur	x8, [x29, #-112]
    1b40:	b	2104 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x192c>
    1b44:	ldrh	w1, [x25, #8]
    1b48:	ldr	x2, [sp, #24]
    1b4c:	mov	x0, x28
    1b50:	b	212c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1954>
    1b54:	mov	x24, x19
    1b58:	mov	w19, #0x1                   	// #1
    1b5c:	b	2368 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b90>
    1b60:	ldr	x8, [x28, #184]
    1b64:	ldr	x2, [sp, #24]
    1b68:	cmp	x8, #0x3
    1b6c:	b.ne	27e0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2008>  // b.any
    1b70:	ldr	x8, [x21]
    1b74:	mov	w11, #0x6663                	// #26211
    1b78:	ldrh	w9, [x8]
    1b7c:	ldrb	w10, [x8, #2]
    1b80:	eor	w9, w9, w11
    1b84:	eor	w10, w10, #0x70
    1b88:	orr	w9, w9, w10
    1b8c:	tst	w9, #0xffff
    1b90:	b.eq	1e58 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1680>  // b.none
    1b94:	ldrh	w9, [x8]
    1b98:	ldrb	w10, [x8, #2]
    1b9c:	mov	w11, #0x7664                	// #30308
    1ba0:	eor	w9, w9, w11
    1ba4:	eor	w10, w10, #0x70
    1ba8:	orr	w9, w9, w10
    1bac:	tst	w9, #0xffff
    1bb0:	b.eq	211c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1944>  // b.none
    1bb4:	ldrh	w9, [x8]
    1bb8:	ldrb	w8, [x8, #2]
    1bbc:	mov	w10, #0x7063                	// #28771
    1bc0:	eor	w9, w9, w10
    1bc4:	eor	w8, w8, #0x70
    1bc8:	orr	w8, w9, w8
    1bcc:	tst	w8, #0xffff
    1bd0:	b.ne	27e0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2008>  // b.any
    1bd4:	mov	w1, #0x7                   	// #7
    1bd8:	b	2120 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1948>
    1bdc:	add	x1, sp, #0x50
    1be0:	sub	x2, x29, #0x60
    1be4:	mov	w3, #0x3                   	// #3
    1be8:	mov	x0, x28
    1bec:	stp	xzr, xzr, [x29, #-96]
    1bf0:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    1bf4:	cmp	w0, #0x2
    1bf8:	b.eq	2538 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d60>  // b.none
    1bfc:	cbnz	w0, 1e78 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a0>
    1c00:	ldur	x8, [x29, #-88]
    1c04:	cbz	x8, 2360 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b88>
    1c08:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1c0c:	add	x8, x8, #0x0
    1c10:	b	1e80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16a8>
    1c14:	mov	x0, x21
    1c18:	cbz	x20, 1c54 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x147c>
    1c1c:	cmp	x20, #0x1
    1c20:	b.ne	1c48 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1470>  // b.any
    1c24:	ldrb	w8, [x19]
    1c28:	strb	w8, [x0]
    1c2c:	b	1c54 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x147c>
    1c30:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1c34:	add	x8, x8, #0x0
    1c38:	b	e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x64c>
    1c3c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1c40:	add	x8, x8, #0x0
    1c44:	b	e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x64c>
    1c48:	mov	x1, x19
    1c4c:	mov	x2, x20
    1c50:	bl	0 <memcpy>
    1c54:	ldur	x8, [x29, #-64]
    1c58:	ldr	x9, [sp, #80]
    1c5c:	sub	x10, x29, #0x80
    1c60:	add	x19, x10, #0x10
    1c64:	str	x8, [sp, #88]
    1c68:	strb	wzr, [x9, x8]
    1c6c:	ldp	x3, x4, [x29, #-128]
    1c70:	ldur	x8, [x29, #-112]
    1c74:	ldp	x1, x2, [sp, #80]
    1c78:	mov	w11, #0xf                   	// #15
    1c7c:	cmp	x3, x19
    1c80:	csel	x9, x11, x8, eq  // eq = none
    1c84:	add	x8, x2, x4
    1c88:	cmp	x8, x9
    1c8c:	b.ls	1ca8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14d0>  // b.plast
    1c90:	ldr	x9, [sp, #96]
    1c94:	cmp	x1, x21
    1c98:	mov	w10, #0xf                   	// #15
    1c9c:	csel	x9, x10, x9, eq  // eq = none
    1ca0:	cmp	x8, x9
    1ca4:	b.ls	1cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14e8>  // b.plast
    1ca8:	sub	x0, x29, #0x80
    1cac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1cb0:	b	1cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x14f8>
    1cb4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1cb8:	add	x8, x8, #0x0
    1cbc:	b	e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x64c>
    1cc0:	add	x0, sp, #0x50
    1cc4:	mov	x1, xzr
    1cc8:	mov	x2, xzr
    1ccc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1cd0:	sub	x8, x29, #0x60
    1cd4:	add	x22, x8, #0x10
    1cd8:	stur	x22, [x29, #-96]
    1cdc:	mov	x8, x0
    1ce0:	ldr	x9, [x8], #16
    1ce4:	cmp	x9, x8
    1ce8:	b.eq	1cfc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1524>  // b.none
    1cec:	stur	x9, [x29, #-96]
    1cf0:	ldr	x9, [x0, #16]
    1cf4:	stur	x9, [x29, #-80]
    1cf8:	b	1d04 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x152c>
    1cfc:	ldr	q0, [x9]
    1d00:	str	q0, [x22]
    1d04:	ldr	x9, [x0, #8]
    1d08:	stur	x9, [x29, #-88]
    1d0c:	stp	x8, xzr, [x0]
    1d10:	strb	wzr, [x0, #16]
    1d14:	ldur	x8, [x29, #-88]
    1d18:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1d1c:	sub	x8, x9, x8
    1d20:	cmp	x8, #0x9
    1d24:	b.ls	27d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ffc>  // b.plast
    1d28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1d2c:	add	x1, x1, #0x0
    1d30:	sub	x0, x29, #0x60
    1d34:	mov	w2, #0xa                   	// #10
    1d38:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1d3c:	sub	x8, x29, #0x40
    1d40:	add	x20, x8, #0x10
    1d44:	stur	x20, [x29, #-64]
    1d48:	mov	x8, x0
    1d4c:	ldr	x9, [x8], #16
    1d50:	cmp	x9, x8
    1d54:	b.eq	1d68 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1590>  // b.none
    1d58:	stur	x9, [x29, #-64]
    1d5c:	ldr	x9, [x0, #16]
    1d60:	stur	x9, [x29, #-48]
    1d64:	b	1d70 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1598>
    1d68:	ldr	q0, [x9]
    1d6c:	str	q0, [x20]
    1d70:	ldr	x9, [x0, #8]
    1d74:	stur	x9, [x29, #-56]
    1d78:	stp	x8, xzr, [x0]
    1d7c:	strb	wzr, [x0, #16]
    1d80:	ldur	x0, [x29, #-96]
    1d84:	cmp	x0, x22
    1d88:	b.eq	1d90 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15b8>  // b.none
    1d8c:	bl	0 <_ZdlPv>
    1d90:	ldr	x0, [sp, #80]
    1d94:	cmp	x0, x21
    1d98:	b.eq	1da0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15c8>  // b.none
    1d9c:	bl	0 <_ZdlPv>
    1da0:	ldur	x0, [x29, #-128]
    1da4:	cmp	x0, x19
    1da8:	add	x19, x25, #0x10
    1dac:	b.eq	1db4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x15dc>  // b.none
    1db0:	bl	0 <_ZdlPv>
    1db4:	ldr	x8, [x19, #16]
    1db8:	ldr	q0, [x19]
    1dbc:	add	x0, sp, #0x30
    1dc0:	sub	x1, x29, #0x40
    1dc4:	str	x8, [sp, #64]
    1dc8:	str	q0, [sp, #48]
    1dcc:	bl	aedc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    1dd0:	ldur	x8, [x29, #-64]
    1dd4:	mov	w9, #0x101                 	// #257
    1dd8:	stp	xzr, xzr, [x29, #-96]
    1ddc:	sturh	w9, [x29, #-80]
    1de0:	ldrb	w9, [x8]
    1de4:	cbz	w9, 1df4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x161c>
    1de8:	stur	x8, [x29, #-96]
    1dec:	mov	w8, #0x3                   	// #3
    1df0:	b	1df8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1620>
    1df4:	mov	w8, #0x1                   	// #1
    1df8:	sturb	w8, [x29, #-80]
    1dfc:	ldr	x8, [sp, #16]
    1e00:	sub	x1, x29, #0x60
    1e04:	mov	x2, xzr
    1e08:	mov	x3, xzr
    1e0c:	ldr	x0, [x8]
    1e10:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    1e14:	ldur	x8, [x29, #-64]
    1e18:	cmp	x8, x20
    1e1c:	b	26b4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1edc>
    1e20:	mov	x0, x21
    1e24:	cbz	x20, 1ebc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16e4>
    1e28:	cmp	x20, #0x1
    1e2c:	b.ne	1eb0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16d8>  // b.any
    1e30:	ldrb	w8, [x19]
    1e34:	strb	w8, [x0]
    1e38:	b	1ebc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x16e4>
    1e3c:	mov	x0, x21
    1e40:	cbz	x20, 1fe4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x180c>
    1e44:	cmp	x20, #0x1
    1e48:	b.ne	1fd8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1800>  // b.any
    1e4c:	ldrb	w8, [x19]
    1e50:	strb	w8, [x0]
    1e54:	b	1fe4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x180c>
    1e58:	mov	w1, #0x4                   	// #4
    1e5c:	b	2120 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1948>
    1e60:	mov	x24, x19
    1e64:	mov	w19, #0x2                   	// #2
    1e68:	b	2368 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b90>
    1e6c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1e70:	add	x8, x8, #0x0
    1e74:	b	e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x64c>
    1e78:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    1e7c:	add	x8, x8, #0x0
    1e80:	stp	x8, xzr, [x29, #-64]
    1e84:	ldr	x8, [sp, #16]
    1e88:	mov	w9, #0x103                 	// #259
    1e8c:	sturh	w9, [x29, #-48]
    1e90:	sub	x2, x29, #0x40
    1e94:	ldr	x0, [x8]
    1e98:	mov	x1, x20
    1e9c:	mov	x3, xzr
    1ea0:	mov	x4, xzr
    1ea4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    1ea8:	mov	w19, #0x1                   	// #1
    1eac:	b	1518 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd40>
    1eb0:	mov	x1, x19
    1eb4:	mov	x2, x20
    1eb8:	bl	0 <memcpy>
    1ebc:	ldur	x8, [x29, #-64]
    1ec0:	ldur	x9, [x29, #-128]
    1ec4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    1ec8:	add	x3, x3, #0x0
    1ecc:	sub	x0, x29, #0x80
    1ed0:	mov	w4, #0x5                   	// #5
    1ed4:	mov	x1, xzr
    1ed8:	mov	x2, xzr
    1edc:	stur	x8, [x29, #-120]
    1ee0:	strb	wzr, [x9, x8]
    1ee4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    1ee8:	sub	x8, x29, #0x60
    1eec:	add	x20, x8, #0x10
    1ef0:	stur	x20, [x29, #-96]
    1ef4:	mov	x8, x0
    1ef8:	ldr	x9, [x8], #16
    1efc:	cmp	x9, x8
    1f00:	b.eq	1f14 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x173c>  // b.none
    1f04:	stur	x9, [x29, #-96]
    1f08:	ldr	x9, [x0, #16]
    1f0c:	stur	x9, [x29, #-80]
    1f10:	b	1f1c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1744>
    1f14:	ldr	q0, [x9]
    1f18:	str	q0, [x20]
    1f1c:	ldr	x9, [x0, #8]
    1f20:	stur	x9, [x29, #-88]
    1f24:	stp	x8, xzr, [x0]
    1f28:	strb	wzr, [x0, #16]
    1f2c:	ldur	x8, [x29, #-88]
    1f30:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    1f34:	sub	x8, x9, x8
    1f38:	cmp	x8, #0x9
    1f3c:	b.ls	27d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ffc>  // b.plast
    1f40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    1f44:	add	x1, x1, #0x0
    1f48:	sub	x0, x29, #0x60
    1f4c:	mov	w2, #0xa                   	// #10
    1f50:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    1f54:	sub	x8, x29, #0x40
    1f58:	add	x19, x8, #0x10
    1f5c:	stur	x19, [x29, #-64]
    1f60:	mov	x8, x0
    1f64:	ldr	x9, [x8], #16
    1f68:	cmp	x9, x8
    1f6c:	b.eq	1f80 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17a8>  // b.none
    1f70:	stur	x9, [x29, #-64]
    1f74:	ldr	x9, [x0, #16]
    1f78:	stur	x9, [x29, #-48]
    1f7c:	b	1f88 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17b0>
    1f80:	ldr	q0, [x9]
    1f84:	str	q0, [x19]
    1f88:	ldr	x9, [x0, #8]
    1f8c:	stur	x9, [x29, #-56]
    1f90:	stp	x8, xzr, [x0]
    1f94:	strb	wzr, [x0, #16]
    1f98:	ldur	x0, [x29, #-96]
    1f9c:	cmp	x0, x20
    1fa0:	b.eq	1fa8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17d0>  // b.none
    1fa4:	bl	0 <_ZdlPv>
    1fa8:	ldur	x0, [x29, #-128]
    1fac:	add	x20, x25, #0x10
    1fb0:	cmp	x0, x21
    1fb4:	b.eq	1fbc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x17e4>  // b.none
    1fb8:	bl	0 <_ZdlPv>
    1fbc:	ldr	x8, [x20, #16]
    1fc0:	ldr	q0, [x20]
    1fc4:	add	x0, sp, #0x70
    1fc8:	sub	x1, x29, #0x40
    1fcc:	str	x8, [sp, #128]
    1fd0:	str	q0, [sp, #112]
    1fd4:	b	2664 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e8c>
    1fd8:	mov	x1, x19
    1fdc:	mov	x2, x20
    1fe0:	bl	0 <memcpy>
    1fe4:	ldur	x8, [x29, #-64]
    1fe8:	ldur	x9, [x29, #-128]
    1fec:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    1ff0:	add	x3, x3, #0x0
    1ff4:	sub	x0, x29, #0x80
    1ff8:	mov	w4, #0x3                   	// #3
    1ffc:	mov	x1, xzr
    2000:	mov	x2, xzr
    2004:	stur	x8, [x29, #-120]
    2008:	strb	wzr, [x9, x8]
    200c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    2010:	sub	x8, x29, #0x60
    2014:	add	x20, x8, #0x10
    2018:	stur	x20, [x29, #-96]
    201c:	mov	x8, x0
    2020:	ldr	x9, [x8], #16
    2024:	cmp	x9, x8
    2028:	b.eq	203c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1864>  // b.none
    202c:	stur	x9, [x29, #-96]
    2030:	ldr	x9, [x0, #16]
    2034:	stur	x9, [x29, #-80]
    2038:	b	2044 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x186c>
    203c:	ldr	q0, [x9]
    2040:	str	q0, [x20]
    2044:	ldr	x9, [x0, #8]
    2048:	stur	x9, [x29, #-88]
    204c:	stp	x8, xzr, [x0]
    2050:	strb	wzr, [x0, #16]
    2054:	ldur	x8, [x29, #-88]
    2058:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    205c:	sub	x8, x9, x8
    2060:	cmp	x8, #0x9
    2064:	b.ls	27d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ffc>  // b.plast
    2068:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    206c:	add	x1, x1, #0x0
    2070:	sub	x0, x29, #0x60
    2074:	mov	w2, #0xa                   	// #10
    2078:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    207c:	sub	x8, x29, #0x40
    2080:	add	x19, x8, #0x10
    2084:	stur	x19, [x29, #-64]
    2088:	mov	x8, x0
    208c:	ldr	x9, [x8], #16
    2090:	cmp	x9, x8
    2094:	b.eq	20a8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18d0>  // b.none
    2098:	stur	x9, [x29, #-64]
    209c:	ldr	x9, [x0, #16]
    20a0:	stur	x9, [x29, #-48]
    20a4:	b	20b0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18d8>
    20a8:	ldr	q0, [x9]
    20ac:	str	q0, [x19]
    20b0:	ldr	x9, [x0, #8]
    20b4:	stur	x9, [x29, #-56]
    20b8:	stp	x8, xzr, [x0]
    20bc:	strb	wzr, [x0, #16]
    20c0:	ldur	x0, [x29, #-96]
    20c4:	cmp	x0, x20
    20c8:	b.eq	20d0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x18f8>  // b.none
    20cc:	bl	0 <_ZdlPv>
    20d0:	ldur	x0, [x29, #-128]
    20d4:	add	x20, x25, #0x10
    20d8:	cmp	x0, x21
    20dc:	b.eq	20e4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x190c>  // b.none
    20e0:	bl	0 <_ZdlPv>
    20e4:	ldr	x8, [x20, #16]
    20e8:	ldr	q0, [x20]
    20ec:	sub	x0, x29, #0xa0
    20f0:	sub	x1, x29, #0x40
    20f4:	stur	x8, [x29, #-144]
    20f8:	stur	q0, [x29, #-160]
    20fc:	b	2664 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e8c>
    2100:	mov	x0, x21
    2104:	cbz	x20, 2228 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a50>
    2108:	cmp	x20, #0x1
    210c:	b.ne	221c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a44>  // b.any
    2110:	ldrb	w8, [x19]
    2114:	strb	w8, [x0]
    2118:	b	2228 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a50>
    211c:	mov	w1, #0x5                   	// #5
    2120:	ldrh	w8, [x25, #8]
    2124:	mov	x0, x28
    2128:	bfi	w1, w8, #3, #29
    212c:	mov	x3, x24
    2130:	bl	b208 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE>
    2134:	ldr	x8, [x23]
    2138:	mov	x0, x23
    213c:	ldr	x8, [x8, #136]
    2140:	blr	x8
    2144:	sub	x8, x29, #0x40
    2148:	sub	x0, x29, #0x18
    214c:	sub	x19, x29, #0x40
    2150:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    2154:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2158:	add	x1, x1, #0x0
    215c:	sub	x0, x29, #0x40
    2160:	mov	w3, #0x3                   	// #3
    2164:	mov	x2, xzr
    2168:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm>
    216c:	ldur	x8, [x29, #-64]
    2170:	add	x9, x19, #0x10
    2174:	mov	x23, x0
    2178:	cmp	x8, x9
    217c:	b.eq	2188 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19b0>  // b.none
    2180:	mov	x0, x8
    2184:	bl	0 <_ZdlPv>
    2188:	ldr	x0, [x20]
    218c:	mov	w1, #0x19                  	// #25
    2190:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    2194:	tbz	w0, #0, 21c0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19e8>
    2198:	ldr	w8, [x22]
    219c:	cmp	w8, #0x2
    21a0:	b.ne	21b4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x19dc>  // b.any
    21a4:	ldr	x1, [sp, #24]
    21a8:	mov	x0, x28
    21ac:	bl	b550 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    21b0:	tbz	w0, #0, 21e4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a0c>
    21b4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    21b8:	add	x8, x8, #0x0
    21bc:	b	e24 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x64c>
    21c0:	cmn	x23, #0x1
    21c4:	b.ne	14f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd18>  // b.any
    21c8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    21cc:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    21d0:	mov	w8, #0x503                 	// #1283
    21d4:	add	x9, x9, #0x0
    21d8:	sub	x10, x29, #0x60
    21dc:	add	x11, x11, #0x0
    21e0:	b	2204 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1a2c>
    21e4:	cmn	x23, #0x1
    21e8:	b.eq	14f0 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd18>  // b.none
    21ec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    21f0:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    21f4:	mov	w8, #0x503                 	// #1283
    21f8:	add	x9, x9, #0x0
    21fc:	sub	x10, x29, #0x60
    2200:	add	x11, x11, #0x0
    2204:	mov	w12, #0x302                 	// #770
    2208:	sturh	w8, [x29, #-80]
    220c:	stp	x9, x21, [x29, #-96]
    2210:	stp	x10, x11, [x29, #-64]
    2214:	sturh	w12, [x29, #-48]
    2218:	b	e30 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x658>
    221c:	mov	x1, x19
    2220:	mov	x2, x20
    2224:	bl	0 <memcpy>
    2228:	ldur	x8, [x29, #-64]
    222c:	ldur	x9, [x29, #-128]
    2230:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2234:	add	x3, x3, #0x0
    2238:	sub	x0, x29, #0x80
    223c:	mov	w4, #0x3                   	// #3
    2240:	mov	x1, xzr
    2244:	mov	x2, xzr
    2248:	stur	x8, [x29, #-120]
    224c:	strb	wzr, [x9, x8]
    2250:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    2254:	sub	x8, x29, #0x60
    2258:	add	x20, x8, #0x10
    225c:	stur	x20, [x29, #-96]
    2260:	mov	x8, x0
    2264:	ldr	x9, [x8], #16
    2268:	cmp	x9, x8
    226c:	b.eq	2280 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1aa8>  // b.none
    2270:	stur	x9, [x29, #-96]
    2274:	ldr	x9, [x0, #16]
    2278:	stur	x9, [x29, #-80]
    227c:	b	2288 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ab0>
    2280:	ldr	q0, [x9]
    2284:	str	q0, [x20]
    2288:	ldr	x9, [x0, #8]
    228c:	stur	x9, [x29, #-88]
    2290:	stp	x8, xzr, [x0]
    2294:	strb	wzr, [x0, #16]
    2298:	ldur	x8, [x29, #-88]
    229c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    22a0:	sub	x8, x9, x8
    22a4:	cmp	x8, #0x9
    22a8:	b.ls	27d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ffc>  // b.plast
    22ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    22b0:	add	x1, x1, #0x0
    22b4:	sub	x0, x29, #0x60
    22b8:	mov	w2, #0xa                   	// #10
    22bc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    22c0:	sub	x8, x29, #0x40
    22c4:	add	x19, x8, #0x10
    22c8:	stur	x19, [x29, #-64]
    22cc:	mov	x8, x0
    22d0:	ldr	x9, [x8], #16
    22d4:	cmp	x9, x8
    22d8:	b.eq	22ec <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b14>  // b.none
    22dc:	stur	x9, [x29, #-64]
    22e0:	ldr	x9, [x0, #16]
    22e4:	stur	x9, [x29, #-48]
    22e8:	b	22f4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b1c>
    22ec:	ldr	q0, [x9]
    22f0:	str	q0, [x19]
    22f4:	ldr	x9, [x0, #8]
    22f8:	stur	x9, [x29, #-56]
    22fc:	stp	x8, xzr, [x0]
    2300:	strb	wzr, [x0, #16]
    2304:	ldur	x0, [x29, #-96]
    2308:	cmp	x0, x20
    230c:	b.eq	2314 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b3c>  // b.none
    2310:	bl	0 <_ZdlPv>
    2314:	ldur	x0, [x29, #-128]
    2318:	add	x20, x25, #0x10
    231c:	cmp	x0, x21
    2320:	b.eq	2328 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1b50>  // b.none
    2324:	bl	0 <_ZdlPv>
    2328:	ldr	x8, [x20, #16]
    232c:	ldr	q0, [x20]
    2330:	add	x0, sp, #0xb0
    2334:	sub	x1, x29, #0x40
    2338:	str	x8, [sp, #192]
    233c:	str	q0, [sp, #176]
    2340:	b	2664 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e8c>
    2344:	mov	x0, x21
    2348:	cbz	x20, 254c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d74>
    234c:	cmp	x20, #0x1
    2350:	b.ne	2540 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d68>  // b.any
    2354:	ldrb	w8, [x19]
    2358:	strb	w8, [x0]
    235c:	b	254c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d74>
    2360:	mov	x24, x19
    2364:	mov	w19, #0x3                   	// #3
    2368:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    236c:	add	x8, x8, #0x0
    2370:	stp	x8, xzr, [x29, #-64]
    2374:	ldr	x8, [sp, #16]
    2378:	mov	w9, #0x103                 	// #259
    237c:	sturh	w9, [x29, #-48]
    2380:	sub	x2, x29, #0x40
    2384:	ldr	x0, [x8]
    2388:	mov	w1, #0x9                   	// #9
    238c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2390:	tbnz	w0, #0, 2538 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d60>
    2394:	ldp	x22, x23, [x29, #-128]
    2398:	ldr	w25, [sp, #80]
    239c:	add	x20, x28, #0xc0
    23a0:	mov	x0, x20
    23a4:	mov	x1, x22
    23a8:	mov	x2, x23
    23ac:	bl	0 <_ZN4llvm13StringMapImpl15LookupBucketForENS_9StringRefE>
    23b0:	ldr	x8, [x28, #192]
    23b4:	mov	w21, w0
    23b8:	add	x27, x8, w0, uxtw #3
    23bc:	ldr	x8, [x27]
    23c0:	cmn	x8, #0x8
    23c4:	b.eq	23e8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c10>  // b.none
    23c8:	cbz	x8, 23f4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c1c>
    23cc:	ldr	x14, [sp, #16]
    23d0:	b	23d8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c00>
    23d4:	ldr	x8, [x27, #8]!
    23d8:	cbz	x8, 23d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1bfc>
    23dc:	cmn	x8, #0x8
    23e0:	b.eq	23d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1bfc>  // b.none
    23e4:	b	24cc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1cf4>
    23e8:	ldr	w8, [x28, #208]
    23ec:	sub	w8, w8, #0x1
    23f0:	str	w8, [x28, #208]
    23f4:	add	x26, x23, #0x11
    23f8:	str	x28, [sp, #8]
    23fc:	mov	x28, x19
    2400:	mov	x0, x26
    2404:	str	x25, [sp, #24]
    2408:	bfi	x28, x25, #32, #32
    240c:	bl	0 <malloc>
    2410:	mov	x25, x0
    2414:	cbnz	x0, 242c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c54>
    2418:	cbz	x26, 243c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c64>
    241c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2420:	add	x0, x0, #0x0
    2424:	mov	w1, #0x1                   	// #1
    2428:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    242c:	add	x26, x25, #0x10
    2430:	stp	x23, x28, [x25]
    2434:	cbnz	x23, 2464 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c8c>
    2438:	b	2474 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c9c>
    243c:	mov	w0, #0x1                   	// #1
    2440:	bl	0 <malloc>
    2444:	mov	x25, x0
    2448:	cbnz	x0, 245c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1c84>
    244c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2450:	add	x0, x0, #0x0
    2454:	mov	w1, #0x1                   	// #1
    2458:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
    245c:	stp	x23, x28, [x25]
    2460:	add	x26, x25, #0x10
    2464:	mov	x0, x26
    2468:	mov	x1, x22
    246c:	mov	x2, x23
    2470:	bl	0 <memcpy>
    2474:	ldr	x22, [sp, #8]
    2478:	strb	wzr, [x26, x23]
    247c:	str	x25, [x27]
    2480:	ldp	w8, w9, [x22, #204]
    2484:	ldr	w10, [x22, #200]
    2488:	add	w8, w8, #0x1
    248c:	add	w9, w9, w8
    2490:	cmp	w9, w10
    2494:	str	w8, [x22, #204]
    2498:	b.hi	2800 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x2028>  // b.pmore
    249c:	mov	x0, x20
    24a0:	mov	w1, w21
    24a4:	bl	0 <_ZN4llvm13StringMapImpl11RehashTableEj>
    24a8:	ldr	x8, [x20]
    24ac:	ldp	x14, x25, [sp, #16]
    24b0:	add	x27, x8, w0, uxtw #3
    24b4:	b	24bc <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ce4>
    24b8:	add	x27, x27, #0x8
    24bc:	ldr	x8, [x27]
    24c0:	cbz	x8, 24b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ce0>
    24c4:	cmn	x8, #0x8
    24c8:	b.eq	24b8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ce0>  // b.none
    24cc:	ldr	x8, [x27]
    24d0:	ldr	w9, [x8, #8]
    24d4:	cmp	w9, w19
    24d8:	b.ne	24e8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d10>  // b.any
    24dc:	ldr	w8, [x8, #12]
    24e0:	cmp	w8, w25
    24e4:	b.eq	2538 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1d60>  // b.none
    24e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    24ec:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    24f0:	mov	w8, #0x503                 	// #1283
    24f4:	add	x9, x9, #0x0
    24f8:	sub	x10, x29, #0x80
    24fc:	sub	x11, x29, #0x60
    2500:	add	x12, x12, #0x0
    2504:	mov	w13, #0x302                 	// #770
    2508:	sturh	w8, [x29, #-80]
    250c:	stp	x9, x10, [x29, #-96]
    2510:	stp	x11, x12, [x29, #-64]
    2514:	sturh	w13, [x29, #-48]
    2518:	ldr	x0, [x14]
    251c:	sub	x2, x29, #0x40
    2520:	mov	x1, x24
    2524:	mov	x3, xzr
    2528:	ldr	x8, [x0]
    252c:	mov	x4, xzr
    2530:	ldr	x8, [x8, #120]
    2534:	blr	x8
    2538:	mov	w19, #0x1                   	// #1
    253c:	b	1518 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd40>
    2540:	mov	x1, x19
    2544:	mov	x2, x20
    2548:	bl	0 <memcpy>
    254c:	ldur	x8, [x29, #-64]
    2550:	ldur	x9, [x29, #-128]
    2554:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2558:	add	x3, x3, #0x0
    255c:	sub	x0, x29, #0x80
    2560:	mov	w4, #0x3                   	// #3
    2564:	mov	x1, xzr
    2568:	mov	x2, xzr
    256c:	stur	x8, [x29, #-120]
    2570:	strb	wzr, [x9, x8]
    2574:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    2578:	sub	x8, x29, #0x60
    257c:	add	x20, x8, #0x10
    2580:	stur	x20, [x29, #-96]
    2584:	mov	x8, x0
    2588:	ldr	x9, [x8], #16
    258c:	cmp	x9, x8
    2590:	b.eq	25a4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1dcc>  // b.none
    2594:	stur	x9, [x29, #-96]
    2598:	ldr	x9, [x0, #16]
    259c:	stur	x9, [x29, #-80]
    25a0:	b	25ac <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1dd4>
    25a4:	ldr	q0, [x9]
    25a8:	str	q0, [x20]
    25ac:	ldr	x9, [x0, #8]
    25b0:	stur	x9, [x29, #-88]
    25b4:	stp	x8, xzr, [x0]
    25b8:	strb	wzr, [x0, #16]
    25bc:	ldur	x8, [x29, #-88]
    25c0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    25c4:	sub	x8, x9, x8
    25c8:	cmp	x8, #0x9
    25cc:	b.ls	27d4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1ffc>  // b.plast
    25d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    25d4:	add	x1, x1, #0x0
    25d8:	sub	x0, x29, #0x60
    25dc:	mov	w2, #0xa                   	// #10
    25e0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    25e4:	sub	x8, x29, #0x40
    25e8:	add	x19, x8, #0x10
    25ec:	stur	x19, [x29, #-64]
    25f0:	mov	x8, x0
    25f4:	ldr	x9, [x8], #16
    25f8:	cmp	x9, x8
    25fc:	b.eq	2610 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e38>  // b.none
    2600:	stur	x9, [x29, #-64]
    2604:	ldr	x9, [x0, #16]
    2608:	stur	x9, [x29, #-48]
    260c:	b	2618 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e40>
    2610:	ldr	q0, [x9]
    2614:	str	q0, [x19]
    2618:	ldr	x9, [x0, #8]
    261c:	stur	x9, [x29, #-56]
    2620:	stp	x8, xzr, [x0]
    2624:	strb	wzr, [x0, #16]
    2628:	ldur	x0, [x29, #-96]
    262c:	cmp	x0, x20
    2630:	b.eq	2638 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e60>  // b.none
    2634:	bl	0 <_ZdlPv>
    2638:	ldur	x0, [x29, #-128]
    263c:	add	x20, x25, #0x10
    2640:	cmp	x0, x21
    2644:	b.eq	264c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1e74>  // b.none
    2648:	bl	0 <_ZdlPv>
    264c:	ldr	x8, [x20, #16]
    2650:	ldr	q0, [x20]
    2654:	add	x0, sp, #0x90
    2658:	sub	x1, x29, #0x40
    265c:	str	x8, [sp, #160]
    2660:	str	q0, [sp, #144]
    2664:	bl	aedc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>
    2668:	ldur	x8, [x29, #-64]
    266c:	mov	w9, #0x101                 	// #257
    2670:	stp	xzr, xzr, [x29, #-96]
    2674:	sturh	w9, [x29, #-80]
    2678:	ldrb	w9, [x8]
    267c:	cbz	w9, 268c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb4>
    2680:	stur	x8, [x29, #-96]
    2684:	mov	w8, #0x3                   	// #3
    2688:	b	2690 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1eb8>
    268c:	mov	w8, #0x1                   	// #1
    2690:	ldr	x9, [sp, #16]
    2694:	sturb	w8, [x29, #-80]
    2698:	sub	x1, x29, #0x60
    269c:	mov	x2, xzr
    26a0:	ldr	x0, [x9]
    26a4:	mov	x3, xzr
    26a8:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    26ac:	ldur	x8, [x29, #-64]
    26b0:	cmp	x8, x19
    26b4:	mov	w19, w0
    26b8:	b.eq	1518 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd40>  // b.none
    26bc:	mov	x0, x8
    26c0:	bl	0 <_ZdlPv>
    26c4:	b	1518 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xd40>
    26c8:	mov	x1, xzr
    26cc:	bl	0 <LLVMInitializeAArch64AsmParser>
    26d0:	ldr	x0, [sp, #24]
    26d4:	ldp	w8, w9, [x0, #8]
    26d8:	ldr	x10, [x0]
    26dc:	cmp	w8, w9
    26e0:	str	x25, [x10, w8, uxtw #3]
    26e4:	b.cc	d9c <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x5c4>  // b.lo, b.ul, b.last
    26e8:	b	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>
    26ec:	mov	x1, xzr
    26f0:	bl	0 <LLVMInitializeAArch64AsmParser>
    26f4:	ldr	x0, [sp, #24]
    26f8:	ldp	w8, w9, [x0, #8]
    26fc:	ldr	x10, [x0]
    2700:	cmp	w8, w9
    2704:	str	x23, [x10, w8, uxtw #3]
    2708:	b.cc	ed4 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x6fc>  // b.lo, b.ul, b.last
    270c:	b	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>
    2710:	mov	x19, x0
    2714:	mov	x0, x11
    2718:	mov	x1, xzr
    271c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2720:	ldr	x11, [sp, #24]
    2724:	mov	x0, x19
    2728:	ldr	x19, [sp, #8]
    272c:	ldp	w8, w9, [x11, #8]
    2730:	ldr	x10, [x11]
    2734:	cmp	w8, w9
    2738:	str	x0, [x10, w8, uxtw #3]
    273c:	b.cc	1174 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x99c>  // b.lo, b.ul, b.last
    2740:	b	2768 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0x1f90>
    2744:	mov	x0, x11
    2748:	mov	x1, xzr
    274c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2750:	ldr	x11, [sp, #24]
    2754:	ldp	w8, w9, [x11, #8]
    2758:	ldr	x10, [x11]
    275c:	cmp	w8, w9
    2760:	str	x26, [x10, w8, uxtw #3]
    2764:	b.cc	11e8 <_ZN12_GLOBAL__N_116AArch64AsmParser16ParseInstructionERN4llvm20ParseInstructionInfoENS1_9StringRefENS1_5SMLocERNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS8_EEEE+0xa10>  // b.lo, b.ul, b.last
    2768:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    276c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2770:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2774:	add	x0, x0, #0x0
    2778:	add	x1, x1, #0x0
    277c:	add	x3, x3, #0x0
    2780:	mov	w2, #0x43                  	// #67
    2784:	bl	0 <__assert_fail>
    2788:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    278c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2790:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    2794:	add	x0, x0, #0x0
    2798:	add	x1, x1, #0x0
    279c:	add	x3, x3, #0x0
    27a0:	mov	w2, #0x5b                  	// #91
    27a4:	bl	0 <__assert_fail>
    27a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    27ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    27b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    27b4:	add	x0, x0, #0x0
    27b8:	add	x1, x1, #0x0
    27bc:	add	x3, x3, #0x0
    27c0:	mov	w2, #0x99                  	// #153
    27c4:	bl	0 <__assert_fail>
    27c8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    27cc:	add	x0, x0, #0x0
    27d0:	bl	0 <_ZSt19__throw_logic_errorPKc>
    27d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    27d8:	add	x0, x0, #0x0
    27dc:	bl	0 <_ZSt20__throw_length_errorPKc>
    27e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    27e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    27e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    27ec:	add	x0, x0, #0x0
    27f0:	add	x1, x1, #0x0
    27f4:	add	x3, x3, #0x0
    27f8:	mov	w2, #0xb8d                 	// #2957
    27fc:	bl	0 <__assert_fail>
    2800:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2804:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2808:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    280c:	add	x0, x0, #0x0
    2810:	add	x1, x1, #0x0
    2814:	add	x3, x3, #0x0
    2818:	mov	w2, #0x1bb                 	// #443
    281c:	bl	0 <__assert_fail>

0000000000002820 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE>:
    2820:	sub	sp, sp, #0x1e0
    2824:	stp	x29, x30, [sp, #384]
    2828:	stp	x28, x27, [sp, #400]
    282c:	stp	x26, x25, [sp, #416]
    2830:	stp	x24, x23, [sp, #432]
    2834:	stp	x22, x21, [sp, #448]
    2838:	stp	x20, x19, [sp, #464]
    283c:	add	x29, sp, #0x180
    2840:	mov	x25, x0
    2844:	mov	x19, x0
    2848:	ldr	x0, [x25, #8]!
    284c:	mov	x20, x1
    2850:	ldr	x8, [x0]
    2854:	ldr	x8, [x8, #48]
    2858:	blr	x8
    285c:	ldr	x9, [x0, #32]
    2860:	ldr	w8, [x20]
    2864:	ldr	w23, [x9, #704]
    2868:	cmp	w8, #0x3
    286c:	b.eq	2880 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x60>  // b.none
    2870:	cmp	w8, #0x2
    2874:	b.ne	3d6c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x154c>  // b.any
    2878:	ldp	x21, x22, [x20, #8]
    287c:	b	28a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x84>
    2880:	ldp	x9, x8, [x20, #8]
    2884:	subs	x10, x8, #0x1
    2888:	cset	w11, cs  // cs = hs, nlast
    288c:	cinc	x21, x9, cs  // cs = hs, nlast
    2890:	cmp	x10, x11
    2894:	csel	x9, x10, x11, hi  // hi = pmore
    2898:	cmp	x8, x9
    289c:	csel	x8, x8, x9, cc  // cc = lo, ul, last
    28a0:	sub	x22, x8, x11
    28a4:	mov	x0, x20
    28a8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    28ac:	sub	x8, x22, #0x4
    28b0:	mov	x20, x0
    28b4:	cmp	x8, #0x10
    28b8:	mov	w0, #0x1                   	// #1
    28bc:	b.hi	392c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x110c>  // b.pmore
    28c0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    28c4:	add	x9, x9, #0x0
    28c8:	adr	x10, 28d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb8>
    28cc:	ldrh	w11, [x9, x8, lsl #1]
    28d0:	add	x10, x10, x11, lsl #2
    28d4:	br	x10
    28d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    28dc:	add	x1, x1, #0x0
    28e0:	mov	x0, x21
    28e4:	mov	x2, x22
    28e8:	bl	0 <bcmp>
    28ec:	cbz	w0, 30f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x8d0>
    28f0:	cbnz	w23, 2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    28f4:	ldr	w8, [x21]
    28f8:	mov	w9, #0x6c2e                	// #27694
    28fc:	movk	w9, #0x686f, lsl #16
    2900:	cmp	w8, w9
    2904:	b.ne	2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>  // b.any
    2908:	mov	w8, #0x4                   	// #4
    290c:	stp	x21, x8, [sp, #144]
    2910:	ldr	x0, [x25]
    2914:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2918:	ldr	w19, [x0]
    291c:	ldr	x0, [x25]
    2920:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2924:	ldr	w8, [x0]
    2928:	cmp	w19, #0x2
    292c:	b.ne	3840 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1020>  // b.any
    2930:	cmp	w8, #0x3
    2934:	b.eq	3958 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1138>  // b.none
    2938:	cmp	w8, #0x2
    293c:	b.ne	3d6c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x154c>  // b.any
    2940:	ldp	x8, x9, [x0, #8]
    2944:	b	397c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x115c>
    2948:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    294c:	add	x1, x1, #0x0
    2950:	mov	x0, x21
    2954:	mov	x2, x22
    2958:	bl	0 <bcmp>
    295c:	cbnz	w0, 2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    2960:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2964:	add	x8, x8, #0x0
    2968:	mov	w9, #0x103                 	// #259
    296c:	stp	x8, xzr, [sp, #168]
    2970:	strh	w9, [sp, #184]
    2974:	ldr	x0, [x25]
    2978:	add	x2, sp, #0xa8
    297c:	mov	w1, #0x9                   	// #9
    2980:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2984:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2988:	ldr	x0, [x25]
    298c:	ldr	x8, [x0]
    2990:	ldr	x8, [x8, #56]
    2994:	blr	x8
    2998:	ldr	x8, [x0]
    299c:	ldr	x8, [x8, #600]
    29a0:	blr	x8
    29a4:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    29a8:	ldr	w8, [x21]
    29ac:	ldrb	w9, [x21, #4]
    29b0:	mov	w10, #0x612e                	// #24878
    29b4:	movk	w10, #0x6372, lsl #16
    29b8:	mov	w11, #0x68                  	// #104
    29bc:	eor	w8, w8, w10
    29c0:	eor	w9, w9, w11
    29c4:	orr	w8, w8, w9
    29c8:	cbz	w8, 2cdc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x4bc>
    29cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    29d0:	add	x1, x1, #0x0
    29d4:	mov	x0, x21
    29d8:	mov	x2, x22
    29dc:	bl	0 <bcmp>
    29e0:	cbz	w0, 2c98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x478>
    29e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    29e8:	add	x1, x1, #0x0
    29ec:	mov	x0, x21
    29f0:	mov	x2, x22
    29f4:	bl	0 <bcmp>
    29f8:	cbnz	w0, 2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    29fc:	ldr	x0, [x25]
    2a00:	ldr	x8, [x0]
    2a04:	ldr	x8, [x8, #40]
    2a08:	blr	x8
    2a0c:	ldr	w8, [x0, #16]
    2a10:	cbz	w8, 3dd8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15b8>
    2a14:	ldr	x8, [x0, #8]
    2a18:	ldr	w8, [x8]
    2a1c:	cmp	w8, #0x9
    2a20:	b.ne	36b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe94>  // b.any
    2a24:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2a28:	add	x8, x8, #0x0
    2a2c:	b	32e0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xac0>
    2a30:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2a34:	add	x1, x1, #0x0
    2a38:	mov	x0, x21
    2a3c:	mov	x2, x22
    2a40:	bl	0 <bcmp>
    2a44:	cbnz	w0, 2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    2a48:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2a4c:	add	x8, x8, #0x0
    2a50:	mov	w9, #0x103                 	// #259
    2a54:	stp	x8, xzr, [sp, #168]
    2a58:	strh	w9, [sp, #184]
    2a5c:	ldr	x0, [x25]
    2a60:	add	x2, sp, #0xa8
    2a64:	mov	w1, #0x9                   	// #9
    2a68:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2a6c:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2a70:	ldr	x0, [x25]
    2a74:	ldr	x8, [x0]
    2a78:	ldr	x8, [x8, #56]
    2a7c:	blr	x8
    2a80:	ldr	x8, [x0]
    2a84:	ldr	x8, [x8, #920]
    2a88:	blr	x8
    2a8c:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2a90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2a94:	add	x1, x1, #0x0
    2a98:	mov	x0, x21
    2a9c:	mov	x2, x22
    2aa0:	bl	0 <bcmp>
    2aa4:	cbz	w0, 2c98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x478>
    2aa8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2aac:	add	x1, x1, #0x0
    2ab0:	mov	x0, x21
    2ab4:	mov	x2, x22
    2ab8:	bl	0 <bcmp>
    2abc:	cbnz	w0, 2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    2ac0:	ldr	x20, [x25]
    2ac4:	mov	x0, x20
    2ac8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2acc:	ldr	w8, [x0]
    2ad0:	cmp	w8, #0x2
    2ad4:	b.ne	357c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd5c>  // b.any
    2ad8:	mov	x0, x20
    2adc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2ae0:	ldr	w8, [x0]
    2ae4:	cmp	w8, #0x3
    2ae8:	b.eq	3758 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf38>  // b.none
    2aec:	cmp	w8, #0x2
    2af0:	b.ne	3d6c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x154c>  // b.any
    2af4:	ldp	x8, x9, [x0, #8]
    2af8:	b	377c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf5c>
    2afc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2b00:	add	x1, x1, #0x0
    2b04:	mov	x0, x21
    2b08:	mov	x2, x22
    2b0c:	bl	0 <bcmp>
    2b10:	cbnz	w0, 2c90 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x470>
    2b14:	stp	xzr, xzr, [x29, #-56]
    2b18:	ldr	x0, [x25]
    2b1c:	sub	x1, x29, #0x38
    2b20:	ldr	x8, [x0]
    2b24:	ldr	x8, [x8, #144]
    2b28:	blr	x8
    2b2c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2b30:	add	x8, x8, #0x0
    2b34:	mov	w21, #0x103                 	// #259
    2b38:	stp	x8, xzr, [sp, #168]
    2b3c:	strh	w21, [sp, #184]
    2b40:	ldr	x8, [x25]
    2b44:	and	w1, w0, #0x1
    2b48:	add	x3, sp, #0xa8
    2b4c:	mov	x2, x20
    2b50:	mov	x0, x8
    2b54:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
    2b58:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2b5c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2b60:	add	x8, x8, #0x0
    2b64:	stp	x8, xzr, [x29, #-32]
    2b68:	sturh	w21, [x29, #-16]
    2b6c:	ldr	x0, [x25]
    2b70:	sub	x2, x29, #0x20
    2b74:	mov	w1, #0x9                   	// #9
    2b78:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2b7c:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2b80:	ldr	x0, [x19, #8]
    2b84:	ldr	x8, [x0]
    2b88:	ldr	x8, [x8, #48]
    2b8c:	blr	x8
    2b90:	mov	w8, #0x105                 	// #261
    2b94:	sub	x9, x29, #0x38
    2b98:	add	x1, sp, #0xa8
    2b9c:	strh	w8, [sp, #184]
    2ba0:	stp	x9, xzr, [sp, #168]
    2ba4:	add	x21, sp, #0xa8
    2ba8:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    2bac:	ldr	x8, [x19, #8]
    2bb0:	mov	x20, x0
    2bb4:	ldr	x9, [x8]
    2bb8:	mov	x0, x8
    2bbc:	ldr	x9, [x9, #48]
    2bc0:	blr	x9
    2bc4:	mov	x2, x0
    2bc8:	mov	x0, x20
    2bcc:	mov	w1, wzr
    2bd0:	mov	x3, xzr
    2bd4:	bl	0 <_ZN4llvm15MCSymbolRefExpr6createEPKNS_8MCSymbolENS0_11VariantKindERNS_9MCContextENS_5SMLocE>
    2bd8:	ldr	x8, [x19, #8]
    2bdc:	mov	x20, x0
    2be0:	ldr	x9, [x8]
    2be4:	mov	x0, x8
    2be8:	ldr	x9, [x9, #48]
    2bec:	blr	x9
    2bf0:	mov	x2, x0
    2bf4:	mov	w1, #0x8                   	// #8
    2bf8:	mov	x0, x20
    2bfc:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    2c00:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    2c04:	ldr	d0, [x10]
    2c08:	add	x8, x0, #0x8
    2c0c:	mov	w9, #0x11cc                	// #4556
    2c10:	cmp	x0, #0x0
    2c14:	add	x21, x21, #0x20
    2c18:	stp	xzr, xzr, [sp, #168]
    2c1c:	str	w9, [sp, #168]
    2c20:	csel	x8, xzr, x8, eq  // eq = none
    2c24:	mov	w9, #0x4                   	// #4
    2c28:	str	x21, [sp, #184]
    2c2c:	stp	x9, x8, [sp, #200]
    2c30:	str	d0, [sp, #192]
    2c34:	ldr	x0, [x19, #8]
    2c38:	ldr	x8, [x0]
    2c3c:	ldr	x8, [x8, #56]
    2c40:	blr	x8
    2c44:	mov	x20, x0
    2c48:	mov	x0, x19
    2c4c:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    2c50:	ldr	x8, [x20]
    2c54:	mov	x2, x0
    2c58:	add	x1, sp, #0xa8
    2c5c:	mov	x0, x20
    2c60:	ldr	x8, [x8, #1080]
    2c64:	blr	x8
    2c68:	ldr	x0, [sp, #184]
    2c6c:	cmp	x0, x21
    2c70:	b.ne	35e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdc8>  // b.any
    2c74:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2c78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2c7c:	add	x1, x1, #0x0
    2c80:	mov	x0, x21
    2c84:	mov	x2, x22
    2c88:	bl	0 <bcmp>
    2c8c:	cbz	w0, 31c8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x9a8>
    2c90:	mov	w0, #0x1                   	// #1
    2c94:	b	392c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x110c>
    2c98:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2c9c:	add	x8, x8, #0x0
    2ca0:	mov	w9, #0x103                 	// #259
    2ca4:	stp	x8, xzr, [sp, #168]
    2ca8:	strh	w9, [sp, #184]
    2cac:	ldr	x0, [x25]
    2cb0:	add	x2, sp, #0xa8
    2cb4:	mov	w1, #0x9                   	// #9
    2cb8:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2cbc:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2cc0:	ldr	x0, [x25]
    2cc4:	ldr	x8, [x0]
    2cc8:	ldr	x8, [x8, #56]
    2ccc:	blr	x8
    2cd0:	ldr	x0, [x0, #16]
    2cd4:	bl	0 <_ZN4llvm21AArch64TargetStreamer23emitCurrentConstantPoolEv>
    2cd8:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2cdc:	ldr	x0, [x25]
    2ce0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    2ce4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    2ce8:	stp	xzr, xzr, [sp, #128]
    2cec:	ldr	x8, [x25]
    2cf0:	mov	x20, x0
    2cf4:	ldr	x9, [x8]
    2cf8:	mov	x0, x8
    2cfc:	ldr	x9, [x9, #152]
    2d00:	blr	x9
    2d04:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    2d08:	add	x21, x21, #0x0
    2d0c:	stp	x0, x1, [x29, #-32]
    2d10:	sub	x0, x29, #0x20
    2d14:	mov	w2, #0x6                   	// #6
    2d18:	mov	x1, x21
    2d1c:	mov	x3, xzr
    2d20:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
    2d24:	ldp	x9, x8, [x29, #-32]
    2d28:	mov	w2, #0x6                   	// #6
    2d2c:	mov	x3, #0xffffffffffffffff    	// #-1
    2d30:	mov	x1, x21
    2d34:	cmp	x0, x8
    2d38:	csel	x10, x0, x8, cc  // cc = lo, ul, last
    2d3c:	add	x9, x9, x10
    2d40:	sub	x22, x8, x10
    2d44:	add	x0, sp, #0xa8
    2d48:	stp	x9, x22, [sp, #168]
    2d4c:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
    2d50:	ldr	x8, [sp, #176]
    2d54:	add	x9, x0, #0x1
    2d58:	cmp	x9, x8
    2d5c:	csinc	x9, x8, x0, cs  // cs = hs, nlast
    2d60:	sub	x9, x22, x9
    2d64:	subs	x8, x8, x9
    2d68:	b.cc	3d98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1578>  // b.lo, b.ul, b.last
    2d6c:	ldr	x9, [sp, #168]
    2d70:	add	x0, sp, #0xa8
    2d74:	sub	x1, x29, #0x38
    2d78:	mov	w2, #0x1                   	// #1
    2d7c:	stp	x9, x8, [sp, #168]
    2d80:	mov	w8, #0x2b                  	// #43
    2d84:	mov	x3, xzr
    2d88:	sturb	w8, [x29, #-56]
    2d8c:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
    2d90:	cmn	x0, #0x1
    2d94:	b.eq	32c0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xaa0>  // b.none
    2d98:	mov	x8, x0
    2d9c:	ldp	x0, x10, [sp, #168]
    2da0:	cmp	x10, x8
    2da4:	csel	x1, x10, x8, cc  // cc = lo, ul, last
    2da8:	csinc	x8, x10, x8, ls  // ls = plast
    2dac:	add	x9, x0, x8
    2db0:	sub	x8, x10, x8
    2db4:	stp	x9, x8, [sp, #128]
    2db8:	bl	0 <_ZN4llvm7AArch649parseArchENS_9StringRefE>
    2dbc:	cbz	w0, 32d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xab8>
    2dc0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2dc4:	add	x8, x8, #0x0
    2dc8:	mov	w9, #0x103                 	// #259
    2dcc:	stp	x8, xzr, [sp, #168]
    2dd0:	strh	w9, [sp, #184]
    2dd4:	mov	w21, w0
    2dd8:	ldr	x0, [x25]
    2ddc:	add	x2, sp, #0xa8
    2de0:	mov	w1, #0x9                   	// #9
    2de4:	add	x20, sp, #0xa8
    2de8:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    2dec:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    2df0:	sub	x1, x29, #0x20
    2df4:	mov	w0, w21
    2df8:	stp	xzr, xzr, [x29, #-32]
    2dfc:	stur	xzr, [x29, #-16]
    2e00:	bl	0 <_ZN4llvm7AArch6415getArchFeaturesENS0_8ArchKindERSt6vectorINS_9StringRefESaIS3_EE>
    2e04:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    2e08:	add	x0, x0, #0x0
    2e0c:	mov	w1, #0x7                   	// #7
    2e10:	mov	w2, w21
    2e14:	bl	0 <_ZN4llvm7AArch6420getDefaultExtensionsENS_9StringRefENS0_8ArchKindE>
    2e18:	sub	x1, x29, #0x20
    2e1c:	bl	0 <_ZN4llvm7AArch6420getExtensionFeaturesEjRSt6vectorINS_9StringRefESaIS2_EE>
    2e20:	mov	x0, x19
    2e24:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    2e28:	ldp	x1, x2, [x29, #-32]
    2e2c:	str	x0, [sp, #56]
    2e30:	sub	x0, x29, #0x38
    2e34:	stp	xzr, xzr, [x29, #-48]
    2e38:	stur	xzr, [x29, #-56]
    2e3c:	bl	0 <LLVMInitializeAArch64AsmParser>
    2e40:	ldp	x22, x23, [x29, #-56]
    2e44:	add	x20, x20, #0x10
    2e48:	stp	x20, xzr, [sp, #168]
    2e4c:	strb	wzr, [sp, #184]
    2e50:	cmp	x22, x23
    2e54:	b.eq	2ed8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x6b8>  // b.none
    2e58:	sub	x8, x23, x22
    2e5c:	ldr	x9, [x22, #8]
    2e60:	sub	x10, x8, #0x20
    2e64:	lsr	x10, x10, #5
    2e68:	add	x10, x10, #0x1
    2e6c:	mul	x9, x9, x10
    2e70:	add	x8, x9, x8, asr #5
    2e74:	sub	x1, x8, #0x1
    2e78:	add	x0, sp, #0xa8
    2e7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
    2e80:	ldp	x1, x2, [x22]
    2e84:	add	x0, sp, #0xa8
    2e88:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2e8c:	add	x24, x22, #0x20
    2e90:	cmp	x24, x23
    2e94:	b.eq	2ed8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x6b8>  // b.none
    2e98:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    2e9c:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    2ea0:	add	x22, x22, #0x0
    2ea4:	ldr	x8, [sp, #176]
    2ea8:	cmp	x8, x25
    2eac:	b.eq	3d8c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x156c>  // b.none
    2eb0:	add	x0, sp, #0xa8
    2eb4:	mov	w2, #0x1                   	// #1
    2eb8:	mov	x1, x22
    2ebc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2ec0:	ldp	x1, x2, [x24]
    2ec4:	add	x0, sp, #0xa8
    2ec8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    2ecc:	add	x24, x24, #0x20
    2ed0:	cmp	x24, x23
    2ed4:	b.ne	2ea4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x684>  // b.any
    2ed8:	ldp	x3, x4, [sp, #168]
    2edc:	ldr	x0, [sp, #56]
    2ee0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    2ee4:	add	x1, x1, #0x0
    2ee8:	mov	w2, #0x7                   	// #7
    2eec:	bl	0 <_ZN4llvm15MCSubtargetInfo18setDefaultFeaturesENS_9StringRefES1_>
    2ef0:	ldr	x0, [sp, #168]
    2ef4:	cmp	x0, x20
    2ef8:	b.eq	2f00 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x6e0>  // b.none
    2efc:	bl	0 <_ZdlPv>
    2f00:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    2f04:	ldr	d0, [x8]
    2f08:	ldr	x8, [sp, #136]
    2f0c:	add	x9, sp, #0xa8
    2f10:	add	x9, x9, #0x10
    2f14:	str	x9, [sp, #168]
    2f18:	str	d0, [sp, #176]
    2f1c:	cbz	x8, 2f38 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x718>
    2f20:	add	x0, sp, #0x80
    2f24:	add	x1, sp, #0xa8
    2f28:	mov	w2, #0x2b                  	// #43
    2f2c:	mov	w3, #0xffffffff            	// #-1
    2f30:	mov	w4, #0x1                   	// #1
    2f34:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
    2f38:	add	x1, sp, #0xa8
    2f3c:	mov	w0, w21
    2f40:	add	x20, sp, #0xa8
    2f44:	bl	119c4 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>
    2f48:	ldr	w8, [sp, #176]
    2f4c:	ldr	x21, [sp, #168]
    2f50:	cbz	w8, 36f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xed4>
    2f54:	ldr	x9, [sp, #56]
    2f58:	add	x25, x21, x8, lsl #4
    2f5c:	add	x20, x19, #0x18
    2f60:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    2f64:	ldp	x10, x11, [x9, #184]
    2f68:	ldr	x9, [x9, #200]
    2f6c:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    2f70:	add	x19, x19, #0x0
    2f74:	mvn	x8, x10
    2f78:	stp	x8, x9, [sp, #24]
    2f7c:	mvn	x8, x11
    2f80:	str	x8, [sp, #16]
    2f84:	mvn	x8, x9
    2f88:	add	x27, x27, #0x0
    2f8c:	stp	x11, x10, [sp, #40]
    2f90:	str	x8, [sp, #8]
    2f94:	b	3014 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7f4>
    2f98:	add	x9, x27, x26
    2f9c:	ldr	x8, [x9, #8]
    2fa0:	cbz	x8, 30b8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x898>
    2fa4:	ldp	x13, x11, [sp, #24]
    2fa8:	ldp	x12, x14, [sp, #8]
    2fac:	cmp	w28, #0x0
    2fb0:	ldp	x10, x9, [x9, #16]
    2fb4:	add	x1, sp, #0x90
    2fb8:	csel	x11, x12, x11, ne  // ne = any
    2fbc:	ldp	x12, x0, [sp, #48]
    2fc0:	and	x9, x9, x11
    2fc4:	str	x9, [sp, #160]
    2fc8:	csel	x12, x13, x12, ne  // ne = any
    2fcc:	ldr	x13, [sp, #40]
    2fd0:	and	x8, x8, x12
    2fd4:	csel	x13, x14, x13, ne  // ne = any
    2fd8:	and	x10, x10, x13
    2fdc:	stp	x8, x10, [sp, #144]
    2fe0:	add	x8, sp, #0x40
    2fe4:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    2fe8:	ldp	x1, x2, [sp, #64]
    2fec:	ldr	x3, [sp, #80]
    2ff0:	add	x0, sp, #0x58
    2ff4:	bl	208 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    2ff8:	ldr	x8, [sp, #104]
    2ffc:	ldur	q0, [sp, #88]
    3000:	str	x8, [x20, #16]
    3004:	str	q0, [x20]
    3008:	add	x21, x21, #0x10
    300c:	cmp	x21, x25
    3010:	b.eq	36ec <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xecc>  // b.none
    3014:	ldr	q0, [x21]
    3018:	add	x0, sp, #0x70
    301c:	mov	w2, #0x2                   	// #2
    3020:	mov	x1, x19
    3024:	str	q0, [sp, #112]
    3028:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    302c:	tbz	w0, #0, 3058 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x838>
    3030:	ldp	x9, x8, [sp, #112]
    3034:	mov	w10, #0x2                   	// #2
    3038:	mov	w28, wzr
    303c:	cmp	x8, #0x2
    3040:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    3044:	add	x22, x9, x10
    3048:	sub	x23, x8, x10
    304c:	stp	x22, x23, [sp, #112]
    3050:	cbnz	x23, 3064 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x844>
    3054:	b	3008 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7e8>
    3058:	ldp	x22, x23, [sp, #112]
    305c:	mov	w28, #0x1                   	// #1
    3060:	cbz	x23, 3008 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7e8>
    3064:	mov	x26, xzr
    3068:	b	308c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x86c>
    306c:	mov	x0, x24
    3070:	mov	x1, x22
    3074:	mov	x2, x23
    3078:	bl	0 <bcmp>
    307c:	cbz	w0, 2f98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x778>
    3080:	add	x26, x26, #0x20
    3084:	cmp	x26, #0x340
    3088:	b.eq	3008 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x7e8>  // b.none
    308c:	ldr	x24, [x27, x26]
    3090:	cbz	x24, 30a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x888>
    3094:	mov	x0, x24
    3098:	bl	0 <strlen>
    309c:	cmp	x0, x23
    30a0:	b.ne	3080 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x860>  // b.any
    30a4:	b	306c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x84c>
    30a8:	mov	x0, xzr
    30ac:	cmp	x0, x23
    30b0:	b.ne	3080 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x860>  // b.any
    30b4:	b	306c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x84c>
    30b8:	ldr	x10, [x9, #16]
    30bc:	cbnz	x10, 2fa4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x784>
    30c0:	add	x10, x27, x26
    30c4:	ldr	x10, [x10, #24]
    30c8:	cbnz	x10, 2fa4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x784>
    30cc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    30d0:	mov	w8, #0x503                 	// #1283
    30d4:	add	x9, x9, #0x0
    30d8:	add	x10, sp, #0x70
    30dc:	add	x0, sp, #0x90
    30e0:	mov	w1, #0x1                   	// #1
    30e4:	strh	w8, [sp, #160]
    30e8:	stp	x9, x10, [sp, #144]
    30ec:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
    30f0:	ldr	x0, [x25]
    30f4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    30f8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    30fc:	stp	xzr, xzr, [sp, #88]
    3100:	ldr	x8, [x25]
    3104:	mov	x21, x0
    3108:	ldr	x9, [x8]
    310c:	mov	x0, x8
    3110:	ldr	x9, [x9, #152]
    3114:	blr	x9
    3118:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    311c:	add	x20, x20, #0x0
    3120:	stp	x0, x1, [x29, #-32]
    3124:	sub	x0, x29, #0x20
    3128:	mov	w2, #0x6                   	// #6
    312c:	mov	x1, x20
    3130:	mov	x3, xzr
    3134:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
    3138:	ldp	x9, x8, [x29, #-32]
    313c:	mov	w2, #0x6                   	// #6
    3140:	mov	x3, #0xffffffffffffffff    	// #-1
    3144:	mov	x1, x20
    3148:	cmp	x0, x8
    314c:	csel	x10, x0, x8, cc  // cc = lo, ul, last
    3150:	add	x9, x9, x10
    3154:	sub	x22, x8, x10
    3158:	add	x0, sp, #0xa8
    315c:	stp	x9, x22, [sp, #168]
    3160:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
    3164:	ldr	x8, [sp, #176]
    3168:	add	x9, x0, #0x1
    316c:	cmp	x9, x8
    3170:	csinc	x9, x8, x0, cs  // cs = hs, nlast
    3174:	sub	x9, x22, x9
    3178:	subs	x8, x8, x9
    317c:	b.cc	3d98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1578>  // b.lo, b.ul, b.last
    3180:	ldr	x9, [sp, #168]
    3184:	add	x0, sp, #0xa8
    3188:	sub	x1, x29, #0x38
    318c:	mov	w2, #0x1                   	// #1
    3190:	stp	x9, x8, [sp, #168]
    3194:	mov	w8, #0x2b                  	// #43
    3198:	mov	x3, xzr
    319c:	sturb	w8, [x29, #-56]
    31a0:	bl	0 <_ZNK4llvm9StringRef4findES0_m>
    31a4:	cmn	x0, #0x1
    31a8:	b.eq	32f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xad0>  // b.none
    31ac:	ldp	x23, x9, [sp, #168]
    31b0:	cmp	x9, x0
    31b4:	csinc	x10, x9, x0, ls  // ls = plast
    31b8:	csel	x22, x9, x0, cc  // cc = lo, ul, last
    31bc:	add	x8, x23, x10
    31c0:	sub	x20, x9, x10
    31c4:	b	32fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xadc>
    31c8:	ldr	x0, [x25]
    31cc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    31d0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    31d4:	ldr	x8, [x25]
    31d8:	mov	x20, x0
    31dc:	ldr	x9, [x8]
    31e0:	mov	x0, x8
    31e4:	ldr	x9, [x9, #152]
    31e8:	blr	x9
    31ec:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    31f0:	add	x21, x21, #0x0
    31f4:	stp	x0, x1, [x29, #-32]
    31f8:	sub	x0, x29, #0x20
    31fc:	mov	w2, #0x6                   	// #6
    3200:	mov	x1, x21
    3204:	mov	x3, xzr
    3208:	bl	0 <_ZNK4llvm9StringRef17find_first_not_ofES0_m>
    320c:	ldp	x9, x8, [x29, #-32]
    3210:	mov	w2, #0x6                   	// #6
    3214:	mov	x3, #0xffffffffffffffff    	// #-1
    3218:	mov	x1, x21
    321c:	cmp	x0, x8
    3220:	csel	x10, x0, x8, cc  // cc = lo, ul, last
    3224:	add	x9, x9, x10
    3228:	sub	x22, x8, x10
    322c:	add	x0, sp, #0xa8
    3230:	stp	x9, x22, [sp, #168]
    3234:	bl	0 <_ZNK4llvm9StringRef16find_last_not_ofES0_m>
    3238:	ldr	x8, [sp, #176]
    323c:	add	x9, x0, #0x1
    3240:	cmp	x9, x8
    3244:	csinc	x9, x8, x0, cs  // cs = hs, nlast
    3248:	sub	x9, x22, x9
    324c:	subs	x8, x8, x9
    3250:	b.cc	3d98 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1578>  // b.lo, b.ul, b.last
    3254:	ldr	x9, [sp, #168]
    3258:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    325c:	add	x10, x10, #0x0
    3260:	mov	w11, #0x103                 	// #259
    3264:	stp	x10, xzr, [sp, #168]
    3268:	stp	x9, x8, [sp, #144]
    326c:	strh	w11, [sp, #184]
    3270:	ldr	x0, [x25]
    3274:	add	x2, sp, #0xa8
    3278:	mov	w1, #0x9                   	// #9
    327c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3280:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    3284:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3288:	add	x1, x1, #0x0
    328c:	add	x0, sp, #0x90
    3290:	mov	w2, #0x2                   	// #2
    3294:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    3298:	tbz	w0, #0, 35f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdd0>
    329c:	ldp	x9, x8, [sp, #144]
    32a0:	mov	w10, #0x2                   	// #2
    32a4:	mov	x26, xzr
    32a8:	cmp	x8, #0x2
    32ac:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    32b0:	add	x9, x9, x10
    32b4:	sub	x8, x8, x10
    32b8:	stp	x9, x8, [sp, #144]
    32bc:	b	35f4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdd4>
    32c0:	ldp	x0, x1, [sp, #168]
    32c4:	mov	x8, xzr
    32c8:	mov	x9, xzr
    32cc:	stp	x9, x8, [sp, #128]
    32d0:	bl	0 <_ZN4llvm7AArch649parseArchENS_9StringRefE>
    32d4:	cbnz	w0, 2dc0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x5a0>
    32d8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    32dc:	add	x8, x8, #0x0
    32e0:	mov	w9, #0x103                 	// #259
    32e4:	stp	x8, xzr, [sp, #168]
    32e8:	strh	w9, [sp, #184]
    32ec:	b	3698 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe78>
    32f0:	ldp	x23, x22, [sp, #168]
    32f4:	mov	x20, xzr
    32f8:	mov	x8, xzr
    32fc:	stp	x8, x20, [sp, #88]
    3300:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3304:	add	x8, x8, #0x0
    3308:	mov	w9, #0x103                 	// #259
    330c:	stp	x8, xzr, [sp, #168]
    3310:	strh	w9, [sp, #184]
    3314:	ldr	x0, [x25]
    3318:	add	x2, sp, #0xa8
    331c:	mov	w1, #0x9                   	// #9
    3320:	add	x24, sp, #0xa8
    3324:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3328:	tbnz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    332c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3330:	ldr	d0, [x8]
    3334:	add	x8, x24, #0x10
    3338:	str	x8, [sp, #168]
    333c:	str	d0, [sp, #176]
    3340:	cbz	x20, 335c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xb3c>
    3344:	add	x0, sp, #0x58
    3348:	add	x1, sp, #0xa8
    334c:	mov	w2, #0x2b                  	// #43
    3350:	mov	w3, #0xffffffff            	// #-1
    3354:	mov	w4, #0x1                   	// #1
    3358:	bl	0 <_ZNK4llvm9StringRef5splitERNS_15SmallVectorImplIS0_EEcib>
    335c:	mov	x0, x19
    3360:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    3364:	mov	x1, x23
    3368:	mov	x2, x22
    336c:	bl	0 <LLVMInitializeAArch64AsmParser>
    3370:	tbz	w0, #0, 35a8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd88>
    3374:	mov	x0, x19
    3378:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    337c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3380:	add	x3, x3, #0x0
    3384:	mov	x1, x23
    3388:	mov	x2, x22
    338c:	mov	x4, xzr
    3390:	str	x0, [sp, #56]
    3394:	bl	0 <_ZN4llvm15MCSubtargetInfo18setDefaultFeaturesENS_9StringRefES1_>
    3398:	mov	x0, x23
    339c:	mov	x1, x22
    33a0:	bl	0 <_ZN4llvm7AArch6414getCPUArchKindENS_9StringRefE>
    33a4:	add	x1, sp, #0xa8
    33a8:	bl	119c4 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>
    33ac:	ldr	w8, [sp, #176]
    33b0:	cbz	w8, 35d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>
    33b4:	ldr	x9, [sp, #56]
    33b8:	ldr	x26, [sp, #168]
    33bc:	add	x12, x19, #0x18
    33c0:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    33c4:	ldp	x10, x11, [x9, #184]
    33c8:	ldr	x9, [x9, #200]
    33cc:	add	x28, x26, x8, lsl #4
    33d0:	add	x21, x21, w22, sxtw
    33d4:	mvn	x8, x10
    33d8:	stp	x8, x12, [sp, #16]
    33dc:	mvn	x8, x11
    33e0:	str	x8, [sp, #8]
    33e4:	mvn	x8, x9
    33e8:	add	x20, x20, #0x0
    33ec:	stp	x11, x10, [sp, #40]
    33f0:	str	x9, [sp, #32]
    33f4:	str	x8, [sp]
    33f8:	b	343c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc1c>
    33fc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3400:	add	x8, x8, #0x0
    3404:	stp	x8, xzr, [x29, #-32]
    3408:	mov	w8, #0x103                 	// #259
    340c:	sturh	w8, [x29, #-16]
    3410:	ldr	x0, [x25]
    3414:	sub	x2, x29, #0x20
    3418:	mov	x1, x21
    341c:	mov	x3, xzr
    3420:	mov	x4, xzr
    3424:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    3428:	ldrsw	x8, [sp, #72]
    342c:	add	x26, x26, #0x10
    3430:	cmp	x26, x28
    3434:	add	x21, x21, x8
    3438:	b.eq	35d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>  // b.none
    343c:	ldr	q0, [x26]
    3440:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3444:	add	x0, sp, #0x40
    3448:	mov	w2, #0x2                   	// #2
    344c:	add	x1, x1, #0x0
    3450:	str	q0, [sp, #64]
    3454:	bl	0 <_ZNK4llvm9StringRef16startswith_lowerES0_>
    3458:	tbz	w0, #0, 3488 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc68>
    345c:	ldp	x9, x8, [sp, #64]
    3460:	mov	w10, #0x2                   	// #2
    3464:	mov	w27, wzr
    3468:	cmp	x8, #0x2
    346c:	csel	x10, x8, x10, cc  // cc = lo, ul, last
    3470:	add	x22, x9, x10
    3474:	sub	x23, x8, x10
    3478:	stp	x22, x23, [sp, #64]
    347c:	add	x21, x21, #0x1
    3480:	cbnz	x23, 3498 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc78>
    3484:	b	33fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xbdc>
    3488:	ldp	x22, x23, [sp, #64]
    348c:	mov	w27, #0x1                   	// #1
    3490:	add	x21, x21, #0x1
    3494:	cbz	x23, 33fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xbdc>
    3498:	mov	x19, xzr
    349c:	b	34c0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xca0>
    34a0:	mov	x0, x24
    34a4:	mov	x1, x22
    34a8:	mov	x2, x23
    34ac:	bl	0 <bcmp>
    34b0:	cbz	w0, 34ec <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xccc>
    34b4:	add	x19, x19, #0x20
    34b8:	cmp	x19, #0x340
    34bc:	b.eq	33fc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xbdc>  // b.none
    34c0:	ldr	x24, [x20, x19]
    34c4:	cbz	x24, 34dc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcbc>
    34c8:	mov	x0, x24
    34cc:	bl	0 <strlen>
    34d0:	cmp	x0, x23
    34d4:	b.ne	34b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc94>  // b.any
    34d8:	b	34a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc80>
    34dc:	mov	x0, xzr
    34e0:	cmp	x0, x23
    34e4:	b.ne	34b4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc94>  // b.any
    34e8:	b	34a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc80>
    34ec:	add	x9, x20, x19
    34f0:	ldr	x8, [x9, #8]
    34f4:	cbnz	x8, 350c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcec>
    34f8:	ldr	x10, [x9, #16]
    34fc:	cbnz	x10, 350c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xcec>
    3500:	add	x10, x20, x19
    3504:	ldr	x10, [x10, #24]
    3508:	cbz	x10, 3df8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15d8>
    350c:	ldr	x11, [sp, #32]
    3510:	ldp	x12, x14, [sp]
    3514:	cmp	w27, #0x0
    3518:	ldr	x13, [sp, #16]
    351c:	ldp	x10, x9, [x9, #16]
    3520:	csel	x11, x12, x11, ne  // ne = any
    3524:	ldp	x12, x0, [sp, #48]
    3528:	sub	x1, x29, #0x20
    352c:	and	x9, x9, x11
    3530:	stur	x9, [x29, #-16]
    3534:	csel	x12, x13, x12, ne  // ne = any
    3538:	ldr	x13, [sp, #40]
    353c:	and	x8, x8, x12
    3540:	csel	x13, x14, x13, ne  // ne = any
    3544:	and	x10, x10, x13
    3548:	stp	x8, x10, [x29, #-32]
    354c:	add	x8, sp, #0x90
    3550:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    3554:	ldp	x1, x2, [sp, #144]
    3558:	ldr	x3, [sp, #160]
    355c:	sub	x0, x29, #0x38
    3560:	bl	208 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    3564:	ldur	x8, [x29, #-40]
    3568:	ldur	q0, [x29, #-56]
    356c:	ldr	x9, [sp, #24]
    3570:	str	x8, [x9, #16]
    3574:	str	q0, [x9]
    3578:	b	3428 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xc08>
    357c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3580:	add	x8, x8, #0x0
    3584:	mov	w9, #0x103                 	// #259
    3588:	stp	x8, xzr, [sp, #168]
    358c:	strh	w9, [sp, #184]
    3590:	ldr	x0, [x25]
    3594:	add	x1, sp, #0xa8
    3598:	mov	x2, xzr
    359c:	mov	x3, xzr
    35a0:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    35a4:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    35a8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    35ac:	add	x8, x8, #0x0
    35b0:	mov	w9, #0x103                 	// #259
    35b4:	stp	x8, xzr, [x29, #-32]
    35b8:	sturh	w9, [x29, #-16]
    35bc:	ldr	x0, [x25]
    35c0:	sub	x2, x29, #0x20
    35c4:	mov	x1, x21
    35c8:	mov	x3, xzr
    35cc:	mov	x4, xzr
    35d0:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    35d4:	ldr	x0, [sp, #168]
    35d8:	add	x8, sp, #0xa8
    35dc:	add	x8, x8, #0x10
    35e0:	cmp	x0, x8
    35e4:	b.eq	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>  // b.none
    35e8:	bl	0 <free>
    35ec:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    35f0:	mov	x26, #0xffffffffffffffff    	// #-1
    35f4:	mov	x0, x19
    35f8:	bl	0 <_ZN4llvm17MCTargetAsmParser7copySTIEv>
    35fc:	ldr	x22, [sp, #152]
    3600:	cbz	x22, 3680 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe60>
    3604:	ldr	x8, [x0, #184]
    3608:	ldr	x23, [sp, #144]
    360c:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    3610:	mov	x21, x0
    3614:	str	x8, [sp, #56]
    3618:	ldr	x8, [x0, #192]
    361c:	mov	x27, xzr
    3620:	add	x28, x28, #0x0
    3624:	str	x8, [sp, #48]
    3628:	ldr	x8, [x0, #200]
    362c:	str	x8, [sp, #40]
    3630:	b	3654 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe34>
    3634:	mov	x0, x24
    3638:	mov	x1, x23
    363c:	mov	x2, x22
    3640:	bl	0 <bcmp>
    3644:	cbz	w0, 38ac <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x108c>
    3648:	add	x27, x27, #0x20
    364c:	cmp	x27, #0x340
    3650:	b.eq	3680 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe60>  // b.none
    3654:	ldr	x24, [x28, x27]
    3658:	cbz	x24, 3670 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe50>
    365c:	mov	x0, x24
    3660:	bl	0 <strlen>
    3664:	cmp	x0, x22
    3668:	b.ne	3648 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe28>  // b.any
    366c:	b	3634 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe14>
    3670:	mov	x0, xzr
    3674:	cmp	x0, x22
    3678:	b.ne	3648 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe28>  // b.any
    367c:	b	3634 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe14>
    3680:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3684:	mov	w8, #0x503                 	// #1283
    3688:	add	x9, x9, #0x0
    368c:	add	x10, sp, #0x90
    3690:	strh	w8, [sp, #184]
    3694:	stp	x9, x10, [sp, #168]
    3698:	ldr	x0, [x25]
    369c:	add	x2, sp, #0xa8
    36a0:	mov	x1, x20
    36a4:	mov	x3, xzr
    36a8:	mov	x4, xzr
    36ac:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    36b0:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    36b4:	stur	x19, [x29, #-32]
    36b8:	ldr	x0, [x19, #8]
    36bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    36c0:	add	x1, x1, #0x0
    36c4:	sub	x2, x29, #0x20
    36c8:	mov	w3, #0x1                   	// #1
    36cc:	bl	0 <_ZN4llvm11MCAsmParser9parseManyENS_12function_refIFbvEEEb>
    36d0:	tbz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    36d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    36d8:	add	x8, x8, #0x0
    36dc:	mov	w9, #0x103                 	// #259
    36e0:	stp	x8, xzr, [sp, #168]
    36e4:	strh	w9, [sp, #184]
    36e8:	b	3830 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1010>
    36ec:	ldr	x21, [sp, #168]
    36f0:	add	x20, sp, #0xa8
    36f4:	add	x8, x20, #0x10
    36f8:	cmp	x21, x8
    36fc:	b.eq	3708 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xee8>  // b.none
    3700:	mov	x0, x21
    3704:	bl	0 <free>
    3708:	ldp	x19, x20, [x29, #-56]
    370c:	cmp	x19, x20
    3710:	b.ne	3724 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf04>  // b.any
    3714:	b	373c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf1c>
    3718:	add	x19, x19, #0x10
    371c:	cmp	x19, x20
    3720:	b.eq	3738 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf18>  // b.none
    3724:	ldr	x0, [x19], #16
    3728:	cmp	x0, x19
    372c:	b.eq	3718 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xef8>  // b.none
    3730:	bl	0 <_ZdlPv>
    3734:	b	3718 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xef8>
    3738:	ldur	x19, [x29, #-56]
    373c:	cbz	x19, 3748 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xf28>
    3740:	mov	x0, x19
    3744:	bl	0 <_ZdlPv>
    3748:	ldur	x0, [x29, #-32]
    374c:	cbz	x0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    3750:	bl	0 <_ZdlPv>
    3754:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    3758:	ldp	x8, x9, [x0, #8]
    375c:	subs	x10, x9, #0x1
    3760:	cset	w11, cs  // cs = hs, nlast
    3764:	cinc	x8, x8, cs  // cs = hs, nlast
    3768:	cmp	x10, x11
    376c:	csel	x10, x10, x11, hi  // hi = pmore
    3770:	cmp	x9, x10
    3774:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    3778:	sub	x9, x9, x11
    377c:	stp	x8, x9, [x29, #-32]
    3780:	add	x8, sp, #0xa8
    3784:	sub	x0, x29, #0x20
    3788:	add	x21, x19, #0xc0
    378c:	add	x22, sp, #0xa8
    3790:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    3794:	ldp	x1, x2, [sp, #168]
    3798:	mov	x0, x21
    379c:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    37a0:	cmn	w0, #0x1
    37a4:	b.eq	37d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfb4>  // b.none
    37a8:	ldr	w9, [x19, #200]
    37ac:	sxtw	x8, w0
    37b0:	cmp	x8, x9
    37b4:	b.eq	37d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfb4>  // b.none
    37b8:	ldr	x9, [x21]
    37bc:	mov	x0, x21
    37c0:	ldr	x19, [x9, x8, lsl #3]
    37c4:	mov	x1, x19
    37c8:	bl	0 <_ZN4llvm13StringMapImpl9RemoveKeyEPNS_18StringMapEntryBaseE>
    37cc:	mov	x0, x19
    37d0:	bl	0 <free>
    37d4:	ldr	x0, [sp, #168]
    37d8:	add	x8, x22, #0x10
    37dc:	cmp	x0, x8
    37e0:	b.eq	37e8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xfc8>  // b.none
    37e4:	bl	0 <_ZdlPv>
    37e8:	ldr	x8, [x20]
    37ec:	mov	x0, x20
    37f0:	ldr	x8, [x8, #136]
    37f4:	blr	x8
    37f8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    37fc:	add	x8, x8, #0x0
    3800:	mov	w19, #0x103                 	// #259
    3804:	stp	x8, xzr, [sp, #168]
    3808:	strh	w19, [sp, #184]
    380c:	ldr	x0, [x25]
    3810:	add	x2, sp, #0xa8
    3814:	mov	w1, #0x9                   	// #9
    3818:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    381c:	tbz	w0, #0, 3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    3820:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3824:	add	x8, x8, #0x0
    3828:	stp	x8, xzr, [sp, #168]
    382c:	strh	w19, [sp, #184]
    3830:	ldr	x0, [x25]
    3834:	add	x1, sp, #0xa8
    3838:	bl	0 <_ZN4llvm11MCAsmParser14addErrorSuffixERKNS_5TwineE>
    383c:	b	3928 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1108>
    3840:	cmp	w8, #0x4
    3844:	b.ne	394c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x112c>  // b.any
    3848:	ldr	x0, [x25]
    384c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    3850:	ldr	w8, [x0]
    3854:	cmp	w8, #0x4
    3858:	b.ne	3e1c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x15fc>  // b.any
    385c:	ldr	w20, [x0, #32]
    3860:	add	x19, x0, #0x18
    3864:	cmp	w20, #0x40
    3868:	b.ls	3884 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1064>  // b.plast
    386c:	mov	x0, x19
    3870:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    3874:	sub	w8, w20, w0
    3878:	cmp	w8, #0x41
    387c:	b.cs	3e3c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x161c>  // b.hs, b.nlast
    3880:	ldr	x19, [x19]
    3884:	ldr	x19, [x19]
    3888:	mov	w8, #0xffffffff            	// #-1
    388c:	cmp	x19, x8
    3890:	b.gt	39f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11d0>
    3894:	sub	w8, w19, #0x1
    3898:	cmp	w8, #0x8
    389c:	b.cc	39f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x11d0>  // b.lo, b.ul, b.last
    38a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    38a4:	add	x8, x8, #0x0
    38a8:	b	3584 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd64>
    38ac:	add	x9, x28, x27
    38b0:	ldr	x8, [x9, #8]
    38b4:	cbnz	x8, 38cc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x10ac>
    38b8:	ldr	x10, [x9, #16]
    38bc:	cbnz	x10, 38cc <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x10ac>
    38c0:	add	x10, x28, x27
    38c4:	ldr	x10, [x10, #24]
    38c8:	cbz	x10, 3b94 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1374>
    38cc:	ldp	x11, x10, [sp, #40]
    38d0:	ldr	x13, [sp, #56]
    38d4:	ldp	x12, x9, [x9, #16]
    38d8:	add	x1, sp, #0xa8
    38dc:	eor	x10, x10, x26
    38e0:	eor	x13, x13, x26
    38e4:	eor	x11, x11, x26
    38e8:	and	x8, x8, x13
    38ec:	and	x10, x12, x10
    38f0:	and	x9, x9, x11
    38f4:	stp	x8, x10, [sp, #168]
    38f8:	sub	x8, x29, #0x38
    38fc:	mov	x0, x21
    3900:	str	x9, [sp, #184]
    3904:	bl	0 <_ZN4llvm15MCSubtargetInfo13ToggleFeatureERKNS_13FeatureBitsetE>
    3908:	ldp	x1, x2, [x29, #-56]
    390c:	ldur	x3, [x29, #-40]
    3910:	sub	x0, x29, #0x20
    3914:	bl	208 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
    3918:	ldur	x8, [x29, #-16]
    391c:	ldur	q0, [x29, #-32]
    3920:	str	x8, [x19, #40]
    3924:	stur	q0, [x19, #24]
    3928:	mov	w0, wzr
    392c:	ldp	x20, x19, [sp, #464]
    3930:	ldp	x22, x21, [sp, #448]
    3934:	ldp	x24, x23, [sp, #432]
    3938:	ldp	x26, x25, [sp, #416]
    393c:	ldp	x28, x27, [sp, #400]
    3940:	ldp	x29, x30, [sp, #384]
    3944:	add	sp, sp, #0x1e0
    3948:	ret
    394c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3950:	add	x8, x8, #0x0
    3954:	b	3584 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd64>
    3958:	ldp	x8, x9, [x0, #8]
    395c:	subs	x10, x9, #0x1
    3960:	cset	w11, cs  // cs = hs, nlast
    3964:	cinc	x8, x8, cs  // cs = hs, nlast
    3968:	cmp	x10, x11
    396c:	csel	x10, x10, x11, hi  // hi = pmore
    3970:	cmp	x9, x10
    3974:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    3978:	sub	x9, x9, x11
    397c:	sub	x9, x9, #0x7
    3980:	cmp	x9, #0x6
    3984:	b.hi	3b58 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1338>  // b.pmore
    3988:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    398c:	add	x10, x10, #0x0
    3990:	adr	x11, 39a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1180>
    3994:	ldrb	w12, [x10, x9]
    3998:	add	x11, x11, x12, lsl #2
    399c:	br	x11
    39a0:	ldr	w10, [x8]
    39a4:	ldur	w11, [x8, #3]
    39a8:	mov	w9, #0x6441                	// #25665
    39ac:	mov	w12, #0x4c70                	// #19568
    39b0:	movk	w9, #0x7072, lsl #16
    39b4:	movk	w12, #0x7264, lsl #16
    39b8:	eor	w10, w10, w9
    39bc:	eor	w11, w11, w12
    39c0:	orr	w10, w10, w11
    39c4:	cbz	w10, 3b6c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x134c>
    39c8:	ldr	w10, [x8]
    39cc:	ldur	w8, [x8, #3]
    39d0:	mov	w11, #0x4170                	// #16752
    39d4:	movk	w11, #0x6464, lsl #16
    39d8:	eor	w9, w10, w9
    39dc:	eor	w8, w8, w11
    39e0:	orr	w8, w9, w8
    39e4:	cbnz	w8, 3b58 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1338>
    39e8:	mov	w8, #0x7                   	// #7
    39ec:	b	3b70 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1350>
    39f0:	ldr	x0, [x25]
    39f4:	ldr	x8, [x0]
    39f8:	ldr	x8, [x8, #136]
    39fc:	blr	x8
    3a00:	cmp	w19, #0x8
    3a04:	b.hi	3a28 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1208>  // b.pmore
    3a08:	mov	w8, #0x1                   	// #1
    3a0c:	lsl	w8, w8, w19
    3a10:	tst	w8, #0x78
    3a14:	str	x19, [sp, #56]
    3a18:	b.ne	3bc4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13a4>  // b.any
    3a1c:	mov	w9, #0x186                 	// #390
    3a20:	tst	w8, w9
    3a24:	b.ne	3b84 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1364>  // b.any
    3a28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3a2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3a30:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3a34:	add	x0, x0, #0x0
    3a38:	add	x1, x1, #0x0
    3a3c:	add	x3, x3, #0x0
    3a40:	mov	w2, #0x14e5                	// #5349
    3a44:	bl	0 <__assert_fail>
    3a48:	ldr	x9, [x8]
    3a4c:	ldrh	w10, [x8, #8]
    3a50:	mov	x11, #0x6441                	// #25665
    3a54:	movk	x11, #0x7072, lsl #16
    3a58:	movk	x11, #0x6441, lsl #32
    3a5c:	movk	x11, #0x4c64, lsl #48
    3a60:	mov	w12, #0x7264                	// #29284
    3a64:	eor	x9, x9, x11
    3a68:	eor	x10, x10, x12
    3a6c:	orr	x9, x9, x10
    3a70:	cbz	x9, 3b64 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1344>
    3a74:	ldr	x9, [x8]
    3a78:	ldrh	w10, [x8, #8]
    3a7c:	mov	x11, #0x6441                	// #25665
    3a80:	movk	x11, #0x7072, lsl #16
    3a84:	movk	x11, #0x6441, lsl #32
    3a88:	movk	x11, #0x5364, lsl #48
    3a8c:	mov	w12, #0x7274                	// #29300
    3a90:	eor	x9, x9, x11
    3a94:	eor	x10, x10, x12
    3a98:	orr	x9, x9, x10
    3a9c:	cbz	x9, 3ba4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1384>
    3aa0:	ldr	x9, [x8]
    3aa4:	ldrh	w8, [x8, #8]
    3aa8:	mov	x10, #0x6441                	// #25665
    3aac:	movk	x10, #0x7072, lsl #16
    3ab0:	movk	x10, #0x644c, lsl #32
    3ab4:	movk	x10, #0x4772, lsl #48
    3ab8:	mov	w11, #0x746f                	// #29807
    3abc:	eor	x9, x9, x10
    3ac0:	eor	x8, x8, x11
    3ac4:	orr	x8, x9, x8
    3ac8:	cbnz	x8, 3b58 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1338>
    3acc:	mov	w8, #0x8                   	// #8
    3ad0:	b	3b70 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1350>
    3ad4:	ldr	x8, [x8]
    3ad8:	mov	x9, #0x6441                	// #25665
    3adc:	movk	x9, #0x7072, lsl #16
    3ae0:	movk	x9, #0x6441, lsl #32
    3ae4:	movk	x9, #0x7072, lsl #48
    3ae8:	cmp	x8, x9
    3aec:	b.ne	3b58 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1338>  // b.any
    3af0:	mov	w8, #0x1                   	// #1
    3af4:	b	3b70 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1350>
    3af8:	ldr	x10, [x8]
    3afc:	ldur	x11, [x8, #5]
    3b00:	mov	x9, #0x6441                	// #25665
    3b04:	mov	x12, #0x7264                	// #29284
    3b08:	movk	x9, #0x7072, lsl #16
    3b0c:	movk	x12, #0x6f47, lsl #16
    3b10:	movk	x9, #0x644c, lsl #32
    3b14:	movk	x12, #0x4c74, lsl #32
    3b18:	movk	x9, #0x4772, lsl #48
    3b1c:	movk	x12, #0x7264, lsl #48
    3b20:	eor	x10, x10, x9
    3b24:	eor	x11, x11, x12
    3b28:	orr	x10, x10, x11
    3b2c:	cbz	x10, 3b8c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x136c>
    3b30:	ldr	x10, [x8]
    3b34:	ldur	x8, [x8, #5]
    3b38:	mov	x11, #0x7264                	// #29284
    3b3c:	movk	x11, #0x6f47, lsl #16
    3b40:	movk	x11, #0x5374, lsl #32
    3b44:	movk	x11, #0x7274, lsl #48
    3b48:	eor	x9, x10, x9
    3b4c:	eor	x8, x8, x11
    3b50:	orr	x8, x9, x8
    3b54:	cbz	x8, 3bac <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x138c>
    3b58:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3b5c:	add	x8, x8, #0x0
    3b60:	b	3584 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xd64>
    3b64:	mov	w8, #0x3                   	// #3
    3b68:	b	3bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1390>
    3b6c:	mov	w8, #0x2                   	// #2
    3b70:	ldr	x0, [x25]
    3b74:	str	x8, [sp, #56]
    3b78:	ldr	x8, [x0]
    3b7c:	ldr	x8, [x8, #136]
    3b80:	blr	x8
    3b84:	mov	w22, #0x2                   	// #2
    3b88:	b	3bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13a8>
    3b8c:	mov	w8, #0x4                   	// #4
    3b90:	b	3bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1390>
    3b94:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3b98:	mov	w8, #0x503                 	// #1283
    3b9c:	add	x9, x9, #0x0
    3ba0:	b	368c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xe6c>
    3ba4:	mov	w8, #0x5                   	// #5
    3ba8:	b	3bb0 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1390>
    3bac:	mov	w8, #0x6                   	// #6
    3bb0:	ldr	x0, [x25]
    3bb4:	str	x8, [sp, #56]
    3bb8:	ldr	x8, [x0]
    3bbc:	ldr	x8, [x8, #136]
    3bc0:	blr	x8
    3bc4:	mov	w22, #0x3                   	// #3
    3bc8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3bcc:	ldr	d0, [x8]
    3bd0:	add	x8, sp, #0xa8
    3bd4:	add	x8, x8, #0x10
    3bd8:	str	x8, [sp, #168]
    3bdc:	str	d0, [sp, #176]
    3be0:	stp	xzr, xzr, [sp, #88]
    3be4:	ldr	x0, [x25]
    3be8:	str	x8, [sp, #48]
    3bec:	add	x1, sp, #0x58
    3bf0:	add	x24, sp, #0x58
    3bf4:	ldr	x8, [x0]
    3bf8:	ldr	x8, [x8, #144]
    3bfc:	blr	x8
    3c00:	tbz	w0, #0, 3c30 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1410>
    3c04:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3c08:	add	x8, x8, #0x0
    3c0c:	mov	w9, #0x103                 	// #259
    3c10:	stp	x8, xzr, [x29, #-32]
    3c14:	sturh	w9, [x29, #-16]
    3c18:	ldr	x0, [x25]
    3c1c:	sub	x1, x29, #0x20
    3c20:	mov	x2, xzr
    3c24:	mov	x3, xzr
    3c28:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    3c2c:	b	35d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>
    3c30:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    3c34:	mov	w27, #0x105                 	// #261
    3c38:	add	x28, sp, #0x90
    3c3c:	mov	w19, #0x503                 	// #1283
    3c40:	sub	x20, x29, #0x38
    3c44:	add	x26, x26, #0x0
    3c48:	mov	w23, #0x302                 	// #770
    3c4c:	ldr	x0, [x25]
    3c50:	ldr	x8, [x0]
    3c54:	ldr	x8, [x8, #48]
    3c58:	blr	x8
    3c5c:	sub	x1, x29, #0x20
    3c60:	sturh	w27, [x29, #-16]
    3c64:	stp	x24, xzr, [x29, #-32]
    3c68:	bl	0 <_ZN4llvm9MCContext17getOrCreateSymbolERKNS_5TwineE>
    3c6c:	ldp	w8, w9, [sp, #176]
    3c70:	mov	x21, x0
    3c74:	cmp	w8, w9
    3c78:	b.cs	3cec <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x14cc>  // b.hs, b.nlast
    3c7c:	ldr	x9, [sp, #168]
    3c80:	str	x21, [x9, w8, uxtw #3]
    3c84:	ldp	w8, w9, [sp, #176]
    3c88:	cmp	w8, w9
    3c8c:	b.cs	3db8 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x1598>  // b.hs, b.nlast
    3c90:	add	w8, w8, #0x1
    3c94:	subs	w22, w22, #0x1
    3c98:	str	w8, [sp, #176]
    3c9c:	b.eq	3d08 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x14e8>  // b.none
    3ca0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    3ca4:	add	x8, x8, #0x0
    3ca8:	stp	x8, x28, [x29, #-56]
    3cac:	sturh	w19, [x29, #-40]
    3cb0:	stp	x20, x26, [x29, #-32]
    3cb4:	sturh	w23, [x29, #-16]
    3cb8:	ldr	x0, [x25]
    3cbc:	sub	x2, x29, #0x20
    3cc0:	mov	w1, #0x19                  	// #25
    3cc4:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3cc8:	tbnz	w0, #0, 35d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>
    3ccc:	stp	xzr, xzr, [sp, #88]
    3cd0:	ldr	x0, [x25]
    3cd4:	add	x1, sp, #0x58
    3cd8:	ldr	x8, [x0]
    3cdc:	ldr	x8, [x8, #144]
    3ce0:	blr	x8
    3ce4:	tbz	w0, #0, 3c4c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x142c>
    3ce8:	b	3c04 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x13e4>
    3cec:	ldr	x1, [sp, #48]
    3cf0:	add	x0, sp, #0xa8
    3cf4:	mov	w3, #0x8                   	// #8
    3cf8:	mov	x2, xzr
    3cfc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    3d00:	ldr	w8, [sp, #176]
    3d04:	b	3c7c <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0x145c>
    3d08:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    3d0c:	add	x8, sp, #0x90
    3d10:	mov	w9, #0x503                 	// #1283
    3d14:	sub	x10, x29, #0x38
    3d18:	mov	w11, #0x302                 	// #770
    3d1c:	add	x12, x12, #0x0
    3d20:	stp	x12, x8, [x29, #-56]
    3d24:	sturh	w9, [x29, #-40]
    3d28:	stp	x10, x26, [x29, #-32]
    3d2c:	sturh	w11, [x29, #-16]
    3d30:	ldr	x0, [x25]
    3d34:	sub	x2, x29, #0x20
    3d38:	mov	w1, #0x9                   	// #9
    3d3c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    3d40:	tbnz	w0, #0, 35d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>
    3d44:	ldr	x0, [x25]
    3d48:	ldr	x8, [x0]
    3d4c:	ldr	x8, [x8, #56]
    3d50:	blr	x8
    3d54:	ldr	x8, [x0]
    3d58:	add	x2, sp, #0xa8
    3d5c:	ldr	x1, [sp, #56]
    3d60:	ldr	x8, [x8, #368]
    3d64:	blr	x8
    3d68:	b	35d4 <_ZN12_GLOBAL__N_116AArch64AsmParser14ParseDirectiveEN4llvm8AsmTokenE+0xdb4>
    3d6c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3d70:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3d74:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3d78:	add	x0, x0, #0x0
    3d7c:	add	x1, x1, #0x0
    3d80:	add	x3, x3, #0x0
    3d84:	mov	w2, #0x5b                  	// #91
    3d88:	bl	0 <__assert_fail>
    3d8c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3d90:	add	x0, x0, #0x0
    3d94:	bl	0 <_ZSt20__throw_length_errorPKc>
    3d98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3d9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3da0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3da4:	add	x0, x0, #0x0
    3da8:	add	x1, x1, #0x0
    3dac:	add	x3, x3, #0x0
    3db0:	mov	w2, #0x28b                 	// #651
    3db4:	bl	0 <__assert_fail>
    3db8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3dbc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3dc0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3dc4:	add	x0, x0, #0x0
    3dc8:	add	x1, x1, #0x0
    3dcc:	add	x3, x3, #0x0
    3dd0:	mov	w2, #0x43                  	// #67
    3dd4:	bl	0 <__assert_fail>
    3dd8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3ddc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3de0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3de4:	add	x0, x0, #0x0
    3de8:	add	x1, x1, #0x0
    3dec:	add	x3, x3, #0x0
    3df0:	mov	w2, #0x99                  	// #153
    3df4:	bl	0 <__assert_fail>
    3df8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    3dfc:	mov	w8, #0x503                 	// #1283
    3e00:	add	x9, x9, #0x0
    3e04:	add	x10, sp, #0x40
    3e08:	sub	x0, x29, #0x20
    3e0c:	mov	w1, #0x1                   	// #1
    3e10:	sturh	w8, [x29, #-16]
    3e14:	stp	x9, x10, [x29, #-32]
    3e18:	bl	0 <_ZN4llvm18report_fatal_errorERKNS_5TwineEb>
    3e1c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3e20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3e24:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3e28:	add	x0, x0, #0x0
    3e2c:	add	x1, x1, #0x0
    3e30:	add	x3, x3, #0x0
    3e34:	mov	w2, #0x74                  	// #116
    3e38:	bl	0 <__assert_fail>
    3e3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    3e40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3e44:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    3e48:	add	x0, x0, #0x0
    3e4c:	add	x1, x1, #0x0
    3e50:	add	x3, x3, #0x0
    3e54:	mov	w2, #0x657                 	// #1623
    3e58:	bl	0 <__assert_fail>

0000000000003e5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb>:
    3e5c:	str	d8, [sp, #-112]!
    3e60:	stp	x29, x30, [sp, #16]
    3e64:	stp	x28, x27, [sp, #32]
    3e68:	stp	x26, x25, [sp, #48]
    3e6c:	stp	x24, x23, [sp, #64]
    3e70:	stp	x22, x21, [sp, #80]
    3e74:	stp	x20, x19, [sp, #96]
    3e78:	mov	x29, sp
    3e7c:	sub	sp, sp, #0x1a0
    3e80:	str	x1, [x29, #8]
    3e84:	mov	x26, x3
    3e88:	ldr	w8, [x26, #8]!
    3e8c:	cbz	w8, 6894 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a38>
    3e90:	ldr	x8, [x3]
    3e94:	mov	x19, x0
    3e98:	mov	w21, w6
    3e9c:	mov	x23, x5
    3ea0:	ldr	x27, [x8]
    3ea4:	mov	x20, x4
    3ea8:	mov	x22, x3
    3eac:	ldr	x8, [x27]
    3eb0:	mov	x0, x27
    3eb4:	ldr	x8, [x8, #32]
    3eb8:	blr	x8
    3ebc:	tbz	w0, #0, 68b4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a58>
    3ec0:	ldr	w8, [x27, #48]
    3ec4:	cmp	w8, #0x6
    3ec8:	b.ne	6874 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a18>  // b.any
    3ecc:	ldr	w24, [x26]
    3ed0:	str	x20, [sp, #48]
    3ed4:	ldr	x20, [x27, #72]
    3ed8:	ldr	w25, [x27, #80]
    3edc:	cmp	w24, #0x4
    3ee0:	str	w21, [sp, #60]
    3ee4:	b.ne	3fa0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x144>  // b.any
    3ee8:	cmp	w25, #0x3
    3eec:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    3ef0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3ef4:	add	x1, x1, #0x0
    3ef8:	mov	x0, x20
    3efc:	mov	x2, x25
    3f00:	bl	0 <bcmp>
    3f04:	cbz	w0, 3fdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x180>
    3f08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3f0c:	add	x1, x1, #0x0
    3f10:	mov	x0, x20
    3f14:	mov	x2, x25
    3f18:	bl	0 <bcmp>
    3f1c:	cbnz	w0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    3f20:	ldr	x10, [x22]
    3f24:	add	x8, sp, #0x60
    3f28:	adrp	x17, 0 <LLVMInitializeAArch64AsmParser>
    3f2c:	movi	v0.2d, #0x0
    3f30:	ldp	x0, x11, [x10, #8]
    3f34:	add	x17, x17, #0x0
    3f38:	add	x15, x8, #0x20
    3f3c:	stur	q0, [sp, #104]
    3f40:	stur	q0, [sp, #120]
    3f44:	stp	x15, xzr, [sp, #112]
    3f48:	strb	wzr, [sp, #128]
    3f4c:	str	x17, [sp, #96]
    3f50:	stp	xzr, xzr, [sp, #152]
    3f54:	str	xzr, [sp, #136]
    3f58:	ldr	x8, [x11, #104]
    3f5c:	sub	x9, x29, #0xa0
    3f60:	str	x8, [sp, #200]
    3f64:	ldr	w8, [x11, #48]
    3f68:	str	w8, [sp, #144]
    3f6c:	ldur	q1, [x11, #56]
    3f70:	cmp	w8, #0xe
    3f74:	stur	q1, [sp, #152]
    3f78:	b.hi	4318 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4bc>  // b.pmore
    3f7c:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    3f80:	add	x12, x12, #0x0
    3f84:	adr	x13, 3f94 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x138>
    3f88:	ldrh	w14, [x12, x8, lsl #1]
    3f8c:	add	x13, x13, x14, lsl #2
    3f90:	br	x13
    3f94:	ldur	q1, [x11, #72]
    3f98:	stur	q1, [sp, #168]
    3f9c:	b	4318 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4bc>
    3fa0:	cmp	w24, #0x5
    3fa4:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    3fa8:	cmp	w25, #0x5
    3fac:	b.eq	40c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x264>  // b.none
    3fb0:	cmp	w25, #0x4
    3fb4:	b.eq	408c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x230>  // b.none
    3fb8:	cmp	w25, #0x3
    3fbc:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    3fc0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    3fc4:	add	x1, x1, #0x0
    3fc8:	mov	x0, x20
    3fcc:	mov	x2, x25
    3fd0:	bl	0 <bcmp>
    3fd4:	cbnz	w0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    3fd8:	b	41f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x398>
    3fdc:	ldr	x8, [x22]
    3fe0:	ldr	x21, [x8, #16]
    3fe4:	ldr	w9, [x21, #48]
    3fe8:	cmp	w9, #0x3
    3fec:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    3ff0:	ldr	w9, [x21, #76]
    3ff4:	cbnz	w9, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    3ff8:	ldr	x28, [x8, #24]
    3ffc:	ldr	x8, [x28]
    4000:	mov	x0, x28
    4004:	ldr	x8, [x8, #40]
    4008:	blr	x8
    400c:	tbz	w0, #0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    4010:	ldr	w8, [x28, #48]
    4014:	cbnz	w8, 6ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c5c>
    4018:	ldr	x8, [x28, #72]
    401c:	cbz	x8, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    4020:	ldr	w9, [x8]
    4024:	cmp	w9, #0x1
    4028:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    402c:	ldr	x9, [x21]
    4030:	ldr	x8, [x8, #16]
    4034:	mov	x0, x21
    4038:	str	x8, [sp, #32]
    403c:	ldr	x8, [x9, #56]
    4040:	blr	x8
    4044:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4048:	ldr	x8, [x8]
    404c:	mov	w9, w0
    4050:	lsr	x9, x9, #3
    4054:	ldrh	w10, [x8, #150]
    4058:	cmp	w9, w10
    405c:	b.cs	5b60 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1d04>  // b.hs, b.nlast
    4060:	ldr	x8, [x8, #136]
    4064:	ldr	x10, [sp, #32]
    4068:	ldrb	w8, [x8, x9]
    406c:	and	w9, w0, #0x7
    4070:	lsr	w9, w8, w9
    4074:	neg	x8, x10
    4078:	tbz	w9, #0, 5b68 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1d0c>
    407c:	and	x8, x8, #0x1f
    4080:	str	x8, [sp, #24]
    4084:	mov	w8, #0x1f                  	// #31
    4088:	b	5b74 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1d18>
    408c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4090:	add	x1, x1, #0x0
    4094:	mov	x0, x20
    4098:	mov	x2, x25
    409c:	bl	0 <bcmp>
    40a0:	cbz	w0, 4108 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac>
    40a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    40a8:	add	x1, x1, #0x0
    40ac:	mov	x0, x20
    40b0:	mov	x2, x25
    40b4:	bl	0 <bcmp>
    40b8:	cbnz	w0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    40bc:	b	4108 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ac>
    40c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    40c4:	add	x1, x1, #0x0
    40c8:	mov	x0, x20
    40cc:	mov	x2, x25
    40d0:	bl	0 <bcmp>
    40d4:	cbz	w0, 41f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x398>
    40d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    40dc:	add	x1, x1, #0x0
    40e0:	mov	x0, x20
    40e4:	mov	x2, x25
    40e8:	bl	0 <bcmp>
    40ec:	cbz	w0, 41f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x398>
    40f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    40f4:	add	x1, x1, #0x0
    40f8:	mov	x0, x20
    40fc:	mov	x2, x25
    4100:	bl	0 <bcmp>
    4104:	cbnz	w0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    4108:	ldr	x8, [x22]
    410c:	ldr	x28, [x8, #8]
    4110:	ldr	w9, [x28, #48]
    4114:	cmp	w9, #0x3
    4118:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    411c:	ldr	w9, [x28, #76]
    4120:	cbnz	w9, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    4124:	ldp	x0, x21, [x8, #24]
    4128:	ldr	x8, [x0]
    412c:	str	x0, [sp, #32]
    4130:	ldr	x8, [x8, #40]
    4134:	blr	x8
    4138:	tbz	w0, #0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    413c:	ldr	x8, [x21]
    4140:	mov	x0, x21
    4144:	ldr	x8, [x8, #40]
    4148:	blr	x8
    414c:	tbz	w0, #0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    4150:	ldr	x9, [sp, #32]
    4154:	ldr	w8, [x9, #48]
    4158:	cbnz	w8, 6ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c5c>
    415c:	ldr	x8, [x9, #72]
    4160:	cbz	x8, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    4164:	ldr	w10, [x8]
    4168:	ldr	w9, [x21, #48]
    416c:	cmp	w10, #0x1
    4170:	csel	x8, x8, xzr, eq  // eq = none
    4174:	cbnz	w9, 6ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c5c>
    4178:	ldr	x9, [x21, #72]
    417c:	cbz	x9, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    4180:	cmp	w10, #0x1
    4184:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    4188:	ldr	w10, [x9]
    418c:	cmp	w10, #0x1
    4190:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    4194:	str	x21, [sp, #24]
    4198:	ldr	x10, [x28]
    419c:	ldr	x21, [x8, #16]
    41a0:	ldr	x8, [x9, #16]
    41a4:	mov	x0, x28
    41a8:	str	x8, [sp, #16]
    41ac:	ldr	x8, [x10, #56]
    41b0:	blr	x8
    41b4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    41b8:	ldr	x8, [x8]
    41bc:	mov	w9, w0
    41c0:	lsr	x9, x9, #3
    41c4:	ldrh	w10, [x8, #502]
    41c8:	cmp	w9, w10
    41cc:	b.cs	61bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2360>  // b.hs, b.nlast
    41d0:	ldr	x8, [x8, #488]
    41d4:	mov	w10, #0x40                  	// #64
    41d8:	ldrb	w8, [x8, x9]
    41dc:	and	w9, w0, #0x7
    41e0:	lsr	w8, w8, w9
    41e4:	tst	w8, #0x1
    41e8:	mov	w8, #0x20                  	// #32
    41ec:	csel	x8, x8, x10, eq  // eq = none
    41f0:	b	61c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2364>
    41f4:	ldr	x8, [x22]
    41f8:	ldr	x28, [x8, #8]
    41fc:	ldr	w9, [x28, #48]
    4200:	cmp	w9, #0x3
    4204:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    4208:	ldr	w9, [x28, #76]
    420c:	cbnz	w9, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    4210:	ldp	x0, x21, [x8, #24]
    4214:	ldr	x8, [x0]
    4218:	str	x0, [sp, #32]
    421c:	ldr	x8, [x8, #40]
    4220:	blr	x8
    4224:	tbz	w0, #0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    4228:	ldr	x8, [x21]
    422c:	mov	x0, x21
    4230:	ldr	x8, [x8, #40]
    4234:	blr	x8
    4238:	tbz	w0, #0, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    423c:	ldr	x9, [sp, #32]
    4240:	ldr	w8, [x9, #48]
    4244:	cbnz	w8, 6ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c5c>
    4248:	ldr	x8, [x9, #72]
    424c:	cbz	x8, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    4250:	ldr	w10, [x8]
    4254:	ldr	w9, [x21, #48]
    4258:	cmp	w10, #0x1
    425c:	csel	x8, x8, xzr, eq  // eq = none
    4260:	cbnz	w9, 6ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c5c>
    4264:	ldr	x9, [x21, #72]
    4268:	cbz	x9, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    426c:	cmp	w10, #0x1
    4270:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    4274:	ldr	w10, [x9]
    4278:	cmp	w10, #0x1
    427c:	b.ne	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>  // b.any
    4280:	str	x21, [sp, #24]
    4284:	ldr	x10, [x28]
    4288:	ldr	x21, [x8, #16]
    428c:	ldr	x8, [x9, #16]
    4290:	mov	x0, x28
    4294:	str	x8, [sp, #16]
    4298:	ldr	x8, [x10, #56]
    429c:	blr	x8
    42a0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    42a4:	ldr	x8, [x8]
    42a8:	mov	w9, w0
    42ac:	lsr	x9, x9, #3
    42b0:	ldrh	w10, [x8, #502]
    42b4:	cmp	w9, w10
    42b8:	b.cs	5ebc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2060>  // b.hs, b.nlast
    42bc:	ldr	x8, [x8, #488]
    42c0:	mov	w10, #0x40                  	// #64
    42c4:	ldrb	w8, [x8, x9]
    42c8:	and	w9, w0, #0x7
    42cc:	lsr	w8, w8, w9
    42d0:	tst	w8, #0x1
    42d4:	mov	w8, #0x20                  	// #32
    42d8:	csel	x8, x8, x10, eq  // eq = none
    42dc:	b	5ec0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2064>
    42e0:	ldr	w11, [x11, #72]
    42e4:	str	w11, [sp, #168]
    42e8:	b	4318 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4bc>
    42ec:	ldr	w12, [x11, #80]
    42f0:	ldr	x11, [x11, #72]
    42f4:	str	w12, [sp, #176]
    42f8:	b	4314 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4b8>
    42fc:	ldur	q1, [x11, #84]
    4300:	ldur	q2, [x11, #72]
    4304:	stur	q1, [sp, #180]
    4308:	stur	q2, [sp, #168]
    430c:	b	4318 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x4bc>
    4310:	ldr	x11, [x11, #72]
    4314:	str	x11, [sp, #168]
    4318:	ldr	x11, [x10, #24]
    431c:	sub	x10, x29, #0xa0
    4320:	add	x16, x10, #0x20
    4324:	stur	q0, [x9, #8]
    4328:	stur	q0, [x9, #24]
    432c:	stur	xzr, [x29, #-120]
    4330:	sturb	wzr, [x29, #-128]
    4334:	stp	x16, xzr, [x29, #-144]
    4338:	stur	x17, [x29, #-160]
    433c:	stp	xzr, xzr, [x29, #-104]
    4340:	ldr	x10, [x11, #104]
    4344:	stur	x10, [x29, #-56]
    4348:	ldr	w10, [x11, #48]
    434c:	stur	w10, [x29, #-112]
    4350:	ldur	q0, [x11, #56]
    4354:	cmp	w10, #0xe
    4358:	stur	q0, [x9, #56]
    435c:	b.hi	43c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x564>  // b.pmore
    4360:	adrp	x12, 0 <LLVMInitializeAArch64AsmParser>
    4364:	add	x12, x12, #0x0
    4368:	adr	x13, 4378 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x51c>
    436c:	ldrh	w14, [x12, x10, lsl #1]
    4370:	add	x13, x13, x14, lsl #2
    4374:	br	x13
    4378:	ldur	q0, [x11, #72]
    437c:	stur	q0, [x9, #72]
    4380:	b	43c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x564>
    4384:	ldr	w9, [x11, #72]
    4388:	stur	w9, [x29, #-88]
    438c:	b	43c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x564>
    4390:	ldr	w9, [x11, #80]
    4394:	ldr	x11, [x11, #72]
    4398:	stur	w9, [x29, #-80]
    439c:	stur	x11, [x29, #-88]
    43a0:	b	43c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x564>
    43a4:	ldur	q0, [x11, #84]
    43a8:	ldur	q1, [x11, #72]
    43ac:	stur	q0, [x9, #84]
    43b0:	stur	q1, [x9, #72]
    43b4:	b	43c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x564>
    43b8:	ldr	x9, [x11, #72]
    43bc:	stur	x9, [x29, #-88]
    43c0:	ldr	w9, [x0, #48]
    43c4:	str	x23, [sp, #40]
    43c8:	cmp	w9, #0x3
    43cc:	b.ne	43e0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x584>  // b.any
    43d0:	ldr	w9, [x0, #76]
    43d4:	orr	w9, w9, w10
    43d8:	orr	w8, w9, w8
    43dc:	cbz	w8, 4fc8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x116c>
    43e0:	mov	w21, wzr
    43e4:	adrp	x8, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
    43e8:	ldur	x0, [x29, #-144]
    43ec:	ldr	x8, [x8]
    43f0:	cmp	x0, x16
    43f4:	add	x27, x8, #0x10
    43f8:	stur	x27, [x29, #-160]
    43fc:	b.eq	441c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5c0>  // b.none
    4400:	mov	w23, w21
    4404:	mov	x21, x20
    4408:	mov	x20, x15
    440c:	bl	0 <_ZdlPv>
    4410:	mov	x15, x20
    4414:	mov	x20, x21
    4418:	mov	w21, w23
    441c:	ldr	x0, [sp, #112]
    4420:	str	x27, [sp, #96]
    4424:	cmp	x0, x15
    4428:	b.eq	4430 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5d4>  // b.none
    442c:	bl	0 <_ZdlPv>
    4430:	ldr	x23, [sp, #40]
    4434:	cbnz	w21, 568c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1830>
    4438:	mov	x0, x19
    443c:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    4440:	cmp	w24, #0x4
    4444:	b.ne	4544 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6e8>  // b.any
    4448:	ldr	x8, [x0, #192]
    444c:	tbz	x8, #58, 4544 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6e8>
    4450:	cmp	w25, #0x4
    4454:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    4458:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    445c:	add	x1, x1, #0x0
    4460:	mov	x0, x20
    4464:	mov	x2, x25
    4468:	bl	0 <bcmp>
    446c:	cbnz	w0, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4470:	ldr	w8, [x26]
    4474:	cmp	w8, #0x1
    4478:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    447c:	cmp	w8, #0x2
    4480:	b.eq	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.none
    4484:	cmp	w8, #0x3
    4488:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    448c:	ldr	x8, [x22]
    4490:	ldp	x25, x27, [x8, #8]
    4494:	ldr	x20, [x8, #24]
    4498:	ldr	x9, [x25]
    449c:	mov	x0, x25
    44a0:	ldr	x8, [x9, #32]
    44a4:	blr	x8
    44a8:	tbz	w0, #0, 44d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x67c>
    44ac:	ldr	w8, [x27, #48]
    44b0:	cmp	w8, #0x3
    44b4:	b.ne	44d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x67c>  // b.any
    44b8:	ldr	w8, [x27, #76]
    44bc:	cmp	w8, #0x1
    44c0:	b.ne	44d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x67c>  // b.any
    44c4:	ldr	x8, [x20]
    44c8:	mov	x0, x20
    44cc:	ldr	x8, [x8, #40]
    44d0:	blr	x8
    44d4:	tbnz	w0, #0, 4518 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x6bc>
    44d8:	ldr	w8, [x25, #48]
    44dc:	cmp	w8, #0x3
    44e0:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    44e4:	ldr	w8, [x25, #76]
    44e8:	cmp	w8, #0x1
    44ec:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    44f0:	ldr	x8, [x27]
    44f4:	mov	x0, x27
    44f8:	ldr	x8, [x8, #32]
    44fc:	blr	x8
    4500:	tbz	w0, #0, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4504:	ldr	x8, [x20]
    4508:	mov	x0, x20
    450c:	ldr	x8, [x8, #40]
    4510:	blr	x8
    4514:	tbz	w0, #0, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4518:	ldr	x8, [x25]
    451c:	mov	x0, x25
    4520:	ldr	x8, [x8, #32]
    4524:	blr	x8
    4528:	tbz	w0, #0, 578c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1930>
    452c:	ldr	w8, [x25, #48]
    4530:	cmp	w8, #0x6
    4534:	b.ne	6874 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a18>  // b.any
    4538:	ldr	x9, [x25, #72]
    453c:	ldr	w8, [x25, #80]
    4540:	b	57a0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1944>
    4544:	cmp	w25, #0x4
    4548:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    454c:	cmp	w24, #0x3
    4550:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    4554:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4558:	add	x1, x1, #0x0
    455c:	mov	x0, x20
    4560:	mov	x2, x25
    4564:	bl	0 <bcmp>
    4568:	cbz	w0, 478c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x930>
    456c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4570:	add	x1, x1, #0x0
    4574:	mov	x0, x20
    4578:	mov	x2, x25
    457c:	bl	0 <bcmp>
    4580:	cbz	w0, 478c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x930>
    4584:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    4588:	add	x1, x1, #0x0
    458c:	mov	x0, x20
    4590:	mov	x2, x25
    4594:	bl	0 <bcmp>
    4598:	cbz	w0, 4728 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x8cc>
    459c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    45a0:	add	x1, x1, #0x0
    45a4:	mov	x0, x20
    45a8:	mov	x2, x25
    45ac:	bl	0 <bcmp>
    45b0:	cbz	w0, 4728 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x8cc>
    45b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    45b8:	add	x1, x1, #0x0
    45bc:	mov	x0, x20
    45c0:	mov	x2, x25
    45c4:	bl	0 <bcmp>
    45c8:	cbz	w0, 45e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x788>
    45cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    45d0:	add	x1, x1, #0x0
    45d4:	mov	x0, x20
    45d8:	mov	x2, x25
    45dc:	bl	0 <bcmp>
    45e0:	cbnz	w0, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    45e4:	ldr	w8, [x26]
    45e8:	cmp	w8, #0x1
    45ec:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    45f0:	ldr	x8, [x22]
    45f4:	ldr	x0, [x8, #8]
    45f8:	ldr	w8, [x0, #48]
    45fc:	cmp	w8, #0x3
    4600:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    4604:	ldr	w8, [x0, #76]
    4608:	cbnz	w8, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    460c:	ldr	x8, [x0]
    4610:	ldr	x8, [x8, #56]
    4614:	blr	x8
    4618:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    461c:	ldr	x8, [x8]
    4620:	mov	w9, w0
    4624:	lsr	x9, x9, #3
    4628:	ldrh	w10, [x8, #502]
    462c:	cmp	w9, w10
    4630:	b.cs	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.hs, b.nlast
    4634:	ldr	x8, [x8, #488]
    4638:	ldrb	w8, [x8, x9]
    463c:	and	w9, w0, #0x7
    4640:	lsr	w8, w8, w9
    4644:	tbz	w8, #0, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4648:	ldr	w8, [x26]
    464c:	cmp	w8, #0x1
    4650:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    4654:	ldr	x8, [x22]
    4658:	ldr	x21, [x8, #8]
    465c:	ldr	w8, [x21, #48]
    4660:	cmp	w8, #0x3
    4664:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    4668:	ldr	w8, [x21, #76]
    466c:	cbnz	w8, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4670:	ldr	x8, [x21]
    4674:	mov	x0, x21
    4678:	ldr	x8, [x8, #56]
    467c:	blr	x8
    4680:	bl	11fa0 <_ZN4llvmL15getWRegFromXRegEj>
    4684:	ldr	x8, [x21]
    4688:	mov	w25, w0
    468c:	mov	x0, x21
    4690:	ldr	x8, [x8, #72]
    4694:	blr	x8
    4698:	ldr	x8, [x21]
    469c:	mov	x20, x0
    46a0:	mov	x0, x21
    46a4:	ldr	x8, [x8, #80]
    46a8:	blr	x8
    46ac:	ldr	x8, [x19, #8]
    46b0:	mov	x21, x0
    46b4:	ldr	x9, [x8]
    46b8:	mov	x0, x8
    46bc:	ldr	x9, [x9, #48]
    46c0:	blr	x9
    46c4:	mov	x27, x0
    46c8:	mov	w0, #0x70                  	// #112
    46cc:	bl	0 <_Znwm>
    46d0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    46d4:	mov	x8, x0
    46d8:	add	x9, x9, #0x0
    46dc:	strb	wzr, [x8, #32]!
    46e0:	str	x9, [x0]
    46e4:	mov	w9, #0x3                   	// #3
    46e8:	str	w9, [x0, #48]
    46ec:	str	x27, [x0, #104]
    46f0:	str	w25, [x0, #72]
    46f4:	stur	xzr, [x0, #89]
    46f8:	stur	xzr, [x0, #84]
    46fc:	stur	xzr, [x0, #76]
    4700:	stp	x8, xzr, [x0, #16]
    4704:	stp	x20, x21, [x0, #56]
    4708:	ldr	w8, [x26]
    470c:	cmp	w8, #0x1
    4710:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    4714:	ldr	x9, [x22]
    4718:	ldr	x8, [x9, #8]
    471c:	str	x0, [x9, #8]
    4720:	cbnz	x8, 4868 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    4724:	b	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4728:	ldr	w8, [x26]
    472c:	cmp	w8, #0x1
    4730:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    4734:	ldr	x8, [x22]
    4738:	ldr	x0, [x8, #8]
    473c:	ldr	w8, [x0, #48]
    4740:	cmp	w8, #0x3
    4744:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    4748:	ldr	w8, [x0, #76]
    474c:	cbnz	w8, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4750:	ldr	x8, [x0]
    4754:	ldr	x8, [x8, #56]
    4758:	blr	x8
    475c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    4760:	ldr	x8, [x8]
    4764:	mov	w9, w0
    4768:	lsr	x9, x9, #3
    476c:	ldrh	w10, [x8, #502]
    4770:	cmp	w9, w10
    4774:	b.cs	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.hs, b.nlast
    4778:	ldr	x8, [x8, #488]
    477c:	ldrb	w8, [x8, x9]
    4780:	and	w9, w0, #0x7
    4784:	lsr	w8, w8, w9
    4788:	tbz	w8, #0, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    478c:	ldr	w8, [x26]
    4790:	cmp	w8, #0x2
    4794:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    4798:	ldr	x8, [x22]
    479c:	ldr	x21, [x8, #16]
    47a0:	ldr	w8, [x21, #48]
    47a4:	cmp	w8, #0x3
    47a8:	b.ne	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.any
    47ac:	ldr	w8, [x21, #76]
    47b0:	cbnz	w8, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    47b4:	ldr	x8, [x21]
    47b8:	mov	x0, x21
    47bc:	ldr	x8, [x8, #56]
    47c0:	blr	x8
    47c4:	bl	11e6c <_ZN4llvmL15getXRegFromWRegEj>
    47c8:	ldr	x8, [x21]
    47cc:	mov	w25, w0
    47d0:	mov	x0, x21
    47d4:	ldr	x8, [x8, #72]
    47d8:	blr	x8
    47dc:	ldr	x8, [x21]
    47e0:	mov	x20, x0
    47e4:	mov	x0, x21
    47e8:	ldr	x8, [x8, #80]
    47ec:	blr	x8
    47f0:	ldr	x8, [x19, #8]
    47f4:	mov	x21, x0
    47f8:	ldr	x9, [x8]
    47fc:	mov	x0, x8
    4800:	ldr	x9, [x9, #48]
    4804:	blr	x9
    4808:	mov	x27, x0
    480c:	mov	w0, #0x70                  	// #112
    4810:	bl	0 <_Znwm>
    4814:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4818:	mov	x8, x0
    481c:	add	x9, x9, #0x0
    4820:	strb	wzr, [x8, #32]!
    4824:	str	x9, [x0]
    4828:	mov	w9, #0x3                   	// #3
    482c:	str	w9, [x0, #48]
    4830:	str	x27, [x0, #104]
    4834:	str	w25, [x0, #72]
    4838:	stur	xzr, [x0, #89]
    483c:	stur	xzr, [x0, #84]
    4840:	stur	xzr, [x0, #76]
    4844:	stp	x8, xzr, [x0, #16]
    4848:	stp	x20, x21, [x0, #56]
    484c:	ldr	w8, [x26]
    4850:	cmp	w8, #0x2
    4854:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    4858:	ldr	x9, [x22]
    485c:	ldr	x8, [x9, #16]
    4860:	str	x0, [x9, #16]
    4864:	cbz	x8, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    4868:	ldr	x9, [x8]
    486c:	mov	x0, x8
    4870:	ldr	x9, [x9, #8]
    4874:	blr	x9
    4878:	add	x27, sp, #0x60
    487c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    4880:	ldr	d8, [x8]
    4884:	add	x8, x27, #0x20
    4888:	str	x8, [sp, #112]
    488c:	ldr	w8, [sp, #60]
    4890:	add	x2, sp, #0x60
    4894:	add	x4, sp, #0x40
    4898:	mov	w6, #0x1                   	// #1
    489c:	and	w21, w8, #0x1
    48a0:	mov	x0, x19
    48a4:	mov	x1, x22
    48a8:	mov	x3, x23
    48ac:	mov	w5, w21
    48b0:	stp	xzr, xzr, [sp, #96]
    48b4:	stp	xzr, xzr, [sp, #64]
    48b8:	str	d8, [sp, #120]
    48bc:	str	xzr, [sp, #80]
    48c0:	bl	120d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>
    48c4:	cmp	w0, #0x4
    48c8:	b.ne	4a10 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xbb4>  // b.any
    48cc:	sub	x8, x29, #0xa0
    48d0:	add	x23, x8, #0x10
    48d4:	stur	x23, [x29, #-160]
    48d8:	stur	d8, [x29, #-152]
    48dc:	ldr	w8, [x26]
    48e0:	cmp	w8, #0x2
    48e4:	b.cc	4970 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb14>  // b.lo, b.ul, b.last
    48e8:	mov	w9, #0x2                   	// #2
    48ec:	sub	x20, x9, x8
    48f0:	mov	w24, #0x1                   	// #1
    48f4:	ldr	x8, [x22]
    48f8:	ldr	x0, [x8, x24, lsl #3]
    48fc:	ldr	x8, [x0]
    4900:	ldr	x8, [x8, #72]
    4904:	blr	x8
    4908:	ldp	w8, w9, [x29, #-152]
    490c:	mov	x21, x0
    4910:	cmp	w8, w9
    4914:	b.cs	4954 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xaf8>  // b.hs, b.nlast
    4918:	ldur	x9, [x29, #-160]
    491c:	str	x21, [x9, w8, uxtw #3]
    4920:	ldp	w8, w9, [x29, #-152]
    4924:	cmp	w8, w9
    4928:	b.cs	6800 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29a4>  // b.hs, b.nlast
    492c:	add	x9, x20, x24
    4930:	add	w8, w8, #0x1
    4934:	cmp	x9, #0x1
    4938:	stur	w8, [x29, #-152]
    493c:	b.eq	4970 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xb14>  // b.none
    4940:	ldr	w8, [x26]
    4944:	add	x24, x24, #0x1
    4948:	cmp	x24, x8
    494c:	b.cc	48f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa98>  // b.lo, b.ul, b.last
    4950:	b	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>
    4954:	sub	x0, x29, #0xa0
    4958:	mov	w3, #0x8                   	// #8
    495c:	mov	x1, x23
    4960:	mov	x2, xzr
    4964:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
    4968:	ldur	w8, [x29, #-152]
    496c:	b	4918 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xabc>
    4970:	ldr	x0, [x19, #8]
    4974:	ldr	x8, [x0]
    4978:	ldr	x8, [x8, #48]
    497c:	blr	x8
    4980:	ldr	x10, [x19, #168]
    4984:	ldr	w8, [sp, #96]
    4988:	ldr	w9, [x10, #24]
    498c:	cmp	w9, w8
    4990:	b.ls	6914 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ab8>  // b.plast
    4994:	ldr	x17, [x10]
    4998:	ldr	x9, [x0, #24]
    499c:	ldrb	w15, [x19, #224]
    49a0:	ldrb	w12, [x19, #225]
    49a4:	add	x14, x17, x8, lsl #6
    49a8:	ldp	w10, w13, [x19, #228]
    49ac:	ldr	w11, [x19, #236]
    49b0:	ldr	x16, [x14, #16]!
    49b4:	ldr	x21, [x29, #8]
    49b8:	sub	w18, w8, #0xae1
    49bc:	cmp	w18, #0x4
    49c0:	b.cc	4a9c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc40>  // b.lo, b.ul, b.last
    49c4:	sub	w18, w8, #0xae5
    49c8:	cmp	w18, #0x4
    49cc:	b.cs	4d70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf14>  // b.hs, b.nlast
    49d0:	ands	w16, w16, #0x7
    49d4:	b.eq	696c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b10>  // b.none
    49d8:	ldr	w18, [sp, #120]
    49dc:	cbz	w18, 68d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a78>
    49e0:	ldr	x0, [sp, #112]
    49e4:	ldrb	w1, [x0]
    49e8:	cmp	w1, #0x1
    49ec:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    49f0:	cmp	w18, #0x1
    49f4:	b.ls	68d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a78>  // b.plast
    49f8:	ldrb	w18, [x0, #16]
    49fc:	cmp	w18, #0x1
    4a00:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    4a04:	ldr	w18, [x0, #8]
    4a08:	ldr	w2, [x0, #24]
    4a0c:	b	4ad8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc7c>
    4a10:	ldr	q0, [sp, #64]
    4a14:	ldr	x8, [sp, #80]
    4a18:	ldr	x20, [x23]
    4a1c:	mov	w24, w0
    4a20:	add	x2, sp, #0x60
    4a24:	add	x4, sp, #0x40
    4a28:	mov	x0, x19
    4a2c:	mov	x1, x22
    4a30:	mov	x3, x23
    4a34:	mov	w5, w21
    4a38:	mov	w6, wzr
    4a3c:	stur	q0, [x29, #-160]
    4a40:	stur	x8, [x29, #-144]
    4a44:	bl	120d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>
    4a48:	mov	w25, w0
    4a4c:	cbz	w0, 4b3c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xce0>
    4a50:	sub	w8, w25, #0x7
    4a54:	cmp	w8, #0x8d
    4a58:	b.cs	4bb8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd5c>  // b.hs, b.nlast
    4a5c:	ldr	x9, [x23]
    4a60:	ldr	w8, [x26]
    4a64:	cmp	x9, x8
    4a68:	b.cs	4c74 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe18>  // b.hs, b.nlast
    4a6c:	ldr	x8, [x22]
    4a70:	ldr	x0, [x8, x9, lsl #3]
    4a74:	ldr	x8, [x0]
    4a78:	ldr	x8, [x8, #72]
    4a7c:	blr	x8
    4a80:	ldr	x8, [x29, #8]
    4a84:	ldr	x3, [x23]
    4a88:	cmp	x0, #0x0
    4a8c:	mov	w2, w25
    4a90:	csel	x1, x8, x0, eq  // eq = none
    4a94:	mov	x0, x19
    4a98:	b	4fa0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1144>
    4a9c:	ands	w16, w16, #0x7
    4aa0:	b.eq	698c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b30>  // b.none
    4aa4:	ldr	w18, [sp, #120]
    4aa8:	cbz	w18, 68d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a78>
    4aac:	ldr	x0, [sp, #112]
    4ab0:	ldrb	w1, [x0]
    4ab4:	cmp	w1, #0x1
    4ab8:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    4abc:	cmp	w18, #0x2
    4ac0:	b.ls	68d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a78>  // b.plast
    4ac4:	ldrb	w18, [x0, #32]
    4ac8:	cmp	w18, #0x1
    4acc:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    4ad0:	ldr	w18, [x0, #8]
    4ad4:	ldr	w2, [x0, #40]
    4ad8:	mov	w1, #0x1                   	// #1
    4adc:	mov	w0, #0x100                 	// #256
    4ae0:	bfi	x0, x16, #32, #32
    4ae4:	mov	w16, w18
    4ae8:	orr	x18, x0, x1
    4aec:	bfi	x16, x2, #32, #32
    4af0:	stp	x18, x16, [x19, #224]
    4af4:	cbz	w15, 515c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1300>
    4af8:	cmp	w8, #0x1b7
    4afc:	b.eq	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.none
    4b00:	cmp	w8, #0x7be
    4b04:	b.ne	4d5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf00>  // b.any
    4b08:	sub	w9, w8, #0xf2
    4b0c:	cmp	w9, #0x13
    4b10:	b.ls	4ca8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe4c>  // b.plast
    4b14:	mov	w9, #0xffffeeb1            	// #-4431
    4b18:	add	w8, w8, w9
    4b1c:	cmp	w8, #0xd
    4b20:	b.hi	544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>  // b.pmore
    4b24:	mov	w9, #0x1                   	// #1
    4b28:	lsl	w8, w9, w8
    4b2c:	mov	w9, #0x2211                	// #8721
    4b30:	tst	w8, w9
    4b34:	b.ne	4cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xe64>  // b.any
    4b38:	b	544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>
    4b3c:	ldr	x8, [x23]
    4b40:	cmp	x8, #0x1
    4b44:	b.ne	4bdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd80>  // b.any
    4b48:	ldr	w8, [x26]
    4b4c:	cmp	w8, #0x2
    4b50:	b.cc	4bdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd80>  // b.lo, b.ul, b.last
    4b54:	ldr	x8, [x22]
    4b58:	ldr	x0, [x8, #8]
    4b5c:	ldr	x8, [x0]
    4b60:	ldr	x8, [x8, #32]
    4b64:	blr	x8
    4b68:	tbz	w0, #0, 4bdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd80>
    4b6c:	ldr	w8, [x26]
    4b70:	cmp	w8, #0x1
    4b74:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    4b78:	ldr	x8, [x22]
    4b7c:	ldr	x8, [x8, #8]
    4b80:	ldr	w9, [x8, #48]
    4b84:	cmp	w9, #0x6
    4b88:	b.ne	6a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bdc>  // b.any
    4b8c:	ldrb	w8, [x8, #84]
    4b90:	cbz	w8, 4bdc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xd80>
    4b94:	str	x20, [x23]
    4b98:	ldur	q0, [x29, #-160]
    4b9c:	ldur	x8, [x29, #-144]
    4ba0:	mov	w25, w24
    4ba4:	str	q0, [sp, #64]
    4ba8:	str	x8, [sp, #80]
    4bac:	sub	w8, w25, #0x7
    4bb0:	cmp	w8, #0x8d
    4bb4:	b.cc	4a5c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc00>  // b.lo, b.ul, b.last
    4bb8:	cmp	w25, #0x4
    4bbc:	b.hi	6934 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2ad8>  // b.pmore
    4bc0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4bc4:	mov	w8, w25
    4bc8:	add	x9, x9, #0x0
    4bcc:	adr	x10, 48cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa70>
    4bd0:	ldrh	w11, [x9, x8, lsl #1]
    4bd4:	add	x10, x10, x11, lsl #2
    4bd8:	br	x10
    4bdc:	ldr	x8, [x23]
    4be0:	cmn	x8, #0x1
    4be4:	b.eq	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.none
    4be8:	ldr	w9, [x26]
    4bec:	cmp	x8, x9
    4bf0:	b.cs	4da0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf44>  // b.hs, b.nlast
    4bf4:	ldr	x9, [x22]
    4bf8:	ldr	x0, [x9, x8, lsl #3]
    4bfc:	ldr	x8, [x0]
    4c00:	ldr	x8, [x8, #72]
    4c04:	blr	x8
    4c08:	ldr	x8, [x23]
    4c0c:	ldr	w9, [x22, #8]
    4c10:	ldr	x10, [x29, #8]
    4c14:	cmp	x0, #0x0
    4c18:	csel	x20, x10, x0, eq  // eq = none
    4c1c:	cmp	x8, x9
    4c20:	b.cs	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.hs, b.nlast
    4c24:	ldr	x9, [x22]
    4c28:	ldr	x0, [x9, x8, lsl #3]
    4c2c:	ldr	x8, [x0]
    4c30:	ldr	x8, [x8, #32]
    4c34:	blr	x8
    4c38:	ldr	x3, [x23]
    4c3c:	tbz	w0, #0, 4f94 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1138>
    4c40:	ldr	w8, [x26]
    4c44:	cmp	x3, x8
    4c48:	b.cs	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.hs, b.nlast
    4c4c:	ldr	x8, [x22]
    4c50:	ldr	x8, [x8, x3, lsl #3]
    4c54:	ldr	w9, [x8, #48]
    4c58:	cmp	w9, #0x6
    4c5c:	b.ne	6a38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bdc>  // b.any
    4c60:	ldrb	w8, [x8, #84]
    4c64:	cmp	w8, #0x0
    4c68:	mov	w8, #0x6                   	// #6
    4c6c:	csel	w2, wzr, w8, eq  // eq = none
    4c70:	b	4f98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x113c>
    4c74:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4c78:	add	x9, x9, #0x0
    4c7c:	mov	w10, #0x103                 	// #259
    4c80:	stp	x9, xzr, [x29, #-160]
    4c84:	sturh	w10, [x29, #-144]
    4c88:	cbz	w8, 69ac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b50>
    4c8c:	ldr	x9, [x22]
    4c90:	add	x8, x9, x8, lsl #3
    4c94:	ldur	x0, [x8, #-8]
    4c98:	ldr	x8, [x0]
    4c9c:	ldr	x8, [x8, #80]
    4ca0:	blr	x8
    4ca4:	b	4dc0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf64>
    4ca8:	mov	w10, #0x1                   	// #1
    4cac:	lsl	w9, w10, w9
    4cb0:	mov	w10, #0x8011                	// #32785
    4cb4:	movk	w10, #0x8, lsl #16
    4cb8:	tst	w9, w10
    4cbc:	b.eq	4b14 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcb8>  // b.none
    4cc0:	ldr	w8, [sp, #120]
    4cc4:	cmp	w8, #0x2
    4cc8:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    4ccc:	ldr	x8, [sp, #112]
    4cd0:	ldrb	w9, [x8, #32]
    4cd4:	cmp	w9, #0x4
    4cd8:	b.ne	544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>  // b.any
    4cdc:	ldr	x0, [x8, #40]
    4ce0:	cbz	x0, 69ec <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b90>
    4ce4:	ldr	w8, [x0]
    4ce8:	cmp	w8, #0x4
    4cec:	b.ne	4df4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xf98>  // b.any
    4cf0:	ldr	x9, [x0, #16]
    4cf4:	cbz	x9, 6a78 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c1c>
    4cf8:	ldr	w20, [x0, #24]
    4cfc:	ldr	w8, [x9]
    4d00:	mov	x0, x9
    4d04:	cmp	w8, #0x2
    4d08:	b.eq	4e00 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfa4>  // b.none
    4d0c:	sub	x1, x29, #0x30
    4d10:	mov	x2, xzr
    4d14:	mov	x3, xzr
    4d18:	stp	xzr, xzr, [x29, #-48]
    4d1c:	stur	wzr, [x29, #-24]
    4d20:	stur	xzr, [x29, #-32]
    4d24:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
    4d28:	tbz	w0, #0, 544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>
    4d2c:	ldur	x8, [x29, #-40]
    4d30:	cbnz	x8, 544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>
    4d34:	ldur	x8, [x29, #-48]
    4d38:	cmp	w20, #0xfff
    4d3c:	b.ne	4d44 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xee8>  // b.any
    4d40:	cbz	x8, 544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>
    4d44:	cbz	x8, 4e1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfc0>
    4d48:	ldrh	w8, [x8, #16]
    4d4c:	cmp	w20, #0xfff
    4d50:	b.eq	4e04 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfa8>  // b.none
    4d54:	cbnz	w8, 544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>
    4d58:	b	4e04 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfa8>
    4d5c:	ldr	x16, [x14]
    4d60:	tbnz	w16, #3, 4e9c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1040>
    4d64:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    4d68:	add	x8, x8, #0x0
    4d6c:	b	5424 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15c8>
    4d70:	cmp	w8, #0xae9
    4d74:	b.ne	4f88 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x112c>  // b.any
    4d78:	ldr	w16, [sp, #120]
    4d7c:	cbz	w16, 68d4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a78>
    4d80:	ldr	x16, [sp, #112]
    4d84:	ldrb	w18, [x16]
    4d88:	cmp	w18, #0x1
    4d8c:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    4d90:	ldr	w18, [x16, #8]
    4d94:	mov	x0, xzr
    4d98:	mov	w1, #0x1                   	// #1
    4d9c:	b	4ae0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc84>
    4da0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    4da4:	add	x8, x8, #0x0
    4da8:	mov	w9, #0x103                 	// #259
    4dac:	stp	x8, xzr, [x29, #-160]
    4db0:	sturh	w9, [x29, #-144]
    4db4:	ldr	x0, [x19, #8]
    4db8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    4dbc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    4dc0:	ldr	x1, [x29, #8]
    4dc4:	cmp	x1, #0x0
    4dc8:	cset	w8, ne  // ne = any
    4dcc:	cmp	x0, #0x0
    4dd0:	cset	w9, ne  // ne = any
    4dd4:	cmp	w8, w9
    4dd8:	b.ne	694c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2af0>  // b.any
    4ddc:	mov	x4, x0
    4de0:	ldr	x0, [x19, #8]
    4de4:	sub	x2, x29, #0xa0
    4de8:	mov	x3, x1
    4dec:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    4df0:	b	4fa8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x114c>
    4df4:	mov	w20, #0xfff                 	// #4095
    4df8:	cmp	w8, #0x2
    4dfc:	b.ne	4d0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xeb0>  // b.any
    4e00:	ldrh	w8, [x0, #16]
    4e04:	orr	w8, w8, #0x2
    4e08:	cmp	w8, #0x16
    4e0c:	b.ne	4e1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfc0>  // b.any
    4e10:	ldr	w8, [sp, #96]
    4e14:	cmp	w8, #0x105
    4e18:	b.eq	544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>  // b.none
    4e1c:	cmp	w20, #0x39
    4e20:	b.hi	4e40 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xfe4>  // b.pmore
    4e24:	mov	w8, w20
    4e28:	mov	w9, #0x1                   	// #1
    4e2c:	lsl	x8, x9, x8
    4e30:	mov	x9, #0x3a000000000         	// #3985729650688
    4e34:	movk	x9, #0x2a0, lsl #48
    4e38:	tst	x8, x9
    4e3c:	b.ne	4e60 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1004>  // b.any
    4e40:	sub	w8, w20, #0x121
    4e44:	cmp	w8, #0x6
    4e48:	b.hi	4e70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1014>  // b.pmore
    4e4c:	mov	w9, #0x1                   	// #1
    4e50:	lsl	w8, w9, w8
    4e54:	mov	w9, #0x51                  	// #81
    4e58:	tst	w8, w9
    4e5c:	b.eq	4e70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1014>  // b.none
    4e60:	ldr	w8, [sp, #96]
    4e64:	orr	w8, w8, #0x4
    4e68:	cmp	w8, #0x105
    4e6c:	b.eq	544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>  // b.none
    4e70:	ldur	w8, [x29, #-152]
    4e74:	cbz	w8, 6ad8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c7c>
    4e78:	ldur	x9, [x29, #-160]
    4e7c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    4e80:	add	x10, x10, #0x0
    4e84:	mov	w11, #0x103                 	// #259
    4e88:	add	x8, x9, x8, lsl #3
    4e8c:	ldur	x1, [x8, #-8]
    4e90:	stp	x10, xzr, [x29, #-48]
    4e94:	sturh	w11, [x29, #-32]
    4e98:	b	5640 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17e4>
    4e9c:	ldr	w15, [sp, #120]
    4ea0:	cbz	w15, 68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>
    4ea4:	ldr	x14, [sp, #112]
    4ea8:	ldrb	w18, [x14]
    4eac:	cmp	w18, #0x1
    4eb0:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    4eb4:	ldr	w18, [x14, #8]
    4eb8:	cmp	w18, w13
    4ebc:	b.ne	4fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1154>  // b.any
    4ec0:	cmp	w15, #0x2
    4ec4:	b.cc	50bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1260>  // b.lo, b.ul, b.last
    4ec8:	add	x18, x17, x8, lsl #6
    4ecc:	sub	w0, w13, #0xf5
    4ed0:	add	x17, x18, #0x2
    4ed4:	cmp	w0, #0x20
    4ed8:	add	x18, x18, #0x28
    4edc:	b.cs	5054 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x11f8>  // b.hs, b.nlast
    4ee0:	add	x0, x14, #0x18
    4ee4:	mov	w1, #0x1                   	// #1
    4ee8:	mov	w2, #0xc                   	// #12
    4eec:	b	4f04 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10a8>
    4ef0:	add	x1, x1, #0x1
    4ef4:	add	x2, x2, #0x8
    4ef8:	cmp	x15, x1
    4efc:	add	x0, x0, #0x10
    4f00:	b.eq	50bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1260>  // b.none
    4f04:	ldurb	w3, [x0, #-8]
    4f08:	cmp	w3, #0x1
    4f0c:	b.ne	4ef0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1094>  // b.any
    4f10:	ldrh	w3, [x17]
    4f14:	cmp	x1, x3
    4f18:	b.cs	4f28 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x10cc>  // b.hs, b.nlast
    4f1c:	ldr	x3, [x18]
    4f20:	ldrb	w3, [x3, x2]
    4f24:	tbnz	w3, #0, 4ef0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1094>
    4f28:	ldr	w3, [x0]
    4f2c:	cmp	w13, w3
    4f30:	b.eq	4f70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1114>  // b.none
    4f34:	add	w4, w3, #0x7c
    4f38:	cmp	w4, w13
    4f3c:	b.eq	4f70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1114>  // b.none
    4f40:	add	w4, w3, #0xcc
    4f44:	cmp	w4, w13
    4f48:	b.eq	4f70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1114>  // b.none
    4f4c:	add	w4, w3, #0x5c
    4f50:	cmp	w4, w13
    4f54:	b.eq	4f70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1114>  // b.none
    4f58:	add	w4, w3, #0xec
    4f5c:	cmp	w4, w13
    4f60:	b.eq	4f70 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1114>  // b.none
    4f64:	add	w3, w3, #0xac
    4f68:	cmp	w3, w13
    4f6c:	b.ne	4ef0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1094>  // b.any
    4f70:	ldur	w8, [x29, #-152]
    4f74:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    4f78:	ldur	x8, [x29, #-160]
    4f7c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4f80:	add	x9, x9, #0x0
    4f84:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    4f88:	mov	x0, xzr
    4f8c:	mov	x1, xzr
    4f90:	b	4ae0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xc84>
    4f94:	mov	w2, wzr
    4f98:	mov	x0, x19
    4f9c:	mov	x1, x20
    4fa0:	mov	x4, x22
    4fa4:	bl	132d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>
    4fa8:	mov	w28, w0
    4fac:	b	5674 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1818>
    4fb0:	ldur	w8, [x29, #-152]
    4fb4:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    4fb8:	ldur	x8, [x29, #-160]
    4fbc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    4fc0:	add	x9, x9, #0x0
    4fc4:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    4fc8:	ldr	x9, [sp, #168]
    4fcc:	cbz	x9, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    4fd0:	ldr	w10, [x9]
    4fd4:	ldur	x8, [x29, #-88]
    4fd8:	cmp	w10, #0x1
    4fdc:	csel	x9, x9, xzr, eq  // eq = none
    4fe0:	cbz	x8, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    4fe4:	cmp	w10, #0x1
    4fe8:	mov	w21, wzr
    4fec:	b.ne	43e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x588>  // b.any
    4ff0:	ldr	w10, [x8]
    4ff4:	cmp	w10, #0x1
    4ff8:	b.ne	43e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x588>  // b.any
    4ffc:	stp	x16, x15, [sp, #24]
    5000:	ldr	x10, [x0]
    5004:	ldr	x28, [x8, #16]
    5008:	ldr	x21, [x9, #16]
    500c:	ldr	x8, [x10, #56]
    5010:	blr	x8
    5014:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    5018:	ldr	x8, [x8]
    501c:	mov	w9, w0
    5020:	lsr	x9, x9, #3
    5024:	ldrh	w10, [x8, #502]
    5028:	cmp	w9, w10
    502c:	b.cs	59a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b48>  // b.hs, b.nlast
    5030:	ldr	x8, [x8, #488]
    5034:	mov	w10, #0x40                  	// #64
    5038:	ldrb	w8, [x8, x9]
    503c:	and	w9, w0, #0x7
    5040:	lsr	w8, w8, w9
    5044:	tst	w8, #0x1
    5048:	mov	w8, #0x20                  	// #32
    504c:	csel	x11, x8, x10, eq  // eq = none
    5050:	b	59a8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b4c>
    5054:	add	x13, x14, #0x10
    5058:	mov	w0, #0x1                   	// #1
    505c:	mov	w1, #0xc                   	// #12
    5060:	b	5078 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x121c>
    5064:	add	x0, x0, #0x1
    5068:	add	x1, x1, #0x8
    506c:	cmp	x15, x0
    5070:	add	x13, x13, #0x10
    5074:	b.eq	50bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1260>  // b.none
    5078:	ldrb	w2, [x13]
    507c:	cmp	w2, #0x1
    5080:	b.ne	5064 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1208>  // b.any
    5084:	ldrh	w2, [x17]
    5088:	cmp	x0, x2
    508c:	b.cs	509c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1240>  // b.hs, b.nlast
    5090:	ldr	x2, [x18]
    5094:	ldrb	w2, [x2, x1]
    5098:	tbnz	w2, #0, 5064 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1208>
    509c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    50a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    50a4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    50a8:	add	x0, x0, #0x0
    50ac:	add	x1, x1, #0x0
    50b0:	add	x3, x3, #0x0
    50b4:	mov	w2, #0xf2a                 	// #3882
    50b8:	bl	0 <__assert_fail>
    50bc:	cbz	w12, 515c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1300>
    50c0:	cmp	w15, #0x2
    50c4:	b.cc	541c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15c0>  // b.lo, b.ul, b.last
    50c8:	adrp	x12, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    50cc:	ldr	x12, [x12]
    50d0:	add	x18, x14, #0x18
    50d4:	ldr	x13, [x12, #72]
    50d8:	ldrh	w17, [x12, #86]
    50dc:	mov	w12, #0x1                   	// #1
    50e0:	b	50f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1298>
    50e4:	add	x12, x12, #0x1
    50e8:	cmp	x15, x12
    50ec:	add	x18, x18, #0x10
    50f0:	b.eq	541c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15c0>  // b.none
    50f4:	ldurb	w0, [x18, #-8]
    50f8:	cmp	w0, #0x1
    50fc:	b.ne	50e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1288>  // b.any
    5100:	ldr	w0, [x18]
    5104:	lsr	x1, x0, #3
    5108:	cmp	w1, w17
    510c:	b.cs	50e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1288>  // b.hs, b.nlast
    5110:	ldrb	w1, [x13, x1]
    5114:	and	w0, w0, #0x7
    5118:	lsr	w0, w1, w0
    511c:	tbz	w0, #0, 50e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1288>
    5120:	ands	x13, x16, #0x7
    5124:	b.eq	541c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15c0>  // b.none
    5128:	cmp	w15, w12
    512c:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5130:	and	x12, x12, #0xffffffff
    5134:	lsl	x15, x12, #4
    5138:	ldrb	w15, [x14, x15]
    513c:	cmp	w15, #0x1
    5140:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5144:	add	x12, x14, x12, lsl #4
    5148:	ldr	w12, [x12, #8]
    514c:	cmp	w12, w11
    5150:	b.ne	6344 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24e8>  // b.any
    5154:	cmp	x13, x10
    5158:	b.ne	6350 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24f4>  // b.any
    515c:	sub	w10, w8, #0x9a6
    5160:	cmp	w10, #0x5e
    5164:	b.hi	51d8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x137c>  // b.pmore
    5168:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    516c:	add	x11, x11, #0x0
    5170:	adr	x12, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    5174:	ldrh	w13, [x11, x10, lsl #1]
    5178:	add	x12, x12, x13, lsl #2
    517c:	br	x12
    5180:	ldr	w11, [sp, #120]
    5184:	cmp	w11, #0x1
    5188:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    518c:	ldr	x10, [sp, #112]
    5190:	ldrb	w12, [x10, #16]
    5194:	cmp	w12, #0x1
    5198:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    519c:	cmp	w11, #0x2
    51a0:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    51a4:	ldrb	w11, [x10, #32]
    51a8:	cmp	w11, #0x1
    51ac:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    51b0:	ldr	w11, [x10, #24]
    51b4:	ldr	w10, [x10, #40]
    51b8:	cmp	w11, w10
    51bc:	b.ne	5258 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13fc>  // b.any
    51c0:	ldur	w8, [x29, #-152]
    51c4:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    51c8:	ldur	x8, [x29, #-160]
    51cc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    51d0:	add	x9, x9, #0x0
    51d4:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    51d8:	mov	w10, #0xffffef3b            	// #-4293
    51dc:	add	w10, w8, w10
    51e0:	cmp	w10, #0x6a
    51e4:	b.hi	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.pmore
    51e8:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    51ec:	add	x11, x11, #0x0
    51f0:	adr	x12, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    51f4:	ldrh	w13, [x11, x10, lsl #1]
    51f8:	add	x12, x12, x13, lsl #2
    51fc:	br	x12
    5200:	ldr	w11, [sp, #120]
    5204:	cmp	w11, #0x1
    5208:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    520c:	ldr	x10, [sp, #112]
    5210:	ldrb	w12, [x10, #16]
    5214:	cmp	w12, #0x1
    5218:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    521c:	cmp	w11, #0x2
    5220:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5224:	ldrb	w11, [x10, #32]
    5228:	cmp	w11, #0x1
    522c:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5230:	ldr	w11, [x10, #24]
    5234:	ldr	w10, [x10, #40]
    5238:	cmp	w11, w10
    523c:	b.ne	53cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1570>  // b.any
    5240:	ldur	w8, [x29, #-152]
    5244:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    5248:	ldur	x8, [x29, #-160]
    524c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5250:	add	x9, x9, #0x0
    5254:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    5258:	ldr	w12, [x9, #8]
    525c:	cmp	w12, w11
    5260:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    5264:	ldr	x12, [x9, #48]
    5268:	cbz	x12, 6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bfc>
    526c:	ldr	x9, [x9]
    5270:	mov	w13, #0x18                  	// #24
    5274:	madd	x9, x11, x13, x9
    5278:	ldr	w13, [x9, #8]
    527c:	ldrh	w9, [x12, x13, lsl #1]
    5280:	cbz	w9, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    5284:	add	w9, w9, w11
    5288:	add	x11, x12, x13, lsl #1
    528c:	add	x11, x11, #0x2
    5290:	cmp	w10, w9, uxth
    5294:	b.eq	51c0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1364>  // b.none
    5298:	ldrh	w12, [x11], #2
    529c:	add	w9, w12, w9
    52a0:	cbnz	w12, 5290 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1434>
    52a4:	b	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    52a8:	ldr	w10, [sp, #120]
    52ac:	cmp	w10, #0x1
    52b0:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    52b4:	ldr	x13, [sp, #112]
    52b8:	ldrb	w11, [x13, #16]
    52bc:	cmp	w11, #0x1
    52c0:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    52c4:	cmp	w10, #0x2
    52c8:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    52cc:	ldrb	w11, [x13, #32]
    52d0:	cmp	w11, #0x1
    52d4:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    52d8:	cmp	w10, #0x3
    52dc:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    52e0:	ldrb	w10, [x13, #48]
    52e4:	cmp	w10, #0x1
    52e8:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    52ec:	ldr	w15, [x13, #24]
    52f0:	ldr	w10, [x13, #56]
    52f4:	cmp	w15, w10
    52f8:	b.ne	54e8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x168c>  // b.any
    52fc:	ldur	w8, [x29, #-152]
    5300:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    5304:	ldur	x8, [x29, #-160]
    5308:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    530c:	add	x9, x9, #0x0
    5310:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    5314:	ldr	w10, [sp, #120]
    5318:	cbz	w10, 68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>
    531c:	ldr	x13, [sp, #112]
    5320:	ldrb	w11, [x13]
    5324:	cmp	w11, #0x1
    5328:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    532c:	cmp	w10, #0x1
    5330:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5334:	ldrb	w11, [x13, #16]
    5338:	cmp	w11, #0x1
    533c:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5340:	cmp	w10, #0x2
    5344:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5348:	ldrb	w10, [x13, #32]
    534c:	cmp	w10, #0x1
    5350:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5354:	ldr	w10, [x13, #8]
    5358:	ldr	w12, [x13, #24]
    535c:	cmp	w10, w12
    5360:	b.ne	56b4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1858>  // b.any
    5364:	ldur	w8, [x29, #-152]
    5368:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    536c:	ldur	x8, [x29, #-160]
    5370:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5374:	add	x9, x9, #0x0
    5378:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    537c:	ldr	w10, [sp, #120]
    5380:	cmp	w10, #0x1
    5384:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5388:	ldr	x9, [sp, #112]
    538c:	ldrb	w11, [x9, #16]
    5390:	cmp	w11, #0x1
    5394:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5398:	cmp	w10, #0x2
    539c:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    53a0:	ldrb	w10, [x9, #32]
    53a4:	cmp	w10, #0x1
    53a8:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    53ac:	ldr	w10, [x9, #24]
    53b0:	ldr	w9, [x9, #40]
    53b4:	cmp	w10, w9
    53b8:	b.ne	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.any
    53bc:	ldur	w8, [x29, #-152]
    53c0:	cmp	w8, #0x1
    53c4:	b.hi	5e30 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1fd4>  // b.pmore
    53c8:	b	69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    53cc:	ldr	w12, [x9, #8]
    53d0:	cmp	w12, w11
    53d4:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    53d8:	ldr	x12, [x9, #48]
    53dc:	cbz	x12, 6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bfc>
    53e0:	ldr	x9, [x9]
    53e4:	mov	w13, #0x18                  	// #24
    53e8:	madd	x9, x11, x13, x9
    53ec:	ldr	w13, [x9, #8]
    53f0:	ldrh	w9, [x12, x13, lsl #1]
    53f4:	cbz	w9, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    53f8:	add	w9, w9, w11
    53fc:	add	x11, x12, x13, lsl #1
    5400:	add	x11, x11, #0x2
    5404:	cmp	w10, w9, uxth
    5408:	b.eq	5240 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13e4>  // b.none
    540c:	ldrh	w12, [x11], #2
    5410:	add	w9, w12, w9
    5414:	cbnz	w12, 5404 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15a8>
    5418:	b	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    541c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5420:	add	x8, x8, #0x0
    5424:	mov	w9, #0x103                 	// #259
    5428:	stp	x8, xzr, [x29, #-48]
    542c:	sturh	w9, [x29, #-32]
    5430:	ldr	x0, [x19, #8]
    5434:	sub	x2, x29, #0x30
    5438:	mov	x1, x21
    543c:	mov	x3, xzr
    5440:	mov	x4, xzr
    5444:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    5448:	tbnz	w0, #0, 5658 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17fc>
    544c:	mov	x0, x19
    5450:	str	x21, [sp, #104]
    5454:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    5458:	ldr	x9, [sp, #48]
    545c:	mov	x2, x0
    5460:	add	x1, sp, #0x60
    5464:	ldr	x8, [x9]
    5468:	mov	x0, x9
    546c:	ldr	x8, [x8, #1080]
    5470:	blr	x8
    5474:	mov	w28, wzr
    5478:	b	565c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1800>
    547c:	ldr	w10, [sp, #120]
    5480:	cmp	w10, #0x1
    5484:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5488:	ldr	x13, [sp, #112]
    548c:	ldrb	w11, [x13, #16]
    5490:	cmp	w11, #0x1
    5494:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5498:	cmp	w10, #0x2
    549c:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    54a0:	ldrb	w11, [x13, #32]
    54a4:	cmp	w11, #0x1
    54a8:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    54ac:	cmp	w10, #0x3
    54b0:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    54b4:	ldrb	w10, [x13, #48]
    54b8:	cmp	w10, #0x1
    54bc:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    54c0:	ldr	w15, [x13, #24]
    54c4:	ldr	w10, [x13, #56]
    54c8:	cmp	w15, w10
    54cc:	b.ne	5718 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18bc>  // b.any
    54d0:	ldur	w8, [x29, #-152]
    54d4:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    54d8:	ldur	x8, [x29, #-160]
    54dc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    54e0:	add	x9, x9, #0x0
    54e4:	b	5630 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17d4>
    54e8:	ldr	w12, [x9, #8]
    54ec:	cmp	w12, w15
    54f0:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    54f4:	ldr	x11, [x9, #48]
    54f8:	cbz	x11, 6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bfc>
    54fc:	ldr	x14, [x9]
    5500:	mov	w9, #0x18                  	// #24
    5504:	madd	x9, x15, x9, x14
    5508:	ldr	w16, [x9, #8]
    550c:	ldr	w9, [x13, #40]
    5510:	ldrh	w17, [x11, x16, lsl #1]
    5514:	cbz	w17, 5538 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16dc>
    5518:	add	w13, w17, w15
    551c:	add	x15, x11, x16, lsl #1
    5520:	add	x15, x15, #0x2
    5524:	cmp	w10, w13, uxth
    5528:	b.eq	52fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x14a0>  // b.none
    552c:	ldrh	w16, [x15], #2
    5530:	add	w13, w16, w13
    5534:	cbnz	w16, 5524 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16c8>
    5538:	cmp	w9, w10
    553c:	b.ne	57e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1988>  // b.any
    5540:	ldur	w8, [x29, #-152]
    5544:	cmp	w8, #0x1
    5548:	b.ls	69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>  // b.plast
    554c:	ldur	x8, [x29, #-160]
    5550:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5554:	add	x9, x9, #0x0
    5558:	b	5e3c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1fe0>
    555c:	ldr	w10, [sp, #120]
    5560:	cbz	w10, 68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>
    5564:	ldr	x15, [sp, #112]
    5568:	ldrb	w11, [x15]
    556c:	cmp	w11, #0x1
    5570:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5574:	cmp	w10, #0x1
    5578:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    557c:	ldrb	w11, [x15, #16]
    5580:	cmp	w11, #0x1
    5584:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5588:	cmp	w10, #0x2
    558c:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5590:	ldrb	w11, [x15, #32]
    5594:	cmp	w11, #0x1
    5598:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    559c:	cmp	w10, #0x3
    55a0:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    55a4:	ldrb	w10, [x15, #48]
    55a8:	cmp	w10, #0x1
    55ac:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    55b0:	ldr	w10, [x15, #8]
    55b4:	ldr	w16, [x15, #24]
    55b8:	cmp	w10, w16
    55bc:	b.eq	561c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17c0>  // b.none
    55c0:	ldr	w11, [x9, #8]
    55c4:	cmp	w11, w10
    55c8:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    55cc:	ldr	x11, [x9, #48]
    55d0:	cbz	x11, 6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bfc>
    55d4:	ldr	x9, [x9]
    55d8:	mov	w12, #0x18                  	// #24
    55dc:	ldr	w14, [x15, #40]
    55e0:	madd	x9, x10, x12, x9
    55e4:	ldr	w12, [x9, #8]
    55e8:	ldr	w9, [x15, #56]
    55ec:	ldrh	w13, [x11, x12, lsl #1]
    55f0:	cbz	w13, 5614 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17b8>
    55f4:	add	x17, x11, x12, lsl #1
    55f8:	add	w15, w13, w10
    55fc:	add	x17, x17, #0x2
    5600:	cmp	w16, w15, uxth
    5604:	b.eq	561c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17c0>  // b.none
    5608:	ldrh	w18, [x17], #2
    560c:	add	w15, w18, w15
    5610:	cbnz	w18, 5600 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17a4>
    5614:	cmp	w10, w14
    5618:	b.ne	5e48 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1fec>  // b.any
    561c:	ldur	w8, [x29, #-152]
    5620:	cbz	w8, 69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>
    5624:	ldur	x8, [x29, #-160]
    5628:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    562c:	add	x9, x9, #0x0
    5630:	mov	w10, #0x103                 	// #259
    5634:	ldr	x1, [x8]
    5638:	stp	x9, xzr, [x29, #-48]
    563c:	sturh	w10, [x29, #-32]
    5640:	ldr	x0, [x19, #8]
    5644:	sub	x2, x29, #0x30
    5648:	mov	x3, xzr
    564c:	mov	x4, xzr
    5650:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    5654:	tbz	w0, #0, 544c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15f0>
    5658:	mov	w28, #0x1                   	// #1
    565c:	ldur	x0, [x29, #-160]
    5660:	sub	x8, x29, #0xa0
    5664:	add	x8, x8, #0x10
    5668:	cmp	x0, x8
    566c:	b.eq	5674 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1818>  // b.none
    5670:	bl	0 <free>
    5674:	ldr	x0, [sp, #112]
    5678:	add	x8, x27, #0x10
    567c:	add	x8, x8, #0x10
    5680:	cmp	x0, x8
    5684:	b.eq	568c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1830>  // b.none
    5688:	bl	0 <free>
    568c:	and	w0, w28, #0x1
    5690:	add	sp, sp, #0x1a0
    5694:	ldp	x20, x19, [sp, #96]
    5698:	ldp	x22, x21, [sp, #80]
    569c:	ldp	x24, x23, [sp, #64]
    56a0:	ldp	x26, x25, [sp, #48]
    56a4:	ldp	x28, x27, [sp, #32]
    56a8:	ldp	x29, x30, [sp, #16]
    56ac:	ldr	d8, [sp], #112
    56b0:	ret
    56b4:	ldr	w11, [x9, #8]
    56b8:	cmp	w11, w10
    56bc:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    56c0:	ldr	x11, [x9, #48]
    56c4:	cbz	x11, 6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bfc>
    56c8:	ldr	x9, [x9]
    56cc:	mov	w14, #0x18                  	// #24
    56d0:	madd	x9, x10, x14, x9
    56d4:	ldr	w14, [x9, #8]
    56d8:	ldr	w9, [x13, #40]
    56dc:	ldrh	w15, [x11, x14, lsl #1]
    56e0:	cbz	w15, 5704 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18a8>
    56e4:	add	x16, x11, x14, lsl #1
    56e8:	add	w13, w15, w10
    56ec:	add	x16, x16, #0x2
    56f0:	cmp	w12, w13, uxth
    56f4:	b.eq	5364 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1508>  // b.none
    56f8:	ldrh	w17, [x16], #2
    56fc:	add	w13, w17, w13
    5700:	cbnz	w17, 56f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1894>
    5704:	cmp	w10, w9
    5708:	b.ne	597c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b20>  // b.any
    570c:	cmp	w9, #0x5
    5710:	b.eq	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.none
    5714:	b	5364 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1508>
    5718:	ldr	w12, [x9, #8]
    571c:	cmp	w12, w15
    5720:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    5724:	ldr	x11, [x9, #48]
    5728:	cbz	x11, 6a58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bfc>
    572c:	ldr	x14, [x9]
    5730:	mov	w9, #0x18                  	// #24
    5734:	madd	x9, x15, x9, x14
    5738:	ldr	w16, [x9, #8]
    573c:	ldr	w9, [x13, #40]
    5740:	ldrh	w17, [x11, x16, lsl #1]
    5744:	cbz	w17, 5768 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x190c>
    5748:	add	w13, w17, w15
    574c:	add	x15, x11, x16, lsl #1
    5750:	add	x15, x15, #0x2
    5754:	cmp	w10, w13, uxth
    5758:	b.eq	54d0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1674>  // b.none
    575c:	ldrh	w16, [x15], #2
    5760:	add	w13, w16, w13
    5764:	cbnz	w16, 5754 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18f8>
    5768:	cmp	w9, w10
    576c:	b.ne	5dac <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f50>  // b.any
    5770:	ldur	w8, [x29, #-152]
    5774:	cmp	w8, #0x1
    5778:	b.ls	69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>  // b.plast
    577c:	ldur	x8, [x29, #-160]
    5780:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5784:	add	x9, x9, #0x0
    5788:	b	5e3c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1fe0>
    578c:	ldr	w8, [x27, #48]
    5790:	cmp	w8, #0x6
    5794:	b.ne	6874 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a18>  // b.any
    5798:	ldr	x9, [x27, #72]
    579c:	ldr	w8, [x27, #80]
    57a0:	mov	w8, w8
    57a4:	stp	x9, x8, [x29, #-160]
    57a8:	add	x8, sp, #0x60
    57ac:	sub	x0, x29, #0xa0
    57b0:	add	x21, sp, #0x60
    57b4:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    57b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    57bc:	add	x1, x1, #0x0
    57c0:	add	x0, sp, #0x60
    57c4:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
    57c8:	cbz	w0, 5824 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19c8>
    57cc:	ldr	x0, [sp, #96]
    57d0:	add	x8, x21, #0x10
    57d4:	cmp	x0, x8
    57d8:	b.eq	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>  // b.none
    57dc:	bl	0 <_ZdlPv>
    57e0:	b	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    57e4:	cmp	w12, w9
    57e8:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    57ec:	mov	w12, #0x18                  	// #24
    57f0:	madd	x12, x9, x12, x14
    57f4:	ldr	w12, [x12, #8]
    57f8:	ldrh	w13, [x11, x12, lsl #1]
    57fc:	cbz	w13, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    5800:	add	x11, x11, x12, lsl #1
    5804:	add	w9, w13, w9
    5808:	add	x11, x11, #0x2
    580c:	cmp	w10, w9, uxth
    5810:	b.eq	5540 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x16e4>  // b.none
    5814:	ldrh	w12, [x11], #2
    5818:	add	w9, w12, w9
    581c:	cbnz	w12, 580c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x19b0>
    5820:	b	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    5824:	ldr	w8, [x20, #48]
    5828:	cbnz	w8, 6ab8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c5c>
    582c:	ldr	x8, [x20, #72]
    5830:	cbz	x8, 6a98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c3c>
    5834:	ldr	w9, [x8]
    5838:	cmp	w9, #0x1
    583c:	b.ne	6af8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2c9c>  // b.any
    5840:	ldr	x0, [sp, #96]
    5844:	ldr	x20, [x8, #16]
    5848:	add	x8, sp, #0x60
    584c:	add	x8, x8, #0x10
    5850:	cmp	x0, x8
    5854:	b.eq	585c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1a00>  // b.none
    5858:	bl	0 <_ZdlPv>
    585c:	cbnz	x20, 4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    5860:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5864:	add	x8, x8, #0x0
    5868:	mov	w9, #0x103                 	// #259
    586c:	stp	x8, xzr, [sp, #96]
    5870:	strh	w9, [sp, #112]
    5874:	ldr	x0, [x19, #8]
    5878:	ldr	x20, [x29, #8]
    587c:	add	x2, sp, #0x60
    5880:	mov	x3, xzr
    5884:	ldr	x8, [x0]
    5888:	mov	x1, x20
    588c:	mov	x4, xzr
    5890:	ldr	x8, [x8, #120]
    5894:	blr	x8
    5898:	ldr	x8, [x25]
    589c:	mov	x0, x25
    58a0:	ldr	x8, [x8, #32]
    58a4:	blr	x8
    58a8:	ldr	x8, [x19, #8]
    58ac:	mov	w21, w0
    58b0:	ldr	x9, [x8]
    58b4:	mov	x0, x8
    58b8:	ldr	x9, [x9, #48]
    58bc:	blr	x9
    58c0:	mov	x25, x0
    58c4:	mov	w0, #0x70                  	// #112
    58c8:	bl	0 <_Znwm>
    58cc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    58d0:	mov	x8, x0
    58d4:	add	x9, x9, #0x0
    58d8:	strb	wzr, [x8, #32]!
    58dc:	str	x9, [x0]
    58e0:	mov	w9, #0x6                   	// #6
    58e4:	str	w9, [x0, #48]
    58e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    58ec:	add	x9, x9, #0x0
    58f0:	stp	x20, x9, [x0, #64]
    58f4:	mov	w9, #0x4                   	// #4
    58f8:	str	x25, [x0, #104]
    58fc:	str	w9, [x0, #80]
    5900:	strb	wzr, [x0, #84]
    5904:	stp	x8, xzr, [x0, #16]
    5908:	str	x20, [x0, #56]
    590c:	ldr	w9, [x26]
    5910:	tst	w21, #0x1
    5914:	mov	w8, #0x1                   	// #1
    5918:	cinc	x8, x8, eq  // eq = none
    591c:	cmp	x8, x9
    5920:	b.cs	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.hs, b.nlast
    5924:	ldr	x9, [x22]
    5928:	lsl	x10, x8, #3
    592c:	ldr	x8, [x9, x10]
    5930:	str	x0, [x9, x10]
    5934:	cbnz	x8, 4868 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa0c>
    5938:	b	4878 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xa1c>
    593c:	ldr	x12, [x11, #88]
    5940:	ldur	q1, [x11, #72]
    5944:	str	x12, [sp, #184]
    5948:	b	3f98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13c>
    594c:	ldr	x12, [x11, #88]
    5950:	ldur	q0, [x11, #72]
    5954:	stur	x12, [x29, #-72]
    5958:	b	437c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x520>
    595c:	ldr	w12, [x11, #88]
    5960:	ldur	q1, [x11, #72]
    5964:	str	w12, [sp, #184]
    5968:	b	3f98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x13c>
    596c:	ldr	w12, [x11, #88]
    5970:	ldur	q0, [x11, #72]
    5974:	stur	w12, [x29, #-72]
    5978:	b	437c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x520>
    597c:	cbz	w15, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    5980:	add	x11, x11, x14, lsl #1
    5984:	add	w10, w15, w10
    5988:	add	x11, x11, #0x2
    598c:	cmp	w9, w10, uxth
    5990:	b.eq	570c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x18b0>  // b.none
    5994:	ldrh	w12, [x11], #2
    5998:	add	w10, w12, w10
    599c:	cbnz	w12, 598c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b30>
    59a0:	b	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    59a4:	mov	w11, #0x20                  	// #32
    59a8:	cmp	x21, x11
    59ac:	b.cs	59f0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1b94>  // b.hs, b.nlast
    59b0:	sub	x28, x28, #0x1
    59b4:	cmp	x28, x11
    59b8:	b.cs	5e80 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2024>  // b.hs, b.nlast
    59bc:	cmp	x11, #0x20
    59c0:	mov	w9, #0x3f                  	// #63
    59c4:	mov	w10, #0x1f                  	// #31
    59c8:	neg	x8, x21
    59cc:	csel	x9, x10, x9, eq  // eq = none
    59d0:	and	x21, x9, x8
    59d4:	sub	x8, x21, #0x1
    59d8:	cmp	x8, x28
    59dc:	b.cs	5f1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x20c0>  // b.hs, b.nlast
    59e0:	ldur	x1, [x29, #-104]
    59e4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    59e8:	add	x8, x8, #0x0
    59ec:	b	5e8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2030>
    59f0:	ldr	x1, [sp, #152]
    59f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    59f8:	add	x8, x8, #0x0
    59fc:	b	5e8c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2030>
    5a00:	ldr	x3, [x23]
    5a04:	ldr	x1, [x29, #8]
    5a08:	mov	w2, #0x3                   	// #3
    5a0c:	mov	x0, x19
    5a10:	b	4fa0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1144>
    5a14:	ldr	x8, [sp, #64]
    5a18:	cbnz	x8, 5a2c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1bd0>
    5a1c:	ldr	x8, [sp, #72]
    5a20:	cbnz	x8, 5a2c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1bd0>
    5a24:	ldr	x8, [sp, #80]
    5a28:	cbz	x8, 6b18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cbc>
    5a2c:	sub	x8, x29, #0xa0
    5a30:	mov	w9, #0x15                  	// #21
    5a34:	add	x20, x8, #0x10
    5a38:	sub	x0, x29, #0xa0
    5a3c:	sub	x1, x29, #0x30
    5a40:	mov	x2, xzr
    5a44:	stur	x20, [x29, #-160]
    5a48:	stur	x9, [x29, #-48]
    5a4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
    5a50:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5a54:	add	x9, x9, #0x0
    5a58:	ldur	x8, [x29, #-48]
    5a5c:	ldur	x10, [x9, #13]
    5a60:	ldr	q0, [x9]
    5a64:	stur	x0, [x29, #-160]
    5a68:	stur	x8, [x29, #-144]
    5a6c:	stur	x10, [x0, #13]
    5a70:	str	q0, [x0]
    5a74:	ldur	x9, [x29, #-160]
    5a78:	adrp	x21, 0 <LLVMInitializeAArch64AsmParser>
    5a7c:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
    5a80:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    5a84:	mov	x23, xzr
    5a88:	add	x24, sp, #0x40
    5a8c:	mov	x25, #0x3fffffffffffffff    	// #4611686018427387903
    5a90:	add	x21, x21, #0x0
    5a94:	add	x26, x26, #0x0
    5a98:	add	x28, x28, #0x0
    5a9c:	stur	x8, [x29, #-152]
    5aa0:	strb	wzr, [x9, x8]
    5aa4:	b	5adc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c80>
    5aa8:	mov	x0, x22
    5aac:	bl	0 <strlen>
    5ab0:	ldur	x8, [x29, #-152]
    5ab4:	sub	x8, x25, x8
    5ab8:	cmp	x8, x0
    5abc:	b.cc	6a0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bb0>  // b.lo, b.ul, b.last
    5ac0:	mov	x2, x0
    5ac4:	sub	x0, x29, #0xa0
    5ac8:	mov	x1, x22
    5acc:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5ad0:	add	x23, x23, #0x1
    5ad4:	cmp	w23, #0xc0
    5ad8:	b.eq	5b1c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1cc0>  // b.none
    5adc:	ubfx	x8, x23, #6, #26
    5ae0:	ldr	x8, [x24, w8, uxtw #3]
    5ae4:	lsr	x8, x8, x23
    5ae8:	tbz	w8, #0, 5ad0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c74>
    5aec:	ldur	x8, [x29, #-152]
    5af0:	cmp	x8, x25
    5af4:	b.eq	6a0c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bb0>  // b.none
    5af8:	sub	x0, x29, #0xa0
    5afc:	mov	w2, #0x1                   	// #1
    5b00:	mov	x1, x21
    5b04:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    5b08:	cmp	w23, #0x3b
    5b0c:	mov	x22, x26
    5b10:	b.hi	5aa8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c4c>  // b.pmore
    5b14:	ldr	x22, [x28, x23, lsl #3]
    5b18:	b	5aa8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1c4c>
    5b1c:	mov	w8, #0x104                 	// #260
    5b20:	sub	x9, x29, #0xa0
    5b24:	sturh	w8, [x29, #-32]
    5b28:	stp	x9, xzr, [x29, #-48]
    5b2c:	ldr	x0, [x19, #8]
    5b30:	ldr	x1, [x29, #8]
    5b34:	sub	x2, x29, #0x30
    5b38:	mov	x3, xzr
    5b3c:	mov	x4, xzr
    5b40:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    5b44:	ldur	x8, [x29, #-160]
    5b48:	mov	w28, w0
    5b4c:	cmp	x8, x20
    5b50:	b.eq	5674 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1818>  // b.none
    5b54:	mov	x0, x8
    5b58:	bl	0 <_ZdlPv>
    5b5c:	b	5674 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1818>
    5b60:	ldr	x10, [sp, #32]
    5b64:	neg	x8, x10
    5b68:	and	x8, x8, #0x3f
    5b6c:	str	x8, [sp, #24]
    5b70:	mov	w8, #0x3f                  	// #63
    5b74:	ldr	x0, [x19, #8]
    5b78:	sub	x21, x8, x10
    5b7c:	ldr	x9, [x0]
    5b80:	ldr	x9, [x9, #48]
    5b84:	blr	x9
    5b88:	mov	x1, x0
    5b8c:	ldr	x0, [sp, #24]
    5b90:	mov	w2, wzr
    5b94:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5b98:	ldr	x8, [x19, #8]
    5b9c:	str	x0, [sp, #32]
    5ba0:	ldr	x9, [x8]
    5ba4:	mov	x0, x8
    5ba8:	ldr	x9, [x9, #48]
    5bac:	blr	x9
    5bb0:	mov	x1, x0
    5bb4:	mov	x0, x21
    5bb8:	mov	w2, wzr
    5bbc:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5bc0:	ldr	x8, [x27]
    5bc4:	str	x0, [sp, #24]
    5bc8:	mov	x0, x27
    5bcc:	ldr	x8, [x8, #72]
    5bd0:	blr	x8
    5bd4:	ldr	x8, [x19, #8]
    5bd8:	mov	x21, x0
    5bdc:	ldr	x9, [x8]
    5be0:	mov	x0, x8
    5be4:	ldr	x9, [x9, #48]
    5be8:	blr	x9
    5bec:	mov	x27, x0
    5bf0:	mov	w0, #0x70                  	// #112
    5bf4:	bl	0 <_Znwm>
    5bf8:	mov	x8, x0
    5bfc:	mov	w9, #0x6                   	// #6
    5c00:	strb	wzr, [x8, #32]!
    5c04:	str	w9, [x0, #48]
    5c08:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5c0c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    5c10:	add	x9, x9, #0x0
    5c14:	add	x10, x10, #0x0
    5c18:	stp	x21, x9, [x0, #64]
    5c1c:	mov	w9, #0x4                   	// #4
    5c20:	str	x27, [x0, #104]
    5c24:	str	x10, [x0]
    5c28:	str	w9, [x0, #80]
    5c2c:	strb	wzr, [x0, #84]
    5c30:	stp	x8, xzr, [x0, #16]
    5c34:	str	x21, [x0, #56]
    5c38:	ldr	w8, [x26]
    5c3c:	cbz	w8, 6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>
    5c40:	ldr	x9, [x22]
    5c44:	ldr	x8, [x9]
    5c48:	str	x0, [x9]
    5c4c:	cbz	x8, 5c60 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1e04>
    5c50:	ldr	x9, [x8]
    5c54:	mov	x0, x8
    5c58:	ldr	x9, [x9, #8]
    5c5c:	blr	x9
    5c60:	ldr	x8, [x28]
    5c64:	mov	x0, x28
    5c68:	ldr	x8, [x8, #72]
    5c6c:	blr	x8
    5c70:	ldr	x8, [x28]
    5c74:	str	x0, [sp, #16]
    5c78:	mov	x0, x28
    5c7c:	ldr	x8, [x8, #80]
    5c80:	blr	x8
    5c84:	ldr	x8, [x19, #8]
    5c88:	str	x0, [sp, #8]
    5c8c:	ldr	x9, [x8]
    5c90:	mov	x0, x8
    5c94:	ldr	x9, [x9, #48]
    5c98:	blr	x9
    5c9c:	mov	x21, x0
    5ca0:	mov	w0, #0x70                  	// #112
    5ca4:	bl	0 <_Znwm>
    5ca8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5cac:	mov	x8, x0
    5cb0:	add	x9, x9, #0x0
    5cb4:	strb	wzr, [x8, #32]!
    5cb8:	str	x9, [x0]
    5cbc:	ldr	x9, [sp, #24]
    5cc0:	str	wzr, [x0, #48]
    5cc4:	str	x21, [x0, #104]
    5cc8:	stp	x8, xzr, [x0, #16]
    5ccc:	str	x9, [x0, #72]
    5cd0:	ldr	x9, [sp, #16]
    5cd4:	mov	x27, x0
    5cd8:	str	x9, [x0, #56]
    5cdc:	ldr	x9, [sp, #8]
    5ce0:	str	x9, [x0, #64]
    5ce4:	ldp	w8, w9, [x22, #8]
    5ce8:	cmp	w8, w9
    5cec:	b.cs	67e0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2984>  // b.hs, b.nlast
    5cf0:	ldr	x10, [x22]
    5cf4:	cmp	w8, w9
    5cf8:	str	x27, [x10, w8, uxtw #3]
    5cfc:	b.cs	6800 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29a4>  // b.hs, b.nlast
    5d00:	add	w8, w8, #0x1
    5d04:	str	w8, [x26]
    5d08:	ldr	x8, [x28]
    5d0c:	mov	x0, x28
    5d10:	ldr	x8, [x8, #72]
    5d14:	blr	x8
    5d18:	ldr	x8, [x28]
    5d1c:	mov	x21, x0
    5d20:	mov	x0, x28
    5d24:	ldr	x8, [x8, #80]
    5d28:	blr	x8
    5d2c:	ldr	x8, [x19, #8]
    5d30:	mov	x27, x0
    5d34:	ldr	x9, [x8]
    5d38:	mov	x0, x8
    5d3c:	ldr	x9, [x9, #48]
    5d40:	blr	x9
    5d44:	mov	x28, x0
    5d48:	mov	w0, #0x70                  	// #112
    5d4c:	bl	0 <_Znwm>
    5d50:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5d54:	mov	x8, x0
    5d58:	add	x9, x9, #0x0
    5d5c:	strb	wzr, [x8, #32]!
    5d60:	str	x9, [x0]
    5d64:	ldr	x9, [sp, #32]
    5d68:	str	wzr, [x0, #48]
    5d6c:	str	x28, [x0, #104]
    5d70:	stp	x8, xzr, [x0, #16]
    5d74:	stp	x27, x9, [x0, #64]
    5d78:	str	x21, [x0, #56]
    5d7c:	ldr	w8, [x26]
    5d80:	cmp	w8, #0x3
    5d84:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    5d88:	ldr	x9, [x22]
    5d8c:	ldr	x8, [x9, #24]
    5d90:	str	x0, [x9, #24]
    5d94:	cbz	x8, 4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    5d98:	ldr	x9, [x8]
    5d9c:	mov	x0, x8
    5da0:	ldr	x9, [x9, #8]
    5da4:	blr	x9
    5da8:	b	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    5dac:	cmp	w12, w9
    5db0:	b.ls	6a18 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2bbc>  // b.plast
    5db4:	mov	w12, #0x18                  	// #24
    5db8:	madd	x12, x9, x12, x14
    5dbc:	ldr	w12, [x12, #8]
    5dc0:	ldrh	w13, [x11, x12, lsl #1]
    5dc4:	cbz	w13, 5de8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f8c>
    5dc8:	add	x11, x11, x12, lsl #1
    5dcc:	add	w9, w13, w9
    5dd0:	add	x11, x11, #0x2
    5dd4:	cmp	w10, w9, uxth
    5dd8:	b.eq	5770 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1914>  // b.none
    5ddc:	ldrh	w12, [x11], #2
    5de0:	add	w9, w12, w9
    5de4:	cbnz	w12, 5dd4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f78>
    5de8:	ldr	w10, [sp, #120]
    5dec:	cbz	w10, 68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>
    5df0:	ldr	x9, [sp, #112]
    5df4:	ldrb	w11, [x9]
    5df8:	cmp	w11, #0x1
    5dfc:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5e00:	cmp	w10, #0x1
    5e04:	b.ls	68f4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2a98>  // b.plast
    5e08:	ldrb	w10, [x9, #16]
    5e0c:	cmp	w10, #0x1
    5e10:	b.ne	6854 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29f8>  // b.any
    5e14:	ldr	w10, [x9, #8]
    5e18:	ldr	w9, [x9, #24]
    5e1c:	cmp	w10, w9
    5e20:	b.ne	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.any
    5e24:	ldur	w8, [x29, #-152]
    5e28:	cmp	w8, #0x1
    5e2c:	b.ls	69cc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2b70>  // b.plast
    5e30:	ldur	x8, [x29, #-160]
    5e34:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5e38:	add	x9, x9, #0x0
    5e3c:	mov	w10, #0x103                 	// #259
    5e40:	ldr	x1, [x8, #8]
    5e44:	b	5638 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17dc>
    5e48:	cbz	w13, 5e6c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2010>
    5e4c:	add	x16, x11, x12, lsl #1
    5e50:	add	w15, w13, w10
    5e54:	add	x16, x16, #0x2
    5e58:	cmp	w14, w15, uxth
    5e5c:	b.eq	561c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17c0>  // b.none
    5e60:	ldrh	w17, [x16], #2
    5e64:	add	w15, w17, w15
    5e68:	cbnz	w17, 5e58 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ffc>
    5e6c:	cmp	w10, w9
    5e70:	b.ne	6194 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2338>  // b.any
    5e74:	cmp	w9, #0x5
    5e78:	b.eq	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>  // b.none
    5e7c:	b	561c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x17c0>
    5e80:	ldur	x1, [x29, #-104]
    5e84:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5e88:	add	x8, x8, #0x0
    5e8c:	mov	w9, #0x103                 	// #259
    5e90:	stp	x8, xzr, [x29, #-48]
    5e94:	sturh	w9, [x29, #-32]
    5e98:	ldr	x0, [x19, #8]
    5e9c:	sub	x2, x29, #0x30
    5ea0:	mov	x3, xzr
    5ea4:	mov	x4, xzr
    5ea8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    5eac:	ldp	x16, x15, [sp, #24]
    5eb0:	mov	w28, w0
    5eb4:	mov	w21, #0x1                   	// #1
    5eb8:	b	43e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x588>
    5ebc:	mov	w8, #0x20                  	// #32
    5ec0:	ldr	x0, [sp, #32]
    5ec4:	cmp	x21, x8
    5ec8:	b.cs	62e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2488>  // b.hs, b.nlast
    5ecc:	ldr	x9, [sp, #16]
    5ed0:	sub	x28, x9, #0x1
    5ed4:	cmp	x28, x8
    5ed8:	b.cs	62fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24a0>  // b.hs, b.nlast
    5edc:	cmp	x8, #0x20
    5ee0:	mov	w8, #0x3f                  	// #63
    5ee4:	mov	w10, #0x1f                  	// #31
    5ee8:	neg	x9, x21
    5eec:	csel	x8, x10, x8, eq  // eq = none
    5ef0:	and	x21, x8, x9
    5ef4:	sub	x8, x21, #0x1
    5ef8:	cmp	x8, x28
    5efc:	b.cs	635c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2500>  // b.hs, b.nlast
    5f00:	ldr	x0, [sp, #24]
    5f04:	ldr	x8, [x0]
    5f08:	ldr	x8, [x8, #72]
    5f0c:	blr	x8
    5f10:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    5f14:	add	x8, x8, #0x0
    5f18:	b	6314 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24b8>
    5f1c:	ldr	x0, [x19, #8]
    5f20:	str	x11, [sp]
    5f24:	ldr	x8, [x0]
    5f28:	ldr	x8, [x8, #48]
    5f2c:	blr	x8
    5f30:	mov	x1, x0
    5f34:	mov	x0, x21
    5f38:	mov	w2, wzr
    5f3c:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5f40:	ldr	x8, [x19, #8]
    5f44:	str	x0, [sp, #8]
    5f48:	ldr	x9, [x8]
    5f4c:	mov	x0, x8
    5f50:	ldr	x9, [x9, #48]
    5f54:	blr	x9
    5f58:	mov	x1, x0
    5f5c:	mov	x0, x28
    5f60:	mov	w2, wzr
    5f64:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    5f68:	ldr	x8, [x27]
    5f6c:	mov	x21, x0
    5f70:	mov	x0, x27
    5f74:	ldr	x8, [x8, #72]
    5f78:	blr	x8
    5f7c:	ldr	x8, [x19, #8]
    5f80:	mov	x28, x0
    5f84:	ldr	x9, [x8]
    5f88:	mov	x0, x8
    5f8c:	ldr	x9, [x9, #48]
    5f90:	blr	x9
    5f94:	mov	x27, x0
    5f98:	mov	w0, #0x70                  	// #112
    5f9c:	bl	0 <_Znwm>
    5fa0:	mov	x8, x0
    5fa4:	mov	w9, #0x6                   	// #6
    5fa8:	strb	wzr, [x8, #32]!
    5fac:	str	w9, [x0, #48]
    5fb0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    5fb4:	add	x9, x9, #0x0
    5fb8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    5fbc:	stp	x28, x9, [x0, #64]
    5fc0:	mov	w9, #0x3                   	// #3
    5fc4:	add	x10, x10, #0x0
    5fc8:	str	x27, [x0, #104]
    5fcc:	str	x10, [x0]
    5fd0:	str	w9, [x0, #80]
    5fd4:	strb	wzr, [x0, #84]
    5fd8:	stp	x8, xzr, [x0, #16]
    5fdc:	str	x28, [x0, #56]
    5fe0:	ldr	w8, [x26]
    5fe4:	cbz	w8, 6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>
    5fe8:	ldr	x9, [x22]
    5fec:	str	x21, [sp, #16]
    5ff0:	ldr	x8, [x9]
    5ff4:	str	x0, [x9]
    5ff8:	cbz	x8, 600c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x21b0>
    5ffc:	ldr	x9, [x8]
    6000:	mov	x0, x8
    6004:	ldr	x9, [x9, #8]
    6008:	blr	x9
    600c:	ldr	x0, [x19, #8]
    6010:	ldr	x9, [sp]
    6014:	ldr	x8, [x0]
    6018:	cmp	x9, #0x20
    601c:	mov	w9, #0x7                   	// #7
    6020:	cinc	w21, w9, ne  // ne = any
    6024:	ldr	x8, [x8, #48]
    6028:	blr	x8
    602c:	mov	x27, x0
    6030:	mov	w0, #0x70                  	// #112
    6034:	bl	0 <_Znwm>
    6038:	mov	x8, x0
    603c:	mov	w9, #0x3                   	// #3
    6040:	strb	wzr, [x8, #32]!
    6044:	str	w9, [x0, #48]
    6048:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    604c:	add	x9, x9, #0x0
    6050:	str	x9, [x0]
    6054:	str	x27, [x0, #104]
    6058:	str	w21, [x0, #72]
    605c:	stp	xzr, xzr, [x0, #56]
    6060:	stur	xzr, [x0, #84]
    6064:	stur	xzr, [x0, #76]
    6068:	stp	x8, xzr, [x0, #16]
    606c:	stur	xzr, [x0, #89]
    6070:	ldr	w8, [x26]
    6074:	cmp	w8, #0x2
    6078:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    607c:	ldr	x9, [x22]
    6080:	ldr	x8, [x9, #16]
    6084:	str	x0, [x9, #16]
    6088:	cbz	x8, 609c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2240>
    608c:	ldr	x9, [x8]
    6090:	mov	x0, x8
    6094:	ldr	x9, [x9, #8]
    6098:	blr	x9
    609c:	ldr	x0, [x19, #8]
    60a0:	ldp	x21, x28, [sp, #152]
    60a4:	ldr	x8, [x0]
    60a8:	ldr	x8, [x8, #48]
    60ac:	blr	x8
    60b0:	mov	x27, x0
    60b4:	mov	w0, #0x70                  	// #112
    60b8:	bl	0 <_Znwm>
    60bc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    60c0:	mov	x8, x0
    60c4:	add	x9, x9, #0x0
    60c8:	strb	wzr, [x8, #32]!
    60cc:	str	x9, [x0]
    60d0:	ldr	x9, [sp, #8]
    60d4:	str	wzr, [x0, #48]
    60d8:	str	x27, [x0, #104]
    60dc:	stp	x8, xzr, [x0, #16]
    60e0:	stp	x28, x9, [x0, #64]
    60e4:	str	x21, [x0, #56]
    60e8:	ldr	w8, [x26]
    60ec:	cmp	w8, #0x3
    60f0:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    60f4:	ldr	x9, [x22]
    60f8:	ldr	x8, [x9, #24]
    60fc:	str	x0, [x9, #24]
    6100:	cbz	x8, 6114 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x22b8>
    6104:	ldr	x9, [x8]
    6108:	mov	x0, x8
    610c:	ldr	x9, [x9, #8]
    6110:	blr	x9
    6114:	ldr	x0, [x19, #8]
    6118:	ldp	x21, x23, [x29, #-104]
    611c:	ldr	x8, [x0]
    6120:	ldr	x8, [x8, #48]
    6124:	blr	x8
    6128:	mov	x28, x0
    612c:	mov	w0, #0x70                  	// #112
    6130:	bl	0 <_Znwm>
    6134:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6138:	mov	x8, x0
    613c:	add	x9, x9, #0x0
    6140:	strb	wzr, [x8, #32]!
    6144:	str	x9, [x0]
    6148:	ldr	x9, [sp, #16]
    614c:	str	wzr, [x0, #48]
    6150:	str	x28, [x0, #104]
    6154:	str	x21, [x0, #56]
    6158:	stp	x23, x9, [x0, #64]
    615c:	stp	x8, xzr, [x0, #16]
    6160:	ldp	w8, w9, [x22, #8]
    6164:	mov	x27, x0
    6168:	cmp	w8, w9
    616c:	b.cs	6820 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29c4>  // b.hs, b.nlast
    6170:	ldp	x16, x15, [sp, #24]
    6174:	ldr	x10, [x22]
    6178:	cmp	w8, w9
    617c:	str	x27, [x10, w8, uxtw #3]
    6180:	b.cs	6800 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29a4>  // b.hs, b.nlast
    6184:	mov	w21, wzr
    6188:	add	w8, w8, #0x1
    618c:	str	w8, [x26]
    6190:	b	43e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x588>
    6194:	cbz	w13, 4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    6198:	add	x11, x11, x12, lsl #1
    619c:	add	w10, w13, w10
    61a0:	add	x11, x11, #0x2
    61a4:	cmp	w9, w10, uxth
    61a8:	b.eq	5e74 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2018>  // b.none
    61ac:	ldrh	w12, [x11], #2
    61b0:	add	w10, w12, w10
    61b4:	cbnz	w12, 61a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2348>
    61b8:	b	4b08 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0xcac>
    61bc:	mov	w8, #0x20                  	// #32
    61c0:	ldr	x0, [sp, #32]
    61c4:	cmp	x21, x8
    61c8:	b.cs	62e4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2488>  // b.hs, b.nlast
    61cc:	ldr	x9, [sp, #16]
    61d0:	sub	x9, x9, #0x1
    61d4:	cmp	x9, x8
    61d8:	b.cs	62fc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24a0>  // b.hs, b.nlast
    61dc:	adds	x21, x9, x21
    61e0:	b.cs	6584 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2728>  // b.hs, b.nlast
    61e4:	cmp	x21, x8
    61e8:	b.cs	6584 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2728>  // b.hs, b.nlast
    61ec:	ldr	x0, [x19, #8]
    61f0:	ldr	x8, [x0]
    61f4:	ldr	x8, [x8, #48]
    61f8:	blr	x8
    61fc:	mov	x1, x0
    6200:	mov	x0, x21
    6204:	mov	w2, wzr
    6208:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    620c:	ldr	x21, [sp, #24]
    6210:	str	x0, [sp, #32]
    6214:	ldr	x8, [x21]
    6218:	mov	x0, x21
    621c:	ldr	x8, [x8, #72]
    6220:	blr	x8
    6224:	ldr	x8, [x21]
    6228:	str	x0, [sp, #16]
    622c:	mov	x0, x21
    6230:	ldr	x8, [x8, #80]
    6234:	blr	x8
    6238:	ldr	x8, [x19, #8]
    623c:	mov	x21, x0
    6240:	ldr	x9, [x8]
    6244:	mov	x0, x8
    6248:	ldr	x9, [x9, #48]
    624c:	blr	x9
    6250:	mov	x28, x0
    6254:	mov	w0, #0x70                  	// #112
    6258:	bl	0 <_Znwm>
    625c:	mov	x8, x0
    6260:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6264:	add	x9, x9, #0x0
    6268:	strb	wzr, [x8, #32]!
    626c:	str	x9, [x0]
    6270:	ldr	x9, [sp, #32]
    6274:	stp	x8, xzr, [x0, #16]
    6278:	ldr	x8, [sp, #16]
    627c:	str	wzr, [x0, #48]
    6280:	str	x28, [x0, #104]
    6284:	stp	x21, x9, [x0, #64]
    6288:	str	x8, [x0, #56]
    628c:	ldr	w8, [x26]
    6290:	cmp	w8, #0x4
    6294:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    6298:	ldr	x9, [x22]
    629c:	ldr	x8, [x9, #32]
    62a0:	str	x0, [x9, #32]
    62a4:	cbz	x8, 62b8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x245c>
    62a8:	ldr	x9, [x8]
    62ac:	mov	x0, x8
    62b0:	ldr	x9, [x9, #8]
    62b4:	blr	x9
    62b8:	cmp	w25, #0x4
    62bc:	b.eq	662c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x27d0>  // b.none
    62c0:	cmp	w25, #0x5
    62c4:	b.ne	6b50 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cf4>  // b.any
    62c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    62cc:	add	x1, x1, #0x0
    62d0:	mov	x0, x20
    62d4:	mov	x2, x25
    62d8:	bl	0 <bcmp>
    62dc:	cbz	w0, 6520 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x26c4>
    62e0:	b	6b50 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cf4>
    62e4:	ldr	x8, [x0]
    62e8:	ldr	x8, [x8, #72]
    62ec:	blr	x8
    62f0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    62f4:	add	x8, x8, #0x0
    62f8:	b	6314 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24b8>
    62fc:	ldr	x0, [sp, #24]
    6300:	ldr	x8, [x0]
    6304:	ldr	x8, [x8, #72]
    6308:	blr	x8
    630c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6310:	add	x8, x8, #0x0
    6314:	mov	w9, #0x103                 	// #259
    6318:	stp	x8, xzr, [sp, #96]
    631c:	strh	w9, [sp, #112]
    6320:	ldr	x8, [x19, #8]
    6324:	mov	x1, x0
    6328:	add	x2, sp, #0x60
    632c:	mov	x3, xzr
    6330:	mov	x0, x8
    6334:	mov	x4, xzr
    6338:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    633c:	mov	w28, w0
    6340:	b	568c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1830>
    6344:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6348:	add	x8, x8, #0x0
    634c:	b	5424 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15c8>
    6350:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6354:	add	x8, x8, #0x0
    6358:	b	5424 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x15c8>
    635c:	ldr	x0, [x19, #8]
    6360:	ldr	x8, [x0]
    6364:	ldr	x8, [x8, #48]
    6368:	blr	x8
    636c:	mov	x1, x0
    6370:	mov	x0, x21
    6374:	mov	w2, wzr
    6378:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    637c:	ldr	x8, [x19, #8]
    6380:	str	x0, [sp, #8]
    6384:	ldr	x9, [x8]
    6388:	mov	x0, x8
    638c:	ldr	x9, [x9, #48]
    6390:	blr	x9
    6394:	mov	x1, x0
    6398:	mov	x0, x28
    639c:	mov	w2, wzr
    63a0:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    63a4:	ldr	x21, [sp, #32]
    63a8:	str	x0, [sp, #16]
    63ac:	ldr	x8, [x21]
    63b0:	mov	x0, x21
    63b4:	ldr	x8, [x8, #72]
    63b8:	blr	x8
    63bc:	ldr	x8, [x21]
    63c0:	str	x0, [sp]
    63c4:	mov	x0, x21
    63c8:	ldr	x8, [x8, #80]
    63cc:	blr	x8
    63d0:	ldr	x8, [x19, #8]
    63d4:	mov	x21, x0
    63d8:	ldr	x9, [x8]
    63dc:	mov	x0, x8
    63e0:	ldr	x9, [x9, #48]
    63e4:	blr	x9
    63e8:	mov	x28, x0
    63ec:	mov	w0, #0x70                  	// #112
    63f0:	bl	0 <_Znwm>
    63f4:	mov	x8, x0
    63f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    63fc:	add	x9, x9, #0x0
    6400:	strb	wzr, [x8, #32]!
    6404:	str	x9, [x0]
    6408:	ldr	x9, [sp, #8]
    640c:	stp	x8, xzr, [x0, #16]
    6410:	ldr	x8, [sp]
    6414:	str	wzr, [x0, #48]
    6418:	str	x28, [x0, #104]
    641c:	stp	x21, x9, [x0, #64]
    6420:	str	x8, [x0, #56]
    6424:	ldr	w8, [x26]
    6428:	cmp	w8, #0x3
    642c:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    6430:	ldr	x9, [x22]
    6434:	ldr	x21, [sp, #24]
    6438:	ldr	x8, [x9, #24]
    643c:	str	x0, [x9, #24]
    6440:	cbz	x8, 6454 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x25f8>
    6444:	ldr	x9, [x8]
    6448:	mov	x0, x8
    644c:	ldr	x9, [x9, #8]
    6450:	blr	x9
    6454:	ldr	x8, [x21]
    6458:	mov	x0, x21
    645c:	ldr	x8, [x8, #72]
    6460:	blr	x8
    6464:	ldr	x8, [x21]
    6468:	str	x0, [sp, #32]
    646c:	mov	x0, x21
    6470:	ldr	x8, [x8, #80]
    6474:	blr	x8
    6478:	ldr	x8, [x19, #8]
    647c:	mov	x28, x0
    6480:	ldr	x9, [x8]
    6484:	mov	x0, x8
    6488:	ldr	x9, [x9, #48]
    648c:	blr	x9
    6490:	mov	x21, x0
    6494:	mov	w0, #0x70                  	// #112
    6498:	bl	0 <_Znwm>
    649c:	mov	x8, x0
    64a0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    64a4:	strb	wzr, [x8, #32]!
    64a8:	add	x9, x9, #0x0
    64ac:	str	x9, [x0]
    64b0:	ldr	x9, [sp, #16]
    64b4:	stp	x8, xzr, [x0, #16]
    64b8:	ldr	x8, [sp, #32]
    64bc:	str	wzr, [x0, #48]
    64c0:	str	x21, [x0, #104]
    64c4:	stp	x28, x9, [x0, #64]
    64c8:	str	x8, [x0, #56]
    64cc:	ldr	w8, [x26]
    64d0:	cmp	w8, #0x4
    64d4:	b.ls	6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>  // b.plast
    64d8:	ldr	x9, [x22]
    64dc:	ldr	x8, [x9, #32]
    64e0:	str	x0, [x9, #32]
    64e4:	cbz	x8, 64f8 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x269c>
    64e8:	ldr	x9, [x8]
    64ec:	mov	x0, x8
    64f0:	ldr	x9, [x9, #8]
    64f4:	blr	x9
    64f8:	cmp	w25, #0x5
    64fc:	b.eq	65a0 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2744>  // b.none
    6500:	cmp	w25, #0x3
    6504:	b.ne	6b38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cdc>  // b.any
    6508:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    650c:	add	x1, x1, #0x0
    6510:	mov	x0, x20
    6514:	mov	x2, x25
    6518:	bl	0 <bcmp>
    651c:	cbnz	w0, 6b38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cdc>
    6520:	ldr	x8, [x27]
    6524:	mov	x0, x27
    6528:	ldr	x8, [x8, #72]
    652c:	blr	x8
    6530:	ldr	x8, [x19, #8]
    6534:	mov	x21, x0
    6538:	ldr	x9, [x8]
    653c:	mov	x0, x8
    6540:	ldr	x9, [x9, #48]
    6544:	blr	x9
    6548:	mov	x27, x0
    654c:	mov	w0, #0x70                  	// #112
    6550:	bl	0 <_Znwm>
    6554:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6558:	mov	x8, x0
    655c:	add	x9, x9, #0x0
    6560:	strb	wzr, [x8, #32]!
    6564:	str	x9, [x0]
    6568:	mov	w9, #0x6                   	// #6
    656c:	str	w9, [x0, #48]
    6570:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6574:	add	x9, x9, #0x0
    6578:	mov	w10, #0x3                   	// #3
    657c:	str	x27, [x0, #104]
    6580:	b	671c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28c0>
    6584:	ldr	x0, [sp, #24]
    6588:	ldr	x8, [x0]
    658c:	ldr	x8, [x8, #72]
    6590:	blr	x8
    6594:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6598:	add	x8, x8, #0x0
    659c:	b	6314 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x24b8>
    65a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    65a4:	add	x1, x1, #0x0
    65a8:	mov	x0, x20
    65ac:	mov	x2, x25
    65b0:	bl	0 <bcmp>
    65b4:	cbz	w0, 66bc <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2860>
    65b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    65bc:	add	x1, x1, #0x0
    65c0:	mov	x0, x20
    65c4:	mov	x2, x25
    65c8:	bl	0 <bcmp>
    65cc:	cbnz	w0, 6b38 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cdc>
    65d0:	ldr	x8, [x27]
    65d4:	mov	x0, x27
    65d8:	ldr	x8, [x8, #72]
    65dc:	blr	x8
    65e0:	ldr	x8, [x19, #8]
    65e4:	mov	x21, x0
    65e8:	ldr	x9, [x8]
    65ec:	mov	x0, x8
    65f0:	ldr	x9, [x9, #48]
    65f4:	blr	x9
    65f8:	mov	x27, x0
    65fc:	mov	w0, #0x70                  	// #112
    6600:	bl	0 <_Znwm>
    6604:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6608:	mov	x8, x0
    660c:	add	x9, x9, #0x0
    6610:	strb	wzr, [x8, #32]!
    6614:	str	x9, [x0]
    6618:	mov	w9, #0x6                   	// #6
    661c:	str	w9, [x0, #48]
    6620:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6624:	add	x9, x9, #0x0
    6628:	b	6714 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28b8>
    662c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6630:	add	x1, x1, #0x0
    6634:	mov	x0, x20
    6638:	mov	x2, x25
    663c:	mov	x28, x20
    6640:	bl	0 <bcmp>
    6644:	cbz	w0, 674c <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x28f0>
    6648:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    664c:	add	x1, x1, #0x0
    6650:	mov	x0, x28
    6654:	mov	x2, x25
    6658:	bl	0 <bcmp>
    665c:	cbnz	w0, 6b50 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2cf4>
    6660:	ldr	x8, [x27]
    6664:	mov	x0, x27
    6668:	ldr	x8, [x8, #72]
    666c:	blr	x8
    6670:	ldr	x8, [x19, #8]
    6674:	mov	x21, x0
    6678:	ldr	x9, [x8]
    667c:	mov	x0, x8
    6680:	ldr	x9, [x9, #48]
    6684:	blr	x9
    6688:	mov	x27, x0
    668c:	mov	w0, #0x70                  	// #112
    6690:	bl	0 <_Znwm>
    6694:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6698:	mov	x8, x0
    669c:	add	x9, x9, #0x0
    66a0:	strb	wzr, [x8, #32]!
    66a4:	str	x9, [x0]
    66a8:	mov	w9, #0x6                   	// #6
    66ac:	str	w9, [x0, #48]
    66b0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    66b4:	add	x9, x9, #0x0
    66b8:	b	67a4 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2948>
    66bc:	ldr	x8, [x27]
    66c0:	mov	x0, x27
    66c4:	ldr	x8, [x8, #72]
    66c8:	blr	x8
    66cc:	ldr	x8, [x19, #8]
    66d0:	mov	x21, x0
    66d4:	ldr	x9, [x8]
    66d8:	mov	x0, x8
    66dc:	ldr	x9, [x9, #48]
    66e0:	blr	x9
    66e4:	mov	x27, x0
    66e8:	mov	w0, #0x70                  	// #112
    66ec:	bl	0 <_Znwm>
    66f0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    66f4:	mov	x8, x0
    66f8:	add	x9, x9, #0x0
    66fc:	strb	wzr, [x8, #32]!
    6700:	str	x9, [x0]
    6704:	mov	w9, #0x6                   	// #6
    6708:	str	w9, [x0, #48]
    670c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6710:	add	x9, x9, #0x0
    6714:	str	x27, [x0, #104]
    6718:	mov	w10, #0x4                   	// #4
    671c:	stp	x21, x9, [x0, #64]
    6720:	str	w10, [x0, #80]
    6724:	strb	wzr, [x0, #84]
    6728:	stp	x8, xzr, [x0, #16]
    672c:	str	x21, [x0, #56]
    6730:	ldr	w8, [x26]
    6734:	cbz	w8, 6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>
    6738:	ldr	x9, [x22]
    673c:	ldr	x8, [x9]
    6740:	str	x0, [x9]
    6744:	cbnz	x8, 5d98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f3c>
    6748:	b	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    674c:	ldr	x8, [x27]
    6750:	mov	x0, x27
    6754:	ldr	x8, [x8, #72]
    6758:	blr	x8
    675c:	ldr	x8, [x19, #8]
    6760:	mov	x21, x0
    6764:	ldr	x9, [x8]
    6768:	mov	x0, x8
    676c:	ldr	x9, [x9, #48]
    6770:	blr	x9
    6774:	mov	x27, x0
    6778:	mov	w0, #0x70                  	// #112
    677c:	bl	0 <_Znwm>
    6780:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6784:	mov	x8, x0
    6788:	add	x9, x9, #0x0
    678c:	strb	wzr, [x8, #32]!
    6790:	str	x9, [x0]
    6794:	mov	w9, #0x6                   	// #6
    6798:	str	w9, [x0, #48]
    679c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    67a0:	add	x9, x9, #0x0
    67a4:	mov	w10, #0x4                   	// #4
    67a8:	str	x27, [x0, #104]
    67ac:	stp	x21, x9, [x0, #64]
    67b0:	str	w10, [x0, #80]
    67b4:	strb	wzr, [x0, #84]
    67b8:	stp	x8, xzr, [x0, #16]
    67bc:	str	x21, [x0, #56]
    67c0:	ldr	w8, [x26]
    67c4:	cbz	w8, 6834 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x29d8>
    67c8:	ldr	x9, [x22]
    67cc:	mov	x20, x28
    67d0:	ldr	x8, [x9]
    67d4:	str	x0, [x9]
    67d8:	cbnz	x8, 5d98 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1f3c>
    67dc:	b	4438 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x5dc>
    67e0:	mov	x0, x22
    67e4:	mov	x1, xzr
    67e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    67ec:	ldp	w8, w9, [x22, #8]
    67f0:	ldr	x10, [x22]
    67f4:	cmp	w8, w9
    67f8:	str	x27, [x10, w8, uxtw #3]
    67fc:	b.cc	5d00 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x1ea4>  // b.lo, b.ul, b.last
    6800:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6804:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6808:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    680c:	add	x0, x0, #0x0
    6810:	add	x1, x1, #0x0
    6814:	add	x3, x3, #0x0
    6818:	mov	w2, #0x43                  	// #67
    681c:	bl	0 <__assert_fail>
    6820:	mov	x0, x22
    6824:	mov	x1, xzr
    6828:	bl	0 <LLVMInitializeAArch64AsmParser>
    682c:	ldp	w8, w9, [x22, #8]
    6830:	b	6170 <_ZN12_GLOBAL__N_116AArch64AsmParser23MatchAndEmitInstructionEN4llvm5SMLocERjRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEERNS1_10MCStreamerERmb+0x2314>
    6834:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6838:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    683c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6840:	add	x0, x0, #0x0
    6844:	add	x1, x1, #0x0
    6848:	add	x3, x3, #0x0
    684c:	mov	w2, #0x95                  	// #149
    6850:	bl	0 <__assert_fail>
    6854:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6858:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    685c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6860:	add	x0, x0, #0x0
    6864:	add	x1, x1, #0x0
    6868:	add	x3, x3, #0x0
    686c:	mov	w2, #0x41                  	// #65
    6870:	bl	0 <__assert_fail>
    6874:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6878:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    687c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6880:	add	x0, x0, #0x0
    6884:	add	x1, x1, #0x0
    6888:	add	x3, x3, #0x0
    688c:	mov	w2, #0x1ea                 	// #490
    6890:	bl	0 <__assert_fail>
    6894:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6898:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    689c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    68a0:	add	x0, x0, #0x0
    68a4:	add	x1, x1, #0x0
    68a8:	add	x3, x3, #0x0
    68ac:	mov	w2, #0x1194                	// #4500
    68b0:	bl	0 <__assert_fail>
    68b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    68b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    68bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    68c0:	add	x0, x0, #0x0
    68c4:	add	x1, x1, #0x0
    68c8:	add	x3, x3, #0x0
    68cc:	mov	w2, #0x1196                	// #4502
    68d0:	bl	0 <__assert_fail>
    68d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    68d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    68dc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    68e0:	add	x0, x0, #0x0
    68e4:	add	x1, x1, #0x0
    68e8:	add	x3, x3, #0x0
    68ec:	mov	w2, #0x99                  	// #153
    68f0:	bl	0 <__assert_fail>
    68f4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    68f8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    68fc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6900:	add	x0, x0, #0x0
    6904:	add	x1, x1, #0x0
    6908:	add	x3, x3, #0x0
    690c:	mov	w2, #0x95                  	// #149
    6910:	bl	0 <__assert_fail>
    6914:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6918:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    691c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6920:	add	x0, x0, #0x0
    6924:	add	x1, x1, #0x0
    6928:	add	x3, x3, #0x0
    692c:	mov	w2, #0x2d                  	// #45
    6930:	bl	0 <__assert_fail>
    6934:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6938:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    693c:	add	x0, x0, #0x0
    6940:	add	x1, x1, #0x0
    6944:	mov	w2, #0x139a                	// #5018
    6948:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    694c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6950:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6954:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6958:	add	x0, x0, #0x0
    695c:	add	x1, x1, #0x0
    6960:	add	x3, x3, #0x0
    6964:	mov	w2, #0x38                  	// #56
    6968:	bl	0 <__assert_fail>
    696c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6970:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6974:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6978:	add	x0, x0, #0x0
    697c:	add	x1, x1, #0x0
    6980:	add	x3, x3, #0x0
    6984:	mov	w2, #0x71                  	// #113
    6988:	bl	0 <__assert_fail>
    698c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6990:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6994:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6998:	add	x0, x0, #0x0
    699c:	add	x1, x1, #0x0
    69a0:	add	x3, x3, #0x0
    69a4:	mov	w2, #0x65                  	// #101
    69a8:	bl	0 <__assert_fail>
    69ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    69b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    69b4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    69b8:	add	x0, x0, #0x0
    69bc:	add	x1, x1, #0x0
    69c0:	add	x3, x3, #0x0
    69c4:	mov	w2, #0xa7                  	// #167
    69c8:	bl	0 <__assert_fail>
    69cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    69d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    69d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    69d8:	add	x0, x0, #0x0
    69dc:	add	x1, x1, #0x0
    69e0:	add	x3, x3, #0x0
    69e4:	mov	w2, #0x95                  	// #149
    69e8:	bl	0 <__assert_fail>
    69ec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    69f0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    69f4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    69f8:	add	x0, x0, #0x0
    69fc:	add	x1, x1, #0x0
    6a00:	add	x3, x3, #0x0
    6a04:	mov	w2, #0x69                  	// #105
    6a08:	bl	0 <__assert_fail>
    6a0c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6a10:	add	x0, x0, #0x0
    6a14:	bl	0 <_ZSt20__throw_length_errorPKc>
    6a18:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6a1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a20:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6a24:	add	x0, x0, #0x0
    6a28:	add	x1, x1, #0x0
    6a2c:	add	x3, x3, #0x0
    6a30:	mov	w2, #0x1b9                 	// #441
    6a34:	bl	0 <__assert_fail>
    6a38:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6a3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a40:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6a44:	add	x0, x0, #0x0
    6a48:	add	x1, x1, #0x0
    6a4c:	add	x3, x3, #0x0
    6a50:	mov	w2, #0x1ef                 	// #495
    6a54:	bl	0 <__assert_fail>
    6a58:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6a5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a60:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6a64:	add	x0, x0, #0x0
    6a68:	add	x1, x1, #0x0
    6a6c:	add	x3, x3, #0x0
    6a70:	mov	w2, #0xd1                  	// #209
    6a74:	bl	0 <__assert_fail>
    6a78:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6a7c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6a80:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6a84:	add	x0, x0, #0x0
    6a88:	add	x1, x1, #0x0
    6a8c:	add	x3, x3, #0x0
    6a90:	mov	w2, #0x69                  	// #105
    6a94:	bl	0 <__assert_fail>
    6a98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6a9c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6aa0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6aa4:	add	x0, x0, #0x0
    6aa8:	add	x1, x1, #0x0
    6aac:	add	x3, x3, #0x0
    6ab0:	mov	w2, #0x69                  	// #105
    6ab4:	bl	0 <__assert_fail>
    6ab8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6abc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6ac0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6ac4:	add	x0, x0, #0x0
    6ac8:	add	x1, x1, #0x0
    6acc:	add	x3, x3, #0x0
    6ad0:	mov	w2, #0x1f4                 	// #500
    6ad4:	bl	0 <__assert_fail>
    6ad8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6adc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6ae0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6ae4:	add	x0, x0, #0x0
    6ae8:	add	x1, x1, #0x0
    6aec:	add	x3, x3, #0x0
    6af0:	mov	w2, #0xa7                  	// #167
    6af4:	bl	0 <__assert_fail>
    6af8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6afc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b00:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6b04:	add	x0, x0, #0x0
    6b08:	add	x1, x1, #0x0
    6b0c:	add	x3, x3, #0x0
    6b10:	mov	w2, #0x108                 	// #264
    6b14:	bl	0 <__assert_fail>
    6b18:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6b1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b20:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6b24:	add	x0, x0, #0x0
    6b28:	add	x1, x1, #0x0
    6b2c:	add	x3, x3, #0x0
    6b30:	mov	w2, #0x12df                	// #4831
    6b34:	bl	0 <__assert_fail>
    6b38:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6b3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b40:	add	x0, x0, #0x0
    6b44:	add	x1, x1, #0x0
    6b48:	mov	w2, #0x122a                	// #4650
    6b4c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6b50:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6b54:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6b58:	add	x0, x0, #0x0
    6b5c:	add	x1, x1, #0x0
    6b60:	mov	w2, #0x1260                	// #4704
    6b64:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000006b68 <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj>:
    6b68:	stp	x29, x30, [sp, #-32]!
    6b6c:	stp	x20, x19, [sp, #16]
    6b70:	mov	x29, sp
    6b74:	sub	w20, w2, #0x13
    6b78:	cmp	w20, #0x16
    6b7c:	b.hi	6bec <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x84>  // b.pmore
    6b80:	mov	w8, #0x20eb                	// #8427
    6b84:	movk	w8, #0x5f, lsl #16
    6b88:	lsr	w8, w8, w20
    6b8c:	tbz	w8, #0, 6bec <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x84>
    6b90:	ldr	x8, [x1]
    6b94:	mov	x0, x1
    6b98:	mov	x19, x1
    6b9c:	ldr	x8, [x8, #40]
    6ba0:	blr	x8
    6ba4:	tbz	w0, #0, 6bec <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x84>
    6ba8:	ldr	w8, [x19, #48]
    6bac:	cbnz	w8, 6bfc <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x94>
    6bb0:	ldr	x8, [x19, #72]
    6bb4:	cbz	x8, 6c1c <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0xb4>
    6bb8:	ldr	w9, [x8]
    6bbc:	cmp	w9, #0x1
    6bc0:	b.ne	6bec <_ZN12_GLOBAL__N_116AArch64AsmParser26validateTargetOperandClassERN4llvm18MCParsedAsmOperandEj+0x84>  // b.any
    6bc4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    6bc8:	add	x9, x9, #0x0
    6bcc:	ldr	x9, [x9, w20, sxtw #3]
    6bd0:	ldr	x8, [x8, #16]
    6bd4:	cmp	x8, x9
    6bd8:	cset	w8, eq  // eq = none
    6bdc:	lsl	w0, w8, #2
    6be0:	ldp	x20, x19, [sp, #16]
    6be4:	ldp	x29, x30, [sp], #32
    6be8:	ret
    6bec:	mov	w0, wzr
    6bf0:	ldp	x20, x19, [sp, #16]
    6bf4:	ldp	x29, x30, [sp], #32
    6bf8:	ret
    6bfc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6c00:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6c04:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6c08:	add	x0, x0, #0x0
    6c0c:	add	x1, x1, #0x0
    6c10:	add	x3, x3, #0x0
    6c14:	mov	w2, #0x1f4                 	// #500
    6c18:	bl	0 <__assert_fail>
    6c1c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6c20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6c24:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6c28:	add	x0, x0, #0x0
    6c2c:	add	x1, x1, #0x0
    6c30:	add	x3, x3, #0x0
    6c34:	mov	w2, #0x69                  	// #105
    6c38:	bl	0 <__assert_fail>

0000000000006c3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    6c3c:	stp	x29, x30, [sp, #-64]!
    6c40:	stp	x24, x23, [sp, #16]
    6c44:	stp	x22, x21, [sp, #32]
    6c48:	stp	x20, x19, [sp, #48]
    6c4c:	mov	x29, sp
    6c50:	cmp	w1, #0x68d
    6c54:	b.cs	6e3c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>  // b.hs, b.nlast
    6c58:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    6c5c:	add	x8, x8, #0x0
    6c60:	mov	w9, #0xd                   	// #13
    6c64:	umaddl	x20, w1, w9, x8
    6c68:	ldrb	w8, [x20]
    6c6c:	cbz	w8, 6df0 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b4>
    6c70:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    6c74:	mov	x19, x2
    6c78:	mov	w21, wzr
    6c7c:	add	x22, x2, #0x8
    6c80:	add	x23, x23, #0x0
    6c84:	and	w8, w8, #0xff
    6c88:	sub	w8, w8, #0x1
    6c8c:	cmp	w8, #0x67
    6c90:	b.hi	6e24 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e8>  // b.pmore
    6c94:	adr	x9, 6ca8 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x6c>
    6c98:	ldrb	w10, [x23, x8]
    6c9c:	add	x9, x9, x10, lsl #2
    6ca0:	mov	w24, #0x1                   	// #1
    6ca4:	br	x9
    6ca8:	ldrb	w9, [x20, #1]
    6cac:	ldr	w8, [x22]
    6cb0:	cmp	x8, x9
    6cb4:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6cb8:	ldr	x10, [x19]
    6cbc:	ldr	x9, [x10, x9, lsl #3]
    6cc0:	str	w21, [x9, #8]
    6cc4:	ldrb	w9, [x20, #1]
    6cc8:	cmp	x8, x9
    6ccc:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6cd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6cd4:	add	x8, x10, x9, lsl #3
    6cd8:	add	x1, x1, #0x0
    6cdc:	mov	w2, #0x1                   	// #1
    6ce0:	b	6d5c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    6ce4:	ldrb	w9, [x20, #1]
    6ce8:	ldr	w8, [x22]
    6cec:	cmp	x8, x9
    6cf0:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6cf4:	ldr	x10, [x19]
    6cf8:	ldr	x9, [x10, x9, lsl #3]
    6cfc:	str	w21, [x9, #8]
    6d00:	ldrb	w9, [x20, #1]
    6d04:	cmp	x8, x9
    6d08:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6d0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6d10:	add	x8, x10, x9, lsl #3
    6d14:	add	x1, x1, #0x0
    6d18:	mov	w24, #0x1                   	// #1
    6d1c:	mov	w2, #0x1                   	// #1
    6d20:	b	6d60 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x124>
    6d24:	ldrb	w9, [x20, #1]
    6d28:	ldr	w8, [x22]
    6d2c:	cmp	x8, x9
    6d30:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6d34:	ldr	x10, [x19]
    6d38:	ldr	x9, [x10, x9, lsl #3]
    6d3c:	str	w21, [x9, #8]
    6d40:	ldrb	w9, [x20, #1]
    6d44:	cmp	x8, x9
    6d48:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6d4c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6d50:	mov	x2, xzr
    6d54:	add	x8, x10, x9, lsl #3
    6d58:	add	x1, x1, #0x0
    6d5c:	mov	w24, #0x1                   	// #1
    6d60:	ldr	x0, [x8]
    6d64:	bl	0 <LLVMInitializeAArch64AsmParser>
    6d68:	ldrb	w8, [x20, #2]!
    6d6c:	add	w21, w21, w24
    6d70:	cbnz	w8, 6c84 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x48>
    6d74:	b	6df0 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b4>
    6d78:	ldrb	w9, [x20, #1]
    6d7c:	ldr	w8, [x22]
    6d80:	cmp	x8, x9
    6d84:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6d88:	ldr	x10, [x19]
    6d8c:	ldr	x9, [x10, x9, lsl #3]
    6d90:	str	w21, [x9, #8]
    6d94:	ldrb	w9, [x20, #1]
    6d98:	cmp	x8, x9
    6d9c:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6da0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6da4:	add	x8, x10, x9, lsl #3
    6da8:	add	x1, x1, #0x0
    6dac:	mov	w24, #0x2                   	// #2
    6db0:	b	6d1c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe0>
    6db4:	ldrb	w9, [x20, #1]
    6db8:	ldr	w8, [x22]
    6dbc:	cmp	x8, x9
    6dc0:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6dc4:	ldr	x10, [x19]
    6dc8:	ldr	x9, [x10, x9, lsl #3]
    6dcc:	str	w21, [x9, #8]
    6dd0:	ldrb	w9, [x20, #1]
    6dd4:	cmp	x8, x9
    6dd8:	b.ls	6e04 <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.plast
    6ddc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6de0:	add	x8, x10, x9, lsl #3
    6de4:	add	x1, x1, #0x0
    6de8:	mov	w2, #0x1                   	// #1
    6dec:	b	6d5c <_ZN12_GLOBAL__N_116AArch64AsmParser26convertToMapAndConstraintsEjRKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    6df0:	ldp	x20, x19, [sp, #48]
    6df4:	ldp	x22, x21, [sp, #32]
    6df8:	ldp	x24, x23, [sp, #16]
    6dfc:	ldp	x29, x30, [sp], #64
    6e00:	ret
    6e04:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6e08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6e0c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6e10:	add	x0, x0, #0x0
    6e14:	add	x1, x1, #0x0
    6e18:	add	x3, x3, #0x0
    6e1c:	mov	w2, #0x99                  	// #153
    6e20:	bl	0 <__assert_fail>
    6e24:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6e28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6e2c:	add	x0, x0, #0x0
    6e30:	add	x1, x1, #0x0
    6e34:	mov	w2, #0x1a94                	// #6804
    6e38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    6e3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6e40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6e44:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6e48:	add	x0, x0, #0x0
    6e4c:	add	x1, x1, #0x0
    6e50:	add	x3, x3, #0x0
    6e54:	mov	w2, #0x1a8f                	// #6799
    6e58:	bl	0 <__assert_fail>

0000000000006e5c <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_>:
    6e5c:	stp	x29, x30, [sp, #-32]!
    6e60:	stp	x20, x19, [sp, #16]
    6e64:	mov	x29, sp
    6e68:	ldr	w8, [x1, #48]
    6e6c:	cmp	w8, #0x3
    6e70:	b.ne	6fec <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x190>  // b.any
    6e74:	ldr	w8, [x1, #84]
    6e78:	mov	x20, x1
    6e7c:	mov	x19, x2
    6e80:	cbnz	w8, 6e98 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x3c>
    6e84:	ldr	w9, [x19, #48]
    6e88:	cmp	w9, #0x3
    6e8c:	b.ne	6fec <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x190>  // b.any
    6e90:	ldr	w9, [x19, #84]
    6e94:	cbz	w9, 6f20 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xc4>
    6e98:	ldr	w9, [x20, #76]
    6e9c:	cbnz	w9, 6fcc <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x170>
    6ea0:	ldr	w9, [x19, #48]
    6ea4:	cmp	w9, #0x3
    6ea8:	b.ne	6fcc <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x170>  // b.any
    6eac:	ldr	w9, [x19, #76]
    6eb0:	cbnz	w9, 6fcc <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x170>
    6eb4:	cmp	w8, #0x2
    6eb8:	b.eq	6edc <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x80>  // b.none
    6ebc:	cmp	w8, #0x1
    6ec0:	b.ne	6ef4 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x98>  // b.any
    6ec4:	ldr	x8, [x20]
    6ec8:	mov	x0, x20
    6ecc:	ldr	x8, [x8, #56]
    6ed0:	blr	x8
    6ed4:	bl	11e6c <_ZN4llvmL15getXRegFromWRegEj>
    6ed8:	b	6f58 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xfc>
    6edc:	ldr	x8, [x20]
    6ee0:	mov	x0, x20
    6ee4:	ldr	x8, [x8, #56]
    6ee8:	blr	x8
    6eec:	bl	11fa0 <_ZN4llvmL15getWRegFromXRegEj>
    6ef0:	b	6f58 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0xfc>
    6ef4:	ldr	w8, [x19, #84]
    6ef8:	cmp	w8, #0x2
    6efc:	b.eq	6f80 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x124>  // b.none
    6f00:	cmp	w8, #0x1
    6f04:	b.ne	6fbc <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x160>  // b.any
    6f08:	ldr	x8, [x19]
    6f0c:	mov	x0, x19
    6f10:	ldr	x8, [x8, #56]
    6f14:	blr	x8
    6f18:	bl	11e6c <_ZN4llvmL15getXRegFromWRegEj>
    6f1c:	b	6f94 <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x138>
    6f20:	ldr	x8, [x20]
    6f24:	mov	x0, x20
    6f28:	ldr	x8, [x8, #48]
    6f2c:	blr	x8
    6f30:	tbz	w0, #0, 700c <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x1b0>
    6f34:	ldr	x8, [x19]
    6f38:	mov	x0, x19
    6f3c:	ldr	x8, [x8, #48]
    6f40:	blr	x8
    6f44:	tbz	w0, #0, 700c <_ZNK12_GLOBAL__N_116AArch64AsmParser9regsEqualERKN4llvm18MCParsedAsmOperandES4_+0x1b0>
    6f48:	ldr	x8, [x20]
    6f4c:	mov	x0, x20
    6f50:	ldr	x8, [x8, #56]
    6f54:	blr	x8
    6f58:	ldr	x8, [x19]
    6f5c:	mov	w20, w0
    6f60:	mov	x0, x19
    6f64:	ldr	x8, [x8, #56]
    6f68:	blr	x8
    6f6c:	cmp	w20, w0
    6f70:	cset	w0, eq  // eq = none
    6f74:	ldp	x20, x19, [sp, #16]
    6f78:	ldp	x29, x30, [sp], #32
    6f7c:	ret
    6f80:	ldr	x8, [x19]
    6f84:	mov	x0, x19
    6f88:	ldr	x8, [x8, #56]
    6f8c:	blr	x8
    6f90:	bl	11fa0 <_ZN4llvmL15getWRegFromXRegEj>
    6f94:	ldr	x8, [x20]
    6f98:	mov	w19, w0
    6f9c:	mov	x0, x20
    6fa0:	ldr	x8, [x8, #56]
    6fa4:	blr	x8
    6fa8:	cmp	w19, w0
    6fac:	cset	w0, eq  // eq = none
    6fb0:	ldp	x20, x19, [sp, #16]
    6fb4:	ldp	x29, x30, [sp], #32
    6fb8:	ret
    6fbc:	mov	w0, wzr
    6fc0:	ldp	x20, x19, [sp, #16]
    6fc4:	ldp	x29, x30, [sp], #32
    6fc8:	ret
    6fcc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6fd0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6fd4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6fd8:	add	x0, x0, #0x0
    6fdc:	add	x1, x1, #0x0
    6fe0:	add	x3, x3, #0x0
    6fe4:	mov	w2, #0xe92                 	// #3730
    6fe8:	bl	0 <__assert_fail>
    6fec:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    6ff0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    6ff4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    6ff8:	add	x0, x0, #0x0
    6ffc:	add	x1, x1, #0x0
    7000:	add	x3, x3, #0x0
    7004:	mov	w2, #0x221                 	// #545
    7008:	bl	0 <__assert_fail>
    700c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    7010:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    7014:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    7018:	add	x0, x0, #0x0
    701c:	add	x1, x1, #0x0
    7020:	add	x3, x3, #0x0
    7024:	mov	w2, #0x1c7                 	// #455
    7028:	bl	0 <__assert_fail>

000000000000702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>:
    702c:	sub	sp, sp, #0x70
    7030:	stp	x29, x30, [sp, #64]
    7034:	stp	x22, x21, [sp, #80]
    7038:	stp	x20, x19, [sp, #96]
    703c:	add	x29, sp, #0x40
    7040:	mov	x20, x0
    7044:	add	x8, sp, #0x10
    7048:	sub	x0, x29, #0x10
    704c:	mov	w19, w3
    7050:	stp	x1, x2, [sp]
    7054:	stp	x1, x2, [x29, #-16]
    7058:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    705c:	ldp	x0, x8, [sp, #16]
    7060:	cmp	x8, #0x3
    7064:	b.eq	711c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xf0>  // b.none
    7068:	cmp	x8, #0x2
    706c:	b.ne	740c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3e0>  // b.any
    7070:	ldrh	w8, [x0]
    7074:	mov	w9, #0x307a                	// #12410
    7078:	cmp	w8, w9
    707c:	b.eq	7504 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4d8>  // b.none
    7080:	ldrh	w8, [x0]
    7084:	mov	w9, #0x317a                	// #12666
    7088:	cmp	w8, w9
    708c:	b.eq	75ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5c0>  // b.none
    7090:	ldrh	w8, [x0]
    7094:	mov	w9, #0x327a                	// #12922
    7098:	cmp	w8, w9
    709c:	b.eq	7604 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5d8>  // b.none
    70a0:	ldrh	w8, [x0]
    70a4:	mov	w9, #0x337a                	// #13178
    70a8:	cmp	w8, w9
    70ac:	b.eq	762c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x600>  // b.none
    70b0:	ldrh	w8, [x0]
    70b4:	mov	w9, #0x347a                	// #13434
    70b8:	cmp	w8, w9
    70bc:	b.eq	7654 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x628>  // b.none
    70c0:	ldrh	w8, [x0]
    70c4:	mov	w9, #0x357a                	// #13690
    70c8:	cmp	w8, w9
    70cc:	b.eq	767c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x650>  // b.none
    70d0:	ldrh	w8, [x0]
    70d4:	mov	w9, #0x367a                	// #13946
    70d8:	cmp	w8, w9
    70dc:	b.eq	76a4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x678>  // b.none
    70e0:	ldrh	w8, [x0]
    70e4:	mov	w9, #0x377a                	// #14202
    70e8:	cmp	w8, w9
    70ec:	b.eq	76cc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6a0>  // b.none
    70f0:	ldrh	w8, [x0]
    70f4:	mov	w9, #0x387a                	// #14458
    70f8:	cmp	w8, w9
    70fc:	b.eq	76f4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6c8>  // b.none
    7100:	ldrh	w8, [x0]
    7104:	mov	w9, #0x397a                	// #14714
    7108:	mov	w21, wzr
    710c:	cmp	w8, w9
    7110:	b.ne	7410 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3e4>  // b.any
    7114:	mov	w8, #0xfe                  	// #254
    7118:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    711c:	ldrh	w9, [x0]
    7120:	ldrb	w10, [x0, #2]
    7124:	mov	w8, #0x317a                	// #12666
    7128:	eor	w9, w9, w8
    712c:	eor	w10, w10, #0x30
    7130:	orr	w9, w9, w10
    7134:	tst	w9, #0xffff
    7138:	b.eq	7510 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4e4>  // b.none
    713c:	ldrh	w9, [x0]
    7140:	ldrb	w10, [x0, #2]
    7144:	mov	w11, #0x31                  	// #49
    7148:	eor	w8, w9, w8
    714c:	eor	w9, w10, w11
    7150:	orr	w8, w8, w9
    7154:	tst	w8, #0xffff
    7158:	b.eq	75f8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5cc>  // b.none
    715c:	ldrh	w9, [x0]
    7160:	ldrb	w10, [x0, #2]
    7164:	mov	w8, #0x317a                	// #12666
    7168:	mov	w11, #0x32                  	// #50
    716c:	eor	w9, w9, w8
    7170:	eor	w10, w10, w11
    7174:	orr	w9, w9, w10
    7178:	tst	w9, #0xffff
    717c:	b.eq	7610 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5e4>  // b.none
    7180:	ldrh	w9, [x0]
    7184:	ldrb	w10, [x0, #2]
    7188:	mov	w11, #0x33                  	// #51
    718c:	eor	w8, w9, w8
    7190:	eor	w9, w10, w11
    7194:	orr	w8, w8, w9
    7198:	tst	w8, #0xffff
    719c:	b.eq	7638 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x60c>  // b.none
    71a0:	ldrh	w9, [x0]
    71a4:	ldrb	w10, [x0, #2]
    71a8:	mov	w8, #0x317a                	// #12666
    71ac:	mov	w11, #0x34                  	// #52
    71b0:	eor	w9, w9, w8
    71b4:	eor	w10, w10, w11
    71b8:	orr	w9, w9, w10
    71bc:	tst	w9, #0xffff
    71c0:	b.eq	7660 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x634>  // b.none
    71c4:	ldrh	w9, [x0]
    71c8:	ldrb	w10, [x0, #2]
    71cc:	mov	w11, #0x35                  	// #53
    71d0:	eor	w8, w9, w8
    71d4:	eor	w9, w10, w11
    71d8:	orr	w8, w8, w9
    71dc:	tst	w8, #0xffff
    71e0:	b.eq	7688 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x65c>  // b.none
    71e4:	ldrh	w9, [x0]
    71e8:	ldrb	w10, [x0, #2]
    71ec:	mov	w8, #0x317a                	// #12666
    71f0:	mov	w11, #0x36                  	// #54
    71f4:	eor	w9, w9, w8
    71f8:	eor	w10, w10, w11
    71fc:	orr	w9, w9, w10
    7200:	tst	w9, #0xffff
    7204:	b.eq	76b0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x684>  // b.none
    7208:	ldrh	w9, [x0]
    720c:	ldrb	w10, [x0, #2]
    7210:	mov	w11, #0x37                  	// #55
    7214:	eor	w8, w9, w8
    7218:	eor	w9, w10, w11
    721c:	orr	w8, w8, w9
    7220:	tst	w8, #0xffff
    7224:	b.eq	76d8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6ac>  // b.none
    7228:	ldrh	w9, [x0]
    722c:	ldrb	w10, [x0, #2]
    7230:	mov	w8, #0x317a                	// #12666
    7234:	eor	w9, w9, w8
    7238:	eor	w10, w10, #0x38
    723c:	orr	w9, w9, w10
    7240:	tst	w9, #0xffff
    7244:	b.eq	7700 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6d4>  // b.none
    7248:	ldrh	w9, [x0]
    724c:	ldrb	w10, [x0, #2]
    7250:	mov	w11, #0x39                  	// #57
    7254:	eor	w8, w9, w8
    7258:	eor	w9, w10, w11
    725c:	orr	w8, w8, w9
    7260:	tst	w8, #0xffff
    7264:	b.eq	7714 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6e8>  // b.none
    7268:	ldrh	w9, [x0]
    726c:	ldrb	w10, [x0, #2]
    7270:	mov	w8, #0x327a                	// #12922
    7274:	eor	w9, w9, w8
    7278:	eor	w10, w10, #0x30
    727c:	orr	w9, w9, w10
    7280:	tst	w9, #0xffff
    7284:	b.eq	7728 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6fc>  // b.none
    7288:	ldrh	w9, [x0]
    728c:	ldrb	w10, [x0, #2]
    7290:	mov	w11, #0x31                  	// #49
    7294:	eor	w8, w9, w8
    7298:	eor	w9, w10, w11
    729c:	orr	w8, w8, w9
    72a0:	tst	w8, #0xffff
    72a4:	b.eq	7b7c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb50>  // b.none
    72a8:	ldrh	w9, [x0]
    72ac:	ldrb	w10, [x0, #2]
    72b0:	mov	w8, #0x327a                	// #12922
    72b4:	mov	w11, #0x32                  	// #50
    72b8:	eor	w9, w9, w8
    72bc:	eor	w10, w10, w11
    72c0:	orr	w9, w9, w10
    72c4:	tst	w9, #0xffff
    72c8:	b.eq	7b98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb6c>  // b.none
    72cc:	ldrh	w9, [x0]
    72d0:	ldrb	w10, [x0, #2]
    72d4:	mov	w11, #0x33                  	// #51
    72d8:	eor	w8, w9, w8
    72dc:	eor	w9, w10, w11
    72e0:	orr	w8, w8, w9
    72e4:	tst	w8, #0xffff
    72e8:	b.eq	7bb4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb88>  // b.none
    72ec:	ldrh	w9, [x0]
    72f0:	ldrb	w10, [x0, #2]
    72f4:	mov	w8, #0x327a                	// #12922
    72f8:	mov	w11, #0x34                  	// #52
    72fc:	eor	w9, w9, w8
    7300:	eor	w10, w10, w11
    7304:	orr	w9, w9, w10
    7308:	tst	w9, #0xffff
    730c:	b.eq	7bd0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xba4>  // b.none
    7310:	ldrh	w9, [x0]
    7314:	ldrb	w10, [x0, #2]
    7318:	mov	w11, #0x35                  	// #53
    731c:	eor	w8, w9, w8
    7320:	eor	w9, w10, w11
    7324:	orr	w8, w8, w9
    7328:	tst	w8, #0xffff
    732c:	b.eq	7be4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbb8>  // b.none
    7330:	ldrh	w9, [x0]
    7334:	ldrb	w10, [x0, #2]
    7338:	mov	w8, #0x327a                	// #12922
    733c:	mov	w11, #0x36                  	// #54
    7340:	eor	w9, w9, w8
    7344:	eor	w10, w10, w11
    7348:	orr	w9, w9, w10
    734c:	tst	w9, #0xffff
    7350:	b.eq	7bf8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbcc>  // b.none
    7354:	ldrh	w9, [x0]
    7358:	ldrb	w10, [x0, #2]
    735c:	mov	w11, #0x37                  	// #55
    7360:	eor	w8, w9, w8
    7364:	eor	w9, w10, w11
    7368:	orr	w8, w8, w9
    736c:	tst	w8, #0xffff
    7370:	b.eq	7c0c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbe0>  // b.none
    7374:	ldrh	w9, [x0]
    7378:	ldrb	w10, [x0, #2]
    737c:	mov	w8, #0x327a                	// #12922
    7380:	eor	w9, w9, w8
    7384:	eor	w10, w10, #0x38
    7388:	orr	w9, w9, w10
    738c:	tst	w9, #0xffff
    7390:	b.eq	7c20 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbf4>  // b.none
    7394:	ldrh	w9, [x0]
    7398:	ldrb	w10, [x0, #2]
    739c:	mov	w11, #0x39                  	// #57
    73a0:	eor	w8, w9, w8
    73a4:	eor	w9, w10, w11
    73a8:	orr	w8, w8, w9
    73ac:	tst	w8, #0xffff
    73b0:	b.eq	7c34 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc08>  // b.none
    73b4:	ldrh	w9, [x0]
    73b8:	ldrb	w10, [x0, #2]
    73bc:	mov	w8, #0x337a                	// #13178
    73c0:	eor	w9, w9, w8
    73c4:	eor	w10, w10, #0x30
    73c8:	orr	w9, w9, w10
    73cc:	tst	w9, #0xffff
    73d0:	b.eq	7c48 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc1c>  // b.none
    73d4:	ldrh	w9, [x0]
    73d8:	ldrb	w10, [x0, #2]
    73dc:	mov	w11, #0x31                  	// #49
    73e0:	eor	w8, w9, w8
    73e4:	eor	w9, w10, w11
    73e8:	orr	w8, w8, w9
    73ec:	tst	w8, #0xffff
    73f0:	b.eq	7c5c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc30>  // b.none
    73f4:	mov	w21, wzr
    73f8:	add	x8, sp, #0x10
    73fc:	add	x8, x8, #0x10
    7400:	cmp	x0, x8
    7404:	b.ne	7420 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f4>  // b.any
    7408:	b	7424 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f8>
    740c:	mov	w21, wzr
    7410:	add	x8, sp, #0x10
    7414:	add	x8, x8, #0x10
    7418:	cmp	x0, x8
    741c:	b.eq	7424 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f8>  // b.none
    7420:	bl	0 <_ZdlPv>
    7424:	cbz	w21, 7434 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x408>
    7428:	cmp	w19, #0x2
    742c:	csel	w0, w21, wzr, eq  // eq = none
    7430:	b	8a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>
    7434:	ldp	x8, x9, [sp]
    7438:	sub	x0, x29, #0x10
    743c:	stp	x8, x9, [x29, #-16]
    7440:	add	x8, sp, #0x10
    7444:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7448:	ldp	x0, x8, [sp, #16]
    744c:	cmp	x8, #0x3
    7450:	b.eq	751c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x4f0>  // b.none
    7454:	cmp	x8, #0x2
    7458:	b.ne	75e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5b8>  // b.any
    745c:	ldrh	w8, [x0]
    7460:	mov	w9, #0x3070                	// #12400
    7464:	cmp	w8, w9
    7468:	b.eq	761c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5f0>  // b.none
    746c:	ldrh	w8, [x0]
    7470:	mov	w9, #0x3170                	// #12656
    7474:	cmp	w8, w9
    7478:	b.eq	7644 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x618>  // b.none
    747c:	ldrh	w8, [x0]
    7480:	mov	w9, #0x3270                	// #12912
    7484:	cmp	w8, w9
    7488:	b.eq	766c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x640>  // b.none
    748c:	ldrh	w8, [x0]
    7490:	mov	w9, #0x3370                	// #13168
    7494:	cmp	w8, w9
    7498:	b.eq	7694 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x668>  // b.none
    749c:	ldrh	w8, [x0]
    74a0:	mov	w9, #0x3470                	// #13424
    74a4:	cmp	w8, w9
    74a8:	b.eq	76bc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x690>  // b.none
    74ac:	ldrh	w8, [x0]
    74b0:	mov	w9, #0x3570                	// #13680
    74b4:	cmp	w8, w9
    74b8:	b.eq	76e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6b8>  // b.none
    74bc:	ldrh	w8, [x0]
    74c0:	mov	w9, #0x3670                	// #13936
    74c4:	cmp	w8, w9
    74c8:	b.eq	770c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6e0>  // b.none
    74cc:	ldrh	w8, [x0]
    74d0:	mov	w9, #0x3770                	// #14192
    74d4:	cmp	w8, w9
    74d8:	b.eq	7720 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6f4>  // b.none
    74dc:	ldrh	w8, [x0]
    74e0:	mov	w9, #0x3870                	// #14448
    74e4:	cmp	w8, w9
    74e8:	b.eq	7734 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x708>  // b.none
    74ec:	ldrh	w8, [x0]
    74f0:	mov	w9, #0x3970                	// #14704
    74f4:	cmp	w8, w9
    74f8:	b.ne	75e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5b8>  // b.any
    74fc:	mov	w21, #0x72                  	// #114
    7500:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    7504:	mov	w21, wzr
    7508:	mov	w8, #0xf5                  	// #245
    750c:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7510:	mov	w21, wzr
    7514:	mov	w8, #0xff                  	// #255
    7518:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    751c:	ldrh	w9, [x0]
    7520:	ldrb	w10, [x0, #2]
    7524:	mov	w8, #0x3170                	// #12656
    7528:	eor	w9, w9, w8
    752c:	eor	w10, w10, #0x30
    7530:	orr	w9, w9, w10
    7534:	tst	w9, #0xffff
    7538:	b.eq	7624 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x5f8>  // b.none
    753c:	ldrh	w9, [x0]
    7540:	ldrb	w10, [x0, #2]
    7544:	mov	w11, #0x31                  	// #49
    7548:	eor	w8, w9, w8
    754c:	eor	w9, w10, w11
    7550:	orr	w8, w8, w9
    7554:	tst	w8, #0xffff
    7558:	b.eq	764c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x620>  // b.none
    755c:	ldrh	w9, [x0]
    7560:	ldrb	w10, [x0, #2]
    7564:	mov	w8, #0x3170                	// #12656
    7568:	mov	w11, #0x32                  	// #50
    756c:	eor	w9, w9, w8
    7570:	eor	w10, w10, w11
    7574:	orr	w9, w9, w10
    7578:	tst	w9, #0xffff
    757c:	b.eq	7674 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x648>  // b.none
    7580:	ldrh	w9, [x0]
    7584:	ldrb	w10, [x0, #2]
    7588:	mov	w11, #0x33                  	// #51
    758c:	eor	w8, w9, w8
    7590:	eor	w9, w10, w11
    7594:	orr	w8, w8, w9
    7598:	tst	w8, #0xffff
    759c:	b.eq	769c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x670>  // b.none
    75a0:	ldrh	w9, [x0]
    75a4:	ldrb	w10, [x0, #2]
    75a8:	mov	w8, #0x3170                	// #12656
    75ac:	mov	w11, #0x34                  	// #52
    75b0:	eor	w9, w9, w8
    75b4:	eor	w10, w10, w11
    75b8:	orr	w9, w9, w10
    75bc:	tst	w9, #0xffff
    75c0:	b.eq	76c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x698>  // b.none
    75c4:	ldrh	w9, [x0]
    75c8:	ldrb	w10, [x0, #2]
    75cc:	mov	w11, #0x35                  	// #53
    75d0:	eor	w8, w9, w8
    75d4:	eor	w9, w10, w11
    75d8:	orr	w8, w8, w9
    75dc:	tst	w8, #0xffff
    75e0:	b.eq	76ec <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x6c0>  // b.none
    75e4:	mov	w21, wzr
    75e8:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    75ec:	mov	w21, wzr
    75f0:	mov	w8, #0xf6                  	// #246
    75f4:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    75f8:	mov	w8, wzr
    75fc:	mov	w21, #0x100                 	// #256
    7600:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7604:	mov	w21, wzr
    7608:	mov	w8, #0xf7                  	// #247
    760c:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7610:	mov	w21, #0x100                 	// #256
    7614:	mov	w8, #0x1                   	// #1
    7618:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    761c:	mov	w21, #0x69                  	// #105
    7620:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    7624:	mov	w21, #0x73                  	// #115
    7628:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    762c:	mov	w21, wzr
    7630:	mov	w8, #0xf8                  	// #248
    7634:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7638:	mov	w21, #0x100                 	// #256
    763c:	mov	w8, #0x2                   	// #2
    7640:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7644:	mov	w21, #0x6a                  	// #106
    7648:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    764c:	mov	w21, #0x74                  	// #116
    7650:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    7654:	mov	w21, wzr
    7658:	mov	w8, #0xf9                  	// #249
    765c:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7660:	mov	w21, #0x100                 	// #256
    7664:	mov	w8, #0x3                   	// #3
    7668:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    766c:	mov	w21, #0x6b                  	// #107
    7670:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    7674:	mov	w21, #0x75                  	// #117
    7678:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    767c:	mov	w21, wzr
    7680:	mov	w8, #0xfa                  	// #250
    7684:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7688:	mov	w21, #0x100                 	// #256
    768c:	mov	w8, #0x4                   	// #4
    7690:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7694:	mov	w21, #0x6c                  	// #108
    7698:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    769c:	mov	w21, #0x76                  	// #118
    76a0:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    76a4:	mov	w21, wzr
    76a8:	mov	w8, #0xfb                  	// #251
    76ac:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    76b0:	mov	w21, #0x100                 	// #256
    76b4:	mov	w8, #0x5                   	// #5
    76b8:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    76bc:	mov	w21, #0x6d                  	// #109
    76c0:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    76c4:	mov	w21, #0x77                  	// #119
    76c8:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    76cc:	mov	w21, wzr
    76d0:	mov	w8, #0xfc                  	// #252
    76d4:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    76d8:	mov	w21, #0x100                 	// #256
    76dc:	mov	w8, #0x6                   	// #6
    76e0:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    76e4:	mov	w21, #0x6e                  	// #110
    76e8:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    76ec:	mov	w21, #0x78                  	// #120
    76f0:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    76f4:	mov	w21, wzr
    76f8:	mov	w8, #0xfd                  	// #253
    76fc:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7700:	mov	w21, #0x100                 	// #256
    7704:	mov	w8, #0x7                   	// #7
    7708:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    770c:	mov	w21, #0x6f                  	// #111
    7710:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    7714:	mov	w21, #0x100                 	// #256
    7718:	mov	w8, #0x8                   	// #8
    771c:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7720:	mov	w21, #0x70                  	// #112
    7724:	b	7738 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x70c>
    7728:	mov	w21, #0x100                 	// #256
    772c:	mov	w8, #0x9                   	// #9
    7730:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7734:	mov	w21, #0x71                  	// #113
    7738:	add	x8, sp, #0x10
    773c:	add	x8, x8, #0x10
    7740:	cmp	x0, x8
    7744:	b.eq	774c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x720>  // b.none
    7748:	bl	0 <_ZdlPv>
    774c:	cbz	w21, 775c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x730>
    7750:	cmp	w19, #0x3
    7754:	csel	w0, w21, wzr, eq  // eq = none
    7758:	b	8a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>
    775c:	ldp	x8, x9, [sp]
    7760:	sub	x0, x29, #0x10
    7764:	stp	x8, x9, [x29, #-16]
    7768:	add	x8, sp, #0x10
    776c:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    7770:	ldp	x0, x8, [sp, #16]
    7774:	cmp	x8, #0x3
    7778:	b.eq	782c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x800>  // b.none
    777c:	cmp	x8, #0x2
    7780:	b.ne	7824 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x7f8>  // b.any
    7784:	ldrh	w8, [x0]
    7788:	mov	w9, #0x3076                	// #12406
    778c:	cmp	w8, w9
    7790:	b.eq	7b0c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xae0>  // b.none
    7794:	ldrh	w8, [x0]
    7798:	mov	w9, #0x3176                	// #12662
    779c:	cmp	w8, w9
    77a0:	b.eq	7b1c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xaf0>  // b.none
    77a4:	ldrh	w8, [x0]
    77a8:	mov	w9, #0x3276                	// #12918
    77ac:	cmp	w8, w9
    77b0:	b.eq	7b2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb00>  // b.none
    77b4:	ldrh	w8, [x0]
    77b8:	mov	w9, #0x3376                	// #13174
    77bc:	cmp	w8, w9
    77c0:	b.eq	7b3c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb10>  // b.none
    77c4:	ldrh	w8, [x0]
    77c8:	mov	w9, #0x3476                	// #13430
    77cc:	cmp	w8, w9
    77d0:	b.eq	7b4c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb20>  // b.none
    77d4:	ldrh	w8, [x0]
    77d8:	mov	w9, #0x3576                	// #13686
    77dc:	cmp	w8, w9
    77e0:	b.eq	7b5c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb30>  // b.none
    77e4:	ldrh	w8, [x0]
    77e8:	mov	w9, #0x3676                	// #13942
    77ec:	cmp	w8, w9
    77f0:	b.eq	7b6c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb40>  // b.none
    77f4:	ldrh	w8, [x0]
    77f8:	mov	w9, #0x3776                	// #14198
    77fc:	cmp	w8, w9
    7800:	b.eq	7b88 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb5c>  // b.none
    7804:	ldrh	w8, [x0]
    7808:	mov	w9, #0x3876                	// #14454
    780c:	cmp	w8, w9
    7810:	b.eq	7ba4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb78>  // b.none
    7814:	ldrh	w8, [x0]
    7818:	mov	w9, #0x3976                	// #14710
    781c:	cmp	w8, w9
    7820:	b.eq	7bc0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb94>  // b.none
    7824:	mov	w21, wzr
    7828:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    782c:	ldrh	w9, [x0]
    7830:	ldrb	w10, [x0, #2]
    7834:	mov	w8, #0x3176                	// #12662
    7838:	eor	w9, w9, w8
    783c:	eor	w10, w10, #0x30
    7840:	orr	w9, w9, w10
    7844:	tst	w9, #0xffff
    7848:	b.eq	7b14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xae8>  // b.none
    784c:	ldrh	w9, [x0]
    7850:	ldrb	w10, [x0, #2]
    7854:	mov	w11, #0x31                  	// #49
    7858:	eor	w8, w9, w8
    785c:	eor	w9, w10, w11
    7860:	orr	w8, w8, w9
    7864:	tst	w8, #0xffff
    7868:	b.eq	7b24 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xaf8>  // b.none
    786c:	ldrh	w9, [x0]
    7870:	ldrb	w10, [x0, #2]
    7874:	mov	w8, #0x3176                	// #12662
    7878:	mov	w11, #0x32                  	// #50
    787c:	eor	w9, w9, w8
    7880:	eor	w10, w10, w11
    7884:	orr	w9, w9, w10
    7888:	tst	w9, #0xffff
    788c:	b.eq	7b34 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb08>  // b.none
    7890:	ldrh	w9, [x0]
    7894:	ldrb	w10, [x0, #2]
    7898:	mov	w11, #0x33                  	// #51
    789c:	eor	w8, w9, w8
    78a0:	eor	w9, w10, w11
    78a4:	orr	w8, w8, w9
    78a8:	tst	w8, #0xffff
    78ac:	b.eq	7b44 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb18>  // b.none
    78b0:	ldrh	w9, [x0]
    78b4:	ldrb	w10, [x0, #2]
    78b8:	mov	w8, #0x3176                	// #12662
    78bc:	mov	w11, #0x34                  	// #52
    78c0:	eor	w9, w9, w8
    78c4:	eor	w10, w10, w11
    78c8:	orr	w9, w9, w10
    78cc:	tst	w9, #0xffff
    78d0:	b.eq	7b54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb28>  // b.none
    78d4:	ldrh	w9, [x0]
    78d8:	ldrb	w10, [x0, #2]
    78dc:	mov	w11, #0x35                  	// #53
    78e0:	eor	w8, w9, w8
    78e4:	eor	w9, w10, w11
    78e8:	orr	w8, w8, w9
    78ec:	tst	w8, #0xffff
    78f0:	b.eq	7b64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb38>  // b.none
    78f4:	ldrh	w9, [x0]
    78f8:	ldrb	w10, [x0, #2]
    78fc:	mov	w8, #0x3176                	// #12662
    7900:	mov	w11, #0x36                  	// #54
    7904:	eor	w9, w9, w8
    7908:	eor	w10, w10, w11
    790c:	orr	w9, w9, w10
    7910:	tst	w9, #0xffff
    7914:	b.eq	7b74 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb48>  // b.none
    7918:	ldrh	w9, [x0]
    791c:	ldrb	w10, [x0, #2]
    7920:	mov	w11, #0x37                  	// #55
    7924:	eor	w8, w9, w8
    7928:	eor	w9, w10, w11
    792c:	orr	w8, w8, w9
    7930:	tst	w8, #0xffff
    7934:	b.eq	7b90 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb64>  // b.none
    7938:	ldrh	w9, [x0]
    793c:	ldrb	w10, [x0, #2]
    7940:	mov	w8, #0x3176                	// #12662
    7944:	eor	w9, w9, w8
    7948:	eor	w10, w10, #0x38
    794c:	orr	w9, w9, w10
    7950:	tst	w9, #0xffff
    7954:	b.eq	7bac <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb80>  // b.none
    7958:	ldrh	w9, [x0]
    795c:	ldrb	w10, [x0, #2]
    7960:	mov	w11, #0x39                  	// #57
    7964:	eor	w8, w9, w8
    7968:	eor	w9, w10, w11
    796c:	orr	w8, w8, w9
    7970:	tst	w8, #0xffff
    7974:	b.eq	7bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xb9c>  // b.none
    7978:	ldrh	w9, [x0]
    797c:	ldrb	w10, [x0, #2]
    7980:	mov	w8, #0x3276                	// #12918
    7984:	eor	w9, w9, w8
    7988:	eor	w10, w10, #0x30
    798c:	orr	w9, w9, w10
    7990:	tst	w9, #0xffff
    7994:	b.eq	7bdc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbb0>  // b.none
    7998:	ldrh	w9, [x0]
    799c:	ldrb	w10, [x0, #2]
    79a0:	mov	w11, #0x31                  	// #49
    79a4:	eor	w8, w9, w8
    79a8:	eor	w9, w10, w11
    79ac:	orr	w8, w8, w9
    79b0:	tst	w8, #0xffff
    79b4:	b.eq	7bf0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbc4>  // b.none
    79b8:	ldrh	w9, [x0]
    79bc:	ldrb	w10, [x0, #2]
    79c0:	mov	w8, #0x3276                	// #12918
    79c4:	mov	w11, #0x32                  	// #50
    79c8:	eor	w9, w9, w8
    79cc:	eor	w10, w10, w11
    79d0:	orr	w9, w9, w10
    79d4:	tst	w9, #0xffff
    79d8:	b.eq	7c04 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbd8>  // b.none
    79dc:	ldrh	w9, [x0]
    79e0:	ldrb	w10, [x0, #2]
    79e4:	mov	w11, #0x33                  	// #51
    79e8:	eor	w8, w9, w8
    79ec:	eor	w9, w10, w11
    79f0:	orr	w8, w8, w9
    79f4:	tst	w8, #0xffff
    79f8:	b.eq	7c18 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xbec>  // b.none
    79fc:	ldrh	w9, [x0]
    7a00:	ldrb	w10, [x0, #2]
    7a04:	mov	w8, #0x3276                	// #12918
    7a08:	mov	w11, #0x34                  	// #52
    7a0c:	eor	w9, w9, w8
    7a10:	eor	w10, w10, w11
    7a14:	orr	w9, w9, w10
    7a18:	tst	w9, #0xffff
    7a1c:	b.eq	7c2c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc00>  // b.none
    7a20:	ldrh	w9, [x0]
    7a24:	ldrb	w10, [x0, #2]
    7a28:	mov	w11, #0x35                  	// #53
    7a2c:	eor	w8, w9, w8
    7a30:	eor	w9, w10, w11
    7a34:	orr	w8, w8, w9
    7a38:	tst	w8, #0xffff
    7a3c:	b.eq	7c40 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc14>  // b.none
    7a40:	ldrh	w9, [x0]
    7a44:	ldrb	w10, [x0, #2]
    7a48:	mov	w8, #0x3276                	// #12918
    7a4c:	mov	w11, #0x36                  	// #54
    7a50:	eor	w9, w9, w8
    7a54:	eor	w10, w10, w11
    7a58:	orr	w9, w9, w10
    7a5c:	tst	w9, #0xffff
    7a60:	b.eq	7c54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc28>  // b.none
    7a64:	ldrh	w9, [x0]
    7a68:	ldrb	w10, [x0, #2]
    7a6c:	mov	w11, #0x37                  	// #55
    7a70:	eor	w8, w9, w8
    7a74:	eor	w9, w10, w11
    7a78:	orr	w8, w8, w9
    7a7c:	tst	w8, #0xffff
    7a80:	b.eq	7c7c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc50>  // b.none
    7a84:	ldrh	w9, [x0]
    7a88:	ldrb	w10, [x0, #2]
    7a8c:	mov	w8, #0x3276                	// #12918
    7a90:	eor	w9, w9, w8
    7a94:	eor	w10, w10, #0x38
    7a98:	orr	w9, w9, w10
    7a9c:	tst	w9, #0xffff
    7aa0:	b.eq	7c84 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc58>  // b.none
    7aa4:	ldrh	w9, [x0]
    7aa8:	ldrb	w10, [x0, #2]
    7aac:	mov	w11, #0x39                  	// #57
    7ab0:	eor	w8, w9, w8
    7ab4:	eor	w9, w10, w11
    7ab8:	orr	w8, w8, w9
    7abc:	tst	w8, #0xffff
    7ac0:	b.eq	7c8c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc60>  // b.none
    7ac4:	ldrh	w9, [x0]
    7ac8:	ldrb	w10, [x0, #2]
    7acc:	mov	w8, #0x3376                	// #13174
    7ad0:	eor	w9, w9, w8
    7ad4:	eor	w10, w10, #0x30
    7ad8:	orr	w9, w9, w10
    7adc:	tst	w9, #0xffff
    7ae0:	b.eq	7c94 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc68>  // b.none
    7ae4:	ldrh	w9, [x0]
    7ae8:	ldrb	w10, [x0, #2]
    7aec:	mov	w11, #0x31                  	// #49
    7af0:	eor	w8, w9, w8
    7af4:	eor	w9, w10, w11
    7af8:	orr	w8, w8, w9
    7afc:	tst	w8, #0xffff
    7b00:	b.ne	7824 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x7f8>  // b.any
    7b04:	mov	w21, #0x98                  	// #152
    7b08:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b0c:	mov	w21, #0x79                  	// #121
    7b10:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b14:	mov	w21, #0x83                  	// #131
    7b18:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b1c:	mov	w21, #0x7a                  	// #122
    7b20:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b24:	mov	w21, #0x84                  	// #132
    7b28:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b2c:	mov	w21, #0x7b                  	// #123
    7b30:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b34:	mov	w21, #0x85                  	// #133
    7b38:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b3c:	mov	w21, #0x7c                  	// #124
    7b40:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b44:	mov	w21, #0x86                  	// #134
    7b48:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b4c:	mov	w21, #0x7d                  	// #125
    7b50:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b54:	mov	w21, #0x87                  	// #135
    7b58:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b5c:	mov	w21, #0x7e                  	// #126
    7b60:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b64:	mov	w21, #0x88                  	// #136
    7b68:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b6c:	mov	w21, #0x7f                  	// #127
    7b70:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b74:	mov	w21, #0x89                  	// #137
    7b78:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b7c:	mov	w21, #0x100                 	// #256
    7b80:	mov	w8, #0xa                   	// #10
    7b84:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7b88:	mov	w21, #0x80                  	// #128
    7b8c:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b90:	mov	w21, #0x8a                  	// #138
    7b94:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7b98:	mov	w21, #0x100                 	// #256
    7b9c:	mov	w8, #0xb                   	// #11
    7ba0:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7ba4:	mov	w21, #0x81                  	// #129
    7ba8:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7bac:	mov	w21, #0x8b                  	// #139
    7bb0:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7bb4:	mov	w21, #0x100                 	// #256
    7bb8:	mov	w8, #0xc                   	// #12
    7bbc:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7bc0:	mov	w21, #0x82                  	// #130
    7bc4:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7bc8:	mov	w21, #0x8c                  	// #140
    7bcc:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7bd0:	mov	w21, #0x100                 	// #256
    7bd4:	mov	w8, #0xd                   	// #13
    7bd8:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7bdc:	mov	w21, #0x8d                  	// #141
    7be0:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7be4:	mov	w21, #0x100                 	// #256
    7be8:	mov	w8, #0xe                   	// #14
    7bec:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7bf0:	mov	w21, #0x8e                  	// #142
    7bf4:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7bf8:	mov	w21, #0x100                 	// #256
    7bfc:	mov	w8, #0xf                   	// #15
    7c00:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7c04:	mov	w21, #0x8f                  	// #143
    7c08:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c0c:	mov	w21, #0x100                 	// #256
    7c10:	mov	w8, #0x10                  	// #16
    7c14:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7c18:	mov	w21, #0x90                  	// #144
    7c1c:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c20:	mov	w21, #0x100                 	// #256
    7c24:	mov	w8, #0x11                  	// #17
    7c28:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7c2c:	mov	w21, #0x91                  	// #145
    7c30:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c34:	mov	w21, #0x100                 	// #256
    7c38:	mov	w8, #0x12                  	// #18
    7c3c:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7c40:	mov	w21, #0x92                  	// #146
    7c44:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c48:	mov	w21, #0x100                 	// #256
    7c4c:	mov	w8, #0x13                  	// #19
    7c50:	b	7c64 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc38>
    7c54:	mov	w21, #0x93                  	// #147
    7c58:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c5c:	mov	w21, #0x100                 	// #256
    7c60:	mov	w8, #0x14                  	// #20
    7c64:	orr	w21, w21, w8
    7c68:	add	x8, sp, #0x10
    7c6c:	add	x8, x8, #0x10
    7c70:	cmp	x0, x8
    7c74:	b.ne	7420 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f4>  // b.any
    7c78:	b	7424 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x3f8>
    7c7c:	mov	w21, #0x94                  	// #148
    7c80:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c84:	mov	w21, #0x95                  	// #149
    7c88:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c8c:	mov	w21, #0x96                  	// #150
    7c90:	b	7c98 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc6c>
    7c94:	mov	w21, #0x97                  	// #151
    7c98:	add	x8, sp, #0x10
    7c9c:	add	x8, x8, #0x10
    7ca0:	cmp	x0, x8
    7ca4:	b.eq	7cac <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc80>  // b.none
    7ca8:	bl	0 <_ZdlPv>
    7cac:	cbz	w21, 7cbc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xc90>
    7cb0:	cmp	w19, #0x1
    7cb4:	csel	w0, w21, wzr, eq  // eq = none
    7cb8:	b	8a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>
    7cbc:	ldr	x8, [sp, #8]
    7cc0:	sub	x9, x8, #0x2
    7cc4:	cmp	x9, #0x4
    7cc8:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7ccc:	ldr	x8, [sp]
    7cd0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7cd4:	add	x10, x10, #0x0
    7cd8:	adr	x11, 7ce8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xcbc>
    7cdc:	ldrb	w12, [x10, x9]
    7ce0:	add	x11, x11, x12, lsl #2
    7ce4:	br	x11
    7ce8:	ldrb	w9, [x8]
    7cec:	sub	w9, w9, #0x62
    7cf0:	cmp	w9, #0x18
    7cf4:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7cf8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7cfc:	add	x10, x10, #0x0
    7d00:	adr	x11, 7d10 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xce4>
    7d04:	ldrh	w12, [x10, x9, lsl #1]
    7d08:	add	x11, x11, x12, lsl #2
    7d0c:	br	x11
    7d10:	ldrb	w8, [x8, #1]
    7d14:	sub	w8, w8, #0x30
    7d18:	cmp	w8, #0xa
    7d1c:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7d20:	and	w8, w8, #0xff
    7d24:	add	w8, w8, #0x9
    7d28:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7d2c:	ldrb	w9, [x8]
    7d30:	sub	w9, w9, #0x62
    7d34:	cmp	w9, #0x18
    7d38:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7d3c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7d40:	add	x10, x10, #0x0
    7d44:	adr	x11, 7d54 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd28>
    7d48:	ldrh	w12, [x10, x9, lsl #1]
    7d4c:	add	x11, x11, x12, lsl #2
    7d50:	br	x11
    7d54:	ldrb	w9, [x8, #1]
    7d58:	cmp	w9, #0x33
    7d5c:	b.eq	83f0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13c4>  // b.none
    7d60:	cmp	w9, #0x32
    7d64:	b.eq	8410 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x13e4>  // b.none
    7d68:	cmp	w9, #0x31
    7d6c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7d70:	ldrb	w8, [x8, #2]
    7d74:	sub	w8, w8, #0x30
    7d78:	cmp	w8, #0xa
    7d7c:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7d80:	and	w8, w8, #0xff
    7d84:	add	w8, w8, #0x13
    7d88:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7d8c:	ldr	w8, [x8]
    7d90:	mov	w9, #0x7a6e                	// #31342
    7d94:	movk	w9, #0x7663, lsl #16
    7d98:	cmp	w8, w9
    7d9c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7da0:	mov	w8, #0x4                   	// #4
    7da4:	cmp	w19, #0x0
    7da8:	csel	w0, w8, wzr, eq  // eq = none
    7dac:	b	8a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>
    7db0:	ldrb	w9, [x8]
    7db4:	cmp	w9, #0x7a
    7db8:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7dbc:	ldrb	w9, [x8, #1]
    7dc0:	sub	w9, w9, #0x30
    7dc4:	cmp	w9, #0x9
    7dc8:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7dcc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7dd0:	add	x10, x10, #0x0
    7dd4:	adr	x11, 7de4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xdb8>
    7dd8:	ldrh	w12, [x10, x9, lsl #1]
    7ddc:	add	x11, x11, x12, lsl #2
    7de0:	br	x11
    7de4:	ldrh	w9, [x8, #2]
    7de8:	ldrb	w8, [x8, #4]
    7dec:	mov	w10, #0x685f                	// #26719
    7df0:	mov	w11, #0x69                  	// #105
    7df4:	eor	w9, w9, w10
    7df8:	eor	w8, w8, w11
    7dfc:	orr	w8, w9, w8
    7e00:	tst	w8, #0xffff
    7e04:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7e08:	mov	w8, #0x115                 	// #277
    7e0c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7e10:	ldrb	w9, [x8]
    7e14:	cmp	w9, #0x7a
    7e18:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7e1c:	ldrb	w9, [x8, #1]
    7e20:	cmp	w9, #0x33
    7e24:	b.eq	7e8c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe60>  // b.none
    7e28:	cmp	w9, #0x32
    7e2c:	b.eq	7ecc <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xea0>  // b.none
    7e30:	cmp	w9, #0x31
    7e34:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7e38:	ldrb	w9, [x8, #2]
    7e3c:	sub	w9, w9, #0x30
    7e40:	cmp	w9, #0x9
    7e44:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7e48:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7e4c:	add	x10, x10, #0x0
    7e50:	adr	x11, 7e60 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xe34>
    7e54:	ldrh	w12, [x10, x9, lsl #1]
    7e58:	add	x11, x11, x12, lsl #2
    7e5c:	br	x11
    7e60:	ldurh	w9, [x8, #3]
    7e64:	ldrb	w8, [x8, #5]
    7e68:	mov	w10, #0x685f                	// #26719
    7e6c:	mov	w11, #0x69                  	// #105
    7e70:	eor	w9, w9, w10
    7e74:	eor	w8, w8, w11
    7e78:	orr	w8, w9, w8
    7e7c:	tst	w8, #0xffff
    7e80:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7e84:	mov	w8, #0x11f                 	// #287
    7e88:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7e8c:	ldrb	w9, [x8, #2]
    7e90:	cmp	w9, #0x31
    7e94:	b.eq	8398 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x136c>  // b.none
    7e98:	cmp	w9, #0x30
    7e9c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7ea0:	ldurh	w9, [x8, #3]
    7ea4:	ldrb	w8, [x8, #5]
    7ea8:	mov	w10, #0x685f                	// #26719
    7eac:	mov	w11, #0x69                  	// #105
    7eb0:	eor	w9, w9, w10
    7eb4:	eor	w8, w8, w11
    7eb8:	orr	w8, w9, w8
    7ebc:	tst	w8, #0xffff
    7ec0:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7ec4:	mov	w8, #0x133                 	// #307
    7ec8:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7ecc:	ldrb	w9, [x8, #2]
    7ed0:	sub	w9, w9, #0x30
    7ed4:	cmp	w9, #0x9
    7ed8:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7edc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
    7ee0:	add	x10, x10, #0x0
    7ee4:	adr	x11, 7ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xec8>
    7ee8:	ldrh	w12, [x10, x9, lsl #1]
    7eec:	add	x11, x11, x12, lsl #2
    7ef0:	br	x11
    7ef4:	ldurh	w9, [x8, #3]
    7ef8:	ldrb	w8, [x8, #5]
    7efc:	mov	w10, #0x685f                	// #26719
    7f00:	mov	w11, #0x69                  	// #105
    7f04:	eor	w9, w9, w10
    7f08:	eor	w8, w8, w11
    7f0c:	orr	w8, w9, w8
    7f10:	tst	w8, #0xffff
    7f14:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    7f18:	mov	w8, #0x129                 	// #297
    7f1c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7f20:	ldrb	w8, [x8, #1]
    7f24:	sub	w8, w8, #0x30
    7f28:	cmp	w8, #0xa
    7f2c:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7f30:	and	w8, w8, #0xff
    7f34:	add	w8, w8, #0x29
    7f38:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7f3c:	ldrb	w8, [x8, #1]
    7f40:	sub	w8, w8, #0x30
    7f44:	cmp	w8, #0xa
    7f48:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7f4c:	and	w8, w8, #0xff
    7f50:	add	w8, w8, #0x49
    7f54:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7f58:	ldrb	w8, [x8, #1]
    7f5c:	sub	w8, w8, #0x30
    7f60:	cmp	w8, #0xa
    7f64:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7f68:	and	w8, w8, #0xff
    7f6c:	add	w8, w8, #0x69
    7f70:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7f74:	ldrb	w8, [x8, #1]
    7f78:	sub	w8, w8, #0x30
    7f7c:	cmp	w8, #0xa
    7f80:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7f84:	and	w8, w8, #0xff
    7f88:	add	w8, w8, #0x79
    7f8c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7f90:	ldrb	w8, [x8, #1]
    7f94:	sub	w8, w8, #0x30
    7f98:	cmp	w8, #0x40
    7f9c:	b.hi	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.pmore
    7fa0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    7fa4:	add	x9, x9, #0x0
    7fa8:	adr	x10, 7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7fac:	ldrh	w11, [x9, x8, lsl #1]
    7fb0:	add	x10, x10, x11, lsl #2
    7fb4:	mov	w8, #0x99                  	// #153
    7fb8:	br	x10
    7fbc:	mov	w8, #0x9a                  	// #154
    7fc0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7fc4:	ldrb	w8, [x8, #1]
    7fc8:	sub	w8, w8, #0x30
    7fcc:	cmp	w8, #0xa
    7fd0:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7fd4:	and	w8, w8, #0xff
    7fd8:	add	w8, w8, #0xb9
    7fdc:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7fe0:	ldrb	w8, [x8, #1]
    7fe4:	sub	w8, w8, #0x30
    7fe8:	cmp	w8, #0xa
    7fec:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    7ff0:	and	w8, w8, #0xff
    7ff4:	add	w8, w8, #0xd8
    7ff8:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    7ffc:	ldrb	w8, [x8, #1]
    8000:	sub	w8, w8, #0x30
    8004:	cmp	w8, #0xa
    8008:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    800c:	and	w8, w8, #0xff
    8010:	add	w8, w8, #0xf5
    8014:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8018:	ldrb	w9, [x8, #1]
    801c:	cmp	w9, #0x33
    8020:	b.eq	842c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1400>  // b.none
    8024:	cmp	w9, #0x32
    8028:	b.eq	844c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1420>  // b.none
    802c:	cmp	w9, #0x31
    8030:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8034:	ldrb	w8, [x8, #2]
    8038:	sub	w8, w8, #0x30
    803c:	cmp	w8, #0xa
    8040:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8044:	and	w8, w8, #0xff
    8048:	add	w8, w8, #0x33
    804c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8050:	ldurh	w8, [x8, #1]
    8054:	mov	w9, #0x7266                	// #29286
    8058:	cmp	w8, w9
    805c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8060:	mov	w8, #0x1                   	// #1
    8064:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8068:	ldrb	w9, [x8, #1]
    806c:	cmp	w9, #0x33
    8070:	b.eq	8468 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x143c>  // b.none
    8074:	cmp	w9, #0x32
    8078:	b.eq	8488 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x145c>  // b.none
    807c:	cmp	w9, #0x31
    8080:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8084:	ldrb	w8, [x8, #2]
    8088:	sub	w8, w8, #0x30
    808c:	cmp	w8, #0xa
    8090:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8094:	and	w8, w8, #0xff
    8098:	add	w8, w8, #0x53
    809c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    80a0:	ldrb	w9, [x8, #1]
    80a4:	cmp	w9, #0x31
    80a8:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    80ac:	ldrb	w8, [x8, #2]
    80b0:	sub	w8, w8, #0x30
    80b4:	cmp	w8, #0x6
    80b8:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    80bc:	and	w8, w8, #0xff
    80c0:	add	w8, w8, #0x73
    80c4:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    80c8:	ldrb	w9, [x8, #1]
    80cc:	cmp	w9, #0x33
    80d0:	b.eq	84a4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1478>  // b.none
    80d4:	cmp	w9, #0x32
    80d8:	b.eq	84c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1498>  // b.none
    80dc:	cmp	w9, #0x31
    80e0:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    80e4:	ldrb	w8, [x8, #2]
    80e8:	sub	w8, w8, #0x30
    80ec:	cmp	w8, #0xa
    80f0:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    80f4:	and	w8, w8, #0xff
    80f8:	add	w8, w8, #0x83
    80fc:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8100:	ldrb	w9, [x8, #1]
    8104:	cmp	w9, #0x33
    8108:	b.eq	84e0 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14b4>  // b.none
    810c:	cmp	w9, #0x32
    8110:	b.eq	8500 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14d4>  // b.none
    8114:	cmp	w9, #0x31
    8118:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    811c:	ldrb	w8, [x8, #2]
    8120:	sub	w8, w8, #0x30
    8124:	cmp	w8, #0xa
    8128:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    812c:	and	w8, w8, #0xff
    8130:	add	w8, w8, #0xa3
    8134:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8138:	ldrb	w9, [x8, #1]
    813c:	cmp	w9, #0x32
    8140:	b.le	83c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1398>
    8144:	cmp	w9, #0x33
    8148:	b.eq	8590 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1564>  // b.none
    814c:	cmp	w9, #0x73
    8150:	b.eq	85a4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1578>  // b.none
    8154:	cmp	w9, #0x7a
    8158:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    815c:	ldrb	w8, [x8, #2]
    8160:	cmp	w8, #0x72
    8164:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8168:	mov	w8, #0x7                   	// #7
    816c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8170:	ldrb	w9, [x8, #1]
    8174:	cmp	w9, #0x32
    8178:	b.gt	8374 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1348>
    817c:	cmp	w9, #0x31
    8180:	b.eq	8560 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1534>  // b.none
    8184:	cmp	w9, #0x32
    8188:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    818c:	ldrb	w8, [x8, #2]
    8190:	sub	w8, w8, #0x30
    8194:	cmp	w8, #0xa
    8198:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    819c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    81a0:	sxtb	x8, w8
    81a4:	add	x9, x9, #0x0
    81a8:	ldr	w8, [x9, x8, lsl #2]
    81ac:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    81b0:	ldrb	w9, [x8, #1]
    81b4:	cmp	w9, #0x33
    81b8:	b.eq	851c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x14f0>  // b.none
    81bc:	cmp	w9, #0x32
    81c0:	b.eq	8544 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1518>  // b.none
    81c4:	cmp	w9, #0x31
    81c8:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    81cc:	ldrb	w8, [x8, #2]
    81d0:	sub	w8, w8, #0x30
    81d4:	cmp	w8, #0xa
    81d8:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    81dc:	and	w8, w8, #0xff
    81e0:	add	w8, w8, #0xff
    81e4:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    81e8:	ldrh	w9, [x8, #2]
    81ec:	ldrb	w8, [x8, #4]
    81f0:	mov	w10, #0x685f                	// #26719
    81f4:	mov	w11, #0x69                  	// #105
    81f8:	eor	w9, w9, w10
    81fc:	eor	w8, w8, w11
    8200:	orr	w8, w9, w8
    8204:	tst	w8, #0xffff
    8208:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    820c:	mov	w8, #0x116                 	// #278
    8210:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8214:	ldrh	w9, [x8, #2]
    8218:	ldrb	w8, [x8, #4]
    821c:	mov	w10, #0x685f                	// #26719
    8220:	mov	w11, #0x69                  	// #105
    8224:	eor	w9, w9, w10
    8228:	eor	w8, w8, w11
    822c:	orr	w8, w9, w8
    8230:	tst	w8, #0xffff
    8234:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8238:	mov	w8, #0x117                 	// #279
    823c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8240:	ldrh	w9, [x8, #2]
    8244:	ldrb	w8, [x8, #4]
    8248:	mov	w10, #0x685f                	// #26719
    824c:	mov	w11, #0x69                  	// #105
    8250:	eor	w9, w9, w10
    8254:	eor	w8, w8, w11
    8258:	orr	w8, w9, w8
    825c:	tst	w8, #0xffff
    8260:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8264:	mov	w8, #0x118                 	// #280
    8268:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    826c:	ldrh	w9, [x8, #2]
    8270:	ldrb	w8, [x8, #4]
    8274:	mov	w10, #0x685f                	// #26719
    8278:	mov	w11, #0x69                  	// #105
    827c:	eor	w9, w9, w10
    8280:	eor	w8, w8, w11
    8284:	orr	w8, w9, w8
    8288:	tst	w8, #0xffff
    828c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8290:	mov	w8, #0x119                 	// #281
    8294:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8298:	ldrh	w9, [x8, #2]
    829c:	ldrb	w8, [x8, #4]
    82a0:	mov	w10, #0x685f                	// #26719
    82a4:	mov	w11, #0x69                  	// #105
    82a8:	eor	w9, w9, w10
    82ac:	eor	w8, w8, w11
    82b0:	orr	w8, w9, w8
    82b4:	tst	w8, #0xffff
    82b8:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    82bc:	mov	w8, #0x11a                 	// #282
    82c0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    82c4:	ldrh	w9, [x8, #2]
    82c8:	ldrb	w8, [x8, #4]
    82cc:	mov	w10, #0x685f                	// #26719
    82d0:	mov	w11, #0x69                  	// #105
    82d4:	eor	w9, w9, w10
    82d8:	eor	w8, w8, w11
    82dc:	orr	w8, w9, w8
    82e0:	tst	w8, #0xffff
    82e4:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    82e8:	mov	w8, #0x11b                 	// #283
    82ec:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    82f0:	ldrh	w9, [x8, #2]
    82f4:	ldrb	w8, [x8, #4]
    82f8:	mov	w10, #0x685f                	// #26719
    82fc:	mov	w11, #0x69                  	// #105
    8300:	eor	w9, w9, w10
    8304:	eor	w8, w8, w11
    8308:	orr	w8, w9, w8
    830c:	tst	w8, #0xffff
    8310:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8314:	mov	w8, #0x11c                 	// #284
    8318:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    831c:	ldrh	w9, [x8, #2]
    8320:	ldrb	w8, [x8, #4]
    8324:	mov	w10, #0x685f                	// #26719
    8328:	mov	w11, #0x69                  	// #105
    832c:	eor	w9, w9, w10
    8330:	eor	w8, w8, w11
    8334:	orr	w8, w9, w8
    8338:	tst	w8, #0xffff
    833c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8340:	mov	w8, #0x11d                 	// #285
    8344:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8348:	ldrh	w9, [x8, #2]
    834c:	ldrb	w8, [x8, #4]
    8350:	mov	w10, #0x685f                	// #26719
    8354:	mov	w11, #0x69                  	// #105
    8358:	eor	w9, w9, w10
    835c:	eor	w8, w8, w11
    8360:	orr	w8, w9, w8
    8364:	tst	w8, #0xffff
    8368:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    836c:	mov	w8, #0x11e                 	// #286
    8370:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8374:	cmp	w9, #0x33
    8378:	b.eq	857c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1550>  // b.none
    837c:	cmp	w9, #0x7a
    8380:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8384:	ldrb	w8, [x8, #2]
    8388:	cmp	w8, #0x72
    838c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8390:	mov	w8, #0x8                   	// #8
    8394:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8398:	ldurh	w9, [x8, #3]
    839c:	ldrb	w8, [x8, #5]
    83a0:	mov	w10, #0x685f                	// #26719
    83a4:	mov	w11, #0x69                  	// #105
    83a8:	eor	w9, w9, w10
    83ac:	eor	w8, w8, w11
    83b0:	orr	w8, w9, w8
    83b4:	tst	w8, #0xffff
    83b8:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    83bc:	mov	w8, #0x134                 	// #308
    83c0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    83c4:	cmp	w9, #0x31
    83c8:	b.eq	85b8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x158c>  // b.none
    83cc:	cmp	w9, #0x32
    83d0:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    83d4:	ldrb	w8, [x8, #2]
    83d8:	sub	w8, w8, #0x30
    83dc:	cmp	w8, #0xa
    83e0:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    83e4:	and	w8, w8, #0xff
    83e8:	add	w8, w8, #0xcd
    83ec:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    83f0:	ldrb	w9, [x8, #2]
    83f4:	mov	w8, #0x28                  	// #40
    83f8:	cmp	w9, #0x31
    83fc:	csel	w8, w8, wzr, eq  // eq = none
    8400:	cmp	w9, #0x30
    8404:	b.ne	853c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    8408:	mov	w8, #0x27                  	// #39
    840c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8410:	ldrb	w8, [x8, #2]
    8414:	sub	w8, w8, #0x30
    8418:	cmp	w8, #0xa
    841c:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8420:	and	w8, w8, #0xff
    8424:	add	w8, w8, #0x1d
    8428:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    842c:	ldrb	w9, [x8, #2]
    8430:	mov	w8, #0x48                  	// #72
    8434:	cmp	w9, #0x31
    8438:	csel	w8, w8, wzr, eq  // eq = none
    843c:	cmp	w9, #0x30
    8440:	b.ne	853c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    8444:	mov	w8, #0x47                  	// #71
    8448:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    844c:	ldrb	w8, [x8, #2]
    8450:	sub	w8, w8, #0x30
    8454:	cmp	w8, #0xa
    8458:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    845c:	and	w8, w8, #0xff
    8460:	add	w8, w8, #0x3d
    8464:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8468:	ldrb	w9, [x8, #2]
    846c:	mov	w8, #0x68                  	// #104
    8470:	cmp	w9, #0x31
    8474:	csel	w8, w8, wzr, eq  // eq = none
    8478:	cmp	w9, #0x30
    847c:	b.ne	853c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    8480:	mov	w8, #0x67                  	// #103
    8484:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8488:	ldrb	w8, [x8, #2]
    848c:	sub	w8, w8, #0x30
    8490:	cmp	w8, #0xa
    8494:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8498:	and	w8, w8, #0xff
    849c:	add	w8, w8, #0x5d
    84a0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    84a4:	ldrb	w9, [x8, #2]
    84a8:	mov	w8, #0x98                  	// #152
    84ac:	cmp	w9, #0x31
    84b0:	csel	w8, w8, wzr, eq  // eq = none
    84b4:	cmp	w9, #0x30
    84b8:	b.ne	853c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    84bc:	mov	w8, #0x97                  	// #151
    84c0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    84c4:	ldrb	w8, [x8, #2]
    84c8:	sub	w8, w8, #0x30
    84cc:	cmp	w8, #0xa
    84d0:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    84d4:	and	w8, w8, #0xff
    84d8:	add	w8, w8, #0x8d
    84dc:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    84e0:	ldrb	w9, [x8, #2]
    84e4:	mov	w8, #0xb8                  	// #184
    84e8:	cmp	w9, #0x31
    84ec:	csel	w8, w8, wzr, eq  // eq = none
    84f0:	cmp	w9, #0x30
    84f4:	b.ne	853c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    84f8:	mov	w8, #0xb7                  	// #183
    84fc:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8500:	ldrb	w8, [x8, #2]
    8504:	sub	w8, w8, #0x30
    8508:	cmp	w8, #0xa
    850c:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8510:	and	w8, w8, #0xff
    8514:	add	w8, w8, #0xad
    8518:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    851c:	ldrb	w9, [x8, #2]
    8520:	mov	w8, #0x114                 	// #276
    8524:	cmp	w9, #0x31
    8528:	csel	w8, w8, wzr, eq  // eq = none
    852c:	cmp	w9, #0x30
    8530:	b.ne	853c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1510>  // b.any
    8534:	mov	w8, #0x113                 	// #275
    8538:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    853c:	cbnz	w8, 7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8540:	b	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>
    8544:	ldrb	w8, [x8, #2]
    8548:	sub	w8, w8, #0x30
    854c:	cmp	w8, #0xa
    8550:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8554:	and	w8, w8, #0xff
    8558:	add	w8, w8, #0x109
    855c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8560:	ldrb	w8, [x8, #2]
    8564:	sub	w8, w8, #0x30
    8568:	cmp	w8, #0xa
    856c:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    8570:	and	w8, w8, #0xff
    8574:	add	w8, w8, #0xe2
    8578:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    857c:	ldrb	w8, [x8, #2]
    8580:	cmp	w8, #0x30
    8584:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8588:	mov	w8, #0x3                   	// #3
    858c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8590:	ldrb	w8, [x8, #2]
    8594:	cmp	w8, #0x30
    8598:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    859c:	mov	w8, #0xd7                  	// #215
    85a0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    85a4:	ldrb	w8, [x8, #2]
    85a8:	cmp	w8, #0x70
    85ac:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    85b0:	mov	w8, #0x6                   	// #6
    85b4:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    85b8:	ldrb	w8, [x8, #2]
    85bc:	sub	w8, w8, #0x30
    85c0:	cmp	w8, #0xa
    85c4:	b.cs	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.hs, b.nlast
    85c8:	and	w8, w8, #0xff
    85cc:	add	w8, w8, #0xc3
    85d0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    85d4:	ldurh	w9, [x8, #3]
    85d8:	ldrb	w8, [x8, #5]
    85dc:	mov	w10, #0x685f                	// #26719
    85e0:	mov	w11, #0x69                  	// #105
    85e4:	eor	w9, w9, w10
    85e8:	eor	w8, w8, w11
    85ec:	orr	w8, w9, w8
    85f0:	tst	w8, #0xffff
    85f4:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    85f8:	mov	w8, #0x120                 	// #288
    85fc:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8600:	ldurh	w9, [x8, #3]
    8604:	ldrb	w8, [x8, #5]
    8608:	mov	w10, #0x685f                	// #26719
    860c:	mov	w11, #0x69                  	// #105
    8610:	eor	w9, w9, w10
    8614:	eor	w8, w8, w11
    8618:	orr	w8, w9, w8
    861c:	tst	w8, #0xffff
    8620:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8624:	mov	w8, #0x121                 	// #289
    8628:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    862c:	ldurh	w9, [x8, #3]
    8630:	ldrb	w8, [x8, #5]
    8634:	mov	w10, #0x685f                	// #26719
    8638:	mov	w11, #0x69                  	// #105
    863c:	eor	w9, w9, w10
    8640:	eor	w8, w8, w11
    8644:	orr	w8, w9, w8
    8648:	tst	w8, #0xffff
    864c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8650:	mov	w8, #0x122                 	// #290
    8654:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8658:	ldurh	w9, [x8, #3]
    865c:	ldrb	w8, [x8, #5]
    8660:	mov	w10, #0x685f                	// #26719
    8664:	mov	w11, #0x69                  	// #105
    8668:	eor	w9, w9, w10
    866c:	eor	w8, w8, w11
    8670:	orr	w8, w9, w8
    8674:	tst	w8, #0xffff
    8678:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    867c:	mov	w8, #0x123                 	// #291
    8680:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8684:	ldurh	w9, [x8, #3]
    8688:	ldrb	w8, [x8, #5]
    868c:	mov	w10, #0x685f                	// #26719
    8690:	mov	w11, #0x69                  	// #105
    8694:	eor	w9, w9, w10
    8698:	eor	w8, w8, w11
    869c:	orr	w8, w9, w8
    86a0:	tst	w8, #0xffff
    86a4:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    86a8:	mov	w8, #0x124                 	// #292
    86ac:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    86b0:	ldurh	w9, [x8, #3]
    86b4:	ldrb	w8, [x8, #5]
    86b8:	mov	w10, #0x685f                	// #26719
    86bc:	mov	w11, #0x69                  	// #105
    86c0:	eor	w9, w9, w10
    86c4:	eor	w8, w8, w11
    86c8:	orr	w8, w9, w8
    86cc:	tst	w8, #0xffff
    86d0:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    86d4:	mov	w8, #0x125                 	// #293
    86d8:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    86dc:	ldurh	w9, [x8, #3]
    86e0:	ldrb	w8, [x8, #5]
    86e4:	mov	w10, #0x685f                	// #26719
    86e8:	mov	w11, #0x69                  	// #105
    86ec:	eor	w9, w9, w10
    86f0:	eor	w8, w8, w11
    86f4:	orr	w8, w9, w8
    86f8:	tst	w8, #0xffff
    86fc:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8700:	mov	w8, #0x126                 	// #294
    8704:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8708:	ldurh	w9, [x8, #3]
    870c:	ldrb	w8, [x8, #5]
    8710:	mov	w10, #0x685f                	// #26719
    8714:	mov	w11, #0x69                  	// #105
    8718:	eor	w9, w9, w10
    871c:	eor	w8, w8, w11
    8720:	orr	w8, w9, w8
    8724:	tst	w8, #0xffff
    8728:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    872c:	mov	w8, #0x127                 	// #295
    8730:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8734:	ldurh	w9, [x8, #3]
    8738:	ldrb	w8, [x8, #5]
    873c:	mov	w10, #0x685f                	// #26719
    8740:	mov	w11, #0x69                  	// #105
    8744:	eor	w9, w9, w10
    8748:	eor	w8, w8, w11
    874c:	orr	w8, w9, w8
    8750:	tst	w8, #0xffff
    8754:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8758:	mov	w8, #0x128                 	// #296
    875c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8760:	ldurh	w9, [x8, #3]
    8764:	ldrb	w8, [x8, #5]
    8768:	mov	w10, #0x685f                	// #26719
    876c:	mov	w11, #0x69                  	// #105
    8770:	eor	w9, w9, w10
    8774:	eor	w8, w8, w11
    8778:	orr	w8, w9, w8
    877c:	tst	w8, #0xffff
    8780:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8784:	mov	w8, #0x12a                 	// #298
    8788:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    878c:	ldurh	w9, [x8, #3]
    8790:	ldrb	w8, [x8, #5]
    8794:	mov	w10, #0x685f                	// #26719
    8798:	mov	w11, #0x69                  	// #105
    879c:	eor	w9, w9, w10
    87a0:	eor	w8, w8, w11
    87a4:	orr	w8, w9, w8
    87a8:	tst	w8, #0xffff
    87ac:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    87b0:	mov	w8, #0x12b                 	// #299
    87b4:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    87b8:	ldurh	w9, [x8, #3]
    87bc:	ldrb	w8, [x8, #5]
    87c0:	mov	w10, #0x685f                	// #26719
    87c4:	mov	w11, #0x69                  	// #105
    87c8:	eor	w9, w9, w10
    87cc:	eor	w8, w8, w11
    87d0:	orr	w8, w9, w8
    87d4:	tst	w8, #0xffff
    87d8:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    87dc:	mov	w8, #0x12c                 	// #300
    87e0:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    87e4:	ldurh	w9, [x8, #3]
    87e8:	ldrb	w8, [x8, #5]
    87ec:	mov	w10, #0x685f                	// #26719
    87f0:	mov	w11, #0x69                  	// #105
    87f4:	eor	w9, w9, w10
    87f8:	eor	w8, w8, w11
    87fc:	orr	w8, w9, w8
    8800:	tst	w8, #0xffff
    8804:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8808:	mov	w8, #0x12d                 	// #301
    880c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8810:	ldurh	w9, [x8, #3]
    8814:	ldrb	w8, [x8, #5]
    8818:	mov	w10, #0x685f                	// #26719
    881c:	mov	w11, #0x69                  	// #105
    8820:	eor	w9, w9, w10
    8824:	eor	w8, w8, w11
    8828:	orr	w8, w9, w8
    882c:	tst	w8, #0xffff
    8830:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8834:	mov	w8, #0x12e                 	// #302
    8838:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    883c:	ldurh	w9, [x8, #3]
    8840:	ldrb	w8, [x8, #5]
    8844:	mov	w10, #0x685f                	// #26719
    8848:	mov	w11, #0x69                  	// #105
    884c:	eor	w9, w9, w10
    8850:	eor	w8, w8, w11
    8854:	orr	w8, w9, w8
    8858:	tst	w8, #0xffff
    885c:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    8860:	mov	w8, #0x12f                 	// #303
    8864:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8868:	ldurh	w9, [x8, #3]
    886c:	ldrb	w8, [x8, #5]
    8870:	mov	w10, #0x685f                	// #26719
    8874:	mov	w11, #0x69                  	// #105
    8878:	eor	w9, w9, w10
    887c:	eor	w8, w8, w11
    8880:	orr	w8, w9, w8
    8884:	tst	w8, #0xffff
    8888:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    888c:	mov	w8, #0x130                 	// #304
    8890:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8894:	ldurh	w9, [x8, #3]
    8898:	ldrb	w8, [x8, #5]
    889c:	mov	w10, #0x685f                	// #26719
    88a0:	mov	w11, #0x69                  	// #105
    88a4:	eor	w9, w9, w10
    88a8:	eor	w8, w8, w11
    88ac:	orr	w8, w9, w8
    88b0:	tst	w8, #0xffff
    88b4:	b.ne	88e4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x18b8>  // b.any
    88b8:	mov	w8, #0x131                 	// #305
    88bc:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    88c0:	ldurh	w9, [x8, #3]
    88c4:	ldrb	w8, [x8, #5]
    88c8:	mov	w10, #0x685f                	// #26719
    88cc:	mov	w11, #0x69                  	// #105
    88d0:	eor	w9, w9, w10
    88d4:	eor	w8, w8, w11
    88d8:	orr	w8, w9, w8
    88dc:	tst	w8, #0xffff
    88e0:	b.eq	8a88 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1a5c>  // b.none
    88e4:	add	x8, sp, #0x10
    88e8:	mov	x0, sp
    88ec:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    88f0:	ldp	x0, x8, [sp, #16]
    88f4:	cmp	x8, #0x3
    88f8:	b.eq	892c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1900>  // b.none
    88fc:	cmp	x8, #0x2
    8900:	b.ne	8970 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1944>  // b.any
    8904:	ldrh	w8, [x0]
    8908:	mov	w9, #0x7066                	// #28774
    890c:	cmp	w8, w9
    8910:	b.eq	8a28 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19fc>  // b.none
    8914:	ldrh	w8, [x0]
    8918:	mov	w9, #0x726c                	// #29292
    891c:	cmp	w8, w9
    8920:	b.ne	8970 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1944>  // b.any
    8924:	mov	w21, #0x3                   	// #3
    8928:	b	8974 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1948>
    892c:	ldrh	w9, [x0]
    8930:	ldrb	w10, [x0, #2]
    8934:	mov	w11, #0x3378                	// #13176
    8938:	mov	w8, #0x31                  	// #49
    893c:	eor	w9, w9, w11
    8940:	eor	w10, w10, w8
    8944:	orr	w9, w9, w10
    8948:	tst	w9, #0xffff
    894c:	b.eq	8a30 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1a04>  // b.none
    8950:	ldrh	w9, [x0]
    8954:	ldrb	w10, [x0, #2]
    8958:	mov	w11, #0x3377                	// #13175
    895c:	eor	w9, w9, w11
    8960:	eor	w8, w10, w8
    8964:	orr	w8, w9, w8
    8968:	tst	w8, #0xffff
    896c:	b.eq	8a38 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1a0c>  // b.none
    8970:	mov	w21, wzr
    8974:	add	x8, sp, #0x10
    8978:	add	x8, x8, #0x10
    897c:	cmp	x0, x8
    8980:	b.eq	8988 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x195c>  // b.none
    8984:	bl	0 <_ZdlPv>
    8988:	cmp	w19, #0x0
    898c:	csel	w0, w21, wzr, eq  // eq = none
    8990:	cbnz	w21, 8a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>
    8994:	add	x8, sp, #0x10
    8998:	mov	x0, sp
    899c:	add	x21, x20, #0xc0
    89a0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    89a4:	ldp	x1, x2, [sp, #16]
    89a8:	mov	x0, x21
    89ac:	bl	0 <_ZNK4llvm13StringMapImpl7FindKeyENS_9StringRefE>
    89b0:	ldr	x8, [x20, #192]
    89b4:	cmn	w0, #0x1
    89b8:	b.eq	89c4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1998>  // b.none
    89bc:	sxtw	x9, w0
    89c0:	b	89c8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x199c>
    89c4:	ldr	w9, [x20, #200]
    89c8:	ldr	x0, [sp, #16]
    89cc:	add	x10, sp, #0x10
    89d0:	add	x10, x10, #0x10
    89d4:	add	x22, x8, x9, lsl #3
    89d8:	cmp	x0, x10
    89dc:	b.eq	89e8 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19bc>  // b.none
    89e0:	bl	0 <_ZdlPv>
    89e4:	ldr	x8, [x21]
    89e8:	ldr	w9, [x20, #200]
    89ec:	add	x8, x8, x9, lsl #3
    89f0:	cmp	x22, x8
    89f4:	b.eq	8a10 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e4>  // b.none
    89f8:	ldr	x8, [x22]
    89fc:	ldr	w9, [x8, #8]
    8a00:	cmp	w9, w19
    8a04:	b.ne	8a10 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e4>  // b.any
    8a08:	ldr	w0, [x8, #12]
    8a0c:	b	8a14 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x19e8>
    8a10:	mov	w0, wzr
    8a14:	ldp	x20, x19, [sp, #96]
    8a18:	ldp	x22, x21, [sp, #80]
    8a1c:	ldp	x29, x30, [sp, #64]
    8a20:	add	sp, sp, #0x70
    8a24:	ret
    8a28:	mov	w21, #0x2                   	// #2
    8a2c:	b	8974 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1948>
    8a30:	mov	w21, #0x8                   	// #8
    8a34:	b	8974 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1948>
    8a38:	mov	w21, #0x7                   	// #7
    8a3c:	b	8974 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0x1948>
    8a40:	mov	w8, #0x9b                  	// #155
    8a44:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a48:	mov	w8, #0x9c                  	// #156
    8a4c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a50:	mov	w8, #0x9d                  	// #157
    8a54:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a58:	mov	w8, #0x9e                  	// #158
    8a5c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a60:	mov	w8, #0x9f                  	// #159
    8a64:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a68:	mov	w8, #0xa0                  	// #160
    8a6c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a70:	mov	w8, #0xa1                  	// #161
    8a74:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a78:	mov	w8, #0xa2                  	// #162
    8a7c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a80:	mov	w8, #0x5                   	// #5
    8a84:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>
    8a88:	mov	w8, #0x132                 	// #306
    8a8c:	b	7da4 <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE+0xd78>

0000000000008a90 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>:
    8a90:	sub	sp, sp, #0x60
    8a94:	stp	x29, x30, [sp, #48]
    8a98:	str	x21, [sp, #64]
    8a9c:	stp	x20, x19, [sp, #80]
    8aa0:	add	x29, sp, #0x30
    8aa4:	mov	x19, x0
    8aa8:	mov	x8, sp
    8aac:	sub	x0, x29, #0x10
    8ab0:	stp	x1, x2, [x29, #-16]
    8ab4:	mov	x21, sp
    8ab8:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    8abc:	ldp	x0, x8, [sp]
    8ac0:	cmp	x8, #0x2
    8ac4:	b.ne	8be8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x158>  // b.any
    8ac8:	ldrh	w8, [x0]
    8acc:	mov	w9, #0x7165                	// #29029
    8ad0:	cmp	w8, w9
    8ad4:	b.eq	8bf0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x160>  // b.none
    8ad8:	ldrh	w8, [x0]
    8adc:	mov	w9, #0x656e                	// #25966
    8ae0:	cmp	w8, w9
    8ae4:	b.eq	8c00 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x170>  // b.none
    8ae8:	ldrh	w8, [x0]
    8aec:	mov	w9, #0x7363                	// #29539
    8af0:	cmp	w8, w9
    8af4:	b.eq	8bf8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x168>  // b.none
    8af8:	ldrh	w8, [x0]
    8afc:	mov	w9, #0x7368                	// #29544
    8b00:	cmp	w8, w9
    8b04:	b.eq	8bf8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x168>  // b.none
    8b08:	ldrh	w8, [x0]
    8b0c:	mov	w9, #0x6363                	// #25443
    8b10:	cmp	w8, w9
    8b14:	b.eq	8c08 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x178>  // b.none
    8b18:	ldrh	w8, [x0]
    8b1c:	mov	w9, #0x6f6c                	// #28524
    8b20:	cmp	w8, w9
    8b24:	b.eq	8c08 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x178>  // b.none
    8b28:	ldrh	w8, [x0]
    8b2c:	mov	w9, #0x696d                	// #26989
    8b30:	cmp	w8, w9
    8b34:	b.eq	8df8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x368>  // b.none
    8b38:	ldrh	w8, [x0]
    8b3c:	mov	w9, #0x6c70                	// #27760
    8b40:	cmp	w8, w9
    8b44:	b.eq	8e08 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x378>  // b.none
    8b48:	ldrh	w8, [x0]
    8b4c:	mov	w9, #0x7376                	// #29558
    8b50:	cmp	w8, w9
    8b54:	b.eq	8e18 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x388>  // b.none
    8b58:	ldrh	w8, [x0]
    8b5c:	mov	w9, #0x6376                	// #25462
    8b60:	cmp	w8, w9
    8b64:	b.eq	8e28 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x398>  // b.none
    8b68:	ldrh	w8, [x0]
    8b6c:	mov	w9, #0x6968                	// #26984
    8b70:	cmp	w8, w9
    8b74:	b.eq	8e38 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3a8>  // b.none
    8b78:	ldrh	w8, [x0]
    8b7c:	mov	w9, #0x736c                	// #29548
    8b80:	cmp	w8, w9
    8b84:	b.eq	8e40 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3b0>  // b.none
    8b88:	ldrh	w8, [x0]
    8b8c:	mov	w9, #0x6567                	// #25959
    8b90:	cmp	w8, w9
    8b94:	b.eq	8e48 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3b8>  // b.none
    8b98:	ldrh	w8, [x0]
    8b9c:	mov	w9, #0x746c                	// #29804
    8ba0:	cmp	w8, w9
    8ba4:	b.eq	8e50 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3c0>  // b.none
    8ba8:	ldrh	w8, [x0]
    8bac:	mov	w9, #0x7467                	// #29799
    8bb0:	cmp	w8, w9
    8bb4:	b.eq	8e58 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3c8>  // b.none
    8bb8:	ldrh	w8, [x0]
    8bbc:	mov	w9, #0x656c                	// #25964
    8bc0:	cmp	w8, w9
    8bc4:	b.eq	8e60 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3d0>  // b.none
    8bc8:	ldrh	w8, [x0]
    8bcc:	mov	w9, #0x6c61                	// #27745
    8bd0:	cmp	w8, w9
    8bd4:	b.eq	8e68 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3d8>  // b.none
    8bd8:	ldrh	w8, [x0]
    8bdc:	mov	w9, #0x766e                	// #30318
    8be0:	cmp	w8, w9
    8be4:	b.eq	8e70 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3e0>  // b.none
    8be8:	mov	w20, #0x10                  	// #16
    8bec:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bf0:	mov	w20, wzr
    8bf4:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8bf8:	mov	w20, #0x2                   	// #2
    8bfc:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c00:	mov	w20, #0x1                   	// #1
    8c04:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8c08:	mov	w20, #0x3                   	// #3
    8c0c:	add	x8, x21, #0x10
    8c10:	cmp	x0, x8
    8c14:	b.eq	8c1c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x18c>  // b.none
    8c18:	bl	0 <_ZdlPv>
    8c1c:	cmp	w20, #0x10
    8c20:	b.ne	8cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x240>  // b.any
    8c24:	mov	x0, x19
    8c28:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    8c2c:	ldrb	w8, [x0, #196]
    8c30:	tbnz	w8, #1, 8c3c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x1ac>
    8c34:	mov	w20, #0x10                  	// #16
    8c38:	b	8cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x240>
    8c3c:	mov	x8, sp
    8c40:	sub	x0, x29, #0x10
    8c44:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    8c48:	ldp	x0, x8, [sp]
    8c4c:	cmp	x8, #0x3
    8c50:	b.eq	8c94 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x204>  // b.none
    8c54:	cmp	x8, #0x5
    8c58:	b.eq	8ce8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x258>  // b.none
    8c5c:	cmp	x8, #0x4
    8c60:	b.ne	8cb8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x228>  // b.any
    8c64:	ldr	w8, [x0]
    8c68:	mov	w9, #0x6f6e                	// #28526
    8c6c:	movk	w9, #0x656e, lsl #16
    8c70:	cmp	w8, w9
    8c74:	b.eq	8dd8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x348>  // b.none
    8c78:	ldr	w8, [x0]
    8c7c:	mov	w9, #0x616c                	// #24940
    8c80:	movk	w9, #0x7473, lsl #16
    8c84:	cmp	w8, w9
    8c88:	b.ne	8cb8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x228>  // b.any
    8c8c:	mov	w20, #0x3                   	// #3
    8c90:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8c94:	ldrh	w8, [x0]
    8c98:	ldrb	w9, [x0, #2]
    8c9c:	mov	w10, #0x6e61                	// #28257
    8ca0:	mov	w11, #0x79                  	// #121
    8ca4:	eor	w8, w8, w10
    8ca8:	eor	w9, w9, w11
    8cac:	orr	w8, w8, w9
    8cb0:	tst	w8, #0xffff
    8cb4:	b.eq	8de0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x350>  // b.none
    8cb8:	mov	w20, #0x10                  	// #16
    8cbc:	mov	x8, sp
    8cc0:	add	x8, x8, #0x10
    8cc4:	cmp	x0, x8
    8cc8:	b.eq	8cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x240>  // b.none
    8ccc:	bl	0 <_ZdlPv>
    8cd0:	mov	w0, w20
    8cd4:	ldp	x20, x19, [sp, #80]
    8cd8:	ldr	x21, [sp, #64]
    8cdc:	ldp	x29, x30, [sp, #48]
    8ce0:	add	sp, sp, #0x60
    8ce4:	ret
    8ce8:	ldr	w10, [x0]
    8cec:	ldrb	w11, [x0, #4]
    8cf0:	mov	w8, #0x6c6e                	// #27758
    8cf4:	movk	w8, #0x7361, lsl #16
    8cf8:	mov	w9, #0x74                  	// #116
    8cfc:	eor	w10, w10, w8
    8d00:	eor	w11, w11, w9
    8d04:	orr	w10, w10, w11
    8d08:	cbz	w10, 8de8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x358>
    8d0c:	ldr	w11, [x0]
    8d10:	ldrb	w12, [x0, #4]
    8d14:	mov	w10, #0x666e                	// #26222
    8d18:	movk	w10, #0x7372, lsl #16
    8d1c:	add	w13, w10, #0x2f8
    8d20:	eor	w11, w11, w13
    8d24:	eor	w9, w12, w9
    8d28:	orr	w9, w11, w9
    8d2c:	cbz	w9, 8df0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x360>
    8d30:	ldr	w9, [x0]
    8d34:	ldrb	w11, [x0, #4]
    8d38:	mov	w12, #0x74                  	// #116
    8d3c:	eor	w9, w9, w10
    8d40:	eor	w10, w11, w12
    8d44:	orr	w9, w9, w10
    8d48:	cbz	w9, 8e00 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x370>
    8d4c:	ldr	w9, [x0]
    8d50:	ldrb	w10, [x0, #4]
    8d54:	mov	w11, #0x6d70                	// #28016
    8d58:	movk	w11, #0x726f, lsl #16
    8d5c:	mov	w12, #0x65                  	// #101
    8d60:	eor	w9, w9, w11
    8d64:	eor	w10, w10, w12
    8d68:	orr	w9, w9, w10
    8d6c:	cbz	w9, 8e10 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x380>
    8d70:	ldr	w9, [x0]
    8d74:	ldrb	w10, [x0, #4]
    8d78:	add	w11, w8, #0x2
    8d7c:	mov	w8, #0x74                  	// #116
    8d80:	eor	w9, w9, w11
    8d84:	eor	w10, w10, w8
    8d88:	orr	w9, w9, w10
    8d8c:	cbz	w9, 8e20 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x390>
    8d90:	ldr	w9, [x0]
    8d94:	ldrb	w10, [x0, #4]
    8d98:	mov	w11, #0x6374                	// #25460
    8d9c:	movk	w11, #0x6e6f, lsl #16
    8da0:	eor	w9, w9, w11
    8da4:	eor	w8, w10, w8
    8da8:	orr	w8, w9, w8
    8dac:	cbz	w8, 8e30 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x3a0>
    8db0:	ldr	w8, [x0]
    8db4:	ldrb	w9, [x0, #4]
    8db8:	mov	w10, #0x7374                	// #29556
    8dbc:	movk	w10, #0x6f74, lsl #16
    8dc0:	eor	w8, w8, w10
    8dc4:	eor	w9, w9, #0x70
    8dc8:	orr	w8, w8, w9
    8dcc:	cbnz	w8, 8cb8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x228>
    8dd0:	mov	w20, #0xb                   	// #11
    8dd4:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8dd8:	mov	w20, wzr
    8ddc:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8de0:	mov	w20, #0x1                   	// #1
    8de4:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8de8:	mov	w20, #0x2                   	// #2
    8dec:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8df0:	mov	w20, #0x4                   	// #4
    8df4:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8df8:	mov	w20, #0x4                   	// #4
    8dfc:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e00:	mov	w20, #0x5                   	// #5
    8e04:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8e08:	mov	w20, #0x5                   	// #5
    8e0c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e10:	mov	w20, #0x8                   	// #8
    8e14:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8e18:	mov	w20, #0x6                   	// #6
    8e1c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e20:	mov	w20, #0x9                   	// #9
    8e24:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8e28:	mov	w20, #0x7                   	// #7
    8e2c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e30:	mov	w20, #0xa                   	// #10
    8e34:	b	8cbc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x22c>
    8e38:	mov	w20, #0x8                   	// #8
    8e3c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e40:	mov	w20, #0x9                   	// #9
    8e44:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e48:	mov	w20, #0xa                   	// #10
    8e4c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e50:	mov	w20, #0xb                   	// #11
    8e54:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e58:	mov	w20, #0xc                   	// #12
    8e5c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e60:	mov	w20, #0xd                   	// #13
    8e64:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e68:	mov	w20, #0xe                   	// #14
    8e6c:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>
    8e70:	mov	w20, #0xf                   	// #15
    8e74:	b	8c0c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE+0x17c>

0000000000008e78 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>:
    8e78:	sub	sp, sp, #0x120
    8e7c:	stp	x29, x30, [sp, #192]
    8e80:	stp	x28, x27, [sp, #208]
    8e84:	stp	x26, x25, [sp, #224]
    8e88:	stp	x24, x23, [sp, #240]
    8e8c:	stp	x22, x21, [sp, #256]
    8e90:	stp	x20, x19, [sp, #272]
    8e94:	add	x29, sp, #0xc0
    8e98:	stp	w3, w2, [sp, #8]
    8e9c:	str	x0, [sp, #64]
    8ea0:	mov	x9, x0
    8ea4:	ldr	x8, [x9, #8]!
    8ea8:	str	x1, [sp, #56]
    8eac:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    8eb0:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    8eb4:	stp	x8, x9, [sp, #40]
    8eb8:	ldr	w8, [x1, #8]
    8ebc:	ldp	x24, x25, [x9, #168]
    8ec0:	add	x27, x27, #0x0
    8ec4:	mov	w21, #0x32c8                	// #13000
    8ec8:	sub	w8, w8, #0x1
    8ecc:	add	x28, x28, #0x0
    8ed0:	str	w8, [sp, #16]
    8ed4:	b	8ef4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7c>
    8ed8:	mvn	x8, x23
    8edc:	add	x27, x19, #0x8
    8ee0:	add	x23, x21, x8
    8ee4:	cmp	x23, #0x0
    8ee8:	mov	x21, x23
    8eec:	mov	x26, x27
    8ef0:	b.le	9094 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x21c>
    8ef4:	lsr	x23, x21, #1
    8ef8:	add	x19, x27, x23, lsl #3
    8efc:	ldrh	w8, [x19]
    8f00:	add	x22, x28, x8
    8f04:	ldrb	w20, [x22]
    8f08:	cmp	x25, x20
    8f0c:	csel	x26, x25, x20, cc  // cc = lo, ul, last
    8f10:	cbz	x26, 8f30 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb8>
    8f14:	add	x0, x22, #0x1
    8f18:	mov	x1, x24
    8f1c:	mov	x2, x26
    8f20:	bl	0 <memcmp>
    8f24:	cbz	w0, 8f30 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb8>
    8f28:	tbnz	w0, #31, 8ed8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x60>
    8f2c:	b	8f3c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc4>
    8f30:	cmp	x25, x20
    8f34:	b.hi	8ed8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x60>  // b.pmore
    8f38:	cbz	x26, 8f58 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe0>
    8f3c:	add	x1, x22, #0x1
    8f40:	mov	x0, x24
    8f44:	mov	x2, x26
    8f48:	bl	0 <memcmp>
    8f4c:	cbz	w0, 8f58 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe0>
    8f50:	tbnz	w0, #31, 8ee4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6c>
    8f54:	b	8f60 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe8>
    8f58:	cmp	x25, x20
    8f5c:	b.cc	8ee4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x6c>  // b.lo, b.ul, b.last
    8f60:	sub	x8, x19, x27
    8f64:	cmp	x8, #0x1
    8f68:	b.lt	8ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c>  // b.tstop
    8f6c:	lsr	x26, x8, #3
    8f70:	mov	x23, x27
    8f74:	b	8fa8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x130>
    8f78:	mov	w8, #0xffffffff            	// #-1
    8f7c:	cneg	w8, w8, ls  // ls = plast
    8f80:	mvn	x10, x22
    8f84:	cmn	w8, #0x1
    8f88:	add	x8, x26, x10
    8f8c:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    8f90:	add	x9, x20, #0x8
    8f94:	csel	x26, x8, x22, eq  // eq = none
    8f98:	add	x28, x28, #0x0
    8f9c:	csel	x23, x9, x23, eq  // eq = none
    8fa0:	cmp	x26, #0x0
    8fa4:	b.le	8ff8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x180>
    8fa8:	lsr	x22, x26, #1
    8fac:	add	x20, x23, x22, lsl #3
    8fb0:	ldrh	w8, [x20]
    8fb4:	add	x8, x28, x8
    8fb8:	ldrb	w28, [x8]
    8fbc:	cmp	x25, x28
    8fc0:	csel	x2, x25, x28, cc  // cc = lo, ul, last
    8fc4:	cbz	x2, 8fe4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16c>
    8fc8:	add	x0, x8, #0x1
    8fcc:	mov	x1, x24
    8fd0:	bl	0 <memcmp>
    8fd4:	cmp	w0, #0x0
    8fd8:	mov	w8, #0x1                   	// #1
    8fdc:	cneg	w8, w8, lt  // lt = tstop
    8fe0:	cbnz	w0, 8f80 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x108>
    8fe4:	cmp	x25, x28
    8fe8:	b.ne	8f78 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x100>  // b.any
    8fec:	mov	w8, wzr
    8ff0:	b	8f80 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x108>
    8ff4:	mov	x23, x27
    8ff8:	add	x8, x27, x21, lsl #3
    8ffc:	add	x26, x19, #0x8
    9000:	sub	x8, x8, x26
    9004:	cmp	x8, #0x1
    9008:	b.lt	9090 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x218>  // b.tstop
    900c:	lsr	x19, x8, #3
    9010:	mov	w20, #0xffffffff            	// #-1
    9014:	mov	w21, #0x1                   	// #1
    9018:	b	9048 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1d0>
    901c:	cneg	w8, w20, cs  // cs = hs, nlast
    9020:	mvn	x10, x22
    9024:	cmn	w8, #0x1
    9028:	add	x8, x19, x10
    902c:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    9030:	add	x9, x27, #0x8
    9034:	csel	x19, x22, x8, eq  // eq = none
    9038:	add	x28, x28, #0x0
    903c:	csel	x26, x26, x9, eq  // eq = none
    9040:	cmp	x19, #0x0
    9044:	b.le	9090 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x218>
    9048:	lsr	x22, x19, #1
    904c:	add	x27, x26, x22, lsl #3
    9050:	ldrh	w8, [x27]
    9054:	add	x8, x28, x8
    9058:	ldrb	w28, [x8]
    905c:	cmp	x25, x28
    9060:	csel	x2, x28, x25, hi  // hi = pmore
    9064:	cbz	x2, 9080 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x208>
    9068:	add	x1, x8, #0x1
    906c:	mov	x0, x24
    9070:	bl	0 <memcmp>
    9074:	cmp	w0, #0x0
    9078:	cneg	w8, w21, lt  // lt = tstop
    907c:	cbnz	w0, 9020 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a8>
    9080:	cmp	x25, x28
    9084:	b.ne	901c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a4>  // b.any
    9088:	mov	w8, wzr
    908c:	b	9020 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a8>
    9090:	mov	x27, x23
    9094:	ldr	x23, [sp, #56]
    9098:	cmp	x27, x26
    909c:	b.eq	916c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2f4>  // b.none
    90a0:	ldr	w9, [sp, #16]
    90a4:	mov	w8, #0x1                   	// #1
    90a8:	add	x20, x27, #0x4
    90ac:	lsl	w19, w8, w9
    90b0:	cbnz	x25, 90c8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x250>
    90b4:	b	912c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2b4>
    90b8:	add	x8, x21, #0x8
    90bc:	cmp	x8, x26
    90c0:	add	x20, x20, #0x8
    90c4:	b.eq	916c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2f4>  // b.none
    90c8:	mov	x21, x20
    90cc:	ldrh	w8, [x21, #-4]!
    90d0:	add	x8, x28, x8
    90d4:	ldrb	w9, [x8]
    90d8:	cmp	x25, x9
    90dc:	b.ne	a880 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a08>  // b.any
    90e0:	add	x1, x8, #0x1
    90e4:	mov	x0, x24
    90e8:	mov	x2, x25
    90ec:	bl	0 <bcmp>
    90f0:	cbnz	w0, a880 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a08>
    90f4:	ldrb	w8, [x21, #2]
    90f8:	tst	w19, w8
    90fc:	b.eq	90b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x240>  // b.none
    9100:	ldrh	w2, [x20]
    9104:	ldr	x0, [sp, #64]
    9108:	mov	x1, x23
    910c:	bl	d794 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>
    9110:	cmp	w0, #0x1
    9114:	b.eq	90b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x240>  // b.none
    9118:	b	9160 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2e8>
    911c:	add	x8, x21, #0x8
    9120:	cmp	x8, x26
    9124:	add	x20, x20, #0x8
    9128:	b.eq	916c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2f4>  // b.none
    912c:	mov	x21, x20
    9130:	ldrh	w8, [x21, #-4]!
    9134:	ldrb	w8, [x28, x8]
    9138:	cbnz	w8, a880 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a08>
    913c:	ldrb	w8, [x21, #2]
    9140:	tst	w19, w8
    9144:	b.eq	911c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2a4>  // b.none
    9148:	ldrh	w2, [x20]
    914c:	ldr	x0, [sp, #64]
    9150:	mov	x1, x23
    9154:	bl	d794 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>
    9158:	cmp	w0, #0x1
    915c:	b.eq	911c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x2a4>  // b.none
    9160:	cbz	w0, a638 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c0>
    9164:	cmp	w0, #0x2
    9168:	b.eq	a4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1658>  // b.none
    916c:	ldr	x27, [sp, #48]
    9170:	ldr	x0, [x27]
    9174:	ldr	x8, [x0]
    9178:	ldr	x8, [x8, #40]
    917c:	blr	x8
    9180:	ldr	w8, [x0, #16]
    9184:	cbz	w8, a8a0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a28>
    9188:	ldr	x8, [x0, #8]
    918c:	ldr	x25, [sp, #64]
    9190:	ldr	x21, [sp, #40]
    9194:	ldr	w8, [x8]
    9198:	sub	w8, w8, #0x2
    919c:	cmp	w8, #0x23
    91a0:	b.hi	93a4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x52c>  // b.pmore
    91a4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    91a8:	add	x9, x9, #0x0
    91ac:	adr	x10, 91bc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x344>
    91b0:	ldrb	w11, [x9, x8]
    91b4:	add	x10, x10, x11, lsl #2
    91b8:	br	x10
    91bc:	ldr	x0, [x27]
    91c0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    91c4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    91c8:	ldr	x8, [x27]
    91cc:	mov	x22, x0
    91d0:	mov	w1, #0x25                  	// #37
    91d4:	mov	x0, x8
    91d8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    91dc:	mov	x0, x21
    91e0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    91e4:	ldr	w8, [x0]
    91e8:	cmp	w8, #0xd
    91ec:	b.ne	926c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3f4>  // b.any
    91f0:	ldr	x8, [x21]
    91f4:	mov	x0, x21
    91f8:	ldr	x8, [x8, #40]
    91fc:	blr	x8
    9200:	mov	w8, #0x1                   	// #1
    9204:	stp	xzr, xzr, [x29, #-32]
    9208:	stur	xzr, [x29, #-40]
    920c:	stur	w8, [x29, #-16]
    9210:	ldr	x8, [x0]
    9214:	sub	x1, x29, #0x30
    9218:	mov	w2, #0x1                   	// #1
    921c:	mov	w3, #0x1                   	// #1
    9220:	ldr	x8, [x8, #32]
    9224:	blr	x8
    9228:	cmp	x0, #0x1
    922c:	b.ne	a8c0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a48>  // b.any
    9230:	ldur	w8, [x29, #-16]
    9234:	ldur	w19, [x29, #-48]
    9238:	cmp	w8, #0x41
    923c:	b.cc	924c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3d4>  // b.lo, b.ul, b.last
    9240:	ldur	x0, [x29, #-24]
    9244:	cbz	x0, 924c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3d4>
    9248:	bl	0 <_ZdaPv>
    924c:	cmp	w19, #0x6
    9250:	b.ne	9264 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3ec>  // b.any
    9254:	ldr	x8, [x21]
    9258:	mov	x0, x21
    925c:	ldr	x8, [x8, #136]
    9260:	blr	x8
    9264:	mov	w24, #0x1                   	// #1
    9268:	b	9270 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x3f8>
    926c:	mov	w24, wzr
    9270:	mov	x0, x21
    9274:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9278:	ldr	w8, [x0]
    927c:	cmp	w8, #0x6
    9280:	b.ne	9304 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x48c>  // b.any
    9284:	mov	x23, x0
    9288:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    928c:	ldp	x2, x3, [x23, #8]
    9290:	mov	x1, x0
    9294:	sub	x0, x29, #0x30
    9298:	sub	x19, x29, #0x30
    929c:	bl	0 <_ZN4llvm7APFloatC1ERKNS_12fltSemanticsENS_9StringRefE>
    92a0:	ldur	x20, [x29, #-40]
    92a4:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    92a8:	cmp	x0, x20
    92ac:	b.eq	95f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x77c>  // b.none
    92b0:	add	x0, x19, #0x8
    92b4:	add	x8, sp, #0x48
    92b8:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    92bc:	ldr	w19, [sp, #80]
    92c0:	ldr	x23, [sp, #56]
    92c4:	cmp	w19, #0x41
    92c8:	b.cs	9610 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x798>  // b.hs, b.nlast
    92cc:	ldr	x19, [sp, #72]
    92d0:	ldp	x20, x2, [x25, #176]
    92d4:	cmp	x2, #0x5
    92d8:	b.eq	963c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x7c4>  // b.none
    92dc:	cmp	x2, #0x4
    92e0:	b.ne	92f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x480>  // b.any
    92e4:	ldr	w8, [x20]
    92e8:	mov	w9, #0x6366                	// #25446
    92ec:	movk	w9, #0x706d, lsl #16
    92f0:	cmp	w8, w9
    92f4:	b.eq	9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>  // b.none
    92f8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    92fc:	add	x8, x8, #0x0
    9300:	b	9730 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8b8>
    9304:	sub	x1, x29, #0x30
    9308:	mov	x0, x25
    930c:	bl	c9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    9310:	tbnz	w0, #0, a4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1658>
    9314:	ldr	x0, [x27]
    9318:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    931c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9320:	ldr	x8, [x27]
    9324:	ldur	x19, [x29, #-48]
    9328:	sub	x23, x0, #0x1
    932c:	ldr	x9, [x8]
    9330:	mov	x0, x8
    9334:	ldr	x9, [x9, #48]
    9338:	blr	x9
    933c:	mov	x21, x0
    9340:	mov	w0, #0x70                  	// #112
    9344:	bl	0 <_Znwm>
    9348:	mov	x8, x0
    934c:	strb	wzr, [x8, #32]!
    9350:	stp	x23, x19, [x0, #64]
    9354:	stp	x8, xzr, [x0, #16]
    9358:	ldr	x19, [sp, #56]
    935c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9360:	add	x9, x9, #0x0
    9364:	mov	x20, x0
    9368:	str	x9, [x0]
    936c:	str	wzr, [x0, #48]
    9370:	str	x21, [x0, #104]
    9374:	str	x22, [x0, #56]
    9378:	ldp	w8, w9, [x19, #8]
    937c:	cmp	w8, w9
    9380:	b.cs	97cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x954>  // b.hs, b.nlast
    9384:	ldr	x10, [x19]
    9388:	cmp	w8, w9
    938c:	str	x20, [x10, w8, uxtw #3]
    9390:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    9394:	add	w8, w8, #0x1
    9398:	mov	w20, wzr
    939c:	str	w8, [x19, #8]
    93a0:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    93a4:	ldr	x0, [x25, #8]
    93a8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    93ac:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    93b0:	mov	x21, x0
    93b4:	add	x1, sp, #0x48
    93b8:	mov	x0, x25
    93bc:	bl	c9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    93c0:	tbz	w0, #0, 9758 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8e0>
    93c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    93c8:	add	x8, x8, #0x0
    93cc:	mov	w9, #0x103                 	// #259
    93d0:	stp	x8, xzr, [x29, #-48]
    93d4:	sturh	w9, [x29, #-32]
    93d8:	ldr	x0, [x27]
    93dc:	sub	x2, x29, #0x30
    93e0:	mov	x1, x21
    93e4:	mov	x3, xzr
    93e8:	mov	x4, xzr
    93ec:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    93f0:	mov	w20, w0
    93f4:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    93f8:	ldr	x22, [x27]
    93fc:	mov	x0, x22
    9400:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9404:	ldr	w8, [x0]
    9408:	cmp	w8, #0x15
    940c:	b.ne	a4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1658>  // b.any
    9410:	ldr	x0, [x27]
    9414:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9418:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    941c:	mov	x21, x0
    9420:	mov	x0, x22
    9424:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9428:	ldr	q0, [x0]
    942c:	ldr	x8, [x0, #16]
    9430:	add	x1, x0, #0x18
    9434:	stur	q0, [x29, #-48]
    9438:	stur	x8, [x29, #-32]
    943c:	ldr	w8, [x0, #32]
    9440:	cmp	w8, #0x40
    9444:	stur	w8, [x29, #-16]
    9448:	b.hi	9994 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb1c>  // b.pmore
    944c:	ldr	x8, [x1]
    9450:	stur	x8, [x29, #-24]
    9454:	b	99a0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb28>
    9458:	ldr	x0, [x25, #8]
    945c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9460:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9464:	ldr	x8, [x25, #184]
    9468:	cmp	x8, #0x3
    946c:	b.ne	9498 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x620>  // b.any
    9470:	ldr	x8, [x25, #176]
    9474:	mov	w10, #0x646c                	// #25708
    9478:	mov	w11, #0x72                  	// #114
    947c:	ldrh	w9, [x8]
    9480:	ldrb	w8, [x8, #2]
    9484:	eor	w9, w9, w10
    9488:	eor	w8, w8, w11
    948c:	orr	w8, w9, w8
    9490:	tst	w8, #0xffff
    9494:	b.eq	9a40 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xbc8>  // b.none
    9498:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    949c:	add	x8, x8, #0x0
    94a0:	b	94f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x678>
    94a4:	ldr	w8, [sp, #12]
    94a8:	tbz	w8, #0, 97f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x978>
    94ac:	ldr	x23, [x27]
    94b0:	mov	x0, x23
    94b4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    94b8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    94bc:	mov	x21, x0
    94c0:	mov	x0, x23
    94c4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    94c8:	ldr	w8, [x0]
    94cc:	cmp	w8, #0x2
    94d0:	b.ne	a920 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1aa8>  // b.any
    94d4:	ldp	x1, x2, [x0, #8]
    94d8:	mov	x0, x25
    94dc:	bl	8a90 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseCondCodeStringEN4llvm9StringRefE>
    94e0:	cmp	w0, #0x10
    94e4:	b.ne	9a0c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb94>  // b.any
    94e8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    94ec:	add	x8, x8, #0x0
    94f0:	mov	w9, #0x103                 	// #259
    94f4:	stp	x8, xzr, [x29, #-48]
    94f8:	sturh	w9, [x29, #-32]
    94fc:	ldr	x0, [x27]
    9500:	sub	x1, x29, #0x30
    9504:	mov	x2, xzr
    9508:	mov	x3, xzr
    950c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    9510:	mov	w20, w0
    9514:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    9518:	mov	x0, x21
    951c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9520:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9524:	ldr	x8, [x27]
    9528:	mov	x23, x0
    952c:	ldr	x9, [x8]
    9530:	mov	x0, x8
    9534:	ldr	x9, [x9, #48]
    9538:	blr	x9
    953c:	mov	x24, x0
    9540:	mov	w0, #0x70                  	// #112
    9544:	bl	0 <_Znwm>
    9548:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    954c:	mov	x8, x0
    9550:	add	x9, x9, #0x0
    9554:	strb	wzr, [x8, #32]!
    9558:	str	x9, [x0]
    955c:	mov	w9, #0x6                   	// #6
    9560:	str	w9, [x0, #48]
    9564:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9568:	add	x9, x9, #0x0
    956c:	stp	x23, x9, [x0, #64]
    9570:	ldr	x19, [sp, #56]
    9574:	mov	w9, #0x1                   	// #1
    9578:	str	x24, [x0, #104]
    957c:	str	w9, [x0, #80]
    9580:	strb	wzr, [x0, #84]
    9584:	str	x23, [x0, #56]
    9588:	stp	x8, xzr, [x0, #16]
    958c:	ldp	w8, w9, [x19, #8]
    9590:	mov	x22, x0
    9594:	cmp	w8, w9
    9598:	b.cs	a744 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18cc>  // b.hs, b.nlast
    959c:	ldr	x10, [x19]
    95a0:	cmp	w8, w9
    95a4:	str	x22, [x10, w8, uxtw #3]
    95a8:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    95ac:	add	w8, w8, #0x1
    95b0:	str	w8, [x19, #8]
    95b4:	ldr	x8, [x21]
    95b8:	mov	x0, x21
    95bc:	ldr	x8, [x8, #136]
    95c0:	blr	x8
    95c4:	mov	x0, x25
    95c8:	mov	x1, x19
    95cc:	ldp	x20, x19, [sp, #272]
    95d0:	ldp	x22, x21, [sp, #256]
    95d4:	ldp	x24, x23, [sp, #240]
    95d8:	ldp	x26, x25, [sp, #224]
    95dc:	ldp	x28, x27, [sp, #208]
    95e0:	ldp	x29, x30, [sp, #192]
    95e4:	mov	w2, wzr
    95e8:	mov	w3, wzr
    95ec:	add	sp, sp, #0x120
    95f0:	b	8e78 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb>
    95f4:	add	x0, x19, #0x8
    95f8:	add	x8, sp, #0x48
    95fc:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    9600:	ldr	w19, [sp, #80]
    9604:	ldr	x23, [sp, #56]
    9608:	cmp	w19, #0x41
    960c:	b.cc	92cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x454>  // b.lo, b.ul, b.last
    9610:	add	x0, sp, #0x48
    9614:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    9618:	sub	w8, w19, w0
    961c:	cmp	w8, #0x41
    9620:	b.cs	a8e0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a68>  // b.hs, b.nlast
    9624:	ldr	x0, [sp, #72]
    9628:	ldr	x19, [x0]
    962c:	bl	0 <_ZdaPv>
    9630:	ldp	x20, x2, [x25, #176]
    9634:	cmp	x2, #0x5
    9638:	b.ne	92dc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x464>  // b.any
    963c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9640:	add	x1, x1, #0x0
    9644:	mov	x0, x20
    9648:	bl	0 <bcmp>
    964c:	cbz	w0, 9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>
    9650:	ldr	w8, [x20]
    9654:	ldrb	w9, [x20, #4]
    9658:	mov	w10, #0x6366                	// #25446
    965c:	movk	w10, #0x656d, lsl #16
    9660:	mov	w11, #0x71                  	// #113
    9664:	eor	w8, w8, w10
    9668:	eor	w9, w9, w11
    966c:	orr	w8, w8, w9
    9670:	cbz	w8, 9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>
    9674:	ldr	w9, [x20]
    9678:	ldrb	w10, [x20, #4]
    967c:	mov	w8, #0x6366                	// #25446
    9680:	movk	w8, #0x676d, lsl #16
    9684:	mov	w11, #0x65                  	// #101
    9688:	eor	w9, w9, w8
    968c:	eor	w10, w10, w11
    9690:	orr	w9, w9, w10
    9694:	cbz	w9, 9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>
    9698:	ldr	w9, [x20]
    969c:	ldrb	w10, [x20, #4]
    96a0:	mov	w11, #0x74                  	// #116
    96a4:	eor	w8, w9, w8
    96a8:	eor	w9, w10, w11
    96ac:	orr	w8, w8, w9
    96b0:	cbz	w8, 9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>
    96b4:	ldr	w9, [x20]
    96b8:	ldrb	w10, [x20, #4]
    96bc:	mov	w8, #0x6366                	// #25446
    96c0:	movk	w8, #0x6c6d, lsl #16
    96c4:	mov	w11, #0x65                  	// #101
    96c8:	eor	w9, w9, w8
    96cc:	eor	w10, w10, w11
    96d0:	orr	w9, w9, w10
    96d4:	cbz	w9, 9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>
    96d8:	ldr	w9, [x20]
    96dc:	ldrb	w10, [x20, #4]
    96e0:	mov	w11, #0x74                  	// #116
    96e4:	eor	w8, w9, w8
    96e8:	eor	w9, w10, w11
    96ec:	orr	w8, w8, w9
    96f0:	cbz	w8, 9718 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x8a0>
    96f4:	ldr	w8, [x20]
    96f8:	ldrb	w9, [x20, #4]
    96fc:	mov	w10, #0x6366                	// #25446
    9700:	movk	w10, #0x6e6d, lsl #16
    9704:	mov	w11, #0x65                  	// #101
    9708:	eor	w8, w8, w10
    970c:	eor	w9, w9, w11
    9710:	orr	w8, w8, w9
    9714:	cbnz	w8, 92f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x480>
    9718:	cmp	x19, #0x0
    971c:	cset	w8, eq  // eq = none
    9720:	bic	w8, w8, w24
    9724:	tbnz	w8, #0, 9874 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x9fc>
    9728:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    972c:	add	x8, x8, #0x0
    9730:	mov	w9, #0x103                 	// #259
    9734:	stp	x8, xzr, [sp, #72]
    9738:	strh	w9, [sp, #88]
    973c:	ldr	x0, [x27]
    9740:	add	x1, sp, #0x48
    9744:	mov	x2, xzr
    9748:	mov	x3, xzr
    974c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    9750:	mov	w20, w0
    9754:	b	9988 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb10>
    9758:	ldr	x0, [x27]
    975c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9760:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9764:	ldr	x8, [x27]
    9768:	ldr	x19, [sp, #72]
    976c:	sub	x23, x0, #0x1
    9770:	ldr	x9, [x8]
    9774:	mov	x0, x8
    9778:	ldr	x9, [x9, #48]
    977c:	blr	x9
    9780:	mov	x22, x0
    9784:	mov	w0, #0x70                  	// #112
    9788:	bl	0 <_Znwm>
    978c:	mov	x8, x0
    9790:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9794:	mov	x20, x0
    9798:	add	x9, x9, #0x0
    979c:	strb	wzr, [x8, #32]!
    97a0:	str	x9, [x0]
    97a4:	str	wzr, [x0, #48]
    97a8:	str	x22, [x0, #104]
    97ac:	str	x19, [x0, #72]
    97b0:	str	x21, [x0, #56]
    97b4:	str	x23, [x0, #64]
    97b8:	ldr	x19, [sp, #56]
    97bc:	stp	x8, xzr, [x0, #16]
    97c0:	ldp	w8, w9, [x19, #8]
    97c4:	cmp	w8, w9
    97c8:	b.cc	9384 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x50c>  // b.lo, b.ul, b.last
    97cc:	mov	x0, x19
    97d0:	mov	x1, xzr
    97d4:	bl	0 <LLVMInitializeAArch64AsmParser>
    97d8:	ldp	w8, w9, [x19, #8]
    97dc:	ldr	x10, [x19]
    97e0:	cmp	w8, w9
    97e4:	str	x20, [x10, w8, uxtw #3]
    97e8:	b.cc	9394 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x51c>  // b.lo, b.ul, b.last
    97ec:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    97f0:	mov	x0, x25
    97f4:	mov	x1, x23
    97f8:	bl	b550 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    97fc:	tbz	w0, #0, a638 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c0>
    9800:	ldr	x21, [x27]
    9804:	ldr	x8, [x21]
    9808:	mov	x0, x21
    980c:	ldr	x8, [x8, #40]
    9810:	blr	x8
    9814:	mov	w8, #0x1                   	// #1
    9818:	stp	xzr, xzr, [x29, #-32]
    981c:	stur	xzr, [x29, #-40]
    9820:	stur	w8, [x29, #-16]
    9824:	ldr	x8, [x0]
    9828:	sub	x1, x29, #0x30
    982c:	mov	w2, #0x1                   	// #1
    9830:	mov	w3, #0x1                   	// #1
    9834:	ldr	x8, [x8, #32]
    9838:	blr	x8
    983c:	cmp	x0, #0x1
    9840:	b.ne	a8c0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a48>  // b.any
    9844:	ldp	x8, x9, [x29, #-40]
    9848:	cmp	x9, #0x2
    984c:	stp	x8, x9, [sp, #72]
    9850:	b.ne	9b68 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xcf0>  // b.any
    9854:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    9858:	add	x1, x1, #0x0
    985c:	add	x0, sp, #0x48
    9860:	mov	w2, #0x2                   	// #2
    9864:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    9868:	cmp	w0, #0x0
    986c:	cset	w26, eq  // eq = none
    9870:	b	9b6c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xcf4>
    9874:	ldr	x8, [x21]
    9878:	mov	x0, x21
    987c:	ldr	x8, [x8, #136]
    9880:	blr	x8
    9884:	ldr	x0, [x27]
    9888:	ldr	x8, [x0]
    988c:	ldr	x8, [x8, #48]
    9890:	blr	x8
    9894:	mov	x21, x0
    9898:	mov	w0, #0x70                  	// #112
    989c:	bl	0 <_Znwm>
    98a0:	mov	x8, x0
    98a4:	mov	w9, #0x6                   	// #6
    98a8:	strb	wzr, [x8, #32]!
    98ac:	str	w9, [x0, #48]
    98b0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    98b4:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    98b8:	add	x9, x9, #0x0
    98bc:	add	x19, x19, #0x0
    98c0:	stp	x22, x9, [x0, #64]
    98c4:	mov	w9, #0x2                   	// #2
    98c8:	str	x21, [x0, #104]
    98cc:	str	x19, [x0]
    98d0:	str	w9, [x0, #80]
    98d4:	strb	wzr, [x0, #84]
    98d8:	str	x22, [x0, #56]
    98dc:	stp	x8, xzr, [x0, #16]
    98e0:	ldp	w8, w9, [x23, #8]
    98e4:	mov	x20, x0
    98e8:	cmp	w8, w9
    98ec:	b.cs	a774 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18fc>  // b.hs, b.nlast
    98f0:	ldr	x10, [x23]
    98f4:	cmp	w8, w9
    98f8:	str	x20, [x10, w8, uxtw #3]
    98fc:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    9900:	add	w8, w8, #0x1
    9904:	str	w8, [x23, #8]
    9908:	ldr	x0, [x27]
    990c:	ldr	x8, [x0]
    9910:	ldr	x8, [x8, #48]
    9914:	blr	x8
    9918:	mov	x21, x0
    991c:	mov	w0, #0x70                  	// #112
    9920:	bl	0 <_Znwm>
    9924:	mov	x8, x0
    9928:	mov	w9, #0x6                   	// #6
    992c:	strb	wzr, [x8, #32]!
    9930:	str	w9, [x0, #48]
    9934:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9938:	add	x9, x9, #0x0
    993c:	mov	w10, #0x2                   	// #2
    9940:	str	x19, [x0]
    9944:	str	x21, [x0, #104]
    9948:	stp	x22, x9, [x0, #64]
    994c:	str	w10, [x0, #80]
    9950:	strb	wzr, [x0, #84]
    9954:	str	x22, [x0, #56]
    9958:	stp	x8, xzr, [x0, #16]
    995c:	ldp	w8, w9, [x23, #8]
    9960:	mov	x20, x0
    9964:	cmp	w8, w9
    9968:	b.cs	a798 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1920>  // b.hs, b.nlast
    996c:	ldr	x10, [x23]
    9970:	cmp	w8, w9
    9974:	str	x20, [x10, w8, uxtw #3]
    9978:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    997c:	mov	w20, wzr
    9980:	add	w8, w8, #0x1
    9984:	str	w8, [x23, #8]
    9988:	sub	x0, x29, #0x30
    998c:	bl	0 <LLVMInitializeAArch64AsmParser>
    9990:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    9994:	sub	x8, x29, #0x30
    9998:	add	x0, x8, #0x18
    999c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
    99a0:	ldr	x8, [x22]
    99a4:	mov	x0, x22
    99a8:	ldr	x8, [x8, #136]
    99ac:	blr	x8
    99b0:	stp	xzr, xzr, [x29, #-64]
    99b4:	ldr	x0, [x25, #8]
    99b8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    99bc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    99c0:	mov	x4, x0
    99c4:	sub	x2, x29, #0x44
    99c8:	sub	x3, x29, #0x40
    99cc:	mov	x0, x25
    99d0:	mov	x1, x22
    99d4:	bl	11874 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    99d8:	cbz	w0, 9ab0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc38>
    99dc:	mov	w26, w0
    99e0:	cmp	w0, #0x1
    99e4:	b.ne	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>  // b.any
    99e8:	ldr	x8, [x22]
    99ec:	mov	x0, x22
    99f0:	ldr	x8, [x8, #40]
    99f4:	blr	x8
    99f8:	ldr	x1, [x0, #8]!
    99fc:	sub	x2, x29, #0x30
    9a00:	strb	wzr, [x0, #106]
    9a04:	bl	0 <LLVMInitializeAArch64AsmParser>
    9a08:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    9a0c:	ldr	x8, [x23]
    9a10:	mov	w20, w0
    9a14:	mov	x0, x23
    9a18:	ldr	x8, [x8, #136]
    9a1c:	blr	x8
    9a20:	ldr	w8, [sp, #8]
    9a24:	tbz	w8, #0, 9e90 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1018>
    9a28:	orr	w8, w20, #0x1
    9a2c:	cmp	w8, #0xf
    9a30:	b.ne	9e8c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1014>  // b.any
    9a34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9a38:	add	x8, x8, #0x0
    9a3c:	b	94f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x678>
    9a40:	ldr	x8, [x21]
    9a44:	mov	x22, x0
    9a48:	mov	x0, x21
    9a4c:	ldr	x8, [x8, #136]
    9a50:	blr	x8
    9a54:	ldr	x0, [x27]
    9a58:	add	x1, sp, #0x48
    9a5c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    9a60:	tbnz	w0, #0, a4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1658>
    9a64:	ldr	w8, [x23, #8]
    9a68:	cmp	w8, #0x2
    9a6c:	b.cc	9a8c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc14>  // b.lo, b.ul, b.last
    9a70:	ldr	x8, [x23]
    9a74:	ldr	x0, [x8, #8]
    9a78:	ldr	w8, [x0, #48]
    9a7c:	cmp	w8, #0x3
    9a80:	b.ne	9a8c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc14>  // b.any
    9a84:	ldr	w8, [x0, #76]
    9a88:	cbz	w8, a324 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14ac>
    9a8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9a90:	add	x8, x8, #0x0
    9a94:	mov	w9, #0x103                 	// #259
    9a98:	stp	x8, xzr, [x29, #-48]
    9a9c:	sturh	w9, [x29, #-32]
    9aa0:	ldr	x0, [x27]
    9aa4:	sub	x2, x29, #0x30
    9aa8:	mov	x1, x22
    9aac:	b	93e4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x56c>
    9ab0:	ldr	x0, [x27]
    9ab4:	ldur	w19, [x29, #-68]
    9ab8:	mov	w1, #0xd                   	// #13
    9abc:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    9ac0:	ldr	x8, [x27]
    9ac4:	tbz	w0, #0, 9d84 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf0c>
    9ac8:	mov	x0, x8
    9acc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ad0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9ad4:	stp	xzr, xzr, [x29, #-88]
    9ad8:	ldr	x8, [x25, #8]
    9adc:	mov	x23, x0
    9ae0:	mov	x0, x8
    9ae4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ae8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9aec:	mov	x4, x0
    9af0:	sub	x2, x29, #0x5c
    9af4:	sub	x3, x29, #0x58
    9af8:	mov	x0, x25
    9afc:	mov	x1, x22
    9b00:	bl	11874 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    9b04:	mov	w26, w0
    9b08:	cbnz	w0, 9b60 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xce8>
    9b0c:	ldur	x2, [x29, #-56]
    9b10:	ldur	x8, [x29, #-80]
    9b14:	cmp	x2, x8
    9b18:	b.ne	9b30 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xcb8>  // b.any
    9b1c:	cbz	x2, a2c4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x144c>
    9b20:	ldur	x0, [x29, #-64]
    9b24:	ldur	x1, [x29, #-88]
    9b28:	bl	0 <bcmp>
    9b2c:	cbz	w0, a2c4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x144c>
    9b30:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9b34:	add	x8, x8, #0x0
    9b38:	mov	w9, #0x103                 	// #259
    9b3c:	stp	x8, xzr, [sp, #72]
    9b40:	strh	w9, [sp, #88]
    9b44:	ldr	x0, [x27]
    9b48:	add	x2, sp, #0x48
    9b4c:	mov	x1, x23
    9b50:	mov	x3, xzr
    9b54:	mov	x4, xzr
    9b58:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    9b5c:	mov	w26, #0x2                   	// #2
    9b60:	ldr	x23, [sp, #56]
    9b64:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    9b68:	mov	w26, wzr
    9b6c:	ldur	w8, [x29, #-16]
    9b70:	cmp	w8, #0x41
    9b74:	b.cc	9b84 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd0c>  // b.lo, b.ul, b.last
    9b78:	ldur	x0, [x29, #-24]
    9b7c:	cbz	x0, 9b84 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd0c>
    9b80:	bl	0 <_ZdaPv>
    9b84:	ldr	x8, [x21]
    9b88:	mov	x0, x21
    9b8c:	ldr	x8, [x8, #40]
    9b90:	blr	x8
    9b94:	mov	w8, #0x1                   	// #1
    9b98:	stp	xzr, xzr, [x29, #-32]
    9b9c:	stur	xzr, [x29, #-40]
    9ba0:	stur	w8, [x29, #-16]
    9ba4:	ldr	x8, [x0]
    9ba8:	sub	x1, x29, #0x30
    9bac:	mov	w2, #0x1                   	// #1
    9bb0:	mov	w3, #0x1                   	// #1
    9bb4:	ldr	x8, [x8, #32]
    9bb8:	blr	x8
    9bbc:	cmp	x0, #0x1
    9bc0:	b.ne	a8c0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a48>  // b.any
    9bc4:	ldur	w8, [x29, #-16]
    9bc8:	ldur	w27, [x29, #-48]
    9bcc:	cmp	w8, #0x41
    9bd0:	b.cc	9be0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd68>  // b.lo, b.ul, b.last
    9bd4:	ldur	x0, [x29, #-24]
    9bd8:	cbz	x0, 9be0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xd68>
    9bdc:	bl	0 <_ZdaPv>
    9be0:	mov	x0, x21
    9be4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9be8:	ldp	x9, x8, [x0, #8]
    9bec:	cmp	x8, #0x3
    9bf0:	stp	x9, x8, [x29, #-48]
    9bf4:	b.ne	a1dc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1364>  // b.any
    9bf8:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    9bfc:	add	x22, x22, #0x0
    9c00:	sub	x0, x29, #0x30
    9c04:	mov	w2, #0x3                   	// #3
    9c08:	mov	x1, x22
    9c0c:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    9c10:	cbnz	w0, a1dc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1364>
    9c14:	cmp	w27, #0x25
    9c18:	cset	w8, eq  // eq = none
    9c1c:	orr	w8, w26, w8
    9c20:	tbz	w8, #0, a1dc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1364>
    9c24:	ldr	x19, [sp, #48]
    9c28:	ldr	x0, [x19]
    9c2c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9c30:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9c34:	ldr	x8, [x19]
    9c38:	mov	x24, x0
    9c3c:	ldr	x9, [x8]
    9c40:	mov	x0, x8
    9c44:	ldr	x9, [x9, #48]
    9c48:	blr	x9
    9c4c:	mov	x25, x0
    9c50:	mov	w0, #0x70                  	// #112
    9c54:	bl	0 <_Znwm>
    9c58:	mov	x8, x0
    9c5c:	mov	w9, #0x6                   	// #6
    9c60:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
    9c64:	strb	wzr, [x8, #32]!
    9c68:	str	w9, [x0, #48]
    9c6c:	add	x28, x28, #0x0
    9c70:	mov	w9, #0x3                   	// #3
    9c74:	mov	x10, x23
    9c78:	str	x25, [x0, #104]
    9c7c:	str	x28, [x0]
    9c80:	stp	x24, x22, [x0, #64]
    9c84:	str	w9, [x0, #80]
    9c88:	strb	wzr, [x0, #84]
    9c8c:	str	x24, [x0, #56]
    9c90:	stp	x8, xzr, [x0, #16]
    9c94:	ldp	w8, w9, [x10, #8]
    9c98:	mov	x23, x0
    9c9c:	cmp	w8, w9
    9ca0:	b.cs	a7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1968>  // b.hs, b.nlast
    9ca4:	ldp	x19, x25, [sp, #56]
    9ca8:	cmp	w8, w9
    9cac:	ldr	x10, [x19]
    9cb0:	str	x23, [x10, w8, uxtw #3]
    9cb4:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    9cb8:	add	w8, w8, #0x1
    9cbc:	str	w8, [x19, #8]
    9cc0:	ldr	x8, [x21]
    9cc4:	mov	x0, x21
    9cc8:	ldr	x8, [x8, #136]
    9ccc:	blr	x8
    9cd0:	cbz	w26, a08c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1214>
    9cd4:	ldr	x19, [sp, #48]
    9cd8:	ldr	x0, [x19]
    9cdc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9ce0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9ce4:	ldr	x8, [x19]
    9ce8:	mov	x22, x0
    9cec:	ldr	x9, [x8]
    9cf0:	mov	x0, x8
    9cf4:	ldr	x9, [x9, #48]
    9cf8:	blr	x9
    9cfc:	mov	x23, x0
    9d00:	mov	w0, #0x70                  	// #112
    9d04:	bl	0 <_Znwm>
    9d08:	mov	x8, x0
    9d0c:	mov	w9, #0x6                   	// #6
    9d10:	ldr	x19, [sp, #56]
    9d14:	strb	wzr, [x8, #32]!
    9d18:	str	w9, [x0, #48]
    9d1c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9d20:	add	x9, x9, #0x0
    9d24:	mov	w10, #0x2                   	// #2
    9d28:	str	x28, [x0]
    9d2c:	str	x23, [x0, #104]
    9d30:	stp	x22, x9, [x0, #64]
    9d34:	str	w10, [x0, #80]
    9d38:	strb	wzr, [x0, #84]
    9d3c:	str	x22, [x0, #56]
    9d40:	stp	x8, xzr, [x0, #16]
    9d44:	ldp	w8, w9, [x19, #8]
    9d48:	mov	x20, x0
    9d4c:	cmp	w8, w9
    9d50:	b.cs	a81c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x19a4>  // b.hs, b.nlast
    9d54:	ldr	x10, [x19]
    9d58:	cmp	w8, w9
    9d5c:	str	x20, [x10, w8, uxtw #3]
    9d60:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    9d64:	add	w8, w8, #0x1
    9d68:	str	w8, [x19, #8]
    9d6c:	ldr	x8, [x21]
    9d70:	mov	x0, x21
    9d74:	ldr	x8, [x8, #136]
    9d78:	blr	x8
    9d7c:	mov	w20, wzr
    9d80:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    9d84:	mov	w1, #0x19                  	// #25
    9d88:	mov	x0, x8
    9d8c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    9d90:	str	w19, [sp, #40]
    9d94:	tbz	w0, #0, 9f14 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x109c>
    9d98:	ldur	x24, [x29, #-56]
    9d9c:	cbz	x24, 9f8c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1114>
    9da0:	ldur	x25, [x29, #-64]
    9da4:	mov	w28, #0x1                   	// #1
    9da8:	ldr	x20, [sp, #64]
    9dac:	ldr	x0, [x20, #8]
    9db0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9db4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9db8:	stp	xzr, xzr, [x29, #-88]
    9dbc:	ldr	x8, [x20, #8]
    9dc0:	mov	x23, x0
    9dc4:	mov	x0, x8
    9dc8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9dcc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9dd0:	mov	x4, x0
    9dd4:	sub	x2, x29, #0x5c
    9dd8:	sub	x3, x29, #0x58
    9ddc:	mov	x0, x20
    9de0:	mov	x1, x22
    9de4:	bl	11874 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    9de8:	cbnz	w0, a364 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14ec>
    9dec:	ldur	x8, [x29, #-80]
    9df0:	cmp	x24, x8
    9df4:	b.ne	a160 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12e8>  // b.any
    9df8:	ldur	x1, [x29, #-88]
    9dfc:	mov	x0, x25
    9e00:	mov	x2, x24
    9e04:	bl	0 <bcmp>
    9e08:	cbnz	w0, a160 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12e8>
    9e0c:	ldr	x0, [x27]
    9e10:	ldr	x8, [x0]
    9e14:	ldr	x8, [x8, #48]
    9e18:	blr	x8
    9e1c:	ldr	x8, [x0, #24]
    9e20:	ldur	w20, [x29, #-92]
    9e24:	ldr	w9, [x8, #8]
    9e28:	cmp	w9, w20
    9e2c:	b.ls	a900 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a88>  // b.plast
    9e30:	ldr	x0, [x27]
    9e34:	ldr	x8, [x8, #104]
    9e38:	ldr	x9, [x0]
    9e3c:	ldrh	w26, [x8, x20, lsl #1]
    9e40:	ldr	x8, [x9, #48]
    9e44:	blr	x8
    9e48:	ldr	x8, [x0, #24]
    9e4c:	ldr	w9, [x8, #8]
    9e50:	cmp	w9, w19
    9e54:	b.ls	a900 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a88>  // b.plast
    9e58:	ldr	x8, [x8, #104]
    9e5c:	ldrh	w8, [x8, w19, uxtw #1]
    9e60:	add	w8, w8, #0x1
    9e64:	and	w8, w8, #0x1f
    9e68:	cmp	w26, w8
    9e6c:	b.ne	a2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1478>  // b.any
    9e70:	ldr	x0, [x27]
    9e74:	mov	w1, #0x19                  	// #25
    9e78:	add	w28, w28, #0x1
    9e7c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    9e80:	mov	w19, w20
    9e84:	tbnz	w0, #0, 9da8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xf30>
    9e88:	b	9f18 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x10a0>
    9e8c:	eor	w20, w20, #0x1
    9e90:	ldr	x0, [x27]
    9e94:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9e98:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9e9c:	ldr	x8, [x27]
    9ea0:	mov	x23, x0
    9ea4:	ldr	x9, [x8]
    9ea8:	mov	x0, x8
    9eac:	ldr	x9, [x9, #48]
    9eb0:	blr	x9
    9eb4:	mov	x24, x0
    9eb8:	mov	w0, #0x70                  	// #112
    9ebc:	bl	0 <_Znwm>
    9ec0:	mov	x8, x0
    9ec4:	strb	wzr, [x8, #32]!
    9ec8:	stp	x21, x23, [x0, #56]
    9ecc:	stp	x8, xzr, [x0, #16]
    9ed0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    9ed4:	ldr	x19, [sp, #56]
    9ed8:	add	x9, x9, #0x0
    9edc:	str	x9, [x0]
    9ee0:	mov	w9, #0x2                   	// #2
    9ee4:	str	w9, [x0, #48]
    9ee8:	str	x24, [x0, #104]
    9eec:	str	w20, [x0, #72]
    9ef0:	ldp	w8, w9, [x19, #8]
    9ef4:	mov	x22, x0
    9ef8:	cmp	w8, w9
    9efc:	b.cs	a7bc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1944>  // b.hs, b.nlast
    9f00:	ldr	x10, [x19]
    9f04:	cmp	w8, w9
    9f08:	str	x22, [x10, w8, uxtw #3]
    9f0c:	b.cc	9394 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x51c>  // b.lo, b.ul, b.last
    9f10:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    9f14:	mov	w28, #0x1                   	// #1
    9f18:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9f1c:	add	x8, x8, #0x0
    9f20:	mov	w9, #0x103                 	// #259
    9f24:	stp	x8, xzr, [sp, #72]
    9f28:	strh	w9, [sp, #88]
    9f2c:	ldr	x0, [x27]
    9f30:	add	x2, sp, #0x48
    9f34:	mov	w1, #0x16                  	// #22
    9f38:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    9f3c:	tbz	w0, #0, 9f4c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x10d4>
    9f40:	ldp	x23, x25, [sp, #56]
    9f44:	mov	w26, #0x1                   	// #1
    9f48:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    9f4c:	ldp	x23, x25, [sp, #56]
    9f50:	cmp	w28, #0x5
    9f54:	b.cc	a05c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x11e4>  // b.lo, b.ul, b.last
    9f58:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    9f5c:	add	x8, x8, #0x0
    9f60:	mov	w9, #0x103                 	// #259
    9f64:	stp	x8, xzr, [sp, #72]
    9f68:	strh	w9, [sp, #88]
    9f6c:	ldr	x0, [x27]
    9f70:	add	x2, sp, #0x48
    9f74:	mov	x1, x21
    9f78:	mov	x3, xzr
    9f7c:	mov	x4, xzr
    9f80:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    9f84:	mov	w26, #0x1                   	// #1
    9f88:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    9f8c:	ldr	x25, [sp, #64]
    9f90:	mov	w28, #0x1                   	// #1
    9f94:	ldr	x0, [x25, #8]
    9f98:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9f9c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9fa0:	stp	xzr, xzr, [x29, #-88]
    9fa4:	ldr	x8, [x25, #8]
    9fa8:	mov	x23, x0
    9fac:	mov	x0, x8
    9fb0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    9fb4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    9fb8:	mov	x4, x0
    9fbc:	sub	x2, x29, #0x5c
    9fc0:	sub	x3, x29, #0x58
    9fc4:	mov	x0, x25
    9fc8:	mov	x1, x22
    9fcc:	bl	11874 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
    9fd0:	cbnz	w0, a4ac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1634>
    9fd4:	ldur	x8, [x29, #-80]
    9fd8:	cbnz	x8, a164 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x12ec>
    9fdc:	ldr	x0, [x27]
    9fe0:	ldr	x8, [x0]
    9fe4:	ldr	x8, [x8, #48]
    9fe8:	blr	x8
    9fec:	ldr	x8, [x0, #24]
    9ff0:	ldur	w20, [x29, #-92]
    9ff4:	ldr	w9, [x8, #8]
    9ff8:	cmp	w9, w20
    9ffc:	b.ls	a900 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a88>  // b.plast
    a000:	ldr	x0, [x27]
    a004:	ldr	x8, [x8, #104]
    a008:	ldr	x9, [x0]
    a00c:	ldrh	w24, [x8, x20, lsl #1]
    a010:	ldr	x8, [x9, #48]
    a014:	blr	x8
    a018:	ldr	x8, [x0, #24]
    a01c:	ldr	w9, [x8, #8]
    a020:	cmp	w9, w19
    a024:	b.ls	a900 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1a88>  // b.plast
    a028:	ldr	x8, [x8, #104]
    a02c:	ldrh	w8, [x8, w19, uxtw #1]
    a030:	add	w8, w8, #0x1
    a034:	and	w8, w8, #0x1f
    a038:	cmp	w24, w8
    a03c:	b.ne	a2f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1478>  // b.any
    a040:	ldr	x0, [x27]
    a044:	mov	w1, #0x19                  	// #25
    a048:	add	w28, w28, #0x1
    a04c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    a050:	mov	w19, w20
    a054:	tbnz	w0, #0, 9f94 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x111c>
    a058:	b	9f18 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x10a0>
    a05c:	ldur	x2, [x29, #-56]
    a060:	cbz	x2, a370 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14f8>
    a064:	ldur	x1, [x29, #-64]
    a068:	add	x0, sp, #0x48
    a06c:	mov	w3, #0x1                   	// #1
    a070:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    a074:	ldrb	w8, [sp, #80]
    a078:	ldr	w19, [sp, #40]
    a07c:	cbz	w8, a374 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14fc>
    a080:	ldr	d0, [sp, #72]
    a084:	strb	wzr, [sp, #80]
    a088:	b	a378 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1500>
    a08c:	mov	x23, x19
    a090:	ldr	x19, [sp, #48]
    a094:	cmp	w27, #0x25
    a098:	b.ne	a19c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1324>  // b.any
    a09c:	ldr	x8, [x21]
    a0a0:	mov	x0, x21
    a0a4:	ldr	x8, [x8, #136]
    a0a8:	blr	x8
    a0ac:	ldr	x0, [x19]
    a0b0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a0b4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a0b8:	mov	x22, x0
    a0bc:	sub	x1, x29, #0x30
    a0c0:	mov	x0, x21
    a0c4:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    a0c8:	tbnz	w0, #0, a19c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1324>
    a0cc:	ldur	x8, [x29, #-48]
    a0d0:	cbz	x8, a940 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1ac8>
    a0d4:	ldr	w9, [x8]
    a0d8:	cmp	w9, #0x1
    a0dc:	b.ne	a19c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1324>  // b.any
    a0e0:	ldr	x0, [x19]
    a0e4:	ldr	x20, [x8, #16]
    a0e8:	ldr	x9, [x0]
    a0ec:	ldr	x8, [x9, #48]
    a0f0:	blr	x8
    a0f4:	mov	x1, x0
    a0f8:	mov	x0, x20
    a0fc:	mov	w2, wzr
    a100:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    a104:	ldr	x8, [x19]
    a108:	mov	x21, x0
    a10c:	mov	x0, x8
    a110:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a114:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a118:	ldr	x8, [x19]
    a11c:	mov	x23, x0
    a120:	ldr	x9, [x8]
    a124:	mov	x0, x8
    a128:	ldr	x9, [x9, #48]
    a12c:	blr	x9
    a130:	mov	x24, x0
    a134:	mov	w0, #0x70                  	// #112
    a138:	bl	0 <_Znwm>
    a13c:	mov	x8, x0
    a140:	mov	x20, x0
    a144:	strb	wzr, [x8, #32]!
    a148:	str	x28, [x0]
    a14c:	str	wzr, [x0, #48]
    a150:	str	x24, [x0, #104]
    a154:	str	x21, [x0, #72]
    a158:	str	x22, [x0, #56]
    a15c:	b	97b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x93c>
    a160:	ldr	x25, [sp, #64]
    a164:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a168:	add	x8, x8, #0x0
    a16c:	mov	w9, #0x103                 	// #259
    a170:	stp	x8, xzr, [sp, #72]
    a174:	strh	w9, [sp, #88]
    a178:	ldr	x0, [x27]
    a17c:	add	x2, sp, #0x48
    a180:	mov	x1, x23
    a184:	mov	x3, xzr
    a188:	mov	x4, xzr
    a18c:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    a190:	ldr	x23, [sp, #56]
    a194:	mov	w26, #0x2                   	// #2
    a198:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    a19c:	ldr	x0, [x19]
    a1a0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a1a4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a1a8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a1ac:	add	x8, x8, #0x0
    a1b0:	mov	w9, #0x103                 	// #259
    a1b4:	stp	x8, xzr, [x29, #-48]
    a1b8:	sturh	w9, [x29, #-32]
    a1bc:	ldr	x8, [x19]
    a1c0:	mov	x1, x0
    a1c4:	sub	x2, x29, #0x30
    a1c8:	mov	x3, xzr
    a1cc:	mov	x0, x8
    a1d0:	mov	x4, xzr
    a1d4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    a1d8:	tbz	w0, #0, a638 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c0>
    a1dc:	mov	x0, x25
    a1e0:	mov	x1, x23
    a1e4:	bl	d29c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    a1e8:	cmp	w0, #0x1
    a1ec:	b.ne	a2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1440>  // b.any
    a1f0:	ldr	x19, [sp, #48]
    a1f4:	ldr	x0, [x19]
    a1f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a1fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a200:	ldr	x8, [x19]
    a204:	mov	x20, x0
    a208:	sub	x1, x29, #0x30
    a20c:	mov	x0, x8
    a210:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    a214:	tbnz	w0, #0, a4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1658>
    a218:	ldr	x0, [x19]
    a21c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a220:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a224:	ldr	x8, [x19]
    a228:	ldur	x19, [x29, #-48]
    a22c:	sub	x23, x0, #0x1
    a230:	ldr	x9, [x8]
    a234:	mov	x0, x8
    a238:	ldr	x9, [x9, #48]
    a23c:	blr	x9
    a240:	mov	x22, x0
    a244:	mov	w0, #0x70                  	// #112
    a248:	bl	0 <_Znwm>
    a24c:	mov	x8, x0
    a250:	strb	wzr, [x8, #32]!
    a254:	stp	x23, x19, [x0, #64]
    a258:	ldr	x19, [sp, #56]
    a25c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a260:	mov	x21, x0
    a264:	add	x9, x9, #0x0
    a268:	str	x9, [x0]
    a26c:	str	wzr, [x0, #48]
    a270:	str	x22, [x0, #104]
    a274:	str	x20, [x0, #56]
    a278:	stp	x8, xzr, [x0, #16]
    a27c:	ldp	w8, w9, [x19, #8]
    a280:	cmp	w8, w9
    a284:	b.cs	a720 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18a8>  // b.hs, b.nlast
    a288:	ldr	x10, [x19]
    a28c:	cmp	w8, w9
    a290:	str	x21, [x10, w8, uxtw #3]
    a294:	b.cc	9394 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x51c>  // b.lo, b.ul, b.last
    a298:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a29c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a2a0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a2a4:	add	x0, x0, #0x0
    a2a8:	add	x1, x1, #0x0
    a2ac:	add	x3, x3, #0x0
    a2b0:	mov	w2, #0x43                  	// #67
    a2b4:	bl	0 <__assert_fail>
    a2b8:	cmp	w0, #0x0
    a2bc:	cset	w20, ne  // ne = any
    a2c0:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    a2c4:	ldur	w8, [x29, #-92]
    a2c8:	add	w9, w8, #0x20
    a2cc:	cmp	w8, w19
    a2d0:	csel	w8, w8, w9, hi  // hi = pmore
    a2d4:	sub	w8, w8, w19
    a2d8:	sub	w9, w8, #0x1
    a2dc:	cmp	w9, #0x3
    a2e0:	b.cc	a41c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15a4>  // b.lo, b.ul, b.last
    a2e4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a2e8:	add	x8, x8, #0x0
    a2ec:	b	9b38 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xcc0>
    a2f0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a2f4:	add	x8, x8, #0x0
    a2f8:	mov	w9, #0x103                 	// #259
    a2fc:	stp	x8, xzr, [sp, #72]
    a300:	strh	w9, [sp, #88]
    a304:	ldr	x0, [x27]
    a308:	add	x2, sp, #0x48
    a30c:	mov	x1, x23
    a310:	mov	x3, xzr
    a314:	mov	x4, xzr
    a318:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    a31c:	mov	w26, #0x2                   	// #2
    a320:	b	a368 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x14f0>
    a324:	ldr	x8, [x0]
    a328:	ldr	x8, [x8, #56]
    a32c:	blr	x8
    a330:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
    a334:	ldr	x8, [x8]
    a338:	mov	w9, w0
    a33c:	lsr	x9, x9, #3
    a340:	ldrh	w10, [x8, #502]
    a344:	cmp	w9, w10
    a348:	b.cs	a428 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15b0>  // b.hs, b.nlast
    a34c:	ldr	x8, [x8, #488]
    a350:	ldrb	w8, [x8, x9]
    a354:	and	w9, w0, #0x7
    a358:	lsr	w8, w8, w9
    a35c:	and	w19, w8, #0x1
    a360:	b	a42c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x15b4>
    a364:	mov	w26, w0
    a368:	ldp	x23, x25, [sp, #56]
    a36c:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    a370:	ldr	w19, [sp, #40]
    a374:	movi	v0.2d, #0x0
    a378:	str	q0, [sp, #16]
    a37c:	ldr	x0, [x27]
    a380:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a384:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    a388:	ldr	x8, [x27]
    a38c:	mov	x23, x0
    a390:	ldr	x9, [x8]
    a394:	mov	x0, x8
    a398:	ldr	x9, [x9, #48]
    a39c:	blr	x9
    a3a0:	mov	x24, x0
    a3a4:	mov	w0, #0x70                  	// #112
    a3a8:	bl	0 <_Znwm>
    a3ac:	mov	x8, x0
    a3b0:	strb	wzr, [x8, #32]!
    a3b4:	stp	w19, w28, [x0, #72]
    a3b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a3bc:	ldr	q0, [sp, #16]
    a3c0:	stp	x21, x23, [x0, #56]
    a3c4:	stp	x8, xzr, [x0, #16]
    a3c8:	add	x9, x9, #0x0
    a3cc:	ldr	x23, [sp, #56]
    a3d0:	str	x9, [x0]
    a3d4:	mov	w9, #0x4                   	// #4
    a3d8:	str	w9, [x0, #48]
    a3dc:	mov	w9, #0x1                   	// #1
    a3e0:	str	x24, [x0, #104]
    a3e4:	str	d0, [x0, #80]
    a3e8:	str	w9, [x0, #88]
    a3ec:	ldp	w8, w9, [x23, #8]
    a3f0:	mov	x22, x0
    a3f4:	cmp	w8, w9
    a3f8:	b.cs	a7f8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1980>  // b.hs, b.nlast
    a3fc:	ldr	x10, [x23]
    a400:	cmp	w8, w9
    a404:	str	x22, [x10, w8, uxtw #3]
    a408:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    a40c:	mov	w26, wzr
    a410:	add	w8, w8, #0x1
    a414:	str	w8, [x23, #8]
    a418:	b	a4b4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x163c>
    a41c:	str	w19, [sp, #40]
    a420:	add	w28, w8, #0x1
    a424:	b	9f18 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x10a0>
    a428:	mov	w19, wzr
    a42c:	ldr	x0, [x27]
    a430:	ldr	x8, [x0]
    a434:	ldr	x8, [x8, #48]
    a438:	blr	x8
    a43c:	ldr	x8, [sp, #72]
    a440:	cbz	x8, a940 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1ac8>
    a444:	ldr	w9, [x8]
    a448:	mov	x20, x0
    a44c:	sub	x23, x22, #0x1
    a450:	cmp	w9, #0x1
    a454:	b.ne	a6a8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1830>  // b.any
    a458:	ldr	x21, [x8, #16]
    a45c:	cmp	w19, #0x0
    a460:	mov	w8, #0x10                  	// #16
    a464:	mov	w9, #0x30                  	// #48
    a468:	csel	w8, w9, w8, ne  // ne = any
    a46c:	cmp	x21, #0x10, lsl #12
    a470:	b.cc	a4f0 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1678>  // b.lo, b.ul, b.last
    a474:	mov	w24, wzr
    a478:	mov	x9, x21
    a47c:	rbit	x10, x9
    a480:	clz	x10, x10
    a484:	cmp	w10, #0x10
    a488:	b.cc	a660 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17e8>  // b.lo, b.ul, b.last
    a48c:	lsr	x21, x9, #16
    a490:	lsr	x10, x9, #32
    a494:	add	w24, w24, #0x10
    a498:	mov	x9, x21
    a49c:	cbnz	x10, a47c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1604>
    a4a0:	cmp	w24, w8
    a4a4:	b.ls	a4f4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x167c>  // b.plast
    a4a8:	b	a664 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17ec>
    a4ac:	ldr	x23, [sp, #56]
    a4b0:	mov	w26, w0
    a4b4:	ldur	w8, [x29, #-16]
    a4b8:	cmp	w8, #0x41
    a4bc:	b.cc	a4cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1654>  // b.lo, b.ul, b.last
    a4c0:	ldur	x0, [x29, #-24]
    a4c4:	cbz	x0, a4cc <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1654>
    a4c8:	bl	0 <_ZdaPv>
    a4cc:	cbz	w26, a4d8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1660>
    a4d0:	mov	w20, #0x1                   	// #1
    a4d4:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    a4d8:	mov	x0, x25
    a4dc:	mov	x1, x23
    a4e0:	bl	c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    a4e4:	cmp	w0, #0x2
    a4e8:	cset	w20, eq  // eq = none
    a4ec:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    a4f0:	mov	w24, wzr
    a4f4:	mov	w0, #0x70                  	// #112
    a4f8:	bl	0 <_Znwm>
    a4fc:	mov	x8, x0
    a500:	mov	w9, #0x6                   	// #6
    a504:	strb	wzr, [x8, #32]!
    a508:	str	w9, [x0, #48]
    a50c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a510:	add	x9, x9, #0x0
    a514:	stp	x22, x9, [x0, #64]
    a518:	mov	w9, #0x4                   	// #4
    a51c:	stp	x8, xzr, [x0, #16]
    a520:	str	w9, [x0, #80]
    a524:	ldr	x9, [sp, #56]
    a528:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
    a52c:	add	x19, x19, #0x0
    a530:	str	x19, [x0]
    a534:	str	x20, [x0, #104]
    a538:	strb	wzr, [x0, #84]
    a53c:	str	x22, [x0, #56]
    a540:	ldr	w8, [x9, #8]
    a544:	cbz	w8, a960 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1ae8>
    a548:	ldr	x9, [x9]
    a54c:	ldr	x8, [x9]
    a550:	str	x0, [x9]
    a554:	cbz	x8, a568 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x16f0>
    a558:	ldr	x9, [x8]
    a55c:	mov	x0, x8
    a560:	ldr	x9, [x9, #8]
    a564:	blr	x9
    a568:	mov	x0, x21
    a56c:	mov	x1, x20
    a570:	mov	w2, wzr
    a574:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    a578:	mov	x22, x0
    a57c:	mov	w0, #0x70                  	// #112
    a580:	bl	0 <_Znwm>
    a584:	mov	x8, x0
    a588:	strb	wzr, [x8, #32]!
    a58c:	stp	x23, x22, [x0, #64]
    a590:	stp	x8, xzr, [x0, #16]
    a594:	ldr	x9, [sp, #56]
    a598:	str	x19, [x0]
    a59c:	str	wzr, [x0, #48]
    a5a0:	str	x20, [x0, #104]
    a5a4:	str	xzr, [x0, #56]
    a5a8:	ldp	w8, w22, [x9, #8]
    a5ac:	mov	x21, x0
    a5b0:	cmp	w8, w22
    a5b4:	b.cs	a840 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x19c8>  // b.hs, b.nlast
    a5b8:	ldr	x9, [sp, #56]
    a5bc:	cmp	w8, w22
    a5c0:	ldr	x26, [x9]
    a5c4:	str	x21, [x26, w8, uxtw #3]
    a5c8:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    a5cc:	add	w25, w8, #0x1
    a5d0:	str	w25, [x9, #8]
    a5d4:	cbz	w24, a638 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c0>
    a5d8:	mov	w0, #0x70                  	// #112
    a5dc:	bl	0 <_Znwm>
    a5e0:	mov	x8, x0
    a5e4:	mov	w9, #0xa                   	// #10
    a5e8:	mov	x21, x0
    a5ec:	strb	wzr, [x8, #32]!
    a5f0:	str	w9, [x0, #48]
    a5f4:	mov	w9, #0x1                   	// #1
    a5f8:	cmp	w25, w22
    a5fc:	str	x19, [x0]
    a600:	str	x20, [x0, #104]
    a604:	stp	wzr, w24, [x0, #72]
    a608:	strb	w9, [x0, #80]
    a60c:	stp	x8, xzr, [x0, #16]
    a610:	stp	xzr, x23, [x0, #56]
    a614:	b.cs	a858 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x19e0>  // b.hs, b.nlast
    a618:	ldr	x19, [sp, #56]
    a61c:	cmp	w25, w22
    a620:	str	x21, [x26, w25, uxtw #3]
    a624:	b.cs	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>  // b.hs, b.nlast
    a628:	add	w8, w25, #0x1
    a62c:	mov	w20, wzr
    a630:	str	w8, [x19, #8]
    a634:	b	a63c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17c4>
    a638:	mov	w20, wzr
    a63c:	and	w0, w20, #0x1
    a640:	ldp	x20, x19, [sp, #272]
    a644:	ldp	x22, x21, [sp, #256]
    a648:	ldp	x24, x23, [sp, #240]
    a64c:	ldp	x26, x25, [sp, #224]
    a650:	ldp	x28, x27, [sp, #208]
    a654:	ldp	x29, x30, [sp, #192]
    a658:	add	sp, sp, #0x120
    a65c:	ret
    a660:	mov	x21, x9
    a664:	tbnz	w19, #0, a6a8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1830>
    a668:	lsl	x8, x21, x24
    a66c:	clz	x9, x8
    a670:	mov	w10, #0x40                  	// #64
    a674:	sub	w11, w10, w9
    a678:	cmp	w11, #0x21
    a67c:	b.cc	a6a8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1830>  // b.lo, b.ul, b.last
    a680:	mvn	x11, x8
    a684:	cmn	x8, #0x1
    a688:	clz	x11, x11
    a68c:	csel	w10, w10, w11, eq  // eq = none
    a690:	cmp	x8, #0x0
    a694:	csel	w8, w9, w10, ge  // ge = tcont
    a698:	mov	w9, #0x41                  	// #65
    a69c:	sub	w8, w9, w8
    a6a0:	cmp	w8, #0x21
    a6a4:	b.cs	a768 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x18f0>  // b.hs, b.nlast
    a6a8:	ldr	x0, [x27]
    a6ac:	ldr	x8, [x0]
    a6b0:	ldr	x8, [x8, #56]
    a6b4:	blr	x8
    a6b8:	ldr	x0, [x0, #16]
    a6bc:	ldr	x1, [sp, #72]
    a6c0:	cmp	w19, #0x0
    a6c4:	mov	w8, #0x4                   	// #4
    a6c8:	mov	w9, #0x8                   	// #8
    a6cc:	csel	w2, w9, w8, ne  // ne = any
    a6d0:	mov	x3, x22
    a6d4:	bl	0 <_ZN4llvm21AArch64TargetStreamer20addConstantPoolEntryEPKNS_6MCExprEjNS_5SMLocE>
    a6d8:	mov	x22, x0
    a6dc:	mov	w0, #0x70                  	// #112
    a6e0:	bl	0 <_Znwm>
    a6e4:	mov	x8, x0
    a6e8:	strb	wzr, [x8, #32]!
    a6ec:	stp	x23, x22, [x0, #64]
    a6f0:	stp	x8, xzr, [x0, #16]
    a6f4:	ldr	x19, [sp, #56]
    a6f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    a6fc:	add	x9, x9, #0x0
    a700:	mov	x21, x0
    a704:	str	x9, [x0]
    a708:	str	wzr, [x0, #48]
    a70c:	str	x20, [x0, #104]
    a710:	str	xzr, [x0, #56]
    a714:	ldp	w8, w9, [x19, #8]
    a718:	cmp	w8, w9
    a71c:	b.cc	a288 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1410>  // b.lo, b.ul, b.last
    a720:	mov	x0, x19
    a724:	mov	x1, xzr
    a728:	bl	0 <LLVMInitializeAArch64AsmParser>
    a72c:	ldp	w8, w9, [x19, #8]
    a730:	ldr	x10, [x19]
    a734:	cmp	w8, w9
    a738:	str	x21, [x10, w8, uxtw #3]
    a73c:	b.cc	9394 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x51c>  // b.lo, b.ul, b.last
    a740:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a744:	mov	x0, x19
    a748:	mov	x1, xzr
    a74c:	bl	0 <LLVMInitializeAArch64AsmParser>
    a750:	ldp	w8, w9, [x19, #8]
    a754:	ldr	x10, [x19]
    a758:	cmp	w8, w9
    a75c:	str	x22, [x10, w8, uxtw #3]
    a760:	b.cc	95ac <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x734>  // b.lo, b.ul, b.last
    a764:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a768:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    a76c:	add	x8, x8, #0x0
    a770:	b	9a94 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xc1c>
    a774:	mov	x0, x23
    a778:	mov	x1, xzr
    a77c:	bl	0 <LLVMInitializeAArch64AsmParser>
    a780:	ldp	w8, w9, [x23, #8]
    a784:	ldr	x10, [x23]
    a788:	cmp	w8, w9
    a78c:	str	x20, [x10, w8, uxtw #3]
    a790:	b.cc	9900 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xa88>  // b.lo, b.ul, b.last
    a794:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a798:	mov	x0, x23
    a79c:	mov	x1, xzr
    a7a0:	bl	0 <LLVMInitializeAArch64AsmParser>
    a7a4:	ldp	w8, w9, [x23, #8]
    a7a8:	ldr	x10, [x23]
    a7ac:	cmp	w8, w9
    a7b0:	str	x20, [x10, w8, uxtw #3]
    a7b4:	b.cc	997c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xb04>  // b.lo, b.ul, b.last
    a7b8:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a7bc:	mov	x0, x19
    a7c0:	mov	x1, xzr
    a7c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    a7c8:	ldp	w8, w9, [x19, #8]
    a7cc:	ldr	x10, [x19]
    a7d0:	cmp	w8, w9
    a7d4:	str	x22, [x10, w8, uxtw #3]
    a7d8:	b.cc	9394 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x51c>  // b.lo, b.ul, b.last
    a7dc:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a7e0:	ldr	x19, [sp, #56]
    a7e4:	mov	x1, xzr
    a7e8:	mov	x0, x19
    a7ec:	bl	0 <LLVMInitializeAArch64AsmParser>
    a7f0:	ldp	w8, w9, [x19, #8]
    a7f4:	b	9ca4 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xe2c>
    a7f8:	mov	x0, x23
    a7fc:	mov	x1, xzr
    a800:	bl	0 <LLVMInitializeAArch64AsmParser>
    a804:	ldp	w8, w9, [x23, #8]
    a808:	ldr	x10, [x23]
    a80c:	cmp	w8, w9
    a810:	str	x22, [x10, w8, uxtw #3]
    a814:	b.cc	a40c <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1594>  // b.lo, b.ul, b.last
    a818:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a81c:	mov	x0, x19
    a820:	mov	x1, xzr
    a824:	bl	0 <LLVMInitializeAArch64AsmParser>
    a828:	ldp	w8, w9, [x19, #8]
    a82c:	ldr	x10, [x19]
    a830:	cmp	w8, w9
    a834:	str	x20, [x10, w8, uxtw #3]
    a838:	b.cc	9d64 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0xeec>  // b.lo, b.ul, b.last
    a83c:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a840:	ldr	x22, [sp, #56]
    a844:	mov	x1, xzr
    a848:	mov	x0, x22
    a84c:	bl	0 <LLVMInitializeAArch64AsmParser>
    a850:	ldp	w8, w22, [x22, #8]
    a854:	b	a5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1740>
    a858:	ldr	x19, [sp, #56]
    a85c:	mov	x1, xzr
    a860:	mov	x0, x19
    a864:	bl	0 <LLVMInitializeAArch64AsmParser>
    a868:	ldp	w25, w22, [x19, #8]
    a86c:	ldr	x26, [x19]
    a870:	cmp	w25, w22
    a874:	str	x21, [x26, w25, uxtw #3]
    a878:	b.cc	a628 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x17b0>  // b.lo, b.ul, b.last
    a87c:	b	a298 <_ZN12_GLOBAL__N_116AArch64AsmParser12parseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEbb+0x1420>
    a880:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a884:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a888:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a88c:	add	x0, x0, #0x0
    a890:	add	x1, x1, #0x0
    a894:	add	x3, x3, #0x0
    a898:	mov	w2, #0x9ff8                	// #40952
    a89c:	bl	0 <__assert_fail>
    a8a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a8a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a8a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a8ac:	add	x0, x0, #0x0
    a8b0:	add	x1, x1, #0x0
    a8b4:	add	x3, x3, #0x0
    a8b8:	mov	w2, #0x99                  	// #153
    a8bc:	bl	0 <__assert_fail>
    a8c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a8c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a8c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a8cc:	add	x0, x0, #0x0
    a8d0:	add	x1, x1, #0x0
    a8d4:	add	x3, x3, #0x0
    a8d8:	mov	w2, #0x6f                  	// #111
    a8dc:	bl	0 <__assert_fail>
    a8e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a8e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a8e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a8ec:	add	x0, x0, #0x0
    a8f0:	add	x1, x1, #0x0
    a8f4:	add	x3, x3, #0x0
    a8f8:	mov	w2, #0x657                 	// #1623
    a8fc:	bl	0 <__assert_fail>
    a900:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a904:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a908:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a90c:	add	x0, x0, #0x0
    a910:	add	x1, x1, #0x0
    a914:	add	x3, x3, #0x0
    a918:	mov	w2, #0x224                 	// #548
    a91c:	bl	0 <__assert_fail>
    a920:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a924:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a928:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a92c:	add	x0, x0, #0x0
    a930:	add	x1, x1, #0x0
    a934:	add	x3, x3, #0x0
    a938:	mov	w2, #0xa9d                 	// #2717
    a93c:	bl	0 <__assert_fail>
    a940:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a944:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a948:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a94c:	add	x0, x0, #0x0
    a950:	add	x1, x1, #0x0
    a954:	add	x3, x3, #0x0
    a958:	mov	w2, #0x69                  	// #105
    a95c:	bl	0 <__assert_fail>
    a960:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    a964:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    a968:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    a96c:	add	x0, x0, #0x0
    a970:	add	x1, x1, #0x0
    a974:	add	x3, x3, #0x0
    a978:	mov	w2, #0x95                  	// #149
    a97c:	bl	0 <__assert_fail>

000000000000a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>:
    a980:	sub	sp, sp, #0x80
    a984:	stp	x29, x30, [sp, #32]
    a988:	stp	x28, x27, [sp, #48]
    a98c:	stp	x26, x25, [sp, #64]
    a990:	stp	x24, x23, [sp, #80]
    a994:	stp	x22, x21, [sp, #96]
    a998:	stp	x20, x19, [sp, #112]
    a99c:	add	x29, sp, #0x20
    a9a0:	ldr	x21, [x0, #8]
    a9a4:	mov	x20, x0
    a9a8:	mov	w22, w3
    a9ac:	mov	x23, x2
    a9b0:	mov	x0, x21
    a9b4:	mov	x19, x1
    a9b8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    a9bc:	ldr	w8, [x0]
    a9c0:	cmp	w8, #0x2
    a9c4:	b.ne	aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xd8>  // b.any
    a9c8:	ldp	x25, x24, [x0, #8]
    a9cc:	cbz	x24, a9ec <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x6c>
    a9d0:	mov	w1, #0x2e                  	// #46
    a9d4:	mov	x0, x25
    a9d8:	mov	x2, x24
    a9dc:	bl	0 <memchr>
    a9e0:	cbz	x0, a9ec <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x6c>
    a9e4:	sub	x28, x0, x25
    a9e8:	b	a9f0 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0x70>
    a9ec:	mov	x28, #0xffffffffffffffff    	// #-1
    a9f0:	cmp	x24, x28
    a9f4:	csel	x27, x24, x28, cc  // cc = lo, ul, last
    a9f8:	mov	x0, x20
    a9fc:	mov	x1, x25
    aa00:	mov	x2, x27
    aa04:	mov	w3, w22
    aa08:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    aa0c:	cbz	w0, aa58 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xd8>
    aa10:	mov	w26, w0
    aa14:	cmn	x28, #0x1
    aa18:	b.eq	aa3c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xbc>  // b.none
    aa1c:	add	x1, x25, x27
    aa20:	sub	x2, x24, x27
    aa24:	add	x0, sp, #0x8
    aa28:	mov	w3, w22
    aa2c:	stp	x1, x2, [x23]
    aa30:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    aa34:	ldrb	w8, [sp, #16]
    aa38:	cbz	w8, aa7c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xfc>
    aa3c:	ldr	x8, [x21]
    aa40:	mov	x0, x21
    aa44:	ldr	x8, [x8, #136]
    aa48:	blr	x8
    aa4c:	mov	w0, wzr
    aa50:	str	w26, [x19]
    aa54:	b	aa5c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xdc>
    aa58:	mov	w0, #0x1                   	// #1
    aa5c:	ldp	x20, x19, [sp, #112]
    aa60:	ldp	x22, x21, [sp, #96]
    aa64:	ldp	x24, x23, [sp, #80]
    aa68:	ldp	x26, x25, [sp, #64]
    aa6c:	ldp	x28, x27, [sp, #48]
    aa70:	ldp	x29, x30, [sp, #32]
    aa74:	add	sp, sp, #0x80
    aa78:	ret
    aa7c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    aa80:	add	x8, x8, #0x0
    aa84:	mov	w9, #0x103                 	// #259
    aa88:	stp	x8, xzr, [sp, #8]
    aa8c:	strh	w9, [sp, #24]
    aa90:	ldr	x0, [x20, #8]
    aa94:	add	x1, sp, #0x8
    aa98:	mov	x2, xzr
    aa9c:	mov	x3, xzr
    aaa0:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    aaa4:	mov	w0, #0x2                   	// #2
    aaa8:	b	aa5c <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE+0xdc>

000000000000aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>:
    aaac:	sub	sp, sp, #0x60
    aab0:	stp	x29, x30, [sp, #48]
    aab4:	stp	x22, x21, [sp, #64]
    aab8:	stp	x20, x19, [sp, #80]
    aabc:	add	x29, sp, #0x30
    aac0:	sub	w8, w3, #0x2
    aac4:	mov	x19, x0
    aac8:	cmp	w8, #0x2
    aacc:	stp	x1, x2, [x29, #-16]
    aad0:	b.cs	ab5c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0xb0>  // b.hs, b.nlast
    aad4:	mov	x8, sp
    aad8:	sub	x0, x29, #0x10
    aadc:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    aae0:	ldp	x0, x8, [sp]
    aae4:	cbz	x8, abf4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x148>
    aae8:	cmp	x8, #0x2
    aaec:	b.ne	ab40 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x94>  // b.any
    aaf0:	ldrh	w8, [x0]
    aaf4:	mov	w9, #0x622e                	// #25134
    aaf8:	cmp	w8, w9
    aafc:	b.eq	abfc <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x150>  // b.none
    ab00:	ldrh	w8, [x0]
    ab04:	mov	w9, #0x682e                	// #26670
    ab08:	cmp	w8, w9
    ab0c:	b.eq	ad94 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2e8>  // b.none
    ab10:	ldrh	w8, [x0]
    ab14:	mov	w9, #0x732e                	// #29486
    ab18:	cmp	w8, w9
    ab1c:	b.eq	adb0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x304>  // b.none
    ab20:	ldrh	w8, [x0]
    ab24:	mov	w9, #0x642e                	// #25646
    ab28:	cmp	w8, w9
    ab2c:	b.eq	addc <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x330>  // b.none
    ab30:	ldrh	w8, [x0]
    ab34:	mov	w9, #0x712e                	// #28974
    ab38:	cmp	w8, w9
    ab3c:	b.eq	adfc <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x350>  // b.none
    ab40:	mov	w21, #0xffffffff            	// #-1
    ab44:	mov	w22, #0xffffffff            	// #-1
    ab48:	mov	x8, sp
    ab4c:	add	x8, x8, #0x10
    ab50:	cmp	x0, x8
    ab54:	b.ne	ae14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x368>  // b.any
    ab58:	b	ae18 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x36c>
    ab5c:	cmp	w3, #0x1
    ab60:	b.ne	aec4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x418>  // b.any
    ab64:	mov	x8, sp
    ab68:	sub	x0, x29, #0x10
    ab6c:	mov	x20, sp
    ab70:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    ab74:	ldp	x0, x10, [sp]
    ab78:	mov	w21, #0xffffffff            	// #-1
    ab7c:	cmp	x10, #0x4
    ab80:	b.hi	ad9c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2f0>  // b.pmore
    ab84:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    ab88:	add	x11, x11, #0x0
    ab8c:	adr	x12, aba8 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0xfc>
    ab90:	ldrb	w13, [x11, x10]
    ab94:	add	x12, x12, x13, lsl #2
    ab98:	mov	w9, wzr
    ab9c:	mov	w8, wzr
    aba0:	mov	w22, #0xffffffff            	// #-1
    aba4:	br	x12
    aba8:	ldrh	w8, [x0]
    abac:	mov	w9, #0x622e                	// #25134
    abb0:	cmp	w8, w9
    abb4:	b.eq	adb8 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x30c>  // b.none
    abb8:	ldrh	w8, [x0]
    abbc:	mov	w9, #0x682e                	// #26670
    abc0:	cmp	w8, w9
    abc4:	b.eq	adf0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x344>  // b.none
    abc8:	ldrh	w8, [x0]
    abcc:	mov	w9, #0x732e                	// #29486
    abd0:	cmp	w8, w9
    abd4:	b.eq	ae60 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3b4>  // b.none
    abd8:	ldrh	w8, [x0]
    abdc:	mov	w9, #0x642e                	// #25646
    abe0:	cmp	w8, w9
    abe4:	b.ne	ad7c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2d0>  // b.any
    abe8:	mov	w9, wzr
    abec:	mov	w8, #0x40                  	// #64
    abf0:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    abf4:	mov	w21, wzr
    abf8:	b	ae00 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x354>
    abfc:	mov	w21, #0x8                   	// #8
    ac00:	b	ae00 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x354>
    ac04:	ldrh	w9, [x0]
    ac08:	ldrb	w10, [x0, #2]
    ac0c:	mov	w8, #0x312e                	// #12590
    ac10:	mov	w11, #0x64                  	// #100
    ac14:	eor	w9, w9, w8
    ac18:	eor	w10, w10, w11
    ac1c:	orr	w9, w9, w10
    ac20:	tst	w9, #0xffff
    ac24:	b.eq	adc4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x318>  // b.none
    ac28:	ldrh	w9, [x0]
    ac2c:	ldrb	w10, [x0, #2]
    ac30:	mov	w11, #0x71                  	// #113
    ac34:	eor	w8, w9, w8
    ac38:	eor	w9, w10, w11
    ac3c:	orr	w8, w8, w9
    ac40:	tst	w8, #0xffff
    ac44:	b.eq	ade4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x338>  // b.none
    ac48:	ldrh	w9, [x0]
    ac4c:	ldrb	w10, [x0, #2]
    ac50:	mov	w8, #0x322e                	// #12846
    ac54:	mov	w11, #0x68                  	// #104
    ac58:	eor	w9, w9, w8
    ac5c:	eor	w10, w10, w11
    ac60:	orr	w9, w9, w10
    ac64:	tst	w9, #0xffff
    ac68:	b.eq	ae54 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3a8>  // b.none
    ac6c:	ldrh	w9, [x0]
    ac70:	ldrb	w10, [x0, #2]
    ac74:	mov	w11, #0x73                  	// #115
    ac78:	eor	w8, w9, w8
    ac7c:	eor	w9, w10, w11
    ac80:	orr	w8, w8, w9
    ac84:	tst	w8, #0xffff
    ac88:	b.eq	ae6c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3c0>  // b.none
    ac8c:	ldrh	w8, [x0]
    ac90:	ldrb	w9, [x0, #2]
    ac94:	mov	w10, #0x322e                	// #12846
    ac98:	mov	w11, #0x64                  	// #100
    ac9c:	eor	w8, w8, w10
    aca0:	eor	w9, w9, w11
    aca4:	orr	w8, w8, w9
    aca8:	tst	w8, #0xffff
    acac:	b.eq	ae78 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3cc>  // b.none
    acb0:	ldrh	w9, [x0]
    acb4:	ldrb	w10, [x0, #2]
    acb8:	mov	w8, #0x342e                	// #13358
    acbc:	mov	w11, #0x62                  	// #98
    acc0:	eor	w9, w9, w8
    acc4:	eor	w10, w10, w11
    acc8:	orr	w9, w9, w10
    accc:	tst	w9, #0xffff
    acd0:	b.eq	ae84 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3d8>  // b.none
    acd4:	ldrh	w9, [x0]
    acd8:	ldrb	w10, [x0, #2]
    acdc:	mov	w11, #0x68                  	// #104
    ace0:	eor	w8, w9, w8
    ace4:	eor	w9, w10, w11
    ace8:	orr	w8, w8, w9
    acec:	tst	w8, #0xffff
    acf0:	b.eq	ae90 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3e4>  // b.none
    acf4:	ldrh	w8, [x0]
    acf8:	ldrb	w9, [x0, #2]
    acfc:	mov	w10, #0x342e                	// #13358
    ad00:	mov	w11, #0x73                  	// #115
    ad04:	eor	w8, w8, w10
    ad08:	eor	w9, w9, w11
    ad0c:	orr	w8, w8, w9
    ad10:	tst	w8, #0xffff
    ad14:	b.eq	ae9c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f0>  // b.none
    ad18:	ldrh	w9, [x0]
    ad1c:	ldrb	w10, [x0, #2]
    ad20:	mov	w8, #0x382e                	// #14382
    ad24:	mov	w11, #0x62                  	// #98
    ad28:	eor	w9, w9, w8
    ad2c:	eor	w10, w10, w11
    ad30:	orr	w9, w9, w10
    ad34:	tst	w9, #0xffff
    ad38:	b.eq	aebc <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x410>  // b.none
    ad3c:	ldrh	w9, [x0]
    ad40:	ldrb	w10, [x0, #2]
    ad44:	mov	w11, #0x68                  	// #104
    ad48:	eor	w8, w9, w8
    ad4c:	eor	w9, w10, w11
    ad50:	orr	w8, w8, w9
    ad54:	tst	w8, #0xffff
    ad58:	b.ne	ad7c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x2d0>  // b.any
    ad5c:	mov	w8, #0x10                  	// #16
    ad60:	mov	w9, #0x8                   	// #8
    ad64:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ad68:	ldr	w8, [x0]
    ad6c:	mov	w9, #0x312e                	// #12590
    ad70:	movk	w9, #0x6236, lsl #16
    ad74:	cmp	w8, w9
    ad78:	b.eq	add0 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x324>  // b.none
    ad7c:	mov	w21, #0xffffffff            	// #-1
    ad80:	mov	w22, #0xffffffff            	// #-1
    ad84:	add	x8, x20, #0x10
    ad88:	cmp	x0, x8
    ad8c:	b.ne	ae14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x368>  // b.any
    ad90:	b	ae18 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x36c>
    ad94:	mov	w21, #0x10                  	// #16
    ad98:	b	ae00 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x354>
    ad9c:	mov	w22, #0xffffffff            	// #-1
    ada0:	add	x8, x20, #0x10
    ada4:	cmp	x0, x8
    ada8:	b.ne	ae14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x368>  // b.any
    adac:	b	ae18 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x36c>
    adb0:	mov	w21, #0x20                  	// #32
    adb4:	b	ae00 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x354>
    adb8:	mov	w9, wzr
    adbc:	mov	w8, #0x8                   	// #8
    adc0:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    adc4:	mov	w8, #0x40                  	// #64
    adc8:	mov	w9, #0x1                   	// #1
    adcc:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    add0:	mov	w8, #0x8                   	// #8
    add4:	mov	w9, #0x10                  	// #16
    add8:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    addc:	mov	w21, #0x40                  	// #64
    ade0:	b	ae00 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x354>
    ade4:	mov	w8, #0x80                  	// #128
    ade8:	mov	w9, #0x1                   	// #1
    adec:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    adf0:	mov	w9, wzr
    adf4:	mov	w8, #0x10                  	// #16
    adf8:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    adfc:	mov	w21, #0x80                  	// #128
    ae00:	mov	w22, wzr
    ae04:	mov	x8, sp
    ae08:	add	x8, x8, #0x10
    ae0c:	cmp	x0, x8
    ae10:	b.eq	ae18 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x36c>  // b.none
    ae14:	bl	0 <_ZdlPv>
    ae18:	and	w8, w21, w22
    ae1c:	cmn	w8, #0x1
    ae20:	b.eq	ae34 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x388>  // b.none
    ae24:	bfi	x22, x21, #32, #32
    ae28:	mov	w8, #0x1                   	// #1
    ae2c:	str	x22, [x19]
    ae30:	b	ae3c <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x390>
    ae34:	mov	w8, wzr
    ae38:	strb	wzr, [x19]
    ae3c:	strb	w8, [x19, #8]
    ae40:	ldp	x20, x19, [sp, #80]
    ae44:	ldp	x22, x21, [sp, #64]
    ae48:	ldp	x29, x30, [sp, #48]
    ae4c:	add	sp, sp, #0x60
    ae50:	ret
    ae54:	mov	w8, #0x10                  	// #16
    ae58:	mov	w9, #0x2                   	// #2
    ae5c:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ae60:	mov	w9, wzr
    ae64:	mov	w8, #0x20                  	// #32
    ae68:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ae6c:	mov	w8, #0x20                  	// #32
    ae70:	mov	w9, #0x2                   	// #2
    ae74:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ae78:	mov	w8, #0x40                  	// #64
    ae7c:	mov	w9, #0x2                   	// #2
    ae80:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ae84:	mov	w8, #0x8                   	// #8
    ae88:	mov	w9, #0x4                   	// #4
    ae8c:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ae90:	mov	w8, #0x10                  	// #16
    ae94:	mov	w9, #0x4                   	// #4
    ae98:	b	aea4 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x3f8>
    ae9c:	mov	w8, #0x20                  	// #32
    aea0:	mov	w9, #0x4                   	// #4
    aea4:	mov	w21, w8
    aea8:	mov	w22, w9
    aeac:	add	x8, x20, #0x10
    aeb0:	cmp	x0, x8
    aeb4:	b.ne	ae14 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x368>  // b.any
    aeb8:	b	ae18 <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x36c>
    aebc:	mov	w9, #0x8                   	// #8
    aec0:	b	adbc <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE+0x310>
    aec4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    aec8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    aecc:	add	x0, x0, #0x0
    aed0:	add	x1, x1, #0x0
    aed4:	mov	w2, #0x87d                 	// #2173
    aed8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000aedc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE>:
    aedc:	sub	sp, sp, #0xf0
    aee0:	stp	x29, x30, [sp, #208]
    aee4:	stp	x20, x19, [sp, #224]
    aee8:	add	x29, sp, #0xd0
    aeec:	ldr	x8, [x0, #8]
    aef0:	mov	x19, x1
    aef4:	tbnz	x8, #60, b030 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x154>
    aef8:	tbnz	x8, #61, b050 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x174>
    aefc:	tbnz	x8, #62, b070 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x194>
    af00:	tbnz	x8, #63, b090 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1b4>
    af04:	ldrb	w8, [x0, #16]
    af08:	tbnz	w8, #0, b0b0 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1d4>
    af0c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    af10:	sub	x8, x29, #0x20
    af14:	add	x9, x9, #0x0
    af18:	mov	w10, #0x7                   	// #7
    af1c:	ldr	q0, [x0]
    af20:	ldr	x13, [x0, #16]
    af24:	ldp	x11, x12, [x9, #-56]
    af28:	ldur	x16, [x9, #-40]
    af2c:	str	q0, [x8]
    af30:	ldp	x14, x15, [x29, #-32]
    af34:	and	x13, x13, x16
    af38:	and	x11, x14, x11
    af3c:	and	x12, x15, x12
    af40:	orr	x12, x11, x12
    af44:	orr	x12, x12, x13
    af48:	stur	x11, [x29, #-32]
    af4c:	cbnz	x12, b0e4 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x208>
    af50:	ldr	q0, [x0]
    af54:	ldr	x13, [x0, #16]
    af58:	ldp	x11, x12, [x9, #-24]
    af5c:	ldur	x16, [x9, #-8]
    af60:	str	q0, [x8]
    af64:	ldp	x14, x15, [x29, #-32]
    af68:	and	x13, x13, x16
    af6c:	and	x11, x14, x11
    af70:	and	x12, x15, x12
    af74:	orr	x12, x11, x12
    af78:	orr	x12, x12, x13
    af7c:	stur	x11, [x29, #-32]
    af80:	cbnz	x12, b0ec <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x210>
    af84:	ldr	q0, [x0]
    af88:	ldr	x13, [x0, #16]
    af8c:	ldp	x11, x12, [x9, #8]
    af90:	ldr	x16, [x9, #24]
    af94:	str	q0, [x8]
    af98:	ldp	x14, x15, [x29, #-32]
    af9c:	and	x13, x13, x16
    afa0:	and	x11, x14, x11
    afa4:	and	x12, x15, x12
    afa8:	orr	x12, x11, x12
    afac:	orr	x12, x12, x13
    afb0:	stur	x11, [x29, #-32]
    afb4:	cbnz	x12, b0f4 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x218>
    afb8:	ldr	q0, [x0]
    afbc:	ldr	x13, [x0, #16]
    afc0:	ldp	x11, x12, [x9, #40]
    afc4:	ldr	x16, [x9, #56]
    afc8:	str	q0, [x8]
    afcc:	ldp	x14, x15, [x29, #-32]
    afd0:	and	x13, x13, x16
    afd4:	and	x11, x14, x11
    afd8:	and	x12, x15, x12
    afdc:	orr	x12, x11, x12
    afe0:	orr	x12, x12, x13
    afe4:	stur	x11, [x29, #-32]
    afe8:	cbnz	x12, b0fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x220>
    afec:	sub	x10, x10, #0x1
    aff0:	cmp	x10, #0x1
    aff4:	add	x9, x9, #0x80
    aff8:	b.hi	af1c <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x40>  // b.pmore
    affc:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    b000:	sub	x10, x9, #0x40
    b004:	add	x11, x11, #0x0
    b008:	sub	x11, x11, x10
    b00c:	add	x11, x11, #0x340
    b010:	asr	x11, x11, #5
    b014:	cmp	x11, #0x1
    b018:	b.eq	b188 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2ac>  // b.none
    b01c:	cmp	x11, #0x3
    b020:	b.eq	b118 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x23c>  // b.none
    b024:	cmp	x11, #0x2
    b028:	b.eq	b150 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x274>  // b.none
    b02c:	b	b1bc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e0>
    b030:	ldr	x8, [x19, #8]
    b034:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b038:	orr	x8, x8, #0x7
    b03c:	cmp	x8, x9
    b040:	b.eq	b1fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    b044:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b048:	add	x1, x1, #0x0
    b04c:	b	b0cc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f0>
    b050:	ldr	x8, [x19, #8]
    b054:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b058:	orr	x8, x8, #0x7
    b05c:	cmp	x8, x9
    b060:	b.eq	b1fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    b064:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b068:	add	x1, x1, #0x0
    b06c:	b	b0cc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f0>
    b070:	ldr	x8, [x19, #8]
    b074:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b078:	orr	x8, x8, #0x7
    b07c:	cmp	x8, x9
    b080:	b.eq	b1fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    b084:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b088:	add	x1, x1, #0x0
    b08c:	b	b0cc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f0>
    b090:	ldr	x8, [x19, #8]
    b094:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b098:	orr	x8, x8, #0x7
    b09c:	cmp	x8, x9
    b0a0:	b.eq	b1fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    b0a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b0a8:	add	x1, x1, #0x0
    b0ac:	b	b0cc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x1f0>
    b0b0:	ldr	x8, [x19, #8]
    b0b4:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b0b8:	orr	x8, x8, #0x7
    b0bc:	cmp	x8, x9
    b0c0:	b.eq	b1fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.none
    b0c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b0c8:	add	x1, x1, #0x0
    b0cc:	mov	w2, #0x8                   	// #8
    b0d0:	mov	x0, x19
    b0d4:	ldp	x20, x19, [sp, #224]
    b0d8:	ldp	x29, x30, [sp, #208]
    b0dc:	add	sp, sp, #0xf0
    b0e0:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b0e4:	sub	x10, x9, #0x40
    b0e8:	b	b100 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    b0ec:	sub	x10, x9, #0x20
    b0f0:	b	b100 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    b0f4:	mov	x10, x9
    b0f8:	b	b100 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    b0fc:	add	x10, x9, #0x20
    b100:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    b104:	add	x8, x8, #0x0
    b108:	cmp	x10, x8
    b10c:	b.eq	b1bc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e0>  // b.none
    b110:	ldr	x20, [x10]
    b114:	b	b1c4 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x2e8>
    b118:	ldr	q0, [x0]
    b11c:	ldr	x13, [x0, #16]
    b120:	ldp	x11, x12, [x9, #-56]
    b124:	ldur	x16, [x9, #-40]
    b128:	str	q0, [x8]
    b12c:	ldp	x14, x15, [x29, #-32]
    b130:	and	x13, x13, x16
    b134:	and	x11, x14, x11
    b138:	and	x12, x15, x12
    b13c:	orr	x12, x11, x12
    b140:	orr	x12, x12, x13
    b144:	stur	x11, [x29, #-32]
    b148:	cbnz	x12, b100 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    b14c:	sub	x10, x9, #0x20
    b150:	ldr	q0, [x0]
    b154:	ldr	x12, [x0, #16]
    b158:	ldp	x9, x11, [x10, #8]
    b15c:	ldr	x15, [x10, #24]
    b160:	str	q0, [x8]
    b164:	ldp	x13, x14, [x29, #-32]
    b168:	and	x12, x12, x15
    b16c:	and	x9, x13, x9
    b170:	and	x11, x14, x11
    b174:	orr	x11, x9, x11
    b178:	orr	x11, x11, x12
    b17c:	stur	x9, [x29, #-32]
    b180:	cbnz	x11, b100 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    b184:	add	x10, x10, #0x20
    b188:	ldr	q0, [x0]
    b18c:	ldr	x12, [x0, #16]
    b190:	ldp	x9, x11, [x10, #8]
    b194:	ldr	x14, [x10, #24]
    b198:	str	q0, [x8]
    b19c:	ldp	x8, x13, [x29, #-32]
    b1a0:	and	x8, x8, x9
    b1a4:	and	x9, x13, x11
    b1a8:	and	x11, x12, x14
    b1ac:	orr	x9, x8, x9
    b1b0:	orr	x9, x9, x11
    b1b4:	stur	x8, [x29, #-32]
    b1b8:	cbnz	x9, b100 <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x224>
    b1bc:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    b1c0:	add	x20, x20, #0x0
    b1c4:	mov	x0, x20
    b1c8:	bl	0 <strlen>
    b1cc:	ldr	x8, [x19, #8]
    b1d0:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    b1d4:	sub	x8, x9, x8
    b1d8:	cmp	x8, x0
    b1dc:	b.cc	b1fc <_ZL24setRequiredFeatureStringN4llvm13FeatureBitsetERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE+0x320>  // b.lo, b.ul, b.last
    b1e0:	mov	x2, x0
    b1e4:	mov	x0, x19
    b1e8:	mov	x1, x20
    b1ec:	ldp	x20, x19, [sp, #224]
    b1f0:	ldp	x29, x30, [sp, #208]
    b1f4:	add	sp, sp, #0xf0
    b1f8:	b	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    b1fc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b200:	add	x0, x0, #0x0
    b204:	bl	0 <_ZSt20__throw_length_errorPKc>

000000000000b208 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE>:
    b208:	stp	x29, x30, [sp, #-96]!
    b20c:	stp	x28, x27, [sp, #16]
    b210:	stp	x26, x25, [sp, #32]
    b214:	stp	x24, x23, [sp, #48]
    b218:	stp	x22, x21, [sp, #64]
    b21c:	stp	x20, x19, [sp, #80]
    b220:	mov	x29, sp
    b224:	mov	x21, x0
    b228:	ldr	x0, [x0, #8]
    b22c:	and	w28, w1, #0xffff
    b230:	mov	x20, x3
    b234:	mov	x19, x2
    b238:	ldr	x8, [x0]
    b23c:	mov	w22, w1
    b240:	ubfx	w23, w28, #11, #3
    b244:	ldr	x8, [x8, #48]
    b248:	blr	x8
    b24c:	mov	x1, x0
    b250:	mov	x0, x23
    b254:	mov	w2, wzr
    b258:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    b25c:	ldr	x8, [x21, #8]
    b260:	mov	x24, x0
    b264:	mov	x0, x8
    b268:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b26c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b270:	ldr	x8, [x21, #8]
    b274:	mov	x25, x0
    b278:	ldr	x9, [x8]
    b27c:	mov	x0, x8
    b280:	ldr	x9, [x9, #48]
    b284:	blr	x9
    b288:	mov	x26, x0
    b28c:	mov	w0, #0x70                  	// #112
    b290:	bl	0 <_Znwm>
    b294:	mov	x8, x0
    b298:	adrp	x27, 0 <LLVMInitializeAArch64AsmParser>
    b29c:	add	x27, x27, #0x0
    b2a0:	strb	wzr, [x8, #32]!
    b2a4:	str	x27, [x0]
    b2a8:	str	wzr, [x0, #48]
    b2ac:	str	x26, [x0, #104]
    b2b0:	stp	x25, x24, [x0, #64]
    b2b4:	str	x20, [x0, #56]
    b2b8:	stp	x8, xzr, [x0, #16]
    b2bc:	ldp	w8, w9, [x19, #8]
    b2c0:	mov	x23, x0
    b2c4:	cmp	w8, w9
    b2c8:	b.cs	b4a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x29c>  // b.hs, b.nlast
    b2cc:	ldr	x10, [x19]
    b2d0:	cmp	w8, w9
    b2d4:	str	x23, [x10, w8, uxtw #3]
    b2d8:	b.cs	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>  // b.hs, b.nlast
    b2dc:	add	w8, w8, #0x1
    b2e0:	str	w8, [x19, #8]
    b2e4:	ldr	x0, [x21, #8]
    b2e8:	ubfx	w26, w28, #7, #4
    b2ec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b2f0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b2f4:	ldr	x8, [x21, #8]
    b2f8:	mov	x24, x0
    b2fc:	ldr	x9, [x8]
    b300:	mov	x0, x8
    b304:	ldr	x9, [x9, #48]
    b308:	blr	x9
    b30c:	mov	x25, x0
    b310:	mov	w0, #0x70                  	// #112
    b314:	bl	0 <_Znwm>
    b318:	mov	x8, x0
    b31c:	mov	w9, #0x8                   	// #8
    b320:	strb	wzr, [x8, #32]!
    b324:	str	x27, [x0]
    b328:	str	w9, [x0, #48]
    b32c:	str	x25, [x0, #104]
    b330:	str	w26, [x0, #72]
    b334:	stp	x20, x24, [x0, #56]
    b338:	stp	x8, xzr, [x0, #16]
    b33c:	ldp	w8, w9, [x19, #8]
    b340:	mov	x23, x0
    b344:	cmp	w8, w9
    b348:	b.cs	b4c8 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2c0>  // b.hs, b.nlast
    b34c:	ldr	x10, [x19]
    b350:	cmp	w8, w9
    b354:	str	x23, [x10, w8, uxtw #3]
    b358:	b.cs	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>  // b.hs, b.nlast
    b35c:	add	w8, w8, #0x1
    b360:	str	w8, [x19, #8]
    b364:	ldr	x0, [x21, #8]
    b368:	ubfx	w26, w28, #3, #4
    b36c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b370:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b374:	ldr	x8, [x21, #8]
    b378:	mov	x24, x0
    b37c:	ldr	x9, [x8]
    b380:	mov	x0, x8
    b384:	ldr	x9, [x9, #48]
    b388:	blr	x9
    b38c:	mov	x25, x0
    b390:	mov	w0, #0x70                  	// #112
    b394:	bl	0 <_Znwm>
    b398:	mov	x8, x0
    b39c:	mov	w9, #0x8                   	// #8
    b3a0:	strb	wzr, [x8, #32]!
    b3a4:	str	x27, [x0]
    b3a8:	str	w9, [x0, #48]
    b3ac:	str	x25, [x0, #104]
    b3b0:	str	w26, [x0, #72]
    b3b4:	stp	x20, x24, [x0, #56]
    b3b8:	stp	x8, xzr, [x0, #16]
    b3bc:	ldp	w8, w9, [x19, #8]
    b3c0:	mov	x23, x0
    b3c4:	cmp	w8, w9
    b3c8:	b.cs	b4ec <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x2e4>  // b.hs, b.nlast
    b3cc:	ldr	x10, [x19]
    b3d0:	cmp	w8, w9
    b3d4:	str	x23, [x10, w8, uxtw #3]
    b3d8:	b.cs	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>  // b.hs, b.nlast
    b3dc:	add	w8, w8, #0x1
    b3e0:	str	w8, [x19, #8]
    b3e4:	ldr	x0, [x21, #8]
    b3e8:	and	w22, w22, #0x7
    b3ec:	ldr	x8, [x0]
    b3f0:	ldr	x8, [x8, #48]
    b3f4:	blr	x8
    b3f8:	mov	x1, x0
    b3fc:	mov	x0, x22
    b400:	mov	w2, wzr
    b404:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    b408:	ldr	x8, [x21, #8]
    b40c:	mov	x22, x0
    b410:	mov	x0, x8
    b414:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b418:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b41c:	ldr	x8, [x21, #8]
    b420:	mov	x23, x0
    b424:	ldr	x9, [x8]
    b428:	mov	x0, x8
    b42c:	ldr	x9, [x9, #48]
    b430:	blr	x9
    b434:	mov	x24, x0
    b438:	mov	w0, #0x70                  	// #112
    b43c:	bl	0 <_Znwm>
    b440:	mov	x8, x0
    b444:	strb	wzr, [x8, #32]!
    b448:	str	x27, [x0]
    b44c:	str	wzr, [x0, #48]
    b450:	str	x24, [x0, #104]
    b454:	stp	x23, x22, [x0, #64]
    b458:	str	x20, [x0, #56]
    b45c:	stp	x8, xzr, [x0, #16]
    b460:	ldp	w8, w9, [x19, #8]
    b464:	mov	x21, x0
    b468:	cmp	w8, w9
    b46c:	b.cs	b510 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x308>  // b.hs, b.nlast
    b470:	ldr	x10, [x19]
    b474:	cmp	w8, w9
    b478:	str	x21, [x10, w8, uxtw #3]
    b47c:	b.cs	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>  // b.hs, b.nlast
    b480:	add	w8, w8, #0x1
    b484:	str	w8, [x19, #8]
    b488:	ldp	x20, x19, [sp, #80]
    b48c:	ldp	x22, x21, [sp, #64]
    b490:	ldp	x24, x23, [sp, #48]
    b494:	ldp	x26, x25, [sp, #32]
    b498:	ldp	x28, x27, [sp, #16]
    b49c:	ldp	x29, x30, [sp], #96
    b4a0:	ret
    b4a4:	mov	x0, x19
    b4a8:	mov	x1, xzr
    b4ac:	bl	0 <LLVMInitializeAArch64AsmParser>
    b4b0:	ldp	w8, w9, [x19, #8]
    b4b4:	ldr	x10, [x19]
    b4b8:	cmp	w8, w9
    b4bc:	str	x23, [x10, w8, uxtw #3]
    b4c0:	b.cc	b2dc <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0xd4>  // b.lo, b.ul, b.last
    b4c4:	b	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>
    b4c8:	mov	x0, x19
    b4cc:	mov	x1, xzr
    b4d0:	bl	0 <LLVMInitializeAArch64AsmParser>
    b4d4:	ldp	w8, w9, [x19, #8]
    b4d8:	ldr	x10, [x19]
    b4dc:	cmp	w8, w9
    b4e0:	str	x23, [x10, w8, uxtw #3]
    b4e4:	b.cc	b35c <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x154>  // b.lo, b.ul, b.last
    b4e8:	b	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>
    b4ec:	mov	x0, x19
    b4f0:	mov	x1, xzr
    b4f4:	bl	0 <LLVMInitializeAArch64AsmParser>
    b4f8:	ldp	w8, w9, [x19, #8]
    b4fc:	ldr	x10, [x19]
    b500:	cmp	w8, w9
    b504:	str	x23, [x10, w8, uxtw #3]
    b508:	b.cc	b3dc <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x1d4>  // b.lo, b.ul, b.last
    b50c:	b	b530 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x328>
    b510:	mov	x0, x19
    b514:	mov	x1, xzr
    b518:	bl	0 <LLVMInitializeAArch64AsmParser>
    b51c:	ldp	w8, w9, [x19, #8]
    b520:	ldr	x10, [x19]
    b524:	cmp	w8, w9
    b528:	str	x21, [x10, w8, uxtw #3]
    b52c:	b.cc	b480 <_ZN12_GLOBAL__N_116AArch64AsmParser14createSysAliasEtRN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEENS1_5SMLocE+0x278>  // b.lo, b.ul, b.last
    b530:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b534:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b538:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b53c:	add	x0, x0, #0x0
    b540:	add	x1, x1, #0x0
    b544:	add	x3, x3, #0x0
    b548:	mov	w2, #0x43                  	// #67
    b54c:	bl	0 <__assert_fail>

000000000000b550 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    b550:	sub	sp, sp, #0xa0
    b554:	stp	x29, x30, [sp, #64]
    b558:	stp	x28, x27, [sp, #80]
    b55c:	stp	x26, x25, [sp, #96]
    b560:	stp	x24, x23, [sp, #112]
    b564:	stp	x22, x21, [sp, #128]
    b568:	stp	x20, x19, [sp, #144]
    b56c:	add	x29, sp, #0x40
    b570:	mov	x20, x0
    b574:	ldr	x0, [x0, #8]
    b578:	mov	x19, x1
    b57c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b580:	ldr	w8, [x0]
    b584:	cmp	w8, #0x2
    b588:	b.ne	b5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>  // b.any
    b58c:	ldr	x0, [x20, #8]
    b590:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b594:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b598:	mov	x21, x0
    b59c:	add	x1, sp, #0xc
    b5a0:	add	x2, sp, #0x20
    b5a4:	mov	w3, #0x1                   	// #1
    b5a8:	mov	x0, x20
    b5ac:	stp	xzr, xzr, [sp, #32]
    b5b0:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    b5b4:	cbz	w0, b660 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x110>
    b5b8:	ldr	x0, [x20, #8]
    b5bc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b5c0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b5c4:	ldr	x23, [x20, #8]
    b5c8:	mov	x21, x0
    b5cc:	mov	x0, x23
    b5d0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b5d4:	ldr	w8, [x0]
    b5d8:	cmp	w8, #0x2
    b5dc:	b.ne	b63c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xec>  // b.any
    b5e0:	ldur	q0, [x0, #8]
    b5e4:	add	x8, sp, #0x20
    b5e8:	add	x0, sp, #0x10
    b5ec:	add	x24, sp, #0x20
    b5f0:	str	q0, [sp, #16]
    b5f4:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    b5f8:	ldp	x1, x2, [sp, #32]
    b5fc:	mov	x0, x20
    b600:	mov	w3, wzr
    b604:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    b608:	mov	w22, w0
    b60c:	cbz	w0, b7a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x258>
    b610:	ldr	x8, [x23]
    b614:	mov	x0, x23
    b618:	ldr	x8, [x8, #136]
    b61c:	blr	x8
    b620:	mov	w23, wzr
    b624:	ldr	x0, [sp, #32]
    b628:	add	x8, x24, #0x10
    b62c:	cmp	x0, x8
    b630:	b.eq	b638 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe8>  // b.none
    b634:	bl	0 <_ZdlPv>
    b638:	cbz	w23, b7c0 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x270>
    b63c:	mov	w0, #0x1                   	// #1
    b640:	ldp	x20, x19, [sp, #144]
    b644:	ldp	x22, x21, [sp, #128]
    b648:	ldp	x24, x23, [sp, #112]
    b64c:	ldp	x26, x25, [sp, #96]
    b650:	ldp	x28, x27, [sp, #80]
    b654:	ldp	x29, x30, [sp, #64]
    b658:	add	sp, sp, #0xa0
    b65c:	ret
    b660:	ldp	x23, x22, [sp, #32]
    b664:	add	x0, sp, #0x10
    b668:	mov	w3, #0x1                   	// #1
    b66c:	mov	w27, #0x1                   	// #1
    b670:	mov	x1, x23
    b674:	mov	x2, x22
    b678:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    b67c:	ldrb	w8, [sp, #24]
    b680:	cbz	w8, b5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>
    b684:	ldr	x0, [x20, #8]
    b688:	ldr	w28, [sp, #20]
    b68c:	ldr	w26, [sp, #12]
    b690:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b694:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b698:	ldr	x8, [x20, #8]
    b69c:	mov	x24, x0
    b6a0:	ldr	x9, [x8]
    b6a4:	mov	x0, x8
    b6a8:	ldr	x9, [x9, #48]
    b6ac:	blr	x9
    b6b0:	mov	x25, x0
    b6b4:	mov	w0, #0x70                  	// #112
    b6b8:	bl	0 <_Znwm>
    b6bc:	mov	x8, x0
    b6c0:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
    b6c4:	mov	w9, #0x3                   	// #3
    b6c8:	strb	wzr, [x8, #32]!
    b6cc:	add	x11, x11, #0x0
    b6d0:	str	w9, [x0, #48]
    b6d4:	str	x11, [x0]
    b6d8:	str	x25, [x0, #104]
    b6dc:	stp	w26, w27, [x0, #72]
    b6e0:	stur	xzr, [x0, #89]
    b6e4:	stur	xzr, [x0, #84]
    b6e8:	stp	x21, x24, [x0, #56]
    b6ec:	str	w28, [x0, #80]
    b6f0:	stp	x8, xzr, [x0, #16]
    b6f4:	ldp	w8, w9, [x19, #8]
    b6f8:	cmp	w8, w9
    b6fc:	b.cs	b87c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x32c>  // b.hs, b.nlast
    b700:	ldr	x10, [x19]
    b704:	cmp	w8, w9
    b708:	str	x0, [x10, w8, uxtw #3]
    b70c:	b.cs	b8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x388>  // b.hs, b.nlast
    b710:	add	w8, w8, #0x1
    b714:	str	w8, [x19, #8]
    b718:	cbz	x22, b78c <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x23c>
    b71c:	ldr	x0, [x20, #8]
    b720:	mov	x25, x11
    b724:	ldr	x8, [x0]
    b728:	ldr	x8, [x8, #48]
    b72c:	blr	x8
    b730:	mov	x24, x0
    b734:	mov	w0, #0x70                  	// #112
    b738:	bl	0 <_Znwm>
    b73c:	mov	x8, x0
    b740:	strb	wzr, [x8, #32]!
    b744:	mov	w9, #0x6                   	// #6
    b748:	str	x25, [x0]
    b74c:	str	w9, [x0, #48]
    b750:	str	x24, [x0, #104]
    b754:	stp	x21, x23, [x0, #64]
    b758:	str	w22, [x0, #80]
    b75c:	strb	wzr, [x0, #84]
    b760:	str	x21, [x0, #56]
    b764:	stp	x8, xzr, [x0, #16]
    b768:	ldp	w8, w9, [x19, #8]
    b76c:	cmp	w8, w9
    b770:	b.cs	b8b0 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x360>  // b.hs, b.nlast
    b774:	ldr	x10, [x19]
    b778:	cmp	w8, w9
    b77c:	str	x0, [x10, w8, uxtw #3]
    b780:	b.cs	b8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x388>  // b.hs, b.nlast
    b784:	add	w8, w8, #0x1
    b788:	str	w8, [x19, #8]
    b78c:	mov	x0, x20
    b790:	mov	x1, x19
    b794:	bl	c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    b798:	cmp	w0, #0x2
    b79c:	b.eq	b5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x68>  // b.none
    b7a0:	mov	w0, wzr
    b7a4:	b	b640 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf0>
    b7a8:	mov	w23, #0x1                   	// #1
    b7ac:	ldr	x0, [sp, #32]
    b7b0:	add	x8, x24, #0x10
    b7b4:	cmp	x0, x8
    b7b8:	b.ne	b634 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe4>  // b.any
    b7bc:	b	b638 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xe8>
    b7c0:	ldr	x0, [x20, #8]
    b7c4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    b7c8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    b7cc:	ldr	x8, [x20, #8]
    b7d0:	mov	x23, x0
    b7d4:	ldr	x9, [x8]
    b7d8:	mov	x0, x8
    b7dc:	ldr	x9, [x9, #48]
    b7e0:	blr	x9
    b7e4:	mov	x24, x0
    b7e8:	mov	w0, #0x70                  	// #112
    b7ec:	bl	0 <_Znwm>
    b7f0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b7f4:	mov	x8, x0
    b7f8:	add	x9, x9, #0x0
    b7fc:	strb	wzr, [x8, #32]!
    b800:	str	x9, [x0]
    b804:	mov	w9, #0x3                   	// #3
    b808:	str	w9, [x0, #48]
    b80c:	str	x24, [x0, #104]
    b810:	str	w22, [x0, #72]
    b814:	stur	xzr, [x0, #89]
    b818:	stur	xzr, [x0, #84]
    b81c:	stur	xzr, [x0, #76]
    b820:	stp	x21, x23, [x0, #56]
    b824:	stp	x8, xzr, [x0, #16]
    b828:	ldp	w8, w9, [x19, #8]
    b82c:	mov	x20, x0
    b830:	cmp	w8, w9
    b834:	b.cs	b858 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x308>  // b.hs, b.nlast
    b838:	ldr	x10, [x19]
    b83c:	cmp	w8, w9
    b840:	str	x20, [x10, w8, uxtw #3]
    b844:	b.cs	b8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x388>  // b.hs, b.nlast
    b848:	mov	w0, wzr
    b84c:	add	w8, w8, #0x1
    b850:	str	w8, [x19, #8]
    b854:	b	b640 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf0>
    b858:	mov	x0, x19
    b85c:	mov	x1, xzr
    b860:	bl	0 <LLVMInitializeAArch64AsmParser>
    b864:	ldp	w8, w9, [x19, #8]
    b868:	ldr	x10, [x19]
    b86c:	cmp	w8, w9
    b870:	str	x20, [x10, w8, uxtw #3]
    b874:	b.cc	b848 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2f8>  // b.lo, b.ul, b.last
    b878:	b	b8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x388>
    b87c:	mov	x24, x0
    b880:	mov	x0, x19
    b884:	mov	x1, xzr
    b888:	mov	x25, x11
    b88c:	bl	0 <LLVMInitializeAArch64AsmParser>
    b890:	ldp	w8, w9, [x19, #8]
    b894:	mov	x11, x25
    b898:	mov	x0, x24
    b89c:	ldr	x10, [x19]
    b8a0:	cmp	w8, w9
    b8a4:	str	x0, [x10, w8, uxtw #3]
    b8a8:	b.cc	b710 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c0>  // b.lo, b.ul, b.last
    b8ac:	b	b8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x388>
    b8b0:	mov	x21, x0
    b8b4:	mov	x0, x19
    b8b8:	mov	x1, xzr
    b8bc:	bl	0 <LLVMInitializeAArch64AsmParser>
    b8c0:	ldp	w8, w9, [x19, #8]
    b8c4:	mov	x0, x21
    b8c8:	ldr	x10, [x19]
    b8cc:	cmp	w8, w9
    b8d0:	str	x0, [x10, w8, uxtw #3]
    b8d4:	b.cc	b784 <_ZN12_GLOBAL__N_116AArch64AsmParser13parseRegisterERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x234>  // b.lo, b.ul, b.last
    b8d8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b8dc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b8e0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b8e4:	add	x0, x0, #0x0
    b8e8:	add	x1, x1, #0x0
    b8ec:	add	x3, x3, #0x0
    b8f0:	mov	w2, #0x43                  	// #67
    b8f4:	bl	0 <__assert_fail>

000000000000b8f8 <_ZN12_GLOBAL__N_114AArch64OperandD0Ev>:
    b8f8:	stp	x29, x30, [sp, #-32]!
    b8fc:	str	x19, [sp, #16]
    b900:	mov	x29, sp
    b904:	adrp	x8, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
    b908:	mov	x19, x0
    b90c:	ldr	x0, [x0, #16]
    b910:	ldr	x8, [x8]
    b914:	add	x9, x19, #0x20
    b918:	cmp	x0, x9
    b91c:	add	x8, x8, #0x10
    b920:	str	x8, [x19]
    b924:	b.eq	b92c <_ZN12_GLOBAL__N_114AArch64OperandD0Ev+0x34>  // b.none
    b928:	bl	0 <_ZdlPv>
    b92c:	mov	x0, x19
    b930:	ldr	x19, [sp, #16]
    b934:	ldp	x29, x30, [sp], #32
    b938:	b	0 <_ZdlPv>

000000000000b93c <_ZNK12_GLOBAL__N_114AArch64Operand7isTokenEv>:
    b93c:	ldr	w8, [x0, #48]
    b940:	cmp	w8, #0x6
    b944:	cset	w0, eq  // eq = none
    b948:	ret

000000000000b94c <_ZNK12_GLOBAL__N_114AArch64Operand5isImmEv>:
    b94c:	ldr	w8, [x0, #48]
    b950:	cmp	w8, #0x0
    b954:	cset	w0, eq  // eq = none
    b958:	ret

000000000000b95c <_ZNK12_GLOBAL__N_114AArch64Operand5isRegEv>:
    b95c:	ldr	w8, [x0, #48]
    b960:	cmp	w8, #0x3
    b964:	cset	w0, eq  // eq = none
    b968:	ret

000000000000b96c <_ZNK12_GLOBAL__N_114AArch64Operand6getRegEv>:
    b96c:	stp	x29, x30, [sp, #-16]!
    b970:	mov	x29, sp
    b974:	ldr	w8, [x0, #48]
    b978:	cmp	w8, #0x3
    b97c:	b.ne	b98c <_ZNK12_GLOBAL__N_114AArch64Operand6getRegEv+0x20>  // b.any
    b980:	ldr	w0, [x0, #72]
    b984:	ldp	x29, x30, [sp], #16
    b988:	ret
    b98c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    b990:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    b994:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    b998:	add	x0, x0, #0x0
    b99c:	add	x1, x1, #0x0
    b9a0:	add	x3, x3, #0x0
    b9a4:	mov	w2, #0x21c                 	// #540
    b9a8:	bl	0 <__assert_fail>

000000000000b9ac <_ZNK12_GLOBAL__N_114AArch64Operand5isMemEv>:
    b9ac:	mov	w0, wzr
    b9b0:	ret

000000000000b9b4 <_ZNK12_GLOBAL__N_114AArch64Operand11getStartLocEv>:
    b9b4:	ldr	x0, [x0, #56]
    b9b8:	ret

000000000000b9bc <_ZNK12_GLOBAL__N_114AArch64Operand9getEndLocEv>:
    b9bc:	ldr	x0, [x0, #64]
    b9c0:	ret

000000000000b9c4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE>:
    b9c4:	sub	sp, sp, #0x70
    b9c8:	stp	x29, x30, [sp, #48]
    b9cc:	stp	x24, x23, [sp, #64]
    b9d0:	stp	x22, x21, [sp, #80]
    b9d4:	stp	x20, x19, [sp, #96]
    b9d8:	add	x29, sp, #0x30
    b9dc:	ldr	w8, [x0, #48]
    b9e0:	cmp	w8, #0xe
    b9e4:	b.hi	c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>  // b.pmore
    b9e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    b9ec:	add	x9, x9, #0x0
    b9f0:	adr	x10, ba08 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x44>
    b9f4:	ldrb	w11, [x9, x8]
    b9f8:	add	x10, x10, x11, lsl #2
    b9fc:	mov	x20, x0
    ba00:	mov	x19, x1
    ba04:	br	x10
    ba08:	ldp	x8, x0, [x19, #16]
    ba0c:	ldr	w21, [x20, #80]
    ba10:	ldr	x1, [x20, #72]
    ba14:	sub	x8, x8, x0
    ba18:	cmp	x8, x21
    ba1c:	b.cs	ba58 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x94>  // b.hs, b.nlast
    ba20:	mov	x0, x19
    ba24:	mov	x2, x21
    ba28:	b	c534 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb70>
    ba2c:	ldp	x9, x8, [x19, #16]
    ba30:	sub	x9, x9, x8
    ba34:	cmp	x9, #0x6
    ba38:	b.hi	bcc4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x300>  // b.pmore
    ba3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ba40:	add	x1, x1, #0x0
    ba44:	mov	w2, #0x7                   	// #7
    ba48:	mov	x0, x19
    ba4c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ba50:	mov	x21, x0
    ba54:	b	bcec <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x328>
    ba58:	cbz	w21, c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>
    ba5c:	mov	x2, x21
    ba60:	bl	0 <memcpy>
    ba64:	ldr	x8, [x19, #24]
    ba68:	add	x8, x8, x21
    ba6c:	b	c5a4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe0>
    ba70:	ldp	x9, x8, [x19, #16]
    ba74:	sub	x9, x9, x8
    ba78:	cmp	x9, #0xb
    ba7c:	b.hi	bd48 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x384>  // b.pmore
    ba80:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ba84:	add	x1, x1, #0x0
    ba88:	mov	w2, #0xc                   	// #12
    ba8c:	mov	x0, x19
    ba90:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    ba94:	b	bd70 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3ac>
    ba98:	ldp	x9, x8, [x19, #16]
    ba9c:	ldr	w21, [x20, #80]
    baa0:	sub	x9, x9, x8
    baa4:	cbz	w21, c3c0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x9fc>
    baa8:	ldr	x20, [x20, #72]
    baac:	cmp	x9, #0x8
    bab0:	b.hi	c408 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa44>  // b.pmore
    bab4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bab8:	add	x1, x1, #0x0
    babc:	mov	w2, #0x9                   	// #9
    bac0:	b	baec <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x128>
    bac4:	ldp	x9, x8, [x19, #16]
    bac8:	ldr	w21, [x20, #80]
    bacc:	sub	x9, x9, x8
    bad0:	cbz	w21, c3e4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa20>
    bad4:	ldr	x20, [x20, #72]
    bad8:	cmp	x9, #0x6
    badc:	b.hi	c42c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa68>  // b.pmore
    bae0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bae4:	add	x1, x1, #0x0
    bae8:	mov	w2, #0x7                   	// #7
    baec:	mov	x0, x19
    baf0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    baf4:	mov	x19, x0
    baf8:	ldr	x0, [x0, #24]
    bafc:	ldr	x8, [x19, #16]
    bb00:	sub	x8, x8, x0
    bb04:	cmp	x8, x21
    bb08:	b.cc	c460 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa9c>  // b.lo, b.ul, b.last
    bb0c:	mov	x1, x20
    bb10:	mov	x2, x21
    bb14:	bl	0 <memcpy>
    bb18:	ldp	x9, x8, [x19, #16]
    bb1c:	add	x8, x8, x21
    bb20:	str	x8, [x19, #24]
    bb24:	cmp	x9, x8
    bb28:	b.ne	c594 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbd0>  // b.any
    bb2c:	b	c484 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xac0>
    bb30:	ldp	x9, x8, [x19, #16]
    bb34:	sub	x9, x9, x8
    bb38:	cmp	x9, #0x9
    bb3c:	b.hi	bdf4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x430>  // b.pmore
    bb40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bb44:	add	x1, x1, #0x0
    bb48:	mov	w2, #0xa                   	// #10
    bb4c:	mov	x0, x19
    bb50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bb54:	mov	x19, x0
    bb58:	b	be18 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x454>
    bb5c:	ldp	x9, x8, [x19, #16]
    bb60:	sub	x9, x9, x8
    bb64:	cmp	x9, #0x9
    bb68:	b.hi	be54 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x490>  // b.pmore
    bb6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bb70:	add	x1, x1, #0x0
    bb74:	mov	w2, #0xa                   	// #10
    bb78:	mov	x0, x19
    bb7c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bb80:	mov	x19, x0
    bb84:	b	be78 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4b4>
    bb88:	ldp	x9, x8, [x19, #16]
    bb8c:	sub	x9, x9, x8
    bb90:	cmp	x9, #0x8
    bb94:	b.hi	bf10 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x54c>  // b.pmore
    bb98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bb9c:	add	x1, x1, #0x0
    bba0:	mov	w2, #0x9                   	// #9
    bba4:	mov	x0, x19
    bba8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bbac:	mov	x19, x0
    bbb0:	b	bf34 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x570>
    bbb4:	ldr	x0, [x20, #72]
    bbb8:	mov	x1, x19
    bbbc:	ldp	x20, x19, [sp, #96]
    bbc0:	ldp	x22, x21, [sp, #80]
    bbc4:	ldp	x24, x23, [sp, #64]
    bbc8:	ldp	x29, x30, [sp, #48]
    bbcc:	mov	x2, xzr
    bbd0:	mov	w3, wzr
    bbd4:	add	sp, sp, #0x70
    bbd8:	b	0 <_ZNK4llvm6MCExpr5printERNS_11raw_ostreamEPKNS_9MCAsmInfoEb>
    bbdc:	ldp	x9, x8, [x19, #16]
    bbe0:	ldr	w21, [x20, #80]
    bbe4:	sub	x9, x9, x8
    bbe8:	cmp	x9, #0xb
    bbec:	b.hi	bf70 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5ac>  // b.pmore
    bbf0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bbf4:	add	x1, x1, #0x0
    bbf8:	mov	w2, #0xc                   	// #12
    bbfc:	mov	x0, x19
    bc00:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bc04:	b	bf98 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x5d4>
    bc08:	ldp	x9, x8, [x19, #16]
    bc0c:	sub	x9, x9, x8
    bc10:	cmp	x9, #0xc
    bc14:	b.hi	c04c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x688>  // b.pmore
    bc18:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bc1c:	add	x1, x1, #0x0
    bc20:	mov	w2, #0xd                   	// #13
    bc24:	mov	x0, x19
    bc28:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bc2c:	mov	x19, x0
    bc30:	b	c070 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x6ac>
    bc34:	ldp	x9, x8, [x19, #16]
    bc38:	cmp	x9, x8
    bc3c:	b.ne	c084 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x6c0>  // b.any
    bc40:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bc44:	add	x1, x1, #0x0
    bc48:	mov	w2, #0x1                   	// #1
    bc4c:	mov	x0, x19
    bc50:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bc54:	mov	x19, x0
    bc58:	b	c098 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x6d4>
    bc5c:	ldp	x9, x8, [x19, #16]
    bc60:	cmp	x9, x8
    bc64:	b.ne	c0d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x710>  // b.any
    bc68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bc6c:	add	x1, x1, #0x0
    bc70:	mov	w2, #0x1                   	// #1
    bc74:	mov	x0, x19
    bc78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bc7c:	mov	x19, x0
    bc80:	b	c0e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x724>
    bc84:	ldp	x9, x8, [x19, #16]
    bc88:	cmp	x9, x8
    bc8c:	b.ne	c114 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x750>  // b.any
    bc90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bc94:	add	x1, x1, #0x0
    bc98:	mov	w2, #0x1                   	// #1
    bc9c:	mov	x0, x19
    bca0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bca4:	mov	x21, x0
    bca8:	ldr	w8, [x20, #48]
    bcac:	cmp	w8, #0x3
    bcb0:	b.eq	c138 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x774>  // b.none
    bcb4:	cmp	w8, #0xa
    bcb8:	b.ne	c650 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc8c>  // b.any
    bcbc:	add	x8, x20, #0x48
    bcc0:	b	c13c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x778>
    bcc4:	mov	w9, #0x6d69                	// #28009
    bcc8:	mov	w10, #0x663c                	// #26172
    bccc:	movk	w9, #0x206d, lsl #16
    bcd0:	movk	w10, #0x6970, lsl #16
    bcd4:	stur	w9, [x8, #3]
    bcd8:	str	w10, [x8]
    bcdc:	ldr	x8, [x19, #24]
    bce0:	mov	x21, x19
    bce4:	add	x8, x8, #0x7
    bce8:	str	x8, [x19, #24]
    bcec:	ldr	w8, [x20, #48]
    bcf0:	cmp	w8, #0xb
    bcf4:	b.ne	c668 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xca4>  // b.any
    bcf8:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    bcfc:	ldr	x8, [x20, #72]
    bd00:	mov	w9, #0x40                  	// #64
    bd04:	mov	x10, sp
    bd08:	mov	x24, x0
    bd0c:	stur	w9, [x29, #-8]
    bd10:	stur	x8, [x29, #-16]
    bd14:	add	x22, x10, #0x8
    bd18:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    bd1c:	mov	x23, x0
    bd20:	sub	x2, x29, #0x10
    bd24:	cmp	x0, x24
    bd28:	b.eq	c2d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x910>  // b.none
    bd2c:	mov	x0, x22
    bd30:	mov	x1, x24
    bd34:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
    bd38:	ldur	w8, [x29, #-8]
    bd3c:	cmp	w8, #0x41
    bd40:	b.cs	c2ec <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x928>  // b.hs, b.nlast
    bd44:	b	c2f8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x934>
    bd48:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bd4c:	add	x9, x9, #0x0
    bd50:	ldr	x9, [x9]
    bd54:	mov	w10, #0x7369                	// #29545
    bd58:	movk	w10, #0x2074, lsl #16
    bd5c:	str	w10, [x8, #8]
    bd60:	str	x9, [x8]
    bd64:	ldr	x8, [x19, #24]
    bd68:	add	x8, x8, #0xc
    bd6c:	str	x8, [x19, #24]
    bd70:	ldr	w8, [x20, #48]
    bd74:	cmp	w8, #0x4
    bd78:	b.ne	c688 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xcc4>  // b.any
    bd7c:	ldr	w21, [x20, #76]
    bd80:	cbz	w21, bde4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x420>
    bd84:	ldr	w22, [x20, #72]
    bd88:	adrp	x20, 0 <LLVMInitializeAArch64AsmParser>
    bd8c:	add	x20, x20, #0x0
    bd90:	mov	w23, #0x20                  	// #32
    bd94:	b	bdb4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3f0>
    bd98:	strb	w23, [x8]
    bd9c:	ldr	x8, [x0, #24]
    bda0:	add	x8, x8, #0x1
    bda4:	str	x8, [x0, #24]
    bda8:	subs	x21, x21, #0x1
    bdac:	add	w22, w22, #0x1
    bdb0:	b.eq	bde4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x420>  // b.none
    bdb4:	mov	w1, w22
    bdb8:	mov	x0, x19
    bdbc:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    bdc0:	ldp	x9, x8, [x0, #16]
    bdc4:	cmp	x9, x8
    bdc8:	b.ne	bd98 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3d4>  // b.any
    bdcc:	mov	w2, #0x1                   	// #1
    bdd0:	mov	x1, x20
    bdd4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bdd8:	subs	x21, x21, #0x1
    bddc:	add	w22, w22, #0x1
    bde0:	b.ne	bdb4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x3f0>  // b.any
    bde4:	ldp	x9, x8, [x19, #16]
    bde8:	cmp	x9, x8
    bdec:	b.eq	c484 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xac0>  // b.none
    bdf0:	b	c594 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbd0>
    bdf4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bdf8:	add	x9, x9, #0x0
    bdfc:	ldr	x9, [x9]
    be00:	mov	w10, #0x2065                	// #8293
    be04:	strh	w10, [x8, #8]
    be08:	str	x9, [x8]
    be0c:	ldr	x8, [x19, #24]
    be10:	add	x8, x8, #0xa
    be14:	str	x8, [x19, #24]
    be18:	ldr	w8, [x20, #48]
    be1c:	cmp	w8, #0x2
    be20:	b.ne	c6a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xce4>  // b.any
    be24:	ldrsw	x1, [x20, #72]
    be28:	mov	x0, x19
    be2c:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
    be30:	ldp	x9, x8, [x0, #16]
    be34:	cmp	x9, x8
    be38:	b.eq	c528 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb64>  // b.none
    be3c:	mov	w9, #0x3e                  	// #62
    be40:	strb	w9, [x8]
    be44:	ldr	x8, [x0, #24]
    be48:	add	x8, x8, #0x1
    be4c:	str	x8, [x0, #24]
    be50:	b	c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>
    be54:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    be58:	add	x9, x9, #0x0
    be5c:	ldr	x9, [x9]
    be60:	mov	w10, #0x2072                	// #8306
    be64:	strh	w10, [x8, #8]
    be68:	str	x9, [x8]
    be6c:	ldr	x8, [x19, #24]
    be70:	add	x8, x8, #0xa
    be74:	str	x8, [x19, #24]
    be78:	ldr	x8, [x20]
    be7c:	mov	x0, x20
    be80:	ldr	x8, [x8, #56]
    be84:	blr	x8
    be88:	mov	w1, w0
    be8c:	mov	x0, x19
    be90:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    be94:	ldp	x9, x8, [x0, #16]
    be98:	cmp	x9, x8
    be9c:	b.ne	becc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x508>  // b.any
    bea0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bea4:	add	x1, x1, #0x0
    bea8:	mov	w2, #0x1                   	// #1
    beac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    beb0:	ldr	w8, [x20, #48]
    beb4:	cmp	w8, #0x3
    beb8:	b.eq	beec <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x528>  // b.none
    bebc:	cmp	w8, #0xa
    bec0:	b.ne	c620 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc5c>  // b.any
    bec4:	add	x9, x20, #0x4c
    bec8:	b	bef0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x52c>
    becc:	mov	w9, #0x3e                  	// #62
    bed0:	strb	w9, [x8]
    bed4:	ldr	x8, [x0, #24]
    bed8:	add	x8, x8, #0x1
    bedc:	str	x8, [x0, #24]
    bee0:	ldr	w8, [x20, #48]
    bee4:	cmp	w8, #0x3
    bee8:	b.ne	bebc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x4f8>  // b.any
    beec:	add	x9, x20, #0x5c
    bef0:	ldr	w9, [x9]
    bef4:	cbnz	w9, c1d4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x810>
    bef8:	cmp	w8, #0x3
    befc:	b.eq	c1c8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x804>  // b.none
    bf00:	cmp	w8, #0xa
    bf04:	b.ne	c638 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc74>  // b.any
    bf08:	add	x8, x20, #0x50
    bf0c:	b	c1cc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x808>
    bf10:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bf14:	add	x9, x9, #0x0
    bf18:	ldr	x9, [x9]
    bf1c:	mov	w10, #0x20                  	// #32
    bf20:	strb	w10, [x8, #8]
    bf24:	str	x9, [x8]
    bf28:	ldr	x8, [x19, #24]
    bf2c:	add	x8, x8, #0x9
    bf30:	str	x8, [x19, #24]
    bf34:	ldr	w8, [x20, #48]
    bf38:	cmp	w8, #0x7
    bf3c:	b.ne	c6c8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd04>  // b.any
    bf40:	ldp	x8, x0, [x19, #16]
    bf44:	ldr	w21, [x20, #80]
    bf48:	ldr	x1, [x20, #72]
    bf4c:	sub	x8, x8, x0
    bf50:	cmp	x8, x21
    bf54:	b.cs	bfe8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x624>  // b.hs, b.nlast
    bf58:	mov	x0, x19
    bf5c:	mov	x2, x21
    bf60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bf64:	mov	x19, x0
    bf68:	ldr	x0, [x0, #24]
    bf6c:	b	c000 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x63c>
    bf70:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    bf74:	add	x9, x9, #0x0
    bf78:	ldr	x9, [x9]
    bf7c:	mov	w10, #0x6d69                	// #28009
    bf80:	movk	w10, #0x206d, lsl #16
    bf84:	str	w10, [x8, #8]
    bf88:	str	x9, [x8]
    bf8c:	ldr	x8, [x19, #24]
    bf90:	add	x8, x8, #0xc
    bf94:	str	x8, [x19, #24]
    bf98:	ldr	w8, [x20, #48]
    bf9c:	cmp	w8, #0x1
    bfa0:	b.ne	c6e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd24>  // b.any
    bfa4:	ldr	x0, [x20, #72]
    bfa8:	mov	x1, x19
    bfac:	mov	x2, xzr
    bfb0:	mov	w3, wzr
    bfb4:	bl	0 <_ZNK4llvm6MCExpr5printERNS_11raw_ostreamEPKNS_9MCAsmInfoEb>
    bfb8:	ldp	x9, x8, [x19, #16]
    bfbc:	sub	x9, x9, x8
    bfc0:	cmp	x9, #0x6
    bfc4:	b.hi	c020 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x65c>  // b.pmore
    bfc8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    bfcc:	add	x1, x1, #0x0
    bfd0:	mov	w2, #0x7                   	// #7
    bfd4:	mov	x0, x19
    bfd8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    bfdc:	mov	x19, x0
    bfe0:	and	x1, x21, #0x3f
    bfe4:	b	c514 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb50>
    bfe8:	cbz	w21, c000 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x63c>
    bfec:	mov	x2, x21
    bff0:	bl	0 <memcpy>
    bff4:	ldr	x8, [x19, #24]
    bff8:	add	x0, x8, x21
    bffc:	str	x0, [x19, #24]
    c000:	ldr	x8, [x19, #16]
    c004:	cmp	x0, x8
    c008:	b.cs	c600 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc3c>  // b.hs, b.nlast
    c00c:	add	x8, x0, #0x1
    c010:	mov	w9, #0x3e                  	// #62
    c014:	str	x8, [x19, #24]
    c018:	strb	w9, [x0]
    c01c:	b	c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>
    c020:	mov	w9, #0x6c73                	// #27763
    c024:	mov	w10, #0x202c                	// #8236
    c028:	movk	w9, #0x2320, lsl #16
    c02c:	movk	w10, #0x736c, lsl #16
    c030:	stur	w9, [x8, #3]
    c034:	str	w10, [x8]
    c038:	ldr	x8, [x19, #24]
    c03c:	and	x1, x21, #0x3f
    c040:	add	x8, x8, #0x7
    c044:	str	x8, [x19, #24]
    c048:	b	c514 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb50>
    c04c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c050:	add	x9, x9, #0x0
    c054:	ldur	x10, [x9, #5]
    c058:	ldr	x9, [x9]
    c05c:	stur	x10, [x8, #5]
    c060:	str	x9, [x8]
    c064:	ldr	x8, [x19, #24]
    c068:	add	x8, x8, #0xd
    c06c:	str	x8, [x19, #24]
    c070:	ldr	w8, [x20, #48]
    c074:	cmp	w8, #0x5
    c078:	b.ne	c708 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd44>  // b.any
    c07c:	ldr	w1, [x20, #72]
    c080:	b	c514 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb50>
    c084:	mov	w9, #0x27                  	// #39
    c088:	strb	w9, [x8]
    c08c:	ldr	x8, [x19, #24]
    c090:	add	x8, x8, #0x1
    c094:	str	x8, [x19, #24]
    c098:	ldr	w8, [x20, #48]
    c09c:	cmp	w8, #0x6
    c0a0:	b.ne	c728 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd64>  // b.any
    c0a4:	ldp	x8, x0, [x19, #16]
    c0a8:	ldr	w21, [x20, #80]
    c0ac:	ldr	x1, [x20, #72]
    c0b0:	sub	x8, x8, x0
    c0b4:	cmp	x8, x21
    c0b8:	b.cs	c18c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7c8>  // b.hs, b.nlast
    c0bc:	mov	x0, x19
    c0c0:	mov	x2, x21
    c0c4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c0c8:	mov	x19, x0
    c0cc:	ldr	x0, [x0, #24]
    c0d0:	b	c1a4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7e0>
    c0d4:	mov	w9, #0x63                  	// #99
    c0d8:	strb	w9, [x8]
    c0dc:	ldr	x8, [x19, #24]
    c0e0:	add	x8, x8, #0x1
    c0e4:	str	x8, [x19, #24]
    c0e8:	ldr	w8, [x20, #48]
    c0ec:	cmp	w8, #0x8
    c0f0:	b.ne	c748 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xd84>  // b.any
    c0f4:	ldr	w1, [x20, #72]
    c0f8:	mov	x0, x19
    c0fc:	ldp	x20, x19, [sp, #96]
    c100:	ldp	x22, x21, [sp, #80]
    c104:	ldp	x24, x23, [sp, #64]
    c108:	ldp	x29, x30, [sp, #48]
    c10c:	add	sp, sp, #0x70
    c110:	b	0 <_ZN4llvm11raw_ostreamlsEm>
    c114:	mov	w9, #0x3c                  	// #60
    c118:	strb	w9, [x8]
    c11c:	ldr	x8, [x19, #24]
    c120:	mov	x21, x19
    c124:	add	x8, x8, #0x1
    c128:	str	x8, [x19, #24]
    c12c:	ldr	w8, [x20, #48]
    c130:	cmp	w8, #0x3
    c134:	b.ne	bcb4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x2f0>  // b.any
    c138:	add	x8, x20, #0x58
    c13c:	ldrsw	x8, [x8]
    c140:	cmp	w8, #0xd
    c144:	b.cs	c768 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xda4>  // b.hs, b.nlast
    c148:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c14c:	add	x9, x9, #0x0
    c150:	ldr	x22, [x9, x8, lsl #3]
    c154:	mov	x0, x22
    c158:	bl	0 <strlen>
    c15c:	mov	x23, x0
    c160:	ldp	x8, x0, [x21, #16]
    c164:	sub	x8, x8, x0
    c168:	cmp	x23, x8
    c16c:	b.ls	c1f4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x830>  // b.plast
    c170:	mov	x0, x21
    c174:	mov	x1, x22
    c178:	mov	x2, x23
    c17c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c180:	mov	x21, x0
    c184:	ldr	x0, [x0, #24]
    c188:	b	c210 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x84c>
    c18c:	cbz	w21, c1a4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7e0>
    c190:	mov	x2, x21
    c194:	bl	0 <memcpy>
    c198:	ldr	x8, [x19, #24]
    c19c:	add	x0, x8, x21
    c1a0:	str	x0, [x19, #24]
    c1a4:	ldr	x8, [x19, #16]
    c1a8:	cmp	x8, x0
    c1ac:	b.ne	c1bc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x7f8>  // b.any
    c1b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c1b4:	add	x1, x1, #0x0
    c1b8:	b	c48c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xac8>
    c1bc:	mov	w8, #0x27                  	// #39
    c1c0:	strb	w8, [x0]
    c1c4:	b	c59c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbd8>
    c1c8:	add	x8, x20, #0x60
    c1cc:	ldrb	w8, [x8]
    c1d0:	cbz	w8, c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>
    c1d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c1d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c1dc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c1e0:	add	x0, x0, #0x0
    c1e4:	add	x1, x1, #0x0
    c1e8:	add	x3, x3, #0x0
    c1ec:	mov	w2, #0x253                 	// #595
    c1f0:	bl	0 <__assert_fail>
    c1f4:	cbz	x23, c210 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x84c>
    c1f8:	mov	x1, x22
    c1fc:	mov	x2, x23
    c200:	bl	0 <memcpy>
    c204:	ldr	x8, [x21, #24]
    c208:	add	x0, x8, x23
    c20c:	str	x0, [x21, #24]
    c210:	ldr	x8, [x21, #16]
    c214:	sub	x8, x8, x0
    c218:	cmp	x8, #0x1
    c21c:	b.hi	c254 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x890>  // b.pmore
    c220:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c224:	add	x1, x1, #0x0
    c228:	mov	w2, #0x2                   	// #2
    c22c:	mov	x0, x21
    c230:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c234:	mov	x21, x0
    c238:	ldr	w8, [x20, #48]
    c23c:	cmp	w8, #0x3
    c240:	b.eq	c274 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8b0>  // b.none
    c244:	cmp	w8, #0xa
    c248:	b.ne	c620 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc5c>  // b.any
    c24c:	add	x8, x20, #0x4c
    c250:	b	c278 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8b4>
    c254:	mov	w8, #0x2320                	// #8992
    c258:	strh	w8, [x0]
    c25c:	ldr	x8, [x21, #24]
    c260:	add	x8, x8, #0x2
    c264:	str	x8, [x21, #24]
    c268:	ldr	w8, [x20, #48]
    c26c:	cmp	w8, #0x3
    c270:	b.ne	c244 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x880>  // b.any
    c274:	add	x8, x20, #0x5c
    c278:	ldr	w1, [x8]
    c27c:	mov	x0, x21
    c280:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    c284:	ldr	w8, [x20, #48]
    c288:	cmp	w8, #0x3
    c28c:	b.eq	c2a0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8dc>  // b.none
    c290:	cmp	w8, #0xa
    c294:	b.ne	c638 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc74>  // b.any
    c298:	add	x8, x20, #0x50
    c29c:	b	c2a4 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x8e0>
    c2a0:	add	x8, x20, #0x60
    c2a4:	ldrb	w8, [x8]
    c2a8:	cbnz	w8, c5e0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc1c>
    c2ac:	ldp	x9, x8, [x19, #16]
    c2b0:	sub	x9, x9, x8
    c2b4:	cmp	x9, #0x4
    c2b8:	b.hi	c5c0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbfc>  // b.pmore
    c2bc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c2c0:	add	x1, x1, #0x0
    c2c4:	mov	w2, #0x5                   	// #5
    c2c8:	mov	x0, x19
    c2cc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c2d0:	b	c5e0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc1c>
    c2d4:	mov	x0, x22
    c2d8:	mov	x1, x24
    c2dc:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
    c2e0:	ldur	w8, [x29, #-8]
    c2e4:	cmp	w8, #0x41
    c2e8:	b.cc	c2f8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x934>  // b.lo, b.ul, b.last
    c2ec:	ldur	x0, [x29, #-16]
    c2f0:	cbz	x0, c2f8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x934>
    c2f4:	bl	0 <_ZdaPv>
    c2f8:	ldr	x8, [sp, #8]
    c2fc:	cmp	x23, x8
    c300:	b.eq	c324 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x960>  // b.none
    c304:	sub	x8, x29, #0x10
    c308:	mov	x0, x22
    c30c:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    c310:	ldur	w22, [x29, #-8]
    c314:	cmp	w22, #0x40
    c318:	b.hi	c340 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x97c>  // b.pmore
    c31c:	sub	x8, x29, #0x10
    c320:	b	c358 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x994>
    c324:	mov	x8, sp
    c328:	add	x0, x8, #0x8
    c32c:	sub	x8, x29, #0x10
    c330:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    c334:	ldur	w22, [x29, #-8]
    c338:	cmp	w22, #0x40
    c33c:	b.ls	c31c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x958>  // b.plast
    c340:	sub	x0, x29, #0x10
    c344:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    c348:	sub	w8, w22, w0
    c34c:	cmp	w8, #0x41
    c350:	b.cs	c7a0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xddc>  // b.hs, b.nlast
    c354:	ldur	x8, [x29, #-16]
    c358:	ldr	x1, [x8]
    c35c:	mov	x0, x21
    c360:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    c364:	ldur	w8, [x29, #-8]
    c368:	cmp	w8, #0x41
    c36c:	b.cc	c37c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x9b8>  // b.lo, b.ul, b.last
    c370:	ldur	x0, [x29, #-16]
    c374:	cbz	x0, c37c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x9b8>
    c378:	bl	0 <_ZdaPv>
    c37c:	mov	x0, sp
    c380:	bl	0 <LLVMInitializeAArch64AsmParser>
    c384:	ldr	w8, [x20, #48]
    c388:	cmp	w8, #0xb
    c38c:	b.ne	c780 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xdbc>  // b.any
    c390:	ldrb	w8, [x20, #80]
    c394:	cbnz	w8, c570 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbac>
    c398:	ldp	x9, x8, [x19, #16]
    c39c:	sub	x9, x9, x8
    c3a0:	cmp	x9, #0x9
    c3a4:	b.hi	c54c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb88>  // b.pmore
    c3a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c3ac:	add	x1, x1, #0x0
    c3b0:	mov	w2, #0xa                   	// #10
    c3b4:	mov	x0, x19
    c3b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c3bc:	b	c570 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbac>
    c3c0:	cmp	x9, #0x11
    c3c4:	b.hi	c498 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xad4>  // b.pmore
    c3c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c3cc:	add	x1, x1, #0x0
    c3d0:	mov	w2, #0x12                  	// #18
    c3d4:	mov	x0, x19
    c3d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c3dc:	mov	x19, x0
    c3e0:	b	c4bc <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xaf8>
    c3e4:	cmp	x9, #0xf
    c3e8:	b.hi	c4e8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb24>  // b.pmore
    c3ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c3f0:	add	x1, x1, #0x0
    c3f4:	mov	w2, #0x10                  	// #16
    c3f8:	mov	x0, x19
    c3fc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c400:	mov	x19, x0
    c404:	b	c504 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb40>
    c408:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c40c:	add	x9, x9, #0x0
    c410:	ldr	x9, [x9]
    c414:	mov	w10, #0x20                  	// #32
    c418:	strb	w10, [x8, #8]
    c41c:	str	x9, [x8]
    c420:	ldr	x8, [x19, #24]
    c424:	add	x0, x8, #0x9
    c428:	b	c44c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xa88>
    c42c:	mov	w9, #0x6f66                	// #28518
    c430:	mov	w10, #0x703c                	// #28732
    c434:	movk	w9, #0x2070, lsl #16
    c438:	movk	w10, #0x6672, lsl #16
    c43c:	stur	w9, [x8, #3]
    c440:	str	w10, [x8]
    c444:	ldr	x8, [x19, #24]
    c448:	add	x0, x8, #0x7
    c44c:	str	x0, [x19, #24]
    c450:	ldr	x8, [x19, #16]
    c454:	sub	x8, x8, x0
    c458:	cmp	x8, x21
    c45c:	b.cs	bb0c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x148>  // b.hs, b.nlast
    c460:	mov	x0, x19
    c464:	mov	x1, x20
    c468:	mov	x2, x21
    c46c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c470:	ldr	x8, [x0, #24]
    c474:	mov	x19, x0
    c478:	ldr	x9, [x19, #16]
    c47c:	cmp	x9, x8
    c480:	b.ne	c594 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbd0>  // b.any
    c484:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c488:	add	x1, x1, #0x0
    c48c:	mov	w2, #0x1                   	// #1
    c490:	mov	x0, x19
    c494:	b	c534 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb70>
    c498:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c49c:	add	x9, x9, #0x0
    c4a0:	ldr	q0, [x9]
    c4a4:	mov	w9, #0x2320                	// #8992
    c4a8:	strh	w9, [x8, #16]
    c4ac:	str	q0, [x8]
    c4b0:	ldr	x8, [x19, #24]
    c4b4:	add	x8, x8, #0x12
    c4b8:	str	x8, [x19, #24]
    c4bc:	ldr	w8, [x20, #48]
    c4c0:	cmp	w8, #0xc
    c4c4:	b.eq	c510 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xb4c>  // b.none
    c4c8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c4cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c4d0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c4d4:	add	x0, x0, #0x0
    c4d8:	add	x1, x1, #0x0
    c4dc:	add	x3, x3, #0x0
    c4e0:	mov	w2, #0x212                 	// #530
    c4e4:	bl	0 <__assert_fail>
    c4e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c4ec:	add	x9, x9, #0x0
    c4f0:	ldr	q0, [x9]
    c4f4:	str	q0, [x8]
    c4f8:	ldr	x8, [x19, #24]
    c4fc:	add	x8, x8, #0x10
    c500:	str	x8, [x19, #24]
    c504:	ldr	w8, [x20, #48]
    c508:	cmp	w8, #0x9
    c50c:	b.ne	c7c0 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xdfc>  // b.any
    c510:	ldr	w1, [x20, #84]
    c514:	mov	x0, x19
    c518:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
    c51c:	ldp	x9, x8, [x0, #16]
    c520:	cmp	x9, x8
    c524:	b.ne	be3c <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0x478>  // b.any
    c528:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c52c:	add	x1, x1, #0x0
    c530:	mov	w2, #0x1                   	// #1
    c534:	ldp	x20, x19, [sp, #96]
    c538:	ldp	x22, x21, [sp, #80]
    c53c:	ldp	x24, x23, [sp, #64]
    c540:	ldp	x29, x30, [sp, #48]
    c544:	add	sp, sp, #0x70
    c548:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c54c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c550:	add	x9, x9, #0x0
    c554:	ldr	x9, [x9]
    c558:	mov	w10, #0x2974                	// #10612
    c55c:	strh	w10, [x8, #8]
    c560:	str	x9, [x8]
    c564:	ldr	x8, [x19, #24]
    c568:	add	x8, x8, #0xa
    c56c:	str	x8, [x19, #24]
    c570:	ldp	x9, x8, [x19, #16]
    c574:	cmp	x9, x8
    c578:	b.ne	c594 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbd0>  // b.any
    c57c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c580:	add	x1, x1, #0x0
    c584:	mov	w2, #0x1                   	// #1
    c588:	mov	x0, x19
    c58c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
    c590:	b	c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>
    c594:	mov	w9, #0x3e                  	// #62
    c598:	strb	w9, [x8]
    c59c:	ldr	x8, [x19, #24]
    c5a0:	add	x8, x8, #0x1
    c5a4:	str	x8, [x19, #24]
    c5a8:	ldp	x20, x19, [sp, #96]
    c5ac:	ldp	x22, x21, [sp, #80]
    c5b0:	ldp	x24, x23, [sp, #64]
    c5b4:	ldp	x29, x30, [sp, #48]
    c5b8:	add	sp, sp, #0x70
    c5bc:	ret
    c5c0:	mov	w10, #0x693c                	// #26940
    c5c4:	mov	w9, #0x3e                  	// #62
    c5c8:	movk	w10, #0x706d, lsl #16
    c5cc:	strb	w9, [x8, #4]
    c5d0:	str	w10, [x8]
    c5d4:	ldr	x8, [x19, #24]
    c5d8:	add	x8, x8, #0x5
    c5dc:	str	x8, [x19, #24]
    c5e0:	ldp	x9, x8, [x19, #16]
    c5e4:	cmp	x8, x9
    c5e8:	b.cs	c600 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xc3c>  // b.hs, b.nlast
    c5ec:	add	x9, x8, #0x1
    c5f0:	mov	w10, #0x3e                  	// #62
    c5f4:	str	x9, [x19, #24]
    c5f8:	strb	w10, [x8]
    c5fc:	b	c5a8 <_ZNK12_GLOBAL__N_114AArch64Operand5printERN4llvm11raw_ostreamE+0xbe4>
    c600:	mov	x0, x19
    c604:	ldp	x20, x19, [sp, #96]
    c608:	ldp	x22, x21, [sp, #80]
    c60c:	ldp	x24, x23, [sp, #64]
    c610:	ldp	x29, x30, [sp, #48]
    c614:	mov	w1, #0x3e                  	// #62
    c618:	add	sp, sp, #0x70
    c61c:	b	0 <_ZN4llvm11raw_ostream5writeEh>
    c620:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c624:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c628:	add	x0, x0, #0x0
    c62c:	add	x1, x1, #0x0
    c630:	mov	w2, #0x269                 	// #617
    c634:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c638:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c63c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c640:	add	x0, x0, #0x0
    c644:	add	x1, x1, #0x0
    c648:	mov	w2, #0x271                 	// #625
    c64c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c650:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c654:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c658:	add	x0, x0, #0x0
    c65c:	add	x1, x1, #0x0
    c660:	mov	w2, #0x261                 	// #609
    c664:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c668:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c66c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c670:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c674:	add	x0, x0, #0x0
    c678:	add	x1, x1, #0x0
    c67c:	add	x3, x3, #0x0
    c680:	mov	w2, #0x208                 	// #520
    c684:	bl	0 <__assert_fail>
    c688:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c68c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c690:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c694:	add	x0, x0, #0x0
    c698:	add	x1, x1, #0x0
    c69c:	add	x3, x3, #0x0
    c6a0:	mov	w2, #0x226                 	// #550
    c6a4:	bl	0 <__assert_fail>
    c6a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c6ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c6b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c6b4:	add	x0, x0, #0x0
    c6b8:	add	x1, x1, #0x0
    c6bc:	add	x3, x3, #0x0
    c6c0:	mov	w2, #0x203                 	// #515
    c6c4:	bl	0 <__assert_fail>
    c6c8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c6cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c6d0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c6d4:	add	x0, x0, #0x0
    c6d8:	add	x1, x1, #0x0
    c6dc:	add	x3, x3, #0x0
    c6e0:	mov	w2, #0x235                 	// #565
    c6e4:	bl	0 <__assert_fail>
    c6e8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c6ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c6f0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c6f4:	add	x0, x0, #0x0
    c6f8:	add	x1, x1, #0x0
    c6fc:	add	x3, x3, #0x0
    c700:	mov	w2, #0x1f9                 	// #505
    c704:	bl	0 <__assert_fail>
    c708:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c70c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c710:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c714:	add	x0, x0, #0x0
    c718:	add	x1, x1, #0x0
    c71c:	add	x3, x3, #0x0
    c720:	mov	w2, #0x230                 	// #560
    c724:	bl	0 <__assert_fail>
    c728:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c72c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c730:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c734:	add	x0, x0, #0x0
    c738:	add	x1, x1, #0x0
    c73c:	add	x3, x3, #0x0
    c740:	mov	w2, #0x1ea                 	// #490
    c744:	bl	0 <__assert_fail>
    c748:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c74c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c750:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c754:	add	x0, x0, #0x0
    c758:	add	x1, x1, #0x0
    c75c:	add	x3, x3, #0x0
    c760:	mov	w2, #0x23a                 	// #570
    c764:	bl	0 <__assert_fail>
    c768:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c76c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c770:	add	x0, x0, #0x0
    c774:	add	x1, x1, #0x0
    c778:	mov	w2, #0x36                  	// #54
    c77c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
    c780:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c784:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c788:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c78c:	add	x0, x0, #0x0
    c790:	add	x1, x1, #0x0
    c794:	add	x3, x3, #0x0
    c798:	mov	w2, #0x20d                 	// #525
    c79c:	bl	0 <__assert_fail>
    c7a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c7a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c7a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c7ac:	add	x0, x0, #0x0
    c7b0:	add	x1, x1, #0x0
    c7b4:	add	x3, x3, #0x0
    c7b8:	mov	w2, #0x657                 	// #1623
    c7bc:	bl	0 <__assert_fail>
    c7c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c7c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c7c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c7cc:	add	x0, x0, #0x0
    c7d0:	add	x1, x1, #0x0
    c7d4:	add	x3, x3, #0x0
    c7d8:	mov	w2, #0x23f                 	// #575
    c7dc:	bl	0 <__assert_fail>

000000000000c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    c7e0:	sub	sp, sp, #0x60
    c7e4:	stp	x29, x30, [sp, #32]
    c7e8:	stp	x24, x23, [sp, #48]
    c7ec:	stp	x22, x21, [sp, #64]
    c7f0:	stp	x20, x19, [sp, #80]
    c7f4:	add	x29, sp, #0x20
    c7f8:	mov	x21, x0
    c7fc:	ldr	x0, [x0, #8]
    c800:	mov	x19, x1
    c804:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c808:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c80c:	ldr	x8, [x21, #8]
    c810:	mov	x20, x0
    c814:	mov	w1, #0x13                  	// #19
    c818:	mov	x0, x8
    c81c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c820:	tbz	w0, #0, c834 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x54>
    c824:	ldr	x0, [x21, #8]
    c828:	sub	x1, x29, #0x8
    c82c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    c830:	tbz	w0, #0, c850 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x70>
    c834:	mov	w0, #0x1                   	// #1
    c838:	ldp	x20, x19, [sp, #80]
    c83c:	ldp	x22, x21, [sp, #64]
    c840:	ldp	x24, x23, [sp, #48]
    c844:	ldp	x29, x30, [sp, #32]
    c848:	add	sp, sp, #0x60
    c84c:	ret
    c850:	ldur	x23, [x29, #-8]
    c854:	cbz	x23, c994 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b4>
    c858:	ldr	w8, [x23]
    c85c:	cmp	w8, #0x1
    c860:	b.ne	c8a8 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc8>  // b.any
    c864:	ldr	x0, [x21, #8]
    c868:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c86c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    c870:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    c874:	add	x8, x8, #0x0
    c878:	mov	w9, #0x103                 	// #259
    c87c:	stp	x8, xzr, [sp]
    c880:	strh	w9, [sp, #16]
    c884:	ldr	x8, [x21, #8]
    c888:	mov	x22, x0
    c88c:	mov	x2, sp
    c890:	mov	w1, #0x14                  	// #20
    c894:	mov	x0, x8
    c898:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    c89c:	tbz	w0, #0, c8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf8>
    c8a0:	mov	w0, #0x2                   	// #2
    c8a4:	b	c838 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    c8a8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    c8ac:	add	x8, x8, #0x0
    c8b0:	mov	w9, #0x103                 	// #259
    c8b4:	stp	x8, xzr, [sp]
    c8b8:	strh	w9, [sp, #16]
    c8bc:	ldr	x0, [x21, #8]
    c8c0:	mov	x1, sp
    c8c4:	mov	x2, xzr
    c8c8:	mov	x3, xzr
    c8cc:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    c8d0:	mov	w0, #0x2                   	// #2
    c8d4:	b	c838 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    c8d8:	ldr	x0, [x21, #8]
    c8dc:	ldr	x24, [x23, #16]
    c8e0:	ldr	x8, [x0]
    c8e4:	ldr	x8, [x8, #48]
    c8e8:	blr	x8
    c8ec:	mov	x23, x0
    c8f0:	mov	w0, #0x70                  	// #112
    c8f4:	bl	0 <_Znwm>
    c8f8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    c8fc:	mov	x8, x0
    c900:	add	x9, x9, #0x0
    c904:	strb	wzr, [x8, #32]!
    c908:	str	x9, [x0]
    c90c:	mov	w9, #0x5                   	// #5
    c910:	str	w9, [x0, #48]
    c914:	str	x23, [x0, #104]
    c918:	str	w24, [x0, #72]
    c91c:	stp	x20, x22, [x0, #56]
    c920:	stp	x8, xzr, [x0, #16]
    c924:	ldp	w8, w9, [x19, #8]
    c928:	mov	x21, x0
    c92c:	cmp	w8, w9
    c930:	b.cs	c954 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x174>  // b.hs, b.nlast
    c934:	ldr	x10, [x19]
    c938:	cmp	w8, w9
    c93c:	str	x21, [x10, w8, uxtw #3]
    c940:	b.cs	c974 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x194>  // b.hs, b.nlast
    c944:	mov	w0, wzr
    c948:	add	w8, w8, #0x1
    c94c:	str	w8, [x19, #8]
    c950:	b	c838 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x58>
    c954:	mov	x0, x19
    c958:	mov	x1, xzr
    c95c:	bl	0 <LLVMInitializeAArch64AsmParser>
    c960:	ldp	w8, w9, [x19, #8]
    c964:	ldr	x10, [x19]
    c968:	cmp	w8, w9
    c96c:	str	x21, [x10, w8, uxtw #3]
    c970:	b.cc	c944 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x164>  // b.lo, b.ul, b.last
    c974:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c978:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c97c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c980:	add	x0, x0, #0x0
    c984:	add	x1, x1, #0x0
    c988:	add	x3, x3, #0x0
    c98c:	mov	w2, #0x43                  	// #67
    c990:	bl	0 <__assert_fail>
    c994:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    c998:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    c99c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    c9a0:	add	x0, x0, #0x0
    c9a4:	add	x1, x1, #0x0
    c9a8:	add	x3, x3, #0x0
    c9ac:	mov	w2, #0x69                  	// #105
    c9b0:	bl	0 <__assert_fail>

000000000000c9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>:
    c9b4:	sub	sp, sp, #0x80
    c9b8:	stp	x29, x30, [sp, #64]
    c9bc:	str	x23, [sp, #80]
    c9c0:	stp	x22, x21, [sp, #96]
    c9c4:	stp	x20, x19, [sp, #112]
    c9c8:	add	x29, sp, #0x40
    c9cc:	ldr	x21, [x0, #8]
    c9d0:	mov	x20, x0
    c9d4:	mov	x19, x1
    c9d8:	mov	w1, #0xa                   	// #10
    c9dc:	mov	x0, x21
    c9e0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    c9e4:	tbz	w0, #0, ca20 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6c>
    c9e8:	mov	x0, x21
    c9ec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    c9f0:	ldr	w8, [x0]
    c9f4:	cmp	w8, #0x2
    c9f8:	b.ne	ca34 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x80>  // b.any
    c9fc:	mov	x0, x21
    ca00:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ca04:	ldr	w8, [x0]
    ca08:	cmp	w8, #0x3
    ca0c:	b.eq	ca64 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xb0>  // b.none
    ca10:	cmp	w8, #0x2
    ca14:	b.ne	d27c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8c8>  // b.any
    ca18:	ldp	x8, x9, [x0, #8]
    ca1c:	b	ca88 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0xd4>
    ca20:	ldr	x0, [x20, #8]
    ca24:	mov	x1, x19
    ca28:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    ca2c:	mov	w21, w0
    ca30:	b	d260 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    ca34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ca38:	add	x8, x8, #0x0
    ca3c:	mov	w9, #0x103                 	// #259
    ca40:	stp	x8, xzr, [sp, #32]
    ca44:	strh	w9, [sp, #48]
    ca48:	ldr	x0, [x20, #8]
    ca4c:	add	x1, sp, #0x20
    ca50:	mov	x2, xzr
    ca54:	mov	x3, xzr
    ca58:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    ca5c:	mov	w21, w0
    ca60:	b	d260 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    ca64:	ldp	x8, x9, [x0, #8]
    ca68:	subs	x10, x9, #0x1
    ca6c:	cset	w11, cs  // cs = hs, nlast
    ca70:	cinc	x8, x8, cs  // cs = hs, nlast
    ca74:	cmp	x10, x11
    ca78:	csel	x10, x10, x11, hi  // hi = pmore
    ca7c:	cmp	x9, x10
    ca80:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    ca84:	sub	x9, x9, x11
    ca88:	stp	x8, x9, [sp, #8]
    ca8c:	add	x8, sp, #0x20
    ca90:	add	x0, sp, #0x8
    ca94:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    ca98:	ldr	x23, [sp, #40]
    ca9c:	sub	x8, x23, #0x3
    caa0:	cmp	x8, #0xb
    caa4:	b.hi	cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>  // b.pmore
    caa8:	ldr	x22, [sp, #32]
    caac:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    cab0:	add	x9, x9, #0x0
    cab4:	adr	x10, cac4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x110>
    cab8:	ldrh	w11, [x9, x8, lsl #1]
    cabc:	add	x10, x10, x11, lsl #2
    cac0:	br	x10
    cac4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cac8:	add	x1, x1, #0x0
    cacc:	mov	x0, x22
    cad0:	mov	x2, x23
    cad4:	bl	0 <bcmp>
    cad8:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cadc:	mov	w8, wzr
    cae0:	mov	w9, #0x14                  	// #20
    cae4:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cae8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    caec:	add	x1, x1, #0x0
    caf0:	mov	x0, x22
    caf4:	mov	x2, x23
    caf8:	bl	0 <bcmp>
    cafc:	cbz	w0, d018 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x664>
    cb00:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cb04:	add	x1, x1, #0x0
    cb08:	mov	x0, x22
    cb0c:	mov	x2, x23
    cb10:	bl	0 <bcmp>
    cb14:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cb18:	mov	w8, #0x100                 	// #256
    cb1c:	mov	w9, #0x46                  	// #70
    cb20:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cb24:	ldr	x8, [x22]
    cb28:	mov	x9, #0x6261                	// #25185
    cb2c:	movk	x9, #0x5f73, lsl #16
    cb30:	movk	x9, #0x3267, lsl #32
    cb34:	movk	x9, #0x735f, lsl #48
    cb38:	cmp	x8, x9
    cb3c:	b.eq	d024 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x670>  // b.none
    cb40:	ldr	x8, [x22]
    cb44:	mov	x9, #0x6261                	// #25185
    cb48:	movk	x9, #0x5f73, lsl #16
    cb4c:	movk	x9, #0x3167, lsl #32
    cb50:	movk	x9, #0x735f, lsl #48
    cb54:	cmp	x8, x9
    cb58:	b.eq	d084 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6d0>  // b.none
    cb5c:	ldr	x8, [x22]
    cb60:	mov	x9, #0x6261                	// #25185
    cb64:	movk	x9, #0x5f73, lsl #16
    cb68:	movk	x9, #0x3067, lsl #32
    cb6c:	movk	x9, #0x735f, lsl #48
    cb70:	cmp	x8, x9
    cb74:	b.eq	d0d8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x724>  // b.none
    cb78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cb7c:	add	x1, x1, #0x0
    cb80:	mov	x0, x22
    cb84:	mov	x2, x23
    cb88:	bl	0 <bcmp>
    cb8c:	cbz	w0, d12c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x778>
    cb90:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cb94:	add	x1, x1, #0x0
    cb98:	mov	x0, x22
    cb9c:	mov	x2, x23
    cba0:	bl	0 <bcmp>
    cba4:	cbz	w0, d168 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7b4>
    cba8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cbac:	add	x1, x1, #0x0
    cbb0:	mov	x0, x22
    cbb4:	mov	x2, x23
    cbb8:	bl	0 <bcmp>
    cbbc:	cbz	w0, d198 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7e4>
    cbc0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cbc4:	add	x1, x1, #0x0
    cbc8:	mov	x0, x22
    cbcc:	mov	x2, x23
    cbd0:	bl	0 <bcmp>
    cbd4:	cbz	w0, d1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7fc>
    cbd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cbdc:	add	x1, x1, #0x0
    cbe0:	mov	x0, x22
    cbe4:	mov	x2, x23
    cbe8:	bl	0 <bcmp>
    cbec:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cbf0:	mov	w8, wzr
    cbf4:	mov	w9, #0x16                  	// #22
    cbf8:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cbfc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cc00:	add	x1, x1, #0x0
    cc04:	mov	x0, x22
    cc08:	mov	x2, x23
    cc0c:	bl	0 <bcmp>
    cc10:	cbz	w0, d030 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x67c>
    cc14:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cc18:	add	x1, x1, #0x0
    cc1c:	mov	x0, x22
    cc20:	mov	x2, x23
    cc24:	bl	0 <bcmp>
    cc28:	cbz	w0, d090 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6dc>
    cc2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cc30:	add	x1, x1, #0x0
    cc34:	mov	x0, x22
    cc38:	mov	x2, x23
    cc3c:	bl	0 <bcmp>
    cc40:	cbz	w0, d0e4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x730>
    cc44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cc48:	add	x1, x1, #0x0
    cc4c:	mov	x0, x22
    cc50:	mov	x2, x23
    cc54:	bl	0 <bcmp>
    cc58:	cbz	w0, d138 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x784>
    cc5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cc60:	add	x1, x1, #0x0
    cc64:	mov	x0, x22
    cc68:	mov	x2, x23
    cc6c:	bl	0 <bcmp>
    cc70:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cc74:	mov	w8, wzr
    cc78:	mov	w9, #0x18                  	// #24
    cc7c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cc80:	ldr	x8, [x22]
    cc84:	ldrb	w9, [x22, #8]
    cc88:	mov	x10, #0x6261                	// #25185
    cc8c:	movk	x10, #0x5f73, lsl #16
    cc90:	movk	x10, #0x3267, lsl #32
    cc94:	movk	x10, #0x6e5f, lsl #48
    cc98:	mov	w11, #0x63                  	// #99
    cc9c:	eor	x8, x8, x10
    cca0:	eor	x9, x9, x11
    cca4:	orr	x8, x8, x9
    cca8:	cbz	x8, d03c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x688>
    ccac:	ldr	x8, [x22]
    ccb0:	ldrb	w9, [x22, #8]
    ccb4:	mov	x10, #0x6261                	// #25185
    ccb8:	movk	x10, #0x5f73, lsl #16
    ccbc:	movk	x10, #0x3167, lsl #32
    ccc0:	movk	x10, #0x6e5f, lsl #48
    ccc4:	mov	w11, #0x63                  	// #99
    ccc8:	eor	x8, x8, x10
    cccc:	eor	x9, x9, x11
    ccd0:	orr	x8, x8, x9
    ccd4:	cbz	x8, d09c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6e8>
    ccd8:	ldr	x8, [x22]
    ccdc:	ldrb	w9, [x22, #8]
    cce0:	mov	x10, #0x6261                	// #25185
    cce4:	movk	x10, #0x5f73, lsl #16
    cce8:	movk	x10, #0x3067, lsl #32
    ccec:	movk	x10, #0x6e5f, lsl #48
    ccf0:	mov	w11, #0x63                  	// #99
    ccf4:	eor	x8, x8, x10
    ccf8:	eor	x9, x9, x11
    ccfc:	orr	x8, x8, x9
    cd00:	cbz	x8, d0f0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x73c>
    cd04:	ldr	x9, [x22]
    cd08:	ldrb	w10, [x22, #8]
    cd0c:	mov	x8, #0x7464                	// #29796
    cd10:	movk	x8, #0x7270, lsl #16
    cd14:	movk	x8, #0x6c65, lsl #32
    cd18:	movk	x8, #0x675f, lsl #48
    cd1c:	mov	w11, #0x32                  	// #50
    cd20:	eor	x9, x9, x8
    cd24:	eor	x10, x10, x11
    cd28:	orr	x9, x9, x10
    cd2c:	cbz	x9, d144 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x790>
    cd30:	ldr	x9, [x22]
    cd34:	ldrb	w10, [x22, #8]
    cd38:	mov	w11, #0x31                  	// #49
    cd3c:	eor	x9, x9, x8
    cd40:	eor	x10, x10, x11
    cd44:	orr	x9, x9, x10
    cd48:	cbz	x9, d174 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7c0>
    cd4c:	ldr	x9, [x22]
    cd50:	ldrb	w10, [x22, #8]
    cd54:	eor	x8, x9, x8
    cd58:	eor	x9, x10, #0x30
    cd5c:	orr	x8, x8, x9
    cd60:	cbnz	x8, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cd64:	mov	w9, #0x45                  	// #69
    cd68:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cd6c:	ldr	w8, [x22]
    cd70:	mov	w9, #0x6f6c                	// #28524
    cd74:	movk	w9, #0x3231, lsl #16
    cd78:	cmp	w8, w9
    cd7c:	b.ne	cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>  // b.any
    cd80:	mov	w8, #0x100                 	// #256
    cd84:	mov	w9, #0x21                  	// #33
    cd88:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cd8c:	ldr	w9, [x22]
    cd90:	ldrh	w10, [x22, #4]
    cd94:	mov	w8, #0x6261                	// #25185
    cd98:	movk	w8, #0x5f73, lsl #16
    cd9c:	mov	w11, #0x3367                	// #13159
    cda0:	eor	w9, w9, w8
    cda4:	eor	w10, w10, w11
    cda8:	orr	w9, w9, w10
    cdac:	cbz	w9, d048 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x694>
    cdb0:	ldr	w9, [x22]
    cdb4:	ldrh	w10, [x22, #4]
    cdb8:	mov	w11, #0x3267                	// #12903
    cdbc:	eor	w9, w9, w8
    cdc0:	eor	w10, w10, w11
    cdc4:	orr	w9, w9, w10
    cdc8:	cbz	w9, d0a8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6f4>
    cdcc:	ldr	w9, [x22]
    cdd0:	ldrh	w10, [x22, #4]
    cdd4:	mov	w11, #0x3167                	// #12647
    cdd8:	eor	w9, w9, w8
    cddc:	eor	w10, w10, w11
    cde0:	orr	w9, w9, w10
    cde4:	cbz	w9, d0fc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x748>
    cde8:	ldr	w9, [x22]
    cdec:	ldrh	w10, [x22, #4]
    cdf0:	mov	w11, #0x3067                	// #12391
    cdf4:	eor	w8, w9, w8
    cdf8:	eor	w9, w10, w11
    cdfc:	orr	w8, w8, w9
    ce00:	cbnz	w8, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    ce04:	mov	w9, #0x41                  	// #65
    ce08:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    ce0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce10:	add	x1, x1, #0x0
    ce14:	mov	x0, x22
    ce18:	mov	x2, x23
    ce1c:	bl	0 <bcmp>
    ce20:	cbz	w0, d054 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6a0>
    ce24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce28:	add	x1, x1, #0x0
    ce2c:	mov	x0, x22
    ce30:	mov	x2, x23
    ce34:	bl	0 <bcmp>
    ce38:	cbz	w0, d0b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x700>
    ce3c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce40:	add	x1, x1, #0x0
    ce44:	mov	x0, x22
    ce48:	mov	x2, x23
    ce4c:	bl	0 <bcmp>
    ce50:	cbz	w0, d108 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x754>
    ce54:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce58:	add	x1, x1, #0x0
    ce5c:	mov	x0, x22
    ce60:	mov	x2, x23
    ce64:	bl	0 <bcmp>
    ce68:	cbz	w0, d150 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x79c>
    ce6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce70:	add	x1, x1, #0x0
    ce74:	mov	x0, x22
    ce78:	mov	x2, x23
    ce7c:	bl	0 <bcmp>
    ce80:	cbz	w0, d180 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7cc>
    ce84:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ce88:	add	x1, x1, #0x0
    ce8c:	mov	x0, x22
    ce90:	mov	x2, x23
    ce94:	bl	0 <bcmp>
    ce98:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    ce9c:	mov	w8, wzr
    cea0:	mov	w9, #0x27                  	// #39
    cea4:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cea8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    ceac:	add	x1, x1, #0x0
    ceb0:	mov	x0, x22
    ceb4:	mov	x2, x23
    ceb8:	bl	0 <bcmp>
    cebc:	cbz	w0, d060 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6ac>
    cec0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cec4:	add	x1, x1, #0x0
    cec8:	mov	x0, x22
    cecc:	mov	x2, x23
    ced0:	bl	0 <bcmp>
    ced4:	cbz	w0, d0c0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x70c>
    ced8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cedc:	add	x1, x1, #0x0
    cee0:	mov	x0, x22
    cee4:	mov	x2, x23
    cee8:	bl	0 <bcmp>
    ceec:	cbz	w0, d114 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x760>
    cef0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cef4:	add	x1, x1, #0x0
    cef8:	mov	x0, x22
    cefc:	mov	x2, x23
    cf00:	bl	0 <bcmp>
    cf04:	cbz	w0, d15c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7a8>
    cf08:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf0c:	add	x1, x1, #0x0
    cf10:	mov	x0, x22
    cf14:	mov	x2, x23
    cf18:	bl	0 <bcmp>
    cf1c:	cbz	w0, d18c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7d8>
    cf20:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf24:	add	x1, x1, #0x0
    cf28:	mov	x0, x22
    cf2c:	mov	x2, x23
    cf30:	bl	0 <bcmp>
    cf34:	cbz	w0, d1a4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x7f0>
    cf38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf3c:	add	x1, x1, #0x0
    cf40:	mov	x0, x22
    cf44:	mov	x2, x23
    cf48:	bl	0 <bcmp>
    cf4c:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cf50:	mov	w8, wzr
    cf54:	mov	w9, #0x39                  	// #57
    cf58:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cf5c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf60:	add	x1, x1, #0x0
    cf64:	mov	x0, x22
    cf68:	mov	x2, x23
    cf6c:	bl	0 <bcmp>
    cf70:	cbz	w0, d06c <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6b8>
    cf74:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf78:	add	x1, x1, #0x0
    cf7c:	mov	x0, x22
    cf80:	mov	x2, x23
    cf84:	bl	0 <bcmp>
    cf88:	cbnz	w0, cfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x62c>
    cf8c:	mov	w8, #0x100                 	// #256
    cf90:	mov	w9, #0x26                  	// #38
    cf94:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    cf98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cf9c:	add	x1, x1, #0x0
    cfa0:	mov	x0, x22
    cfa4:	mov	x2, x23
    cfa8:	bl	0 <bcmp>
    cfac:	cbz	w0, d078 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x6c4>
    cfb0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cfb4:	add	x1, x1, #0x0
    cfb8:	mov	x0, x22
    cfbc:	mov	x2, x23
    cfc0:	bl	0 <bcmp>
    cfc4:	cbz	w0, d0cc <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x718>
    cfc8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    cfcc:	add	x1, x1, #0x0
    cfd0:	mov	x0, x22
    cfd4:	mov	x2, x23
    cfd8:	bl	0 <bcmp>
    cfdc:	cbz	w0, d120 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x76c>
    cfe0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    cfe4:	add	x8, x8, #0x0
    cfe8:	mov	w9, #0x103                 	// #259
    cfec:	stp	x8, xzr, [sp, #8]
    cff0:	strh	w9, [sp, #24]
    cff4:	ldr	x0, [x20, #8]
    cff8:	add	x1, sp, #0x8
    cffc:	mov	x2, xzr
    d000:	mov	x3, xzr
    d004:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    d008:	mov	w21, w0
    d00c:	mov	w23, wzr
    d010:	mov	w22, #0xfff                 	// #4095
    d014:	b	d1f8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x844>
    d018:	mov	w8, #0x100                 	// #256
    d01c:	mov	w9, #0x25                  	// #37
    d020:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d024:	mov	w8, wzr
    d028:	mov	w9, #0x62                  	// #98
    d02c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d030:	mov	w8, wzr
    d034:	mov	w9, #0x73                  	// #115
    d038:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d03c:	mov	w8, #0x100                 	// #256
    d040:	mov	w9, #0x61                  	// #97
    d044:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d048:	mov	w8, wzr
    d04c:	mov	w9, #0x71                  	// #113
    d050:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d054:	mov	w8, #0x100                 	// #256
    d058:	mov	w9, #0x63                  	// #99
    d05c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d060:	mov	w8, wzr
    d064:	mov	w9, #0x35                  	// #53
    d068:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d06c:	mov	w8, #0x100                 	// #256
    d070:	mov	w9, #0x27                  	// #39
    d074:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d078:	mov	w8, #0x100                 	// #256
    d07c:	mov	w9, #0x55                  	// #85
    d080:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d084:	mov	w8, wzr
    d088:	mov	w9, #0x52                  	// #82
    d08c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d090:	mov	w8, wzr
    d094:	mov	w9, #0x63                  	// #99
    d098:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d09c:	mov	w8, #0x100                 	// #256
    d0a0:	mov	w9, #0x51                  	// #81
    d0a4:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0a8:	mov	w8, wzr
    d0ac:	mov	w9, #0x61                  	// #97
    d0b0:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0b4:	mov	w8, #0x100                 	// #256
    d0b8:	mov	w9, #0x53                  	// #83
    d0bc:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0c0:	mov	w8, wzr
    d0c4:	mov	w9, #0x25                  	// #37
    d0c8:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0cc:	mov	w8, #0x100                 	// #256
    d0d0:	mov	w9, #0x45                  	// #69
    d0d4:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0d8:	mov	w8, wzr
    d0dc:	mov	w9, #0x42                  	// #66
    d0e0:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0e4:	mov	w8, wzr
    d0e8:	mov	w9, #0x53                  	// #83
    d0ec:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0f0:	mov	w8, #0x100                 	// #256
    d0f4:	mov	w9, #0x41                  	// #65
    d0f8:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d0fc:	mov	w8, wzr
    d100:	mov	w9, #0x51                  	// #81
    d104:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d108:	mov	w8, #0x100                 	// #256
    d10c:	mov	w9, #0x43                  	// #67
    d110:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d114:	mov	w8, #0x100                 	// #256
    d118:	mov	w9, #0x57                  	// #87
    d11c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d120:	mov	w8, wzr
    d124:	mov	w9, #0x28                  	// #40
    d128:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d12c:	mov	w8, wzr
    d130:	mov	w9, #0x67                  	// #103
    d134:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d138:	mov	w8, wzr
    d13c:	mov	w9, #0x43                  	// #67
    d140:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d144:	mov	w8, wzr
    d148:	mov	w9, #0x65                  	// #101
    d14c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d150:	mov	w8, #0x100                 	// #256
    d154:	mov	w9, #0x11                  	// #17
    d158:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d15c:	mov	w8, #0x100                 	// #256
    d160:	mov	w9, #0x47                  	// #71
    d164:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d168:	mov	w8, wzr
    d16c:	mov	w9, #0x57                  	// #87
    d170:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d174:	mov	w8, wzr
    d178:	mov	w9, #0x55                  	// #85
    d17c:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d180:	mov	w8, wzr
    d184:	mov	w9, #0x37                  	// #55
    d188:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d18c:	mov	w8, wzr
    d190:	mov	w9, #0x56                  	// #86
    d194:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d198:	mov	w8, wzr
    d19c:	mov	w9, #0x47                  	// #71
    d1a0:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d1a4:	mov	w8, wzr
    d1a8:	mov	w9, #0x29                  	// #41
    d1ac:	b	d1b8 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x804>
    d1b0:	mov	w8, #0x100                 	// #256
    d1b4:	mov	w9, #0x24                  	// #36
    d1b8:	ldr	x10, [x21]
    d1bc:	mov	x0, x21
    d1c0:	orr	w22, w8, w9
    d1c4:	ldr	x10, [x10, #136]
    d1c8:	blr	x10
    d1cc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d1d0:	add	x8, x8, #0x0
    d1d4:	mov	w9, #0x103                 	// #259
    d1d8:	stp	x8, xzr, [sp, #8]
    d1dc:	strh	w9, [sp, #24]
    d1e0:	ldr	x0, [x20, #8]
    d1e4:	add	x2, sp, #0x8
    d1e8:	mov	w1, #0xa                   	// #10
    d1ec:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
    d1f0:	eor	w23, w0, #0x1
    d1f4:	mov	w21, #0x1                   	// #1
    d1f8:	ldr	x0, [sp, #32]
    d1fc:	add	x8, sp, #0x20
    d200:	add	x8, x8, #0x10
    d204:	cmp	x0, x8
    d208:	b.eq	d210 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x85c>  // b.none
    d20c:	bl	0 <_ZdlPv>
    d210:	tbz	w23, #0, d260 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    d214:	ldr	x0, [x20, #8]
    d218:	mov	x1, x19
    d21c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d220:	mov	w21, w0
    d224:	tbnz	w0, #0, d260 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE+0x8ac>
    d228:	ldr	x0, [x20, #8]
    d22c:	ldr	x20, [x19]
    d230:	ldr	x8, [x0]
    d234:	ldr	x8, [x8, #48]
    d238:	blr	x8
    d23c:	mov	x2, x0
    d240:	mov	x0, x20
    d244:	mov	w1, w22
    d248:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    d24c:	add	x8, x0, #0x8
    d250:	cmp	x0, #0x0
    d254:	mov	w21, wzr
    d258:	csel	x8, xzr, x8, eq  // eq = none
    d25c:	str	x8, [x19]
    d260:	and	w0, w21, #0x1
    d264:	ldp	x20, x19, [sp, #112]
    d268:	ldp	x22, x21, [sp, #96]
    d26c:	ldr	x23, [sp, #80]
    d270:	ldp	x29, x30, [sp, #64]
    d274:	add	sp, sp, #0x80
    d278:	ret
    d27c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d280:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d284:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d288:	add	x0, x0, #0x0
    d28c:	add	x1, x1, #0x0
    d290:	add	x3, x3, #0x0
    d294:	mov	w2, #0x5b                  	// #91
    d298:	bl	0 <__assert_fail>

000000000000d29c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    d29c:	sub	sp, sp, #0x90
    d2a0:	stp	x29, x30, [sp, #64]
    d2a4:	str	x25, [sp, #80]
    d2a8:	stp	x24, x23, [sp, #96]
    d2ac:	stp	x22, x21, [sp, #112]
    d2b0:	stp	x20, x19, [sp, #128]
    d2b4:	add	x29, sp, #0x40
    d2b8:	ldr	x21, [x0, #8]
    d2bc:	mov	x20, x0
    d2c0:	mov	x19, x1
    d2c4:	mov	x0, x21
    d2c8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d2cc:	ldur	q0, [x0, #8]
    d2d0:	mov	x22, x0
    d2d4:	add	x8, sp, #0x20
    d2d8:	mov	x0, sp
    d2dc:	str	q0, [sp]
    d2e0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    d2e4:	ldp	x8, x9, [sp, #32]
    d2e8:	cmp	x9, #0x4
    d2ec:	b.eq	d3ac <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x110>  // b.none
    d2f0:	cmp	x9, #0x3
    d2f4:	b.ne	d3a4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>  // b.any
    d2f8:	ldrh	w10, [x8]
    d2fc:	ldrb	w11, [x8, #2]
    d300:	mov	w9, #0x736c                	// #29548
    d304:	mov	w12, #0x6c                  	// #108
    d308:	eor	w10, w10, w9
    d30c:	eor	w11, w11, w12
    d310:	orr	w10, w10, w11
    d314:	tst	w10, #0xffff
    d318:	b.eq	d444 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a8>  // b.none
    d31c:	ldrh	w11, [x8]
    d320:	ldrb	w12, [x8, #2]
    d324:	mov	w10, #0x72                  	// #114
    d328:	eor	w9, w11, w9
    d32c:	eor	w11, w12, w10
    d330:	orr	w9, w9, w11
    d334:	tst	w9, #0xffff
    d338:	b.eq	d454 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b8>  // b.none
    d33c:	ldrh	w9, [x8]
    d340:	ldrb	w11, [x8, #2]
    d344:	mov	w12, #0x7361                	// #29537
    d348:	eor	w9, w9, w12
    d34c:	eor	w10, w11, w10
    d350:	orr	w9, w9, w10
    d354:	tst	w9, #0xffff
    d358:	b.eq	d464 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c8>  // b.none
    d35c:	ldrh	w9, [x8]
    d360:	ldrb	w10, [x8, #2]
    d364:	mov	w11, #0x6f72                	// #28530
    d368:	mov	w12, #0x72                  	// #114
    d36c:	eor	w9, w9, w11
    d370:	eor	w10, w10, w12
    d374:	orr	w9, w9, w10
    d378:	tst	w9, #0xffff
    d37c:	b.eq	d474 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d8>  // b.none
    d380:	ldrh	w9, [x8]
    d384:	ldrb	w8, [x8, #2]
    d388:	mov	w10, #0x736d                	// #29549
    d38c:	mov	w11, #0x6c                  	// #108
    d390:	eor	w9, w9, w10
    d394:	eor	w8, w8, w11
    d398:	orr	w8, w9, w8
    d39c:	tst	w8, #0xffff
    d3a0:	b.eq	d484 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e8>  // b.none
    d3a4:	mov	w20, #0x1                   	// #1
    d3a8:	b	d71c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x480>
    d3ac:	ldr	w10, [x8]
    d3b0:	mov	w9, #0x7873                	// #30835
    d3b4:	movk	w9, #0x6274, lsl #16
    d3b8:	add	w11, w9, #0x2
    d3bc:	cmp	w10, w11
    d3c0:	b.eq	d44c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b0>  // b.none
    d3c4:	ldr	w11, [x8]
    d3c8:	mov	w10, #0x7873                	// #30835
    d3cc:	movk	w10, #0x6874, lsl #16
    d3d0:	add	w12, w10, #0x2
    d3d4:	cmp	w11, w12
    d3d8:	b.eq	d45c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1c0>  // b.none
    d3dc:	ldr	w12, [x8]
    d3e0:	mov	w11, #0x7873                	// #30835
    d3e4:	movk	w11, #0x7774, lsl #16
    d3e8:	add	w13, w11, #0x2
    d3ec:	cmp	w12, w13
    d3f0:	b.eq	d46c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d0>  // b.none
    d3f4:	ldr	w13, [x8]
    d3f8:	mov	w12, #0x7873                	// #30835
    d3fc:	movk	w12, #0x7874, lsl #16
    d400:	add	w14, w12, #0x2
    d404:	cmp	w13, w14
    d408:	b.eq	d47c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e0>  // b.none
    d40c:	ldr	w13, [x8]
    d410:	cmp	w13, w9
    d414:	b.eq	d48c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f0>  // b.none
    d418:	ldr	w9, [x8]
    d41c:	cmp	w9, w10
    d420:	b.eq	d494 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f8>  // b.none
    d424:	ldr	w9, [x8]
    d428:	cmp	w9, w11
    d42c:	b.eq	d49c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x200>  // b.none
    d430:	ldr	w8, [x8]
    d434:	cmp	w8, w12
    d438:	b.ne	d3a4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x108>  // b.any
    d43c:	mov	w24, #0xc                   	// #12
    d440:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d444:	mov	w24, wzr
    d448:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d44c:	mov	w24, #0x5                   	// #5
    d450:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d454:	mov	w24, #0x1                   	// #1
    d458:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d45c:	mov	w24, #0x6                   	// #6
    d460:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d464:	mov	w24, #0x2                   	// #2
    d468:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d46c:	mov	w24, #0x7                   	// #7
    d470:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d474:	mov	w24, #0x3                   	// #3
    d478:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d47c:	mov	w24, #0x8                   	// #8
    d480:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d484:	mov	w24, #0x4                   	// #4
    d488:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d48c:	mov	w24, #0x9                   	// #9
    d490:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d494:	mov	w24, #0xa                   	// #10
    d498:	b	d4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x204>
    d49c:	mov	w24, #0xb                   	// #11
    d4a0:	mov	x0, x22
    d4a4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d4a8:	ldr	x8, [x21]
    d4ac:	mov	x22, x0
    d4b0:	mov	x0, x21
    d4b4:	ldr	x8, [x8, #136]
    d4b8:	blr	x8
    d4bc:	ldr	x0, [x20, #8]
    d4c0:	mov	w1, #0x25                  	// #37
    d4c4:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d4c8:	tbnz	w0, #0, d4f4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x258>
    d4cc:	ldr	x0, [x20, #8]
    d4d0:	ldr	x8, [x0]
    d4d4:	ldr	x8, [x8, #40]
    d4d8:	blr	x8
    d4dc:	ldr	w8, [x0, #16]
    d4e0:	cbz	w8, d754 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x4b8>
    d4e4:	ldr	x8, [x0, #8]
    d4e8:	ldr	w8, [x8]
    d4ec:	cmp	w8, #0x4
    d4f0:	b.ne	d5fc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x360>  // b.any
    d4f4:	mov	x0, x21
    d4f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d4fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d500:	mov	x23, x0
    d504:	mov	x0, x21
    d508:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d50c:	ldr	w8, [x0]
    d510:	cmp	w8, #0x4
    d514:	b.eq	d540 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a4>  // b.none
    d518:	mov	x0, x21
    d51c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d520:	ldr	w8, [x0]
    d524:	cmp	w8, #0x11
    d528:	b.eq	d540 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a4>  // b.none
    d52c:	mov	x0, x21
    d530:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d534:	ldr	w8, [x0]
    d538:	cmp	w8, #0x2
    d53c:	b.ne	d6ec <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x450>  // b.any
    d540:	ldr	x0, [x20, #8]
    d544:	add	x1, x29, #0x18
    d548:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d54c:	tbnz	w0, #0, d718 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x47c>
    d550:	ldr	x21, [x29, #24]
    d554:	cbz	x21, d774 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x4d8>
    d558:	ldr	w8, [x21]
    d55c:	cmp	w8, #0x1
    d560:	b.ne	d630 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x394>  // b.any
    d564:	ldr	x0, [x20, #8]
    d568:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d56c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d570:	ldr	x8, [x20, #8]
    d574:	ldr	x23, [x21, #16]
    d578:	sub	x25, x0, #0x1
    d57c:	ldr	x9, [x8]
    d580:	mov	x0, x8
    d584:	ldr	x9, [x9, #48]
    d588:	blr	x9
    d58c:	mov	x21, x0
    d590:	mov	w0, #0x70                  	// #112
    d594:	bl	0 <_Znwm>
    d598:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d59c:	mov	x8, x0
    d5a0:	add	x9, x9, #0x0
    d5a4:	strb	wzr, [x8, #32]!
    d5a8:	str	x9, [x0]
    d5ac:	mov	w9, #0xa                   	// #10
    d5b0:	str	w9, [x0, #48]
    d5b4:	mov	w9, #0x1                   	// #1
    d5b8:	mov	x20, x0
    d5bc:	str	x21, [x0, #104]
    d5c0:	stp	w24, w23, [x0, #72]
    d5c4:	strb	w9, [x0, #80]
    d5c8:	stp	x22, x25, [x0, #56]
    d5cc:	stp	x8, xzr, [x0, #16]
    d5d0:	ldp	w8, w9, [x19, #8]
    d5d4:	cmp	w8, w9
    d5d8:	b.cs	d6ac <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x410>  // b.hs, b.nlast
    d5dc:	ldr	x10, [x19]
    d5e0:	cmp	w8, w9
    d5e4:	str	x20, [x10, w8, uxtw #3]
    d5e8:	b.cs	d6cc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x430>  // b.hs, b.nlast
    d5ec:	mov	w20, wzr
    d5f0:	add	w8, w8, #0x1
    d5f4:	str	w8, [x19, #8]
    d5f8:	b	d71c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x480>
    d5fc:	cmp	w24, #0x4
    d600:	b.hi	d63c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3a0>  // b.pmore
    d604:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d608:	add	x8, x8, #0x0
    d60c:	mov	w9, #0x103                 	// #259
    d610:	stp	x8, xzr, [sp]
    d614:	strh	w9, [sp, #16]
    d618:	ldr	x0, [x20, #8]
    d61c:	mov	x1, sp
    d620:	mov	x2, xzr
    d624:	mov	x3, xzr
    d628:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    d62c:	b	d718 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x47c>
    d630:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d634:	add	x8, x8, #0x0
    d638:	b	d6f4 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x458>
    d63c:	ldr	x0, [x20, #8]
    d640:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d644:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d648:	ldr	x8, [x20, #8]
    d64c:	sub	x23, x0, #0x1
    d650:	ldr	x9, [x8]
    d654:	mov	x0, x8
    d658:	ldr	x9, [x9, #48]
    d65c:	blr	x9
    d660:	mov	x21, x0
    d664:	mov	w0, #0x70                  	// #112
    d668:	bl	0 <_Znwm>
    d66c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d670:	mov	x8, x0
    d674:	add	x9, x9, #0x0
    d678:	mov	x20, x0
    d67c:	strb	wzr, [x8, #32]!
    d680:	str	x9, [x0]
    d684:	mov	w9, #0xa                   	// #10
    d688:	str	w9, [x0, #48]
    d68c:	str	x21, [x0, #104]
    d690:	stp	w24, wzr, [x0, #72]
    d694:	strb	wzr, [x0, #80]
    d698:	stp	x22, x23, [x0, #56]
    d69c:	stp	x8, xzr, [x0, #16]
    d6a0:	ldp	w8, w9, [x19, #8]
    d6a4:	cmp	w8, w9
    d6a8:	b.cc	d5dc <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x340>  // b.lo, b.ul, b.last
    d6ac:	mov	x0, x19
    d6b0:	mov	x1, xzr
    d6b4:	bl	0 <LLVMInitializeAArch64AsmParser>
    d6b8:	ldp	w8, w9, [x19, #8]
    d6bc:	ldr	x10, [x19]
    d6c0:	cmp	w8, w9
    d6c4:	str	x20, [x10, w8, uxtw #3]
    d6c8:	b.cc	d5ec <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x350>  // b.lo, b.ul, b.last
    d6cc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d6d0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d6d4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d6d8:	add	x0, x0, #0x0
    d6dc:	add	x1, x1, #0x0
    d6e0:	add	x3, x3, #0x0
    d6e4:	mov	w2, #0x43                  	// #67
    d6e8:	bl	0 <__assert_fail>
    d6ec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    d6f0:	add	x8, x8, #0x0
    d6f4:	mov	w9, #0x103                 	// #259
    d6f8:	stp	x8, xzr, [sp]
    d6fc:	strh	w9, [sp, #16]
    d700:	ldr	x0, [x20, #8]
    d704:	mov	x2, sp
    d708:	mov	x1, x23
    d70c:	mov	x3, xzr
    d710:	mov	x4, xzr
    d714:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    d718:	mov	w20, #0x2                   	// #2
    d71c:	ldr	x0, [sp, #32]
    d720:	add	x8, sp, #0x20
    d724:	add	x8, x8, #0x10
    d728:	cmp	x0, x8
    d72c:	b.eq	d734 <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x498>  // b.none
    d730:	bl	0 <_ZdlPv>
    d734:	mov	w0, w20
    d738:	ldp	x20, x19, [sp, #128]
    d73c:	ldp	x22, x21, [sp, #112]
    d740:	ldp	x24, x23, [sp, #96]
    d744:	ldr	x25, [sp, #80]
    d748:	ldp	x29, x30, [sp, #64]
    d74c:	add	sp, sp, #0x90
    d750:	ret
    d754:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d758:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d75c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d760:	add	x0, x0, #0x0
    d764:	add	x1, x1, #0x0
    d768:	add	x3, x3, #0x0
    d76c:	mov	w2, #0x99                  	// #153
    d770:	bl	0 <__assert_fail>
    d774:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    d778:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    d77c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d780:	add	x0, x0, #0x0
    d784:	add	x1, x1, #0x0
    d788:	add	x3, x3, #0x0
    d78c:	mov	w2, #0x69                  	// #105
    d790:	bl	0 <__assert_fail>

000000000000d794 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj>:
    d794:	sub	sp, sp, #0xe0
    d798:	stp	x29, x30, [sp, #128]
    d79c:	str	x27, [sp, #144]
    d7a0:	stp	x26, x25, [sp, #160]
    d7a4:	stp	x24, x23, [sp, #176]
    d7a8:	stp	x22, x21, [sp, #192]
    d7ac:	stp	x20, x19, [sp, #208]
    d7b0:	add	x29, sp, #0x80
    d7b4:	sub	w8, w2, #0xaf
    d7b8:	cmp	w8, #0x118
    d7bc:	mov	w21, #0x1                   	// #1
    d7c0:	b.hi	ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>  // b.pmore
    d7c4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    d7c8:	add	x9, x9, #0x0
    d7cc:	adr	x10, d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x50>
    d7d0:	ldrh	w11, [x9, x8, lsl #1]
    d7d4:	add	x10, x10, x11, lsl #2
    d7d8:	mov	x19, x1
    d7dc:	mov	x20, x0
    d7e0:	br	x10
    d7e4:	mov	x0, x20
    d7e8:	mov	x1, x19
    d7ec:	ldp	x20, x19, [sp, #208]
    d7f0:	ldp	x22, x21, [sp, #192]
    d7f4:	ldp	x24, x23, [sp, #176]
    d7f8:	ldp	x26, x25, [sp, #160]
    d7fc:	ldr	x27, [sp, #144]
    d800:	ldp	x29, x30, [sp, #128]
    d804:	add	sp, sp, #0xe0
    d808:	b	10640 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    d80c:	mov	x0, x20
    d810:	mov	x1, x19
    d814:	ldp	x20, x19, [sp, #208]
    d818:	ldp	x22, x21, [sp, #192]
    d81c:	ldp	x24, x23, [sp, #176]
    d820:	ldp	x26, x25, [sp, #160]
    d824:	ldr	x27, [sp, #144]
    d828:	ldp	x29, x30, [sp, #128]
    d82c:	add	sp, sp, #0xe0
    d830:	b	10b38 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb>
    d834:	mov	x0, x20
    d838:	mov	x1, x19
    d83c:	ldp	x20, x19, [sp, #208]
    d840:	ldp	x22, x21, [sp, #192]
    d844:	ldp	x24, x23, [sp, #176]
    d848:	ldp	x26, x25, [sp, #160]
    d84c:	ldr	x27, [sp, #144]
    d850:	ldp	x29, x30, [sp, #128]
    d854:	add	sp, sp, #0xe0
    d858:	b	109bc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    d85c:	mov	x0, x20
    d860:	mov	x1, x19
    d864:	ldp	x20, x19, [sp, #208]
    d868:	ldp	x22, x21, [sp, #192]
    d86c:	ldp	x24, x23, [sp, #176]
    d870:	ldp	x26, x25, [sp, #160]
    d874:	ldr	x27, [sp, #144]
    d878:	ldp	x29, x30, [sp, #128]
    d87c:	add	sp, sp, #0xe0
    d880:	b	fda8 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d884:	mov	x0, x20
    d888:	mov	x1, x19
    d88c:	ldp	x20, x19, [sp, #208]
    d890:	ldp	x22, x21, [sp, #192]
    d894:	ldp	x24, x23, [sp, #176]
    d898:	ldp	x26, x25, [sp, #160]
    d89c:	ldr	x27, [sp, #144]
    d8a0:	ldp	x29, x30, [sp, #128]
    d8a4:	add	sp, sp, #0xe0
    d8a8:	b	f3b0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d8ac:	mov	x0, x20
    d8b0:	mov	x1, x19
    d8b4:	ldp	x20, x19, [sp, #208]
    d8b8:	ldp	x22, x21, [sp, #192]
    d8bc:	ldp	x24, x23, [sp, #176]
    d8c0:	ldp	x26, x25, [sp, #160]
    d8c4:	ldr	x27, [sp, #144]
    d8c8:	ldp	x29, x30, [sp, #128]
    d8cc:	add	sp, sp, #0xe0
    d8d0:	b	f794 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>
    d8d4:	mov	x0, x20
    d8d8:	mov	x1, x19
    d8dc:	ldp	x20, x19, [sp, #208]
    d8e0:	ldp	x22, x21, [sp, #192]
    d8e4:	ldp	x24, x23, [sp, #176]
    d8e8:	ldp	x26, x25, [sp, #160]
    d8ec:	ldr	x27, [sp, #144]
    d8f0:	ldp	x29, x30, [sp, #128]
    d8f4:	add	sp, sp, #0xe0
    d8f8:	b	fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d8fc:	mov	x0, x20
    d900:	mov	x1, x19
    d904:	ldp	x20, x19, [sp, #208]
    d908:	ldp	x22, x21, [sp, #192]
    d90c:	ldp	x24, x23, [sp, #176]
    d910:	ldp	x26, x25, [sp, #160]
    d914:	ldr	x27, [sp, #144]
    d918:	ldp	x29, x30, [sp, #128]
    d91c:	add	sp, sp, #0xe0
    d920:	b	110f4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
    d924:	mov	x0, x20
    d928:	mov	x1, x19
    d92c:	ldp	x20, x19, [sp, #208]
    d930:	ldp	x22, x21, [sp, #192]
    d934:	ldp	x24, x23, [sp, #176]
    d938:	ldp	x26, x25, [sp, #160]
    d93c:	ldr	x27, [sp, #144]
    d940:	ldp	x29, x30, [sp, #128]
    d944:	add	sp, sp, #0xe0
    d948:	b	101c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    d94c:	ldr	x22, [x20, #8]
    d950:	mov	x0, x22
    d954:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d958:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d95c:	mov	x21, x0
    d960:	mov	x0, x22
    d964:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d968:	ldr	x8, [x20, #8]
    d96c:	mov	x23, x0
    d970:	mov	w1, #0x25                  	// #37
    d974:	mov	x0, x8
    d978:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    d97c:	tbnz	w0, #0, d994 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x200>
    d980:	ldr	w8, [x23]
    d984:	cmp	w8, #0x2
    d988:	b.eq	e638 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xea4>  // b.none
    d98c:	cmp	w8, #0x4
    d990:	b.ne	e6b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf24>  // b.any
    d994:	ldr	x0, [x20, #8]
    d998:	add	x1, x29, #0x18
    d99c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    d9a0:	tbnz	w0, #0, e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    d9a4:	ldr	x8, [x29, #24]
    d9a8:	cbz	x8, f28c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1af8>
    d9ac:	ldr	w9, [x8]
    d9b0:	cmp	w9, #0x1
    d9b4:	b.ne	e140 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x9ac>  // b.any
    d9b8:	ldr	x22, [x8, #16]
    d9bc:	cmp	w22, #0x10
    d9c0:	b.cc	e8b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1120>  // b.lo, b.ul, b.last
    d9c4:	mov	x8, sp
    d9c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    d9cc:	mov	w9, #0x3531                	// #13617
    d9d0:	b	ddc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x62c>
    d9d4:	ldr	x0, [x20, #8]
    d9d8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d9dc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    d9e0:	ldr	x23, [x20, #8]
    d9e4:	mov	x21, x0
    d9e8:	mov	x0, x23
    d9ec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    d9f0:	ldr	w8, [x0]
    d9f4:	cmp	w8, #0x2
    d9f8:	b.ne	e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>  // b.any
    d9fc:	ldur	q0, [x0, #8]
    da00:	sub	x8, x29, #0x38
    da04:	add	x0, sp, #0x20
    da08:	sub	x24, x29, #0x38
    da0c:	str	q0, [sp, #32]
    da10:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    da14:	ldp	x1, x2, [x29, #-56]
    da18:	mov	x0, x20
    da1c:	mov	w3, wzr
    da20:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    da24:	mov	w22, w0
    da28:	cbz	w0, e46c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcd8>
    da2c:	ldr	x8, [x23]
    da30:	mov	x0, x23
    da34:	ldr	x8, [x8, #136]
    da38:	blr	x8
    da3c:	mov	w23, wzr
    da40:	b	e470 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcdc>
    da44:	ldr	x22, [x20, #8]
    da48:	mov	x0, x22
    da4c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da50:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    da54:	mov	x21, x0
    da58:	mov	x0, x22
    da5c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da60:	ldr	w8, [x0]
    da64:	cmp	w8, #0x2
    da68:	b.ne	e2b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb1c>  // b.any
    da6c:	mov	x0, x22
    da70:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da74:	ldr	w8, [x0]
    da78:	cmp	w8, #0x3
    da7c:	b.eq	e24c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xab8>  // b.none
    da80:	cmp	w8, #0x2
    da84:	b.ne	f2dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b48>  // b.any
    da88:	ldp	x8, x9, [x0, #8]
    da8c:	b	e270 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xadc>
    da90:	ldr	x21, [x20, #8]
    da94:	mov	x0, x21
    da98:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    da9c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    daa0:	ldr	x8, [x20, #8]
    daa4:	mov	x22, x0
    daa8:	mov	w1, #0x25                  	// #37
    daac:	mov	x0, x8
    dab0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    dab4:	ldr	x8, [x20, #8]
    dab8:	mov	w23, w0
    dabc:	mov	w1, #0xd                   	// #13
    dac0:	mov	x0, x8
    dac4:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    dac8:	mov	w24, w0
    dacc:	mov	x0, x21
    dad0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dad4:	ldr	w8, [x0]
    dad8:	mov	x26, x0
    dadc:	cmp	w8, #0x4
    dae0:	b.eq	e14c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x9b8>  // b.none
    dae4:	cmp	w8, #0x6
    dae8:	b.eq	e16c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x9d8>  // b.none
    daec:	tbz	w23, #0, e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>
    daf0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    daf4:	add	x8, x8, #0x0
    daf8:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    dafc:	ldr	x22, [x20, #8]
    db00:	mov	x0, x22
    db04:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db08:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    db0c:	mov	x21, x0
    db10:	mov	x0, x22
    db14:	str	xzr, [sp, #32]
    db18:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db1c:	ldr	w8, [x0]
    db20:	cmp	w8, #0x25
    db24:	b.ne	db38 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x3a4>  // b.any
    db28:	ldr	x8, [x22]
    db2c:	mov	x0, x22
    db30:	ldr	x8, [x8, #136]
    db34:	blr	x8
    db38:	add	x1, sp, #0x20
    db3c:	mov	x0, x20
    db40:	bl	c9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    db44:	tbnz	w0, #0, e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    db48:	ldr	x0, [sp, #32]
    db4c:	cbz	x0, f2b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b20>
    db50:	ldr	w8, [x0]
    db54:	cmp	w8, #0x4
    db58:	b.ne	e2e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb4c>  // b.any
    db5c:	ldr	x9, [x0, #16]
    db60:	cbz	x9, f324 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b90>
    db64:	ldr	w22, [x0, #24]
    db68:	ldr	w8, [x9]
    db6c:	mov	x0, x9
    db70:	b	e2e4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb50>
    db74:	ldr	x0, [x20, #8]
    db78:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db7c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    db80:	ldr	x23, [x20, #8]
    db84:	mov	x21, x0
    db88:	mov	x0, x23
    db8c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    db90:	ldr	w8, [x0]
    db94:	cmp	w8, #0x2
    db98:	b.ne	e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>  // b.any
    db9c:	ldur	q0, [x0, #8]
    dba0:	sub	x8, x29, #0x38
    dba4:	add	x0, sp, #0x20
    dba8:	sub	x24, x29, #0x38
    dbac:	str	q0, [sp, #32]
    dbb0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    dbb4:	ldp	x1, x2, [x29, #-56]
    dbb8:	mov	x0, x20
    dbbc:	mov	w3, wzr
    dbc0:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    dbc4:	mov	w22, w0
    dbc8:	cbz	w0, e4f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd60>
    dbcc:	ldr	x8, [x23]
    dbd0:	mov	x0, x23
    dbd4:	ldr	x8, [x8, #136]
    dbd8:	blr	x8
    dbdc:	mov	w23, wzr
    dbe0:	b	e4f8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd64>
    dbe4:	ldr	x22, [x20, #8]
    dbe8:	mov	x0, x22
    dbec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dbf0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dbf4:	mov	x21, x0
    dbf8:	mov	x0, x22
    dbfc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dc00:	ldr	w8, [x0]
    dc04:	cmp	w8, #0x2
    dc08:	b.ne	dfc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x834>  // b.any
    dc0c:	mov	x23, x0
    dc10:	ldr	x0, [x0, #8]
    dc14:	ldr	x1, [x23, #16]
    dc18:	bl	0 <_ZN4llvm14AArch64PSBHint15lookupPSBByNameENS_9StringRefE>
    dc1c:	cbz	x0, dfc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x834>
    dc20:	ldr	x8, [x22]
    dc24:	mov	x24, x0
    dc28:	mov	x0, x22
    dc2c:	ldr	x8, [x8, #136]
    dc30:	blr	x8
    dc34:	ldr	x0, [x20, #8]
    dc38:	ldrh	w24, [x24, #8]
    dc3c:	ldp	x25, x23, [x23, #8]
    dc40:	ldr	x8, [x0]
    dc44:	ldr	x8, [x8, #48]
    dc48:	blr	x8
    dc4c:	mov	x22, x0
    dc50:	mov	w0, #0x70                  	// #112
    dc54:	bl	0 <_Znwm>
    dc58:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    dc5c:	mov	x8, x0
    dc60:	add	x9, x9, #0x0
    dc64:	mov	x20, x0
    dc68:	strb	wzr, [x8, #32]!
    dc6c:	str	x9, [x0]
    dc70:	mov	w9, #0xd                   	// #13
    dc74:	b	e694 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf00>
    dc78:	ldr	x21, [x20, #8]
    dc7c:	mov	x0, x21
    dc80:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dc84:	ldr	x8, [x20, #184]
    dc88:	mov	x22, x0
    dc8c:	cmp	x8, #0x3
    dc90:	b.ne	dcc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x534>  // b.any
    dc94:	ldr	x8, [x20, #176]
    dc98:	mov	w10, #0x7374                	// #29556
    dc9c:	mov	w11, #0x62                  	// #98
    dca0:	ldrh	w9, [x8]
    dca4:	ldrb	w8, [x8, #2]
    dca8:	eor	w9, w9, w10
    dcac:	eor	w8, w8, w11
    dcb0:	orr	w8, w9, w8
    dcb4:	tst	w8, #0xffff
    dcb8:	b.ne	dcc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x534>  // b.any
    dcbc:	ldr	w8, [x22]
    dcc0:	cmp	w8, #0x2
    dcc4:	b.ne	efa4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1810>  // b.any
    dcc8:	ldr	x0, [x20, #8]
    dccc:	mov	w1, #0x25                  	// #37
    dcd0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    dcd4:	tbnz	w0, #0, dcec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x558>
    dcd8:	ldr	w8, [x22]
    dcdc:	cmp	w8, #0x2
    dce0:	b.eq	e6e8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf54>  // b.none
    dce4:	cmp	w8, #0x4
    dce8:	b.ne	dfc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x834>  // b.any
    dcec:	ldr	x0, [x20, #8]
    dcf0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dcf4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dcf8:	ldr	x8, [x20, #8]
    dcfc:	mov	x21, x0
    dd00:	add	x1, sp, #0x20
    dd04:	mov	x0, x8
    dd08:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    dd0c:	tbnz	w0, #0, e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    dd10:	ldr	x22, [sp, #32]
    dd14:	cbz	x22, f28c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1af8>
    dd18:	ldr	w8, [x22]
    dd1c:	cmp	w8, #0x1
    dd20:	b.ne	e770 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfdc>  // b.any
    dd24:	ldr	x0, [x22, #16]
    dd28:	cmp	x0, #0x10
    dd2c:	b.cc	e8f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1160>  // b.lo, b.ul, b.last
    dd30:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    dd34:	add	x8, x8, #0x0
    dd38:	b	e2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb24>
    dd3c:	ldr	x22, [x20, #8]
    dd40:	mov	x0, x22
    dd44:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dd48:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dd4c:	mov	x21, x0
    dd50:	mov	x0, x22
    dd54:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dd58:	ldr	x8, [x20, #8]
    dd5c:	mov	x23, x0
    dd60:	mov	w1, #0x25                  	// #37
    dd64:	mov	x0, x8
    dd68:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    dd6c:	tbnz	w0, #0, dd84 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x5f0>
    dd70:	ldr	w8, [x23]
    dd74:	cmp	w8, #0x2
    dd78:	b.eq	e6ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf18>  // b.none
    dd7c:	cmp	w8, #0x4
    dd80:	b.ne	e6b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf24>  // b.any
    dd84:	ldr	x0, [x20, #8]
    dd88:	add	x1, x29, #0x18
    dd8c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    dd90:	tbnz	w0, #0, e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    dd94:	ldr	x8, [x29, #24]
    dd98:	cbz	x8, f28c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1af8>
    dd9c:	ldr	w9, [x8]
    dda0:	cmp	w9, #0x1
    dda4:	b.ne	e140 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x9ac>  // b.any
    dda8:	ldr	x22, [x8, #16]
    ddac:	cmp	w22, #0x20
    ddb0:	b.cc	e8d8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1144>  // b.lo, b.ul, b.last
    ddb4:	mov	x8, sp
    ddb8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    ddbc:	mov	w9, #0x3133                	// #12595
    ddc0:	mov	w10, #0x2                   	// #2
    ddc4:	add	x19, x8, #0x10
    ddc8:	add	x3, x3, #0x0
    ddcc:	mov	x0, sp
    ddd0:	mov	w4, #0x22                  	// #34
    ddd4:	mov	x1, xzr
    ddd8:	mov	x2, xzr
    dddc:	strh	w9, [sp, #16]
    dde0:	stp	x19, x10, [sp]
    dde4:	strb	wzr, [sp, #18]
    dde8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
    ddec:	add	x8, sp, #0x20
    ddf0:	add	x21, x8, #0x10
    ddf4:	str	x21, [sp, #32]
    ddf8:	mov	x8, x0
    ddfc:	ldr	x9, [x8], #16
    de00:	cmp	x9, x8
    de04:	b.eq	e91c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1188>  // b.none
    de08:	str	x9, [sp, #32]
    de0c:	ldr	x9, [x0, #16]
    de10:	str	x9, [sp, #48]
    de14:	b	e924 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1190>
    de18:	ldr	x0, [x20, #8]
    de1c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    de20:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    de24:	ldr	x21, [x20, #8]
    de28:	mov	x22, x0
    de2c:	mov	x0, x21
    de30:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    de34:	ldr	w8, [x0]
    de38:	cmp	w8, #0x2
    de3c:	b.ne	e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>  // b.any
    de40:	ldur	q0, [x0, #8]
    de44:	sub	x8, x29, #0x38
    de48:	add	x0, sp, #0x20
    de4c:	sub	x24, x29, #0x38
    de50:	str	q0, [sp, #32]
    de54:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    de58:	ldp	x1, x2, [x29, #-56]
    de5c:	mov	x0, x20
    de60:	mov	w3, wzr
    de64:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    de68:	mov	w23, w0
    de6c:	cbz	w0, e5ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe18>
    de70:	ldr	x8, [x21]
    de74:	mov	x0, x21
    de78:	ldr	x8, [x8, #136]
    de7c:	blr	x8
    de80:	mov	w25, wzr
    de84:	b	e5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe1c>
    de88:	ldr	x0, [x20, #8]
    de8c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    de90:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    de94:	str	xzr, [sp, #32]
    de98:	ldr	x8, [x20, #8]
    de9c:	mov	x21, x0
    dea0:	mov	x0, x8
    dea4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dea8:	ldr	w8, [x0]
    deac:	cmp	w8, #0x13
    deb0:	b.eq	e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>  // b.none
    deb4:	ldr	x0, [x20, #8]
    deb8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    debc:	ldr	w8, [x0]
    dec0:	cmp	w8, #0x25
    dec4:	b.ne	ded8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x744>  // b.any
    dec8:	ldr	x0, [x20, #8]
    decc:	ldr	x8, [x0]
    ded0:	ldr	x8, [x8, #136]
    ded4:	blr	x8
    ded8:	add	x1, sp, #0x20
    dedc:	mov	x0, x20
    dee0:	bl	c9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    dee4:	tbnz	w0, #0, e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    dee8:	ldr	x0, [sp, #32]
    deec:	cbz	x0, f2b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b20>
    def0:	ldr	w8, [x0]
    def4:	cmp	w8, #0x4
    def8:	b.ne	e7a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1010>  // b.any
    defc:	ldr	x9, [x0, #16]
    df00:	cbz	x9, f324 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b90>
    df04:	ldr	w22, [x0, #24]
    df08:	ldr	w8, [x9]
    df0c:	mov	x0, x9
    df10:	b	e7a8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1014>
    df14:	ldr	x22, [x20, #8]
    df18:	mov	x0, x22
    df1c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    df20:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    df24:	mov	x21, x0
    df28:	mov	x0, x22
    df2c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    df30:	ldr	w8, [x0]
    df34:	cmp	w8, #0x2
    df38:	b.ne	dfc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x834>  // b.any
    df3c:	mov	x23, x0
    df40:	ldr	x0, [x0, #8]
    df44:	ldr	x1, [x23, #16]
    df48:	bl	0 <_ZN4llvm14AArch64BTIHint15lookupBTIByNameENS_9StringRefE>
    df4c:	cbz	x0, dfc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x834>
    df50:	ldr	x8, [x22]
    df54:	mov	x24, x0
    df58:	mov	x0, x22
    df5c:	ldr	x8, [x8, #136]
    df60:	blr	x8
    df64:	ldr	x0, [x20, #8]
    df68:	ldrh	w24, [x24, #8]
    df6c:	ldp	x25, x23, [x23, #8]
    df70:	ldr	x8, [x0]
    df74:	ldr	x8, [x8, #48]
    df78:	blr	x8
    df7c:	mov	x22, x0
    df80:	mov	w0, #0x70                  	// #112
    df84:	bl	0 <_Znwm>
    df88:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    df8c:	mov	x8, x0
    df90:	add	x9, x9, #0x0
    df94:	strb	wzr, [x8, #32]!
    df98:	str	x9, [x0]
    df9c:	mov	w9, #0xe                   	// #14
    dfa0:	str	w9, [x0, #48]
    dfa4:	lsl	w9, w24, #1
    dfa8:	orr	w9, w9, #0x20
    dfac:	mov	x20, x0
    dfb0:	str	x22, [x0, #104]
    dfb4:	stp	x21, x25, [x0, #64]
    dfb8:	str	x21, [x0, #56]
    dfbc:	stp	x8, xzr, [x0, #16]
    dfc0:	stp	w23, w9, [x0, #80]
    dfc4:	b	ef4c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17b8>
    dfc8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    dfcc:	add	x8, x8, #0x0
    dfd0:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    dfd4:	ldr	x22, [x20, #8]
    dfd8:	mov	x0, x22
    dfdc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dfe0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    dfe4:	mov	x21, x0
    dfe8:	mov	x0, x22
    dfec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    dff0:	ldr	w8, [x0]
    dff4:	cmp	w8, #0x2
    dff8:	b.eq	e19c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xa08>  // b.none
    dffc:	cmp	w8, #0x25
    e000:	b.ne	e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>  // b.any
    e004:	ldr	x8, [x22]
    e008:	mov	x0, x22
    e00c:	ldr	x8, [x8, #136]
    e010:	blr	x8
    e014:	ldr	x0, [x20, #8]
    e018:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e01c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e020:	mov	x21, x0
    e024:	sub	x1, x29, #0x38
    e028:	mov	x0, x22
    e02c:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    e030:	tbnz	w0, #0, e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    e034:	ldur	x8, [x29, #-56]
    e038:	cbz	x8, f28c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1af8>
    e03c:	ldr	w9, [x8]
    e040:	cmp	w9, #0x1
    e044:	b.ne	e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>  // b.any
    e048:	ldr	x22, [x8, #16]
    e04c:	b	e1cc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xa38>
    e050:	ldr	x0, [x20, #8]
    e054:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e058:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e05c:	mov	x22, x0
    e060:	mov	x1, sp
    e064:	sub	x2, x29, #0x38
    e068:	mov	w3, #0x2                   	// #2
    e06c:	mov	x0, x20
    e070:	stp	xzr, xzr, [x29, #-56]
    e074:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    e078:	mov	w21, w0
    e07c:	cbnz	w0, ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>
    e080:	ldp	x1, x2, [x29, #-56]
    e084:	add	x0, sp, #0x20
    e088:	mov	w3, #0x2                   	// #2
    e08c:	mov	w24, #0x2                   	// #2
    e090:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    e094:	ldrb	w8, [sp, #40]
    e098:	cbz	w8, e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>
    e09c:	ldr	x0, [x20, #8]
    e0a0:	ldr	w25, [sp, #36]
    e0a4:	ldr	w26, [sp]
    e0a8:	ldr	x8, [x0]
    e0ac:	ldr	x8, [x8, #48]
    e0b0:	blr	x8
    e0b4:	mov	x23, x0
    e0b8:	mov	w0, #0x70                  	// #112
    e0bc:	bl	0 <_Znwm>
    e0c0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e0c4:	mov	x8, x0
    e0c8:	add	x9, x9, #0x0
    e0cc:	strb	wzr, [x8, #32]!
    e0d0:	str	x9, [x0]
    e0d4:	mov	w9, #0x3                   	// #3
    e0d8:	str	w9, [x0, #48]
    e0dc:	str	x23, [x0, #104]
    e0e0:	stp	w26, w24, [x0, #72]
    e0e4:	stur	xzr, [x0, #89]
    e0e8:	stur	xzr, [x0, #84]
    e0ec:	stp	x22, x22, [x0, #56]
    e0f0:	str	w25, [x0, #80]
    e0f4:	stp	x8, xzr, [x0, #16]
    e0f8:	ldp	w8, w9, [x19, #8]
    e0fc:	mov	x21, x0
    e100:	cmp	w8, w9
    e104:	b.cs	f198 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1a04>  // b.hs, b.nlast
    e108:	ldr	x10, [x19]
    e10c:	cmp	w8, w9
    e110:	str	x21, [x10, w8, uxtw #3]
    e114:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    e118:	add	w8, w8, #0x1
    e11c:	mov	x0, x20
    e120:	mov	x1, x19
    e124:	str	w8, [x19, #8]
    e128:	bl	c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    e12c:	cmp	w0, #0x2
    e130:	cset	w8, eq  // eq = none
    e134:	lsl	w21, w8, #1
    e138:	strb	wzr, [sp, #40]
    e13c:	b	ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>
    e140:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e144:	add	x8, x8, #0x0
    e148:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    e14c:	ldr	x8, [x26, #16]
    e150:	cmp	x8, #0x2
    e154:	b.cc	e16c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x9d8>  // b.lo, b.ul, b.last
    e158:	ldr	x8, [x26, #8]
    e15c:	mov	w9, #0x7830                	// #30768
    e160:	ldrh	w8, [x8]
    e164:	cmp	w8, w9
    e168:	b.eq	e9e4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1250>  // b.none
    e16c:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    e170:	sub	x8, x29, #0x38
    e174:	mov	x27, x0
    e178:	add	x25, x8, #0x8
    e17c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    e180:	mov	x23, x0
    e184:	cmp	x0, x27
    e188:	b.eq	e374 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xbe0>  // b.none
    e18c:	mov	x0, x25
    e190:	mov	x1, x27
    e194:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
    e198:	b	e380 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xbec>
    e19c:	ldp	x8, x1, [x0, #8]
    e1a0:	mov	x0, x8
    e1a4:	bl	0 <_ZN4llvm21AArch64SVEPredPattern22lookupSVEPREDPATByNameENS_9StringRefE>
    e1a8:	cbz	x0, e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>
    e1ac:	ldr	x8, [x22]
    e1b0:	mov	x23, x0
    e1b4:	mov	x0, x22
    e1b8:	ldr	x8, [x8, #136]
    e1bc:	blr	x8
    e1c0:	ldrh	w22, [x23, #8]
    e1c4:	cmp	x22, #0x20
    e1c8:	b.cs	f344 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1bb0>  // b.hs, b.nlast
    e1cc:	ldr	x0, [x20, #8]
    e1d0:	ldr	x8, [x0]
    e1d4:	ldr	x8, [x8, #48]
    e1d8:	blr	x8
    e1dc:	mov	x1, x0
    e1e0:	mov	x0, x22
    e1e4:	mov	w2, wzr
    e1e8:	bl	0 <_ZN4llvm14MCConstantExpr6createElRNS_9MCContextEb>
    e1ec:	ldr	x8, [x20, #8]
    e1f0:	mov	x22, x0
    e1f4:	mov	x0, x8
    e1f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e1fc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e200:	ldr	x8, [x20, #8]
    e204:	mov	x23, x0
    e208:	ldr	x9, [x8]
    e20c:	mov	x0, x8
    e210:	ldr	x9, [x9, #48]
    e214:	blr	x9
    e218:	mov	x24, x0
    e21c:	mov	w0, #0x70                  	// #112
    e220:	bl	0 <_Znwm>
    e224:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e228:	mov	x8, x0
    e22c:	add	x9, x9, #0x0
    e230:	mov	x20, x0
    e234:	strb	wzr, [x8, #32]!
    e238:	str	x9, [x0]
    e23c:	str	wzr, [x0, #48]
    e240:	str	x24, [x0, #104]
    e244:	str	x22, [x0, #72]
    e248:	b	e8ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1118>
    e24c:	ldp	x8, x9, [x0, #8]
    e250:	subs	x10, x9, #0x1
    e254:	cset	w11, cs  // cs = hs, nlast
    e258:	cinc	x8, x8, cs  // cs = hs, nlast
    e25c:	cmp	x10, x11
    e260:	csel	x10, x10, x11, hi  // hi = pmore
    e264:	cmp	x9, x10
    e268:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    e26c:	sub	x9, x9, x11
    e270:	cbz	x9, f2fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b68>
    e274:	ldrb	w10, [x8]
    e278:	orr	w10, w10, #0x20
    e27c:	cmp	w10, #0x63
    e280:	b.ne	e2b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb1c>  // b.any
    e284:	add	x0, x8, #0x1
    e288:	sub	x1, x9, #0x1
    e28c:	sub	x3, x29, #0x38
    e290:	mov	w2, #0xa                   	// #10
    e294:	bl	0 <_ZN4llvm20getAsUnsignedIntegerENS_9StringRefEjRy>
    e298:	tbnz	w0, #0, e2b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb1c>
    e29c:	ldur	x24, [x29, #-56]
    e2a0:	lsr	x8, x24, #32
    e2a4:	cbnz	x8, e2b0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb1c>
    e2a8:	cmp	w24, #0x10
    e2ac:	b.cc	ecd0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x153c>  // b.lo, b.ul, b.last
    e2b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e2b4:	add	x8, x8, #0x0
    e2b8:	mov	w9, #0x103                 	// #259
    e2bc:	stp	x8, xzr, [x29, #-56]
    e2c0:	sturh	w9, [x29, #-40]
    e2c4:	ldr	x0, [x20, #8]
    e2c8:	sub	x2, x29, #0x38
    e2cc:	mov	x1, x21
    e2d0:	mov	x3, xzr
    e2d4:	mov	x4, xzr
    e2d8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    e2dc:	b	e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    e2e0:	mov	w22, #0xfff                 	// #4095
    e2e4:	cmp	w8, #0x2
    e2e8:	b.ne	e320 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb8c>  // b.any
    e2ec:	ldrh	w8, [x0, #16]
    e2f0:	mov	x9, xzr
    e2f4:	cmp	w22, #0xfff
    e2f8:	b.ne	e77c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfe8>  // b.any
    e2fc:	cbnz	w8, e77c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfe8>
    e300:	ldr	x0, [x20, #8]
    e304:	ldr	x22, [sp, #32]
    e308:	ldr	x8, [x0]
    e30c:	ldr	x8, [x8, #48]
    e310:	blr	x8
    e314:	mov	x2, x0
    e318:	mov	w1, #0x11                  	// #17
    e31c:	b	e7dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1048>
    e320:	sub	x1, x29, #0x38
    e324:	mov	x2, xzr
    e328:	mov	x3, xzr
    e32c:	stp	xzr, xzr, [x29, #-56]
    e330:	stur	wzr, [x29, #-32]
    e334:	stur	xzr, [x29, #-40]
    e338:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
    e33c:	tbz	w0, #0, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e340:	ldur	x8, [x29, #-48]
    e344:	cbnz	x8, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e348:	ldur	x8, [x29, #-56]
    e34c:	cmp	w22, #0xfff
    e350:	b.ne	e358 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xbc4>  // b.any
    e354:	cbz	x8, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e358:	cbz	x8, f0ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1918>
    e35c:	ldrh	w8, [x8, #16]
    e360:	ldur	x9, [x29, #-40]
    e364:	cmp	w22, #0xfff
    e368:	b.eq	e2f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb60>  // b.none
    e36c:	cbnz	w8, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e370:	b	e2f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb60>
    e374:	mov	x0, x25
    e378:	mov	x1, x27
    e37c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
    e380:	ldp	x1, x2, [x26, #8]
    e384:	sub	x8, x29, #0x18
    e388:	sub	x0, x29, #0x38
    e38c:	mov	w3, #0x3                   	// #3
    e390:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
    e394:	ldurb	w8, [x29, #-16]
    e398:	and	w9, w8, #0xfffffffd
    e39c:	sturb	w9, [x29, #-16]
    e3a0:	tbnz	w8, #0, e3ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc18>
    e3a4:	mov	w8, #0x1                   	// #1
    e3a8:	b	e3b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc24>
    e3ac:	ldur	x8, [x29, #-24]
    e3b0:	stur	xzr, [x29, #-24]
    e3b4:	orr	x8, x8, #0x1
    e3b8:	tst	x8, #0xfffffffffffffffe
    e3bc:	and	x26, x8, #0xfffffffffffffffe
    e3c0:	cset	w9, ne  // ne = any
    e3c4:	orr	x9, x26, x9
    e3c8:	str	x9, [x29, #24]
    e3cc:	cbz	x26, e3f0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xc5c>
    e3d0:	orr	x8, x8, #0x1
    e3d4:	add	x0, sp, #0x20
    e3d8:	str	x8, [sp, #32]
    e3dc:	str	xzr, [x29, #24]
    e3e0:	bl	0 <LLVMInitializeAArch64AsmParser>
    e3e4:	ldr	x8, [sp, #32]
    e3e8:	cbnz	x8, f31c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b88>
    e3ec:	ldr	x9, [x29, #24]
    e3f0:	cbnz	x9, f2d4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b40>
    e3f4:	cbz	x26, e450 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcbc>
    e3f8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e3fc:	add	x8, x8, #0x0
    e400:	mov	w9, #0x103                 	// #259
    e404:	stp	x8, xzr, [sp, #32]
    e408:	strh	w9, [sp, #48]
    e40c:	ldr	x0, [x20, #8]
    e410:	add	x1, sp, #0x20
    e414:	mov	x2, xzr
    e418:	mov	x3, xzr
    e41c:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    e420:	ldurb	w8, [x29, #-16]
    e424:	tbnz	w8, #1, f2ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b18>
    e428:	tbz	w8, #0, e444 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcb0>
    e42c:	ldur	x0, [x29, #-24]
    e430:	cbz	x0, e440 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcac>
    e434:	ldr	x8, [x0]
    e438:	ldr	x8, [x8, #8]
    e43c:	blr	x8
    e440:	stur	xzr, [x29, #-24]
    e444:	sub	x0, x29, #0x38
    e448:	bl	0 <LLVMInitializeAArch64AsmParser>
    e44c:	b	e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    e450:	tbz	w24, #0, ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12e4>
    e454:	ldur	x8, [x29, #-48]
    e458:	cmp	x23, x8
    e45c:	b.eq	ea6c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12d8>  // b.none
    e460:	mov	x0, x25
    e464:	bl	0 <_ZN4llvm6detail9IEEEFloat10changeSignEv>
    e468:	b	ea78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12e4>
    e46c:	mov	w23, #0x1                   	// #1
    e470:	ldur	x0, [x29, #-56]
    e474:	add	x8, x24, #0x10
    e478:	cmp	x0, x8
    e47c:	b.eq	e484 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xcf0>  // b.none
    e480:	bl	0 <_ZdlPv>
    e484:	cbnz	w23, e510 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd7c>
    e488:	ldr	x0, [x20, #8]
    e48c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e490:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e494:	ldr	x8, [x20, #8]
    e498:	mov	x23, x0
    e49c:	ldr	x9, [x8]
    e4a0:	mov	x0, x8
    e4a4:	ldr	x9, [x9, #48]
    e4a8:	blr	x9
    e4ac:	mov	x24, x0
    e4b0:	mov	w0, #0x70                  	// #112
    e4b4:	bl	0 <_Znwm>
    e4b8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e4bc:	mov	x8, x0
    e4c0:	add	x9, x9, #0x0
    e4c4:	strb	wzr, [x8, #32]!
    e4c8:	str	x9, [x0]
    e4cc:	mov	w9, #0x3                   	// #3
    e4d0:	str	w9, [x0, #48]
    e4d4:	mov	w9, #0x2                   	// #2
    e4d8:	mov	x20, x0
    e4dc:	str	x24, [x0, #104]
    e4e0:	stp	w22, wzr, [x0, #72]
    e4e4:	stp	wzr, w9, [x0, #80]
    e4e8:	strb	wzr, [x0, #96]
    e4ec:	str	xzr, [x0, #88]
    e4f0:	b	e8ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1118>
    e4f4:	mov	w23, #0x1                   	// #1
    e4f8:	ldur	x0, [x29, #-56]
    e4fc:	add	x8, x24, #0x10
    e500:	cmp	x0, x8
    e504:	b.eq	e50c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd78>  // b.none
    e508:	bl	0 <_ZdlPv>
    e50c:	cbz	w23, e518 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xd84>
    e510:	mov	w21, #0x1                   	// #1
    e514:	b	ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>
    e518:	ldr	x0, [x20, #8]
    e51c:	mov	w1, #0x19                  	// #25
    e520:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e524:	ldr	x8, [x20, #8]
    e528:	tbz	w0, #0, e848 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10b4>
    e52c:	mov	w1, #0x25                  	// #37
    e530:	mov	x0, x8
    e534:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    e538:	ldr	x0, [x20, #8]
    e53c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e540:	ldr	w8, [x0]
    e544:	cmp	w8, #0x4
    e548:	b.ne	e578 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xde4>  // b.any
    e54c:	ldr	x0, [x20, #8]
    e550:	add	x1, sp, #0x20
    e554:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
    e558:	tbnz	w0, #0, e578 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xde4>
    e55c:	ldr	x8, [sp, #32]
    e560:	cbz	x8, f28c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1af8>
    e564:	ldr	w9, [x8]
    e568:	cmp	w9, #0x1
    e56c:	b.ne	e578 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xde4>  // b.any
    e570:	ldr	x8, [x8, #16]
    e574:	cbz	x8, f16c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19d8>
    e578:	ldr	x0, [x20, #8]
    e57c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e580:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e584:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e588:	add	x8, x8, #0x0
    e58c:	mov	w9, #0x103                 	// #259
    e590:	stp	x8, xzr, [x29, #-56]
    e594:	sturh	w9, [x29, #-40]
    e598:	ldr	x8, [x20, #8]
    e59c:	mov	x1, x0
    e5a0:	sub	x2, x29, #0x38
    e5a4:	mov	x0, x8
    e5a8:	b	e2d0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb3c>
    e5ac:	mov	w25, #0x1                   	// #1
    e5b0:	ldur	x0, [x29, #-56]
    e5b4:	add	x8, x24, #0x10
    e5b8:	cmp	x0, x8
    e5bc:	b.eq	e5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xe30>  // b.none
    e5c0:	bl	0 <_ZdlPv>
    e5c4:	mov	w21, #0x1                   	// #1
    e5c8:	cbnz	w25, ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>
    e5cc:	ldr	x0, [x20, #8]
    e5d0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e5d4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e5d8:	ldr	x8, [x20, #8]
    e5dc:	mov	x24, x0
    e5e0:	ldr	x9, [x8]
    e5e4:	mov	x0, x8
    e5e8:	ldr	x9, [x9, #48]
    e5ec:	blr	x9
    e5f0:	mov	x25, x0
    e5f4:	mov	w0, #0x70                  	// #112
    e5f8:	bl	0 <_Znwm>
    e5fc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e600:	mov	x8, x0
    e604:	add	x9, x9, #0x0
    e608:	strb	wzr, [x8, #32]!
    e60c:	str	x9, [x0]
    e610:	mov	w9, #0x3                   	// #3
    e614:	mov	x20, x0
    e618:	str	w9, [x0, #48]
    e61c:	str	x25, [x0, #104]
    e620:	stp	w23, wzr, [x0, #72]
    e624:	stp	wzr, w21, [x0, #80]
    e628:	strb	wzr, [x0, #96]
    e62c:	str	xzr, [x0, #88]
    e630:	str	x22, [x0, #56]
    e634:	b	ef44 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17b0>
    e638:	ldp	x0, x1, [x23, #8]
    e63c:	bl	0 <_ZN4llvm14AArch64SVEPRFM19lookupSVEPRFMByNameENS_9StringRefE>
    e640:	cbz	x0, e6b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf24>
    e644:	ldr	x8, [x22]
    e648:	ldrh	w24, [x0, #8]
    e64c:	mov	x0, x22
    e650:	ldr	x8, [x8, #136]
    e654:	blr	x8
    e658:	ldr	x0, [x20, #8]
    e65c:	ldp	x25, x23, [x23, #8]
    e660:	ldr	x8, [x0]
    e664:	ldr	x8, [x8, #48]
    e668:	blr	x8
    e66c:	mov	x22, x0
    e670:	mov	w0, #0x70                  	// #112
    e674:	bl	0 <_Znwm>
    e678:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e67c:	mov	x8, x0
    e680:	add	x9, x9, #0x0
    e684:	mov	x20, x0
    e688:	strb	wzr, [x8, #32]!
    e68c:	str	x9, [x0]
    e690:	mov	w9, #0x9                   	// #9
    e694:	str	w9, [x0, #48]
    e698:	str	x22, [x0, #104]
    e69c:	str	x25, [x0, #72]
    e6a0:	str	w24, [x0, #84]
    e6a4:	str	w23, [x0, #80]
    e6a8:	b	e9dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1248>
    e6ac:	ldp	x0, x1, [x23, #8]
    e6b0:	bl	0 <_ZN4llvm11AArch64PRFM16lookupPRFMByNameENS_9StringRefE>
    e6b4:	cbnz	x0, e644 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xeb0>
    e6b8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e6bc:	add	x8, x8, #0x0
    e6c0:	mov	w9, #0x103                 	// #259
    e6c4:	stp	x8, xzr, [x29, #-56]
    e6c8:	sturh	w9, [x29, #-40]
    e6cc:	ldr	x0, [x20, #8]
    e6d0:	sub	x1, x29, #0x38
    e6d4:	mov	x2, xzr
    e6d8:	mov	x3, xzr
    e6dc:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    e6e0:	mov	w21, #0x2                   	// #2
    e6e4:	b	ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>
    e6e8:	ldp	x0, x1, [x22, #8]
    e6ec:	bl	0 <_ZN4llvm10AArch64TSB15lookupTSBByNameENS_9StringRefE>
    e6f0:	ldp	x8, x1, [x22, #8]
    e6f4:	mov	x23, x0
    e6f8:	mov	x0, x8
    e6fc:	bl	0 <_ZN4llvm9AArch64DB14lookupDBByNameENS_9StringRefE>
    e700:	ldr	x8, [x20, #184]
    e704:	cmp	x8, #0x3
    e708:	b.ne	e754 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfc0>  // b.any
    e70c:	ldr	x8, [x20, #176]
    e710:	mov	w12, #0x7369                	// #29545
    e714:	mov	w9, #0x62                  	// #98
    e718:	ldrh	w10, [x8]
    e71c:	ldrb	w11, [x8, #2]
    e720:	eor	w10, w10, w12
    e724:	eor	w11, w11, w9
    e728:	orr	w10, w10, w11
    e72c:	tst	w10, #0xffff
    e730:	b.eq	ee2c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1698>  // b.none
    e734:	ldrh	w10, [x8]
    e738:	ldrb	w8, [x8, #2]
    e73c:	mov	w11, #0x7374                	// #29556
    e740:	eor	w10, w10, w11
    e744:	eor	w8, w8, w9
    e748:	orr	w8, w10, w8
    e74c:	tst	w8, #0xffff
    e750:	b.eq	ef98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1804>  // b.none
    e754:	cmp	x0, #0x0
    e758:	cset	w8, ne  // ne = any
    e75c:	cbnz	x23, f0c8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1934>
    e760:	cbnz	x0, f0c8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1934>
    e764:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e768:	add	x8, x8, #0x0
    e76c:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    e770:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e774:	add	x8, x8, #0x0
    e778:	b	e2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb24>
    e77c:	cmp	w8, #0x17
    e780:	b.eq	e794 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1000>  // b.none
    e784:	cmp	w8, #0x15
    e788:	b.eq	eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>  // b.none
    e78c:	cmp	w8, #0x13
    e790:	b.ne	eec4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1730>  // b.any
    e794:	cbz	x9, eea8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1714>
    e798:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e79c:	add	x8, x8, #0x0
    e7a0:	b	e2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb24>
    e7a4:	mov	w22, #0xfff                 	// #4095
    e7a8:	cmp	w8, #0x2
    e7ac:	b.ne	e7f8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1064>  // b.any
    e7b0:	ldrh	w8, [x0, #16]
    e7b4:	cmp	w22, #0xfff
    e7b8:	b.ne	e910 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x117c>  // b.any
    e7bc:	cbnz	w8, e910 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x117c>
    e7c0:	ldr	x0, [x20, #8]
    e7c4:	ldr	x22, [sp, #32]
    e7c8:	ldr	x8, [x0]
    e7cc:	ldr	x8, [x8, #48]
    e7d0:	blr	x8
    e7d4:	mov	x2, x0
    e7d8:	mov	w1, #0x1                   	// #1
    e7dc:	mov	x0, x22
    e7e0:	bl	0 <_ZN4llvm13AArch64MCExpr6createEPKNS_6MCExprENS0_11VariantKindERNS_9MCContextE>
    e7e4:	add	x8, x0, #0x8
    e7e8:	cmp	x0, #0x0
    e7ec:	csel	x8, xzr, x8, eq  // eq = none
    e7f0:	str	x8, [sp, #32]
    e7f4:	b	eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e7f8:	sub	x1, x29, #0x38
    e7fc:	mov	x2, xzr
    e800:	mov	x3, xzr
    e804:	stp	xzr, xzr, [x29, #-56]
    e808:	stur	wzr, [x29, #-32]
    e80c:	stur	xzr, [x29, #-40]
    e810:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
    e814:	tbz	w0, #0, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e818:	ldur	x8, [x29, #-48]
    e81c:	cbnz	x8, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e820:	ldur	x8, [x29, #-56]
    e824:	cmp	w22, #0xfff
    e828:	b.ne	e830 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x109c>  // b.any
    e82c:	cbz	x8, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e830:	cbz	x8, e7b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1020>
    e834:	ldrh	w8, [x8, #16]
    e838:	cmp	w22, #0xfff
    e83c:	b.eq	e7b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1020>  // b.none
    e840:	cbnz	w8, eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>
    e844:	b	e7b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1020>
    e848:	mov	x0, x8
    e84c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    e850:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    e854:	ldr	x8, [x20, #8]
    e858:	mov	x23, x0
    e85c:	ldr	x9, [x8]
    e860:	mov	x0, x8
    e864:	ldr	x9, [x9, #48]
    e868:	blr	x9
    e86c:	mov	x24, x0
    e870:	mov	w0, #0x70                  	// #112
    e874:	bl	0 <_Znwm>
    e878:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e87c:	mov	x8, x0
    e880:	add	x9, x9, #0x0
    e884:	mov	x20, x0
    e888:	strb	wzr, [x8, #32]!
    e88c:	str	x9, [x0]
    e890:	mov	w9, #0x3                   	// #3
    e894:	str	w9, [x0, #48]
    e898:	str	x24, [x0, #104]
    e89c:	str	w22, [x0, #72]
    e8a0:	stur	xzr, [x0, #89]
    e8a4:	stur	xzr, [x0, #84]
    e8a8:	stur	xzr, [x0, #76]
    e8ac:	stp	x21, x23, [x0, #56]
    e8b0:	b	ef48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17b4>
    e8b4:	mov	w0, w22
    e8b8:	bl	0 <_ZN4llvm14AArch64SVEPRFM23lookupSVEPRFMByEncodingEh>
    e8bc:	cbz	x0, e988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x11f4>
    e8c0:	ldr	x23, [x0]
    e8c4:	cbz	x23, e8ec <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1158>
    e8c8:	mov	x0, x23
    e8cc:	bl	0 <strlen>
    e8d0:	mov	x24, x0
    e8d4:	b	e994 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1200>
    e8d8:	mov	w0, w22
    e8dc:	bl	0 <_ZN4llvm11AArch64PRFM20lookupPRFMByEncodingEh>
    e8e0:	cbz	x0, e988 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x11f4>
    e8e4:	ldr	x23, [x0]
    e8e8:	cbnz	x23, e8c8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1134>
    e8ec:	mov	x24, xzr
    e8f0:	b	e994 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1200>
    e8f4:	bl	0 <_ZN4llvm9AArch64DB18lookupDBByEncodingEh>
    e8f8:	ldr	w25, [x22, #16]
    e8fc:	cbz	x0, ee48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16b4>
    e900:	ldr	x22, [x0]
    e904:	cbnz	x22, ee50 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16bc>
    e908:	mov	w23, wzr
    e90c:	b	ee5c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16c8>
    e910:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    e914:	add	x8, x8, #0x0
    e918:	b	e2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb24>
    e91c:	ldr	q0, [x9]
    e920:	str	q0, [x21]
    e924:	ldr	x9, [x0, #8]
    e928:	str	x9, [sp, #40]
    e92c:	stp	x8, xzr, [x0]
    e930:	strb	wzr, [x0, #16]
    e934:	ldr	x8, [sp, #40]
    e938:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
    e93c:	sub	x8, x9, x8
    e940:	cmp	x8, #0x9
    e944:	b.ls	f364 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1bd0>  // b.plast
    e948:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    e94c:	add	x1, x1, #0x0
    e950:	add	x0, sp, #0x20
    e954:	mov	w2, #0xa                   	// #10
    e958:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
    e95c:	sub	x8, x29, #0x38
    e960:	add	x22, x8, #0x10
    e964:	stur	x22, [x29, #-56]
    e968:	mov	x8, x0
    e96c:	ldr	x9, [x8], #16
    e970:	cmp	x9, x8
    e974:	b.eq	e9fc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1268>  // b.none
    e978:	stur	x9, [x29, #-56]
    e97c:	ldr	x9, [x0, #16]
    e980:	stur	x9, [x29, #-40]
    e984:	b	ea04 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1270>
    e988:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
    e98c:	mov	x24, xzr
    e990:	add	x23, x23, #0x0
    e994:	ldr	x0, [x20, #8]
    e998:	ldr	x8, [x0]
    e99c:	ldr	x8, [x8, #48]
    e9a0:	blr	x8
    e9a4:	mov	x25, x0
    e9a8:	mov	w0, #0x70                  	// #112
    e9ac:	bl	0 <_Znwm>
    e9b0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    e9b4:	mov	x8, x0
    e9b8:	add	x9, x9, #0x0
    e9bc:	strb	wzr, [x8, #32]!
    e9c0:	str	x9, [x0]
    e9c4:	mov	w9, #0x9                   	// #9
    e9c8:	mov	x20, x0
    e9cc:	str	w9, [x0, #48]
    e9d0:	str	x25, [x0, #104]
    e9d4:	str	x23, [x0, #72]
    e9d8:	stp	w24, w22, [x0, #80]
    e9dc:	stp	x21, x21, [x0, #56]
    e9e0:	b	ef48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17b4>
    e9e4:	ldr	w25, [x26, #32]
    e9e8:	add	x23, x26, #0x18
    e9ec:	cmp	w25, #0x40
    e9f0:	b.hi	ed40 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15ac>  // b.pmore
    e9f4:	mov	x8, x23
    e9f8:	b	ed58 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15c4>
    e9fc:	ldr	q0, [x9]
    ea00:	str	q0, [x22]
    ea04:	ldr	x9, [x0, #8]
    ea08:	mov	w10, #0x104                 	// #260
    ea0c:	sub	x11, x29, #0x38
    ea10:	sub	x1, x29, #0x18
    ea14:	stur	x9, [x29, #-48]
    ea18:	stp	x8, xzr, [x0]
    ea1c:	strb	wzr, [x0, #16]
    ea20:	sturh	w10, [x29, #-8]
    ea24:	stp	x11, xzr, [x29, #-24]
    ea28:	ldr	x0, [x20, #8]
    ea2c:	mov	x2, xzr
    ea30:	mov	x3, xzr
    ea34:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
    ea38:	ldur	x0, [x29, #-56]
    ea3c:	cmp	x0, x22
    ea40:	b.eq	ea48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12b4>  // b.none
    ea44:	bl	0 <_ZdlPv>
    ea48:	ldr	x0, [sp, #32]
    ea4c:	cmp	x0, x21
    ea50:	b.eq	ea58 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x12c4>  // b.none
    ea54:	bl	0 <_ZdlPv>
    ea58:	ldr	x0, [sp]
    ea5c:	cmp	x0, x19
    ea60:	b.eq	e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>  // b.none
    ea64:	bl	0 <_ZdlPv>
    ea68:	b	e6e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf4c>
    ea6c:	sub	x8, x29, #0x38
    ea70:	add	x0, x8, #0x8
    ea74:	bl	0 <_ZN4llvm6detail13DoubleAPFloat10changeSignEv>
    ea78:	ldp	x8, x9, [x29, #-48]
    ea7c:	sub	x10, x29, #0x38
    ea80:	cmp	x23, x8
    ea84:	csel	x9, x9, x10, eq  // eq = none
    ea88:	ldrb	w9, [x9, #28]
    ea8c:	and	w10, w9, #0x7
    ea90:	cmp	w10, #0x3
    ea94:	b.ne	eba0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x140c>  // b.any
    ea98:	tbnz	w9, #3, eba0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x140c>
    ea9c:	ldr	x0, [x20, #8]
    eaa0:	ldr	x8, [x0]
    eaa4:	ldr	x8, [x8, #48]
    eaa8:	blr	x8
    eaac:	mov	x24, x0
    eab0:	mov	w0, #0x70                  	// #112
    eab4:	bl	0 <_Znwm>
    eab8:	mov	x8, x0
    eabc:	mov	w9, #0x6                   	// #6
    eac0:	strb	wzr, [x8, #32]!
    eac4:	str	w9, [x0, #48]
    eac8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    eacc:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    ead0:	add	x9, x9, #0x0
    ead4:	add	x25, x25, #0x0
    ead8:	stp	x22, x9, [x0, #64]
    eadc:	mov	w9, #0x2                   	// #2
    eae0:	str	x24, [x0, #104]
    eae4:	str	x25, [x0]
    eae8:	str	w9, [x0, #80]
    eaec:	strb	wzr, [x0, #84]
    eaf0:	str	x22, [x0, #56]
    eaf4:	stp	x8, xzr, [x0, #16]
    eaf8:	ldp	w8, w9, [x19, #8]
    eafc:	mov	x23, x0
    eb00:	cmp	w8, w9
    eb04:	b.cs	f204 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1a70>  // b.hs, b.nlast
    eb08:	ldr	x10, [x19]
    eb0c:	cmp	w8, w9
    eb10:	str	x23, [x10, w8, uxtw #3]
    eb14:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    eb18:	add	w8, w8, #0x1
    eb1c:	str	w8, [x19, #8]
    eb20:	ldr	x0, [x20, #8]
    eb24:	ldr	x8, [x0]
    eb28:	ldr	x8, [x8, #48]
    eb2c:	blr	x8
    eb30:	mov	x23, x0
    eb34:	mov	w0, #0x70                  	// #112
    eb38:	bl	0 <_Znwm>
    eb3c:	mov	x8, x0
    eb40:	mov	w9, #0x6                   	// #6
    eb44:	strb	wzr, [x8, #32]!
    eb48:	str	w9, [x0, #48]
    eb4c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    eb50:	add	x9, x9, #0x0
    eb54:	mov	w10, #0x2                   	// #2
    eb58:	str	x25, [x0]
    eb5c:	str	x23, [x0, #104]
    eb60:	stp	x22, x9, [x0, #64]
    eb64:	str	w10, [x0, #80]
    eb68:	strb	wzr, [x0, #84]
    eb6c:	str	x22, [x0, #56]
    eb70:	stp	x8, xzr, [x0, #16]
    eb74:	ldp	w8, w9, [x19, #8]
    eb78:	mov	x20, x0
    eb7c:	cmp	w8, w9
    eb80:	b.cs	f228 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1a94>  // b.hs, b.nlast
    eb84:	ldr	x10, [x19]
    eb88:	cmp	w8, w9
    eb8c:	str	x20, [x10, w8, uxtw #3]
    eb90:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    eb94:	add	w8, w8, #0x1
    eb98:	str	w8, [x19, #8]
    eb9c:	b	eca8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1514>
    eba0:	add	x9, sp, #0x20
    eba4:	add	x24, x9, #0x8
    eba8:	cmp	x23, x8
    ebac:	mov	x0, x24
    ebb0:	mov	x1, x25
    ebb4:	b.eq	ebc0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x142c>  // b.none
    ebb8:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
    ebbc:	b	ebc4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1430>
    ebc0:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
    ebc4:	ldurb	w8, [x29, #-16]
    ebc8:	tbnz	w8, #1, f2ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b18>
    ebcc:	tbnz	w8, #0, f370 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1bdc>
    ebd0:	ldr	x0, [x20, #8]
    ebd4:	ldur	w9, [x29, #-24]
    ebd8:	ldr	x8, [x0]
    ebdc:	cmp	w9, #0x0
    ebe0:	cset	w26, eq  // eq = none
    ebe4:	ldr	x8, [x8, #48]
    ebe8:	blr	x8
    ebec:	mov	x25, x0
    ebf0:	mov	w0, #0x70                  	// #112
    ebf4:	bl	0 <_Znwm>
    ebf8:	ldr	x11, [sp, #40]
    ebfc:	mov	x8, x0
    ec00:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ec04:	mov	x20, x0
    ec08:	add	x9, x9, #0x0
    ec0c:	mov	w10, #0xb                   	// #11
    ec10:	strb	wzr, [x8, #32]!
    ec14:	cmp	x23, x11
    ec18:	str	x9, [x0]
    ec1c:	str	w10, [x0, #48]
    ec20:	stp	x8, xzr, [x0, #16]
    ec24:	stp	xzr, xzr, [x0, #56]
    ec28:	str	x25, [x0, #104]
    ec2c:	b.eq	ec40 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14ac>  // b.none
    ec30:	mov	x8, sp
    ec34:	mov	x0, x24
    ec38:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    ec3c:	b	ec50 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14bc>
    ec40:	add	x8, sp, #0x20
    ec44:	add	x0, x8, #0x8
    ec48:	mov	x8, sp
    ec4c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    ec50:	mov	x0, sp
    ec54:	bl	0 <LLVMInitializeAArch64AsmParser>
    ec58:	ldr	w8, [sp, #8]
    ec5c:	str	x0, [x20, #72]
    ec60:	cmp	w8, #0x41
    ec64:	b.cc	ec74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14e0>  // b.lo, b.ul, b.last
    ec68:	ldr	x0, [sp]
    ec6c:	cbz	x0, ec74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x14e0>
    ec70:	bl	0 <_ZdaPv>
    ec74:	strb	w26, [x20, #80]
    ec78:	stp	x22, x22, [x20, #56]
    ec7c:	ldp	w8, w9, [x19, #8]
    ec80:	cmp	w8, w9
    ec84:	b.cs	f1bc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1a28>  // b.hs, b.nlast
    ec88:	ldr	x10, [x19]
    ec8c:	cmp	w8, w9
    ec90:	str	x20, [x10, w8, uxtw #3]
    ec94:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    ec98:	add	w8, w8, #0x1
    ec9c:	add	x0, sp, #0x20
    eca0:	str	w8, [x19, #8]
    eca4:	bl	0 <LLVMInitializeAArch64AsmParser>
    eca8:	ldurb	w8, [x29, #-16]
    ecac:	tbnz	w8, #1, f2ac <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1b18>
    ecb0:	tbz	w8, #0, f08c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18f8>
    ecb4:	ldur	x0, [x29, #-24]
    ecb8:	cbz	x0, ecc8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1534>
    ecbc:	ldr	x8, [x0]
    ecc0:	ldr	x8, [x8, #8]
    ecc4:	blr	x8
    ecc8:	stur	xzr, [x29, #-24]
    eccc:	b	f08c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18f8>
    ecd0:	ldr	x8, [x22]
    ecd4:	mov	x0, x22
    ecd8:	ldr	x8, [x8, #136]
    ecdc:	blr	x8
    ece0:	ldr	x0, [x20, #8]
    ece4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ece8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ecec:	ldr	x8, [x20, #8]
    ecf0:	mov	x22, x0
    ecf4:	ldr	x9, [x8]
    ecf8:	mov	x0, x8
    ecfc:	ldr	x9, [x9, #48]
    ed00:	blr	x9
    ed04:	mov	x23, x0
    ed08:	mov	w0, #0x70                  	// #112
    ed0c:	bl	0 <_Znwm>
    ed10:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ed14:	mov	x8, x0
    ed18:	add	x9, x9, #0x0
    ed1c:	strb	wzr, [x8, #32]!
    ed20:	str	x9, [x0]
    ed24:	mov	w9, #0x8                   	// #8
    ed28:	mov	x20, x0
    ed2c:	str	w9, [x0, #48]
    ed30:	str	x23, [x0, #104]
    ed34:	str	w24, [x0, #72]
    ed38:	stp	x21, x22, [x0, #56]
    ed3c:	b	ef48 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17b4>
    ed40:	mov	x0, x23
    ed44:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ed48:	sub	w8, w25, w0
    ed4c:	cmp	w8, #0x41
    ed50:	b.cs	f390 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1bfc>  // b.hs, b.nlast
    ed54:	ldr	x8, [x23]
    ed58:	ldr	x8, [x8]
    ed5c:	cmp	x8, #0x100
    ed60:	cset	w8, lt  // lt = tstop
    ed64:	bic	w8, w8, w24
    ed68:	tbnz	w8, #0, ed78 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x15e4>
    ed6c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ed70:	add	x8, x8, #0x0
    ed74:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    ed78:	cmp	w25, #0x40
    ed7c:	b.ls	ed98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1604>  // b.plast
    ed80:	mov	x0, x23
    ed84:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    ed88:	sub	w8, w25, w0
    ed8c:	cmp	w8, #0x41
    ed90:	b.cs	f390 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1bfc>  // b.hs, b.nlast
    ed94:	ldr	x23, [x23]
    ed98:	ldr	w8, [x23]
    ed9c:	add	x0, sp, #0x20
    eda0:	add	x23, sp, #0x20
    eda4:	lsl	w10, w8, #24
    eda8:	and	w12, w8, #0x40
    edac:	and	w10, w10, #0x80000000
    edb0:	lsr	w12, w12, #6
    edb4:	lsr	w9, w8, #4
    edb8:	bfi	w10, w12, #30, #1
    edbc:	sbfx	w11, w8, #6, #1
    edc0:	bfi	w10, w9, #23, #2
    edc4:	and	w11, w11, #0x3e000000
    edc8:	bfi	w10, w8, #19, #4
    edcc:	orr	w8, w10, w11
    edd0:	eor	w8, w8, #0x40000000
    edd4:	fmov	s0, w8
    edd8:	sub	x9, x29, #0x38
    eddc:	fcvt	d0, s0
    ede0:	add	x25, x9, #0x8
    ede4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1Ed>
    ede8:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
    edec:	mov	x2, x0
    edf0:	add	x1, sp, #0x20
    edf4:	mov	x0, x25
    edf8:	bl	0 <_ZN4llvm7APFloat7StorageC1ENS_6detail9IEEEFloatERKNS_12fltSemanticsE>
    edfc:	add	x0, sp, #0x20
    ee00:	bl	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
    ee04:	ldur	x26, [x29, #-48]
    ee08:	add	x23, x23, #0x8
    ee0c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
    ee10:	mov	x24, x0
    ee14:	cmp	x0, x26
    ee18:	b.eq	efb0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x181c>  // b.none
    ee1c:	mov	x0, x23
    ee20:	mov	x1, x25
    ee24:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
    ee28:	b	efbc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1828>
    ee2c:	cbz	x0, ee3c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x16a8>
    ee30:	ldrh	w10, [x0, #8]
    ee34:	cmp	w10, #0xf
    ee38:	b.eq	e734 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xfa0>  // b.none
    ee3c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    ee40:	add	x8, x8, #0x0
    ee44:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    ee48:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    ee4c:	add	x22, x22, #0x0
    ee50:	mov	x0, x22
    ee54:	bl	0 <strlen>
    ee58:	mov	x23, x0
    ee5c:	ldr	x0, [x20, #8]
    ee60:	ldr	x8, [x0]
    ee64:	ldr	x8, [x8, #48]
    ee68:	blr	x8
    ee6c:	mov	x24, x0
    ee70:	mov	w0, #0x70                  	// #112
    ee74:	bl	0 <_Znwm>
    ee78:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ee7c:	mov	x8, x0
    ee80:	add	x9, x9, #0x0
    ee84:	mov	x20, x0
    ee88:	strb	wzr, [x8, #32]!
    ee8c:	str	x9, [x0]
    ee90:	mov	w9, #0xc                   	// #12
    ee94:	str	w9, [x0, #48]
    ee98:	str	x24, [x0, #104]
    ee9c:	str	x22, [x0, #72]
    eea0:	str	w25, [x0, #84]
    eea4:	b	e6a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf10>
    eea8:	cmp	w8, #0x17
    eeac:	b.hi	eec4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1730>  // b.pmore
    eeb0:	mov	w9, #0x1                   	// #1
    eeb4:	lsl	w8, w9, w8
    eeb8:	mov	w9, #0xa80000              	// #11010048
    eebc:	tst	w8, w9
    eec0:	b.ne	eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>  // b.any
    eec4:	cmp	w22, #0x18
    eec8:	b.hi	eee0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x174c>  // b.pmore
    eecc:	mov	w8, #0x1                   	// #1
    eed0:	lsl	w8, w8, w22
    eed4:	mov	w9, #0x1500000             	// #22020096
    eed8:	tst	w8, w9
    eedc:	b.ne	eee8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1754>  // b.any
    eee0:	cmp	w22, #0x111
    eee4:	b.ne	f0b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1920>  // b.any
    eee8:	ldr	x0, [x20, #8]
    eeec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    eef0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    eef4:	ldr	x8, [x20, #8]
    eef8:	ldr	x23, [sp, #32]
    eefc:	sub	x24, x0, #0x1
    ef00:	ldr	x9, [x8]
    ef04:	mov	x0, x8
    ef08:	ldr	x9, [x9, #48]
    ef0c:	blr	x9
    ef10:	mov	x22, x0
    ef14:	mov	w0, #0x70                  	// #112
    ef18:	bl	0 <_Znwm>
    ef1c:	mov	x8, x0
    ef20:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ef24:	mov	x20, x0
    ef28:	add	x9, x9, #0x0
    ef2c:	strb	wzr, [x8, #32]!
    ef30:	str	x9, [x0]
    ef34:	str	wzr, [x0, #48]
    ef38:	str	x22, [x0, #104]
    ef3c:	str	x23, [x0, #72]
    ef40:	str	x21, [x0, #56]
    ef44:	str	x24, [x0, #64]
    ef48:	stp	x8, xzr, [x0, #16]
    ef4c:	ldp	w8, w9, [x19, #8]
    ef50:	cmp	w8, w9
    ef54:	b.cs	f174 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19e0>  // b.hs, b.nlast
    ef58:	ldr	x10, [x19]
    ef5c:	cmp	w8, w9
    ef60:	str	x20, [x10, w8, uxtw #3]
    ef64:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    ef68:	add	w8, w8, #0x1
    ef6c:	mov	w21, wzr
    ef70:	str	w8, [x19, #8]
    ef74:	mov	w0, w21
    ef78:	ldp	x20, x19, [sp, #208]
    ef7c:	ldp	x22, x21, [sp, #192]
    ef80:	ldp	x24, x23, [sp, #176]
    ef84:	ldp	x26, x25, [sp, #160]
    ef88:	ldr	x27, [sp, #144]
    ef8c:	ldp	x29, x30, [sp, #128]
    ef90:	add	sp, sp, #0xe0
    ef94:	ret
    ef98:	cbz	x23, efa4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1810>
    ef9c:	ldrh	w8, [x23, #8]
    efa0:	cbz	w8, f0c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x192c>
    efa4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    efa8:	add	x8, x8, #0x0
    efac:	b	e6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xf2c>
    efb0:	mov	x0, x23
    efb4:	mov	x1, x25
    efb8:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
    efbc:	ldr	x0, [x20, #8]
    efc0:	ldr	x8, [x0]
    efc4:	ldr	x8, [x8, #48]
    efc8:	blr	x8
    efcc:	mov	x25, x0
    efd0:	mov	w0, #0x70                  	// #112
    efd4:	bl	0 <_Znwm>
    efd8:	ldr	x11, [sp, #40]
    efdc:	mov	x8, x0
    efe0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    efe4:	mov	x20, x0
    efe8:	add	x9, x9, #0x0
    efec:	mov	w10, #0xb                   	// #11
    eff0:	strb	wzr, [x8, #32]!
    eff4:	cmp	x24, x11
    eff8:	str	x9, [x0]
    effc:	str	w10, [x0, #48]
    f000:	stp	x8, xzr, [x0, #16]
    f004:	stp	xzr, xzr, [x0, #56]
    f008:	str	x25, [x0, #104]
    f00c:	b.eq	f020 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x188c>  // b.none
    f010:	mov	x8, sp
    f014:	mov	x0, x23
    f018:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
    f01c:	b	f030 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x189c>
    f020:	add	x8, sp, #0x20
    f024:	add	x0, x8, #0x8
    f028:	mov	x8, sp
    f02c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
    f030:	mov	x0, sp
    f034:	bl	0 <LLVMInitializeAArch64AsmParser>
    f038:	ldr	w8, [sp, #8]
    f03c:	str	x0, [x20, #72]
    f040:	cmp	w8, #0x41
    f044:	b.cc	f054 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c0>  // b.lo, b.ul, b.last
    f048:	ldr	x0, [sp]
    f04c:	cbz	x0, f054 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18c0>
    f050:	bl	0 <_ZdaPv>
    f054:	mov	w8, #0x1                   	// #1
    f058:	stp	x22, x22, [x20, #56]
    f05c:	strb	w8, [x20, #80]
    f060:	ldp	w8, w9, [x19, #8]
    f064:	cmp	w8, w9
    f068:	b.cs	f24c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ab8>  // b.hs, b.nlast
    f06c:	ldr	x10, [x19]
    f070:	cmp	w8, w9
    f074:	str	x20, [x10, w8, uxtw #3]
    f078:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    f07c:	add	w8, w8, #0x1
    f080:	add	x0, sp, #0x20
    f084:	str	w8, [x19, #8]
    f088:	bl	0 <LLVMInitializeAArch64AsmParser>
    f08c:	sub	x0, x29, #0x38
    f090:	bl	0 <LLVMInitializeAArch64AsmParser>
    f094:	ldr	x8, [x21]
    f098:	mov	x0, x21
    f09c:	ldr	x8, [x8, #136]
    f0a0:	blr	x8
    f0a4:	mov	w21, wzr
    f0a8:	b	ef74 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17e0>
    f0ac:	ldur	x9, [x29, #-40]
    f0b0:	b	e2f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb60>
    f0b4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f0b8:	add	x8, x8, #0x0
    f0bc:	b	e2b8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0xb24>
    f0c0:	cmp	x0, #0x0
    f0c4:	cset	w8, ne  // ne = any
    f0c8:	add	x9, x0, #0x8
    f0cc:	add	x10, x23, #0x8
    f0d0:	cmp	w8, #0x0
    f0d4:	csel	x8, x9, x10, ne  // ne = any
    f0d8:	ldr	x0, [x20, #8]
    f0dc:	ldp	x24, x25, [x22, #8]
    f0e0:	ldrh	w26, [x8]
    f0e4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f0e8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f0ec:	ldr	x8, [x20, #8]
    f0f0:	mov	x22, x0
    f0f4:	ldr	x9, [x8]
    f0f8:	mov	x0, x8
    f0fc:	ldr	x9, [x9, #48]
    f100:	blr	x9
    f104:	mov	x23, x0
    f108:	mov	w0, #0x70                  	// #112
    f10c:	bl	0 <_Znwm>
    f110:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f114:	mov	x8, x0
    f118:	add	x9, x9, #0x0
    f11c:	strb	wzr, [x8, #32]!
    f120:	str	x9, [x0]
    f124:	mov	w9, #0xc                   	// #12
    f128:	str	w9, [x0, #48]
    f12c:	str	x23, [x0, #104]
    f130:	stp	x22, x24, [x0, #64]
    f134:	stp	w25, w26, [x0, #80]
    f138:	str	x22, [x0, #56]
    f13c:	stp	x8, xzr, [x0, #16]
    f140:	ldp	w8, w9, [x19, #8]
    f144:	mov	x20, x0
    f148:	cmp	w8, w9
    f14c:	b.cs	f1e0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1a4c>  // b.hs, b.nlast
    f150:	ldr	x10, [x19]
    f154:	cmp	w8, w9
    f158:	str	x20, [x10, w8, uxtw #3]
    f15c:	b.cs	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>  // b.hs, b.nlast
    f160:	add	w8, w8, #0x1
    f164:	str	w8, [x19, #8]
    f168:	b	f094 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1900>
    f16c:	ldr	x0, [x20, #8]
    f170:	b	e84c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x10b8>
    f174:	mov	x0, x19
    f178:	mov	x1, xzr
    f17c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f180:	ldp	w8, w9, [x19, #8]
    f184:	ldr	x10, [x19]
    f188:	cmp	w8, w9
    f18c:	str	x20, [x10, w8, uxtw #3]
    f190:	b.cc	ef68 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x17d4>  // b.lo, b.ul, b.last
    f194:	b	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>
    f198:	mov	x0, x19
    f19c:	mov	x1, xzr
    f1a0:	bl	0 <LLVMInitializeAArch64AsmParser>
    f1a4:	ldp	w8, w9, [x19, #8]
    f1a8:	ldr	x10, [x19]
    f1ac:	cmp	w8, w9
    f1b0:	str	x21, [x10, w8, uxtw #3]
    f1b4:	b.cc	e118 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x984>  // b.lo, b.ul, b.last
    f1b8:	b	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>
    f1bc:	mov	x0, x19
    f1c0:	mov	x1, xzr
    f1c4:	bl	0 <LLVMInitializeAArch64AsmParser>
    f1c8:	ldp	w8, w9, [x19, #8]
    f1cc:	ldr	x10, [x19]
    f1d0:	cmp	w8, w9
    f1d4:	str	x20, [x10, w8, uxtw #3]
    f1d8:	b.cc	ec98 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1504>  // b.lo, b.ul, b.last
    f1dc:	b	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>
    f1e0:	mov	x0, x19
    f1e4:	mov	x1, xzr
    f1e8:	bl	0 <LLVMInitializeAArch64AsmParser>
    f1ec:	ldp	w8, w9, [x19, #8]
    f1f0:	ldr	x10, [x19]
    f1f4:	cmp	w8, w9
    f1f8:	str	x20, [x10, w8, uxtw #3]
    f1fc:	b.cc	f160 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x19cc>  // b.lo, b.ul, b.last
    f200:	b	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>
    f204:	mov	x0, x19
    f208:	mov	x1, xzr
    f20c:	bl	0 <LLVMInitializeAArch64AsmParser>
    f210:	ldp	w8, w9, [x19, #8]
    f214:	ldr	x10, [x19]
    f218:	cmp	w8, w9
    f21c:	str	x23, [x10, w8, uxtw #3]
    f220:	b.cc	eb18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1384>  // b.lo, b.ul, b.last
    f224:	b	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>
    f228:	mov	x0, x19
    f22c:	mov	x1, xzr
    f230:	bl	0 <LLVMInitializeAArch64AsmParser>
    f234:	ldp	w8, w9, [x19, #8]
    f238:	ldr	x10, [x19]
    f23c:	cmp	w8, w9
    f240:	str	x20, [x10, w8, uxtw #3]
    f244:	b.cc	eb94 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1400>  // b.lo, b.ul, b.last
    f248:	b	f26c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x1ad8>
    f24c:	mov	x0, x19
    f250:	mov	x1, xzr
    f254:	bl	0 <LLVMInitializeAArch64AsmParser>
    f258:	ldp	w8, w9, [x19, #8]
    f25c:	ldr	x10, [x19]
    f260:	cmp	w8, w9
    f264:	str	x20, [x10, w8, uxtw #3]
    f268:	b.cc	f07c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryCustomParseOperandERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEEj+0x18e8>  // b.lo, b.ul, b.last
    f26c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f270:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f274:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f278:	add	x0, x0, #0x0
    f27c:	add	x1, x1, #0x0
    f280:	add	x3, x3, #0x0
    f284:	mov	w2, #0x43                  	// #67
    f288:	bl	0 <__assert_fail>
    f28c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f290:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f294:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f298:	add	x0, x0, #0x0
    f29c:	add	x1, x1, #0x0
    f2a0:	add	x3, x3, #0x0
    f2a4:	mov	w2, #0x69                  	// #105
    f2a8:	bl	0 <__assert_fail>
    f2ac:	sub	x0, x29, #0x18
    f2b0:	bl	0 <LLVMInitializeAArch64AsmParser>
    f2b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f2b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f2bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f2c0:	add	x0, x0, #0x0
    f2c4:	add	x1, x1, #0x0
    f2c8:	add	x3, x3, #0x0
    f2cc:	mov	w2, #0x69                  	// #105
    f2d0:	bl	0 <__assert_fail>
    f2d4:	add	x0, x29, #0x18
    f2d8:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    f2dc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f2e0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f2e4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f2e8:	add	x0, x0, #0x0
    f2ec:	add	x1, x1, #0x0
    f2f0:	add	x3, x3, #0x0
    f2f4:	mov	w2, #0x5b                  	// #91
    f2f8:	bl	0 <__assert_fail>
    f2fc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f300:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f304:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f308:	add	x0, x0, #0x0
    f30c:	add	x1, x1, #0x0
    f310:	add	x3, x3, #0x0
    f314:	mov	w2, #0xfa                  	// #250
    f318:	bl	0 <__assert_fail>
    f31c:	add	x0, sp, #0x20
    f320:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
    f324:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f328:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f32c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f330:	add	x0, x0, #0x0
    f334:	add	x1, x1, #0x0
    f338:	add	x3, x3, #0x0
    f33c:	mov	w2, #0x69                  	// #105
    f340:	bl	0 <__assert_fail>
    f344:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f348:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f34c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f350:	add	x0, x0, #0x0
    f354:	add	x1, x1, #0x0
    f358:	add	x3, x3, #0x0
    f35c:	mov	w2, #0x1679                	// #5753
    f360:	bl	0 <__assert_fail>
    f364:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f368:	add	x0, x0, #0x0
    f36c:	bl	0 <_ZSt20__throw_length_errorPKc>
    f370:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f374:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f378:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f37c:	add	x0, x0, #0x0
    f380:	add	x1, x1, #0x0
    f384:	add	x3, x3, #0x0
    f388:	mov	w2, #0x272                 	// #626
    f38c:	bl	0 <__assert_fail>
    f390:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f394:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f398:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f39c:	add	x0, x0, #0x0
    f3a0:	add	x1, x1, #0x0
    f3a4:	add	x3, x3, #0x0
    f3a8:	mov	w2, #0x657                 	// #1623
    f3ac:	bl	0 <__assert_fail>

000000000000f3b0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    f3b0:	sub	sp, sp, #0x70
    f3b4:	stp	x29, x30, [sp, #32]
    f3b8:	str	x25, [sp, #48]
    f3bc:	stp	x24, x23, [sp, #64]
    f3c0:	stp	x22, x21, [sp, #80]
    f3c4:	stp	x20, x19, [sp, #96]
    f3c8:	add	x29, sp, #0x20
    f3cc:	ldr	x22, [x0, #8]
    f3d0:	mov	x21, x0
    f3d4:	mov	x19, x1
    f3d8:	mov	x0, x22
    f3dc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f3e0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f3e4:	mov	x20, x0
    f3e8:	mov	x0, x22
    f3ec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f3f0:	ldr	w8, [x0]
    f3f4:	cmp	w8, #0x25
    f3f8:	b.ne	f410 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x60>  // b.any
    f3fc:	ldr	x8, [x22]
    f400:	mov	x0, x22
    f404:	ldr	x8, [x8, #136]
    f408:	blr	x8
    f40c:	b	f424 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x74>
    f410:	mov	x0, x22
    f414:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f418:	ldr	w8, [x0]
    f41c:	cmp	w8, #0x4
    f420:	b.ne	f4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf0>  // b.any
    f424:	add	x1, x29, #0x18
    f428:	mov	x0, x21
    f42c:	str	xzr, [x29, #24]
    f430:	bl	c9b4 <_ZN12_GLOBAL__N_116AArch64AsmParser19parseSymbolicImmValERPKN4llvm6MCExprE>
    f434:	tbnz	w0, #0, f5b8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x208>
    f438:	mov	x0, x22
    f43c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f440:	ldr	w8, [x0]
    f444:	cmp	w8, #0x19
    f448:	b.ne	f4a8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xf8>  // b.any
    f44c:	ldr	x8, [x22]
    f450:	mov	x0, x22
    f454:	ldr	x8, [x8, #136]
    f458:	blr	x8
    f45c:	mov	x0, x22
    f460:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f464:	ldr	w8, [x0]
    f468:	cmp	w8, #0x2
    f46c:	b.ne	f57c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1cc>  // b.any
    f470:	mov	x0, x22
    f474:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f478:	ldr	w8, [x0]
    f47c:	cmp	w8, #0x3
    f480:	b.eq	f534 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x184>  // b.none
    f484:	cmp	w8, #0x2
    f488:	b.ne	f734 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x384>  // b.any
    f48c:	ldp	x8, x9, [x0, #8]
    f490:	cmp	x9, #0x3
    f494:	stp	x8, x9, [sp, #8]
    f498:	b.eq	f564 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1b4>  // b.none
    f49c:	b	f57c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1cc>
    f4a0:	mov	w0, #0x1                   	// #1
    f4a4:	b	f5bc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x20c>
    f4a8:	mov	x0, x22
    f4ac:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f4b0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f4b4:	ldr	x8, [x21, #8]
    f4b8:	ldr	x24, [x29, #24]
    f4bc:	mov	x22, x0
    f4c0:	ldr	x9, [x8]
    f4c4:	mov	x0, x8
    f4c8:	ldr	x9, [x9, #48]
    f4cc:	blr	x9
    f4d0:	mov	x23, x0
    f4d4:	mov	w0, #0x70                  	// #112
    f4d8:	bl	0 <_Znwm>
    f4dc:	mov	x8, x0
    f4e0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f4e4:	mov	x21, x0
    f4e8:	add	x9, x9, #0x0
    f4ec:	strb	wzr, [x8, #32]!
    f4f0:	str	x9, [x0]
    f4f4:	str	wzr, [x0, #48]
    f4f8:	str	x23, [x0, #104]
    f4fc:	str	x24, [x0, #72]
    f500:	stp	x20, x22, [x0, #56]
    f504:	stp	x8, xzr, [x0, #16]
    f508:	ldp	w8, w9, [x19, #8]
    f50c:	cmp	w8, w9
    f510:	b.cs	f6f4 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x344>  // b.hs, b.nlast
    f514:	ldr	x10, [x19]
    f518:	cmp	w8, w9
    f51c:	str	x21, [x10, w8, uxtw #3]
    f520:	b.cs	f714 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x364>  // b.hs, b.nlast
    f524:	mov	w0, wzr
    f528:	add	w8, w8, #0x1
    f52c:	str	w8, [x19, #8]
    f530:	b	f5bc <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x20c>
    f534:	ldp	x8, x9, [x0, #8]
    f538:	subs	x10, x9, #0x1
    f53c:	cset	w11, cs  // cs = hs, nlast
    f540:	cinc	x8, x8, cs  // cs = hs, nlast
    f544:	cmp	x10, x11
    f548:	csel	x10, x10, x11, hi  // hi = pmore
    f54c:	cmp	x9, x10
    f550:	csel	x9, x9, x10, cc  // cc = lo, ul, last
    f554:	sub	x9, x9, x11
    f558:	cmp	x9, #0x3
    f55c:	stp	x8, x9, [sp, #8]
    f560:	b.ne	f57c <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1cc>  // b.any
    f564:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f568:	add	x1, x1, #0x0
    f56c:	add	x0, sp, #0x8
    f570:	mov	w2, #0x3                   	// #3
    f574:	bl	0 <_ZNK4llvm9StringRef13compare_lowerES0_>
    f578:	cbz	w0, f5d8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x228>
    f57c:	mov	x0, x22
    f580:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f584:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f588:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f58c:	add	x8, x8, #0x0
    f590:	mov	w9, #0x103                 	// #259
    f594:	stp	x8, xzr, [sp, #8]
    f598:	strh	w9, [sp, #24]
    f59c:	ldr	x8, [x21, #8]
    f5a0:	mov	x1, x0
    f5a4:	add	x2, sp, #0x8
    f5a8:	mov	x3, xzr
    f5ac:	mov	x0, x8
    f5b0:	mov	x4, xzr
    f5b4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    f5b8:	mov	w0, #0x2                   	// #2
    f5bc:	ldp	x20, x19, [sp, #96]
    f5c0:	ldp	x22, x21, [sp, #80]
    f5c4:	ldp	x24, x23, [sp, #64]
    f5c8:	ldr	x25, [sp, #48]
    f5cc:	ldp	x29, x30, [sp, #32]
    f5d0:	add	sp, sp, #0x70
    f5d4:	ret
    f5d8:	ldr	x8, [x22]
    f5dc:	mov	x0, x22
    f5e0:	ldr	x8, [x8, #136]
    f5e4:	blr	x8
    f5e8:	ldr	x0, [x21, #8]
    f5ec:	mov	w1, #0x25                  	// #37
    f5f0:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
    f5f4:	mov	x0, x22
    f5f8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f5fc:	ldr	w23, [x0]
    f600:	mov	x0, x22
    f604:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f608:	cmp	w23, #0x4
    f60c:	b.ne	f584 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d4>  // b.any
    f610:	ldr	w8, [x0]
    f614:	cmp	w8, #0x4
    f618:	b.ne	f754 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3a4>  // b.any
    f61c:	ldr	w24, [x0, #32]
    f620:	add	x23, x0, #0x18
    f624:	cmp	w24, #0x40
    f628:	b.ls	f644 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x294>  // b.plast
    f62c:	mov	x0, x23
    f630:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
    f634:	sub	w8, w24, w0
    f638:	cmp	w8, #0x41
    f63c:	b.cs	f774 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3c4>  // b.hs, b.nlast
    f640:	ldr	x23, [x23]
    f644:	ldr	x25, [x23]
    f648:	tbnz	x25, #63, f690 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2e0>
    f64c:	ldr	x8, [x22]
    f650:	mov	x0, x22
    f654:	ldr	x8, [x8, #136]
    f658:	blr	x8
    f65c:	ldr	x23, [x29, #24]
    f660:	mov	x0, x22
    f664:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f668:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f66c:	ldr	x24, [x29, #24]
    f670:	mov	x22, x0
    f674:	cbnz	x25, f6a8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2f8>
    f678:	cbz	x23, f6a8 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2f8>
    f67c:	ldr	x0, [x21, #8]
    f680:	ldr	x8, [x0]
    f684:	ldr	x8, [x8, #48]
    f688:	blr	x8
    f68c:	b	f4d0 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    f690:	mov	x0, x22
    f694:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f698:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f69c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f6a0:	add	x8, x8, #0x0
    f6a4:	b	f590 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1e0>
    f6a8:	ldr	x0, [x21, #8]
    f6ac:	ldr	x8, [x0]
    f6b0:	ldr	x8, [x8, #48]
    f6b4:	blr	x8
    f6b8:	mov	x23, x0
    f6bc:	mov	w0, #0x70                  	// #112
    f6c0:	bl	0 <_Znwm>
    f6c4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f6c8:	mov	x8, x0
    f6cc:	add	x9, x9, #0x0
    f6d0:	strb	wzr, [x8, #32]!
    f6d4:	str	x9, [x0]
    f6d8:	mov	w9, #0x1                   	// #1
    f6dc:	mov	x21, x0
    f6e0:	str	w9, [x0, #48]
    f6e4:	str	x23, [x0, #104]
    f6e8:	str	x24, [x0, #72]
    f6ec:	str	w25, [x0, #80]
    f6f0:	b	f500 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x150>
    f6f4:	mov	x0, x19
    f6f8:	mov	x1, xzr
    f6fc:	bl	0 <LLVMInitializeAArch64AsmParser>
    f700:	ldp	w8, w9, [x19, #8]
    f704:	ldr	x10, [x19]
    f708:	cmp	w8, w9
    f70c:	str	x21, [x10, w8, uxtw #3]
    f710:	b.cc	f524 <_ZN12_GLOBAL__N_116AArch64AsmParser28tryParseImmWithOptionalShiftERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x174>  // b.lo, b.ul, b.last
    f714:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f718:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f71c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f720:	add	x0, x0, #0x0
    f724:	add	x1, x1, #0x0
    f728:	add	x3, x3, #0x0
    f72c:	mov	w2, #0x43                  	// #67
    f730:	bl	0 <__assert_fail>
    f734:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f738:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f73c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f740:	add	x0, x0, #0x0
    f744:	add	x1, x1, #0x0
    f748:	add	x3, x3, #0x0
    f74c:	mov	w2, #0x5b                  	// #91
    f750:	bl	0 <__assert_fail>
    f754:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f758:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f75c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f760:	add	x0, x0, #0x0
    f764:	add	x1, x1, #0x0
    f768:	add	x3, x3, #0x0
    f76c:	mov	w2, #0x74                  	// #116
    f770:	bl	0 <__assert_fail>
    f774:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    f778:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    f77c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    f780:	add	x0, x0, #0x0
    f784:	add	x1, x1, #0x0
    f788:	add	x3, x3, #0x0
    f78c:	mov	w2, #0x657                 	// #1623
    f790:	bl	0 <__assert_fail>

000000000000f794 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>:
    f794:	sub	sp, sp, #0x90
    f798:	stp	x29, x30, [sp, #48]
    f79c:	str	x27, [sp, #64]
    f7a0:	stp	x26, x25, [sp, #80]
    f7a4:	stp	x24, x23, [sp, #96]
    f7a8:	stp	x22, x21, [sp, #112]
    f7ac:	stp	x20, x19, [sp, #128]
    f7b0:	add	x29, sp, #0x30
    f7b4:	mov	x23, x0
    f7b8:	ldr	x0, [x0, #8]
    f7bc:	mov	x19, x1
    f7c0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f7c4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f7c8:	ldr	x21, [x23, #8]
    f7cc:	mov	x20, x0
    f7d0:	mov	x0, x21
    f7d4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f7d8:	ldr	w8, [x0]
    f7dc:	cmp	w8, #0x2
    f7e0:	b.ne	f840 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xac>  // b.any
    f7e4:	ldur	q0, [x0, #8]
    f7e8:	add	x8, sp, #0x10
    f7ec:	mov	x0, sp
    f7f0:	add	x24, sp, #0x10
    f7f4:	str	q0, [sp]
    f7f8:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    f7fc:	ldp	x1, x2, [sp, #16]
    f800:	mov	x0, x23
    f804:	mov	w3, wzr
    f808:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
    f80c:	mov	w22, w0
    f810:	cbz	w0, f868 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xd4>
    f814:	ldr	x8, [x21]
    f818:	mov	x0, x21
    f81c:	ldr	x8, [x8, #136]
    f820:	blr	x8
    f824:	mov	w21, wzr
    f828:	ldr	x0, [sp, #16]
    f82c:	add	x8, x24, #0x10
    f830:	cmp	x0, x8
    f834:	b.eq	f83c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xa8>  // b.none
    f838:	bl	0 <_ZdlPv>
    f83c:	cbz	w21, f880 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xec>
    f840:	mov	w21, #0x1                   	// #1
    f844:	mov	w0, w21
    f848:	ldp	x20, x19, [sp, #128]
    f84c:	ldp	x22, x21, [sp, #112]
    f850:	ldp	x24, x23, [sp, #96]
    f854:	ldp	x26, x25, [sp, #80]
    f858:	ldr	x27, [sp, #64]
    f85c:	ldp	x29, x30, [sp, #48]
    f860:	add	sp, sp, #0x90
    f864:	ret
    f868:	mov	w21, #0x1                   	// #1
    f86c:	ldr	x0, [sp, #16]
    f870:	add	x8, x24, #0x10
    f874:	cmp	x0, x8
    f878:	b.ne	f838 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xa4>  // b.any
    f87c:	b	f83c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xa8>
    f880:	ldr	x0, [x23, #8]
    f884:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f888:	ldr	w8, [x0]
    f88c:	ldr	x0, [x23, #8]
    f890:	cmp	w8, #0x19
    f894:	b.ne	f934 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x1a0>  // b.any
    f898:	ldr	x8, [x0]
    f89c:	ldr	x8, [x8, #136]
    f8a0:	blr	x8
    f8a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    f8a8:	ldr	d0, [x8]
    f8ac:	add	x8, sp, #0x10
    f8b0:	add	x8, x8, #0x10
    f8b4:	add	x1, sp, #0x10
    f8b8:	mov	x0, x23
    f8bc:	str	x8, [sp, #16]
    f8c0:	str	d0, [sp, #24]
    f8c4:	bl	d29c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
    f8c8:	mov	w21, w0
    f8cc:	cbnz	w0, fa44 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2b0>
    f8d0:	ldr	w8, [sp, #24]
    f8d4:	cbz	w8, fb08 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x374>
    f8d8:	ldr	x9, [sp, #16]
    f8dc:	add	x8, x9, x8, lsl #3
    f8e0:	ldur	x25, [x8, #-8]
    f8e4:	ldr	x8, [x25]
    f8e8:	mov	x0, x25
    f8ec:	ldr	x8, [x8, #80]
    f8f0:	blr	x8
    f8f4:	ldr	x8, [x23, #8]
    f8f8:	mov	x23, x0
    f8fc:	ldr	x9, [x8]
    f900:	mov	x0, x8
    f904:	ldr	x9, [x9, #48]
    f908:	blr	x9
    f90c:	ldr	w8, [x25, #48]
    f910:	mov	x24, x0
    f914:	cmp	w8, #0x3
    f918:	b.eq	f9c8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x234>  // b.none
    f91c:	cmp	w8, #0xa
    f920:	b.ne	fb28 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x394>  // b.any
    f924:	add	x8, x25, #0x48
    f928:	add	x9, x25, #0x4c
    f92c:	add	x10, x25, #0x50
    f930:	b	f9d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x240>
    f934:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    f938:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    f93c:	ldr	x8, [x23, #8]
    f940:	mov	x23, x0
    f944:	ldr	x9, [x8]
    f948:	mov	x0, x8
    f94c:	ldr	x9, [x9, #48]
    f950:	blr	x9
    f954:	mov	x24, x0
    f958:	mov	w0, #0x70                  	// #112
    f95c:	bl	0 <_Znwm>
    f960:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f964:	mov	x8, x0
    f968:	add	x9, x9, #0x0
    f96c:	strb	wzr, [x8, #32]!
    f970:	str	x9, [x0]
    f974:	mov	w9, #0x3                   	// #3
    f978:	str	w9, [x0, #48]
    f97c:	str	x24, [x0, #104]
    f980:	str	w22, [x0, #72]
    f984:	stur	xzr, [x0, #89]
    f988:	stur	xzr, [x0, #84]
    f98c:	stur	xzr, [x0, #76]
    f990:	stp	x20, x23, [x0, #56]
    f994:	stp	x8, xzr, [x0, #16]
    f998:	ldp	w8, w9, [x19, #8]
    f99c:	mov	x21, x0
    f9a0:	cmp	w8, w9
    f9a4:	b.cs	fa9c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x308>  // b.hs, b.nlast
    f9a8:	ldr	x10, [x19]
    f9ac:	cmp	w8, w9
    f9b0:	str	x21, [x10, w8, uxtw #3]
    f9b4:	b.cs	fae8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x354>  // b.hs, b.nlast
    f9b8:	add	w8, w8, #0x1
    f9bc:	mov	w21, wzr
    f9c0:	str	w8, [x19, #8]
    f9c4:	b	f844 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xb0>
    f9c8:	add	x8, x25, #0x58
    f9cc:	add	x9, x25, #0x5c
    f9d0:	add	x10, x25, #0x60
    f9d4:	ldr	w25, [x8]
    f9d8:	ldr	w26, [x9]
    f9dc:	ldrb	w27, [x10]
    f9e0:	mov	w0, #0x70                  	// #112
    f9e4:	bl	0 <_Znwm>
    f9e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    f9ec:	mov	x8, x0
    f9f0:	add	x9, x9, #0x0
    f9f4:	strb	wzr, [x8, #32]!
    f9f8:	str	x9, [x0]
    f9fc:	mov	w9, #0x3                   	// #3
    fa00:	str	w9, [x0, #48]
    fa04:	str	x24, [x0, #104]
    fa08:	stp	w22, wzr, [x0, #72]
    fa0c:	str	xzr, [x0, #80]
    fa10:	stp	w25, w26, [x0, #88]
    fa14:	strb	w27, [x0, #96]
    fa18:	stp	x20, x23, [x0, #56]
    fa1c:	stp	x8, xzr, [x0, #16]
    fa20:	ldp	w8, w9, [x19, #8]
    fa24:	cmp	w8, w9
    fa28:	b.cs	fac0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x32c>  // b.hs, b.nlast
    fa2c:	ldr	x10, [x19]
    fa30:	cmp	w8, w9
    fa34:	str	x0, [x10, w8, uxtw #3]
    fa38:	b.cs	fae8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x354>  // b.hs, b.nlast
    fa3c:	add	w8, w8, #0x1
    fa40:	str	w8, [x19, #8]
    fa44:	ldr	w8, [sp, #24]
    fa48:	ldr	x0, [sp, #16]
    fa4c:	cbz	w8, fa84 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2f0>
    fa50:	lsl	x19, x8, #3
    fa54:	sub	x20, x0, #0x8
    fa58:	b	fa68 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2d4>
    fa5c:	str	xzr, [x20, x19]
    fa60:	subs	x19, x19, #0x8
    fa64:	b.eq	fa80 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2ec>  // b.none
    fa68:	ldr	x0, [x20, x19]
    fa6c:	cbz	x0, fa5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2c8>
    fa70:	ldr	x8, [x0]
    fa74:	ldr	x8, [x8, #8]
    fa78:	blr	x8
    fa7c:	b	fa5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2c8>
    fa80:	ldr	x0, [sp, #16]
    fa84:	add	x8, sp, #0x10
    fa88:	add	x8, x8, #0x10
    fa8c:	cmp	x0, x8
    fa90:	b.eq	f844 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xb0>  // b.none
    fa94:	bl	0 <free>
    fa98:	b	f844 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0xb0>
    fa9c:	mov	x0, x19
    faa0:	mov	x1, xzr
    faa4:	bl	0 <LLVMInitializeAArch64AsmParser>
    faa8:	ldp	w8, w9, [x19, #8]
    faac:	ldr	x10, [x19]
    fab0:	cmp	w8, w9
    fab4:	str	x21, [x10, w8, uxtw #3]
    fab8:	b.cc	f9b8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x224>  // b.lo, b.ul, b.last
    fabc:	b	fae8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x354>
    fac0:	mov	x20, x0
    fac4:	mov	x0, x19
    fac8:	mov	x1, xzr
    facc:	bl	0 <LLVMInitializeAArch64AsmParser>
    fad0:	ldp	w8, w9, [x19, #8]
    fad4:	mov	x0, x20
    fad8:	ldr	x10, [x19]
    fadc:	cmp	w8, w9
    fae0:	str	x0, [x10, w8, uxtw #3]
    fae4:	b.cc	fa3c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPROperandILb1ELNS_23RegConstraintEqualityTyE0EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEE+0x2a8>  // b.lo, b.ul, b.last
    fae8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    faec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    faf0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    faf4:	add	x0, x0, #0x0
    faf8:	add	x1, x1, #0x0
    fafc:	add	x3, x3, #0x0
    fb00:	mov	w2, #0x43                  	// #67
    fb04:	bl	0 <__assert_fail>
    fb08:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fb0c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fb10:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    fb14:	add	x0, x0, #0x0
    fb18:	add	x1, x1, #0x0
    fb1c:	add	x3, x3, #0x0
    fb20:	mov	w2, #0xa7                  	// #167
    fb24:	bl	0 <__assert_fail>
    fb28:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fb2c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fb30:	add	x0, x0, #0x0
    fb34:	add	x1, x1, #0x0
    fb38:	mov	w2, #0x261                 	// #609
    fb3c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000000fb40 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    fb40:	sub	sp, sp, #0x80
    fb44:	stp	x29, x30, [sp, #32]
    fb48:	stp	x28, x27, [sp, #48]
    fb4c:	stp	x26, x25, [sp, #64]
    fb50:	stp	x24, x23, [sp, #80]
    fb54:	stp	x22, x21, [sp, #96]
    fb58:	stp	x20, x19, [sp, #112]
    fb5c:	add	x29, sp, #0x20
    fb60:	ldr	x19, [x0, #8]
    fb64:	mov	x21, x0
    fb68:	mov	x20, x1
    fb6c:	mov	x0, x19
    fb70:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fb74:	ldr	w8, [x0]
    fb78:	cmp	w8, #0x2
    fb7c:	b.ne	fc68 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x128>  // b.any
    fb80:	mov	x22, x0
    fb84:	ldr	x0, [x0, #8]
    fb88:	ldr	x1, [x22, #16]
    fb8c:	bl	0 <_ZN4llvm13AArch64SysReg18lookupSysRegByNameENS_9StringRefE>
    fb90:	cbz	x0, fbec <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xac>
    fb94:	mov	x23, x0
    fb98:	mov	x0, x21
    fb9c:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    fba0:	ldr	q0, [x23, #16]
    fba4:	ldp	x8, x9, [x0, #184]
    fba8:	ldr	x10, [x0, #200]
    fbac:	ldr	x11, [x23, #32]
    fbb0:	str	q0, [sp]
    fbb4:	ldp	x12, x13, [sp]
    fbb8:	and	x10, x11, x10
    fbbc:	and	x8, x12, x8
    fbc0:	and	x9, x13, x9
    fbc4:	str	x8, [sp]
    fbc8:	stp	x9, x10, [sp, #8]
    fbcc:	ldp	x11, x12, [x23, #16]
    fbd0:	ldr	x13, [x23, #32]
    fbd4:	eor	x8, x8, x11
    fbd8:	eor	x9, x9, x12
    fbdc:	eor	x10, x10, x13
    fbe0:	orr	x8, x8, x9
    fbe4:	orr	x8, x8, x10
    fbe8:	cbz	x8, fc70 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x130>
    fbec:	ldp	x0, x1, [x22, #8]
    fbf0:	bl	0 <_ZN4llvm13AArch64SysReg20parseGenericRegisterENS_9StringRefE>
    fbf4:	mov	w23, w0
    fbf8:	mov	w25, w0
    fbfc:	ldp	x0, x1, [x22, #8]
    fc00:	bl	0 <_ZN4llvm13AArch64PState18lookupPStateByNameENS_9StringRefE>
    fc04:	cbz	x0, fc60 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x120>
    fc08:	mov	x24, x0
    fc0c:	mov	x0, x21
    fc10:	bl	0 <_ZNK4llvm17MCTargetAsmParser6getSTIEv>
    fc14:	ldr	q0, [x24, #16]
    fc18:	ldp	x8, x9, [x0, #184]
    fc1c:	ldr	x10, [x0, #200]
    fc20:	ldr	x11, [x24, #32]
    fc24:	str	q0, [sp]
    fc28:	ldp	x12, x13, [sp]
    fc2c:	and	x10, x11, x10
    fc30:	and	x8, x12, x8
    fc34:	and	x9, x13, x9
    fc38:	str	x8, [sp]
    fc3c:	stp	x9, x10, [sp, #8]
    fc40:	ldp	x11, x12, [x24, #16]
    fc44:	ldr	x13, [x24, #32]
    fc48:	eor	x8, x8, x11
    fc4c:	eor	x9, x9, x12
    fc50:	eor	x10, x10, x13
    fc54:	orr	x8, x8, x9
    fc58:	orr	x8, x8, x10
    fc5c:	cbz	x8, fc8c <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x14c>
    fc60:	mov	w26, #0xffffffff            	// #-1
    fc64:	b	fc90 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x150>
    fc68:	mov	w0, #0x1                   	// #1
    fc6c:	b	fd34 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1f4>
    fc70:	ldrb	w8, [x23, #12]
    fc74:	cbz	w8, fd54 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x214>
    fc78:	ldr	w25, [x23, #8]
    fc7c:	ldrb	w8, [x23, #13]
    fc80:	cbz	w8, fd60 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x220>
    fc84:	ldr	w23, [x23, #8]
    fc88:	b	fbfc <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xbc>
    fc8c:	ldrh	w26, [x24, #8]
    fc90:	ldr	x0, [x21, #8]
    fc94:	ldp	x27, x28, [x22, #8]
    fc98:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fc9c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fca0:	ldr	x8, [x21, #8]
    fca4:	mov	x22, x0
    fca8:	ldr	x9, [x8]
    fcac:	mov	x0, x8
    fcb0:	ldr	x9, [x9, #48]
    fcb4:	blr	x9
    fcb8:	mov	x24, x0
    fcbc:	mov	w0, #0x70                  	// #112
    fcc0:	bl	0 <_Znwm>
    fcc4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    fcc8:	mov	x8, x0
    fccc:	add	x9, x9, #0x0
    fcd0:	strb	wzr, [x8, #32]!
    fcd4:	str	x9, [x0]
    fcd8:	mov	w9, #0x7                   	// #7
    fcdc:	str	w9, [x0, #48]
    fce0:	str	x24, [x0, #104]
    fce4:	stp	x22, x27, [x0, #64]
    fce8:	stp	w28, w25, [x0, #80]
    fcec:	stp	w23, w26, [x0, #88]
    fcf0:	str	x22, [x0, #56]
    fcf4:	stp	x8, xzr, [x0, #16]
    fcf8:	ldp	w8, w9, [x20, #8]
    fcfc:	mov	x21, x0
    fd00:	cmp	w8, w9
    fd04:	b.cs	fd68 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x228>  // b.hs, b.nlast
    fd08:	ldr	x10, [x20]
    fd0c:	cmp	w8, w9
    fd10:	str	x21, [x10, w8, uxtw #3]
    fd14:	b.cs	fd88 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x248>  // b.hs, b.nlast
    fd18:	add	w8, w8, #0x1
    fd1c:	str	w8, [x20, #8]
    fd20:	ldr	x8, [x19]
    fd24:	mov	x0, x19
    fd28:	ldr	x8, [x8, #136]
    fd2c:	blr	x8
    fd30:	mov	w0, wzr
    fd34:	ldp	x20, x19, [sp, #112]
    fd38:	ldp	x22, x21, [sp, #96]
    fd3c:	ldp	x24, x23, [sp, #80]
    fd40:	ldp	x26, x25, [sp, #64]
    fd44:	ldp	x28, x27, [sp, #48]
    fd48:	ldp	x29, x30, [sp, #32]
    fd4c:	add	sp, sp, #0x80
    fd50:	ret
    fd54:	mov	w25, #0xffffffff            	// #-1
    fd58:	ldrb	w8, [x23, #13]
    fd5c:	cbnz	w8, fc84 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x144>
    fd60:	mov	w23, #0xffffffff            	// #-1
    fd64:	b	fbfc <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xbc>
    fd68:	mov	x0, x20
    fd6c:	mov	x1, xzr
    fd70:	bl	0 <LLVMInitializeAArch64AsmParser>
    fd74:	ldp	w8, w9, [x20, #8]
    fd78:	ldr	x10, [x20]
    fd7c:	cmp	w8, w9
    fd80:	str	x21, [x10, w8, uxtw #3]
    fd84:	b.cc	fd18 <_ZN12_GLOBAL__N_116AArch64AsmParser14tryParseSysRegERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1d8>  // b.lo, b.ul, b.last
    fd88:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
    fd8c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
    fd90:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
    fd94:	add	x0, x0, #0x0
    fd98:	add	x1, x1, #0x0
    fd9c:	add	x3, x3, #0x0
    fda0:	mov	w2, #0x43                  	// #67
    fda4:	bl	0 <__assert_fail>

000000000000fda8 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
    fda8:	sub	sp, sp, #0xc0
    fdac:	stp	x29, x30, [sp, #96]
    fdb0:	stp	x28, x27, [sp, #112]
    fdb4:	stp	x26, x25, [sp, #128]
    fdb8:	stp	x24, x23, [sp, #144]
    fdbc:	stp	x22, x21, [sp, #160]
    fdc0:	stp	x20, x19, [sp, #176]
    fdc4:	add	x29, sp, #0x60
    fdc8:	mov	x20, x0
    fdcc:	ldr	x0, [x0, #8]
    fdd0:	mov	x19, x1
    fdd4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fdd8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fddc:	mov	x22, x0
    fde0:	sub	x1, x29, #0x14
    fde4:	sub	x2, x29, #0x10
    fde8:	mov	w3, #0x3                   	// #3
    fdec:	mov	x0, x20
    fdf0:	stp	xzr, xzr, [x29, #-16]
    fdf4:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
    fdf8:	mov	w21, w0
    fdfc:	cbnz	w0, ff14 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x16c>
    fe00:	ldp	x1, x23, [x29, #-16]
    fe04:	sub	x0, x29, #0x20
    fe08:	mov	w3, #0x3                   	// #3
    fe0c:	mov	w26, #0x3                   	// #3
    fe10:	mov	x2, x23
    fe14:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
    fe18:	ldurb	w8, [x29, #-24]
    fe1c:	cbz	w8, ff04 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x15c>
    fe20:	ldr	x0, [x20, #8]
    fe24:	ldur	w27, [x29, #-28]
    fe28:	ldur	w28, [x29, #-20]
    fe2c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fe30:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    fe34:	ldr	x8, [x20, #8]
    fe38:	mov	x24, x0
    fe3c:	ldr	x9, [x8]
    fe40:	mov	x0, x8
    fe44:	ldr	x9, [x9, #48]
    fe48:	blr	x9
    fe4c:	mov	x25, x0
    fe50:	mov	w0, #0x70                  	// #112
    fe54:	bl	0 <_Znwm>
    fe58:	mov	x8, x0
    fe5c:	strb	wzr, [x8, #32]!
    fe60:	str	x25, [x0, #104]
    fe64:	adrp	x25, 0 <LLVMInitializeAArch64AsmParser>
    fe68:	add	x25, x25, #0x0
    fe6c:	str	x25, [x0]
    fe70:	str	w26, [x0, #48]
    fe74:	stp	w28, w26, [x0, #72]
    fe78:	stur	xzr, [x0, #89]
    fe7c:	stur	xzr, [x0, #84]
    fe80:	stp	x22, x24, [x0, #56]
    fe84:	str	w27, [x0, #80]
    fe88:	stp	x8, xzr, [x0, #16]
    fe8c:	ldp	w8, w9, [x19, #8]
    fe90:	mov	x21, x0
    fe94:	cmp	w8, w9
    fe98:	b.cs	1013c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x394>  // b.hs, b.nlast
    fe9c:	ldr	x10, [x19]
    fea0:	cmp	w8, w9
    fea4:	str	x21, [x10, w8, uxtw #3]
    fea8:	b.cs	101a4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3fc>  // b.hs, b.nlast
    feac:	add	w8, w8, #0x1
    feb0:	str	w8, [x19, #8]
    feb4:	ldr	x21, [x20, #8]
    feb8:	mov	x0, x21
    febc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    fec0:	ldr	w8, [x0]
    fec4:	cmp	w8, #0xf
    fec8:	b.ne	ff0c <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x164>  // b.any
    fecc:	cbz	x23, ff38 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x190>
    fed0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
    fed4:	add	x8, x8, #0x0
    fed8:	mov	w9, #0x103                 	// #259
    fedc:	stp	x8, xzr, [sp, #32]
    fee0:	strh	w9, [sp, #48]
    fee4:	ldr	x0, [x20, #8]
    fee8:	add	x2, sp, #0x20
    feec:	mov	x1, x22
    fef0:	mov	x3, xzr
    fef4:	mov	x4, xzr
    fef8:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
    fefc:	mov	w21, #0x2                   	// #2
    ff00:	b	ff10 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x168>
    ff04:	mov	w21, #0x1                   	// #1
    ff08:	b	ff14 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x16c>
    ff0c:	mov	w21, wzr
    ff10:	sturb	wzr, [x29, #-24]
    ff14:	mov	w0, w21
    ff18:	ldp	x20, x19, [sp, #176]
    ff1c:	ldp	x22, x21, [sp, #160]
    ff20:	ldp	x24, x23, [sp, #144]
    ff24:	ldp	x26, x25, [sp, #128]
    ff28:	ldp	x28, x27, [sp, #112]
    ff2c:	ldp	x29, x30, [sp, #96]
    ff30:	add	sp, sp, #0xc0
    ff34:	ret
    ff38:	ldr	x0, [x20, #8]
    ff3c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ff40:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
    ff44:	ldr	x8, [x20, #8]
    ff48:	mov	x23, x0
    ff4c:	ldr	x9, [x8]
    ff50:	mov	x0, x8
    ff54:	ldr	x9, [x9, #48]
    ff58:	blr	x9
    ff5c:	mov	x24, x0
    ff60:	mov	w0, #0x70                  	// #112
    ff64:	bl	0 <_Znwm>
    ff68:	mov	x8, x0
    ff6c:	mov	w9, #0x6                   	// #6
    ff70:	strb	wzr, [x8, #32]!
    ff74:	str	w9, [x0, #48]
    ff78:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
    ff7c:	add	x9, x9, #0x0
    ff80:	stp	x23, x9, [x0, #64]
    ff84:	mov	w9, #0x1                   	// #1
    ff88:	str	x24, [x0, #104]
    ff8c:	str	x25, [x0]
    ff90:	str	w9, [x0, #80]
    ff94:	strb	wzr, [x0, #84]
    ff98:	str	x23, [x0, #56]
    ff9c:	stp	x8, xzr, [x0, #16]
    ffa0:	ldp	w8, w9, [x19, #8]
    ffa4:	mov	x22, x0
    ffa8:	cmp	w8, w9
    ffac:	b.cs	10160 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3b8>  // b.hs, b.nlast
    ffb0:	ldr	x10, [x19]
    ffb4:	cmp	w8, w9
    ffb8:	str	x22, [x10, w8, uxtw #3]
    ffbc:	b.cs	101a4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3fc>  // b.hs, b.nlast
    ffc0:	add	w8, w8, #0x1
    ffc4:	str	w8, [x19, #8]
    ffc8:	ldr	x8, [x21]
    ffcc:	mov	x0, x21
    ffd0:	ldr	x8, [x8, #136]
    ffd4:	blr	x8
    ffd8:	mov	x0, x21
    ffdc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
    ffe0:	ldur	q0, [x0, #8]
    ffe4:	add	x8, sp, #0x20
    ffe8:	mov	x0, sp
    ffec:	str	q0, [sp]
    fff0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
    fff4:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
    fff8:	add	x22, x22, #0x0
    fffc:	add	x0, sp, #0x20
   10000:	mov	x1, x22
   10004:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
   10008:	cbz	w0, 10064 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2bc>
   1000c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10010:	add	x1, x1, #0x0
   10014:	add	x0, sp, #0x20
   10018:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
   1001c:	cbz	w0, 10064 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2bc>
   10020:	ldr	x0, [x20, #8]
   10024:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10028:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   1002c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10030:	add	x8, x8, #0x0
   10034:	mov	w9, #0x103                 	// #259
   10038:	stp	x8, xzr, [sp]
   1003c:	strh	w9, [sp, #16]
   10040:	ldr	x8, [x20, #8]
   10044:	mov	x1, x0
   10048:	mov	x2, sp
   1004c:	mov	x3, xzr
   10050:	mov	x0, x8
   10054:	mov	x4, xzr
   10058:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   1005c:	mov	w21, #0x2                   	// #2
   10060:	b	10120 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x378>
   10064:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   10068:	add	x0, sp, #0x20
   1006c:	mov	x1, x22
   10070:	add	x23, x23, #0x0
   10074:	bl	0 <_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc>
   10078:	ldr	x8, [x20, #8]
   1007c:	cmp	w0, #0x0
   10080:	csel	x24, x22, x23, eq  // eq = none
   10084:	mov	x0, x8
   10088:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   1008c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10090:	ldr	x8, [x20, #8]
   10094:	mov	x22, x0
   10098:	ldr	x9, [x8]
   1009c:	mov	x0, x8
   100a0:	ldr	x9, [x9, #48]
   100a4:	blr	x9
   100a8:	mov	x23, x0
   100ac:	mov	w0, #0x70                  	// #112
   100b0:	bl	0 <_Znwm>
   100b4:	mov	x8, x0
   100b8:	mov	w9, #0x6                   	// #6
   100bc:	strb	wzr, [x8, #32]!
   100c0:	str	w9, [x0, #48]
   100c4:	mov	w9, #0x1                   	// #1
   100c8:	str	x25, [x0]
   100cc:	str	x23, [x0, #104]
   100d0:	stp	x22, x24, [x0, #64]
   100d4:	str	w9, [x0, #80]
   100d8:	strb	wzr, [x0, #84]
   100dc:	str	x22, [x0, #56]
   100e0:	stp	x8, xzr, [x0, #16]
   100e4:	ldp	w8, w9, [x19, #8]
   100e8:	mov	x20, x0
   100ec:	cmp	w8, w9
   100f0:	b.cs	10184 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3dc>  // b.hs, b.nlast
   100f4:	ldr	x10, [x19]
   100f8:	cmp	w8, w9
   100fc:	str	x20, [x10, w8, uxtw #3]
   10100:	b.cs	101a4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3fc>  // b.hs, b.nlast
   10104:	add	w8, w8, #0x1
   10108:	str	w8, [x19, #8]
   1010c:	ldr	x8, [x21]
   10110:	mov	x0, x21
   10114:	ldr	x8, [x8, #136]
   10118:	blr	x8
   1011c:	mov	w21, wzr
   10120:	ldr	x0, [sp, #32]
   10124:	add	x8, sp, #0x20
   10128:	add	x8, x8, #0x10
   1012c:	cmp	x0, x8
   10130:	b.eq	ff10 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x168>  // b.none
   10134:	bl	0 <_ZdlPv>
   10138:	b	ff10 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x168>
   1013c:	mov	x0, x19
   10140:	mov	x1, xzr
   10144:	bl	0 <LLVMInitializeAArch64AsmParser>
   10148:	ldp	w8, w9, [x19, #8]
   1014c:	ldr	x10, [x19]
   10150:	cmp	w8, w9
   10154:	str	x21, [x10, w8, uxtw #3]
   10158:	b.cc	feac <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x104>  // b.lo, b.ul, b.last
   1015c:	b	101a4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3fc>
   10160:	mov	x0, x19
   10164:	mov	x1, xzr
   10168:	bl	0 <LLVMInitializeAArch64AsmParser>
   1016c:	ldp	w8, w9, [x19, #8]
   10170:	ldr	x10, [x19]
   10174:	cmp	w8, w9
   10178:	str	x22, [x10, w8, uxtw #3]
   1017c:	b.cc	ffc0 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x218>  // b.lo, b.ul, b.last
   10180:	b	101a4 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x3fc>
   10184:	mov	x0, x19
   10188:	mov	x1, xzr
   1018c:	bl	0 <LLVMInitializeAArch64AsmParser>
   10190:	ldp	w8, w9, [x19, #8]
   10194:	ldr	x10, [x19]
   10198:	cmp	w8, w9
   1019c:	str	x20, [x10, w8, uxtw #3]
   101a0:	b.cc	10104 <_ZN12_GLOBAL__N_116AArch64AsmParser26tryParseSVEPredicateVectorERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x35c>  // b.lo, b.ul, b.last
   101a4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   101a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   101ac:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   101b0:	add	x0, x0, #0x0
   101b4:	add	x1, x1, #0x0
   101b8:	add	x3, x3, #0x0
   101bc:	mov	w2, #0x43                  	// #67
   101c0:	bl	0 <__assert_fail>

00000000000101c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>:
   101c4:	sub	sp, sp, #0xa0
   101c8:	stp	x29, x30, [sp, #64]
   101cc:	stp	x28, x27, [sp, #80]
   101d0:	stp	x26, x25, [sp, #96]
   101d4:	stp	x24, x23, [sp, #112]
   101d8:	stp	x22, x21, [sp, #128]
   101dc:	stp	x20, x19, [sp, #144]
   101e0:	add	x29, sp, #0x40
   101e4:	mov	x21, x0
   101e8:	ldr	x0, [x0, #8]
   101ec:	mov	x19, x1
   101f0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   101f4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   101f8:	ldr	x8, [x21, #8]
   101fc:	mov	x20, x0
   10200:	mov	x0, x8
   10204:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10208:	ldr	w8, [x0]
   1020c:	cmp	w8, #0x2
   10210:	b.ne	102d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x110>  // b.any
   10214:	ldr	x22, [x21, #8]
   10218:	mov	x0, x22
   1021c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10220:	ldr	w8, [x0]
   10224:	cmp	w8, #0x2
   10228:	b.ne	10300 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x13c>  // b.any
   1022c:	ldur	q0, [x0, #8]
   10230:	add	x8, sp, #0x20
   10234:	add	x0, sp, #0x10
   10238:	add	x23, sp, #0x20
   1023c:	str	q0, [sp, #16]
   10240:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
   10244:	ldp	x1, x2, [sp, #32]
   10248:	mov	x0, x21
   1024c:	mov	w3, wzr
   10250:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
   10254:	mov	w24, w0
   10258:	cbz	w0, 10324 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x160>
   1025c:	ldr	x8, [x22]
   10260:	mov	x0, x22
   10264:	ldr	x8, [x8, #136]
   10268:	blr	x8
   1026c:	mov	w22, wzr
   10270:	ldr	x0, [sp, #32]
   10274:	add	x8, x23, #0x10
   10278:	cmp	x0, x8
   1027c:	b.eq	10284 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc0>  // b.none
   10280:	bl	0 <_ZdlPv>
   10284:	cbnz	w22, 10300 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x13c>
   10288:	adrp	x27, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1028c:	ldr	x27, [x27]
   10290:	mov	w22, w24
   10294:	lsr	x8, x22, #3
   10298:	ldrh	w9, [x27, #566]
   1029c:	cmp	w8, w9
   102a0:	b.cs	1033c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x178>  // b.hs, b.nlast
   102a4:	ldr	x9, [x27, #552]
   102a8:	and	w10, w24, #0x7
   102ac:	ldrb	w9, [x9, x8]
   102b0:	lsr	w9, w9, w10
   102b4:	and	w28, w9, #0x1
   102b8:	ldrh	w9, [x27, #214]
   102bc:	cmp	w8, w9
   102c0:	b.cc	1034c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x188>  // b.lo, b.ul, b.last
   102c4:	mov	w25, wzr
   102c8:	orr	w8, w28, w25
   102cc:	tbnz	w8, #0, 10368 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x1a4>
   102d0:	b	10424 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x260>
   102d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   102d8:	add	x8, x8, #0x0
   102dc:	mov	w9, #0x103                 	// #259
   102e0:	stp	x8, xzr, [sp, #32]
   102e4:	strh	w9, [sp, #48]
   102e8:	ldr	x0, [x21, #8]
   102ec:	add	x2, sp, #0x20
   102f0:	mov	x1, x20
   102f4:	mov	x3, xzr
   102f8:	mov	x4, xzr
   102fc:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   10300:	mov	w0, #0x2                   	// #2
   10304:	ldp	x20, x19, [sp, #144]
   10308:	ldp	x22, x21, [sp, #128]
   1030c:	ldp	x24, x23, [sp, #112]
   10310:	ldp	x26, x25, [sp, #96]
   10314:	ldp	x28, x27, [sp, #80]
   10318:	ldp	x29, x30, [sp, #64]
   1031c:	add	sp, sp, #0xa0
   10320:	ret
   10324:	mov	w22, #0x1                   	// #1
   10328:	ldr	x0, [sp, #32]
   1032c:	add	x8, x23, #0x10
   10330:	cmp	x0, x8
   10334:	b.ne	10280 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xbc>  // b.any
   10338:	b	10284 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0xc0>
   1033c:	mov	w28, wzr
   10340:	ldrh	w9, [x27, #214]
   10344:	cmp	w8, w9
   10348:	b.cs	102c4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x100>  // b.hs, b.nlast
   1034c:	ldr	x9, [x27, #200]
   10350:	ldrb	w8, [x9, x8]
   10354:	and	w9, w24, #0x7
   10358:	lsr	w8, w8, w9
   1035c:	and	w25, w8, #0x1
   10360:	orr	w8, w28, w25
   10364:	tbz	w8, #0, 10424 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x260>
   10368:	ldr	x0, [x21, #8]
   1036c:	ldr	x8, [x0]
   10370:	ldr	x8, [x8, #48]
   10374:	blr	x8
   10378:	ldr	x23, [x0, #24]
   1037c:	ldr	w8, [x23, #8]
   10380:	cmp	w8, w24
   10384:	b.ls	10620 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x45c>  // b.plast
   10388:	ldr	x8, [x23, #104]
   1038c:	ldrh	w24, [x8, x22, lsl #1]
   10390:	tbnz	w24, #0, 10424 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x260>
   10394:	ldr	x0, [x21, #8]
   10398:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   1039c:	ldr	w8, [x0]
   103a0:	ldr	x0, [x21, #8]
   103a4:	cmp	w8, #0x19
   103a8:	b.ne	10430 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x26c>  // b.any
   103ac:	ldr	x8, [x0]
   103b0:	ldr	x8, [x8, #136]
   103b4:	blr	x8
   103b8:	ldr	x0, [x21, #8]
   103bc:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   103c0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   103c4:	ldr	x26, [x21, #8]
   103c8:	str	x0, [sp, #8]
   103cc:	mov	x0, x26
   103d0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   103d4:	ldr	w8, [x0]
   103d8:	cmp	w8, #0x2
   103dc:	b.ne	10300 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x13c>  // b.any
   103e0:	ldur	q0, [x0, #8]
   103e4:	add	x8, sp, #0x20
   103e8:	add	x0, sp, #0x10
   103ec:	str	q0, [sp, #16]
   103f0:	bl	0 <_ZNK4llvm9StringRef5lowerB5cxx11Ev>
   103f4:	ldp	x1, x2, [sp, #32]
   103f8:	mov	x0, x21
   103fc:	mov	w3, wzr
   10400:	bl	702c <_ZN12_GLOBAL__N_116AArch64AsmParser22matchRegisterNameAliasEN4llvm9StringRefENS_7RegKindE>
   10404:	str	w0, [sp, #4]
   10408:	cbz	w0, 10460 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x29c>
   1040c:	ldr	x8, [x26]
   10410:	mov	x0, x26
   10414:	ldr	x8, [x8, #136]
   10418:	blr	x8
   1041c:	mov	w26, wzr
   10420:	b	10464 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2a0>
   10424:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10428:	add	x8, x8, #0x0
   1042c:	b	102dc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x118>
   10430:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10434:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10438:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1043c:	add	x8, x8, #0x0
   10440:	mov	w9, #0x103                 	// #259
   10444:	stp	x8, xzr, [sp, #32]
   10448:	strh	w9, [sp, #48]
   1044c:	ldr	x8, [x21, #8]
   10450:	mov	x1, x0
   10454:	add	x2, sp, #0x20
   10458:	mov	x0, x8
   1045c:	b	102f4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x130>
   10460:	mov	w26, #0x1                   	// #1
   10464:	ldr	x0, [sp, #32]
   10468:	add	x8, sp, #0x20
   1046c:	add	x8, x8, #0x10
   10470:	cmp	x0, x8
   10474:	b.eq	1047c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x2b8>  // b.none
   10478:	bl	0 <_ZdlPv>
   1047c:	cbnz	w26, 10300 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x13c>
   10480:	ldr	w8, [x23, #8]
   10484:	ldr	w10, [sp, #4]
   10488:	cmp	w8, w10
   1048c:	b.ls	10620 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x45c>  // b.plast
   10490:	ldr	x8, [x23, #104]
   10494:	add	w9, w24, #0x1
   10498:	ldrh	w8, [x8, w10, uxtw #1]
   1049c:	cmp	w9, w8
   104a0:	b.ne	1050c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x348>  // b.any
   104a4:	cbz	w28, 104d0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x30c>
   104a8:	ldrh	w9, [x27, #566]
   104ac:	mov	w8, w10
   104b0:	lsr	x8, x8, #3
   104b4:	cmp	w8, w9
   104b8:	b.cs	1050c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x348>  // b.hs, b.nlast
   104bc:	ldr	x9, [x27, #552]
   104c0:	ldrb	w8, [x9, x8]
   104c4:	and	w9, w10, #0x7
   104c8:	lsr	w8, w8, w9
   104cc:	tbz	w8, #0, 1050c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x348>
   104d0:	cbz	w25, 104fc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x338>
   104d4:	ldrh	w9, [x27, #214]
   104d8:	mov	w8, w10
   104dc:	lsr	x8, x8, #3
   104e0:	cmp	w8, w9
   104e4:	b.cs	1050c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x348>  // b.hs, b.nlast
   104e8:	ldr	x9, [x27, #200]
   104ec:	ldrb	w8, [x9, x8]
   104f0:	and	w9, w10, #0x7
   104f4:	lsr	w8, w8, w9
   104f8:	tbz	w8, #0, 1050c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x348>
   104fc:	cbz	w28, 10530 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x36c>
   10500:	add	x3, x27, #0x380
   10504:	mov	w2, #0x11                  	// #17
   10508:	b	10538 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x374>
   1050c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10510:	add	x8, x8, #0x0
   10514:	mov	w9, #0x103                 	// #259
   10518:	stp	x8, xzr, [sp, #32]
   1051c:	strh	w9, [sp, #48]
   10520:	ldr	x0, [x21, #8]
   10524:	ldr	x1, [sp, #8]
   10528:	add	x2, sp, #0x20
   1052c:	b	102f4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x130>
   10530:	add	x3, x27, #0x180
   10534:	mov	w2, #0x10                  	// #16
   10538:	mov	x0, x23
   1053c:	mov	x1, x22
   10540:	bl	0 <_ZNK4llvm14MCRegisterInfo19getMatchingSuperRegENS_10MCRegisterEjPKNS_15MCRegisterClassE>
   10544:	mov	x22, x0
   10548:	ldr	x0, [x21, #8]
   1054c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10550:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10554:	ldr	x8, [x21, #8]
   10558:	mov	x23, x0
   1055c:	ldr	x9, [x8]
   10560:	mov	x0, x8
   10564:	ldr	x9, [x9, #48]
   10568:	blr	x9
   1056c:	mov	x24, x0
   10570:	mov	w0, #0x70                  	// #112
   10574:	bl	0 <_Znwm>
   10578:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1057c:	mov	x8, x0
   10580:	add	x9, x9, #0x0
   10584:	strb	wzr, [x8, #32]!
   10588:	str	x9, [x0]
   1058c:	mov	w9, #0x3                   	// #3
   10590:	str	w9, [x0, #48]
   10594:	str	x24, [x0, #104]
   10598:	str	w22, [x0, #72]
   1059c:	stur	xzr, [x0, #89]
   105a0:	stur	xzr, [x0, #84]
   105a4:	stur	xzr, [x0, #76]
   105a8:	stp	x20, x23, [x0, #56]
   105ac:	stp	x8, xzr, [x0, #16]
   105b0:	ldp	w8, w9, [x19, #8]
   105b4:	mov	x21, x0
   105b8:	cmp	w8, w9
   105bc:	b.cs	105e0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x41c>  // b.hs, b.nlast
   105c0:	ldr	x10, [x19]
   105c4:	cmp	w8, w9
   105c8:	str	x21, [x10, w8, uxtw #3]
   105cc:	b.cs	10600 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x43c>  // b.hs, b.nlast
   105d0:	mov	w0, wzr
   105d4:	add	w8, w8, #0x1
   105d8:	str	w8, [x19, #8]
   105dc:	b	10304 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x140>
   105e0:	mov	x0, x19
   105e4:	mov	x1, xzr
   105e8:	bl	0 <LLVMInitializeAArch64AsmParser>
   105ec:	ldp	w8, w9, [x19, #8]
   105f0:	ldr	x10, [x19]
   105f4:	cmp	w8, w9
   105f8:	str	x21, [x10, w8, uxtw #3]
   105fc:	b.cc	105d0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseGPRSeqPairERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE+0x40c>  // b.lo, b.ul, b.last
   10600:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10604:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10608:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1060c:	add	x0, x0, #0x0
   10610:	add	x1, x1, #0x0
   10614:	add	x3, x3, #0x0
   10618:	mov	w2, #0x43                  	// #67
   1061c:	bl	0 <__assert_fail>
   10620:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10624:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10628:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1062c:	add	x0, x0, #0x0
   10630:	add	x1, x1, #0x0
   10634:	add	x3, x3, #0x0
   10638:	mov	w2, #0x224                 	// #548
   1063c:	bl	0 <__assert_fail>

0000000000010640 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   10640:	sub	sp, sp, #0xa0
   10644:	stp	x29, x30, [sp, #64]
   10648:	stp	x28, x27, [sp, #80]
   1064c:	stp	x26, x25, [sp, #96]
   10650:	stp	x24, x23, [sp, #112]
   10654:	stp	x22, x21, [sp, #128]
   10658:	stp	x20, x19, [sp, #144]
   1065c:	add	x29, sp, #0x40
   10660:	mov	x22, x0
   10664:	ldr	x0, [x0, #8]
   10668:	mov	x19, x1
   1066c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10670:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10674:	mov	x21, x0
   10678:	sub	x1, x29, #0x4
   1067c:	sub	x2, x29, #0x18
   10680:	mov	w3, #0x2                   	// #2
   10684:	mov	x0, x22
   10688:	stp	xzr, xzr, [x29, #-24]
   1068c:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   10690:	mov	w20, w0
   10694:	cbnz	w0, 108f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b4>
   10698:	ldur	x2, [x29, #-16]
   1069c:	cbz	x2, 10774 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x134>
   106a0:	ldur	x1, [x29, #-24]
   106a4:	add	x0, sp, #0x18
   106a8:	mov	w3, #0x2                   	// #2
   106ac:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   106b0:	ldrb	w8, [sp, #32]
   106b4:	cbz	w8, 10774 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x134>
   106b8:	ldr	x0, [x22, #8]
   106bc:	ldr	w25, [sp, #28]
   106c0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   106c4:	ldr	w8, [x0]
   106c8:	cmp	w8, #0x19
   106cc:	b.ne	1077c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13c>  // b.any
   106d0:	ldr	x0, [x22, #8]
   106d4:	ldr	x8, [x0]
   106d8:	ldr	x8, [x8, #136]
   106dc:	blr	x8
   106e0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   106e4:	ldr	d0, [x8]
   106e8:	mov	x8, sp
   106ec:	add	x8, x8, #0x10
   106f0:	mov	x1, sp
   106f4:	mov	x0, x22
   106f8:	str	x8, [sp]
   106fc:	str	d0, [sp, #8]
   10700:	bl	d29c <_ZN12_GLOBAL__N_116AArch64AsmParser27tryParseOptionalShiftExtendERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
   10704:	mov	w20, w0
   10708:	cbnz	w0, 1089c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>
   1070c:	ldr	w8, [sp, #8]
   10710:	cbz	w8, 10984 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x344>
   10714:	ldr	x9, [sp]
   10718:	ldur	w26, [x29, #-4]
   1071c:	add	x8, x9, x8, lsl #3
   10720:	ldur	x24, [x8, #-8]
   10724:	ldr	x8, [x24]
   10728:	mov	x0, x24
   1072c:	ldr	x8, [x8, #80]
   10730:	blr	x8
   10734:	ldr	x8, [x22, #8]
   10738:	mov	x22, x0
   1073c:	ldr	x9, [x8]
   10740:	mov	x0, x8
   10744:	ldr	x9, [x9, #48]
   10748:	blr	x9
   1074c:	ldr	w8, [x24, #48]
   10750:	mov	x23, x0
   10754:	cmp	w8, #0x3
   10758:	b.eq	1081c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dc>  // b.none
   1075c:	cmp	w8, #0xa
   10760:	b.ne	109a4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x364>  // b.any
   10764:	add	x8, x24, #0x48
   10768:	add	x9, x24, #0x4c
   1076c:	add	x10, x24, #0x50
   10770:	b	10828 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e8>
   10774:	mov	w20, #0x1                   	// #1
   10778:	b	108f4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b4>
   1077c:	ldr	x0, [x22, #8]
   10780:	ldur	w24, [x29, #-4]
   10784:	ldr	x8, [x0]
   10788:	ldr	x8, [x8, #48]
   1078c:	blr	x8
   10790:	mov	x23, x0
   10794:	mov	w0, #0x70                  	// #112
   10798:	bl	0 <_Znwm>
   1079c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   107a0:	mov	x8, x0
   107a4:	add	x9, x9, #0x0
   107a8:	strb	wzr, [x8, #32]!
   107ac:	str	x9, [x0]
   107b0:	mov	w9, #0x3                   	// #3
   107b4:	str	w9, [x0, #48]
   107b8:	mov	w9, #0x2                   	// #2
   107bc:	str	x23, [x0, #104]
   107c0:	stp	w24, w9, [x0, #72]
   107c4:	stur	xzr, [x0, #89]
   107c8:	stur	xzr, [x0, #84]
   107cc:	stp	x21, x21, [x0, #56]
   107d0:	str	w25, [x0, #80]
   107d4:	stp	x8, xzr, [x0, #16]
   107d8:	ldp	w8, w9, [x19, #8]
   107dc:	mov	x20, x0
   107e0:	cmp	w8, w9
   107e4:	b.cs	10918 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2d8>  // b.hs, b.nlast
   107e8:	ldr	x10, [x19]
   107ec:	cmp	w8, w9
   107f0:	str	x20, [x10, w8, uxtw #3]
   107f4:	b.cs	10964 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x324>  // b.hs, b.nlast
   107f8:	add	w8, w8, #0x1
   107fc:	mov	x0, x22
   10800:	mov	x1, x19
   10804:	str	w8, [x19, #8]
   10808:	bl	c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
   1080c:	cmp	w0, #0x2
   10810:	cset	w8, eq  // eq = none
   10814:	lsl	w20, w8, #1
   10818:	b	108f0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b0>
   1081c:	add	x8, x24, #0x58
   10820:	add	x9, x24, #0x5c
   10824:	add	x10, x24, #0x60
   10828:	ldr	w24, [x8]
   1082c:	ldr	w27, [x9]
   10830:	ldrb	w28, [x10]
   10834:	mov	w0, #0x70                  	// #112
   10838:	bl	0 <_Znwm>
   1083c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10840:	mov	x8, x0
   10844:	add	x9, x9, #0x0
   10848:	strb	wzr, [x8, #32]!
   1084c:	str	x9, [x0]
   10850:	mov	w9, #0x3                   	// #3
   10854:	str	w9, [x0, #48]
   10858:	mov	w9, #0x2                   	// #2
   1085c:	str	x23, [x0, #104]
   10860:	stp	w26, w9, [x0, #72]
   10864:	stp	w24, w27, [x0, #88]
   10868:	strb	w28, [x0, #96]
   1086c:	stp	x21, x22, [x0, #56]
   10870:	stp	w25, wzr, [x0, #80]
   10874:	stp	x8, xzr, [x0, #16]
   10878:	ldp	w8, w9, [x19, #8]
   1087c:	cmp	w8, w9
   10880:	b.cs	1093c <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2fc>  // b.hs, b.nlast
   10884:	ldr	x10, [x19]
   10888:	cmp	w8, w9
   1088c:	str	x0, [x10, w8, uxtw #3]
   10890:	b.cs	10964 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x324>  // b.hs, b.nlast
   10894:	add	w8, w8, #0x1
   10898:	str	w8, [x19, #8]
   1089c:	ldr	w8, [sp, #8]
   108a0:	ldr	x0, [sp]
   108a4:	cbz	w8, 108dc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x29c>
   108a8:	lsl	x19, x8, #3
   108ac:	sub	x21, x0, #0x8
   108b0:	b	108c0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x280>
   108b4:	str	xzr, [x21, x19]
   108b8:	subs	x19, x19, #0x8
   108bc:	b.eq	108d8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x298>  // b.none
   108c0:	ldr	x0, [x21, x19]
   108c4:	cbz	x0, 108b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x274>
   108c8:	ldr	x8, [x0]
   108cc:	ldr	x8, [x8, #8]
   108d0:	blr	x8
   108d4:	b	108b4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x274>
   108d8:	ldr	x0, [sp]
   108dc:	mov	x8, sp
   108e0:	add	x8, x8, #0x10
   108e4:	cmp	x0, x8
   108e8:	b.eq	108f0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2b0>  // b.none
   108ec:	bl	0 <free>
   108f0:	strb	wzr, [sp, #32]
   108f4:	mov	w0, w20
   108f8:	ldp	x20, x19, [sp, #144]
   108fc:	ldp	x22, x21, [sp, #128]
   10900:	ldp	x24, x23, [sp, #112]
   10904:	ldp	x26, x25, [sp, #96]
   10908:	ldp	x28, x27, [sp, #80]
   1090c:	ldp	x29, x30, [sp, #64]
   10910:	add	sp, sp, #0xa0
   10914:	ret
   10918:	mov	x0, x19
   1091c:	mov	x1, xzr
   10920:	bl	0 <LLVMInitializeAArch64AsmParser>
   10924:	ldp	w8, w9, [x19, #8]
   10928:	ldr	x10, [x19]
   1092c:	cmp	w8, w9
   10930:	str	x20, [x10, w8, uxtw #3]
   10934:	b.cc	107f8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b8>  // b.lo, b.ul, b.last
   10938:	b	10964 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x324>
   1093c:	mov	x21, x0
   10940:	mov	x0, x19
   10944:	mov	x1, xzr
   10948:	bl	0 <LLVMInitializeAArch64AsmParser>
   1094c:	ldp	w8, w9, [x19, #8]
   10950:	mov	x0, x21
   10954:	ldr	x10, [x19]
   10958:	cmp	w8, w9
   1095c:	str	x0, [x10, w8, uxtw #3]
   10960:	b.cc	10894 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb1ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x254>  // b.lo, b.ul, b.last
   10964:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10968:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1096c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10970:	add	x0, x0, #0x0
   10974:	add	x1, x1, #0x0
   10978:	add	x3, x3, #0x0
   1097c:	mov	w2, #0x43                  	// #67
   10980:	bl	0 <__assert_fail>
   10984:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10988:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1098c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10990:	add	x0, x0, #0x0
   10994:	add	x1, x1, #0x0
   10998:	add	x3, x3, #0x0
   1099c:	mov	w2, #0xa7                  	// #167
   109a0:	bl	0 <__assert_fail>
   109a4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   109a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   109ac:	add	x0, x0, #0x0
   109b0:	add	x1, x1, #0x0
   109b4:	mov	w2, #0x261                 	// #609
   109b8:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000109bc <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   109bc:	sub	sp, sp, #0x70
   109c0:	stp	x29, x30, [sp, #32]
   109c4:	str	x25, [sp, #48]
   109c8:	stp	x24, x23, [sp, #64]
   109cc:	stp	x22, x21, [sp, #80]
   109d0:	stp	x20, x19, [sp, #96]
   109d4:	add	x29, sp, #0x20
   109d8:	mov	x19, x0
   109dc:	ldr	x0, [x0, #8]
   109e0:	mov	x20, x1
   109e4:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   109e8:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   109ec:	mov	x21, x0
   109f0:	add	x1, x29, #0x1c
   109f4:	add	x2, sp, #0x10
   109f8:	mov	w3, #0x2                   	// #2
   109fc:	mov	x0, x19
   10a00:	stp	xzr, xzr, [sp, #16]
   10a04:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   10a08:	cbnz	w0, 10ad4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x118>
   10a0c:	ldr	x2, [sp, #24]
   10a10:	cbz	x2, 10ad0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
   10a14:	ldr	x1, [sp, #16]
   10a18:	mov	x0, sp
   10a1c:	mov	w3, #0x2                   	// #2
   10a20:	mov	w23, #0x2                   	// #2
   10a24:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   10a28:	ldrb	w8, [sp, #8]
   10a2c:	cbz	w8, 10ad0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
   10a30:	ldr	x0, [x19, #8]
   10a34:	ldr	w24, [sp, #4]
   10a38:	ldr	w25, [x29, #28]
   10a3c:	ldr	x8, [x0]
   10a40:	ldr	x8, [x8, #48]
   10a44:	blr	x8
   10a48:	mov	x22, x0
   10a4c:	mov	w0, #0x70                  	// #112
   10a50:	bl	0 <_Znwm>
   10a54:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   10a58:	mov	x8, x0
   10a5c:	add	x9, x9, #0x0
   10a60:	strb	wzr, [x8, #32]!
   10a64:	str	x9, [x0]
   10a68:	mov	w9, #0x3                   	// #3
   10a6c:	str	w9, [x0, #48]
   10a70:	str	x22, [x0, #104]
   10a74:	stp	w25, w23, [x0, #72]
   10a78:	stur	xzr, [x0, #89]
   10a7c:	stur	xzr, [x0, #84]
   10a80:	stp	x21, x21, [x0, #56]
   10a84:	str	w24, [x0, #80]
   10a88:	stp	x8, xzr, [x0, #16]
   10a8c:	ldp	w8, w9, [x20, #8]
   10a90:	cmp	w8, w9
   10a94:	b.cs	10af0 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x134>  // b.hs, b.nlast
   10a98:	ldr	x10, [x20]
   10a9c:	cmp	w8, w9
   10aa0:	str	x0, [x10, w8, uxtw #3]
   10aa4:	b.cs	10b18 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15c>  // b.hs, b.nlast
   10aa8:	add	w8, w8, #0x1
   10aac:	mov	x0, x19
   10ab0:	mov	x1, x20
   10ab4:	str	w8, [x20, #8]
   10ab8:	bl	c7e0 <_ZN12_GLOBAL__N_116AArch64AsmParser19tryParseVectorIndexERN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEE>
   10abc:	cmp	w0, #0x2
   10ac0:	cset	w8, eq  // eq = none
   10ac4:	lsl	w0, w8, #1
   10ac8:	strb	wzr, [sp, #8]
   10acc:	b	10ad4 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x118>
   10ad0:	mov	w0, #0x1                   	// #1
   10ad4:	ldp	x20, x19, [sp, #96]
   10ad8:	ldp	x22, x21, [sp, #80]
   10adc:	ldp	x24, x23, [sp, #64]
   10ae0:	ldr	x25, [sp, #48]
   10ae4:	ldp	x29, x30, [sp, #32]
   10ae8:	add	sp, sp, #0x70
   10aec:	ret
   10af0:	mov	x21, x0
   10af4:	mov	x0, x20
   10af8:	mov	x1, xzr
   10afc:	bl	0 <LLVMInitializeAArch64AsmParser>
   10b00:	ldp	w8, w9, [x20, #8]
   10b04:	mov	x0, x21
   10b08:	ldr	x10, [x20]
   10b0c:	cmp	w8, w9
   10b10:	str	x0, [x10, w8, uxtw #3]
   10b14:	b.cc	10aa8 <_ZN12_GLOBAL__N_116AArch64AsmParser21tryParseSVEDataVectorILb0ELb1EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xec>  // b.lo, b.ul, b.last
   10b18:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   10b1c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   10b20:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   10b24:	add	x0, x0, #0x0
   10b28:	add	x1, x1, #0x0
   10b2c:	add	x3, x3, #0x0
   10b30:	mov	w2, #0x43                  	// #67
   10b34:	bl	0 <__assert_fail>

0000000000010b38 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb>:
   10b38:	sub	sp, sp, #0x100
   10b3c:	stp	x29, x30, [sp, #160]
   10b40:	stp	x28, x27, [sp, #176]
   10b44:	stp	x26, x25, [sp, #192]
   10b48:	stp	x24, x23, [sp, #208]
   10b4c:	stp	x22, x21, [sp, #224]
   10b50:	stp	x20, x19, [sp, #240]
   10b54:	add	x29, sp, #0xa0
   10b58:	ldr	x22, [x0, #8]
   10b5c:	mov	x20, x0
   10b60:	mov	x19, x1
   10b64:	mov	x0, x22
   10b68:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10b6c:	ldr	w8, [x0]
   10b70:	cmp	w8, #0x15
   10b74:	b.ne	10bc0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x88>  // b.any
   10b78:	ldr	x0, [x20, #8]
   10b7c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10b80:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10b84:	mov	x21, x0
   10b88:	mov	x0, x22
   10b8c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10b90:	ldr	q0, [x0]
   10b94:	ldr	x8, [x0, #16]
   10b98:	add	x1, x0, #0x18
   10b9c:	stur	q0, [x29, #-48]
   10ba0:	stur	x8, [x29, #-32]
   10ba4:	ldr	w8, [x0, #32]
   10ba8:	cmp	w8, #0x40
   10bac:	stur	w8, [x29, #-16]
   10bb0:	b.hi	10bc8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x90>  // b.pmore
   10bb4:	ldr	x8, [x1]
   10bb8:	stur	x8, [x29, #-24]
   10bbc:	b	10bd4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x9c>
   10bc0:	mov	w26, #0x1                   	// #1
   10bc4:	b	10e74 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x33c>
   10bc8:	sub	x8, x29, #0x30
   10bcc:	add	x0, x8, #0x18
   10bd0:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   10bd4:	ldr	x8, [x22]
   10bd8:	mov	x0, x22
   10bdc:	ldr	x8, [x8, #136]
   10be0:	blr	x8
   10be4:	stp	xzr, xzr, [x29, #-64]
   10be8:	ldr	x0, [x20, #8]
   10bec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10bf0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10bf4:	mov	x4, x0
   10bf8:	sub	x2, x29, #0x44
   10bfc:	sub	x3, x29, #0x40
   10c00:	mov	x0, x20
   10c04:	mov	x1, x22
   10c08:	mov	w5, wzr
   10c0c:	bl	11720 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10c10:	cbz	w0, 10c44 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x10c>
   10c14:	mov	w26, w0
   10c18:	cmp	w0, #0x1
   10c1c:	b.ne	10e5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x324>  // b.any
   10c20:	ldr	x8, [x22]
   10c24:	mov	x0, x22
   10c28:	ldr	x8, [x8, #40]
   10c2c:	blr	x8
   10c30:	ldr	x1, [x0, #8]!
   10c34:	sub	x2, x29, #0x30
   10c38:	strb	wzr, [x0, #106]
   10c3c:	bl	0 <LLVMInitializeAArch64AsmParser>
   10c40:	b	10e5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x324>
   10c44:	ldr	x0, [x20, #8]
   10c48:	ldur	w27, [x29, #-68]
   10c4c:	mov	w1, #0xd                   	// #13
   10c50:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10c54:	ldr	x8, [x20, #8]
   10c58:	tbz	w0, #0, 10cec <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x1b4>
   10c5c:	mov	x0, x8
   10c60:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10c64:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10c68:	stp	xzr, xzr, [sp, #72]
   10c6c:	ldr	x8, [x20, #8]
   10c70:	mov	x23, x0
   10c74:	mov	x0, x8
   10c78:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10c7c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10c80:	mov	x4, x0
   10c84:	add	x2, sp, #0x44
   10c88:	add	x3, sp, #0x48
   10c8c:	mov	w5, #0x1                   	// #1
   10c90:	mov	x0, x20
   10c94:	mov	x1, x22
   10c98:	bl	11720 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10c9c:	mov	w26, w0
   10ca0:	cbnz	w0, 10e5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x324>
   10ca4:	ldur	x2, [x29, #-56]
   10ca8:	ldr	x8, [sp, #80]
   10cac:	cmp	x2, x8
   10cb0:	b.ne	10cc8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x190>  // b.any
   10cb4:	cbz	x2, 10fa4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x46c>
   10cb8:	ldur	x0, [x29, #-64]
   10cbc:	ldr	x1, [sp, #72]
   10cc0:	bl	0 <bcmp>
   10cc4:	cbz	w0, 10fa4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x46c>
   10cc8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10ccc:	add	x8, x8, #0x0
   10cd0:	mov	w9, #0x103                 	// #259
   10cd4:	stp	x8, xzr, [sp, #40]
   10cd8:	strh	w9, [sp, #56]
   10cdc:	ldr	x0, [x20, #8]
   10ce0:	add	x2, sp, #0x28
   10ce4:	mov	x1, x23
   10ce8:	b	10e4c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x314>
   10cec:	mov	w1, #0x19                  	// #25
   10cf0:	mov	x0, x8
   10cf4:	str	x21, [sp, #32]
   10cf8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10cfc:	str	w27, [sp, #28]
   10d00:	tbz	w0, #0, 10df8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2c0>
   10d04:	ldur	x24, [x29, #-56]
   10d08:	cbz	x24, 10e98 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x360>
   10d0c:	ldur	x25, [x29, #-64]
   10d10:	mov	w28, #0x1                   	// #1
   10d14:	ldr	x0, [x20, #8]
   10d18:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10d1c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10d20:	stp	xzr, xzr, [sp, #72]
   10d24:	ldr	x8, [x20, #8]
   10d28:	mov	x23, x0
   10d2c:	mov	x0, x8
   10d30:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10d34:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10d38:	mov	x4, x0
   10d3c:	add	x2, sp, #0x44
   10d40:	add	x3, sp, #0x48
   10d44:	mov	w5, #0x1                   	// #1
   10d48:	mov	x0, x20
   10d4c:	mov	x1, x22
   10d50:	bl	11720 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10d54:	cbnz	w0, 10f9c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x464>
   10d58:	ldr	x8, [sp, #80]
   10d5c:	cmp	x24, x8
   10d60:	b.ne	10cc8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x190>  // b.any
   10d64:	ldr	x1, [sp, #72]
   10d68:	mov	x0, x25
   10d6c:	mov	x2, x24
   10d70:	bl	0 <bcmp>
   10d74:	cbnz	w0, 10cc8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x190>
   10d78:	ldr	x0, [x20, #8]
   10d7c:	ldr	x8, [x0]
   10d80:	ldr	x8, [x8, #48]
   10d84:	blr	x8
   10d88:	ldr	x8, [x0, #24]
   10d8c:	ldr	w26, [sp, #68]
   10d90:	ldr	w9, [x8, #8]
   10d94:	cmp	w9, w26
   10d98:	b.ls	110d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x59c>  // b.plast
   10d9c:	ldr	x0, [x20, #8]
   10da0:	ldr	x8, [x8, #104]
   10da4:	ldr	x9, [x0]
   10da8:	ldrh	w21, [x8, x26, lsl #1]
   10dac:	ldr	x8, [x9, #48]
   10db0:	blr	x8
   10db4:	ldr	x8, [x0, #24]
   10db8:	ldr	w9, [x8, #8]
   10dbc:	cmp	w9, w27
   10dc0:	b.ls	110d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x59c>  // b.plast
   10dc4:	ldr	x8, [x8, #104]
   10dc8:	ldrh	w8, [x8, w27, uxtw #1]
   10dcc:	add	w8, w8, #0x1
   10dd0:	and	w8, w8, #0x1f
   10dd4:	cmp	w21, w8
   10dd8:	b.ne	10fd0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x498>  // b.any
   10ddc:	ldr	x0, [x20, #8]
   10de0:	mov	w1, #0x19                  	// #25
   10de4:	add	w28, w28, #0x1
   10de8:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10dec:	mov	w27, w26
   10df0:	tbnz	w0, #0, 10d14 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x1dc>
   10df4:	b	10dfc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2c4>
   10df8:	mov	w28, #0x1                   	// #1
   10dfc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10e00:	add	x8, x8, #0x0
   10e04:	mov	w9, #0x103                 	// #259
   10e08:	stp	x8, xzr, [sp, #40]
   10e0c:	strh	w9, [sp, #56]
   10e10:	ldr	x0, [x20, #8]
   10e14:	add	x2, sp, #0x28
   10e18:	mov	w1, #0x16                  	// #22
   10e1c:	bl	0 <_ZN4llvm11MCAsmParser10parseTokenENS_8AsmToken9TokenKindERKNS_5TwineE>
   10e20:	tbnz	w0, #0, 10e58 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x320>
   10e24:	cmp	w28, #0x5
   10e28:	b.cc	10f68 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x430>  // b.lo, b.ul, b.last
   10e2c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10e30:	add	x8, x8, #0x0
   10e34:	mov	w9, #0x103                 	// #259
   10e38:	stp	x8, xzr, [sp, #40]
   10e3c:	strh	w9, [sp, #56]
   10e40:	ldr	x0, [x20, #8]
   10e44:	ldr	x1, [sp, #32]
   10e48:	add	x2, sp, #0x28
   10e4c:	mov	x3, xzr
   10e50:	mov	x4, xzr
   10e54:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   10e58:	mov	w26, #0x2                   	// #2
   10e5c:	ldur	w8, [x29, #-16]
   10e60:	cmp	w8, #0x41
   10e64:	b.cc	10e74 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x33c>  // b.lo, b.ul, b.last
   10e68:	ldur	x0, [x29, #-24]
   10e6c:	cbz	x0, 10e74 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x33c>
   10e70:	bl	0 <_ZdaPv>
   10e74:	mov	w0, w26
   10e78:	ldp	x20, x19, [sp, #240]
   10e7c:	ldp	x22, x21, [sp, #224]
   10e80:	ldp	x24, x23, [sp, #208]
   10e84:	ldp	x26, x25, [sp, #192]
   10e88:	ldp	x28, x27, [sp, #176]
   10e8c:	ldp	x29, x30, [sp, #160]
   10e90:	add	sp, sp, #0x100
   10e94:	ret
   10e98:	mov	w28, #0x1                   	// #1
   10e9c:	ldr	x0, [x20, #8]
   10ea0:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10ea4:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10ea8:	stp	xzr, xzr, [sp, #72]
   10eac:	ldr	x8, [x20, #8]
   10eb0:	mov	x23, x0
   10eb4:	mov	x0, x8
   10eb8:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10ebc:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10ec0:	mov	x4, x0
   10ec4:	add	x2, sp, #0x44
   10ec8:	add	x3, sp, #0x48
   10ecc:	mov	w5, #0x1                   	// #1
   10ed0:	mov	x0, x20
   10ed4:	mov	x1, x22
   10ed8:	bl	11720 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>
   10edc:	cbnz	w0, 10f9c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x464>
   10ee0:	ldr	x8, [sp, #80]
   10ee4:	cbnz	x8, 10cc8 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x190>
   10ee8:	ldr	x0, [x20, #8]
   10eec:	ldr	x8, [x0]
   10ef0:	ldr	x8, [x8, #48]
   10ef4:	blr	x8
   10ef8:	ldr	x8, [x0, #24]
   10efc:	ldr	w25, [sp, #68]
   10f00:	ldr	w9, [x8, #8]
   10f04:	cmp	w9, w25
   10f08:	b.ls	110d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x59c>  // b.plast
   10f0c:	ldr	x0, [x20, #8]
   10f10:	ldr	x8, [x8, #104]
   10f14:	ldr	x9, [x0]
   10f18:	ldrh	w21, [x8, x25, lsl #1]
   10f1c:	ldr	x8, [x9, #48]
   10f20:	blr	x8
   10f24:	ldr	x8, [x0, #24]
   10f28:	ldr	w9, [x8, #8]
   10f2c:	cmp	w9, w27
   10f30:	b.ls	110d4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x59c>  // b.plast
   10f34:	ldr	x8, [x8, #104]
   10f38:	ldrh	w8, [x8, w27, uxtw #1]
   10f3c:	add	w8, w8, #0x1
   10f40:	and	w8, w8, #0x1f
   10f44:	cmp	w21, w8
   10f48:	b.ne	10fd0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x498>  // b.any
   10f4c:	ldr	x0, [x20, #8]
   10f50:	mov	w1, #0x19                  	// #25
   10f54:	add	w28, w28, #0x1
   10f58:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   10f5c:	mov	w27, w25
   10f60:	tbnz	w0, #0, 10e9c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x364>
   10f64:	b	10dfc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2c4>
   10f68:	ldur	x2, [x29, #-56]
   10f6c:	ldr	x21, [sp, #32]
   10f70:	cbz	x2, 10fdc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x4a4>
   10f74:	ldur	x1, [x29, #-64]
   10f78:	add	x0, sp, #0x28
   10f7c:	mov	w3, #0x2                   	// #2
   10f80:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   10f84:	ldrb	w8, [sp, #48]
   10f88:	ldr	w24, [sp, #28]
   10f8c:	cbz	w8, 10fe0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x4a8>
   10f90:	ldr	d0, [sp, #40]
   10f94:	strb	wzr, [sp, #48]
   10f98:	b	10fe4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x4ac>
   10f9c:	mov	w26, w0
   10fa0:	b	10e5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x324>
   10fa4:	ldr	w8, [sp, #68]
   10fa8:	add	w9, w8, #0x20
   10fac:	cmp	w8, w27
   10fb0:	csel	w8, w8, w9, hi  // hi = pmore
   10fb4:	sub	w8, w8, w27
   10fb8:	sub	w9, w8, #0x1
   10fbc:	cmp	w9, #0x3
   10fc0:	b.cc	11084 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x54c>  // b.lo, b.ul, b.last
   10fc4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10fc8:	add	x8, x8, #0x0
   10fcc:	b	10cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x198>
   10fd0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   10fd4:	add	x8, x8, #0x0
   10fd8:	b	10cd0 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x198>
   10fdc:	ldr	w24, [sp, #28]
   10fe0:	movi	v0.2d, #0x0
   10fe4:	str	q0, [sp]
   10fe8:	ldr	x0, [x20, #8]
   10fec:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   10ff0:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   10ff4:	ldr	x8, [x20, #8]
   10ff8:	mov	x22, x0
   10ffc:	ldr	x9, [x8]
   11000:	mov	x0, x8
   11004:	ldr	x9, [x9, #48]
   11008:	blr	x9
   1100c:	mov	x23, x0
   11010:	mov	w0, #0x70                  	// #112
   11014:	bl	0 <_Znwm>
   11018:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1101c:	ldr	q0, [sp]
   11020:	mov	x8, x0
   11024:	add	x9, x9, #0x0
   11028:	strb	wzr, [x8, #32]!
   1102c:	str	x9, [x0]
   11030:	mov	w9, #0x4                   	// #4
   11034:	str	w9, [x0, #48]
   11038:	mov	w9, #0x2                   	// #2
   1103c:	str	x23, [x0, #104]
   11040:	stp	w24, w28, [x0, #72]
   11044:	str	d0, [x0, #80]
   11048:	str	w9, [x0, #88]
   1104c:	stp	x21, x22, [x0, #56]
   11050:	stp	x8, xzr, [x0, #16]
   11054:	ldp	w8, w9, [x19, #8]
   11058:	mov	x20, x0
   1105c:	cmp	w8, w9
   11060:	b.cs	11094 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x55c>  // b.hs, b.nlast
   11064:	ldr	x10, [x19]
   11068:	cmp	w8, w9
   1106c:	str	x20, [x10, w8, uxtw #3]
   11070:	b.cs	110b4 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x57c>  // b.hs, b.nlast
   11074:	mov	w26, wzr
   11078:	add	w8, w8, #0x1
   1107c:	str	w8, [x19, #8]
   11080:	b	10e5c <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x324>
   11084:	str	w27, [sp, #28]
   11088:	str	x21, [sp, #32]
   1108c:	add	w28, w8, #0x1
   11090:	b	10dfc <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x2c4>
   11094:	mov	x0, x19
   11098:	mov	x1, xzr
   1109c:	bl	0 <LLVMInitializeAArch64AsmParser>
   110a0:	ldp	w8, w9, [x19, #8]
   110a4:	ldr	x10, [x19]
   110a8:	cmp	w8, w9
   110ac:	str	x20, [x10, w8, uxtw #3]
   110b0:	b.cc	11074 <_ZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEb+0x53c>  // b.lo, b.ul, b.last
   110b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   110b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   110bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   110c0:	add	x0, x0, #0x0
   110c4:	add	x1, x1, #0x0
   110c8:	add	x3, x3, #0x0
   110cc:	mov	w2, #0x43                  	// #67
   110d0:	bl	0 <__assert_fail>
   110d4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   110d8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   110dc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   110e0:	add	x0, x0, #0x0
   110e4:	add	x1, x1, #0x0
   110e8:	add	x3, x3, #0x0
   110ec:	mov	w2, #0x224                 	// #548
   110f0:	bl	0 <__assert_fail>

00000000000110f4 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   110f4:	sub	sp, sp, #0xf0
   110f8:	stp	x29, x30, [sp, #144]
   110fc:	str	x27, [sp, #160]
   11100:	stp	x26, x25, [sp, #176]
   11104:	stp	x24, x23, [sp, #192]
   11108:	stp	x22, x21, [sp, #208]
   1110c:	stp	x20, x19, [sp, #224]
   11110:	add	x29, sp, #0x90
   11114:	ldr	x19, [x0, #8]
   11118:	mov	x22, x0
   1111c:	mov	x20, x1
   11120:	mov	x0, x19
   11124:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   11128:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   1112c:	ldr	x8, [x22, #8]
   11130:	mov	x21, x0
   11134:	mov	w1, #0x25                  	// #37
   11138:	mov	x0, x8
   1113c:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   11140:	ldr	x8, [x22, #8]
   11144:	mov	w23, w0
   11148:	mov	w1, #0xd                   	// #13
   1114c:	mov	x0, x8
   11150:	bl	0 <_ZN4llvm11MCAsmParser18parseOptionalTokenENS_8AsmToken9TokenKindE>
   11154:	mov	w24, w0
   11158:	mov	x0, x19
   1115c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   11160:	ldr	w8, [x0]
   11164:	mov	x26, x0
   11168:	cmp	w8, #0x4
   1116c:	b.eq	111ac <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xb8>  // b.none
   11170:	cmp	w8, #0x6
   11174:	b.eq	111cc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd8>  // b.none
   11178:	tbz	w23, #0, 112f8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x204>
   1117c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11180:	add	x8, x8, #0x0
   11184:	mov	w9, #0x103                 	// #259
   11188:	stp	x8, xzr, [x29, #-56]
   1118c:	sturh	w9, [x29, #-40]
   11190:	ldr	x0, [x22, #8]
   11194:	sub	x1, x29, #0x38
   11198:	mov	x2, xzr
   1119c:	mov	x3, xzr
   111a0:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
   111a4:	mov	w0, #0x2                   	// #2
   111a8:	b	11644 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x550>
   111ac:	ldr	x8, [x26, #16]
   111b0:	cmp	x8, #0x2
   111b4:	b.cc	111cc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd8>  // b.lo, b.ul, b.last
   111b8:	ldr	x8, [x26, #8]
   111bc:	mov	w9, #0x7830                	// #30768
   111c0:	ldrh	w8, [x8]
   111c4:	cmp	w8, w9
   111c8:	b.eq	11300 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20c>  // b.none
   111cc:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   111d0:	sub	x8, x29, #0x38
   111d4:	mov	x27, x0
   111d8:	add	x25, x8, #0x8
   111dc:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   111e0:	mov	x23, x0
   111e4:	cmp	x0, x27
   111e8:	b.eq	111fc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x108>  // b.none
   111ec:	mov	x0, x25
   111f0:	mov	x1, x27
   111f4:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   111f8:	b	11208 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x114>
   111fc:	mov	x0, x25
   11200:	mov	x1, x27
   11204:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   11208:	ldp	x1, x2, [x26, #8]
   1120c:	add	x8, sp, #0x28
   11210:	sub	x0, x29, #0x38
   11214:	mov	w3, #0x3                   	// #3
   11218:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1121c:	ldrb	w8, [sp, #48]
   11220:	and	w9, w8, #0xfffffffd
   11224:	strb	w9, [sp, #48]
   11228:	tbnz	w8, #0, 11234 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x140>
   1122c:	mov	w8, #0x1                   	// #1
   11230:	b	11240 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x14c>
   11234:	ldr	x8, [sp, #40]
   11238:	str	xzr, [sp, #40]
   1123c:	orr	x8, x8, #0x1
   11240:	tst	x8, #0xfffffffffffffffe
   11244:	and	x26, x8, #0xfffffffffffffffe
   11248:	cset	w9, ne  // ne = any
   1124c:	orr	x9, x26, x9
   11250:	str	x9, [x29, #24]
   11254:	cbz	x26, 11278 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x184>
   11258:	orr	x8, x8, #0x1
   1125c:	sub	x0, x29, #0x18
   11260:	stur	x8, [x29, #-24]
   11264:	str	xzr, [x29, #24]
   11268:	bl	0 <LLVMInitializeAArch64AsmParser>
   1126c:	ldur	x8, [x29, #-24]
   11270:	cbnz	x8, 116d8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5e4>
   11274:	ldr	x9, [x29, #24]
   11278:	cbnz	x9, 116d0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5dc>
   1127c:	cbz	x26, 112dc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e8>
   11280:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11284:	add	x8, x8, #0x0
   11288:	mov	w9, #0x103                 	// #259
   1128c:	stp	x8, xzr, [x29, #-24]
   11290:	sturh	w9, [x29, #-8]
   11294:	ldr	x0, [x22, #8]
   11298:	sub	x1, x29, #0x18
   1129c:	mov	x2, xzr
   112a0:	mov	x3, xzr
   112a4:	bl	0 <_ZN4llvm11MCAsmParser8TokErrorERKNS_5TwineENS_7SMRangeE>
   112a8:	ldrb	w8, [sp, #48]
   112ac:	tbnz	w8, #1, 116c8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5d4>
   112b0:	tbz	w8, #0, 112cc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d8>
   112b4:	ldr	x0, [sp, #40]
   112b8:	cbz	x0, 112c8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d4>
   112bc:	ldr	x8, [x0]
   112c0:	ldr	x8, [x8, #8]
   112c4:	blr	x8
   112c8:	str	xzr, [sp, #40]
   112cc:	sub	x0, x29, #0x38
   112d0:	bl	0 <LLVMInitializeAArch64AsmParser>
   112d4:	mov	w0, #0x2                   	// #2
   112d8:	b	11644 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x550>
   112dc:	tbz	w24, #0, 11324 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x230>
   112e0:	ldur	x8, [x29, #-48]
   112e4:	cmp	x23, x8
   112e8:	b.eq	11318 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x224>  // b.none
   112ec:	mov	x0, x25
   112f0:	bl	0 <_ZN4llvm6detail9IEEEFloat10changeSignEv>
   112f4:	b	11324 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x230>
   112f8:	mov	w0, #0x1                   	// #1
   112fc:	b	11644 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x550>
   11300:	ldr	w25, [x26, #32]
   11304:	add	x23, x26, #0x18
   11308:	cmp	w25, #0x40
   1130c:	b.hi	11460 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x36c>  // b.pmore
   11310:	mov	x8, x23
   11314:	b	11478 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x384>
   11318:	sub	x8, x29, #0x38
   1131c:	add	x0, x8, #0x8
   11320:	bl	0 <_ZN4llvm6detail13DoubleAPFloat10changeSignEv>
   11324:	ldur	x8, [x29, #-48]
   11328:	add	x9, sp, #0x8
   1132c:	add	x24, x9, #0x8
   11330:	mov	x0, x24
   11334:	cmp	x23, x8
   11338:	mov	x1, x25
   1133c:	b.eq	11350 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c>  // b.none
   11340:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
   11344:	ldrb	w8, [sp, #48]
   11348:	tbz	w8, #1, 1135c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x268>
   1134c:	b	116c8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5d4>
   11350:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
   11354:	ldrb	w8, [sp, #48]
   11358:	tbnz	w8, #1, 116c8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5d4>
   1135c:	tbnz	w8, #0, 116e0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5ec>
   11360:	ldr	x0, [x22, #8]
   11364:	ldr	w9, [sp, #40]
   11368:	ldr	x8, [x0]
   1136c:	cmp	w9, #0x0
   11370:	cset	w26, eq  // eq = none
   11374:	ldr	x8, [x8, #48]
   11378:	blr	x8
   1137c:	mov	x25, x0
   11380:	mov	w0, #0x70                  	// #112
   11384:	bl	0 <_Znwm>
   11388:	ldr	x11, [sp, #16]
   1138c:	mov	x8, x0
   11390:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11394:	mov	x22, x0
   11398:	add	x9, x9, #0x0
   1139c:	mov	w10, #0xb                   	// #11
   113a0:	strb	wzr, [x8, #32]!
   113a4:	cmp	x23, x11
   113a8:	str	x9, [x0]
   113ac:	str	w10, [x0, #48]
   113b0:	stp	x8, xzr, [x0, #16]
   113b4:	stp	xzr, xzr, [x0, #56]
   113b8:	str	x25, [x0, #104]
   113bc:	b.eq	113d0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2dc>  // b.none
   113c0:	sub	x8, x29, #0x18
   113c4:	mov	x0, x24
   113c8:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   113cc:	b	113e0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2ec>
   113d0:	add	x8, sp, #0x8
   113d4:	add	x0, x8, #0x8
   113d8:	sub	x8, x29, #0x18
   113dc:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   113e0:	sub	x0, x29, #0x18
   113e4:	bl	0 <LLVMInitializeAArch64AsmParser>
   113e8:	ldur	w8, [x29, #-16]
   113ec:	str	x0, [x22, #72]
   113f0:	cmp	w8, #0x41
   113f4:	b.cc	11404 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x310>  // b.lo, b.ul, b.last
   113f8:	ldur	x0, [x29, #-24]
   113fc:	cbz	x0, 11404 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x310>
   11400:	bl	0 <_ZdaPv>
   11404:	strb	w26, [x22, #80]
   11408:	stp	x21, x21, [x22, #56]
   1140c:	ldp	w8, w9, [x20, #8]
   11410:	cmp	w8, w9
   11414:	b.cs	11664 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x570>  // b.hs, b.nlast
   11418:	ldr	x10, [x20]
   1141c:	cmp	w8, w9
   11420:	str	x22, [x10, w8, uxtw #3]
   11424:	b.cs	116a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5b4>  // b.hs, b.nlast
   11428:	add	w8, w8, #0x1
   1142c:	add	x0, sp, #0x8
   11430:	str	w8, [x20, #8]
   11434:	bl	0 <LLVMInitializeAArch64AsmParser>
   11438:	ldrb	w8, [sp, #48]
   1143c:	tbnz	w8, #1, 116c8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5d4>
   11440:	tbz	w8, #0, 11628 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x534>
   11444:	ldr	x0, [sp, #40]
   11448:	cbz	x0, 11458 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x364>
   1144c:	ldr	x8, [x0]
   11450:	ldr	x8, [x8, #8]
   11454:	blr	x8
   11458:	str	xzr, [sp, #40]
   1145c:	b	11628 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x534>
   11460:	mov	x0, x23
   11464:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   11468:	sub	w8, w25, w0
   1146c:	cmp	w8, #0x41
   11470:	b.cs	11700 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x60c>  // b.hs, b.nlast
   11474:	ldr	x8, [x23]
   11478:	ldr	x8, [x8]
   1147c:	cmp	x8, #0x100
   11480:	cset	w8, lt  // lt = tstop
   11484:	bic	w8, w8, w24
   11488:	tbnz	w8, #0, 11498 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3a4>
   1148c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11490:	add	x8, x8, #0x0
   11494:	b	11184 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x90>
   11498:	cmp	w25, #0x40
   1149c:	b.ls	114b8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3c4>  // b.plast
   114a0:	mov	x0, x23
   114a4:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   114a8:	sub	w8, w25, w0
   114ac:	cmp	w8, #0x41
   114b0:	b.cs	11700 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x60c>  // b.hs, b.nlast
   114b4:	ldr	x23, [x23]
   114b8:	ldr	w8, [x23]
   114bc:	sub	x0, x29, #0x18
   114c0:	lsl	w10, w8, #24
   114c4:	and	w12, w8, #0x40
   114c8:	and	w10, w10, #0x80000000
   114cc:	lsr	w12, w12, #6
   114d0:	lsr	w9, w8, #4
   114d4:	bfi	w10, w12, #30, #1
   114d8:	sbfx	w11, w8, #6, #1
   114dc:	bfi	w10, w9, #23, #2
   114e0:	and	w11, w11, #0x3e000000
   114e4:	bfi	w10, w8, #19, #4
   114e8:	orr	w8, w10, w11
   114ec:	eor	w8, w8, #0x40000000
   114f0:	fmov	s0, w8
   114f4:	sub	x9, x29, #0x38
   114f8:	fcvt	d0, s0
   114fc:	add	x25, x9, #0x8
   11500:	bl	0 <_ZN4llvm6detail9IEEEFloatC1Ed>
   11504:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   11508:	mov	x2, x0
   1150c:	sub	x1, x29, #0x18
   11510:	mov	x0, x25
   11514:	bl	0 <_ZN4llvm7APFloat7StorageC1ENS_6detail9IEEEFloatERKNS_12fltSemanticsE>
   11518:	sub	x0, x29, #0x18
   1151c:	bl	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
   11520:	ldur	x26, [x29, #-48]
   11524:	add	x8, sp, #0x38
   11528:	add	x23, x8, #0x8
   1152c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   11530:	mov	x24, x0
   11534:	cmp	x0, x26
   11538:	b.eq	1154c <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x458>  // b.none
   1153c:	mov	x0, x23
   11540:	mov	x1, x25
   11544:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKS1_>
   11548:	b	11558 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x464>
   1154c:	mov	x0, x23
   11550:	mov	x1, x25
   11554:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKS1_>
   11558:	ldr	x0, [x22, #8]
   1155c:	ldr	x8, [x0]
   11560:	ldr	x8, [x8, #48]
   11564:	blr	x8
   11568:	mov	x25, x0
   1156c:	mov	w0, #0x70                  	// #112
   11570:	bl	0 <_Znwm>
   11574:	ldr	x11, [sp, #64]
   11578:	mov	x8, x0
   1157c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11580:	mov	x22, x0
   11584:	add	x9, x9, #0x0
   11588:	mov	w10, #0xb                   	// #11
   1158c:	strb	wzr, [x8, #32]!
   11590:	cmp	x24, x11
   11594:	str	x9, [x0]
   11598:	str	w10, [x0, #48]
   1159c:	stp	x8, xzr, [x0, #16]
   115a0:	stp	xzr, xzr, [x0, #56]
   115a4:	str	x25, [x0, #104]
   115a8:	b.eq	115bc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x4c8>  // b.none
   115ac:	sub	x8, x29, #0x18
   115b0:	mov	x0, x23
   115b4:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   115b8:	b	115cc <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x4d8>
   115bc:	add	x8, sp, #0x38
   115c0:	add	x0, x8, #0x8
   115c4:	sub	x8, x29, #0x18
   115c8:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   115cc:	sub	x0, x29, #0x18
   115d0:	bl	0 <LLVMInitializeAArch64AsmParser>
   115d4:	ldur	w8, [x29, #-16]
   115d8:	str	x0, [x22, #72]
   115dc:	cmp	w8, #0x41
   115e0:	b.cc	115f0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x4fc>  // b.lo, b.ul, b.last
   115e4:	ldur	x0, [x29, #-24]
   115e8:	cbz	x0, 115f0 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x4fc>
   115ec:	bl	0 <_ZdaPv>
   115f0:	mov	w8, #0x1                   	// #1
   115f4:	stp	x21, x21, [x22, #56]
   115f8:	strb	w8, [x22, #80]
   115fc:	ldp	w8, w9, [x20, #8]
   11600:	cmp	w8, w9
   11604:	b.cs	11688 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x594>  // b.hs, b.nlast
   11608:	ldr	x10, [x20]
   1160c:	cmp	w8, w9
   11610:	str	x22, [x10, w8, uxtw #3]
   11614:	b.cs	116a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5b4>  // b.hs, b.nlast
   11618:	add	w8, w8, #0x1
   1161c:	add	x0, sp, #0x38
   11620:	str	w8, [x20, #8]
   11624:	bl	0 <LLVMInitializeAArch64AsmParser>
   11628:	sub	x0, x29, #0x38
   1162c:	bl	0 <LLVMInitializeAArch64AsmParser>
   11630:	ldr	x8, [x19]
   11634:	mov	x0, x19
   11638:	ldr	x8, [x8, #136]
   1163c:	blr	x8
   11640:	mov	w0, wzr
   11644:	ldp	x20, x19, [sp, #224]
   11648:	ldp	x22, x21, [sp, #208]
   1164c:	ldp	x24, x23, [sp, #192]
   11650:	ldp	x26, x25, [sp, #176]
   11654:	ldr	x27, [sp, #160]
   11658:	ldp	x29, x30, [sp, #144]
   1165c:	add	sp, sp, #0xf0
   11660:	ret
   11664:	mov	x0, x20
   11668:	mov	x1, xzr
   1166c:	bl	0 <LLVMInitializeAArch64AsmParser>
   11670:	ldp	w8, w9, [x20, #8]
   11674:	ldr	x10, [x20]
   11678:	cmp	w8, w9
   1167c:	str	x22, [x10, w8, uxtw #3]
   11680:	b.cc	11428 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x334>  // b.lo, b.ul, b.last
   11684:	b	116a8 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x5b4>
   11688:	mov	x0, x20
   1168c:	mov	x1, xzr
   11690:	bl	0 <LLVMInitializeAArch64AsmParser>
   11694:	ldp	w8, w9, [x20, #8]
   11698:	ldr	x10, [x20]
   1169c:	cmp	w8, w9
   116a0:	str	x22, [x10, w8, uxtw #3]
   116a4:	b.cc	11618 <_ZN12_GLOBAL__N_116AArch64AsmParser13tryParseFPImmILb0EEEN4llvm20OperandMatchResultTyERNS2_15SmallVectorImplISt10unique_ptrINS2_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x524>  // b.lo, b.ul, b.last
   116a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   116ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   116b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   116b4:	add	x0, x0, #0x0
   116b8:	add	x1, x1, #0x0
   116bc:	add	x3, x3, #0x0
   116c0:	mov	w2, #0x43                  	// #67
   116c4:	bl	0 <__assert_fail>
   116c8:	add	x0, sp, #0x28
   116cc:	bl	0 <LLVMInitializeAArch64AsmParser>
   116d0:	add	x0, x29, #0x18
   116d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   116d8:	sub	x0, x29, #0x18
   116dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   116e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   116e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   116e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   116ec:	add	x0, x0, #0x0
   116f0:	add	x1, x1, #0x0
   116f4:	add	x3, x3, #0x0
   116f8:	mov	w2, #0x272                 	// #626
   116fc:	bl	0 <__assert_fail>
   11700:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11704:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11708:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1170c:	add	x0, x0, #0x0
   11710:	add	x1, x1, #0x0
   11714:	add	x3, x3, #0x0
   11718:	mov	w2, #0x657                 	// #1623
   1171c:	bl	0 <__assert_fail>

0000000000011720 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>:
   11720:	sub	sp, sp, #0x90
   11724:	stp	x29, x30, [sp, #80]
   11728:	str	x23, [sp, #96]
   1172c:	stp	x22, x21, [sp, #112]
   11730:	stp	x20, x19, [sp, #128]
   11734:	add	x29, sp, #0x50
   11738:	mov	x20, x0
   1173c:	mov	x0, x1
   11740:	mov	w21, w5
   11744:	mov	x19, x4
   11748:	mov	x22, x3
   1174c:	mov	x23, x2
   11750:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   11754:	ldr	q0, [x0]
   11758:	ldr	x8, [x0, #16]
   1175c:	add	x1, x0, #0x18
   11760:	str	q0, [sp, #32]
   11764:	str	x8, [sp, #48]
   11768:	ldr	w8, [x0, #32]
   1176c:	cmp	w8, #0x40
   11770:	str	w8, [sp, #64]
   11774:	b.hi	11784 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x64>  // b.pmore
   11778:	ldr	x8, [x1]
   1177c:	str	x8, [sp, #56]
   11780:	b	11790 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x70>
   11784:	add	x8, sp, #0x20
   11788:	add	x0, x8, #0x18
   1178c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   11790:	mov	w3, #0x2                   	// #2
   11794:	mov	x0, x20
   11798:	mov	x1, x23
   1179c:	mov	x2, x22
   117a0:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   117a4:	cbz	w0, 1180c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xec>
   117a8:	cmp	w0, #0x2
   117ac:	b.eq	117cc <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xac>  // b.none
   117b0:	ldr	w8, [sp, #32]
   117b4:	cmp	w8, #0x2
   117b8:	b.ne	117cc <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xac>  // b.any
   117bc:	cmp	w0, #0x1
   117c0:	mov	w22, #0x1                   	// #1
   117c4:	b.ne	117fc <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xdc>  // b.any
   117c8:	tbz	w21, #0, 117fc <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xdc>
   117cc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   117d0:	add	x8, x8, #0x0
   117d4:	mov	w9, #0x103                 	// #259
   117d8:	stp	x8, xzr, [sp, #8]
   117dc:	strh	w9, [sp, #24]
   117e0:	ldr	x0, [x20, #8]
   117e4:	add	x2, sp, #0x8
   117e8:	mov	x1, x19
   117ec:	mov	x3, xzr
   117f0:	mov	x4, xzr
   117f4:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   117f8:	mov	w22, #0x2                   	// #2
   117fc:	ldr	w8, [sp, #64]
   11800:	cmp	w8, #0x41
   11804:	b.cs	11834 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x114>  // b.hs, b.nlast
   11808:	b	11840 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>
   1180c:	ldp	x1, x2, [x22]
   11810:	add	x0, sp, #0x8
   11814:	mov	w3, #0x2                   	// #2
   11818:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   1181c:	ldrb	w8, [sp, #16]
   11820:	cbz	w8, 1185c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x13c>
   11824:	mov	w22, wzr
   11828:	ldr	w8, [sp, #64]
   1182c:	cmp	w8, #0x41
   11830:	b.cc	11840 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>  // b.lo, b.ul, b.last
   11834:	ldr	x0, [sp, #56]
   11838:	cbz	x0, 11840 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE2EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>
   1183c:	bl	0 <_ZdaPv>
   11840:	mov	w0, w22
   11844:	ldp	x20, x19, [sp, #128]
   11848:	ldp	x22, x21, [sp, #112]
   1184c:	ldr	x23, [sp, #96]
   11850:	ldp	x29, x30, [sp, #80]
   11854:	add	sp, sp, #0x90
   11858:	ret
   1185c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11860:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11864:	add	x0, x0, #0x0
   11868:	add	x1, x1, #0x0
   1186c:	mov	w2, #0xcfd                 	// #3325
   11870:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

0000000000011874 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b>:
   11874:	sub	sp, sp, #0x80
   11878:	stp	x29, x30, [sp, #80]
   1187c:	stp	x22, x21, [sp, #96]
   11880:	stp	x20, x19, [sp, #112]
   11884:	add	x29, sp, #0x50
   11888:	mov	x20, x0
   1188c:	mov	x0, x1
   11890:	mov	x19, x4
   11894:	mov	x21, x3
   11898:	mov	x22, x2
   1189c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   118a0:	ldr	q0, [x0]
   118a4:	ldr	x8, [x0, #16]
   118a8:	add	x1, x0, #0x18
   118ac:	str	q0, [sp, #32]
   118b0:	str	x8, [sp, #48]
   118b4:	ldr	w8, [x0, #32]
   118b8:	cmp	w8, #0x40
   118bc:	str	w8, [sp, #64]
   118c0:	b.hi	118d0 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x5c>  // b.pmore
   118c4:	ldr	x8, [x1]
   118c8:	str	x8, [sp, #56]
   118cc:	b	118dc <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x68>
   118d0:	add	x8, sp, #0x20
   118d4:	add	x0, x8, #0x18
   118d8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   118dc:	mov	w3, #0x1                   	// #1
   118e0:	mov	x0, x20
   118e4:	mov	x1, x22
   118e8:	mov	x2, x21
   118ec:	bl	a980 <_ZN12_GLOBAL__N_116AArch64AsmParser22tryParseVectorRegisterERjRN4llvm9StringRefENS_7RegKindE>
   118f0:	cbz	w0, 11920 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xac>
   118f4:	sub	w8, w0, #0x1
   118f8:	cmp	w8, #0x2
   118fc:	b.cc	1194c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xd8>  // b.lo, b.ul, b.last
   11900:	ldr	w8, [sp, #32]
   11904:	cmp	w8, #0x2
   11908:	b.ne	1194c <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0xd8>  // b.any
   1190c:	mov	w19, #0x1                   	// #1
   11910:	ldr	w8, [sp, #64]
   11914:	cmp	w8, #0x41
   11918:	b.cs	11988 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x114>  // b.hs, b.nlast
   1191c:	b	11994 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>
   11920:	ldp	x1, x2, [x21]
   11924:	add	x0, sp, #0x8
   11928:	mov	w3, #0x1                   	// #1
   1192c:	bl	aaac <_ZL15parseVectorKindN4llvm9StringRefEN12_GLOBAL__N_17RegKindE>
   11930:	ldrb	w8, [sp, #16]
   11934:	cbz	w8, 119ac <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x138>
   11938:	mov	w19, wzr
   1193c:	ldr	w8, [sp, #64]
   11940:	cmp	w8, #0x41
   11944:	b.cs	11988 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x114>  // b.hs, b.nlast
   11948:	b	11994 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>
   1194c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11950:	add	x8, x8, #0x0
   11954:	mov	w9, #0x103                 	// #259
   11958:	stp	x8, xzr, [sp, #8]
   1195c:	strh	w9, [sp, #24]
   11960:	ldr	x0, [x20, #8]
   11964:	add	x2, sp, #0x8
   11968:	mov	x1, x19
   1196c:	mov	x3, xzr
   11970:	mov	x4, xzr
   11974:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   11978:	mov	w19, #0x2                   	// #2
   1197c:	ldr	w8, [sp, #64]
   11980:	cmp	w8, #0x41
   11984:	b.cc	11994 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>  // b.lo, b.ul, b.last
   11988:	ldr	x0, [sp, #56]
   1198c:	cbz	x0, 11994 <_ZZN12_GLOBAL__N_116AArch64AsmParser18tryParseVectorListILNS_7RegKindE1EEEN4llvm20OperandMatchResultTyERNS3_15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS7_EEEEbENKUlRjRNS3_9StringRefENS3_5SMLocEbE_clESD_SF_SG_b+0x120>
   11990:	bl	0 <_ZdaPv>
   11994:	mov	w0, w19
   11998:	ldp	x20, x19, [sp, #112]
   1199c:	ldp	x22, x21, [sp, #96]
   119a0:	ldp	x29, x30, [sp, #80]
   119a4:	add	sp, sp, #0x80
   119a8:	ret
   119ac:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   119b0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   119b4:	add	x0, x0, #0x0
   119b8:	add	x1, x1, #0x0
   119bc:	mov	w2, #0xcfd                 	// #3325
   119c0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000119c4 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE>:
   119c4:	stp	x29, x30, [sp, #-48]!
   119c8:	stp	x22, x21, [sp, #16]
   119cc:	stp	x20, x19, [sp, #32]
   119d0:	mov	x29, sp
   119d4:	mov	w20, w0
   119d8:	ldr	x0, [x1]
   119dc:	ldr	w8, [x1, #8]
   119e0:	adrp	x2, 0 <LLVMInitializeAArch64AsmParser>
   119e4:	mov	x19, x1
   119e8:	add	x2, x2, #0x0
   119ec:	add	x1, x0, x8, lsl #4
   119f0:	bl	0 <LLVMInitializeAArch64AsmParser>
   119f4:	mov	x21, x0
   119f8:	ldr	x0, [x19]
   119fc:	ldr	w8, [x19, #8]
   11a00:	adrp	x2, 0 <LLVMInitializeAArch64AsmParser>
   11a04:	add	x2, x2, #0x0
   11a08:	add	x22, x0, x8, lsl #4
   11a0c:	mov	x1, x22
   11a10:	bl	0 <LLVMInitializeAArch64AsmParser>
   11a14:	ldr	x9, [x19]
   11a18:	ldr	w8, [x19, #8]
   11a1c:	cmp	x21, x22
   11a20:	b.ne	11ac8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x104>  // b.any
   11a24:	add	x10, x9, x8, lsl #4
   11a28:	cmp	x0, x10
   11a2c:	b.eq	11ac8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x104>  // b.none
   11a30:	ldr	w10, [x19, #12]
   11a34:	sub	w11, w20, #0x5
   11a38:	cmp	w11, #0x2
   11a3c:	b.cs	11b68 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1a4>  // b.hs, b.nlast
   11a40:	cmp	w8, w10
   11a44:	b.cs	11c60 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x29c>  // b.hs, b.nlast
   11a48:	add	x8, x9, x8, lsl #4
   11a4c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11a50:	add	x9, x9, #0x0
   11a54:	mov	w10, #0x3                   	// #3
   11a58:	stp	x9, x10, [x8]
   11a5c:	ldp	w8, w9, [x19, #8]
   11a60:	cmp	w8, w9
   11a64:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11a68:	add	w8, w8, #0x1
   11a6c:	cmp	w8, w9
   11a70:	str	w8, [x19, #8]
   11a74:	b.cs	11c80 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x2bc>  // b.hs, b.nlast
   11a78:	ldr	x9, [x19]
   11a7c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11a80:	add	x10, x10, #0x0
   11a84:	mov	w11, #0x4                   	// #4
   11a88:	add	x8, x9, w8, uxtw #4
   11a8c:	stp	x10, x11, [x8]
   11a90:	ldp	w8, w9, [x19, #8]
   11a94:	cmp	w8, w9
   11a98:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11a9c:	add	w8, w8, #0x1
   11aa0:	cmp	w8, w9
   11aa4:	str	w8, [x19, #8]
   11aa8:	b.cs	11c9c <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x2d8>  // b.hs, b.nlast
   11aac:	ldr	x9, [x19]
   11ab0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11ab4:	add	x10, x10, #0x0
   11ab8:	mov	w11, #0x4                   	// #4
   11abc:	add	x8, x9, w8, uxtw #4
   11ac0:	stp	x10, x11, [x8]
   11ac4:	b	11b84 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1c0>
   11ac8:	cmp	x21, x22
   11acc:	b.eq	11c18 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x254>  // b.none
   11ad0:	ldr	w10, [x19, #12]
   11ad4:	sub	w11, w20, #0x5
   11ad8:	cmp	w11, #0x2
   11adc:	b.cs	11bb4 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1f0>  // b.hs, b.nlast
   11ae0:	cmp	w8, w10
   11ae4:	b.cs	11cd8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x314>  // b.hs, b.nlast
   11ae8:	add	x8, x9, x8, lsl #4
   11aec:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11af0:	add	x9, x9, #0x0
   11af4:	mov	w10, #0x5                   	// #5
   11af8:	stp	x9, x10, [x8]
   11afc:	ldp	w8, w9, [x19, #8]
   11b00:	cmp	w8, w9
   11b04:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11b08:	add	w8, w8, #0x1
   11b0c:	cmp	w8, w9
   11b10:	str	w8, [x19, #8]
   11b14:	b.cs	11cf8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x334>  // b.hs, b.nlast
   11b18:	ldr	x9, [x19]
   11b1c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11b20:	add	x10, x10, #0x0
   11b24:	mov	w11, #0x6                   	// #6
   11b28:	add	x8, x9, w8, uxtw #4
   11b2c:	stp	x10, x11, [x8]
   11b30:	ldp	w8, w9, [x19, #8]
   11b34:	cmp	w8, w9
   11b38:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11b3c:	add	w8, w8, #0x1
   11b40:	cmp	w8, w9
   11b44:	str	w8, [x19, #8]
   11b48:	b.cs	11d14 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x350>  // b.hs, b.nlast
   11b4c:	ldr	x9, [x19]
   11b50:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11b54:	add	x10, x10, #0x0
   11b58:	mov	w11, #0x6                   	// #6
   11b5c:	add	x8, x9, w8, uxtw #4
   11b60:	stp	x10, x11, [x8]
   11b64:	b	11bd0 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x20c>
   11b68:	cmp	w8, w10
   11b6c:	b.cs	11cb8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x2f4>  // b.hs, b.nlast
   11b70:	add	x8, x9, x8, lsl #4
   11b74:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11b78:	add	x9, x9, #0x0
   11b7c:	mov	w10, #0x4                   	// #4
   11b80:	stp	x9, x10, [x8]
   11b84:	ldp	w8, w9, [x19, #8]
   11b88:	cmp	w8, w9
   11b8c:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11b90:	add	w8, w8, #0x1
   11b94:	cmp	w8, w9
   11b98:	str	w8, [x19, #8]
   11b9c:	b.cs	11c28 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x264>  // b.hs, b.nlast
   11ba0:	ldr	x9, [x19]
   11ba4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11ba8:	add	x10, x10, #0x0
   11bac:	mov	w11, #0x3                   	// #3
   11bb0:	b	11bfc <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x238>
   11bb4:	cmp	w8, w10
   11bb8:	b.cs	11d30 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x36c>  // b.hs, b.nlast
   11bbc:	add	x8, x9, x8, lsl #4
   11bc0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   11bc4:	add	x9, x9, #0x0
   11bc8:	mov	w10, #0x6                   	// #6
   11bcc:	stp	x9, x10, [x8]
   11bd0:	ldp	w8, w9, [x19, #8]
   11bd4:	cmp	w8, w9
   11bd8:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11bdc:	add	w8, w8, #0x1
   11be0:	cmp	w8, w9
   11be4:	str	w8, [x19, #8]
   11be8:	b.cs	11c44 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x280>  // b.hs, b.nlast
   11bec:	ldr	x9, [x19]
   11bf0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11bf4:	add	x10, x10, #0x0
   11bf8:	mov	w11, #0x5                   	// #5
   11bfc:	add	x8, x9, w8, uxtw #4
   11c00:	stp	x10, x11, [x8]
   11c04:	ldp	w8, w9, [x19, #8]
   11c08:	cmp	w8, w9
   11c0c:	b.cs	11d50 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x38c>  // b.hs, b.nlast
   11c10:	add	w8, w8, #0x1
   11c14:	str	w8, [x19, #8]
   11c18:	ldp	x20, x19, [sp, #32]
   11c1c:	ldp	x22, x21, [sp, #16]
   11c20:	ldp	x29, x30, [sp], #48
   11c24:	ret
   11c28:	add	x1, x19, #0x10
   11c2c:	mov	w3, #0x10                  	// #16
   11c30:	mov	x0, x19
   11c34:	mov	x2, xzr
   11c38:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11c3c:	ldr	w8, [x19, #8]
   11c40:	b	11ba0 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1dc>
   11c44:	add	x1, x19, #0x10
   11c48:	mov	w3, #0x10                  	// #16
   11c4c:	mov	x0, x19
   11c50:	mov	x2, xzr
   11c54:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11c58:	ldr	w8, [x19, #8]
   11c5c:	b	11bec <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x228>
   11c60:	add	x1, x19, #0x10
   11c64:	mov	w3, #0x10                  	// #16
   11c68:	mov	x0, x19
   11c6c:	mov	x2, xzr
   11c70:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11c74:	ldr	w8, [x19, #8]
   11c78:	ldr	x9, [x19]
   11c7c:	b	11a48 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x84>
   11c80:	add	x1, x19, #0x10
   11c84:	mov	w3, #0x10                  	// #16
   11c88:	mov	x0, x19
   11c8c:	mov	x2, xzr
   11c90:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11c94:	ldr	w8, [x19, #8]
   11c98:	b	11a78 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0xb4>
   11c9c:	add	x1, x19, #0x10
   11ca0:	mov	w3, #0x10                  	// #16
   11ca4:	mov	x0, x19
   11ca8:	mov	x2, xzr
   11cac:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11cb0:	ldr	w8, [x19, #8]
   11cb4:	b	11aac <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0xe8>
   11cb8:	add	x1, x19, #0x10
   11cbc:	mov	w3, #0x10                  	// #16
   11cc0:	mov	x0, x19
   11cc4:	mov	x2, xzr
   11cc8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11ccc:	ldr	w8, [x19, #8]
   11cd0:	ldr	x9, [x19]
   11cd4:	b	11b70 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1ac>
   11cd8:	add	x1, x19, #0x10
   11cdc:	mov	w3, #0x10                  	// #16
   11ce0:	mov	x0, x19
   11ce4:	mov	x2, xzr
   11ce8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11cec:	ldr	w8, [x19, #8]
   11cf0:	ldr	x9, [x19]
   11cf4:	b	11ae8 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x124>
   11cf8:	add	x1, x19, #0x10
   11cfc:	mov	w3, #0x10                  	// #16
   11d00:	mov	x0, x19
   11d04:	mov	x2, xzr
   11d08:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11d0c:	ldr	w8, [x19, #8]
   11d10:	b	11b18 <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x154>
   11d14:	add	x1, x19, #0x10
   11d18:	mov	w3, #0x10                  	// #16
   11d1c:	mov	x0, x19
   11d20:	mov	x2, xzr
   11d24:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11d28:	ldr	w8, [x19, #8]
   11d2c:	b	11b4c <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x188>
   11d30:	add	x1, x19, #0x10
   11d34:	mov	w3, #0x10                  	// #16
   11d38:	mov	x0, x19
   11d3c:	mov	x2, xzr
   11d40:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   11d44:	ldr	w8, [x19, #8]
   11d48:	ldr	x9, [x19]
   11d4c:	b	11bbc <_ZL15ExpandCryptoAEKN4llvm7AArch648ArchKindERNS_11SmallVectorINS_9StringRefELj4EEE+0x1f8>
   11d50:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   11d54:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   11d58:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   11d5c:	add	x0, x0, #0x0
   11d60:	add	x1, x1, #0x0
   11d64:	add	x3, x3, #0x0
   11d68:	mov	w2, #0x43                  	// #67
   11d6c:	bl	0 <__assert_fail>

0000000000011d70 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl>:
   11d70:	sub	sp, sp, #0x50
   11d74:	stp	x29, x30, [sp, #32]
   11d78:	str	x21, [sp, #48]
   11d7c:	stp	x20, x19, [sp, #64]
   11d80:	add	x29, sp, #0x20
   11d84:	ldr	x20, [x0]
   11d88:	ldr	x0, [x20, #8]
   11d8c:	bl	0 <_ZNK4llvm11MCAsmParser6getTokEv>
   11d90:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
   11d94:	str	xzr, [x29, #24]
   11d98:	ldr	x8, [x20, #8]
   11d9c:	mov	x19, x0
   11da0:	add	x1, x29, #0x18
   11da4:	mov	x0, x8
   11da8:	bl	0 <_ZN4llvm11MCAsmParser15parseExpressionERPKNS_6MCExprE>
   11dac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11db0:	add	x8, x8, #0x0
   11db4:	mov	w9, #0x103                 	// #259
   11db8:	stp	x8, xzr, [sp, #8]
   11dbc:	strh	w9, [sp, #24]
   11dc0:	ldr	x8, [x20, #8]
   11dc4:	and	w1, w0, #0x1
   11dc8:	add	x3, sp, #0x8
   11dcc:	mov	x2, x19
   11dd0:	mov	x0, x8
   11dd4:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
   11dd8:	tbnz	w0, #0, 11e28 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xb8>
   11ddc:	ldr	x8, [x29, #24]
   11de0:	cbz	x8, 11df4 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0x84>
   11de4:	ldr	w9, [x8]
   11de8:	cmp	w9, #0x1
   11dec:	csel	x21, x8, xzr, eq  // eq = none
   11df0:	b	11df8 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0x88>
   11df4:	mov	x21, xzr
   11df8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   11dfc:	add	x8, x8, #0x0
   11e00:	mov	w9, #0x103                 	// #259
   11e04:	stp	x8, xzr, [sp, #8]
   11e08:	strh	w9, [sp, #24]
   11e0c:	ldr	x0, [x20, #8]
   11e10:	cmp	x21, #0x0
   11e14:	cset	w1, eq  // eq = none
   11e18:	add	x3, sp, #0x8
   11e1c:	mov	x2, x19
   11e20:	bl	0 <_ZN4llvm11MCAsmParser5checkEbNS_5SMLocERKNS_5TwineE>
   11e24:	tbz	w0, #0, 11e30 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xc0>
   11e28:	mov	w0, #0x1                   	// #1
   11e2c:	b	11e58 <_ZN4llvm12function_refIFbvEE11callback_fnIZN12_GLOBAL__N_116AArch64AsmParser18parseDirectiveInstENS_5SMLocEE3$_2EEbl+0xe8>
   11e30:	ldr	x0, [x20, #8]
   11e34:	ldr	x8, [x0]
   11e38:	ldr	x8, [x8, #56]
   11e3c:	blr	x8
   11e40:	ldr	x0, [x0, #16]
   11e44:	ldr	w1, [x21, #16]
   11e48:	ldr	x8, [x0]
   11e4c:	ldr	x8, [x8, #80]
   11e50:	blr	x8
   11e54:	mov	w0, wzr
   11e58:	ldp	x20, x19, [sp, #64]
   11e5c:	ldr	x21, [sp, #48]
   11e60:	ldp	x29, x30, [sp, #32]
   11e64:	add	sp, sp, #0x50
   11e68:	ret

0000000000011e6c <_ZN4llvmL15getXRegFromWRegEj>:
   11e6c:	sub	w9, w0, #0x6
   11e70:	mov	w8, w0
   11e74:	cmp	w9, #0xd1
   11e78:	b.hi	11f98 <_ZN4llvmL15getXRegFromWRegEj+0x12c>  // b.pmore
   11e7c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11e80:	add	x10, x10, #0x0
   11e84:	adr	x11, 11e98 <_ZN4llvmL15getXRegFromWRegEj+0x2c>
   11e88:	ldrb	w12, [x10, x9]
   11e8c:	add	x11, x11, x12, lsl #2
   11e90:	mov	w0, #0xd8                  	// #216
   11e94:	br	x11
   11e98:	mov	w0, #0x5                   	// #5
   11e9c:	ret
   11ea0:	mov	w0, #0x8                   	// #8
   11ea4:	ret
   11ea8:	mov	w0, #0xd9                  	// #217
   11eac:	ret
   11eb0:	mov	w0, #0xda                  	// #218
   11eb4:	ret
   11eb8:	mov	w0, #0xdb                  	// #219
   11ebc:	ret
   11ec0:	mov	w0, #0xdc                  	// #220
   11ec4:	ret
   11ec8:	mov	w0, #0xdd                  	// #221
   11ecc:	ret
   11ed0:	mov	w0, #0xde                  	// #222
   11ed4:	ret
   11ed8:	mov	w0, #0xdf                  	// #223
   11edc:	ret
   11ee0:	mov	w0, #0xe0                  	// #224
   11ee4:	ret
   11ee8:	mov	w0, #0xe1                  	// #225
   11eec:	ret
   11ef0:	mov	w0, #0xe2                  	// #226
   11ef4:	ret
   11ef8:	mov	w0, #0xe3                  	// #227
   11efc:	ret
   11f00:	mov	w0, #0xe4                  	// #228
   11f04:	ret
   11f08:	mov	w0, #0xe5                  	// #229
   11f0c:	ret
   11f10:	mov	w0, #0xe6                  	// #230
   11f14:	ret
   11f18:	mov	w0, #0xe7                  	// #231
   11f1c:	ret
   11f20:	mov	w0, #0xe8                  	// #232
   11f24:	ret
   11f28:	mov	w0, #0xe9                  	// #233
   11f2c:	ret
   11f30:	mov	w0, #0xea                  	// #234
   11f34:	ret
   11f38:	mov	w0, #0xeb                  	// #235
   11f3c:	ret
   11f40:	mov	w0, #0xec                  	// #236
   11f44:	ret
   11f48:	mov	w0, #0xed                  	// #237
   11f4c:	ret
   11f50:	mov	w0, #0xee                  	// #238
   11f54:	ret
   11f58:	mov	w0, #0xef                  	// #239
   11f5c:	ret
   11f60:	mov	w0, #0xf0                  	// #240
   11f64:	ret
   11f68:	mov	w0, #0xf1                  	// #241
   11f6c:	ret
   11f70:	mov	w0, #0xf2                  	// #242
   11f74:	ret
   11f78:	mov	w0, #0xf3                  	// #243
   11f7c:	ret
   11f80:	mov	w0, #0xf4                  	// #244
   11f84:	ret
   11f88:	mov	w0, #0x2                   	// #2
   11f8c:	ret
   11f90:	mov	w0, #0x3                   	// #3
   11f94:	ret
   11f98:	mov	w0, w8
   11f9c:	ret

0000000000011fa0 <_ZN4llvmL15getWRegFromXRegEj>:
   11fa0:	sub	w9, w0, #0x2
   11fa4:	mov	w8, w0
   11fa8:	cmp	w9, #0xf2
   11fac:	b.hi	120cc <_ZN4llvmL15getWRegFromXRegEj+0x12c>  // b.pmore
   11fb0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   11fb4:	add	x10, x10, #0x0
   11fb8:	adr	x11, 11fcc <_ZN4llvmL15getWRegFromXRegEj+0x2c>
   11fbc:	ldrb	w12, [x10, x9]
   11fc0:	add	x11, x11, x12, lsl #2
   11fc4:	mov	w0, #0xb9                  	// #185
   11fc8:	br	x11
   11fcc:	mov	w0, #0xd6                  	// #214
   11fd0:	ret
   11fd4:	mov	w0, #0xd7                  	// #215
   11fd8:	ret
   11fdc:	mov	w0, #0x6                   	// #6
   11fe0:	ret
   11fe4:	mov	w0, #0x7                   	// #7
   11fe8:	ret
   11fec:	mov	w0, #0xba                  	// #186
   11ff0:	ret
   11ff4:	mov	w0, #0xbb                  	// #187
   11ff8:	ret
   11ffc:	mov	w0, #0xbc                  	// #188
   12000:	ret
   12004:	mov	w0, #0xbd                  	// #189
   12008:	ret
   1200c:	mov	w0, #0xbe                  	// #190
   12010:	ret
   12014:	mov	w0, #0xbf                  	// #191
   12018:	ret
   1201c:	mov	w0, #0xc0                  	// #192
   12020:	ret
   12024:	mov	w0, #0xc1                  	// #193
   12028:	ret
   1202c:	mov	w0, #0xc2                  	// #194
   12030:	ret
   12034:	mov	w0, #0xc3                  	// #195
   12038:	ret
   1203c:	mov	w0, #0xc4                  	// #196
   12040:	ret
   12044:	mov	w0, #0xc5                  	// #197
   12048:	ret
   1204c:	mov	w0, #0xc6                  	// #198
   12050:	ret
   12054:	mov	w0, #0xc7                  	// #199
   12058:	ret
   1205c:	mov	w0, #0xc8                  	// #200
   12060:	ret
   12064:	mov	w0, #0xc9                  	// #201
   12068:	ret
   1206c:	mov	w0, #0xca                  	// #202
   12070:	ret
   12074:	mov	w0, #0xcb                  	// #203
   12078:	ret
   1207c:	mov	w0, #0xcc                  	// #204
   12080:	ret
   12084:	mov	w0, #0xcd                  	// #205
   12088:	ret
   1208c:	mov	w0, #0xce                  	// #206
   12090:	ret
   12094:	mov	w0, #0xcf                  	// #207
   12098:	ret
   1209c:	mov	w0, #0xd0                  	// #208
   120a0:	ret
   120a4:	mov	w0, #0xd1                  	// #209
   120a8:	ret
   120ac:	mov	w0, #0xd2                  	// #210
   120b0:	ret
   120b4:	mov	w0, #0xd3                  	// #211
   120b8:	ret
   120bc:	mov	w0, #0xd4                  	// #212
   120c0:	ret
   120c4:	mov	w0, #0xd5                  	// #213
   120c8:	ret
   120cc:	mov	w0, w8
   120d0:	ret

00000000000120d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj>:
   120d4:	sub	sp, sp, #0x110
   120d8:	stp	x29, x30, [sp, #176]
   120dc:	stp	x28, x27, [sp, #192]
   120e0:	stp	x26, x25, [sp, #208]
   120e4:	stp	x24, x23, [sp, #224]
   120e8:	stp	x22, x21, [sp, #240]
   120ec:	stp	x20, x19, [sp, #256]
   120f0:	add	x29, sp, #0xb0
   120f4:	ldr	w8, [x1, #8]
   120f8:	str	w5, [sp, #12]
   120fc:	str	x4, [sp, #56]
   12100:	stur	x0, [x29, #-40]
   12104:	cmp	w8, #0xc
   12108:	b.cc	1211c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x48>  // b.lo, b.ul, b.last
   1210c:	mov	w8, #0xb                   	// #11
   12110:	mov	w0, wzr
   12114:	str	x8, [x3]
   12118:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   1211c:	cbz	w8, 13260 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x118c>
   12120:	ldr	x8, [x1]
   12124:	mov	x20, x1
   12128:	ldr	x8, [x8]
   1212c:	ldr	w9, [x8, #48]
   12130:	cmp	w9, #0x6
   12134:	b.ne	132a0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x11cc>  // b.any
   12138:	ldr	x9, [x8, #72]
   1213c:	ldr	w28, [x8, #80]
   12140:	mov	x8, #0xffffffffffffffff    	// #-1
   12144:	stur	x9, [x29, #-56]
   12148:	ldr	x9, [sp, #56]
   1214c:	stp	x8, x8, [x9, #8]
   12150:	str	x8, [x9]
   12154:	str	x8, [x3]
   12158:	cbz	w6, 12170 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9c>
   1215c:	cmp	w6, #0x1
   12160:	b.ne	132c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x11ec>  // b.any
   12164:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
   12168:	add	x19, x19, #0x0
   1216c:	b	12178 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa4>
   12170:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
   12174:	add	x19, x19, #0x0
   12178:	mov	w8, #0x2618                	// #9752
   1217c:	movk	w8, #0x3, lsl #16
   12180:	add	x8, x19, x8
   12184:	sub	x8, x8, x19
   12188:	cmp	x8, #0x1
   1218c:	str	x2, [sp, #32]
   12190:	str	x3, [sp, #16]
   12194:	stur	x28, [x29, #-64]
   12198:	b.lt	1226c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x198>  // b.tstop
   1219c:	mov	x9, #0x4925                	// #18725
   121a0:	movk	x9, #0x2492, lsl #16
   121a4:	movk	x9, #0x9249, lsl #32
   121a8:	lsr	x8, x8, #2
   121ac:	movk	x9, #0x4924, lsl #48
   121b0:	umulh	x8, x8, x9
   121b4:	lsr	x21, x8, #1
   121b8:	mov	w27, #0x1c                  	// #28
   121bc:	b	121dc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x108>
   121c0:	mvn	x8, x24
   121c4:	add	x19, x22, #0x1c
   121c8:	add	x24, x21, x8
   121cc:	cmp	x24, #0x0
   121d0:	mov	x21, x24
   121d4:	mov	x26, x19
   121d8:	b.le	12270 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x19c>
   121dc:	lsr	x24, x21, #1
   121e0:	madd	x22, x24, x27, x19
   121e4:	ldrh	w8, [x22]
   121e8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   121ec:	add	x9, x9, #0x0
   121f0:	mov	x23, x19
   121f4:	add	x26, x9, x8
   121f8:	ldrb	w25, [x26]
   121fc:	cmp	x25, x28
   12200:	csel	x19, x28, x25, hi  // hi = pmore
   12204:	cbz	x19, 12224 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x150>
   12208:	ldur	x1, [x29, #-56]
   1220c:	add	x0, x26, #0x1
   12210:	mov	x2, x19
   12214:	bl	0 <memcmp>
   12218:	cbz	w0, 12224 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x150>
   1221c:	tbnz	w0, #31, 121c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xec>
   12220:	b	12230 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x15c>
   12224:	cmp	x25, x28
   12228:	b.cc	121c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xec>  // b.lo, b.ul, b.last
   1222c:	cbz	x19, 1224c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x178>
   12230:	ldur	x0, [x29, #-56]
   12234:	add	x1, x26, #0x1
   12238:	mov	x2, x19
   1223c:	bl	0 <memcmp>
   12240:	cbz	w0, 1224c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x178>
   12244:	tbnz	w0, #31, 12254 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x180>
   12248:	b	122b8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1e4>
   1224c:	cmp	x25, x28
   12250:	b.ls	122b8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1e4>  // b.plast
   12254:	mov	x19, x23
   12258:	cmp	x24, #0x0
   1225c:	mov	x21, x24
   12260:	mov	x26, x19
   12264:	b.gt	121dc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x108>
   12268:	b	12270 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x19c>
   1226c:	mov	x26, x19
   12270:	adrp	x24, 0 <_ZN4llvm9DebugFlagE>
   12274:	ldr	x24, [x24]
   12278:	ldrb	w8, [x24]
   1227c:	cbz	w8, 124f8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x424>
   12280:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12284:	add	x0, x0, #0x0
   12288:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   1228c:	tbz	w0, #0, 124f8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x424>
   12290:	bl	0 <_ZN4llvm4dbgsEv>
   12294:	ldp	x9, x8, [x0, #16]
   12298:	sub	x9, x9, x8
   1229c:	cmp	x9, #0x11
   122a0:	b.hi	12434 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x360>  // b.pmore
   122a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   122a8:	add	x1, x1, #0x0
   122ac:	mov	w2, #0x12                  	// #18
   122b0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   122b4:	b	12458 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x384>
   122b8:	sub	x8, x22, x23
   122bc:	mov	x19, x23
   122c0:	cmp	x8, #0x1
   122c4:	b.lt	12370 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x29c>  // b.tstop
   122c8:	mov	x9, #0x4925                	// #18725
   122cc:	movk	x9, #0x2492, lsl #16
   122d0:	movk	x9, #0x9249, lsl #32
   122d4:	lsr	x8, x8, #2
   122d8:	movk	x9, #0x4924, lsl #48
   122dc:	umulh	x8, x8, x9
   122e0:	mov	w25, #0x1c                  	// #28
   122e4:	lsr	x26, x8, #1
   122e8:	b	12314 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x240>
   122ec:	mov	w8, #0xffffffff            	// #-1
   122f0:	cneg	w8, w8, cs  // cs = hs, nlast
   122f4:	mvn	x10, x27
   122f8:	cmn	w8, #0x1
   122fc:	add	x8, x26, x10
   12300:	add	x9, x28, #0x1c
   12304:	csel	x26, x8, x27, eq  // eq = none
   12308:	csel	x19, x9, x19, eq  // eq = none
   1230c:	cmp	x26, #0x0
   12310:	b.le	12370 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x29c>
   12314:	lsr	x27, x26, #1
   12318:	madd	x28, x27, x25, x19
   1231c:	ldrh	w8, [x28]
   12320:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12324:	add	x9, x9, #0x0
   12328:	add	x8, x9, x8
   1232c:	ldrb	w24, [x8]
   12330:	ldur	x9, [x29, #-64]
   12334:	cmp	x24, x9
   12338:	csel	x2, x9, x24, hi  // hi = pmore
   1233c:	cbz	x2, 1235c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x288>
   12340:	ldur	x1, [x29, #-56]
   12344:	add	x0, x8, #0x1
   12348:	bl	0 <memcmp>
   1234c:	cmp	w0, #0x0
   12350:	mov	w8, #0x1                   	// #1
   12354:	cneg	w8, w8, lt  // lt = tstop
   12358:	cbnz	w0, 122f4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x220>
   1235c:	ldur	x8, [x29, #-64]
   12360:	cmp	x24, x8
   12364:	b.ne	122ec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x218>  // b.any
   12368:	mov	w8, wzr
   1236c:	b	122f4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x220>
   12370:	mov	w8, #0x1c                  	// #28
   12374:	madd	x8, x21, x8, x23
   12378:	add	x26, x22, #0x1c
   1237c:	sub	x8, x8, x26
   12380:	cmp	x8, #0x1
   12384:	b.lt	13144 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1070>  // b.tstop
   12388:	mov	x9, #0x4925                	// #18725
   1238c:	movk	x9, #0x2492, lsl #16
   12390:	movk	x9, #0x9249, lsl #32
   12394:	ldur	x28, [x29, #-64]
   12398:	lsr	x8, x8, #2
   1239c:	movk	x9, #0x4924, lsl #48
   123a0:	umulh	x8, x8, x9
   123a4:	mov	w21, #0x1c                  	// #28
   123a8:	lsr	x24, x8, #1
   123ac:	mov	w23, #0x1                   	// #1
   123b0:	b	123e0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x30c>
   123b4:	mov	w8, #0xffffffff            	// #-1
   123b8:	cneg	w8, w8, ls  // ls = plast
   123bc:	mvn	x10, x25
   123c0:	cmn	w8, #0x1
   123c4:	add	x8, x24, x10
   123c8:	add	x9, x26, #0x1c
   123cc:	csel	x24, x25, x8, eq  // eq = none
   123d0:	mov	x26, x22
   123d4:	csel	x26, x22, x9, eq  // eq = none
   123d8:	cmp	x24, #0x0
   123dc:	b.le	12270 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x19c>
   123e0:	lsr	x25, x24, #1
   123e4:	mov	x22, x26
   123e8:	madd	x26, x25, x21, x26
   123ec:	ldrh	w8, [x26]
   123f0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   123f4:	add	x9, x9, #0x0
   123f8:	add	x8, x9, x8
   123fc:	ldrb	w27, [x8]
   12400:	cmp	x27, x28
   12404:	csel	x2, x27, x28, cc  // cc = lo, ul, last
   12408:	cbz	x2, 12424 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x350>
   1240c:	ldur	x0, [x29, #-56]
   12410:	add	x1, x8, #0x1
   12414:	bl	0 <memcmp>
   12418:	cmp	w0, #0x0
   1241c:	cneg	w8, w23, lt  // lt = tstop
   12420:	cbnz	w0, 123bc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2e8>
   12424:	cmp	x27, x28
   12428:	b.ne	123b4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2e0>  // b.any
   1242c:	mov	w8, wzr
   12430:	b	123bc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x2e8>
   12434:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12438:	add	x9, x9, #0x0
   1243c:	ldr	q0, [x9]
   12440:	mov	w9, #0x2064                	// #8292
   12444:	strh	w9, [x8, #16]
   12448:	str	q0, [x8]
   1244c:	ldr	x8, [x0, #24]
   12450:	add	x8, x8, #0x12
   12454:	str	x8, [x0, #24]
   12458:	mov	x9, #0x6db7                	// #28087
   1245c:	movk	x9, #0xb6db, lsl #16
   12460:	sub	x8, x26, x19
   12464:	movk	x9, #0xdb6d, lsl #32
   12468:	asr	x8, x8, #2
   1246c:	movk	x9, #0x6db6, lsl #48
   12470:	mul	x1, x8, x9
   12474:	bl	0 <_ZN4llvm11raw_ostreamlsEl>
   12478:	ldp	x9, x8, [x0, #16]
   1247c:	mov	x22, x0
   12480:	sub	x9, x9, x8
   12484:	cmp	x9, #0x19
   12488:	b.hi	130a8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfd4>  // b.pmore
   1248c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12490:	add	x1, x1, #0x0
   12494:	mov	w2, #0x1a                  	// #26
   12498:	mov	x0, x22
   1249c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   124a0:	mov	x22, x0
   124a4:	ldr	x0, [x0, #24]
   124a8:	ldr	x8, [x22, #16]
   124ac:	sub	x8, x8, x0
   124b0:	cmp	x8, x28
   124b4:	b.cc	130dc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1008>  // b.lo, b.ul, b.last
   124b8:	cbz	w28, 124d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x400>
   124bc:	ldur	x1, [x29, #-56]
   124c0:	mov	x2, x28
   124c4:	bl	0 <memcpy>
   124c8:	ldr	x8, [x22, #24]
   124cc:	add	x0, x8, x28
   124d0:	str	x0, [x22, #24]
   124d4:	ldr	x8, [x22, #16]
   124d8:	sub	x8, x8, x0
   124dc:	cmp	x8, #0x1
   124e0:	b.hi	13104 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1030>  // b.pmore
   124e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   124e8:	add	x1, x1, #0x0
   124ec:	mov	w2, #0x2                   	// #2
   124f0:	mov	x0, x22
   124f4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   124f8:	cmp	x19, x26
   124fc:	b.eq	13120 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x104c>  // b.none
   12500:	ldur	x8, [x29, #-40]
   12504:	str	wzr, [sp, #28]
   12508:	str	xzr, [sp, #48]
   1250c:	str	wzr, [sp, #44]
   12510:	add	x8, x8, #0x18
   12514:	stp	x8, x26, [sp, #64]
   12518:	str	x19, [sp]
   1251c:	b	12538 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x464>
   12520:	ldur	x28, [x29, #-64]
   12524:	mov	w8, #0x1                   	// #1
   12528:	str	w8, [sp, #28]
   1252c:	add	x19, x19, #0x1c
   12530:	cmp	x19, x26
   12534:	b.eq	13084 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfb0>  // b.none
   12538:	ldr	x9, [sp, #64]
   1253c:	ldrb	w8, [x19, #6]
   12540:	adrp	x11, 0 <LLVMInitializeAArch64AsmParser>
   12544:	mov	w10, #0x18                  	// #24
   12548:	ldr	q0, [x9]
   1254c:	add	x11, x11, #0x0
   12550:	ldr	x9, [x9, #16]
   12554:	madd	x8, x8, x10, x11
   12558:	stur	q0, [x29, #-32]
   1255c:	ldr	q1, [x8]
   12560:	ldur	q0, [x29, #-32]
   12564:	ldr	x11, [x8]
   12568:	ldp	x8, x21, [x8, #8]
   1256c:	str	q1, [sp, #80]
   12570:	and	v0.16b, v0.16b, v1.16b
   12574:	stur	q0, [x29, #-32]
   12578:	ldp	x10, x12, [x29, #-32]
   1257c:	bic	x9, x21, x9
   12580:	eor	x10, x10, x11
   12584:	eor	x8, x12, x8
   12588:	ldrb	w11, [x24]
   1258c:	orr	x8, x10, x8
   12590:	orr	x8, x8, x9
   12594:	cmp	x8, #0x0
   12598:	cset	w8, ne  // ne = any
   1259c:	stur	w8, [x29, #-44]
   125a0:	cbz	w11, 126d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x600>
   125a4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   125a8:	add	x0, x0, #0x0
   125ac:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   125b0:	tbz	w0, #0, 126d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x600>
   125b4:	bl	0 <_ZN4llvm4dbgsEv>
   125b8:	ldp	x9, x8, [x0, #16]
   125bc:	mov	x27, x0
   125c0:	sub	x9, x9, x8
   125c4:	cmp	x9, #0x16
   125c8:	b.hi	125e8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x514>  // b.pmore
   125cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   125d0:	mov	w2, #0x17                  	// #23
   125d4:	mov	x0, x27
   125d8:	add	x1, x1, #0x0
   125dc:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   125e0:	mov	x27, x0
   125e4:	b	1260c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x538>
   125e8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   125ec:	add	x10, x10, #0x0
   125f0:	ldur	x9, [x10, #15]
   125f4:	ldr	q0, [x10]
   125f8:	stur	x9, [x8, #15]
   125fc:	str	q0, [x8]
   12600:	ldr	x8, [x27, #24]
   12604:	add	x8, x8, #0x17
   12608:	str	x8, [x27, #24]
   1260c:	ldur	x8, [x29, #-40]
   12610:	ldrh	w9, [x19, #2]
   12614:	ldr	x8, [x8, #168]
   12618:	ldr	w10, [x8, #24]
   1261c:	cmp	w10, w9
   12620:	b.ls	13280 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x11ac>  // b.plast
   12624:	ldp	x10, x8, [x8, #8]
   12628:	ldr	w9, [x10, x9, lsl #2]
   1262c:	add	x23, x8, x9
   12630:	cbz	x8, 1266c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x598>
   12634:	mov	x0, x23
   12638:	bl	0 <strlen>
   1263c:	mov	x22, x0
   12640:	ldp	x8, x0, [x27, #16]
   12644:	sub	x8, x8, x0
   12648:	cmp	x22, x8
   1264c:	b.ls	12680 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5ac>  // b.plast
   12650:	mov	x0, x27
   12654:	mov	x1, x23
   12658:	mov	x2, x22
   1265c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12660:	mov	x27, x0
   12664:	ldr	x0, [x0, #24]
   12668:	b	1269c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5c8>
   1266c:	mov	x22, xzr
   12670:	ldp	x8, x0, [x27, #16]
   12674:	sub	x8, x8, x0
   12678:	cmp	x22, x8
   1267c:	b.hi	12650 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x57c>  // b.pmore
   12680:	cbz	x22, 1269c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5c8>
   12684:	mov	x1, x23
   12688:	mov	x2, x22
   1268c:	bl	0 <memcpy>
   12690:	ldr	x8, [x27, #24]
   12694:	add	x0, x8, x22
   12698:	str	x0, [x27, #24]
   1269c:	ldr	x8, [x27, #16]
   126a0:	cmp	x8, x0
   126a4:	b.ne	126c0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x5ec>  // b.any
   126a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   126ac:	mov	w2, #0x1                   	// #1
   126b0:	mov	x0, x27
   126b4:	add	x1, x1, #0x0
   126b8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   126bc:	b	126d4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x600>
   126c0:	mov	w8, #0xa                   	// #10
   126c4:	strb	w8, [x0]
   126c8:	ldr	x8, [x27, #24]
   126cc:	add	x8, x8, #0x1
   126d0:	str	x8, [x27, #24]
   126d4:	ldrh	w8, [x19]
   126d8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   126dc:	add	x9, x9, #0x0
   126e0:	stur	x21, [x29, #-72]
   126e4:	add	x1, x9, x8
   126e8:	ldrb	w8, [x1], #1
   126ec:	cmp	w28, w8
   126f0:	b.ne	13240 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x116c>  // b.any
   126f4:	cbz	w28, 12708 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x634>
   126f8:	ldur	x0, [x29, #-56]
   126fc:	mov	x2, x28
   12700:	bl	0 <bcmp>
   12704:	cbnz	w0, 13240 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x116c>
   12708:	mov	w26, #0x1                   	// #1
   1270c:	mov	w21, #0x8                   	// #8
   12710:	b	12734 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x660>
   12714:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12718:	mov	w2, #0x24                  	// #36
   1271c:	add	x1, x1, #0x0
   12720:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12724:	add	w26, w26, #0x1
   12728:	add	x21, x21, #0x2
   1272c:	cmp	x21, #0x1c
   12730:	b.eq	12b74 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>  // b.none
   12734:	ldrh	w27, [x19, x21]
   12738:	ldrb	w8, [x24]
   1273c:	sxth	x28, w27
   12740:	cbz	w8, 12870 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x79c>
   12744:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12748:	add	x0, x0, #0x0
   1274c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12750:	tbz	w0, #0, 1286c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x798>
   12754:	bl	0 <_ZN4llvm4dbgsEv>
   12758:	ldp	x9, x8, [x0, #16]
   1275c:	mov	x23, x0
   12760:	sub	x9, x9, x8
   12764:	cmp	x9, #0x1f
   12768:	b.hi	12788 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6b4>  // b.pmore
   1276c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12770:	mov	w2, #0x20                  	// #32
   12774:	mov	x0, x23
   12778:	add	x1, x1, #0x0
   1277c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12780:	mov	x23, x0
   12784:	b	127a4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x6d0>
   12788:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1278c:	add	x9, x9, #0x0
   12790:	ldp	q1, q0, [x9]
   12794:	stp	q1, q0, [x8]
   12798:	ldr	x8, [x23, #24]
   1279c:	add	x8, x8, #0x20
   127a0:	str	x8, [x23, #24]
   127a4:	and	w8, w28, #0xffff
   127a8:	cmp	w8, #0x1d5
   127ac:	b.cs	13228 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1154>  // b.hs, b.nlast
   127b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   127b4:	add	x8, x8, #0x0
   127b8:	ldr	x22, [x8, x28, lsl #3]
   127bc:	mov	x0, x22
   127c0:	bl	0 <strlen>
   127c4:	mov	x25, x0
   127c8:	ldp	x8, x0, [x23, #16]
   127cc:	sub	x8, x8, x0
   127d0:	cmp	x25, x8
   127d4:	b.ls	127f4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x720>  // b.plast
   127d8:	mov	x0, x23
   127dc:	mov	x1, x22
   127e0:	mov	x2, x25
   127e4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   127e8:	mov	x23, x0
   127ec:	ldr	x0, [x0, #24]
   127f0:	b	12810 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x73c>
   127f4:	cbz	x25, 12810 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x73c>
   127f8:	mov	x1, x22
   127fc:	mov	x2, x25
   12800:	bl	0 <memcpy>
   12804:	ldr	x8, [x23, #24]
   12808:	add	x0, x8, x25
   1280c:	str	x0, [x23, #24]
   12810:	ldr	x8, [x23, #16]
   12814:	sub	x8, x8, x0
   12818:	cmp	x8, #0x20
   1281c:	b.hi	1283c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x768>  // b.pmore
   12820:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12824:	mov	w2, #0x21                  	// #33
   12828:	mov	x0, x23
   1282c:	add	x1, x1, #0x0
   12830:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12834:	mov	x23, x0
   12838:	b	12860 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x78c>
   1283c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   12840:	add	x8, x8, #0x0
   12844:	ldp	q1, q0, [x8]
   12848:	mov	w8, #0x20                  	// #32
   1284c:	strb	w8, [x0, #32]
   12850:	stp	q1, q0, [x0]
   12854:	ldr	x8, [x23, #24]
   12858:	add	x8, x8, #0x21
   1285c:	str	x8, [x23, #24]
   12860:	mov	w1, w26
   12864:	mov	x0, x23
   12868:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   1286c:	ldrb	w8, [x24]
   12870:	ldr	w9, [x20, #8]
   12874:	mov	w25, w26
   12878:	cmp	w9, w26
   1287c:	b.ls	128bc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x7e8>  // b.plast
   12880:	cbz	w8, 12990 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8bc>
   12884:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12888:	add	x0, x0, #0x0
   1288c:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12890:	tbz	w0, #0, 12990 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8bc>
   12894:	bl	0 <_ZN4llvm4dbgsEv>
   12898:	ldp	x9, x8, [x0, #16]
   1289c:	sub	x9, x9, x8
   128a0:	cmp	x9, #0x1
   128a4:	b.hi	128f8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x824>  // b.pmore
   128a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   128ac:	mov	w2, #0x2                   	// #2
   128b0:	add	x1, x1, #0x0
   128b4:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   128b8:	b	1290c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x838>
   128bc:	cbz	w8, 12990 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8bc>
   128c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   128c4:	add	x0, x0, #0x0
   128c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   128cc:	tbz	w0, #0, 12990 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8bc>
   128d0:	bl	0 <_ZN4llvm4dbgsEv>
   128d4:	ldp	x9, x8, [x0, #16]
   128d8:	sub	x9, x9, x8
   128dc:	cmp	x9, #0x1
   128e0:	b.hi	12960 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x88c>  // b.pmore
   128e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   128e8:	mov	w2, #0x2                   	// #2
   128ec:	add	x1, x1, #0x0
   128f0:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   128f4:	b	12990 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8bc>
   128f8:	mov	w9, #0x2820                	// #10272
   128fc:	strh	w9, [x8]
   12900:	ldr	x8, [x0, #24]
   12904:	add	x8, x8, #0x2
   12908:	str	x8, [x0, #24]
   1290c:	ldr	w8, [x20, #8]
   12910:	cmp	w8, w26
   12914:	b.ls	13260 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x118c>  // b.plast
   12918:	ldr	x8, [x20]
   1291c:	ldr	x22, [x8, x25, lsl #3]
   12920:	bl	0 <_ZN4llvm4dbgsEv>
   12924:	ldr	x8, [x22]
   12928:	mov	x1, x0
   1292c:	mov	x0, x22
   12930:	ldr	x8, [x8, #112]
   12934:	blr	x8
   12938:	bl	0 <_ZN4llvm4dbgsEv>
   1293c:	ldp	x9, x8, [x0, #16]
   12940:	sub	x9, x9, x8
   12944:	cmp	x9, #0x2
   12948:	b.hi	12974 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8a0>  // b.pmore
   1294c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12950:	mov	w2, #0x3                   	// #3
   12954:	add	x1, x1, #0x0
   12958:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   1295c:	b	12990 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8bc>
   12960:	mov	w9, #0x203a                	// #8250
   12964:	strh	w9, [x8]
   12968:	ldr	x8, [x0, #24]
   1296c:	add	x8, x8, #0x2
   12970:	b	1298c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x8b8>
   12974:	mov	w9, #0x20                  	// #32
   12978:	strb	w9, [x8, #2]
   1297c:	mov	w9, #0x3a29                	// #14889
   12980:	strh	w9, [x8]
   12984:	ldr	x8, [x0, #24]
   12988:	add	x8, x8, #0x3
   1298c:	str	x8, [x0, #24]
   12990:	ldr	w8, [x20, #8]
   12994:	cmp	w8, w26
   12998:	b.ls	12b24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa50>  // b.plast
   1299c:	ldr	x8, [x20]
   129a0:	mov	w1, w27
   129a4:	ldr	x22, [x8, x25, lsl #3]
   129a8:	mov	x0, x22
   129ac:	bl	14894 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE>
   129b0:	cmp	w0, #0x4
   129b4:	b.ne	12a0c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x938>  // b.any
   129b8:	ldrb	w8, [x24]
   129bc:	cbz	w8, 12724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x650>
   129c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   129c4:	add	x0, x0, #0x0
   129c8:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   129cc:	tbz	w0, #0, 12724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x650>
   129d0:	bl	0 <_ZN4llvm4dbgsEv>
   129d4:	ldp	x9, x8, [x0, #16]
   129d8:	sub	x9, x9, x8
   129dc:	cmp	x9, #0x23
   129e0:	b.ls	12714 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x640>  // b.plast
   129e4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   129e8:	add	x9, x9, #0x0
   129ec:	ldp	q1, q0, [x9]
   129f0:	mov	w9, #0x6568                	// #25960
   129f4:	movk	w9, #0xa72, lsl #16
   129f8:	str	w9, [x8, #32]
   129fc:	stp	q1, q0, [x8]
   12a00:	ldr	x8, [x0, #24]
   12a04:	add	x8, x8, #0x24
   12a08:	b	12b1c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa48>
   12a0c:	mov	w23, w0
   12a10:	ldur	x0, [x29, #-40]
   12a14:	mov	x1, x22
   12a18:	mov	w2, w27
   12a1c:	ldr	x8, [x0]
   12a20:	ldr	x8, [x8, #80]
   12a24:	blr	x8
   12a28:	cbz	w0, 12a7c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9a8>
   12a2c:	cmp	w0, #0x4
   12a30:	b.ne	12a74 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9a0>  // b.any
   12a34:	ldrb	w8, [x24]
   12a38:	cbz	w8, 12724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x650>
   12a3c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12a40:	add	x0, x0, #0x0
   12a44:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12a48:	tbz	w0, #0, 12724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x650>
   12a4c:	bl	0 <_ZN4llvm4dbgsEv>
   12a50:	ldp	x9, x8, [x0, #16]
   12a54:	sub	x9, x9, x8
   12a58:	cmp	x9, #0x22
   12a5c:	b.hi	12af8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa24>  // b.pmore
   12a60:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12a64:	mov	w2, #0x23                  	// #35
   12a68:	add	x1, x1, #0x0
   12a6c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12a70:	b	12724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x650>
   12a74:	ldur	w8, [x29, #-44]
   12a78:	cbz	w8, 12d24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc50>
   12a7c:	cbnz	w23, 12cc4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbf0>
   12a80:	mov	w1, #0x1                   	// #1
   12a84:	mov	w0, w27
   12a88:	bl	14058 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   12a8c:	tbz	w0, #0, 12cc0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbec>
   12a90:	ldrb	w8, [x24]
   12a94:	cbz	w8, 12728 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x654>
   12a98:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12a9c:	add	x0, x0, #0x0
   12aa0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12aa4:	tbz	w0, #0, 12728 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x654>
   12aa8:	bl	0 <_ZN4llvm4dbgsEv>
   12aac:	ldp	x9, x8, [x0, #16]
   12ab0:	sub	x9, x9, x8
   12ab4:	cmp	x9, #0x19
   12ab8:	b.hi	12ad0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x9fc>  // b.pmore
   12abc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12ac0:	mov	w2, #0x1a                  	// #26
   12ac4:	add	x1, x1, #0x0
   12ac8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12acc:	b	12728 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x654>
   12ad0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12ad4:	add	x9, x9, #0x0
   12ad8:	ldur	q0, [x9, #10]
   12adc:	ldr	q1, [x9]
   12ae0:	stur	q0, [x8, #10]
   12ae4:	str	q1, [x8]
   12ae8:	ldr	x8, [x0, #24]
   12aec:	add	x8, x8, #0x1a
   12af0:	str	x8, [x0, #24]
   12af4:	b	12728 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x654>
   12af8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12afc:	add	x9, x9, #0x0
   12b00:	ldp	q1, q0, [x9]
   12b04:	mov	w9, #0x6568                	// #25960
   12b08:	movk	w9, #0xa72, lsl #16
   12b0c:	stur	w9, [x8, #31]
   12b10:	stp	q1, q0, [x8]
   12b14:	ldr	x8, [x0, #24]
   12b18:	add	x8, x8, #0x23
   12b1c:	str	x8, [x0, #24]
   12b20:	b	12724 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x650>
   12b24:	ldrb	w8, [x24]
   12b28:	cbz	w8, 12b60 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa8c>
   12b2c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12b30:	add	x0, x0, #0x0
   12b34:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12b38:	tbz	w0, #0, 12b60 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa8c>
   12b3c:	bl	0 <_ZN4llvm4dbgsEv>
   12b40:	ldp	x9, x8, [x0, #16]
   12b44:	sub	x9, x9, x8
   12b48:	cmp	x9, #0x21
   12b4c:	b.hi	12f24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xe50>  // b.pmore
   12b50:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12b54:	mov	w2, #0x22                  	// #34
   12b58:	add	x1, x1, #0x0
   12b5c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12b60:	cbz	w28, 12b74 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>
   12b64:	mov	w1, #0x1                   	// #1
   12b68:	mov	w0, w27
   12b6c:	bl	14058 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   12b70:	tbz	w0, #0, 12cb4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbe0>
   12b74:	ldur	w8, [x29, #-44]
   12b78:	cbz	w8, 12bf4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xb20>
   12b7c:	ldur	x10, [x29, #-40]
   12b80:	ldr	q0, [sp, #80]
   12b84:	ldur	x14, [x29, #-72]
   12b88:	ldrb	w13, [x24]
   12b8c:	ldp	x8, x9, [x10, #24]
   12b90:	ldr	x10, [x10, #40]
   12b94:	stur	q0, [x29, #-32]
   12b98:	ldp	x11, x12, [x29, #-32]
   12b9c:	ldr	x26, [sp, #72]
   12ba0:	bic	x21, x14, x10
   12ba4:	sub	x27, x29, #0x20
   12ba8:	bic	x25, x11, x8
   12bac:	bic	x22, x12, x9
   12bb0:	stp	x25, x22, [x29, #-32]
   12bb4:	stur	x21, [x29, #-16]
   12bb8:	cbz	w13, 12e94 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xdc0>
   12bbc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12bc0:	add	x0, x0, #0x0
   12bc4:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12bc8:	tbz	w0, #0, 12e94 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xdc0>
   12bcc:	bl	0 <_ZN4llvm4dbgsEv>
   12bd0:	ldp	x9, x8, [x0, #16]
   12bd4:	sub	x9, x9, x8
   12bd8:	cmp	x9, #0x17
   12bdc:	b.hi	12de0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd0c>  // b.pmore
   12be0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12be4:	mov	w2, #0x18                  	// #24
   12be8:	add	x1, x1, #0x0
   12bec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12bf0:	b	12e04 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd30>
   12bf4:	ldr	x21, [sp, #32]
   12bf8:	ldur	x0, [x29, #-40]
   12bfc:	mov	x2, x20
   12c00:	str	wzr, [x21, #24]
   12c04:	ldrh	w8, [x19, #2]
   12c08:	mov	x1, x21
   12c0c:	str	w8, [x21]
   12c10:	ldr	x8, [x0]
   12c14:	ldr	x8, [x8, #88]
   12c18:	blr	x8
   12c1c:	ldr	x26, [sp, #72]
   12c20:	cmp	w0, #0x4
   12c24:	str	w0, [sp, #44]
   12c28:	b.ne	12cdc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc08>  // b.any
   12c2c:	ldrh	w1, [x19, #4]
   12c30:	ldr	w8, [sp, #12]
   12c34:	tbnz	w8, #0, 1314c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1078>
   12c38:	ldr	x21, [sp, #32]
   12c3c:	ldrh	w2, [x19, #2]
   12c40:	mov	w0, w1
   12c44:	mov	x3, x20
   12c48:	mov	x1, x21
   12c4c:	bl	1bfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>
   12c50:	ldur	x0, [x29, #-40]
   12c54:	mov	x1, x21
   12c58:	ldr	x8, [x0]
   12c5c:	ldr	x8, [x8, #96]
   12c60:	blr	x8
   12c64:	cmp	w0, #0x4
   12c68:	str	w0, [sp, #44]
   12c6c:	b.eq	13188 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x10b4>  // b.none
   12c70:	ldrb	w8, [x24]
   12c74:	ldur	x28, [x29, #-64]
   12c78:	cbz	w8, 13070 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf9c>
   12c7c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12c80:	add	x0, x0, #0x0
   12c84:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12c88:	tbz	w0, #0, 13070 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf9c>
   12c8c:	bl	0 <_ZN4llvm4dbgsEv>
   12c90:	ldp	x9, x8, [x0, #16]
   12c94:	sub	x9, x9, x8
   12c98:	cmp	x9, #0x2c
   12c9c:	b.hi	1300c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf38>  // b.pmore
   12ca0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12ca4:	mov	w2, #0x2d                  	// #45
   12ca8:	add	x1, x1, #0x0
   12cac:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12cb0:	b	13030 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf5c>
   12cb4:	ldr	x8, [sp, #16]
   12cb8:	str	x25, [x8]
   12cbc:	b	12ccc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbf8>
   12cc0:	mov	w23, wzr
   12cc4:	ldr	x8, [sp, #48]
   12cc8:	tbz	w8, #0, 12d30 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc5c>
   12ccc:	ldr	x26, [sp, #72]
   12cd0:	ldrb	w8, [x24]
   12cd4:	cbnz	w8, 12d58 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc84>
   12cd8:	b	12f88 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xeb4>
   12cdc:	str	wzr, [x21, #24]
   12ce0:	ldrb	w8, [x24]
   12ce4:	cbz	w8, 12f50 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xe7c>
   12ce8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12cec:	add	x0, x0, #0x0
   12cf0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12cf4:	ldur	x28, [x29, #-64]
   12cf8:	tbz	w0, #0, 13078 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfa4>
   12cfc:	bl	0 <_ZN4llvm4dbgsEv>
   12d00:	ldp	x9, x8, [x0, #16]
   12d04:	sub	x9, x9, x8
   12d08:	cmp	x9, #0x32
   12d0c:	b.hi	12f90 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xebc>  // b.pmore
   12d10:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12d14:	mov	w2, #0x33                  	// #51
   12d18:	add	x1, x1, #0x0
   12d1c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12d20:	b	12fc0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xeec>
   12d24:	mov	w23, w0
   12d28:	ldr	x8, [sp, #48]
   12d2c:	tbnz	w8, #0, 12ccc <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xbf8>
   12d30:	ldr	x8, [sp]
   12d34:	ldr	x26, [sp, #72]
   12d38:	cmp	x19, x8
   12d3c:	b.eq	12d94 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xcc0>  // b.none
   12d40:	ldr	x8, [sp, #16]
   12d44:	ldr	x8, [x8]
   12d48:	cmp	x8, x25
   12d4c:	b.ls	12d94 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xcc0>  // b.plast
   12d50:	ldrb	w8, [x24]
   12d54:	cbz	w8, 12f88 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xeb4>
   12d58:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   12d5c:	add	x0, x0, #0x0
   12d60:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   12d64:	tbz	w0, #0, 12f88 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xeb4>
   12d68:	bl	0 <_ZN4llvm4dbgsEv>
   12d6c:	ldp	x9, x8, [x0, #16]
   12d70:	ldur	x28, [x29, #-64]
   12d74:	sub	x9, x9, x8
   12d78:	cmp	x9, #0x40
   12d7c:	b.hi	12db0 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xcdc>  // b.pmore
   12d80:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12d84:	mov	w2, #0x41                  	// #65
   12d88:	add	x1, x1, #0x0
   12d8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12d90:	b	1252c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   12d94:	ldur	w8, [x29, #-44]
   12d98:	cbz	w8, 12f60 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xe8c>
   12d9c:	ldr	x9, [sp, #16]
   12da0:	str	x25, [x9]
   12da4:	ldrb	w8, [x24]
   12da8:	cbnz	w8, 12d58 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc84>
   12dac:	b	12f88 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xeb4>
   12db0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12db4:	add	x9, x9, #0x0
   12db8:	ldp	q0, q1, [x9, #32]
   12dbc:	ldp	q2, q3, [x9]
   12dc0:	mov	w9, #0xa                   	// #10
   12dc4:	strb	w9, [x8, #64]
   12dc8:	stp	q0, q1, [x8, #32]
   12dcc:	stp	q2, q3, [x8]
   12dd0:	ldr	x8, [x0, #24]
   12dd4:	add	x8, x8, #0x41
   12dd8:	str	x8, [x0, #24]
   12ddc:	b	1252c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   12de0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   12de4:	add	x10, x10, #0x0
   12de8:	ldr	x9, [x10, #16]
   12dec:	ldr	q0, [x10]
   12df0:	str	x9, [x8, #16]
   12df4:	str	q0, [x8]
   12df8:	ldr	x8, [x0, #24]
   12dfc:	add	x8, x8, #0x18
   12e00:	str	x8, [x0, #24]
   12e04:	mov	x23, xzr
   12e08:	b	12e30 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd5c>
   12e0c:	add	x9, x8, #0x1
   12e10:	str	x9, [x0, #24]
   12e14:	mov	w9, #0x20                  	// #32
   12e18:	strb	w9, [x8]
   12e1c:	mov	x1, x23
   12e20:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   12e24:	add	x23, x23, #0x1
   12e28:	cmp	x23, #0xc0
   12e2c:	b.eq	12e5c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd88>  // b.none
   12e30:	ubfx	x8, x23, #6, #26
   12e34:	ldr	x8, [x27, x8, lsl #3]
   12e38:	lsr	x8, x8, x23
   12e3c:	tbz	w8, #0, 12e24 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd50>
   12e40:	bl	0 <_ZN4llvm4dbgsEv>
   12e44:	ldp	x9, x8, [x0, #16]
   12e48:	cmp	x8, x9
   12e4c:	b.cc	12e0c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd38>  // b.lo, b.ul, b.last
   12e50:	mov	w1, #0x20                  	// #32
   12e54:	bl	0 <_ZN4llvm11raw_ostream5writeEh>
   12e58:	b	12e1c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xd48>
   12e5c:	bl	0 <_ZN4llvm4dbgsEv>
   12e60:	ldp	x9, x8, [x0, #16]
   12e64:	cmp	x9, x8
   12e68:	b.ne	12e80 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xdac>  // b.any
   12e6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12e70:	mov	w2, #0x1                   	// #1
   12e74:	add	x1, x1, #0x0
   12e78:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12e7c:	b	12e94 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xdc0>
   12e80:	mov	w9, #0xa                   	// #10
   12e84:	strb	w9, [x8]
   12e88:	ldr	x8, [x0, #24]
   12e8c:	add	x8, x8, #0x1
   12e90:	str	x8, [x0, #24]
   12e94:	ldr	x8, [sp, #56]
   12e98:	fmov	d0, x25
   12e9c:	fmov	d1, x22
   12ea0:	cnt	v0.8b, v0.8b
   12ea4:	ldp	d3, d4, [x8]
   12ea8:	ldr	d5, [x8, #16]
   12eac:	cnt	v1.8b, v1.8b
   12eb0:	fmov	d2, x21
   12eb4:	cnt	v2.8b, v2.8b
   12eb8:	uaddlv	h0, v0.8b
   12ebc:	uaddlv	h1, v1.8b
   12ec0:	cnt	v3.8b, v3.8b
   12ec4:	cnt	v4.8b, v4.8b
   12ec8:	uaddlv	h2, v2.8b
   12ecc:	uaddlv	h3, v3.8b
   12ed0:	uaddlv	h4, v4.8b
   12ed4:	fmov	w8, s0
   12ed8:	fmov	w9, s1
   12edc:	cnt	v0.8b, v5.8b
   12ee0:	fmov	w10, s2
   12ee4:	fmov	w11, s3
   12ee8:	fmov	w12, s4
   12eec:	add	x8, x9, x8
   12ef0:	uaddlv	h0, v0.8b
   12ef4:	add	x8, x8, x10
   12ef8:	add	x9, x12, x11
   12efc:	fmov	w10, s0
   12f00:	add	x9, x9, x10
   12f04:	cmp	x8, x9
   12f08:	b.hi	12520 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x44c>  // b.pmore
   12f0c:	ldur	x8, [x29, #-16]
   12f10:	ldur	q0, [x29, #-32]
   12f14:	ldr	x9, [sp, #56]
   12f18:	str	x8, [x9, #16]
   12f1c:	str	q0, [x9]
   12f20:	b	12520 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x44c>
   12f24:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12f28:	add	x9, x9, #0x0
   12f2c:	ldp	q1, q0, [x9]
   12f30:	mov	w9, #0x2065                	// #8293
   12f34:	strh	w9, [x8, #32]
   12f38:	stp	q1, q0, [x8]
   12f3c:	ldr	x8, [x0, #24]
   12f40:	add	x8, x8, #0x22
   12f44:	str	x8, [x0, #24]
   12f48:	cbnz	w28, 12b64 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xa90>
   12f4c:	b	12b74 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xaa0>
   12f50:	ldur	x28, [x29, #-64]
   12f54:	mov	w8, #0x1                   	// #1
   12f58:	str	x8, [sp, #48]
   12f5c:	b	1252c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   12f60:	ldr	x9, [sp, #16]
   12f64:	ldr	x8, [x9]
   12f68:	str	x25, [x9]
   12f6c:	cmp	x8, x25
   12f70:	ldr	w8, [sp, #44]
   12f74:	ccmp	w23, #0x0, #0x0, eq  // eq = none
   12f78:	csel	w8, w23, w8, ne  // ne = any
   12f7c:	str	w8, [sp, #44]
   12f80:	ldrb	w8, [x24]
   12f84:	cbnz	w8, 12d58 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xc84>
   12f88:	ldur	x28, [x29, #-64]
   12f8c:	b	1252c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   12f90:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   12f94:	add	x9, x9, #0x0
   12f98:	ldp	q1, q0, [x9, #16]
   12f9c:	ldr	q2, [x9]
   12fa0:	mov	w9, #0x646f                	// #25711
   12fa4:	movk	w9, #0x2065, lsl #16
   12fa8:	stur	w9, [x8, #47]
   12fac:	stp	q1, q0, [x8, #16]
   12fb0:	str	q2, [x8]
   12fb4:	ldr	x8, [x0, #24]
   12fb8:	add	x8, x8, #0x33
   12fbc:	str	x8, [x0, #24]
   12fc0:	ldr	w8, [sp, #44]
   12fc4:	mov	w1, w8
   12fc8:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   12fcc:	ldp	x9, x8, [x0, #16]
   12fd0:	cmp	x9, x8
   12fd4:	b.ne	12ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf20>  // b.any
   12fd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   12fdc:	mov	w2, #0x1                   	// #1
   12fe0:	mov	w8, #0x1                   	// #1
   12fe4:	add	x1, x1, #0x0
   12fe8:	str	x8, [sp, #48]
   12fec:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   12ff0:	b	1252c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   12ff4:	mov	w9, #0xa                   	// #10
   12ff8:	strb	w9, [x8]
   12ffc:	ldr	x8, [x0, #24]
   13000:	add	x8, x8, #0x1
   13004:	str	x8, [x0, #24]
   13008:	b	13078 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xfa4>
   1300c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13010:	add	x9, x9, #0x0
   13014:	ldur	q0, [x9, #29]
   13018:	ldp	q2, q1, [x9]
   1301c:	stur	q0, [x8, #29]
   13020:	stp	q2, q1, [x8]
   13024:	ldr	x8, [x0, #24]
   13028:	add	x8, x8, #0x2d
   1302c:	str	x8, [x0, #24]
   13030:	ldr	w8, [sp, #44]
   13034:	mov	w1, w8
   13038:	bl	0 <_ZN4llvm11raw_ostreamlsEm>
   1303c:	ldp	x9, x8, [x0, #16]
   13040:	cmp	x9, x8
   13044:	b.ne	1305c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf88>  // b.any
   13048:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1304c:	mov	w2, #0x1                   	// #1
   13050:	add	x1, x1, #0x0
   13054:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   13058:	b	13070 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0xf9c>
   1305c:	mov	w9, #0xa                   	// #10
   13060:	strb	w9, [x8]
   13064:	ldr	x8, [x0, #24]
   13068:	add	x8, x8, #0x1
   1306c:	str	x8, [x0, #24]
   13070:	ldr	x8, [sp, #32]
   13074:	str	wzr, [x8, #24]
   13078:	mov	w8, #0x1                   	// #1
   1307c:	str	x8, [sp, #48]
   13080:	b	1252c <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x458>
   13084:	ldr	w8, [sp, #28]
   13088:	ldr	x9, [sp, #48]
   1308c:	ldr	w0, [sp, #44]
   13090:	orn	w8, w9, w8
   13094:	tbnz	w8, #0, 13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   13098:	ldr	x8, [sp, #16]
   1309c:	mov	w0, #0x2                   	// #2
   130a0:	str	xzr, [x8]
   130a4:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   130a8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   130ac:	add	x9, x9, #0x0
   130b0:	ldur	q0, [x9, #10]
   130b4:	ldr	q1, [x9]
   130b8:	stur	q0, [x8, #10]
   130bc:	str	q1, [x8]
   130c0:	ldr	x8, [x22, #24]
   130c4:	add	x0, x8, #0x1a
   130c8:	str	x0, [x22, #24]
   130cc:	ldr	x8, [x22, #16]
   130d0:	sub	x8, x8, x0
   130d4:	cmp	x8, x28
   130d8:	b.cs	124b8 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x3e4>  // b.hs, b.nlast
   130dc:	ldur	x1, [x29, #-56]
   130e0:	mov	x0, x22
   130e4:	mov	x2, x28
   130e8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   130ec:	mov	x22, x0
   130f0:	ldr	x0, [x0, #24]
   130f4:	ldr	x8, [x22, #16]
   130f8:	sub	x8, x8, x0
   130fc:	cmp	x8, #0x1
   13100:	b.ls	124e4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x410>  // b.plast
   13104:	mov	w8, #0xa27                 	// #2599
   13108:	strh	w8, [x0]
   1310c:	ldr	x8, [x22, #24]
   13110:	add	x8, x8, #0x2
   13114:	str	x8, [x22, #24]
   13118:	cmp	x19, x26
   1311c:	b.ne	12500 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x42c>  // b.any
   13120:	mov	w0, #0x3                   	// #3
   13124:	ldp	x20, x19, [sp, #256]
   13128:	ldp	x22, x21, [sp, #240]
   1312c:	ldp	x24, x23, [sp, #224]
   13130:	ldp	x26, x25, [sp, #208]
   13134:	ldp	x28, x27, [sp, #192]
   13138:	ldp	x29, x30, [sp, #176]
   1313c:	add	sp, sp, #0x110
   13140:	ret
   13144:	ldur	x28, [x29, #-64]
   13148:	b	12270 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x19c>
   1314c:	ldur	x21, [x29, #-40]
   13150:	mov	x2, x20
   13154:	ldr	x8, [x21]
   13158:	mov	x0, x21
   1315c:	ldr	x8, [x8, #104]
   13160:	blr	x8
   13164:	ldrh	w1, [x19, #4]
   13168:	ldr	x3, [sp, #16]
   1316c:	mov	x0, x21
   13170:	mov	x2, x20
   13174:	bl	1be78 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>
   13178:	tst	w0, #0x1
   1317c:	mov	w8, #0x4                   	// #4
   13180:	csinc	w0, w8, wzr, ne  // ne = any
   13184:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   13188:	ldrh	w1, [x19, #4]
   1318c:	ldur	x0, [x29, #-40]
   13190:	ldr	x3, [sp, #16]
   13194:	mov	x2, x20
   13198:	bl	1be78 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>
   1319c:	tbz	w0, #0, 131e4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1110>
   131a0:	ldrb	w8, [x24]
   131a4:	cbz	w8, 131ec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1118>
   131a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   131ac:	add	x0, x0, #0x0
   131b0:	bl	0 <_ZN4llvm18isCurrentDebugTypeEPKc>
   131b4:	tbz	w0, #0, 131ec <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1118>
   131b8:	bl	0 <_ZN4llvm4dbgsEv>
   131bc:	ldp	x9, x8, [x0, #16]
   131c0:	sub	x9, x9, x8
   131c4:	cmp	x9, #0x34
   131c8:	b.hi	131f4 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1120>  // b.pmore
   131cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   131d0:	add	x1, x1, #0x0
   131d4:	mov	w2, #0x35                  	// #53
   131d8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
   131dc:	mov	w0, #0x4                   	// #4
   131e0:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   131e4:	mov	w0, #0x1                   	// #1
   131e8:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   131ec:	mov	w0, #0x4                   	// #4
   131f0:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   131f4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   131f8:	add	x9, x9, #0x0
   131fc:	ldur	x10, [x9, #45]
   13200:	ldp	q1, q0, [x9, #16]
   13204:	ldr	q2, [x9]
   13208:	stur	x10, [x8, #45]
   1320c:	stp	q1, q0, [x8, #16]
   13210:	str	q2, [x8]
   13214:	ldr	x8, [x0, #24]
   13218:	add	x8, x8, #0x35
   1321c:	str	x8, [x0, #24]
   13220:	mov	w0, #0x4                   	// #4
   13224:	b	13124 <_ZN12_GLOBAL__N_116AArch64AsmParser20MatchInstructionImplERKN4llvm15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS4_EEEERNS1_6MCInstERmRNS1_13FeatureBitsetEbj+0x1050>
   13228:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1322c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13230:	add	x0, x0, #0x0
   13234:	add	x1, x1, #0x0
   13238:	mov	w2, #0x3015                	// #12309
   1323c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   13240:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13244:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13248:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1324c:	add	x0, x0, #0x0
   13250:	add	x1, x1, #0x0
   13254:	add	x3, x3, #0x0
   13258:	mov	w2, #0x6b8d                	// #27533
   1325c:	bl	0 <__assert_fail>
   13260:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13264:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13268:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1326c:	add	x0, x0, #0x0
   13270:	add	x1, x1, #0x0
   13274:	add	x3, x3, #0x0
   13278:	mov	w2, #0x99                  	// #153
   1327c:	bl	0 <__assert_fail>
   13280:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13284:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13288:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1328c:	add	x0, x0, #0x0
   13290:	add	x1, x1, #0x0
   13294:	add	x3, x3, #0x0
   13298:	mov	w2, #0x33                  	// #51
   1329c:	bl	0 <__assert_fail>
   132a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   132a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   132a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   132ac:	add	x0, x0, #0x0
   132b0:	add	x1, x1, #0x0
   132b4:	add	x3, x3, #0x0
   132b8:	mov	w2, #0x1ea                 	// #490
   132bc:	bl	0 <__assert_fail>
   132c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   132c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   132c8:	add	x0, x0, #0x0
   132cc:	add	x1, x1, #0x0
   132d0:	mov	w2, #0x6b76                	// #27510
   132d4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

00000000000132d8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>:
   132d8:	sub	sp, sp, #0x130
   132dc:	stp	x29, x30, [sp, #208]
   132e0:	stp	x28, x27, [sp, #224]
   132e4:	stp	x26, x25, [sp, #240]
   132e8:	stp	x24, x23, [sp, #256]
   132ec:	stp	x22, x21, [sp, #272]
   132f0:	stp	x20, x19, [sp, #288]
   132f4:	add	x29, sp, #0xd0
   132f8:	cmp	w2, #0x93
   132fc:	b.hi	13fb0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcd8>  // b.pmore
   13300:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13304:	mov	w8, w2
   13308:	add	x9, x9, #0x0
   1330c:	adr	x10, 13320 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x48>
   13310:	ldrh	w11, [x9, x8, lsl #1]
   13314:	add	x10, x10, x11, lsl #2
   13318:	mov	x20, x0
   1331c:	br	x10
   13320:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13324:	add	x8, x8, #0x0
   13328:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1332c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13330:	add	x8, x8, #0x0
   13334:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13338:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1333c:	add	x8, x8, #0x0
   13340:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13344:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13348:	add	x8, x8, #0x0
   1334c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13350:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13354:	add	x8, x8, #0x0
   13358:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1335c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13360:	add	x8, x8, #0x0
   13364:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13368:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1336c:	add	x8, x8, #0x0
   13370:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13374:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13378:	add	x8, x8, #0x0
   1337c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13380:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13384:	add	x8, x8, #0x0
   13388:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1338c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13390:	add	x8, x8, #0x0
   13394:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13398:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1339c:	add	x8, x8, #0x0
   133a0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133a4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133a8:	add	x8, x8, #0x0
   133ac:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133b0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133b4:	add	x8, x8, #0x0
   133b8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133bc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133c0:	add	x8, x8, #0x0
   133c4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133c8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133cc:	add	x8, x8, #0x0
   133d0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133d4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133d8:	add	x8, x8, #0x0
   133dc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133e0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133e4:	add	x8, x8, #0x0
   133e8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133ec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133f0:	add	x8, x8, #0x0
   133f4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   133f8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   133fc:	add	x8, x8, #0x0
   13400:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13404:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13408:	add	x8, x8, #0x0
   1340c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13410:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13414:	add	x8, x8, #0x0
   13418:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1341c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13420:	add	x8, x8, #0x0
   13424:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13428:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1342c:	add	x8, x8, #0x0
   13430:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13434:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13438:	add	x8, x8, #0x0
   1343c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13440:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13444:	add	x8, x8, #0x0
   13448:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1344c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13450:	add	x8, x8, #0x0
   13454:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13458:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1345c:	add	x8, x8, #0x0
   13460:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13464:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13468:	add	x8, x8, #0x0
   1346c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13470:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13474:	add	x8, x8, #0x0
   13478:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1347c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13480:	add	x8, x8, #0x0
   13484:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13488:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1348c:	add	x8, x8, #0x0
   13490:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13494:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13498:	add	x8, x8, #0x0
   1349c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134a0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134a4:	add	x8, x8, #0x0
   134a8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134ac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134b0:	add	x8, x8, #0x0
   134b4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134b8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134bc:	add	x8, x8, #0x0
   134c0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134c4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134c8:	add	x8, x8, #0x0
   134cc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134d0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134d4:	add	x8, x8, #0x0
   134d8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134dc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134e0:	add	x8, x8, #0x0
   134e4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134e8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134ec:	add	x8, x8, #0x0
   134f0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   134f4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   134f8:	add	x8, x8, #0x0
   134fc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13500:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13504:	add	x8, x8, #0x0
   13508:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1350c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13510:	add	x8, x8, #0x0
   13514:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13518:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1351c:	add	x8, x8, #0x0
   13520:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13524:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13528:	add	x8, x8, #0x0
   1352c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13530:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13534:	add	x8, x8, #0x0
   13538:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1353c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13540:	add	x8, x8, #0x0
   13544:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13548:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1354c:	add	x8, x8, #0x0
   13550:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13554:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13558:	add	x8, x8, #0x0
   1355c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13560:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13564:	add	x8, x8, #0x0
   13568:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1356c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13570:	add	x8, x8, #0x0
   13574:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13578:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1357c:	add	x8, x8, #0x0
   13580:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13584:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13588:	add	x8, x8, #0x0
   1358c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13590:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13594:	add	x8, x8, #0x0
   13598:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1359c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135a0:	add	x8, x8, #0x0
   135a4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135a8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135ac:	add	x8, x8, #0x0
   135b0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135b4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135b8:	add	x8, x8, #0x0
   135bc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135c0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135c4:	add	x8, x8, #0x0
   135c8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135cc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135d0:	add	x8, x8, #0x0
   135d4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135d8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135dc:	add	x8, x8, #0x0
   135e0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135e4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135e8:	add	x8, x8, #0x0
   135ec:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135f0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   135f4:	add	x8, x8, #0x0
   135f8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   135fc:	ldr	w8, [x4, #8]
   13600:	cmp	x8, x3
   13604:	b.ls	13fd4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcfc>  // b.plast
   13608:	ldr	x8, [x4]
   1360c:	ldr	x8, [x8, x3, lsl #3]
   13610:	ldr	w9, [x8, #48]
   13614:	cmp	w9, #0x3
   13618:	b.ne	14000 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd28>  // b.any
   1361c:	ldr	w8, [x8, #84]
   13620:	cbz	w8, 13d20 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa48>
   13624:	cmp	w8, #0x1
   13628:	b.eq	13d14 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa3c>  // b.none
   1362c:	cmp	w8, #0x2
   13630:	b.ne	14020 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd48>  // b.any
   13634:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13638:	add	x8, x8, #0x0
   1363c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13640:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13644:	add	x8, x8, #0x0
   13648:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   1364c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13650:	add	x8, x8, #0x0
   13654:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13658:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   1365c:	add	x8, x8, #0x0
   13660:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13664:	ldr	w8, [x4, #8]
   13668:	cbz	w8, 13fd4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcfc>
   1366c:	ldr	x8, [x4]
   13670:	str	x1, [sp, #8]
   13674:	ldr	x8, [x8]
   13678:	ldr	w9, [x8, #48]
   1367c:	cmp	w9, #0x6
   13680:	b.ne	14038 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd60>  // b.any
   13684:	ldr	x9, [x20, #160]
   13688:	ldr	x22, [x8, #72]
   1368c:	ldr	w23, [x8, #80]
   13690:	add	x0, sp, #0x18
   13694:	ldp	x1, x2, [x9, #184]
   13698:	ldr	x3, [x9, #200]
   1369c:	bl	208 <_ZNK12_GLOBAL__N_116AArch64AsmParser24ComputeAvailableFeaturesERKN4llvm13FeatureBitsetE>
   136a0:	stp	x22, x23, [x29, #-24]
   136a4:	adrp	x19, 0 <LLVMInitializeAArch64AsmParser>
   136a8:	adrp	x26, 0 <LLVMInitializeAArch64AsmParser>
   136ac:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   136b0:	adrp	x28, 0 <LLVMInitializeAArch64AsmParser>
   136b4:	mov	x24, xzr
   136b8:	mov	x21, xzr
   136bc:	mov	x25, xzr
   136c0:	add	x19, x19, #0x0
   136c4:	add	x26, x26, #0x0
   136c8:	mov	w14, #0x18                  	// #24
   136cc:	add	x23, x23, #0x0
   136d0:	add	x28, x28, #0x0
   136d4:	str	xzr, [sp, #16]
   136d8:	b	136f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x418>
   136dc:	mov	x22, x25
   136e0:	add	x26, x26, #0x1c
   136e4:	cmp	x26, x28
   136e8:	mov	x25, x22
   136ec:	b.cs	1388c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x5b4>  // b.hs, b.nlast
   136f0:	ldrb	w8, [x26, #6]
   136f4:	ldur	q0, [sp, #24]
   136f8:	ldr	x9, [sp, #40]
   136fc:	madd	x8, x8, x14, x23
   13700:	stur	q0, [x29, #-64]
   13704:	ldr	q0, [x8]
   13708:	ldur	q1, [x29, #-64]
   1370c:	ldp	x10, x11, [x8]
   13710:	ldr	x8, [x8, #16]
   13714:	and	v0.16b, v1.16b, v0.16b
   13718:	stur	q0, [x29, #-64]
   1371c:	ldp	x12, x13, [x29, #-64]
   13720:	bic	x8, x8, x9
   13724:	eor	x10, x12, x10
   13728:	eor	x11, x13, x11
   1372c:	orr	x9, x10, x11
   13730:	orr	x8, x9, x8
   13734:	cbnz	x8, 136dc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x404>
   13738:	ldrh	w8, [x26]
   1373c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   13740:	add	x9, x9, #0x0
   13744:	mov	x27, x24
   13748:	add	x24, x9, x8
   1374c:	ldrb	w22, [x24], #1
   13750:	cmp	x25, x22
   13754:	b.ne	13770 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x498>  // b.any
   13758:	cbz	x25, 137b0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4d8>
   1375c:	mov	x0, x24
   13760:	mov	x1, x19
   13764:	mov	x2, x25
   13768:	bl	0 <bcmp>
   1376c:	cbz	w0, 13810 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x538>
   13770:	sub	x0, x29, #0x18
   13774:	mov	w4, #0x2                   	// #2
   13778:	mov	x1, x24
   1377c:	mov	x2, x22
   13780:	mov	w3, wzr
   13784:	bl	0 <_ZNK4llvm9StringRef13edit_distanceES0_bj>
   13788:	cmp	w0, #0x2
   1378c:	b.hi	137a4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4cc>  // b.pmore
   13790:	ldr	x8, [sp, #16]
   13794:	cmp	x21, x8
   13798:	b.eq	137bc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x4e4>  // b.none
   1379c:	stp	x24, x22, [x8], #16
   137a0:	str	x8, [sp, #16]
   137a4:	mov	x19, x24
   137a8:	mov	x24, x27
   137ac:	b	13878 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x5a0>
   137b0:	mov	x22, xzr
   137b4:	mov	x24, x27
   137b8:	b	13878 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x5a0>
   137bc:	sub	x8, x8, x27
   137c0:	mov	x9, #0x7ffffffffffffff0    	// #9223372036854775792
   137c4:	cmp	x8, x9
   137c8:	b.eq	13ff4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xd1c>  // b.none
   137cc:	asr	x25, x8, #4
   137d0:	cmp	x8, #0x0
   137d4:	csinc	x8, x25, xzr, ne  // ne = any
   137d8:	adds	x8, x8, x25
   137dc:	lsr	x10, x8, #59
   137e0:	cset	w9, cs  // cs = hs, nlast
   137e4:	cmp	x10, #0x0
   137e8:	cset	w10, ne  // ne = any
   137ec:	orr	w9, w9, w10
   137f0:	cmp	w9, #0x0
   137f4:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
   137f8:	csel	x19, x9, x8, ne  // ne = any
   137fc:	cbz	x19, 1381c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x544>
   13800:	lsl	x0, x19, #4
   13804:	bl	0 <_Znwm>
   13808:	mov	x10, x0
   1380c:	b	13820 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x548>
   13810:	mov	x22, x25
   13814:	mov	x24, x27
   13818:	b	13878 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x5a0>
   1381c:	mov	x10, xzr
   13820:	add	x8, x10, x25, lsl #4
   13824:	cmp	x21, x27
   13828:	stp	x24, x22, [x8]
   1382c:	mov	x8, x10
   13830:	b.eq	13850 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x578>  // b.none
   13834:	mov	x8, x10
   13838:	mov	x9, x27
   1383c:	ldr	q0, [x9], #16
   13840:	cmp	x21, x9
   13844:	str	q0, [x8]
   13848:	add	x8, x8, #0x10
   1384c:	b.ne	1383c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x564>  // b.any
   13850:	add	x8, x8, #0x10
   13854:	str	x8, [sp, #16]
   13858:	cbz	x27, 1386c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x594>
   1385c:	mov	x0, x27
   13860:	mov	x21, x10
   13864:	bl	0 <_ZdlPv>
   13868:	mov	x10, x21
   1386c:	add	x21, x10, x19, lsl #4
   13870:	mov	x19, x24
   13874:	mov	x24, x10
   13878:	mov	w14, #0x18                  	// #24
   1387c:	add	x26, x26, #0x1c
   13880:	cmp	x26, x28
   13884:	mov	x25, x22
   13888:	b.cc	136f0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x418>  // b.lo, b.ul, b.last
   1388c:	ldr	x10, [sp, #16]
   13890:	cmp	x24, x10
   13894:	b.eq	13cf8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa20>  // b.none
   13898:	sub	x8, x29, #0x40
   1389c:	mov	w9, #0x10                  	// #16
   138a0:	add	x25, x8, #0x10
   138a4:	sub	x0, x29, #0x40
   138a8:	sub	x1, x29, #0x60
   138ac:	mov	x2, xzr
   138b0:	stur	x25, [x29, #-64]
   138b4:	stur	x9, [x29, #-96]
   138b8:	sub	x22, x29, #0x60
   138bc:	mov	x21, x10
   138c0:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   138c4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   138c8:	add	x9, x9, #0x0
   138cc:	ldur	x8, [x29, #-96]
   138d0:	ldr	q0, [x9]
   138d4:	stur	x0, [x29, #-64]
   138d8:	sub	x10, x21, x24
   138dc:	stur	x8, [x29, #-48]
   138e0:	str	q0, [x0]
   138e4:	ldur	x9, [x29, #-64]
   138e8:	asr	x10, x10, #4
   138ec:	subs	x26, x10, #0x1
   138f0:	stur	x8, [x29, #-56]
   138f4:	strb	wzr, [x9, x8]
   138f8:	b.eq	13d70 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa98>  // b.none
   138fc:	add	x8, sp, #0x50
   13900:	add	x27, x22, #0x10
   13904:	adrp	x22, 0 <LLVMInitializeAArch64AsmParser>
   13908:	mov	x21, xzr
   1390c:	add	x22, x22, #0x0
   13910:	add	x28, x8, #0x10
   13914:	str	x25, [sp, #16]
   13918:	b	13928 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x650>
   1391c:	add	w21, w21, #0x1
   13920:	cmp	x26, x21
   13924:	b.ls	13cf0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa18>  // b.plast
   13928:	lsl	x8, x21, #4
   1392c:	ldr	x23, [x24, x8]
   13930:	cbz	x23, 13988 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x6b0>
   13934:	add	x8, x24, x21, lsl #4
   13938:	mov	x25, x24
   1393c:	ldr	x24, [x8, #8]
   13940:	mov	x0, x28
   13944:	str	x28, [sp, #80]
   13948:	cmp	x24, #0x10
   1394c:	str	x24, [sp, #48]
   13950:	b.cc	13970 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x698>  // b.lo, b.ul, b.last
   13954:	add	x0, sp, #0x50
   13958:	add	x1, sp, #0x30
   1395c:	mov	x2, xzr
   13960:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   13964:	ldr	x8, [sp, #48]
   13968:	str	x0, [sp, #80]
   1396c:	str	x8, [sp, #96]
   13970:	cbz	x24, 139a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x6c8>
   13974:	cmp	x24, #0x1
   13978:	b.ne	13994 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x6bc>  // b.any
   1397c:	ldrb	w8, [x23]
   13980:	strb	w8, [x0]
   13984:	b	139a0 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x6c8>
   13988:	stp	x28, xzr, [sp, #80]
   1398c:	strb	wzr, [sp, #96]
   13990:	b	139c8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x6f0>
   13994:	mov	x1, x23
   13998:	mov	x2, x24
   1399c:	bl	0 <memcpy>
   139a0:	ldr	x8, [sp, #48]
   139a4:	ldr	x9, [sp, #80]
   139a8:	mov	x24, x25
   139ac:	str	x8, [sp, #88]
   139b0:	strb	wzr, [x9, x8]
   139b4:	ldr	x8, [sp, #88]
   139b8:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   139bc:	orr	x8, x8, #0x1
   139c0:	cmp	x8, x9
   139c4:	b.eq	13fc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcf0>  // b.none
   139c8:	add	x0, sp, #0x50
   139cc:	mov	w2, #0x2                   	// #2
   139d0:	mov	x1, x22
   139d4:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   139d8:	stur	x27, [x29, #-96]
   139dc:	mov	x8, x0
   139e0:	ldr	x9, [x8], #16
   139e4:	cmp	x9, x8
   139e8:	b.eq	139fc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x724>  // b.none
   139ec:	stur	x9, [x29, #-96]
   139f0:	ldr	x9, [x0, #16]
   139f4:	stur	x9, [x29, #-80]
   139f8:	b	13a04 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x72c>
   139fc:	ldr	q0, [x9]
   13a00:	str	q0, [x27]
   13a04:	ldr	x9, [x0, #8]
   13a08:	stur	x9, [x29, #-88]
   13a0c:	stp	x8, xzr, [x0]
   13a10:	strb	wzr, [x0, #16]
   13a14:	ldp	x1, x2, [x29, #-96]
   13a18:	sub	x0, x29, #0x40
   13a1c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   13a20:	ldur	x0, [x29, #-96]
   13a24:	cmp	x0, x27
   13a28:	b.eq	13a30 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x758>  // b.none
   13a2c:	bl	0 <_ZdlPv>
   13a30:	ldr	x0, [sp, #80]
   13a34:	cmp	x0, x28
   13a38:	b.eq	1391c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x644>  // b.none
   13a3c:	bl	0 <_ZdlPv>
   13a40:	b	1391c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0x644>
   13a44:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a48:	add	x8, x8, #0x0
   13a4c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a50:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a54:	add	x8, x8, #0x0
   13a58:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a5c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a60:	add	x8, x8, #0x0
   13a64:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a68:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a6c:	add	x8, x8, #0x0
   13a70:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a74:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a78:	add	x8, x8, #0x0
   13a7c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a80:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a84:	add	x8, x8, #0x0
   13a88:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a8c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a90:	add	x8, x8, #0x0
   13a94:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13a98:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13a9c:	add	x8, x8, #0x0
   13aa0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13aa4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13aa8:	add	x8, x8, #0x0
   13aac:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ab0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ab4:	add	x8, x8, #0x0
   13ab8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13abc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ac0:	add	x8, x8, #0x0
   13ac4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ac8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13acc:	add	x8, x8, #0x0
   13ad0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ad4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ad8:	add	x8, x8, #0x0
   13adc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ae0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ae4:	add	x8, x8, #0x0
   13ae8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13aec:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13af0:	add	x8, x8, #0x0
   13af4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13af8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13afc:	add	x8, x8, #0x0
   13b00:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b04:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b08:	add	x8, x8, #0x0
   13b0c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b10:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b14:	add	x8, x8, #0x0
   13b18:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b1c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b20:	add	x8, x8, #0x0
   13b24:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b28:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b2c:	add	x8, x8, #0x0
   13b30:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b34:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b38:	add	x8, x8, #0x0
   13b3c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b40:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b44:	add	x8, x8, #0x0
   13b48:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b4c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b50:	add	x8, x8, #0x0
   13b54:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b58:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b5c:	add	x8, x8, #0x0
   13b60:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b64:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b68:	add	x8, x8, #0x0
   13b6c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b70:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b74:	add	x8, x8, #0x0
   13b78:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b7c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b80:	add	x8, x8, #0x0
   13b84:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b88:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b8c:	add	x8, x8, #0x0
   13b90:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13b94:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13b98:	add	x8, x8, #0x0
   13b9c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ba0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ba4:	add	x8, x8, #0x0
   13ba8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13bac:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13bb0:	add	x8, x8, #0x0
   13bb4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13bb8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13bbc:	add	x8, x8, #0x0
   13bc0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13bc4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13bc8:	add	x8, x8, #0x0
   13bcc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13bd0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13bd4:	add	x8, x8, #0x0
   13bd8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13bdc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13be0:	add	x8, x8, #0x0
   13be4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13be8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13bec:	add	x8, x8, #0x0
   13bf0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13bf4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13bf8:	add	x8, x8, #0x0
   13bfc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c00:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c04:	add	x8, x8, #0x0
   13c08:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c0c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c10:	add	x8, x8, #0x0
   13c14:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c18:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c1c:	add	x8, x8, #0x0
   13c20:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c24:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c28:	add	x8, x8, #0x0
   13c2c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c30:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c34:	add	x8, x8, #0x0
   13c38:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c3c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c40:	add	x8, x8, #0x0
   13c44:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c48:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c4c:	add	x8, x8, #0x0
   13c50:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c54:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c58:	add	x8, x8, #0x0
   13c5c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c60:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c64:	add	x8, x8, #0x0
   13c68:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c6c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c70:	add	x8, x8, #0x0
   13c74:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c78:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c7c:	add	x8, x8, #0x0
   13c80:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c84:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c88:	add	x8, x8, #0x0
   13c8c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c90:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13c94:	add	x8, x8, #0x0
   13c98:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13c9c:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ca0:	add	x8, x8, #0x0
   13ca4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ca8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13cac:	add	x8, x8, #0x0
   13cb0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13cb4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13cb8:	add	x8, x8, #0x0
   13cbc:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13cc0:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13cc4:	add	x8, x8, #0x0
   13cc8:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ccc:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13cd0:	add	x8, x8, #0x0
   13cd4:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13cd8:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13cdc:	add	x8, x8, #0x0
   13ce0:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13ce4:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13ce8:	add	x8, x8, #0x0
   13cec:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13cf0:	ldr	x25, [sp, #16]
   13cf4:	b	13d74 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa9c>
   13cf8:	add	x8, sp, #0x30
   13cfc:	add	x8, x8, #0x10
   13d00:	stp	x8, xzr, [sp, #48]
   13d04:	strb	wzr, [sp, #64]
   13d08:	cbnz	x24, 13efc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc24>
   13d0c:	mov	w1, #0x21                  	// #33
   13d10:	b	13f0c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc34>
   13d14:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13d18:	add	x8, x8, #0x0
   13d1c:	b	13d28 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa50>
   13d20:	adrp	x8, 0 <LLVMInitializeAArch64AsmParser>
   13d24:	add	x8, x8, #0x0
   13d28:	mov	w9, #0x103                 	// #259
   13d2c:	stp	x8, xzr, [x29, #-64]
   13d30:	sturh	w9, [x29, #-48]
   13d34:	ldr	x0, [x20, #8]
   13d38:	sub	x2, x29, #0x40
   13d3c:	mov	x3, xzr
   13d40:	mov	x4, xzr
   13d44:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   13d48:	mov	w19, w0
   13d4c:	and	w0, w19, #0x1
   13d50:	ldp	x20, x19, [sp, #288]
   13d54:	ldp	x22, x21, [sp, #272]
   13d58:	ldp	x24, x23, [sp, #256]
   13d5c:	ldp	x26, x25, [sp, #240]
   13d60:	ldp	x28, x27, [sp, #224]
   13d64:	ldp	x29, x30, [sp, #208]
   13d68:	add	sp, sp, #0x130
   13d6c:	ret
   13d70:	mov	x21, xzr
   13d74:	lsl	x8, x21, #4
   13d78:	ldr	x22, [x24, x8]
   13d7c:	cbz	x22, 13dd4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xafc>
   13d80:	add	x8, x24, x21, lsl #4
   13d84:	ldr	x23, [x8, #8]
   13d88:	add	x8, sp, #0x50
   13d8c:	add	x0, x8, #0x10
   13d90:	str	x0, [sp, #80]
   13d94:	cmp	x23, #0x10
   13d98:	stur	x23, [x29, #-96]
   13d9c:	b.cc	13dbc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xae4>  // b.lo, b.ul, b.last
   13da0:	add	x0, sp, #0x50
   13da4:	sub	x1, x29, #0x60
   13da8:	mov	x2, xzr
   13dac:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
   13db0:	ldur	x8, [x29, #-96]
   13db4:	str	x0, [sp, #80]
   13db8:	str	x8, [sp, #96]
   13dbc:	cbz	x23, 13df4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb1c>
   13dc0:	cmp	x23, #0x1
   13dc4:	b.ne	13de8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb10>  // b.any
   13dc8:	ldrb	w8, [x22]
   13dcc:	strb	w8, [x0]
   13dd0:	b	13df4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb1c>
   13dd4:	add	x8, sp, #0x50
   13dd8:	add	x8, x8, #0x10
   13ddc:	stp	x8, xzr, [sp, #80]
   13de0:	strb	wzr, [sp, #96]
   13de4:	b	13e04 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb2c>
   13de8:	mov	x1, x22
   13dec:	mov	x2, x23
   13df0:	bl	0 <memcpy>
   13df4:	ldur	x8, [x29, #-96]
   13df8:	ldr	x9, [sp, #80]
   13dfc:	str	x8, [sp, #88]
   13e00:	strb	wzr, [x9, x8]
   13e04:	ldp	x3, x4, [x29, #-64]
   13e08:	add	x0, sp, #0x50
   13e0c:	mov	x1, xzr
   13e10:	mov	x2, xzr
   13e14:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm>
   13e18:	sub	x8, x29, #0x60
   13e1c:	add	x21, x8, #0x10
   13e20:	stur	x21, [x29, #-96]
   13e24:	mov	x8, x0
   13e28:	ldr	x9, [x8], #16
   13e2c:	cmp	x9, x8
   13e30:	b.eq	13e44 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb6c>  // b.none
   13e34:	stur	x9, [x29, #-96]
   13e38:	ldr	x9, [x0, #16]
   13e3c:	stur	x9, [x29, #-80]
   13e40:	b	13e4c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xb74>
   13e44:	ldr	q0, [x9]
   13e48:	str	q0, [x21]
   13e4c:	ldr	x9, [x0, #8]
   13e50:	stur	x9, [x29, #-88]
   13e54:	stp	x8, xzr, [x0]
   13e58:	strb	wzr, [x0, #16]
   13e5c:	ldur	x8, [x29, #-88]
   13e60:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   13e64:	cmp	x8, x9
   13e68:	b.eq	13fc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcf0>  // b.none
   13e6c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13e70:	add	x1, x1, #0x0
   13e74:	sub	x0, x29, #0x60
   13e78:	mov	w2, #0x1                   	// #1
   13e7c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   13e80:	add	x8, sp, #0x30
   13e84:	add	x9, x8, #0x10
   13e88:	str	x9, [sp, #48]
   13e8c:	mov	x8, x0
   13e90:	ldr	x10, [x8], #16
   13e94:	cmp	x10, x8
   13e98:	b.eq	13eac <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xbd4>  // b.none
   13e9c:	str	x10, [sp, #48]
   13ea0:	ldr	x9, [x0, #16]
   13ea4:	str	x9, [sp, #64]
   13ea8:	b	13eb4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xbdc>
   13eac:	ldr	q0, [x10]
   13eb0:	str	q0, [x9]
   13eb4:	ldr	x9, [x0, #8]
   13eb8:	str	x9, [sp, #56]
   13ebc:	stp	x8, xzr, [x0]
   13ec0:	strb	wzr, [x0, #16]
   13ec4:	ldur	x0, [x29, #-96]
   13ec8:	cmp	x0, x21
   13ecc:	b.eq	13ed4 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xbfc>  // b.none
   13ed0:	bl	0 <_ZdlPv>
   13ed4:	ldr	x0, [sp, #80]
   13ed8:	add	x8, sp, #0x50
   13edc:	add	x8, x8, #0x10
   13ee0:	cmp	x0, x8
   13ee4:	b.eq	13eec <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc14>  // b.none
   13ee8:	bl	0 <_ZdlPv>
   13eec:	ldur	x0, [x29, #-64]
   13ef0:	cmp	x0, x25
   13ef4:	b.eq	13efc <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xc24>  // b.none
   13ef8:	bl	0 <_ZdlPv>
   13efc:	mov	x0, x24
   13f00:	bl	0 <_ZdlPv>
   13f04:	ldr	x8, [sp, #56]
   13f08:	add	x1, x8, #0x21
   13f0c:	sub	x22, x29, #0x40
   13f10:	add	x21, x22, #0x10
   13f14:	sub	x0, x29, #0x40
   13f18:	stp	x21, xzr, [x29, #-64]
   13f1c:	sturb	wzr, [x29, #-48]
   13f20:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm>
   13f24:	ldur	x8, [x29, #-56]
   13f28:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
   13f2c:	sub	x8, x9, x8
   13f30:	cmp	x8, #0x20
   13f34:	b.ls	13fc8 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcf0>  // b.plast
   13f38:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13f3c:	add	x1, x1, #0x0
   13f40:	sub	x0, x29, #0x40
   13f44:	mov	w2, #0x21                  	// #33
   13f48:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   13f4c:	ldp	x1, x2, [sp, #48]
   13f50:	sub	x0, x29, #0x40
   13f54:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm>
   13f58:	mov	w8, #0x104                 	// #260
   13f5c:	sturh	w8, [x29, #-80]
   13f60:	stp	x22, xzr, [x29, #-96]
   13f64:	ldr	x0, [x20, #8]
   13f68:	ldr	x1, [sp, #8]
   13f6c:	sub	x2, x29, #0x60
   13f70:	mov	x3, xzr
   13f74:	mov	x4, xzr
   13f78:	bl	0 <_ZN4llvm11MCAsmParser5ErrorENS_5SMLocERKNS_5TwineENS_7SMRangeE>
   13f7c:	ldur	x8, [x29, #-64]
   13f80:	mov	w19, w0
   13f84:	cmp	x8, x21
   13f88:	b.eq	13f94 <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xcbc>  // b.none
   13f8c:	mov	x0, x8
   13f90:	bl	0 <_ZdlPv>
   13f94:	ldr	x0, [sp, #48]
   13f98:	add	x8, sp, #0x30
   13f9c:	add	x8, x8, #0x10
   13fa0:	cmp	x0, x8
   13fa4:	b.eq	13d4c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa74>  // b.none
   13fa8:	bl	0 <_ZdlPv>
   13fac:	b	13d4c <_ZN12_GLOBAL__N_116AArch64AsmParser14showMatchErrorEN4llvm5SMLocEjmRNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS5_EEEE+0xa74>
   13fb0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13fb4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13fb8:	add	x0, x0, #0x0
   13fbc:	add	x1, x1, #0x0
   13fc0:	mov	w2, #0x1189                	// #4489
   13fc4:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   13fc8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13fcc:	add	x0, x0, #0x0
   13fd0:	bl	0 <_ZSt20__throw_length_errorPKc>
   13fd4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13fd8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   13fdc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   13fe0:	add	x0, x0, #0x0
   13fe4:	add	x1, x1, #0x0
   13fe8:	add	x3, x3, #0x0
   13fec:	mov	w2, #0x95                  	// #149
   13ff0:	bl	0 <__assert_fail>
   13ff4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   13ff8:	add	x0, x0, #0x0
   13ffc:	bl	0 <_ZSt20__throw_length_errorPKc>
   14000:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   14004:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   14008:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1400c:	add	x0, x0, #0x0
   14010:	add	x1, x1, #0x0
   14014:	add	x3, x3, #0x0
   14018:	mov	w2, #0x221                 	// #545
   1401c:	bl	0 <__assert_fail>
   14020:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   14024:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   14028:	add	x0, x0, #0x0
   1402c:	add	x1, x1, #0x0
   14030:	mov	w2, #0x105d                	// #4189
   14034:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   14038:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1403c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   14040:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   14044:	add	x0, x0, #0x0
   14048:	add	x1, x1, #0x0
   1404c:	add	x3, x3, #0x0
   14050:	mov	w2, #0x1ea                 	// #490
   14054:	bl	0 <__assert_fail>

0000000000014058 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>:
   14058:	cmp	w0, w1
   1405c:	b.ne	14068 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x10>  // b.any
   14060:	mov	w0, #0x1                   	// #1
   14064:	ret
   14068:	sub	w8, w0, #0x2
   1406c:	cmp	w8, #0x11d
   14070:	mov	w0, wzr
   14074:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   14078:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1407c:	add	x9, x9, #0x0
   14080:	adr	x10, 14090 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x38>
   14084:	ldrh	w11, [x9, x8, lsl #1]
   14088:	add	x10, x10, x11, lsl #2
   1408c:	br	x10
   14090:	cmp	w1, #0x120
   14094:	cset	w0, eq  // eq = none
   14098:	ret
   1409c:	cmp	w1, #0xac
   140a0:	cset	w0, eq  // eq = none
   140a4:	ret
   140a8:	cmp	w1, #0xa8
   140ac:	cset	w0, eq  // eq = none
   140b0:	ret
   140b4:	cmp	w1, #0xab
   140b8:	cset	w0, eq  // eq = none
   140bc:	ret
   140c0:	cmp	w1, #0xa7
   140c4:	cset	w0, eq  // eq = none
   140c8:	ret
   140cc:	cmp	w1, #0xaa
   140d0:	cset	w0, eq  // eq = none
   140d4:	ret
   140d8:	cmp	w1, #0xad
   140dc:	cset	w0, eq  // eq = none
   140e0:	ret
   140e4:	cmp	w1, #0xae
   140e8:	cset	w0, eq  // eq = none
   140ec:	ret
   140f0:	cmp	w1, #0xba
   140f4:	cset	w0, eq  // eq = none
   140f8:	ret
   140fc:	cmp	w1, #0x92
   14100:	cset	w0, eq  // eq = none
   14104:	ret
   14108:	cmp	w1, #0xa6
   1410c:	cset	w0, eq  // eq = none
   14110:	ret
   14114:	sub	w8, w1, #0x55
   14118:	cmp	w8, #0x56
   1411c:	mov	w0, wzr
   14120:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   14124:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14128:	add	x9, x9, #0x0
   1412c:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14130:	ldrb	w11, [x9, x8]
   14134:	add	x10, x10, x11, lsl #2
   14138:	br	x10
   1413c:	cmp	w1, #0xab
   14140:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14144:	cmp	w1, #0x7d
   14148:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1414c:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   14150:	cmp	w1, #0xac
   14154:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14158:	cmp	w1, #0x80
   1415c:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14160:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   14164:	sub	w8, w1, #0x70
   14168:	cmp	w8, #0x3d
   1416c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14170:	mov	x9, #0x1                   	// #1
   14174:	movk	x9, #0x3, lsl #16
   14178:	movk	x9, #0x1000, lsl #48
   1417c:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14180:	sub	w8, w1, #0x65
   14184:	cmp	w8, #0x47
   14188:	mov	w0, wzr
   1418c:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   14190:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14194:	add	x9, x9, #0x0
   14198:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   1419c:	ldrb	w11, [x9, x8]
   141a0:	add	x10, x10, x11, lsl #2
   141a4:	br	x10
   141a8:	cmp	w1, #0xaa
   141ac:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   141b0:	cmp	w1, #0x84
   141b4:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   141b8:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   141bc:	sub	w8, w1, #0x94
   141c0:	cmp	w8, #0x1b
   141c4:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   141c8:	mov	w9, #0x2f                  	// #47
   141cc:	movk	w9, #0x403, lsl #16
   141d0:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   141d4:	sub	w8, w1, #0x68
   141d8:	cmp	w8, #0x44
   141dc:	mov	w0, wzr
   141e0:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   141e4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   141e8:	add	x9, x9, #0x0
   141ec:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   141f0:	ldrb	w11, [x9, x8]
   141f4:	add	x10, x10, x11, lsl #2
   141f8:	br	x10
   141fc:	sub	w8, w1, #0x6c
   14200:	cmp	w8, #0x3d
   14204:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14208:	mov	x9, #0x1e0000000           	// #8053063680
   1420c:	movk	x9, #0xe003
   14210:	movk	x9, #0x1000, lsl #48
   14214:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14218:	sub	w8, w1, #0x71
   1421c:	cmp	w8, #0x3c
   14220:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14224:	mov	x9, #0x3                   	// #3
   14228:	movk	x9, #0x7, lsl #16
   1422c:	movk	x9, #0x800, lsl #48
   14230:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14234:	sub	w8, w1, #0x79
   14238:	cmp	w8, #0x30
   1423c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14240:	mov	x9, #0x3                   	// #3
   14244:	movk	x9, #0x7, lsl #16
   14248:	movk	x9, #0x8000, lsl #32
   1424c:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14250:	sub	w8, w1, #0x7e
   14254:	cmp	w8, #0x2e
   14258:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   1425c:	mov	x9, #0x3                   	// #3
   14260:	movk	x9, #0x2000, lsl #32
   14264:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14268:	cmp	w1, #0x91
   1426c:	cset	w0, eq  // eq = none
   14270:	ret
   14274:	sub	w8, w1, #0x8d
   14278:	cmp	w8, #0x1a
   1427c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14280:	mov	w9, #0x3                   	// #3
   14284:	movk	w9, #0x200, lsl #16
   14288:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   1428c:	cmp	w1, #0xa9
   14290:	cset	w0, eq  // eq = none
   14294:	ret
   14298:	sub	w8, w1, #0x95
   1429c:	cmp	w8, #0x1a
   142a0:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   142a4:	mov	w9, #0x8011                	// #32785
   142a8:	movk	w9, #0x201, lsl #16
   142ac:	orr	w9, w9, #0x6
   142b0:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   142b4:	sub	w8, w1, #0x99
   142b8:	cmp	w8, #0x16
   142bc:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   142c0:	mov	w9, #0xc01                 	// #3073
   142c4:	movk	w9, #0x20, lsl #16
   142c8:	add	w9, w9, #0xc00
   142cc:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   142d0:	sub	w8, w1, #0x97
   142d4:	cmp	w8, #0x18
   142d8:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   142dc:	mov	w9, #0x6005                	// #24581
   142e0:	movk	w9, #0x80, lsl #16
   142e4:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   142e8:	cmp	w1, #0x120
   142ec:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   142f0:	cmp	w1, #0x11c
   142f4:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   142f8:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   142fc:	cmp	w1, #0x2c
   14300:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14304:	cmp	w1, #0x2d
   14308:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1430c:	cmp	w1, #0x2e
   14310:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14314:	cmp	w1, #0x2f
   14318:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1431c:	cmp	w1, #0x30
   14320:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14324:	cmp	w1, #0x31
   14328:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1432c:	cmp	w1, #0x32
   14330:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14334:	cmp	w1, #0x33
   14338:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1433c:	cmp	w1, #0x34
   14340:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14344:	cmp	w1, #0x35
   14348:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1434c:	cmp	w1, #0x36
   14350:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14354:	cmp	w1, #0x37
   14358:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1435c:	cmp	w1, #0x38
   14360:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14364:	cmp	w1, #0x39
   14368:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   1436c:	cmp	w1, #0x3a
   14370:	b	14378 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x320>
   14374:	cmp	w1, #0x3b
   14378:	cset	w0, eq  // eq = none
   1437c:	ret
   14380:	sub	w8, w1, #0x63
   14384:	cmp	w8, #0x30
   14388:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   1438c:	mov	x9, #0x3                   	// #3
   14390:	movk	x9, #0x4, lsl #16
   14394:	movk	x9, #0x8000, lsl #32
   14398:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   1439c:	cmp	w1, #0xad
   143a0:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   143a4:	cmp	w1, #0xa3
   143a8:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   143ac:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   143b0:	cmp	w1, #0xae
   143b4:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   143b8:	cmp	w1, #0xa5
   143bc:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   143c0:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   143c4:	sub	w8, w1, #0x95
   143c8:	cmp	w8, #0x1a
   143cc:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   143d0:	mov	w9, #0x8011                	// #32785
   143d4:	movk	w9, #0x201, lsl #16
   143d8:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   143dc:	sub	w8, w1, #0x5d
   143e0:	cmp	w8, #0x36
   143e4:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   143e8:	mov	x9, #0x20e1                	// #8417
   143ec:	movk	x9, #0x180, lsl #16
   143f0:	movk	x9, #0x20, lsl #48
   143f4:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   143f8:	cmp	w1, #0x91
   143fc:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14400:	cmp	w1, #0x76
   14404:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14408:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   1440c:	sub	w8, w1, #0x4c
   14410:	cmp	w8, #0x60
   14414:	mov	w0, wzr
   14418:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   1441c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14420:	add	x9, x9, #0x0
   14424:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14428:	ldrb	w11, [x9, x8]
   1442c:	add	x10, x10, x11, lsl #2
   14430:	br	x10
   14434:	sub	w8, w1, #0x4e
   14438:	cmp	w8, #0x5d
   1443c:	mov	w0, wzr
   14440:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   14444:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14448:	add	x9, x9, #0x0
   1444c:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14450:	ldrb	w11, [x9, x8]
   14454:	add	x10, x10, x11, lsl #2
   14458:	br	x10
   1445c:	sub	w8, w1, #0x50
   14460:	cmp	w8, #0x5c
   14464:	mov	w0, wzr
   14468:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   1446c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14470:	add	x9, x9, #0x0
   14474:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14478:	ldrb	w11, [x9, x8]
   1447c:	add	x10, x10, x11, lsl #2
   14480:	br	x10
   14484:	sub	w8, w1, #0x51
   14488:	cmp	w8, #0x5b
   1448c:	mov	w0, wzr
   14490:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   14494:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14498:	add	x9, x9, #0x0
   1449c:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   144a0:	ldrb	w11, [x9, x8]
   144a4:	add	x10, x10, x11, lsl #2
   144a8:	br	x10
   144ac:	sub	w8, w1, #0x54
   144b0:	cmp	w8, #0x2a
   144b4:	mov	w0, wzr
   144b8:	b.hi	14870 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x818>  // b.pmore
   144bc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   144c0:	add	x9, x9, #0x0
   144c4:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   144c8:	ldrb	w11, [x9, x8]
   144cc:	add	x10, x10, x11, lsl #2
   144d0:	br	x10
   144d4:	sub	w8, w1, #0x57
   144d8:	cmp	w8, #0x2a
   144dc:	mov	w0, wzr
   144e0:	b.hi	1487c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x824>  // b.pmore
   144e4:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   144e8:	add	x9, x9, #0x0
   144ec:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   144f0:	ldrb	w11, [x9, x8]
   144f4:	add	x10, x10, x11, lsl #2
   144f8:	br	x10
   144fc:	sub	w8, w1, #0x58
   14500:	cmp	w8, #0x54
   14504:	mov	w0, wzr
   14508:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   1450c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14510:	add	x9, x9, #0x0
   14514:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14518:	ldrb	w11, [x9, x8]
   1451c:	add	x10, x10, x11, lsl #2
   14520:	br	x10
   14524:	sub	w8, w1, #0x59
   14528:	cmp	w8, #0x53
   1452c:	mov	w0, wzr
   14530:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   14534:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14538:	add	x9, x9, #0x0
   1453c:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14540:	ldrb	w11, [x9, x8]
   14544:	add	x10, x10, x11, lsl #2
   14548:	br	x10
   1454c:	sub	w8, w1, #0x5b
   14550:	cmp	w8, #0x2a
   14554:	mov	w0, wzr
   14558:	b.hi	14888 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x830>  // b.pmore
   1455c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14560:	add	x9, x9, #0x0
   14564:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14568:	ldrb	w11, [x9, x8]
   1456c:	add	x10, x10, x11, lsl #2
   14570:	br	x10
   14574:	sub	w8, w1, #0x6e
   14578:	cmp	w8, #0x3e
   1457c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14580:	mov	x9, #0x8001                	// #32769
   14584:	movk	x9, #0x1, lsl #16
   14588:	movk	x9, #0x2000, lsl #48
   1458c:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14590:	sub	w8, w1, #0x67
   14594:	cmp	w8, #0x44
   14598:	mov	w0, wzr
   1459c:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   145a0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   145a4:	add	x9, x9, #0x0
   145a8:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   145ac:	ldrb	w11, [x9, x8]
   145b0:	add	x10, x10, x11, lsl #2
   145b4:	br	x10
   145b8:	sub	w8, w1, #0x68
   145bc:	cmp	w8, #0x44
   145c0:	mov	w0, wzr
   145c4:	b.hi	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.pmore
   145c8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   145cc:	add	x9, x9, #0x0
   145d0:	adr	x10, 14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   145d4:	ldrb	w11, [x9, x8]
   145d8:	add	x10, x10, x11, lsl #2
   145dc:	br	x10
   145e0:	sub	w8, w1, #0x73
   145e4:	cmp	w8, #0x38
   145e8:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   145ec:	mov	x9, #0x1                   	// #1
   145f0:	movk	x9, #0x6, lsl #16
   145f4:	movk	x9, #0x80, lsl #48
   145f8:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   145fc:	sub	w8, w1, #0x62
   14600:	cmp	w8, #0x31
   14604:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14608:	mov	x9, #0x107                 	// #263
   1460c:	movk	x9, #0xc, lsl #16
   14610:	movk	x9, #0x1, lsl #48
   14614:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14618:	sub	w8, w1, #0x98
   1461c:	cmp	w8, #0x16
   14620:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14624:	mov	w9, #0xc01                 	// #3073
   14628:	movk	w9, #0x20, lsl #16
   1462c:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   14630:	cmp	w1, #0x90
   14634:	cset	w0, eq  // eq = none
   14638:	ret
   1463c:	cmp	w1, #0xa9
   14640:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14644:	cmp	w1, #0x93
   14648:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1464c:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   14650:	sub	w8, w1, #0x64
   14654:	cmp	w8, #0x2f
   14658:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   1465c:	mov	x9, #0x41                  	// #65
   14660:	movk	x9, #0x3, lsl #16
   14664:	movk	x9, #0x4000, lsl #32
   14668:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   1466c:	sub	w8, w1, #0x64
   14670:	cmp	w8, #0x2f
   14674:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14678:	mov	x9, #0x1                   	// #1
   1467c:	movk	x9, #0x2, lsl #16
   14680:	movk	x9, #0x4000, lsl #32
   14684:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14688:	cmp	w1, #0x92
   1468c:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14690:	cmp	w1, #0x75
   14694:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14698:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   1469c:	sub	w8, w1, #0x6e
   146a0:	cmp	w8, #0x3e
   146a4:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   146a8:	mov	x9, #0x8003                	// #32771
   146ac:	movk	x9, #0x3, lsl #16
   146b0:	movk	x9, #0x2000, lsl #48
   146b4:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   146b8:	sub	w8, w1, #0x70
   146bc:	cmp	w8, #0x3d
   146c0:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   146c4:	mov	x9, #0x3                   	// #3
   146c8:	movk	x9, #0x7, lsl #16
   146cc:	movk	x9, #0x1000, lsl #48
   146d0:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   146d4:	sub	w8, w1, #0x74
   146d8:	cmp	w8, #0x1f
   146dc:	b.cc	147f4 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x79c>  // b.lo, b.ul, b.last
   146e0:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   146e4:	sub	w8, w1, #0x77
   146e8:	cmp	w8, #0x31
   146ec:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   146f0:	mov	x9, #0x8003                	// #32771
   146f4:	movk	x9, #0x3, lsl #16
   146f8:	movk	x9, #0x1, lsl #48
   146fc:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14700:	sub	w8, w1, #0x7a
   14704:	cmp	w8, #0x2f
   14708:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   1470c:	mov	x9, #0x3                   	// #3
   14710:	movk	x9, #0x7, lsl #16
   14714:	movk	x9, #0x4000, lsl #32
   14718:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   1471c:	sub	w8, w1, #0x7d
   14720:	cmp	w8, #0x2f
   14724:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14728:	mov	x9, #0x3                   	// #3
   1472c:	movk	x9, #0x4000, lsl #32
   14730:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14734:	sub	w8, w1, #0x80
   14738:	cmp	w8, #0x2d
   1473c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14740:	mov	x9, #0x3                   	// #3
   14744:	movk	x9, #0x1000, lsl #32
   14748:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   1474c:	sub	w8, w1, #0x81
   14750:	cmp	w8, #0x2c
   14754:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14758:	mov	x9, #0x3                   	// #3
   1475c:	movk	x9, #0x800, lsl #32
   14760:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14764:	sub	w8, w1, #0x82
   14768:	cmp	w8, #0x2b
   1476c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14770:	mov	x9, #0x3                   	// #3
   14774:	movk	x9, #0x400, lsl #32
   14778:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   1477c:	sub	w8, w1, #0x84
   14780:	cmp	w8, #0x27
   14784:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14788:	mov	x9, #0x3                   	// #3
   1478c:	movk	x9, #0x40, lsl #32
   14790:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   14794:	sub	w8, w1, #0x86
   14798:	cmp	w8, #0x22
   1479c:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   147a0:	mov	x9, #0x3                   	// #3
   147a4:	movk	x9, #0x2, lsl #32
   147a8:	b	147c0 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x768>
   147ac:	sub	w8, w1, #0x87
   147b0:	cmp	w8, #0x21
   147b4:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   147b8:	mov	x9, #0x3                   	// #3
   147bc:	movk	x9, #0x1, lsl #32
   147c0:	lsr	x8, x9, x8
   147c4:	and	w0, w8, #0x1
   147c8:	ret
   147cc:	sub	w8, w1, #0x89
   147d0:	cmp	w8, #0x20
   147d4:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   147d8:	mov	w9, #0x80000003            	// #-2147483645
   147dc:	lsr	w8, w9, w8
   147e0:	and	w0, w8, #0x1
   147e4:	ret
   147e8:	sub	w8, w1, #0x8a
   147ec:	cmp	w8, #0x1f
   147f0:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   147f4:	mov	w9, #0x3                   	// #3
   147f8:	movk	w9, #0x4000, lsl #16
   147fc:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   14800:	sub	w8, w1, #0x8b
   14804:	cmp	w8, #0x1e
   14808:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   1480c:	mov	w9, #0x3                   	// #3
   14810:	movk	w9, #0x2000, lsl #16
   14814:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   14818:	cmp	w1, #0x9d
   1481c:	cset	w0, eq  // eq = none
   14820:	ret
   14824:	cmp	w1, #0xae
   14828:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   1482c:	cmp	w1, #0xa4
   14830:	b.eq	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>  // b.none
   14834:	b	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>
   14838:	sub	w8, w1, #0xa2
   1483c:	cmp	w8, #0xc
   14840:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14844:	mov	w9, #0x803                 	// #2051
   14848:	b	1485c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x804>
   1484c:	sub	w8, w1, #0xa4
   14850:	cmp	w8, #0xb
   14854:	b.cs	14868 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x810>  // b.hs, b.nlast
   14858:	mov	w9, #0x403                 	// #1027
   1485c:	lsr	w8, w9, w8
   14860:	and	w0, w8, #0x1
   14864:	ret
   14868:	mov	w0, wzr
   1486c:	ret
   14870:	cmp	w1, #0xab
   14874:	b.ne	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.any
   14878:	b	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   1487c:	cmp	w1, #0xac
   14880:	b.ne	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.any
   14884:	b	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>
   14888:	cmp	w1, #0xaa
   1488c:	b.ne	1437c <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x324>  // b.any
   14890:	b	14060 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_+0x8>

0000000000014894 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE>:
   14894:	sub	sp, sp, #0x60
   14898:	stp	x29, x30, [sp, #48]
   1489c:	stp	x22, x21, [sp, #64]
   148a0:	stp	x20, x19, [sp, #80]
   148a4:	add	x29, sp, #0x30
   148a8:	cbz	w1, 1493c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa8>
   148ac:	ldr	x8, [x0]
   148b0:	mov	w20, w1
   148b4:	mov	x19, x0
   148b8:	ldr	x8, [x8, #32]
   148bc:	blr	x8
   148c0:	cmp	w20, #0x42
   148c4:	b.gt	14944 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xb0>
   148c8:	tbz	w0, #0, 14944 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xb0>
   148cc:	ldr	w8, [x19, #48]
   148d0:	cmp	w8, #0x6
   148d4:	b.ne	1bdc0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x752c>  // b.any
   148d8:	ldr	w8, [x19, #80]
   148dc:	sub	w9, w8, #0x1
   148e0:	cmp	w9, #0x3
   148e4:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   148e8:	ldr	x8, [x19, #72]
   148ec:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   148f0:	add	x10, x10, #0x0
   148f4:	adr	x11, 14904 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70>
   148f8:	ldrb	w12, [x10, x9]
   148fc:	add	x11, x11, x12, lsl #2
   14900:	br	x11
   14904:	ldrb	w8, [x8]
   14908:	cmp	w8, #0x5a
   1490c:	b.le	14a64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d0>
   14910:	sub	w8, w8, #0x5b
   14914:	cmp	w8, #0x1f
   14918:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   1491c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14920:	add	x9, x9, #0x0
   14924:	adr	x10, 14934 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa0>
   14928:	ldrb	w11, [x9, x8]
   1492c:	add	x10, x10, x11, lsl #2
   14930:	br	x10
   14934:	mov	w0, #0x3d                  	// #61
   14938:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1493c:	mov	w21, wzr
   14940:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   14944:	sub	w8, w20, #0xaf
   14948:	cmp	w8, #0x124
   1494c:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   14950:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14954:	add	x9, x9, #0x0
   14958:	adr	x10, 14968 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xd4>
   1495c:	ldrh	w11, [x9, x8, lsl #1]
   14960:	add	x10, x10, x11, lsl #2
   14964:	br	x10
   14968:	ldr	w8, [x19, #48]
   1496c:	cmp	w8, #0x9
   14970:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   14974:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   14978:	ldrb	w9, [x8]
   1497c:	cmp	w9, #0x6d
   14980:	b.eq	14ad0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x23c>  // b.none
   14984:	cmp	w9, #0x2e
   14988:	b.eq	14a84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1f0>  // b.none
   1498c:	cmp	w9, #0x23
   14990:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14994:	ldrb	w9, [x8, #1]
   14998:	sub	w9, w9, #0x31
   1499c:	cmp	w9, #0x5
   149a0:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   149a4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   149a8:	add	x10, x10, #0x0
   149ac:	adr	x11, 149bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x128>
   149b0:	ldrb	w12, [x10, x9]
   149b4:	add	x11, x11, x12, lsl #2
   149b8:	br	x11
   149bc:	ldrb	w8, [x8, #2]
   149c0:	sub	w8, w8, #0x30
   149c4:	cmp	w8, #0x7
   149c8:	b.cs	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.hs, b.nlast
   149cc:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   149d0:	sxtb	x8, w8
   149d4:	add	x9, x9, #0x0
   149d8:	ldr	w0, [x9, x8, lsl #2]
   149dc:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   149e0:	ldrh	w9, [x8]
   149e4:	ldrb	w10, [x8, #2]
   149e8:	mov	w11, #0x312e                	// #12590
   149ec:	mov	w12, #0x36                  	// #54
   149f0:	eor	w9, w9, w11
   149f4:	eor	w10, w10, w12
   149f8:	orr	w9, w9, w10
   149fc:	tst	w9, #0xffff
   14a00:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14a04:	ldrb	w8, [x8, #3]
   14a08:	mov	w9, #0x2c                  	// #44
   14a0c:	cmp	w8, #0x62
   14a10:	csel	w9, w9, wzr, eq  // eq = none
   14a14:	cmp	w8, #0x42
   14a18:	mov	w8, #0x2                   	// #2
   14a1c:	csel	w0, w8, w9, eq  // eq = none
   14a20:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14a24:	ldrb	w9, [x8]
   14a28:	cmp	w9, #0x76
   14a2c:	b.eq	14b1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x288>  // b.none
   14a30:	cmp	w9, #0x2e
   14a34:	b.eq	14ae8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x254>  // b.none
   14a38:	cmp	w9, #0x23
   14a3c:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14a40:	ldrb	w8, [x8, #1]
   14a44:	sub	w8, w8, #0x30
   14a48:	cmp	w8, #0x9
   14a4c:	b.cs	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.hs, b.nlast
   14a50:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14a54:	sxtb	x8, w8
   14a58:	add	x9, x9, #0x0
   14a5c:	ldr	w0, [x9, x8, lsl #2]
   14a60:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14a64:	cmp	w8, #0x21
   14a68:	b.eq	14b48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2b4>  // b.none
   14a6c:	cmp	w8, #0x2e
   14a70:	b.eq	14b50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2bc>  // b.none
   14a74:	cmp	w8, #0x2f
   14a78:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14a7c:	mov	w0, #0x3c                  	// #60
   14a80:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14a84:	ldrb	w9, [x8, #1]
   14a88:	sub	w9, w9, #0x31
   14a8c:	cmp	w9, #0x7
   14a90:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   14a94:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   14a98:	add	x10, x10, #0x0
   14a9c:	adr	x11, 14aac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x218>
   14aa0:	ldrb	w12, [x10, x9]
   14aa4:	add	x11, x11, x12, lsl #2
   14aa8:	br	x11
   14aac:	ldrb	w8, [x8, #2]
   14ab0:	cmp	w8, #0x63
   14ab4:	b.gt	14d18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x484>
   14ab8:	cmp	w8, #0x44
   14abc:	b.eq	1a28c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x59f8>  // b.none
   14ac0:	cmp	w8, #0x51
   14ac4:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14ac8:	mov	w0, #0x4                   	// #4
   14acc:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14ad0:	ldurh	w8, [x8, #1]
   14ad4:	mov	w9, #0x6c75                	// #27765
   14ad8:	cmp	w8, w9
   14adc:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14ae0:	mov	w0, #0x40                  	// #64
   14ae4:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14ae8:	ldrb	w8, [x8, #1]
   14aec:	sub	w8, w8, #0x30
   14af0:	cmp	w8, #0x43
   14af4:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   14af8:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14afc:	add	x9, x9, #0x0
   14b00:	adr	x10, 14b14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x280>
   14b04:	ldrb	w11, [x9, x8]
   14b08:	add	x10, x10, x11, lsl #2
   14b0c:	mov	w0, #0x2b                  	// #43
   14b10:	br	x10
   14b14:	mov	w0, #0xd                   	// #13
   14b18:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b1c:	ldrb	w8, [x8, #1]
   14b20:	cmp	w8, #0x6c
   14b24:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14b28:	mov	w0, #0x41                  	// #65
   14b2c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b30:	mov	w0, #0x3f                  	// #63
   14b34:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b38:	mov	w0, #0x42                  	// #66
   14b3c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b40:	mov	w0, #0x3e                  	// #62
   14b44:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b48:	mov	w0, #0x12                  	// #18
   14b4c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b50:	mov	w0, #0x2a                  	// #42
   14b54:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b58:	ldrb	w8, [x8, #2]
   14b5c:	sub	w8, w8, #0x42
   14b60:	cmp	w8, #0x31
   14b64:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   14b68:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14b6c:	add	x9, x9, #0x0
   14b70:	adr	x10, 14b84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2f0>
   14b74:	ldrh	w11, [x9, x8, lsl #1]
   14b78:	add	x10, x10, x11, lsl #2
   14b7c:	mov	w0, #0x8                   	// #8
   14b80:	br	x10
   14b84:	mov	w0, #0x9                   	// #9
   14b88:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14b8c:	ldrb	w8, [x8, #2]
   14b90:	sub	w8, w8, #0x44
   14b94:	cmp	w8, #0x2f
   14b98:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   14b9c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14ba0:	add	x9, x9, #0x0
   14ba4:	adr	x10, 14bb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x324>
   14ba8:	ldrh	w11, [x9, x8, lsl #1]
   14bac:	add	x10, x10, x11, lsl #2
   14bb0:	mov	w0, #0x5                   	// #5
   14bb4:	br	x10
   14bb8:	mov	w0, #0x6                   	// #6
   14bbc:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14bc0:	ldrb	w8, [x8, #2]
   14bc4:	sub	w8, w8, #0x42
   14bc8:	cmp	w8, #0x26
   14bcc:	b.hi	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.pmore
   14bd0:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   14bd4:	add	x9, x9, #0x0
   14bd8:	adr	x10, 14bec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x358>
   14bdc:	ldrh	w11, [x9, x8, lsl #1]
   14be0:	add	x10, x10, x11, lsl #2
   14be4:	mov	w0, #0xb                   	// #11
   14be8:	br	x10
   14bec:	mov	w0, #0xc                   	// #12
   14bf0:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14bf4:	ldrb	w8, [x8, #2]
   14bf8:	sub	w8, w8, #0x30
   14bfc:	cmp	w8, #0x3
   14c00:	b.cs	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.hs, b.nlast
   14c04:	and	w8, w8, #0xff
   14c08:	add	w0, w8, #0x21
   14c0c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14c10:	ldrb	w8, [x8, #2]
   14c14:	sub	w8, w8, #0x34
   14c18:	cmp	w8, #0x6
   14c1c:	b.cs	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.hs, b.nlast
   14c20:	and	w8, w8, #0xff
   14c24:	add	w0, w8, #0x1a
   14c28:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14c2c:	ldrb	w8, [x8, #2]
   14c30:	cmp	w8, #0x38
   14c34:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14c38:	mov	w0, #0x25                  	// #37
   14c3c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14c40:	ldrb	w8, [x8, #2]
   14c44:	cmp	w8, #0x34
   14c48:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14c4c:	mov	w0, #0x27                  	// #39
   14c50:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14c54:	ldr	x8, [x19]
   14c58:	mov	x0, x19
   14c5c:	ldr	x8, [x8, #40]
   14c60:	blr	x8
   14c64:	tbz	w0, #0, 184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>
   14c68:	ldr	w8, [x19, #48]
   14c6c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14c70:	ldr	x8, [x19, #72]
   14c74:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   14c78:	ldr	w9, [x8]
   14c7c:	cmp	w9, #0x1
   14c80:	b.ne	184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>  // b.any
   14c84:	ldr	x8, [x8, #16]
   14c88:	mov	w19, #0x91                  	// #145
   14c8c:	lsr	x9, x8, #32
   14c90:	cbz	x9, 14ca8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x414>
   14c94:	mov	w9, #0x80000000            	// #-2147483648
   14c98:	add	x9, x8, x9
   14c9c:	lsr	x9, x9, #32
   14ca0:	mov	w21, #0x91                  	// #145
   14ca4:	cbnz	x9, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   14ca8:	and	x0, x8, #0xffffffff
   14cac:	add	x2, sp, #0x10
   14cb0:	mov	w1, #0x20                  	// #32
   14cb4:	b	184cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c38>
   14cb8:	ldr	x8, [x19]
   14cbc:	mov	x0, x19
   14cc0:	ldr	x8, [x8, #40]
   14cc4:	blr	x8
   14cc8:	tbz	w0, #0, 184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>
   14ccc:	ldr	w8, [x19, #48]
   14cd0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14cd4:	ldr	x8, [x19, #72]
   14cd8:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   14cdc:	ldr	w9, [x8]
   14ce0:	cmp	w9, #0x1
   14ce4:	b.ne	184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>  // b.any
   14ce8:	ldr	x8, [x8, #16]
   14cec:	mov	w19, #0x91                  	// #145
   14cf0:	cmp	x8, #0x100
   14cf4:	b.cc	14d08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x474>  // b.lo, b.ul, b.last
   14cf8:	add	x9, x8, #0x80
   14cfc:	cmp	x9, #0xff
   14d00:	mov	w21, #0x91                  	// #145
   14d04:	b.hi	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.pmore
   14d08:	and	x0, x8, #0xff
   14d0c:	add	x2, sp, #0x10
   14d10:	mov	w1, #0x8                   	// #8
   14d14:	b	184cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c38>
   14d18:	cmp	w8, #0x64
   14d1c:	b.eq	1a294 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a00>  // b.none
   14d20:	cmp	w8, #0x71
   14d24:	b.ne	14d30 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x49c>  // b.any
   14d28:	mov	w0, #0x2e                  	// #46
   14d2c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d30:	mov	w0, wzr
   14d34:	mov	w1, w20
   14d38:	bl	14058 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   14d3c:	tst	w0, #0x1
   14d40:	mov	w8, #0x4                   	// #4
   14d44:	csel	w21, w8, wzr, ne  // ne = any
   14d48:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   14d4c:	mov	w0, #0x3b                  	// #59
   14d50:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d54:	mov	w0, #0x10                  	// #16
   14d58:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d5c:	mov	w0, #0x11                  	// #17
   14d60:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d64:	mov	w0, #0xf                   	// #15
   14d68:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d6c:	mov	w0, #0xe                   	// #14
   14d70:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d74:	mov	w0, #0x37                  	// #55
   14d78:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d7c:	mov	w0, #0x38                  	// #56
   14d80:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d84:	mov	w0, #0x3a                  	// #58
   14d88:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d8c:	mov	w0, #0x39                  	// #57
   14d90:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   14d94:	ldr	x8, [x19]
   14d98:	mov	x0, x19
   14d9c:	ldr	x8, [x8, #40]
   14da0:	blr	x8
   14da4:	tbz	w0, #0, 18158 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38c4>
   14da8:	ldr	w8, [x19, #48]
   14dac:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14db0:	ldr	x8, [x19, #72]
   14db4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   14db8:	ldr	w9, [x8]
   14dbc:	cmp	w9, #0x1
   14dc0:	b.eq	170e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2850>  // b.none
   14dc4:	b	18158 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38c4>
   14dc8:	ldr	x8, [x19]
   14dcc:	mov	x0, x19
   14dd0:	ldr	x8, [x8, #40]
   14dd4:	blr	x8
   14dd8:	tbz	w0, #0, 18158 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38c4>
   14ddc:	ldr	w8, [x19, #48]
   14de0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14de4:	ldr	x8, [x19, #72]
   14de8:	cbnz	x8, 18128 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3894>
   14dec:	b	1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   14df0:	ldr	w8, [x19, #48]
   14df4:	cmp	w8, #0x3
   14df8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   14dfc:	ldr	w8, [x19, #76]
   14e00:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   14e04:	ldr	x8, [x19]
   14e08:	mov	x0, x19
   14e0c:	ldr	x8, [x8, #56]
   14e10:	blr	x8
   14e14:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14e18:	ldr	x8, [x8]
   14e1c:	mov	w9, w0
   14e20:	lsr	x9, x9, #3
   14e24:	ldrh	w10, [x8, #630]
   14e28:	cmp	w9, w10
   14e2c:	b.cs	1b848 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fb4>  // b.hs, b.nlast
   14e30:	ldr	x8, [x8, #616]
   14e34:	ldrb	w8, [x8, x9]
   14e38:	and	w9, w0, #0x7
   14e3c:	lsr	w8, w8, w9
   14e40:	tbz	w8, #0, 1b848 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fb4>
   14e44:	ldr	w9, [x19, #48]
   14e48:	add	x8, x19, #0x48
   14e4c:	cmp	w9, #0x3
   14e50:	b.eq	1ae98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6604>  // b.none
   14e54:	cmp	w9, #0xa
   14e58:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   14e5c:	mov	x10, x8
   14e60:	b	1ae9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6608>
   14e64:	ldr	w8, [x19, #48]
   14e68:	cmp	w8, #0xb
   14e6c:	b.ne	1a2a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a10>  // b.any
   14e70:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   14e74:	ldr	x8, [x19, #72]
   14e78:	mov	w9, #0x40                  	// #64
   14e7c:	add	x10, sp, #0x10
   14e80:	mov	x21, x0
   14e84:	str	w9, [sp, #8]
   14e88:	str	x8, [sp]
   14e8c:	add	x19, x10, #0x8
   14e90:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   14e94:	mov	x20, x0
   14e98:	mov	x2, sp
   14e9c:	cmp	x0, x21
   14ea0:	b.eq	1a740 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5eac>  // b.none
   14ea4:	mov	x0, x19
   14ea8:	mov	x1, x21
   14eac:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   14eb0:	b	1a74c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5eb8>
   14eb4:	ldr	w8, [x19, #48]
   14eb8:	mov	w21, #0x93                  	// #147
   14ebc:	cmp	w8, #0x7
   14ec0:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   14ec4:	ldr	w8, [x19, #88]
   14ec8:	b	152d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xa44>
   14ecc:	ldr	w8, [x19, #48]
   14ed0:	cmp	w8, #0x3
   14ed4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   14ed8:	ldr	w8, [x19, #76]
   14edc:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   14ee0:	ldr	x8, [x19]
   14ee4:	mov	x0, x19
   14ee8:	ldr	x8, [x8, #56]
   14eec:	blr	x8
   14ef0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   14ef4:	ldr	x8, [x8]
   14ef8:	mov	w9, w0
   14efc:	lsr	x9, x9, #3
   14f00:	ldrh	w10, [x8, #566]
   14f04:	cmp	w9, w10
   14f08:	b.cs	1b860 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fcc>  // b.hs, b.nlast
   14f0c:	ldr	x8, [x8, #552]
   14f10:	ldrb	w8, [x8, x9]
   14f14:	and	w9, w0, #0x7
   14f18:	lsr	w8, w8, w9
   14f1c:	tbz	w8, #0, 1b860 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fcc>
   14f20:	ldr	w9, [x19, #48]
   14f24:	add	x8, x19, #0x48
   14f28:	cmp	w9, #0x3
   14f2c:	b.eq	1aebc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6628>  // b.none
   14f30:	cmp	w9, #0xa
   14f34:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   14f38:	mov	x10, x8
   14f3c:	b	1aec0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x662c>
   14f40:	ldr	x8, [x19]
   14f44:	mov	x0, x19
   14f48:	ldr	x8, [x8, #40]
   14f4c:	blr	x8
   14f50:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   14f54:	ldr	w8, [x19, #48]
   14f58:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14f5c:	ldr	x0, [x19, #72]
   14f60:	cbz	x0, 1be20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x758c>
   14f64:	ldr	w8, [x0]
   14f68:	cmp	w8, #0x4
   14f6c:	b.ne	1a4a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c0c>  // b.any
   14f70:	ldr	x9, [x0, #16]
   14f74:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   14f78:	ldr	w22, [x0, #24]
   14f7c:	ldr	w8, [x9]
   14f80:	mov	x0, x9
   14f84:	b	1a4a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c10>
   14f88:	ldr	x8, [x19]
   14f8c:	mov	x0, x19
   14f90:	ldr	x8, [x8, #40]
   14f94:	blr	x8
   14f98:	tbz	w0, #0, 1a2ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a18>
   14f9c:	ldr	w8, [x19, #48]
   14fa0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14fa4:	ldr	x8, [x19, #72]
   14fa8:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   14fac:	ldr	w9, [x8]
   14fb0:	mov	w21, #0x19                  	// #25
   14fb4:	cmp	w9, #0x1
   14fb8:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   14fbc:	ldr	x8, [x8, #16]
   14fc0:	cmp	x8, #0x80
   14fc4:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   14fc8:	ldr	x8, [x19]
   14fcc:	mov	x0, x19
   14fd0:	ldr	x8, [x8, #40]
   14fd4:	blr	x8
   14fd8:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   14fdc:	ldr	w8, [x19, #48]
   14fe0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   14fe4:	ldr	x0, [x19, #72]
   14fe8:	cbz	x0, 1be20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x758c>
   14fec:	ldr	w8, [x0]
   14ff0:	cmp	w8, #0x4
   14ff4:	b.ne	1a520 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c8c>  // b.any
   14ff8:	ldr	x9, [x0, #16]
   14ffc:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   15000:	ldr	w22, [x0, #24]
   15004:	ldr	w8, [x9]
   15008:	mov	x0, x9
   1500c:	b	1a524 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c90>
   15010:	ldr	x8, [x19]
   15014:	mov	x0, x19
   15018:	ldr	x8, [x8, #40]
   1501c:	blr	x8
   15020:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15024:	ldr	w8, [x19, #48]
   15028:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1502c:	ldr	x0, [x19, #72]
   15030:	cbz	x0, 1be20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x758c>
   15034:	ldr	w8, [x0]
   15038:	cmp	w8, #0x4
   1503c:	b.ne	1a5b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d1c>  // b.any
   15040:	ldr	x9, [x0, #16]
   15044:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   15048:	ldr	w21, [x0, #24]
   1504c:	ldr	w8, [x9]
   15050:	mov	x0, x9
   15054:	b	1a5b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d20>
   15058:	ldr	x8, [x19]
   1505c:	mov	x0, x19
   15060:	ldr	x8, [x8, #40]
   15064:	blr	x8
   15068:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1506c:	ldr	w8, [x19, #48]
   15070:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15074:	ldr	x8, [x19, #72]
   15078:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1507c:	ldr	w9, [x8]
   15080:	cmp	w9, #0x1
   15084:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15088:	ldr	x8, [x8, #16]
   1508c:	mov	w9, #0x1ff9                	// #8185
   15090:	mov	w10, #0x3e                  	// #62
   15094:	add	x11, x8, #0x1, lsl #12
   15098:	b	15e60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x15cc>
   1509c:	ldr	w8, [x19, #48]
   150a0:	cmp	w8, #0x3
   150a4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   150a8:	ldr	w8, [x19, #76]
   150ac:	cmp	w8, #0x3
   150b0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   150b4:	ldr	x8, [x19]
   150b8:	mov	x0, x19
   150bc:	ldr	x8, [x8, #56]
   150c0:	blr	x8
   150c4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   150c8:	ldr	x8, [x8]
   150cc:	mov	w9, w0
   150d0:	lsr	x9, x9, #3
   150d4:	ldrh	w10, [x8, #118]
   150d8:	cmp	w9, w10
   150dc:	b.cs	15100 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x86c>  // b.hs, b.nlast
   150e0:	ldr	x8, [x8, #104]
   150e4:	ldrb	w8, [x8, x9]
   150e8:	and	w9, w0, #0x7
   150ec:	lsr	w8, w8, w9
   150f0:	tbz	w8, #0, 15100 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x86c>
   150f4:	ldr	w8, [x19, #80]
   150f8:	cmp	w8, #0x10
   150fc:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   15100:	mov	w21, #0x66                  	// #102
   15104:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   15108:	ldr	w8, [x19, #48]
   1510c:	cmp	w8, #0xa
   15110:	b.ne	1ac44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63b0>  // b.any
   15114:	ldr	w8, [x19, #72]
   15118:	sub	w9, w8, #0x5
   1511c:	cmp	w9, #0x8
   15120:	b.cs	1ac40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63ac>  // b.hs, b.nlast
   15124:	ldr	w9, [x19, #76]
   15128:	cmp	w9, #0x4
   1512c:	b.hi	1ac44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63b0>  // b.pmore
   15130:	cmp	w8, #0xb
   15134:	mov	w21, #0x47                  	// #71
   15138:	b.eq	15144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x8b0>  // b.none
   1513c:	cmp	w8, #0x7
   15140:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15144:	cmp	w9, #0x2
   15148:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   1514c:	ldr	x8, [x19]
   15150:	mov	x0, x19
   15154:	ldr	x8, [x8, #40]
   15158:	blr	x8
   1515c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15160:	ldr	w8, [x19, #48]
   15164:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15168:	ldr	x8, [x19, #72]
   1516c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15170:	ldr	w9, [x8]
   15174:	cmp	w9, #0x1
   15178:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1517c:	ldr	x8, [x8, #16]
   15180:	mov	x9, #0xff00000000000000    	// #-72057594037927936
   15184:	add	x9, x8, x9
   15188:	lsr	x9, x9, #57
   1518c:	cmp	x9, #0x7f
   15190:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   15194:	and	x9, x8, #0xff000000000000
   15198:	mov	x10, #0xff000000000000      	// #71776119061217280
   1519c:	cmp	x9, x10
   151a0:	b.eq	151a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x914>  // b.none
   151a4:	cbnz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   151a8:	and	x9, x8, #0xff0000000000
   151ac:	mov	x10, #0xff0000000000        	// #280375465082880
   151b0:	cmp	x9, x10
   151b4:	b.eq	151bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x928>  // b.none
   151b8:	cbnz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   151bc:	and	x9, x8, #0xff00000000
   151c0:	mov	x10, #0xff00000000          	// #1095216660480
   151c4:	cmp	x9, x10
   151c8:	b.eq	151d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x93c>  // b.none
   151cc:	cbnz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   151d0:	ands	w9, w8, #0xff000000
   151d4:	b.eq	151e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x950>  // b.none
   151d8:	mov	w10, #0xff000000            	// #-16777216
   151dc:	cmp	w9, w10
   151e0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   151e4:	and	x9, x8, #0xff0000
   151e8:	cmp	x9, #0xff0, lsl #12
   151ec:	b.eq	151f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x960>  // b.none
   151f0:	cbnz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   151f4:	and	w9, w8, #0xff00
   151f8:	mov	w10, #0xff00                	// #65280
   151fc:	cmp	w9, w10
   15200:	b.eq	15208 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x974>  // b.none
   15204:	cbnz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15208:	ands	w8, w8, #0xff
   1520c:	mov	w21, #0x4                   	// #4
   15210:	b.eq	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.none
   15214:	cmp	w8, #0xff
   15218:	b.eq	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.none
   1521c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15220:	ldr	x8, [x19]
   15224:	mov	x0, x19
   15228:	ldr	x8, [x8, #40]
   1522c:	blr	x8
   15230:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15234:	ldr	w8, [x19, #48]
   15238:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1523c:	ldr	x8, [x19, #72]
   15240:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15244:	ldr	w9, [x8]
   15248:	cmp	w9, #0x1
   1524c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15250:	ldr	x8, [x8, #16]
   15254:	mov	w9, #0x30                  	// #48
   15258:	add	x8, x8, #0x8
   1525c:	cmp	x8, #0x10
   15260:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   15264:	ldr	w8, [x19, #48]
   15268:	cmp	w8, #0x5
   1526c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15270:	ldr	w8, [x19, #72]
   15274:	mov	w9, #0x5d                  	// #93
   15278:	cmp	w8, #0x10
   1527c:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   15280:	ldr	x8, [x19]
   15284:	mov	x0, x19
   15288:	ldr	x8, [x8, #40]
   1528c:	blr	x8
   15290:	tbz	w0, #0, 1a2b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a20>
   15294:	ldr	w8, [x19, #48]
   15298:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1529c:	ldr	x8, [x19, #72]
   152a0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   152a4:	ldr	w9, [x8]
   152a8:	mov	w21, #0x23                  	// #35
   152ac:	cmp	w9, #0x1
   152b0:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   152b4:	ldr	x8, [x8, #16]
   152b8:	sub	x8, x8, #0x1
   152bc:	cmp	x8, #0x8
   152c0:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   152c4:	ldr	w8, [x19, #48]
   152c8:	mov	w21, #0x92                  	// #146
   152cc:	cmp	w8, #0x7
   152d0:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   152d4:	ldr	w8, [x19, #84]
   152d8:	cmn	w8, #0x1
   152dc:	mov	w8, #0x4                   	// #4
   152e0:	csel	w21, w21, w8, eq  // eq = none
   152e4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   152e8:	ldr	x8, [x19]
   152ec:	mov	x0, x19
   152f0:	ldr	x8, [x8, #40]
   152f4:	blr	x8
   152f8:	tbz	w0, #0, 1a2bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a28>
   152fc:	ldr	w8, [x19, #48]
   15300:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15304:	ldr	x8, [x19, #72]
   15308:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1530c:	ldr	w9, [x8]
   15310:	mov	w21, #0x1a                  	// #26
   15314:	cmp	w9, #0x1
   15318:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1531c:	ldr	x8, [x8, #16]
   15320:	b	1a0a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5810>
   15324:	ldr	w8, [x19, #48]
   15328:	cmp	w8, #0xa
   1532c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15330:	ldr	w8, [x19, #72]
   15334:	cmp	w8, #0x4
   15338:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1533c:	ldr	w8, [x19, #76]
   15340:	mov	w21, #0x4                   	// #4
   15344:	cmp	w8, #0x8
   15348:	b.eq	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.none
   1534c:	cmp	w8, #0x10
   15350:	b.eq	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.none
   15354:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15358:	ldr	x8, [x19]
   1535c:	mov	x0, x19
   15360:	ldr	x8, [x8, #40]
   15364:	blr	x8
   15368:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1536c:	ldr	w8, [x19, #48]
   15370:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15374:	ldr	x8, [x19, #72]
   15378:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1537c:	ldr	w9, [x8]
   15380:	cmp	w9, #0x1
   15384:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15388:	ldr	x8, [x8, #16]
   1538c:	add	x8, x8, #0x100
   15390:	cmp	x8, #0x1ff
   15394:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   15398:	ldr	x8, [x19]
   1539c:	mov	x0, x19
   153a0:	ldr	x8, [x8, #40]
   153a4:	blr	x8
   153a8:	tbz	w0, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   153ac:	ldr	w8, [x19, #48]
   153b0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   153b4:	ldr	x0, [x19, #72]
   153b8:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   153bc:	ldr	w8, [x0]
   153c0:	cmp	w8, #0x1
   153c4:	b.ne	1adf8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6564>  // b.any
   153c8:	ldr	x8, [x0, #16]
   153cc:	mov	w21, #0x4                   	// #4
   153d0:	cmp	x8, #0x10, lsl #12
   153d4:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   153d8:	and	x8, x8, #0x800000000000000f
   153dc:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   153e0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   153e4:	ldr	x8, [x19]
   153e8:	mov	x0, x19
   153ec:	ldr	x8, [x8, #40]
   153f0:	blr	x8
   153f4:	tbz	w0, #0, 1a2c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a30>
   153f8:	ldr	w8, [x19, #48]
   153fc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15400:	ldr	x8, [x19, #72]
   15404:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15408:	ldr	w9, [x8]
   1540c:	mov	w21, #0x21                  	// #33
   15410:	cmp	w9, #0x1
   15414:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15418:	ldr	x8, [x8, #16]
   1541c:	sub	x8, x8, #0x1
   15420:	cmp	x8, #0x20
   15424:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   15428:	ldr	x8, [x19]
   1542c:	mov	x0, x19
   15430:	ldr	x8, [x8, #40]
   15434:	blr	x8
   15438:	tbz	w0, #0, 1a2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a38>
   1543c:	ldr	w8, [x19, #48]
   15440:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15444:	ldr	x8, [x19, #72]
   15448:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1544c:	ldr	w10, [x8]
   15450:	mov	w9, #0x44                  	// #68
   15454:	mov	w21, #0x44                  	// #68
   15458:	cmp	w10, #0x1
   1545c:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15460:	ldr	x8, [x8, #16]
   15464:	cmp	x8, w8, sxtb
   15468:	b	18fb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x471c>
   1546c:	ldr	x8, [x19]
   15470:	mov	x0, x19
   15474:	ldr	x8, [x8, #40]
   15478:	blr	x8
   1547c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15480:	ldr	w8, [x19, #48]
   15484:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15488:	ldr	x8, [x19, #72]
   1548c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15490:	ldr	w9, [x8]
   15494:	cmp	w9, #0x1
   15498:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1549c:	ldr	x8, [x8, #16]
   154a0:	add	x8, x8, #0x100
   154a4:	cmp	x8, #0x1ff
   154a8:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   154ac:	ldr	x8, [x19]
   154b0:	mov	x0, x19
   154b4:	ldr	x8, [x8, #40]
   154b8:	blr	x8
   154bc:	tbz	w0, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   154c0:	ldr	w8, [x19, #48]
   154c4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   154c8:	ldr	x0, [x19, #72]
   154cc:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   154d0:	ldr	w8, [x0]
   154d4:	cmp	w8, #0x1
   154d8:	b.ne	1ae18 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6584>  // b.any
   154dc:	ldr	x8, [x0, #16]
   154e0:	mov	w21, #0x4                   	// #4
   154e4:	cmp	x8, #0x4, lsl #12
   154e8:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   154ec:	and	x8, x8, #0x8000000000000003
   154f0:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   154f4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   154f8:	ldr	w8, [x19, #48]
   154fc:	cmp	w8, #0x1
   15500:	b.eq	15518 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xc84>  // b.none
   15504:	ldr	x8, [x19]
   15508:	mov	x0, x19
   1550c:	ldr	x8, [x8, #40]
   15510:	blr	x8
   15514:	tbz	w0, #0, 1ad20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x648c>
   15518:	add	x0, sp, #0x10
   1551c:	mov	x1, x19
   15520:	bl	1ebe4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   15524:	ldrb	w8, [sp, #32]
   15528:	cbz	w8, 1ad20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x648c>
   1552c:	ldr	x8, [sp, #16]
   15530:	mov	w9, #0xb                   	// #11
   15534:	cmn	x8, #0x1, lsl #12
   15538:	mov	w8, #0x4                   	// #4
   1553c:	csel	w21, w8, w9, hi  // hi = pmore
   15540:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   15544:	ldr	x8, [x19]
   15548:	mov	x0, x19
   1554c:	ldr	x8, [x8, #40]
   15550:	blr	x8
   15554:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15558:	ldr	w8, [x19, #48]
   1555c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15560:	ldr	x8, [x19, #72]
   15564:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15568:	ldr	w9, [x8]
   1556c:	cmp	w9, #0x1
   15570:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15574:	ldr	x8, [x8, #16]
   15578:	mov	w9, #0xf9                  	// #249
   1557c:	mov	w10, #0x40                  	// #64
   15580:	b	15b70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x12dc>
   15584:	ldr	w8, [x19, #48]
   15588:	cmp	w8, #0x1
   1558c:	b.ne	1a2d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a40>  // b.any
   15590:	add	x0, sp, #0x10
   15594:	mov	x1, x19
   15598:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1559c:	ldrb	w8, [sp, #32]
   155a0:	cbz	w8, 155c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xd34>
   155a4:	ldr	x8, [sp, #16]
   155a8:	ldr	w9, [sp, #24]
   155ac:	strb	wzr, [sp, #32]
   155b0:	lsl	x8, x8, x9
   155b4:	cmp	x8, #0x100
   155b8:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   155bc:	and	x9, x8, #0xff00
   155c0:	cmp	x9, x8
   155c4:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   155c8:	mov	w21, #0x52                  	// #82
   155cc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   155d0:	ldr	x8, [x19]
   155d4:	mov	x0, x19
   155d8:	ldr	x8, [x8, #40]
   155dc:	blr	x8
   155e0:	tbz	w0, #0, 19c60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53cc>
   155e4:	ldr	w8, [x19, #48]
   155e8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   155ec:	ldr	x8, [x19, #72]
   155f0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   155f4:	ldr	w9, [x8]
   155f8:	mov	w21, #0x1d                  	// #29
   155fc:	cmp	w9, #0x1
   15600:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15604:	ldr	x8, [x8, #16]
   15608:	b	1a21c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5988>
   1560c:	ldr	w8, [x19, #48]
   15610:	cmp	w8, #0x5
   15614:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15618:	ldr	w8, [x19, #72]
   1561c:	mov	w9, #0x5f                  	// #95
   15620:	cmp	w8, #0x20
   15624:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   15628:	ldr	w8, [x19, #48]
   1562c:	cmp	w8, #0xa
   15630:	b.ne	1ac50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63bc>  // b.any
   15634:	ldr	w8, [x19, #72]
   15638:	sub	w9, w8, #0x5
   1563c:	cmp	w9, #0x8
   15640:	b.cs	1ac4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63b8>  // b.hs, b.nlast
   15644:	ldr	w9, [x19, #76]
   15648:	cmp	w9, #0x4
   1564c:	b.hi	1ac50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63bc>  // b.pmore
   15650:	cmp	w8, #0xb
   15654:	mov	w21, #0x46                  	// #70
   15658:	b.eq	15664 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xdd0>  // b.none
   1565c:	cmp	w8, #0x7
   15660:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15664:	tst	w9, #0xfffffffb
   15668:	b	19c08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5374>
   1566c:	ldr	x8, [x19]
   15670:	mov	x0, x19
   15674:	ldr	x8, [x8, #40]
   15678:	blr	x8
   1567c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15680:	ldr	w8, [x19, #48]
   15684:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15688:	ldr	x8, [x19, #72]
   1568c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15690:	ldr	w9, [x8]
   15694:	cmp	w9, #0x1
   15698:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1569c:	ldr	x8, [x8, #16]
   156a0:	cmp	x8, #0x20
   156a4:	b.cc	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.lo, b.ul, b.last
   156a8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   156ac:	ldr	w8, [x19, #48]
   156b0:	cmp	w8, #0x4
   156b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   156b8:	ldr	w8, [x19, #76]
   156bc:	cmp	w8, #0x3
   156c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   156c4:	ldr	w8, [x19, #80]
   156c8:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   156cc:	b	18c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f0>
   156d0:	ldr	w8, [x19, #48]
   156d4:	cmp	w8, #0x4
   156d8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   156dc:	ldr	w8, [x19, #76]
   156e0:	cmp	w8, #0x3
   156e4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   156e8:	ldr	w8, [x19, #88]
   156ec:	cmp	w8, #0x1
   156f0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   156f4:	ldr	w8, [x19, #84]
   156f8:	cmp	w8, #0x8
   156fc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15700:	b	18aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4210>
   15704:	ldr	x8, [x19]
   15708:	mov	x0, x19
   1570c:	ldr	x8, [x8, #40]
   15710:	blr	x8
   15714:	tbz	w0, #0, 1a308 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a74>
   15718:	ldr	w8, [x19, #48]
   1571c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15720:	ldr	x8, [x19, #72]
   15724:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15728:	ldr	w9, [x8]
   1572c:	mov	w21, #0x1b                  	// #27
   15730:	cmp	w9, #0x1
   15734:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15738:	ldr	x8, [x8, #16]
   1573c:	cmp	x8, #0x100
   15740:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   15744:	ldr	w8, [x19, #48]
   15748:	cmp	w8, #0xa
   1574c:	b.ne	1a310 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a7c>  // b.any
   15750:	ldr	w9, [x19, #72]
   15754:	mov	w8, #0x51                  	// #81
   15758:	mov	w21, #0x51                  	// #81
   1575c:	cbnz	w9, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   15760:	ldr	w9, [x19, #76]
   15764:	ror	w9, w9, #4
   15768:	cmp	w9, #0x4
   1576c:	b	19970 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x50dc>
   15770:	ldr	w8, [x19, #48]
   15774:	cmp	w8, #0x4
   15778:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1577c:	ldr	w8, [x19, #76]
   15780:	cmp	w8, #0x4
   15784:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15788:	ldr	w8, [x19, #88]
   1578c:	cmp	w8, #0x1
   15790:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15794:	ldr	w8, [x19, #84]
   15798:	cmp	w8, #0x40
   1579c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   157a0:	b	185a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d0c>
   157a4:	ldr	w8, [x19, #48]
   157a8:	cmp	w8, #0x4
   157ac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   157b0:	ldr	w8, [x19, #76]
   157b4:	cmp	w8, #0x1
   157b8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   157bc:	ldr	w8, [x19, #88]
   157c0:	cmp	w8, #0x1
   157c4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   157c8:	ldr	w8, [x19, #84]
   157cc:	cmp	w8, #0x20
   157d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   157d4:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   157d8:	ldr	w8, [x19, #48]
   157dc:	cmp	w8, #0xa
   157e0:	b.ne	1ac5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>  // b.any
   157e4:	ldr	w8, [x19, #72]
   157e8:	sub	w9, w8, #0x5
   157ec:	cmp	w9, #0x8
   157f0:	b.cs	1ac58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c4>  // b.hs, b.nlast
   157f4:	ldr	w9, [x19, #76]
   157f8:	cmp	w9, #0x4
   157fc:	b.hi	1ac5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63c8>  // b.pmore
   15800:	cmp	w8, #0xb
   15804:	mov	w10, #0x4a                  	// #74
   15808:	b.eq	19d80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54ec>  // b.none
   1580c:	cmp	w8, #0x7
   15810:	mov	w21, #0x4a                  	// #74
   15814:	b.eq	19d80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54ec>  // b.none
   15818:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1581c:	ldr	w8, [x19, #48]
   15820:	cmp	w8, #0xa
   15824:	b.ne	15984 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x10f0>  // b.any
   15828:	ldr	w9, [x19, #72]
   1582c:	mov	w21, #0xa                   	// #10
   15830:	cmp	w9, #0x3
   15834:	b.ls	15978 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x10e4>  // b.plast
   15838:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1583c:	ldr	x8, [x19]
   15840:	mov	x0, x19
   15844:	ldr	x8, [x8, #40]
   15848:	blr	x8
   1584c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15850:	ldr	w8, [x19, #48]
   15854:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15858:	ldr	x8, [x19, #72]
   1585c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15860:	ldr	w9, [x8]
   15864:	cmp	w9, #0x1
   15868:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1586c:	ldr	x8, [x8, #16]
   15870:	mov	w9, #0xf1                  	// #241
   15874:	mov	w10, #0x2c                  	// #44
   15878:	add	x11, x8, #0x80
   1587c:	tst	x8, #0xf
   15880:	b	19e38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a4>
   15884:	ldr	w8, [x19, #48]
   15888:	cmp	w8, #0xa
   1588c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15890:	ldr	w8, [x19, #72]
   15894:	cmp	w8, #0x5
   15898:	b.cc	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.lo, b.ul, b.last
   1589c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   158a0:	ldr	w8, [x19, #48]
   158a4:	cmp	w8, #0x4
   158a8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158ac:	ldr	w8, [x19, #76]
   158b0:	cmp	w8, #0x4
   158b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158b8:	ldr	w8, [x19, #88]
   158bc:	cmp	w8, #0x1
   158c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158c4:	ldr	w8, [x19, #84]
   158c8:	cmp	w8, #0x8
   158cc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158d0:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   158d4:	ldr	w8, [x19, #48]
   158d8:	cmp	w8, #0x4
   158dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158e0:	ldr	w8, [x19, #76]
   158e4:	cmp	w8, #0x4
   158e8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158ec:	ldr	w8, [x19, #88]
   158f0:	cmp	w8, #0x1
   158f4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   158f8:	ldr	w8, [x19, #84]
   158fc:	cmp	w8, #0x10
   15900:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15904:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   15908:	ldr	w8, [x19, #48]
   1590c:	cmp	w8, #0x4
   15910:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15914:	ldr	w8, [x19, #76]
   15918:	cmp	w8, #0x2
   1591c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15920:	ldr	w8, [x19, #80]
   15924:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15928:	ldr	w8, [x19, #88]
   1592c:	cmp	w8, #0x1
   15930:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15934:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   15938:	ldr	w8, [x19, #48]
   1593c:	cmp	w8, #0x4
   15940:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15944:	ldr	w8, [x19, #76]
   15948:	cmp	w8, #0x1
   1594c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15950:	ldr	w8, [x19, #80]
   15954:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15958:	b	18c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f0>
   1595c:	ldr	w8, [x19, #48]
   15960:	cmp	w8, #0xa
   15964:	b.ne	15984 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x10f0>  // b.any
   15968:	ldr	w9, [x19, #72]
   1596c:	mov	w21, #0xa                   	// #10
   15970:	cmp	w9, #0x2
   15974:	b.hi	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.pmore
   15978:	ldr	w9, [x19, #76]
   1597c:	cmp	w9, #0x40
   15980:	b	19970 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x50dc>
   15984:	mov	w21, #0xa                   	// #10
   15988:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1598c:	ldr	w8, [x19, #48]
   15990:	cmp	w8, #0x3
   15994:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15998:	ldr	w8, [x19, #76]
   1599c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   159a0:	ldr	x8, [x19]
   159a4:	mov	x0, x19
   159a8:	ldr	x8, [x8, #56]
   159ac:	blr	x8
   159b0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   159b4:	ldr	x8, [x8]
   159b8:	mov	w9, w0
   159bc:	lsr	x9, x9, #3
   159c0:	ldrh	w10, [x8, #630]
   159c4:	cmp	w9, w10
   159c8:	b.cs	1b874 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fe0>  // b.hs, b.nlast
   159cc:	ldr	x8, [x8, #616]
   159d0:	ldrb	w8, [x8, x9]
   159d4:	and	w9, w0, #0x7
   159d8:	lsr	w8, w8, w9
   159dc:	tbz	w8, #0, 1b874 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fe0>
   159e0:	ldr	w9, [x19, #48]
   159e4:	add	x8, x19, #0x48
   159e8:	cmp	w9, #0x3
   159ec:	b.eq	1aee0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x664c>  // b.none
   159f0:	cmp	w9, #0xa
   159f4:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   159f8:	mov	x10, x8
   159fc:	b	1aee4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6650>
   15a00:	ldr	w8, [x19, #48]
   15a04:	cmp	w8, #0x4
   15a08:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15a0c:	ldr	w8, [x19, #76]
   15a10:	cmp	w8, #0x3
   15a14:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15a18:	ldr	w8, [x19, #88]
   15a1c:	cmp	w8, #0x1
   15a20:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15a24:	ldr	w8, [x19, #84]
   15a28:	cmp	w8, #0x10
   15a2c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15a30:	b	18aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4210>
   15a34:	ldr	x8, [x19]
   15a38:	mov	x0, x19
   15a3c:	ldr	x8, [x8, #40]
   15a40:	blr	x8
   15a44:	tbz	w0, #0, 1a840 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fac>
   15a48:	ldr	w8, [x19, #48]
   15a4c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15a50:	ldr	x0, [x19, #72]
   15a54:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15a58:	ldr	w8, [x0]
   15a5c:	cmp	w8, #0x1
   15a60:	b.ne	1a614 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d80>  // b.any
   15a64:	ldr	x8, [x0, #16]
   15a68:	mov	w21, #0x3d                  	// #61
   15a6c:	cmp	x8, #0x8, lsl #12
   15a70:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   15a74:	and	x8, x8, #0x8000000000000007
   15a78:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   15a7c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   15a80:	ldr	w8, [x19, #48]
   15a84:	cmp	w8, #0x3
   15a88:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15a8c:	ldr	w8, [x19, #76]
   15a90:	cmp	w8, #0x2
   15a94:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15a98:	ldr	x8, [x19]
   15a9c:	mov	x0, x19
   15aa0:	ldr	x8, [x8, #56]
   15aa4:	blr	x8
   15aa8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15aac:	ldr	x8, [x8]
   15ab0:	mov	w9, w0
   15ab4:	lsr	x9, x9, #3
   15ab8:	ldrh	w10, [x8, #1270]
   15abc:	cmp	w9, w10
   15ac0:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   15ac4:	ldr	x8, [x8, #1256]
   15ac8:	ldrb	w8, [x8, x9]
   15acc:	and	w9, w0, #0x7
   15ad0:	lsr	w8, w8, w9
   15ad4:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15ad8:	ldr	w8, [x19, #80]
   15adc:	cmp	w8, #0x20
   15ae0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ae4:	ldr	w9, [x19, #48]
   15ae8:	add	x8, x19, #0x48
   15aec:	cmp	w9, #0x3
   15af0:	b.eq	1afb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6724>  // b.none
   15af4:	cmp	w9, #0xa
   15af8:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   15afc:	add	x10, x8, #0x4
   15b00:	b	1afbc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6728>
   15b04:	ldr	w8, [x19, #48]
   15b08:	cmp	w8, #0xa
   15b0c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15b10:	ldr	w8, [x19, #72]
   15b14:	cmp	w8, #0x4
   15b18:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   15b1c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15b20:	ldr	w8, [x19, #76]
   15b24:	ror	w8, w8, #3
   15b28:	cmp	w8, #0x4
   15b2c:	b.cc	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.lo, b.ul, b.last
   15b30:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15b34:	ldr	x8, [x19]
   15b38:	mov	x0, x19
   15b3c:	ldr	x8, [x8, #40]
   15b40:	blr	x8
   15b44:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15b48:	ldr	w8, [x19, #48]
   15b4c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15b50:	ldr	x8, [x19, #72]
   15b54:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15b58:	ldr	w9, [x8]
   15b5c:	cmp	w9, #0x1
   15b60:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15b64:	ldr	x8, [x8, #16]
   15b68:	mov	w9, #0x1f9                 	// #505
   15b6c:	mov	w10, #0x41                  	// #65
   15b70:	tst	x8, #0x7
   15b74:	ccmp	x8, x9, #0x2, eq  // eq = none
   15b78:	b	19e3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a8>
   15b7c:	ldr	w8, [x19, #48]
   15b80:	cmp	w8, #0x4
   15b84:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15b88:	ldr	w8, [x19, #76]
   15b8c:	cmp	w8, #0x2
   15b90:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15b94:	ldr	w8, [x19, #88]
   15b98:	cmp	w8, #0x1
   15b9c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ba0:	ldr	w8, [x19, #84]
   15ba4:	cmp	w8, #0x8
   15ba8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15bac:	ldr	w8, [x19, #80]
   15bb0:	cmp	w8, #0x8
   15bb4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15bb8:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   15bbc:	ldr	w8, [x19, #48]
   15bc0:	cmp	w8, #0x4
   15bc4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15bc8:	ldr	w8, [x19, #76]
   15bcc:	cmp	w8, #0x1
   15bd0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15bd4:	ldr	w8, [x19, #88]
   15bd8:	cmp	w8, #0x1
   15bdc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15be0:	ldr	w8, [x19, #84]
   15be4:	cmp	w8, #0x8
   15be8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15bec:	b	18aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4210>
   15bf0:	ldr	x8, [x19]
   15bf4:	mov	x0, x19
   15bf8:	ldr	x8, [x8, #40]
   15bfc:	blr	x8
   15c00:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15c04:	ldr	w8, [x19, #48]
   15c08:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15c0c:	ldr	x8, [x19, #72]
   15c10:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15c14:	ldr	w9, [x8]
   15c18:	cmp	w9, #0x1
   15c1c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15c20:	ldr	x8, [x8, #16]
   15c24:	mov	w9, #0x7d                  	// #125
   15c28:	mov	w10, #0x3b                  	// #59
   15c2c:	b	16664 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1dd0>
   15c30:	ldr	w8, [x19, #48]
   15c34:	cmp	w8, #0x3
   15c38:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15c3c:	ldr	w8, [x19, #76]
   15c40:	cmp	w8, #0x2
   15c44:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15c48:	ldr	x8, [x19]
   15c4c:	mov	x0, x19
   15c50:	ldr	x8, [x8, #56]
   15c54:	blr	x8
   15c58:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15c5c:	ldr	x8, [x8]
   15c60:	mov	w9, w0
   15c64:	lsr	x9, x9, #3
   15c68:	ldrh	w10, [x8, #1270]
   15c6c:	cmp	w9, w10
   15c70:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   15c74:	ldr	x8, [x8, #1256]
   15c78:	ldrb	w8, [x8, x9]
   15c7c:	and	w9, w0, #0x7
   15c80:	lsr	w8, w8, w9
   15c84:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15c88:	ldr	w8, [x19, #80]
   15c8c:	cmp	w8, #0x20
   15c90:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15c94:	ldr	w9, [x19, #48]
   15c98:	add	x8, x19, #0x48
   15c9c:	cmp	w9, #0x3
   15ca0:	b.eq	1aff0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x675c>  // b.none
   15ca4:	cmp	w9, #0xa
   15ca8:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   15cac:	add	x10, x8, #0x4
   15cb0:	b	1aff4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6760>
   15cb4:	ldr	w8, [x19, #48]
   15cb8:	cmp	w8, #0x3
   15cbc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15cc0:	ldr	w8, [x19, #76]
   15cc4:	cmp	w8, #0x2
   15cc8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ccc:	ldr	x8, [x19]
   15cd0:	mov	x0, x19
   15cd4:	ldr	x8, [x8, #56]
   15cd8:	blr	x8
   15cdc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15ce0:	ldr	x8, [x8]
   15ce4:	mov	w9, w0
   15ce8:	lsr	x9, x9, #3
   15cec:	ldrh	w10, [x8, #1270]
   15cf0:	cmp	w9, w10
   15cf4:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   15cf8:	ldr	x8, [x8, #1256]
   15cfc:	ldrb	w8, [x8, x9]
   15d00:	and	w9, w0, #0x7
   15d04:	lsr	w8, w8, w9
   15d08:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15d0c:	ldr	w8, [x19, #80]
   15d10:	cmp	w8, #0x20
   15d14:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d18:	ldr	w9, [x19, #48]
   15d1c:	add	x8, x19, #0x48
   15d20:	cmp	w9, #0x3
   15d24:	b.eq	1b028 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6794>  // b.none
   15d28:	cmp	w9, #0xa
   15d2c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   15d30:	add	x10, x8, #0x4
   15d34:	b	1b02c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6798>
   15d38:	ldr	w8, [x19, #48]
   15d3c:	cmp	w8, #0x4
   15d40:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d44:	ldr	w8, [x19, #76]
   15d48:	cmp	w8, #0x2
   15d4c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d50:	ldr	w8, [x19, #88]
   15d54:	cmp	w8, #0x1
   15d58:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d5c:	ldr	w8, [x19, #84]
   15d60:	cmp	w8, #0x40
   15d64:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d68:	ldr	w8, [x19, #80]
   15d6c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15d70:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   15d74:	ldr	w8, [x19, #48]
   15d78:	cmp	w8, #0x3
   15d7c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d80:	ldr	w8, [x19, #76]
   15d84:	cmp	w8, #0x3
   15d88:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15d8c:	ldr	x8, [x19]
   15d90:	mov	x0, x19
   15d94:	ldr	x8, [x8, #56]
   15d98:	blr	x8
   15d9c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15da0:	ldr	x8, [x8]
   15da4:	mov	w9, w0
   15da8:	lsr	x9, x9, #3
   15dac:	ldrh	w10, [x8, #86]
   15db0:	cmp	w9, w10
   15db4:	b.cs	15dd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1544>  // b.hs, b.nlast
   15db8:	ldr	x8, [x8, #72]
   15dbc:	ldrb	w8, [x8, x9]
   15dc0:	and	w9, w0, #0x7
   15dc4:	lsr	w8, w8, w9
   15dc8:	tbz	w8, #0, 15dd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1544>
   15dcc:	ldr	w8, [x19, #80]
   15dd0:	cmp	w8, #0x40
   15dd4:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   15dd8:	mov	w21, #0x6a                  	// #106
   15ddc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   15de0:	ldr	x8, [x19]
   15de4:	mov	x0, x19
   15de8:	ldr	x8, [x8, #40]
   15dec:	blr	x8
   15df0:	tbz	w0, #0, 1a318 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a84>
   15df4:	ldr	w8, [x19, #48]
   15df8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15dfc:	ldr	x8, [x19, #72]
   15e00:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15e04:	ldr	w9, [x8]
   15e08:	mov	w21, #0x1c                  	// #28
   15e0c:	cmp	w9, #0x1
   15e10:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15e14:	ldr	x8, [x8, #16]
   15e18:	cmp	x8, #0x20
   15e1c:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   15e20:	ldr	x8, [x19]
   15e24:	mov	x0, x19
   15e28:	ldr	x8, [x8, #40]
   15e2c:	blr	x8
   15e30:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15e34:	ldr	w8, [x19, #48]
   15e38:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15e3c:	ldr	x8, [x19, #72]
   15e40:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15e44:	ldr	w9, [x8]
   15e48:	cmp	w9, #0x1
   15e4c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15e50:	ldr	x8, [x8, #16]
   15e54:	mov	w9, #0x3f9                 	// #1017
   15e58:	mov	w10, #0x3f                  	// #63
   15e5c:	add	x11, x8, #0x200
   15e60:	tst	x8, #0x7
   15e64:	b	19e38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a4>
   15e68:	ldr	w8, [x19, #48]
   15e6c:	cmp	w8, #0x4
   15e70:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15e74:	ldr	w8, [x19, #76]
   15e78:	cmp	w8, #0x4
   15e7c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15e80:	ldr	w8, [x19, #80]
   15e84:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15e88:	b	18c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f0>
   15e8c:	ldr	x8, [x19]
   15e90:	mov	x0, x19
   15e94:	ldr	x8, [x8, #40]
   15e98:	blr	x8
   15e9c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15ea0:	ldr	w8, [x19, #48]
   15ea4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   15ea8:	ldr	x8, [x19, #72]
   15eac:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15eb0:	ldr	w9, [x8]
   15eb4:	cmp	w9, #0x1
   15eb8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ebc:	ldr	x8, [x8, #16]
   15ec0:	mov	w9, #0x1fd                 	// #509
   15ec4:	mov	w10, #0x3a                  	// #58
   15ec8:	add	x11, x8, #0x100
   15ecc:	b	19e34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a0>
   15ed0:	ldr	w8, [x19, #48]
   15ed4:	cmp	w8, #0x4
   15ed8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15edc:	ldr	w8, [x19, #76]
   15ee0:	cmp	w8, #0x4
   15ee4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ee8:	ldr	w8, [x19, #88]
   15eec:	cmp	w8, #0x1
   15ef0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ef4:	ldr	w8, [x19, #84]
   15ef8:	cmp	w8, #0x40
   15efc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15f00:	b	194a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c0c>
   15f04:	ldr	x8, [x19]
   15f08:	mov	x0, x19
   15f0c:	ldr	x8, [x8, #40]
   15f10:	blr	x8
   15f14:	tbz	w0, #0, 1a018 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5784>
   15f18:	ldr	x8, [x19, #72]
   15f1c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   15f20:	ldr	w9, [x8]
   15f24:	mov	w21, #0x4                   	// #4
   15f28:	cmp	w9, #0x1
   15f2c:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   15f30:	ldr	x8, [x8, #16]
   15f34:	add	x8, x8, #0x100, lsl #12
   15f38:	cmp	x8, #0x200, lsl #12
   15f3c:	b	182a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3a0c>
   15f40:	ldr	w8, [x19, #48]
   15f44:	cmp	w8, #0x3
   15f48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15f4c:	ldr	w8, [x19, #76]
   15f50:	cmp	w8, #0x2
   15f54:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15f58:	ldr	x8, [x19]
   15f5c:	mov	x0, x19
   15f60:	ldr	x8, [x8, #56]
   15f64:	blr	x8
   15f68:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   15f6c:	ldr	x8, [x8]
   15f70:	mov	w9, w0
   15f74:	lsr	x9, x9, #3
   15f78:	ldrh	w10, [x8, #1270]
   15f7c:	cmp	w9, w10
   15f80:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   15f84:	ldr	x8, [x8, #1256]
   15f88:	ldrb	w8, [x8, x9]
   15f8c:	and	w9, w0, #0x7
   15f90:	lsr	w8, w8, w9
   15f94:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   15f98:	ldr	w8, [x19, #80]
   15f9c:	cmp	w8, #0x40
   15fa0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15fa4:	ldr	w9, [x19, #48]
   15fa8:	add	x8, x19, #0x48
   15fac:	cmp	w9, #0x3
   15fb0:	b.eq	1b04c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67b8>  // b.none
   15fb4:	cmp	w9, #0xa
   15fb8:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   15fbc:	add	x10, x8, #0x4
   15fc0:	b	1b050 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67bc>
   15fc4:	ldr	w8, [x19, #48]
   15fc8:	cmp	w8, #0x4
   15fcc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15fd0:	ldr	w8, [x19, #76]
   15fd4:	cmp	w8, #0x3
   15fd8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15fdc:	ldr	w8, [x19, #88]
   15fe0:	cmp	w8, #0x1
   15fe4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15fe8:	ldr	w8, [x19, #84]
   15fec:	cmp	w8, #0x40
   15ff0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   15ff4:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   15ff8:	ldr	w8, [x19, #48]
   15ffc:	cmp	w8, #0x3
   16000:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16004:	ldr	w8, [x19, #76]
   16008:	cmp	w8, #0x1
   1600c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16010:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16014:	ldr	w8, [x19, #72]
   16018:	ldr	x9, [x9]
   1601c:	lsr	x10, x8, #3
   16020:	ldrh	w11, [x9, #1302]
   16024:	cmp	w10, w11
   16028:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   1602c:	ldr	x9, [x9, #1288]
   16030:	and	w8, w8, #0x7
   16034:	ldrb	w9, [x9, x10]
   16038:	lsr	w8, w9, w8
   1603c:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16040:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16044:	ldr	w8, [x19, #48]
   16048:	cmp	w8, #0x4
   1604c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16050:	ldr	w8, [x19, #76]
   16054:	cmp	w8, #0x2
   16058:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1605c:	ldr	w8, [x19, #88]
   16060:	cmp	w8, #0x1
   16064:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16068:	ldr	w8, [x19, #84]
   1606c:	cmp	w8, #0x10
   16070:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16074:	ldr	w8, [x19, #80]
   16078:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1607c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16080:	ldr	w8, [x19, #48]
   16084:	cmp	w8, #0x3
   16088:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1608c:	ldr	w8, [x19, #76]
   16090:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16094:	ldr	x8, [x19]
   16098:	mov	x0, x19
   1609c:	ldr	x8, [x8, #56]
   160a0:	blr	x8
   160a4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   160a8:	ldr	x8, [x8]
   160ac:	mov	w9, w0
   160b0:	lsr	x9, x9, #3
   160b4:	ldrh	w10, [x8, #566]
   160b8:	cmp	w9, w10
   160bc:	b.cs	1b888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ff4>  // b.hs, b.nlast
   160c0:	ldr	x8, [x8, #552]
   160c4:	ldrb	w8, [x8, x9]
   160c8:	and	w9, w0, #0x7
   160cc:	lsr	w8, w8, w9
   160d0:	tbz	w8, #0, 1b888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ff4>
   160d4:	ldr	w9, [x19, #48]
   160d8:	add	x8, x19, #0x48
   160dc:	cmp	w9, #0x3
   160e0:	b.eq	1af04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6670>  // b.none
   160e4:	cmp	w9, #0xa
   160e8:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   160ec:	mov	x10, x8
   160f0:	b	1af08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6674>
   160f4:	ldr	w8, [x19, #48]
   160f8:	cmp	w8, #0x3
   160fc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16100:	ldr	w8, [x19, #76]
   16104:	cmp	w8, #0x2
   16108:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1610c:	ldr	x8, [x19]
   16110:	mov	x0, x19
   16114:	ldr	x8, [x8, #56]
   16118:	blr	x8
   1611c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16120:	ldr	x8, [x8]
   16124:	mov	w9, w0
   16128:	lsr	x9, x9, #3
   1612c:	ldrh	w10, [x8, #1270]
   16130:	cmp	w9, w10
   16134:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16138:	ldr	x8, [x8, #1256]
   1613c:	ldrb	w8, [x8, x9]
   16140:	and	w9, w0, #0x7
   16144:	lsr	w8, w8, w9
   16148:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1614c:	ldr	w8, [x19, #80]
   16150:	cmp	w8, #0x40
   16154:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16158:	ldr	w9, [x19, #48]
   1615c:	add	x8, x19, #0x48
   16160:	cmp	w9, #0x3
   16164:	b.eq	1b070 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67dc>  // b.none
   16168:	cmp	w9, #0xa
   1616c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16170:	add	x10, x8, #0x4
   16174:	b	1b074 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x67e0>
   16178:	ldr	w8, [x19, #48]
   1617c:	cmp	w8, #0x4
   16180:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16184:	ldr	w8, [x19, #76]
   16188:	cmp	w8, #0x4
   1618c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16190:	ldr	w8, [x19, #88]
   16194:	cmp	w8, #0x1
   16198:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1619c:	ldr	w8, [x19, #84]
   161a0:	cmp	w8, #0x20
   161a4:	b.eq	194a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c0c>  // b.none
   161a8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   161ac:	ldr	x8, [x19]
   161b0:	mov	x0, x19
   161b4:	ldr	x8, [x8, #40]
   161b8:	blr	x8
   161bc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   161c0:	ldr	w8, [x19, #48]
   161c4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   161c8:	ldr	x8, [x19, #72]
   161cc:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   161d0:	ldr	w9, [x8]
   161d4:	cmp	w9, #0x1
   161d8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   161dc:	ldr	x8, [x8, #16]
   161e0:	mov	w9, #0x4                   	// #4
   161e4:	cmp	x8, #0x3e
   161e8:	and	x8, x8, #0x1
   161ec:	cset	w10, hi  // hi = pmore
   161f0:	orr	x8, x8, x10
   161f4:	cmp	x8, #0x1
   161f8:	mov	w8, #0x35                  	// #53
   161fc:	csel	w21, w8, w9, eq  // eq = none
   16200:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   16204:	ldr	w8, [x19, #48]
   16208:	cmp	w8, #0x3
   1620c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16210:	ldr	w8, [x19, #76]
   16214:	cmp	w8, #0x2
   16218:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1621c:	ldr	x8, [x19]
   16220:	mov	x0, x19
   16224:	ldr	x8, [x8, #56]
   16228:	blr	x8
   1622c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16230:	ldr	x8, [x8]
   16234:	mov	w9, w0
   16238:	lsr	x9, x9, #3
   1623c:	ldrh	w10, [x8, #1270]
   16240:	cmp	w9, w10
   16244:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16248:	ldr	x8, [x8, #1256]
   1624c:	ldrb	w8, [x8, x9]
   16250:	and	w9, w0, #0x7
   16254:	lsr	w8, w8, w9
   16258:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1625c:	ldr	w8, [x19, #80]
   16260:	cmp	w8, #0x40
   16264:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16268:	ldr	w9, [x19, #48]
   1626c:	add	x8, x19, #0x48
   16270:	cmp	w9, #0x3
   16274:	b.eq	1b0a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6814>  // b.none
   16278:	cmp	w9, #0xa
   1627c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16280:	add	x10, x8, #0x4
   16284:	b	1b0ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6818>
   16288:	ldr	w8, [x19, #48]
   1628c:	cmp	w8, #0x4
   16290:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16294:	ldr	w8, [x19, #76]
   16298:	cmp	w8, #0x4
   1629c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   162a0:	ldr	w8, [x19, #80]
   162a4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   162a8:	b	18c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f0>
   162ac:	ldr	w8, [x19, #48]
   162b0:	cmp	w8, #0x3
   162b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   162b8:	ldr	w8, [x19, #76]
   162bc:	cmp	w8, #0x2
   162c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   162c4:	ldr	x8, [x19]
   162c8:	mov	x0, x19
   162cc:	ldr	x8, [x8, #56]
   162d0:	blr	x8
   162d4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   162d8:	ldr	x8, [x8]
   162dc:	mov	w9, w0
   162e0:	lsr	x9, x9, #3
   162e4:	ldrh	w10, [x8, #1270]
   162e8:	cmp	w9, w10
   162ec:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   162f0:	ldr	x8, [x8, #1256]
   162f4:	ldrb	w8, [x8, x9]
   162f8:	and	w9, w0, #0x7
   162fc:	lsr	w8, w8, w9
   16300:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16304:	ldr	w8, [x19, #80]
   16308:	cmp	w8, #0x20
   1630c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16310:	ldr	w9, [x19, #48]
   16314:	add	x8, x19, #0x48
   16318:	cmp	w9, #0x3
   1631c:	b.eq	1b0cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6838>  // b.none
   16320:	cmp	w9, #0xa
   16324:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16328:	add	x10, x8, #0x4
   1632c:	b	1b0d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x683c>
   16330:	ldr	x8, [x19]
   16334:	mov	x0, x19
   16338:	ldr	x8, [x8, #40]
   1633c:	blr	x8
   16340:	tbz	w0, #0, 1a320 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a8c>
   16344:	ldr	w8, [x19, #48]
   16348:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1634c:	ldr	x8, [x19, #72]
   16350:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   16354:	ldr	w9, [x8]
   16358:	mov	w21, #0x18                  	// #24
   1635c:	cmp	w9, #0x1
   16360:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   16364:	ldr	x8, [x8, #16]
   16368:	cmp	x8, #0x2
   1636c:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   16370:	ldr	w8, [x19, #48]
   16374:	cmp	w8, #0x3
   16378:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1637c:	ldr	w8, [x19, #76]
   16380:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16384:	ldr	x8, [x19]
   16388:	mov	x0, x19
   1638c:	ldr	x8, [x8, #56]
   16390:	blr	x8
   16394:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16398:	ldr	x8, [x8]
   1639c:	mov	w9, w0
   163a0:	lsr	x9, x9, #3
   163a4:	ldrh	w10, [x8, #534]
   163a8:	cmp	w9, w10
   163ac:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   163b0:	ldr	x8, [x8, #520]
   163b4:	ldrb	w8, [x8, x9]
   163b8:	and	w9, w0, #0x7
   163bc:	lsr	w8, w8, w9
   163c0:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   163c4:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   163c8:	ldr	w8, [x19, #48]
   163cc:	cmp	w8, #0x5
   163d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   163d4:	ldr	w8, [x19, #72]
   163d8:	mov	w9, #0x5e                  	// #94
   163dc:	cmp	w8, #0x4
   163e0:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   163e4:	ldr	w8, [x19, #48]
   163e8:	cmp	w8, #0x7
   163ec:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   163f0:	ldr	w8, [x19, #92]
   163f4:	mov	w21, #0x4                   	// #4
   163f8:	add	w8, w8, #0x1
   163fc:	cmp	w8, #0x1b
   16400:	b.hi	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.pmore
   16404:	mov	w9, #0x1                   	// #1
   16408:	lsl	w8, w9, w8
   1640c:	mov	w9, #0x31                  	// #49
   16410:	movk	w9, #0xc00, lsl #16
   16414:	tst	w8, w9
   16418:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1641c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   16420:	ldr	w8, [x19, #48]
   16424:	cmp	w8, #0x3
   16428:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1642c:	ldr	w8, [x19, #76]
   16430:	cmp	w8, #0x2
   16434:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16438:	ldr	x8, [x19]
   1643c:	mov	x0, x19
   16440:	ldr	x8, [x8, #56]
   16444:	blr	x8
   16448:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1644c:	ldr	x8, [x8]
   16450:	mov	w9, w0
   16454:	lsr	x9, x9, #3
   16458:	ldrh	w10, [x8, #1270]
   1645c:	cmp	w9, w10
   16460:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16464:	ldr	x8, [x8, #1256]
   16468:	ldrb	w8, [x8, x9]
   1646c:	and	w9, w0, #0x7
   16470:	lsr	w8, w8, w9
   16474:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16478:	ldr	w8, [x19, #80]
   1647c:	cmp	w8, #0x20
   16480:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16484:	ldr	w9, [x19, #48]
   16488:	add	x8, x19, #0x48
   1648c:	cmp	w9, #0x3
   16490:	b.eq	1b0f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x685c>  // b.none
   16494:	cmp	w9, #0xa
   16498:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1649c:	add	x10, x8, #0x4
   164a0:	b	1b0f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6860>
   164a4:	ldr	x8, [x19]
   164a8:	mov	x0, x19
   164ac:	ldr	x8, [x8, #40]
   164b0:	blr	x8
   164b4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   164b8:	ldr	w8, [x19, #48]
   164bc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   164c0:	ldr	x8, [x19, #72]
   164c4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   164c8:	ldr	w9, [x8]
   164cc:	cmp	w9, #0x1
   164d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   164d4:	ldr	x8, [x8, #16]
   164d8:	add	x8, x8, #0x100
   164dc:	cmp	x8, #0x1ff
   164e0:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   164e4:	ldr	x8, [x19]
   164e8:	mov	x0, x19
   164ec:	ldr	x8, [x8, #40]
   164f0:	blr	x8
   164f4:	tbz	w0, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   164f8:	ldr	w8, [x19, #48]
   164fc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   16500:	ldr	x0, [x19, #72]
   16504:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   16508:	ldr	w8, [x0]
   1650c:	cmp	w8, #0x1
   16510:	b.ne	1ae38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65a4>  // b.any
   16514:	ldr	x8, [x0, #16]
   16518:	cmp	x8, #0x1, lsl #12
   1651c:	b.cs	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.hs, b.nlast
   16520:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16524:	ldr	w8, [x19, #48]
   16528:	cmp	w8, #0x4
   1652c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16530:	ldr	w8, [x19, #76]
   16534:	cmp	w8, #0x1
   16538:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1653c:	ldr	w8, [x19, #88]
   16540:	cmp	w8, #0x2
   16544:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16548:	ldr	w8, [x19, #84]
   1654c:	cmp	w8, #0x8
   16550:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16554:	ldr	w8, [x19, #80]
   16558:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1655c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16560:	ldr	w8, [x19, #48]
   16564:	cmp	w8, #0x5
   16568:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1656c:	ldr	w8, [x19, #72]
   16570:	mov	w9, #0x25                  	// #37
   16574:	cmp	w8, #0x10
   16578:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   1657c:	ldr	w8, [x19, #48]
   16580:	cmp	w8, #0x3
   16584:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16588:	ldr	w8, [x19, #76]
   1658c:	cmp	w8, #0x3
   16590:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16594:	ldr	x8, [x19]
   16598:	mov	x0, x19
   1659c:	ldr	x8, [x8, #56]
   165a0:	blr	x8
   165a4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   165a8:	ldr	x8, [x8]
   165ac:	mov	w9, w0
   165b0:	lsr	x9, x9, #3
   165b4:	ldrh	w10, [x8, #86]
   165b8:	cmp	w9, w10
   165bc:	b.cs	165e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d4c>  // b.hs, b.nlast
   165c0:	ldr	x8, [x8, #72]
   165c4:	ldrb	w8, [x8, x9]
   165c8:	and	w9, w0, #0x7
   165cc:	lsr	w8, w8, w9
   165d0:	tbz	w8, #0, 165e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x1d4c>
   165d4:	ldr	w8, [x19, #80]
   165d8:	cmp	w8, #0x8
   165dc:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   165e0:	mov	w21, #0x69                  	// #105
   165e4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   165e8:	ldr	x8, [x19]
   165ec:	mov	x0, x19
   165f0:	ldr	x8, [x8, #40]
   165f4:	blr	x8
   165f8:	tbz	w0, #0, 1a328 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a94>
   165fc:	ldr	w8, [x19, #48]
   16600:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   16604:	ldr	x8, [x19, #72]
   16608:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1660c:	ldr	w10, [x8]
   16610:	mov	w9, #0x43                  	// #67
   16614:	mov	w21, #0x43                  	// #67
   16618:	cmp	w10, #0x1
   1661c:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   16620:	ldr	x8, [x8, #16]
   16624:	b	18204 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3970>
   16628:	ldr	x8, [x19]
   1662c:	mov	x0, x19
   16630:	ldr	x8, [x8, #40]
   16634:	blr	x8
   16638:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1663c:	ldr	w8, [x19, #48]
   16640:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   16644:	ldr	x8, [x19, #72]
   16648:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1664c:	ldr	w9, [x8]
   16650:	cmp	w9, #0x1
   16654:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16658:	ldr	x8, [x8, #16]
   1665c:	mov	w9, #0xfd                  	// #253
   16660:	mov	w10, #0x3c                  	// #60
   16664:	tst	x8, #0x3
   16668:	ccmp	x8, x9, #0x2, eq  // eq = none
   1666c:	b	19e3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a8>
   16670:	ldr	x8, [x19]
   16674:	mov	x0, x19
   16678:	ldr	x8, [x8, #40]
   1667c:	blr	x8
   16680:	tbz	w0, #0, 1a8f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6060>
   16684:	ldr	w8, [x19, #48]
   16688:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1668c:	ldr	x0, [x19, #72]
   16690:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   16694:	ldr	w8, [x0]
   16698:	cmp	w8, #0x1
   1669c:	b.ne	1a634 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5da0>  // b.any
   166a0:	ldr	x8, [x0, #16]
   166a4:	mov	w21, #0x38                  	// #56
   166a8:	cmp	x8, #0x4, lsl #12
   166ac:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   166b0:	and	x8, x8, #0x8000000000000003
   166b4:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   166b8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   166bc:	ldr	w8, [x19, #48]
   166c0:	cmp	w8, #0x4
   166c4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   166c8:	ldr	w8, [x19, #76]
   166cc:	cmp	w8, #0x4
   166d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   166d4:	ldr	w8, [x19, #88]
   166d8:	cmp	w8, #0x1
   166dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   166e0:	ldr	w8, [x19, #84]
   166e4:	cmp	w8, #0x8
   166e8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   166ec:	b	18aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4210>
   166f0:	ldr	w8, [x19, #48]
   166f4:	cmp	w8, #0x4
   166f8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   166fc:	ldr	w8, [x19, #76]
   16700:	cmp	w8, #0x2
   16704:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16708:	ldr	w8, [x19, #88]
   1670c:	cmp	w8, #0x1
   16710:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16714:	ldr	w8, [x19, #84]
   16718:	cmp	w8, #0x40
   1671c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16720:	ldr	w8, [x19, #80]
   16724:	cmp	w8, #0x2
   16728:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1672c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16730:	ldr	w8, [x19, #48]
   16734:	cmp	w8, #0x4
   16738:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1673c:	ldr	w8, [x19, #76]
   16740:	cmp	w8, #0x1
   16744:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16748:	ldr	w8, [x19, #88]
   1674c:	cmp	w8, #0x1
   16750:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16754:	ldr	w8, [x19, #84]
   16758:	cmp	w8, #0x40
   1675c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16760:	b	185a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d0c>
   16764:	ldr	w8, [x19, #48]
   16768:	cmp	w8, #0x4
   1676c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16770:	ldr	w8, [x19, #76]
   16774:	cmp	w8, #0x2
   16778:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1677c:	ldr	w8, [x19, #88]
   16780:	cmp	w8, #0x1
   16784:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16788:	ldr	w8, [x19, #84]
   1678c:	cmp	w8, #0x10
   16790:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16794:	ldr	w8, [x19, #80]
   16798:	cmp	w8, #0x8
   1679c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167a0:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   167a4:	ldr	w8, [x19, #48]
   167a8:	cmp	w8, #0x4
   167ac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167b0:	ldr	w8, [x19, #76]
   167b4:	cmp	w8, #0x2
   167b8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167bc:	ldr	w8, [x19, #88]
   167c0:	cmp	w8, #0x1
   167c4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167c8:	ldr	w8, [x19, #84]
   167cc:	cmp	w8, #0x20
   167d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167d4:	ldr	w8, [x19, #80]
   167d8:	cmp	w8, #0x2
   167dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167e0:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   167e4:	ldr	w8, [x19, #48]
   167e8:	cmp	w8, #0x3
   167ec:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167f0:	ldr	w8, [x19, #76]
   167f4:	cmp	w8, #0x2
   167f8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   167fc:	ldr	x8, [x19]
   16800:	mov	x0, x19
   16804:	ldr	x8, [x8, #56]
   16808:	blr	x8
   1680c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16810:	ldr	x8, [x8]
   16814:	mov	w9, w0
   16818:	lsr	x9, x9, #3
   1681c:	ldrh	w10, [x8, #1270]
   16820:	cmp	w9, w10
   16824:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16828:	ldr	x8, [x8, #1256]
   1682c:	ldrb	w8, [x8, x9]
   16830:	and	w9, w0, #0x7
   16834:	lsr	w8, w8, w9
   16838:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1683c:	ldr	w8, [x19, #80]
   16840:	cmp	w8, #0x40
   16844:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16848:	ldr	w9, [x19, #48]
   1684c:	add	x8, x19, #0x48
   16850:	cmp	w9, #0x3
   16854:	b.eq	1b128 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6894>  // b.none
   16858:	cmp	w9, #0xa
   1685c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16860:	add	x10, x8, #0x4
   16864:	b	1b12c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6898>
   16868:	ldr	w8, [x19, #48]
   1686c:	cmp	w8, #0x3
   16870:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16874:	ldr	w8, [x19, #76]
   16878:	cmp	w8, #0x2
   1687c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16880:	ldr	x8, [x19]
   16884:	mov	x0, x19
   16888:	ldr	x8, [x8, #56]
   1688c:	blr	x8
   16890:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16894:	ldr	x8, [x8]
   16898:	mov	w9, w0
   1689c:	lsr	x9, x9, #3
   168a0:	ldrh	w10, [x8, #1270]
   168a4:	cmp	w9, w10
   168a8:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   168ac:	ldr	x8, [x8, #1256]
   168b0:	ldrb	w8, [x8, x9]
   168b4:	and	w9, w0, #0x7
   168b8:	lsr	w8, w8, w9
   168bc:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   168c0:	ldr	w8, [x19, #80]
   168c4:	cmp	w8, #0x20
   168c8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   168cc:	ldr	w9, [x19, #48]
   168d0:	add	x8, x19, #0x48
   168d4:	cmp	w9, #0x3
   168d8:	b.eq	1b148 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x68b4>  // b.none
   168dc:	cmp	w9, #0xa
   168e0:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   168e4:	add	x10, x8, #0x4
   168e8:	b	1b14c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x68b8>
   168ec:	ldr	w8, [x19, #48]
   168f0:	cmp	w8, #0x3
   168f4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   168f8:	ldr	w8, [x19, #76]
   168fc:	cmp	w8, #0x2
   16900:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16904:	ldr	x8, [x19]
   16908:	mov	x0, x19
   1690c:	ldr	x8, [x8, #56]
   16910:	blr	x8
   16914:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16918:	ldr	x8, [x8]
   1691c:	mov	w9, w0
   16920:	lsr	x9, x9, #3
   16924:	ldrh	w10, [x8, #1270]
   16928:	cmp	w9, w10
   1692c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16930:	ldr	x8, [x8, #1256]
   16934:	ldrb	w8, [x8, x9]
   16938:	and	w9, w0, #0x7
   1693c:	lsr	w8, w8, w9
   16940:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16944:	ldr	w8, [x19, #80]
   16948:	cmp	w8, #0x40
   1694c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16950:	ldr	w9, [x19, #48]
   16954:	add	x8, x19, #0x48
   16958:	cmp	w9, #0x3
   1695c:	b.eq	1b168 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x68d4>  // b.none
   16960:	cmp	w9, #0xa
   16964:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16968:	add	x10, x8, #0x4
   1696c:	b	1b16c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x68d8>
   16970:	ldr	w8, [x19, #48]
   16974:	cmp	w8, #0x4
   16978:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1697c:	ldr	w8, [x19, #76]
   16980:	cmp	w8, #0x2
   16984:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16988:	ldr	w8, [x19, #88]
   1698c:	cmp	w8, #0x2
   16990:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16994:	ldr	w8, [x19, #84]
   16998:	cmp	w8, #0x20
   1699c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   169a0:	ldr	w8, [x19, #80]
   169a4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   169a8:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   169ac:	ldr	w8, [x19, #48]
   169b0:	cmp	w8, #0x3
   169b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   169b8:	ldr	w8, [x19, #76]
   169bc:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   169c0:	ldr	x8, [x19]
   169c4:	mov	x0, x19
   169c8:	ldr	x8, [x8, #56]
   169cc:	blr	x8
   169d0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   169d4:	ldr	x8, [x8]
   169d8:	mov	w9, w0
   169dc:	lsr	x9, x9, #3
   169e0:	ldrh	w10, [x8, #22]
   169e4:	cmp	w9, w10
   169e8:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   169ec:	ldr	x8, [x8, #8]
   169f0:	ldrb	w8, [x8, x9]
   169f4:	and	w9, w0, #0x7
   169f8:	lsr	w8, w8, w9
   169fc:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16a00:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16a04:	ldr	w8, [x19, #48]
   16a08:	cmp	w8, #0x4
   16a0c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16a10:	ldr	w8, [x19, #76]
   16a14:	cmp	w8, #0x2
   16a18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16a1c:	ldr	w8, [x19, #88]
   16a20:	cmp	w8, #0x1
   16a24:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16a28:	ldr	w8, [x19, #84]
   16a2c:	cmp	w8, #0x8
   16a30:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16a34:	ldr	w8, [x19, #80]
   16a38:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16a3c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16a40:	ldr	w8, [x19, #48]
   16a44:	cmp	w8, #0x3
   16a48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16a4c:	ldr	w8, [x19, #76]
   16a50:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16a54:	ldr	x8, [x19]
   16a58:	mov	x0, x19
   16a5c:	ldr	x8, [x8, #56]
   16a60:	blr	x8
   16a64:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16a68:	ldr	x8, [x8]
   16a6c:	mov	w9, w0
   16a70:	lsr	x9, x9, #3
   16a74:	ldrh	w10, [x8, #54]
   16a78:	cmp	w9, w10
   16a7c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16a80:	ldr	x8, [x8, #40]
   16a84:	ldrb	w8, [x8, x9]
   16a88:	and	w9, w0, #0x7
   16a8c:	lsr	w8, w8, w9
   16a90:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16a94:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16a98:	ldr	w8, [x19, #48]
   16a9c:	cmp	w8, #0x3
   16aa0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16aa4:	ldr	w8, [x19, #76]
   16aa8:	cmp	w8, #0x2
   16aac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16ab0:	ldr	x8, [x19]
   16ab4:	mov	x0, x19
   16ab8:	ldr	x8, [x8, #56]
   16abc:	blr	x8
   16ac0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16ac4:	ldr	x8, [x8]
   16ac8:	mov	w9, w0
   16acc:	lsr	x9, x9, #3
   16ad0:	ldrh	w10, [x8, #1270]
   16ad4:	cmp	w9, w10
   16ad8:	b.cs	16afc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2268>  // b.hs, b.nlast
   16adc:	ldr	x8, [x8, #1256]
   16ae0:	ldrb	w8, [x8, x9]
   16ae4:	and	w9, w0, #0x7
   16ae8:	lsr	w8, w8, w9
   16aec:	tbz	w8, #0, 16afc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2268>
   16af0:	ldr	w8, [x19, #80]
   16af4:	cmp	w8, #0x40
   16af8:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   16afc:	mov	w21, #0x7d                  	// #125
   16b00:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   16b04:	ldr	w8, [x19, #48]
   16b08:	cmp	w8, #0x3
   16b0c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16b10:	ldr	w8, [x19, #76]
   16b14:	cmp	w8, #0x2
   16b18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16b1c:	ldr	x8, [x19]
   16b20:	mov	x0, x19
   16b24:	ldr	x8, [x8, #56]
   16b28:	blr	x8
   16b2c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16b30:	ldr	x8, [x8]
   16b34:	mov	w9, w0
   16b38:	lsr	x9, x9, #3
   16b3c:	ldrh	w10, [x8, #1270]
   16b40:	cmp	w9, w10
   16b44:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16b48:	ldr	x8, [x8, #1256]
   16b4c:	ldrb	w8, [x8, x9]
   16b50:	and	w9, w0, #0x7
   16b54:	lsr	w8, w8, w9
   16b58:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16b5c:	ldr	w8, [x19, #80]
   16b60:	cmp	w8, #0x40
   16b64:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16b68:	ldr	w9, [x19, #48]
   16b6c:	add	x8, x19, #0x48
   16b70:	cmp	w9, #0x3
   16b74:	b.eq	1b188 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x68f4>  // b.none
   16b78:	cmp	w9, #0xa
   16b7c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16b80:	add	x10, x8, #0x4
   16b84:	b	1b18c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x68f8>
   16b88:	ldr	w8, [x19, #48]
   16b8c:	cmp	w8, #0x4
   16b90:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16b94:	ldr	w8, [x19, #76]
   16b98:	cmp	w8, #0x3
   16b9c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16ba0:	ldr	w8, [x19, #88]
   16ba4:	cmp	w8, #0x2
   16ba8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16bac:	ldr	w8, [x19, #84]
   16bb0:	cmp	w8, #0x8
   16bb4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16bb8:	ldr	w8, [x19, #80]
   16bbc:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16bc0:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16bc4:	ldr	w8, [x19, #48]
   16bc8:	cmp	w8, #0x4
   16bcc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16bd0:	ldr	w8, [x19, #76]
   16bd4:	cmp	w8, #0x2
   16bd8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16bdc:	ldr	w8, [x19, #88]
   16be0:	cmp	w8, #0x2
   16be4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16be8:	ldr	w8, [x19, #84]
   16bec:	cmp	w8, #0x40
   16bf0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16bf4:	ldr	w8, [x19, #80]
   16bf8:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16bfc:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16c00:	ldr	w8, [x19, #48]
   16c04:	cmp	w8, #0x4
   16c08:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c0c:	ldr	w8, [x19, #76]
   16c10:	cmp	w8, #0x1
   16c14:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c18:	ldr	w8, [x19, #88]
   16c1c:	cmp	w8, #0x1
   16c20:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c24:	ldr	w8, [x19, #84]
   16c28:	cmp	w8, #0x20
   16c2c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c30:	b	199b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5120>
   16c34:	ldr	w8, [x19, #48]
   16c38:	cmp	w8, #0x4
   16c3c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c40:	ldr	w8, [x19, #76]
   16c44:	cmp	w8, #0x4
   16c48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c4c:	ldr	w8, [x19, #88]
   16c50:	cmp	w8, #0x1
   16c54:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c58:	ldr	w8, [x19, #84]
   16c5c:	cmp	w8, #0x40
   16c60:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c64:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   16c68:	ldr	w8, [x19, #48]
   16c6c:	cmp	w8, #0x3
   16c70:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c74:	ldr	w8, [x19, #76]
   16c78:	cmp	w8, #0x2
   16c7c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16c80:	ldr	x8, [x19]
   16c84:	mov	x0, x19
   16c88:	ldr	x8, [x8, #56]
   16c8c:	blr	x8
   16c90:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16c94:	ldr	x8, [x8]
   16c98:	mov	w9, w0
   16c9c:	lsr	x9, x9, #3
   16ca0:	ldrh	w10, [x8, #1270]
   16ca4:	cmp	w9, w10
   16ca8:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16cac:	ldr	x8, [x8, #1256]
   16cb0:	ldrb	w8, [x8, x9]
   16cb4:	and	w9, w0, #0x7
   16cb8:	lsr	w8, w8, w9
   16cbc:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16cc0:	ldr	w8, [x19, #80]
   16cc4:	cmp	w8, #0x40
   16cc8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16ccc:	ldr	w9, [x19, #48]
   16cd0:	add	x8, x19, #0x48
   16cd4:	cmp	w9, #0x3
   16cd8:	b.eq	1b1c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x692c>  // b.none
   16cdc:	cmp	w9, #0xa
   16ce0:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16ce4:	add	x10, x8, #0x4
   16ce8:	b	1b1c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6930>
   16cec:	ldr	x8, [x19]
   16cf0:	mov	x0, x19
   16cf4:	ldr	x8, [x8, #40]
   16cf8:	blr	x8
   16cfc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16d00:	ldr	w8, [x19, #48]
   16d04:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   16d08:	ldr	x8, [x19, #72]
   16d0c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   16d10:	ldr	w9, [x8]
   16d14:	cmp	w9, #0x1
   16d18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d1c:	ldr	x8, [x8, #16]
   16d20:	mov	w9, #0x1ff1                	// #8177
   16d24:	mov	w10, #0x2e                  	// #46
   16d28:	add	x11, x8, #0x1, lsl #12
   16d2c:	tst	x8, #0xf
   16d30:	b	19e38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a4>
   16d34:	ldr	w8, [x19, #48]
   16d38:	cmp	w8, #0x4
   16d3c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d40:	ldr	w8, [x19, #76]
   16d44:	cmp	w8, #0x3
   16d48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d4c:	ldr	w8, [x19, #88]
   16d50:	cmp	w8, #0x2
   16d54:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d58:	ldr	w8, [x19, #84]
   16d5c:	cmp	w8, #0x10
   16d60:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d64:	ldr	w8, [x19, #80]
   16d68:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16d6c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16d70:	ldr	w8, [x19, #48]
   16d74:	cmp	w8, #0x4
   16d78:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d7c:	ldr	w8, [x19, #76]
   16d80:	cmp	w8, #0x1
   16d84:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d88:	ldr	w8, [x19, #88]
   16d8c:	cmp	w8, #0x1
   16d90:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16d94:	ldr	w8, [x19, #84]
   16d98:	cmp	w8, #0x8
   16d9c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16da0:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   16da4:	ldr	w8, [x19, #48]
   16da8:	cmp	w8, #0x4
   16dac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16db0:	ldr	w8, [x19, #76]
   16db4:	cmp	w8, #0x3
   16db8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16dbc:	ldr	w8, [x19, #88]
   16dc0:	cmp	w8, #0x1
   16dc4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16dc8:	ldr	w8, [x19, #84]
   16dcc:	cmp	w8, #0x8
   16dd0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16dd4:	b	19a98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5204>
   16dd8:	ldr	x8, [x19]
   16ddc:	mov	x0, x19
   16de0:	ldr	x8, [x8, #40]
   16de4:	blr	x8
   16de8:	tbz	w0, #0, 184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>
   16dec:	ldr	w8, [x19, #48]
   16df0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   16df4:	ldr	x8, [x19, #72]
   16df8:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   16dfc:	ldr	w9, [x8]
   16e00:	cmp	w9, #0x1
   16e04:	b.eq	184a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c0c>  // b.none
   16e08:	b	184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>
   16e0c:	ldr	w8, [x19, #48]
   16e10:	cmp	w8, #0x3
   16e14:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16e18:	ldr	w8, [x19, #76]
   16e1c:	cmp	w8, #0x2
   16e20:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16e24:	ldr	x8, [x19]
   16e28:	mov	x0, x19
   16e2c:	ldr	x8, [x8, #56]
   16e30:	blr	x8
   16e34:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16e38:	ldr	x8, [x8]
   16e3c:	mov	w9, w0
   16e40:	lsr	x9, x9, #3
   16e44:	ldrh	w10, [x8, #1270]
   16e48:	cmp	w9, w10
   16e4c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16e50:	ldr	x8, [x8, #1256]
   16e54:	ldrb	w8, [x8, x9]
   16e58:	and	w9, w0, #0x7
   16e5c:	lsr	w8, w8, w9
   16e60:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16e64:	mov	x8, x19
   16e68:	ldr	w9, [x8, #80]!
   16e6c:	cmp	w9, #0x40
   16e70:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16e74:	ldr	w10, [x19, #48]
   16e78:	add	x9, x19, #0x48
   16e7c:	cmp	w10, #0x3
   16e80:	b.eq	1b1f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6964>  // b.none
   16e84:	cmp	w10, #0xa
   16e88:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   16e8c:	add	x11, x9, #0x4
   16e90:	b	1b1fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6968>
   16e94:	ldr	w8, [x19, #48]
   16e98:	cmp	w8, #0x3
   16e9c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16ea0:	ldr	w8, [x19, #76]
   16ea4:	cmp	w8, #0x3
   16ea8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16eac:	ldr	x8, [x19]
   16eb0:	mov	x0, x19
   16eb4:	ldr	x8, [x8, #56]
   16eb8:	blr	x8
   16ebc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16ec0:	ldr	x8, [x8]
   16ec4:	mov	w9, w0
   16ec8:	lsr	x9, x9, #3
   16ecc:	ldrh	w10, [x8, #86]
   16ed0:	cmp	w9, w10
   16ed4:	b.cs	16ef8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2664>  // b.hs, b.nlast
   16ed8:	ldr	x8, [x8, #72]
   16edc:	ldrb	w8, [x8, x9]
   16ee0:	and	w9, w0, #0x7
   16ee4:	lsr	w8, w8, w9
   16ee8:	tbz	w8, #0, 16ef8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2664>
   16eec:	ldr	w8, [x19, #80]
   16ef0:	cmp	w8, #0x10
   16ef4:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   16ef8:	mov	w21, #0x6b                  	// #107
   16efc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   16f00:	ldr	w8, [x19, #48]
   16f04:	cmp	w8, #0x3
   16f08:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16f0c:	ldr	w8, [x19, #76]
   16f10:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16f14:	ldr	x8, [x19]
   16f18:	mov	x0, x19
   16f1c:	ldr	x8, [x8, #56]
   16f20:	blr	x8
   16f24:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   16f28:	ldr	x8, [x8]
   16f2c:	mov	w9, w0
   16f30:	lsr	x9, x9, #3
   16f34:	ldrh	w10, [x8, #1238]
   16f38:	cmp	w9, w10
   16f3c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   16f40:	ldr	x8, [x8, #1224]
   16f44:	ldrb	w8, [x8, x9]
   16f48:	and	w9, w0, #0x7
   16f4c:	lsr	w8, w8, w9
   16f50:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16f54:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16f58:	mov	x0, x19
   16f5c:	bl	1f194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   16f60:	cbz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16f64:	mov	x0, x19
   16f68:	bl	1f494 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   16f6c:	cbz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16f70:	cmp	w0, #0x1
   16f74:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16f78:	mov	w21, #0x5a                  	// #90
   16f7c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   16f80:	ldr	w8, [x19, #48]
   16f84:	cmp	w8, #0x4
   16f88:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16f8c:	ldr	w8, [x19, #76]
   16f90:	cmp	w8, #0x3
   16f94:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16f98:	ldr	w8, [x19, #88]
   16f9c:	cmp	w8, #0x2
   16fa0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16fa4:	ldr	w8, [x19, #84]
   16fa8:	cmp	w8, #0x20
   16fac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16fb0:	ldr	w8, [x19, #80]
   16fb4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16fb8:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   16fbc:	ldr	w8, [x19, #48]
   16fc0:	cmp	w8, #0x7
   16fc4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16fc8:	ldr	w8, [x19, #92]
   16fcc:	cmp	w8, #0x1a
   16fd0:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   16fd4:	mov	w9, #0x1                   	// #1
   16fd8:	lsl	w8, w9, w8
   16fdc:	mov	w9, #0x18                  	// #24
   16fe0:	movk	w9, #0x600, lsl #16
   16fe4:	tst	w8, w9
   16fe8:	b.ne	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.any
   16fec:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   16ff0:	ldr	w8, [x19, #48]
   16ff4:	cmp	w8, #0x3
   16ff8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   16ffc:	ldr	w8, [x19, #76]
   17000:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17004:	ldr	x8, [x19]
   17008:	mov	x0, x19
   1700c:	ldr	x8, [x8, #56]
   17010:	blr	x8
   17014:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17018:	ldr	x8, [x8]
   1701c:	mov	w9, w0
   17020:	lsr	x9, x9, #3
   17024:	ldrh	w10, [x8, #22]
   17028:	cmp	w9, w10
   1702c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   17030:	ldr	x8, [x8, #8]
   17034:	ldrb	w8, [x8, x9]
   17038:	and	w9, w0, #0x7
   1703c:	lsr	w8, w8, w9
   17040:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17044:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17048:	ldr	w8, [x19, #48]
   1704c:	cmp	w8, #0x4
   17050:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17054:	ldr	w8, [x19, #76]
   17058:	cmp	w8, #0x2
   1705c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17060:	ldr	w8, [x19, #80]
   17064:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17068:	b	18c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f0>
   1706c:	ldr	x8, [x19]
   17070:	mov	x0, x19
   17074:	ldr	x8, [x8, #40]
   17078:	blr	x8
   1707c:	tbz	w0, #0, 1a330 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5a9c>
   17080:	ldr	w8, [x19, #48]
   17084:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17088:	ldr	x8, [x19, #72]
   1708c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17090:	ldr	w10, [x8]
   17094:	mov	w9, #0x45                  	// #69
   17098:	mov	w21, #0x45                  	// #69
   1709c:	cmp	w10, #0x1
   170a0:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   170a4:	ldr	x8, [x8, #16]
   170a8:	add	x8, x8, #0x100
   170ac:	cmp	x8, #0x200
   170b0:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   170b4:	ldr	x8, [x19]
   170b8:	mov	x0, x19
   170bc:	ldr	x8, [x8, #40]
   170c0:	blr	x8
   170c4:	tbz	w0, #0, 18158 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38c4>
   170c8:	ldr	w8, [x19, #48]
   170cc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   170d0:	ldr	x8, [x19, #72]
   170d4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   170d8:	ldr	w9, [x8]
   170dc:	cmp	w9, #0x1
   170e0:	b.ne	18158 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38c4>  // b.any
   170e4:	ldr	x8, [x8, #16]
   170e8:	mov	w21, #0x91                  	// #145
   170ec:	lsr	x9, x8, #32
   170f0:	cbz	x9, 17104 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2870>
   170f4:	mov	w9, #0x80000000            	// #-2147483648
   170f8:	add	x9, x8, x9
   170fc:	lsr	x9, x9, #32
   17100:	cbnz	x9, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17104:	and	x0, x8, #0xffffffff
   17108:	add	x2, sp, #0x10
   1710c:	mov	w1, #0x20                  	// #32
   17110:	b	18144 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38b0>
   17114:	ldr	w8, [x19, #48]
   17118:	cmp	w8, #0x3
   1711c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17120:	ldr	w8, [x19, #76]
   17124:	cmp	w8, #0x2
   17128:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1712c:	ldr	x8, [x19]
   17130:	mov	x0, x19
   17134:	ldr	x8, [x8, #56]
   17138:	blr	x8
   1713c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17140:	ldr	x8, [x8]
   17144:	mov	w9, w0
   17148:	lsr	x9, x9, #3
   1714c:	ldrh	w10, [x8, #1334]
   17150:	cmp	w9, w10
   17154:	b.cs	17178 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x28e4>  // b.hs, b.nlast
   17158:	ldr	x8, [x8, #1320]
   1715c:	ldrb	w8, [x8, x9]
   17160:	and	w9, w0, #0x7
   17164:	lsr	w8, w8, w9
   17168:	tbz	w8, #0, 17178 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x28e4>
   1716c:	ldr	w8, [x19, #80]
   17170:	cmp	w8, #0x20
   17174:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   17178:	mov	w21, #0x8f                  	// #143
   1717c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17180:	ldr	w8, [x19, #48]
   17184:	cmp	w8, #0x4
   17188:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1718c:	ldr	w8, [x19, #76]
   17190:	cmp	w8, #0x3
   17194:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17198:	ldr	w8, [x19, #88]
   1719c:	cmp	w8, #0x1
   171a0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   171a4:	ldr	w8, [x19, #84]
   171a8:	cmp	w8, #0x40
   171ac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   171b0:	b	185a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3d0c>
   171b4:	ldr	w8, [x19, #48]
   171b8:	cmp	w8, #0x3
   171bc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   171c0:	ldr	w8, [x19, #76]
   171c4:	cmp	w8, #0x2
   171c8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   171cc:	ldr	x8, [x19]
   171d0:	mov	x0, x19
   171d4:	ldr	x8, [x8, #56]
   171d8:	blr	x8
   171dc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   171e0:	ldr	x8, [x8]
   171e4:	mov	w9, w0
   171e8:	lsr	x9, x9, #3
   171ec:	ldrh	w10, [x8, #1270]
   171f0:	cmp	w9, w10
   171f4:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   171f8:	ldr	x8, [x8, #1256]
   171fc:	ldrb	w8, [x8, x9]
   17200:	and	w9, w0, #0x7
   17204:	lsr	w8, w8, w9
   17208:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1720c:	ldr	w8, [x19, #80]
   17210:	cmp	w8, #0x20
   17214:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17218:	ldr	w9, [x19, #48]
   1721c:	add	x8, x19, #0x48
   17220:	cmp	w9, #0x3
   17224:	b.eq	1b224 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6990>  // b.none
   17228:	cmp	w9, #0xa
   1722c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   17230:	add	x10, x8, #0x4
   17234:	b	1b228 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6994>
   17238:	ldr	x8, [x19]
   1723c:	mov	x0, x19
   17240:	ldr	x8, [x8, #40]
   17244:	blr	x8
   17248:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1724c:	ldr	w8, [x19, #48]
   17250:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17254:	ldr	x8, [x19, #72]
   17258:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1725c:	ldr	w9, [x8]
   17260:	cmp	w9, #0x1
   17264:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17268:	ldrh	w8, [x8, #18]
   1726c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17270:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17274:	ldr	w8, [x19, #48]
   17278:	cmp	w8, #0x4
   1727c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17280:	ldr	w8, [x19, #76]
   17284:	cmp	w8, #0x3
   17288:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1728c:	ldr	w8, [x19, #88]
   17290:	cmp	w8, #0x1
   17294:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17298:	ldr	w8, [x19, #84]
   1729c:	cmp	w8, #0x8
   172a0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   172a4:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   172a8:	ldr	w8, [x19, #48]
   172ac:	cmp	w8, #0x3
   172b0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   172b4:	ldr	w8, [x19, #76]
   172b8:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   172bc:	ldr	x8, [x19]
   172c0:	mov	x0, x19
   172c4:	ldr	x8, [x8, #56]
   172c8:	blr	x8
   172cc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   172d0:	ldr	x8, [x8]
   172d4:	mov	w9, w0
   172d8:	lsr	x9, x9, #3
   172dc:	ldrh	w10, [x8, #630]
   172e0:	cmp	w9, w10
   172e4:	b.cs	1b8a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x700c>  // b.hs, b.nlast
   172e8:	ldr	x8, [x8, #616]
   172ec:	ldrb	w8, [x8, x9]
   172f0:	and	w9, w0, #0x7
   172f4:	lsr	w8, w8, w9
   172f8:	tbz	w8, #0, 1b8a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x700c>
   172fc:	ldr	w9, [x19, #48]
   17300:	add	x8, x19, #0x48
   17304:	cmp	w9, #0x3
   17308:	b.eq	1af28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6694>  // b.none
   1730c:	cmp	w9, #0xa
   17310:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   17314:	mov	x10, x8
   17318:	b	1af2c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6698>
   1731c:	ldr	w8, [x19, #48]
   17320:	cmp	w8, #0x3
   17324:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17328:	ldr	w8, [x19, #76]
   1732c:	cmp	w8, #0x2
   17330:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17334:	ldr	x8, [x19]
   17338:	mov	x0, x19
   1733c:	ldr	x8, [x8, #56]
   17340:	blr	x8
   17344:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17348:	ldr	x8, [x8]
   1734c:	mov	w9, w0
   17350:	lsr	x9, x9, #3
   17354:	ldrh	w10, [x8, #1270]
   17358:	cmp	w9, w10
   1735c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   17360:	ldr	x8, [x8, #1256]
   17364:	ldrb	w8, [x8, x9]
   17368:	and	w9, w0, #0x7
   1736c:	lsr	w8, w8, w9
   17370:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17374:	mov	x8, x19
   17378:	ldr	w9, [x8, #80]!
   1737c:	cmp	w9, #0x20
   17380:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17384:	ldr	w10, [x19, #48]
   17388:	add	x9, x19, #0x48
   1738c:	cmp	w10, #0x3
   17390:	b.eq	1b25c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x69c8>  // b.none
   17394:	cmp	w10, #0xa
   17398:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1739c:	add	x11, x9, #0x4
   173a0:	b	1b260 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x69cc>
   173a4:	ldr	w8, [x19, #48]
   173a8:	cmp	w8, #0x3
   173ac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   173b0:	ldr	w8, [x19, #76]
   173b4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   173b8:	ldr	x8, [x19]
   173bc:	mov	x0, x19
   173c0:	ldr	x8, [x8, #56]
   173c4:	blr	x8
   173c8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   173cc:	ldr	x8, [x8]
   173d0:	mov	w9, w0
   173d4:	lsr	x9, x9, #3
   173d8:	ldrh	w10, [x8, #1238]
   173dc:	cmp	w9, w10
   173e0:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   173e4:	ldr	x8, [x8, #1224]
   173e8:	ldrb	w8, [x8, x9]
   173ec:	and	w9, w0, #0x7
   173f0:	lsr	w8, w8, w9
   173f4:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   173f8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   173fc:	ldr	x8, [x19]
   17400:	mov	x0, x19
   17404:	ldr	x8, [x8, #40]
   17408:	blr	x8
   1740c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17410:	ldr	w8, [x19, #48]
   17414:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17418:	ldr	x8, [x19, #72]
   1741c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17420:	ldr	w9, [x8]
   17424:	cmp	w9, #0x1
   17428:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1742c:	ldr	x8, [x8, #16]
   17430:	cmp	x8, #0x10, lsl #12
   17434:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   17438:	and	x9, x8, #0xffffffff0000ffff
   1743c:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17440:	mov	w9, #0xffffffff            	// #-1
   17444:	cmp	x9, w8, uxtw
   17448:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   1744c:	mvn	w8, w8
   17450:	and	x8, x8, #0xffff
   17454:	cbz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   17458:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1745c:	ldr	w8, [x19, #48]
   17460:	cmp	w8, #0x4
   17464:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17468:	ldr	w8, [x19, #76]
   1746c:	cmp	w8, #0x1
   17470:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17474:	ldr	w8, [x19, #88]
   17478:	cmp	w8, #0x2
   1747c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17480:	ldr	w8, [x19, #84]
   17484:	cmp	w8, #0x40
   17488:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1748c:	ldr	w8, [x19, #80]
   17490:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17494:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17498:	ldr	w8, [x19, #48]
   1749c:	cmp	w8, #0x4
   174a0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   174a4:	ldr	w8, [x19, #76]
   174a8:	cmp	w8, #0x3
   174ac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   174b0:	ldr	w8, [x19, #88]
   174b4:	cmp	w8, #0x1
   174b8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   174bc:	ldr	w8, [x19, #84]
   174c0:	cmp	w8, #0x20
   174c4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   174c8:	b	194a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c0c>
   174cc:	ldr	w8, [x19, #48]
   174d0:	cmp	w8, #0x3
   174d4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   174d8:	ldr	w8, [x19, #76]
   174dc:	cmp	w8, #0x2
   174e0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   174e4:	ldr	x8, [x19]
   174e8:	mov	x0, x19
   174ec:	ldr	x8, [x8, #56]
   174f0:	blr	x8
   174f4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   174f8:	ldr	x8, [x8]
   174fc:	mov	w9, w0
   17500:	lsr	x9, x9, #3
   17504:	ldrh	w10, [x8, #1366]
   17508:	cmp	w9, w10
   1750c:	b.cs	17530 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c9c>  // b.hs, b.nlast
   17510:	ldr	x8, [x8, #1352]
   17514:	ldrb	w8, [x8, x9]
   17518:	and	w9, w0, #0x7
   1751c:	lsr	w8, w8, w9
   17520:	tbz	w8, #0, 17530 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2c9c>
   17524:	ldr	w8, [x19, #80]
   17528:	cmp	w8, #0x8
   1752c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   17530:	mov	w21, #0x8d                  	// #141
   17534:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17538:	ldr	w8, [x19, #48]
   1753c:	cmp	w8, #0x3
   17540:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17544:	ldr	w8, [x19, #76]
   17548:	cmp	w8, #0x2
   1754c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17550:	ldr	x8, [x19]
   17554:	mov	x0, x19
   17558:	ldr	x8, [x8, #56]
   1755c:	blr	x8
   17560:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17564:	ldr	x8, [x8]
   17568:	mov	w9, w0
   1756c:	lsr	x9, x9, #3
   17570:	ldrh	w10, [x8, #1270]
   17574:	cmp	w9, w10
   17578:	b.cs	1759c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d08>  // b.hs, b.nlast
   1757c:	ldr	x8, [x8, #1256]
   17580:	ldrb	w8, [x8, x9]
   17584:	and	w9, w0, #0x7
   17588:	lsr	w8, w8, w9
   1758c:	tbz	w8, #0, 1759c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2d08>
   17590:	ldr	w8, [x19, #80]
   17594:	cmp	w8, #0x10
   17598:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1759c:	mov	w21, #0x6f                  	// #111
   175a0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   175a4:	mov	x0, x19
   175a8:	bl	1e8e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>
   175ac:	cbz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   175b0:	cmp	w0, #0x1
   175b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   175b8:	mov	w21, #0x5c                  	// #92
   175bc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   175c0:	ldr	w8, [x19, #48]
   175c4:	cmp	w8, #0xa
   175c8:	b.ne	1997c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x50e8>  // b.any
   175cc:	ldr	w9, [x19, #72]
   175d0:	mov	w8, #0x9                   	// #9
   175d4:	mov	w21, #0x9                   	// #9
   175d8:	cmp	w9, #0x3
   175dc:	b.ls	19968 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x50d4>  // b.plast
   175e0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   175e4:	ldr	x8, [x19]
   175e8:	mov	x0, x19
   175ec:	ldr	x8, [x8, #40]
   175f0:	blr	x8
   175f4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   175f8:	ldr	w8, [x19, #48]
   175fc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17600:	ldr	x8, [x19, #72]
   17604:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17608:	ldr	w9, [x8]
   1760c:	cmp	w9, #0x1
   17610:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17614:	ldr	x8, [x8, #16]
   17618:	cmp	x8, #0x10, lsl #12
   1761c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   17620:	b	1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   17624:	ldr	w8, [x19, #48]
   17628:	cmp	w8, #0x3
   1762c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17630:	ldr	w8, [x19, #76]
   17634:	cmp	w8, #0x3
   17638:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1763c:	ldr	x8, [x19]
   17640:	mov	x0, x19
   17644:	ldr	x8, [x8, #56]
   17648:	blr	x8
   1764c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17650:	ldr	x8, [x8]
   17654:	mov	w9, w0
   17658:	lsr	x9, x9, #3
   1765c:	ldrh	w10, [x8, #118]
   17660:	cmp	w9, w10
   17664:	b.cs	17688 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2df4>  // b.hs, b.nlast
   17668:	ldr	x8, [x8, #104]
   1766c:	ldrb	w8, [x8, x9]
   17670:	and	w9, w0, #0x7
   17674:	lsr	w8, w8, w9
   17678:	tbz	w8, #0, 17688 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x2df4>
   1767c:	ldr	w8, [x19, #80]
   17680:	cmp	w8, #0x8
   17684:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   17688:	mov	w21, #0x64                  	// #100
   1768c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17690:	ldr	x8, [x19]
   17694:	mov	x0, x19
   17698:	ldr	x8, [x8, #40]
   1769c:	blr	x8
   176a0:	tbz	w0, #0, 1a338 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5aa4>
   176a4:	ldr	w8, [x19, #48]
   176a8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   176ac:	ldr	x8, [x19, #72]
   176b0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   176b4:	ldr	w10, [x8]
   176b8:	mov	w9, #0x42                  	// #66
   176bc:	mov	w21, #0x42                  	// #66
   176c0:	cmp	w10, #0x1
   176c4:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   176c8:	ldr	x8, [x8, #16]
   176cc:	add	x8, x8, #0x10
   176d0:	b	194e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c54>
   176d4:	ldr	x8, [x19]
   176d8:	mov	x0, x19
   176dc:	ldr	x8, [x8, #40]
   176e0:	blr	x8
   176e4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   176e8:	ldr	w8, [x19, #48]
   176ec:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   176f0:	ldr	x8, [x19, #72]
   176f4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   176f8:	ldr	w9, [x8]
   176fc:	cmp	w9, #0x1
   17700:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17704:	ldr	x8, [x8, #16]
   17708:	mov	x9, #0x4fa5                	// #20389
   1770c:	movk	x9, #0xa4fa, lsl #16
   17710:	movk	x9, #0xfa4f, lsl #32
   17714:	mov	x10, #0x82d9                	// #33497
   17718:	movk	x9, #0x4fa4, lsl #48
   1771c:	movk	x10, #0xd82d, lsl #16
   17720:	movk	x10, #0x2d82, lsl #32
   17724:	mul	x9, x8, x9
   17728:	movk	x10, #0x2d8, lsl #48
   1772c:	ror	x9, x9, #1
   17730:	mov	w11, #0x10f                 	// #271
   17734:	cmp	x9, x10
   17738:	mov	w12, #0xc                   	// #12
   1773c:	ccmp	x8, x11, #0x2, cc  // cc = lo, ul, last
   17740:	mov	w8, #0x4                   	// #4
   17744:	csel	w21, w8, w12, cc  // cc = lo, ul, last
   17748:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1774c:	mov	x0, x19
   17750:	bl	1e7dc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>
   17754:	cbz	w0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   17758:	cmp	w0, #0x1
   1775c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17760:	mov	w21, #0x58                  	// #88
   17764:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17768:	ldr	x8, [x19]
   1776c:	mov	x0, x19
   17770:	ldr	x8, [x8, #40]
   17774:	blr	x8
   17778:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1777c:	ldr	w8, [x19, #48]
   17780:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17784:	ldr	x8, [x19, #72]
   17788:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1778c:	ldr	w9, [x8]
   17790:	cmp	w9, #0x1
   17794:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17798:	ldr	x8, [x8, #16]
   1779c:	mov	x9, #0x4fa5                	// #20389
   177a0:	movk	x9, #0xa4fa, lsl #16
   177a4:	movk	x9, #0xfa4f, lsl #32
   177a8:	mov	x11, #0xc16c                	// #49516
   177ac:	movk	x9, #0x4fa4, lsl #48
   177b0:	orr	x10, xzr, #0xfffffffffffffffe
   177b4:	movk	x11, #0x6c16, lsl #16
   177b8:	movk	x11, #0x16c1, lsl #32
   177bc:	madd	x9, x8, x9, x10
   177c0:	movk	x11, #0x16c, lsl #48
   177c4:	ror	x9, x9, #2
   177c8:	mov	w12, #0x10f                 	// #271
   177cc:	cmp	x9, x11
   177d0:	mov	w13, #0xd                   	// #13
   177d4:	ccmp	x8, x12, #0x2, cc  // cc = lo, ul, last
   177d8:	b	19de8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5554>
   177dc:	ldr	x8, [x19]
   177e0:	mov	x0, x19
   177e4:	ldr	x8, [x8, #40]
   177e8:	blr	x8
   177ec:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   177f0:	ldr	w8, [x19, #48]
   177f4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   177f8:	ldr	x8, [x19, #72]
   177fc:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17800:	ldr	w9, [x8]
   17804:	cmp	w9, #0x1
   17808:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1780c:	ldr	x8, [x8, #16]
   17810:	cmp	x8, #0x10, lsl #12
   17814:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   17818:	and	x9, x8, #0xffffffff0000ffff
   1781c:	mov	x10, #0xffffffff0000ffff    	// #-4294901761
   17820:	cmp	x9, x10
   17824:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17828:	cmn	x8, #0x1
   1782c:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   17830:	and	x10, x8, #0xffffffffffff
   17834:	cbz	x10, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17838:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1783c:	and	x8, x8, #0xffff0000ffffffff
   17840:	cbnz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   17844:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17848:	ldr	w8, [x19, #48]
   1784c:	cmp	w8, #0x4
   17850:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17854:	ldr	w8, [x19, #76]
   17858:	cmp	w8, #0x4
   1785c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17860:	ldr	w8, [x19, #88]
   17864:	cmp	w8, #0x1
   17868:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1786c:	ldr	w8, [x19, #84]
   17870:	cmp	w8, #0x20
   17874:	b.eq	199b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5120>  // b.none
   17878:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1787c:	ldr	w8, [x19, #48]
   17880:	cmp	w8, #0x4
   17884:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17888:	ldr	w8, [x19, #76]
   1788c:	cmp	w8, #0x4
   17890:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17894:	ldr	w8, [x19, #88]
   17898:	cmp	w8, #0x1
   1789c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178a0:	ldr	w8, [x19, #84]
   178a4:	cmp	w8, #0x10
   178a8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178ac:	b	18aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4210>
   178b0:	ldr	w8, [x19, #48]
   178b4:	cmp	w8, #0x4
   178b8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178bc:	ldr	w8, [x19, #76]
   178c0:	cmp	w8, #0x3
   178c4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178c8:	ldr	w8, [x19, #88]
   178cc:	cmp	w8, #0x1
   178d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178d4:	ldr	w8, [x19, #84]
   178d8:	cmp	w8, #0x20
   178dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178e0:	b	199b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5120>
   178e4:	ldr	w8, [x19, #48]
   178e8:	cmp	w8, #0x3
   178ec:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178f0:	ldr	w8, [x19, #76]
   178f4:	cmp	w8, #0x2
   178f8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   178fc:	ldr	x8, [x19]
   17900:	mov	x0, x19
   17904:	ldr	x8, [x8, #56]
   17908:	blr	x8
   1790c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17910:	ldr	x8, [x8]
   17914:	mov	w9, w0
   17918:	lsr	x9, x9, #3
   1791c:	ldrh	w10, [x8, #1270]
   17920:	cmp	w9, w10
   17924:	b.cs	17948 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x30b4>  // b.hs, b.nlast
   17928:	ldr	x8, [x8, #1256]
   1792c:	ldrb	w8, [x8, x9]
   17930:	and	w9, w0, #0x7
   17934:	lsr	w8, w8, w9
   17938:	tbz	w8, #0, 17948 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x30b4>
   1793c:	ldr	w8, [x19, #80]
   17940:	cmp	w8, #0x20
   17944:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   17948:	mov	w21, #0x70                  	// #112
   1794c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17950:	ldr	x8, [x19]
   17954:	mov	x0, x19
   17958:	ldr	x8, [x8, #40]
   1795c:	blr	x8
   17960:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17964:	ldr	w8, [x19, #48]
   17968:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1796c:	ldr	x8, [x19, #72]
   17970:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17974:	ldr	w9, [x8]
   17978:	cmp	w9, #0x1
   1797c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17980:	ldr	x8, [x8, #16]
   17984:	cmn	x8, #0x10, lsl #12
   17988:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   1798c:	and	x9, x8, #0xffffffffffff
   17990:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17994:	and	x9, x8, #0xffff0000ffffffff
   17998:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1799c:	cmp	x8, #0x10, lsl #12
   179a0:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   179a4:	and	x8, x8, #0xffffffff0000ffff
   179a8:	cbnz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   179ac:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   179b0:	ldr	x8, [x19]
   179b4:	mov	x0, x19
   179b8:	ldr	x8, [x8, #40]
   179bc:	blr	x8
   179c0:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   179c4:	ldr	w8, [x19, #48]
   179c8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   179cc:	ldr	x8, [x19, #72]
   179d0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   179d4:	ldr	w9, [x8]
   179d8:	cmp	w9, #0x1
   179dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   179e0:	ldr	x8, [x8, #16]
   179e4:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   179e8:	and	x8, x8, #0xffff0000ffffffff
   179ec:	cbz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   179f0:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   179f4:	ldr	w8, [x19, #48]
   179f8:	cmp	w8, #0x3
   179fc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17a00:	ldr	w8, [x19, #76]
   17a04:	cmp	w8, #0x3
   17a08:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17a0c:	ldr	x8, [x19]
   17a10:	mov	x0, x19
   17a14:	ldr	x8, [x8, #56]
   17a18:	blr	x8
   17a1c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17a20:	ldr	x8, [x8]
   17a24:	mov	w9, w0
   17a28:	lsr	x9, x9, #3
   17a2c:	ldrh	w10, [x8, #118]
   17a30:	cmp	w9, w10
   17a34:	b.cs	17a58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31c4>  // b.hs, b.nlast
   17a38:	ldr	x8, [x8, #104]
   17a3c:	ldrb	w8, [x8, x9]
   17a40:	and	w9, w0, #0x7
   17a44:	lsr	w8, w8, w9
   17a48:	tbz	w8, #0, 17a58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x31c4>
   17a4c:	ldr	w8, [x19, #80]
   17a50:	cmp	w8, #0x20
   17a54:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   17a58:	mov	w21, #0x67                  	// #103
   17a5c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17a60:	ldr	x8, [x19]
   17a64:	mov	x0, x19
   17a68:	ldr	x8, [x8, #40]
   17a6c:	blr	x8
   17a70:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17a74:	ldr	w8, [x19, #48]
   17a78:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17a7c:	ldr	x8, [x19, #72]
   17a80:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17a84:	ldr	w9, [x8]
   17a88:	cmp	w9, #0x1
   17a8c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17a90:	ldr	x8, [x8, #16]
   17a94:	cmp	x8, #0x10, lsl #12
   17a98:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   17a9c:	and	x9, x8, #0xffffffff0000ffff
   17aa0:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17aa4:	and	x9, x8, #0xffff0000ffffffff
   17aa8:	mov	x10, #0xffff0000ffffffff    	// #-281470681743361
   17aac:	cmp	x9, x10
   17ab0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17ab4:	cmn	x8, #0x1
   17ab8:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   17abc:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17ac0:	and	x8, x8, #0xffffffffffff
   17ac4:	cbnz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   17ac8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17acc:	ldr	x8, [x19]
   17ad0:	mov	x0, x19
   17ad4:	ldr	x8, [x8, #40]
   17ad8:	blr	x8
   17adc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17ae0:	ldr	w8, [x19, #48]
   17ae4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17ae8:	ldr	x8, [x19, #72]
   17aec:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17af0:	ldr	w9, [x8]
   17af4:	cmp	w9, #0x1
   17af8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17afc:	ldr	x8, [x8, #16]
   17b00:	tst	x8, #0xffff0000ffffffff
   17b04:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   17b08:	cmp	x8, #0x10, lsl #12
   17b0c:	b.cc	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.lo, b.ul, b.last
   17b10:	and	x9, x8, #0xffffffff0000ffff
   17b14:	cbz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17b18:	cmn	x8, #0x1
   17b1c:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   17b20:	and	x8, x8, #0xffffffffffff
   17b24:	mov	x9, #0xffffffffffff        	// #281474976710655
   17b28:	cmp	x8, x9
   17b2c:	b.eq	1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>  // b.none
   17b30:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17b34:	ldr	w8, [x19, #48]
   17b38:	cmp	w8, #0x3
   17b3c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17b40:	ldr	w8, [x19, #76]
   17b44:	cmp	w8, #0x2
   17b48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17b4c:	ldr	x8, [x19]
   17b50:	mov	x0, x19
   17b54:	ldr	x8, [x8, #56]
   17b58:	blr	x8
   17b5c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17b60:	ldr	x8, [x8]
   17b64:	mov	w9, w0
   17b68:	lsr	x9, x9, #3
   17b6c:	ldrh	w10, [x8, #1270]
   17b70:	cmp	w9, w10
   17b74:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   17b78:	ldr	x8, [x8, #1256]
   17b7c:	ldrb	w8, [x8, x9]
   17b80:	and	w9, w0, #0x7
   17b84:	lsr	w8, w8, w9
   17b88:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17b8c:	ldr	w8, [x19, #80]
   17b90:	cmp	w8, #0x20
   17b94:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17b98:	ldr	w9, [x19, #48]
   17b9c:	add	x8, x19, #0x48
   17ba0:	cmp	w9, #0x3
   17ba4:	b.eq	1b288 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x69f4>  // b.none
   17ba8:	cmp	w9, #0xa
   17bac:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   17bb0:	add	x10, x8, #0x4
   17bb4:	b	1b28c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x69f8>
   17bb8:	ldr	w8, [x19, #48]
   17bbc:	cmp	w8, #0x3
   17bc0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17bc4:	ldr	w8, [x19, #76]
   17bc8:	cmp	w8, #0x1
   17bcc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17bd0:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17bd4:	ldr	w8, [x19, #48]
   17bd8:	cmp	w8, #0x4
   17bdc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17be0:	ldr	w8, [x19, #76]
   17be4:	cmp	w8, #0x4
   17be8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17bec:	ldr	w8, [x19, #88]
   17bf0:	cmp	w8, #0x2
   17bf4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17bf8:	ldr	w8, [x19, #84]
   17bfc:	cmp	w8, #0x8
   17c00:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17c04:	ldr	w8, [x19, #80]
   17c08:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17c0c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17c10:	ldr	w8, [x19, #48]
   17c14:	cmp	w8, #0x3
   17c18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17c1c:	ldr	w8, [x19, #76]
   17c20:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17c24:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17c28:	ldr	w8, [x19, #72]
   17c2c:	ldr	x9, [x9]
   17c30:	lsr	x10, x8, #3
   17c34:	ldrh	w11, [x9, #918]
   17c38:	cmp	w10, w11
   17c3c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   17c40:	ldr	x9, [x9, #904]
   17c44:	and	w8, w8, #0x7
   17c48:	ldrb	w9, [x9, x10]
   17c4c:	lsr	w8, w9, w8
   17c50:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17c54:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17c58:	ldr	w8, [x19, #48]
   17c5c:	cmp	w8, #0x4
   17c60:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17c64:	ldr	w8, [x19, #76]
   17c68:	cmp	w8, #0x1
   17c6c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17c70:	ldr	w8, [x19, #88]
   17c74:	cmp	w8, #0x2
   17c78:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17c7c:	ldr	w8, [x19, #84]
   17c80:	cmp	w8, #0x20
   17c84:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17c88:	ldr	w8, [x19, #80]
   17c8c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17c90:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17c94:	ldr	w8, [x19, #48]
   17c98:	cmp	w8, #0x3
   17c9c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17ca0:	ldr	w8, [x19, #76]
   17ca4:	cmp	w8, #0x2
   17ca8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17cac:	ldr	x8, [x19]
   17cb0:	mov	x0, x19
   17cb4:	ldr	x8, [x8, #56]
   17cb8:	blr	x8
   17cbc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17cc0:	ldr	x8, [x8]
   17cc4:	mov	w9, w0
   17cc8:	lsr	x9, x9, #3
   17ccc:	ldrh	w10, [x8, #1270]
   17cd0:	cmp	w9, w10
   17cd4:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   17cd8:	ldr	x8, [x8, #1256]
   17cdc:	ldrb	w8, [x8, x9]
   17ce0:	and	w9, w0, #0x7
   17ce4:	lsr	w8, w8, w9
   17ce8:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17cec:	ldr	w8, [x19, #80]
   17cf0:	cmp	w8, #0x40
   17cf4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17cf8:	ldr	w9, [x19, #48]
   17cfc:	add	x8, x19, #0x48
   17d00:	cmp	w9, #0x3
   17d04:	b.eq	1b2ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a18>  // b.none
   17d08:	cmp	w9, #0xa
   17d0c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   17d10:	add	x10, x8, #0x4
   17d14:	b	1b2b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a1c>
   17d18:	ldr	x8, [x19]
   17d1c:	mov	x0, x19
   17d20:	ldr	x8, [x8, #40]
   17d24:	blr	x8
   17d28:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17d2c:	ldr	w8, [x19, #48]
   17d30:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17d34:	ldr	x8, [x19, #72]
   17d38:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17d3c:	ldr	w9, [x8]
   17d40:	cmp	w9, #0x1
   17d44:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17d48:	ldr	x8, [x8, #16]
   17d4c:	cmp	x8, #0x10, lsl #12
   17d50:	b.cc	17d60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x34cc>  // b.lo, b.ul, b.last
   17d54:	add	x9, x8, #0x8, lsl #12
   17d58:	lsr	x9, x9, #16
   17d5c:	cbnz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17d60:	and	x0, x8, #0xffff
   17d64:	add	x2, sp, #0x10
   17d68:	mov	w1, #0x10                  	// #16
   17d6c:	bl	1ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   17d70:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17d74:	mov	x0, x19
   17d78:	bl	1e5c0 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>
   17d7c:	cbnz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17d80:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17d84:	ldr	w8, [x19, #48]
   17d88:	cmp	w8, #0x3
   17d8c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17d90:	ldr	w8, [x19, #76]
   17d94:	cmp	w8, #0x2
   17d98:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17d9c:	ldr	x8, [x19]
   17da0:	mov	x0, x19
   17da4:	ldr	x8, [x8, #56]
   17da8:	blr	x8
   17dac:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17db0:	ldr	x8, [x8]
   17db4:	mov	w9, w0
   17db8:	lsr	x9, x9, #3
   17dbc:	ldrh	w10, [x8, #1366]
   17dc0:	cmp	w9, w10
   17dc4:	b.cs	17de8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3554>  // b.hs, b.nlast
   17dc8:	ldr	x8, [x8, #1352]
   17dcc:	ldrb	w8, [x8, x9]
   17dd0:	and	w9, w0, #0x7
   17dd4:	lsr	w8, w8, w9
   17dd8:	tbz	w8, #0, 17de8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3554>
   17ddc:	ldr	w8, [x19, #80]
   17de0:	cmp	w8, #0x20
   17de4:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   17de8:	mov	w21, #0x8c                  	// #140
   17dec:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17df0:	ldr	x8, [x19]
   17df4:	mov	x0, x19
   17df8:	ldr	x8, [x8, #40]
   17dfc:	blr	x8
   17e00:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17e04:	ldr	w8, [x19, #48]
   17e08:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17e0c:	ldr	x8, [x19, #72]
   17e10:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17e14:	ldr	w9, [x8]
   17e18:	cmp	w9, #0x1
   17e1c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17e20:	ldr	x8, [x8, #16]
   17e24:	mvn	w9, w8
   17e28:	tst	x9, #0xffff0000
   17e2c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17e30:	and	x8, x8, #0xffffffff0000ffff
   17e34:	cbnz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   17e38:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17e3c:	ldr	w8, [x19, #48]
   17e40:	cmp	w8, #0x3
   17e44:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17e48:	ldr	w8, [x19, #76]
   17e4c:	cmp	w8, #0x2
   17e50:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17e54:	ldr	x8, [x19]
   17e58:	mov	x0, x19
   17e5c:	ldr	x8, [x8, #56]
   17e60:	blr	x8
   17e64:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17e68:	ldr	x8, [x8]
   17e6c:	mov	w9, w0
   17e70:	lsr	x9, x9, #3
   17e74:	ldrh	w10, [x8, #1270]
   17e78:	cmp	w9, w10
   17e7c:	b.cs	17ea0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x360c>  // b.hs, b.nlast
   17e80:	ldr	x8, [x8, #1256]
   17e84:	ldrb	w8, [x8, x9]
   17e88:	and	w9, w0, #0x7
   17e8c:	lsr	w8, w8, w9
   17e90:	tbz	w8, #0, 17ea0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x360c>
   17e94:	ldr	w8, [x19, #80]
   17e98:	cmp	w8, #0x80
   17e9c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   17ea0:	mov	w21, #0x6e                  	// #110
   17ea4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17ea8:	ldr	w8, [x19, #48]
   17eac:	cmp	w8, #0x3
   17eb0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17eb4:	ldr	w8, [x19, #76]
   17eb8:	cmp	w8, #0x2
   17ebc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17ec0:	ldr	x8, [x19]
   17ec4:	mov	x0, x19
   17ec8:	ldr	x8, [x8, #56]
   17ecc:	blr	x8
   17ed0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   17ed4:	ldr	x8, [x8]
   17ed8:	mov	w9, w0
   17edc:	lsr	x9, x9, #3
   17ee0:	ldrh	w10, [x8, #1366]
   17ee4:	cmp	w9, w10
   17ee8:	b.cs	17f0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3678>  // b.hs, b.nlast
   17eec:	ldr	x8, [x8, #1352]
   17ef0:	ldrb	w8, [x8, x9]
   17ef4:	and	w9, w0, #0x7
   17ef8:	lsr	w8, w8, w9
   17efc:	tbz	w8, #0, 17f0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3678>
   17f00:	ldr	w8, [x19, #80]
   17f04:	cmp	w8, #0x10
   17f08:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   17f0c:	mov	w21, #0x8b                  	// #139
   17f10:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17f14:	mov	x0, x19
   17f18:	bl	1f194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   17f1c:	cbz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17f20:	mov	x0, x19
   17f24:	bl	1f794 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   17f28:	cbz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17f2c:	cmp	w0, #0x1
   17f30:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17f34:	mov	w21, #0x5b                  	// #91
   17f38:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   17f3c:	ldr	x8, [x19]
   17f40:	mov	x0, x19
   17f44:	ldr	x8, [x8, #40]
   17f48:	blr	x8
   17f4c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17f50:	ldr	w8, [x19, #48]
   17f54:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17f58:	ldr	x8, [x19, #72]
   17f5c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17f60:	ldr	w9, [x8]
   17f64:	cmp	w9, #0x1
   17f68:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17f6c:	ldr	x8, [x8, #16]
   17f70:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17f74:	and	x8, x8, #0xffffffffffff
   17f78:	cbz	x8, 1805c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x37c8>
   17f7c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17f80:	ldr	x8, [x19]
   17f84:	mov	x0, x19
   17f88:	ldr	x8, [x8, #40]
   17f8c:	blr	x8
   17f90:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17f94:	ldr	w8, [x19, #48]
   17f98:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17f9c:	ldr	x8, [x19, #72]
   17fa0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17fa4:	ldr	w9, [x8]
   17fa8:	cmp	w9, #0x1
   17fac:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   17fb0:	ldr	x0, [x8, #16]
   17fb4:	add	x2, sp, #0x10
   17fb8:	mov	w1, #0x40                  	// #64
   17fbc:	bl	1ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   17fc0:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17fc4:	mov	x0, x19
   17fc8:	bl	1e7dc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>
   17fcc:	cbnz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   17fd0:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17fd4:	ldr	x8, [x19]
   17fd8:	mov	x0, x19
   17fdc:	ldr	x8, [x8, #40]
   17fe0:	blr	x8
   17fe4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   17fe8:	ldr	w8, [x19, #48]
   17fec:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   17ff0:	ldr	x8, [x19, #72]
   17ff4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   17ff8:	ldr	w9, [x8]
   17ffc:	cmp	w9, #0x1
   18000:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18004:	ldr	x8, [x8, #16]
   18008:	tst	x8, #0xffffffff
   1800c:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   18010:	and	x8, x8, #0xffff
   18014:	cbz	x8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18018:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1801c:	ldr	x8, [x19]
   18020:	mov	x0, x19
   18024:	ldr	x8, [x8, #40]
   18028:	blr	x8
   1802c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18030:	ldr	w8, [x19, #48]
   18034:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18038:	ldr	x8, [x19, #72]
   1803c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18040:	ldr	w9, [x8]
   18044:	cmp	w9, #0x1
   18048:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1804c:	ldr	x8, [x8, #16]
   18050:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18054:	and	x8, x8, #0xffffffff0000ffff
   18058:	cbnz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1805c:	mov	w21, #0x4                   	// #4
   18060:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18064:	ldr	w8, [x19, #48]
   18068:	cmp	w8, #0x4
   1806c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18070:	ldr	w8, [x19, #76]
   18074:	cmp	w8, #0x4
   18078:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1807c:	ldr	w8, [x19, #88]
   18080:	cmp	w8, #0x2
   18084:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18088:	ldr	w8, [x19, #84]
   1808c:	cmp	w8, #0x10
   18090:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18094:	ldr	w8, [x19, #80]
   18098:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1809c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   180a0:	ldr	w8, [x19, #48]
   180a4:	cmp	w8, #0x4
   180a8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   180ac:	ldr	w8, [x19, #76]
   180b0:	cmp	w8, #0x3
   180b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   180b8:	ldr	w8, [x19, #88]
   180bc:	cmp	w8, #0x2
   180c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   180c4:	ldr	w8, [x19, #84]
   180c8:	cmp	w8, #0x40
   180cc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   180d0:	ldr	w8, [x19, #80]
   180d4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   180d8:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   180dc:	ldr	x8, [x19]
   180e0:	mov	x0, x19
   180e4:	ldr	x8, [x8, #40]
   180e8:	blr	x8
   180ec:	tbnz	w0, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   180f0:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   180f4:	ldr	w8, [x19, #48]
   180f8:	cmp	w8, #0xd
   180fc:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   18100:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18104:	ldr	x8, [x19]
   18108:	mov	x0, x19
   1810c:	ldr	x8, [x8, #40]
   18110:	blr	x8
   18114:	tbz	w0, #0, 18158 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x38c4>
   18118:	ldr	w8, [x19, #48]
   1811c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18120:	ldr	x8, [x19, #72]
   18124:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18128:	ldr	w9, [x8]
   1812c:	mov	w21, #0x91                  	// #145
   18130:	cmp	w9, #0x1
   18134:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   18138:	ldr	x0, [x8, #16]
   1813c:	add	x2, sp, #0x10
   18140:	mov	w1, #0x40                  	// #64
   18144:	bl	1ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   18148:	tst	w0, #0x1
   1814c:	mov	w8, #0x4                   	// #4
   18150:	csel	w21, w8, w21, ne  // ne = any
   18154:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18158:	mov	w21, #0x91                  	// #145
   1815c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18160:	ldr	w8, [x19, #48]
   18164:	cmp	w8, #0x3
   18168:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1816c:	ldr	w8, [x19, #76]
   18170:	cmp	w8, #0x3
   18174:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18178:	ldr	x8, [x19]
   1817c:	mov	x0, x19
   18180:	ldr	x8, [x8, #56]
   18184:	blr	x8
   18188:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1818c:	ldr	x8, [x8]
   18190:	mov	w9, w0
   18194:	lsr	x9, x9, #3
   18198:	ldrh	w10, [x8, #118]
   1819c:	cmp	w9, w10
   181a0:	b.cs	181c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3930>  // b.hs, b.nlast
   181a4:	ldr	x8, [x8, #104]
   181a8:	ldrb	w8, [x8, x9]
   181ac:	and	w9, w0, #0x7
   181b0:	lsr	w8, w8, w9
   181b4:	tbz	w8, #0, 181c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3930>
   181b8:	ldr	w8, [x19, #80]
   181bc:	cmp	w8, #0x40
   181c0:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   181c4:	mov	w21, #0x65                  	// #101
   181c8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   181cc:	ldr	x8, [x19]
   181d0:	mov	x0, x19
   181d4:	ldr	x8, [x8, #40]
   181d8:	blr	x8
   181dc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   181e0:	ldr	w8, [x19, #48]
   181e4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   181e8:	ldr	x8, [x19, #72]
   181ec:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   181f0:	ldr	w9, [x8]
   181f4:	cmp	w9, #0x1
   181f8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   181fc:	ldr	x8, [x8, #16]
   18200:	mov	w9, #0x31                  	// #49
   18204:	add	x8, x8, #0x20
   18208:	b	19c50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53bc>
   1820c:	ldr	x8, [x19]
   18210:	mov	x0, x19
   18214:	ldr	x8, [x8, #40]
   18218:	blr	x8
   1821c:	tbz	w0, #0, 1a9a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6114>
   18220:	ldr	w8, [x19, #48]
   18224:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18228:	ldr	x0, [x19, #72]
   1822c:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18230:	ldr	w8, [x0]
   18234:	cmp	w8, #0x1
   18238:	b.ne	1a654 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5dc0>  // b.any
   1823c:	ldr	x8, [x0, #16]
   18240:	mov	w21, #0x33                  	// #51
   18244:	cmp	x8, #0x2, lsl #12
   18248:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   1824c:	and	x8, x8, #0x8000000000000001
   18250:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   18254:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18258:	ldr	x8, [x19]
   1825c:	mov	x0, x19
   18260:	ldr	x8, [x8, #40]
   18264:	blr	x8
   18268:	tbz	w0, #0, 1a018 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5784>
   1826c:	ldr	x8, [x19, #72]
   18270:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18274:	ldr	w9, [x8]
   18278:	mov	w21, #0x4                   	// #4
   1827c:	cmp	w9, #0x1
   18280:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   18284:	ldr	x8, [x8, #16]
   18288:	mov	x9, #0x100000000           	// #4294967296
   1828c:	mov	x10, #0x1ffff0000           	// #8589869056
   18290:	movk	x10, #0xf001
   18294:	tst	x8, #0xfff
   18298:	add	x8, x8, x9
   1829c:	ccmp	x8, x10, #0x2, eq  // eq = none
   182a0:	mov	w8, #0x29                  	// #41
   182a4:	csel	w21, w21, w8, cc  // cc = lo, ul, last
   182a8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   182ac:	ldr	w8, [x19, #48]
   182b0:	cmp	w8, #0x3
   182b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   182b8:	ldr	w8, [x19, #76]
   182bc:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   182c0:	ldr	x8, [x19]
   182c4:	mov	x0, x19
   182c8:	ldr	x8, [x8, #56]
   182cc:	blr	x8
   182d0:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   182d4:	ldr	x8, [x8]
   182d8:	mov	w9, w0
   182dc:	lsr	x9, x9, #3
   182e0:	ldrh	w10, [x8, #534]
   182e4:	cmp	w9, w10
   182e8:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   182ec:	ldr	x8, [x8, #520]
   182f0:	ldrb	w8, [x8, x9]
   182f4:	and	w9, w0, #0x7
   182f8:	lsr	w8, w8, w9
   182fc:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18300:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18304:	ldr	x8, [x19]
   18308:	mov	x0, x19
   1830c:	ldr	x8, [x8, #40]
   18310:	blr	x8
   18314:	tbz	w0, #0, 1aa08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6174>
   18318:	ldr	w8, [x19, #48]
   1831c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18320:	ldr	x0, [x19, #72]
   18324:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18328:	ldr	w8, [x0]
   1832c:	cmp	w8, #0x1
   18330:	b.ne	1a674 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5de0>  // b.any
   18334:	ldr	x8, [x0, #16]
   18338:	mov	w21, #0x2b                  	// #43
   1833c:	cmp	x8, #0x10, lsl #12
   18340:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   18344:	and	x8, x8, #0x800000000000000f
   18348:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1834c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18350:	ldr	w8, [x19, #48]
   18354:	cmp	w8, #0x4
   18358:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1835c:	ldr	w8, [x19, #76]
   18360:	cmp	w8, #0x1
   18364:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18368:	ldr	w8, [x19, #88]
   1836c:	cmp	w8, #0x1
   18370:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18374:	ldr	w8, [x19, #84]
   18378:	cmp	w8, #0x8
   1837c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18380:	b	19a98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5204>
   18384:	ldr	w8, [x19, #48]
   18388:	cmp	w8, #0x4
   1838c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18390:	ldr	w8, [x19, #76]
   18394:	cmp	w8, #0x3
   18398:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1839c:	ldr	w8, [x19, #88]
   183a0:	cmp	w8, #0x1
   183a4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183a8:	ldr	w8, [x19, #84]
   183ac:	cmp	w8, #0x10
   183b0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183b4:	b	199b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5120>
   183b8:	ldr	w8, [x19, #48]
   183bc:	cmp	w8, #0x4
   183c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183c4:	ldr	w8, [x19, #76]
   183c8:	cmp	w8, #0x3
   183cc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183d0:	ldr	w8, [x19, #88]
   183d4:	cmp	w8, #0x1
   183d8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183dc:	ldr	w8, [x19, #84]
   183e0:	cmp	w8, #0x40
   183e4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183e8:	b	194a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c0c>
   183ec:	ldr	w8, [x19, #48]
   183f0:	cmp	w8, #0x3
   183f4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   183f8:	ldr	w8, [x19, #76]
   183fc:	cmp	w8, #0x2
   18400:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18404:	ldr	x8, [x19]
   18408:	mov	x0, x19
   1840c:	ldr	x8, [x8, #56]
   18410:	blr	x8
   18414:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18418:	ldr	x8, [x8]
   1841c:	mov	w9, w0
   18420:	lsr	x9, x9, #3
   18424:	ldrh	w10, [x8, #1270]
   18428:	cmp	w9, w10
   1842c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18430:	ldr	x8, [x8, #1256]
   18434:	ldrb	w8, [x8, x9]
   18438:	and	w9, w0, #0x7
   1843c:	lsr	w8, w8, w9
   18440:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18444:	ldr	w8, [x19, #80]
   18448:	cmp	w8, #0x20
   1844c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18450:	ldr	w9, [x19, #48]
   18454:	add	x8, x19, #0x48
   18458:	cmp	w9, #0x3
   1845c:	b.eq	1b2cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a38>  // b.none
   18460:	cmp	w9, #0xa
   18464:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   18468:	add	x10, x8, #0x4
   1846c:	b	1b2d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a3c>
   18470:	ldr	x8, [x19]
   18474:	mov	x0, x19
   18478:	ldr	x8, [x8, #40]
   1847c:	blr	x8
   18480:	tbz	w0, #0, 184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>
   18484:	ldr	w8, [x19, #48]
   18488:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1848c:	ldr	x8, [x19, #72]
   18490:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18494:	ldr	w9, [x8]
   18498:	cmp	w9, #0x1
   1849c:	b.ne	184e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c4c>  // b.any
   184a0:	ldr	x8, [x8, #16]
   184a4:	mov	w19, #0x91                  	// #145
   184a8:	cmp	x8, #0x10, lsl #12
   184ac:	b.cc	184c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3c2c>  // b.lo, b.ul, b.last
   184b0:	add	x9, x8, #0x8, lsl #12
   184b4:	lsr	x9, x9, #16
   184b8:	mov	w21, #0x91                  	// #145
   184bc:	cbnz	x9, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   184c0:	and	x0, x8, #0xffff
   184c4:	add	x2, sp, #0x10
   184c8:	mov	w1, #0x10                  	// #16
   184cc:	bl	1ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   184d0:	tst	w0, #0x1
   184d4:	mov	w8, #0x4                   	// #4
   184d8:	csel	w21, w8, w19, ne  // ne = any
   184dc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   184e0:	mov	w21, #0x91                  	// #145
   184e4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   184e8:	ldr	w8, [x19, #48]
   184ec:	cmp	w8, #0x3
   184f0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   184f4:	ldr	w8, [x19, #76]
   184f8:	cmp	w8, #0x2
   184fc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18500:	ldr	x8, [x19]
   18504:	mov	x0, x19
   18508:	ldr	x8, [x8, #56]
   1850c:	blr	x8
   18510:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18514:	ldr	x8, [x8]
   18518:	mov	w9, w0
   1851c:	lsr	x9, x9, #3
   18520:	ldrh	w10, [x8, #1270]
   18524:	cmp	w9, w10
   18528:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   1852c:	ldr	x8, [x8, #1256]
   18530:	ldrb	w8, [x8, x9]
   18534:	and	w9, w0, #0x7
   18538:	lsr	w8, w8, w9
   1853c:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18540:	mov	x8, x19
   18544:	ldr	w9, [x8, #80]!
   18548:	cmp	w9, #0x20
   1854c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18550:	ldr	w10, [x19, #48]
   18554:	add	x9, x19, #0x48
   18558:	cmp	w10, #0x3
   1855c:	b.eq	1b2ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a58>  // b.none
   18560:	cmp	w10, #0xa
   18564:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   18568:	add	x11, x9, #0x4
   1856c:	b	1b2f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a5c>
   18570:	ldr	w8, [x19, #48]
   18574:	cmp	w8, #0x4
   18578:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1857c:	ldr	w8, [x19, #76]
   18580:	cmp	w8, #0x2
   18584:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18588:	ldr	w8, [x19, #88]
   1858c:	cmp	w8, #0x1
   18590:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18594:	ldr	w8, [x19, #84]
   18598:	cmp	w8, #0x40
   1859c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185a0:	ldr	w8, [x19, #80]
   185a4:	cmp	w8, #0x1
   185a8:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   185ac:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   185b0:	ldr	w8, [x19, #48]
   185b4:	cmp	w8, #0x4
   185b8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185bc:	ldr	w8, [x19, #76]
   185c0:	cmp	w8, #0x3
   185c4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185c8:	ldr	w8, [x19, #88]
   185cc:	cmp	w8, #0x1
   185d0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185d4:	ldr	w8, [x19, #84]
   185d8:	cmp	w8, #0x10
   185dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185e0:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   185e4:	ldr	w8, [x19, #48]
   185e8:	cmp	w8, #0x4
   185ec:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185f0:	ldr	w8, [x19, #76]
   185f4:	cmp	w8, #0x2
   185f8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   185fc:	ldr	w8, [x19, #88]
   18600:	cmp	w8, #0x1
   18604:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18608:	ldr	w8, [x19, #84]
   1860c:	cmp	w8, #0x10
   18610:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18614:	ldr	w8, [x19, #80]
   18618:	cmp	w8, #0x4
   1861c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18620:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18624:	ldr	w8, [x19, #48]
   18628:	cmp	w8, #0x4
   1862c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18630:	ldr	w8, [x19, #76]
   18634:	cmp	w8, #0x3
   18638:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1863c:	ldr	w8, [x19, #88]
   18640:	cmp	w8, #0x1
   18644:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18648:	ldr	w8, [x19, #84]
   1864c:	cmp	w8, #0x20
   18650:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18654:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   18658:	ldr	w8, [x19, #48]
   1865c:	cmp	w8, #0x4
   18660:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18664:	ldr	w8, [x19, #76]
   18668:	cmp	w8, #0x2
   1866c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18670:	ldr	w8, [x19, #88]
   18674:	cmp	w8, #0x2
   18678:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1867c:	ldr	w8, [x19, #84]
   18680:	cmp	w8, #0x8
   18684:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18688:	ldr	w8, [x19, #80]
   1868c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18690:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18694:	ldr	x8, [x19]
   18698:	mov	x0, x19
   1869c:	ldr	x8, [x8, #40]
   186a0:	blr	x8
   186a4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   186a8:	ldr	w8, [x19, #48]
   186ac:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   186b0:	ldr	x8, [x19, #72]
   186b4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   186b8:	ldr	w9, [x8]
   186bc:	cmp	w9, #0x1
   186c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   186c4:	ldr	x8, [x8, #16]
   186c8:	lsr	x9, x8, #32
   186cc:	cbz	x9, 186e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3e4c>
   186d0:	mov	w9, #0x80000000            	// #-2147483648
   186d4:	add	x9, x8, x9
   186d8:	lsr	x9, x9, #32
   186dc:	cbnz	x9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   186e0:	and	x0, x8, #0xffffffff
   186e4:	add	x2, sp, #0x10
   186e8:	mov	w1, #0x20                  	// #32
   186ec:	bl	1ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   186f0:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   186f4:	mov	x0, x19
   186f8:	bl	1e6d4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>
   186fc:	cbnz	w0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18700:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18704:	ldr	w8, [x19, #48]
   18708:	cmp	w8, #0x3
   1870c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18710:	ldr	w8, [x19, #76]
   18714:	cmp	w8, #0x2
   18718:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1871c:	ldr	x8, [x19]
   18720:	mov	x0, x19
   18724:	ldr	x8, [x8, #56]
   18728:	blr	x8
   1872c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18730:	ldr	x8, [x8]
   18734:	mov	w9, w0
   18738:	lsr	x9, x9, #3
   1873c:	ldrh	w10, [x8, #1334]
   18740:	cmp	w9, w10
   18744:	b.cs	18768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ed4>  // b.hs, b.nlast
   18748:	ldr	x8, [x8, #1320]
   1874c:	ldrb	w8, [x8, x9]
   18750:	and	w9, w0, #0x7
   18754:	lsr	w8, w8, w9
   18758:	tbz	w8, #0, 18768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3ed4>
   1875c:	ldr	w8, [x19, #80]
   18760:	cmp	w8, #0x40
   18764:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   18768:	mov	w21, #0x90                  	// #144
   1876c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18770:	ldr	w8, [x19, #48]
   18774:	cmp	w8, #0x4
   18778:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1877c:	ldr	w8, [x19, #76]
   18780:	cmp	w8, #0x1
   18784:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18788:	ldr	w8, [x19, #88]
   1878c:	cmp	w8, #0x2
   18790:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18794:	ldr	w8, [x19, #84]
   18798:	cmp	w8, #0x10
   1879c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   187a0:	ldr	w8, [x19, #80]
   187a4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   187a8:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   187ac:	ldr	w8, [x19, #48]
   187b0:	cmp	w8, #0x3
   187b4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   187b8:	ldr	w8, [x19, #76]
   187bc:	cmp	w8, #0x2
   187c0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   187c4:	ldr	x8, [x19]
   187c8:	mov	x0, x19
   187cc:	ldr	x8, [x8, #56]
   187d0:	blr	x8
   187d4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   187d8:	ldr	x8, [x8]
   187dc:	mov	w9, w0
   187e0:	lsr	x9, x9, #3
   187e4:	ldrh	w10, [x8, #1334]
   187e8:	cmp	w9, w10
   187ec:	b.cs	18810 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f7c>  // b.hs, b.nlast
   187f0:	ldr	x8, [x8, #1320]
   187f4:	ldrb	w8, [x8, x9]
   187f8:	and	w9, w0, #0x7
   187fc:	lsr	w8, w8, w9
   18800:	tbz	w8, #0, 18810 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x3f7c>
   18804:	ldr	w8, [x19, #80]
   18808:	cmp	w8, #0x10
   1880c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   18810:	mov	w21, #0x8e                  	// #142
   18814:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18818:	ldr	w8, [x19, #48]
   1881c:	cmp	w8, #0x4
   18820:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18824:	ldr	w8, [x19, #76]
   18828:	cmp	w8, #0x4
   1882c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18830:	ldr	w8, [x19, #88]
   18834:	cmp	w8, #0x2
   18838:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1883c:	ldr	w8, [x19, #84]
   18840:	cmp	w8, #0x40
   18844:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18848:	ldr	w8, [x19, #80]
   1884c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18850:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18854:	ldr	w8, [x19, #48]
   18858:	cmp	w8, #0x4
   1885c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18860:	ldr	w8, [x19, #76]
   18864:	cmp	w8, #0x4
   18868:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1886c:	ldr	w8, [x19, #88]
   18870:	cmp	w8, #0x2
   18874:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18878:	ldr	w8, [x19, #84]
   1887c:	cmp	w8, #0x20
   18880:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18884:	ldr	w8, [x19, #80]
   18888:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1888c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18890:	ldr	w8, [x19, #48]
   18894:	cmp	w8, #0x4
   18898:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1889c:	ldr	w8, [x19, #76]
   188a0:	cmp	w8, #0x2
   188a4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188a8:	ldr	w8, [x19, #88]
   188ac:	cmp	w8, #0x1
   188b0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188b4:	ldr	w8, [x19, #84]
   188b8:	cmp	w8, #0x8
   188bc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188c0:	b	19a98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5204>
   188c4:	ldr	w8, [x19, #48]
   188c8:	cmp	w8, #0x4
   188cc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188d0:	ldr	w8, [x19, #76]
   188d4:	cmp	w8, #0x2
   188d8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188dc:	ldr	w8, [x19, #88]
   188e0:	cmp	w8, #0x2
   188e4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188e8:	ldr	w8, [x19, #84]
   188ec:	cmp	w8, #0x10
   188f0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   188f4:	ldr	w8, [x19, #80]
   188f8:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   188fc:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18900:	ldr	x8, [x19]
   18904:	mov	x0, x19
   18908:	ldr	x8, [x8, #40]
   1890c:	blr	x8
   18910:	tbz	w0, #0, 1a340 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5aac>
   18914:	ldr	w8, [x19, #48]
   18918:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1891c:	ldr	x8, [x19, #72]
   18920:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18924:	ldr	w10, [x8]
   18928:	mov	w9, #0x1e                  	// #30
   1892c:	mov	w21, #0x1e                  	// #30
   18930:	cmp	w10, #0x1
   18934:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   18938:	ldr	x8, [x8, #16]
   1893c:	cmp	x8, #0x10, lsl #12
   18940:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   18944:	ldr	x8, [x19]
   18948:	mov	x0, x19
   1894c:	ldr	x8, [x8, #40]
   18950:	blr	x8
   18954:	tbz	w0, #0, 1a348 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ab4>
   18958:	ldr	w8, [x19, #48]
   1895c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18960:	ldr	x8, [x19, #72]
   18964:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18968:	ldr	w9, [x8]
   1896c:	mov	w21, #0x1f                  	// #31
   18970:	cmp	w9, #0x1
   18974:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   18978:	ldr	x8, [x8, #16]
   1897c:	cmp	x8, #0x8
   18980:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   18984:	ldr	w8, [x19, #48]
   18988:	cmp	w8, #0x3
   1898c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18990:	ldr	w8, [x19, #76]
   18994:	cmp	w8, #0x2
   18998:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1899c:	ldr	x8, [x19]
   189a0:	mov	x0, x19
   189a4:	ldr	x8, [x8, #56]
   189a8:	blr	x8
   189ac:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   189b0:	ldr	x8, [x8]
   189b4:	mov	w9, w0
   189b8:	lsr	x9, x9, #3
   189bc:	ldrh	w10, [x8, #1270]
   189c0:	cmp	w9, w10
   189c4:	b.cs	189e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4150>  // b.hs, b.nlast
   189c8:	ldr	x8, [x8, #1256]
   189cc:	ldrb	w8, [x8, x9]
   189d0:	and	w9, w0, #0x7
   189d4:	lsr	w8, w8, w9
   189d8:	tbz	w8, #0, 189e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4150>
   189dc:	ldr	w8, [x19, #80]
   189e0:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   189e4:	mov	w21, #0x6d                  	// #109
   189e8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   189ec:	ldr	w8, [x19, #48]
   189f0:	cmp	w8, #0x1
   189f4:	b.ne	1a350 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5abc>  // b.any
   189f8:	ldr	w8, [x19, #80]
   189fc:	ldr	x0, [x19, #72]
   18a00:	cbz	w8, 1aabc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6228>
   18a04:	cmp	w8, #0xc
   18a08:	b.eq	1aabc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6228>  // b.none
   18a0c:	b	1ad20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x648c>
   18a10:	ldr	w8, [x19, #48]
   18a14:	cmp	w8, #0x4
   18a18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a1c:	ldr	w8, [x19, #76]
   18a20:	cmp	w8, #0x1
   18a24:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a28:	ldr	w8, [x19, #80]
   18a2c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18a30:	b	18c84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x43f0>
   18a34:	ldr	w8, [x19, #48]
   18a38:	cmp	w8, #0x4
   18a3c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a40:	ldr	w8, [x19, #76]
   18a44:	cmp	w8, #0x2
   18a48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a4c:	ldr	w8, [x19, #88]
   18a50:	cmp	w8, #0x1
   18a54:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a58:	ldr	w8, [x19, #84]
   18a5c:	cmp	w8, #0x20
   18a60:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a64:	ldr	w8, [x19, #80]
   18a68:	cmp	w8, #0x4
   18a6c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a70:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18a74:	ldr	w8, [x19, #48]
   18a78:	cmp	w8, #0x4
   18a7c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a80:	ldr	w8, [x19, #76]
   18a84:	cmp	w8, #0x1
   18a88:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a8c:	ldr	w8, [x19, #88]
   18a90:	cmp	w8, #0x1
   18a94:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18a98:	ldr	w8, [x19, #84]
   18a9c:	cmp	w8, #0x10
   18aa0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18aa4:	ldr	w8, [x19, #80]
   18aa8:	cmp	w8, #0x8
   18aac:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   18ab0:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18ab4:	ldr	w8, [x19, #48]
   18ab8:	cmp	w8, #0x3
   18abc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18ac0:	ldr	w8, [x19, #76]
   18ac4:	cmp	w8, #0x2
   18ac8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18acc:	ldr	x8, [x19]
   18ad0:	mov	x0, x19
   18ad4:	ldr	x8, [x8, #56]
   18ad8:	blr	x8
   18adc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18ae0:	ldr	x8, [x8]
   18ae4:	mov	w9, w0
   18ae8:	lsr	x9, x9, #3
   18aec:	ldrh	w10, [x8, #1270]
   18af0:	cmp	w9, w10
   18af4:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18af8:	ldr	x8, [x8, #1256]
   18afc:	ldrb	w8, [x8, x9]
   18b00:	and	w9, w0, #0x7
   18b04:	lsr	w8, w8, w9
   18b08:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18b0c:	mov	x8, x19
   18b10:	ldr	w9, [x8, #80]!
   18b14:	cmp	w9, #0x40
   18b18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18b1c:	ldr	w10, [x19, #48]
   18b20:	add	x9, x19, #0x48
   18b24:	cmp	w10, #0x3
   18b28:	b.eq	1b318 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a84>  // b.none
   18b2c:	cmp	w10, #0xa
   18b30:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   18b34:	add	x11, x9, #0x4
   18b38:	b	1b31c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a88>
   18b3c:	ldr	w8, [x19, #48]
   18b40:	cmp	w8, #0x3
   18b44:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18b48:	ldr	w8, [x19, #76]
   18b4c:	cmp	w8, #0x2
   18b50:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18b54:	ldr	x8, [x19]
   18b58:	mov	x0, x19
   18b5c:	ldr	x8, [x8, #56]
   18b60:	blr	x8
   18b64:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18b68:	ldr	x8, [x8]
   18b6c:	mov	w9, w0
   18b70:	lsr	x9, x9, #3
   18b74:	ldrh	w10, [x8, #1270]
   18b78:	cmp	w9, w10
   18b7c:	b.cs	18ba0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x430c>  // b.hs, b.nlast
   18b80:	ldr	x8, [x8, #1256]
   18b84:	ldrb	w8, [x8, x9]
   18b88:	and	w9, w0, #0x7
   18b8c:	lsr	w8, w8, w9
   18b90:	tbz	w8, #0, 18ba0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x430c>
   18b94:	ldr	w8, [x19, #80]
   18b98:	cmp	w8, #0x8
   18b9c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   18ba0:	mov	w21, #0x8a                  	// #138
   18ba4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18ba8:	mov	x0, x19
   18bac:	bl	1e6d4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>
   18bb0:	cbz	w0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   18bb4:	cmp	w0, #0x1
   18bb8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18bbc:	mov	w21, #0x57                  	// #87
   18bc0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18bc4:	ldr	x8, [x19]
   18bc8:	mov	x0, x19
   18bcc:	ldr	x8, [x8, #40]
   18bd0:	blr	x8
   18bd4:	tbz	w0, #0, 1a018 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5784>
   18bd8:	ldr	w8, [x19, #48]
   18bdc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18be0:	ldr	x8, [x19, #72]
   18be4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18be8:	ldr	w9, [x8]
   18bec:	mov	w21, #0x4                   	// #4
   18bf0:	cmp	w9, #0x1
   18bf4:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   18bf8:	ldr	x8, [x8, #16]
   18bfc:	mov	w9, #0x8000000             	// #134217728
   18c00:	mov	w10, #0xfffd                	// #65533
   18c04:	movk	w10, #0xfff, lsl #16
   18c08:	and	x11, x8, #0x3
   18c0c:	add	x8, x8, x9
   18c10:	cmp	x8, x10
   18c14:	ccmp	x11, #0x0, #0x0, cc  // cc = lo, ul, last
   18c18:	b	1a00c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5778>
   18c1c:	ldr	x8, [x19]
   18c20:	mov	x0, x19
   18c24:	ldr	x8, [x8, #40]
   18c28:	blr	x8
   18c2c:	tbz	w0, #0, 19c60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53cc>
   18c30:	ldr	w8, [x19, #48]
   18c34:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   18c38:	ldr	x8, [x19, #72]
   18c3c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   18c40:	ldr	w10, [x8]
   18c44:	mov	w9, #0x1d                  	// #29
   18c48:	mov	w21, #0x1d                  	// #29
   18c4c:	cmp	w10, #0x1
   18c50:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   18c54:	ldr	x8, [x8, #16]
   18c58:	and	x8, x8, #0xffffffffffffffe0
   18c5c:	cmp	x8, #0x20
   18c60:	b	18fb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x471c>
   18c64:	ldr	w8, [x19, #48]
   18c68:	cmp	w8, #0x4
   18c6c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18c70:	ldr	w8, [x19, #76]
   18c74:	cmp	w8, #0x3
   18c78:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18c7c:	ldr	w8, [x19, #80]
   18c80:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18c84:	ldr	w8, [x19, #88]
   18c88:	cmp	w8, #0x1
   18c8c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18c90:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18c94:	ldr	w8, [x19, #48]
   18c98:	cmp	w8, #0x3
   18c9c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18ca0:	ldr	w8, [x19, #76]
   18ca4:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18ca8:	ldr	x8, [x19]
   18cac:	mov	x0, x19
   18cb0:	ldr	x8, [x8, #56]
   18cb4:	blr	x8
   18cb8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18cbc:	ldr	x8, [x8]
   18cc0:	mov	w9, w0
   18cc4:	lsr	x9, x9, #3
   18cc8:	ldrh	w10, [x8, #54]
   18ccc:	cmp	w9, w10
   18cd0:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18cd4:	ldr	x8, [x8, #40]
   18cd8:	ldrb	w8, [x8, x9]
   18cdc:	and	w9, w0, #0x7
   18ce0:	lsr	w8, w8, w9
   18ce4:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18ce8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18cec:	ldr	w8, [x19, #48]
   18cf0:	cmp	w8, #0x3
   18cf4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18cf8:	ldr	w8, [x19, #76]
   18cfc:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18d00:	ldr	x8, [x19]
   18d04:	mov	x0, x19
   18d08:	ldr	x8, [x8, #56]
   18d0c:	blr	x8
   18d10:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18d14:	ldr	x8, [x8]
   18d18:	mov	w9, w0
   18d1c:	lsr	x9, x9, #3
   18d20:	ldrh	w10, [x8, #182]
   18d24:	cmp	w9, w10
   18d28:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18d2c:	ldr	x8, [x8, #168]
   18d30:	ldrb	w8, [x8, x9]
   18d34:	and	w9, w0, #0x7
   18d38:	lsr	w8, w8, w9
   18d3c:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18d40:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18d44:	ldr	w8, [x19, #48]
   18d48:	cmp	w8, #0x3
   18d4c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18d50:	ldr	w8, [x19, #76]
   18d54:	cmp	w8, #0x2
   18d58:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18d5c:	ldr	x8, [x19]
   18d60:	mov	x0, x19
   18d64:	ldr	x8, [x8, #56]
   18d68:	blr	x8
   18d6c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18d70:	ldr	x8, [x8]
   18d74:	mov	w9, w0
   18d78:	lsr	x9, x9, #3
   18d7c:	ldrh	w10, [x8, #1270]
   18d80:	cmp	w9, w10
   18d84:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18d88:	ldr	x8, [x8, #1256]
   18d8c:	ldrb	w8, [x8, x9]
   18d90:	and	w9, w0, #0x7
   18d94:	lsr	w8, w8, w9
   18d98:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18d9c:	ldr	w8, [x19, #80]
   18da0:	cmp	w8, #0x40
   18da4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18da8:	ldr	w9, [x19, #48]
   18dac:	add	x8, x19, #0x48
   18db0:	cmp	w9, #0x3
   18db4:	b.eq	1b344 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ab0>  // b.none
   18db8:	cmp	w9, #0xa
   18dbc:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   18dc0:	add	x10, x8, #0x4
   18dc4:	b	1b348 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ab4>
   18dc8:	ldr	w8, [x19, #48]
   18dcc:	cmp	w8, #0x4
   18dd0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18dd4:	ldr	w8, [x19, #76]
   18dd8:	cmp	w8, #0x1
   18ddc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18de0:	ldr	w8, [x19, #88]
   18de4:	cmp	w8, #0x1
   18de8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18dec:	ldr	w8, [x19, #84]
   18df0:	cmp	w8, #0x40
   18df4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18df8:	b	194a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c0c>
   18dfc:	ldr	w8, [x19, #48]
   18e00:	cmp	w8, #0x3
   18e04:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18e08:	ldr	w8, [x19, #76]
   18e0c:	cmp	w8, #0x2
   18e10:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18e14:	ldr	x8, [x19]
   18e18:	mov	x0, x19
   18e1c:	ldr	x8, [x8, #56]
   18e20:	blr	x8
   18e24:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18e28:	ldr	x8, [x8]
   18e2c:	mov	w9, w0
   18e30:	lsr	x9, x9, #3
   18e34:	ldrh	w10, [x8, #1270]
   18e38:	cmp	w9, w10
   18e3c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18e40:	ldr	x8, [x8, #1256]
   18e44:	ldrb	w8, [x8, x9]
   18e48:	and	w9, w0, #0x7
   18e4c:	lsr	w8, w8, w9
   18e50:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18e54:	ldr	w8, [x19, #80]
   18e58:	cmp	w8, #0x20
   18e5c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18e60:	ldr	w9, [x19, #48]
   18e64:	add	x8, x19, #0x48
   18e68:	cmp	w9, #0x3
   18e6c:	b.eq	1b37c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ae8>  // b.none
   18e70:	cmp	w9, #0xa
   18e74:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   18e78:	add	x10, x8, #0x4
   18e7c:	b	1b380 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6aec>
   18e80:	ldr	w8, [x19, #48]
   18e84:	cmp	w8, #0x3
   18e88:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18e8c:	ldr	w8, [x19, #76]
   18e90:	cmp	w8, #0x2
   18e94:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18e98:	ldr	x8, [x19]
   18e9c:	mov	x0, x19
   18ea0:	ldr	x8, [x8, #56]
   18ea4:	blr	x8
   18ea8:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18eac:	ldr	x8, [x8]
   18eb0:	mov	w9, w0
   18eb4:	lsr	x9, x9, #3
   18eb8:	ldrh	w10, [x8, #1270]
   18ebc:	cmp	w9, w10
   18ec0:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18ec4:	ldr	x8, [x8, #1256]
   18ec8:	ldrb	w8, [x8, x9]
   18ecc:	and	w9, w0, #0x7
   18ed0:	lsr	w8, w8, w9
   18ed4:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18ed8:	ldr	w8, [x19, #80]
   18edc:	cmp	w8, #0x40
   18ee0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18ee4:	ldr	w9, [x19, #48]
   18ee8:	add	x8, x19, #0x48
   18eec:	cmp	w9, #0x3
   18ef0:	b.eq	1b3b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b20>  // b.none
   18ef4:	cmp	w9, #0xa
   18ef8:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   18efc:	add	x10, x8, #0x4
   18f00:	b	1b3b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b24>
   18f04:	ldr	w8, [x19, #48]
   18f08:	cmp	w8, #0x4
   18f0c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18f10:	ldr	w8, [x19, #76]
   18f14:	cmp	w8, #0x2
   18f18:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18f1c:	ldr	w8, [x19, #88]
   18f20:	cmp	w8, #0x1
   18f24:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18f28:	ldr	w8, [x19, #84]
   18f2c:	cmp	w8, #0x20
   18f30:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18f34:	ldr	w8, [x19, #80]
   18f38:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18f3c:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18f40:	ldr	w8, [x19, #48]
   18f44:	cmp	w8, #0x3
   18f48:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18f4c:	ldr	w8, [x19, #76]
   18f50:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18f54:	ldr	x8, [x19]
   18f58:	mov	x0, x19
   18f5c:	ldr	x8, [x8, #56]
   18f60:	blr	x8
   18f64:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18f68:	ldr	x8, [x8]
   18f6c:	mov	w9, w0
   18f70:	lsr	x9, x9, #3
   18f74:	ldrh	w10, [x8, #182]
   18f78:	cmp	w9, w10
   18f7c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   18f80:	ldr	x8, [x8, #168]
   18f84:	ldrb	w8, [x8, x9]
   18f88:	and	w9, w0, #0x7
   18f8c:	lsr	w8, w8, w9
   18f90:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   18f94:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   18f98:	ldr	w8, [x19, #48]
   18f9c:	cmp	w8, #0x5
   18fa0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18fa4:	ldr	w8, [x19, #72]
   18fa8:	mov	w9, #0x28                  	// #40
   18fac:	cmp	w8, #0x1
   18fb0:	mov	w8, #0x4                   	// #4
   18fb4:	csel	w21, w8, w9, eq  // eq = none
   18fb8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   18fbc:	ldr	w8, [x19, #48]
   18fc0:	cmp	w8, #0x3
   18fc4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18fc8:	ldr	w8, [x19, #76]
   18fcc:	cmp	w8, #0x2
   18fd0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   18fd4:	ldr	x8, [x19]
   18fd8:	mov	x0, x19
   18fdc:	ldr	x8, [x8, #56]
   18fe0:	blr	x8
   18fe4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   18fe8:	ldr	x8, [x8]
   18fec:	mov	w9, w0
   18ff0:	lsr	x9, x9, #3
   18ff4:	ldrh	w10, [x8, #1270]
   18ff8:	cmp	w9, w10
   18ffc:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   19000:	ldr	x8, [x8, #1256]
   19004:	ldrb	w8, [x8, x9]
   19008:	and	w9, w0, #0x7
   1900c:	lsr	w8, w8, w9
   19010:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19014:	ldr	w8, [x19, #80]
   19018:	cmp	w8, #0x40
   1901c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19020:	ldr	w9, [x19, #48]
   19024:	add	x8, x19, #0x48
   19028:	cmp	w9, #0x3
   1902c:	b.eq	1b3ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b58>  // b.none
   19030:	cmp	w9, #0xa
   19034:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   19038:	add	x10, x8, #0x4
   1903c:	b	1b3f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b5c>
   19040:	ldr	w8, [x19, #48]
   19044:	cmp	w8, #0x5
   19048:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1904c:	ldr	w8, [x19, #72]
   19050:	mov	w9, #0x24                  	// #36
   19054:	cmp	w8, #0x2
   19058:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   1905c:	ldr	x8, [x19]
   19060:	mov	x0, x19
   19064:	ldr	x8, [x8, #40]
   19068:	blr	x8
   1906c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19070:	ldr	w8, [x19, #48]
   19074:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19078:	ldr	x8, [x19, #72]
   1907c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19080:	ldr	w9, [x8]
   19084:	cmp	w9, #0x1
   19088:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1908c:	ldr	x8, [x8, #16]
   19090:	add	x8, x8, #0x100
   19094:	cmp	x8, #0x1ff
   19098:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   1909c:	ldr	x8, [x19]
   190a0:	mov	x0, x19
   190a4:	ldr	x8, [x8, #40]
   190a8:	blr	x8
   190ac:	tbz	w0, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   190b0:	ldr	w8, [x19, #48]
   190b4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   190b8:	ldr	x0, [x19, #72]
   190bc:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   190c0:	ldr	w8, [x0]
   190c4:	cmp	w8, #0x1
   190c8:	b.ne	1ae58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65c4>  // b.any
   190cc:	ldr	x8, [x0, #16]
   190d0:	mov	w21, #0x4                   	// #4
   190d4:	cmp	x8, #0x8, lsl #12
   190d8:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   190dc:	and	x8, x8, #0x8000000000000007
   190e0:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   190e4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   190e8:	ldr	w8, [x19, #48]
   190ec:	cmp	w8, #0x3
   190f0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   190f4:	ldr	w8, [x19, #76]
   190f8:	cmp	w8, #0x2
   190fc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19100:	ldr	x8, [x19]
   19104:	mov	x0, x19
   19108:	ldr	x8, [x8, #56]
   1910c:	blr	x8
   19110:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19114:	ldr	x8, [x8]
   19118:	mov	w9, w0
   1911c:	lsr	x9, x9, #3
   19120:	ldrh	w10, [x8, #1270]
   19124:	cmp	w9, w10
   19128:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   1912c:	ldr	x8, [x8, #1256]
   19130:	ldrb	w8, [x8, x9]
   19134:	and	w9, w0, #0x7
   19138:	lsr	w8, w8, w9
   1913c:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19140:	ldr	w8, [x19, #80]
   19144:	cmp	w8, #0x40
   19148:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1914c:	ldr	w9, [x19, #48]
   19150:	add	x8, x19, #0x48
   19154:	cmp	w9, #0x3
   19158:	b.eq	1b410 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b7c>  // b.none
   1915c:	cmp	w9, #0xa
   19160:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   19164:	add	x10, x8, #0x4
   19168:	b	1b414 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b80>
   1916c:	ldr	w8, [x19, #48]
   19170:	cmp	w8, #0x4
   19174:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19178:	ldr	w8, [x19, #76]
   1917c:	cmp	w8, #0x4
   19180:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19184:	ldr	w8, [x19, #88]
   19188:	cmp	w8, #0x1
   1918c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19190:	ldr	w8, [x19, #84]
   19194:	cmp	w8, #0x10
   19198:	b.eq	199b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5120>  // b.none
   1919c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   191a0:	ldr	w8, [x19, #48]
   191a4:	cmp	w8, #0x3
   191a8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   191ac:	ldr	w8, [x19, #76]
   191b0:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   191b4:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   191b8:	ldr	w8, [x19, #72]
   191bc:	ldr	x9, [x9]
   191c0:	lsr	x10, x8, #3
   191c4:	ldrh	w11, [x9, #406]
   191c8:	cmp	w10, w11
   191cc:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   191d0:	ldr	x9, [x9, #392]
   191d4:	and	w8, w8, #0x7
   191d8:	ldrb	w9, [x9, x10]
   191dc:	lsr	w8, w9, w8
   191e0:	tbnz	w8, #0, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   191e4:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   191e8:	ldr	w8, [x19, #48]
   191ec:	cmp	w8, #0x1
   191f0:	b.ne	1a378 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ae4>  // b.any
   191f4:	add	x0, sp, #0x10
   191f8:	mov	x1, x19
   191fc:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   19200:	ldrb	w8, [sp, #32]
   19204:	cbz	w8, 1922c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4998>
   19208:	ldr	x8, [sp, #16]
   1920c:	ldr	w9, [sp, #24]
   19210:	strb	wzr, [sp, #32]
   19214:	lsl	x8, x8, x9
   19218:	cmp	x8, #0x100
   1921c:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   19220:	and	x9, x8, #0xff00
   19224:	cmp	x9, x8
   19228:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   1922c:	mov	w21, #0x54                  	// #84
   19230:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19234:	ldr	w8, [x19, #48]
   19238:	cmp	w8, #0x3
   1923c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19240:	ldr	w8, [x19, #76]
   19244:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19248:	ldr	x8, [x19]
   1924c:	mov	x0, x19
   19250:	ldr	x8, [x8, #56]
   19254:	blr	x8
   19258:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1925c:	ldr	x8, [x8]
   19260:	mov	w9, w0
   19264:	lsr	x9, x9, #3
   19268:	ldrh	w10, [x8, #598]
   1926c:	cmp	w9, w10
   19270:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   19274:	ldr	x8, [x8, #584]
   19278:	ldrb	w8, [x8, x9]
   1927c:	and	w9, w0, #0x7
   19280:	lsr	w8, w8, w9
   19284:	tbnz	w8, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   19288:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1928c:	ldr	w8, [x19, #48]
   19290:	cmp	w8, #0x5
   19294:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19298:	ldr	w8, [x19, #72]
   1929c:	mov	w9, #0x27                  	// #39
   192a0:	cmp	w8, #0x8
   192a4:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   192a8:	ldr	w8, [x19, #48]
   192ac:	cmp	w8, #0x1
   192b0:	b.ne	1a3ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b18>  // b.any
   192b4:	add	x0, sp, #0x10
   192b8:	mov	x1, x19
   192bc:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   192c0:	ldrb	w8, [sp, #32]
   192c4:	cbz	w8, 192ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a58>
   192c8:	ldr	x8, [sp, #16]
   192cc:	ldr	w9, [sp, #24]
   192d0:	strb	wzr, [sp, #32]
   192d4:	lsl	x8, x8, x9
   192d8:	cmp	x8, #0x100
   192dc:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   192e0:	and	x9, x8, #0xff00
   192e4:	cmp	x9, x8
   192e8:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   192ec:	mov	w21, #0x53                  	// #83
   192f0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   192f4:	ldr	w8, [x19, #48]
   192f8:	cmp	w8, #0x4
   192fc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19300:	ldr	w8, [x19, #76]
   19304:	cmp	w8, #0x1
   19308:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1930c:	ldr	w8, [x19, #88]
   19310:	cmp	w8, #0x1
   19314:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19318:	ldr	w8, [x19, #84]
   1931c:	cmp	w8, #0x40
   19320:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19324:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   19328:	ldr	w8, [x19, #48]
   1932c:	cmp	w8, #0xa
   19330:	b.ne	1ac68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63d4>  // b.any
   19334:	ldr	w9, [x19, #72]
   19338:	sub	w8, w9, #0x5
   1933c:	cmp	w8, #0x8
   19340:	b.cs	1ac64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63d0>  // b.hs, b.nlast
   19344:	ldr	w9, [x19, #76]
   19348:	cmp	w9, #0x4
   1934c:	b.hi	1ac68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63d4>  // b.pmore
   19350:	cmp	w8, #0x7
   19354:	b.cs	1ac68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63d4>  // b.hs, b.nlast
   19358:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1935c:	add	x9, x9, #0x0
   19360:	ldr	w0, [x9, w8, sxtw #2]
   19364:	b	1bd90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74fc>
   19368:	ldr	w8, [x19, #48]
   1936c:	cmp	w8, #0x3
   19370:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19374:	ldr	w8, [x19, #76]
   19378:	cmp	w8, #0x2
   1937c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19380:	ldr	x8, [x19]
   19384:	mov	x0, x19
   19388:	ldr	x8, [x8, #56]
   1938c:	blr	x8
   19390:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19394:	ldr	x8, [x8]
   19398:	mov	w9, w0
   1939c:	lsr	x9, x9, #3
   193a0:	ldrh	w10, [x8, #1270]
   193a4:	cmp	w9, w10
   193a8:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   193ac:	ldr	x8, [x8, #1256]
   193b0:	ldrb	w8, [x8, x9]
   193b4:	and	w9, w0, #0x7
   193b8:	lsr	w8, w8, w9
   193bc:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   193c0:	ldr	w8, [x19, #80]
   193c4:	cmp	w8, #0x20
   193c8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   193cc:	ldr	w9, [x19, #48]
   193d0:	add	x8, x19, #0x48
   193d4:	cmp	w9, #0x3
   193d8:	b.eq	1b448 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6bb4>  // b.none
   193dc:	cmp	w9, #0xa
   193e0:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   193e4:	add	x10, x8, #0x4
   193e8:	b	1b44c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6bb8>
   193ec:	ldr	w8, [x19, #48]
   193f0:	cmp	w8, #0x3
   193f4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   193f8:	ldr	w8, [x19, #76]
   193fc:	cmp	w8, #0x2
   19400:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19404:	ldr	x8, [x19]
   19408:	mov	x0, x19
   1940c:	ldr	x8, [x8, #56]
   19410:	blr	x8
   19414:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19418:	ldr	x8, [x8]
   1941c:	mov	w9, w0
   19420:	lsr	x9, x9, #3
   19424:	ldrh	w10, [x8, #1270]
   19428:	cmp	w9, w10
   1942c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   19430:	ldr	x8, [x8, #1256]
   19434:	ldrb	w8, [x8, x9]
   19438:	and	w9, w0, #0x7
   1943c:	lsr	w8, w8, w9
   19440:	tbz	w8, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19444:	ldr	w8, [x19, #80]
   19448:	cmp	w8, #0x20
   1944c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19450:	ldr	w9, [x19, #48]
   19454:	add	x8, x19, #0x48
   19458:	cmp	w9, #0x3
   1945c:	b.eq	1b468 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6bd4>  // b.none
   19460:	cmp	w9, #0xa
   19464:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   19468:	add	x10, x8, #0x4
   1946c:	b	1b46c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6bd8>
   19470:	ldr	w8, [x19, #48]
   19474:	cmp	w8, #0x4
   19478:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1947c:	ldr	w8, [x19, #76]
   19480:	cmp	w8, #0x1
   19484:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19488:	ldr	w8, [x19, #88]
   1948c:	cmp	w8, #0x1
   19490:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19494:	ldr	w8, [x19, #84]
   19498:	cmp	w8, #0x20
   1949c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   194a0:	ldr	w8, [x19, #80]
   194a4:	cmp	w8, #0x2
   194a8:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   194ac:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   194b0:	ldr	x8, [x19]
   194b4:	mov	x0, x19
   194b8:	ldr	x8, [x8, #40]
   194bc:	blr	x8
   194c0:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   194c4:	ldr	w8, [x19, #48]
   194c8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   194cc:	ldr	x8, [x19, #72]
   194d0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   194d4:	ldr	w9, [x8]
   194d8:	cmp	w9, #0x1
   194dc:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   194e0:	ldr	x8, [x8, #16]
   194e4:	mov	w9, #0x62                  	// #98
   194e8:	cmp	x8, #0x20
   194ec:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   194f0:	ldr	w8, [x19, #48]
   194f4:	cmp	w8, #0x1
   194f8:	b.ne	1a3e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b4c>  // b.any
   194fc:	add	x0, sp, #0x10
   19500:	mov	x1, x19
   19504:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   19508:	ldrb	w8, [sp, #32]
   1950c:	cbz	w8, 19534 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4ca0>
   19510:	ldr	w8, [sp, #24]
   19514:	cbnz	w8, 19530 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c9c>
   19518:	ldr	x8, [sp, #16]
   1951c:	cmp	x8, #0x100
   19520:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   19524:	add	x8, x8, #0x80
   19528:	cmp	x8, #0x100
   1952c:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   19530:	strb	wzr, [sp, #32]
   19534:	mov	w21, #0x59                  	// #89
   19538:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1953c:	ldr	w8, [x19, #48]
   19540:	cmp	w8, #0x4
   19544:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19548:	ldr	w8, [x19, #76]
   1954c:	cmp	w8, #0x4
   19550:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19554:	ldr	w8, [x19, #88]
   19558:	cmp	w8, #0x1
   1955c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19560:	ldr	w8, [x19, #84]
   19564:	cmp	w8, #0x20
   19568:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1956c:	b	196b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4e20>
   19570:	ldr	w8, [x19, #48]
   19574:	cmp	w8, #0x3
   19578:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1957c:	ldr	w8, [x19, #76]
   19580:	cmp	w8, #0x1
   19584:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19588:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1958c:	mov	x0, x19
   19590:	bl	1e5c0 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>
   19594:	cbz	w0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   19598:	cmp	w0, #0x1
   1959c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   195a0:	mov	w21, #0x56                  	// #86
   195a4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   195a8:	ldr	x8, [x19]
   195ac:	mov	x0, x19
   195b0:	ldr	x8, [x8, #40]
   195b4:	blr	x8
   195b8:	tbz	w0, #0, 195e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d50>
   195bc:	ldr	w8, [x19, #48]
   195c0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   195c4:	ldr	x0, [x19, #72]
   195c8:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   195cc:	ldr	w8, [x0]
   195d0:	cmp	w8, #0x1
   195d4:	b.ne	1a694 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e00>  // b.any
   195d8:	ldr	x8, [x0, #16]
   195dc:	cmp	x8, #0x1, lsl #12
   195e0:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   195e4:	mov	w21, #0x2a                  	// #42
   195e8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   195ec:	ldr	x8, [x19]
   195f0:	mov	x0, x19
   195f4:	ldr	x8, [x8, #40]
   195f8:	blr	x8
   195fc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19600:	ldr	w8, [x19, #48]
   19604:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19608:	ldr	x8, [x19, #72]
   1960c:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19610:	ldr	w9, [x8]
   19614:	cmp	w9, #0x1
   19618:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1961c:	ldr	x8, [x8, #16]
   19620:	mov	w9, #0x4                   	// #4
   19624:	cmp	x8, #0x7e
   19628:	and	x8, x8, #0x1
   1962c:	cset	w10, hi  // hi = pmore
   19630:	orr	x8, x8, x10
   19634:	cmp	x8, #0x1
   19638:	mov	w8, #0x36                  	// #54
   1963c:	csel	w21, w8, w9, eq  // eq = none
   19640:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19644:	ldr	w8, [x19, #48]
   19648:	cmp	w8, #0x1
   1964c:	b.ne	1a414 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5b80>  // b.any
   19650:	add	x0, sp, #0x10
   19654:	mov	x1, x19
   19658:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1965c:	ldrb	w8, [sp, #32]
   19660:	cbz	w8, 1967c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4de8>
   19664:	ldr	w8, [sp, #24]
   19668:	cbnz	w8, 19678 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4de4>
   1966c:	ldr	x8, [sp, #16]
   19670:	cmp	x8, #0x100
   19674:	b.cc	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.lo, b.ul, b.last
   19678:	strb	wzr, [sp, #32]
   1967c:	mov	w21, #0x55                  	// #85
   19680:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19684:	ldr	w8, [x19, #48]
   19688:	cmp	w8, #0x4
   1968c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19690:	ldr	w8, [x19, #76]
   19694:	cmp	w8, #0x1
   19698:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1969c:	ldr	w8, [x19, #88]
   196a0:	cmp	w8, #0x1
   196a4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   196a8:	ldr	w8, [x19, #84]
   196ac:	cmp	w8, #0x10
   196b0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   196b4:	ldr	w8, [x19, #80]
   196b8:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   196bc:	b	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   196c0:	ldr	w8, [x19, #48]
   196c4:	cmp	w8, #0x5
   196c8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   196cc:	ldr	w8, [x19, #72]
   196d0:	mov	w9, #0x26                  	// #38
   196d4:	cmp	w8, #0x4
   196d8:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   196dc:	ldr	w8, [x19, #48]
   196e0:	cmp	w8, #0x5
   196e4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   196e8:	ldr	w8, [x19, #72]
   196ec:	mov	w9, #0x61                  	// #97
   196f0:	cmp	w8, #0x8
   196f4:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   196f8:	ldr	x8, [x19]
   196fc:	mov	x0, x19
   19700:	ldr	x8, [x8, #40]
   19704:	blr	x8
   19708:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1970c:	ldr	w8, [x19, #48]
   19710:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19714:	ldr	x0, [x19, #72]
   19718:	cbz	x0, 1be20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x758c>
   1971c:	ldr	w8, [x0]
   19720:	cmp	w8, #0x4
   19724:	b.ne	1a6b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e20>  // b.any
   19728:	ldr	x9, [x0, #16]
   1972c:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   19730:	ldr	w22, [x0, #24]
   19734:	ldr	w8, [x9]
   19738:	mov	x0, x9
   1973c:	b	1a6b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e24>
   19740:	ldr	w8, [x19, #48]
   19744:	cmp	w8, #0xa
   19748:	b.ne	1a448 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bb4>  // b.any
   1974c:	ldr	w9, [x19, #72]
   19750:	mov	w8, #0x50                  	// #80
   19754:	mov	w21, #0x50                  	// #80
   19758:	cbnz	w9, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1975c:	ldr	w9, [x19, #76]
   19760:	tst	w9, #0xffffffef
   19764:	mov	w9, #0x4                   	// #4
   19768:	csel	w21, w9, w8, eq  // eq = none
   1976c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19770:	ldr	w8, [x19, #48]
   19774:	cmp	w8, #0x8
   19778:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1977c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19780:	ldr	w8, [x19, #48]
   19784:	cmp	w8, #0xa
   19788:	b.ne	1ac74 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63e0>  // b.any
   1978c:	ldr	w8, [x19, #72]
   19790:	sub	w9, w8, #0x5
   19794:	cmp	w9, #0x8
   19798:	b.cs	1ac70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63dc>  // b.hs, b.nlast
   1979c:	ldr	w9, [x19, #76]
   197a0:	cmp	w9, #0x4
   197a4:	b.hi	1ac74 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63e0>  // b.pmore
   197a8:	cmp	w8, #0xc
   197ac:	mov	w10, #0x4e                  	// #78
   197b0:	b.eq	19800 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f6c>  // b.none
   197b4:	mov	w21, #0x4e                  	// #78
   197b8:	cbz	w8, 19800 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f6c>
   197bc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   197c0:	ldr	w8, [x19, #48]
   197c4:	cmp	w8, #0xa
   197c8:	b.ne	1ac80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63ec>  // b.any
   197cc:	ldr	w8, [x19, #72]
   197d0:	sub	w9, w8, #0x5
   197d4:	cmp	w9, #0x8
   197d8:	b.cs	1ac7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63e8>  // b.hs, b.nlast
   197dc:	ldr	w9, [x19, #76]
   197e0:	cmp	w9, #0x4
   197e4:	b.hi	1ac80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63ec>  // b.pmore
   197e8:	cmp	w8, #0xb
   197ec:	mov	w10, #0x49                  	// #73
   197f0:	b.eq	19800 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f6c>  // b.none
   197f4:	cmp	w8, #0x7
   197f8:	mov	w21, #0x49                  	// #73
   197fc:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   19800:	cmp	w9, #0x0
   19804:	ccmp	w9, #0x3, #0x4, ne  // ne = any
   19808:	b	19fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5720>
   1980c:	ldr	w8, [x19, #48]
   19810:	cmp	w8, #0xa
   19814:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19818:	ldr	w8, [x19, #72]
   1981c:	cmp	w8, #0x4
   19820:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   19824:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19828:	ldr	w8, [x19, #76]
   1982c:	tst	w8, #0xfffffff7
   19830:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19834:	ror	w8, w8, #3
   19838:	cmp	w8, #0x4
   1983c:	b.cc	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.lo, b.ul, b.last
   19840:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19844:	ldr	w8, [x19, #48]
   19848:	cmp	w8, #0x5
   1984c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19850:	ldr	w8, [x19, #72]
   19854:	mov	w9, #0x60                  	// #96
   19858:	cmp	w8, #0x40
   1985c:	b	19c54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53c0>
   19860:	ldr	w8, [x19, #48]
   19864:	cmp	w8, #0xa
   19868:	b.ne	1acd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x643c>  // b.any
   1986c:	ldr	w8, [x19, #72]
   19870:	mov	w21, #0x7                   	// #7
   19874:	sub	w9, w8, #0x5
   19878:	cmp	w9, #0x8
   1987c:	b.cs	1ac88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63f4>  // b.hs, b.nlast
   19880:	ldr	w8, [x19, #76]
   19884:	cmp	w8, #0x4
   19888:	mov	w8, #0x4                   	// #4
   1988c:	csel	w21, w21, w8, hi  // hi = pmore
   19890:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19894:	ldr	w8, [x19, #48]
   19898:	cmp	w8, #0x3
   1989c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   198a0:	ldr	w8, [x19, #76]
   198a4:	cmp	w8, #0x3
   198a8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   198ac:	ldr	x8, [x19]
   198b0:	mov	x0, x19
   198b4:	ldr	x8, [x8, #56]
   198b8:	blr	x8
   198bc:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   198c0:	ldr	x8, [x8]
   198c4:	mov	w9, w0
   198c8:	lsr	x9, x9, #3
   198cc:	ldrh	w10, [x8, #86]
   198d0:	cmp	w9, w10
   198d4:	b.cs	198f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5064>  // b.hs, b.nlast
   198d8:	ldr	x8, [x8, #72]
   198dc:	ldrb	w8, [x8, x9]
   198e0:	and	w9, w0, #0x7
   198e4:	lsr	w8, w8, w9
   198e8:	tbz	w8, #0, 198f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5064>
   198ec:	ldr	w8, [x19, #80]
   198f0:	cmp	w8, #0x20
   198f4:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   198f8:	mov	w21, #0x6c                  	// #108
   198fc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19900:	ldr	x8, [x19]
   19904:	mov	x0, x19
   19908:	ldr	x8, [x8, #40]
   1990c:	blr	x8
   19910:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19914:	ldr	w8, [x19, #48]
   19918:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1991c:	ldr	x8, [x19, #72]
   19920:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19924:	ldr	w9, [x8]
   19928:	cmp	w9, #0x1
   1992c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19930:	ldr	x8, [x8, #16]
   19934:	mov	w9, #0x7f1                 	// #2033
   19938:	mov	w10, #0x2d                  	// #45
   1993c:	add	x11, x8, #0x400
   19940:	tst	x8, #0xf
   19944:	b	19e38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a4>
   19948:	ldr	w8, [x19, #48]
   1994c:	cmp	w8, #0xa
   19950:	b.ne	1997c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x50e8>  // b.any
   19954:	ldr	w9, [x19, #72]
   19958:	mov	w8, #0x9                   	// #9
   1995c:	mov	w21, #0x9                   	// #9
   19960:	cmp	w9, #0x2
   19964:	b.hi	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.pmore
   19968:	ldr	w9, [x19, #76]
   1996c:	cmp	w9, #0x20
   19970:	mov	w9, #0x4                   	// #4
   19974:	csel	w21, w9, w8, cc  // cc = lo, ul, last
   19978:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1997c:	mov	w21, #0x9                   	// #9
   19980:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19984:	ldr	w8, [x19, #48]
   19988:	cmp	w8, #0x4
   1998c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19990:	ldr	w8, [x19, #76]
   19994:	cmp	w8, #0x1
   19998:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1999c:	ldr	w8, [x19, #88]
   199a0:	cmp	w8, #0x1
   199a4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   199a8:	ldr	w8, [x19, #84]
   199ac:	cmp	w8, #0x10
   199b0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   199b4:	ldr	w8, [x19, #80]
   199b8:	cmp	w8, #0x4
   199bc:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   199c0:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   199c4:	ldr	x8, [x19]
   199c8:	mov	x0, x19
   199cc:	ldr	x8, [x8, #40]
   199d0:	blr	x8
   199d4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   199d8:	ldr	w8, [x19, #48]
   199dc:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   199e0:	ldr	x8, [x19, #72]
   199e4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   199e8:	ldr	w9, [x8]
   199ec:	cmp	w9, #0x1
   199f0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   199f4:	ldr	x8, [x8, #16]
   199f8:	mov	w9, #0x4                   	// #4
   199fc:	add	x10, x8, #0x10
   19a00:	cmp	x10, #0x1e
   19a04:	and	x8, x8, #0x1
   19a08:	cset	w10, hi  // hi = pmore
   19a0c:	orr	x8, x8, x10
   19a10:	cmp	x8, #0x1
   19a14:	mov	w8, #0x34                  	// #52
   19a18:	csel	w0, w8, w9, eq  // eq = none
   19a1c:	b	1bd90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74fc>
   19a20:	ldr	x8, [x19]
   19a24:	mov	x0, x19
   19a28:	ldr	x8, [x8, #40]
   19a2c:	blr	x8
   19a30:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19a34:	ldr	w8, [x19, #48]
   19a38:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19a3c:	ldr	x8, [x19, #72]
   19a40:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19a44:	ldr	w9, [x8]
   19a48:	cmp	w9, #0x1
   19a4c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19a50:	ldr	x8, [x8, #16]
   19a54:	mov	w9, #0x3f1                 	// #1009
   19a58:	mov	w10, #0x2f                  	// #47
   19a5c:	tst	x8, #0xf
   19a60:	ccmp	x8, x9, #0x2, eq  // eq = none
   19a64:	b	19e3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55a8>
   19a68:	ldr	w8, [x19, #48]
   19a6c:	cmp	w8, #0x4
   19a70:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19a74:	ldr	w8, [x19, #76]
   19a78:	cmp	w8, #0x4
   19a7c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19a80:	ldr	w8, [x19, #88]
   19a84:	cmp	w8, #0x1
   19a88:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19a8c:	ldr	w8, [x19, #84]
   19a90:	cmp	w8, #0x8
   19a94:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19a98:	ldr	w8, [x19, #80]
   19a9c:	cmp	w8, #0x10
   19aa0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19aa4:	mov	w21, #0x4                   	// #4
   19aa8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19aac:	ldr	w8, [x19, #48]
   19ab0:	cmp	w8, #0xe
   19ab4:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   19ab8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19abc:	ldr	x8, [x19]
   19ac0:	mov	x0, x19
   19ac4:	ldr	x8, [x8, #40]
   19ac8:	blr	x8
   19acc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19ad0:	ldr	w8, [x19, #48]
   19ad4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19ad8:	ldr	x8, [x19, #72]
   19adc:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19ae0:	ldr	w9, [x8]
   19ae4:	cmp	w9, #0x1
   19ae8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19aec:	ldr	x8, [x8, #16]
   19af0:	add	x8, x8, #0x100
   19af4:	cmp	x8, #0x1ff
   19af8:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   19afc:	ldr	x8, [x19]
   19b00:	mov	x0, x19
   19b04:	ldr	x8, [x8, #40]
   19b08:	blr	x8
   19b0c:	tbz	w0, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   19b10:	ldr	w8, [x19, #48]
   19b14:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19b18:	ldr	x0, [x19, #72]
   19b1c:	cbz	x0, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19b20:	ldr	w8, [x0]
   19b24:	cmp	w8, #0x1
   19b28:	b.ne	1ae78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x65e4>  // b.any
   19b2c:	ldr	x8, [x0, #16]
   19b30:	mov	w21, #0x4                   	// #4
   19b34:	cmp	x8, #0x2, lsl #12
   19b38:	b.ge	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.tcont
   19b3c:	and	x8, x8, #0x8000000000000001
   19b40:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19b44:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19b48:	ldr	w8, [x19, #48]
   19b4c:	cmp	w8, #0xa
   19b50:	b.ne	1ac94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6400>  // b.any
   19b54:	ldr	w8, [x19, #72]
   19b58:	sub	w9, w8, #0x5
   19b5c:	cmp	w9, #0x8
   19b60:	b.cs	1ac90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x63fc>  // b.hs, b.nlast
   19b64:	ldr	w9, [x19, #76]
   19b68:	cmp	w9, #0x4
   19b6c:	b.hi	1ac94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6400>  // b.pmore
   19b70:	cmp	w8, #0xc
   19b74:	mov	w10, #0x4b                  	// #75
   19b78:	b.eq	19b84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52f0>  // b.none
   19b7c:	mov	w21, #0x4b                  	// #75
   19b80:	cbnz	w8, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19b84:	tst	w9, #0xfffffffb
   19b88:	b	19fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5720>
   19b8c:	ldr	x8, [x19]
   19b90:	mov	x0, x19
   19b94:	ldr	x8, [x8, #40]
   19b98:	blr	x8
   19b9c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19ba0:	ldr	w8, [x19, #48]
   19ba4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19ba8:	ldr	x8, [x19, #72]
   19bac:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19bb0:	ldr	w9, [x8]
   19bb4:	cmp	w9, #0x1
   19bb8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19bbc:	ldr	x8, [x8, #16]
   19bc0:	mov	w9, #0x32                  	// #50
   19bc4:	b	19c50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53bc>
   19bc8:	ldr	w8, [x19, #48]
   19bcc:	cmp	w8, #0xa
   19bd0:	b.ne	1aca0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x640c>  // b.any
   19bd4:	ldr	w8, [x19, #72]
   19bd8:	sub	w9, w8, #0x5
   19bdc:	cmp	w9, #0x8
   19be0:	b.cs	1ac9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6408>  // b.hs, b.nlast
   19be4:	ldr	w9, [x19, #76]
   19be8:	cmp	w9, #0x4
   19bec:	b.hi	1aca0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x640c>  // b.pmore
   19bf0:	cmp	w8, #0xb
   19bf4:	mov	w21, #0x48                  	// #72
   19bf8:	b.eq	19c04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5370>  // b.none
   19bfc:	cmp	w8, #0x7
   19c00:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   19c04:	tst	w9, #0xfffffffd
   19c08:	mov	w8, #0x4                   	// #4
   19c0c:	csel	w21, w8, w21, eq  // eq = none
   19c10:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19c14:	ldr	x8, [x19]
   19c18:	mov	x0, x19
   19c1c:	ldr	x8, [x8, #40]
   19c20:	blr	x8
   19c24:	tbz	w0, #0, 19c60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x53cc>
   19c28:	ldr	w8, [x19, #48]
   19c2c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19c30:	ldr	x8, [x19, #72]
   19c34:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19c38:	ldr	w10, [x8]
   19c3c:	mov	w9, #0x1d                  	// #29
   19c40:	mov	w21, #0x1d                  	// #29
   19c44:	cmp	w10, #0x1
   19c48:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   19c4c:	ldr	x8, [x8, #16]
   19c50:	cmp	x8, #0x40
   19c54:	mov	w8, #0x4                   	// #4
   19c58:	csel	w21, w8, w9, cc  // cc = lo, ul, last
   19c5c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19c60:	mov	w21, #0x1d                  	// #29
   19c64:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19c68:	ldr	w8, [x19, #48]
   19c6c:	cmp	w8, #0x3
   19c70:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19c74:	ldr	w8, [x19, #76]
   19c78:	cmp	w8, #0x3
   19c7c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19c80:	ldr	x8, [x19]
   19c84:	mov	x0, x19
   19c88:	ldr	x8, [x8, #56]
   19c8c:	blr	x8
   19c90:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19c94:	ldr	x8, [x8]
   19c98:	mov	w9, w0
   19c9c:	lsr	x9, x9, #3
   19ca0:	ldrh	w10, [x8, #86]
   19ca4:	cmp	w9, w10
   19ca8:	b.cs	19cc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5434>  // b.hs, b.nlast
   19cac:	ldr	x8, [x8, #72]
   19cb0:	ldrb	w8, [x8, x9]
   19cb4:	and	w9, w0, #0x7
   19cb8:	lsr	w8, w8, w9
   19cbc:	tbz	w8, #0, 19cc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5434>
   19cc0:	ldr	w8, [x19, #80]
   19cc4:	cbz	w8, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   19cc8:	mov	w21, #0x68                  	// #104
   19ccc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19cd0:	ldr	w8, [x19, #48]
   19cd4:	cmp	w8, #0x3
   19cd8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19cdc:	ldr	w8, [x19, #76]
   19ce0:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19ce4:	ldr	x8, [x19]
   19ce8:	mov	x0, x19
   19cec:	ldr	x8, [x8, #56]
   19cf0:	blr	x8
   19cf4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19cf8:	ldr	x8, [x8]
   19cfc:	mov	w9, w0
   19d00:	lsr	x9, x9, #3
   19d04:	ldrh	w10, [x8, #630]
   19d08:	cmp	w9, w10
   19d0c:	b.cs	1b8b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7024>  // b.hs, b.nlast
   19d10:	ldr	x8, [x8, #616]
   19d14:	ldrb	w8, [x8, x9]
   19d18:	and	w9, w0, #0x7
   19d1c:	lsr	w8, w8, w9
   19d20:	tbz	w8, #0, 1b8b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7024>
   19d24:	ldr	w9, [x19, #48]
   19d28:	add	x8, x19, #0x48
   19d2c:	cmp	w9, #0x3
   19d30:	b.eq	1af4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66b8>  // b.none
   19d34:	cmp	w9, #0xa
   19d38:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   19d3c:	mov	x10, x8
   19d40:	b	1af50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66bc>
   19d44:	ldr	w8, [x19, #48]
   19d48:	cmp	w8, #0xa
   19d4c:	b.ne	1acac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6418>  // b.any
   19d50:	ldr	w8, [x19, #72]
   19d54:	sub	w9, w8, #0x5
   19d58:	cmp	w9, #0x8
   19d5c:	b.cs	1aca8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6414>  // b.hs, b.nlast
   19d60:	ldr	w9, [x19, #76]
   19d64:	cmp	w9, #0x4
   19d68:	b.hi	1acac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6418>  // b.pmore
   19d6c:	cmp	w8, #0xc
   19d70:	mov	w10, #0x4f                  	// #79
   19d74:	b.eq	19d80 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54ec>  // b.none
   19d78:	mov	w21, #0x4f                  	// #79
   19d7c:	cbnz	w8, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19d80:	cmp	w9, #0x0
   19d84:	b	19fb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5720>
   19d88:	ldr	x8, [x19]
   19d8c:	mov	x0, x19
   19d90:	ldr	x8, [x8, #40]
   19d94:	blr	x8
   19d98:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19d9c:	ldr	w8, [x19, #48]
   19da0:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19da4:	ldr	x8, [x19, #72]
   19da8:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19dac:	ldr	w9, [x8]
   19db0:	cmp	w9, #0x1
   19db4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19db8:	ldr	x8, [x8, #16]
   19dbc:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   19dc0:	mov	x10, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   19dc4:	movk	x9, #0xaaab
   19dc8:	movk	x10, #0x2aaa, lsl #48
   19dcc:	mov	x11, #0x5555555555555555    	// #6148914691236517205
   19dd0:	add	x14, x8, #0x18
   19dd4:	madd	x8, x8, x9, x10
   19dd8:	mov	w12, #0x2e                  	// #46
   19ddc:	cmp	x8, x11
   19de0:	mov	w13, #0x37                  	// #55
   19de4:	ccmp	x14, x12, #0x2, cc  // cc = lo, ul, last
   19de8:	mov	w8, #0x4                   	// #4
   19dec:	csel	w21, w8, w13, cc  // cc = lo, ul, last
   19df0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19df4:	ldr	x8, [x19]
   19df8:	mov	x0, x19
   19dfc:	ldr	x8, [x8, #40]
   19e00:	blr	x8
   19e04:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   19e08:	ldr	w8, [x19, #48]
   19e0c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19e10:	ldr	x8, [x19, #72]
   19e14:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19e18:	ldr	w9, [x8]
   19e1c:	cmp	w9, #0x1
   19e20:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19e24:	ldr	x8, [x8, #16]
   19e28:	mov	w9, #0x3d                  	// #61
   19e2c:	mov	w10, #0x39                  	// #57
   19e30:	add	x11, x8, #0x20
   19e34:	tst	x8, #0x3
   19e38:	ccmp	x11, x9, #0x2, eq  // eq = none
   19e3c:	mov	w8, #0x4                   	// #4
   19e40:	csel	w21, w8, w10, cc  // cc = lo, ul, last
   19e44:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19e48:	ldr	w8, [x19, #48]
   19e4c:	cmp	w8, #0xa
   19e50:	b.ne	1acb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6424>  // b.any
   19e54:	ldr	w8, [x19, #72]
   19e58:	sub	w9, w8, #0x5
   19e5c:	cmp	w9, #0x8
   19e60:	b.cs	1acb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6420>  // b.hs, b.nlast
   19e64:	ldr	w9, [x19, #76]
   19e68:	cmp	w9, #0x4
   19e6c:	b.hi	1acb8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6424>  // b.pmore
   19e70:	cmp	w8, #0xc
   19e74:	mov	w10, #0x4c                  	// #76
   19e78:	b.eq	19e84 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55f0>  // b.none
   19e7c:	mov	w21, #0x4c                  	// #76
   19e80:	cbnz	w8, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19e84:	cmp	w9, #0x2
   19e88:	mov	w8, #0x4                   	// #4
   19e8c:	csel	w21, w8, w10, cc  // cc = lo, ul, last
   19e90:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19e94:	ldr	w8, [x19, #48]
   19e98:	mov	w9, #0xe                   	// #14
   19e9c:	cmp	w8, #0x2
   19ea0:	mov	w8, #0x4                   	// #4
   19ea4:	csel	w21, w8, w9, eq  // eq = none
   19ea8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19eac:	ldr	w8, [x19, #48]
   19eb0:	cmp	w8, #0x3
   19eb4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19eb8:	ldr	w8, [x19, #76]
   19ebc:	cmp	w8, #0x3
   19ec0:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   19ec4:	ldr	x8, [x19]
   19ec8:	mov	x0, x19
   19ecc:	ldr	x8, [x8, #56]
   19ed0:	blr	x8
   19ed4:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   19ed8:	ldr	x8, [x8]
   19edc:	mov	w9, w0
   19ee0:	lsr	x9, x9, #3
   19ee4:	ldrh	w10, [x8, #118]
   19ee8:	cmp	w9, w10
   19eec:	b.cs	19f0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5678>  // b.hs, b.nlast
   19ef0:	ldr	x8, [x8, #104]
   19ef4:	ldrb	w8, [x8, x9]
   19ef8:	and	w9, w0, #0x7
   19efc:	lsr	w8, w8, w9
   19f00:	tbz	w8, #0, 19f0c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5678>
   19f04:	ldr	w8, [x19, #80]
   19f08:	cbz	w8, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   19f0c:	mov	w21, #0x63                  	// #99
   19f10:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19f14:	ldr	x8, [x19]
   19f18:	mov	x0, x19
   19f1c:	ldr	x8, [x8, #40]
   19f20:	blr	x8
   19f24:	tbz	w0, #0, 1a018 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5784>
   19f28:	ldr	w8, [x19, #48]
   19f2c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19f30:	ldr	x9, [x19, #72]
   19f34:	cbz	x9, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19f38:	ldr	w10, [x9]
   19f3c:	mov	w8, #0x4                   	// #4
   19f40:	mov	w21, #0x4                   	// #4
   19f44:	cmp	w10, #0x1
   19f48:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   19f4c:	ldr	x9, [x9, #16]
   19f50:	mov	w10, #0xfffd                	// #65533
   19f54:	movk	w10, #0x1f, lsl #16
   19f58:	and	x11, x9, #0x3
   19f5c:	add	x9, x9, #0x100, lsl #12
   19f60:	cmp	x9, x10
   19f64:	ccmp	x11, #0x0, #0x0, cc  // cc = lo, ul, last
   19f68:	mov	w9, #0x29                  	// #41
   19f6c:	csel	w21, w8, w9, eq  // eq = none
   19f70:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19f74:	ldr	w8, [x19, #48]
   19f78:	cmp	w8, #0xa
   19f7c:	b.ne	1acc4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6430>  // b.any
   19f80:	ldr	w8, [x19, #72]
   19f84:	sub	w9, w8, #0x5
   19f88:	cmp	w9, #0x8
   19f8c:	b.cs	1acc0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x642c>  // b.hs, b.nlast
   19f90:	ldr	w9, [x19, #76]
   19f94:	cmp	w9, #0x4
   19f98:	b.hi	1acc4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6430>  // b.pmore
   19f9c:	cmp	w8, #0xc
   19fa0:	mov	w10, #0x4d                  	// #77
   19fa4:	b.eq	19fb0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x571c>  // b.none
   19fa8:	mov	w21, #0x4d                  	// #77
   19fac:	cbnz	w8, 1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19fb0:	tst	w9, #0xfffffffd
   19fb4:	mov	w8, #0x4                   	// #4
   19fb8:	csel	w21, w8, w10, eq  // eq = none
   19fbc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   19fc0:	ldr	x8, [x19]
   19fc4:	mov	x0, x19
   19fc8:	ldr	x8, [x8, #40]
   19fcc:	blr	x8
   19fd0:	tbz	w0, #0, 1a018 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5784>
   19fd4:	ldr	w8, [x19, #48]
   19fd8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   19fdc:	ldr	x8, [x19, #72]
   19fe0:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   19fe4:	ldr	w9, [x8]
   19fe8:	mov	w21, #0x4                   	// #4
   19fec:	cmp	w9, #0x1
   19ff0:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   19ff4:	ldr	x8, [x8, #16]
   19ff8:	mov	w9, #0xfffd                	// #65533
   19ffc:	and	x10, x8, #0x3
   1a000:	add	x8, x8, #0x8, lsl #12
   1a004:	cmp	x8, x9
   1a008:	ccmp	x10, #0x0, #0x0, cc  // cc = lo, ul, last
   1a00c:	mov	w8, #0x29                  	// #41
   1a010:	csel	w21, w21, w8, eq  // eq = none
   1a014:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a018:	mov	w21, #0x29                  	// #41
   1a01c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a020:	ldr	w8, [x19, #48]
   1a024:	cmp	w8, #0x3
   1a028:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1a02c:	ldr	w8, [x19, #76]
   1a030:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a034:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1a038:	ldr	w8, [x19, #72]
   1a03c:	ldr	x9, [x9]
   1a040:	lsr	x10, x8, #3
   1a044:	ldrh	w11, [x9, #214]
   1a048:	cmp	w10, w11
   1a04c:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   1a050:	ldr	x9, [x9, #200]
   1a054:	and	w8, w8, #0x7
   1a058:	ldrb	w9, [x9, x10]
   1a05c:	lsr	w8, w9, w8
   1a060:	tbnz	w8, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   1a064:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a068:	ldr	x8, [x19]
   1a06c:	mov	x0, x19
   1a070:	ldr	x8, [x8, #40]
   1a074:	blr	x8
   1a078:	tbz	w0, #0, 1a450 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bbc>
   1a07c:	ldr	w8, [x19, #48]
   1a080:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a084:	ldr	x8, [x19, #72]
   1a088:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a08c:	ldr	w9, [x8]
   1a090:	mov	w21, #0x20                  	// #32
   1a094:	cmp	w9, #0x1
   1a098:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1a09c:	ldr	x8, [x8, #16]
   1a0a0:	sub	x8, x8, #0x1
   1a0a4:	cmp	x8, #0x10
   1a0a8:	b	1a220 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x598c>
   1a0ac:	ldr	w8, [x19, #48]
   1a0b0:	cmp	w8, #0xa
   1a0b4:	b.ne	1acd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x643c>  // b.any
   1a0b8:	ldr	w8, [x19, #72]
   1a0bc:	sub	w9, w8, #0x5
   1a0c0:	cmp	w9, #0x8
   1a0c4:	b.cs	1accc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6438>  // b.hs, b.nlast
   1a0c8:	ldr	w9, [x19, #76]
   1a0cc:	cmp	w9, #0x4
   1a0d0:	b.hi	1acd0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x643c>  // b.pmore
   1a0d4:	cmp	w8, #0xc
   1a0d8:	mov	w21, #0x7                   	// #7
   1a0dc:	b.hi	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.pmore
   1a0e0:	mov	w9, #0x1                   	// #1
   1a0e4:	lsl	w8, w9, w8
   1a0e8:	mov	w9, #0x1101                	// #4353
   1a0ec:	tst	w8, w9
   1a0f0:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1a0f4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a0f8:	ldr	w8, [x19, #48]
   1a0fc:	cmp	w8, #0x3
   1a100:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1a104:	ldr	w8, [x19, #76]
   1a108:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a10c:	ldr	x8, [x19]
   1a110:	mov	x0, x19
   1a114:	ldr	x8, [x8, #56]
   1a118:	blr	x8
   1a11c:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1a120:	ldr	x8, [x8]
   1a124:	mov	w9, w0
   1a128:	lsr	x9, x9, #3
   1a12c:	ldrh	w10, [x8, #566]
   1a130:	cmp	w9, w10
   1a134:	b.cs	1b8d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x703c>  // b.hs, b.nlast
   1a138:	ldr	x8, [x8, #552]
   1a13c:	ldrb	w8, [x8, x9]
   1a140:	and	w9, w0, #0x7
   1a144:	lsr	w8, w8, w9
   1a148:	tbz	w8, #0, 1b8d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x703c>
   1a14c:	ldr	w9, [x19, #48]
   1a150:	add	x8, x19, #0x48
   1a154:	cmp	w9, #0x3
   1a158:	b.eq	1af70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66dc>  // b.none
   1a15c:	cmp	w9, #0xa
   1a160:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   1a164:	mov	x10, x8
   1a168:	b	1af74 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x66e0>
   1a16c:	ldr	w8, [x19, #48]
   1a170:	cmp	w8, #0x3
   1a174:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1a178:	ldr	w8, [x19, #76]
   1a17c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a180:	ldr	x8, [x19]
   1a184:	mov	x0, x19
   1a188:	ldr	x8, [x8, #56]
   1a18c:	blr	x8
   1a190:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1a194:	ldr	x8, [x8]
   1a198:	mov	w9, w0
   1a19c:	lsr	x9, x9, #3
   1a1a0:	ldrh	w10, [x8, #566]
   1a1a4:	cmp	w9, w10
   1a1a8:	b.cs	1b8f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x705c>  // b.hs, b.nlast
   1a1ac:	ldr	x8, [x8, #552]
   1a1b0:	ldrb	w8, [x8, x9]
   1a1b4:	and	w9, w0, #0x7
   1a1b8:	lsr	w8, w8, w9
   1a1bc:	tbz	w8, #0, 1b8f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x705c>
   1a1c0:	ldr	w9, [x19, #48]
   1a1c4:	add	x8, x19, #0x48
   1a1c8:	cmp	w9, #0x3
   1a1cc:	b.eq	1af94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6700>  // b.none
   1a1d0:	cmp	w9, #0xa
   1a1d4:	b.ne	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>  // b.any
   1a1d8:	mov	x10, x8
   1a1dc:	b	1af98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6704>
   1a1e0:	ldr	x8, [x19]
   1a1e4:	mov	x0, x19
   1a1e8:	ldr	x8, [x8, #40]
   1a1ec:	blr	x8
   1a1f0:	tbz	w0, #0, 1a458 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5bc4>
   1a1f4:	ldr	w8, [x19, #48]
   1a1f8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a1fc:	ldr	x8, [x19, #72]
   1a200:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a204:	ldr	w9, [x8]
   1a208:	mov	w21, #0x22                  	// #34
   1a20c:	cmp	w9, #0x1
   1a210:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1a214:	ldr	x8, [x8, #16]
   1a218:	sub	x8, x8, #0x1
   1a21c:	cmp	x8, #0x40
   1a220:	mov	w8, #0x4                   	// #4
   1a224:	csel	w21, w8, w21, cc  // cc = lo, ul, last
   1a228:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a22c:	ldr	w8, [x19, #48]
   1a230:	cmp	w8, #0x3
   1a234:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1a238:	ldr	w8, [x19, #76]
   1a23c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a240:	adrp	x9, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1a244:	ldr	w8, [x19, #72]
   1a248:	ldr	x9, [x9]
   1a24c:	lsr	x10, x8, #3
   1a250:	ldrh	w11, [x9, #566]
   1a254:	cmp	w10, w11
   1a258:	b.cs	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.hs, b.nlast
   1a25c:	ldr	x9, [x9, #552]
   1a260:	and	w8, w8, #0x7
   1a264:	ldrb	w9, [x9, x10]
   1a268:	lsr	w8, w9, w8
   1a26c:	tbnz	w8, #0, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   1a270:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a274:	ldr	w8, [x19, #48]
   1a278:	cmp	w8, #0xc
   1a27c:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1a280:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a284:	mov	w0, #0x35                  	// #53
   1a288:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a28c:	mov	w0, #0x3                   	// #3
   1a290:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a294:	mov	w0, #0x2d                  	// #45
   1a298:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a29c:	mov	w0, #0x36                  	// #54
   1a2a0:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a2a4:	mov	w21, #0xf                   	// #15
   1a2a8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a2ac:	mov	w21, #0x19                  	// #25
   1a2b0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a2b4:	mov	w21, #0x23                  	// #35
   1a2b8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a2bc:	mov	w21, #0x1a                  	// #26
   1a2c0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a2c4:	mov	w21, #0x21                  	// #33
   1a2c8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a2cc:	mov	w21, #0x44                  	// #68
   1a2d0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a2d4:	ldr	x8, [x19]
   1a2d8:	mov	x0, x19
   1a2dc:	ldr	x8, [x8, #40]
   1a2e0:	blr	x8
   1a2e4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a2e8:	ldr	w8, [x19, #48]
   1a2ec:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a2f0:	ldr	x8, [x19, #72]
   1a2f4:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a2f8:	ldr	w8, [x8]
   1a2fc:	cmp	w8, #0x1
   1a300:	b.eq	15590 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xcfc>  // b.none
   1a304:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a308:	mov	w21, #0x1b                  	// #27
   1a30c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a310:	mov	w21, #0x51                  	// #81
   1a314:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a318:	mov	w21, #0x1c                  	// #28
   1a31c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a320:	mov	w21, #0x18                  	// #24
   1a324:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a328:	mov	w21, #0x43                  	// #67
   1a32c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a330:	mov	w21, #0x45                  	// #69
   1a334:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a338:	mov	w21, #0x42                  	// #66
   1a33c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a340:	mov	w21, #0x1e                  	// #30
   1a344:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a348:	mov	w21, #0x1f                  	// #31
   1a34c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a350:	ldr	x8, [x19]
   1a354:	mov	x0, x19
   1a358:	ldr	x8, [x8, #40]
   1a35c:	blr	x8
   1a360:	tbz	w0, #0, 1ad20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x648c>
   1a364:	ldr	w8, [x19, #48]
   1a368:	cbz	w8, 1aab8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6224>
   1a36c:	cmp	w8, #0x1
   1a370:	b.eq	189f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4164>  // b.none
   1a374:	b	1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a378:	ldr	x8, [x19]
   1a37c:	mov	x0, x19
   1a380:	ldr	x8, [x8, #40]
   1a384:	blr	x8
   1a388:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a38c:	ldr	w8, [x19, #48]
   1a390:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a394:	ldr	x8, [x19, #72]
   1a398:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a39c:	ldr	w8, [x8]
   1a3a0:	cmp	w8, #0x1
   1a3a4:	b.eq	191f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4960>  // b.none
   1a3a8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a3ac:	ldr	x8, [x19]
   1a3b0:	mov	x0, x19
   1a3b4:	ldr	x8, [x8, #40]
   1a3b8:	blr	x8
   1a3bc:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a3c0:	ldr	w8, [x19, #48]
   1a3c4:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a3c8:	ldr	x8, [x19, #72]
   1a3cc:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a3d0:	ldr	w8, [x8]
   1a3d4:	cmp	w8, #0x1
   1a3d8:	b.eq	192b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a20>  // b.none
   1a3dc:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a3e0:	ldr	x8, [x19]
   1a3e4:	mov	x0, x19
   1a3e8:	ldr	x8, [x8, #40]
   1a3ec:	blr	x8
   1a3f0:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a3f4:	ldr	w8, [x19, #48]
   1a3f8:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a3fc:	ldr	x8, [x19, #72]
   1a400:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a404:	ldr	w8, [x8]
   1a408:	cmp	w8, #0x1
   1a40c:	b.eq	194fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4c68>  // b.none
   1a410:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a414:	ldr	x8, [x19]
   1a418:	mov	x0, x19
   1a41c:	ldr	x8, [x8, #40]
   1a420:	blr	x8
   1a424:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a428:	ldr	w8, [x19, #48]
   1a42c:	cbnz	w8, 1bde0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x754c>
   1a430:	ldr	x8, [x19, #72]
   1a434:	cbz	x8, 1be00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x756c>
   1a438:	ldr	w8, [x8]
   1a43c:	cmp	w8, #0x1
   1a440:	b.eq	19650 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4dbc>  // b.none
   1a444:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a448:	mov	w21, #0x50                  	// #80
   1a44c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a450:	mov	w21, #0x20                  	// #32
   1a454:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a458:	mov	w21, #0x22                  	// #34
   1a45c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a460:	mov	w0, #0xa                   	// #10
   1a464:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a468:	mov	w0, #0x34                  	// #52
   1a46c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a470:	mov	w0, #0x7                   	// #7
   1a474:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a478:	mov	w0, #0x31                  	// #49
   1a47c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a480:	mov	w0, #0x32                  	// #50
   1a484:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a488:	mov	w0, #0x33                  	// #51
   1a48c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a490:	mov	w0, #0x2f                  	// #47
   1a494:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a498:	mov	w0, #0x30                  	// #48
   1a49c:	b	14d34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4a0>
   1a4a0:	mov	w22, #0xfff                 	// #4095
   1a4a4:	cmp	w8, #0x2
   1a4a8:	b.ne	1a4bc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c28>  // b.any
   1a4ac:	ldrh	w8, [x0, #16]
   1a4b0:	mov	w9, #0x1                   	// #1
   1a4b4:	cbnz	w9, 1a4f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c5c>
   1a4b8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a4bc:	add	x1, sp, #0x10
   1a4c0:	mov	x2, xzr
   1a4c4:	mov	x3, xzr
   1a4c8:	stp	xzr, xzr, [sp, #16]
   1a4cc:	str	wzr, [sp, #40]
   1a4d0:	str	xzr, [sp, #32]
   1a4d4:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1a4d8:	tbz	w0, #0, 1a4e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c50>
   1a4dc:	ldr	x8, [sp, #24]
   1a4e0:	cbz	x8, 1ad28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6494>
   1a4e4:	mov	w8, wzr
   1a4e8:	mov	w9, wzr
   1a4ec:	cbz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a4f0:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a4f4:	sub	w8, w22, #0x41
   1a4f8:	cmp	w8, #0x6
   1a4fc:	mov	w21, #0x4                   	// #4
   1a500:	b.ls	1a7d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f3c>  // b.plast
   1a504:	sub	w8, w22, #0x141
   1a508:	cmp	w8, #0x6
   1a50c:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   1a510:	mov	w9, #0x1                   	// #1
   1a514:	lsl	w8, w9, w8
   1a518:	mov	w9, #0x75                  	// #117
   1a51c:	b	1a5a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d10>
   1a520:	mov	w22, #0xfff                 	// #4095
   1a524:	cmp	w8, #0x2
   1a528:	b.ne	1a53c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ca8>  // b.any
   1a52c:	ldrh	w8, [x0, #16]
   1a530:	mov	w9, #0x1                   	// #1
   1a534:	cbnz	w9, 1a570 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cdc>
   1a538:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a53c:	add	x1, sp, #0x10
   1a540:	mov	x2, xzr
   1a544:	mov	x3, xzr
   1a548:	stp	xzr, xzr, [sp, #16]
   1a54c:	str	wzr, [sp, #40]
   1a550:	str	xzr, [sp, #32]
   1a554:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1a558:	tbz	w0, #0, 1a564 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cd0>
   1a55c:	ldr	x8, [sp, #24]
   1a560:	cbz	x8, 1ad5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64c8>
   1a564:	mov	w8, wzr
   1a568:	mov	w9, wzr
   1a56c:	cbz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a570:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a574:	sub	w8, w22, #0x51
   1a578:	cmp	w8, #0x6
   1a57c:	mov	w21, #0x4                   	// #4
   1a580:	b.hi	1a58c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cf8>  // b.pmore
   1a584:	cmp	w8, #0x3
   1a588:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1a58c:	sub	w8, w22, #0x151
   1a590:	cmp	w8, #0x6
   1a594:	b.hi	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.pmore
   1a598:	mov	w9, #0x1                   	// #1
   1a59c:	lsl	w8, w9, w8
   1a5a0:	mov	w9, #0x55                  	// #85
   1a5a4:	tst	w8, w9
   1a5a8:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1a5ac:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a5b0:	mov	w21, #0xfff                 	// #4095
   1a5b4:	cmp	w8, #0x2
   1a5b8:	b.ne	1a5cc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d38>  // b.any
   1a5bc:	ldrh	w8, [x0, #16]
   1a5c0:	mov	w9, #0x1                   	// #1
   1a5c4:	cbnz	w9, 1a600 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d6c>
   1a5c8:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a5cc:	add	x1, sp, #0x10
   1a5d0:	mov	x2, xzr
   1a5d4:	mov	x3, xzr
   1a5d8:	stp	xzr, xzr, [sp, #16]
   1a5dc:	str	wzr, [sp, #40]
   1a5e0:	str	xzr, [sp, #32]
   1a5e4:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1a5e8:	tbz	w0, #0, 1a5f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d60>
   1a5ec:	ldr	x8, [sp, #24]
   1a5f0:	cbz	x8, 1ad90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64fc>
   1a5f4:	mov	w8, wzr
   1a5f8:	mov	w9, wzr
   1a5fc:	cbz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a600:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a604:	orr	w8, w21, #0x2
   1a608:	cmp	w8, #0x73
   1a60c:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1a610:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a614:	cmp	w8, #0x4
   1a618:	b.ne	1a7e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f54>  // b.any
   1a61c:	ldr	x9, [x0, #16]
   1a620:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1a624:	ldr	w19, [x0, #24]
   1a628:	ldr	w8, [x9]
   1a62c:	mov	x0, x9
   1a630:	b	1a7ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f58>
   1a634:	cmp	w8, #0x4
   1a638:	b.ne	1a89c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6008>  // b.any
   1a63c:	ldr	x9, [x0, #16]
   1a640:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1a644:	ldr	w19, [x0, #24]
   1a648:	ldr	w8, [x9]
   1a64c:	mov	x0, x9
   1a650:	b	1a8a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x600c>
   1a654:	cmp	w8, #0x4
   1a658:	b.ne	1a950 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60bc>  // b.any
   1a65c:	ldr	x9, [x0, #16]
   1a660:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1a664:	ldr	w19, [x0, #24]
   1a668:	ldr	w8, [x9]
   1a66c:	mov	x0, x9
   1a670:	b	1a954 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60c0>
   1a674:	cmp	w8, #0x4
   1a678:	b.ne	1a9b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x611c>  // b.any
   1a67c:	ldr	x9, [x0, #16]
   1a680:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1a684:	ldr	w19, [x0, #24]
   1a688:	ldr	w8, [x9]
   1a68c:	mov	x0, x9
   1a690:	b	1a9b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6120>
   1a694:	cmp	w8, #0x4
   1a698:	b.ne	1ab90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62fc>  // b.any
   1a69c:	ldr	x9, [x0, #16]
   1a6a0:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1a6a4:	ldr	w19, [x0, #24]
   1a6a8:	ldr	w8, [x9]
   1a6ac:	mov	x0, x9
   1a6b0:	b	1ab94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6300>
   1a6b4:	mov	w22, #0xfff                 	// #4095
   1a6b8:	cmp	w8, #0x2
   1a6bc:	b.ne	1a6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e3c>  // b.any
   1a6c0:	ldrh	w8, [x0, #16]
   1a6c4:	mov	w9, #0x1                   	// #1
   1a6c8:	cbnz	w9, 1a704 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e70>
   1a6cc:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a6d0:	add	x1, sp, #0x10
   1a6d4:	mov	x2, xzr
   1a6d8:	mov	x3, xzr
   1a6dc:	stp	xzr, xzr, [sp, #16]
   1a6e0:	str	wzr, [sp, #40]
   1a6e4:	str	xzr, [sp, #32]
   1a6e8:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1a6ec:	tbz	w0, #0, 1a6f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e64>
   1a6f0:	ldr	x8, [sp, #24]
   1a6f4:	cbz	x8, 1adc4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6530>
   1a6f8:	mov	w8, wzr
   1a6fc:	mov	w9, wzr
   1a700:	cbz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a704:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1a708:	sub	w8, w22, #0x61
   1a70c:	cmp	w8, #0x6
   1a710:	mov	w21, #0x4                   	// #4
   1a714:	b.hi	1a72c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e98>  // b.pmore
   1a718:	mov	w9, #0x1                   	// #1
   1a71c:	lsl	w8, w9, w8
   1a720:	mov	w9, #0x57                  	// #87
   1a724:	tst	w8, w9
   1a728:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1a72c:	cmp	w22, #0x161
   1a730:	b.eq	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.none
   1a734:	cmp	w22, #0x163
   1a738:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1a73c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a740:	mov	x0, x19
   1a744:	mov	x1, x21
   1a748:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1a74c:	ldr	w8, [sp, #8]
   1a750:	cmp	w8, #0x41
   1a754:	b.cc	1a764 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ed0>  // b.lo, b.ul, b.last
   1a758:	ldr	x0, [sp]
   1a75c:	cbz	x0, 1a764 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5ed0>
   1a760:	bl	0 <_ZdaPv>
   1a764:	ldr	x8, [sp, #24]
   1a768:	cmp	x20, x8
   1a76c:	b.eq	1a780 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5eec>  // b.none
   1a770:	mov	x8, sp
   1a774:	mov	x0, x19
   1a778:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   1a77c:	b	1a790 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5efc>
   1a780:	add	x8, sp, #0x10
   1a784:	add	x0, x8, #0x8
   1a788:	mov	x8, sp
   1a78c:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   1a790:	mov	x0, sp
   1a794:	bl	1ecf0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>
   1a798:	ldr	w8, [sp, #8]
   1a79c:	mov	w19, w0
   1a7a0:	cmp	w8, #0x41
   1a7a4:	b.cc	1a7b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f20>  // b.lo, b.ul, b.last
   1a7a8:	ldr	x0, [sp]
   1a7ac:	cbz	x0, 1a7b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f20>
   1a7b0:	bl	0 <_ZdaPv>
   1a7b4:	add	x0, sp, #0x10
   1a7b8:	bl	0 <LLVMInitializeAArch64AsmParser>
   1a7bc:	cmn	w19, #0x1
   1a7c0:	mov	w8, #0x4                   	// #4
   1a7c4:	mov	w9, #0xf                   	// #15
   1a7c8:	csel	w21, w9, w8, eq  // eq = none
   1a7cc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a7d0:	mov	w9, #0x1                   	// #1
   1a7d4:	lsl	w8, w9, w8
   1a7d8:	mov	w9, #0x57                  	// #87
   1a7dc:	tst	w8, w9
   1a7e0:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1a7e4:	b	1a504 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c70>
   1a7e8:	mov	w19, #0xfff                 	// #4095
   1a7ec:	cmp	w8, #0x2
   1a7f0:	b.ne	1a848 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fb4>  // b.any
   1a7f4:	ldrh	w9, [x0, #16]
   1a7f8:	mov	x8, xzr
   1a7fc:	cmp	w9, #0x16
   1a800:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   1a804:	cmp	w19, #0x39
   1a808:	b.ls	1bb78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72e4>  // b.plast
   1a80c:	sub	w10, w19, #0x121
   1a810:	cmp	w10, #0x6
   1a814:	b.hi	1a82c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f98>  // b.pmore
   1a818:	mov	w11, #0x1                   	// #1
   1a81c:	lsl	w10, w11, w10
   1a820:	mov	w11, #0x79                  	// #121
   1a824:	tst	w10, w11
   1a828:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1a82c:	cmp	w9, #0x14
   1a830:	b.eq	1a83c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fa8>  // b.none
   1a834:	cmp	w9, #0x18
   1a838:	b.ne	1a840 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fac>  // b.any
   1a83c:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a840:	mov	w21, #0x3d                  	// #61
   1a844:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a848:	add	x1, sp, #0x10
   1a84c:	mov	x2, xzr
   1a850:	mov	x3, xzr
   1a854:	stp	xzr, xzr, [sp, #16]
   1a858:	str	wzr, [sp, #40]
   1a85c:	str	xzr, [sp, #32]
   1a860:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1a864:	tbz	w0, #0, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a868:	ldr	x8, [sp, #24]
   1a86c:	cbnz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a870:	ldr	x8, [sp, #16]
   1a874:	cmp	w19, #0xfff
   1a878:	b.ne	1a880 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5fec>  // b.any
   1a87c:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a880:	cbz	x8, 1bb68 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72d4>
   1a884:	ldrh	w9, [x8, #16]
   1a888:	ldr	x8, [sp, #32]
   1a88c:	cmp	w19, #0xfff
   1a890:	b.eq	1a7fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f68>  // b.none
   1a894:	cbnz	w9, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a898:	b	1a7fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f68>
   1a89c:	mov	w19, #0xfff                 	// #4095
   1a8a0:	cmp	w8, #0x2
   1a8a4:	b.ne	1a8fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6068>  // b.any
   1a8a8:	ldrh	w9, [x0, #16]
   1a8ac:	mov	x8, xzr
   1a8b0:	cmp	w9, #0x16
   1a8b4:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   1a8b8:	cmp	w19, #0x39
   1a8bc:	b.ls	1bba8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7314>  // b.plast
   1a8c0:	sub	w10, w19, #0x121
   1a8c4:	cmp	w10, #0x6
   1a8c8:	b.hi	1a8e0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x604c>  // b.pmore
   1a8cc:	mov	w11, #0x1                   	// #1
   1a8d0:	lsl	w10, w11, w10
   1a8d4:	mov	w11, #0x79                  	// #121
   1a8d8:	tst	w10, w11
   1a8dc:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1a8e0:	cmp	w9, #0x14
   1a8e4:	b.eq	1a8f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x605c>  // b.none
   1a8e8:	cmp	w9, #0x18
   1a8ec:	b.ne	1a8f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6060>  // b.any
   1a8f0:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a8f4:	mov	w21, #0x38                  	// #56
   1a8f8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a8fc:	add	x1, sp, #0x10
   1a900:	mov	x2, xzr
   1a904:	mov	x3, xzr
   1a908:	stp	xzr, xzr, [sp, #16]
   1a90c:	str	wzr, [sp, #40]
   1a910:	str	xzr, [sp, #32]
   1a914:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1a918:	tbz	w0, #0, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a91c:	ldr	x8, [sp, #24]
   1a920:	cbnz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a924:	ldr	x8, [sp, #16]
   1a928:	cmp	w19, #0xfff
   1a92c:	b.ne	1a934 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60a0>  // b.any
   1a930:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a934:	cbz	x8, 1bb98 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7304>
   1a938:	ldrh	w9, [x8, #16]
   1a93c:	ldr	x8, [sp, #32]
   1a940:	cmp	w19, #0xfff
   1a944:	b.eq	1a8b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x601c>  // b.none
   1a948:	cbnz	w9, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a94c:	b	1a8b0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x601c>
   1a950:	mov	w19, #0xfff                 	// #4095
   1a954:	cmp	w8, #0x2
   1a958:	b.ne	1aa10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x617c>  // b.any
   1a95c:	ldrh	w9, [x0, #16]
   1a960:	mov	x8, xzr
   1a964:	cmp	w9, #0x16
   1a968:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   1a96c:	cmp	w19, #0x39
   1a970:	b.ls	1bbd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7344>  // b.plast
   1a974:	sub	w10, w19, #0x121
   1a978:	cmp	w10, #0x6
   1a97c:	b.hi	1a994 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6100>  // b.pmore
   1a980:	mov	w11, #0x1                   	// #1
   1a984:	lsl	w10, w11, w10
   1a988:	mov	w11, #0x79                  	// #121
   1a98c:	tst	w10, w11
   1a990:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1a994:	cmp	w9, #0x14
   1a998:	b.eq	1a9a4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6110>  // b.none
   1a99c:	cmp	w9, #0x18
   1a9a0:	b.ne	1a9a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6114>  // b.any
   1a9a4:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1a9a8:	mov	w21, #0x33                  	// #51
   1a9ac:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1a9b0:	mov	w19, #0xfff                 	// #4095
   1a9b4:	cmp	w8, #0x2
   1a9b8:	b.ne	1aa64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61d0>  // b.any
   1a9bc:	ldrh	w9, [x0, #16]
   1a9c0:	mov	x8, xzr
   1a9c4:	cmp	w9, #0x16
   1a9c8:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   1a9cc:	cmp	w19, #0x39
   1a9d0:	b.ls	1bc08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7374>  // b.plast
   1a9d4:	sub	w10, w19, #0x121
   1a9d8:	cmp	w10, #0x6
   1a9dc:	b.hi	1a9f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6160>  // b.pmore
   1a9e0:	mov	w11, #0x1                   	// #1
   1a9e4:	lsl	w10, w11, w10
   1a9e8:	mov	w11, #0x79                  	// #121
   1a9ec:	tst	w10, w11
   1a9f0:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1a9f4:	cmp	w9, #0x14
   1a9f8:	b.eq	1aa04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6170>  // b.none
   1a9fc:	cmp	w9, #0x18
   1aa00:	b.ne	1aa08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6174>  // b.any
   1aa04:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa08:	mov	w21, #0x2b                  	// #43
   1aa0c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1aa10:	add	x1, sp, #0x10
   1aa14:	mov	x2, xzr
   1aa18:	mov	x3, xzr
   1aa1c:	stp	xzr, xzr, [sp, #16]
   1aa20:	str	wzr, [sp, #40]
   1aa24:	str	xzr, [sp, #32]
   1aa28:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1aa2c:	tbz	w0, #0, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa30:	ldr	x8, [sp, #24]
   1aa34:	cbnz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa38:	ldr	x8, [sp, #16]
   1aa3c:	cmp	w19, #0xfff
   1aa40:	b.ne	1aa48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x61b4>  // b.any
   1aa44:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa48:	cbz	x8, 1bbc8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7334>
   1aa4c:	ldrh	w9, [x8, #16]
   1aa50:	ldr	x8, [sp, #32]
   1aa54:	cmp	w19, #0xfff
   1aa58:	b.eq	1a964 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60d0>  // b.none
   1aa5c:	cbnz	w9, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa60:	b	1a964 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60d0>
   1aa64:	add	x1, sp, #0x10
   1aa68:	mov	x2, xzr
   1aa6c:	mov	x3, xzr
   1aa70:	stp	xzr, xzr, [sp, #16]
   1aa74:	str	wzr, [sp, #40]
   1aa78:	str	xzr, [sp, #32]
   1aa7c:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1aa80:	tbz	w0, #0, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa84:	ldr	x8, [sp, #24]
   1aa88:	cbnz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa8c:	ldr	x8, [sp, #16]
   1aa90:	cmp	w19, #0xfff
   1aa94:	b.ne	1aa9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6208>  // b.any
   1aa98:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aa9c:	cbz	x8, 1bbf8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7364>
   1aaa0:	ldrh	w9, [x8, #16]
   1aaa4:	ldr	x8, [sp, #32]
   1aaa8:	cmp	w19, #0xfff
   1aaac:	b.eq	1a9c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6130>  // b.none
   1aab0:	cbnz	w9, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1aab4:	b	1a9c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6130>
   1aab8:	ldr	x0, [x19, #72]
   1aabc:	cbz	x0, 1be20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x758c>
   1aac0:	ldr	w8, [x0]
   1aac4:	cmp	w8, #0x4
   1aac8:	b.ne	1aae4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6250>  // b.any
   1aacc:	ldr	x9, [x0, #16]
   1aad0:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1aad4:	ldr	w20, [x0, #24]
   1aad8:	ldr	w8, [x9]
   1aadc:	mov	x0, x9
   1aae0:	b	1aae8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6254>
   1aae4:	mov	w20, #0xfff                 	// #4095
   1aae8:	cmp	w8, #0x2
   1aaec:	b.ne	1ab14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6280>  // b.any
   1aaf0:	ldrh	w8, [x0, #16]
   1aaf4:	mov	x9, xzr
   1aaf8:	orr	w10, w8, #0x2
   1aafc:	cmp	w10, #0x16
   1ab00:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1ab04:	cbnz	x9, 1acd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6444>
   1ab08:	cmp	w8, #0x18
   1ab0c:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1ab10:	b	1acd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6444>
   1ab14:	add	x1, sp, #0x10
   1ab18:	mov	x2, xzr
   1ab1c:	mov	x3, xzr
   1ab20:	stp	xzr, xzr, [sp, #16]
   1ab24:	str	wzr, [sp, #40]
   1ab28:	str	xzr, [sp, #32]
   1ab2c:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1ab30:	tbz	w0, #0, 1ab64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62d0>
   1ab34:	ldr	x8, [sp, #24]
   1ab38:	cbnz	x8, 1ab64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62d0>
   1ab3c:	ldr	x8, [sp, #16]
   1ab40:	cmp	w20, #0xfff
   1ab44:	b.ne	1ab4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62b8>  // b.any
   1ab48:	cbz	x8, 1ab64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x62d0>
   1ab4c:	cbz	x8, 1acd8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6444>
   1ab50:	ldrh	w8, [x8, #16]
   1ab54:	ldr	x9, [sp, #32]
   1ab58:	cmp	w20, #0xfff
   1ab5c:	b.eq	1aaf8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6264>  // b.none
   1ab60:	cbz	w8, 1aaf8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6264>
   1ab64:	add	x0, sp, #0x10
   1ab68:	mov	x1, x19
   1ab6c:	bl	1ebe4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   1ab70:	ldrb	w8, [sp, #32]
   1ab74:	cbz	w8, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   1ab78:	ldr	x8, [sp, #16]
   1ab7c:	mov	w9, #0xb                   	// #11
   1ab80:	cmp	x8, #0x1, lsl #12
   1ab84:	mov	w8, #0x4                   	// #4
   1ab88:	csel	w21, w8, w9, cc  // cc = lo, ul, last
   1ab8c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ab90:	mov	w19, #0xfff                 	// #4095
   1ab94:	cmp	w8, #0x2
   1ab98:	b.ne	1abec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6358>  // b.any
   1ab9c:	ldrh	w9, [x0, #16]
   1aba0:	mov	x8, xzr
   1aba4:	cmp	w9, #0x16
   1aba8:	b.eq	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.none
   1abac:	cmp	w19, #0x39
   1abb0:	b.ls	1bc38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73a4>  // b.plast
   1abb4:	sub	w10, w19, #0x121
   1abb8:	cmp	w10, #0x6
   1abbc:	b.hi	1abd4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6340>  // b.pmore
   1abc0:	mov	w11, #0x1                   	// #1
   1abc4:	lsl	w10, w11, w10
   1abc8:	mov	w11, #0x79                  	// #121
   1abcc:	tst	w10, w11
   1abd0:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1abd4:	cmp	w9, #0x14
   1abd8:	b.eq	1abe4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6350>  // b.none
   1abdc:	cmp	w9, #0x18
   1abe0:	b.ne	195e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d50>  // b.any
   1abe4:	cbnz	x8, 195e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4d50>
   1abe8:	b	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1abec:	add	x1, sp, #0x10
   1abf0:	mov	x2, xzr
   1abf4:	mov	x3, xzr
   1abf8:	stp	xzr, xzr, [sp, #16]
   1abfc:	str	wzr, [sp, #40]
   1ac00:	str	xzr, [sp, #32]
   1ac04:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1ac08:	tbz	w0, #0, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1ac0c:	ldr	x8, [sp, #24]
   1ac10:	cbnz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1ac14:	ldr	x8, [sp, #16]
   1ac18:	cmp	w19, #0xfff
   1ac1c:	b.ne	1ac24 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6390>  // b.any
   1ac20:	cbz	x8, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1ac24:	cbz	x8, 1bc28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7394>
   1ac28:	ldrh	w9, [x8, #16]
   1ac2c:	ldr	x8, [sp, #32]
   1ac30:	cmp	w19, #0xfff
   1ac34:	b.eq	1aba4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6310>  // b.none
   1ac38:	cbnz	w9, 1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>
   1ac3c:	b	1aba4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6310>
   1ac40:	cbz	w8, 15124 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x890>
   1ac44:	mov	w21, #0x47                  	// #71
   1ac48:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac4c:	cbz	w8, 15644 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xdb0>
   1ac50:	mov	w21, #0x46                  	// #70
   1ac54:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac58:	cbz	w8, 157f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0xf60>
   1ac5c:	mov	w21, #0x4a                  	// #74
   1ac60:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac64:	cbz	w9, 19344 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4ab0>
   1ac68:	mov	w21, #0x8                   	// #8
   1ac6c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac70:	cbz	w8, 1979c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f08>
   1ac74:	mov	w21, #0x4e                  	// #78
   1ac78:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac7c:	cbz	w8, 197dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4f48>
   1ac80:	mov	w21, #0x49                  	// #73
   1ac84:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac88:	cbz	w8, 19880 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x4fec>
   1ac8c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac90:	cbz	w8, 19b64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x52d0>
   1ac94:	mov	w21, #0x4b                  	// #75
   1ac98:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ac9c:	cbz	w8, 19be4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5350>
   1aca0:	mov	w21, #0x48                  	// #72
   1aca4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1aca8:	cbz	w8, 19d60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x54cc>
   1acac:	mov	w21, #0x4f                  	// #79
   1acb0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1acb4:	cbz	w8, 19e64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x55d0>
   1acb8:	mov	w21, #0x4c                  	// #76
   1acbc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1acc0:	cbz	w8, 19f90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x56fc>
   1acc4:	mov	w21, #0x4d                  	// #77
   1acc8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1accc:	cbz	w8, 1a0c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5834>
   1acd0:	mov	w21, #0x7                   	// #7
   1acd4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1acd8:	cmp	w20, #0x39
   1acdc:	mov	w21, #0x4                   	// #4
   1ace0:	b.hi	1ad00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x646c>  // b.pmore
   1ace4:	mov	w8, w20
   1ace8:	mov	w9, #0x1                   	// #1
   1acec:	lsl	x8, x9, x8
   1acf0:	mov	x9, #0x3a000000000         	// #3985729650688
   1acf4:	movk	x9, #0x2a0, lsl #48
   1acf8:	tst	x8, x9
   1acfc:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1ad00:	sub	w8, w20, #0x121
   1ad04:	cmp	w8, #0x6
   1ad08:	b.hi	1ad20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x648c>  // b.pmore
   1ad0c:	mov	w9, #0x1                   	// #1
   1ad10:	lsl	w8, w9, w8
   1ad14:	mov	w9, #0x51                  	// #81
   1ad18:	tst	w8, w9
   1ad1c:	b.ne	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>  // b.any
   1ad20:	mov	w21, #0xb                   	// #11
   1ad24:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ad28:	ldr	x8, [sp, #16]
   1ad2c:	cmp	w22, #0xfff
   1ad30:	b.ne	1ad38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64a4>  // b.any
   1ad34:	cbz	x8, 1a4e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c54>
   1ad38:	cbz	x8, 1ad40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64ac>
   1ad3c:	ldrh	w8, [x8, #16]
   1ad40:	cmp	w22, #0xfff
   1ad44:	cset	w9, eq  // eq = none
   1ad48:	cmp	w8, #0x0
   1ad4c:	cset	w10, eq  // eq = none
   1ad50:	orr	w9, w9, w10
   1ad54:	cbnz	w9, 1a4f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5c5c>
   1ad58:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1ad5c:	ldr	x8, [sp, #16]
   1ad60:	cmp	w22, #0xfff
   1ad64:	b.ne	1ad6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64d8>  // b.any
   1ad68:	cbz	x8, 1a568 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cd4>
   1ad6c:	cbz	x8, 1ad74 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x64e0>
   1ad70:	ldrh	w8, [x8, #16]
   1ad74:	cmp	w22, #0xfff
   1ad78:	cset	w9, eq  // eq = none
   1ad7c:	cmp	w8, #0x0
   1ad80:	cset	w10, eq  // eq = none
   1ad84:	orr	w9, w9, w10
   1ad88:	cbnz	w9, 1a570 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5cdc>
   1ad8c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1ad90:	ldr	x8, [sp, #16]
   1ad94:	cmp	w21, #0xfff
   1ad98:	b.ne	1ada0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x650c>  // b.any
   1ad9c:	cbz	x8, 1a5f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d64>
   1ada0:	cbz	x8, 1ada8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6514>
   1ada4:	ldrh	w8, [x8, #16]
   1ada8:	cmp	w21, #0xfff
   1adac:	cset	w9, eq  // eq = none
   1adb0:	cmp	w8, #0x0
   1adb4:	cset	w10, eq  // eq = none
   1adb8:	orr	w9, w9, w10
   1adbc:	cbnz	w9, 1a600 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5d6c>
   1adc0:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1adc4:	ldr	x8, [sp, #16]
   1adc8:	cmp	w22, #0xfff
   1adcc:	b.ne	1add4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6540>  // b.any
   1add0:	cbz	x8, 1a6fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e68>
   1add4:	cbz	x8, 1addc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6548>
   1add8:	ldrh	w8, [x8, #16]
   1addc:	cmp	w22, #0xfff
   1ade0:	cset	w9, eq  // eq = none
   1ade4:	cmp	w8, #0x0
   1ade8:	cset	w10, eq  // eq = none
   1adec:	orr	w9, w9, w10
   1adf0:	cbnz	w9, 1a704 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5e70>
   1adf4:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1adf8:	cmp	w8, #0x4
   1adfc:	b.ne	1b4b4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c20>  // b.any
   1ae00:	ldr	x9, [x0, #16]
   1ae04:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1ae08:	ldr	w21, [x0, #24]
   1ae0c:	ldr	w8, [x9]
   1ae10:	mov	x0, x9
   1ae14:	b	1b4b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c24>
   1ae18:	cmp	w8, #0x4
   1ae1c:	b.ne	1b550 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6cbc>  // b.any
   1ae20:	ldr	x9, [x0, #16]
   1ae24:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1ae28:	ldr	w21, [x0, #24]
   1ae2c:	ldr	w8, [x9]
   1ae30:	mov	x0, x9
   1ae34:	b	1b554 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6cc0>
   1ae38:	cmp	w8, #0x4
   1ae3c:	b.ne	1b5ec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d58>  // b.any
   1ae40:	ldr	x9, [x0, #16]
   1ae44:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1ae48:	ldr	w21, [x0, #24]
   1ae4c:	ldr	w8, [x9]
   1ae50:	mov	x0, x9
   1ae54:	b	1b5f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d5c>
   1ae58:	cmp	w8, #0x4
   1ae5c:	b.ne	1b688 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6df4>  // b.any
   1ae60:	ldr	x9, [x0, #16]
   1ae64:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1ae68:	ldr	w21, [x0, #24]
   1ae6c:	ldr	w8, [x9]
   1ae70:	mov	x0, x9
   1ae74:	b	1b68c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6df8>
   1ae78:	cmp	w8, #0x4
   1ae7c:	b.ne	1b724 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e90>  // b.any
   1ae80:	ldr	x9, [x0, #16]
   1ae84:	cbz	x9, 1be40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75ac>
   1ae88:	ldr	w21, [x0, #24]
   1ae8c:	ldr	w8, [x9]
   1ae90:	mov	x0, x9
   1ae94:	b	1b728 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e94>
   1ae98:	add	x10, x19, #0x58
   1ae9c:	ldr	w10, [x10]
   1aea0:	cbnz	w10, 1b848 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fb4>
   1aea4:	cmp	w9, #0x3
   1aea8:	b.eq	1b838 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fa4>  // b.none
   1aeac:	cmp	w9, #0xa
   1aeb0:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1aeb4:	add	x8, x8, #0x4
   1aeb8:	b	1b83c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fa8>
   1aebc:	add	x10, x19, #0x58
   1aec0:	ldr	w10, [x10]
   1aec4:	cbnz	w10, 1b860 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fcc>
   1aec8:	cmp	w9, #0x3
   1aecc:	b.eq	1b850 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fbc>  // b.none
   1aed0:	cmp	w9, #0xa
   1aed4:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1aed8:	add	x8, x8, #0x4
   1aedc:	b	1b854 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fc0>
   1aee0:	add	x10, x19, #0x58
   1aee4:	ldr	w10, [x10]
   1aee8:	cbnz	w10, 1b874 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fe0>
   1aeec:	cmp	w9, #0x3
   1aef0:	b.eq	1b868 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fd4>  // b.none
   1aef4:	cmp	w9, #0xa
   1aef8:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1aefc:	add	x8, x8, #0x4
   1af00:	b	1b86c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fd8>
   1af04:	add	x10, x19, #0x58
   1af08:	ldr	w10, [x10]
   1af0c:	cbnz	w10, 1b888 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ff4>
   1af10:	cmp	w9, #0x3
   1af14:	b.eq	1b87c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fe8>  // b.none
   1af18:	cmp	w9, #0xa
   1af1c:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1af20:	add	x8, x8, #0x4
   1af24:	b	1b880 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6fec>
   1af28:	add	x10, x19, #0x58
   1af2c:	ldr	w10, [x10]
   1af30:	cbnz	w10, 1b8a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x700c>
   1af34:	cmp	w9, #0x3
   1af38:	b.eq	1b890 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ffc>  // b.none
   1af3c:	cmp	w9, #0xa
   1af40:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1af44:	add	x8, x8, #0x4
   1af48:	b	1b894 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7000>
   1af4c:	add	x10, x19, #0x58
   1af50:	ldr	w10, [x10]
   1af54:	cbnz	w10, 1b8b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7024>
   1af58:	cmp	w9, #0x3
   1af5c:	b.eq	1b8a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7014>  // b.none
   1af60:	cmp	w9, #0xa
   1af64:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1af68:	add	x8, x8, #0x4
   1af6c:	b	1b8ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7018>
   1af70:	add	x10, x19, #0x58
   1af74:	ldr	w10, [x10]
   1af78:	cbnz	w10, 1b8d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x703c>
   1af7c:	cmp	w9, #0x3
   1af80:	b.eq	1b8c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x702c>  // b.none
   1af84:	cmp	w9, #0xa
   1af88:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1af8c:	add	x8, x8, #0x4
   1af90:	b	1b8c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7030>
   1af94:	add	x10, x19, #0x58
   1af98:	ldr	w10, [x10]
   1af9c:	cbnz	w10, 1b8f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x705c>
   1afa0:	cmp	w9, #0x3
   1afa4:	b.eq	1b8d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7044>  // b.none
   1afa8:	cmp	w9, #0xa
   1afac:	b.ne	1be60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x75cc>  // b.any
   1afb0:	add	x8, x8, #0x4
   1afb4:	b	1b8dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7048>
   1afb8:	add	x10, x19, #0x5c
   1afbc:	ldr	w10, [x10]
   1afc0:	cmp	w10, #0x1
   1afc4:	b.ne	1afdc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6748>  // b.any
   1afc8:	cmp	w9, #0x3
   1afcc:	b.eq	1b8f8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7064>  // b.none
   1afd0:	cmp	w9, #0xa
   1afd4:	b.eq	1b8fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7068>  // b.none
   1afd8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1afdc:	cmp	w9, #0x3
   1afe0:	b.eq	1b908 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7074>  // b.none
   1afe4:	cmp	w9, #0xa
   1afe8:	b.eq	1b908 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7074>  // b.none
   1afec:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1aff0:	add	x10, x19, #0x5c
   1aff4:	ldr	w10, [x10]
   1aff8:	cmp	w10, #0x2
   1affc:	b.ne	1b014 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6780>  // b.any
   1b000:	cmp	w9, #0x3
   1b004:	b.eq	1b910 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x707c>  // b.none
   1b008:	cmp	w9, #0xa
   1b00c:	b.eq	1b914 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7080>  // b.none
   1b010:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b014:	cmp	w9, #0x3
   1b018:	b.eq	1b920 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x708c>  // b.none
   1b01c:	cmp	w9, #0xa
   1b020:	b.eq	1b920 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x708c>  // b.none
   1b024:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b028:	add	x10, x19, #0x5c
   1b02c:	ldr	w10, [x10]
   1b030:	cmp	w10, #0x3
   1b034:	b.ne	1b934 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70a0>  // b.any
   1b038:	cmp	w9, #0x3
   1b03c:	b.eq	1b928 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7094>  // b.none
   1b040:	cmp	w9, #0xa
   1b044:	b.eq	1b92c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7098>  // b.none
   1b048:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b04c:	add	x10, x19, #0x5c
   1b050:	ldr	w10, [x10]
   1b054:	cmp	w10, #0x1
   1b058:	b.ne	1b948 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70b4>  // b.any
   1b05c:	cmp	w9, #0x3
   1b060:	b.eq	1b93c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70a8>  // b.none
   1b064:	cmp	w9, #0xa
   1b068:	b.eq	1b940 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70ac>  // b.none
   1b06c:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b070:	add	x10, x19, #0x5c
   1b074:	ldr	w10, [x10]
   1b078:	cmp	w10, #0x1
   1b07c:	b.ne	1b094 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6800>  // b.any
   1b080:	cmp	w9, #0x3
   1b084:	b.eq	1b950 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70bc>  // b.none
   1b088:	cmp	w9, #0xa
   1b08c:	b.eq	1b954 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70c0>  // b.none
   1b090:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b094:	cmp	w9, #0x3
   1b098:	b.eq	1b960 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70cc>  // b.none
   1b09c:	cmp	w9, #0xa
   1b0a0:	b.eq	1b960 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70cc>  // b.none
   1b0a4:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b0a8:	add	x10, x19, #0x5c
   1b0ac:	ldr	w10, [x10]
   1b0b0:	cmp	w10, #0x3
   1b0b4:	b.ne	1b974 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70e0>  // b.any
   1b0b8:	cmp	w9, #0x3
   1b0bc:	b.eq	1b968 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70d4>  // b.none
   1b0c0:	cmp	w9, #0xa
   1b0c4:	b.eq	1b96c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70d8>  // b.none
   1b0c8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b0cc:	add	x10, x19, #0x5c
   1b0d0:	ldr	w10, [x10]
   1b0d4:	cmp	w10, #0x1
   1b0d8:	b.ne	1b988 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70f4>  // b.any
   1b0dc:	cmp	w9, #0x3
   1b0e0:	b.eq	1b97c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70e8>  // b.none
   1b0e4:	cmp	w9, #0xa
   1b0e8:	b.eq	1b980 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70ec>  // b.none
   1b0ec:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b0f0:	add	x10, x19, #0x5c
   1b0f4:	ldr	w10, [x10]
   1b0f8:	cmp	w10, #0x2
   1b0fc:	b.ne	1b114 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6880>  // b.any
   1b100:	cmp	w9, #0x3
   1b104:	b.eq	1b990 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x70fc>  // b.none
   1b108:	cmp	w9, #0xa
   1b10c:	b.eq	1b994 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7100>  // b.none
   1b110:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b114:	cmp	w9, #0x3
   1b118:	b.eq	1b9a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x710c>  // b.none
   1b11c:	cmp	w9, #0xa
   1b120:	b.eq	1b9a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x710c>  // b.none
   1b124:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b128:	add	x10, x19, #0x5c
   1b12c:	ldr	w10, [x10]
   1b130:	cbnz	w10, 1badc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7248>
   1b134:	cmp	w9, #0x3
   1b138:	b.eq	1ba90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71fc>  // b.none
   1b13c:	cmp	w9, #0xa
   1b140:	b.eq	1ba94 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7200>  // b.none
   1b144:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b148:	add	x10, x19, #0x5c
   1b14c:	ldr	w10, [x10]
   1b150:	cbnz	w10, 1baf4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7260>
   1b154:	cmp	w9, #0x3
   1b158:	b.eq	1baa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7210>  // b.none
   1b15c:	cmp	w9, #0xa
   1b160:	b.eq	1baa8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7214>  // b.none
   1b164:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b168:	add	x10, x19, #0x5c
   1b16c:	ldr	w10, [x10]
   1b170:	cbnz	w10, 1bb4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72b8>
   1b174:	cmp	w9, #0x3
   1b178:	b.eq	1bab8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7224>  // b.none
   1b17c:	cmp	w9, #0xa
   1b180:	b.eq	1babc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7228>  // b.none
   1b184:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b188:	add	x10, x19, #0x5c
   1b18c:	ldr	w10, [x10]
   1b190:	cmp	w10, #0x1
   1b194:	b.ne	1b1ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6918>  // b.any
   1b198:	cmp	w9, #0x3
   1b19c:	b.eq	1b9a8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7114>  // b.none
   1b1a0:	cmp	w9, #0xa
   1b1a4:	b.eq	1b9ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7118>  // b.none
   1b1a8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b1ac:	cmp	w9, #0x3
   1b1b0:	b.eq	1b9b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7124>  // b.none
   1b1b4:	cmp	w9, #0xa
   1b1b8:	b.eq	1b9b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7124>  // b.none
   1b1bc:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b1c0:	add	x10, x19, #0x5c
   1b1c4:	ldr	w10, [x10]
   1b1c8:	cmp	w10, #0x2
   1b1cc:	b.ne	1b1e4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6950>  // b.any
   1b1d0:	cmp	w9, #0x3
   1b1d4:	b.eq	1b9c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x712c>  // b.none
   1b1d8:	cmp	w9, #0xa
   1b1dc:	b.eq	1b9c4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7130>  // b.none
   1b1e0:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b1e4:	cmp	w9, #0x3
   1b1e8:	b.eq	1b9d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x713c>  // b.none
   1b1ec:	cmp	w9, #0xa
   1b1f0:	b.eq	1b9d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x713c>  // b.none
   1b1f4:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b1f8:	add	x11, x19, #0x5c
   1b1fc:	ldr	w11, [x11]
   1b200:	cbz	w11, 1b7d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f40>
   1b204:	cmp	w10, #0xa
   1b208:	b.eq	1b218 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6984>  // b.none
   1b20c:	cmp	w10, #0x3
   1b210:	b.ne	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>  // b.any
   1b214:	add	x8, x19, #0x60
   1b218:	ldrb	w8, [x8]
   1b21c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b220:	b	1badc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7248>
   1b224:	add	x10, x19, #0x5c
   1b228:	ldr	w10, [x10]
   1b22c:	cmp	w10, #0x3
   1b230:	b.ne	1b248 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x69b4>  // b.any
   1b234:	cmp	w9, #0x3
   1b238:	b.eq	1b9d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7144>  // b.none
   1b23c:	cmp	w9, #0xa
   1b240:	b.eq	1b9dc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7148>  // b.none
   1b244:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b248:	cmp	w9, #0x3
   1b24c:	b.eq	1b9e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7154>  // b.none
   1b250:	cmp	w9, #0xa
   1b254:	b.eq	1b9e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7154>  // b.none
   1b258:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b25c:	add	x11, x19, #0x5c
   1b260:	ldr	w11, [x11]
   1b264:	cbz	w11, 1b7e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f54>
   1b268:	cmp	w10, #0xa
   1b26c:	b.eq	1b27c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x69e8>  // b.none
   1b270:	cmp	w10, #0x3
   1b274:	b.ne	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>  // b.any
   1b278:	add	x8, x19, #0x60
   1b27c:	ldrb	w8, [x8]
   1b280:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b284:	b	1baf4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7260>
   1b288:	add	x10, x19, #0x5c
   1b28c:	ldr	w10, [x10]
   1b290:	cmp	w10, #0x2
   1b294:	b.ne	1b9fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7168>  // b.any
   1b298:	cmp	w9, #0x3
   1b29c:	b.eq	1b9f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x715c>  // b.none
   1b2a0:	cmp	w9, #0xa
   1b2a4:	b.eq	1b9f4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7160>  // b.none
   1b2a8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b2ac:	add	x10, x19, #0x5c
   1b2b0:	ldr	w10, [x10]
   1b2b4:	cbnz	w10, 1bb08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7274>
   1b2b8:	cmp	w9, #0x3
   1b2bc:	b.eq	1bafc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7268>  // b.none
   1b2c0:	cmp	w9, #0xa
   1b2c4:	b.eq	1bb00 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x726c>  // b.none
   1b2c8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b2cc:	add	x10, x19, #0x5c
   1b2d0:	ldr	w10, [x10]
   1b2d4:	cbnz	w10, 1bb34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72a0>
   1b2d8:	cmp	w9, #0x3
   1b2dc:	b.eq	1bb10 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x727c>  // b.none
   1b2e0:	cmp	w9, #0xa
   1b2e4:	b.eq	1bb14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7280>  // b.none
   1b2e8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b2ec:	add	x11, x19, #0x5c
   1b2f0:	ldr	w11, [x11]
   1b2f4:	cbz	w11, 1b7fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f68>
   1b2f8:	cmp	w10, #0xa
   1b2fc:	b.eq	1b30c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6a78>  // b.none
   1b300:	cmp	w10, #0x3
   1b304:	b.ne	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>  // b.any
   1b308:	add	x8, x19, #0x60
   1b30c:	ldrb	w8, [x8]
   1b310:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b314:	b	1bb34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72a0>
   1b318:	add	x11, x19, #0x5c
   1b31c:	ldr	w11, [x11]
   1b320:	cbz	w11, 1b810 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f7c>
   1b324:	cmp	w10, #0xa
   1b328:	b.eq	1b338 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6aa4>  // b.none
   1b32c:	cmp	w10, #0x3
   1b330:	b.ne	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>  // b.any
   1b334:	add	x8, x19, #0x60
   1b338:	ldrb	w8, [x8]
   1b33c:	cbnz	w8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b340:	b	1bb4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72b8>
   1b344:	add	x10, x19, #0x5c
   1b348:	ldr	w10, [x10]
   1b34c:	cmp	w10, #0x3
   1b350:	b.ne	1b368 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ad4>  // b.any
   1b354:	cmp	w9, #0x3
   1b358:	b.eq	1ba04 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7170>  // b.none
   1b35c:	cmp	w9, #0xa
   1b360:	b.eq	1ba08 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7174>  // b.none
   1b364:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b368:	cmp	w9, #0x3
   1b36c:	b.eq	1ba14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7180>  // b.none
   1b370:	cmp	w9, #0xa
   1b374:	b.eq	1ba14 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7180>  // b.none
   1b378:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b37c:	add	x10, x19, #0x5c
   1b380:	ldr	w10, [x10]
   1b384:	cmp	w10, #0x3
   1b388:	b.ne	1b3a0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b0c>  // b.any
   1b38c:	cmp	w9, #0x3
   1b390:	b.eq	1ba1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7188>  // b.none
   1b394:	cmp	w9, #0xa
   1b398:	b.eq	1ba20 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x718c>  // b.none
   1b39c:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b3a0:	cmp	w9, #0x3
   1b3a4:	b.eq	1ba2c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7198>  // b.none
   1b3a8:	cmp	w9, #0xa
   1b3ac:	b.eq	1ba2c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7198>  // b.none
   1b3b0:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b3b4:	add	x10, x19, #0x5c
   1b3b8:	ldr	w10, [x10]
   1b3bc:	cmp	w10, #0x2
   1b3c0:	b.ne	1b3d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6b44>  // b.any
   1b3c4:	cmp	w9, #0x3
   1b3c8:	b.eq	1ba34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71a0>  // b.none
   1b3cc:	cmp	w9, #0xa
   1b3d0:	b.eq	1ba38 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71a4>  // b.none
   1b3d4:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b3d8:	cmp	w9, #0x3
   1b3dc:	b.eq	1ba44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71b0>  // b.none
   1b3e0:	cmp	w9, #0xa
   1b3e4:	b.eq	1ba44 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71b0>  // b.none
   1b3e8:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b3ec:	add	x10, x19, #0x5c
   1b3f0:	ldr	w10, [x10]
   1b3f4:	cmp	w10, #0x2
   1b3f8:	b.ne	1ba58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71c4>  // b.any
   1b3fc:	cmp	w9, #0x3
   1b400:	b.eq	1ba4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71b8>  // b.none
   1b404:	cmp	w9, #0xa
   1b408:	b.eq	1ba50 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71bc>  // b.none
   1b40c:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b410:	add	x10, x19, #0x5c
   1b414:	ldr	w10, [x10]
   1b418:	cmp	w10, #0x3
   1b41c:	b.ne	1b434 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ba0>  // b.any
   1b420:	cmp	w9, #0x3
   1b424:	b.eq	1ba60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71cc>  // b.none
   1b428:	cmp	w9, #0xa
   1b42c:	b.eq	1ba64 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71d0>  // b.none
   1b430:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b434:	cmp	w9, #0x3
   1b438:	b.eq	1ba70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71dc>  // b.none
   1b43c:	cmp	w9, #0xa
   1b440:	b.eq	1ba70 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71dc>  // b.none
   1b444:	b	1b49c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c08>
   1b448:	add	x10, x19, #0x5c
   1b44c:	ldr	w10, [x10]
   1b450:	cbnz	w10, 1bb60 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72cc>
   1b454:	cmp	w9, #0x3
   1b458:	b.eq	1bb54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72c0>  // b.none
   1b45c:	cmp	w9, #0xa
   1b460:	b.eq	1bb58 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72c4>  // b.none
   1b464:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b468:	add	x10, x19, #0x5c
   1b46c:	ldr	w10, [x10]
   1b470:	cmp	w10, #0x1
   1b474:	b.ne	1b48c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6bf8>  // b.any
   1b478:	cmp	w9, #0x3
   1b47c:	b.eq	1ba78 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71e4>  // b.none
   1b480:	cmp	w9, #0xa
   1b484:	b.eq	1ba7c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71e8>  // b.none
   1b488:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b48c:	cmp	w9, #0x3
   1b490:	b.eq	1ba88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71f4>  // b.none
   1b494:	cmp	w9, #0xa
   1b498:	b.eq	1ba88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x71f4>  // b.none
   1b49c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1b4a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1b4a4:	add	x0, x0, #0x0
   1b4a8:	add	x1, x1, #0x0
   1b4ac:	mov	w2, #0x271                 	// #625
   1b4b0:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1b4b4:	mov	w21, #0xfff                 	// #4095
   1b4b8:	cmp	w8, #0x2
   1b4bc:	b.ne	1b4fc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c68>  // b.any
   1b4c0:	ldrh	w9, [x0, #16]
   1b4c4:	mov	x8, xzr
   1b4c8:	cmp	w9, #0x16
   1b4cc:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   1b4d0:	cmp	w21, #0x39
   1b4d4:	b.ls	1bc6c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73d8>  // b.plast
   1b4d8:	sub	w10, w21, #0x121
   1b4dc:	cmp	w10, #0x6
   1b4e0:	b.hi	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>  // b.pmore
   1b4e4:	mov	w11, #0x1                   	// #1
   1b4e8:	lsl	w10, w11, w10
   1b4ec:	mov	w11, #0x79                  	// #121
   1b4f0:	tst	w10, w11
   1b4f4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1b4f8:	b	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>
   1b4fc:	add	x1, sp, #0x10
   1b500:	mov	x2, xzr
   1b504:	mov	x3, xzr
   1b508:	stp	xzr, xzr, [sp, #16]
   1b50c:	str	wzr, [sp, #40]
   1b510:	str	xzr, [sp, #32]
   1b514:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1b518:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b51c:	ldr	x8, [sp, #24]
   1b520:	cbnz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b524:	ldr	x8, [sp, #16]
   1b528:	cmp	w21, #0xfff
   1b52c:	b.ne	1b534 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ca0>  // b.any
   1b530:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b534:	cbz	x8, 1bc5c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c8>
   1b538:	ldrh	w9, [x8, #16]
   1b53c:	ldr	x8, [sp, #32]
   1b540:	cmp	w21, #0xfff
   1b544:	b.eq	1b4c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c34>  // b.none
   1b548:	cbnz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b54c:	b	1b4c8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c34>
   1b550:	mov	w21, #0xfff                 	// #4095
   1b554:	cmp	w8, #0x2
   1b558:	b.ne	1b598 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d04>  // b.any
   1b55c:	ldrh	w9, [x0, #16]
   1b560:	mov	x8, xzr
   1b564:	cmp	w9, #0x16
   1b568:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   1b56c:	cmp	w21, #0x39
   1b570:	b.ls	1bc9c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7408>  // b.plast
   1b574:	sub	w10, w21, #0x121
   1b578:	cmp	w10, #0x6
   1b57c:	b.hi	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>  // b.pmore
   1b580:	mov	w11, #0x1                   	// #1
   1b584:	lsl	w10, w11, w10
   1b588:	mov	w11, #0x79                  	// #121
   1b58c:	tst	w10, w11
   1b590:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1b594:	b	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>
   1b598:	add	x1, sp, #0x10
   1b59c:	mov	x2, xzr
   1b5a0:	mov	x3, xzr
   1b5a4:	stp	xzr, xzr, [sp, #16]
   1b5a8:	str	wzr, [sp, #40]
   1b5ac:	str	xzr, [sp, #32]
   1b5b0:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1b5b4:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b5b8:	ldr	x8, [sp, #24]
   1b5bc:	cbnz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b5c0:	ldr	x8, [sp, #16]
   1b5c4:	cmp	w21, #0xfff
   1b5c8:	b.ne	1b5d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d3c>  // b.any
   1b5cc:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b5d0:	cbz	x8, 1bc8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73f8>
   1b5d4:	ldrh	w9, [x8, #16]
   1b5d8:	ldr	x8, [sp, #32]
   1b5dc:	cmp	w21, #0xfff
   1b5e0:	b.eq	1b564 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6cd0>  // b.none
   1b5e4:	cbnz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b5e8:	b	1b564 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6cd0>
   1b5ec:	mov	w21, #0xfff                 	// #4095
   1b5f0:	cmp	w8, #0x2
   1b5f4:	b.ne	1b634 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6da0>  // b.any
   1b5f8:	ldrh	w9, [x0, #16]
   1b5fc:	mov	x8, xzr
   1b600:	cmp	w9, #0x16
   1b604:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   1b608:	cmp	w21, #0x39
   1b60c:	b.ls	1bccc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7438>  // b.plast
   1b610:	sub	w10, w21, #0x121
   1b614:	cmp	w10, #0x6
   1b618:	b.hi	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>  // b.pmore
   1b61c:	mov	w11, #0x1                   	// #1
   1b620:	lsl	w10, w11, w10
   1b624:	mov	w11, #0x79                  	// #121
   1b628:	tst	w10, w11
   1b62c:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1b630:	b	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>
   1b634:	add	x1, sp, #0x10
   1b638:	mov	x2, xzr
   1b63c:	mov	x3, xzr
   1b640:	stp	xzr, xzr, [sp, #16]
   1b644:	str	wzr, [sp, #40]
   1b648:	str	xzr, [sp, #32]
   1b64c:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1b650:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b654:	ldr	x8, [sp, #24]
   1b658:	cbnz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b65c:	ldr	x8, [sp, #16]
   1b660:	cmp	w21, #0xfff
   1b664:	b.ne	1b66c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6dd8>  // b.any
   1b668:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b66c:	cbz	x8, 1bcbc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7428>
   1b670:	ldrh	w9, [x8, #16]
   1b674:	ldr	x8, [sp, #32]
   1b678:	cmp	w21, #0xfff
   1b67c:	b.eq	1b600 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d6c>  // b.none
   1b680:	cbnz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b684:	b	1b600 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d6c>
   1b688:	mov	w21, #0xfff                 	// #4095
   1b68c:	cmp	w8, #0x2
   1b690:	b.ne	1b6d0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e3c>  // b.any
   1b694:	ldrh	w9, [x0, #16]
   1b698:	mov	x8, xzr
   1b69c:	cmp	w9, #0x16
   1b6a0:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   1b6a4:	cmp	w21, #0x39
   1b6a8:	b.ls	1bcfc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7468>  // b.plast
   1b6ac:	sub	w10, w21, #0x121
   1b6b0:	cmp	w10, #0x6
   1b6b4:	b.hi	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>  // b.pmore
   1b6b8:	mov	w11, #0x1                   	// #1
   1b6bc:	lsl	w10, w11, w10
   1b6c0:	mov	w11, #0x79                  	// #121
   1b6c4:	tst	w10, w11
   1b6c8:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1b6cc:	b	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>
   1b6d0:	add	x1, sp, #0x10
   1b6d4:	mov	x2, xzr
   1b6d8:	mov	x3, xzr
   1b6dc:	stp	xzr, xzr, [sp, #16]
   1b6e0:	str	wzr, [sp, #40]
   1b6e4:	str	xzr, [sp, #32]
   1b6e8:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1b6ec:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b6f0:	ldr	x8, [sp, #24]
   1b6f4:	cbnz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b6f8:	ldr	x8, [sp, #16]
   1b6fc:	cmp	w21, #0xfff
   1b700:	b.ne	1b708 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e74>  // b.any
   1b704:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b708:	cbz	x8, 1bcec <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7458>
   1b70c:	ldrh	w9, [x8, #16]
   1b710:	ldr	x8, [sp, #32]
   1b714:	cmp	w21, #0xfff
   1b718:	b.eq	1b69c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e08>  // b.none
   1b71c:	cbnz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b720:	b	1b69c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e08>
   1b724:	mov	w21, #0xfff                 	// #4095
   1b728:	cmp	w8, #0x2
   1b72c:	b.ne	1b780 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6eec>  // b.any
   1b730:	ldrh	w9, [x0, #16]
   1b734:	mov	x8, xzr
   1b738:	cmp	w9, #0x16
   1b73c:	b.eq	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.none
   1b740:	cmp	w21, #0x39
   1b744:	b.ls	1bd2c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7498>  // b.plast
   1b748:	sub	w10, w21, #0x121
   1b74c:	cmp	w10, #0x6
   1b750:	b.hi	1b768 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ed4>  // b.pmore
   1b754:	mov	w11, #0x1                   	// #1
   1b758:	lsl	w10, w11, w10
   1b75c:	mov	w11, #0x79                  	// #121
   1b760:	tst	w10, w11
   1b764:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1b768:	cmp	w9, #0x14
   1b76c:	b.eq	1b778 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ee4>  // b.none
   1b770:	cmp	w9, #0x18
   1b774:	b.ne	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.any
   1b778:	cbnz	x8, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   1b77c:	b	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b780:	add	x1, sp, #0x10
   1b784:	mov	x2, xzr
   1b788:	mov	x3, xzr
   1b78c:	stp	xzr, xzr, [sp, #16]
   1b790:	str	wzr, [sp, #40]
   1b794:	str	xzr, [sp, #32]
   1b798:	bl	0 <_ZNK4llvm6MCExpr21evaluateAsRelocatableERNS_7MCValueEPKNS_11MCAsmLayoutEPKNS_7MCFixupE>
   1b79c:	tbz	w0, #0, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b7a0:	ldr	x8, [sp, #24]
   1b7a4:	cbnz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b7a8:	ldr	x8, [sp, #16]
   1b7ac:	cmp	w21, #0xfff
   1b7b0:	b.ne	1b7b8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f24>  // b.any
   1b7b4:	cbz	x8, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b7b8:	cbz	x8, 1bd1c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7488>
   1b7bc:	ldrh	w9, [x8, #16]
   1b7c0:	ldr	x8, [sp, #32]
   1b7c4:	cmp	w21, #0xfff
   1b7c8:	b.eq	1b738 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ea4>  // b.none
   1b7cc:	cbnz	w9, 1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>
   1b7d0:	b	1b738 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ea4>
   1b7d4:	cmp	w10, #0x3
   1b7d8:	b.eq	1bacc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7238>  // b.none
   1b7dc:	cmp	w10, #0xa
   1b7e0:	b.eq	1bad0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x723c>  // b.none
   1b7e4:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b7e8:	cmp	w10, #0x3
   1b7ec:	b.eq	1bae4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7250>  // b.none
   1b7f0:	cmp	w10, #0xa
   1b7f4:	b.eq	1bae8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7254>  // b.none
   1b7f8:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b7fc:	cmp	w10, #0x3
   1b800:	b.eq	1bb24 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7290>  // b.none
   1b804:	cmp	w10, #0xa
   1b808:	b.eq	1bb28 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7294>  // b.none
   1b80c:	b	1b820 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6f8c>
   1b810:	cmp	w10, #0x3
   1b814:	b.eq	1bb3c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72a8>  // b.none
   1b818:	cmp	w10, #0xa
   1b81c:	b.eq	1bb40 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72ac>  // b.none
   1b820:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1b824:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1b828:	add	x0, x0, #0x0
   1b82c:	add	x1, x1, #0x0
   1b830:	mov	w2, #0x261                 	// #609
   1b834:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1b838:	add	x8, x19, #0x5c
   1b83c:	ldr	w8, [x8]
   1b840:	cmp	w8, #0x3
   1b844:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1b848:	mov	w21, #0x12                  	// #18
   1b84c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b850:	add	x8, x19, #0x5c
   1b854:	ldr	w8, [x8]
   1b858:	cmp	w8, #0x1
   1b85c:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1b860:	mov	w21, #0x14                  	// #20
   1b864:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b868:	add	x8, x19, #0x5c
   1b86c:	ldr	w8, [x8]
   1b870:	cbz	w8, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   1b874:	mov	w21, #0x13                  	// #19
   1b878:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b87c:	add	x8, x19, #0x5c
   1b880:	ldr	w8, [x8]
   1b884:	cbz	w8, 1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>
   1b888:	mov	w21, #0x17                  	// #23
   1b88c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b890:	add	x8, x19, #0x5c
   1b894:	ldr	w8, [x8]
   1b898:	cmp	w8, #0x1
   1b89c:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1b8a0:	mov	w21, #0x10                  	// #16
   1b8a4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b8a8:	add	x8, x19, #0x5c
   1b8ac:	ldr	w8, [x8]
   1b8b0:	cmp	w8, #0x2
   1b8b4:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1b8b8:	mov	w21, #0x11                  	// #17
   1b8bc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b8c0:	add	x8, x19, #0x5c
   1b8c4:	ldr	w8, [x8]
   1b8c8:	cmp	w8, #0x3
   1b8cc:	b.eq	1b8e8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7054>  // b.none
   1b8d0:	mov	w21, #0x16                  	// #22
   1b8d4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b8d8:	add	x8, x19, #0x5c
   1b8dc:	ldr	w8, [x8]
   1b8e0:	cmp	w8, #0x2
   1b8e4:	b.ne	1b8f0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x705c>  // b.any
   1b8e8:	mov	w21, #0x4                   	// #4
   1b8ec:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b8f0:	mov	w21, #0x15                  	// #21
   1b8f4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b8f8:	add	x8, x19, #0x58
   1b8fc:	ldr	w8, [x8]
   1b900:	cmp	w8, #0x7
   1b904:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b908:	mov	w21, #0x79                  	// #121
   1b90c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b910:	add	x8, x19, #0x58
   1b914:	ldr	w8, [x8]
   1b918:	cmp	w8, #0x7
   1b91c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b920:	mov	w21, #0x7a                  	// #122
   1b924:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b928:	add	x8, x19, #0x58
   1b92c:	ldr	w8, [x8]
   1b930:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1b934:	mov	w21, #0x73                  	// #115
   1b938:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b93c:	add	x8, x19, #0x58
   1b940:	ldr	w8, [x8]
   1b944:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1b948:	mov	w21, #0x7e                  	// #126
   1b94c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b950:	add	x8, x19, #0x58
   1b954:	ldr	w8, [x8]
   1b958:	cmp	w8, #0x7
   1b95c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b960:	mov	w21, #0x86                  	// #134
   1b964:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b968:	add	x8, x19, #0x58
   1b96c:	ldr	w8, [x8]
   1b970:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1b974:	mov	w21, #0x80                  	// #128
   1b978:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b97c:	add	x8, x19, #0x58
   1b980:	ldr	w8, [x8]
   1b984:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1b988:	mov	w21, #0x71                  	// #113
   1b98c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b990:	add	x8, x19, #0x58
   1b994:	ldr	w8, [x8]
   1b998:	cmp	w8, #0xb
   1b99c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b9a0:	mov	w21, #0x76                  	// #118
   1b9a4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b9a8:	add	x8, x19, #0x58
   1b9ac:	ldr	w8, [x8]
   1b9b0:	cmp	w8, #0xb
   1b9b4:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b9b8:	mov	w21, #0x82                  	// #130
   1b9bc:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b9c0:	add	x8, x19, #0x58
   1b9c4:	ldr	w8, [x8]
   1b9c8:	cmp	w8, #0x7
   1b9cc:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b9d0:	mov	w21, #0x87                  	// #135
   1b9d4:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b9d8:	add	x8, x19, #0x58
   1b9dc:	ldr	w8, [x8]
   1b9e0:	cmp	w8, #0x7
   1b9e4:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1b9e8:	mov	w21, #0x7b                  	// #123
   1b9ec:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1b9f0:	add	x8, x19, #0x58
   1b9f4:	ldr	w8, [x8]
   1b9f8:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1b9fc:	mov	w21, #0x72                  	// #114
   1ba00:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba04:	add	x8, x19, #0x58
   1ba08:	ldr	w8, [x8]
   1ba0c:	cmp	w8, #0xb
   1ba10:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1ba14:	mov	w21, #0x84                  	// #132
   1ba18:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba1c:	add	x8, x19, #0x58
   1ba20:	ldr	w8, [x8]
   1ba24:	cmp	w8, #0xb
   1ba28:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1ba2c:	mov	w21, #0x77                  	// #119
   1ba30:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba34:	add	x8, x19, #0x58
   1ba38:	ldr	w8, [x8]
   1ba3c:	cmp	w8, #0xb
   1ba40:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1ba44:	mov	w21, #0x83                  	// #131
   1ba48:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba4c:	add	x8, x19, #0x58
   1ba50:	ldr	w8, [x8]
   1ba54:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1ba58:	mov	w21, #0x7f                  	// #127
   1ba5c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba60:	add	x8, x19, #0x58
   1ba64:	ldr	w8, [x8]
   1ba68:	cmp	w8, #0x7
   1ba6c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1ba70:	mov	w21, #0x88                  	// #136
   1ba74:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba78:	add	x8, x19, #0x58
   1ba7c:	ldr	w8, [x8]
   1ba80:	cmp	w8, #0xb
   1ba84:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1ba88:	mov	w21, #0x75                  	// #117
   1ba8c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1ba90:	add	x8, x19, #0x58
   1ba94:	ldr	w8, [x8]
   1ba98:	cmp	w8, #0x7
   1ba9c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1baa0:	b	1badc <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7248>
   1baa4:	add	x8, x19, #0x58
   1baa8:	ldr	w8, [x8]
   1baac:	cmp	w8, #0x7
   1bab0:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1bab4:	b	1baf4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7260>
   1bab8:	add	x8, x19, #0x58
   1babc:	ldr	w8, [x8]
   1bac0:	cmp	w8, #0xb
   1bac4:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1bac8:	b	1bb4c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72b8>
   1bacc:	add	x9, x19, #0x58
   1bad0:	ldr	w8, [x9]
   1bad4:	cmp	w8, #0x7
   1bad8:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1badc:	mov	w21, #0x89                  	// #137
   1bae0:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bae4:	add	x9, x19, #0x58
   1bae8:	ldr	w8, [x9]
   1baec:	cmp	w8, #0x7
   1baf0:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1baf4:	mov	w21, #0x7c                  	// #124
   1baf8:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bafc:	add	x8, x19, #0x58
   1bb00:	ldr	w8, [x8]
   1bb04:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1bb08:	mov	w21, #0x81                  	// #129
   1bb0c:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bb10:	add	x8, x19, #0x58
   1bb14:	ldr	w8, [x8]
   1bb18:	cmp	w8, #0xb
   1bb1c:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1bb20:	b	1bb34 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x72a0>
   1bb24:	add	x9, x19, #0x58
   1bb28:	ldr	w8, [x9]
   1bb2c:	cmp	w8, #0xb
   1bb30:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1bb34:	mov	w21, #0x78                  	// #120
   1bb38:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bb3c:	add	x9, x19, #0x58
   1bb40:	ldr	w8, [x9]
   1bb44:	cmp	w8, #0xb
   1bb48:	b.eq	19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>  // b.none
   1bb4c:	mov	w21, #0x85                  	// #133
   1bb50:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bb54:	add	x8, x19, #0x58
   1bb58:	ldr	w8, [x8]
   1bb5c:	cbz	w8, 19aa4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5210>
   1bb60:	mov	w21, #0x74                  	// #116
   1bb64:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bb68:	ldr	x8, [sp, #32]
   1bb6c:	mov	w9, wzr
   1bb70:	cmp	w19, #0x39
   1bb74:	b.hi	1a80c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f78>  // b.pmore
   1bb78:	mov	w10, w19
   1bb7c:	mov	w11, #0x1                   	// #1
   1bb80:	lsl	x10, x11, x10
   1bb84:	mov	x11, #0x3a000000000         	// #3985729650688
   1bb88:	movk	x11, #0x200, lsl #48
   1bb8c:	tst	x10, x11
   1bb90:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1bb94:	b	1a80c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x5f78>
   1bb98:	ldr	x8, [sp, #32]
   1bb9c:	mov	w9, wzr
   1bba0:	cmp	w19, #0x39
   1bba4:	b.hi	1a8c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x602c>  // b.pmore
   1bba8:	mov	w10, w19
   1bbac:	mov	w11, #0x1                   	// #1
   1bbb0:	lsl	x10, x11, x10
   1bbb4:	mov	x11, #0x3a000000000         	// #3985729650688
   1bbb8:	movk	x11, #0x200, lsl #48
   1bbbc:	tst	x10, x11
   1bbc0:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1bbc4:	b	1a8c0 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x602c>
   1bbc8:	ldr	x8, [sp, #32]
   1bbcc:	mov	w9, wzr
   1bbd0:	cmp	w19, #0x39
   1bbd4:	b.hi	1a974 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60e0>  // b.pmore
   1bbd8:	mov	w10, w19
   1bbdc:	mov	w11, #0x1                   	// #1
   1bbe0:	lsl	x10, x11, x10
   1bbe4:	mov	x11, #0x3a000000000         	// #3985729650688
   1bbe8:	movk	x11, #0x200, lsl #48
   1bbec:	tst	x10, x11
   1bbf0:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1bbf4:	b	1a974 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x60e0>
   1bbf8:	ldr	x8, [sp, #32]
   1bbfc:	mov	w9, wzr
   1bc00:	cmp	w19, #0x39
   1bc04:	b.hi	1a9d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6140>  // b.pmore
   1bc08:	mov	w10, w19
   1bc0c:	mov	w11, #0x1                   	// #1
   1bc10:	lsl	x10, x11, x10
   1bc14:	mov	x11, #0x3a000000000         	// #3985729650688
   1bc18:	movk	x11, #0x200, lsl #48
   1bc1c:	tst	x10, x11
   1bc20:	b.ne	1bc54 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x73c0>  // b.any
   1bc24:	b	1a9d4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6140>
   1bc28:	ldr	x8, [sp, #32]
   1bc2c:	mov	w9, wzr
   1bc30:	cmp	w19, #0x39
   1bc34:	b.hi	1abb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6320>  // b.pmore
   1bc38:	mov	w10, w19
   1bc3c:	mov	w11, #0x1                   	// #1
   1bc40:	lsl	x10, x11, x10
   1bc44:	mov	x11, #0x3a000000000         	// #3985729650688
   1bc48:	movk	x11, #0x200, lsl #48
   1bc4c:	tst	x10, x11
   1bc50:	b.eq	1abb4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6320>  // b.none
   1bc54:	mov	w21, #0x4                   	// #4
   1bc58:	b	1bd8c <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f8>
   1bc5c:	ldr	x8, [sp, #32]
   1bc60:	mov	w9, wzr
   1bc64:	cmp	w21, #0x39
   1bc68:	b.hi	1b4d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c44>  // b.pmore
   1bc6c:	mov	w10, w21
   1bc70:	mov	w11, #0x1                   	// #1
   1bc74:	lsl	x10, x11, x10
   1bc78:	mov	x11, #0x3a000000000         	// #3985729650688
   1bc7c:	movk	x11, #0x200, lsl #48
   1bc80:	tst	x10, x11
   1bc84:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1bc88:	b	1b4d8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6c44>
   1bc8c:	ldr	x8, [sp, #32]
   1bc90:	mov	w9, wzr
   1bc94:	cmp	w21, #0x39
   1bc98:	b.hi	1b574 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ce0>  // b.pmore
   1bc9c:	mov	w10, w21
   1bca0:	mov	w11, #0x1                   	// #1
   1bca4:	lsl	x10, x11, x10
   1bca8:	mov	x11, #0x3a000000000         	// #3985729650688
   1bcac:	movk	x11, #0x200, lsl #48
   1bcb0:	tst	x10, x11
   1bcb4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1bcb8:	b	1b574 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6ce0>
   1bcbc:	ldr	x8, [sp, #32]
   1bcc0:	mov	w9, wzr
   1bcc4:	cmp	w21, #0x39
   1bcc8:	b.hi	1b610 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d7c>  // b.pmore
   1bccc:	mov	w10, w21
   1bcd0:	mov	w11, #0x1                   	// #1
   1bcd4:	lsl	x10, x11, x10
   1bcd8:	mov	x11, #0x3a000000000         	// #3985729650688
   1bcdc:	movk	x11, #0x200, lsl #48
   1bce0:	tst	x10, x11
   1bce4:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1bce8:	b	1b610 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6d7c>
   1bcec:	ldr	x8, [sp, #32]
   1bcf0:	mov	w9, wzr
   1bcf4:	cmp	w21, #0x39
   1bcf8:	b.hi	1b6ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e18>  // b.pmore
   1bcfc:	mov	w10, w21
   1bd00:	mov	w11, #0x1                   	// #1
   1bd04:	lsl	x10, x11, x10
   1bd08:	mov	x11, #0x3a000000000         	// #3985729650688
   1bd0c:	movk	x11, #0x200, lsl #48
   1bd10:	tst	x10, x11
   1bd14:	b.ne	1bd48 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74b4>  // b.any
   1bd18:	b	1b6ac <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6e18>
   1bd1c:	ldr	x8, [sp, #32]
   1bd20:	mov	w9, wzr
   1bd24:	cmp	w21, #0x39
   1bd28:	b.hi	1b748 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6eb4>  // b.pmore
   1bd2c:	mov	w10, w21
   1bd30:	mov	w11, #0x1                   	// #1
   1bd34:	lsl	x10, x11, x10
   1bd38:	mov	x11, #0x3a000000000         	// #3985729650688
   1bd3c:	movk	x11, #0x200, lsl #48
   1bd40:	tst	x10, x11
   1bd44:	b.eq	1b748 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x6eb4>  // b.none
   1bd48:	ldr	x8, [x19]
   1bd4c:	mov	x0, x19
   1bd50:	ldr	x8, [x8, #48]
   1bd54:	blr	x8
   1bd58:	tbz	w0, #0, 1bd88 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74f4>
   1bd5c:	ldr	x8, [x19]
   1bd60:	mov	x0, x19
   1bd64:	ldr	x8, [x8, #56]
   1bd68:	blr	x8
   1bd6c:	sub	w8, w0, #0x2
   1bd70:	cmp	w8, #0x272
   1bd74:	b.hi	1bda4 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7510>  // b.pmore
   1bd78:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1bd7c:	add	x9, x9, #0x0
   1bd80:	ldr	w0, [x9, w8, sxtw #2]
   1bd84:	b	1bda8 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x7514>
   1bd88:	mov	w21, wzr
   1bd8c:	mov	w0, w21
   1bd90:	ldp	x20, x19, [sp, #80]
   1bd94:	ldp	x22, x21, [sp, #64]
   1bd98:	ldp	x29, x30, [sp, #48]
   1bd9c:	add	sp, sp, #0x60
   1bda0:	ret
   1bda4:	mov	w0, wzr
   1bda8:	mov	w1, w20
   1bdac:	bl	14058 <_ZL10isSubclassN12_GLOBAL__N_114MatchClassKindES0_>
   1bdb0:	tst	w0, #0x1
   1bdb4:	mov	w8, #0x4                   	// #4
   1bdb8:	csel	w0, w8, wzr, ne  // ne = any
   1bdbc:	b	1bd90 <_ZL20validateOperandClassRN4llvm18MCParsedAsmOperandEN12_GLOBAL__N_114MatchClassKindE+0x74fc>
   1bdc0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1bdc4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1bdc8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1bdcc:	add	x0, x0, #0x0
   1bdd0:	add	x1, x1, #0x0
   1bdd4:	add	x3, x3, #0x0
   1bdd8:	mov	w2, #0x1ea                 	// #490
   1bddc:	bl	0 <__assert_fail>
   1bde0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1bde4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1bde8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1bdec:	add	x0, x0, #0x0
   1bdf0:	add	x1, x1, #0x0
   1bdf4:	add	x3, x3, #0x0
   1bdf8:	mov	w2, #0x1f4                 	// #500
   1bdfc:	bl	0 <__assert_fail>
   1be00:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1be04:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1be08:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1be0c:	add	x0, x0, #0x0
   1be10:	add	x1, x1, #0x0
   1be14:	add	x3, x3, #0x0
   1be18:	mov	w2, #0x69                  	// #105
   1be1c:	bl	0 <__assert_fail>
   1be20:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1be24:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1be28:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1be2c:	add	x0, x0, #0x0
   1be30:	add	x1, x1, #0x0
   1be34:	add	x3, x3, #0x0
   1be38:	mov	w2, #0x69                  	// #105
   1be3c:	bl	0 <__assert_fail>
   1be40:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1be44:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1be48:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1be4c:	add	x0, x0, #0x0
   1be50:	add	x1, x1, #0x0
   1be54:	add	x3, x3, #0x0
   1be58:	mov	w2, #0x69                  	// #105
   1be5c:	bl	0 <__assert_fail>
   1be60:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1be64:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1be68:	add	x0, x0, #0x0
   1be6c:	add	x1, x1, #0x0
   1be70:	mov	w2, #0x269                 	// #617
   1be74:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>

000000000001be78 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm>:
   1be78:	stp	x29, x30, [sp, #-80]!
   1be7c:	stp	x26, x25, [sp, #16]
   1be80:	stp	x24, x23, [sp, #32]
   1be84:	stp	x22, x21, [sp, #48]
   1be88:	stp	x20, x19, [sp, #64]
   1be8c:	mov	x29, sp
   1be90:	cmp	w1, #0x68d
   1be94:	b.cs	1bfc0 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x148>  // b.hs, b.nlast
   1be98:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1be9c:	mov	w8, #0xd                   	// #13
   1bea0:	add	x9, x9, #0x0
   1bea4:	umaddl	x8, w1, w8, x9
   1bea8:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   1beac:	mov	x19, x3
   1beb0:	mov	x20, x2
   1beb4:	mov	x21, x0
   1beb8:	add	x22, x8, #0x1
   1bebc:	add	x23, x23, #0x0
   1bec0:	b	1becc <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x54>
   1bec4:	cbz	w8, 1bf64 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xec>
   1bec8:	add	x22, x22, #0x2
   1becc:	ldurb	w8, [x22, #-1]
   1bed0:	cmp	w8, #0x2
   1bed4:	b.ne	1bec4 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x4c>  // b.any
   1bed8:	ldrb	w8, [x22]
   1bedc:	cmp	x8, #0xc
   1bee0:	b.cs	1bf80 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x108>  // b.hs, b.nlast
   1bee4:	add	x8, x8, x8, lsl #1
   1bee8:	add	x8, x23, x8
   1beec:	ldrb	w25, [x8, #1]
   1bef0:	ldrb	w24, [x8, #2]
   1bef4:	cmp	w25, w24
   1bef8:	b.eq	1bec8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>  // b.none
   1befc:	ldr	w8, [x20, #8]
   1bf00:	cmp	x8, x25
   1bf04:	b.ls	1bfa0 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x128>  // b.plast
   1bf08:	cmp	x8, x24
   1bf0c:	b.ls	1bfa0 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x128>  // b.plast
   1bf10:	ldr	x26, [x20]
   1bf14:	ldr	x0, [x26, x25, lsl #3]
   1bf18:	ldr	x8, [x0]
   1bf1c:	ldr	x8, [x8, #48]
   1bf20:	blr	x8
   1bf24:	tbz	w0, #0, 1bec8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>
   1bf28:	ldr	x0, [x26, x24, lsl #3]
   1bf2c:	ldr	x8, [x0]
   1bf30:	ldr	x8, [x8, #48]
   1bf34:	blr	x8
   1bf38:	tbz	w0, #0, 1bec8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>
   1bf3c:	ldr	x8, [x21]
   1bf40:	ldr	x1, [x26, x25, lsl #3]
   1bf44:	ldr	x2, [x26, x24, lsl #3]
   1bf48:	mov	x0, x21
   1bf4c:	ldr	x8, [x8, #112]
   1bf50:	blr	x8
   1bf54:	tbnz	w0, #0, 1bec8 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0x50>
   1bf58:	mov	w0, wzr
   1bf5c:	str	x24, [x19]
   1bf60:	b	1bf68 <_ZL30checkAsmTiedOperandConstraintsRKN12_GLOBAL__N_116AArch64AsmParserEjRKN4llvm15SmallVectorImplISt10unique_ptrINS3_18MCParsedAsmOperandESt14default_deleteIS6_EEEERm+0xf0>
   1bf64:	mov	w0, #0x1                   	// #1
   1bf68:	ldp	x20, x19, [sp, #64]
   1bf6c:	ldp	x22, x21, [sp, #48]
   1bf70:	ldp	x24, x23, [sp, #32]
   1bf74:	ldp	x26, x25, [sp, #16]
   1bf78:	ldp	x29, x30, [sp], #80
   1bf7c:	ret
   1bf80:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1bf84:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1bf88:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1bf8c:	add	x0, x0, #0x0
   1bf90:	add	x1, x1, #0x0
   1bf94:	add	x3, x3, #0x0
   1bf98:	mov	w2, #0x30a3                	// #12451
   1bf9c:	bl	0 <__assert_fail>
   1bfa0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1bfa4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1bfa8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1bfac:	add	x0, x0, #0x0
   1bfb0:	add	x1, x1, #0x0
   1bfb4:	add	x3, x3, #0x0
   1bfb8:	mov	w2, #0x99                  	// #153
   1bfbc:	bl	0 <__assert_fail>
   1bfc0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1bfc4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1bfc8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1bfcc:	add	x0, x0, #0x0
   1bfd0:	add	x1, x1, #0x0
   1bfd4:	add	x3, x3, #0x0
   1bfd8:	mov	w2, #0x309b                	// #12443
   1bfdc:	bl	0 <__assert_fail>

000000000001bfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE>:
   1bfe0:	sub	sp, sp, #0xb0
   1bfe4:	stp	x29, x30, [sp, #80]
   1bfe8:	stp	x28, x27, [sp, #96]
   1bfec:	stp	x26, x25, [sp, #112]
   1bff0:	stp	x24, x23, [sp, #128]
   1bff4:	stp	x22, x21, [sp, #144]
   1bff8:	stp	x20, x19, [sp, #160]
   1bffc:	add	x29, sp, #0x50
   1c000:	cmp	w0, #0x68d
   1c004:	b.cs	1e5a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25c0>  // b.hs, b.nlast
   1c008:	mov	w8, #0xd                   	// #13
   1c00c:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1c010:	umull	x8, w0, w8
   1c014:	add	x9, x9, #0x0
   1c018:	ldrb	w8, [x9, x8]
   1c01c:	mov	x20, x1
   1c020:	str	w2, [x1]
   1c024:	cbz	w8, 1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1c028:	mov	w10, w0
   1c02c:	add	x11, x20, #0x20
   1c030:	mov	w12, #0xd                   	// #13
   1c034:	str	x11, [sp, #8]
   1c038:	add	x11, sp, #0x20
   1c03c:	madd	x9, x10, x12, x9
   1c040:	adrp	x23, 0 <LLVMInitializeAArch64AsmParser>
   1c044:	mov	x25, x3
   1c048:	add	x21, x20, #0x10
   1c04c:	add	x26, x20, #0x18
   1c050:	add	x27, x20, #0x1c
   1c054:	add	x28, x3, #0x8
   1c058:	add	x11, x11, #0x8
   1c05c:	add	x22, x9, #0x2
   1c060:	add	x23, x23, #0x0
   1c064:	stp	x11, x3, [sp, #16]
   1c068:	and	w8, w8, #0xff
   1c06c:	sub	w9, w8, #0x1
   1c070:	cmp	w9, #0x67
   1c074:	b.hi	1e138 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2158>  // b.pmore
   1c078:	ldurb	w8, [x22, #-1]
   1c07c:	adr	x10, 1c08c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xac>
   1c080:	ldrh	w11, [x23, x9, lsl #1]
   1c084:	add	x10, x10, x11, lsl #2
   1c088:	br	x10
   1c08c:	ldr	w9, [x28]
   1c090:	cmp	w9, w8
   1c094:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c098:	ldr	x9, [x25]
   1c09c:	ldr	x0, [x9, x8, lsl #3]
   1c0a0:	ldr	x8, [x0]
   1c0a4:	b	1ca88 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xaa8>
   1c0a8:	ldr	w9, [x28]
   1c0ac:	cmp	w9, w8
   1c0b0:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c0b4:	ldr	x9, [x25]
   1c0b8:	ldr	w10, [x27]
   1c0bc:	ldr	x9, [x9, x8, lsl #3]
   1c0c0:	ldr	w8, [x26]
   1c0c4:	ldr	w24, [x9, #92]
   1c0c8:	cmp	w8, w10
   1c0cc:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1c0d0:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1c0d4:	ldr	w9, [x28]
   1c0d8:	cmp	w9, w8
   1c0dc:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c0e0:	ldr	x9, [x25]
   1c0e4:	ldr	x9, [x9, x8, lsl #3]
   1c0e8:	ldr	w8, [x9, #48]
   1c0ec:	cmp	w8, #0x4
   1c0f0:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1c0f4:	ldr	w8, [x26]
   1c0f8:	ldr	w10, [x27]
   1c0fc:	ldr	w24, [x9, #72]
   1c100:	cmp	w8, w10
   1c104:	b.cs	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>  // b.hs, b.nlast
   1c108:	ldr	x9, [x21]
   1c10c:	mov	w10, #0x1                   	// #1
   1c110:	b	1dc48 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c68>
   1c114:	ldr	w9, [x28]
   1c118:	cmp	w9, w8
   1c11c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c120:	ldr	x9, [x25]
   1c124:	ldr	x8, [x9, x8, lsl #3]
   1c128:	ldr	w9, [x8, #48]
   1c12c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c130:	ldr	x1, [x8, #72]
   1c134:	cbz	x1, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c138:	ldr	w8, [x1]
   1c13c:	cmp	w8, #0x1
   1c140:	b.ne	1c180 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a0>  // b.any
   1c144:	ldr	w8, [x26]
   1c148:	ldr	w9, [x27]
   1c14c:	ldr	x10, [x1, #16]
   1c150:	cmp	w8, w9
   1c154:	asr	x24, x10, #2
   1c158:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1c15c:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1c160:	ldr	w9, [x28]
   1c164:	cmp	w9, w8
   1c168:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c16c:	ldr	x9, [x25]
   1c170:	ldr	x8, [x9, x8, lsl #3]
   1c174:	ldr	w9, [x8, #48]
   1c178:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c17c:	ldr	x1, [x8, #72]
   1c180:	mov	x0, x20
   1c184:	bl	1fa94 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   1c188:	ldrb	w8, [x22], #2
   1c18c:	cbnz	w8, 1c068 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1c190:	b	1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1c194:	ldr	w9, [x28]
   1c198:	cmp	w9, w8
   1c19c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c1a0:	ldr	x9, [x25]
   1c1a4:	ldr	x0, [x9, x8, lsl #3]
   1c1a8:	ldr	x8, [x0]
   1c1ac:	ldr	x8, [x8, #56]
   1c1b0:	blr	x8
   1c1b4:	ldr	w8, [x26]
   1c1b8:	ldr	w9, [x27]
   1c1bc:	add	w24, w0, #0xcc
   1c1c0:	cmp	w8, w9
   1c1c4:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c1c8:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c1cc:	ldr	w9, [x28]
   1c1d0:	cmp	w9, w8
   1c1d4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c1d8:	ldr	x9, [x25]
   1c1dc:	ldr	x9, [x9, x8, lsl #3]
   1c1e0:	ldr	w8, [x9, #48]
   1c1e4:	cmp	w8, #0x9
   1c1e8:	b.eq	1d7d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17f0>  // b.none
   1c1ec:	b	1e228 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2248>
   1c1f0:	ldr	w9, [x28]
   1c1f4:	cmp	w9, w8
   1c1f8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c1fc:	ldr	x9, [x25]
   1c200:	ldr	x0, [x9, x8, lsl #3]
   1c204:	ldr	x8, [x0]
   1c208:	ldr	x8, [x8, #56]
   1c20c:	blr	x8
   1c210:	ldr	w8, [x26]
   1c214:	ldr	w9, [x27]
   1c218:	add	w24, w0, #0x5c
   1c21c:	cmp	w8, w9
   1c220:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c224:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c228:	ldr	w8, [x26]
   1c22c:	ldr	w9, [x27]
   1c230:	cmp	w8, w9
   1c234:	b.cs	1de90 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1eb0>  // b.hs, b.nlast
   1c238:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1c23c:	ldr	x9, [x21]
   1c240:	ldr	q0, [x10]
   1c244:	b	1d83c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x185c>
   1c248:	ldr	w9, [x28]
   1c24c:	cmp	w9, w8
   1c250:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c254:	ldr	x9, [x25]
   1c258:	ldr	x8, [x9, x8, lsl #3]
   1c25c:	ldr	w9, [x8, #48]
   1c260:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c264:	ldr	x8, [x8, #72]
   1c268:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c26c:	ldr	w9, [x8]
   1c270:	cmp	w9, #0x1
   1c274:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c278:	ldr	w9, [x8, #20]
   1c27c:	b	1d7a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17c0>
   1c280:	ldr	w9, [x28]
   1c284:	cmp	w9, w8
   1c288:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c28c:	ldr	x9, [x25]
   1c290:	ldr	x24, [x9, x8, lsl #3]
   1c294:	ldr	w8, [x24, #48]
   1c298:	cmp	w8, #0x3
   1c29c:	b.eq	1db44 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b64>  // b.none
   1c2a0:	cmp	w8, #0xa
   1c2a4:	b.ne	1e210 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2230>  // b.any
   1c2a8:	add	x8, x24, #0x48
   1c2ac:	b	1db48 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b68>
   1c2b0:	ldr	w9, [x28]
   1c2b4:	cmp	w9, w8
   1c2b8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c2bc:	ldr	x9, [x25]
   1c2c0:	ldr	x8, [x9, x8, lsl #3]
   1c2c4:	ldr	w9, [x8, #48]
   1c2c8:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c2cc:	ldr	x8, [x8, #72]
   1c2d0:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c2d4:	ldr	w9, [x8]
   1c2d8:	cmp	w9, #0x1
   1c2dc:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c2e0:	ldr	w9, [x26]
   1c2e4:	ldr	w10, [x27]
   1c2e8:	ldrh	w24, [x8, #22]
   1c2ec:	b	1d718 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1738>
   1c2f0:	ldr	w8, [x26]
   1c2f4:	ldr	w9, [x27]
   1c2f8:	cmp	w8, w9
   1c2fc:	b.cs	1deac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ecc>  // b.hs, b.nlast
   1c300:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1c304:	ldr	x9, [x21]
   1c308:	ldr	q0, [x10]
   1c30c:	b	1d83c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x185c>
   1c310:	ldr	w9, [x28]
   1c314:	cmp	w9, w8
   1c318:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c31c:	ldr	x9, [x25]
   1c320:	ldr	x9, [x9, x8, lsl #3]
   1c324:	ldr	w8, [x9, #48]
   1c328:	cmp	w8, #0x4
   1c32c:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1c330:	ldr	w8, [x26]
   1c334:	ldr	w10, [x27]
   1c338:	ldr	w9, [x9, #72]
   1c33c:	cmp	w8, w10
   1c340:	add	w24, w9, #0xdc
   1c344:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c348:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c34c:	ldr	w9, [x28]
   1c350:	cmp	w9, w8
   1c354:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c358:	ldr	x9, [x25]
   1c35c:	ldr	w10, [x27]
   1c360:	ldr	x9, [x9, x8, lsl #3]
   1c364:	ldr	w8, [x26]
   1c368:	ldr	w24, [x9, #88]
   1c36c:	cmp	w8, w10
   1c370:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1c374:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1c378:	ldr	w8, [x26]
   1c37c:	ldr	w9, [x27]
   1c380:	cmp	w8, w9
   1c384:	b.cs	1dec8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ee8>  // b.hs, b.nlast
   1c388:	ldr	x9, [x21]
   1c38c:	mov	w10, #0x2                   	// #2
   1c390:	dup	v0.2d, x10
   1c394:	b	1d83c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x185c>
   1c398:	ldr	w9, [x28]
   1c39c:	cmp	w9, w8
   1c3a0:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c3a4:	ldr	x9, [x25]
   1c3a8:	ldr	x9, [x9, x8, lsl #3]
   1c3ac:	ldr	w8, [x9, #48]
   1c3b0:	cmp	w8, #0x4
   1c3b4:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1c3b8:	ldr	w8, [x26]
   1c3bc:	ldr	w10, [x27]
   1c3c0:	ldr	w9, [x9, #72]
   1c3c4:	cmp	w8, w10
   1c3c8:	add	w24, w9, #0x120
   1c3cc:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c3d0:	ldr	x1, [sp, #8]
   1c3d4:	mov	w3, #0x10                  	// #16
   1c3d8:	mov	x0, x21
   1c3dc:	mov	x2, xzr
   1c3e0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c3e4:	ldr	w8, [x26]
   1c3e8:	b	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>
   1c3ec:	ldr	w9, [x28]
   1c3f0:	cmp	w9, w8
   1c3f4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c3f8:	ldr	x9, [x25]
   1c3fc:	ldr	x8, [x9, x8, lsl #3]
   1c400:	ldr	w9, [x8, #48]
   1c404:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c408:	ldr	x24, [x8, #72]
   1c40c:	cbz	x24, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c410:	ldr	w8, [x24]
   1c414:	cmp	w8, #0x1
   1c418:	b.ne	1d958 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1978>  // b.any
   1c41c:	ldr	x9, [x24, #16]
   1c420:	b	1d438 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1458>
   1c424:	ldr	w9, [x28]
   1c428:	cmp	w9, w8
   1c42c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c430:	ldr	x9, [x25]
   1c434:	ldr	x24, [x9, x8, lsl #3]
   1c438:	ldr	w8, [x24, #48]
   1c43c:	cmp	w8, #0x3
   1c440:	b.eq	1dbc4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1be4>  // b.none
   1c444:	cmp	w8, #0xa
   1c448:	b.ne	1e210 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2230>  // b.any
   1c44c:	add	x8, x24, #0x48
   1c450:	b	1dbc8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1be8>
   1c454:	ldr	w9, [x28]
   1c458:	cmp	w9, w8
   1c45c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c460:	ldr	x9, [x25]
   1c464:	ldr	x8, [x9, x8, lsl #3]
   1c468:	ldr	w9, [x8, #48]
   1c46c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c470:	ldr	x8, [x8, #72]
   1c474:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c478:	ldr	w9, [x8]
   1c47c:	cmp	w9, #0x1
   1c480:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c484:	ldr	x9, [x8, #16]
   1c488:	ldr	w8, [x26]
   1c48c:	ldr	w10, [x27]
   1c490:	mvn	x9, x9
   1c494:	lsr	x24, x9, #48
   1c498:	cmp	w8, w10
   1c49c:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1c4a0:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1c4a4:	ldr	w9, [x28]
   1c4a8:	cmp	w9, w8
   1c4ac:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c4b0:	ldr	x9, [x25]
   1c4b4:	ldr	x9, [x9, x8, lsl #3]
   1c4b8:	ldr	w8, [x9, #48]
   1c4bc:	cmp	w8, #0x4
   1c4c0:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1c4c4:	ldr	w8, [x26]
   1c4c8:	ldr	w10, [x27]
   1c4cc:	ldr	w9, [x9, #72]
   1c4d0:	cmp	w8, w10
   1c4d4:	sub	w24, w9, #0x50
   1c4d8:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c4dc:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c4e0:	ldr	w9, [x28]
   1c4e4:	cmp	w9, w8
   1c4e8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c4ec:	ldr	x9, [x25]
   1c4f0:	ldr	x9, [x9, x8, lsl #3]
   1c4f4:	ldr	w8, [x9, #48]
   1c4f8:	cmp	w8, #0x4
   1c4fc:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1c500:	ldr	w8, [x26]
   1c504:	ldr	w10, [x27]
   1c508:	ldr	w9, [x9, #72]
   1c50c:	cmp	w8, w10
   1c510:	add	w24, w9, #0x11c
   1c514:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c518:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c51c:	ldr	w9, [x28]
   1c520:	cmp	w9, w8
   1c524:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c528:	ldr	x9, [x25]
   1c52c:	ldr	x8, [x9, x8, lsl #3]
   1c530:	ldr	w9, [x8, #48]
   1c534:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c538:	ldr	x8, [x8, #72]
   1c53c:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c540:	ldr	w9, [x8]
   1c544:	cmp	w9, #0x1
   1c548:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c54c:	ldrh	w9, [x8, #18]
   1c550:	b	1d7a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17c0>
   1c554:	ldr	w8, [x26]
   1c558:	ldr	w9, [x27]
   1c55c:	cmp	w8, w9
   1c560:	b.cs	1dee4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f04>  // b.hs, b.nlast
   1c564:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1c568:	ldr	x9, [x21]
   1c56c:	ldr	q0, [x10]
   1c570:	str	q0, [x9, w8, uxtw #4]
   1c574:	ldr	w8, [x26]
   1c578:	ldr	w9, [x27]
   1c57c:	cmp	w8, w9
   1c580:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1c584:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1c588:	ldr	w9, [x28]
   1c58c:	cmp	w9, w8
   1c590:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c594:	ldr	x9, [x25]
   1c598:	ldr	x0, [x9, x8, lsl #3]
   1c59c:	ldr	x8, [x0]
   1c5a0:	ldr	x8, [x8, #56]
   1c5a4:	blr	x8
   1c5a8:	ldr	w8, [x26]
   1c5ac:	ldr	w9, [x27]
   1c5b0:	mov	w24, w0
   1c5b4:	cmp	w8, w9
   1c5b8:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c5bc:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c5c0:	ldr	w9, [x28]
   1c5c4:	cmp	w9, w8
   1c5c8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c5cc:	ldr	x9, [x25]
   1c5d0:	ldr	x8, [x9, x8, lsl #3]
   1c5d4:	ldr	w9, [x8, #48]
   1c5d8:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c5dc:	ldr	x8, [x8, #72]
   1c5e0:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c5e4:	ldr	w9, [x8]
   1c5e8:	cmp	w9, #0x1
   1c5ec:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c5f0:	ldr	x9, [x8, #16]
   1c5f4:	mov	x11, #0x2d83                	// #11651
   1c5f8:	movk	x11, #0x82d8, lsl #16
   1c5fc:	ldr	w8, [x26]
   1c600:	ldr	w10, [x27]
   1c604:	movk	x11, #0xd82d, lsl #32
   1c608:	movk	x11, #0x2d82, lsl #48
   1c60c:	smulh	x9, x9, x11
   1c610:	asr	x11, x9, #4
   1c614:	cmp	w8, w10
   1c618:	add	x24, x11, x9, lsr #63
   1c61c:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1c620:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1c624:	ldr	w9, [x28]
   1c628:	cmp	w9, w8
   1c62c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c630:	ldr	x9, [x25]
   1c634:	ldr	x9, [x9, x8, lsl #3]
   1c638:	ldr	w8, [x9, #48]
   1c63c:	cmp	w8, #0x5
   1c640:	b.eq	1c6c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6e0>  // b.none
   1c644:	b	1e248 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2268>
   1c648:	ldr	w9, [x28]
   1c64c:	cmp	w9, w8
   1c650:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c654:	ldr	x9, [x25]
   1c658:	ldr	x8, [x9, x8, lsl #3]
   1c65c:	ldr	w9, [x8, #48]
   1c660:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c664:	ldr	x24, [x8, #72]
   1c668:	cbz	x24, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c66c:	ldr	w8, [x24]
   1c670:	cmp	w8, #0x1
   1c674:	b.ne	1d958 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1978>  // b.any
   1c678:	ldr	x9, [x24, #16]
   1c67c:	ldr	w8, [x26]
   1c680:	ldr	w10, [x27]
   1c684:	add	x11, x9, #0xf
   1c688:	cmp	x9, #0x0
   1c68c:	csel	x9, x11, x9, lt  // lt = tstop
   1c690:	cmp	w8, w10
   1c694:	asr	x24, x9, #4
   1c698:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1c69c:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1c6a0:	ldr	w9, [x28]
   1c6a4:	cmp	w9, w8
   1c6a8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c6ac:	ldr	x9, [x25]
   1c6b0:	ldr	x9, [x9, x8, lsl #3]
   1c6b4:	ldr	w8, [x9, #48]
   1c6b8:	cmp	w8, #0x2
   1c6bc:	b.ne	1e268 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2288>  // b.any
   1c6c0:	ldr	w8, [x26]
   1c6c4:	ldr	w10, [x27]
   1c6c8:	ldr	w24, [x9, #72]
   1c6cc:	cmp	w8, w10
   1c6d0:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1c6d4:	ldr	x1, [sp, #8]
   1c6d8:	mov	w3, #0x10                  	// #16
   1c6dc:	mov	x0, x21
   1c6e0:	mov	x2, xzr
   1c6e4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1c6e8:	ldr	w8, [x26]
   1c6ec:	b	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>
   1c6f0:	ldr	w9, [x28]
   1c6f4:	cmp	w9, w8
   1c6f8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c6fc:	ldr	x9, [x25]
   1c700:	ldr	x8, [x9, x8, lsl #3]
   1c704:	ldr	w9, [x8, #48]
   1c708:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c70c:	ldr	x8, [x8, #72]
   1c710:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c714:	ldr	w9, [x8]
   1c718:	cmp	w9, #0x1
   1c71c:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c720:	ldr	x9, [x8, #16]
   1c724:	mov	x10, #0x2d83                	// #11651
   1c728:	movk	x10, #0x82d8, lsl #16
   1c72c:	movk	x10, #0xd82d, lsl #32
   1c730:	ldr	w8, [x26]
   1c734:	ldr	w11, [x27]
   1c738:	movk	x10, #0x2d82, lsl #48
   1c73c:	sub	x9, x9, #0x5a
   1c740:	smulh	x9, x9, x10
   1c744:	asr	x10, x9, #5
   1c748:	cmp	w8, w11
   1c74c:	add	x24, x10, x9, lsr #63
   1c750:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1c754:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1c758:	ldr	w9, [x28]
   1c75c:	cmp	w9, w8
   1c760:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c764:	ldr	x9, [x25]
   1c768:	ldr	x8, [x9, x8, lsl #3]
   1c76c:	ldr	w9, [x8, #48]
   1c770:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c774:	ldr	x24, [x8, #72]
   1c778:	cbz	x24, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c77c:	ldr	w8, [x24]
   1c780:	cmp	w8, #0x1
   1c784:	b.ne	1d958 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1978>  // b.any
   1c788:	ldr	w8, [x26]
   1c78c:	ldr	w9, [x27]
   1c790:	ldr	x24, [x24, #16]
   1c794:	b	1dc38 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c58>
   1c798:	ldr	w9, [x28]
   1c79c:	cmp	w9, w8
   1c7a0:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c7a4:	ldr	x9, [x25]
   1c7a8:	ldr	x9, [x9, x8, lsl #3]
   1c7ac:	ldr	w8, [x9, #48]
   1c7b0:	cmp	w8, #0x3
   1c7b4:	b.eq	1dc74 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c94>  // b.none
   1c7b8:	cmp	w8, #0xa
   1c7bc:	b.ne	1e210 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2230>  // b.any
   1c7c0:	ldr	w8, [x9, #72]
   1c7c4:	mov	w10, #0x8                   	// #8
   1c7c8:	b	1d0ac <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x10cc>
   1c7cc:	ldr	w9, [x28]
   1c7d0:	cmp	w9, w8
   1c7d4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c7d8:	ldr	x9, [x25]
   1c7dc:	ldr	x24, [x9, x8, lsl #3]
   1c7e0:	mov	x0, x24
   1c7e4:	bl	1f194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   1c7e8:	cbz	w0, 1d750 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1770>
   1c7ec:	mov	x0, x24
   1c7f0:	bl	1f494 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1c7f4:	cbz	w0, 1d750 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1770>
   1c7f8:	b	1e288 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22a8>
   1c7fc:	ldr	w9, [x28]
   1c800:	cmp	w9, w8
   1c804:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c808:	ldr	x9, [x25]
   1c80c:	ldr	x9, [x9, x8, lsl #3]
   1c810:	ldr	w8, [x9, #48]
   1c814:	cmp	w8, #0xe
   1c818:	b.ne	1e2a8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22c8>  // b.any
   1c81c:	ldr	w8, [x26]
   1c820:	ldr	w10, [x27]
   1c824:	ldr	w24, [x9, #84]
   1c828:	cmp	w8, w10
   1c82c:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1c830:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1c834:	ldr	w9, [x28]
   1c838:	cmp	w9, w8
   1c83c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c840:	ldr	x9, [x25]
   1c844:	ldr	x24, [x9, x8, lsl #3]
   1c848:	mov	x0, x24
   1c84c:	bl	1f194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>
   1c850:	cbz	w0, 1c860 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x880>
   1c854:	mov	x0, x24
   1c858:	bl	1f794 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   1c85c:	cbnz	w0, 1e2c8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x22e8>
   1c860:	mov	x0, x24
   1c864:	bl	1f794 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>
   1c868:	b	1d758 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1778>
   1c86c:	ldr	w9, [x28]
   1c870:	cmp	w9, w8
   1c874:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c878:	ldr	x9, [x25]
   1c87c:	ldr	x8, [x9, x8, lsl #3]
   1c880:	ldr	w9, [x8, #48]
   1c884:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c888:	ldr	x9, [x8, #72]
   1c88c:	cbz	x9, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c890:	ldr	w8, [x9]
   1c894:	cmp	w8, #0x1
   1c898:	b.eq	1d9a4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x19c4>  // b.none
   1c89c:	b	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>
   1c8a0:	ldr	w9, [x28]
   1c8a4:	cmp	w9, w8
   1c8a8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c8ac:	ldr	x9, [x25]
   1c8b0:	ldr	x0, [x9, x8, lsl #3]
   1c8b4:	ldr	x8, [x0]
   1c8b8:	ldr	x8, [x8, #56]
   1c8bc:	blr	x8
   1c8c0:	ldr	w8, [x26]
   1c8c4:	ldr	w9, [x27]
   1c8c8:	add	w24, w0, #0xac
   1c8cc:	cmp	w8, w9
   1c8d0:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c8d4:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c8d8:	ldr	w9, [x28]
   1c8dc:	cmp	w9, w8
   1c8e0:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c8e4:	ldr	x9, [x25]
   1c8e8:	add	x0, sp, #0x20
   1c8ec:	ldr	x24, [x9, x8, lsl #3]
   1c8f0:	mov	x1, x24
   1c8f4:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1c8f8:	ldrb	w8, [sp, #48]
   1c8fc:	cbz	w8, 1d044 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1064>
   1c900:	ldr	w8, [x26]
   1c904:	ldr	w9, [x27]
   1c908:	ldr	x24, [sp, #32]
   1c90c:	cmp	w8, w9
   1c910:	b.cs	1de58 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e78>  // b.hs, b.nlast
   1c914:	ldr	x9, [x21]
   1c918:	mov	w10, #0x2                   	// #2
   1c91c:	add	x8, x9, w8, uxtw #4
   1c920:	stp	x10, x24, [x8]
   1c924:	ldr	w8, [x26]
   1c928:	ldr	w9, [x27]
   1c92c:	cmp	w8, w9
   1c930:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1c934:	add	w8, w8, #0x1
   1c938:	str	w8, [x26]
   1c93c:	ldr	w24, [sp, #40]
   1c940:	cmp	w8, w9
   1c944:	b.cs	1de74 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e94>  // b.hs, b.nlast
   1c948:	ldr	x9, [x21]
   1c94c:	mov	w10, #0x2                   	// #2
   1c950:	add	x8, x9, w8, uxtw #4
   1c954:	stp	x10, x24, [x8]
   1c958:	ldr	w8, [x26]
   1c95c:	ldr	w9, [x27]
   1c960:	cmp	w8, w9
   1c964:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1c968:	add	w8, w8, #0x1
   1c96c:	str	w8, [x26]
   1c970:	strb	wzr, [sp, #48]
   1c974:	ldrb	w8, [x22], #2
   1c978:	cbnz	w8, 1c068 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1c97c:	b	1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1c980:	ldr	w9, [x28]
   1c984:	cmp	w9, w8
   1c988:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c98c:	ldr	x9, [x25]
   1c990:	ldr	x0, [x9, x8, lsl #3]
   1c994:	ldr	x8, [x0]
   1c998:	ldr	x8, [x8, #56]
   1c99c:	blr	x8
   1c9a0:	ldr	w8, [x26]
   1c9a4:	ldr	w9, [x27]
   1c9a8:	add	w24, w0, #0x7c
   1c9ac:	cmp	w8, w9
   1c9b0:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1c9b4:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1c9b8:	ldr	w9, [x28]
   1c9bc:	cmp	w9, w8
   1c9c0:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c9c4:	ldr	x9, [x25]
   1c9c8:	ldr	x8, [x9, x8, lsl #3]
   1c9cc:	ldr	w9, [x8, #48]
   1c9d0:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1c9d4:	ldr	x8, [x8, #72]
   1c9d8:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1c9dc:	ldr	w9, [x8]
   1c9e0:	cmp	w9, #0x1
   1c9e4:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1c9e8:	ldr	x9, [x8, #16]
   1c9ec:	b	1d938 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1958>
   1c9f0:	ldr	w9, [x28]
   1c9f4:	cmp	w9, w8
   1c9f8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1c9fc:	ldr	x9, [x25]
   1ca00:	ldr	x9, [x9, x8, lsl #3]
   1ca04:	ldr	w8, [x9, #48]
   1ca08:	cmp	w8, #0x4
   1ca0c:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1ca10:	ldr	w8, [x26]
   1ca14:	ldr	w10, [x27]
   1ca18:	ldr	w9, [x9, #72]
   1ca1c:	cmp	w8, w10
   1ca20:	add	w24, w9, #0x140
   1ca24:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1ca28:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1ca2c:	ldr	w9, [x28]
   1ca30:	cmp	w9, w8
   1ca34:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1ca38:	ldr	x9, [x25]
   1ca3c:	ldr	x24, [x9, x8, lsl #3]
   1ca40:	ldr	x8, [x24]
   1ca44:	mov	x0, x24
   1ca48:	ldr	x8, [x8, #56]
   1ca4c:	blr	x8
   1ca50:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1ca54:	ldr	x8, [x8]
   1ca58:	mov	w9, w0
   1ca5c:	lsr	x9, x9, #3
   1ca60:	ldrh	w10, [x8, #1238]
   1ca64:	cmp	w9, w10
   1ca68:	b.cs	1e2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2308>  // b.hs, b.nlast
   1ca6c:	ldr	x8, [x8, #1224]
   1ca70:	ldrb	w8, [x8, x9]
   1ca74:	and	w9, w0, #0x7
   1ca78:	lsr	w8, w8, w9
   1ca7c:	tbz	w8, #0, 1e2e8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2308>
   1ca80:	ldr	x8, [x24]
   1ca84:	mov	x0, x24
   1ca88:	ldr	x8, [x8, #56]
   1ca8c:	blr	x8
   1ca90:	ldr	w8, [x26]
   1ca94:	ldr	w9, [x27]
   1ca98:	mov	w24, w0
   1ca9c:	cmp	w8, w9
   1caa0:	b.cs	1cf64 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xf84>  // b.hs, b.nlast
   1caa4:	ldr	x9, [x21]
   1caa8:	mov	w10, #0x1                   	// #1
   1caac:	b	1d5d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15f4>
   1cab0:	ldr	w9, [x28]
   1cab4:	cmp	w9, w8
   1cab8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cabc:	ldr	x9, [x25]
   1cac0:	ldr	x9, [x9, x8, lsl #3]
   1cac4:	ldr	w8, [x9, #48]
   1cac8:	cmp	w8, #0x3
   1cacc:	b.eq	1dc80 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ca0>  // b.none
   1cad0:	cmp	w8, #0xa
   1cad4:	b.ne	1e210 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2230>  // b.any
   1cad8:	add	x8, x9, #0x48
   1cadc:	add	x9, x9, #0x4c
   1cae0:	b	1dc88 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ca8>
   1cae4:	ldr	w8, [x26]
   1cae8:	ldr	w9, [x27]
   1caec:	cmp	w8, w9
   1caf0:	b.cs	1df00 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f20>  // b.hs, b.nlast
   1caf4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1caf8:	ldr	x9, [x21]
   1cafc:	ldr	q0, [x10]
   1cb00:	str	q0, [x9, w8, uxtw #4]
   1cb04:	ldr	w8, [x26]
   1cb08:	ldr	w9, [x27]
   1cb0c:	cmp	w8, w9
   1cb10:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1cb14:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1cb18:	ldr	w9, [x28]
   1cb1c:	cmp	w9, w8
   1cb20:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cb24:	ldr	x9, [x25]
   1cb28:	ldr	x9, [x9, x8, lsl #3]
   1cb2c:	ldr	w8, [x9, #48]
   1cb30:	cmp	w8, #0x4
   1cb34:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1cb38:	ldr	w8, [x26]
   1cb3c:	ldr	w10, [x27]
   1cb40:	ldr	w9, [x9, #72]
   1cb44:	cmp	w8, w10
   1cb48:	add	w24, w9, #0x13c
   1cb4c:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1cb50:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1cb54:	ldr	w9, [x28]
   1cb58:	cmp	w9, w8
   1cb5c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cb60:	ldr	x9, [x25]
   1cb64:	add	x0, sp, #0x20
   1cb68:	ldr	x1, [x9, x8, lsl #3]
   1cb6c:	bl	1ebe4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   1cb70:	ldrb	w8, [sp, #48]
   1cb74:	cbz	w8, 1e308 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2328>
   1cb78:	ldr	w8, [x26]
   1cb7c:	ldr	w9, [x27]
   1cb80:	ldr	x10, [sp, #32]
   1cb84:	cmp	w8, w9
   1cb88:	neg	x24, x10
   1cb8c:	b.cs	1df1c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f3c>  // b.hs, b.nlast
   1cb90:	ldr	x9, [x21]
   1cb94:	mov	w10, #0x2                   	// #2
   1cb98:	add	x8, x9, w8, uxtw #4
   1cb9c:	stp	x10, x24, [x8]
   1cba0:	ldr	w8, [x26]
   1cba4:	ldr	w9, [x27]
   1cba8:	cmp	w8, w9
   1cbac:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1cbb0:	add	w8, w8, #0x1
   1cbb4:	str	w8, [x26]
   1cbb8:	ldr	w24, [sp, #40]
   1cbbc:	b	1d5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15e4>
   1cbc0:	ldr	w8, [x26]
   1cbc4:	ldr	w9, [x27]
   1cbc8:	cmp	w8, w9
   1cbcc:	b.cs	1df38 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f58>  // b.hs, b.nlast
   1cbd0:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1cbd4:	ldr	x9, [x21]
   1cbd8:	ldr	q0, [x10]
   1cbdc:	str	q0, [x9, w8, uxtw #4]
   1cbe0:	ldr	w8, [x26]
   1cbe4:	ldr	w9, [x27]
   1cbe8:	cmp	w8, w9
   1cbec:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1cbf0:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1cbf4:	ldr	w9, [x28]
   1cbf8:	cmp	w9, w8
   1cbfc:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cc00:	ldr	x9, [x25]
   1cc04:	ldr	x8, [x9, x8, lsl #3]
   1cc08:	ldr	w9, [x8, #48]
   1cc0c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1cc10:	ldr	x8, [x8, #72]
   1cc14:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1cc18:	ldr	w9, [x8]
   1cc1c:	cmp	w9, #0x1
   1cc20:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1cc24:	ldr	x9, [x8, #16]
   1cc28:	ldr	w8, [x26]
   1cc2c:	ldr	w10, [x27]
   1cc30:	mov	x11, #0x5555555555555555    	// #6148914691236517205
   1cc34:	movk	x11, #0x5556
   1cc38:	smulh	x9, x9, x11
   1cc3c:	cmp	w8, w10
   1cc40:	add	x24, x9, x9, lsr #63
   1cc44:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1cc48:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1cc4c:	ldr	w9, [x28]
   1cc50:	cmp	w9, w8
   1cc54:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cc58:	ldr	x9, [x25]
   1cc5c:	ldr	x9, [x9, x8, lsl #3]
   1cc60:	ldr	w8, [x9, #48]
   1cc64:	cmp	w8, #0xd
   1cc68:	b.eq	1d7d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17f0>  // b.none
   1cc6c:	b	1e320 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2340>
   1cc70:	ldr	w8, [x26]
   1cc74:	ldr	w9, [x27]
   1cc78:	cmp	w8, w9
   1cc7c:	b.cs	1df54 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f74>  // b.hs, b.nlast
   1cc80:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1cc84:	ldr	x9, [x21]
   1cc88:	ldr	q0, [x10]
   1cc8c:	b	1d83c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x185c>
   1cc90:	ldr	w9, [x28]
   1cc94:	cmp	w9, w8
   1cc98:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cc9c:	ldr	x9, [x25]
   1cca0:	ldr	x8, [x9, x8, lsl #3]
   1cca4:	ldr	w9, [x8, #48]
   1cca8:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1ccac:	ldr	x8, [x8, #72]
   1ccb0:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1ccb4:	ldr	w9, [x8]
   1ccb8:	cmp	w9, #0x1
   1ccbc:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1ccc0:	ldr	x9, [x8, #16]
   1ccc4:	ldr	w8, [x26]
   1ccc8:	ldr	w10, [x27]
   1cccc:	add	x11, x9, #0xf
   1ccd0:	cmp	x9, #0x0
   1ccd4:	csel	x9, x11, x9, lt  // lt = tstop
   1ccd8:	cmp	w8, w10
   1ccdc:	asr	x24, x9, #4
   1cce0:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1cce4:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1cce8:	ldr	w8, [x26]
   1ccec:	ldr	w9, [x27]
   1ccf0:	cmp	w8, w9
   1ccf4:	b.cs	1df70 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1f90>  // b.hs, b.nlast
   1ccf8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1ccfc:	ldr	x9, [x21]
   1cd00:	ldr	q0, [x10]
   1cd04:	b	1d83c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x185c>
   1cd08:	cmp	w8, #0xc
   1cd0c:	b.cs	1e340 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2360>  // b.hs, b.nlast
   1cd10:	cmp	w8, #0xb
   1cd14:	b.eq	1dc68 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c88>  // b.none
   1cd18:	adrp	x9, 0 <LLVMInitializeAArch64AsmParser>
   1cd1c:	add	x8, x8, x8, lsl #1
   1cd20:	add	x9, x9, #0x0
   1cd24:	ldrb	w24, [x9, x8]
   1cd28:	ldr	w8, [x26]
   1cd2c:	cmp	w8, w24
   1cd30:	b.ls	1e360 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2380>  // b.plast
   1cd34:	ldr	w9, [x20, #28]
   1cd38:	ldr	x25, [x20, #16]
   1cd3c:	cmp	w8, w9
   1cd40:	mov	x9, x25
   1cd44:	b.cs	1e0f8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2118>  // b.hs, b.nlast
   1cd48:	ldr	q0, [x25, x24, lsl #4]
   1cd4c:	str	q0, [x9, w8, uxtw #4]
   1cd50:	ldr	w8, [x26]
   1cd54:	ldr	w9, [x27]
   1cd58:	cmp	w8, w9
   1cd5c:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1cd60:	ldr	x25, [sp, #24]
   1cd64:	b	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>
   1cd68:	ldr	w8, [x26]
   1cd6c:	ldr	w9, [x27]
   1cd70:	cmp	w8, w9
   1cd74:	b.cs	1df8c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fac>  // b.hs, b.nlast
   1cd78:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1cd7c:	ldr	x9, [x21]
   1cd80:	ldr	q0, [x10]
   1cd84:	str	q0, [x9, w8, uxtw #4]
   1cd88:	ldr	w8, [x26]
   1cd8c:	ldr	w9, [x27]
   1cd90:	cmp	w8, w9
   1cd94:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1cd98:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1cd9c:	ldr	w9, [x28]
   1cda0:	cmp	w9, w8
   1cda4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cda8:	ldr	x9, [x25]
   1cdac:	ldr	x8, [x9, x8, lsl #3]
   1cdb0:	ldr	w9, [x8, #48]
   1cdb4:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1cdb8:	ldr	x8, [x8, #72]
   1cdbc:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1cdc0:	ldr	w9, [x8]
   1cdc4:	cmp	w9, #0x1
   1cdc8:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1cdcc:	ldr	w8, [x8, #16]
   1cdd0:	str	xzr, [sp, #32]
   1cdd4:	mvn	w8, w8
   1cdd8:	and	x0, x8, #0xff
   1cddc:	b	1d3bc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x13dc>
   1cde0:	ldr	w9, [x28]
   1cde4:	cmp	w9, w8
   1cde8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cdec:	ldr	x9, [x25]
   1cdf0:	ldr	x8, [x9, x8, lsl #3]
   1cdf4:	ldr	w9, [x8, #48]
   1cdf8:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1cdfc:	ldr	x8, [x8, #72]
   1ce00:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1ce04:	ldr	w9, [x8]
   1ce08:	cmp	w9, #0x1
   1ce0c:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1ce10:	ldr	x9, [x8, #16]
   1ce14:	b	1ce88 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xea8>
   1ce18:	ldr	w9, [x28]
   1ce1c:	cmp	w9, w8
   1ce20:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1ce24:	ldr	x9, [x25]
   1ce28:	ldr	x9, [x9, x8, lsl #3]
   1ce2c:	ldr	w8, [x9, #48]
   1ce30:	cmp	w8, #0x4
   1ce34:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1ce38:	ldr	w8, [x26]
   1ce3c:	ldr	w10, [x27]
   1ce40:	ldr	w9, [x9, #72]
   1ce44:	cmp	w8, w10
   1ce48:	add	w24, w9, #0x160
   1ce4c:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1ce50:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1ce54:	ldr	w9, [x28]
   1ce58:	cmp	w9, w8
   1ce5c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1ce60:	ldr	x9, [x25]
   1ce64:	ldr	x8, [x9, x8, lsl #3]
   1ce68:	ldr	w9, [x8, #48]
   1ce6c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1ce70:	ldr	x24, [x8, #72]
   1ce74:	cbz	x24, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1ce78:	ldr	w8, [x24]
   1ce7c:	cmp	w8, #0x1
   1ce80:	b.ne	1d958 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1978>  // b.any
   1ce84:	ldr	x9, [x24, #16]
   1ce88:	ldr	w8, [x26]
   1ce8c:	ldr	w10, [x27]
   1ce90:	add	x11, x9, #0x3
   1ce94:	cmp	x9, #0x0
   1ce98:	csel	x9, x11, x9, lt  // lt = tstop
   1ce9c:	cmp	w8, w10
   1cea0:	asr	x24, x9, #2
   1cea4:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1cea8:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1ceac:	ldr	w9, [x28]
   1ceb0:	cmp	w9, w8
   1ceb4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1ceb8:	ldr	x9, [x25]
   1cebc:	ldr	x8, [x9, x8, lsl #3]
   1cec0:	ldr	w9, [x8, #48]
   1cec4:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1cec8:	ldr	x8, [x8, #72]
   1cecc:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1ced0:	ldr	w9, [x8]
   1ced4:	cmp	w9, #0x1
   1ced8:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1cedc:	ldr	w9, [x26]
   1cee0:	ldr	w10, [x27]
   1cee4:	ldrh	w24, [x8, #20]
   1cee8:	b	1d718 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1738>
   1ceec:	ldr	w9, [x28]
   1cef0:	cmp	w9, w8
   1cef4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1cef8:	ldr	x9, [x25]
   1cefc:	ldr	x24, [x9, x8, lsl #3]
   1cf00:	ldr	x8, [x24]
   1cf04:	mov	x0, x24
   1cf08:	ldr	x8, [x8, #56]
   1cf0c:	blr	x8
   1cf10:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1cf14:	ldr	x8, [x8]
   1cf18:	mov	w9, w0
   1cf1c:	lsr	x9, x9, #3
   1cf20:	ldrh	w10, [x8, #1238]
   1cf24:	cmp	w9, w10
   1cf28:	b.cs	1e380 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23a0>  // b.hs, b.nlast
   1cf2c:	ldr	x8, [x8, #1224]
   1cf30:	ldrb	w8, [x8, x9]
   1cf34:	and	w9, w0, #0x7
   1cf38:	lsr	w8, w8, w9
   1cf3c:	tbz	w8, #0, 1e380 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23a0>
   1cf40:	ldr	x8, [x24]
   1cf44:	mov	x0, x24
   1cf48:	ldr	x8, [x8, #56]
   1cf4c:	blr	x8
   1cf50:	ldr	w8, [x26]
   1cf54:	ldr	w9, [x27]
   1cf58:	sub	w24, w0, #0x50
   1cf5c:	cmp	w8, w9
   1cf60:	b.cc	1caa4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xac4>  // b.lo, b.ul, b.last
   1cf64:	ldr	x1, [sp, #8]
   1cf68:	mov	w3, #0x10                  	// #16
   1cf6c:	mov	x0, x21
   1cf70:	mov	x2, xzr
   1cf74:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1cf78:	ldr	w8, [x26]
   1cf7c:	b	1caa4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xac4>
   1cf80:	ldr	w8, [x26]
   1cf84:	ldr	w9, [x27]
   1cf88:	cmp	w8, w9
   1cf8c:	b.cs	1dfa8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fc8>  // b.hs, b.nlast
   1cf90:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1cf94:	ldr	x9, [x21]
   1cf98:	ldr	q0, [x10]
   1cf9c:	str	q0, [x9, w8, uxtw #4]
   1cfa0:	ldr	w8, [x26]
   1cfa4:	ldr	w9, [x27]
   1cfa8:	cmp	w8, w9
   1cfac:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1cfb0:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1cfb4:	ldr	w8, [x26]
   1cfb8:	ldr	w9, [x27]
   1cfbc:	cmp	w8, w9
   1cfc0:	b.cs	1dfc4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1fe4>  // b.hs, b.nlast
   1cfc4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1cfc8:	ldr	x9, [x21]
   1cfcc:	ldr	q0, [x10]
   1cfd0:	str	q0, [x9, w8, uxtw #4]
   1cfd4:	ldr	w8, [x26]
   1cfd8:	ldr	w9, [x27]
   1cfdc:	cmp	w8, w9
   1cfe0:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1cfe4:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1cfe8:	ldr	w8, [x26]
   1cfec:	ldr	w9, [x27]
   1cff0:	cmp	w8, w9
   1cff4:	b.cs	1dd20 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d40>  // b.hs, b.nlast
   1cff8:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1cffc:	ldr	x9, [x21]
   1d000:	ldr	q0, [x10]
   1d004:	str	q0, [x9, w8, uxtw #4]
   1d008:	ldr	w8, [x26]
   1d00c:	ldr	w9, [x27]
   1d010:	cmp	w8, w9
   1d014:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d018:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d01c:	ldr	w9, [x28]
   1d020:	cmp	w9, w8
   1d024:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d028:	ldr	x9, [x25]
   1d02c:	add	x0, sp, #0x20
   1d030:	ldr	x24, [x9, x8, lsl #3]
   1d034:	mov	x1, x24
   1d038:	bl	1ebe4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>
   1d03c:	ldrb	w8, [sp, #48]
   1d040:	cbnz	w8, 1c900 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x920>
   1d044:	ldr	w8, [x24, #48]
   1d048:	cbz	w8, 1dd08 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d28>
   1d04c:	cmp	w8, #0x1
   1d050:	b.ne	1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>  // b.any
   1d054:	ldr	x1, [x24, #72]
   1d058:	mov	x0, x20
   1d05c:	bl	1fa94 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   1d060:	ldr	w8, [x24, #48]
   1d064:	cmp	w8, #0x1
   1d068:	b.ne	1e3a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23c0>  // b.any
   1d06c:	ldr	w8, [x26]
   1d070:	ldr	w9, [x27]
   1d074:	ldr	w24, [x24, #80]
   1d078:	b	1d5c4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15e4>
   1d07c:	ldr	w9, [x28]
   1d080:	cmp	w9, w8
   1d084:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d088:	ldr	x9, [x25]
   1d08c:	ldr	x9, [x9, x8, lsl #3]
   1d090:	ldr	w8, [x9, #48]
   1d094:	cmp	w8, #0x3
   1d098:	b.eq	1dcc0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ce0>  // b.none
   1d09c:	cmp	w8, #0xa
   1d0a0:	b.ne	1e210 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2230>  // b.any
   1d0a4:	ldr	w8, [x9, #72]
   1d0a8:	mov	w10, #0x7                   	// #7
   1d0ac:	cmp	w8, #0x0
   1d0b0:	csel	w8, w10, w8, eq  // eq = none
   1d0b4:	add	x9, x9, #0x4c
   1d0b8:	b	1dcd4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1cf4>
   1d0bc:	ldr	w9, [x28]
   1d0c0:	cmp	w9, w8
   1d0c4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d0c8:	ldr	x9, [x25]
   1d0cc:	ldr	x8, [x9, x8, lsl #3]
   1d0d0:	ldr	w9, [x8, #48]
   1d0d4:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d0d8:	ldr	x8, [x8, #72]
   1d0dc:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d0e0:	ldr	w9, [x8]
   1d0e4:	cmp	w9, #0x1
   1d0e8:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d0ec:	ldr	x0, [x8, #16]
   1d0f0:	str	xzr, [sp, #32]
   1d0f4:	b	1d5a8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15c8>
   1d0f8:	ldr	w9, [x28]
   1d0fc:	cmp	w9, w8
   1d100:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d104:	ldr	x9, [x25]
   1d108:	ldr	x8, [x9, x8, lsl #3]
   1d10c:	ldr	w9, [x8, #48]
   1d110:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d114:	ldr	x1, [x8, #72]
   1d118:	cbz	x1, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d11c:	ldr	w8, [x1]
   1d120:	cmp	w8, #0x1
   1d124:	b.ne	1c180 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a0>  // b.any
   1d128:	ldr	w8, [x26]
   1d12c:	ldr	w9, [x27]
   1d130:	ldr	x10, [x1, #16]
   1d134:	cmp	w8, w9
   1d138:	asr	x24, x10, #12
   1d13c:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1d140:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1d144:	ldr	w9, [x28]
   1d148:	cmp	w9, w8
   1d14c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d150:	ldr	x9, [x25]
   1d154:	ldr	x8, [x9, x8, lsl #3]
   1d158:	ldr	w9, [x8, #48]
   1d15c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d160:	ldr	x8, [x8, #72]
   1d164:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d168:	ldr	w9, [x8]
   1d16c:	cmp	w9, #0x1
   1d170:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d174:	ldrh	w0, [x8, #16]
   1d178:	str	xzr, [sp, #32]
   1d17c:	b	1d1c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11e0>
   1d180:	ldr	w9, [x28]
   1d184:	cmp	w9, w8
   1d188:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d18c:	ldr	x9, [x25]
   1d190:	ldr	x8, [x9, x8, lsl #3]
   1d194:	ldr	w9, [x8, #48]
   1d198:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d19c:	ldr	x8, [x8, #72]
   1d1a0:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d1a4:	ldr	w9, [x8]
   1d1a8:	cmp	w9, #0x1
   1d1ac:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d1b0:	ldr	w8, [x8, #16]
   1d1b4:	str	xzr, [sp, #32]
   1d1b8:	mvn	w8, w8
   1d1bc:	and	x0, x8, #0xffff
   1d1c0:	add	x2, sp, #0x20
   1d1c4:	mov	w1, #0x10                  	// #16
   1d1c8:	b	1d5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>
   1d1cc:	ldr	w8, [x26]
   1d1d0:	ldr	w9, [x27]
   1d1d4:	cmp	w8, w9
   1d1d8:	b.cs	1dfe0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2000>  // b.hs, b.nlast
   1d1dc:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1d1e0:	ldr	x9, [x21]
   1d1e4:	ldr	q0, [x10]
   1d1e8:	str	q0, [x9, w8, uxtw #4]
   1d1ec:	ldr	w8, [x26]
   1d1f0:	ldr	w9, [x27]
   1d1f4:	cmp	w8, w9
   1d1f8:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d1fc:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d200:	mov	x9, x28
   1d204:	ldr	w9, [x28]
   1d208:	mov	x19, x28
   1d20c:	cmp	w9, w8
   1d210:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d214:	ldr	x9, [x25]
   1d218:	mov	x28, x23
   1d21c:	mov	x23, x20
   1d220:	ldr	x20, [x9, x8, lsl #3]
   1d224:	ldr	w8, [x20, #48]
   1d228:	cmp	w8, #0xb
   1d22c:	b.ne	1e3c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x23e0>  // b.any
   1d230:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1d234:	ldr	x8, [x20, #72]
   1d238:	mov	w9, #0x40                  	// #64
   1d23c:	mov	x25, x0
   1d240:	stur	w9, [x29, #-8]
   1d244:	stur	x8, [x29, #-16]
   1d248:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1d24c:	mov	x24, x0
   1d250:	sub	x2, x29, #0x10
   1d254:	cmp	x0, x25
   1d258:	b.eq	1dd3c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d5c>  // b.none
   1d25c:	ldr	x0, [sp, #16]
   1d260:	mov	x1, x25
   1d264:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1d268:	b	1dd48 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d68>
   1d26c:	ldr	w9, [x28]
   1d270:	cmp	w9, w8
   1d274:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d278:	ldr	x9, [x25]
   1d27c:	ldr	x0, [x9, x8, lsl #3]
   1d280:	ldr	x8, [x0]
   1d284:	ldr	x8, [x8, #56]
   1d288:	blr	x8
   1d28c:	ldr	w8, [x26]
   1d290:	ldr	w9, [x27]
   1d294:	add	w24, w0, #0xec
   1d298:	cmp	w8, w9
   1d29c:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1d2a0:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1d2a4:	ldr	w9, [x28]
   1d2a8:	cmp	w9, w8
   1d2ac:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d2b0:	ldr	x9, [x25]
   1d2b4:	ldr	x8, [x9, x8, lsl #3]
   1d2b8:	ldr	w9, [x8, #48]
   1d2bc:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d2c0:	ldr	x8, [x8, #72]
   1d2c4:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d2c8:	ldr	w9, [x8]
   1d2cc:	cmp	w9, #0x1
   1d2d0:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d2d4:	ldr	x9, [x8, #16]
   1d2d8:	ldr	w8, [x26]
   1d2dc:	ldr	w10, [x27]
   1d2e0:	mov	x24, x20
   1d2e4:	tst	x9, #0xff000000000000
   1d2e8:	cset	w11, ne  // ne = any
   1d2ec:	tst	x9, #0xff0000000000
   1d2f0:	cset	w12, ne  // ne = any
   1d2f4:	tst	x9, #0xff00000000
   1d2f8:	cset	w13, ne  // ne = any
   1d2fc:	tst	x9, #0xff000000
   1d300:	cset	w14, ne  // ne = any
   1d304:	tst	x9, #0xff0000
   1d308:	bfi	x13, x12, #1, #1
   1d30c:	cset	w12, ne  // ne = any
   1d310:	tst	x9, #0xff00
   1d314:	cset	w15, ne  // ne = any
   1d318:	tst	x9, #0xff
   1d31c:	lsr	x9, x9, #56
   1d320:	bfi	x12, x14, #1, #1
   1d324:	cset	w14, ne  // ne = any
   1d328:	cmp	x9, #0x0
   1d32c:	bfi	x14, x15, #1, #1
   1d330:	cset	w9, ne  // ne = any
   1d334:	bfi	x14, x12, #2, #2
   1d338:	bfi	x11, x9, #1, #1
   1d33c:	bfi	x14, x13, #4, #2
   1d340:	cmp	w8, w10
   1d344:	orr	x20, x14, x11, lsl #6
   1d348:	b.cs	1dffc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x201c>  // b.hs, b.nlast
   1d34c:	ldr	x9, [x21]
   1d350:	mov	w10, #0x2                   	// #2
   1d354:	add	x8, x9, w8, uxtw #4
   1d358:	stp	x10, x20, [x8]
   1d35c:	ldr	w8, [x26]
   1d360:	ldr	w9, [x27]
   1d364:	cmp	w8, w9
   1d368:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1d36c:	add	w8, w8, #0x1
   1d370:	str	w8, [x26]
   1d374:	mov	x20, x24
   1d378:	ldrb	w8, [x22], #2
   1d37c:	cbnz	w8, 1c068 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1d380:	b	1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1d384:	ldr	w9, [x28]
   1d388:	cmp	w9, w8
   1d38c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d390:	ldr	x9, [x25]
   1d394:	ldr	x8, [x9, x8, lsl #3]
   1d398:	ldr	w9, [x8, #48]
   1d39c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d3a0:	ldr	x8, [x8, #72]
   1d3a4:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d3a8:	ldr	w9, [x8]
   1d3ac:	cmp	w9, #0x1
   1d3b0:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d3b4:	ldrb	w0, [x8, #16]
   1d3b8:	str	xzr, [sp, #32]
   1d3bc:	add	x2, sp, #0x20
   1d3c0:	mov	w1, #0x8                   	// #8
   1d3c4:	b	1d5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>
   1d3c8:	ldr	w9, [x28]
   1d3cc:	cmp	w9, w8
   1d3d0:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d3d4:	ldr	x9, [x25]
   1d3d8:	ldr	x9, [x9, x8, lsl #3]
   1d3dc:	ldr	w8, [x9, #48]
   1d3e0:	cmp	w8, #0x4
   1d3e4:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1d3e8:	ldr	w8, [x26]
   1d3ec:	ldr	w10, [x27]
   1d3f0:	ldr	w9, [x9, #72]
   1d3f4:	cmp	w8, w10
   1d3f8:	add	w24, w9, #0xbc
   1d3fc:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1d400:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1d404:	ldr	w9, [x28]
   1d408:	cmp	w9, w8
   1d40c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d410:	ldr	x9, [x25]
   1d414:	ldr	x8, [x9, x8, lsl #3]
   1d418:	ldr	w9, [x8, #48]
   1d41c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d420:	ldr	x8, [x8, #72]
   1d424:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d428:	ldr	w9, [x8]
   1d42c:	cmp	w9, #0x1
   1d430:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d434:	ldr	x9, [x8, #16]
   1d438:	ldr	w8, [x26]
   1d43c:	ldr	w10, [x27]
   1d440:	add	x11, x9, #0x7
   1d444:	cmp	x9, #0x0
   1d448:	csel	x9, x11, x9, lt  // lt = tstop
   1d44c:	cmp	w8, w10
   1d450:	asr	x24, x9, #3
   1d454:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1d458:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1d45c:	ldr	w8, [x26]
   1d460:	ldr	w9, [x27]
   1d464:	cmp	w8, w9
   1d468:	b.cs	1e018 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2038>  // b.hs, b.nlast
   1d46c:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1d470:	ldr	x9, [x21]
   1d474:	ldr	q0, [x10]
   1d478:	str	q0, [x9, w8, uxtw #4]
   1d47c:	ldr	w8, [x26]
   1d480:	ldr	w9, [x27]
   1d484:	cmp	w8, w9
   1d488:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d48c:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d490:	ldr	w9, [x28]
   1d494:	cmp	w9, w8
   1d498:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d49c:	ldr	x9, [x25]
   1d4a0:	ldr	x9, [x9, x8, lsl #3]
   1d4a4:	ldr	w8, [x9, #48]
   1d4a8:	cmp	w8, #0xc
   1d4ac:	b.eq	1d7d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x17f0>  // b.none
   1d4b0:	b	1e3e0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2400>
   1d4b4:	ldr	w9, [x28]
   1d4b8:	cmp	w9, w8
   1d4bc:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d4c0:	ldr	x9, [x25]
   1d4c4:	ldr	x8, [x9, x8, lsl #3]
   1d4c8:	ldr	w9, [x8, #48]
   1d4cc:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d4d0:	ldr	x8, [x8, #72]
   1d4d4:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d4d8:	ldr	w9, [x8]
   1d4dc:	cmp	w9, #0x1
   1d4e0:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d4e4:	ldr	w0, [x8, #16]
   1d4e8:	str	xzr, [sp, #32]
   1d4ec:	b	1d52c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x154c>
   1d4f0:	ldr	w9, [x28]
   1d4f4:	cmp	w9, w8
   1d4f8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d4fc:	ldr	x9, [x25]
   1d500:	ldr	x8, [x9, x8, lsl #3]
   1d504:	ldr	w9, [x8, #48]
   1d508:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d50c:	ldr	x8, [x8, #72]
   1d510:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d514:	ldr	w9, [x8]
   1d518:	cmp	w9, #0x1
   1d51c:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d520:	ldr	w8, [x8, #16]
   1d524:	str	xzr, [sp, #32]
   1d528:	mvn	w0, w8
   1d52c:	add	x2, sp, #0x20
   1d530:	mov	w1, #0x20                  	// #32
   1d534:	b	1d5b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15d0>
   1d538:	ldr	w8, [x26]
   1d53c:	ldr	w9, [x27]
   1d540:	cmp	w8, w9
   1d544:	b.cs	1e034 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2054>  // b.hs, b.nlast
   1d548:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1d54c:	ldr	x9, [x21]
   1d550:	ldr	q0, [x10]
   1d554:	str	q0, [x9, w8, uxtw #4]
   1d558:	ldr	w8, [x26]
   1d55c:	ldr	w9, [x27]
   1d560:	cmp	w8, w9
   1d564:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d568:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d56c:	ldr	w9, [x28]
   1d570:	cmp	w9, w8
   1d574:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d578:	ldr	x9, [x25]
   1d57c:	ldr	x8, [x9, x8, lsl #3]
   1d580:	ldr	w9, [x8, #48]
   1d584:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d588:	ldr	x8, [x8, #72]
   1d58c:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d590:	ldr	w9, [x8]
   1d594:	cmp	w9, #0x1
   1d598:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d59c:	ldr	x8, [x8, #16]
   1d5a0:	str	xzr, [sp, #32]
   1d5a4:	mvn	x0, x8
   1d5a8:	add	x2, sp, #0x20
   1d5ac:	mov	w1, #0x40                  	// #64
   1d5b0:	bl	1ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>
   1d5b4:	tbz	w0, #0, 1e400 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2420>
   1d5b8:	ldr	w8, [x26]
   1d5bc:	ldr	w9, [x27]
   1d5c0:	ldr	x24, [sp, #32]
   1d5c4:	cmp	w8, w9
   1d5c8:	b.cs	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>  // b.hs, b.nlast
   1d5cc:	ldr	x9, [x21]
   1d5d0:	mov	w10, #0x2                   	// #2
   1d5d4:	add	x8, x9, w8, uxtw #4
   1d5d8:	stp	x10, x24, [x8]
   1d5dc:	ldr	w8, [x26]
   1d5e0:	ldr	w9, [x27]
   1d5e4:	cmp	w8, w9
   1d5e8:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d5ec:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d5f0:	ldr	w8, [x26]
   1d5f4:	ldr	w9, [x27]
   1d5f8:	cmp	w8, w9
   1d5fc:	b.cs	1e050 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2070>  // b.hs, b.nlast
   1d600:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1d604:	ldr	x9, [x21]
   1d608:	ldr	q0, [x10]
   1d60c:	str	q0, [x9, w8, uxtw #4]
   1d610:	ldr	w8, [x26]
   1d614:	ldr	w9, [x27]
   1d618:	cmp	w8, w9
   1d61c:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d620:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d624:	ldr	w9, [x28]
   1d628:	cmp	w9, w8
   1d62c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d630:	ldr	x9, [x25]
   1d634:	ldr	x9, [x9, x8, lsl #3]
   1d638:	ldr	w8, [x9, #48]
   1d63c:	cmp	w8, #0x4
   1d640:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1d644:	ldr	w8, [x26]
   1d648:	ldr	w10, [x27]
   1d64c:	ldr	w9, [x9, #72]
   1d650:	cmp	w8, w10
   1d654:	add	w24, w9, #0x15c
   1d658:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1d65c:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1d660:	ldr	w9, [x28]
   1d664:	cmp	w9, w8
   1d668:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d66c:	ldr	x9, [x25]
   1d670:	ldr	x8, [x9, x8, lsl #3]
   1d674:	ldr	w9, [x8, #48]
   1d678:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d67c:	ldr	x8, [x8, #72]
   1d680:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d684:	ldr	w9, [x8]
   1d688:	cmp	w9, #0x1
   1d68c:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d690:	ldr	w9, [x26]
   1d694:	ldr	w10, [x27]
   1d698:	ldrh	w24, [x8, #16]
   1d69c:	b	1d718 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1738>
   1d6a0:	ldr	w9, [x28]
   1d6a4:	cmp	w9, w8
   1d6a8:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d6ac:	ldr	x9, [x25]
   1d6b0:	ldr	x9, [x9, x8, lsl #3]
   1d6b4:	ldr	w8, [x9, #48]
   1d6b8:	cmp	w8, #0x4
   1d6bc:	b.ne	1e1f0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2210>  // b.any
   1d6c0:	ldr	w8, [x26]
   1d6c4:	ldr	w10, [x27]
   1d6c8:	ldr	w9, [x9, #72]
   1d6cc:	cmp	w8, w10
   1d6d0:	add	w24, w9, #0xfc
   1d6d4:	b.cc	1c108 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x128>  // b.lo, b.ul, b.last
   1d6d8:	b	1c3d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3f0>
   1d6dc:	ldr	w9, [x28]
   1d6e0:	cmp	w9, w8
   1d6e4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d6e8:	ldr	x9, [x25]
   1d6ec:	ldr	x8, [x9, x8, lsl #3]
   1d6f0:	ldr	w9, [x8, #48]
   1d6f4:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d6f8:	ldr	x8, [x8, #72]
   1d6fc:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d700:	ldr	w9, [x8]
   1d704:	cmp	w9, #0x1
   1d708:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d70c:	ldr	w9, [x26]
   1d710:	ldr	w10, [x27]
   1d714:	ldrh	w24, [x8, #18]
   1d718:	cmp	w9, w10
   1d71c:	b.cs	1de04 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e24>  // b.hs, b.nlast
   1d720:	ldr	x8, [x21]
   1d724:	mov	w10, #0x2                   	// #2
   1d728:	add	x8, x8, w9, uxtw #4
   1d72c:	b	1dc4c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c6c>
   1d730:	ldr	w9, [x28]
   1d734:	cmp	w9, w8
   1d738:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d73c:	ldr	x9, [x25]
   1d740:	ldr	x24, [x9, x8, lsl #3]
   1d744:	mov	x0, x24
   1d748:	bl	1e8e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>
   1d74c:	cbnz	w0, 1e420 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2440>
   1d750:	mov	x0, x24
   1d754:	bl	1f494 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1d758:	ldr	w8, [x26]
   1d75c:	ldr	w9, [x27]
   1d760:	cmp	w0, #0x0
   1d764:	cset	w24, eq  // eq = none
   1d768:	b	1dc38 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c58>
   1d76c:	ldr	w9, [x28]
   1d770:	cmp	w9, w8
   1d774:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d778:	ldr	x9, [x25]
   1d77c:	ldr	x8, [x9, x8, lsl #3]
   1d780:	ldr	w9, [x8, #48]
   1d784:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d788:	ldr	x8, [x8, #72]
   1d78c:	cbz	x8, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d790:	ldr	w9, [x8]
   1d794:	cmp	w9, #0x1
   1d798:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d79c:	ldr	w9, [x8, #16]
   1d7a0:	ldr	w8, [x26]
   1d7a4:	ldr	w10, [x27]
   1d7a8:	mvn	w9, w9
   1d7ac:	and	x24, x9, #0xffff
   1d7b0:	cmp	w8, w10
   1d7b4:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1d7b8:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1d7bc:	ldr	w9, [x28]
   1d7c0:	cmp	w9, w8
   1d7c4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d7c8:	ldr	x9, [x25]
   1d7cc:	ldr	x9, [x9, x8, lsl #3]
   1d7d0:	ldr	w8, [x26]
   1d7d4:	ldr	w10, [x27]
   1d7d8:	ldr	w24, [x9, #84]
   1d7dc:	cmp	w8, w10
   1d7e0:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1d7e4:	ldr	x1, [sp, #8]
   1d7e8:	mov	w3, #0x10                  	// #16
   1d7ec:	mov	x0, x21
   1d7f0:	mov	x2, xzr
   1d7f4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1d7f8:	ldr	w8, [x26]
   1d7fc:	b	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>
   1d800:	ldr	w8, [x26]
   1d804:	ldr	w9, [x27]
   1d808:	cmp	w8, w9
   1d80c:	b.cs	1e06c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x208c>  // b.hs, b.nlast
   1d810:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1d814:	ldr	x9, [x21]
   1d818:	ldr	q0, [x10]
   1d81c:	b	1d83c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x185c>
   1d820:	ldr	w8, [x26]
   1d824:	ldr	w9, [x27]
   1d828:	cmp	w8, w9
   1d82c:	b.cs	1e088 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20a8>  // b.hs, b.nlast
   1d830:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1d834:	ldr	x9, [x21]
   1d838:	ldr	q0, [x10]
   1d83c:	str	q0, [x9, w8, uxtw #4]
   1d840:	ldr	w8, [x26]
   1d844:	ldr	w9, [x27]
   1d848:	cmp	w8, w9
   1d84c:	b.cc	1dc60 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c80>  // b.lo, b.ul, b.last
   1d850:	b	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>
   1d854:	ldr	w9, [x28]
   1d858:	cmp	w9, w8
   1d85c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d860:	ldr	x9, [x25]
   1d864:	mov	x19, x28
   1d868:	mov	x28, x23
   1d86c:	ldr	x24, [x9, x8, lsl #3]
   1d870:	ldr	x8, [x24]
   1d874:	mov	x0, x24
   1d878:	ldr	x8, [x8, #56]
   1d87c:	blr	x8
   1d880:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1d884:	ldr	x8, [x8]
   1d888:	mov	w9, w0
   1d88c:	lsr	x9, x9, #3
   1d890:	ldrh	w10, [x8, #566]
   1d894:	cmp	w9, w10
   1d898:	b.cs	1e440 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2460>  // b.hs, b.nlast
   1d89c:	ldr	x8, [x8, #552]
   1d8a0:	ldrb	w8, [x8, x9]
   1d8a4:	and	w9, w0, #0x7
   1d8a8:	lsr	w8, w8, w9
   1d8ac:	tbz	w8, #0, 1e440 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2460>
   1d8b0:	ldr	x8, [x24, #104]
   1d8b4:	ldr	x25, [x8, #24]
   1d8b8:	ldr	w8, [x25, #32]
   1d8bc:	cmp	w8, #0x6
   1d8c0:	b.ls	1e480 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x24a0>  // b.plast
   1d8c4:	ldr	x8, [x24]
   1d8c8:	mov	x23, x20
   1d8cc:	ldr	x20, [x25, #24]
   1d8d0:	mov	x0, x24
   1d8d4:	ldr	x8, [x8, #56]
   1d8d8:	blr	x8
   1d8dc:	ldr	w8, [x25, #8]
   1d8e0:	cmp	w8, w0
   1d8e4:	b.ls	1e4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x24c0>  // b.plast
   1d8e8:	ldr	x8, [x25, #104]
   1d8ec:	ldrh	w9, [x8, w0, uxtw #1]
   1d8f0:	ldrh	w8, [x20, #212]
   1d8f4:	cmp	w8, w9
   1d8f8:	b.ls	1e4c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x24e0>  // b.plast
   1d8fc:	ldr	x10, [x20, #192]
   1d900:	b	1dab4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ad4>
   1d904:	ldr	w9, [x28]
   1d908:	cmp	w9, w8
   1d90c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d910:	ldr	x9, [x25]
   1d914:	ldr	x8, [x9, x8, lsl #3]
   1d918:	ldr	w9, [x8, #48]
   1d91c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d920:	ldr	x24, [x8, #72]
   1d924:	cbz	x24, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d928:	ldr	w8, [x24]
   1d92c:	cmp	w8, #0x1
   1d930:	b.ne	1d958 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1978>  // b.any
   1d934:	ldr	x9, [x24, #16]
   1d938:	ldr	w8, [x26]
   1d93c:	ldr	w10, [x27]
   1d940:	cmp	x9, #0x0
   1d944:	cinc	x9, x9, lt  // lt = tstop
   1d948:	asr	x24, x9, #1
   1d94c:	cmp	w8, w10
   1d950:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1d954:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1d958:	ldr	w8, [x26]
   1d95c:	ldr	w9, [x27]
   1d960:	cmp	w8, w9
   1d964:	b.cs	1de20 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e40>  // b.hs, b.nlast
   1d968:	ldr	x9, [x21]
   1d96c:	mov	w10, #0x4                   	// #4
   1d970:	b	1dc48 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c68>
   1d974:	ldr	w9, [x28]
   1d978:	cmp	w9, w8
   1d97c:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d980:	ldr	x9, [x25]
   1d984:	ldr	x8, [x9, x8, lsl #3]
   1d988:	ldr	w9, [x8, #48]
   1d98c:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d990:	ldr	x9, [x8, #72]
   1d994:	cbz	x9, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d998:	ldr	w8, [x9]
   1d99c:	cmp	w8, #0x1
   1d9a0:	b.ne	1e1d0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21f0>  // b.any
   1d9a4:	ldr	w8, [x26]
   1d9a8:	ldr	w10, [x27]
   1d9ac:	ldr	x24, [x9, #16]
   1d9b0:	cmp	w8, w10
   1d9b4:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1d9b8:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1d9bc:	ldr	w9, [x28]
   1d9c0:	cmp	w9, w8
   1d9c4:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1d9c8:	ldr	x9, [x25]
   1d9cc:	ldr	x8, [x9, x8, lsl #3]
   1d9d0:	ldr	w9, [x8, #48]
   1d9d4:	cbnz	w9, 1e190 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21b0>
   1d9d8:	ldr	x1, [x8, #72]
   1d9dc:	cbz	x1, 1e1b0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x21d0>
   1d9e0:	ldr	w8, [x1]
   1d9e4:	cmp	w8, #0x1
   1d9e8:	b.ne	1c180 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1a0>  // b.any
   1d9ec:	ldr	w8, [x26]
   1d9f0:	ldr	w9, [x27]
   1d9f4:	ldr	x10, [x1, #16]
   1d9f8:	cmp	w8, w9
   1d9fc:	asr	x24, x10, #2
   1da00:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1da04:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1da08:	ldr	w9, [x28]
   1da0c:	cmp	w9, w8
   1da10:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1da14:	ldr	x9, [x25]
   1da18:	mov	x19, x28
   1da1c:	mov	x28, x23
   1da20:	ldr	x24, [x9, x8, lsl #3]
   1da24:	ldr	x8, [x24]
   1da28:	mov	x0, x24
   1da2c:	ldr	x8, [x8, #56]
   1da30:	blr	x8
   1da34:	adrp	x8, 0 <_ZN4llvm24AArch64MCRegisterClassesE>
   1da38:	ldr	x8, [x8]
   1da3c:	mov	w9, w0
   1da40:	lsr	x9, x9, #3
   1da44:	ldrh	w10, [x8, #214]
   1da48:	cmp	w9, w10
   1da4c:	b.cs	1e460 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2480>  // b.hs, b.nlast
   1da50:	ldr	x8, [x8, #200]
   1da54:	ldrb	w8, [x8, x9]
   1da58:	and	w9, w0, #0x7
   1da5c:	lsr	w8, w8, w9
   1da60:	tbz	w8, #0, 1e460 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2480>
   1da64:	ldr	x8, [x24, #104]
   1da68:	ldr	x25, [x8, #24]
   1da6c:	ldr	w8, [x25, #32]
   1da70:	cmp	w8, #0x11
   1da74:	b.ls	1e480 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x24a0>  // b.plast
   1da78:	ldr	x8, [x24]
   1da7c:	mov	x23, x20
   1da80:	ldr	x20, [x25, #24]
   1da84:	mov	x0, x24
   1da88:	ldr	x8, [x8, #56]
   1da8c:	blr	x8
   1da90:	ldr	w8, [x25, #8]
   1da94:	cmp	w8, w0
   1da98:	b.ls	1e4a0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x24c0>  // b.plast
   1da9c:	ldr	x8, [x25, #104]
   1daa0:	ldrh	w9, [x8, w0, uxtw #1]
   1daa4:	ldrh	w8, [x20, #564]
   1daa8:	cmp	w8, w9
   1daac:	b.ls	1e4c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x24e0>  // b.plast
   1dab0:	ldr	x10, [x20, #544]
   1dab4:	ldr	w8, [x26]
   1dab8:	ldr	w11, [x27]
   1dabc:	ldr	x25, [sp, #24]
   1dac0:	ldrh	w24, [x10, x9, lsl #1]
   1dac4:	cmp	w8, w11
   1dac8:	b.cs	1de3c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e5c>  // b.hs, b.nlast
   1dacc:	ldr	x9, [x21]
   1dad0:	mov	w10, #0x1                   	// #1
   1dad4:	add	x8, x9, w8, uxtw #4
   1dad8:	stp	x10, x24, [x8]
   1dadc:	ldr	w8, [x26]
   1dae0:	ldr	w9, [x27]
   1dae4:	cmp	w8, w9
   1dae8:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1daec:	add	w8, w8, #0x1
   1daf0:	mov	x20, x23
   1daf4:	str	w8, [x26]
   1daf8:	mov	x23, x28
   1dafc:	mov	x28, x19
   1db00:	ldrb	w8, [x22], #2
   1db04:	cbnz	w8, 1c068 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1db08:	b	1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1db0c:	ldr	w9, [x28]
   1db10:	cmp	w9, w8
   1db14:	b.ls	1e170 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2190>  // b.plast
   1db18:	ldr	x9, [x25]
   1db1c:	ldr	x9, [x9, x8, lsl #3]
   1db20:	ldr	w8, [x9, #48]
   1db24:	cmp	w8, #0x8
   1db28:	b.ne	1e4e0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2500>  // b.any
   1db2c:	ldr	w8, [x26]
   1db30:	ldr	w10, [x27]
   1db34:	ldr	w24, [x9, #72]
   1db38:	cmp	w8, w10
   1db3c:	b.cc	1dc40 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c60>  // b.lo, b.ul, b.last
   1db40:	b	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>
   1db44:	add	x8, x24, #0x58
   1db48:	ldr	w9, [x8]
   1db4c:	ldr	w8, [x26]
   1db50:	ldr	w10, [x27]
   1db54:	sub	w9, w9, #0xb
   1db58:	cmp	w9, #0x2
   1db5c:	cset	w25, cc  // cc = lo, ul, last
   1db60:	cmp	w8, w10
   1db64:	b.cs	1e0a4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20c4>  // b.hs, b.nlast
   1db68:	ldr	x9, [x21]
   1db6c:	mov	w10, #0x2                   	// #2
   1db70:	add	x8, x9, w8, uxtw #4
   1db74:	stp	x10, x25, [x8]
   1db78:	ldr	w8, [x26]
   1db7c:	ldr	w9, [x27]
   1db80:	cmp	w8, w9
   1db84:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1db88:	add	w8, w8, #0x1
   1db8c:	str	w8, [x26]
   1db90:	ldr	w10, [x24, #48]
   1db94:	ldr	x25, [sp, #24]
   1db98:	cmp	w10, #0x3
   1db9c:	b.eq	1dbb0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1bd0>  // b.none
   1dba0:	cmp	w10, #0xa
   1dba4:	b.ne	1e500 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2520>  // b.any
   1dba8:	add	x10, x24, #0x4c
   1dbac:	b	1dbb4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1bd4>
   1dbb0:	add	x10, x24, #0x5c
   1dbb4:	ldr	w10, [x10]
   1dbb8:	cmp	w10, #0x0
   1dbbc:	cset	w24, ne  // ne = any
   1dbc0:	b	1dc38 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c58>
   1dbc4:	add	x8, x24, #0x58
   1dbc8:	ldr	w9, [x8]
   1dbcc:	ldr	w8, [x26]
   1dbd0:	ldr	w10, [x27]
   1dbd4:	sub	w9, w9, #0xb
   1dbd8:	cmp	w9, #0x2
   1dbdc:	cset	w25, cc  // cc = lo, ul, last
   1dbe0:	cmp	w8, w10
   1dbe4:	b.cs	1e0c0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20e0>  // b.hs, b.nlast
   1dbe8:	ldr	x9, [x21]
   1dbec:	mov	w10, #0x2                   	// #2
   1dbf0:	add	x8, x9, w8, uxtw #4
   1dbf4:	stp	x10, x25, [x8]
   1dbf8:	ldr	w8, [x26]
   1dbfc:	ldr	w9, [x27]
   1dc00:	cmp	w8, w9
   1dc04:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1dc08:	add	w8, w8, #0x1
   1dc0c:	str	w8, [x26]
   1dc10:	ldr	w10, [x24, #48]
   1dc14:	ldr	x25, [sp, #24]
   1dc18:	cmp	w10, #0x3
   1dc1c:	b.eq	1dc30 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c50>  // b.none
   1dc20:	cmp	w10, #0xa
   1dc24:	b.ne	1e518 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2538>  // b.any
   1dc28:	add	x10, x24, #0x50
   1dc2c:	b	1dc34 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c54>
   1dc30:	add	x10, x24, #0x60
   1dc34:	ldrb	w24, [x10]
   1dc38:	cmp	w8, w9
   1dc3c:	b.cs	1d7e4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1804>  // b.hs, b.nlast
   1dc40:	ldr	x9, [x21]
   1dc44:	mov	w10, #0x2                   	// #2
   1dc48:	add	x8, x9, w8, uxtw #4
   1dc4c:	stp	x10, x24, [x8]
   1dc50:	ldr	w8, [x26]
   1dc54:	ldr	w9, [x27]
   1dc58:	cmp	w8, w9
   1dc5c:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1dc60:	add	w8, w8, #0x1
   1dc64:	str	w8, [x26]
   1dc68:	ldrb	w8, [x22], #2
   1dc6c:	cbnz	w8, 1c068 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1dc70:	b	1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1dc74:	ldr	w8, [x9, #88]
   1dc78:	mov	w10, #0x8                   	// #8
   1dc7c:	b	1dcc8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1ce8>
   1dc80:	add	x8, x9, #0x58
   1dc84:	add	x9, x9, #0x5c
   1dc88:	ldr	w9, [x9]
   1dc8c:	cmp	w9, #0x40
   1dc90:	b.cs	1e530 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2550>  // b.hs, b.nlast
   1dc94:	ldr	w10, [x8]
   1dc98:	cmp	w10, #0x5
   1dc9c:	b.cs	1e550 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2570>  // b.hs, b.nlast
   1dca0:	ldr	w8, [x26]
   1dca4:	ldr	w11, [x27]
   1dca8:	and	x9, x9, #0x3f
   1dcac:	lsl	w10, w10, #6
   1dcb0:	cmp	w8, w11
   1dcb4:	orr	x24, x10, x9
   1dcb8:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1dcbc:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1dcc0:	ldr	w8, [x9, #88]
   1dcc4:	mov	w10, #0x7                   	// #7
   1dcc8:	cmp	w8, #0x0
   1dccc:	csel	w8, w10, w8, eq  // eq = none
   1dcd0:	add	x9, x9, #0x5c
   1dcd4:	ldr	w9, [x9]
   1dcd8:	cmp	w9, #0x8
   1dcdc:	b.cs	1e568 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2588>  // b.hs, b.nlast
   1dce0:	sub	w10, w8, #0x5
   1dce4:	cmp	w10, #0x8
   1dce8:	b.cs	1e588 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x25a8>  // b.hs, b.nlast
   1dcec:	ldr	w8, [x26]
   1dcf0:	ldr	w11, [x27]
   1dcf4:	lsl	w10, w10, #3
   1dcf8:	cmp	w8, w11
   1dcfc:	orr	x24, x10, x9
   1dd00:	b.cc	1d5cc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x15ec>  // b.lo, b.ul, b.last
   1dd04:	b	1c6d4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x6f4>
   1dd08:	ldr	x1, [x24, #72]
   1dd0c:	mov	x0, x20
   1dd10:	bl	1fa94 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>
   1dd14:	ldp	w8, w9, [x20, #24]
   1dd18:	cmp	w8, w9
   1dd1c:	b.cc	1cff8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1018>  // b.lo, b.ul, b.last
   1dd20:	ldr	x1, [sp, #8]
   1dd24:	mov	w3, #0x10                  	// #16
   1dd28:	mov	x0, x21
   1dd2c:	mov	x2, xzr
   1dd30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dd34:	ldr	w8, [x26]
   1dd38:	b	1cff8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1018>
   1dd3c:	ldr	x0, [sp, #16]
   1dd40:	mov	x1, x25
   1dd44:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1dd48:	ldur	w8, [x29, #-8]
   1dd4c:	ldr	x25, [sp, #24]
   1dd50:	mov	x20, x23
   1dd54:	mov	x23, x28
   1dd58:	cmp	w8, #0x41
   1dd5c:	b.cc	1dd6c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d8c>  // b.lo, b.ul, b.last
   1dd60:	ldur	x0, [x29, #-16]
   1dd64:	cbz	x0, 1dd6c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1d8c>
   1dd68:	bl	0 <_ZdaPv>
   1dd6c:	ldr	x8, [sp, #40]
   1dd70:	mov	x28, x19
   1dd74:	cmp	x24, x8
   1dd78:	sub	x8, x29, #0x10
   1dd7c:	b.eq	1dd8c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dac>  // b.none
   1dd80:	ldr	x0, [sp, #16]
   1dd84:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitcastToAPIntEv>
   1dd88:	b	1dd94 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1db4>
   1dd8c:	ldr	x0, [sp, #16]
   1dd90:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitcastToAPIntEv>
   1dd94:	sub	x0, x29, #0x10
   1dd98:	bl	1ecf0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>
   1dd9c:	ldr	w8, [x26]
   1dda0:	ldr	w9, [x27]
   1dda4:	sxtw	x24, w0
   1dda8:	cmp	w8, w9
   1ddac:	b.cs	1e0dc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x20fc>  // b.hs, b.nlast
   1ddb0:	ldr	x9, [x21]
   1ddb4:	mov	w10, #0x2                   	// #2
   1ddb8:	add	x8, x9, w8, uxtw #4
   1ddbc:	stp	x10, x24, [x8]
   1ddc0:	ldr	w8, [x26]
   1ddc4:	ldr	w9, [x27]
   1ddc8:	cmp	w8, w9
   1ddcc:	b.cs	1e150 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2170>  // b.hs, b.nlast
   1ddd0:	add	w8, w8, #0x1
   1ddd4:	str	w8, [x26]
   1ddd8:	ldur	w8, [x29, #-8]
   1dddc:	cmp	w8, #0x41
   1dde0:	b.cc	1ddf0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e10>  // b.lo, b.ul, b.last
   1dde4:	ldur	x0, [x29, #-16]
   1dde8:	cbz	x0, 1ddf0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1e10>
   1ddec:	bl	0 <_ZdaPv>
   1ddf0:	add	x0, sp, #0x20
   1ddf4:	bl	0 <LLVMInitializeAArch64AsmParser>
   1ddf8:	ldrb	w8, [x22], #2
   1ddfc:	cbnz	w8, 1c068 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x88>
   1de00:	b	1e118 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x2138>
   1de04:	ldr	x1, [sp, #8]
   1de08:	mov	w3, #0x10                  	// #16
   1de0c:	mov	x0, x21
   1de10:	mov	x2, xzr
   1de14:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1de18:	ldr	w9, [x26]
   1de1c:	b	1d720 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1740>
   1de20:	ldr	x1, [sp, #8]
   1de24:	mov	w3, #0x10                  	// #16
   1de28:	mov	x0, x21
   1de2c:	mov	x2, xzr
   1de30:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1de34:	ldr	w8, [x26]
   1de38:	b	1d968 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1988>
   1de3c:	ldr	x1, [sp, #8]
   1de40:	mov	w3, #0x10                  	// #16
   1de44:	mov	x0, x21
   1de48:	mov	x2, xzr
   1de4c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1de50:	ldr	w8, [x26]
   1de54:	b	1dacc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1aec>
   1de58:	ldr	x1, [sp, #8]
   1de5c:	mov	w3, #0x10                  	// #16
   1de60:	mov	x0, x21
   1de64:	mov	x2, xzr
   1de68:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1de6c:	ldr	w8, [x26]
   1de70:	b	1c914 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x934>
   1de74:	ldr	x1, [sp, #8]
   1de78:	mov	w3, #0x10                  	// #16
   1de7c:	mov	x0, x21
   1de80:	mov	x2, xzr
   1de84:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1de88:	ldr	w8, [x26]
   1de8c:	b	1c948 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x968>
   1de90:	ldr	x1, [sp, #8]
   1de94:	mov	w3, #0x10                  	// #16
   1de98:	mov	x0, x21
   1de9c:	mov	x2, xzr
   1dea0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dea4:	ldr	w8, [x26]
   1dea8:	b	1c238 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x258>
   1deac:	ldr	x1, [sp, #8]
   1deb0:	mov	w3, #0x10                  	// #16
   1deb4:	mov	x0, x21
   1deb8:	mov	x2, xzr
   1debc:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dec0:	ldr	w8, [x26]
   1dec4:	b	1c300 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x320>
   1dec8:	ldr	x1, [sp, #8]
   1decc:	mov	w3, #0x10                  	// #16
   1ded0:	mov	x0, x21
   1ded4:	mov	x2, xzr
   1ded8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dedc:	ldr	w8, [x26]
   1dee0:	b	1c388 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x3a8>
   1dee4:	ldr	x1, [sp, #8]
   1dee8:	mov	w3, #0x10                  	// #16
   1deec:	mov	x0, x21
   1def0:	mov	x2, xzr
   1def4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1def8:	ldr	w8, [x26]
   1defc:	b	1c564 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x584>
   1df00:	ldr	x1, [sp, #8]
   1df04:	mov	w3, #0x10                  	// #16
   1df08:	mov	x0, x21
   1df0c:	mov	x2, xzr
   1df10:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1df14:	ldr	w8, [x26]
   1df18:	b	1caf4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xb14>
   1df1c:	ldr	x1, [sp, #8]
   1df20:	mov	w3, #0x10                  	// #16
   1df24:	mov	x0, x21
   1df28:	mov	x2, xzr
   1df2c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1df30:	ldr	w8, [x26]
   1df34:	b	1cb90 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xbb0>
   1df38:	ldr	x1, [sp, #8]
   1df3c:	mov	w3, #0x10                  	// #16
   1df40:	mov	x0, x21
   1df44:	mov	x2, xzr
   1df48:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1df4c:	ldr	w8, [x26]
   1df50:	b	1cbd0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xbf0>
   1df54:	ldr	x1, [sp, #8]
   1df58:	mov	w3, #0x10                  	// #16
   1df5c:	mov	x0, x21
   1df60:	mov	x2, xzr
   1df64:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1df68:	ldr	w8, [x26]
   1df6c:	b	1cc80 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xca0>
   1df70:	ldr	x1, [sp, #8]
   1df74:	mov	w3, #0x10                  	// #16
   1df78:	mov	x0, x21
   1df7c:	mov	x2, xzr
   1df80:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1df84:	ldr	w8, [x26]
   1df88:	b	1ccf8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd18>
   1df8c:	ldr	x1, [sp, #8]
   1df90:	mov	w3, #0x10                  	// #16
   1df94:	mov	x0, x21
   1df98:	mov	x2, xzr
   1df9c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dfa0:	ldr	w8, [x26]
   1dfa4:	b	1cd78 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd98>
   1dfa8:	ldr	x1, [sp, #8]
   1dfac:	mov	w3, #0x10                  	// #16
   1dfb0:	mov	x0, x21
   1dfb4:	mov	x2, xzr
   1dfb8:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dfbc:	ldr	w8, [x26]
   1dfc0:	b	1cf90 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xfb0>
   1dfc4:	ldr	x1, [sp, #8]
   1dfc8:	mov	w3, #0x10                  	// #16
   1dfcc:	mov	x0, x21
   1dfd0:	mov	x2, xzr
   1dfd4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dfd8:	ldr	w8, [x26]
   1dfdc:	b	1cfc4 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xfe4>
   1dfe0:	ldr	x1, [sp, #8]
   1dfe4:	mov	w3, #0x10                  	// #16
   1dfe8:	mov	x0, x21
   1dfec:	mov	x2, xzr
   1dff0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1dff4:	ldr	w8, [x26]
   1dff8:	b	1d1dc <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x11fc>
   1dffc:	ldr	x1, [sp, #8]
   1e000:	mov	w3, #0x10                  	// #16
   1e004:	mov	x0, x21
   1e008:	mov	x2, xzr
   1e00c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e010:	ldr	w8, [x26]
   1e014:	b	1d34c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x136c>
   1e018:	ldr	x1, [sp, #8]
   1e01c:	mov	w3, #0x10                  	// #16
   1e020:	mov	x0, x21
   1e024:	mov	x2, xzr
   1e028:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e02c:	ldr	w8, [x26]
   1e030:	b	1d46c <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x148c>
   1e034:	ldr	x1, [sp, #8]
   1e038:	mov	w3, #0x10                  	// #16
   1e03c:	mov	x0, x21
   1e040:	mov	x2, xzr
   1e044:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e048:	ldr	w8, [x26]
   1e04c:	b	1d548 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1568>
   1e050:	ldr	x1, [sp, #8]
   1e054:	mov	w3, #0x10                  	// #16
   1e058:	mov	x0, x21
   1e05c:	mov	x2, xzr
   1e060:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e064:	ldr	w8, [x26]
   1e068:	b	1d600 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1620>
   1e06c:	ldr	x1, [sp, #8]
   1e070:	mov	w3, #0x10                  	// #16
   1e074:	mov	x0, x21
   1e078:	mov	x2, xzr
   1e07c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e080:	ldr	w8, [x26]
   1e084:	b	1d810 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1830>
   1e088:	ldr	x1, [sp, #8]
   1e08c:	mov	w3, #0x10                  	// #16
   1e090:	mov	x0, x21
   1e094:	mov	x2, xzr
   1e098:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e09c:	ldr	w8, [x26]
   1e0a0:	b	1d830 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1850>
   1e0a4:	ldr	x1, [sp, #8]
   1e0a8:	mov	w3, #0x10                  	// #16
   1e0ac:	mov	x0, x21
   1e0b0:	mov	x2, xzr
   1e0b4:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e0b8:	ldr	w8, [x26]
   1e0bc:	b	1db68 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1b88>
   1e0c0:	ldr	x1, [sp, #8]
   1e0c4:	mov	w3, #0x10                  	// #16
   1e0c8:	mov	x0, x21
   1e0cc:	mov	x2, xzr
   1e0d0:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e0d4:	ldr	w8, [x26]
   1e0d8:	b	1dbe8 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1c08>
   1e0dc:	ldr	x1, [sp, #8]
   1e0e0:	mov	w3, #0x10                  	// #16
   1e0e4:	mov	x0, x21
   1e0e8:	mov	x2, xzr
   1e0ec:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e0f0:	ldr	w8, [x26]
   1e0f4:	b	1ddb0 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0x1dd0>
   1e0f8:	ldr	x1, [sp, #8]
   1e0fc:	mov	w3, #0x10                  	// #16
   1e100:	mov	x0, x21
   1e104:	mov	x2, xzr
   1e108:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1e10c:	ldr	w8, [x26]
   1e110:	ldr	x9, [x21]
   1e114:	b	1cd48 <_ZN12_GLOBAL__N_116AArch64AsmParser15convertToMCInstEjRN4llvm6MCInstEjRKNS1_15SmallVectorImplISt10unique_ptrINS1_18MCParsedAsmOperandESt14default_deleteIS6_EEEE+0xd68>
   1e118:	ldp	x20, x19, [sp, #160]
   1e11c:	ldp	x22, x21, [sp, #144]
   1e120:	ldp	x24, x23, [sp, #128]
   1e124:	ldp	x26, x25, [sp, #112]
   1e128:	ldp	x28, x27, [sp, #96]
   1e12c:	ldp	x29, x30, [sp, #80]
   1e130:	add	sp, sp, #0xb0
   1e134:	ret
   1e138:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e13c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e140:	add	x0, x0, #0x0
   1e144:	add	x1, x1, #0x0
   1e148:	mov	w2, #0x1949                	// #6473
   1e14c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e150:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e154:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e158:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e15c:	add	x0, x0, #0x0
   1e160:	add	x1, x1, #0x0
   1e164:	add	x3, x3, #0x0
   1e168:	mov	w2, #0x43                  	// #67
   1e16c:	bl	0 <__assert_fail>
   1e170:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e174:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e178:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e17c:	add	x0, x0, #0x0
   1e180:	add	x1, x1, #0x0
   1e184:	add	x3, x3, #0x0
   1e188:	mov	w2, #0x99                  	// #153
   1e18c:	bl	0 <__assert_fail>
   1e190:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e194:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e198:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e19c:	add	x0, x0, #0x0
   1e1a0:	add	x1, x1, #0x0
   1e1a4:	add	x3, x3, #0x0
   1e1a8:	mov	w2, #0x1f4                 	// #500
   1e1ac:	bl	0 <__assert_fail>
   1e1b0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e1b4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e1b8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e1bc:	add	x0, x0, #0x0
   1e1c0:	add	x1, x1, #0x0
   1e1c4:	add	x3, x3, #0x0
   1e1c8:	mov	w2, #0x69                  	// #105
   1e1cc:	bl	0 <__assert_fail>
   1e1d0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e1d4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e1d8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e1dc:	add	x0, x0, #0x0
   1e1e0:	add	x1, x1, #0x0
   1e1e4:	add	x3, x3, #0x0
   1e1e8:	mov	w2, #0x108                 	// #264
   1e1ec:	bl	0 <__assert_fail>
   1e1f0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e1f4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e1f8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e1fc:	add	x0, x0, #0x0
   1e200:	add	x1, x1, #0x0
   1e204:	add	x3, x3, #0x0
   1e208:	mov	w2, #0x226                 	// #550
   1e20c:	bl	0 <__assert_fail>
   1e210:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e214:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e218:	add	x0, x0, #0x0
   1e21c:	add	x1, x1, #0x0
   1e220:	mov	w2, #0x261                 	// #609
   1e224:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e228:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e22c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e230:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e234:	add	x0, x0, #0x0
   1e238:	add	x1, x1, #0x0
   1e23c:	add	x3, x3, #0x0
   1e240:	mov	w2, #0x23f                 	// #575
   1e244:	bl	0 <__assert_fail>
   1e248:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e24c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e250:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e254:	add	x0, x0, #0x0
   1e258:	add	x1, x1, #0x0
   1e25c:	add	x3, x3, #0x0
   1e260:	mov	w2, #0x230                 	// #560
   1e264:	bl	0 <__assert_fail>
   1e268:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e26c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e270:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e274:	add	x0, x0, #0x0
   1e278:	add	x1, x1, #0x0
   1e27c:	add	x3, x3, #0x0
   1e280:	mov	w2, #0x203                 	// #515
   1e284:	bl	0 <__assert_fail>
   1e288:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e28c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e290:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e294:	add	x0, x0, #0x0
   1e298:	add	x1, x1, #0x0
   1e29c:	add	x3, x3, #0x0
   1e2a0:	mov	w2, #0x5f5                 	// #1525
   1e2a4:	bl	0 <__assert_fail>
   1e2a8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e2ac:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e2b0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e2b4:	add	x0, x0, #0x0
   1e2b8:	add	x1, x1, #0x0
   1e2bc:	add	x3, x3, #0x0
   1e2c0:	mov	w2, #0x24e                 	// #590
   1e2c4:	bl	0 <__assert_fail>
   1e2c8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e2cc:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e2d0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e2d4:	add	x0, x0, #0x0
   1e2d8:	add	x1, x1, #0x0
   1e2dc:	add	x3, x3, #0x0
   1e2e0:	mov	w2, #0x5f5                 	// #1525
   1e2e4:	bl	0 <__assert_fail>
   1e2e8:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e2ec:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e2f0:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e2f4:	add	x0, x0, #0x0
   1e2f8:	add	x1, x1, #0x0
   1e2fc:	add	x3, x3, #0x0
   1e300:	mov	w2, #0x5c7                 	// #1479
   1e304:	bl	0 <__assert_fail>
   1e308:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e30c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e310:	add	x0, x0, #0x0
   1e314:	add	x1, x1, #0x0
   1e318:	mov	w2, #0x617                 	// #1559
   1e31c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e320:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e324:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e328:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e32c:	add	x0, x0, #0x0
   1e330:	add	x1, x1, #0x0
   1e334:	add	x3, x3, #0x0
   1e338:	mov	w2, #0x244                 	// #580
   1e33c:	bl	0 <__assert_fail>
   1e340:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e344:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e348:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e34c:	add	x0, x0, #0x0
   1e350:	add	x1, x1, #0x0
   1e354:	add	x3, x3, #0x0
   1e358:	mov	w2, #0x1950                	// #6480
   1e35c:	bl	0 <__assert_fail>
   1e360:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e364:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e368:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e36c:	add	x0, x0, #0x0
   1e370:	add	x1, x1, #0x0
   1e374:	add	x3, x3, #0x0
   1e378:	mov	w2, #0x95                  	// #149
   1e37c:	bl	0 <__assert_fail>
   1e380:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e384:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e388:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e38c:	add	x0, x0, #0x0
   1e390:	add	x1, x1, #0x0
   1e394:	add	x3, x3, #0x0
   1e398:	mov	w2, #0x5c0                 	// #1472
   1e39c:	bl	0 <__assert_fail>
   1e3a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e3a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e3a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e3ac:	add	x0, x0, #0x0
   1e3b0:	add	x1, x1, #0x0
   1e3b4:	add	x3, x3, #0x0
   1e3b8:	mov	w2, #0x1fe                 	// #510
   1e3bc:	bl	0 <__assert_fail>
   1e3c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e3c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e3c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e3cc:	add	x0, x0, #0x0
   1e3d0:	add	x1, x1, #0x0
   1e3d4:	add	x3, x3, #0x0
   1e3d8:	mov	w2, #0x208                 	// #520
   1e3dc:	bl	0 <__assert_fail>
   1e3e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e3e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e3e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e3ec:	add	x0, x0, #0x0
   1e3f0:	add	x1, x1, #0x0
   1e3f4:	add	x3, x3, #0x0
   1e3f8:	mov	w2, #0x212                 	// #530
   1e3fc:	bl	0 <__assert_fail>
   1e400:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e404:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e408:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e40c:	add	x0, x0, #0x0
   1e410:	add	x1, x1, #0x0
   1e414:	add	x3, x3, #0x0
   1e418:	mov	w2, #0x11d                 	// #285
   1e41c:	bl	0 <__assert_fail>
   1e420:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e424:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e428:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e42c:	add	x0, x0, #0x0
   1e430:	add	x1, x1, #0x0
   1e434:	add	x3, x3, #0x0
   1e438:	mov	w2, #0x5f5                 	// #1525
   1e43c:	bl	0 <__assert_fail>
   1e440:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e444:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e448:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e44c:	add	x0, x0, #0x0
   1e450:	add	x1, x1, #0x0
   1e454:	add	x3, x3, #0x0
   1e458:	mov	w2, #0x599                 	// #1433
   1e45c:	bl	0 <__assert_fail>
   1e460:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e464:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e468:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e46c:	add	x0, x0, #0x0
   1e470:	add	x1, x1, #0x0
   1e474:	add	x3, x3, #0x0
   1e478:	mov	w2, #0x5a5                 	// #1445
   1e47c:	bl	0 <__assert_fail>
   1e480:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e484:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e488:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e48c:	add	x0, x0, #0x0
   1e490:	add	x1, x1, #0x0
   1e494:	add	x3, x3, #0x0
   1e498:	mov	w2, #0x219                 	// #537
   1e49c:	bl	0 <__assert_fail>
   1e4a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e4a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e4a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e4ac:	add	x0, x0, #0x0
   1e4b0:	add	x1, x1, #0x0
   1e4b4:	add	x3, x3, #0x0
   1e4b8:	mov	w2, #0x224                 	// #548
   1e4bc:	bl	0 <__assert_fail>
   1e4c0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e4c4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e4c8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e4cc:	add	x0, x0, #0x0
   1e4d0:	add	x1, x1, #0x0
   1e4d4:	add	x3, x3, #0x0
   1e4d8:	mov	w2, #0x3d                  	// #61
   1e4dc:	bl	0 <__assert_fail>
   1e4e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e4e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e4e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e4ec:	add	x0, x0, #0x0
   1e4f0:	add	x1, x1, #0x0
   1e4f4:	add	x3, x3, #0x0
   1e4f8:	mov	w2, #0x23a                 	// #570
   1e4fc:	bl	0 <__assert_fail>
   1e500:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e504:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e508:	add	x0, x0, #0x0
   1e50c:	add	x1, x1, #0x0
   1e510:	mov	w2, #0x269                 	// #617
   1e514:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e518:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e51c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e520:	add	x0, x0, #0x0
   1e524:	add	x1, x1, #0x0
   1e528:	mov	w2, #0x271                 	// #625
   1e52c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e530:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e534:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e538:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e53c:	add	x0, x0, #0x0
   1e540:	add	x1, x1, #0x0
   1e544:	add	x3, x3, #0x0
   1e548:	mov	w2, #0x64                  	// #100
   1e54c:	bl	0 <__assert_fail>
   1e550:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e554:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e558:	add	x0, x0, #0x0
   1e55c:	add	x1, x1, #0x0
   1e560:	mov	w2, #0x67                  	// #103
   1e564:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e568:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e56c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e570:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e574:	add	x0, x0, #0x0
   1e578:	add	x1, x1, #0x0
   1e57c:	add	x3, x3, #0x0
   1e580:	mov	w2, #0xac                  	// #172
   1e584:	bl	0 <__assert_fail>
   1e588:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e58c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e590:	add	x0, x0, #0x0
   1e594:	add	x1, x1, #0x0
   1e598:	mov	w2, #0x99                  	// #153
   1e59c:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1e5a0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e5a4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e5a8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e5ac:	add	x0, x0, #0x0
   1e5b0:	add	x1, x1, #0x0
   1e5b4:	add	x3, x3, #0x0
   1e5b8:	mov	w2, #0x1942                	// #6466
   1e5bc:	bl	0 <__assert_fail>

000000000001e5c0 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv>:
   1e5c0:	sub	sp, sp, #0x40
   1e5c4:	stp	x29, x30, [sp, #32]
   1e5c8:	str	x19, [sp, #48]
   1e5cc:	add	x29, sp, #0x20
   1e5d0:	ldr	w8, [x0, #48]
   1e5d4:	mov	x19, x0
   1e5d8:	cmp	w8, #0x1
   1e5dc:	b.ne	1e63c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x7c>  // b.any
   1e5e0:	add	x0, sp, #0x8
   1e5e4:	mov	x1, x19
   1e5e8:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1e5ec:	ldrb	w8, [sp, #24]
   1e5f0:	cbz	w8, 1e628 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x68>
   1e5f4:	ldr	x8, [sp, #8]
   1e5f8:	ldr	w9, [sp, #16]
   1e5fc:	strb	wzr, [sp, #24]
   1e600:	lsl	x8, x8, x9
   1e604:	tst	x8, #0xffffffffffff00ff
   1e608:	b.eq	1e680 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xc0>  // b.none
   1e60c:	add	x9, x8, #0x80
   1e610:	cmp	x9, #0x100
   1e614:	b.cc	1e680 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xc0>  // b.lo, b.ul, b.last
   1e618:	and	w9, w8, #0xff00
   1e61c:	sxth	x9, w9
   1e620:	cmp	x8, x9
   1e624:	b.eq	1e680 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xc0>  // b.none
   1e628:	mov	w0, #0x1                   	// #1
   1e62c:	ldr	x19, [sp, #48]
   1e630:	ldp	x29, x30, [sp, #32]
   1e634:	add	sp, sp, #0x40
   1e638:	ret
   1e63c:	ldr	x8, [x19]
   1e640:	mov	x0, x19
   1e644:	ldr	x8, [x8, #40]
   1e648:	blr	x8
   1e64c:	tbz	w0, #0, 1e66c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xac>
   1e650:	ldr	w8, [x19, #48]
   1e654:	cbnz	w8, 1e694 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xd4>
   1e658:	ldr	x8, [x19, #72]
   1e65c:	cbz	x8, 1e6b4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0xf4>
   1e660:	ldr	w8, [x8]
   1e664:	cmp	w8, #0x1
   1e668:	b.eq	1e5e0 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIsEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   1e66c:	mov	w0, #0x2                   	// #2
   1e670:	ldr	x19, [sp, #48]
   1e674:	ldp	x29, x30, [sp, #32]
   1e678:	add	sp, sp, #0x40
   1e67c:	ret
   1e680:	mov	x0, xzr
   1e684:	ldr	x19, [sp, #48]
   1e688:	ldp	x29, x30, [sp, #32]
   1e68c:	add	sp, sp, #0x40
   1e690:	ret
   1e694:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e698:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e69c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e6a0:	add	x0, x0, #0x0
   1e6a4:	add	x1, x1, #0x0
   1e6a8:	add	x3, x3, #0x0
   1e6ac:	mov	w2, #0x1f4                 	// #500
   1e6b0:	bl	0 <__assert_fail>
   1e6b4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e6b8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e6bc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e6c0:	add	x0, x0, #0x0
   1e6c4:	add	x1, x1, #0x0
   1e6c8:	add	x3, x3, #0x0
   1e6cc:	mov	w2, #0x69                  	// #105
   1e6d0:	bl	0 <__assert_fail>

000000000001e6d4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv>:
   1e6d4:	sub	sp, sp, #0x40
   1e6d8:	stp	x29, x30, [sp, #32]
   1e6dc:	str	x19, [sp, #48]
   1e6e0:	add	x29, sp, #0x20
   1e6e4:	ldr	w8, [x0, #48]
   1e6e8:	mov	x19, x0
   1e6ec:	cmp	w8, #0x1
   1e6f0:	b.ne	1e744 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x70>  // b.any
   1e6f4:	add	x0, sp, #0x8
   1e6f8:	mov	x1, x19
   1e6fc:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1e700:	ldrb	w8, [sp, #24]
   1e704:	cbz	w8, 1e730 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x5c>
   1e708:	ldr	x8, [sp, #8]
   1e70c:	ldr	w9, [sp, #16]
   1e710:	strb	wzr, [sp, #24]
   1e714:	lsl	x8, x8, x9
   1e718:	cmp	x8, w8, sxtb
   1e71c:	b.eq	1e788 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xb4>  // b.none
   1e720:	sxth	x9, w8
   1e724:	and	x9, x9, #0xffffffffffffff00
   1e728:	cmp	x9, x8
   1e72c:	b.eq	1e788 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xb4>  // b.none
   1e730:	mov	w0, #0x1                   	// #1
   1e734:	ldr	x19, [sp, #48]
   1e738:	ldp	x29, x30, [sp, #32]
   1e73c:	add	sp, sp, #0x40
   1e740:	ret
   1e744:	ldr	x8, [x19]
   1e748:	mov	x0, x19
   1e74c:	ldr	x8, [x8, #40]
   1e750:	blr	x8
   1e754:	tbz	w0, #0, 1e774 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xa0>
   1e758:	ldr	w8, [x19, #48]
   1e75c:	cbnz	w8, 1e79c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xc8>
   1e760:	ldr	x8, [x19, #72]
   1e764:	cbz	x8, 1e7bc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0xe8>
   1e768:	ldr	w8, [x8]
   1e76c:	cmp	w8, #0x1
   1e770:	b.eq	1e6f4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIiEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   1e774:	mov	w0, #0x2                   	// #2
   1e778:	ldr	x19, [sp, #48]
   1e77c:	ldp	x29, x30, [sp, #32]
   1e780:	add	sp, sp, #0x40
   1e784:	ret
   1e788:	mov	x0, xzr
   1e78c:	ldr	x19, [sp, #48]
   1e790:	ldp	x29, x30, [sp, #32]
   1e794:	add	sp, sp, #0x40
   1e798:	ret
   1e79c:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e7a0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e7a4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e7a8:	add	x0, x0, #0x0
   1e7ac:	add	x1, x1, #0x0
   1e7b0:	add	x3, x3, #0x0
   1e7b4:	mov	w2, #0x1f4                 	// #500
   1e7b8:	bl	0 <__assert_fail>
   1e7bc:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e7c0:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e7c4:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e7c8:	add	x0, x0, #0x0
   1e7cc:	add	x1, x1, #0x0
   1e7d0:	add	x3, x3, #0x0
   1e7d4:	mov	w2, #0x69                  	// #105
   1e7d8:	bl	0 <__assert_fail>

000000000001e7dc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv>:
   1e7dc:	sub	sp, sp, #0x40
   1e7e0:	stp	x29, x30, [sp, #32]
   1e7e4:	str	x19, [sp, #48]
   1e7e8:	add	x29, sp, #0x20
   1e7ec:	ldr	w8, [x0, #48]
   1e7f0:	mov	x19, x0
   1e7f4:	cmp	w8, #0x1
   1e7f8:	b.ne	1e84c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x70>  // b.any
   1e7fc:	add	x0, sp, #0x8
   1e800:	mov	x1, x19
   1e804:	bl	1f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>
   1e808:	ldrb	w8, [sp, #24]
   1e80c:	cbz	w8, 1e838 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x5c>
   1e810:	ldr	x8, [sp, #8]
   1e814:	ldr	w9, [sp, #16]
   1e818:	strb	wzr, [sp, #24]
   1e81c:	lsl	x8, x8, x9
   1e820:	cmp	x8, w8, sxtb
   1e824:	b.eq	1e890 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xb4>  // b.none
   1e828:	sxth	x9, w8
   1e82c:	and	x9, x9, #0xffffffffffffff00
   1e830:	cmp	x9, x8
   1e834:	b.eq	1e890 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xb4>  // b.none
   1e838:	mov	w0, #0x1                   	// #1
   1e83c:	ldr	x19, [sp, #48]
   1e840:	ldp	x29, x30, [sp, #32]
   1e844:	add	sp, sp, #0x40
   1e848:	ret
   1e84c:	ldr	x8, [x19]
   1e850:	mov	x0, x19
   1e854:	ldr	x8, [x8, #40]
   1e858:	blr	x8
   1e85c:	tbz	w0, #0, 1e87c <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xa0>
   1e860:	ldr	w8, [x19, #48]
   1e864:	cbnz	w8, 1e8a4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xc8>
   1e868:	ldr	x8, [x19, #72]
   1e86c:	cbz	x8, 1e8c4 <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0xe8>
   1e870:	ldr	w8, [x8]
   1e874:	cmp	w8, #0x1
   1e878:	b.eq	1e7fc <_ZNK12_GLOBAL__N_114AArch64Operand11isSVECpyImmIlEEN4llvm19DiagnosticPredicateEv+0x20>  // b.none
   1e87c:	mov	w0, #0x2                   	// #2
   1e880:	ldr	x19, [sp, #48]
   1e884:	ldp	x29, x30, [sp, #32]
   1e888:	add	sp, sp, #0x40
   1e88c:	ret
   1e890:	mov	x0, xzr
   1e894:	ldr	x19, [sp, #48]
   1e898:	ldp	x29, x30, [sp, #32]
   1e89c:	add	sp, sp, #0x40
   1e8a0:	ret
   1e8a4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e8a8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e8ac:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e8b0:	add	x0, x0, #0x0
   1e8b4:	add	x1, x1, #0x0
   1e8b8:	add	x3, x3, #0x0
   1e8bc:	mov	w2, #0x1f4                 	// #500
   1e8c0:	bl	0 <__assert_fail>
   1e8c4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1e8c8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1e8cc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1e8d0:	add	x0, x0, #0x0
   1e8d4:	add	x1, x1, #0x0
   1e8d8:	add	x3, x3, #0x0
   1e8dc:	mov	w2, #0x69                  	// #105
   1e8e0:	bl	0 <__assert_fail>

000000000001e8e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv>:
   1e8e4:	sub	sp, sp, #0xa0
   1e8e8:	stp	x29, x30, [sp, #96]
   1e8ec:	str	x23, [sp, #112]
   1e8f0:	stp	x22, x21, [sp, #128]
   1e8f4:	stp	x20, x19, [sp, #144]
   1e8f8:	add	x29, sp, #0x60
   1e8fc:	ldr	w8, [x0, #48]
   1e900:	mov	x19, x0
   1e904:	cmp	w8, #0xb
   1e908:	b.ne	1eb0c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x228>  // b.any
   1e90c:	ldrb	w8, [x19, #80]
   1e910:	cbz	w8, 1eb0c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x228>
   1e914:	mov	w0, wzr
   1e918:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1e91c:	cbz	x0, 1eb30 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x24c>
   1e920:	mov	x23, x0
   1e924:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1e928:	add	x8, sp, #0x30
   1e92c:	mov	x22, x0
   1e930:	add	x20, x8, #0x8
   1e934:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1e938:	mov	x21, x0
   1e93c:	cmp	x0, x22
   1e940:	b.eq	1e968 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.none
   1e944:	mov	x0, x20
   1e948:	mov	x1, x22
   1e94c:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1e950:	ldr	x23, [x23, #16]
   1e954:	cbz	x23, 1e97c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x98>
   1e958:	mov	x0, x23
   1e95c:	bl	0 <strlen>
   1e960:	mov	x2, x0
   1e964:	b	1e980 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x9c>
   1e968:	mov	x0, x20
   1e96c:	mov	x1, x22
   1e970:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1e974:	ldr	x23, [x23, #16]
   1e978:	cbnz	x23, 1e958 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x74>
   1e97c:	mov	x2, xzr
   1e980:	add	x8, sp, #0x20
   1e984:	add	x0, sp, #0x30
   1e988:	mov	w3, #0x3                   	// #3
   1e98c:	mov	x1, x23
   1e990:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1e994:	ldrb	w8, [sp, #40]
   1e998:	and	w9, w8, #0xfffffffd
   1e99c:	strb	w9, [sp, #40]
   1e9a0:	tbnz	w8, #0, 1e9ac <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0xc8>
   1e9a4:	mov	w9, #0x1                   	// #1
   1e9a8:	b	1e9b8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0xd4>
   1e9ac:	ldr	x9, [sp, #32]
   1e9b0:	str	xzr, [sp, #32]
   1e9b4:	orr	x9, x9, #0x1
   1e9b8:	tst	x9, #0xfffffffffffffffe
   1e9bc:	and	x11, x9, #0xfffffffffffffffe
   1e9c0:	cset	w10, ne  // ne = any
   1e9c4:	orr	x10, x11, x10
   1e9c8:	str	x10, [x29, #24]
   1e9cc:	cbnz	x11, 1eb50 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x26c>
   1e9d0:	tbnz	w8, #0, 1eb94 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2b0>
   1e9d4:	cbnz	x10, 1eb8c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1e9d8:	ldr	w8, [sp, #32]
   1e9dc:	cbnz	w8, 1eb74 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x290>
   1e9e0:	ldr	w8, [x19, #48]
   1e9e4:	cmp	w8, #0xb
   1e9e8:	b.ne	1ebb4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2d0>  // b.any
   1e9ec:	ldr	x8, [x19, #72]
   1e9f0:	mov	x10, sp
   1e9f4:	add	x23, x10, #0x8
   1e9f8:	mov	w9, #0x40                  	// #64
   1e9fc:	cmp	x21, x22
   1ea00:	sub	x2, x29, #0x10
   1ea04:	mov	x0, x23
   1ea08:	mov	x1, x22
   1ea0c:	stur	w9, [x29, #-8]
   1ea10:	stur	x8, [x29, #-16]
   1ea14:	b.eq	1ea2c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x148>  // b.none
   1ea18:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1ea1c:	ldur	w8, [x29, #-8]
   1ea20:	cmp	w8, #0x41
   1ea24:	b.cs	1ea3c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x158>  // b.hs, b.nlast
   1ea28:	b	1ea48 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x164>
   1ea2c:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1ea30:	ldur	w8, [x29, #-8]
   1ea34:	cmp	w8, #0x41
   1ea38:	b.cc	1ea48 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x164>  // b.lo, b.ul, b.last
   1ea3c:	ldur	x0, [x29, #-16]
   1ea40:	cbz	x0, 1ea48 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x164>
   1ea44:	bl	0 <_ZdaPv>
   1ea48:	ldr	x8, [sp, #8]
   1ea4c:	ldr	x9, [sp, #56]
   1ea50:	cmp	x8, x9
   1ea54:	b.eq	1ea64 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x180>  // b.none
   1ea58:	mov	x0, sp
   1ea5c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1ea60:	b	1eae0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1fc>
   1ea64:	cmp	x21, x8
   1ea68:	b.eq	1eabc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1d8>  // b.none
   1ea6c:	mov	x0, x23
   1ea70:	mov	x1, x20
   1ea74:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1ea78:	mov	w20, w0
   1ea7c:	mov	x0, sp
   1ea80:	bl	0 <LLVMInitializeAArch64AsmParser>
   1ea84:	tbz	w20, #0, 1eae0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1fc>
   1ea88:	ldrb	w8, [sp, #40]
   1ea8c:	tbnz	w8, #1, 1ebd4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1ea90:	tbz	w8, #0, 1eaac <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1c8>
   1ea94:	ldr	x0, [sp, #32]
   1ea98:	cbz	x0, 1eaa8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1c4>
   1ea9c:	ldr	x8, [x0]
   1eaa0:	ldr	x8, [x8, #8]
   1eaa4:	blr	x8
   1eaa8:	str	xzr, [sp, #32]
   1eaac:	add	x0, sp, #0x30
   1eab0:	bl	0 <LLVMInitializeAArch64AsmParser>
   1eab4:	mov	x0, xzr
   1eab8:	b	1eb18 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x234>
   1eabc:	mov	x8, sp
   1eac0:	add	x9, sp, #0x30
   1eac4:	add	x0, x8, #0x8
   1eac8:	add	x1, x9, #0x8
   1eacc:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1ead0:	mov	w20, w0
   1ead4:	mov	x0, sp
   1ead8:	bl	0 <LLVMInitializeAArch64AsmParser>
   1eadc:	tbnz	w20, #0, 1ea88 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x1a4>
   1eae0:	ldrb	w8, [sp, #40]
   1eae4:	tbnz	w8, #1, 1ebd4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1eae8:	tbz	w8, #0, 1eb04 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x220>
   1eaec:	ldr	x0, [sp, #32]
   1eaf0:	cbz	x0, 1eb00 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x21c>
   1eaf4:	ldr	x8, [x0]
   1eaf8:	ldr	x8, [x8, #8]
   1eafc:	blr	x8
   1eb00:	str	xzr, [sp, #32]
   1eb04:	add	x0, sp, #0x30
   1eb08:	bl	0 <LLVMInitializeAArch64AsmParser>
   1eb0c:	mov	x0, x19
   1eb10:	bl	1f494 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>
   1eb14:	and	x0, x0, #0xffffffff
   1eb18:	ldp	x20, x19, [sp, #144]
   1eb1c:	ldp	x22, x21, [sp, #128]
   1eb20:	ldr	x23, [sp, #112]
   1eb24:	ldp	x29, x30, [sp, #96]
   1eb28:	add	sp, sp, #0xa0
   1eb2c:	ret
   1eb30:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1eb34:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1eb38:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1eb3c:	add	x0, x0, #0x0
   1eb40:	add	x1, x1, #0x0
   1eb44:	add	x3, x3, #0x0
   1eb48:	mov	w2, #0x4c4                 	// #1220
   1eb4c:	bl	0 <__assert_fail>
   1eb50:	orr	x8, x9, #0x1
   1eb54:	mov	x0, sp
   1eb58:	str	x8, [sp]
   1eb5c:	str	xzr, [x29, #24]
   1eb60:	bl	0 <LLVMInitializeAArch64AsmParser>
   1eb64:	ldr	x8, [sp]
   1eb68:	cbnz	x8, 1ebdc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2f8>
   1eb6c:	ldr	x8, [x29, #24]
   1eb70:	cbnz	x8, 1eb8c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj0ELj2EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1eb74:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1eb78:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1eb7c:	add	x0, x0, #0x0
   1eb80:	add	x1, x1, #0x0
   1eb84:	mov	w2, #0x4cb                 	// #1227
   1eb88:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1eb8c:	add	x0, x29, #0x18
   1eb90:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1eb94:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1eb98:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1eb9c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1eba0:	add	x0, x0, #0x0
   1eba4:	add	x1, x1, #0x0
   1eba8:	add	x3, x3, #0x0
   1ebac:	mov	w2, #0x272                 	// #626
   1ebb0:	bl	0 <__assert_fail>
   1ebb4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ebb8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ebbc:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ebc0:	add	x0, x0, #0x0
   1ebc4:	add	x1, x1, #0x0
   1ebc8:	add	x3, x3, #0x0
   1ebcc:	mov	w2, #0x208                 	// #520
   1ebd0:	bl	0 <__assert_fail>
   1ebd4:	add	x0, sp, #0x20
   1ebd8:	bl	0 <LLVMInitializeAArch64AsmParser>
   1ebdc:	mov	x0, sp
   1ebe0:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001ebe4 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv>:
   1ebe4:	stp	x29, x30, [sp, #-32]!
   1ebe8:	stp	x20, x19, [sp, #16]
   1ebec:	mov	x29, sp
   1ebf0:	ldr	w8, [x1, #48]
   1ebf4:	mov	x20, x1
   1ebf8:	mov	x19, x0
   1ebfc:	cmp	w8, #0x1
   1ec00:	b.ne	1ec2c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1ec04:	ldr	w8, [x20, #80]
   1ec08:	cmp	w8, #0xc
   1ec0c:	b.ne	1ec2c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1ec10:	ldr	x8, [x20, #72]
   1ec14:	cbz	x8, 1ecb0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xcc>
   1ec18:	ldr	w9, [x8]
   1ec1c:	cmp	w9, #0x1
   1ec20:	b.ne	1ec2c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1ec24:	ldr	x8, [x8, #16]
   1ec28:	b	1ec74 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x90>
   1ec2c:	ldr	x8, [x20]
   1ec30:	mov	x0, x20
   1ec34:	ldr	x8, [x8, #40]
   1ec38:	blr	x8
   1ec3c:	tbz	w0, #0, 1ec80 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>
   1ec40:	ldr	w8, [x20, #48]
   1ec44:	cbnz	w8, 1ecd0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xec>
   1ec48:	ldr	x8, [x20, #72]
   1ec4c:	cbz	x8, 1ecb0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xcc>
   1ec50:	ldr	w9, [x8]
   1ec54:	cmp	w9, #0x1
   1ec58:	b.ne	1ec80 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>  // b.any
   1ec5c:	ldr	x8, [x8, #16]
   1ec60:	cbz	x8, 1ec98 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xb4>
   1ec64:	and	x9, x8, #0xfffffffffffff000
   1ec68:	cmp	x9, x8
   1ec6c:	b.ne	1ec98 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xb4>  // b.any
   1ec70:	asr	x8, x8, #12
   1ec74:	mov	w9, #0xc                   	// #12
   1ec78:	stp	x8, x9, [x19]
   1ec7c:	b	1ec9c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj12EEEN4llvm8OptionalISt4pairIljEEEv+0xb8>
   1ec80:	mov	w8, wzr
   1ec84:	strb	wzr, [x19]
   1ec88:	strb	w8, [x19, #16]
   1ec8c:	ldp	x20, x19, [sp, #16]
   1ec90:	ldp	x29, x30, [sp], #32
   1ec94:	ret
   1ec98:	stp	x8, xzr, [x19]
   1ec9c:	mov	w8, #0x1                   	// #1
   1eca0:	strb	w8, [x19, #16]
   1eca4:	ldp	x20, x19, [sp, #16]
   1eca8:	ldp	x29, x30, [sp], #32
   1ecac:	ret
   1ecb0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ecb4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ecb8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ecbc:	add	x0, x0, #0x0
   1ecc0:	add	x1, x1, #0x0
   1ecc4:	add	x3, x3, #0x0
   1ecc8:	mov	w2, #0x69                  	// #105
   1eccc:	bl	0 <__assert_fail>
   1ecd0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1ecd4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1ecd8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1ecdc:	add	x0, x0, #0x0
   1ece0:	add	x1, x1, #0x0
   1ece4:	add	x3, x3, #0x0
   1ece8:	mov	w2, #0x1f4                 	// #500
   1ecec:	bl	0 <__assert_fail>

000000000001ecf0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE>:
   1ecf0:	sub	sp, sp, #0x40
   1ecf4:	stp	x29, x30, [sp, #16]
   1ecf8:	stp	x22, x21, [sp, #32]
   1ecfc:	stp	x20, x19, [sp, #48]
   1ed00:	add	x29, sp, #0x10
   1ed04:	ldr	w8, [x0, #8]
   1ed08:	mov	x19, x0
   1ed0c:	cmp	w8, #0x40
   1ed10:	str	w8, [sp, #8]
   1ed14:	b.hi	1ed24 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x34>  // b.pmore
   1ed18:	ldr	x9, [x19]
   1ed1c:	str	x9, [sp]
   1ed20:	b	1ed34 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x44>
   1ed24:	mov	x0, sp
   1ed28:	mov	x1, x19
   1ed2c:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   1ed30:	ldr	w8, [sp, #8]
   1ed34:	cmp	w8, #0x3e
   1ed38:	b.ls	1eec0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1d0>  // b.plast
   1ed3c:	cmp	w8, #0x40
   1ed40:	b.hi	1ed68 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x78>  // b.pmore
   1ed44:	cmp	w8, #0x3f
   1ed48:	b.ne	1edc4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xd4>  // b.any
   1ed4c:	str	xzr, [sp]
   1ed50:	mov	x21, xzr
   1ed54:	ldr	w8, [x19, #8]
   1ed58:	cmp	w8, #0x40
   1ed5c:	str	w8, [sp, #8]
   1ed60:	b.hi	1edb0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xc0>  // b.pmore
   1ed64:	b	1ede4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xf4>
   1ed68:	mov	x0, sp
   1ed6c:	mov	w1, #0x3f                  	// #63
   1ed70:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
   1ed74:	ldr	w20, [sp, #8]
   1ed78:	cmp	w20, #0x41
   1ed7c:	b.cc	1edd0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xe0>  // b.lo, b.ul, b.last
   1ed80:	mov	x0, sp
   1ed84:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   1ed88:	sub	w8, w20, w0
   1ed8c:	cmp	w8, #0x41
   1ed90:	b.cs	1eee0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1f0>  // b.hs, b.nlast
   1ed94:	ldr	x0, [sp]
   1ed98:	ldr	x21, [x0]
   1ed9c:	bl	0 <_ZdaPv>
   1eda0:	ldr	w8, [x19, #8]
   1eda4:	cmp	w8, #0x40
   1eda8:	str	w8, [sp, #8]
   1edac:	b.ls	1ede4 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xf4>  // b.plast
   1edb0:	mov	x0, sp
   1edb4:	mov	x1, x19
   1edb8:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
   1edbc:	ldr	w8, [sp, #8]
   1edc0:	b	1edec <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xfc>
   1edc4:	ldr	x8, [sp]
   1edc8:	lsr	x8, x8, #63
   1edcc:	str	x8, [sp]
   1edd0:	ldr	x21, [sp]
   1edd4:	ldr	w8, [x19, #8]
   1edd8:	cmp	w8, #0x40
   1eddc:	str	w8, [sp, #8]
   1ede0:	b.hi	1edb0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0xc0>  // b.pmore
   1ede4:	ldr	x9, [x19]
   1ede8:	str	x9, [sp]
   1edec:	cmp	w8, #0x33
   1edf0:	b.ls	1eec0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1d0>  // b.plast
   1edf4:	cmp	w8, #0x40
   1edf8:	b.hi	1ee0c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x11c>  // b.pmore
   1edfc:	cmp	w8, #0x34
   1ee00:	b.ne	1ee1c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x12c>  // b.any
   1ee04:	str	xzr, [sp]
   1ee08:	b	1ee28 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x138>
   1ee0c:	mov	x0, sp
   1ee10:	mov	w1, #0x34                  	// #52
   1ee14:	bl	0 <_ZN4llvm5APInt12lshrSlowCaseEj>
   1ee18:	b	1ee28 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x138>
   1ee1c:	ldr	x8, [sp]
   1ee20:	lsr	x8, x8, #52
   1ee24:	str	x8, [sp]
   1ee28:	mov	x0, sp
   1ee2c:	bl	0 <LLVMInitializeAArch64AsmParser>
   1ee30:	ldr	w8, [sp, #8]
   1ee34:	mov	x20, x0
   1ee38:	cmp	w8, #0x41
   1ee3c:	b.cc	1ee4c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x15c>  // b.lo, b.ul, b.last
   1ee40:	ldr	x0, [sp]
   1ee44:	cbz	x0, 1ee4c <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x15c>
   1ee48:	bl	0 <_ZdaPv>
   1ee4c:	ldr	w22, [x19, #8]
   1ee50:	cmp	w22, #0x40
   1ee54:	b.ls	1ee70 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x180>  // b.plast
   1ee58:	mov	x0, x19
   1ee5c:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
   1ee60:	sub	w8, w22, w0
   1ee64:	cmp	w8, #0x41
   1ee68:	b.cs	1eee0 <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1f0>  // b.hs, b.nlast
   1ee6c:	ldr	x19, [x19]
   1ee70:	and	x8, x20, #0x7ff
   1ee74:	sub	x8, x8, #0x3fc
   1ee78:	cmp	x8, #0x7
   1ee7c:	mov	w0, #0xffffffff            	// #-1
   1ee80:	b.hi	1eeac <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1bc>  // b.pmore
   1ee84:	ldr	x8, [x19]
   1ee88:	and	x9, x8, #0xffffffffffff
   1ee8c:	cbnz	x9, 1eeac <_ZN4llvm10AArch64_AML10getFP64ImmERKNS_5APIntE+0x1bc>
   1ee90:	lsl	w9, w20, #4
   1ee94:	add	w9, w9, #0x40
   1ee98:	and	w9, w9, #0x70
   1ee9c:	ubfx	x8, x8, #48, #4
   1eea0:	bfi	w9, w21, #7, #1
   1eea4:	orr	w8, w9, w8
   1eea8:	eor	w0, w8, #0x40
   1eeac:	ldp	x20, x19, [sp, #48]
   1eeb0:	ldp	x22, x21, [sp, #32]
   1eeb4:	ldp	x29, x30, [sp, #16]
   1eeb8:	add	sp, sp, #0x40
   1eebc:	ret
   1eec0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1eec4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1eec8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1eecc:	add	x0, x0, #0x0
   1eed0:	add	x1, x1, #0x0
   1eed4:	add	x3, x3, #0x0
   1eed8:	mov	w2, #0x3e3                 	// #995
   1eedc:	bl	0 <__assert_fail>
   1eee0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1eee4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1eee8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1eeec:	add	x0, x0, #0x0
   1eef0:	add	x1, x1, #0x0
   1eef4:	add	x3, x3, #0x0
   1eef8:	mov	w2, #0x657                 	// #1623
   1eefc:	bl	0 <__assert_fail>

000000000001ef00 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm>:
   1ef00:	stp	x29, x30, [sp, #-16]!
   1ef04:	mov	x29, sp
   1ef08:	add	x8, x0, #0x1
   1ef0c:	cmp	x8, #0x2
   1ef10:	b.cs	1ef24 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x24>  // b.hs, b.nlast
   1ef14:	mov	w8, wzr
   1ef18:	mov	w0, w8
   1ef1c:	ldp	x29, x30, [sp], #16
   1ef20:	ret
   1ef24:	cmp	w1, #0x40
   1ef28:	b.ne	1efd0 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xd0>  // b.any
   1ef2c:	mov	x8, #0xffffffffffffffff    	// #-1
   1ef30:	lsr	w9, w1, #1
   1ef34:	lsr	x12, x0, x9
   1ef38:	lsl	x11, x8, x9
   1ef3c:	eor	x12, x12, x0
   1ef40:	and	w10, w1, #0xfffffffe
   1ef44:	bics	xzr, x12, x11
   1ef48:	bic	x13, x12, x11
   1ef4c:	csel	w1, w9, w10, eq  // eq = none
   1ef50:	cbnz	x13, 1ef5c <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x5c>
   1ef54:	cmp	w1, #0x2
   1ef58:	b.hi	1ef30 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x30>  // b.pmore
   1ef5c:	neg	w8, w1
   1ef60:	mov	x9, #0xffffffffffffffff    	// #-1
   1ef64:	lsr	x8, x9, x8
   1ef68:	ands	x9, x8, x0
   1ef6c:	b.eq	1ef84 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x84>  // b.none
   1ef70:	sub	x10, x9, #0x1
   1ef74:	orr	x10, x10, x9
   1ef78:	add	x11, x10, #0x1
   1ef7c:	tst	x11, x10
   1ef80:	b.eq	1f004 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x104>  // b.none
   1ef84:	orn	x9, x0, x8
   1ef88:	cmn	x9, #0x1
   1ef8c:	b.eq	1efd8 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xd8>  // b.none
   1ef90:	mov	x10, #0xfffffffffffffffe    	// #-2
   1ef94:	mvn	x8, x9
   1ef98:	sub	x9, x10, x9
   1ef9c:	orr	x9, x9, x8
   1efa0:	add	x10, x9, #0x1
   1efa4:	tst	x10, x9
   1efa8:	b.ne	1efd8 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xd8>  // b.any
   1efac:	clz	x9, x8
   1efb0:	mov	w10, #0x40                  	// #64
   1efb4:	rbit	x11, x8
   1efb8:	sub	w8, w10, w9
   1efbc:	clz	x10, x11
   1efc0:	add	w10, w1, w10
   1efc4:	add	w9, w10, w9
   1efc8:	sub	w9, w9, #0x40
   1efcc:	b	1f028 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x128>
   1efd0:	lsr	x8, x0, x1
   1efd4:	cbz	x8, 1efe8 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0xe8>
   1efd8:	mov	w8, wzr
   1efdc:	mov	w0, w8
   1efe0:	ldp	x29, x30, [sp], #16
   1efe4:	ret
   1efe8:	neg	w8, w1
   1efec:	mov	x9, #0xffffffffffffffff    	// #-1
   1eff0:	lsr	x8, x9, x8
   1eff4:	cmp	x8, x0
   1eff8:	mov	w8, wzr
   1effc:	b.eq	1ef18 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x18>  // b.none
   1f000:	b	1ef2c <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x2c>
   1f004:	rbit	x8, x9
   1f008:	clz	x8, x8
   1f00c:	lsr	x9, x9, x8
   1f010:	mvn	x10, x9
   1f014:	cmn	x9, #0x1
   1f018:	rbit	x9, x10
   1f01c:	clz	x9, x9
   1f020:	mov	w10, #0x40                  	// #64
   1f024:	csel	w9, w10, w9, eq  // eq = none
   1f028:	subs	w8, w1, w8
   1f02c:	b.ls	1f068 <_ZN4llvm10AArch64_AML23processLogicalImmediateEmjRm+0x168>  // b.plast
   1f030:	sub	w10, w1, #0x1
   1f034:	neg	w11, w1, lsl #1
   1f038:	sub	w9, w9, #0x1
   1f03c:	mov	w12, #0x1000                	// #4096
   1f040:	and	w8, w8, w10
   1f044:	orr	w9, w9, w11
   1f048:	bic	w10, w12, w9, lsl #6
   1f04c:	bfi	w9, w8, #6, #26
   1f050:	orr	w8, w9, w10
   1f054:	str	x8, [x2]
   1f058:	mov	w8, #0x1                   	// #1
   1f05c:	mov	w0, w8
   1f060:	ldp	x29, x30, [sp], #16
   1f064:	ret
   1f068:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f06c:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f070:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f074:	add	x0, x0, #0x0
   1f078:	add	x1, x1, #0x0
   1f07c:	add	x3, x3, #0x0
   1f080:	mov	w2, #0xff                  	// #255
   1f084:	bl	0 <__assert_fail>

000000000001f088 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv>:
   1f088:	stp	x29, x30, [sp, #-32]!
   1f08c:	stp	x20, x19, [sp, #16]
   1f090:	mov	x29, sp
   1f094:	ldr	w8, [x1, #48]
   1f098:	mov	x20, x1
   1f09c:	mov	x19, x0
   1f0a0:	cmp	w8, #0x1
   1f0a4:	b.ne	1f0d0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1f0a8:	ldr	w8, [x20, #80]
   1f0ac:	cmp	w8, #0x8
   1f0b0:	b.ne	1f0d0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1f0b4:	ldr	x8, [x20, #72]
   1f0b8:	cbz	x8, 1f154 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xcc>
   1f0bc:	ldr	w9, [x8]
   1f0c0:	cmp	w9, #0x1
   1f0c4:	b.ne	1f0d0 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x48>  // b.any
   1f0c8:	ldr	x8, [x8, #16]
   1f0cc:	b	1f118 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x90>
   1f0d0:	ldr	x8, [x20]
   1f0d4:	mov	x0, x20
   1f0d8:	ldr	x8, [x8, #40]
   1f0dc:	blr	x8
   1f0e0:	tbz	w0, #0, 1f124 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>
   1f0e4:	ldr	w8, [x20, #48]
   1f0e8:	cbnz	w8, 1f174 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xec>
   1f0ec:	ldr	x8, [x20, #72]
   1f0f0:	cbz	x8, 1f154 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xcc>
   1f0f4:	ldr	w9, [x8]
   1f0f8:	cmp	w9, #0x1
   1f0fc:	b.ne	1f124 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0x9c>  // b.any
   1f100:	ldr	x8, [x8, #16]
   1f104:	cbz	x8, 1f13c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xb4>
   1f108:	and	x9, x8, #0xffffffffffffff00
   1f10c:	cmp	x9, x8
   1f110:	b.ne	1f13c <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xb4>  // b.any
   1f114:	asr	x8, x8, #8
   1f118:	mov	w9, #0x8                   	// #8
   1f11c:	stp	x8, x9, [x19]
   1f120:	b	1f140 <_ZNK12_GLOBAL__N_114AArch64Operand13getShiftedValILj8EEEN4llvm8OptionalISt4pairIljEEEv+0xb8>
   1f124:	mov	w8, wzr
   1f128:	strb	wzr, [x19]
   1f12c:	strb	w8, [x19, #16]
   1f130:	ldp	x20, x19, [sp, #16]
   1f134:	ldp	x29, x30, [sp], #32
   1f138:	ret
   1f13c:	stp	x8, xzr, [x19]
   1f140:	mov	w8, #0x1                   	// #1
   1f144:	strb	w8, [x19, #16]
   1f148:	ldp	x20, x19, [sp, #16]
   1f14c:	ldp	x29, x30, [sp], #32
   1f150:	ret
   1f154:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f158:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f15c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f160:	add	x0, x0, #0x0
   1f164:	add	x1, x1, #0x0
   1f168:	add	x3, x3, #0x0
   1f16c:	mov	w2, #0x69                  	// #105
   1f170:	bl	0 <__assert_fail>
   1f174:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f178:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f17c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f180:	add	x0, x0, #0x0
   1f184:	add	x1, x1, #0x0
   1f188:	add	x3, x3, #0x0
   1f18c:	mov	w2, #0x1f4                 	// #500
   1f190:	bl	0 <__assert_fail>

000000000001f194 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv>:
   1f194:	sub	sp, sp, #0xa0
   1f198:	stp	x29, x30, [sp, #96]
   1f19c:	str	x23, [sp, #112]
   1f1a0:	stp	x22, x21, [sp, #128]
   1f1a4:	stp	x20, x19, [sp, #144]
   1f1a8:	add	x29, sp, #0x60
   1f1ac:	ldr	w8, [x0, #48]
   1f1b0:	cmp	w8, #0xb
   1f1b4:	b.ne	1f218 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.any
   1f1b8:	ldrb	w8, [x0, #80]
   1f1bc:	mov	x22, x0
   1f1c0:	cbz	w8, 1f3c4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x230>
   1f1c4:	mov	w0, #0x1                   	// #1
   1f1c8:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1f1cc:	cbz	x0, 1f3e0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x24c>
   1f1d0:	mov	x23, x0
   1f1d4:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1f1d8:	add	x8, sp, #0x30
   1f1dc:	mov	x21, x0
   1f1e0:	add	x19, x8, #0x8
   1f1e4:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1f1e8:	mov	x20, x0
   1f1ec:	cmp	x0, x21
   1f1f0:	b.eq	1f220 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x8c>  // b.none
   1f1f4:	mov	x0, x19
   1f1f8:	mov	x1, x21
   1f1fc:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1f200:	ldr	x23, [x23, #16]
   1f204:	cbz	x23, 1f234 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xa0>
   1f208:	mov	x0, x23
   1f20c:	bl	0 <strlen>
   1f210:	mov	x2, x0
   1f214:	b	1f238 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xa4>
   1f218:	mov	w0, #0x2                   	// #2
   1f21c:	b	1f3c8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x234>
   1f220:	mov	x0, x19
   1f224:	mov	x1, x21
   1f228:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1f22c:	ldr	x23, [x23, #16]
   1f230:	cbnz	x23, 1f208 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x74>
   1f234:	mov	x2, xzr
   1f238:	add	x8, sp, #0x20
   1f23c:	add	x0, sp, #0x30
   1f240:	mov	w3, #0x3                   	// #3
   1f244:	mov	x1, x23
   1f248:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1f24c:	ldrb	w8, [sp, #40]
   1f250:	and	w9, w8, #0xfffffffd
   1f254:	strb	w9, [sp, #40]
   1f258:	tbnz	w8, #0, 1f264 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xd0>
   1f25c:	mov	w9, #0x1                   	// #1
   1f260:	b	1f270 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0xdc>
   1f264:	ldr	x9, [sp, #32]
   1f268:	str	xzr, [sp, #32]
   1f26c:	orr	x9, x9, #0x1
   1f270:	tst	x9, #0xfffffffffffffffe
   1f274:	and	x11, x9, #0xfffffffffffffffe
   1f278:	cset	w10, ne  // ne = any
   1f27c:	orr	x10, x11, x10
   1f280:	str	x10, [x29, #24]
   1f284:	cbnz	x11, 1f400 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x26c>
   1f288:	tbnz	w8, #0, 1f444 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2b0>
   1f28c:	cbnz	x10, 1f43c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1f290:	ldr	w8, [sp, #32]
   1f294:	cbnz	w8, 1f424 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x290>
   1f298:	ldr	w8, [x22, #48]
   1f29c:	cmp	w8, #0xb
   1f2a0:	b.ne	1f464 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2d0>  // b.any
   1f2a4:	ldr	x8, [x22, #72]
   1f2a8:	mov	x10, sp
   1f2ac:	add	x22, x10, #0x8
   1f2b0:	mov	w9, #0x40                  	// #64
   1f2b4:	cmp	x20, x21
   1f2b8:	sub	x2, x29, #0x10
   1f2bc:	mov	x0, x22
   1f2c0:	mov	x1, x21
   1f2c4:	stur	w9, [x29, #-8]
   1f2c8:	stur	x8, [x29, #-16]
   1f2cc:	b.eq	1f2e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x150>  // b.none
   1f2d0:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1f2d4:	ldur	w8, [x29, #-8]
   1f2d8:	cmp	w8, #0x41
   1f2dc:	b.cs	1f2f4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x160>  // b.hs, b.nlast
   1f2e0:	b	1f300 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x16c>
   1f2e4:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1f2e8:	ldur	w8, [x29, #-8]
   1f2ec:	cmp	w8, #0x41
   1f2f0:	b.cc	1f300 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x16c>  // b.lo, b.ul, b.last
   1f2f4:	ldur	x0, [x29, #-16]
   1f2f8:	cbz	x0, 1f300 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x16c>
   1f2fc:	bl	0 <_ZdaPv>
   1f300:	ldr	x8, [sp, #8]
   1f304:	ldr	x9, [sp, #56]
   1f308:	cmp	x8, x9
   1f30c:	b.eq	1f31c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x188>  // b.none
   1f310:	mov	x0, sp
   1f314:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f318:	b	1f398 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x204>
   1f31c:	cmp	x20, x8
   1f320:	b.eq	1f374 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1e0>  // b.none
   1f324:	mov	x0, x22
   1f328:	mov	x1, x19
   1f32c:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1f330:	mov	w19, w0
   1f334:	mov	x0, sp
   1f338:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f33c:	tbz	w19, #0, 1f398 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x204>
   1f340:	ldrb	w8, [sp, #40]
   1f344:	tbnz	w8, #1, 1f484 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1f348:	tbz	w8, #0, 1f364 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1d0>
   1f34c:	ldr	x0, [sp, #32]
   1f350:	cbz	x0, 1f360 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1cc>
   1f354:	ldr	x8, [x0]
   1f358:	ldr	x8, [x8, #8]
   1f35c:	blr	x8
   1f360:	str	xzr, [sp, #32]
   1f364:	add	x0, sp, #0x30
   1f368:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f36c:	mov	x0, xzr
   1f370:	b	1f3c8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x234>
   1f374:	mov	x8, sp
   1f378:	add	x9, sp, #0x30
   1f37c:	add	x0, x8, #0x8
   1f380:	add	x1, x9, #0x8
   1f384:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1f388:	mov	w19, w0
   1f38c:	mov	x0, sp
   1f390:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f394:	tbnz	w19, #0, 1f340 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x1ac>
   1f398:	ldrb	w8, [sp, #40]
   1f39c:	tbnz	w8, #1, 1f484 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1f3a0:	tbz	w8, #0, 1f3bc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x228>
   1f3a4:	ldr	x0, [sp, #32]
   1f3a8:	cbz	x0, 1f3b8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x224>
   1f3ac:	ldr	x8, [x0]
   1f3b0:	ldr	x8, [x8, #8]
   1f3b4:	blr	x8
   1f3b8:	str	xzr, [sp, #32]
   1f3bc:	add	x0, sp, #0x30
   1f3c0:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f3c4:	mov	w0, #0x1                   	// #1
   1f3c8:	ldp	x20, x19, [sp, #144]
   1f3cc:	ldp	x22, x21, [sp, #128]
   1f3d0:	ldr	x23, [sp, #112]
   1f3d4:	ldp	x29, x30, [sp, #96]
   1f3d8:	add	sp, sp, #0xa0
   1f3dc:	ret
   1f3e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f3e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f3e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f3ec:	add	x0, x0, #0x0
   1f3f0:	add	x1, x1, #0x0
   1f3f4:	add	x3, x3, #0x0
   1f3f8:	mov	w2, #0x4c4                 	// #1220
   1f3fc:	bl	0 <__assert_fail>
   1f400:	orr	x8, x9, #0x1
   1f404:	mov	x0, sp
   1f408:	str	x8, [sp]
   1f40c:	str	xzr, [x29, #24]
   1f410:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f414:	ldr	x8, [sp]
   1f418:	cbnz	x8, 1f48c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2f8>
   1f41c:	ldr	x8, [x29, #24]
   1f420:	cbnz	x8, 1f43c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj1EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1f424:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f428:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f42c:	add	x0, x0, #0x0
   1f430:	add	x1, x1, #0x0
   1f434:	mov	w2, #0x4cb                 	// #1227
   1f438:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1f43c:	add	x0, x29, #0x18
   1f440:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1f444:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f448:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f44c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f450:	add	x0, x0, #0x0
   1f454:	add	x1, x1, #0x0
   1f458:	add	x3, x3, #0x0
   1f45c:	mov	w2, #0x272                 	// #626
   1f460:	bl	0 <__assert_fail>
   1f464:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f468:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f46c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f470:	add	x0, x0, #0x0
   1f474:	add	x1, x1, #0x0
   1f478:	add	x3, x3, #0x0
   1f47c:	mov	w2, #0x208                 	// #520
   1f480:	bl	0 <__assert_fail>
   1f484:	add	x0, sp, #0x20
   1f488:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f48c:	mov	x0, sp
   1f490:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001f494 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv>:
   1f494:	sub	sp, sp, #0xa0
   1f498:	stp	x29, x30, [sp, #96]
   1f49c:	str	x23, [sp, #112]
   1f4a0:	stp	x22, x21, [sp, #128]
   1f4a4:	stp	x20, x19, [sp, #144]
   1f4a8:	add	x29, sp, #0x60
   1f4ac:	ldr	w8, [x0, #48]
   1f4b0:	cmp	w8, #0xb
   1f4b4:	b.ne	1f518 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.any
   1f4b8:	ldrb	w8, [x0, #80]
   1f4bc:	mov	x22, x0
   1f4c0:	cbz	w8, 1f6c4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x230>
   1f4c4:	mov	w0, #0x2                   	// #2
   1f4c8:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1f4cc:	cbz	x0, 1f6e0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x24c>
   1f4d0:	mov	x23, x0
   1f4d4:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1f4d8:	add	x8, sp, #0x30
   1f4dc:	mov	x21, x0
   1f4e0:	add	x19, x8, #0x8
   1f4e4:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1f4e8:	mov	x20, x0
   1f4ec:	cmp	x0, x21
   1f4f0:	b.eq	1f520 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x8c>  // b.none
   1f4f4:	mov	x0, x19
   1f4f8:	mov	x1, x21
   1f4fc:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1f500:	ldr	x23, [x23, #16]
   1f504:	cbz	x23, 1f534 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xa0>
   1f508:	mov	x0, x23
   1f50c:	bl	0 <strlen>
   1f510:	mov	x2, x0
   1f514:	b	1f538 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xa4>
   1f518:	mov	w0, #0x2                   	// #2
   1f51c:	b	1f6c8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x234>
   1f520:	mov	x0, x19
   1f524:	mov	x1, x21
   1f528:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1f52c:	ldr	x23, [x23, #16]
   1f530:	cbnz	x23, 1f508 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x74>
   1f534:	mov	x2, xzr
   1f538:	add	x8, sp, #0x20
   1f53c:	add	x0, sp, #0x30
   1f540:	mov	w3, #0x3                   	// #3
   1f544:	mov	x1, x23
   1f548:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1f54c:	ldrb	w8, [sp, #40]
   1f550:	and	w9, w8, #0xfffffffd
   1f554:	strb	w9, [sp, #40]
   1f558:	tbnz	w8, #0, 1f564 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xd0>
   1f55c:	mov	w9, #0x1                   	// #1
   1f560:	b	1f570 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0xdc>
   1f564:	ldr	x9, [sp, #32]
   1f568:	str	xzr, [sp, #32]
   1f56c:	orr	x9, x9, #0x1
   1f570:	tst	x9, #0xfffffffffffffffe
   1f574:	and	x11, x9, #0xfffffffffffffffe
   1f578:	cset	w10, ne  // ne = any
   1f57c:	orr	x10, x11, x10
   1f580:	str	x10, [x29, #24]
   1f584:	cbnz	x11, 1f700 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x26c>
   1f588:	tbnz	w8, #0, 1f744 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2b0>
   1f58c:	cbnz	x10, 1f73c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1f590:	ldr	w8, [sp, #32]
   1f594:	cbnz	w8, 1f724 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x290>
   1f598:	ldr	w8, [x22, #48]
   1f59c:	cmp	w8, #0xb
   1f5a0:	b.ne	1f764 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2d0>  // b.any
   1f5a4:	ldr	x8, [x22, #72]
   1f5a8:	mov	x10, sp
   1f5ac:	add	x22, x10, #0x8
   1f5b0:	mov	w9, #0x40                  	// #64
   1f5b4:	cmp	x20, x21
   1f5b8:	sub	x2, x29, #0x10
   1f5bc:	mov	x0, x22
   1f5c0:	mov	x1, x21
   1f5c4:	stur	w9, [x29, #-8]
   1f5c8:	stur	x8, [x29, #-16]
   1f5cc:	b.eq	1f5e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x150>  // b.none
   1f5d0:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1f5d4:	ldur	w8, [x29, #-8]
   1f5d8:	cmp	w8, #0x41
   1f5dc:	b.cs	1f5f4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x160>  // b.hs, b.nlast
   1f5e0:	b	1f600 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x16c>
   1f5e4:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1f5e8:	ldur	w8, [x29, #-8]
   1f5ec:	cmp	w8, #0x41
   1f5f0:	b.cc	1f600 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x16c>  // b.lo, b.ul, b.last
   1f5f4:	ldur	x0, [x29, #-16]
   1f5f8:	cbz	x0, 1f600 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x16c>
   1f5fc:	bl	0 <_ZdaPv>
   1f600:	ldr	x8, [sp, #8]
   1f604:	ldr	x9, [sp, #56]
   1f608:	cmp	x8, x9
   1f60c:	b.eq	1f61c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x188>  // b.none
   1f610:	mov	x0, sp
   1f614:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f618:	b	1f698 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x204>
   1f61c:	cmp	x20, x8
   1f620:	b.eq	1f674 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1e0>  // b.none
   1f624:	mov	x0, x22
   1f628:	mov	x1, x19
   1f62c:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1f630:	mov	w19, w0
   1f634:	mov	x0, sp
   1f638:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f63c:	tbz	w19, #0, 1f698 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x204>
   1f640:	ldrb	w8, [sp, #40]
   1f644:	tbnz	w8, #1, 1f784 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1f648:	tbz	w8, #0, 1f664 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1d0>
   1f64c:	ldr	x0, [sp, #32]
   1f650:	cbz	x0, 1f660 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1cc>
   1f654:	ldr	x8, [x0]
   1f658:	ldr	x8, [x8, #8]
   1f65c:	blr	x8
   1f660:	str	xzr, [sp, #32]
   1f664:	add	x0, sp, #0x30
   1f668:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f66c:	mov	x0, xzr
   1f670:	b	1f6c8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x234>
   1f674:	mov	x8, sp
   1f678:	add	x9, sp, #0x30
   1f67c:	add	x0, x8, #0x8
   1f680:	add	x1, x9, #0x8
   1f684:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1f688:	mov	w19, w0
   1f68c:	mov	x0, sp
   1f690:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f694:	tbnz	w19, #0, 1f640 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x1ac>
   1f698:	ldrb	w8, [sp, #40]
   1f69c:	tbnz	w8, #1, 1f784 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1f6a0:	tbz	w8, #0, 1f6bc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x228>
   1f6a4:	ldr	x0, [sp, #32]
   1f6a8:	cbz	x0, 1f6b8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x224>
   1f6ac:	ldr	x8, [x0]
   1f6b0:	ldr	x8, [x8, #8]
   1f6b4:	blr	x8
   1f6b8:	str	xzr, [sp, #32]
   1f6bc:	add	x0, sp, #0x30
   1f6c0:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f6c4:	mov	w0, #0x1                   	// #1
   1f6c8:	ldp	x20, x19, [sp, #144]
   1f6cc:	ldp	x22, x21, [sp, #128]
   1f6d0:	ldr	x23, [sp, #112]
   1f6d4:	ldp	x29, x30, [sp, #96]
   1f6d8:	add	sp, sp, #0xa0
   1f6dc:	ret
   1f6e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f6e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f6e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f6ec:	add	x0, x0, #0x0
   1f6f0:	add	x1, x1, #0x0
   1f6f4:	add	x3, x3, #0x0
   1f6f8:	mov	w2, #0x4c4                 	// #1220
   1f6fc:	bl	0 <__assert_fail>
   1f700:	orr	x8, x9, #0x1
   1f704:	mov	x0, sp
   1f708:	str	x8, [sp]
   1f70c:	str	xzr, [x29, #24]
   1f710:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f714:	ldr	x8, [sp]
   1f718:	cbnz	x8, 1f78c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2f8>
   1f71c:	ldr	x8, [x29, #24]
   1f720:	cbnz	x8, 1f73c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj2EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1f724:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f728:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f72c:	add	x0, x0, #0x0
   1f730:	add	x1, x1, #0x0
   1f734:	mov	w2, #0x4cb                 	// #1227
   1f738:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1f73c:	add	x0, x29, #0x18
   1f740:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1f744:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f748:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f74c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f750:	add	x0, x0, #0x0
   1f754:	add	x1, x1, #0x0
   1f758:	add	x3, x3, #0x0
   1f75c:	mov	w2, #0x272                 	// #626
   1f760:	bl	0 <__assert_fail>
   1f764:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f768:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f76c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f770:	add	x0, x0, #0x0
   1f774:	add	x1, x1, #0x0
   1f778:	add	x3, x3, #0x0
   1f77c:	mov	w2, #0x208                 	// #520
   1f780:	bl	0 <__assert_fail>
   1f784:	add	x0, sp, #0x20
   1f788:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f78c:	mov	x0, sp
   1f790:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001f794 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv>:
   1f794:	sub	sp, sp, #0xa0
   1f798:	stp	x29, x30, [sp, #96]
   1f79c:	str	x23, [sp, #112]
   1f7a0:	stp	x22, x21, [sp, #128]
   1f7a4:	stp	x20, x19, [sp, #144]
   1f7a8:	add	x29, sp, #0x60
   1f7ac:	ldr	w8, [x0, #48]
   1f7b0:	cmp	w8, #0xb
   1f7b4:	b.ne	1f818 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x84>  // b.any
   1f7b8:	ldrb	w8, [x0, #80]
   1f7bc:	mov	x22, x0
   1f7c0:	cbz	w8, 1f9c4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x230>
   1f7c4:	mov	w0, #0x3                   	// #3
   1f7c8:	bl	0 <_ZN4llvm17AArch64ExactFPImm22lookupExactFPImmByEnumEh>
   1f7cc:	cbz	x0, 1f9e0 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x24c>
   1f7d0:	mov	x23, x0
   1f7d4:	bl	0 <_ZN4llvm11APFloatBase10IEEEdoubleEv>
   1f7d8:	add	x8, sp, #0x30
   1f7dc:	mov	x21, x0
   1f7e0:	add	x19, x8, #0x8
   1f7e4:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
   1f7e8:	mov	x20, x0
   1f7ec:	cmp	x0, x21
   1f7f0:	b.eq	1f820 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x8c>  // b.none
   1f7f4:	mov	x0, x19
   1f7f8:	mov	x1, x21
   1f7fc:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsE>
   1f800:	ldr	x23, [x23, #16]
   1f804:	cbz	x23, 1f834 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xa0>
   1f808:	mov	x0, x23
   1f80c:	bl	0 <strlen>
   1f810:	mov	x2, x0
   1f814:	b	1f838 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xa4>
   1f818:	mov	w0, #0x2                   	// #2
   1f81c:	b	1f9c8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x234>
   1f820:	mov	x0, x19
   1f824:	mov	x1, x21
   1f828:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsE>
   1f82c:	ldr	x23, [x23, #16]
   1f830:	cbnz	x23, 1f808 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x74>
   1f834:	mov	x2, xzr
   1f838:	add	x8, sp, #0x20
   1f83c:	add	x0, sp, #0x30
   1f840:	mov	w3, #0x3                   	// #3
   1f844:	mov	x1, x23
   1f848:	bl	0 <_ZN4llvm7APFloat17convertFromStringENS_9StringRefENS_11APFloatBase12roundingModeE>
   1f84c:	ldrb	w8, [sp, #40]
   1f850:	and	w9, w8, #0xfffffffd
   1f854:	strb	w9, [sp, #40]
   1f858:	tbnz	w8, #0, 1f864 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xd0>
   1f85c:	mov	w9, #0x1                   	// #1
   1f860:	b	1f870 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0xdc>
   1f864:	ldr	x9, [sp, #32]
   1f868:	str	xzr, [sp, #32]
   1f86c:	orr	x9, x9, #0x1
   1f870:	tst	x9, #0xfffffffffffffffe
   1f874:	and	x11, x9, #0xfffffffffffffffe
   1f878:	cset	w10, ne  // ne = any
   1f87c:	orr	x10, x11, x10
   1f880:	str	x10, [x29, #24]
   1f884:	cbnz	x11, 1fa00 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x26c>
   1f888:	tbnz	w8, #0, 1fa44 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2b0>
   1f88c:	cbnz	x10, 1fa3c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1f890:	ldr	w8, [sp, #32]
   1f894:	cbnz	w8, 1fa24 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x290>
   1f898:	ldr	w8, [x22, #48]
   1f89c:	cmp	w8, #0xb
   1f8a0:	b.ne	1fa64 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2d0>  // b.any
   1f8a4:	ldr	x8, [x22, #72]
   1f8a8:	mov	x10, sp
   1f8ac:	add	x22, x10, #0x8
   1f8b0:	mov	w9, #0x40                  	// #64
   1f8b4:	cmp	x20, x21
   1f8b8:	sub	x2, x29, #0x10
   1f8bc:	mov	x0, x22
   1f8c0:	mov	x1, x21
   1f8c4:	stur	w9, [x29, #-8]
   1f8c8:	stur	x8, [x29, #-16]
   1f8cc:	b.eq	1f8e4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x150>  // b.none
   1f8d0:	bl	0 <_ZN4llvm6detail9IEEEFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1f8d4:	ldur	w8, [x29, #-8]
   1f8d8:	cmp	w8, #0x41
   1f8dc:	b.cs	1f8f4 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x160>  // b.hs, b.nlast
   1f8e0:	b	1f900 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x16c>
   1f8e4:	bl	0 <_ZN4llvm6detail13DoubleAPFloatC1ERKNS_12fltSemanticsERKNS_5APIntE>
   1f8e8:	ldur	w8, [x29, #-8]
   1f8ec:	cmp	w8, #0x41
   1f8f0:	b.cc	1f900 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x16c>  // b.lo, b.ul, b.last
   1f8f4:	ldur	x0, [x29, #-16]
   1f8f8:	cbz	x0, 1f900 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x16c>
   1f8fc:	bl	0 <_ZdaPv>
   1f900:	ldr	x8, [sp, #8]
   1f904:	ldr	x9, [sp, #56]
   1f908:	cmp	x8, x9
   1f90c:	b.eq	1f91c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x188>  // b.none
   1f910:	mov	x0, sp
   1f914:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f918:	b	1f998 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x204>
   1f91c:	cmp	x20, x8
   1f920:	b.eq	1f974 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1e0>  // b.none
   1f924:	mov	x0, x22
   1f928:	mov	x1, x19
   1f92c:	bl	0 <_ZNK4llvm6detail9IEEEFloat14bitwiseIsEqualERKS1_>
   1f930:	mov	w19, w0
   1f934:	mov	x0, sp
   1f938:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f93c:	tbz	w19, #0, 1f998 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x204>
   1f940:	ldrb	w8, [sp, #40]
   1f944:	tbnz	w8, #1, 1fa84 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1f948:	tbz	w8, #0, 1f964 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1d0>
   1f94c:	ldr	x0, [sp, #32]
   1f950:	cbz	x0, 1f960 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1cc>
   1f954:	ldr	x8, [x0]
   1f958:	ldr	x8, [x8, #8]
   1f95c:	blr	x8
   1f960:	str	xzr, [sp, #32]
   1f964:	add	x0, sp, #0x30
   1f968:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f96c:	mov	x0, xzr
   1f970:	b	1f9c8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x234>
   1f974:	mov	x8, sp
   1f978:	add	x9, sp, #0x30
   1f97c:	add	x0, x8, #0x8
   1f980:	add	x1, x9, #0x8
   1f984:	bl	0 <_ZNK4llvm6detail13DoubleAPFloat14bitwiseIsEqualERKS1_>
   1f988:	mov	w19, w0
   1f98c:	mov	x0, sp
   1f990:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f994:	tbnz	w19, #0, 1f940 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x1ac>
   1f998:	ldrb	w8, [sp, #40]
   1f99c:	tbnz	w8, #1, 1fa84 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2f0>
   1f9a0:	tbz	w8, #0, 1f9bc <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x228>
   1f9a4:	ldr	x0, [sp, #32]
   1f9a8:	cbz	x0, 1f9b8 <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x224>
   1f9ac:	ldr	x8, [x0]
   1f9b0:	ldr	x8, [x8, #8]
   1f9b4:	blr	x8
   1f9b8:	str	xzr, [sp, #32]
   1f9bc:	add	x0, sp, #0x30
   1f9c0:	bl	0 <LLVMInitializeAArch64AsmParser>
   1f9c4:	mov	w0, #0x1                   	// #1
   1f9c8:	ldp	x20, x19, [sp, #144]
   1f9cc:	ldp	x22, x21, [sp, #128]
   1f9d0:	ldr	x23, [sp, #112]
   1f9d4:	ldp	x29, x30, [sp, #96]
   1f9d8:	add	sp, sp, #0xa0
   1f9dc:	ret
   1f9e0:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1f9e4:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1f9e8:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1f9ec:	add	x0, x0, #0x0
   1f9f0:	add	x1, x1, #0x0
   1f9f4:	add	x3, x3, #0x0
   1f9f8:	mov	w2, #0x4c4                 	// #1220
   1f9fc:	bl	0 <__assert_fail>
   1fa00:	orr	x8, x9, #0x1
   1fa04:	mov	x0, sp
   1fa08:	str	x8, [sp]
   1fa0c:	str	xzr, [x29, #24]
   1fa10:	bl	0 <LLVMInitializeAArch64AsmParser>
   1fa14:	ldr	x8, [sp]
   1fa18:	cbnz	x8, 1fa8c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2f8>
   1fa1c:	ldr	x8, [x29, #24]
   1fa20:	cbnz	x8, 1fa3c <_ZNK12_GLOBAL__N_114AArch64Operand12isExactFPImmILj3EEEN4llvm19DiagnosticPredicateEv+0x2a8>
   1fa24:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1fa28:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1fa2c:	add	x0, x0, #0x0
   1fa30:	add	x1, x1, #0x0
   1fa34:	mov	w2, #0x4cb                 	// #1227
   1fa38:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
   1fa3c:	add	x0, x29, #0x18
   1fa40:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
   1fa44:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1fa48:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1fa4c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1fa50:	add	x0, x0, #0x0
   1fa54:	add	x1, x1, #0x0
   1fa58:	add	x3, x3, #0x0
   1fa5c:	mov	w2, #0x272                 	// #626
   1fa60:	bl	0 <__assert_fail>
   1fa64:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1fa68:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1fa6c:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1fa70:	add	x0, x0, #0x0
   1fa74:	add	x1, x1, #0x0
   1fa78:	add	x3, x3, #0x0
   1fa7c:	mov	w2, #0x208                 	// #520
   1fa80:	bl	0 <__assert_fail>
   1fa84:	add	x0, sp, #0x20
   1fa88:	bl	0 <LLVMInitializeAArch64AsmParser>
   1fa8c:	mov	x0, sp
   1fa90:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

000000000001fa94 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE>:
   1fa94:	stp	x29, x30, [sp, #-48]!
   1fa98:	str	x21, [sp, #16]
   1fa9c:	stp	x20, x19, [sp, #32]
   1faa0:	mov	x29, sp
   1faa4:	mov	x19, x0
   1faa8:	cbz	x1, 1fae0 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x4c>
   1faac:	ldr	w8, [x1]
   1fab0:	mov	x20, x1
   1fab4:	cmp	w8, #0x1
   1fab8:	b.ne	1fb08 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x74>  // b.any
   1fabc:	mov	x21, x19
   1fac0:	ldr	x20, [x20, #16]
   1fac4:	ldr	w8, [x21, #24]!
   1fac8:	ldr	w9, [x21, #4]
   1facc:	cmp	w8, w9
   1fad0:	b.cs	1fb6c <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0xd8>  // b.hs, b.nlast
   1fad4:	ldr	x9, [x19, #16]
   1fad8:	mov	w10, #0x2                   	// #2
   1fadc:	b	1fb24 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x90>
   1fae0:	mov	x21, x19
   1fae4:	ldr	w8, [x21, #24]!
   1fae8:	ldr	w9, [x21, #4]
   1faec:	cmp	w8, w9
   1faf0:	b.cs	1fb50 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0xbc>  // b.hs, b.nlast
   1faf4:	adrp	x10, 0 <LLVMInitializeAArch64AsmParser>
   1faf8:	ldr	x9, [x19, #16]
   1fafc:	ldr	q0, [x10]
   1fb00:	str	q0, [x9, w8, uxtw #4]
   1fb04:	b	1fb2c <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x98>
   1fb08:	mov	x21, x19
   1fb0c:	ldr	w8, [x21, #24]!
   1fb10:	ldr	w9, [x21, #4]
   1fb14:	cmp	w8, w9
   1fb18:	b.cs	1fb88 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0xf4>  // b.hs, b.nlast
   1fb1c:	ldr	x9, [x19, #16]
   1fb20:	mov	w10, #0x4                   	// #4
   1fb24:	add	x8, x9, w8, uxtw #4
   1fb28:	stp	x10, x20, [x8]
   1fb2c:	ldp	w8, w9, [x19, #24]
   1fb30:	cmp	w8, w9
   1fb34:	b.cs	1fba4 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x110>  // b.hs, b.nlast
   1fb38:	add	w8, w8, #0x1
   1fb3c:	str	w8, [x21]
   1fb40:	ldp	x20, x19, [sp, #32]
   1fb44:	ldr	x21, [sp, #16]
   1fb48:	ldp	x29, x30, [sp], #48
   1fb4c:	ret
   1fb50:	sub	x0, x21, #0x8
   1fb54:	add	x1, x0, #0x10
   1fb58:	mov	w3, #0x10                  	// #16
   1fb5c:	mov	x2, xzr
   1fb60:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fb64:	ldr	w8, [x21]
   1fb68:	b	1faf4 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x60>
   1fb6c:	sub	x0, x21, #0x8
   1fb70:	add	x1, x0, #0x10
   1fb74:	mov	w3, #0x10                  	// #16
   1fb78:	mov	x2, xzr
   1fb7c:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fb80:	ldr	w8, [x21]
   1fb84:	b	1fad4 <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x40>
   1fb88:	sub	x0, x21, #0x8
   1fb8c:	add	x1, x0, #0x10
   1fb90:	mov	w3, #0x10                  	// #16
   1fb94:	mov	x2, xzr
   1fb98:	bl	0 <_ZN4llvm15SmallVectorBase8grow_podEPvmm>
   1fb9c:	ldr	w8, [x21]
   1fba0:	b	1fb1c <_ZNK12_GLOBAL__N_114AArch64Operand7addExprERN4llvm6MCInstEPKNS1_6MCExprE+0x88>
   1fba4:	adrp	x0, 0 <LLVMInitializeAArch64AsmParser>
   1fba8:	adrp	x1, 0 <LLVMInitializeAArch64AsmParser>
   1fbac:	adrp	x3, 0 <LLVMInitializeAArch64AsmParser>
   1fbb0:	add	x0, x0, #0x0
   1fbb4:	add	x1, x1, #0x0
   1fbb8:	add	x3, x3, #0x0
   1fbbc:	mov	w2, #0x43                  	// #67
   1fbc0:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm17MCTargetAsmParser16parsePrimaryExprERPKNS_6MCExprERNS_5SMLocE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser16parsePrimaryExprERPKNS_6MCExprERNS_5SMLocE>:
   0:	ldr	x0, [x0, #8]
   4:	ldr	x8, [x0]
   8:	ldr	x3, [x8, #184]
   c:	br	x3

Disassembly of section .text._ZN4llvm17MCTargetAsmParser16ParseInstructionERNS_20ParseInstructionInfoENS_9StringRefENS_8AsmTokenERNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS7_EEEE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser16ParseInstructionERNS_20ParseInstructionInfoENS_9StringRefENS_8AsmTokenERNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS7_EEEE>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x23, x0
  18:	mov	x0, x4
  1c:	mov	x19, x5
  20:	mov	x20, x3
  24:	mov	x21, x2
  28:	mov	x22, x1
  2c:	bl	0 <_ZNK4llvm8AsmToken6getLocEv>
  30:	ldr	x8, [x23]
  34:	mov	x4, x0
  38:	mov	x0, x23
  3c:	mov	x1, x22
  40:	ldr	x6, [x8, #40]
  44:	mov	x2, x21
  48:	mov	x3, x20
  4c:	mov	x5, x19
  50:	ldp	x20, x19, [sp, #48]
  54:	ldp	x22, x21, [sp, #32]
  58:	ldr	x23, [sp, #16]
  5c:	ldp	x29, x30, [sp], #64
  60:	br	x6

Disassembly of section .text._ZN4llvm17MCTargetAsmParser28OmitRegisterFromClobberListsEj:

0000000000000000 <_ZN4llvm17MCTargetAsmParser28OmitRegisterFromClobberListsEj>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser30checkEarlyTargetMatchPredicateERNS_6MCInstERKNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS5_EEEE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser30checkEarlyTargetMatchPredicateERNS_6MCInstERKNS_15SmallVectorImplISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS5_EEEE>:
   0:	mov	w0, #0x4                   	// #4
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser25checkTargetMatchPredicateERNS_6MCInstE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser25checkTargetMatchPredicateERNS_6MCInstE>:
   0:	mov	w0, #0x4                   	// #4
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser20equalIsAsmAssignmentEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser20equalIsAsmAssignmentEv>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser7isLabelERNS_8AsmTokenE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser7isLabelERNS_8AsmTokenE>:
   0:	mov	w0, #0x1                   	// #1
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser22starIsStartOfStatementEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser22starIsStartOfStatementEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser19applyModifierToExprEPKNS_6MCExprENS_15MCSymbolRefExpr11VariantKindERNS_9MCContextE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser19applyModifierToExprEPKNS_6MCExprENS_15MCSymbolRefExpr11VariantKindERNS_9MCContextE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser17doBeforeLabelEmitEPNS_8MCSymbolE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser17doBeforeLabelEmitEPNS_8MCSymbolE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser13onLabelParsedEPNS_8MCSymbolE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser13onLabelParsedEPNS_8MCSymbolE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser24flushPendingInstructionsERNS_10MCStreamerE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser24flushPendingInstructionsERNS_10MCStreamerE>:
   0:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser21createTargetUnaryExprEPKNS_6MCExprENS_8AsmToken9TokenKindERNS_9MCContextE:

0000000000000000 <_ZN4llvm17MCTargetAsmParser21createTargetUnaryExprEPKNS_6MCExprENS_8AsmToken9TokenKindERNS_9MCContextE>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm17MCTargetAsmParser11onEndOfFileEv:

0000000000000000 <_ZN4llvm17MCTargetAsmParser11onEndOfFileEv>:
   0:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperandD2Ev:

0000000000000000 <_ZN4llvm18MCParsedAsmOperandD2Ev>:
   0:	adrp	x9, 0 <_ZTVN4llvm18MCParsedAsmOperandE>
   4:	mov	x8, x0
   8:	ldr	x0, [x0, #16]
   c:	ldr	x9, [x9]
  10:	add	x10, x8, #0x20
  14:	cmp	x0, x10
  18:	add	x9, x9, #0x10
  1c:	str	x9, [x8]
  20:	b.eq	28 <_ZN4llvm18MCParsedAsmOperandD2Ev+0x28>  // b.none
  24:	b	0 <_ZdlPv>
  28:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand10getSymNameEv:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand10getSymNameEv>:
   0:	mov	x0, xzr
   4:	mov	x1, xzr
   8:	ret

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand9getOpDeclEv:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand9getOpDeclEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand13needAddressOfEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand13needAddressOfEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand15isOffsetOfLocalEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand15isOffsetOfLocalEv>:
   0:	mov	w0, wzr
   4:	ret

Disassembly of section .text._ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv:

0000000000000000 <_ZNK4llvm18MCParsedAsmOperand14getOffsetOfLocEv>:
   0:	mov	x0, xzr
   4:	ret

Disassembly of section .text._ZN4llvm11raw_ostreamlsEPKc:

0000000000000000 <_ZN4llvm11raw_ostreamlsEPKc>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	str	x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x1
  14:	mov	x19, x0
  18:	cbz	x1, 54 <_ZN4llvm11raw_ostreamlsEPKc+0x54>
  1c:	mov	x0, x20
  20:	bl	0 <strlen>
  24:	mov	x21, x0
  28:	ldp	x8, x0, [x19, #16]
  2c:	sub	x8, x8, x0
  30:	cmp	x21, x8
  34:	b.ls	68 <_ZN4llvm11raw_ostreamlsEPKc+0x68>  // b.plast
  38:	mov	x0, x19
  3c:	mov	x1, x20
  40:	mov	x2, x21
  44:	ldp	x20, x19, [sp, #32]
  48:	ldr	x21, [sp, #16]
  4c:	ldp	x29, x30, [sp], #48
  50:	b	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  54:	mov	x21, xzr
  58:	ldp	x8, x0, [x19, #16]
  5c:	sub	x8, x8, x0
  60:	cmp	x21, x8
  64:	b.hi	38 <_ZN4llvm11raw_ostreamlsEPKc+0x38>  // b.pmore
  68:	cbz	x21, 84 <_ZN4llvm11raw_ostreamlsEPKc+0x84>
  6c:	mov	x1, x20
  70:	mov	x2, x21
  74:	bl	0 <memcpy>
  78:	ldr	x8, [x19, #24]
  7c:	add	x8, x8, x21
  80:	str	x8, [x19, #24]
  84:	mov	x0, x19
  88:	ldp	x20, x19, [sp, #32]
  8c:	ldr	x21, [sp, #16]
  90:	ldp	x29, x30, [sp], #48
  94:	ret

Disassembly of section .text._ZN4llvm7APFloatD2Ev:

0000000000000000 <_ZN4llvm7APFloatD2Ev>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	mov	x20, x0
  14:	ldr	x21, [x20, #8]!
  18:	mov	x19, x0
  1c:	bl	0 <_ZN4llvm11APFloatBase15PPCDoubleDoubleEv>
  20:	cmp	x0, x21
  24:	b.eq	3c <_ZN4llvm7APFloatD2Ev+0x3c>  // b.none
  28:	mov	x0, x20
  2c:	ldp	x20, x19, [sp, #32]
  30:	ldp	x22, x21, [sp, #16]
  34:	ldp	x29, x30, [sp], #48
  38:	b	0 <_ZN4llvm6detail9IEEEFloatD1Ev>
  3c:	ldr	x8, [x19, #16]
  40:	cbz	x8, 70 <_ZN4llvm7APFloatD2Ev+0x70>
  44:	mov	x20, x8
  48:	ldr	x9, [x20, #-8]!
  4c:	cbz	x9, 68 <_ZN4llvm7APFloatD2Ev+0x68>
  50:	lsl	x21, x9, #5
  54:	sub	x22, x8, #0x20
  58:	add	x0, x22, x21
  5c:	bl	0 <_ZN4llvm7APFloatD2Ev>
  60:	subs	x21, x21, #0x20
  64:	b.ne	58 <_ZN4llvm7APFloatD2Ev+0x58>  // b.any
  68:	mov	x0, x20
  6c:	bl	0 <_ZdaPv>
  70:	str	xzr, [x19, #16]
  74:	ldp	x20, x19, [sp, #32]
  78:	ldp	x22, x21, [sp, #16]
  7c:	ldp	x29, x30, [sp], #48
  80:	ret

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x21, x8, x9, cc  // cc = lo, ul, last
  6c:	lsl	x0, x21, #3
  70:	bl	0 <malloc>
  74:	mov	x20, x0
  78:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  7c:	cbz	x21, 98 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x98>
  80:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  84:	add	x0, x0, #0x0
  88:	mov	w1, #0x1                   	// #1
  8c:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  90:	mov	x20, xzr
  94:	b	b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  98:	mov	w0, #0x1                   	// #1
  9c:	bl	0 <malloc>
  a0:	mov	x20, x0
  a4:	cbnz	x0, b8 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xb8>
  a8:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm>
  ac:	add	x0, x0, #0x0
  b0:	mov	w1, #0x1                   	// #1
  b4:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  b8:	ldr	w8, [x19, #8]
  bc:	ldr	x0, [x19]
  c0:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x11c>
  c4:	lsl	x22, x8, #3
  c8:	mov	x9, x22
  cc:	mov	x10, x20
  d0:	ldr	x11, [x0]
  d4:	str	xzr, [x0], #8
  d8:	subs	x9, x9, #0x8
  dc:	str	x11, [x10], #8
  e0:	b.ne	d0 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xd0>  // b.any
  e4:	ldr	x0, [x19]
  e8:	cbz	w8, 11c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x11c>
  ec:	sub	x23, x0, #0x8
  f0:	b	100 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x100>
  f4:	str	xzr, [x23, x22]
  f8:	subs	x22, x22, #0x8
  fc:	b.eq	118 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x118>  // b.none
 100:	ldr	x0, [x23, x22]
 104:	cbz	x0, f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xf4>
 108:	ldr	x8, [x0]
 10c:	ldr	x8, [x8, #8]
 110:	blr	x8
 114:	b	f4 <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0xf4>
 118:	ldr	x0, [x19]
 11c:	add	x8, x19, #0x10
 120:	cmp	x0, x8
 124:	b.eq	12c <_ZN4llvm23SmallVectorTemplateBaseISt10unique_ptrINS_18MCParsedAsmOperandESt14default_deleteIS2_EELb0EE4growEm+0x12c>  // b.none
 128:	bl	0 <free>
 12c:	str	x20, [x19]
 130:	str	w21, [x19, #12]
 134:	ldp	x20, x19, [sp, #48]
 138:	ldp	x22, x21, [sp, #32]
 13c:	ldr	x23, [sp, #16]
 140:	ldp	x29, x30, [sp], #64
 144:	ret

Disassembly of section .text._ZNK4llvm5APInt12getSExtValueEv:

0000000000000000 <_ZNK4llvm5APInt12getSExtValueEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	w19, [x0, #8]
  10:	cmp	w19, #0x40
  14:	b.hi	38 <_ZNK4llvm5APInt12getSExtValueEv+0x38>  // b.pmore
  18:	cbz	w19, a8 <_ZNK4llvm5APInt12getSExtValueEv+0xa8>
  1c:	ldr	x8, [x0]
  20:	neg	x9, x19
  24:	lsl	x8, x8, x9
  28:	asr	x0, x8, x9
  2c:	ldp	x20, x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret
  38:	ldr	x20, [x0]
  3c:	sub	w8, w19, #0x1
  40:	lsr	w9, w8, #6
  44:	ldr	x9, [x20, w9, uxtw #3]
  48:	lsr	x8, x9, x8
  4c:	tbz	w8, #0, 74 <_ZNK4llvm5APInt12getSExtValueEv+0x74>
  50:	bl	0 <_ZNK4llvm5APInt24countLeadingOnesSlowCaseEv>
  54:	sub	w8, w19, w0
  58:	add	w8, w8, #0x1
  5c:	cmp	w8, #0x41
  60:	b.cs	88 <_ZNK4llvm5APInt12getSExtValueEv+0x88>  // b.hs, b.nlast
  64:	ldr	x0, [x20]
  68:	ldp	x20, x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	bl	0 <_ZNK4llvm5APInt25countLeadingZerosSlowCaseEv>
  78:	sub	w8, w19, w0
  7c:	add	w8, w8, #0x1
  80:	cmp	w8, #0x41
  84:	b.cc	64 <_ZNK4llvm5APInt12getSExtValueEv+0x64>  // b.lo, b.ul, b.last
  88:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  8c:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  90:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  94:	add	x0, x0, #0x0
  98:	add	x1, x1, #0x0
  9c:	add	x3, x3, #0x0
  a0:	mov	w2, #0x663                 	// #1635
  a4:	bl	0 <__assert_fail>
  a8:	adrp	x0, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  ac:	adrp	x1, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b0:	adrp	x3, 0 <_ZNK4llvm5APInt12getSExtValueEv>
  b4:	add	x0, x0, #0x0
  b8:	add	x1, x1, #0x0
  bc:	add	x3, x3, #0x0
  c0:	mov	w2, #0x307                 	// #775
  c4:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm12consumeErrorENS_5ErrorE:

0000000000000000 <_ZN4llvm12consumeErrorENS_5ErrorE>:
   0:	sub	sp, sp, #0x80
   4:	stp	x29, x30, [sp, #112]
   8:	add	x29, sp, #0x70
   c:	ldr	x8, [x0]
  10:	str	xzr, [x0]
  14:	add	x0, sp, #0x10
  18:	add	x1, sp, #0x8
  1c:	orr	x8, x8, #0x1
  20:	str	x8, [sp, #16]
  24:	add	x8, sp, #0x18
  28:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  2c:	ldr	x8, [sp, #24]
  30:	tst	x8, #0xfffffffffffffffe
  34:	and	x9, x8, #0xfffffffffffffffe
  38:	cset	w8, ne  // ne = any
  3c:	orr	x8, x9, x8
  40:	str	x8, [sp, #24]
  44:	cbnz	x9, 60 <_ZN4llvm12consumeErrorENS_5ErrorE+0x60>
  48:	cbnz	x8, d0 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd0>
  4c:	ldr	x8, [sp, #16]
  50:	cbnz	x8, d8 <_ZN4llvm12consumeErrorENS_5ErrorE+0xd8>
  54:	ldp	x29, x30, [sp, #112]
  58:	add	sp, sp, #0x80
  5c:	ret
  60:	sturb	wzr, [x29, #-16]
  64:	stp	xzr, xzr, [sp, #48]
  68:	adrp	x10, 0 <_ZTVN4llvm18raw_string_ostreamE>
  6c:	ldr	x10, [x10]
  70:	sub	x8, x29, #0x20
  74:	mov	w9, #0x1                   	// #1
  78:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  7c:	add	x11, x8, #0x10
  80:	str	w9, [sp, #64]
  84:	add	x9, x10, #0x10
  88:	add	x1, x1, #0x0
  8c:	add	x0, sp, #0x20
  90:	stp	x11, xzr, [x29, #-32]
  94:	stp	x9, xzr, [sp, #32]
  98:	str	x8, [sp, #72]
  9c:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  a4:	add	x1, x1, #0x0
  a8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  ac:	add	x1, sp, #0x18
  b0:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  b4:	add	x0, sp, #0x20
  b8:	bl	0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  bc:	ldr	x0, [x0]
  c0:	adrp	x1, 0 <_ZN4llvm12consumeErrorENS_5ErrorE>
  c4:	add	x1, x1, #0x0
  c8:	mov	w2, #0x2c9                 	// #713
  cc:	bl	0 <_ZN4llvm25llvm_unreachable_internalEPKcS1_j>
  d0:	add	x0, sp, #0x18
  d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
  d8:	add	x0, sp, #0x10
  dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>

Disassembly of section .text._ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_:

0000000000000000 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	ldr	x21, [x0]
  20:	mov	x19, x8
  24:	tst	x21, #0xfffffffffffffffe
  28:	and	x20, x21, #0xfffffffffffffffe
  2c:	cset	w8, ne  // ne = any
  30:	orr	x8, x20, x8
  34:	str	x8, [x0]
  38:	cbz	x20, 13c <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x13c>
  3c:	str	xzr, [x0]
  40:	ldr	x8, [x20]
  44:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  48:	mov	x0, x20
  4c:	ldr	x8, [x8, #48]
  50:	ldr	x1, [x1]
  54:	blr	x8
  58:	tbz	w0, #0, 144 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x144>
  5c:	mov	w8, #0x1                   	// #1
  60:	str	x8, [x19]
  64:	ldp	x23, x24, [x20, #8]
  68:	cmp	x23, x24
  6c:	b.eq	128 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x128>  // b.none
  70:	adrp	x21, 0 <_ZN4llvm13ErrorInfoBase2IDE>
  74:	ldr	x21, [x21]
  78:	mov	w25, #0x1                   	// #1
  7c:	mov	w8, #0x1                   	// #1
  80:	str	x8, [sp, #8]
  84:	str	xzr, [x19]
  88:	ldr	x22, [x23]
  8c:	str	xzr, [x23]
  90:	mov	x1, x21
  94:	ldr	x8, [x22]
  98:	mov	x0, x22
  9c:	ldr	x8, [x8, #48]
  a0:	blr	x8
  a4:	tbz	w0, #0, dc <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xdc>
  a8:	ldr	x8, [x22]
  ac:	mov	x0, x22
  b0:	mov	x1, x21
  b4:	ldr	x8, [x8, #48]
  b8:	blr	x8
  bc:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
  c0:	str	x25, [sp]
  c4:	cbz	x22, e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  c8:	ldr	x8, [x22]
  cc:	mov	x0, x22
  d0:	ldr	x8, [x8, #8]
  d4:	blr	x8
  d8:	b	e4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0xe4>
  dc:	orr	x8, x22, #0x1
  e0:	str	x8, [sp]
  e4:	add	x8, x29, #0x18
  e8:	add	x0, sp, #0x8
  ec:	mov	x1, sp
  f0:	bl	0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
  f4:	ldr	x8, [x19]
  f8:	cbnz	x8, 1d0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d0>
  fc:	ldr	x8, [x29, #24]
 100:	ldr	x9, [sp]
 104:	str	xzr, [x29, #24]
 108:	orr	x8, x8, #0x1
 10c:	str	x8, [x19]
 110:	cbnz	x9, 1d8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1d8>
 114:	ldr	x9, [sp, #8]
 118:	cbnz	x9, 1e0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e0>
 11c:	add	x23, x23, #0x8
 120:	cmp	x24, x23
 124:	b.ne	80 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x80>  // b.any
 128:	ldr	x8, [x20]
 12c:	mov	x0, x20
 130:	ldr	x8, [x8, #8]
 134:	blr	x8
 138:	b	1b4 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b4>
 13c:	mov	w8, #0x1                   	// #1
 140:	b	1b0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1b0>
 144:	ldr	x8, [x20]
 148:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 14c:	mov	x0, x20
 150:	ldr	x8, [x8, #48]
 154:	ldr	x1, [x1]
 158:	blr	x8
 15c:	tbz	w0, #0, 1ac <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1ac>
 160:	ldr	x8, [x20]
 164:	adrp	x1, 0 <_ZN4llvm13ErrorInfoBase2IDE>
 168:	mov	x0, x20
 16c:	ldr	x8, [x8, #48]
 170:	ldr	x1, [x1]
 174:	blr	x8
 178:	tbz	w0, #0, 1e8 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_+0x1e8>
 17c:	mov	w8, #0x1                   	// #1
 180:	str	x8, [x19]
 184:	ldr	x8, [x20]
 188:	mov	x0, x20
 18c:	ldp	x20, x19, [sp, #80]
 190:	ldp	x22, x21, [sp, #64]
 194:	ldr	x1, [x8, #8]
 198:	ldp	x24, x23, [sp, #48]
 19c:	ldr	x25, [sp, #32]
 1a0:	ldp	x29, x30, [sp, #16]
 1a4:	add	sp, sp, #0x60
 1a8:	br	x1
 1ac:	orr	x8, x21, #0x1
 1b0:	str	x8, [x19]
 1b4:	ldp	x20, x19, [sp, #80]
 1b8:	ldp	x22, x21, [sp, #64]
 1bc:	ldp	x24, x23, [sp, #48]
 1c0:	ldr	x25, [sp, #32]
 1c4:	ldp	x29, x30, [sp, #16]
 1c8:	add	sp, sp, #0x60
 1cc:	ret
 1d0:	mov	x0, x19
 1d4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1d8:	mov	x0, sp
 1dc:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e0:	add	x0, sp, #0x8
 1e4:	bl	0 <_ZNK4llvm5Error19fatalUncheckedErrorEv>
 1e8:	adrp	x0, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1ec:	adrp	x1, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f0:	adrp	x3, 0 <_ZN4llvm12handleErrorsIJZNS_12consumeErrorENS_5ErrorEEUlRKNS_13ErrorInfoBaseEE_EEES1_S1_DpOT_>
 1f4:	add	x0, x0, #0x0
 1f8:	add	x1, x1, #0x0
 1fc:	add	x3, x3, #0x0
 200:	mov	w2, #0x329                 	// #809
 204:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE:

0000000000000000 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x1]
  10:	mov	x19, x0
  14:	ands	x8, x8, #0xfffffffffffffffe
  18:	b.eq	40 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x40>  // b.none
  1c:	ldr	x9, [x8]
  20:	mov	x0, x8
  24:	mov	x1, x19
  28:	ldr	x9, [x9, #16]
  2c:	blr	x9
  30:	mov	x0, x19
  34:	ldr	x19, [sp, #16]
  38:	ldp	x29, x30, [sp], #32
  3c:	ret
  40:	ldp	x9, x8, [x19, #16]
  44:	sub	x9, x9, x8
  48:	cmp	x9, #0x6
  4c:	b.hi	74 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE+0x74>  // b.pmore
  50:	adrp	x1, 0 <_ZN4llvmlsERNS_11raw_ostreamERKNS_5ErrorE>
  54:	add	x1, x1, #0x0
  58:	mov	w2, #0x7                   	// #7
  5c:	mov	x0, x19
  60:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  64:	mov	x0, x19
  68:	ldr	x19, [sp, #16]
  6c:	ldp	x29, x30, [sp], #32
  70:	ret
  74:	mov	w9, #0x6563                	// #25955
  78:	mov	w10, #0x7573                	// #30067
  7c:	movk	w9, #0x7373, lsl #16
  80:	movk	w10, #0x6363, lsl #16
  84:	stur	w9, [x8, #3]
  88:	str	w10, [x8]
  8c:	ldr	x8, [x19, #24]
  90:	add	x8, x8, #0x7
  94:	str	x8, [x19, #24]
  98:	mov	x0, x19
  9c:	ldr	x19, [sp, #16]
  a0:	ldp	x29, x30, [sp], #32
  a4:	ret

Disassembly of section .text._ZN4llvm18raw_string_ostream3strB5cxx11Ev:

0000000000000000 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	str	x19, [sp, #16]
   8:	mov	x29, sp
   c:	ldr	x8, [x0, #24]
  10:	ldr	x9, [x0, #8]
  14:	mov	x19, x0
  18:	cmp	x8, x9
  1c:	b.eq	28 <_ZN4llvm18raw_string_ostream3strB5cxx11Ev+0x28>  // b.none
  20:	mov	x0, x19
  24:	bl	0 <_ZN4llvm11raw_ostream14flush_nonemptyEv>
  28:	ldr	x0, [x19, #40]
  2c:	ldr	x19, [sp, #16]
  30:	ldp	x29, x30, [sp], #32
  34:	ret

Disassembly of section .text._ZN4llvm9ErrorList4joinENS_5ErrorES1_:

0000000000000000 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #16]
   8:	str	x25, [sp, #32]
   c:	stp	x24, x23, [sp, #48]
  10:	stp	x22, x21, [sp, #64]
  14:	stp	x20, x19, [sp, #80]
  18:	add	x29, sp, #0x10
  1c:	mov	x19, x8
  20:	ldr	x8, [x0]
  24:	mov	x20, x1
  28:	tst	x8, #0xfffffffffffffffe
  2c:	and	x9, x8, #0xfffffffffffffffe
  30:	cset	w8, ne  // ne = any
  34:	orr	x8, x9, x8
  38:	str	x8, [x0]
  3c:	cbz	x9, 320 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x320>
  40:	ldr	x8, [x20]
  44:	mov	x21, x0
  48:	tst	x8, #0xfffffffffffffffe
  4c:	and	x9, x8, #0xfffffffffffffffe
  50:	cset	w8, ne  // ne = any
  54:	orr	x8, x9, x8
  58:	str	x8, [x20]
  5c:	cbz	x9, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
  60:	ldr	x9, [x21]
  64:	ands	x0, x9, #0xfffffffffffffffe
  68:	b.eq	128 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x128>  // b.none
  6c:	ldr	x8, [x0]
  70:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  74:	ldr	x8, [x8, #48]
  78:	ldr	x1, [x1]
  7c:	blr	x8
  80:	tbz	w0, #0, 124 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x124>
  84:	ldr	x8, [x20]
  88:	ldr	x9, [x21]
  8c:	ands	x0, x8, #0xfffffffffffffffe
  90:	and	x24, x9, #0xfffffffffffffffe
  94:	b.eq	268 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x268>  // b.none
  98:	ldr	x8, [x0]
  9c:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  a0:	ldr	x8, [x8, #48]
  a4:	ldr	x1, [x1]
  a8:	blr	x8
  ac:	ldr	x8, [x20]
  b0:	and	x22, x8, #0xfffffffffffffffe
  b4:	tbz	w0, #0, 26c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x26c>
  b8:	str	xzr, [x20]
  bc:	ldp	x20, x25, [x22, #8]
  c0:	cmp	x20, x25
  c4:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  c8:	add	x23, x24, #0x8
  cc:	b	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>
  d0:	mov	x0, x23
  d4:	mov	x2, x20
  d8:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
  dc:	add	x20, x20, #0x8
  e0:	cmp	x25, x20
  e4:	b.eq	114 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x114>  // b.none
  e8:	ldp	x1, x8, [x24, #16]
  ec:	cmp	x1, x8
  f0:	b.eq	d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xd0>  // b.none
  f4:	ldr	x8, [x20]
  f8:	str	xzr, [x20], #8
  fc:	str	x8, [x1]
 100:	ldr	x8, [x24, #16]
 104:	add	x8, x8, #0x8
 108:	str	x8, [x24, #16]
 10c:	cmp	x25, x20
 110:	b.ne	e8 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0xe8>  // b.any
 114:	cbz	x22, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 118:	ldr	x8, [x22]
 11c:	mov	x0, x22
 120:	b	2e4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e4>
 124:	ldr	x8, [x20]
 128:	ands	x0, x8, #0xfffffffffffffffe
 12c:	b.eq	1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>  // b.none
 130:	ldr	x8, [x0]
 134:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
 138:	ldr	x8, [x8, #48]
 13c:	ldr	x1, [x1]
 140:	blr	x8
 144:	tbz	w0, #0, 1f4 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1f4>
 148:	ldr	x8, [x20]
 14c:	and	x8, x8, #0xfffffffffffffffe
 150:	mov	x0, x8
 154:	ldr	x13, [x0, #8]!
 158:	ldr	x9, [x21]
 15c:	and	x11, x9, #0xfffffffffffffffe
 160:	str	x11, [x29, #24]
 164:	str	xzr, [x21]
 168:	ldr	x9, [x0]
 16c:	ldp	x10, x12, [x8, #16]
 170:	sub	x14, x13, x9
 174:	cmp	x10, x12
 178:	asr	x12, x14, #3
 17c:	b.eq	2bc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2bc>  // b.none
 180:	cmp	x10, x13
 184:	b.eq	300 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x300>  // b.none
 188:	ldur	x11, [x10, #-8]
 18c:	add	x21, x9, x12, lsl #3
 190:	stp	xzr, x11, [x10, #-8]
 194:	ldr	x10, [x8, #16]
 198:	sub	x9, x10, #0x8
 19c:	add	x11, x10, #0x8
 1a0:	sub	x10, x9, x21
 1a4:	cmp	x10, #0x1
 1a8:	str	x11, [x8, #16]
 1ac:	b.lt	298 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x298>  // b.tstop
 1b0:	lsr	x8, x10, #3
 1b4:	add	x22, x8, #0x1
 1b8:	mov	x23, x9
 1bc:	b	1d0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1d0>
 1c0:	sub	x22, x22, #0x1
 1c4:	cmp	x22, #0x1
 1c8:	mov	x9, x23
 1cc:	b.le	298 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x298>
 1d0:	ldr	x8, [x23, #-8]!
 1d4:	str	xzr, [x23]
 1d8:	ldr	x0, [x9]
 1dc:	str	x8, [x9]
 1e0:	cbz	x0, 1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1e4:	ldr	x8, [x0]
 1e8:	ldr	x8, [x8, #8]
 1ec:	blr	x8
 1f0:	b	1c0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x1c0>
 1f4:	mov	w0, #0x20                  	// #32
 1f8:	bl	0 <_Znwm>
 1fc:	ldr	x8, [x21]
 200:	add	x1, sp, #0x8
 204:	mov	x2, sp
 208:	mov	x22, x0
 20c:	and	x8, x8, #0xfffffffffffffffe
 210:	str	x8, [sp, #8]
 214:	str	xzr, [x21]
 218:	ldr	x8, [x20]
 21c:	and	x8, x8, #0xfffffffffffffffe
 220:	str	x8, [sp]
 224:	str	xzr, [x20]
 228:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 22c:	ldr	x0, [sp]
 230:	orr	x8, x22, #0x1
 234:	str	x8, [x19]
 238:	cbz	x0, 248 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x248>
 23c:	ldr	x8, [x0]
 240:	ldr	x8, [x8, #8]
 244:	blr	x8
 248:	ldr	x0, [sp, #8]
 24c:	str	xzr, [sp]
 250:	cbz	x0, 260 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x260>
 254:	ldr	x8, [x0]
 258:	ldr	x8, [x8, #8]
 25c:	blr	x8
 260:	str	xzr, [sp, #8]
 264:	b	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>
 268:	mov	x22, xzr
 26c:	str	x22, [x29, #24]
 270:	str	xzr, [x20]
 274:	ldp	x1, x8, [x24, #16]
 278:	cmp	x1, x8
 27c:	b.eq	2cc <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2cc>  // b.none
 280:	str	xzr, [x29, #24]
 284:	str	x22, [x1], #8
 288:	str	x1, [x24, #16]
 28c:	ldr	x0, [x29, #24]
 290:	cbnz	x0, 2e0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2e0>
 294:	b	2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 298:	ldr	x8, [x29, #24]
 29c:	str	xzr, [x29, #24]
 2a0:	ldr	x0, [x21]
 2a4:	str	x8, [x21]
 2a8:	cbz	x0, 30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2ac:	ldr	x8, [x0]
 2b0:	ldr	x8, [x8, #8]
 2b4:	blr	x8
 2b8:	b	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2bc:	add	x1, x9, x12, lsl #3
 2c0:	add	x2, x29, #0x18
 2c4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2c8:	b	30c <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x30c>
 2cc:	add	x0, x24, #0x8
 2d0:	add	x2, x29, #0x18
 2d4:	bl	0 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_>
 2d8:	ldr	x0, [x29, #24]
 2dc:	cbz	x0, 2ec <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x2ec>
 2e0:	ldr	x8, [x0]
 2e4:	ldr	x8, [x8, #8]
 2e8:	blr	x8
 2ec:	ldr	x8, [x21]
 2f0:	orr	x8, x8, #0x1
 2f4:	str	x8, [x19]
 2f8:	str	xzr, [x21]
 2fc:	b	330 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x330>
 300:	str	xzr, [x29, #24]
 304:	str	x11, [x10], #8
 308:	str	x10, [x8, #16]
 30c:	ldr	x0, [x29, #24]
 310:	cbz	x0, 320 <_ZN4llvm9ErrorList4joinENS_5ErrorES1_+0x320>
 314:	ldr	x8, [x0]
 318:	ldr	x8, [x8, #8]
 31c:	blr	x8
 320:	ldr	x8, [x20]
 324:	orr	x8, x8, #0x1
 328:	str	x8, [x19]
 32c:	str	xzr, [x20]
 330:	ldp	x20, x19, [sp, #80]
 334:	ldp	x22, x21, [sp, #64]
 338:	ldp	x24, x23, [sp, #48]
 33c:	ldr	x25, [sp, #32]
 340:	ldp	x29, x30, [sp, #16]
 344:	add	sp, sp, #0x60
 348:	ret

Disassembly of section .text._ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_:

0000000000000000 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	stp	x22, x21, [sp, #16]
   8:	stp	x20, x19, [sp, #32]
   c:	mov	x29, sp
  10:	adrp	x8, 0 <_ZTVN4llvm9ErrorListE>
  14:	ldr	x8, [x8]
  18:	mov	x20, x0
  1c:	mov	x19, x0
  20:	mov	x22, x1
  24:	add	x8, x8, #0x10
  28:	str	x8, [x0]
  2c:	str	xzr, [x20, #8]!
  30:	stp	xzr, xzr, [x0, #16]
  34:	ldr	x0, [x1]
  38:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  3c:	mov	x21, x2
  40:	ldr	x8, [x0]
  44:	ldr	x8, [x8, #48]
  48:	ldr	x1, [x1]
  4c:	blr	x8
  50:	tbnz	w0, #0, f8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf8>
  54:	ldr	x0, [x21]
  58:	adrp	x1, 0 <_ZN4llvm9ErrorList2IDE>
  5c:	ldr	x8, [x0]
  60:	ldr	x8, [x8, #48]
  64:	ldr	x1, [x1]
  68:	blr	x8
  6c:	tbnz	w0, #0, f8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xf8>
  70:	ldp	x1, x8, [x19, #16]
  74:	cmp	x1, x8
  78:	b.eq	c8 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xc8>  // b.none
  7c:	ldr	x8, [x22]
  80:	str	xzr, [x22]
  84:	str	x8, [x1]
  88:	ldr	x8, [x19, #16]
  8c:	add	x1, x8, #0x8
  90:	str	x1, [x19, #16]
  94:	ldr	x8, [x19, #24]
  98:	cmp	x1, x8
  9c:	b.eq	e0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xe0>  // b.none
  a0:	ldr	x8, [x21]
  a4:	str	xzr, [x21]
  a8:	str	x8, [x1]
  ac:	ldr	x8, [x19, #16]
  b0:	add	x8, x8, #0x8
  b4:	str	x8, [x19, #16]
  b8:	ldp	x20, x19, [sp, #32]
  bc:	ldp	x22, x21, [sp, #16]
  c0:	ldp	x29, x30, [sp], #48
  c4:	ret
  c8:	mov	x0, x20
  cc:	mov	x2, x22
  d0:	bl	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  d4:	ldp	x1, x8, [x19, #16]
  d8:	cmp	x1, x8
  dc:	b.ne	a0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_+0xa0>  // b.any
  e0:	mov	x0, x20
  e4:	mov	x2, x21
  e8:	ldp	x20, x19, [sp, #32]
  ec:	ldp	x22, x21, [sp, #16]
  f0:	ldp	x29, x30, [sp], #48
  f4:	b	0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  f8:	adrp	x0, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
  fc:	adrp	x1, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 100:	adrp	x3, 0 <_ZN4llvm9ErrorListC2ESt10unique_ptrINS_13ErrorInfoBaseESt14default_deleteIS2_EES5_>
 104:	add	x0, x0, #0x0
 108:	add	x1, x1, #0x0
 10c:	add	x3, x3, #0x0
 110:	mov	w2, #0x182                 	// #386
 114:	bl	0 <__assert_fail>

Disassembly of section .text._ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:

0000000000000000 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	ldp	x20, x24, [x0]
  1c:	mov	x9, #0x7ffffffffffffff8    	// #9223372036854775800
  20:	sub	x8, x24, x20
  24:	cmp	x8, x9
  28:	b.eq	144 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x144>  // b.none
  2c:	asr	x9, x8, #3
  30:	cmp	x8, #0x0
  34:	csinc	x10, x9, xzr, ne  // ne = any
  38:	adds	x9, x10, x9
  3c:	lsr	x11, x9, #60
  40:	cset	w10, cs  // cs = hs, nlast
  44:	cmp	x11, #0x0
  48:	cset	w11, ne  // ne = any
  4c:	orr	w10, w10, w11
  50:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  54:	cmp	w10, #0x0
  58:	csel	x25, x8, x9, ne  // ne = any
  5c:	sub	x8, x1, x20
  60:	mov	x23, x2
  64:	mov	x19, x0
  68:	mov	x21, x1
  6c:	asr	x26, x8, #3
  70:	cbz	x25, 84 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x84>
  74:	lsl	x0, x25, #3
  78:	bl	0 <_Znwm>
  7c:	mov	x22, x0
  80:	b	88 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x88>
  84:	mov	x22, xzr
  88:	ldr	x8, [x23]
  8c:	str	xzr, [x23]
  90:	cmp	x20, x21
  94:	mov	x23, x22
  98:	str	x8, [x22, x26, lsl #3]
  9c:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  a0:	mov	x23, x22
  a4:	mov	x26, x20
  a8:	b	bc <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xbc>
  ac:	str	xzr, [x26], #8
  b0:	cmp	x21, x26
  b4:	add	x23, x23, #0x8
  b8:	b.eq	e4 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe4>  // b.none
  bc:	ldr	x8, [x26]
  c0:	str	xzr, [x26]
  c4:	str	x8, [x23]
  c8:	ldr	x0, [x26]
  cc:	cbz	x0, ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  d0:	ldr	x8, [x0]
  d4:	ldr	x8, [x8, #8]
  d8:	blr	x8
  dc:	b	ac <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xac>
  e0:	str	xzr, [x21], #8
  e4:	cmp	x24, x21
  e8:	add	x23, x23, #0x8
  ec:	b.eq	114 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x114>  // b.none
  f0:	ldr	x8, [x21]
  f4:	str	xzr, [x21]
  f8:	str	x8, [x23]
  fc:	ldr	x0, [x21]
 100:	cbz	x0, e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 104:	ldr	x8, [x0]
 108:	ldr	x8, [x8, #8]
 10c:	blr	x8
 110:	b	e0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0xe0>
 114:	cbz	x20, 120 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_+0x120>
 118:	mov	x0, x20
 11c:	bl	0 <_ZdlPv>
 120:	add	x8, x22, x25, lsl #3
 124:	stp	x22, x23, [x19]
 128:	str	x8, [x19, #16]
 12c:	ldp	x20, x19, [sp, #64]
 130:	ldp	x22, x21, [sp, #48]
 134:	ldp	x24, x23, [sp, #32]
 138:	ldp	x26, x25, [sp, #16]
 13c:	ldp	x29, x30, [sp], #80
 140:	ret
 144:	adrp	x0, 0 <_ZNSt6vectorISt10unique_ptrIN4llvm13ErrorInfoBaseESt14default_deleteIS2_EESaIS5_EE17_M_realloc_insertIJS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_>
 148:	add	x0, x0, #0x0
 14c:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv:

0000000000000000 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	stp	x20, x19, [sp, #16]
   8:	mov	x29, sp
   c:	mov	x19, x0
  10:	bl	0 <_ZN4llvm4dbgsEv>
  14:	ldp	x9, x8, [x0, #16]
  18:	sub	x9, x9, x8
  1c:	cmp	x9, #0x39
  20:	b.hi	38 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x38>  // b.pmore
  24:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  28:	add	x1, x1, #0x0
  2c:	mov	w2, #0x3a                  	// #58
  30:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  34:	b	64 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x64>
  38:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  3c:	add	x9, x9, #0x0
  40:	ldur	q0, [x9, #42]
  44:	ldp	q2, q1, [x9, #16]
  48:	ldr	q3, [x9]
  4c:	stur	q0, [x8, #42]
  50:	stp	q2, q1, [x8, #16]
  54:	str	q3, [x8]
  58:	ldr	x8, [x0, #24]
  5c:	add	x8, x8, #0x3a
  60:	str	x8, [x0, #24]
  64:	ldrb	w20, [x19, #8]
  68:	bl	0 <_ZN4llvm4dbgsEv>
  6c:	ldp	x9, x8, [x0, #16]
  70:	sub	x9, x9, x8
  74:	tbnz	w20, #0, 94 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x94>
  78:	cmp	x9, #0x82
  7c:	b.hi	d4 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0xd4>  // b.pmore
  80:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  84:	add	x1, x1, #0x0
  88:	mov	w2, #0x83                  	// #131
  8c:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  90:	bl	0 <abort>
  94:	cmp	x9, #0x26
  98:	b.hi	118 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x118>  // b.pmore
  9c:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  a0:	add	x1, x1, #0x0
  a4:	mov	w2, #0x27                  	// #39
  a8:	bl	0 <_ZN4llvm11raw_ostream5writeEPKcm>
  ac:	ldrb	w8, [x19, #8]
  b0:	tbz	w8, #0, 144 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0x144>
  b4:	ldr	x19, [x19]
  b8:	bl	0 <_ZN4llvm4dbgsEv>
  bc:	ldr	x8, [x19]
  c0:	mov	x1, x0
  c4:	mov	x0, x19
  c8:	ldr	x8, [x8, #16]
  cc:	blr	x8
  d0:	bl	0 <abort>
  d4:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
  d8:	add	x9, x9, #0x0
  dc:	ldp	q1, q0, [x9, #32]
  e0:	ldp	q2, q3, [x9]
  e4:	stp	q1, q0, [x8, #32]
  e8:	ldp	q0, q1, [x9, #96]
  ec:	stp	q2, q3, [x8]
  f0:	ldp	q2, q3, [x9, #64]
  f4:	mov	w9, #0x2964                	// #10596
  f8:	movk	w9, #0xa2e, lsl #16
  fc:	stur	w9, [x8, #127]
 100:	stp	q0, q1, [x8, #96]
 104:	stp	q2, q3, [x8, #64]
 108:	ldr	x8, [x0, #24]
 10c:	add	x8, x8, #0x83
 110:	str	x8, [x0, #24]
 114:	bl	0 <abort>
 118:	adrp	x9, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 11c:	add	x9, x9, #0x0
 120:	ldur	x10, [x9, #31]
 124:	ldp	q1, q0, [x9]
 128:	stur	x10, [x8, #31]
 12c:	stp	q1, q0, [x8]
 130:	ldr	x8, [x0, #24]
 134:	add	x8, x8, #0x27
 138:	str	x8, [x0, #24]
 13c:	ldrb	w8, [x19, #8]
 140:	tbnz	w8, #0, b4 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv+0xb4>
 144:	adrp	x0, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 148:	adrp	x1, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 14c:	adrp	x3, 0 <_ZNK4llvm8ExpectedINS_11APFloatBase8opStatusEE22fatalUncheckedExpectedEv>
 150:	add	x0, x0, #0x0
 154:	add	x1, x1, #0x0
 158:	add	x3, x3, #0x0
 15c:	mov	w2, #0x281                 	// #641
 160:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_:

0000000000000000 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	stp	x24, x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	ldr	x8, [x0]
  18:	ldr	w9, [x0, #8]
  1c:	mov	w10, #0x28                  	// #40
  20:	mov	x20, x0
  24:	mov	x21, x2
  28:	umaddl	x10, w9, w10, x8
  2c:	cmp	x10, x1
  30:	b.eq	1d0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1d0>  // b.none
  34:	mov	x19, x1
  38:	cmp	x8, x1
  3c:	b.hi	2b0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x2b0>  // b.pmore
  40:	cmp	x10, x19
  44:	b.cc	2d0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x2d0>  // b.lo, b.ul, b.last
  48:	ldr	w10, [x20, #12]
  4c:	cmp	w9, w10
  50:	b.cc	70 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x70>  // b.lo, b.ul, b.last
  54:	mov	x0, x20
  58:	mov	x1, xzr
  5c:	sub	x19, x19, x8
  60:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
  64:	ldr	x8, [x20]
  68:	ldr	w9, [x20, #8]
  6c:	add	x19, x8, x19
  70:	cbz	w9, 2f0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x2f0>
  74:	mov	w10, #0x28                  	// #40
  78:	madd	x10, x9, x10, x8
  7c:	ldur	x12, [x10, #-24]
  80:	ldur	q0, [x10, #-40]
  84:	ldur	w13, [x10, #-8]
  88:	mov	w11, #0x28                  	// #40
  8c:	madd	x8, x9, x11, x8
  90:	str	x12, [x10, #16]
  94:	str	q0, [x10]
  98:	str	w13, [x8, #32]
  9c:	ldur	x9, [x10, #-16]
  a0:	str	x9, [x8, #24]
  a4:	stur	wzr, [x10, #-8]
  a8:	ldr	x9, [x20]
  ac:	ldr	w8, [x20, #8]
  b0:	madd	x9, x8, x11, x9
  b4:	sub	x22, x9, #0x28
  b8:	sub	x9, x22, x19
  bc:	cmp	x9, #0x1
  c0:	b.lt	134 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x134>  // b.tstop
  c4:	mov	x8, #0xcccccccccccccccc    	// #-3689348814741910324
  c8:	movk	x8, #0xcccd
  cc:	umulh	x8, x9, x8
  d0:	lsr	x8, x8, #5
  d4:	add	x23, x8, #0x1
  d8:	b	100 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x100>
  dc:	ldur	x8, [x22, #-16]
  e0:	ldur	w9, [x22, #-8]
  e4:	sub	x23, x23, #0x1
  e8:	cmp	x23, #0x1
  ec:	str	x8, [x22, #24]
  f0:	str	w9, [x22, #32]
  f4:	stur	wzr, [x22, #-8]
  f8:	mov	x22, x24
  fc:	b.le	130 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x130>
 100:	ldr	w8, [x22, #32]
 104:	ldur	q0, [x22, #-40]
 108:	ldur	x9, [x22, #-24]
 10c:	sub	x24, x22, #0x28
 110:	cmp	w8, #0x41
 114:	str	q0, [x22]
 118:	str	x9, [x22, #16]
 11c:	b.cc	dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xdc>  // b.lo, b.ul, b.last
 120:	ldr	x0, [x22, #24]
 124:	cbz	x0, dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xdc>
 128:	bl	0 <_ZdaPv>
 12c:	b	dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0xdc>
 130:	ldr	w8, [x20, #8]
 134:	ldr	w9, [x20, #12]
 138:	cmp	w8, w9
 13c:	b.cs	290 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x290>  // b.hs, b.nlast
 140:	add	w8, w8, #0x1
 144:	cmp	x19, x21
 148:	str	w8, [x20, #8]
 14c:	b.hi	168 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x168>  // b.pmore
 150:	ldr	x9, [x20]
 154:	mov	w10, #0x28                  	// #40
 158:	umaddl	x8, w8, w10, x9
 15c:	add	x9, x21, #0x28
 160:	cmp	x8, x21
 164:	csel	x21, x9, x21, hi  // hi = pmore
 168:	ldr	w9, [x19, #32]
 16c:	ldr	x8, [x21, #16]
 170:	ldr	q0, [x21]
 174:	add	x0, x19, #0x18
 178:	cmp	w9, #0x40
 17c:	str	x8, [x19, #16]
 180:	str	q0, [x19]
 184:	b.hi	1c4 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1c4>  // b.pmore
 188:	ldr	w8, [x21, #32]
 18c:	cmp	w8, #0x40
 190:	b.hi	1c4 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1c4>  // b.pmore
 194:	ldr	x8, [x21, #24]
 198:	mov	x10, #0xffffffffffffffff    	// #-1
 19c:	str	x8, [x19, #24]
 1a0:	ldr	w9, [x21, #32]
 1a4:	neg	w11, w9
 1a8:	cmp	w9, #0x40
 1ac:	lsr	x10, x10, x11
 1b0:	str	w9, [x19, #32]
 1b4:	b.hi	258 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x258>  // b.pmore
 1b8:	and	x8, x10, x8
 1bc:	str	x8, [x0]
 1c0:	b	240 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x240>
 1c4:	add	x1, x21, #0x18
 1c8:	bl	0 <_ZN4llvm5APInt14AssignSlowCaseERKS0_>
 1cc:	b	240 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x240>
 1d0:	ldr	w10, [x20, #12]
 1d4:	cmp	w9, w10
 1d8:	b.cs	278 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x278>  // b.hs, b.nlast
 1dc:	ldr	x10, [x21, #16]
 1e0:	ldr	q0, [x21]
 1e4:	mov	w11, #0x28                  	// #40
 1e8:	madd	x8, x9, x11, x8
 1ec:	str	x10, [x8, #16]
 1f0:	str	q0, [x8]
 1f4:	ldr	w9, [x21, #32]
 1f8:	add	x0, x8, #0x18
 1fc:	add	x1, x21, #0x18
 200:	cmp	w9, #0x40
 204:	str	w9, [x8, #32]
 208:	b.hi	218 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x218>  // b.pmore
 20c:	ldr	x8, [x1]
 210:	str	x8, [x0]
 214:	b	21c <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x21c>
 218:	bl	0 <_ZN4llvm5APInt12initSlowCaseERKS0_>
 21c:	ldp	w8, w9, [x20, #8]
 220:	cmp	w8, w9
 224:	b.cs	290 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x290>  // b.hs, b.nlast
 228:	ldr	x9, [x20]
 22c:	add	x8, x8, #0x1
 230:	mov	w10, #0x28                  	// #40
 234:	str	w8, [x20, #8]
 238:	madd	x8, x8, x10, x9
 23c:	sub	x19, x8, #0x28
 240:	mov	x0, x19
 244:	ldp	x20, x19, [sp, #48]
 248:	ldp	x22, x21, [sp, #32]
 24c:	ldp	x24, x23, [sp, #16]
 250:	ldp	x29, x30, [sp], #64
 254:	ret
 258:	add	x9, x9, #0x3f
 25c:	lsr	x9, x9, #6
 260:	sub	w9, w9, #0x1
 264:	lsl	x9, x9, #3
 268:	ldr	x11, [x8, x9]
 26c:	and	x10, x11, x10
 270:	str	x10, [x8, x9]
 274:	b	240 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x240>
 278:	mov	x0, x20
 27c:	mov	x1, xzr
 280:	bl	0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 284:	ldr	w9, [x20, #8]
 288:	ldr	x8, [x20]
 28c:	b	1dc <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_+0x1dc>
 290:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 294:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 298:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 29c:	add	x0, x0, #0x0
 2a0:	add	x1, x1, #0x0
 2a4:	add	x3, x3, #0x0
 2a8:	mov	w2, #0x43                  	// #67
 2ac:	bl	0 <__assert_fail>
 2b0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2b4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2b8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2bc:	add	x0, x0, #0x0
 2c0:	add	x1, x1, #0x0
 2c4:	add	x3, x3, #0x0
 2c8:	mov	w2, #0x1f7                 	// #503
 2cc:	bl	0 <__assert_fail>
 2d0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2d4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2d8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2dc:	add	x0, x0, #0x0
 2e0:	add	x1, x1, #0x0
 2e4:	add	x3, x3, #0x0
 2e8:	mov	w2, #0x1f8                 	// #504
 2ec:	bl	0 <__assert_fail>
 2f0:	adrp	x0, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2f4:	adrp	x1, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2f8:	adrp	x3, 0 <_ZN4llvm15SmallVectorImplINS_8AsmTokenEE6insertEPS1_RKS1_>
 2fc:	add	x0, x0, #0x0
 300:	add	x1, x1, #0x0
 304:	add	x3, x3, #0x0
 308:	mov	w2, #0xa7                  	// #167
 30c:	bl	0 <__assert_fail>

Disassembly of section .text._ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm:

0000000000000000 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>:
   0:	stp	x29, x30, [sp, #-64]!
   4:	str	x23, [sp, #16]
   8:	stp	x22, x21, [sp, #32]
   c:	stp	x20, x19, [sp, #48]
  10:	mov	x29, sp
  14:	mov	x20, x1
  18:	lsr	x8, x1, #32
  1c:	mov	x19, x0
  20:	cbz	x8, 34 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x34>
  24:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  28:	add	x0, x0, #0x0
  2c:	mov	w1, #0x1                   	// #1
  30:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  34:	ldr	w8, [x19, #12]
  38:	add	x8, x8, #0x2
  3c:	orr	x8, x8, x8, lsr #1
  40:	orr	x8, x8, x8, lsr #2
  44:	orr	x8, x8, x8, lsr #4
  48:	orr	x8, x8, x8, lsr #8
  4c:	orr	x8, x8, x8, lsr #16
  50:	orr	x8, x8, x8, lsr #32
  54:	add	x9, x8, #0x1
  58:	cmp	x9, x20
  5c:	csinc	x8, x20, x8, cc  // cc = lo, ul, last
  60:	mov	w9, #0xffffffff            	// #-1
  64:	cmp	x8, x9
  68:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  6c:	add	x8, x22, x22, lsl #2
  70:	lsl	x0, x8, #3
  74:	bl	0 <malloc>
  78:	mov	x20, x0
  7c:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  80:	cbz	x22, 9c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x9c>
  84:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  88:	add	x0, x0, #0x0
  8c:	mov	w1, #0x1                   	// #1
  90:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  94:	mov	x20, xzr
  98:	b	bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  9c:	mov	w0, #0x1                   	// #1
  a0:	bl	0 <malloc>
  a4:	mov	x20, x0
  a8:	cbnz	x0, bc <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xbc>
  ac:	adrp	x0, 0 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm>
  b0:	add	x0, x0, #0x0
  b4:	mov	w1, #0x1                   	// #1
  b8:	bl	0 <_ZN4llvm22report_bad_alloc_errorEPKcb>
  bc:	ldr	w8, [x19, #8]
  c0:	ldr	x21, [x19]
  c4:	cbz	w8, 14c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x14c>
  c8:	mov	w9, #0x28                  	// #40
  cc:	madd	x8, x8, x9, x21
  d0:	mov	x9, x20
  d4:	ldr	x10, [x21, #16]
  d8:	ldr	q0, [x21]
  dc:	str	x10, [x9, #16]
  e0:	str	q0, [x9]
  e4:	ldr	w10, [x21, #32]
  e8:	str	w10, [x9, #32]
  ec:	ldr	x10, [x21, #24]
  f0:	str	x10, [x9, #24]
  f4:	str	wzr, [x21, #32]
  f8:	add	x21, x21, #0x28
  fc:	cmp	x21, x8
 100:	add	x9, x9, #0x28
 104:	b.ne	d4 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0xd4>  // b.any
 108:	ldr	w8, [x19, #8]
 10c:	ldr	x21, [x19]
 110:	cbz	w8, 14c <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x14c>
 114:	add	x8, x8, x8, lsl #2
 118:	lsl	x23, x8, #3
 11c:	b	128 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x128>
 120:	subs	x23, x23, #0x28
 124:	b.eq	148 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x148>  // b.none
 128:	add	x8, x21, x23
 12c:	ldur	w9, [x8, #-8]
 130:	cmp	w9, #0x41
 134:	b.cc	120 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x120>  // b.lo, b.ul, b.last
 138:	ldur	x0, [x8, #-16]
 13c:	cbz	x0, 120 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x120>
 140:	bl	0 <_ZdaPv>
 144:	b	120 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x120>
 148:	ldr	x21, [x19]
 14c:	add	x8, x19, #0x10
 150:	cmp	x21, x8
 154:	b.eq	160 <_ZN4llvm23SmallVectorTemplateBaseINS_8AsmTokenELb0EE4growEm+0x160>  // b.none
 158:	mov	x0, x21
 15c:	bl	0 <free>
 160:	str	x20, [x19]
 164:	str	w22, [x19, #12]
 168:	ldp	x20, x19, [sp, #48]
 16c:	ldp	x22, x21, [sp, #32]
 170:	ldr	x23, [sp, #16]
 174:	ldp	x29, x30, [sp], #64
 178:	ret

Disassembly of section .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag:

0000000000000000 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	add	x29, sp, #0x10
  18:	sub	x8, x2, x1
  1c:	asr	x22, x8, #4
  20:	lsr	x9, x22, #58
  24:	cbnz	x9, 11c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x11c>
  28:	mov	x20, x2
  2c:	mov	x21, x1
  30:	mov	x19, x0
  34:	cbz	x8, 44 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x44>
  38:	lsl	x0, x8, #1
  3c:	bl	0 <_Znwm>
  40:	b	48 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x48>
  44:	mov	x0, xzr
  48:	add	x8, x0, x22, lsl #5
  4c:	cmp	x21, x20
  50:	str	x0, [x19]
  54:	str	x8, [x19, #16]
  58:	b.eq	100 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x100>  // b.none
  5c:	add	x24, x0, #0x8
  60:	b	8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x8c>
  64:	mov	x1, x22
  68:	mov	x2, x23
  6c:	bl	0 <memcpy>
  70:	ldr	x8, [sp, #8]
  74:	ldur	x9, [x24, #-8]
  78:	str	x8, [x24], #32
  7c:	strb	wzr, [x9, x8]
  80:	add	x21, x21, #0x10
  84:	cmp	x20, x21
  88:	b.eq	fc <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xfc>  // b.none
  8c:	ldr	x22, [x21]
  90:	cbz	x22, e0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xe0>
  94:	ldr	x23, [x21, #8]
  98:	add	x0, x24, #0x8
  9c:	stur	x0, [x24, #-8]
  a0:	cmp	x23, #0x10
  a4:	str	x23, [sp, #8]
  a8:	b.cc	c8 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0xc8>  // b.lo, b.ul, b.last
  ac:	sub	x0, x24, #0x8
  b0:	add	x1, sp, #0x8
  b4:	mov	x2, xzr
  b8:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  bc:	stur	x0, [x24, #-8]
  c0:	ldr	x8, [sp, #8]
  c4:	str	x8, [x24, #8]
  c8:	cbz	x23, 70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x70>
  cc:	cmp	x23, #0x1
  d0:	b.ne	64 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x64>  // b.any
  d4:	ldrb	w8, [x22]
  d8:	strb	w8, [x0]
  dc:	b	70 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x70>
  e0:	mov	x8, x24
  e4:	strb	wzr, [x8, #8]!
  e8:	stp	x8, xzr, [x24, #-8]
  ec:	add	x21, x21, #0x10
  f0:	cmp	x20, x21
  f4:	add	x24, x24, #0x20
  f8:	b.ne	8c <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag+0x8c>  // b.any
  fc:	sub	x0, x24, #0x8
 100:	str	x0, [x19, #8]
 104:	ldp	x20, x19, [sp, #64]
 108:	ldp	x22, x21, [sp, #48]
 10c:	ldp	x24, x23, [sp, #32]
 110:	ldp	x29, x30, [sp, #16]
 114:	add	sp, sp, #0x50
 118:	ret
 11c:	adrp	x0, 0 <_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_range_initializeIN9__gnu_cxx17__normal_iteratorIPN4llvm9StringRefES_ISC_SaISC_EEEEEEvT_SH_St20forward_iterator_tag>
 120:	add	x0, x0, #0x0
 124:	bl	0 <_ZSt20__throw_length_errorPKc>

Disassembly of section .text._ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	cmp	x8, #0x40
  28:	mov	x21, x2
  2c:	b.lt	15c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>  // b.tstop
  30:	asr	x23, x8, #6
  34:	cbz	x21, 120 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x120>
  38:	mov	x0, x21
  3c:	bl	0 <strlen>
  40:	mov	x22, x0
  44:	add	x25, x23, #0x1
  48:	b	5c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x5c>
  4c:	sub	x25, x25, #0x1
  50:	cmp	x25, #0x1
  54:	add	x19, x19, #0x40
  58:	b.le	15c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>
  5c:	ldr	x2, [x19, #8]
  60:	cmp	x2, x22
  64:	b.ne	7c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x7c>  // b.any
  68:	cbz	x2, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  6c:	ldr	x0, [x19]
  70:	mov	x1, x21
  74:	bl	0 <bcmp>
  78:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  7c:	mov	x26, x19
  80:	ldr	x24, [x26, #16]!
  84:	mov	x0, x21
  88:	ldr	x23, [x26, #8]
  8c:	bl	0 <strlen>
  90:	cmp	x23, x0
  94:	b.ne	b0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xb0>  // b.any
  98:	cbz	x23, 198 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x198>
  9c:	mov	x0, x24
  a0:	mov	x1, x21
  a4:	mov	x2, x23
  a8:	bl	0 <bcmp>
  ac:	cbz	w0, 1a0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a0>
  b0:	mov	x26, x19
  b4:	ldr	x24, [x26, #32]!
  b8:	mov	x0, x21
  bc:	ldr	x23, [x26, #8]
  c0:	bl	0 <strlen>
  c4:	cmp	x23, x0
  c8:	b.ne	e4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xe4>  // b.any
  cc:	cbz	x23, 284 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x284>
  d0:	mov	x0, x24
  d4:	mov	x1, x21
  d8:	mov	x2, x23
  dc:	bl	0 <bcmp>
  e0:	cbz	w0, 198 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x198>
  e4:	mov	x26, x19
  e8:	ldr	x24, [x26, #48]!
  ec:	mov	x0, x21
  f0:	ldr	x23, [x26, #8]
  f4:	bl	0 <strlen>
  f8:	cmp	x23, x0
  fc:	b.ne	4c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x4c>  // b.any
 100:	cbz	x23, 198 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x198>
 104:	mov	x0, x24
 108:	mov	x1, x21
 10c:	mov	x2, x23
 110:	bl	0 <bcmp>
 114:	cbnz	w0, 4c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x4c>
 118:	add	x19, x19, #0x30
 11c:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 120:	add	x8, x23, #0x1
 124:	add	x19, x19, #0x20
 128:	ldur	x9, [x19, #-24]
 12c:	cbz	x9, 274 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x274>
 130:	ldur	x9, [x19, #-8]
 134:	cbz	x9, 27c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x27c>
 138:	ldr	x9, [x19, #8]
 13c:	cbz	x9, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 140:	ldr	x9, [x19, #24]
 144:	cbz	x9, 1a0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a0>
 148:	sub	x8, x8, #0x1
 14c:	cmp	x8, #0x1
 150:	add	x19, x19, #0x40
 154:	b.gt	128 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x128>
 158:	sub	x19, x19, #0x20
 15c:	sub	x8, x20, x19
 160:	asr	x8, x8, #4
 164:	cmp	x8, #0x1
 168:	b.eq	214 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x214>  // b.none
 16c:	cmp	x8, #0x2
 170:	b.eq	1d0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1d0>  // b.none
 174:	cmp	x8, #0x3
 178:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 17c:	ldp	x23, x22, [x19]
 180:	cbz	x21, 1a8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>
 184:	mov	x0, x21
 188:	bl	0 <strlen>
 18c:	cmp	x22, x0
 190:	b.eq	1b4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>  // b.none
 194:	b	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>
 198:	mov	x19, x26
 19c:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1a0:	add	x19, x19, #0x10
 1a4:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1a8:	mov	x0, xzr
 1ac:	cmp	x22, x0
 1b0:	b.ne	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>  // b.any
 1b4:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1b8:	mov	x0, x23
 1bc:	mov	x1, x21
 1c0:	mov	x2, x22
 1c4:	bl	0 <bcmp>
 1c8:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1cc:	add	x19, x19, #0x10
 1d0:	ldp	x23, x22, [x19]
 1d4:	cbz	x21, 1ec <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1ec>
 1d8:	mov	x0, x21
 1dc:	bl	0 <strlen>
 1e0:	cmp	x22, x0
 1e4:	b.eq	1f8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1f8>  // b.none
 1e8:	b	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>
 1ec:	mov	x0, xzr
 1f0:	cmp	x22, x0
 1f4:	b.ne	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>  // b.any
 1f8:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1fc:	mov	x0, x23
 200:	mov	x1, x21
 204:	mov	x2, x22
 208:	bl	0 <bcmp>
 20c:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 210:	add	x19, x19, #0x10
 214:	ldp	x23, x22, [x19]
 218:	cbz	x21, 230 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x230>
 21c:	mov	x0, x21
 220:	bl	0 <strlen>
 224:	cmp	x22, x0
 228:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 22c:	b	23c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x23c>
 230:	mov	x0, xzr
 234:	cmp	x22, x0
 238:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 23c:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 240:	mov	x0, x23
 244:	mov	x1, x21
 248:	mov	x2, x22
 24c:	bl	0 <bcmp>
 250:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 254:	mov	x19, x20
 258:	mov	x0, x19
 25c:	ldp	x20, x19, [sp, #64]
 260:	ldp	x22, x21, [sp, #48]
 264:	ldp	x24, x23, [sp, #32]
 268:	ldp	x26, x25, [sp, #16]
 26c:	ldp	x29, x30, [sp], #80
 270:	ret
 274:	sub	x19, x19, #0x20
 278:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 27c:	sub	x19, x19, #0x10
 280:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 284:	add	x19, x19, #0x20
 288:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA9_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>

Disassembly of section .text._ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag:

0000000000000000 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag>:
   0:	stp	x29, x30, [sp, #-80]!
   4:	stp	x26, x25, [sp, #16]
   8:	stp	x24, x23, [sp, #32]
   c:	stp	x22, x21, [sp, #48]
  10:	stp	x20, x19, [sp, #64]
  14:	mov	x29, sp
  18:	sub	x8, x1, x0
  1c:	mov	x20, x1
  20:	mov	x19, x0
  24:	cmp	x8, #0x40
  28:	mov	x21, x2
  2c:	b.lt	15c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>  // b.tstop
  30:	asr	x23, x8, #6
  34:	cbz	x21, 120 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x120>
  38:	mov	x0, x21
  3c:	bl	0 <strlen>
  40:	mov	x22, x0
  44:	add	x25, x23, #0x1
  48:	b	5c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x5c>
  4c:	sub	x25, x25, #0x1
  50:	cmp	x25, #0x1
  54:	add	x19, x19, #0x40
  58:	b.le	15c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x15c>
  5c:	ldr	x2, [x19, #8]
  60:	cmp	x2, x22
  64:	b.ne	7c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x7c>  // b.any
  68:	cbz	x2, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  6c:	ldr	x0, [x19]
  70:	mov	x1, x21
  74:	bl	0 <bcmp>
  78:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
  7c:	mov	x26, x19
  80:	ldr	x24, [x26, #16]!
  84:	mov	x0, x21
  88:	ldr	x23, [x26, #8]
  8c:	bl	0 <strlen>
  90:	cmp	x23, x0
  94:	b.ne	b0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xb0>  // b.any
  98:	cbz	x23, 198 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x198>
  9c:	mov	x0, x24
  a0:	mov	x1, x21
  a4:	mov	x2, x23
  a8:	bl	0 <bcmp>
  ac:	cbz	w0, 1a0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a0>
  b0:	mov	x26, x19
  b4:	ldr	x24, [x26, #32]!
  b8:	mov	x0, x21
  bc:	ldr	x23, [x26, #8]
  c0:	bl	0 <strlen>
  c4:	cmp	x23, x0
  c8:	b.ne	e4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0xe4>  // b.any
  cc:	cbz	x23, 284 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x284>
  d0:	mov	x0, x24
  d4:	mov	x1, x21
  d8:	mov	x2, x23
  dc:	bl	0 <bcmp>
  e0:	cbz	w0, 198 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x198>
  e4:	mov	x26, x19
  e8:	ldr	x24, [x26, #48]!
  ec:	mov	x0, x21
  f0:	ldr	x23, [x26, #8]
  f4:	bl	0 <strlen>
  f8:	cmp	x23, x0
  fc:	b.ne	4c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x4c>  // b.any
 100:	cbz	x23, 198 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x198>
 104:	mov	x0, x24
 108:	mov	x1, x21
 10c:	mov	x2, x23
 110:	bl	0 <bcmp>
 114:	cbnz	w0, 4c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x4c>
 118:	add	x19, x19, #0x30
 11c:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 120:	add	x8, x23, #0x1
 124:	add	x19, x19, #0x20
 128:	ldur	x9, [x19, #-24]
 12c:	cbz	x9, 274 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x274>
 130:	ldur	x9, [x19, #-8]
 134:	cbz	x9, 27c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x27c>
 138:	ldr	x9, [x19, #8]
 13c:	cbz	x9, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 140:	ldr	x9, [x19, #24]
 144:	cbz	x9, 1a0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a0>
 148:	sub	x8, x8, #0x1
 14c:	cmp	x8, #0x1
 150:	add	x19, x19, #0x40
 154:	b.gt	128 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x128>
 158:	sub	x19, x19, #0x20
 15c:	sub	x8, x20, x19
 160:	asr	x8, x8, #4
 164:	cmp	x8, #0x1
 168:	b.eq	214 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x214>  // b.none
 16c:	cmp	x8, #0x2
 170:	b.eq	1d0 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1d0>  // b.none
 174:	cmp	x8, #0x3
 178:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 17c:	ldp	x23, x22, [x19]
 180:	cbz	x21, 1a8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1a8>
 184:	mov	x0, x21
 188:	bl	0 <strlen>
 18c:	cmp	x22, x0
 190:	b.eq	1b4 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1b4>  // b.none
 194:	b	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>
 198:	mov	x19, x26
 19c:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1a0:	add	x19, x19, #0x10
 1a4:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1a8:	mov	x0, xzr
 1ac:	cmp	x22, x0
 1b0:	b.ne	1cc <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1cc>  // b.any
 1b4:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1b8:	mov	x0, x23
 1bc:	mov	x1, x21
 1c0:	mov	x2, x22
 1c4:	bl	0 <bcmp>
 1c8:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1cc:	add	x19, x19, #0x10
 1d0:	ldp	x23, x22, [x19]
 1d4:	cbz	x21, 1ec <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1ec>
 1d8:	mov	x0, x21
 1dc:	bl	0 <strlen>
 1e0:	cmp	x22, x0
 1e4:	b.eq	1f8 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x1f8>  // b.none
 1e8:	b	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>
 1ec:	mov	x0, xzr
 1f0:	cmp	x22, x0
 1f4:	b.ne	210 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x210>  // b.any
 1f8:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 1fc:	mov	x0, x23
 200:	mov	x1, x21
 204:	mov	x2, x22
 208:	bl	0 <bcmp>
 20c:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 210:	add	x19, x19, #0x10
 214:	ldp	x23, x22, [x19]
 218:	cbz	x21, 230 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x230>
 21c:	mov	x0, x21
 220:	bl	0 <strlen>
 224:	cmp	x22, x0
 228:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 22c:	b	23c <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x23c>
 230:	mov	x0, xzr
 234:	cmp	x22, x0
 238:	b.ne	254 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x254>  // b.any
 23c:	cbz	x22, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 240:	mov	x0, x23
 244:	mov	x1, x21
 248:	mov	x2, x22
 24c:	bl	0 <bcmp>
 250:	cbz	w0, 258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 254:	mov	x19, x20
 258:	mov	x0, x19
 25c:	ldp	x20, x19, [sp, #64]
 260:	ldp	x22, x21, [sp, #48]
 264:	ldp	x24, x23, [sp, #32]
 268:	ldp	x26, x25, [sp, #16]
 26c:	ldp	x29, x30, [sp], #80
 270:	ret
 274:	sub	x19, x19, #0x20
 278:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 27c:	sub	x19, x19, #0x10
 280:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>
 284:	add	x19, x19, #0x20
 288:	b	258 <_ZSt9__find_ifIPN4llvm9StringRefEN9__gnu_cxx5__ops16_Iter_equals_valIA7_KcEEET_S9_S9_T0_St26random_access_iterator_tag+0x258>

Disassembly of section .text._ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE:

0000000000000000 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE>:
   0:	sub	sp, sp, #0x70
   4:	stp	x29, x30, [sp, #16]
   8:	stp	x28, x27, [sp, #32]
   c:	stp	x26, x25, [sp, #48]
  10:	stp	x24, x23, [sp, #64]
  14:	stp	x22, x21, [sp, #80]
  18:	stp	x20, x19, [sp, #96]
  1c:	add	x29, sp, #0x10
  20:	ldp	x23, x8, [x0, #112]
  24:	mov	w9, #0x28                  	// #40
  28:	mov	x19, x2
  2c:	mov	x20, x1
  30:	cmp	x8, #0x1
  34:	madd	x9, x8, x9, x23
  38:	str	x9, [sp, #8]
  3c:	b.lt	f0 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xf0>  // b.tstop
  40:	add	x8, x8, x8, lsl #2
  44:	mov	x9, #0xcccccccccccccccc    	// #-3689348814741910324
  48:	movk	x9, #0xcccd
  4c:	lsl	x8, x8, #3
  50:	umulh	x8, x8, x9
  54:	mov	w25, #0x28                  	// #40
  58:	lsr	x28, x8, #5
  5c:	mov	w27, #0x1                   	// #1
  60:	b	8c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x8c>
  64:	mov	w8, #0xffffffff            	// #-1
  68:	cneg	w8, w8, cs  // cs = hs, nlast
  6c:	mvn	x10, x24
  70:	cmn	w8, #0x1
  74:	add	x8, x28, x10
  78:	add	x9, x26, #0x28
  7c:	csel	x28, x8, x24, eq  // eq = none
  80:	csel	x23, x9, x23, eq  // eq = none
  84:	cmp	x28, #0x0
  88:	b.le	f0 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xf0>
  8c:	lsr	x24, x28, #1
  90:	madd	x26, x24, x25, x23
  94:	ldr	x21, [x26]
  98:	cbz	x21, b8 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xb8>
  9c:	mov	x0, x21
  a0:	bl	0 <strlen>
  a4:	mov	x22, x0
  a8:	cmp	x19, x22
  ac:	csel	x2, x19, x22, cc  // cc = lo, ul, last
  b0:	cbnz	x2, c8 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xc8>
  b4:	b	e0 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xe0>
  b8:	mov	x22, xzr
  bc:	cmp	x19, x22
  c0:	csel	x2, x19, x22, cc  // cc = lo, ul, last
  c4:	cbz	x2, e0 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0xe0>
  c8:	mov	x0, x21
  cc:	mov	x1, x20
  d0:	bl	0 <memcmp>
  d4:	cmp	w0, #0x0
  d8:	cneg	w8, w27, lt  // lt = tstop
  dc:	cbnz	w0, 6c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x6c>
  e0:	cmp	x22, x19
  e4:	b.ne	64 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x64>  // b.any
  e8:	mov	w8, wzr
  ec:	b	6c <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x6c>
  f0:	ldr	x8, [sp, #8]
  f4:	cmp	x23, x8
  f8:	b.eq	140 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x140>  // b.none
  fc:	ldr	x21, [x23]
 100:	cbz	x21, 134 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x134>
 104:	mov	x0, x21
 108:	bl	0 <strlen>
 10c:	cmp	x0, x19
 110:	b.ne	140 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x140>  // b.any
 114:	cbz	x19, 164 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x164>
 118:	mov	x0, x21
 11c:	mov	x1, x20
 120:	mov	x2, x19
 124:	bl	0 <bcmp>
 128:	cmp	w0, #0x0
 12c:	cset	w0, eq  // eq = none
 130:	b	144 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x144>
 134:	mov	x0, xzr
 138:	cmp	x0, x19
 13c:	b.eq	114 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x114>  // b.none
 140:	mov	w0, wzr
 144:	ldp	x20, x19, [sp, #96]
 148:	ldp	x22, x21, [sp, #80]
 14c:	ldp	x24, x23, [sp, #64]
 150:	ldp	x26, x25, [sp, #48]
 154:	ldp	x28, x27, [sp, #32]
 158:	ldp	x29, x30, [sp, #16]
 15c:	add	sp, sp, #0x70
 160:	ret
 164:	mov	w0, #0x1                   	// #1
 168:	b	144 <_ZNK4llvm15MCSubtargetInfo16isCPUStringValidENS_9StringRefE+0x144>

Disassembly of section .text._ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE:

0000000000000000 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE>:
   0:	sub	sp, sp, #0x60
   4:	stp	x29, x30, [sp, #48]
   8:	stp	x22, x21, [sp, #64]
   c:	stp	x20, x19, [sp, #80]
  10:	add	x29, sp, #0x30
  14:	add	x8, sp, #0x8
  18:	mov	x20, x0
  1c:	add	x19, x8, #0x10
  20:	str	x19, [sp, #8]
  24:	cbz	x1, 74 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x74>
  28:	mov	x21, x2
  2c:	mov	x22, x1
  30:	cmp	x2, #0x10
  34:	mov	x0, x19
  38:	stur	x2, [x29, #-8]
  3c:	b.cc	5c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x5c>  // b.lo, b.ul, b.last
  40:	add	x0, sp, #0x8
  44:	sub	x1, x29, #0x8
  48:	mov	x2, xzr
  4c:	bl	0 <_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm>
  50:	ldur	x8, [x29, #-8]
  54:	str	x0, [sp, #8]
  58:	str	x8, [sp, #24]
  5c:	cbz	x21, 8c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x8c>
  60:	cmp	x21, #0x1
  64:	b.ne	80 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x80>  // b.any
  68:	ldrb	w8, [x22]
  6c:	strb	w8, [x0]
  70:	b	8c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x8c>
  74:	str	xzr, [sp, #16]
  78:	strb	wzr, [sp, #24]
  7c:	b	d8 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xd8>
  80:	mov	x1, x22
  84:	mov	x2, x21
  88:	bl	0 <memcpy>
  8c:	ldur	x8, [x29, #-8]
  90:	ldr	x9, [sp, #8]
  94:	str	x8, [sp, #16]
  98:	strb	wzr, [x9, x8]
  9c:	ldr	x9, [sp, #8]
  a0:	cmp	x9, x19
  a4:	b.eq	d8 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xd8>  // b.none
  a8:	ldr	x8, [x20, #16]
  ac:	add	x10, x20, #0x20
  b0:	cmp	x8, x10
  b4:	b.eq	118 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x118>  // b.none
  b8:	ldr	x10, [x20, #32]
  bc:	str	x9, [x20, #16]
  c0:	ldur	q0, [sp, #16]
  c4:	stur	q0, [x20, #24]
  c8:	cbz	x8, 12c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x12c>
  cc:	str	x8, [sp, #8]
  d0:	str	x10, [sp, #24]
  d4:	b	134 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x134>
  d8:	ldr	x2, [sp, #16]
  dc:	cbz	x2, 100 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x100>
  e0:	ldr	x0, [x20, #16]
  e4:	cmp	x2, #0x1
  e8:	b.ne	f8 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xf8>  // b.any
  ec:	ldrb	w8, [sp, #24]
  f0:	strb	w8, [x0]
  f4:	b	100 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x100>
  f8:	mov	x1, x19
  fc:	bl	0 <memcpy>
 100:	ldr	x8, [sp, #16]
 104:	ldr	x9, [x20, #16]
 108:	str	x8, [x20, #24]
 10c:	strb	wzr, [x9, x8]
 110:	ldr	x8, [sp, #8]
 114:	b	134 <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x134>
 118:	mov	x8, xzr
 11c:	str	x9, [x20, #16]
 120:	ldur	q0, [sp, #16]
 124:	stur	q0, [x20, #24]
 128:	cbnz	x8, cc <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0xcc>
 12c:	mov	x8, x19
 130:	str	x19, [sp, #8]
 134:	str	xzr, [sp, #16]
 138:	strb	wzr, [x8]
 13c:	ldr	x0, [sp, #8]
 140:	cmp	x0, x19
 144:	b.eq	14c <_ZN4llvm18MCParsedAsmOperand13setConstraintENS_9StringRefE+0x14c>  // b.none
 148:	bl	0 <_ZdlPv>
 14c:	ldp	x20, x19, [sp, #80]
 150:	ldp	x22, x21, [sp, #64]
 154:	ldp	x29, x30, [sp, #48]
 158:	add	sp, sp, #0x60
 15c:	ret
