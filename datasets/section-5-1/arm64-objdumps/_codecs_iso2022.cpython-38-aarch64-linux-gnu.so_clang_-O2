
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_codecs_iso2022.cpython-38-aarch64-linux-gnu.so_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001808 <.init>:
    1808:	stp	x29, x30, [sp, #-16]!
    180c:	mov	x29, sp
    1810:	bl	1940 <PyCapsule_GetPointer@plt+0x10>
    1814:	ldp	x29, x30, [sp], #16
    1818:	ret

Disassembly of section .plt:

0000000000001820 <PyObject_GetAttrString@plt-0x20>:
    1820:	stp	x16, x30, [sp, #-16]!
    1824:	adrp	x16, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1828:	ldr	x17, [x16, #4088]
    182c:	add	x16, x16, #0xff8
    1830:	br	x17
    1834:	nop
    1838:	nop
    183c:	nop

0000000000001840 <PyObject_GetAttrString@plt>:
    1840:	adrp	x16, 15000 <PyObject_GetAttrString>
    1844:	ldr	x17, [x16]
    1848:	add	x16, x16, #0x0
    184c:	br	x17

0000000000001850 <__cxa_finalize@plt>:
    1850:	adrp	x16, 15000 <PyObject_GetAttrString>
    1854:	ldr	x17, [x16, #8]
    1858:	add	x16, x16, #0x8
    185c:	br	x17

0000000000001860 <_Py_Dealloc@plt>:
    1860:	adrp	x16, 15000 <PyObject_GetAttrString>
    1864:	ldr	x17, [x16, #16]
    1868:	add	x16, x16, #0x10
    186c:	br	x17

0000000000001870 <PyErr_SetString@plt>:
    1870:	adrp	x16, 15000 <PyObject_GetAttrString>
    1874:	ldr	x17, [x16, #24]
    1878:	add	x16, x16, #0x18
    187c:	br	x17

0000000000001880 <PyCapsule_IsValid@plt>:
    1880:	adrp	x16, 15000 <PyObject_GetAttrString>
    1884:	ldr	x17, [x16, #32]
    1888:	add	x16, x16, #0x20
    188c:	br	x17

0000000000001890 <__gmon_start__@plt>:
    1890:	adrp	x16, 15000 <PyObject_GetAttrString>
    1894:	ldr	x17, [x16, #40]
    1898:	add	x16, x16, #0x28
    189c:	br	x17

00000000000018a0 <PyModule_Create2@plt>:
    18a0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18a4:	ldr	x17, [x16, #48]
    18a8:	add	x16, x16, #0x30
    18ac:	br	x17

00000000000018b0 <PyImport_ImportModule@plt>:
    18b0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18b4:	ldr	x17, [x16, #56]
    18b8:	add	x16, x16, #0x38
    18bc:	br	x17

00000000000018c0 <PyImport_ImportModuleNoBlock@plt>:
    18c0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18c4:	ldr	x17, [x16, #64]
    18c8:	add	x16, x16, #0x40
    18cc:	br	x17

00000000000018d0 <PyObject_CallFunctionObjArgs@plt>:
    18d0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18d4:	ldr	x17, [x16, #72]
    18d8:	add	x16, x16, #0x48
    18dc:	br	x17

00000000000018e0 <strcmp@plt>:
    18e0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18e4:	ldr	x17, [x16, #80]
    18e8:	add	x16, x16, #0x50
    18ec:	br	x17

00000000000018f0 <_PyUnicodeWriter_PrepareInternal@plt>:
    18f0:	adrp	x16, 15000 <PyObject_GetAttrString>
    18f4:	ldr	x17, [x16, #88]
    18f8:	add	x16, x16, #0x58
    18fc:	br	x17

0000000000001900 <_PyUnicodeWriter_WriteChar@plt>:
    1900:	adrp	x16, 15000 <PyObject_GetAttrString>
    1904:	ldr	x17, [x16, #96]
    1908:	add	x16, x16, #0x60
    190c:	br	x17

0000000000001910 <PyUnicode_AsUTF8@plt>:
    1910:	adrp	x16, 15000 <PyObject_GetAttrString>
    1914:	ldr	x17, [x16, #104]
    1918:	add	x16, x16, #0x68
    191c:	br	x17

0000000000001920 <PyCapsule_New@plt>:
    1920:	adrp	x16, 15000 <PyObject_GetAttrString>
    1924:	ldr	x17, [x16, #112]
    1928:	add	x16, x16, #0x70
    192c:	br	x17

0000000000001930 <PyCapsule_GetPointer@plt>:
    1930:	adrp	x16, 15000 <PyObject_GetAttrString>
    1934:	ldr	x17, [x16, #120]
    1938:	add	x16, x16, #0x78
    193c:	br	x17

Disassembly of section .text:

0000000000001940 <PyInit__codecs_iso2022@@Base-0xd4>:
    1940:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1944:	ldr	x0, [x0, #4048]
    1948:	cbz	x0, 1950 <PyCapsule_GetPointer@plt+0x20>
    194c:	b	1890 <__gmon_start__@plt>
    1950:	ret
    1954:	nop
    1958:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    195c:	add	x0, x0, #0x130
    1960:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1964:	add	x1, x1, #0x130
    1968:	cmp	x1, x0
    196c:	b.eq	1984 <PyCapsule_GetPointer@plt+0x54>  // b.none
    1970:	adrp	x1, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1974:	ldr	x1, [x1, #4016]
    1978:	cbz	x1, 1984 <PyCapsule_GetPointer@plt+0x54>
    197c:	mov	x16, x1
    1980:	br	x16
    1984:	ret
    1988:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    198c:	add	x0, x0, #0x130
    1990:	adrp	x1, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1994:	add	x1, x1, #0x130
    1998:	sub	x1, x1, x0
    199c:	lsr	x2, x1, #63
    19a0:	add	x1, x2, x1, asr #3
    19a4:	cmp	xzr, x1, asr #1
    19a8:	asr	x1, x1, #1
    19ac:	b.eq	19c4 <PyCapsule_GetPointer@plt+0x94>  // b.none
    19b0:	adrp	x2, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19b4:	ldr	x2, [x2, #4056]
    19b8:	cbz	x2, 19c4 <PyCapsule_GetPointer@plt+0x94>
    19bc:	mov	x16, x2
    19c0:	br	x16
    19c4:	ret
    19c8:	stp	x29, x30, [sp, #-32]!
    19cc:	mov	x29, sp
    19d0:	str	x19, [sp, #16]
    19d4:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19d8:	ldrb	w0, [x19, #304]
    19dc:	cbnz	w0, 1a04 <PyCapsule_GetPointer@plt+0xd4>
    19e0:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    19e4:	ldr	x0, [x0, #4024]
    19e8:	cbz	x0, 19f8 <PyCapsule_GetPointer@plt+0xc8>
    19ec:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    19f0:	ldr	x0, [x0, #128]
    19f4:	bl	1850 <__cxa_finalize@plt>
    19f8:	bl	1958 <PyCapsule_GetPointer@plt+0x28>
    19fc:	mov	w0, #0x1                   	// #1
    1a00:	strb	w0, [x19, #304]
    1a04:	ldr	x19, [sp, #16]
    1a08:	ldp	x29, x30, [sp], #32
    1a0c:	ret
    1a10:	b	1988 <PyCapsule_GetPointer@plt+0x58>

0000000000001a14 <PyInit__codecs_iso2022@@Base>:
    1a14:	adrp	x0, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a18:	add	x0, x0, #0x88
    1a1c:	mov	w1, #0x3f5                 	// #1013
    1a20:	b	18a0 <PyModule_Create2@plt>
    1a24:	stp	x29, x30, [sp, #-48]!
    1a28:	stp	x22, x21, [sp, #16]
    1a2c:	stp	x20, x19, [sp, #32]
    1a30:	mov	x29, sp
    1a34:	ldr	x8, [x1, #8]
    1a38:	ldrb	w8, [x8, #171]
    1a3c:	tbnz	w8, #4, 1a5c <PyInit__codecs_iso2022@@Base+0x48>
    1a40:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1a44:	ldr	x8, [x8, #4040]
    1a48:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a4c:	add	x1, x1, #0x996
    1a50:	ldr	x0, [x8]
    1a54:	bl	1870 <PyErr_SetString@plt>
    1a58:	b	1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1a5c:	mov	x0, x1
    1a60:	bl	1910 <PyUnicode_AsUTF8@plt>
    1a64:	cbz	x0, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1a68:	adrp	x22, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    1a6c:	ldr	x19, [x22, #312]
    1a70:	mov	x20, x0
    1a74:	cbz	x19, 1b18 <PyInit__codecs_iso2022@@Base+0x104>
    1a78:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a7c:	add	x0, x0, #0xa08
    1a80:	mov	x1, x20
    1a84:	bl	18e0 <strcmp@plt>
    1a88:	cbz	w0, 1b64 <PyInit__codecs_iso2022@@Base+0x150>
    1a8c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1a90:	add	x0, x0, #0xa13
    1a94:	mov	x1, x20
    1a98:	bl	18e0 <strcmp@plt>
    1a9c:	cbz	w0, 1b70 <PyInit__codecs_iso2022@@Base+0x15c>
    1aa0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1aa4:	add	x0, x0, #0xa1e
    1aa8:	mov	x1, x20
    1aac:	bl	18e0 <strcmp@plt>
    1ab0:	cbz	w0, 1b7c <PyInit__codecs_iso2022@@Base+0x168>
    1ab4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1ab8:	add	x0, x0, #0xa2b
    1abc:	mov	x1, x20
    1ac0:	bl	18e0 <strcmp@plt>
    1ac4:	cbz	w0, 1b88 <PyInit__codecs_iso2022@@Base+0x174>
    1ac8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1acc:	add	x0, x0, #0xa38
    1ad0:	mov	x1, x20
    1ad4:	bl	18e0 <strcmp@plt>
    1ad8:	cbz	w0, 1b94 <PyInit__codecs_iso2022@@Base+0x180>
    1adc:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1ae0:	add	x0, x0, #0xa48
    1ae4:	mov	x1, x20
    1ae8:	bl	18e0 <strcmp@plt>
    1aec:	cbz	w0, 1ba0 <PyInit__codecs_iso2022@@Base+0x18c>
    1af0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1af4:	add	x0, x0, #0xa55
    1af8:	mov	x1, x20
    1afc:	bl	18e0 <strcmp@plt>
    1b00:	cbz	w0, 1bac <PyInit__codecs_iso2022@@Base+0x198>
    1b04:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b08:	ldr	x8, [x8, #4064]
    1b0c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b10:	add	x1, x1, #0x9b6
    1b14:	b	1a50 <PyInit__codecs_iso2022@@Base+0x3c>
    1b18:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b1c:	add	x0, x0, #0x9e9
    1b20:	bl	18c0 <PyImport_ImportModuleNoBlock@plt>
    1b24:	cbz	x0, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1b28:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1b2c:	add	x1, x1, #0x9f9
    1b30:	mov	x21, x0
    1b34:	bl	1840 <PyObject_GetAttrString@plt>
    1b38:	str	x0, [x22, #312]
    1b3c:	ldr	x8, [x21]
    1b40:	mov	x19, x0
    1b44:	subs	x8, x8, #0x1
    1b48:	str	x8, [x21]
    1b4c:	b.ne	1b5c <PyInit__codecs_iso2022@@Base+0x148>  // b.any
    1b50:	mov	x0, x21
    1b54:	bl	1860 <_Py_Dealloc@plt>
    1b58:	ldr	x19, [x22, #312]
    1b5c:	cbnz	x19, 1a78 <PyInit__codecs_iso2022@@Base+0x64>
    1b60:	b	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>
    1b64:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b68:	add	x0, x0, #0x698
    1b6c:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b70:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b74:	add	x0, x0, #0x6e0
    1b78:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b7c:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b80:	add	x0, x0, #0x728
    1b84:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b88:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b8c:	add	x0, x0, #0x770
    1b90:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1b94:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1b98:	add	x0, x0, #0x7b8
    1b9c:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1ba0:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1ba4:	add	x0, x0, #0x800
    1ba8:	b	1bb4 <PyInit__codecs_iso2022@@Base+0x1a0>
    1bac:	adrp	x0, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    1bb0:	add	x0, x0, #0x848
    1bb4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    1bb8:	add	x1, x1, #0x9d2
    1bbc:	mov	x2, xzr
    1bc0:	bl	1920 <PyCapsule_New@plt>
    1bc4:	cbz	x0, 1bfc <PyInit__codecs_iso2022@@Base+0x1e8>
    1bc8:	mov	x20, x0
    1bcc:	mov	x0, x19
    1bd0:	mov	x1, x20
    1bd4:	mov	x2, xzr
    1bd8:	bl	18d0 <PyObject_CallFunctionObjArgs@plt>
    1bdc:	ldr	x8, [x20]
    1be0:	mov	x19, x0
    1be4:	subs	x8, x8, #0x1
    1be8:	str	x8, [x20]
    1bec:	b.ne	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>  // b.any
    1bf0:	mov	x0, x20
    1bf4:	bl	1860 <_Py_Dealloc@plt>
    1bf8:	b	1c00 <PyInit__codecs_iso2022@@Base+0x1ec>
    1bfc:	mov	x19, xzr
    1c00:	mov	x0, x19
    1c04:	ldp	x20, x19, [sp, #32]
    1c08:	ldp	x22, x21, [sp, #16]
    1c0c:	ldp	x29, x30, [sp], #48
    1c10:	ret
    1c14:	stp	x29, x30, [sp, #-32]!
    1c18:	str	x19, [sp, #16]
    1c1c:	mov	x29, sp
    1c20:	ldr	x8, [x0, #8]
    1c24:	ldrb	w9, [x8]
    1c28:	cbz	w9, 1c54 <PyInit__codecs_iso2022@@Base+0x240>
    1c2c:	add	x19, x8, #0x20
    1c30:	b	1c3c <PyInit__codecs_iso2022@@Base+0x228>
    1c34:	ldrb	w8, [x19], #32
    1c38:	cbz	w8, 1c54 <PyInit__codecs_iso2022@@Base+0x240>
    1c3c:	ldur	x8, [x19, #-24]
    1c40:	cbz	x8, 1c34 <PyInit__codecs_iso2022@@Base+0x220>
    1c44:	blr	x8
    1c48:	cbz	w0, 1c34 <PyInit__codecs_iso2022@@Base+0x220>
    1c4c:	mov	w0, #0xffffffff            	// #-1
    1c50:	b	1c58 <PyInit__codecs_iso2022@@Base+0x244>
    1c54:	mov	w0, wzr
    1c58:	ldr	x19, [sp, #16]
    1c5c:	ldp	x29, x30, [sp], #32
    1c60:	ret
    1c64:	sub	sp, sp, #0x80
    1c68:	stp	x29, x30, [sp, #32]
    1c6c:	stp	x28, x27, [sp, #48]
    1c70:	stp	x26, x25, [sp, #64]
    1c74:	stp	x24, x23, [sp, #80]
    1c78:	stp	x22, x21, [sp, #96]
    1c7c:	stp	x20, x19, [sp, #112]
    1c80:	add	x29, sp, #0x20
    1c84:	ldr	x8, [x4]
    1c88:	cmp	x8, x5
    1c8c:	b.ge	20b0 <PyInit__codecs_iso2022@@Base+0x69c>  // b.tcont
    1c90:	ldr	w9, [x29, #96]
    1c94:	mov	x20, x7
    1c98:	mov	x21, x6
    1c9c:	mov	x22, x5
    1ca0:	mov	x23, x4
    1ca4:	mov	w25, w2
    1ca8:	mov	x27, x0
    1cac:	mov	w19, #0x1                   	// #1
    1cb0:	mov	w28, #0xffff                	// #65535
    1cb4:	and	w26, w9, #0x1
    1cb8:	stp	x1, x3, [sp]
    1cbc:	cmp	w25, #0x2
    1cc0:	b.eq	1cd4 <PyInit__codecs_iso2022@@Base+0x2c0>  // b.none
    1cc4:	cmp	w25, #0x1
    1cc8:	b.ne	1cdc <PyInit__codecs_iso2022@@Base+0x2c8>  // b.any
    1ccc:	ldrb	w8, [x3, x8]
    1cd0:	b	1ce0 <PyInit__codecs_iso2022@@Base+0x2cc>
    1cd4:	ldrh	w8, [x3, x8, lsl #1]
    1cd8:	b	1ce0 <PyInit__codecs_iso2022@@Base+0x2cc>
    1cdc:	ldr	w8, [x3, x8, lsl #2]
    1ce0:	cmp	w8, #0x7f
    1ce4:	stur	w8, [x29, #-4]
    1ce8:	b.hi	1da0 <PyInit__codecs_iso2022@@Base+0x38c>  // b.pmore
    1cec:	ldrb	w8, [x27]
    1cf0:	cmp	w8, #0x42
    1cf4:	b.eq	1d34 <PyInit__codecs_iso2022@@Base+0x320>  // b.none
    1cf8:	subs	x20, x20, #0x3
    1cfc:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1d00:	ldr	x8, [x21]
    1d04:	mov	w9, #0x1b                  	// #27
    1d08:	strb	w9, [x8]
    1d0c:	ldr	x8, [x21]
    1d10:	mov	w9, #0x28                  	// #40
    1d14:	strb	w9, [x8, #1]
    1d18:	ldr	x8, [x21]
    1d1c:	mov	w9, #0x42                  	// #66
    1d20:	strb	w9, [x8, #2]
    1d24:	strb	w9, [x27]
    1d28:	ldr	x8, [x21]
    1d2c:	add	x8, x8, #0x3
    1d30:	str	x8, [x21]
    1d34:	ldrb	w8, [x27, #4]
    1d38:	tbz	w8, #0, 1d68 <PyInit__codecs_iso2022@@Base+0x354>
    1d3c:	subs	x20, x20, #0x1
    1d40:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1d44:	ldr	x8, [x21]
    1d48:	mov	w9, #0xf                   	// #15
    1d4c:	strb	w9, [x8]
    1d50:	ldrb	w8, [x27, #4]
    1d54:	and	w8, w8, #0xfe
    1d58:	strb	w8, [x27, #4]
    1d5c:	ldr	x8, [x21]
    1d60:	add	x8, x8, #0x1
    1d64:	str	x8, [x21]
    1d68:	subs	x20, x20, #0x1
    1d6c:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1d70:	ldur	w8, [x29, #-4]
    1d74:	ldr	x9, [x21]
    1d78:	strb	w8, [x9]
    1d7c:	ldr	x8, [x23]
    1d80:	add	x8, x8, #0x1
    1d84:	str	x8, [x23]
    1d88:	ldr	x9, [x21]
    1d8c:	add	x9, x9, #0x1
    1d90:	str	x9, [x21]
    1d94:	cmp	x8, x22
    1d98:	b.lt	1cbc <PyInit__codecs_iso2022@@Base+0x2a8>  // b.tstop
    1d9c:	b	20b0 <PyInit__codecs_iso2022@@Base+0x69c>
    1da0:	ldr	x24, [x1, #8]
    1da4:	ldrb	w8, [x24]
    1da8:	cbnz	w8, 1de4 <PyInit__codecs_iso2022@@Base+0x3d0>
    1dac:	b	20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    1db0:	cmp	x8, #0x1
    1db4:	mov	w8, #0x2                   	// #2
    1db8:	csinv	x8, x8, xzr, gt
    1dbc:	str	x8, [sp, #16]
    1dc0:	ldr	x8, [x24, #24]
    1dc4:	sub	x0, x29, #0x4
    1dc8:	add	x1, sp, #0x10
    1dcc:	blr	x8
    1dd0:	mvn	w8, w0
    1dd4:	tst	w8, #0xffff
    1dd8:	b.ne	1e3c <PyInit__codecs_iso2022@@Base+0x428>  // b.any
    1ddc:	ldrb	w8, [x24, #32]!
    1de0:	cbz	w8, 20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    1de4:	str	x19, [sp, #16]
    1de8:	ldr	x8, [x24, #24]
    1dec:	sub	x0, x29, #0x4
    1df0:	add	x1, sp, #0x10
    1df4:	blr	x8
    1df8:	and	w8, w0, #0xffff
    1dfc:	cmp	w8, w28
    1e00:	b.eq	1ddc <PyInit__codecs_iso2022@@Base+0x3c8>  // b.none
    1e04:	mov	w9, #0xfffe                	// #65534
    1e08:	cmp	w8, w9
    1e0c:	b.ne	1e28 <PyInit__codecs_iso2022@@Base+0x414>  // b.any
    1e10:	ldr	x8, [x23]
    1e14:	sub	x8, x22, x8
    1e18:	cmp	x8, #0x1
    1e1c:	b.gt	1db0 <PyInit__codecs_iso2022@@Base+0x39c>
    1e20:	cbnz	w26, 1db0 <PyInit__codecs_iso2022@@Base+0x39c>
    1e24:	b	20d8 <PyInit__codecs_iso2022@@Base+0x6c4>
    1e28:	ubfx	w9, w0, #8, #8
    1e2c:	mov	w8, #0x1                   	// #1
    1e30:	ldrb	w10, [x24]
    1e34:	cbnz	w10, 1e4c <PyInit__codecs_iso2022@@Base+0x438>
    1e38:	b	20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    1e3c:	ldr	x8, [sp, #16]
    1e40:	ubfx	w9, w0, #8, #8
    1e44:	ldrb	w10, [x24]
    1e48:	cbz	w10, 20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    1e4c:	ldrb	w11, [x24, #1]
    1e50:	cmp	w11, #0x1
    1e54:	b.eq	1ecc <PyInit__codecs_iso2022@@Base+0x4b8>  // b.none
    1e58:	cbnz	w11, 20e8 <PyInit__codecs_iso2022@@Base+0x6d4>
    1e5c:	ldrb	w11, [x27, #4]
    1e60:	tbz	w11, #0, 1e94 <PyInit__codecs_iso2022@@Base+0x480>
    1e64:	subs	x20, x20, #0x1
    1e68:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1e6c:	ldr	x10, [x21]
    1e70:	mov	w11, #0xf                   	// #15
    1e74:	strb	w11, [x10]
    1e78:	ldrb	w10, [x27, #4]
    1e7c:	and	w10, w10, #0xfe
    1e80:	strb	w10, [x27, #4]
    1e84:	ldr	x10, [x21]
    1e88:	add	x10, x10, #0x1
    1e8c:	str	x10, [x21]
    1e90:	ldrb	w10, [x24]
    1e94:	ldrb	w11, [x27]
    1e98:	cmp	w11, w10
    1e9c:	b.eq	2040 <PyInit__codecs_iso2022@@Base+0x62c>  // b.none
    1ea0:	ldrb	w11, [x24, #2]
    1ea4:	cmp	w11, #0x1
    1ea8:	b.ne	1fa4 <PyInit__codecs_iso2022@@Base+0x590>  // b.any
    1eac:	subs	x20, x20, #0x3
    1eb0:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1eb4:	ldr	x10, [x21]
    1eb8:	mov	w11, #0x1b                  	// #27
    1ebc:	strb	w11, [x10]
    1ec0:	ldr	x10, [x21]
    1ec4:	mov	w11, #0x28                  	// #40
    1ec8:	b	1fc8 <PyInit__codecs_iso2022@@Base+0x5b4>
    1ecc:	ldrb	w11, [x27, #1]
    1ed0:	cmp	w11, w10
    1ed4:	b.eq	1f70 <PyInit__codecs_iso2022@@Base+0x55c>  // b.none
    1ed8:	ldrb	w10, [x24, #2]
    1edc:	cmp	w10, #0x1
    1ee0:	b.ne	1f0c <PyInit__codecs_iso2022@@Base+0x4f8>  // b.any
    1ee4:	cmp	x20, #0x3
    1ee8:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1eec:	ldr	x11, [x21]
    1ef0:	mov	w14, #0x1b                  	// #27
    1ef4:	mov	x10, #0xfffffffffffffffd    	// #-3
    1ef8:	mov	w13, #0x1                   	// #1
    1efc:	mov	w12, #0x2                   	// #2
    1f00:	strb	w14, [x11]
    1f04:	mov	w11, #0x3                   	// #3
    1f08:	b	1f3c <PyInit__codecs_iso2022@@Base+0x528>
    1f0c:	cmp	x20, #0x4
    1f10:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1f14:	ldr	x10, [x21]
    1f18:	mov	w11, #0x1b                  	// #27
    1f1c:	mov	w14, #0x24                  	// #36
    1f20:	mov	w13, #0x2                   	// #2
    1f24:	strb	w11, [x10]
    1f28:	ldr	x11, [x21]
    1f2c:	mov	x10, #0xfffffffffffffffc    	// #-4
    1f30:	mov	w12, #0x3                   	// #3
    1f34:	strb	w14, [x11, #1]
    1f38:	mov	w11, #0x4                   	// #4
    1f3c:	ldr	x14, [x21]
    1f40:	mov	w15, #0x29                  	// #41
    1f44:	add	x20, x20, x10
    1f48:	strb	w15, [x14, x13]
    1f4c:	ldrb	w13, [x24]
    1f50:	ldr	x14, [x21]
    1f54:	and	w13, w13, #0x7f
    1f58:	strb	w13, [x14, x12]
    1f5c:	ldrb	w12, [x24]
    1f60:	strb	w12, [x27, #1]
    1f64:	ldr	x12, [x21]
    1f68:	add	x11, x12, x11
    1f6c:	str	x11, [x21]
    1f70:	ldrb	w10, [x27, #4]
    1f74:	tbnz	w10, #0, 2040 <PyInit__codecs_iso2022@@Base+0x62c>
    1f78:	subs	x20, x20, #0x1
    1f7c:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1f80:	ldr	x10, [x21]
    1f84:	mov	w11, #0xe                   	// #14
    1f88:	strb	w11, [x10]
    1f8c:	ldrb	w10, [x27, #4]
    1f90:	orr	w10, w10, #0x1
    1f94:	strb	w10, [x27, #4]
    1f98:	ldr	x10, [x21]
    1f9c:	add	x10, x10, #0x1
    1fa0:	b	203c <PyInit__codecs_iso2022@@Base+0x628>
    1fa4:	cmp	w10, #0xc2
    1fa8:	b.ne	1ff0 <PyInit__codecs_iso2022@@Base+0x5dc>  // b.any
    1fac:	subs	x20, x20, #0x3
    1fb0:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1fb4:	ldr	x10, [x21]
    1fb8:	mov	w11, #0x1b                  	// #27
    1fbc:	strb	w11, [x10]
    1fc0:	ldr	x10, [x21]
    1fc4:	mov	w11, #0x24                  	// #36
    1fc8:	strb	w11, [x10, #1]
    1fcc:	ldrb	w10, [x24]
    1fd0:	ldr	x11, [x21]
    1fd4:	and	w10, w10, #0x7f
    1fd8:	strb	w10, [x11, #2]
    1fdc:	ldrb	w10, [x24]
    1fe0:	strb	w10, [x27]
    1fe4:	ldr	x10, [x21]
    1fe8:	add	x10, x10, #0x3
    1fec:	b	203c <PyInit__codecs_iso2022@@Base+0x628>
    1ff0:	subs	x20, x20, #0x4
    1ff4:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    1ff8:	ldr	x10, [x21]
    1ffc:	mov	w11, #0x1b                  	// #27
    2000:	strb	w11, [x10]
    2004:	ldr	x10, [x21]
    2008:	mov	w11, #0x24                  	// #36
    200c:	strb	w11, [x10, #1]
    2010:	ldr	x10, [x21]
    2014:	mov	w11, #0x28                  	// #40
    2018:	strb	w11, [x10, #2]
    201c:	ldrb	w10, [x24]
    2020:	ldr	x11, [x21]
    2024:	and	w10, w10, #0x7f
    2028:	strb	w10, [x11, #3]
    202c:	ldrb	w10, [x24]
    2030:	strb	w10, [x27]
    2034:	ldr	x10, [x21]
    2038:	add	x10, x10, #0x4
    203c:	str	x10, [x21]
    2040:	ldrb	w10, [x24, #2]
    2044:	cmp	w10, #0x1
    2048:	b.ne	2064 <PyInit__codecs_iso2022@@Base+0x650>  // b.any
    204c:	cmp	x20, #0x1
    2050:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    2054:	ldr	x10, [x21]
    2058:	mov	x9, #0xffffffffffffffff    	// #-1
    205c:	mov	w11, #0x1                   	// #1
    2060:	b	2084 <PyInit__codecs_iso2022@@Base+0x670>
    2064:	cmp	x20, #0x2
    2068:	b.lt	20e0 <PyInit__codecs_iso2022@@Base+0x6cc>  // b.tstop
    206c:	ldr	x10, [x21]
    2070:	mov	w11, #0x2                   	// #2
    2074:	strb	w9, [x10]
    2078:	ldr	x10, [x21]
    207c:	mov	x9, #0xfffffffffffffffe    	// #-2
    2080:	add	x10, x10, #0x1
    2084:	strb	w0, [x10]
    2088:	ldr	x10, [x21]
    208c:	add	x20, x20, x9
    2090:	add	x10, x10, x11
    2094:	str	x10, [x21]
    2098:	ldr	x10, [x23]
    209c:	add	x8, x10, x8
    20a0:	str	x8, [x23]
    20a4:	ldp	x1, x3, [sp]
    20a8:	cmp	x8, x22
    20ac:	b.lt	1cbc <PyInit__codecs_iso2022@@Base+0x2a8>  // b.tstop
    20b0:	mov	x19, xzr
    20b4:	mov	x0, x19
    20b8:	ldp	x20, x19, [sp, #112]
    20bc:	ldp	x22, x21, [sp, #96]
    20c0:	ldp	x24, x23, [sp, #80]
    20c4:	ldp	x26, x25, [sp, #64]
    20c8:	ldp	x28, x27, [sp, #48]
    20cc:	ldp	x29, x30, [sp, #32]
    20d0:	add	sp, sp, #0x80
    20d4:	ret
    20d8:	mov	x19, #0xfffffffffffffffe    	// #-2
    20dc:	b	20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    20e0:	mov	x19, #0xffffffffffffffff    	// #-1
    20e4:	b	20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    20e8:	mov	x19, #0xfffffffffffffffd    	// #-3
    20ec:	b	20b4 <PyInit__codecs_iso2022@@Base+0x6a0>
    20f0:	mov	w8, #0x4242                	// #16962
    20f4:	strb	wzr, [x0, #4]
    20f8:	strh	w8, [x0]
    20fc:	mov	w0, wzr
    2100:	ret
    2104:	ldrb	w8, [x0, #4]
    2108:	tbz	w8, #0, 2138 <PyInit__codecs_iso2022@@Base+0x724>
    210c:	subs	x3, x3, #0x1
    2110:	b.lt	214c <PyInit__codecs_iso2022@@Base+0x738>  // b.tstop
    2114:	ldr	x8, [x2]
    2118:	mov	w9, #0xf                   	// #15
    211c:	strb	w9, [x8]
    2120:	ldr	x8, [x2]
    2124:	add	x8, x8, #0x1
    2128:	str	x8, [x2]
    212c:	ldrb	w8, [x0, #4]
    2130:	and	w8, w8, #0xfe
    2134:	strb	w8, [x0, #4]
    2138:	ldrb	w8, [x0]
    213c:	cmp	w8, #0x42
    2140:	b.eq	2188 <PyInit__codecs_iso2022@@Base+0x774>  // b.none
    2144:	cmp	x3, #0x3
    2148:	b.ge	2154 <PyInit__codecs_iso2022@@Base+0x740>  // b.tcont
    214c:	mov	x0, #0xffffffffffffffff    	// #-1
    2150:	ret
    2154:	ldr	x9, [x2]
    2158:	mov	w10, #0x1b                  	// #27
    215c:	strb	w10, [x9]
    2160:	ldr	x9, [x2]
    2164:	mov	w10, #0x28                  	// #40
    2168:	strb	w10, [x9, #1]
    216c:	ldr	x9, [x2]
    2170:	mov	w10, #0x42                  	// #66
    2174:	strb	w10, [x9, #2]
    2178:	ldr	x9, [x2]
    217c:	add	x9, x9, #0x3
    2180:	str	x9, [x2]
    2184:	strb	w10, [x0]
    2188:	mov	x0, xzr
    218c:	ret
    2190:	sub	sp, sp, #0x70
    2194:	stp	x29, x30, [sp, #16]
    2198:	stp	x28, x27, [sp, #32]
    219c:	stp	x26, x25, [sp, #48]
    21a0:	stp	x24, x23, [sp, #64]
    21a4:	stp	x22, x21, [sp, #80]
    21a8:	stp	x20, x19, [sp, #96]
    21ac:	add	x29, sp, #0x10
    21b0:	cmp	x3, #0x1
    21b4:	b.lt	2730 <PyInit__codecs_iso2022@@Base+0xd1c>  // b.tstop
    21b8:	adrp	x27, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    21bc:	mov	x19, x4
    21c0:	mov	x20, x3
    21c4:	mov	x21, x2
    21c8:	mov	x22, x1
    21cc:	mov	x23, x0
    21d0:	mov	x26, xzr
    21d4:	add	x28, x0, #0x1
    21d8:	mov	w25, #0x1                   	// #1
    21dc:	add	x27, x27, #0x964
    21e0:	b	21f8 <PyInit__codecs_iso2022@@Base+0x7e4>
    21e4:	ldrb	w8, [x23, #4]
    21e8:	and	w8, w8, #0xfffffffd
    21ec:	strb	w8, [x23, #4]
    21f0:	cmp	x20, #0x0
    21f4:	b.le	2730 <PyInit__codecs_iso2022@@Base+0xd1c>
    21f8:	ldr	x0, [x21]
    21fc:	ldrb	w8, [x23, #4]
    2200:	ldrb	w24, [x0]
    2204:	tbnz	w8, #1, 2240 <PyInit__codecs_iso2022@@Base+0x82c>
    2208:	sub	w9, w24, #0xa
    220c:	cmp	w9, #0x11
    2210:	b.hi	227c <PyInit__codecs_iso2022@@Base+0x868>  // b.pmore
    2214:	adr	x10, 2224 <PyInit__codecs_iso2022@@Base+0x810>
    2218:	ldrb	w11, [x27, x9]
    221c:	add	x10, x10, x11, lsl #2
    2220:	br	x10
    2224:	and	w8, w8, #0xfe
    2228:	mov	w1, #0xa                   	// #10
    222c:	mov	x0, x19
    2230:	strb	w8, [x23, #4]
    2234:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2238:	tbz	w0, #31, 23cc <PyInit__codecs_iso2022@@Base+0x9b8>
    223c:	b	2738 <PyInit__codecs_iso2022@@Base+0xd24>
    2240:	mov	x0, x19
    2244:	mov	w1, w24
    2248:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    224c:	tbnz	w0, #31, 2738 <PyInit__codecs_iso2022@@Base+0xd24>
    2250:	ldr	x8, [x21]
    2254:	cmp	w24, #0x40
    2258:	sub	x20, x20, #0x1
    225c:	add	x8, x8, #0x1
    2260:	str	x8, [x21]
    2264:	b.eq	21e4 <PyInit__codecs_iso2022@@Base+0x7d0>  // b.none
    2268:	sub	w8, w24, #0x41
    226c:	and	w8, w8, #0xff
    2270:	cmp	w8, #0x19
    2274:	b.hi	21f0 <PyInit__codecs_iso2022@@Base+0x7dc>  // b.pmore
    2278:	b	21e4 <PyInit__codecs_iso2022@@Base+0x7d0>
    227c:	cmp	w24, #0x20
    2280:	b.cc	2330 <PyInit__codecs_iso2022@@Base+0x91c>  // b.lo, b.ul, b.last
    2284:	sxtb	w9, w24
    2288:	tbnz	w9, #31, 2748 <PyInit__codecs_iso2022@@Base+0xd34>
    228c:	tst	w8, #0x1
    2290:	csel	x8, x23, x28, eq  // eq = none
    2294:	ldrb	w8, [x8]
    2298:	cmp	w8, #0x42
    229c:	b.eq	2330 <PyInit__codecs_iso2022@@Base+0x91c>  // b.none
    22a0:	cbz	x26, 22b0 <PyInit__codecs_iso2022@@Base+0x89c>
    22a4:	ldrb	w9, [x26]
    22a8:	cmp	w9, w8
    22ac:	b.eq	22c4 <PyInit__codecs_iso2022@@Base+0x8b0>  // b.none
    22b0:	ldr	x9, [x22, #8]
    22b4:	sub	x26, x9, #0x20
    22b8:	ldrb	w9, [x26, #32]!
    22bc:	cmp	w9, w8
    22c0:	b.ne	22b8 <PyInit__codecs_iso2022@@Base+0x8a4>  // b.any
    22c4:	ldrb	w8, [x26, #2]
    22c8:	cmp	x20, x8
    22cc:	b.lt	2740 <PyInit__codecs_iso2022@@Base+0xd2c>  // b.tstop
    22d0:	ldr	x8, [x26, #16]
    22d4:	blr	x8
    22d8:	mov	w8, #0xffff                	// #65535
    22dc:	cmp	w0, w8
    22e0:	b.eq	2780 <PyInit__codecs_iso2022@@Base+0xd6c>  // b.none
    22e4:	mov	w24, w0
    22e8:	lsr	w25, w0, #16
    22ec:	cbz	w25, 22f8 <PyInit__codecs_iso2022@@Base+0x8e4>
    22f0:	cmp	w25, #0x2
    22f4:	b.hi	24fc <PyInit__codecs_iso2022@@Base+0xae8>  // b.pmore
    22f8:	mov	x0, x19
    22fc:	mov	w1, w24
    2300:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2304:	mov	w25, #0x1                   	// #1
    2308:	tbz	w0, #31, 2694 <PyInit__codecs_iso2022@@Base+0xc80>
    230c:	b	2738 <PyInit__codecs_iso2022@@Base+0xd24>
    2310:	ldrb	w9, [x22]
    2314:	tbnz	w9, #0, 2330 <PyInit__codecs_iso2022@@Base+0x91c>
    2318:	orr	w8, w8, #0x1
    231c:	b	23c8 <PyInit__codecs_iso2022@@Base+0x9b4>
    2320:	ldrb	w9, [x22]
    2324:	tbnz	w9, #0, 2330 <PyInit__codecs_iso2022@@Base+0x91c>
    2328:	and	w8, w8, #0xfe
    232c:	b	23c8 <PyInit__codecs_iso2022@@Base+0x9b4>
    2330:	mov	x0, x19
    2334:	mov	w1, w24
    2338:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    233c:	tbz	w0, #31, 23cc <PyInit__codecs_iso2022@@Base+0x9b8>
    2340:	b	2738 <PyInit__codecs_iso2022@@Base+0xd24>
    2344:	cmp	x20, #0x2
    2348:	b.lt	2740 <PyInit__codecs_iso2022@@Base+0xd2c>  // b.tstop
    234c:	ldrb	w11, [x0, #1]
    2350:	sub	w8, w11, #0x24
    2354:	cmp	w8, #0xa
    2358:	b.hi	2368 <PyInit__codecs_iso2022@@Base+0x954>  // b.pmore
    235c:	mov	w9, #0x435                 	// #1077
    2360:	lsr	w8, w9, w8
    2364:	tbnz	w8, #0, 23e0 <PyInit__codecs_iso2022@@Base+0x9cc>
    2368:	cmp	w11, #0x4e
    236c:	b.ne	23b0 <PyInit__codecs_iso2022@@Base+0x99c>  // b.any
    2370:	ldr	w8, [x22]
    2374:	tbz	w8, #1, 23b0 <PyInit__codecs_iso2022@@Base+0x99c>
    2378:	subs	x20, x20, #0x3
    237c:	b.lt	2740 <PyInit__codecs_iso2022@@Base+0xd2c>  // b.tstop
    2380:	ldrb	w8, [x23, #2]
    2384:	cmp	w8, #0x46
    2388:	b.eq	2448 <PyInit__codecs_iso2022@@Base+0xa34>  // b.none
    238c:	cmp	w8, #0x42
    2390:	b.eq	2488 <PyInit__codecs_iso2022@@Base+0xa74>  // b.none
    2394:	cmp	w8, #0x41
    2398:	b.ne	2770 <PyInit__codecs_iso2022@@Base+0xd5c>  // b.any
    239c:	ldrsb	w8, [x0, #2]
    23a0:	tbnz	w8, #31, 2778 <PyInit__codecs_iso2022@@Base+0xd64>
    23a4:	and	w8, w8, #0xff
    23a8:	add	w1, w8, #0x80
    23ac:	b	2490 <PyInit__codecs_iso2022@@Base+0xa7c>
    23b0:	mov	w1, #0x1b                  	// #27
    23b4:	mov	x0, x19
    23b8:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    23bc:	tbnz	w0, #31, 2738 <PyInit__codecs_iso2022@@Base+0xd24>
    23c0:	ldrb	w8, [x23, #4]
    23c4:	orr	w8, w8, #0x2
    23c8:	strb	w8, [x23, #4]
    23cc:	ldr	x8, [x21]
    23d0:	sub	x20, x20, #0x1
    23d4:	add	x8, x8, #0x1
    23d8:	str	x8, [x21]
    23dc:	b	21f0 <PyInit__codecs_iso2022@@Base+0x7dc>
    23e0:	mov	w8, #0x1                   	// #1
    23e4:	b	23f4 <PyInit__codecs_iso2022@@Base+0x9e0>
    23e8:	cmp	x8, #0xf
    23ec:	add	x8, x8, #0x1
    23f0:	b.ge	2748 <PyInit__codecs_iso2022@@Base+0xd34>  // b.tcont
    23f4:	cmp	x8, x20
    23f8:	b.ge	2740 <PyInit__codecs_iso2022@@Base+0xd2c>  // b.tcont
    23fc:	ldrb	w9, [x0, x8]
    2400:	cmp	w9, #0x40
    2404:	b.eq	24ac <PyInit__codecs_iso2022@@Base+0xa98>  // b.none
    2408:	sub	w10, w9, #0x41
    240c:	and	w10, w10, #0xff
    2410:	cmp	w10, #0x1a
    2414:	b.cc	24ac <PyInit__codecs_iso2022@@Base+0xa98>  // b.lo, b.ul, b.last
    2418:	ldrb	w10, [x22]
    241c:	tbz	w10, #2, 23e8 <PyInit__codecs_iso2022@@Base+0x9d4>
    2420:	add	x10, x8, #0x1
    2424:	cmp	x10, x20
    2428:	b.ge	23e8 <PyInit__codecs_iso2022@@Base+0x9d4>  // b.tcont
    242c:	cmp	w9, #0x26
    2430:	b.ne	23e8 <PyInit__codecs_iso2022@@Base+0x9d4>  // b.any
    2434:	ldrb	w9, [x0, x10]
    2438:	add	x10, x8, #0x2
    243c:	cmp	w9, #0x40
    2440:	csel	x8, x10, x8, eq  // eq = none
    2444:	b	23e8 <PyInit__codecs_iso2022@@Base+0x9d4>
    2448:	ldrb	w8, [x0, #2]
    244c:	eor	x1, x8, #0x80
    2450:	cmp	w1, #0x9f
    2454:	b.ls	2478 <PyInit__codecs_iso2022@@Base+0xa64>  // b.plast
    2458:	cmp	w1, #0xbf
    245c:	b.hi	2560 <PyInit__codecs_iso2022@@Base+0xb4c>  // b.pmore
    2460:	sub	w9, w1, #0xa0
    2464:	mov	w10, #0x3bc9                	// #15305
    2468:	lsl	x9, x25, x9
    246c:	movk	w10, #0x288f, lsl #16
    2470:	tst	x9, x10
    2474:	b.eq	2560 <PyInit__codecs_iso2022@@Base+0xb4c>  // b.none
    2478:	mov	x0, x19
    247c:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2480:	tbz	w0, #31, 249c <PyInit__codecs_iso2022@@Base+0xa88>
    2484:	b	2738 <PyInit__codecs_iso2022@@Base+0xd24>
    2488:	ldrb	w1, [x0, #2]
    248c:	tbnz	w1, #7, 2778 <PyInit__codecs_iso2022@@Base+0xd64>
    2490:	mov	x0, x19
    2494:	bl	1900 <_PyUnicodeWriter_WriteChar@plt>
    2498:	tbnz	w0, #31, 2738 <PyInit__codecs_iso2022@@Base+0xd24>
    249c:	ldr	x8, [x21]
    24a0:	add	x8, x8, #0x3
    24a4:	str	x8, [x21]
    24a8:	b	21f0 <PyInit__codecs_iso2022@@Base+0x7dc>
    24ac:	add	x9, x8, #0x1
    24b0:	cmp	x9, #0x6
    24b4:	b.hi	2724 <PyInit__codecs_iso2022@@Base+0xd10>  // b.pmore
    24b8:	adrp	x12, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    24bc:	add	x12, x12, #0x976
    24c0:	adr	x10, 24d4 <PyInit__codecs_iso2022@@Base+0xac0>
    24c4:	ldrb	w8, [x12, x9]
    24c8:	add	x10, x10, x8, lsl #2
    24cc:	mov	w8, #0x1                   	// #1
    24d0:	br	x10
    24d4:	ldrb	w10, [x0, #2]
    24d8:	cmp	w11, #0x29
    24dc:	b.eq	26c4 <PyInit__codecs_iso2022@@Base+0xcb0>  // b.none
    24e0:	cmp	w11, #0x28
    24e4:	b.eq	26cc <PyInit__codecs_iso2022@@Base+0xcb8>  // b.none
    24e8:	cmp	w11, #0x24
    24ec:	b.ne	26d4 <PyInit__codecs_iso2022@@Base+0xcc0>  // b.any
    24f0:	mov	x8, xzr
    24f4:	orr	w10, w10, #0xffffff80
    24f8:	b	26f4 <PyInit__codecs_iso2022@@Base+0xce0>
    24fc:	ldr	w8, [x19, #20]
    2500:	str	x28, [sp, #8]
    2504:	and	w28, w24, #0xffff
    2508:	cmp	w25, w28
    250c:	csel	w2, w25, w28, hi  // hi = pmore
    2510:	cmp	w2, w8
    2514:	b.hi	2528 <PyInit__codecs_iso2022@@Base+0xb14>  // b.pmore
    2518:	ldp	x8, x9, [x19, #24]
    251c:	sub	x8, x8, x9
    2520:	cmp	x8, #0x1
    2524:	b.gt	2538 <PyInit__codecs_iso2022@@Base+0xb24>
    2528:	mov	w1, #0x2                   	// #2
    252c:	mov	x0, x19
    2530:	bl	18f0 <_PyUnicodeWriter_PrepareInternal@plt>
    2534:	tbnz	w0, #31, 2738 <PyInit__codecs_iso2022@@Base+0xd24>
    2538:	ldr	w8, [x19, #16]
    253c:	cmp	w8, #0x2
    2540:	b.eq	2618 <PyInit__codecs_iso2022@@Base+0xc04>  // b.none
    2544:	cmp	w8, #0x1
    2548:	b.ne	262c <PyInit__codecs_iso2022@@Base+0xc18>  // b.any
    254c:	ldr	x8, [x19, #8]
    2550:	ldr	x9, [x19, #32]
    2554:	strb	w25, [x8, x9]
    2558:	ldr	w8, [x19, #16]
    255c:	b	2638 <PyInit__codecs_iso2022@@Base+0xc24>
    2560:	sub	w8, w8, #0x34
    2564:	cmp	w8, #0x4a
    2568:	b.ls	25f0 <PyInit__codecs_iso2022@@Base+0xbdc>  // b.plast
    256c:	cmp	w1, #0xaf
    2570:	b.eq	26b4 <PyInit__codecs_iso2022@@Base+0xca0>  // b.none
    2574:	cmp	w1, #0xa2
    2578:	b.eq	26bc <PyInit__codecs_iso2022@@Base+0xca8>  // b.none
    257c:	cmp	w1, #0xa1
    2580:	b.ne	2778 <PyInit__codecs_iso2022@@Base+0xd64>  // b.any
    2584:	mov	w1, #0x2018                	// #8216
    2588:	b	2490 <PyInit__codecs_iso2022@@Base+0xa7c>
    258c:	cmp	w11, #0x24
    2590:	b.ne	2790 <PyInit__codecs_iso2022@@Base+0xd7c>  // b.any
    2594:	ldrb	w8, [x0, #2]
    2598:	ldrb	w10, [x0, #3]
    259c:	cmp	w8, #0x28
    25a0:	orr	w10, w10, #0xffffff80
    25a4:	b.eq	26ac <PyInit__codecs_iso2022@@Base+0xc98>  // b.none
    25a8:	cmp	w8, #0x29
    25ac:	b.ne	2790 <PyInit__codecs_iso2022@@Base+0xd7c>  // b.any
    25b0:	mov	w8, #0x1                   	// #1
    25b4:	b	26f4 <PyInit__codecs_iso2022@@Base+0xce0>
    25b8:	ldrb	w8, [x22]
    25bc:	tbz	w8, #2, 2788 <PyInit__codecs_iso2022@@Base+0xd74>
    25c0:	ldrb	w8, [x0, #3]
    25c4:	cmp	w8, #0x1b
    25c8:	b.ne	2788 <PyInit__codecs_iso2022@@Base+0xd74>  // b.any
    25cc:	ldrb	w8, [x0, #4]
    25d0:	cmp	w8, #0x24
    25d4:	b.ne	2788 <PyInit__codecs_iso2022@@Base+0xd74>  // b.any
    25d8:	ldrb	w8, [x0, #5]
    25dc:	cmp	w8, #0x42
    25e0:	b.ne	2788 <PyInit__codecs_iso2022@@Base+0xd74>  // b.any
    25e4:	mov	x8, xzr
    25e8:	mov	w10, #0xc2                  	// #194
    25ec:	b	26f4 <PyInit__codecs_iso2022@@Base+0xce0>
    25f0:	cmp	w1, #0xd3
    25f4:	b.hi	2610 <PyInit__codecs_iso2022@@Base+0xbfc>  // b.pmore
    25f8:	sub	w8, w1, #0xb4
    25fc:	mov	w9, #0xfd77                	// #64887
    2600:	lsl	x8, x25, x8
    2604:	movk	w9, #0xbfff, lsl #16
    2608:	tst	x8, x9
    260c:	b.eq	256c <PyInit__codecs_iso2022@@Base+0xb58>  // b.none
    2610:	add	w1, w1, #0x2d0
    2614:	b	2490 <PyInit__codecs_iso2022@@Base+0xa7c>
    2618:	ldr	x8, [x19, #8]
    261c:	ldr	x9, [x19, #32]
    2620:	strh	w25, [x8, x9, lsl #1]
    2624:	mov	w25, #0x1                   	// #1
    2628:	b	2664 <PyInit__codecs_iso2022@@Base+0xc50>
    262c:	ldr	x9, [x19, #8]
    2630:	ldr	x10, [x19, #32]
    2634:	str	w25, [x9, x10, lsl #2]
    2638:	cmp	w8, #0x2
    263c:	mov	w25, #0x1                   	// #1
    2640:	b.eq	2664 <PyInit__codecs_iso2022@@Base+0xc50>  // b.none
    2644:	cmp	w8, #0x1
    2648:	b.ne	2678 <PyInit__codecs_iso2022@@Base+0xc64>  // b.any
    264c:	ldr	x8, [x19, #8]
    2650:	ldr	x9, [x19, #32]
    2654:	add	x8, x9, x8
    2658:	strb	w24, [x8, #1]
    265c:	ldr	x8, [x19, #32]
    2660:	b	2688 <PyInit__codecs_iso2022@@Base+0xc74>
    2664:	ldr	x9, [x19, #8]
    2668:	ldr	x8, [x19, #32]
    266c:	add	x9, x9, x8, lsl #1
    2670:	strh	w24, [x9, #2]
    2674:	b	2688 <PyInit__codecs_iso2022@@Base+0xc74>
    2678:	ldr	x9, [x19, #8]
    267c:	ldr	x8, [x19, #32]
    2680:	add	x9, x9, x8, lsl #2
    2684:	str	w28, [x9, #4]
    2688:	ldr	x28, [sp, #8]
    268c:	add	x8, x8, #0x2
    2690:	str	x8, [x19, #32]
    2694:	ldrb	w8, [x26, #2]
    2698:	ldr	x9, [x21]
    269c:	sub	x20, x20, x8
    26a0:	add	x9, x9, x8
    26a4:	str	x9, [x21]
    26a8:	b	21f0 <PyInit__codecs_iso2022@@Base+0x7dc>
    26ac:	mov	x8, xzr
    26b0:	b	26f4 <PyInit__codecs_iso2022@@Base+0xce0>
    26b4:	mov	w1, #0x2015                	// #8213
    26b8:	b	2490 <PyInit__codecs_iso2022@@Base+0xa7c>
    26bc:	mov	w1, #0x2019                	// #8217
    26c0:	b	2490 <PyInit__codecs_iso2022@@Base+0xa7c>
    26c4:	mov	w8, #0x1                   	// #1
    26c8:	b	26ec <PyInit__codecs_iso2022@@Base+0xcd8>
    26cc:	mov	x8, xzr
    26d0:	b	26ec <PyInit__codecs_iso2022@@Base+0xcd8>
    26d4:	cmp	w11, #0x2e
    26d8:	b.ne	2778 <PyInit__codecs_iso2022@@Base+0xd64>  // b.any
    26dc:	ldr	w11, [x22]
    26e0:	mov	w8, #0x3                   	// #3
    26e4:	tbz	w11, #1, 274c <PyInit__codecs_iso2022@@Base+0xd38>
    26e8:	mov	w8, #0x2                   	// #2
    26ec:	cmp	w10, #0x42
    26f0:	b.eq	270c <PyInit__codecs_iso2022@@Base+0xcf8>  // b.none
    26f4:	ldr	x11, [x22, #8]
    26f8:	ldrb	w12, [x11], #32
    26fc:	cbz	w12, 2708 <PyInit__codecs_iso2022@@Base+0xcf4>
    2700:	cmp	w12, w10, uxtb
    2704:	b.ne	26f8 <PyInit__codecs_iso2022@@Base+0xce4>  // b.any
    2708:	cbz	w12, 2724 <PyInit__codecs_iso2022@@Base+0xd10>
    270c:	strb	w10, [x23, x8]
    2710:	ldr	x8, [x21]
    2714:	sub	x20, x20, x9
    2718:	add	x8, x8, x9
    271c:	str	x8, [x21]
    2720:	b	21f0 <PyInit__codecs_iso2022@@Base+0x7dc>
    2724:	mov	x8, x9
    2728:	cbz	x9, 21f0 <PyInit__codecs_iso2022@@Base+0x7dc>
    272c:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2730:	mov	x8, xzr
    2734:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2738:	mov	x8, #0xfffffffffffffffc    	// #-4
    273c:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2740:	mov	x8, #0xfffffffffffffffe    	// #-2
    2744:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2748:	mov	w8, #0x1                   	// #1
    274c:	ldp	x20, x19, [sp, #96]
    2750:	ldp	x22, x21, [sp, #80]
    2754:	ldp	x24, x23, [sp, #64]
    2758:	ldp	x26, x25, [sp, #48]
    275c:	ldp	x28, x27, [sp, #32]
    2760:	ldp	x29, x30, [sp, #16]
    2764:	mov	x0, x8
    2768:	add	sp, sp, #0x70
    276c:	ret
    2770:	mov	x8, #0xfffffffffffffffd    	// #-3
    2774:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2778:	mov	w8, #0x3                   	// #3
    277c:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2780:	ldrb	w8, [x26, #2]
    2784:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2788:	mov	w8, #0x6                   	// #6
    278c:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2790:	mov	w8, #0x4                   	// #4
    2794:	b	274c <PyInit__codecs_iso2022@@Base+0xd38>
    2798:	mov	w8, #0x4242                	// #16962
    279c:	mov	w9, #0x42                  	// #66
    27a0:	strb	wzr, [x0, #4]
    27a4:	strh	w8, [x0]
    27a8:	strb	w9, [x0, #2]
    27ac:	mov	w0, wzr
    27b0:	ret
    27b4:	ldrb	w8, [x0, #4]
    27b8:	mov	w9, #0x42                  	// #66
    27bc:	strb	w9, [x0]
    27c0:	and	w8, w8, #0xfe
    27c4:	strb	w8, [x0, #4]
    27c8:	mov	x0, xzr
    27cc:	ret
    27d0:	stp	x29, x30, [sp, #-32]!
    27d4:	str	x19, [sp, #16]
    27d8:	mov	x29, sp
    27dc:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    27e0:	ldrb	w8, [x19, #320]
    27e4:	tbz	w8, #0, 27f8 <PyInit__codecs_iso2022@@Base+0xde4>
    27e8:	mov	w0, wzr
    27ec:	mov	w8, #0x1                   	// #1
    27f0:	strb	w8, [x19, #320]
    27f4:	b	2844 <PyInit__codecs_iso2022@@Base+0xe30>
    27f8:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    27fc:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2800:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2804:	add	x0, x0, #0xa64
    2808:	add	x1, x1, #0xa6f
    280c:	add	x2, x2, #0x148
    2810:	mov	x3, xzr
    2814:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2818:	cbnz	w0, 2840 <PyInit__codecs_iso2022@@Base+0xe2c>
    281c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2820:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2824:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2828:	add	x0, x0, #0xa64
    282c:	add	x1, x1, #0xa7b
    2830:	add	x3, x3, #0x150
    2834:	mov	x2, xzr
    2838:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    283c:	cbz	w0, 27e8 <PyInit__codecs_iso2022@@Base+0xdd4>
    2840:	mov	w0, #0xffffffff            	// #-1
    2844:	ldr	x19, [sp, #16]
    2848:	ldp	x29, x30, [sp], #32
    284c:	ret
    2850:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2854:	ldrb	w10, [x0]
    2858:	ldr	x11, [x8, #336]
    285c:	lsl	x8, x10, #4
    2860:	ldr	x8, [x11, x8]
    2864:	cbz	x8, 2888 <PyInit__codecs_iso2022@@Base+0xe74>
    2868:	add	x11, x11, x10, lsl #4
    286c:	ldrb	w9, [x0, #1]
    2870:	ldrb	w10, [x11, #8]
    2874:	cmp	w9, w10
    2878:	b.cc	2888 <PyInit__codecs_iso2022@@Base+0xe74>  // b.lo, b.ul, b.last
    287c:	ldrb	w11, [x11, #9]
    2880:	cmp	w9, w11
    2884:	b.ls	2890 <PyInit__codecs_iso2022@@Base+0xe7c>  // b.plast
    2888:	mov	w0, #0xffff                	// #65535
    288c:	ret
    2890:	sub	x9, x9, x10
    2894:	ldrh	w8, [x8, x9, lsl #1]
    2898:	mov	w9, #0xfffe                	// #65534
    289c:	cmp	w8, w9
    28a0:	csinv	w8, w8, wzr, ne  // ne = any
    28a4:	and	w0, w8, #0xffff
    28a8:	ret
    28ac:	ldr	w8, [x0]
    28b0:	ubfx	x9, x8, #16, #16
    28b4:	cbnz	w9, 28f8 <PyInit__codecs_iso2022@@Base+0xee4>
    28b8:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    28bc:	ldr	x10, [x9, #328]
    28c0:	lsr	x11, x8, #8
    28c4:	lsl	x9, x11, #4
    28c8:	ldr	x9, [x10, x9]
    28cc:	cbz	x9, 28f8 <PyInit__codecs_iso2022@@Base+0xee4>
    28d0:	add	x10, x10, x11, lsl #4
    28d4:	ldrb	w12, [x10, #8]
    28d8:	and	w11, w8, #0xff
    28dc:	subs	w8, w11, w12
    28e0:	b.cc	28f8 <PyInit__codecs_iso2022@@Base+0xee4>  // b.lo, b.ul, b.last
    28e4:	ldrb	w10, [x10, #9]
    28e8:	cmp	w11, w10
    28ec:	b.hi	28f8 <PyInit__codecs_iso2022@@Base+0xee4>  // b.pmore
    28f0:	ldrsh	w0, [x9, w8, uxtw #1]
    28f4:	tbz	w0, #31, 28fc <PyInit__codecs_iso2022@@Base+0xee8>
    28f8:	mov	w0, #0xffff                	// #65535
    28fc:	ret
    2900:	stp	x29, x30, [sp, #-48]!
    2904:	stp	x22, x21, [sp, #16]
    2908:	stp	x20, x19, [sp, #32]
    290c:	mov	x29, sp
    2910:	mov	x20, x3
    2914:	mov	x21, x2
    2918:	mov	x22, x1
    291c:	bl	18b0 <PyImport_ImportModule@plt>
    2920:	cbz	x0, 29d8 <PyInit__codecs_iso2022@@Base+0xfc4>
    2924:	mov	x1, x22
    2928:	mov	x19, x0
    292c:	bl	1840 <PyObject_GetAttrString@plt>
    2930:	cbz	x0, 29c0 <PyInit__codecs_iso2022@@Base+0xfac>
    2934:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2938:	add	x1, x1, #0x9d2
    293c:	mov	x22, x0
    2940:	bl	1880 <PyCapsule_IsValid@plt>
    2944:	cbz	w0, 29a8 <PyInit__codecs_iso2022@@Base+0xf94>
    2948:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    294c:	add	x1, x1, #0x9d2
    2950:	mov	x0, x22
    2954:	bl	1930 <PyCapsule_GetPointer@plt>
    2958:	cbz	x21, 2964 <PyInit__codecs_iso2022@@Base+0xf50>
    295c:	ldr	x8, [x0, #8]
    2960:	str	x8, [x21]
    2964:	cbz	x20, 2970 <PyInit__codecs_iso2022@@Base+0xf5c>
    2968:	ldr	x8, [x0, #16]
    296c:	str	x8, [x20]
    2970:	ldr	x8, [x22]
    2974:	subs	x8, x8, #0x1
    2978:	str	x8, [x22]
    297c:	b.ne	2988 <PyInit__codecs_iso2022@@Base+0xf74>  // b.any
    2980:	mov	x0, x22
    2984:	bl	1860 <_Py_Dealloc@plt>
    2988:	ldr	x8, [x19]
    298c:	subs	x8, x8, #0x1
    2990:	str	x8, [x19]
    2994:	b.ne	29a0 <PyInit__codecs_iso2022@@Base+0xf8c>  // b.any
    2998:	mov	x0, x19
    299c:	bl	1860 <_Py_Dealloc@plt>
    29a0:	mov	w0, wzr
    29a4:	b	29dc <PyInit__codecs_iso2022@@Base+0xfc8>
    29a8:	adrp	x8, 14000 <PyInit__codecs_iso2022@@Base+0x125ec>
    29ac:	ldr	x8, [x8, #4032]
    29b0:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    29b4:	add	x1, x1, #0xa89
    29b8:	ldr	x0, [x8]
    29bc:	bl	1870 <PyErr_SetString@plt>
    29c0:	ldr	x8, [x19]
    29c4:	subs	x8, x8, #0x1
    29c8:	str	x8, [x19]
    29cc:	b.ne	29d8 <PyInit__codecs_iso2022@@Base+0xfc4>  // b.any
    29d0:	mov	x0, x19
    29d4:	bl	1860 <_Py_Dealloc@plt>
    29d8:	mov	w0, #0xffffffff            	// #-1
    29dc:	ldp	x20, x19, [sp, #32]
    29e0:	ldp	x22, x21, [sp, #16]
    29e4:	ldp	x29, x30, [sp], #48
    29e8:	ret
    29ec:	stp	x29, x30, [sp, #-32]!
    29f0:	str	x19, [sp, #16]
    29f4:	mov	x29, sp
    29f8:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    29fc:	ldrb	w8, [x19, #344]
    2a00:	tbz	w8, #0, 2a14 <PyInit__codecs_iso2022@@Base+0x1000>
    2a04:	mov	w0, wzr
    2a08:	mov	w8, #0x1                   	// #1
    2a0c:	strb	w8, [x19, #344]
    2a10:	b	2a60 <PyInit__codecs_iso2022@@Base+0x104c>
    2a14:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a18:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a1c:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2a20:	add	x0, x0, #0xaa5
    2a24:	add	x1, x1, #0xab0
    2a28:	add	x2, x2, #0x160
    2a2c:	mov	x3, xzr
    2a30:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2a34:	cbnz	w0, 2a5c <PyInit__codecs_iso2022@@Base+0x1048>
    2a38:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a3c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2a40:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2a44:	add	x0, x0, #0xaa5
    2a48:	add	x1, x1, #0xac1
    2a4c:	add	x3, x3, #0x168
    2a50:	mov	x2, xzr
    2a54:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2a58:	cbz	w0, 2a04 <PyInit__codecs_iso2022@@Base+0xff0>
    2a5c:	mov	w0, #0xffffffff            	// #-1
    2a60:	ldr	x19, [sp, #16]
    2a64:	ldp	x29, x30, [sp], #32
    2a68:	ret
    2a6c:	ldrb	w9, [x0]
    2a70:	cmp	x9, #0x21
    2a74:	b.ne	2a8c <PyInit__codecs_iso2022@@Base+0x1078>  // b.any
    2a78:	ldrb	w8, [x0, #1]
    2a7c:	cmp	w8, #0x40
    2a80:	b.ne	2a8c <PyInit__codecs_iso2022@@Base+0x1078>  // b.any
    2a84:	mov	w0, #0xff3c                	// #65340
    2a88:	ret
    2a8c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2a90:	ldr	x11, [x8, #360]
    2a94:	lsl	x8, x9, #4
    2a98:	ldr	x8, [x11, x8]
    2a9c:	cbz	x8, 2ac0 <PyInit__codecs_iso2022@@Base+0x10ac>
    2aa0:	add	x11, x11, x9, lsl #4
    2aa4:	ldrb	w10, [x0, #1]
    2aa8:	ldrb	w9, [x11, #8]
    2aac:	cmp	w10, w9
    2ab0:	b.cc	2ac0 <PyInit__codecs_iso2022@@Base+0x10ac>  // b.lo, b.ul, b.last
    2ab4:	ldrb	w11, [x11, #9]
    2ab8:	cmp	w10, w11
    2abc:	b.ls	2ac8 <PyInit__codecs_iso2022@@Base+0x10b4>  // b.plast
    2ac0:	mov	w0, #0xffff                	// #65535
    2ac4:	ret
    2ac8:	sub	x9, x10, x9
    2acc:	ldrh	w8, [x8, x9, lsl #1]
    2ad0:	mov	w9, #0xfffe                	// #65534
    2ad4:	cmp	w8, w9
    2ad8:	csinv	w8, w8, wzr, ne  // ne = any
    2adc:	and	w0, w8, #0xffff
    2ae0:	ret
    2ae4:	ldr	w8, [x0]
    2ae8:	ubfx	x9, x8, #16, #16
    2aec:	cbnz	w9, 2b44 <PyInit__codecs_iso2022@@Base+0x1130>
    2af0:	mov	w9, #0xff3c                	// #65340
    2af4:	cmp	w8, w9
    2af8:	b.ne	2b04 <PyInit__codecs_iso2022@@Base+0x10f0>  // b.any
    2afc:	mov	w0, #0x2140                	// #8512
    2b00:	ret
    2b04:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2b08:	ldr	x10, [x9, #352]
    2b0c:	lsr	x11, x8, #8
    2b10:	lsl	x9, x11, #4
    2b14:	ldr	x9, [x10, x9]
    2b18:	cbz	x9, 2b44 <PyInit__codecs_iso2022@@Base+0x1130>
    2b1c:	add	x10, x10, x11, lsl #4
    2b20:	ldrb	w12, [x10, #8]
    2b24:	and	w11, w8, #0xff
    2b28:	subs	w8, w11, w12
    2b2c:	b.cc	2b44 <PyInit__codecs_iso2022@@Base+0x1130>  // b.lo, b.ul, b.last
    2b30:	ldrb	w10, [x10, #9]
    2b34:	cmp	w11, w10
    2b38:	b.hi	2b44 <PyInit__codecs_iso2022@@Base+0x1130>  // b.pmore
    2b3c:	ldrsh	w0, [x9, w8, uxtw #1]
    2b40:	tbz	w0, #31, 2b48 <PyInit__codecs_iso2022@@Base+0x1134>
    2b44:	mov	w0, #0xffff                	// #65535
    2b48:	ret
    2b4c:	ldrb	w0, [x0]
    2b50:	cmp	w0, #0x5c
    2b54:	b.cc	2b80 <PyInit__codecs_iso2022@@Base+0x116c>  // b.lo, b.ul, b.last
    2b58:	b.ne	2b64 <PyInit__codecs_iso2022@@Base+0x1150>  // b.any
    2b5c:	mov	w0, #0xa5                  	// #165
    2b60:	ret
    2b64:	cmp	w0, #0x7e
    2b68:	b.cc	2b80 <PyInit__codecs_iso2022@@Base+0x116c>  // b.lo, b.ul, b.last
    2b6c:	cmp	w0, #0x7e
    2b70:	b.eq	2b84 <PyInit__codecs_iso2022@@Base+0x1170>  // b.none
    2b74:	cmp	w0, #0x7f
    2b78:	b.eq	2b80 <PyInit__codecs_iso2022@@Base+0x116c>  // b.none
    2b7c:	mov	w0, #0xffff                	// #65535
    2b80:	ret
    2b84:	mov	w0, #0x203e                	// #8254
    2b88:	ret
    2b8c:	ldr	w8, [x0]
    2b90:	cmp	w8, #0x7f
    2b94:	b.ls	2bb4 <PyInit__codecs_iso2022@@Base+0x11a0>  // b.plast
    2b98:	cmp	w8, #0xa5
    2b9c:	b.eq	2bcc <PyInit__codecs_iso2022@@Base+0x11b8>  // b.none
    2ba0:	mov	w9, #0x203e                	// #8254
    2ba4:	cmp	w8, w9
    2ba8:	b.ne	2bd4 <PyInit__codecs_iso2022@@Base+0x11c0>  // b.any
    2bac:	mov	w0, #0x7e                  	// #126
    2bb0:	b	2bc8 <PyInit__codecs_iso2022@@Base+0x11b4>
    2bb4:	cmp	w8, #0x5c
    2bb8:	mov	w0, #0xffff                	// #65535
    2bbc:	b.eq	2bc8 <PyInit__codecs_iso2022@@Base+0x11b4>  // b.none
    2bc0:	cmp	w8, #0x7e
    2bc4:	b.ne	2bdc <PyInit__codecs_iso2022@@Base+0x11c8>  // b.any
    2bc8:	ret
    2bcc:	mov	w0, #0x5c                  	// #92
    2bd0:	ret
    2bd4:	mov	w0, #0xffff                	// #65535
    2bd8:	ret
    2bdc:	mov	w0, w8
    2be0:	ret
    2be4:	stp	x29, x30, [sp, #-32]!
    2be8:	str	x19, [sp, #16]
    2bec:	mov	x29, sp
    2bf0:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2bf4:	ldrb	w8, [x19, #368]
    2bf8:	tbz	w8, #0, 2c0c <PyInit__codecs_iso2022@@Base+0x11f8>
    2bfc:	mov	w0, wzr
    2c00:	mov	w8, #0x1                   	// #1
    2c04:	strb	w8, [x19, #368]
    2c08:	b	2c58 <PyInit__codecs_iso2022@@Base+0x1244>
    2c0c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c10:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c14:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c18:	add	x0, x0, #0xaa5
    2c1c:	add	x1, x1, #0xab0
    2c20:	add	x2, x2, #0x160
    2c24:	mov	x3, xzr
    2c28:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2c2c:	cbnz	w0, 2c54 <PyInit__codecs_iso2022@@Base+0x1240>
    2c30:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c34:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2c38:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c3c:	add	x0, x0, #0xaa5
    2c40:	add	x1, x1, #0xad0
    2c44:	add	x3, x3, #0x178
    2c48:	mov	x2, xzr
    2c4c:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2c50:	cbz	w0, 2bfc <PyInit__codecs_iso2022@@Base+0x11e8>
    2c54:	mov	w0, #0xffffffff            	// #-1
    2c58:	ldr	x19, [sp, #16]
    2c5c:	ldp	x29, x30, [sp], #32
    2c60:	ret
    2c64:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2c68:	ldrb	w10, [x0]
    2c6c:	ldr	x11, [x8, #376]
    2c70:	lsl	x8, x10, #4
    2c74:	ldr	x8, [x11, x8]
    2c78:	cbz	x8, 2c9c <PyInit__codecs_iso2022@@Base+0x1288>
    2c7c:	add	x11, x11, x10, lsl #4
    2c80:	ldrb	w9, [x0, #1]
    2c84:	ldrb	w10, [x11, #8]
    2c88:	cmp	w9, w10
    2c8c:	b.cc	2c9c <PyInit__codecs_iso2022@@Base+0x1288>  // b.lo, b.ul, b.last
    2c90:	ldrb	w11, [x11, #9]
    2c94:	cmp	w9, w11
    2c98:	b.ls	2ca4 <PyInit__codecs_iso2022@@Base+0x1290>  // b.plast
    2c9c:	mov	w0, #0xffff                	// #65535
    2ca0:	ret
    2ca4:	sub	x9, x9, x10
    2ca8:	ldrh	w8, [x8, x9, lsl #1]
    2cac:	mov	w9, #0xfffe                	// #65534
    2cb0:	cmp	w8, w9
    2cb4:	csinv	w8, w8, wzr, ne  // ne = any
    2cb8:	and	w0, w8, #0xffff
    2cbc:	ret
    2cc0:	ldr	w8, [x0]
    2cc4:	ubfx	x9, x8, #16, #16
    2cc8:	cbnz	w9, 2d04 <PyInit__codecs_iso2022@@Base+0x12f0>
    2ccc:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2cd0:	ldr	x10, [x9, #352]
    2cd4:	lsr	x11, x8, #8
    2cd8:	lsl	x9, x11, #4
    2cdc:	ldr	x9, [x10, x9]
    2ce0:	cbz	x9, 2d04 <PyInit__codecs_iso2022@@Base+0x12f0>
    2ce4:	add	x10, x10, x11, lsl #4
    2ce8:	ldrb	w12, [x10, #8]
    2cec:	and	w11, w8, #0xff
    2cf0:	subs	w8, w11, w12
    2cf4:	b.cc	2d04 <PyInit__codecs_iso2022@@Base+0x12f0>  // b.lo, b.ul, b.last
    2cf8:	ldrb	w10, [x10, #9]
    2cfc:	cmp	w11, w10
    2d00:	b.ls	2d0c <PyInit__codecs_iso2022@@Base+0x12f8>  // b.plast
    2d04:	mov	w0, #0xffff                	// #65535
    2d08:	ret
    2d0c:	ldrsh	w8, [x9, w8, uxtw #1]
    2d10:	and	w9, w8, #0x7fff
    2d14:	cmn	w8, #0x1
    2d18:	csinv	w0, w9, wzr, lt  // lt = tstop
    2d1c:	ret
    2d20:	stp	x29, x30, [sp, #-32]!
    2d24:	str	x19, [sp, #16]
    2d28:	mov	x29, sp
    2d2c:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d30:	ldrb	w8, [x19, #384]
    2d34:	tbz	w8, #0, 2d48 <PyInit__codecs_iso2022@@Base+0x1334>
    2d38:	mov	w0, wzr
    2d3c:	mov	w8, #0x1                   	// #1
    2d40:	strb	w8, [x19, #384]
    2d44:	b	2d94 <PyInit__codecs_iso2022@@Base+0x1380>
    2d48:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d4c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d50:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d54:	add	x0, x0, #0xadf
    2d58:	add	x1, x1, #0xaea
    2d5c:	add	x2, x2, #0x188
    2d60:	mov	x3, xzr
    2d64:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2d68:	cbnz	w0, 2d90 <PyInit__codecs_iso2022@@Base+0x137c>
    2d6c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d70:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2d74:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2d78:	add	x0, x0, #0xadf
    2d7c:	add	x1, x1, #0xaf9
    2d80:	add	x3, x3, #0x190
    2d84:	mov	x2, xzr
    2d88:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2d8c:	cbz	w0, 2d38 <PyInit__codecs_iso2022@@Base+0x1324>
    2d90:	mov	w0, #0xffffffff            	// #-1
    2d94:	ldr	x19, [sp, #16]
    2d98:	ldp	x29, x30, [sp], #32
    2d9c:	ret
    2da0:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2da4:	ldrb	w10, [x0]
    2da8:	ldr	x11, [x8, #400]
    2dac:	lsl	x8, x10, #4
    2db0:	ldr	x8, [x11, x8]
    2db4:	cbz	x8, 2dd8 <PyInit__codecs_iso2022@@Base+0x13c4>
    2db8:	add	x11, x11, x10, lsl #4
    2dbc:	ldrb	w9, [x0, #1]
    2dc0:	ldrb	w10, [x11, #8]
    2dc4:	cmp	w9, w10
    2dc8:	b.cc	2dd8 <PyInit__codecs_iso2022@@Base+0x13c4>  // b.lo, b.ul, b.last
    2dcc:	ldrb	w11, [x11, #9]
    2dd0:	cmp	w9, w11
    2dd4:	b.ls	2de0 <PyInit__codecs_iso2022@@Base+0x13cc>  // b.plast
    2dd8:	mov	w0, #0xffff                	// #65535
    2ddc:	ret
    2de0:	sub	x9, x9, x10
    2de4:	ldrh	w8, [x8, x9, lsl #1]
    2de8:	mov	w9, #0xfffe                	// #65534
    2dec:	cmp	w8, w9
    2df0:	csinv	w8, w8, wzr, ne  // ne = any
    2df4:	and	w0, w8, #0xffff
    2df8:	ret
    2dfc:	ldr	w8, [x0]
    2e00:	ubfx	x9, x8, #16, #16
    2e04:	cbnz	w9, 2e48 <PyInit__codecs_iso2022@@Base+0x1434>
    2e08:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e0c:	ldr	x10, [x9, #392]
    2e10:	lsr	x11, x8, #8
    2e14:	lsl	x9, x11, #4
    2e18:	ldr	x9, [x10, x9]
    2e1c:	cbz	x9, 2e48 <PyInit__codecs_iso2022@@Base+0x1434>
    2e20:	add	x10, x10, x11, lsl #4
    2e24:	ldrb	w12, [x10, #8]
    2e28:	and	w11, w8, #0xff
    2e2c:	subs	w8, w11, w12
    2e30:	b.cc	2e48 <PyInit__codecs_iso2022@@Base+0x1434>  // b.lo, b.ul, b.last
    2e34:	ldrb	w10, [x10, #9]
    2e38:	cmp	w11, w10
    2e3c:	b.hi	2e48 <PyInit__codecs_iso2022@@Base+0x1434>  // b.pmore
    2e40:	ldrsh	w0, [x9, w8, uxtw #1]
    2e44:	tbz	w0, #31, 2e4c <PyInit__codecs_iso2022@@Base+0x1438>
    2e48:	mov	w0, #0xffff                	// #65535
    2e4c:	ret
    2e50:	mov	w0, #0xffff                	// #65535
    2e54:	ret
    2e58:	mov	w0, #0xffff                	// #65535
    2e5c:	ret
    2e60:	stp	x29, x30, [sp, #-32]!
    2e64:	stp	x20, x19, [sp, #16]
    2e68:	mov	x29, sp
    2e6c:	adrp	x19, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e70:	ldrb	w8, [x19, #408]
    2e74:	tbz	w8, #0, 2e88 <PyInit__codecs_iso2022@@Base+0x1474>
    2e78:	mov	w0, wzr
    2e7c:	mov	w8, #0x1                   	// #1
    2e80:	strb	w8, [x19, #408]
    2e84:	b	2fec <PyInit__codecs_iso2022@@Base+0x15d8>
    2e88:	adrp	x20, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2e8c:	ldrb	w8, [x20, #344]
    2e90:	tbz	w8, #0, 2fa0 <PyInit__codecs_iso2022@@Base+0x158c>
    2e94:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e98:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2e9c:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ea0:	mov	w8, #0x1                   	// #1
    2ea4:	add	x0, x0, #0xaa5
    2ea8:	add	x1, x1, #0xb06
    2eac:	add	x2, x2, #0x1a0
    2eb0:	mov	x3, xzr
    2eb4:	strb	w8, [x20, #344]
    2eb8:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2ebc:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2ec0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ec4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ec8:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ecc:	add	x0, x0, #0xaa5
    2ed0:	add	x1, x1, #0xb19
    2ed4:	add	x3, x3, #0x1a8
    2ed8:	mov	x2, xzr
    2edc:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2ee0:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2ee4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2ee8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2eec:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2ef0:	add	x0, x0, #0xaa5
    2ef4:	add	x1, x1, #0xb2e
    2ef8:	add	x3, x3, #0x1b0
    2efc:	mov	x2, xzr
    2f00:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2f04:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2f08:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f0c:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f10:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f14:	add	x0, x0, #0xaa5
    2f18:	add	x1, x1, #0xb43
    2f1c:	add	x2, x2, #0x1b8
    2f20:	mov	x3, xzr
    2f24:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2f28:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2f2c:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f30:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f34:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f38:	add	x0, x0, #0xaa5
    2f3c:	add	x1, x1, #0xb56
    2f40:	add	x3, x3, #0x1c0
    2f44:	mov	x2, xzr
    2f48:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2f4c:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2f50:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f54:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f58:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f5c:	add	x0, x0, #0xaa5
    2f60:	add	x1, x1, #0xb6b
    2f64:	add	x3, x3, #0x1c8
    2f68:	mov	x2, xzr
    2f6c:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2f70:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2f74:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f78:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2f7c:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f80:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2f84:	add	x0, x0, #0xaa5
    2f88:	add	x1, x1, #0xb80
    2f8c:	add	x2, x2, #0x1d0
    2f90:	add	x3, x3, #0x1d8
    2f94:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2f98:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2f9c:	b	2e78 <PyInit__codecs_iso2022@@Base+0x1464>
    2fa0:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fa4:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fa8:	adrp	x2, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fac:	add	x0, x0, #0xaa5
    2fb0:	add	x1, x1, #0xab0
    2fb4:	add	x2, x2, #0x160
    2fb8:	mov	x3, xzr
    2fbc:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2fc0:	cbnz	w0, 2fe8 <PyInit__codecs_iso2022@@Base+0x15d4>
    2fc4:	adrp	x0, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fc8:	adrp	x1, 3000 <PyInit__codecs_iso2022@@Base+0x15ec>
    2fcc:	adrp	x3, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    2fd0:	add	x0, x0, #0xaa5
    2fd4:	add	x1, x1, #0xac1
    2fd8:	add	x3, x3, #0x168
    2fdc:	mov	x2, xzr
    2fe0:	bl	2900 <PyInit__codecs_iso2022@@Base+0xeec>
    2fe4:	cbz	w0, 2e94 <PyInit__codecs_iso2022@@Base+0x1480>
    2fe8:	mov	w0, #0xffffffff            	// #-1
    2fec:	ldp	x20, x19, [sp, #16]
    2ff0:	ldp	x29, x30, [sp], #32
    2ff4:	ret
    2ff8:	ldrb	w9, [x0]
    2ffc:	cmp	x9, #0x21
    3000:	b.ne	3018 <PyInit__codecs_iso2022@@Base+0x1604>  // b.any
    3004:	ldrb	w8, [x0, #1]
    3008:	cmp	w8, #0x40
    300c:	b.ne	3018 <PyInit__codecs_iso2022@@Base+0x1604>  // b.any
    3010:	mov	w0, #0xff3c                	// #65340
    3014:	ret
    3018:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    301c:	ldr	x12, [x8, #360]
    3020:	lsl	x10, x9, #4
    3024:	ldr	x8, [x12, x10]
    3028:	cbz	x8, 3060 <PyInit__codecs_iso2022@@Base+0x164c>
    302c:	add	x13, x12, x9, lsl #4
    3030:	ldrb	w11, [x0, #1]
    3034:	ldrb	w12, [x13, #8]
    3038:	cmp	w11, w12
    303c:	b.cc	3060 <PyInit__codecs_iso2022@@Base+0x164c>  // b.lo, b.ul, b.last
    3040:	ldrb	w13, [x13, #9]
    3044:	cmp	w11, w13
    3048:	b.hi	3060 <PyInit__codecs_iso2022@@Base+0x164c>  // b.pmore
    304c:	sub	x11, x11, x12
    3050:	ldrh	w8, [x8, x11, lsl #1]
    3054:	mov	w11, #0xfffe                	// #65534
    3058:	cmp	w8, w11
    305c:	b.ne	3130 <PyInit__codecs_iso2022@@Base+0x171c>  // b.any
    3060:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3064:	ldr	x12, [x8, #424]
    3068:	ldr	x8, [x12, x10]
    306c:	cbz	x8, 30a4 <PyInit__codecs_iso2022@@Base+0x1690>
    3070:	add	x13, x12, x9, lsl #4
    3074:	ldrb	w11, [x0, #1]
    3078:	ldrb	w12, [x13, #8]
    307c:	cmp	w11, w12
    3080:	b.cc	30a4 <PyInit__codecs_iso2022@@Base+0x1690>  // b.lo, b.ul, b.last
    3084:	ldrb	w13, [x13, #9]
    3088:	cmp	w11, w13
    308c:	b.hi	30a4 <PyInit__codecs_iso2022@@Base+0x1690>  // b.pmore
    3090:	sub	x11, x11, x12
    3094:	ldrh	w8, [x8, x11, lsl #1]
    3098:	mov	w11, #0xfffe                	// #65534
    309c:	cmp	w8, w11
    30a0:	b.ne	3130 <PyInit__codecs_iso2022@@Base+0x171c>  // b.any
    30a4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    30a8:	ldr	x12, [x8, #448]
    30ac:	ldr	x8, [x12, x10]
    30b0:	cbz	x8, 30e8 <PyInit__codecs_iso2022@@Base+0x16d4>
    30b4:	add	x13, x12, x9, lsl #4
    30b8:	ldrb	w11, [x0, #1]
    30bc:	ldrb	w12, [x13, #8]
    30c0:	cmp	w11, w12
    30c4:	b.cc	30e8 <PyInit__codecs_iso2022@@Base+0x16d4>  // b.lo, b.ul, b.last
    30c8:	ldrb	w13, [x13, #9]
    30cc:	cmp	w11, w13
    30d0:	b.hi	30e8 <PyInit__codecs_iso2022@@Base+0x16d4>  // b.pmore
    30d4:	sub	x11, x11, x12
    30d8:	ldrh	w8, [x8, x11, lsl #1]
    30dc:	mov	w11, #0xfffe                	// #65534
    30e0:	cmp	w8, w11
    30e4:	b.ne	3138 <PyInit__codecs_iso2022@@Base+0x1724>  // b.any
    30e8:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    30ec:	ldr	x11, [x8, #472]
    30f0:	ldr	x8, [x11, x10]
    30f4:	cbz	x8, 312c <PyInit__codecs_iso2022@@Base+0x1718>
    30f8:	add	x11, x11, x9, lsl #4
    30fc:	ldrb	w10, [x0, #1]
    3100:	ldrb	w9, [x11, #8]
    3104:	cmp	w10, w9
    3108:	b.cc	312c <PyInit__codecs_iso2022@@Base+0x1718>  // b.lo, b.ul, b.last
    310c:	ldrb	w11, [x11, #9]
    3110:	cmp	w10, w11
    3114:	b.hi	312c <PyInit__codecs_iso2022@@Base+0x1718>  // b.pmore
    3118:	sub	x9, x10, x9
    311c:	ldr	w8, [x8, x9, lsl #2]
    3120:	mov	w9, #0xfffe                	// #65534
    3124:	cmp	w8, w9
    3128:	b.ne	3130 <PyInit__codecs_iso2022@@Base+0x171c>  // b.any
    312c:	mov	w8, #0xffff                	// #65535
    3130:	mov	w0, w8
    3134:	ret
    3138:	orr	w8, w8, #0x20000
    313c:	mov	w0, w8
    3140:	ret
    3144:	stp	x29, x30, [sp, #-32]!
    3148:	stp	x20, x19, [sp, #16]
    314c:	mov	x29, sp
    3150:	ldr	x20, [x1]
    3154:	mov	x2, xzr
    3158:	mov	x19, x1
    315c:	bl	32ac <PyInit__codecs_iso2022@@Base+0x1898>
    3160:	cmp	x20, #0x2
    3164:	b.eq	3184 <PyInit__codecs_iso2022@@Base+0x1770>  // b.none
    3168:	cmp	x20, #0x1
    316c:	b.ne	3194 <PyInit__codecs_iso2022@@Base+0x1780>  // b.any
    3170:	mov	w8, #0xfffe                	// #65534
    3174:	cmp	w8, w0, uxth
    3178:	mov	w8, #0xfffffffe            	// #-2
    317c:	cinc	w0, w8, ne  // ne = any
    3180:	b	3198 <PyInit__codecs_iso2022@@Base+0x1784>
    3184:	ldr	x8, [x19]
    3188:	cmp	x8, #0x2
    318c:	csinv	w0, w0, wzr, eq  // eq = none
    3190:	b	3198 <PyInit__codecs_iso2022@@Base+0x1784>
    3194:	mov	w0, #0xffff                	// #65535
    3198:	ldp	x20, x19, [sp, #16]
    319c:	ldp	x29, x30, [sp], #32
    31a0:	ret
    31a4:	stp	x29, x30, [sp, #-16]!
    31a8:	mov	x29, sp
    31ac:	mov	x2, xzr
    31b0:	bl	32ac <PyInit__codecs_iso2022@@Base+0x1898>
    31b4:	sxth	w9, w0
    31b8:	and	w8, w0, #0xffff
    31bc:	cmn	w9, #0x1
    31c0:	mov	w9, #0xfffd                	// #65533
    31c4:	ccmp	w8, w9, #0x2, le
    31c8:	csinv	w0, w0, wzr, hi  // hi = pmore
    31cc:	ldp	x29, x30, [sp], #16
    31d0:	ret
    31d4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    31d8:	ldrb	w9, [x0]
    31dc:	ldr	x12, [x8, #432]
    31e0:	lsl	x10, x9, #4
    31e4:	ldr	x8, [x12, x10]
    31e8:	cbz	x8, 3220 <PyInit__codecs_iso2022@@Base+0x180c>
    31ec:	add	x13, x12, x9, lsl #4
    31f0:	ldrb	w11, [x0, #1]
    31f4:	ldrb	w12, [x13, #8]
    31f8:	cmp	w11, w12
    31fc:	b.cc	3220 <PyInit__codecs_iso2022@@Base+0x180c>  // b.lo, b.ul, b.last
    3200:	ldrb	w13, [x13, #9]
    3204:	cmp	w11, w13
    3208:	b.hi	3220 <PyInit__codecs_iso2022@@Base+0x180c>  // b.pmore
    320c:	sub	x11, x11, x12
    3210:	ldrh	w8, [x8, x11, lsl #1]
    3214:	mov	w11, #0xfffe                	// #65534
    3218:	cmp	w8, w11
    321c:	b.ne	3270 <PyInit__codecs_iso2022@@Base+0x185c>  // b.any
    3220:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3224:	ldr	x11, [x8, #456]
    3228:	ldr	x8, [x11, x10]
    322c:	cbz	x8, 3264 <PyInit__codecs_iso2022@@Base+0x1850>
    3230:	add	x11, x11, x9, lsl #4
    3234:	ldrb	w10, [x0, #1]
    3238:	ldrb	w9, [x11, #8]
    323c:	cmp	w10, w9
    3240:	b.cc	3264 <PyInit__codecs_iso2022@@Base+0x1850>  // b.lo, b.ul, b.last
    3244:	ldrb	w11, [x11, #9]
    3248:	cmp	w10, w11
    324c:	b.hi	3264 <PyInit__codecs_iso2022@@Base+0x1850>  // b.pmore
    3250:	sub	x9, x10, x9
    3254:	ldrh	w8, [x8, x9, lsl #1]
    3258:	mov	w9, #0xfffe                	// #65534
    325c:	cmp	w8, w9
    3260:	b.ne	326c <PyInit__codecs_iso2022@@Base+0x1858>  // b.any
    3264:	mov	w0, #0xffff                	// #65535
    3268:	ret
    326c:	orr	w8, w8, #0x20000
    3270:	mov	w0, w8
    3274:	ret
    3278:	stp	x29, x30, [sp, #-16]!
    327c:	mov	x29, sp
    3280:	mov	x2, xzr
    3284:	bl	32ac <PyInit__codecs_iso2022@@Base+0x1898>
    3288:	mov	w8, #0xfffd                	// #65533
    328c:	cmp	w8, w0, uxth
    3290:	b.cc	32a4 <PyInit__codecs_iso2022@@Base+0x1890>  // b.lo, b.ul, b.last
    3294:	sxth	w8, w0
    3298:	and	w9, w0, #0x7fff
    329c:	cmp	w8, #0x0
    32a0:	csinv	w0, w9, wzr, lt  // lt = tstop
    32a4:	ldp	x29, x30, [sp], #16
    32a8:	ret
    32ac:	ldr	x8, [x1]
    32b0:	cmp	x8, #0x2
    32b4:	b.eq	32dc <PyInit__codecs_iso2022@@Base+0x18c8>  // b.none
    32b8:	cmp	x8, #0x1
    32bc:	b.eq	3408 <PyInit__codecs_iso2022@@Base+0x19f4>  // b.none
    32c0:	cmn	x8, #0x1
    32c4:	b.ne	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.any
    32c8:	ldr	w9, [x0]
    32cc:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    32d0:	ldr	x8, [x8, #464]
    32d4:	lsl	w9, w9, #16
    32d8:	b	3378 <PyInit__codecs_iso2022@@Base+0x1964>
    32dc:	ldr	w13, [x0]
    32e0:	ldrh	w10, [x0, #4]
    32e4:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    32e8:	ldr	x8, [x8, #464]
    32ec:	mov	w11, wzr
    32f0:	mov	w12, #0x17                  	// #23
    32f4:	lsl	w9, w13, #16
    32f8:	bfi	w10, w13, #16, #16
    32fc:	mov	w13, #0x2e                  	// #46
    3300:	b	3328 <PyInit__codecs_iso2022@@Base+0x1914>
    3304:	cmp	w13, w12
    3308:	mov	w14, w12
    330c:	mov	w12, w13
    3310:	b.eq	3350 <PyInit__codecs_iso2022@@Base+0x193c>  // b.none
    3314:	add	w12, w14, w11
    3318:	cmp	w11, w14
    331c:	asr	w12, w12, #1
    3320:	mov	w13, w14
    3324:	b.eq	3350 <PyInit__codecs_iso2022@@Base+0x193c>  // b.none
    3328:	sbfiz	x14, x12, #3, #32
    332c:	ldr	w14, [x8, x14]
    3330:	cmp	w10, w14
    3334:	b.cc	3304 <PyInit__codecs_iso2022@@Base+0x18f0>  // b.lo, b.ul, b.last
    3338:	cmp	w11, w12
    333c:	b.eq	3350 <PyInit__codecs_iso2022@@Base+0x193c>  // b.none
    3340:	cmp	w10, w14
    3344:	mov	w11, w12
    3348:	mov	w14, w13
    334c:	b.hi	3314 <PyInit__codecs_iso2022@@Base+0x1900>  // b.pmore
    3350:	sbfiz	x11, x12, #3, #32
    3354:	ldr	w11, [x8, x11]
    3358:	cmp	w10, w11
    335c:	b.ne	3378 <PyInit__codecs_iso2022@@Base+0x1964>  // b.any
    3360:	sxtw	x10, w12
    3364:	add	x10, x8, x10, lsl #3
    3368:	ldrh	w0, [x10, #4]
    336c:	mov	w10, #0xfffd                	// #65533
    3370:	cmp	w0, w10
    3374:	b.ne	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.any
    3378:	mov	w12, #0x1                   	// #1
    337c:	mov	w11, wzr
    3380:	mov	w10, #0x17                  	// #23
    3384:	str	x12, [x1]
    3388:	mov	w12, #0x2e                  	// #46
    338c:	b	33b4 <PyInit__codecs_iso2022@@Base+0x19a0>
    3390:	cmp	w12, w10
    3394:	mov	w13, w10
    3398:	mov	w10, w12
    339c:	b.eq	33dc <PyInit__codecs_iso2022@@Base+0x19c8>  // b.none
    33a0:	add	w10, w13, w11
    33a4:	cmp	w11, w13
    33a8:	asr	w10, w10, #1
    33ac:	mov	w12, w13
    33b0:	b.eq	33dc <PyInit__codecs_iso2022@@Base+0x19c8>  // b.none
    33b4:	sbfiz	x13, x10, #3, #32
    33b8:	ldr	w13, [x8, x13]
    33bc:	cmp	w9, w13
    33c0:	b.cc	3390 <PyInit__codecs_iso2022@@Base+0x197c>  // b.lo, b.ul, b.last
    33c4:	cmp	w11, w10
    33c8:	b.eq	33dc <PyInit__codecs_iso2022@@Base+0x19c8>  // b.none
    33cc:	cmp	w9, w13
    33d0:	mov	w11, w10
    33d4:	mov	w13, w12
    33d8:	b.hi	33a0 <PyInit__codecs_iso2022@@Base+0x198c>  // b.pmore
    33dc:	sbfiz	x11, x10, #3, #32
    33e0:	ldr	w11, [x8, x11]
    33e4:	cmp	w9, w11
    33e8:	b.ne	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.any
    33ec:	sxtw	x9, w10
    33f0:	add	x8, x8, x9, lsl #3
    33f4:	ldrh	w0, [x8, #4]
    33f8:	mov	w8, #0xfffd                	// #65533
    33fc:	cmp	w0, w8
    3400:	b.eq	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.none
    3404:	ret
    3408:	ldr	w8, [x0]
    340c:	cmp	w8, #0x10, lsl #12
    3410:	b.cc	3484 <PyInit__codecs_iso2022@@Base+0x1a70>  // b.lo, b.ul, b.last
    3414:	and	w9, w8, #0xffff0000
    3418:	cmp	w9, #0x20, lsl #12
    341c:	b.ne	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.any
    3420:	cmp	x2, #0x7d0
    3424:	b.ne	3438 <PyInit__codecs_iso2022@@Base+0x1a24>  // b.any
    3428:	mov	w9, #0xb9f                 	// #2975
    342c:	movk	w9, #0x2, lsl #16
    3430:	cmp	w8, w9
    3434:	b.eq	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.none
    3438:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    343c:	ldr	x10, [x9, #440]
    3440:	ubfx	x11, x8, #8, #8
    3444:	lsl	x9, x11, #4
    3448:	ldr	x9, [x10, x9]
    344c:	cbz	x9, 3518 <PyInit__codecs_iso2022@@Base+0x1b04>
    3450:	add	x10, x10, x11, lsl #4
    3454:	ldrb	w12, [x10, #8]
    3458:	and	w11, w8, #0xff
    345c:	subs	w8, w11, w12
    3460:	b.cc	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.lo, b.ul, b.last
    3464:	ldrb	w10, [x10, #9]
    3468:	cmp	w11, w10
    346c:	b.hi	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.pmore
    3470:	ldrh	w0, [x9, w8, uxtw #1]
    3474:	mov	w8, #0xffff                	// #65535
    3478:	cmp	w0, w8
    347c:	b.ne	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.any
    3480:	b	3518 <PyInit__codecs_iso2022@@Base+0x1b04>
    3484:	cmp	x2, #0x7d0
    3488:	b.eq	3520 <PyInit__codecs_iso2022@@Base+0x1b0c>  // b.none
    348c:	adrp	x9, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3490:	ldr	x12, [x9, #416]
    3494:	lsr	x9, x8, #8
    3498:	lsl	x10, x9, #4
    349c:	ldr	x11, [x12, x10]
    34a0:	cbz	x11, 34e0 <PyInit__codecs_iso2022@@Base+0x1acc>
    34a4:	add	x13, x12, x9, lsl #4
    34a8:	ldrb	w12, [x13, #8]
    34ac:	and	w14, w8, #0xff
    34b0:	subs	w12, w14, w12
    34b4:	b.cc	34e0 <PyInit__codecs_iso2022@@Base+0x1acc>  // b.lo, b.ul, b.last
    34b8:	ldrb	w13, [x13, #9]
    34bc:	cmp	w14, w13
    34c0:	b.hi	34e0 <PyInit__codecs_iso2022@@Base+0x1acc>  // b.pmore
    34c4:	ldrh	w0, [x11, w12, uxtw #1]
    34c8:	mov	w11, #0xfffe                	// #65534
    34cc:	cmp	w0, w11
    34d0:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    34d4:	mov	w11, #0xffff                	// #65535
    34d8:	cmp	w0, w11
    34dc:	b.ne	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.any
    34e0:	adrp	x11, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    34e4:	ldr	x11, [x11, #352]
    34e8:	ldr	x10, [x11, x10]
    34ec:	cbz	x10, 3518 <PyInit__codecs_iso2022@@Base+0x1b04>
    34f0:	add	x9, x11, x9, lsl #4
    34f4:	ldrb	w12, [x9, #8]
    34f8:	and	w11, w8, #0xff
    34fc:	subs	w8, w11, w12
    3500:	b.cc	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.lo, b.ul, b.last
    3504:	ldrb	w9, [x9, #9]
    3508:	cmp	w11, w9
    350c:	b.hi	3518 <PyInit__codecs_iso2022@@Base+0x1b04>  // b.pmore
    3510:	ldrsh	w0, [x10, w8, uxtw #1]
    3514:	tbz	w0, #31, 3404 <PyInit__codecs_iso2022@@Base+0x19f0>
    3518:	mov	w0, #0xffff                	// #65535
    351c:	ret
    3520:	mov	w9, #0x5c5a                	// #23642
    3524:	cmp	w8, w9
    3528:	mov	w0, #0xffff                	// #65535
    352c:	b.le	355c <PyInit__codecs_iso2022@@Base+0x1b48>
    3530:	mov	w9, #0x7e6a                	// #32362
    3534:	cmp	w8, w9
    3538:	b.gt	3588 <PyInit__codecs_iso2022@@Base+0x1b74>
    353c:	mov	w9, #0x5c5b                	// #23643
    3540:	cmp	w8, w9
    3544:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    3548:	mov	w9, #0x5e77                	// #24183
    354c:	cmp	w8, w9
    3550:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    3554:	mov	w9, #0x7626                	// #30246
    3558:	b	35c4 <PyInit__codecs_iso2022@@Base+0x1bb0>
    355c:	mov	w9, #0x541d                	// #21533
    3560:	cmp	w8, w9
    3564:	b.le	35b4 <PyInit__codecs_iso2022@@Base+0x1ba0>
    3568:	mov	w9, #0x541e                	// #21534
    356c:	cmp	w8, w9
    3570:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    3574:	mov	w9, #0x5653                	// #22099
    3578:	cmp	w8, w9
    357c:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    3580:	mov	w9, #0x59f8                	// #23032
    3584:	b	35c4 <PyInit__codecs_iso2022@@Base+0x1bb0>
    3588:	mov	w9, #0x7e6b                	// #32363
    358c:	cmp	w8, w9
    3590:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    3594:	mov	w9, #0x9b1c                	// #39708
    3598:	cmp	w8, w9
    359c:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    35a0:	mov	w9, #0x9b1d                	// #39709
    35a4:	cmp	w8, w9
    35a8:	b.ne	348c <PyInit__codecs_iso2022@@Base+0x1a78>  // b.any
    35ac:	mov	w0, #0xfd3b                	// #64827
    35b0:	ret
    35b4:	mov	w9, #0x4ff1                	// #20465
    35b8:	cmp	w8, w9
    35bc:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    35c0:	mov	w9, #0x525d                	// #21085
    35c4:	cmp	w8, w9
    35c8:	b.eq	3404 <PyInit__codecs_iso2022@@Base+0x19f0>  // b.none
    35cc:	b	348c <PyInit__codecs_iso2022@@Base+0x1a78>
    35d0:	ldrb	w9, [x0]
    35d4:	cmp	w9, #0x4e
    35d8:	b.gt	3604 <PyInit__codecs_iso2022@@Base+0x1bf0>
    35dc:	cmp	w9, #0x21
    35e0:	b.eq	3630 <PyInit__codecs_iso2022@@Base+0x1c1c>  // b.none
    35e4:	cmp	w9, #0x2e
    35e8:	b.eq	3644 <PyInit__codecs_iso2022@@Base+0x1c30>  // b.none
    35ec:	cmp	w9, #0x2f
    35f0:	b.ne	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.any
    35f4:	ldrb	w8, [x0, #1]
    35f8:	cmp	w8, #0x7e
    35fc:	b.ne	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.any
    3600:	b	3794 <PyInit__codecs_iso2022@@Base+0x1d80>
    3604:	cmp	w9, #0x4f
    3608:	b.eq	3654 <PyInit__codecs_iso2022@@Base+0x1c40>  // b.none
    360c:	cmp	w9, #0x74
    3610:	b.eq	3674 <PyInit__codecs_iso2022@@Base+0x1c60>  // b.none
    3614:	cmp	w9, #0x7e
    3618:	b.ne	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.any
    361c:	ldrb	w8, [x0, #1]
    3620:	sub	w8, w8, #0x7a
    3624:	cmp	w8, #0x5
    3628:	b.cs	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.hs, b.nlast
    362c:	b	3794 <PyInit__codecs_iso2022@@Base+0x1d80>
    3630:	ldrb	w8, [x0, #1]
    3634:	cmp	w8, #0x40
    3638:	b.ne	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.any
    363c:	mov	w0, #0xff3c                	// #65340
    3640:	ret
    3644:	ldrb	w8, [x0, #1]
    3648:	cmp	w8, #0x21
    364c:	b.ne	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.any
    3650:	b	3794 <PyInit__codecs_iso2022@@Base+0x1d80>
    3654:	ldrb	w10, [x0, #1]
    3658:	mov	w8, #0xffff                	// #65535
    365c:	cmp	w10, #0x54
    3660:	b.eq	366c <PyInit__codecs_iso2022@@Base+0x1c58>  // b.none
    3664:	cmp	w10, #0x7e
    3668:	b.ne	3680 <PyInit__codecs_iso2022@@Base+0x1c6c>  // b.any
    366c:	mov	w0, w8
    3670:	ret
    3674:	ldrb	w8, [x0, #1]
    3678:	cmp	w8, #0x27
    367c:	b.eq	3794 <PyInit__codecs_iso2022@@Base+0x1d80>  // b.none
    3680:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3684:	ldr	x12, [x8, #360]
    3688:	lsl	x10, x9, #4
    368c:	ldr	x8, [x12, x10]
    3690:	cbz	x8, 36c8 <PyInit__codecs_iso2022@@Base+0x1cb4>
    3694:	add	x13, x12, x9, lsl #4
    3698:	ldrb	w11, [x0, #1]
    369c:	ldrb	w12, [x13, #8]
    36a0:	cmp	w11, w12
    36a4:	b.cc	36c8 <PyInit__codecs_iso2022@@Base+0x1cb4>  // b.lo, b.ul, b.last
    36a8:	ldrb	w13, [x13, #9]
    36ac:	cmp	w11, w13
    36b0:	b.hi	36c8 <PyInit__codecs_iso2022@@Base+0x1cb4>  // b.pmore
    36b4:	sub	x11, x11, x12
    36b8:	ldrh	w8, [x8, x11, lsl #1]
    36bc:	mov	w11, #0xfffe                	// #65534
    36c0:	cmp	w8, w11
    36c4:	b.ne	366c <PyInit__codecs_iso2022@@Base+0x1c58>  // b.any
    36c8:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    36cc:	ldr	x12, [x8, #424]
    36d0:	ldr	x8, [x12, x10]
    36d4:	cbz	x8, 370c <PyInit__codecs_iso2022@@Base+0x1cf8>
    36d8:	add	x13, x12, x9, lsl #4
    36dc:	ldrb	w11, [x0, #1]
    36e0:	ldrb	w12, [x13, #8]
    36e4:	cmp	w11, w12
    36e8:	b.cc	370c <PyInit__codecs_iso2022@@Base+0x1cf8>  // b.lo, b.ul, b.last
    36ec:	ldrb	w13, [x13, #9]
    36f0:	cmp	w11, w13
    36f4:	b.hi	370c <PyInit__codecs_iso2022@@Base+0x1cf8>  // b.pmore
    36f8:	sub	x11, x11, x12
    36fc:	ldrh	w8, [x8, x11, lsl #1]
    3700:	mov	w11, #0xfffe                	// #65534
    3704:	cmp	w8, w11
    3708:	b.ne	366c <PyInit__codecs_iso2022@@Base+0x1c58>  // b.any
    370c:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3710:	ldr	x12, [x8, #448]
    3714:	ldr	x8, [x12, x10]
    3718:	cbz	x8, 3750 <PyInit__codecs_iso2022@@Base+0x1d3c>
    371c:	add	x13, x12, x9, lsl #4
    3720:	ldrb	w11, [x0, #1]
    3724:	ldrb	w12, [x13, #8]
    3728:	cmp	w11, w12
    372c:	b.cc	3750 <PyInit__codecs_iso2022@@Base+0x1d3c>  // b.lo, b.ul, b.last
    3730:	ldrb	w13, [x13, #9]
    3734:	cmp	w11, w13
    3738:	b.hi	3750 <PyInit__codecs_iso2022@@Base+0x1d3c>  // b.pmore
    373c:	sub	x11, x11, x12
    3740:	ldrh	w8, [x8, x11, lsl #1]
    3744:	mov	w11, #0xfffe                	// #65534
    3748:	cmp	w8, w11
    374c:	b.ne	37a0 <PyInit__codecs_iso2022@@Base+0x1d8c>  // b.any
    3750:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3754:	ldr	x11, [x8, #472]
    3758:	ldr	x8, [x11, x10]
    375c:	cbz	x8, 3794 <PyInit__codecs_iso2022@@Base+0x1d80>
    3760:	add	x11, x11, x9, lsl #4
    3764:	ldrb	w10, [x0, #1]
    3768:	ldrb	w9, [x11, #8]
    376c:	cmp	w10, w9
    3770:	b.cc	3794 <PyInit__codecs_iso2022@@Base+0x1d80>  // b.lo, b.ul, b.last
    3774:	ldrb	w11, [x11, #9]
    3778:	cmp	w10, w11
    377c:	b.hi	3794 <PyInit__codecs_iso2022@@Base+0x1d80>  // b.pmore
    3780:	sub	x9, x10, x9
    3784:	ldr	w8, [x8, x9, lsl #2]
    3788:	mov	w9, #0xfffe                	// #65534
    378c:	cmp	w8, w9
    3790:	b.ne	366c <PyInit__codecs_iso2022@@Base+0x1c58>  // b.any
    3794:	mov	w8, #0xffff                	// #65535
    3798:	mov	w0, w8
    379c:	ret
    37a0:	orr	w8, w8, #0x20000
    37a4:	mov	w0, w8
    37a8:	ret
    37ac:	stp	x29, x30, [sp, #-32]!
    37b0:	stp	x20, x19, [sp, #16]
    37b4:	mov	x29, sp
    37b8:	ldr	x20, [x1]
    37bc:	mov	w2, #0x7d0                 	// #2000
    37c0:	mov	x19, x1
    37c4:	bl	32ac <PyInit__codecs_iso2022@@Base+0x1898>
    37c8:	cmp	x20, #0x2
    37cc:	b.eq	37ec <PyInit__codecs_iso2022@@Base+0x1dd8>  // b.none
    37d0:	cmp	x20, #0x1
    37d4:	b.ne	37fc <PyInit__codecs_iso2022@@Base+0x1de8>  // b.any
    37d8:	mov	w8, #0xfffe                	// #65534
    37dc:	cmp	w8, w0, uxth
    37e0:	mov	w8, #0xfffffffe            	// #-2
    37e4:	cinc	w0, w8, ne  // ne = any
    37e8:	b	3800 <PyInit__codecs_iso2022@@Base+0x1dec>
    37ec:	ldr	x8, [x19]
    37f0:	cmp	x8, #0x2
    37f4:	csinv	w0, w0, wzr, eq  // eq = none
    37f8:	b	3800 <PyInit__codecs_iso2022@@Base+0x1dec>
    37fc:	mov	w0, #0xffff                	// #65535
    3800:	ldp	x20, x19, [sp, #16]
    3804:	ldp	x29, x30, [sp], #32
    3808:	ret
    380c:	stp	x29, x30, [sp, #-16]!
    3810:	mov	x29, sp
    3814:	mov	w2, #0x7d0                 	// #2000
    3818:	bl	32ac <PyInit__codecs_iso2022@@Base+0x1898>
    381c:	sxth	w9, w0
    3820:	and	w8, w0, #0xffff
    3824:	cmn	w9, #0x1
    3828:	mov	w9, #0xfffd                	// #65533
    382c:	ccmp	w8, w9, #0x2, le
    3830:	csinv	w0, w0, wzr, hi  // hi = pmore
    3834:	ldp	x29, x30, [sp], #16
    3838:	ret
    383c:	ldrb	w9, [x0]
    3840:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    3844:	ldr	x12, [x8, #432]
    3848:	lsl	x10, x9, #4
    384c:	ldr	x8, [x12, x10]
    3850:	cbz	x8, 3888 <PyInit__codecs_iso2022@@Base+0x1e74>
    3854:	add	x13, x12, x9, lsl #4
    3858:	ldrb	w11, [x0, #1]
    385c:	ldrb	w12, [x13, #8]
    3860:	cmp	w11, w12
    3864:	b.cc	3888 <PyInit__codecs_iso2022@@Base+0x1e74>  // b.lo, b.ul, b.last
    3868:	ldrb	w13, [x13, #9]
    386c:	cmp	w11, w13
    3870:	b.hi	3888 <PyInit__codecs_iso2022@@Base+0x1e74>  // b.pmore
    3874:	sub	x11, x11, x12
    3878:	ldrh	w8, [x8, x11, lsl #1]
    387c:	mov	w11, #0xfffe                	// #65534
    3880:	cmp	w8, w11
    3884:	b.ne	38d8 <PyInit__codecs_iso2022@@Base+0x1ec4>  // b.any
    3888:	adrp	x8, 15000 <PyInit__codecs_iso2022@@Base+0x135ec>
    388c:	ldr	x11, [x8, #456]
    3890:	ldr	x8, [x11, x10]
    3894:	cbz	x8, 38cc <PyInit__codecs_iso2022@@Base+0x1eb8>
    3898:	add	x11, x11, x9, lsl #4
    389c:	ldrb	w10, [x0, #1]
    38a0:	ldrb	w9, [x11, #8]
    38a4:	cmp	w10, w9
    38a8:	b.cc	38cc <PyInit__codecs_iso2022@@Base+0x1eb8>  // b.lo, b.ul, b.last
    38ac:	ldrb	w11, [x11, #9]
    38b0:	cmp	w10, w11
    38b4:	b.hi	38cc <PyInit__codecs_iso2022@@Base+0x1eb8>  // b.pmore
    38b8:	sub	x9, x10, x9
    38bc:	ldrh	w8, [x8, x9, lsl #1]
    38c0:	mov	w9, #0xfffe                	// #65534
    38c4:	cmp	w8, w9
    38c8:	b.ne	38d4 <PyInit__codecs_iso2022@@Base+0x1ec0>  // b.any
    38cc:	mov	w0, #0xffff                	// #65535
    38d0:	ret
    38d4:	orr	w8, w8, #0x20000
    38d8:	mov	w0, w8
    38dc:	ret
    38e0:	stp	x29, x30, [sp, #-16]!
    38e4:	mov	x29, sp
    38e8:	mov	w2, #0x7d0                 	// #2000
    38ec:	bl	32ac <PyInit__codecs_iso2022@@Base+0x1898>
    38f0:	mov	w8, #0xfffd                	// #65533
    38f4:	cmp	w8, w0, uxth
    38f8:	b.cc	390c <PyInit__codecs_iso2022@@Base+0x1ef8>  // b.lo, b.ul, b.last
    38fc:	sxth	w8, w0
    3900:	and	w9, w0, #0x7fff
    3904:	cmp	w8, #0x0
    3908:	csinv	w0, w9, wzr, lt  // lt = tstop
    390c:	ldp	x29, x30, [sp], #16
    3910:	ret
    3914:	ldrb	w8, [x0]
    3918:	mov	w9, #0xfec0                	// #65216
    391c:	eor	w10, w8, #0x80
    3920:	sub	w8, w8, #0x21
    3924:	add	w9, w10, w9
    3928:	cmp	w8, #0x3f
    392c:	mov	w8, #0xffff                	// #65535
    3930:	csel	w0, w9, w8, cc  // cc = lo, ul, last
    3934:	ret
    3938:	ldr	w8, [x0]
    393c:	mov	w9, #0xffff009f            	// #-65377
    3940:	add	w9, w8, w9
    3944:	add	w8, w8, #0xc0
    3948:	cmp	w9, #0x3f
    394c:	csinv	w0, w8, wzr, cc  // cc = lo, ul, last
    3950:	ret

Disassembly of section .fini:

0000000000003954 <.fini>:
    3954:	stp	x29, x30, [sp, #-16]!
    3958:	mov	x29, sp
    395c:	ldp	x29, x30, [sp], #16
    3960:	ret
