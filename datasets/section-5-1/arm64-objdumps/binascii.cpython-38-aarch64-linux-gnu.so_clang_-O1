
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//binascii.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000016c8 <.init>:
    16c8:	stp	x29, x30, [sp, #-16]!
    16cc:	mov	x29, sp
    16d0:	bl	1930 <PyMem_Malloc@plt+0x10>
    16d4:	ldp	x29, x30, [sp], #16
    16d8:	ret

Disassembly of section .plt:

00000000000016e0 <_PyUnicode_Ready@plt-0x20>:
    16e0:	stp	x16, x30, [sp, #-16]!
    16e4:	adrp	x16, 15000 <PyInit_binascii@@Base+0x135fc>
    16e8:	ldr	x17, [x16, #4088]
    16ec:	add	x16, x16, #0xff8
    16f0:	br	x17
    16f4:	nop
    16f8:	nop
    16fc:	nop

0000000000001700 <_PyUnicode_Ready@plt>:
    1700:	adrp	x16, 16000 <_PyUnicode_Ready>
    1704:	ldr	x17, [x16]
    1708:	add	x16, x16, #0x0
    170c:	br	x17

0000000000001710 <PyModuleDef_Init@plt>:
    1710:	adrp	x16, 16000 <_PyUnicode_Ready>
    1714:	ldr	x17, [x16, #8]
    1718:	add	x16, x16, #0x8
    171c:	br	x17

0000000000001720 <PyMem_Free@plt>:
    1720:	adrp	x16, 16000 <_PyUnicode_Ready>
    1724:	ldr	x17, [x16, #16]
    1728:	add	x16, x16, #0x10
    172c:	br	x17

0000000000001730 <PyBuffer_Release@plt>:
    1730:	adrp	x16, 16000 <_PyUnicode_Ready>
    1734:	ldr	x17, [x16, #24]
    1738:	add	x16, x16, #0x18
    173c:	br	x17

0000000000001740 <__cxa_finalize@plt>:
    1740:	adrp	x16, 16000 <_PyUnicode_Ready>
    1744:	ldr	x17, [x16, #32]
    1748:	add	x16, x16, #0x20
    174c:	br	x17

0000000000001750 <crc32@plt>:
    1750:	adrp	x16, 16000 <_PyUnicode_Ready>
    1754:	ldr	x17, [x16, #40]
    1758:	add	x16, x16, #0x28
    175c:	br	x17

0000000000001760 <PyBuffer_IsContiguous@plt>:
    1760:	adrp	x16, 16000 <_PyUnicode_Ready>
    1764:	ldr	x17, [x16, #48]
    1768:	add	x16, x16, #0x30
    176c:	br	x17

0000000000001770 <PyBytes_FromStringAndSize@plt>:
    1770:	adrp	x16, 16000 <_PyUnicode_Ready>
    1774:	ldr	x17, [x16, #56]
    1778:	add	x16, x16, #0x38
    177c:	br	x17

0000000000001780 <_Py_Dealloc@plt>:
    1780:	adrp	x16, 16000 <_PyUnicode_Ready>
    1784:	ldr	x17, [x16, #64]
    1788:	add	x16, x16, #0x40
    178c:	br	x17

0000000000001790 <PyErr_NoMemory@plt>:
    1790:	adrp	x16, 16000 <_PyUnicode_Ready>
    1794:	ldr	x17, [x16, #72]
    1798:	add	x16, x16, #0x48
    179c:	br	x17

00000000000017a0 <_PyBytesWriter_Prepare@plt>:
    17a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17a4:	ldr	x17, [x16, #80]
    17a8:	add	x16, x16, #0x50
    17ac:	br	x17

00000000000017b0 <_PyArg_UnpackKeywords@plt>:
    17b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17b4:	ldr	x17, [x16, #88]
    17b8:	add	x16, x16, #0x58
    17bc:	br	x17

00000000000017c0 <PyErr_SetString@plt>:
    17c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17c4:	ldr	x17, [x16, #96]
    17c8:	add	x16, x16, #0x60
    17cc:	br	x17

00000000000017d0 <_PyBytesWriter_Finish@plt>:
    17d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17d4:	ldr	x17, [x16, #104]
    17d8:	add	x16, x16, #0x68
    17dc:	br	x17

00000000000017e0 <PyModule_GetState@plt>:
    17e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17e4:	ldr	x17, [x16, #112]
    17e8:	add	x16, x16, #0x70
    17ec:	br	x17

00000000000017f0 <memset@plt>:
    17f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    17f4:	ldr	x17, [x16, #120]
    17f8:	add	x16, x16, #0x78
    17fc:	br	x17

0000000000001800 <_PyBytesWriter_Init@plt>:
    1800:	adrp	x16, 16000 <_PyUnicode_Ready>
    1804:	ldr	x17, [x16, #128]
    1808:	add	x16, x16, #0x80
    180c:	br	x17

0000000000001810 <_PyArg_BadArgument@plt>:
    1810:	adrp	x16, 16000 <_PyUnicode_Ready>
    1814:	ldr	x17, [x16, #136]
    1818:	add	x16, x16, #0x88
    181c:	br	x17

0000000000001820 <PyErr_NewException@plt>:
    1820:	adrp	x16, 16000 <_PyUnicode_Ready>
    1824:	ldr	x17, [x16, #144]
    1828:	add	x16, x16, #0x90
    182c:	br	x17

0000000000001830 <_PyBytesWriter_Alloc@plt>:
    1830:	adrp	x16, 16000 <_PyUnicode_Ready>
    1834:	ldr	x17, [x16, #152]
    1838:	add	x16, x16, #0x98
    183c:	br	x17

0000000000001840 <PyLong_AsUnsignedLongMask@plt>:
    1840:	adrp	x16, 16000 <_PyUnicode_Ready>
    1844:	ldr	x17, [x16, #160]
    1848:	add	x16, x16, #0xa0
    184c:	br	x17

0000000000001850 <__gmon_start__@plt>:
    1850:	adrp	x16, 16000 <_PyUnicode_Ready>
    1854:	ldr	x17, [x16, #168]
    1858:	add	x16, x16, #0xa8
    185c:	br	x17

0000000000001860 <_PyArg_CheckPositional@plt>:
    1860:	adrp	x16, 16000 <_PyUnicode_Ready>
    1864:	ldr	x17, [x16, #176]
    1868:	add	x16, x16, #0xb0
    186c:	br	x17

0000000000001870 <PyErr_Occurred@plt>:
    1870:	adrp	x16, 16000 <_PyUnicode_Ready>
    1874:	ldr	x17, [x16, #184]
    1878:	add	x16, x16, #0xb8
    187c:	br	x17

0000000000001880 <PyObject_GetBuffer@plt>:
    1880:	adrp	x16, 16000 <_PyUnicode_Ready>
    1884:	ldr	x17, [x16, #192]
    1888:	add	x16, x16, #0xc0
    188c:	br	x17

0000000000001890 <PyLong_FromUnsignedLong@plt>:
    1890:	adrp	x16, 16000 <_PyUnicode_Ready>
    1894:	ldr	x17, [x16, #200]
    1898:	add	x16, x16, #0xc8
    189c:	br	x17

00000000000018a0 <_Py_strhex_bytes_with_sep@plt>:
    18a0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18a4:	ldr	x17, [x16, #208]
    18a8:	add	x16, x16, #0xd0
    18ac:	br	x17

00000000000018b0 <_PyBytesWriter_Dealloc@plt>:
    18b0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18b4:	ldr	x17, [x16, #216]
    18b8:	add	x16, x16, #0xd8
    18bc:	br	x17

00000000000018c0 <memchr@plt>:
    18c0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18c4:	ldr	x17, [x16, #224]
    18c8:	add	x16, x16, #0xe0
    18cc:	br	x17

00000000000018d0 <PyModule_AddObject@plt>:
    18d0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18d4:	ldr	x17, [x16, #232]
    18d8:	add	x16, x16, #0xe8
    18dc:	br	x17

00000000000018e0 <PyType_IsSubtype@plt>:
    18e0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18e4:	ldr	x17, [x16, #240]
    18e8:	add	x16, x16, #0xf0
    18ec:	br	x17

00000000000018f0 <PyErr_Format@plt>:
    18f0:	adrp	x16, 16000 <_PyUnicode_Ready>
    18f4:	ldr	x17, [x16, #248]
    18f8:	add	x16, x16, #0xf8
    18fc:	br	x17

0000000000001900 <_Py_BuildValue_SizeT@plt>:
    1900:	adrp	x16, 16000 <_PyUnicode_Ready>
    1904:	ldr	x17, [x16, #256]
    1908:	add	x16, x16, #0x100
    190c:	br	x17

0000000000001910 <_PyLong_AsInt@plt>:
    1910:	adrp	x16, 16000 <_PyUnicode_Ready>
    1914:	ldr	x17, [x16, #264]
    1918:	add	x16, x16, #0x108
    191c:	br	x17

0000000000001920 <PyMem_Malloc@plt>:
    1920:	adrp	x16, 16000 <_PyUnicode_Ready>
    1924:	ldr	x17, [x16, #272]
    1928:	add	x16, x16, #0x110
    192c:	br	x17

Disassembly of section .text:

0000000000001930 <PyInit_binascii@@Base-0xd4>:
    1930:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    1934:	ldr	x0, [x0, #4048]
    1938:	cbz	x0, 1940 <PyMem_Malloc@plt+0x20>
    193c:	b	1850 <__gmon_start__@plt>
    1940:	ret
    1944:	nop
    1948:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    194c:	add	x0, x0, #0x548
    1950:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1954:	add	x1, x1, #0x548
    1958:	cmp	x1, x0
    195c:	b.eq	1974 <PyMem_Malloc@plt+0x54>  // b.none
    1960:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1964:	ldr	x1, [x1, #4008]
    1968:	cbz	x1, 1974 <PyMem_Malloc@plt+0x54>
    196c:	mov	x16, x1
    1970:	br	x16
    1974:	ret
    1978:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    197c:	add	x0, x0, #0x548
    1980:	adrp	x1, 16000 <PyInit_binascii@@Base+0x145fc>
    1984:	add	x1, x1, #0x548
    1988:	sub	x1, x1, x0
    198c:	lsr	x2, x1, #63
    1990:	add	x1, x2, x1, asr #3
    1994:	cmp	xzr, x1, asr #1
    1998:	asr	x1, x1, #1
    199c:	b.eq	19b4 <PyMem_Malloc@plt+0x94>  // b.none
    19a0:	adrp	x2, 15000 <PyInit_binascii@@Base+0x135fc>
    19a4:	ldr	x2, [x2, #4064]
    19a8:	cbz	x2, 19b4 <PyMem_Malloc@plt+0x94>
    19ac:	mov	x16, x2
    19b0:	br	x16
    19b4:	ret
    19b8:	stp	x29, x30, [sp, #-32]!
    19bc:	mov	x29, sp
    19c0:	str	x19, [sp, #16]
    19c4:	adrp	x19, 16000 <PyInit_binascii@@Base+0x145fc>
    19c8:	ldrb	w0, [x19, #1352]
    19cc:	cbnz	w0, 19f4 <PyMem_Malloc@plt+0xd4>
    19d0:	adrp	x0, 15000 <PyInit_binascii@@Base+0x135fc>
    19d4:	ldr	x0, [x0, #4024]
    19d8:	cbz	x0, 19e8 <PyMem_Malloc@plt+0xc8>
    19dc:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    19e0:	ldr	x0, [x0, #280]
    19e4:	bl	1740 <__cxa_finalize@plt>
    19e8:	bl	1948 <PyMem_Malloc@plt+0x28>
    19ec:	mov	w0, #0x1                   	// #1
    19f0:	strb	w0, [x19, #1352]
    19f4:	ldr	x19, [sp, #16]
    19f8:	ldp	x29, x30, [sp], #32
    19fc:	ret
    1a00:	b	1978 <PyMem_Malloc@plt+0x58>

0000000000001a04 <PyInit_binascii@@Base>:
    1a04:	stp	x29, x30, [sp, #-16]!
    1a08:	mov	x29, sp
    1a0c:	adrp	x0, 16000 <PyInit_binascii@@Base+0x145fc>
    1a10:	add	x0, x0, #0x120
    1a14:	bl	1710 <PyModuleDef_Init@plt>
    1a18:	ldp	x29, x30, [sp], #16
    1a1c:	ret
    1a20:	sub	sp, sp, #0x70
    1a24:	stp	x29, x30, [sp, #80]
    1a28:	str	x19, [sp, #96]
    1a2c:	add	x29, sp, #0x50
    1a30:	mov	x8, x1
    1a34:	mov	x19, x0
    1a38:	movi	v0.2d, #0x0
    1a3c:	mov	x1, sp
    1a40:	mov	x0, x8
    1a44:	stp	q0, q0, [sp, #48]
    1a48:	stp	q0, q0, [sp, #16]
    1a4c:	str	q0, [sp]
    1a50:	bl	2bc8 <PyInit_binascii@@Base+0x11c4>
    1a54:	cbz	w0, 1a8c <PyInit_binascii@@Base+0x88>
    1a58:	mov	x1, sp
    1a5c:	mov	x0, x19
    1a60:	bl	2ce0 <PyInit_binascii@@Base+0x12dc>
    1a64:	mov	x19, x0
    1a68:	ldr	x8, [sp, #8]
    1a6c:	cbz	x8, 1a78 <PyInit_binascii@@Base+0x74>
    1a70:	mov	x0, sp
    1a74:	bl	1730 <PyBuffer_Release@plt>
    1a78:	mov	x0, x19
    1a7c:	ldr	x19, [sp, #96]
    1a80:	ldp	x29, x30, [sp, #80]
    1a84:	add	sp, sp, #0x70
    1a88:	ret
    1a8c:	mov	x19, xzr
    1a90:	ldr	x8, [sp, #8]
    1a94:	cbnz	x8, 1a70 <PyInit_binascii@@Base+0x6c>
    1a98:	b	1a78 <PyInit_binascii@@Base+0x74>
    1a9c:	sub	sp, sp, #0xa0
    1aa0:	stp	x29, x30, [sp, #112]
    1aa4:	stp	x22, x21, [sp, #128]
    1aa8:	stp	x20, x19, [sp, #144]
    1aac:	add	x29, sp, #0x70
    1ab0:	mov	x21, x2
    1ab4:	mov	x20, x1
    1ab8:	mov	x19, x0
    1abc:	cbz	x3, 1ac8 <PyInit_binascii@@Base+0xc4>
    1ac0:	ldr	x22, [x3, #16]
    1ac4:	b	1acc <PyInit_binascii@@Base+0xc8>
    1ac8:	mov	x22, xzr
    1acc:	movi	v0.2d, #0x0
    1ad0:	stp	q0, q0, [sp, #64]
    1ad4:	stp	q0, q0, [sp, #32]
    1ad8:	str	q0, [sp, #16]
    1adc:	cbz	x20, 1af4 <PyInit_binascii@@Base+0xf0>
    1ae0:	cmp	x21, #0x1
    1ae4:	b.ne	1af4 <PyInit_binascii@@Base+0xf0>  // b.any
    1ae8:	cbnz	x3, 1af4 <PyInit_binascii@@Base+0xf0>
    1aec:	cbnz	x20, 1b28 <PyInit_binascii@@Base+0x124>
    1af0:	b	1b3c <PyInit_binascii@@Base+0x138>
    1af4:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    1af8:	sub	x8, x29, #0x10
    1afc:	add	x4, x4, #0x3c8
    1b00:	mov	w5, #0x1                   	// #1
    1b04:	mov	w6, #0x1                   	// #1
    1b08:	mov	x0, x20
    1b0c:	mov	x1, x21
    1b10:	mov	x2, xzr
    1b14:	mov	w7, wzr
    1b18:	str	x8, [sp]
    1b1c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    1b20:	mov	x20, x0
    1b24:	cbz	x20, 1b3c <PyInit_binascii@@Base+0x138>
    1b28:	ldr	x0, [x20]
    1b2c:	add	x1, sp, #0x10
    1b30:	mov	w2, wzr
    1b34:	bl	1880 <PyObject_GetBuffer@plt>
    1b38:	cbz	w0, 1b68 <PyInit_binascii@@Base+0x164>
    1b3c:	mov	x19, xzr
    1b40:	ldr	x8, [sp, #24]
    1b44:	cbz	x8, 1b50 <PyInit_binascii@@Base+0x14c>
    1b48:	add	x0, sp, #0x10
    1b4c:	bl	1730 <PyBuffer_Release@plt>
    1b50:	mov	x0, x19
    1b54:	ldp	x20, x19, [sp, #144]
    1b58:	ldp	x22, x21, [sp, #128]
    1b5c:	ldp	x29, x30, [sp, #112]
    1b60:	add	sp, sp, #0xa0
    1b64:	ret
    1b68:	add	x0, sp, #0x10
    1b6c:	mov	w1, #0x43                  	// #67
    1b70:	bl	1760 <PyBuffer_IsContiguous@plt>
    1b74:	cbz	w0, 1ba4 <PyInit_binascii@@Base+0x1a0>
    1b78:	add	x8, x22, x21
    1b7c:	cmp	x8, #0x1
    1b80:	b.ne	1bc8 <PyInit_binascii@@Base+0x1c4>  // b.any
    1b84:	mov	w2, wzr
    1b88:	add	x1, sp, #0x10
    1b8c:	mov	x0, x19
    1b90:	bl	2eac <PyInit_binascii@@Base+0x14a8>
    1b94:	mov	x19, x0
    1b98:	ldr	x8, [sp, #24]
    1b9c:	cbnz	x8, 1b48 <PyInit_binascii@@Base+0x144>
    1ba0:	b	1b50 <PyInit_binascii@@Base+0x14c>
    1ba4:	ldr	x3, [x20]
    1ba8:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    1bac:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1bb0:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    1bb4:	add	x0, x0, #0x5e
    1bb8:	add	x1, x1, #0x1ab
    1bbc:	add	x2, x2, #0x1b6
    1bc0:	bl	1810 <_PyArg_BadArgument@plt>
    1bc4:	b	1b3c <PyInit_binascii@@Base+0x138>
    1bc8:	ldr	x8, [x20, #8]
    1bcc:	ldr	x0, [x8, #8]
    1bd0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1bd4:	ldr	x8, [x8, #4016]
    1bd8:	cmp	x0, x8
    1bdc:	b.eq	1bf0 <PyInit_binascii@@Base+0x1ec>  // b.none
    1be0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1be4:	ldr	x1, [x1, #4016]
    1be8:	bl	18e0 <PyType_IsSubtype@plt>
    1bec:	cbz	w0, 1c0c <PyInit_binascii@@Base+0x208>
    1bf0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1bf4:	ldr	x8, [x8, #4040]
    1bf8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1bfc:	add	x1, x1, #0x1c8
    1c00:	ldr	x0, [x8]
    1c04:	bl	17c0 <PyErr_SetString@plt>
    1c08:	b	1b3c <PyInit_binascii@@Base+0x138>
    1c0c:	ldr	x0, [x20, #8]
    1c10:	bl	1910 <_PyLong_AsInt@plt>
    1c14:	mov	w2, w0
    1c18:	cmn	w0, #0x1
    1c1c:	b.ne	1b88 <PyInit_binascii@@Base+0x184>  // b.any
    1c20:	bl	1870 <PyErr_Occurred@plt>
    1c24:	cbnz	x0, 1b3c <PyInit_binascii@@Base+0x138>
    1c28:	mov	w2, #0xffffffff            	// #-1
    1c2c:	b	1b88 <PyInit_binascii@@Base+0x184>
    1c30:	sub	sp, sp, #0x70
    1c34:	stp	x29, x30, [sp, #80]
    1c38:	str	x19, [sp, #96]
    1c3c:	add	x29, sp, #0x50
    1c40:	mov	x8, x1
    1c44:	mov	x19, x0
    1c48:	movi	v0.2d, #0x0
    1c4c:	mov	x1, sp
    1c50:	mov	x0, x8
    1c54:	stp	q0, q0, [sp, #48]
    1c58:	stp	q0, q0, [sp, #16]
    1c5c:	str	q0, [sp]
    1c60:	bl	2bc8 <PyInit_binascii@@Base+0x11c4>
    1c64:	cbz	w0, 1c9c <PyInit_binascii@@Base+0x298>
    1c68:	mov	x1, sp
    1c6c:	mov	x0, x19
    1c70:	bl	2fe8 <PyInit_binascii@@Base+0x15e4>
    1c74:	mov	x19, x0
    1c78:	ldr	x8, [sp, #8]
    1c7c:	cbz	x8, 1c88 <PyInit_binascii@@Base+0x284>
    1c80:	mov	x0, sp
    1c84:	bl	1730 <PyBuffer_Release@plt>
    1c88:	mov	x0, x19
    1c8c:	ldr	x19, [sp, #96]
    1c90:	ldp	x29, x30, [sp, #80]
    1c94:	add	sp, sp, #0x70
    1c98:	ret
    1c9c:	mov	x19, xzr
    1ca0:	ldr	x8, [sp, #8]
    1ca4:	cbnz	x8, 1c80 <PyInit_binascii@@Base+0x27c>
    1ca8:	b	1c88 <PyInit_binascii@@Base+0x284>
    1cac:	sub	sp, sp, #0xa0
    1cb0:	stp	x29, x30, [sp, #112]
    1cb4:	stp	x22, x21, [sp, #128]
    1cb8:	stp	x20, x19, [sp, #144]
    1cbc:	add	x29, sp, #0x70
    1cc0:	mov	x21, x2
    1cc4:	mov	x20, x1
    1cc8:	mov	x19, x0
    1ccc:	cbz	x3, 1cd8 <PyInit_binascii@@Base+0x2d4>
    1cd0:	ldr	x22, [x3, #16]
    1cd4:	b	1cdc <PyInit_binascii@@Base+0x2d8>
    1cd8:	mov	x22, xzr
    1cdc:	movi	v0.2d, #0x0
    1ce0:	stp	q0, q0, [sp, #64]
    1ce4:	stp	q0, q0, [sp, #32]
    1ce8:	str	q0, [sp, #16]
    1cec:	cbz	x20, 1d04 <PyInit_binascii@@Base+0x300>
    1cf0:	cmp	x21, #0x1
    1cf4:	b.ne	1d04 <PyInit_binascii@@Base+0x300>  // b.any
    1cf8:	cbnz	x3, 1d04 <PyInit_binascii@@Base+0x300>
    1cfc:	cbnz	x20, 1d38 <PyInit_binascii@@Base+0x334>
    1d00:	b	1d4c <PyInit_binascii@@Base+0x348>
    1d04:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    1d08:	sub	x8, x29, #0x10
    1d0c:	add	x4, x4, #0x408
    1d10:	mov	w5, #0x1                   	// #1
    1d14:	mov	w6, #0x1                   	// #1
    1d18:	mov	x0, x20
    1d1c:	mov	x1, x21
    1d20:	mov	x2, xzr
    1d24:	mov	w7, wzr
    1d28:	str	x8, [sp]
    1d2c:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    1d30:	mov	x20, x0
    1d34:	cbz	x20, 1d4c <PyInit_binascii@@Base+0x348>
    1d38:	ldr	x0, [x20]
    1d3c:	add	x1, sp, #0x10
    1d40:	mov	w2, wzr
    1d44:	bl	1880 <PyObject_GetBuffer@plt>
    1d48:	cbz	w0, 1d78 <PyInit_binascii@@Base+0x374>
    1d4c:	mov	x19, xzr
    1d50:	ldr	x8, [sp, #24]
    1d54:	cbz	x8, 1d60 <PyInit_binascii@@Base+0x35c>
    1d58:	add	x0, sp, #0x10
    1d5c:	bl	1730 <PyBuffer_Release@plt>
    1d60:	mov	x0, x19
    1d64:	ldp	x20, x19, [sp, #144]
    1d68:	ldp	x22, x21, [sp, #128]
    1d6c:	ldp	x29, x30, [sp, #112]
    1d70:	add	sp, sp, #0xa0
    1d74:	ret
    1d78:	add	x0, sp, #0x10
    1d7c:	mov	w1, #0x43                  	// #67
    1d80:	bl	1760 <PyBuffer_IsContiguous@plt>
    1d84:	cbz	w0, 1db4 <PyInit_binascii@@Base+0x3b0>
    1d88:	add	x8, x22, x21
    1d8c:	cmp	x8, #0x1
    1d90:	b.ne	1dd8 <PyInit_binascii@@Base+0x3d4>  // b.any
    1d94:	mov	w2, #0x1                   	// #1
    1d98:	add	x1, sp, #0x10
    1d9c:	mov	x0, x19
    1da0:	bl	3240 <PyInit_binascii@@Base+0x183c>
    1da4:	mov	x19, x0
    1da8:	ldr	x8, [sp, #24]
    1dac:	cbnz	x8, 1d58 <PyInit_binascii@@Base+0x354>
    1db0:	b	1d60 <PyInit_binascii@@Base+0x35c>
    1db4:	ldr	x3, [x20]
    1db8:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    1dbc:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1dc0:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    1dc4:	add	x0, x0, #0x70
    1dc8:	add	x1, x1, #0x1ab
    1dcc:	add	x2, x2, #0x1b6
    1dd0:	bl	1810 <_PyArg_BadArgument@plt>
    1dd4:	b	1d4c <PyInit_binascii@@Base+0x348>
    1dd8:	ldr	x8, [x20, #8]
    1ddc:	ldr	x0, [x8, #8]
    1de0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1de4:	ldr	x8, [x8, #4016]
    1de8:	cmp	x0, x8
    1dec:	b.eq	1e00 <PyInit_binascii@@Base+0x3fc>  // b.none
    1df0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    1df4:	ldr	x1, [x1, #4016]
    1df8:	bl	18e0 <PyType_IsSubtype@plt>
    1dfc:	cbz	w0, 1e1c <PyInit_binascii@@Base+0x418>
    1e00:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    1e04:	ldr	x8, [x8, #4040]
    1e08:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1e0c:	add	x1, x1, #0x1c8
    1e10:	ldr	x0, [x8]
    1e14:	bl	17c0 <PyErr_SetString@plt>
    1e18:	b	1d4c <PyInit_binascii@@Base+0x348>
    1e1c:	ldr	x0, [x20, #8]
    1e20:	bl	1910 <_PyLong_AsInt@plt>
    1e24:	mov	w2, w0
    1e28:	cmn	w0, #0x1
    1e2c:	b.ne	1d98 <PyInit_binascii@@Base+0x394>  // b.any
    1e30:	bl	1870 <PyErr_Occurred@plt>
    1e34:	cbnz	x0, 1d4c <PyInit_binascii@@Base+0x348>
    1e38:	mov	w2, #0xffffffff            	// #-1
    1e3c:	b	1d98 <PyInit_binascii@@Base+0x394>
    1e40:	sub	sp, sp, #0x70
    1e44:	stp	x29, x30, [sp, #80]
    1e48:	str	x19, [sp, #96]
    1e4c:	add	x29, sp, #0x50
    1e50:	mov	x8, x1
    1e54:	mov	x19, x0
    1e58:	movi	v0.2d, #0x0
    1e5c:	mov	x1, sp
    1e60:	mov	x0, x8
    1e64:	stp	q0, q0, [sp, #48]
    1e68:	stp	q0, q0, [sp, #16]
    1e6c:	str	q0, [sp]
    1e70:	bl	2bc8 <PyInit_binascii@@Base+0x11c4>
    1e74:	cbz	w0, 1eac <PyInit_binascii@@Base+0x4a8>
    1e78:	mov	x1, sp
    1e7c:	mov	x0, x19
    1e80:	bl	33bc <PyInit_binascii@@Base+0x19b8>
    1e84:	mov	x19, x0
    1e88:	ldr	x8, [sp, #8]
    1e8c:	cbz	x8, 1e98 <PyInit_binascii@@Base+0x494>
    1e90:	mov	x0, sp
    1e94:	bl	1730 <PyBuffer_Release@plt>
    1e98:	mov	x0, x19
    1e9c:	ldr	x19, [sp, #96]
    1ea0:	ldp	x29, x30, [sp, #80]
    1ea4:	add	sp, sp, #0x70
    1ea8:	ret
    1eac:	mov	x19, xzr
    1eb0:	ldr	x8, [sp, #8]
    1eb4:	cbnz	x8, 1e90 <PyInit_binascii@@Base+0x48c>
    1eb8:	b	1e98 <PyInit_binascii@@Base+0x494>
    1ebc:	sub	sp, sp, #0x70
    1ec0:	stp	x29, x30, [sp, #80]
    1ec4:	str	x19, [sp, #96]
    1ec8:	add	x29, sp, #0x50
    1ecc:	mov	x19, x1
    1ed0:	movi	v0.2d, #0x0
    1ed4:	mov	x1, sp
    1ed8:	mov	x0, x19
    1edc:	mov	w2, wzr
    1ee0:	stp	q0, q0, [sp, #48]
    1ee4:	stp	q0, q0, [sp, #16]
    1ee8:	str	q0, [sp]
    1eec:	bl	1880 <PyObject_GetBuffer@plt>
    1ef0:	cbz	w0, 1f1c <PyInit_binascii@@Base+0x518>
    1ef4:	mov	x19, xzr
    1ef8:	ldr	x8, [sp, #8]
    1efc:	cbz	x8, 1f08 <PyInit_binascii@@Base+0x504>
    1f00:	mov	x0, sp
    1f04:	bl	1730 <PyBuffer_Release@plt>
    1f08:	mov	x0, x19
    1f0c:	ldr	x19, [sp, #96]
    1f10:	ldp	x29, x30, [sp, #80]
    1f14:	add	sp, sp, #0x70
    1f18:	ret
    1f1c:	mov	x0, sp
    1f20:	mov	w1, #0x43                  	// #67
    1f24:	bl	1760 <PyBuffer_IsContiguous@plt>
    1f28:	cbz	w0, 1f44 <PyInit_binascii@@Base+0x540>
    1f2c:	mov	x0, sp
    1f30:	bl	3528 <PyInit_binascii@@Base+0x1b24>
    1f34:	mov	x19, x0
    1f38:	ldr	x8, [sp, #8]
    1f3c:	cbnz	x8, 1f00 <PyInit_binascii@@Base+0x4fc>
    1f40:	b	1f08 <PyInit_binascii@@Base+0x504>
    1f44:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    1f48:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    1f4c:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    1f50:	add	x0, x0, #0x83
    1f54:	add	x1, x1, #0x30d
    1f58:	add	x2, x2, #0x1b6
    1f5c:	mov	x3, x19
    1f60:	bl	1810 <_PyArg_BadArgument@plt>
    1f64:	b	1ef4 <PyInit_binascii@@Base+0x4f0>
    1f68:	sub	sp, sp, #0x70
    1f6c:	stp	x29, x30, [sp, #80]
    1f70:	str	x19, [sp, #96]
    1f74:	add	x29, sp, #0x50
    1f78:	mov	x8, x1
    1f7c:	mov	x19, x0
    1f80:	movi	v0.2d, #0x0
    1f84:	mov	x1, sp
    1f88:	mov	x0, x8
    1f8c:	stp	q0, q0, [sp, #48]
    1f90:	stp	q0, q0, [sp, #16]
    1f94:	str	q0, [sp]
    1f98:	bl	2bc8 <PyInit_binascii@@Base+0x11c4>
    1f9c:	cbz	w0, 1fd4 <PyInit_binascii@@Base+0x5d0>
    1fa0:	mov	x1, sp
    1fa4:	mov	x0, x19
    1fa8:	bl	3618 <PyInit_binascii@@Base+0x1c14>
    1fac:	mov	x19, x0
    1fb0:	ldr	x8, [sp, #8]
    1fb4:	cbz	x8, 1fc0 <PyInit_binascii@@Base+0x5bc>
    1fb8:	mov	x0, sp
    1fbc:	bl	1730 <PyBuffer_Release@plt>
    1fc0:	mov	x0, x19
    1fc4:	ldr	x19, [sp, #96]
    1fc8:	ldp	x29, x30, [sp, #80]
    1fcc:	add	sp, sp, #0x70
    1fd0:	ret
    1fd4:	mov	x19, xzr
    1fd8:	ldr	x8, [sp, #8]
    1fdc:	cbnz	x8, 1fb8 <PyInit_binascii@@Base+0x5b4>
    1fe0:	b	1fc0 <PyInit_binascii@@Base+0x5bc>
    1fe4:	sub	sp, sp, #0xb0
    1fe8:	stp	x29, x30, [sp, #128]
    1fec:	str	x21, [sp, #144]
    1ff0:	stp	x20, x19, [sp, #160]
    1ff4:	add	x29, sp, #0x80
    1ff8:	mov	x20, x2
    1ffc:	mov	x19, x1
    2000:	cbz	x3, 200c <PyInit_binascii@@Base+0x608>
    2004:	ldr	x21, [x3, #16]
    2008:	b	2010 <PyInit_binascii@@Base+0x60c>
    200c:	mov	x21, xzr
    2010:	movi	v0.2d, #0x0
    2014:	stp	q0, q0, [sp, #64]
    2018:	stp	q0, q0, [sp, #32]
    201c:	str	q0, [sp, #16]
    2020:	cbz	x19, 2060 <PyInit_binascii@@Base+0x65c>
    2024:	sub	x8, x20, #0x1
    2028:	cmp	x8, #0x2
    202c:	b.hi	2060 <PyInit_binascii@@Base+0x65c>  // b.pmore
    2030:	cbnz	x3, 2060 <PyInit_binascii@@Base+0x65c>
    2034:	cbnz	x19, 2094 <PyInit_binascii@@Base+0x690>
    2038:	ldr	x8, [sp, #24]
    203c:	cbz	x8, 2048 <PyInit_binascii@@Base+0x644>
    2040:	add	x0, sp, #0x10
    2044:	bl	1730 <PyBuffer_Release@plt>
    2048:	mov	x0, x19
    204c:	ldp	x20, x19, [sp, #160]
    2050:	ldr	x21, [sp, #144]
    2054:	ldp	x29, x30, [sp, #128]
    2058:	add	sp, sp, #0xb0
    205c:	ret
    2060:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2064:	sub	x8, x29, #0x18
    2068:	add	x4, x4, #0x448
    206c:	mov	w5, #0x1                   	// #1
    2070:	mov	w6, #0x3                   	// #3
    2074:	mov	x0, x19
    2078:	mov	x1, x20
    207c:	mov	x2, xzr
    2080:	mov	w7, wzr
    2084:	str	x8, [sp]
    2088:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    208c:	mov	x19, x0
    2090:	cbz	x19, 2038 <PyInit_binascii@@Base+0x634>
    2094:	ldr	x0, [x19]
    2098:	add	x1, sp, #0x10
    209c:	mov	w2, wzr
    20a0:	bl	1880 <PyObject_GetBuffer@plt>
    20a4:	cbz	w0, 20b8 <PyInit_binascii@@Base+0x6b4>
    20a8:	mov	x19, xzr
    20ac:	ldr	x8, [sp, #24]
    20b0:	cbnz	x8, 2040 <PyInit_binascii@@Base+0x63c>
    20b4:	b	2048 <PyInit_binascii@@Base+0x644>
    20b8:	add	x0, sp, #0x10
    20bc:	mov	w1, #0x43                  	// #67
    20c0:	bl	1760 <PyBuffer_IsContiguous@plt>
    20c4:	cbz	w0, 20e0 <PyInit_binascii@@Base+0x6dc>
    20c8:	add	x8, x21, x20
    20cc:	cmp	x8, #0x1
    20d0:	b.ne	2104 <PyInit_binascii@@Base+0x700>  // b.any
    20d4:	mov	x20, xzr
    20d8:	mov	w2, #0x1                   	// #1
    20dc:	b	2174 <PyInit_binascii@@Base+0x770>
    20e0:	ldr	x3, [x19]
    20e4:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    20e8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    20ec:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    20f0:	add	x0, x0, #0x93
    20f4:	add	x1, x1, #0x398
    20f8:	add	x2, x2, #0x1b6
    20fc:	bl	1810 <_PyArg_BadArgument@plt>
    2100:	b	20a8 <PyInit_binascii@@Base+0x6a4>
    2104:	ldr	x20, [x19, #8]
    2108:	cbz	x20, 211c <PyInit_binascii@@Base+0x718>
    210c:	cmp	x8, #0x2
    2110:	b.ne	211c <PyInit_binascii@@Base+0x718>  // b.any
    2114:	mov	w2, #0x1                   	// #1
    2118:	b	2174 <PyInit_binascii@@Base+0x770>
    211c:	ldr	x8, [x19, #16]
    2120:	ldr	x0, [x8, #8]
    2124:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2128:	ldr	x8, [x8, #4016]
    212c:	cmp	x0, x8
    2130:	b.eq	2144 <PyInit_binascii@@Base+0x740>  // b.none
    2134:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2138:	ldr	x1, [x1, #4016]
    213c:	bl	18e0 <PyType_IsSubtype@plt>
    2140:	cbz	w0, 2160 <PyInit_binascii@@Base+0x75c>
    2144:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2148:	ldr	x8, [x8, #4040]
    214c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2150:	add	x1, x1, #0x1c8
    2154:	ldr	x0, [x8]
    2158:	bl	17c0 <PyErr_SetString@plt>
    215c:	b	20a8 <PyInit_binascii@@Base+0x6a4>
    2160:	ldr	x0, [x19, #16]
    2164:	bl	1910 <_PyLong_AsInt@plt>
    2168:	cmn	w0, #0x1
    216c:	b.eq	2190 <PyInit_binascii@@Base+0x78c>  // b.none
    2170:	mov	w2, w0
    2174:	add	x0, sp, #0x10
    2178:	mov	x1, x20
    217c:	bl	374c <PyInit_binascii@@Base+0x1d48>
    2180:	mov	x19, x0
    2184:	ldr	x8, [sp, #24]
    2188:	cbnz	x8, 2040 <PyInit_binascii@@Base+0x63c>
    218c:	b	2048 <PyInit_binascii@@Base+0x644>
    2190:	bl	1870 <PyErr_Occurred@plt>
    2194:	cbnz	x0, 20a8 <PyInit_binascii@@Base+0x6a4>
    2198:	mov	w2, #0xffffffff            	// #-1
    219c:	b	2174 <PyInit_binascii@@Base+0x770>
    21a0:	sub	sp, sp, #0xb0
    21a4:	stp	x29, x30, [sp, #128]
    21a8:	str	x21, [sp, #144]
    21ac:	stp	x20, x19, [sp, #160]
    21b0:	add	x29, sp, #0x80
    21b4:	mov	x20, x2
    21b8:	mov	x19, x1
    21bc:	cbz	x3, 21c8 <PyInit_binascii@@Base+0x7c4>
    21c0:	ldr	x21, [x3, #16]
    21c4:	b	21cc <PyInit_binascii@@Base+0x7c8>
    21c8:	mov	x21, xzr
    21cc:	movi	v0.2d, #0x0
    21d0:	stp	q0, q0, [sp, #64]
    21d4:	stp	q0, q0, [sp, #32]
    21d8:	str	q0, [sp, #16]
    21dc:	cbz	x19, 221c <PyInit_binascii@@Base+0x818>
    21e0:	sub	x8, x20, #0x1
    21e4:	cmp	x8, #0x2
    21e8:	b.hi	221c <PyInit_binascii@@Base+0x818>  // b.pmore
    21ec:	cbnz	x3, 221c <PyInit_binascii@@Base+0x818>
    21f0:	cbnz	x19, 2250 <PyInit_binascii@@Base+0x84c>
    21f4:	ldr	x8, [sp, #24]
    21f8:	cbz	x8, 2204 <PyInit_binascii@@Base+0x800>
    21fc:	add	x0, sp, #0x10
    2200:	bl	1730 <PyBuffer_Release@plt>
    2204:	mov	x0, x19
    2208:	ldp	x20, x19, [sp, #160]
    220c:	ldr	x21, [sp, #144]
    2210:	ldp	x29, x30, [sp, #128]
    2214:	add	sp, sp, #0xb0
    2218:	ret
    221c:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    2220:	sub	x8, x29, #0x18
    2224:	add	x4, x4, #0x488
    2228:	mov	w5, #0x1                   	// #1
    222c:	mov	w6, #0x3                   	// #3
    2230:	mov	x0, x19
    2234:	mov	x1, x20
    2238:	mov	x2, xzr
    223c:	mov	w7, wzr
    2240:	str	x8, [sp]
    2244:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    2248:	mov	x19, x0
    224c:	cbz	x19, 21f4 <PyInit_binascii@@Base+0x7f0>
    2250:	ldr	x0, [x19]
    2254:	add	x1, sp, #0x10
    2258:	mov	w2, wzr
    225c:	bl	1880 <PyObject_GetBuffer@plt>
    2260:	cbz	w0, 2274 <PyInit_binascii@@Base+0x870>
    2264:	mov	x19, xzr
    2268:	ldr	x8, [sp, #24]
    226c:	cbnz	x8, 21fc <PyInit_binascii@@Base+0x7f8>
    2270:	b	2204 <PyInit_binascii@@Base+0x800>
    2274:	add	x0, sp, #0x10
    2278:	mov	w1, #0x43                  	// #67
    227c:	bl	1760 <PyBuffer_IsContiguous@plt>
    2280:	cbz	w0, 229c <PyInit_binascii@@Base+0x898>
    2284:	add	x8, x21, x20
    2288:	cmp	x8, #0x1
    228c:	b.ne	22c0 <PyInit_binascii@@Base+0x8bc>  // b.any
    2290:	mov	x20, xzr
    2294:	mov	w2, #0x1                   	// #1
    2298:	b	2330 <PyInit_binascii@@Base+0x92c>
    229c:	ldr	x3, [x19]
    22a0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    22a4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    22a8:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    22ac:	add	x0, x0, #0x9d
    22b0:	add	x1, x1, #0x398
    22b4:	add	x2, x2, #0x1b6
    22b8:	bl	1810 <_PyArg_BadArgument@plt>
    22bc:	b	2264 <PyInit_binascii@@Base+0x860>
    22c0:	ldr	x20, [x19, #8]
    22c4:	cbz	x20, 22d8 <PyInit_binascii@@Base+0x8d4>
    22c8:	cmp	x8, #0x2
    22cc:	b.ne	22d8 <PyInit_binascii@@Base+0x8d4>  // b.any
    22d0:	mov	w2, #0x1                   	// #1
    22d4:	b	2330 <PyInit_binascii@@Base+0x92c>
    22d8:	ldr	x8, [x19, #16]
    22dc:	ldr	x0, [x8, #8]
    22e0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    22e4:	ldr	x8, [x8, #4016]
    22e8:	cmp	x0, x8
    22ec:	b.eq	2300 <PyInit_binascii@@Base+0x8fc>  // b.none
    22f0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    22f4:	ldr	x1, [x1, #4016]
    22f8:	bl	18e0 <PyType_IsSubtype@plt>
    22fc:	cbz	w0, 231c <PyInit_binascii@@Base+0x918>
    2300:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2304:	ldr	x8, [x8, #4040]
    2308:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    230c:	add	x1, x1, #0x1c8
    2310:	ldr	x0, [x8]
    2314:	bl	17c0 <PyErr_SetString@plt>
    2318:	b	2264 <PyInit_binascii@@Base+0x860>
    231c:	ldr	x0, [x19, #16]
    2320:	bl	1910 <_PyLong_AsInt@plt>
    2324:	cmn	w0, #0x1
    2328:	b.eq	234c <PyInit_binascii@@Base+0x948>  // b.none
    232c:	mov	w2, w0
    2330:	add	x0, sp, #0x10
    2334:	mov	x1, x20
    2338:	bl	3778 <PyInit_binascii@@Base+0x1d74>
    233c:	mov	x19, x0
    2340:	ldr	x8, [sp, #24]
    2344:	cbnz	x8, 21fc <PyInit_binascii@@Base+0x7f8>
    2348:	b	2204 <PyInit_binascii@@Base+0x800>
    234c:	bl	1870 <PyErr_Occurred@plt>
    2350:	cbnz	x0, 2264 <PyInit_binascii@@Base+0x860>
    2354:	mov	w2, #0xffffffff            	// #-1
    2358:	b	2330 <PyInit_binascii@@Base+0x92c>
    235c:	sub	sp, sp, #0x70
    2360:	stp	x29, x30, [sp, #80]
    2364:	str	x19, [sp, #96]
    2368:	add	x29, sp, #0x50
    236c:	mov	x8, x1
    2370:	mov	x19, x0
    2374:	movi	v0.2d, #0x0
    2378:	mov	x1, sp
    237c:	mov	x0, x8
    2380:	stp	q0, q0, [sp, #48]
    2384:	stp	q0, q0, [sp, #16]
    2388:	str	q0, [sp]
    238c:	bl	2bc8 <PyInit_binascii@@Base+0x11c4>
    2390:	cbz	w0, 23c8 <PyInit_binascii@@Base+0x9c4>
    2394:	mov	x1, sp
    2398:	mov	x0, x19
    239c:	bl	37a4 <PyInit_binascii@@Base+0x1da0>
    23a0:	mov	x19, x0
    23a4:	ldr	x8, [sp, #8]
    23a8:	cbz	x8, 23b4 <PyInit_binascii@@Base+0x9b0>
    23ac:	mov	x0, sp
    23b0:	bl	1730 <PyBuffer_Release@plt>
    23b4:	mov	x0, x19
    23b8:	ldr	x19, [sp, #96]
    23bc:	ldp	x29, x30, [sp, #80]
    23c0:	add	sp, sp, #0x70
    23c4:	ret
    23c8:	mov	x19, xzr
    23cc:	ldr	x8, [sp, #8]
    23d0:	cbnz	x8, 23ac <PyInit_binascii@@Base+0x9a8>
    23d4:	b	23b4 <PyInit_binascii@@Base+0x9b0>
    23d8:	sub	sp, sp, #0x70
    23dc:	stp	x29, x30, [sp, #80]
    23e0:	str	x19, [sp, #96]
    23e4:	add	x29, sp, #0x50
    23e8:	mov	x19, x1
    23ec:	movi	v0.2d, #0x0
    23f0:	mov	x1, sp
    23f4:	mov	x0, x19
    23f8:	mov	w2, wzr
    23fc:	stp	q0, q0, [sp, #48]
    2400:	stp	q0, q0, [sp, #16]
    2404:	str	q0, [sp]
    2408:	bl	1880 <PyObject_GetBuffer@plt>
    240c:	cbz	w0, 2438 <PyInit_binascii@@Base+0xa34>
    2410:	mov	x19, xzr
    2414:	ldr	x8, [sp, #8]
    2418:	cbz	x8, 2424 <PyInit_binascii@@Base+0xa20>
    241c:	mov	x0, sp
    2420:	bl	1730 <PyBuffer_Release@plt>
    2424:	mov	x0, x19
    2428:	ldr	x19, [sp, #96]
    242c:	ldp	x29, x30, [sp, #80]
    2430:	add	sp, sp, #0x70
    2434:	ret
    2438:	mov	x0, sp
    243c:	mov	w1, #0x43                  	// #67
    2440:	bl	1760 <PyBuffer_IsContiguous@plt>
    2444:	cbz	w0, 2460 <PyInit_binascii@@Base+0xa5c>
    2448:	mov	x0, sp
    244c:	bl	37b8 <PyInit_binascii@@Base+0x1db4>
    2450:	mov	x19, x0
    2454:	ldr	x8, [sp, #8]
    2458:	cbnz	x8, 241c <PyInit_binascii@@Base+0xa18>
    245c:	b	2424 <PyInit_binascii@@Base+0xa20>
    2460:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2464:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2468:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    246c:	add	x0, x0, #0xa5
    2470:	add	x1, x1, #0x30d
    2474:	add	x2, x2, #0x1b6
    2478:	mov	x3, x19
    247c:	bl	1810 <_PyArg_BadArgument@plt>
    2480:	b	2410 <PyInit_binascii@@Base+0xa0c>
    2484:	sub	sp, sp, #0x70
    2488:	stp	x29, x30, [sp, #80]
    248c:	stp	x20, x19, [sp, #96]
    2490:	add	x29, sp, #0x50
    2494:	mov	x19, x1
    2498:	mov	x20, x0
    249c:	movi	v0.2d, #0x0
    24a0:	mov	x1, sp
    24a4:	mov	x0, x19
    24a8:	mov	w2, wzr
    24ac:	stp	q0, q0, [sp, #48]
    24b0:	stp	q0, q0, [sp, #16]
    24b4:	str	q0, [sp]
    24b8:	bl	1880 <PyObject_GetBuffer@plt>
    24bc:	cbz	w0, 24e8 <PyInit_binascii@@Base+0xae4>
    24c0:	mov	x19, xzr
    24c4:	ldr	x8, [sp, #8]
    24c8:	cbz	x8, 24d4 <PyInit_binascii@@Base+0xad0>
    24cc:	mov	x0, sp
    24d0:	bl	1730 <PyBuffer_Release@plt>
    24d4:	mov	x0, x19
    24d8:	ldp	x20, x19, [sp, #96]
    24dc:	ldp	x29, x30, [sp, #80]
    24e0:	add	sp, sp, #0x70
    24e4:	ret
    24e8:	mov	x0, sp
    24ec:	mov	w1, #0x43                  	// #67
    24f0:	bl	1760 <PyBuffer_IsContiguous@plt>
    24f4:	cbz	w0, 2514 <PyInit_binascii@@Base+0xb10>
    24f8:	mov	x1, sp
    24fc:	mov	x0, x20
    2500:	bl	38c8 <PyInit_binascii@@Base+0x1ec4>
    2504:	mov	x19, x0
    2508:	ldr	x8, [sp, #8]
    250c:	cbnz	x8, 24cc <PyInit_binascii@@Base+0xac8>
    2510:	b	24d4 <PyInit_binascii@@Base+0xad0>
    2514:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2518:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    251c:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    2520:	add	x0, x0, #0xb1
    2524:	add	x1, x1, #0x30d
    2528:	add	x2, x2, #0x1b6
    252c:	mov	x3, x19
    2530:	bl	1810 <_PyArg_BadArgument@plt>
    2534:	b	24c0 <PyInit_binascii@@Base+0xabc>
    2538:	sub	sp, sp, #0x70
    253c:	stp	x29, x30, [sp, #80]
    2540:	str	x19, [sp, #96]
    2544:	add	x29, sp, #0x50
    2548:	mov	x19, x1
    254c:	movi	v0.2d, #0x0
    2550:	cmp	x2, #0x2
    2554:	stp	q0, q0, [sp, #48]
    2558:	stp	q0, q0, [sp, #16]
    255c:	str	q0, [sp]
    2560:	b.eq	2584 <PyInit_binascii@@Base+0xb80>  // b.none
    2564:	mov	x8, x2
    2568:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    256c:	add	x0, x0, #0xbf
    2570:	mov	w2, #0x2                   	// #2
    2574:	mov	w3, #0x2                   	// #2
    2578:	mov	x1, x8
    257c:	bl	1860 <_PyArg_CheckPositional@plt>
    2580:	cbz	w0, 260c <PyInit_binascii@@Base+0xc08>
    2584:	ldr	x0, [x19]
    2588:	mov	x1, sp
    258c:	mov	w2, wzr
    2590:	bl	1880 <PyObject_GetBuffer@plt>
    2594:	cbnz	w0, 260c <PyInit_binascii@@Base+0xc08>
    2598:	mov	x0, sp
    259c:	mov	w1, #0x43                  	// #67
    25a0:	bl	1760 <PyBuffer_IsContiguous@plt>
    25a4:	cbz	w0, 25ec <PyInit_binascii@@Base+0xbe8>
    25a8:	ldr	x8, [x19, #8]
    25ac:	ldr	x0, [x8, #8]
    25b0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    25b4:	ldr	x8, [x8, #4016]
    25b8:	cmp	x0, x8
    25bc:	b.eq	25d0 <PyInit_binascii@@Base+0xbcc>  // b.none
    25c0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    25c4:	ldr	x1, [x1, #4016]
    25c8:	bl	18e0 <PyType_IsSubtype@plt>
    25cc:	cbz	w0, 2634 <PyInit_binascii@@Base+0xc30>
    25d0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    25d4:	ldr	x8, [x8, #4040]
    25d8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    25dc:	add	x1, x1, #0x1c8
    25e0:	ldr	x0, [x8]
    25e4:	bl	17c0 <PyErr_SetString@plt>
    25e8:	b	260c <PyInit_binascii@@Base+0xc08>
    25ec:	ldr	x3, [x19]
    25f0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    25f4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    25f8:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    25fc:	add	x0, x0, #0xbf
    2600:	add	x1, x1, #0x1ab
    2604:	add	x2, x2, #0x1b6
    2608:	bl	1810 <_PyArg_BadArgument@plt>
    260c:	mov	x19, xzr
    2610:	ldr	x8, [sp, #8]
    2614:	cbz	x8, 2620 <PyInit_binascii@@Base+0xc1c>
    2618:	mov	x0, sp
    261c:	bl	1730 <PyBuffer_Release@plt>
    2620:	mov	x0, x19
    2624:	ldr	x19, [sp, #96]
    2628:	ldp	x29, x30, [sp, #80]
    262c:	add	sp, sp, #0x70
    2630:	ret
    2634:	ldr	x0, [x19, #8]
    2638:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    263c:	mov	x19, x0
    2640:	cmn	w19, #0x1
    2644:	b.eq	2678 <PyInit_binascii@@Base+0xc74>  // b.none
    2648:	mov	x0, sp
    264c:	mov	w1, w19
    2650:	bl	3aa8 <PyInit_binascii@@Base+0x20a4>
    2654:	mov	w19, w0
    2658:	cmn	w0, #0x1
    265c:	b.eq	2684 <PyInit_binascii@@Base+0xc80>  // b.none
    2660:	mov	w0, w19
    2664:	bl	1890 <PyLong_FromUnsignedLong@plt>
    2668:	mov	x19, x0
    266c:	ldr	x8, [sp, #8]
    2670:	cbnz	x8, 2618 <PyInit_binascii@@Base+0xc14>
    2674:	b	2620 <PyInit_binascii@@Base+0xc1c>
    2678:	bl	1870 <PyErr_Occurred@plt>
    267c:	cbnz	x0, 260c <PyInit_binascii@@Base+0xc08>
    2680:	b	2648 <PyInit_binascii@@Base+0xc44>
    2684:	bl	1870 <PyErr_Occurred@plt>
    2688:	cbnz	x0, 260c <PyInit_binascii@@Base+0xc08>
    268c:	b	2660 <PyInit_binascii@@Base+0xc5c>
    2690:	sub	sp, sp, #0x70
    2694:	stp	x29, x30, [sp, #80]
    2698:	stp	x20, x19, [sp, #96]
    269c:	add	x29, sp, #0x50
    26a0:	sub	x8, x2, #0x1
    26a4:	mov	x20, x2
    26a8:	mov	x19, x1
    26ac:	movi	v0.2d, #0x0
    26b0:	cmp	x8, #0x2
    26b4:	stp	q0, q0, [sp, #48]
    26b8:	stp	q0, q0, [sp, #16]
    26bc:	str	q0, [sp]
    26c0:	b.cc	26e0 <PyInit_binascii@@Base+0xcdc>  // b.lo, b.ul, b.last
    26c4:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    26c8:	add	x0, x0, #0xc7
    26cc:	mov	w2, #0x1                   	// #1
    26d0:	mov	w3, #0x2                   	// #2
    26d4:	mov	x1, x20
    26d8:	bl	1860 <_PyArg_CheckPositional@plt>
    26dc:	cbz	w0, 26f4 <PyInit_binascii@@Base+0xcf0>
    26e0:	ldr	x0, [x19]
    26e4:	mov	x1, sp
    26e8:	mov	w2, wzr
    26ec:	bl	1880 <PyObject_GetBuffer@plt>
    26f0:	cbz	w0, 271c <PyInit_binascii@@Base+0xd18>
    26f4:	mov	x19, xzr
    26f8:	ldr	x8, [sp, #8]
    26fc:	cbz	x8, 2708 <PyInit_binascii@@Base+0xd04>
    2700:	mov	x0, sp
    2704:	bl	1730 <PyBuffer_Release@plt>
    2708:	mov	x0, x19
    270c:	ldp	x20, x19, [sp, #96]
    2710:	ldp	x29, x30, [sp, #80]
    2714:	add	sp, sp, #0x70
    2718:	ret
    271c:	mov	x0, sp
    2720:	mov	w1, #0x43                  	// #67
    2724:	bl	1760 <PyBuffer_IsContiguous@plt>
    2728:	cbz	w0, 2764 <PyInit_binascii@@Base+0xd60>
    272c:	cmp	x20, #0x2
    2730:	b.ge	2788 <PyInit_binascii@@Base+0xd84>  // b.tcont
    2734:	mov	w1, wzr
    2738:	mov	x0, sp
    273c:	bl	3af0 <PyInit_binascii@@Base+0x20ec>
    2740:	mov	w19, w0
    2744:	cmn	w0, #0x1
    2748:	b.eq	27cc <PyInit_binascii@@Base+0xdc8>  // b.none
    274c:	mov	w0, w19
    2750:	bl	1890 <PyLong_FromUnsignedLong@plt>
    2754:	mov	x19, x0
    2758:	ldr	x8, [sp, #8]
    275c:	cbnz	x8, 2700 <PyInit_binascii@@Base+0xcfc>
    2760:	b	2708 <PyInit_binascii@@Base+0xd04>
    2764:	ldr	x3, [x19]
    2768:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    276c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2770:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    2774:	add	x0, x0, #0xc7
    2778:	add	x1, x1, #0x1ab
    277c:	add	x2, x2, #0x1b6
    2780:	bl	1810 <_PyArg_BadArgument@plt>
    2784:	b	26f4 <PyInit_binascii@@Base+0xcf0>
    2788:	ldr	x8, [x19, #8]
    278c:	ldr	x0, [x8, #8]
    2790:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2794:	ldr	x8, [x8, #4016]
    2798:	cmp	x0, x8
    279c:	b.eq	27b0 <PyInit_binascii@@Base+0xdac>  // b.none
    27a0:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    27a4:	ldr	x1, [x1, #4016]
    27a8:	bl	18e0 <PyType_IsSubtype@plt>
    27ac:	cbz	w0, 27d8 <PyInit_binascii@@Base+0xdd4>
    27b0:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    27b4:	ldr	x8, [x8, #4040]
    27b8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    27bc:	add	x1, x1, #0x1c8
    27c0:	ldr	x0, [x8]
    27c4:	bl	17c0 <PyErr_SetString@plt>
    27c8:	b	26f4 <PyInit_binascii@@Base+0xcf0>
    27cc:	bl	1870 <PyErr_Occurred@plt>
    27d0:	cbnz	x0, 26f4 <PyInit_binascii@@Base+0xcf0>
    27d4:	b	274c <PyInit_binascii@@Base+0xd48>
    27d8:	ldr	x0, [x19, #8]
    27dc:	bl	1840 <PyLong_AsUnsignedLongMask@plt>
    27e0:	mov	x1, x0
    27e4:	cmn	w1, #0x1
    27e8:	b.ne	2738 <PyInit_binascii@@Base+0xd34>  // b.any
    27ec:	bl	1870 <PyErr_Occurred@plt>
    27f0:	cbnz	x0, 26f4 <PyInit_binascii@@Base+0xcf0>
    27f4:	mov	w1, #0xffffffff            	// #-1
    27f8:	b	2738 <PyInit_binascii@@Base+0xd34>
    27fc:	sub	sp, sp, #0xa0
    2800:	stp	x29, x30, [sp, #112]
    2804:	str	x21, [sp, #128]
    2808:	stp	x20, x19, [sp, #144]
    280c:	add	x29, sp, #0x70
    2810:	mov	x20, x2
    2814:	mov	x19, x1
    2818:	cbz	x3, 2824 <PyInit_binascii@@Base+0xe20>
    281c:	ldr	x21, [x3, #16]
    2820:	b	2828 <PyInit_binascii@@Base+0xe24>
    2824:	mov	x21, xzr
    2828:	movi	v0.2d, #0x0
    282c:	stp	q0, q0, [sp, #64]
    2830:	stp	q0, q0, [sp, #32]
    2834:	str	q0, [sp, #16]
    2838:	cbz	x19, 2878 <PyInit_binascii@@Base+0xe74>
    283c:	sub	x8, x20, #0x1
    2840:	cmp	x8, #0x1
    2844:	b.hi	2878 <PyInit_binascii@@Base+0xe74>  // b.pmore
    2848:	cbnz	x3, 2878 <PyInit_binascii@@Base+0xe74>
    284c:	cbnz	x19, 28ac <PyInit_binascii@@Base+0xea8>
    2850:	ldr	x8, [sp, #24]
    2854:	cbz	x8, 2860 <PyInit_binascii@@Base+0xe5c>
    2858:	add	x0, sp, #0x10
    285c:	bl	1730 <PyBuffer_Release@plt>
    2860:	mov	x0, x19
    2864:	ldp	x20, x19, [sp, #144]
    2868:	ldr	x21, [sp, #128]
    286c:	ldp	x29, x30, [sp, #112]
    2870:	add	sp, sp, #0xa0
    2874:	ret
    2878:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    287c:	sub	x8, x29, #0x10
    2880:	add	x4, x4, #0x4c8
    2884:	mov	w5, #0x1                   	// #1
    2888:	mov	w6, #0x2                   	// #2
    288c:	mov	x0, x19
    2890:	mov	x1, x20
    2894:	mov	x2, xzr
    2898:	mov	w7, wzr
    289c:	str	x8, [sp]
    28a0:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    28a4:	mov	x19, x0
    28a8:	cbz	x19, 2850 <PyInit_binascii@@Base+0xe4c>
    28ac:	ldr	x0, [x19]
    28b0:	add	x1, sp, #0x10
    28b4:	bl	2bc8 <PyInit_binascii@@Base+0x11c4>
    28b8:	cbz	w0, 2950 <PyInit_binascii@@Base+0xf4c>
    28bc:	add	x8, x21, x20
    28c0:	cmp	x8, #0x1
    28c4:	b.ne	28e4 <PyInit_binascii@@Base+0xee0>  // b.any
    28c8:	mov	w1, wzr
    28cc:	add	x0, sp, #0x10
    28d0:	bl	3b14 <PyInit_binascii@@Base+0x2110>
    28d4:	mov	x19, x0
    28d8:	ldr	x8, [sp, #24]
    28dc:	cbnz	x8, 2858 <PyInit_binascii@@Base+0xe54>
    28e0:	b	2860 <PyInit_binascii@@Base+0xe5c>
    28e4:	ldr	x8, [x19, #8]
    28e8:	ldr	x0, [x8, #8]
    28ec:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    28f0:	ldr	x8, [x8, #4016]
    28f4:	cmp	x0, x8
    28f8:	b.eq	290c <PyInit_binascii@@Base+0xf08>  // b.none
    28fc:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2900:	ldr	x1, [x1, #4016]
    2904:	bl	18e0 <PyType_IsSubtype@plt>
    2908:	cbz	w0, 2934 <PyInit_binascii@@Base+0xf30>
    290c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2910:	ldr	x8, [x8, #4040]
    2914:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2918:	add	x1, x1, #0x1c8
    291c:	ldr	x0, [x8]
    2920:	bl	17c0 <PyErr_SetString@plt>
    2924:	mov	x19, xzr
    2928:	ldr	x8, [sp, #24]
    292c:	cbnz	x8, 2858 <PyInit_binascii@@Base+0xe54>
    2930:	b	2860 <PyInit_binascii@@Base+0xe5c>
    2934:	ldr	x0, [x19, #8]
    2938:	bl	1910 <_PyLong_AsInt@plt>
    293c:	mov	w1, w0
    2940:	cmn	w0, #0x1
    2944:	b.ne	28cc <PyInit_binascii@@Base+0xec8>  // b.any
    2948:	bl	1870 <PyErr_Occurred@plt>
    294c:	cbz	x0, 2960 <PyInit_binascii@@Base+0xf5c>
    2950:	mov	x19, xzr
    2954:	ldr	x8, [sp, #24]
    2958:	cbnz	x8, 2858 <PyInit_binascii@@Base+0xe54>
    295c:	b	2860 <PyInit_binascii@@Base+0xe5c>
    2960:	mov	w1, #0xffffffff            	// #-1
    2964:	b	28cc <PyInit_binascii@@Base+0xec8>
    2968:	sub	sp, sp, #0xb0
    296c:	stp	x29, x30, [sp, #128]
    2970:	stp	x22, x21, [sp, #144]
    2974:	stp	x20, x19, [sp, #160]
    2978:	add	x29, sp, #0x80
    297c:	mov	x20, x2
    2980:	mov	x19, x1
    2984:	cbz	x3, 2990 <PyInit_binascii@@Base+0xf8c>
    2988:	ldr	x21, [x3, #16]
    298c:	b	2994 <PyInit_binascii@@Base+0xf90>
    2990:	mov	x21, xzr
    2994:	movi	v0.2d, #0x0
    2998:	stp	q0, q0, [sp, #64]
    299c:	stp	q0, q0, [sp, #32]
    29a0:	str	q0, [sp, #16]
    29a4:	cbz	x19, 29c0 <PyInit_binascii@@Base+0xfbc>
    29a8:	sub	x8, x20, #0x1
    29ac:	cmp	x8, #0x3
    29b0:	b.hi	29c0 <PyInit_binascii@@Base+0xfbc>  // b.pmore
    29b4:	cbnz	x3, 29c0 <PyInit_binascii@@Base+0xfbc>
    29b8:	cbnz	x19, 29f4 <PyInit_binascii@@Base+0xff0>
    29bc:	b	2a0c <PyInit_binascii@@Base+0x1008>
    29c0:	adrp	x4, 16000 <PyInit_binascii@@Base+0x145fc>
    29c4:	sub	x8, x29, #0x20
    29c8:	add	x4, x4, #0x508
    29cc:	mov	w5, #0x1                   	// #1
    29d0:	mov	w6, #0x4                   	// #4
    29d4:	mov	x0, x19
    29d8:	mov	x1, x20
    29dc:	mov	x2, xzr
    29e0:	mov	w7, wzr
    29e4:	str	x8, [sp]
    29e8:	bl	17b0 <_PyArg_UnpackKeywords@plt>
    29ec:	mov	x19, x0
    29f0:	cbz	x19, 2a0c <PyInit_binascii@@Base+0x1008>
    29f4:	ldr	x0, [x19]
    29f8:	add	x1, sp, #0x10
    29fc:	mov	w2, wzr
    2a00:	bl	1880 <PyObject_GetBuffer@plt>
    2a04:	cbz	w0, 2a34 <PyInit_binascii@@Base+0x1030>
    2a08:	mov	x19, xzr
    2a0c:	ldr	x8, [sp, #24]
    2a10:	cbz	x8, 2a1c <PyInit_binascii@@Base+0x1018>
    2a14:	add	x0, sp, #0x10
    2a18:	bl	1730 <PyBuffer_Release@plt>
    2a1c:	mov	x0, x19
    2a20:	ldp	x20, x19, [sp, #160]
    2a24:	ldp	x22, x21, [sp, #144]
    2a28:	ldp	x29, x30, [sp, #128]
    2a2c:	add	sp, sp, #0xb0
    2a30:	ret
    2a34:	add	x0, sp, #0x10
    2a38:	mov	w1, #0x43                  	// #67
    2a3c:	bl	1760 <PyBuffer_IsContiguous@plt>
    2a40:	cbz	w0, 2a9c <PyInit_binascii@@Base+0x1098>
    2a44:	add	x21, x21, x20
    2a48:	sub	x22, x21, #0x1
    2a4c:	cbz	x22, 2ac0 <PyInit_binascii@@Base+0x10bc>
    2a50:	ldr	x8, [x19, #8]
    2a54:	cbz	x8, 2aec <PyInit_binascii@@Base+0x10e8>
    2a58:	ldr	x0, [x8, #8]
    2a5c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2a60:	ldr	x8, [x8, #4016]
    2a64:	cmp	x0, x8
    2a68:	b.eq	2b6c <PyInit_binascii@@Base+0x1168>  // b.none
    2a6c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2a70:	ldr	x1, [x1, #4016]
    2a74:	bl	18e0 <PyType_IsSubtype@plt>
    2a78:	cbnz	w0, 2b6c <PyInit_binascii@@Base+0x1168>
    2a7c:	ldr	x0, [x19, #8]
    2a80:	bl	1910 <_PyLong_AsInt@plt>
    2a84:	mov	w20, w0
    2a88:	cmn	w0, #0x1
    2a8c:	b.eq	2b88 <PyInit_binascii@@Base+0x1184>  // b.none
    2a90:	subs	x22, x21, #0x2
    2a94:	b.ne	2af0 <PyInit_binascii@@Base+0x10ec>  // b.any
    2a98:	b	2ac4 <PyInit_binascii@@Base+0x10c0>
    2a9c:	ldr	x3, [x19]
    2aa0:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    2aa4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2aa8:	adrp	x2, 5000 <PyInit_binascii@@Base+0x35fc>
    2aac:	add	x0, x0, #0xd4
    2ab0:	add	x1, x1, #0x398
    2ab4:	add	x2, x2, #0x1b6
    2ab8:	bl	1810 <_PyArg_BadArgument@plt>
    2abc:	b	2a08 <PyInit_binascii@@Base+0x1004>
    2ac0:	mov	w20, wzr
    2ac4:	mov	w3, wzr
    2ac8:	mov	w21, #0x1                   	// #1
    2acc:	add	x0, sp, #0x10
    2ad0:	mov	w1, w20
    2ad4:	mov	w2, w21
    2ad8:	bl	3ce0 <PyInit_binascii@@Base+0x22dc>
    2adc:	mov	x19, x0
    2ae0:	ldr	x8, [sp, #24]
    2ae4:	cbnz	x8, 2a14 <PyInit_binascii@@Base+0x1010>
    2ae8:	b	2a1c <PyInit_binascii@@Base+0x1018>
    2aec:	mov	w20, wzr
    2af0:	ldr	x8, [x19, #16]
    2af4:	cbz	x8, 2b40 <PyInit_binascii@@Base+0x113c>
    2af8:	ldr	x0, [x8, #8]
    2afc:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2b00:	ldr	x8, [x8, #4016]
    2b04:	cmp	x0, x8
    2b08:	b.eq	2b6c <PyInit_binascii@@Base+0x1168>  // b.none
    2b0c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2b10:	ldr	x1, [x1, #4016]
    2b14:	bl	18e0 <PyType_IsSubtype@plt>
    2b18:	cbnz	w0, 2b6c <PyInit_binascii@@Base+0x1168>
    2b1c:	ldr	x0, [x19, #16]
    2b20:	bl	1910 <_PyLong_AsInt@plt>
    2b24:	mov	w21, w0
    2b28:	cmn	w0, #0x1
    2b2c:	b.eq	2bac <PyInit_binascii@@Base+0x11a8>  // b.none
    2b30:	cmp	x22, #0x1
    2b34:	b.ne	2b44 <PyInit_binascii@@Base+0x1140>  // b.any
    2b38:	mov	w3, wzr
    2b3c:	b	2acc <PyInit_binascii@@Base+0x10c8>
    2b40:	mov	w21, #0x1                   	// #1
    2b44:	ldr	x8, [x19, #24]
    2b48:	ldr	x0, [x8, #8]
    2b4c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2b50:	ldr	x8, [x8, #4016]
    2b54:	cmp	x0, x8
    2b58:	b.eq	2b6c <PyInit_binascii@@Base+0x1168>  // b.none
    2b5c:	adrp	x1, 15000 <PyInit_binascii@@Base+0x135fc>
    2b60:	ldr	x1, [x1, #4016]
    2b64:	bl	18e0 <PyType_IsSubtype@plt>
    2b68:	cbz	w0, 2b94 <PyInit_binascii@@Base+0x1190>
    2b6c:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2b70:	ldr	x8, [x8, #4040]
    2b74:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2b78:	add	x1, x1, #0x1c8
    2b7c:	ldr	x0, [x8]
    2b80:	bl	17c0 <PyErr_SetString@plt>
    2b84:	b	2a08 <PyInit_binascii@@Base+0x1004>
    2b88:	bl	1870 <PyErr_Occurred@plt>
    2b8c:	cbnz	x0, 2a08 <PyInit_binascii@@Base+0x1004>
    2b90:	b	2a90 <PyInit_binascii@@Base+0x108c>
    2b94:	ldr	x0, [x19, #24]
    2b98:	bl	1910 <_PyLong_AsInt@plt>
    2b9c:	cmn	w0, #0x1
    2ba0:	b.eq	2bb8 <PyInit_binascii@@Base+0x11b4>  // b.none
    2ba4:	mov	w3, w0
    2ba8:	b	2acc <PyInit_binascii@@Base+0x10c8>
    2bac:	bl	1870 <PyErr_Occurred@plt>
    2bb0:	cbnz	x0, 2a08 <PyInit_binascii@@Base+0x1004>
    2bb4:	b	2b30 <PyInit_binascii@@Base+0x112c>
    2bb8:	bl	1870 <PyErr_Occurred@plt>
    2bbc:	cbnz	x0, 2a08 <PyInit_binascii@@Base+0x1004>
    2bc0:	mov	w3, #0xffffffff            	// #-1
    2bc4:	b	2acc <PyInit_binascii@@Base+0x10c8>
    2bc8:	stp	x29, x30, [sp, #-32]!
    2bcc:	stp	x20, x19, [sp, #16]
    2bd0:	mov	x29, sp
    2bd4:	mov	x19, x1
    2bd8:	cbz	x0, 2c24 <PyInit_binascii@@Base+0x1220>
    2bdc:	ldr	x8, [x0, #8]
    2be0:	mov	x20, x0
    2be4:	ldrb	w8, [x8, #171]
    2be8:	tbnz	w8, #4, 2c34 <PyInit_binascii@@Base+0x1230>
    2bec:	mov	x0, x20
    2bf0:	mov	x1, x19
    2bf4:	mov	w2, wzr
    2bf8:	bl	1880 <PyObject_GetBuffer@plt>
    2bfc:	cbz	w0, 2c78 <PyInit_binascii@@Base+0x1274>
    2c00:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    2c04:	ldr	x8, [x20, #8]
    2c08:	ldr	x9, [x9, #4040]
    2c0c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2c10:	add	x1, x1, #0x110
    2c14:	ldr	x2, [x8, #24]
    2c18:	ldr	x0, [x9]
    2c1c:	bl	18f0 <PyErr_Format@plt>
    2c20:	b	2cd0 <PyInit_binascii@@Base+0x12cc>
    2c24:	mov	x0, x19
    2c28:	bl	1730 <PyBuffer_Release@plt>
    2c2c:	mov	w0, #0x1                   	// #1
    2c30:	b	2cd4 <PyInit_binascii@@Base+0x12d0>
    2c34:	ldrb	w8, [x20, #32]
    2c38:	tbnz	w8, #7, 2c48 <PyInit_binascii@@Base+0x1244>
    2c3c:	mov	x0, x20
    2c40:	bl	1700 <_PyUnicode_Ready@plt>
    2c44:	tbnz	w0, #31, 2cd0 <PyInit_binascii@@Base+0x12cc>
    2c48:	ldr	w8, [x20, #32]
    2c4c:	tbnz	w8, #6, 2c6c <PyInit_binascii@@Base+0x1268>
    2c50:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    2c54:	ldr	x8, [x8, #4032]
    2c58:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2c5c:	add	x1, x1, #0xdb
    2c60:	ldr	x0, [x8]
    2c64:	bl	17c0 <PyErr_SetString@plt>
    2c68:	b	2cd0 <PyInit_binascii@@Base+0x12cc>
    2c6c:	tbnz	w8, #5, 2c90 <PyInit_binascii@@Base+0x128c>
    2c70:	ldr	x8, [x20, #72]
    2c74:	b	2c94 <PyInit_binascii@@Base+0x1290>
    2c78:	mov	w1, #0x43                  	// #67
    2c7c:	mov	x0, x19
    2c80:	bl	1760 <PyBuffer_IsContiguous@plt>
    2c84:	cbz	w0, 2ca8 <PyInit_binascii@@Base+0x12a4>
    2c88:	mov	w0, #0x20000               	// #131072
    2c8c:	b	2cd4 <PyInit_binascii@@Base+0x12d0>
    2c90:	add	x8, x20, #0x30
    2c94:	str	x8, [x19]
    2c98:	ldr	x8, [x20, #16]
    2c9c:	mov	w0, #0x1                   	// #1
    2ca0:	stp	xzr, x8, [x19, #8]
    2ca4:	b	2cd4 <PyInit_binascii@@Base+0x12d0>
    2ca8:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    2cac:	ldr	x8, [x20, #8]
    2cb0:	ldr	x9, [x9, #4040]
    2cb4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2cb8:	add	x1, x1, #0x14f
    2cbc:	ldr	x2, [x8, #24]
    2cc0:	ldr	x0, [x9]
    2cc4:	bl	18f0 <PyErr_Format@plt>
    2cc8:	mov	x0, x19
    2ccc:	bl	1730 <PyBuffer_Release@plt>
    2cd0:	mov	w0, wzr
    2cd4:	ldp	x20, x19, [sp, #16]
    2cd8:	ldp	x29, x30, [sp], #32
    2cdc:	ret
    2ce0:	stp	x29, x30, [sp, #-64]!
    2ce4:	str	x23, [sp, #16]
    2ce8:	stp	x22, x21, [sp, #32]
    2cec:	stp	x20, x19, [sp, #48]
    2cf0:	mov	x29, sp
    2cf4:	ldr	x22, [x1]
    2cf8:	ldr	x23, [x1, #16]
    2cfc:	mov	x20, x0
    2d00:	mov	x0, xzr
    2d04:	ldrb	w8, [x22]
    2d08:	add	w8, w8, #0x20
    2d0c:	and	w21, w8, #0x3f
    2d10:	mov	x1, x21
    2d14:	bl	1770 <PyBytes_FromStringAndSize@plt>
    2d18:	mov	x19, x0
    2d1c:	cbz	x0, 2e68 <PyInit_binascii@@Base+0x1464>
    2d20:	add	x8, x22, #0x1
    2d24:	sub	x14, x23, #0x1
    2d28:	cbz	w21, 2dd4 <PyInit_binascii@@Base+0x13d0>
    2d2c:	mov	w13, wzr
    2d30:	mov	w10, wzr
    2d34:	add	x9, x19, #0x20
    2d38:	mov	w11, #0xffffffff            	// #-1
    2d3c:	b	2d68 <PyInit_binascii@@Base+0x1364>
    2d40:	sub	w10, w10, #0x2
    2d44:	lsr	w13, w14, w10
    2d48:	lsl	w15, w11, w10
    2d4c:	strb	w13, [x9], #1
    2d50:	bic	w13, w14, w15
    2d54:	sub	x21, x21, #0x1
    2d58:	cmp	x21, #0x0
    2d5c:	add	x8, x8, #0x1
    2d60:	mov	x14, x12
    2d64:	b.le	2dd8 <PyInit_binascii@@Base+0x13d4>
    2d68:	subs	x12, x14, #0x1
    2d6c:	b.lt	2d84 <PyInit_binascii@@Base+0x1380>  // b.tstop
    2d70:	ldrb	w15, [x8]
    2d74:	cmp	w15, #0xa
    2d78:	b.ne	2d90 <PyInit_binascii@@Base+0x138c>  // b.any
    2d7c:	mov	w14, wzr
    2d80:	b	2db8 <PyInit_binascii@@Base+0x13b4>
    2d84:	mov	w15, wzr
    2d88:	cmp	w15, #0xa
    2d8c:	b.eq	2d7c <PyInit_binascii@@Base+0x1378>  // b.none
    2d90:	cmp	x14, #0x1
    2d94:	mov	w14, wzr
    2d98:	b.lt	2db8 <PyInit_binascii@@Base+0x13b4>  // b.tstop
    2d9c:	cmp	w15, #0xd
    2da0:	b.eq	2db8 <PyInit_binascii@@Base+0x13b4>  // b.none
    2da4:	sub	w14, w15, #0x20
    2da8:	cmp	w14, #0x41
    2dac:	b.cs	2e40 <PyInit_binascii@@Base+0x143c>  // b.hs, b.nlast
    2db0:	add	w14, w15, #0x20
    2db4:	and	w14, w14, #0x3f
    2db8:	add	w15, w10, #0x6
    2dbc:	cmp	w15, #0x8
    2dc0:	bfi	w14, w13, #6, #26
    2dc4:	b.ge	2d40 <PyInit_binascii@@Base+0x133c>  // b.tcont
    2dc8:	mov	w10, w15
    2dcc:	mov	w13, w14
    2dd0:	b	2d58 <PyInit_binascii@@Base+0x1354>
    2dd4:	mov	x12, x14
    2dd8:	cmp	x12, #0x1
    2ddc:	b.lt	2e68 <PyInit_binascii@@Base+0x1464>  // b.tstop
    2de0:	mov	x11, #0x2400                	// #9216
    2de4:	add	x9, x12, #0x1
    2de8:	mov	w10, #0x1                   	// #1
    2dec:	movk	x11, #0x1, lsl #32
    2df0:	b	2e10 <PyInit_binascii@@Base+0x140c>
    2df4:	lsl	x13, x10, x12
    2df8:	tst	x13, x11
    2dfc:	b.eq	2e1c <PyInit_binascii@@Base+0x1418>  // b.none
    2e00:	sub	x9, x9, #0x1
    2e04:	cmp	x9, #0x1
    2e08:	add	x8, x8, #0x1
    2e0c:	b.le	2e68 <PyInit_binascii@@Base+0x1464>
    2e10:	ldrb	w12, [x8]
    2e14:	cmp	w12, #0x20
    2e18:	b.ls	2df4 <PyInit_binascii@@Base+0x13f0>  // b.plast
    2e1c:	cmp	w12, #0x60
    2e20:	b.eq	2e00 <PyInit_binascii@@Base+0x13fc>  // b.none
    2e24:	mov	x0, x20
    2e28:	bl	17e0 <PyModule_GetState@plt>
    2e2c:	cbz	x0, 2e64 <PyInit_binascii@@Base+0x1460>
    2e30:	ldr	x0, [x0]
    2e34:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2e38:	add	x1, x1, #0x191
    2e3c:	b	2e58 <PyInit_binascii@@Base+0x1454>
    2e40:	mov	x0, x20
    2e44:	bl	17e0 <PyModule_GetState@plt>
    2e48:	cbz	x0, 2e64 <PyInit_binascii@@Base+0x1460>
    2e4c:	ldr	x0, [x0]
    2e50:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2e54:	add	x1, x1, #0x184
    2e58:	bl	17c0 <PyErr_SetString@plt>
    2e5c:	mov	x0, x19
    2e60:	bl	2e80 <PyInit_binascii@@Base+0x147c>
    2e64:	mov	x19, xzr
    2e68:	mov	x0, x19
    2e6c:	ldp	x20, x19, [sp, #48]
    2e70:	ldp	x22, x21, [sp, #32]
    2e74:	ldr	x23, [sp, #16]
    2e78:	ldp	x29, x30, [sp], #64
    2e7c:	ret
    2e80:	stp	x29, x30, [sp, #-16]!
    2e84:	mov	x29, sp
    2e88:	ldr	x8, [x0]
    2e8c:	subs	x8, x8, #0x1
    2e90:	str	x8, [x0]
    2e94:	b.eq	2ea0 <PyInit_binascii@@Base+0x149c>  // b.none
    2e98:	ldp	x29, x30, [sp], #16
    2e9c:	ret
    2ea0:	bl	1780 <_Py_Dealloc@plt>
    2ea4:	ldp	x29, x30, [sp], #16
    2ea8:	ret
    2eac:	stp	x29, x30, [sp, #-64]!
    2eb0:	str	x28, [sp, #16]
    2eb4:	stp	x22, x21, [sp, #32]
    2eb8:	stp	x20, x19, [sp, #48]
    2ebc:	mov	x29, sp
    2ec0:	sub	sp, sp, #0x230
    2ec4:	mov	x20, x0
    2ec8:	add	x0, sp, #0x8
    2ecc:	mov	w19, w2
    2ed0:	mov	x21, x1
    2ed4:	bl	1800 <_PyBytesWriter_Init@plt>
    2ed8:	ldr	x22, [x21, #16]
    2edc:	cmp	x22, #0x2e
    2ee0:	b.lt	2f08 <PyInit_binascii@@Base+0x1504>  // b.tstop
    2ee4:	mov	x0, x20
    2ee8:	bl	17e0 <PyModule_GetState@plt>
    2eec:	cbz	x0, 2fd0 <PyInit_binascii@@Base+0x15cc>
    2ef0:	ldr	x0, [x0]
    2ef4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    2ef8:	add	x1, x1, #0x1ed
    2efc:	bl	17c0 <PyErr_SetString@plt>
    2f00:	mov	x0, xzr
    2f04:	b	2fd0 <PyInit_binascii@@Base+0x15cc>
    2f08:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    2f0c:	add	x8, x22, #0x2
    2f10:	movk	x9, #0x5556
    2f14:	ldr	x20, [x21]
    2f18:	smulh	x8, x8, x9
    2f1c:	add	x8, x8, x8, lsr #63
    2f20:	mov	w1, #0x2                   	// #2
    2f24:	bfi	x1, x8, #2, #62
    2f28:	add	x0, sp, #0x8
    2f2c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    2f30:	cbz	x0, 2fd0 <PyInit_binascii@@Base+0x15cc>
    2f34:	cmp	x22, #0x0
    2f38:	add	w9, w22, #0x20
    2f3c:	mov	w8, #0x60                  	// #96
    2f40:	cset	w11, gt
    2f44:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    2f48:	mov	x1, x0
    2f4c:	csel	w9, w9, w8, eq  // eq = none
    2f50:	cmp	x22, #0x1
    2f54:	strb	w9, [x1], #1
    2f58:	b.lt	2fc0 <PyInit_binascii@@Base+0x15bc>  // b.tstop
    2f5c:	mov	w9, wzr
    2f60:	mov	w10, wzr
    2f64:	lsl	w9, w9, #8
    2f68:	tbz	w11, #0, 2f74 <PyInit_binascii@@Base+0x1570>
    2f6c:	ldrb	w11, [x20]
    2f70:	orr	w9, w9, w11
    2f74:	add	w10, w10, #0x8
    2f78:	cmp	w10, #0x6
    2f7c:	b.lt	2fa8 <PyInit_binascii@@Base+0x15a4>  // b.tstop
    2f80:	sub	w10, w10, #0x6
    2f84:	lsr	w11, w9, w10
    2f88:	tst	w11, #0x3f
    2f8c:	and	w11, w11, #0x3f
    2f90:	ccmp	w19, #0x0, #0x4, eq  // eq = none
    2f94:	add	w11, w11, #0x20
    2f98:	csel	w11, w11, w8, eq  // eq = none
    2f9c:	cmp	w10, #0x5
    2fa0:	strb	w11, [x1], #1
    2fa4:	b.gt	2f80 <PyInit_binascii@@Base+0x157c>
    2fa8:	sub	x22, x22, #0x1
    2fac:	cmp	x22, #0x0
    2fb0:	add	x20, x20, #0x1
    2fb4:	cset	w11, gt
    2fb8:	cbnz	w10, 2f64 <PyInit_binascii@@Base+0x1560>
    2fbc:	b.gt	2f64 <PyInit_binascii@@Base+0x1560>
    2fc0:	mov	w8, #0xa                   	// #10
    2fc4:	strb	w8, [x1], #1
    2fc8:	add	x0, sp, #0x8
    2fcc:	bl	17d0 <_PyBytesWriter_Finish@plt>
    2fd0:	add	sp, sp, #0x230
    2fd4:	ldp	x20, x19, [sp, #48]
    2fd8:	ldp	x22, x21, [sp, #32]
    2fdc:	ldr	x28, [sp, #16]
    2fe0:	ldp	x29, x30, [sp], #64
    2fe4:	ret
    2fe8:	stp	x29, x30, [sp, #-96]!
    2fec:	stp	x28, x27, [sp, #16]
    2ff0:	stp	x26, x25, [sp, #32]
    2ff4:	stp	x24, x23, [sp, #48]
    2ff8:	stp	x22, x21, [sp, #64]
    2ffc:	stp	x20, x19, [sp, #80]
    3000:	mov	x29, sp
    3004:	sub	sp, sp, #0x230
    3008:	ldr	x21, [x1, #16]
    300c:	mov	x8, #0xfffffffffffffffd    	// #-3
    3010:	movk	x8, #0x7fff, lsl #48
    3014:	cmp	x21, x8
    3018:	b.lt	3024 <PyInit_binascii@@Base+0x1620>  // b.tstop
    301c:	bl	1790 <PyErr_NoMemory@plt>
    3020:	b	31b4 <PyInit_binascii@@Base+0x17b0>
    3024:	add	x8, x21, #0x3
    3028:	ldr	x23, [x1]
    302c:	add	x9, x21, #0x6
    3030:	cmp	x8, #0x0
    3034:	csel	x8, x9, x8, lt  // lt = tstop
    3038:	mov	x19, x0
    303c:	asr	x8, x8, #2
    3040:	add	x0, sp, #0x8
    3044:	add	x20, x8, x8, lsl #1
    3048:	bl	1800 <_PyBytesWriter_Init@plt>
    304c:	add	x0, sp, #0x8
    3050:	mov	x1, x20
    3054:	bl	1830 <_PyBytesWriter_Alloc@plt>
    3058:	cbz	x0, 31b4 <PyInit_binascii@@Base+0x17b0>
    305c:	mov	x20, x0
    3060:	cmp	x21, #0x1
    3064:	b.lt	3134 <PyInit_binascii@@Base+0x1730>  // b.tstop
    3068:	adrp	x26, 4000 <PyInit_binascii@@Base+0x25fc>
    306c:	mov	w8, wzr
    3070:	mov	w25, wzr
    3074:	mov	w24, wzr
    3078:	add	x26, x26, #0xcce
    307c:	mov	w27, #0xffffffff            	// #-1
    3080:	mov	x22, x20
    3084:	b	30a8 <PyInit_binascii@@Base+0x16a4>
    3088:	sub	w24, w24, #0x2
    308c:	lsr	w9, w25, w24
    3090:	lsl	w10, w27, w24
    3094:	strb	w9, [x22], #1
    3098:	bic	w25, w25, w10
    309c:	subs	x21, x21, #0x1
    30a0:	add	x23, x23, #0x1
    30a4:	b.le	313c <PyInit_binascii@@Base+0x1738>
    30a8:	ldrsb	w9, [x23]
    30ac:	tbnz	w9, #31, 309c <PyInit_binascii@@Base+0x1698>
    30b0:	and	x9, x9, #0xff
    30b4:	cmp	w9, #0x1f
    30b8:	b.gt	30d0 <PyInit_binascii@@Base+0x16cc>
    30bc:	cmp	w9, #0xa
    30c0:	b.eq	309c <PyInit_binascii@@Base+0x1698>  // b.none
    30c4:	cmp	w9, #0xd
    30c8:	b.eq	309c <PyInit_binascii@@Base+0x1698>  // b.none
    30cc:	b	3108 <PyInit_binascii@@Base+0x1704>
    30d0:	cmp	w9, #0x20
    30d4:	b.eq	309c <PyInit_binascii@@Base+0x1698>  // b.none
    30d8:	cmp	w9, #0x3d
    30dc:	b.ne	3108 <PyInit_binascii@@Base+0x1704>  // b.any
    30e0:	cmp	w8, #0x2
    30e4:	b.lt	309c <PyInit_binascii@@Base+0x1698>  // b.tstop
    30e8:	b.ne	31a0 <PyInit_binascii@@Base+0x179c>  // b.any
    30ec:	mov	x0, x23
    30f0:	mov	x1, x21
    30f4:	bl	31d4 <PyInit_binascii@@Base+0x17d0>
    30f8:	cmp	w0, #0x3d
    30fc:	b.eq	31a0 <PyInit_binascii@@Base+0x179c>  // b.none
    3100:	mov	w8, #0x2                   	// #2
    3104:	b	309c <PyInit_binascii@@Base+0x1698>
    3108:	ldrb	w9, [x26, x9]
    310c:	cmp	w9, #0xff
    3110:	b.eq	309c <PyInit_binascii@@Base+0x1698>  // b.none
    3114:	add	w8, w8, #0x1
    3118:	add	w10, w24, #0x6
    311c:	and	w8, w8, #0x3
    3120:	cmp	w10, #0x8
    3124:	orr	w25, w9, w25, lsl #6
    3128:	b.ge	3088 <PyInit_binascii@@Base+0x1684>  // b.tcont
    312c:	mov	w24, w10
    3130:	b	309c <PyInit_binascii@@Base+0x1698>
    3134:	mov	w24, wzr
    3138:	mov	x22, x20
    313c:	cbz	w24, 31a8 <PyInit_binascii@@Base+0x17a4>
    3140:	mov	x0, x19
    3144:	bl	17e0 <PyModule_GetState@plt>
    3148:	cbz	x0, 31b4 <PyInit_binascii@@Base+0x17b0>
    314c:	ldr	x0, [x0]
    3150:	cmp	w24, #0x6
    3154:	b.ne	3184 <PyInit_binascii@@Base+0x1780>  // b.any
    3158:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    315c:	sub	x8, x22, x20
    3160:	movk	x9, #0x5556
    3164:	smulh	x8, x8, x9
    3168:	add	x8, x8, x8, lsr #63
    316c:	mov	w2, #0x1                   	// #1
    3170:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3174:	bfi	x2, x8, #2, #62
    3178:	add	x1, x1, #0x206
    317c:	bl	18f0 <PyErr_Format@plt>
    3180:	b	3190 <PyInit_binascii@@Base+0x178c>
    3184:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3188:	add	x1, x1, #0x26b
    318c:	bl	17c0 <PyErr_SetString@plt>
    3190:	add	x0, sp, #0x8
    3194:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    3198:	mov	x0, xzr
    319c:	b	31b4 <PyInit_binascii@@Base+0x17b0>
    31a0:	mov	w24, wzr
    31a4:	cbnz	w24, 3140 <PyInit_binascii@@Base+0x173c>
    31a8:	add	x0, sp, #0x8
    31ac:	mov	x1, x22
    31b0:	bl	17d0 <_PyBytesWriter_Finish@plt>
    31b4:	add	sp, sp, #0x230
    31b8:	ldp	x20, x19, [sp, #80]
    31bc:	ldp	x22, x21, [sp, #64]
    31c0:	ldp	x24, x23, [sp, #48]
    31c4:	ldp	x26, x25, [sp, #32]
    31c8:	ldp	x28, x27, [sp, #16]
    31cc:	ldp	x29, x30, [sp], #96
    31d0:	ret
    31d4:	cmp	x1, #0x1
    31d8:	b.lt	3238 <PyInit_binascii@@Base+0x1834>  // b.tstop
    31dc:	adrp	x10, 4000 <PyInit_binascii@@Base+0x25fc>
    31e0:	mov	x8, x0
    31e4:	mov	w9, #0x1                   	// #1
    31e8:	mov	w0, #0xffffffff            	// #-1
    31ec:	add	x10, x10, #0xcce
    31f0:	ldrsb	w11, [x8]
    31f4:	tbnz	w11, #31, 321c <PyInit_binascii@@Base+0x1818>
    31f8:	and	x12, x11, #0xff
    31fc:	and	x12, x12, #0x7f
    3200:	ldrb	w12, [x10, x12]
    3204:	cmp	w12, #0xff
    3208:	b.eq	321c <PyInit_binascii@@Base+0x1818>  // b.none
    320c:	and	w11, w11, #0xff
    3210:	cmp	w9, #0x0
    3214:	csel	w0, w11, w0, eq  // eq = none
    3218:	sub	w9, w9, #0x1
    321c:	cmn	w0, #0x1
    3220:	b.ne	3234 <PyInit_binascii@@Base+0x1830>  // b.any
    3224:	cmp	x1, #0x1
    3228:	sub	x1, x1, #0x1
    322c:	add	x8, x8, #0x1
    3230:	b.gt	31f0 <PyInit_binascii@@Base+0x17ec>
    3234:	ret
    3238:	mov	w0, #0xffffffff            	// #-1
    323c:	ret
    3240:	stp	x29, x30, [sp, #-64]!
    3244:	str	x28, [sp, #16]
    3248:	stp	x22, x21, [sp, #32]
    324c:	stp	x20, x19, [sp, #48]
    3250:	mov	x29, sp
    3254:	sub	sp, sp, #0x230
    3258:	ldr	x21, [x1]
    325c:	ldr	x22, [x1, #16]
    3260:	mov	x20, x0
    3264:	add	x0, sp, #0x8
    3268:	mov	w19, w2
    326c:	bl	1800 <_PyBytesWriter_Init@plt>
    3270:	mov	x8, #0x3fffffffffffffff    	// #4611686018427387903
    3274:	cmp	x22, x8
    3278:	b.lt	32a0 <PyInit_binascii@@Base+0x189c>  // b.tstop
    327c:	mov	x0, x20
    3280:	bl	17e0 <PyModule_GetState@plt>
    3284:	cbz	x0, 33a4 <PyInit_binascii@@Base+0x19a0>
    3288:	ldr	x0, [x0]
    328c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3290:	add	x1, x1, #0x285
    3294:	bl	17c0 <PyErr_SetString@plt>
    3298:	mov	x0, xzr
    329c:	b	33a4 <PyInit_binascii@@Base+0x19a0>
    32a0:	cmp	w19, #0x0
    32a4:	mov	w8, #0x2                   	// #2
    32a8:	cinc	x8, x8, ne  // ne = any
    32ac:	add	x1, x8, x22, lsl #1
    32b0:	add	x0, sp, #0x8
    32b4:	bl	1830 <_PyBytesWriter_Alloc@plt>
    32b8:	cbz	x0, 33a4 <PyInit_binascii@@Base+0x19a0>
    32bc:	mov	x1, x0
    32c0:	cmp	x22, #0x1
    32c4:	b.lt	3320 <PyInit_binascii@@Base+0x191c>  // b.tstop
    32c8:	adrp	x10, 5000 <PyInit_binascii@@Base+0x35fc>
    32cc:	mov	w9, wzr
    32d0:	mov	w8, wzr
    32d4:	add	x10, x10, #0x2a3
    32d8:	b	32e8 <PyInit_binascii@@Base+0x18e4>
    32dc:	subs	x22, x22, #0x1
    32e0:	add	x21, x21, #0x1
    32e4:	b.le	3328 <PyInit_binascii@@Base+0x1924>
    32e8:	ldrb	w11, [x21]
    32ec:	lsl	w9, w9, #8
    32f0:	add	w8, w8, #0x8
    32f4:	cmp	w8, #0x6
    32f8:	orr	x9, x9, x11
    32fc:	b.lt	32dc <PyInit_binascii@@Base+0x18d8>  // b.tstop
    3300:	sub	w8, w8, #0x6
    3304:	lsr	x11, x9, x8
    3308:	and	x11, x11, #0x3f
    330c:	ldrb	w11, [x10, x11]
    3310:	cmp	w8, #0x5
    3314:	strb	w11, [x1], #1
    3318:	b.gt	3300 <PyInit_binascii@@Base+0x18fc>
    331c:	b	32dc <PyInit_binascii@@Base+0x18d8>
    3320:	mov	w8, wzr
    3324:	mov	w9, wzr
    3328:	cmp	w8, #0x4
    332c:	b.eq	3364 <PyInit_binascii@@Base+0x1960>  // b.none
    3330:	cmp	w8, #0x2
    3334:	b.ne	3390 <PyInit_binascii@@Base+0x198c>  // b.any
    3338:	lsl	w8, w9, #4
    333c:	adrp	x9, 5000 <PyInit_binascii@@Base+0x35fc>
    3340:	add	x9, x9, #0x2a3
    3344:	and	x8, x8, #0x30
    3348:	ldrb	w9, [x9, x8]
    334c:	mov	w10, #0x3d                  	// #61
    3350:	add	x8, x1, #0x2
    3354:	strb	w10, [x1, #1]
    3358:	strb	w9, [x1]
    335c:	mov	w9, #0x3                   	// #3
    3360:	b	3384 <PyInit_binascii@@Base+0x1980>
    3364:	lsl	w8, w9, #2
    3368:	adrp	x9, 5000 <PyInit_binascii@@Base+0x35fc>
    336c:	add	x9, x9, #0x2a3
    3370:	and	x8, x8, #0x3c
    3374:	ldrb	w9, [x9, x8]
    3378:	mov	x8, x1
    337c:	strb	w9, [x8], #1
    3380:	mov	w9, #0x2                   	// #2
    3384:	add	x1, x1, x9
    3388:	mov	w9, #0x3d                  	// #61
    338c:	strb	w9, [x8]
    3390:	cbz	w19, 339c <PyInit_binascii@@Base+0x1998>
    3394:	mov	w8, #0xa                   	// #10
    3398:	strb	w8, [x1], #1
    339c:	add	x0, sp, #0x8
    33a0:	bl	17d0 <_PyBytesWriter_Finish@plt>
    33a4:	add	sp, sp, #0x230
    33a8:	ldp	x20, x19, [sp, #48]
    33ac:	ldp	x22, x21, [sp, #32]
    33b0:	ldr	x28, [sp, #16]
    33b4:	ldp	x29, x30, [sp], #64
    33b8:	ret
    33bc:	stp	x29, x30, [sp, #-48]!
    33c0:	stp	x28, x21, [sp, #16]
    33c4:	stp	x20, x19, [sp, #32]
    33c8:	mov	x29, sp
    33cc:	sub	sp, sp, #0x230
    33d0:	ldr	x20, [x1]
    33d4:	ldr	x21, [x1, #16]
    33d8:	mov	x19, x0
    33dc:	add	x0, sp, #0x8
    33e0:	bl	1800 <_PyBytesWriter_Init@plt>
    33e4:	mov	x8, #0x7ffffffffffffffe    	// #9223372036854775806
    33e8:	cmp	x21, x8
    33ec:	b.lt	33f8 <PyInit_binascii@@Base+0x19f4>  // b.tstop
    33f0:	bl	1790 <PyErr_NoMemory@plt>
    33f4:	b	3514 <PyInit_binascii@@Base+0x1b10>
    33f8:	add	x1, x21, #0x2
    33fc:	add	x0, sp, #0x8
    3400:	bl	1830 <_PyBytesWriter_Alloc@plt>
    3404:	cbz	x0, 3514 <PyInit_binascii@@Base+0x1b10>
    3408:	mov	x1, x0
    340c:	cmp	x21, #0x1
    3410:	b.lt	3494 <PyInit_binascii@@Base+0x1a90>  // b.tstop
    3414:	adrp	x11, 4000 <PyInit_binascii@@Base+0x25fc>
    3418:	mov	w9, wzr
    341c:	mov	w8, wzr
    3420:	add	x10, x21, #0x1
    3424:	add	x11, x11, #0xd4e
    3428:	mov	w12, #0xffffffff            	// #-1
    342c:	b	3454 <PyInit_binascii@@Base+0x1a50>
    3430:	sub	w8, w8, #0x2
    3434:	lsr	w13, w9, w8
    3438:	lsl	w14, w12, w8
    343c:	strb	w13, [x1], #1
    3440:	bic	w9, w9, w14
    3444:	sub	x10, x10, #0x1
    3448:	cmp	x10, #0x1
    344c:	add	x20, x20, #0x1
    3450:	b.le	3498 <PyInit_binascii@@Base+0x1a94>
    3454:	ldrb	w13, [x20]
    3458:	cmp	w13, #0xa
    345c:	b.eq	3444 <PyInit_binascii@@Base+0x1a40>  // b.none
    3460:	cmp	w13, #0xd
    3464:	b.eq	3444 <PyInit_binascii@@Base+0x1a40>  // b.none
    3468:	ldrb	w14, [x11, x13]
    346c:	cmp	w14, #0x7d
    3470:	b.eq	34c0 <PyInit_binascii@@Base+0x1abc>  // b.none
    3474:	cmp	w13, #0x3a
    3478:	b.eq	34ec <PyInit_binascii@@Base+0x1ae8>  // b.none
    347c:	add	w13, w8, #0x6
    3480:	cmp	w13, #0x8
    3484:	orr	w9, w14, w9, lsl #6
    3488:	b.ge	3430 <PyInit_binascii@@Base+0x1a2c>  // b.tcont
    348c:	mov	w8, w13
    3490:	b	3444 <PyInit_binascii@@Base+0x1a40>
    3494:	mov	w8, wzr
    3498:	mov	w20, wzr
    349c:	cbz	w8, 34f4 <PyInit_binascii@@Base+0x1af0>
    34a0:	cbnz	w20, 34f4 <PyInit_binascii@@Base+0x1af0>
    34a4:	mov	x0, x19
    34a8:	bl	17e0 <PyModule_GetState@plt>
    34ac:	cbz	x0, 3514 <PyInit_binascii@@Base+0x1b10>
    34b0:	ldr	x0, [x0, #8]
    34b4:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    34b8:	add	x1, x1, #0x2e4
    34bc:	b	34d8 <PyInit_binascii@@Base+0x1ad4>
    34c0:	mov	x0, x19
    34c4:	bl	17e0 <PyModule_GetState@plt>
    34c8:	cbz	x0, 3514 <PyInit_binascii@@Base+0x1b10>
    34cc:	ldr	x0, [x0]
    34d0:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    34d4:	add	x1, x1, #0x184
    34d8:	bl	17c0 <PyErr_SetString@plt>
    34dc:	add	x0, sp, #0x8
    34e0:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    34e4:	mov	x0, xzr
    34e8:	b	3514 <PyInit_binascii@@Base+0x1b10>
    34ec:	mov	w20, #0x1                   	// #1
    34f0:	cbnz	w8, 34a0 <PyInit_binascii@@Base+0x1a9c>
    34f4:	add	x0, sp, #0x8
    34f8:	bl	17d0 <_PyBytesWriter_Finish@plt>
    34fc:	cbz	x0, 3514 <PyInit_binascii@@Base+0x1b10>
    3500:	mov	x1, x0
    3504:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3508:	add	x0, x0, #0x30a
    350c:	mov	w2, w20
    3510:	bl	1900 <_Py_BuildValue_SizeT@plt>
    3514:	add	sp, sp, #0x230
    3518:	ldp	x20, x19, [sp, #32]
    351c:	ldp	x28, x21, [sp, #16]
    3520:	ldp	x29, x30, [sp], #48
    3524:	ret
    3528:	stp	x29, x30, [sp, #-48]!
    352c:	str	x28, [sp, #16]
    3530:	stp	x20, x19, [sp, #32]
    3534:	mov	x29, sp
    3538:	sub	sp, sp, #0x230
    353c:	ldr	x19, [x0]
    3540:	ldr	x20, [x0, #16]
    3544:	add	x0, sp, #0x8
    3548:	bl	1800 <_PyBytesWriter_Init@plt>
    354c:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    3550:	cmp	x20, x8
    3554:	b.lt	3560 <PyInit_binascii@@Base+0x1b5c>  // b.tstop
    3558:	bl	1790 <PyErr_NoMemory@plt>
    355c:	b	3604 <PyInit_binascii@@Base+0x1c00>
    3560:	lsl	x8, x20, #1
    3564:	add	x1, x8, #0x2
    3568:	add	x0, sp, #0x8
    356c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    3570:	cbz	x0, 3604 <PyInit_binascii@@Base+0x1c00>
    3574:	adrp	x8, 5000 <PyInit_binascii@@Base+0x35fc>
    3578:	mov	x1, x0
    357c:	cmp	x20, #0x1
    3580:	add	x8, x8, #0x316
    3584:	b.lt	35d8 <PyInit_binascii@@Base+0x1bd4>  // b.tstop
    3588:	mov	w10, wzr
    358c:	mov	w9, wzr
    3590:	b	35a0 <PyInit_binascii@@Base+0x1b9c>
    3594:	subs	x20, x20, #0x1
    3598:	add	x19, x19, #0x1
    359c:	b.le	35e0 <PyInit_binascii@@Base+0x1bdc>
    35a0:	ldrb	w11, [x19]
    35a4:	lsl	w10, w10, #8
    35a8:	add	w9, w9, #0x8
    35ac:	cmp	w9, #0x6
    35b0:	orr	x10, x10, x11
    35b4:	b.lt	3594 <PyInit_binascii@@Base+0x1b90>  // b.tstop
    35b8:	sub	w9, w9, #0x6
    35bc:	lsr	x11, x10, x9
    35c0:	and	x11, x11, #0x3f
    35c4:	ldrb	w11, [x8, x11]
    35c8:	cmp	w9, #0x5
    35cc:	strb	w11, [x1], #1
    35d0:	b.gt	35b8 <PyInit_binascii@@Base+0x1bb4>
    35d4:	b	3594 <PyInit_binascii@@Base+0x1b90>
    35d8:	mov	w9, wzr
    35dc:	mov	w10, wzr
    35e0:	cbz	w9, 35fc <PyInit_binascii@@Base+0x1bf8>
    35e4:	mov	w11, #0x6                   	// #6
    35e8:	sub	w9, w11, w9
    35ec:	lsl	w9, w10, w9
    35f0:	and	x9, x9, #0x3f
    35f4:	ldrb	w8, [x8, x9]
    35f8:	strb	w8, [x1], #1
    35fc:	add	x0, sp, #0x8
    3600:	bl	17d0 <_PyBytesWriter_Finish@plt>
    3604:	add	sp, sp, #0x230
    3608:	ldp	x20, x19, [sp, #32]
    360c:	ldr	x28, [sp, #16]
    3610:	ldp	x29, x30, [sp], #48
    3614:	ret
    3618:	stp	x29, x30, [sp, #-96]!
    361c:	str	x27, [sp, #16]
    3620:	stp	x26, x25, [sp, #32]
    3624:	stp	x24, x23, [sp, #48]
    3628:	stp	x22, x21, [sp, #64]
    362c:	stp	x20, x19, [sp, #80]
    3630:	mov	x29, sp
    3634:	ldr	x22, [x1, #16]
    3638:	mov	x20, x0
    363c:	tbnz	w22, #0, 370c <PyInit_binascii@@Base+0x1d08>
    3640:	ldr	x23, [x1]
    3644:	cmp	x22, #0x0
    3648:	cinc	x8, x22, lt  // lt = tstop
    364c:	asr	x1, x8, #1
    3650:	mov	x0, xzr
    3654:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3658:	mov	x19, x0
    365c:	cbz	x0, 372c <PyInit_binascii@@Base+0x1d28>
    3660:	cmp	x22, #0x1
    3664:	b.lt	372c <PyInit_binascii@@Base+0x1d28>  // b.tstop
    3668:	adrp	x27, 15000 <PyInit_binascii@@Base+0x135fc>
    366c:	ldr	x27, [x27, #4056]
    3670:	adrp	x21, 5000 <PyInit_binascii@@Base+0x35fc>
    3674:	mov	x24, xzr
    3678:	mov	x26, xzr
    367c:	add	x25, x19, #0x20
    3680:	add	x21, x21, #0x369
    3684:	b	36ac <PyInit_binascii@@Base+0x1ca8>
    3688:	add	w9, w10, w9, lsl #4
    368c:	add	x10, x26, #0x1
    3690:	mov	w8, wzr
    3694:	strb	w9, [x25, x26]
    3698:	mov	x26, x10
    369c:	cbnz	w8, 36f8 <PyInit_binascii@@Base+0x1cf4>
    36a0:	add	x24, x24, #0x2
    36a4:	cmp	x24, x22
    36a8:	b.ge	372c <PyInit_binascii@@Base+0x1d28>  // b.tcont
    36ac:	add	x8, x23, x24
    36b0:	ldrb	w9, [x8]
    36b4:	ldrb	w8, [x8, #1]
    36b8:	ldrb	w9, [x27, x9]
    36bc:	ldrb	w10, [x27, x8]
    36c0:	orr	w8, w10, w9
    36c4:	cmp	w8, #0x10
    36c8:	b.cc	3688 <PyInit_binascii@@Base+0x1c84>  // b.lo, b.ul, b.last
    36cc:	mov	x0, x20
    36d0:	bl	17e0 <PyModule_GetState@plt>
    36d4:	cbz	x0, 36f0 <PyInit_binascii@@Base+0x1cec>
    36d8:	ldr	x0, [x0]
    36dc:	mov	x1, x21
    36e0:	bl	17c0 <PyErr_SetString@plt>
    36e4:	mov	w8, #0x5                   	// #5
    36e8:	cbz	w8, 36a0 <PyInit_binascii@@Base+0x1c9c>
    36ec:	b	36f8 <PyInit_binascii@@Base+0x1cf4>
    36f0:	mov	w8, #0x1                   	// #1
    36f4:	cbz	w8, 36a0 <PyInit_binascii@@Base+0x1c9c>
    36f8:	cmp	w8, #0x5
    36fc:	b.ne	3728 <PyInit_binascii@@Base+0x1d24>  // b.any
    3700:	mov	x0, x19
    3704:	bl	2e80 <PyInit_binascii@@Base+0x147c>
    3708:	b	3728 <PyInit_binascii@@Base+0x1d24>
    370c:	mov	x0, x20
    3710:	bl	17e0 <PyModule_GetState@plt>
    3714:	cbz	x0, 3728 <PyInit_binascii@@Base+0x1d24>
    3718:	ldr	x0, [x0]
    371c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3720:	add	x1, x1, #0x357
    3724:	bl	17c0 <PyErr_SetString@plt>
    3728:	mov	x19, xzr
    372c:	mov	x0, x19
    3730:	ldp	x20, x19, [sp, #80]
    3734:	ldp	x22, x21, [sp, #64]
    3738:	ldp	x24, x23, [sp, #48]
    373c:	ldp	x26, x25, [sp, #32]
    3740:	ldr	x27, [sp, #16]
    3744:	ldp	x29, x30, [sp], #96
    3748:	ret
    374c:	stp	x29, x30, [sp, #-16]!
    3750:	mov	x29, sp
    3754:	ldr	x8, [x0]
    3758:	ldr	x9, [x0, #16]
    375c:	mov	w3, w2
    3760:	mov	x2, x1
    3764:	mov	x0, x8
    3768:	mov	x1, x9
    376c:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    3770:	ldp	x29, x30, [sp], #16
    3774:	ret
    3778:	stp	x29, x30, [sp, #-16]!
    377c:	mov	x29, sp
    3780:	ldr	x8, [x0]
    3784:	ldr	x9, [x0, #16]
    3788:	mov	w3, w2
    378c:	mov	x2, x1
    3790:	mov	x0, x8
    3794:	mov	x1, x9
    3798:	bl	18a0 <_Py_strhex_bytes_with_sep@plt>
    379c:	ldp	x29, x30, [sp], #16
    37a0:	ret
    37a4:	stp	x29, x30, [sp, #-16]!
    37a8:	mov	x29, sp
    37ac:	bl	3618 <PyInit_binascii@@Base+0x1c14>
    37b0:	ldp	x29, x30, [sp], #16
    37b4:	ret
    37b8:	stp	x29, x30, [sp, #-48]!
    37bc:	str	x28, [sp, #16]
    37c0:	stp	x20, x19, [sp, #32]
    37c4:	mov	x29, sp
    37c8:	sub	sp, sp, #0x230
    37cc:	mov	x19, x0
    37d0:	add	x0, sp, #0x8
    37d4:	bl	1800 <_PyBytesWriter_Init@plt>
    37d8:	ldr	x20, [x19, #16]
    37dc:	mov	x8, #0x3ffffffffffffffe    	// #4611686018427387902
    37e0:	cmp	x20, x8
    37e4:	b.lt	37f0 <PyInit_binascii@@Base+0x1dec>  // b.tstop
    37e8:	bl	1790 <PyErr_NoMemory@plt>
    37ec:	b	38b4 <PyInit_binascii@@Base+0x1eb0>
    37f0:	ldr	x19, [x19]
    37f4:	lsl	x8, x20, #1
    37f8:	add	x1, x8, #0x2
    37fc:	add	x0, sp, #0x8
    3800:	bl	1830 <_PyBytesWriter_Alloc@plt>
    3804:	cbz	x0, 38b4 <PyInit_binascii@@Base+0x1eb0>
    3808:	mov	x1, x0
    380c:	cmp	x20, #0x1
    3810:	b.lt	38ac <PyInit_binascii@@Base+0x1ea8>  // b.tstop
    3814:	mov	x10, xzr
    3818:	add	x8, x19, #0x1
    381c:	mov	w9, #0x90                  	// #144
    3820:	b	3834 <PyInit_binascii@@Base+0x1e30>
    3824:	strh	w9, [x1], #2
    3828:	add	x10, x10, #0x1
    382c:	cmp	x10, x20
    3830:	b.ge	38ac <PyInit_binascii@@Base+0x1ea8>  // b.tcont
    3834:	ldrb	w11, [x19, x10]
    3838:	cmp	w11, #0x90
    383c:	b.eq	3824 <PyInit_binascii@@Base+0x1e20>  // b.none
    3840:	mov	x16, xzr
    3844:	add	x13, x10, #0xff
    3848:	add	x14, x8, x10
    384c:	add	x12, x10, x16
    3850:	mov	x15, x16
    3854:	add	x16, x12, #0x1
    3858:	cmp	x16, x20
    385c:	b.ge	3878 <PyInit_binascii@@Base+0x1e74>  // b.tcont
    3860:	cmp	x16, x13
    3864:	b.ge	3878 <PyInit_binascii@@Base+0x1e74>  // b.tcont
    3868:	ldrb	w16, [x14, x15]
    386c:	cmp	w16, w11
    3870:	add	x16, x15, #0x1
    3874:	b.eq	384c <PyInit_binascii@@Base+0x1e48>  // b.none
    3878:	add	x13, x15, #0x1
    387c:	mov	x14, x1
    3880:	cmp	x13, #0x4
    3884:	strb	w11, [x14], #1
    3888:	b.lt	38a4 <PyInit_binascii@@Base+0x1ea0>  // b.tstop
    388c:	add	x10, x1, #0x3
    3890:	strb	w9, [x1, #1]
    3894:	strb	w13, [x1, #2]
    3898:	mov	x1, x10
    389c:	mov	x10, x12
    38a0:	b	3828 <PyInit_binascii@@Base+0x1e24>
    38a4:	mov	x1, x14
    38a8:	b	3828 <PyInit_binascii@@Base+0x1e24>
    38ac:	add	x0, sp, #0x8
    38b0:	bl	17d0 <_PyBytesWriter_Finish@plt>
    38b4:	add	sp, sp, #0x230
    38b8:	ldp	x20, x19, [sp, #32]
    38bc:	ldr	x28, [sp, #16]
    38c0:	ldp	x29, x30, [sp], #48
    38c4:	ret
    38c8:	stp	x29, x30, [sp, #-80]!
    38cc:	stp	x28, x25, [sp, #16]
    38d0:	stp	x24, x23, [sp, #32]
    38d4:	stp	x22, x21, [sp, #48]
    38d8:	stp	x20, x19, [sp, #64]
    38dc:	mov	x29, sp
    38e0:	sub	sp, sp, #0x230
    38e4:	ldr	x23, [x1]
    38e8:	ldr	x21, [x1, #16]
    38ec:	mov	x19, x0
    38f0:	add	x0, sp, #0x8
    38f4:	bl	1800 <_PyBytesWriter_Init@plt>
    38f8:	cbz	x21, 3910 <PyInit_binascii@@Base+0x1f0c>
    38fc:	mov	x8, #0x4000000000000000    	// #4611686018427387904
    3900:	cmp	x21, x8
    3904:	b.lt	3924 <PyInit_binascii@@Base+0x1f20>  // b.tstop
    3908:	bl	1790 <PyErr_NoMemory@plt>
    390c:	b	3a8c <PyInit_binascii@@Base+0x2088>
    3910:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    3914:	add	x0, x0, #0x3a7
    3918:	mov	x1, xzr
    391c:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3920:	b	3a8c <PyInit_binascii@@Base+0x2088>
    3924:	add	x0, sp, #0x8
    3928:	mov	x1, x21
    392c:	bl	1830 <_PyBytesWriter_Alloc@plt>
    3930:	cbz	x0, 3a8c <PyInit_binascii@@Base+0x2088>
    3934:	mov	w8, #0x1                   	// #1
    3938:	subs	x22, x21, #0x1
    393c:	str	w8, [sp, #36]
    3940:	b.mi	3a50 <PyInit_binascii@@Base+0x204c>  // b.first
    3944:	mov	x8, x23
    3948:	ldrb	w9, [x8], #1
    394c:	mov	x20, x0
    3950:	cmp	w9, #0x90
    3954:	b.ne	3994 <PyInit_binascii@@Base+0x1f90>  // b.any
    3958:	subs	x22, x21, #0x2
    395c:	b.mi	3a50 <PyInit_binascii@@Base+0x204c>  // b.first
    3960:	ldr	x9, [sp, #24]
    3964:	ldrb	w8, [x8]
    3968:	sub	x9, x9, #0x1
    396c:	str	x9, [sp, #24]
    3970:	cbz	w8, 398c <PyInit_binascii@@Base+0x1f88>
    3974:	mov	x0, x19
    3978:	bl	17e0 <PyModule_GetState@plt>
    397c:	cbz	x0, 3a8c <PyInit_binascii@@Base+0x2088>
    3980:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3984:	add	x1, x1, #0x3a8
    3988:	b	3a68 <PyInit_binascii@@Base+0x2064>
    398c:	add	x8, x23, #0x2
    3990:	mov	w9, #0x90                  	// #144
    3994:	cmp	x22, #0x1
    3998:	strb	w9, [x20], #1
    399c:	b.lt	3a80 <PyInit_binascii@@Base+0x207c>  // b.tstop
    39a0:	mov	w23, #0x90                  	// #144
    39a4:	b	39bc <PyInit_binascii@@Base+0x1fb8>
    39a8:	strb	w10, [x20], #1
    39ac:	mov	x22, x9
    39b0:	cmp	x22, #0x0
    39b4:	mov	x8, x24
    39b8:	b.le	3a80 <PyInit_binascii@@Base+0x207c>
    39bc:	subs	x9, x22, #0x1
    39c0:	b.mi	3a50 <PyInit_binascii@@Base+0x204c>  // b.first
    39c4:	mov	x24, x8
    39c8:	ldrb	w10, [x24], #1
    39cc:	cmp	w10, #0x90
    39d0:	b.ne	39a8 <PyInit_binascii@@Base+0x1fa4>  // b.any
    39d4:	subs	x22, x22, #0x2
    39d8:	b.mi	3a50 <PyInit_binascii@@Base+0x204c>  // b.first
    39dc:	ldr	x9, [sp, #24]
    39e0:	ldrb	w25, [x8, #1]
    39e4:	add	x24, x8, #0x2
    39e8:	sub	x8, x9, #0x1
    39ec:	str	x8, [sp, #24]
    39f0:	cbz	x25, 3a48 <PyInit_binascii@@Base+0x2044>
    39f4:	ldurb	w21, [x20, #-1]
    39f8:	cmp	w25, #0x1
    39fc:	b.eq	3a18 <PyInit_binascii@@Base+0x2014>  // b.none
    3a00:	sub	x2, x25, #0x1
    3a04:	add	x0, sp, #0x8
    3a08:	mov	x1, x20
    3a0c:	bl	17a0 <_PyBytesWriter_Prepare@plt>
    3a10:	mov	x20, x0
    3a14:	cbz	x0, 3a70 <PyInit_binascii@@Base+0x206c>
    3a18:	sub	w25, w25, #0x1
    3a1c:	tst	w25, #0xff
    3a20:	b.eq	39b0 <PyInit_binascii@@Base+0x1fac>  // b.none
    3a24:	and	x2, x25, #0xff
    3a28:	mov	x0, x20
    3a2c:	mov	w1, w21
    3a30:	bl	17f0 <memset@plt>
    3a34:	sub	w25, w25, #0x1
    3a38:	tst	w25, #0xff
    3a3c:	add	x20, x20, #0x1
    3a40:	b.ne	3a34 <PyInit_binascii@@Base+0x2030>  // b.any
    3a44:	b	39b0 <PyInit_binascii@@Base+0x1fac>
    3a48:	strb	w23, [x20], #1
    3a4c:	b	39b0 <PyInit_binascii@@Base+0x1fac>
    3a50:	mov	x0, x19
    3a54:	bl	17e0 <PyModule_GetState@plt>
    3a58:	cbz	x0, 3a8c <PyInit_binascii@@Base+0x2088>
    3a5c:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    3a60:	add	x0, x0, #0x8
    3a64:	add	x1, x1, #0x3a7
    3a68:	ldr	x0, [x0]
    3a6c:	bl	17c0 <PyErr_SetString@plt>
    3a70:	add	x0, sp, #0x8
    3a74:	bl	18b0 <_PyBytesWriter_Dealloc@plt>
    3a78:	mov	x0, xzr
    3a7c:	b	3a8c <PyInit_binascii@@Base+0x2088>
    3a80:	add	x0, sp, #0x8
    3a84:	mov	x1, x20
    3a88:	bl	17d0 <_PyBytesWriter_Finish@plt>
    3a8c:	add	sp, sp, #0x230
    3a90:	ldp	x20, x19, [sp, #64]
    3a94:	ldp	x22, x21, [sp, #48]
    3a98:	ldp	x24, x23, [sp, #32]
    3a9c:	ldp	x28, x25, [sp, #16]
    3aa0:	ldp	x29, x30, [sp], #80
    3aa4:	ret
    3aa8:	ldr	x9, [x0, #16]
    3aac:	mov	x8, x0
    3ab0:	and	w0, w1, #0xffff
    3ab4:	cmp	x9, #0x1
    3ab8:	b.lt	3aec <PyInit_binascii@@Base+0x20e8>  // b.tstop
    3abc:	ldr	x8, [x8]
    3ac0:	adrp	x10, 4000 <PyInit_binascii@@Base+0x25fc>
    3ac4:	add	x9, x9, #0x1
    3ac8:	add	x10, x10, #0xe4e
    3acc:	ldrb	w11, [x8], #1
    3ad0:	ubfiz	w12, w0, #8, #8
    3ad4:	sub	x9, x9, #0x1
    3ad8:	cmp	x9, #0x1
    3adc:	eor	w11, w11, w0, lsr #8
    3ae0:	ldrh	w11, [x10, w11, uxtw #1]
    3ae4:	eor	w0, w12, w11
    3ae8:	b.gt	3acc <PyInit_binascii@@Base+0x20c8>
    3aec:	ret
    3af0:	stp	x29, x30, [sp, #-16]!
    3af4:	mov	x29, sp
    3af8:	ldr	x8, [x0]
    3afc:	ldr	w2, [x0, #16]
    3b00:	mov	w0, w1
    3b04:	mov	x1, x8
    3b08:	bl	1750 <crc32@plt>
    3b0c:	ldp	x29, x30, [sp], #16
    3b10:	ret
    3b14:	stp	x29, x30, [sp, #-48]!
    3b18:	stp	x22, x21, [sp, #16]
    3b1c:	stp	x20, x19, [sp, #32]
    3b20:	mov	x29, sp
    3b24:	ldr	x20, [x0, #16]
    3b28:	ldr	x22, [x0]
    3b2c:	mov	w21, w1
    3b30:	mov	x0, x20
    3b34:	bl	1920 <PyMem_Malloc@plt>
    3b38:	cbz	x0, 3ca8 <PyInit_binascii@@Base+0x22a4>
    3b3c:	mov	w1, wzr
    3b40:	mov	x2, x20
    3b44:	mov	x19, x0
    3b48:	bl	17f0 <memset@plt>
    3b4c:	cmp	x20, #0x1
    3b50:	b.lt	3cb4 <PyInit_binascii@@Base+0x22b0>  // b.tstop
    3b54:	adrp	x9, 15000 <PyInit_binascii@@Base+0x135fc>
    3b58:	ldr	x9, [x9, #4056]
    3b5c:	mov	x13, xzr
    3b60:	mov	x1, xzr
    3b64:	mov	w8, #0x3d                  	// #61
    3b68:	mov	w10, #0x1                   	// #1
    3b6c:	mov	w11, #0x20                  	// #32
    3b70:	b	3b8c <PyInit_binascii@@Base+0x2188>
    3b74:	strb	w12, [x19, x1]
    3b78:	add	x12, x13, #0x1
    3b7c:	add	x1, x1, #0x1
    3b80:	cmp	x12, x20
    3b84:	mov	x13, x12
    3b88:	b.ge	3cb8 <PyInit_binascii@@Base+0x22b4>  // b.tcont
    3b8c:	ldrb	w12, [x22, x13]
    3b90:	cmp	w12, #0x3d
    3b94:	b.ne	3bf0 <PyInit_binascii@@Base+0x21ec>  // b.any
    3b98:	add	x12, x13, #0x1
    3b9c:	cmp	x12, x20
    3ba0:	b.ge	3cb8 <PyInit_binascii@@Base+0x22b4>  // b.tcont
    3ba4:	ldrb	w14, [x22, x12]
    3ba8:	cmp	w14, #0xa
    3bac:	b.eq	3be4 <PyInit_binascii@@Base+0x21e0>  // b.none
    3bb0:	cmp	w14, #0x3d
    3bb4:	b.eq	3c0c <PyInit_binascii@@Base+0x2208>  // b.none
    3bb8:	cmp	w14, #0xd
    3bbc:	b.ne	3c1c <PyInit_binascii@@Base+0x2218>  // b.any
    3bc0:	cmp	x12, x20
    3bc4:	b.ge	3be4 <PyInit_binascii@@Base+0x21e0>  // b.tcont
    3bc8:	ldrb	w13, [x22, x12]
    3bcc:	cmp	w13, #0xa
    3bd0:	b.eq	3be4 <PyInit_binascii@@Base+0x21e0>  // b.none
    3bd4:	add	x12, x12, #0x1
    3bd8:	cmp	x20, x12
    3bdc:	b.ne	3bc8 <PyInit_binascii@@Base+0x21c4>  // b.any
    3be0:	mov	x12, x20
    3be4:	cmp	x12, x20
    3be8:	cinc	x12, x12, lt  // lt = tstop
    3bec:	b	3b80 <PyInit_binascii@@Base+0x217c>
    3bf0:	cbz	w21, 3b74 <PyInit_binascii@@Base+0x2170>
    3bf4:	cmp	w12, #0x5f
    3bf8:	b.ne	3b74 <PyInit_binascii@@Base+0x2170>  // b.any
    3bfc:	strb	w11, [x19, x1]
    3c00:	add	x1, x1, #0x1
    3c04:	add	x12, x13, #0x1
    3c08:	b	3b80 <PyInit_binascii@@Base+0x217c>
    3c0c:	strb	w8, [x19, x1]
    3c10:	add	x1, x1, #0x1
    3c14:	add	x12, x13, #0x2
    3c18:	b	3b80 <PyInit_binascii@@Base+0x217c>
    3c1c:	add	x15, x13, #0x2
    3c20:	cmp	x15, x20
    3c24:	b.ge	3c98 <PyInit_binascii@@Base+0x2294>  // b.tcont
    3c28:	sub	w16, w14, #0x30
    3c2c:	and	w16, w16, #0xff
    3c30:	cmp	w16, #0xa
    3c34:	b.cc	3c50 <PyInit_binascii@@Base+0x224c>  // b.lo, b.ul, b.last
    3c38:	sub	w16, w14, #0x41
    3c3c:	cmp	w16, #0x25
    3c40:	b.hi	3c98 <PyInit_binascii@@Base+0x2294>  // b.pmore
    3c44:	lsl	x16, x10, x16
    3c48:	tst	x16, #0x3f0000003f
    3c4c:	b.eq	3c98 <PyInit_binascii@@Base+0x2294>  // b.none
    3c50:	ldrb	w15, [x22, x15]
    3c54:	sub	w16, w15, #0x30
    3c58:	and	w16, w16, #0xff
    3c5c:	cmp	w16, #0xa
    3c60:	b.cc	3c7c <PyInit_binascii@@Base+0x2278>  // b.lo, b.ul, b.last
    3c64:	sub	w16, w15, #0x41
    3c68:	cmp	w16, #0x25
    3c6c:	b.hi	3c98 <PyInit_binascii@@Base+0x2294>  // b.pmore
    3c70:	lsl	x16, x10, x16
    3c74:	tst	x16, #0x3f0000003f
    3c78:	b.eq	3c98 <PyInit_binascii@@Base+0x2294>  // b.none
    3c7c:	ldrb	w12, [x9, x14]
    3c80:	ldrb	w14, [x9, x15]
    3c84:	orr	w12, w14, w12, lsl #4
    3c88:	strb	w12, [x19, x1]
    3c8c:	add	x1, x1, #0x1
    3c90:	add	x12, x13, #0x3
    3c94:	b	3b80 <PyInit_binascii@@Base+0x217c>
    3c98:	add	x13, x1, #0x1
    3c9c:	strb	w8, [x19, x1]
    3ca0:	mov	x1, x13
    3ca4:	b	3b80 <PyInit_binascii@@Base+0x217c>
    3ca8:	bl	1790 <PyErr_NoMemory@plt>
    3cac:	mov	x20, xzr
    3cb0:	b	3ccc <PyInit_binascii@@Base+0x22c8>
    3cb4:	mov	x1, xzr
    3cb8:	mov	x0, x19
    3cbc:	bl	1770 <PyBytes_FromStringAndSize@plt>
    3cc0:	mov	x20, x0
    3cc4:	mov	x0, x19
    3cc8:	bl	1720 <PyMem_Free@plt>
    3ccc:	mov	x0, x20
    3cd0:	ldp	x20, x19, [sp, #32]
    3cd4:	ldp	x22, x21, [sp, #16]
    3cd8:	ldp	x29, x30, [sp], #48
    3cdc:	ret
    3ce0:	sub	sp, sp, #0x80
    3ce4:	stp	x29, x30, [sp, #32]
    3ce8:	stp	x28, x27, [sp, #48]
    3cec:	stp	x26, x25, [sp, #64]
    3cf0:	stp	x24, x23, [sp, #80]
    3cf4:	stp	x22, x21, [sp, #96]
    3cf8:	stp	x20, x19, [sp, #112]
    3cfc:	add	x29, sp, #0x20
    3d00:	ldr	x21, [x0]
    3d04:	ldr	x22, [x0, #16]
    3d08:	mov	w20, w2
    3d0c:	str	w1, [sp, #12]
    3d10:	mov	w1, #0xa                   	// #10
    3d14:	mov	x0, x21
    3d18:	mov	x2, x22
    3d1c:	mov	w19, w3
    3d20:	bl	18c0 <memchr@plt>
    3d24:	cmp	x0, x21
    3d28:	mov	w8, #0x1                   	// #1
    3d2c:	b.ls	3d3c <PyInit_binascii@@Base+0x2338>  // b.plast
    3d30:	ldurb	w8, [x0, #-1]
    3d34:	cmp	w8, #0xd
    3d38:	cset	w8, ne  // ne = any
    3d3c:	stur	w8, [x29, #-4]
    3d40:	cmp	w8, #0x0
    3d44:	mov	w27, #0x3                   	// #3
    3d48:	mov	w8, #0x5                   	// #5
    3d4c:	mov	x25, xzr
    3d50:	mov	w26, wzr
    3d54:	mov	x24, xzr
    3d58:	mov	x28, #0x7fffffffffffffff    	// #9223372036854775807
    3d5c:	cinc	x9, x27, eq  // eq = none
    3d60:	cinc	x23, x8, eq  // eq = none
    3d64:	str	x9, [sp, #16]
    3d68:	b	3d78 <PyInit_binascii@@Base+0x2374>
    3d6c:	add	x25, x9, x25
    3d70:	mov	w8, #0x1                   	// #1
    3d74:	tbz	w8, #0, 4200 <PyInit_binascii@@Base+0x27fc>
    3d78:	cmp	x24, x22
    3d7c:	b.ge	3f5c <PyInit_binascii@@Base+0x2558>  // b.tcont
    3d80:	ldrb	w8, [x21, x24]
    3d84:	cmp	w19, #0x0
    3d88:	cset	w9, ne  // ne = any
    3d8c:	cmp	w8, #0x5f
    3d90:	cset	w10, eq  // eq = none
    3d94:	cmp	w8, #0x7e
    3d98:	b.hi	3e2c <PyInit_binascii@@Base+0x2428>  // b.pmore
    3d9c:	cmp	w8, #0x3d
    3da0:	b.eq	3e2c <PyInit_binascii@@Base+0x2428>  // b.none
    3da4:	and	w9, w9, w10
    3da8:	tbnz	w9, #0, 3e2c <PyInit_binascii@@Base+0x2428>
    3dac:	cbnz	w26, 3de4 <PyInit_binascii@@Base+0x23e0>
    3db0:	cmp	w8, #0x2e
    3db4:	b.ne	3de4 <PyInit_binascii@@Base+0x23e0>  // b.any
    3db8:	add	x9, x24, #0x1
    3dbc:	cmp	x9, x22
    3dc0:	b.eq	3e2c <PyInit_binascii@@Base+0x2428>  // b.none
    3dc4:	ldrb	w9, [x21, x9]
    3dc8:	cmp	w9, #0xd
    3dcc:	b.hi	3de4 <PyInit_binascii@@Base+0x23e0>  // b.pmore
    3dd0:	mov	w10, #0x1                   	// #1
    3dd4:	lsl	w9, w10, w9
    3dd8:	mov	w10, #0x2401                	// #9217
    3ddc:	tst	w9, w10
    3de0:	b.ne	3e2c <PyInit_binascii@@Base+0x2428>  // b.any
    3de4:	cbz	w20, 3dfc <PyInit_binascii@@Base+0x23f8>
    3de8:	cmp	w8, #0x20
    3dec:	b.eq	3e20 <PyInit_binascii@@Base+0x241c>  // b.none
    3df0:	cmp	w8, #0x9
    3df4:	b.eq	3e20 <PyInit_binascii@@Base+0x241c>  // b.none
    3df8:	b	3e5c <PyInit_binascii@@Base+0x2458>
    3dfc:	sub	w9, w8, #0x9
    3e00:	cmp	w9, #0x17
    3e04:	b.hi	3e5c <PyInit_binascii@@Base+0x2458>  // b.pmore
    3e08:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    3e0c:	add	x12, x12, #0x348
    3e10:	adr	x10, 3e20 <PyInit_binascii@@Base+0x241c>
    3e14:	ldrb	w11, [x12, x9]
    3e18:	add	x10, x10, x11, lsl #2
    3e1c:	br	x10
    3e20:	add	x9, x24, #0x1
    3e24:	cmp	x9, x22
    3e28:	b.ne	3e5c <PyInit_binascii@@Base+0x2458>  // b.any
    3e2c:	add	w8, w26, #0x3
    3e30:	cmp	w8, #0x4b
    3e34:	csel	x9, x23, x27, hi  // hi = pmore
    3e38:	csel	w26, w27, w8, hi  // hi = pmore
    3e3c:	add	x24, x24, #0x1
    3e40:	sub	x8, x28, x9
    3e44:	cmp	x8, x25
    3e48:	b.ge	3d6c <PyInit_binascii@@Base+0x2368>  // b.tcont
    3e4c:	bl	1790 <PyErr_NoMemory@plt>
    3e50:	mov	w8, wzr
    3e54:	tbnz	w8, #0, 3d78 <PyInit_binascii@@Base+0x2374>
    3e58:	b	4200 <PyInit_binascii@@Base+0x27fc>
    3e5c:	cmp	w8, #0x20
    3e60:	b.hi	3e74 <PyInit_binascii@@Base+0x2470>  // b.pmore
    3e64:	cmp	w8, #0xa
    3e68:	b.eq	3e74 <PyInit_binascii@@Base+0x2470>  // b.none
    3e6c:	cmp	w8, #0xd
    3e70:	b.ne	3f0c <PyInit_binascii@@Base+0x2508>  // b.any
    3e74:	cbz	w20, 3ec8 <PyInit_binascii@@Base+0x24c4>
    3e78:	cmp	w8, #0xa
    3e7c:	b.ne	3ea8 <PyInit_binascii@@Base+0x24a4>  // b.any
    3e80:	cbz	x24, 3f28 <PyInit_binascii@@Base+0x2524>
    3e84:	add	x9, x24, x21
    3e88:	ldurb	w9, [x9, #-1]
    3e8c:	ldur	w11, [x29, #-4]
    3e90:	cmp	w9, #0x20
    3e94:	b.eq	3ea0 <PyInit_binascii@@Base+0x249c>  // b.none
    3e98:	cmp	w9, #0x9
    3e9c:	b.ne	3f2c <PyInit_binascii@@Base+0x2528>  // b.any
    3ea0:	mov	w9, #0x2                   	// #2
    3ea4:	b	3f30 <PyInit_binascii@@Base+0x252c>
    3ea8:	add	x9, x24, #0x1
    3eac:	cmp	x9, x22
    3eb0:	b.ge	3ec8 <PyInit_binascii@@Base+0x24c4>  // b.tcont
    3eb4:	cmp	w8, #0xd
    3eb8:	b.ne	3ec8 <PyInit_binascii@@Base+0x24c4>  // b.any
    3ebc:	ldrb	w9, [x21, x9]
    3ec0:	cmp	w9, #0xa
    3ec4:	b.eq	3e80 <PyInit_binascii@@Base+0x247c>  // b.none
    3ec8:	add	x24, x24, #0x1
    3ecc:	cmp	x24, x22
    3ed0:	b.ne	3edc <PyInit_binascii@@Base+0x24d8>  // b.any
    3ed4:	mov	w9, #0x1                   	// #1
    3ed8:	b	3f04 <PyInit_binascii@@Base+0x2500>
    3edc:	ldrb	w8, [x21, x24]
    3ee0:	add	w9, w26, #0x1
    3ee4:	cmp	w8, #0xa
    3ee8:	cset	w8, ne  // ne = any
    3eec:	cmp	w9, #0x4b
    3ef0:	cset	w9, hi  // hi = pmore
    3ef4:	tst	w9, w8
    3ef8:	ldr	x8, [sp, #16]
    3efc:	csel	w26, wzr, w26, ne  // ne = any
    3f00:	csinc	x9, x8, xzr, ne  // ne = any
    3f04:	add	w26, w26, #0x1
    3f08:	b	3e40 <PyInit_binascii@@Base+0x243c>
    3f0c:	ldr	w9, [sp, #12]
    3f10:	cbnz	w9, 3e2c <PyInit_binascii@@Base+0x2428>
    3f14:	cmp	w8, #0x9
    3f18:	b.eq	3e74 <PyInit_binascii@@Base+0x2470>  // b.none
    3f1c:	cmp	w8, #0x20
    3f20:	b.eq	3e74 <PyInit_binascii@@Base+0x2470>  // b.none
    3f24:	b	3e2c <PyInit_binascii@@Base+0x2428>
    3f28:	ldur	w11, [x29, #-4]
    3f2c:	mov	x9, xzr
    3f30:	add	x10, x9, #0x2
    3f34:	orr	x9, x9, #0x1
    3f38:	cmp	w11, #0x0
    3f3c:	csel	x9, x9, x10, ne  // ne = any
    3f40:	cmp	w8, #0xd
    3f44:	b.ne	3f54 <PyInit_binascii@@Base+0x2550>  // b.any
    3f48:	mov	w26, wzr
    3f4c:	add	x24, x24, #0x2
    3f50:	b	3e40 <PyInit_binascii@@Base+0x243c>
    3f54:	mov	w26, wzr
    3f58:	b	3e3c <PyInit_binascii@@Base+0x2438>
    3f5c:	mov	x0, x25
    3f60:	bl	1920 <PyMem_Malloc@plt>
    3f64:	cbz	x0, 4208 <PyInit_binascii@@Base+0x2804>
    3f68:	mov	w1, wzr
    3f6c:	mov	x2, x25
    3f70:	mov	x24, x0
    3f74:	bl	17f0 <memset@plt>
    3f78:	cmp	x22, #0x1
    3f7c:	b.lt	4214 <PyInit_binascii@@Base+0x2810>  // b.tstop
    3f80:	ldur	w26, [x29, #-4]
    3f84:	mov	x23, xzr
    3f88:	mov	w28, wzr
    3f8c:	mov	x25, xzr
    3f90:	mov	w27, #0x3d                  	// #61
    3f94:	b	3fd0 <PyInit_binascii@@Base+0x25cc>
    3f98:	mov	w28, wzr
    3f9c:	add	x25, x8, #0x1
    3fa0:	mov	w9, #0xa                   	// #10
    3fa4:	strb	w9, [x24, x8]
    3fa8:	add	x1, x24, x25
    3fac:	strb	w27, [x1], #1
    3fb0:	ldrb	w0, [x21, x23]
    3fb4:	bl	4254 <PyInit_binascii@@Base+0x2850>
    3fb8:	add	x25, x25, #0x3
    3fbc:	add	x8, x23, #0x1
    3fc0:	add	w28, w28, #0x3
    3fc4:	cmp	x8, x22
    3fc8:	mov	x23, x8
    3fcc:	b.ge	4218 <PyInit_binascii@@Base+0x2814>  // b.tcont
    3fd0:	ldrb	w8, [x21, x23]
    3fd4:	cmp	w19, #0x0
    3fd8:	cset	w9, ne  // ne = any
    3fdc:	cmp	w8, #0x5f
    3fe0:	cset	w10, eq  // eq = none
    3fe4:	cmp	w8, #0x7e
    3fe8:	b.hi	407c <PyInit_binascii@@Base+0x2678>  // b.pmore
    3fec:	cmp	w8, #0x3d
    3ff0:	b.eq	407c <PyInit_binascii@@Base+0x2678>  // b.none
    3ff4:	and	w9, w9, w10
    3ff8:	tbnz	w9, #0, 407c <PyInit_binascii@@Base+0x2678>
    3ffc:	cbnz	w28, 4034 <PyInit_binascii@@Base+0x2630>
    4000:	cmp	w8, #0x2e
    4004:	b.ne	4034 <PyInit_binascii@@Base+0x2630>  // b.any
    4008:	add	x9, x23, #0x1
    400c:	cmp	x9, x22
    4010:	b.eq	407c <PyInit_binascii@@Base+0x2678>  // b.none
    4014:	ldrb	w9, [x21, x9]
    4018:	cmp	w9, #0xd
    401c:	b.hi	4034 <PyInit_binascii@@Base+0x2630>  // b.pmore
    4020:	mov	w10, #0x1                   	// #1
    4024:	lsl	w9, w10, w9
    4028:	mov	w10, #0x2401                	// #9217
    402c:	tst	w9, w10
    4030:	b.ne	407c <PyInit_binascii@@Base+0x2678>  // b.any
    4034:	cbz	w20, 404c <PyInit_binascii@@Base+0x2648>
    4038:	cmp	w8, #0x20
    403c:	b.eq	4070 <PyInit_binascii@@Base+0x266c>  // b.none
    4040:	cmp	w8, #0x9
    4044:	b.eq	4070 <PyInit_binascii@@Base+0x266c>  // b.none
    4048:	b	40a8 <PyInit_binascii@@Base+0x26a4>
    404c:	sub	w9, w8, #0x9
    4050:	cmp	w9, #0x17
    4054:	b.hi	40a8 <PyInit_binascii@@Base+0x26a4>  // b.pmore
    4058:	adrp	x12, 4000 <PyInit_binascii@@Base+0x25fc>
    405c:	add	x12, x12, #0x330
    4060:	adr	x10, 4070 <PyInit_binascii@@Base+0x266c>
    4064:	ldrb	w11, [x12, x9]
    4068:	add	x10, x10, x11, lsl #2
    406c:	br	x10
    4070:	add	x9, x23, #0x1
    4074:	cmp	x9, x22
    4078:	b.ne	40a8 <PyInit_binascii@@Base+0x26a4>  // b.any
    407c:	add	w8, w28, #0x3
    4080:	cmp	w8, #0x4c
    4084:	b.cc	3fa8 <PyInit_binascii@@Base+0x25a4>  // b.lo, b.ul, b.last
    4088:	add	x8, x25, #0x1
    408c:	strb	w27, [x24, x25]
    4090:	tbnz	w26, #0, 3f98 <PyInit_binascii@@Base+0x2594>
    4094:	add	x9, x25, #0x2
    4098:	mov	w10, #0xd                   	// #13
    409c:	strb	w10, [x24, x8]
    40a0:	mov	x8, x9
    40a4:	b	3f98 <PyInit_binascii@@Base+0x2594>
    40a8:	cmp	w8, #0x20
    40ac:	b.hi	40c0 <PyInit_binascii@@Base+0x26bc>  // b.pmore
    40b0:	cmp	w8, #0xa
    40b4:	b.eq	40c0 <PyInit_binascii@@Base+0x26bc>  // b.none
    40b8:	cmp	w8, #0xd
    40bc:	b.ne	41dc <PyInit_binascii@@Base+0x27d8>  // b.any
    40c0:	cbz	w20, 4150 <PyInit_binascii@@Base+0x274c>
    40c4:	cmp	w8, #0xa
    40c8:	b.eq	40ec <PyInit_binascii@@Base+0x26e8>  // b.none
    40cc:	add	x9, x23, #0x1
    40d0:	cmp	x9, x22
    40d4:	b.ge	4150 <PyInit_binascii@@Base+0x274c>  // b.tcont
    40d8:	cmp	w8, #0xd
    40dc:	b.ne	4150 <PyInit_binascii@@Base+0x274c>  // b.any
    40e0:	ldrb	w8, [x21, x9]
    40e4:	cmp	w8, #0xa
    40e8:	b.ne	4150 <PyInit_binascii@@Base+0x274c>  // b.any
    40ec:	cbz	x25, 4118 <PyInit_binascii@@Base+0x2714>
    40f0:	sub	x8, x25, #0x1
    40f4:	ldrb	w0, [x24, x8]
    40f8:	cmp	w0, #0x20
    40fc:	b.eq	4108 <PyInit_binascii@@Base+0x2704>  // b.none
    4100:	cmp	w0, #0x9
    4104:	b.ne	4118 <PyInit_binascii@@Base+0x2714>  // b.any
    4108:	add	x1, x24, x25
    410c:	strb	w27, [x24, x8]
    4110:	bl	4254 <PyInit_binascii@@Base+0x2850>
    4114:	add	x25, x25, #0x2
    4118:	tbnz	w26, #0, 412c <PyInit_binascii@@Base+0x2728>
    411c:	add	x8, x25, #0x1
    4120:	mov	w9, #0xd                   	// #13
    4124:	strb	w9, [x24, x25]
    4128:	mov	x25, x8
    412c:	mov	w8, #0xa                   	// #10
    4130:	strb	w8, [x24, x25]
    4134:	ldrb	w8, [x21, x23]
    4138:	add	x25, x25, #0x1
    413c:	mov	w28, wzr
    4140:	cmp	w8, #0xd
    4144:	b.ne	41f8 <PyInit_binascii@@Base+0x27f4>  // b.any
    4148:	add	x8, x23, #0x2
    414c:	b	3fc4 <PyInit_binascii@@Base+0x25c0>
    4150:	add	x8, x23, #0x1
    4154:	cmp	x8, x22
    4158:	b.eq	41a0 <PyInit_binascii@@Base+0x279c>  // b.none
    415c:	add	w9, w28, #0x1
    4160:	cmp	w9, #0x4c
    4164:	b.cc	41a0 <PyInit_binascii@@Base+0x279c>  // b.lo, b.ul, b.last
    4168:	ldrb	w9, [x21, x8]
    416c:	cmp	w9, #0xa
    4170:	b.eq	41a0 <PyInit_binascii@@Base+0x279c>  // b.none
    4174:	add	x9, x25, #0x1
    4178:	strb	w27, [x24, x25]
    417c:	tbnz	w26, #0, 4190 <PyInit_binascii@@Base+0x278c>
    4180:	add	x10, x25, #0x2
    4184:	mov	w11, #0xd                   	// #13
    4188:	strb	w11, [x24, x9]
    418c:	mov	x9, x10
    4190:	mov	w28, wzr
    4194:	add	x25, x9, #0x1
    4198:	mov	w10, #0xa                   	// #10
    419c:	strb	w10, [x24, x9]
    41a0:	add	w28, w28, #0x1
    41a4:	cbz	w19, 41c8 <PyInit_binascii@@Base+0x27c4>
    41a8:	ldrb	w9, [x21, x23]
    41ac:	cmp	w9, #0x20
    41b0:	b.ne	41c8 <PyInit_binascii@@Base+0x27c4>  // b.any
    41b4:	add	x9, x25, #0x1
    41b8:	mov	w10, #0x5f                  	// #95
    41bc:	strb	w10, [x24, x25]
    41c0:	mov	x25, x9
    41c4:	b	3fc4 <PyInit_binascii@@Base+0x25c0>
    41c8:	ldrb	w9, [x21, x23]
    41cc:	add	x10, x25, #0x1
    41d0:	strb	w9, [x24, x25]
    41d4:	mov	x25, x10
    41d8:	b	3fc4 <PyInit_binascii@@Base+0x25c0>
    41dc:	ldr	w9, [sp, #12]
    41e0:	cbnz	w9, 407c <PyInit_binascii@@Base+0x2678>
    41e4:	cmp	w8, #0x9
    41e8:	b.eq	40c0 <PyInit_binascii@@Base+0x26bc>  // b.none
    41ec:	cmp	w8, #0x20
    41f0:	b.eq	40c0 <PyInit_binascii@@Base+0x26bc>  // b.none
    41f4:	b	407c <PyInit_binascii@@Base+0x2678>
    41f8:	add	x8, x23, #0x1
    41fc:	b	3fc4 <PyInit_binascii@@Base+0x25c0>
    4200:	mov	x19, xzr
    4204:	b	4230 <PyInit_binascii@@Base+0x282c>
    4208:	bl	1790 <PyErr_NoMemory@plt>
    420c:	mov	x19, xzr
    4210:	b	4230 <PyInit_binascii@@Base+0x282c>
    4214:	mov	x25, xzr
    4218:	mov	x0, x24
    421c:	mov	x1, x25
    4220:	bl	1770 <PyBytes_FromStringAndSize@plt>
    4224:	mov	x19, x0
    4228:	mov	x0, x24
    422c:	bl	1720 <PyMem_Free@plt>
    4230:	mov	x0, x19
    4234:	ldp	x20, x19, [sp, #112]
    4238:	ldp	x22, x21, [sp, #96]
    423c:	ldp	x24, x23, [sp, #80]
    4240:	ldp	x26, x25, [sp, #64]
    4244:	ldp	x28, x27, [sp, #48]
    4248:	ldp	x29, x30, [sp, #32]
    424c:	add	sp, sp, #0x80
    4250:	ret
    4254:	adrp	x9, 5000 <PyInit_binascii@@Base+0x35fc>
    4258:	and	x8, x0, #0xf
    425c:	add	x9, x9, #0x3db
    4260:	ubfx	x10, x0, #4, #4
    4264:	ldrb	w8, [x9, x8]
    4268:	ldrb	w9, [x9, x10]
    426c:	strb	w8, [x1, #1]
    4270:	strb	w9, [x1]
    4274:	ret
    4278:	stp	x29, x30, [sp, #-32]!
    427c:	stp	x20, x19, [sp, #16]
    4280:	mov	x29, sp
    4284:	mov	x19, x0
    4288:	bl	17e0 <PyModule_GetState@plt>
    428c:	cbz	x0, 4310 <PyInit_binascii@@Base+0x290c>
    4290:	adrp	x8, 15000 <PyInit_binascii@@Base+0x135fc>
    4294:	ldr	x8, [x8, #4032]
    4298:	mov	x20, x0
    429c:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    42a0:	add	x0, x0, #0x3ec
    42a4:	ldr	x1, [x8]
    42a8:	mov	x2, xzr
    42ac:	bl	1820 <PyErr_NewException@plt>
    42b0:	str	x0, [x20]
    42b4:	cbz	x0, 4310 <PyInit_binascii@@Base+0x290c>
    42b8:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    42bc:	mov	x2, x0
    42c0:	add	x1, x1, #0x3f5
    42c4:	mov	x0, x19
    42c8:	bl	18d0 <PyModule_AddObject@plt>
    42cc:	cmn	w0, #0x1
    42d0:	b.eq	4314 <PyInit_binascii@@Base+0x2910>  // b.none
    42d4:	adrp	x0, 5000 <PyInit_binascii@@Base+0x35fc>
    42d8:	add	x0, x0, #0x3fb
    42dc:	mov	x1, xzr
    42e0:	mov	x2, xzr
    42e4:	bl	1820 <PyErr_NewException@plt>
    42e8:	str	x0, [x20, #8]
    42ec:	cbz	x0, 4310 <PyInit_binascii@@Base+0x290c>
    42f0:	adrp	x1, 5000 <PyInit_binascii@@Base+0x35fc>
    42f4:	mov	x2, x0
    42f8:	add	x1, x1, #0x404
    42fc:	mov	x0, x19
    4300:	bl	18d0 <PyModule_AddObject@plt>
    4304:	cmn	w0, #0x1
    4308:	csetm	w0, eq  // eq = none
    430c:	b	4314 <PyInit_binascii@@Base+0x2910>
    4310:	mov	w0, #0xffffffff            	// #-1
    4314:	ldp	x20, x19, [sp, #16]
    4318:	ldp	x29, x30, [sp], #32
    431c:	ret

Disassembly of section .fini:

0000000000004320 <.fini>:
    4320:	stp	x29, x30, [sp, #-16]!
    4324:	mov	x29, sp
    4328:	ldp	x29, x30, [sp], #16
    432c:	ret
