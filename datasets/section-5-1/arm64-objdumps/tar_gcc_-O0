
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//tar_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000403fd0 <.init>:
  403fd0:	stp	x29, x30, [sp, #-16]!
  403fd4:	mov	x29, sp
  403fd8:	bl	404d70 <wcrtomb@plt+0x60>
  403fdc:	ldp	x29, x30, [sp], #16
  403fe0:	ret

Disassembly of section .plt:

0000000000403ff0 <mbrtowc@plt-0x20>:
  403ff0:	stp	x16, x30, [sp, #-16]!
  403ff4:	adrp	x16, 4a9000 <_obstack_memory_used@@Base+0x4bec0>
  403ff8:	ldr	x17, [x16, #4088]
  403ffc:	add	x16, x16, #0xff8
  404000:	br	x17
  404004:	nop
  404008:	nop
  40400c:	nop

0000000000404010 <mbrtowc@plt>:
  404010:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404014:	ldr	x17, [x16]
  404018:	add	x16, x16, #0x0
  40401c:	br	x17

0000000000404020 <memcpy@plt>:
  404020:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404024:	ldr	x17, [x16, #8]
  404028:	add	x16, x16, #0x8
  40402c:	br	x17

0000000000404030 <memmove@plt>:
  404030:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404034:	ldr	x17, [x16, #16]
  404038:	add	x16, x16, #0x10
  40403c:	br	x17

0000000000404040 <ngettext@plt>:
  404040:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404044:	ldr	x17, [x16, #24]
  404048:	add	x16, x16, #0x18
  40404c:	br	x17

0000000000404050 <_exit@plt>:
  404050:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404054:	ldr	x17, [x16, #32]
  404058:	add	x16, x16, #0x20
  40405c:	br	x17

0000000000404060 <getcwd@plt>:
  404060:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404064:	ldr	x17, [x16, #40]
  404068:	add	x16, x16, #0x28
  40406c:	br	x17

0000000000404070 <setuid@plt>:
  404070:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404074:	ldr	x17, [x16, #48]
  404078:	add	x16, x16, #0x30
  40407c:	br	x17

0000000000404080 <strtok@plt>:
  404080:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404084:	ldr	x17, [x16, #56]
  404088:	add	x16, x16, #0x38
  40408c:	br	x17

0000000000404090 <fwrite_unlocked@plt>:
  404090:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404094:	ldr	x17, [x16, #64]
  404098:	add	x16, x16, #0x40
  40409c:	br	x17

00000000004040a0 <strtoul@plt>:
  4040a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4040a4:	ldr	x17, [x16, #72]
  4040a8:	add	x16, x16, #0x48
  4040ac:	br	x17

00000000004040b0 <strlen@plt>:
  4040b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4040b4:	ldr	x17, [x16, #80]
  4040b8:	add	x16, x16, #0x50
  4040bc:	br	x17

00000000004040c0 <fputs@plt>:
  4040c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4040c4:	ldr	x17, [x16, #88]
  4040c8:	add	x16, x16, #0x58
  4040cc:	br	x17

00000000004040d0 <exit@plt>:
  4040d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4040d4:	ldr	x17, [x16, #96]
  4040d8:	add	x16, x16, #0x60
  4040dc:	br	x17

00000000004040e0 <raise@plt>:
  4040e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4040e4:	ldr	x17, [x16, #104]
  4040e8:	add	x16, x16, #0x68
  4040ec:	br	x17

00000000004040f0 <dup@plt>:
  4040f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4040f4:	ldr	x17, [x16, #112]
  4040f8:	add	x16, x16, #0x70
  4040fc:	br	x17

0000000000404100 <error@plt>:
  404100:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404104:	ldr	x17, [x16, #120]
  404108:	add	x16, x16, #0x78
  40410c:	br	x17

0000000000404110 <fchdir@plt>:
  404110:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404114:	ldr	x17, [x16, #128]
  404118:	add	x16, x16, #0x80
  40411c:	br	x17

0000000000404120 <rpmatch@plt>:
  404120:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404124:	ldr	x17, [x16, #136]
  404128:	add	x16, x16, #0x88
  40412c:	br	x17

0000000000404130 <execl@plt>:
  404130:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404134:	ldr	x17, [x16, #144]
  404138:	add	x16, x16, #0x90
  40413c:	br	x17

0000000000404140 <flockfile@plt>:
  404140:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404144:	ldr	x17, [x16, #152]
  404148:	add	x16, x16, #0x98
  40414c:	br	x17

0000000000404150 <strtoimax@plt>:
  404150:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404154:	ldr	x17, [x16, #160]
  404158:	add	x16, x16, #0xa0
  40415c:	br	x17

0000000000404160 <wctype@plt>:
  404160:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404164:	ldr	x17, [x16, #168]
  404168:	add	x16, x16, #0xa8
  40416c:	br	x17

0000000000404170 <sigprocmask@plt>:
  404170:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404174:	ldr	x17, [x16, #176]
  404178:	add	x16, x16, #0xb0
  40417c:	br	x17

0000000000404180 <strnlen@plt>:
  404180:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404184:	ldr	x17, [x16, #184]
  404188:	add	x16, x16, #0xb8
  40418c:	br	x17

0000000000404190 <geteuid@plt>:
  404190:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404194:	ldr	x17, [x16, #192]
  404198:	add	x16, x16, #0xc0
  40419c:	br	x17

00000000004041a0 <linkat@plt>:
  4041a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4041a4:	ldr	x17, [x16, #200]
  4041a8:	add	x16, x16, #0xc8
  4041ac:	br	x17

00000000004041b0 <localtime_r@plt>:
  4041b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4041b4:	ldr	x17, [x16, #208]
  4041b8:	add	x16, x16, #0xd0
  4041bc:	br	x17

00000000004041c0 <setenv@plt>:
  4041c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4041c4:	ldr	x17, [x16, #216]
  4041c8:	add	x16, x16, #0xd8
  4041cc:	br	x17

00000000004041d0 <getgrnam@plt>:
  4041d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4041d4:	ldr	x17, [x16, #224]
  4041d8:	add	x16, x16, #0xe0
  4041dc:	br	x17

00000000004041e0 <ferror_unlocked@plt>:
  4041e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4041e4:	ldr	x17, [x16, #232]
  4041e8:	add	x16, x16, #0xe8
  4041ec:	br	x17

00000000004041f0 <sprintf@plt>:
  4041f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4041f4:	ldr	x17, [x16, #240]
  4041f8:	add	x16, x16, #0xf0
  4041fc:	br	x17

0000000000404200 <getuid@plt>:
  404200:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404204:	ldr	x17, [x16, #248]
  404208:	add	x16, x16, #0xf8
  40420c:	br	x17

0000000000404210 <pipe@plt>:
  404210:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404214:	ldr	x17, [x16, #256]
  404218:	add	x16, x16, #0x100
  40421c:	br	x17

0000000000404220 <opendir@plt>:
  404220:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404224:	ldr	x17, [x16, #264]
  404228:	add	x16, x16, #0x108
  40422c:	br	x17

0000000000404230 <strftime@plt>:
  404230:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404234:	ldr	x17, [x16, #272]
  404238:	add	x16, x16, #0x110
  40423c:	br	x17

0000000000404240 <unlinkat@plt>:
  404240:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404244:	ldr	x17, [x16, #280]
  404248:	add	x16, x16, #0x118
  40424c:	br	x17

0000000000404250 <fputc@plt>:
  404250:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404254:	ldr	x17, [x16, #288]
  404258:	add	x16, x16, #0x120
  40425c:	br	x17

0000000000404260 <iswcntrl@plt>:
  404260:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404264:	ldr	x17, [x16, #296]
  404268:	add	x16, x16, #0x128
  40426c:	br	x17

0000000000404270 <clock_gettime@plt>:
  404270:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404274:	ldr	x17, [x16, #304]
  404278:	add	x16, x16, #0x130
  40427c:	br	x17

0000000000404280 <qsort@plt>:
  404280:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404284:	ldr	x17, [x16, #312]
  404288:	add	x16, x16, #0x138
  40428c:	br	x17

0000000000404290 <pathconf@plt>:
  404290:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404294:	ldr	x17, [x16, #320]
  404298:	add	x16, x16, #0x140
  40429c:	br	x17

00000000004042a0 <fork@plt>:
  4042a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4042a4:	ldr	x17, [x16, #328]
  4042a8:	add	x16, x16, #0x148
  4042ac:	br	x17

00000000004042b0 <lseek@plt>:
  4042b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4042b4:	ldr	x17, [x16, #336]
  4042b8:	add	x16, x16, #0x150
  4042bc:	br	x17

00000000004042c0 <__fpending@plt>:
  4042c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4042c4:	ldr	x17, [x16, #344]
  4042c8:	add	x16, x16, #0x158
  4042cc:	br	x17

00000000004042d0 <__ctype_tolower_loc@plt>:
  4042d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4042d4:	ldr	x17, [x16, #352]
  4042d8:	add	x16, x16, #0x160
  4042dc:	br	x17

00000000004042e0 <snprintf@plt>:
  4042e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4042e4:	ldr	x17, [x16, #360]
  4042e8:	add	x16, x16, #0x168
  4042ec:	br	x17

00000000004042f0 <gnu_dev_makedev@plt>:
  4042f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4042f4:	ldr	x17, [x16, #368]
  4042f8:	add	x16, x16, #0x170
  4042fc:	br	x17

0000000000404300 <localeconv@plt>:
  404300:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404304:	ldr	x17, [x16, #376]
  404308:	add	x16, x16, #0x178
  40430c:	br	x17

0000000000404310 <stpcpy@plt>:
  404310:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404314:	ldr	x17, [x16, #384]
  404318:	add	x16, x16, #0x180
  40431c:	br	x17

0000000000404320 <fileno@plt>:
  404320:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404324:	ldr	x17, [x16, #392]
  404328:	add	x16, x16, #0x188
  40432c:	br	x17

0000000000404330 <putc_unlocked@plt>:
  404330:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404334:	ldr	x17, [x16, #400]
  404338:	add	x16, x16, #0x190
  40433c:	br	x17

0000000000404340 <localtime@plt>:
  404340:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404344:	ldr	x17, [x16, #408]
  404348:	add	x16, x16, #0x198
  40434c:	br	x17

0000000000404350 <mkdirat@plt>:
  404350:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404354:	ldr	x17, [x16, #416]
  404358:	add	x16, x16, #0x1a0
  40435c:	br	x17

0000000000404360 <signal@plt>:
  404360:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404364:	ldr	x17, [x16, #424]
  404368:	add	x16, x16, #0x1a8
  40436c:	br	x17

0000000000404370 <acl_delete_def_file@plt>:
  404370:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404374:	ldr	x17, [x16, #432]
  404378:	add	x16, x16, #0x1b0
  40437c:	br	x17

0000000000404380 <fclose@plt>:
  404380:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404384:	ldr	x17, [x16, #440]
  404388:	add	x16, x16, #0x1b8
  40438c:	br	x17

0000000000404390 <fsync@plt>:
  404390:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404394:	ldr	x17, [x16, #448]
  404398:	add	x16, x16, #0x1c0
  40439c:	br	x17

00000000004043a0 <atoi@plt>:
  4043a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4043a4:	ldr	x17, [x16, #456]
  4043a8:	add	x16, x16, #0x1c8
  4043ac:	br	x17

00000000004043b0 <getpid@plt>:
  4043b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4043b4:	ldr	x17, [x16, #464]
  4043b8:	add	x16, x16, #0x1d0
  4043bc:	br	x17

00000000004043c0 <nl_langinfo@plt>:
  4043c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4043c4:	ldr	x17, [x16, #472]
  4043c8:	add	x16, x16, #0x1d8
  4043cc:	br	x17

00000000004043d0 <fopen@plt>:
  4043d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4043d4:	ldr	x17, [x16, #480]
  4043d8:	add	x16, x16, #0x1e0
  4043dc:	br	x17

00000000004043e0 <iswctype@plt>:
  4043e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4043e4:	ldr	x17, [x16, #488]
  4043e8:	add	x16, x16, #0x1e8
  4043ec:	br	x17

00000000004043f0 <malloc@plt>:
  4043f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4043f4:	ldr	x17, [x16, #496]
  4043f8:	add	x16, x16, #0x1f0
  4043fc:	br	x17

0000000000404400 <toupper@plt>:
  404400:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404404:	ldr	x17, [x16, #504]
  404408:	add	x16, x16, #0x1f8
  40440c:	br	x17

0000000000404410 <wcwidth@plt>:
  404410:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404414:	ldr	x17, [x16, #512]
  404418:	add	x16, x16, #0x200
  40441c:	br	x17

0000000000404420 <funlockfile@plt>:
  404420:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404424:	ldr	x17, [x16, #520]
  404428:	add	x16, x16, #0x208
  40442c:	br	x17

0000000000404430 <open@plt>:
  404430:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404434:	ldr	x17, [x16, #528]
  404438:	add	x16, x16, #0x210
  40443c:	br	x17

0000000000404440 <tzset@plt>:
  404440:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404444:	ldr	x17, [x16, #536]
  404448:	add	x16, x16, #0x218
  40444c:	br	x17

0000000000404450 <__isoc99_fscanf@plt>:
  404450:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404454:	ldr	x17, [x16, #544]
  404458:	add	x16, x16, #0x220
  40445c:	br	x17

0000000000404460 <sigemptyset@plt>:
  404460:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404464:	ldr	x17, [x16, #552]
  404468:	add	x16, x16, #0x228
  40446c:	br	x17

0000000000404470 <futimens@plt>:
  404470:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404474:	ldr	x17, [x16, #560]
  404478:	add	x16, x16, #0x230
  40447c:	br	x17

0000000000404480 <strncmp@plt>:
  404480:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404484:	ldr	x17, [x16, #568]
  404488:	add	x16, x16, #0x238
  40448c:	br	x17

0000000000404490 <bindtextdomain@plt>:
  404490:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404494:	ldr	x17, [x16, #576]
  404498:	add	x16, x16, #0x240
  40449c:	br	x17

00000000004044a0 <__libc_start_main@plt>:
  4044a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4044a4:	ldr	x17, [x16, #584]
  4044a8:	add	x16, x16, #0x248
  4044ac:	br	x17

00000000004044b0 <setxattr@plt>:
  4044b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4044b4:	ldr	x17, [x16, #592]
  4044b8:	add	x16, x16, #0x250
  4044bc:	br	x17

00000000004044c0 <strcat@plt>:
  4044c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4044c4:	ldr	x17, [x16, #600]
  4044c8:	add	x16, x16, #0x258
  4044cc:	br	x17

00000000004044d0 <memset@plt>:
  4044d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4044d4:	ldr	x17, [x16, #608]
  4044d8:	add	x16, x16, #0x260
  4044dc:	br	x17

00000000004044e0 <fdopen@plt>:
  4044e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4044e4:	ldr	x17, [x16, #616]
  4044e8:	add	x16, x16, #0x268
  4044ec:	br	x17

00000000004044f0 <gettimeofday@plt>:
  4044f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4044f4:	ldr	x17, [x16, #624]
  4044f8:	add	x16, x16, #0x270
  4044fc:	br	x17

0000000000404500 <getpwnam@plt>:
  404500:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404504:	ldr	x17, [x16, #632]
  404508:	add	x16, x16, #0x278
  40450c:	br	x17

0000000000404510 <gmtime_r@plt>:
  404510:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404514:	ldr	x17, [x16, #640]
  404518:	add	x16, x16, #0x280
  40451c:	br	x17

0000000000404520 <sleep@plt>:
  404520:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404524:	ldr	x17, [x16, #648]
  404528:	add	x16, x16, #0x288
  40452c:	br	x17

0000000000404530 <fchmod@plt>:
  404530:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404534:	ldr	x17, [x16, #656]
  404538:	add	x16, x16, #0x290
  40453c:	br	x17

0000000000404540 <__xmknodat@plt>:
  404540:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404544:	ldr	x17, [x16, #664]
  404548:	add	x16, x16, #0x298
  40454c:	br	x17

0000000000404550 <strerror_r@plt>:
  404550:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404554:	ldr	x17, [x16, #672]
  404558:	add	x16, x16, #0x2a0
  40455c:	br	x17

0000000000404560 <calloc@plt>:
  404560:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404564:	ldr	x17, [x16, #680]
  404568:	add	x16, x16, #0x2a8
  40456c:	br	x17

0000000000404570 <lsetxattr@plt>:
  404570:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404574:	ldr	x17, [x16, #688]
  404578:	add	x16, x16, #0x2b0
  40457c:	br	x17

0000000000404580 <listxattr@plt>:
  404580:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404584:	ldr	x17, [x16, #696]
  404588:	add	x16, x16, #0x2b8
  40458c:	br	x17

0000000000404590 <bsearch@plt>:
  404590:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404594:	ldr	x17, [x16, #704]
  404598:	add	x16, x16, #0x2c0
  40459c:	br	x17

00000000004045a0 <execv@plt>:
  4045a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4045a4:	ldr	x17, [x16, #712]
  4045a8:	add	x16, x16, #0x2c8
  4045ac:	br	x17

00000000004045b0 <strcasecmp@plt>:
  4045b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4045b4:	ldr	x17, [x16, #720]
  4045b8:	add	x16, x16, #0x2d0
  4045bc:	br	x17

00000000004045c0 <gmtime@plt>:
  4045c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4045c4:	ldr	x17, [x16, #728]
  4045c8:	add	x16, x16, #0x2d8
  4045cc:	br	x17

00000000004045d0 <readdir@plt>:
  4045d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4045d4:	ldr	x17, [x16, #736]
  4045d8:	add	x16, x16, #0x2e0
  4045dc:	br	x17

00000000004045e0 <realloc@plt>:
  4045e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4045e4:	ldr	x17, [x16, #744]
  4045e8:	add	x16, x16, #0x2e8
  4045ec:	br	x17

00000000004045f0 <acl_set_file@plt>:
  4045f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4045f4:	ldr	x17, [x16, #752]
  4045f8:	add	x16, x16, #0x2f0
  4045fc:	br	x17

0000000000404600 <getpagesize@plt>:
  404600:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404604:	ldr	x17, [x16, #760]
  404608:	add	x16, x16, #0x2f8
  40460c:	br	x17

0000000000404610 <lgetxattr@plt>:
  404610:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404614:	ldr	x17, [x16, #768]
  404618:	add	x16, x16, #0x300
  40461c:	br	x17

0000000000404620 <strdup@plt>:
  404620:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404624:	ldr	x17, [x16, #776]
  404628:	add	x16, x16, #0x308
  40462c:	br	x17

0000000000404630 <closedir@plt>:
  404630:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404634:	ldr	x17, [x16, #784]
  404638:	add	x16, x16, #0x310
  40463c:	br	x17

0000000000404640 <getc_unlocked@plt>:
  404640:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404644:	ldr	x17, [x16, #792]
  404648:	add	x16, x16, #0x318
  40464c:	br	x17

0000000000404650 <strerror@plt>:
  404650:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404654:	ldr	x17, [x16, #800]
  404658:	add	x16, x16, #0x320
  40465c:	br	x17

0000000000404660 <close@plt>:
  404660:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404664:	ldr	x17, [x16, #808]
  404668:	add	x16, x16, #0x328
  40466c:	br	x17

0000000000404670 <strrchr@plt>:
  404670:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404674:	ldr	x17, [x16, #816]
  404678:	add	x16, x16, #0x330
  40467c:	br	x17

0000000000404680 <acl_to_text@plt>:
  404680:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404684:	ldr	x17, [x16, #824]
  404688:	add	x16, x16, #0x338
  40468c:	br	x17

0000000000404690 <atol@plt>:
  404690:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404694:	ldr	x17, [x16, #832]
  404698:	add	x16, x16, #0x340
  40469c:	br	x17

00000000004046a0 <__gmon_start__@plt>:
  4046a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4046a4:	ldr	x17, [x16, #840]
  4046a8:	add	x16, x16, #0x348
  4046ac:	br	x17

00000000004046b0 <mktime@plt>:
  4046b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4046b4:	ldr	x17, [x16, #848]
  4046b8:	add	x16, x16, #0x350
  4046bc:	br	x17

00000000004046c0 <fdopendir@plt>:
  4046c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4046c4:	ldr	x17, [x16, #856]
  4046c8:	add	x16, x16, #0x358
  4046cc:	br	x17

00000000004046d0 <write@plt>:
  4046d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4046d4:	ldr	x17, [x16, #864]
  4046d8:	add	x16, x16, #0x360
  4046dc:	br	x17

00000000004046e0 <strtoumax@plt>:
  4046e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4046e4:	ldr	x17, [x16, #872]
  4046e8:	add	x16, x16, #0x368
  4046ec:	br	x17

00000000004046f0 <btowc@plt>:
  4046f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4046f4:	ldr	x17, [x16, #880]
  4046f8:	add	x16, x16, #0x370
  4046fc:	br	x17

0000000000404700 <mkdtemp@plt>:
  404700:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404704:	ldr	x17, [x16, #888]
  404708:	add	x16, x16, #0x378
  40470c:	br	x17

0000000000404710 <abort@plt>:
  404710:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404714:	ldr	x17, [x16, #896]
  404718:	add	x16, x16, #0x380
  40471c:	br	x17

0000000000404720 <setgid@plt>:
  404720:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404724:	ldr	x17, [x16, #904]
  404728:	add	x16, x16, #0x388
  40472c:	br	x17

0000000000404730 <mbsinit@plt>:
  404730:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404734:	ldr	x17, [x16, #912]
  404738:	add	x16, x16, #0x390
  40473c:	br	x17

0000000000404740 <access@plt>:
  404740:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404744:	ldr	x17, [x16, #920]
  404748:	add	x16, x16, #0x398
  40474c:	br	x17

0000000000404750 <gnu_dev_major@plt>:
  404750:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404754:	ldr	x17, [x16, #928]
  404758:	add	x16, x16, #0x3a0
  40475c:	br	x17

0000000000404760 <fpathconf@plt>:
  404760:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404764:	ldr	x17, [x16, #936]
  404768:	add	x16, x16, #0x3a8
  40476c:	br	x17

0000000000404770 <puts@plt>:
  404770:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404774:	ldr	x17, [x16, #944]
  404778:	add	x16, x16, #0x3b0
  40477c:	br	x17

0000000000404780 <getxattr@plt>:
  404780:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404784:	ldr	x17, [x16, #952]
  404788:	add	x16, x16, #0x3b8
  40478c:	br	x17

0000000000404790 <memcmp@plt>:
  404790:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404794:	ldr	x17, [x16, #960]
  404798:	add	x16, x16, #0x3c0
  40479c:	br	x17

00000000004047a0 <textdomain@plt>:
  4047a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4047a4:	ldr	x17, [x16, #968]
  4047a8:	add	x16, x16, #0x3c8
  4047ac:	br	x17

00000000004047b0 <execvp@plt>:
  4047b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4047b4:	ldr	x17, [x16, #976]
  4047b8:	add	x16, x16, #0x3d0
  4047bc:	br	x17

00000000004047c0 <strcmp@plt>:
  4047c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4047c4:	ldr	x17, [x16, #984]
  4047c8:	add	x16, x16, #0x3d8
  4047cc:	br	x17

00000000004047d0 <getpwuid@plt>:
  4047d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4047d4:	ldr	x17, [x16, #992]
  4047d8:	add	x16, x16, #0x3e0
  4047dc:	br	x17

00000000004047e0 <iconv@plt>:
  4047e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4047e4:	ldr	x17, [x16, #1000]
  4047e8:	add	x16, x16, #0x3e8
  4047ec:	br	x17

00000000004047f0 <__ctype_b_loc@plt>:
  4047f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4047f4:	ldr	x17, [x16, #1008]
  4047f8:	add	x16, x16, #0x3f0
  4047fc:	br	x17

0000000000404800 <rewinddir@plt>:
  404800:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404804:	ldr	x17, [x16, #1016]
  404808:	add	x16, x16, #0x3f8
  40480c:	br	x17

0000000000404810 <acl_get_file@plt>:
  404810:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404814:	ldr	x17, [x16, #1024]
  404818:	add	x16, x16, #0x400
  40481c:	br	x17

0000000000404820 <strtol@plt>:
  404820:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404824:	ldr	x17, [x16, #1032]
  404828:	add	x16, x16, #0x408
  40482c:	br	x17

0000000000404830 <fseeko@plt>:
  404830:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404834:	ldr	x17, [x16, #1040]
  404838:	add	x16, x16, #0x410
  40483c:	br	x17

0000000000404840 <getline@plt>:
  404840:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404844:	ldr	x17, [x16, #1048]
  404848:	add	x16, x16, #0x418
  40484c:	br	x17

0000000000404850 <sigwait@plt>:
  404850:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404854:	ldr	x17, [x16, #1056]
  404858:	add	x16, x16, #0x420
  40485c:	br	x17

0000000000404860 <chdir@plt>:
  404860:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404864:	ldr	x17, [x16, #1064]
  404868:	add	x16, x16, #0x428
  40486c:	br	x17

0000000000404870 <dgettext@plt>:
  404870:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404874:	ldr	x17, [x16, #1072]
  404878:	add	x16, x16, #0x430
  40487c:	br	x17

0000000000404880 <free@plt>:
  404880:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404884:	ldr	x17, [x16, #1080]
  404888:	add	x16, x16, #0x438
  40488c:	br	x17

0000000000404890 <renameat2@plt>:
  404890:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404894:	ldr	x17, [x16, #1088]
  404898:	add	x16, x16, #0x440
  40489c:	br	x17

00000000004048a0 <__ctype_get_mb_cur_max@plt>:
  4048a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4048a4:	ldr	x17, [x16, #1096]
  4048a8:	add	x16, x16, #0x448
  4048ac:	br	x17

00000000004048b0 <getgid@plt>:
  4048b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4048b4:	ldr	x17, [x16, #1104]
  4048b8:	add	x16, x16, #0x450
  4048bc:	br	x17

00000000004048c0 <renameat@plt>:
  4048c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4048c4:	ldr	x17, [x16, #1112]
  4048c8:	add	x16, x16, #0x458
  4048cc:	br	x17

00000000004048d0 <mempcpy@plt>:
  4048d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4048d4:	ldr	x17, [x16, #1120]
  4048d8:	add	x16, x16, #0x460
  4048dc:	br	x17

00000000004048e0 <fgetxattr@plt>:
  4048e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4048e4:	ldr	x17, [x16, #1128]
  4048e8:	add	x16, x16, #0x468
  4048ec:	br	x17

00000000004048f0 <vasprintf@plt>:
  4048f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4048f4:	ldr	x17, [x16, #1136]
  4048f8:	add	x16, x16, #0x470
  4048fc:	br	x17

0000000000404900 <fchownat@plt>:
  404900:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404904:	ldr	x17, [x16, #1144]
  404908:	add	x16, x16, #0x478
  40490c:	br	x17

0000000000404910 <strndup@plt>:
  404910:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404914:	ldr	x17, [x16, #1152]
  404918:	add	x16, x16, #0x480
  40491c:	br	x17

0000000000404920 <strspn@plt>:
  404920:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404924:	ldr	x17, [x16, #1160]
  404928:	add	x16, x16, #0x488
  40492c:	br	x17

0000000000404930 <strchr@plt>:
  404930:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404934:	ldr	x17, [x16, #1168]
  404938:	add	x16, x16, #0x490
  40493c:	br	x17

0000000000404940 <globfree@plt>:
  404940:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404944:	ldr	x17, [x16, #1176]
  404948:	add	x16, x16, #0x498
  40494c:	br	x17

0000000000404950 <memrchr@plt>:
  404950:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404954:	ldr	x17, [x16, #1184]
  404958:	add	x16, x16, #0x4a0
  40495c:	br	x17

0000000000404960 <utimensat@plt>:
  404960:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404964:	ldr	x17, [x16, #1192]
  404968:	add	x16, x16, #0x4a8
  40496c:	br	x17

0000000000404970 <fwrite@plt>:
  404970:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404974:	ldr	x17, [x16, #1200]
  404978:	add	x16, x16, #0x4b0
  40497c:	br	x17

0000000000404980 <fnmatch@plt>:
  404980:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404984:	ldr	x17, [x16, #1208]
  404988:	add	x16, x16, #0x4b8
  40498c:	br	x17

0000000000404990 <fflush_unlocked@plt>:
  404990:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404994:	ldr	x17, [x16, #1216]
  404998:	add	x16, x16, #0x4c0
  40499c:	br	x17

00000000004049a0 <fcntl@plt>:
  4049a0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4049a4:	ldr	x17, [x16, #1224]
  4049a8:	add	x16, x16, #0x4c8
  4049ac:	br	x17

00000000004049b0 <ftello@plt>:
  4049b0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4049b4:	ldr	x17, [x16, #1232]
  4049b8:	add	x16, x16, #0x4d0
  4049bc:	br	x17

00000000004049c0 <gnu_dev_minor@plt>:
  4049c0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4049c4:	ldr	x17, [x16, #1240]
  4049c8:	add	x16, x16, #0x4d8
  4049cc:	br	x17

00000000004049d0 <strcpy@plt>:
  4049d0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4049d4:	ldr	x17, [x16, #1248]
  4049d8:	add	x16, x16, #0x4e0
  4049dc:	br	x17

00000000004049e0 <dirfd@plt>:
  4049e0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4049e4:	ldr	x17, [x16, #1256]
  4049e8:	add	x16, x16, #0x4e8
  4049ec:	br	x17

00000000004049f0 <unsetenv@plt>:
  4049f0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  4049f4:	ldr	x17, [x16, #1264]
  4049f8:	add	x16, x16, #0x4f0
  4049fc:	br	x17

0000000000404a00 <iconv_open@plt>:
  404a00:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a04:	ldr	x17, [x16, #1272]
  404a08:	add	x16, x16, #0x4f8
  404a0c:	br	x17

0000000000404a10 <read@plt>:
  404a10:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a14:	ldr	x17, [x16, #1280]
  404a18:	add	x16, x16, #0x500
  404a1c:	br	x17

0000000000404a20 <memchr@plt>:
  404a20:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a24:	ldr	x17, [x16, #1288]
  404a28:	add	x16, x16, #0x508
  404a2c:	br	x17

0000000000404a30 <isatty@plt>:
  404a30:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a34:	ldr	x17, [x16, #1296]
  404a38:	add	x16, x16, #0x510
  404a3c:	br	x17

0000000000404a40 <fputc_unlocked@plt>:
  404a40:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a44:	ldr	x17, [x16, #1304]
  404a48:	add	x16, x16, #0x518
  404a4c:	br	x17

0000000000404a50 <flistxattr@plt>:
  404a50:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a54:	ldr	x17, [x16, #1312]
  404a58:	add	x16, x16, #0x520
  404a5c:	br	x17

0000000000404a60 <iswalnum@plt>:
  404a60:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a64:	ldr	x17, [x16, #1320]
  404a68:	add	x16, x16, #0x528
  404a6c:	br	x17

0000000000404a70 <__fxstat@plt>:
  404a70:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a74:	ldr	x17, [x16, #1328]
  404a78:	add	x16, x16, #0x530
  404a7c:	br	x17

0000000000404a80 <strchrnul@plt>:
  404a80:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a84:	ldr	x17, [x16, #1336]
  404a88:	add	x16, x16, #0x538
  404a8c:	br	x17

0000000000404a90 <vsnprintf@plt>:
  404a90:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404a94:	ldr	x17, [x16, #1344]
  404a98:	add	x16, x16, #0x540
  404a9c:	br	x17

0000000000404aa0 <mkfifoat@plt>:
  404aa0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404aa4:	ldr	x17, [x16, #1352]
  404aa8:	add	x16, x16, #0x548
  404aac:	br	x17

0000000000404ab0 <fputs_unlocked@plt>:
  404ab0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ab4:	ldr	x17, [x16, #1360]
  404ab8:	add	x16, x16, #0x550
  404abc:	br	x17

0000000000404ac0 <acl_from_text@plt>:
  404ac0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ac4:	ldr	x17, [x16, #1368]
  404ac8:	add	x16, x16, #0x558
  404acc:	br	x17

0000000000404ad0 <glob@plt>:
  404ad0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ad4:	ldr	x17, [x16, #1376]
  404ad8:	add	x16, x16, #0x560
  404adc:	br	x17

0000000000404ae0 <ftruncate@plt>:
  404ae0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ae4:	ldr	x17, [x16, #1384]
  404ae8:	add	x16, x16, #0x568
  404aec:	br	x17

0000000000404af0 <llistxattr@plt>:
  404af0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404af4:	ldr	x17, [x16, #1392]
  404af8:	add	x16, x16, #0x570
  404afc:	br	x17

0000000000404b00 <dup2@plt>:
  404b00:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b04:	ldr	x17, [x16, #1400]
  404b08:	add	x16, x16, #0x578
  404b0c:	br	x17

0000000000404b10 <symlinkat@plt>:
  404b10:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b14:	ldr	x17, [x16, #1408]
  404b18:	add	x16, x16, #0x580
  404b1c:	br	x17

0000000000404b20 <sigaddset@plt>:
  404b20:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b24:	ldr	x17, [x16, #1416]
  404b28:	add	x16, x16, #0x588
  404b2c:	br	x17

0000000000404b30 <towupper@plt>:
  404b30:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b34:	ldr	x17, [x16, #1424]
  404b38:	add	x16, x16, #0x590
  404b3c:	br	x17

0000000000404b40 <iswprint@plt>:
  404b40:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #1432]
  404b48:	add	x16, x16, #0x598
  404b4c:	br	x17

0000000000404b50 <umask@plt>:
  404b50:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #1440]
  404b58:	add	x16, x16, #0x5a0
  404b5c:	br	x17

0000000000404b60 <strcspn@plt>:
  404b60:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #1448]
  404b68:	add	x16, x16, #0x5a8
  404b6c:	br	x17

0000000000404b70 <faccessat@plt>:
  404b70:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #1456]
  404b78:	add	x16, x16, #0x5b0
  404b7c:	br	x17

0000000000404b80 <vfprintf@plt>:
  404b80:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #1464]
  404b88:	add	x16, x16, #0x5b8
  404b8c:	br	x17

0000000000404b90 <openat@plt>:
  404b90:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #1472]
  404b98:	add	x16, x16, #0x5c0
  404b9c:	br	x17

0000000000404ba0 <printf@plt>:
  404ba0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #1480]
  404ba8:	add	x16, x16, #0x5c8
  404bac:	br	x17

0000000000404bb0 <__assert_fail@plt>:
  404bb0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #1488]
  404bb8:	add	x16, x16, #0x5d0
  404bbc:	br	x17

0000000000404bc0 <__errno_location@plt>:
  404bc0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #1496]
  404bc8:	add	x16, x16, #0x5d8
  404bcc:	br	x17

0000000000404bd0 <tolower@plt>:
  404bd0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #1504]
  404bd8:	add	x16, x16, #0x5e0
  404bdc:	br	x17

0000000000404be0 <execlp@plt>:
  404be0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #1512]
  404be8:	add	x16, x16, #0x5e8
  404bec:	br	x17

0000000000404bf0 <getenv@plt>:
  404bf0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #1520]
  404bf8:	add	x16, x16, #0x5f0
  404bfc:	br	x17

0000000000404c00 <putchar@plt>:
  404c00:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #1528]
  404c08:	add	x16, x16, #0x5f8
  404c0c:	br	x17

0000000000404c10 <__xstat@plt>:
  404c10:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #1536]
  404c18:	add	x16, x16, #0x600
  404c1c:	br	x17

0000000000404c20 <getgrgid@plt>:
  404c20:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #1544]
  404c28:	add	x16, x16, #0x608
  404c2c:	br	x17

0000000000404c30 <fchmodat@plt>:
  404c30:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #1552]
  404c38:	add	x16, x16, #0x610
  404c3c:	br	x17

0000000000404c40 <timegm@plt>:
  404c40:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #1560]
  404c48:	add	x16, x16, #0x618
  404c4c:	br	x17

0000000000404c50 <waitpid@plt>:
  404c50:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #1568]
  404c58:	add	x16, x16, #0x620
  404c5c:	br	x17

0000000000404c60 <gettext@plt>:
  404c60:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #1576]
  404c68:	add	x16, x16, #0x628
  404c6c:	br	x17

0000000000404c70 <fchown@plt>:
  404c70:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #1584]
  404c78:	add	x16, x16, #0x630
  404c7c:	br	x17

0000000000404c80 <towlower@plt>:
  404c80:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #1592]
  404c88:	add	x16, x16, #0x638
  404c8c:	br	x17

0000000000404c90 <fprintf@plt>:
  404c90:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #1600]
  404c98:	add	x16, x16, #0x640
  404c9c:	br	x17

0000000000404ca0 <creat@plt>:
  404ca0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #1608]
  404ca8:	add	x16, x16, #0x648
  404cac:	br	x17

0000000000404cb0 <gethostbyname@plt>:
  404cb0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #1616]
  404cb8:	add	x16, x16, #0x650
  404cbc:	br	x17

0000000000404cc0 <ioctl@plt>:
  404cc0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #1624]
  404cc8:	add	x16, x16, #0x658
  404ccc:	br	x17

0000000000404cd0 <setlocale@plt>:
  404cd0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #1632]
  404cd8:	add	x16, x16, #0x660
  404cdc:	br	x17

0000000000404ce0 <acl_free@plt>:
  404ce0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #1640]
  404ce8:	add	x16, x16, #0x668
  404cec:	br	x17

0000000000404cf0 <__fxstatat@plt>:
  404cf0:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #1648]
  404cf8:	add	x16, x16, #0x670
  404cfc:	br	x17

0000000000404d00 <readlinkat@plt>:
  404d00:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #1656]
  404d08:	add	x16, x16, #0x678
  404d0c:	br	x17

0000000000404d10 <wcrtomb@plt>:
  404d10:	adrp	x16, 4aa000 <mbrtowc@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #1664]
  404d18:	add	x16, x16, #0x680
  404d1c:	br	x17

Disassembly of section .text:

0000000000404d20 <argp_help@@Base-0x423f4>:
  404d20:	mov	x29, #0x0                   	// #0
  404d24:	mov	x30, #0x0                   	// #0
  404d28:	mov	x5, x0
  404d2c:	ldr	x1, [sp]
  404d30:	add	x2, sp, #0x8
  404d34:	mov	x6, sp
  404d38:	movz	x0, #0x0, lsl #48
  404d3c:	movk	x0, #0x0, lsl #32
  404d40:	movk	x0, #0x43, lsl #16
  404d44:	movk	x0, #0x4ad0
  404d48:	movz	x3, #0x0, lsl #48
  404d4c:	movk	x3, #0x0, lsl #32
  404d50:	movk	x3, #0x47, lsl #16
  404d54:	movk	x3, #0xebd8
  404d58:	movz	x4, #0x0, lsl #48
  404d5c:	movk	x4, #0x0, lsl #32
  404d60:	movk	x4, #0x47, lsl #16
  404d64:	movk	x4, #0xec58
  404d68:	bl	4044a0 <__libc_start_main@plt>
  404d6c:	bl	404710 <abort@plt>
  404d70:	adrp	x0, 4a9000 <_obstack_memory_used@@Base+0x4bec0>
  404d74:	ldr	x0, [x0, #4064]
  404d78:	cbz	x0, 404d80 <wcrtomb@plt+0x70>
  404d7c:	b	4046a0 <__gmon_start__@plt>
  404d80:	ret
  404d84:	stp	x29, x30, [sp, #-32]!
  404d88:	mov	x29, sp
  404d8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404d90:	add	x0, x0, #0x490
  404d94:	str	x0, [sp, #24]
  404d98:	ldr	x0, [sp, #24]
  404d9c:	str	x0, [sp, #24]
  404da0:	ldr	x1, [sp, #24]
  404da4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404da8:	add	x0, x0, #0x490
  404dac:	cmp	x1, x0
  404db0:	b.eq	404dec <wcrtomb@plt+0xdc>  // b.none
  404db4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  404db8:	add	x0, x0, #0xcf8
  404dbc:	ldr	x0, [x0]
  404dc0:	str	x0, [sp, #16]
  404dc4:	ldr	x0, [sp, #16]
  404dc8:	str	x0, [sp, #16]
  404dcc:	ldr	x0, [sp, #16]
  404dd0:	cmp	x0, #0x0
  404dd4:	b.eq	404df0 <wcrtomb@plt+0xe0>  // b.none
  404dd8:	ldr	x1, [sp, #16]
  404ddc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404de0:	add	x0, x0, #0x490
  404de4:	blr	x1
  404de8:	b	404df0 <wcrtomb@plt+0xe0>
  404dec:	nop
  404df0:	ldp	x29, x30, [sp], #32
  404df4:	ret
  404df8:	stp	x29, x30, [sp, #-48]!
  404dfc:	mov	x29, sp
  404e00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404e04:	add	x0, x0, #0x490
  404e08:	str	x0, [sp, #40]
  404e0c:	ldr	x0, [sp, #40]
  404e10:	str	x0, [sp, #40]
  404e14:	ldr	x1, [sp, #40]
  404e18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404e1c:	add	x0, x0, #0x490
  404e20:	sub	x0, x1, x0
  404e24:	asr	x0, x0, #3
  404e28:	lsr	x1, x0, #63
  404e2c:	add	x0, x1, x0
  404e30:	asr	x0, x0, #1
  404e34:	str	x0, [sp, #32]
  404e38:	ldr	x0, [sp, #32]
  404e3c:	cmp	x0, #0x0
  404e40:	b.eq	404e80 <wcrtomb@plt+0x170>  // b.none
  404e44:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  404e48:	add	x0, x0, #0xd00
  404e4c:	ldr	x0, [x0]
  404e50:	str	x0, [sp, #24]
  404e54:	ldr	x0, [sp, #24]
  404e58:	str	x0, [sp, #24]
  404e5c:	ldr	x0, [sp, #24]
  404e60:	cmp	x0, #0x0
  404e64:	b.eq	404e84 <wcrtomb@plt+0x174>  // b.none
  404e68:	ldr	x2, [sp, #24]
  404e6c:	ldr	x1, [sp, #32]
  404e70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404e74:	add	x0, x0, #0x490
  404e78:	blr	x2
  404e7c:	b	404e84 <wcrtomb@plt+0x174>
  404e80:	nop
  404e84:	ldp	x29, x30, [sp], #48
  404e88:	ret
  404e8c:	stp	x29, x30, [sp, #-16]!
  404e90:	mov	x29, sp
  404e94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404e98:	add	x0, x0, #0x4c0
  404e9c:	ldrb	w0, [x0]
  404ea0:	and	x0, x0, #0xff
  404ea4:	cmp	x0, #0x0
  404ea8:	b.ne	404ec4 <wcrtomb@plt+0x1b4>  // b.any
  404eac:	bl	404d84 <wcrtomb@plt+0x74>
  404eb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404eb4:	add	x0, x0, #0x4c0
  404eb8:	mov	w1, #0x1                   	// #1
  404ebc:	strb	w1, [x0]
  404ec0:	b	404ec8 <wcrtomb@plt+0x1b8>
  404ec4:	nop
  404ec8:	ldp	x29, x30, [sp], #16
  404ecc:	ret
  404ed0:	stp	x29, x30, [sp, #-16]!
  404ed4:	mov	x29, sp
  404ed8:	bl	404df8 <wcrtomb@plt+0xe8>
  404edc:	nop
  404ee0:	ldp	x29, x30, [sp], #16
  404ee4:	ret
  404ee8:	stp	x29, x30, [sp, #-64]!
  404eec:	mov	x29, sp
  404ef0:	str	x0, [sp, #40]
  404ef4:	str	x1, [sp, #32]
  404ef8:	str	x2, [sp, #24]
  404efc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  404f00:	add	x0, x0, #0x7c
  404f04:	ldrb	w0, [x0]
  404f08:	cmp	w0, #0x0
  404f0c:	b.eq	404fd0 <wcrtomb@plt+0x2c0>  // b.none
  404f10:	mov	x0, #0x30                  	// #48
  404f14:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  404f18:	str	x0, [sp, #56]
  404f1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404f20:	add	x0, x0, #0x530
  404f24:	ldr	x0, [x0]
  404f28:	cmp	x0, #0x0
  404f2c:	b.eq	404f48 <wcrtomb@plt+0x238>  // b.none
  404f30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404f34:	add	x0, x0, #0x530
  404f38:	ldr	x0, [x0]
  404f3c:	ldr	x1, [sp, #56]
  404f40:	str	x1, [x0]
  404f44:	b	404f58 <wcrtomb@plt+0x248>
  404f48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404f4c:	add	x0, x0, #0x528
  404f50:	ldr	x1, [sp, #56]
  404f54:	str	x1, [x0]
  404f58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404f5c:	add	x0, x0, #0x530
  404f60:	ldr	x1, [sp, #56]
  404f64:	str	x1, [x0]
  404f68:	ldr	x0, [sp, #56]
  404f6c:	str	xzr, [x0]
  404f70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404f74:	add	x0, x0, #0xfd8
  404f78:	ldr	x1, [x0]
  404f7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404f80:	add	x0, x0, #0xfc0
  404f84:	ldr	x0, [x0]
  404f88:	sub	x0, x1, x0
  404f8c:	asr	x0, x0, #9
  404f90:	mov	x1, x0
  404f94:	ldr	x0, [sp, #56]
  404f98:	str	x1, [x0, #8]
  404f9c:	ldr	x0, [sp, #40]
  404fa0:	bl	45b858 <argp_usage@@Base+0x1276c>
  404fa4:	mov	x1, x0
  404fa8:	ldr	x0, [sp, #56]
  404fac:	str	x1, [x0, #16]
  404fb0:	ldr	x0, [sp, #56]
  404fb4:	ldr	x1, [sp, #32]
  404fb8:	str	x1, [x0, #24]
  404fbc:	ldr	x0, [sp, #56]
  404fc0:	ldr	x1, [sp, #24]
  404fc4:	str	x1, [x0, #32]
  404fc8:	ldr	x0, [sp, #56]
  404fcc:	str	xzr, [x0, #40]
  404fd0:	nop
  404fd4:	ldp	x29, x30, [sp], #64
  404fd8:	ret
  404fdc:	sub	sp, sp, #0x20
  404fe0:	str	x0, [sp, #8]
  404fe4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  404fe8:	add	x0, x0, #0x528
  404fec:	ldr	x0, [x0]
  404ff0:	str	x0, [sp, #24]
  404ff4:	b	405030 <wcrtomb@plt+0x320>
  404ff8:	ldr	x0, [sp, #24]
  404ffc:	ldr	x0, [x0]
  405000:	cmp	x0, #0x0
  405004:	b.eq	40503c <wcrtomb@plt+0x32c>  // b.none
  405008:	ldr	x0, [sp, #24]
  40500c:	ldr	x0, [x0]
  405010:	ldr	x0, [x0, #8]
  405014:	lsl	x0, x0, #9
  405018:	ldr	x1, [sp, #8]
  40501c:	cmp	x1, x0
  405020:	b.cc	40503c <wcrtomb@plt+0x32c>  // b.lo, b.ul, b.last
  405024:	ldr	x0, [sp, #24]
  405028:	ldr	x0, [x0]
  40502c:	str	x0, [sp, #24]
  405030:	ldr	x0, [sp, #24]
  405034:	cmp	x0, #0x0
  405038:	b.ne	404ff8 <wcrtomb@plt+0x2e8>  // b.any
  40503c:	ldr	x0, [sp, #24]
  405040:	add	sp, sp, #0x20
  405044:	ret
  405048:	stp	x29, x30, [sp, #-48]!
  40504c:	mov	x29, sp
  405050:	str	x0, [sp, #24]
  405054:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405058:	add	x0, x0, #0x528
  40505c:	ldr	x0, [x0]
  405060:	str	x0, [sp, #40]
  405064:	b	405090 <wcrtomb@plt+0x380>
  405068:	ldr	x0, [sp, #40]
  40506c:	ldr	x0, [x0]
  405070:	str	x0, [sp, #32]
  405074:	ldr	x0, [sp, #40]
  405078:	ldr	x0, [x0, #16]
  40507c:	bl	404880 <free@plt>
  405080:	ldr	x0, [sp, #40]
  405084:	bl	404880 <free@plt>
  405088:	ldr	x0, [sp, #32]
  40508c:	str	x0, [sp, #40]
  405090:	ldr	x0, [sp, #40]
  405094:	cmp	x0, #0x0
  405098:	b.eq	4050ac <wcrtomb@plt+0x39c>  // b.none
  40509c:	ldr	x1, [sp, #40]
  4050a0:	ldr	x0, [sp, #24]
  4050a4:	cmp	x1, x0
  4050a8:	b.ne	405068 <wcrtomb@plt+0x358>  // b.any
  4050ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4050b0:	add	x0, x0, #0x528
  4050b4:	ldr	x1, [sp, #40]
  4050b8:	str	x1, [x0]
  4050bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4050c0:	add	x0, x0, #0x528
  4050c4:	ldr	x0, [x0]
  4050c8:	cmp	x0, #0x0
  4050cc:	b.ne	4050e8 <wcrtomb@plt+0x3d8>  // b.any
  4050d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4050d4:	add	x0, x0, #0x528
  4050d8:	ldr	x1, [x0]
  4050dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4050e0:	add	x0, x0, #0x530
  4050e4:	str	x1, [x0]
  4050e8:	nop
  4050ec:	ldp	x29, x30, [sp], #48
  4050f0:	ret
  4050f4:	stp	x29, x30, [sp, #-32]!
  4050f8:	mov	x29, sp
  4050fc:	str	x0, [sp, #24]
  405100:	str	x1, [sp, #16]
  405104:	ldr	x0, [sp, #24]
  405108:	bl	405048 <wcrtomb@plt+0x338>
  40510c:	ldr	x0, [sp, #24]
  405110:	cmp	x0, #0x0
  405114:	b.eq	405154 <wcrtomb@plt+0x444>  // b.none
  405118:	b	405148 <wcrtomb@plt+0x438>
  40511c:	ldr	x0, [sp, #24]
  405120:	ldr	x1, [x0, #8]
  405124:	ldr	x0, [sp, #16]
  405128:	add	x1, x1, x0
  40512c:	ldr	x0, [sp, #24]
  405130:	str	x1, [x0, #8]
  405134:	ldr	x0, [sp, #24]
  405138:	str	xzr, [x0, #40]
  40513c:	ldr	x0, [sp, #24]
  405140:	ldr	x0, [x0]
  405144:	str	x0, [sp, #24]
  405148:	ldr	x0, [sp, #24]
  40514c:	cmp	x0, #0x0
  405150:	b.ne	40511c <wcrtomb@plt+0x40c>  // b.any
  405154:	nop
  405158:	ldp	x29, x30, [sp], #32
  40515c:	ret
  405160:	stp	x29, x30, [sp, #-16]!
  405164:	mov	x29, sp
  405168:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40516c:	add	x0, x0, #0x698
  405170:	bl	4182bc <wcrtomb@plt+0x135ac>
  405174:	nop
  405178:	ldp	x29, x30, [sp], #16
  40517c:	ret
  405180:	stp	x29, x30, [sp, #-32]!
  405184:	mov	x29, sp
  405188:	str	x0, [sp, #24]
  40518c:	ldr	x0, [sp, #24]
  405190:	ldr	x3, [x0]
  405194:	ldr	x0, [sp, #24]
  405198:	ldr	x1, [x0, #136]
  40519c:	ldr	x0, [sp, #24]
  4051a0:	ldr	x0, [x0, #136]
  4051a4:	mov	x2, x0
  4051a8:	mov	x0, x3
  4051ac:	bl	404ee8 <wcrtomb@plt+0x1d8>
  4051b0:	nop
  4051b4:	ldp	x29, x30, [sp], #32
  4051b8:	ret
  4051bc:	stp	x29, x30, [sp, #-16]!
  4051c0:	mov	x29, sp
  4051c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4051c8:	add	x0, x0, #0x7c
  4051cc:	ldrb	w0, [x0]
  4051d0:	cmp	w0, #0x0
  4051d4:	b.eq	4051e0 <wcrtomb@plt+0x4d0>  // b.none
  4051d8:	mov	x0, #0x0                   	// #0
  4051dc:	bl	405048 <wcrtomb@plt+0x338>
  4051e0:	nop
  4051e4:	ldp	x29, x30, [sp], #16
  4051e8:	ret
  4051ec:	sub	sp, sp, #0x10
  4051f0:	str	x0, [sp, #8]
  4051f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4051f8:	add	x0, x0, #0x528
  4051fc:	ldr	x0, [x0]
  405200:	cmp	x0, #0x0
  405204:	b.eq	40521c <wcrtomb@plt+0x50c>  // b.none
  405208:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40520c:	add	x0, x0, #0x528
  405210:	ldr	x0, [x0]
  405214:	ldr	x1, [sp, #8]
  405218:	str	x1, [x0, #32]
  40521c:	nop
  405220:	add	sp, sp, #0x10
  405224:	ret
  405228:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40522c:	add	x0, x0, #0x50c
  405230:	str	wzr, [x0]
  405234:	nop
  405238:	ret
  40523c:	stp	x29, x30, [sp, #-16]!
  405240:	mov	x29, sp
  405244:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405248:	add	x0, x0, #0x2f8
  40524c:	bl	44df9c <argp_usage@@Base+0x4eb0>
  405250:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405254:	add	x2, x0, #0x3d8
  405258:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40525c:	add	x0, x0, #0x2f8
  405260:	ldp	x0, x1, [x0]
  405264:	stp	x0, x1, [x2]
  405268:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40526c:	add	x2, x0, #0x390
  405270:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405274:	add	x0, x0, #0x2f8
  405278:	ldp	x0, x1, [x0]
  40527c:	stp	x0, x1, [x2]
  405280:	nop
  405284:	ldp	x29, x30, [sp], #16
  405288:	ret
  40528c:	stp	x29, x30, [sp, #-16]!
  405290:	mov	x29, sp
  405294:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405298:	add	x0, x0, #0x3d8
  40529c:	bl	44df9c <argp_usage@@Base+0x4eb0>
  4052a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4052a4:	add	x2, x0, #0x390
  4052a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4052ac:	add	x0, x0, #0x3d8
  4052b0:	ldp	x0, x1, [x0]
  4052b4:	stp	x0, x1, [x2]
  4052b8:	nop
  4052bc:	ldp	x29, x30, [sp], #16
  4052c0:	ret
  4052c4:	stp	x29, x30, [sp, #-32]!
  4052c8:	mov	x29, sp
  4052cc:	add	x0, sp, #0x10
  4052d0:	bl	44df9c <argp_usage@@Base+0x4eb0>
  4052d4:	ldr	x1, [sp, #16]
  4052d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4052dc:	add	x0, x0, #0x390
  4052e0:	ldr	x0, [x0]
  4052e4:	sub	x0, x1, x0
  4052e8:	fmov	d0, x0
  4052ec:	scvtf	d1, d0
  4052f0:	ldr	x1, [sp, #24]
  4052f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4052f8:	add	x0, x0, #0x390
  4052fc:	ldr	x0, [x0, #8]
  405300:	sub	x0, x1, x0
  405304:	fmov	d0, x0
  405308:	scvtf	d0, d0
  40530c:	mov	x0, #0xcd6500000000        	// #225833675390976
  405310:	movk	x0, #0x41cd, lsl #48
  405314:	fmov	d2, x0
  405318:	fdiv	d0, d0, d2
  40531c:	fadd	d1, d1, d0
  405320:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405324:	add	x0, x0, #0x6e8
  405328:	ldr	d0, [x0]
  40532c:	fadd	d0, d1, d0
  405330:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405334:	add	x0, x0, #0x6e8
  405338:	str	d0, [x0]
  40533c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405340:	add	x0, x0, #0x390
  405344:	bl	44df9c <argp_usage@@Base+0x4eb0>
  405348:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40534c:	add	x0, x0, #0x6e8
  405350:	ldr	d0, [x0]
  405354:	ldp	x29, x30, [sp], #32
  405358:	ret
  40535c:	sub	sp, sp, #0x20
  405360:	str	w0, [sp, #12]
  405364:	str	x1, [sp]
  405368:	ldr	x0, [sp]
  40536c:	ldr	w0, [x0]
  405370:	str	w0, [sp, #28]
  405374:	b	4053ec <wcrtomb@plt+0x6dc>
  405378:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40537c:	add	x2, x0, #0x6a0
  405380:	ldrsw	x1, [sp, #28]
  405384:	mov	x0, x1
  405388:	lsl	x0, x0, #1
  40538c:	add	x0, x0, x1
  405390:	lsl	x0, x0, #3
  405394:	add	x0, x2, x0
  405398:	ldr	w0, [x0]
  40539c:	ldr	w1, [sp, #12]
  4053a0:	cmp	w1, w0
  4053a4:	b.ne	4053e0 <wcrtomb@plt+0x6d0>  // b.any
  4053a8:	ldr	w0, [sp, #28]
  4053ac:	add	w1, w0, #0x1
  4053b0:	ldr	x0, [sp]
  4053b4:	str	w1, [x0]
  4053b8:	ldrsw	x1, [sp, #28]
  4053bc:	mov	x0, x1
  4053c0:	lsl	x0, x0, #1
  4053c4:	add	x0, x0, x1
  4053c8:	lsl	x0, x0, #3
  4053cc:	mov	x1, x0
  4053d0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4053d4:	add	x0, x0, #0x6a0
  4053d8:	add	x0, x1, x0
  4053dc:	b	405428 <wcrtomb@plt+0x718>
  4053e0:	ldr	w0, [sp, #28]
  4053e4:	add	w0, w0, #0x1
  4053e8:	str	w0, [sp, #28]
  4053ec:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4053f0:	add	x2, x0, #0x6a0
  4053f4:	ldrsw	x1, [sp, #28]
  4053f8:	mov	x0, x1
  4053fc:	lsl	x0, x0, #1
  405400:	add	x0, x0, x1
  405404:	lsl	x0, x0, #3
  405408:	add	x0, x2, x0
  40540c:	ldr	w0, [x0]
  405410:	cmp	w0, #0x0
  405414:	b.ne	405378 <wcrtomb@plt+0x668>  // b.any
  405418:	ldr	x0, [sp]
  40541c:	ldr	w1, [sp, #28]
  405420:	str	w1, [x0]
  405424:	mov	x0, #0x0                   	// #0
  405428:	add	sp, sp, #0x20
  40542c:	ret
  405430:	stp	x29, x30, [sp, #-48]!
  405434:	mov	x29, sp
  405438:	str	x0, [sp, #24]
  40543c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405440:	add	x0, x0, #0x3b8
  405444:	ldr	x0, [x0]
  405448:	cmp	x0, #0x0
  40544c:	b.eq	405460 <wcrtomb@plt+0x750>  // b.none
  405450:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405454:	add	x0, x0, #0x3b8
  405458:	ldr	x0, [x0]
  40545c:	b	4054b8 <wcrtomb@plt+0x7a8>
  405460:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405464:	add	x0, x0, #0x6f0
  405468:	ldr	w0, [x0]
  40546c:	cmp	w0, #0x0
  405470:	b.ne	40547c <wcrtomb@plt+0x76c>  // b.any
  405474:	mov	x0, #0x0                   	// #0
  405478:	b	4054b8 <wcrtomb@plt+0x7a8>
  40547c:	ldr	x0, [sp, #24]
  405480:	str	wzr, [x0]
  405484:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405488:	add	x0, x0, #0x6f0
  40548c:	ldr	w0, [x0]
  405490:	ldr	x1, [sp, #24]
  405494:	bl	40535c <wcrtomb@plt+0x64c>
  405498:	str	x0, [sp, #40]
  40549c:	ldr	x0, [sp, #40]
  4054a0:	cmp	x0, #0x0
  4054a4:	b.eq	4054b4 <wcrtomb@plt+0x7a4>  // b.none
  4054a8:	ldr	x0, [sp, #40]
  4054ac:	ldr	x0, [x0, #8]
  4054b0:	b	4054b8 <wcrtomb@plt+0x7a8>
  4054b4:	mov	x0, #0x0                   	// #0
  4054b8:	ldp	x29, x30, [sp], #48
  4054bc:	ret
  4054c0:	stp	x29, x30, [sp, #-48]!
  4054c4:	mov	x29, sp
  4054c8:	str	x0, [sp, #24]
  4054cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4054d0:	add	x0, x0, #0x3b8
  4054d4:	ldr	x0, [x0]
  4054d8:	cmp	x0, #0x0
  4054dc:	b.eq	4054e8 <wcrtomb@plt+0x7d8>  // b.none
  4054e0:	mov	x0, #0x0                   	// #0
  4054e4:	b	40551c <wcrtomb@plt+0x80c>
  4054e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4054ec:	add	x0, x0, #0x6f0
  4054f0:	ldr	w0, [x0]
  4054f4:	ldr	x1, [sp, #24]
  4054f8:	bl	40535c <wcrtomb@plt+0x64c>
  4054fc:	str	x0, [sp, #40]
  405500:	ldr	x0, [sp, #40]
  405504:	cmp	x0, #0x0
  405508:	b.eq	405518 <wcrtomb@plt+0x808>  // b.none
  40550c:	ldr	x0, [sp, #40]
  405510:	ldr	x0, [x0, #8]
  405514:	b	40551c <wcrtomb@plt+0x80c>
  405518:	mov	x0, #0x0                   	// #0
  40551c:	ldp	x29, x30, [sp], #48
  405520:	ret
  405524:	stp	x29, x30, [sp, #-48]!
  405528:	mov	x29, sp
  40552c:	str	w0, [sp, #28]
  405530:	str	wzr, [sp, #36]
  405534:	add	x0, sp, #0x24
  405538:	mov	x1, x0
  40553c:	ldr	w0, [sp, #28]
  405540:	bl	40535c <wcrtomb@plt+0x64c>
  405544:	str	x0, [sp, #40]
  405548:	ldr	x0, [sp, #40]
  40554c:	cmp	x0, #0x0
  405550:	b.eq	405560 <wcrtomb@plt+0x850>  // b.none
  405554:	ldr	x0, [sp, #40]
  405558:	ldr	x0, [x0, #16]
  40555c:	b	405564 <wcrtomb@plt+0x854>
  405560:	mov	x0, #0x0                   	// #0
  405564:	ldp	x29, x30, [sp], #48
  405568:	ret
  40556c:	stp	x29, x30, [sp, #-48]!
  405570:	mov	x29, sp
  405574:	str	x0, [sp, #24]
  405578:	ldr	x0, [sp, #24]
  40557c:	cmp	x0, #0x0
  405580:	b.ne	40558c <wcrtomb@plt+0x87c>  // b.any
  405584:	add	x0, sp, #0x26
  405588:	str	x0, [sp, #24]
  40558c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405590:	add	x0, x0, #0xfc0
  405594:	ldr	x1, [x0]
  405598:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40559c:	add	x0, x0, #0xf98
  4055a0:	str	x1, [x0]
  4055a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4055a8:	add	x0, x0, #0x511
  4055ac:	ldrb	w0, [x0]
  4055b0:	strb	w0, [sp, #39]
  4055b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4055b8:	add	x0, x0, #0x511
  4055bc:	mov	w1, #0x1                   	// #1
  4055c0:	strb	w1, [x0]
  4055c4:	bl	406030 <wcrtomb@plt+0x1320>
  4055c8:	cmp	x0, #0x0
  4055cc:	cset	w0, eq  // eq = none
  4055d0:	and	w1, w0, #0xff
  4055d4:	ldr	x0, [sp, #24]
  4055d8:	strb	w1, [x0]
  4055dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4055e0:	add	x0, x0, #0x511
  4055e4:	ldrb	w1, [sp, #39]
  4055e8:	strb	w1, [x0]
  4055ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4055f0:	add	x0, x0, #0xfc0
  4055f4:	ldr	x1, [x0]
  4055f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4055fc:	add	x0, x0, #0xf98
  405600:	ldr	x0, [x0]
  405604:	cmp	x1, x0
  405608:	b.eq	405680 <wcrtomb@plt+0x970>  // b.none
  40560c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405610:	add	x0, x0, #0xfc0
  405614:	ldr	x0, [x0]
  405618:	add	x2, x0, #0x101
  40561c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405620:	add	x1, x0, #0xec8
  405624:	mov	x0, x2
  405628:	bl	4047c0 <strcmp@plt>
  40562c:	cmp	w0, #0x0
  405630:	b.eq	40565c <wcrtomb@plt+0x94c>  // b.none
  405634:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405638:	add	x0, x0, #0xfc0
  40563c:	ldr	x0, [x0]
  405640:	add	x2, x0, #0x101
  405644:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405648:	add	x1, x0, #0xed0
  40564c:	mov	x0, x2
  405650:	bl	4047c0 <strcmp@plt>
  405654:	cmp	w0, #0x0
  405658:	b.ne	405680 <wcrtomb@plt+0x970>  // b.any
  40565c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405660:	add	x0, x0, #0xfc0
  405664:	ldr	x0, [x0]
  405668:	mov	w1, #0x1                   	// #1
  40566c:	bl	42096c <wcrtomb@plt+0x1bc5c>
  405670:	cmp	w0, #0x1
  405674:	b.ne	405680 <wcrtomb@plt+0x970>  // b.any
  405678:	mov	w0, #0x1                   	// #1
  40567c:	b	4056f4 <wcrtomb@plt+0x9e4>
  405680:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405684:	add	x0, x0, #0xd78
  405688:	str	x0, [sp, #40]
  40568c:	b	4056dc <wcrtomb@plt+0x9cc>
  405690:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405694:	add	x0, x0, #0xfc0
  405698:	ldr	x0, [x0]
  40569c:	mov	x3, x0
  4056a0:	ldr	x0, [sp, #40]
  4056a4:	ldr	x1, [x0, #16]
  4056a8:	ldr	x0, [sp, #40]
  4056ac:	ldr	x0, [x0, #8]
  4056b0:	mov	x2, x0
  4056b4:	mov	x0, x3
  4056b8:	bl	404790 <memcmp@plt>
  4056bc:	cmp	w0, #0x0
  4056c0:	b.ne	4056d0 <wcrtomb@plt+0x9c0>  // b.any
  4056c4:	ldr	x0, [sp, #40]
  4056c8:	ldr	w0, [x0]
  4056cc:	b	4056f4 <wcrtomb@plt+0x9e4>
  4056d0:	ldr	x0, [sp, #40]
  4056d4:	add	x0, x0, #0x18
  4056d8:	str	x0, [sp, #40]
  4056dc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  4056e0:	add	x0, x0, #0xe38
  4056e4:	ldr	x1, [sp, #40]
  4056e8:	cmp	x1, x0
  4056ec:	b.cc	405690 <wcrtomb@plt+0x980>  // b.lo, b.ul, b.last
  4056f0:	mov	w0, #0x0                   	// #0
  4056f4:	ldp	x29, x30, [sp], #48
  4056f8:	ret
  4056fc:	stp	x29, x30, [sp, #-144]!
  405700:	mov	x29, sp
  405704:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405708:	add	x0, x0, #0x38c
  40570c:	ldr	w0, [x0]
  405710:	cmp	w0, #0x4
  405714:	b.ne	405724 <wcrtomb@plt+0xa14>  // b.any
  405718:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40571c:	add	x0, x0, #0x3d0
  405720:	strb	wzr, [x0]
  405724:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405728:	add	x0, x0, #0x78
  40572c:	ldr	w0, [x0]
  405730:	cmn	w0, #0x1
  405734:	b.eq	405760 <wcrtomb@plt+0xa50>  // b.none
  405738:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40573c:	add	x0, x0, #0x78
  405740:	ldr	w0, [x0]
  405744:	cmp	w0, #0x0
  405748:	cset	w0, ne  // ne = any
  40574c:	and	w1, w0, #0xff
  405750:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405754:	add	x0, x0, #0x3d0
  405758:	strb	w1, [x0]
  40575c:	b	4057dc <wcrtomb@plt+0xacc>
  405760:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405764:	add	x0, x0, #0x7c
  405768:	ldrb	w0, [x0]
  40576c:	eor	w0, w0, #0x1
  405770:	and	w0, w0, #0xff
  405774:	cmp	w0, #0x0
  405778:	b.eq	4057d0 <wcrtomb@plt+0xac0>  // b.none
  40577c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405780:	add	x0, x0, #0x3b8
  405784:	ldr	x0, [x0]
  405788:	cmp	x0, #0x0
  40578c:	b.ne	4057d0 <wcrtomb@plt+0xac0>  // b.any
  405790:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405794:	add	x0, x0, #0x400
  405798:	ldr	w0, [x0]
  40579c:	add	x1, sp, #0x10
  4057a0:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  4057a4:	cmp	w0, #0x0
  4057a8:	b.ne	4057d0 <wcrtomb@plt+0xac0>  // b.any
  4057ac:	ldr	w0, [sp, #32]
  4057b0:	and	w0, w0, #0xf000
  4057b4:	cmp	w0, #0x8, lsl #12
  4057b8:	cset	w0, eq  // eq = none
  4057bc:	and	w1, w0, #0xff
  4057c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4057c4:	add	x0, x0, #0x3d0
  4057c8:	strb	w1, [x0]
  4057cc:	b	4057dc <wcrtomb@plt+0xacc>
  4057d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4057d4:	add	x0, x0, #0x3d0
  4057d8:	strb	wzr, [x0]
  4057dc:	ldp	x29, x30, [sp], #144
  4057e0:	ret
  4057e4:	stp	x29, x30, [sp, #-32]!
  4057e8:	mov	x29, sp
  4057ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4057f0:	add	x0, x0, #0x428
  4057f4:	ldrb	w0, [x0]
  4057f8:	eor	w0, w0, #0x1
  4057fc:	and	w0, w0, #0xff
  405800:	cmp	w0, #0x0
  405804:	b.eq	4058e4 <wcrtomb@plt+0xbd4>  // b.none
  405808:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40580c:	add	x0, x0, #0x2e0
  405810:	ldr	x0, [x0]
  405814:	ldr	x0, [x0]
  405818:	mov	w1, #0x3a                  	// #58
  40581c:	bl	404930 <strchr@plt>
  405820:	mov	x1, x0
  405824:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405828:	add	x0, x0, #0x430
  40582c:	str	x1, [x0]
  405830:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405834:	add	x0, x0, #0x430
  405838:	ldr	x0, [x0]
  40583c:	cmp	x0, #0x0
  405840:	b.eq	4058e4 <wcrtomb@plt+0xbd4>  // b.none
  405844:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405848:	add	x0, x0, #0x2e0
  40584c:	ldr	x0, [x0]
  405850:	ldr	x1, [x0]
  405854:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405858:	add	x0, x0, #0x430
  40585c:	ldr	x0, [x0]
  405860:	cmp	x1, x0
  405864:	b.cs	4058e4 <wcrtomb@plt+0xbd4>  // b.hs, b.nlast
  405868:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40586c:	add	x0, x0, #0x2e0
  405870:	ldr	x0, [x0]
  405874:	ldr	x3, [x0]
  405878:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40587c:	add	x0, x0, #0x430
  405880:	ldr	x1, [x0]
  405884:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405888:	add	x0, x0, #0x2e0
  40588c:	ldr	x0, [x0]
  405890:	ldr	x0, [x0]
  405894:	sub	x0, x1, x0
  405898:	mov	x2, x0
  40589c:	mov	w1, #0x2f                  	// #47
  4058a0:	mov	x0, x3
  4058a4:	bl	404a20 <memchr@plt>
  4058a8:	cmp	x0, #0x0
  4058ac:	b.ne	4058e4 <wcrtomb@plt+0xbd4>  // b.any
  4058b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4058b4:	add	x0, x0, #0x2e0
  4058b8:	ldr	x0, [x0]
  4058bc:	ldr	x4, [x0]
  4058c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4058c4:	add	x0, x0, #0x358
  4058c8:	ldr	x0, [x0]
  4058cc:	mov	x3, x0
  4058d0:	mov	w2, #0x40000000            	// #1073741824
  4058d4:	mov	w1, #0x0                   	// #0
  4058d8:	mov	x0, x4
  4058dc:	bl	43ba64 <wcrtomb@plt+0x36d54>
  4058e0:	b	405900 <wcrtomb@plt+0xbf0>
  4058e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4058e8:	add	x0, x0, #0x2e0
  4058ec:	ldr	x0, [x0]
  4058f0:	ldr	x0, [x0]
  4058f4:	mov	w2, #0x1b6                 	// #438
  4058f8:	mov	w1, #0x0                   	// #0
  4058fc:	bl	404430 <open@plt>
  405900:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  405904:	add	x1, x1, #0x400
  405908:	str	w0, [x1]
  40590c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405910:	add	x0, x0, #0x400
  405914:	ldr	w0, [x0]
  405918:	cmn	w0, #0x1
  40591c:	b.ne	405930 <wcrtomb@plt+0xc20>  // b.any
  405920:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405924:	add	x0, x0, #0x400
  405928:	ldr	w0, [x0]
  40592c:	b	405b44 <wcrtomb@plt+0xe34>
  405930:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405934:	add	x0, x0, #0x7c
  405938:	ldrb	w0, [x0]
  40593c:	eor	w0, w0, #0x1
  405940:	and	w0, w0, #0xff
  405944:	cmp	w0, #0x0
  405948:	b.eq	405b14 <wcrtomb@plt+0xe04>  // b.none
  40594c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405950:	add	x0, x0, #0x3b8
  405954:	ldr	x0, [x0]
  405958:	cmp	x0, #0x0
  40595c:	b.ne	405aa0 <wcrtomb@plt+0xd90>  // b.any
  405960:	add	x0, sp, #0x1b
  405964:	bl	40556c <wcrtomb@plt+0x85c>
  405968:	str	w0, [sp, #28]
  40596c:	ldr	w0, [sp, #28]
  405970:	cmp	w0, #0x0
  405974:	b.eq	4059f0 <wcrtomb@plt+0xce0>  // b.none
  405978:	ldr	w0, [sp, #28]
  40597c:	cmp	w0, #0x1
  405980:	b.ne	405a88 <wcrtomb@plt+0xd78>  // b.any
  405984:	ldrb	w0, [sp, #27]
  405988:	cmp	w0, #0x0
  40598c:	b.eq	4059e0 <wcrtomb@plt+0xcd0>  // b.none
  405990:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405994:	add	x0, x0, #0x420
  405998:	ldr	x0, [x0]
  40599c:	cmp	x0, #0x0
  4059a0:	b.eq	4059b4 <wcrtomb@plt+0xca4>  // b.none
  4059a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4059a8:	add	x0, x0, #0x420
  4059ac:	ldr	x0, [x0]
  4059b0:	blr	x0
  4059b4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  4059b8:	add	x0, x0, #0xed8
  4059bc:	bl	404c60 <gettext@plt>
  4059c0:	mov	x2, x0
  4059c4:	mov	w1, #0x0                   	// #0
  4059c8:	mov	w0, #0x0                   	// #0
  4059cc:	bl	404100 <error@plt>
  4059d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4059d4:	add	x0, x0, #0xdb0
  4059d8:	mov	w1, #0x2                   	// #2
  4059dc:	str	w1, [x0]
  4059e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4059e4:	add	x0, x0, #0x400
  4059e8:	ldr	w0, [x0]
  4059ec:	b	405b44 <wcrtomb@plt+0xe34>
  4059f0:	ldrb	w0, [sp, #27]
  4059f4:	cmp	w0, #0x0
  4059f8:	b.eq	405a4c <wcrtomb@plt+0xd3c>  // b.none
  4059fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405a00:	add	x0, x0, #0x420
  405a04:	ldr	x0, [x0]
  405a08:	cmp	x0, #0x0
  405a0c:	b.eq	405a20 <wcrtomb@plt+0xd10>  // b.none
  405a10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405a14:	add	x0, x0, #0x420
  405a18:	ldr	x0, [x0]
  405a1c:	blr	x0
  405a20:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405a24:	add	x0, x0, #0xed8
  405a28:	bl	404c60 <gettext@plt>
  405a2c:	mov	x2, x0
  405a30:	mov	w1, #0x0                   	// #0
  405a34:	mov	w0, #0x0                   	// #0
  405a38:	bl	404100 <error@plt>
  405a3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405a40:	add	x0, x0, #0xdb0
  405a44:	mov	w1, #0x2                   	// #2
  405a48:	str	w1, [x0]
  405a4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405a50:	add	x0, x0, #0x2e0
  405a54:	ldr	x0, [x0]
  405a58:	ldr	x0, [x0]
  405a5c:	mov	x1, #0x0                   	// #0
  405a60:	bl	42d7ac <wcrtomb@plt+0x28a9c>
  405a64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405a68:	add	x0, x0, #0x3b8
  405a6c:	ldr	x0, [x0]
  405a70:	cmp	x0, #0x0
  405a74:	b.ne	405a9c <wcrtomb@plt+0xd8c>  // b.any
  405a78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405a7c:	add	x0, x0, #0x400
  405a80:	ldr	w0, [x0]
  405a84:	b	405b44 <wcrtomb@plt+0xe34>
  405a88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405a8c:	add	x0, x0, #0x6f0
  405a90:	ldr	w1, [sp, #28]
  405a94:	str	w1, [x0]
  405a98:	b	405aa0 <wcrtomb@plt+0xd90>
  405a9c:	nop
  405aa0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405aa4:	add	x0, x0, #0x400
  405aa8:	ldr	w1, [x0]
  405aac:	mov	w0, #0x3fffffff            	// #1073741823
  405ab0:	cmp	w1, w0
  405ab4:	b.le	405ad4 <wcrtomb@plt+0xdc4>
  405ab8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405abc:	add	x0, x0, #0x400
  405ac0:	ldr	w1, [x0]
  405ac4:	mov	w0, #0xc0000000            	// #-1073741824
  405ac8:	add	w0, w1, w0
  405acc:	bl	43c048 <wcrtomb@plt+0x37338>
  405ad0:	b	405ae4 <wcrtomb@plt+0xdd4>
  405ad4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405ad8:	add	x0, x0, #0x400
  405adc:	ldr	w0, [x0]
  405ae0:	bl	404660 <close@plt>
  405ae4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405ae8:	add	x0, x0, #0x510
  405aec:	strb	wzr, [x0]
  405af0:	bl	42e940 <wcrtomb@plt+0x29c30>
  405af4:	mov	w1, w0
  405af8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405afc:	add	x0, x0, #0x508
  405b00:	str	w1, [x0]
  405b04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405b08:	add	x0, x0, #0x511
  405b0c:	mov	w1, #0x1                   	// #1
  405b10:	strb	w1, [x0]
  405b14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405b18:	add	x0, x0, #0xf90
  405b1c:	str	xzr, [x0]
  405b20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405b24:	add	x0, x0, #0xfc0
  405b28:	ldr	x1, [x0]
  405b2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405b30:	add	x0, x0, #0xf98
  405b34:	str	x1, [x0]
  405b38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405b3c:	add	x0, x0, #0x400
  405b40:	ldr	w0, [x0]
  405b44:	ldp	x29, x30, [sp], #32
  405b48:	ret
  405b4c:	sub	sp, sp, #0x570
  405b50:	stp	x29, x30, [sp]
  405b54:	mov	x29, sp
  405b58:	str	x19, [sp, #16]
  405b5c:	str	x0, [sp, #56]
  405b60:	str	x1, [sp, #48]
  405b64:	str	d0, [sp, #40]
  405b68:	str	wzr, [sp, #1388]
  405b6c:	mov	w0, #0x1b0                 	// #432
  405b70:	str	w0, [sp, #1384]
  405b74:	ldr	x0, [sp, #48]
  405b78:	cmp	x0, #0x0
  405b7c:	b.eq	405bbc <wcrtomb@plt+0xeac>  // b.none
  405b80:	ldr	x0, [sp, #48]
  405b84:	ldrb	w0, [x0]
  405b88:	cmp	w0, #0x0
  405b8c:	b.eq	405bbc <wcrtomb@plt+0xeac>  // b.none
  405b90:	ldr	x0, [sp, #48]
  405b94:	bl	404c60 <gettext@plt>
  405b98:	mov	x2, x0
  405b9c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405ba0:	add	x1, x0, #0xf00
  405ba4:	ldr	x0, [sp, #56]
  405ba8:	bl	404c90 <fprintf@plt>
  405bac:	mov	w1, w0
  405bb0:	ldr	w0, [sp, #1388]
  405bb4:	add	w0, w0, w1
  405bb8:	str	w0, [sp, #1388]
  405bbc:	ldr	d0, [sp, #40]
  405bc0:	fcvtzu	x5, d0
  405bc4:	add	x0, sp, #0x2d8
  405bc8:	mov	x4, #0x1                   	// #1
  405bcc:	mov	x3, #0x1                   	// #1
  405bd0:	ldr	w2, [sp, #1384]
  405bd4:	mov	x1, x0
  405bd8:	mov	x0, x5
  405bdc:	bl	44fa80 <argp_usage@@Base+0x6994>
  405be0:	mov	x19, x0
  405be4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405be8:	add	x0, x0, #0x6e8
  405bec:	ldr	d0, [x0]
  405bf0:	fcmpe	d0, #0.0
  405bf4:	b.le	405c54 <wcrtomb@plt+0xf44>
  405bf8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405bfc:	add	x0, x0, #0x6e8
  405c00:	ldr	d0, [x0]
  405c04:	ldr	d1, [sp, #40]
  405c08:	fdiv	d0, d1, d0
  405c0c:	mov	x0, #0x43f0000000000000    	// #4895412794951729152
  405c10:	fmov	d1, x0
  405c14:	fcmpe	d0, d1
  405c18:	b.pl	405c54 <wcrtomb@plt+0xf44>  // b.nfrst
  405c1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405c20:	add	x0, x0, #0x6e8
  405c24:	ldr	d0, [x0]
  405c28:	ldr	d1, [sp, #40]
  405c2c:	fdiv	d0, d1, d0
  405c30:	fcvtzu	x5, d0
  405c34:	add	x0, sp, #0x48
  405c38:	mov	x4, #0x1                   	// #1
  405c3c:	mov	x3, #0x1                   	// #1
  405c40:	ldr	w2, [sp, #1384]
  405c44:	mov	x1, x0
  405c48:	mov	x0, x5
  405c4c:	bl	44fa80 <argp_usage@@Base+0x6994>
  405c50:	b	405c5c <wcrtomb@plt+0xf4c>
  405c54:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405c58:	add	x0, x0, #0xf08
  405c5c:	mov	x3, x0
  405c60:	mov	x2, x19
  405c64:	ldr	d0, [sp, #40]
  405c68:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405c6c:	add	x1, x0, #0xf10
  405c70:	ldr	x0, [sp, #56]
  405c74:	bl	404c90 <fprintf@plt>
  405c78:	mov	w1, w0
  405c7c:	ldr	w0, [sp, #1388]
  405c80:	add	w0, w1, w0
  405c84:	ldr	x19, [sp, #16]
  405c88:	ldp	x29, x30, [sp]
  405c8c:	add	sp, sp, #0x570
  405c90:	ret
  405c94:	stp	x29, x30, [sp, #-80]!
  405c98:	mov	x29, sp
  405c9c:	str	x0, [sp, #40]
  405ca0:	str	x1, [sp, #32]
  405ca4:	str	w2, [sp, #28]
  405ca8:	str	w3, [sp, #24]
  405cac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405cb0:	add	x0, x0, #0x38c
  405cb4:	ldr	w0, [x0]
  405cb8:	cmp	w0, #0x8
  405cbc:	b.eq	405cf8 <wcrtomb@plt+0xfe8>  // b.none
  405cc0:	cmp	w0, #0x8
  405cc4:	b.hi	405f0c <wcrtomb@plt+0x11fc>  // b.pmore
  405cc8:	cmp	w0, #0x7
  405ccc:	b.hi	405f0c <wcrtomb@plt+0x11fc>  // b.pmore
  405cd0:	cmp	w0, #0x5
  405cd4:	b.cs	405ec8 <wcrtomb@plt+0x11b8>  // b.hs, b.nlast
  405cd8:	cmp	w0, #0x3
  405cdc:	b.hi	405cec <wcrtomb@plt+0xfdc>  // b.pmore
  405ce0:	cmp	w0, #0x0
  405ce4:	b.ne	405cf8 <wcrtomb@plt+0xfe8>  // b.any
  405ce8:	b	405f0c <wcrtomb@plt+0x11fc>
  405cec:	cmp	w0, #0x4
  405cf0:	b.eq	405d30 <wcrtomb@plt+0x1020>  // b.none
  405cf4:	b	405f0c <wcrtomb@plt+0x11fc>
  405cf8:	ldr	x0, [sp, #32]
  405cfc:	add	x0, x0, #0x8
  405d00:	ldr	x1, [x0]
  405d04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405d08:	add	x0, x0, #0x4c8
  405d0c:	ldr	d1, [x0]
  405d10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405d14:	add	x0, x0, #0x4d0
  405d18:	ldr	d0, [x0]
  405d1c:	fadd	d0, d1, d0
  405d20:	ldr	x0, [sp, #40]
  405d24:	bl	405b4c <wcrtomb@plt+0xe3c>
  405d28:	str	w0, [sp, #76]
  405d2c:	b	405f10 <wcrtomb@plt+0x1200>
  405d30:	ldr	x0, [sp, #32]
  405d34:	ldr	x1, [x0]
  405d38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405d3c:	add	x0, x0, #0xf90
  405d40:	ldr	x0, [x0]
  405d44:	mov	x2, x0
  405d48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405d4c:	add	x0, x0, #0x3c8
  405d50:	ldr	x0, [x0]
  405d54:	mul	x0, x2, x0
  405d58:	ucvtf	d0, x0
  405d5c:	ldr	x0, [sp, #40]
  405d60:	bl	405b4c <wcrtomb@plt+0xe3c>
  405d64:	str	w0, [sp, #76]
  405d68:	ldr	x1, [sp, #40]
  405d6c:	ldr	w0, [sp, #28]
  405d70:	bl	404a40 <fputc_unlocked@plt>
  405d74:	ldr	w0, [sp, #76]
  405d78:	add	w0, w0, #0x1
  405d7c:	str	w0, [sp, #76]
  405d80:	ldr	x0, [sp, #32]
  405d84:	add	x0, x0, #0x8
  405d88:	ldr	x1, [x0]
  405d8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405d90:	add	x0, x0, #0x4c8
  405d94:	ldr	d1, [x0]
  405d98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405d9c:	add	x0, x0, #0x4d0
  405da0:	ldr	d0, [x0]
  405da4:	fadd	d0, d1, d0
  405da8:	ldr	x0, [sp, #40]
  405dac:	bl	405b4c <wcrtomb@plt+0xe3c>
  405db0:	mov	w1, w0
  405db4:	ldr	w0, [sp, #76]
  405db8:	add	w0, w0, w1
  405dbc:	str	w0, [sp, #76]
  405dc0:	ldr	x1, [sp, #40]
  405dc4:	ldr	w0, [sp, #28]
  405dc8:	bl	404a40 <fputc_unlocked@plt>
  405dcc:	ldr	w0, [sp, #76]
  405dd0:	add	w0, w0, #0x1
  405dd4:	str	w0, [sp, #76]
  405dd8:	ldr	x0, [sp, #32]
  405ddc:	add	x0, x0, #0x10
  405de0:	ldr	x0, [x0]
  405de4:	cmp	x0, #0x0
  405de8:	b.eq	405e38 <wcrtomb@plt+0x1128>  // b.none
  405dec:	ldr	x0, [sp, #32]
  405df0:	add	x0, x0, #0x10
  405df4:	ldr	x0, [x0]
  405df8:	ldrb	w0, [x0]
  405dfc:	cmp	w0, #0x0
  405e00:	b.eq	405e38 <wcrtomb@plt+0x1128>  // b.none
  405e04:	ldr	x0, [sp, #32]
  405e08:	add	x0, x0, #0x10
  405e0c:	ldr	x0, [x0]
  405e10:	bl	404c60 <gettext@plt>
  405e14:	mov	x2, x0
  405e18:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405e1c:	add	x1, x0, #0xf00
  405e20:	ldr	x0, [sp, #40]
  405e24:	bl	404c90 <fprintf@plt>
  405e28:	mov	w1, w0
  405e2c:	ldr	w0, [sp, #76]
  405e30:	add	w0, w0, w1
  405e34:	str	w0, [sp, #76]
  405e38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405e3c:	add	x0, x0, #0xf90
  405e40:	ldr	x1, [x0]
  405e44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405e48:	add	x0, x0, #0xff0
  405e4c:	ldr	x0, [x0]
  405e50:	sub	x0, x1, x0
  405e54:	mov	x1, x0
  405e58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405e5c:	add	x0, x0, #0x3c8
  405e60:	ldr	x0, [x0]
  405e64:	mul	x0, x1, x0
  405e68:	ucvtf	d1, x0
  405e6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405e70:	add	x0, x0, #0x4c8
  405e74:	ldr	d2, [x0]
  405e78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405e7c:	add	x0, x0, #0x4d0
  405e80:	ldr	d0, [x0]
  405e84:	fadd	d0, d2, d0
  405e88:	fsub	d0, d1, d0
  405e8c:	fcvtzu	x2, d0
  405e90:	add	x0, sp, #0x30
  405e94:	mov	x1, x0
  405e98:	mov	x0, x2
  405e9c:	bl	450988 <argp_usage@@Base+0x789c>
  405ea0:	mov	x2, x0
  405ea4:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405ea8:	add	x1, x0, #0xf20
  405eac:	ldr	x0, [sp, #40]
  405eb0:	bl	404c90 <fprintf@plt>
  405eb4:	mov	w1, w0
  405eb8:	ldr	w0, [sp, #76]
  405ebc:	add	w0, w0, w1
  405ec0:	str	w0, [sp, #76]
  405ec4:	b	405f10 <wcrtomb@plt+0x1200>
  405ec8:	ldr	x0, [sp, #32]
  405ecc:	ldr	x0, [x0]
  405ed0:	bl	404c60 <gettext@plt>
  405ed4:	mov	x1, x0
  405ed8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405edc:	add	x0, x0, #0xf90
  405ee0:	ldr	x0, [x0]
  405ee4:	mov	x2, x0
  405ee8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405eec:	add	x0, x0, #0x3c8
  405ef0:	ldr	x0, [x0]
  405ef4:	mul	x0, x2, x0
  405ef8:	ucvtf	d0, x0
  405efc:	ldr	x0, [sp, #40]
  405f00:	bl	405b4c <wcrtomb@plt+0xe3c>
  405f04:	str	w0, [sp, #76]
  405f08:	b	405f10 <wcrtomb@plt+0x1200>
  405f0c:	bl	404710 <abort@plt>
  405f10:	ldr	w0, [sp, #24]
  405f14:	cmp	w0, #0x0
  405f18:	b.eq	405f34 <wcrtomb@plt+0x1224>  // b.none
  405f1c:	ldr	x1, [sp, #40]
  405f20:	ldr	w0, [sp, #24]
  405f24:	bl	404a40 <fputc_unlocked@plt>
  405f28:	ldr	w0, [sp, #76]
  405f2c:	add	w0, w0, #0x1
  405f30:	str	w0, [sp, #76]
  405f34:	ldr	w0, [sp, #76]
  405f38:	ldp	x29, x30, [sp], #80
  405f3c:	ret
  405f40:	stp	x29, x30, [sp, #-16]!
  405f44:	mov	x29, sp
  405f48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405f4c:	add	x0, x0, #0x498
  405f50:	ldr	x4, [x0]
  405f54:	mov	w3, #0xa                   	// #10
  405f58:	mov	w2, #0xa                   	// #10
  405f5c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  405f60:	add	x1, x0, #0xf70
  405f64:	mov	x0, x4
  405f68:	bl	405c94 <wcrtomb@plt+0xf84>
  405f6c:	nop
  405f70:	ldp	x29, x30, [sp], #16
  405f74:	ret
  405f78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405f7c:	add	x0, x0, #0xfd8
  405f80:	ldr	x1, [x0]
  405f84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405f88:	add	x0, x0, #0xfc0
  405f8c:	ldr	x0, [x0]
  405f90:	sub	x0, x1, x0
  405f94:	asr	x0, x0, #9
  405f98:	mov	x1, x0
  405f9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405fa0:	add	x0, x0, #0x500
  405fa4:	ldr	x0, [x0]
  405fa8:	add	x0, x1, x0
  405fac:	ret
  405fb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405fb4:	add	x0, x0, #0x510
  405fb8:	ldrb	w0, [x0]
  405fbc:	cmp	w0, #0x0
  405fc0:	b.eq	406028 <wcrtomb@plt+0x1318>  // b.none
  405fc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405fc8:	add	x0, x0, #0x510
  405fcc:	strb	wzr, [x0]
  405fd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405fd4:	add	x0, x0, #0xfc0
  405fd8:	ldr	x1, [x0]
  405fdc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405fe0:	add	x0, x0, #0xfd8
  405fe4:	str	x1, [x0]
  405fe8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  405fec:	add	x0, x0, #0xfc0
  405ff0:	ldr	x1, [x0]
  405ff4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  405ff8:	add	x0, x0, #0x31c
  405ffc:	ldr	w0, [x0]
  406000:	sxtw	x0, w0
  406004:	lsl	x0, x0, #9
  406008:	add	x1, x1, x0
  40600c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406010:	add	x0, x0, #0xf98
  406014:	str	x1, [x0]
  406018:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40601c:	add	x0, x0, #0xfa8
  406020:	mov	w1, #0x1                   	// #1
  406024:	str	w1, [x0]
  406028:	nop
  40602c:	ret
  406030:	stp	x29, x30, [sp, #-16]!
  406034:	mov	x29, sp
  406038:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40603c:	add	x0, x0, #0xfd8
  406040:	ldr	x1, [x0]
  406044:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406048:	add	x0, x0, #0xf98
  40604c:	ldr	x0, [x0]
  406050:	cmp	x1, x0
  406054:	b.ne	4060b0 <wcrtomb@plt+0x13a0>  // b.any
  406058:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40605c:	add	x0, x0, #0x510
  406060:	ldrb	w0, [x0]
  406064:	cmp	w0, #0x0
  406068:	b.eq	406074 <wcrtomb@plt+0x1364>  // b.none
  40606c:	mov	x0, #0x0                   	// #0
  406070:	b	4060bc <wcrtomb@plt+0x13ac>
  406074:	bl	407394 <wcrtomb@plt+0x2684>
  406078:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40607c:	add	x0, x0, #0xfd8
  406080:	ldr	x1, [x0]
  406084:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406088:	add	x0, x0, #0xf98
  40608c:	ldr	x0, [x0]
  406090:	cmp	x1, x0
  406094:	b.ne	4060b0 <wcrtomb@plt+0x13a0>  // b.any
  406098:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40609c:	add	x0, x0, #0x510
  4060a0:	mov	w1, #0x1                   	// #1
  4060a4:	strb	w1, [x0]
  4060a8:	mov	x0, #0x0                   	// #0
  4060ac:	b	4060bc <wcrtomb@plt+0x13ac>
  4060b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4060b4:	add	x0, x0, #0xfd8
  4060b8:	ldr	x0, [x0]
  4060bc:	ldp	x29, x30, [sp], #16
  4060c0:	ret
  4060c4:	stp	x29, x30, [sp, #-32]!
  4060c8:	mov	x29, sp
  4060cc:	str	x0, [sp, #24]
  4060d0:	b	4060f0 <wcrtomb@plt+0x13e0>
  4060d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4060d8:	add	x0, x0, #0xfd8
  4060dc:	ldr	x0, [x0]
  4060e0:	add	x1, x0, #0x200
  4060e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4060e8:	add	x0, x0, #0xfd8
  4060ec:	str	x1, [x0]
  4060f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4060f4:	add	x0, x0, #0xfd8
  4060f8:	ldr	x0, [x0]
  4060fc:	ldr	x1, [sp, #24]
  406100:	cmp	x1, x0
  406104:	b.cs	4060d4 <wcrtomb@plt+0x13c4>  // b.hs, b.nlast
  406108:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40610c:	add	x0, x0, #0xfd8
  406110:	ldr	x1, [x0]
  406114:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406118:	add	x0, x0, #0xf98
  40611c:	ldr	x0, [x0]
  406120:	cmp	x1, x0
  406124:	b.ls	40612c <wcrtomb@plt+0x141c>  // b.plast
  406128:	bl	404710 <abort@plt>
  40612c:	nop
  406130:	ldp	x29, x30, [sp], #32
  406134:	ret
  406138:	sub	sp, sp, #0x10
  40613c:	str	x0, [sp, #8]
  406140:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406144:	add	x0, x0, #0xf98
  406148:	ldr	x0, [x0]
  40614c:	mov	x1, x0
  406150:	ldr	x0, [sp, #8]
  406154:	sub	x0, x1, x0
  406158:	add	sp, sp, #0x10
  40615c:	ret
  406160:	stp	x29, x30, [sp, #-32]!
  406164:	mov	x29, sp
  406168:	str	w0, [sp, #28]
  40616c:	ldr	w0, [sp, #28]
  406170:	bl	404660 <close@plt>
  406174:	cmp	w0, #0x0
  406178:	b.eq	40618c <wcrtomb@plt+0x147c>  // b.none
  40617c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  406180:	add	x0, x0, #0xf88
  406184:	bl	404c60 <gettext@plt>
  406188:	bl	43a490 <wcrtomb@plt+0x35780>
  40618c:	nop
  406190:	ldp	x29, x30, [sp], #32
  406194:	ret
  406198:	stp	x29, x30, [sp, #-32]!
  40619c:	mov	x29, sp
  4061a0:	str	x19, [sp, #16]
  4061a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4061a8:	add	x0, x0, #0x4f8
  4061ac:	ldr	w1, [x0]
  4061b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4061b4:	add	x0, x0, #0x4e8
  4061b8:	sxtw	x1, w1
  4061bc:	ldr	x0, [x0, x1, lsl #3]
  4061c0:	cmp	x0, #0x0
  4061c4:	b.ne	40621c <wcrtomb@plt+0x150c>  // b.any
  4061c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4061cc:	add	x0, x0, #0x4f8
  4061d0:	ldr	w0, [x0]
  4061d4:	sxtw	x0, w0
  4061d8:	lsl	x1, x0, #3
  4061dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4061e0:	add	x0, x0, #0x4d8
  4061e4:	add	x2, x1, x0
  4061e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4061ec:	add	x0, x0, #0x3c8
  4061f0:	ldr	x1, [x0]
  4061f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4061f8:	add	x0, x0, #0x4f8
  4061fc:	ldr	w19, [x0]
  406200:	mov	x0, x2
  406204:	bl	4262e4 <wcrtomb@plt+0x215d4>
  406208:	mov	x2, x0
  40620c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406210:	add	x0, x0, #0x4e8
  406214:	sxtw	x1, w19
  406218:	str	x2, [x0, x1, lsl #3]
  40621c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406220:	add	x0, x0, #0x4f8
  406224:	ldr	w1, [x0]
  406228:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40622c:	add	x0, x0, #0x4e8
  406230:	sxtw	x1, w1
  406234:	ldr	x1, [x0, x1, lsl #3]
  406238:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40623c:	add	x0, x0, #0xfc0
  406240:	str	x1, [x0]
  406244:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406248:	add	x0, x0, #0xfc0
  40624c:	ldr	x1, [x0]
  406250:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406254:	add	x0, x0, #0xfd8
  406258:	str	x1, [x0]
  40625c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406260:	add	x0, x0, #0xfc0
  406264:	ldr	x1, [x0]
  406268:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40626c:	add	x0, x0, #0x31c
  406270:	ldr	w0, [x0]
  406274:	sxtw	x0, w0
  406278:	lsl	x0, x0, #9
  40627c:	add	x1, x1, x0
  406280:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406284:	add	x0, x0, #0xf98
  406288:	str	x1, [x0]
  40628c:	nop
  406290:	ldr	x19, [sp, #16]
  406294:	ldp	x29, x30, [sp], #32
  406298:	ret
  40629c:	stp	x29, x30, [sp, #-32]!
  4062a0:	mov	x29, sp
  4062a4:	str	w0, [sp, #28]
  4062a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4062ac:	add	x0, x0, #0x2e0
  4062b0:	ldr	x0, [x0]
  4062b4:	ldr	x2, [x0]
  4062b8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  4062bc:	add	x1, x0, #0xf90
  4062c0:	mov	x0, x2
  4062c4:	bl	4047c0 <strcmp@plt>
  4062c8:	cmp	w0, #0x0
  4062cc:	b.ne	40634c <wcrtomb@plt+0x163c>  // b.any
  4062d0:	ldr	w0, [sp, #28]
  4062d4:	cmp	w0, #0x0
  4062d8:	cset	w0, ne  // ne = any
  4062dc:	and	w0, w0, #0xff
  4062e0:	bl	404a30 <isatty@plt>
  4062e4:	cmp	w0, #0x0
  4062e8:	b.eq	40634c <wcrtomb@plt+0x163c>  // b.none
  4062ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4062f0:	add	x0, x0, #0x420
  4062f4:	ldr	x0, [x0]
  4062f8:	cmp	x0, #0x0
  4062fc:	b.eq	406310 <wcrtomb@plt+0x1600>  // b.none
  406300:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406304:	add	x0, x0, #0x420
  406308:	ldr	x0, [x0]
  40630c:	blr	x0
  406310:	ldr	w0, [sp, #28]
  406314:	cmp	w0, #0x0
  406318:	b.ne	40632c <wcrtomb@plt+0x161c>  // b.any
  40631c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  406320:	add	x0, x0, #0xf98
  406324:	bl	404c60 <gettext@plt>
  406328:	b	406338 <wcrtomb@plt+0x1628>
  40632c:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  406330:	add	x0, x0, #0xfe0
  406334:	bl	404c60 <gettext@plt>
  406338:	mov	x2, x0
  40633c:	mov	w1, #0x0                   	// #0
  406340:	mov	w0, #0x0                   	// #0
  406344:	bl	404100 <error@plt>
  406348:	bl	412ae0 <wcrtomb@plt+0xddd0>
  40634c:	nop
  406350:	ldp	x29, x30, [sp], #32
  406354:	ret
  406358:	stp	x29, x30, [sp, #-64]!
  40635c:	mov	x29, sp
  406360:	str	x19, [sp, #16]
  406364:	str	w0, [sp, #44]
  406368:	str	wzr, [sp, #60]
  40636c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406370:	add	x0, x0, #0x3c8
  406374:	ldr	x0, [x0]
  406378:	cmp	x0, #0x0
  40637c:	b.ne	4063c4 <wcrtomb@plt+0x16b4>  // b.any
  406380:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406384:	add	x0, x0, #0x420
  406388:	ldr	x0, [x0]
  40638c:	cmp	x0, #0x0
  406390:	b.eq	4063a4 <wcrtomb@plt+0x1694>  // b.none
  406394:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406398:	add	x0, x0, #0x420
  40639c:	ldr	x0, [x0]
  4063a0:	blr	x0
  4063a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4063a8:	add	x0, x0, #0x28
  4063ac:	bl	404c60 <gettext@plt>
  4063b0:	mov	x2, x0
  4063b4:	mov	w1, #0x0                   	// #0
  4063b8:	mov	w0, #0x0                   	// #0
  4063bc:	bl	404100 <error@plt>
  4063c0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4063c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4063c8:	add	x0, x0, #0x380
  4063cc:	ldr	x0, [x0]
  4063d0:	cmp	x0, #0x0
  4063d4:	b.ne	40641c <wcrtomb@plt+0x170c>  // b.any
  4063d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4063dc:	add	x0, x0, #0x420
  4063e0:	ldr	x0, [x0]
  4063e4:	cmp	x0, #0x0
  4063e8:	b.eq	4063fc <wcrtomb@plt+0x16ec>  // b.none
  4063ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4063f0:	add	x0, x0, #0x420
  4063f4:	ldr	x0, [x0]
  4063f8:	blr	x0
  4063fc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  406400:	add	x0, x0, #0x48
  406404:	bl	404c60 <gettext@plt>
  406408:	mov	x2, x0
  40640c:	mov	w1, #0x0                   	// #0
  406410:	mov	w0, #0x0                   	// #0
  406414:	bl	404100 <error@plt>
  406418:	bl	412ae0 <wcrtomb@plt+0xddd0>
  40641c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406420:	add	x0, x0, #0x90
  406424:	bl	434ecc <wcrtomb@plt+0x301bc>
  406428:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40642c:	add	x0, x0, #0x4f8
  406430:	str	wzr, [x0]
  406434:	bl	406198 <wcrtomb@plt+0x1488>
  406438:	ldr	w0, [sp, #44]
  40643c:	cmp	w0, #0x2
  406440:	b.eq	40644c <wcrtomb@plt+0x173c>  // b.none
  406444:	ldr	w0, [sp, #44]
  406448:	b	406450 <wcrtomb@plt+0x1740>
  40644c:	mov	w0, #0x0                   	// #0
  406450:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406454:	add	x1, x1, #0xfa8
  406458:	str	w0, [x1]
  40645c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406460:	add	x0, x0, #0xfa8
  406464:	ldr	w0, [x0]
  406468:	bl	40629c <wcrtomb@plt+0x158c>
  40646c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406470:	add	x0, x0, #0x379
  406474:	ldrb	w1, [x0]
  406478:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40647c:	add	x0, x0, #0x511
  406480:	strb	w1, [x0]
  406484:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406488:	add	x0, x0, #0xf90
  40648c:	str	xzr, [x0]
  406490:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406494:	add	x0, x0, #0x3b8
  406498:	ldr	x0, [x0]
  40649c:	cmp	x0, #0x0
  4064a0:	b.eq	406598 <wcrtomb@plt+0x1888>  // b.none
  4064a4:	ldr	w0, [sp, #44]
  4064a8:	cmp	w0, #0x2
  4064ac:	b.eq	406530 <wcrtomb@plt+0x1820>  // b.none
  4064b0:	ldr	w0, [sp, #44]
  4064b4:	cmp	w0, #0x2
  4064b8:	b.hi	406534 <wcrtomb@plt+0x1824>  // b.pmore
  4064bc:	ldr	w0, [sp, #44]
  4064c0:	cmp	w0, #0x0
  4064c4:	b.eq	4064d8 <wcrtomb@plt+0x17c8>  // b.none
  4064c8:	ldr	w0, [sp, #44]
  4064cc:	cmp	w0, #0x1
  4064d0:	b.eq	406518 <wcrtomb@plt+0x1808>  // b.none
  4064d4:	b	406534 <wcrtomb@plt+0x1824>
  4064d8:	bl	42e940 <wcrtomb@plt+0x29c30>
  4064dc:	mov	w1, w0
  4064e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4064e4:	add	x0, x0, #0x508
  4064e8:	str	w1, [x0]
  4064ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4064f0:	add	x0, x0, #0x511
  4064f4:	mov	w1, #0x1                   	// #1
  4064f8:	strb	w1, [x0]
  4064fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406500:	add	x0, x0, #0xfc0
  406504:	ldr	x1, [x0]
  406508:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40650c:	add	x0, x0, #0xf98
  406510:	str	x1, [x0]
  406514:	b	406534 <wcrtomb@plt+0x1824>
  406518:	bl	42e124 <wcrtomb@plt+0x29414>
  40651c:	mov	w1, w0
  406520:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406524:	add	x0, x0, #0x508
  406528:	str	w1, [x0]
  40652c:	b	406534 <wcrtomb@plt+0x1824>
  406530:	bl	404710 <abort@plt>
  406534:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406538:	add	x0, x0, #0x3f0
  40653c:	ldr	x0, [x0]
  406540:	cmp	x0, #0x0
  406544:	b.ne	406c6c <wcrtomb@plt+0x1f5c>  // b.any
  406548:	ldr	w0, [sp, #44]
  40654c:	cmp	w0, #0x1
  406550:	b.ne	406c6c <wcrtomb@plt+0x1f5c>  // b.any
  406554:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406558:	add	x0, x0, #0x2e0
  40655c:	ldr	x0, [x0]
  406560:	ldr	x2, [x0]
  406564:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  406568:	add	x1, x0, #0xf90
  40656c:	mov	x0, x2
  406570:	bl	4047c0 <strcmp@plt>
  406574:	cmp	w0, #0x0
  406578:	b.ne	406c6c <wcrtomb@plt+0x1f5c>  // b.any
  40657c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406580:	add	x0, x0, #0x498
  406584:	ldr	x1, [x0]
  406588:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40658c:	add	x0, x0, #0xf88
  406590:	str	x1, [x0]
  406594:	b	406c6c <wcrtomb@plt+0x1f5c>
  406598:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40659c:	add	x0, x0, #0x2e0
  4065a0:	ldr	x0, [x0]
  4065a4:	ldr	x2, [x0]
  4065a8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  4065ac:	add	x1, x0, #0xf90
  4065b0:	mov	x0, x2
  4065b4:	bl	4047c0 <strcmp@plt>
  4065b8:	cmp	w0, #0x0
  4065bc:	b.ne	4067e4 <wcrtomb@plt+0x1ad4>  // b.any
  4065c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4065c4:	add	x0, x0, #0x511
  4065c8:	mov	w1, #0x1                   	// #1
  4065cc:	strb	w1, [x0]
  4065d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4065d4:	add	x0, x0, #0x37a
  4065d8:	ldrb	w0, [x0]
  4065dc:	cmp	w0, #0x0
  4065e0:	b.eq	406628 <wcrtomb@plt+0x1918>  // b.none
  4065e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4065e8:	add	x0, x0, #0x420
  4065ec:	ldr	x0, [x0]
  4065f0:	cmp	x0, #0x0
  4065f4:	b.eq	406608 <wcrtomb@plt+0x18f8>  // b.none
  4065f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4065fc:	add	x0, x0, #0x420
  406600:	ldr	x0, [x0]
  406604:	blr	x0
  406608:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40660c:	add	x0, x0, #0x60
  406610:	bl	404c60 <gettext@plt>
  406614:	mov	x2, x0
  406618:	mov	w1, #0x0                   	// #0
  40661c:	mov	w0, #0x0                   	// #0
  406620:	bl	404100 <error@plt>
  406624:	bl	412ae0 <wcrtomb@plt+0xddd0>
  406628:	ldr	w0, [sp, #44]
  40662c:	cmp	w0, #0x2
  406630:	b.eq	406780 <wcrtomb@plt+0x1a70>  // b.none
  406634:	ldr	w0, [sp, #44]
  406638:	cmp	w0, #0x2
  40663c:	b.hi	406c6c <wcrtomb@plt+0x1f5c>  // b.pmore
  406640:	ldr	w0, [sp, #44]
  406644:	cmp	w0, #0x0
  406648:	b.eq	40665c <wcrtomb@plt+0x194c>  // b.none
  40664c:	ldr	w0, [sp, #44]
  406650:	cmp	w0, #0x1
  406654:	b.eq	406740 <wcrtomb@plt+0x1a30>  // b.none
  406658:	b	406c6c <wcrtomb@plt+0x1f5c>
  40665c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406660:	add	x0, x0, #0x400
  406664:	str	wzr, [x0]
  406668:	add	x0, sp, #0x33
  40666c:	bl	40556c <wcrtomb@plt+0x85c>
  406670:	str	w0, [sp, #56]
  406674:	ldr	w0, [sp, #56]
  406678:	cmp	w0, #0x1
  40667c:	b.eq	4066e0 <wcrtomb@plt+0x19d0>  // b.none
  406680:	ldr	w0, [sp, #56]
  406684:	cmp	w0, #0x0
  406688:	b.eq	4066e0 <wcrtomb@plt+0x19d0>  // b.none
  40668c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406690:	add	x0, x0, #0x420
  406694:	ldr	x0, [x0]
  406698:	cmp	x0, #0x0
  40669c:	b.eq	4066b0 <wcrtomb@plt+0x19a0>  // b.none
  4066a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4066a4:	add	x0, x0, #0x420
  4066a8:	ldr	x0, [x0]
  4066ac:	blr	x0
  4066b0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4066b4:	add	x0, x0, #0x88
  4066b8:	bl	404c60 <gettext@plt>
  4066bc:	mov	x19, x0
  4066c0:	ldr	w0, [sp, #56]
  4066c4:	bl	405524 <wcrtomb@plt+0x814>
  4066c8:	mov	x3, x0
  4066cc:	mov	x2, x19
  4066d0:	mov	w1, #0x0                   	// #0
  4066d4:	mov	w0, #0x0                   	// #0
  4066d8:	bl	404100 <error@plt>
  4066dc:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4066e0:	ldrb	w0, [sp, #51]
  4066e4:	cmp	w0, #0x0
  4066e8:	b.eq	406c50 <wcrtomb@plt+0x1f40>  // b.none
  4066ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4066f0:	add	x0, x0, #0x420
  4066f4:	ldr	x0, [x0]
  4066f8:	cmp	x0, #0x0
  4066fc:	b.eq	406710 <wcrtomb@plt+0x1a00>  // b.none
  406700:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406704:	add	x0, x0, #0x420
  406708:	ldr	x0, [x0]
  40670c:	blr	x0
  406710:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  406714:	add	x0, x0, #0xed8
  406718:	bl	404c60 <gettext@plt>
  40671c:	mov	x2, x0
  406720:	mov	w1, #0x0                   	// #0
  406724:	mov	w0, #0x0                   	// #0
  406728:	bl	404100 <error@plt>
  40672c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406730:	add	x0, x0, #0xdb0
  406734:	mov	w1, #0x2                   	// #2
  406738:	str	w1, [x0]
  40673c:	b	406c50 <wcrtomb@plt+0x1f40>
  406740:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406744:	add	x0, x0, #0x400
  406748:	mov	w1, #0x1                   	// #1
  40674c:	str	w1, [x0]
  406750:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406754:	add	x0, x0, #0x3f0
  406758:	ldr	x0, [x0]
  40675c:	cmp	x0, #0x0
  406760:	b.ne	406c58 <wcrtomb@plt+0x1f48>  // b.any
  406764:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406768:	add	x0, x0, #0x498
  40676c:	ldr	x1, [x0]
  406770:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406774:	add	x0, x0, #0xf88
  406778:	str	x1, [x0]
  40677c:	b	406c58 <wcrtomb@plt+0x1f48>
  406780:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406784:	add	x0, x0, #0x400
  406788:	str	wzr, [x0]
  40678c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406790:	add	x0, x0, #0xfc8
  406794:	mov	w1, #0x1                   	// #1
  406798:	strb	w1, [x0]
  40679c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4067a0:	add	x0, x0, #0xfc0
  4067a4:	ldr	x1, [x0]
  4067a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4067ac:	add	x0, x0, #0xf98
  4067b0:	str	x1, [x0]
  4067b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4067b8:	add	x0, x0, #0x3f0
  4067bc:	ldr	x0, [x0]
  4067c0:	cmp	x0, #0x0
  4067c4:	b.ne	406c60 <wcrtomb@plt+0x1f50>  // b.any
  4067c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4067cc:	add	x0, x0, #0x498
  4067d0:	ldr	x1, [x0]
  4067d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4067d8:	add	x0, x0, #0xf88
  4067dc:	str	x1, [x0]
  4067e0:	b	406c60 <wcrtomb@plt+0x1f50>
  4067e4:	ldr	w0, [sp, #44]
  4067e8:	cmp	w0, #0x2
  4067ec:	b.eq	406ad4 <wcrtomb@plt+0x1dc4>  // b.none
  4067f0:	ldr	w0, [sp, #44]
  4067f4:	cmp	w0, #0x2
  4067f8:	b.hi	406c6c <wcrtomb@plt+0x1f5c>  // b.pmore
  4067fc:	ldr	w0, [sp, #44]
  406800:	cmp	w0, #0x0
  406804:	b.eq	406818 <wcrtomb@plt+0x1b08>  // b.none
  406808:	ldr	w0, [sp, #44]
  40680c:	cmp	w0, #0x1
  406810:	b.eq	406848 <wcrtomb@plt+0x1b38>  // b.none
  406814:	b	406c6c <wcrtomb@plt+0x1f5c>
  406818:	bl	4057e4 <wcrtomb@plt+0xad4>
  40681c:	mov	w1, w0
  406820:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406824:	add	x0, x0, #0x400
  406828:	str	w1, [x0]
  40682c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406830:	add	x0, x0, #0x400
  406834:	ldr	w0, [x0]
  406838:	cmp	w0, #0x0
  40683c:	b.lt	406c68 <wcrtomb@plt+0x1f58>  // b.tstop
  406840:	bl	4056fc <wcrtomb@plt+0x9ec>
  406844:	b	406c68 <wcrtomb@plt+0x1f58>
  406848:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40684c:	add	x0, x0, #0x325
  406850:	ldrb	w0, [x0]
  406854:	cmp	w0, #0x0
  406858:	b.eq	40687c <wcrtomb@plt+0x1b6c>  // b.none
  40685c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406860:	add	x0, x0, #0x2e0
  406864:	ldr	x0, [x0]
  406868:	ldr	x0, [x0]
  40686c:	mov	w1, #0x1                   	// #1
  406870:	bl	4250f8 <wcrtomb@plt+0x203e8>
  406874:	mov	w0, #0x1                   	// #1
  406878:	str	w0, [sp, #60]
  40687c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406880:	add	x0, x0, #0x37a
  406884:	ldrb	w0, [x0]
  406888:	cmp	w0, #0x0
  40688c:	b.eq	4069b4 <wcrtomb@plt+0x1ca4>  // b.none
  406890:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406894:	add	x0, x0, #0x428
  406898:	ldrb	w0, [x0]
  40689c:	eor	w0, w0, #0x1
  4068a0:	and	w0, w0, #0xff
  4068a4:	cmp	w0, #0x0
  4068a8:	b.eq	406988 <wcrtomb@plt+0x1c78>  // b.none
  4068ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4068b0:	add	x0, x0, #0x2e0
  4068b4:	ldr	x0, [x0]
  4068b8:	ldr	x0, [x0]
  4068bc:	mov	w1, #0x3a                  	// #58
  4068c0:	bl	404930 <strchr@plt>
  4068c4:	mov	x1, x0
  4068c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4068cc:	add	x0, x0, #0x430
  4068d0:	str	x1, [x0]
  4068d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4068d8:	add	x0, x0, #0x430
  4068dc:	ldr	x0, [x0]
  4068e0:	cmp	x0, #0x0
  4068e4:	b.eq	406988 <wcrtomb@plt+0x1c78>  // b.none
  4068e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4068ec:	add	x0, x0, #0x2e0
  4068f0:	ldr	x0, [x0]
  4068f4:	ldr	x1, [x0]
  4068f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4068fc:	add	x0, x0, #0x430
  406900:	ldr	x0, [x0]
  406904:	cmp	x1, x0
  406908:	b.cs	406988 <wcrtomb@plt+0x1c78>  // b.hs, b.nlast
  40690c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406910:	add	x0, x0, #0x2e0
  406914:	ldr	x0, [x0]
  406918:	ldr	x3, [x0]
  40691c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406920:	add	x0, x0, #0x430
  406924:	ldr	x1, [x0]
  406928:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40692c:	add	x0, x0, #0x2e0
  406930:	ldr	x0, [x0]
  406934:	ldr	x0, [x0]
  406938:	sub	x0, x1, x0
  40693c:	mov	x2, x0
  406940:	mov	w1, #0x2f                  	// #47
  406944:	mov	x0, x3
  406948:	bl	404a20 <memchr@plt>
  40694c:	cmp	x0, #0x0
  406950:	b.ne	406988 <wcrtomb@plt+0x1c78>  // b.any
  406954:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406958:	add	x0, x0, #0x2e0
  40695c:	ldr	x0, [x0]
  406960:	ldr	x4, [x0]
  406964:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406968:	add	x0, x0, #0x358
  40696c:	ldr	x0, [x0]
  406970:	mov	x3, x0
  406974:	mov	w2, #0x40000000            	// #1073741824
  406978:	mov	w1, #0x42                  	// #66
  40697c:	mov	x0, x4
  406980:	bl	43ba64 <wcrtomb@plt+0x36d54>
  406984:	b	4069a4 <wcrtomb@plt+0x1c94>
  406988:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40698c:	add	x0, x0, #0x2e0
  406990:	ldr	x0, [x0]
  406994:	ldr	x0, [x0]
  406998:	mov	w2, #0x1b6                 	// #438
  40699c:	mov	w1, #0x42                  	// #66
  4069a0:	bl	404430 <open@plt>
  4069a4:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  4069a8:	add	x1, x1, #0x400
  4069ac:	str	w0, [x1]
  4069b0:	b	406c6c <wcrtomb@plt+0x1f5c>
  4069b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4069b8:	add	x0, x0, #0x428
  4069bc:	ldrb	w0, [x0]
  4069c0:	eor	w0, w0, #0x1
  4069c4:	and	w0, w0, #0xff
  4069c8:	cmp	w0, #0x0
  4069cc:	b.eq	406aac <wcrtomb@plt+0x1d9c>  // b.none
  4069d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4069d4:	add	x0, x0, #0x2e0
  4069d8:	ldr	x0, [x0]
  4069dc:	ldr	x0, [x0]
  4069e0:	mov	w1, #0x3a                  	// #58
  4069e4:	bl	404930 <strchr@plt>
  4069e8:	mov	x1, x0
  4069ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4069f0:	add	x0, x0, #0x430
  4069f4:	str	x1, [x0]
  4069f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4069fc:	add	x0, x0, #0x430
  406a00:	ldr	x0, [x0]
  406a04:	cmp	x0, #0x0
  406a08:	b.eq	406aac <wcrtomb@plt+0x1d9c>  // b.none
  406a0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a10:	add	x0, x0, #0x2e0
  406a14:	ldr	x0, [x0]
  406a18:	ldr	x1, [x0]
  406a1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a20:	add	x0, x0, #0x430
  406a24:	ldr	x0, [x0]
  406a28:	cmp	x1, x0
  406a2c:	b.cs	406aac <wcrtomb@plt+0x1d9c>  // b.hs, b.nlast
  406a30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a34:	add	x0, x0, #0x2e0
  406a38:	ldr	x0, [x0]
  406a3c:	ldr	x3, [x0]
  406a40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a44:	add	x0, x0, #0x430
  406a48:	ldr	x1, [x0]
  406a4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a50:	add	x0, x0, #0x2e0
  406a54:	ldr	x0, [x0]
  406a58:	ldr	x0, [x0]
  406a5c:	sub	x0, x1, x0
  406a60:	mov	x2, x0
  406a64:	mov	w1, #0x2f                  	// #47
  406a68:	mov	x0, x3
  406a6c:	bl	404a20 <memchr@plt>
  406a70:	cmp	x0, #0x0
  406a74:	b.ne	406aac <wcrtomb@plt+0x1d9c>  // b.any
  406a78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a7c:	add	x0, x0, #0x2e0
  406a80:	ldr	x0, [x0]
  406a84:	ldr	x4, [x0]
  406a88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406a8c:	add	x0, x0, #0x358
  406a90:	ldr	x0, [x0]
  406a94:	mov	x3, x0
  406a98:	mov	w2, #0x40000000            	// #1073741824
  406a9c:	mov	w1, #0x41                  	// #65
  406aa0:	mov	x0, x4
  406aa4:	bl	43ba64 <wcrtomb@plt+0x36d54>
  406aa8:	b	406ac4 <wcrtomb@plt+0x1db4>
  406aac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406ab0:	add	x0, x0, #0x2e0
  406ab4:	ldr	x0, [x0]
  406ab8:	ldr	x0, [x0]
  406abc:	mov	w1, #0x1b6                 	// #438
  406ac0:	bl	404ca0 <creat@plt>
  406ac4:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  406ac8:	add	x1, x1, #0x400
  406acc:	str	w0, [x1]
  406ad0:	b	406c6c <wcrtomb@plt+0x1f5c>
  406ad4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406ad8:	add	x0, x0, #0x428
  406adc:	ldrb	w0, [x0]
  406ae0:	eor	w0, w0, #0x1
  406ae4:	and	w0, w0, #0xff
  406ae8:	cmp	w0, #0x0
  406aec:	b.eq	406bcc <wcrtomb@plt+0x1ebc>  // b.none
  406af0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406af4:	add	x0, x0, #0x2e0
  406af8:	ldr	x0, [x0]
  406afc:	ldr	x0, [x0]
  406b00:	mov	w1, #0x3a                  	// #58
  406b04:	bl	404930 <strchr@plt>
  406b08:	mov	x1, x0
  406b0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b10:	add	x0, x0, #0x430
  406b14:	str	x1, [x0]
  406b18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b1c:	add	x0, x0, #0x430
  406b20:	ldr	x0, [x0]
  406b24:	cmp	x0, #0x0
  406b28:	b.eq	406bcc <wcrtomb@plt+0x1ebc>  // b.none
  406b2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b30:	add	x0, x0, #0x2e0
  406b34:	ldr	x0, [x0]
  406b38:	ldr	x1, [x0]
  406b3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b40:	add	x0, x0, #0x430
  406b44:	ldr	x0, [x0]
  406b48:	cmp	x1, x0
  406b4c:	b.cs	406bcc <wcrtomb@plt+0x1ebc>  // b.hs, b.nlast
  406b50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b54:	add	x0, x0, #0x2e0
  406b58:	ldr	x0, [x0]
  406b5c:	ldr	x3, [x0]
  406b60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b64:	add	x0, x0, #0x430
  406b68:	ldr	x1, [x0]
  406b6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b70:	add	x0, x0, #0x2e0
  406b74:	ldr	x0, [x0]
  406b78:	ldr	x0, [x0]
  406b7c:	sub	x0, x1, x0
  406b80:	mov	x2, x0
  406b84:	mov	w1, #0x2f                  	// #47
  406b88:	mov	x0, x3
  406b8c:	bl	404a20 <memchr@plt>
  406b90:	cmp	x0, #0x0
  406b94:	b.ne	406bcc <wcrtomb@plt+0x1ebc>  // b.any
  406b98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406b9c:	add	x0, x0, #0x2e0
  406ba0:	ldr	x0, [x0]
  406ba4:	ldr	x4, [x0]
  406ba8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406bac:	add	x0, x0, #0x358
  406bb0:	ldr	x0, [x0]
  406bb4:	mov	x3, x0
  406bb8:	mov	w2, #0x40000000            	// #1073741824
  406bbc:	mov	w1, #0x42                  	// #66
  406bc0:	mov	x0, x4
  406bc4:	bl	43ba64 <wcrtomb@plt+0x36d54>
  406bc8:	b	406be8 <wcrtomb@plt+0x1ed8>
  406bcc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406bd0:	add	x0, x0, #0x2e0
  406bd4:	ldr	x0, [x0]
  406bd8:	ldr	x0, [x0]
  406bdc:	mov	w2, #0x1b6                 	// #438
  406be0:	mov	w1, #0x42                  	// #66
  406be4:	bl	404430 <open@plt>
  406be8:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  406bec:	add	x1, x1, #0x400
  406bf0:	str	w0, [x1]
  406bf4:	mov	x0, #0x0                   	// #0
  406bf8:	bl	40556c <wcrtomb@plt+0x85c>
  406bfc:	cmp	w0, #0x1
  406c00:	b.ls	406c48 <wcrtomb@plt+0x1f38>  // b.plast
  406c04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406c08:	add	x0, x0, #0x420
  406c0c:	ldr	x0, [x0]
  406c10:	cmp	x0, #0x0
  406c14:	b.eq	406c28 <wcrtomb@plt+0x1f18>  // b.none
  406c18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406c1c:	add	x0, x0, #0x420
  406c20:	ldr	x0, [x0]
  406c24:	blr	x0
  406c28:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  406c2c:	add	x0, x0, #0xb0
  406c30:	bl	404c60 <gettext@plt>
  406c34:	mov	x2, x0
  406c38:	mov	w1, #0x0                   	// #0
  406c3c:	mov	w0, #0x0                   	// #0
  406c40:	bl	404100 <error@plt>
  406c44:	bl	412ae0 <wcrtomb@plt+0xddd0>
  406c48:	nop
  406c4c:	b	406c6c <wcrtomb@plt+0x1f5c>
  406c50:	nop
  406c54:	b	406c6c <wcrtomb@plt+0x1f5c>
  406c58:	nop
  406c5c:	b	406c6c <wcrtomb@plt+0x1f5c>
  406c60:	nop
  406c64:	b	406c6c <wcrtomb@plt+0x1f5c>
  406c68:	nop
  406c6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406c70:	add	x0, x0, #0x400
  406c74:	ldr	w0, [x0]
  406c78:	cmp	w0, #0x0
  406c7c:	b.lt	406cb0 <wcrtomb@plt+0x1fa0>  // b.tstop
  406c80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406c84:	add	x0, x0, #0x400
  406c88:	ldr	w1, [x0]
  406c8c:	mov	w0, #0x3fffffff            	// #1073741823
  406c90:	cmp	w1, w0
  406c94:	b.gt	406cf0 <wcrtomb@plt+0x1fe0>
  406c98:	bl	42d92c <wcrtomb@plt+0x28c1c>
  406c9c:	and	w0, w0, #0xff
  406ca0:	eor	w0, w0, #0x1
  406ca4:	and	w0, w0, #0xff
  406ca8:	cmp	w0, #0x0
  406cac:	b.eq	406cf0 <wcrtomb@plt+0x1fe0>  // b.none
  406cb0:	bl	404bc0 <__errno_location@plt>
  406cb4:	ldr	w0, [x0]
  406cb8:	str	w0, [sp, #52]
  406cbc:	ldr	w0, [sp, #60]
  406cc0:	cmp	w0, #0x0
  406cc4:	b.eq	406ccc <wcrtomb@plt+0x1fbc>  // b.none
  406cc8:	bl	42542c <wcrtomb@plt+0x2071c>
  406ccc:	bl	404bc0 <__errno_location@plt>
  406cd0:	mov	x1, x0
  406cd4:	ldr	w0, [sp, #52]
  406cd8:	str	w0, [x1]
  406cdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406ce0:	add	x0, x0, #0x2e0
  406ce4:	ldr	x0, [x0]
  406ce8:	ldr	x0, [x0]
  406cec:	bl	43a640 <wcrtomb@plt+0x35930>
  406cf0:	bl	42da50 <wcrtomb@plt+0x28d40>
  406cf4:	bl	42d9d4 <wcrtomb@plt+0x28cc4>
  406cf8:	ldr	w0, [sp, #44]
  406cfc:	cmp	w0, #0x0
  406d00:	b.eq	406d18 <wcrtomb@plt+0x2008>  // b.none
  406d04:	ldr	w0, [sp, #44]
  406d08:	sub	w0, w0, #0x1
  406d0c:	cmp	w0, #0x1
  406d10:	b.hi	406d30 <wcrtomb@plt+0x2020>  // b.pmore
  406d14:	b	406d20 <wcrtomb@plt+0x2010>
  406d18:	bl	406030 <wcrtomb@plt+0x1320>
  406d1c:	b	406d30 <wcrtomb@plt+0x2020>
  406d20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406d24:	add	x0, x0, #0xfa0
  406d28:	str	xzr, [x0]
  406d2c:	nop
  406d30:	nop
  406d34:	ldr	x19, [sp, #16]
  406d38:	ldp	x29, x30, [sp], #64
  406d3c:	ret
  406d40:	stp	x29, x30, [sp, #-48]!
  406d44:	mov	x29, sp
  406d48:	mov	w0, #0x1                   	// #1
  406d4c:	bl	40b734 <wcrtomb@plt+0x6a24>
  406d50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406d54:	add	x0, x0, #0x2a8
  406d58:	ldr	d0, [x0]
  406d5c:	fcmp	d0, #0.0
  406d60:	b.eq	406d9c <wcrtomb@plt+0x208c>  // b.none
  406d64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406d68:	add	x0, x0, #0x2a8
  406d6c:	ldr	d1, [x0]
  406d70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406d74:	add	x0, x0, #0x4d0
  406d78:	ldr	d0, [x0]
  406d7c:	fcmpe	d1, d0
  406d80:	b.hi	406d9c <wcrtomb@plt+0x208c>  // b.pmore
  406d84:	bl	404bc0 <__errno_location@plt>
  406d88:	mov	x1, x0
  406d8c:	mov	w0, #0x1c                  	// #28
  406d90:	str	w0, [x1]
  406d94:	str	xzr, [sp, #40]
  406d98:	b	406dcc <wcrtomb@plt+0x20bc>
  406d9c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406da0:	add	x0, x0, #0x248
  406da4:	ldrb	w0, [x0]
  406da8:	cmp	w0, #0x0
  406dac:	b.eq	406dc4 <wcrtomb@plt+0x20b4>  // b.none
  406db0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406db4:	add	x0, x0, #0x3c8
  406db8:	ldr	x0, [x0]
  406dbc:	str	x0, [sp, #40]
  406dc0:	b	406dcc <wcrtomb@plt+0x20bc>
  406dc4:	bl	42dea4 <wcrtomb@plt+0x29194>
  406dc8:	str	x0, [sp, #40]
  406dcc:	ldr	x0, [sp, #40]
  406dd0:	cmp	x0, #0x0
  406dd4:	b.eq	406ee8 <wcrtomb@plt+0x21d8>  // b.none
  406dd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406ddc:	add	x0, x0, #0x7c
  406de0:	ldrb	w0, [x0]
  406de4:	cmp	w0, #0x0
  406de8:	b.eq	406ee8 <wcrtomb@plt+0x21d8>  // b.none
  406dec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406df0:	add	x0, x0, #0x538
  406df4:	ldr	w0, [x0]
  406df8:	cmp	w0, #0x0
  406dfc:	b.ne	406ee8 <wcrtomb@plt+0x21d8>  // b.any
  406e00:	ldr	x0, [sp, #40]
  406e04:	bl	404fdc <wcrtomb@plt+0x2cc>
  406e08:	str	x0, [sp, #32]
  406e0c:	ldr	x0, [sp, #32]
  406e10:	cmp	x0, #0x0
  406e14:	b.eq	406ee8 <wcrtomb@plt+0x21d8>  // b.none
  406e18:	ldr	x1, [sp, #40]
  406e1c:	ldr	x0, [sp, #32]
  406e20:	ldr	x0, [x0, #8]
  406e24:	lsl	x0, x0, #9
  406e28:	sub	x0, x1, x0
  406e2c:	str	x0, [sp, #24]
  406e30:	ldr	x0, [sp, #32]
  406e34:	ldr	x1, [x0, #40]
  406e38:	ldr	x0, [sp, #24]
  406e3c:	lsr	x0, x0, #9
  406e40:	add	x1, x1, x0
  406e44:	ldr	x0, [sp, #32]
  406e48:	str	x1, [x0, #40]
  406e4c:	ldr	x0, [sp, #32]
  406e50:	ldr	x0, [x0, #32]
  406e54:	mov	x1, x0
  406e58:	ldr	x0, [sp, #24]
  406e5c:	cmp	x0, x1
  406e60:	b.ls	406e70 <wcrtomb@plt+0x2160>  // b.plast
  406e64:	ldr	x0, [sp, #32]
  406e68:	ldr	x0, [x0, #32]
  406e6c:	str	x0, [sp, #24]
  406e70:	ldr	x0, [sp, #32]
  406e74:	ldr	x0, [x0, #32]
  406e78:	mov	x1, x0
  406e7c:	ldr	x0, [sp, #24]
  406e80:	sub	x0, x1, x0
  406e84:	mov	x1, x0
  406e88:	ldr	x0, [sp, #32]
  406e8c:	str	x1, [x0, #32]
  406e90:	ldr	x0, [sp, #32]
  406e94:	ldr	x0, [x0, #32]
  406e98:	cmp	x0, #0x0
  406e9c:	b.ne	406ec8 <wcrtomb@plt+0x21b8>  // b.any
  406ea0:	ldr	x0, [sp, #32]
  406ea4:	ldr	x1, [x0, #8]
  406ea8:	ldr	x0, [sp, #32]
  406eac:	ldr	x0, [x0, #40]
  406eb0:	add	x0, x1, x0
  406eb4:	str	x0, [sp, #16]
  406eb8:	ldr	x0, [sp, #32]
  406ebc:	ldr	x0, [x0]
  406ec0:	str	x0, [sp, #32]
  406ec4:	b	406ed4 <wcrtomb@plt+0x21c4>
  406ec8:	ldr	x0, [sp, #32]
  406ecc:	ldr	x0, [x0, #8]
  406ed0:	str	x0, [sp, #16]
  406ed4:	ldr	x0, [sp, #16]
  406ed8:	neg	x0, x0
  406edc:	mov	x1, x0
  406ee0:	ldr	x0, [sp, #32]
  406ee4:	bl	4050f4 <wcrtomb@plt+0x3e4>
  406ee8:	ldr	x0, [sp, #40]
  406eec:	ldp	x29, x30, [sp], #48
  406ef0:	ret
  406ef4:	stp	x29, x30, [sp, #-48]!
  406ef8:	mov	x29, sp
  406efc:	str	x0, [sp, #24]
  406f00:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406f04:	add	x0, x0, #0x2e9
  406f08:	ldrb	w0, [x0]
  406f0c:	cmp	w0, #0x0
  406f10:	b.eq	406f34 <wcrtomb@plt+0x2224>  // b.none
  406f14:	bl	404bc0 <__errno_location@plt>
  406f18:	ldr	w0, [x0]
  406f1c:	str	w0, [sp, #44]
  406f20:	bl	405f40 <wcrtomb@plt+0x1230>
  406f24:	bl	404bc0 <__errno_location@plt>
  406f28:	mov	x1, x0
  406f2c:	ldr	w0, [sp, #44]
  406f30:	str	w0, [x1]
  406f34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406f38:	add	x0, x0, #0x310
  406f3c:	ldr	x0, [x0]
  406f40:	ldr	x3, [x0]
  406f44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406f48:	add	x0, x0, #0x3c8
  406f4c:	ldr	x0, [x0]
  406f50:	mov	x2, x0
  406f54:	ldr	x1, [sp, #24]
  406f58:	mov	x0, x3
  406f5c:	bl	407c28 <wcrtomb@plt+0x2f18>
  406f60:	stp	x29, x30, [sp, #-16]!
  406f64:	mov	x29, sp
  406f68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406f6c:	add	x0, x0, #0x310
  406f70:	ldr	x0, [x0]
  406f74:	ldr	x0, [x0]
  406f78:	bl	43a684 <wcrtomb@plt+0x35974>
  406f7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406f80:	add	x0, x0, #0x500
  406f84:	ldr	x0, [x0]
  406f88:	cmp	x0, #0x0
  406f8c:	b.ne	406fd4 <wcrtomb@plt+0x22c4>  // b.any
  406f90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406f94:	add	x0, x0, #0x420
  406f98:	ldr	x0, [x0]
  406f9c:	cmp	x0, #0x0
  406fa0:	b.eq	406fb4 <wcrtomb@plt+0x22a4>  // b.none
  406fa4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406fa8:	add	x0, x0, #0x420
  406fac:	ldr	x0, [x0]
  406fb0:	blr	x0
  406fb4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  406fb8:	add	x0, x0, #0xd8
  406fbc:	bl	404c60 <gettext@plt>
  406fc0:	mov	x2, x0
  406fc4:	mov	w1, #0x0                   	// #0
  406fc8:	mov	w0, #0x0                   	// #0
  406fcc:	bl	404100 <error@plt>
  406fd0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  406fd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406fd8:	add	x0, x0, #0x50c
  406fdc:	ldr	w0, [x0]
  406fe0:	add	w2, w0, #0x1
  406fe4:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  406fe8:	add	x1, x1, #0x50c
  406fec:	str	w2, [x1]
  406ff0:	cmp	w0, #0xa
  406ff4:	b.le	40703c <wcrtomb@plt+0x232c>
  406ff8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  406ffc:	add	x0, x0, #0x420
  407000:	ldr	x0, [x0]
  407004:	cmp	x0, #0x0
  407008:	b.eq	40701c <wcrtomb@plt+0x230c>  // b.none
  40700c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407010:	add	x0, x0, #0x420
  407014:	ldr	x0, [x0]
  407018:	blr	x0
  40701c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407020:	add	x0, x0, #0x100
  407024:	bl	404c60 <gettext@plt>
  407028:	mov	x2, x0
  40702c:	mov	w1, #0x0                   	// #0
  407030:	mov	w0, #0x0                   	// #0
  407034:	bl	404100 <error@plt>
  407038:	bl	412ae0 <wcrtomb@plt+0xddd0>
  40703c:	nop
  407040:	ldp	x29, x30, [sp], #16
  407044:	ret
  407048:	stp	x29, x30, [sp, #-144]!
  40704c:	mov	x29, sp
  407050:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407054:	add	x0, x0, #0x400
  407058:	ldr	w0, [x0]
  40705c:	add	x1, sp, #0x10
  407060:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  407064:	cmp	w0, #0x0
  407068:	b.eq	407088 <wcrtomb@plt+0x2378>  // b.none
  40706c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407070:	add	x0, x0, #0x310
  407074:	ldr	x0, [x0]
  407078:	ldr	x0, [x0]
  40707c:	bl	4260e0 <wcrtomb@plt+0x213d0>
  407080:	mov	w0, #0x0                   	// #0
  407084:	b	4070bc <wcrtomb@plt+0x23ac>
  407088:	ldr	w0, [sp, #32]
  40708c:	and	w0, w0, #0xf000
  407090:	cmp	w0, #0x6, lsl #12
  407094:	b.eq	4070a8 <wcrtomb@plt+0x2398>  // b.none
  407098:	ldr	w0, [sp, #32]
  40709c:	and	w0, w0, #0xf000
  4070a0:	cmp	w0, #0x2, lsl #12
  4070a4:	b.ne	4070b0 <wcrtomb@plt+0x23a0>  // b.any
  4070a8:	mov	w0, #0x1                   	// #1
  4070ac:	b	4070b4 <wcrtomb@plt+0x23a4>
  4070b0:	mov	w0, #0x0                   	// #0
  4070b4:	and	w0, w0, #0x1
  4070b8:	and	w0, w0, #0xff
  4070bc:	ldp	x29, x30, [sp], #144
  4070c0:	ret
  4070c4:	stp	x29, x30, [sp, #-64]!
  4070c8:	mov	x29, sp
  4070cc:	str	x0, [sp, #24]
  4070d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4070d4:	add	x0, x0, #0xfc0
  4070d8:	ldr	x0, [x0]
  4070dc:	mov	x1, x0
  4070e0:	ldr	x0, [sp, #24]
  4070e4:	add	x0, x1, x0
  4070e8:	str	x0, [sp, #48]
  4070ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4070f0:	add	x0, x0, #0x3c8
  4070f4:	ldr	x1, [x0]
  4070f8:	ldr	x0, [sp, #24]
  4070fc:	sub	x0, x1, x0
  407100:	str	x0, [sp, #56]
  407104:	ldr	x0, [sp, #56]
  407108:	cmp	x0, #0x0
  40710c:	b.eq	4072f4 <wcrtomb@plt+0x25e4>  // b.none
  407110:	ldr	x0, [sp, #56]
  407114:	and	x0, x0, #0x1ff
  407118:	cmp	x0, #0x0
  40711c:	b.ne	4072f4 <wcrtomb@plt+0x25e4>  // b.any
  407120:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407124:	add	x0, x0, #0x24c
  407128:	ldr	w0, [x0]
  40712c:	and	w0, w0, #0x400000
  407130:	cmp	w0, #0x0
  407134:	b.eq	4072f4 <wcrtomb@plt+0x25e4>  // b.none
  407138:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40713c:	add	x0, x0, #0x500
  407140:	ldr	x0, [x0]
  407144:	cmp	x0, #0x0
  407148:	b.ne	4072f4 <wcrtomb@plt+0x25e4>  // b.any
  40714c:	ldr	x0, [sp, #24]
  407150:	cmp	x0, #0x0
  407154:	b.eq	4072f4 <wcrtomb@plt+0x25e4>  // b.none
  407158:	bl	407048 <wcrtomb@plt+0x2338>
  40715c:	and	w0, w0, #0xff
  407160:	cmp	w0, #0x0
  407164:	b.eq	4072f4 <wcrtomb@plt+0x25e4>  // b.none
  407168:	ldr	x0, [sp, #24]
  40716c:	lsr	x0, x0, #9
  407170:	str	x0, [sp, #40]
  407174:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407178:	add	x0, x0, #0x420
  40717c:	ldr	x0, [x0]
  407180:	cmp	x0, #0x0
  407184:	b.eq	407198 <wcrtomb@plt+0x2488>  // b.none
  407188:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40718c:	add	x0, x0, #0x420
  407190:	ldr	x0, [x0]
  407194:	blr	x0
  407198:	ldr	x2, [sp, #40]
  40719c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4071a0:	add	x1, x0, #0x120
  4071a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4071a8:	add	x0, x0, #0x140
  4071ac:	bl	404040 <ngettext@plt>
  4071b0:	ldr	x3, [sp, #40]
  4071b4:	mov	x2, x0
  4071b8:	mov	w1, #0x0                   	// #0
  4071bc:	mov	w0, #0x0                   	// #0
  4071c0:	bl	404100 <error@plt>
  4071c4:	b	4072f4 <wcrtomb@plt+0x25e4>
  4071c8:	ldr	x0, [sp, #24]
  4071cc:	cmp	x0, #0x0
  4071d0:	b.eq	407240 <wcrtomb@plt+0x2530>  // b.none
  4071d4:	b	4071dc <wcrtomb@plt+0x24cc>
  4071d8:	bl	406f60 <wcrtomb@plt+0x2250>
  4071dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4071e0:	add	x0, x0, #0x400
  4071e4:	ldr	w1, [x0]
  4071e8:	mov	w0, #0x3fffffff            	// #1073741823
  4071ec:	cmp	w1, w0
  4071f0:	b.le	407218 <wcrtomb@plt+0x2508>
  4071f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4071f8:	add	x0, x0, #0x400
  4071fc:	ldr	w1, [x0]
  407200:	mov	w0, #0xc0000000            	// #-1073741824
  407204:	add	w0, w1, w0
  407208:	ldr	x2, [sp, #56]
  40720c:	ldr	x1, [sp, #48]
  407210:	bl	43c0a0 <wcrtomb@plt+0x37390>
  407214:	b	407230 <wcrtomb@plt+0x2520>
  407218:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40721c:	add	x0, x0, #0x400
  407220:	ldr	w0, [x0]
  407224:	ldr	x2, [sp, #56]
  407228:	ldr	x1, [sp, #48]
  40722c:	bl	45a2ac <argp_usage@@Base+0x111c0>
  407230:	str	x0, [sp, #24]
  407234:	ldr	x0, [sp, #24]
  407238:	cmn	x0, #0x1
  40723c:	b.eq	4071d8 <wcrtomb@plt+0x24c8>  // b.none
  407240:	ldr	x0, [sp, #24]
  407244:	cmp	x0, #0x0
  407248:	b.eq	407334 <wcrtomb@plt+0x2624>  // b.none
  40724c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407250:	add	x0, x0, #0x511
  407254:	ldrb	w0, [x0]
  407258:	eor	w0, w0, #0x1
  40725c:	and	w0, w0, #0xff
  407260:	cmp	w0, #0x0
  407264:	b.eq	4072d4 <wcrtomb@plt+0x25c4>  // b.none
  407268:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40726c:	add	x0, x0, #0x3c8
  407270:	ldr	x1, [x0]
  407274:	ldr	x0, [sp, #56]
  407278:	sub	x0, x1, x0
  40727c:	str	x0, [sp, #32]
  407280:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407284:	add	x0, x0, #0x420
  407288:	ldr	x0, [x0]
  40728c:	cmp	x0, #0x0
  407290:	b.eq	4072a4 <wcrtomb@plt+0x2594>  // b.none
  407294:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407298:	add	x0, x0, #0x420
  40729c:	ldr	x0, [x0]
  4072a0:	blr	x0
  4072a4:	ldr	x2, [sp, #32]
  4072a8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4072ac:	add	x1, x0, #0x158
  4072b0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4072b4:	add	x0, x0, #0x180
  4072b8:	bl	404040 <ngettext@plt>
  4072bc:	ldr	x3, [sp, #32]
  4072c0:	mov	x2, x0
  4072c4:	mov	w1, #0x0                   	// #0
  4072c8:	mov	w0, #0x0                   	// #0
  4072cc:	bl	404100 <error@plt>
  4072d0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4072d4:	ldr	x1, [sp, #56]
  4072d8:	ldr	x0, [sp, #24]
  4072dc:	sub	x0, x1, x0
  4072e0:	str	x0, [sp, #56]
  4072e4:	ldr	x1, [sp, #48]
  4072e8:	ldr	x0, [sp, #24]
  4072ec:	add	x0, x1, x0
  4072f0:	str	x0, [sp, #48]
  4072f4:	ldr	x0, [sp, #56]
  4072f8:	and	x0, x0, #0x1ff
  4072fc:	cmp	x0, #0x0
  407300:	b.ne	4071c8 <wcrtomb@plt+0x24b8>  // b.any
  407304:	ldr	x0, [sp, #56]
  407308:	cmp	x0, #0x0
  40730c:	b.eq	407338 <wcrtomb@plt+0x2628>  // b.none
  407310:	ldr	x0, [sp, #24]
  407314:	cmp	x0, #0x0
  407318:	b.eq	407338 <wcrtomb@plt+0x2628>  // b.none
  40731c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407320:	add	x0, x0, #0x511
  407324:	ldrb	w0, [x0]
  407328:	cmp	w0, #0x0
  40732c:	b.ne	4071c8 <wcrtomb@plt+0x24b8>  // b.any
  407330:	b	407338 <wcrtomb@plt+0x2628>
  407334:	nop
  407338:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40733c:	add	x0, x0, #0xfc0
  407340:	ldr	x1, [x0]
  407344:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407348:	add	x0, x0, #0x3c8
  40734c:	ldr	x2, [x0]
  407350:	ldr	x0, [sp, #56]
  407354:	sub	x0, x2, x0
  407358:	and	x0, x0, #0xfffffffffffffe00
  40735c:	add	x1, x1, x0
  407360:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407364:	add	x0, x0, #0xf98
  407368:	str	x1, [x0]
  40736c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407370:	add	x0, x0, #0xf90
  407374:	ldr	x0, [x0]
  407378:	add	x1, x0, #0x1
  40737c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407380:	add	x0, x0, #0xf90
  407384:	str	x1, [x0]
  407388:	nop
  40738c:	ldp	x29, x30, [sp], #64
  407390:	ret
  407394:	stp	x29, x30, [sp, #-32]!
  407398:	mov	x29, sp
  40739c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4073a0:	add	x0, x0, #0xfa8
  4073a4:	ldr	w0, [x0]
  4073a8:	cmp	w0, #0x0
  4073ac:	b.ne	4074ac <wcrtomb@plt+0x279c>  // b.any
  4073b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4073b4:	add	x0, x0, #0x410
  4073b8:	ldrb	w0, [x0]
  4073bc:	cmp	w0, #0x0
  4073c0:	b.eq	4074ac <wcrtomb@plt+0x279c>  // b.none
  4073c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4073c8:	add	x0, x0, #0xfa8
  4073cc:	mov	w1, #0x1                   	// #1
  4073d0:	str	w1, [x0]
  4073d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4073d8:	add	x0, x0, #0x410
  4073dc:	strb	wzr, [x0]
  4073e0:	bl	4075b4 <wcrtomb@plt+0x28a4>
  4073e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4073e8:	add	x0, x0, #0xf98
  4073ec:	ldr	x1, [x0]
  4073f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4073f4:	add	x0, x0, #0xfc0
  4073f8:	ldr	x0, [x0]
  4073fc:	sub	x0, x1, x0
  407400:	asr	x0, x0, #9
  407404:	mov	x1, x0
  407408:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40740c:	add	x0, x0, #0x31c
  407410:	ldr	w0, [x0]
  407414:	sxtw	x0, w0
  407418:	cmp	x1, x0
  40741c:	b.ge	4074ac <wcrtomb@plt+0x279c>  // b.tcont
  407420:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407424:	add	x0, x0, #0xf98
  407428:	ldr	x3, [x0]
  40742c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407430:	add	x0, x0, #0x31c
  407434:	ldr	w0, [x0]
  407438:	sxtw	x0, w0
  40743c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407440:	add	x1, x1, #0xf98
  407444:	ldr	x2, [x1]
  407448:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40744c:	add	x1, x1, #0xfc0
  407450:	ldr	x1, [x1]
  407454:	sub	x1, x2, x1
  407458:	asr	x1, x1, #9
  40745c:	neg	x1, x1
  407460:	add	x0, x0, x1
  407464:	lsl	x0, x0, #9
  407468:	mov	x2, x0
  40746c:	mov	w1, #0x0                   	// #0
  407470:	mov	x0, x3
  407474:	bl	4044d0 <memset@plt>
  407478:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40747c:	add	x0, x0, #0xfc0
  407480:	ldr	x1, [x0]
  407484:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407488:	add	x0, x0, #0x31c
  40748c:	ldr	w0, [x0]
  407490:	sxtw	x0, w0
  407494:	lsl	x0, x0, #9
  407498:	add	x1, x1, x0
  40749c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4074a0:	add	x0, x0, #0xf98
  4074a4:	str	x1, [x0]
  4074a8:	b	4075ac <wcrtomb@plt+0x289c>
  4074ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4074b0:	add	x0, x0, #0xfd8
  4074b4:	ldr	x0, [x0]
  4074b8:	mov	x1, x0
  4074bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4074c0:	add	x0, x0, #0xfc0
  4074c4:	ldr	x0, [x0]
  4074c8:	sub	x0, x1, x0
  4074cc:	str	x0, [sp, #24]
  4074d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4074d4:	add	x0, x0, #0xf98
  4074d8:	ldr	x1, [x0]
  4074dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4074e0:	add	x0, x0, #0xfc0
  4074e4:	ldr	x0, [x0]
  4074e8:	sub	x0, x1, x0
  4074ec:	asr	x0, x0, #9
  4074f0:	mov	x1, x0
  4074f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4074f8:	add	x0, x0, #0x500
  4074fc:	ldr	x0, [x0]
  407500:	add	x1, x1, x0
  407504:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407508:	add	x0, x0, #0x500
  40750c:	str	x1, [x0]
  407510:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407514:	add	x0, x0, #0xfc0
  407518:	ldr	x1, [x0]
  40751c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407520:	add	x0, x0, #0xfd8
  407524:	str	x1, [x0]
  407528:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40752c:	add	x0, x0, #0xfc0
  407530:	ldr	x1, [x0]
  407534:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407538:	add	x0, x0, #0x31c
  40753c:	ldr	w0, [x0]
  407540:	sxtw	x0, w0
  407544:	lsl	x0, x0, #9
  407548:	add	x1, x1, x0
  40754c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407550:	add	x0, x0, #0xf98
  407554:	str	x1, [x0]
  407558:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40755c:	add	x0, x0, #0xfa8
  407560:	ldr	w0, [x0]
  407564:	cmp	w0, #0x2
  407568:	b.eq	4075a8 <wcrtomb@plt+0x2898>  // b.none
  40756c:	cmp	w0, #0x2
  407570:	b.hi	4075ac <wcrtomb@plt+0x289c>  // b.pmore
  407574:	cmp	w0, #0x0
  407578:	b.eq	407588 <wcrtomb@plt+0x2878>  // b.none
  40757c:	cmp	w0, #0x1
  407580:	b.eq	407590 <wcrtomb@plt+0x2880>  // b.none
  407584:	b	4075ac <wcrtomb@plt+0x289c>
  407588:	bl	40a67c <wcrtomb@plt+0x596c>
  40758c:	b	4075ac <wcrtomb@plt+0x289c>
  407590:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407594:	add	x0, x0, #0x518
  407598:	ldr	x1, [x0]
  40759c:	ldr	x0, [sp, #24]
  4075a0:	blr	x1
  4075a4:	b	4075ac <wcrtomb@plt+0x289c>
  4075a8:	bl	404710 <abort@plt>
  4075ac:	ldp	x29, x30, [sp], #32
  4075b0:	ret
  4075b4:	stp	x29, x30, [sp, #-32]!
  4075b8:	mov	x29, sp
  4075bc:	mov	w0, #0x4                   	// #4
  4075c0:	strh	w0, [sp, #16]
  4075c4:	mov	w0, #0x1                   	// #1
  4075c8:	str	w0, [sp, #20]
  4075cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4075d0:	add	x0, x0, #0x400
  4075d4:	ldr	w1, [x0]
  4075d8:	mov	w0, #0x3fffffff            	// #1073741823
  4075dc:	cmp	w1, w0
  4075e0:	b.le	40761c <wcrtomb@plt+0x290c>
  4075e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4075e8:	add	x0, x0, #0x400
  4075ec:	ldr	w1, [x0]
  4075f0:	mov	w0, #0xc0000000            	// #-1073741824
  4075f4:	add	w0, w1, w0
  4075f8:	add	x1, sp, #0x10
  4075fc:	mov	x2, x1
  407600:	mov	w1, #0x6d01                	// #27905
  407604:	movk	w1, #0x4008, lsl #16
  407608:	bl	43c43c <wcrtomb@plt+0x3772c>
  40760c:	mvn	w0, w0
  407610:	lsr	w0, w0, #31
  407614:	and	w0, w0, #0xff
  407618:	b	407648 <wcrtomb@plt+0x2938>
  40761c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407620:	add	x0, x0, #0x400
  407624:	ldr	w0, [x0]
  407628:	add	x1, sp, #0x10
  40762c:	mov	x2, x1
  407630:	mov	x1, #0x6d01                	// #27905
  407634:	movk	x1, #0x4008, lsl #16
  407638:	bl	404cc0 <ioctl@plt>
  40763c:	mvn	w0, w0
  407640:	lsr	w0, w0, #31
  407644:	and	w0, w0, #0xff
  407648:	cmp	w0, #0x0
  40764c:	b.ne	40787c <wcrtomb@plt+0x2b6c>  // b.any
  407650:	bl	404bc0 <__errno_location@plt>
  407654:	ldr	w0, [x0]
  407658:	cmp	w0, #0x5
  40765c:	b.ne	4076e4 <wcrtomb@plt+0x29d4>  // b.any
  407660:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407664:	add	x0, x0, #0x400
  407668:	ldr	w1, [x0]
  40766c:	mov	w0, #0x3fffffff            	// #1073741823
  407670:	cmp	w1, w0
  407674:	b.le	4076b0 <wcrtomb@plt+0x29a0>
  407678:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40767c:	add	x0, x0, #0x400
  407680:	ldr	w1, [x0]
  407684:	mov	w0, #0xc0000000            	// #-1073741824
  407688:	add	w0, w1, w0
  40768c:	add	x1, sp, #0x10
  407690:	mov	x2, x1
  407694:	mov	w1, #0x6d01                	// #27905
  407698:	movk	w1, #0x4008, lsl #16
  40769c:	bl	43c43c <wcrtomb@plt+0x3772c>
  4076a0:	mvn	w0, w0
  4076a4:	lsr	w0, w0, #31
  4076a8:	and	w0, w0, #0xff
  4076ac:	b	4076dc <wcrtomb@plt+0x29cc>
  4076b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4076b4:	add	x0, x0, #0x400
  4076b8:	ldr	w0, [x0]
  4076bc:	add	x1, sp, #0x10
  4076c0:	mov	x2, x1
  4076c4:	mov	x1, #0x6d01                	// #27905
  4076c8:	movk	x1, #0x4008, lsl #16
  4076cc:	bl	404cc0 <ioctl@plt>
  4076d0:	mvn	w0, w0
  4076d4:	lsr	w0, w0, #31
  4076d8:	and	w0, w0, #0xff
  4076dc:	cmp	w0, #0x0
  4076e0:	b.ne	407884 <wcrtomb@plt+0x2b74>  // b.any
  4076e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4076e8:	add	x0, x0, #0x400
  4076ec:	ldr	w1, [x0]
  4076f0:	mov	w0, #0x3fffffff            	// #1073741823
  4076f4:	cmp	w1, w0
  4076f8:	b.le	407720 <wcrtomb@plt+0x2a10>
  4076fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407700:	add	x0, x0, #0x400
  407704:	ldr	w1, [x0]
  407708:	mov	w0, #0xc0000000            	// #-1073741824
  40770c:	add	w0, w1, w0
  407710:	mov	w2, #0x1                   	// #1
  407714:	mov	x1, #0x0                   	// #0
  407718:	bl	43c2b4 <wcrtomb@plt+0x375a4>
  40771c:	b	407738 <wcrtomb@plt+0x2a28>
  407720:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407724:	add	x0, x0, #0x400
  407728:	ldr	w0, [x0]
  40772c:	mov	w2, #0x1                   	// #1
  407730:	mov	x1, #0x0                   	// #0
  407734:	bl	4042b0 <lseek@plt>
  407738:	str	x0, [sp, #24]
  40773c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407740:	add	x0, x0, #0xf98
  407744:	ldr	x0, [x0]
  407748:	mov	x1, x0
  40774c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407750:	add	x0, x0, #0xfc0
  407754:	ldr	x0, [x0]
  407758:	sub	x0, x1, x0
  40775c:	ldr	x1, [sp, #24]
  407760:	sub	x0, x1, x0
  407764:	str	x0, [sp, #24]
  407768:	ldr	x0, [sp, #24]
  40776c:	cmp	x0, #0x0
  407770:	b.ge	407778 <wcrtomb@plt+0x2a68>  // b.tcont
  407774:	str	xzr, [sp, #24]
  407778:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40777c:	add	x0, x0, #0x400
  407780:	ldr	w1, [x0]
  407784:	mov	w0, #0x3fffffff            	// #1073741823
  407788:	cmp	w1, w0
  40778c:	b.le	4077b4 <wcrtomb@plt+0x2aa4>
  407790:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407794:	add	x0, x0, #0x400
  407798:	ldr	w1, [x0]
  40779c:	mov	w0, #0xc0000000            	// #-1073741824
  4077a0:	add	w0, w1, w0
  4077a4:	mov	w2, #0x0                   	// #0
  4077a8:	ldr	x1, [sp, #24]
  4077ac:	bl	43c2b4 <wcrtomb@plt+0x375a4>
  4077b0:	b	4077cc <wcrtomb@plt+0x2abc>
  4077b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4077b8:	add	x0, x0, #0x400
  4077bc:	ldr	w0, [x0]
  4077c0:	mov	w2, #0x0                   	// #0
  4077c4:	ldr	x1, [sp, #24]
  4077c8:	bl	4042b0 <lseek@plt>
  4077cc:	ldr	x1, [sp, #24]
  4077d0:	cmp	x0, x1
  4077d4:	b.eq	407888 <wcrtomb@plt+0x2b78>  // b.none
  4077d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4077dc:	add	x0, x0, #0x420
  4077e0:	ldr	x0, [x0]
  4077e4:	cmp	x0, #0x0
  4077e8:	b.eq	4077fc <wcrtomb@plt+0x2aec>  // b.none
  4077ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4077f0:	add	x0, x0, #0x420
  4077f4:	ldr	x0, [x0]
  4077f8:	blr	x0
  4077fc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407800:	add	x0, x0, #0x1a8
  407804:	bl	404c60 <gettext@plt>
  407808:	mov	x2, x0
  40780c:	mov	w1, #0x0                   	// #0
  407810:	mov	w0, #0x0                   	// #0
  407814:	bl	404100 <error@plt>
  407818:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40781c:	add	x0, x0, #0xfc0
  407820:	ldr	x0, [x0]
  407824:	mov	x1, x0
  407828:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40782c:	add	x0, x0, #0x418
  407830:	ldr	x0, [x0]
  407834:	cmp	x1, x0
  407838:	b.eq	407888 <wcrtomb@plt+0x2b78>  // b.none
  40783c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407840:	add	x0, x0, #0xfc0
  407844:	ldr	x0, [x0]
  407848:	mov	x3, x0
  40784c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407850:	add	x0, x0, #0x418
  407854:	ldr	x0, [x0]
  407858:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40785c:	add	x1, x1, #0xfc0
  407860:	ldr	x1, [x1]
  407864:	sub	x0, x0, x1
  407868:	mov	x2, x0
  40786c:	mov	w1, #0x0                   	// #0
  407870:	mov	x0, x3
  407874:	bl	4044d0 <memset@plt>
  407878:	b	407888 <wcrtomb@plt+0x2b78>
  40787c:	nop
  407880:	b	407888 <wcrtomb@plt+0x2b78>
  407884:	nop
  407888:	ldp	x29, x30, [sp], #32
  40788c:	ret
  407890:	stp	x29, x30, [sp, #-80]!
  407894:	mov	x29, sp
  407898:	str	x0, [sp, #24]
  40789c:	bl	405f78 <wcrtomb@plt+0x1268>
  4078a0:	str	x0, [sp, #72]
  4078a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4078a8:	add	x0, x0, #0x31c
  4078ac:	ldr	w0, [x0]
  4078b0:	sxtw	x0, w0
  4078b4:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4078b8:	add	x1, x1, #0xfd8
  4078bc:	ldr	x2, [x1]
  4078c0:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4078c4:	add	x1, x1, #0xfc0
  4078c8:	ldr	x1, [x1]
  4078cc:	sub	x1, x2, x1
  4078d0:	asr	x1, x1, #9
  4078d4:	neg	x1, x1
  4078d8:	add	x0, x0, x1
  4078dc:	lsl	x0, x0, #9
  4078e0:	str	x0, [sp, #64]
  4078e4:	ldr	x1, [sp, #24]
  4078e8:	ldr	x0, [sp, #64]
  4078ec:	cmp	x1, x0
  4078f0:	b.gt	4078fc <wcrtomb@plt+0x2bec>
  4078f4:	mov	x0, #0x0                   	// #0
  4078f8:	b	407ad4 <wcrtomb@plt+0x2dc4>
  4078fc:	ldr	x1, [sp, #24]
  407900:	ldr	x0, [sp, #64]
  407904:	sub	x0, x1, x0
  407908:	mov	x1, x0
  40790c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407910:	add	x0, x0, #0x3c8
  407914:	ldr	x0, [x0]
  407918:	udiv	x0, x1, x0
  40791c:	str	x0, [sp, #56]
  407920:	ldr	x0, [sp, #56]
  407924:	cmp	x0, #0x0
  407928:	b.ne	407934 <wcrtomb@plt+0x2c24>  // b.any
  40792c:	mov	x0, #0x0                   	// #0
  407930:	b	407ad4 <wcrtomb@plt+0x2dc4>
  407934:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407938:	add	x0, x0, #0x400
  40793c:	ldr	w1, [x0]
  407940:	mov	w0, #0x3fffffff            	// #1073741823
  407944:	cmp	w1, w0
  407948:	b.le	407988 <wcrtomb@plt+0x2c78>
  40794c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407950:	add	x0, x0, #0x400
  407954:	ldr	w1, [x0]
  407958:	mov	w0, #0xc0000000            	// #-1073741824
  40795c:	add	w3, w1, w0
  407960:	ldr	x1, [sp, #56]
  407964:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407968:	add	x0, x0, #0x3c8
  40796c:	ldr	x0, [x0]
  407970:	mul	x0, x1, x0
  407974:	mov	w2, #0x1                   	// #1
  407978:	mov	x1, x0
  40797c:	mov	w0, w3
  407980:	bl	43c2b4 <wcrtomb@plt+0x375a4>
  407984:	b	4079b8 <wcrtomb@plt+0x2ca8>
  407988:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40798c:	add	x0, x0, #0x400
  407990:	ldr	w3, [x0]
  407994:	ldr	x1, [sp, #56]
  407998:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40799c:	add	x0, x0, #0x3c8
  4079a0:	ldr	x0, [x0]
  4079a4:	mul	x0, x1, x0
  4079a8:	mov	w2, #0x1                   	// #1
  4079ac:	mov	x1, x0
  4079b0:	mov	w0, w3
  4079b4:	bl	4042b0 <lseek@plt>
  4079b8:	str	x0, [sp, #48]
  4079bc:	ldr	x0, [sp, #48]
  4079c0:	cmp	x0, #0x0
  4079c4:	b.ge	4079d0 <wcrtomb@plt+0x2cc0>  // b.tcont
  4079c8:	ldr	x0, [sp, #48]
  4079cc:	b	407ad4 <wcrtomb@plt+0x2dc4>
  4079d0:	ldr	x0, [sp, #48]
  4079d4:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  4079d8:	add	x1, x1, #0x3c8
  4079dc:	ldr	x1, [x1]
  4079e0:	udiv	x2, x0, x1
  4079e4:	mul	x1, x2, x1
  4079e8:	sub	x0, x0, x1
  4079ec:	cmp	x0, #0x0
  4079f0:	b.eq	407a38 <wcrtomb@plt+0x2d28>  // b.none
  4079f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4079f8:	add	x0, x0, #0x420
  4079fc:	ldr	x0, [x0]
  407a00:	cmp	x0, #0x0
  407a04:	b.eq	407a18 <wcrtomb@plt+0x2d08>  // b.none
  407a08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407a0c:	add	x0, x0, #0x420
  407a10:	ldr	x0, [x0]
  407a14:	blr	x0
  407a18:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407a1c:	add	x0, x0, #0x1e8
  407a20:	bl	404c60 <gettext@plt>
  407a24:	mov	x2, x0
  407a28:	mov	w1, #0x0                   	// #0
  407a2c:	mov	w0, #0x0                   	// #0
  407a30:	bl	404100 <error@plt>
  407a34:	bl	412ae0 <wcrtomb@plt+0xddd0>
  407a38:	ldr	x0, [sp, #48]
  407a3c:	add	x1, x0, #0x1ff
  407a40:	cmp	x0, #0x0
  407a44:	csel	x0, x1, x0, lt  // lt = tstop
  407a48:	asr	x0, x0, #9
  407a4c:	str	x0, [sp, #48]
  407a50:	ldr	x1, [sp, #48]
  407a54:	ldr	x0, [sp, #72]
  407a58:	sub	x0, x1, x0
  407a5c:	str	x0, [sp, #40]
  407a60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407a64:	add	x0, x0, #0x31c
  407a68:	ldr	w0, [x0]
  407a6c:	sxtw	x0, w0
  407a70:	ldr	x1, [sp, #40]
  407a74:	sdiv	x1, x1, x0
  407a78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407a7c:	add	x0, x0, #0xf90
  407a80:	ldr	x0, [x0]
  407a84:	add	x1, x1, x0
  407a88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407a8c:	add	x0, x0, #0xf90
  407a90:	str	x1, [x0]
  407a94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407a98:	add	x0, x0, #0x31c
  407a9c:	ldr	w0, [x0]
  407aa0:	sxtw	x0, w0
  407aa4:	ldr	x1, [sp, #48]
  407aa8:	sub	x1, x1, x0
  407aac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407ab0:	add	x0, x0, #0x500
  407ab4:	str	x1, [x0]
  407ab8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407abc:	add	x0, x0, #0xf98
  407ac0:	ldr	x1, [x0]
  407ac4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407ac8:	add	x0, x0, #0xfd8
  407acc:	str	x1, [x0]
  407ad0:	ldr	x0, [sp, #40]
  407ad4:	ldp	x29, x30, [sp], #80
  407ad8:	ret
  407adc:	stp	x29, x30, [sp, #-16]!
  407ae0:	mov	x29, sp
  407ae4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407ae8:	add	x0, x0, #0x410
  407aec:	ldrb	w0, [x0]
  407af0:	cmp	w0, #0x0
  407af4:	b.ne	407b0c <wcrtomb@plt+0x2dfc>  // b.any
  407af8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407afc:	add	x0, x0, #0xfa8
  407b00:	ldr	w0, [x0]
  407b04:	cmp	w0, #0x1
  407b08:	b.ne	407b30 <wcrtomb@plt+0x2e20>  // b.any
  407b0c:	bl	407394 <wcrtomb@plt+0x2684>
  407b10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407b14:	add	x0, x0, #0xfd8
  407b18:	ldr	x1, [x0]
  407b1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407b20:	add	x0, x0, #0xfc0
  407b24:	ldr	x0, [x0]
  407b28:	cmp	x1, x0
  407b2c:	b.hi	407b0c <wcrtomb@plt+0x2dfc>  // b.pmore
  407b30:	bl	4052c4 <wcrtomb@plt+0x5b4>
  407b34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407b38:	add	x0, x0, #0x37a
  407b3c:	ldrb	w0, [x0]
  407b40:	cmp	w0, #0x0
  407b44:	b.eq	407b4c <wcrtomb@plt+0x2e3c>  // b.none
  407b48:	bl	40ca58 <wcrtomb@plt+0x7d48>
  407b4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407b50:	add	x0, x0, #0x400
  407b54:	ldr	w1, [x0]
  407b58:	mov	w0, #0x3fffffff            	// #1073741823
  407b5c:	cmp	w1, w0
  407b60:	b.le	407b8c <wcrtomb@plt+0x2e7c>
  407b64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407b68:	add	x0, x0, #0x400
  407b6c:	ldr	w1, [x0]
  407b70:	mov	w0, #0xc0000000            	// #-1073741824
  407b74:	add	w0, w1, w0
  407b78:	bl	43c048 <wcrtomb@plt+0x37338>
  407b7c:	cmp	w0, #0x0
  407b80:	cset	w0, ne  // ne = any
  407b84:	and	w0, w0, #0xff
  407b88:	b	407ba8 <wcrtomb@plt+0x2e98>
  407b8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407b90:	add	x0, x0, #0x400
  407b94:	ldr	w0, [x0]
  407b98:	bl	404660 <close@plt>
  407b9c:	cmp	w0, #0x0
  407ba0:	cset	w0, ne  // ne = any
  407ba4:	and	w0, w0, #0xff
  407ba8:	cmp	w0, #0x0
  407bac:	b.eq	407bc4 <wcrtomb@plt+0x2eb4>  // b.none
  407bb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407bb4:	add	x0, x0, #0x310
  407bb8:	ldr	x0, [x0]
  407bbc:	ldr	x0, [x0]
  407bc0:	bl	43a490 <wcrtomb@plt+0x35780>
  407bc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407bc8:	add	x0, x0, #0x508
  407bcc:	ldr	w2, [x0]
  407bd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407bd4:	add	x0, x0, #0x510
  407bd8:	ldrb	w0, [x0]
  407bdc:	mov	w1, w0
  407be0:	mov	w0, w2
  407be4:	bl	42db28 <wcrtomb@plt+0x28e18>
  407be8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407bec:	add	x0, x0, #0x90
  407bf0:	bl	434ecc <wcrtomb@plt+0x301bc>
  407bf4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407bf8:	add	x0, x0, #0x4d8
  407bfc:	ldr	x0, [x0]
  407c00:	bl	404880 <free@plt>
  407c04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407c08:	add	x0, x0, #0x4d8
  407c0c:	ldr	x0, [x0, #8]
  407c10:	bl	404880 <free@plt>
  407c14:	mov	x0, #0x0                   	// #0
  407c18:	bl	405048 <wcrtomb@plt+0x338>
  407c1c:	nop
  407c20:	ldp	x29, x30, [sp], #16
  407c24:	ret
  407c28:	stp	x29, x30, [sp, #-48]!
  407c2c:	mov	x29, sp
  407c30:	str	x0, [sp, #40]
  407c34:	str	x1, [sp, #32]
  407c38:	str	x2, [sp, #24]
  407c3c:	ldr	x0, [sp, #32]
  407c40:	ldr	x2, [sp, #24]
  407c44:	mov	x1, x0
  407c48:	ldr	x0, [sp, #40]
  407c4c:	bl	43ad14 <wcrtomb@plt+0x36004>
  407c50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407c54:	add	x0, x0, #0x400
  407c58:	ldr	w1, [x0]
  407c5c:	mov	w0, #0x3fffffff            	// #1073741823
  407c60:	cmp	w1, w0
  407c64:	b.le	407c90 <wcrtomb@plt+0x2f80>
  407c68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407c6c:	add	x0, x0, #0x400
  407c70:	ldr	w1, [x0]
  407c74:	mov	w0, #0xc0000000            	// #-1073741824
  407c78:	add	w0, w1, w0
  407c7c:	bl	43c048 <wcrtomb@plt+0x37338>
  407c80:	cmp	w0, #0x0
  407c84:	cset	w0, ne  // ne = any
  407c88:	and	w0, w0, #0xff
  407c8c:	b	407cac <wcrtomb@plt+0x2f9c>
  407c90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407c94:	add	x0, x0, #0x400
  407c98:	ldr	w0, [x0]
  407c9c:	bl	404660 <close@plt>
  407ca0:	cmp	w0, #0x0
  407ca4:	cset	w0, ne  // ne = any
  407ca8:	and	w0, w0, #0xff
  407cac:	cmp	w0, #0x0
  407cb0:	b.eq	407cc8 <wcrtomb@plt+0x2fb8>  // b.none
  407cb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407cb8:	add	x0, x0, #0x310
  407cbc:	ldr	x0, [x0]
  407cc0:	ldr	x0, [x0]
  407cc4:	bl	43a490 <wcrtomb@plt+0x35780>
  407cc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407ccc:	add	x0, x0, #0x508
  407cd0:	ldr	w0, [x0]
  407cd4:	mov	w1, #0x0                   	// #0
  407cd8:	bl	42db28 <wcrtomb@plt+0x28e18>
  407cdc:	bl	412ae0 <wcrtomb@plt+0xddd0>
  407ce0:	stp	x29, x30, [sp, #-48]!
  407ce4:	mov	x29, sp
  407ce8:	str	x19, [sp, #16]
  407cec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407cf0:	add	x0, x0, #0x2c8
  407cf4:	ldr	x2, [x0]
  407cf8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407cfc:	add	x1, x0, #0x218
  407d00:	mov	x0, x2
  407d04:	bl	4043d0 <fopen@plt>
  407d08:	str	x0, [sp, #40]
  407d0c:	ldr	x0, [sp, #40]
  407d10:	cmp	x0, #0x0
  407d14:	b.eq	407dec <wcrtomb@plt+0x30dc>  // b.none
  407d18:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407d1c:	add	x2, x0, #0x69c
  407d20:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407d24:	add	x1, x0, #0x220
  407d28:	ldr	x0, [sp, #40]
  407d2c:	bl	404450 <__isoc99_fscanf@plt>
  407d30:	cmp	w0, #0x1
  407d34:	b.ne	407d4c <wcrtomb@plt+0x303c>  // b.any
  407d38:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407d3c:	add	x0, x0, #0x69c
  407d40:	ldr	w0, [x0]
  407d44:	cmp	w0, #0x0
  407d48:	b.ge	407da8 <wcrtomb@plt+0x3098>  // b.tcont
  407d4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407d50:	add	x0, x0, #0x420
  407d54:	ldr	x0, [x0]
  407d58:	cmp	x0, #0x0
  407d5c:	b.eq	407d70 <wcrtomb@plt+0x3060>  // b.none
  407d60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407d64:	add	x0, x0, #0x420
  407d68:	ldr	x0, [x0]
  407d6c:	blr	x0
  407d70:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407d74:	add	x0, x0, #0x228
  407d78:	bl	404c60 <gettext@plt>
  407d7c:	mov	x19, x0
  407d80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407d84:	add	x0, x0, #0x2c8
  407d88:	ldr	x0, [x0]
  407d8c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  407d90:	mov	x3, x0
  407d94:	mov	x2, x19
  407d98:	mov	w1, #0x0                   	// #0
  407d9c:	mov	w0, #0x0                   	// #0
  407da0:	bl	404100 <error@plt>
  407da4:	bl	412ae0 <wcrtomb@plt+0xddd0>
  407da8:	ldr	x0, [sp, #40]
  407dac:	bl	4041e0 <ferror_unlocked@plt>
  407db0:	cmp	w0, #0x0
  407db4:	b.eq	407dc8 <wcrtomb@plt+0x30b8>  // b.none
  407db8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407dbc:	add	x0, x0, #0x2c8
  407dc0:	ldr	x0, [x0]
  407dc4:	bl	43a684 <wcrtomb@plt+0x35974>
  407dc8:	ldr	x0, [sp, #40]
  407dcc:	bl	404380 <fclose@plt>
  407dd0:	cmp	w0, #0x0
  407dd4:	b.eq	407e0c <wcrtomb@plt+0x30fc>  // b.none
  407dd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407ddc:	add	x0, x0, #0x2c8
  407de0:	ldr	x0, [x0]
  407de4:	bl	43a490 <wcrtomb@plt+0x35780>
  407de8:	b	407e0c <wcrtomb@plt+0x30fc>
  407dec:	bl	404bc0 <__errno_location@plt>
  407df0:	ldr	w0, [x0]
  407df4:	cmp	w0, #0x2
  407df8:	b.eq	407e0c <wcrtomb@plt+0x30fc>  // b.none
  407dfc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407e00:	add	x0, x0, #0x2c8
  407e04:	ldr	x0, [x0]
  407e08:	bl	43a618 <wcrtomb@plt+0x35908>
  407e0c:	nop
  407e10:	ldr	x19, [sp, #16]
  407e14:	ldp	x29, x30, [sp], #48
  407e18:	ret
  407e1c:	stp	x29, x30, [sp, #-32]!
  407e20:	mov	x29, sp
  407e24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407e28:	add	x0, x0, #0x2c8
  407e2c:	ldr	x2, [x0]
  407e30:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407e34:	add	x1, x0, #0x250
  407e38:	mov	x0, x2
  407e3c:	bl	4043d0 <fopen@plt>
  407e40:	str	x0, [sp, #24]
  407e44:	ldr	x0, [sp, #24]
  407e48:	cmp	x0, #0x0
  407e4c:	b.eq	407eb4 <wcrtomb@plt+0x31a4>  // b.none
  407e50:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407e54:	add	x0, x0, #0x69c
  407e58:	ldr	w0, [x0]
  407e5c:	mov	w2, w0
  407e60:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407e64:	add	x1, x0, #0x258
  407e68:	ldr	x0, [sp, #24]
  407e6c:	bl	404c90 <fprintf@plt>
  407e70:	ldr	x0, [sp, #24]
  407e74:	bl	4041e0 <ferror_unlocked@plt>
  407e78:	cmp	w0, #0x0
  407e7c:	b.eq	407e90 <wcrtomb@plt+0x3180>  // b.none
  407e80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407e84:	add	x0, x0, #0x2c8
  407e88:	ldr	x0, [x0]
  407e8c:	bl	43acec <wcrtomb@plt+0x35fdc>
  407e90:	ldr	x0, [sp, #24]
  407e94:	bl	404380 <fclose@plt>
  407e98:	cmp	w0, #0x0
  407e9c:	b.eq	407ec4 <wcrtomb@plt+0x31b4>  // b.none
  407ea0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407ea4:	add	x0, x0, #0x2c8
  407ea8:	ldr	x0, [x0]
  407eac:	bl	43a490 <wcrtomb@plt+0x35780>
  407eb0:	b	407ec4 <wcrtomb@plt+0x31b4>
  407eb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407eb8:	add	x0, x0, #0x2c8
  407ebc:	ldr	x0, [x0]
  407ec0:	bl	43a618 <wcrtomb@plt+0x35908>
  407ec4:	nop
  407ec8:	ldp	x29, x30, [sp], #32
  407ecc:	ret
  407ed0:	stp	x29, x30, [sp, #-16]!
  407ed4:	mov	x29, sp
  407ed8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407edc:	add	x0, x0, #0x69c
  407ee0:	ldr	w0, [x0]
  407ee4:	add	w1, w0, #0x1
  407ee8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407eec:	add	x0, x0, #0x69c
  407ef0:	str	w1, [x0]
  407ef4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407ef8:	add	x0, x0, #0x69c
  407efc:	ldr	w0, [x0]
  407f00:	cmp	w0, #0x0
  407f04:	b.ge	407f4c <wcrtomb@plt+0x323c>  // b.tcont
  407f08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407f0c:	add	x0, x0, #0x420
  407f10:	ldr	x0, [x0]
  407f14:	cmp	x0, #0x0
  407f18:	b.eq	407f2c <wcrtomb@plt+0x321c>  // b.none
  407f1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407f20:	add	x0, x0, #0x420
  407f24:	ldr	x0, [x0]
  407f28:	blr	x0
  407f2c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407f30:	add	x0, x0, #0x260
  407f34:	bl	404c60 <gettext@plt>
  407f38:	mov	x2, x0
  407f3c:	mov	w1, #0x0                   	// #0
  407f40:	mov	w0, #0x0                   	// #0
  407f44:	bl	404100 <error@plt>
  407f48:	bl	412ae0 <wcrtomb@plt+0xddd0>
  407f4c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407f50:	add	x0, x0, #0x698
  407f54:	ldr	w0, [x0]
  407f58:	add	w1, w0, #0x1
  407f5c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407f60:	add	x0, x0, #0x698
  407f64:	str	w1, [x0]
  407f68:	nop
  407f6c:	ldp	x29, x30, [sp], #16
  407f70:	ret
  407f74:	stp	x29, x30, [sp, #-112]!
  407f78:	mov	x29, sp
  407f7c:	stp	x19, x20, [sp, #16]
  407f80:	str	x21, [sp, #32]
  407f84:	str	x0, [sp, #56]
  407f88:	str	xzr, [sp, #80]
  407f8c:	str	xzr, [sp, #72]
  407f90:	strb	wzr, [sp, #111]
  407f94:	b	4083bc <wcrtomb@plt+0x36ac>
  407f98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407f9c:	add	x0, x0, #0x498
  407fa0:	ldr	x0, [x0]
  407fa4:	mov	x1, x0
  407fa8:	mov	w0, #0x7                   	// #7
  407fac:	bl	404a40 <fputc_unlocked@plt>
  407fb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  407fb4:	add	x0, x0, #0x498
  407fb8:	ldr	x19, [x0]
  407fbc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  407fc0:	add	x0, x0, #0x278
  407fc4:	bl	404c60 <gettext@plt>
  407fc8:	mov	x21, x0
  407fcc:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  407fd0:	add	x0, x0, #0x69c
  407fd4:	ldr	w0, [x0]
  407fd8:	add	w20, w0, #0x1
  407fdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  407fe0:	add	x0, x0, #0x310
  407fe4:	ldr	x0, [x0]
  407fe8:	ldr	x0, [x0]
  407fec:	bl	459f38 <argp_usage@@Base+0x10e4c>
  407ff0:	mov	x3, x0
  407ff4:	mov	w2, w20
  407ff8:	mov	x1, x21
  407ffc:	mov	x0, x19
  408000:	bl	404c90 <fprintf@plt>
  408004:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408008:	add	x0, x0, #0x498
  40800c:	ldr	x0, [x0]
  408010:	bl	404990 <fflush_unlocked@plt>
  408014:	add	x1, sp, #0x48
  408018:	add	x0, sp, #0x50
  40801c:	ldr	x2, [sp, #56]
  408020:	bl	404840 <getline@plt>
  408024:	cmp	x0, #0x0
  408028:	b.gt	4080ec <wcrtomb@plt+0x33dc>
  40802c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408030:	add	x0, x0, #0x420
  408034:	ldr	x0, [x0]
  408038:	cmp	x0, #0x0
  40803c:	b.eq	408050 <wcrtomb@plt+0x3340>  // b.none
  408040:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408044:	add	x0, x0, #0x420
  408048:	ldr	x0, [x0]
  40804c:	blr	x0
  408050:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408054:	add	x0, x0, #0x2a8
  408058:	bl	404c60 <gettext@plt>
  40805c:	mov	x2, x0
  408060:	mov	w1, #0x0                   	// #0
  408064:	mov	w0, #0x0                   	// #0
  408068:	bl	404100 <error@plt>
  40806c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408070:	add	x0, x0, #0x38c
  408074:	ldr	w0, [x0]
  408078:	cmp	w0, #0x6
  40807c:	b.eq	4080e8 <wcrtomb@plt+0x33d8>  // b.none
  408080:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408084:	add	x0, x0, #0x38c
  408088:	ldr	w0, [x0]
  40808c:	cmp	w0, #0x7
  408090:	b.eq	4080e8 <wcrtomb@plt+0x33d8>  // b.none
  408094:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408098:	add	x0, x0, #0x38c
  40809c:	ldr	w0, [x0]
  4080a0:	cmp	w0, #0x5
  4080a4:	b.eq	4080e8 <wcrtomb@plt+0x33d8>  // b.none
  4080a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4080ac:	add	x0, x0, #0x420
  4080b0:	ldr	x0, [x0]
  4080b4:	cmp	x0, #0x0
  4080b8:	b.eq	4080cc <wcrtomb@plt+0x33bc>  // b.none
  4080bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4080c0:	add	x0, x0, #0x420
  4080c4:	ldr	x0, [x0]
  4080c8:	blr	x0
  4080cc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4080d0:	add	x0, x0, #0x2d0
  4080d4:	bl	404c60 <gettext@plt>
  4080d8:	mov	x2, x0
  4080dc:	mov	w1, #0x0                   	// #0
  4080e0:	mov	w0, #0x0                   	// #0
  4080e4:	bl	404100 <error@plt>
  4080e8:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4080ec:	ldr	x0, [sp, #80]
  4080f0:	ldrb	w0, [x0]
  4080f4:	cmp	w0, #0xa
  4080f8:	b.eq	4083d0 <wcrtomb@plt+0x36c0>  // b.none
  4080fc:	ldr	x0, [sp, #80]
  408100:	ldrb	w0, [x0]
  408104:	cmp	w0, #0x79
  408108:	b.eq	4083d0 <wcrtomb@plt+0x36c0>  // b.none
  40810c:	ldr	x0, [sp, #80]
  408110:	ldrb	w0, [x0]
  408114:	cmp	w0, #0x59
  408118:	b.eq	4083d0 <wcrtomb@plt+0x36c0>  // b.none
  40811c:	ldr	x0, [sp, #80]
  408120:	ldrb	w0, [x0]
  408124:	cmp	w0, #0x71
  408128:	b.eq	4081e0 <wcrtomb@plt+0x34d0>  // b.none
  40812c:	cmp	w0, #0x71
  408130:	b.gt	408398 <wcrtomb@plt+0x3688>
  408134:	cmp	w0, #0x6e
  408138:	b.eq	4082a0 <wcrtomb@plt+0x3590>  // b.none
  40813c:	cmp	w0, #0x6e
  408140:	b.gt	408398 <wcrtomb@plt+0x3688>
  408144:	cmp	w0, #0x21
  408148:	b.eq	408374 <wcrtomb@plt+0x3664>  // b.none
  40814c:	cmp	w0, #0x3f
  408150:	b.ne	408398 <wcrtomb@plt+0x3688>  // b.any
  408154:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408158:	add	x0, x0, #0x498
  40815c:	ldr	x19, [x0]
  408160:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408164:	add	x0, x0, #0x2f0
  408168:	bl	404c60 <gettext@plt>
  40816c:	mov	x1, x0
  408170:	mov	x0, x19
  408174:	bl	404c90 <fprintf@plt>
  408178:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40817c:	add	x0, x0, #0x338
  408180:	ldrb	w0, [x0]
  408184:	eor	w0, w0, #0x1
  408188:	and	w0, w0, #0xff
  40818c:	cmp	w0, #0x0
  408190:	b.eq	4081b8 <wcrtomb@plt+0x34a8>  // b.none
  408194:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408198:	add	x0, x0, #0x498
  40819c:	ldr	x19, [x0]
  4081a0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4081a4:	add	x0, x0, #0x378
  4081a8:	bl	404c60 <gettext@plt>
  4081ac:	mov	x1, x0
  4081b0:	mov	x0, x19
  4081b4:	bl	404c90 <fprintf@plt>
  4081b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4081bc:	add	x0, x0, #0x498
  4081c0:	ldr	x19, [x0]
  4081c4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4081c8:	add	x0, x0, #0x3a0
  4081cc:	bl	404c60 <gettext@plt>
  4081d0:	mov	x1, x0
  4081d4:	mov	x0, x19
  4081d8:	bl	404c90 <fprintf@plt>
  4081dc:	b	4083bc <wcrtomb@plt+0x36ac>
  4081e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4081e4:	add	x0, x0, #0x420
  4081e8:	ldr	x0, [x0]
  4081ec:	cmp	x0, #0x0
  4081f0:	b.eq	408204 <wcrtomb@plt+0x34f4>  // b.none
  4081f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4081f8:	add	x0, x0, #0x420
  4081fc:	ldr	x0, [x0]
  408200:	blr	x0
  408204:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408208:	add	x0, x0, #0x3c0
  40820c:	bl	404c60 <gettext@plt>
  408210:	mov	x2, x0
  408214:	mov	w1, #0x0                   	// #0
  408218:	mov	w0, #0x0                   	// #0
  40821c:	bl	404100 <error@plt>
  408220:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408224:	add	x0, x0, #0x38c
  408228:	ldr	w0, [x0]
  40822c:	cmp	w0, #0x6
  408230:	b.eq	40829c <wcrtomb@plt+0x358c>  // b.none
  408234:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408238:	add	x0, x0, #0x38c
  40823c:	ldr	w0, [x0]
  408240:	cmp	w0, #0x7
  408244:	b.eq	40829c <wcrtomb@plt+0x358c>  // b.none
  408248:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40824c:	add	x0, x0, #0x38c
  408250:	ldr	w0, [x0]
  408254:	cmp	w0, #0x5
  408258:	b.eq	40829c <wcrtomb@plt+0x358c>  // b.none
  40825c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408260:	add	x0, x0, #0x420
  408264:	ldr	x0, [x0]
  408268:	cmp	x0, #0x0
  40826c:	b.eq	408280 <wcrtomb@plt+0x3570>  // b.none
  408270:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408274:	add	x0, x0, #0x420
  408278:	ldr	x0, [x0]
  40827c:	blr	x0
  408280:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408284:	add	x0, x0, #0x2d0
  408288:	bl	404c60 <gettext@plt>
  40828c:	mov	x2, x0
  408290:	mov	w1, #0x0                   	// #0
  408294:	mov	w0, #0x0                   	// #0
  408298:	bl	404100 <error@plt>
  40829c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4082a0:	ldr	x0, [sp, #80]
  4082a4:	add	x0, x0, #0x1
  4082a8:	str	x0, [sp, #96]
  4082ac:	b	4082bc <wcrtomb@plt+0x35ac>
  4082b0:	ldr	x0, [sp, #96]
  4082b4:	add	x0, x0, #0x1
  4082b8:	str	x0, [sp, #96]
  4082bc:	ldr	x0, [sp, #96]
  4082c0:	ldrb	w0, [x0]
  4082c4:	cmp	w0, #0x20
  4082c8:	b.eq	4082b0 <wcrtomb@plt+0x35a0>  // b.none
  4082cc:	ldr	x0, [sp, #96]
  4082d0:	ldrb	w0, [x0]
  4082d4:	cmp	w0, #0x9
  4082d8:	b.eq	4082b0 <wcrtomb@plt+0x35a0>  // b.none
  4082dc:	ldr	x0, [sp, #96]
  4082e0:	str	x0, [sp, #88]
  4082e4:	b	4082f4 <wcrtomb@plt+0x35e4>
  4082e8:	ldr	x0, [sp, #88]
  4082ec:	add	x0, x0, #0x1
  4082f0:	str	x0, [sp, #88]
  4082f4:	ldr	x0, [sp, #88]
  4082f8:	ldrb	w0, [x0]
  4082fc:	cmp	w0, #0x0
  408300:	b.eq	408314 <wcrtomb@plt+0x3604>  // b.none
  408304:	ldr	x0, [sp, #88]
  408308:	ldrb	w0, [x0]
  40830c:	cmp	w0, #0xa
  408310:	b.ne	4082e8 <wcrtomb@plt+0x35d8>  // b.any
  408314:	ldr	x0, [sp, #88]
  408318:	strb	wzr, [x0]
  40831c:	ldr	x0, [sp, #96]
  408320:	ldrb	w0, [x0]
  408324:	cmp	w0, #0x0
  408328:	b.eq	408350 <wcrtomb@plt+0x3640>  // b.none
  40832c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408330:	add	x0, x0, #0x310
  408334:	ldr	x19, [x0]
  408338:	ldr	x0, [sp, #96]
  40833c:	bl	45b858 <argp_usage@@Base+0x1276c>
  408340:	str	x0, [x19]
  408344:	mov	w0, #0x1                   	// #1
  408348:	strb	w0, [sp, #111]
  40834c:	b	4083bc <wcrtomb@plt+0x36ac>
  408350:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408354:	add	x0, x0, #0x498
  408358:	ldr	x19, [x0]
  40835c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408360:	add	x0, x0, #0x3e0
  408364:	bl	404c60 <gettext@plt>
  408368:	mov	x1, x19
  40836c:	bl	4040c0 <fputs@plt>
  408370:	b	4083bc <wcrtomb@plt+0x36ac>
  408374:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408378:	add	x0, x0, #0x338
  40837c:	ldrb	w0, [x0]
  408380:	eor	w0, w0, #0x1
  408384:	and	w0, w0, #0xff
  408388:	cmp	w0, #0x0
  40838c:	b.eq	408398 <wcrtomb@plt+0x3688>  // b.none
  408390:	bl	42dc98 <wcrtomb@plt+0x28f88>
  408394:	b	4083bc <wcrtomb@plt+0x36ac>
  408398:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40839c:	add	x0, x0, #0x498
  4083a0:	ldr	x19, [x0]
  4083a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4083a8:	add	x0, x0, #0x408
  4083ac:	bl	404c60 <gettext@plt>
  4083b0:	mov	x1, x0
  4083b4:	mov	x0, x19
  4083b8:	bl	404c90 <fprintf@plt>
  4083bc:	ldrb	w0, [sp, #111]
  4083c0:	eor	w0, w0, #0x1
  4083c4:	and	w0, w0, #0xff
  4083c8:	cmp	w0, #0x0
  4083cc:	b.ne	407f98 <wcrtomb@plt+0x3288>  // b.any
  4083d0:	ldr	x0, [sp, #80]
  4083d4:	bl	404880 <free@plt>
  4083d8:	nop
  4083dc:	ldp	x19, x20, [sp, #16]
  4083e0:	ldr	x21, [sp, #32]
  4083e4:	ldp	x29, x30, [sp], #112
  4083e8:	ret
  4083ec:	stp	x29, x30, [sp, #-64]!
  4083f0:	mov	x29, sp
  4083f4:	str	x19, [sp, #16]
  4083f8:	str	w0, [sp, #44]
  4083fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408400:	add	x0, x0, #0x6f8
  408404:	ldr	x0, [x0]
  408408:	cmp	x0, #0x0
  40840c:	b.ne	408468 <wcrtomb@plt+0x3758>  // b.any
  408410:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408414:	add	x0, x0, #0x330
  408418:	ldr	x0, [x0]
  40841c:	cmp	x0, #0x0
  408420:	b.ne	408468 <wcrtomb@plt+0x3758>  // b.any
  408424:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408428:	add	x0, x0, #0x400
  40842c:	ldr	w0, [x0]
  408430:	cmp	w0, #0x0
  408434:	b.ne	408450 <wcrtomb@plt+0x3740>  // b.any
  408438:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40843c:	add	x1, x0, #0x218
  408440:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408444:	add	x0, x0, #0x430
  408448:	bl	4043d0 <fopen@plt>
  40844c:	b	40845c <wcrtomb@plt+0x374c>
  408450:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408454:	add	x0, x0, #0x4a8
  408458:	ldr	x0, [x0]
  40845c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408460:	add	x1, x1, #0x6f8
  408464:	str	x0, [x1]
  408468:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40846c:	add	x0, x0, #0xfe8
  408470:	ldrb	w0, [x0]
  408474:	cmp	w0, #0x0
  408478:	b.eq	408484 <wcrtomb@plt+0x3774>  // b.none
  40847c:	mov	w0, #0x0                   	// #0
  408480:	b	408c90 <wcrtomb@plt+0x3f80>
  408484:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408488:	add	x0, x0, #0x37a
  40848c:	ldrb	w0, [x0]
  408490:	cmp	w0, #0x0
  408494:	b.eq	40849c <wcrtomb@plt+0x378c>  // b.none
  408498:	bl	40ca58 <wcrtomb@plt+0x7d48>
  40849c:	mov	x1, #0x0                   	// #0
  4084a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084a4:	add	x0, x0, #0xfb0
  4084a8:	bl	423d0c <wcrtomb@plt+0x1effc>
  4084ac:	mov	x1, #0x0                   	// #0
  4084b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084b4:	add	x0, x0, #0xfb8
  4084b8:	bl	423d0c <wcrtomb@plt+0x1effc>
  4084bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084c0:	add	x0, x0, #0xfe0
  4084c4:	str	xzr, [x0]
  4084c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084cc:	add	x0, x0, #0xfe0
  4084d0:	ldr	x1, [x0]
  4084d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084d8:	add	x0, x0, #0xfd0
  4084dc:	str	x1, [x0]
  4084e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084e4:	add	x0, x0, #0xfc0
  4084e8:	ldr	x1, [x0]
  4084ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4084f0:	add	x0, x0, #0xfd8
  4084f4:	str	x1, [x0]
  4084f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4084fc:	add	x0, x0, #0x400
  408500:	ldr	w1, [x0]
  408504:	mov	w0, #0x3fffffff            	// #1073741823
  408508:	cmp	w1, w0
  40850c:	b.le	408538 <wcrtomb@plt+0x3828>
  408510:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408514:	add	x0, x0, #0x400
  408518:	ldr	w1, [x0]
  40851c:	mov	w0, #0xc0000000            	// #-1073741824
  408520:	add	w0, w1, w0
  408524:	bl	43c048 <wcrtomb@plt+0x37338>
  408528:	cmp	w0, #0x0
  40852c:	cset	w0, ne  // ne = any
  408530:	and	w0, w0, #0xff
  408534:	b	408554 <wcrtomb@plt+0x3844>
  408538:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40853c:	add	x0, x0, #0x400
  408540:	ldr	w0, [x0]
  408544:	bl	404660 <close@plt>
  408548:	cmp	w0, #0x0
  40854c:	cset	w0, ne  // ne = any
  408550:	and	w0, w0, #0xff
  408554:	cmp	w0, #0x0
  408558:	b.eq	408570 <wcrtomb@plt+0x3860>  // b.none
  40855c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408560:	add	x0, x0, #0x310
  408564:	ldr	x0, [x0]
  408568:	ldr	x0, [x0]
  40856c:	bl	43a490 <wcrtomb@plt+0x35780>
  408570:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408574:	add	x0, x0, #0x310
  408578:	ldr	x0, [x0]
  40857c:	add	x1, x0, #0x8
  408580:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408584:	add	x0, x0, #0x310
  408588:	str	x1, [x0]
  40858c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408590:	add	x0, x0, #0x2e0
  408594:	ldr	x1, [x0]
  408598:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40859c:	add	x0, x0, #0x380
  4085a0:	ldr	x0, [x0]
  4085a4:	lsl	x0, x0, #3
  4085a8:	add	x1, x1, x0
  4085ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4085b0:	add	x0, x0, #0x310
  4085b4:	ldr	x0, [x0]
  4085b8:	cmp	x1, x0
  4085bc:	b.ne	4085e8 <wcrtomb@plt+0x38d8>  // b.any
  4085c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4085c4:	add	x0, x0, #0x2e0
  4085c8:	ldr	x1, [x0]
  4085cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4085d0:	add	x0, x0, #0x310
  4085d4:	str	x1, [x0]
  4085d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4085dc:	add	x0, x0, #0x700
  4085e0:	mov	w1, #0x1                   	// #1
  4085e4:	str	w1, [x0]
  4085e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4085ec:	add	x0, x0, #0x700
  4085f0:	ldr	w0, [x0]
  4085f4:	str	w0, [sp, #60]
  4085f8:	ldr	w0, [sp, #60]
  4085fc:	cmp	w0, #0x0
  408600:	b.eq	4086cc <wcrtomb@plt+0x39bc>  // b.none
  408604:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408608:	add	x0, x0, #0x330
  40860c:	ldr	x0, [x0]
  408610:	cmp	x0, #0x0
  408614:	b.eq	4086bc <wcrtomb@plt+0x39ac>  // b.none
  408618:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40861c:	add	x0, x0, #0x2c8
  408620:	ldr	x0, [x0]
  408624:	cmp	x0, #0x0
  408628:	b.eq	408630 <wcrtomb@plt+0x3920>  // b.none
  40862c:	bl	407e1c <wcrtomb@plt+0x310c>
  408630:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408634:	add	x0, x0, #0x310
  408638:	ldr	x2, [x0]
  40863c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  408640:	add	x0, x0, #0x69c
  408644:	ldr	w0, [x0]
  408648:	add	w0, w0, #0x1
  40864c:	mov	w1, w0
  408650:	mov	x0, x2
  408654:	bl	42f5d4 <wcrtomb@plt+0x2a8c4>
  408658:	cmp	w0, #0x0
  40865c:	b.eq	4086cc <wcrtomb@plt+0x39bc>  // b.none
  408660:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408664:	add	x0, x0, #0x420
  408668:	ldr	x0, [x0]
  40866c:	cmp	x0, #0x0
  408670:	b.eq	408684 <wcrtomb@plt+0x3974>  // b.none
  408674:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408678:	add	x0, x0, #0x420
  40867c:	ldr	x0, [x0]
  408680:	blr	x0
  408684:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  408688:	add	x0, x0, #0x440
  40868c:	bl	404c60 <gettext@plt>
  408690:	mov	x19, x0
  408694:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408698:	add	x0, x0, #0x330
  40869c:	ldr	x0, [x0]
  4086a0:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4086a4:	mov	x3, x0
  4086a8:	mov	x2, x19
  4086ac:	mov	w1, #0x0                   	// #0
  4086b0:	mov	w0, #0x0                   	// #0
  4086b4:	bl	404100 <error@plt>
  4086b8:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4086bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4086c0:	add	x0, x0, #0x6f8
  4086c4:	ldr	x0, [x0]
  4086c8:	bl	407f74 <wcrtomb@plt+0x3264>
  4086cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4086d0:	add	x0, x0, #0x310
  4086d4:	ldr	x0, [x0]
  4086d8:	ldr	x2, [x0]
  4086dc:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  4086e0:	add	x1, x0, #0xf90
  4086e4:	mov	x0, x2
  4086e8:	bl	4047c0 <strcmp@plt>
  4086ec:	cmp	w0, #0x0
  4086f0:	b.ne	408714 <wcrtomb@plt+0x3a04>  // b.any
  4086f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4086f8:	add	x0, x0, #0x511
  4086fc:	mov	w1, #0x1                   	// #1
  408700:	strb	w1, [x0]
  408704:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408708:	add	x0, x0, #0x400
  40870c:	str	wzr, [x0]
  408710:	b	408c18 <wcrtomb@plt+0x3f08>
  408714:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408718:	add	x0, x0, #0x37a
  40871c:	ldrb	w0, [x0]
  408720:	cmp	w0, #0x0
  408724:	b.eq	40884c <wcrtomb@plt+0x3b3c>  // b.none
  408728:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40872c:	add	x0, x0, #0x428
  408730:	ldrb	w0, [x0]
  408734:	eor	w0, w0, #0x1
  408738:	and	w0, w0, #0xff
  40873c:	cmp	w0, #0x0
  408740:	b.eq	408820 <wcrtomb@plt+0x3b10>  // b.none
  408744:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408748:	add	x0, x0, #0x310
  40874c:	ldr	x0, [x0]
  408750:	ldr	x0, [x0]
  408754:	mov	w1, #0x3a                  	// #58
  408758:	bl	404930 <strchr@plt>
  40875c:	mov	x1, x0
  408760:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408764:	add	x0, x0, #0x430
  408768:	str	x1, [x0]
  40876c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408770:	add	x0, x0, #0x430
  408774:	ldr	x0, [x0]
  408778:	cmp	x0, #0x0
  40877c:	b.eq	408820 <wcrtomb@plt+0x3b10>  // b.none
  408780:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408784:	add	x0, x0, #0x310
  408788:	ldr	x0, [x0]
  40878c:	ldr	x1, [x0]
  408790:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408794:	add	x0, x0, #0x430
  408798:	ldr	x0, [x0]
  40879c:	cmp	x1, x0
  4087a0:	b.cs	408820 <wcrtomb@plt+0x3b10>  // b.hs, b.nlast
  4087a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4087a8:	add	x0, x0, #0x310
  4087ac:	ldr	x0, [x0]
  4087b0:	ldr	x3, [x0]
  4087b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4087b8:	add	x0, x0, #0x430
  4087bc:	ldr	x1, [x0]
  4087c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4087c4:	add	x0, x0, #0x310
  4087c8:	ldr	x0, [x0]
  4087cc:	ldr	x0, [x0]
  4087d0:	sub	x0, x1, x0
  4087d4:	mov	x2, x0
  4087d8:	mov	w1, #0x2f                  	// #47
  4087dc:	mov	x0, x3
  4087e0:	bl	404a20 <memchr@plt>
  4087e4:	cmp	x0, #0x0
  4087e8:	b.ne	408820 <wcrtomb@plt+0x3b10>  // b.any
  4087ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4087f0:	add	x0, x0, #0x310
  4087f4:	ldr	x0, [x0]
  4087f8:	ldr	x4, [x0]
  4087fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408800:	add	x0, x0, #0x358
  408804:	ldr	x0, [x0]
  408808:	mov	x3, x0
  40880c:	mov	w2, #0x40000000            	// #1073741824
  408810:	mov	w1, #0x42                  	// #66
  408814:	mov	x0, x4
  408818:	bl	43ba64 <wcrtomb@plt+0x36d54>
  40881c:	b	40883c <wcrtomb@plt+0x3b2c>
  408820:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408824:	add	x0, x0, #0x310
  408828:	ldr	x0, [x0]
  40882c:	ldr	x0, [x0]
  408830:	mov	w2, #0x1b6                 	// #438
  408834:	mov	w1, #0x42                  	// #66
  408838:	bl	404430 <open@plt>
  40883c:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  408840:	add	x1, x1, #0x400
  408844:	str	w0, [x1]
  408848:	b	408c18 <wcrtomb@plt+0x3f08>
  40884c:	ldr	w0, [sp, #44]
  408850:	cmp	w0, #0x2
  408854:	b.eq	408af4 <wcrtomb@plt+0x3de4>  // b.none
  408858:	ldr	w0, [sp, #44]
  40885c:	cmp	w0, #0x2
  408860:	b.hi	408c18 <wcrtomb@plt+0x3f08>  // b.pmore
  408864:	ldr	w0, [sp, #44]
  408868:	cmp	w0, #0x0
  40886c:	b.eq	408880 <wcrtomb@plt+0x3b70>  // b.none
  408870:	ldr	w0, [sp, #44]
  408874:	cmp	w0, #0x1
  408878:	b.eq	4089a8 <wcrtomb@plt+0x3c98>  // b.none
  40887c:	b	408c18 <wcrtomb@plt+0x3f08>
  408880:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408884:	add	x0, x0, #0x428
  408888:	ldrb	w0, [x0]
  40888c:	eor	w0, w0, #0x1
  408890:	and	w0, w0, #0xff
  408894:	cmp	w0, #0x0
  408898:	b.eq	408978 <wcrtomb@plt+0x3c68>  // b.none
  40889c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4088a0:	add	x0, x0, #0x310
  4088a4:	ldr	x0, [x0]
  4088a8:	ldr	x0, [x0]
  4088ac:	mov	w1, #0x3a                  	// #58
  4088b0:	bl	404930 <strchr@plt>
  4088b4:	mov	x1, x0
  4088b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4088bc:	add	x0, x0, #0x430
  4088c0:	str	x1, [x0]
  4088c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4088c8:	add	x0, x0, #0x430
  4088cc:	ldr	x0, [x0]
  4088d0:	cmp	x0, #0x0
  4088d4:	b.eq	408978 <wcrtomb@plt+0x3c68>  // b.none
  4088d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4088dc:	add	x0, x0, #0x310
  4088e0:	ldr	x0, [x0]
  4088e4:	ldr	x1, [x0]
  4088e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4088ec:	add	x0, x0, #0x430
  4088f0:	ldr	x0, [x0]
  4088f4:	cmp	x1, x0
  4088f8:	b.cs	408978 <wcrtomb@plt+0x3c68>  // b.hs, b.nlast
  4088fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408900:	add	x0, x0, #0x310
  408904:	ldr	x0, [x0]
  408908:	ldr	x3, [x0]
  40890c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408910:	add	x0, x0, #0x430
  408914:	ldr	x1, [x0]
  408918:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40891c:	add	x0, x0, #0x310
  408920:	ldr	x0, [x0]
  408924:	ldr	x0, [x0]
  408928:	sub	x0, x1, x0
  40892c:	mov	x2, x0
  408930:	mov	w1, #0x2f                  	// #47
  408934:	mov	x0, x3
  408938:	bl	404a20 <memchr@plt>
  40893c:	cmp	x0, #0x0
  408940:	b.ne	408978 <wcrtomb@plt+0x3c68>  // b.any
  408944:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408948:	add	x0, x0, #0x310
  40894c:	ldr	x0, [x0]
  408950:	ldr	x4, [x0]
  408954:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408958:	add	x0, x0, #0x358
  40895c:	ldr	x0, [x0]
  408960:	mov	x3, x0
  408964:	mov	w2, #0x40000000            	// #1073741824
  408968:	mov	w1, #0x0                   	// #0
  40896c:	mov	x0, x4
  408970:	bl	43ba64 <wcrtomb@plt+0x36d54>
  408974:	b	408994 <wcrtomb@plt+0x3c84>
  408978:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40897c:	add	x0, x0, #0x310
  408980:	ldr	x0, [x0]
  408984:	ldr	x0, [x0]
  408988:	mov	w2, #0x1b6                 	// #438
  40898c:	mov	w1, #0x0                   	// #0
  408990:	bl	404430 <open@plt>
  408994:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  408998:	add	x1, x1, #0x400
  40899c:	str	w0, [x1]
  4089a0:	bl	4056fc <wcrtomb@plt+0x9ec>
  4089a4:	b	408c18 <wcrtomb@plt+0x3f08>
  4089a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4089ac:	add	x0, x0, #0x325
  4089b0:	ldrb	w0, [x0]
  4089b4:	cmp	w0, #0x0
  4089b8:	b.eq	4089d4 <wcrtomb@plt+0x3cc4>  // b.none
  4089bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4089c0:	add	x0, x0, #0x310
  4089c4:	ldr	x0, [x0]
  4089c8:	ldr	x0, [x0]
  4089cc:	mov	w1, #0x1                   	// #1
  4089d0:	bl	4250f8 <wcrtomb@plt+0x203e8>
  4089d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4089d8:	add	x0, x0, #0x428
  4089dc:	ldrb	w0, [x0]
  4089e0:	eor	w0, w0, #0x1
  4089e4:	and	w0, w0, #0xff
  4089e8:	cmp	w0, #0x0
  4089ec:	b.eq	408acc <wcrtomb@plt+0x3dbc>  // b.none
  4089f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4089f4:	add	x0, x0, #0x310
  4089f8:	ldr	x0, [x0]
  4089fc:	ldr	x0, [x0]
  408a00:	mov	w1, #0x3a                  	// #58
  408a04:	bl	404930 <strchr@plt>
  408a08:	mov	x1, x0
  408a0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a10:	add	x0, x0, #0x430
  408a14:	str	x1, [x0]
  408a18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a1c:	add	x0, x0, #0x430
  408a20:	ldr	x0, [x0]
  408a24:	cmp	x0, #0x0
  408a28:	b.eq	408acc <wcrtomb@plt+0x3dbc>  // b.none
  408a2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a30:	add	x0, x0, #0x310
  408a34:	ldr	x0, [x0]
  408a38:	ldr	x1, [x0]
  408a3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a40:	add	x0, x0, #0x430
  408a44:	ldr	x0, [x0]
  408a48:	cmp	x1, x0
  408a4c:	b.cs	408acc <wcrtomb@plt+0x3dbc>  // b.hs, b.nlast
  408a50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a54:	add	x0, x0, #0x310
  408a58:	ldr	x0, [x0]
  408a5c:	ldr	x3, [x0]
  408a60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a64:	add	x0, x0, #0x430
  408a68:	ldr	x1, [x0]
  408a6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a70:	add	x0, x0, #0x310
  408a74:	ldr	x0, [x0]
  408a78:	ldr	x0, [x0]
  408a7c:	sub	x0, x1, x0
  408a80:	mov	x2, x0
  408a84:	mov	w1, #0x2f                  	// #47
  408a88:	mov	x0, x3
  408a8c:	bl	404a20 <memchr@plt>
  408a90:	cmp	x0, #0x0
  408a94:	b.ne	408acc <wcrtomb@plt+0x3dbc>  // b.any
  408a98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408a9c:	add	x0, x0, #0x310
  408aa0:	ldr	x0, [x0]
  408aa4:	ldr	x4, [x0]
  408aa8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408aac:	add	x0, x0, #0x358
  408ab0:	ldr	x0, [x0]
  408ab4:	mov	x3, x0
  408ab8:	mov	w2, #0x40000000            	// #1073741824
  408abc:	mov	w1, #0x41                  	// #65
  408ac0:	mov	x0, x4
  408ac4:	bl	43ba64 <wcrtomb@plt+0x36d54>
  408ac8:	b	408ae4 <wcrtomb@plt+0x3dd4>
  408acc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408ad0:	add	x0, x0, #0x310
  408ad4:	ldr	x0, [x0]
  408ad8:	ldr	x0, [x0]
  408adc:	mov	w1, #0x1b6                 	// #438
  408ae0:	bl	404ca0 <creat@plt>
  408ae4:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  408ae8:	add	x1, x1, #0x400
  408aec:	str	w0, [x1]
  408af0:	b	408c18 <wcrtomb@plt+0x3f08>
  408af4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408af8:	add	x0, x0, #0x428
  408afc:	ldrb	w0, [x0]
  408b00:	eor	w0, w0, #0x1
  408b04:	and	w0, w0, #0xff
  408b08:	cmp	w0, #0x0
  408b0c:	b.eq	408bec <wcrtomb@plt+0x3edc>  // b.none
  408b10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b14:	add	x0, x0, #0x310
  408b18:	ldr	x0, [x0]
  408b1c:	ldr	x0, [x0]
  408b20:	mov	w1, #0x3a                  	// #58
  408b24:	bl	404930 <strchr@plt>
  408b28:	mov	x1, x0
  408b2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b30:	add	x0, x0, #0x430
  408b34:	str	x1, [x0]
  408b38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b3c:	add	x0, x0, #0x430
  408b40:	ldr	x0, [x0]
  408b44:	cmp	x0, #0x0
  408b48:	b.eq	408bec <wcrtomb@plt+0x3edc>  // b.none
  408b4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b50:	add	x0, x0, #0x310
  408b54:	ldr	x0, [x0]
  408b58:	ldr	x1, [x0]
  408b5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b60:	add	x0, x0, #0x430
  408b64:	ldr	x0, [x0]
  408b68:	cmp	x1, x0
  408b6c:	b.cs	408bec <wcrtomb@plt+0x3edc>  // b.hs, b.nlast
  408b70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b74:	add	x0, x0, #0x310
  408b78:	ldr	x0, [x0]
  408b7c:	ldr	x3, [x0]
  408b80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b84:	add	x0, x0, #0x430
  408b88:	ldr	x1, [x0]
  408b8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408b90:	add	x0, x0, #0x310
  408b94:	ldr	x0, [x0]
  408b98:	ldr	x0, [x0]
  408b9c:	sub	x0, x1, x0
  408ba0:	mov	x2, x0
  408ba4:	mov	w1, #0x2f                  	// #47
  408ba8:	mov	x0, x3
  408bac:	bl	404a20 <memchr@plt>
  408bb0:	cmp	x0, #0x0
  408bb4:	b.ne	408bec <wcrtomb@plt+0x3edc>  // b.any
  408bb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408bbc:	add	x0, x0, #0x310
  408bc0:	ldr	x0, [x0]
  408bc4:	ldr	x4, [x0]
  408bc8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408bcc:	add	x0, x0, #0x358
  408bd0:	ldr	x0, [x0]
  408bd4:	mov	x3, x0
  408bd8:	mov	w2, #0x40000000            	// #1073741824
  408bdc:	mov	w1, #0x42                  	// #66
  408be0:	mov	x0, x4
  408be4:	bl	43ba64 <wcrtomb@plt+0x36d54>
  408be8:	b	408c08 <wcrtomb@plt+0x3ef8>
  408bec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408bf0:	add	x0, x0, #0x310
  408bf4:	ldr	x0, [x0]
  408bf8:	ldr	x0, [x0]
  408bfc:	mov	w2, #0x1b6                 	// #438
  408c00:	mov	w1, #0x42                  	// #66
  408c04:	bl	404430 <open@plt>
  408c08:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  408c0c:	add	x1, x1, #0x400
  408c10:	str	w0, [x1]
  408c14:	nop
  408c18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408c1c:	add	x0, x0, #0x400
  408c20:	ldr	w0, [x0]
  408c24:	cmp	w0, #0x0
  408c28:	b.ge	408c8c <wcrtomb@plt+0x3f7c>  // b.tcont
  408c2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408c30:	add	x0, x0, #0x310
  408c34:	ldr	x0, [x0]
  408c38:	ldr	x0, [x0]
  408c3c:	bl	43a65c <wcrtomb@plt+0x3594c>
  408c40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408c44:	add	x0, x0, #0x37a
  408c48:	ldrb	w0, [x0]
  408c4c:	eor	w0, w0, #0x1
  408c50:	and	w0, w0, #0xff
  408c54:	cmp	w0, #0x0
  408c58:	b.eq	408c80 <wcrtomb@plt+0x3f70>  // b.none
  408c5c:	ldr	w0, [sp, #44]
  408c60:	cmp	w0, #0x1
  408c64:	b.ne	408c80 <wcrtomb@plt+0x3f70>  // b.any
  408c68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408c6c:	add	x0, x0, #0x325
  408c70:	ldrb	w0, [x0]
  408c74:	cmp	w0, #0x0
  408c78:	b.eq	408c80 <wcrtomb@plt+0x3f70>  // b.none
  408c7c:	bl	42542c <wcrtomb@plt+0x2071c>
  408c80:	mov	w0, #0x1                   	// #1
  408c84:	str	w0, [sp, #60]
  408c88:	b	4085f8 <wcrtomb@plt+0x38e8>
  408c8c:	mov	w0, #0x1                   	// #1
  408c90:	ldr	x19, [sp, #16]
  408c94:	ldp	x29, x30, [sp], #64
  408c98:	ret
  408c9c:	stp	x29, x30, [sp, #-48]!
  408ca0:	mov	x29, sp
  408ca4:	str	x0, [sp, #24]
  408ca8:	ldr	x0, [sp, #24]
  408cac:	bl	434e14 <wcrtomb@plt+0x30104>
  408cb0:	mov	w2, #0x0                   	// #0
  408cb4:	ldr	x1, [sp, #24]
  408cb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408cbc:	add	x0, x0, #0x18
  408cc0:	bl	420af0 <wcrtomb@plt+0x1bde0>
  408cc4:	str	w0, [sp, #44]
  408cc8:	ldr	w0, [sp, #44]
  408ccc:	cmp	w0, #0x1
  408cd0:	b.ne	408cec <wcrtomb@plt+0x3fdc>  // b.any
  408cd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408cd8:	add	x0, x0, #0x18
  408cdc:	ldr	x0, [x0]
  408ce0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  408ce4:	mov	w0, #0x1                   	// #1
  408ce8:	b	408d40 <wcrtomb@plt+0x4030>
  408cec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408cf0:	add	x0, x0, #0x420
  408cf4:	ldr	x0, [x0]
  408cf8:	cmp	x0, #0x0
  408cfc:	b.eq	408d10 <wcrtomb@plt+0x4000>  // b.none
  408d00:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408d04:	add	x0, x0, #0x420
  408d08:	ldr	x0, [x0]
  408d0c:	blr	x0
  408d10:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  408d14:	add	x0, x0, #0xed8
  408d18:	bl	404c60 <gettext@plt>
  408d1c:	mov	x2, x0
  408d20:	mov	w1, #0x0                   	// #0
  408d24:	mov	w0, #0x0                   	// #0
  408d28:	bl	404100 <error@plt>
  408d2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408d30:	add	x0, x0, #0xdb0
  408d34:	mov	w1, #0x2                   	// #2
  408d38:	str	w1, [x0]
  408d3c:	mov	w0, #0x0                   	// #0
  408d40:	ldp	x29, x30, [sp], #48
  408d44:	ret
  408d48:	stp	x29, x30, [sp, #-224]!
  408d4c:	mov	x29, sp
  408d50:	stp	x19, x20, [sp, #16]
  408d54:	stp	x21, x22, [sp, #32]
  408d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408d5c:	add	x0, x0, #0x38c
  408d60:	ldr	w0, [x0]
  408d64:	cmp	w0, #0x2
  408d68:	b.hi	408d78 <wcrtomb@plt+0x4068>  // b.pmore
  408d6c:	cmp	w0, #0x0
  408d70:	b.ne	408d80 <wcrtomb@plt+0x4070>  // b.any
  408d74:	b	408d8c <wcrtomb@plt+0x407c>
  408d78:	cmp	w0, #0x8
  408d7c:	b.ne	408d8c <wcrtomb@plt+0x407c>  // b.any
  408d80:	mov	w0, #0x2                   	// #2
  408d84:	str	w0, [sp, #220]
  408d88:	b	408d94 <wcrtomb@plt+0x4084>
  408d8c:	str	wzr, [sp, #220]
  408d90:	nop
  408d94:	ldr	w0, [sp, #220]
  408d98:	bl	4083ec <wcrtomb@plt+0x36dc>
  408d9c:	and	w0, w0, #0xff
  408da0:	eor	w0, w0, #0x1
  408da4:	and	w0, w0, #0xff
  408da8:	cmp	w0, #0x0
  408dac:	b.eq	408dbc <wcrtomb@plt+0x40ac>  // b.none
  408db0:	mov	w0, #0x1                   	// #1
  408db4:	b	409548 <wcrtomb@plt+0x4838>
  408db8:	bl	406f60 <wcrtomb@plt+0x2250>
  408dbc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408dc0:	add	x0, x0, #0x400
  408dc4:	ldr	w1, [x0]
  408dc8:	mov	w0, #0x3fffffff            	// #1073741823
  408dcc:	cmp	w1, w0
  408dd0:	b.le	408e14 <wcrtomb@plt+0x4104>
  408dd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408dd8:	add	x0, x0, #0x400
  408ddc:	ldr	w1, [x0]
  408de0:	mov	w0, #0xc0000000            	// #-1073741824
  408de4:	add	w3, w1, w0
  408de8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408dec:	add	x0, x0, #0xfc0
  408df0:	ldr	x0, [x0]
  408df4:	mov	x1, x0
  408df8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408dfc:	add	x0, x0, #0x3c8
  408e00:	ldr	x0, [x0]
  408e04:	mov	x2, x0
  408e08:	mov	w0, w3
  408e0c:	bl	43c0a0 <wcrtomb@plt+0x37390>
  408e10:	b	408e48 <wcrtomb@plt+0x4138>
  408e14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408e18:	add	x0, x0, #0x400
  408e1c:	ldr	w3, [x0]
  408e20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408e24:	add	x0, x0, #0xfc0
  408e28:	ldr	x0, [x0]
  408e2c:	mov	x1, x0
  408e30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408e34:	add	x0, x0, #0x3c8
  408e38:	ldr	x0, [x0]
  408e3c:	mov	x2, x0
  408e40:	mov	w0, w3
  408e44:	bl	45a2ac <argp_usage@@Base+0x111c0>
  408e48:	str	x0, [sp, #208]
  408e4c:	ldr	x0, [sp, #208]
  408e50:	cmn	x0, #0x1
  408e54:	b.eq	408db8 <wcrtomb@plt+0x40a8>  // b.none
  408e58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408e5c:	add	x0, x0, #0x3c8
  408e60:	ldr	x0, [x0]
  408e64:	ldr	x1, [sp, #208]
  408e68:	cmp	x1, x0
  408e6c:	b.eq	408e78 <wcrtomb@plt+0x4168>  // b.none
  408e70:	ldr	x0, [sp, #208]
  408e74:	bl	4070c4 <wcrtomb@plt+0x23b4>
  408e78:	bl	406030 <wcrtomb@plt+0x1320>
  408e7c:	str	x0, [sp, #192]
  408e80:	ldr	x0, [sp, #192]
  408e84:	cmp	x0, #0x0
  408e88:	b.ne	408ed4 <wcrtomb@plt+0x41c4>  // b.any
  408e8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408e90:	add	x0, x0, #0x420
  408e94:	ldr	x0, [x0]
  408e98:	cmp	x0, #0x0
  408e9c:	b.eq	408eb0 <wcrtomb@plt+0x41a0>  // b.none
  408ea0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408ea4:	add	x0, x0, #0x420
  408ea8:	ldr	x0, [x0]
  408eac:	blr	x0
  408eb0:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  408eb4:	add	x0, x0, #0xed8
  408eb8:	bl	404c60 <gettext@plt>
  408ebc:	mov	x2, x0
  408ec0:	mov	w1, #0x0                   	// #0
  408ec4:	mov	w0, #0x0                   	// #0
  408ec8:	bl	404100 <error@plt>
  408ecc:	mov	w0, #0x0                   	// #0
  408ed0:	b	409548 <wcrtomb@plt+0x4838>
  408ed4:	ldr	x0, [sp, #192]
  408ed8:	ldrb	w0, [x0, #156]
  408edc:	cmp	w0, #0x67
  408ee0:	b.eq	408f00 <wcrtomb@plt+0x41f0>  // b.none
  408ee4:	cmp	w0, #0x67
  408ee8:	b.gt	409130 <wcrtomb@plt+0x4420>
  408eec:	cmp	w0, #0x4d
  408ef0:	b.eq	409088 <wcrtomb@plt+0x4378>  // b.none
  408ef4:	cmp	w0, #0x56
  408ef8:	b.eq	409014 <wcrtomb@plt+0x4304>  // b.none
  408efc:	b	409130 <wcrtomb@plt+0x4420>
  408f00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408f04:	add	x0, x0, #0x540
  408f08:	bl	434e14 <wcrtomb@plt+0x30104>
  408f0c:	add	x3, sp, #0xc0
  408f10:	mov	w2, #0x2                   	// #2
  408f14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408f18:	add	x1, x0, #0x540
  408f1c:	mov	x0, x3
  408f20:	bl	420af0 <wcrtomb@plt+0x1bde0>
  408f24:	cmp	w0, #0x2
  408f28:	b.eq	408f74 <wcrtomb@plt+0x4264>  // b.none
  408f2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408f30:	add	x0, x0, #0x420
  408f34:	ldr	x0, [x0]
  408f38:	cmp	x0, #0x0
  408f3c:	b.eq	408f50 <wcrtomb@plt+0x4240>  // b.none
  408f40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408f44:	add	x0, x0, #0x420
  408f48:	ldr	x0, [x0]
  408f4c:	blr	x0
  408f50:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  408f54:	add	x0, x0, #0xed8
  408f58:	bl	404c60 <gettext@plt>
  408f5c:	mov	x2, x0
  408f60:	mov	w1, #0x0                   	// #0
  408f64:	mov	w0, #0x0                   	// #0
  408f68:	bl	404100 <error@plt>
  408f6c:	mov	w0, #0x0                   	// #0
  408f70:	b	409548 <wcrtomb@plt+0x4838>
  408f74:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408f78:	add	x0, x0, #0x540
  408f7c:	bl	418fa8 <wcrtomb@plt+0x14298>
  408f80:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408f84:	add	x0, x0, #0x540
  408f88:	bl	434ecc <wcrtomb@plt+0x301bc>
  408f8c:	add	x3, sp, #0xc0
  408f90:	mov	w2, #0x0                   	// #0
  408f94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  408f98:	add	x1, x0, #0x540
  408f9c:	mov	x0, x3
  408fa0:	bl	420af0 <wcrtomb@plt+0x1bde0>
  408fa4:	cmp	w0, #0x1
  408fa8:	b.eq	408fb8 <wcrtomb@plt+0x42a8>  // b.none
  408fac:	cmp	w0, #0x5
  408fb0:	b.eq	40900c <wcrtomb@plt+0x42fc>  // b.none
  408fb4:	b	408fc4 <wcrtomb@plt+0x42b4>
  408fb8:	ldr	x0, [sp, #192]
  408fbc:	bl	4060c4 <wcrtomb@plt+0x13b4>
  408fc0:	b	409010 <wcrtomb@plt+0x4300>
  408fc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408fc8:	add	x0, x0, #0x420
  408fcc:	ldr	x0, [x0]
  408fd0:	cmp	x0, #0x0
  408fd4:	b.eq	408fe8 <wcrtomb@plt+0x42d8>  // b.none
  408fd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  408fdc:	add	x0, x0, #0x420
  408fe0:	ldr	x0, [x0]
  408fe4:	blr	x0
  408fe8:	adrp	x0, 47e000 <_obstack_memory_used@@Base+0x20ec0>
  408fec:	add	x0, x0, #0xed8
  408ff0:	bl	404c60 <gettext@plt>
  408ff4:	mov	x2, x0
  408ff8:	mov	w1, #0x0                   	// #0
  408ffc:	mov	w0, #0x0                   	// #0
  409000:	bl	404100 <error@plt>
  409004:	mov	w0, #0x0                   	// #0
  409008:	b	409548 <wcrtomb@plt+0x4838>
  40900c:	nop
  409010:	b	40913c <wcrtomb@plt+0x442c>
  409014:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409018:	add	x0, x0, #0x540
  40901c:	bl	408c9c <wcrtomb@plt+0x3f8c>
  409020:	and	w0, w0, #0xff
  409024:	eor	w0, w0, #0x1
  409028:	and	w0, w0, #0xff
  40902c:	cmp	w0, #0x0
  409030:	b.eq	40903c <wcrtomb@plt+0x432c>  // b.none
  409034:	mov	w0, #0x0                   	// #0
  409038:	b	409548 <wcrtomb@plt+0x4838>
  40903c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409040:	add	x0, x0, #0x540
  409044:	bl	434ecc <wcrtomb@plt+0x301bc>
  409048:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40904c:	add	x0, x0, #0x18
  409050:	ldr	x0, [x0]
  409054:	mov	x2, #0x64                  	// #100
  409058:	mov	x1, x0
  40905c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409060:	add	x0, x0, #0xfb0
  409064:	bl	423d5c <wcrtomb@plt+0x1f04c>
  409068:	ldr	x0, [sp, #192]
  40906c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  409070:	bl	406030 <wcrtomb@plt+0x1320>
  409074:	str	x0, [sp, #192]
  409078:	ldr	x0, [sp, #192]
  40907c:	ldrb	w0, [x0, #156]
  409080:	cmp	w0, #0x4d
  409084:	b.ne	409138 <wcrtomb@plt+0x4428>  // b.any
  409088:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40908c:	add	x0, x0, #0x540
  409090:	bl	408c9c <wcrtomb@plt+0x3f8c>
  409094:	and	w0, w0, #0xff
  409098:	eor	w0, w0, #0x1
  40909c:	and	w0, w0, #0xff
  4090a0:	cmp	w0, #0x0
  4090a4:	b.eq	4090b0 <wcrtomb@plt+0x43a0>  // b.none
  4090a8:	mov	w0, #0x0                   	// #0
  4090ac:	b	409548 <wcrtomb@plt+0x4838>
  4090b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4090b4:	add	x0, x0, #0x540
  4090b8:	bl	434ecc <wcrtomb@plt+0x301bc>
  4090bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4090c0:	add	x0, x0, #0x18
  4090c4:	ldr	x0, [x0]
  4090c8:	mov	x2, #0x64                  	// #100
  4090cc:	mov	x1, x0
  4090d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4090d4:	add	x0, x0, #0xfb8
  4090d8:	bl	423d5c <wcrtomb@plt+0x1f04c>
  4090dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4090e0:	add	x0, x0, #0x18
  4090e4:	ldr	x0, [x0]
  4090e8:	add	x0, x0, #0x7c
  4090ec:	mov	x1, #0xc                   	// #12
  4090f0:	bl	4222d4 <wcrtomb@plt+0x1d5c4>
  4090f4:	mov	x1, x0
  4090f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4090fc:	add	x0, x0, #0xfd0
  409100:	str	x1, [x0]
  409104:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409108:	add	x0, x0, #0x18
  40910c:	ldr	x0, [x0]
  409110:	add	x0, x0, #0x171
  409114:	mov	x1, #0xc                   	// #12
  409118:	bl	4222d4 <wcrtomb@plt+0x1d5c4>
  40911c:	mov	x1, x0
  409120:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409124:	add	x0, x0, #0xfe0
  409128:	str	x1, [x0]
  40912c:	b	40913c <wcrtomb@plt+0x442c>
  409130:	nop
  409134:	b	40913c <wcrtomb@plt+0x442c>
  409138:	nop
  40913c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409140:	add	x0, x0, #0x528
  409144:	ldr	x0, [x0]
  409148:	cmp	x0, #0x0
  40914c:	b.eq	409540 <wcrtomb@plt+0x4830>  // b.none
  409150:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409154:	add	x0, x0, #0xfb8
  409158:	ldr	x0, [x0]
  40915c:	cmp	x0, #0x0
  409160:	b.ne	4091c8 <wcrtomb@plt+0x44b8>  // b.any
  409164:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409168:	add	x0, x0, #0x420
  40916c:	ldr	x0, [x0]
  409170:	cmp	x0, #0x0
  409174:	b.eq	409188 <wcrtomb@plt+0x4478>  // b.none
  409178:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40917c:	add	x0, x0, #0x420
  409180:	ldr	x0, [x0]
  409184:	blr	x0
  409188:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40918c:	add	x0, x0, #0x458
  409190:	bl	404c60 <gettext@plt>
  409194:	mov	x19, x0
  409198:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40919c:	add	x0, x0, #0x528
  4091a0:	ldr	x0, [x0]
  4091a4:	ldr	x0, [x0, #16]
  4091a8:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4091ac:	mov	x3, x0
  4091b0:	mov	x2, x19
  4091b4:	mov	w1, #0x0                   	// #0
  4091b8:	mov	w0, #0x0                   	// #0
  4091bc:	bl	404100 <error@plt>
  4091c0:	mov	w0, #0x0                   	// #0
  4091c4:	b	409548 <wcrtomb@plt+0x4838>
  4091c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4091cc:	add	x0, x0, #0xfb8
  4091d0:	ldr	x2, [x0]
  4091d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4091d8:	add	x0, x0, #0x528
  4091dc:	ldr	x0, [x0]
  4091e0:	ldr	x0, [x0, #16]
  4091e4:	mov	x1, x0
  4091e8:	mov	x0, x2
  4091ec:	bl	4047c0 <strcmp@plt>
  4091f0:	cmp	w0, #0x0
  4091f4:	b.eq	409334 <wcrtomb@plt+0x4624>  // b.none
  4091f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4091fc:	add	x0, x0, #0x360
  409200:	ldr	w0, [x0]
  409204:	cmp	w0, #0x6
  409208:	b.eq	409220 <wcrtomb@plt+0x4510>  // b.none
  40920c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409210:	add	x0, x0, #0x360
  409214:	ldr	w0, [x0]
  409218:	cmp	w0, #0x2
  40921c:	b.ne	4092d0 <wcrtomb@plt+0x45c0>  // b.any
  409220:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409224:	add	x0, x0, #0x528
  409228:	ldr	x0, [x0]
  40922c:	ldr	x0, [x0, #16]
  409230:	bl	4040b0 <strlen@plt>
  409234:	cmp	x0, #0x63
  409238:	b.ls	4092d0 <wcrtomb@plt+0x45c0>  // b.plast
  40923c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409240:	add	x0, x0, #0xfb8
  409244:	ldr	x3, [x0]
  409248:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40924c:	add	x0, x0, #0x528
  409250:	ldr	x0, [x0]
  409254:	ldr	x0, [x0, #16]
  409258:	mov	x2, #0x64                  	// #100
  40925c:	mov	x1, x0
  409260:	mov	x0, x3
  409264:	bl	404480 <strncmp@plt>
  409268:	cmp	w0, #0x0
  40926c:	b.ne	4092d0 <wcrtomb@plt+0x45c0>  // b.any
  409270:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409274:	add	x0, x0, #0x420
  409278:	ldr	x0, [x0]
  40927c:	cmp	x0, #0x0
  409280:	b.eq	409294 <wcrtomb@plt+0x4584>  // b.none
  409284:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409288:	add	x0, x0, #0x420
  40928c:	ldr	x0, [x0]
  409290:	blr	x0
  409294:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409298:	add	x0, x0, #0x480
  40929c:	bl	404c60 <gettext@plt>
  4092a0:	mov	x19, x0
  4092a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4092a8:	add	x0, x0, #0x528
  4092ac:	ldr	x0, [x0]
  4092b0:	ldr	x0, [x0, #16]
  4092b4:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4092b8:	mov	x3, x0
  4092bc:	mov	x2, x19
  4092c0:	mov	w1, #0x0                   	// #0
  4092c4:	mov	w0, #0x0                   	// #0
  4092c8:	bl	404100 <error@plt>
  4092cc:	b	409334 <wcrtomb@plt+0x4624>
  4092d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4092d4:	add	x0, x0, #0x420
  4092d8:	ldr	x0, [x0]
  4092dc:	cmp	x0, #0x0
  4092e0:	b.eq	4092f4 <wcrtomb@plt+0x45e4>  // b.none
  4092e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4092e8:	add	x0, x0, #0x420
  4092ec:	ldr	x0, [x0]
  4092f0:	blr	x0
  4092f4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4092f8:	add	x0, x0, #0x458
  4092fc:	bl	404c60 <gettext@plt>
  409300:	mov	x19, x0
  409304:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409308:	add	x0, x0, #0x528
  40930c:	ldr	x0, [x0]
  409310:	ldr	x0, [x0, #16]
  409314:	bl	459f38 <argp_usage@@Base+0x10e4c>
  409318:	mov	x3, x0
  40931c:	mov	x2, x19
  409320:	mov	w1, #0x0                   	// #0
  409324:	mov	w0, #0x0                   	// #0
  409328:	bl	404100 <error@plt>
  40932c:	mov	w0, #0x0                   	// #0
  409330:	b	409548 <wcrtomb@plt+0x4838>
  409334:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409338:	add	x0, x0, #0xfd0
  40933c:	ldr	x1, [x0]
  409340:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409344:	add	x0, x0, #0xfe0
  409348:	ldr	x0, [x0]
  40934c:	add	x0, x1, x0
  409350:	str	x0, [sp, #200]
  409354:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409358:	add	x0, x0, #0x528
  40935c:	ldr	x0, [x0]
  409360:	ldr	x1, [x0, #24]
  409364:	ldr	x0, [sp, #200]
  409368:	cmp	x1, x0
  40936c:	b.ne	409388 <wcrtomb@plt+0x4678>  // b.any
  409370:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409374:	add	x0, x0, #0xfe0
  409378:	ldr	x0, [x0]
  40937c:	ldr	x1, [sp, #200]
  409380:	cmp	x1, x0
  409384:	b.cs	40944c <wcrtomb@plt+0x473c>  // b.hs, b.nlast
  409388:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40938c:	add	x0, x0, #0x420
  409390:	ldr	x0, [x0]
  409394:	cmp	x0, #0x0
  409398:	b.eq	4093ac <wcrtomb@plt+0x469c>  // b.none
  40939c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4093a0:	add	x0, x0, #0x420
  4093a4:	ldr	x0, [x0]
  4093a8:	blr	x0
  4093ac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4093b0:	add	x0, x0, #0x4c8
  4093b4:	bl	404c60 <gettext@plt>
  4093b8:	mov	x19, x0
  4093bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4093c0:	add	x0, x0, #0xfb8
  4093c4:	ldr	x0, [x0]
  4093c8:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4093cc:	mov	x20, x0
  4093d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4093d4:	add	x0, x0, #0x528
  4093d8:	ldr	x0, [x0]
  4093dc:	ldr	x0, [x0, #24]
  4093e0:	mov	x2, x0
  4093e4:	add	x0, sp, #0xa8
  4093e8:	mov	x1, x0
  4093ec:	mov	x0, x2
  4093f0:	bl	450988 <argp_usage@@Base+0x789c>
  4093f4:	mov	x21, x0
  4093f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4093fc:	add	x0, x0, #0xfd0
  409400:	ldr	x0, [x0]
  409404:	add	x1, sp, #0x90
  409408:	bl	450988 <argp_usage@@Base+0x789c>
  40940c:	mov	x22, x0
  409410:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409414:	add	x0, x0, #0xfe0
  409418:	ldr	x0, [x0]
  40941c:	add	x1, sp, #0x78
  409420:	bl	450988 <argp_usage@@Base+0x789c>
  409424:	mov	x6, x0
  409428:	mov	x5, x22
  40942c:	mov	x4, x21
  409430:	mov	x3, x20
  409434:	mov	x2, x19
  409438:	mov	w1, #0x0                   	// #0
  40943c:	mov	w0, #0x0                   	// #0
  409440:	bl	404100 <error@plt>
  409444:	mov	w0, #0x0                   	// #0
  409448:	b	409548 <wcrtomb@plt+0x4838>
  40944c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409450:	add	x0, x0, #0x528
  409454:	ldr	x0, [x0]
  409458:	ldr	x1, [x0, #24]
  40945c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409460:	add	x0, x0, #0x528
  409464:	ldr	x0, [x0]
  409468:	ldr	x0, [x0, #32]
  40946c:	sub	x0, x1, x0
  409470:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409474:	add	x1, x1, #0xfe0
  409478:	ldr	x1, [x1]
  40947c:	cmp	x0, x1
  409480:	b.eq	409540 <wcrtomb@plt+0x4830>  // b.none
  409484:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409488:	add	x0, x0, #0x420
  40948c:	ldr	x0, [x0]
  409490:	cmp	x0, #0x0
  409494:	b.eq	4094a8 <wcrtomb@plt+0x4798>  // b.none
  409498:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40949c:	add	x0, x0, #0x420
  4094a0:	ldr	x0, [x0]
  4094a4:	blr	x0
  4094a8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4094ac:	add	x0, x0, #0x4f0
  4094b0:	bl	404c60 <gettext@plt>
  4094b4:	mov	x19, x0
  4094b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4094bc:	add	x0, x0, #0x528
  4094c0:	ldr	x0, [x0]
  4094c4:	ldr	x0, [x0, #24]
  4094c8:	mov	x2, x0
  4094cc:	add	x0, sp, #0x60
  4094d0:	mov	x1, x0
  4094d4:	mov	x0, x2
  4094d8:	bl	450988 <argp_usage@@Base+0x789c>
  4094dc:	mov	x20, x0
  4094e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4094e4:	add	x0, x0, #0x528
  4094e8:	ldr	x0, [x0]
  4094ec:	ldr	x0, [x0, #32]
  4094f0:	mov	x2, x0
  4094f4:	add	x0, sp, #0x48
  4094f8:	mov	x1, x0
  4094fc:	mov	x0, x2
  409500:	bl	450988 <argp_usage@@Base+0x789c>
  409504:	mov	x21, x0
  409508:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40950c:	add	x0, x0, #0xfe0
  409510:	ldr	x0, [x0]
  409514:	add	x1, sp, #0x30
  409518:	bl	450988 <argp_usage@@Base+0x789c>
  40951c:	mov	x5, x0
  409520:	mov	x4, x21
  409524:	mov	x3, x20
  409528:	mov	x2, x19
  40952c:	mov	w1, #0x0                   	// #0
  409530:	mov	w0, #0x0                   	// #0
  409534:	bl	404100 <error@plt>
  409538:	mov	w0, #0x0                   	// #0
  40953c:	b	409548 <wcrtomb@plt+0x4838>
  409540:	bl	407ed0 <wcrtomb@plt+0x31c0>
  409544:	mov	w0, #0x1                   	// #1
  409548:	ldp	x19, x20, [sp, #16]
  40954c:	ldp	x21, x22, [sp, #32]
  409550:	ldp	x29, x30, [sp], #224
  409554:	ret
  409558:	stp	x29, x30, [sp, #-64]!
  40955c:	mov	x29, sp
  409560:	str	x0, [sp, #24]
  409564:	ldr	x0, [sp, #24]
  409568:	bl	4040b0 <strlen@plt>
  40956c:	str	x0, [sp, #48]
  409570:	ldr	x0, [sp, #48]
  409574:	cmp	x0, #0x0
  409578:	b.ne	409584 <wcrtomb@plt+0x4874>  // b.any
  40957c:	mov	x0, #0x0                   	// #0
  409580:	b	40967c <wcrtomb@plt+0x496c>
  409584:	ldr	x0, [sp, #48]
  409588:	sub	x0, x0, #0x1
  40958c:	ldr	x1, [sp, #24]
  409590:	add	x0, x1, x0
  409594:	str	x0, [sp, #56]
  409598:	b	4095a8 <wcrtomb@plt+0x4898>
  40959c:	ldr	x0, [sp, #56]
  4095a0:	sub	x0, x0, #0x1
  4095a4:	str	x0, [sp, #56]
  4095a8:	ldr	x1, [sp, #56]
  4095ac:	ldr	x0, [sp, #24]
  4095b0:	cmp	x1, x0
  4095b4:	b.ls	4095e4 <wcrtomb@plt+0x48d4>  // b.plast
  4095b8:	bl	4047f0 <__ctype_b_loc@plt>
  4095bc:	ldr	x1, [x0]
  4095c0:	ldr	x0, [sp, #56]
  4095c4:	ldrb	w0, [x0]
  4095c8:	and	x0, x0, #0xff
  4095cc:	lsl	x0, x0, #1
  4095d0:	add	x0, x1, x0
  4095d4:	ldrh	w0, [x0]
  4095d8:	and	w0, w0, #0x800
  4095dc:	cmp	w0, #0x0
  4095e0:	b.ne	40959c <wcrtomb@plt+0x488c>  // b.any
  4095e4:	ldr	x1, [sp, #56]
  4095e8:	ldr	x0, [sp, #24]
  4095ec:	cmp	x1, x0
  4095f0:	b.ls	409678 <wcrtomb@plt+0x4968>  // b.plast
  4095f4:	ldr	x0, [sp, #56]
  4095f8:	sub	x0, x0, #0x7
  4095fc:	ldr	x1, [sp, #24]
  409600:	cmp	x1, x0
  409604:	b.cs	409678 <wcrtomb@plt+0x4968>  // b.hs, b.nlast
  409608:	ldr	x0, [sp, #56]
  40960c:	sub	x0, x0, #0x7
  409610:	str	x0, [sp, #56]
  409614:	mov	x2, #0x8                   	// #8
  409618:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40961c:	add	x1, x0, #0x520
  409620:	ldr	x0, [sp, #56]
  409624:	bl	404790 <memcmp@plt>
  409628:	cmp	w0, #0x0
  40962c:	b.ne	409678 <wcrtomb@plt+0x4968>  // b.any
  409630:	ldr	x1, [sp, #56]
  409634:	ldr	x0, [sp, #24]
  409638:	sub	x0, x1, x0
  40963c:	str	x0, [sp, #48]
  409640:	ldr	x0, [sp, #48]
  409644:	add	x0, x0, #0x1
  409648:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  40964c:	str	x0, [sp, #40]
  409650:	ldr	x2, [sp, #48]
  409654:	ldr	x1, [sp, #24]
  409658:	ldr	x0, [sp, #40]
  40965c:	bl	404020 <memcpy@plt>
  409660:	ldr	x1, [sp, #40]
  409664:	ldr	x0, [sp, #48]
  409668:	add	x0, x1, x0
  40966c:	strb	wzr, [x0]
  409670:	ldr	x0, [sp, #40]
  409674:	b	40967c <wcrtomb@plt+0x496c>
  409678:	mov	x0, #0x0                   	// #0
  40967c:	ldp	x29, x30, [sp], #64
  409680:	ret
  409684:	stp	x29, x30, [sp, #-48]!
  409688:	mov	x29, sp
  40968c:	str	x0, [sp, #24]
  409690:	strb	wzr, [sp, #47]
  409694:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409698:	add	x0, x0, #0x2b8
  40969c:	ldr	x0, [x0]
  4096a0:	mov	w2, #0x0                   	// #0
  4096a4:	ldr	x1, [sp, #24]
  4096a8:	bl	404980 <fnmatch@plt>
  4096ac:	cmp	w0, #0x0
  4096b0:	b.ne	4096bc <wcrtomb@plt+0x49ac>  // b.any
  4096b4:	mov	w0, #0x1                   	// #1
  4096b8:	b	40972c <wcrtomb@plt+0x4a1c>
  4096bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4096c0:	add	x0, x0, #0x7c
  4096c4:	ldrb	w0, [x0]
  4096c8:	eor	w0, w0, #0x1
  4096cc:	and	w0, w0, #0xff
  4096d0:	cmp	w0, #0x0
  4096d4:	b.eq	4096e0 <wcrtomb@plt+0x49d0>  // b.none
  4096d8:	mov	w0, #0x0                   	// #0
  4096dc:	b	40972c <wcrtomb@plt+0x4a1c>
  4096e0:	ldr	x0, [sp, #24]
  4096e4:	bl	409558 <wcrtomb@plt+0x4848>
  4096e8:	str	x0, [sp, #32]
  4096ec:	ldr	x0, [sp, #32]
  4096f0:	cmp	x0, #0x0
  4096f4:	b.eq	409728 <wcrtomb@plt+0x4a18>  // b.none
  4096f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4096fc:	add	x0, x0, #0x2b8
  409700:	ldr	x0, [x0]
  409704:	mov	w2, #0x0                   	// #0
  409708:	mov	x1, x0
  40970c:	ldr	x0, [sp, #32]
  409710:	bl	404980 <fnmatch@plt>
  409714:	cmp	w0, #0x0
  409718:	cset	w0, eq  // eq = none
  40971c:	strb	w0, [sp, #47]
  409720:	ldr	x0, [sp, #32]
  409724:	bl	404880 <free@plt>
  409728:	ldrb	w0, [sp, #47]
  40972c:	ldp	x29, x30, [sp], #48
  409730:	ret
  409734:	stp	x29, x30, [sp, #-464]!
  409738:	mov	x29, sp
  40973c:	stp	x19, x20, [sp, #16]
  409740:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409744:	add	x0, x0, #0xfb0
  409748:	ldr	x0, [x0]
  40974c:	cmp	x0, #0x0
  409750:	b.ne	409840 <wcrtomb@plt+0x4b30>  // b.any
  409754:	bl	406030 <wcrtomb@plt+0x1320>
  409758:	str	x0, [sp, #456]
  40975c:	ldr	x0, [sp, #456]
  409760:	cmp	x0, #0x0
  409764:	b.ne	4097c4 <wcrtomb@plt+0x4ab4>  // b.any
  409768:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40976c:	add	x0, x0, #0x420
  409770:	ldr	x0, [x0]
  409774:	cmp	x0, #0x0
  409778:	b.eq	40978c <wcrtomb@plt+0x4a7c>  // b.none
  40977c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409780:	add	x0, x0, #0x420
  409784:	ldr	x0, [x0]
  409788:	blr	x0
  40978c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409790:	add	x0, x0, #0x530
  409794:	bl	404c60 <gettext@plt>
  409798:	mov	x19, x0
  40979c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4097a0:	add	x0, x0, #0x2b8
  4097a4:	ldr	x0, [x0]
  4097a8:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4097ac:	mov	x3, x0
  4097b0:	mov	x2, x19
  4097b4:	mov	w1, #0x0                   	// #0
  4097b8:	mov	w0, #0x0                   	// #0
  4097bc:	bl	404100 <error@plt>
  4097c0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4097c4:	ldr	x0, [sp, #456]
  4097c8:	ldrb	w0, [x0, #156]
  4097cc:	cmp	w0, #0x56
  4097d0:	b.ne	4097f0 <wcrtomb@plt+0x4ae0>  // b.any
  4097d4:	ldr	x0, [sp, #456]
  4097d8:	mov	x2, #0x64                  	// #100
  4097dc:	mov	x1, x0
  4097e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4097e4:	add	x0, x0, #0xfb0
  4097e8:	bl	423d5c <wcrtomb@plt+0x1f04c>
  4097ec:	b	409840 <wcrtomb@plt+0x4b30>
  4097f0:	ldr	x0, [sp, #456]
  4097f4:	ldrb	w0, [x0, #156]
  4097f8:	cmp	w0, #0x67
  4097fc:	b.ne	409840 <wcrtomb@plt+0x4b30>  // b.any
  409800:	add	x0, sp, #0x20
  409804:	bl	434e14 <wcrtomb@plt+0x30104>
  409808:	ldr	x0, [sp, #456]
  40980c:	add	x0, x0, #0x7c
  409810:	mov	x1, #0xc                   	// #12
  409814:	bl	422220 <wcrtomb@plt+0x1d510>
  409818:	mov	x1, x0
  40981c:	add	x0, sp, #0x20
  409820:	add	x0, x0, #0x158
  409824:	mov	x2, x1
  409828:	ldr	x1, [sp, #456]
  40982c:	bl	4192b0 <wcrtomb@plt+0x145a0>
  409830:	add	x0, sp, #0x20
  409834:	bl	418fa8 <wcrtomb@plt+0x14298>
  409838:	add	x0, sp, #0x20
  40983c:	bl	434ecc <wcrtomb@plt+0x301bc>
  409840:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409844:	add	x0, x0, #0xfb0
  409848:	ldr	x0, [x0]
  40984c:	cmp	x0, #0x0
  409850:	b.ne	4098b0 <wcrtomb@plt+0x4ba0>  // b.any
  409854:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409858:	add	x0, x0, #0x420
  40985c:	ldr	x0, [x0]
  409860:	cmp	x0, #0x0
  409864:	b.eq	409878 <wcrtomb@plt+0x4b68>  // b.none
  409868:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40986c:	add	x0, x0, #0x420
  409870:	ldr	x0, [x0]
  409874:	blr	x0
  409878:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40987c:	add	x0, x0, #0x530
  409880:	bl	404c60 <gettext@plt>
  409884:	mov	x19, x0
  409888:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40988c:	add	x0, x0, #0x2b8
  409890:	ldr	x0, [x0]
  409894:	bl	459f38 <argp_usage@@Base+0x10e4c>
  409898:	mov	x3, x0
  40989c:	mov	x2, x19
  4098a0:	mov	w1, #0x0                   	// #0
  4098a4:	mov	w0, #0x0                   	// #0
  4098a8:	bl	404100 <error@plt>
  4098ac:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4098b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4098b4:	add	x0, x0, #0xfb0
  4098b8:	ldr	x0, [x0]
  4098bc:	bl	409684 <wcrtomb@plt+0x4974>
  4098c0:	and	w0, w0, #0xff
  4098c4:	eor	w0, w0, #0x1
  4098c8:	and	w0, w0, #0xff
  4098cc:	cmp	w0, #0x0
  4098d0:	b.eq	409958 <wcrtomb@plt+0x4c48>  // b.none
  4098d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4098d8:	add	x0, x0, #0x420
  4098dc:	ldr	x0, [x0]
  4098e0:	cmp	x0, #0x0
  4098e4:	b.eq	4098f8 <wcrtomb@plt+0x4be8>  // b.none
  4098e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4098ec:	add	x0, x0, #0x420
  4098f0:	ldr	x0, [x0]
  4098f4:	blr	x0
  4098f8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4098fc:	add	x0, x0, #0x550
  409900:	bl	404c60 <gettext@plt>
  409904:	mov	x19, x0
  409908:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40990c:	add	x0, x0, #0xfb0
  409910:	ldr	x0, [x0]
  409914:	mov	x1, x0
  409918:	mov	w0, #0x0                   	// #0
  40991c:	bl	459f10 <argp_usage@@Base+0x10e24>
  409920:	mov	x20, x0
  409924:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409928:	add	x0, x0, #0x2b8
  40992c:	ldr	x0, [x0]
  409930:	mov	x1, x0
  409934:	mov	w0, #0x1                   	// #1
  409938:	bl	459f10 <argp_usage@@Base+0x10e24>
  40993c:	mov	x4, x0
  409940:	mov	x3, x20
  409944:	mov	x2, x19
  409948:	mov	w1, #0x0                   	// #0
  40994c:	mov	w0, #0x0                   	// #0
  409950:	bl	404100 <error@plt>
  409954:	bl	412ae0 <wcrtomb@plt+0xddd0>
  409958:	nop
  40995c:	ldp	x19, x20, [sp, #16]
  409960:	ldp	x29, x30, [sp], #464
  409964:	ret
  409968:	stp	x29, x30, [sp, #-48]!
  40996c:	mov	x29, sp
  409970:	str	x0, [sp, #24]
  409974:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409978:	add	x0, x0, #0x360
  40997c:	ldr	w0, [x0]
  409980:	cmp	w0, #0x4
  409984:	b.ne	4099a4 <wcrtomb@plt+0x4c94>  // b.any
  409988:	ldr	x2, [sp, #24]
  40998c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409990:	add	x1, x0, #0x540
  409994:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409998:	add	x0, x0, #0x570
  40999c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  4099a0:	b	409a48 <wcrtomb@plt+0x4d38>
  4099a4:	bl	406030 <wcrtomb@plt+0x1320>
  4099a8:	str	x0, [sp, #40]
  4099ac:	mov	x2, #0x200                 	// #512
  4099b0:	mov	w1, #0x0                   	// #0
  4099b4:	ldr	x0, [sp, #40]
  4099b8:	bl	4044d0 <memset@plt>
  4099bc:	ldr	x0, [sp, #40]
  4099c0:	ldr	x1, [sp, #24]
  4099c4:	bl	4049d0 <strcpy@plt>
  4099c8:	ldr	x0, [sp, #40]
  4099cc:	mov	x1, x0
  4099d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4099d4:	add	x0, x0, #0x98
  4099d8:	bl	423d0c <wcrtomb@plt+0x1effc>
  4099dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4099e0:	add	x0, x0, #0x90
  4099e4:	ldr	x0, [x0, #8]
  4099e8:	bl	44a1dc <argp_usage@@Base+0x10f0>
  4099ec:	and	w1, w0, #0xff
  4099f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4099f4:	add	x0, x0, #0x90
  4099f8:	strb	w1, [x0, #16]
  4099fc:	ldr	x0, [sp, #40]
  409a00:	mov	w1, #0x56                  	// #86
  409a04:	strb	w1, [x0, #156]
  409a08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409a0c:	add	x0, x0, #0x2f8
  409a10:	ldr	x3, [x0]
  409a14:	ldr	x0, [sp, #40]
  409a18:	add	x0, x0, #0x88
  409a1c:	mov	x2, #0xc                   	// #12
  409a20:	mov	x1, x0
  409a24:	mov	x0, x3
  409a28:	bl	40dc80 <wcrtomb@plt+0x8f70>
  409a2c:	mov	x2, #0xffffffffffffffff    	// #-1
  409a30:	ldr	x1, [sp, #40]
  409a34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409a38:	add	x0, x0, #0x90
  409a3c:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  409a40:	ldr	x0, [sp, #40]
  409a44:	bl	4060c4 <wcrtomb@plt+0x13b4>
  409a48:	nop
  409a4c:	ldp	x29, x30, [sp], #48
  409a50:	ret
  409a54:	stp	x29, x30, [sp, #-80]!
  409a58:	mov	x29, sp
  409a5c:	str	x19, [sp, #16]
  409a60:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  409a64:	add	x0, x0, #0x698
  409a68:	ldr	w0, [x0]
  409a6c:	sxtw	x0, w0
  409a70:	add	x1, sp, #0x28
  409a74:	bl	450988 <argp_usage@@Base+0x789c>
  409a78:	str	x0, [sp, #72]
  409a7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409a80:	add	x0, x0, #0x2b8
  409a84:	ldr	x0, [x0]
  409a88:	bl	4040b0 <strlen@plt>
  409a8c:	mov	x19, x0
  409a90:	ldr	x0, [sp, #72]
  409a94:	bl	4040b0 <strlen@plt>
  409a98:	add	x0, x19, x0
  409a9c:	add	x0, x0, #0x9
  409aa0:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  409aa4:	str	x0, [sp, #64]
  409aa8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409aac:	add	x0, x0, #0x2b8
  409ab0:	ldr	x1, [x0]
  409ab4:	ldr	x4, [sp, #72]
  409ab8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409abc:	add	x3, x0, #0x588
  409ac0:	mov	x2, x1
  409ac4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409ac8:	add	x1, x0, #0x590
  409acc:	ldr	x0, [sp, #64]
  409ad0:	bl	4041f0 <sprintf@plt>
  409ad4:	ldr	x0, [sp, #64]
  409ad8:	bl	409968 <wcrtomb@plt+0x4c58>
  409adc:	ldr	x0, [sp, #64]
  409ae0:	bl	404880 <free@plt>
  409ae4:	nop
  409ae8:	ldr	x19, [sp, #16]
  409aec:	ldp	x29, x30, [sp], #80
  409af0:	ret
  409af4:	stp	x29, x30, [sp, #-464]!
  409af8:	mov	x29, sp
  409afc:	str	x0, [sp, #24]
  409b00:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409b04:	add	x0, x0, #0x360
  409b08:	ldr	w0, [x0]
  409b0c:	cmp	w0, #0x4
  409b10:	b.ne	409bd4 <wcrtomb@plt+0x4ec4>  // b.any
  409b14:	add	x0, sp, #0x20
  409b18:	mov	x2, #0x1a8                 	// #424
  409b1c:	mov	w1, #0x0                   	// #0
  409b20:	bl	4044d0 <memset@plt>
  409b24:	ldr	x0, [sp, #24]
  409b28:	ldr	x0, [x0, #16]
  409b2c:	str	x0, [sp, #40]
  409b30:	ldr	x0, [sp, #40]
  409b34:	str	x0, [sp, #32]
  409b38:	mov	w0, #0x81a4                	// #33188
  409b3c:	str	w0, [sp, #136]
  409b40:	bl	404200 <getuid@plt>
  409b44:	str	w0, [sp, #144]
  409b48:	bl	4048b0 <getgid@plt>
  409b4c:	str	w0, [sp, #148]
  409b50:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  409b54:	add	x0, x0, #0x698
  409b58:	ldr	w0, [x0]
  409b5c:	sxtw	x0, w0
  409b60:	add	x3, sp, #0x20
  409b64:	mov	x2, x0
  409b68:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409b6c:	add	x1, x0, #0x5a0
  409b70:	mov	x0, x3
  409b74:	bl	417b94 <wcrtomb@plt+0x12e84>
  409b78:	str	x0, [sp, #32]
  409b7c:	ldr	x0, [sp, #32]
  409b80:	str	x0, [sp, #40]
  409b84:	ldr	x0, [sp, #24]
  409b88:	ldr	x0, [x0, #32]
  409b8c:	str	x0, [sp, #168]
  409b90:	ldr	x0, [sp, #168]
  409b94:	str	x0, [sp, #296]
  409b98:	add	x0, sp, #0x20
  409b9c:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  409ba0:	str	x0, [sp, #456]
  409ba4:	ldr	x0, [sp, #456]
  409ba8:	cmp	x0, #0x0
  409bac:	b.ne	409bb4 <wcrtomb@plt+0x4ea4>  // b.any
  409bb0:	bl	404710 <abort@plt>
  409bb4:	add	x0, sp, #0x20
  409bb8:	ldr	x2, [sp, #456]
  409bbc:	mov	x1, x0
  409bc0:	mov	w0, #0x0                   	// #0
  409bc4:	bl	40e7fc <wcrtomb@plt+0x9aec>
  409bc8:	bl	40f414 <wcrtomb@plt+0xa704>
  409bcc:	ldr	x0, [sp, #32]
  409bd0:	bl	404880 <free@plt>
  409bd4:	nop
  409bd8:	ldp	x29, x30, [sp], #464
  409bdc:	ret
  409be0:	stp	x29, x30, [sp, #-16]!
  409be4:	mov	x29, sp
  409be8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409bec:	add	x0, x0, #0x7c
  409bf0:	ldrb	w0, [x0]
  409bf4:	cmp	w0, #0x0
  409bf8:	b.eq	409c04 <wcrtomb@plt+0x4ef4>  // b.none
  409bfc:	bl	409a54 <wcrtomb@plt+0x4d44>
  409c00:	b	409c14 <wcrtomb@plt+0x4f04>
  409c04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409c08:	add	x0, x0, #0x2b8
  409c0c:	ldr	x0, [x0]
  409c10:	bl	409968 <wcrtomb@plt+0x4c58>
  409c14:	nop
  409c18:	ldp	x29, x30, [sp], #16
  409c1c:	ret
  409c20:	stp	x29, x30, [sp, #-80]!
  409c24:	mov	x29, sp
  409c28:	str	x19, [sp, #16]
  409c2c:	str	x0, [sp, #40]
  409c30:	bl	406030 <wcrtomb@plt+0x1320>
  409c34:	str	x0, [sp, #64]
  409c38:	ldr	x0, [sp, #40]
  409c3c:	ldr	x0, [x0, #16]
  409c40:	bl	4040b0 <strlen@plt>
  409c44:	str	x0, [sp, #72]
  409c48:	ldr	x0, [sp, #72]
  409c4c:	cmp	x0, #0x64
  409c50:	b.ls	409cb0 <wcrtomb@plt+0x4fa0>  // b.plast
  409c54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409c58:	add	x0, x0, #0x420
  409c5c:	ldr	x0, [x0]
  409c60:	cmp	x0, #0x0
  409c64:	b.eq	409c78 <wcrtomb@plt+0x4f68>  // b.none
  409c68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409c6c:	add	x0, x0, #0x420
  409c70:	ldr	x0, [x0]
  409c74:	blr	x0
  409c78:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409c7c:	add	x0, x0, #0x5c0
  409c80:	bl	404c60 <gettext@plt>
  409c84:	mov	x19, x0
  409c88:	ldr	x0, [sp, #40]
  409c8c:	ldr	x0, [x0, #16]
  409c90:	bl	459cd8 <argp_usage@@Base+0x10bec>
  409c94:	mov	x3, x0
  409c98:	mov	x2, x19
  409c9c:	mov	w1, #0x0                   	// #0
  409ca0:	mov	w0, #0x0                   	// #0
  409ca4:	bl	404100 <error@plt>
  409ca8:	mov	x0, #0x64                  	// #100
  409cac:	str	x0, [sp, #72]
  409cb0:	mov	x2, #0x200                 	// #512
  409cb4:	mov	w1, #0x0                   	// #0
  409cb8:	ldr	x0, [sp, #64]
  409cbc:	bl	4044d0 <memset@plt>
  409cc0:	ldr	x3, [sp, #64]
  409cc4:	ldr	x0, [sp, #40]
  409cc8:	ldr	x0, [x0, #16]
  409ccc:	ldr	x2, [sp, #72]
  409cd0:	mov	x1, x0
  409cd4:	mov	x0, x3
  409cd8:	bl	404020 <memcpy@plt>
  409cdc:	ldr	x0, [sp, #64]
  409ce0:	mov	w1, #0x4d                  	// #77
  409ce4:	strb	w1, [x0, #156]
  409ce8:	ldr	x0, [sp, #40]
  409cec:	ldr	x3, [x0, #32]
  409cf0:	ldr	x0, [sp, #64]
  409cf4:	add	x0, x0, #0x7c
  409cf8:	mov	x2, #0xc                   	// #12
  409cfc:	mov	x1, x0
  409d00:	mov	x0, x3
  409d04:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  409d08:	ldr	x0, [sp, #40]
  409d0c:	ldr	x1, [x0, #24]
  409d10:	ldr	x0, [sp, #40]
  409d14:	ldr	x0, [x0, #32]
  409d18:	sub	x3, x1, x0
  409d1c:	ldr	x0, [sp, #64]
  409d20:	add	x0, x0, #0x171
  409d24:	mov	x2, #0xc                   	// #12
  409d28:	mov	x1, x0
  409d2c:	mov	x0, x3
  409d30:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  409d34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409d38:	add	x0, x0, #0x2b4
  409d3c:	ldr	w0, [x0]
  409d40:	str	w0, [sp, #60]
  409d44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409d48:	add	x0, x0, #0x2b4
  409d4c:	str	wzr, [x0]
  409d50:	mov	x2, #0xffffffffffffffff    	// #-1
  409d54:	ldr	x1, [sp, #64]
  409d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409d5c:	add	x0, x0, #0x90
  409d60:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  409d64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409d68:	add	x0, x0, #0x2b4
  409d6c:	ldr	w1, [sp, #60]
  409d70:	str	w1, [x0]
  409d74:	ldr	x0, [sp, #64]
  409d78:	bl	4060c4 <wcrtomb@plt+0x13b4>
  409d7c:	nop
  409d80:	ldr	x19, [sp, #16]
  409d84:	ldp	x29, x30, [sp], #80
  409d88:	ret
  409d8c:	stp	x29, x30, [sp, #-48]!
  409d90:	mov	x29, sp
  409d94:	str	x0, [sp, #24]
  409d98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409d9c:	add	x0, x0, #0x360
  409da0:	ldr	w0, [x0]
  409da4:	cmp	w0, #0x4
  409da8:	b.ne	409e24 <wcrtomb@plt+0x5114>  // b.any
  409dac:	ldr	x0, [sp, #24]
  409db0:	ldr	x1, [x0, #24]
  409db4:	ldr	x0, [sp, #24]
  409db8:	ldr	x0, [x0, #32]
  409dbc:	sub	x0, x1, x0
  409dc0:	str	x0, [sp, #40]
  409dc4:	ldr	x0, [sp, #24]
  409dc8:	ldr	x0, [x0, #16]
  409dcc:	mov	x2, x0
  409dd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409dd4:	add	x1, x0, #0x540
  409dd8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409ddc:	add	x0, x0, #0x610
  409de0:	bl	4191e4 <wcrtomb@plt+0x144d4>
  409de4:	ldr	x0, [sp, #24]
  409de8:	add	x0, x0, #0x20
  409dec:	mov	x2, x0
  409df0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409df4:	add	x1, x0, #0x540
  409df8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409dfc:	add	x0, x0, #0x628
  409e00:	bl	4191e4 <wcrtomb@plt+0x144d4>
  409e04:	add	x0, sp, #0x28
  409e08:	mov	x2, x0
  409e0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409e10:	add	x1, x0, #0x540
  409e14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  409e18:	add	x0, x0, #0x638
  409e1c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  409e20:	b	409e2c <wcrtomb@plt+0x511c>
  409e24:	ldr	x0, [sp, #24]
  409e28:	bl	409c20 <wcrtomb@plt+0x4f10>
  409e2c:	nop
  409e30:	ldp	x29, x30, [sp], #48
  409e34:	ret
  409e38:	stp	x29, x30, [sp, #-32]!
  409e3c:	mov	x29, sp
  409e40:	mov	w0, #0x0                   	// #0
  409e44:	bl	40b734 <wcrtomb@plt+0x6a24>
  409e48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409e4c:	add	x0, x0, #0x50c
  409e50:	str	wzr, [x0]
  409e54:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409e58:	add	x0, x0, #0xfc8
  409e5c:	ldrb	w0, [x0]
  409e60:	cmp	w0, #0x0
  409e64:	b.eq	409ec0 <wcrtomb@plt+0x51b0>  // b.none
  409e68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409e6c:	add	x0, x0, #0x500
  409e70:	ldr	x0, [x0]
  409e74:	cmp	x0, #0x0
  409e78:	b.eq	409ec0 <wcrtomb@plt+0x51b0>  // b.none
  409e7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409e80:	add	x0, x0, #0x400
  409e84:	mov	w1, #0x1                   	// #1
  409e88:	str	w1, [x0]
  409e8c:	bl	42dea4 <wcrtomb@plt+0x29194>
  409e90:	str	x0, [sp, #24]
  409e94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409e98:	add	x0, x0, #0x400
  409e9c:	str	wzr, [x0]
  409ea0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409ea4:	add	x0, x0, #0x3c8
  409ea8:	ldr	x0, [x0]
  409eac:	ldr	x1, [sp, #24]
  409eb0:	cmp	x1, x0
  409eb4:	b.eq	409ec0 <wcrtomb@plt+0x51b0>  // b.none
  409eb8:	ldr	x0, [sp, #24]
  409ebc:	bl	406ef4 <wcrtomb@plt+0x21e4>
  409ec0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409ec4:	add	x0, x0, #0x400
  409ec8:	ldr	w1, [x0]
  409ecc:	mov	w0, #0x3fffffff            	// #1073741823
  409ed0:	cmp	w1, w0
  409ed4:	b.le	409f18 <wcrtomb@plt+0x5208>
  409ed8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409edc:	add	x0, x0, #0x400
  409ee0:	ldr	w1, [x0]
  409ee4:	mov	w0, #0xc0000000            	// #-1073741824
  409ee8:	add	w3, w1, w0
  409eec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409ef0:	add	x0, x0, #0xfc0
  409ef4:	ldr	x0, [x0]
  409ef8:	mov	x1, x0
  409efc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409f00:	add	x0, x0, #0x3c8
  409f04:	ldr	x0, [x0]
  409f08:	mov	x2, x0
  409f0c:	mov	w0, w3
  409f10:	bl	43c0a0 <wcrtomb@plt+0x37390>
  409f14:	b	409f4c <wcrtomb@plt+0x523c>
  409f18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409f1c:	add	x0, x0, #0x400
  409f20:	ldr	w3, [x0]
  409f24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409f28:	add	x0, x0, #0xfc0
  409f2c:	ldr	x0, [x0]
  409f30:	mov	x1, x0
  409f34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409f38:	add	x0, x0, #0x3c8
  409f3c:	ldr	x0, [x0]
  409f40:	mov	x2, x0
  409f44:	mov	w0, w3
  409f48:	bl	45a2ac <argp_usage@@Base+0x111c0>
  409f4c:	str	x0, [sp, #24]
  409f50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409f54:	add	x0, x0, #0x3c8
  409f58:	ldr	x0, [x0]
  409f5c:	ldr	x1, [sp, #24]
  409f60:	cmp	x1, x0
  409f64:	b.ne	409f88 <wcrtomb@plt+0x5278>  // b.any
  409f68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409f6c:	add	x0, x0, #0xf90
  409f70:	ldr	x0, [x0]
  409f74:	add	x1, x0, #0x1
  409f78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409f7c:	add	x0, x0, #0xf90
  409f80:	str	x1, [x0]
  409f84:	b	409fa8 <wcrtomb@plt+0x5298>
  409f88:	ldr	x0, [sp, #24]
  409f8c:	cmn	x0, #0x1
  409f90:	b.ne	409f9c <wcrtomb@plt+0x528c>  // b.any
  409f94:	bl	406f60 <wcrtomb@plt+0x2250>
  409f98:	b	409ec0 <wcrtomb@plt+0x51b0>
  409f9c:	nop
  409fa0:	ldr	x0, [sp, #24]
  409fa4:	bl	4070c4 <wcrtomb@plt+0x23b4>
  409fa8:	ldp	x29, x30, [sp], #32
  409fac:	ret
  409fb0:	stp	x29, x30, [sp, #-48]!
  409fb4:	mov	x29, sp
  409fb8:	str	x0, [sp, #24]
  409fbc:	bl	406d40 <wcrtomb@plt+0x2030>
  409fc0:	str	x0, [sp, #40]
  409fc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  409fc8:	add	x0, x0, #0x3c8
  409fcc:	ldr	x0, [x0]
  409fd0:	mov	x1, x0
  409fd4:	ldr	x0, [sp, #40]
  409fd8:	cmp	x0, x1
  409fdc:	b.eq	409fe8 <wcrtomb@plt+0x52d8>  // b.none
  409fe0:	ldr	x0, [sp, #40]
  409fe4:	bl	406ef4 <wcrtomb@plt+0x21e4>
  409fe8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409fec:	add	x0, x0, #0xfa0
  409ff0:	ldr	x0, [x0]
  409ff4:	add	x1, x0, #0x1
  409ff8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  409ffc:	add	x0, x0, #0xfa0
  40a000:	str	x1, [x0]
  40a004:	ldr	d0, [sp, #40]
  40a008:	scvtf	d1, d0
  40a00c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a010:	add	x0, x0, #0x4d0
  40a014:	ldr	d0, [x0]
  40a018:	fadd	d0, d1, d0
  40a01c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a020:	add	x0, x0, #0x4d0
  40a024:	str	d0, [x0]
  40a028:	nop
  40a02c:	ldp	x29, x30, [sp], #48
  40a030:	ret
  40a034:	stp	x29, x30, [sp, #-32]!
  40a038:	mov	x29, sp
  40a03c:	mov	w0, #0x0                   	// #0
  40a040:	bl	40b734 <wcrtomb@plt+0x6a24>
  40a044:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a048:	add	x0, x0, #0x50c
  40a04c:	str	wzr, [x0]
  40a050:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a054:	add	x0, x0, #0xfc8
  40a058:	ldrb	w0, [x0]
  40a05c:	cmp	w0, #0x0
  40a060:	b.eq	40a0bc <wcrtomb@plt+0x53ac>  // b.none
  40a064:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a068:	add	x0, x0, #0x500
  40a06c:	ldr	x0, [x0]
  40a070:	cmp	x0, #0x0
  40a074:	b.eq	40a0bc <wcrtomb@plt+0x53ac>  // b.none
  40a078:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a07c:	add	x0, x0, #0x400
  40a080:	mov	w1, #0x1                   	// #1
  40a084:	str	w1, [x0]
  40a088:	bl	42dea4 <wcrtomb@plt+0x29194>
  40a08c:	str	x0, [sp, #24]
  40a090:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a094:	add	x0, x0, #0x400
  40a098:	str	wzr, [x0]
  40a09c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a0a0:	add	x0, x0, #0x3c8
  40a0a4:	ldr	x0, [x0]
  40a0a8:	ldr	x1, [sp, #24]
  40a0ac:	cmp	x1, x0
  40a0b0:	b.eq	40a0bc <wcrtomb@plt+0x53ac>  // b.none
  40a0b4:	ldr	x0, [sp, #24]
  40a0b8:	bl	406ef4 <wcrtomb@plt+0x21e4>
  40a0bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a0c0:	add	x0, x0, #0x400
  40a0c4:	ldr	w1, [x0]
  40a0c8:	mov	w0, #0x3fffffff            	// #1073741823
  40a0cc:	cmp	w1, w0
  40a0d0:	b.le	40a114 <wcrtomb@plt+0x5404>
  40a0d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a0d8:	add	x0, x0, #0x400
  40a0dc:	ldr	w1, [x0]
  40a0e0:	mov	w0, #0xc0000000            	// #-1073741824
  40a0e4:	add	w3, w1, w0
  40a0e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a0ec:	add	x0, x0, #0xfc0
  40a0f0:	ldr	x0, [x0]
  40a0f4:	mov	x1, x0
  40a0f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a0fc:	add	x0, x0, #0x3c8
  40a100:	ldr	x0, [x0]
  40a104:	mov	x2, x0
  40a108:	mov	w0, w3
  40a10c:	bl	43c0a0 <wcrtomb@plt+0x37390>
  40a110:	b	40a148 <wcrtomb@plt+0x5438>
  40a114:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a118:	add	x0, x0, #0x400
  40a11c:	ldr	w3, [x0]
  40a120:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a124:	add	x0, x0, #0xfc0
  40a128:	ldr	x0, [x0]
  40a12c:	mov	x1, x0
  40a130:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a134:	add	x0, x0, #0x3c8
  40a138:	ldr	x0, [x0]
  40a13c:	mov	x2, x0
  40a140:	mov	w0, w3
  40a144:	bl	45a2ac <argp_usage@@Base+0x111c0>
  40a148:	str	x0, [sp, #24]
  40a14c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a150:	add	x0, x0, #0x3c8
  40a154:	ldr	x0, [x0]
  40a158:	ldr	x1, [sp, #24]
  40a15c:	cmp	x1, x0
  40a160:	b.ne	40a184 <wcrtomb@plt+0x5474>  // b.any
  40a164:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a168:	add	x0, x0, #0xf90
  40a16c:	ldr	x0, [x0]
  40a170:	add	x1, x0, #0x1
  40a174:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a178:	add	x0, x0, #0xf90
  40a17c:	str	x1, [x0]
  40a180:	b	40a22c <wcrtomb@plt+0x551c>
  40a184:	ldr	x0, [sp, #24]
  40a188:	cmp	x0, #0x0
  40a18c:	b.eq	40a1ac <wcrtomb@plt+0x549c>  // b.none
  40a190:	ldr	x0, [sp, #24]
  40a194:	cmn	x0, #0x1
  40a198:	b.ne	40a204 <wcrtomb@plt+0x54f4>  // b.any
  40a19c:	bl	404bc0 <__errno_location@plt>
  40a1a0:	ldr	w0, [x0]
  40a1a4:	cmp	w0, #0x1c
  40a1a8:	b.ne	40a204 <wcrtomb@plt+0x54f4>  // b.any
  40a1ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a1b0:	add	x0, x0, #0x7c
  40a1b4:	ldrb	w0, [x0]
  40a1b8:	cmp	w0, #0x0
  40a1bc:	b.eq	40a204 <wcrtomb@plt+0x54f4>  // b.none
  40a1c0:	nop
  40a1c4:	bl	408d48 <wcrtomb@plt+0x4038>
  40a1c8:	and	w0, w0, #0xff
  40a1cc:	eor	w0, w0, #0x1
  40a1d0:	and	w0, w0, #0xff
  40a1d4:	cmp	w0, #0x0
  40a1d8:	b.ne	40a1c4 <wcrtomb@plt+0x54b4>  // b.any
  40a1dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a1e0:	add	x0, x0, #0xfd8
  40a1e4:	ldr	x1, [x0]
  40a1e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a1ec:	add	x0, x0, #0xf98
  40a1f0:	ldr	x0, [x0]
  40a1f4:	cmp	x1, x0
  40a1f8:	b.ne	40a228 <wcrtomb@plt+0x5518>  // b.any
  40a1fc:	bl	407394 <wcrtomb@plt+0x2684>
  40a200:	b	40a228 <wcrtomb@plt+0x5518>
  40a204:	ldr	x0, [sp, #24]
  40a208:	cmn	x0, #0x1
  40a20c:	b.ne	40a218 <wcrtomb@plt+0x5508>  // b.any
  40a210:	bl	406f60 <wcrtomb@plt+0x2250>
  40a214:	b	40a0bc <wcrtomb@plt+0x53ac>
  40a218:	nop
  40a21c:	ldr	x0, [sp, #24]
  40a220:	bl	4070c4 <wcrtomb@plt+0x23b4>
  40a224:	b	40a22c <wcrtomb@plt+0x551c>
  40a228:	nop
  40a22c:	ldp	x29, x30, [sp], #32
  40a230:	ret
  40a234:	stp	x29, x30, [sp, #-16]!
  40a238:	mov	x29, sp
  40a23c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a240:	add	x0, x0, #0x520
  40a244:	adrp	x1, 409000 <wcrtomb@plt+0x42f0>
  40a248:	add	x1, x1, #0xe38
  40a24c:	str	x1, [x0]
  40a250:	bl	40a034 <wcrtomb@plt+0x5324>
  40a254:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a258:	add	x0, x0, #0x520
  40a25c:	adrp	x1, 40a000 <wcrtomb@plt+0x52f0>
  40a260:	add	x1, x1, #0x234
  40a264:	str	x1, [x0]
  40a268:	nop
  40a26c:	ldp	x29, x30, [sp], #16
  40a270:	ret
  40a274:	stp	x29, x30, [sp, #-80]!
  40a278:	mov	x29, sp
  40a27c:	str	x0, [sp, #24]
  40a280:	bl	406d40 <wcrtomb@plt+0x2030>
  40a284:	str	x0, [sp, #40]
  40a288:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a28c:	add	x0, x0, #0x3c8
  40a290:	ldr	x0, [x0]
  40a294:	mov	x1, x0
  40a298:	ldr	x0, [sp, #40]
  40a29c:	cmp	x0, x1
  40a2a0:	b.eq	40a2c8 <wcrtomb@plt+0x55b8>  // b.none
  40a2a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a2a8:	add	x0, x0, #0x7c
  40a2ac:	ldrb	w0, [x0]
  40a2b0:	eor	w0, w0, #0x1
  40a2b4:	and	w0, w0, #0xff
  40a2b8:	cmp	w0, #0x0
  40a2bc:	b.eq	40a2c8 <wcrtomb@plt+0x55b8>  // b.none
  40a2c0:	ldr	x0, [sp, #40]
  40a2c4:	bl	406ef4 <wcrtomb@plt+0x21e4>
  40a2c8:	ldr	x0, [sp, #40]
  40a2cc:	cmp	x0, #0x0
  40a2d0:	b.eq	40a2f0 <wcrtomb@plt+0x55e0>  // b.none
  40a2d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a2d8:	add	x0, x0, #0xfa0
  40a2dc:	ldr	x0, [x0]
  40a2e0:	add	x1, x0, #0x1
  40a2e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a2e8:	add	x0, x0, #0xfa0
  40a2ec:	str	x1, [x0]
  40a2f0:	ldr	d0, [sp, #40]
  40a2f4:	scvtf	d1, d0
  40a2f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a2fc:	add	x0, x0, #0x4d0
  40a300:	ldr	d0, [x0]
  40a304:	fadd	d0, d1, d0
  40a308:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a30c:	add	x0, x0, #0x4d0
  40a310:	str	d0, [x0]
  40a314:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a318:	add	x0, x0, #0x3c8
  40a31c:	ldr	x0, [x0]
  40a320:	mov	x1, x0
  40a324:	ldr	x0, [sp, #40]
  40a328:	cmp	x0, x1
  40a32c:	b.eq	40a620 <wcrtomb@plt+0x5910>  // b.none
  40a330:	ldr	x0, [sp, #40]
  40a334:	bl	404fdc <wcrtomb@plt+0x2cc>
  40a338:	str	x0, [sp, #32]
  40a33c:	ldr	x0, [sp, #40]
  40a340:	and	x0, x0, #0x1ff
  40a344:	cmp	x0, #0x0
  40a348:	b.eq	40a3a4 <wcrtomb@plt+0x5694>  // b.none
  40a34c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a350:	add	x0, x0, #0x420
  40a354:	ldr	x0, [x0]
  40a358:	cmp	x0, #0x0
  40a35c:	b.eq	40a370 <wcrtomb@plt+0x5660>  // b.none
  40a360:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a364:	add	x0, x0, #0x420
  40a368:	ldr	x0, [x0]
  40a36c:	blr	x0
  40a370:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a374:	add	x0, x0, #0x650
  40a378:	bl	404c60 <gettext@plt>
  40a37c:	mov	x2, x0
  40a380:	mov	w1, #0x0                   	// #0
  40a384:	mov	w0, #0x0                   	// #0
  40a388:	bl	404100 <error@plt>
  40a38c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a390:	add	x0, x0, #0xdb0
  40a394:	mov	w1, #0x2                   	// #2
  40a398:	str	w1, [x0]
  40a39c:	ldr	x0, [sp, #40]
  40a3a0:	bl	406ef4 <wcrtomb@plt+0x21e4>
  40a3a4:	ldr	x0, [sp, #40]
  40a3a8:	cmp	x0, #0x0
  40a3ac:	b.ge	40a3e8 <wcrtomb@plt+0x56d8>  // b.tcont
  40a3b0:	bl	404bc0 <__errno_location@plt>
  40a3b4:	ldr	w0, [x0]
  40a3b8:	cmp	w0, #0x1c
  40a3bc:	b.eq	40a3e8 <wcrtomb@plt+0x56d8>  // b.none
  40a3c0:	bl	404bc0 <__errno_location@plt>
  40a3c4:	ldr	w0, [x0]
  40a3c8:	cmp	w0, #0x5
  40a3cc:	b.eq	40a3e8 <wcrtomb@plt+0x56d8>  // b.none
  40a3d0:	bl	404bc0 <__errno_location@plt>
  40a3d4:	ldr	w0, [x0]
  40a3d8:	cmp	w0, #0x6
  40a3dc:	b.eq	40a3e8 <wcrtomb@plt+0x56d8>  // b.none
  40a3e0:	ldr	x0, [sp, #40]
  40a3e4:	bl	406ef4 <wcrtomb@plt+0x21e4>
  40a3e8:	mov	w0, #0x1                   	// #1
  40a3ec:	bl	4083ec <wcrtomb@plt+0x36dc>
  40a3f0:	and	w0, w0, #0xff
  40a3f4:	eor	w0, w0, #0x1
  40a3f8:	and	w0, w0, #0xff
  40a3fc:	cmp	w0, #0x0
  40a400:	b.ne	40a628 <wcrtomb@plt+0x5918>  // b.any
  40a404:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a408:	add	x0, x0, #0x540
  40a40c:	bl	434ecc <wcrtomb@plt+0x301bc>
  40a410:	bl	407ed0 <wcrtomb@plt+0x31c0>
  40a414:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a418:	add	x0, x0, #0x4c8
  40a41c:	ldr	d1, [x0]
  40a420:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a424:	add	x0, x0, #0x4d0
  40a428:	ldr	d0, [x0]
  40a42c:	fadd	d0, d1, d0
  40a430:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a434:	add	x0, x0, #0x4c8
  40a438:	str	d0, [x0]
  40a43c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a440:	add	x0, x0, #0x4d0
  40a444:	str	xzr, [x0]
  40a448:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a44c:	add	x0, x0, #0xfc0
  40a450:	ldr	x0, [x0]
  40a454:	mov	x1, x0
  40a458:	ldr	x0, [sp, #40]
  40a45c:	add	x0, x1, x0
  40a460:	str	x0, [sp, #64]
  40a464:	ldr	x0, [sp, #40]
  40a468:	ldr	x1, [sp, #24]
  40a46c:	sub	x0, x1, x0
  40a470:	str	x0, [sp, #56]
  40a474:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a478:	add	x0, x0, #0x4f8
  40a47c:	ldr	w0, [x0]
  40a480:	cmp	w0, #0x0
  40a484:	cset	w0, eq  // eq = none
  40a488:	and	w0, w0, #0xff
  40a48c:	mov	w1, w0
  40a490:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a494:	add	x0, x0, #0x4f8
  40a498:	str	w1, [x0]
  40a49c:	bl	406198 <wcrtomb@plt+0x1488>
  40a4a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a4a4:	add	x0, x0, #0x538
  40a4a8:	mov	w1, #0x1                   	// #1
  40a4ac:	str	w1, [x0]
  40a4b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a4b4:	add	x0, x0, #0x2b8
  40a4b8:	ldr	x0, [x0]
  40a4bc:	cmp	x0, #0x0
  40a4c0:	b.eq	40a4c8 <wcrtomb@plt+0x57b8>  // b.none
  40a4c4:	bl	409a54 <wcrtomb@plt+0x4d44>
  40a4c8:	ldr	x0, [sp, #32]
  40a4cc:	cmp	x0, #0x0
  40a4d0:	b.eq	40a4dc <wcrtomb@plt+0x57cc>  // b.none
  40a4d4:	ldr	x0, [sp, #32]
  40a4d8:	bl	409d8c <wcrtomb@plt+0x507c>
  40a4dc:	bl	406030 <wcrtomb@plt+0x1320>
  40a4e0:	mov	x2, x0
  40a4e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a4e8:	add	x1, x0, #0x540
  40a4ec:	mov	w0, #0x1                   	// #1
  40a4f0:	bl	40e7fc <wcrtomb@plt+0x9aec>
  40a4f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a4f8:	add	x0, x0, #0x540
  40a4fc:	bl	434ecc <wcrtomb@plt+0x301bc>
  40a500:	ldr	x0, [sp, #32]
  40a504:	cmp	x0, #0x0
  40a508:	b.eq	40a514 <wcrtomb@plt+0x5804>  // b.none
  40a50c:	ldr	x0, [sp, #32]
  40a510:	bl	409af4 <wcrtomb@plt+0x4de4>
  40a514:	bl	406030 <wcrtomb@plt+0x1320>
  40a518:	str	x0, [sp, #72]
  40a51c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a520:	add	x0, x0, #0xfc0
  40a524:	ldr	x0, [x0]
  40a528:	ldr	x1, [sp, #72]
  40a52c:	sub	x0, x1, x0
  40a530:	asr	x0, x0, #9
  40a534:	mov	x1, x0
  40a538:	ldr	x0, [sp, #32]
  40a53c:	bl	4050f4 <wcrtomb@plt+0x3e4>
  40a540:	ldr	x0, [sp, #72]
  40a544:	bl	406138 <wcrtomb@plt+0x1428>
  40a548:	str	x0, [sp, #48]
  40a54c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a550:	add	x0, x0, #0x538
  40a554:	str	wzr, [x0]
  40a558:	b	40a5b8 <wcrtomb@plt+0x58a8>
  40a55c:	ldr	x0, [sp, #72]
  40a560:	ldr	x2, [sp, #48]
  40a564:	ldr	x1, [sp, #64]
  40a568:	bl	404020 <memcpy@plt>
  40a56c:	ldr	x1, [sp, #64]
  40a570:	ldr	x0, [sp, #48]
  40a574:	add	x0, x1, x0
  40a578:	str	x0, [sp, #64]
  40a57c:	ldr	x1, [sp, #56]
  40a580:	ldr	x0, [sp, #48]
  40a584:	sub	x0, x1, x0
  40a588:	str	x0, [sp, #56]
  40a58c:	ldr	x0, [sp, #48]
  40a590:	sub	x0, x0, #0x1
  40a594:	and	x0, x0, #0xfffffffffffffe00
  40a598:	ldr	x1, [sp, #72]
  40a59c:	add	x0, x1, x0
  40a5a0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40a5a4:	bl	406030 <wcrtomb@plt+0x1320>
  40a5a8:	str	x0, [sp, #72]
  40a5ac:	ldr	x0, [sp, #72]
  40a5b0:	bl	406138 <wcrtomb@plt+0x1428>
  40a5b4:	str	x0, [sp, #48]
  40a5b8:	ldr	x1, [sp, #48]
  40a5bc:	ldr	x0, [sp, #56]
  40a5c0:	cmp	x1, x0
  40a5c4:	b.cc	40a55c <wcrtomb@plt+0x584c>  // b.lo, b.ul, b.last
  40a5c8:	ldr	x0, [sp, #72]
  40a5cc:	ldr	x2, [sp, #56]
  40a5d0:	ldr	x1, [sp, #64]
  40a5d4:	bl	404020 <memcpy@plt>
  40a5d8:	ldr	x1, [sp, #72]
  40a5dc:	ldr	x0, [sp, #56]
  40a5e0:	add	x3, x1, x0
  40a5e4:	ldr	x1, [sp, #48]
  40a5e8:	ldr	x0, [sp, #56]
  40a5ec:	sub	x0, x1, x0
  40a5f0:	mov	x2, x0
  40a5f4:	mov	w1, #0x0                   	// #0
  40a5f8:	mov	x0, x3
  40a5fc:	bl	4044d0 <memset@plt>
  40a600:	ldr	x0, [sp, #56]
  40a604:	sub	x0, x0, #0x1
  40a608:	and	x0, x0, #0xfffffffffffffe00
  40a60c:	ldr	x1, [sp, #72]
  40a610:	add	x0, x1, x0
  40a614:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40a618:	bl	406030 <wcrtomb@plt+0x1320>
  40a61c:	b	40a62c <wcrtomb@plt+0x591c>
  40a620:	nop
  40a624:	b	40a62c <wcrtomb@plt+0x591c>
  40a628:	nop
  40a62c:	ldp	x29, x30, [sp], #80
  40a630:	ret
  40a634:	stp	x29, x30, [sp, #-32]!
  40a638:	mov	x29, sp
  40a63c:	str	x0, [sp, #24]
  40a640:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a644:	add	x0, x0, #0x518
  40a648:	adrp	x1, 409000 <wcrtomb@plt+0x42f0>
  40a64c:	add	x1, x1, #0xfb0
  40a650:	str	x1, [x0]
  40a654:	ldr	x0, [sp, #24]
  40a658:	bl	40a274 <wcrtomb@plt+0x5564>
  40a65c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a660:	add	x0, x0, #0x518
  40a664:	adrp	x1, 40a000 <wcrtomb@plt+0x52f0>
  40a668:	add	x1, x1, #0x634
  40a66c:	str	x1, [x0]
  40a670:	nop
  40a674:	ldp	x29, x30, [sp], #32
  40a678:	ret
  40a67c:	stp	x29, x30, [sp, #-16]!
  40a680:	mov	x29, sp
  40a684:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a688:	add	x0, x0, #0x520
  40a68c:	ldr	x0, [x0]
  40a690:	blr	x0
  40a694:	nop
  40a698:	ldp	x29, x30, [sp], #16
  40a69c:	ret
  40a6a0:	stp	x29, x30, [sp, #-16]!
  40a6a4:	mov	x29, sp
  40a6a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a6ac:	add	x0, x0, #0x518
  40a6b0:	ldr	x1, [x0]
  40a6b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a6b8:	add	x0, x0, #0x3c8
  40a6bc:	ldr	x0, [x0]
  40a6c0:	blr	x1
  40a6c4:	nop
  40a6c8:	ldp	x29, x30, [sp], #16
  40a6cc:	ret
  40a6d0:	stp	x29, x30, [sp, #-32]!
  40a6d4:	mov	x29, sp
  40a6d8:	str	w0, [sp, #28]
  40a6dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a6e0:	add	x0, x0, #0x520
  40a6e4:	adrp	x1, 40a000 <wcrtomb@plt+0x52f0>
  40a6e8:	add	x1, x1, #0x234
  40a6ec:	str	x1, [x0]
  40a6f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a6f4:	add	x0, x0, #0x518
  40a6f8:	adrp	x1, 40a000 <wcrtomb@plt+0x52f0>
  40a6fc:	add	x1, x1, #0x634
  40a700:	str	x1, [x0]
  40a704:	ldr	w0, [sp, #28]
  40a708:	bl	406358 <wcrtomb@plt+0x1648>
  40a70c:	ldr	w0, [sp, #28]
  40a710:	cmp	w0, #0x2
  40a714:	b.eq	40a740 <wcrtomb@plt+0x5a30>  // b.none
  40a718:	ldr	w0, [sp, #28]
  40a71c:	cmp	w0, #0x2
  40a720:	b.hi	40a790 <wcrtomb@plt+0x5a80>  // b.pmore
  40a724:	ldr	w0, [sp, #28]
  40a728:	cmp	w0, #0x0
  40a72c:	b.eq	40a740 <wcrtomb@plt+0x5a30>  // b.none
  40a730:	ldr	w0, [sp, #28]
  40a734:	cmp	w0, #0x1
  40a738:	b.eq	40a75c <wcrtomb@plt+0x5a4c>  // b.none
  40a73c:	b	40a790 <wcrtomb@plt+0x5a80>
  40a740:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a744:	add	x0, x0, #0x2b8
  40a748:	ldr	x0, [x0]
  40a74c:	cmp	x0, #0x0
  40a750:	b.eq	40a784 <wcrtomb@plt+0x5a74>  // b.none
  40a754:	bl	409734 <wcrtomb@plt+0x4a24>
  40a758:	b	40a784 <wcrtomb@plt+0x5a74>
  40a75c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a760:	add	x0, x0, #0xfa0
  40a764:	str	xzr, [x0]
  40a768:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40a76c:	add	x0, x0, #0x2b8
  40a770:	ldr	x0, [x0]
  40a774:	cmp	x0, #0x0
  40a778:	b.eq	40a78c <wcrtomb@plt+0x5a7c>  // b.none
  40a77c:	bl	409be0 <wcrtomb@plt+0x4ed0>
  40a780:	b	40a78c <wcrtomb@plt+0x5a7c>
  40a784:	nop
  40a788:	b	40a790 <wcrtomb@plt+0x5a80>
  40a78c:	nop
  40a790:	bl	40528c <wcrtomb@plt+0x57c>
  40a794:	nop
  40a798:	ldp	x29, x30, [sp], #32
  40a79c:	ret
  40a7a0:	stp	x29, x30, [sp, #-48]!
  40a7a4:	mov	x29, sp
  40a7a8:	str	w0, [sp, #28]
  40a7ac:	mov	x0, #0x18                  	// #24
  40a7b0:	bl	45b77c <argp_usage@@Base+0x12690>
  40a7b4:	str	x0, [sp, #40]
  40a7b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a7bc:	add	x0, x0, #0x718
  40a7c0:	ldr	x0, [x0]
  40a7c4:	cmp	x0, #0x0
  40a7c8:	b.eq	40a7e4 <wcrtomb@plt+0x5ad4>  // b.none
  40a7cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a7d0:	add	x0, x0, #0x718
  40a7d4:	ldr	x0, [x0]
  40a7d8:	ldr	x1, [sp, #40]
  40a7dc:	str	x1, [x0]
  40a7e0:	b	40a7f4 <wcrtomb@plt+0x5ae4>
  40a7e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a7e8:	add	x0, x0, #0x710
  40a7ec:	ldr	x1, [sp, #40]
  40a7f0:	str	x1, [x0]
  40a7f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a7f8:	add	x0, x0, #0x718
  40a7fc:	ldr	x1, [sp, #40]
  40a800:	str	x1, [x0]
  40a804:	ldr	x0, [sp, #40]
  40a808:	ldr	w1, [sp, #28]
  40a80c:	str	w1, [x0, #8]
  40a810:	ldr	x0, [sp, #40]
  40a814:	ldp	x29, x30, [sp], #48
  40a818:	ret
  40a81c:	stp	x29, x30, [sp, #-48]!
  40a820:	mov	x29, sp
  40a824:	str	x0, [sp, #24]
  40a828:	ldr	x0, [sp, #24]
  40a82c:	bl	45b858 <argp_usage@@Base+0x1276c>
  40a830:	str	x0, [sp, #40]
  40a834:	ldr	x0, [sp, #40]
  40a838:	bl	4040b0 <strlen@plt>
  40a83c:	str	x0, [sp, #32]
  40a840:	ldr	x0, [sp, #40]
  40a844:	ldrb	w0, [x0]
  40a848:	cmp	w0, #0x22
  40a84c:	b.eq	40a860 <wcrtomb@plt+0x5b50>  // b.none
  40a850:	ldr	x0, [sp, #40]
  40a854:	ldrb	w0, [x0]
  40a858:	cmp	w0, #0x27
  40a85c:	b.ne	40a8b4 <wcrtomb@plt+0x5ba4>  // b.any
  40a860:	ldr	x0, [sp, #32]
  40a864:	sub	x0, x0, #0x1
  40a868:	ldr	x1, [sp, #40]
  40a86c:	add	x0, x1, x0
  40a870:	ldrb	w1, [x0]
  40a874:	ldr	x0, [sp, #40]
  40a878:	ldrb	w0, [x0]
  40a87c:	cmp	w1, w0
  40a880:	b.ne	40a8b4 <wcrtomb@plt+0x5ba4>  // b.any
  40a884:	ldr	x0, [sp, #40]
  40a888:	add	x1, x0, #0x1
  40a88c:	ldr	x0, [sp, #32]
  40a890:	sub	x0, x0, #0x2
  40a894:	mov	x2, x0
  40a898:	ldr	x0, [sp, #40]
  40a89c:	bl	404030 <memmove@plt>
  40a8a0:	ldr	x0, [sp, #32]
  40a8a4:	sub	x0, x0, #0x2
  40a8a8:	ldr	x1, [sp, #40]
  40a8ac:	add	x0, x1, x0
  40a8b0:	strb	wzr, [x0]
  40a8b4:	ldr	x0, [sp, #40]
  40a8b8:	bl	423de0 <wcrtomb@plt+0x1f0d0>
  40a8bc:	ldr	x0, [sp, #40]
  40a8c0:	ldp	x29, x30, [sp], #48
  40a8c4:	ret
  40a8c8:	stp	x29, x30, [sp, #-64]!
  40a8cc:	mov	x29, sp
  40a8d0:	str	x0, [sp, #24]
  40a8d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a8d8:	add	x0, x0, #0x720
  40a8dc:	ldr	w0, [x0]
  40a8e0:	cmp	w0, #0x0
  40a8e4:	b.ne	40a904 <wcrtomb@plt+0x5bf4>  // b.any
  40a8e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a8ec:	add	x0, x0, #0x728
  40a8f0:	bl	404460 <sigemptyset@plt>
  40a8f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40a8f8:	add	x0, x0, #0x720
  40a8fc:	mov	w1, #0x1                   	// #1
  40a900:	str	w1, [x0]
  40a904:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a908:	add	x1, x0, #0x678
  40a90c:	ldr	x0, [sp, #24]
  40a910:	bl	4047c0 <strcmp@plt>
  40a914:	cmp	w0, #0x0
  40a918:	b.eq	40a934 <wcrtomb@plt+0x5c24>  // b.none
  40a91c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a920:	add	x1, x0, #0x680
  40a924:	ldr	x0, [sp, #24]
  40a928:	bl	4047c0 <strcmp@plt>
  40a92c:	cmp	w0, #0x0
  40a930:	b.ne	40a940 <wcrtomb@plt+0x5c30>  // b.any
  40a934:	mov	w0, #0x0                   	// #0
  40a938:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40a93c:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40a940:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a944:	add	x1, x0, #0x688
  40a948:	ldr	x0, [sp, #24]
  40a94c:	bl	4047c0 <strcmp@plt>
  40a950:	cmp	w0, #0x0
  40a954:	b.ne	40a964 <wcrtomb@plt+0x5c54>  // b.any
  40a958:	mov	w0, #0x1                   	// #1
  40a95c:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40a960:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40a964:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a968:	add	x1, x0, #0x690
  40a96c:	ldr	x0, [sp, #24]
  40a970:	bl	4047c0 <strcmp@plt>
  40a974:	cmp	w0, #0x0
  40a978:	b.ne	40a988 <wcrtomb@plt+0x5c78>  // b.any
  40a97c:	mov	w0, #0x2                   	// #2
  40a980:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40a984:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40a988:	mov	x2, #0x5                   	// #5
  40a98c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a990:	add	x1, x0, #0x698
  40a994:	ldr	x0, [sp, #24]
  40a998:	bl	404480 <strncmp@plt>
  40a99c:	cmp	w0, #0x0
  40a9a0:	b.ne	40a9cc <wcrtomb@plt+0x5cbc>  // b.any
  40a9a4:	mov	w0, #0x2                   	// #2
  40a9a8:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40a9ac:	str	x0, [sp, #56]
  40a9b0:	ldr	x0, [sp, #24]
  40a9b4:	add	x0, x0, #0x5
  40a9b8:	bl	40a81c <wcrtomb@plt+0x5b0c>
  40a9bc:	mov	x1, x0
  40a9c0:	ldr	x0, [sp, #56]
  40a9c4:	str	x1, [x0, #16]
  40a9c8:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40a9cc:	mov	x2, #0x5                   	// #5
  40a9d0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40a9d4:	add	x1, x0, #0x6a0
  40a9d8:	ldr	x0, [sp, #24]
  40a9dc:	bl	404480 <strncmp@plt>
  40a9e0:	cmp	w0, #0x0
  40a9e4:	b.ne	40aa10 <wcrtomb@plt+0x5d00>  // b.any
  40a9e8:	mov	w0, #0x5                   	// #5
  40a9ec:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40a9f0:	str	x0, [sp, #56]
  40a9f4:	ldr	x0, [sp, #24]
  40a9f8:	add	x0, x0, #0x5
  40a9fc:	bl	40a81c <wcrtomb@plt+0x5b0c>
  40aa00:	mov	x1, x0
  40aa04:	ldr	x0, [sp, #56]
  40aa08:	str	x1, [x0, #16]
  40aa0c:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40aa10:	mov	x2, #0x7                   	// #7
  40aa14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40aa18:	add	x1, x0, #0x6a8
  40aa1c:	ldr	x0, [sp, #24]
  40aa20:	bl	404480 <strncmp@plt>
  40aa24:	cmp	w0, #0x0
  40aa28:	b.ne	40aa54 <wcrtomb@plt+0x5d44>  // b.any
  40aa2c:	mov	w0, #0x3                   	// #3
  40aa30:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40aa34:	str	x0, [sp, #56]
  40aa38:	ldr	x0, [sp, #24]
  40aa3c:	add	x0, x0, #0x7
  40aa40:	bl	40a81c <wcrtomb@plt+0x5b0c>
  40aa44:	mov	x1, x0
  40aa48:	ldr	x0, [sp, #56]
  40aa4c:	str	x1, [x0, #16]
  40aa50:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40aa54:	mov	x2, #0x6                   	// #6
  40aa58:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40aa5c:	add	x1, x0, #0x6b0
  40aa60:	ldr	x0, [sp, #24]
  40aa64:	bl	404480 <strncmp@plt>
  40aa68:	cmp	w0, #0x0
  40aa6c:	b.ne	40aafc <wcrtomb@plt+0x5dec>  // b.any
  40aa70:	ldr	x0, [sp, #24]
  40aa74:	add	x0, x0, #0x6
  40aa78:	add	x1, sp, #0x28
  40aa7c:	mov	w2, #0xa                   	// #10
  40aa80:	bl	4040a0 <strtoul@plt>
  40aa84:	str	x0, [sp, #48]
  40aa88:	ldr	x0, [sp, #40]
  40aa8c:	ldrb	w0, [x0]
  40aa90:	cmp	w0, #0x0
  40aa94:	b.eq	40aae0 <wcrtomb@plt+0x5dd0>  // b.none
  40aa98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40aa9c:	add	x0, x0, #0x420
  40aaa0:	ldr	x0, [x0]
  40aaa4:	cmp	x0, #0x0
  40aaa8:	b.eq	40aabc <wcrtomb@plt+0x5dac>  // b.none
  40aaac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40aab0:	add	x0, x0, #0x420
  40aab4:	ldr	x0, [x0]
  40aab8:	blr	x0
  40aabc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40aac0:	add	x0, x0, #0x6b8
  40aac4:	bl	404c60 <gettext@plt>
  40aac8:	ldr	x3, [sp, #24]
  40aacc:	mov	x2, x0
  40aad0:	mov	w1, #0x0                   	// #0
  40aad4:	mov	w0, #0x0                   	// #0
  40aad8:	bl	404100 <error@plt>
  40aadc:	bl	412ae0 <wcrtomb@plt+0xddd0>
  40aae0:	mov	w0, #0x4                   	// #4
  40aae4:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40aae8:	str	x0, [sp, #56]
  40aaec:	ldr	x0, [sp, #56]
  40aaf0:	ldr	x1, [sp, #48]
  40aaf4:	str	x1, [x0, #16]
  40aaf8:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40aafc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ab00:	add	x1, x0, #0x6d0
  40ab04:	ldr	x0, [sp, #24]
  40ab08:	bl	4047c0 <strcmp@plt>
  40ab0c:	cmp	w0, #0x0
  40ab10:	b.ne	40ab20 <wcrtomb@plt+0x5e10>  // b.any
  40ab14:	mov	w0, #0x6                   	// #6
  40ab18:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40ab1c:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40ab20:	mov	x2, #0x5                   	// #5
  40ab24:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ab28:	add	x1, x0, #0x6d8
  40ab2c:	ldr	x0, [sp, #24]
  40ab30:	bl	404480 <strncmp@plt>
  40ab34:	cmp	w0, #0x0
  40ab38:	b.ne	40ab7c <wcrtomb@plt+0x5e6c>  // b.any
  40ab3c:	mov	w0, #0x7                   	// #7
  40ab40:	bl	40a7a0 <wcrtomb@plt+0x5a90>
  40ab44:	str	x0, [sp, #56]
  40ab48:	ldr	x0, [sp, #24]
  40ab4c:	add	x0, x0, #0x5
  40ab50:	bl	4306ac <wcrtomb@plt+0x2b99c>
  40ab54:	mov	w1, w0
  40ab58:	ldr	x0, [sp, #56]
  40ab5c:	str	w1, [x0, #16]
  40ab60:	ldr	x0, [sp, #56]
  40ab64:	ldr	w0, [x0, #16]
  40ab68:	mov	w1, w0
  40ab6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ab70:	add	x0, x0, #0x728
  40ab74:	bl	404b20 <sigaddset@plt>
  40ab78:	b	40abc4 <wcrtomb@plt+0x5eb4>
  40ab7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ab80:	add	x0, x0, #0x420
  40ab84:	ldr	x0, [x0]
  40ab88:	cmp	x0, #0x0
  40ab8c:	b.eq	40aba0 <wcrtomb@plt+0x5e90>  // b.none
  40ab90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ab94:	add	x0, x0, #0x420
  40ab98:	ldr	x0, [x0]
  40ab9c:	blr	x0
  40aba0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40aba4:	add	x0, x0, #0x6e0
  40aba8:	bl	404c60 <gettext@plt>
  40abac:	ldr	x3, [sp, #24]
  40abb0:	mov	x2, x0
  40abb4:	mov	w1, #0x0                   	// #0
  40abb8:	mov	w0, #0x0                   	// #0
  40abbc:	bl	404100 <error@plt>
  40abc0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  40abc4:	ldp	x29, x30, [sp], #64
  40abc8:	ret
  40abcc:	stp	x29, x30, [sp, #-16]!
  40abd0:	mov	x29, sp
  40abd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40abd8:	add	x0, x0, #0x720
  40abdc:	ldr	w0, [x0]
  40abe0:	cmp	w0, #0x0
  40abe4:	b.ne	40ac1c <wcrtomb@plt+0x5f0c>  // b.any
  40abe8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40abec:	add	x0, x0, #0x388
  40abf0:	ldr	w0, [x0]
  40abf4:	cmp	w0, #0x0
  40abf8:	b.eq	40ac1c <wcrtomb@plt+0x5f0c>  // b.none
  40abfc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ac00:	add	x0, x0, #0x710
  40ac04:	ldr	x0, [x0]
  40ac08:	cmp	x0, #0x0
  40ac0c:	b.ne	40ac1c <wcrtomb@plt+0x5f0c>  // b.any
  40ac10:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ac14:	add	x0, x0, #0x690
  40ac18:	bl	40a8c8 <wcrtomb@plt+0x5bb8>
  40ac1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ac20:	add	x0, x0, #0x720
  40ac24:	ldr	w0, [x0]
  40ac28:	cmp	w0, #0x1
  40ac2c:	b.ne	40ac78 <wcrtomb@plt+0x5f68>  // b.any
  40ac30:	mov	x2, #0x0                   	// #0
  40ac34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ac38:	add	x1, x0, #0x728
  40ac3c:	mov	w0, #0x0                   	// #0
  40ac40:	bl	404170 <sigprocmask@plt>
  40ac44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ac48:	add	x0, x0, #0x388
  40ac4c:	ldr	w0, [x0]
  40ac50:	cmp	w0, #0x0
  40ac54:	b.ne	40ac68 <wcrtomb@plt+0x5f58>  // b.any
  40ac58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ac5c:	add	x0, x0, #0x388
  40ac60:	mov	w1, #0xa                   	// #10
  40ac64:	str	w1, [x0]
  40ac68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ac6c:	add	x0, x0, #0x720
  40ac70:	mov	w1, #0x2                   	// #2
  40ac74:	str	w1, [x0]
  40ac78:	nop
  40ac7c:	ldp	x29, x30, [sp], #16
  40ac80:	ret
  40ac84:	stp	x29, x30, [sp, #-64]!
  40ac88:	mov	x29, sp
  40ac8c:	str	x0, [sp, #24]
  40ac90:	ldr	x0, [sp, #24]
  40ac94:	bl	404320 <fileno@plt>
  40ac98:	mov	w3, w0
  40ac9c:	add	x0, sp, #0x28
  40aca0:	mov	x2, x0
  40aca4:	mov	x1, #0x5413                	// #21523
  40aca8:	mov	w0, w3
  40acac:	bl	404cc0 <ioctl@plt>
  40acb0:	cmp	w0, #0x0
  40acb4:	b.ne	40acd0 <wcrtomb@plt+0x5fc0>  // b.any
  40acb8:	ldrh	w0, [sp, #42]
  40acbc:	cmp	w0, #0x0
  40acc0:	b.eq	40acd0 <wcrtomb@plt+0x5fc0>  // b.none
  40acc4:	ldrh	w0, [sp, #42]
  40acc8:	and	x0, x0, #0xffff
  40accc:	b	40ad18 <wcrtomb@plt+0x6008>
  40acd0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40acd4:	add	x0, x0, #0x718
  40acd8:	bl	404bf0 <getenv@plt>
  40acdc:	str	x0, [sp, #56]
  40ace0:	ldr	x0, [sp, #56]
  40ace4:	cmp	x0, #0x0
  40ace8:	b.eq	40ad14 <wcrtomb@plt+0x6004>  // b.none
  40acec:	mov	w2, #0xa                   	// #10
  40acf0:	mov	x1, #0x0                   	// #0
  40acf4:	ldr	x0, [sp, #56]
  40acf8:	bl	404820 <strtol@plt>
  40acfc:	str	x0, [sp, #48]
  40ad00:	ldr	x0, [sp, #48]
  40ad04:	cmp	x0, #0x0
  40ad08:	b.le	40ad14 <wcrtomb@plt+0x6004>
  40ad0c:	ldr	x0, [sp, #48]
  40ad10:	b	40ad18 <wcrtomb@plt+0x6008>
  40ad14:	mov	x0, #0x50                  	// #80
  40ad18:	ldp	x29, x30, [sp], #64
  40ad1c:	ret
  40ad20:	stp	x29, x30, [sp, #-64]!
  40ad24:	mov	x29, sp
  40ad28:	str	x0, [sp, #40]
  40ad2c:	str	x1, [sp, #32]
  40ad30:	str	x2, [sp, #24]
  40ad34:	str	x3, [sp, #16]
  40ad38:	ldr	x0, [sp, #40]
  40ad3c:	ldrb	w0, [x0]
  40ad40:	cmp	w0, #0x7b
  40ad44:	b.ne	40ae1c <wcrtomb@plt+0x610c>  // b.any
  40ad48:	ldr	x0, [sp, #40]
  40ad4c:	add	x0, x0, #0x1
  40ad50:	mov	w1, #0x7d                  	// #125
  40ad54:	bl	404930 <strchr@plt>
  40ad58:	str	x0, [sp, #56]
  40ad5c:	ldr	x0, [sp, #56]
  40ad60:	cmp	x0, #0x0
  40ad64:	b.eq	40ae1c <wcrtomb@plt+0x610c>  // b.none
  40ad68:	ldr	x1, [sp, #56]
  40ad6c:	ldr	x0, [sp, #40]
  40ad70:	sub	x0, x1, x0
  40ad74:	str	x0, [sp, #48]
  40ad78:	ldr	x0, [sp, #16]
  40ad7c:	ldr	x0, [x0]
  40ad80:	ldr	x1, [sp, #48]
  40ad84:	cmp	x1, x0
  40ad88:	b.ls	40adc0 <wcrtomb@plt+0x60b0>  // b.plast
  40ad8c:	ldr	x0, [sp, #16]
  40ad90:	ldr	x1, [sp, #48]
  40ad94:	str	x1, [x0]
  40ad98:	ldr	x0, [sp, #24]
  40ad9c:	ldr	x2, [x0]
  40ada0:	ldr	x0, [sp, #16]
  40ada4:	ldr	x0, [x0]
  40ada8:	mov	x1, x0
  40adac:	mov	x0, x2
  40adb0:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  40adb4:	mov	x1, x0
  40adb8:	ldr	x0, [sp, #24]
  40adbc:	str	x1, [x0]
  40adc0:	ldr	x0, [sp, #48]
  40adc4:	sub	x0, x0, #0x1
  40adc8:	str	x0, [sp, #48]
  40adcc:	ldr	x0, [sp, #24]
  40add0:	ldr	x3, [x0]
  40add4:	ldr	x0, [sp, #40]
  40add8:	add	x0, x0, #0x1
  40addc:	ldr	x2, [sp, #48]
  40ade0:	mov	x1, x0
  40ade4:	mov	x0, x3
  40ade8:	bl	404020 <memcpy@plt>
  40adec:	ldr	x0, [sp, #24]
  40adf0:	ldr	x1, [x0]
  40adf4:	ldr	x0, [sp, #48]
  40adf8:	add	x0, x1, x0
  40adfc:	strb	wzr, [x0]
  40ae00:	ldr	x0, [sp, #56]
  40ae04:	add	x1, x0, #0x1
  40ae08:	ldr	x0, [sp, #32]
  40ae0c:	str	x1, [x0]
  40ae10:	ldr	x0, [sp, #24]
  40ae14:	ldr	x0, [x0]
  40ae18:	b	40ae2c <wcrtomb@plt+0x611c>
  40ae1c:	ldr	x0, [sp, #32]
  40ae20:	ldr	x1, [sp, #40]
  40ae24:	str	x1, [x0]
  40ae28:	mov	x0, #0x0                   	// #0
  40ae2c:	ldp	x29, x30, [sp], #64
  40ae30:	ret
  40ae34:	stp	x29, x30, [sp, #-432]!
  40ae38:	mov	x29, sp
  40ae3c:	str	x19, [sp, #16]
  40ae40:	str	x0, [sp, #56]
  40ae44:	str	x1, [sp, #48]
  40ae48:	str	x2, [sp, #40]
  40ae4c:	strb	w3, [sp, #39]
  40ae50:	str	w4, [sp, #32]
  40ae54:	ldrb	w0, [sp, #39]
  40ae58:	cmp	w0, #0x0
  40ae5c:	b.eq	40ae70 <wcrtomb@plt+0x6160>  // b.none
  40ae60:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ae64:	add	x0, x0, #0x750
  40ae68:	bl	404c60 <gettext@plt>
  40ae6c:	b	40ae7c <wcrtomb@plt+0x616c>
  40ae70:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ae74:	add	x0, x0, #0x758
  40ae78:	bl	404c60 <gettext@plt>
  40ae7c:	str	x0, [sp, #400]
  40ae80:	ldr	w0, [sp, #32]
  40ae84:	add	x1, sp, #0x158
  40ae88:	bl	450988 <argp_usage@@Base+0x789c>
  40ae8c:	str	x0, [sp, #392]
  40ae90:	str	xzr, [sp, #424]
  40ae94:	ldr	x0, [sp, #40]
  40ae98:	cmp	x0, #0x0
  40ae9c:	b.ne	40aed0 <wcrtomb@plt+0x61c0>  // b.any
  40aea0:	ldrb	w0, [sp, #39]
  40aea4:	cmp	w0, #0x0
  40aea8:	b.eq	40aec0 <wcrtomb@plt+0x61b0>  // b.none
  40aeac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40aeb0:	add	x0, x0, #0x760
  40aeb4:	bl	404c60 <gettext@plt>
  40aeb8:	str	x0, [sp, #40]
  40aebc:	b	40aed0 <wcrtomb@plt+0x61c0>
  40aec0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40aec4:	add	x0, x0, #0x778
  40aec8:	bl	404c60 <gettext@plt>
  40aecc:	str	x0, [sp, #40]
  40aed0:	ldr	x0, [sp, #40]
  40aed4:	str	x0, [sp, #336]
  40aed8:	b	40b33c <wcrtomb@plt+0x662c>
  40aedc:	ldr	x0, [sp, #336]
  40aee0:	ldrb	w0, [x0]
  40aee4:	cmp	w0, #0x25
  40aee8:	b.ne	40b2ec <wcrtomb@plt+0x65dc>  // b.any
  40aeec:	ldr	x0, [sp, #336]
  40aef0:	add	x0, x0, #0x1
  40aef4:	str	x0, [sp, #336]
  40aef8:	ldr	x0, [sp, #336]
  40aefc:	ldrb	w0, [x0]
  40af00:	cmp	w0, #0x7b
  40af04:	b.ne	40af64 <wcrtomb@plt+0x6254>  // b.any
  40af08:	ldr	x4, [sp, #336]
  40af0c:	add	x1, sp, #0x150
  40af10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40af14:	add	x3, x0, #0x7c0
  40af18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40af1c:	add	x2, x0, #0x7b8
  40af20:	mov	x0, x4
  40af24:	bl	40ad20 <wcrtomb@plt+0x6010>
  40af28:	str	x0, [sp, #424]
  40af2c:	ldr	x0, [sp, #424]
  40af30:	cmp	x0, #0x0
  40af34:	b.ne	40af64 <wcrtomb@plt+0x6254>  // b.any
  40af38:	ldr	x1, [sp, #56]
  40af3c:	mov	w0, #0x25                  	// #37
  40af40:	bl	404a40 <fputc_unlocked@plt>
  40af44:	ldr	x0, [sp, #336]
  40af48:	ldrb	w0, [x0]
  40af4c:	ldr	x1, [sp, #56]
  40af50:	bl	404a40 <fputc_unlocked@plt>
  40af54:	ldr	x0, [sp, #48]
  40af58:	add	x0, x0, #0x2
  40af5c:	str	x0, [sp, #48]
  40af60:	b	40b330 <wcrtomb@plt+0x6620>
  40af64:	ldr	x0, [sp, #336]
  40af68:	ldrb	w0, [x0]
  40af6c:	cmp	w0, #0x75
  40af70:	b.eq	40b008 <wcrtomb@plt+0x62f8>  // b.none
  40af74:	cmp	w0, #0x75
  40af78:	b.gt	40b2b4 <wcrtomb@plt+0x65a4>
  40af7c:	cmp	w0, #0x74
  40af80:	b.eq	40b1e4 <wcrtomb@plt+0x64d4>  // b.none
  40af84:	cmp	w0, #0x74
  40af88:	b.gt	40b2b4 <wcrtomb@plt+0x65a4>
  40af8c:	cmp	w0, #0x73
  40af90:	b.eq	40b030 <wcrtomb@plt+0x6320>  // b.none
  40af94:	cmp	w0, #0x73
  40af98:	b.gt	40b2b4 <wcrtomb@plt+0x65a4>
  40af9c:	cmp	w0, #0x64
  40afa0:	b.eq	40b058 <wcrtomb@plt+0x6348>  // b.none
  40afa4:	cmp	w0, #0x64
  40afa8:	b.gt	40b2b4 <wcrtomb@plt+0x65a4>
  40afac:	cmp	w0, #0x63
  40afb0:	b.eq	40afd0 <wcrtomb@plt+0x62c0>  // b.none
  40afb4:	cmp	w0, #0x63
  40afb8:	b.gt	40b2b4 <wcrtomb@plt+0x65a4>
  40afbc:	cmp	w0, #0x2a
  40afc0:	b.eq	40b258 <wcrtomb@plt+0x6548>  // b.none
  40afc4:	cmp	w0, #0x54
  40afc8:	b.eq	40b080 <wcrtomb@plt+0x6370>  // b.none
  40afcc:	b	40b2b4 <wcrtomb@plt+0x65a4>
  40afd0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40afd4:	add	x0, x0, #0x7d8
  40afd8:	ldr	x0, [x0]
  40afdc:	ldr	w4, [sp, #32]
  40afe0:	ldrb	w3, [sp, #39]
  40afe4:	mov	x2, x0
  40afe8:	ldr	x1, [sp, #48]
  40afec:	ldr	x0, [sp, #56]
  40aff0:	bl	40ae34 <wcrtomb@plt+0x6124>
  40aff4:	sxtw	x0, w0
  40aff8:	ldr	x1, [sp, #48]
  40affc:	add	x0, x1, x0
  40b000:	str	x0, [sp, #48]
  40b004:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b008:	ldr	x1, [sp, #56]
  40b00c:	ldr	x0, [sp, #392]
  40b010:	bl	404ab0 <fputs_unlocked@plt>
  40b014:	ldr	x0, [sp, #392]
  40b018:	bl	4040b0 <strlen@plt>
  40b01c:	mov	x1, x0
  40b020:	ldr	x0, [sp, #48]
  40b024:	add	x0, x0, x1
  40b028:	str	x0, [sp, #48]
  40b02c:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b030:	ldr	x1, [sp, #56]
  40b034:	ldr	x0, [sp, #400]
  40b038:	bl	404ab0 <fputs_unlocked@plt>
  40b03c:	ldr	x0, [sp, #400]
  40b040:	bl	4040b0 <strlen@plt>
  40b044:	mov	x1, x0
  40b048:	ldr	x0, [sp, #48]
  40b04c:	add	x0, x0, x1
  40b050:	str	x0, [sp, #48]
  40b054:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b058:	bl	4052c4 <wcrtomb@plt+0x5b4>
  40b05c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b060:	add	x1, x0, #0x790
  40b064:	ldr	x0, [sp, #56]
  40b068:	bl	404c90 <fprintf@plt>
  40b06c:	sxtw	x0, w0
  40b070:	ldr	x1, [sp, #48]
  40b074:	add	x0, x1, x0
  40b078:	str	x0, [sp, #48]
  40b07c:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b080:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40b084:	add	x0, x0, #0x7c0
  40b088:	str	x0, [sp, #416]
  40b08c:	bl	4052c4 <wcrtomb@plt+0x5b4>
  40b090:	ldr	x0, [sp, #424]
  40b094:	cmp	x0, #0x0
  40b098:	b.eq	40b1a8 <wcrtomb@plt+0x6498>  // b.none
  40b09c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b0a0:	add	x0, x0, #0x798
  40b0a4:	str	x0, [sp, #120]
  40b0a8:	add	x0, sp, #0x40
  40b0ac:	mov	w2, #0x4644                	// #17988
  40b0b0:	mov	x1, x0
  40b0b4:	ldr	x0, [sp, #424]
  40b0b8:	bl	4423e8 <wcrtomb@plt+0x3d6d8>
  40b0bc:	cmp	w0, #0x0
  40b0c0:	b.eq	40b12c <wcrtomb@plt+0x641c>  // b.none
  40b0c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b0c8:	add	x0, x0, #0x420
  40b0cc:	ldr	x0, [x0]
  40b0d0:	cmp	x0, #0x0
  40b0d4:	b.eq	40b0e8 <wcrtomb@plt+0x63d8>  // b.none
  40b0d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b0dc:	add	x0, x0, #0x420
  40b0e0:	ldr	x0, [x0]
  40b0e4:	blr	x0
  40b0e8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b0ec:	add	x0, x0, #0x7a0
  40b0f0:	bl	404c60 <gettext@plt>
  40b0f4:	mov	x19, x0
  40b0f8:	add	x0, sp, #0x40
  40b0fc:	bl	4426b0 <wcrtomb@plt+0x3d9a0>
  40b100:	mov	x4, x0
  40b104:	ldr	x3, [sp, #424]
  40b108:	mov	x2, x19
  40b10c:	mov	w1, #0x0                   	// #0
  40b110:	mov	w0, #0x0                   	// #0
  40b114:	bl	404100 <error@plt>
  40b118:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b11c:	add	x0, x0, #0xdb0
  40b120:	mov	w1, #0x2                   	// #2
  40b124:	str	w1, [x0]
  40b128:	b	40b1a8 <wcrtomb@plt+0x6498>
  40b12c:	str	wzr, [sp, #412]
  40b130:	b	40b164 <wcrtomb@plt+0x6454>
  40b134:	ldr	x1, [sp, #72]
  40b138:	ldrsw	x0, [sp, #412]
  40b13c:	lsl	x0, x0, #3
  40b140:	add	x0, x1, x0
  40b144:	ldr	x2, [x0]
  40b148:	ldrsw	x0, [sp, #412]
  40b14c:	lsl	x0, x0, #3
  40b150:	add	x1, sp, #0x138
  40b154:	str	x2, [x1, x0]
  40b158:	ldr	w0, [sp, #412]
  40b15c:	add	w0, w0, #0x1
  40b160:	str	w0, [sp, #412]
  40b164:	ldrsw	x1, [sp, #412]
  40b168:	ldr	x0, [sp, #64]
  40b16c:	cmp	x1, x0
  40b170:	b.cc	40b134 <wcrtomb@plt+0x6424>  // b.lo, b.ul, b.last
  40b174:	b	40b194 <wcrtomb@plt+0x6484>
  40b178:	ldrsw	x0, [sp, #412]
  40b17c:	lsl	x0, x0, #3
  40b180:	add	x1, sp, #0x138
  40b184:	str	xzr, [x1, x0]
  40b188:	ldr	w0, [sp, #412]
  40b18c:	add	w0, w0, #0x1
  40b190:	str	w0, [sp, #412]
  40b194:	ldr	w0, [sp, #412]
  40b198:	cmp	w0, #0x2
  40b19c:	b.le	40b178 <wcrtomb@plt+0x6468>
  40b1a0:	add	x0, sp, #0x138
  40b1a4:	str	x0, [sp, #416]
  40b1a8:	mov	w3, #0x0                   	// #0
  40b1ac:	mov	w2, #0x2c                  	// #44
  40b1b0:	ldr	x1, [sp, #416]
  40b1b4:	ldr	x0, [sp, #56]
  40b1b8:	bl	405c94 <wcrtomb@plt+0xf84>
  40b1bc:	sxtw	x0, w0
  40b1c0:	ldr	x1, [sp, #48]
  40b1c4:	add	x0, x1, x0
  40b1c8:	str	x0, [sp, #48]
  40b1cc:	ldr	x0, [sp, #424]
  40b1d0:	cmp	x0, #0x0
  40b1d4:	b.eq	40b2e0 <wcrtomb@plt+0x65d0>  // b.none
  40b1d8:	add	x0, sp, #0x40
  40b1dc:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  40b1e0:	b	40b2e0 <wcrtomb@plt+0x65d0>
  40b1e4:	ldr	x0, [sp, #424]
  40b1e8:	cmp	x0, #0x0
  40b1ec:	b.eq	40b1f8 <wcrtomb@plt+0x64e8>  // b.none
  40b1f0:	ldr	x0, [sp, #424]
  40b1f4:	b	40b200 <wcrtomb@plt+0x64f0>
  40b1f8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b1fc:	add	x0, x0, #0x7c0
  40b200:	str	x0, [sp, #384]
  40b204:	add	x0, sp, #0x128
  40b208:	mov	x1, #0x0                   	// #0
  40b20c:	bl	4044f0 <gettimeofday@plt>
  40b210:	add	x0, sp, #0x128
  40b214:	bl	404340 <localtime@plt>
  40b218:	str	x0, [sp, #376]
  40b21c:	ldr	x0, [sp, #304]
  40b220:	mov	w1, w0
  40b224:	mov	w0, #0x3e8                 	// #1000
  40b228:	mul	w0, w1, w0
  40b22c:	mov	w4, w0
  40b230:	mov	x3, #0x0                   	// #0
  40b234:	ldr	x2, [sp, #376]
  40b238:	ldr	x1, [sp, #384]
  40b23c:	ldr	x0, [sp, #56]
  40b240:	bl	44b8b0 <argp_usage@@Base+0x27c4>
  40b244:	mov	x1, x0
  40b248:	ldr	x0, [sp, #48]
  40b24c:	add	x0, x0, x1
  40b250:	str	x0, [sp, #48]
  40b254:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b258:	ldr	x0, [sp, #424]
  40b25c:	cmp	x0, #0x0
  40b260:	b.eq	40b278 <wcrtomb@plt+0x6568>  // b.none
  40b264:	mov	w2, #0xa                   	// #10
  40b268:	mov	x1, #0x0                   	// #0
  40b26c:	ldr	x0, [sp, #424]
  40b270:	bl	404820 <strtol@plt>
  40b274:	b	40b280 <wcrtomb@plt+0x6570>
  40b278:	ldr	x0, [sp, #56]
  40b27c:	bl	40ac84 <wcrtomb@plt+0x5f74>
  40b280:	str	x0, [sp, #368]
  40b284:	b	40b2a0 <wcrtomb@plt+0x6590>
  40b288:	ldr	x1, [sp, #56]
  40b28c:	mov	w0, #0x20                  	// #32
  40b290:	bl	404a40 <fputc_unlocked@plt>
  40b294:	ldr	x0, [sp, #48]
  40b298:	add	x0, x0, #0x1
  40b29c:	str	x0, [sp, #48]
  40b2a0:	ldr	x0, [sp, #368]
  40b2a4:	ldr	x1, [sp, #48]
  40b2a8:	cmp	x1, x0
  40b2ac:	b.cc	40b288 <wcrtomb@plt+0x6578>  // b.lo, b.ul, b.last
  40b2b0:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b2b4:	ldr	x1, [sp, #56]
  40b2b8:	mov	w0, #0x25                  	// #37
  40b2bc:	bl	404a40 <fputc_unlocked@plt>
  40b2c0:	ldr	x0, [sp, #336]
  40b2c4:	ldrb	w0, [x0]
  40b2c8:	ldr	x1, [sp, #56]
  40b2cc:	bl	404a40 <fputc_unlocked@plt>
  40b2d0:	ldr	x0, [sp, #48]
  40b2d4:	add	x0, x0, #0x2
  40b2d8:	str	x0, [sp, #48]
  40b2dc:	b	40b2e4 <wcrtomb@plt+0x65d4>
  40b2e0:	nop
  40b2e4:	str	xzr, [sp, #424]
  40b2e8:	b	40b330 <wcrtomb@plt+0x6620>
  40b2ec:	ldr	x0, [sp, #336]
  40b2f0:	ldrb	w0, [x0]
  40b2f4:	ldr	x1, [sp, #56]
  40b2f8:	bl	404a40 <fputc_unlocked@plt>
  40b2fc:	ldr	x0, [sp, #336]
  40b300:	ldrb	w0, [x0]
  40b304:	cmp	w0, #0xd
  40b308:	b.ne	40b324 <wcrtomb@plt+0x6614>  // b.any
  40b30c:	str	xzr, [sp, #48]
  40b310:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b314:	add	x0, x0, #0x7a8
  40b318:	mov	w1, #0x1                   	// #1
  40b31c:	str	w1, [x0]
  40b320:	b	40b330 <wcrtomb@plt+0x6620>
  40b324:	ldr	x0, [sp, #48]
  40b328:	add	x0, x0, #0x1
  40b32c:	str	x0, [sp, #48]
  40b330:	ldr	x0, [sp, #336]
  40b334:	add	x0, x0, #0x1
  40b338:	str	x0, [sp, #336]
  40b33c:	ldr	x0, [sp, #336]
  40b340:	ldrb	w0, [x0]
  40b344:	cmp	w0, #0x0
  40b348:	b.ne	40aedc <wcrtomb@plt+0x61cc>  // b.any
  40b34c:	ldr	x0, [sp, #56]
  40b350:	bl	404990 <fflush_unlocked@plt>
  40b354:	ldr	x0, [sp, #48]
  40b358:	ldr	x19, [sp, #16]
  40b35c:	ldp	x29, x30, [sp], #432
  40b360:	ret
  40b364:	stp	x29, x30, [sp, #-48]!
  40b368:	mov	x29, sp
  40b36c:	strb	w0, [sp, #31]
  40b370:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b374:	add	x0, x0, #0x710
  40b378:	ldr	x0, [x0]
  40b37c:	str	x0, [sp, #40]
  40b380:	b	40b62c <wcrtomb@plt+0x691c>
  40b384:	ldr	x0, [sp, #40]
  40b388:	ldr	w0, [x0, #8]
  40b38c:	cmp	w0, #0x7
  40b390:	b.eq	40b5fc <wcrtomb@plt+0x68ec>  // b.none
  40b394:	cmp	w0, #0x7
  40b398:	b.hi	40b620 <wcrtomb@plt+0x6910>  // b.pmore
  40b39c:	cmp	w0, #0x6
  40b3a0:	b.eq	40b5f0 <wcrtomb@plt+0x68e0>  // b.none
  40b3a4:	cmp	w0, #0x6
  40b3a8:	b.hi	40b620 <wcrtomb@plt+0x6910>  // b.pmore
  40b3ac:	cmp	w0, #0x5
  40b3b0:	b.eq	40b5bc <wcrtomb@plt+0x68ac>  // b.none
  40b3b4:	cmp	w0, #0x5
  40b3b8:	b.hi	40b620 <wcrtomb@plt+0x6910>  // b.pmore
  40b3bc:	cmp	w0, #0x4
  40b3c0:	b.eq	40b5ac <wcrtomb@plt+0x689c>  // b.none
  40b3c4:	cmp	w0, #0x4
  40b3c8:	b.hi	40b620 <wcrtomb@plt+0x6910>  // b.pmore
  40b3cc:	cmp	w0, #0x3
  40b3d0:	b.eq	40b524 <wcrtomb@plt+0x6814>  // b.none
  40b3d4:	cmp	w0, #0x3
  40b3d8:	b.hi	40b620 <wcrtomb@plt+0x6910>  // b.pmore
  40b3dc:	cmp	w0, #0x2
  40b3e0:	b.eq	40b4a4 <wcrtomb@plt+0x6794>  // b.none
  40b3e4:	cmp	w0, #0x2
  40b3e8:	b.hi	40b620 <wcrtomb@plt+0x6910>  // b.pmore
  40b3ec:	cmp	w0, #0x0
  40b3f0:	b.eq	40b400 <wcrtomb@plt+0x66f0>  // b.none
  40b3f4:	cmp	w0, #0x1
  40b3f8:	b.eq	40b42c <wcrtomb@plt+0x671c>  // b.none
  40b3fc:	b	40b620 <wcrtomb@plt+0x6910>
  40b400:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b404:	add	x0, x0, #0xf88
  40b408:	ldr	x0, [x0]
  40b40c:	mov	x1, x0
  40b410:	mov	w0, #0x2e                  	// #46
  40b414:	bl	404a40 <fputc_unlocked@plt>
  40b418:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b41c:	add	x0, x0, #0xf88
  40b420:	ldr	x0, [x0]
  40b424:	bl	404990 <fflush_unlocked@plt>
  40b428:	b	40b620 <wcrtomb@plt+0x6910>
  40b42c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b430:	add	x0, x0, #0x7b0
  40b434:	ldr	x0, [x0]
  40b438:	cmp	x0, #0x0
  40b43c:	b.ne	40b464 <wcrtomb@plt+0x6754>  // b.any
  40b440:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b444:	add	x1, x0, #0x7c8
  40b448:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b44c:	add	x0, x0, #0x7d0
  40b450:	bl	4043d0 <fopen@plt>
  40b454:	mov	x1, x0
  40b458:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b45c:	add	x0, x0, #0x7b0
  40b460:	str	x1, [x0]
  40b464:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b468:	add	x0, x0, #0x7b0
  40b46c:	ldr	x0, [x0]
  40b470:	cmp	x0, #0x0
  40b474:	b.eq	40b614 <wcrtomb@plt+0x6904>  // b.none
  40b478:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b47c:	add	x0, x0, #0x7b0
  40b480:	ldr	x0, [x0]
  40b484:	mov	x1, x0
  40b488:	mov	w0, #0x7                   	// #7
  40b48c:	bl	404a40 <fputc_unlocked@plt>
  40b490:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b494:	add	x0, x0, #0x7b0
  40b498:	ldr	x0, [x0]
  40b49c:	bl	404990 <fflush_unlocked@plt>
  40b4a0:	b	40b614 <wcrtomb@plt+0x6904>
  40b4a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b4a8:	add	x0, x0, #0x498
  40b4ac:	ldr	x3, [x0]
  40b4b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b4b4:	add	x0, x0, #0xe08
  40b4b8:	ldr	x0, [x0]
  40b4bc:	mov	x2, x0
  40b4c0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b4c4:	add	x1, x0, #0x7e0
  40b4c8:	mov	x0, x3
  40b4cc:	bl	404c90 <fprintf@plt>
  40b4d0:	str	w0, [sp, #36]
  40b4d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b4d8:	add	x0, x0, #0x498
  40b4dc:	ldr	x5, [x0]
  40b4e0:	ldrsw	x1, [sp, #36]
  40b4e4:	ldr	x0, [sp, #40]
  40b4e8:	ldr	x2, [x0, #16]
  40b4ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b4f0:	add	x0, x0, #0x708
  40b4f4:	ldr	w0, [x0]
  40b4f8:	mov	w4, w0
  40b4fc:	ldrb	w3, [sp, #31]
  40b500:	mov	x0, x5
  40b504:	bl	40ae34 <wcrtomb@plt+0x6124>
  40b508:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b50c:	add	x0, x0, #0x498
  40b510:	ldr	x0, [x0]
  40b514:	mov	x1, x0
  40b518:	mov	w0, #0xa                   	// #10
  40b51c:	bl	404a40 <fputc_unlocked@plt>
  40b520:	b	40b620 <wcrtomb@plt+0x6910>
  40b524:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b528:	add	x0, x0, #0x7b0
  40b52c:	ldr	x0, [x0]
  40b530:	cmp	x0, #0x0
  40b534:	b.ne	40b55c <wcrtomb@plt+0x684c>  // b.any
  40b538:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b53c:	add	x1, x0, #0x7c8
  40b540:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b544:	add	x0, x0, #0x7d0
  40b548:	bl	4043d0 <fopen@plt>
  40b54c:	mov	x1, x0
  40b550:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b554:	add	x0, x0, #0x7b0
  40b558:	str	x1, [x0]
  40b55c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b560:	add	x0, x0, #0x7b0
  40b564:	ldr	x0, [x0]
  40b568:	cmp	x0, #0x0
  40b56c:	b.eq	40b61c <wcrtomb@plt+0x690c>  // b.none
  40b570:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b574:	add	x0, x0, #0x7b0
  40b578:	ldr	x5, [x0]
  40b57c:	ldr	x0, [sp, #40]
  40b580:	ldr	x1, [x0, #16]
  40b584:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b588:	add	x0, x0, #0x708
  40b58c:	ldr	w0, [x0]
  40b590:	mov	w4, w0
  40b594:	ldrb	w3, [sp, #31]
  40b598:	mov	x2, x1
  40b59c:	mov	x1, #0x0                   	// #0
  40b5a0:	mov	x0, x5
  40b5a4:	bl	40ae34 <wcrtomb@plt+0x6124>
  40b5a8:	b	40b61c <wcrtomb@plt+0x690c>
  40b5ac:	ldr	x0, [sp, #40]
  40b5b0:	ldr	x0, [x0, #16]
  40b5b4:	bl	404520 <sleep@plt>
  40b5b8:	b	40b620 <wcrtomb@plt+0x6910>
  40b5bc:	ldr	x0, [sp, #40]
  40b5c0:	ldr	x3, [x0, #16]
  40b5c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b5c8:	add	x0, x0, #0x310
  40b5cc:	ldr	x0, [x0]
  40b5d0:	ldr	x1, [x0]
  40b5d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b5d8:	add	x0, x0, #0x708
  40b5dc:	ldr	w0, [x0]
  40b5e0:	mov	w2, w0
  40b5e4:	mov	x0, x3
  40b5e8:	bl	42f8b8 <wcrtomb@plt+0x2aba8>
  40b5ec:	b	40b620 <wcrtomb@plt+0x6910>
  40b5f0:	bl	4052c4 <wcrtomb@plt+0x5b4>
  40b5f4:	bl	405f40 <wcrtomb@plt+0x1230>
  40b5f8:	b	40b620 <wcrtomb@plt+0x6910>
  40b5fc:	add	x0, sp, #0x20
  40b600:	mov	x1, x0
  40b604:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b608:	add	x0, x0, #0x728
  40b60c:	bl	404850 <sigwait@plt>
  40b610:	b	40b620 <wcrtomb@plt+0x6910>
  40b614:	nop
  40b618:	b	40b620 <wcrtomb@plt+0x6910>
  40b61c:	nop
  40b620:	ldr	x0, [sp, #40]
  40b624:	ldr	x0, [x0]
  40b628:	str	x0, [sp, #40]
  40b62c:	ldr	x0, [sp, #40]
  40b630:	cmp	x0, #0x0
  40b634:	b.ne	40b384 <wcrtomb@plt+0x6674>  // b.any
  40b638:	nop
  40b63c:	nop
  40b640:	ldp	x29, x30, [sp], #48
  40b644:	ret
  40b648:	stp	x29, x30, [sp, #-32]!
  40b64c:	mov	x29, sp
  40b650:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b654:	add	x0, x0, #0x710
  40b658:	ldr	x0, [x0]
  40b65c:	str	x0, [sp, #24]
  40b660:	b	40b718 <wcrtomb@plt+0x6a08>
  40b664:	ldr	x0, [sp, #24]
  40b668:	ldr	w0, [x0, #8]
  40b66c:	cmp	w0, #0x3
  40b670:	b.ne	40b70c <wcrtomb@plt+0x69fc>  // b.any
  40b674:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b678:	add	x0, x0, #0x7b0
  40b67c:	ldr	x0, [x0]
  40b680:	cmp	x0, #0x0
  40b684:	b.eq	40b708 <wcrtomb@plt+0x69f8>  // b.none
  40b688:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b68c:	add	x0, x0, #0x7a8
  40b690:	ldr	w0, [x0]
  40b694:	cmp	w0, #0x0
  40b698:	b.eq	40b708 <wcrtomb@plt+0x69f8>  // b.none
  40b69c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b6a0:	add	x0, x0, #0x7b0
  40b6a4:	ldr	x0, [x0]
  40b6a8:	bl	40ac84 <wcrtomb@plt+0x5f74>
  40b6ac:	str	x0, [sp, #16]
  40b6b0:	b	40b6cc <wcrtomb@plt+0x69bc>
  40b6b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b6b8:	add	x0, x0, #0x7b0
  40b6bc:	ldr	x0, [x0]
  40b6c0:	mov	x1, x0
  40b6c4:	mov	w0, #0x20                  	// #32
  40b6c8:	bl	404a40 <fputc_unlocked@plt>
  40b6cc:	ldr	x0, [sp, #16]
  40b6d0:	sub	x1, x0, #0x1
  40b6d4:	str	x1, [sp, #16]
  40b6d8:	cmp	x0, #0x0
  40b6dc:	b.ne	40b6b4 <wcrtomb@plt+0x69a4>  // b.any
  40b6e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b6e4:	add	x0, x0, #0x7b0
  40b6e8:	ldr	x0, [x0]
  40b6ec:	mov	x1, x0
  40b6f0:	mov	w0, #0xd                   	// #13
  40b6f4:	bl	404a40 <fputc_unlocked@plt>
  40b6f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b6fc:	add	x0, x0, #0x7b0
  40b700:	ldr	x0, [x0]
  40b704:	bl	404990 <fflush_unlocked@plt>
  40b708:	nop
  40b70c:	ldr	x0, [sp, #24]
  40b710:	ldr	x0, [x0]
  40b714:	str	x0, [sp, #24]
  40b718:	ldr	x0, [sp, #24]
  40b71c:	cmp	x0, #0x0
  40b720:	b.ne	40b664 <wcrtomb@plt+0x6954>  // b.any
  40b724:	nop
  40b728:	nop
  40b72c:	ldp	x29, x30, [sp], #32
  40b730:	ret
  40b734:	stp	x29, x30, [sp, #-32]!
  40b738:	mov	x29, sp
  40b73c:	strb	w0, [sp, #31]
  40b740:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b744:	add	x0, x0, #0x388
  40b748:	ldr	w0, [x0]
  40b74c:	cmp	w0, #0x0
  40b750:	b.eq	40b7a4 <wcrtomb@plt+0x6a94>  // b.none
  40b754:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b758:	add	x0, x0, #0x708
  40b75c:	ldr	w0, [x0]
  40b760:	add	w1, w0, #0x1
  40b764:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b768:	add	x0, x0, #0x708
  40b76c:	str	w1, [x0]
  40b770:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b774:	add	x0, x0, #0x708
  40b778:	ldr	w0, [x0]
  40b77c:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b780:	add	x1, x1, #0x388
  40b784:	ldr	w1, [x1]
  40b788:	udiv	w2, w0, w1
  40b78c:	mul	w1, w2, w1
  40b790:	sub	w0, w0, w1
  40b794:	cmp	w0, #0x0
  40b798:	b.ne	40b7a4 <wcrtomb@plt+0x6a94>  // b.any
  40b79c:	ldrb	w0, [sp, #31]
  40b7a0:	bl	40b364 <wcrtomb@plt+0x6654>
  40b7a4:	nop
  40b7a8:	ldp	x29, x30, [sp], #32
  40b7ac:	ret
  40b7b0:	stp	x29, x30, [sp, #-16]!
  40b7b4:	mov	x29, sp
  40b7b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b7bc:	add	x0, x0, #0x388
  40b7c0:	ldr	w0, [x0]
  40b7c4:	cmp	w0, #0x0
  40b7c8:	b.eq	40b7f4 <wcrtomb@plt+0x6ae4>  // b.none
  40b7cc:	bl	40b648 <wcrtomb@plt+0x6938>
  40b7d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b7d4:	add	x0, x0, #0x7b0
  40b7d8:	ldr	x0, [x0]
  40b7dc:	cmp	x0, #0x0
  40b7e0:	b.eq	40b7f4 <wcrtomb@plt+0x6ae4>  // b.none
  40b7e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b7e8:	add	x0, x0, #0x7b0
  40b7ec:	ldr	x0, [x0]
  40b7f0:	bl	404380 <fclose@plt>
  40b7f4:	nop
  40b7f8:	ldp	x29, x30, [sp], #16
  40b7fc:	ret
  40b800:	stp	x29, x30, [sp, #-32]!
  40b804:	mov	x29, sp
  40b808:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b80c:	add	x0, x0, #0x3c8
  40b810:	ldr	x1, [x0]
  40b814:	add	x0, sp, #0x18
  40b818:	bl	4262e4 <wcrtomb@plt+0x215d4>
  40b81c:	mov	x1, x0
  40b820:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b824:	add	x0, x0, #0x7d0
  40b828:	str	x1, [x0]
  40b82c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b830:	add	x0, x0, #0x370
  40b834:	ldr	x0, [x0]
  40b838:	cmp	x0, #0x0
  40b83c:	b.eq	40b844 <wcrtomb@plt+0x6b34>  // b.none
  40b840:	bl	41eadc <wcrtomb@plt+0x19dcc>
  40b844:	nop
  40b848:	ldp	x29, x30, [sp], #32
  40b84c:	ret
  40b850:	stp	x29, x30, [sp, #-288]!
  40b854:	mov	x29, sp
  40b858:	str	x19, [sp, #16]
  40b85c:	str	x0, [sp, #72]
  40b860:	str	x1, [sp, #64]
  40b864:	str	x2, [sp, #240]
  40b868:	str	x3, [sp, #248]
  40b86c:	str	x4, [sp, #256]
  40b870:	str	x5, [sp, #264]
  40b874:	str	x6, [sp, #272]
  40b878:	str	x7, [sp, #280]
  40b87c:	str	q0, [sp, #112]
  40b880:	str	q1, [sp, #128]
  40b884:	str	q2, [sp, #144]
  40b888:	str	q3, [sp, #160]
  40b88c:	str	q4, [sp, #176]
  40b890:	str	q5, [sp, #192]
  40b894:	str	q6, [sp, #208]
  40b898:	str	q7, [sp, #224]
  40b89c:	ldr	x0, [sp, #64]
  40b8a0:	cmp	x0, #0x0
  40b8a4:	b.eq	40b954 <wcrtomb@plt+0x6c44>  // b.none
  40b8a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b8ac:	add	x0, x0, #0xf88
  40b8b0:	ldr	x19, [x0]
  40b8b4:	ldr	x0, [sp, #72]
  40b8b8:	ldr	x0, [x0, #8]
  40b8bc:	mov	x1, x0
  40b8c0:	mov	w0, #0x1                   	// #1
  40b8c4:	bl	423cdc <wcrtomb@plt+0x1efcc>
  40b8c8:	mov	x2, x0
  40b8cc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40b8d0:	add	x1, x0, #0x7e8
  40b8d4:	mov	x0, x19
  40b8d8:	bl	404c90 <fprintf@plt>
  40b8dc:	add	x0, sp, #0x120
  40b8e0:	str	x0, [sp, #80]
  40b8e4:	add	x0, sp, #0x120
  40b8e8:	str	x0, [sp, #88]
  40b8ec:	add	x0, sp, #0xf0
  40b8f0:	str	x0, [sp, #96]
  40b8f4:	mov	w0, #0xffffffd0            	// #-48
  40b8f8:	str	w0, [sp, #104]
  40b8fc:	mov	w0, #0xffffff80            	// #-128
  40b900:	str	w0, [sp, #108]
  40b904:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b908:	add	x0, x0, #0xf88
  40b90c:	ldr	x4, [x0]
  40b910:	add	x2, sp, #0x20
  40b914:	add	x3, sp, #0x50
  40b918:	ldp	x0, x1, [x3]
  40b91c:	stp	x0, x1, [x2]
  40b920:	ldp	x0, x1, [x3, #16]
  40b924:	stp	x0, x1, [x2, #16]
  40b928:	add	x0, sp, #0x20
  40b92c:	mov	x2, x0
  40b930:	ldr	x1, [sp, #64]
  40b934:	mov	x0, x4
  40b938:	bl	404b80 <vfprintf@plt>
  40b93c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b940:	add	x0, x0, #0xf88
  40b944:	ldr	x0, [x0]
  40b948:	mov	x1, x0
  40b94c:	mov	w0, #0xa                   	// #10
  40b950:	bl	404250 <fputc@plt>
  40b954:	mov	w0, #0x1                   	// #1
  40b958:	bl	434ff4 <wcrtomb@plt+0x302e4>
  40b95c:	nop
  40b960:	ldr	x19, [sp, #16]
  40b964:	ldp	x29, x30, [sp], #288
  40b968:	ret
  40b96c:	sub	sp, sp, #0x10
  40b970:	str	x0, [sp, #8]
  40b974:	str	x1, [sp]
  40b978:	mov	w0, #0x1                   	// #1
  40b97c:	add	sp, sp, #0x10
  40b980:	ret
  40b984:	stp	x29, x30, [sp, #-48]!
  40b988:	mov	x29, sp
  40b98c:	str	x0, [sp, #24]
  40b990:	str	x1, [sp, #16]
  40b994:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b998:	add	x0, x0, #0x7c8
  40b99c:	ldr	w3, [x0]
  40b9a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40b9a4:	add	x0, x0, #0x7d0
  40b9a8:	ldr	x0, [x0]
  40b9ac:	ldr	x2, [sp, #24]
  40b9b0:	mov	x1, x0
  40b9b4:	mov	w0, w3
  40b9b8:	bl	425608 <wcrtomb@plt+0x208f8>
  40b9bc:	str	x0, [sp, #40]
  40b9c0:	ldr	x1, [sp, #40]
  40b9c4:	ldr	x0, [sp, #24]
  40b9c8:	cmp	x1, x0
  40b9cc:	b.eq	40ba38 <wcrtomb@plt+0x6d28>  // b.none
  40b9d0:	ldr	x0, [sp, #40]
  40b9d4:	cmn	x0, #0x1
  40b9d8:	b.ne	40ba00 <wcrtomb@plt+0x6cf0>  // b.any
  40b9dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b9e0:	add	x0, x0, #0x90
  40b9e4:	ldr	x0, [x0, #8]
  40b9e8:	bl	43a684 <wcrtomb@plt+0x35974>
  40b9ec:	mov	x1, #0x0                   	// #0
  40b9f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40b9f4:	add	x0, x0, #0x90
  40b9f8:	bl	40b850 <wcrtomb@plt+0x6b40>
  40b9fc:	b	40ba30 <wcrtomb@plt+0x6d20>
  40ba00:	ldr	x2, [sp, #24]
  40ba04:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ba08:	add	x1, x0, #0x7f0
  40ba0c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ba10:	add	x0, x0, #0x818
  40ba14:	bl	404040 <ngettext@plt>
  40ba18:	ldr	x3, [sp, #24]
  40ba1c:	ldr	x2, [sp, #40]
  40ba20:	mov	x1, x0
  40ba24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ba28:	add	x0, x0, #0x90
  40ba2c:	bl	40b850 <wcrtomb@plt+0x6b40>
  40ba30:	mov	w0, #0x0                   	// #0
  40ba34:	b	40ba84 <wcrtomb@plt+0x6d74>
  40ba38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ba3c:	add	x0, x0, #0x7d0
  40ba40:	ldr	x0, [x0]
  40ba44:	ldr	x2, [sp, #24]
  40ba48:	mov	x1, x0
  40ba4c:	ldr	x0, [sp, #16]
  40ba50:	bl	404790 <memcmp@plt>
  40ba54:	cmp	w0, #0x0
  40ba58:	b.eq	40ba80 <wcrtomb@plt+0x6d70>  // b.none
  40ba5c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ba60:	add	x0, x0, #0x838
  40ba64:	bl	404c60 <gettext@plt>
  40ba68:	mov	x1, x0
  40ba6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ba70:	add	x0, x0, #0x90
  40ba74:	bl	40b850 <wcrtomb@plt+0x6b40>
  40ba78:	mov	w0, #0x0                   	// #0
  40ba7c:	b	40ba84 <wcrtomb@plt+0x6d74>
  40ba80:	mov	w0, #0x1                   	// #1
  40ba84:	ldp	x29, x30, [sp], #48
  40ba88:	ret
  40ba8c:	stp	x29, x30, [sp, #-64]!
  40ba90:	mov	x29, sp
  40ba94:	str	x0, [sp, #24]
  40ba98:	str	x1, [sp, #16]
  40ba9c:	ldr	x0, [sp, #24]
  40baa0:	ldr	x0, [x0, #136]
  40baa4:	str	x0, [sp, #48]
  40baa8:	ldr	x0, [sp, #24]
  40baac:	bl	405180 <wcrtomb@plt+0x470>
  40bab0:	b	40bb94 <wcrtomb@plt+0x6e84>
  40bab4:	bl	406030 <wcrtomb@plt+0x1320>
  40bab8:	str	x0, [sp, #40]
  40babc:	ldr	x0, [sp, #40]
  40bac0:	cmp	x0, #0x0
  40bac4:	b.ne	40bb1c <wcrtomb@plt+0x6e0c>  // b.any
  40bac8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bacc:	add	x0, x0, #0x420
  40bad0:	ldr	x0, [x0]
  40bad4:	cmp	x0, #0x0
  40bad8:	b.eq	40baec <wcrtomb@plt+0x6ddc>  // b.none
  40badc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bae0:	add	x0, x0, #0x420
  40bae4:	ldr	x0, [x0]
  40bae8:	blr	x0
  40baec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40baf0:	add	x0, x0, #0x848
  40baf4:	bl	404c60 <gettext@plt>
  40baf8:	mov	x2, x0
  40bafc:	mov	w1, #0x0                   	// #0
  40bb00:	mov	w0, #0x0                   	// #0
  40bb04:	bl	404100 <error@plt>
  40bb08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40bb0c:	add	x0, x0, #0xdb0
  40bb10:	mov	w1, #0x2                   	// #2
  40bb14:	str	w1, [x0]
  40bb18:	b	40bba4 <wcrtomb@plt+0x6e94>
  40bb1c:	ldr	x0, [sp, #40]
  40bb20:	bl	406138 <wcrtomb@plt+0x1428>
  40bb24:	str	x0, [sp, #56]
  40bb28:	ldr	x0, [sp, #48]
  40bb2c:	ldr	x1, [sp, #56]
  40bb30:	cmp	x1, x0
  40bb34:	b.ls	40bb40 <wcrtomb@plt+0x6e30>  // b.plast
  40bb38:	ldr	x0, [sp, #48]
  40bb3c:	str	x0, [sp, #56]
  40bb40:	ldr	x0, [sp, #40]
  40bb44:	ldr	x2, [sp, #16]
  40bb48:	mov	x1, x0
  40bb4c:	ldr	x0, [sp, #56]
  40bb50:	blr	x2
  40bb54:	cmp	w0, #0x0
  40bb58:	b.ne	40bb68 <wcrtomb@plt+0x6e58>  // b.any
  40bb5c:	adrp	x0, 40b000 <wcrtomb@plt+0x62f0>
  40bb60:	add	x0, x0, #0x96c
  40bb64:	str	x0, [sp, #16]
  40bb68:	ldr	x0, [sp, #56]
  40bb6c:	sub	x0, x0, #0x1
  40bb70:	ldr	x1, [sp, #40]
  40bb74:	add	x0, x1, x0
  40bb78:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40bb7c:	ldr	x1, [sp, #48]
  40bb80:	ldr	x0, [sp, #56]
  40bb84:	sub	x0, x1, x0
  40bb88:	str	x0, [sp, #48]
  40bb8c:	ldr	x0, [sp, #48]
  40bb90:	bl	4051ec <wcrtomb@plt+0x4dc>
  40bb94:	ldr	x0, [sp, #48]
  40bb98:	cmp	x0, #0x0
  40bb9c:	b.ne	40bab4 <wcrtomb@plt+0x6da4>  // b.any
  40bba0:	bl	4051bc <wcrtomb@plt+0x4ac>
  40bba4:	ldp	x29, x30, [sp], #64
  40bba8:	ret
  40bbac:	stp	x29, x30, [sp, #-48]!
  40bbb0:	mov	x29, sp
  40bbb4:	str	x0, [sp, #24]
  40bbb8:	str	x1, [sp, #16]
  40bbbc:	ldr	x1, [sp, #16]
  40bbc0:	ldr	x0, [sp, #24]
  40bbc4:	bl	4255c4 <wcrtomb@plt+0x208b4>
  40bbc8:	str	w0, [sp, #44]
  40bbcc:	ldr	w0, [sp, #44]
  40bbd0:	cmp	w0, #0x0
  40bbd4:	b.eq	40bc14 <wcrtomb@plt+0x6f04>  // b.none
  40bbd8:	bl	404bc0 <__errno_location@plt>
  40bbdc:	ldr	w0, [x0]
  40bbe0:	cmp	w0, #0x2
  40bbe4:	b.ne	40bbf4 <wcrtomb@plt+0x6ee4>  // b.any
  40bbe8:	ldr	x0, [sp, #24]
  40bbec:	bl	43abfc <wcrtomb@plt+0x35eec>
  40bbf0:	b	40bbfc <wcrtomb@plt+0x6eec>
  40bbf4:	ldr	x0, [sp, #24]
  40bbf8:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  40bbfc:	mov	x1, #0x0                   	// #0
  40bc00:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bc04:	add	x0, x0, #0x90
  40bc08:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bc0c:	mov	w0, #0x0                   	// #0
  40bc10:	b	40bc18 <wcrtomb@plt+0x6f08>
  40bc14:	mov	w0, #0x1                   	// #1
  40bc18:	ldp	x29, x30, [sp], #48
  40bc1c:	ret
  40bc20:	stp	x29, x30, [sp, #-144]!
  40bc24:	mov	x29, sp
  40bc28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bc2c:	add	x0, x0, #0x90
  40bc30:	ldr	x0, [x0, #8]
  40bc34:	add	x1, sp, #0x10
  40bc38:	bl	40bbac <wcrtomb@plt+0x6e9c>
  40bc3c:	cmp	w0, #0x0
  40bc40:	b.eq	40bcb4 <wcrtomb@plt+0x6fa4>  // b.none
  40bc44:	ldr	w0, [sp, #32]
  40bc48:	and	w0, w0, #0xf000
  40bc4c:	cmp	w0, #0x4, lsl #12
  40bc50:	b.eq	40bc74 <wcrtomb@plt+0x6f64>  // b.none
  40bc54:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40bc58:	add	x0, x0, #0x868
  40bc5c:	bl	404c60 <gettext@plt>
  40bc60:	mov	x1, x0
  40bc64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bc68:	add	x0, x0, #0x90
  40bc6c:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bc70:	b	40bcb8 <wcrtomb@plt+0x6fa8>
  40bc74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bc78:	add	x0, x0, #0x90
  40bc7c:	ldr	w1, [x0, #104]
  40bc80:	ldr	w0, [sp, #32]
  40bc84:	eor	w0, w1, w0
  40bc88:	and	w0, w0, #0xfff
  40bc8c:	cmp	w0, #0x0
  40bc90:	b.eq	40bcb8 <wcrtomb@plt+0x6fa8>  // b.none
  40bc94:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40bc98:	add	x0, x0, #0x880
  40bc9c:	bl	404c60 <gettext@plt>
  40bca0:	mov	x1, x0
  40bca4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bca8:	add	x0, x0, #0x90
  40bcac:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bcb0:	b	40bcb8 <wcrtomb@plt+0x6fa8>
  40bcb4:	nop
  40bcb8:	ldp	x29, x30, [sp], #144
  40bcbc:	ret
  40bcc0:	stp	x29, x30, [sp, #-176]!
  40bcc4:	mov	x29, sp
  40bcc8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bccc:	add	x0, x0, #0x90
  40bcd0:	ldr	x0, [x0, #8]
  40bcd4:	str	x0, [sp, #168]
  40bcd8:	add	x0, sp, #0x20
  40bcdc:	mov	x1, x0
  40bce0:	ldr	x0, [sp, #168]
  40bce4:	bl	40bbac <wcrtomb@plt+0x6e9c>
  40bce8:	cmp	w0, #0x0
  40bcec:	b.ne	40bcf8 <wcrtomb@plt+0x6fe8>  // b.any
  40bcf0:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40bcf4:	b	40bfc4 <wcrtomb@plt+0x72b4>
  40bcf8:	ldr	w0, [sp, #48]
  40bcfc:	and	w0, w0, #0xf000
  40bd00:	cmp	w0, #0x8, lsl #12
  40bd04:	b.eq	40bd2c <wcrtomb@plt+0x701c>  // b.none
  40bd08:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40bd0c:	add	x0, x0, #0x868
  40bd10:	bl	404c60 <gettext@plt>
  40bd14:	mov	x1, x0
  40bd18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bd1c:	add	x0, x0, #0x90
  40bd20:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bd24:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40bd28:	b	40bfc4 <wcrtomb@plt+0x72b4>
  40bd2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bd30:	add	x0, x0, #0x90
  40bd34:	ldr	w1, [x0, #104]
  40bd38:	ldr	w0, [sp, #48]
  40bd3c:	eor	w0, w1, w0
  40bd40:	and	w0, w0, #0xfff
  40bd44:	cmp	w0, #0x0
  40bd48:	b.eq	40bd68 <wcrtomb@plt+0x7058>  // b.none
  40bd4c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40bd50:	add	x0, x0, #0x880
  40bd54:	bl	404c60 <gettext@plt>
  40bd58:	mov	x1, x0
  40bd5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bd60:	add	x0, x0, #0x90
  40bd64:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bd68:	add	x2, sp, #0x20
  40bd6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bd70:	add	x1, x0, #0xe8
  40bd74:	mov	x0, x2
  40bd78:	bl	42dd4c <wcrtomb@plt+0x2903c>
  40bd7c:	and	w0, w0, #0xff
  40bd80:	eor	w0, w0, #0x1
  40bd84:	and	w0, w0, #0xff
  40bd88:	cmp	w0, #0x0
  40bd8c:	b.eq	40bdac <wcrtomb@plt+0x709c>  // b.none
  40bd90:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40bd94:	add	x0, x0, #0x890
  40bd98:	bl	404c60 <gettext@plt>
  40bd9c:	mov	x1, x0
  40bda0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bda4:	add	x0, x0, #0x90
  40bda8:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bdac:	add	x2, sp, #0x20
  40bdb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bdb4:	add	x1, x0, #0xe8
  40bdb8:	mov	x0, x2
  40bdbc:	bl	42dd7c <wcrtomb@plt+0x2906c>
  40bdc0:	and	w0, w0, #0xff
  40bdc4:	eor	w0, w0, #0x1
  40bdc8:	and	w0, w0, #0xff
  40bdcc:	cmp	w0, #0x0
  40bdd0:	b.eq	40bdf0 <wcrtomb@plt+0x70e0>  // b.none
  40bdd4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40bdd8:	add	x0, x0, #0x8a0
  40bddc:	bl	404c60 <gettext@plt>
  40bde0:	mov	x1, x0
  40bde4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bde8:	add	x0, x0, #0x90
  40bdec:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bdf0:	add	x0, sp, #0x20
  40bdf4:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  40bdf8:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bdfc:	add	x2, x2, #0x90
  40be00:	ldp	x2, x3, [x2, #232]
  40be04:	bl	434fa4 <wcrtomb@plt+0x30294>
  40be08:	cmp	w0, #0x0
  40be0c:	b.eq	40be2c <wcrtomb@plt+0x711c>  // b.none
  40be10:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40be14:	add	x0, x0, #0x8b0
  40be18:	bl	404c60 <gettext@plt>
  40be1c:	mov	x1, x0
  40be20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40be24:	add	x0, x0, #0x90
  40be28:	bl	40b850 <wcrtomb@plt+0x6b40>
  40be2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40be30:	add	x0, x0, #0x18
  40be34:	ldr	x0, [x0]
  40be38:	ldrb	w0, [x0, #156]
  40be3c:	cmp	w0, #0x53
  40be40:	b.eq	40be80 <wcrtomb@plt+0x7170>  // b.none
  40be44:	ldr	x1, [sp, #80]
  40be48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40be4c:	add	x0, x0, #0x90
  40be50:	ldr	x0, [x0, #136]
  40be54:	cmp	x1, x0
  40be58:	b.eq	40be80 <wcrtomb@plt+0x7170>  // b.none
  40be5c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40be60:	add	x0, x0, #0x8c8
  40be64:	bl	404c60 <gettext@plt>
  40be68:	mov	x1, x0
  40be6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40be70:	add	x0, x0, #0x90
  40be74:	bl	40b850 <wcrtomb@plt+0x6b40>
  40be78:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40be7c:	b	40bfc4 <wcrtomb@plt+0x72b4>
  40be80:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40be84:	add	x0, x0, #0x8b0
  40be88:	ldr	w3, [x0]
  40be8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40be90:	add	x0, x0, #0x2f4
  40be94:	ldr	w0, [x0]
  40be98:	mov	w2, w0
  40be9c:	ldr	x1, [sp, #168]
  40bea0:	mov	w0, w3
  40bea4:	bl	404b90 <openat@plt>
  40bea8:	mov	w1, w0
  40beac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40beb0:	add	x0, x0, #0x7c8
  40beb4:	str	w1, [x0]
  40beb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40bebc:	add	x0, x0, #0x7c8
  40bec0:	ldr	w0, [x0]
  40bec4:	cmp	w0, #0x0
  40bec8:	b.ge	40beec <wcrtomb@plt+0x71dc>  // b.tcont
  40becc:	ldr	x0, [sp, #168]
  40bed0:	bl	43a618 <wcrtomb@plt+0x35908>
  40bed4:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40bed8:	mov	x1, #0x0                   	// #0
  40bedc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bee0:	add	x0, x0, #0x90
  40bee4:	bl	40b850 <wcrtomb@plt+0x6b40>
  40bee8:	b	40bfc4 <wcrtomb@plt+0x72b4>
  40beec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bef0:	add	x0, x0, #0x90
  40bef4:	ldrb	w0, [x0, #272]
  40bef8:	cmp	w0, #0x0
  40befc:	b.eq	40bf20 <wcrtomb@plt+0x7210>  // b.none
  40bf00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40bf04:	add	x0, x0, #0x7c8
  40bf08:	ldr	w2, [x0]
  40bf0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bf10:	add	x1, x0, #0x90
  40bf14:	mov	w0, w2
  40bf18:	bl	42b9b4 <wcrtomb@plt+0x26ca4>
  40bf1c:	b	40bf34 <wcrtomb@plt+0x7224>
  40bf20:	adrp	x0, 40b000 <wcrtomb@plt+0x62f0>
  40bf24:	add	x1, x0, #0x984
  40bf28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bf2c:	add	x0, x0, #0x90
  40bf30:	bl	40ba8c <wcrtomb@plt+0x6d7c>
  40bf34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bf38:	add	x0, x0, #0x25c
  40bf3c:	ldr	w0, [x0]
  40bf40:	cmp	w0, #0x1
  40bf44:	b.ne	40bf9c <wcrtomb@plt+0x728c>  // b.any
  40bf48:	ldr	x0, [sp, #80]
  40bf4c:	cmp	x0, #0x0
  40bf50:	b.eq	40bf9c <wcrtomb@plt+0x728c>  // b.none
  40bf54:	add	x0, sp, #0x20
  40bf58:	bl	45a9b0 <argp_usage@@Base+0x118c4>
  40bf5c:	stp	x0, x1, [sp, #16]
  40bf60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40bf64:	add	x0, x0, #0x7c8
  40bf68:	ldr	w5, [x0]
  40bf6c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40bf70:	add	x0, x0, #0x8b0
  40bf74:	ldr	w0, [x0]
  40bf78:	ldp	x3, x4, [sp, #16]
  40bf7c:	ldr	x2, [sp, #168]
  40bf80:	mov	w1, w0
  40bf84:	mov	w0, w5
  40bf88:	bl	425798 <wcrtomb@plt+0x20a88>
  40bf8c:	cmp	w0, #0x0
  40bf90:	b.eq	40bf9c <wcrtomb@plt+0x728c>  // b.none
  40bf94:	ldr	x0, [sp, #168]
  40bf98:	bl	43ac9c <wcrtomb@plt+0x35f8c>
  40bf9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40bfa0:	add	x0, x0, #0x7c8
  40bfa4:	ldr	w0, [x0]
  40bfa8:	bl	404660 <close@plt>
  40bfac:	str	w0, [sp, #164]
  40bfb0:	ldr	w0, [sp, #164]
  40bfb4:	cmp	w0, #0x0
  40bfb8:	b.eq	40bfc4 <wcrtomb@plt+0x72b4>  // b.none
  40bfbc:	ldr	x0, [sp, #168]
  40bfc0:	bl	43a490 <wcrtomb@plt+0x35780>
  40bfc4:	nop
  40bfc8:	ldp	x29, x30, [sp], #176
  40bfcc:	ret
  40bfd0:	stp	x29, x30, [sp, #-288]!
  40bfd4:	mov	x29, sp
  40bfd8:	str	x19, [sp, #16]
  40bfdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bfe0:	add	x0, x0, #0x90
  40bfe4:	ldr	x0, [x0, #8]
  40bfe8:	add	x1, sp, #0xa0
  40bfec:	bl	40bbac <wcrtomb@plt+0x6e9c>
  40bff0:	cmp	w0, #0x0
  40bff4:	b.eq	40c070 <wcrtomb@plt+0x7360>  // b.none
  40bff8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40bffc:	add	x0, x0, #0x90
  40c000:	ldr	x0, [x0, #24]
  40c004:	add	x1, sp, #0x20
  40c008:	bl	40bbac <wcrtomb@plt+0x6e9c>
  40c00c:	cmp	w0, #0x0
  40c010:	b.eq	40c070 <wcrtomb@plt+0x7360>  // b.none
  40c014:	add	x1, sp, #0x20
  40c018:	add	x0, sp, #0xa0
  40c01c:	bl	42ddac <wcrtomb@plt+0x2909c>
  40c020:	and	w0, w0, #0xff
  40c024:	eor	w0, w0, #0x1
  40c028:	and	w0, w0, #0xff
  40c02c:	cmp	w0, #0x0
  40c030:	b.eq	40c070 <wcrtomb@plt+0x7360>  // b.none
  40c034:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c038:	add	x0, x0, #0x8d8
  40c03c:	bl	404c60 <gettext@plt>
  40c040:	mov	x19, x0
  40c044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c048:	add	x0, x0, #0x90
  40c04c:	ldr	x0, [x0, #24]
  40c050:	mov	x1, x0
  40c054:	mov	w0, #0x0                   	// #0
  40c058:	bl	423cdc <wcrtomb@plt+0x1efcc>
  40c05c:	mov	x2, x0
  40c060:	mov	x1, x19
  40c064:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c068:	add	x0, x0, #0x90
  40c06c:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c070:	nop
  40c074:	ldr	x19, [sp, #16]
  40c078:	ldp	x29, x30, [sp], #288
  40c07c:	ret
  40c080:	sub	sp, sp, #0x430
  40c084:	stp	x29, x30, [sp]
  40c088:	mov	x29, sp
  40c08c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c090:	add	x0, x0, #0x90
  40c094:	ldr	x0, [x0, #24]
  40c098:	bl	4040b0 <strlen@plt>
  40c09c:	str	x0, [sp, #1064]
  40c0a0:	ldr	x0, [sp, #1064]
  40c0a4:	cmp	x0, #0x3ff
  40c0a8:	b.hi	40c0b4 <wcrtomb@plt+0x73a4>  // b.pmore
  40c0ac:	add	x0, sp, #0x18
  40c0b0:	b	40c0c0 <wcrtomb@plt+0x73b0>
  40c0b4:	ldr	x0, [sp, #1064]
  40c0b8:	add	x0, x0, #0x1
  40c0bc:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  40c0c0:	str	x0, [sp, #1056]
  40c0c4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40c0c8:	add	x0, x0, #0x8b0
  40c0cc:	ldr	w4, [x0]
  40c0d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c0d4:	add	x0, x0, #0x90
  40c0d8:	ldr	x1, [x0, #8]
  40c0dc:	ldr	x0, [sp, #1064]
  40c0e0:	add	x0, x0, #0x1
  40c0e4:	mov	x3, x0
  40c0e8:	ldr	x2, [sp, #1056]
  40c0ec:	mov	w0, w4
  40c0f0:	bl	404d00 <readlinkat@plt>
  40c0f4:	str	x0, [sp, #1048]
  40c0f8:	ldr	x0, [sp, #1048]
  40c0fc:	cmp	x0, #0x0
  40c100:	b.ge	40c14c <wcrtomb@plt+0x743c>  // b.tcont
  40c104:	bl	404bc0 <__errno_location@plt>
  40c108:	ldr	w0, [x0]
  40c10c:	cmp	w0, #0x2
  40c110:	b.ne	40c128 <wcrtomb@plt+0x7418>  // b.any
  40c114:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c118:	add	x0, x0, #0x90
  40c11c:	ldr	x0, [x0, #8]
  40c120:	bl	43a8ec <wcrtomb@plt+0x35bdc>
  40c124:	b	40c138 <wcrtomb@plt+0x7428>
  40c128:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c12c:	add	x0, x0, #0x90
  40c130:	ldr	x0, [x0, #8]
  40c134:	bl	43a8c4 <wcrtomb@plt+0x35bb4>
  40c138:	mov	x1, #0x0                   	// #0
  40c13c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c140:	add	x0, x0, #0x90
  40c144:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c148:	b	40c198 <wcrtomb@plt+0x7488>
  40c14c:	ldr	x0, [sp, #1064]
  40c150:	ldr	x1, [sp, #1048]
  40c154:	cmp	x1, x0
  40c158:	b.ne	40c17c <wcrtomb@plt+0x746c>  // b.any
  40c15c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c160:	add	x0, x0, #0x90
  40c164:	ldr	x0, [x0, #24]
  40c168:	ldr	x2, [sp, #1064]
  40c16c:	ldr	x1, [sp, #1056]
  40c170:	bl	404790 <memcmp@plt>
  40c174:	cmp	w0, #0x0
  40c178:	b.eq	40c198 <wcrtomb@plt+0x7488>  // b.none
  40c17c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c180:	add	x0, x0, #0x8f0
  40c184:	bl	404c60 <gettext@plt>
  40c188:	mov	x1, x0
  40c18c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c190:	add	x0, x0, #0x90
  40c194:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c198:	add	x0, sp, #0x18
  40c19c:	ldr	x1, [sp, #1056]
  40c1a0:	cmp	x1, x0
  40c1a4:	b.eq	40c1b0 <wcrtomb@plt+0x74a0>  // b.none
  40c1a8:	ldr	x0, [sp, #1056]
  40c1ac:	bl	404880 <free@plt>
  40c1b0:	nop
  40c1b4:	ldp	x29, x30, [sp]
  40c1b8:	add	sp, sp, #0x430
  40c1bc:	ret
  40c1c0:	stp	x29, x30, [sp, #-144]!
  40c1c4:	mov	x29, sp
  40c1c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c1cc:	add	x0, x0, #0x90
  40c1d0:	ldr	x0, [x0, #8]
  40c1d4:	add	x1, sp, #0x10
  40c1d8:	bl	40bbac <wcrtomb@plt+0x6e9c>
  40c1dc:	cmp	w0, #0x0
  40c1e0:	b.eq	40c328 <wcrtomb@plt+0x7618>  // b.none
  40c1e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c1e8:	add	x0, x0, #0x18
  40c1ec:	ldr	x0, [x0]
  40c1f0:	ldrb	w0, [x0, #156]
  40c1f4:	cmp	w0, #0x33
  40c1f8:	b.ne	40c214 <wcrtomb@plt+0x7504>  // b.any
  40c1fc:	ldr	w0, [sp, #32]
  40c200:	and	w0, w0, #0xf000
  40c204:	cmp	w0, #0x2, lsl #12
  40c208:	cset	w0, ne  // ne = any
  40c20c:	and	w0, w0, #0xff
  40c210:	b	40c258 <wcrtomb@plt+0x7548>
  40c214:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c218:	add	x0, x0, #0x18
  40c21c:	ldr	x0, [x0]
  40c220:	ldrb	w0, [x0, #156]
  40c224:	cmp	w0, #0x34
  40c228:	b.ne	40c244 <wcrtomb@plt+0x7534>  // b.any
  40c22c:	ldr	w0, [sp, #32]
  40c230:	and	w0, w0, #0xf000
  40c234:	cmp	w0, #0x6, lsl #12
  40c238:	cset	w0, ne  // ne = any
  40c23c:	and	w0, w0, #0xff
  40c240:	b	40c258 <wcrtomb@plt+0x7548>
  40c244:	ldr	w0, [sp, #32]
  40c248:	and	w0, w0, #0xf000
  40c24c:	cmp	w0, #0x1, lsl #12
  40c250:	cset	w0, ne  // ne = any
  40c254:	and	w0, w0, #0xff
  40c258:	cmp	w0, #0x0
  40c25c:	b.eq	40c280 <wcrtomb@plt+0x7570>  // b.none
  40c260:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c264:	add	x0, x0, #0x868
  40c268:	bl	404c60 <gettext@plt>
  40c26c:	mov	x1, x0
  40c270:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c274:	add	x0, x0, #0x90
  40c278:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c27c:	b	40c32c <wcrtomb@plt+0x761c>
  40c280:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c284:	add	x0, x0, #0x18
  40c288:	ldr	x0, [x0]
  40c28c:	ldrb	w0, [x0, #156]
  40c290:	cmp	w0, #0x33
  40c294:	b.eq	40c2b0 <wcrtomb@plt+0x75a0>  // b.none
  40c298:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c29c:	add	x0, x0, #0x18
  40c2a0:	ldr	x0, [x0]
  40c2a4:	ldrb	w0, [x0, #156]
  40c2a8:	cmp	w0, #0x34
  40c2ac:	b.ne	40c2e8 <wcrtomb@plt+0x75d8>  // b.any
  40c2b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c2b4:	add	x0, x0, #0x90
  40c2b8:	ldr	x1, [x0, #120]
  40c2bc:	ldr	x0, [sp, #48]
  40c2c0:	cmp	x1, x0
  40c2c4:	b.eq	40c2e8 <wcrtomb@plt+0x75d8>  // b.none
  40c2c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c2cc:	add	x0, x0, #0x900
  40c2d0:	bl	404c60 <gettext@plt>
  40c2d4:	mov	x1, x0
  40c2d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c2dc:	add	x0, x0, #0x90
  40c2e0:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c2e4:	b	40c32c <wcrtomb@plt+0x761c>
  40c2e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c2ec:	add	x0, x0, #0x90
  40c2f0:	ldr	w1, [x0, #104]
  40c2f4:	ldr	w0, [sp, #32]
  40c2f8:	eor	w0, w1, w0
  40c2fc:	and	w0, w0, #0xfff
  40c300:	cmp	w0, #0x0
  40c304:	b.eq	40c32c <wcrtomb@plt+0x761c>  // b.none
  40c308:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c30c:	add	x0, x0, #0x880
  40c310:	bl	404c60 <gettext@plt>
  40c314:	mov	x1, x0
  40c318:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c31c:	add	x0, x0, #0x90
  40c320:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c324:	b	40c32c <wcrtomb@plt+0x761c>
  40c328:	nop
  40c32c:	ldp	x29, x30, [sp], #144
  40c330:	ret
  40c334:	stp	x29, x30, [sp, #-48]!
  40c338:	mov	x29, sp
  40c33c:	str	x0, [sp, #24]
  40c340:	str	x1, [sp, #16]
  40c344:	b	40c4b0 <wcrtomb@plt+0x77a0>
  40c348:	ldr	x0, [sp, #24]
  40c34c:	ldrb	w0, [x0]
  40c350:	sub	w0, w0, #0x44
  40c354:	cmp	w0, #0x15
  40c358:	cset	w1, hi  // hi = pmore
  40c35c:	and	w1, w1, #0xff
  40c360:	cmp	w1, #0x0
  40c364:	b.ne	40c4b0 <wcrtomb@plt+0x77a0>  // b.any
  40c368:	mov	x1, #0x1                   	// #1
  40c36c:	lsl	x0, x1, x0
  40c370:	mov	x1, #0x4000                	// #16384
  40c374:	movk	x1, #0x11, lsl #16
  40c378:	and	x1, x0, x1
  40c37c:	cmp	x1, #0x0
  40c380:	cset	w1, ne  // ne = any
  40c384:	and	w1, w1, #0xff
  40c388:	cmp	w1, #0x0
  40c38c:	b.ne	40c4a4 <wcrtomb@plt+0x7794>  // b.any
  40c390:	mov	x1, #0x400                 	// #1024
  40c394:	movk	x1, #0x20, lsl #16
  40c398:	and	x1, x0, x1
  40c39c:	cmp	x1, #0x0
  40c3a0:	cset	w1, ne  // ne = any
  40c3a4:	and	w1, w1, #0xff
  40c3a8:	cmp	w1, #0x0
  40c3ac:	b.ne	40c3cc <wcrtomb@plt+0x76bc>  // b.any
  40c3b0:	and	x0, x0, #0x1
  40c3b4:	cmp	x0, #0x0
  40c3b8:	cset	w0, ne  // ne = any
  40c3bc:	and	w0, w0, #0xff
  40c3c0:	cmp	w0, #0x0
  40c3c4:	b.ne	40c454 <wcrtomb@plt+0x7744>  // b.any
  40c3c8:	b	40c4b0 <wcrtomb@plt+0x77a0>
  40c3cc:	ldr	x0, [sp, #16]
  40c3d0:	ldrb	w0, [x0]
  40c3d4:	mov	w1, w0
  40c3d8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c3dc:	add	x0, x0, #0x918
  40c3e0:	bl	404930 <strchr@plt>
  40c3e4:	cmp	x0, #0x0
  40c3e8:	b.ne	40c3f4 <wcrtomb@plt+0x76e4>  // b.any
  40c3ec:	mov	w0, #0x1                   	// #1
  40c3f0:	b	40c4c8 <wcrtomb@plt+0x77b8>
  40c3f4:	ldr	x0, [sp, #24]
  40c3f8:	add	x2, x0, #0x1
  40c3fc:	ldr	x0, [sp, #16]
  40c400:	add	x0, x0, #0x1
  40c404:	mov	x1, x0
  40c408:	mov	x0, x2
  40c40c:	bl	4047c0 <strcmp@plt>
  40c410:	cmp	w0, #0x0
  40c414:	b.eq	40c420 <wcrtomb@plt+0x7710>  // b.none
  40c418:	mov	w0, #0x1                   	// #1
  40c41c:	b	40c4c8 <wcrtomb@plt+0x77b8>
  40c420:	ldr	x0, [sp, #24]
  40c424:	bl	4040b0 <strlen@plt>
  40c428:	add	x0, x0, #0x1
  40c42c:	str	x0, [sp, #40]
  40c430:	ldr	x1, [sp, #24]
  40c434:	ldr	x0, [sp, #40]
  40c438:	add	x0, x1, x0
  40c43c:	str	x0, [sp, #24]
  40c440:	ldr	x1, [sp, #16]
  40c444:	ldr	x0, [sp, #40]
  40c448:	add	x0, x1, x0
  40c44c:	str	x0, [sp, #16]
  40c450:	b	40c4b0 <wcrtomb@plt+0x77a0>
  40c454:	ldr	x1, [sp, #16]
  40c458:	ldr	x0, [sp, #24]
  40c45c:	bl	4047c0 <strcmp@plt>
  40c460:	cmp	w0, #0x0
  40c464:	b.eq	40c470 <wcrtomb@plt+0x7760>  // b.none
  40c468:	mov	w0, #0x1                   	// #1
  40c46c:	b	40c4c8 <wcrtomb@plt+0x77b8>
  40c470:	ldr	x0, [sp, #24]
  40c474:	bl	4040b0 <strlen@plt>
  40c478:	add	x0, x0, #0x1
  40c47c:	str	x0, [sp, #40]
  40c480:	ldr	x1, [sp, #24]
  40c484:	ldr	x0, [sp, #40]
  40c488:	add	x0, x1, x0
  40c48c:	str	x0, [sp, #24]
  40c490:	ldr	x1, [sp, #16]
  40c494:	ldr	x0, [sp, #40]
  40c498:	add	x0, x1, x0
  40c49c:	str	x0, [sp, #16]
  40c4a0:	b	40c4b0 <wcrtomb@plt+0x77a0>
  40c4a4:	ldr	x0, [sp, #16]
  40c4a8:	ldrb	w0, [x0]
  40c4ac:	b	40c4c8 <wcrtomb@plt+0x77b8>
  40c4b0:	ldr	x0, [sp, #24]
  40c4b4:	ldrb	w0, [x0]
  40c4b8:	cmp	w0, #0x0
  40c4bc:	b.ne	40c348 <wcrtomb@plt+0x7638>  // b.any
  40c4c0:	ldr	x0, [sp, #16]
  40c4c4:	ldrb	w0, [x0]
  40c4c8:	ldp	x29, x30, [sp], #48
  40c4cc:	ret
  40c4d0:	stp	x29, x30, [sp, #-64]!
  40c4d4:	mov	x29, sp
  40c4d8:	str	x0, [sp, #24]
  40c4dc:	ldr	x0, [sp, #24]
  40c4e0:	ldr	w0, [x0, #408]
  40c4e4:	cmp	w0, #0x0
  40c4e8:	b.ne	40c59c <wcrtomb@plt+0x788c>  // b.any
  40c4ec:	str	xzr, [sp, #56]
  40c4f0:	ldr	x0, [sp, #24]
  40c4f4:	ldr	x3, [x0, #392]
  40c4f8:	ldr	x0, [sp, #24]
  40c4fc:	ldr	x1, [x0]
  40c500:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c504:	add	x0, x0, #0x2f4
  40c508:	ldr	w0, [x0]
  40c50c:	mov	w2, w0
  40c510:	mov	x0, x3
  40c514:	bl	410a0c <wcrtomb@plt+0xbcfc>
  40c518:	str	w0, [sp, #52]
  40c51c:	ldr	w0, [sp, #52]
  40c520:	cmp	w0, #0x0
  40c524:	b.ge	40c538 <wcrtomb@plt+0x7828>  // b.tcont
  40c528:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  40c52c:	add	x0, x0, #0xf04
  40c530:	str	x0, [sp, #56]
  40c534:	b	40c578 <wcrtomb@plt+0x7868>
  40c538:	ldr	x0, [sp, #24]
  40c53c:	add	x0, x0, #0x58
  40c540:	mov	x1, x0
  40c544:	ldr	w0, [sp, #52]
  40c548:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  40c54c:	cmp	w0, #0x0
  40c550:	b.eq	40c56c <wcrtomb@plt+0x785c>  // b.none
  40c554:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  40c558:	add	x0, x0, #0xe0
  40c55c:	str	x0, [sp, #56]
  40c560:	ldr	w0, [sp, #52]
  40c564:	bl	404660 <close@plt>
  40c568:	b	40c578 <wcrtomb@plt+0x7868>
  40c56c:	ldr	x0, [sp, #24]
  40c570:	ldr	w1, [sp, #52]
  40c574:	str	w1, [x0, #408]
  40c578:	ldr	x0, [sp, #56]
  40c57c:	cmp	x0, #0x0
  40c580:	b.eq	40c59c <wcrtomb@plt+0x788c>  // b.none
  40c584:	ldr	x0, [sp, #24]
  40c588:	ldr	x0, [x0]
  40c58c:	ldr	x2, [sp, #56]
  40c590:	mov	w1, #0x0                   	// #0
  40c594:	bl	426138 <wcrtomb@plt+0x21428>
  40c598:	b	40c5fc <wcrtomb@plt+0x78ec>
  40c59c:	ldr	x0, [sp, #24]
  40c5a0:	bl	41cb88 <wcrtomb@plt+0x17e78>
  40c5a4:	bl	41cfd8 <wcrtomb@plt+0x182c8>
  40c5a8:	str	x0, [sp, #40]
  40c5ac:	ldr	x0, [sp, #40]
  40c5b0:	cmp	x0, #0x0
  40c5b4:	b.eq	40c5ec <wcrtomb@plt+0x78dc>  // b.none
  40c5b8:	ldr	x0, [sp, #24]
  40c5bc:	ldr	x0, [x0, #384]
  40c5c0:	ldr	x1, [sp, #40]
  40c5c4:	bl	40c334 <wcrtomb@plt+0x7624>
  40c5c8:	cmp	w0, #0x0
  40c5cc:	b.eq	40c5fc <wcrtomb@plt+0x78ec>  // b.none
  40c5d0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c5d4:	add	x0, x0, #0x838
  40c5d8:	bl	404c60 <gettext@plt>
  40c5dc:	mov	x1, x0
  40c5e0:	ldr	x0, [sp, #24]
  40c5e4:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c5e8:	b	40c5fc <wcrtomb@plt+0x78ec>
  40c5ec:	adrp	x0, 40b000 <wcrtomb@plt+0x62f0>
  40c5f0:	add	x1, x0, #0x96c
  40c5f4:	ldr	x0, [sp, #24]
  40c5f8:	bl	40ba8c <wcrtomb@plt+0x6d7c>
  40c5fc:	ldp	x29, x30, [sp], #64
  40c600:	ret
  40c604:	stp	x29, x30, [sp, #-160]!
  40c608:	mov	x29, sp
  40c60c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c610:	add	x0, x0, #0x90
  40c614:	ldrb	w0, [x0, #16]
  40c618:	cmp	w0, #0x0
  40c61c:	b.eq	40c628 <wcrtomb@plt+0x7918>  // b.none
  40c620:	bl	40bc20 <wcrtomb@plt+0x6f10>
  40c624:	b	40c804 <wcrtomb@plt+0x7af4>
  40c628:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c62c:	add	x0, x0, #0x90
  40c630:	ldr	x0, [x0, #8]
  40c634:	add	x1, sp, #0x10
  40c638:	bl	40bbac <wcrtomb@plt+0x6e9c>
  40c63c:	cmp	w0, #0x0
  40c640:	b.eq	40c800 <wcrtomb@plt+0x7af0>  // b.none
  40c644:	ldr	w0, [sp, #32]
  40c648:	and	w0, w0, #0xf000
  40c64c:	cmp	w0, #0x8, lsl #12
  40c650:	b.eq	40c678 <wcrtomb@plt+0x7968>  // b.none
  40c654:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c658:	add	x0, x0, #0x868
  40c65c:	bl	404c60 <gettext@plt>
  40c660:	mov	x1, x0
  40c664:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c668:	add	x0, x0, #0x90
  40c66c:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c670:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40c674:	b	40c804 <wcrtomb@plt+0x7af4>
  40c678:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c67c:	add	x0, x0, #0x18
  40c680:	ldr	x0, [x0]
  40c684:	add	x0, x0, #0x171
  40c688:	mov	x1, #0xc                   	// #12
  40c68c:	bl	422220 <wcrtomb@plt+0x1d510>
  40c690:	str	x0, [sp, #152]
  40c694:	ldr	x0, [sp, #152]
  40c698:	cmp	x0, #0x0
  40c69c:	b.lt	40c6f4 <wcrtomb@plt+0x79e4>  // b.tstop
  40c6a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c6a4:	add	x0, x0, #0x90
  40c6a8:	ldr	x1, [x0, #136]
  40c6ac:	mov	x2, #0x0                   	// #0
  40c6b0:	ldr	x0, [sp, #152]
  40c6b4:	adds	x0, x1, x0
  40c6b8:	b.vc	40c6c0 <wcrtomb@plt+0x79b0>
  40c6bc:	mov	x2, #0x1                   	// #1
  40c6c0:	mov	x0, x2
  40c6c4:	and	w0, w0, #0x1
  40c6c8:	and	w0, w0, #0xff
  40c6cc:	cmp	w0, #0x0
  40c6d0:	b.ne	40c6f4 <wcrtomb@plt+0x79e4>  // b.any
  40c6d4:	ldr	x1, [sp, #64]
  40c6d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c6dc:	add	x0, x0, #0x90
  40c6e0:	ldr	x2, [x0, #136]
  40c6e4:	ldr	x0, [sp, #152]
  40c6e8:	add	x0, x2, x0
  40c6ec:	cmp	x1, x0
  40c6f0:	b.eq	40c718 <wcrtomb@plt+0x7a08>  // b.none
  40c6f4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c6f8:	add	x0, x0, #0x8c8
  40c6fc:	bl	404c60 <gettext@plt>
  40c700:	mov	x1, x0
  40c704:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c708:	add	x0, x0, #0x90
  40c70c:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c710:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40c714:	b	40c804 <wcrtomb@plt+0x7af4>
  40c718:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  40c71c:	add	x0, x0, #0x8b0
  40c720:	ldr	w3, [x0]
  40c724:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c728:	add	x0, x0, #0x90
  40c72c:	ldr	x1, [x0, #8]
  40c730:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c734:	add	x0, x0, #0x2f4
  40c738:	ldr	w0, [x0]
  40c73c:	mov	w2, w0
  40c740:	mov	w0, w3
  40c744:	bl	404b90 <openat@plt>
  40c748:	str	w0, [sp, #148]
  40c74c:	ldr	w0, [sp, #148]
  40c750:	cmp	w0, #0x0
  40c754:	b.ge	40c780 <wcrtomb@plt+0x7a70>  // b.tcont
  40c758:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c75c:	add	x0, x0, #0x90
  40c760:	ldr	x0, [x0, #8]
  40c764:	bl	43a618 <wcrtomb@plt+0x35908>
  40c768:	mov	x1, #0x0                   	// #0
  40c76c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c770:	add	x0, x0, #0x90
  40c774:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c778:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  40c77c:	b	40c804 <wcrtomb@plt+0x7af4>
  40c780:	mov	w2, #0x0                   	// #0
  40c784:	ldr	x1, [sp, #152]
  40c788:	ldr	w0, [sp, #148]
  40c78c:	bl	4042b0 <lseek@plt>
  40c790:	cmp	x0, #0x0
  40c794:	b.ge	40c7c0 <wcrtomb@plt+0x7ab0>  // b.tcont
  40c798:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c79c:	add	x0, x0, #0x90
  40c7a0:	ldr	x0, [x0, #8]
  40c7a4:	ldr	x1, [sp, #152]
  40c7a8:	bl	43a9b4 <wcrtomb@plt+0x35ca4>
  40c7ac:	mov	x1, #0x0                   	// #0
  40c7b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c7b4:	add	x0, x0, #0x90
  40c7b8:	bl	40b850 <wcrtomb@plt+0x6b40>
  40c7bc:	b	40c7d4 <wcrtomb@plt+0x7ac4>
  40c7c0:	adrp	x0, 40b000 <wcrtomb@plt+0x62f0>
  40c7c4:	add	x1, x0, #0x984
  40c7c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c7cc:	add	x0, x0, #0x90
  40c7d0:	bl	40ba8c <wcrtomb@plt+0x6d7c>
  40c7d4:	ldr	w0, [sp, #148]
  40c7d8:	bl	404660 <close@plt>
  40c7dc:	str	w0, [sp, #144]
  40c7e0:	ldr	w0, [sp, #144]
  40c7e4:	cmp	w0, #0x0
  40c7e8:	b.eq	40c804 <wcrtomb@plt+0x7af4>  // b.none
  40c7ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c7f0:	add	x0, x0, #0x90
  40c7f4:	ldr	x0, [x0, #8]
  40c7f8:	bl	43a490 <wcrtomb@plt+0x35780>
  40c7fc:	b	40c804 <wcrtomb@plt+0x7af4>
  40c800:	nop
  40c804:	ldp	x29, x30, [sp], #160
  40c808:	ret
  40c80c:	stp	x29, x30, [sp, #-32]!
  40c810:	mov	x29, sp
  40c814:	str	x19, [sp, #16]
  40c818:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c81c:	add	x0, x0, #0x18
  40c820:	ldr	x0, [x0]
  40c824:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40c828:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c82c:	add	x0, x0, #0x2b4
  40c830:	ldr	w0, [x0]
  40c834:	cmp	w0, #0x0
  40c838:	b.eq	40c894 <wcrtomb@plt+0x7b84>  // b.none
  40c83c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40c840:	add	x0, x0, #0xfe8
  40c844:	ldrb	w0, [x0]
  40c848:	cmp	w0, #0x0
  40c84c:	b.eq	40c874 <wcrtomb@plt+0x7b64>  // b.none
  40c850:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40c854:	add	x0, x0, #0xf88
  40c858:	ldr	x19, [x0]
  40c85c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c860:	add	x0, x0, #0x920
  40c864:	bl	404c60 <gettext@plt>
  40c868:	mov	x1, x0
  40c86c:	mov	x0, x19
  40c870:	bl	404c90 <fprintf@plt>
  40c874:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c878:	add	x0, x0, #0x18
  40c87c:	ldr	x0, [x0]
  40c880:	mov	x2, #0xffffffffffffffff    	// #-1
  40c884:	mov	x1, x0
  40c888:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c88c:	add	x0, x0, #0x90
  40c890:	bl	422f1c <wcrtomb@plt+0x1e20c>
  40c894:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c898:	add	x0, x0, #0x18
  40c89c:	ldr	x0, [x0]
  40c8a0:	ldrb	w0, [x0, #156]
  40c8a4:	cmp	w0, #0x56
  40c8a8:	b.eq	40ca44 <wcrtomb@plt+0x7d34>  // b.none
  40c8ac:	cmp	w0, #0x56
  40c8b0:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c8b4:	cmp	w0, #0x53
  40c8b8:	b.eq	40c9d4 <wcrtomb@plt+0x7cc4>  // b.none
  40c8bc:	cmp	w0, #0x53
  40c8c0:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c8c4:	cmp	w0, #0x4d
  40c8c8:	b.eq	40ca3c <wcrtomb@plt+0x7d2c>  // b.none
  40c8cc:	cmp	w0, #0x4d
  40c8d0:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c8d4:	cmp	w0, #0x44
  40c8d8:	b.eq	40ca10 <wcrtomb@plt+0x7d00>  // b.none
  40c8dc:	cmp	w0, #0x44
  40c8e0:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c8e4:	cmp	w0, #0x37
  40c8e8:	b.eq	40c9d4 <wcrtomb@plt+0x7cc4>  // b.none
  40c8ec:	cmp	w0, #0x37
  40c8f0:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c8f4:	cmp	w0, #0x36
  40c8f8:	b.eq	40ca08 <wcrtomb@plt+0x7cf8>  // b.none
  40c8fc:	cmp	w0, #0x36
  40c900:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c904:	cmp	w0, #0x35
  40c908:	b.eq	40ca10 <wcrtomb@plt+0x7d00>  // b.none
  40c90c:	cmp	w0, #0x35
  40c910:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c914:	cmp	w0, #0x34
  40c918:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c91c:	cmp	w0, #0x33
  40c920:	b.ge	40ca08 <wcrtomb@plt+0x7cf8>  // b.tcont
  40c924:	cmp	w0, #0x32
  40c928:	b.eq	40ca00 <wcrtomb@plt+0x7cf0>  // b.none
  40c92c:	cmp	w0, #0x32
  40c930:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c934:	cmp	w0, #0x31
  40c938:	b.eq	40c9f8 <wcrtomb@plt+0x7ce8>  // b.none
  40c93c:	cmp	w0, #0x31
  40c940:	b.gt	40c954 <wcrtomb@plt+0x7c44>
  40c944:	cmp	w0, #0x0
  40c948:	b.eq	40c9d4 <wcrtomb@plt+0x7cc4>  // b.none
  40c94c:	cmp	w0, #0x30
  40c950:	b.eq	40c9d4 <wcrtomb@plt+0x7cc4>  // b.none
  40c954:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c958:	add	x0, x0, #0x420
  40c95c:	ldr	x0, [x0]
  40c960:	cmp	x0, #0x0
  40c964:	b.eq	40c978 <wcrtomb@plt+0x7c68>  // b.none
  40c968:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c96c:	add	x0, x0, #0x420
  40c970:	ldr	x0, [x0]
  40c974:	blr	x0
  40c978:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40c97c:	add	x0, x0, #0x928
  40c980:	bl	404c60 <gettext@plt>
  40c984:	mov	x19, x0
  40c988:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c98c:	add	x0, x0, #0x90
  40c990:	ldr	x0, [x0, #8]
  40c994:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40c998:	mov	x1, x0
  40c99c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c9a0:	add	x0, x0, #0x18
  40c9a4:	ldr	x0, [x0]
  40c9a8:	ldrb	w0, [x0, #156]
  40c9ac:	mov	w4, w0
  40c9b0:	mov	x3, x1
  40c9b4:	mov	x2, x19
  40c9b8:	mov	w1, #0x0                   	// #0
  40c9bc:	mov	w0, #0x0                   	// #0
  40c9c0:	bl	404100 <error@plt>
  40c9c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40c9c8:	add	x0, x0, #0xdb0
  40c9cc:	mov	w1, #0x2                   	// #2
  40c9d0:	str	w1, [x0]
  40c9d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40c9d8:	add	x0, x0, #0x90
  40c9dc:	ldrb	w0, [x0, #16]
  40c9e0:	cmp	w0, #0x0
  40c9e4:	b.eq	40c9f0 <wcrtomb@plt+0x7ce0>  // b.none
  40c9e8:	bl	40bc20 <wcrtomb@plt+0x6f10>
  40c9ec:	b	40ca48 <wcrtomb@plt+0x7d38>
  40c9f0:	bl	40bcc0 <wcrtomb@plt+0x6fb0>
  40c9f4:	b	40ca48 <wcrtomb@plt+0x7d38>
  40c9f8:	bl	40bfd0 <wcrtomb@plt+0x72c0>
  40c9fc:	b	40ca48 <wcrtomb@plt+0x7d38>
  40ca00:	bl	40c080 <wcrtomb@plt+0x7370>
  40ca04:	b	40ca48 <wcrtomb@plt+0x7d38>
  40ca08:	bl	40c1c0 <wcrtomb@plt+0x74b0>
  40ca0c:	b	40ca48 <wcrtomb@plt+0x7d38>
  40ca10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ca14:	add	x0, x0, #0x90
  40ca18:	bl	41f310 <wcrtomb@plt+0x1a600>
  40ca1c:	and	w0, w0, #0xff
  40ca20:	cmp	w0, #0x0
  40ca24:	b.eq	40ca34 <wcrtomb@plt+0x7d24>  // b.none
  40ca28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ca2c:	add	x0, x0, #0x90
  40ca30:	bl	40c4d0 <wcrtomb@plt+0x77c0>
  40ca34:	bl	40bc20 <wcrtomb@plt+0x6f10>
  40ca38:	b	40ca48 <wcrtomb@plt+0x7d38>
  40ca3c:	bl	40c604 <wcrtomb@plt+0x78f4>
  40ca40:	b	40ca48 <wcrtomb@plt+0x7d38>
  40ca44:	nop
  40ca48:	nop
  40ca4c:	ldr	x19, [sp, #16]
  40ca50:	ldp	x29, x30, [sp], #32
  40ca54:	ret
  40ca58:	stp	x29, x30, [sp, #-80]!
  40ca5c:	mov	x29, sp
  40ca60:	str	x19, [sp, #16]
  40ca64:	str	wzr, [sp, #76]
  40ca68:	bl	43af44 <wcrtomb@plt+0x36234>
  40ca6c:	and	w0, w0, #0xff
  40ca70:	cmp	w0, #0x0
  40ca74:	b.eq	40cac0 <wcrtomb@plt+0x7db0>  // b.none
  40ca78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ca7c:	add	x0, x0, #0x420
  40ca80:	ldr	x0, [x0]
  40ca84:	cmp	x0, #0x0
  40ca88:	b.eq	40ca9c <wcrtomb@plt+0x7d8c>  // b.none
  40ca8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ca90:	add	x0, x0, #0x420
  40ca94:	ldr	x0, [x0]
  40ca98:	blr	x0
  40ca9c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40caa0:	add	x0, x0, #0x960
  40caa4:	bl	404c60 <gettext@plt>
  40caa8:	mov	x2, x0
  40caac:	mov	w1, #0x0                   	// #0
  40cab0:	mov	w0, #0x0                   	// #0
  40cab4:	bl	404100 <error@plt>
  40cab8:	mov	w0, #0x1                   	// #1
  40cabc:	str	w0, [sp, #76]
  40cac0:	bl	436a6c <wcrtomb@plt+0x31d5c>
  40cac4:	and	w0, w0, #0xff
  40cac8:	cmp	w0, #0x0
  40cacc:	b.eq	40cb18 <wcrtomb@plt+0x7e08>  // b.none
  40cad0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cad4:	add	x0, x0, #0x420
  40cad8:	ldr	x0, [x0]
  40cadc:	cmp	x0, #0x0
  40cae0:	b.eq	40caf4 <wcrtomb@plt+0x7de4>  // b.none
  40cae4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cae8:	add	x0, x0, #0x420
  40caec:	ldr	x0, [x0]
  40caf0:	blr	x0
  40caf4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40caf8:	add	x0, x0, #0x9a0
  40cafc:	bl	404c60 <gettext@plt>
  40cb00:	mov	x2, x0
  40cb04:	mov	w1, #0x0                   	// #0
  40cb08:	mov	w0, #0x0                   	// #0
  40cb0c:	bl	404100 <error@plt>
  40cb10:	mov	w0, #0x1                   	// #1
  40cb14:	str	w0, [sp, #76]
  40cb18:	ldr	w0, [sp, #76]
  40cb1c:	cmp	w0, #0x0
  40cb20:	b.eq	40cb64 <wcrtomb@plt+0x7e54>  // b.none
  40cb24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cb28:	add	x0, x0, #0x420
  40cb2c:	ldr	x0, [x0]
  40cb30:	cmp	x0, #0x0
  40cb34:	b.eq	40cb48 <wcrtomb@plt+0x7e38>  // b.none
  40cb38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cb3c:	add	x0, x0, #0x420
  40cb40:	ldr	x0, [x0]
  40cb44:	blr	x0
  40cb48:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40cb4c:	add	x0, x0, #0x9d0
  40cb50:	bl	404c60 <gettext@plt>
  40cb54:	mov	x2, x0
  40cb58:	mov	w1, #0x0                   	// #0
  40cb5c:	mov	w0, #0x0                   	// #0
  40cb60:	bl	404100 <error@plt>
  40cb64:	bl	41bc08 <wcrtomb@plt+0x16ef8>
  40cb68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40cb6c:	add	x0, x0, #0x7d0
  40cb70:	ldr	x0, [x0]
  40cb74:	cmp	x0, #0x0
  40cb78:	b.ne	40cb80 <wcrtomb@plt+0x7e70>  // b.any
  40cb7c:	bl	40b800 <wcrtomb@plt+0x6af0>
  40cb80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cb84:	add	x0, x0, #0x400
  40cb88:	ldr	w0, [x0]
  40cb8c:	bl	404390 <fsync@plt>
  40cb90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cb94:	add	x0, x0, #0x400
  40cb98:	ldr	w0, [x0]
  40cb9c:	mov	x1, #0x24b                 	// #587
  40cba0:	bl	404cc0 <ioctl@plt>
  40cba4:	mov	w0, #0x2                   	// #2
  40cba8:	strh	w0, [sp, #56]
  40cbac:	mov	w0, #0x1                   	// #1
  40cbb0:	str	w0, [sp, #60]
  40cbb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cbb8:	add	x0, x0, #0x400
  40cbbc:	ldr	w1, [x0]
  40cbc0:	mov	w0, #0x3fffffff            	// #1073741823
  40cbc4:	cmp	w1, w0
  40cbc8:	b.le	40cbf8 <wcrtomb@plt+0x7ee8>
  40cbcc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cbd0:	add	x0, x0, #0x400
  40cbd4:	ldr	w1, [x0]
  40cbd8:	mov	w0, #0xc0000000            	// #-1073741824
  40cbdc:	add	w0, w1, w0
  40cbe0:	add	x1, sp, #0x38
  40cbe4:	mov	x2, x1
  40cbe8:	mov	w1, #0x6d01                	// #27905
  40cbec:	movk	w1, #0x4008, lsl #16
  40cbf0:	bl	43c43c <wcrtomb@plt+0x3772c>
  40cbf4:	b	40cc18 <wcrtomb@plt+0x7f08>
  40cbf8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cbfc:	add	x0, x0, #0x400
  40cc00:	ldr	w0, [x0]
  40cc04:	add	x1, sp, #0x38
  40cc08:	mov	x2, x1
  40cc0c:	mov	x1, #0x6d01                	// #27905
  40cc10:	movk	x1, #0x4008, lsl #16
  40cc14:	bl	404cc0 <ioctl@plt>
  40cc18:	str	w0, [sp, #64]
  40cc1c:	ldr	w0, [sp, #64]
  40cc20:	lsr	w0, w0, #31
  40cc24:	and	w0, w0, #0x1
  40cc28:	and	w0, w0, #0xff
  40cc2c:	cmp	w0, #0x0
  40cc30:	b.eq	40cd50 <wcrtomb@plt+0x8040>  // b.none
  40cc34:	bl	404bc0 <__errno_location@plt>
  40cc38:	ldr	w0, [x0]
  40cc3c:	cmp	w0, #0x5
  40cc40:	b.ne	40ccc4 <wcrtomb@plt+0x7fb4>  // b.any
  40cc44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cc48:	add	x0, x0, #0x400
  40cc4c:	ldr	w1, [x0]
  40cc50:	mov	w0, #0x3fffffff            	// #1073741823
  40cc54:	cmp	w1, w0
  40cc58:	b.le	40cc88 <wcrtomb@plt+0x7f78>
  40cc5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cc60:	add	x0, x0, #0x400
  40cc64:	ldr	w1, [x0]
  40cc68:	mov	w0, #0xc0000000            	// #-1073741824
  40cc6c:	add	w0, w1, w0
  40cc70:	add	x1, sp, #0x38
  40cc74:	mov	x2, x1
  40cc78:	mov	w1, #0x6d01                	// #27905
  40cc7c:	movk	w1, #0x4008, lsl #16
  40cc80:	bl	43c43c <wcrtomb@plt+0x3772c>
  40cc84:	b	40cca8 <wcrtomb@plt+0x7f98>
  40cc88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cc8c:	add	x0, x0, #0x400
  40cc90:	ldr	w0, [x0]
  40cc94:	add	x1, sp, #0x38
  40cc98:	mov	x2, x1
  40cc9c:	mov	x1, #0x6d01                	// #27905
  40cca0:	movk	x1, #0x4008, lsl #16
  40cca4:	bl	404cc0 <ioctl@plt>
  40cca8:	str	w0, [sp, #64]
  40ccac:	ldr	w0, [sp, #64]
  40ccb0:	lsr	w0, w0, #31
  40ccb4:	and	w0, w0, #0x1
  40ccb8:	and	w0, w0, #0xff
  40ccbc:	cmp	w0, #0x0
  40ccc0:	b.eq	40cd50 <wcrtomb@plt+0x8040>  // b.none
  40ccc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ccc8:	add	x0, x0, #0x400
  40cccc:	ldr	w1, [x0]
  40ccd0:	mov	w0, #0x3fffffff            	// #1073741823
  40ccd4:	cmp	w1, w0
  40ccd8:	b.le	40cd0c <wcrtomb@plt+0x7ffc>
  40ccdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cce0:	add	x0, x0, #0x400
  40cce4:	ldr	w1, [x0]
  40cce8:	mov	w0, #0xc0000000            	// #-1073741824
  40ccec:	add	w0, w1, w0
  40ccf0:	mov	w2, #0x0                   	// #0
  40ccf4:	mov	x1, #0x0                   	// #0
  40ccf8:	bl	43c2b4 <wcrtomb@plt+0x375a4>
  40ccfc:	cmp	x0, #0x0
  40cd00:	cset	w0, ne  // ne = any
  40cd04:	and	w0, w0, #0xff
  40cd08:	b	40cd30 <wcrtomb@plt+0x8020>
  40cd0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cd10:	add	x0, x0, #0x400
  40cd14:	ldr	w0, [x0]
  40cd18:	mov	w2, #0x0                   	// #0
  40cd1c:	mov	x1, #0x0                   	// #0
  40cd20:	bl	4042b0 <lseek@plt>
  40cd24:	cmp	x0, #0x0
  40cd28:	cset	w0, ne  // ne = any
  40cd2c:	and	w0, w0, #0xff
  40cd30:	cmp	w0, #0x0
  40cd34:	b.eq	40cd50 <wcrtomb@plt+0x8040>  // b.none
  40cd38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cd3c:	add	x0, x0, #0x2e0
  40cd40:	ldr	x0, [x0]
  40cd44:	ldr	x0, [x0]
  40cd48:	bl	43aa58 <wcrtomb@plt+0x35d48>
  40cd4c:	b	40cf98 <wcrtomb@plt+0x8288>
  40cd50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40cd54:	add	x0, x0, #0xfa8
  40cd58:	str	wzr, [x0]
  40cd5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40cd60:	add	x0, x0, #0xfe8
  40cd64:	mov	w1, #0x1                   	// #1
  40cd68:	strb	w1, [x0]
  40cd6c:	bl	40a67c <wcrtomb@plt+0x596c>
  40cd70:	mov	w2, #0x0                   	// #0
  40cd74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cd78:	add	x1, x0, #0x90
  40cd7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cd80:	add	x0, x0, #0x18
  40cd84:	bl	420af0 <wcrtomb@plt+0x1bde0>
  40cd88:	str	w0, [sp, #72]
  40cd8c:	ldr	w0, [sp, #72]
  40cd90:	cmp	w0, #0x5
  40cd94:	b.ne	40ce44 <wcrtomb@plt+0x8134>  // b.any
  40cd98:	str	wzr, [sp, #68]
  40cd9c:	ldr	w0, [sp, #68]
  40cda0:	add	w0, w0, #0x1
  40cda4:	str	w0, [sp, #68]
  40cda8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cdac:	add	x0, x0, #0x18
  40cdb0:	ldr	x0, [x0]
  40cdb4:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40cdb8:	mov	w2, #0x0                   	// #0
  40cdbc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cdc0:	add	x1, x0, #0x90
  40cdc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cdc8:	add	x0, x0, #0x18
  40cdcc:	bl	420af0 <wcrtomb@plt+0x1bde0>
  40cdd0:	str	w0, [sp, #72]
  40cdd4:	ldr	w0, [sp, #72]
  40cdd8:	cmp	w0, #0x5
  40cddc:	b.eq	40cd9c <wcrtomb@plt+0x808c>  // b.none
  40cde0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cde4:	add	x0, x0, #0x420
  40cde8:	ldr	x0, [x0]
  40cdec:	cmp	x0, #0x0
  40cdf0:	b.eq	40ce04 <wcrtomb@plt+0x80f4>  // b.none
  40cdf4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cdf8:	add	x0, x0, #0x420
  40cdfc:	ldr	x0, [x0]
  40ce00:	blr	x0
  40ce04:	ldrsw	x0, [sp, #68]
  40ce08:	mov	x2, x0
  40ce0c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ce10:	add	x1, x0, #0xa00
  40ce14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ce18:	add	x0, x0, #0xa30
  40ce1c:	bl	404040 <ngettext@plt>
  40ce20:	ldr	w3, [sp, #68]
  40ce24:	mov	x2, x0
  40ce28:	mov	w1, #0x0                   	// #0
  40ce2c:	mov	w0, #0x0                   	// #0
  40ce30:	bl	404100 <error@plt>
  40ce34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ce38:	add	x0, x0, #0xdb0
  40ce3c:	mov	w1, #0x2                   	// #2
  40ce40:	str	w1, [x0]
  40ce44:	ldr	w0, [sp, #72]
  40ce48:	cmp	w0, #0x4
  40ce4c:	b.eq	40cf70 <wcrtomb@plt+0x8260>  // b.none
  40ce50:	ldr	w0, [sp, #72]
  40ce54:	cmp	w0, #0x3
  40ce58:	b.ne	40cf2c <wcrtomb@plt+0x821c>  // b.any
  40ce5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ce60:	add	x0, x0, #0x18
  40ce64:	ldr	x0, [x0]
  40ce68:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40ce6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ce70:	add	x0, x0, #0x7d
  40ce74:	ldrb	w0, [x0]
  40ce78:	eor	w0, w0, #0x1
  40ce7c:	and	w0, w0, #0xff
  40ce80:	cmp	w0, #0x0
  40ce84:	b.eq	40cf68 <wcrtomb@plt+0x8258>  // b.none
  40ce88:	mov	w2, #0x0                   	// #0
  40ce8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ce90:	add	x1, x0, #0x90
  40ce94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ce98:	add	x0, x0, #0x18
  40ce9c:	bl	420af0 <wcrtomb@plt+0x1bde0>
  40cea0:	str	w0, [sp, #72]
  40cea4:	ldr	w0, [sp, #72]
  40cea8:	cmp	w0, #0x3
  40ceac:	b.eq	40cf78 <wcrtomb@plt+0x8268>  // b.none
  40ceb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40ceb4:	add	x0, x0, #0x24c
  40ceb8:	ldr	w0, [x0]
  40cebc:	and	w0, w0, #0x1
  40cec0:	cmp	w0, #0x0
  40cec4:	b.eq	40cf68 <wcrtomb@plt+0x8258>  // b.none
  40cec8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cecc:	add	x0, x0, #0x420
  40ced0:	ldr	x0, [x0]
  40ced4:	cmp	x0, #0x0
  40ced8:	b.eq	40ceec <wcrtomb@plt+0x81dc>  // b.none
  40cedc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cee0:	add	x0, x0, #0x420
  40cee4:	ldr	x0, [x0]
  40cee8:	blr	x0
  40ceec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40cef0:	add	x0, x0, #0xa60
  40cef4:	bl	404c60 <gettext@plt>
  40cef8:	mov	x19, x0
  40cefc:	bl	405f78 <wcrtomb@plt+0x1268>
  40cf00:	mov	x2, x0
  40cf04:	add	x0, sp, #0x20
  40cf08:	mov	x1, x0
  40cf0c:	mov	x0, x2
  40cf10:	bl	450988 <argp_usage@@Base+0x789c>
  40cf14:	mov	x3, x0
  40cf18:	mov	x2, x19
  40cf1c:	mov	w1, #0x0                   	// #0
  40cf20:	mov	w0, #0x0                   	// #0
  40cf24:	bl	404100 <error@plt>
  40cf28:	b	40cf68 <wcrtomb@plt+0x8258>
  40cf2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cf30:	add	x0, x0, #0x18
  40cf34:	ldr	x4, [x0]
  40cf38:	mov	w3, #0x1                   	// #1
  40cf3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cf40:	add	x2, x0, #0x0
  40cf44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cf48:	add	x1, x0, #0x90
  40cf4c:	mov	x0, x4
  40cf50:	bl	42112c <wcrtomb@plt+0x1c41c>
  40cf54:	bl	40c80c <wcrtomb@plt+0x7afc>
  40cf58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40cf5c:	add	x0, x0, #0x90
  40cf60:	bl	434ecc <wcrtomb@plt+0x301bc>
  40cf64:	b	40cd70 <wcrtomb@plt+0x8060>
  40cf68:	nop
  40cf6c:	b	40cd70 <wcrtomb@plt+0x8060>
  40cf70:	nop
  40cf74:	b	40cf7c <wcrtomb@plt+0x826c>
  40cf78:	nop
  40cf7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40cf80:	add	x0, x0, #0xfa8
  40cf84:	mov	w1, #0x1                   	// #1
  40cf88:	str	w1, [x0]
  40cf8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40cf90:	add	x0, x0, #0xfe8
  40cf94:	strb	wzr, [x0]
  40cf98:	ldr	x19, [sp, #16]
  40cf9c:	ldp	x29, x30, [sp], #80
  40cfa0:	ret
  40cfa4:	stp	x29, x30, [sp, #-64]!
  40cfa8:	mov	x29, sp
  40cfac:	str	x0, [sp, #40]
  40cfb0:	str	w1, [sp, #36]
  40cfb4:	str	x2, [sp, #24]
  40cfb8:	mov	x0, #0x28                  	// #40
  40cfbc:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  40cfc0:	str	x0, [sp, #56]
  40cfc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40cfc8:	add	x0, x0, #0x7d8
  40cfcc:	ldr	x1, [x0]
  40cfd0:	ldr	x0, [sp, #56]
  40cfd4:	str	x1, [x0, #32]
  40cfd8:	ldr	x0, [sp, #56]
  40cfdc:	ldr	x1, [sp, #40]
  40cfe0:	str	x1, [x0]
  40cfe4:	ldr	x0, [sp, #56]
  40cfe8:	ldr	w1, [sp, #36]
  40cfec:	str	w1, [x0, #16]
  40cff0:	ldr	x0, [sp, #56]
  40cff4:	ldr	x1, [sp, #24]
  40cff8:	str	x1, [x0, #24]
  40cffc:	ldr	x0, [sp, #40]
  40d000:	bl	4040b0 <strlen@plt>
  40d004:	mov	x1, x0
  40d008:	ldr	x0, [sp, #56]
  40d00c:	str	x1, [x0, #8]
  40d010:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40d014:	add	x0, x0, #0x7d8
  40d018:	ldr	x1, [sp, #56]
  40d01c:	str	x1, [x0]
  40d020:	nop
  40d024:	ldp	x29, x30, [sp], #64
  40d028:	ret
  40d02c:	stp	x29, x30, [sp, #-64]!
  40d030:	mov	x29, sp
  40d034:	stp	x19, x20, [sp, #16]
  40d038:	str	x0, [sp, #56]
  40d03c:	str	x1, [sp, #48]
  40d040:	str	x2, [sp, #40]
  40d044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d048:	add	x0, x0, #0x2b4
  40d04c:	ldr	w0, [x0]
  40d050:	cmp	w0, #0x0
  40d054:	b.eq	40d0d8 <wcrtomb@plt+0x83c8>  // b.none
  40d058:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40d05c:	add	x0, x0, #0x24c
  40d060:	ldr	w0, [x0]
  40d064:	and	w0, w0, #0x4
  40d068:	cmp	w0, #0x0
  40d06c:	b.eq	40d0d8 <wcrtomb@plt+0x83c8>  // b.none
  40d070:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d074:	add	x0, x0, #0x420
  40d078:	ldr	x0, [x0]
  40d07c:	cmp	x0, #0x0
  40d080:	b.eq	40d094 <wcrtomb@plt+0x8384>  // b.none
  40d084:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d088:	add	x0, x0, #0x420
  40d08c:	ldr	x0, [x0]
  40d090:	blr	x0
  40d094:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40d098:	add	x0, x0, #0xa78
  40d09c:	bl	404c60 <gettext@plt>
  40d0a0:	mov	x19, x0
  40d0a4:	ldr	x0, [sp, #56]
  40d0a8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40d0ac:	mov	x20, x0
  40d0b0:	ldr	x1, [sp, #48]
  40d0b4:	mov	w0, #0x1                   	// #1
  40d0b8:	bl	459ab0 <argp_usage@@Base+0x109c4>
  40d0bc:	ldr	x5, [sp, #40]
  40d0c0:	mov	x4, x0
  40d0c4:	mov	x3, x20
  40d0c8:	mov	x2, x19
  40d0cc:	mov	w1, #0x0                   	// #0
  40d0d0:	mov	w0, #0x0                   	// #0
  40d0d4:	bl	404100 <error@plt>
  40d0d8:	nop
  40d0dc:	ldp	x19, x20, [sp, #16]
  40d0e0:	ldp	x29, x30, [sp], #64
  40d0e4:	ret
  40d0e8:	stp	x29, x30, [sp, #-48]!
  40d0ec:	mov	x29, sp
  40d0f0:	str	x0, [sp, #24]
  40d0f4:	str	x1, [sp, #16]
  40d0f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40d0fc:	add	x0, x0, #0x7d8
  40d100:	ldr	x0, [x0]
  40d104:	str	x0, [sp, #40]
  40d108:	b	40d1cc <wcrtomb@plt+0x84bc>
  40d10c:	ldr	x0, [sp, #40]
  40d110:	ldr	x1, [x0]
  40d114:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d118:	add	x0, x0, #0x2f4
  40d11c:	ldr	w0, [x0]
  40d120:	mov	w2, w0
  40d124:	ldr	x0, [sp, #24]
  40d128:	bl	410a0c <wcrtomb@plt+0xbcfc>
  40d12c:	str	w0, [sp, #36]
  40d130:	ldr	w0, [sp, #36]
  40d134:	cmp	w0, #0x0
  40d138:	b.lt	40d1c0 <wcrtomb@plt+0x84b0>  // b.tstop
  40d13c:	ldr	x0, [sp, #40]
  40d140:	ldr	x0, [x0, #24]
  40d144:	cmp	x0, #0x0
  40d148:	b.eq	40d168 <wcrtomb@plt+0x8458>  // b.none
  40d14c:	ldr	x0, [sp, #40]
  40d150:	ldr	x1, [x0, #24]
  40d154:	ldr	w0, [sp, #36]
  40d158:	blr	x1
  40d15c:	and	w0, w0, #0xff
  40d160:	cmp	w0, #0x0
  40d164:	b.eq	40d170 <wcrtomb@plt+0x8460>  // b.none
  40d168:	mov	w0, #0x1                   	// #1
  40d16c:	b	40d174 <wcrtomb@plt+0x8464>
  40d170:	mov	w0, #0x0                   	// #0
  40d174:	strb	w0, [sp, #35]
  40d178:	ldrb	w0, [sp, #35]
  40d17c:	and	w0, w0, #0x1
  40d180:	strb	w0, [sp, #35]
  40d184:	ldr	w0, [sp, #36]
  40d188:	bl	404660 <close@plt>
  40d18c:	ldrb	w0, [sp, #35]
  40d190:	cmp	w0, #0x0
  40d194:	b.eq	40d1c0 <wcrtomb@plt+0x84b0>  // b.none
  40d198:	ldr	x0, [sp, #16]
  40d19c:	cmp	x0, #0x0
  40d1a0:	b.eq	40d1b4 <wcrtomb@plt+0x84a4>  // b.none
  40d1a4:	ldr	x0, [sp, #40]
  40d1a8:	ldr	x1, [x0]
  40d1ac:	ldr	x0, [sp, #16]
  40d1b0:	str	x1, [x0]
  40d1b4:	ldr	x0, [sp, #40]
  40d1b8:	ldr	w0, [x0, #16]
  40d1bc:	b	40d1dc <wcrtomb@plt+0x84cc>
  40d1c0:	ldr	x0, [sp, #40]
  40d1c4:	ldr	x0, [x0, #32]
  40d1c8:	str	x0, [sp, #40]
  40d1cc:	ldr	x0, [sp, #40]
  40d1d0:	cmp	x0, #0x0
  40d1d4:	b.ne	40d10c <wcrtomb@plt+0x83fc>  // b.any
  40d1d8:	mov	w0, #0x0                   	// #0
  40d1dc:	ldp	x29, x30, [sp], #48
  40d1e0:	ret
  40d1e4:	stp	x29, x30, [sp, #-80]!
  40d1e8:	mov	x29, sp
  40d1ec:	str	w0, [sp, #28]
  40d1f0:	add	x0, sp, #0x20
  40d1f4:	mov	x2, #0x2b                  	// #43
  40d1f8:	mov	x1, x0
  40d1fc:	ldr	w0, [sp, #28]
  40d200:	bl	404a10 <read@plt>
  40d204:	cmp	x0, #0x2b
  40d208:	b.ne	40d234 <wcrtomb@plt+0x8524>  // b.any
  40d20c:	add	x3, sp, #0x20
  40d210:	mov	x2, #0x2b                  	// #43
  40d214:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40d218:	add	x1, x0, #0xaa8
  40d21c:	mov	x0, x3
  40d220:	bl	404790 <memcmp@plt>
  40d224:	cmp	w0, #0x0
  40d228:	b.ne	40d234 <wcrtomb@plt+0x8524>  // b.any
  40d22c:	mov	w0, #0x1                   	// #1
  40d230:	b	40d238 <wcrtomb@plt+0x8528>
  40d234:	mov	w0, #0x0                   	// #0
  40d238:	and	w0, w0, #0x1
  40d23c:	and	w0, w0, #0xff
  40d240:	ldp	x29, x30, [sp], #80
  40d244:	ret
  40d248:	sub	sp, sp, #0x30
  40d24c:	str	x0, [sp, #24]
  40d250:	str	x1, [sp, #16]
  40d254:	str	x2, [sp, #8]
  40d258:	ldr	x0, [sp, #24]
  40d25c:	str	x0, [sp, #40]
  40d260:	ldr	x0, [sp, #8]
  40d264:	str	x0, [sp, #32]
  40d268:	ldr	x0, [sp, #40]
  40d26c:	and	w0, w0, #0xff
  40d270:	and	w0, w0, #0x7
  40d274:	and	w1, w0, #0xff
  40d278:	ldr	x0, [sp, #32]
  40d27c:	sub	x0, x0, #0x1
  40d280:	str	x0, [sp, #32]
  40d284:	ldr	x2, [sp, #16]
  40d288:	ldr	x0, [sp, #32]
  40d28c:	add	x0, x2, x0
  40d290:	add	w1, w1, #0x30
  40d294:	and	w1, w1, #0xff
  40d298:	strb	w1, [x0]
  40d29c:	ldr	x0, [sp, #40]
  40d2a0:	lsr	x0, x0, #3
  40d2a4:	str	x0, [sp, #40]
  40d2a8:	ldr	x0, [sp, #32]
  40d2ac:	cmp	x0, #0x0
  40d2b0:	b.ne	40d268 <wcrtomb@plt+0x8558>  // b.any
  40d2b4:	nop
  40d2b8:	nop
  40d2bc:	add	sp, sp, #0x30
  40d2c0:	ret
  40d2c4:	sub	sp, sp, #0x30
  40d2c8:	str	x0, [sp, #24]
  40d2cc:	str	x1, [sp, #16]
  40d2d0:	str	x2, [sp, #8]
  40d2d4:	str	xzr, [sp, #40]
  40d2d8:	b	40d314 <wcrtomb@plt+0x8604>
  40d2dc:	ldr	x1, [sp, #16]
  40d2e0:	ldr	x0, [sp, #40]
  40d2e4:	add	x1, x1, x0
  40d2e8:	ldr	x2, [sp, #24]
  40d2ec:	ldr	x0, [sp, #40]
  40d2f0:	add	x0, x2, x0
  40d2f4:	ldrb	w1, [x1]
  40d2f8:	strb	w1, [x0]
  40d2fc:	ldrb	w0, [x0]
  40d300:	cmp	w0, #0x0
  40d304:	b.eq	40d328 <wcrtomb@plt+0x8618>  // b.none
  40d308:	ldr	x0, [sp, #40]
  40d30c:	add	x0, x0, #0x1
  40d310:	str	x0, [sp, #40]
  40d314:	ldr	x1, [sp, #40]
  40d318:	ldr	x0, [sp, #8]
  40d31c:	cmp	x1, x0
  40d320:	b.cc	40d2dc <wcrtomb@plt+0x85cc>  // b.lo, b.ul, b.last
  40d324:	b	40d32c <wcrtomb@plt+0x861c>
  40d328:	nop
  40d32c:	nop
  40d330:	add	sp, sp, #0x30
  40d334:	ret
  40d338:	stp	x29, x30, [sp, #-48]!
  40d33c:	mov	x29, sp
  40d340:	str	x0, [sp, #40]
  40d344:	str	x1, [sp, #32]
  40d348:	str	x2, [sp, #24]
  40d34c:	ldr	x2, [sp, #24]
  40d350:	ldr	x1, [sp, #32]
  40d354:	ldr	x0, [sp, #40]
  40d358:	bl	40d2c4 <wcrtomb@plt+0x85b4>
  40d35c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d360:	add	x0, x0, #0x360
  40d364:	ldr	w0, [x0]
  40d368:	cmp	w0, #0x2
  40d36c:	b.ne	40d384 <wcrtomb@plt+0x8674>  // b.any
  40d370:	ldr	x0, [sp, #24]
  40d374:	sub	x0, x0, #0x1
  40d378:	ldr	x1, [sp, #40]
  40d37c:	add	x0, x1, x0
  40d380:	strb	wzr, [x0]
  40d384:	nop
  40d388:	ldp	x29, x30, [sp], #48
  40d38c:	ret
  40d390:	sub	sp, sp, #0x40
  40d394:	str	w0, [sp, #28]
  40d398:	str	x1, [sp, #16]
  40d39c:	str	x2, [sp, #8]
  40d3a0:	str	x3, [sp]
  40d3a4:	ldr	x0, [sp, #16]
  40d3a8:	str	x0, [sp, #56]
  40d3ac:	ldr	w0, [sp, #28]
  40d3b0:	neg	w0, w0
  40d3b4:	sxtw	x0, w0
  40d3b8:	lsl	x0, x0, #56
  40d3bc:	str	x0, [sp, #40]
  40d3c0:	ldr	x0, [sp]
  40d3c4:	str	x0, [sp, #48]
  40d3c8:	ldr	x0, [sp, #48]
  40d3cc:	sub	x0, x0, #0x1
  40d3d0:	str	x0, [sp, #48]
  40d3d4:	ldr	x1, [sp, #8]
  40d3d8:	ldr	x0, [sp, #48]
  40d3dc:	add	x0, x1, x0
  40d3e0:	ldr	x1, [sp, #56]
  40d3e4:	and	w1, w1, #0xff
  40d3e8:	strb	w1, [x0]
  40d3ec:	ldr	x0, [sp, #56]
  40d3f0:	lsr	x0, x0, #8
  40d3f4:	ldr	x1, [sp, #40]
  40d3f8:	orr	x0, x1, x0
  40d3fc:	str	x0, [sp, #56]
  40d400:	ldr	x0, [sp, #48]
  40d404:	cmp	x0, #0x0
  40d408:	b.ne	40d3c8 <wcrtomb@plt+0x86b8>  // b.any
  40d40c:	nop
  40d410:	nop
  40d414:	add	sp, sp, #0x40
  40d418:	ret
  40d41c:	stp	x29, x30, [sp, #-272]!
  40d420:	mov	x29, sp
  40d424:	str	w0, [sp, #76]
  40d428:	str	w1, [sp, #72]
  40d42c:	str	x2, [sp, #64]
  40d430:	str	x3, [sp, #56]
  40d434:	str	x4, [sp, #48]
  40d438:	str	x5, [sp, #40]
  40d43c:	str	x6, [sp, #32]
  40d440:	str	x7, [sp, #24]
  40d444:	ldr	w0, [sp, #72]
  40d448:	cmp	w0, #0x0
  40d44c:	b.eq	40d488 <wcrtomb@plt+0x8778>  // b.none
  40d450:	ldr	x0, [sp, #32]
  40d454:	sub	x0, x0, #0x1
  40d458:	lsl	x0, x0, #3
  40d45c:	cmp	x0, #0x3f
  40d460:	b.hi	40d480 <wcrtomb@plt+0x8770>  // b.pmore
  40d464:	ldr	x0, [sp, #32]
  40d468:	sub	x0, x0, #0x1
  40d46c:	lsl	w0, w0, #3
  40d470:	mov	x1, #0x1                   	// #1
  40d474:	lsl	x0, x1, x0
  40d478:	sub	x0, x0, #0x1
  40d47c:	b	40d4d0 <wcrtomb@plt+0x87c0>
  40d480:	mov	x0, #0xffffffffffffffff    	// #-1
  40d484:	b	40d4d0 <wcrtomb@plt+0x87c0>
  40d488:	ldr	x1, [sp, #32]
  40d48c:	mov	x0, x1
  40d490:	lsl	x0, x0, #1
  40d494:	add	x0, x0, x1
  40d498:	sub	x0, x0, #0x3
  40d49c:	cmp	x0, #0x3f
  40d4a0:	b.hi	40d4cc <wcrtomb@plt+0x87bc>  // b.pmore
  40d4a4:	ldr	x0, [sp, #32]
  40d4a8:	mov	w1, w0
  40d4ac:	mov	w0, w1
  40d4b0:	lsl	w0, w0, #1
  40d4b4:	add	w0, w0, w1
  40d4b8:	sub	w0, w0, #0x3
  40d4bc:	mov	x1, #0x1                   	// #1
  40d4c0:	lsl	x0, x1, x0
  40d4c4:	sub	x0, x0, #0x1
  40d4c8:	b	40d4d0 <wcrtomb@plt+0x87c0>
  40d4cc:	mov	x0, #0xffffffffffffffff    	// #-1
  40d4d0:	str	x0, [sp, #240]
  40d4d4:	add	x0, sp, #0x90
  40d4d8:	mov	x1, x0
  40d4dc:	ldr	x0, [sp, #240]
  40d4e0:	bl	450988 <argp_usage@@Base+0x789c>
  40d4e4:	str	x0, [sp, #232]
  40d4e8:	ldr	w0, [sp, #72]
  40d4ec:	cmp	w0, #0x0
  40d4f0:	b.eq	40d558 <wcrtomb@plt+0x8848>  // b.none
  40d4f4:	ldr	x0, [sp, #240]
  40d4f8:	cmn	x0, #0x1
  40d4fc:	b.eq	40d50c <wcrtomb@plt+0x87fc>  // b.none
  40d500:	ldr	x0, [sp, #240]
  40d504:	add	x0, x0, #0x1
  40d508:	b	40d518 <wcrtomb@plt+0x8808>
  40d50c:	ldr	x0, [sp, #240]
  40d510:	lsr	x0, x0, #1
  40d514:	add	x0, x0, #0x1
  40d518:	str	x0, [sp, #224]
  40d51c:	add	x0, sp, #0x78
  40d520:	add	x0, x0, #0x1
  40d524:	mov	x1, x0
  40d528:	ldr	x0, [sp, #224]
  40d52c:	bl	450988 <argp_usage@@Base+0x789c>
  40d530:	str	x0, [sp, #216]
  40d534:	ldr	x0, [sp, #216]
  40d538:	sub	x0, x0, #0x1
  40d53c:	str	x0, [sp, #216]
  40d540:	ldr	x0, [sp, #216]
  40d544:	mov	w1, #0x2d                  	// #45
  40d548:	strb	w1, [x0]
  40d54c:	ldr	x0, [sp, #216]
  40d550:	str	x0, [sp, #264]
  40d554:	b	40d564 <wcrtomb@plt+0x8854>
  40d558:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40d55c:	add	x0, x0, #0xad8
  40d560:	str	x0, [sp, #264]
  40d564:	ldr	w0, [sp, #76]
  40d568:	cmp	w0, #0x0
  40d56c:	b.eq	40d5b4 <wcrtomb@plt+0x88a4>  // b.none
  40d570:	ldr	x0, [sp, #64]
  40d574:	neg	x2, x0
  40d578:	add	x0, sp, #0xa8
  40d57c:	add	x0, x0, #0x1
  40d580:	mov	x1, x0
  40d584:	mov	x0, x2
  40d588:	bl	450988 <argp_usage@@Base+0x789c>
  40d58c:	str	x0, [sp, #208]
  40d590:	ldr	x0, [sp, #208]
  40d594:	sub	x0, x0, #0x1
  40d598:	str	x0, [sp, #208]
  40d59c:	ldr	x0, [sp, #208]
  40d5a0:	mov	w1, #0x2d                  	// #45
  40d5a4:	strb	w1, [x0]
  40d5a8:	ldr	x0, [sp, #208]
  40d5ac:	str	x0, [sp, #256]
  40d5b0:	b	40d5c8 <wcrtomb@plt+0x88b8>
  40d5b4:	add	x0, sp, #0xa8
  40d5b8:	mov	x1, x0
  40d5bc:	ldr	x0, [sp, #64]
  40d5c0:	bl	450988 <argp_usage@@Base+0x789c>
  40d5c4:	str	x0, [sp, #256]
  40d5c8:	ldr	x0, [sp, #48]
  40d5cc:	cmp	x0, #0x0
  40d5d0:	b.eq	40d6f0 <wcrtomb@plt+0x89e0>  // b.none
  40d5d4:	add	x0, sp, #0x74
  40d5d8:	ldr	x1, [sp, #48]
  40d5dc:	blr	x1
  40d5e0:	mov	x1, x0
  40d5e4:	ldr	x0, [sp, #240]
  40d5e8:	and	x0, x0, x1
  40d5ec:	str	x0, [sp, #200]
  40d5f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d5f4:	add	x0, x0, #0x360
  40d5f8:	ldr	w0, [x0]
  40d5fc:	cmp	w0, #0x6
  40d600:	cset	w0, eq  // eq = none
  40d604:	and	w0, w0, #0xff
  40d608:	mov	w1, w0
  40d60c:	ldr	w0, [sp, #116]
  40d610:	and	w0, w1, w0
  40d614:	str	w0, [sp, #116]
  40d618:	ldr	w0, [sp, #116]
  40d61c:	cmp	w0, #0x0
  40d620:	b.eq	40d630 <wcrtomb@plt+0x8920>  // b.none
  40d624:	ldr	x0, [sp, #200]
  40d628:	neg	x0, x0
  40d62c:	b	40d634 <wcrtomb@plt+0x8924>
  40d630:	ldr	x0, [sp, #200]
  40d634:	str	x0, [sp, #192]
  40d638:	add	x0, sp, #0x58
  40d63c:	add	x0, x0, #0x1
  40d640:	mov	x1, x0
  40d644:	ldr	x0, [sp, #192]
  40d648:	bl	450988 <argp_usage@@Base+0x789c>
  40d64c:	str	x0, [sp, #248]
  40d650:	ldr	w0, [sp, #116]
  40d654:	cmp	w0, #0x0
  40d658:	b.eq	40d674 <wcrtomb@plt+0x8964>  // b.none
  40d65c:	ldr	x0, [sp, #248]
  40d660:	sub	x0, x0, #0x1
  40d664:	str	x0, [sp, #248]
  40d668:	ldr	x0, [sp, #248]
  40d66c:	mov	w1, #0x2d                  	// #45
  40d670:	strb	w1, [x0]
  40d674:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d678:	add	x0, x0, #0x420
  40d67c:	ldr	x0, [x0]
  40d680:	cmp	x0, #0x0
  40d684:	b.eq	40d698 <wcrtomb@plt+0x8988>  // b.none
  40d688:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d68c:	add	x0, x0, #0x420
  40d690:	ldr	x0, [x0]
  40d694:	blr	x0
  40d698:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40d69c:	add	x0, x0, #0xae0
  40d6a0:	bl	404c60 <gettext@plt>
  40d6a4:	ldr	x7, [sp, #248]
  40d6a8:	ldr	x6, [sp, #232]
  40d6ac:	ldr	x5, [sp, #264]
  40d6b0:	ldr	x4, [sp, #24]
  40d6b4:	ldr	x3, [sp, #256]
  40d6b8:	mov	x2, x0
  40d6bc:	mov	w1, #0x0                   	// #0
  40d6c0:	mov	w0, #0x0                   	// #0
  40d6c4:	bl	404100 <error@plt>
  40d6c8:	ldr	w0, [sp, #116]
  40d6cc:	ldr	x6, [sp, #24]
  40d6d0:	ldr	x5, [sp, #32]
  40d6d4:	ldr	x4, [sp, #40]
  40d6d8:	mov	x3, #0x0                   	// #0
  40d6dc:	ldr	x2, [sp, #56]
  40d6e0:	ldr	x1, [sp, #192]
  40d6e4:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40d6e8:	and	w0, w0, #0xff
  40d6ec:	b	40d754 <wcrtomb@plt+0x8a44>
  40d6f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d6f4:	add	x0, x0, #0x420
  40d6f8:	ldr	x0, [x0]
  40d6fc:	cmp	x0, #0x0
  40d700:	b.eq	40d714 <wcrtomb@plt+0x8a04>  // b.none
  40d704:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d708:	add	x0, x0, #0x420
  40d70c:	ldr	x0, [x0]
  40d710:	blr	x0
  40d714:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40d718:	add	x0, x0, #0xb18
  40d71c:	bl	404c60 <gettext@plt>
  40d720:	ldr	x6, [sp, #232]
  40d724:	ldr	x5, [sp, #264]
  40d728:	ldr	x4, [sp, #24]
  40d72c:	ldr	x3, [sp, #256]
  40d730:	mov	x2, x0
  40d734:	mov	w1, #0x0                   	// #0
  40d738:	mov	w0, #0x0                   	// #0
  40d73c:	bl	404100 <error@plt>
  40d740:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40d744:	add	x0, x0, #0xdb0
  40d748:	mov	w1, #0x2                   	// #2
  40d74c:	str	w1, [x0]
  40d750:	mov	w0, #0x0                   	// #0
  40d754:	ldp	x29, x30, [sp], #272
  40d758:	ret
  40d75c:	stp	x29, x30, [sp, #-96]!
  40d760:	mov	x29, sp
  40d764:	str	w0, [sp, #76]
  40d768:	str	x1, [sp, #64]
  40d76c:	str	x2, [sp, #56]
  40d770:	str	x3, [sp, #48]
  40d774:	str	x4, [sp, #40]
  40d778:	str	x5, [sp, #32]
  40d77c:	str	x6, [sp, #24]
  40d780:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d784:	add	x0, x0, #0x360
  40d788:	ldr	w0, [x0]
  40d78c:	cmp	w0, #0x6
  40d790:	b.eq	40d7a8 <wcrtomb@plt+0x8a98>  // b.none
  40d794:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d798:	add	x0, x0, #0x360
  40d79c:	ldr	w0, [x0]
  40d7a0:	cmp	w0, #0x2
  40d7a4:	b.ne	40d7b0 <wcrtomb@plt+0x8aa0>  // b.any
  40d7a8:	mov	w0, #0x1                   	// #1
  40d7ac:	b	40d7b4 <wcrtomb@plt+0x8aa4>
  40d7b0:	mov	w0, #0x0                   	// #0
  40d7b4:	str	w0, [sp, #92]
  40d7b8:	ldr	w0, [sp, #76]
  40d7bc:	cmp	w0, #0x0
  40d7c0:	b.ne	40d84c <wcrtomb@plt+0x8b3c>  // b.any
  40d7c4:	ldr	x1, [sp, #32]
  40d7c8:	mov	x0, x1
  40d7cc:	lsl	x0, x0, #1
  40d7d0:	add	x0, x0, x1
  40d7d4:	sub	x0, x0, #0x3
  40d7d8:	cmp	x0, #0x3f
  40d7dc:	b.hi	40d808 <wcrtomb@plt+0x8af8>  // b.pmore
  40d7e0:	ldr	x0, [sp, #32]
  40d7e4:	mov	w1, w0
  40d7e8:	mov	w0, w1
  40d7ec:	lsl	w0, w0, #1
  40d7f0:	add	w0, w0, w1
  40d7f4:	sub	w0, w0, #0x3
  40d7f8:	mov	x1, #0x1                   	// #1
  40d7fc:	lsl	x0, x1, x0
  40d800:	sub	x0, x0, #0x1
  40d804:	b	40d80c <wcrtomb@plt+0x8afc>
  40d808:	mov	x0, #0xffffffffffffffff    	// #-1
  40d80c:	ldr	x1, [sp, #64]
  40d810:	cmp	x0, x1
  40d814:	b.cc	40d84c <wcrtomb@plt+0x8b3c>  // b.lo, b.ul, b.last
  40d818:	ldr	x0, [sp, #32]
  40d81c:	sub	x0, x0, #0x1
  40d820:	ldr	x1, [sp, #40]
  40d824:	add	x0, x1, x0
  40d828:	strb	wzr, [x0]
  40d82c:	ldr	x0, [sp, #32]
  40d830:	sub	x0, x0, #0x1
  40d834:	mov	x2, x0
  40d838:	ldr	x1, [sp, #40]
  40d83c:	ldr	x0, [sp, #64]
  40d840:	bl	40d248 <wcrtomb@plt+0x8538>
  40d844:	mov	w0, #0x1                   	// #1
  40d848:	b	40da24 <wcrtomb@plt+0x8d14>
  40d84c:	ldr	w0, [sp, #92]
  40d850:	cmp	w0, #0x0
  40d854:	b.eq	40d9f8 <wcrtomb@plt+0x8ce8>  // b.none
  40d858:	ldr	w0, [sp, #76]
  40d85c:	cmp	w0, #0x0
  40d860:	b.eq	40d870 <wcrtomb@plt+0x8b60>  // b.none
  40d864:	ldr	x0, [sp, #64]
  40d868:	mvn	x1, x0
  40d86c:	b	40d874 <wcrtomb@plt+0x8b64>
  40d870:	ldr	x1, [sp, #64]
  40d874:	ldr	x0, [sp, #32]
  40d878:	sub	x0, x0, #0x1
  40d87c:	lsl	x0, x0, #3
  40d880:	cmp	x0, #0x3f
  40d884:	b.hi	40d8a4 <wcrtomb@plt+0x8b94>  // b.pmore
  40d888:	ldr	x0, [sp, #32]
  40d88c:	sub	x0, x0, #0x1
  40d890:	lsl	w0, w0, #3
  40d894:	mov	x2, #0x1                   	// #1
  40d898:	lsl	x0, x2, x0
  40d89c:	sub	x0, x0, #0x1
  40d8a0:	b	40d8a8 <wcrtomb@plt+0x8b98>
  40d8a4:	mov	x0, #0xffffffffffffffff    	// #-1
  40d8a8:	cmp	x1, x0
  40d8ac:	b.hi	40d8fc <wcrtomb@plt+0x8bec>  // b.pmore
  40d8b0:	ldr	w0, [sp, #76]
  40d8b4:	cmp	w0, #0x0
  40d8b8:	b.eq	40d8c4 <wcrtomb@plt+0x8bb4>  // b.none
  40d8bc:	mov	w0, #0xff                  	// #255
  40d8c0:	b	40d8c8 <wcrtomb@plt+0x8bb8>
  40d8c4:	mov	w0, #0x80                  	// #128
  40d8c8:	ldr	x1, [sp, #40]
  40d8cc:	strb	w0, [x1]
  40d8d0:	ldr	x0, [sp, #40]
  40d8d4:	add	x1, x0, #0x1
  40d8d8:	ldr	x0, [sp, #32]
  40d8dc:	sub	x0, x0, #0x1
  40d8e0:	mov	x3, x0
  40d8e4:	mov	x2, x1
  40d8e8:	ldr	x1, [sp, #64]
  40d8ec:	ldr	w0, [sp, #76]
  40d8f0:	bl	40d390 <wcrtomb@plt+0x8680>
  40d8f4:	mov	w0, #0x1                   	// #1
  40d8f8:	b	40da24 <wcrtomb@plt+0x8d14>
  40d8fc:	ldr	w0, [sp, #76]
  40d900:	cmp	w0, #0x0
  40d904:	b.eq	40d9fc <wcrtomb@plt+0x8cec>  // b.none
  40d908:	ldr	x0, [sp, #56]
  40d90c:	lsl	x2, x0, #3
  40d910:	ldr	x1, [sp, #32]
  40d914:	mov	x0, x1
  40d918:	lsl	x0, x0, #1
  40d91c:	add	x0, x0, x1
  40d920:	sub	x0, x0, #0x3
  40d924:	cmp	x2, x0
  40d928:	b.hi	40d9fc <wcrtomb@plt+0x8cec>  // b.pmore
  40d92c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40d930:	add	x0, x0, #0x7f0
  40d934:	ldr	w0, [x0]
  40d938:	cmp	w0, #0x0
  40d93c:	b.ne	40d990 <wcrtomb@plt+0x8c80>  // b.any
  40d940:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40d944:	add	x0, x0, #0x7f0
  40d948:	mov	w1, #0x1                   	// #1
  40d94c:	str	w1, [x0]
  40d950:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d954:	add	x0, x0, #0x420
  40d958:	ldr	x0, [x0]
  40d95c:	cmp	x0, #0x0
  40d960:	b.eq	40d974 <wcrtomb@plt+0x8c64>  // b.none
  40d964:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40d968:	add	x0, x0, #0x420
  40d96c:	ldr	x0, [x0]
  40d970:	blr	x0
  40d974:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40d978:	add	x0, x0, #0xb38
  40d97c:	bl	404c60 <gettext@plt>
  40d980:	mov	x2, x0
  40d984:	mov	w1, #0x0                   	// #0
  40d988:	mov	w0, #0x0                   	// #0
  40d98c:	bl	404100 <error@plt>
  40d990:	ldr	x0, [sp, #32]
  40d994:	sub	x0, x0, #0x1
  40d998:	ldr	x1, [sp, #40]
  40d99c:	add	x0, x1, x0
  40d9a0:	strb	wzr, [x0]
  40d9a4:	ldr	x0, [sp, #56]
  40d9a8:	lsl	x0, x0, #3
  40d9ac:	cmp	x0, #0x3f
  40d9b0:	b.hi	40d9cc <wcrtomb@plt+0x8cbc>  // b.pmore
  40d9b4:	ldr	x0, [sp, #56]
  40d9b8:	lsl	w0, w0, #3
  40d9bc:	mov	x1, #0x1                   	// #1
  40d9c0:	lsl	x0, x1, x0
  40d9c4:	sub	x0, x0, #0x1
  40d9c8:	b	40d9d0 <wcrtomb@plt+0x8cc0>
  40d9cc:	mov	x0, #0xffffffffffffffff    	// #-1
  40d9d0:	ldr	x1, [sp, #64]
  40d9d4:	and	x3, x0, x1
  40d9d8:	ldr	x0, [sp, #32]
  40d9dc:	sub	x0, x0, #0x1
  40d9e0:	mov	x2, x0
  40d9e4:	ldr	x1, [sp, #40]
  40d9e8:	mov	x0, x3
  40d9ec:	bl	40d248 <wcrtomb@plt+0x8538>
  40d9f0:	mov	w0, #0x1                   	// #1
  40d9f4:	b	40da24 <wcrtomb@plt+0x8d14>
  40d9f8:	str	xzr, [sp, #48]
  40d9fc:	ldr	x7, [sp, #24]
  40da00:	ldr	x6, [sp, #32]
  40da04:	ldr	x5, [sp, #40]
  40da08:	ldr	x4, [sp, #48]
  40da0c:	ldr	x3, [sp, #56]
  40da10:	ldr	x2, [sp, #64]
  40da14:	ldr	w1, [sp, #92]
  40da18:	ldr	w0, [sp, #76]
  40da1c:	bl	40d41c <wcrtomb@plt+0x870c>
  40da20:	and	w0, w0, #0xff
  40da24:	ldp	x29, x30, [sp], #96
  40da28:	ret
  40da2c:	stp	x29, x30, [sp, #-48]!
  40da30:	mov	x29, sp
  40da34:	str	x0, [sp, #24]
  40da38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40da3c:	add	x0, x0, #0x7f4
  40da40:	ldr	w0, [x0]
  40da44:	cmp	w0, #0x0
  40da48:	b.ne	40da78 <wcrtomb@plt+0x8d68>  // b.any
  40da4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40da50:	add	x1, x0, #0x7f4
  40da54:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40da58:	add	x0, x0, #0xb60
  40da5c:	bl	427080 <wcrtomb@plt+0x22370>
  40da60:	cmp	w0, #0x0
  40da64:	b.ne	40da78 <wcrtomb@plt+0x8d68>  // b.any
  40da68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40da6c:	add	x0, x0, #0x7f4
  40da70:	mov	w1, #0xfffffffe            	// #-2
  40da74:	str	w1, [x0]
  40da78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40da7c:	add	x0, x0, #0x7f4
  40da80:	ldr	w0, [x0]
  40da84:	str	w0, [sp, #44]
  40da88:	ldr	x0, [sp, #24]
  40da8c:	str	wzr, [x0]
  40da90:	ldr	w0, [sp, #44]
  40da94:	ldp	x29, x30, [sp], #48
  40da98:	ret
  40da9c:	stp	x29, x30, [sp, #-48]!
  40daa0:	mov	x29, sp
  40daa4:	str	w0, [sp, #44]
  40daa8:	str	x1, [sp, #32]
  40daac:	str	x2, [sp, #24]
  40dab0:	ldr	w1, [sp, #44]
  40dab4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dab8:	add	x6, x0, #0xb68
  40dabc:	ldr	x5, [sp, #24]
  40dac0:	ldr	x4, [sp, #32]
  40dac4:	adrp	x0, 40d000 <wcrtomb@plt+0x82f0>
  40dac8:	add	x3, x0, #0xa2c
  40dacc:	mov	x2, #0x4                   	// #4
  40dad0:	mov	w0, #0x0                   	// #0
  40dad4:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40dad8:	and	w0, w0, #0xff
  40dadc:	ldp	x29, x30, [sp], #48
  40dae0:	ret
  40dae4:	stp	x29, x30, [sp, #-48]!
  40dae8:	mov	x29, sp
  40daec:	str	w0, [sp, #44]
  40daf0:	str	x1, [sp, #32]
  40daf4:	str	x2, [sp, #24]
  40daf8:	ldr	w0, [sp, #44]
  40dafc:	lsr	w0, w0, #31
  40db00:	and	w0, w0, #0xff
  40db04:	mov	w7, w0
  40db08:	ldrsw	x1, [sp, #44]
  40db0c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40db10:	add	x6, x0, #0xb70
  40db14:	ldr	x5, [sp, #24]
  40db18:	ldr	x4, [sp, #32]
  40db1c:	mov	x3, #0x0                   	// #0
  40db20:	mov	x2, #0x4                   	// #4
  40db24:	mov	w0, w7
  40db28:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40db2c:	and	w0, w0, #0xff
  40db30:	ldp	x29, x30, [sp], #48
  40db34:	ret
  40db38:	stp	x29, x30, [sp, #-48]!
  40db3c:	mov	x29, sp
  40db40:	str	w0, [sp, #44]
  40db44:	str	x1, [sp, #32]
  40db48:	str	x2, [sp, #24]
  40db4c:	ldr	w0, [sp, #44]
  40db50:	lsr	w0, w0, #31
  40db54:	and	w0, w0, #0xff
  40db58:	mov	w7, w0
  40db5c:	ldrsw	x1, [sp, #44]
  40db60:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40db64:	add	x6, x0, #0xb78
  40db68:	ldr	x5, [sp, #24]
  40db6c:	ldr	x4, [sp, #32]
  40db70:	mov	x3, #0x0                   	// #0
  40db74:	mov	x2, #0x4                   	// #4
  40db78:	mov	w0, w7
  40db7c:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40db80:	and	w0, w0, #0xff
  40db84:	ldp	x29, x30, [sp], #48
  40db88:	ret
  40db8c:	stp	x29, x30, [sp, #-64]!
  40db90:	mov	x29, sp
  40db94:	str	w0, [sp, #44]
  40db98:	str	x1, [sp, #32]
  40db9c:	str	x2, [sp, #24]
  40dba0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40dba4:	add	x0, x0, #0x360
  40dba8:	ldr	w0, [x0]
  40dbac:	cmp	w0, #0x4
  40dbb0:	b.eq	40dbec <wcrtomb@plt+0x8edc>  // b.none
  40dbb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40dbb8:	add	x0, x0, #0x360
  40dbbc:	ldr	w0, [x0]
  40dbc0:	cmp	w0, #0x3
  40dbc4:	b.eq	40dbec <wcrtomb@plt+0x8edc>  // b.none
  40dbc8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40dbcc:	add	x0, x0, #0x360
  40dbd0:	ldr	w0, [x0]
  40dbd4:	cmp	w0, #0x6
  40dbd8:	b.eq	40dbec <wcrtomb@plt+0x8edc>  // b.none
  40dbdc:	str	wzr, [sp, #60]
  40dbe0:	ldr	w0, [sp, #44]
  40dbe4:	str	x0, [sp, #48]
  40dbe8:	b	40dbfc <wcrtomb@plt+0x8eec>
  40dbec:	str	wzr, [sp, #60]
  40dbf0:	ldr	w0, [sp, #44]
  40dbf4:	and	x0, x0, #0xfff
  40dbf8:	str	x0, [sp, #48]
  40dbfc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dc00:	add	x6, x0, #0xb80
  40dc04:	ldr	x5, [sp, #24]
  40dc08:	ldr	x4, [sp, #32]
  40dc0c:	mov	x3, #0x0                   	// #0
  40dc10:	mov	x2, #0x4                   	// #4
  40dc14:	ldr	x1, [sp, #48]
  40dc18:	ldr	w0, [sp, #60]
  40dc1c:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40dc20:	and	w0, w0, #0xff
  40dc24:	ldp	x29, x30, [sp], #64
  40dc28:	ret
  40dc2c:	stp	x29, x30, [sp, #-48]!
  40dc30:	mov	x29, sp
  40dc34:	str	x0, [sp, #40]
  40dc38:	str	x1, [sp, #32]
  40dc3c:	str	x2, [sp, #24]
  40dc40:	ldr	x0, [sp, #40]
  40dc44:	lsr	x0, x0, #63
  40dc48:	and	w0, w0, #0xff
  40dc4c:	mov	w7, w0
  40dc50:	ldr	x1, [sp, #40]
  40dc54:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dc58:	add	x6, x0, #0xb88
  40dc5c:	ldr	x5, [sp, #24]
  40dc60:	ldr	x4, [sp, #32]
  40dc64:	mov	x3, #0x0                   	// #0
  40dc68:	mov	x2, #0x8                   	// #8
  40dc6c:	mov	w0, w7
  40dc70:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40dc74:	and	w0, w0, #0xff
  40dc78:	ldp	x29, x30, [sp], #48
  40dc7c:	ret
  40dc80:	stp	x29, x30, [sp, #-48]!
  40dc84:	mov	x29, sp
  40dc88:	str	x0, [sp, #40]
  40dc8c:	str	x1, [sp, #32]
  40dc90:	str	x2, [sp, #24]
  40dc94:	ldr	x0, [sp, #40]
  40dc98:	lsr	x0, x0, #63
  40dc9c:	and	w0, w0, #0xff
  40dca0:	mov	w7, w0
  40dca4:	ldr	x1, [sp, #40]
  40dca8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dcac:	add	x6, x0, #0xb90
  40dcb0:	ldr	x5, [sp, #24]
  40dcb4:	ldr	x4, [sp, #32]
  40dcb8:	mov	x3, #0x0                   	// #0
  40dcbc:	mov	x2, #0x8                   	// #8
  40dcc0:	mov	w0, w7
  40dcc4:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40dcc8:	and	w0, w0, #0xff
  40dccc:	ldp	x29, x30, [sp], #48
  40dcd0:	ret
  40dcd4:	stp	x29, x30, [sp, #-48]!
  40dcd8:	mov	x29, sp
  40dcdc:	str	x0, [sp, #24]
  40dce0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40dce4:	add	x0, x0, #0x7f8
  40dce8:	ldr	w0, [x0]
  40dcec:	cmp	w0, #0x0
  40dcf0:	b.ne	40dd20 <wcrtomb@plt+0x9010>  // b.any
  40dcf4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40dcf8:	add	x1, x0, #0x7f8
  40dcfc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dd00:	add	x0, x0, #0xb60
  40dd04:	bl	426f60 <wcrtomb@plt+0x22250>
  40dd08:	cmp	w0, #0x0
  40dd0c:	b.ne	40dd20 <wcrtomb@plt+0x9010>  // b.any
  40dd10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40dd14:	add	x0, x0, #0x7f8
  40dd18:	mov	w1, #0xfffffffe            	// #-2
  40dd1c:	str	w1, [x0]
  40dd20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40dd24:	add	x0, x0, #0x7f8
  40dd28:	ldr	w0, [x0]
  40dd2c:	str	w0, [sp, #44]
  40dd30:	ldr	x0, [sp, #24]
  40dd34:	str	wzr, [x0]
  40dd38:	ldr	w0, [sp, #44]
  40dd3c:	ldp	x29, x30, [sp], #48
  40dd40:	ret
  40dd44:	stp	x29, x30, [sp, #-48]!
  40dd48:	mov	x29, sp
  40dd4c:	str	w0, [sp, #44]
  40dd50:	str	x1, [sp, #32]
  40dd54:	str	x2, [sp, #24]
  40dd58:	ldr	w1, [sp, #44]
  40dd5c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dd60:	add	x6, x0, #0xb98
  40dd64:	ldr	x5, [sp, #24]
  40dd68:	ldr	x4, [sp, #32]
  40dd6c:	adrp	x0, 40d000 <wcrtomb@plt+0x82f0>
  40dd70:	add	x3, x0, #0xcd4
  40dd74:	mov	x2, #0x4                   	// #4
  40dd78:	mov	w0, #0x0                   	// #0
  40dd7c:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40dd80:	and	w0, w0, #0xff
  40dd84:	ldp	x29, x30, [sp], #48
  40dd88:	ret
  40dd8c:	stp	x29, x30, [sp, #-48]!
  40dd90:	mov	x29, sp
  40dd94:	str	x0, [sp, #40]
  40dd98:	str	x1, [sp, #32]
  40dd9c:	str	x2, [sp, #24]
  40dda0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40dda4:	add	x6, x0, #0xba0
  40dda8:	ldr	x5, [sp, #24]
  40ddac:	ldr	x4, [sp, #32]
  40ddb0:	mov	x3, #0x0                   	// #0
  40ddb4:	mov	x2, #0x8                   	// #8
  40ddb8:	ldr	x1, [sp, #40]
  40ddbc:	mov	w0, #0x0                   	// #0
  40ddc0:	bl	40d75c <wcrtomb@plt+0x8a4c>
  40ddc4:	and	w0, w0, #0xff
  40ddc8:	ldp	x29, x30, [sp], #48
  40ddcc:	ret
  40ddd0:	stp	x29, x30, [sp, #-48]!
  40ddd4:	mov	x29, sp
  40ddd8:	str	x0, [sp, #40]
  40dddc:	str	x1, [sp, #32]
  40dde0:	str	x2, [sp, #24]
  40dde4:	ldr	x2, [sp, #24]
  40dde8:	ldr	x1, [sp, #40]
  40ddec:	ldr	x0, [sp, #32]
  40ddf0:	bl	40d2c4 <wcrtomb@plt+0x85b4>
  40ddf4:	ldr	x0, [sp, #24]
  40ddf8:	sub	x0, x0, #0x1
  40ddfc:	ldr	x1, [sp, #32]
  40de00:	add	x0, x1, x0
  40de04:	strb	wzr, [x0]
  40de08:	nop
  40de0c:	ldp	x29, x30, [sp], #48
  40de10:	ret
  40de14:	sub	sp, sp, #0x10
  40de18:	str	x0, [sp, #8]
  40de1c:	ldr	x0, [sp, #8]
  40de20:	ldr	w0, [x0, #16]
  40de24:	and	w0, w0, #0xf000
  40de28:	cmp	w0, #0x4, lsl #12
  40de2c:	b.ne	40de38 <wcrtomb@plt+0x9128>  // b.any
  40de30:	mov	w0, #0x1                   	// #1
  40de34:	b	40df4c <wcrtomb@plt+0x923c>
  40de38:	ldr	x0, [sp, #8]
  40de3c:	ldr	w0, [x0, #16]
  40de40:	and	w0, w0, #0xf000
  40de44:	cmp	w0, #0x8, lsl #12
  40de48:	b.eq	40de54 <wcrtomb@plt+0x9144>  // b.none
  40de4c:	mov	w0, #0x0                   	// #0
  40de50:	b	40df4c <wcrtomb@plt+0x923c>
  40de54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40de58:	add	x0, x0, #0x248
  40de5c:	ldrb	w0, [x0]
  40de60:	cmp	w0, #0x0
  40de64:	b.eq	40df10 <wcrtomb@plt+0x9200>  // b.none
  40de68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40de6c:	add	x0, x0, #0x2e9
  40de70:	ldrb	w0, [x0]
  40de74:	cmp	w0, #0x0
  40de78:	b.eq	40df00 <wcrtomb@plt+0x91f0>  // b.none
  40de7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40de80:	add	x0, x0, #0x3c0
  40de84:	ldrb	w0, [x0]
  40de88:	cmp	w0, #0x0
  40de8c:	b.eq	40df00 <wcrtomb@plt+0x91f0>  // b.none
  40de90:	ldr	x0, [sp, #8]
  40de94:	ldr	x1, [x0, #64]
  40de98:	ldr	x0, [sp, #8]
  40de9c:	ldr	x0, [x0, #48]
  40dea0:	add	x2, x0, #0x1ff
  40dea4:	cmp	x0, #0x0
  40dea8:	csel	x0, x2, x0, lt  // lt = tstop
  40deac:	asr	x0, x0, #9
  40deb0:	mov	x2, x0
  40deb4:	ldr	x0, [sp, #8]
  40deb8:	ldr	x0, [x0, #48]
  40debc:	and	x0, x0, #0x1ff
  40dec0:	cmp	x0, #0x0
  40dec4:	b.eq	40dee4 <wcrtomb@plt+0x91d4>  // b.none
  40dec8:	ldr	x0, [sp, #8]
  40decc:	ldr	x0, [x0, #48]
  40ded0:	add	x0, x0, #0x1ff
  40ded4:	cmp	x0, #0x3fe
  40ded8:	b.ls	40dee4 <wcrtomb@plt+0x91d4>  // b.plast
  40dedc:	mov	w0, #0x1                   	// #1
  40dee0:	b	40dee8 <wcrtomb@plt+0x91d8>
  40dee4:	mov	w0, #0x0                   	// #0
  40dee8:	sxtw	x0, w0
  40deec:	add	x0, x2, x0
  40def0:	cmp	x1, x0
  40def4:	b.ge	40df00 <wcrtomb@plt+0x91f0>  // b.tcont
  40def8:	mov	w0, #0x1                   	// #1
  40defc:	b	40df04 <wcrtomb@plt+0x91f4>
  40df00:	mov	w0, #0x0                   	// #0
  40df04:	and	w0, w0, #0x1
  40df08:	and	w0, w0, #0xff
  40df0c:	b	40df4c <wcrtomb@plt+0x923c>
  40df10:	ldr	x0, [sp, #8]
  40df14:	ldr	x0, [x0, #48]
  40df18:	cmp	x0, #0x0
  40df1c:	b.ne	40df38 <wcrtomb@plt+0x9228>  // b.any
  40df20:	ldr	x0, [sp, #8]
  40df24:	ldr	w1, [x0, #16]
  40df28:	mov	w0, #0x124                 	// #292
  40df2c:	and	w0, w1, w0
  40df30:	cmp	w0, #0x124
  40df34:	b.eq	40df40 <wcrtomb@plt+0x9230>  // b.none
  40df38:	mov	w0, #0x1                   	// #1
  40df3c:	b	40df44 <wcrtomb@plt+0x9234>
  40df40:	mov	w0, #0x0                   	// #0
  40df44:	and	w0, w0, #0x1
  40df48:	and	w0, w0, #0xff
  40df4c:	add	sp, sp, #0x10
  40df50:	ret
  40df54:	stp	x29, x30, [sp, #-48]!
  40df58:	mov	x29, sp
  40df5c:	str	x19, [sp, #16]
  40df60:	bl	406030 <wcrtomb@plt+0x1320>
  40df64:	str	x0, [sp, #40]
  40df68:	ldr	x0, [sp, #40]
  40df6c:	mov	x2, #0x200                 	// #512
  40df70:	mov	w1, #0x0                   	// #0
  40df74:	bl	4044d0 <memset@plt>
  40df78:	ldr	x0, [sp, #40]
  40df7c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40df80:	bl	406030 <wcrtomb@plt+0x1320>
  40df84:	str	x0, [sp, #40]
  40df88:	ldr	x19, [sp, #40]
  40df8c:	ldr	x0, [sp, #40]
  40df90:	bl	406138 <wcrtomb@plt+0x1428>
  40df94:	mov	x2, x0
  40df98:	mov	w1, #0x0                   	// #0
  40df9c:	mov	x0, x19
  40dfa0:	bl	4044d0 <memset@plt>
  40dfa4:	ldr	x0, [sp, #40]
  40dfa8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40dfac:	nop
  40dfb0:	ldr	x19, [sp, #16]
  40dfb4:	ldp	x29, x30, [sp], #48
  40dfb8:	ret
  40dfbc:	stp	x29, x30, [sp, #-64]!
  40dfc0:	mov	x29, sp
  40dfc4:	str	x0, [sp, #40]
  40dfc8:	str	x1, [sp, #32]
  40dfcc:	str	x2, [sp, #24]
  40dfd0:	bl	406030 <wcrtomb@plt+0x1320>
  40dfd4:	str	x0, [sp, #56]
  40dfd8:	ldr	x0, [sp, #56]
  40dfdc:	mov	x2, #0x200                 	// #512
  40dfe0:	mov	w1, #0x0                   	// #0
  40dfe4:	bl	4044d0 <memset@plt>
  40dfe8:	ldr	x0, [sp, #56]
  40dfec:	mov	x2, #0x64                  	// #100
  40dff0:	ldr	x1, [sp, #40]
  40dff4:	bl	40d338 <wcrtomb@plt+0x8628>
  40dff8:	ldr	x3, [sp, #32]
  40dffc:	ldr	x0, [sp, #56]
  40e000:	add	x0, x0, #0x7c
  40e004:	mov	x2, #0xc                   	// #12
  40e008:	mov	x1, x0
  40e00c:	mov	x0, x3
  40e010:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  40e014:	ldr	x0, [sp, #24]
  40e018:	cmp	x0, #0x0
  40e01c:	b.lt	40e03c <wcrtomb@plt+0x932c>  // b.tstop
  40e020:	ldr	x0, [sp, #24]
  40e024:	mov	x2, #0x1ffffffff           	// #8589934591
  40e028:	mov	x1, #0x1ffffffff           	// #8589934591
  40e02c:	cmp	x0, x2
  40e030:	csel	x0, x0, x1, ls  // ls = plast
  40e034:	mov	x3, x0
  40e038:	b	40e040 <wcrtomb@plt+0x9330>
  40e03c:	mov	x3, #0x0                   	// #0
  40e040:	ldr	x0, [sp, #56]
  40e044:	add	x0, x0, #0x88
  40e048:	mov	x2, #0xc                   	// #12
  40e04c:	mov	x1, x0
  40e050:	mov	x0, x3
  40e054:	bl	40dc80 <wcrtomb@plt+0x8f70>
  40e058:	ldr	x0, [sp, #56]
  40e05c:	add	x0, x0, #0x64
  40e060:	mov	x2, #0x8                   	// #8
  40e064:	mov	x1, x0
  40e068:	mov	w0, #0x81a4                	// #33188
  40e06c:	bl	40db8c <wcrtomb@plt+0x8e7c>
  40e070:	ldr	x0, [sp, #56]
  40e074:	add	x0, x0, #0x6c
  40e078:	mov	x2, #0x8                   	// #8
  40e07c:	mov	x1, x0
  40e080:	mov	w0, #0x0                   	// #0
  40e084:	bl	40dd44 <wcrtomb@plt+0x9034>
  40e088:	ldr	x0, [sp, #56]
  40e08c:	add	x0, x0, #0x74
  40e090:	mov	x2, #0x8                   	// #8
  40e094:	mov	x1, x0
  40e098:	mov	w0, #0x0                   	// #0
  40e09c:	bl	40da9c <wcrtomb@plt+0x8d8c>
  40e0a0:	ldr	x0, [sp, #56]
  40e0a4:	add	x3, x0, #0x101
  40e0a8:	mov	x2, #0x6                   	// #6
  40e0ac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e0b0:	add	x1, x0, #0xbb0
  40e0b4:	mov	x0, x3
  40e0b8:	bl	404020 <memcpy@plt>
  40e0bc:	ldr	x0, [sp, #56]
  40e0c0:	add	x3, x0, #0x107
  40e0c4:	mov	x2, #0x2                   	// #2
  40e0c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e0cc:	add	x1, x0, #0xbb8
  40e0d0:	mov	x0, x3
  40e0d4:	bl	404020 <memcpy@plt>
  40e0d8:	ldr	x0, [sp, #56]
  40e0dc:	ldp	x29, x30, [sp], #64
  40e0e0:	ret
  40e0e4:	stp	x29, x30, [sp, #-48]!
  40e0e8:	mov	x29, sp
  40e0ec:	str	x0, [sp, #24]
  40e0f0:	bl	406030 <wcrtomb@plt+0x1320>
  40e0f4:	str	x0, [sp, #40]
  40e0f8:	ldr	x0, [sp, #40]
  40e0fc:	mov	x2, #0x200                 	// #512
  40e100:	mov	w1, #0x0                   	// #0
  40e104:	bl	4044d0 <memset@plt>
  40e108:	ldr	x3, [sp, #40]
  40e10c:	ldr	x0, [sp, #24]
  40e110:	ldr	x0, [x0, #8]
  40e114:	mov	x2, #0x64                  	// #100
  40e118:	mov	x1, x0
  40e11c:	mov	x0, x3
  40e120:	bl	40d338 <wcrtomb@plt+0x8628>
  40e124:	ldr	x0, [sp, #40]
  40e128:	ldp	x29, x30, [sp], #48
  40e12c:	ret
  40e130:	stp	x29, x30, [sp, #-80]!
  40e134:	mov	x29, sp
  40e138:	str	x0, [sp, #40]
  40e13c:	str	x1, [sp, #32]
  40e140:	strb	w2, [sp, #31]
  40e144:	ldr	x0, [sp, #32]
  40e148:	bl	4040b0 <strlen@plt>
  40e14c:	add	x0, x0, #0x1
  40e150:	str	x0, [sp, #72]
  40e154:	mov	x2, #0x0                   	// #0
  40e158:	ldr	x1, [sp, #72]
  40e15c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e160:	add	x0, x0, #0xbc0
  40e164:	bl	40dfbc <wcrtomb@plt+0x92ac>
  40e168:	str	x0, [sp, #56]
  40e16c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e170:	add	x0, x0, #0x2d0
  40e174:	ldrb	w0, [x0]
  40e178:	eor	w0, w0, #0x1
  40e17c:	and	w0, w0, #0xff
  40e180:	cmp	w0, #0x0
  40e184:	b.eq	40e204 <wcrtomb@plt+0x94f4>  // b.none
  40e188:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e18c:	add	x0, x0, #0x800
  40e190:	ldr	x0, [x0]
  40e194:	cmp	x0, #0x0
  40e198:	b.ne	40e1bc <wcrtomb@plt+0x94ac>  // b.any
  40e19c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e1a0:	add	x1, x0, #0x800
  40e1a4:	mov	w0, #0x0                   	// #0
  40e1a8:	bl	426d40 <wcrtomb@plt+0x22030>
  40e1ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e1b0:	add	x1, x0, #0x808
  40e1b4:	mov	w0, #0x0                   	// #0
  40e1b8:	bl	426e50 <wcrtomb@plt+0x22140>
  40e1bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e1c0:	add	x0, x0, #0x800
  40e1c4:	ldr	x3, [x0]
  40e1c8:	ldr	x0, [sp, #56]
  40e1cc:	add	x0, x0, #0x109
  40e1d0:	mov	x2, #0x20                  	// #32
  40e1d4:	mov	x1, x0
  40e1d8:	mov	x0, x3
  40e1dc:	bl	40ddd0 <wcrtomb@plt+0x90c0>
  40e1e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e1e4:	add	x0, x0, #0x808
  40e1e8:	ldr	x3, [x0]
  40e1ec:	ldr	x0, [sp, #56]
  40e1f0:	add	x0, x0, #0x129
  40e1f4:	mov	x2, #0x20                  	// #32
  40e1f8:	mov	x1, x0
  40e1fc:	mov	x0, x3
  40e200:	bl	40ddd0 <wcrtomb@plt+0x90c0>
  40e204:	ldr	x0, [sp, #56]
  40e208:	add	x0, x0, #0x101
  40e20c:	mov	x1, #0x7375                	// #29557
  40e210:	movk	x1, #0x6174, lsl #16
  40e214:	movk	x1, #0x2072, lsl #32
  40e218:	movk	x1, #0x20, lsl #48
  40e21c:	str	x1, [x0]
  40e220:	ldr	x0, [sp, #56]
  40e224:	ldrb	w1, [sp, #31]
  40e228:	strb	w1, [x0, #156]
  40e22c:	mov	x2, #0xffffffffffffffff    	// #-1
  40e230:	ldr	x1, [sp, #56]
  40e234:	ldr	x0, [sp, #40]
  40e238:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  40e23c:	bl	406030 <wcrtomb@plt+0x1320>
  40e240:	str	x0, [sp, #56]
  40e244:	ldr	x0, [sp, #56]
  40e248:	bl	406138 <wcrtomb@plt+0x1428>
  40e24c:	str	x0, [sp, #64]
  40e250:	b	40e2b0 <wcrtomb@plt+0x95a0>
  40e254:	ldr	x0, [sp, #56]
  40e258:	ldr	x2, [sp, #64]
  40e25c:	ldr	x1, [sp, #32]
  40e260:	bl	404020 <memcpy@plt>
  40e264:	ldr	x1, [sp, #32]
  40e268:	ldr	x0, [sp, #64]
  40e26c:	add	x0, x1, x0
  40e270:	str	x0, [sp, #32]
  40e274:	ldr	x1, [sp, #72]
  40e278:	ldr	x0, [sp, #64]
  40e27c:	sub	x0, x1, x0
  40e280:	str	x0, [sp, #72]
  40e284:	ldr	x0, [sp, #64]
  40e288:	sub	x0, x0, #0x1
  40e28c:	and	x0, x0, #0xfffffffffffffe00
  40e290:	ldr	x1, [sp, #56]
  40e294:	add	x0, x1, x0
  40e298:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40e29c:	bl	406030 <wcrtomb@plt+0x1320>
  40e2a0:	str	x0, [sp, #56]
  40e2a4:	ldr	x0, [sp, #56]
  40e2a8:	bl	406138 <wcrtomb@plt+0x1428>
  40e2ac:	str	x0, [sp, #64]
  40e2b0:	ldr	x1, [sp, #64]
  40e2b4:	ldr	x0, [sp, #72]
  40e2b8:	cmp	x1, x0
  40e2bc:	b.cc	40e254 <wcrtomb@plt+0x9544>  // b.lo, b.ul, b.last
  40e2c0:	ldr	x0, [sp, #56]
  40e2c4:	ldr	x2, [sp, #72]
  40e2c8:	ldr	x1, [sp, #32]
  40e2cc:	bl	404020 <memcpy@plt>
  40e2d0:	ldr	x1, [sp, #56]
  40e2d4:	ldr	x0, [sp, #72]
  40e2d8:	add	x3, x1, x0
  40e2dc:	ldr	x1, [sp, #64]
  40e2e0:	ldr	x0, [sp, #72]
  40e2e4:	sub	x0, x1, x0
  40e2e8:	mov	x2, x0
  40e2ec:	mov	w1, #0x0                   	// #0
  40e2f0:	mov	x0, x3
  40e2f4:	bl	4044d0 <memset@plt>
  40e2f8:	ldr	x0, [sp, #72]
  40e2fc:	sub	x0, x0, #0x1
  40e300:	and	x0, x0, #0xfffffffffffffe00
  40e304:	ldr	x1, [sp, #56]
  40e308:	add	x0, x1, x0
  40e30c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40e310:	nop
  40e314:	ldp	x29, x30, [sp], #80
  40e318:	ret
  40e31c:	sub	sp, sp, #0x20
  40e320:	str	x0, [sp, #8]
  40e324:	str	x1, [sp]
  40e328:	ldr	x0, [sp]
  40e32c:	cmp	x0, #0x9c
  40e330:	b.ls	40e340 <wcrtomb@plt+0x9630>  // b.plast
  40e334:	mov	x0, #0x9c                  	// #156
  40e338:	str	x0, [sp]
  40e33c:	b	40e368 <wcrtomb@plt+0x9658>
  40e340:	ldr	x0, [sp]
  40e344:	sub	x0, x0, #0x1
  40e348:	ldr	x1, [sp, #8]
  40e34c:	add	x0, x1, x0
  40e350:	ldrb	w0, [x0]
  40e354:	cmp	w0, #0x2f
  40e358:	b.ne	40e368 <wcrtomb@plt+0x9658>  // b.any
  40e35c:	ldr	x0, [sp]
  40e360:	sub	x0, x0, #0x1
  40e364:	str	x0, [sp]
  40e368:	ldr	x0, [sp]
  40e36c:	sub	x0, x0, #0x1
  40e370:	str	x0, [sp, #24]
  40e374:	b	40e39c <wcrtomb@plt+0x968c>
  40e378:	ldr	x1, [sp, #8]
  40e37c:	ldr	x0, [sp, #24]
  40e380:	add	x0, x1, x0
  40e384:	ldrb	w0, [x0]
  40e388:	cmp	w0, #0x2f
  40e38c:	b.eq	40e3ac <wcrtomb@plt+0x969c>  // b.none
  40e390:	ldr	x0, [sp, #24]
  40e394:	sub	x0, x0, #0x1
  40e398:	str	x0, [sp, #24]
  40e39c:	ldr	x0, [sp, #24]
  40e3a0:	cmp	x0, #0x0
  40e3a4:	b.ne	40e378 <wcrtomb@plt+0x9668>  // b.any
  40e3a8:	b	40e3b0 <wcrtomb@plt+0x96a0>
  40e3ac:	nop
  40e3b0:	ldr	x0, [sp, #24]
  40e3b4:	add	sp, sp, #0x20
  40e3b8:	ret
  40e3bc:	stp	x29, x30, [sp, #-80]!
  40e3c0:	mov	x29, sp
  40e3c4:	str	x19, [sp, #16]
  40e3c8:	str	x0, [sp, #40]
  40e3cc:	ldr	x0, [sp, #40]
  40e3d0:	bl	4040b0 <strlen@plt>
  40e3d4:	str	x0, [sp, #72]
  40e3d8:	ldr	x0, [sp, #72]
  40e3dc:	cmp	x0, #0x100
  40e3e0:	b.ls	40e450 <wcrtomb@plt+0x9740>  // b.plast
  40e3e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e3e8:	add	x0, x0, #0x420
  40e3ec:	ldr	x0, [x0]
  40e3f0:	cmp	x0, #0x0
  40e3f4:	b.eq	40e408 <wcrtomb@plt+0x96f8>  // b.none
  40e3f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e3fc:	add	x0, x0, #0x420
  40e400:	ldr	x0, [x0]
  40e404:	blr	x0
  40e408:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e40c:	add	x0, x0, #0xbd0
  40e410:	bl	404c60 <gettext@plt>
  40e414:	mov	x19, x0
  40e418:	ldr	x0, [sp, #40]
  40e41c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40e420:	mov	w4, #0x100                 	// #256
  40e424:	mov	x3, x0
  40e428:	mov	x2, x19
  40e42c:	mov	w1, #0x0                   	// #0
  40e430:	mov	w0, #0x0                   	// #0
  40e434:	bl	404100 <error@plt>
  40e438:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e43c:	add	x0, x0, #0xdb0
  40e440:	mov	w1, #0x2                   	// #2
  40e444:	str	w1, [x0]
  40e448:	mov	x0, #0x0                   	// #0
  40e44c:	b	40e564 <wcrtomb@plt+0x9854>
  40e450:	ldr	x1, [sp, #72]
  40e454:	ldr	x0, [sp, #40]
  40e458:	bl	40e31c <wcrtomb@plt+0x960c>
  40e45c:	str	x0, [sp, #64]
  40e460:	ldr	x0, [sp, #64]
  40e464:	cmp	x0, #0x0
  40e468:	b.eq	40e498 <wcrtomb@plt+0x9788>  // b.none
  40e46c:	ldr	x1, [sp, #72]
  40e470:	ldr	x0, [sp, #64]
  40e474:	sub	x0, x1, x0
  40e478:	sub	x0, x0, #0x1
  40e47c:	str	x0, [sp, #56]
  40e480:	ldr	x0, [sp, #56]
  40e484:	cmp	x0, #0x64
  40e488:	b.hi	40e498 <wcrtomb@plt+0x9788>  // b.pmore
  40e48c:	ldr	x0, [sp, #56]
  40e490:	cmp	x0, #0x0
  40e494:	b.ne	40e500 <wcrtomb@plt+0x97f0>  // b.any
  40e498:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e49c:	add	x0, x0, #0x420
  40e4a0:	ldr	x0, [x0]
  40e4a4:	cmp	x0, #0x0
  40e4a8:	b.eq	40e4bc <wcrtomb@plt+0x97ac>  // b.none
  40e4ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e4b0:	add	x0, x0, #0x420
  40e4b4:	ldr	x0, [x0]
  40e4b8:	blr	x0
  40e4bc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e4c0:	add	x0, x0, #0xc00
  40e4c4:	bl	404c60 <gettext@plt>
  40e4c8:	mov	x19, x0
  40e4cc:	ldr	x0, [sp, #40]
  40e4d0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40e4d4:	mov	x3, x0
  40e4d8:	mov	x2, x19
  40e4dc:	mov	w1, #0x0                   	// #0
  40e4e0:	mov	w0, #0x0                   	// #0
  40e4e4:	bl	404100 <error@plt>
  40e4e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e4ec:	add	x0, x0, #0xdb0
  40e4f0:	mov	w1, #0x2                   	// #2
  40e4f4:	str	w1, [x0]
  40e4f8:	mov	x0, #0x0                   	// #0
  40e4fc:	b	40e564 <wcrtomb@plt+0x9854>
  40e500:	bl	406030 <wcrtomb@plt+0x1320>
  40e504:	str	x0, [sp, #48]
  40e508:	ldr	x0, [sp, #48]
  40e50c:	mov	x2, #0x200                 	// #512
  40e510:	mov	w1, #0x0                   	// #0
  40e514:	bl	4044d0 <memset@plt>
  40e518:	ldr	x0, [sp, #48]
  40e51c:	add	x0, x0, #0x159
  40e520:	ldr	x2, [sp, #64]
  40e524:	ldr	x1, [sp, #40]
  40e528:	bl	404020 <memcpy@plt>
  40e52c:	ldr	x3, [sp, #48]
  40e530:	ldr	x0, [sp, #64]
  40e534:	add	x0, x0, #0x1
  40e538:	ldr	x1, [sp, #40]
  40e53c:	add	x4, x1, x0
  40e540:	ldr	x1, [sp, #72]
  40e544:	ldr	x0, [sp, #64]
  40e548:	sub	x0, x1, x0
  40e54c:	sub	x0, x0, #0x1
  40e550:	mov	x2, x0
  40e554:	mov	x1, x4
  40e558:	mov	x0, x3
  40e55c:	bl	404020 <memcpy@plt>
  40e560:	ldr	x0, [sp, #48]
  40e564:	ldr	x19, [sp, #16]
  40e568:	ldp	x29, x30, [sp], #80
  40e56c:	ret
  40e570:	stp	x29, x30, [sp, #-48]!
  40e574:	mov	x29, sp
  40e578:	str	x19, [sp, #16]
  40e57c:	str	x0, [sp, #40]
  40e580:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e584:	add	x0, x0, #0x360
  40e588:	ldr	w0, [x0]
  40e58c:	cmp	w0, #0x6
  40e590:	cset	w1, hi  // hi = pmore
  40e594:	and	w1, w1, #0xff
  40e598:	cmp	w1, #0x0
  40e59c:	b.ne	40e694 <wcrtomb@plt+0x9984>  // b.any
  40e5a0:	mov	x1, #0x1                   	// #1
  40e5a4:	lsl	x0, x1, x0
  40e5a8:	mov	x1, #0x2a                  	// #42
  40e5ac:	and	x1, x0, x1
  40e5b0:	cmp	x1, #0x0
  40e5b4:	cset	w1, ne  // ne = any
  40e5b8:	and	w1, w1, #0xff
  40e5bc:	cmp	w1, #0x0
  40e5c0:	b.ne	40e610 <wcrtomb@plt+0x9900>  // b.any
  40e5c4:	mov	x1, #0x44                  	// #68
  40e5c8:	and	x1, x0, x1
  40e5cc:	cmp	x1, #0x0
  40e5d0:	cset	w1, ne  // ne = any
  40e5d4:	and	w1, w1, #0xff
  40e5d8:	cmp	w1, #0x0
  40e5dc:	b.ne	40e678 <wcrtomb@plt+0x9968>  // b.any
  40e5e0:	and	x0, x0, #0x10
  40e5e4:	cmp	x0, #0x0
  40e5e8:	cset	w0, ne  // ne = any
  40e5ec:	and	w0, w0, #0xff
  40e5f0:	cmp	w0, #0x0
  40e5f4:	b.eq	40e694 <wcrtomb@plt+0x9984>  // b.none
  40e5f8:	mov	x2, #0x0                   	// #0
  40e5fc:	ldr	x1, [sp, #40]
  40e600:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e604:	add	x0, x0, #0xc38
  40e608:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40e60c:	b	40e698 <wcrtomb@plt+0x9988>
  40e610:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e614:	add	x0, x0, #0x420
  40e618:	ldr	x0, [x0]
  40e61c:	cmp	x0, #0x0
  40e620:	b.eq	40e634 <wcrtomb@plt+0x9924>  // b.none
  40e624:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e628:	add	x0, x0, #0x420
  40e62c:	ldr	x0, [x0]
  40e630:	blr	x0
  40e634:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e638:	add	x0, x0, #0xc48
  40e63c:	bl	404c60 <gettext@plt>
  40e640:	mov	x19, x0
  40e644:	ldr	x0, [sp, #40]
  40e648:	ldr	x0, [x0, #24]
  40e64c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40e650:	mov	x3, x0
  40e654:	mov	x2, x19
  40e658:	mov	w1, #0x0                   	// #0
  40e65c:	mov	w0, #0x0                   	// #0
  40e660:	bl	404100 <error@plt>
  40e664:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e668:	add	x0, x0, #0xdb0
  40e66c:	mov	w1, #0x2                   	// #2
  40e670:	str	w1, [x0]
  40e674:	b	40e698 <wcrtomb@plt+0x9988>
  40e678:	ldr	x0, [sp, #40]
  40e67c:	ldr	x0, [x0, #24]
  40e680:	mov	w2, #0x4b                  	// #75
  40e684:	mov	x1, x0
  40e688:	ldr	x0, [sp, #40]
  40e68c:	bl	40e130 <wcrtomb@plt+0x9420>
  40e690:	b	40e698 <wcrtomb@plt+0x9988>
  40e694:	bl	404710 <abort@plt>
  40e698:	nop
  40e69c:	ldr	x19, [sp, #16]
  40e6a0:	ldp	x29, x30, [sp], #48
  40e6a4:	ret
  40e6a8:	stp	x29, x30, [sp, #-48]!
  40e6ac:	mov	x29, sp
  40e6b0:	str	x19, [sp, #16]
  40e6b4:	str	x0, [sp, #40]
  40e6b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e6bc:	add	x0, x0, #0x360
  40e6c0:	ldr	w0, [x0]
  40e6c4:	cmp	w0, #0x6
  40e6c8:	b.eq	40e7c4 <wcrtomb@plt+0x9ab4>  // b.none
  40e6cc:	cmp	w0, #0x6
  40e6d0:	b.hi	40e7e0 <wcrtomb@plt+0x9ad0>  // b.pmore
  40e6d4:	cmp	w0, #0x5
  40e6d8:	b.eq	40e7b4 <wcrtomb@plt+0x9aa4>  // b.none
  40e6dc:	cmp	w0, #0x5
  40e6e0:	b.hi	40e7e0 <wcrtomb@plt+0x9ad0>  // b.pmore
  40e6e4:	cmp	w0, #0x4
  40e6e8:	b.eq	40e718 <wcrtomb@plt+0x9a08>  // b.none
  40e6ec:	cmp	w0, #0x4
  40e6f0:	b.hi	40e7e0 <wcrtomb@plt+0x9ad0>  // b.pmore
  40e6f4:	cmp	w0, #0x3
  40e6f8:	b.eq	40e7b4 <wcrtomb@plt+0x9aa4>  // b.none
  40e6fc:	cmp	w0, #0x3
  40e700:	b.hi	40e7e0 <wcrtomb@plt+0x9ad0>  // b.pmore
  40e704:	cmp	w0, #0x1
  40e708:	b.eq	40e730 <wcrtomb@plt+0x9a20>  // b.none
  40e70c:	cmp	w0, #0x2
  40e710:	b.eq	40e7c4 <wcrtomb@plt+0x9ab4>  // b.none
  40e714:	b	40e7e0 <wcrtomb@plt+0x9ad0>
  40e718:	mov	x2, #0x0                   	// #0
  40e71c:	ldr	x1, [sp, #40]
  40e720:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e724:	add	x0, x0, #0xc70
  40e728:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40e72c:	b	40e7e8 <wcrtomb@plt+0x9ad8>
  40e730:	ldr	x0, [sp, #40]
  40e734:	ldr	x0, [x0, #8]
  40e738:	bl	4040b0 <strlen@plt>
  40e73c:	cmp	x0, #0x63
  40e740:	b.ls	40e7e4 <wcrtomb@plt+0x9ad4>  // b.plast
  40e744:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e748:	add	x0, x0, #0x420
  40e74c:	ldr	x0, [x0]
  40e750:	cmp	x0, #0x0
  40e754:	b.eq	40e768 <wcrtomb@plt+0x9a58>  // b.none
  40e758:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e75c:	add	x0, x0, #0x420
  40e760:	ldr	x0, [x0]
  40e764:	blr	x0
  40e768:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e76c:	add	x0, x0, #0xbd0
  40e770:	bl	404c60 <gettext@plt>
  40e774:	mov	x19, x0
  40e778:	ldr	x0, [sp, #40]
  40e77c:	ldr	x0, [x0, #8]
  40e780:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40e784:	mov	w4, #0x63                  	// #99
  40e788:	mov	x3, x0
  40e78c:	mov	x2, x19
  40e790:	mov	w1, #0x0                   	// #0
  40e794:	mov	w0, #0x0                   	// #0
  40e798:	bl	404100 <error@plt>
  40e79c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40e7a0:	add	x0, x0, #0xdb0
  40e7a4:	mov	w1, #0x2                   	// #2
  40e7a8:	str	w1, [x0]
  40e7ac:	mov	x0, #0x0                   	// #0
  40e7b0:	b	40e7f0 <wcrtomb@plt+0x9ae0>
  40e7b4:	ldr	x0, [sp, #40]
  40e7b8:	ldr	x0, [x0, #8]
  40e7bc:	bl	40e3bc <wcrtomb@plt+0x96ac>
  40e7c0:	b	40e7f0 <wcrtomb@plt+0x9ae0>
  40e7c4:	ldr	x0, [sp, #40]
  40e7c8:	ldr	x0, [x0, #8]
  40e7cc:	mov	w2, #0x4c                  	// #76
  40e7d0:	mov	x1, x0
  40e7d4:	ldr	x0, [sp, #40]
  40e7d8:	bl	40e130 <wcrtomb@plt+0x9420>
  40e7dc:	b	40e7e8 <wcrtomb@plt+0x9ad8>
  40e7e0:	bl	404710 <abort@plt>
  40e7e4:	nop
  40e7e8:	ldr	x0, [sp, #40]
  40e7ec:	bl	40e0e4 <wcrtomb@plt+0x93d4>
  40e7f0:	ldr	x19, [sp, #16]
  40e7f4:	ldp	x29, x30, [sp], #48
  40e7f8:	ret
  40e7fc:	sub	sp, sp, #0x250
  40e800:	stp	x29, x30, [sp]
  40e804:	mov	x29, sp
  40e808:	strb	w0, [sp, #47]
  40e80c:	str	x1, [sp, #32]
  40e810:	str	x2, [sp, #24]
  40e814:	ldr	x0, [sp, #32]
  40e818:	ldr	x0, [x0, #360]
  40e81c:	cmp	x0, #0x0
  40e820:	b.ne	40e834 <wcrtomb@plt+0x9b24>  // b.any
  40e824:	ldr	x0, [sp, #32]
  40e828:	ldr	x0, [x0, #344]
  40e82c:	cmp	x0, #0x0
  40e830:	b.ne	40e83c <wcrtomb@plt+0x9b2c>  // b.any
  40e834:	ldr	x0, [sp, #24]
  40e838:	b	40e930 <wcrtomb@plt+0x9c20>
  40e83c:	ldr	x0, [sp, #32]
  40e840:	add	x0, x0, #0x158
  40e844:	bl	4196d0 <wcrtomb@plt+0x149c0>
  40e848:	ldr	x1, [sp, #24]
  40e84c:	add	x0, sp, #0x30
  40e850:	mov	x3, x1
  40e854:	mov	x1, #0x200                 	// #512
  40e858:	mov	x2, x1
  40e85c:	mov	x1, x3
  40e860:	bl	404020 <memcpy@plt>
  40e864:	ldrb	w0, [sp, #47]
  40e868:	cmp	w0, #0x0
  40e86c:	b.eq	40e894 <wcrtomb@plt+0x9b84>  // b.none
  40e870:	mov	w0, #0x67                  	// #103
  40e874:	str	w0, [sp, #580]
  40e878:	bl	418024 <wcrtomb@plt+0x13314>
  40e87c:	str	x0, [sp, #584]
  40e880:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e884:	add	x0, x0, #0x2f8
  40e888:	ldr	x0, [x0]
  40e88c:	str	x0, [sp, #568]
  40e890:	b	40e8d8 <wcrtomb@plt+0x9bc8>
  40e894:	mov	w0, #0x78                  	// #120
  40e898:	str	w0, [sp, #580]
  40e89c:	ldr	x0, [sp, #32]
  40e8a0:	bl	417fcc <wcrtomb@plt+0x132bc>
  40e8a4:	str	x0, [sp, #584]
  40e8a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e8ac:	add	x0, x0, #0x68
  40e8b0:	ldr	w0, [x0]
  40e8b4:	cmp	w0, #0x0
  40e8b8:	b.eq	40e8cc <wcrtomb@plt+0x9bbc>  // b.none
  40e8bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e8c0:	add	x0, x0, #0x348
  40e8c4:	ldr	x0, [x0]
  40e8c8:	b	40e8d4 <wcrtomb@plt+0x9bc4>
  40e8cc:	ldr	x0, [sp, #32]
  40e8d0:	ldr	x0, [x0, #176]
  40e8d4:	str	x0, [sp, #568]
  40e8d8:	ldr	w0, [sp, #580]
  40e8dc:	and	w4, w0, #0xff
  40e8e0:	ldr	x0, [sp, #32]
  40e8e4:	add	x0, x0, #0x158
  40e8e8:	mov	x3, x0
  40e8ec:	ldr	x2, [sp, #568]
  40e8f0:	ldr	x1, [sp, #584]
  40e8f4:	mov	w0, w4
  40e8f8:	bl	418114 <wcrtomb@plt+0x13404>
  40e8fc:	ldr	x0, [sp, #584]
  40e900:	bl	404880 <free@plt>
  40e904:	bl	406030 <wcrtomb@plt+0x1320>
  40e908:	str	x0, [sp, #560]
  40e90c:	ldr	x0, [sp, #560]
  40e910:	mov	x3, x0
  40e914:	add	x0, sp, #0x30
  40e918:	mov	x1, #0x200                 	// #512
  40e91c:	mov	x2, x1
  40e920:	mov	x1, x0
  40e924:	mov	x0, x3
  40e928:	bl	404020 <memcpy@plt>
  40e92c:	ldr	x0, [sp, #560]
  40e930:	ldp	x29, x30, [sp]
  40e934:	add	sp, sp, #0x250
  40e938:	ret
  40e93c:	stp	x29, x30, [sp, #-48]!
  40e940:	mov	x29, sp
  40e944:	str	x19, [sp, #16]
  40e948:	str	x0, [sp, #40]
  40e94c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e950:	add	x0, x0, #0x360
  40e954:	ldr	w0, [x0]
  40e958:	cmp	w0, #0x4
  40e95c:	b.ne	40e9a0 <wcrtomb@plt+0x9c90>  // b.any
  40e960:	ldr	x0, [sp, #40]
  40e964:	ldr	x0, [x0, #8]
  40e968:	bl	437a90 <wcrtomb@plt+0x32d80>
  40e96c:	and	w0, w0, #0xff
  40e970:	eor	w0, w0, #0x1
  40e974:	and	w0, w0, #0xff
  40e978:	cmp	w0, #0x0
  40e97c:	b.eq	40e9a0 <wcrtomb@plt+0x9c90>  // b.none
  40e980:	mov	x2, #0x0                   	// #0
  40e984:	ldr	x1, [sp, #40]
  40e988:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40e98c:	add	x0, x0, #0xc70
  40e990:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40e994:	ldr	x0, [sp, #40]
  40e998:	bl	40e0e4 <wcrtomb@plt+0x93d4>
  40e99c:	b	40e9e8 <wcrtomb@plt+0x9cd8>
  40e9a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40e9a4:	add	x0, x0, #0x360
  40e9a8:	ldr	w0, [x0]
  40e9ac:	cmp	w0, #0x2
  40e9b0:	b.ne	40e9bc <wcrtomb@plt+0x9cac>  // b.any
  40e9b4:	mov	x19, #0x63                  	// #99
  40e9b8:	b	40e9c0 <wcrtomb@plt+0x9cb0>
  40e9bc:	mov	x19, #0x64                  	// #100
  40e9c0:	ldr	x0, [sp, #40]
  40e9c4:	ldr	x0, [x0, #8]
  40e9c8:	bl	4040b0 <strlen@plt>
  40e9cc:	cmp	x19, x0
  40e9d0:	b.cs	40e9e0 <wcrtomb@plt+0x9cd0>  // b.hs, b.nlast
  40e9d4:	ldr	x0, [sp, #40]
  40e9d8:	bl	40e6a8 <wcrtomb@plt+0x9998>
  40e9dc:	b	40e9e8 <wcrtomb@plt+0x9cd8>
  40e9e0:	ldr	x0, [sp, #40]
  40e9e4:	bl	40e0e4 <wcrtomb@plt+0x93d4>
  40e9e8:	ldr	x19, [sp, #16]
  40e9ec:	ldp	x29, x30, [sp], #48
  40e9f0:	ret
  40e9f4:	stp	x29, x30, [sp, #-128]!
  40e9f8:	mov	x29, sp
  40e9fc:	str	x19, [sp, #16]
  40ea00:	str	x0, [sp, #40]
  40ea04:	str	xzr, [sp, #80]
  40ea08:	str	xzr, [sp, #72]
  40ea0c:	ldr	x0, [sp, #40]
  40ea10:	bl	40e93c <wcrtomb@plt+0x9c2c>
  40ea14:	str	x0, [sp, #96]
  40ea18:	ldr	x0, [sp, #96]
  40ea1c:	cmp	x0, #0x0
  40ea20:	b.ne	40ea2c <wcrtomb@plt+0x9d1c>  // b.any
  40ea24:	mov	x0, #0x0                   	// #0
  40ea28:	b	40f408 <wcrtomb@plt+0xa6f8>
  40ea2c:	ldr	x0, [sp, #40]
  40ea30:	ldr	w3, [x0, #112]
  40ea34:	ldr	x0, [sp, #40]
  40ea38:	add	x0, x0, #0x70
  40ea3c:	add	x1, sp, #0x50
  40ea40:	mov	x2, x1
  40ea44:	mov	x1, x0
  40ea48:	mov	w0, w3
  40ea4c:	bl	423a28 <wcrtomb@plt+0x1ed18>
  40ea50:	ldr	x0, [sp, #40]
  40ea54:	ldr	w3, [x0, #116]
  40ea58:	ldr	x0, [sp, #40]
  40ea5c:	add	x0, x0, #0x74
  40ea60:	add	x1, sp, #0x48
  40ea64:	mov	x2, x1
  40ea68:	mov	x1, x0
  40ea6c:	mov	w0, w3
  40ea70:	bl	423b90 <wcrtomb@plt+0x1ee80>
  40ea74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ea78:	add	x0, x0, #0x288
  40ea7c:	ldr	x0, [x0]
  40ea80:	cmp	x0, #0x0
  40ea84:	b.eq	40eaf0 <wcrtomb@plt+0x9de0>  // b.none
  40ea88:	ldr	x0, [sp, #40]
  40ea8c:	ldr	w0, [x0, #104]
  40ea90:	and	w19, w0, #0xfffff000
  40ea94:	ldr	x0, [sp, #40]
  40ea98:	ldr	w5, [x0, #104]
  40ea9c:	ldr	x0, [sp, #40]
  40eaa0:	ldr	w0, [x0, #104]
  40eaa4:	and	w0, w0, #0xf000
  40eaa8:	cmp	w0, #0x4, lsl #12
  40eaac:	cset	w0, eq  // eq = none
  40eab0:	and	w6, w0, #0xff
  40eab4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40eab8:	add	x0, x0, #0x80
  40eabc:	ldr	w1, [x0]
  40eac0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40eac4:	add	x0, x0, #0x288
  40eac8:	ldr	x0, [x0]
  40eacc:	mov	x4, #0x0                   	// #0
  40ead0:	mov	x3, x0
  40ead4:	mov	w2, w1
  40ead8:	mov	w1, w6
  40eadc:	mov	w0, w5
  40eae0:	bl	4517a4 <argp_usage@@Base+0x86b8>
  40eae4:	orr	w1, w19, w0
  40eae8:	ldr	x0, [sp, #40]
  40eaec:	str	w1, [x0, #104]
  40eaf0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40eaf4:	add	x0, x0, #0x360
  40eaf8:	ldr	w0, [x0]
  40eafc:	cmp	w0, #0x1
  40eb00:	b.eq	40eb18 <wcrtomb@plt+0x9e08>  // b.none
  40eb04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40eb08:	add	x0, x0, #0x360
  40eb0c:	ldr	w0, [x0]
  40eb10:	cmp	w0, #0x3
  40eb14:	b.ne	40eb40 <wcrtomb@plt+0x9e30>  // b.any
  40eb18:	ldr	x0, [sp, #40]
  40eb1c:	ldr	w0, [x0, #104]
  40eb20:	and	w3, w0, #0xfff
  40eb24:	ldr	x0, [sp, #96]
  40eb28:	add	x0, x0, #0x64
  40eb2c:	mov	x2, #0x8                   	// #8
  40eb30:	mov	x1, x0
  40eb34:	mov	w0, w3
  40eb38:	bl	40db8c <wcrtomb@plt+0x8e7c>
  40eb3c:	b	40eb60 <wcrtomb@plt+0x9e50>
  40eb40:	ldr	x0, [sp, #40]
  40eb44:	ldr	w3, [x0, #104]
  40eb48:	ldr	x0, [sp, #96]
  40eb4c:	add	x0, x0, #0x64
  40eb50:	mov	x2, #0x8                   	// #8
  40eb54:	mov	x1, x0
  40eb58:	mov	w0, w3
  40eb5c:	bl	40db8c <wcrtomb@plt+0x8e7c>
  40eb60:	ldr	x0, [sp, #40]
  40eb64:	ldr	w0, [x0, #112]
  40eb68:	str	w0, [sp, #124]
  40eb6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40eb70:	add	x0, x0, #0x360
  40eb74:	ldr	w0, [x0]
  40eb78:	cmp	w0, #0x4
  40eb7c:	b.ne	40eba8 <wcrtomb@plt+0x9e98>  // b.any
  40eb80:	ldr	w1, [sp, #124]
  40eb84:	mov	w0, #0x1fffff              	// #2097151
  40eb88:	cmp	w1, w0
  40eb8c:	b.ls	40eba8 <wcrtomb@plt+0x9e98>  // b.plast
  40eb90:	mov	x2, #0x0                   	// #0
  40eb94:	ldr	x1, [sp, #40]
  40eb98:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40eb9c:	add	x0, x0, #0xc78
  40eba0:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40eba4:	str	wzr, [sp, #124]
  40eba8:	ldr	x0, [sp, #96]
  40ebac:	add	x0, x0, #0x6c
  40ebb0:	mov	x2, #0x8                   	// #8
  40ebb4:	mov	x1, x0
  40ebb8:	ldr	w0, [sp, #124]
  40ebbc:	bl	40dd44 <wcrtomb@plt+0x9034>
  40ebc0:	and	w0, w0, #0xff
  40ebc4:	eor	w0, w0, #0x1
  40ebc8:	and	w0, w0, #0xff
  40ebcc:	cmp	w0, #0x0
  40ebd0:	b.eq	40ebdc <wcrtomb@plt+0x9ecc>  // b.none
  40ebd4:	mov	x0, #0x0                   	// #0
  40ebd8:	b	40f408 <wcrtomb@plt+0xa6f8>
  40ebdc:	ldr	x0, [sp, #40]
  40ebe0:	ldr	w0, [x0, #116]
  40ebe4:	str	w0, [sp, #120]
  40ebe8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ebec:	add	x0, x0, #0x360
  40ebf0:	ldr	w0, [x0]
  40ebf4:	cmp	w0, #0x4
  40ebf8:	b.ne	40ec24 <wcrtomb@plt+0x9f14>  // b.any
  40ebfc:	ldr	w1, [sp, #120]
  40ec00:	mov	w0, #0x1fffff              	// #2097151
  40ec04:	cmp	w1, w0
  40ec08:	b.ls	40ec24 <wcrtomb@plt+0x9f14>  // b.plast
  40ec0c:	mov	x2, #0x0                   	// #0
  40ec10:	ldr	x1, [sp, #40]
  40ec14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ec18:	add	x0, x0, #0xc80
  40ec1c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40ec20:	str	wzr, [sp, #120]
  40ec24:	ldr	x0, [sp, #96]
  40ec28:	add	x0, x0, #0x74
  40ec2c:	mov	x2, #0x8                   	// #8
  40ec30:	mov	x1, x0
  40ec34:	ldr	w0, [sp, #120]
  40ec38:	bl	40da9c <wcrtomb@plt+0x8d8c>
  40ec3c:	and	w0, w0, #0xff
  40ec40:	eor	w0, w0, #0x1
  40ec44:	and	w0, w0, #0xff
  40ec48:	cmp	w0, #0x0
  40ec4c:	b.eq	40ec58 <wcrtomb@plt+0x9f48>  // b.none
  40ec50:	mov	x0, #0x0                   	// #0
  40ec54:	b	40f408 <wcrtomb@plt+0xa6f8>
  40ec58:	ldr	x0, [sp, #40]
  40ec5c:	ldr	x0, [x0, #136]
  40ec60:	str	x0, [sp, #112]
  40ec64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ec68:	add	x0, x0, #0x360
  40ec6c:	ldr	w0, [x0]
  40ec70:	cmp	w0, #0x4
  40ec74:	b.ne	40eca0 <wcrtomb@plt+0x9f90>  // b.any
  40ec78:	ldr	x1, [sp, #112]
  40ec7c:	mov	x0, #0x1ffffffff           	// #8589934591
  40ec80:	cmp	x1, x0
  40ec84:	b.ls	40eca0 <wcrtomb@plt+0x9f90>  // b.plast
  40ec88:	mov	x2, #0x0                   	// #0
  40ec8c:	ldr	x1, [sp, #40]
  40ec90:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ec94:	add	x0, x0, #0xc88
  40ec98:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40ec9c:	str	xzr, [sp, #112]
  40eca0:	ldr	x0, [sp, #96]
  40eca4:	add	x0, x0, #0x7c
  40eca8:	mov	x2, #0xc                   	// #12
  40ecac:	mov	x1, x0
  40ecb0:	ldr	x0, [sp, #112]
  40ecb4:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  40ecb8:	and	w0, w0, #0xff
  40ecbc:	eor	w0, w0, #0x1
  40ecc0:	and	w0, w0, #0xff
  40ecc4:	cmp	w0, #0x0
  40ecc8:	b.eq	40ecd4 <wcrtomb@plt+0x9fc4>  // b.none
  40eccc:	mov	x0, #0x0                   	// #0
  40ecd0:	b	40f408 <wcrtomb@plt+0xa6f8>
  40ecd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ecd8:	add	x0, x0, #0x68
  40ecdc:	ldr	w0, [x0]
  40ece0:	cmp	w0, #0x2
  40ece4:	b.eq	40ed28 <wcrtomb@plt+0xa018>  // b.none
  40ece8:	cmp	w0, #0x2
  40ecec:	b.hi	40ed6c <wcrtomb@plt+0xa05c>  // b.pmore
  40ecf0:	cmp	w0, #0x0
  40ecf4:	b.eq	40ed04 <wcrtomb@plt+0x9ff4>  // b.none
  40ecf8:	cmp	w0, #0x1
  40ecfc:	b.eq	40ed14 <wcrtomb@plt+0xa004>  // b.none
  40ed00:	b	40ed6c <wcrtomb@plt+0xa05c>
  40ed04:	ldr	x0, [sp, #40]
  40ed08:	ldp	x0, x1, [x0, #232]
  40ed0c:	stp	x0, x1, [sp, #56]
  40ed10:	b	40ed6c <wcrtomb@plt+0xa05c>
  40ed14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ed18:	add	x0, x0, #0x348
  40ed1c:	ldp	x0, x1, [x0]
  40ed20:	stp	x0, x1, [sp, #56]
  40ed24:	b	40ed6c <wcrtomb@plt+0xa05c>
  40ed28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ed2c:	add	x1, x0, #0x348
  40ed30:	ldr	x0, [sp, #40]
  40ed34:	ldp	x2, x3, [x1]
  40ed38:	ldp	x0, x1, [x0, #232]
  40ed3c:	bl	45ab0c <argp_usage@@Base+0x11a20>
  40ed40:	cmp	w0, #0x0
  40ed44:	b.gt	40ed58 <wcrtomb@plt+0xa048>
  40ed48:	ldr	x0, [sp, #40]
  40ed4c:	ldp	x0, x1, [x0, #232]
  40ed50:	stp	x0, x1, [sp, #56]
  40ed54:	b	40ed68 <wcrtomb@plt+0xa058>
  40ed58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ed5c:	add	x0, x0, #0x348
  40ed60:	ldp	x0, x1, [x0]
  40ed64:	stp	x0, x1, [sp, #56]
  40ed68:	nop
  40ed6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ed70:	add	x0, x0, #0x360
  40ed74:	ldr	w0, [x0]
  40ed78:	cmp	w0, #0x4
  40ed7c:	b.ne	40edd0 <wcrtomb@plt+0xa0c0>  // b.any
  40ed80:	ldr	x0, [sp, #56]
  40ed84:	mov	x1, x0
  40ed88:	mov	x0, #0x1ffffffff           	// #8589934591
  40ed8c:	cmp	x1, x0
  40ed90:	b.hi	40eda0 <wcrtomb@plt+0xa090>  // b.pmore
  40ed94:	ldr	x0, [sp, #64]
  40ed98:	cmp	x0, #0x0
  40ed9c:	b.eq	40edb8 <wcrtomb@plt+0xa0a8>  // b.none
  40eda0:	add	x0, sp, #0x38
  40eda4:	mov	x2, x0
  40eda8:	ldr	x1, [sp, #40]
  40edac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40edb0:	add	x0, x0, #0xc90
  40edb4:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40edb8:	ldr	x0, [sp, #56]
  40edbc:	mov	x1, x0
  40edc0:	mov	x0, #0x1ffffffff           	// #8589934591
  40edc4:	cmp	x1, x0
  40edc8:	b.ls	40edd0 <wcrtomb@plt+0xa0c0>  // b.plast
  40edcc:	str	xzr, [sp, #56]
  40edd0:	ldr	x3, [sp, #56]
  40edd4:	ldr	x0, [sp, #96]
  40edd8:	add	x0, x0, #0x88
  40eddc:	mov	x2, #0xc                   	// #12
  40ede0:	mov	x1, x0
  40ede4:	mov	x0, x3
  40ede8:	bl	40dc80 <wcrtomb@plt+0x8f70>
  40edec:	and	w0, w0, #0xff
  40edf0:	eor	w0, w0, #0x1
  40edf4:	and	w0, w0, #0xff
  40edf8:	cmp	w0, #0x0
  40edfc:	b.eq	40ee08 <wcrtomb@plt+0xa0f8>  // b.none
  40ee00:	mov	x0, #0x0                   	// #0
  40ee04:	b	40f408 <wcrtomb@plt+0xa6f8>
  40ee08:	ldr	x0, [sp, #40]
  40ee0c:	ldr	w0, [x0, #104]
  40ee10:	and	w0, w0, #0xf000
  40ee14:	cmp	w0, #0x2, lsl #12
  40ee18:	b.eq	40ee30 <wcrtomb@plt+0xa120>  // b.none
  40ee1c:	ldr	x0, [sp, #40]
  40ee20:	ldr	w0, [x0, #104]
  40ee24:	and	w0, w0, #0xf000
  40ee28:	cmp	w0, #0x6, lsl #12
  40ee2c:	b.ne	40ef30 <wcrtomb@plt+0xa220>  // b.any
  40ee30:	ldr	x0, [sp, #40]
  40ee34:	ldr	x0, [x0, #120]
  40ee38:	bl	404750 <gnu_dev_major@plt>
  40ee3c:	str	w0, [sp, #108]
  40ee40:	ldr	x0, [sp, #40]
  40ee44:	ldr	x0, [x0, #120]
  40ee48:	bl	4049c0 <gnu_dev_minor@plt>
  40ee4c:	str	w0, [sp, #104]
  40ee50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ee54:	add	x0, x0, #0x360
  40ee58:	ldr	w0, [x0]
  40ee5c:	cmp	w0, #0x4
  40ee60:	b.ne	40ee8c <wcrtomb@plt+0xa17c>  // b.any
  40ee64:	ldr	w1, [sp, #108]
  40ee68:	mov	w0, #0x1fffff              	// #2097151
  40ee6c:	cmp	w1, w0
  40ee70:	b.ls	40ee8c <wcrtomb@plt+0xa17c>  // b.plast
  40ee74:	mov	x2, #0x0                   	// #0
  40ee78:	ldr	x1, [sp, #40]
  40ee7c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40ee80:	add	x0, x0, #0xc98
  40ee84:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40ee88:	str	wzr, [sp, #108]
  40ee8c:	ldr	x0, [sp, #96]
  40ee90:	add	x0, x0, #0x149
  40ee94:	mov	x2, #0x8                   	// #8
  40ee98:	mov	x1, x0
  40ee9c:	ldr	w0, [sp, #108]
  40eea0:	bl	40dae4 <wcrtomb@plt+0x8dd4>
  40eea4:	and	w0, w0, #0xff
  40eea8:	eor	w0, w0, #0x1
  40eeac:	and	w0, w0, #0xff
  40eeb0:	cmp	w0, #0x0
  40eeb4:	b.eq	40eec0 <wcrtomb@plt+0xa1b0>  // b.none
  40eeb8:	mov	x0, #0x0                   	// #0
  40eebc:	b	40f408 <wcrtomb@plt+0xa6f8>
  40eec0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40eec4:	add	x0, x0, #0x360
  40eec8:	ldr	w0, [x0]
  40eecc:	cmp	w0, #0x4
  40eed0:	b.ne	40eefc <wcrtomb@plt+0xa1ec>  // b.any
  40eed4:	ldr	w1, [sp, #104]
  40eed8:	mov	w0, #0x1fffff              	// #2097151
  40eedc:	cmp	w1, w0
  40eee0:	b.ls	40eefc <wcrtomb@plt+0xa1ec>  // b.plast
  40eee4:	mov	x2, #0x0                   	// #0
  40eee8:	ldr	x1, [sp, #40]
  40eeec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40eef0:	add	x0, x0, #0xca8
  40eef4:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40eef8:	str	wzr, [sp, #104]
  40eefc:	ldr	x0, [sp, #96]
  40ef00:	add	x0, x0, #0x151
  40ef04:	mov	x2, #0x8                   	// #8
  40ef08:	mov	x1, x0
  40ef0c:	ldr	w0, [sp, #104]
  40ef10:	bl	40db38 <wcrtomb@plt+0x8e28>
  40ef14:	and	w0, w0, #0xff
  40ef18:	eor	w0, w0, #0x1
  40ef1c:	and	w0, w0, #0xff
  40ef20:	cmp	w0, #0x0
  40ef24:	b.eq	40efb8 <wcrtomb@plt+0xa2a8>  // b.none
  40ef28:	mov	x0, #0x0                   	// #0
  40ef2c:	b	40f408 <wcrtomb@plt+0xa6f8>
  40ef30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ef34:	add	x0, x0, #0x360
  40ef38:	ldr	w0, [x0]
  40ef3c:	cmp	w0, #0x6
  40ef40:	b.eq	40efbc <wcrtomb@plt+0xa2ac>  // b.none
  40ef44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40ef48:	add	x0, x0, #0x360
  40ef4c:	ldr	w0, [x0]
  40ef50:	cmp	w0, #0x2
  40ef54:	b.eq	40efbc <wcrtomb@plt+0xa2ac>  // b.none
  40ef58:	ldr	x0, [sp, #96]
  40ef5c:	add	x0, x0, #0x149
  40ef60:	mov	x2, #0x8                   	// #8
  40ef64:	mov	x1, x0
  40ef68:	mov	w0, #0x0                   	// #0
  40ef6c:	bl	40dae4 <wcrtomb@plt+0x8dd4>
  40ef70:	and	w0, w0, #0xff
  40ef74:	eor	w0, w0, #0x1
  40ef78:	and	w0, w0, #0xff
  40ef7c:	cmp	w0, #0x0
  40ef80:	b.ne	40efb0 <wcrtomb@plt+0xa2a0>  // b.any
  40ef84:	ldr	x0, [sp, #96]
  40ef88:	add	x0, x0, #0x151
  40ef8c:	mov	x2, #0x8                   	// #8
  40ef90:	mov	x1, x0
  40ef94:	mov	w0, #0x0                   	// #0
  40ef98:	bl	40db38 <wcrtomb@plt+0x8e28>
  40ef9c:	and	w0, w0, #0xff
  40efa0:	eor	w0, w0, #0x1
  40efa4:	and	w0, w0, #0xff
  40efa8:	cmp	w0, #0x0
  40efac:	b.eq	40efbc <wcrtomb@plt+0xa2ac>  // b.none
  40efb0:	mov	x0, #0x0                   	// #0
  40efb4:	b	40f408 <wcrtomb@plt+0xa6f8>
  40efb8:	nop
  40efbc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40efc0:	add	x0, x0, #0x360
  40efc4:	ldr	w0, [x0]
  40efc8:	cmp	w0, #0x4
  40efcc:	b.ne	40effc <wcrtomb@plt+0xa2ec>  // b.any
  40efd0:	mov	x2, #0x0                   	// #0
  40efd4:	ldr	x1, [sp, #40]
  40efd8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40efdc:	add	x0, x0, #0xcb8
  40efe0:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40efe4:	mov	x2, #0x0                   	// #0
  40efe8:	ldr	x1, [sp, #40]
  40efec:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40eff0:	add	x0, x0, #0xcc0
  40eff4:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40eff8:	b	40f078 <wcrtomb@plt+0xa368>
  40effc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f000:	add	x0, x0, #0x51
  40f004:	ldrb	w0, [x0]
  40f008:	cmp	w0, #0x0
  40f00c:	b.eq	40f078 <wcrtomb@plt+0xa368>  // b.none
  40f010:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f014:	add	x0, x0, #0x360
  40f018:	ldr	w0, [x0]
  40f01c:	cmp	w0, #0x2
  40f020:	b.eq	40f038 <wcrtomb@plt+0xa328>  // b.none
  40f024:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f028:	add	x0, x0, #0x360
  40f02c:	ldr	w0, [x0]
  40f030:	cmp	w0, #0x6
  40f034:	b.ne	40f078 <wcrtomb@plt+0xa368>  // b.any
  40f038:	ldr	x0, [sp, #40]
  40f03c:	ldr	x3, [x0, #216]
  40f040:	ldr	x0, [sp, #96]
  40f044:	add	x0, x0, #0x159
  40f048:	mov	x2, #0xc                   	// #12
  40f04c:	mov	x1, x0
  40f050:	mov	x0, x3
  40f054:	bl	40dc80 <wcrtomb@plt+0x8f70>
  40f058:	ldr	x0, [sp, #40]
  40f05c:	ldr	x3, [x0, #248]
  40f060:	ldr	x0, [sp, #96]
  40f064:	add	x0, x0, #0x165
  40f068:	mov	x2, #0xc                   	// #12
  40f06c:	mov	x1, x0
  40f070:	mov	x0, x3
  40f074:	bl	40dc80 <wcrtomb@plt+0x8f70>
  40f078:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f07c:	add	x0, x0, #0x360
  40f080:	ldr	w0, [x0]
  40f084:	cmp	w0, #0x1
  40f088:	b.ne	40f094 <wcrtomb@plt+0xa384>  // b.any
  40f08c:	mov	w1, #0x0                   	// #0
  40f090:	b	40f098 <wcrtomb@plt+0xa388>
  40f094:	mov	w1, #0x30                  	// #48
  40f098:	ldr	x0, [sp, #96]
  40f09c:	strb	w1, [x0, #156]
  40f0a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f0a4:	add	x0, x0, #0x360
  40f0a8:	ldr	w0, [x0]
  40f0ac:	cmp	w0, #0x6
  40f0b0:	b.eq	40f0dc <wcrtomb@plt+0xa3cc>  // b.none
  40f0b4:	cmp	w0, #0x6
  40f0b8:	b.hi	40f138 <wcrtomb@plt+0xa428>  // b.pmore
  40f0bc:	cmp	w0, #0x4
  40f0c0:	b.hi	40f138 <wcrtomb@plt+0xa428>  // b.pmore
  40f0c4:	cmp	w0, #0x3
  40f0c8:	b.cs	40f0fc <wcrtomb@plt+0xa3ec>  // b.hs, b.nlast
  40f0cc:	cmp	w0, #0x1
  40f0d0:	b.eq	40f13c <wcrtomb@plt+0xa42c>  // b.none
  40f0d4:	cmp	w0, #0x2
  40f0d8:	b.ne	40f138 <wcrtomb@plt+0xa428>  // b.any
  40f0dc:	ldr	x0, [sp, #96]
  40f0e0:	add	x0, x0, #0x101
  40f0e4:	mov	x1, #0x7375                	// #29557
  40f0e8:	movk	x1, #0x6174, lsl #16
  40f0ec:	movk	x1, #0x2072, lsl #32
  40f0f0:	movk	x1, #0x20, lsl #48
  40f0f4:	str	x1, [x0]
  40f0f8:	b	40f140 <wcrtomb@plt+0xa430>
  40f0fc:	ldr	x0, [sp, #96]
  40f100:	add	x3, x0, #0x101
  40f104:	mov	x2, #0x6                   	// #6
  40f108:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f10c:	add	x1, x0, #0xbb0
  40f110:	mov	x0, x3
  40f114:	bl	404020 <memcpy@plt>
  40f118:	ldr	x0, [sp, #96]
  40f11c:	add	x3, x0, #0x107
  40f120:	mov	x2, #0x2                   	// #2
  40f124:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f128:	add	x1, x0, #0xbb8
  40f12c:	mov	x0, x3
  40f130:	bl	404020 <memcpy@plt>
  40f134:	b	40f140 <wcrtomb@plt+0xa430>
  40f138:	bl	404710 <abort@plt>
  40f13c:	nop
  40f140:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f144:	add	x0, x0, #0x360
  40f148:	ldr	w0, [x0]
  40f14c:	cmp	w0, #0x1
  40f150:	b.eq	40f2e0 <wcrtomb@plt+0xa5d0>  // b.none
  40f154:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f158:	add	x0, x0, #0x2d0
  40f15c:	ldrb	w0, [x0]
  40f160:	cmp	w0, #0x0
  40f164:	b.ne	40f2e0 <wcrtomb@plt+0xa5d0>  // b.any
  40f168:	ldr	x0, [sp, #80]
  40f16c:	cmp	x0, #0x0
  40f170:	b.eq	40f18c <wcrtomb@plt+0xa47c>  // b.none
  40f174:	ldr	x0, [sp, #80]
  40f178:	bl	45b858 <argp_usage@@Base+0x1276c>
  40f17c:	mov	x1, x0
  40f180:	ldr	x0, [sp, #40]
  40f184:	str	x1, [x0, #32]
  40f188:	b	40f1a8 <wcrtomb@plt+0xa498>
  40f18c:	ldr	x0, [sp, #40]
  40f190:	ldr	w2, [x0, #112]
  40f194:	ldr	x0, [sp, #40]
  40f198:	add	x0, x0, #0x20
  40f19c:	mov	x1, x0
  40f1a0:	mov	w0, w2
  40f1a4:	bl	426d40 <wcrtomb@plt+0x22030>
  40f1a8:	ldr	x0, [sp, #72]
  40f1ac:	cmp	x0, #0x0
  40f1b0:	b.eq	40f1cc <wcrtomb@plt+0xa4bc>  // b.none
  40f1b4:	ldr	x0, [sp, #72]
  40f1b8:	bl	45b858 <argp_usage@@Base+0x1276c>
  40f1bc:	mov	x1, x0
  40f1c0:	ldr	x0, [sp, #40]
  40f1c4:	str	x1, [x0, #40]
  40f1c8:	b	40f1e8 <wcrtomb@plt+0xa4d8>
  40f1cc:	ldr	x0, [sp, #40]
  40f1d0:	ldr	w2, [x0, #116]
  40f1d4:	ldr	x0, [sp, #40]
  40f1d8:	add	x0, x0, #0x28
  40f1dc:	mov	x1, x0
  40f1e0:	mov	w0, w2
  40f1e4:	bl	426e50 <wcrtomb@plt+0x22140>
  40f1e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f1ec:	add	x0, x0, #0x360
  40f1f0:	ldr	w0, [x0]
  40f1f4:	cmp	w0, #0x4
  40f1f8:	b.ne	40f244 <wcrtomb@plt+0xa534>  // b.any
  40f1fc:	ldr	x0, [sp, #40]
  40f200:	ldr	x0, [x0, #32]
  40f204:	bl	4040b0 <strlen@plt>
  40f208:	cmp	x0, #0x20
  40f20c:	b.hi	40f230 <wcrtomb@plt+0xa520>  // b.pmore
  40f210:	ldr	x0, [sp, #40]
  40f214:	ldr	x0, [x0, #32]
  40f218:	bl	437a90 <wcrtomb@plt+0x32d80>
  40f21c:	and	w0, w0, #0xff
  40f220:	eor	w0, w0, #0x1
  40f224:	and	w0, w0, #0xff
  40f228:	cmp	w0, #0x0
  40f22c:	b.eq	40f244 <wcrtomb@plt+0xa534>  // b.none
  40f230:	mov	x2, #0x0                   	// #0
  40f234:	ldr	x1, [sp, #40]
  40f238:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f23c:	add	x0, x0, #0xcc8
  40f240:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f244:	ldr	x0, [sp, #40]
  40f248:	ldr	x3, [x0, #32]
  40f24c:	ldr	x0, [sp, #96]
  40f250:	add	x0, x0, #0x109
  40f254:	mov	x2, #0x20                  	// #32
  40f258:	mov	x1, x0
  40f25c:	mov	x0, x3
  40f260:	bl	40ddd0 <wcrtomb@plt+0x90c0>
  40f264:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f268:	add	x0, x0, #0x360
  40f26c:	ldr	w0, [x0]
  40f270:	cmp	w0, #0x4
  40f274:	b.ne	40f2c0 <wcrtomb@plt+0xa5b0>  // b.any
  40f278:	ldr	x0, [sp, #40]
  40f27c:	ldr	x0, [x0, #40]
  40f280:	bl	4040b0 <strlen@plt>
  40f284:	cmp	x0, #0x20
  40f288:	b.hi	40f2ac <wcrtomb@plt+0xa59c>  // b.pmore
  40f28c:	ldr	x0, [sp, #40]
  40f290:	ldr	x0, [x0, #40]
  40f294:	bl	437a90 <wcrtomb@plt+0x32d80>
  40f298:	and	w0, w0, #0xff
  40f29c:	eor	w0, w0, #0x1
  40f2a0:	and	w0, w0, #0xff
  40f2a4:	cmp	w0, #0x0
  40f2a8:	b.eq	40f2c0 <wcrtomb@plt+0xa5b0>  // b.none
  40f2ac:	mov	x2, #0x0                   	// #0
  40f2b0:	ldr	x1, [sp, #40]
  40f2b4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f2b8:	add	x0, x0, #0xcd0
  40f2bc:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f2c0:	ldr	x0, [sp, #40]
  40f2c4:	ldr	x3, [x0, #40]
  40f2c8:	ldr	x0, [sp, #96]
  40f2cc:	add	x0, x0, #0x129
  40f2d0:	mov	x2, #0x20                  	// #32
  40f2d4:	mov	x1, x0
  40f2d8:	mov	x0, x3
  40f2dc:	bl	40ddd0 <wcrtomb@plt+0x90c0>
  40f2e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f2e4:	add	x0, x0, #0x360
  40f2e8:	ldr	w0, [x0]
  40f2ec:	cmp	w0, #0x4
  40f2f0:	b.ne	40f404 <wcrtomb@plt+0xa6f4>  // b.any
  40f2f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f2f8:	add	x0, x0, #0x3b0
  40f2fc:	ldr	w0, [x0]
  40f300:	cmp	w0, #0x0
  40f304:	b.le	40f350 <wcrtomb@plt+0xa640>
  40f308:	ldr	x0, [sp, #40]
  40f30c:	ldr	x0, [x0, #56]
  40f310:	cmp	x0, #0x0
  40f314:	b.eq	40f32c <wcrtomb@plt+0xa61c>  // b.none
  40f318:	mov	x2, #0x0                   	// #0
  40f31c:	ldr	x1, [sp, #40]
  40f320:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f324:	add	x0, x0, #0xcd8
  40f328:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f32c:	ldr	x0, [sp, #40]
  40f330:	ldr	x0, [x0, #72]
  40f334:	cmp	x0, #0x0
  40f338:	b.eq	40f350 <wcrtomb@plt+0xa640>  // b.none
  40f33c:	mov	x2, #0x0                   	// #0
  40f340:	ldr	x1, [sp, #40]
  40f344:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f348:	add	x0, x0, #0xcf0
  40f34c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f350:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f354:	add	x0, x0, #0x408
  40f358:	ldr	w0, [x0]
  40f35c:	cmp	w0, #0x0
  40f360:	b.le	40f388 <wcrtomb@plt+0xa678>
  40f364:	ldr	x0, [sp, #40]
  40f368:	ldr	x0, [x0, #48]
  40f36c:	cmp	x0, #0x0
  40f370:	b.eq	40f388 <wcrtomb@plt+0xa678>  // b.none
  40f374:	mov	x2, #0x0                   	// #0
  40f378:	ldr	x1, [sp, #40]
  40f37c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f380:	add	x0, x0, #0xd08
  40f384:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f388:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f38c:	add	x0, x0, #0x2c0
  40f390:	ldr	w0, [x0]
  40f394:	cmp	w0, #0x0
  40f398:	b.le	40f404 <wcrtomb@plt+0xa6f4>
  40f39c:	str	xzr, [sp, #48]
  40f3a0:	ldr	x0, [sp, #40]
  40f3a4:	ldr	x0, [x0, #336]
  40f3a8:	str	x0, [sp, #88]
  40f3ac:	b	40f3f0 <wcrtomb@plt+0xa6e0>
  40f3b0:	ldr	x1, [sp, #48]
  40f3b4:	mov	x0, x1
  40f3b8:	lsl	x0, x0, #1
  40f3bc:	add	x0, x0, x1
  40f3c0:	lsl	x0, x0, #3
  40f3c4:	mov	x1, x0
  40f3c8:	ldr	x0, [sp, #88]
  40f3cc:	add	x0, x0, x1
  40f3d0:	ldr	x0, [x0]
  40f3d4:	add	x1, sp, #0x30
  40f3d8:	mov	x2, x1
  40f3dc:	ldr	x1, [sp, #40]
  40f3e0:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f3e4:	ldr	x0, [sp, #48]
  40f3e8:	add	x0, x0, #0x1
  40f3ec:	str	x0, [sp, #48]
  40f3f0:	ldr	x0, [sp, #40]
  40f3f4:	ldr	x1, [x0, #328]
  40f3f8:	ldr	x0, [sp, #48]
  40f3fc:	cmp	x1, x0
  40f400:	b.hi	40f3b0 <wcrtomb@plt+0xa6a0>  // b.pmore
  40f404:	ldr	x0, [sp, #96]
  40f408:	ldr	x19, [sp, #16]
  40f40c:	ldp	x29, x30, [sp], #128
  40f410:	ret
  40f414:	stp	x29, x30, [sp, #-64]!
  40f418:	mov	x29, sp
  40f41c:	str	x0, [sp, #24]
  40f420:	ldr	x0, [sp, #24]
  40f424:	add	x3, x0, #0x94
  40f428:	mov	x2, #0x8                   	// #8
  40f42c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f430:	add	x1, x0, #0xd20
  40f434:	mov	x0, x3
  40f438:	bl	404020 <memcpy@plt>
  40f43c:	str	wzr, [sp, #52]
  40f440:	ldr	x0, [sp, #24]
  40f444:	str	x0, [sp, #40]
  40f448:	mov	x0, #0x200                 	// #512
  40f44c:	str	x0, [sp, #56]
  40f450:	b	40f474 <wcrtomb@plt+0xa764>
  40f454:	ldr	x0, [sp, #40]
  40f458:	add	x1, x0, #0x1
  40f45c:	str	x1, [sp, #40]
  40f460:	ldrb	w0, [x0]
  40f464:	mov	w1, w0
  40f468:	ldr	w0, [sp, #52]
  40f46c:	add	w0, w0, w1
  40f470:	str	w0, [sp, #52]
  40f474:	ldr	x0, [sp, #56]
  40f478:	sub	x1, x0, #0x1
  40f47c:	str	x1, [sp, #56]
  40f480:	cmp	x0, #0x0
  40f484:	b.ne	40f454 <wcrtomb@plt+0xa744>  // b.any
  40f488:	ldrsw	x3, [sp, #52]
  40f48c:	ldr	x0, [sp, #24]
  40f490:	add	x0, x0, #0x94
  40f494:	mov	x2, #0x7                   	// #7
  40f498:	mov	x1, x0
  40f49c:	mov	x0, x3
  40f4a0:	bl	40dd8c <wcrtomb@plt+0x907c>
  40f4a4:	ldr	x0, [sp, #24]
  40f4a8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40f4ac:	nop
  40f4b0:	ldp	x29, x30, [sp], #64
  40f4b4:	ret
  40f4b8:	stp	x29, x30, [sp, #-48]!
  40f4bc:	mov	x29, sp
  40f4c0:	str	x0, [sp, #40]
  40f4c4:	str	x1, [sp, #32]
  40f4c8:	str	x2, [sp, #24]
  40f4cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f4d0:	add	x0, x0, #0x2b4
  40f4d4:	ldr	w0, [x0]
  40f4d8:	cmp	w0, #0x0
  40f4dc:	b.eq	40f548 <wcrtomb@plt+0xa838>  // b.none
  40f4e0:	ldr	x0, [sp, #32]
  40f4e4:	ldrb	w0, [x0, #156]
  40f4e8:	cmp	w0, #0x4b
  40f4ec:	b.eq	40f548 <wcrtomb@plt+0xa838>  // b.none
  40f4f0:	ldr	x0, [sp, #32]
  40f4f4:	ldrb	w0, [x0, #156]
  40f4f8:	cmp	w0, #0x4c
  40f4fc:	b.eq	40f548 <wcrtomb@plt+0xa838>  // b.none
  40f500:	ldr	x0, [sp, #32]
  40f504:	ldrb	w0, [x0, #156]
  40f508:	cmp	w0, #0x78
  40f50c:	b.eq	40f548 <wcrtomb@plt+0xa838>  // b.none
  40f510:	ldr	x0, [sp, #32]
  40f514:	ldrb	w0, [x0, #156]
  40f518:	cmp	w0, #0x67
  40f51c:	b.eq	40f548 <wcrtomb@plt+0xa838>  // b.none
  40f520:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f524:	add	x0, x0, #0x360
  40f528:	ldr	w1, [x0]
  40f52c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f530:	add	x0, x0, #0x0
  40f534:	str	w1, [x0]
  40f538:	ldr	x2, [sp, #24]
  40f53c:	ldr	x1, [sp, #32]
  40f540:	ldr	x0, [sp, #40]
  40f544:	bl	422f1c <wcrtomb@plt+0x1e20c>
  40f548:	ldr	x2, [sp, #32]
  40f54c:	ldr	x1, [sp, #40]
  40f550:	mov	w0, #0x0                   	// #0
  40f554:	bl	40e7fc <wcrtomb@plt+0x9aec>
  40f558:	str	x0, [sp, #32]
  40f55c:	ldr	x0, [sp, #32]
  40f560:	bl	40f414 <wcrtomb@plt+0xa704>
  40f564:	nop
  40f568:	ldp	x29, x30, [sp], #48
  40f56c:	ret
  40f570:	stp	x29, x30, [sp, #-48]!
  40f574:	mov	x29, sp
  40f578:	str	x0, [sp, #24]
  40f57c:	b	40f5ac <wcrtomb@plt+0xa89c>
  40f580:	bl	406030 <wcrtomb@plt+0x1320>
  40f584:	str	x0, [sp, #40]
  40f588:	ldr	x0, [sp, #40]
  40f58c:	mov	x2, #0x200                 	// #512
  40f590:	mov	w1, #0x0                   	// #0
  40f594:	bl	4044d0 <memset@plt>
  40f598:	ldr	x0, [sp, #40]
  40f59c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40f5a0:	ldr	x0, [sp, #24]
  40f5a4:	sub	x0, x0, #0x200
  40f5a8:	str	x0, [sp, #24]
  40f5ac:	ldr	x0, [sp, #24]
  40f5b0:	cmp	x0, #0x0
  40f5b4:	b.gt	40f580 <wcrtomb@plt+0xa870>
  40f5b8:	nop
  40f5bc:	nop
  40f5c0:	ldp	x29, x30, [sp], #48
  40f5c4:	ret
  40f5c8:	stp	x29, x30, [sp, #-112]!
  40f5cc:	mov	x29, sp
  40f5d0:	stp	x19, x20, [sp, #16]
  40f5d4:	str	w0, [sp, #44]
  40f5d8:	str	x1, [sp, #32]
  40f5dc:	ldr	x0, [sp, #32]
  40f5e0:	ldr	x0, [x0, #136]
  40f5e4:	str	x0, [sp, #104]
  40f5e8:	bl	405f78 <wcrtomb@plt+0x1268>
  40f5ec:	str	x0, [sp, #88]
  40f5f0:	ldr	x0, [sp, #32]
  40f5f4:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  40f5f8:	str	x0, [sp, #80]
  40f5fc:	ldr	x0, [sp, #80]
  40f600:	cmp	x0, #0x0
  40f604:	b.ne	40f610 <wcrtomb@plt+0xa900>  // b.any
  40f608:	mov	w0, #0x2                   	// #2
  40f60c:	b	40f868 <wcrtomb@plt+0xab58>
  40f610:	ldr	x2, [sp, #88]
  40f614:	ldr	x1, [sp, #80]
  40f618:	ldr	x0, [sp, #32]
  40f61c:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  40f620:	ldr	x0, [sp, #32]
  40f624:	ldr	x3, [x0, #8]
  40f628:	ldr	x0, [sp, #32]
  40f62c:	ldr	x1, [x0, #136]
  40f630:	ldr	x0, [sp, #32]
  40f634:	ldr	x0, [x0, #136]
  40f638:	mov	x2, x0
  40f63c:	mov	x0, x3
  40f640:	bl	404ee8 <wcrtomb@plt+0x1d8>
  40f644:	b	40f858 <wcrtomb@plt+0xab48>
  40f648:	bl	406030 <wcrtomb@plt+0x1320>
  40f64c:	str	x0, [sp, #80]
  40f650:	ldr	x0, [sp, #80]
  40f654:	bl	406138 <wcrtomb@plt+0x1428>
  40f658:	str	x0, [sp, #96]
  40f65c:	ldr	x0, [sp, #104]
  40f660:	ldr	x1, [sp, #96]
  40f664:	cmp	x1, x0
  40f668:	b.ls	40f6b4 <wcrtomb@plt+0xa9a4>  // b.plast
  40f66c:	ldr	x0, [sp, #104]
  40f670:	str	x0, [sp, #96]
  40f674:	ldr	x0, [sp, #96]
  40f678:	and	x0, x0, #0x1ff
  40f67c:	str	x0, [sp, #72]
  40f680:	ldr	x0, [sp, #72]
  40f684:	cmp	x0, #0x0
  40f688:	b.eq	40f6b4 <wcrtomb@plt+0xa9a4>  // b.none
  40f68c:	ldr	x1, [sp, #80]
  40f690:	ldr	x0, [sp, #104]
  40f694:	add	x3, x1, x0
  40f698:	mov	x1, #0x200                 	// #512
  40f69c:	ldr	x0, [sp, #72]
  40f6a0:	sub	x0, x1, x0
  40f6a4:	mov	x2, x0
  40f6a8:	mov	w1, #0x0                   	// #0
  40f6ac:	mov	x0, x3
  40f6b0:	bl	4044d0 <memset@plt>
  40f6b4:	ldr	w0, [sp, #44]
  40f6b8:	cmp	w0, #0x0
  40f6bc:	b.le	40f6d8 <wcrtomb@plt+0xa9c8>
  40f6c0:	ldr	x0, [sp, #80]
  40f6c4:	ldr	x2, [sp, #96]
  40f6c8:	mov	x1, x0
  40f6cc:	ldr	w0, [sp, #44]
  40f6d0:	bl	425608 <wcrtomb@plt+0x208f8>
  40f6d4:	b	40f6dc <wcrtomb@plt+0xa9cc>
  40f6d8:	ldr	x0, [sp, #96]
  40f6dc:	str	x0, [sp, #72]
  40f6e0:	ldr	x0, [sp, #72]
  40f6e4:	cmn	x0, #0x1
  40f6e8:	b.ne	40f724 <wcrtomb@plt+0xaa14>  // b.any
  40f6ec:	ldr	x0, [sp, #32]
  40f6f0:	ldr	x3, [x0]
  40f6f4:	ldr	x0, [sp, #32]
  40f6f8:	ldr	x1, [x0, #136]
  40f6fc:	ldr	x0, [sp, #104]
  40f700:	sub	x0, x1, x0
  40f704:	ldr	x2, [sp, #96]
  40f708:	mov	x1, x0
  40f70c:	mov	x0, x3
  40f710:	bl	425f5c <wcrtomb@plt+0x2124c>
  40f714:	ldr	x0, [sp, #104]
  40f718:	bl	40f570 <wcrtomb@plt+0xa860>
  40f71c:	mov	w0, #0x1                   	// #1
  40f720:	b	40f868 <wcrtomb@plt+0xab58>
  40f724:	ldr	x1, [sp, #104]
  40f728:	ldr	x0, [sp, #72]
  40f72c:	sub	x0, x1, x0
  40f730:	str	x0, [sp, #104]
  40f734:	ldr	x0, [sp, #96]
  40f738:	sub	x0, x0, #0x1
  40f73c:	and	x0, x0, #0xfffffffffffffe00
  40f740:	ldr	x1, [sp, #80]
  40f744:	add	x0, x1, x0
  40f748:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40f74c:	ldr	x1, [sp, #72]
  40f750:	ldr	x0, [sp, #96]
  40f754:	cmp	x1, x0
  40f758:	b.eq	40f858 <wcrtomb@plt+0xab48>  // b.none
  40f75c:	ldr	x1, [sp, #80]
  40f760:	ldr	x0, [sp, #72]
  40f764:	add	x3, x1, x0
  40f768:	ldr	x1, [sp, #96]
  40f76c:	ldr	x0, [sp, #72]
  40f770:	sub	x0, x1, x0
  40f774:	mov	x2, x0
  40f778:	mov	w1, #0x0                   	// #0
  40f77c:	mov	x0, x3
  40f780:	bl	4044d0 <memset@plt>
  40f784:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40f788:	add	x0, x0, #0x24c
  40f78c:	ldr	w0, [x0]
  40f790:	and	w0, w0, #0x80
  40f794:	cmp	w0, #0x0
  40f798:	b.eq	40f814 <wcrtomb@plt+0xab04>  // b.none
  40f79c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f7a0:	add	x0, x0, #0x420
  40f7a4:	ldr	x0, [x0]
  40f7a8:	cmp	x0, #0x0
  40f7ac:	b.eq	40f7c0 <wcrtomb@plt+0xaab0>  // b.none
  40f7b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f7b4:	add	x0, x0, #0x420
  40f7b8:	ldr	x0, [x0]
  40f7bc:	blr	x0
  40f7c0:	ldr	x0, [sp, #104]
  40f7c4:	mov	x2, x0
  40f7c8:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f7cc:	add	x1, x0, #0xd30
  40f7d0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f7d4:	add	x0, x0, #0xd60
  40f7d8:	bl	404040 <ngettext@plt>
  40f7dc:	mov	x19, x0
  40f7e0:	ldr	x0, [sp, #32]
  40f7e4:	ldr	x0, [x0]
  40f7e8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40f7ec:	mov	x20, x0
  40f7f0:	ldr	x0, [sp, #104]
  40f7f4:	add	x1, sp, #0x30
  40f7f8:	bl	450988 <argp_usage@@Base+0x789c>
  40f7fc:	mov	x4, x0
  40f800:	mov	x3, x20
  40f804:	mov	x2, x19
  40f808:	mov	w1, #0x0                   	// #0
  40f80c:	mov	w0, #0x0                   	// #0
  40f810:	bl	404100 <error@plt>
  40f814:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f818:	add	x0, x0, #0x3e9
  40f81c:	ldrb	w0, [x0]
  40f820:	eor	w0, w0, #0x1
  40f824:	and	w0, w0, #0xff
  40f828:	cmp	w0, #0x0
  40f82c:	b.eq	40f838 <wcrtomb@plt+0xab28>  // b.none
  40f830:	mov	w0, #0x1                   	// #1
  40f834:	bl	434ff4 <wcrtomb@plt+0x302e4>
  40f838:	ldr	x1, [sp, #72]
  40f83c:	ldr	x0, [sp, #96]
  40f840:	sub	x1, x1, x0
  40f844:	ldr	x0, [sp, #104]
  40f848:	add	x0, x1, x0
  40f84c:	bl	40f570 <wcrtomb@plt+0xa860>
  40f850:	mov	w0, #0x1                   	// #1
  40f854:	b	40f868 <wcrtomb@plt+0xab58>
  40f858:	ldr	x0, [sp, #104]
  40f85c:	cmp	x0, #0x0
  40f860:	b.gt	40f648 <wcrtomb@plt+0xa938>
  40f864:	mov	w0, #0x0                   	// #0
  40f868:	ldp	x19, x20, [sp, #16]
  40f86c:	ldp	x29, x30, [sp], #112
  40f870:	ret
  40f874:	stp	x29, x30, [sp, #-176]!
  40f878:	mov	x29, sp
  40f87c:	stp	x19, x20, [sp, #16]
  40f880:	str	x0, [sp, #40]
  40f884:	str	x1, [sp, #32]
  40f888:	ldr	x0, [sp, #40]
  40f88c:	ldr	x0, [x0, #392]
  40f890:	cmp	x0, #0x0
  40f894:	cset	w0, eq  // eq = none
  40f898:	strb	w0, [sp, #127]
  40f89c:	str	xzr, [sp, #112]
  40f8a0:	bl	405f78 <wcrtomb@plt+0x1268>
  40f8a4:	str	x0, [sp, #104]
  40f8a8:	ldr	x0, [sp, #40]
  40f8ac:	str	xzr, [x0, #136]
  40f8b0:	ldr	x0, [sp, #40]
  40f8b4:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  40f8b8:	str	x0, [sp, #112]
  40f8bc:	ldr	x0, [sp, #112]
  40f8c0:	cmp	x0, #0x0
  40f8c4:	b.eq	40fdc0 <wcrtomb@plt+0xb0b0>  // b.none
  40f8c8:	ldr	x0, [sp, #40]
  40f8cc:	bl	412bfc <wcrtomb@plt+0xdeec>
  40f8d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f8d4:	add	x0, x0, #0x51
  40f8d8:	ldrb	w0, [x0]
  40f8dc:	cmp	w0, #0x0
  40f8e0:	b.eq	40f908 <wcrtomb@plt+0xabf8>  // b.none
  40f8e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f8e8:	add	x0, x0, #0x360
  40f8ec:	ldr	w0, [x0]
  40f8f0:	cmp	w0, #0x4
  40f8f4:	b.eq	40f908 <wcrtomb@plt+0xabf8>  // b.none
  40f8f8:	ldr	x0, [sp, #112]
  40f8fc:	mov	w1, #0x44                  	// #68
  40f900:	strb	w1, [x0, #156]
  40f904:	b	40f914 <wcrtomb@plt+0xac04>
  40f908:	ldr	x0, [sp, #112]
  40f90c:	mov	w1, #0x35                  	// #53
  40f910:	strb	w1, [x0, #156]
  40f914:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f918:	add	x0, x0, #0x51
  40f91c:	ldrb	w0, [x0]
  40f920:	eor	w0, w0, #0x1
  40f924:	and	w0, w0, #0xff
  40f928:	cmp	w0, #0x0
  40f92c:	b.eq	40f944 <wcrtomb@plt+0xac34>  // b.none
  40f930:	ldr	x2, [sp, #104]
  40f934:	ldr	x1, [sp, #112]
  40f938:	ldr	x0, [sp, #40]
  40f93c:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  40f940:	b	40faec <wcrtomb@plt+0xaddc>
  40f944:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f948:	add	x0, x0, #0x40
  40f94c:	ldr	x0, [x0]
  40f950:	ldr	x0, [x0, #56]
  40f954:	cmp	x0, #0x0
  40f958:	b.eq	40faec <wcrtomb@plt+0xaddc>  // b.none
  40f95c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f960:	add	x0, x0, #0x360
  40f964:	ldr	w0, [x0]
  40f968:	cmp	w0, #0x4
  40f96c:	b.ne	40f9ac <wcrtomb@plt+0xac9c>  // b.any
  40f970:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f974:	add	x0, x0, #0x40
  40f978:	ldr	x0, [x0]
  40f97c:	ldr	x0, [x0, #56]
  40f980:	bl	41d020 <wcrtomb@plt+0x18310>
  40f984:	mov	x2, x0
  40f988:	ldr	x1, [sp, #40]
  40f98c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40f990:	add	x0, x0, #0xd90
  40f994:	bl	4191e4 <wcrtomb@plt+0x144d4>
  40f998:	ldr	x2, [sp, #104]
  40f99c:	ldr	x1, [sp, #112]
  40f9a0:	ldr	x0, [sp, #40]
  40f9a4:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  40f9a8:	b	40fddc <wcrtomb@plt+0xb0cc>
  40f9ac:	bl	405f78 <wcrtomb@plt+0x1268>
  40f9b0:	str	x0, [sp, #104]
  40f9b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40f9b8:	add	x0, x0, #0x40
  40f9bc:	ldr	x0, [x0]
  40f9c0:	ldr	x0, [x0, #56]
  40f9c4:	bl	41d020 <wcrtomb@plt+0x18310>
  40f9c8:	str	x0, [sp, #96]
  40f9cc:	ldr	x0, [sp, #96]
  40f9d0:	bl	41b848 <wcrtomb@plt+0x16b38>
  40f9d4:	str	x0, [sp, #88]
  40f9d8:	ldr	x0, [sp, #112]
  40f9dc:	add	x0, x0, #0x7c
  40f9e0:	mov	x2, #0xc                   	// #12
  40f9e4:	mov	x1, x0
  40f9e8:	ldr	x0, [sp, #88]
  40f9ec:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  40f9f0:	ldr	x2, [sp, #104]
  40f9f4:	ldr	x1, [sp, #112]
  40f9f8:	ldr	x0, [sp, #40]
  40f9fc:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  40fa00:	ldr	x0, [sp, #96]
  40fa04:	str	x0, [sp, #152]
  40fa08:	ldr	x0, [sp, #88]
  40fa0c:	str	x0, [sp, #168]
  40fa10:	ldr	x0, [sp, #40]
  40fa14:	ldr	x0, [x0, #8]
  40fa18:	ldr	x2, [sp, #88]
  40fa1c:	ldr	x1, [sp, #88]
  40fa20:	bl	404ee8 <wcrtomb@plt+0x1d8>
  40fa24:	b	40fadc <wcrtomb@plt+0xadcc>
  40fa28:	bl	406030 <wcrtomb@plt+0x1320>
  40fa2c:	str	x0, [sp, #112]
  40fa30:	ldr	x0, [sp, #112]
  40fa34:	bl	406138 <wcrtomb@plt+0x1428>
  40fa38:	str	x0, [sp, #160]
  40fa3c:	ldr	x0, [sp, #168]
  40fa40:	ldr	x1, [sp, #160]
  40fa44:	cmp	x1, x0
  40fa48:	b.ls	40fa94 <wcrtomb@plt+0xad84>  // b.plast
  40fa4c:	ldr	x0, [sp, #168]
  40fa50:	str	x0, [sp, #160]
  40fa54:	ldr	x0, [sp, #160]
  40fa58:	and	x0, x0, #0x1ff
  40fa5c:	str	x0, [sp, #80]
  40fa60:	ldr	x0, [sp, #80]
  40fa64:	cmp	x0, #0x0
  40fa68:	b.eq	40fa94 <wcrtomb@plt+0xad84>  // b.none
  40fa6c:	ldr	x1, [sp, #112]
  40fa70:	ldr	x0, [sp, #168]
  40fa74:	add	x3, x1, x0
  40fa78:	mov	x1, #0x200                 	// #512
  40fa7c:	ldr	x0, [sp, #80]
  40fa80:	sub	x0, x1, x0
  40fa84:	mov	x2, x0
  40fa88:	mov	w1, #0x0                   	// #0
  40fa8c:	mov	x0, x3
  40fa90:	bl	4044d0 <memset@plt>
  40fa94:	ldr	x0, [sp, #112]
  40fa98:	ldr	x2, [sp, #160]
  40fa9c:	ldr	x1, [sp, #152]
  40faa0:	bl	404020 <memcpy@plt>
  40faa4:	ldr	x1, [sp, #168]
  40faa8:	ldr	x0, [sp, #160]
  40faac:	sub	x0, x1, x0
  40fab0:	str	x0, [sp, #168]
  40fab4:	ldr	x1, [sp, #152]
  40fab8:	ldr	x0, [sp, #160]
  40fabc:	add	x0, x1, x0
  40fac0:	str	x0, [sp, #152]
  40fac4:	ldr	x0, [sp, #160]
  40fac8:	sub	x0, x0, #0x1
  40facc:	and	x0, x0, #0xfffffffffffffe00
  40fad0:	ldr	x1, [sp, #112]
  40fad4:	add	x0, x1, x0
  40fad8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  40fadc:	ldr	x0, [sp, #168]
  40fae0:	cmp	x0, #0x0
  40fae4:	b.gt	40fa28 <wcrtomb@plt+0xad18>
  40fae8:	b	40fddc <wcrtomb@plt+0xb0cc>
  40faec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40faf0:	add	x0, x0, #0x2d4
  40faf4:	ldr	w0, [x0]
  40faf8:	cmp	w0, #0x0
  40fafc:	b.eq	40fdc8 <wcrtomb@plt+0xb0b8>  // b.none
  40fb00:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40fb04:	add	x0, x0, #0x85
  40fb08:	ldrb	w0, [x0]
  40fb0c:	cmp	w0, #0x0
  40fb10:	b.eq	40fbc8 <wcrtomb@plt+0xaeb8>  // b.none
  40fb14:	ldrb	w0, [sp, #127]
  40fb18:	eor	w0, w0, #0x1
  40fb1c:	and	w0, w0, #0xff
  40fb20:	cmp	w0, #0x0
  40fb24:	b.eq	40fbc8 <wcrtomb@plt+0xaeb8>  // b.none
  40fb28:	ldr	x0, [sp, #40]
  40fb2c:	ldr	x0, [x0, #392]
  40fb30:	ldr	x1, [x0, #88]
  40fb34:	ldr	x0, [sp, #40]
  40fb38:	ldr	x0, [x0, #88]
  40fb3c:	cmp	x1, x0
  40fb40:	b.eq	40fbc8 <wcrtomb@plt+0xaeb8>  // b.none
  40fb44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40fb48:	add	x0, x0, #0x2b4
  40fb4c:	ldr	w0, [x0]
  40fb50:	cmp	w0, #0x0
  40fb54:	b.eq	40fdd0 <wcrtomb@plt+0xb0c0>  // b.none
  40fb58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  40fb5c:	add	x0, x0, #0x24c
  40fb60:	ldr	w0, [x0]
  40fb64:	and	w0, w0, #0x40000
  40fb68:	cmp	w0, #0x0
  40fb6c:	b.eq	40fdd0 <wcrtomb@plt+0xb0c0>  // b.none
  40fb70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40fb74:	add	x0, x0, #0x420
  40fb78:	ldr	x0, [x0]
  40fb7c:	cmp	x0, #0x0
  40fb80:	b.eq	40fb94 <wcrtomb@plt+0xae84>  // b.none
  40fb84:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40fb88:	add	x0, x0, #0x420
  40fb8c:	ldr	x0, [x0]
  40fb90:	blr	x0
  40fb94:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40fb98:	add	x0, x0, #0xda0
  40fb9c:	bl	404c60 <gettext@plt>
  40fba0:	mov	x19, x0
  40fba4:	ldr	x0, [sp, #40]
  40fba8:	ldr	x0, [x0]
  40fbac:	bl	459cd8 <argp_usage@@Base+0x10bec>
  40fbb0:	mov	x3, x0
  40fbb4:	mov	x2, x19
  40fbb8:	mov	w1, #0x0                   	// #0
  40fbbc:	mov	w0, #0x0                   	// #0
  40fbc0:	bl	404100 <error@plt>
  40fbc4:	b	40fdd0 <wcrtomb@plt+0xb0c0>
  40fbc8:	add	x0, sp, #0x38
  40fbcc:	mov	x1, x0
  40fbd0:	ldr	x0, [sp, #40]
  40fbd4:	bl	40d0e8 <wcrtomb@plt+0x83d8>
  40fbd8:	cmp	w0, #0x3
  40fbdc:	b.eq	40fdd8 <wcrtomb@plt+0xb0c8>  // b.none
  40fbe0:	cmp	w0, #0x3
  40fbe4:	b.hi	40fddc <wcrtomb@plt+0xb0cc>  // b.pmore
  40fbe8:	cmp	w0, #0x2
  40fbec:	b.eq	40fd94 <wcrtomb@plt+0xb084>  // b.none
  40fbf0:	cmp	w0, #0x2
  40fbf4:	b.hi	40fddc <wcrtomb@plt+0xb0cc>  // b.pmore
  40fbf8:	cmp	w0, #0x0
  40fbfc:	b.eq	40fc0c <wcrtomb@plt+0xaefc>  // b.none
  40fc00:	cmp	w0, #0x1
  40fc04:	b.eq	40fcf8 <wcrtomb@plt+0xafe8>  // b.none
  40fc08:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fc0c:	ldr	x0, [sp, #40]
  40fc10:	ldr	x0, [x0]
  40fc14:	bl	45b858 <argp_usage@@Base+0x1276c>
  40fc18:	str	x0, [sp, #144]
  40fc1c:	ldr	x0, [sp, #144]
  40fc20:	bl	4040b0 <strlen@plt>
  40fc24:	str	x0, [sp, #72]
  40fc28:	ldr	x0, [sp, #72]
  40fc2c:	str	x0, [sp, #136]
  40fc30:	ldr	x0, [sp, #32]
  40fc34:	str	x0, [sp, #128]
  40fc38:	b	40fcd4 <wcrtomb@plt+0xafc4>
  40fc3c:	ldr	x1, [sp, #72]
  40fc40:	ldr	x0, [sp, #64]
  40fc44:	add	x0, x1, x0
  40fc48:	ldr	x1, [sp, #136]
  40fc4c:	cmp	x1, x0
  40fc50:	b.cs	40fc7c <wcrtomb@plt+0xaf6c>  // b.hs, b.nlast
  40fc54:	ldr	x1, [sp, #72]
  40fc58:	ldr	x0, [sp, #64]
  40fc5c:	add	x0, x1, x0
  40fc60:	str	x0, [sp, #136]
  40fc64:	ldr	x0, [sp, #136]
  40fc68:	add	x0, x0, #0x1
  40fc6c:	mov	x1, x0
  40fc70:	ldr	x0, [sp, #144]
  40fc74:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  40fc78:	str	x0, [sp, #144]
  40fc7c:	ldr	x1, [sp, #144]
  40fc80:	ldr	x0, [sp, #72]
  40fc84:	add	x0, x1, x0
  40fc88:	ldr	x1, [sp, #128]
  40fc8c:	bl	4049d0 <strcpy@plt>
  40fc90:	ldr	x1, [sp, #40]
  40fc94:	ldr	x0, [sp, #144]
  40fc98:	bl	412f50 <wcrtomb@plt+0xe240>
  40fc9c:	and	w0, w0, #0xff
  40fca0:	eor	w0, w0, #0x1
  40fca4:	and	w0, w0, #0xff
  40fca8:	cmp	w0, #0x0
  40fcac:	b.eq	40fcc0 <wcrtomb@plt+0xafb0>  // b.none
  40fcb0:	ldr	x2, [sp, #144]
  40fcb4:	ldr	x1, [sp, #128]
  40fcb8:	ldr	x0, [sp, #40]
  40fcbc:	bl	41199c <wcrtomb@plt+0xcc8c>
  40fcc0:	ldr	x0, [sp, #64]
  40fcc4:	add	x0, x0, #0x1
  40fcc8:	ldr	x1, [sp, #128]
  40fccc:	add	x0, x1, x0
  40fcd0:	str	x0, [sp, #128]
  40fcd4:	ldr	x0, [sp, #128]
  40fcd8:	bl	4040b0 <strlen@plt>
  40fcdc:	str	x0, [sp, #64]
  40fce0:	ldr	x0, [sp, #64]
  40fce4:	cmp	x0, #0x0
  40fce8:	b.ne	40fc3c <wcrtomb@plt+0xaf2c>  // b.any
  40fcec:	ldr	x0, [sp, #144]
  40fcf0:	bl	404880 <free@plt>
  40fcf4:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fcf8:	ldr	x0, [sp, #40]
  40fcfc:	ldr	x19, [x0]
  40fd00:	ldr	x20, [sp, #56]
  40fd04:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40fd08:	add	x0, x0, #0xdd8
  40fd0c:	bl	404c60 <gettext@plt>
  40fd10:	mov	x2, x0
  40fd14:	mov	x1, x20
  40fd18:	mov	x0, x19
  40fd1c:	bl	40d02c <wcrtomb@plt+0x831c>
  40fd20:	ldr	x0, [sp, #40]
  40fd24:	ldr	x0, [x0]
  40fd28:	bl	4040b0 <strlen@plt>
  40fd2c:	mov	x19, x0
  40fd30:	ldr	x0, [sp, #56]
  40fd34:	bl	4040b0 <strlen@plt>
  40fd38:	add	x0, x19, x0
  40fd3c:	add	x0, x0, #0x1
  40fd40:	str	x0, [sp, #136]
  40fd44:	ldr	x0, [sp, #136]
  40fd48:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  40fd4c:	str	x0, [sp, #144]
  40fd50:	ldr	x0, [sp, #40]
  40fd54:	ldr	x0, [x0]
  40fd58:	mov	x1, x0
  40fd5c:	ldr	x0, [sp, #144]
  40fd60:	bl	4049d0 <strcpy@plt>
  40fd64:	ldr	x0, [sp, #56]
  40fd68:	mov	x1, x0
  40fd6c:	ldr	x0, [sp, #144]
  40fd70:	bl	4044c0 <strcat@plt>
  40fd74:	ldr	x0, [sp, #56]
  40fd78:	ldr	x2, [sp, #144]
  40fd7c:	mov	x1, x0
  40fd80:	ldr	x0, [sp, #40]
  40fd84:	bl	41199c <wcrtomb@plt+0xcc8c>
  40fd88:	ldr	x0, [sp, #144]
  40fd8c:	bl	404880 <free@plt>
  40fd90:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fd94:	ldr	x0, [sp, #40]
  40fd98:	ldr	x19, [x0]
  40fd9c:	ldr	x20, [sp, #56]
  40fda0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  40fda4:	add	x0, x0, #0xdd8
  40fda8:	bl	404c60 <gettext@plt>
  40fdac:	mov	x2, x0
  40fdb0:	mov	x1, x20
  40fdb4:	mov	x0, x19
  40fdb8:	bl	40d02c <wcrtomb@plt+0x831c>
  40fdbc:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fdc0:	nop
  40fdc4:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fdc8:	nop
  40fdcc:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fdd0:	nop
  40fdd4:	b	40fddc <wcrtomb@plt+0xb0cc>
  40fdd8:	nop
  40fddc:	ldp	x19, x20, [sp, #16]
  40fde0:	ldp	x29, x30, [sp], #176
  40fde4:	ret
  40fde8:	stp	x29, x30, [sp, #-48]!
  40fdec:	mov	x29, sp
  40fdf0:	str	x0, [sp, #24]
  40fdf4:	ldr	x0, [sp, #24]
  40fdf8:	ldr	x0, [x0]
  40fdfc:	bl	4040b0 <strlen@plt>
  40fe00:	str	x0, [sp, #40]
  40fe04:	b	40fe14 <wcrtomb@plt+0xb104>
  40fe08:	ldr	x0, [sp, #40]
  40fe0c:	sub	x0, x0, #0x1
  40fe10:	str	x0, [sp, #40]
  40fe14:	ldr	x0, [sp, #40]
  40fe18:	cmp	x0, #0x0
  40fe1c:	b.eq	40fe40 <wcrtomb@plt+0xb130>  // b.none
  40fe20:	ldr	x0, [sp, #24]
  40fe24:	ldr	x1, [x0]
  40fe28:	ldr	x0, [sp, #40]
  40fe2c:	sub	x0, x0, #0x1
  40fe30:	add	x0, x1, x0
  40fe34:	ldrb	w0, [x0]
  40fe38:	cmp	w0, #0x2f
  40fe3c:	b.eq	40fe08 <wcrtomb@plt+0xb0f8>  // b.none
  40fe40:	ldr	x0, [sp, #24]
  40fe44:	ldr	x1, [x0]
  40fe48:	ldr	x0, [sp, #40]
  40fe4c:	add	x0, x1, x0
  40fe50:	ldrb	w0, [x0]
  40fe54:	cmp	w0, #0x2f
  40fe58:	b.eq	40fe84 <wcrtomb@plt+0xb174>  // b.none
  40fe5c:	ldr	x0, [sp, #24]
  40fe60:	ldr	x2, [x0]
  40fe64:	ldr	x0, [sp, #40]
  40fe68:	add	x0, x0, #0x2
  40fe6c:	mov	x1, x0
  40fe70:	mov	x0, x2
  40fe74:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  40fe78:	mov	x1, x0
  40fe7c:	ldr	x0, [sp, #24]
  40fe80:	str	x1, [x0]
  40fe84:	ldr	x0, [sp, #24]
  40fe88:	ldr	x1, [x0]
  40fe8c:	ldr	x0, [sp, #40]
  40fe90:	add	x2, x0, #0x1
  40fe94:	str	x2, [sp, #40]
  40fe98:	add	x0, x1, x0
  40fe9c:	mov	w1, #0x2f                  	// #47
  40fea0:	strb	w1, [x0]
  40fea4:	ldr	x0, [sp, #24]
  40fea8:	ldr	x1, [x0]
  40feac:	ldr	x0, [sp, #40]
  40feb0:	add	x0, x1, x0
  40feb4:	strb	wzr, [x0]
  40feb8:	nop
  40febc:	ldp	x29, x30, [sp], #48
  40fec0:	ret
  40fec4:	stp	x29, x30, [sp, #-48]!
  40fec8:	mov	x29, sp
  40fecc:	str	x0, [sp, #24]
  40fed0:	bl	404bc0 <__errno_location@plt>
  40fed4:	ldr	w0, [x0]
  40fed8:	cmp	w0, #0x18
  40fedc:	b.ne	40ff7c <wcrtomb@plt+0xb26c>  // b.any
  40fee0:	ldr	x0, [sp, #24]
  40fee4:	cmp	x0, #0x0
  40fee8:	b.eq	40ff7c <wcrtomb@plt+0xb26c>  // b.none
  40feec:	ldr	x0, [sp, #24]
  40fef0:	ldr	x0, [x0, #392]
  40fef4:	cmp	x0, #0x0
  40fef8:	b.eq	40ff7c <wcrtomb@plt+0xb26c>  // b.none
  40fefc:	ldr	x0, [sp, #24]
  40ff00:	ldr	x0, [x0, #392]
  40ff04:	ldr	x0, [x0, #392]
  40ff08:	str	x0, [sp, #40]
  40ff0c:	b	40ff60 <wcrtomb@plt+0xb250>
  40ff10:	ldr	x0, [sp, #40]
  40ff14:	ldr	w0, [x0, #408]
  40ff18:	cmp	w0, #0x0
  40ff1c:	b.le	40ff54 <wcrtomb@plt+0xb244>
  40ff20:	ldr	x0, [sp, #40]
  40ff24:	ldr	x0, [x0, #392]
  40ff28:	cmp	x0, #0x0
  40ff2c:	b.eq	40ff44 <wcrtomb@plt+0xb234>  // b.none
  40ff30:	ldr	x0, [sp, #40]
  40ff34:	ldr	x0, [x0, #392]
  40ff38:	ldr	w0, [x0, #408]
  40ff3c:	cmp	w0, #0x0
  40ff40:	b.gt	40ff54 <wcrtomb@plt+0xb244>
  40ff44:	ldr	x0, [sp, #40]
  40ff48:	bl	434e3c <wcrtomb@plt+0x3012c>
  40ff4c:	mov	w0, #0x1                   	// #1
  40ff50:	b	40ff80 <wcrtomb@plt+0xb270>
  40ff54:	ldr	x0, [sp, #40]
  40ff58:	ldr	x0, [x0, #392]
  40ff5c:	str	x0, [sp, #40]
  40ff60:	ldr	x0, [sp, #40]
  40ff64:	cmp	x0, #0x0
  40ff68:	b.ne	40ff10 <wcrtomb@plt+0xb200>  // b.any
  40ff6c:	bl	404bc0 <__errno_location@plt>
  40ff70:	mov	x1, x0
  40ff74:	mov	w0, #0x18                  	// #24
  40ff78:	str	w0, [x1]
  40ff7c:	mov	w0, #0x0                   	// #0
  40ff80:	ldp	x29, x30, [sp], #48
  40ff84:	ret
  40ff88:	stp	x29, x30, [sp, #-32]!
  40ff8c:	mov	x29, sp
  40ff90:	str	x0, [sp, #24]
  40ff94:	b	40ffbc <wcrtomb@plt+0xb2ac>
  40ff98:	ldr	x0, [sp, #24]
  40ff9c:	bl	40fec4 <wcrtomb@plt+0xb1b4>
  40ffa0:	and	w0, w0, #0xff
  40ffa4:	eor	w0, w0, #0x1
  40ffa8:	and	w0, w0, #0xff
  40ffac:	cmp	w0, #0x0
  40ffb0:	b.eq	40ffbc <wcrtomb@plt+0xb2ac>  // b.none
  40ffb4:	mov	x0, #0x0                   	// #0
  40ffb8:	b	410004 <wcrtomb@plt+0xb2f4>
  40ffbc:	ldr	x0, [sp, #24]
  40ffc0:	ldr	w0, [x0, #408]
  40ffc4:	bl	4046c0 <fdopendir@plt>
  40ffc8:	mov	x1, x0
  40ffcc:	ldr	x0, [sp, #24]
  40ffd0:	str	x1, [x0, #400]
  40ffd4:	ldr	x0, [sp, #24]
  40ffd8:	ldr	x0, [x0, #400]
  40ffdc:	cmp	x0, #0x0
  40ffe0:	b.eq	40ff98 <wcrtomb@plt+0xb288>  // b.none
  40ffe4:	ldr	x0, [sp, #24]
  40ffe8:	ldr	x2, [x0, #400]
  40ffec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  40fff0:	add	x0, x0, #0x238
  40fff4:	ldr	w0, [x0]
  40fff8:	mov	w1, w0
  40fffc:	mov	x0, x2
  410000:	bl	45a574 <argp_usage@@Base+0x11488>
  410004:	ldp	x29, x30, [sp], #32
  410008:	ret
  41000c:	stp	x29, x30, [sp, #-48]!
  410010:	mov	x29, sp
  410014:	str	x0, [sp, #24]
  410018:	ldr	x0, [sp, #24]
  41001c:	bl	40ff88 <wcrtomb@plt+0xb278>
  410020:	str	x0, [sp, #40]
  410024:	ldr	x0, [sp, #40]
  410028:	cmp	x0, #0x0
  41002c:	b.ne	410044 <wcrtomb@plt+0xb334>  // b.any
  410030:	ldr	x0, [sp, #24]
  410034:	ldr	x0, [x0]
  410038:	bl	426024 <wcrtomb@plt+0x21314>
  41003c:	mov	w0, #0x0                   	// #0
  410040:	b	410064 <wcrtomb@plt+0xb354>
  410044:	ldr	x1, [sp, #40]
  410048:	ldr	x0, [sp, #24]
  41004c:	bl	40f874 <wcrtomb@plt+0xab64>
  410050:	ldr	x0, [sp, #24]
  410054:	bl	410ac8 <wcrtomb@plt+0xbdb8>
  410058:	ldr	x0, [sp, #40]
  41005c:	bl	404880 <free@plt>
  410060:	mov	w0, #0x1                   	// #1
  410064:	ldp	x29, x30, [sp], #48
  410068:	ret
  41006c:	sub	sp, sp, #0x200
  410070:	stp	x29, x30, [sp]
  410074:	mov	x29, sp
  410078:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41007c:	add	x0, x0, #0x38
  410080:	ldr	x0, [x0]
  410084:	cmp	x0, #0x1
  410088:	b.hi	4100b0 <wcrtomb@plt+0xb3a0>  // b.pmore
  41008c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410090:	add	x0, x0, #0x270
  410094:	ldrb	w0, [x0]
  410098:	eor	w0, w0, #0x1
  41009c:	and	w0, w0, #0xff
  4100a0:	cmp	w0, #0x0
  4100a4:	b.eq	4100b0 <wcrtomb@plt+0xb3a0>  // b.none
  4100a8:	mov	w0, #0x1                   	// #1
  4100ac:	b	4100b4 <wcrtomb@plt+0xb3a4>
  4100b0:	mov	w0, #0x0                   	// #0
  4100b4:	mov	w1, w0
  4100b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4100bc:	add	x0, x0, #0x7e0
  4100c0:	str	w1, [x0]
  4100c4:	mov	w0, #0x1                   	// #1
  4100c8:	bl	40a6d0 <wcrtomb@plt+0x59c0>
  4100cc:	bl	405160 <wcrtomb@plt+0x450>
  4100d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4100d4:	add	x0, x0, #0x51
  4100d8:	ldrb	w0, [x0]
  4100dc:	cmp	w0, #0x0
  4100e0:	b.eq	410448 <wcrtomb@plt+0xb738>  // b.none
  4100e4:	mov	x0, #0x3e8                 	// #1000
  4100e8:	str	x0, [sp, #504]
  4100ec:	ldr	x0, [sp, #504]
  4100f0:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4100f4:	str	x0, [sp, #496]
  4100f8:	bl	429988 <wcrtomb@plt+0x24c78>
  4100fc:	b	410140 <wcrtomb@plt+0xb430>
  410100:	ldr	x0, [sp, #464]
  410104:	ldr	x0, [x0, #16]
  410108:	mov	x1, #0x0                   	// #0
  41010c:	bl	412f50 <wcrtomb@plt+0xe240>
  410110:	and	w0, w0, #0xff
  410114:	eor	w0, w0, #0x1
  410118:	and	w0, w0, #0xff
  41011c:	cmp	w0, #0x0
  410120:	b.eq	410140 <wcrtomb@plt+0xb430>  // b.none
  410124:	ldr	x0, [sp, #464]
  410128:	ldr	x1, [x0, #16]
  41012c:	ldr	x0, [sp, #464]
  410130:	ldr	x0, [x0, #16]
  410134:	mov	x2, x0
  410138:	mov	x0, #0x0                   	// #0
  41013c:	bl	41199c <wcrtomb@plt+0xcc8c>
  410140:	bl	429f68 <wcrtomb@plt+0x25258>
  410144:	str	x0, [sp, #464]
  410148:	ldr	x0, [sp, #464]
  41014c:	cmp	x0, #0x0
  410150:	b.ne	410100 <wcrtomb@plt+0xb3f0>  // b.any
  410154:	bl	42a060 <wcrtomb@plt+0x25350>
  410158:	b	4103f8 <wcrtomb@plt+0xb6e8>
  41015c:	ldr	x0, [sp, #464]
  410160:	ldr	x0, [x0, #16]
  410164:	mov	x1, #0x0                   	// #0
  410168:	bl	412f50 <wcrtomb@plt+0xe240>
  41016c:	and	w0, w0, #0xff
  410170:	eor	w0, w0, #0x1
  410174:	and	w0, w0, #0xff
  410178:	cmp	w0, #0x0
  41017c:	b.eq	4103f8 <wcrtomb@plt+0xb6e8>  // b.none
  410180:	ldr	x0, [sp, #464]
  410184:	ldr	x0, [x0, #16]
  410188:	bl	4040b0 <strlen@plt>
  41018c:	str	x0, [sp, #480]
  410190:	ldr	x1, [sp, #504]
  410194:	ldr	x0, [sp, #480]
  410198:	cmp	x1, x0
  41019c:	b.hi	4101d4 <wcrtomb@plt+0xb4c4>  // b.pmore
  4101a0:	b	4101a8 <wcrtomb@plt+0xb498>
  4101a4:	nop
  4101a8:	ldr	x0, [sp, #504]
  4101ac:	lsl	x0, x0, #1
  4101b0:	str	x0, [sp, #504]
  4101b4:	ldr	x1, [sp, #504]
  4101b8:	ldr	x0, [sp, #480]
  4101bc:	cmp	x1, x0
  4101c0:	b.ls	4101a4 <wcrtomb@plt+0xb494>  // b.plast
  4101c4:	ldr	x1, [sp, #504]
  4101c8:	ldr	x0, [sp, #496]
  4101cc:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  4101d0:	str	x0, [sp, #496]
  4101d4:	ldr	x0, [sp, #464]
  4101d8:	ldr	x0, [x0, #16]
  4101dc:	ldr	x2, [sp, #480]
  4101e0:	mov	x1, x0
  4101e4:	ldr	x0, [sp, #496]
  4101e8:	bl	404020 <memcpy@plt>
  4101ec:	ldr	x0, [sp, #480]
  4101f0:	sub	x0, x0, #0x1
  4101f4:	ldr	x1, [sp, #496]
  4101f8:	add	x0, x1, x0
  4101fc:	ldrb	w0, [x0]
  410200:	cmp	w0, #0x2f
  410204:	b.eq	410224 <wcrtomb@plt+0xb514>  // b.none
  410208:	ldr	x0, [sp, #480]
  41020c:	add	x1, x0, #0x1
  410210:	str	x1, [sp, #480]
  410214:	ldr	x1, [sp, #496]
  410218:	add	x0, x1, x0
  41021c:	mov	w1, #0x2f                  	// #47
  410220:	strb	w1, [x0]
  410224:	add	x0, sp, #0x18
  410228:	bl	434e14 <wcrtomb@plt+0x30104>
  41022c:	ldr	x0, [sp, #464]
  410230:	ldr	x0, [x0, #56]
  410234:	bl	41cfd8 <wcrtomb@plt+0x182c8>
  410238:	str	x0, [sp, #488]
  41023c:	ldr	x0, [sp, #488]
  410240:	cmp	x0, #0x0
  410244:	b.eq	4103f0 <wcrtomb@plt+0xb6e0>  // b.none
  410248:	b	4103e0 <wcrtomb@plt+0xb6d0>
  41024c:	ldr	x0, [sp, #488]
  410250:	bl	4040b0 <strlen@plt>
  410254:	str	x0, [sp, #456]
  410258:	ldr	x0, [sp, #488]
  41025c:	ldrb	w0, [x0]
  410260:	cmp	w0, #0x59
  410264:	b.ne	4103cc <wcrtomb@plt+0xb6bc>  // b.any
  410268:	ldr	x0, [sp, #24]
  41026c:	cmp	x0, #0x0
  410270:	b.ne	410344 <wcrtomb@plt+0xb634>  // b.any
  410274:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  410278:	add	x0, x0, #0x8b0
  41027c:	ldr	w3, [x0]
  410280:	ldr	x0, [sp, #464]
  410284:	ldr	x1, [x0, #16]
  410288:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41028c:	add	x0, x0, #0x2ec
  410290:	ldr	w0, [x0]
  410294:	mov	w2, w0
  410298:	mov	w0, w3
  41029c:	bl	404b90 <openat@plt>
  4102a0:	str	w0, [sp, #452]
  4102a4:	ldr	w0, [sp, #452]
  4102a8:	cmp	w0, #0x0
  4102ac:	b.ge	4102e0 <wcrtomb@plt+0xb5d0>  // b.tcont
  4102b0:	ldr	x0, [sp, #464]
  4102b4:	ldr	x3, [x0, #16]
  4102b8:	ldr	x0, [sp, #464]
  4102bc:	ldr	x0, [x0, #64]
  4102c0:	cmp	x0, #0x0
  4102c4:	cset	w0, eq  // eq = none
  4102c8:	and	w1, w0, #0xff
  4102cc:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  4102d0:	add	x2, x0, #0xf04
  4102d4:	mov	x0, x3
  4102d8:	bl	426138 <wcrtomb@plt+0x21428>
  4102dc:	b	4103f0 <wcrtomb@plt+0xb6e0>
  4102e0:	ldr	w0, [sp, #452]
  4102e4:	str	w0, [sp, #432]
  4102e8:	add	x0, sp, #0x18
  4102ec:	add	x0, x0, #0x58
  4102f0:	mov	x1, x0
  4102f4:	ldr	w0, [sp, #452]
  4102f8:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  4102fc:	cmp	w0, #0x0
  410300:	b.eq	410334 <wcrtomb@plt+0xb624>  // b.none
  410304:	ldr	x0, [sp, #464]
  410308:	ldr	x3, [x0, #16]
  41030c:	ldr	x0, [sp, #464]
  410310:	ldr	x0, [x0, #64]
  410314:	cmp	x0, #0x0
  410318:	cset	w0, eq  // eq = none
  41031c:	and	w1, w0, #0xff
  410320:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  410324:	add	x2, x0, #0xe0
  410328:	mov	x0, x3
  41032c:	bl	426138 <wcrtomb@plt+0x21428>
  410330:	b	4103f0 <wcrtomb@plt+0xb6e0>
  410334:	ldr	x0, [sp, #464]
  410338:	ldr	x0, [x0, #16]
  41033c:	bl	45b858 <argp_usage@@Base+0x1276c>
  410340:	str	x0, [sp, #24]
  410344:	ldr	x1, [sp, #480]
  410348:	ldr	x0, [sp, #456]
  41034c:	add	x0, x1, x0
  410350:	ldr	x1, [sp, #504]
  410354:	cmp	x1, x0
  410358:	b.cs	410398 <wcrtomb@plt+0xb688>  // b.hs, b.nlast
  41035c:	b	410364 <wcrtomb@plt+0xb654>
  410360:	nop
  410364:	ldr	x0, [sp, #504]
  410368:	lsl	x0, x0, #1
  41036c:	str	x0, [sp, #504]
  410370:	ldr	x1, [sp, #480]
  410374:	ldr	x0, [sp, #456]
  410378:	add	x0, x1, x0
  41037c:	ldr	x1, [sp, #504]
  410380:	cmp	x1, x0
  410384:	b.cc	410360 <wcrtomb@plt+0xb650>  // b.lo, b.ul, b.last
  410388:	ldr	x1, [sp, #504]
  41038c:	ldr	x0, [sp, #496]
  410390:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  410394:	str	x0, [sp, #496]
  410398:	ldr	x1, [sp, #496]
  41039c:	ldr	x0, [sp, #480]
  4103a0:	add	x2, x1, x0
  4103a4:	ldr	x0, [sp, #488]
  4103a8:	add	x0, x0, #0x1
  4103ac:	mov	x1, x0
  4103b0:	mov	x0, x2
  4103b4:	bl	4049d0 <strcpy@plt>
  4103b8:	ldr	x0, [sp, #488]
  4103bc:	add	x1, x0, #0x1
  4103c0:	add	x0, sp, #0x18
  4103c4:	ldr	x2, [sp, #496]
  4103c8:	bl	41199c <wcrtomb@plt+0xcc8c>
  4103cc:	ldr	x0, [sp, #456]
  4103d0:	add	x0, x0, #0x1
  4103d4:	ldr	x1, [sp, #488]
  4103d8:	add	x0, x1, x0
  4103dc:	str	x0, [sp, #488]
  4103e0:	ldr	x0, [sp, #488]
  4103e4:	ldrb	w0, [x0]
  4103e8:	cmp	w0, #0x0
  4103ec:	b.ne	41024c <wcrtomb@plt+0xb53c>  // b.any
  4103f0:	add	x0, sp, #0x18
  4103f4:	bl	434ecc <wcrtomb@plt+0x301bc>
  4103f8:	bl	429f68 <wcrtomb@plt+0x25258>
  4103fc:	str	x0, [sp, #464]
  410400:	ldr	x0, [sp, #464]
  410404:	cmp	x0, #0x0
  410408:	b.ne	41015c <wcrtomb@plt+0xb44c>  // b.any
  41040c:	ldr	x0, [sp, #496]
  410410:	bl	404880 <free@plt>
  410414:	b	410460 <wcrtomb@plt+0xb750>
  410418:	mov	x1, #0x0                   	// #0
  41041c:	ldr	x0, [sp, #472]
  410420:	bl	412f50 <wcrtomb@plt+0xe240>
  410424:	and	w0, w0, #0xff
  410428:	eor	w0, w0, #0x1
  41042c:	and	w0, w0, #0xff
  410430:	cmp	w0, #0x0
  410434:	b.eq	410448 <wcrtomb@plt+0xb738>  // b.none
  410438:	ldr	x2, [sp, #472]
  41043c:	ldr	x1, [sp, #472]
  410440:	mov	x0, #0x0                   	// #0
  410444:	bl	41199c <wcrtomb@plt+0xcc8c>
  410448:	mov	w0, #0x1                   	// #1
  41044c:	bl	4283b4 <wcrtomb@plt+0x236a4>
  410450:	str	x0, [sp, #472]
  410454:	ldr	x0, [sp, #472]
  410458:	cmp	x0, #0x0
  41045c:	b.ne	410418 <wcrtomb@plt+0xb708>  // b.any
  410460:	bl	40df54 <wcrtomb@plt+0x9244>
  410464:	bl	407adc <wcrtomb@plt+0x2dcc>
  410468:	bl	436f9c <wcrtomb@plt+0x3228c>
  41046c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410470:	add	x0, x0, #0x370
  410474:	ldr	x0, [x0]
  410478:	cmp	x0, #0x0
  41047c:	b.eq	410484 <wcrtomb@plt+0xb774>  // b.none
  410480:	bl	41f018 <wcrtomb@plt+0x1a308>
  410484:	nop
  410488:	ldp	x29, x30, [sp]
  41048c:	add	sp, sp, #0x200
  410490:	ret
  410494:	sub	sp, sp, #0x20
  410498:	str	x0, [sp, #8]
  41049c:	str	x1, [sp]
  4104a0:	ldr	x0, [sp, #8]
  4104a4:	str	x0, [sp, #24]
  4104a8:	ldr	x0, [sp, #24]
  4104ac:	ldr	x1, [x0]
  4104b0:	ldr	x0, [sp, #24]
  4104b4:	ldr	x0, [x0, #8]
  4104b8:	eor	x0, x1, x0
  4104bc:	str	x0, [sp, #16]
  4104c0:	ldr	x0, [sp, #16]
  4104c4:	ldr	x1, [sp]
  4104c8:	udiv	x2, x0, x1
  4104cc:	ldr	x1, [sp]
  4104d0:	mul	x1, x2, x1
  4104d4:	sub	x0, x0, x1
  4104d8:	add	sp, sp, #0x20
  4104dc:	ret
  4104e0:	sub	sp, sp, #0x20
  4104e4:	str	x0, [sp, #8]
  4104e8:	str	x1, [sp]
  4104ec:	ldr	x0, [sp, #8]
  4104f0:	str	x0, [sp, #24]
  4104f4:	ldr	x0, [sp]
  4104f8:	str	x0, [sp, #16]
  4104fc:	ldr	x0, [sp, #24]
  410500:	ldr	x1, [x0]
  410504:	ldr	x0, [sp, #16]
  410508:	ldr	x0, [x0]
  41050c:	eor	x1, x1, x0
  410510:	ldr	x0, [sp, #24]
  410514:	ldr	x2, [x0, #8]
  410518:	ldr	x0, [sp, #16]
  41051c:	ldr	x0, [x0, #8]
  410520:	eor	x0, x2, x0
  410524:	orr	x0, x1, x0
  410528:	cmp	x0, #0x0
  41052c:	cset	w0, eq  // eq = none
  410530:	and	w0, w0, #0xff
  410534:	add	sp, sp, #0x20
  410538:	ret
  41053c:	stp	x29, x30, [sp, #-48]!
  410540:	mov	x29, sp
  410544:	str	x19, [sp, #16]
  410548:	str	x0, [sp, #40]
  41054c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410550:	add	x0, x0, #0x24c
  410554:	ldr	w0, [x0]
  410558:	and	w0, w0, #0x20
  41055c:	cmp	w0, #0x0
  410560:	b.eq	4105b4 <wcrtomb@plt+0xb8a4>  // b.none
  410564:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410568:	add	x0, x0, #0x420
  41056c:	ldr	x0, [x0]
  410570:	cmp	x0, #0x0
  410574:	b.eq	410588 <wcrtomb@plt+0xb878>  // b.none
  410578:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41057c:	add	x0, x0, #0x420
  410580:	ldr	x0, [x0]
  410584:	blr	x0
  410588:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  41058c:	add	x0, x0, #0xdf0
  410590:	bl	404c60 <gettext@plt>
  410594:	mov	x19, x0
  410598:	ldr	x0, [sp, #40]
  41059c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  4105a0:	mov	x3, x0
  4105a4:	mov	x2, x19
  4105a8:	mov	w1, #0x0                   	// #0
  4105ac:	mov	w0, #0x0                   	// #0
  4105b0:	bl	404100 <error@plt>
  4105b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4105b8:	add	x0, x0, #0x3e9
  4105bc:	ldrb	w0, [x0]
  4105c0:	eor	w0, w0, #0x1
  4105c4:	and	w0, w0, #0xff
  4105c8:	cmp	w0, #0x0
  4105cc:	b.eq	4105d8 <wcrtomb@plt+0xb8c8>  // b.none
  4105d0:	mov	w0, #0x2                   	// #2
  4105d4:	bl	434ff4 <wcrtomb@plt+0x302e4>
  4105d8:	nop
  4105dc:	ldr	x19, [sp, #16]
  4105e0:	ldp	x29, x30, [sp], #48
  4105e4:	ret
  4105e8:	stp	x29, x30, [sp, #-112]!
  4105ec:	mov	x29, sp
  4105f0:	str	x19, [sp, #16]
  4105f4:	str	x0, [sp, #40]
  4105f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4105fc:	add	x0, x0, #0x7e8
  410600:	ldr	x0, [x0]
  410604:	cmp	x0, #0x0
  410608:	b.eq	410798 <wcrtomb@plt+0xba88>  // b.none
  41060c:	ldr	x0, [sp, #40]
  410610:	ldr	w1, [x0, #108]
  410614:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410618:	add	x0, x0, #0x7e0
  41061c:	ldr	w0, [x0]
  410620:	cmp	w1, w0
  410624:	b.hi	41063c <wcrtomb@plt+0xb92c>  // b.pmore
  410628:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41062c:	add	x0, x0, #0x318
  410630:	ldrb	w0, [x0]
  410634:	cmp	w0, #0x0
  410638:	b.eq	410798 <wcrtomb@plt+0xba88>  // b.none
  41063c:	ldr	x0, [sp, #40]
  410640:	ldr	x0, [x0, #96]
  410644:	str	x0, [sp, #64]
  410648:	ldr	x0, [sp, #40]
  41064c:	ldr	x0, [x0, #88]
  410650:	str	x0, [sp, #56]
  410654:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410658:	add	x0, x0, #0x7e8
  41065c:	ldr	x0, [x0]
  410660:	add	x1, sp, #0x38
  410664:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  410668:	str	x0, [sp, #104]
  41066c:	ldr	x0, [sp, #104]
  410670:	cmp	x0, #0x0
  410674:	b.eq	410798 <wcrtomb@plt+0xba88>  // b.none
  410678:	ldr	x0, [sp, #104]
  41067c:	add	x3, x0, #0x14
  410680:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410684:	add	x0, x0, #0x3e8
  410688:	ldrb	w0, [x0]
  41068c:	mov	w2, w0
  410690:	mov	w1, #0x1                   	// #1
  410694:	mov	x0, x3
  410698:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41069c:	str	x0, [sp, #96]
  4106a0:	ldr	x0, [sp, #104]
  4106a4:	ldr	w0, [x0, #16]
  4106a8:	cmp	w0, #0x0
  4106ac:	b.eq	4106c4 <wcrtomb@plt+0xb9b4>  // b.none
  4106b0:	ldr	x0, [sp, #104]
  4106b4:	ldr	w0, [x0, #16]
  4106b8:	sub	w1, w0, #0x1
  4106bc:	ldr	x0, [sp, #104]
  4106c0:	str	w1, [x0, #16]
  4106c4:	bl	405f78 <wcrtomb@plt+0x1268>
  4106c8:	str	x0, [sp, #88]
  4106cc:	ldr	x0, [sp, #40]
  4106d0:	add	x0, x0, #0x18
  4106d4:	ldr	x1, [sp, #96]
  4106d8:	bl	423d0c <wcrtomb@plt+0x1effc>
  4106dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4106e0:	add	x0, x0, #0x360
  4106e4:	ldr	w0, [x0]
  4106e8:	cmp	w0, #0x2
  4106ec:	b.ne	4106f8 <wcrtomb@plt+0xb9e8>  // b.any
  4106f0:	mov	x19, #0x63                  	// #99
  4106f4:	b	4106fc <wcrtomb@plt+0xb9ec>
  4106f8:	mov	x19, #0x64                  	// #100
  4106fc:	ldr	x0, [sp, #96]
  410700:	bl	4040b0 <strlen@plt>
  410704:	cmp	x19, x0
  410708:	b.cs	410714 <wcrtomb@plt+0xba04>  // b.hs, b.nlast
  41070c:	ldr	x0, [sp, #40]
  410710:	bl	40e570 <wcrtomb@plt+0x9860>
  410714:	ldr	x0, [sp, #40]
  410718:	str	xzr, [x0, #136]
  41071c:	ldr	x0, [sp, #40]
  410720:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  410724:	str	x0, [sp, #80]
  410728:	ldr	x0, [sp, #80]
  41072c:	cmp	x0, #0x0
  410730:	b.ne	41073c <wcrtomb@plt+0xba2c>  // b.any
  410734:	mov	w0, #0x0                   	// #0
  410738:	b	41079c <wcrtomb@plt+0xba8c>
  41073c:	ldr	x0, [sp, #80]
  410740:	add	x0, x0, #0x9d
  410744:	mov	x2, #0x64                  	// #100
  410748:	ldr	x1, [sp, #96]
  41074c:	bl	40d2c4 <wcrtomb@plt+0x85b4>
  410750:	ldr	x0, [sp, #80]
  410754:	mov	w1, #0x31                  	// #49
  410758:	strb	w1, [x0, #156]
  41075c:	ldr	x2, [sp, #88]
  410760:	ldr	x1, [sp, #80]
  410764:	ldr	x0, [sp, #40]
  410768:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  41076c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410770:	add	x0, x0, #0x318
  410774:	ldrb	w0, [x0]
  410778:	cmp	w0, #0x0
  41077c:	b.eq	410790 <wcrtomb@plt+0xba80>  // b.none
  410780:	ldr	x0, [sp, #40]
  410784:	ldr	x0, [x0]
  410788:	mov	w1, #0x0                   	// #0
  41078c:	bl	437008 <wcrtomb@plt+0x322f8>
  410790:	mov	w0, #0x1                   	// #1
  410794:	b	41079c <wcrtomb@plt+0xba8c>
  410798:	mov	w0, #0x0                   	// #0
  41079c:	ldr	x19, [sp, #16]
  4107a0:	ldp	x29, x30, [sp], #112
  4107a4:	ret
  4107a8:	stp	x29, x30, [sp, #-64]!
  4107ac:	mov	x29, sp
  4107b0:	str	x0, [sp, #24]
  4107b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4107b8:	add	x0, x0, #0x84
  4107bc:	ldrb	w0, [x0]
  4107c0:	cmp	w0, #0x0
  4107c4:	b.ne	41092c <wcrtomb@plt+0xbc1c>  // b.any
  4107c8:	ldr	x0, [sp, #24]
  4107cc:	ldr	w1, [x0, #108]
  4107d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4107d4:	add	x0, x0, #0x7e0
  4107d8:	ldr	w0, [x0]
  4107dc:	cmp	w1, w0
  4107e0:	b.ls	410930 <wcrtomb@plt+0xbc20>  // b.plast
  4107e4:	str	xzr, [sp, #40]
  4107e8:	ldr	x0, [sp, #24]
  4107ec:	ldr	x3, [x0]
  4107f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4107f4:	add	x0, x0, #0x3e8
  4107f8:	ldrb	w0, [x0]
  4107fc:	mov	w2, w0
  410800:	mov	w1, #0x1                   	// #1
  410804:	mov	x0, x3
  410808:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41080c:	mov	x1, x0
  410810:	add	x0, sp, #0x28
  410814:	bl	423d0c <wcrtomb@plt+0x1effc>
  410818:	add	x0, sp, #0x28
  41081c:	mov	w1, #0x2                   	// #2
  410820:	bl	436a3c <wcrtomb@plt+0x31d2c>
  410824:	ldr	x0, [sp, #40]
  410828:	bl	4040b0 <strlen@plt>
  41082c:	add	x0, x0, #0x15
  410830:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  410834:	str	x0, [sp, #56]
  410838:	ldr	x0, [sp, #24]
  41083c:	ldr	x1, [x0, #96]
  410840:	ldr	x0, [sp, #56]
  410844:	str	x1, [x0, #8]
  410848:	ldr	x0, [sp, #24]
  41084c:	ldr	x1, [x0, #88]
  410850:	ldr	x0, [sp, #56]
  410854:	str	x1, [x0]
  410858:	ldr	x0, [sp, #24]
  41085c:	ldr	w1, [x0, #108]
  410860:	ldr	x0, [sp, #56]
  410864:	str	w1, [x0, #16]
  410868:	ldr	x0, [sp, #56]
  41086c:	add	x0, x0, #0x14
  410870:	ldr	x1, [sp, #40]
  410874:	bl	4049d0 <strcpy@plt>
  410878:	ldr	x0, [sp, #40]
  41087c:	bl	404880 <free@plt>
  410880:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410884:	add	x0, x0, #0x7e8
  410888:	ldr	x0, [x0]
  41088c:	cmp	x0, #0x0
  410890:	b.ne	4108d8 <wcrtomb@plt+0xbbc8>  // b.any
  410894:	mov	x4, #0x0                   	// #0
  410898:	adrp	x0, 410000 <wcrtomb@plt+0xb2f0>
  41089c:	add	x3, x0, #0x4e0
  4108a0:	adrp	x0, 410000 <wcrtomb@plt+0xb2f0>
  4108a4:	add	x2, x0, #0x494
  4108a8:	mov	x1, #0x0                   	// #0
  4108ac:	mov	x0, #0x0                   	// #0
  4108b0:	bl	44ea34 <argp_usage@@Base+0x5948>
  4108b4:	mov	x1, x0
  4108b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4108bc:	add	x0, x0, #0x7e8
  4108c0:	str	x1, [x0]
  4108c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4108c8:	add	x0, x0, #0x7e8
  4108cc:	ldr	x0, [x0]
  4108d0:	cmp	x0, #0x0
  4108d4:	b.eq	4108fc <wcrtomb@plt+0xbbec>  // b.none
  4108d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4108dc:	add	x0, x0, #0x7e8
  4108e0:	ldr	x0, [x0]
  4108e4:	ldr	x1, [sp, #56]
  4108e8:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  4108ec:	str	x0, [sp, #48]
  4108f0:	ldr	x0, [sp, #48]
  4108f4:	cmp	x0, #0x0
  4108f8:	b.ne	410900 <wcrtomb@plt+0xbbf0>  // b.any
  4108fc:	bl	412b2c <wcrtomb@plt+0xde1c>
  410900:	ldr	x1, [sp, #48]
  410904:	ldr	x0, [sp, #56]
  410908:	cmp	x1, x0
  41090c:	b.eq	410914 <wcrtomb@plt+0xbc04>  // b.none
  410910:	bl	404710 <abort@plt>
  410914:	ldr	x0, [sp, #56]
  410918:	ldr	w0, [x0, #16]
  41091c:	sub	w1, w0, #0x1
  410920:	ldr	x0, [sp, #56]
  410924:	str	w1, [x0, #16]
  410928:	b	410930 <wcrtomb@plt+0xbc20>
  41092c:	nop
  410930:	ldp	x29, x30, [sp], #64
  410934:	ret
  410938:	stp	x29, x30, [sp, #-48]!
  41093c:	mov	x29, sp
  410940:	str	x19, [sp, #16]
  410944:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410948:	add	x0, x0, #0x7e8
  41094c:	ldr	x0, [x0]
  410950:	cmp	x0, #0x0
  410954:	b.eq	4109fc <wcrtomb@plt+0xbcec>  // b.none
  410958:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41095c:	add	x0, x0, #0x7e8
  410960:	ldr	x0, [x0]
  410964:	bl	44e370 <argp_usage@@Base+0x5284>
  410968:	str	x0, [sp, #40]
  41096c:	b	4109ec <wcrtomb@plt+0xbcdc>
  410970:	ldr	x0, [sp, #40]
  410974:	ldr	w0, [x0, #16]
  410978:	cmp	w0, #0x0
  41097c:	b.eq	4109d4 <wcrtomb@plt+0xbcc4>  // b.none
  410980:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410984:	add	x0, x0, #0x420
  410988:	ldr	x0, [x0]
  41098c:	cmp	x0, #0x0
  410990:	b.eq	4109a4 <wcrtomb@plt+0xbc94>  // b.none
  410994:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410998:	add	x0, x0, #0x420
  41099c:	ldr	x0, [x0]
  4109a0:	blr	x0
  4109a4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4109a8:	add	x0, x0, #0xe18
  4109ac:	bl	404c60 <gettext@plt>
  4109b0:	mov	x19, x0
  4109b4:	ldr	x0, [sp, #40]
  4109b8:	add	x0, x0, #0x14
  4109bc:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4109c0:	mov	x3, x0
  4109c4:	mov	x2, x19
  4109c8:	mov	w1, #0x0                   	// #0
  4109cc:	mov	w0, #0x0                   	// #0
  4109d0:	bl	404100 <error@plt>
  4109d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4109d8:	add	x0, x0, #0x7e8
  4109dc:	ldr	x0, [x0]
  4109e0:	ldr	x1, [sp, #40]
  4109e4:	bl	44e3ec <argp_usage@@Base+0x5300>
  4109e8:	str	x0, [sp, #40]
  4109ec:	ldr	x0, [sp, #40]
  4109f0:	cmp	x0, #0x0
  4109f4:	b.ne	410970 <wcrtomb@plt+0xbc60>  // b.any
  4109f8:	b	410a00 <wcrtomb@plt+0xbcf0>
  4109fc:	nop
  410a00:	ldr	x19, [sp, #16]
  410a04:	ldp	x29, x30, [sp], #48
  410a08:	ret
  410a0c:	stp	x29, x30, [sp, #-64]!
  410a10:	mov	x29, sp
  410a14:	str	x0, [sp, #40]
  410a18:	str	x1, [sp, #32]
  410a1c:	str	w2, [sp, #28]
  410a20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410a24:	add	x0, x0, #0x810
  410a28:	ldrb	w0, [x0]
  410a2c:	eor	w0, w0, #0x1
  410a30:	and	w0, w0, #0xff
  410a34:	cmp	w0, #0x0
  410a38:	b.eq	410a68 <wcrtomb@plt+0xbd58>  // b.none
  410a3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410a40:	add	x0, x0, #0x810
  410a44:	mov	w1, #0x1                   	// #1
  410a48:	strb	w1, [x0]
  410a4c:	mov	w0, #0x2                   	// #2
  410a50:	bl	404650 <strerror@plt>
  410a54:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  410a58:	add	x0, x0, #0xe30
  410a5c:	bl	404c60 <gettext@plt>
  410a60:	b	410a68 <wcrtomb@plt+0xbd58>
  410a64:	nop
  410a68:	ldr	x0, [sp, #40]
  410a6c:	cmp	x0, #0x0
  410a70:	b.eq	410a80 <wcrtomb@plt+0xbd70>  // b.none
  410a74:	ldr	x0, [sp, #40]
  410a78:	ldr	w0, [x0, #408]
  410a7c:	b	410a8c <wcrtomb@plt+0xbd7c>
  410a80:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  410a84:	add	x0, x0, #0x8b0
  410a88:	ldr	w0, [x0]
  410a8c:	ldr	w2, [sp, #28]
  410a90:	ldr	x1, [sp, #32]
  410a94:	bl	404b90 <openat@plt>
  410a98:	str	w0, [sp, #60]
  410a9c:	ldr	w0, [sp, #60]
  410aa0:	cmp	w0, #0x0
  410aa4:	b.ge	410abc <wcrtomb@plt+0xbdac>  // b.tcont
  410aa8:	ldr	x0, [sp, #40]
  410aac:	bl	40fec4 <wcrtomb@plt+0xb1b4>
  410ab0:	and	w0, w0, #0xff
  410ab4:	cmp	w0, #0x0
  410ab8:	b.ne	410a64 <wcrtomb@plt+0xbd54>  // b.any
  410abc:	ldr	w0, [sp, #60]
  410ac0:	ldp	x29, x30, [sp], #64
  410ac4:	ret
  410ac8:	stp	x29, x30, [sp, #-192]!
  410acc:	mov	x29, sp
  410ad0:	str	x0, [sp, #24]
  410ad4:	ldr	x0, [sp, #24]
  410ad8:	ldr	x0, [x0, #392]
  410adc:	str	x0, [sp, #176]
  410ae0:	ldr	x0, [sp, #176]
  410ae4:	cmp	x0, #0x0
  410ae8:	b.eq	410c40 <wcrtomb@plt+0xbf30>  // b.none
  410aec:	ldr	x0, [sp, #176]
  410af0:	ldr	w0, [x0, #408]
  410af4:	cmp	w0, #0x0
  410af8:	b.ne	410c40 <wcrtomb@plt+0xbf30>  // b.any
  410afc:	ldr	x0, [sp, #24]
  410b00:	ldr	w3, [x0, #408]
  410b04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410b08:	add	x0, x0, #0x2ec
  410b0c:	ldr	w0, [x0]
  410b10:	mov	w2, w0
  410b14:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  410b18:	add	x1, x0, #0xe38
  410b1c:	mov	w0, w3
  410b20:	bl	404b90 <openat@plt>
  410b24:	str	w0, [sp, #188]
  410b28:	ldr	w0, [sp, #188]
  410b2c:	cmp	w0, #0x0
  410b30:	b.ge	410b48 <wcrtomb@plt+0xbe38>  // b.tcont
  410b34:	bl	404bc0 <__errno_location@plt>
  410b38:	ldr	w0, [x0]
  410b3c:	neg	w0, w0
  410b40:	str	w0, [sp, #188]
  410b44:	b	410b98 <wcrtomb@plt+0xbe88>
  410b48:	add	x0, sp, #0x28
  410b4c:	mov	x1, x0
  410b50:	ldr	w0, [sp, #188]
  410b54:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  410b58:	cmp	w0, #0x0
  410b5c:	b.ne	410b88 <wcrtomb@plt+0xbe78>  // b.any
  410b60:	ldr	x0, [sp, #176]
  410b64:	ldr	x1, [x0, #96]
  410b68:	ldr	x0, [sp, #48]
  410b6c:	cmp	x1, x0
  410b70:	b.ne	410b88 <wcrtomb@plt+0xbe78>  // b.any
  410b74:	ldr	x0, [sp, #176]
  410b78:	ldr	x1, [x0, #88]
  410b7c:	ldr	x0, [sp, #40]
  410b80:	cmp	x1, x0
  410b84:	b.eq	410b98 <wcrtomb@plt+0xbe88>  // b.none
  410b88:	ldr	w0, [sp, #188]
  410b8c:	bl	404660 <close@plt>
  410b90:	mov	w0, #0x2                   	// #2
  410b94:	str	w0, [sp, #188]
  410b98:	ldr	w0, [sp, #188]
  410b9c:	cmp	w0, #0x0
  410ba0:	b.ge	410c34 <wcrtomb@plt+0xbf24>  // b.tcont
  410ba4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  410ba8:	add	x0, x0, #0x8b0
  410bac:	ldr	w3, [x0]
  410bb0:	ldr	x0, [sp, #176]
  410bb4:	ldr	x1, [x0]
  410bb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410bbc:	add	x0, x0, #0x2ec
  410bc0:	ldr	w0, [x0]
  410bc4:	mov	w2, w0
  410bc8:	mov	w0, w3
  410bcc:	bl	404b90 <openat@plt>
  410bd0:	str	w0, [sp, #172]
  410bd4:	ldr	w0, [sp, #172]
  410bd8:	cmp	w0, #0x0
  410bdc:	b.lt	410c34 <wcrtomb@plt+0xbf24>  // b.tstop
  410be0:	add	x0, sp, #0x28
  410be4:	mov	x1, x0
  410be8:	ldr	w0, [sp, #188]
  410bec:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  410bf0:	cmp	w0, #0x0
  410bf4:	b.ne	410c2c <wcrtomb@plt+0xbf1c>  // b.any
  410bf8:	ldr	x0, [sp, #176]
  410bfc:	ldr	x1, [x0, #96]
  410c00:	ldr	x0, [sp, #48]
  410c04:	cmp	x1, x0
  410c08:	b.ne	410c2c <wcrtomb@plt+0xbf1c>  // b.any
  410c0c:	ldr	x0, [sp, #176]
  410c10:	ldr	x1, [x0, #88]
  410c14:	ldr	x0, [sp, #40]
  410c18:	cmp	x1, x0
  410c1c:	b.ne	410c2c <wcrtomb@plt+0xbf1c>  // b.any
  410c20:	ldr	w0, [sp, #172]
  410c24:	str	w0, [sp, #188]
  410c28:	b	410c34 <wcrtomb@plt+0xbf24>
  410c2c:	ldr	w0, [sp, #172]
  410c30:	bl	404660 <close@plt>
  410c34:	ldr	x0, [sp, #176]
  410c38:	ldr	w1, [sp, #188]
  410c3c:	str	w1, [x0, #408]
  410c40:	nop
  410c44:	ldp	x29, x30, [sp], #192
  410c48:	ret
  410c4c:	stp	x29, x30, [sp, #-304]!
  410c50:	mov	x29, sp
  410c54:	stp	x19, x20, [sp, #16]
  410c58:	str	x0, [sp, #56]
  410c5c:	str	x1, [sp, #48]
  410c60:	str	x2, [sp, #40]
  410c64:	mov	x0, #0xffffffffffffffff    	// #-1
  410c68:	str	x0, [sp, #264]
  410c6c:	str	wzr, [sp, #284]
  410c70:	ldr	x0, [sp, #56]
  410c74:	ldr	x0, [x0, #392]
  410c78:	str	x0, [sp, #256]
  410c7c:	ldr	x0, [sp, #256]
  410c80:	cmp	x0, #0x0
  410c84:	cset	w0, eq  // eq = none
  410c88:	strb	w0, [sp, #255]
  410c8c:	ldrb	w0, [sp, #255]
  410c90:	cmp	w0, #0x0
  410c94:	b.eq	410ca8 <wcrtomb@plt+0xbf98>  // b.none
  410c98:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  410c9c:	add	x0, x0, #0x8b0
  410ca0:	ldr	w0, [x0]
  410ca4:	b	410cb0 <wcrtomb@plt+0xbfa0>
  410ca8:	ldr	x0, [sp, #256]
  410cac:	ldr	w0, [x0, #408]
  410cb0:	str	w0, [sp, #288]
  410cb4:	str	xzr, [sp, #296]
  410cb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410cbc:	add	x0, x0, #0x280
  410cc0:	ldrb	w0, [x0]
  410cc4:	cmp	w0, #0x0
  410cc8:	b.eq	410ce4 <wcrtomb@plt+0xbfd4>  // b.none
  410ccc:	ldr	x1, [sp, #40]
  410cd0:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  410cd4:	add	x0, x0, #0xe40
  410cd8:	bl	42fab8 <wcrtomb@plt+0x2ada8>
  410cdc:	cmp	w0, #0x0
  410ce0:	b.eq	411954 <wcrtomb@plt+0xcc44>  // b.none
  410ce4:	ldr	x0, [sp, #56]
  410ce8:	ldr	x1, [sp, #40]
  410cec:	bl	423d0c <wcrtomb@plt+0x1effc>
  410cf0:	ldr	x0, [sp, #56]
  410cf4:	add	x19, x0, #0x8
  410cf8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410cfc:	add	x0, x0, #0x3e8
  410d00:	ldrb	w0, [x0]
  410d04:	mov	w2, w0
  410d08:	mov	w1, #0x0                   	// #0
  410d0c:	ldr	x0, [sp, #40]
  410d10:	bl	43afc0 <wcrtomb@plt+0x362b0>
  410d14:	mov	x1, x0
  410d18:	mov	x0, x19
  410d1c:	bl	423d0c <wcrtomb@plt+0x1effc>
  410d20:	ldr	x0, [sp, #56]
  410d24:	add	x0, x0, #0x8
  410d28:	mov	w1, #0x1                   	// #1
  410d2c:	bl	436a3c <wcrtomb@plt+0x31d2c>
  410d30:	ldr	w0, [sp, #288]
  410d34:	cmp	w0, #0x0
  410d38:	b.ge	410d74 <wcrtomb@plt+0xc064>  // b.tcont
  410d3c:	ldrb	w0, [sp, #255]
  410d40:	eor	w0, w0, #0x1
  410d44:	and	w0, w0, #0xff
  410d48:	cmp	w0, #0x0
  410d4c:	b.eq	410d74 <wcrtomb@plt+0xc064>  // b.none
  410d50:	bl	404bc0 <__errno_location@plt>
  410d54:	mov	x1, x0
  410d58:	ldr	w0, [sp, #288]
  410d5c:	neg	w0, w0
  410d60:	str	w0, [x1]
  410d64:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  410d68:	add	x0, x0, #0xf04
  410d6c:	str	x0, [sp, #296]
  410d70:	b	410e3c <wcrtomb@plt+0xc12c>
  410d74:	ldr	x0, [sp, #56]
  410d78:	add	x1, x0, #0x58
  410d7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410d80:	add	x0, x0, #0x260
  410d84:	ldr	w0, [x0]
  410d88:	mov	w3, w0
  410d8c:	mov	x2, x1
  410d90:	ldr	x1, [sp, #48]
  410d94:	ldr	w0, [sp, #288]
  410d98:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  410d9c:	cmp	w0, #0x0
  410da0:	b.eq	410db4 <wcrtomb@plt+0xc0a4>  // b.none
  410da4:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  410da8:	add	x0, x0, #0xe0
  410dac:	str	x0, [sp, #296]
  410db0:	b	410e3c <wcrtomb@plt+0xc12c>
  410db4:	ldr	x0, [sp, #56]
  410db8:	add	x0, x0, #0x58
  410dbc:	bl	40de14 <wcrtomb@plt+0x9104>
  410dc0:	and	w0, w0, #0xff
  410dc4:	cmp	w0, #0x0
  410dc8:	b.eq	410e3c <wcrtomb@plt+0xc12c>  // b.none
  410dcc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410dd0:	add	x0, x0, #0x2f4
  410dd4:	ldr	w0, [x0]
  410dd8:	mov	w2, w0
  410ddc:	ldr	x1, [sp, #48]
  410de0:	ldr	x0, [sp, #256]
  410de4:	bl	410a0c <wcrtomb@plt+0xbcfc>
  410de8:	str	w0, [sp, #284]
  410dec:	ldr	w0, [sp, #284]
  410df0:	cmp	w0, #0x0
  410df4:	b.ge	410e08 <wcrtomb@plt+0xc0f8>  // b.tcont
  410df8:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  410dfc:	add	x0, x0, #0xf04
  410e00:	str	x0, [sp, #296]
  410e04:	b	410e3c <wcrtomb@plt+0xc12c>
  410e08:	ldr	x0, [sp, #56]
  410e0c:	ldr	w1, [sp, #284]
  410e10:	str	w1, [x0, #408]
  410e14:	ldr	x0, [sp, #56]
  410e18:	add	x0, x0, #0x58
  410e1c:	mov	x1, x0
  410e20:	ldr	w0, [sp, #284]
  410e24:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  410e28:	cmp	w0, #0x0
  410e2c:	b.eq	410e3c <wcrtomb@plt+0xc12c>  // b.none
  410e30:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  410e34:	add	x0, x0, #0xe0
  410e38:	str	x0, [sp, #296]
  410e3c:	ldr	x0, [sp, #296]
  410e40:	cmp	x0, #0x0
  410e44:	b.eq	410e5c <wcrtomb@plt+0xc14c>  // b.none
  410e48:	ldr	x2, [sp, #296]
  410e4c:	ldrb	w1, [sp, #255]
  410e50:	ldr	x0, [sp, #40]
  410e54:	bl	426138 <wcrtomb@plt+0x21428>
  410e58:	b	411990 <wcrtomb@plt+0xcc80>
  410e5c:	ldr	x0, [sp, #56]
  410e60:	ldr	x0, [x0, #136]
  410e64:	str	x0, [sp, #240]
  410e68:	ldr	x0, [sp, #56]
  410e6c:	ldr	x1, [sp, #240]
  410e70:	str	x1, [x0, #264]
  410e74:	ldr	x0, [sp, #56]
  410e78:	add	x0, x0, #0x58
  410e7c:	ldr	x19, [sp, #56]
  410e80:	bl	45a9b0 <argp_usage@@Base+0x118c4>
  410e84:	stp	x0, x1, [x19, #216]
  410e88:	ldr	x0, [sp, #56]
  410e8c:	add	x0, x0, #0x58
  410e90:	ldr	x19, [sp, #56]
  410e94:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  410e98:	stp	x0, x1, [x19, #232]
  410e9c:	ldr	x0, [sp, #56]
  410ea0:	add	x0, x0, #0x58
  410ea4:	bl	45a9c8 <argp_usage@@Base+0x118dc>
  410ea8:	stp	x0, x1, [sp, #208]
  410eac:	ldr	x2, [sp, #56]
  410eb0:	ldp	x0, x1, [sp, #208]
  410eb4:	stp	x0, x1, [x2, #248]
  410eb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410ebc:	add	x0, x0, #0x51
  410ec0:	ldrb	w0, [x0]
  410ec4:	eor	w0, w0, #0x1
  410ec8:	and	w0, w0, #0xff
  410ecc:	cmp	w0, #0x0
  410ed0:	b.ne	410ee0 <wcrtomb@plt+0xc1d0>  // b.any
  410ed4:	ldrb	w0, [sp, #255]
  410ed8:	cmp	w0, #0x0
  410edc:	b.eq	410fe4 <wcrtomb@plt+0xc2d4>  // b.none
  410ee0:	ldr	x0, [sp, #56]
  410ee4:	ldr	w0, [x0, #104]
  410ee8:	and	w0, w0, #0xf000
  410eec:	cmp	w0, #0x4, lsl #12
  410ef0:	b.eq	410fe4 <wcrtomb@plt+0xc2d4>  // b.none
  410ef4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410ef8:	add	x1, x0, #0x58
  410efc:	ldr	x0, [sp, #56]
  410f00:	ldp	x2, x3, [x1]
  410f04:	ldp	x0, x1, [x0, #232]
  410f08:	bl	45ab0c <argp_usage@@Base+0x11a20>
  410f0c:	cmp	w0, #0x0
  410f10:	b.ge	410fe4 <wcrtomb@plt+0xc2d4>  // b.tcont
  410f14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410f18:	add	x0, x0, #0x3fc
  410f1c:	ldr	w0, [x0]
  410f20:	cmp	w0, #0x0
  410f24:	b.eq	410f48 <wcrtomb@plt+0xc238>  // b.none
  410f28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410f2c:	add	x1, x0, #0x58
  410f30:	ldr	x0, [sp, #56]
  410f34:	ldp	x2, x3, [x1]
  410f38:	ldp	x0, x1, [x0, #248]
  410f3c:	bl	45ab0c <argp_usage@@Base+0x11a20>
  410f40:	cmp	w0, #0x0
  410f44:	b.ge	410fe4 <wcrtomb@plt+0xc2d4>  // b.tcont
  410f48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410f4c:	add	x0, x0, #0x51
  410f50:	ldrb	w0, [x0]
  410f54:	eor	w0, w0, #0x1
  410f58:	and	w0, w0, #0xff
  410f5c:	cmp	w0, #0x0
  410f60:	b.eq	41195c <wcrtomb@plt+0xcc4c>  // b.none
  410f64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410f68:	add	x0, x0, #0x2b4
  410f6c:	ldr	w0, [x0]
  410f70:	cmp	w0, #0x0
  410f74:	b.eq	41195c <wcrtomb@plt+0xcc4c>  // b.none
  410f78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410f7c:	add	x0, x0, #0x24c
  410f80:	ldr	w0, [x0]
  410f84:	and	w0, w0, #0x100
  410f88:	cmp	w0, #0x0
  410f8c:	b.eq	41195c <wcrtomb@plt+0xcc4c>  // b.none
  410f90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410f94:	add	x0, x0, #0x420
  410f98:	ldr	x0, [x0]
  410f9c:	cmp	x0, #0x0
  410fa0:	b.eq	410fb4 <wcrtomb@plt+0xc2a4>  // b.none
  410fa4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  410fa8:	add	x0, x0, #0x420
  410fac:	ldr	x0, [x0]
  410fb0:	blr	x0
  410fb4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  410fb8:	add	x0, x0, #0xe48
  410fbc:	bl	404c60 <gettext@plt>
  410fc0:	mov	x19, x0
  410fc4:	ldr	x0, [sp, #40]
  410fc8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  410fcc:	mov	x3, x0
  410fd0:	mov	x2, x19
  410fd4:	mov	w1, #0x0                   	// #0
  410fd8:	mov	w0, #0x0                   	// #0
  410fdc:	bl	404100 <error@plt>
  410fe0:	b	41195c <wcrtomb@plt+0xcc4c>
  410fe4:	ldr	x0, [sp, #56]
  410fe8:	bl	42d964 <wcrtomb@plt+0x28c54>
  410fec:	and	w0, w0, #0xff
  410ff0:	cmp	w0, #0x0
  410ff4:	b.eq	411064 <wcrtomb@plt+0xc354>  // b.none
  410ff8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  410ffc:	add	x0, x0, #0x24c
  411000:	ldr	w0, [x0]
  411004:	and	w0, w0, #0x400
  411008:	cmp	w0, #0x0
  41100c:	b.eq	411964 <wcrtomb@plt+0xcc54>  // b.none
  411010:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411014:	add	x0, x0, #0x420
  411018:	ldr	x0, [x0]
  41101c:	cmp	x0, #0x0
  411020:	b.eq	411034 <wcrtomb@plt+0xc324>  // b.none
  411024:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411028:	add	x0, x0, #0x420
  41102c:	ldr	x0, [x0]
  411030:	blr	x0
  411034:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  411038:	add	x0, x0, #0xe70
  41103c:	bl	404c60 <gettext@plt>
  411040:	mov	x19, x0
  411044:	ldr	x0, [sp, #40]
  411048:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41104c:	mov	x3, x0
  411050:	mov	x2, x19
  411054:	mov	w1, #0x0                   	// #0
  411058:	mov	w0, #0x0                   	// #0
  41105c:	bl	404100 <error@plt>
  411060:	b	411964 <wcrtomb@plt+0xcc54>
  411064:	ldr	x0, [sp, #56]
  411068:	ldr	w0, [x0, #104]
  41106c:	and	w0, w0, #0xf000
  411070:	cmp	w0, #0x4, lsl #12
  411074:	cset	w0, eq  // eq = none
  411078:	strb	w0, [sp, #239]
  41107c:	ldrb	w0, [sp, #239]
  411080:	eor	w0, w0, #0x1
  411084:	and	w0, w0, #0xff
  411088:	cmp	w0, #0x0
  41108c:	b.eq	4110a4 <wcrtomb@plt+0xc394>  // b.none
  411090:	ldr	x0, [sp, #56]
  411094:	bl	4105e8 <wcrtomb@plt+0xb8d8>
  411098:	and	w0, w0, #0xff
  41109c:	cmp	w0, #0x0
  4110a0:	b.ne	41196c <wcrtomb@plt+0xcc5c>  // b.any
  4110a4:	ldrb	w0, [sp, #239]
  4110a8:	cmp	w0, #0x0
  4110ac:	b.ne	4110c4 <wcrtomb@plt+0xc3b4>  // b.any
  4110b0:	ldr	x0, [sp, #56]
  4110b4:	ldr	w0, [x0, #104]
  4110b8:	and	w0, w0, #0xf000
  4110bc:	cmp	w0, #0x8, lsl #12
  4110c0:	b.ne	41154c <wcrtomb@plt+0xc83c>  // b.any
  4110c4:	ldrb	w0, [sp, #239]
  4110c8:	eor	w0, w0, #0x1
  4110cc:	and	w0, w0, #0xff
  4110d0:	mov	w4, w0
  4110d4:	mov	w3, #0x0                   	// #0
  4110d8:	ldr	x2, [sp, #56]
  4110dc:	ldr	x1, [sp, #48]
  4110e0:	ldr	w0, [sp, #288]
  4110e4:	bl	438f98 <wcrtomb@plt+0x34288>
  4110e8:	ldr	w3, [sp, #284]
  4110ec:	ldr	x2, [sp, #56]
  4110f0:	ldr	x1, [sp, #48]
  4110f4:	ldr	w0, [sp, #288]
  4110f8:	bl	439728 <wcrtomb@plt+0x34a18>
  4110fc:	ldr	w3, [sp, #284]
  411100:	ldr	x2, [sp, #56]
  411104:	ldr	x1, [sp, #48]
  411108:	ldr	w0, [sp, #288]
  41110c:	bl	439278 <wcrtomb@plt+0x34568>
  411110:	ldrb	w0, [sp, #239]
  411114:	cmp	w0, #0x0
  411118:	b.eq	4111b8 <wcrtomb@plt+0xc4a8>  // b.none
  41111c:	ldr	x0, [sp, #56]
  411120:	bl	40fde8 <wcrtomb@plt+0xb0d8>
  411124:	ldr	x0, [sp, #56]
  411128:	add	x0, x0, #0x8
  41112c:	bl	40fde8 <wcrtomb@plt+0xb0d8>
  411130:	add	x0, sp, #0xc8
  411134:	mov	x1, x0
  411138:	ldr	x0, [sp, #56]
  41113c:	bl	40d0e8 <wcrtomb@plt+0x83d8>
  411140:	cmp	w0, #0x3
  411144:	b.ne	411174 <wcrtomb@plt+0xc464>  // b.any
  411148:	ldr	x0, [sp, #56]
  41114c:	ldr	x19, [x0]
  411150:	ldr	x20, [sp, #200]
  411154:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  411158:	add	x0, x0, #0xe98
  41115c:	bl	404c60 <gettext@plt>
  411160:	mov	x2, x0
  411164:	mov	x1, x20
  411168:	mov	x0, x19
  41116c:	bl	40d02c <wcrtomb@plt+0x831c>
  411170:	b	411990 <wcrtomb@plt+0xcc80>
  411174:	ldr	x0, [sp, #56]
  411178:	bl	41000c <wcrtomb@plt+0xb2fc>
  41117c:	strb	w0, [sp, #295]
  411180:	ldr	x0, [sp, #56]
  411184:	ldr	w0, [x0, #408]
  411188:	str	w0, [sp, #284]
  41118c:	ldrb	w0, [sp, #255]
  411190:	cmp	w0, #0x0
  411194:	b.eq	4111a8 <wcrtomb@plt+0xc498>  // b.none
  411198:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  41119c:	add	x0, x0, #0x8b0
  4111a0:	ldr	w0, [x0]
  4111a4:	b	4111b0 <wcrtomb@plt+0xc4a0>
  4111a8:	ldr	x0, [sp, #256]
  4111ac:	ldr	w0, [x0, #408]
  4111b0:	str	w0, [sp, #288]
  4111b4:	b	4112d0 <wcrtomb@plt+0xc5c0>
  4111b8:	ldr	w0, [sp, #284]
  4111bc:	cmp	w0, #0x0
  4111c0:	b.eq	411270 <wcrtomb@plt+0xc560>  // b.none
  4111c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4111c8:	add	x0, x0, #0x3c0
  4111cc:	ldrb	w0, [x0]
  4111d0:	cmp	w0, #0x0
  4111d4:	b.eq	411270 <wcrtomb@plt+0xc560>  // b.none
  4111d8:	ldr	x0, [sp, #56]
  4111dc:	ldr	x1, [x0, #152]
  4111e0:	ldr	x0, [sp, #56]
  4111e4:	ldr	x0, [x0, #136]
  4111e8:	add	x2, x0, #0x1ff
  4111ec:	cmp	x0, #0x0
  4111f0:	csel	x0, x2, x0, lt  // lt = tstop
  4111f4:	asr	x0, x0, #9
  4111f8:	mov	x2, x0
  4111fc:	ldr	x0, [sp, #56]
  411200:	ldr	x0, [x0, #136]
  411204:	and	x0, x0, #0x1ff
  411208:	cmp	x0, #0x0
  41120c:	b.eq	41122c <wcrtomb@plt+0xc51c>  // b.none
  411210:	ldr	x0, [sp, #56]
  411214:	ldr	x0, [x0, #136]
  411218:	add	x0, x0, #0x1ff
  41121c:	cmp	x0, #0x3fe
  411220:	b.ls	41122c <wcrtomb@plt+0xc51c>  // b.plast
  411224:	mov	w0, #0x1                   	// #1
  411228:	b	411230 <wcrtomb@plt+0xc520>
  41122c:	mov	w0, #0x0                   	// #0
  411230:	sxtw	x0, w0
  411234:	add	x0, x2, x0
  411238:	cmp	x1, x0
  41123c:	b.ge	411270 <wcrtomb@plt+0xc560>  // b.tcont
  411240:	ldr	x1, [sp, #56]
  411244:	ldr	w0, [sp, #284]
  411248:	bl	42b23c <wcrtomb@plt+0x2652c>
  41124c:	str	w0, [sp, #276]
  411250:	ldr	w0, [sp, #276]
  411254:	cmp	w0, #0x3
  411258:	b.ne	411280 <wcrtomb@plt+0xc570>  // b.any
  41125c:	ldr	x1, [sp, #56]
  411260:	ldr	w0, [sp, #284]
  411264:	bl	40f5c8 <wcrtomb@plt+0xa8b8>
  411268:	str	w0, [sp, #276]
  41126c:	b	411280 <wcrtomb@plt+0xc570>
  411270:	ldr	x1, [sp, #56]
  411274:	ldr	w0, [sp, #284]
  411278:	bl	40f5c8 <wcrtomb@plt+0xa8b8>
  41127c:	str	w0, [sp, #276]
  411280:	ldr	w0, [sp, #276]
  411284:	cmp	w0, #0x3
  411288:	b.eq	4112bc <wcrtomb@plt+0xc5ac>  // b.none
  41128c:	ldr	w0, [sp, #276]
  411290:	cmp	w0, #0x3
  411294:	b.hi	4112c0 <wcrtomb@plt+0xc5b0>  // b.pmore
  411298:	ldr	w0, [sp, #276]
  41129c:	cmp	w0, #0x1
  4112a0:	b.ls	4112b0 <wcrtomb@plt+0xc5a0>  // b.plast
  4112a4:	ldr	w0, [sp, #276]
  4112a8:	cmp	w0, #0x2
  4112ac:	b	4112c0 <wcrtomb@plt+0xc5b0>
  4112b0:	ldr	x0, [sp, #56]
  4112b4:	bl	4107a8 <wcrtomb@plt+0xba98>
  4112b8:	b	4112c0 <wcrtomb@plt+0xc5b0>
  4112bc:	bl	404710 <abort@plt>
  4112c0:	ldr	w0, [sp, #276]
  4112c4:	cmp	w0, #0x0
  4112c8:	cset	w0, eq  // eq = none
  4112cc:	strb	w0, [sp, #295]
  4112d0:	ldrb	w0, [sp, #295]
  4112d4:	cmp	w0, #0x0
  4112d8:	b.eq	4113c4 <wcrtomb@plt+0xc6b4>  // b.none
  4112dc:	ldr	w0, [sp, #284]
  4112e0:	cmp	w0, #0x0
  4112e4:	b.ge	411304 <wcrtomb@plt+0xc5f4>  // b.tcont
  4112e8:	bl	404bc0 <__errno_location@plt>
  4112ec:	mov	x1, x0
  4112f0:	ldr	w0, [sp, #284]
  4112f4:	neg	w0, w0
  4112f8:	str	w0, [x1]
  4112fc:	strb	wzr, [sp, #295]
  411300:	b	41139c <wcrtomb@plt+0xc68c>
  411304:	ldr	w0, [sp, #284]
  411308:	cmp	w0, #0x0
  41130c:	b.ne	411380 <wcrtomb@plt+0xc670>  // b.any
  411310:	ldr	w0, [sp, #288]
  411314:	cmp	w0, #0x0
  411318:	b.ge	41134c <wcrtomb@plt+0xc63c>  // b.tcont
  41131c:	ldrb	w0, [sp, #255]
  411320:	eor	w0, w0, #0x1
  411324:	and	w0, w0, #0xff
  411328:	cmp	w0, #0x0
  41132c:	b.eq	41134c <wcrtomb@plt+0xc63c>  // b.none
  411330:	bl	404bc0 <__errno_location@plt>
  411334:	mov	x1, x0
  411338:	ldr	w0, [sp, #288]
  41133c:	neg	w0, w0
  411340:	str	w0, [x1]
  411344:	strb	wzr, [sp, #295]
  411348:	b	41139c <wcrtomb@plt+0xc68c>
  41134c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411350:	add	x0, x0, #0x260
  411354:	ldr	w1, [x0]
  411358:	add	x0, sp, #0x48
  41135c:	mov	w3, w1
  411360:	mov	x2, x0
  411364:	ldr	x1, [sp, #48]
  411368:	ldr	w0, [sp, #288]
  41136c:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  411370:	cmp	w0, #0x0
  411374:	cset	w0, eq  // eq = none
  411378:	strb	w0, [sp, #295]
  41137c:	b	41139c <wcrtomb@plt+0xc68c>
  411380:	add	x0, sp, #0x48
  411384:	mov	x1, x0
  411388:	ldr	w0, [sp, #284]
  41138c:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  411390:	cmp	w0, #0x0
  411394:	cset	w0, eq  // eq = none
  411398:	strb	w0, [sp, #295]
  41139c:	ldrb	w0, [sp, #295]
  4113a0:	eor	w0, w0, #0x1
  4113a4:	and	w0, w0, #0xff
  4113a8:	cmp	w0, #0x0
  4113ac:	b.eq	4113c4 <wcrtomb@plt+0xc6b4>  // b.none
  4113b0:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  4113b4:	add	x2, x0, #0xe0
  4113b8:	ldrb	w1, [sp, #255]
  4113bc:	ldr	x0, [sp, #40]
  4113c0:	bl	426138 <wcrtomb@plt+0x21428>
  4113c4:	ldrb	w0, [sp, #295]
  4113c8:	cmp	w0, #0x0
  4113cc:	b.eq	4114fc <wcrtomb@plt+0xc7ec>  // b.none
  4113d0:	add	x0, sp, #0x48
  4113d4:	bl	45a9c8 <argp_usage@@Base+0x118dc>
  4113d8:	ldp	x2, x3, [sp, #208]
  4113dc:	bl	45ab0c <argp_usage@@Base+0x11a20>
  4113e0:	cmp	w0, #0x0
  4113e4:	b.eq	411418 <wcrtomb@plt+0xc708>  // b.none
  4113e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4113ec:	add	x0, x0, #0x318
  4113f0:	ldrb	w0, [x0]
  4113f4:	eor	w0, w0, #0x1
  4113f8:	and	w0, w0, #0xff
  4113fc:	cmp	w0, #0x0
  411400:	b.ne	411428 <wcrtomb@plt+0xc718>  // b.any
  411404:	ldrb	w0, [sp, #239]
  411408:	eor	w0, w0, #0x1
  41140c:	and	w0, w0, #0xff
  411410:	cmp	w0, #0x0
  411414:	b.ne	411428 <wcrtomb@plt+0xc718>  // b.any
  411418:	ldr	x0, [sp, #120]
  41141c:	ldr	x1, [sp, #240]
  411420:	cmp	x1, x0
  411424:	b.ge	41149c <wcrtomb@plt+0xc78c>  // b.tcont
  411428:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41142c:	add	x0, x0, #0x24c
  411430:	ldr	w0, [x0]
  411434:	and	w0, w0, #0x10
  411438:	cmp	w0, #0x0
  41143c:	b.eq	411490 <wcrtomb@plt+0xc780>  // b.none
  411440:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411444:	add	x0, x0, #0x420
  411448:	ldr	x0, [x0]
  41144c:	cmp	x0, #0x0
  411450:	b.eq	411464 <wcrtomb@plt+0xc754>  // b.none
  411454:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411458:	add	x0, x0, #0x420
  41145c:	ldr	x0, [x0]
  411460:	blr	x0
  411464:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  411468:	add	x0, x0, #0xeb0
  41146c:	bl	404c60 <gettext@plt>
  411470:	mov	x19, x0
  411474:	ldr	x0, [sp, #40]
  411478:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41147c:	mov	x3, x0
  411480:	mov	x2, x19
  411484:	mov	w1, #0x0                   	// #0
  411488:	mov	w0, #0x0                   	// #0
  41148c:	bl	404100 <error@plt>
  411490:	mov	w0, #0x1                   	// #1
  411494:	bl	434ff4 <wcrtomb@plt+0x302e4>
  411498:	b	4114fc <wcrtomb@plt+0xc7ec>
  41149c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4114a0:	add	x0, x0, #0x25c
  4114a4:	ldr	w0, [x0]
  4114a8:	cmp	w0, #0x1
  4114ac:	b.ne	4114fc <wcrtomb@plt+0xc7ec>  // b.any
  4114b0:	ldr	w0, [sp, #284]
  4114b4:	cmp	w0, #0x0
  4114b8:	b.eq	4114fc <wcrtomb@plt+0xc7ec>  // b.none
  4114bc:	ldrb	w0, [sp, #239]
  4114c0:	cmp	w0, #0x0
  4114c4:	b.ne	4114d4 <wcrtomb@plt+0xc7c4>  // b.any
  4114c8:	ldr	x0, [sp, #240]
  4114cc:	cmp	x0, #0x0
  4114d0:	b.eq	4114fc <wcrtomb@plt+0xc7ec>  // b.none
  4114d4:	ldr	x0, [sp, #56]
  4114d8:	ldp	x3, x4, [x0, #216]
  4114dc:	ldr	x2, [sp, #48]
  4114e0:	ldr	w1, [sp, #288]
  4114e4:	ldr	w0, [sp, #284]
  4114e8:	bl	425798 <wcrtomb@plt+0x20a88>
  4114ec:	cmp	w0, #0x0
  4114f0:	b.eq	4114fc <wcrtomb@plt+0xc7ec>  // b.none
  4114f4:	ldr	x0, [sp, #40]
  4114f8:	bl	43ac9c <wcrtomb@plt+0x35f8c>
  4114fc:	ldr	x0, [sp, #56]
  411500:	bl	434e3c <wcrtomb@plt+0x3012c>
  411504:	and	w1, w0, #0xff
  411508:	ldrb	w0, [sp, #295]
  41150c:	and	w0, w0, w1
  411510:	cmp	w0, #0x0
  411514:	cset	w0, ne  // ne = any
  411518:	strb	w0, [sp, #295]
  41151c:	ldrb	w0, [sp, #295]
  411520:	cmp	w0, #0x0
  411524:	b.eq	411974 <wcrtomb@plt+0xcc64>  // b.none
  411528:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41152c:	add	x0, x0, #0x318
  411530:	ldrb	w0, [x0]
  411534:	cmp	w0, #0x0
  411538:	b.eq	411974 <wcrtomb@plt+0xcc64>  // b.none
  41153c:	ldrb	w1, [sp, #239]
  411540:	ldr	x0, [sp, #40]
  411544:	bl	437008 <wcrtomb@plt+0x322f8>
  411548:	b	411974 <wcrtomb@plt+0xcc64>
  41154c:	ldr	x0, [sp, #56]
  411550:	ldr	w0, [x0, #104]
  411554:	and	w0, w0, #0xf000
  411558:	cmp	w0, #0xa, lsl #12
  41155c:	b.ne	4116c4 <wcrtomb@plt+0xc9b4>  // b.any
  411560:	ldr	x0, [sp, #56]
  411564:	ldr	x0, [x0, #136]
  411568:	mov	x2, x0
  41156c:	ldr	x1, [sp, #48]
  411570:	ldr	w0, [sp, #288]
  411574:	bl	4435bc <wcrtomb@plt+0x3e8ac>
  411578:	mov	x1, x0
  41157c:	ldr	x0, [sp, #56]
  411580:	str	x1, [x0, #24]
  411584:	ldr	x0, [sp, #56]
  411588:	ldr	x0, [x0, #24]
  41158c:	cmp	x0, #0x0
  411590:	b.ne	4115c0 <wcrtomb@plt+0xc8b0>  // b.any
  411594:	bl	404bc0 <__errno_location@plt>
  411598:	ldr	w0, [x0]
  41159c:	cmp	w0, #0xc
  4115a0:	b.ne	4115a8 <wcrtomb@plt+0xc898>  // b.any
  4115a4:	bl	412b2c <wcrtomb@plt+0xde1c>
  4115a8:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  4115ac:	add	x2, x0, #0xfcc
  4115b0:	ldrb	w1, [sp, #255]
  4115b4:	ldr	x0, [sp, #40]
  4115b8:	bl	426138 <wcrtomb@plt+0x21428>
  4115bc:	b	411990 <wcrtomb@plt+0xcc80>
  4115c0:	ldr	x0, [sp, #56]
  4115c4:	add	x0, x0, #0x18
  4115c8:	mov	w1, #0x4                   	// #4
  4115cc:	bl	436a3c <wcrtomb@plt+0x31d2c>
  4115d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4115d4:	add	x0, x0, #0x360
  4115d8:	ldr	w0, [x0]
  4115dc:	cmp	w0, #0x2
  4115e0:	b.ne	4115ec <wcrtomb@plt+0xc8dc>  // b.any
  4115e4:	mov	x19, #0x63                  	// #99
  4115e8:	b	4115f0 <wcrtomb@plt+0xc8e0>
  4115ec:	mov	x19, #0x64                  	// #100
  4115f0:	ldr	x0, [sp, #56]
  4115f4:	ldr	x0, [x0, #24]
  4115f8:	bl	4040b0 <strlen@plt>
  4115fc:	cmp	x19, x0
  411600:	b.cs	41160c <wcrtomb@plt+0xc8fc>  // b.hs, b.nlast
  411604:	ldr	x0, [sp, #56]
  411608:	bl	40e570 <wcrtomb@plt+0x9860>
  41160c:	mov	w3, #0x0                   	// #0
  411610:	ldr	x2, [sp, #56]
  411614:	ldr	x1, [sp, #48]
  411618:	ldr	w0, [sp, #288]
  41161c:	bl	439728 <wcrtomb@plt+0x34a18>
  411620:	mov	w3, #0x0                   	// #0
  411624:	ldr	x2, [sp, #56]
  411628:	ldr	x1, [sp, #48]
  41162c:	ldr	w0, [sp, #288]
  411630:	bl	439278 <wcrtomb@plt+0x34568>
  411634:	bl	405f78 <wcrtomb@plt+0x1268>
  411638:	str	x0, [sp, #264]
  41163c:	ldr	x0, [sp, #56]
  411640:	str	xzr, [x0, #136]
  411644:	ldr	x0, [sp, #56]
  411648:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  41164c:	str	x0, [sp, #224]
  411650:	ldr	x0, [sp, #224]
  411654:	cmp	x0, #0x0
  411658:	b.eq	41197c <wcrtomb@plt+0xcc6c>  // b.none
  41165c:	ldr	x0, [sp, #224]
  411660:	add	x3, x0, #0x9d
  411664:	ldr	x0, [sp, #56]
  411668:	ldr	x0, [x0, #24]
  41166c:	mov	x2, #0x64                  	// #100
  411670:	mov	x1, x0
  411674:	mov	x0, x3
  411678:	bl	40d2c4 <wcrtomb@plt+0x85b4>
  41167c:	ldr	x0, [sp, #224]
  411680:	mov	w1, #0x32                  	// #50
  411684:	strb	w1, [x0, #156]
  411688:	ldr	x2, [sp, #264]
  41168c:	ldr	x1, [sp, #224]
  411690:	ldr	x0, [sp, #56]
  411694:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  411698:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41169c:	add	x0, x0, #0x318
  4116a0:	ldrb	w0, [x0]
  4116a4:	cmp	w0, #0x0
  4116a8:	b.eq	4116b8 <wcrtomb@plt+0xc9a8>  // b.none
  4116ac:	mov	w1, #0x0                   	// #0
  4116b0:	ldr	x0, [sp, #40]
  4116b4:	bl	437008 <wcrtomb@plt+0x322f8>
  4116b8:	ldr	x0, [sp, #56]
  4116bc:	bl	4107a8 <wcrtomb@plt+0xba98>
  4116c0:	b	411990 <wcrtomb@plt+0xcc80>
  4116c4:	ldr	x0, [sp, #56]
  4116c8:	ldr	w0, [x0, #104]
  4116cc:	and	w0, w0, #0xf000
  4116d0:	cmp	w0, #0x2, lsl #12
  4116d4:	b.ne	411724 <wcrtomb@plt+0xca14>  // b.any
  4116d8:	mov	w0, #0x33                  	// #51
  4116dc:	strb	w0, [sp, #283]
  4116e0:	mov	w4, #0x1                   	// #1
  4116e4:	mov	w3, #0x0                   	// #0
  4116e8:	ldr	x2, [sp, #56]
  4116ec:	ldr	x1, [sp, #48]
  4116f0:	ldr	w0, [sp, #288]
  4116f4:	bl	438f98 <wcrtomb@plt+0x34288>
  4116f8:	mov	w3, #0x0                   	// #0
  4116fc:	ldr	x2, [sp, #56]
  411700:	ldr	x1, [sp, #48]
  411704:	ldr	w0, [sp, #288]
  411708:	bl	439728 <wcrtomb@plt+0x34a18>
  41170c:	mov	w3, #0x0                   	// #0
  411710:	ldr	x2, [sp, #56]
  411714:	ldr	x1, [sp, #48]
  411718:	ldr	w0, [sp, #288]
  41171c:	bl	439278 <wcrtomb@plt+0x34568>
  411720:	b	411870 <wcrtomb@plt+0xcb60>
  411724:	ldr	x0, [sp, #56]
  411728:	ldr	w0, [x0, #104]
  41172c:	and	w0, w0, #0xf000
  411730:	cmp	w0, #0x6, lsl #12
  411734:	b.ne	411784 <wcrtomb@plt+0xca74>  // b.any
  411738:	mov	w0, #0x34                  	// #52
  41173c:	strb	w0, [sp, #283]
  411740:	mov	w4, #0x1                   	// #1
  411744:	mov	w3, #0x0                   	// #0
  411748:	ldr	x2, [sp, #56]
  41174c:	ldr	x1, [sp, #48]
  411750:	ldr	w0, [sp, #288]
  411754:	bl	438f98 <wcrtomb@plt+0x34288>
  411758:	mov	w3, #0x0                   	// #0
  41175c:	ldr	x2, [sp, #56]
  411760:	ldr	x1, [sp, #48]
  411764:	ldr	w0, [sp, #288]
  411768:	bl	439728 <wcrtomb@plt+0x34a18>
  41176c:	mov	w3, #0x0                   	// #0
  411770:	ldr	x2, [sp, #56]
  411774:	ldr	x1, [sp, #48]
  411778:	ldr	w0, [sp, #288]
  41177c:	bl	439278 <wcrtomb@plt+0x34568>
  411780:	b	411870 <wcrtomb@plt+0xcb60>
  411784:	ldr	x0, [sp, #56]
  411788:	ldr	w0, [x0, #104]
  41178c:	and	w0, w0, #0xf000
  411790:	cmp	w0, #0x1, lsl #12
  411794:	b.ne	4117e4 <wcrtomb@plt+0xcad4>  // b.any
  411798:	mov	w0, #0x36                  	// #54
  41179c:	strb	w0, [sp, #283]
  4117a0:	mov	w4, #0x1                   	// #1
  4117a4:	mov	w3, #0x0                   	// #0
  4117a8:	ldr	x2, [sp, #56]
  4117ac:	ldr	x1, [sp, #48]
  4117b0:	ldr	w0, [sp, #288]
  4117b4:	bl	438f98 <wcrtomb@plt+0x34288>
  4117b8:	mov	w3, #0x0                   	// #0
  4117bc:	ldr	x2, [sp, #56]
  4117c0:	ldr	x1, [sp, #48]
  4117c4:	ldr	w0, [sp, #288]
  4117c8:	bl	439728 <wcrtomb@plt+0x34a18>
  4117cc:	mov	w3, #0x0                   	// #0
  4117d0:	ldr	x2, [sp, #56]
  4117d4:	ldr	x1, [sp, #48]
  4117d8:	ldr	w0, [sp, #288]
  4117dc:	bl	439278 <wcrtomb@plt+0x34568>
  4117e0:	b	411870 <wcrtomb@plt+0xcb60>
  4117e4:	ldr	x0, [sp, #56]
  4117e8:	ldr	w0, [x0, #104]
  4117ec:	and	w0, w0, #0xf000
  4117f0:	cmp	w0, #0xc, lsl #12
  4117f4:	b.ne	411864 <wcrtomb@plt+0xcb54>  // b.any
  4117f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4117fc:	add	x0, x0, #0x24c
  411800:	ldr	w0, [x0]
  411804:	and	w0, w0, #0x20
  411808:	cmp	w0, #0x0
  41180c:	b.eq	411984 <wcrtomb@plt+0xcc74>  // b.none
  411810:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411814:	add	x0, x0, #0x420
  411818:	ldr	x0, [x0]
  41181c:	cmp	x0, #0x0
  411820:	b.eq	411834 <wcrtomb@plt+0xcb24>  // b.none
  411824:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411828:	add	x0, x0, #0x420
  41182c:	ldr	x0, [x0]
  411830:	blr	x0
  411834:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  411838:	add	x0, x0, #0xed0
  41183c:	bl	404c60 <gettext@plt>
  411840:	mov	x19, x0
  411844:	ldr	x0, [sp, #40]
  411848:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41184c:	mov	x3, x0
  411850:	mov	x2, x19
  411854:	mov	w1, #0x0                   	// #0
  411858:	mov	w0, #0x0                   	// #0
  41185c:	bl	404100 <error@plt>
  411860:	b	411984 <wcrtomb@plt+0xcc74>
  411864:	ldr	x0, [sp, #40]
  411868:	bl	41053c <wcrtomb@plt+0xb82c>
  41186c:	b	411990 <wcrtomb@plt+0xcc80>
  411870:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411874:	add	x0, x0, #0x360
  411878:	ldr	w0, [x0]
  41187c:	cmp	w0, #0x1
  411880:	b.ne	411890 <wcrtomb@plt+0xcb80>  // b.any
  411884:	ldr	x0, [sp, #40]
  411888:	bl	41053c <wcrtomb@plt+0xb82c>
  41188c:	b	411990 <wcrtomb@plt+0xcc80>
  411890:	bl	405f78 <wcrtomb@plt+0x1268>
  411894:	str	x0, [sp, #264]
  411898:	ldr	x0, [sp, #56]
  41189c:	str	xzr, [x0, #136]
  4118a0:	ldr	x0, [sp, #56]
  4118a4:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  4118a8:	str	x0, [sp, #224]
  4118ac:	ldr	x0, [sp, #224]
  4118b0:	cmp	x0, #0x0
  4118b4:	b.eq	41198c <wcrtomb@plt+0xcc7c>  // b.none
  4118b8:	ldr	x0, [sp, #224]
  4118bc:	ldrb	w1, [sp, #283]
  4118c0:	strb	w1, [x0, #156]
  4118c4:	ldrb	w0, [sp, #283]
  4118c8:	cmp	w0, #0x36
  4118cc:	b.eq	411920 <wcrtomb@plt+0xcc10>  // b.none
  4118d0:	ldr	x0, [sp, #56]
  4118d4:	ldr	x0, [x0, #120]
  4118d8:	bl	404750 <gnu_dev_major@plt>
  4118dc:	mov	w3, w0
  4118e0:	ldr	x0, [sp, #224]
  4118e4:	add	x0, x0, #0x149
  4118e8:	mov	x2, #0x8                   	// #8
  4118ec:	mov	x1, x0
  4118f0:	mov	w0, w3
  4118f4:	bl	40dae4 <wcrtomb@plt+0x8dd4>
  4118f8:	ldr	x0, [sp, #56]
  4118fc:	ldr	x0, [x0, #120]
  411900:	bl	4049c0 <gnu_dev_minor@plt>
  411904:	mov	w3, w0
  411908:	ldr	x0, [sp, #224]
  41190c:	add	x0, x0, #0x151
  411910:	mov	x2, #0x8                   	// #8
  411914:	mov	x1, x0
  411918:	mov	w0, w3
  41191c:	bl	40db38 <wcrtomb@plt+0x8e28>
  411920:	ldr	x2, [sp, #264]
  411924:	ldr	x1, [sp, #224]
  411928:	ldr	x0, [sp, #56]
  41192c:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  411930:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411934:	add	x0, x0, #0x318
  411938:	ldrb	w0, [x0]
  41193c:	cmp	w0, #0x0
  411940:	b.eq	411990 <wcrtomb@plt+0xcc80>  // b.none
  411944:	mov	w1, #0x0                   	// #0
  411948:	ldr	x0, [sp, #40]
  41194c:	bl	437008 <wcrtomb@plt+0x322f8>
  411950:	b	411990 <wcrtomb@plt+0xcc80>
  411954:	nop
  411958:	b	411990 <wcrtomb@plt+0xcc80>
  41195c:	nop
  411960:	b	411990 <wcrtomb@plt+0xcc80>
  411964:	nop
  411968:	b	411990 <wcrtomb@plt+0xcc80>
  41196c:	nop
  411970:	b	411990 <wcrtomb@plt+0xcc80>
  411974:	nop
  411978:	b	411990 <wcrtomb@plt+0xcc80>
  41197c:	nop
  411980:	b	411990 <wcrtomb@plt+0xcc80>
  411984:	nop
  411988:	b	411990 <wcrtomb@plt+0xcc80>
  41198c:	nop
  411990:	ldp	x19, x20, [sp, #16]
  411994:	ldp	x29, x30, [sp], #304
  411998:	ret
  41199c:	stp	x29, x30, [sp, #-480]!
  4119a0:	mov	x29, sp
  4119a4:	str	x0, [sp, #40]
  4119a8:	str	x1, [sp, #32]
  4119ac:	str	x2, [sp, #24]
  4119b0:	add	x0, sp, #0x38
  4119b4:	bl	434e14 <wcrtomb@plt+0x30104>
  4119b8:	ldr	x0, [sp, #40]
  4119bc:	str	x0, [sp, #448]
  4119c0:	add	x0, sp, #0x38
  4119c4:	ldr	x2, [sp, #24]
  4119c8:	ldr	x1, [sp, #32]
  4119cc:	bl	410c4c <wcrtomb@plt+0xbf3c>
  4119d0:	ldr	x0, [sp, #40]
  4119d4:	cmp	x0, #0x0
  4119d8:	b.eq	4119f8 <wcrtomb@plt+0xcce8>  // b.none
  4119dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4119e0:	add	x0, x0, #0x370
  4119e4:	ldr	x0, [x0]
  4119e8:	cmp	x0, #0x0
  4119ec:	b.eq	4119f8 <wcrtomb@plt+0xcce8>  // b.none
  4119f0:	ldr	x0, [sp, #40]
  4119f4:	bl	41bfd0 <wcrtomb@plt+0x172c0>
  4119f8:	add	x0, sp, #0x38
  4119fc:	bl	434ecc <wcrtomb@plt+0x301bc>
  411a00:	nop
  411a04:	ldp	x29, x30, [sp], #480
  411a08:	ret
  411a0c:	stp	x29, x30, [sp, #-64]!
  411a10:	mov	x29, sp
  411a14:	str	x0, [sp, #24]
  411a18:	ldr	x0, [sp, #24]
  411a1c:	cmp	x0, #0x0
  411a20:	b.eq	411d10 <wcrtomb@plt+0xd000>  // b.none
  411a24:	ldr	x0, [sp, #24]
  411a28:	cmp	x0, #0x0
  411a2c:	b.ge	411a64 <wcrtomb@plt+0xcd54>  // b.tcont
  411a30:	mov	w0, #0x4                   	// #4
  411a34:	strh	w0, [sp, #32]
  411a38:	ldr	x0, [sp, #24]
  411a3c:	neg	w0, w0
  411a40:	str	w0, [sp, #36]
  411a44:	ldr	w0, [sp, #36]
  411a48:	sxtw	x1, w0
  411a4c:	ldr	x0, [sp, #24]
  411a50:	neg	x0, x0
  411a54:	cmp	x1, x0
  411a58:	cset	w0, eq  // eq = none
  411a5c:	and	w0, w0, #0xff
  411a60:	b	411a8c <wcrtomb@plt+0xcd7c>
  411a64:	mov	w0, #0x3                   	// #3
  411a68:	strh	w0, [sp, #32]
  411a6c:	ldr	x0, [sp, #24]
  411a70:	str	w0, [sp, #36]
  411a74:	ldr	w0, [sp, #36]
  411a78:	sxtw	x0, w0
  411a7c:	ldr	x1, [sp, #24]
  411a80:	cmp	x1, x0
  411a84:	cset	w0, eq  // eq = none
  411a88:	and	w0, w0, #0xff
  411a8c:	cmp	w0, #0x0
  411a90:	b.eq	411bac <wcrtomb@plt+0xce9c>  // b.none
  411a94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411a98:	add	x0, x0, #0x400
  411a9c:	ldr	w1, [x0]
  411aa0:	mov	w0, #0x3fffffff            	// #1073741823
  411aa4:	cmp	w1, w0
  411aa8:	b.le	411ae4 <wcrtomb@plt+0xcdd4>
  411aac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411ab0:	add	x0, x0, #0x400
  411ab4:	ldr	w1, [x0]
  411ab8:	mov	w0, #0xc0000000            	// #-1073741824
  411abc:	add	w0, w1, w0
  411ac0:	add	x1, sp, #0x20
  411ac4:	mov	x2, x1
  411ac8:	mov	w1, #0x6d01                	// #27905
  411acc:	movk	w1, #0x4008, lsl #16
  411ad0:	bl	43c43c <wcrtomb@plt+0x3772c>
  411ad4:	mvn	w0, w0
  411ad8:	lsr	w0, w0, #31
  411adc:	and	w0, w0, #0xff
  411ae0:	b	411b10 <wcrtomb@plt+0xce00>
  411ae4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411ae8:	add	x0, x0, #0x400
  411aec:	ldr	w0, [x0]
  411af0:	add	x1, sp, #0x20
  411af4:	mov	x2, x1
  411af8:	mov	x1, #0x6d01                	// #27905
  411afc:	movk	x1, #0x4008, lsl #16
  411b00:	bl	404cc0 <ioctl@plt>
  411b04:	mvn	w0, w0
  411b08:	lsr	w0, w0, #31
  411b0c:	and	w0, w0, #0xff
  411b10:	cmp	w0, #0x0
  411b14:	b.ne	411d18 <wcrtomb@plt+0xd008>  // b.any
  411b18:	bl	404bc0 <__errno_location@plt>
  411b1c:	ldr	w0, [x0]
  411b20:	cmp	w0, #0x5
  411b24:	b.ne	411bac <wcrtomb@plt+0xce9c>  // b.any
  411b28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411b2c:	add	x0, x0, #0x400
  411b30:	ldr	w1, [x0]
  411b34:	mov	w0, #0x3fffffff            	// #1073741823
  411b38:	cmp	w1, w0
  411b3c:	b.le	411b78 <wcrtomb@plt+0xce68>
  411b40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411b44:	add	x0, x0, #0x400
  411b48:	ldr	w1, [x0]
  411b4c:	mov	w0, #0xc0000000            	// #-1073741824
  411b50:	add	w0, w1, w0
  411b54:	add	x1, sp, #0x20
  411b58:	mov	x2, x1
  411b5c:	mov	w1, #0x6d01                	// #27905
  411b60:	movk	w1, #0x4008, lsl #16
  411b64:	bl	43c43c <wcrtomb@plt+0x3772c>
  411b68:	mvn	w0, w0
  411b6c:	lsr	w0, w0, #31
  411b70:	and	w0, w0, #0xff
  411b74:	b	411ba4 <wcrtomb@plt+0xce94>
  411b78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411b7c:	add	x0, x0, #0x400
  411b80:	ldr	w0, [x0]
  411b84:	add	x1, sp, #0x20
  411b88:	mov	x2, x1
  411b8c:	mov	x1, #0x6d01                	// #27905
  411b90:	movk	x1, #0x4008, lsl #16
  411b94:	bl	404cc0 <ioctl@plt>
  411b98:	mvn	w0, w0
  411b9c:	lsr	w0, w0, #31
  411ba0:	and	w0, w0, #0xff
  411ba4:	cmp	w0, #0x0
  411ba8:	b.ne	411d20 <wcrtomb@plt+0xd010>  // b.any
  411bac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411bb0:	add	x0, x0, #0x400
  411bb4:	ldr	w1, [x0]
  411bb8:	mov	w0, #0x3fffffff            	// #1073741823
  411bbc:	cmp	w1, w0
  411bc0:	b.le	411be8 <wcrtomb@plt+0xced8>
  411bc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411bc8:	add	x0, x0, #0x400
  411bcc:	ldr	w1, [x0]
  411bd0:	mov	w0, #0xc0000000            	// #-1073741824
  411bd4:	add	w0, w1, w0
  411bd8:	mov	w2, #0x1                   	// #1
  411bdc:	mov	x1, #0x0                   	// #0
  411be0:	bl	43c2b4 <wcrtomb@plt+0x375a4>
  411be4:	b	411c00 <wcrtomb@plt+0xcef0>
  411be8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411bec:	add	x0, x0, #0x400
  411bf0:	ldr	w0, [x0]
  411bf4:	mov	w2, #0x1                   	// #1
  411bf8:	mov	x1, #0x0                   	// #0
  411bfc:	bl	4042b0 <lseek@plt>
  411c00:	str	x0, [sp, #48]
  411c04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411c08:	add	x0, x0, #0x3c8
  411c0c:	ldr	x1, [x0]
  411c10:	ldr	x0, [sp, #24]
  411c14:	mul	x0, x1, x0
  411c18:	str	x0, [sp, #40]
  411c1c:	ldr	x1, [sp, #48]
  411c20:	ldr	x0, [sp, #40]
  411c24:	add	x0, x1, x0
  411c28:	str	x0, [sp, #56]
  411c2c:	ldr	x1, [sp, #40]
  411c30:	ldr	x0, [sp, #24]
  411c34:	sdiv	x0, x1, x0
  411c38:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  411c3c:	add	x1, x1, #0x3c8
  411c40:	ldr	x1, [x1]
  411c44:	cmp	x0, x1
  411c48:	b.ne	411cf4 <wcrtomb@plt+0xcfe4>  // b.any
  411c4c:	ldr	x1, [sp, #56]
  411c50:	ldr	x0, [sp, #48]
  411c54:	cmp	x1, x0
  411c58:	cset	w0, lt  // lt = tstop
  411c5c:	and	w1, w0, #0xff
  411c60:	ldr	x0, [sp, #40]
  411c64:	lsr	x0, x0, #63
  411c68:	and	w0, w0, #0xff
  411c6c:	eor	w0, w1, w0
  411c70:	and	w0, w0, #0xff
  411c74:	cmp	w0, #0x0
  411c78:	b.ne	411cf4 <wcrtomb@plt+0xcfe4>  // b.any
  411c7c:	ldr	x1, [sp, #56]
  411c80:	ldr	x0, [sp, #56]
  411c84:	mov	x2, #0x0                   	// #0
  411c88:	cmp	x1, #0x0
  411c8c:	csel	x0, x0, x2, ge  // ge = tcont
  411c90:	str	x0, [sp, #56]
  411c94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411c98:	add	x0, x0, #0x400
  411c9c:	ldr	w1, [x0]
  411ca0:	mov	w0, #0x3fffffff            	// #1073741823
  411ca4:	cmp	w1, w0
  411ca8:	b.le	411cd0 <wcrtomb@plt+0xcfc0>
  411cac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411cb0:	add	x0, x0, #0x400
  411cb4:	ldr	w1, [x0]
  411cb8:	mov	w0, #0xc0000000            	// #-1073741824
  411cbc:	add	w0, w1, w0
  411cc0:	mov	w2, #0x0                   	// #0
  411cc4:	ldr	x1, [sp, #56]
  411cc8:	bl	43c2b4 <wcrtomb@plt+0x375a4>
  411ccc:	b	411ce8 <wcrtomb@plt+0xcfd8>
  411cd0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411cd4:	add	x0, x0, #0x400
  411cd8:	ldr	w0, [x0]
  411cdc:	mov	w2, #0x0                   	// #0
  411ce0:	ldr	x1, [sp, #56]
  411ce4:	bl	4042b0 <lseek@plt>
  411ce8:	ldr	x1, [sp, #56]
  411cec:	cmp	x0, x1
  411cf0:	b.eq	411d28 <wcrtomb@plt+0xd018>  // b.none
  411cf4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411cf8:	add	x0, x0, #0x2e0
  411cfc:	ldr	x0, [x0]
  411d00:	ldr	x0, [x0]
  411d04:	ldr	x1, [sp, #56]
  411d08:	bl	43a9b4 <wcrtomb@plt+0x35ca4>
  411d0c:	b	411d28 <wcrtomb@plt+0xd018>
  411d10:	nop
  411d14:	b	411d2c <wcrtomb@plt+0xd01c>
  411d18:	nop
  411d1c:	b	411d2c <wcrtomb@plt+0xd01c>
  411d20:	nop
  411d24:	b	411d2c <wcrtomb@plt+0xd01c>
  411d28:	nop
  411d2c:	ldp	x29, x30, [sp], #64
  411d30:	ret
  411d34:	stp	x29, x30, [sp, #-48]!
  411d38:	mov	x29, sp
  411d3c:	str	w0, [sp, #28]
  411d40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411d44:	add	x0, x0, #0xfc0
  411d48:	ldr	x0, [x0]
  411d4c:	str	x0, [sp, #40]
  411d50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411d54:	add	x0, x0, #0x818
  411d58:	ldr	x1, [x0]
  411d5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411d60:	add	x0, x0, #0xfc0
  411d64:	str	x1, [x0]
  411d68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411d6c:	add	x0, x0, #0x824
  411d70:	ldrb	w0, [x0]
  411d74:	cmp	w0, #0x0
  411d78:	b.eq	411da0 <wcrtomb@plt+0xd090>  // b.none
  411d7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411d80:	add	x0, x0, #0x400
  411d84:	mov	w1, #0x1                   	// #1
  411d88:	str	w1, [x0]
  411d8c:	bl	40a6a0 <wcrtomb@plt+0x5990>
  411d90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411d94:	add	x0, x0, #0x400
  411d98:	str	wzr, [x0]
  411d9c:	b	411dd4 <wcrtomb@plt+0xd0c4>
  411da0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411da4:	add	x0, x0, #0xfa0
  411da8:	ldr	x1, [x0]
  411dac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411db0:	add	x0, x0, #0xff0
  411db4:	ldr	x0, [x0]
  411db8:	add	x1, x1, x0
  411dbc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411dc0:	add	x0, x0, #0xf90
  411dc4:	ldr	x0, [x0]
  411dc8:	sub	x0, x1, x0
  411dcc:	bl	411a0c <wcrtomb@plt+0xccfc>
  411dd0:	bl	40a6a0 <wcrtomb@plt+0x5990>
  411dd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411dd8:	add	x0, x0, #0xfc0
  411ddc:	ldr	x1, [sp, #40]
  411de0:	str	x1, [x0]
  411de4:	ldr	w0, [sp, #28]
  411de8:	cmp	w0, #0x0
  411dec:	b.eq	411e3c <wcrtomb@plt+0xd12c>  // b.none
  411df0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411df4:	add	x0, x0, #0x824
  411df8:	ldrb	w0, [x0]
  411dfc:	eor	w0, w0, #0x1
  411e00:	and	w0, w0, #0xff
  411e04:	cmp	w0, #0x0
  411e08:	b.eq	411e3c <wcrtomb@plt+0xd12c>  // b.none
  411e0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e10:	add	x0, x0, #0xf90
  411e14:	ldr	x1, [x0]
  411e18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e1c:	add	x0, x0, #0xfa0
  411e20:	ldr	x2, [x0]
  411e24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e28:	add	x0, x0, #0xff0
  411e2c:	ldr	x0, [x0]
  411e30:	add	x0, x2, x0
  411e34:	sub	x0, x1, x0
  411e38:	bl	411a0c <wcrtomb@plt+0xccfc>
  411e3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e40:	add	x0, x0, #0x820
  411e44:	str	wzr, [x0]
  411e48:	nop
  411e4c:	ldp	x29, x30, [sp], #48
  411e50:	ret
  411e54:	stp	x29, x30, [sp, #-48]!
  411e58:	mov	x29, sp
  411e5c:	str	x0, [sp, #24]
  411e60:	str	x1, [sp, #16]
  411e64:	str	xzr, [sp, #40]
  411e68:	b	411efc <wcrtomb@plt+0xd1ec>
  411e6c:	ldr	x0, [sp, #40]
  411e70:	lsl	x0, x0, #9
  411e74:	ldr	x1, [sp, #24]
  411e78:	add	x4, x1, x0
  411e7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e80:	add	x0, x0, #0x818
  411e84:	ldr	x1, [x0]
  411e88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e8c:	add	x0, x0, #0x820
  411e90:	ldr	w0, [x0]
  411e94:	add	w3, w0, #0x1
  411e98:	adrp	x2, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411e9c:	add	x2, x2, #0x820
  411ea0:	str	w3, [x2]
  411ea4:	sxtw	x0, w0
  411ea8:	lsl	x0, x0, #9
  411eac:	add	x0, x1, x0
  411eb0:	mov	x3, x0
  411eb4:	mov	x1, x4
  411eb8:	mov	x0, #0x200                 	// #512
  411ebc:	mov	x2, x0
  411ec0:	mov	x0, x3
  411ec4:	bl	404020 <memcpy@plt>
  411ec8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411ecc:	add	x0, x0, #0x820
  411ed0:	ldr	w1, [x0]
  411ed4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  411ed8:	add	x0, x0, #0x31c
  411edc:	ldr	w0, [x0]
  411ee0:	cmp	w1, w0
  411ee4:	b.ne	411ef0 <wcrtomb@plt+0xd1e0>  // b.any
  411ee8:	mov	w0, #0x1                   	// #1
  411eec:	bl	411d34 <wcrtomb@plt+0xd024>
  411ef0:	ldr	x0, [sp, #40]
  411ef4:	add	x0, x0, #0x1
  411ef8:	str	x0, [sp, #40]
  411efc:	ldr	x1, [sp, #40]
  411f00:	ldr	x0, [sp, #16]
  411f04:	cmp	x1, x0
  411f08:	b.cc	411e6c <wcrtomb@plt+0xd15c>  // b.lo, b.ul, b.last
  411f0c:	nop
  411f10:	nop
  411f14:	ldp	x29, x30, [sp], #48
  411f18:	ret
  411f1c:	stp	x29, x30, [sp, #-48]!
  411f20:	mov	x29, sp
  411f24:	str	x0, [sp, #24]
  411f28:	str	x1, [sp, #16]
  411f2c:	ldr	x0, [sp, #16]
  411f30:	lsr	x0, x0, #9
  411f34:	str	x0, [sp, #40]
  411f38:	ldr	x0, [sp, #40]
  411f3c:	lsl	x0, x0, #9
  411f40:	ldr	x1, [sp, #16]
  411f44:	sub	x0, x1, x0
  411f48:	str	x0, [sp, #32]
  411f4c:	ldr	x1, [sp, #40]
  411f50:	ldr	x0, [sp, #24]
  411f54:	bl	411e54 <wcrtomb@plt+0xd144>
  411f58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411f5c:	add	x0, x0, #0x818
  411f60:	ldr	x1, [x0]
  411f64:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411f68:	add	x0, x0, #0x820
  411f6c:	ldr	w0, [x0]
  411f70:	sxtw	x0, w0
  411f74:	lsl	x0, x0, #9
  411f78:	add	x0, x1, x0
  411f7c:	mov	x3, x0
  411f80:	ldr	x0, [sp, #40]
  411f84:	lsl	x0, x0, #9
  411f88:	ldr	x1, [sp, #24]
  411f8c:	add	x0, x1, x0
  411f90:	ldr	x2, [sp, #32]
  411f94:	mov	x1, x0
  411f98:	mov	x0, x3
  411f9c:	bl	404020 <memcpy@plt>
  411fa0:	ldr	x0, [sp, #32]
  411fa4:	cmp	x0, #0x1ff
  411fa8:	b.hi	411ff8 <wcrtomb@plt+0xd2e8>  // b.pmore
  411fac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411fb0:	add	x0, x0, #0x818
  411fb4:	ldr	x1, [x0]
  411fb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411fbc:	add	x0, x0, #0x820
  411fc0:	ldr	w0, [x0]
  411fc4:	sxtw	x0, w0
  411fc8:	lsl	x0, x0, #9
  411fcc:	add	x0, x1, x0
  411fd0:	mov	x1, x0
  411fd4:	ldr	x0, [sp, #32]
  411fd8:	add	x3, x1, x0
  411fdc:	mov	x1, #0x200                 	// #512
  411fe0:	ldr	x0, [sp, #32]
  411fe4:	sub	x0, x1, x0
  411fe8:	mov	x2, x0
  411fec:	mov	w1, #0x0                   	// #0
  411ff0:	mov	x0, x3
  411ff4:	bl	4044d0 <memset@plt>
  411ff8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  411ffc:	add	x0, x0, #0x820
  412000:	ldr	w0, [x0]
  412004:	add	w1, w0, #0x1
  412008:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41200c:	add	x0, x0, #0x820
  412010:	str	w1, [x0]
  412014:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412018:	add	x0, x0, #0x820
  41201c:	ldr	w1, [x0]
  412020:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412024:	add	x0, x0, #0x31c
  412028:	ldr	w0, [x0]
  41202c:	cmp	w1, w0
  412030:	b.ne	41203c <wcrtomb@plt+0xd32c>  // b.any
  412034:	mov	w0, #0x1                   	// #1
  412038:	bl	411d34 <wcrtomb@plt+0xd024>
  41203c:	nop
  412040:	ldp	x29, x30, [sp], #48
  412044:	ret
  412048:	stp	x29, x30, [sp, #-80]!
  41204c:	mov	x29, sp
  412050:	str	wzr, [sp, #76]
  412054:	str	wzr, [sp, #72]
  412058:	str	xzr, [sp, #64]
  41205c:	str	xzr, [sp, #56]
  412060:	bl	4283f0 <wcrtomb@plt+0x236e0>
  412064:	mov	w0, #0x2                   	// #2
  412068:	bl	40a6d0 <wcrtomb@plt+0x59c0>
  41206c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412070:	add	x0, x0, #0x2e0
  412074:	ldr	x0, [x0]
  412078:	ldr	x2, [x0]
  41207c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412080:	add	x1, x0, #0xee8
  412084:	mov	x0, x2
  412088:	bl	4047c0 <strcmp@plt>
  41208c:	cmp	w0, #0x0
  412090:	cset	w0, eq  // eq = none
  412094:	and	w1, w0, #0xff
  412098:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41209c:	add	x0, x0, #0x824
  4120a0:	strb	w1, [x0]
  4120a4:	mov	w2, #0x1                   	// #1
  4120a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4120ac:	add	x1, x0, #0x90
  4120b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4120b4:	add	x0, x0, #0x18
  4120b8:	bl	420af0 <wcrtomb@plt+0x1bde0>
  4120bc:	str	w0, [sp, #40]
  4120c0:	ldr	w0, [sp, #40]
  4120c4:	cmp	w0, #0x5
  4120c8:	b.eq	412218 <wcrtomb@plt+0xd508>  // b.none
  4120cc:	ldr	w0, [sp, #40]
  4120d0:	cmp	w0, #0x5
  4120d4:	b.hi	412318 <wcrtomb@plt+0xd608>  // b.pmore
  4120d8:	ldr	w0, [sp, #40]
  4120dc:	cmp	w0, #0x4
  4120e0:	b.eq	41220c <wcrtomb@plt+0xd4fc>  // b.none
  4120e4:	ldr	w0, [sp, #40]
  4120e8:	cmp	w0, #0x4
  4120ec:	b.hi	412318 <wcrtomb@plt+0xd608>  // b.pmore
  4120f0:	ldr	w0, [sp, #40]
  4120f4:	cmp	w0, #0x3
  4120f8:	b.eq	4121e4 <wcrtomb@plt+0xd4d4>  // b.none
  4120fc:	ldr	w0, [sp, #40]
  412100:	cmp	w0, #0x3
  412104:	b.hi	412318 <wcrtomb@plt+0xd608>  // b.pmore
  412108:	ldr	w0, [sp, #40]
  41210c:	cmp	w0, #0x2
  412110:	b.eq	4121d8 <wcrtomb@plt+0xd4c8>  // b.none
  412114:	ldr	w0, [sp, #40]
  412118:	cmp	w0, #0x2
  41211c:	b.hi	412318 <wcrtomb@plt+0xd608>  // b.pmore
  412120:	ldr	w0, [sp, #40]
  412124:	cmp	w0, #0x0
  412128:	b.eq	41213c <wcrtomb@plt+0xd42c>  // b.none
  41212c:	ldr	w0, [sp, #40]
  412130:	cmp	w0, #0x1
  412134:	b.eq	412140 <wcrtomb@plt+0xd430>  // b.none
  412138:	b	412318 <wcrtomb@plt+0xd608>
  41213c:	bl	404710 <abort@plt>
  412140:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412144:	add	x0, x0, #0x90
  412148:	ldr	x0, [x0, #8]
  41214c:	bl	429eb4 <wcrtomb@plt+0x251a4>
  412150:	str	x0, [sp, #32]
  412154:	ldr	x0, [sp, #32]
  412158:	cmp	x0, #0x0
  41215c:	b.ne	412168 <wcrtomb@plt+0xd458>  // b.any
  412160:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  412164:	b	412318 <wcrtomb@plt+0xd608>
  412168:	ldr	x0, [sp, #32]
  41216c:	ldr	x0, [x0, #48]
  412170:	add	x1, x0, #0x1
  412174:	ldr	x0, [sp, #32]
  412178:	str	x1, [x0, #48]
  41217c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412180:	add	x0, x0, #0x328
  412184:	ldr	x0, [x0]
  412188:	cmp	x0, #0x0
  41218c:	b.ne	4121a8 <wcrtomb@plt+0xd498>  // b.any
  412190:	ldr	x0, [sp, #32]
  412194:	ldr	x0, [x0, #48]
  412198:	cmp	x0, #0x0
  41219c:	cset	w0, eq  // eq = none
  4121a0:	and	w0, w0, #0xff
  4121a4:	b	4121c8 <wcrtomb@plt+0xd4b8>
  4121a8:	ldr	x0, [sp, #32]
  4121ac:	ldr	x1, [x0, #48]
  4121b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4121b4:	add	x0, x0, #0x328
  4121b8:	ldr	x0, [x0]
  4121bc:	cmp	x1, x0
  4121c0:	cset	w0, ne  // ne = any
  4121c4:	and	w0, w0, #0xff
  4121c8:	cmp	w0, #0x0
  4121cc:	b.eq	4121d8 <wcrtomb@plt+0xd4c8>  // b.none
  4121d0:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  4121d4:	b	412318 <wcrtomb@plt+0xd608>
  4121d8:	ldr	w0, [sp, #40]
  4121dc:	str	w0, [sp, #76]
  4121e0:	b	412318 <wcrtomb@plt+0xd608>
  4121e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4121e8:	add	x0, x0, #0x7d
  4121ec:	ldrb	w0, [x0]
  4121f0:	cmp	w0, #0x0
  4121f4:	b.eq	41220c <wcrtomb@plt+0xd4fc>  // b.none
  4121f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4121fc:	add	x0, x0, #0x18
  412200:	ldr	x0, [x0]
  412204:	bl	4060c4 <wcrtomb@plt+0x13b4>
  412208:	b	412318 <wcrtomb@plt+0xd608>
  41220c:	mov	w0, #0x4                   	// #4
  412210:	str	w0, [sp, #76]
  412214:	b	412318 <wcrtomb@plt+0xd608>
  412218:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41221c:	add	x0, x0, #0x18
  412220:	ldr	x0, [x0]
  412224:	bl	4060c4 <wcrtomb@plt+0x13b4>
  412228:	ldr	w0, [sp, #72]
  41222c:	cmp	w0, #0x5
  412230:	b.eq	412310 <wcrtomb@plt+0xd600>  // b.none
  412234:	ldr	w0, [sp, #72]
  412238:	cmp	w0, #0x5
  41223c:	b.hi	412314 <wcrtomb@plt+0xd604>  // b.pmore
  412240:	ldr	w0, [sp, #72]
  412244:	cmp	w0, #0x4
  412248:	b.eq	41230c <wcrtomb@plt+0xd5fc>  // b.none
  41224c:	ldr	w0, [sp, #72]
  412250:	cmp	w0, #0x4
  412254:	b.hi	412314 <wcrtomb@plt+0xd604>  // b.pmore
  412258:	ldr	w0, [sp, #72]
  41225c:	cmp	w0, #0x0
  412260:	b.eq	412278 <wcrtomb@plt+0xd568>  // b.none
  412264:	ldr	w0, [sp, #72]
  412268:	sub	w0, w0, #0x1
  41226c:	cmp	w0, #0x2
  412270:	b.hi	412314 <wcrtomb@plt+0xd604>  // b.pmore
  412274:	b	4122b8 <wcrtomb@plt+0xd5a8>
  412278:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41227c:	add	x0, x0, #0x420
  412280:	ldr	x0, [x0]
  412284:	cmp	x0, #0x0
  412288:	b.eq	41229c <wcrtomb@plt+0xd58c>  // b.none
  41228c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412290:	add	x0, x0, #0x420
  412294:	ldr	x0, [x0]
  412298:	blr	x0
  41229c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4122a0:	add	x0, x0, #0xef0
  4122a4:	bl	404c60 <gettext@plt>
  4122a8:	mov	x2, x0
  4122ac:	mov	w1, #0x0                   	// #0
  4122b0:	mov	w0, #0x0                   	// #0
  4122b4:	bl	404100 <error@plt>
  4122b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4122bc:	add	x0, x0, #0x420
  4122c0:	ldr	x0, [x0]
  4122c4:	cmp	x0, #0x0
  4122c8:	b.eq	4122dc <wcrtomb@plt+0xd5cc>  // b.none
  4122cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4122d0:	add	x0, x0, #0x420
  4122d4:	ldr	x0, [x0]
  4122d8:	blr	x0
  4122dc:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4122e0:	add	x0, x0, #0xf18
  4122e4:	bl	404c60 <gettext@plt>
  4122e8:	mov	x2, x0
  4122ec:	mov	w1, #0x0                   	// #0
  4122f0:	mov	w0, #0x0                   	// #0
  4122f4:	bl	404100 <error@plt>
  4122f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4122fc:	add	x0, x0, #0xdb0
  412300:	mov	w1, #0x2                   	// #2
  412304:	str	w1, [x0]
  412308:	b	412310 <wcrtomb@plt+0xd600>
  41230c:	bl	404710 <abort@plt>
  412310:	nop
  412314:	nop
  412318:	ldr	w0, [sp, #40]
  41231c:	str	w0, [sp, #72]
  412320:	ldr	w0, [sp, #76]
  412324:	cmp	w0, #0x0
  412328:	b.eq	4120a4 <wcrtomb@plt+0xd394>  // b.none
  41232c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412330:	add	x0, x0, #0xf90
  412334:	ldr	x0, [x0]
  412338:	sub	x1, x0, #0x1
  41233c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412340:	add	x0, x0, #0xff0
  412344:	str	x1, [x0]
  412348:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41234c:	add	x0, x0, #0x3c8
  412350:	ldr	x0, [x0]
  412354:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  412358:	mov	x1, x0
  41235c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412360:	add	x0, x0, #0x818
  412364:	str	x1, [x0]
  412368:	ldr	w0, [sp, #76]
  41236c:	cmp	w0, #0x1
  412370:	b.eq	412380 <wcrtomb@plt+0xd670>  // b.none
  412374:	ldr	w0, [sp, #76]
  412378:	cmp	w0, #0x2
  41237c:	b.ne	412abc <wcrtomb@plt+0xddac>  // b.any
  412380:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412384:	add	x0, x0, #0xfc8
  412388:	strb	wzr, [x0]
  41238c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412390:	add	x0, x0, #0xfd8
  412394:	ldr	x1, [x0]
  412398:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41239c:	add	x0, x0, #0xfc0
  4123a0:	ldr	x0, [x0]
  4123a4:	sub	x0, x1, x0
  4123a8:	asr	x0, x0, #9
  4123ac:	mov	w1, w0
  4123b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4123b4:	add	x0, x0, #0x820
  4123b8:	str	w1, [x0]
  4123bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4123c0:	add	x0, x0, #0x820
  4123c4:	ldr	w0, [x0]
  4123c8:	cmp	w0, #0x0
  4123cc:	b.eq	412408 <wcrtomb@plt+0xd6f8>  // b.none
  4123d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4123d4:	add	x0, x0, #0x818
  4123d8:	ldr	x3, [x0]
  4123dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4123e0:	add	x0, x0, #0xfc0
  4123e4:	ldr	x1, [x0]
  4123e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4123ec:	add	x0, x0, #0x820
  4123f0:	ldr	w0, [x0]
  4123f4:	lsl	w0, w0, #9
  4123f8:	sxtw	x0, w0
  4123fc:	mov	x2, x0
  412400:	mov	x0, x3
  412404:	bl	404020 <memcpy@plt>
  412408:	ldr	w0, [sp, #76]
  41240c:	cmp	w0, #0x1
  412410:	b.ne	41241c <wcrtomb@plt+0xd70c>  // b.any
  412414:	str	wzr, [sp, #76]
  412418:	b	4125cc <wcrtomb@plt+0xd8bc>
  41241c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412420:	add	x0, x0, #0xfd8
  412424:	ldr	x1, [x0]
  412428:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41242c:	add	x0, x0, #0xf98
  412430:	ldr	x0, [x0]
  412434:	cmp	x1, x0
  412438:	b.ne	412440 <wcrtomb@plt+0xd730>  // b.any
  41243c:	bl	407394 <wcrtomb@plt+0x2684>
  412440:	mov	w2, #0x0                   	// #0
  412444:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412448:	add	x1, x0, #0x90
  41244c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412450:	add	x0, x0, #0x18
  412454:	bl	420af0 <wcrtomb@plt+0x1bde0>
  412458:	str	w0, [sp, #28]
  41245c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412460:	add	x0, x0, #0x90
  412464:	bl	418fa8 <wcrtomb@plt+0x14298>
  412468:	ldr	w0, [sp, #28]
  41246c:	cmp	w0, #0x3
  412470:	b.ne	41249c <wcrtomb@plt+0xd78c>  // b.any
  412474:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412478:	add	x0, x0, #0x7d
  41247c:	ldrb	w0, [x0]
  412480:	cmp	w0, #0x0
  412484:	b.eq	41249c <wcrtomb@plt+0xd78c>  // b.none
  412488:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41248c:	add	x0, x0, #0x18
  412490:	ldr	x0, [x0]
  412494:	bl	4060c4 <wcrtomb@plt+0x13b4>
  412498:	b	4129c4 <wcrtomb@plt+0xdcb4>
  41249c:	ldr	w0, [sp, #28]
  4124a0:	cmp	w0, #0x4
  4124a4:	b.eq	4124b4 <wcrtomb@plt+0xd7a4>  // b.none
  4124a8:	ldr	w0, [sp, #28]
  4124ac:	cmp	w0, #0x3
  4124b0:	b.ne	4124d0 <wcrtomb@plt+0xd7c0>  // b.any
  4124b4:	mov	w0, #0x4                   	// #4
  4124b8:	str	w0, [sp, #76]
  4124bc:	nop
  4124c0:	ldr	w0, [sp, #76]
  4124c4:	cmp	w0, #0x4
  4124c8:	b.ne	412a5c <wcrtomb@plt+0xdd4c>  // b.any
  4124cc:	b	4129c8 <wcrtomb@plt+0xdcb8>
  4124d0:	ldr	w0, [sp, #28]
  4124d4:	cmp	w0, #0x5
  4124d8:	b.ne	412540 <wcrtomb@plt+0xd830>  // b.any
  4124dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4124e0:	add	x0, x0, #0x420
  4124e4:	ldr	x0, [x0]
  4124e8:	cmp	x0, #0x0
  4124ec:	b.eq	412500 <wcrtomb@plt+0xd7f0>  // b.none
  4124f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4124f4:	add	x0, x0, #0x420
  4124f8:	ldr	x0, [x0]
  4124fc:	blr	x0
  412500:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412504:	add	x0, x0, #0xf30
  412508:	bl	404c60 <gettext@plt>
  41250c:	mov	x2, x0
  412510:	mov	w1, #0x0                   	// #0
  412514:	mov	w0, #0x0                   	// #0
  412518:	bl	404100 <error@plt>
  41251c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412520:	add	x0, x0, #0xdb0
  412524:	mov	w1, #0x2                   	// #2
  412528:	str	w1, [x0]
  41252c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412530:	add	x0, x0, #0x18
  412534:	ldr	x0, [x0]
  412538:	bl	4060c4 <wcrtomb@plt+0x13b4>
  41253c:	b	4129c4 <wcrtomb@plt+0xdcb4>
  412540:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412544:	add	x0, x0, #0x90
  412548:	ldr	x0, [x0, #8]
  41254c:	bl	429eb4 <wcrtomb@plt+0x251a4>
  412550:	str	x0, [sp, #32]
  412554:	ldr	x0, [sp, #32]
  412558:	cmp	x0, #0x0
  41255c:	b.eq	412698 <wcrtomb@plt+0xd988>  // b.none
  412560:	ldr	x0, [sp, #32]
  412564:	ldr	x0, [x0, #48]
  412568:	add	x1, x0, #0x1
  41256c:	ldr	x0, [sp, #32]
  412570:	str	x1, [x0, #48]
  412574:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412578:	add	x0, x0, #0x328
  41257c:	ldr	x0, [x0]
  412580:	cmp	x0, #0x0
  412584:	b.ne	4125a0 <wcrtomb@plt+0xd890>  // b.any
  412588:	ldr	x0, [sp, #32]
  41258c:	ldr	x0, [x0, #48]
  412590:	cmp	x0, #0x0
  412594:	cset	w0, ne  // ne = any
  412598:	and	w0, w0, #0xff
  41259c:	b	4125c0 <wcrtomb@plt+0xd8b0>
  4125a0:	ldr	x0, [sp, #32]
  4125a4:	ldr	x1, [x0, #48]
  4125a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4125ac:	add	x0, x0, #0x328
  4125b0:	ldr	x0, [x0]
  4125b4:	cmp	x1, x0
  4125b8:	cset	w0, eq  // eq = none
  4125bc:	and	w0, w0, #0xff
  4125c0:	cmp	w0, #0x0
  4125c4:	b.eq	412698 <wcrtomb@plt+0xd988>  // b.none
  4125c8:	nop
  4125cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4125d0:	add	x0, x0, #0x18
  4125d4:	ldr	x0, [x0]
  4125d8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  4125dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4125e0:	add	x0, x0, #0x90
  4125e4:	ldr	x0, [x0, #136]
  4125e8:	add	x0, x0, #0x1ff
  4125ec:	add	x1, x0, #0x1ff
  4125f0:	cmp	x0, #0x0
  4125f4:	csel	x0, x1, x0, lt  // lt = tstop
  4125f8:	asr	x0, x0, #9
  4125fc:	str	x0, [sp, #64]
  412600:	b	41263c <wcrtomb@plt+0xd92c>
  412604:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412608:	add	x0, x0, #0xf98
  41260c:	ldr	x1, [x0]
  412610:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412614:	add	x0, x0, #0xfd8
  412618:	ldr	x0, [x0]
  41261c:	sub	x0, x1, x0
  412620:	asr	x0, x0, #9
  412624:	neg	x0, x0
  412628:	mov	x1, x0
  41262c:	ldr	x0, [sp, #64]
  412630:	add	x0, x0, x1
  412634:	str	x0, [sp, #64]
  412638:	bl	407394 <wcrtomb@plt+0x2684>
  41263c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412640:	add	x0, x0, #0xf98
  412644:	ldr	x1, [x0]
  412648:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41264c:	add	x0, x0, #0xfd8
  412650:	ldr	x0, [x0]
  412654:	sub	x0, x1, x0
  412658:	asr	x0, x0, #9
  41265c:	mov	x1, x0
  412660:	ldr	x0, [sp, #64]
  412664:	cmp	x0, x1
  412668:	b.ge	412604 <wcrtomb@plt+0xd8f4>  // b.tcont
  41266c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412670:	add	x0, x0, #0xfd8
  412674:	ldr	x1, [x0]
  412678:	ldr	x0, [sp, #64]
  41267c:	lsl	x0, x0, #9
  412680:	add	x1, x1, x0
  412684:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412688:	add	x0, x0, #0xfd8
  41268c:	str	x1, [x0]
  412690:	str	xzr, [sp, #64]
  412694:	b	4129c4 <wcrtomb@plt+0xdcb4>
  412698:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41269c:	add	x0, x0, #0x90
  4126a0:	ldr	x0, [x0, #352]
  4126a4:	cmp	x0, #0x0
  4126a8:	b.eq	4126d4 <wcrtomb@plt+0xd9c4>  // b.none
  4126ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4126b0:	add	x0, x0, #0x90
  4126b4:	ldr	x2, [x0, #360]
  4126b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4126bc:	add	x0, x0, #0x90
  4126c0:	ldr	x0, [x0, #352]
  4126c4:	mov	x1, x0
  4126c8:	mov	x0, x2
  4126cc:	bl	411f1c <wcrtomb@plt+0xd20c>
  4126d0:	b	41271c <wcrtomb@plt+0xda0c>
  4126d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4126d8:	add	x0, x0, #0x8
  4126dc:	ldr	x2, [x0]
  4126e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4126e4:	add	x0, x0, #0x10
  4126e8:	ldr	x0, [x0]
  4126ec:	mov	x1, x0
  4126f0:	mov	x0, x2
  4126f4:	bl	411e54 <wcrtomb@plt+0xd144>
  4126f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4126fc:	add	x0, x0, #0x28
  412700:	ldr	x2, [x0]
  412704:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412708:	add	x0, x0, #0x20
  41270c:	ldr	x0, [x0]
  412710:	mov	x1, x0
  412714:	mov	x0, x2
  412718:	bl	411e54 <wcrtomb@plt+0xd144>
  41271c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412720:	add	x0, x0, #0x18
  412724:	ldr	x2, [x0]
  412728:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41272c:	add	x0, x0, #0x818
  412730:	ldr	x1, [x0]
  412734:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412738:	add	x0, x0, #0x820
  41273c:	ldr	w0, [x0]
  412740:	sxtw	x0, w0
  412744:	lsl	x0, x0, #9
  412748:	add	x0, x1, x0
  41274c:	mov	x3, x0
  412750:	mov	x1, x2
  412754:	mov	x0, #0x200                 	// #512
  412758:	mov	x2, x0
  41275c:	mov	x0, x3
  412760:	bl	404020 <memcpy@plt>
  412764:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412768:	add	x0, x0, #0x820
  41276c:	ldr	w0, [x0]
  412770:	add	w1, w0, #0x1
  412774:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412778:	add	x0, x0, #0x820
  41277c:	str	w1, [x0]
  412780:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412784:	add	x0, x0, #0x90
  412788:	ldr	x0, [x0, #136]
  41278c:	add	x0, x0, #0x1ff
  412790:	add	x1, x0, #0x1ff
  412794:	cmp	x0, #0x0
  412798:	csel	x0, x1, x0, lt  // lt = tstop
  41279c:	asr	x0, x0, #9
  4127a0:	str	x0, [sp, #56]
  4127a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4127a8:	add	x0, x0, #0x18
  4127ac:	ldr	x0, [x0]
  4127b0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  4127b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4127b8:	add	x0, x0, #0x820
  4127bc:	ldr	w1, [x0]
  4127c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4127c4:	add	x0, x0, #0x31c
  4127c8:	ldr	w0, [x0]
  4127cc:	cmp	w1, w0
  4127d0:	b.ne	4127dc <wcrtomb@plt+0xdacc>  // b.any
  4127d4:	mov	w0, #0x1                   	// #1
  4127d8:	bl	411d34 <wcrtomb@plt+0xd024>
  4127dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4127e0:	add	x0, x0, #0xf98
  4127e4:	ldr	x1, [x0]
  4127e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4127ec:	add	x0, x0, #0xfd8
  4127f0:	ldr	x0, [x0]
  4127f4:	sub	x0, x1, x0
  4127f8:	asr	x0, x0, #9
  4127fc:	str	w0, [sp, #52]
  412800:	ldrsw	x0, [sp, #52]
  412804:	ldr	x1, [sp, #56]
  412808:	cmp	x1, x0
  41280c:	b.ge	4129b4 <wcrtomb@plt+0xdca4>  // b.tcont
  412810:	ldr	x0, [sp, #56]
  412814:	str	w0, [sp, #52]
  412818:	b	4129b4 <wcrtomb@plt+0xdca4>
  41281c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412820:	add	x0, x0, #0xfd8
  412824:	ldr	x1, [x0]
  412828:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41282c:	add	x0, x0, #0xf98
  412830:	ldr	x0, [x0]
  412834:	cmp	x1, x0
  412838:	b.ne	412880 <wcrtomb@plt+0xdb70>  // b.any
  41283c:	bl	40a67c <wcrtomb@plt+0x596c>
  412840:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412844:	add	x0, x0, #0xfc0
  412848:	ldr	x1, [x0]
  41284c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412850:	add	x0, x0, #0xfd8
  412854:	str	x1, [x0]
  412858:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41285c:	add	x0, x0, #0x31c
  412860:	ldr	w0, [x0]
  412864:	str	w0, [sp, #52]
  412868:	ldrsw	x0, [sp, #52]
  41286c:	ldr	x1, [sp, #56]
  412870:	cmp	x1, x0
  412874:	b.ge	412880 <wcrtomb@plt+0xdb70>  // b.tcont
  412878:	ldr	x0, [sp, #56]
  41287c:	str	w0, [sp, #52]
  412880:	ldr	w0, [sp, #52]
  412884:	str	w0, [sp, #48]
  412888:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41288c:	add	x0, x0, #0x31c
  412890:	ldr	w1, [x0]
  412894:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412898:	add	x0, x0, #0x820
  41289c:	ldr	w0, [x0]
  4128a0:	sub	w0, w1, w0
  4128a4:	ldr	w1, [sp, #48]
  4128a8:	cmp	w1, w0
  4128ac:	b.le	4128d0 <wcrtomb@plt+0xdbc0>
  4128b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4128b4:	add	x0, x0, #0x31c
  4128b8:	ldr	w1, [x0]
  4128bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4128c0:	add	x0, x0, #0x820
  4128c4:	ldr	w0, [x0]
  4128c8:	sub	w0, w1, w0
  4128cc:	str	w0, [sp, #48]
  4128d0:	ldr	w0, [sp, #48]
  4128d4:	cmp	w0, #0x0
  4128d8:	b.ne	4128e0 <wcrtomb@plt+0xdbd0>  // b.any
  4128dc:	bl	404710 <abort@plt>
  4128e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4128e4:	add	x0, x0, #0x818
  4128e8:	ldr	x1, [x0]
  4128ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4128f0:	add	x0, x0, #0x820
  4128f4:	ldr	w0, [x0]
  4128f8:	sxtw	x0, w0
  4128fc:	lsl	x0, x0, #9
  412900:	add	x3, x1, x0
  412904:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412908:	add	x0, x0, #0xfd8
  41290c:	ldr	x1, [x0]
  412910:	ldr	w0, [sp, #48]
  412914:	lsl	w0, w0, #9
  412918:	sxtw	x0, w0
  41291c:	mov	x2, x0
  412920:	mov	x0, x3
  412924:	bl	404020 <memcpy@plt>
  412928:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41292c:	add	x0, x0, #0x820
  412930:	ldr	w1, [x0]
  412934:	ldr	w0, [sp, #48]
  412938:	add	w1, w1, w0
  41293c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412940:	add	x0, x0, #0x820
  412944:	str	w1, [x0]
  412948:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41294c:	add	x0, x0, #0xfd8
  412950:	ldr	x1, [x0]
  412954:	ldrsw	x0, [sp, #48]
  412958:	lsl	x0, x0, #9
  41295c:	add	x1, x1, x0
  412960:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412964:	add	x0, x0, #0xfd8
  412968:	str	x1, [x0]
  41296c:	ldrsw	x0, [sp, #48]
  412970:	ldr	x1, [sp, #56]
  412974:	sub	x0, x1, x0
  412978:	str	x0, [sp, #56]
  41297c:	ldr	w1, [sp, #52]
  412980:	ldr	w0, [sp, #48]
  412984:	sub	w0, w1, w0
  412988:	str	w0, [sp, #52]
  41298c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412990:	add	x0, x0, #0x820
  412994:	ldr	w1, [x0]
  412998:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41299c:	add	x0, x0, #0x31c
  4129a0:	ldr	w0, [x0]
  4129a4:	cmp	w1, w0
  4129a8:	b.ne	4129b4 <wcrtomb@plt+0xdca4>  // b.any
  4129ac:	mov	w0, #0x1                   	// #1
  4129b0:	bl	411d34 <wcrtomb@plt+0xd024>
  4129b4:	ldr	x0, [sp, #56]
  4129b8:	cmp	x0, #0x0
  4129bc:	b.ne	41281c <wcrtomb@plt+0xdb0c>  // b.any
  4129c0:	b	41241c <wcrtomb@plt+0xd70c>
  4129c4:	b	41241c <wcrtomb@plt+0xd70c>
  4129c8:	str	wzr, [sp, #44]
  4129cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4129d0:	add	x0, x0, #0x31c
  4129d4:	ldr	w1, [x0]
  4129d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4129dc:	add	x0, x0, #0x820
  4129e0:	ldr	w0, [x0]
  4129e4:	sub	w0, w1, w0
  4129e8:	str	w0, [sp, #24]
  4129ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4129f0:	add	x0, x0, #0x818
  4129f4:	ldr	x1, [x0]
  4129f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4129fc:	add	x0, x0, #0x820
  412a00:	ldr	w0, [x0]
  412a04:	sxtw	x0, w0
  412a08:	lsl	x0, x0, #9
  412a0c:	add	x3, x1, x0
  412a10:	ldr	w0, [sp, #24]
  412a14:	lsl	w0, w0, #9
  412a18:	sxtw	x0, w0
  412a1c:	mov	x2, x0
  412a20:	mov	w1, #0x0                   	// #0
  412a24:	mov	x0, x3
  412a28:	bl	4044d0 <memset@plt>
  412a2c:	ldr	w1, [sp, #44]
  412a30:	ldr	w0, [sp, #24]
  412a34:	add	w0, w1, w0
  412a38:	str	w0, [sp, #44]
  412a3c:	ldr	w0, [sp, #44]
  412a40:	cmp	w0, #0x1
  412a44:	cset	w0, le
  412a48:	and	w0, w0, #0xff
  412a4c:	bl	411d34 <wcrtomb@plt+0xd024>
  412a50:	ldr	w0, [sp, #44]
  412a54:	cmp	w0, #0x1
  412a58:	b.le	4129cc <wcrtomb@plt+0xdcbc>
  412a5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412a60:	add	x0, x0, #0x824
  412a64:	ldrb	w0, [x0]
  412a68:	eor	w0, w0, #0x1
  412a6c:	and	w0, w0, #0xff
  412a70:	cmp	w0, #0x0
  412a74:	b.eq	412abc <wcrtomb@plt+0xddac>  // b.none
  412a78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412a7c:	add	x0, x0, #0x400
  412a80:	ldr	w1, [x0]
  412a84:	mov	w0, #0x3fffffff            	// #1073741823
  412a88:	cmp	w1, w0
  412a8c:	b.gt	412abc <wcrtomb@plt+0xddac>
  412a90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412a94:	add	x0, x0, #0x400
  412a98:	ldr	w0, [x0]
  412a9c:	bl	42de04 <wcrtomb@plt+0x290f4>
  412aa0:	cmp	w0, #0x0
  412aa4:	b.eq	412abc <wcrtomb@plt+0xddac>  // b.none
  412aa8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412aac:	add	x0, x0, #0x2e0
  412ab0:	ldr	x0, [x0]
  412ab4:	ldr	x0, [x0]
  412ab8:	bl	43ac4c <wcrtomb@plt+0x35f3c>
  412abc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412ac0:	add	x0, x0, #0x818
  412ac4:	ldr	x0, [x0]
  412ac8:	bl	404880 <free@plt>
  412acc:	bl	407adc <wcrtomb@plt+0x2dcc>
  412ad0:	bl	428dec <wcrtomb@plt+0x240dc>
  412ad4:	nop
  412ad8:	ldp	x29, x30, [sp], #80
  412adc:	ret
  412ae0:	stp	x29, x30, [sp, #-16]!
  412ae4:	mov	x29, sp
  412ae8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412aec:	add	x0, x0, #0xff8
  412af0:	ldr	x0, [x0]
  412af4:	cmp	x0, #0x0
  412af8:	b.eq	412b0c <wcrtomb@plt+0xddfc>  // b.none
  412afc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412b00:	add	x0, x0, #0xff8
  412b04:	ldr	x0, [x0]
  412b08:	blr	x0
  412b0c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412b10:	add	x0, x0, #0xf58
  412b14:	bl	404c60 <gettext@plt>
  412b18:	mov	x2, x0
  412b1c:	mov	w1, #0x0                   	// #0
  412b20:	mov	w0, #0x2                   	// #2
  412b24:	bl	404100 <error@plt>
  412b28:	bl	404710 <abort@plt>
  412b2c:	stp	x29, x30, [sp, #-16]!
  412b30:	mov	x29, sp
  412b34:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412b38:	add	x0, x0, #0xf80
  412b3c:	bl	404c60 <gettext@plt>
  412b40:	mov	x3, x0
  412b44:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412b48:	add	x2, x0, #0xf98
  412b4c:	mov	w1, #0x0                   	// #0
  412b50:	mov	w0, #0x0                   	// #0
  412b54:	bl	404100 <error@plt>
  412b58:	bl	412ae0 <wcrtomb@plt+0xddd0>
  412b5c:	stp	x29, x30, [sp, #-48]!
  412b60:	mov	x29, sp
  412b64:	str	x0, [sp, #24]
  412b68:	str	w1, [sp, #20]
  412b6c:	ldr	x0, [sp, #24]
  412b70:	bl	4040b0 <strlen@plt>
  412b74:	add	x0, x0, #0x10
  412b78:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  412b7c:	str	x0, [sp, #40]
  412b80:	ldr	x0, [sp, #40]
  412b84:	str	xzr, [x0]
  412b88:	ldr	x0, [sp, #40]
  412b8c:	ldr	w1, [sp, #20]
  412b90:	str	w1, [x0, #8]
  412b94:	ldr	x0, [sp, #40]
  412b98:	add	x0, x0, #0xc
  412b9c:	ldr	x1, [sp, #24]
  412ba0:	bl	4049d0 <strcpy@plt>
  412ba4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412ba8:	add	x0, x0, #0x830
  412bac:	ldr	x0, [x0]
  412bb0:	cmp	x0, #0x0
  412bb4:	b.eq	412bd0 <wcrtomb@plt+0xdec0>  // b.none
  412bb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412bbc:	add	x0, x0, #0x830
  412bc0:	ldr	x0, [x0]
  412bc4:	ldr	x1, [sp, #40]
  412bc8:	str	x1, [x0]
  412bcc:	b	412be0 <wcrtomb@plt+0xded0>
  412bd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412bd4:	add	x0, x0, #0x828
  412bd8:	ldr	x1, [sp, #40]
  412bdc:	str	x1, [x0]
  412be0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412be4:	add	x0, x0, #0x830
  412be8:	ldr	x1, [sp, #40]
  412bec:	str	x1, [x0]
  412bf0:	nop
  412bf4:	ldp	x29, x30, [sp], #48
  412bf8:	ret
  412bfc:	stp	x29, x30, [sp, #-128]!
  412c00:	mov	x29, sp
  412c04:	str	x19, [sp, #16]
  412c08:	str	x0, [sp, #40]
  412c0c:	str	xzr, [sp, #112]
  412c10:	str	xzr, [sp, #104]
  412c14:	ldr	x0, [sp, #40]
  412c18:	ldr	x0, [x0, #416]
  412c1c:	cmp	x0, #0x0
  412c20:	b.ne	412edc <wcrtomb@plt+0xe1cc>  // b.any
  412c24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412c28:	add	x0, x0, #0x828
  412c2c:	ldr	x0, [x0]
  412c30:	str	x0, [sp, #120]
  412c34:	b	412ec0 <wcrtomb@plt+0xe1b0>
  412c38:	ldr	x0, [sp, #40]
  412c3c:	cmp	x0, #0x0
  412c40:	b.eq	412c50 <wcrtomb@plt+0xdf40>  // b.none
  412c44:	ldr	x0, [sp, #40]
  412c48:	ldr	w0, [x0, #408]
  412c4c:	b	412c5c <wcrtomb@plt+0xdf4c>
  412c50:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  412c54:	add	x0, x0, #0x8b0
  412c58:	ldr	w0, [x0]
  412c5c:	ldr	x1, [sp, #120]
  412c60:	add	x1, x1, #0xc
  412c64:	mov	w3, #0x0                   	// #0
  412c68:	mov	w2, #0x0                   	// #0
  412c6c:	bl	404b70 <faccessat@plt>
  412c70:	cmp	w0, #0x0
  412c74:	b.ne	412eb4 <wcrtomb@plt+0xe1a4>  // b.any
  412c78:	str	xzr, [sp, #96]
  412c7c:	ldr	x0, [sp, #120]
  412c80:	add	x0, x0, #0xc
  412c84:	mov	w2, #0x0                   	// #0
  412c88:	mov	x1, x0
  412c8c:	ldr	x0, [sp, #40]
  412c90:	bl	410a0c <wcrtomb@plt+0xbcfc>
  412c94:	str	w0, [sp, #92]
  412c98:	ldr	w0, [sp, #92]
  412c9c:	cmn	w0, #0x1
  412ca0:	b.ne	412cb4 <wcrtomb@plt+0xdfa4>  // b.any
  412ca4:	ldr	x0, [sp, #120]
  412ca8:	add	x0, x0, #0xc
  412cac:	bl	43a618 <wcrtomb@plt+0x35908>
  412cb0:	b	412eb4 <wcrtomb@plt+0xe1a4>
  412cb4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412cb8:	add	x1, x0, #0xfa0
  412cbc:	ldr	w0, [sp, #92]
  412cc0:	bl	4044e0 <fdopen@plt>
  412cc4:	str	x0, [sp, #80]
  412cc8:	ldr	x0, [sp, #80]
  412ccc:	cmp	x0, #0x0
  412cd0:	b.ne	412d48 <wcrtomb@plt+0xe038>  // b.any
  412cd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412cd8:	add	x0, x0, #0x420
  412cdc:	ldr	x0, [x0]
  412ce0:	cmp	x0, #0x0
  412ce4:	b.eq	412cf8 <wcrtomb@plt+0xdfe8>  // b.none
  412ce8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412cec:	add	x0, x0, #0x420
  412cf0:	ldr	x0, [x0]
  412cf4:	blr	x0
  412cf8:	bl	404bc0 <__errno_location@plt>
  412cfc:	ldr	w19, [x0]
  412d00:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412d04:	add	x0, x0, #0xfa8
  412d08:	bl	404c60 <gettext@plt>
  412d0c:	mov	x1, x0
  412d10:	ldr	x0, [sp, #120]
  412d14:	add	x0, x0, #0xc
  412d18:	mov	x3, x0
  412d1c:	mov	x2, x1
  412d20:	mov	w1, w19
  412d24:	mov	w0, #0x0                   	// #0
  412d28:	bl	404100 <error@plt>
  412d2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  412d30:	add	x0, x0, #0xdb0
  412d34:	mov	w1, #0x2                   	// #2
  412d38:	str	w1, [x0]
  412d3c:	ldr	w0, [sp, #92]
  412d40:	bl	404660 <close@plt>
  412d44:	b	412eb4 <wcrtomb@plt+0xe1a4>
  412d48:	ldr	x0, [sp, #96]
  412d4c:	cmp	x0, #0x0
  412d50:	b.ne	412d5c <wcrtomb@plt+0xe04c>  // b.any
  412d54:	bl	44a4d0 <argp_usage@@Base+0x13e4>
  412d58:	str	x0, [sp, #96]
  412d5c:	ldr	x0, [sp, #120]
  412d60:	add	x0, x0, #0xc
  412d64:	bl	4135e4 <wcrtomb@plt+0xe8d4>
  412d68:	str	x0, [sp, #72]
  412d6c:	ldr	x0, [sp, #72]
  412d70:	ldr	x0, [x0, #24]
  412d74:	cmp	x0, #0x0
  412d78:	b.eq	412d9c <wcrtomb@plt+0xe08c>  // b.none
  412d7c:	ldr	x0, [sp, #72]
  412d80:	ldr	x1, [x0, #24]
  412d84:	ldr	x0, [sp, #72]
  412d88:	ldr	x0, [x0, #32]
  412d8c:	blr	x1
  412d90:	mov	x1, x0
  412d94:	ldr	x0, [sp, #72]
  412d98:	str	x1, [x0, #32]
  412d9c:	ldr	x0, [sp, #72]
  412da0:	ldr	x6, [x0, #16]
  412da4:	ldr	x0, [sp, #72]
  412da8:	ldr	x0, [x0, #32]
  412dac:	mov	x5, x0
  412db0:	mov	w4, #0xa                   	// #10
  412db4:	mov	w3, #0x50000000            	// #1342177280
  412db8:	ldr	x2, [sp, #80]
  412dbc:	ldr	x1, [sp, #96]
  412dc0:	mov	x0, x6
  412dc4:	bl	44b200 <argp_usage@@Base+0x2114>
  412dc8:	cmp	w0, #0x0
  412dcc:	b.eq	412e28 <wcrtomb@plt+0xe118>  // b.none
  412dd0:	bl	404bc0 <__errno_location@plt>
  412dd4:	ldr	w0, [x0]
  412dd8:	str	w0, [sp, #60]
  412ddc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412de0:	add	x0, x0, #0x420
  412de4:	ldr	x0, [x0]
  412de8:	cmp	x0, #0x0
  412dec:	b.eq	412e00 <wcrtomb@plt+0xe0f0>  // b.none
  412df0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412df4:	add	x0, x0, #0x420
  412df8:	ldr	x0, [x0]
  412dfc:	blr	x0
  412e00:	ldr	x0, [sp, #120]
  412e04:	add	x0, x0, #0xc
  412e08:	bl	459cd8 <argp_usage@@Base+0x10bec>
  412e0c:	mov	x3, x0
  412e10:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  412e14:	add	x2, x0, #0xfc0
  412e18:	ldr	w1, [sp, #60]
  412e1c:	mov	w0, #0x0                   	// #0
  412e20:	bl	404100 <error@plt>
  412e24:	bl	412ae0 <wcrtomb@plt+0xddd0>
  412e28:	ldr	x0, [sp, #80]
  412e2c:	bl	404380 <fclose@plt>
  412e30:	mov	x0, #0x20                  	// #32
  412e34:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  412e38:	str	x0, [sp, #64]
  412e3c:	ldr	x0, [sp, #64]
  412e40:	ldr	x1, [sp, #96]
  412e44:	str	x1, [x0, #24]
  412e48:	ldr	x0, [sp, #120]
  412e4c:	ldr	w0, [x0, #8]
  412e50:	cmp	w0, #0x0
  412e54:	b.ne	412e64 <wcrtomb@plt+0xe154>  // b.any
  412e58:	ldr	x0, [sp, #120]
  412e5c:	ldr	w0, [x0, #8]
  412e60:	b	412e6c <wcrtomb@plt+0xe15c>
  412e64:	ldr	x0, [sp, #72]
  412e68:	ldr	w0, [x0, #8]
  412e6c:	ldr	x1, [sp, #64]
  412e70:	str	w0, [x1, #16]
  412e74:	ldr	x0, [sp, #64]
  412e78:	ldr	x1, [sp, #104]
  412e7c:	str	x1, [x0, #8]
  412e80:	ldr	x0, [sp, #64]
  412e84:	str	xzr, [x0]
  412e88:	ldr	x0, [sp, #104]
  412e8c:	cmp	x0, #0x0
  412e90:	b.eq	412ea4 <wcrtomb@plt+0xe194>  // b.none
  412e94:	ldr	x0, [sp, #104]
  412e98:	ldr	x1, [sp, #64]
  412e9c:	str	x1, [x0]
  412ea0:	b	412eac <wcrtomb@plt+0xe19c>
  412ea4:	ldr	x0, [sp, #64]
  412ea8:	str	x0, [sp, #112]
  412eac:	ldr	x0, [sp, #64]
  412eb0:	str	x0, [sp, #104]
  412eb4:	ldr	x0, [sp, #120]
  412eb8:	ldr	x0, [x0]
  412ebc:	str	x0, [sp, #120]
  412ec0:	ldr	x0, [sp, #120]
  412ec4:	cmp	x0, #0x0
  412ec8:	b.ne	412c38 <wcrtomb@plt+0xdf28>  // b.any
  412ecc:	ldr	x0, [sp, #40]
  412ed0:	ldr	x1, [sp, #112]
  412ed4:	str	x1, [x0, #416]
  412ed8:	b	412ee0 <wcrtomb@plt+0xe1d0>
  412edc:	nop
  412ee0:	ldr	x19, [sp, #16]
  412ee4:	ldp	x29, x30, [sp], #128
  412ee8:	ret
  412eec:	stp	x29, x30, [sp, #-48]!
  412ef0:	mov	x29, sp
  412ef4:	str	x0, [sp, #24]
  412ef8:	ldr	x0, [sp, #24]
  412efc:	ldr	x0, [x0, #416]
  412f00:	str	x0, [sp, #40]
  412f04:	b	412f30 <wcrtomb@plt+0xe220>
  412f08:	ldr	x0, [sp, #40]
  412f0c:	ldr	x0, [x0]
  412f10:	str	x0, [sp, #32]
  412f14:	ldr	x0, [sp, #40]
  412f18:	ldr	x0, [x0, #24]
  412f1c:	bl	44a890 <argp_usage@@Base+0x17a4>
  412f20:	ldr	x0, [sp, #40]
  412f24:	bl	404880 <free@plt>
  412f28:	ldr	x0, [sp, #32]
  412f2c:	str	x0, [sp, #40]
  412f30:	ldr	x0, [sp, #40]
  412f34:	cmp	x0, #0x0
  412f38:	b.ne	412f08 <wcrtomb@plt+0xe1f8>  // b.any
  412f3c:	ldr	x0, [sp, #24]
  412f40:	str	xzr, [x0, #416]
  412f44:	nop
  412f48:	ldp	x29, x30, [sp], #48
  412f4c:	ret
  412f50:	stp	x29, x30, [sp, #-64]!
  412f54:	mov	x29, sp
  412f58:	str	x0, [sp, #24]
  412f5c:	str	x1, [sp, #16]
  412f60:	str	xzr, [sp, #48]
  412f64:	str	xzr, [sp, #40]
  412f68:	str	wzr, [sp, #32]
  412f6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  412f70:	add	x0, x0, #0x70
  412f74:	ldr	x0, [x0]
  412f78:	ldr	x1, [sp, #24]
  412f7c:	bl	44ad74 <argp_usage@@Base+0x1c88>
  412f80:	and	w0, w0, #0xff
  412f84:	cmp	w0, #0x0
  412f88:	b.eq	412f94 <wcrtomb@plt+0xe284>  // b.none
  412f8c:	mov	w0, #0x1                   	// #1
  412f90:	b	413110 <wcrtomb@plt+0xe400>
  412f94:	ldr	x0, [sp, #16]
  412f98:	cmp	x0, #0x0
  412f9c:	b.ne	412fa8 <wcrtomb@plt+0xe298>  // b.any
  412fa0:	mov	w0, #0x0                   	// #0
  412fa4:	b	413110 <wcrtomb@plt+0xe400>
  412fa8:	strb	wzr, [sp, #39]
  412fac:	b	4130e4 <wcrtomb@plt+0xe3d4>
  412fb0:	ldr	x0, [sp, #16]
  412fb4:	ldr	x0, [x0, #416]
  412fb8:	str	x0, [sp, #56]
  412fbc:	b	4130ac <wcrtomb@plt+0xe39c>
  412fc0:	ldr	x0, [sp, #56]
  412fc4:	ldr	w1, [x0, #16]
  412fc8:	ldr	w0, [sp, #32]
  412fcc:	and	w0, w1, w0
  412fd0:	cmp	w0, #0x0
  412fd4:	b.ne	41309c <wcrtomb@plt+0xe38c>  // b.any
  412fd8:	ldr	x0, [sp, #56]
  412fdc:	ldr	x0, [x0, #24]
  412fe0:	ldr	x1, [sp, #24]
  412fe4:	bl	44ad74 <argp_usage@@Base+0x1c88>
  412fe8:	strb	w0, [sp, #39]
  412fec:	ldrb	w0, [sp, #39]
  412ff0:	cmp	w0, #0x0
  412ff4:	b.ne	4130bc <wcrtomb@plt+0xe3ac>  // b.any
  412ff8:	ldr	x0, [sp, #48]
  412ffc:	cmp	x0, #0x0
  413000:	b.ne	413040 <wcrtomb@plt+0xe330>  // b.any
  413004:	ldr	x0, [sp, #24]
  413008:	str	x0, [sp, #48]
  41300c:	b	41301c <wcrtomb@plt+0xe30c>
  413010:	ldr	x0, [sp, #48]
  413014:	add	x0, x0, #0x2
  413018:	str	x0, [sp, #48]
  41301c:	ldr	x0, [sp, #48]
  413020:	ldrb	w0, [x0]
  413024:	cmp	w0, #0x2e
  413028:	b.ne	413040 <wcrtomb@plt+0xe330>  // b.any
  41302c:	ldr	x0, [sp, #48]
  413030:	add	x0, x0, #0x1
  413034:	ldrb	w0, [x0]
  413038:	cmp	w0, #0x2f
  41303c:	b.eq	413010 <wcrtomb@plt+0xe300>  // b.none
  413040:	ldr	x0, [sp, #56]
  413044:	ldr	x0, [x0, #24]
  413048:	ldr	x1, [sp, #48]
  41304c:	bl	44ad74 <argp_usage@@Base+0x1c88>
  413050:	strb	w0, [sp, #39]
  413054:	ldrb	w0, [sp, #39]
  413058:	cmp	w0, #0x0
  41305c:	b.ne	4130c4 <wcrtomb@plt+0xe3b4>  // b.any
  413060:	ldr	x0, [sp, #40]
  413064:	cmp	x0, #0x0
  413068:	b.ne	413078 <wcrtomb@plt+0xe368>  // b.any
  41306c:	ldr	x0, [sp, #24]
  413070:	bl	449f00 <argp_usage@@Base+0xe14>
  413074:	str	x0, [sp, #40]
  413078:	ldr	x0, [sp, #56]
  41307c:	ldr	x0, [x0, #24]
  413080:	ldr	x1, [sp, #40]
  413084:	bl	44ad74 <argp_usage@@Base+0x1c88>
  413088:	strb	w0, [sp, #39]
  41308c:	ldrb	w0, [sp, #39]
  413090:	cmp	w0, #0x0
  413094:	b.ne	4130cc <wcrtomb@plt+0xe3bc>  // b.any
  413098:	b	4130a0 <wcrtomb@plt+0xe390>
  41309c:	nop
  4130a0:	ldr	x0, [sp, #56]
  4130a4:	ldr	x0, [x0]
  4130a8:	str	x0, [sp, #56]
  4130ac:	ldr	x0, [sp, #56]
  4130b0:	cmp	x0, #0x0
  4130b4:	b.ne	412fc0 <wcrtomb@plt+0xe2b0>  // b.any
  4130b8:	b	4130d0 <wcrtomb@plt+0xe3c0>
  4130bc:	nop
  4130c0:	b	4130d0 <wcrtomb@plt+0xe3c0>
  4130c4:	nop
  4130c8:	b	4130d0 <wcrtomb@plt+0xe3c0>
  4130cc:	nop
  4130d0:	ldr	x0, [sp, #16]
  4130d4:	ldr	x0, [x0, #392]
  4130d8:	str	x0, [sp, #16]
  4130dc:	mov	w0, #0x2                   	// #2
  4130e0:	str	w0, [sp, #32]
  4130e4:	ldr	x0, [sp, #16]
  4130e8:	cmp	x0, #0x0
  4130ec:	b.eq	413104 <wcrtomb@plt+0xe3f4>  // b.none
  4130f0:	ldrb	w0, [sp, #39]
  4130f4:	eor	w0, w0, #0x1
  4130f8:	and	w0, w0, #0xff
  4130fc:	cmp	w0, #0x0
  413100:	b.ne	412fb0 <wcrtomb@plt+0xe2a0>  // b.any
  413104:	ldr	x0, [sp, #40]
  413108:	bl	404880 <free@plt>
  41310c:	ldrb	w0, [sp, #39]
  413110:	ldp	x29, x30, [sp], #64
  413114:	ret
  413118:	stp	x29, x30, [sp, #-288]!
  41311c:	mov	x29, sp
  413120:	str	x0, [sp, #40]
  413124:	str	x1, [sp, #32]
  413128:	str	w2, [sp, #28]
  41312c:	str	x3, [sp, #16]
  413130:	add	x0, sp, #0x30
  413134:	mov	w2, #0x844                 	// #2116
  413138:	mov	x1, x0
  41313c:	ldr	x0, [sp, #32]
  413140:	bl	4423e8 <wcrtomb@plt+0x3d6d8>
  413144:	cmp	w0, #0x0
  413148:	b.ne	4131a0 <wcrtomb@plt+0xe490>  // b.any
  41314c:	str	xzr, [sp, #280]
  413150:	b	413184 <wcrtomb@plt+0xe474>
  413154:	ldr	x1, [sp, #56]
  413158:	ldr	x0, [sp, #280]
  41315c:	lsl	x0, x0, #3
  413160:	add	x0, x1, x0
  413164:	ldr	x0, [x0]
  413168:	ldr	w2, [sp, #28]
  41316c:	mov	x1, x0
  413170:	ldr	x0, [sp, #40]
  413174:	bl	44ae84 <argp_usage@@Base+0x1d98>
  413178:	ldr	x0, [sp, #280]
  41317c:	add	x0, x0, #0x1
  413180:	str	x0, [sp, #280]
  413184:	ldr	x0, [sp, #48]
  413188:	ldr	x1, [sp, #280]
  41318c:	cmp	x1, x0
  413190:	b.cc	413154 <wcrtomb@plt+0xe444>  // b.lo, b.ul, b.last
  413194:	add	x0, sp, #0x30
  413198:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  41319c:	b	4131a4 <wcrtomb@plt+0xe494>
  4131a0:	nop
  4131a4:	ldp	x29, x30, [sp], #288
  4131a8:	ret
  4131ac:	stp	x29, x30, [sp, #-48]!
  4131b0:	mov	x29, sp
  4131b4:	str	x0, [sp, #40]
  4131b8:	str	x1, [sp, #32]
  4131bc:	str	w2, [sp, #28]
  4131c0:	str	x3, [sp, #16]
  4131c4:	b	4131d4 <wcrtomb@plt+0xe4c4>
  4131c8:	ldr	x0, [sp, #32]
  4131cc:	add	x0, x0, #0x1
  4131d0:	str	x0, [sp, #32]
  4131d4:	bl	4047f0 <__ctype_b_loc@plt>
  4131d8:	ldr	x1, [x0]
  4131dc:	ldr	x0, [sp, #32]
  4131e0:	ldrb	w0, [x0]
  4131e4:	and	x0, x0, #0xff
  4131e8:	lsl	x0, x0, #1
  4131ec:	add	x0, x1, x0
  4131f0:	ldrh	w0, [x0]
  4131f4:	and	w0, w0, #0x2000
  4131f8:	cmp	w0, #0x0
  4131fc:	b.ne	4131c8 <wcrtomb@plt+0xe4b8>  // b.any
  413200:	ldr	x0, [sp, #32]
  413204:	ldrb	w0, [x0]
  413208:	cmp	w0, #0x0
  41320c:	b.eq	413264 <wcrtomb@plt+0xe554>  // b.none
  413210:	ldr	x0, [sp, #32]
  413214:	ldrb	w0, [x0]
  413218:	cmp	w0, #0x23
  41321c:	b.eq	413264 <wcrtomb@plt+0xe554>  // b.none
  413220:	ldr	x0, [sp, #32]
  413224:	ldrb	w0, [x0]
  413228:	cmp	w0, #0x5c
  41322c:	b.ne	413250 <wcrtomb@plt+0xe540>  // b.any
  413230:	ldr	x0, [sp, #32]
  413234:	add	x0, x0, #0x1
  413238:	ldrb	w0, [x0]
  41323c:	cmp	w0, #0x23
  413240:	b.ne	413250 <wcrtomb@plt+0xe540>  // b.any
  413244:	ldr	x0, [sp, #32]
  413248:	add	x0, x0, #0x1
  41324c:	str	x0, [sp, #32]
  413250:	ldr	w2, [sp, #28]
  413254:	ldr	x1, [sp, #32]
  413258:	ldr	x0, [sp, #40]
  41325c:	bl	44ae84 <argp_usage@@Base+0x1d98>
  413260:	b	413268 <wcrtomb@plt+0xe558>
  413264:	nop
  413268:	ldp	x29, x30, [sp], #48
  41326c:	ret
  413270:	stp	x29, x30, [sp, #-48]!
  413274:	mov	x29, sp
  413278:	str	x0, [sp, #40]
  41327c:	str	x1, [sp, #32]
  413280:	str	w2, [sp, #28]
  413284:	str	x3, [sp, #16]
  413288:	b	413298 <wcrtomb@plt+0xe588>
  41328c:	ldr	x0, [sp, #32]
  413290:	add	x0, x0, #0x1
  413294:	str	x0, [sp, #32]
  413298:	bl	4047f0 <__ctype_b_loc@plt>
  41329c:	ldr	x1, [x0]
  4132a0:	ldr	x0, [sp, #32]
  4132a4:	ldrb	w0, [x0]
  4132a8:	and	x0, x0, #0xff
  4132ac:	lsl	x0, x0, #1
  4132b0:	add	x0, x1, x0
  4132b4:	ldrh	w0, [x0]
  4132b8:	and	w0, w0, #0x2000
  4132bc:	cmp	w0, #0x0
  4132c0:	b.ne	41328c <wcrtomb@plt+0xe57c>  // b.any
  4132c4:	ldr	x0, [sp, #32]
  4132c8:	ldrb	w0, [x0]
  4132cc:	cmp	w0, #0x0
  4132d0:	b.eq	413380 <wcrtomb@plt+0xe670>  // b.none
  4132d4:	ldr	x0, [sp, #32]
  4132d8:	ldrb	w0, [x0]
  4132dc:	cmp	w0, #0x23
  4132e0:	b.eq	413380 <wcrtomb@plt+0xe670>  // b.none
  4132e4:	ldr	x0, [sp, #32]
  4132e8:	ldrb	w0, [x0]
  4132ec:	cmp	w0, #0x21
  4132f0:	b.ne	41332c <wcrtomb@plt+0xe61c>  // b.any
  4132f4:	ldr	x0, [sp, #32]
  4132f8:	add	x0, x0, #0x1
  4132fc:	str	x0, [sp, #32]
  413300:	ldr	x0, [sp, #32]
  413304:	ldrb	w0, [x0]
  413308:	cmp	w0, #0x21
  41330c:	b.ne	413320 <wcrtomb@plt+0xe610>  // b.any
  413310:	ldr	x0, [sp, #32]
  413314:	add	x0, x0, #0x1
  413318:	str	x0, [sp, #32]
  41331c:	b	41332c <wcrtomb@plt+0xe61c>
  413320:	ldr	w0, [sp, #28]
  413324:	orr	w0, w0, #0x20000000
  413328:	str	w0, [sp, #28]
  41332c:	mov	x2, #0x3                   	// #3
  413330:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  413334:	add	x1, x0, #0xfc8
  413338:	ldr	x0, [sp, #32]
  41333c:	bl	404480 <strncmp@plt>
  413340:	cmp	w0, #0x0
  413344:	b.ne	41336c <wcrtomb@plt+0xe65c>  // b.any
  413348:	ldr	x0, [sp, #32]
  41334c:	add	x0, x0, #0x3
  413350:	str	x0, [sp, #32]
  413354:	ldr	w0, [sp, #28]
  413358:	and	w0, w0, #0xefffffff
  41335c:	str	w0, [sp, #28]
  413360:	ldr	w0, [sp, #28]
  413364:	orr	w0, w0, #0x8000000
  413368:	str	w0, [sp, #28]
  41336c:	ldr	w2, [sp, #28]
  413370:	ldr	x1, [sp, #32]
  413374:	ldr	x0, [sp, #40]
  413378:	bl	44ae84 <argp_usage@@Base+0x1d98>
  41337c:	b	413384 <wcrtomb@plt+0xe674>
  413380:	nop
  413384:	ldp	x29, x30, [sp], #48
  413388:	ret
  41338c:	sub	sp, sp, #0x20
  413390:	str	x0, [sp, #8]
  413394:	ldr	x0, [sp, #8]
  413398:	cmp	x0, #0x0
  41339c:	b.eq	4133a8 <wcrtomb@plt+0xe698>  // b.none
  4133a0:	ldr	x0, [sp, #8]
  4133a4:	b	4133b0 <wcrtomb@plt+0xe6a0>
  4133a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4133ac:	add	x0, x0, #0x838
  4133b0:	str	x0, [sp, #24]
  4133b4:	ldr	x0, [sp, #24]
  4133b8:	mov	w1, #0x8000000             	// #134217728
  4133bc:	str	w1, [x0]
  4133c0:	ldr	x0, [sp, #24]
  4133c4:	add	sp, sp, #0x20
  4133c8:	ret
  4133cc:	stp	x29, x30, [sp, #-80]!
  4133d0:	mov	x29, sp
  4133d4:	str	x0, [sp, #40]
  4133d8:	str	x1, [sp, #32]
  4133dc:	str	w2, [sp, #28]
  4133e0:	str	x3, [sp, #16]
  4133e4:	ldr	x0, [sp, #16]
  4133e8:	str	x0, [sp, #72]
  4133ec:	b	4133fc <wcrtomb@plt+0xe6ec>
  4133f0:	ldr	x0, [sp, #32]
  4133f4:	add	x0, x0, #0x1
  4133f8:	str	x0, [sp, #32]
  4133fc:	bl	4047f0 <__ctype_b_loc@plt>
  413400:	ldr	x1, [x0]
  413404:	ldr	x0, [sp, #32]
  413408:	ldrb	w0, [x0]
  41340c:	and	x0, x0, #0xff
  413410:	lsl	x0, x0, #1
  413414:	add	x0, x1, x0
  413418:	ldrh	w0, [x0]
  41341c:	and	w0, w0, #0x2000
  413420:	cmp	w0, #0x0
  413424:	b.ne	4133f0 <wcrtomb@plt+0xe6e0>  // b.any
  413428:	ldr	x0, [sp, #32]
  41342c:	ldrb	w0, [x0]
  413430:	cmp	w0, #0x0
  413434:	b.eq	4135d0 <wcrtomb@plt+0xe8c0>  // b.none
  413438:	ldr	x0, [sp, #32]
  41343c:	ldrb	w0, [x0]
  413440:	cmp	w0, #0x23
  413444:	b.eq	4135d0 <wcrtomb@plt+0xe8c0>  // b.none
  413448:	mov	x2, #0x7                   	// #7
  41344c:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  413450:	add	x1, x0, #0xfd0
  413454:	ldr	x0, [sp, #32]
  413458:	bl	404480 <strncmp@plt>
  41345c:	cmp	w0, #0x0
  413460:	b.ne	4134fc <wcrtomb@plt+0xe7ec>  // b.any
  413464:	ldr	x0, [sp, #32]
  413468:	add	x0, x0, #0x7
  41346c:	str	x0, [sp, #32]
  413470:	b	413480 <wcrtomb@plt+0xe770>
  413474:	ldr	x0, [sp, #32]
  413478:	add	x0, x0, #0x1
  41347c:	str	x0, [sp, #32]
  413480:	bl	4047f0 <__ctype_b_loc@plt>
  413484:	ldr	x1, [x0]
  413488:	ldr	x0, [sp, #32]
  41348c:	ldrb	w0, [x0]
  413490:	and	x0, x0, #0xff
  413494:	lsl	x0, x0, #1
  413498:	add	x0, x1, x0
  41349c:	ldrh	w0, [x0]
  4134a0:	and	w0, w0, #0x2000
  4134a4:	cmp	w0, #0x0
  4134a8:	b.ne	413474 <wcrtomb@plt+0xe764>  // b.any
  4134ac:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4134b0:	add	x1, x0, #0xfd8
  4134b4:	ldr	x0, [sp, #32]
  4134b8:	bl	4047c0 <strcmp@plt>
  4134bc:	cmp	w0, #0x0
  4134c0:	b.ne	4134d4 <wcrtomb@plt+0xe7c4>  // b.any
  4134c4:	ldr	x0, [sp, #72]
  4134c8:	mov	w1, #0x8000000             	// #134217728
  4134cc:	str	w1, [x0]
  4134d0:	b	4135d8 <wcrtomb@plt+0xe8c8>
  4134d4:	adrp	x0, 47f000 <_obstack_memory_used@@Base+0x21ec0>
  4134d8:	add	x1, x0, #0xfe0
  4134dc:	ldr	x0, [sp, #32]
  4134e0:	bl	4047c0 <strcmp@plt>
  4134e4:	cmp	w0, #0x0
  4134e8:	b.ne	4135d8 <wcrtomb@plt+0xe8c8>  // b.any
  4134ec:	ldr	x0, [sp, #72]
  4134f0:	mov	w1, #0x10000000            	// #268435456
  4134f4:	str	w1, [x0]
  4134f8:	b	4135d8 <wcrtomb@plt+0xe8c8>
  4134fc:	ldr	x0, [sp, #32]
  413500:	bl	4040b0 <strlen@plt>
  413504:	str	x0, [sp, #64]
  413508:	ldr	x0, [sp, #64]
  41350c:	sub	x0, x0, #0x1
  413510:	ldr	x1, [sp, #32]
  413514:	add	x0, x1, x0
  413518:	ldrb	w0, [x0]
  41351c:	cmp	w0, #0x2f
  413520:	b.ne	413588 <wcrtomb@plt+0xe878>  // b.any
  413524:	ldr	x0, [sp, #64]
  413528:	sub	x0, x0, #0x1
  41352c:	str	x0, [sp, #64]
  413530:	ldr	x0, [sp, #64]
  413534:	add	x0, x0, #0x1
  413538:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41353c:	str	x0, [sp, #56]
  413540:	ldr	x2, [sp, #64]
  413544:	ldr	x1, [sp, #32]
  413548:	ldr	x0, [sp, #56]
  41354c:	bl	404020 <memcpy@plt>
  413550:	ldr	x1, [sp, #56]
  413554:	ldr	x0, [sp, #64]
  413558:	add	x0, x1, x0
  41355c:	strb	wzr, [x0]
  413560:	ldr	x0, [sp, #56]
  413564:	str	x0, [sp, #32]
  413568:	ldr	x1, [sp, #56]
  41356c:	ldr	x0, [sp, #40]
  413570:	bl	44a24c <argp_usage@@Base+0x1160>
  413574:	ldr	w1, [sp, #28]
  413578:	mov	w0, #0x8                   	// #8
  41357c:	movk	w0, #0x400, lsl #16
  413580:	orr	w0, w1, w0
  413584:	str	w0, [sp, #28]
  413588:	ldr	x0, [sp, #72]
  41358c:	ldr	w1, [x0]
  413590:	mov	w0, #0x8000000             	// #134217728
  413594:	cmp	w1, w0
  413598:	b.ne	4135a8 <wcrtomb@plt+0xe898>  // b.any
  41359c:	ldr	w0, [sp, #28]
  4135a0:	and	w0, w0, #0xefffffff
  4135a4:	b	4135b0 <wcrtomb@plt+0xe8a0>
  4135a8:	ldr	w0, [sp, #28]
  4135ac:	and	w0, w0, #0xf7ffffff
  4135b0:	ldr	x1, [sp, #72]
  4135b4:	ldr	w1, [x1]
  4135b8:	orr	w0, w0, w1
  4135bc:	mov	w2, w0
  4135c0:	ldr	x1, [sp, #32]
  4135c4:	ldr	x0, [sp, #40]
  4135c8:	bl	44ae84 <argp_usage@@Base+0x1d98>
  4135cc:	b	4135dc <wcrtomb@plt+0xe8cc>
  4135d0:	nop
  4135d4:	b	4135dc <wcrtomb@plt+0xe8cc>
  4135d8:	nop
  4135dc:	ldp	x29, x30, [sp], #80
  4135e0:	ret
  4135e4:	stp	x29, x30, [sp, #-48]!
  4135e8:	mov	x29, sp
  4135ec:	str	x0, [sp, #24]
  4135f0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4135f4:	add	x0, x0, #0x7e0
  4135f8:	str	x0, [sp, #40]
  4135fc:	b	413624 <wcrtomb@plt+0xe914>
  413600:	ldr	x0, [sp, #40]
  413604:	ldr	x0, [x0]
  413608:	ldr	x1, [sp, #24]
  41360c:	bl	4047c0 <strcmp@plt>
  413610:	cmp	w0, #0x0
  413614:	b.eq	413638 <wcrtomb@plt+0xe928>  // b.none
  413618:	ldr	x0, [sp, #40]
  41361c:	add	x0, x0, #0x28
  413620:	str	x0, [sp, #40]
  413624:	ldr	x0, [sp, #40]
  413628:	ldr	x0, [x0]
  41362c:	cmp	x0, #0x0
  413630:	b.ne	413600 <wcrtomb@plt+0xe8f0>  // b.any
  413634:	b	41363c <wcrtomb@plt+0xe92c>
  413638:	nop
  41363c:	ldr	x0, [sp, #40]
  413640:	ldp	x29, x30, [sp], #48
  413644:	ret
  413648:	stp	x29, x30, [sp, #-32]!
  41364c:	mov	x29, sp
  413650:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  413654:	add	x0, x0, #0x7e0
  413658:	str	x0, [sp, #24]
  41365c:	b	41367c <wcrtomb@plt+0xe96c>
  413660:	ldr	x0, [sp, #24]
  413664:	ldr	x0, [x0]
  413668:	mov	w1, #0x0                   	// #0
  41366c:	bl	412b5c <wcrtomb@plt+0xde4c>
  413670:	ldr	x0, [sp, #24]
  413674:	add	x0, x0, #0x28
  413678:	str	x0, [sp, #24]
  41367c:	ldr	x0, [sp, #24]
  413680:	ldr	x0, [x0]
  413684:	cmp	x0, #0x0
  413688:	b.ne	413660 <wcrtomb@plt+0xe950>  // b.any
  41368c:	nop
  413690:	nop
  413694:	ldp	x29, x30, [sp], #32
  413698:	ret
  41369c:	sub	sp, sp, #0x10
  4136a0:	str	w0, [sp, #12]
  4136a4:	ldr	w0, [sp, #12]
  4136a8:	cmp	w0, #0x26
  4136ac:	b.eq	4136c4 <wcrtomb@plt+0xe9b4>  // b.none
  4136b0:	ldr	w0, [sp, #12]
  4136b4:	cmp	w0, #0x5f
  4136b8:	b.eq	4136c4 <wcrtomb@plt+0xe9b4>  // b.none
  4136bc:	mov	w0, #0x1                   	// #1
  4136c0:	b	4136c8 <wcrtomb@plt+0xe9b8>
  4136c4:	mov	w0, #0x0                   	// #0
  4136c8:	and	w0, w0, #0x1
  4136cc:	and	w0, w0, #0xff
  4136d0:	add	sp, sp, #0x10
  4136d4:	ret
  4136d8:	stp	x29, x30, [sp, #-16]!
  4136dc:	mov	x29, sp
  4136e0:	bl	404190 <geteuid@plt>
  4136e4:	cmp	w0, #0x0
  4136e8:	cset	w0, eq  // eq = none
  4136ec:	and	w1, w0, #0xff
  4136f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4136f4:	add	x0, x0, #0x840
  4136f8:	strb	w1, [x0]
  4136fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413700:	add	x0, x0, #0x840
  413704:	ldrb	w0, [x0]
  413708:	mov	w1, w0
  41370c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413710:	add	x0, x0, #0x294
  413714:	ldr	w0, [x0]
  413718:	add	w1, w1, w0
  41371c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413720:	add	x0, x0, #0x294
  413724:	str	w1, [x0]
  413728:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41372c:	add	x0, x0, #0x840
  413730:	ldrb	w0, [x0]
  413734:	mov	w1, w0
  413738:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41373c:	add	x0, x0, #0x404
  413740:	ldr	w0, [x0]
  413744:	add	w1, w1, w0
  413748:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41374c:	add	x0, x0, #0x404
  413750:	str	w1, [x0]
  413754:	mov	w0, #0x0                   	// #0
  413758:	bl	404b50 <umask@plt>
  41375c:	mov	w1, w0
  413760:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413764:	add	x0, x0, #0x844
  413768:	str	w1, [x0]
  41376c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413770:	add	x0, x0, #0x294
  413774:	ldr	w0, [x0]
  413778:	cmp	w0, #0x0
  41377c:	b.le	413790 <wcrtomb@plt+0xea80>
  413780:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413784:	add	x0, x0, #0x848
  413788:	str	wzr, [x0]
  41378c:	b	4137b8 <wcrtomb@plt+0xeaa8>
  413790:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413794:	add	x0, x0, #0x844
  413798:	ldr	w0, [x0]
  41379c:	bl	404b50 <umask@plt>
  4137a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4137a4:	add	x0, x0, #0x844
  4137a8:	ldr	w1, [x0]
  4137ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4137b0:	add	x0, x0, #0x848
  4137b4:	str	w1, [x0]
  4137b8:	nop
  4137bc:	ldp	x29, x30, [sp], #16
  4137c0:	ret
  4137c4:	stp	x29, x30, [sp, #-64]!
  4137c8:	mov	x29, sp
  4137cc:	str	w0, [sp, #44]
  4137d0:	str	x1, [sp, #32]
  4137d4:	str	w2, [sp, #40]
  4137d8:	str	w3, [sp, #28]
  4137dc:	ldr	w0, [sp, #44]
  4137e0:	cmp	w0, #0x0
  4137e4:	b.lt	413824 <wcrtomb@plt+0xeb14>  // b.tstop
  4137e8:	ldr	w1, [sp, #40]
  4137ec:	ldr	w0, [sp, #44]
  4137f0:	bl	404530 <fchmod@plt>
  4137f4:	str	w0, [sp, #60]
  4137f8:	ldr	w0, [sp, #60]
  4137fc:	cmp	w0, #0x0
  413800:	b.eq	41381c <wcrtomb@plt+0xeb0c>  // b.none
  413804:	bl	404bc0 <__errno_location@plt>
  413808:	ldr	w0, [x0]
  41380c:	bl	41369c <wcrtomb@plt+0xe98c>
  413810:	and	w0, w0, #0xff
  413814:	cmp	w0, #0x0
  413818:	b.eq	413824 <wcrtomb@plt+0xeb14>  // b.none
  41381c:	ldr	w0, [sp, #60]
  413820:	b	413840 <wcrtomb@plt+0xeb30>
  413824:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  413828:	add	x0, x0, #0x8b0
  41382c:	ldr	w0, [x0]
  413830:	ldr	w3, [sp, #28]
  413834:	ldr	w2, [sp, #40]
  413838:	ldr	x1, [sp, #32]
  41383c:	bl	404c30 <fchmodat@plt>
  413840:	ldp	x29, x30, [sp], #64
  413844:	ret
  413848:	stp	x29, x30, [sp, #-64]!
  41384c:	mov	x29, sp
  413850:	str	w0, [sp, #44]
  413854:	str	x1, [sp, #32]
  413858:	str	w2, [sp, #40]
  41385c:	str	w3, [sp, #28]
  413860:	str	w4, [sp, #24]
  413864:	ldr	w0, [sp, #44]
  413868:	cmp	w0, #0x0
  41386c:	b.lt	4138b0 <wcrtomb@plt+0xeba0>  // b.tstop
  413870:	ldr	w2, [sp, #28]
  413874:	ldr	w1, [sp, #40]
  413878:	ldr	w0, [sp, #44]
  41387c:	bl	404c70 <fchown@plt>
  413880:	str	w0, [sp, #60]
  413884:	ldr	w0, [sp, #60]
  413888:	cmp	w0, #0x0
  41388c:	b.eq	4138a8 <wcrtomb@plt+0xeb98>  // b.none
  413890:	bl	404bc0 <__errno_location@plt>
  413894:	ldr	w0, [x0]
  413898:	bl	41369c <wcrtomb@plt+0xe98c>
  41389c:	and	w0, w0, #0xff
  4138a0:	cmp	w0, #0x0
  4138a4:	b.eq	4138b0 <wcrtomb@plt+0xeba0>  // b.none
  4138a8:	ldr	w0, [sp, #60]
  4138ac:	b	4138d0 <wcrtomb@plt+0xebc0>
  4138b0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4138b4:	add	x0, x0, #0x8b0
  4138b8:	ldr	w0, [x0]
  4138bc:	ldr	w4, [sp, #24]
  4138c0:	ldr	w3, [sp, #28]
  4138c4:	ldr	w2, [sp, #40]
  4138c8:	ldr	x1, [sp, #32]
  4138cc:	bl	404900 <fchownat@plt>
  4138d0:	ldp	x29, x30, [sp], #64
  4138d4:	ret
  4138d8:	stp	x29, x30, [sp, #-48]!
  4138dc:	mov	x29, sp
  4138e0:	str	w0, [sp, #44]
  4138e4:	str	x1, [sp, #32]
  4138e8:	str	x2, [sp, #24]
  4138ec:	str	w3, [sp, #40]
  4138f0:	ldr	w0, [sp, #44]
  4138f4:	cmp	w0, #0x0
  4138f8:	b.lt	41390c <wcrtomb@plt+0xebfc>  // b.tstop
  4138fc:	ldr	x1, [sp, #24]
  413900:	ldr	w0, [sp, #44]
  413904:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  413908:	b	413928 <wcrtomb@plt+0xec18>
  41390c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  413910:	add	x0, x0, #0x8b0
  413914:	ldr	w0, [x0]
  413918:	ldr	w3, [sp, #40]
  41391c:	ldr	x2, [sp, #24]
  413920:	ldr	x1, [sp, #32]
  413924:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  413928:	ldp	x29, x30, [sp], #48
  41392c:	ret
  413930:	stp	x29, x30, [sp, #-208]!
  413934:	mov	x29, sp
  413938:	str	x0, [sp, #56]
  41393c:	str	w1, [sp, #52]
  413940:	str	w2, [sp, #48]
  413944:	str	w3, [sp, #44]
  413948:	str	w4, [sp, #40]
  41394c:	str	w5, [sp, #36]
  413950:	strb	w6, [sp, #35]
  413954:	str	w7, [sp, #28]
  413958:	ldr	w1, [sp, #40]
  41395c:	ldr	w0, [sp, #52]
  413960:	eor	w1, w1, w0
  413964:	ldr	w0, [sp, #36]
  413968:	mvn	w0, w0
  41396c:	orr	w1, w1, w0
  413970:	ldr	w0, [sp, #48]
  413974:	and	w0, w1, w0
  413978:	cmp	w0, #0x0
  41397c:	b.eq	413b48 <wcrtomb@plt+0xee38>  // b.none
  413980:	ldr	w1, [sp, #48]
  413984:	ldr	w0, [sp, #36]
  413988:	orr	w0, w1, w0
  41398c:	mvn	w0, w0
  413990:	and	w0, w0, #0xfff
  413994:	cmp	w0, #0x0
  413998:	b.eq	4139d0 <wcrtomb@plt+0xecc0>  // b.none
  41399c:	add	x0, sp, #0x48
  4139a0:	ldr	w3, [sp, #28]
  4139a4:	mov	x2, x0
  4139a8:	ldr	x1, [sp, #56]
  4139ac:	ldr	w0, [sp, #44]
  4139b0:	bl	4138d8 <wcrtomb@plt+0xebc8>
  4139b4:	cmp	w0, #0x0
  4139b8:	b.eq	4139c8 <wcrtomb@plt+0xecb8>  // b.none
  4139bc:	ldr	x0, [sp, #56]
  4139c0:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  4139c4:	b	413b48 <wcrtomb@plt+0xee38>
  4139c8:	ldr	w0, [sp, #88]
  4139cc:	str	w0, [sp, #40]
  4139d0:	ldr	w0, [sp, #40]
  4139d4:	and	w0, w0, #0xfff
  4139d8:	str	w0, [sp, #40]
  4139dc:	ldr	w0, [sp, #48]
  4139e0:	mvn	w1, w0
  4139e4:	ldr	w0, [sp, #40]
  4139e8:	and	w1, w1, w0
  4139ec:	ldr	w2, [sp, #52]
  4139f0:	ldr	w0, [sp, #48]
  4139f4:	and	w0, w2, w0
  4139f8:	orr	w0, w1, w0
  4139fc:	str	w0, [sp, #52]
  413a00:	ldr	w1, [sp, #40]
  413a04:	ldr	w0, [sp, #52]
  413a08:	cmp	w1, w0
  413a0c:	b.eq	413b48 <wcrtomb@plt+0xee38>  // b.none
  413a10:	ldr	w3, [sp, #28]
  413a14:	ldr	w2, [sp, #52]
  413a18:	ldr	x1, [sp, #56]
  413a1c:	ldr	w0, [sp, #44]
  413a20:	bl	4137c4 <wcrtomb@plt+0xeab4>
  413a24:	cmp	w0, #0x0
  413a28:	b.eq	413a38 <wcrtomb@plt+0xed28>  // b.none
  413a2c:	bl	404bc0 <__errno_location@plt>
  413a30:	ldr	w0, [x0]
  413a34:	b	413a3c <wcrtomb@plt+0xed2c>
  413a38:	mov	w0, #0x0                   	// #0
  413a3c:	str	w0, [sp, #204]
  413a40:	ldr	w0, [sp, #204]
  413a44:	cmp	w0, #0x1
  413a48:	b.ne	413a9c <wcrtomb@plt+0xed8c>  // b.any
  413a4c:	ldr	w0, [sp, #52]
  413a50:	and	w0, w0, #0x800
  413a54:	cmp	w0, #0x0
  413a58:	b.eq	413a9c <wcrtomb@plt+0xed8c>  // b.none
  413a5c:	bl	457c18 <argp_usage@@Base+0xeb2c>
  413a60:	cmp	w0, #0x0
  413a64:	b.ne	413a9c <wcrtomb@plt+0xed8c>  // b.any
  413a68:	ldr	w3, [sp, #28]
  413a6c:	ldr	w2, [sp, #52]
  413a70:	ldr	x1, [sp, #56]
  413a74:	ldr	w0, [sp, #44]
  413a78:	bl	4137c4 <wcrtomb@plt+0xeab4>
  413a7c:	cmp	w0, #0x0
  413a80:	b.eq	413a90 <wcrtomb@plt+0xed80>  // b.none
  413a84:	bl	404bc0 <__errno_location@plt>
  413a88:	ldr	w0, [x0]
  413a8c:	b	413a94 <wcrtomb@plt+0xed84>
  413a90:	mov	w0, #0x0                   	// #0
  413a94:	str	w0, [sp, #204]
  413a98:	bl	457c10 <argp_usage@@Base+0xeb24>
  413a9c:	ldr	w0, [sp, #28]
  413aa0:	cmp	w0, #0x0
  413aa4:	b.eq	413b00 <wcrtomb@plt+0xedf0>  // b.none
  413aa8:	ldrb	w0, [sp, #35]
  413aac:	cmp	w0, #0x32
  413ab0:	b.eq	413b00 <wcrtomb@plt+0xedf0>  // b.none
  413ab4:	ldr	w0, [sp, #204]
  413ab8:	bl	41369c <wcrtomb@plt+0xe98c>
  413abc:	and	w0, w0, #0xff
  413ac0:	eor	w0, w0, #0x1
  413ac4:	and	w0, w0, #0xff
  413ac8:	cmp	w0, #0x0
  413acc:	b.eq	413b00 <wcrtomb@plt+0xedf0>  // b.none
  413ad0:	mov	w3, #0x0                   	// #0
  413ad4:	ldr	w2, [sp, #52]
  413ad8:	ldr	x1, [sp, #56]
  413adc:	ldr	w0, [sp, #44]
  413ae0:	bl	4137c4 <wcrtomb@plt+0xeab4>
  413ae4:	cmp	w0, #0x0
  413ae8:	b.eq	413af8 <wcrtomb@plt+0xede8>  // b.none
  413aec:	bl	404bc0 <__errno_location@plt>
  413af0:	ldr	w0, [x0]
  413af4:	b	413afc <wcrtomb@plt+0xedec>
  413af8:	mov	w0, #0x0                   	// #0
  413afc:	str	w0, [sp, #204]
  413b00:	ldr	w0, [sp, #204]
  413b04:	cmp	w0, #0x0
  413b08:	b.eq	413b48 <wcrtomb@plt+0xee38>  // b.none
  413b0c:	ldrb	w0, [sp, #35]
  413b10:	cmp	w0, #0x32
  413b14:	b.ne	413b2c <wcrtomb@plt+0xee1c>  // b.any
  413b18:	ldr	w0, [sp, #204]
  413b1c:	bl	41369c <wcrtomb@plt+0xe98c>
  413b20:	and	w0, w0, #0xff
  413b24:	cmp	w0, #0x0
  413b28:	b.eq	413b48 <wcrtomb@plt+0xee38>  // b.none
  413b2c:	bl	404bc0 <__errno_location@plt>
  413b30:	mov	x1, x0
  413b34:	ldr	w0, [sp, #204]
  413b38:	str	w0, [x1]
  413b3c:	ldr	w1, [sp, #52]
  413b40:	ldr	x0, [sp, #56]
  413b44:	bl	43a33c <wcrtomb@plt+0x3562c>
  413b48:	ldp	x29, x30, [sp], #208
  413b4c:	ret
  413b50:	stp	x29, x30, [sp, #-128]!
  413b54:	mov	x29, sp
  413b58:	stp	x19, x20, [sp, #16]
  413b5c:	str	x0, [sp, #56]
  413b60:	stp	x1, x2, [sp, #40]
  413b64:	ldr	x0, [sp, #40]
  413b68:	cmp	x0, #0x0
  413b6c:	b.ge	413be4 <wcrtomb@plt+0xeed4>  // b.tcont
  413b70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413b74:	add	x0, x0, #0x24c
  413b78:	ldr	w0, [x0]
  413b7c:	and	w0, w0, #0x8000
  413b80:	cmp	w0, #0x0
  413b84:	b.eq	413cf0 <wcrtomb@plt+0xefe0>  // b.none
  413b88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413b8c:	add	x0, x0, #0x420
  413b90:	ldr	x0, [x0]
  413b94:	cmp	x0, #0x0
  413b98:	b.eq	413bac <wcrtomb@plt+0xee9c>  // b.none
  413b9c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413ba0:	add	x0, x0, #0x420
  413ba4:	ldr	x0, [x0]
  413ba8:	blr	x0
  413bac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  413bb0:	add	x0, x0, #0x28
  413bb4:	bl	404c60 <gettext@plt>
  413bb8:	mov	x19, x0
  413bbc:	mov	w2, #0x1                   	// #1
  413bc0:	ldp	x0, x1, [sp, #40]
  413bc4:	bl	422310 <wcrtomb@plt+0x1d600>
  413bc8:	mov	x4, x0
  413bcc:	ldr	x3, [sp, #56]
  413bd0:	mov	x2, x19
  413bd4:	mov	w1, #0x0                   	// #0
  413bd8:	mov	w0, #0x0                   	// #0
  413bdc:	bl	404100 <error@plt>
  413be0:	b	413cf0 <wcrtomb@plt+0xefe0>
  413be4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413be8:	add	x0, x0, #0x3d8
  413bec:	ldp	x2, x3, [sp, #40]
  413bf0:	ldp	x0, x1, [x0]
  413bf4:	bl	45ab0c <argp_usage@@Base+0x11a20>
  413bf8:	cmp	w0, #0x0
  413bfc:	b.ge	413cf0 <wcrtomb@plt+0xefe0>  // b.tcont
  413c00:	add	x0, sp, #0x70
  413c04:	bl	44df9c <argp_usage@@Base+0x4eb0>
  413c08:	ldp	x2, x3, [sp, #40]
  413c0c:	ldp	x0, x1, [sp, #112]
  413c10:	bl	45ab0c <argp_usage@@Base+0x11a20>
  413c14:	cmp	w0, #0x0
  413c18:	b.ge	413cf0 <wcrtomb@plt+0xefe0>  // b.tcont
  413c1c:	ldr	x1, [sp, #40]
  413c20:	ldr	x0, [sp, #112]
  413c24:	sub	x0, x1, x0
  413c28:	str	x0, [sp, #96]
  413c2c:	ldr	x1, [sp, #48]
  413c30:	ldr	x0, [sp, #120]
  413c34:	sub	x0, x1, x0
  413c38:	str	x0, [sp, #104]
  413c3c:	ldr	x0, [sp, #104]
  413c40:	cmp	x0, #0x0
  413c44:	b.ge	413c68 <wcrtomb@plt+0xef58>  // b.tcont
  413c48:	ldr	x1, [sp, #104]
  413c4c:	mov	x0, #0xca00                	// #51712
  413c50:	movk	x0, #0x3b9a, lsl #16
  413c54:	add	x0, x1, x0
  413c58:	str	x0, [sp, #104]
  413c5c:	ldr	x0, [sp, #96]
  413c60:	sub	x0, x0, #0x1
  413c64:	str	x0, [sp, #96]
  413c68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413c6c:	add	x0, x0, #0x24c
  413c70:	ldr	w0, [x0]
  413c74:	and	w0, w0, #0x8000
  413c78:	cmp	w0, #0x0
  413c7c:	b.eq	413cf0 <wcrtomb@plt+0xefe0>  // b.none
  413c80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413c84:	add	x0, x0, #0x420
  413c88:	ldr	x0, [x0]
  413c8c:	cmp	x0, #0x0
  413c90:	b.eq	413ca4 <wcrtomb@plt+0xef94>  // b.none
  413c94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413c98:	add	x0, x0, #0x420
  413c9c:	ldr	x0, [x0]
  413ca0:	blr	x0
  413ca4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  413ca8:	add	x0, x0, #0x50
  413cac:	bl	404c60 <gettext@plt>
  413cb0:	mov	x19, x0
  413cb4:	mov	w2, #0x1                   	// #1
  413cb8:	ldp	x0, x1, [sp, #40]
  413cbc:	bl	422310 <wcrtomb@plt+0x1d600>
  413cc0:	mov	x20, x0
  413cc4:	add	x0, sp, #0x40
  413cc8:	mov	x2, x0
  413ccc:	ldp	x0, x1, [sp, #96]
  413cd0:	bl	424968 <wcrtomb@plt+0x1fc58>
  413cd4:	mov	x5, x0
  413cd8:	mov	x4, x20
  413cdc:	ldr	x3, [sp, #56]
  413ce0:	mov	x2, x19
  413ce4:	mov	w1, #0x0                   	// #0
  413ce8:	mov	w0, #0x0                   	// #0
  413cec:	bl	404100 <error@plt>
  413cf0:	nop
  413cf4:	ldp	x19, x20, [sp, #16]
  413cf8:	ldp	x29, x30, [sp], #128
  413cfc:	ret
  413d00:	stp	x29, x30, [sp, #-112]!
  413d04:	mov	x29, sp
  413d08:	str	x0, [sp, #56]
  413d0c:	str	x1, [sp, #48]
  413d10:	str	w2, [sp, #44]
  413d14:	str	w3, [sp, #40]
  413d18:	str	w4, [sp, #36]
  413d1c:	strb	w5, [sp, #35]
  413d20:	strb	w6, [sp, #34]
  413d24:	str	w7, [sp, #28]
  413d28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413d2c:	add	x0, x0, #0x258
  413d30:	ldrb	w0, [x0]
  413d34:	eor	w0, w0, #0x1
  413d38:	and	w0, w0, #0xff
  413d3c:	cmp	w0, #0x0
  413d40:	b.eq	413e1c <wcrtomb@plt+0xf10c>  // b.none
  413d44:	ldrb	w0, [sp, #34]
  413d48:	eor	w0, w0, #0x1
  413d4c:	and	w0, w0, #0xff
  413d50:	cmp	w0, #0x0
  413d54:	b.eq	413e1c <wcrtomb@plt+0xf10c>  // b.none
  413d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413d5c:	add	x0, x0, #0x51
  413d60:	ldrb	w0, [x0]
  413d64:	cmp	w0, #0x0
  413d68:	b.eq	413d7c <wcrtomb@plt+0xf06c>  // b.none
  413d6c:	ldr	x0, [sp, #48]
  413d70:	ldp	x0, x1, [x0, #216]
  413d74:	stp	x0, x1, [sp, #72]
  413d78:	b	413d84 <wcrtomb@plt+0xf074>
  413d7c:	mov	x0, #0x3ffffffe            	// #1073741822
  413d80:	str	x0, [sp, #80]
  413d84:	ldr	x0, [sp, #48]
  413d88:	ldp	x0, x1, [x0, #232]
  413d8c:	stp	x0, x1, [sp, #88]
  413d90:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  413d94:	add	x0, x0, #0x8b0
  413d98:	ldr	w0, [x0]
  413d9c:	add	x1, sp, #0x48
  413da0:	ldr	w4, [sp, #28]
  413da4:	mov	x3, x1
  413da8:	ldr	x2, [sp, #56]
  413dac:	mov	w1, w0
  413db0:	ldr	w0, [sp, #44]
  413db4:	bl	44b5a8 <argp_usage@@Base+0x24bc>
  413db8:	cmp	w0, #0x0
  413dbc:	b.ne	413df0 <wcrtomb@plt+0xf0e0>  // b.any
  413dc0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413dc4:	add	x0, x0, #0x51
  413dc8:	ldrb	w0, [x0]
  413dcc:	cmp	w0, #0x0
  413dd0:	b.eq	413de0 <wcrtomb@plt+0xf0d0>  // b.none
  413dd4:	ldp	x1, x2, [sp, #72]
  413dd8:	ldr	x0, [sp, #56]
  413ddc:	bl	413b50 <wcrtomb@plt+0xee40>
  413de0:	ldp	x1, x2, [sp, #88]
  413de4:	ldr	x0, [sp, #56]
  413de8:	bl	413b50 <wcrtomb@plt+0xee40>
  413dec:	b	413e1c <wcrtomb@plt+0xf10c>
  413df0:	ldrb	w0, [sp, #35]
  413df4:	cmp	w0, #0x32
  413df8:	b.ne	413e14 <wcrtomb@plt+0xf104>  // b.any
  413dfc:	bl	404bc0 <__errno_location@plt>
  413e00:	ldr	w0, [x0]
  413e04:	bl	41369c <wcrtomb@plt+0xe98c>
  413e08:	and	w0, w0, #0xff
  413e0c:	cmp	w0, #0x0
  413e10:	b.eq	413e1c <wcrtomb@plt+0xf10c>  // b.none
  413e14:	ldr	x0, [sp, #56]
  413e18:	bl	43ac9c <wcrtomb@plt+0x35f8c>
  413e1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413e20:	add	x0, x0, #0x404
  413e24:	ldr	w0, [x0]
  413e28:	cmp	w0, #0x0
  413e2c:	b.le	413eec <wcrtomb@plt+0xf1dc>
  413e30:	ldrb	w0, [sp, #34]
  413e34:	eor	w0, w0, #0x1
  413e38:	and	w0, w0, #0xff
  413e3c:	cmp	w0, #0x0
  413e40:	b.eq	413eec <wcrtomb@plt+0xf1dc>  // b.none
  413e44:	ldr	x0, [sp, #48]
  413e48:	ldr	w0, [x0, #112]
  413e4c:	str	w0, [sp, #108]
  413e50:	ldr	x0, [sp, #48]
  413e54:	ldr	w0, [x0, #116]
  413e58:	str	w0, [sp, #104]
  413e5c:	ldr	w4, [sp, #28]
  413e60:	ldr	w3, [sp, #104]
  413e64:	ldr	w2, [sp, #108]
  413e68:	ldr	x1, [sp, #56]
  413e6c:	ldr	w0, [sp, #44]
  413e70:	bl	413848 <wcrtomb@plt+0xeb38>
  413e74:	cmp	w0, #0x0
  413e78:	b.ne	413eb8 <wcrtomb@plt+0xf1a8>  // b.any
  413e7c:	ldr	w0, [sp, #36]
  413e80:	mvn	w1, w0
  413e84:	ldr	w0, [sp, #40]
  413e88:	orr	w1, w1, w0
  413e8c:	mov	w0, #0x49                  	// #73
  413e90:	and	w0, w1, w0
  413e94:	cmp	w0, #0x0
  413e98:	b.eq	413eec <wcrtomb@plt+0xf1dc>  // b.none
  413e9c:	ldr	w0, [sp, #40]
  413ea0:	and	w0, w0, #0xc00
  413ea4:	mvn	w0, w0
  413ea8:	ldr	w1, [sp, #36]
  413eac:	and	w0, w1, w0
  413eb0:	str	w0, [sp, #36]
  413eb4:	b	413eec <wcrtomb@plt+0xf1dc>
  413eb8:	ldrb	w0, [sp, #35]
  413ebc:	cmp	w0, #0x32
  413ec0:	b.ne	413edc <wcrtomb@plt+0xf1cc>  // b.any
  413ec4:	bl	404bc0 <__errno_location@plt>
  413ec8:	ldr	w0, [x0]
  413ecc:	bl	41369c <wcrtomb@plt+0xe98c>
  413ed0:	and	w0, w0, #0xff
  413ed4:	cmp	w0, #0x0
  413ed8:	b.eq	413eec <wcrtomb@plt+0xf1dc>  // b.none
  413edc:	ldr	w2, [sp, #104]
  413ee0:	ldr	w1, [sp, #108]
  413ee4:	ldr	x0, [sp, #56]
  413ee8:	bl	43a3e8 <wcrtomb@plt+0x356d8>
  413eec:	ldr	x0, [sp, #48]
  413ef0:	ldr	w1, [x0, #104]
  413ef4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413ef8:	add	x0, x0, #0x848
  413efc:	ldr	w0, [x0]
  413f00:	mvn	w0, w0
  413f04:	and	w1, w1, w0
  413f08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  413f0c:	add	x0, x0, #0x294
  413f10:	ldr	w0, [x0]
  413f14:	cmp	w0, #0x0
  413f18:	b.le	413f38 <wcrtomb@plt+0xf228>
  413f1c:	ldrb	w0, [sp, #34]
  413f20:	eor	w0, w0, #0x1
  413f24:	and	w0, w0, #0xff
  413f28:	cmp	w0, #0x0
  413f2c:	b.eq	413f38 <wcrtomb@plt+0xf228>  // b.none
  413f30:	mov	w0, #0xfff                 	// #4095
  413f34:	b	413f3c <wcrtomb@plt+0xf22c>
  413f38:	mov	w0, #0x1ff                 	// #511
  413f3c:	ldr	w7, [sp, #28]
  413f40:	ldrb	w6, [sp, #35]
  413f44:	ldr	w5, [sp, #36]
  413f48:	ldr	w4, [sp, #40]
  413f4c:	ldr	w3, [sp, #44]
  413f50:	mov	w2, w0
  413f54:	ldr	x0, [sp, #56]
  413f58:	bl	413930 <wcrtomb@plt+0xec20>
  413f5c:	mov	w3, #0x1                   	// #1
  413f60:	ldrb	w2, [sp, #35]
  413f64:	ldr	x1, [sp, #56]
  413f68:	ldr	x0, [sp, #48]
  413f6c:	bl	439a0c <wcrtomb@plt+0x34cfc>
  413f70:	ldrb	w2, [sp, #35]
  413f74:	ldr	x1, [sp, #56]
  413f78:	ldr	x0, [sp, #48]
  413f7c:	bl	43907c <wcrtomb@plt+0x3436c>
  413f80:	ldrb	w2, [sp, #35]
  413f84:	ldr	x1, [sp, #56]
  413f88:	ldr	x0, [sp, #48]
  413f8c:	bl	4397c4 <wcrtomb@plt+0x34ab4>
  413f90:	nop
  413f94:	ldp	x29, x30, [sp], #112
  413f98:	ret
  413f9c:	stp	x29, x30, [sp, #-48]!
  413fa0:	mov	x29, sp
  413fa4:	str	x0, [sp, #24]
  413fa8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  413fac:	add	x0, x0, #0x850
  413fb0:	ldr	x0, [x0]
  413fb4:	str	x0, [sp, #40]
  413fb8:	b	414054 <wcrtomb@plt+0xf344>
  413fbc:	ldr	x0, [sp, #40]
  413fc0:	cmp	x0, #0x0
  413fc4:	b.eq	414048 <wcrtomb@plt+0xf338>  // b.none
  413fc8:	ldr	x0, [sp, #40]
  413fcc:	ldrb	w0, [x0, #88]
  413fd0:	eor	w0, w0, #0x1
  413fd4:	and	w0, w0, #0xff
  413fd8:	cmp	w0, #0x0
  413fdc:	b.eq	414048 <wcrtomb@plt+0xf338>  // b.none
  413fe0:	ldr	x0, [sp, #40]
  413fe4:	ldr	x1, [x0, #160]
  413fe8:	ldr	x0, [sp, #40]
  413fec:	ldr	x0, [x0, #152]
  413ff0:	mov	x2, x0
  413ff4:	ldr	x0, [sp, #24]
  413ff8:	bl	404480 <strncmp@plt>
  413ffc:	cmp	w0, #0x0
  414000:	b.ne	414048 <wcrtomb@plt+0xf338>  // b.any
  414004:	ldr	x0, [sp, #40]
  414008:	ldr	x0, [x0, #152]
  41400c:	ldr	x1, [sp, #24]
  414010:	add	x0, x1, x0
  414014:	ldrb	w0, [x0]
  414018:	cmp	w0, #0x2f
  41401c:	b.ne	414048 <wcrtomb@plt+0xf338>  // b.any
  414020:	ldr	x0, [sp, #24]
  414024:	bl	44a0e0 <argp_usage@@Base+0xff4>
  414028:	mov	x2, x0
  41402c:	ldr	x0, [sp, #40]
  414030:	ldr	x0, [x0, #152]
  414034:	add	x0, x0, #0x1
  414038:	ldr	x1, [sp, #24]
  41403c:	add	x0, x1, x0
  414040:	cmp	x2, x0
  414044:	b.eq	414064 <wcrtomb@plt+0xf354>  // b.none
  414048:	ldr	x0, [sp, #40]
  41404c:	ldr	x0, [x0]
  414050:	str	x0, [sp, #40]
  414054:	ldr	x0, [sp, #40]
  414058:	cmp	x0, #0x0
  41405c:	b.ne	413fbc <wcrtomb@plt+0xf2ac>  // b.any
  414060:	b	414068 <wcrtomb@plt+0xf358>
  414064:	nop
  414068:	ldr	x0, [sp, #40]
  41406c:	ldp	x29, x30, [sp], #48
  414070:	ret
  414074:	stp	x29, x30, [sp, #-176]!
  414078:	mov	x29, sp
  41407c:	str	x0, [sp, #24]
  414080:	ldr	x0, [sp, #24]
  414084:	str	x0, [sp, #168]
  414088:	ldr	x0, [sp, #168]
  41408c:	mov	w1, #0x1                   	// #1
  414090:	strb	w1, [x0, #88]
  414094:	ldr	x0, [sp, #168]
  414098:	ldr	x0, [x0, #160]
  41409c:	add	x1, sp, #0x28
  4140a0:	bl	4255c4 <wcrtomb@plt+0x208b4>
  4140a4:	cmp	w0, #0x0
  4140a8:	b.eq	4140bc <wcrtomb@plt+0xf3ac>  // b.none
  4140ac:	ldr	x0, [sp, #168]
  4140b0:	ldr	x0, [x0, #160]
  4140b4:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  4140b8:	b	4140d4 <wcrtomb@plt+0xf3c4>
  4140bc:	ldr	x1, [sp, #40]
  4140c0:	ldr	x0, [sp, #168]
  4140c4:	str	x1, [x0, #8]
  4140c8:	ldr	x1, [sp, #48]
  4140cc:	ldr	x0, [sp, #168]
  4140d0:	str	x1, [x0, #16]
  4140d4:	ldr	x0, [sp, #168]
  4140d8:	ldr	x0, [x0]
  4140dc:	str	x0, [sp, #168]
  4140e0:	ldr	x0, [sp, #168]
  4140e4:	cmp	x0, #0x0
  4140e8:	b.eq	414104 <wcrtomb@plt+0xf3f4>  // b.none
  4140ec:	ldr	x0, [sp, #168]
  4140f0:	ldrb	w0, [x0, #88]
  4140f4:	eor	w0, w0, #0x1
  4140f8:	and	w0, w0, #0xff
  4140fc:	cmp	w0, #0x0
  414100:	b.ne	414088 <wcrtomb@plt+0xf378>  // b.any
  414104:	nop
  414108:	ldp	x29, x30, [sp], #176
  41410c:	ret
  414110:	stp	x29, x30, [sp, #-64]!
  414114:	mov	x29, sp
  414118:	str	x0, [sp, #40]
  41411c:	str	x1, [sp, #32]
  414120:	str	w2, [sp, #28]
  414124:	str	w3, [sp, #24]
  414128:	str	w4, [sp, #20]
  41412c:	str	w5, [sp, #16]
  414130:	ldr	x0, [sp, #40]
  414134:	bl	4040b0 <strlen@plt>
  414138:	str	x0, [sp, #56]
  41413c:	mov	x0, #0xa8                  	// #168
  414140:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  414144:	str	x0, [sp, #48]
  414148:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41414c:	add	x0, x0, #0x850
  414150:	ldr	x1, [x0]
  414154:	ldr	x0, [sp, #48]
  414158:	str	x1, [x0]
  41415c:	ldr	x0, [sp, #48]
  414160:	ldr	w1, [sp, #20]
  414164:	str	w1, [x0, #24]
  414168:	ldr	x0, [sp, #32]
  41416c:	cmp	x0, #0x0
  414170:	b.eq	4141d4 <wcrtomb@plt+0xf4c4>  // b.none
  414174:	ldr	x0, [sp, #32]
  414178:	ldr	x1, [x0, #88]
  41417c:	ldr	x0, [sp, #48]
  414180:	str	x1, [x0, #8]
  414184:	ldr	x0, [sp, #32]
  414188:	ldr	x1, [x0, #96]
  41418c:	ldr	x0, [sp, #48]
  414190:	str	x1, [x0, #16]
  414194:	ldr	x0, [sp, #32]
  414198:	ldr	w1, [x0, #112]
  41419c:	ldr	x0, [sp, #48]
  4141a0:	str	w1, [x0, #28]
  4141a4:	ldr	x0, [sp, #32]
  4141a8:	ldr	w1, [x0, #116]
  4141ac:	ldr	x0, [sp, #48]
  4141b0:	str	w1, [x0, #32]
  4141b4:	ldr	x2, [sp, #48]
  4141b8:	ldr	x0, [sp, #32]
  4141bc:	ldp	x0, x1, [x0, #216]
  4141c0:	stp	x0, x1, [x2, #40]
  4141c4:	ldr	x2, [sp, #48]
  4141c8:	ldr	x0, [sp, #32]
  4141cc:	ldp	x0, x1, [x0, #232]
  4141d0:	stp	x0, x1, [x2, #56]
  4141d4:	ldr	x0, [sp, #48]
  4141d8:	ldr	x1, [sp, #56]
  4141dc:	str	x1, [x0, #152]
  4141e0:	ldr	x0, [sp, #40]
  4141e4:	bl	45b858 <argp_usage@@Base+0x1276c>
  4141e8:	mov	x1, x0
  4141ec:	ldr	x0, [sp, #48]
  4141f0:	str	x1, [x0, #160]
  4141f4:	ldr	x0, [sp, #48]
  4141f8:	ldr	w1, [sp, #28]
  4141fc:	str	w1, [x0, #72]
  414200:	ldr	x0, [sp, #48]
  414204:	ldr	w1, [sp, #24]
  414208:	str	w1, [x0, #76]
  41420c:	ldr	x0, [sp, #32]
  414210:	cmp	x0, #0x0
  414214:	cset	w0, eq  // eq = none
  414218:	and	w1, w0, #0xff
  41421c:	ldr	x0, [sp, #48]
  414220:	strb	w1, [x0, #80]
  414224:	ldr	x0, [sp, #48]
  414228:	ldr	w1, [sp, #16]
  41422c:	str	w1, [x0, #84]
  414230:	ldr	x0, [sp, #48]
  414234:	strb	wzr, [x0, #88]
  414238:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41423c:	add	x0, x0, #0x30
  414240:	ldr	w1, [x0]
  414244:	ldr	x0, [sp, #48]
  414248:	str	w1, [x0, #92]
  41424c:	ldr	x0, [sp, #48]
  414250:	str	xzr, [x0, #96]
  414254:	ldr	x0, [sp, #32]
  414258:	cmp	x0, #0x0
  41425c:	b.eq	41427c <wcrtomb@plt+0xf56c>  // b.none
  414260:	ldr	x0, [sp, #48]
  414264:	add	x2, x0, #0x60
  414268:	ldr	x0, [sp, #32]
  41426c:	ldr	x0, [x0, #48]
  414270:	mov	x1, x0
  414274:	mov	x0, x2
  414278:	bl	423d0c <wcrtomb@plt+0x1effc>
  41427c:	ldr	x0, [sp, #32]
  414280:	cmp	x0, #0x0
  414284:	b.eq	4142d8 <wcrtomb@plt+0xf5c8>  // b.none
  414288:	ldr	x0, [sp, #32]
  41428c:	ldr	x0, [x0, #56]
  414290:	cmp	x0, #0x0
  414294:	b.eq	4142d8 <wcrtomb@plt+0xf5c8>  // b.none
  414298:	ldr	x0, [sp, #32]
  41429c:	ldr	x2, [x0, #56]
  4142a0:	ldr	x0, [sp, #32]
  4142a4:	ldr	x0, [x0, #64]
  4142a8:	add	x0, x0, #0x1
  4142ac:	mov	x1, x0
  4142b0:	mov	x0, x2
  4142b4:	bl	45b82c <argp_usage@@Base+0x12740>
  4142b8:	mov	x1, x0
  4142bc:	ldr	x0, [sp, #48]
  4142c0:	str	x1, [x0, #104]
  4142c4:	ldr	x0, [sp, #32]
  4142c8:	ldr	x1, [x0, #64]
  4142cc:	ldr	x0, [sp, #48]
  4142d0:	str	x1, [x0, #112]
  4142d4:	b	4142e8 <wcrtomb@plt+0xf5d8>
  4142d8:	ldr	x0, [sp, #48]
  4142dc:	str	xzr, [x0, #104]
  4142e0:	ldr	x0, [sp, #48]
  4142e4:	str	xzr, [x0, #112]
  4142e8:	ldr	x0, [sp, #32]
  4142ec:	cmp	x0, #0x0
  4142f0:	b.eq	414344 <wcrtomb@plt+0xf634>  // b.none
  4142f4:	ldr	x0, [sp, #32]
  4142f8:	ldr	x0, [x0, #72]
  4142fc:	cmp	x0, #0x0
  414300:	b.eq	414344 <wcrtomb@plt+0xf634>  // b.none
  414304:	ldr	x0, [sp, #32]
  414308:	ldr	x2, [x0, #72]
  41430c:	ldr	x0, [sp, #32]
  414310:	ldr	x0, [x0, #80]
  414314:	add	x0, x0, #0x1
  414318:	mov	x1, x0
  41431c:	mov	x0, x2
  414320:	bl	45b82c <argp_usage@@Base+0x12740>
  414324:	mov	x1, x0
  414328:	ldr	x0, [sp, #48]
  41432c:	str	x1, [x0, #120]
  414330:	ldr	x0, [sp, #32]
  414334:	ldr	x1, [x0, #80]
  414338:	ldr	x0, [sp, #48]
  41433c:	str	x1, [x0, #128]
  414340:	b	414354 <wcrtomb@plt+0xf644>
  414344:	ldr	x0, [sp, #48]
  414348:	str	xzr, [x0, #120]
  41434c:	ldr	x0, [sp, #48]
  414350:	str	xzr, [x0, #128]
  414354:	ldr	x0, [sp, #32]
  414358:	cmp	x0, #0x0
  41435c:	b.eq	414380 <wcrtomb@plt+0xf670>  // b.none
  414360:	ldr	x0, [sp, #48]
  414364:	add	x1, x0, #0x90
  414368:	ldr	x0, [sp, #48]
  41436c:	add	x0, x0, #0x88
  414370:	mov	x2, x0
  414374:	ldr	x0, [sp, #32]
  414378:	bl	4187a8 <wcrtomb@plt+0x13a98>
  41437c:	b	414390 <wcrtomb@plt+0xf680>
  414380:	ldr	x0, [sp, #48]
  414384:	str	xzr, [x0, #144]
  414388:	ldr	x0, [sp, #48]
  41438c:	str	xzr, [x0, #136]
  414390:	ldr	x0, [sp, #48]
  414394:	ldr	x0, [x0, #160]
  414398:	ldr	x1, [sp, #40]
  41439c:	bl	4049d0 <strcpy@plt>
  4143a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4143a4:	add	x0, x0, #0x850
  4143a8:	ldr	x1, [sp, #48]
  4143ac:	str	x1, [x0]
  4143b0:	ldr	x0, [sp, #40]
  4143b4:	bl	424ce0 <wcrtomb@plt+0x1ffd0>
  4143b8:	and	w0, w0, #0xff
  4143bc:	cmp	w0, #0x0
  4143c0:	b.eq	4143cc <wcrtomb@plt+0xf6bc>  // b.none
  4143c4:	ldr	x0, [sp, #48]
  4143c8:	bl	414074 <wcrtomb@plt+0xf364>
  4143cc:	nop
  4143d0:	ldp	x29, x30, [sp], #64
  4143d4:	ret
  4143d8:	stp	x29, x30, [sp, #-192]!
  4143dc:	mov	x29, sp
  4143e0:	str	x19, [sp, #16]
  4143e4:	str	x0, [sp, #40]
  4143e8:	str	x1, [sp, #32]
  4143ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4143f0:	add	x0, x0, #0x850
  4143f4:	ldr	x0, [x0]
  4143f8:	str	x0, [sp, #184]
  4143fc:	b	41452c <wcrtomb@plt+0xf81c>
  414400:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  414404:	add	x0, x0, #0x8b0
  414408:	ldr	w4, [x0]
  41440c:	ldr	x0, [sp, #184]
  414410:	ldr	x1, [x0, #160]
  414414:	ldr	x0, [sp, #184]
  414418:	ldr	w2, [x0, #84]
  41441c:	add	x0, sp, #0x38
  414420:	mov	w3, w2
  414424:	mov	x2, x0
  414428:	mov	w0, w4
  41442c:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  414430:	cmp	w0, #0x0
  414434:	b.eq	414448 <wcrtomb@plt+0xf738>  // b.none
  414438:	ldr	x0, [sp, #184]
  41443c:	ldr	x0, [x0, #160]
  414440:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  414444:	b	414598 <wcrtomb@plt+0xf888>
  414448:	ldr	x1, [sp, #56]
  41444c:	ldr	x0, [sp, #32]
  414450:	ldr	x0, [x0]
  414454:	cmp	x1, x0
  414458:	b.ne	414520 <wcrtomb@plt+0xf810>  // b.any
  41445c:	ldr	x1, [sp, #64]
  414460:	ldr	x0, [sp, #32]
  414464:	ldr	x0, [x0, #8]
  414468:	cmp	x1, x0
  41446c:	b.ne	414520 <wcrtomb@plt+0xf810>  // b.any
  414470:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414474:	add	x0, x0, #0x90
  414478:	ldr	x1, [x0, #88]
  41447c:	ldr	x0, [sp, #184]
  414480:	str	x1, [x0, #8]
  414484:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414488:	add	x0, x0, #0x90
  41448c:	ldr	x1, [x0, #96]
  414490:	ldr	x0, [sp, #184]
  414494:	str	x1, [x0, #16]
  414498:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41449c:	add	x0, x0, #0x90
  4144a0:	ldr	w1, [x0, #104]
  4144a4:	ldr	x0, [sp, #184]
  4144a8:	str	w1, [x0, #24]
  4144ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4144b0:	add	x0, x0, #0x90
  4144b4:	ldr	w1, [x0, #112]
  4144b8:	ldr	x0, [sp, #184]
  4144bc:	str	w1, [x0, #28]
  4144c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4144c4:	add	x0, x0, #0x90
  4144c8:	ldr	w1, [x0, #116]
  4144cc:	ldr	x0, [sp, #184]
  4144d0:	str	w1, [x0, #32]
  4144d4:	ldr	x2, [sp, #184]
  4144d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4144dc:	add	x0, x0, #0x90
  4144e0:	ldp	x0, x1, [x0, #216]
  4144e4:	stp	x0, x1, [x2, #40]
  4144e8:	ldr	x2, [sp, #184]
  4144ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4144f0:	add	x0, x0, #0x90
  4144f4:	ldp	x0, x1, [x0, #232]
  4144f8:	stp	x0, x1, [x2, #56]
  4144fc:	ldr	w1, [sp, #72]
  414500:	ldr	x0, [sp, #184]
  414504:	str	w1, [x0, #72]
  414508:	ldr	x0, [sp, #184]
  41450c:	mov	w1, #0xffffffff            	// #-1
  414510:	str	w1, [x0, #76]
  414514:	ldr	x0, [sp, #184]
  414518:	strb	wzr, [x0, #80]
  41451c:	b	414598 <wcrtomb@plt+0xf888>
  414520:	ldr	x0, [sp, #184]
  414524:	ldr	x0, [x0]
  414528:	str	x0, [sp, #184]
  41452c:	ldr	x0, [sp, #184]
  414530:	cmp	x0, #0x0
  414534:	b.ne	414400 <wcrtomb@plt+0xf6f0>  // b.any
  414538:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41453c:	add	x0, x0, #0x420
  414540:	ldr	x0, [x0]
  414544:	cmp	x0, #0x0
  414548:	b.eq	41455c <wcrtomb@plt+0xf84c>  // b.none
  41454c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414550:	add	x0, x0, #0x420
  414554:	ldr	x0, [x0]
  414558:	blr	x0
  41455c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  414560:	add	x0, x0, #0x78
  414564:	bl	404c60 <gettext@plt>
  414568:	mov	x19, x0
  41456c:	ldr	x0, [sp, #40]
  414570:	bl	459cd8 <argp_usage@@Base+0x10bec>
  414574:	mov	x3, x0
  414578:	mov	x2, x19
  41457c:	mov	w1, #0x0                   	// #0
  414580:	mov	w0, #0x0                   	// #0
  414584:	bl	404100 <error@plt>
  414588:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41458c:	add	x0, x0, #0xdb0
  414590:	mov	w1, #0x2                   	// #2
  414594:	str	w1, [x0]
  414598:	ldr	x19, [sp, #16]
  41459c:	ldp	x29, x30, [sp], #192
  4145a0:	ret
  4145a4:	stp	x29, x30, [sp, #-32]!
  4145a8:	mov	x29, sp
  4145ac:	str	x0, [sp, #24]
  4145b0:	ldr	x0, [sp, #24]
  4145b4:	ldr	x0, [x0, #160]
  4145b8:	bl	404880 <free@plt>
  4145bc:	ldr	x0, [sp, #24]
  4145c0:	ldr	x2, [x0, #144]
  4145c4:	ldr	x0, [sp, #24]
  4145c8:	ldr	x0, [x0, #136]
  4145cc:	mov	x1, x0
  4145d0:	mov	x0, x2
  4145d4:	bl	418440 <wcrtomb@plt+0x13730>
  4145d8:	ldr	x0, [sp, #24]
  4145dc:	ldr	x0, [x0, #96]
  4145e0:	bl	404880 <free@plt>
  4145e4:	ldr	x0, [sp, #24]
  4145e8:	ldr	x0, [x0, #104]
  4145ec:	bl	404880 <free@plt>
  4145f0:	ldr	x0, [sp, #24]
  4145f4:	ldr	x0, [x0, #120]
  4145f8:	bl	404880 <free@plt>
  4145fc:	ldr	x0, [sp, #24]
  414600:	bl	404880 <free@plt>
  414604:	nop
  414608:	ldp	x29, x30, [sp], #32
  41460c:	ret
  414610:	stp	x29, x30, [sp, #-64]!
  414614:	mov	x29, sp
  414618:	str	x0, [sp, #24]
  41461c:	str	xzr, [sp, #48]
  414620:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  414624:	add	x0, x0, #0x850
  414628:	ldr	x0, [x0]
  41462c:	str	x0, [sp, #56]
  414630:	b	4146bc <wcrtomb@plt+0xf9ac>
  414634:	ldr	x0, [sp, #56]
  414638:	ldr	x0, [x0]
  41463c:	str	x0, [sp, #40]
  414640:	ldr	x0, [sp, #56]
  414644:	ldr	w1, [x0, #92]
  414648:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41464c:	add	x0, x0, #0x30
  414650:	ldr	w0, [x0]
  414654:	cmp	w1, w0
  414658:	b.ne	4146ac <wcrtomb@plt+0xf99c>  // b.any
  41465c:	ldr	x0, [sp, #56]
  414660:	ldr	x0, [x0, #160]
  414664:	ldr	x1, [sp, #24]
  414668:	bl	4047c0 <strcmp@plt>
  41466c:	cmp	w0, #0x0
  414670:	b.ne	4146ac <wcrtomb@plt+0xf99c>  // b.any
  414674:	ldr	x0, [sp, #56]
  414678:	bl	4145a4 <wcrtomb@plt+0xf894>
  41467c:	ldr	x0, [sp, #48]
  414680:	cmp	x0, #0x0
  414684:	b.eq	414698 <wcrtomb@plt+0xf988>  // b.none
  414688:	ldr	x0, [sp, #48]
  41468c:	ldr	x1, [sp, #40]
  414690:	str	x1, [x0]
  414694:	b	4146c8 <wcrtomb@plt+0xf9b8>
  414698:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41469c:	add	x0, x0, #0x850
  4146a0:	ldr	x1, [sp, #40]
  4146a4:	str	x1, [x0]
  4146a8:	b	4146c8 <wcrtomb@plt+0xf9b8>
  4146ac:	ldr	x0, [sp, #56]
  4146b0:	str	x0, [sp, #48]
  4146b4:	ldr	x0, [sp, #40]
  4146b8:	str	x0, [sp, #56]
  4146bc:	ldr	x0, [sp, #56]
  4146c0:	cmp	x0, #0x0
  4146c4:	b.ne	414634 <wcrtomb@plt+0xf924>  // b.any
  4146c8:	ldp	x29, x30, [sp], #64
  4146cc:	ret
  4146d0:	stp	x29, x30, [sp, #-48]!
  4146d4:	mov	x29, sp
  4146d8:	str	x0, [sp, #24]
  4146dc:	str	x1, [sp, #16]
  4146e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4146e4:	add	x0, x0, #0x850
  4146e8:	ldr	x0, [x0]
  4146ec:	str	x0, [sp, #40]
  4146f0:	b	41476c <wcrtomb@plt+0xfa5c>
  4146f4:	ldr	x0, [sp, #40]
  4146f8:	ldr	w1, [x0, #92]
  4146fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414700:	add	x0, x0, #0x30
  414704:	ldr	w0, [x0]
  414708:	cmp	w1, w0
  41470c:	b.ne	414760 <wcrtomb@plt+0xfa50>  // b.any
  414710:	ldr	x0, [sp, #40]
  414714:	ldr	x0, [x0, #160]
  414718:	ldr	x1, [sp, #24]
  41471c:	bl	4047c0 <strcmp@plt>
  414720:	cmp	w0, #0x0
  414724:	b.ne	414760 <wcrtomb@plt+0xfa50>  // b.any
  414728:	ldr	x0, [sp, #40]
  41472c:	ldr	x0, [x0, #160]
  414730:	bl	404880 <free@plt>
  414734:	ldr	x0, [sp, #16]
  414738:	bl	45b858 <argp_usage@@Base+0x1276c>
  41473c:	mov	x1, x0
  414740:	ldr	x0, [sp, #40]
  414744:	str	x1, [x0, #160]
  414748:	ldr	x0, [sp, #16]
  41474c:	bl	4040b0 <strlen@plt>
  414750:	mov	x1, x0
  414754:	ldr	x0, [sp, #40]
  414758:	str	x1, [x0, #152]
  41475c:	b	414778 <wcrtomb@plt+0xfa68>
  414760:	ldr	x0, [sp, #40]
  414764:	ldr	x0, [x0]
  414768:	str	x0, [sp, #40]
  41476c:	ldr	x0, [sp, #40]
  414770:	cmp	x0, #0x0
  414774:	b.ne	4146f4 <wcrtomb@plt+0xf9e4>  // b.any
  414778:	ldp	x29, x30, [sp], #48
  41477c:	ret
  414780:	stp	x29, x30, [sp, #-208]!
  414784:	mov	x29, sp
  414788:	str	x0, [sp, #24]
  41478c:	str	x1, [sp, #16]
  414790:	ldr	x0, [sp, #24]
  414794:	str	x0, [sp, #184]
  414798:	ldr	x0, [sp, #184]
  41479c:	str	x0, [sp, #200]
  4147a0:	b	4149d0 <wcrtomb@plt+0xfcc0>
  4147a4:	ldr	x0, [sp, #200]
  4147a8:	ldrb	w0, [x0]
  4147ac:	cmp	w0, #0x2f
  4147b0:	b.ne	4149b0 <wcrtomb@plt+0xfca0>  // b.any
  4147b4:	ldr	x1, [sp, #200]
  4147b8:	ldr	x0, [sp, #184]
  4147bc:	cmp	x1, x0
  4147c0:	b.eq	4149b8 <wcrtomb@plt+0xfca8>  // b.none
  4147c4:	ldr	x0, [sp, #200]
  4147c8:	sub	x0, x0, #0x1
  4147cc:	ldrb	w0, [x0]
  4147d0:	cmp	w0, #0x2f
  4147d4:	b.eq	4149b8 <wcrtomb@plt+0xfca8>  // b.none
  4147d8:	ldr	x0, [sp, #200]
  4147dc:	sub	x0, x0, #0x1
  4147e0:	ldrb	w0, [x0]
  4147e4:	cmp	w0, #0x2e
  4147e8:	b.ne	414850 <wcrtomb@plt+0xfb40>  // b.any
  4147ec:	ldr	x0, [sp, #184]
  4147f0:	add	x0, x0, #0x1
  4147f4:	ldr	x1, [sp, #200]
  4147f8:	cmp	x1, x0
  4147fc:	b.eq	4149c0 <wcrtomb@plt+0xfcb0>  // b.none
  414800:	ldr	x0, [sp, #200]
  414804:	sub	x0, x0, #0x2
  414808:	ldrb	w0, [x0]
  41480c:	cmp	w0, #0x2f
  414810:	b.eq	4149c0 <wcrtomb@plt+0xfcb0>  // b.none
  414814:	ldr	x0, [sp, #200]
  414818:	sub	x0, x0, #0x2
  41481c:	ldrb	w0, [x0]
  414820:	cmp	w0, #0x2e
  414824:	b.ne	414850 <wcrtomb@plt+0xfb40>  // b.any
  414828:	ldr	x0, [sp, #184]
  41482c:	add	x0, x0, #0x2
  414830:	ldr	x1, [sp, #200]
  414834:	cmp	x1, x0
  414838:	b.eq	4149c0 <wcrtomb@plt+0xfcb0>  // b.none
  41483c:	ldr	x0, [sp, #200]
  414840:	sub	x0, x0, #0x3
  414844:	ldrb	w0, [x0]
  414848:	cmp	w0, #0x2f
  41484c:	b.eq	4149c0 <wcrtomb@plt+0xfcb0>  // b.none
  414850:	ldr	x0, [sp, #200]
  414854:	strb	wzr, [x0]
  414858:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41485c:	add	x0, x0, #0x844
  414860:	ldr	w0, [x0]
  414864:	mvn	w0, w0
  414868:	and	w0, w0, #0x1ff
  41486c:	str	w0, [sp, #180]
  414870:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  414874:	add	x0, x0, #0x840
  414878:	ldrb	w0, [x0]
  41487c:	cmp	w0, #0x0
  414880:	b.eq	41488c <wcrtomb@plt+0xfb7c>  // b.none
  414884:	mov	w0, #0x0                   	// #0
  414888:	b	414890 <wcrtomb@plt+0xfb80>
  41488c:	mov	w0, #0xc0                  	// #192
  414890:	ldr	w1, [sp, #180]
  414894:	orr	w0, w0, w1
  414898:	str	w0, [sp, #176]
  41489c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4148a0:	add	x0, x0, #0x8b0
  4148a4:	ldr	w0, [x0]
  4148a8:	ldr	w2, [sp, #176]
  4148ac:	ldr	x1, [sp, #24]
  4148b0:	bl	404350 <mkdirat@plt>
  4148b4:	str	w0, [sp, #196]
  4148b8:	ldr	w0, [sp, #196]
  4148bc:	cmp	w0, #0x0
  4148c0:	b.ne	414924 <wcrtomb@plt+0xfc14>  // b.any
  4148c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4148c8:	add	x0, x0, #0x848
  4148cc:	ldr	w0, [x0]
  4148d0:	mvn	w1, w0
  4148d4:	ldr	w0, [sp, #176]
  4148d8:	and	w0, w1, w0
  4148dc:	mov	w5, #0x100                 	// #256
  4148e0:	ldr	w4, [sp, #180]
  4148e4:	mov	w3, #0x1ff                 	// #511
  4148e8:	mov	w2, w0
  4148ec:	mov	x1, #0x0                   	// #0
  4148f0:	ldr	x0, [sp, #24]
  4148f4:	bl	414110 <wcrtomb@plt+0xf400>
  4148f8:	ldr	x1, [sp, #200]
  4148fc:	ldr	x0, [sp, #24]
  414900:	sub	x0, x1, x0
  414904:	ldr	w2, [sp, #180]
  414908:	mov	w1, w0
  41490c:	ldr	x0, [sp, #24]
  414910:	bl	422fa4 <wcrtomb@plt+0x1e294>
  414914:	ldr	x0, [sp, #16]
  414918:	mov	w1, #0x1                   	// #1
  41491c:	strb	w1, [x0]
  414920:	b	414990 <wcrtomb@plt+0xfc80>
  414924:	bl	404bc0 <__errno_location@plt>
  414928:	ldr	w0, [x0]
  41492c:	cmp	w0, #0x11
  414930:	b.ne	41493c <wcrtomb@plt+0xfc2c>  // b.any
  414934:	str	wzr, [sp, #196]
  414938:	b	414990 <wcrtomb@plt+0xfc80>
  41493c:	bl	404bc0 <__errno_location@plt>
  414940:	ldr	w0, [x0]
  414944:	str	w0, [sp, #172]
  414948:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  41494c:	add	x0, x0, #0x8b0
  414950:	ldr	w0, [x0]
  414954:	add	x1, sp, #0x28
  414958:	mov	w3, #0x0                   	// #0
  41495c:	mov	x2, x1
  414960:	ldr	x1, [sp, #24]
  414964:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  414968:	str	w0, [sp, #196]
  41496c:	ldr	w0, [sp, #196]
  414970:	cmp	w0, #0x0
  414974:	b.eq	414990 <wcrtomb@plt+0xfc80>  // b.none
  414978:	bl	404bc0 <__errno_location@plt>
  41497c:	mov	x1, x0
  414980:	ldr	w0, [sp, #172]
  414984:	str	w0, [x1]
  414988:	ldr	x0, [sp, #24]
  41498c:	bl	43a5a0 <wcrtomb@plt+0x35890>
  414990:	ldr	x0, [sp, #200]
  414994:	mov	w1, #0x2f                  	// #47
  414998:	strb	w1, [x0]
  41499c:	ldr	w0, [sp, #196]
  4149a0:	cmp	w0, #0x0
  4149a4:	b.eq	4149c4 <wcrtomb@plt+0xfcb4>  // b.none
  4149a8:	ldr	w0, [sp, #196]
  4149ac:	b	4149e4 <wcrtomb@plt+0xfcd4>
  4149b0:	nop
  4149b4:	b	4149c4 <wcrtomb@plt+0xfcb4>
  4149b8:	nop
  4149bc:	b	4149c4 <wcrtomb@plt+0xfcb4>
  4149c0:	nop
  4149c4:	ldr	x0, [sp, #200]
  4149c8:	add	x0, x0, #0x1
  4149cc:	str	x0, [sp, #200]
  4149d0:	ldr	x0, [sp, #200]
  4149d4:	ldrb	w0, [x0]
  4149d8:	cmp	w0, #0x0
  4149dc:	b.ne	4147a4 <wcrtomb@plt+0xfa94>  // b.any
  4149e0:	mov	w0, #0x0                   	// #0
  4149e4:	ldp	x29, x30, [sp], #208
  4149e8:	ret
  4149ec:	stp	x29, x30, [sp, #-176]!
  4149f0:	mov	x29, sp
  4149f4:	str	x0, [sp, #40]
  4149f8:	str	x1, [sp, #32]
  4149fc:	str	x2, [sp, #24]
  414a00:	ldr	x0, [sp, #32]
  414a04:	cmp	x0, #0x0
  414a08:	b.ne	414a54 <wcrtomb@plt+0xfd44>  // b.any
  414a0c:	add	x0, sp, #0x30
  414a10:	mov	x1, x0
  414a14:	ldr	x0, [sp, #40]
  414a18:	bl	4255c4 <wcrtomb@plt+0x208b4>
  414a1c:	cmp	w0, #0x0
  414a20:	b.eq	414a4c <wcrtomb@plt+0xfd3c>  // b.none
  414a24:	bl	404bc0 <__errno_location@plt>
  414a28:	ldr	w0, [x0]
  414a2c:	cmp	w0, #0x2
  414a30:	b.eq	414a44 <wcrtomb@plt+0xfd34>  // b.none
  414a34:	ldr	x0, [sp, #40]
  414a38:	bl	43abfc <wcrtomb@plt+0x35eec>
  414a3c:	mov	w0, #0x1                   	// #1
  414a40:	b	414aa0 <wcrtomb@plt+0xfd90>
  414a44:	mov	w0, #0x0                   	// #0
  414a48:	b	414aa0 <wcrtomb@plt+0xfd90>
  414a4c:	add	x0, sp, #0x30
  414a50:	str	x0, [sp, #32]
  414a54:	ldr	x0, [sp, #32]
  414a58:	ldr	w0, [x0, #16]
  414a5c:	and	w0, w0, #0xf000
  414a60:	cmp	w0, #0x4, lsl #12
  414a64:	b.eq	414a94 <wcrtomb@plt+0xfd84>  // b.none
  414a68:	ldr	x0, [sp, #32]
  414a6c:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  414a70:	mov	x2, x0
  414a74:	mov	x3, x1
  414a78:	ldr	x0, [sp, #24]
  414a7c:	ldp	x0, x1, [x0, #232]
  414a80:	bl	434fa4 <wcrtomb@plt+0x30294>
  414a84:	cmp	w0, #0x0
  414a88:	b.gt	414a94 <wcrtomb@plt+0xfd84>
  414a8c:	mov	w0, #0x1                   	// #1
  414a90:	b	414a98 <wcrtomb@plt+0xfd88>
  414a94:	mov	w0, #0x0                   	// #0
  414a98:	and	w0, w0, #0x1
  414a9c:	and	w0, w0, #0xff
  414aa0:	ldp	x29, x30, [sp], #176
  414aa4:	ret
  414aa8:	stp	x29, x30, [sp, #-192]!
  414aac:	mov	x29, sp
  414ab0:	str	x0, [sp, #40]
  414ab4:	strb	w1, [sp, #39]
  414ab8:	str	x2, [sp, #24]
  414abc:	bl	404bc0 <__errno_location@plt>
  414ac0:	ldr	w0, [x0]
  414ac4:	str	w0, [sp, #180]
  414ac8:	str	xzr, [sp, #184]
  414acc:	ldr	x0, [sp, #24]
  414ad0:	ldrb	w0, [x0]
  414ad4:	cmp	w0, #0x0
  414ad8:	b.eq	414ae4 <wcrtomb@plt+0xfdd4>  // b.none
  414adc:	mov	w0, #0x0                   	// #0
  414ae0:	b	414d14 <wcrtomb@plt+0x10004>
  414ae4:	ldr	w0, [sp, #180]
  414ae8:	cmp	w0, #0x5f
  414aec:	b.eq	414b48 <wcrtomb@plt+0xfe38>  // b.none
  414af0:	ldr	w0, [sp, #180]
  414af4:	cmp	w0, #0x5f
  414af8:	b.gt	414ce4 <wcrtomb@plt+0xffd4>
  414afc:	ldr	w0, [sp, #180]
  414b00:	cmp	w0, #0x28
  414b04:	b.eq	414b48 <wcrtomb@plt+0xfe38>  // b.none
  414b08:	ldr	w0, [sp, #180]
  414b0c:	cmp	w0, #0x28
  414b10:	b.gt	414ce4 <wcrtomb@plt+0xffd4>
  414b14:	ldr	w0, [sp, #180]
  414b18:	cmp	w0, #0x1f
  414b1c:	b.eq	414b48 <wcrtomb@plt+0xfe38>  // b.none
  414b20:	ldr	w0, [sp, #180]
  414b24:	cmp	w0, #0x1f
  414b28:	b.gt	414ce4 <wcrtomb@plt+0xffd4>
  414b2c:	ldr	w0, [sp, #180]
  414b30:	cmp	w0, #0x2
  414b34:	b.eq	414cb8 <wcrtomb@plt+0xffa8>  // b.none
  414b38:	ldr	w0, [sp, #180]
  414b3c:	cmp	w0, #0x11
  414b40:	b.eq	414bb8 <wcrtomb@plt+0xfea8>  // b.none
  414b44:	b	414ce4 <wcrtomb@plt+0xffd4>
  414b48:	ldrb	w0, [sp, #39]
  414b4c:	eor	w0, w0, #0x1
  414b50:	and	w0, w0, #0xff
  414b54:	cmp	w0, #0x0
  414b58:	b.ne	414cec <wcrtomb@plt+0xffdc>  // b.any
  414b5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414b60:	add	x0, x0, #0x320
  414b64:	ldr	w0, [x0]
  414b68:	cmp	w0, #0x2
  414b6c:	b.ne	414cec <wcrtomb@plt+0xffdc>  // b.any
  414b70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414b74:	add	x0, x0, #0x270
  414b78:	ldrb	w0, [x0]
  414b7c:	cmp	w0, #0x0
  414b80:	b.ne	414cec <wcrtomb@plt+0xffdc>  // b.any
  414b84:	mov	w1, #0x2f                  	// #47
  414b88:	ldr	x0, [sp, #40]
  414b8c:	bl	404930 <strchr@plt>
  414b90:	cmp	x0, #0x0
  414b94:	b.eq	414bb8 <wcrtomb@plt+0xfea8>  // b.none
  414b98:	add	x0, sp, #0x30
  414b9c:	mov	x1, x0
  414ba0:	ldr	x0, [sp, #40]
  414ba4:	bl	4255c4 <wcrtomb@plt+0x208b4>
  414ba8:	cmp	w0, #0x0
  414bac:	b.ne	414cf4 <wcrtomb@plt+0xffe4>  // b.any
  414bb0:	add	x0, sp, #0x30
  414bb4:	str	x0, [sp, #184]
  414bb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414bbc:	add	x0, x0, #0x320
  414bc0:	ldr	w0, [x0]
  414bc4:	cmp	w0, #0x6
  414bc8:	b.eq	414c70 <wcrtomb@plt+0xff60>  // b.none
  414bcc:	cmp	w0, #0x6
  414bd0:	b.hi	414cb8 <wcrtomb@plt+0xffa8>  // b.pmore
  414bd4:	cmp	w0, #0x5
  414bd8:	b.eq	414c04 <wcrtomb@plt+0xfef4>  // b.none
  414bdc:	cmp	w0, #0x5
  414be0:	b.hi	414cb8 <wcrtomb@plt+0xffa8>  // b.pmore
  414be4:	cmp	w0, #0x4
  414be8:	b.eq	414c68 <wcrtomb@plt+0xff58>  // b.none
  414bec:	cmp	w0, #0x4
  414bf0:	b.hi	414cb8 <wcrtomb@plt+0xffa8>  // b.pmore
  414bf4:	cmp	w0, #0x2
  414bf8:	b.ls	414c90 <wcrtomb@plt+0xff80>  // b.plast
  414bfc:	cmp	w0, #0x3
  414c00:	b	414cb8 <wcrtomb@plt+0xffa8>
  414c04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  414c08:	add	x0, x0, #0x24c
  414c0c:	ldr	w0, [x0]
  414c10:	and	w0, w0, #0x100000
  414c14:	cmp	w0, #0x0
  414c18:	b.eq	414c60 <wcrtomb@plt+0xff50>  // b.none
  414c1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414c20:	add	x0, x0, #0x420
  414c24:	ldr	x0, [x0]
  414c28:	cmp	x0, #0x0
  414c2c:	b.eq	414c40 <wcrtomb@plt+0xff30>  // b.none
  414c30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414c34:	add	x0, x0, #0x420
  414c38:	ldr	x0, [x0]
  414c3c:	blr	x0
  414c40:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  414c44:	add	x0, x0, #0xb0
  414c48:	bl	404c60 <gettext@plt>
  414c4c:	ldr	x3, [sp, #40]
  414c50:	mov	x2, x0
  414c54:	mov	w1, #0x0                   	// #0
  414c58:	mov	w0, #0x0                   	// #0
  414c5c:	bl	404100 <error@plt>
  414c60:	mov	w0, #0x2                   	// #2
  414c64:	b	414d14 <wcrtomb@plt+0x10004>
  414c68:	mov	w0, #0x0                   	// #0
  414c6c:	b	414d14 <wcrtomb@plt+0x10004>
  414c70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414c74:	add	x2, x0, #0x90
  414c78:	ldr	x1, [sp, #184]
  414c7c:	ldr	x0, [sp, #40]
  414c80:	bl	4149ec <wcrtomb@plt+0xfcdc>
  414c84:	and	w0, w0, #0xff
  414c88:	cmp	w0, #0x0
  414c8c:	b.ne	414cac <wcrtomb@plt+0xff9c>  // b.any
  414c90:	mov	w1, #0x0                   	// #0
  414c94:	ldr	x0, [sp, #40]
  414c98:	bl	424ec0 <wcrtomb@plt+0x201b0>
  414c9c:	cmp	w0, #0x0
  414ca0:	b.le	414cb4 <wcrtomb@plt+0xffa4>
  414ca4:	mov	w0, #0x1                   	// #1
  414ca8:	b	414d14 <wcrtomb@plt+0x10004>
  414cac:	nop
  414cb0:	b	414cb8 <wcrtomb@plt+0xffa8>
  414cb4:	nop
  414cb8:	ldr	x1, [sp, #24]
  414cbc:	ldr	x0, [sp, #40]
  414cc0:	bl	414780 <wcrtomb@plt+0xfa70>
  414cc4:	cmp	w0, #0x0
  414cc8:	b.ne	414cfc <wcrtomb@plt+0xffec>  // b.any
  414ccc:	ldr	x0, [sp, #24]
  414cd0:	ldrb	w0, [x0]
  414cd4:	cmp	w0, #0x0
  414cd8:	b.eq	414cfc <wcrtomb@plt+0xffec>  // b.none
  414cdc:	mov	w0, #0x1                   	// #1
  414ce0:	b	414d14 <wcrtomb@plt+0x10004>
  414ce4:	nop
  414ce8:	b	414d00 <wcrtomb@plt+0xfff0>
  414cec:	nop
  414cf0:	b	414d00 <wcrtomb@plt+0xfff0>
  414cf4:	nop
  414cf8:	b	414d00 <wcrtomb@plt+0xfff0>
  414cfc:	nop
  414d00:	bl	404bc0 <__errno_location@plt>
  414d04:	mov	x1, x0
  414d08:	ldr	w0, [sp, #180]
  414d0c:	str	w0, [x1]
  414d10:	mov	w0, #0x0                   	// #0
  414d14:	ldp	x29, x30, [sp], #192
  414d18:	ret
  414d1c:	stp	x29, x30, [sp, #-64]!
  414d20:	mov	x29, sp
  414d24:	str	x0, [sp, #40]
  414d28:	str	x1, [sp, #32]
  414d2c:	str	w2, [sp, #28]
  414d30:	strb	w3, [sp, #27]
  414d34:	str	x4, [sp, #16]
  414d38:	strb	wzr, [sp, #59]
  414d3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414d40:	add	x0, x0, #0x2c0
  414d44:	ldr	w0, [x0]
  414d48:	cmp	w0, #0x0
  414d4c:	b.le	414e34 <wcrtomb@plt+0x10124>
  414d50:	ldr	x0, [sp, #32]
  414d54:	ldr	x0, [x0, #328]
  414d58:	cmp	x0, #0x0
  414d5c:	b.eq	414e34 <wcrtomb@plt+0x10124>  // b.none
  414d60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  414d64:	add	x0, x0, #0x90
  414d68:	ldr	w1, [x0, #104]
  414d6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  414d70:	add	x0, x0, #0x848
  414d74:	ldr	w0, [x0]
  414d78:	mvn	w0, w0
  414d7c:	and	w0, w1, w0
  414d80:	and	w0, w0, #0x1ff
  414d84:	str	w0, [sp, #60]
  414d88:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  414d8c:	add	x0, x0, #0x8b0
  414d90:	ldr	w4, [x0]
  414d94:	ldr	w1, [sp, #60]
  414d98:	ldr	w0, [sp, #28]
  414d9c:	eor	w0, w1, w0
  414da0:	mov	x3, #0x0                   	// #0
  414da4:	mov	w2, w0
  414da8:	ldr	x1, [sp, #40]
  414dac:	mov	w0, w4
  414db0:	bl	47eca0 <_obstack_memory_used@@Base+0x21b60>
  414db4:	cmp	w0, #0x0
  414db8:	b.ne	414de4 <wcrtomb@plt+0x100d4>  // b.any
  414dbc:	mov	w3, #0x0                   	// #0
  414dc0:	ldrb	w2, [sp, #27]
  414dc4:	ldr	x1, [sp, #40]
  414dc8:	ldr	x0, [sp, #32]
  414dcc:	bl	439a0c <wcrtomb@plt+0x34cfc>
  414dd0:	ldr	x0, [sp, #16]
  414dd4:	mov	w1, #0x1                   	// #1
  414dd8:	str	w1, [x0]
  414ddc:	mov	w0, #0x0                   	// #0
  414de0:	b	414e38 <wcrtomb@plt+0x10128>
  414de4:	add	x0, sp, #0x3b
  414de8:	mov	x2, x0
  414dec:	mov	w1, #0x0                   	// #0
  414df0:	ldr	x0, [sp, #40]
  414df4:	bl	414aa8 <wcrtomb@plt+0xfd98>
  414df8:	cmp	w0, #0x2
  414dfc:	b.eq	414e2c <wcrtomb@plt+0x1011c>  // b.none
  414e00:	cmp	w0, #0x2
  414e04:	b.gt	414d88 <wcrtomb@plt+0x10078>
  414e08:	cmp	w0, #0x0
  414e0c:	b.eq	414e18 <wcrtomb@plt+0x10108>  // b.none
  414e10:	cmp	w0, #0x1
  414e14:	b	414d88 <wcrtomb@plt+0x10078>
  414e18:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  414e1c:	ldr	x0, [sp, #40]
  414e20:	bl	43a618 <wcrtomb@plt+0x35908>
  414e24:	mov	w0, #0x1                   	// #1
  414e28:	b	414e38 <wcrtomb@plt+0x10128>
  414e2c:	mov	w0, #0x0                   	// #0
  414e30:	b	414e38 <wcrtomb@plt+0x10128>
  414e34:	mov	w0, #0x0                   	// #0
  414e38:	ldp	x29, x30, [sp], #64
  414e3c:	ret
  414e40:	sub	sp, sp, #0x280
  414e44:	stp	x29, x30, [sp]
  414e48:	mov	x29, sp
  414e4c:	str	x19, [sp, #16]
  414e50:	str	x0, [sp, #40]
  414e54:	strb	w1, [sp, #39]
  414e58:	ldr	x0, [sp, #40]
  414e5c:	bl	4040b0 <strlen@plt>
  414e60:	str	x0, [sp, #616]
  414e64:	strb	wzr, [sp, #639]
  414e68:	b	415168 <wcrtomb@plt+0x10458>
  414e6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  414e70:	add	x0, x0, #0x850
  414e74:	ldr	x0, [x0]
  414e78:	str	x0, [sp, #608]
  414e7c:	strb	wzr, [sp, #638]
  414e80:	ldr	x0, [sp, #608]
  414e84:	ldr	w0, [x0, #72]
  414e88:	str	w0, [sp, #632]
  414e8c:	ldr	x0, [sp, #608]
  414e90:	ldr	w0, [x0, #76]
  414e94:	str	w0, [sp, #628]
  414e98:	ldr	x0, [sp, #608]
  414e9c:	ldrb	w1, [x0, #88]
  414ea0:	ldrb	w0, [sp, #639]
  414ea4:	orr	w0, w1, w0
  414ea8:	and	w0, w0, #0xff
  414eac:	cmp	w0, #0x0
  414eb0:	cset	w0, ne  // ne = any
  414eb4:	strb	w0, [sp, #639]
  414eb8:	ldr	x0, [sp, #608]
  414ebc:	ldrb	w0, [x0, #88]
  414ec0:	ldrb	w1, [sp, #39]
  414ec4:	cmp	w1, w0
  414ec8:	b.cc	41517c <wcrtomb@plt+0x1046c>  // b.lo, b.ul, b.last
  414ecc:	ldr	x0, [sp, #608]
  414ed0:	ldr	x0, [x0, #152]
  414ed4:	ldr	x1, [sp, #616]
  414ed8:	cmp	x1, x0
  414edc:	b.ls	414f5c <wcrtomb@plt+0x1024c>  // b.plast
  414ee0:	ldr	x0, [sp, #608]
  414ee4:	ldr	x0, [x0, #152]
  414ee8:	ldr	x1, [sp, #40]
  414eec:	add	x0, x1, x0
  414ef0:	ldrb	w0, [x0]
  414ef4:	cmp	w0, #0x0
  414ef8:	b.eq	414f5c <wcrtomb@plt+0x1024c>  // b.none
  414efc:	ldr	x0, [sp, #608]
  414f00:	ldr	x0, [x0, #152]
  414f04:	ldr	x1, [sp, #40]
  414f08:	add	x0, x1, x0
  414f0c:	ldrb	w0, [x0]
  414f10:	cmp	w0, #0x2f
  414f14:	b.eq	414f38 <wcrtomb@plt+0x10228>  // b.none
  414f18:	ldr	x0, [sp, #608]
  414f1c:	ldr	x0, [x0, #152]
  414f20:	sub	x0, x0, #0x1
  414f24:	ldr	x1, [sp, #40]
  414f28:	add	x0, x1, x0
  414f2c:	ldrb	w0, [x0]
  414f30:	cmp	w0, #0x2f
  414f34:	b.ne	414f5c <wcrtomb@plt+0x1024c>  // b.any
  414f38:	ldr	x0, [sp, #608]
  414f3c:	ldr	x1, [x0, #160]
  414f40:	ldr	x0, [sp, #608]
  414f44:	ldr	x0, [x0, #152]
  414f48:	mov	x2, x0
  414f4c:	ldr	x0, [sp, #40]
  414f50:	bl	404790 <memcmp@plt>
  414f54:	cmp	w0, #0x0
  414f58:	b.eq	41517c <wcrtomb@plt+0x1046c>  // b.none
  414f5c:	ldr	x0, [sp, #608]
  414f60:	ldr	w0, [x0, #92]
  414f64:	bl	425b98 <wcrtomb@plt+0x20e88>
  414f68:	ldrb	w0, [sp, #639]
  414f6c:	cmp	w0, #0x0
  414f70:	b.eq	415068 <wcrtomb@plt+0x10358>  // b.none
  414f74:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  414f78:	add	x0, x0, #0x8b0
  414f7c:	ldr	w4, [x0]
  414f80:	ldr	x0, [sp, #608]
  414f84:	ldr	x1, [x0, #160]
  414f88:	ldr	x0, [sp, #608]
  414f8c:	ldr	w2, [x0, #84]
  414f90:	add	x0, sp, #0x38
  414f94:	mov	w3, w2
  414f98:	mov	x2, x0
  414f9c:	mov	w0, w4
  414fa0:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  414fa4:	cmp	w0, #0x0
  414fa8:	b.eq	414fc4 <wcrtomb@plt+0x102b4>  // b.none
  414fac:	ldr	x0, [sp, #608]
  414fb0:	ldr	x0, [x0, #160]
  414fb4:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  414fb8:	mov	w0, #0x1                   	// #1
  414fbc:	strb	w0, [sp, #638]
  414fc0:	b	415068 <wcrtomb@plt+0x10358>
  414fc4:	ldr	w0, [sp, #72]
  414fc8:	str	w0, [sp, #632]
  414fcc:	mov	w0, #0xffffffff            	// #-1
  414fd0:	str	w0, [sp, #628]
  414fd4:	ldr	x1, [sp, #56]
  414fd8:	ldr	x0, [sp, #608]
  414fdc:	ldr	x0, [x0, #8]
  414fe0:	cmp	x1, x0
  414fe4:	b.ne	414ffc <wcrtomb@plt+0x102ec>  // b.any
  414fe8:	ldr	x1, [sp, #64]
  414fec:	ldr	x0, [sp, #608]
  414ff0:	ldr	x0, [x0, #16]
  414ff4:	cmp	x1, x0
  414ff8:	b.eq	415068 <wcrtomb@plt+0x10358>  // b.none
  414ffc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415000:	add	x0, x0, #0x420
  415004:	ldr	x0, [x0]
  415008:	cmp	x0, #0x0
  41500c:	b.eq	415020 <wcrtomb@plt+0x10310>  // b.none
  415010:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415014:	add	x0, x0, #0x420
  415018:	ldr	x0, [x0]
  41501c:	blr	x0
  415020:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  415024:	add	x0, x0, #0xd0
  415028:	bl	404c60 <gettext@plt>
  41502c:	mov	x19, x0
  415030:	ldr	x0, [sp, #608]
  415034:	ldr	x0, [x0, #160]
  415038:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41503c:	mov	x3, x0
  415040:	mov	x2, x19
  415044:	mov	w1, #0x0                   	// #0
  415048:	mov	w0, #0x0                   	// #0
  41504c:	bl	404100 <error@plt>
  415050:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415054:	add	x0, x0, #0xdb0
  415058:	mov	w1, #0x2                   	// #2
  41505c:	str	w1, [x0]
  415060:	mov	w0, #0x1                   	// #1
  415064:	strb	w0, [sp, #638]
  415068:	ldrb	w0, [sp, #638]
  41506c:	eor	w0, w0, #0x1
  415070:	and	w0, w0, #0xff
  415074:	cmp	w0, #0x0
  415078:	b.eq	41514c <wcrtomb@plt+0x1043c>  // b.none
  41507c:	ldr	x0, [sp, #608]
  415080:	ldr	w0, [x0, #24]
  415084:	str	w0, [sp, #288]
  415088:	ldr	x0, [sp, #608]
  41508c:	ldr	w0, [x0, #28]
  415090:	str	w0, [sp, #296]
  415094:	ldr	x0, [sp, #608]
  415098:	ldr	w0, [x0, #32]
  41509c:	str	w0, [sp, #300]
  4150a0:	ldr	x0, [sp, #608]
  4150a4:	ldp	x0, x1, [x0, #40]
  4150a8:	stp	x0, x1, [sp, #400]
  4150ac:	ldr	x0, [sp, #608]
  4150b0:	ldp	x0, x1, [x0, #56]
  4150b4:	stp	x0, x1, [sp, #416]
  4150b8:	ldr	x0, [sp, #608]
  4150bc:	ldr	x0, [x0, #96]
  4150c0:	str	x0, [sp, #232]
  4150c4:	ldr	x0, [sp, #608]
  4150c8:	ldr	x0, [x0, #104]
  4150cc:	str	x0, [sp, #240]
  4150d0:	ldr	x0, [sp, #608]
  4150d4:	ldr	x0, [x0, #112]
  4150d8:	str	x0, [sp, #248]
  4150dc:	ldr	x0, [sp, #608]
  4150e0:	ldr	x0, [x0, #120]
  4150e4:	str	x0, [sp, #256]
  4150e8:	ldr	x0, [sp, #608]
  4150ec:	ldr	x0, [x0, #128]
  4150f0:	str	x0, [sp, #264]
  4150f4:	ldr	x0, [sp, #608]
  4150f8:	ldr	x0, [x0, #144]
  4150fc:	str	x0, [sp, #520]
  415100:	ldr	x0, [sp, #608]
  415104:	ldr	x0, [x0, #136]
  415108:	str	x0, [sp, #512]
  41510c:	ldr	x0, [sp, #608]
  415110:	ldr	x8, [x0, #160]
  415114:	ldr	x0, [sp, #608]
  415118:	ldrb	w2, [x0, #80]
  41511c:	ldr	x0, [sp, #608]
  415120:	ldr	w1, [x0, #84]
  415124:	add	x0, sp, #0xb8
  415128:	mov	w7, w1
  41512c:	mov	w6, w2
  415130:	mov	w5, #0x35                  	// #53
  415134:	ldr	w4, [sp, #628]
  415138:	ldr	w3, [sp, #632]
  41513c:	mov	w2, #0xffffffff            	// #-1
  415140:	mov	x1, x0
  415144:	mov	x0, x8
  415148:	bl	413d00 <wcrtomb@plt+0xeff0>
  41514c:	ldr	x0, [sp, #608]
  415150:	ldr	x1, [x0]
  415154:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415158:	add	x0, x0, #0x850
  41515c:	str	x1, [x0]
  415160:	ldr	x0, [sp, #608]
  415164:	bl	4145a4 <wcrtomb@plt+0xf894>
  415168:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41516c:	add	x0, x0, #0x850
  415170:	ldr	x0, [x0]
  415174:	cmp	x0, #0x0
  415178:	b.ne	414e6c <wcrtomb@plt+0x1015c>  // b.any
  41517c:	nop
  415180:	ldr	x19, [sp, #16]
  415184:	ldp	x29, x30, [sp]
  415188:	add	sp, sp, #0x280
  41518c:	ret
  415190:	stp	x29, x30, [sp, #-176]!
  415194:	mov	x29, sp
  415198:	str	x0, [sp, #24]
  41519c:	bl	404bc0 <__errno_location@plt>
  4151a0:	ldr	w0, [x0]
  4151a4:	str	w0, [sp, #172]
  4151a8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4151ac:	add	x0, x0, #0x8b0
  4151b0:	ldr	w0, [x0]
  4151b4:	add	x1, sp, #0x28
  4151b8:	mov	w3, #0x100                 	// #256
  4151bc:	mov	x2, x1
  4151c0:	ldr	x1, [sp, #24]
  4151c4:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  4151c8:	cmp	w0, #0x0
  4151cc:	b.ne	415220 <wcrtomb@plt+0x10510>  // b.any
  4151d0:	ldr	w0, [sp, #56]
  4151d4:	and	w0, w0, #0xf000
  4151d8:	cmp	w0, #0xa, lsl #12
  4151dc:	b.ne	415220 <wcrtomb@plt+0x10510>  // b.any
  4151e0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4151e4:	add	x0, x0, #0x8b0
  4151e8:	ldr	w0, [x0]
  4151ec:	add	x1, sp, #0x28
  4151f0:	mov	w3, #0x0                   	// #0
  4151f4:	mov	x2, x1
  4151f8:	ldr	x1, [sp, #24]
  4151fc:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  415200:	cmp	w0, #0x0
  415204:	b.ne	415220 <wcrtomb@plt+0x10510>  // b.any
  415208:	ldr	w0, [sp, #56]
  41520c:	and	w0, w0, #0xf000
  415210:	cmp	w0, #0x4, lsl #12
  415214:	b.ne	415220 <wcrtomb@plt+0x10510>  // b.any
  415218:	mov	w0, #0x1                   	// #1
  41521c:	b	415224 <wcrtomb@plt+0x10514>
  415220:	mov	w0, #0x0                   	// #0
  415224:	str	w0, [sp, #168]
  415228:	bl	404bc0 <__errno_location@plt>
  41522c:	mov	x1, x0
  415230:	ldr	w0, [sp, #172]
  415234:	str	w0, [x1]
  415238:	ldr	w0, [sp, #168]
  41523c:	cmp	w0, #0x0
  415240:	cset	w0, ne  // ne = any
  415244:	and	w0, w0, #0xff
  415248:	ldp	x29, x30, [sp], #176
  41524c:	ret
  415250:	stp	x29, x30, [sp, #-192]!
  415254:	mov	x29, sp
  415258:	str	x0, [sp, #24]
  41525c:	str	w1, [sp, #20]
  415260:	str	wzr, [sp, #188]
  415264:	str	wzr, [sp, #184]
  415268:	str	wzr, [sp, #180]
  41526c:	strb	wzr, [sp, #171]
  415270:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415274:	add	x0, x0, #0x85
  415278:	ldrb	w0, [x0]
  41527c:	cmp	w0, #0x0
  415280:	b.eq	4152e8 <wcrtomb@plt+0x105d8>  // b.none
  415284:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415288:	add	x0, x0, #0x368
  41528c:	ldr	x0, [x0]
  415290:	cmp	x0, #0x0
  415294:	b.ne	4152e8 <wcrtomb@plt+0x105d8>  // b.any
  415298:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  41529c:	add	x0, x0, #0x8b0
  4152a0:	ldr	w4, [x0]
  4152a4:	add	x0, sp, #0x28
  4152a8:	mov	w3, #0x0                   	// #0
  4152ac:	mov	x2, x0
  4152b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4152b4:	add	x1, x0, #0x110
  4152b8:	mov	w0, w4
  4152bc:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  4152c0:	cmp	w0, #0x0
  4152c4:	b.eq	4152d8 <wcrtomb@plt+0x105c8>  // b.none
  4152c8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4152cc:	add	x0, x0, #0x110
  4152d0:	bl	4260e0 <wcrtomb@plt+0x213d0>
  4152d4:	b	4152e8 <wcrtomb@plt+0x105d8>
  4152d8:	ldr	x1, [sp, #40]
  4152dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4152e0:	add	x0, x0, #0x368
  4152e4:	str	x1, [x0]
  4152e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4152ec:	add	x0, x0, #0x51
  4152f0:	ldrb	w0, [x0]
  4152f4:	cmp	w0, #0x0
  4152f8:	b.eq	415308 <wcrtomb@plt+0x105f8>  // b.none
  4152fc:	ldr	x0, [sp, #24]
  415300:	bl	41fd4c <wcrtomb@plt+0x1b03c>
  415304:	b	415318 <wcrtomb@plt+0x10608>
  415308:	ldr	w0, [sp, #20]
  41530c:	cmp	w0, #0x44
  415310:	b.ne	415318 <wcrtomb@plt+0x10608>  // b.any
  415314:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  415318:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41531c:	add	x0, x0, #0x90
  415320:	ldr	w1, [x0, #104]
  415324:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415328:	add	x0, x0, #0x404
  41532c:	ldr	w0, [x0]
  415330:	cmp	w0, #0x0
  415334:	b.gt	41534c <wcrtomb@plt+0x1063c>
  415338:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41533c:	add	x0, x0, #0x294
  415340:	ldr	w0, [x0]
  415344:	cmp	w0, #0x0
  415348:	b.le	415354 <wcrtomb@plt+0x10644>
  41534c:	mov	w0, #0x1c0                 	// #448
  415350:	b	415358 <wcrtomb@plt+0x10648>
  415354:	mov	w0, #0x1ff                 	// #511
  415358:	and	w1, w0, w1
  41535c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415360:	add	x0, x0, #0x840
  415364:	ldrb	w0, [x0]
  415368:	cmp	w0, #0x0
  41536c:	b.eq	415378 <wcrtomb@plt+0x10668>  // b.none
  415370:	mov	w0, #0x0                   	// #0
  415374:	b	41537c <wcrtomb@plt+0x1066c>
  415378:	mov	w0, #0xc0                  	// #192
  41537c:	orr	w0, w0, w1
  415380:	str	w0, [sp, #176]
  415384:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  415388:	add	x0, x0, #0x8b0
  41538c:	ldr	w0, [x0]
  415390:	ldr	w2, [sp, #176]
  415394:	ldr	x1, [sp, #24]
  415398:	bl	404350 <mkdirat@plt>
  41539c:	str	w0, [sp, #172]
  4153a0:	ldr	w0, [sp, #172]
  4153a4:	cmp	w0, #0x0
  4153a8:	b.ne	4153dc <wcrtomb@plt+0x106cc>  // b.any
  4153ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4153b0:	add	x0, x0, #0x848
  4153b4:	ldr	w0, [x0]
  4153b8:	mvn	w0, w0
  4153bc:	ldr	w1, [sp, #176]
  4153c0:	and	w0, w1, w0
  4153c4:	str	w0, [sp, #188]
  4153c8:	mov	w0, #0x1ff                 	// #511
  4153cc:	str	w0, [sp, #184]
  4153d0:	mov	w0, #0x100                 	// #256
  4153d4:	str	w0, [sp, #180]
  4153d8:	b	415544 <wcrtomb@plt+0x10834>
  4153dc:	bl	404bc0 <__errno_location@plt>
  4153e0:	ldr	w0, [x0]
  4153e4:	cmp	w0, #0x11
  4153e8:	b.ne	4154d0 <wcrtomb@plt+0x107c0>  // b.any
  4153ec:	ldrb	w0, [sp, #171]
  4153f0:	cmp	w0, #0x0
  4153f4:	b.ne	415434 <wcrtomb@plt+0x10724>  // b.any
  4153f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4153fc:	add	x0, x0, #0x2a0
  415400:	ldrb	w0, [x0]
  415404:	cmp	w0, #0x0
  415408:	b.ne	415434 <wcrtomb@plt+0x10724>  // b.any
  41540c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415410:	add	x0, x0, #0x320
  415414:	ldr	w0, [x0]
  415418:	cmp	w0, #0x0
  41541c:	b.eq	415434 <wcrtomb@plt+0x10724>  // b.none
  415420:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415424:	add	x0, x0, #0x320
  415428:	ldr	w0, [x0]
  41542c:	cmp	w0, #0x2
  415430:	b.ne	4154d0 <wcrtomb@plt+0x107c0>  // b.any
  415434:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415438:	add	x0, x0, #0x2a0
  41543c:	ldrb	w0, [x0]
  415440:	cmp	w0, #0x0
  415444:	b.eq	415464 <wcrtomb@plt+0x10754>  // b.none
  415448:	ldr	x0, [sp, #24]
  41544c:	bl	415190 <wcrtomb@plt+0x10480>
  415450:	and	w0, w0, #0xff
  415454:	cmp	w0, #0x0
  415458:	b.eq	415464 <wcrtomb@plt+0x10754>  // b.none
  41545c:	mov	w0, #0x0                   	// #0
  415460:	b	4155a8 <wcrtomb@plt+0x10898>
  415464:	add	x0, sp, #0x28
  415468:	mov	x1, x0
  41546c:	ldr	x0, [sp, #24]
  415470:	bl	4255c4 <wcrtomb@plt+0x208b4>
  415474:	cmp	w0, #0x0
  415478:	b.ne	4154c0 <wcrtomb@plt+0x107b0>  // b.any
  41547c:	ldr	w0, [sp, #56]
  415480:	str	w0, [sp, #188]
  415484:	mov	w0, #0xffffffff            	// #-1
  415488:	str	w0, [sp, #184]
  41548c:	ldr	w0, [sp, #188]
  415490:	and	w0, w0, #0xf000
  415494:	cmp	w0, #0x4, lsl #12
  415498:	b.ne	4154c0 <wcrtomb@plt+0x107b0>  // b.any
  41549c:	ldrb	w0, [sp, #171]
  4154a0:	cmp	w0, #0x0
  4154a4:	b.eq	415538 <wcrtomb@plt+0x10828>  // b.none
  4154a8:	add	x0, sp, #0x28
  4154ac:	mov	x1, x0
  4154b0:	ldr	x0, [sp, #24]
  4154b4:	bl	4143d8 <wcrtomb@plt+0xf6c8>
  4154b8:	mov	w0, #0x0                   	// #0
  4154bc:	b	4155a8 <wcrtomb@plt+0x10898>
  4154c0:	bl	404bc0 <__errno_location@plt>
  4154c4:	mov	x1, x0
  4154c8:	mov	w0, #0x11                  	// #17
  4154cc:	str	w0, [x1]
  4154d0:	add	x0, sp, #0xab
  4154d4:	mov	x2, x0
  4154d8:	mov	w1, #0x0                   	// #0
  4154dc:	ldr	x0, [sp, #24]
  4154e0:	bl	414aa8 <wcrtomb@plt+0xfd98>
  4154e4:	cmp	w0, #0x2
  4154e8:	b.eq	415528 <wcrtomb@plt+0x10818>  // b.none
  4154ec:	cmp	w0, #0x2
  4154f0:	b.gt	415540 <wcrtomb@plt+0x10830>
  4154f4:	cmp	w0, #0x0
  4154f8:	b.eq	415508 <wcrtomb@plt+0x107f8>  // b.none
  4154fc:	cmp	w0, #0x1
  415500:	b.ne	415540 <wcrtomb@plt+0x10830>  // b.any
  415504:	b	415384 <wcrtomb@plt+0x10674>
  415508:	bl	404bc0 <__errno_location@plt>
  41550c:	ldr	w0, [x0]
  415510:	cmp	w0, #0x11
  415514:	b.eq	415530 <wcrtomb@plt+0x10820>  // b.none
  415518:	ldr	x0, [sp, #24]
  41551c:	bl	43a5a0 <wcrtomb@plt+0x35890>
  415520:	mov	w0, #0x1                   	// #1
  415524:	b	4155a8 <wcrtomb@plt+0x10898>
  415528:	nop
  41552c:	b	415540 <wcrtomb@plt+0x10830>
  415530:	nop
  415534:	b	415540 <wcrtomb@plt+0x10830>
  415538:	nop
  41553c:	b	415544 <wcrtomb@plt+0x10834>
  415540:	nop
  415544:	ldr	w0, [sp, #172]
  415548:	cmp	w0, #0x0
  41554c:	b.eq	415578 <wcrtomb@plt+0x10868>  // b.none
  415550:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415554:	add	x0, x0, #0x320
  415558:	ldr	w0, [x0]
  41555c:	cmp	w0, #0x0
  415560:	b.eq	415578 <wcrtomb@plt+0x10868>  // b.none
  415564:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415568:	add	x0, x0, #0x320
  41556c:	ldr	w0, [x0]
  415570:	cmp	w0, #0x2
  415574:	b.ne	4155a4 <wcrtomb@plt+0x10894>  // b.any
  415578:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41557c:	add	x0, x0, #0x90
  415580:	ldr	w0, [x0, #104]
  415584:	ldr	w5, [sp, #180]
  415588:	mov	w4, w0
  41558c:	ldr	w3, [sp, #184]
  415590:	ldr	w2, [sp, #188]
  415594:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415598:	add	x1, x0, #0x90
  41559c:	ldr	x0, [sp, #24]
  4155a0:	bl	414110 <wcrtomb@plt+0xf400>
  4155a4:	ldr	w0, [sp, #172]
  4155a8:	ldp	x29, x30, [sp], #192
  4155ac:	ret
  4155b0:	stp	x29, x30, [sp, #-208]!
  4155b4:	mov	x29, sp
  4155b8:	str	x0, [sp, #56]
  4155bc:	str	w1, [sp, #52]
  4155c0:	str	w2, [sp, #48]
  4155c4:	str	w3, [sp, #44]
  4155c8:	str	x4, [sp, #32]
  4155cc:	str	x5, [sp, #24]
  4155d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4155d4:	add	x0, x0, #0x320
  4155d8:	ldr	w0, [x0]
  4155dc:	cmp	w0, #0x2
  4155e0:	cset	w0, eq  // eq = none
  4155e4:	strb	w0, [sp, #203]
  4155e8:	ldrb	w0, [sp, #203]
  4155ec:	cmp	w0, #0x0
  4155f0:	b.eq	415620 <wcrtomb@plt+0x10910>  // b.none
  4155f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4155f8:	add	x0, x0, #0x270
  4155fc:	ldrb	w0, [x0]
  415600:	cmp	w0, #0x0
  415604:	b.eq	415614 <wcrtomb@plt+0x10904>  // b.none
  415608:	mov	w0, #0xb41                 	// #2881
  41560c:	movk	w0, #0x8, lsl #16
  415610:	b	415628 <wcrtomb@plt+0x10918>
  415614:	mov	w0, #0x8b41                	// #35649
  415618:	movk	w0, #0x8, lsl #16
  41561c:	b	415628 <wcrtomb@plt+0x10918>
  415620:	mov	w0, #0x9c1                 	// #2497
  415624:	movk	w0, #0x8, lsl #16
  415628:	str	w0, [sp, #204]
  41562c:	ldr	w0, [sp, #44]
  415630:	cmp	w0, #0x0
  415634:	b.eq	415644 <wcrtomb@plt+0x10934>  // b.none
  415638:	ldr	w0, [sp, #204]
  41563c:	and	w0, w0, #0xffffff7f
  415640:	str	w0, [sp, #204]
  415644:	ldr	w0, [sp, #52]
  415648:	cmp	w0, #0x37
  41564c:	b.ne	4156cc <wcrtomb@plt+0x109bc>  // b.any
  415650:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415654:	add	x0, x0, #0x860
  415658:	ldr	w0, [x0]
  41565c:	cmp	w0, #0x0
  415660:	b.ne	4156cc <wcrtomb@plt+0x109bc>  // b.any
  415664:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415668:	add	x0, x0, #0x860
  41566c:	mov	w1, #0x1                   	// #1
  415670:	str	w1, [x0]
  415674:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415678:	add	x0, x0, #0x24c
  41567c:	ldr	w0, [x0]
  415680:	and	w0, w0, #0x8
  415684:	cmp	w0, #0x0
  415688:	b.eq	4156cc <wcrtomb@plt+0x109bc>  // b.none
  41568c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415690:	add	x0, x0, #0x420
  415694:	ldr	x0, [x0]
  415698:	cmp	x0, #0x0
  41569c:	b.eq	4156b0 <wcrtomb@plt+0x109a0>  // b.none
  4156a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4156a4:	add	x0, x0, #0x420
  4156a8:	ldr	x0, [x0]
  4156ac:	blr	x0
  4156b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4156b4:	add	x0, x0, #0x118
  4156b8:	bl	404c60 <gettext@plt>
  4156bc:	mov	x2, x0
  4156c0:	mov	w1, #0x0                   	// #0
  4156c4:	mov	w0, #0x0                   	// #0
  4156c8:	bl	404100 <error@plt>
  4156cc:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4156d0:	add	x0, x0, #0x8b0
  4156d4:	ldr	w0, [x0]
  4156d8:	ldr	w3, [sp, #48]
  4156dc:	ldr	w2, [sp, #204]
  4156e0:	ldr	x1, [sp, #56]
  4156e4:	bl	404b90 <openat@plt>
  4156e8:	str	w0, [sp, #196]
  4156ec:	ldr	w0, [sp, #196]
  4156f0:	cmp	w0, #0x0
  4156f4:	b.lt	4157c0 <wcrtomb@plt+0x10ab0>  // b.tstop
  4156f8:	ldrb	w0, [sp, #203]
  4156fc:	cmp	w0, #0x0
  415700:	b.eq	415794 <wcrtomb@plt+0x10a84>  // b.none
  415704:	add	x0, sp, #0x40
  415708:	mov	x1, x0
  41570c:	ldr	w0, [sp, #196]
  415710:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  415714:	cmp	w0, #0x0
  415718:	b.eq	415748 <wcrtomb@plt+0x10a38>  // b.none
  41571c:	bl	404bc0 <__errno_location@plt>
  415720:	ldr	w0, [x0]
  415724:	str	w0, [sp, #192]
  415728:	ldr	w0, [sp, #196]
  41572c:	bl	404660 <close@plt>
  415730:	bl	404bc0 <__errno_location@plt>
  415734:	mov	x1, x0
  415738:	ldr	w0, [sp, #192]
  41573c:	str	w0, [x1]
  415740:	mov	w0, #0xffffffff            	// #-1
  415744:	b	4157c4 <wcrtomb@plt+0x10ab4>
  415748:	ldr	w0, [sp, #80]
  41574c:	and	w0, w0, #0xf000
  415750:	cmp	w0, #0x8, lsl #12
  415754:	b.eq	415778 <wcrtomb@plt+0x10a68>  // b.none
  415758:	ldr	w0, [sp, #196]
  41575c:	bl	404660 <close@plt>
  415760:	bl	404bc0 <__errno_location@plt>
  415764:	mov	x1, x0
  415768:	mov	w0, #0x11                  	// #17
  41576c:	str	w0, [x1]
  415770:	mov	w0, #0xffffffff            	// #-1
  415774:	b	4157c4 <wcrtomb@plt+0x10ab4>
  415778:	ldr	w1, [sp, #80]
  41577c:	ldr	x0, [sp, #32]
  415780:	str	w1, [x0]
  415784:	ldr	x0, [sp, #24]
  415788:	mov	w1, #0xffffffff            	// #-1
  41578c:	str	w1, [x0]
  415790:	b	4157c0 <wcrtomb@plt+0x10ab0>
  415794:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415798:	add	x0, x0, #0x848
  41579c:	ldr	w0, [x0]
  4157a0:	mvn	w1, w0
  4157a4:	ldr	w0, [sp, #48]
  4157a8:	and	w1, w1, w0
  4157ac:	ldr	x0, [sp, #32]
  4157b0:	str	w1, [x0]
  4157b4:	ldr	x0, [sp, #24]
  4157b8:	mov	w1, #0x1ff                 	// #511
  4157bc:	str	w1, [x0]
  4157c0:	ldr	w0, [sp, #196]
  4157c4:	ldp	x29, x30, [sp], #208
  4157c8:	ret
  4157cc:	stp	x29, x30, [sp, #-112]!
  4157d0:	mov	x29, sp
  4157d4:	str	x0, [sp, #24]
  4157d8:	str	w1, [sp, #20]
  4157dc:	strb	wzr, [sp, #47]
  4157e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4157e4:	add	x0, x0, #0x90
  4157e8:	ldr	w1, [x0, #104]
  4157ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4157f0:	add	x0, x0, #0x404
  4157f4:	ldr	w0, [x0]
  4157f8:	cmp	w0, #0x0
  4157fc:	b.le	415808 <wcrtomb@plt+0x10af8>
  415800:	mov	w0, #0xffffffc0            	// #-64
  415804:	b	41580c <wcrtomb@plt+0x10afc>
  415808:	mov	w0, #0xffffffff            	// #-1
  41580c:	and	w0, w0, w1
  415810:	and	w0, w0, #0x1ff
  415814:	str	w0, [sp, #92]
  415818:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41581c:	add	x0, x0, #0x404
  415820:	ldr	w0, [x0]
  415824:	cmp	w0, #0x0
  415828:	b.le	415838 <wcrtomb@plt+0x10b28>
  41582c:	ldr	w0, [sp, #92]
  415830:	and	w0, w0, #0x3f
  415834:	b	41583c <wcrtomb@plt+0x10b2c>
  415838:	mov	w0, #0x0                   	// #0
  41583c:	str	w0, [sp, #88]
  415840:	str	wzr, [sp, #40]
  415844:	str	wzr, [sp, #36]
  415848:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41584c:	add	x0, x0, #0x2a1
  415850:	ldrb	w0, [x0]
  415854:	cmp	w0, #0x0
  415858:	b.eq	415868 <wcrtomb@plt+0x10b58>  // b.none
  41585c:	mov	w0, #0x1                   	// #1
  415860:	str	w0, [sp, #108]
  415864:	b	41596c <wcrtomb@plt+0x10c5c>
  415868:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41586c:	add	x0, x0, #0x298
  415870:	ldr	x0, [x0]
  415874:	cmp	x0, #0x0
  415878:	b.eq	4158ac <wcrtomb@plt+0x10b9c>  // b.none
  41587c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415880:	add	x2, x0, #0x90
  415884:	mov	w1, #0x66                  	// #102
  415888:	ldr	x0, [sp, #24]
  41588c:	bl	42f2c0 <wcrtomb@plt+0x2a5b0>
  415890:	str	w0, [sp, #108]
  415894:	ldr	w0, [sp, #108]
  415898:	cmp	w0, #0x0
  41589c:	b.ge	41596c <wcrtomb@plt+0x10c5c>  // b.tcont
  4158a0:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  4158a4:	mov	w0, #0x0                   	// #0
  4158a8:	b	415bb8 <wcrtomb@plt+0x10ea8>
  4158ac:	str	wzr, [sp, #32]
  4158b0:	ldr	w0, [sp, #20]
  4158b4:	and	w1, w0, #0xff
  4158b8:	add	x0, sp, #0x20
  4158bc:	mov	x4, x0
  4158c0:	mov	w3, w1
  4158c4:	ldr	w2, [sp, #88]
  4158c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4158cc:	add	x1, x0, #0x90
  4158d0:	ldr	x0, [sp, #24]
  4158d4:	bl	414d1c <wcrtomb@plt+0x1000c>
  4158d8:	cmp	w0, #0x0
  4158dc:	b.eq	415934 <wcrtomb@plt+0x10c24>  // b.none
  4158e0:	mov	w0, #0x1                   	// #1
  4158e4:	b	415bb8 <wcrtomb@plt+0x10ea8>
  4158e8:	add	x0, sp, #0x2f
  4158ec:	mov	x2, x0
  4158f0:	mov	w1, #0x1                   	// #1
  4158f4:	ldr	x0, [sp, #24]
  4158f8:	bl	414aa8 <wcrtomb@plt+0xfd98>
  4158fc:	str	w0, [sp, #84]
  415900:	ldr	w0, [sp, #84]
  415904:	cmp	w0, #0x1
  415908:	b.eq	415934 <wcrtomb@plt+0x10c24>  // b.none
  41590c:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  415910:	ldr	w0, [sp, #84]
  415914:	cmp	w0, #0x2
  415918:	b.ne	415924 <wcrtomb@plt+0x10c14>  // b.any
  41591c:	mov	w0, #0x0                   	// #0
  415920:	b	415bb8 <wcrtomb@plt+0x10ea8>
  415924:	ldr	x0, [sp, #24]
  415928:	bl	43a618 <wcrtomb@plt+0x35908>
  41592c:	mov	w0, #0x1                   	// #1
  415930:	b	415bb8 <wcrtomb@plt+0x10ea8>
  415934:	ldr	w0, [sp, #32]
  415938:	add	x2, sp, #0x24
  41593c:	add	x1, sp, #0x28
  415940:	mov	x5, x2
  415944:	mov	x4, x1
  415948:	mov	w3, w0
  41594c:	ldr	w2, [sp, #92]
  415950:	ldr	w1, [sp, #20]
  415954:	ldr	x0, [sp, #24]
  415958:	bl	4155b0 <wcrtomb@plt+0x108a0>
  41595c:	str	w0, [sp, #108]
  415960:	ldr	w0, [sp, #108]
  415964:	cmp	w0, #0x0
  415968:	b.lt	4158e8 <wcrtomb@plt+0x10bd8>  // b.tstop
  41596c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415970:	add	x0, x0, #0x90
  415974:	bl	405180 <wcrtomb@plt+0x470>
  415978:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41597c:	add	x0, x0, #0x90
  415980:	ldrb	w0, [x0, #272]
  415984:	cmp	w0, #0x0
  415988:	b.eq	4159a8 <wcrtomb@plt+0x10c98>  // b.none
  41598c:	add	x0, sp, #0x30
  415990:	mov	x2, x0
  415994:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415998:	add	x1, x0, #0x90
  41599c:	ldr	w0, [sp, #108]
  4159a0:	bl	42b418 <wcrtomb@plt+0x26708>
  4159a4:	b	415ae8 <wcrtomb@plt+0x10dd8>
  4159a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4159ac:	add	x0, x0, #0x90
  4159b0:	ldr	x0, [x0, #136]
  4159b4:	str	x0, [sp, #48]
  4159b8:	b	415ad4 <wcrtomb@plt+0x10dc4>
  4159bc:	ldr	x0, [sp, #48]
  4159c0:	bl	4051ec <wcrtomb@plt+0x4dc>
  4159c4:	bl	406030 <wcrtomb@plt+0x1320>
  4159c8:	str	x0, [sp, #72]
  4159cc:	ldr	x0, [sp, #72]
  4159d0:	cmp	x0, #0x0
  4159d4:	b.ne	415a2c <wcrtomb@plt+0x10d1c>  // b.any
  4159d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4159dc:	add	x0, x0, #0x420
  4159e0:	ldr	x0, [x0]
  4159e4:	cmp	x0, #0x0
  4159e8:	b.eq	4159fc <wcrtomb@plt+0x10cec>  // b.none
  4159ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4159f0:	add	x0, x0, #0x420
  4159f4:	ldr	x0, [x0]
  4159f8:	blr	x0
  4159fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  415a00:	add	x0, x0, #0x148
  415a04:	bl	404c60 <gettext@plt>
  415a08:	mov	x2, x0
  415a0c:	mov	w1, #0x0                   	// #0
  415a10:	mov	w0, #0x0                   	// #0
  415a14:	bl	404100 <error@plt>
  415a18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415a1c:	add	x0, x0, #0xdb0
  415a20:	mov	w1, #0x2                   	// #2
  415a24:	str	w1, [x0]
  415a28:	b	415ae8 <wcrtomb@plt+0x10dd8>
  415a2c:	ldr	x0, [sp, #72]
  415a30:	bl	406138 <wcrtomb@plt+0x1428>
  415a34:	str	x0, [sp, #96]
  415a38:	ldr	x0, [sp, #48]
  415a3c:	mov	x1, x0
  415a40:	ldr	x0, [sp, #96]
  415a44:	cmp	x0, x1
  415a48:	b.ls	415a54 <wcrtomb@plt+0x10d44>  // b.plast
  415a4c:	ldr	x0, [sp, #48]
  415a50:	str	x0, [sp, #96]
  415a54:	bl	404bc0 <__errno_location@plt>
  415a58:	str	wzr, [x0]
  415a5c:	ldr	x0, [sp, #72]
  415a60:	ldr	x2, [sp, #96]
  415a64:	mov	x1, x0
  415a68:	ldr	w0, [sp, #108]
  415a6c:	bl	4256b8 <wcrtomb@plt+0x209a8>
  415a70:	str	x0, [sp, #64]
  415a74:	ldr	x0, [sp, #48]
  415a78:	mov	x1, x0
  415a7c:	ldr	x0, [sp, #96]
  415a80:	sub	x0, x1, x0
  415a84:	str	x0, [sp, #48]
  415a88:	ldr	x0, [sp, #96]
  415a8c:	sub	x0, x0, #0x1
  415a90:	ldr	x1, [sp, #72]
  415a94:	add	x0, x1, x0
  415a98:	bl	4060c4 <wcrtomb@plt+0x13b4>
  415a9c:	ldr	x1, [sp, #64]
  415aa0:	ldr	x0, [sp, #96]
  415aa4:	cmp	x1, x0
  415aa8:	b.eq	415ad4 <wcrtomb@plt+0x10dc4>  // b.none
  415aac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415ab0:	add	x0, x0, #0x298
  415ab4:	ldr	x0, [x0]
  415ab8:	cmp	x0, #0x0
  415abc:	b.ne	415ae4 <wcrtomb@plt+0x10dd4>  // b.any
  415ac0:	ldr	x2, [sp, #96]
  415ac4:	ldr	x1, [sp, #64]
  415ac8:	ldr	x0, [sp, #24]
  415acc:	bl	43ad14 <wcrtomb@plt+0x36004>
  415ad0:	b	415ae4 <wcrtomb@plt+0x10dd4>
  415ad4:	ldr	x0, [sp, #48]
  415ad8:	cmp	x0, #0x0
  415adc:	b.gt	4159bc <wcrtomb@plt+0x10cac>
  415ae0:	b	415ae8 <wcrtomb@plt+0x10dd8>
  415ae4:	nop
  415ae8:	ldr	x0, [sp, #48]
  415aec:	bl	4230c8 <wcrtomb@plt+0x1e3b8>
  415af0:	bl	4051bc <wcrtomb@plt+0x4ac>
  415af4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415af8:	add	x0, x0, #0x2a1
  415afc:	ldrb	w0, [x0]
  415b00:	cmp	w0, #0x0
  415b04:	b.eq	415b10 <wcrtomb@plt+0x10e00>  // b.none
  415b08:	mov	w0, #0x0                   	// #0
  415b0c:	b	415bb8 <wcrtomb@plt+0x10ea8>
  415b10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415b14:	add	x0, x0, #0x298
  415b18:	ldr	x0, [x0]
  415b1c:	cmp	x0, #0x0
  415b20:	b.ne	415b7c <wcrtomb@plt+0x10e6c>  // b.any
  415b24:	ldr	w1, [sp, #40]
  415b28:	ldr	w2, [sp, #36]
  415b2c:	ldr	w0, [sp, #20]
  415b30:	and	w3, w0, #0xff
  415b34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415b38:	add	x0, x0, #0x320
  415b3c:	ldr	w0, [x0]
  415b40:	cmp	w0, #0x2
  415b44:	b.ne	415b50 <wcrtomb@plt+0x10e40>  // b.any
  415b48:	mov	w0, #0x0                   	// #0
  415b4c:	b	415b54 <wcrtomb@plt+0x10e44>
  415b50:	mov	w0, #0x100                 	// #256
  415b54:	mov	w7, w0
  415b58:	mov	w6, #0x0                   	// #0
  415b5c:	mov	w5, w3
  415b60:	mov	w4, w2
  415b64:	mov	w3, w1
  415b68:	ldr	w2, [sp, #108]
  415b6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415b70:	add	x1, x0, #0x90
  415b74:	ldr	x0, [sp, #24]
  415b78:	bl	413d00 <wcrtomb@plt+0xeff0>
  415b7c:	ldr	w0, [sp, #108]
  415b80:	bl	404660 <close@plt>
  415b84:	str	w0, [sp, #60]
  415b88:	ldr	w0, [sp, #60]
  415b8c:	cmp	w0, #0x0
  415b90:	b.ge	415b9c <wcrtomb@plt+0x10e8c>  // b.tcont
  415b94:	ldr	x0, [sp, #24]
  415b98:	bl	43a490 <wcrtomb@plt+0x35780>
  415b9c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415ba0:	add	x0, x0, #0x298
  415ba4:	ldr	x0, [x0]
  415ba8:	cmp	x0, #0x0
  415bac:	b.eq	415bb4 <wcrtomb@plt+0x10ea4>  // b.none
  415bb0:	bl	42f378 <wcrtomb@plt+0x2a668>
  415bb4:	ldr	w0, [sp, #60]
  415bb8:	ldp	x29, x30, [sp], #112
  415bbc:	ret
  415bc0:	stp	x29, x30, [sp, #-224]!
  415bc4:	mov	x29, sp
  415bc8:	str	x19, [sp, #16]
  415bcc:	str	x0, [sp, #56]
  415bd0:	strb	w1, [sp, #55]
  415bd4:	str	x2, [sp, #40]
  415bd8:	b	415c24 <wcrtomb@plt+0x10f14>
  415bdc:	ldr	x2, [sp, #40]
  415be0:	mov	w1, #0x0                   	// #0
  415be4:	ldr	x0, [sp, #56]
  415be8:	bl	414aa8 <wcrtomb@plt+0xfd98>
  415bec:	cmp	w0, #0x2
  415bf0:	b.eq	415c0c <wcrtomb@plt+0x10efc>  // b.none
  415bf4:	cmp	w0, #0x2
  415bf8:	b.gt	415c24 <wcrtomb@plt+0x10f14>
  415bfc:	cmp	w0, #0x0
  415c00:	b.eq	415c14 <wcrtomb@plt+0x10f04>  // b.none
  415c04:	cmp	w0, #0x1
  415c08:	b	415c24 <wcrtomb@plt+0x10f14>
  415c0c:	mov	w0, #0x0                   	// #0
  415c10:	b	415e80 <wcrtomb@plt+0x11170>
  415c14:	ldr	x0, [sp, #56]
  415c18:	bl	43a618 <wcrtomb@plt+0x35908>
  415c1c:	mov	w0, #0xffffffff            	// #-1
  415c20:	b	415e80 <wcrtomb@plt+0x11170>
  415c24:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  415c28:	add	x0, x0, #0x8b0
  415c2c:	ldr	w0, [x0]
  415c30:	mov	w3, #0x0                   	// #0
  415c34:	mov	w2, #0xc1                  	// #193
  415c38:	ldr	x1, [sp, #56]
  415c3c:	bl	404b90 <openat@plt>
  415c40:	str	w0, [sp, #220]
  415c44:	ldr	w0, [sp, #220]
  415c48:	cmp	w0, #0x0
  415c4c:	b.lt	415bdc <wcrtomb@plt+0x10ecc>  // b.tstop
  415c50:	add	x0, sp, #0x48
  415c54:	mov	x1, x0
  415c58:	ldr	w0, [sp, #220]
  415c5c:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  415c60:	cmp	w0, #0x0
  415c64:	b.eq	415c7c <wcrtomb@plt+0x10f6c>  // b.none
  415c68:	ldr	x0, [sp, #56]
  415c6c:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  415c70:	ldr	w0, [sp, #220]
  415c74:	bl	404660 <close@plt>
  415c78:	b	415e7c <wcrtomb@plt+0x1116c>
  415c7c:	ldr	w0, [sp, #220]
  415c80:	bl	404660 <close@plt>
  415c84:	cmp	w0, #0x0
  415c88:	b.eq	415c98 <wcrtomb@plt+0x10f88>  // b.none
  415c8c:	ldr	x0, [sp, #56]
  415c90:	bl	43a490 <wcrtomb@plt+0x35780>
  415c94:	b	415e7c <wcrtomb@plt+0x1116c>
  415c98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415c9c:	add	x0, x0, #0x90
  415ca0:	ldr	x0, [x0, #24]
  415ca4:	bl	4040b0 <strlen@plt>
  415ca8:	add	x0, x0, #0xa1
  415cac:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  415cb0:	str	x0, [sp, #208]
  415cb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415cb8:	add	x0, x0, #0x858
  415cbc:	ldr	x1, [x0]
  415cc0:	ldr	x0, [sp, #208]
  415cc4:	str	x1, [x0]
  415cc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415ccc:	add	x0, x0, #0x858
  415cd0:	ldr	x1, [sp, #208]
  415cd4:	str	x1, [x0]
  415cd8:	ldr	x1, [sp, #72]
  415cdc:	ldr	x0, [sp, #208]
  415ce0:	str	x1, [x0, #8]
  415ce4:	ldr	x1, [sp, #80]
  415ce8:	ldr	x0, [sp, #208]
  415cec:	str	x1, [x0, #16]
  415cf0:	ldr	x19, [sp, #208]
  415cf4:	add	x0, sp, #0x48
  415cf8:	bl	45a9f8 <argp_usage@@Base+0x1190c>
  415cfc:	stp	x0, x1, [x19, #24]
  415d00:	ldr	x0, [sp, #208]
  415d04:	ldrb	w1, [sp, #55]
  415d08:	strb	w1, [x0, #40]
  415d0c:	ldrb	w0, [sp, #55]
  415d10:	cmp	w0, #0x0
  415d14:	b.eq	415d7c <wcrtomb@plt+0x1106c>  // b.none
  415d18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415d1c:	add	x0, x0, #0x90
  415d20:	ldr	w1, [x0, #104]
  415d24:	ldr	x0, [sp, #208]
  415d28:	str	w1, [x0, #44]
  415d2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415d30:	add	x0, x0, #0x90
  415d34:	ldr	w1, [x0, #112]
  415d38:	ldr	x0, [sp, #208]
  415d3c:	str	w1, [x0, #48]
  415d40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415d44:	add	x0, x0, #0x90
  415d48:	ldr	w1, [x0, #116]
  415d4c:	ldr	x0, [sp, #208]
  415d50:	str	w1, [x0, #52]
  415d54:	ldr	x2, [sp, #208]
  415d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415d5c:	add	x0, x0, #0x90
  415d60:	ldp	x0, x1, [x0, #216]
  415d64:	stp	x0, x1, [x2, #56]
  415d68:	ldr	x2, [sp, #208]
  415d6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415d70:	add	x0, x0, #0x90
  415d74:	ldp	x0, x1, [x0, #232]
  415d78:	stp	x0, x1, [x2, #72]
  415d7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415d80:	add	x0, x0, #0x30
  415d84:	ldr	w1, [x0]
  415d88:	ldr	x0, [sp, #208]
  415d8c:	str	w1, [x0, #88]
  415d90:	ldr	x0, [sp, #56]
  415d94:	bl	4040b0 <strlen@plt>
  415d98:	add	x0, x0, #0x9
  415d9c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  415da0:	mov	x1, x0
  415da4:	ldr	x0, [sp, #208]
  415da8:	str	x1, [x0, #96]
  415dac:	ldr	x0, [sp, #208]
  415db0:	ldr	x0, [x0, #96]
  415db4:	str	xzr, [x0]
  415db8:	ldr	x0, [sp, #208]
  415dbc:	ldr	x0, [x0, #96]
  415dc0:	add	x0, x0, #0x8
  415dc4:	ldr	x1, [sp, #56]
  415dc8:	bl	4049d0 <strcpy@plt>
  415dcc:	ldr	x0, [sp, #208]
  415dd0:	str	xzr, [x0, #104]
  415dd4:	ldr	x0, [sp, #208]
  415dd8:	add	x2, x0, #0x68
  415ddc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415de0:	add	x0, x0, #0x90
  415de4:	ldr	x0, [x0, #48]
  415de8:	mov	x1, x0
  415dec:	mov	x0, x2
  415df0:	bl	423d0c <wcrtomb@plt+0x1effc>
  415df4:	ldr	x0, [sp, #208]
  415df8:	str	xzr, [x0, #112]
  415dfc:	ldr	x0, [sp, #208]
  415e00:	str	xzr, [x0, #120]
  415e04:	ldr	x0, [sp, #208]
  415e08:	str	xzr, [x0, #128]
  415e0c:	ldr	x0, [sp, #208]
  415e10:	str	xzr, [x0, #136]
  415e14:	ldr	x0, [sp, #208]
  415e18:	add	x1, x0, #0x98
  415e1c:	ldr	x0, [sp, #208]
  415e20:	add	x0, x0, #0x90
  415e24:	mov	x2, x0
  415e28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415e2c:	add	x0, x0, #0x90
  415e30:	bl	4187a8 <wcrtomb@plt+0x13a98>
  415e34:	ldr	x0, [sp, #208]
  415e38:	add	x2, x0, #0xa0
  415e3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415e40:	add	x0, x0, #0x90
  415e44:	ldr	x0, [x0, #24]
  415e48:	mov	x1, x0
  415e4c:	mov	x0, x2
  415e50:	bl	4049d0 <strcpy@plt>
  415e54:	ldr	x0, [sp, #56]
  415e58:	bl	413f9c <wcrtomb@plt+0xf28c>
  415e5c:	str	x0, [sp, #200]
  415e60:	ldr	x0, [sp, #200]
  415e64:	cmp	x0, #0x0
  415e68:	b.eq	415e74 <wcrtomb@plt+0x11164>  // b.none
  415e6c:	ldr	x0, [sp, #200]
  415e70:	bl	414074 <wcrtomb@plt+0xf364>
  415e74:	mov	w0, #0x0                   	// #0
  415e78:	b	415e80 <wcrtomb@plt+0x11170>
  415e7c:	mov	w0, #0xffffffff            	// #-1
  415e80:	ldr	x19, [sp, #16]
  415e84:	ldp	x29, x30, [sp], #224
  415e88:	ret
  415e8c:	stp	x29, x30, [sp, #-336]!
  415e90:	mov	x29, sp
  415e94:	str	x0, [sp, #24]
  415e98:	str	w1, [sp, #20]
  415e9c:	strb	wzr, [sp, #295]
  415ea0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415ea4:	add	x0, x0, #0x90
  415ea8:	ldr	x0, [x0, #24]
  415eac:	str	x0, [sp, #320]
  415eb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415eb4:	add	x0, x0, #0x3e8
  415eb8:	ldrb	w0, [x0]
  415ebc:	eor	w0, w0, #0x1
  415ec0:	and	w0, w0, #0xff
  415ec4:	cmp	w0, #0x0
  415ec8:	b.eq	415ef8 <wcrtomb@plt+0x111e8>  // b.none
  415ecc:	ldr	x0, [sp, #320]
  415ed0:	bl	42a248 <wcrtomb@plt+0x25538>
  415ed4:	and	w0, w0, #0xff
  415ed8:	cmp	w0, #0x0
  415edc:	b.eq	415ef8 <wcrtomb@plt+0x111e8>  // b.none
  415ee0:	add	x0, sp, #0x127
  415ee4:	mov	x2, x0
  415ee8:	mov	w1, #0x0                   	// #0
  415eec:	ldr	x0, [sp, #24]
  415ef0:	bl	415bc0 <wcrtomb@plt+0x10eb0>
  415ef4:	b	41617c <wcrtomb@plt+0x1146c>
  415ef8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  415efc:	add	x0, x0, #0x8b0
  415f00:	ldr	w5, [x0]
  415f04:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  415f08:	add	x0, x0, #0x8b0
  415f0c:	ldr	w0, [x0]
  415f10:	mov	w4, #0x0                   	// #0
  415f14:	ldr	x3, [sp, #24]
  415f18:	mov	w2, w0
  415f1c:	ldr	x1, [sp, #320]
  415f20:	mov	w0, w5
  415f24:	bl	4041a0 <linkat@plt>
  415f28:	str	w0, [sp, #316]
  415f2c:	bl	404bc0 <__errno_location@plt>
  415f30:	ldr	w0, [x0]
  415f34:	str	w0, [sp, #312]
  415f38:	ldr	w0, [sp, #316]
  415f3c:	cmp	w0, #0x0
  415f40:	b.ne	416058 <wcrtomb@plt+0x11348>  // b.any
  415f44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  415f48:	add	x0, x0, #0x858
  415f4c:	ldr	x0, [x0]
  415f50:	str	x0, [sp, #328]
  415f54:	ldr	x0, [sp, #328]
  415f58:	cmp	x0, #0x0
  415f5c:	b.eq	416050 <wcrtomb@plt+0x11340>  // b.none
  415f60:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  415f64:	add	x0, x0, #0x8b0
  415f68:	ldr	w0, [x0]
  415f6c:	add	x1, sp, #0x20
  415f70:	mov	w3, #0x100                 	// #256
  415f74:	mov	x2, x1
  415f78:	ldr	x1, [sp, #320]
  415f7c:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  415f80:	cmp	w0, #0x0
  415f84:	b.ne	416050 <wcrtomb@plt+0x11340>  // b.any
  415f88:	b	416044 <wcrtomb@plt+0x11334>
  415f8c:	ldr	x0, [sp, #328]
  415f90:	ldr	w1, [x0, #88]
  415f94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  415f98:	add	x0, x0, #0x30
  415f9c:	ldr	w0, [x0]
  415fa0:	cmp	w1, w0
  415fa4:	b.ne	416038 <wcrtomb@plt+0x11328>  // b.any
  415fa8:	ldr	x0, [sp, #328]
  415fac:	ldr	x1, [x0, #8]
  415fb0:	ldr	x0, [sp, #32]
  415fb4:	cmp	x1, x0
  415fb8:	b.ne	416038 <wcrtomb@plt+0x11328>  // b.any
  415fbc:	ldr	x0, [sp, #328]
  415fc0:	ldr	x1, [x0, #16]
  415fc4:	ldr	x0, [sp, #40]
  415fc8:	cmp	x1, x0
  415fcc:	b.ne	416038 <wcrtomb@plt+0x11328>  // b.any
  415fd0:	add	x0, sp, #0x20
  415fd4:	bl	45a9f8 <argp_usage@@Base+0x1190c>
  415fd8:	mov	x2, x0
  415fdc:	mov	x3, x1
  415fe0:	ldr	x0, [sp, #328]
  415fe4:	ldp	x0, x1, [x0, #24]
  415fe8:	bl	45ab0c <argp_usage@@Base+0x11a20>
  415fec:	cmp	w0, #0x0
  415ff0:	b.ne	416038 <wcrtomb@plt+0x11328>  // b.any
  415ff4:	ldr	x0, [sp, #24]
  415ff8:	bl	4040b0 <strlen@plt>
  415ffc:	add	x0, x0, #0x9
  416000:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  416004:	str	x0, [sp, #296]
  416008:	ldr	x0, [sp, #296]
  41600c:	add	x0, x0, #0x8
  416010:	ldr	x1, [sp, #24]
  416014:	bl	4049d0 <strcpy@plt>
  416018:	ldr	x0, [sp, #328]
  41601c:	ldr	x1, [x0, #96]
  416020:	ldr	x0, [sp, #296]
  416024:	str	x1, [x0]
  416028:	ldr	x0, [sp, #328]
  41602c:	ldr	x1, [sp, #296]
  416030:	str	x1, [x0, #96]
  416034:	b	416050 <wcrtomb@plt+0x11340>
  416038:	ldr	x0, [sp, #328]
  41603c:	ldr	x0, [x0]
  416040:	str	x0, [sp, #328]
  416044:	ldr	x0, [sp, #328]
  416048:	cmp	x0, #0x0
  41604c:	b.ne	415f8c <wcrtomb@plt+0x1127c>  // b.any
  416050:	mov	w0, #0x0                   	// #0
  416054:	b	41617c <wcrtomb@plt+0x1146c>
  416058:	ldr	w0, [sp, #312]
  41605c:	cmp	w0, #0x11
  416060:	b.ne	416078 <wcrtomb@plt+0x11368>  // b.any
  416064:	ldr	x1, [sp, #24]
  416068:	ldr	x0, [sp, #320]
  41606c:	bl	4047c0 <strcmp@plt>
  416070:	cmp	w0, #0x0
  416074:	b.eq	4160e8 <wcrtomb@plt+0x113d8>  // b.none
  416078:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  41607c:	add	x0, x0, #0x8b0
  416080:	ldr	w0, [x0]
  416084:	add	x1, sp, #0x20
  416088:	mov	w3, #0x100                 	// #256
  41608c:	mov	x2, x1
  416090:	ldr	x1, [sp, #320]
  416094:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  416098:	cmp	w0, #0x0
  41609c:	b.ne	4160f0 <wcrtomb@plt+0x113e0>  // b.any
  4160a0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4160a4:	add	x0, x0, #0x8b0
  4160a8:	ldr	w0, [x0]
  4160ac:	add	x1, sp, #0xa0
  4160b0:	mov	w3, #0x100                 	// #256
  4160b4:	mov	x2, x1
  4160b8:	ldr	x1, [sp, #24]
  4160bc:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  4160c0:	cmp	w0, #0x0
  4160c4:	b.ne	4160f0 <wcrtomb@plt+0x113e0>  // b.any
  4160c8:	ldr	x1, [sp, #32]
  4160cc:	ldr	x0, [sp, #160]
  4160d0:	cmp	x1, x0
  4160d4:	b.ne	4160f0 <wcrtomb@plt+0x113e0>  // b.any
  4160d8:	ldr	x1, [sp, #40]
  4160dc:	ldr	x0, [sp, #168]
  4160e0:	cmp	x1, x0
  4160e4:	b.ne	4160f0 <wcrtomb@plt+0x113e0>  // b.any
  4160e8:	mov	w0, #0x0                   	// #0
  4160ec:	b	41617c <wcrtomb@plt+0x1146c>
  4160f0:	bl	404bc0 <__errno_location@plt>
  4160f4:	mov	x1, x0
  4160f8:	ldr	w0, [sp, #312]
  4160fc:	str	w0, [x1]
  416100:	add	x0, sp, #0x127
  416104:	mov	x2, x0
  416108:	mov	w1, #0x0                   	// #0
  41610c:	ldr	x0, [sp, #24]
  416110:	bl	414aa8 <wcrtomb@plt+0xfd98>
  416114:	str	w0, [sp, #308]
  416118:	ldr	w0, [sp, #308]
  41611c:	cmp	w0, #0x1
  416120:	b.eq	415ef8 <wcrtomb@plt+0x111e8>  // b.none
  416124:	ldr	w0, [sp, #308]
  416128:	cmp	w0, #0x2
  41612c:	b.ne	416138 <wcrtomb@plt+0x11428>  // b.any
  416130:	mov	w0, #0x0                   	// #0
  416134:	b	41617c <wcrtomb@plt+0x1146c>
  416138:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41613c:	add	x0, x0, #0x51
  416140:	ldrb	w0, [x0]
  416144:	eor	w0, w0, #0x1
  416148:	and	w0, w0, #0xff
  41614c:	cmp	w0, #0x0
  416150:	b.ne	416164 <wcrtomb@plt+0x11454>  // b.any
  416154:	bl	404bc0 <__errno_location@plt>
  416158:	ldr	w0, [x0]
  41615c:	cmp	w0, #0x11
  416160:	b.eq	416178 <wcrtomb@plt+0x11468>  // b.none
  416164:	ldr	x1, [sp, #24]
  416168:	ldr	x0, [sp, #320]
  41616c:	bl	43a4fc <wcrtomb@plt+0x357ec>
  416170:	mov	w0, #0x1                   	// #1
  416174:	b	41617c <wcrtomb@plt+0x1146c>
  416178:	mov	w0, #0x0                   	// #0
  41617c:	ldp	x29, x30, [sp], #336
  416180:	ret
  416184:	stp	x29, x30, [sp, #-48]!
  416188:	mov	x29, sp
  41618c:	str	x0, [sp, #24]
  416190:	str	w1, [sp, #20]
  416194:	strb	wzr, [sp, #47]
  416198:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41619c:	add	x0, x0, #0x3e8
  4161a0:	ldrb	w0, [x0]
  4161a4:	eor	w0, w0, #0x1
  4161a8:	and	w0, w0, #0xff
  4161ac:	cmp	w0, #0x0
  4161b0:	b.eq	416258 <wcrtomb@plt+0x11548>  // b.none
  4161b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4161b8:	add	x0, x0, #0x90
  4161bc:	ldr	x0, [x0, #24]
  4161c0:	ldrb	w0, [x0]
  4161c4:	cmp	w0, #0x2f
  4161c8:	b.eq	4161e8 <wcrtomb@plt+0x114d8>  // b.none
  4161cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4161d0:	add	x0, x0, #0x90
  4161d4:	ldr	x0, [x0, #24]
  4161d8:	bl	42a248 <wcrtomb@plt+0x25538>
  4161dc:	and	w0, w0, #0xff
  4161e0:	cmp	w0, #0x0
  4161e4:	b.eq	416258 <wcrtomb@plt+0x11548>  // b.none
  4161e8:	add	x0, sp, #0x2f
  4161ec:	mov	x2, x0
  4161f0:	mov	w1, #0x1                   	// #1
  4161f4:	ldr	x0, [sp, #24]
  4161f8:	bl	415bc0 <wcrtomb@plt+0x10eb0>
  4161fc:	b	4162b4 <wcrtomb@plt+0x115a4>
  416200:	add	x0, sp, #0x2f
  416204:	mov	x2, x0
  416208:	mov	w1, #0x0                   	// #0
  41620c:	ldr	x0, [sp, #24]
  416210:	bl	414aa8 <wcrtomb@plt+0xfd98>
  416214:	cmp	w0, #0x2
  416218:	b.eq	416234 <wcrtomb@plt+0x11524>  // b.none
  41621c:	cmp	w0, #0x2
  416220:	b.gt	416258 <wcrtomb@plt+0x11548>
  416224:	cmp	w0, #0x0
  416228:	b.eq	41623c <wcrtomb@plt+0x1152c>  // b.none
  41622c:	cmp	w0, #0x1
  416230:	b	416258 <wcrtomb@plt+0x11548>
  416234:	mov	w0, #0x0                   	// #0
  416238:	b	4162b4 <wcrtomb@plt+0x115a4>
  41623c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416240:	add	x0, x0, #0x90
  416244:	ldr	x0, [x0, #24]
  416248:	ldr	x1, [sp, #24]
  41624c:	bl	43ab14 <wcrtomb@plt+0x35e04>
  416250:	mov	w0, #0xffffffff            	// #-1
  416254:	b	4162b4 <wcrtomb@plt+0x115a4>
  416258:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41625c:	add	x0, x0, #0x90
  416260:	ldr	x3, [x0, #24]
  416264:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416268:	add	x0, x0, #0x8b0
  41626c:	ldr	w0, [x0]
  416270:	ldr	x2, [sp, #24]
  416274:	mov	w1, w0
  416278:	mov	x0, x3
  41627c:	bl	404b10 <symlinkat@plt>
  416280:	cmp	w0, #0x0
  416284:	b.ne	416200 <wcrtomb@plt+0x114f0>  // b.any
  416288:	mov	w7, #0x100                 	// #256
  41628c:	mov	w6, #0x0                   	// #0
  416290:	mov	w5, #0x32                  	// #50
  416294:	mov	w4, #0x0                   	// #0
  416298:	mov	w3, #0x0                   	// #0
  41629c:	mov	w2, #0xffffffff            	// #-1
  4162a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4162a4:	add	x1, x0, #0x90
  4162a8:	ldr	x0, [sp, #24]
  4162ac:	bl	413d00 <wcrtomb@plt+0xeff0>
  4162b0:	mov	w0, #0x0                   	// #0
  4162b4:	ldp	x29, x30, [sp], #48
  4162b8:	ret
  4162bc:	stp	x29, x30, [sp, #-48]!
  4162c0:	mov	x29, sp
  4162c4:	str	x0, [sp, #24]
  4162c8:	str	w1, [sp, #20]
  4162cc:	strb	wzr, [sp, #43]
  4162d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4162d4:	add	x0, x0, #0x90
  4162d8:	ldr	w1, [x0, #104]
  4162dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4162e0:	add	x0, x0, #0x404
  4162e4:	ldr	w0, [x0]
  4162e8:	cmp	w0, #0x0
  4162ec:	b.le	4162f8 <wcrtomb@plt+0x115e8>
  4162f0:	mov	w0, #0xffffffc0            	// #-64
  4162f4:	b	4162fc <wcrtomb@plt+0x115ec>
  4162f8:	mov	w0, #0xffffffff            	// #-1
  4162fc:	and	w1, w0, w1
  416300:	mov	w0, #0x61ff                	// #25087
  416304:	and	w0, w1, w0
  416308:	str	w0, [sp, #44]
  41630c:	b	41635c <wcrtomb@plt+0x1164c>
  416310:	add	x0, sp, #0x2b
  416314:	mov	x2, x0
  416318:	mov	w1, #0x0                   	// #0
  41631c:	ldr	x0, [sp, #24]
  416320:	bl	414aa8 <wcrtomb@plt+0xfd98>
  416324:	cmp	w0, #0x2
  416328:	b.eq	416344 <wcrtomb@plt+0x11634>  // b.none
  41632c:	cmp	w0, #0x2
  416330:	b.gt	41635c <wcrtomb@plt+0x1164c>
  416334:	cmp	w0, #0x0
  416338:	b.eq	41634c <wcrtomb@plt+0x1163c>  // b.none
  41633c:	cmp	w0, #0x1
  416340:	b	41635c <wcrtomb@plt+0x1164c>
  416344:	mov	w0, #0x0                   	// #0
  416348:	b	4163dc <wcrtomb@plt+0x116cc>
  41634c:	ldr	x0, [sp, #24]
  416350:	bl	43a5f0 <wcrtomb@plt+0x358e0>
  416354:	mov	w0, #0xffffffff            	// #-1
  416358:	b	4163dc <wcrtomb@plt+0x116cc>
  41635c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416360:	add	x0, x0, #0x8b0
  416364:	ldr	w4, [x0]
  416368:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41636c:	add	x0, x0, #0x90
  416370:	ldr	x0, [x0, #120]
  416374:	mov	x3, x0
  416378:	ldr	w2, [sp, #44]
  41637c:	ldr	x1, [sp, #24]
  416380:	mov	w0, w4
  416384:	bl	47eca0 <_obstack_memory_used@@Base+0x21b60>
  416388:	cmp	w0, #0x0
  41638c:	b.ne	416310 <wcrtomb@plt+0x11600>  // b.any
  416390:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416394:	add	x0, x0, #0x848
  416398:	ldr	w0, [x0]
  41639c:	mvn	w1, w0
  4163a0:	ldr	w0, [sp, #44]
  4163a4:	and	w0, w1, w0
  4163a8:	ldr	w1, [sp, #20]
  4163ac:	and	w1, w1, #0xff
  4163b0:	mov	w7, #0x100                 	// #256
  4163b4:	mov	w6, #0x0                   	// #0
  4163b8:	mov	w5, w1
  4163bc:	mov	w4, #0x1ff                 	// #511
  4163c0:	mov	w3, w0
  4163c4:	mov	w2, #0xffffffff            	// #-1
  4163c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4163cc:	add	x1, x0, #0x90
  4163d0:	ldr	x0, [sp, #24]
  4163d4:	bl	413d00 <wcrtomb@plt+0xeff0>
  4163d8:	mov	w0, #0x0                   	// #0
  4163dc:	ldp	x29, x30, [sp], #48
  4163e0:	ret
  4163e4:	stp	x29, x30, [sp, #-48]!
  4163e8:	mov	x29, sp
  4163ec:	str	x0, [sp, #24]
  4163f0:	str	w1, [sp, #20]
  4163f4:	strb	wzr, [sp, #43]
  4163f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4163fc:	add	x0, x0, #0x90
  416400:	ldr	w1, [x0, #104]
  416404:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416408:	add	x0, x0, #0x404
  41640c:	ldr	w0, [x0]
  416410:	cmp	w0, #0x0
  416414:	b.le	416420 <wcrtomb@plt+0x11710>
  416418:	mov	w0, #0xffffffc0            	// #-64
  41641c:	b	416424 <wcrtomb@plt+0x11714>
  416420:	mov	w0, #0xffffffff            	// #-1
  416424:	and	w0, w0, w1
  416428:	and	w0, w0, #0x1ff
  41642c:	str	w0, [sp, #44]
  416430:	b	416480 <wcrtomb@plt+0x11770>
  416434:	add	x0, sp, #0x2b
  416438:	mov	x2, x0
  41643c:	mov	w1, #0x0                   	// #0
  416440:	ldr	x0, [sp, #24]
  416444:	bl	414aa8 <wcrtomb@plt+0xfd98>
  416448:	cmp	w0, #0x2
  41644c:	b.eq	416468 <wcrtomb@plt+0x11758>  // b.none
  416450:	cmp	w0, #0x2
  416454:	b.gt	416480 <wcrtomb@plt+0x11770>
  416458:	cmp	w0, #0x0
  41645c:	b.eq	416470 <wcrtomb@plt+0x11760>  // b.none
  416460:	cmp	w0, #0x1
  416464:	b	416480 <wcrtomb@plt+0x11770>
  416468:	mov	w0, #0x0                   	// #0
  41646c:	b	4164ec <wcrtomb@plt+0x117dc>
  416470:	ldr	x0, [sp, #24]
  416474:	bl	43a5c8 <wcrtomb@plt+0x358b8>
  416478:	mov	w0, #0xffffffff            	// #-1
  41647c:	b	4164ec <wcrtomb@plt+0x117dc>
  416480:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416484:	add	x0, x0, #0x8b0
  416488:	ldr	w0, [x0]
  41648c:	ldr	w2, [sp, #44]
  416490:	ldr	x1, [sp, #24]
  416494:	bl	404aa0 <mkfifoat@plt>
  416498:	cmp	w0, #0x0
  41649c:	b.ne	416434 <wcrtomb@plt+0x11724>  // b.any
  4164a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4164a4:	add	x0, x0, #0x848
  4164a8:	ldr	w0, [x0]
  4164ac:	mvn	w1, w0
  4164b0:	ldr	w0, [sp, #44]
  4164b4:	and	w0, w1, w0
  4164b8:	ldr	w1, [sp, #20]
  4164bc:	and	w1, w1, #0xff
  4164c0:	mov	w7, #0x100                 	// #256
  4164c4:	mov	w6, #0x0                   	// #0
  4164c8:	mov	w5, w1
  4164cc:	mov	w4, #0x1ff                 	// #511
  4164d0:	mov	w3, w0
  4164d4:	mov	w2, #0xffffffff            	// #-1
  4164d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4164dc:	add	x1, x0, #0x90
  4164e0:	ldr	x0, [sp, #24]
  4164e4:	bl	413d00 <wcrtomb@plt+0xeff0>
  4164e8:	mov	w0, #0x0                   	// #0
  4164ec:	ldp	x29, x30, [sp], #48
  4164f0:	ret
  4164f4:	stp	x29, x30, [sp, #-32]!
  4164f8:	mov	x29, sp
  4164fc:	str	x0, [sp, #24]
  416500:	str	w1, [sp, #20]
  416504:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  416508:	mov	w0, #0x0                   	// #0
  41650c:	ldp	x29, x30, [sp], #32
  416510:	ret
  416514:	sub	sp, sp, #0x10
  416518:	str	x0, [sp, #8]
  41651c:	str	w1, [sp, #4]
  416520:	mov	w0, #0x1                   	// #1
  416524:	add	sp, sp, #0x10
  416528:	ret
  41652c:	stp	x29, x30, [sp, #-32]!
  416530:	mov	x29, sp
  416534:	str	x0, [sp, #24]
  416538:	str	w1, [sp, #20]
  41653c:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  416540:	mov	w0, #0x0                   	// #0
  416544:	ldp	x29, x30, [sp], #32
  416548:	ret
  41654c:	stp	x29, x30, [sp, #-80]!
  416550:	mov	x29, sp
  416554:	str	x19, [sp, #16]
  416558:	str	x0, [sp, #56]
  41655c:	str	w1, [sp, #52]
  416560:	str	x2, [sp, #40]
  416564:	mov	w0, #0x1                   	// #1
  416568:	str	w0, [sp, #76]
  41656c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416570:	add	x0, x0, #0x2a1
  416574:	ldrb	w0, [x0]
  416578:	cmp	w0, #0x0
  41657c:	b.ne	416594 <wcrtomb@plt+0x11884>  // b.any
  416580:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416584:	add	x0, x0, #0x298
  416588:	ldr	x0, [x0]
  41658c:	cmp	x0, #0x0
  416590:	b.eq	416598 <wcrtomb@plt+0x11888>  // b.none
  416594:	str	wzr, [sp, #76]
  416598:	ldr	w0, [sp, #52]
  41659c:	cmp	w0, #0x56
  4165a0:	b.eq	416808 <wcrtomb@plt+0x11af8>  // b.none
  4165a4:	ldr	w0, [sp, #52]
  4165a8:	cmp	w0, #0x56
  4165ac:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  4165b0:	ldr	w0, [sp, #52]
  4165b4:	cmp	w0, #0x53
  4165b8:	b.eq	4166d4 <wcrtomb@plt+0x119c4>  // b.none
  4165bc:	ldr	w0, [sp, #52]
  4165c0:	cmp	w0, #0x53
  4165c4:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  4165c8:	ldr	w0, [sp, #52]
  4165cc:	cmp	w0, #0x4d
  4165d0:	b.eq	41681c <wcrtomb@plt+0x11b0c>  // b.none
  4165d4:	ldr	w0, [sp, #52]
  4165d8:	cmp	w0, #0x4d
  4165dc:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  4165e0:	ldr	w0, [sp, #52]
  4165e4:	cmp	w0, #0x4c
  4165e8:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  4165ec:	ldr	w0, [sp, #52]
  4165f0:	cmp	w0, #0x4b
  4165f4:	b.ge	416898 <wcrtomb@plt+0x11b88>  // b.tcont
  4165f8:	ldr	w0, [sp, #52]
  4165fc:	cmp	w0, #0x44
  416600:	b.eq	4167d0 <wcrtomb@plt+0x11ac0>  // b.none
  416604:	ldr	w0, [sp, #52]
  416608:	cmp	w0, #0x44
  41660c:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  416610:	ldr	w0, [sp, #52]
  416614:	cmp	w0, #0x37
  416618:	b.eq	4166f0 <wcrtomb@plt+0x119e0>  // b.none
  41661c:	ldr	w0, [sp, #52]
  416620:	cmp	w0, #0x37
  416624:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  416628:	ldr	w0, [sp, #52]
  41662c:	cmp	w0, #0x36
  416630:	b.eq	4167bc <wcrtomb@plt+0x11aac>  // b.none
  416634:	ldr	w0, [sp, #52]
  416638:	cmp	w0, #0x36
  41663c:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  416640:	ldr	w0, [sp, #52]
  416644:	cmp	w0, #0x35
  416648:	b.eq	4167d0 <wcrtomb@plt+0x11ac0>  // b.none
  41664c:	ldr	w0, [sp, #52]
  416650:	cmp	w0, #0x35
  416654:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  416658:	ldr	w0, [sp, #52]
  41665c:	cmp	w0, #0x34
  416660:	b.eq	41678c <wcrtomb@plt+0x11a7c>  // b.none
  416664:	ldr	w0, [sp, #52]
  416668:	cmp	w0, #0x34
  41666c:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  416670:	ldr	w0, [sp, #52]
  416674:	cmp	w0, #0x33
  416678:	b.eq	41675c <wcrtomb@plt+0x11a4c>  // b.none
  41667c:	ldr	w0, [sp, #52]
  416680:	cmp	w0, #0x33
  416684:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  416688:	ldr	w0, [sp, #52]
  41668c:	cmp	w0, #0x32
  416690:	b.eq	416734 <wcrtomb@plt+0x11a24>  // b.none
  416694:	ldr	w0, [sp, #52]
  416698:	cmp	w0, #0x32
  41669c:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  4166a0:	ldr	w0, [sp, #52]
  4166a4:	cmp	w0, #0x31
  4166a8:	b.eq	416748 <wcrtomb@plt+0x11a38>  // b.none
  4166ac:	ldr	w0, [sp, #52]
  4166b0:	cmp	w0, #0x31
  4166b4:	b.gt	4168fc <wcrtomb@plt+0x11bec>
  4166b8:	ldr	w0, [sp, #52]
  4166bc:	cmp	w0, #0x0
  4166c0:	b.eq	4166f0 <wcrtomb@plt+0x119e0>  // b.none
  4166c4:	ldr	w0, [sp, #52]
  4166c8:	cmp	w0, #0x30
  4166cc:	b.eq	4166f0 <wcrtomb@plt+0x119e0>  // b.none
  4166d0:	b	4168fc <wcrtomb@plt+0x11bec>
  4166d4:	ldr	x0, [sp, #40]
  4166d8:	adrp	x1, 415000 <wcrtomb@plt+0x102f0>
  4166dc:	add	x1, x1, #0x7cc
  4166e0:	str	x1, [x0]
  4166e4:	mov	w0, #0x1                   	// #1
  4166e8:	str	w0, [sp, #76]
  4166ec:	b	416980 <wcrtomb@plt+0x11c70>
  4166f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4166f4:	add	x0, x0, #0x90
  4166f8:	ldrb	w0, [x0, #16]
  4166fc:	cmp	w0, #0x0
  416700:	b.eq	416718 <wcrtomb@plt+0x11a08>  // b.none
  416704:	ldr	x0, [sp, #40]
  416708:	adrp	x1, 415000 <wcrtomb@plt+0x102f0>
  41670c:	add	x1, x1, #0x250
  416710:	str	x1, [x0]
  416714:	b	416980 <wcrtomb@plt+0x11c70>
  416718:	ldr	x0, [sp, #40]
  41671c:	adrp	x1, 415000 <wcrtomb@plt+0x102f0>
  416720:	add	x1, x1, #0x7cc
  416724:	str	x1, [x0]
  416728:	mov	w0, #0x1                   	// #1
  41672c:	str	w0, [sp, #76]
  416730:	b	416980 <wcrtomb@plt+0x11c70>
  416734:	ldr	x0, [sp, #40]
  416738:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  41673c:	add	x1, x1, #0x184
  416740:	str	x1, [x0]
  416744:	b	416980 <wcrtomb@plt+0x11c70>
  416748:	ldr	x0, [sp, #40]
  41674c:	adrp	x1, 415000 <wcrtomb@plt+0x102f0>
  416750:	add	x1, x1, #0xe8c
  416754:	str	x1, [x0]
  416758:	b	416980 <wcrtomb@plt+0x11c70>
  41675c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416760:	add	x0, x0, #0x90
  416764:	ldr	w0, [x0, #104]
  416768:	orr	w1, w0, #0x2000
  41676c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416770:	add	x0, x0, #0x90
  416774:	str	w1, [x0, #104]
  416778:	ldr	x0, [sp, #40]
  41677c:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  416780:	add	x1, x1, #0x2bc
  416784:	str	x1, [x0]
  416788:	b	416980 <wcrtomb@plt+0x11c70>
  41678c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416790:	add	x0, x0, #0x90
  416794:	ldr	w0, [x0, #104]
  416798:	orr	w1, w0, #0x6000
  41679c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4167a0:	add	x0, x0, #0x90
  4167a4:	str	w1, [x0, #104]
  4167a8:	ldr	x0, [sp, #40]
  4167ac:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  4167b0:	add	x1, x1, #0x2bc
  4167b4:	str	x1, [x0]
  4167b8:	b	416980 <wcrtomb@plt+0x11c70>
  4167bc:	ldr	x0, [sp, #40]
  4167c0:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  4167c4:	add	x1, x1, #0x3e4
  4167c8:	str	x1, [x0]
  4167cc:	b	416980 <wcrtomb@plt+0x11c70>
  4167d0:	ldr	x0, [sp, #40]
  4167d4:	adrp	x1, 415000 <wcrtomb@plt+0x102f0>
  4167d8:	add	x1, x1, #0x250
  4167dc:	str	x1, [x0]
  4167e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4167e4:	add	x0, x0, #0x90
  4167e8:	ldrb	w0, [x0, #376]
  4167ec:	cmp	w0, #0x0
  4167f0:	b.eq	41697c <wcrtomb@plt+0x11c6c>  // b.none
  4167f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4167f8:	add	x0, x0, #0x3f8
  4167fc:	mov	w1, #0x1                   	// #1
  416800:	strb	w1, [x0]
  416804:	b	41697c <wcrtomb@plt+0x11c6c>
  416808:	ldr	x0, [sp, #40]
  41680c:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  416810:	add	x1, x1, #0x4f4
  416814:	str	x1, [x0]
  416818:	b	416980 <wcrtomb@plt+0x11c70>
  41681c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416820:	add	x0, x0, #0x420
  416824:	ldr	x0, [x0]
  416828:	cmp	x0, #0x0
  41682c:	b.eq	416840 <wcrtomb@plt+0x11b30>  // b.none
  416830:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416834:	add	x0, x0, #0x420
  416838:	ldr	x0, [x0]
  41683c:	blr	x0
  416840:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  416844:	add	x0, x0, #0x168
  416848:	bl	404c60 <gettext@plt>
  41684c:	mov	x19, x0
  416850:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416854:	add	x0, x0, #0x90
  416858:	ldr	x0, [x0, #8]
  41685c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  416860:	mov	x3, x0
  416864:	mov	x2, x19
  416868:	mov	w1, #0x0                   	// #0
  41686c:	mov	w0, #0x0                   	// #0
  416870:	bl	404100 <error@plt>
  416874:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416878:	add	x0, x0, #0xdb0
  41687c:	mov	w1, #0x2                   	// #2
  416880:	str	w1, [x0]
  416884:	ldr	x0, [sp, #40]
  416888:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  41688c:	add	x1, x1, #0x52c
  416890:	str	x1, [x0]
  416894:	b	416980 <wcrtomb@plt+0x11c70>
  416898:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41689c:	add	x0, x0, #0x420
  4168a0:	ldr	x0, [x0]
  4168a4:	cmp	x0, #0x0
  4168a8:	b.eq	4168bc <wcrtomb@plt+0x11bac>  // b.none
  4168ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4168b0:	add	x0, x0, #0x420
  4168b4:	ldr	x0, [x0]
  4168b8:	blr	x0
  4168bc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4168c0:	add	x0, x0, #0x1a8
  4168c4:	bl	404c60 <gettext@plt>
  4168c8:	mov	x2, x0
  4168cc:	mov	w1, #0x0                   	// #0
  4168d0:	mov	w0, #0x0                   	// #0
  4168d4:	bl	404100 <error@plt>
  4168d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4168dc:	add	x0, x0, #0xdb0
  4168e0:	mov	w1, #0x2                   	// #2
  4168e4:	str	w1, [x0]
  4168e8:	ldr	x0, [sp, #40]
  4168ec:	adrp	x1, 416000 <wcrtomb@plt+0x112f0>
  4168f0:	add	x1, x1, #0x514
  4168f4:	str	x1, [x0]
  4168f8:	b	416980 <wcrtomb@plt+0x11c70>
  4168fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416900:	add	x0, x0, #0x24c
  416904:	ldr	w0, [x0]
  416908:	and	w0, w0, #0x10000
  41690c:	cmp	w0, #0x0
  416910:	b.eq	416968 <wcrtomb@plt+0x11c58>  // b.none
  416914:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416918:	add	x0, x0, #0x420
  41691c:	ldr	x0, [x0]
  416920:	cmp	x0, #0x0
  416924:	b.eq	416938 <wcrtomb@plt+0x11c28>  // b.none
  416928:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41692c:	add	x0, x0, #0x420
  416930:	ldr	x0, [x0]
  416934:	blr	x0
  416938:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41693c:	add	x0, x0, #0x1c8
  416940:	bl	404c60 <gettext@plt>
  416944:	mov	x19, x0
  416948:	ldr	x0, [sp, #56]
  41694c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  416950:	ldr	w4, [sp, #52]
  416954:	mov	x3, x0
  416958:	mov	x2, x19
  41695c:	mov	w1, #0x0                   	// #0
  416960:	mov	w0, #0x0                   	// #0
  416964:	bl	404100 <error@plt>
  416968:	ldr	x0, [sp, #40]
  41696c:	adrp	x1, 415000 <wcrtomb@plt+0x102f0>
  416970:	add	x1, x1, #0x7cc
  416974:	str	x1, [x0]
  416978:	b	416980 <wcrtomb@plt+0x11c70>
  41697c:	nop
  416980:	ldr	w0, [sp, #76]
  416984:	cmp	w0, #0x0
  416988:	b.ne	416994 <wcrtomb@plt+0x11c84>  // b.any
  41698c:	mov	w0, #0x0                   	// #0
  416990:	b	416aa4 <wcrtomb@plt+0x11d94>
  416994:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416998:	add	x0, x0, #0x320
  41699c:	ldr	w0, [x0]
  4169a0:	cmp	w0, #0x3
  4169a4:	b.eq	4169b4 <wcrtomb@plt+0x11ca4>  // b.none
  4169a8:	cmp	w0, #0x6
  4169ac:	b.eq	416a04 <wcrtomb@plt+0x11cf4>  // b.none
  4169b0:	b	416aa0 <wcrtomb@plt+0x11d90>
  4169b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4169b8:	add	x0, x0, #0x52
  4169bc:	ldrb	w0, [x0]
  4169c0:	mov	w1, w0
  4169c4:	ldr	x0, [sp, #56]
  4169c8:	bl	424ec0 <wcrtomb@plt+0x201b0>
  4169cc:	cmp	w0, #0x0
  4169d0:	b.ne	416a94 <wcrtomb@plt+0x11d84>  // b.any
  4169d4:	bl	404bc0 <__errno_location@plt>
  4169d8:	ldr	w0, [x0]
  4169dc:	cmp	w0, #0x0
  4169e0:	b.eq	416a94 <wcrtomb@plt+0x11d84>  // b.none
  4169e4:	bl	404bc0 <__errno_location@plt>
  4169e8:	ldr	w0, [x0]
  4169ec:	cmp	w0, #0x2
  4169f0:	b.eq	416a94 <wcrtomb@plt+0x11d84>  // b.none
  4169f4:	ldr	x0, [sp, #56]
  4169f8:	bl	43ac74 <wcrtomb@plt+0x35f64>
  4169fc:	mov	w0, #0x0                   	// #0
  416a00:	b	416aa4 <wcrtomb@plt+0x11d94>
  416a04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416a08:	add	x2, x0, #0x90
  416a0c:	mov	x1, #0x0                   	// #0
  416a10:	ldr	x0, [sp, #56]
  416a14:	bl	4149ec <wcrtomb@plt+0xfcdc>
  416a18:	and	w0, w0, #0xff
  416a1c:	cmp	w0, #0x0
  416a20:	b.eq	416a9c <wcrtomb@plt+0x11d8c>  // b.none
  416a24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416a28:	add	x0, x0, #0x24c
  416a2c:	ldr	w0, [x0]
  416a30:	and	w0, w0, #0x800
  416a34:	cmp	w0, #0x0
  416a38:	b.eq	416a8c <wcrtomb@plt+0x11d7c>  // b.none
  416a3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416a40:	add	x0, x0, #0x420
  416a44:	ldr	x0, [x0]
  416a48:	cmp	x0, #0x0
  416a4c:	b.eq	416a60 <wcrtomb@plt+0x11d50>  // b.none
  416a50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416a54:	add	x0, x0, #0x420
  416a58:	ldr	x0, [x0]
  416a5c:	blr	x0
  416a60:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  416a64:	add	x0, x0, #0x200
  416a68:	bl	404c60 <gettext@plt>
  416a6c:	mov	x19, x0
  416a70:	ldr	x0, [sp, #56]
  416a74:	bl	459f38 <argp_usage@@Base+0x10e4c>
  416a78:	mov	x3, x0
  416a7c:	mov	x2, x19
  416a80:	mov	w1, #0x0                   	// #0
  416a84:	mov	w0, #0x0                   	// #0
  416a88:	bl	404100 <error@plt>
  416a8c:	mov	w0, #0x0                   	// #0
  416a90:	b	416aa4 <wcrtomb@plt+0x11d94>
  416a94:	nop
  416a98:	b	416aa0 <wcrtomb@plt+0x11d90>
  416a9c:	nop
  416aa0:	mov	w0, #0x1                   	// #1
  416aa4:	ldr	x19, [sp, #16]
  416aa8:	ldp	x29, x30, [sp], #80
  416aac:	ret
  416ab0:	stp	x29, x30, [sp, #-64]!
  416ab4:	mov	x29, sp
  416ab8:	str	x19, [sp, #16]
  416abc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416ac0:	add	x0, x0, #0xff8
  416ac4:	adrp	x1, 417000 <wcrtomb@plt+0x122f0>
  416ac8:	add	x1, x1, #0x144
  416acc:	str	x1, [x0]
  416ad0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416ad4:	add	x0, x0, #0x18
  416ad8:	ldr	x0, [x0]
  416adc:	bl	4060c4 <wcrtomb@plt+0x13b4>
  416ae0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416ae4:	add	x0, x0, #0x3e8
  416ae8:	ldrb	w0, [x0]
  416aec:	eor	w0, w0, #0x1
  416af0:	and	w0, w0, #0xff
  416af4:	cmp	w0, #0x0
  416af8:	b.eq	416b20 <wcrtomb@plt+0x11e10>  // b.none
  416afc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416b00:	add	x0, x0, #0x90
  416b04:	ldr	x0, [x0]
  416b08:	bl	42a248 <wcrtomb@plt+0x25538>
  416b0c:	and	w0, w0, #0xff
  416b10:	cmp	w0, #0x0
  416b14:	b.eq	416b20 <wcrtomb@plt+0x11e10>  // b.none
  416b18:	mov	w0, #0x1                   	// #1
  416b1c:	b	416b24 <wcrtomb@plt+0x11e14>
  416b20:	mov	w0, #0x0                   	// #0
  416b24:	strb	w0, [sp, #63]
  416b28:	ldrb	w0, [sp, #63]
  416b2c:	and	w0, w0, #0x1
  416b30:	strb	w0, [sp, #63]
  416b34:	ldrb	w0, [sp, #63]
  416b38:	cmp	w0, #0x0
  416b3c:	b.eq	416ba8 <wcrtomb@plt+0x11e98>  // b.none
  416b40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416b44:	add	x0, x0, #0x420
  416b48:	ldr	x0, [x0]
  416b4c:	cmp	x0, #0x0
  416b50:	b.eq	416b64 <wcrtomb@plt+0x11e54>  // b.none
  416b54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416b58:	add	x0, x0, #0x420
  416b5c:	ldr	x0, [x0]
  416b60:	blr	x0
  416b64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  416b68:	add	x0, x0, #0x220
  416b6c:	bl	404c60 <gettext@plt>
  416b70:	mov	x19, x0
  416b74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416b78:	add	x0, x0, #0x90
  416b7c:	ldr	x0, [x0]
  416b80:	bl	459cd8 <argp_usage@@Base+0x10bec>
  416b84:	mov	x3, x0
  416b88:	mov	x2, x19
  416b8c:	mov	w1, #0x0                   	// #0
  416b90:	mov	w0, #0x0                   	// #0
  416b94:	bl	404100 <error@plt>
  416b98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416b9c:	add	x0, x0, #0xdb0
  416ba0:	mov	w1, #0x2                   	// #2
  416ba4:	str	w1, [x0]
  416ba8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416bac:	add	x0, x0, #0x90
  416bb0:	ldr	x0, [x0, #8]
  416bb4:	ldrb	w0, [x0]
  416bb8:	cmp	w0, #0x0
  416bbc:	b.eq	416c04 <wcrtomb@plt+0x11ef4>  // b.none
  416bc0:	ldrb	w0, [sp, #63]
  416bc4:	cmp	w0, #0x0
  416bc8:	b.ne	416c04 <wcrtomb@plt+0x11ef4>  // b.any
  416bcc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416bd0:	add	x0, x0, #0x280
  416bd4:	ldrb	w0, [x0]
  416bd8:	cmp	w0, #0x0
  416bdc:	b.eq	416c0c <wcrtomb@plt+0x11efc>  // b.none
  416be0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416be4:	add	x0, x0, #0x90
  416be8:	ldr	x0, [x0, #8]
  416bec:	mov	x1, x0
  416bf0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  416bf4:	add	x0, x0, #0x240
  416bf8:	bl	42fab8 <wcrtomb@plt+0x2ada8>
  416bfc:	cmp	w0, #0x0
  416c00:	b.ne	416c0c <wcrtomb@plt+0x11efc>  // b.any
  416c04:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  416c08:	b	416de0 <wcrtomb@plt+0x120d0>
  416c0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c10:	add	x0, x0, #0x2b4
  416c14:	ldr	w0, [x0]
  416c18:	cmp	w0, #0x0
  416c1c:	b.eq	416c40 <wcrtomb@plt+0x11f30>  // b.none
  416c20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c24:	add	x0, x0, #0x18
  416c28:	ldr	x0, [x0]
  416c2c:	mov	x2, #0xffffffffffffffff    	// #-1
  416c30:	mov	x1, x0
  416c34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c38:	add	x0, x0, #0x90
  416c3c:	bl	422f1c <wcrtomb@plt+0x1e20c>
  416c40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c44:	add	x0, x0, #0x3f8
  416c48:	ldrb	w0, [x0]
  416c4c:	eor	w0, w0, #0x1
  416c50:	and	w0, w0, #0xff
  416c54:	cmp	w0, #0x0
  416c58:	b.eq	416c88 <wcrtomb@plt+0x11f78>  // b.none
  416c5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c60:	add	x0, x0, #0x30
  416c64:	ldr	w0, [x0]
  416c68:	str	w0, [sp, #56]
  416c6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c70:	add	x0, x0, #0x90
  416c74:	ldr	x0, [x0, #8]
  416c78:	mov	w1, #0x0                   	// #0
  416c7c:	bl	414e40 <wcrtomb@plt+0x10130>
  416c80:	ldr	w0, [sp, #56]
  416c84:	bl	425b98 <wcrtomb@plt+0x20e88>
  416c88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416c8c:	add	x0, x0, #0x325
  416c90:	ldrb	w0, [x0]
  416c94:	cmp	w0, #0x0
  416c98:	b.eq	416d40 <wcrtomb@plt+0x12030>  // b.none
  416c9c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416ca0:	add	x0, x0, #0x90
  416ca4:	ldr	x0, [x0, #8]
  416ca8:	mov	w1, #0x0                   	// #0
  416cac:	bl	4250f8 <wcrtomb@plt+0x203e8>
  416cb0:	and	w0, w0, #0xff
  416cb4:	eor	w0, w0, #0x1
  416cb8:	and	w0, w0, #0xff
  416cbc:	cmp	w0, #0x0
  416cc0:	b.eq	416d40 <wcrtomb@plt+0x12030>  // b.none
  416cc4:	bl	404bc0 <__errno_location@plt>
  416cc8:	ldr	w0, [x0]
  416ccc:	str	w0, [sp, #52]
  416cd0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416cd4:	add	x0, x0, #0x420
  416cd8:	ldr	x0, [x0]
  416cdc:	cmp	x0, #0x0
  416ce0:	b.eq	416cf4 <wcrtomb@plt+0x11fe4>  // b.none
  416ce4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416ce8:	add	x0, x0, #0x420
  416cec:	ldr	x0, [x0]
  416cf0:	blr	x0
  416cf4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  416cf8:	add	x0, x0, #0x248
  416cfc:	bl	404c60 <gettext@plt>
  416d00:	mov	x19, x0
  416d04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416d08:	add	x0, x0, #0x90
  416d0c:	ldr	x0, [x0, #8]
  416d10:	bl	459cd8 <argp_usage@@Base+0x10bec>
  416d14:	mov	x3, x0
  416d18:	mov	x2, x19
  416d1c:	ldr	w1, [sp, #52]
  416d20:	mov	w0, #0x0                   	// #0
  416d24:	bl	404100 <error@plt>
  416d28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416d2c:	add	x0, x0, #0xdb0
  416d30:	mov	w1, #0x2                   	// #2
  416d34:	str	w1, [x0]
  416d38:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  416d3c:	b	416de0 <wcrtomb@plt+0x120d0>
  416d40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416d44:	add	x0, x0, #0x90
  416d48:	bl	42b380 <wcrtomb@plt+0x26670>
  416d4c:	and	w0, w0, #0xff
  416d50:	cmp	w0, #0x0
  416d54:	b.ne	416d6c <wcrtomb@plt+0x1205c>  // b.any
  416d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416d5c:	add	x0, x0, #0x18
  416d60:	ldr	x0, [x0]
  416d64:	ldrb	w0, [x0, #156]
  416d68:	b	416d70 <wcrtomb@plt+0x12060>
  416d6c:	mov	w0, #0x53                  	// #83
  416d70:	strb	w0, [sp, #51]
  416d74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416d78:	add	x0, x0, #0x90
  416d7c:	ldr	x0, [x0, #8]
  416d80:	ldrb	w1, [sp, #51]
  416d84:	add	x2, sp, #0x28
  416d88:	bl	41654c <wcrtomb@plt+0x1183c>
  416d8c:	cmp	w0, #0x0
  416d90:	b.eq	416ddc <wcrtomb@plt+0x120cc>  // b.none
  416d94:	ldr	x0, [sp, #40]
  416d98:	cmp	x0, #0x0
  416d9c:	b.eq	416de0 <wcrtomb@plt+0x120d0>  // b.none
  416da0:	ldr	x2, [sp, #40]
  416da4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416da8:	add	x0, x0, #0x90
  416dac:	ldr	x0, [x0, #8]
  416db0:	ldrb	w1, [sp, #51]
  416db4:	blr	x2
  416db8:	cmp	w0, #0x0
  416dbc:	b.eq	416de0 <wcrtomb@plt+0x120d0>  // b.none
  416dc0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  416dc4:	add	x0, x0, #0x325
  416dc8:	ldrb	w0, [x0]
  416dcc:	cmp	w0, #0x0
  416dd0:	b.eq	416de0 <wcrtomb@plt+0x120d0>  // b.none
  416dd4:	bl	42542c <wcrtomb@plt+0x2071c>
  416dd8:	b	416de0 <wcrtomb@plt+0x120d0>
  416ddc:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  416de0:	ldr	x19, [sp, #16]
  416de4:	ldp	x29, x30, [sp], #64
  416de8:	ret
  416dec:	sub	sp, sp, #0x270
  416df0:	stp	x29, x30, [sp]
  416df4:	mov	x29, sp
  416df8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  416dfc:	add	x0, x0, #0x858
  416e00:	ldr	x0, [x0]
  416e04:	str	x0, [sp, #616]
  416e08:	b	41711c <wcrtomb@plt+0x1240c>
  416e0c:	ldr	x0, [sp, #616]
  416e10:	ldr	x0, [x0, #96]
  416e14:	str	x0, [sp, #608]
  416e18:	str	xzr, [sp, #600]
  416e1c:	ldr	x0, [sp, #616]
  416e20:	ldr	w0, [x0, #88]
  416e24:	bl	425b98 <wcrtomb@plt+0x20e88>
  416e28:	ldr	x0, [sp, #616]
  416e2c:	ldr	x0, [x0, #96]
  416e30:	str	x0, [sp, #608]
  416e34:	b	417094 <wcrtomb@plt+0x12384>
  416e38:	ldr	x0, [sp, #608]
  416e3c:	add	x0, x0, #0x8
  416e40:	str	x0, [sp, #576]
  416e44:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416e48:	add	x0, x0, #0x8b0
  416e4c:	ldr	w0, [x0]
  416e50:	add	x1, sp, #0x18
  416e54:	mov	w3, #0x100                 	// #256
  416e58:	mov	x2, x1
  416e5c:	ldr	x1, [sp, #576]
  416e60:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  416e64:	cmp	w0, #0x0
  416e68:	b.ne	417088 <wcrtomb@plt+0x12378>  // b.any
  416e6c:	ldr	x1, [sp, #24]
  416e70:	ldr	x0, [sp, #616]
  416e74:	ldr	x0, [x0, #8]
  416e78:	cmp	x1, x0
  416e7c:	b.ne	417088 <wcrtomb@plt+0x12378>  // b.any
  416e80:	ldr	x1, [sp, #32]
  416e84:	ldr	x0, [sp, #616]
  416e88:	ldr	x0, [x0, #16]
  416e8c:	cmp	x1, x0
  416e90:	b.ne	417088 <wcrtomb@plt+0x12378>  // b.any
  416e94:	add	x0, sp, #0x18
  416e98:	bl	45a9f8 <argp_usage@@Base+0x1190c>
  416e9c:	ldr	x2, [sp, #616]
  416ea0:	ldp	x2, x3, [x2, #24]
  416ea4:	bl	45ab0c <argp_usage@@Base+0x11a20>
  416ea8:	cmp	w0, #0x0
  416eac:	b.ne	417088 <wcrtomb@plt+0x12378>  // b.any
  416eb0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416eb4:	add	x0, x0, #0x8b0
  416eb8:	ldr	w0, [x0]
  416ebc:	mov	w2, #0x0                   	// #0
  416ec0:	ldr	x1, [sp, #576]
  416ec4:	bl	404240 <unlinkat@plt>
  416ec8:	cmp	w0, #0x0
  416ecc:	b.eq	416edc <wcrtomb@plt+0x121cc>  // b.none
  416ed0:	ldr	x0, [sp, #576]
  416ed4:	bl	43ac74 <wcrtomb@plt+0x35f64>
  416ed8:	b	417088 <wcrtomb@plt+0x12378>
  416edc:	ldr	x0, [sp, #600]
  416ee0:	cmp	x0, #0x0
  416ee4:	b.eq	416f20 <wcrtomb@plt+0x12210>  // b.none
  416ee8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416eec:	add	x0, x0, #0x8b0
  416ef0:	ldr	w5, [x0]
  416ef4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416ef8:	add	x0, x0, #0x8b0
  416efc:	ldr	w0, [x0]
  416f00:	mov	w4, #0x0                   	// #0
  416f04:	ldr	x3, [sp, #576]
  416f08:	mov	w2, w0
  416f0c:	ldr	x1, [sp, #600]
  416f10:	mov	w0, w5
  416f14:	bl	4041a0 <linkat@plt>
  416f18:	cmp	w0, #0x0
  416f1c:	b.eq	417088 <wcrtomb@plt+0x12378>  // b.none
  416f20:	ldr	x0, [sp, #616]
  416f24:	ldrb	w0, [x0, #40]
  416f28:	eor	w0, w0, #0x1
  416f2c:	and	w0, w0, #0xff
  416f30:	cmp	w0, #0x0
  416f34:	b.eq	416f88 <wcrtomb@plt+0x12278>  // b.none
  416f38:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416f3c:	add	x0, x0, #0x8b0
  416f40:	ldr	w5, [x0]
  416f44:	ldr	x0, [sp, #616]
  416f48:	add	x1, x0, #0xa0
  416f4c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416f50:	add	x0, x0, #0x8b0
  416f54:	ldr	w0, [x0]
  416f58:	mov	w4, #0x0                   	// #0
  416f5c:	ldr	x3, [sp, #576]
  416f60:	mov	w2, w0
  416f64:	mov	w0, w5
  416f68:	bl	4041a0 <linkat@plt>
  416f6c:	cmp	w0, #0x0
  416f70:	b.eq	417088 <wcrtomb@plt+0x12378>  // b.none
  416f74:	ldr	x0, [sp, #616]
  416f78:	add	x0, x0, #0xa0
  416f7c:	ldr	x1, [sp, #576]
  416f80:	bl	43a4fc <wcrtomb@plt+0x357ec>
  416f84:	b	417088 <wcrtomb@plt+0x12378>
  416f88:	ldr	x0, [sp, #616]
  416f8c:	add	x3, x0, #0xa0
  416f90:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  416f94:	add	x0, x0, #0x8b0
  416f98:	ldr	w0, [x0]
  416f9c:	ldr	x2, [sp, #576]
  416fa0:	mov	w1, w0
  416fa4:	mov	x0, x3
  416fa8:	bl	404b10 <symlinkat@plt>
  416fac:	cmp	w0, #0x0
  416fb0:	b.eq	416fc8 <wcrtomb@plt+0x122b8>  // b.none
  416fb4:	ldr	x0, [sp, #616]
  416fb8:	add	x0, x0, #0xa0
  416fbc:	ldr	x1, [sp, #576]
  416fc0:	bl	43ab14 <wcrtomb@plt+0x35e04>
  416fc4:	b	417088 <wcrtomb@plt+0x12378>
  416fc8:	ldr	x0, [sp, #616]
  416fcc:	ldr	w0, [x0, #44]
  416fd0:	str	w0, [sp, #256]
  416fd4:	ldr	x0, [sp, #616]
  416fd8:	ldr	w0, [x0, #48]
  416fdc:	str	w0, [sp, #264]
  416fe0:	ldr	x0, [sp, #616]
  416fe4:	ldr	w0, [x0, #52]
  416fe8:	str	w0, [sp, #268]
  416fec:	ldr	x0, [sp, #616]
  416ff0:	ldp	x0, x1, [x0, #56]
  416ff4:	stp	x0, x1, [sp, #368]
  416ff8:	ldr	x0, [sp, #616]
  416ffc:	ldp	x0, x1, [x0, #72]
  417000:	stp	x0, x1, [sp, #384]
  417004:	ldr	x0, [sp, #616]
  417008:	ldr	x0, [x0, #104]
  41700c:	str	x0, [sp, #200]
  417010:	ldr	x0, [sp, #616]
  417014:	ldr	x0, [x0, #112]
  417018:	str	x0, [sp, #208]
  41701c:	ldr	x0, [sp, #616]
  417020:	ldr	x0, [x0, #120]
  417024:	str	x0, [sp, #216]
  417028:	ldr	x0, [sp, #616]
  41702c:	ldr	x0, [x0, #128]
  417030:	str	x0, [sp, #224]
  417034:	ldr	x0, [sp, #616]
  417038:	ldr	x0, [x0, #136]
  41703c:	str	x0, [sp, #232]
  417040:	ldr	x0, [sp, #616]
  417044:	ldr	x0, [x0, #152]
  417048:	str	x0, [sp, #488]
  41704c:	ldr	x0, [sp, #616]
  417050:	ldr	x0, [x0, #144]
  417054:	str	x0, [sp, #480]
  417058:	add	x0, sp, #0x98
  41705c:	mov	w7, #0x100                 	// #256
  417060:	mov	w6, #0x0                   	// #0
  417064:	mov	w5, #0x32                  	// #50
  417068:	mov	w4, #0x0                   	// #0
  41706c:	mov	w3, #0x0                   	// #0
  417070:	mov	w2, #0xffffffff            	// #-1
  417074:	mov	x1, x0
  417078:	ldr	x0, [sp, #576]
  41707c:	bl	413d00 <wcrtomb@plt+0xeff0>
  417080:	ldr	x0, [sp, #576]
  417084:	str	x0, [sp, #600]
  417088:	ldr	x0, [sp, #608]
  41708c:	ldr	x0, [x0]
  417090:	str	x0, [sp, #608]
  417094:	ldr	x0, [sp, #608]
  417098:	cmp	x0, #0x0
  41709c:	b.ne	416e38 <wcrtomb@plt+0x12128>  // b.any
  4170a0:	ldr	x0, [sp, #616]
  4170a4:	ldr	x0, [x0, #96]
  4170a8:	str	x0, [sp, #608]
  4170ac:	b	4170cc <wcrtomb@plt+0x123bc>
  4170b0:	ldr	x0, [sp, #608]
  4170b4:	ldr	x0, [x0]
  4170b8:	str	x0, [sp, #584]
  4170bc:	ldr	x0, [sp, #608]
  4170c0:	bl	404880 <free@plt>
  4170c4:	ldr	x0, [sp, #584]
  4170c8:	str	x0, [sp, #608]
  4170cc:	ldr	x0, [sp, #608]
  4170d0:	cmp	x0, #0x0
  4170d4:	b.ne	4170b0 <wcrtomb@plt+0x123a0>  // b.any
  4170d8:	ldr	x0, [sp, #616]
  4170dc:	ldr	x2, [x0, #152]
  4170e0:	ldr	x0, [sp, #616]
  4170e4:	ldr	x0, [x0, #144]
  4170e8:	mov	x1, x0
  4170ec:	mov	x0, x2
  4170f0:	bl	418440 <wcrtomb@plt+0x13730>
  4170f4:	ldr	x0, [sp, #616]
  4170f8:	ldr	x0, [x0, #104]
  4170fc:	bl	404880 <free@plt>
  417100:	ldr	x0, [sp, #616]
  417104:	ldr	x0, [x0]
  417108:	str	x0, [sp, #592]
  41710c:	ldr	x0, [sp, #616]
  417110:	bl	404880 <free@plt>
  417114:	ldr	x0, [sp, #592]
  417118:	str	x0, [sp, #616]
  41711c:	ldr	x0, [sp, #616]
  417120:	cmp	x0, #0x0
  417124:	b.ne	416e0c <wcrtomb@plt+0x120fc>  // b.any
  417128:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41712c:	add	x0, x0, #0x858
  417130:	str	xzr, [x0]
  417134:	nop
  417138:	ldp	x29, x30, [sp]
  41713c:	add	sp, sp, #0x270
  417140:	ret
  417144:	stp	x29, x30, [sp, #-16]!
  417148:	mov	x29, sp
  41714c:	mov	w1, #0x0                   	// #0
  417150:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417154:	add	x0, x0, #0x270
  417158:	bl	414e40 <wcrtomb@plt+0x10130>
  41715c:	bl	416dec <wcrtomb@plt+0x120dc>
  417160:	mov	w1, #0x1                   	// #1
  417164:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417168:	add	x0, x0, #0x270
  41716c:	bl	414e40 <wcrtomb@plt+0x10130>
  417170:	nop
  417174:	ldp	x29, x30, [sp], #16
  417178:	ret
  41717c:	stp	x29, x30, [sp, #-64]!
  417180:	mov	x29, sp
  417184:	stp	x19, x20, [sp, #16]
  417188:	str	x0, [sp, #40]
  41718c:	str	x1, [sp, #32]
  417190:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  417194:	add	x0, x0, #0x8b0
  417198:	ldr	w4, [x0]
  41719c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4171a0:	add	x0, x0, #0x8b0
  4171a4:	ldr	w0, [x0]
  4171a8:	ldr	x3, [sp, #32]
  4171ac:	mov	w2, w0
  4171b0:	ldr	x1, [sp, #40]
  4171b4:	mov	w0, w4
  4171b8:	bl	4048c0 <renameat@plt>
  4171bc:	cmp	w0, #0x0
  4171c0:	b.ne	4171d8 <wcrtomb@plt+0x124c8>  // b.any
  4171c4:	ldr	x1, [sp, #32]
  4171c8:	ldr	x0, [sp, #40]
  4171cc:	bl	4146d0 <wcrtomb@plt+0xf9c0>
  4171d0:	mov	w0, #0x1                   	// #1
  4171d4:	b	4172dc <wcrtomb@plt+0x125cc>
  4171d8:	bl	404bc0 <__errno_location@plt>
  4171dc:	ldr	w0, [x0]
  4171e0:	str	w0, [sp, #60]
  4171e4:	ldr	w0, [sp, #60]
  4171e8:	cmp	w0, #0x2
  4171ec:	b.ne	417254 <wcrtomb@plt+0x12544>  // b.any
  4171f0:	add	x0, sp, #0x3b
  4171f4:	mov	x1, x0
  4171f8:	ldr	x0, [sp, #32]
  4171fc:	bl	414780 <wcrtomb@plt+0xfa70>
  417200:	cmp	w0, #0x0
  417204:	b.ne	41725c <wcrtomb@plt+0x1254c>  // b.any
  417208:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  41720c:	add	x0, x0, #0x8b0
  417210:	ldr	w4, [x0]
  417214:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  417218:	add	x0, x0, #0x8b0
  41721c:	ldr	w0, [x0]
  417220:	ldr	x3, [sp, #32]
  417224:	mov	w2, w0
  417228:	ldr	x1, [sp, #40]
  41722c:	mov	w0, w4
  417230:	bl	4048c0 <renameat@plt>
  417234:	cmp	w0, #0x0
  417238:	b.ne	417244 <wcrtomb@plt+0x12534>  // b.any
  41723c:	mov	w0, #0x1                   	// #1
  417240:	b	4172dc <wcrtomb@plt+0x125cc>
  417244:	bl	404bc0 <__errno_location@plt>
  417248:	ldr	w0, [x0]
  41724c:	str	w0, [sp, #60]
  417250:	b	41725c <wcrtomb@plt+0x1254c>
  417254:	nop
  417258:	b	417260 <wcrtomb@plt+0x12550>
  41725c:	nop
  417260:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417264:	add	x0, x0, #0x420
  417268:	ldr	x0, [x0]
  41726c:	cmp	x0, #0x0
  417270:	b.eq	417284 <wcrtomb@plt+0x12574>  // b.none
  417274:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417278:	add	x0, x0, #0x420
  41727c:	ldr	x0, [x0]
  417280:	blr	x0
  417284:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417288:	add	x0, x0, #0x278
  41728c:	bl	404c60 <gettext@plt>
  417290:	mov	x19, x0
  417294:	ldr	x1, [sp, #40]
  417298:	mov	w0, #0x0                   	// #0
  41729c:	bl	459f10 <argp_usage@@Base+0x10e24>
  4172a0:	mov	x20, x0
  4172a4:	ldr	x1, [sp, #32]
  4172a8:	mov	w0, #0x1                   	// #1
  4172ac:	bl	459f10 <argp_usage@@Base+0x10e24>
  4172b0:	mov	x4, x0
  4172b4:	mov	x3, x20
  4172b8:	mov	x2, x19
  4172bc:	ldr	w1, [sp, #60]
  4172c0:	mov	w0, #0x0                   	// #0
  4172c4:	bl	404100 <error@plt>
  4172c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4172cc:	add	x0, x0, #0xdb0
  4172d0:	mov	w1, #0x2                   	// #2
  4172d4:	str	w1, [x0]
  4172d8:	mov	w0, #0x0                   	// #0
  4172dc:	ldp	x19, x20, [sp, #16]
  4172e0:	ldp	x29, x30, [sp], #64
  4172e4:	ret
  4172e8:	stp	x29, x30, [sp, #-80]!
  4172ec:	mov	x29, sp
  4172f0:	str	x0, [sp, #40]
  4172f4:	str	x1, [sp, #32]
  4172f8:	str	x2, [sp, #24]
  4172fc:	ldr	x0, [sp, #40]
  417300:	ldr	x0, [x0]
  417304:	str	x0, [sp, #72]
  417308:	ldr	x0, [sp, #24]
  41730c:	str	x0, [sp, #64]
  417310:	ldr	x0, [sp, #72]
  417314:	str	x0, [sp, #56]
  417318:	ldr	x0, [sp, #56]
  41731c:	ldr	x1, [x0, #32]
  417320:	ldr	x0, [sp, #56]
  417324:	ldr	x0, [x0, #24]
  417328:	sub	x0, x1, x0
  41732c:	mov	x1, x0
  417330:	ldr	x0, [sp, #64]
  417334:	cmp	x1, x0
  417338:	b.cs	417348 <wcrtomb@plt+0x12638>  // b.hs, b.nlast
  41733c:	ldr	x1, [sp, #64]
  417340:	ldr	x0, [sp, #72]
  417344:	bl	45cdc0 <_obstack_newchunk@@Base>
  417348:	ldr	x0, [sp, #72]
  41734c:	ldr	x0, [x0, #24]
  417350:	ldr	x2, [sp, #64]
  417354:	ldr	x1, [sp, #32]
  417358:	bl	404020 <memcpy@plt>
  41735c:	ldr	x0, [sp, #72]
  417360:	ldr	x1, [x0, #24]
  417364:	ldr	x0, [sp, #64]
  417368:	add	x1, x1, x0
  41736c:	ldr	x0, [sp, #72]
  417370:	str	x1, [x0, #24]
  417374:	ldr	x0, [sp, #40]
  417378:	ldr	x1, [x0, #8]
  41737c:	ldr	x0, [sp, #24]
  417380:	add	x1, x1, x0
  417384:	ldr	x0, [sp, #40]
  417388:	str	x1, [x0, #8]
  41738c:	nop
  417390:	ldp	x29, x30, [sp], #80
  417394:	ret
  417398:	stp	x29, x30, [sp, #-48]!
  41739c:	mov	x29, sp
  4173a0:	str	x0, [sp, #24]
  4173a4:	strb	w1, [sp, #23]
  4173a8:	ldr	x0, [sp, #24]
  4173ac:	ldr	x0, [x0]
  4173b0:	str	x0, [sp, #40]
  4173b4:	ldr	x0, [sp, #40]
  4173b8:	str	x0, [sp, #32]
  4173bc:	ldr	x0, [sp, #32]
  4173c0:	ldr	x1, [x0, #32]
  4173c4:	ldr	x0, [sp, #32]
  4173c8:	ldr	x0, [x0, #24]
  4173cc:	sub	x0, x1, x0
  4173d0:	cmp	x0, #0x0
  4173d4:	b.ne	4173e4 <wcrtomb@plt+0x126d4>  // b.any
  4173d8:	mov	x1, #0x1                   	// #1
  4173dc:	ldr	x0, [sp, #40]
  4173e0:	bl	45cdc0 <_obstack_newchunk@@Base>
  4173e4:	ldr	x0, [sp, #40]
  4173e8:	ldr	x0, [x0, #24]
  4173ec:	add	x2, x0, #0x1
  4173f0:	ldr	x1, [sp, #40]
  4173f4:	str	x2, [x1, #24]
  4173f8:	ldrb	w1, [sp, #23]
  4173fc:	strb	w1, [x0]
  417400:	ldr	x0, [sp, #24]
  417404:	ldr	x0, [x0, #8]
  417408:	add	x1, x0, #0x1
  41740c:	ldr	x0, [sp, #24]
  417410:	str	x1, [x0, #8]
  417414:	nop
  417418:	ldp	x29, x30, [sp], #48
  41741c:	ret
  417420:	stp	x29, x30, [sp, #-64]!
  417424:	mov	x29, sp
  417428:	str	x0, [sp, #24]
  41742c:	str	x1, [sp, #16]
  417430:	ldr	x0, [sp, #24]
  417434:	ldr	x0, [x0]
  417438:	str	x0, [sp, #56]
  41743c:	ldr	x0, [sp, #16]
  417440:	str	x0, [sp, #48]
  417444:	ldr	x0, [sp, #56]
  417448:	str	x0, [sp, #40]
  41744c:	ldr	x0, [sp, #40]
  417450:	ldr	x1, [x0, #32]
  417454:	ldr	x0, [sp, #40]
  417458:	ldr	x0, [x0, #24]
  41745c:	sub	x0, x1, x0
  417460:	mov	x1, x0
  417464:	ldr	x0, [sp, #48]
  417468:	cmp	x1, x0
  41746c:	b.cs	41747c <wcrtomb@plt+0x1276c>  // b.hs, b.nlast
  417470:	ldr	x1, [sp, #48]
  417474:	ldr	x0, [sp, #56]
  417478:	bl	45cdc0 <_obstack_newchunk@@Base>
  41747c:	ldr	x0, [sp, #56]
  417480:	ldr	x1, [x0, #24]
  417484:	ldr	x0, [sp, #48]
  417488:	add	x1, x1, x0
  41748c:	ldr	x0, [sp, #56]
  417490:	str	x1, [x0, #24]
  417494:	ldr	x0, [sp, #24]
  417498:	ldr	x1, [x0, #8]
  41749c:	ldr	x0, [sp, #16]
  4174a0:	add	x1, x1, x0
  4174a4:	ldr	x0, [sp, #24]
  4174a8:	str	x1, [x0, #8]
  4174ac:	nop
  4174b0:	ldp	x29, x30, [sp], #64
  4174b4:	ret
  4174b8:	stp	x29, x30, [sp, #-48]!
  4174bc:	mov	x29, sp
  4174c0:	str	x0, [sp, #24]
  4174c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4174c8:	add	x0, x0, #0x870
  4174cc:	ldr	x0, [x0]
  4174d0:	str	x0, [sp, #40]
  4174d4:	b	417508 <wcrtomb@plt+0x127f8>
  4174d8:	ldr	x0, [sp, #40]
  4174dc:	ldr	x0, [x0, #8]
  4174e0:	mov	w2, #0x0                   	// #0
  4174e4:	ldr	x1, [sp, #24]
  4174e8:	bl	404980 <fnmatch@plt>
  4174ec:	cmp	w0, #0x0
  4174f0:	b.ne	4174fc <wcrtomb@plt+0x127ec>  // b.any
  4174f4:	mov	w0, #0x1                   	// #1
  4174f8:	b	417518 <wcrtomb@plt+0x12808>
  4174fc:	ldr	x0, [sp, #40]
  417500:	ldr	x0, [x0]
  417504:	str	x0, [sp, #40]
  417508:	ldr	x0, [sp, #40]
  41750c:	cmp	x0, #0x0
  417510:	b.ne	4174d8 <wcrtomb@plt+0x127c8>  // b.any
  417514:	mov	w0, #0x0                   	// #0
  417518:	ldp	x29, x30, [sp], #48
  41751c:	ret
  417520:	stp	x29, x30, [sp, #-48]!
  417524:	mov	x29, sp
  417528:	str	x0, [sp, #24]
  41752c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417530:	add	x0, x0, #0x880
  417534:	ldr	x0, [x0]
  417538:	str	x0, [sp, #40]
  41753c:	b	41756c <wcrtomb@plt+0x1285c>
  417540:	ldr	x0, [sp, #40]
  417544:	ldr	x0, [x0, #8]
  417548:	ldr	x1, [sp, #24]
  41754c:	bl	4047c0 <strcmp@plt>
  417550:	cmp	w0, #0x0
  417554:	b.ne	417560 <wcrtomb@plt+0x12850>  // b.any
  417558:	mov	w0, #0x1                   	// #1
  41755c:	b	41757c <wcrtomb@plt+0x1286c>
  417560:	ldr	x0, [sp, #40]
  417564:	ldr	x0, [x0]
  417568:	str	x0, [sp, #40]
  41756c:	ldr	x0, [sp, #40]
  417570:	cmp	x0, #0x0
  417574:	b.ne	417540 <wcrtomb@plt+0x12830>  // b.any
  417578:	mov	w0, #0x0                   	// #0
  41757c:	ldp	x29, x30, [sp], #48
  417580:	ret
  417584:	stp	x29, x30, [sp, #-64]!
  417588:	mov	x29, sp
  41758c:	str	x0, [sp, #40]
  417590:	str	x1, [sp, #32]
  417594:	str	x2, [sp, #24]
  417598:	mov	x0, #0x18                  	// #24
  41759c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4175a0:	str	x0, [sp, #56]
  4175a4:	ldr	x0, [sp, #32]
  4175a8:	bl	45b858 <argp_usage@@Base+0x1276c>
  4175ac:	mov	x1, x0
  4175b0:	ldr	x0, [sp, #56]
  4175b4:	str	x1, [x0, #8]
  4175b8:	ldr	x0, [sp, #24]
  4175bc:	cmp	x0, #0x0
  4175c0:	b.eq	4175d4 <wcrtomb@plt+0x128c4>  // b.none
  4175c4:	ldr	x0, [sp, #24]
  4175c8:	bl	45b858 <argp_usage@@Base+0x1276c>
  4175cc:	mov	x1, x0
  4175d0:	b	4175d8 <wcrtomb@plt+0x128c8>
  4175d4:	mov	x1, #0x0                   	// #0
  4175d8:	ldr	x0, [sp, #56]
  4175dc:	str	x1, [x0, #16]
  4175e0:	ldr	x0, [sp, #40]
  4175e4:	ldr	x1, [x0]
  4175e8:	ldr	x0, [sp, #56]
  4175ec:	str	x1, [x0]
  4175f0:	ldr	x0, [sp, #40]
  4175f4:	ldr	x1, [sp, #56]
  4175f8:	str	x1, [x0]
  4175fc:	nop
  417600:	ldp	x29, x30, [sp], #64
  417604:	ret
  417608:	stp	x29, x30, [sp, #-48]!
  41760c:	mov	x29, sp
  417610:	str	x0, [sp, #24]
  417614:	ldr	x0, [sp, #24]
  417618:	cmp	x0, #0x0
  41761c:	b.eq	417678 <wcrtomb@plt+0x12968>  // b.none
  417620:	ldr	x0, [sp, #24]
  417624:	ldr	x0, [x0]
  417628:	str	x0, [sp, #40]
  41762c:	b	417664 <wcrtomb@plt+0x12954>
  417630:	ldr	x0, [sp, #40]
  417634:	ldr	x0, [x0]
  417638:	str	x0, [sp, #32]
  41763c:	ldr	x0, [sp, #40]
  417640:	ldr	x0, [x0, #8]
  417644:	bl	404880 <free@plt>
  417648:	ldr	x0, [sp, #40]
  41764c:	ldr	x0, [x0, #16]
  417650:	bl	404880 <free@plt>
  417654:	ldr	x0, [sp, #40]
  417658:	bl	404880 <free@plt>
  41765c:	ldr	x0, [sp, #32]
  417660:	str	x0, [sp, #40]
  417664:	ldr	x0, [sp, #40]
  417668:	cmp	x0, #0x0
  41766c:	b.ne	417630 <wcrtomb@plt+0x12920>  // b.any
  417670:	ldr	x0, [sp, #24]
  417674:	str	xzr, [x0]
  417678:	nop
  41767c:	ldp	x29, x30, [sp], #48
  417680:	ret
  417684:	stp	x29, x30, [sp, #-32]!
  417688:	mov	x29, sp
  41768c:	str	x0, [sp, #24]
  417690:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417694:	add	x0, x0, #0x420
  417698:	ldr	x0, [x0]
  41769c:	cmp	x0, #0x0
  4176a0:	b.eq	4176b4 <wcrtomb@plt+0x129a4>  // b.none
  4176a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4176a8:	add	x0, x0, #0x420
  4176ac:	ldr	x0, [x0]
  4176b0:	blr	x0
  4176b4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4176b8:	add	x0, x0, #0x290
  4176bc:	bl	404c60 <gettext@plt>
  4176c0:	ldr	x3, [sp, #24]
  4176c4:	mov	x2, x0
  4176c8:	mov	w1, #0x0                   	// #0
  4176cc:	mov	w0, #0x0                   	// #0
  4176d0:	bl	404100 <error@plt>
  4176d4:	mov	w0, #0x2                   	// #2
  4176d8:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4176dc:	stp	x29, x30, [sp, #-80]!
  4176e0:	mov	x29, sp
  4176e4:	str	x0, [sp, #40]
  4176e8:	str	x1, [sp, #32]
  4176ec:	str	x2, [sp, #24]
  4176f0:	add	x0, sp, #0x48
  4176f4:	mov	w2, #0x0                   	// #0
  4176f8:	mov	x1, x0
  4176fc:	ldr	x0, [sp, #24]
  417700:	bl	424a60 <wcrtomb@plt+0x1fd50>
  417704:	stp	x0, x1, [sp, #56]
  417708:	ldp	x0, x1, [sp, #56]
  41770c:	bl	423cbc <wcrtomb@plt+0x1efac>
  417710:	and	w0, w0, #0xff
  417714:	eor	w0, w0, #0x1
  417718:	and	w0, w0, #0xff
  41771c:	cmp	w0, #0x0
  417720:	b.ne	417734 <wcrtomb@plt+0x12a24>  // b.any
  417724:	ldr	x0, [sp, #72]
  417728:	ldrb	w0, [x0]
  41772c:	cmp	w0, #0x0
  417730:	b.eq	417788 <wcrtomb@plt+0x12a78>  // b.none
  417734:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417738:	add	x0, x0, #0x420
  41773c:	ldr	x0, [x0]
  417740:	cmp	x0, #0x0
  417744:	b.eq	417758 <wcrtomb@plt+0x12a48>  // b.none
  417748:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41774c:	add	x0, x0, #0x420
  417750:	ldr	x0, [x0]
  417754:	blr	x0
  417758:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41775c:	add	x0, x0, #0x2c0
  417760:	bl	404c60 <gettext@plt>
  417764:	mov	x2, x0
  417768:	mov	w1, #0x0                   	// #0
  41776c:	mov	w0, #0x0                   	// #0
  417770:	bl	404100 <error@plt>
  417774:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417778:	add	x0, x0, #0xdb0
  41777c:	mov	w1, #0x2                   	// #2
  417780:	str	w1, [x0]
  417784:	b	4177a4 <wcrtomb@plt+0x12a94>
  417788:	ldr	x1, [sp, #56]
  41778c:	ldr	x0, [sp, #32]
  417790:	str	x1, [x0]
  417794:	ldr	x1, [sp, #24]
  417798:	ldr	x0, [sp, #40]
  41779c:	bl	423d0c <wcrtomb@plt+0x1effc>
  4177a0:	nop
  4177a4:	nop
  4177a8:	ldp	x29, x30, [sp], #80
  4177ac:	ret
  4177b0:	stp	x29, x30, [sp, #-64]!
  4177b4:	mov	x29, sp
  4177b8:	str	x19, [sp, #16]
  4177bc:	str	x0, [sp, #40]
  4177c0:	str	x1, [sp, #32]
  4177c4:	mov	w0, #0x1                   	// #1
  4177c8:	strb	w0, [sp, #63]
  4177cc:	ldr	x0, [sp, #32]
  4177d0:	str	x0, [sp, #48]
  4177d4:	ldr	x1, [sp, #32]
  4177d8:	ldr	x0, [sp, #40]
  4177dc:	cmp	x1, x0
  4177e0:	b.ne	41783c <wcrtomb@plt+0x12b2c>  // b.any
  4177e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4177e8:	add	x0, x0, #0x420
  4177ec:	ldr	x0, [x0]
  4177f0:	cmp	x0, #0x0
  4177f4:	b.eq	417808 <wcrtomb@plt+0x12af8>  // b.none
  4177f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4177fc:	add	x0, x0, #0x420
  417800:	ldr	x0, [x0]
  417804:	blr	x0
  417808:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41780c:	add	x0, x0, #0x2e8
  417810:	bl	404c60 <gettext@plt>
  417814:	mov	x19, x0
  417818:	ldr	x0, [sp, #40]
  41781c:	bl	459f38 <argp_usage@@Base+0x10e4c>
  417820:	mov	x3, x0
  417824:	mov	x2, x19
  417828:	mov	w1, #0x0                   	// #0
  41782c:	mov	w0, #0x0                   	// #0
  417830:	bl	404100 <error@plt>
  417834:	mov	w0, #0x2                   	// #2
  417838:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  41783c:	ldr	x0, [sp, #32]
  417840:	sub	x0, x0, #0x1
  417844:	ldrb	w0, [x0]
  417848:	cmp	w0, #0x3a
  41784c:	b.ne	417870 <wcrtomb@plt+0x12b60>  // b.any
  417850:	ldr	x0, [sp, #48]
  417854:	sub	x0, x0, #0x1
  417858:	str	x0, [sp, #48]
  41785c:	strb	wzr, [sp, #63]
  417860:	b	417870 <wcrtomb@plt+0x12b60>
  417864:	ldr	x0, [sp, #48]
  417868:	sub	x0, x0, #0x1
  41786c:	str	x0, [sp, #48]
  417870:	ldr	x1, [sp, #48]
  417874:	ldr	x0, [sp, #40]
  417878:	cmp	x1, x0
  41787c:	b.ls	4178ac <wcrtomb@plt+0x12b9c>  // b.plast
  417880:	bl	4047f0 <__ctype_b_loc@plt>
  417884:	ldr	x1, [x0]
  417888:	ldr	x0, [sp, #48]
  41788c:	ldrb	w0, [x0]
  417890:	and	x0, x0, #0xff
  417894:	lsl	x0, x0, #1
  417898:	add	x0, x1, x0
  41789c:	ldrh	w0, [x0]
  4178a0:	and	w0, w0, #0x2000
  4178a4:	cmp	w0, #0x0
  4178a8:	b.ne	417864 <wcrtomb@plt+0x12b54>  // b.any
  4178ac:	ldr	x0, [sp, #48]
  4178b0:	strb	wzr, [x0]
  4178b4:	ldr	x0, [sp, #32]
  4178b8:	add	x0, x0, #0x1
  4178bc:	str	x0, [sp, #48]
  4178c0:	b	4178d0 <wcrtomb@plt+0x12bc0>
  4178c4:	ldr	x0, [sp, #48]
  4178c8:	add	x0, x0, #0x1
  4178cc:	str	x0, [sp, #48]
  4178d0:	ldr	x0, [sp, #48]
  4178d4:	ldrb	w0, [x0]
  4178d8:	cmp	w0, #0x0
  4178dc:	b.eq	41790c <wcrtomb@plt+0x12bfc>  // b.none
  4178e0:	bl	4047f0 <__ctype_b_loc@plt>
  4178e4:	ldr	x1, [x0]
  4178e8:	ldr	x0, [sp, #48]
  4178ec:	ldrb	w0, [x0]
  4178f0:	and	x0, x0, #0xff
  4178f4:	lsl	x0, x0, #1
  4178f8:	add	x0, x1, x0
  4178fc:	ldrh	w0, [x0]
  417900:	and	w0, w0, #0x2000
  417904:	cmp	w0, #0x0
  417908:	b.ne	4178c4 <wcrtomb@plt+0x12bb4>  // b.any
  41790c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417910:	add	x1, x0, #0x308
  417914:	ldr	x0, [sp, #40]
  417918:	bl	4047c0 <strcmp@plt>
  41791c:	cmp	w0, #0x0
  417920:	b.ne	4179a8 <wcrtomb@plt+0x12c98>  // b.any
  417924:	ldr	x0, [sp, #48]
  417928:	bl	418944 <wcrtomb@plt+0x13c34>
  41792c:	and	w0, w0, #0xff
  417930:	cmp	w0, #0x0
  417934:	b.eq	417990 <wcrtomb@plt+0x12c80>  // b.none
  417938:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41793c:	add	x0, x0, #0x420
  417940:	ldr	x0, [x0]
  417944:	cmp	x0, #0x0
  417948:	b.eq	41795c <wcrtomb@plt+0x12c4c>  // b.none
  41794c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417950:	add	x0, x0, #0x420
  417954:	ldr	x0, [x0]
  417958:	blr	x0
  41795c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417960:	add	x0, x0, #0x310
  417964:	bl	404c60 <gettext@plt>
  417968:	mov	x19, x0
  41796c:	ldr	x0, [sp, #48]
  417970:	bl	459f38 <argp_usage@@Base+0x10e4c>
  417974:	mov	x3, x0
  417978:	mov	x2, x19
  41797c:	mov	w1, #0x0                   	// #0
  417980:	mov	w0, #0x0                   	// #0
  417984:	bl	404100 <error@plt>
  417988:	mov	w0, #0x2                   	// #2
  41798c:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  417990:	mov	x2, #0x0                   	// #0
  417994:	ldr	x1, [sp, #48]
  417998:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41799c:	add	x0, x0, #0x870
  4179a0:	bl	417584 <wcrtomb@plt+0x12874>
  4179a4:	b	417b00 <wcrtomb@plt+0x12df0>
  4179a8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4179ac:	add	x1, x0, #0x330
  4179b0:	ldr	x0, [sp, #40]
  4179b4:	bl	4047c0 <strcmp@plt>
  4179b8:	cmp	w0, #0x0
  4179bc:	b.ne	4179d4 <wcrtomb@plt+0x12cc4>  // b.any
  4179c0:	ldr	x1, [sp, #48]
  4179c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4179c8:	add	x0, x0, #0x890
  4179cc:	bl	423d0c <wcrtomb@plt+0x1effc>
  4179d0:	b	417b00 <wcrtomb@plt+0x12df0>
  4179d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4179d8:	add	x1, x0, #0x340
  4179dc:	ldr	x0, [sp, #40]
  4179e0:	bl	4047c0 <strcmp@plt>
  4179e4:	cmp	w0, #0x0
  4179e8:	b.ne	417a00 <wcrtomb@plt+0x12cf0>  // b.any
  4179ec:	ldr	x1, [sp, #48]
  4179f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4179f4:	add	x0, x0, #0x8a8
  4179f8:	bl	423d0c <wcrtomb@plt+0x1effc>
  4179fc:	b	417b00 <wcrtomb@plt+0x12df0>
  417a00:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417a04:	add	x1, x0, #0x350
  417a08:	ldr	x0, [sp, #40]
  417a0c:	bl	4047c0 <strcmp@plt>
  417a10:	cmp	w0, #0x0
  417a14:	b.ne	417a34 <wcrtomb@plt+0x12d24>  // b.any
  417a18:	ldr	x2, [sp, #48]
  417a1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417a20:	add	x1, x0, #0x8a0
  417a24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417a28:	add	x0, x0, #0x898
  417a2c:	bl	4176dc <wcrtomb@plt+0x129cc>
  417a30:	b	417b00 <wcrtomb@plt+0x12df0>
  417a34:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417a38:	add	x1, x0, #0x360
  417a3c:	ldr	x0, [sp, #40]
  417a40:	bl	4047c0 <strcmp@plt>
  417a44:	cmp	w0, #0x0
  417a48:	b.ne	417a68 <wcrtomb@plt+0x12d58>  // b.any
  417a4c:	ldr	x2, [sp, #48]
  417a50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417a54:	add	x1, x0, #0x8b8
  417a58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417a5c:	add	x0, x0, #0x8b0
  417a60:	bl	4176dc <wcrtomb@plt+0x129cc>
  417a64:	b	417b00 <wcrtomb@plt+0x12df0>
  417a68:	ldr	x0, [sp, #40]
  417a6c:	bl	4189dc <wcrtomb@plt+0x13ccc>
  417a70:	and	w0, w0, #0xff
  417a74:	cmp	w0, #0x0
  417a78:	b.eq	417ac8 <wcrtomb@plt+0x12db8>  // b.none
  417a7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417a80:	add	x0, x0, #0x420
  417a84:	ldr	x0, [x0]
  417a88:	cmp	x0, #0x0
  417a8c:	b.eq	417aa0 <wcrtomb@plt+0x12d90>  // b.none
  417a90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417a94:	add	x0, x0, #0x420
  417a98:	ldr	x0, [x0]
  417a9c:	blr	x0
  417aa0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417aa4:	add	x0, x0, #0x378
  417aa8:	bl	404c60 <gettext@plt>
  417aac:	ldr	x3, [sp, #40]
  417ab0:	mov	x2, x0
  417ab4:	mov	w1, #0x0                   	// #0
  417ab8:	mov	w0, #0x0                   	// #0
  417abc:	bl	404100 <error@plt>
  417ac0:	mov	w0, #0x2                   	// #2
  417ac4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  417ac8:	ldrb	w0, [sp, #63]
  417acc:	cmp	w0, #0x0
  417ad0:	b.eq	417aec <wcrtomb@plt+0x12ddc>  // b.none
  417ad4:	ldr	x2, [sp, #48]
  417ad8:	ldr	x1, [sp, #40]
  417adc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417ae0:	add	x0, x0, #0x878
  417ae4:	bl	417584 <wcrtomb@plt+0x12874>
  417ae8:	b	417b00 <wcrtomb@plt+0x12df0>
  417aec:	ldr	x2, [sp, #48]
  417af0:	ldr	x1, [sp, #40]
  417af4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417af8:	add	x0, x0, #0x880
  417afc:	bl	417584 <wcrtomb@plt+0x12874>
  417b00:	nop
  417b04:	ldr	x19, [sp, #16]
  417b08:	ldp	x29, x30, [sp], #64
  417b0c:	ret
  417b10:	stp	x29, x30, [sp, #-48]!
  417b14:	mov	x29, sp
  417b18:	str	x0, [sp, #24]
  417b1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417b20:	add	x1, x0, #0x398
  417b24:	ldr	x0, [sp, #24]
  417b28:	bl	404080 <strtok@plt>
  417b2c:	str	x0, [sp, #40]
  417b30:	b	417b78 <wcrtomb@plt+0x12e68>
  417b34:	mov	w1, #0x3d                  	// #61
  417b38:	ldr	x0, [sp, #40]
  417b3c:	bl	404930 <strchr@plt>
  417b40:	str	x0, [sp, #32]
  417b44:	ldr	x0, [sp, #32]
  417b48:	cmp	x0, #0x0
  417b4c:	b.ne	417b58 <wcrtomb@plt+0x12e48>  // b.any
  417b50:	ldr	x0, [sp, #40]
  417b54:	bl	417684 <wcrtomb@plt+0x12974>
  417b58:	ldr	x1, [sp, #32]
  417b5c:	ldr	x0, [sp, #40]
  417b60:	bl	4177b0 <wcrtomb@plt+0x12aa0>
  417b64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417b68:	add	x1, x0, #0x398
  417b6c:	mov	x0, #0x0                   	// #0
  417b70:	bl	404080 <strtok@plt>
  417b74:	str	x0, [sp, #40]
  417b78:	ldr	x0, [sp, #40]
  417b7c:	cmp	x0, #0x0
  417b80:	b.ne	417b34 <wcrtomb@plt+0x12e24>  // b.any
  417b84:	nop
  417b88:	nop
  417b8c:	ldp	x29, x30, [sp], #48
  417b90:	ret
  417b94:	stp	x29, x30, [sp, #-176]!
  417b98:	mov	x29, sp
  417b9c:	str	x0, [sp, #40]
  417ba0:	str	x1, [sp, #32]
  417ba4:	str	x2, [sp, #24]
  417ba8:	str	xzr, [sp, #144]
  417bac:	str	xzr, [sp, #136]
  417bb0:	str	xzr, [sp, #128]
  417bb4:	str	xzr, [sp, #120]
  417bb8:	str	xzr, [sp, #112]
  417bbc:	str	xzr, [sp, #168]
  417bc0:	ldr	x0, [sp, #32]
  417bc4:	str	x0, [sp, #152]
  417bc8:	b	417d9c <wcrtomb@plt+0x1308c>
  417bcc:	ldr	x0, [sp, #152]
  417bd0:	ldrb	w0, [x0]
  417bd4:	cmp	w0, #0x25
  417bd8:	b.ne	417d84 <wcrtomb@plt+0x13074>  // b.any
  417bdc:	ldr	x0, [sp, #152]
  417be0:	add	x0, x0, #0x1
  417be4:	ldrb	w0, [x0]
  417be8:	cmp	w0, #0x0
  417bec:	b.eq	417d84 <wcrtomb@plt+0x13074>  // b.none
  417bf0:	ldr	x0, [sp, #152]
  417bf4:	add	x0, x0, #0x1
  417bf8:	str	x0, [sp, #152]
  417bfc:	ldr	x0, [sp, #152]
  417c00:	ldrb	w0, [x0]
  417c04:	cmp	w0, #0x70
  417c08:	b.eq	417cf4 <wcrtomb@plt+0x12fe4>  // b.none
  417c0c:	cmp	w0, #0x70
  417c10:	b.gt	417d64 <wcrtomb@plt+0x13054>
  417c14:	cmp	w0, #0x6e
  417c18:	b.eq	417d2c <wcrtomb@plt+0x1301c>  // b.none
  417c1c:	cmp	w0, #0x6e
  417c20:	b.gt	417d64 <wcrtomb@plt+0x13054>
  417c24:	cmp	w0, #0x66
  417c28:	b.eq	417cbc <wcrtomb@plt+0x12fac>  // b.none
  417c2c:	cmp	w0, #0x66
  417c30:	b.gt	417d64 <wcrtomb@plt+0x13054>
  417c34:	cmp	w0, #0x25
  417c38:	b.eq	417c48 <wcrtomb@plt+0x12f38>  // b.none
  417c3c:	cmp	w0, #0x64
  417c40:	b.eq	417c58 <wcrtomb@plt+0x12f48>  // b.none
  417c44:	b	417d64 <wcrtomb@plt+0x13054>
  417c48:	ldr	x0, [sp, #168]
  417c4c:	add	x0, x0, #0x1
  417c50:	str	x0, [sp, #168]
  417c54:	b	417d80 <wcrtomb@plt+0x13070>
  417c58:	ldr	x0, [sp, #40]
  417c5c:	cmp	x0, #0x0
  417c60:	b.eq	417d74 <wcrtomb@plt+0x13064>  // b.none
  417c64:	ldr	x0, [sp, #144]
  417c68:	cmp	x0, #0x0
  417c6c:	b.ne	417c80 <wcrtomb@plt+0x12f70>  // b.any
  417c70:	ldr	x0, [sp, #40]
  417c74:	ldr	x0, [x0]
  417c78:	bl	449ecc <argp_usage@@Base+0xde0>
  417c7c:	str	x0, [sp, #144]
  417c80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  417c84:	add	x0, x0, #0x3e8
  417c88:	ldrb	w0, [x0]
  417c8c:	mov	w2, w0
  417c90:	mov	w1, #0x0                   	// #0
  417c94:	ldr	x0, [sp, #144]
  417c98:	bl	43afc0 <wcrtomb@plt+0x362b0>
  417c9c:	str	x0, [sp, #136]
  417ca0:	ldr	x0, [sp, #136]
  417ca4:	bl	4040b0 <strlen@plt>
  417ca8:	mov	x1, x0
  417cac:	ldr	x0, [sp, #168]
  417cb0:	add	x0, x0, x1
  417cb4:	str	x0, [sp, #168]
  417cb8:	b	417d74 <wcrtomb@plt+0x13064>
  417cbc:	ldr	x0, [sp, #40]
  417cc0:	cmp	x0, #0x0
  417cc4:	b.eq	417d7c <wcrtomb@plt+0x1306c>  // b.none
  417cc8:	ldr	x0, [sp, #40]
  417ccc:	ldr	x0, [x0]
  417cd0:	bl	44a0e0 <argp_usage@@Base+0xff4>
  417cd4:	str	x0, [sp, #128]
  417cd8:	ldr	x0, [sp, #128]
  417cdc:	bl	4040b0 <strlen@plt>
  417ce0:	mov	x1, x0
  417ce4:	ldr	x0, [sp, #168]
  417ce8:	add	x0, x0, x1
  417cec:	str	x0, [sp, #168]
  417cf0:	b	417d7c <wcrtomb@plt+0x1306c>
  417cf4:	bl	4043b0 <getpid@plt>
  417cf8:	sxtw	x0, w0
  417cfc:	add	x1, sp, #0x50
  417d00:	bl	450988 <argp_usage@@Base+0x789c>
  417d04:	str	x0, [sp, #120]
  417d08:	add	x0, sp, #0x50
  417d0c:	add	x0, x0, #0x14
  417d10:	ldr	x1, [sp, #120]
  417d14:	sub	x0, x0, x1
  417d18:	mov	x1, x0
  417d1c:	ldr	x0, [sp, #168]
  417d20:	add	x0, x0, x1
  417d24:	str	x0, [sp, #168]
  417d28:	b	417d80 <wcrtomb@plt+0x13070>
  417d2c:	add	x0, sp, #0x38
  417d30:	mov	x1, x0
  417d34:	ldr	x0, [sp, #24]
  417d38:	bl	450988 <argp_usage@@Base+0x789c>
  417d3c:	str	x0, [sp, #112]
  417d40:	add	x0, sp, #0x38
  417d44:	add	x0, x0, #0x14
  417d48:	ldr	x1, [sp, #112]
  417d4c:	sub	x0, x0, x1
  417d50:	mov	x1, x0
  417d54:	ldr	x0, [sp, #168]
  417d58:	add	x0, x0, x1
  417d5c:	str	x0, [sp, #168]
  417d60:	b	417d80 <wcrtomb@plt+0x13070>
  417d64:	ldr	x0, [sp, #168]
  417d68:	add	x0, x0, #0x2
  417d6c:	str	x0, [sp, #168]
  417d70:	b	417d90 <wcrtomb@plt+0x13080>
  417d74:	nop
  417d78:	b	417d90 <wcrtomb@plt+0x13080>
  417d7c:	nop
  417d80:	b	417d90 <wcrtomb@plt+0x13080>
  417d84:	ldr	x0, [sp, #168]
  417d88:	add	x0, x0, #0x1
  417d8c:	str	x0, [sp, #168]
  417d90:	ldr	x0, [sp, #152]
  417d94:	add	x0, x0, #0x1
  417d98:	str	x0, [sp, #152]
  417d9c:	ldr	x0, [sp, #152]
  417da0:	ldrb	w0, [x0]
  417da4:	cmp	w0, #0x0
  417da8:	b.ne	417bcc <wcrtomb@plt+0x12ebc>  // b.any
  417dac:	ldr	x0, [sp, #168]
  417db0:	add	x0, x0, #0x1
  417db4:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  417db8:	str	x0, [sp, #104]
  417dbc:	ldr	x0, [sp, #104]
  417dc0:	str	x0, [sp, #160]
  417dc4:	ldr	x0, [sp, #32]
  417dc8:	str	x0, [sp, #152]
  417dcc:	b	417f6c <wcrtomb@plt+0x1325c>
  417dd0:	ldr	x0, [sp, #152]
  417dd4:	ldrb	w0, [x0]
  417dd8:	cmp	w0, #0x25
  417ddc:	b.ne	417f4c <wcrtomb@plt+0x1323c>  // b.any
  417de0:	ldr	x0, [sp, #152]
  417de4:	add	x0, x0, #0x1
  417de8:	ldrb	w0, [x0]
  417dec:	cmp	w0, #0x70
  417df0:	b.eq	417eb8 <wcrtomb@plt+0x131a8>  // b.none
  417df4:	cmp	w0, #0x70
  417df8:	b.gt	417ef8 <wcrtomb@plt+0x131e8>
  417dfc:	cmp	w0, #0x6e
  417e00:	b.eq	417ed8 <wcrtomb@plt+0x131c8>  // b.none
  417e04:	cmp	w0, #0x6e
  417e08:	b.gt	417ef8 <wcrtomb@plt+0x131e8>
  417e0c:	cmp	w0, #0x66
  417e10:	b.eq	417e8c <wcrtomb@plt+0x1317c>  // b.none
  417e14:	cmp	w0, #0x66
  417e18:	b.gt	417ef8 <wcrtomb@plt+0x131e8>
  417e1c:	cmp	w0, #0x25
  417e20:	b.eq	417e30 <wcrtomb@plt+0x13120>  // b.none
  417e24:	cmp	w0, #0x64
  417e28:	b.eq	417e60 <wcrtomb@plt+0x13150>  // b.none
  417e2c:	b	417ef8 <wcrtomb@plt+0x131e8>
  417e30:	ldr	x1, [sp, #152]
  417e34:	add	x0, x1, #0x1
  417e38:	str	x0, [sp, #152]
  417e3c:	ldr	x0, [sp, #160]
  417e40:	add	x2, x0, #0x1
  417e44:	str	x2, [sp, #160]
  417e48:	ldrb	w1, [x1]
  417e4c:	strb	w1, [x0]
  417e50:	ldr	x0, [sp, #152]
  417e54:	add	x0, x0, #0x1
  417e58:	str	x0, [sp, #152]
  417e5c:	b	417f6c <wcrtomb@plt+0x1325c>
  417e60:	ldr	x0, [sp, #136]
  417e64:	cmp	x0, #0x0
  417e68:	b.eq	417e7c <wcrtomb@plt+0x1316c>  // b.none
  417e6c:	ldr	x1, [sp, #136]
  417e70:	ldr	x0, [sp, #160]
  417e74:	bl	404310 <stpcpy@plt>
  417e78:	str	x0, [sp, #160]
  417e7c:	ldr	x0, [sp, #152]
  417e80:	add	x0, x0, #0x2
  417e84:	str	x0, [sp, #152]
  417e88:	b	417f6c <wcrtomb@plt+0x1325c>
  417e8c:	ldr	x0, [sp, #128]
  417e90:	cmp	x0, #0x0
  417e94:	b.eq	417ea8 <wcrtomb@plt+0x13198>  // b.none
  417e98:	ldr	x1, [sp, #128]
  417e9c:	ldr	x0, [sp, #160]
  417ea0:	bl	404310 <stpcpy@plt>
  417ea4:	str	x0, [sp, #160]
  417ea8:	ldr	x0, [sp, #152]
  417eac:	add	x0, x0, #0x2
  417eb0:	str	x0, [sp, #152]
  417eb4:	b	417f6c <wcrtomb@plt+0x1325c>
  417eb8:	ldr	x1, [sp, #120]
  417ebc:	ldr	x0, [sp, #160]
  417ec0:	bl	404310 <stpcpy@plt>
  417ec4:	str	x0, [sp, #160]
  417ec8:	ldr	x0, [sp, #152]
  417ecc:	add	x0, x0, #0x2
  417ed0:	str	x0, [sp, #152]
  417ed4:	b	417f6c <wcrtomb@plt+0x1325c>
  417ed8:	ldr	x1, [sp, #112]
  417edc:	ldr	x0, [sp, #160]
  417ee0:	bl	404310 <stpcpy@plt>
  417ee4:	str	x0, [sp, #160]
  417ee8:	ldr	x0, [sp, #152]
  417eec:	add	x0, x0, #0x2
  417ef0:	str	x0, [sp, #152]
  417ef4:	b	417f6c <wcrtomb@plt+0x1325c>
  417ef8:	ldr	x1, [sp, #152]
  417efc:	add	x0, x1, #0x1
  417f00:	str	x0, [sp, #152]
  417f04:	ldr	x0, [sp, #160]
  417f08:	add	x2, x0, #0x1
  417f0c:	str	x2, [sp, #160]
  417f10:	ldrb	w1, [x1]
  417f14:	strb	w1, [x0]
  417f18:	ldr	x0, [sp, #152]
  417f1c:	ldrb	w0, [x0]
  417f20:	cmp	w0, #0x0
  417f24:	b.eq	417f6c <wcrtomb@plt+0x1325c>  // b.none
  417f28:	ldr	x1, [sp, #152]
  417f2c:	add	x0, x1, #0x1
  417f30:	str	x0, [sp, #152]
  417f34:	ldr	x0, [sp, #160]
  417f38:	add	x2, x0, #0x1
  417f3c:	str	x2, [sp, #160]
  417f40:	ldrb	w1, [x1]
  417f44:	strb	w1, [x0]
  417f48:	b	417f6c <wcrtomb@plt+0x1325c>
  417f4c:	ldr	x1, [sp, #152]
  417f50:	add	x0, x1, #0x1
  417f54:	str	x0, [sp, #152]
  417f58:	ldr	x0, [sp, #160]
  417f5c:	add	x2, x0, #0x1
  417f60:	str	x2, [sp, #160]
  417f64:	ldrb	w1, [x1]
  417f68:	strb	w1, [x0]
  417f6c:	ldr	x0, [sp, #152]
  417f70:	ldrb	w0, [x0]
  417f74:	cmp	w0, #0x0
  417f78:	b.ne	417dd0 <wcrtomb@plt+0x130c0>  // b.any
  417f7c:	ldr	x0, [sp, #144]
  417f80:	bl	404880 <free@plt>
  417f84:	b	417f94 <wcrtomb@plt+0x13284>
  417f88:	ldr	x0, [sp, #160]
  417f8c:	sub	x0, x0, #0x1
  417f90:	str	x0, [sp, #160]
  417f94:	ldr	x1, [sp, #160]
  417f98:	ldr	x0, [sp, #104]
  417f9c:	cmp	x1, x0
  417fa0:	b.ls	417fb8 <wcrtomb@plt+0x132a8>  // b.plast
  417fa4:	ldr	x0, [sp, #160]
  417fa8:	sub	x0, x0, #0x1
  417fac:	ldrb	w0, [x0]
  417fb0:	cmp	w0, #0x2f
  417fb4:	b.eq	417f88 <wcrtomb@plt+0x13278>  // b.none
  417fb8:	ldr	x0, [sp, #160]
  417fbc:	strb	wzr, [x0]
  417fc0:	ldr	x0, [sp, #104]
  417fc4:	ldp	x29, x30, [sp], #176
  417fc8:	ret
  417fcc:	stp	x29, x30, [sp, #-32]!
  417fd0:	mov	x29, sp
  417fd4:	str	x0, [sp, #24]
  417fd8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417fdc:	add	x0, x0, #0x890
  417fe0:	ldr	x0, [x0]
  417fe4:	cmp	x0, #0x0
  417fe8:	b.ne	418000 <wcrtomb@plt+0x132f0>  // b.any
  417fec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  417ff0:	add	x1, x0, #0x3a0
  417ff4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  417ff8:	add	x0, x0, #0x890
  417ffc:	bl	423d0c <wcrtomb@plt+0x1effc>
  418000:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418004:	add	x0, x0, #0x890
  418008:	ldr	x0, [x0]
  41800c:	mov	x2, #0x0                   	// #0
  418010:	mov	x1, x0
  418014:	ldr	x0, [sp, #24]
  418018:	bl	417b94 <wcrtomb@plt+0x12e84>
  41801c:	ldp	x29, x30, [sp], #32
  418020:	ret
  418024:	stp	x29, x30, [sp, #-48]!
  418028:	mov	x29, sp
  41802c:	str	x19, [sp, #16]
  418030:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418034:	add	x0, x0, #0x8a8
  418038:	ldr	x0, [x0]
  41803c:	cmp	x0, #0x0
  418040:	b.ne	4180e0 <wcrtomb@plt+0x133d0>  // b.any
  418044:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418048:	add	x0, x0, #0x3b8
  41804c:	bl	404bf0 <getenv@plt>
  418050:	str	x0, [sp, #40]
  418054:	ldr	x0, [sp, #40]
  418058:	cmp	x0, #0x0
  41805c:	b.ne	41806c <wcrtomb@plt+0x1335c>  // b.any
  418060:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418064:	add	x0, x0, #0x3c0
  418068:	str	x0, [sp, #40]
  41806c:	ldr	x0, [sp, #40]
  418070:	bl	4040b0 <strlen@plt>
  418074:	add	x0, x0, #0x12
  418078:	str	x0, [sp, #32]
  41807c:	ldr	x0, [sp, #32]
  418080:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  418084:	mov	x1, x0
  418088:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41808c:	add	x0, x0, #0x8a8
  418090:	str	x1, [x0]
  418094:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418098:	add	x0, x0, #0x8a8
  41809c:	ldr	x0, [x0]
  4180a0:	ldr	x1, [sp, #40]
  4180a4:	bl	4049d0 <strcpy@plt>
  4180a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4180ac:	add	x0, x0, #0x8a8
  4180b0:	ldr	x19, [x0]
  4180b4:	mov	x0, x19
  4180b8:	bl	4040b0 <strlen@plt>
  4180bc:	add	x1, x19, x0
  4180c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4180c4:	add	x0, x0, #0x3c8
  4180c8:	mov	x2, x1
  4180cc:	mov	x3, x0
  4180d0:	ldp	x0, x1, [x3]
  4180d4:	stp	x0, x1, [x2]
  4180d8:	ldrh	w0, [x3, #16]
  4180dc:	strh	w0, [x2, #16]
  4180e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4180e4:	add	x0, x0, #0x8a8
  4180e8:	ldr	x1, [x0]
  4180ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4180f0:	add	x0, x0, #0x868
  4180f4:	ldr	x0, [x0]
  4180f8:	add	x0, x0, #0x1
  4180fc:	mov	x2, x0
  418100:	mov	x0, #0x0                   	// #0
  418104:	bl	417b94 <wcrtomb@plt+0x12e84>
  418108:	ldr	x19, [sp, #16]
  41810c:	ldp	x29, x30, [sp], #48
  418110:	ret
  418114:	stp	x29, x30, [sp, #-80]!
  418118:	mov	x29, sp
  41811c:	strb	w0, [sp, #47]
  418120:	str	x1, [sp, #32]
  418124:	str	x2, [sp, #24]
  418128:	str	x3, [sp, #16]
  41812c:	ldr	x0, [sp, #16]
  418130:	ldr	x0, [x0, #8]
  418134:	str	x0, [sp, #72]
  418138:	ldrb	w0, [sp, #47]
  41813c:	cmp	w0, #0x67
  418140:	b.eq	418150 <wcrtomb@plt+0x13440>  // b.none
  418144:	cmp	w0, #0x78
  418148:	b.eq	418178 <wcrtomb@plt+0x13468>  // b.none
  41814c:	b	4181ac <wcrtomb@plt+0x1349c>
  418150:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418154:	add	x0, x0, #0x8b0
  418158:	ldr	x0, [x0]
  41815c:	cmp	x0, #0x0
  418160:	b.eq	4181a0 <wcrtomb@plt+0x13490>  // b.none
  418164:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418168:	add	x0, x0, #0x8b8
  41816c:	ldr	x0, [x0]
  418170:	str	x0, [sp, #24]
  418174:	b	4181a0 <wcrtomb@plt+0x13490>
  418178:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41817c:	add	x0, x0, #0x898
  418180:	ldr	x0, [x0]
  418184:	cmp	x0, #0x0
  418188:	b.eq	4181a8 <wcrtomb@plt+0x13498>  // b.none
  41818c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418190:	add	x0, x0, #0x8a0
  418194:	ldr	x0, [x0]
  418198:	str	x0, [sp, #24]
  41819c:	b	4181a8 <wcrtomb@plt+0x13498>
  4181a0:	nop
  4181a4:	b	4181ac <wcrtomb@plt+0x1349c>
  4181a8:	nop
  4181ac:	ldr	x2, [sp, #24]
  4181b0:	ldr	x1, [sp, #72]
  4181b4:	ldr	x0, [sp, #32]
  4181b8:	bl	40dfbc <wcrtomb@plt+0x92ac>
  4181bc:	str	x0, [sp, #48]
  4181c0:	ldr	x0, [sp, #48]
  4181c4:	ldrb	w1, [sp, #47]
  4181c8:	strb	w1, [x0, #156]
  4181cc:	ldr	x0, [sp, #48]
  4181d0:	bl	40f414 <wcrtomb@plt+0xa704>
  4181d4:	ldr	x0, [sp, #16]
  4181d8:	ldr	x0, [x0, #16]
  4181dc:	str	x0, [sp, #64]
  4181e0:	bl	406030 <wcrtomb@plt+0x1320>
  4181e4:	str	x0, [sp, #48]
  4181e8:	mov	x0, #0x200                 	// #512
  4181ec:	str	x0, [sp, #56]
  4181f0:	ldr	x1, [sp, #56]
  4181f4:	ldr	x0, [sp, #72]
  4181f8:	cmp	x1, x0
  4181fc:	b.ls	418208 <wcrtomb@plt+0x134f8>  // b.plast
  418200:	ldr	x0, [sp, #72]
  418204:	str	x0, [sp, #56]
  418208:	ldr	x0, [sp, #48]
  41820c:	ldr	x2, [sp, #56]
  418210:	ldr	x1, [sp, #64]
  418214:	bl	404020 <memcpy@plt>
  418218:	ldr	x0, [sp, #56]
  41821c:	cmp	x0, #0x1ff
  418220:	b.hi	41824c <wcrtomb@plt+0x1353c>  // b.pmore
  418224:	ldr	x1, [sp, #48]
  418228:	ldr	x0, [sp, #56]
  41822c:	add	x3, x1, x0
  418230:	mov	x1, #0x200                 	// #512
  418234:	ldr	x0, [sp, #56]
  418238:	sub	x0, x1, x0
  41823c:	mov	x2, x0
  418240:	mov	w1, #0x0                   	// #0
  418244:	mov	x0, x3
  418248:	bl	4044d0 <memset@plt>
  41824c:	ldr	x1, [sp, #64]
  418250:	ldr	x0, [sp, #56]
  418254:	add	x0, x1, x0
  418258:	str	x0, [sp, #64]
  41825c:	ldr	x1, [sp, #72]
  418260:	ldr	x0, [sp, #56]
  418264:	sub	x0, x1, x0
  418268:	str	x0, [sp, #72]
  41826c:	ldr	x0, [sp, #48]
  418270:	bl	4060c4 <wcrtomb@plt+0x13b4>
  418274:	ldr	x0, [sp, #72]
  418278:	cmp	x0, #0x0
  41827c:	b.ne	4181e0 <wcrtomb@plt+0x134d0>  // b.any
  418280:	ldr	x0, [sp, #16]
  418284:	bl	419804 <wcrtomb@plt+0x14af4>
  418288:	ldrb	w0, [sp, #47]
  41828c:	cmp	w0, #0x67
  418290:	b.ne	4182b0 <wcrtomb@plt+0x135a0>  // b.any
  418294:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418298:	add	x0, x0, #0x868
  41829c:	ldr	x0, [x0]
  4182a0:	add	x1, x0, #0x1
  4182a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4182a8:	add	x0, x0, #0x868
  4182ac:	str	x1, [x0]
  4182b0:	nop
  4182b4:	ldp	x29, x30, [sp], #80
  4182b8:	ret
  4182bc:	stp	x29, x30, [sp, #-48]!
  4182c0:	mov	x29, sp
  4182c4:	str	x0, [sp, #24]
  4182c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4182cc:	add	x0, x0, #0x878
  4182d0:	ldr	x0, [x0]
  4182d4:	cmp	x0, #0x0
  4182d8:	b.eq	418330 <wcrtomb@plt+0x13620>  // b.none
  4182dc:	ldr	x0, [sp, #24]
  4182e0:	bl	419180 <wcrtomb@plt+0x14470>
  4182e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4182e8:	add	x0, x0, #0x878
  4182ec:	ldr	x0, [x0]
  4182f0:	str	x0, [sp, #40]
  4182f4:	b	418324 <wcrtomb@plt+0x13614>
  4182f8:	ldr	x0, [sp, #40]
  4182fc:	ldr	x3, [x0, #16]
  418300:	ldr	x0, [sp, #40]
  418304:	ldr	x0, [x0, #8]
  418308:	ldr	x2, [sp, #24]
  41830c:	mov	x1, x0
  418310:	mov	x0, x3
  418314:	bl	419d1c <wcrtomb@plt+0x1500c>
  418318:	ldr	x0, [sp, #40]
  41831c:	ldr	x0, [x0]
  418320:	str	x0, [sp, #40]
  418324:	ldr	x0, [sp, #40]
  418328:	cmp	x0, #0x0
  41832c:	b.ne	4182f8 <wcrtomb@plt+0x135e8>  // b.any
  418330:	ldr	x0, [sp, #24]
  418334:	ldr	x0, [x0]
  418338:	cmp	x0, #0x0
  41833c:	b.eq	418378 <wcrtomb@plt+0x13668>  // b.none
  418340:	ldr	x0, [sp, #24]
  418344:	bl	4196d0 <wcrtomb@plt+0x149c0>
  418348:	bl	418024 <wcrtomb@plt+0x13314>
  41834c:	str	x0, [sp, #32]
  418350:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418354:	add	x0, x0, #0x2f8
  418358:	ldr	x0, [x0]
  41835c:	ldr	x3, [sp, #24]
  418360:	mov	x2, x0
  418364:	ldr	x1, [sp, #32]
  418368:	mov	w0, #0x67                  	// #103
  41836c:	bl	418114 <wcrtomb@plt+0x13404>
  418370:	ldr	x0, [sp, #32]
  418374:	bl	404880 <free@plt>
  418378:	nop
  41837c:	ldp	x29, x30, [sp], #48
  418380:	ret
  418384:	stp	x29, x30, [sp, #-16]!
  418388:	mov	x29, sp
  41838c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418390:	add	x0, x0, #0x878
  418394:	ldr	x0, [x0]
  418398:	cmp	x0, #0x0
  41839c:	b.eq	4183e8 <wcrtomb@plt+0x136d8>  // b.none
  4183a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4183a4:	add	x0, x0, #0x420
  4183a8:	ldr	x0, [x0]
  4183ac:	cmp	x0, #0x0
  4183b0:	b.eq	4183c4 <wcrtomb@plt+0x136b4>  // b.none
  4183b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4183b8:	add	x0, x0, #0x420
  4183bc:	ldr	x0, [x0]
  4183c0:	blr	x0
  4183c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4183c8:	add	x0, x0, #0x3e0
  4183cc:	bl	404c60 <gettext@plt>
  4183d0:	mov	x2, x0
  4183d4:	mov	w1, #0x0                   	// #0
  4183d8:	mov	w0, #0x0                   	// #0
  4183dc:	bl	404100 <error@plt>
  4183e0:	mov	w0, #0x2                   	// #2
  4183e4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4183e8:	nop
  4183ec:	ldp	x29, x30, [sp], #16
  4183f0:	ret
  4183f4:	sub	sp, sp, #0x10
  4183f8:	str	x0, [sp, #8]
  4183fc:	ldr	x0, [sp, #8]
  418400:	str	xzr, [x0, #336]
  418404:	ldr	x0, [sp, #8]
  418408:	str	xzr, [x0, #328]
  41840c:	ldr	x0, [sp, #8]
  418410:	str	xzr, [x0, #56]
  418414:	ldr	x0, [sp, #8]
  418418:	str	xzr, [x0, #64]
  41841c:	ldr	x0, [sp, #8]
  418420:	str	xzr, [x0, #72]
  418424:	ldr	x0, [sp, #8]
  418428:	str	xzr, [x0, #80]
  41842c:	ldr	x0, [sp, #8]
  418430:	str	xzr, [x0, #48]
  418434:	nop
  418438:	add	sp, sp, #0x10
  41843c:	ret
  418440:	stp	x29, x30, [sp, #-48]!
  418444:	mov	x29, sp
  418448:	str	x0, [sp, #24]
  41844c:	str	x1, [sp, #16]
  418450:	str	xzr, [sp, #40]
  418454:	b	4184b4 <wcrtomb@plt+0x137a4>
  418458:	ldr	x1, [sp, #40]
  41845c:	mov	x0, x1
  418460:	lsl	x0, x0, #1
  418464:	add	x0, x0, x1
  418468:	lsl	x0, x0, #3
  41846c:	mov	x1, x0
  418470:	ldr	x0, [sp, #24]
  418474:	add	x0, x0, x1
  418478:	ldr	x0, [x0]
  41847c:	bl	404880 <free@plt>
  418480:	ldr	x1, [sp, #40]
  418484:	mov	x0, x1
  418488:	lsl	x0, x0, #1
  41848c:	add	x0, x0, x1
  418490:	lsl	x0, x0, #3
  418494:	mov	x1, x0
  418498:	ldr	x0, [sp, #24]
  41849c:	add	x0, x0, x1
  4184a0:	ldr	x0, [x0, #8]
  4184a4:	bl	404880 <free@plt>
  4184a8:	ldr	x0, [sp, #40]
  4184ac:	add	x0, x0, #0x1
  4184b0:	str	x0, [sp, #40]
  4184b4:	ldr	x1, [sp, #40]
  4184b8:	ldr	x0, [sp, #16]
  4184bc:	cmp	x1, x0
  4184c0:	b.cc	418458 <wcrtomb@plt+0x13748>  // b.lo, b.ul, b.last
  4184c4:	ldr	x0, [sp, #24]
  4184c8:	bl	404880 <free@plt>
  4184cc:	nop
  4184d0:	ldp	x29, x30, [sp], #48
  4184d4:	ret
  4184d8:	stp	x29, x30, [sp, #-96]!
  4184dc:	mov	x29, sp
  4184e0:	str	x19, [sp, #16]
  4184e4:	str	x0, [sp, #72]
  4184e8:	str	x1, [sp, #64]
  4184ec:	str	x2, [sp, #56]
  4184f0:	str	x3, [sp, #48]
  4184f4:	str	x4, [sp, #40]
  4184f8:	ldr	x0, [sp, #64]
  4184fc:	ldr	x0, [x0]
  418500:	add	x2, x0, #0x1
  418504:	ldr	x1, [sp, #64]
  418508:	str	x2, [x1]
  41850c:	str	x0, [sp, #88]
  418510:	ldr	x0, [sp, #72]
  418514:	ldr	x2, [x0]
  418518:	ldr	x0, [sp, #64]
  41851c:	ldr	x1, [x0]
  418520:	mov	x0, x1
  418524:	lsl	x0, x0, #1
  418528:	add	x0, x0, x1
  41852c:	lsl	x0, x0, #3
  418530:	mov	x1, x0
  418534:	mov	x0, x2
  418538:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  41853c:	mov	x1, x0
  418540:	ldr	x0, [sp, #72]
  418544:	str	x1, [x0]
  418548:	ldr	x0, [sp, #72]
  41854c:	ldr	x2, [x0]
  418550:	ldr	x1, [sp, #88]
  418554:	mov	x0, x1
  418558:	lsl	x0, x0, #1
  41855c:	add	x0, x0, x1
  418560:	lsl	x0, x0, #3
  418564:	add	x19, x2, x0
  418568:	ldr	x0, [sp, #56]
  41856c:	bl	45b858 <argp_usage@@Base+0x1276c>
  418570:	str	x0, [x19]
  418574:	ldr	x0, [sp, #40]
  418578:	add	x3, x0, #0x1
  41857c:	ldr	x0, [sp, #72]
  418580:	ldr	x2, [x0]
  418584:	ldr	x1, [sp, #88]
  418588:	mov	x0, x1
  41858c:	lsl	x0, x0, #1
  418590:	add	x0, x0, x1
  418594:	lsl	x0, x0, #3
  418598:	add	x19, x2, x0
  41859c:	mov	x1, x3
  4185a0:	ldr	x0, [sp, #48]
  4185a4:	bl	45b82c <argp_usage@@Base+0x12740>
  4185a8:	str	x0, [x19, #8]
  4185ac:	ldr	x0, [sp, #72]
  4185b0:	ldr	x2, [x0]
  4185b4:	ldr	x1, [sp, #88]
  4185b8:	mov	x0, x1
  4185bc:	lsl	x0, x0, #1
  4185c0:	add	x0, x0, x1
  4185c4:	lsl	x0, x0, #3
  4185c8:	add	x0, x2, x0
  4185cc:	ldr	x1, [sp, #40]
  4185d0:	str	x1, [x0, #16]
  4185d4:	nop
  4185d8:	ldr	x19, [sp, #16]
  4185dc:	ldp	x29, x30, [sp], #96
  4185e0:	ret
  4185e4:	sub	sp, sp, #0x20
  4185e8:	str	x0, [sp, #8]
  4185ec:	ldr	x0, [sp, #8]
  4185f0:	str	x0, [sp, #16]
  4185f4:	ldr	x0, [sp, #16]
  4185f8:	str	x0, [sp, #24]
  4185fc:	ldr	x0, [sp, #24]
  418600:	ldrb	w0, [x0]
  418604:	cmp	w0, #0x25
  418608:	b.ne	4186ac <wcrtomb@plt+0x1399c>  // b.any
  41860c:	ldr	x0, [sp, #24]
  418610:	add	x0, x0, #0x1
  418614:	ldrb	w0, [x0]
  418618:	cmp	w0, #0x33
  41861c:	b.ne	41865c <wcrtomb@plt+0x1394c>  // b.any
  418620:	ldr	x0, [sp, #24]
  418624:	add	x0, x0, #0x2
  418628:	ldrb	w0, [x0]
  41862c:	cmp	w0, #0x44
  418630:	b.ne	41865c <wcrtomb@plt+0x1394c>  // b.any
  418634:	ldr	x0, [sp, #16]
  418638:	mov	w1, #0x3d                  	// #61
  41863c:	strb	w1, [x0]
  418640:	ldr	x0, [sp, #24]
  418644:	add	x0, x0, #0x3
  418648:	str	x0, [sp, #24]
  41864c:	ldr	x0, [sp, #16]
  418650:	add	x0, x0, #0x1
  418654:	str	x0, [sp, #16]
  418658:	b	4186e4 <wcrtomb@plt+0x139d4>
  41865c:	ldr	x0, [sp, #24]
  418660:	add	x0, x0, #0x1
  418664:	ldrb	w0, [x0]
  418668:	cmp	w0, #0x32
  41866c:	b.ne	4186ac <wcrtomb@plt+0x1399c>  // b.any
  418670:	ldr	x0, [sp, #24]
  418674:	add	x0, x0, #0x2
  418678:	ldrb	w0, [x0]
  41867c:	cmp	w0, #0x35
  418680:	b.ne	4186ac <wcrtomb@plt+0x1399c>  // b.any
  418684:	ldr	x0, [sp, #16]
  418688:	mov	w1, #0x25                  	// #37
  41868c:	strb	w1, [x0]
  418690:	ldr	x0, [sp, #24]
  418694:	add	x0, x0, #0x3
  418698:	str	x0, [sp, #24]
  41869c:	ldr	x0, [sp, #16]
  4186a0:	add	x0, x0, #0x1
  4186a4:	str	x0, [sp, #16]
  4186a8:	b	4186e4 <wcrtomb@plt+0x139d4>
  4186ac:	ldr	x0, [sp, #24]
  4186b0:	ldrb	w1, [x0]
  4186b4:	ldr	x0, [sp, #16]
  4186b8:	strb	w1, [x0]
  4186bc:	ldr	x0, [sp, #24]
  4186c0:	ldrb	w0, [x0]
  4186c4:	cmp	w0, #0x0
  4186c8:	b.eq	4186e8 <wcrtomb@plt+0x139d8>  // b.none
  4186cc:	ldr	x0, [sp, #24]
  4186d0:	add	x0, x0, #0x1
  4186d4:	str	x0, [sp, #24]
  4186d8:	ldr	x0, [sp, #16]
  4186dc:	add	x0, x0, #0x1
  4186e0:	str	x0, [sp, #16]
  4186e4:	b	4185fc <wcrtomb@plt+0x138ec>
  4186e8:	nop
  4186ec:	nop
  4186f0:	add	sp, sp, #0x20
  4186f4:	ret
  4186f8:	stp	x29, x30, [sp, #-80]!
  4186fc:	mov	x29, sp
  418700:	str	x0, [sp, #40]
  418704:	str	x1, [sp, #32]
  418708:	str	x2, [sp, #24]
  41870c:	str	x3, [sp, #16]
  418710:	ldr	x0, [sp, #32]
  418714:	bl	4040b0 <strlen@plt>
  418718:	str	x0, [sp, #72]
  41871c:	ldr	x0, [sp, #72]
  418720:	add	x0, x0, #0xe
  418724:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  418728:	str	x0, [sp, #64]
  41872c:	ldr	x0, [sp, #64]
  418730:	str	x0, [sp, #56]
  418734:	ldr	x2, [sp, #56]
  418738:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41873c:	add	x1, x0, #0x410
  418740:	mov	x0, x2
  418744:	ldr	x2, [x1]
  418748:	str	x2, [x0]
  41874c:	ldur	x1, [x1, #6]
  418750:	stur	x1, [x0, #6]
  418754:	ldr	x0, [sp, #56]
  418758:	add	x0, x0, #0xd
  41875c:	str	x0, [sp, #56]
  418760:	ldr	x1, [sp, #32]
  418764:	ldr	x0, [sp, #56]
  418768:	bl	4049d0 <strcpy@plt>
  41876c:	ldr	x0, [sp, #40]
  418770:	add	x5, x0, #0x150
  418774:	ldr	x0, [sp, #40]
  418778:	add	x0, x0, #0x148
  41877c:	ldr	x4, [sp, #16]
  418780:	ldr	x3, [sp, #24]
  418784:	ldr	x2, [sp, #64]
  418788:	mov	x1, x0
  41878c:	mov	x0, x5
  418790:	bl	4184d8 <wcrtomb@plt+0x137c8>
  418794:	ldr	x0, [sp, #64]
  418798:	bl	404880 <free@plt>
  41879c:	nop
  4187a0:	ldp	x29, x30, [sp], #80
  4187a4:	ret
  4187a8:	stp	x29, x30, [sp, #-80]!
  4187ac:	mov	x29, sp
  4187b0:	str	x0, [sp, #40]
  4187b4:	str	x1, [sp, #32]
  4187b8:	str	x2, [sp, #24]
  4187bc:	str	xzr, [sp, #72]
  4187c0:	ldr	x0, [sp, #32]
  4187c4:	str	xzr, [x0]
  4187c8:	ldr	x0, [sp, #24]
  4187cc:	str	xzr, [x0]
  4187d0:	b	418870 <wcrtomb@plt+0x13b60>
  4187d4:	ldr	x0, [sp, #40]
  4187d8:	ldr	x2, [x0, #336]
  4187dc:	ldr	x1, [sp, #72]
  4187e0:	mov	x0, x1
  4187e4:	lsl	x0, x0, #1
  4187e8:	add	x0, x0, x1
  4187ec:	lsl	x0, x0, #3
  4187f0:	add	x0, x2, x0
  4187f4:	ldr	x0, [x0]
  4187f8:	str	x0, [sp, #64]
  4187fc:	ldr	x0, [sp, #40]
  418800:	ldr	x2, [x0, #336]
  418804:	ldr	x1, [sp, #72]
  418808:	mov	x0, x1
  41880c:	lsl	x0, x0, #1
  418810:	add	x0, x0, x1
  418814:	lsl	x0, x0, #3
  418818:	add	x0, x2, x0
  41881c:	ldr	x0, [x0, #8]
  418820:	str	x0, [sp, #56]
  418824:	ldr	x0, [sp, #40]
  418828:	ldr	x2, [x0, #336]
  41882c:	ldr	x1, [sp, #72]
  418830:	mov	x0, x1
  418834:	lsl	x0, x0, #1
  418838:	add	x0, x0, x1
  41883c:	lsl	x0, x0, #3
  418840:	add	x0, x2, x0
  418844:	ldr	x0, [x0, #16]
  418848:	str	x0, [sp, #48]
  41884c:	ldr	x4, [sp, #48]
  418850:	ldr	x3, [sp, #56]
  418854:	ldr	x2, [sp, #64]
  418858:	ldr	x1, [sp, #24]
  41885c:	ldr	x0, [sp, #32]
  418860:	bl	4184d8 <wcrtomb@plt+0x137c8>
  418864:	ldr	x0, [sp, #72]
  418868:	add	x0, x0, #0x1
  41886c:	str	x0, [sp, #72]
  418870:	ldr	x0, [sp, #40]
  418874:	ldr	x0, [x0, #328]
  418878:	ldr	x1, [sp, #72]
  41887c:	cmp	x1, x0
  418880:	b.cc	4187d4 <wcrtomb@plt+0x13ac4>  // b.lo, b.ul, b.last
  418884:	nop
  418888:	nop
  41888c:	ldp	x29, x30, [sp], #80
  418890:	ret
  418894:	stp	x29, x30, [sp, #-64]!
  418898:	mov	x29, sp
  41889c:	str	x19, [sp, #16]
  4188a0:	str	x0, [sp, #40]
  4188a4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4188a8:	add	x0, x0, #0x8a0
  4188ac:	str	x0, [sp, #56]
  4188b0:	b	418924 <wcrtomb@plt+0x13c14>
  4188b4:	ldr	x0, [sp, #56]
  4188b8:	ldrb	w0, [x0, #28]
  4188bc:	cmp	w0, #0x0
  4188c0:	b.eq	4188f8 <wcrtomb@plt+0x13be8>  // b.none
  4188c4:	ldr	x0, [sp, #56]
  4188c8:	ldr	x19, [x0]
  4188cc:	ldr	x0, [sp, #56]
  4188d0:	ldr	x0, [x0]
  4188d4:	bl	4040b0 <strlen@plt>
  4188d8:	mov	x2, x0
  4188dc:	ldr	x1, [sp, #40]
  4188e0:	mov	x0, x19
  4188e4:	bl	404480 <strncmp@plt>
  4188e8:	cmp	w0, #0x0
  4188ec:	b.ne	418918 <wcrtomb@plt+0x13c08>  // b.any
  4188f0:	ldr	x0, [sp, #56]
  4188f4:	b	418938 <wcrtomb@plt+0x13c28>
  4188f8:	ldr	x0, [sp, #56]
  4188fc:	ldr	x0, [x0]
  418900:	ldr	x1, [sp, #40]
  418904:	bl	4047c0 <strcmp@plt>
  418908:	cmp	w0, #0x0
  41890c:	b.ne	418918 <wcrtomb@plt+0x13c08>  // b.any
  418910:	ldr	x0, [sp, #56]
  418914:	b	418938 <wcrtomb@plt+0x13c28>
  418918:	ldr	x0, [sp, #56]
  41891c:	add	x0, x0, #0x20
  418920:	str	x0, [sp, #56]
  418924:	ldr	x0, [sp, #56]
  418928:	ldr	x0, [x0]
  41892c:	cmp	x0, #0x0
  418930:	b.ne	4188b4 <wcrtomb@plt+0x13ba4>  // b.any
  418934:	mov	x0, #0x0                   	// #0
  418938:	ldr	x19, [sp, #16]
  41893c:	ldp	x29, x30, [sp], #64
  418940:	ret
  418944:	stp	x29, x30, [sp, #-48]!
  418948:	mov	x29, sp
  41894c:	str	x0, [sp, #24]
  418950:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418954:	add	x0, x0, #0x8a0
  418958:	str	x0, [sp, #40]
  41895c:	b	4189c0 <wcrtomb@plt+0x13cb0>
  418960:	ldr	x0, [sp, #40]
  418964:	ldrb	w0, [x0, #28]
  418968:	eor	w0, w0, #0x1
  41896c:	and	w0, w0, #0xff
  418970:	cmp	w0, #0x0
  418974:	b.eq	4189b4 <wcrtomb@plt+0x13ca4>  // b.none
  418978:	ldr	x0, [sp, #40]
  41897c:	ldr	w0, [x0, #24]
  418980:	and	w0, w0, #0x1
  418984:	cmp	w0, #0x0
  418988:	b.eq	4189b4 <wcrtomb@plt+0x13ca4>  // b.none
  41898c:	ldr	x0, [sp, #40]
  418990:	ldr	x0, [x0]
  418994:	mov	w2, #0x0                   	// #0
  418998:	mov	x1, x0
  41899c:	ldr	x0, [sp, #24]
  4189a0:	bl	404980 <fnmatch@plt>
  4189a4:	cmp	w0, #0x0
  4189a8:	b.ne	4189b4 <wcrtomb@plt+0x13ca4>  // b.any
  4189ac:	mov	w0, #0x1                   	// #1
  4189b0:	b	4189d4 <wcrtomb@plt+0x13cc4>
  4189b4:	ldr	x0, [sp, #40]
  4189b8:	add	x0, x0, #0x20
  4189bc:	str	x0, [sp, #40]
  4189c0:	ldr	x0, [sp, #40]
  4189c4:	ldr	x0, [x0]
  4189c8:	cmp	x0, #0x0
  4189cc:	b.ne	418960 <wcrtomb@plt+0x13c50>  // b.any
  4189d0:	mov	w0, #0x0                   	// #0
  4189d4:	ldp	x29, x30, [sp], #48
  4189d8:	ret
  4189dc:	stp	x29, x30, [sp, #-48]!
  4189e0:	mov	x29, sp
  4189e4:	str	x0, [sp, #24]
  4189e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  4189ec:	add	x0, x0, #0x8a0
  4189f0:	str	x0, [sp, #40]
  4189f4:	b	418a50 <wcrtomb@plt+0x13d40>
  4189f8:	ldr	x0, [sp, #40]
  4189fc:	ldrb	w0, [x0, #28]
  418a00:	eor	w0, w0, #0x1
  418a04:	and	w0, w0, #0xff
  418a08:	cmp	w0, #0x0
  418a0c:	b.eq	418a44 <wcrtomb@plt+0x13d34>  // b.none
  418a10:	ldr	x0, [sp, #40]
  418a14:	ldr	w0, [x0, #24]
  418a18:	and	w0, w0, #0x1
  418a1c:	cmp	w0, #0x0
  418a20:	b.eq	418a44 <wcrtomb@plt+0x13d34>  // b.none
  418a24:	ldr	x0, [sp, #40]
  418a28:	ldr	x0, [x0]
  418a2c:	ldr	x1, [sp, #24]
  418a30:	bl	4047c0 <strcmp@plt>
  418a34:	cmp	w0, #0x0
  418a38:	b.ne	418a44 <wcrtomb@plt+0x13d34>  // b.any
  418a3c:	mov	w0, #0x1                   	// #1
  418a40:	b	418a64 <wcrtomb@plt+0x13d54>
  418a44:	ldr	x0, [sp, #40]
  418a48:	add	x0, x0, #0x20
  418a4c:	str	x0, [sp, #40]
  418a50:	ldr	x0, [sp, #40]
  418a54:	ldr	x0, [x0]
  418a58:	cmp	x0, #0x0
  418a5c:	b.ne	4189f8 <wcrtomb@plt+0x13ce8>  // b.any
  418a60:	mov	w0, #0x0                   	// #0
  418a64:	ldp	x29, x30, [sp], #48
  418a68:	ret
  418a6c:	stp	x29, x30, [sp, #-112]!
  418a70:	mov	x29, sp
  418a74:	str	x0, [sp, #40]
  418a78:	str	x1, [sp, #32]
  418a7c:	str	x2, [sp, #24]
  418a80:	str	x3, [sp, #16]
  418a84:	ldr	x0, [sp, #32]
  418a88:	ldr	x0, [x0]
  418a8c:	str	x0, [sp, #96]
  418a90:	ldr	x0, [sp, #96]
  418a94:	str	x0, [sp, #104]
  418a98:	ldr	x0, [sp, #40]
  418a9c:	ldr	x1, [x0, #16]
  418aa0:	ldr	x0, [sp, #40]
  418aa4:	ldr	x0, [x0, #8]
  418aa8:	add	x1, x1, x0
  418aac:	ldr	x0, [sp, #96]
  418ab0:	sub	x0, x1, x0
  418ab4:	str	x0, [sp, #88]
  418ab8:	b	418ac8 <wcrtomb@plt+0x13db8>
  418abc:	ldr	x0, [sp, #104]
  418ac0:	add	x0, x0, #0x1
  418ac4:	str	x0, [sp, #104]
  418ac8:	ldr	x0, [sp, #104]
  418acc:	ldrb	w0, [x0]
  418ad0:	cmp	w0, #0x20
  418ad4:	b.eq	418abc <wcrtomb@plt+0x13dac>  // b.none
  418ad8:	ldr	x0, [sp, #104]
  418adc:	ldrb	w0, [x0]
  418ae0:	cmp	w0, #0x9
  418ae4:	b.eq	418abc <wcrtomb@plt+0x13dac>  // b.none
  418ae8:	ldr	x0, [sp, #104]
  418aec:	ldrb	w0, [x0]
  418af0:	sub	w0, w0, #0x30
  418af4:	cmp	w0, #0x9
  418af8:	b.ls	418b64 <wcrtomb@plt+0x13e54>  // b.plast
  418afc:	ldr	x0, [sp, #104]
  418b00:	ldrb	w0, [x0]
  418b04:	cmp	w0, #0x0
  418b08:	b.eq	418b5c <wcrtomb@plt+0x13e4c>  // b.none
  418b0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418b10:	add	x0, x0, #0x420
  418b14:	ldr	x0, [x0]
  418b18:	cmp	x0, #0x0
  418b1c:	b.eq	418b30 <wcrtomb@plt+0x13e20>  // b.none
  418b20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418b24:	add	x0, x0, #0x420
  418b28:	ldr	x0, [x0]
  418b2c:	blr	x0
  418b30:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418b34:	add	x0, x0, #0x420
  418b38:	bl	404c60 <gettext@plt>
  418b3c:	mov	x2, x0
  418b40:	mov	w1, #0x0                   	// #0
  418b44:	mov	w0, #0x0                   	// #0
  418b48:	bl	404100 <error@plt>
  418b4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418b50:	add	x0, x0, #0xdb0
  418b54:	mov	w1, #0x2                   	// #2
  418b58:	str	w1, [x0]
  418b5c:	mov	w0, #0x0                   	// #0
  418b60:	b	418e14 <wcrtomb@plt+0x14104>
  418b64:	add	x0, sp, #0x30
  418b68:	mov	w2, #0xa                   	// #10
  418b6c:	mov	x1, x0
  418b70:	ldr	x0, [sp, #104]
  418b74:	bl	4046e0 <strtoumax@plt>
  418b78:	str	x0, [sp, #80]
  418b7c:	ldr	x1, [sp, #88]
  418b80:	ldr	x0, [sp, #80]
  418b84:	cmp	x1, x0
  418b88:	b.cs	418bfc <wcrtomb@plt+0x13eec>  // b.hs, b.nlast
  418b8c:	ldr	x1, [sp, #48]
  418b90:	ldr	x0, [sp, #104]
  418b94:	sub	x0, x1, x0
  418b98:	str	w0, [sp, #60]
  418b9c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418ba0:	add	x0, x0, #0x420
  418ba4:	ldr	x0, [x0]
  418ba8:	cmp	x0, #0x0
  418bac:	b.eq	418bc0 <wcrtomb@plt+0x13eb0>  // b.none
  418bb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418bb4:	add	x0, x0, #0x420
  418bb8:	ldr	x0, [x0]
  418bbc:	blr	x0
  418bc0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418bc4:	add	x0, x0, #0x450
  418bc8:	bl	404c60 <gettext@plt>
  418bcc:	ldr	x4, [sp, #104]
  418bd0:	ldr	w3, [sp, #60]
  418bd4:	mov	x2, x0
  418bd8:	mov	w1, #0x0                   	// #0
  418bdc:	mov	w0, #0x0                   	// #0
  418be0:	bl	404100 <error@plt>
  418be4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418be8:	add	x0, x0, #0xdb0
  418bec:	mov	w1, #0x2                   	// #2
  418bf0:	str	w1, [x0]
  418bf4:	mov	w0, #0x0                   	// #0
  418bf8:	b	418e14 <wcrtomb@plt+0x14104>
  418bfc:	ldr	x1, [sp, #96]
  418c00:	ldr	x0, [sp, #80]
  418c04:	add	x0, x1, x0
  418c08:	str	x0, [sp, #72]
  418c0c:	ldr	x0, [sp, #48]
  418c10:	str	x0, [sp, #104]
  418c14:	b	418c24 <wcrtomb@plt+0x13f14>
  418c18:	ldr	x0, [sp, #104]
  418c1c:	add	x0, x0, #0x1
  418c20:	str	x0, [sp, #104]
  418c24:	ldr	x0, [sp, #104]
  418c28:	ldrb	w0, [x0]
  418c2c:	cmp	w0, #0x20
  418c30:	b.eq	418c18 <wcrtomb@plt+0x13f08>  // b.none
  418c34:	ldr	x0, [sp, #104]
  418c38:	ldrb	w0, [x0]
  418c3c:	cmp	w0, #0x9
  418c40:	b.eq	418c18 <wcrtomb@plt+0x13f08>  // b.none
  418c44:	ldr	x0, [sp, #48]
  418c48:	ldr	x1, [sp, #104]
  418c4c:	cmp	x1, x0
  418c50:	b.ne	418cac <wcrtomb@plt+0x13f9c>  // b.any
  418c54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418c58:	add	x0, x0, #0x420
  418c5c:	ldr	x0, [x0]
  418c60:	cmp	x0, #0x0
  418c64:	b.eq	418c78 <wcrtomb@plt+0x13f68>  // b.none
  418c68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418c6c:	add	x0, x0, #0x420
  418c70:	ldr	x0, [x0]
  418c74:	blr	x0
  418c78:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418c7c:	add	x0, x0, #0x480
  418c80:	bl	404c60 <gettext@plt>
  418c84:	mov	x2, x0
  418c88:	mov	w1, #0x0                   	// #0
  418c8c:	mov	w0, #0x0                   	// #0
  418c90:	bl	404100 <error@plt>
  418c94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418c98:	add	x0, x0, #0xdb0
  418c9c:	mov	w1, #0x2                   	// #2
  418ca0:	str	w1, [x0]
  418ca4:	mov	w0, #0x0                   	// #0
  418ca8:	b	418e14 <wcrtomb@plt+0x14104>
  418cac:	ldr	x0, [sp, #104]
  418cb0:	str	x0, [sp, #64]
  418cb4:	mov	w1, #0x3d                  	// #61
  418cb8:	ldr	x0, [sp, #104]
  418cbc:	bl	404930 <strchr@plt>
  418cc0:	str	x0, [sp, #104]
  418cc4:	ldr	x0, [sp, #104]
  418cc8:	cmp	x0, #0x0
  418ccc:	b.eq	418ce0 <wcrtomb@plt+0x13fd0>  // b.none
  418cd0:	ldr	x1, [sp, #104]
  418cd4:	ldr	x0, [sp, #72]
  418cd8:	cmp	x1, x0
  418cdc:	b.cc	418d38 <wcrtomb@plt+0x14028>  // b.lo, b.ul, b.last
  418ce0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418ce4:	add	x0, x0, #0x420
  418ce8:	ldr	x0, [x0]
  418cec:	cmp	x0, #0x0
  418cf0:	b.eq	418d04 <wcrtomb@plt+0x13ff4>  // b.none
  418cf4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418cf8:	add	x0, x0, #0x420
  418cfc:	ldr	x0, [x0]
  418d00:	blr	x0
  418d04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418d08:	add	x0, x0, #0x4b8
  418d0c:	bl	404c60 <gettext@plt>
  418d10:	mov	x2, x0
  418d14:	mov	w1, #0x0                   	// #0
  418d18:	mov	w0, #0x0                   	// #0
  418d1c:	bl	404100 <error@plt>
  418d20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418d24:	add	x0, x0, #0xdb0
  418d28:	mov	w1, #0x2                   	// #2
  418d2c:	str	w1, [x0]
  418d30:	mov	w0, #0x0                   	// #0
  418d34:	b	418e14 <wcrtomb@plt+0x14104>
  418d38:	ldr	x0, [sp, #72]
  418d3c:	sub	x0, x0, #0x1
  418d40:	ldrb	w0, [x0]
  418d44:	cmp	w0, #0xa
  418d48:	b.eq	418da4 <wcrtomb@plt+0x14094>  // b.none
  418d4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418d50:	add	x0, x0, #0x420
  418d54:	ldr	x0, [x0]
  418d58:	cmp	x0, #0x0
  418d5c:	b.eq	418d70 <wcrtomb@plt+0x14060>  // b.none
  418d60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418d64:	add	x0, x0, #0x420
  418d68:	ldr	x0, [x0]
  418d6c:	blr	x0
  418d70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418d74:	add	x0, x0, #0x4e8
  418d78:	bl	404c60 <gettext@plt>
  418d7c:	mov	x2, x0
  418d80:	mov	w1, #0x0                   	// #0
  418d84:	mov	w0, #0x0                   	// #0
  418d88:	bl	404100 <error@plt>
  418d8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418d90:	add	x0, x0, #0xdb0
  418d94:	mov	w1, #0x2                   	// #2
  418d98:	str	w1, [x0]
  418d9c:	mov	w0, #0x0                   	// #0
  418da0:	b	418e14 <wcrtomb@plt+0x14104>
  418da4:	ldr	x0, [sp, #72]
  418da8:	sub	x0, x0, #0x1
  418dac:	strb	wzr, [x0]
  418db0:	ldrb	w1, [x0]
  418db4:	ldr	x0, [sp, #104]
  418db8:	strb	w1, [x0]
  418dbc:	ldr	x0, [sp, #104]
  418dc0:	add	x2, x0, #0x1
  418dc4:	ldr	x1, [sp, #72]
  418dc8:	ldr	x0, [sp, #104]
  418dcc:	sub	x0, x1, x0
  418dd0:	sub	x0, x0, #0x2
  418dd4:	ldr	x4, [sp, #24]
  418dd8:	mov	x3, x0
  418ddc:	ldr	x1, [sp, #64]
  418de0:	ldr	x0, [sp, #16]
  418de4:	blr	x4
  418de8:	ldr	x0, [sp, #104]
  418dec:	mov	w1, #0x3d                  	// #61
  418df0:	strb	w1, [x0]
  418df4:	ldr	x0, [sp, #72]
  418df8:	sub	x0, x0, #0x1
  418dfc:	mov	w1, #0xa                   	// #10
  418e00:	strb	w1, [x0]
  418e04:	ldr	x0, [sp, #32]
  418e08:	ldr	x1, [sp, #72]
  418e0c:	str	x1, [x0]
  418e10:	mov	w0, #0x1                   	// #1
  418e14:	ldp	x29, x30, [sp], #112
  418e18:	ret
  418e1c:	stp	x29, x30, [sp, #-80]!
  418e20:	mov	x29, sp
  418e24:	stp	x19, x20, [sp, #16]
  418e28:	str	x21, [sp, #32]
  418e2c:	str	x0, [sp, #56]
  418e30:	str	x1, [sp, #48]
  418e34:	b	418e98 <wcrtomb@plt+0x14188>
  418e38:	ldr	x0, [sp, #56]
  418e3c:	ldr	x0, [x0, #8]
  418e40:	bl	418894 <wcrtomb@plt+0x13b84>
  418e44:	str	x0, [sp, #72]
  418e48:	ldr	x0, [sp, #72]
  418e4c:	cmp	x0, #0x0
  418e50:	b.eq	418e8c <wcrtomb@plt+0x1417c>  // b.none
  418e54:	ldr	x0, [sp, #72]
  418e58:	ldr	x19, [x0, #16]
  418e5c:	ldr	x0, [sp, #72]
  418e60:	ldr	x20, [x0]
  418e64:	ldr	x0, [sp, #56]
  418e68:	ldr	x21, [x0, #16]
  418e6c:	ldr	x0, [sp, #56]
  418e70:	ldr	x0, [x0, #16]
  418e74:	bl	4040b0 <strlen@plt>
  418e78:	mov	x3, x0
  418e7c:	mov	x2, x21
  418e80:	mov	x1, x20
  418e84:	ldr	x0, [sp, #48]
  418e88:	blr	x19
  418e8c:	ldr	x0, [sp, #56]
  418e90:	ldr	x0, [x0]
  418e94:	str	x0, [sp, #56]
  418e98:	ldr	x0, [sp, #56]
  418e9c:	cmp	x0, #0x0
  418ea0:	b.ne	418e38 <wcrtomb@plt+0x14128>  // b.any
  418ea4:	nop
  418ea8:	nop
  418eac:	ldp	x19, x20, [sp, #16]
  418eb0:	ldr	x21, [sp, #32]
  418eb4:	ldp	x29, x30, [sp], #80
  418eb8:	ret
  418ebc:	stp	x29, x30, [sp, #-64]!
  418ec0:	mov	x29, sp
  418ec4:	str	x0, [sp, #40]
  418ec8:	str	x1, [sp, #32]
  418ecc:	str	x2, [sp, #24]
  418ed0:	str	x3, [sp, #16]
  418ed4:	ldr	x0, [sp, #40]
  418ed8:	str	x0, [sp, #56]
  418edc:	ldr	x0, [sp, #32]
  418ee0:	bl	4174b8 <wcrtomb@plt+0x127a8>
  418ee4:	and	w0, w0, #0xff
  418ee8:	cmp	w0, #0x0
  418eec:	b.ne	418f9c <wcrtomb@plt+0x1428c>  // b.any
  418ef0:	ldr	x0, [sp, #32]
  418ef4:	bl	417520 <wcrtomb@plt+0x12810>
  418ef8:	and	w0, w0, #0xff
  418efc:	cmp	w0, #0x0
  418f00:	b.ne	418f9c <wcrtomb@plt+0x1428c>  // b.any
  418f04:	ldr	x0, [sp, #32]
  418f08:	bl	418894 <wcrtomb@plt+0x13b84>
  418f0c:	str	x0, [sp, #48]
  418f10:	ldr	x0, [sp, #48]
  418f14:	cmp	x0, #0x0
  418f18:	b.eq	418f3c <wcrtomb@plt+0x1422c>  // b.none
  418f1c:	ldr	x0, [sp, #48]
  418f20:	ldr	x4, [x0, #16]
  418f24:	ldr	x3, [sp, #16]
  418f28:	ldr	x2, [sp, #24]
  418f2c:	ldr	x1, [sp, #32]
  418f30:	ldr	x0, [sp, #56]
  418f34:	blr	x4
  418f38:	b	418fa0 <wcrtomb@plt+0x14290>
  418f3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418f40:	add	x0, x0, #0x24c
  418f44:	ldr	w0, [x0]
  418f48:	and	w0, w0, #0x20000
  418f4c:	cmp	w0, #0x0
  418f50:	b.eq	418fa0 <wcrtomb@plt+0x14290>  // b.none
  418f54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418f58:	add	x0, x0, #0x420
  418f5c:	ldr	x0, [x0]
  418f60:	cmp	x0, #0x0
  418f64:	b.eq	418f78 <wcrtomb@plt+0x14268>  // b.none
  418f68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  418f6c:	add	x0, x0, #0x420
  418f70:	ldr	x0, [x0]
  418f74:	blr	x0
  418f78:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  418f7c:	add	x0, x0, #0x518
  418f80:	bl	404c60 <gettext@plt>
  418f84:	ldr	x3, [sp, #32]
  418f88:	mov	x2, x0
  418f8c:	mov	w1, #0x0                   	// #0
  418f90:	mov	w0, #0x0                   	// #0
  418f94:	bl	404100 <error@plt>
  418f98:	b	418fa0 <wcrtomb@plt+0x14290>
  418f9c:	nop
  418fa0:	ldp	x29, x30, [sp], #64
  418fa4:	ret
  418fa8:	stp	x29, x30, [sp, #-48]!
  418fac:	mov	x29, sp
  418fb0:	str	x0, [sp, #24]
  418fb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418fb8:	add	x0, x0, #0x878
  418fbc:	ldr	x0, [x0]
  418fc0:	ldr	x1, [sp, #24]
  418fc4:	bl	418e1c <wcrtomb@plt+0x1410c>
  418fc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  418fcc:	add	x0, x0, #0x888
  418fd0:	ldr	x0, [x0]
  418fd4:	ldr	x1, [sp, #24]
  418fd8:	bl	418e1c <wcrtomb@plt+0x1410c>
  418fdc:	ldr	x0, [sp, #24]
  418fe0:	ldr	x0, [x0, #352]
  418fe4:	cmp	x0, #0x0
  418fe8:	b.eq	419030 <wcrtomb@plt+0x14320>  // b.none
  418fec:	ldr	x0, [sp, #24]
  418ff0:	ldr	x0, [x0, #360]
  418ff4:	add	x0, x0, #0x200
  418ff8:	str	x0, [sp, #40]
  418ffc:	b	419004 <wcrtomb@plt+0x142f4>
  419000:	nop
  419004:	ldr	x0, [sp, #24]
  419008:	add	x4, x0, #0x158
  41900c:	add	x1, sp, #0x28
  419010:	ldr	x3, [sp, #24]
  419014:	adrp	x0, 418000 <wcrtomb@plt+0x132f0>
  419018:	add	x2, x0, #0xebc
  41901c:	mov	x0, x4
  419020:	bl	418a6c <wcrtomb@plt+0x13d5c>
  419024:	and	w0, w0, #0xff
  419028:	cmp	w0, #0x0
  41902c:	b.ne	419000 <wcrtomb@plt+0x142f0>  // b.any
  419030:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419034:	add	x0, x0, #0x880
  419038:	ldr	x0, [x0]
  41903c:	ldr	x1, [sp, #24]
  419040:	bl	418e1c <wcrtomb@plt+0x1410c>
  419044:	ldr	x0, [sp, #24]
  419048:	ldr	x1, [x0, #136]
  41904c:	ldr	x0, [sp, #24]
  419050:	str	x1, [x0, #264]
  419054:	ldr	x0, [sp, #24]
  419058:	ldrb	w0, [x0, #320]
  41905c:	cmp	w0, #0x0
  419060:	b.eq	419074 <wcrtomb@plt+0x14364>  // b.none
  419064:	ldr	x0, [sp, #24]
  419068:	ldr	x1, [x0, #312]
  41906c:	ldr	x0, [sp, #24]
  419070:	str	x1, [x0, #136]
  419074:	nop
  419078:	ldp	x29, x30, [sp], #48
  41907c:	ret
  419080:	stp	x29, x30, [sp, #-64]!
  419084:	mov	x29, sp
  419088:	str	x0, [sp, #40]
  41908c:	str	x1, [sp, #32]
  419090:	str	x2, [sp, #24]
  419094:	str	x3, [sp, #16]
  419098:	ldr	x0, [sp, #40]
  41909c:	str	x0, [sp, #56]
  4190a0:	ldr	x0, [sp, #32]
  4190a4:	bl	418894 <wcrtomb@plt+0x13b84>
  4190a8:	str	x0, [sp, #48]
  4190ac:	ldr	x0, [sp, #48]
  4190b0:	cmp	x0, #0x0
  4190b4:	b.eq	4190ec <wcrtomb@plt+0x143dc>  // b.none
  4190b8:	ldr	x0, [sp, #48]
  4190bc:	ldr	w0, [x0, #24]
  4190c0:	and	w0, w0, #0x2
  4190c4:	cmp	w0, #0x0
  4190c8:	b.eq	4190ec <wcrtomb@plt+0x143dc>  // b.none
  4190cc:	ldr	x0, [sp, #48]
  4190d0:	ldr	x4, [x0, #16]
  4190d4:	ldr	x3, [sp, #16]
  4190d8:	ldr	x2, [sp, #24]
  4190dc:	ldr	x1, [sp, #32]
  4190e0:	ldr	x0, [sp, #40]
  4190e4:	blr	x4
  4190e8:	b	419100 <wcrtomb@plt+0x143f0>
  4190ec:	ldr	x2, [sp, #24]
  4190f0:	ldr	x1, [sp, #32]
  4190f4:	ldr	x0, [sp, #56]
  4190f8:	bl	417584 <wcrtomb@plt+0x12874>
  4190fc:	nop
  419100:	nop
  419104:	ldp	x29, x30, [sp], #64
  419108:	ret
  41910c:	stp	x29, x30, [sp, #-48]!
  419110:	mov	x29, sp
  419114:	str	x0, [sp, #24]
  419118:	ldr	x0, [sp, #24]
  41911c:	ldr	x0, [x0, #8]
  419120:	cmp	x0, #0x0
  419124:	b.eq	419174 <wcrtomb@plt+0x14464>  // b.none
  419128:	ldr	x0, [sp, #24]
  41912c:	ldr	x0, [x0, #16]
  419130:	add	x0, x0, #0x200
  419134:	str	x0, [sp, #40]
  419138:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41913c:	add	x0, x0, #0x888
  419140:	bl	417608 <wcrtomb@plt+0x128f8>
  419144:	b	41914c <wcrtomb@plt+0x1443c>
  419148:	nop
  41914c:	add	x1, sp, #0x28
  419150:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419154:	add	x3, x0, #0x888
  419158:	adrp	x0, 419000 <wcrtomb@plt+0x142f0>
  41915c:	add	x2, x0, #0x80
  419160:	ldr	x0, [sp, #24]
  419164:	bl	418a6c <wcrtomb@plt+0x13d5c>
  419168:	and	w0, w0, #0xff
  41916c:	cmp	w0, #0x0
  419170:	b.ne	419148 <wcrtomb@plt+0x14438>  // b.any
  419174:	nop
  419178:	ldp	x29, x30, [sp], #48
  41917c:	ret
  419180:	stp	x29, x30, [sp, #-32]!
  419184:	mov	x29, sp
  419188:	str	x0, [sp, #24]
  41918c:	ldr	x0, [sp, #24]
  419190:	ldr	x0, [x0]
  419194:	cmp	x0, #0x0
  419198:	b.ne	4191d8 <wcrtomb@plt+0x144c8>  // b.any
  41919c:	mov	x0, #0x58                  	// #88
  4191a0:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4191a4:	mov	x1, x0
  4191a8:	ldr	x0, [sp, #24]
  4191ac:	str	x1, [x0]
  4191b0:	ldr	x0, [sp, #24]
  4191b4:	ldr	x5, [x0]
  4191b8:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  4191bc:	add	x4, x0, #0x880
  4191c0:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  4191c4:	add	x3, x0, #0x6a4
  4191c8:	mov	x2, #0x0                   	// #0
  4191cc:	mov	x1, #0x0                   	// #0
  4191d0:	mov	x0, x5
  4191d4:	bl	45ccf8 <_obstack_begin@@Base>
  4191d8:	nop
  4191dc:	ldp	x29, x30, [sp], #32
  4191e0:	ret
  4191e4:	stp	x29, x30, [sp, #-64]!
  4191e8:	mov	x29, sp
  4191ec:	str	x0, [sp, #40]
  4191f0:	str	x1, [sp, #32]
  4191f4:	str	x2, [sp, #24]
  4191f8:	ldr	x0, [sp, #32]
  4191fc:	ldr	x0, [x0, #360]
  419200:	cmp	x0, #0x0
  419204:	b.ne	419294 <wcrtomb@plt+0x14584>  // b.any
  419208:	ldr	x0, [sp, #40]
  41920c:	bl	418894 <wcrtomb@plt+0x13b84>
  419210:	str	x0, [sp, #56]
  419214:	ldr	x0, [sp, #56]
  419218:	cmp	x0, #0x0
  41921c:	b.eq	41929c <wcrtomb@plt+0x1458c>  // b.none
  419220:	ldr	x0, [sp, #56]
  419224:	ldr	x0, [x0, #8]
  419228:	cmp	x0, #0x0
  41922c:	b.eq	41929c <wcrtomb@plt+0x1458c>  // b.none
  419230:	ldr	x0, [sp, #40]
  419234:	bl	4174b8 <wcrtomb@plt+0x127a8>
  419238:	and	w0, w0, #0xff
  41923c:	cmp	w0, #0x0
  419240:	b.ne	4192a4 <wcrtomb@plt+0x14594>  // b.any
  419244:	ldr	x0, [sp, #32]
  419248:	add	x0, x0, #0x158
  41924c:	bl	419180 <wcrtomb@plt+0x14470>
  419250:	ldr	x0, [sp, #40]
  419254:	bl	417520 <wcrtomb@plt+0x12810>
  419258:	and	w0, w0, #0xff
  41925c:	eor	w0, w0, #0x1
  419260:	and	w0, w0, #0xff
  419264:	cmp	w0, #0x0
  419268:	b.eq	4192a8 <wcrtomb@plt+0x14598>  // b.none
  41926c:	ldr	x0, [sp, #56]
  419270:	ldr	x4, [x0, #8]
  419274:	ldr	x0, [sp, #32]
  419278:	add	x0, x0, #0x158
  41927c:	ldr	x3, [sp, #24]
  419280:	mov	x2, x0
  419284:	ldr	x1, [sp, #40]
  419288:	ldr	x0, [sp, #32]
  41928c:	blr	x4
  419290:	b	4192a8 <wcrtomb@plt+0x14598>
  419294:	nop
  419298:	b	4192a8 <wcrtomb@plt+0x14598>
  41929c:	nop
  4192a0:	b	4192a8 <wcrtomb@plt+0x14598>
  4192a4:	nop
  4192a8:	ldp	x29, x30, [sp], #64
  4192ac:	ret
  4192b0:	stp	x29, x30, [sp, #-64]!
  4192b4:	mov	x29, sp
  4192b8:	str	x0, [sp, #40]
  4192bc:	str	x1, [sp, #32]
  4192c0:	str	x2, [sp, #24]
  4192c4:	str	xzr, [sp, #56]
  4192c8:	ldr	x0, [sp, #24]
  4192cc:	cmp	x0, #0x0
  4192d0:	b.ge	4192d8 <wcrtomb@plt+0x145c8>  // b.tcont
  4192d4:	str	xzr, [sp, #24]
  4192d8:	ldr	x0, [sp, #24]
  4192dc:	cmn	x0, #0x202
  4192e0:	b.ls	4192e8 <wcrtomb@plt+0x145d8>  // b.plast
  4192e4:	bl	412b2c <wcrtomb@plt+0xde1c>
  4192e8:	ldr	x0, [sp, #24]
  4192ec:	add	x0, x0, #0x200
  4192f0:	str	x0, [sp, #24]
  4192f4:	ldr	x1, [sp, #24]
  4192f8:	ldr	x0, [sp, #40]
  4192fc:	str	x1, [x0, #8]
  419300:	ldr	x0, [sp, #24]
  419304:	add	x0, x0, #0x1
  419308:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41930c:	mov	x1, x0
  419310:	ldr	x0, [sp, #40]
  419314:	str	x1, [x0, #16]
  419318:	ldr	x0, [sp, #40]
  41931c:	ldr	x1, [x0, #16]
  419320:	ldr	x0, [sp, #24]
  419324:	add	x0, x1, x0
  419328:	strb	wzr, [x0]
  41932c:	ldr	x0, [sp, #24]
  419330:	str	x0, [sp, #48]
  419334:	ldr	x0, [sp, #48]
  419338:	cmp	x0, #0x200
  41933c:	b.ls	419348 <wcrtomb@plt+0x14638>  // b.plast
  419340:	mov	x0, #0x200                 	// #512
  419344:	str	x0, [sp, #48]
  419348:	ldr	x0, [sp, #32]
  41934c:	cmp	x0, #0x0
  419350:	b.ne	419398 <wcrtomb@plt+0x14688>  // b.any
  419354:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419358:	add	x0, x0, #0x420
  41935c:	ldr	x0, [x0]
  419360:	cmp	x0, #0x0
  419364:	b.eq	419378 <wcrtomb@plt+0x14668>  // b.none
  419368:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41936c:	add	x0, x0, #0x420
  419370:	ldr	x0, [x0]
  419374:	blr	x0
  419378:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41937c:	add	x0, x0, #0x548
  419380:	bl	404c60 <gettext@plt>
  419384:	mov	x2, x0
  419388:	mov	w1, #0x0                   	// #0
  41938c:	mov	w0, #0x0                   	// #0
  419390:	bl	404100 <error@plt>
  419394:	bl	412ae0 <wcrtomb@plt+0xddd0>
  419398:	ldr	x0, [sp, #40]
  41939c:	ldr	x1, [x0, #16]
  4193a0:	ldr	x0, [sp, #56]
  4193a4:	add	x0, x1, x0
  4193a8:	ldr	x1, [sp, #32]
  4193ac:	ldr	x2, [sp, #48]
  4193b0:	bl	404020 <memcpy@plt>
  4193b4:	ldr	x0, [sp, #32]
  4193b8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  4193bc:	bl	406030 <wcrtomb@plt+0x1320>
  4193c0:	str	x0, [sp, #32]
  4193c4:	ldr	x1, [sp, #56]
  4193c8:	ldr	x0, [sp, #48]
  4193cc:	add	x0, x1, x0
  4193d0:	str	x0, [sp, #56]
  4193d4:	ldr	x1, [sp, #24]
  4193d8:	ldr	x0, [sp, #48]
  4193dc:	sub	x0, x1, x0
  4193e0:	str	x0, [sp, #24]
  4193e4:	ldr	x0, [sp, #24]
  4193e8:	cmp	x0, #0x0
  4193ec:	b.gt	41932c <wcrtomb@plt+0x1461c>
  4193f0:	nop
  4193f4:	nop
  4193f8:	ldp	x29, x30, [sp], #64
  4193fc:	ret
  419400:	stp	x29, x30, [sp, #-48]!
  419404:	mov	x29, sp
  419408:	str	x0, [sp, #24]
  41940c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419410:	add	x0, x0, #0x8c0
  419414:	ldr	x0, [x0]
  419418:	cmp	x0, #0x0
  41941c:	b.ne	419454 <wcrtomb@plt+0x14744>  // b.any
  419420:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419424:	add	x0, x0, #0x8c8
  419428:	mov	x1, #0x100                 	// #256
  41942c:	str	x1, [x0]
  419430:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419434:	add	x0, x0, #0x8c8
  419438:	ldr	x0, [x0]
  41943c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  419440:	mov	x1, x0
  419444:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419448:	add	x0, x0, #0x8c0
  41944c:	str	x1, [x0]
  419450:	b	419464 <wcrtomb@plt+0x14754>
  419454:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419458:	add	x0, x0, #0x8c0
  41945c:	ldr	x0, [x0]
  419460:	strb	wzr, [x0]
  419464:	str	xzr, [sp, #40]
  419468:	b	41956c <wcrtomb@plt+0x1485c>
  41946c:	ldr	x0, [sp, #24]
  419470:	ldrb	w0, [x0]
  419474:	strb	w0, [sp, #39]
  419478:	ldr	x0, [sp, #40]
  41947c:	add	x1, x0, #0x2
  419480:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419484:	add	x0, x0, #0x8c8
  419488:	ldr	x0, [x0]
  41948c:	cmp	x1, x0
  419490:	b.cc	4194c0 <wcrtomb@plt+0x147b0>  // b.lo, b.ul, b.last
  419494:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419498:	add	x0, x0, #0x8c0
  41949c:	ldr	x2, [x0]
  4194a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4194a4:	add	x1, x0, #0x8c8
  4194a8:	mov	x0, x2
  4194ac:	bl	45b754 <argp_usage@@Base+0x12668>
  4194b0:	mov	x1, x0
  4194b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4194b8:	add	x0, x0, #0x8c0
  4194bc:	str	x1, [x0]
  4194c0:	ldrb	w0, [sp, #39]
  4194c4:	cmp	w0, #0x25
  4194c8:	b.ne	4194fc <wcrtomb@plt+0x147ec>  // b.any
  4194cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4194d0:	add	x0, x0, #0x8c0
  4194d4:	ldr	x1, [x0]
  4194d8:	ldr	x0, [sp, #40]
  4194dc:	add	x0, x1, x0
  4194e0:	mov	w1, #0x3225                	// #12837
  4194e4:	movk	w1, #0x35, lsl #16
  4194e8:	str	w1, [x0]
  4194ec:	ldr	x0, [sp, #40]
  4194f0:	add	x0, x0, #0x2
  4194f4:	str	x0, [sp, #40]
  4194f8:	b	419554 <wcrtomb@plt+0x14844>
  4194fc:	ldrb	w0, [sp, #39]
  419500:	cmp	w0, #0x3d
  419504:	b.ne	419538 <wcrtomb@plt+0x14828>  // b.any
  419508:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41950c:	add	x0, x0, #0x8c0
  419510:	ldr	x1, [x0]
  419514:	ldr	x0, [sp, #40]
  419518:	add	x0, x1, x0
  41951c:	mov	w1, #0x3325                	// #13093
  419520:	movk	w1, #0x44, lsl #16
  419524:	str	w1, [x0]
  419528:	ldr	x0, [sp, #40]
  41952c:	add	x0, x0, #0x2
  419530:	str	x0, [sp, #40]
  419534:	b	419554 <wcrtomb@plt+0x14844>
  419538:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41953c:	add	x0, x0, #0x8c0
  419540:	ldr	x1, [x0]
  419544:	ldr	x0, [sp, #40]
  419548:	add	x0, x1, x0
  41954c:	ldrb	w1, [sp, #39]
  419550:	strb	w1, [x0]
  419554:	ldr	x0, [sp, #40]
  419558:	add	x0, x0, #0x1
  41955c:	str	x0, [sp, #40]
  419560:	ldr	x0, [sp, #24]
  419564:	add	x0, x0, #0x1
  419568:	str	x0, [sp, #24]
  41956c:	ldr	x0, [sp, #24]
  419570:	ldrb	w0, [x0]
  419574:	cmp	w0, #0x0
  419578:	b.ne	41946c <wcrtomb@plt+0x1475c>  // b.any
  41957c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419580:	add	x0, x0, #0x8c0
  419584:	ldr	x1, [x0]
  419588:	ldr	x0, [sp, #40]
  41958c:	add	x0, x1, x0
  419590:	strb	wzr, [x0]
  419594:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419598:	add	x0, x0, #0x8c0
  41959c:	ldr	x0, [x0]
  4195a0:	ldp	x29, x30, [sp], #48
  4195a4:	ret
  4195a8:	stp	x29, x30, [sp, #-112]!
  4195ac:	mov	x29, sp
  4195b0:	str	x0, [sp, #40]
  4195b4:	str	x1, [sp, #32]
  4195b8:	str	x2, [sp, #24]
  4195bc:	str	x3, [sp, #16]
  4195c0:	str	xzr, [sp, #104]
  4195c4:	ldr	x0, [sp, #32]
  4195c8:	bl	419400 <wcrtomb@plt+0x146f0>
  4195cc:	str	x0, [sp, #32]
  4195d0:	ldr	x0, [sp, #32]
  4195d4:	bl	4040b0 <strlen@plt>
  4195d8:	str	x0, [sp, #96]
  4195dc:	ldr	x1, [sp, #96]
  4195e0:	ldr	x0, [sp, #16]
  4195e4:	add	x0, x1, x0
  4195e8:	add	x0, x0, #0x3
  4195ec:	str	x0, [sp, #88]
  4195f0:	ldr	x0, [sp, #104]
  4195f4:	str	x0, [sp, #80]
  4195f8:	ldr	x1, [sp, #88]
  4195fc:	ldr	x0, [sp, #80]
  419600:	add	x0, x1, x0
  419604:	add	x1, sp, #0x30
  419608:	bl	450988 <argp_usage@@Base+0x789c>
  41960c:	str	x0, [sp, #72]
  419610:	add	x0, sp, #0x30
  419614:	add	x0, x0, #0x14
  419618:	ldr	x1, [sp, #72]
  41961c:	sub	x0, x0, x1
  419620:	str	x0, [sp, #104]
  419624:	ldr	x1, [sp, #104]
  419628:	ldr	x0, [sp, #80]
  41962c:	cmp	x1, x0
  419630:	b.ne	4195f0 <wcrtomb@plt+0x148e0>  // b.any
  419634:	ldr	x2, [sp, #104]
  419638:	ldr	x1, [sp, #72]
  41963c:	ldr	x0, [sp, #40]
  419640:	bl	4172e8 <wcrtomb@plt+0x125d8>
  419644:	mov	w1, #0x20                  	// #32
  419648:	ldr	x0, [sp, #40]
  41964c:	bl	417398 <wcrtomb@plt+0x12688>
  419650:	ldr	x2, [sp, #96]
  419654:	ldr	x1, [sp, #32]
  419658:	ldr	x0, [sp, #40]
  41965c:	bl	4172e8 <wcrtomb@plt+0x125d8>
  419660:	mov	w1, #0x3d                  	// #61
  419664:	ldr	x0, [sp, #40]
  419668:	bl	417398 <wcrtomb@plt+0x12688>
  41966c:	ldr	x2, [sp, #16]
  419670:	ldr	x1, [sp, #24]
  419674:	ldr	x0, [sp, #40]
  419678:	bl	4172e8 <wcrtomb@plt+0x125d8>
  41967c:	mov	w1, #0xa                   	// #10
  419680:	ldr	x0, [sp, #40]
  419684:	bl	417398 <wcrtomb@plt+0x12688>
  419688:	nop
  41968c:	ldp	x29, x30, [sp], #112
  419690:	ret
  419694:	stp	x29, x30, [sp, #-48]!
  419698:	mov	x29, sp
  41969c:	str	x0, [sp, #40]
  4196a0:	str	x1, [sp, #32]
  4196a4:	str	x2, [sp, #24]
  4196a8:	ldr	x0, [sp, #24]
  4196ac:	bl	4040b0 <strlen@plt>
  4196b0:	mov	x3, x0
  4196b4:	ldr	x2, [sp, #24]
  4196b8:	ldr	x1, [sp, #32]
  4196bc:	ldr	x0, [sp, #40]
  4196c0:	bl	4195a8 <wcrtomb@plt+0x14898>
  4196c4:	nop
  4196c8:	ldp	x29, x30, [sp], #48
  4196cc:	ret
  4196d0:	stp	x29, x30, [sp, #-64]!
  4196d4:	mov	x29, sp
  4196d8:	str	x0, [sp, #24]
  4196dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4196e0:	add	x0, x0, #0x880
  4196e4:	ldr	x0, [x0]
  4196e8:	str	x0, [sp, #56]
  4196ec:	b	41971c <wcrtomb@plt+0x14a0c>
  4196f0:	ldr	x0, [sp, #56]
  4196f4:	ldr	x3, [x0, #16]
  4196f8:	ldr	x0, [sp, #56]
  4196fc:	ldr	x0, [x0, #8]
  419700:	ldr	x2, [sp, #24]
  419704:	mov	x1, x0
  419708:	mov	x0, x3
  41970c:	bl	419d1c <wcrtomb@plt+0x1500c>
  419710:	ldr	x0, [sp, #56]
  419714:	ldr	x0, [x0]
  419718:	str	x0, [sp, #56]
  41971c:	ldr	x0, [sp, #56]
  419720:	cmp	x0, #0x0
  419724:	b.ne	4196f0 <wcrtomb@plt+0x149e0>  // b.any
  419728:	ldr	x0, [sp, #24]
  41972c:	ldr	x0, [x0]
  419730:	str	x0, [sp, #48]
  419734:	ldr	x0, [sp, #48]
  419738:	ldr	x0, [x0, #16]
  41973c:	str	x0, [sp, #40]
  419740:	ldr	x0, [sp, #48]
  419744:	ldr	x0, [x0, #24]
  419748:	ldr	x1, [sp, #40]
  41974c:	cmp	x1, x0
  419750:	b.ne	419764 <wcrtomb@plt+0x14a54>  // b.any
  419754:	ldr	x0, [sp, #48]
  419758:	ldrb	w1, [x0, #80]
  41975c:	orr	w1, w1, #0x2
  419760:	strb	w1, [x0, #80]
  419764:	ldr	x0, [sp, #48]
  419768:	ldr	x0, [x0, #24]
  41976c:	mov	x1, x0
  419770:	ldr	x0, [sp, #48]
  419774:	ldr	x0, [x0, #48]
  419778:	add	x1, x1, x0
  41977c:	ldr	x0, [sp, #48]
  419780:	ldr	x0, [x0, #48]
  419784:	mvn	x0, x0
  419788:	and	x0, x1, x0
  41978c:	mov	x1, x0
  419790:	ldr	x0, [sp, #48]
  419794:	str	x1, [x0, #24]
  419798:	ldr	x0, [sp, #48]
  41979c:	ldr	x1, [x0, #24]
  4197a0:	ldr	x0, [sp, #48]
  4197a4:	ldr	x0, [x0, #8]
  4197a8:	sub	x0, x1, x0
  4197ac:	mov	x2, x0
  4197b0:	ldr	x0, [sp, #48]
  4197b4:	ldr	x1, [x0, #32]
  4197b8:	ldr	x0, [sp, #48]
  4197bc:	ldr	x0, [x0, #8]
  4197c0:	sub	x0, x1, x0
  4197c4:	cmp	x2, x0
  4197c8:	b.ls	4197dc <wcrtomb@plt+0x14acc>  // b.plast
  4197cc:	ldr	x0, [sp, #48]
  4197d0:	ldr	x1, [x0, #32]
  4197d4:	ldr	x0, [sp, #48]
  4197d8:	str	x1, [x0, #24]
  4197dc:	ldr	x0, [sp, #48]
  4197e0:	ldr	x1, [x0, #24]
  4197e4:	ldr	x0, [sp, #48]
  4197e8:	str	x1, [x0, #16]
  4197ec:	ldr	x1, [sp, #40]
  4197f0:	ldr	x0, [sp, #24]
  4197f4:	str	x1, [x0, #16]
  4197f8:	nop
  4197fc:	ldp	x29, x30, [sp], #64
  419800:	ret
  419804:	stp	x29, x30, [sp, #-48]!
  419808:	mov	x29, sp
  41980c:	str	x0, [sp, #24]
  419810:	ldr	x0, [sp, #24]
  419814:	ldr	x0, [x0]
  419818:	cmp	x0, #0x0
  41981c:	b.eq	41989c <wcrtomb@plt+0x14b8c>  // b.none
  419820:	ldr	x0, [sp, #24]
  419824:	ldr	x0, [x0]
  419828:	str	x0, [sp, #40]
  41982c:	str	xzr, [sp, #32]
  419830:	ldr	x0, [sp, #40]
  419834:	ldr	x0, [x0, #8]
  419838:	ldr	x1, [sp, #32]
  41983c:	cmp	x1, x0
  419840:	b.ls	419878 <wcrtomb@plt+0x14b68>  // b.plast
  419844:	ldr	x0, [sp, #40]
  419848:	ldr	x0, [x0, #32]
  41984c:	ldr	x1, [sp, #32]
  419850:	cmp	x1, x0
  419854:	b.cs	419878 <wcrtomb@plt+0x14b68>  // b.hs, b.nlast
  419858:	ldr	x0, [sp, #40]
  41985c:	ldr	x1, [sp, #32]
  419860:	str	x1, [x0, #16]
  419864:	ldr	x0, [sp, #40]
  419868:	ldr	x1, [x0, #16]
  41986c:	ldr	x0, [sp, #40]
  419870:	str	x1, [x0, #24]
  419874:	b	419884 <wcrtomb@plt+0x14b74>
  419878:	ldr	x1, [sp, #32]
  41987c:	ldr	x0, [sp, #40]
  419880:	bl	45d05c <_obstack_free@@Base>
  419884:	ldr	x0, [sp, #24]
  419888:	ldr	x0, [x0]
  41988c:	bl	404880 <free@plt>
  419890:	ldr	x0, [sp, #24]
  419894:	str	xzr, [x0]
  419898:	b	4198a8 <wcrtomb@plt+0x14b98>
  41989c:	ldr	x0, [sp, #24]
  4198a0:	ldr	x0, [x0, #16]
  4198a4:	bl	404880 <free@plt>
  4198a8:	ldr	x0, [sp, #24]
  4198ac:	str	xzr, [x0, #16]
  4198b0:	ldr	x0, [sp, #24]
  4198b4:	str	xzr, [x0, #8]
  4198b8:	nop
  4198bc:	ldp	x29, x30, [sp], #48
  4198c0:	ret
  4198c4:	sub	sp, sp, #0x10
  4198c8:	str	x0, [sp, #8]
  4198cc:	ldr	x0, [sp, #8]
  4198d0:	str	xzr, [x0, #24]
  4198d4:	nop
  4198d8:	add	sp, sp, #0x10
  4198dc:	ret
  4198e0:	stp	x29, x30, [sp, #-48]!
  4198e4:	mov	x29, sp
  4198e8:	str	x19, [sp, #16]
  4198ec:	str	x0, [sp, #40]
  4198f0:	str	x1, [sp, #32]
  4198f4:	ldr	x0, [sp, #40]
  4198f8:	ldr	x0, [x0, #16]
  4198fc:	cmp	x0, #0x0
  419900:	b.ne	419944 <wcrtomb@plt+0x14c34>  // b.any
  419904:	ldr	x0, [sp, #40]
  419908:	bl	419180 <wcrtomb@plt+0x14470>
  41990c:	ldr	x0, [sp, #40]
  419910:	ldr	x19, [x0, #24]
  419914:	ldr	x0, [sp, #32]
  419918:	bl	4040b0 <strlen@plt>
  41991c:	add	x1, x19, x0
  419920:	ldr	x0, [sp, #40]
  419924:	str	x1, [x0, #24]
  419928:	ldr	x0, [sp, #32]
  41992c:	bl	4040b0 <strlen@plt>
  419930:	mov	x2, x0
  419934:	ldr	x1, [sp, #32]
  419938:	ldr	x0, [sp, #40]
  41993c:	bl	4172e8 <wcrtomb@plt+0x125d8>
  419940:	b	419948 <wcrtomb@plt+0x14c38>
  419944:	nop
  419948:	ldr	x19, [sp, #16]
  41994c:	ldp	x29, x30, [sp], #48
  419950:	ret
  419954:	stp	x29, x30, [sp, #-144]!
  419958:	mov	x29, sp
  41995c:	str	x0, [sp, #24]
  419960:	str	x1, [sp, #16]
  419964:	str	xzr, [sp, #136]
  419968:	ldr	x0, [sp, #24]
  41996c:	ldr	x0, [x0, #16]
  419970:	cmp	x0, #0x0
  419974:	b.eq	419980 <wcrtomb@plt+0x14c70>  // b.none
  419978:	mov	w0, #0x0                   	// #0
  41997c:	b	419c68 <wcrtomb@plt+0x14f58>
  419980:	ldr	x0, [sp, #24]
  419984:	bl	419180 <wcrtomb@plt+0x14470>
  419988:	ldr	x0, [sp, #16]
  41998c:	bl	4040b0 <strlen@plt>
  419990:	mov	x1, x0
  419994:	ldr	x0, [sp, #24]
  419998:	ldr	x0, [x0, #24]
  41999c:	add	x0, x1, x0
  4199a0:	add	x0, x0, #0x3
  4199a4:	str	x0, [sp, #128]
  4199a8:	ldr	x0, [sp, #136]
  4199ac:	str	x0, [sp, #120]
  4199b0:	ldr	x1, [sp, #128]
  4199b4:	ldr	x0, [sp, #120]
  4199b8:	add	x0, x1, x0
  4199bc:	add	x1, sp, #0x28
  4199c0:	bl	450988 <argp_usage@@Base+0x789c>
  4199c4:	str	x0, [sp, #112]
  4199c8:	add	x0, sp, #0x28
  4199cc:	add	x0, x0, #0x14
  4199d0:	ldr	x1, [sp, #112]
  4199d4:	sub	x0, x0, x1
  4199d8:	str	x0, [sp, #136]
  4199dc:	ldr	x1, [sp, #136]
  4199e0:	ldr	x0, [sp, #120]
  4199e4:	cmp	x1, x0
  4199e8:	b.ne	4199a8 <wcrtomb@plt+0x14c98>  // b.any
  4199ec:	ldr	x0, [sp, #16]
  4199f0:	bl	4040b0 <strlen@plt>
  4199f4:	mov	x1, x0
  4199f8:	ldr	x0, [sp, #136]
  4199fc:	add	x0, x1, x0
  419a00:	add	x0, x0, #0x2
  419a04:	str	x0, [sp, #120]
  419a08:	ldr	x0, [sp, #120]
  419a0c:	str	x0, [sp, #104]
  419a10:	ldr	x1, [sp, #104]
  419a14:	ldr	x0, [sp, #120]
  419a18:	cmp	x1, x0
  419a1c:	b.eq	419bb4 <wcrtomb@plt+0x14ea4>  // b.none
  419a20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419a24:	add	x0, x0, #0x420
  419a28:	ldr	x0, [x0]
  419a2c:	cmp	x0, #0x0
  419a30:	b.eq	419a44 <wcrtomb@plt+0x14d34>  // b.none
  419a34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419a38:	add	x0, x0, #0x420
  419a3c:	ldr	x0, [x0]
  419a40:	blr	x0
  419a44:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  419a48:	add	x0, x0, #0x568
  419a4c:	bl	404c60 <gettext@plt>
  419a50:	mov	x1, x0
  419a54:	add	x0, sp, #0x28
  419a58:	mov	x4, x0
  419a5c:	ldr	x3, [sp, #16]
  419a60:	mov	x2, x1
  419a64:	mov	w1, #0x0                   	// #0
  419a68:	mov	w0, #0x0                   	// #0
  419a6c:	bl	404100 <error@plt>
  419a70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419a74:	add	x0, x0, #0xdb0
  419a78:	mov	w1, #0x2                   	// #2
  419a7c:	str	w1, [x0]
  419a80:	ldr	x0, [sp, #24]
  419a84:	ldr	x0, [x0]
  419a88:	str	x0, [sp, #88]
  419a8c:	ldr	x0, [sp, #24]
  419a90:	ldr	x0, [x0]
  419a94:	str	x0, [sp, #80]
  419a98:	ldr	x0, [sp, #80]
  419a9c:	ldr	x0, [x0, #16]
  419aa0:	str	x0, [sp, #72]
  419aa4:	ldr	x0, [sp, #80]
  419aa8:	ldr	x0, [x0, #24]
  419aac:	ldr	x1, [sp, #72]
  419ab0:	cmp	x1, x0
  419ab4:	b.ne	419ac8 <wcrtomb@plt+0x14db8>  // b.any
  419ab8:	ldr	x0, [sp, #80]
  419abc:	ldrb	w1, [x0, #80]
  419ac0:	orr	w1, w1, #0x2
  419ac4:	strb	w1, [x0, #80]
  419ac8:	ldr	x0, [sp, #80]
  419acc:	ldr	x0, [x0, #24]
  419ad0:	mov	x1, x0
  419ad4:	ldr	x0, [sp, #80]
  419ad8:	ldr	x0, [x0, #48]
  419adc:	add	x1, x1, x0
  419ae0:	ldr	x0, [sp, #80]
  419ae4:	ldr	x0, [x0, #48]
  419ae8:	mvn	x0, x0
  419aec:	and	x0, x1, x0
  419af0:	mov	x1, x0
  419af4:	ldr	x0, [sp, #80]
  419af8:	str	x1, [x0, #24]
  419afc:	ldr	x0, [sp, #80]
  419b00:	ldr	x1, [x0, #24]
  419b04:	ldr	x0, [sp, #80]
  419b08:	ldr	x0, [x0, #8]
  419b0c:	sub	x0, x1, x0
  419b10:	mov	x2, x0
  419b14:	ldr	x0, [sp, #80]
  419b18:	ldr	x1, [x0, #32]
  419b1c:	ldr	x0, [sp, #80]
  419b20:	ldr	x0, [x0, #8]
  419b24:	sub	x0, x1, x0
  419b28:	cmp	x2, x0
  419b2c:	b.ls	419b40 <wcrtomb@plt+0x14e30>  // b.plast
  419b30:	ldr	x0, [sp, #80]
  419b34:	ldr	x1, [x0, #32]
  419b38:	ldr	x0, [sp, #80]
  419b3c:	str	x1, [x0, #24]
  419b40:	ldr	x0, [sp, #80]
  419b44:	ldr	x1, [x0, #24]
  419b48:	ldr	x0, [sp, #80]
  419b4c:	str	x1, [x0, #16]
  419b50:	ldr	x0, [sp, #72]
  419b54:	str	x0, [sp, #64]
  419b58:	ldr	x0, [sp, #88]
  419b5c:	ldr	x0, [x0, #8]
  419b60:	ldr	x1, [sp, #64]
  419b64:	cmp	x1, x0
  419b68:	b.ls	419ba0 <wcrtomb@plt+0x14e90>  // b.plast
  419b6c:	ldr	x0, [sp, #88]
  419b70:	ldr	x0, [x0, #32]
  419b74:	ldr	x1, [sp, #64]
  419b78:	cmp	x1, x0
  419b7c:	b.cs	419ba0 <wcrtomb@plt+0x14e90>  // b.hs, b.nlast
  419b80:	ldr	x0, [sp, #88]
  419b84:	ldr	x1, [sp, #64]
  419b88:	str	x1, [x0, #16]
  419b8c:	ldr	x0, [sp, #88]
  419b90:	ldr	x1, [x0, #16]
  419b94:	ldr	x0, [sp, #88]
  419b98:	str	x1, [x0, #24]
  419b9c:	b	419bac <wcrtomb@plt+0x14e9c>
  419ba0:	ldr	x1, [sp, #64]
  419ba4:	ldr	x0, [sp, #88]
  419ba8:	bl	45d05c <_obstack_free@@Base>
  419bac:	mov	w0, #0x0                   	// #0
  419bb0:	b	419c68 <wcrtomb@plt+0x14f58>
  419bb4:	ldr	x1, [sp, #120]
  419bb8:	ldr	x0, [sp, #24]
  419bbc:	bl	417420 <wcrtomb@plt+0x12710>
  419bc0:	mov	w1, #0xa                   	// #10
  419bc4:	ldr	x0, [sp, #24]
  419bc8:	bl	417398 <wcrtomb@plt+0x12688>
  419bcc:	ldr	x0, [sp, #24]
  419bd0:	ldr	x0, [x0]
  419bd4:	ldr	x1, [x0, #24]
  419bd8:	ldr	x0, [sp, #24]
  419bdc:	ldr	x0, [x0, #24]
  419be0:	neg	x2, x0
  419be4:	ldr	x0, [sp, #120]
  419be8:	sub	x0, x2, x0
  419bec:	sub	x0, x0, #0x1
  419bf0:	add	x0, x1, x0
  419bf4:	str	x0, [sp, #96]
  419bf8:	ldr	x1, [sp, #96]
  419bfc:	ldr	x0, [sp, #120]
  419c00:	add	x3, x1, x0
  419c04:	ldr	x0, [sp, #24]
  419c08:	ldr	x0, [x0, #24]
  419c0c:	mov	x2, x0
  419c10:	ldr	x1, [sp, #96]
  419c14:	mov	x0, x3
  419c18:	bl	404030 <memmove@plt>
  419c1c:	ldr	x1, [sp, #112]
  419c20:	ldr	x0, [sp, #96]
  419c24:	bl	404310 <stpcpy@plt>
  419c28:	str	x0, [sp, #96]
  419c2c:	ldr	x0, [sp, #96]
  419c30:	add	x1, x0, #0x1
  419c34:	str	x1, [sp, #96]
  419c38:	mov	w1, #0x20                  	// #32
  419c3c:	strb	w1, [x0]
  419c40:	ldr	x1, [sp, #16]
  419c44:	ldr	x0, [sp, #96]
  419c48:	bl	404310 <stpcpy@plt>
  419c4c:	str	x0, [sp, #96]
  419c50:	ldr	x0, [sp, #96]
  419c54:	add	x1, x0, #0x1
  419c58:	str	x1, [sp, #96]
  419c5c:	mov	w1, #0x3d                  	// #61
  419c60:	strb	w1, [x0]
  419c64:	mov	w0, #0x1                   	// #1
  419c68:	ldp	x29, x30, [sp], #144
  419c6c:	ret
  419c70:	stp	x29, x30, [sp, #-112]!
  419c74:	mov	x29, sp
  419c78:	str	x0, [sp, #40]
  419c7c:	str	x1, [sp, #32]
  419c80:	str	x2, [sp, #24]
  419c84:	str	x3, [sp, #16]
  419c88:	add	x0, sp, #0x48
  419c8c:	mov	x1, x0
  419c90:	ldr	x0, [sp, #24]
  419c94:	bl	4506e8 <argp_usage@@Base+0x75fc>
  419c98:	str	x0, [sp, #104]
  419c9c:	add	x0, sp, #0x30
  419ca0:	mov	x1, x0
  419ca4:	ldr	x0, [sp, #16]
  419ca8:	bl	450988 <argp_usage@@Base+0x789c>
  419cac:	str	x0, [sp, #96]
  419cb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419cb4:	add	x0, x0, #0x420
  419cb8:	ldr	x0, [x0]
  419cbc:	cmp	x0, #0x0
  419cc0:	b.eq	419cd4 <wcrtomb@plt+0x14fc4>  // b.none
  419cc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419cc8:	add	x0, x0, #0x420
  419ccc:	ldr	x0, [x0]
  419cd0:	blr	x0
  419cd4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  419cd8:	add	x0, x0, #0x5b0
  419cdc:	bl	404c60 <gettext@plt>
  419ce0:	ldr	x6, [sp, #96]
  419ce4:	ldr	x5, [sp, #104]
  419ce8:	ldr	x4, [sp, #32]
  419cec:	ldr	x3, [sp, #40]
  419cf0:	mov	x2, x0
  419cf4:	mov	w1, #0x0                   	// #0
  419cf8:	mov	w0, #0x0                   	// #0
  419cfc:	bl	404100 <error@plt>
  419d00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419d04:	add	x0, x0, #0xdb0
  419d08:	mov	w1, #0x2                   	// #2
  419d0c:	str	w1, [x0]
  419d10:	nop
  419d14:	ldp	x29, x30, [sp], #112
  419d18:	ret
  419d1c:	stp	x29, x30, [sp, #-64]!
  419d20:	mov	x29, sp
  419d24:	str	x0, [sp, #40]
  419d28:	str	x1, [sp, #32]
  419d2c:	str	x2, [sp, #24]
  419d30:	add	x0, sp, #0x38
  419d34:	mov	x2, x0
  419d38:	ldr	x1, [sp, #40]
  419d3c:	mov	w0, #0x1                   	// #1
  419d40:	bl	437998 <wcrtomb@plt+0x32c88>
  419d44:	and	w0, w0, #0xff
  419d48:	eor	w0, w0, #0x1
  419d4c:	and	w0, w0, #0xff
  419d50:	cmp	w0, #0x0
  419d54:	b.eq	419d64 <wcrtomb@plt+0x15054>  // b.none
  419d58:	ldr	x0, [sp, #40]
  419d5c:	bl	45b858 <argp_usage@@Base+0x1276c>
  419d60:	str	x0, [sp, #56]
  419d64:	ldr	x0, [sp, #56]
  419d68:	mov	x2, x0
  419d6c:	ldr	x1, [sp, #32]
  419d70:	ldr	x0, [sp, #24]
  419d74:	bl	419694 <wcrtomb@plt+0x14984>
  419d78:	ldr	x0, [sp, #56]
  419d7c:	bl	404880 <free@plt>
  419d80:	nop
  419d84:	ldp	x29, x30, [sp], #64
  419d88:	ret
  419d8c:	stp	x29, x30, [sp, #-32]!
  419d90:	mov	x29, sp
  419d94:	str	x0, [sp, #24]
  419d98:	str	x1, [sp, #16]
  419d9c:	ldr	x0, [sp, #24]
  419da0:	ldr	x0, [x0]
  419da4:	cmp	x0, #0x0
  419da8:	b.eq	419dc0 <wcrtomb@plt+0x150b0>  // b.none
  419dac:	ldr	x0, [sp, #24]
  419db0:	ldr	x0, [x0]
  419db4:	bl	404880 <free@plt>
  419db8:	ldr	x0, [sp, #24]
  419dbc:	str	xzr, [x0]
  419dc0:	ldr	x2, [sp, #24]
  419dc4:	ldr	x1, [sp, #16]
  419dc8:	mov	w0, #0x0                   	// #0
  419dcc:	bl	437998 <wcrtomb@plt+0x32c88>
  419dd0:	and	w0, w0, #0xff
  419dd4:	eor	w0, w0, #0x1
  419dd8:	and	w0, w0, #0xff
  419ddc:	cmp	w0, #0x0
  419de0:	b.eq	419df0 <wcrtomb@plt+0x150e0>  // b.none
  419de4:	ldr	x1, [sp, #16]
  419de8:	ldr	x0, [sp, #24]
  419dec:	bl	423d0c <wcrtomb@plt+0x1effc>
  419df0:	nop
  419df4:	ldp	x29, x30, [sp], #32
  419df8:	ret
  419dfc:	stp	x29, x30, [sp, #-80]!
  419e00:	mov	x29, sp
  419e04:	stp	x0, x1, [sp, #32]
  419e08:	str	x2, [sp, #24]
  419e0c:	str	x3, [sp, #16]
  419e10:	add	x0, sp, #0x30
  419e14:	mov	x2, x0
  419e18:	ldp	x0, x1, [sp, #32]
  419e1c:	bl	424968 <wcrtomb@plt+0x1fc58>
  419e20:	mov	x2, x0
  419e24:	ldr	x1, [sp, #24]
  419e28:	ldr	x0, [sp, #16]
  419e2c:	bl	419694 <wcrtomb@plt+0x14984>
  419e30:	nop
  419e34:	ldp	x29, x30, [sp], #80
  419e38:	ret
  419e3c:	stp	x29, x30, [sp, #-80]!
  419e40:	mov	x29, sp
  419e44:	str	x0, [sp, #40]
  419e48:	str	x1, [sp, #32]
  419e4c:	str	x2, [sp, #24]
  419e50:	add	x0, sp, #0x48
  419e54:	mov	w2, #0x1                   	// #1
  419e58:	mov	x1, x0
  419e5c:	ldr	x0, [sp, #32]
  419e60:	bl	424a60 <wcrtomb@plt+0x1fd50>
  419e64:	stp	x0, x1, [sp, #56]
  419e68:	ldp	x0, x1, [sp, #56]
  419e6c:	bl	423cbc <wcrtomb@plt+0x1efac>
  419e70:	and	w0, w0, #0xff
  419e74:	eor	w0, w0, #0x1
  419e78:	and	w0, w0, #0xff
  419e7c:	cmp	w0, #0x0
  419e80:	b.eq	419f1c <wcrtomb@plt+0x1520c>  // b.none
  419e84:	ldr	x0, [sp, #72]
  419e88:	ldr	x1, [sp, #32]
  419e8c:	cmp	x1, x0
  419e90:	b.cs	419ebc <wcrtomb@plt+0x151ac>  // b.hs, b.nlast
  419e94:	ldr	x0, [sp, #72]
  419e98:	ldrb	w0, [x0]
  419e9c:	cmp	w0, #0x0
  419ea0:	b.ne	419ebc <wcrtomb@plt+0x151ac>  // b.any
  419ea4:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  419ea8:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  419eac:	ldr	x1, [sp, #32]
  419eb0:	ldr	x0, [sp, #24]
  419eb4:	bl	419c70 <wcrtomb@plt+0x14f60>
  419eb8:	b	419f14 <wcrtomb@plt+0x15204>
  419ebc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419ec0:	add	x0, x0, #0x420
  419ec4:	ldr	x0, [x0]
  419ec8:	cmp	x0, #0x0
  419ecc:	b.eq	419ee0 <wcrtomb@plt+0x151d0>  // b.none
  419ed0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  419ed4:	add	x0, x0, #0x420
  419ed8:	ldr	x0, [x0]
  419edc:	blr	x0
  419ee0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  419ee4:	add	x0, x0, #0x5e0
  419ee8:	bl	404c60 <gettext@plt>
  419eec:	ldr	x4, [sp, #32]
  419ef0:	ldr	x3, [sp, #24]
  419ef4:	mov	x2, x0
  419ef8:	mov	w1, #0x0                   	// #0
  419efc:	mov	w0, #0x0                   	// #0
  419f00:	bl	404100 <error@plt>
  419f04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  419f08:	add	x0, x0, #0xdb0
  419f0c:	mov	w1, #0x2                   	// #2
  419f10:	str	w1, [x0]
  419f14:	mov	w0, #0x0                   	// #0
  419f18:	b	419f2c <wcrtomb@plt+0x1521c>
  419f1c:	ldr	x2, [sp, #40]
  419f20:	ldp	x0, x1, [sp, #56]
  419f24:	stp	x0, x1, [x2]
  419f28:	mov	w0, #0x1                   	// #1
  419f2c:	ldp	x29, x30, [sp], #80
  419f30:	ret
  419f34:	stp	x29, x30, [sp, #-96]!
  419f38:	mov	x29, sp
  419f3c:	str	x0, [sp, #56]
  419f40:	str	x1, [sp, #48]
  419f44:	str	x2, [sp, #40]
  419f48:	str	x3, [sp, #32]
  419f4c:	str	x4, [sp, #24]
  419f50:	add	x0, sp, #0x48
  419f54:	mov	x3, x0
  419f58:	ldr	x2, [sp, #32]
  419f5c:	ldr	x1, [sp, #40]
  419f60:	ldr	x0, [sp, #56]
  419f64:	bl	42465c <wcrtomb@plt+0x1f94c>
  419f68:	mov	x2, x0
  419f6c:	ldr	x1, [sp, #48]
  419f70:	ldr	x0, [sp, #24]
  419f74:	bl	419694 <wcrtomb@plt+0x14984>
  419f78:	nop
  419f7c:	ldp	x29, x30, [sp], #96
  419f80:	ret
  419f84:	stp	x29, x30, [sp, #-48]!
  419f88:	mov	x29, sp
  419f8c:	str	x0, [sp, #40]
  419f90:	str	x1, [sp, #32]
  419f94:	str	x2, [sp, #24]
  419f98:	ldr	x4, [sp, #24]
  419f9c:	mov	x3, #0xffffffffffffffff    	// #-1
  419fa0:	mov	x2, #0x0                   	// #0
  419fa4:	ldr	x1, [sp, #32]
  419fa8:	ldr	x0, [sp, #40]
  419fac:	bl	419f34 <wcrtomb@plt+0x15224>
  419fb0:	nop
  419fb4:	ldp	x29, x30, [sp], #48
  419fb8:	ret
  419fbc:	stp	x29, x30, [sp, #-80]!
  419fc0:	mov	x29, sp
  419fc4:	str	x0, [sp, #56]
  419fc8:	str	x1, [sp, #48]
  419fcc:	str	x2, [sp, #40]
  419fd0:	str	x3, [sp, #32]
  419fd4:	str	x4, [sp, #24]
  419fd8:	add	x0, sp, #0x40
  419fdc:	ldr	x3, [sp, #32]
  419fe0:	ldr	x2, [sp, #40]
  419fe4:	mov	x1, x0
  419fe8:	ldr	x0, [sp, #48]
  419fec:	bl	4246c0 <wcrtomb@plt+0x1f9b0>
  419ff0:	str	x0, [sp, #72]
  419ff4:	bl	404bc0 <__errno_location@plt>
  419ff8:	ldr	w0, [x0]
  419ffc:	cmp	w0, #0x16
  41a000:	b.eq	41a014 <wcrtomb@plt+0x15304>  // b.none
  41a004:	ldr	x0, [sp, #64]
  41a008:	ldrb	w0, [x0]
  41a00c:	cmp	w0, #0x0
  41a010:	b.eq	41a074 <wcrtomb@plt+0x15364>  // b.none
  41a014:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41a018:	add	x0, x0, #0x420
  41a01c:	ldr	x0, [x0]
  41a020:	cmp	x0, #0x0
  41a024:	b.eq	41a038 <wcrtomb@plt+0x15328>  // b.none
  41a028:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41a02c:	add	x0, x0, #0x420
  41a030:	ldr	x0, [x0]
  41a034:	blr	x0
  41a038:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41a03c:	add	x0, x0, #0x5e0
  41a040:	bl	404c60 <gettext@plt>
  41a044:	ldr	x4, [sp, #48]
  41a048:	ldr	x3, [sp, #24]
  41a04c:	mov	x2, x0
  41a050:	mov	w1, #0x0                   	// #0
  41a054:	mov	w0, #0x0                   	// #0
  41a058:	bl	404100 <error@plt>
  41a05c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41a060:	add	x0, x0, #0xdb0
  41a064:	mov	w1, #0x2                   	// #2
  41a068:	str	w1, [x0]
  41a06c:	mov	w0, #0x0                   	// #0
  41a070:	b	41a0b0 <wcrtomb@plt+0x153a0>
  41a074:	bl	404bc0 <__errno_location@plt>
  41a078:	ldr	w0, [x0]
  41a07c:	cmp	w0, #0x22
  41a080:	b.ne	41a0a0 <wcrtomb@plt+0x15390>  // b.any
  41a084:	ldr	x3, [sp, #32]
  41a088:	ldr	x2, [sp, #40]
  41a08c:	ldr	x1, [sp, #48]
  41a090:	ldr	x0, [sp, #24]
  41a094:	bl	419c70 <wcrtomb@plt+0x14f60>
  41a098:	mov	w0, #0x0                   	// #0
  41a09c:	b	41a0b0 <wcrtomb@plt+0x153a0>
  41a0a0:	ldr	x0, [sp, #56]
  41a0a4:	ldr	x1, [sp, #72]
  41a0a8:	str	x1, [x0]
  41a0ac:	mov	w0, #0x1                   	// #1
  41a0b0:	ldp	x29, x30, [sp], #80
  41a0b4:	ret
  41a0b8:	stp	x29, x30, [sp, #-64]!
  41a0bc:	mov	x29, sp
  41a0c0:	str	x0, [sp, #40]
  41a0c4:	str	x1, [sp, #32]
  41a0c8:	str	x2, [sp, #24]
  41a0cc:	str	x3, [sp, #16]
  41a0d0:	add	x0, sp, #0x38
  41a0d4:	ldr	x4, [sp, #16]
  41a0d8:	ldr	x3, [sp, #24]
  41a0dc:	mov	x2, #0x0                   	// #0
  41a0e0:	ldr	x1, [sp, #32]
  41a0e4:	bl	419fbc <wcrtomb@plt+0x152ac>
  41a0e8:	and	w0, w0, #0xff
  41a0ec:	eor	w0, w0, #0x1
  41a0f0:	and	w0, w0, #0xff
  41a0f4:	cmp	w0, #0x0
  41a0f8:	b.eq	41a104 <wcrtomb@plt+0x153f4>  // b.none
  41a0fc:	mov	w0, #0x0                   	// #0
  41a100:	b	41a118 <wcrtomb@plt+0x15408>
  41a104:	ldr	x0, [sp, #56]
  41a108:	mov	x1, x0
  41a10c:	ldr	x0, [sp, #40]
  41a110:	str	x1, [x0]
  41a114:	mov	w0, #0x1                   	// #1
  41a118:	ldp	x29, x30, [sp], #64
  41a11c:	ret
  41a120:	sub	sp, sp, #0x20
  41a124:	str	x0, [sp, #24]
  41a128:	str	x1, [sp, #16]
  41a12c:	str	x2, [sp, #8]
  41a130:	str	x3, [sp]
  41a134:	nop
  41a138:	add	sp, sp, #0x20
  41a13c:	ret
  41a140:	sub	sp, sp, #0x20
  41a144:	str	x0, [sp, #24]
  41a148:	str	x1, [sp, #16]
  41a14c:	str	x2, [sp, #8]
  41a150:	str	x3, [sp]
  41a154:	nop
  41a158:	add	sp, sp, #0x20
  41a15c:	ret
  41a160:	stp	x29, x30, [sp, #-48]!
  41a164:	mov	x29, sp
  41a168:	str	x0, [sp, #40]
  41a16c:	str	x1, [sp, #32]
  41a170:	str	x2, [sp, #24]
  41a174:	str	x3, [sp, #16]
  41a178:	ldr	x0, [sp, #40]
  41a17c:	ldr	x3, [sp, #24]
  41a180:	ldr	x2, [sp, #32]
  41a184:	ldp	x0, x1, [x0, #216]
  41a188:	bl	419dfc <wcrtomb@plt+0x150ec>
  41a18c:	nop
  41a190:	ldp	x29, x30, [sp], #48
  41a194:	ret
  41a198:	stp	x29, x30, [sp, #-64]!
  41a19c:	mov	x29, sp
  41a1a0:	str	x0, [sp, #40]
  41a1a4:	str	x1, [sp, #32]
  41a1a8:	str	x2, [sp, #24]
  41a1ac:	str	x3, [sp, #16]
  41a1b0:	add	x0, sp, #0x30
  41a1b4:	ldr	x2, [sp, #32]
  41a1b8:	ldr	x1, [sp, #24]
  41a1bc:	bl	419e3c <wcrtomb@plt+0x1512c>
  41a1c0:	and	w0, w0, #0xff
  41a1c4:	cmp	w0, #0x0
  41a1c8:	b.eq	41a1d8 <wcrtomb@plt+0x154c8>  // b.none
  41a1cc:	ldr	x2, [sp, #40]
  41a1d0:	ldp	x0, x1, [sp, #48]
  41a1d4:	stp	x0, x1, [x2, #216]
  41a1d8:	nop
  41a1dc:	ldp	x29, x30, [sp], #64
  41a1e0:	ret
  41a1e4:	stp	x29, x30, [sp, #-48]!
  41a1e8:	mov	x29, sp
  41a1ec:	str	x0, [sp, #40]
  41a1f0:	str	x1, [sp, #32]
  41a1f4:	str	x2, [sp, #24]
  41a1f8:	str	x3, [sp, #16]
  41a1fc:	ldr	x0, [sp, #40]
  41a200:	ldr	w0, [x0, #116]
  41a204:	mov	w0, w0
  41a208:	ldr	x4, [sp, #24]
  41a20c:	mov	x3, #0xffffffff            	// #4294967295
  41a210:	mov	x2, #0x0                   	// #0
  41a214:	ldr	x1, [sp, #32]
  41a218:	bl	419f34 <wcrtomb@plt+0x15224>
  41a21c:	nop
  41a220:	ldp	x29, x30, [sp], #48
  41a224:	ret
  41a228:	stp	x29, x30, [sp, #-64]!
  41a22c:	mov	x29, sp
  41a230:	str	x0, [sp, #40]
  41a234:	str	x1, [sp, #32]
  41a238:	str	x2, [sp, #24]
  41a23c:	str	x3, [sp, #16]
  41a240:	add	x0, sp, #0x38
  41a244:	ldr	x4, [sp, #32]
  41a248:	mov	x3, #0xffffffff            	// #4294967295
  41a24c:	mov	x2, #0x0                   	// #0
  41a250:	ldr	x1, [sp, #24]
  41a254:	bl	419fbc <wcrtomb@plt+0x152ac>
  41a258:	and	w0, w0, #0xff
  41a25c:	cmp	w0, #0x0
  41a260:	b.eq	41a274 <wcrtomb@plt+0x15564>  // b.none
  41a264:	ldr	x0, [sp, #56]
  41a268:	mov	w1, w0
  41a26c:	ldr	x0, [sp, #40]
  41a270:	str	w1, [x0, #116]
  41a274:	nop
  41a278:	ldp	x29, x30, [sp], #64
  41a27c:	ret
  41a280:	stp	x29, x30, [sp, #-48]!
  41a284:	mov	x29, sp
  41a288:	str	x0, [sp, #40]
  41a28c:	str	x1, [sp, #32]
  41a290:	str	x2, [sp, #24]
  41a294:	str	x3, [sp, #16]
  41a298:	ldr	x0, [sp, #40]
  41a29c:	ldr	x0, [x0, #40]
  41a2a0:	ldr	x2, [sp, #24]
  41a2a4:	ldr	x1, [sp, #32]
  41a2a8:	bl	419d1c <wcrtomb@plt+0x1500c>
  41a2ac:	nop
  41a2b0:	ldp	x29, x30, [sp], #48
  41a2b4:	ret
  41a2b8:	stp	x29, x30, [sp, #-48]!
  41a2bc:	mov	x29, sp
  41a2c0:	str	x0, [sp, #40]
  41a2c4:	str	x1, [sp, #32]
  41a2c8:	str	x2, [sp, #24]
  41a2cc:	str	x3, [sp, #16]
  41a2d0:	ldr	x0, [sp, #40]
  41a2d4:	add	x0, x0, #0x28
  41a2d8:	ldr	x1, [sp, #24]
  41a2dc:	bl	419d8c <wcrtomb@plt+0x1507c>
  41a2e0:	nop
  41a2e4:	ldp	x29, x30, [sp], #48
  41a2e8:	ret
  41a2ec:	stp	x29, x30, [sp, #-48]!
  41a2f0:	mov	x29, sp
  41a2f4:	str	x0, [sp, #40]
  41a2f8:	str	x1, [sp, #32]
  41a2fc:	str	x2, [sp, #24]
  41a300:	str	x3, [sp, #16]
  41a304:	ldr	x0, [sp, #40]
  41a308:	ldr	x0, [x0, #24]
  41a30c:	ldr	x2, [sp, #24]
  41a310:	ldr	x1, [sp, #32]
  41a314:	bl	419d1c <wcrtomb@plt+0x1500c>
  41a318:	nop
  41a31c:	ldp	x29, x30, [sp], #48
  41a320:	ret
  41a324:	stp	x29, x30, [sp, #-48]!
  41a328:	mov	x29, sp
  41a32c:	str	x0, [sp, #40]
  41a330:	str	x1, [sp, #32]
  41a334:	str	x2, [sp, #24]
  41a338:	str	x3, [sp, #16]
  41a33c:	ldr	x0, [sp, #40]
  41a340:	add	x0, x0, #0x18
  41a344:	ldr	x1, [sp, #24]
  41a348:	bl	419d8c <wcrtomb@plt+0x1507c>
  41a34c:	nop
  41a350:	ldp	x29, x30, [sp], #48
  41a354:	ret
  41a358:	stp	x29, x30, [sp, #-48]!
  41a35c:	mov	x29, sp
  41a360:	str	x0, [sp, #40]
  41a364:	str	x1, [sp, #32]
  41a368:	str	x2, [sp, #24]
  41a36c:	str	x3, [sp, #16]
  41a370:	ldr	x0, [sp, #40]
  41a374:	ldr	x3, [sp, #24]
  41a378:	ldr	x2, [sp, #32]
  41a37c:	ldp	x0, x1, [x0, #248]
  41a380:	bl	419dfc <wcrtomb@plt+0x150ec>
  41a384:	nop
  41a388:	ldp	x29, x30, [sp], #48
  41a38c:	ret
  41a390:	stp	x29, x30, [sp, #-64]!
  41a394:	mov	x29, sp
  41a398:	str	x0, [sp, #40]
  41a39c:	str	x1, [sp, #32]
  41a3a0:	str	x2, [sp, #24]
  41a3a4:	str	x3, [sp, #16]
  41a3a8:	add	x0, sp, #0x30
  41a3ac:	ldr	x2, [sp, #32]
  41a3b0:	ldr	x1, [sp, #24]
  41a3b4:	bl	419e3c <wcrtomb@plt+0x1512c>
  41a3b8:	and	w0, w0, #0xff
  41a3bc:	cmp	w0, #0x0
  41a3c0:	b.eq	41a3d0 <wcrtomb@plt+0x156c0>  // b.none
  41a3c4:	ldr	x2, [sp, #40]
  41a3c8:	ldp	x0, x1, [sp, #48]
  41a3cc:	stp	x0, x1, [x2, #248]
  41a3d0:	nop
  41a3d4:	ldp	x29, x30, [sp], #64
  41a3d8:	ret
  41a3dc:	stp	x29, x30, [sp, #-64]!
  41a3e0:	mov	x29, sp
  41a3e4:	str	x0, [sp, #40]
  41a3e8:	str	x1, [sp, #32]
  41a3ec:	str	x2, [sp, #24]
  41a3f0:	str	x3, [sp, #16]
  41a3f4:	ldr	x0, [sp, #16]
  41a3f8:	str	x0, [sp, #56]
  41a3fc:	ldr	x0, [sp, #56]
  41a400:	cmp	x0, #0x0
  41a404:	b.eq	41a414 <wcrtomb@plt+0x15704>  // b.none
  41a408:	ldr	x0, [sp, #56]
  41a40c:	ldp	x0, x1, [x0]
  41a410:	b	41a41c <wcrtomb@plt+0x1570c>
  41a414:	ldr	x0, [sp, #40]
  41a418:	ldp	x0, x1, [x0, #232]
  41a41c:	ldr	x3, [sp, #24]
  41a420:	ldr	x2, [sp, #32]
  41a424:	bl	419dfc <wcrtomb@plt+0x150ec>
  41a428:	nop
  41a42c:	ldp	x29, x30, [sp], #64
  41a430:	ret
  41a434:	stp	x29, x30, [sp, #-64]!
  41a438:	mov	x29, sp
  41a43c:	str	x0, [sp, #40]
  41a440:	str	x1, [sp, #32]
  41a444:	str	x2, [sp, #24]
  41a448:	str	x3, [sp, #16]
  41a44c:	add	x0, sp, #0x30
  41a450:	ldr	x2, [sp, #32]
  41a454:	ldr	x1, [sp, #24]
  41a458:	bl	419e3c <wcrtomb@plt+0x1512c>
  41a45c:	and	w0, w0, #0xff
  41a460:	cmp	w0, #0x0
  41a464:	b.eq	41a474 <wcrtomb@plt+0x15764>  // b.none
  41a468:	ldr	x2, [sp, #40]
  41a46c:	ldp	x0, x1, [sp, #48]
  41a470:	stp	x0, x1, [x2, #232]
  41a474:	nop
  41a478:	ldp	x29, x30, [sp], #64
  41a47c:	ret
  41a480:	stp	x29, x30, [sp, #-48]!
  41a484:	mov	x29, sp
  41a488:	str	x0, [sp, #40]
  41a48c:	str	x1, [sp, #32]
  41a490:	str	x2, [sp, #24]
  41a494:	str	x3, [sp, #16]
  41a498:	ldr	x0, [sp, #40]
  41a49c:	ldr	x0, [x0, #8]
  41a4a0:	ldr	x2, [sp, #24]
  41a4a4:	ldr	x1, [sp, #32]
  41a4a8:	bl	419d1c <wcrtomb@plt+0x1500c>
  41a4ac:	nop
  41a4b0:	ldp	x29, x30, [sp], #48
  41a4b4:	ret
  41a4b8:	stp	x29, x30, [sp, #-32]!
  41a4bc:	mov	x29, sp
  41a4c0:	str	x0, [sp, #24]
  41a4c4:	str	x1, [sp, #16]
  41a4c8:	ldr	x0, [sp, #24]
  41a4cc:	ldr	x1, [sp, #16]
  41a4d0:	bl	419d8c <wcrtomb@plt+0x1507c>
  41a4d4:	ldr	x0, [sp, #24]
  41a4d8:	add	x0, x0, #0x8
  41a4dc:	ldr	x1, [sp, #16]
  41a4e0:	bl	419d8c <wcrtomb@plt+0x1507c>
  41a4e4:	ldr	x0, [sp, #24]
  41a4e8:	ldr	x0, [x0, #8]
  41a4ec:	bl	44a1dc <argp_usage@@Base+0x10f0>
  41a4f0:	and	w1, w0, #0xff
  41a4f4:	ldr	x0, [sp, #24]
  41a4f8:	strb	w1, [x0, #16]
  41a4fc:	nop
  41a500:	ldp	x29, x30, [sp], #32
  41a504:	ret
  41a508:	stp	x29, x30, [sp, #-48]!
  41a50c:	mov	x29, sp
  41a510:	str	x0, [sp, #40]
  41a514:	str	x1, [sp, #32]
  41a518:	str	x2, [sp, #24]
  41a51c:	str	x3, [sp, #16]
  41a520:	ldr	x0, [sp, #40]
  41a524:	ldrb	w0, [x0, #321]
  41a528:	eor	w0, w0, #0x1
  41a52c:	and	w0, w0, #0xff
  41a530:	cmp	w0, #0x0
  41a534:	b.eq	41a544 <wcrtomb@plt+0x15834>  // b.none
  41a538:	ldr	x1, [sp, #24]
  41a53c:	ldr	x0, [sp, #40]
  41a540:	bl	41a4b8 <wcrtomb@plt+0x157a8>
  41a544:	nop
  41a548:	ldp	x29, x30, [sp], #48
  41a54c:	ret
  41a550:	stp	x29, x30, [sp, #-48]!
  41a554:	mov	x29, sp
  41a558:	str	x0, [sp, #40]
  41a55c:	str	x1, [sp, #32]
  41a560:	str	x2, [sp, #24]
  41a564:	str	x3, [sp, #16]
  41a568:	ldr	x0, [sp, #40]
  41a56c:	mov	w1, #0x1                   	// #1
  41a570:	strb	w1, [x0, #321]
  41a574:	ldr	x1, [sp, #24]
  41a578:	ldr	x0, [sp, #40]
  41a57c:	bl	41a4b8 <wcrtomb@plt+0x157a8>
  41a580:	nop
  41a584:	ldp	x29, x30, [sp], #48
  41a588:	ret
  41a58c:	stp	x29, x30, [sp, #-48]!
  41a590:	mov	x29, sp
  41a594:	str	x0, [sp, #40]
  41a598:	str	x1, [sp, #32]
  41a59c:	str	x2, [sp, #24]
  41a5a0:	str	x3, [sp, #16]
  41a5a4:	ldr	x0, [sp, #40]
  41a5a8:	ldr	x0, [x0, #136]
  41a5ac:	ldr	x2, [sp, #24]
  41a5b0:	ldr	x1, [sp, #32]
  41a5b4:	bl	419f84 <wcrtomb@plt+0x15274>
  41a5b8:	nop
  41a5bc:	ldp	x29, x30, [sp], #48
  41a5c0:	ret
  41a5c4:	stp	x29, x30, [sp, #-64]!
  41a5c8:	mov	x29, sp
  41a5cc:	str	x0, [sp, #40]
  41a5d0:	str	x1, [sp, #32]
  41a5d4:	str	x2, [sp, #24]
  41a5d8:	str	x3, [sp, #16]
  41a5dc:	add	x0, sp, #0x38
  41a5e0:	ldr	x3, [sp, #32]
  41a5e4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41a5e8:	ldr	x1, [sp, #24]
  41a5ec:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41a5f0:	and	w0, w0, #0xff
  41a5f4:	cmp	w0, #0x0
  41a5f8:	b.eq	41a60c <wcrtomb@plt+0x158fc>  // b.none
  41a5fc:	ldr	x0, [sp, #56]
  41a600:	mov	x1, x0
  41a604:	ldr	x0, [sp, #40]
  41a608:	str	x1, [x0, #136]
  41a60c:	nop
  41a610:	ldp	x29, x30, [sp], #64
  41a614:	ret
  41a618:	stp	x29, x30, [sp, #-48]!
  41a61c:	mov	x29, sp
  41a620:	str	x0, [sp, #40]
  41a624:	str	x1, [sp, #32]
  41a628:	str	x2, [sp, #24]
  41a62c:	str	x3, [sp, #16]
  41a630:	ldr	x0, [sp, #40]
  41a634:	ldr	w0, [x0, #112]
  41a638:	mov	w0, w0
  41a63c:	ldr	x4, [sp, #24]
  41a640:	mov	x3, #0xffffffff            	// #4294967295
  41a644:	mov	x2, #0x0                   	// #0
  41a648:	ldr	x1, [sp, #32]
  41a64c:	bl	419f34 <wcrtomb@plt+0x15224>
  41a650:	nop
  41a654:	ldp	x29, x30, [sp], #48
  41a658:	ret
  41a65c:	stp	x29, x30, [sp, #-64]!
  41a660:	mov	x29, sp
  41a664:	str	x0, [sp, #40]
  41a668:	str	x1, [sp, #32]
  41a66c:	str	x2, [sp, #24]
  41a670:	str	x3, [sp, #16]
  41a674:	add	x0, sp, #0x38
  41a678:	ldr	x4, [sp, #32]
  41a67c:	mov	x3, #0xffffffff            	// #4294967295
  41a680:	mov	x2, #0x0                   	// #0
  41a684:	ldr	x1, [sp, #24]
  41a688:	bl	419fbc <wcrtomb@plt+0x152ac>
  41a68c:	and	w0, w0, #0xff
  41a690:	cmp	w0, #0x0
  41a694:	b.eq	41a6a8 <wcrtomb@plt+0x15998>  // b.none
  41a698:	ldr	x0, [sp, #56]
  41a69c:	mov	w1, w0
  41a6a0:	ldr	x0, [sp, #40]
  41a6a4:	str	w1, [x0, #112]
  41a6a8:	nop
  41a6ac:	ldp	x29, x30, [sp], #64
  41a6b0:	ret
  41a6b4:	stp	x29, x30, [sp, #-48]!
  41a6b8:	mov	x29, sp
  41a6bc:	str	x0, [sp, #40]
  41a6c0:	str	x1, [sp, #32]
  41a6c4:	str	x2, [sp, #24]
  41a6c8:	str	x3, [sp, #16]
  41a6cc:	ldr	x0, [sp, #40]
  41a6d0:	ldr	x0, [x0, #32]
  41a6d4:	ldr	x2, [sp, #24]
  41a6d8:	ldr	x1, [sp, #32]
  41a6dc:	bl	419d1c <wcrtomb@plt+0x1500c>
  41a6e0:	nop
  41a6e4:	ldp	x29, x30, [sp], #48
  41a6e8:	ret
  41a6ec:	stp	x29, x30, [sp, #-48]!
  41a6f0:	mov	x29, sp
  41a6f4:	str	x0, [sp, #40]
  41a6f8:	str	x1, [sp, #32]
  41a6fc:	str	x2, [sp, #24]
  41a700:	str	x3, [sp, #16]
  41a704:	ldr	x0, [sp, #40]
  41a708:	add	x0, x0, #0x20
  41a70c:	ldr	x1, [sp, #24]
  41a710:	bl	419d8c <wcrtomb@plt+0x1507c>
  41a714:	nop
  41a718:	ldp	x29, x30, [sp], #48
  41a71c:	ret
  41a720:	stp	x29, x30, [sp, #-48]!
  41a724:	mov	x29, sp
  41a728:	str	x0, [sp, #40]
  41a72c:	str	x1, [sp, #32]
  41a730:	str	x2, [sp, #24]
  41a734:	str	x3, [sp, #16]
  41a738:	ldr	x3, [sp, #16]
  41a73c:	ldr	x2, [sp, #24]
  41a740:	ldr	x1, [sp, #32]
  41a744:	ldr	x0, [sp, #40]
  41a748:	bl	41a58c <wcrtomb@plt+0x1587c>
  41a74c:	nop
  41a750:	ldp	x29, x30, [sp], #48
  41a754:	ret
  41a758:	stp	x29, x30, [sp, #-64]!
  41a75c:	mov	x29, sp
  41a760:	str	x0, [sp, #40]
  41a764:	str	x1, [sp, #32]
  41a768:	str	x2, [sp, #24]
  41a76c:	str	x3, [sp, #16]
  41a770:	add	x0, sp, #0x38
  41a774:	ldr	x3, [sp, #32]
  41a778:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41a77c:	ldr	x1, [sp, #24]
  41a780:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41a784:	and	w0, w0, #0xff
  41a788:	cmp	w0, #0x0
  41a78c:	b.eq	41a7ac <wcrtomb@plt+0x15a9c>  // b.none
  41a790:	ldr	x0, [sp, #40]
  41a794:	mov	w1, #0x1                   	// #1
  41a798:	strb	w1, [x0, #320]
  41a79c:	ldr	x0, [sp, #56]
  41a7a0:	mov	x1, x0
  41a7a4:	ldr	x0, [sp, #40]
  41a7a8:	str	x1, [x0, #312]
  41a7ac:	nop
  41a7b0:	ldp	x29, x30, [sp], #64
  41a7b4:	ret
  41a7b8:	stp	x29, x30, [sp, #-48]!
  41a7bc:	mov	x29, sp
  41a7c0:	str	x0, [sp, #40]
  41a7c4:	str	x1, [sp, #32]
  41a7c8:	str	x2, [sp, #24]
  41a7cc:	str	x3, [sp, #16]
  41a7d0:	ldr	x0, [sp, #40]
  41a7d4:	ldr	x0, [x0, #288]
  41a7d8:	ldr	x2, [sp, #24]
  41a7dc:	ldr	x1, [sp, #32]
  41a7e0:	bl	419f84 <wcrtomb@plt+0x15274>
  41a7e4:	nop
  41a7e8:	ldp	x29, x30, [sp], #48
  41a7ec:	ret
  41a7f0:	stp	x29, x30, [sp, #-64]!
  41a7f4:	mov	x29, sp
  41a7f8:	str	x0, [sp, #40]
  41a7fc:	str	x1, [sp, #32]
  41a800:	str	x2, [sp, #24]
  41a804:	str	x3, [sp, #16]
  41a808:	add	x0, sp, #0x38
  41a80c:	ldr	x3, [sp, #32]
  41a810:	mov	x2, #0xffffffffffffffff    	// #-1
  41a814:	ldr	x1, [sp, #24]
  41a818:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41a81c:	and	w0, w0, #0xff
  41a820:	cmp	w0, #0x0
  41a824:	b.eq	41a854 <wcrtomb@plt+0x15b44>  // b.none
  41a828:	ldr	x1, [sp, #56]
  41a82c:	ldr	x0, [sp, #40]
  41a830:	str	x1, [x0, #296]
  41a834:	ldr	x0, [sp, #56]
  41a838:	mov	x1, #0x10                  	// #16
  41a83c:	bl	45b7a4 <argp_usage@@Base+0x126b8>
  41a840:	mov	x1, x0
  41a844:	ldr	x0, [sp, #40]
  41a848:	str	x1, [x0, #304]
  41a84c:	ldr	x0, [sp, #40]
  41a850:	str	xzr, [x0, #288]
  41a854:	nop
  41a858:	ldp	x29, x30, [sp], #64
  41a85c:	ret
  41a860:	stp	x29, x30, [sp, #-64]!
  41a864:	mov	x29, sp
  41a868:	str	x0, [sp, #40]
  41a86c:	str	x1, [sp, #32]
  41a870:	str	x2, [sp, #24]
  41a874:	str	x3, [sp, #16]
  41a878:	ldr	x0, [sp, #16]
  41a87c:	str	x0, [sp, #56]
  41a880:	ldr	x0, [sp, #40]
  41a884:	ldr	x1, [x0, #304]
  41a888:	ldr	x0, [sp, #56]
  41a88c:	ldr	x0, [x0]
  41a890:	lsl	x0, x0, #4
  41a894:	add	x0, x1, x0
  41a898:	ldr	x0, [x0]
  41a89c:	ldr	x2, [sp, #24]
  41a8a0:	ldr	x1, [sp, #32]
  41a8a4:	bl	419f84 <wcrtomb@plt+0x15274>
  41a8a8:	nop
  41a8ac:	ldp	x29, x30, [sp], #64
  41a8b0:	ret
  41a8b4:	stp	x29, x30, [sp, #-64]!
  41a8b8:	mov	x29, sp
  41a8bc:	str	x0, [sp, #40]
  41a8c0:	str	x1, [sp, #32]
  41a8c4:	str	x2, [sp, #24]
  41a8c8:	str	x3, [sp, #16]
  41a8cc:	add	x0, sp, #0x38
  41a8d0:	ldr	x3, [sp, #32]
  41a8d4:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41a8d8:	ldr	x1, [sp, #24]
  41a8dc:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41a8e0:	and	w0, w0, #0xff
  41a8e4:	cmp	w0, #0x0
  41a8e8:	b.eq	41a98c <wcrtomb@plt+0x15c7c>  // b.none
  41a8ec:	ldr	x0, [sp, #40]
  41a8f0:	ldr	x1, [x0, #288]
  41a8f4:	ldr	x0, [sp, #40]
  41a8f8:	ldr	x0, [x0, #296]
  41a8fc:	cmp	x1, x0
  41a900:	b.cs	41a92c <wcrtomb@plt+0x15c1c>  // b.hs, b.nlast
  41a904:	ldr	x2, [sp, #56]
  41a908:	ldr	x0, [sp, #40]
  41a90c:	ldr	x1, [x0, #304]
  41a910:	ldr	x0, [sp, #40]
  41a914:	ldr	x0, [x0, #288]
  41a918:	lsl	x0, x0, #4
  41a91c:	add	x0, x1, x0
  41a920:	mov	x1, x2
  41a924:	str	x1, [x0]
  41a928:	b	41a98c <wcrtomb@plt+0x15c7c>
  41a92c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41a930:	add	x0, x0, #0x420
  41a934:	ldr	x0, [x0]
  41a938:	cmp	x0, #0x0
  41a93c:	b.eq	41a950 <wcrtomb@plt+0x15c40>  // b.none
  41a940:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41a944:	add	x0, x0, #0x420
  41a948:	ldr	x0, [x0]
  41a94c:	blr	x0
  41a950:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41a954:	add	x0, x0, #0x610
  41a958:	bl	404c60 <gettext@plt>
  41a95c:	mov	x1, x0
  41a960:	ldr	x4, [sp, #24]
  41a964:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41a968:	add	x3, x0, #0x638
  41a96c:	mov	x2, x1
  41a970:	mov	w1, #0x0                   	// #0
  41a974:	mov	w0, #0x0                   	// #0
  41a978:	bl	404100 <error@plt>
  41a97c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41a980:	add	x0, x0, #0xdb0
  41a984:	mov	w1, #0x2                   	// #2
  41a988:	str	w1, [x0]
  41a98c:	nop
  41a990:	ldp	x29, x30, [sp], #64
  41a994:	ret
  41a998:	stp	x29, x30, [sp, #-64]!
  41a99c:	mov	x29, sp
  41a9a0:	str	x0, [sp, #40]
  41a9a4:	str	x1, [sp, #32]
  41a9a8:	str	x2, [sp, #24]
  41a9ac:	str	x3, [sp, #16]
  41a9b0:	ldr	x0, [sp, #16]
  41a9b4:	str	x0, [sp, #56]
  41a9b8:	ldr	x0, [sp, #40]
  41a9bc:	ldr	x1, [x0, #304]
  41a9c0:	ldr	x0, [sp, #56]
  41a9c4:	ldr	x0, [x0]
  41a9c8:	lsl	x0, x0, #4
  41a9cc:	add	x0, x1, x0
  41a9d0:	ldr	x0, [x0, #8]
  41a9d4:	ldr	x2, [sp, #24]
  41a9d8:	ldr	x1, [sp, #32]
  41a9dc:	bl	419f84 <wcrtomb@plt+0x15274>
  41a9e0:	nop
  41a9e4:	ldp	x29, x30, [sp], #64
  41a9e8:	ret
  41a9ec:	stp	x29, x30, [sp, #-64]!
  41a9f0:	mov	x29, sp
  41a9f4:	str	x0, [sp, #40]
  41a9f8:	str	x1, [sp, #32]
  41a9fc:	str	x2, [sp, #24]
  41aa00:	str	x3, [sp, #16]
  41aa04:	add	x0, sp, #0x38
  41aa08:	ldr	x3, [sp, #32]
  41aa0c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41aa10:	ldr	x1, [sp, #24]
  41aa14:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41aa18:	and	w0, w0, #0xff
  41aa1c:	cmp	w0, #0x0
  41aa20:	b.eq	41aac8 <wcrtomb@plt+0x15db8>  // b.none
  41aa24:	ldr	x0, [sp, #40]
  41aa28:	ldr	x1, [x0, #288]
  41aa2c:	ldr	x0, [sp, #40]
  41aa30:	ldr	x0, [x0, #296]
  41aa34:	cmp	x1, x0
  41aa38:	b.cs	41aa70 <wcrtomb@plt+0x15d60>  // b.hs, b.nlast
  41aa3c:	ldr	x4, [sp, #56]
  41aa40:	ldr	x0, [sp, #40]
  41aa44:	ldr	x1, [x0, #304]
  41aa48:	ldr	x0, [sp, #40]
  41aa4c:	ldr	x0, [x0, #288]
  41aa50:	add	x3, x0, #0x1
  41aa54:	ldr	x2, [sp, #40]
  41aa58:	str	x3, [x2, #288]
  41aa5c:	lsl	x0, x0, #4
  41aa60:	add	x0, x1, x0
  41aa64:	mov	x1, x4
  41aa68:	str	x1, [x0, #8]
  41aa6c:	b	41aac8 <wcrtomb@plt+0x15db8>
  41aa70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41aa74:	add	x0, x0, #0x420
  41aa78:	ldr	x0, [x0]
  41aa7c:	cmp	x0, #0x0
  41aa80:	b.eq	41aa94 <wcrtomb@plt+0x15d84>  // b.none
  41aa84:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41aa88:	add	x0, x0, #0x420
  41aa8c:	ldr	x0, [x0]
  41aa90:	blr	x0
  41aa94:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41aa98:	add	x0, x0, #0x610
  41aa9c:	bl	404c60 <gettext@plt>
  41aaa0:	ldr	x4, [sp, #24]
  41aaa4:	ldr	x3, [sp, #32]
  41aaa8:	mov	x2, x0
  41aaac:	mov	w1, #0x0                   	// #0
  41aab0:	mov	w0, #0x0                   	// #0
  41aab4:	bl	404100 <error@plt>
  41aab8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41aabc:	add	x0, x0, #0xdb0
  41aac0:	mov	w1, #0x2                   	// #2
  41aac4:	str	w1, [x0]
  41aac8:	nop
  41aacc:	ldp	x29, x30, [sp], #64
  41aad0:	ret
  41aad4:	stp	x29, x30, [sp, #-96]!
  41aad8:	mov	x29, sp
  41aadc:	str	x0, [sp, #40]
  41aae0:	str	x1, [sp, #32]
  41aae4:	str	x2, [sp, #24]
  41aae8:	str	x3, [sp, #16]
  41aaec:	mov	w0, #0x1                   	// #1
  41aaf0:	str	w0, [sp, #92]
  41aaf4:	ldr	x0, [sp, #40]
  41aaf8:	str	xzr, [x0, #288]
  41aafc:	ldr	x0, [sp, #24]
  41ab00:	ldrb	w0, [x0]
  41ab04:	sub	w0, w0, #0x30
  41ab08:	cmp	w0, #0x9
  41ab0c:	b.ls	41ab6c <wcrtomb@plt+0x15e5c>  // b.plast
  41ab10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ab14:	add	x0, x0, #0x420
  41ab18:	ldr	x0, [x0]
  41ab1c:	cmp	x0, #0x0
  41ab20:	b.eq	41ab34 <wcrtomb@plt+0x15e24>  // b.none
  41ab24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ab28:	add	x0, x0, #0x420
  41ab2c:	ldr	x0, [x0]
  41ab30:	blr	x0
  41ab34:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41ab38:	add	x0, x0, #0x5e0
  41ab3c:	bl	404c60 <gettext@plt>
  41ab40:	ldr	x4, [sp, #24]
  41ab44:	ldr	x3, [sp, #32]
  41ab48:	mov	x2, x0
  41ab4c:	mov	w1, #0x0                   	// #0
  41ab50:	mov	w0, #0x0                   	// #0
  41ab54:	bl	404100 <error@plt>
  41ab58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ab5c:	add	x0, x0, #0xdb0
  41ab60:	mov	w1, #0x2                   	// #2
  41ab64:	str	w1, [x0]
  41ab68:	b	41adac <wcrtomb@plt+0x1609c>
  41ab6c:	bl	404bc0 <__errno_location@plt>
  41ab70:	str	wzr, [x0]
  41ab74:	add	x0, sp, #0x38
  41ab78:	mov	w2, #0xa                   	// #10
  41ab7c:	mov	x1, x0
  41ab80:	ldr	x0, [sp, #24]
  41ab84:	bl	404150 <strtoimax@plt>
  41ab88:	str	x0, [sp, #80]
  41ab8c:	ldr	w0, [sp, #92]
  41ab90:	cmp	w0, #0x0
  41ab94:	b.eq	41abc8 <wcrtomb@plt+0x15eb8>  // b.none
  41ab98:	ldr	x0, [sp, #80]
  41ab9c:	str	x0, [sp, #64]
  41aba0:	bl	404bc0 <__errno_location@plt>
  41aba4:	ldr	w0, [x0]
  41aba8:	cmp	w0, #0x22
  41abac:	b.ne	41ac9c <wcrtomb@plt+0x15f8c>  // b.any
  41abb0:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41abb4:	mov	x2, #0x0                   	// #0
  41abb8:	ldr	x1, [sp, #24]
  41abbc:	ldr	x0, [sp, #32]
  41abc0:	bl	419c70 <wcrtomb@plt+0x14f60>
  41abc4:	b	41adac <wcrtomb@plt+0x1609c>
  41abc8:	ldr	x0, [sp, #80]
  41abcc:	str	x0, [sp, #72]
  41abd0:	bl	404bc0 <__errno_location@plt>
  41abd4:	ldr	w0, [x0]
  41abd8:	cmp	w0, #0x22
  41abdc:	b.ne	41abf8 <wcrtomb@plt+0x15ee8>  // b.any
  41abe0:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41abe4:	mov	x2, #0x0                   	// #0
  41abe8:	ldr	x1, [sp, #24]
  41abec:	ldr	x0, [sp, #32]
  41abf0:	bl	419c70 <wcrtomb@plt+0x14f60>
  41abf4:	b	41adac <wcrtomb@plt+0x1609c>
  41abf8:	ldr	x0, [sp, #40]
  41abfc:	ldr	x1, [x0, #288]
  41ac00:	ldr	x0, [sp, #40]
  41ac04:	ldr	x0, [x0, #296]
  41ac08:	cmp	x1, x0
  41ac0c:	b.cs	41ac40 <wcrtomb@plt+0x15f30>  // b.hs, b.nlast
  41ac10:	ldr	x0, [sp, #40]
  41ac14:	ldr	x1, [x0, #304]
  41ac18:	ldr	x0, [sp, #40]
  41ac1c:	ldr	x0, [x0, #288]
  41ac20:	add	x3, x0, #0x1
  41ac24:	ldr	x2, [sp, #40]
  41ac28:	str	x3, [x2, #288]
  41ac2c:	lsl	x0, x0, #4
  41ac30:	add	x2, x1, x0
  41ac34:	ldp	x0, x1, [sp, #64]
  41ac38:	stp	x0, x1, [x2]
  41ac3c:	b	41ac9c <wcrtomb@plt+0x15f8c>
  41ac40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ac44:	add	x0, x0, #0x420
  41ac48:	ldr	x0, [x0]
  41ac4c:	cmp	x0, #0x0
  41ac50:	b.eq	41ac64 <wcrtomb@plt+0x15f54>  // b.none
  41ac54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ac58:	add	x0, x0, #0x420
  41ac5c:	ldr	x0, [x0]
  41ac60:	blr	x0
  41ac64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41ac68:	add	x0, x0, #0x610
  41ac6c:	bl	404c60 <gettext@plt>
  41ac70:	ldr	x4, [sp, #24]
  41ac74:	ldr	x3, [sp, #32]
  41ac78:	mov	x2, x0
  41ac7c:	mov	w1, #0x0                   	// #0
  41ac80:	mov	w0, #0x0                   	// #0
  41ac84:	bl	404100 <error@plt>
  41ac88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ac8c:	add	x0, x0, #0xdb0
  41ac90:	mov	w1, #0x2                   	// #2
  41ac94:	str	w1, [x0]
  41ac98:	b	41adac <wcrtomb@plt+0x1609c>
  41ac9c:	ldr	w0, [sp, #92]
  41aca0:	cmp	w0, #0x0
  41aca4:	cset	w0, eq  // eq = none
  41aca8:	and	w0, w0, #0xff
  41acac:	str	w0, [sp, #92]
  41acb0:	ldr	x0, [sp, #56]
  41acb4:	ldrb	w0, [x0]
  41acb8:	cmp	w0, #0x0
  41acbc:	b.ne	41acd0 <wcrtomb@plt+0x15fc0>  // b.any
  41acc0:	ldr	w0, [sp, #92]
  41acc4:	cmp	w0, #0x0
  41acc8:	b.eq	41ad58 <wcrtomb@plt+0x16048>  // b.none
  41accc:	b	41adac <wcrtomb@plt+0x1609c>
  41acd0:	ldr	x0, [sp, #56]
  41acd4:	ldrb	w0, [x0]
  41acd8:	cmp	w0, #0x2c
  41acdc:	b.eq	41ad48 <wcrtomb@plt+0x16038>  // b.none
  41ace0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ace4:	add	x0, x0, #0x420
  41ace8:	ldr	x0, [x0]
  41acec:	cmp	x0, #0x0
  41acf0:	b.eq	41ad04 <wcrtomb@plt+0x15ff4>  // b.none
  41acf4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41acf8:	add	x0, x0, #0x420
  41acfc:	ldr	x0, [x0]
  41ad00:	blr	x0
  41ad04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41ad08:	add	x0, x0, #0x650
  41ad0c:	bl	404c60 <gettext@plt>
  41ad10:	mov	x1, x0
  41ad14:	ldr	x0, [sp, #56]
  41ad18:	ldrb	w0, [x0]
  41ad1c:	mov	w4, w0
  41ad20:	ldr	x3, [sp, #32]
  41ad24:	mov	x2, x1
  41ad28:	mov	w1, #0x0                   	// #0
  41ad2c:	mov	w0, #0x0                   	// #0
  41ad30:	bl	404100 <error@plt>
  41ad34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ad38:	add	x0, x0, #0xdb0
  41ad3c:	mov	w1, #0x2                   	// #2
  41ad40:	str	w1, [x0]
  41ad44:	b	41adac <wcrtomb@plt+0x1609c>
  41ad48:	ldr	x0, [sp, #56]
  41ad4c:	add	x0, x0, #0x1
  41ad50:	str	x0, [sp, #24]
  41ad54:	b	41aafc <wcrtomb@plt+0x15dec>
  41ad58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ad5c:	add	x0, x0, #0x420
  41ad60:	ldr	x0, [x0]
  41ad64:	cmp	x0, #0x0
  41ad68:	b.eq	41ad7c <wcrtomb@plt+0x1606c>  // b.none
  41ad6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ad70:	add	x0, x0, #0x420
  41ad74:	ldr	x0, [x0]
  41ad78:	blr	x0
  41ad7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41ad80:	add	x0, x0, #0x690
  41ad84:	bl	404c60 <gettext@plt>
  41ad88:	ldr	x3, [sp, #32]
  41ad8c:	mov	x2, x0
  41ad90:	mov	w1, #0x0                   	// #0
  41ad94:	mov	w0, #0x0                   	// #0
  41ad98:	bl	404100 <error@plt>
  41ad9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ada0:	add	x0, x0, #0xdb0
  41ada4:	mov	w1, #0x2                   	// #2
  41ada8:	str	w1, [x0]
  41adac:	ldp	x29, x30, [sp], #96
  41adb0:	ret
  41adb4:	stp	x29, x30, [sp, #-48]!
  41adb8:	mov	x29, sp
  41adbc:	str	x0, [sp, #40]
  41adc0:	str	x1, [sp, #32]
  41adc4:	str	x2, [sp, #24]
  41adc8:	str	x3, [sp, #16]
  41adcc:	ldr	x0, [sp, #16]
  41add0:	bl	41b848 <wcrtomb@plt+0x16b38>
  41add4:	mov	x3, x0
  41add8:	ldr	x2, [sp, #16]
  41addc:	ldr	x1, [sp, #32]
  41ade0:	ldr	x0, [sp, #24]
  41ade4:	bl	4195a8 <wcrtomb@plt+0x14898>
  41ade8:	nop
  41adec:	ldp	x29, x30, [sp], #48
  41adf0:	ret
  41adf4:	stp	x29, x30, [sp, #-48]!
  41adf8:	mov	x29, sp
  41adfc:	str	x0, [sp, #40]
  41ae00:	str	x1, [sp, #32]
  41ae04:	str	x2, [sp, #24]
  41ae08:	str	x3, [sp, #16]
  41ae0c:	ldr	x0, [sp, #16]
  41ae10:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41ae14:	mov	x1, x0
  41ae18:	ldr	x0, [sp, #40]
  41ae1c:	str	x1, [x0, #384]
  41ae20:	ldr	x0, [sp, #40]
  41ae24:	ldr	x0, [x0, #384]
  41ae28:	ldr	x2, [sp, #16]
  41ae2c:	ldr	x1, [sp, #24]
  41ae30:	bl	404020 <memcpy@plt>
  41ae34:	nop
  41ae38:	ldp	x29, x30, [sp], #48
  41ae3c:	ret
  41ae40:	stp	x29, x30, [sp, #-48]!
  41ae44:	mov	x29, sp
  41ae48:	str	x0, [sp, #40]
  41ae4c:	str	x1, [sp, #32]
  41ae50:	str	x2, [sp, #24]
  41ae54:	str	x3, [sp, #16]
  41ae58:	ldr	x2, [sp, #24]
  41ae5c:	ldr	x1, [sp, #32]
  41ae60:	ldr	x0, [sp, #16]
  41ae64:	bl	419d1c <wcrtomb@plt+0x1500c>
  41ae68:	nop
  41ae6c:	ldp	x29, x30, [sp], #48
  41ae70:	ret
  41ae74:	stp	x29, x30, [sp, #-48]!
  41ae78:	mov	x29, sp
  41ae7c:	str	x0, [sp, #40]
  41ae80:	str	x1, [sp, #32]
  41ae84:	str	x2, [sp, #24]
  41ae88:	str	x3, [sp, #16]
  41ae8c:	ldr	x1, [sp, #24]
  41ae90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ae94:	add	x0, x0, #0xfb0
  41ae98:	bl	419d8c <wcrtomb@plt+0x1507c>
  41ae9c:	nop
  41aea0:	ldp	x29, x30, [sp], #48
  41aea4:	ret
  41aea8:	stp	x29, x30, [sp, #-64]!
  41aeac:	mov	x29, sp
  41aeb0:	str	x0, [sp, #40]
  41aeb4:	str	x1, [sp, #32]
  41aeb8:	str	x2, [sp, #24]
  41aebc:	str	x3, [sp, #16]
  41aec0:	ldr	x0, [sp, #16]
  41aec4:	str	x0, [sp, #56]
  41aec8:	ldr	x0, [sp, #56]
  41aecc:	ldr	x0, [x0]
  41aed0:	ldr	x2, [sp, #24]
  41aed4:	ldr	x1, [sp, #32]
  41aed8:	bl	419f84 <wcrtomb@plt+0x15274>
  41aedc:	nop
  41aee0:	ldp	x29, x30, [sp], #64
  41aee4:	ret
  41aee8:	stp	x29, x30, [sp, #-64]!
  41aeec:	mov	x29, sp
  41aef0:	str	x0, [sp, #40]
  41aef4:	str	x1, [sp, #32]
  41aef8:	str	x2, [sp, #24]
  41aefc:	str	x3, [sp, #16]
  41af00:	add	x0, sp, #0x38
  41af04:	ldr	x3, [sp, #32]
  41af08:	mov	x2, #0xffffffffffffffff    	// #-1
  41af0c:	ldr	x1, [sp, #24]
  41af10:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41af14:	and	w0, w0, #0xff
  41af18:	cmp	w0, #0x0
  41af1c:	b.eq	41af30 <wcrtomb@plt+0x16220>  // b.none
  41af20:	ldr	x1, [sp, #56]
  41af24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41af28:	add	x0, x0, #0xfd0
  41af2c:	str	x1, [x0]
  41af30:	nop
  41af34:	ldp	x29, x30, [sp], #64
  41af38:	ret
  41af3c:	stp	x29, x30, [sp, #-64]!
  41af40:	mov	x29, sp
  41af44:	str	x0, [sp, #40]
  41af48:	str	x1, [sp, #32]
  41af4c:	str	x2, [sp, #24]
  41af50:	str	x3, [sp, #16]
  41af54:	ldr	x0, [sp, #16]
  41af58:	str	x0, [sp, #56]
  41af5c:	ldr	x0, [sp, #56]
  41af60:	ldr	x0, [x0]
  41af64:	ldr	x2, [sp, #24]
  41af68:	ldr	x1, [sp, #32]
  41af6c:	bl	419f84 <wcrtomb@plt+0x15274>
  41af70:	nop
  41af74:	ldp	x29, x30, [sp], #64
  41af78:	ret
  41af7c:	stp	x29, x30, [sp, #-64]!
  41af80:	mov	x29, sp
  41af84:	str	x0, [sp, #40]
  41af88:	str	x1, [sp, #32]
  41af8c:	str	x2, [sp, #24]
  41af90:	str	x3, [sp, #16]
  41af94:	add	x0, sp, #0x38
  41af98:	ldr	x3, [sp, #32]
  41af9c:	mov	x2, #0xffffffffffffffff    	// #-1
  41afa0:	ldr	x1, [sp, #24]
  41afa4:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41afa8:	and	w0, w0, #0xff
  41afac:	cmp	w0, #0x0
  41afb0:	b.eq	41afc4 <wcrtomb@plt+0x162b4>  // b.none
  41afb4:	ldr	x1, [sp, #56]
  41afb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41afbc:	add	x0, x0, #0xfe0
  41afc0:	str	x1, [x0]
  41afc4:	nop
  41afc8:	ldp	x29, x30, [sp], #64
  41afcc:	ret
  41afd0:	stp	x29, x30, [sp, #-48]!
  41afd4:	mov	x29, sp
  41afd8:	str	x0, [sp, #40]
  41afdc:	str	x1, [sp, #32]
  41afe0:	str	x2, [sp, #24]
  41afe4:	str	x3, [sp, #16]
  41afe8:	ldr	x1, [sp, #24]
  41afec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41aff0:	add	x0, x0, #0xfb8
  41aff4:	bl	419d8c <wcrtomb@plt+0x1507c>
  41aff8:	nop
  41affc:	ldp	x29, x30, [sp], #48
  41b000:	ret
  41b004:	stp	x29, x30, [sp, #-48]!
  41b008:	mov	x29, sp
  41b00c:	str	x0, [sp, #40]
  41b010:	str	x1, [sp, #32]
  41b014:	str	x2, [sp, #24]
  41b018:	str	x3, [sp, #16]
  41b01c:	ldr	x0, [sp, #40]
  41b020:	ldr	x0, [x0, #48]
  41b024:	ldr	x2, [sp, #24]
  41b028:	ldr	x1, [sp, #32]
  41b02c:	bl	419d1c <wcrtomb@plt+0x1500c>
  41b030:	nop
  41b034:	ldp	x29, x30, [sp], #48
  41b038:	ret
  41b03c:	stp	x29, x30, [sp, #-48]!
  41b040:	mov	x29, sp
  41b044:	str	x0, [sp, #40]
  41b048:	str	x1, [sp, #32]
  41b04c:	str	x2, [sp, #24]
  41b050:	str	x3, [sp, #16]
  41b054:	ldr	x0, [sp, #40]
  41b058:	add	x0, x0, #0x30
  41b05c:	ldr	x1, [sp, #24]
  41b060:	bl	419d8c <wcrtomb@plt+0x1507c>
  41b064:	nop
  41b068:	ldp	x29, x30, [sp], #48
  41b06c:	ret
  41b070:	stp	x29, x30, [sp, #-48]!
  41b074:	mov	x29, sp
  41b078:	str	x0, [sp, #40]
  41b07c:	str	x1, [sp, #32]
  41b080:	str	x2, [sp, #24]
  41b084:	str	x3, [sp, #16]
  41b088:	ldr	x0, [sp, #40]
  41b08c:	ldr	x1, [x0, #56]
  41b090:	ldr	x0, [sp, #40]
  41b094:	ldr	x0, [x0, #64]
  41b098:	mov	x3, x0
  41b09c:	mov	x2, x1
  41b0a0:	ldr	x1, [sp, #32]
  41b0a4:	ldr	x0, [sp, #24]
  41b0a8:	bl	4195a8 <wcrtomb@plt+0x14898>
  41b0ac:	nop
  41b0b0:	ldp	x29, x30, [sp], #48
  41b0b4:	ret
  41b0b8:	stp	x29, x30, [sp, #-48]!
  41b0bc:	mov	x29, sp
  41b0c0:	str	x0, [sp, #40]
  41b0c4:	str	x1, [sp, #32]
  41b0c8:	str	x2, [sp, #24]
  41b0cc:	str	x3, [sp, #16]
  41b0d0:	ldr	x0, [sp, #16]
  41b0d4:	add	x0, x0, #0x1
  41b0d8:	mov	x1, x0
  41b0dc:	ldr	x0, [sp, #24]
  41b0e0:	bl	45b82c <argp_usage@@Base+0x12740>
  41b0e4:	mov	x1, x0
  41b0e8:	ldr	x0, [sp, #40]
  41b0ec:	str	x1, [x0, #56]
  41b0f0:	ldr	x0, [sp, #40]
  41b0f4:	ldr	x1, [sp, #16]
  41b0f8:	str	x1, [x0, #64]
  41b0fc:	nop
  41b100:	ldp	x29, x30, [sp], #48
  41b104:	ret
  41b108:	stp	x29, x30, [sp, #-48]!
  41b10c:	mov	x29, sp
  41b110:	str	x0, [sp, #40]
  41b114:	str	x1, [sp, #32]
  41b118:	str	x2, [sp, #24]
  41b11c:	str	x3, [sp, #16]
  41b120:	ldr	x0, [sp, #40]
  41b124:	ldr	x1, [x0, #72]
  41b128:	ldr	x0, [sp, #40]
  41b12c:	ldr	x0, [x0, #80]
  41b130:	mov	x3, x0
  41b134:	mov	x2, x1
  41b138:	ldr	x1, [sp, #32]
  41b13c:	ldr	x0, [sp, #24]
  41b140:	bl	4195a8 <wcrtomb@plt+0x14898>
  41b144:	nop
  41b148:	ldp	x29, x30, [sp], #48
  41b14c:	ret
  41b150:	stp	x29, x30, [sp, #-48]!
  41b154:	mov	x29, sp
  41b158:	str	x0, [sp, #40]
  41b15c:	str	x1, [sp, #32]
  41b160:	str	x2, [sp, #24]
  41b164:	str	x3, [sp, #16]
  41b168:	ldr	x0, [sp, #16]
  41b16c:	add	x0, x0, #0x1
  41b170:	mov	x1, x0
  41b174:	ldr	x0, [sp, #24]
  41b178:	bl	45b82c <argp_usage@@Base+0x12740>
  41b17c:	mov	x1, x0
  41b180:	ldr	x0, [sp, #40]
  41b184:	str	x1, [x0, #72]
  41b188:	ldr	x0, [sp, #40]
  41b18c:	ldr	x1, [sp, #16]
  41b190:	str	x1, [x0, #80]
  41b194:	nop
  41b198:	ldp	x29, x30, [sp], #48
  41b19c:	ret
  41b1a0:	stp	x29, x30, [sp, #-64]!
  41b1a4:	mov	x29, sp
  41b1a8:	str	x0, [sp, #40]
  41b1ac:	str	x1, [sp, #32]
  41b1b0:	str	x2, [sp, #24]
  41b1b4:	str	x3, [sp, #16]
  41b1b8:	ldr	x0, [sp, #40]
  41b1bc:	ldr	x0, [x0, #336]
  41b1c0:	str	x0, [sp, #56]
  41b1c4:	ldr	x0, [sp, #16]
  41b1c8:	str	x0, [sp, #48]
  41b1cc:	ldr	x0, [sp, #48]
  41b1d0:	ldr	x1, [x0]
  41b1d4:	mov	x0, x1
  41b1d8:	lsl	x0, x0, #1
  41b1dc:	add	x0, x0, x1
  41b1e0:	lsl	x0, x0, #3
  41b1e4:	mov	x1, x0
  41b1e8:	ldr	x0, [sp, #56]
  41b1ec:	add	x0, x0, x1
  41b1f0:	ldr	x2, [x0, #8]
  41b1f4:	ldr	x0, [sp, #48]
  41b1f8:	ldr	x1, [x0]
  41b1fc:	mov	x0, x1
  41b200:	lsl	x0, x0, #1
  41b204:	add	x0, x0, x1
  41b208:	lsl	x0, x0, #3
  41b20c:	mov	x1, x0
  41b210:	ldr	x0, [sp, #56]
  41b214:	add	x0, x0, x1
  41b218:	ldr	x0, [x0, #16]
  41b21c:	mov	x3, x0
  41b220:	ldr	x1, [sp, #32]
  41b224:	ldr	x0, [sp, #24]
  41b228:	bl	4195a8 <wcrtomb@plt+0x14898>
  41b22c:	nop
  41b230:	ldp	x29, x30, [sp], #64
  41b234:	ret
  41b238:	stp	x29, x30, [sp, #-80]!
  41b23c:	mov	x29, sp
  41b240:	str	x0, [x29, #40]
  41b244:	str	x1, [x29, #32]
  41b248:	str	x2, [x29, #24]
  41b24c:	str	x3, [x29, #16]
  41b250:	ldr	x0, [x29, #32]
  41b254:	bl	4040b0 <strlen@plt>
  41b258:	str	x0, [x29, #72]
  41b25c:	ldr	x0, [x29, #72]
  41b260:	add	x0, x0, #0x1
  41b264:	add	x0, x0, #0xf
  41b268:	lsr	x0, x0, #4
  41b26c:	lsl	x0, x0, #4
  41b270:	sub	sp, sp, x0
  41b274:	mov	x0, sp
  41b278:	add	x0, x0, #0xf
  41b27c:	lsr	x0, x0, #4
  41b280:	lsl	x0, x0, #4
  41b284:	str	x0, [x29, #64]
  41b288:	ldr	x0, [x29, #72]
  41b28c:	add	x0, x0, #0x1
  41b290:	mov	x2, x0
  41b294:	ldr	x1, [x29, #32]
  41b298:	ldr	x0, [x29, #64]
  41b29c:	bl	404020 <memcpy@plt>
  41b2a0:	ldr	x0, [x29, #16]
  41b2a4:	add	x0, x0, #0x1
  41b2a8:	add	x0, x0, #0xf
  41b2ac:	lsr	x0, x0, #4
  41b2b0:	lsl	x0, x0, #4
  41b2b4:	sub	sp, sp, x0
  41b2b8:	mov	x0, sp
  41b2bc:	add	x0, x0, #0xf
  41b2c0:	lsr	x0, x0, #4
  41b2c4:	lsl	x0, x0, #4
  41b2c8:	str	x0, [x29, #56]
  41b2cc:	ldr	x0, [x29, #16]
  41b2d0:	add	x0, x0, #0x1
  41b2d4:	mov	x2, x0
  41b2d8:	ldr	x1, [x29, #24]
  41b2dc:	ldr	x0, [x29, #56]
  41b2e0:	bl	404020 <memcpy@plt>
  41b2e4:	ldr	x0, [x29, #64]
  41b2e8:	bl	4185e4 <wcrtomb@plt+0x138d4>
  41b2ec:	ldr	x0, [x29, #64]
  41b2f0:	add	x0, x0, #0xd
  41b2f4:	ldr	x3, [x29, #16]
  41b2f8:	ldr	x2, [x29, #56]
  41b2fc:	mov	x1, x0
  41b300:	ldr	x0, [x29, #40]
  41b304:	bl	4186f8 <wcrtomb@plt+0x139e8>
  41b308:	nop
  41b30c:	mov	sp, x29
  41b310:	ldp	x29, x30, [sp], #80
  41b314:	ret
  41b318:	stp	x29, x30, [sp, #-48]!
  41b31c:	mov	x29, sp
  41b320:	str	x0, [sp, #40]
  41b324:	str	x1, [sp, #32]
  41b328:	str	x2, [sp, #24]
  41b32c:	str	x3, [sp, #16]
  41b330:	ldr	x0, [sp, #40]
  41b334:	ldr	w0, [x0, #276]
  41b338:	mov	w0, w0
  41b33c:	ldr	x2, [sp, #24]
  41b340:	ldr	x1, [sp, #32]
  41b344:	bl	419f84 <wcrtomb@plt+0x15274>
  41b348:	nop
  41b34c:	ldp	x29, x30, [sp], #48
  41b350:	ret
  41b354:	stp	x29, x30, [sp, #-64]!
  41b358:	mov	x29, sp
  41b35c:	str	x0, [sp, #40]
  41b360:	str	x1, [sp, #32]
  41b364:	str	x2, [sp, #24]
  41b368:	str	x3, [sp, #16]
  41b36c:	add	x0, sp, #0x38
  41b370:	ldr	x3, [sp, #32]
  41b374:	mov	x2, #0xffffffff            	// #4294967295
  41b378:	ldr	x1, [sp, #24]
  41b37c:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41b380:	and	w0, w0, #0xff
  41b384:	cmp	w0, #0x0
  41b388:	b.eq	41b39c <wcrtomb@plt+0x1668c>  // b.none
  41b38c:	ldr	x0, [sp, #56]
  41b390:	mov	w1, w0
  41b394:	ldr	x0, [sp, #40]
  41b398:	str	w1, [x0, #276]
  41b39c:	nop
  41b3a0:	ldp	x29, x30, [sp], #64
  41b3a4:	ret
  41b3a8:	stp	x29, x30, [sp, #-48]!
  41b3ac:	mov	x29, sp
  41b3b0:	str	x0, [sp, #40]
  41b3b4:	str	x1, [sp, #32]
  41b3b8:	str	x2, [sp, #24]
  41b3bc:	str	x3, [sp, #16]
  41b3c0:	ldr	x0, [sp, #40]
  41b3c4:	ldr	w0, [x0, #280]
  41b3c8:	mov	w0, w0
  41b3cc:	ldr	x2, [sp, #24]
  41b3d0:	ldr	x1, [sp, #32]
  41b3d4:	bl	419f84 <wcrtomb@plt+0x15274>
  41b3d8:	nop
  41b3dc:	ldp	x29, x30, [sp], #48
  41b3e0:	ret
  41b3e4:	stp	x29, x30, [sp, #-64]!
  41b3e8:	mov	x29, sp
  41b3ec:	str	x0, [sp, #40]
  41b3f0:	str	x1, [sp, #32]
  41b3f4:	str	x2, [sp, #24]
  41b3f8:	str	x3, [sp, #16]
  41b3fc:	add	x0, sp, #0x38
  41b400:	ldr	x3, [sp, #32]
  41b404:	mov	x2, #0xffffffff            	// #4294967295
  41b408:	ldr	x1, [sp, #24]
  41b40c:	bl	41a0b8 <wcrtomb@plt+0x153a8>
  41b410:	and	w0, w0, #0xff
  41b414:	cmp	w0, #0x0
  41b418:	b.eq	41b42c <wcrtomb@plt+0x1671c>  // b.none
  41b41c:	ldr	x0, [sp, #56]
  41b420:	mov	w1, w0
  41b424:	ldr	x0, [sp, #40]
  41b428:	str	w1, [x0, #280]
  41b42c:	nop
  41b430:	ldp	x29, x30, [sp], #64
  41b434:	ret
  41b438:	stp	x29, x30, [sp, #-96]!
  41b43c:	mov	x29, sp
  41b440:	str	x0, [sp, #24]
  41b444:	str	x1, [sp, #16]
  41b448:	str	xzr, [sp, #88]
  41b44c:	str	xzr, [sp, #80]
  41b450:	mov	x0, #0x1                   	// #1
  41b454:	str	x0, [sp, #72]
  41b458:	ldr	x0, [sp, #24]
  41b45c:	str	x0, [sp, #56]
  41b460:	b	41b4d4 <wcrtomb@plt+0x167c4>
  41b464:	ldr	x0, [sp, #56]
  41b468:	bl	4040b0 <strlen@plt>
  41b46c:	add	x0, x0, #0x1
  41b470:	str	x0, [sp, #40]
  41b474:	ldr	x1, [sp, #72]
  41b478:	ldr	x0, [sp, #40]
  41b47c:	add	x0, x1, x0
  41b480:	str	x0, [sp, #72]
  41b484:	ldr	x0, [sp, #16]
  41b488:	cmp	x0, #0x0
  41b48c:	b.eq	41b4ac <wcrtomb@plt+0x1679c>  // b.none
  41b490:	ldr	x0, [sp, #56]
  41b494:	ldrb	w0, [x0]
  41b498:	mov	w1, w0
  41b49c:	ldr	x0, [sp, #16]
  41b4a0:	bl	404930 <strchr@plt>
  41b4a4:	cmp	x0, #0x0
  41b4a8:	b.eq	41b4b8 <wcrtomb@plt+0x167a8>  // b.none
  41b4ac:	ldr	x0, [sp, #88]
  41b4b0:	add	x0, x0, #0x1
  41b4b4:	str	x0, [sp, #88]
  41b4b8:	ldr	x0, [sp, #80]
  41b4bc:	add	x0, x0, #0x1
  41b4c0:	str	x0, [sp, #80]
  41b4c4:	ldr	x1, [sp, #56]
  41b4c8:	ldr	x0, [sp, #40]
  41b4cc:	add	x0, x1, x0
  41b4d0:	str	x0, [sp, #56]
  41b4d4:	ldr	x0, [sp, #56]
  41b4d8:	ldrb	w0, [x0]
  41b4dc:	cmp	w0, #0x0
  41b4e0:	b.ne	41b464 <wcrtomb@plt+0x16754>  // b.any
  41b4e4:	ldr	x0, [sp, #72]
  41b4e8:	add	x0, x0, #0x20
  41b4ec:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41b4f0:	str	x0, [sp, #48]
  41b4f4:	ldr	x0, [sp, #48]
  41b4f8:	add	x1, x0, #0x20
  41b4fc:	ldr	x0, [sp, #48]
  41b500:	str	x1, [x0]
  41b504:	ldr	x0, [sp, #48]
  41b508:	ldr	x0, [x0]
  41b50c:	ldr	x2, [sp, #72]
  41b510:	ldr	x1, [sp, #24]
  41b514:	bl	404020 <memcpy@plt>
  41b518:	ldr	x0, [sp, #48]
  41b51c:	ldr	x1, [sp, #80]
  41b520:	str	x1, [x0, #8]
  41b524:	ldr	x0, [sp, #48]
  41b528:	ldr	x1, [sp, #88]
  41b52c:	str	x1, [x0, #16]
  41b530:	ldr	x0, [sp, #88]
  41b534:	add	x0, x0, #0x1
  41b538:	mov	x1, #0x8                   	// #8
  41b53c:	bl	45b7a4 <argp_usage@@Base+0x126b8>
  41b540:	mov	x1, x0
  41b544:	ldr	x0, [sp, #48]
  41b548:	str	x1, [x0, #24]
  41b54c:	str	xzr, [sp, #88]
  41b550:	ldr	x0, [sp, #48]
  41b554:	ldr	x0, [x0]
  41b558:	str	x0, [sp, #64]
  41b55c:	b	41b5c8 <wcrtomb@plt+0x168b8>
  41b560:	ldr	x0, [sp, #16]
  41b564:	cmp	x0, #0x0
  41b568:	b.eq	41b588 <wcrtomb@plt+0x16878>  // b.none
  41b56c:	ldr	x0, [sp, #64]
  41b570:	ldrb	w0, [x0]
  41b574:	mov	w1, w0
  41b578:	ldr	x0, [sp, #16]
  41b57c:	bl	404930 <strchr@plt>
  41b580:	cmp	x0, #0x0
  41b584:	b.eq	41b5b0 <wcrtomb@plt+0x168a0>  // b.none
  41b588:	ldr	x0, [sp, #48]
  41b58c:	ldr	x1, [x0, #24]
  41b590:	ldr	x0, [sp, #88]
  41b594:	add	x2, x0, #0x1
  41b598:	str	x2, [sp, #88]
  41b59c:	lsl	x0, x0, #3
  41b5a0:	add	x0, x1, x0
  41b5a4:	ldr	x1, [sp, #64]
  41b5a8:	add	x1, x1, #0x1
  41b5ac:	str	x1, [x0]
  41b5b0:	ldr	x0, [sp, #64]
  41b5b4:	bl	4040b0 <strlen@plt>
  41b5b8:	add	x0, x0, #0x1
  41b5bc:	ldr	x1, [sp, #64]
  41b5c0:	add	x0, x1, x0
  41b5c4:	str	x0, [sp, #64]
  41b5c8:	ldr	x0, [sp, #64]
  41b5cc:	ldrb	w0, [x0]
  41b5d0:	cmp	w0, #0x0
  41b5d4:	b.ne	41b560 <wcrtomb@plt+0x16850>  // b.any
  41b5d8:	ldr	x0, [sp, #48]
  41b5dc:	ldr	x1, [x0, #24]
  41b5e0:	ldr	x0, [sp, #88]
  41b5e4:	lsl	x0, x0, #3
  41b5e8:	add	x0, x1, x0
  41b5ec:	str	xzr, [x0]
  41b5f0:	ldr	x0, [sp, #48]
  41b5f4:	ldp	x29, x30, [sp], #96
  41b5f8:	ret
  41b5fc:	stp	x29, x30, [sp, #-32]!
  41b600:	mov	x29, sp
  41b604:	str	x0, [sp, #24]
  41b608:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41b60c:	add	x1, x0, #0xc80
  41b610:	ldr	x0, [sp, #24]
  41b614:	bl	41b438 <wcrtomb@plt+0x16728>
  41b618:	ldp	x29, x30, [sp], #32
  41b61c:	ret
  41b620:	stp	x29, x30, [sp, #-32]!
  41b624:	mov	x29, sp
  41b628:	str	x0, [sp, #24]
  41b62c:	ldr	x0, [sp, #24]
  41b630:	ldr	x0, [x0, #24]
  41b634:	bl	404880 <free@plt>
  41b638:	ldr	x0, [sp, #24]
  41b63c:	bl	404880 <free@plt>
  41b640:	nop
  41b644:	ldp	x29, x30, [sp], #32
  41b648:	ret
  41b64c:	stp	x29, x30, [sp, #-48]!
  41b650:	mov	x29, sp
  41b654:	str	x0, [sp, #24]
  41b658:	str	x1, [sp, #16]
  41b65c:	ldr	x0, [sp, #24]
  41b660:	str	x0, [sp, #40]
  41b664:	ldr	x0, [sp, #16]
  41b668:	str	x0, [sp, #32]
  41b66c:	ldr	x0, [sp, #40]
  41b670:	ldr	x2, [x0]
  41b674:	ldr	x0, [sp, #32]
  41b678:	ldr	x0, [x0]
  41b67c:	mov	x1, x0
  41b680:	mov	x0, x2
  41b684:	bl	4047c0 <strcmp@plt>
  41b688:	ldp	x29, x30, [sp], #48
  41b68c:	ret
  41b690:	stp	x29, x30, [sp, #-48]!
  41b694:	mov	x29, sp
  41b698:	str	x0, [sp, #24]
  41b69c:	str	x1, [sp, #16]
  41b6a0:	ldr	x0, [sp, #24]
  41b6a4:	cmp	x0, #0x0
  41b6a8:	b.ne	41b6b4 <wcrtomb@plt+0x169a4>  // b.any
  41b6ac:	mov	x0, #0x0                   	// #0
  41b6b0:	b	41b700 <wcrtomb@plt+0x169f0>
  41b6b4:	ldr	x0, [sp, #24]
  41b6b8:	ldr	x1, [x0, #24]
  41b6bc:	ldr	x0, [sp, #24]
  41b6c0:	ldr	x2, [x0, #16]
  41b6c4:	add	x5, sp, #0x10
  41b6c8:	adrp	x0, 41b000 <wcrtomb@plt+0x162f0>
  41b6cc:	add	x4, x0, #0x64c
  41b6d0:	mov	x3, #0x8                   	// #8
  41b6d4:	mov	x0, x5
  41b6d8:	bl	404590 <bsearch@plt>
  41b6dc:	str	x0, [sp, #40]
  41b6e0:	ldr	x0, [sp, #40]
  41b6e4:	cmp	x0, #0x0
  41b6e8:	b.eq	41b6fc <wcrtomb@plt+0x169ec>  // b.none
  41b6ec:	ldr	x0, [sp, #40]
  41b6f0:	ldr	x0, [x0]
  41b6f4:	sub	x0, x0, #0x1
  41b6f8:	b	41b700 <wcrtomb@plt+0x169f0>
  41b6fc:	mov	x0, #0x0                   	// #0
  41b700:	ldp	x29, x30, [sp], #48
  41b704:	ret
  41b708:	stp	x29, x30, [sp, #-64]!
  41b70c:	mov	x29, sp
  41b710:	str	x19, [sp, #16]
  41b714:	str	x0, [sp, #40]
  41b718:	ldr	x0, [sp, #40]
  41b71c:	ldr	x0, [x0, #16]
  41b720:	str	x0, [sp, #48]
  41b724:	str	xzr, [sp, #56]
  41b728:	ldr	x0, [sp, #40]
  41b72c:	ldr	w0, [x0, #8]
  41b730:	cmp	w0, #0x0
  41b734:	b.eq	41b78c <wcrtomb@plt+0x16a7c>  // b.none
  41b738:	ldr	x0, [sp, #40]
  41b73c:	ldr	x0, [x0]
  41b740:	ldr	x1, [x0]
  41b744:	ldr	x0, [sp, #48]
  41b748:	add	x0, x1, x0
  41b74c:	str	x0, [sp, #56]
  41b750:	ldr	x0, [sp, #56]
  41b754:	ldrb	w0, [x0]
  41b758:	cmp	w0, #0x0
  41b75c:	b.ne	41b768 <wcrtomb@plt+0x16a58>  // b.any
  41b760:	mov	x0, #0x0                   	// #0
  41b764:	b	41b7e0 <wcrtomb@plt+0x16ad0>
  41b768:	ldr	x0, [sp, #40]
  41b76c:	ldr	x19, [x0, #16]
  41b770:	ldr	x0, [sp, #56]
  41b774:	bl	4040b0 <strlen@plt>
  41b778:	add	x0, x19, x0
  41b77c:	add	x1, x0, #0x1
  41b780:	ldr	x0, [sp, #40]
  41b784:	str	x1, [x0, #16]
  41b788:	b	41b7dc <wcrtomb@plt+0x16acc>
  41b78c:	ldr	x0, [sp, #40]
  41b790:	ldr	x0, [x0]
  41b794:	ldr	x0, [x0, #16]
  41b798:	ldr	x1, [sp, #48]
  41b79c:	cmp	x1, x0
  41b7a0:	b.cs	41b7dc <wcrtomb@plt+0x16acc>  // b.hs, b.nlast
  41b7a4:	ldr	x0, [sp, #40]
  41b7a8:	ldr	x0, [x0]
  41b7ac:	ldr	x1, [x0, #24]
  41b7b0:	ldr	x0, [sp, #48]
  41b7b4:	lsl	x0, x0, #3
  41b7b8:	add	x0, x1, x0
  41b7bc:	ldr	x0, [x0]
  41b7c0:	sub	x0, x0, #0x1
  41b7c4:	str	x0, [sp, #56]
  41b7c8:	ldr	x0, [sp, #40]
  41b7cc:	ldr	x0, [x0, #16]
  41b7d0:	add	x1, x0, #0x1
  41b7d4:	ldr	x0, [sp, #40]
  41b7d8:	str	x1, [x0, #16]
  41b7dc:	ldr	x0, [sp, #56]
  41b7e0:	ldr	x19, [sp, #16]
  41b7e4:	ldp	x29, x30, [sp], #64
  41b7e8:	ret
  41b7ec:	stp	x29, x30, [sp, #-64]!
  41b7f0:	mov	x29, sp
  41b7f4:	str	x0, [sp, #40]
  41b7f8:	str	w1, [sp, #36]
  41b7fc:	str	x2, [sp, #24]
  41b800:	mov	x0, #0x18                  	// #24
  41b804:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41b808:	str	x0, [sp, #56]
  41b80c:	ldr	x0, [sp, #56]
  41b810:	ldr	x1, [sp, #40]
  41b814:	str	x1, [x0]
  41b818:	ldr	x0, [sp, #56]
  41b81c:	ldr	w1, [sp, #36]
  41b820:	str	w1, [x0, #8]
  41b824:	ldr	x0, [sp, #56]
  41b828:	str	xzr, [x0, #16]
  41b82c:	ldr	x0, [sp, #24]
  41b830:	ldr	x1, [sp, #56]
  41b834:	str	x1, [x0]
  41b838:	ldr	x0, [sp, #56]
  41b83c:	bl	41b708 <wcrtomb@plt+0x169f8>
  41b840:	ldp	x29, x30, [sp], #64
  41b844:	ret
  41b848:	stp	x29, x30, [sp, #-48]!
  41b84c:	mov	x29, sp
  41b850:	str	x0, [sp, #24]
  41b854:	str	xzr, [sp, #40]
  41b858:	b	41b88c <wcrtomb@plt+0x16b7c>
  41b85c:	ldr	x0, [sp, #24]
  41b860:	bl	4040b0 <strlen@plt>
  41b864:	add	x0, x0, #0x1
  41b868:	str	x0, [sp, #32]
  41b86c:	ldr	x1, [sp, #40]
  41b870:	ldr	x0, [sp, #32]
  41b874:	add	x0, x1, x0
  41b878:	str	x0, [sp, #40]
  41b87c:	ldr	x1, [sp, #24]
  41b880:	ldr	x0, [sp, #32]
  41b884:	add	x0, x1, x0
  41b888:	str	x0, [sp, #24]
  41b88c:	ldr	x0, [sp, #24]
  41b890:	ldrb	w0, [x0]
  41b894:	cmp	w0, #0x0
  41b898:	b.ne	41b85c <wcrtomb@plt+0x16b4c>  // b.any
  41b89c:	ldr	x0, [sp, #40]
  41b8a0:	add	x0, x0, #0x1
  41b8a4:	ldp	x29, x30, [sp], #48
  41b8a8:	ret
  41b8ac:	stp	x29, x30, [sp, #-48]!
  41b8b0:	mov	x29, sp
  41b8b4:	str	x0, [sp, #24]
  41b8b8:	str	x1, [sp, #16]
  41b8bc:	ldr	x0, [sp, #24]
  41b8c0:	str	x0, [sp, #40]
  41b8c4:	ldr	x0, [sp, #40]
  41b8c8:	ldr	x0, [x0, #80]
  41b8cc:	ldr	x1, [sp, #16]
  41b8d0:	bl	44e630 <argp_usage@@Base+0x5544>
  41b8d4:	ldp	x29, x30, [sp], #48
  41b8d8:	ret
  41b8dc:	stp	x29, x30, [sp, #-48]!
  41b8e0:	mov	x29, sp
  41b8e4:	str	x0, [sp, #24]
  41b8e8:	str	x1, [sp, #16]
  41b8ec:	ldr	x0, [sp, #24]
  41b8f0:	str	x0, [sp, #40]
  41b8f4:	ldr	x0, [sp, #16]
  41b8f8:	str	x0, [sp, #32]
  41b8fc:	ldr	x0, [sp, #40]
  41b900:	ldr	x2, [x0, #80]
  41b904:	ldr	x0, [sp, #32]
  41b908:	ldr	x0, [x0, #80]
  41b90c:	mov	x1, x0
  41b910:	mov	x0, x2
  41b914:	bl	4047c0 <strcmp@plt>
  41b918:	cmp	w0, #0x0
  41b91c:	cset	w0, eq  // eq = none
  41b920:	and	w0, w0, #0xff
  41b924:	ldp	x29, x30, [sp], #48
  41b928:	ret
  41b92c:	sub	sp, sp, #0x20
  41b930:	str	x0, [sp, #8]
  41b934:	str	x1, [sp]
  41b938:	ldr	x0, [sp, #8]
  41b93c:	str	x0, [sp, #24]
  41b940:	ldr	x0, [sp, #24]
  41b944:	ldr	x1, [x0, #24]
  41b948:	ldr	x0, [sp, #24]
  41b94c:	ldr	x0, [x0, #32]
  41b950:	add	x0, x1, x0
  41b954:	ldr	x1, [sp]
  41b958:	udiv	x2, x0, x1
  41b95c:	ldr	x1, [sp]
  41b960:	mul	x1, x2, x1
  41b964:	sub	x0, x0, x1
  41b968:	add	sp, sp, #0x20
  41b96c:	ret
  41b970:	sub	sp, sp, #0x20
  41b974:	str	x0, [sp, #8]
  41b978:	str	x1, [sp]
  41b97c:	ldr	x0, [sp, #8]
  41b980:	str	x0, [sp, #24]
  41b984:	ldr	x0, [sp]
  41b988:	str	x0, [sp, #16]
  41b98c:	ldr	x0, [sp, #24]
  41b990:	ldr	x1, [x0, #24]
  41b994:	ldr	x0, [sp, #16]
  41b998:	ldr	x0, [x0, #24]
  41b99c:	cmp	x1, x0
  41b9a0:	b.ne	41b9c4 <wcrtomb@plt+0x16cb4>  // b.any
  41b9a4:	ldr	x0, [sp, #24]
  41b9a8:	ldr	x1, [x0, #32]
  41b9ac:	ldr	x0, [sp, #16]
  41b9b0:	ldr	x0, [x0, #32]
  41b9b4:	cmp	x1, x0
  41b9b8:	b.ne	41b9c4 <wcrtomb@plt+0x16cb4>  // b.any
  41b9bc:	mov	w0, #0x1                   	// #1
  41b9c0:	b	41b9c8 <wcrtomb@plt+0x16cb8>
  41b9c4:	mov	w0, #0x0                   	// #0
  41b9c8:	and	w0, w0, #0x1
  41b9cc:	and	w0, w0, #0xff
  41b9d0:	add	sp, sp, #0x20
  41b9d4:	ret
  41b9d8:	stp	x29, x30, [sp, #-48]!
  41b9dc:	mov	x29, sp
  41b9e0:	str	x0, [sp, #24]
  41b9e4:	str	x1, [sp, #16]
  41b9e8:	ldr	x0, [sp, #24]
  41b9ec:	bl	4040b0 <strlen@plt>
  41b9f0:	str	x0, [sp, #40]
  41b9f4:	mov	x0, #0x60                  	// #96
  41b9f8:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41b9fc:	str	x0, [sp, #32]
  41ba00:	ldr	x0, [sp, #32]
  41ba04:	str	xzr, [x0]
  41ba08:	ldr	x0, [sp, #32]
  41ba0c:	str	xzr, [x0, #48]
  41ba10:	ldr	x0, [sp, #32]
  41ba14:	ldr	x1, [x0, #48]
  41ba18:	ldr	x0, [sp, #32]
  41ba1c:	str	x1, [x0, #40]
  41ba20:	ldr	x0, [sp, #32]
  41ba24:	str	xzr, [x0, #64]
  41ba28:	ldr	x0, [sp, #32]
  41ba2c:	str	wzr, [x0, #60]
  41ba30:	ldr	x0, [sp, #40]
  41ba34:	cmp	x0, #0x1
  41ba38:	b.ls	41ba64 <wcrtomb@plt+0x16d54>  // b.plast
  41ba3c:	ldr	x0, [sp, #40]
  41ba40:	sub	x0, x0, #0x1
  41ba44:	ldr	x1, [sp, #24]
  41ba48:	add	x0, x1, x0
  41ba4c:	ldrb	w0, [x0]
  41ba50:	cmp	w0, #0x2f
  41ba54:	b.ne	41ba64 <wcrtomb@plt+0x16d54>  // b.any
  41ba58:	ldr	x0, [sp, #40]
  41ba5c:	sub	x0, x0, #0x1
  41ba60:	str	x0, [sp, #40]
  41ba64:	ldr	x0, [sp, #40]
  41ba68:	add	x0, x0, #0x1
  41ba6c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41ba70:	mov	x1, x0
  41ba74:	ldr	x0, [sp, #32]
  41ba78:	str	x1, [x0, #88]
  41ba7c:	ldr	x0, [sp, #32]
  41ba80:	ldr	x0, [x0, #88]
  41ba84:	ldr	x2, [sp, #40]
  41ba88:	ldr	x1, [sp, #24]
  41ba8c:	bl	404020 <memcpy@plt>
  41ba90:	ldr	x0, [sp, #32]
  41ba94:	ldr	x1, [x0, #88]
  41ba98:	ldr	x0, [sp, #40]
  41ba9c:	add	x0, x1, x0
  41baa0:	strb	wzr, [x0]
  41baa4:	ldr	x0, [sp, #32]
  41baa8:	ldr	x1, [sp, #16]
  41baac:	str	x1, [x0, #80]
  41bab0:	ldr	x0, [sp, #32]
  41bab4:	str	xzr, [x0, #72]
  41bab8:	ldr	x0, [sp, #32]
  41babc:	ldp	x29, x30, [sp], #48
  41bac0:	ret
  41bac4:	stp	x29, x30, [sp, #-32]!
  41bac8:	mov	x29, sp
  41bacc:	str	x0, [sp, #24]
  41bad0:	ldr	x0, [sp, #24]
  41bad4:	ldr	x0, [x0, #80]
  41bad8:	bl	404880 <free@plt>
  41badc:	ldr	x0, [sp, #24]
  41bae0:	ldr	x0, [x0, #88]
  41bae4:	bl	404880 <free@plt>
  41bae8:	ldr	x0, [sp, #24]
  41baec:	bl	404880 <free@plt>
  41baf0:	nop
  41baf4:	ldp	x29, x30, [sp], #32
  41baf8:	ret
  41bafc:	stp	x29, x30, [sp, #-48]!
  41bb00:	mov	x29, sp
  41bb04:	str	x0, [sp, #24]
  41bb08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41bb0c:	add	x0, x0, #0x30
  41bb10:	ldr	w0, [x0]
  41bb14:	ldr	x1, [sp, #24]
  41bb18:	bl	424458 <wcrtomb@plt+0x1f748>
  41bb1c:	str	x0, [sp, #40]
  41bb20:	ldr	x1, [sp, #40]
  41bb24:	ldr	x0, [sp, #24]
  41bb28:	bl	41b9d8 <wcrtomb@plt+0x16cc8>
  41bb2c:	str	x0, [sp, #32]
  41bb30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bb34:	add	x0, x0, #0x8d8
  41bb38:	ldr	x0, [x0]
  41bb3c:	cmp	x0, #0x0
  41bb40:	b.eq	41bb5c <wcrtomb@plt+0x16e4c>  // b.none
  41bb44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bb48:	add	x0, x0, #0x8d8
  41bb4c:	ldr	x0, [x0]
  41bb50:	ldr	x1, [sp, #32]
  41bb54:	str	x1, [x0]
  41bb58:	b	41bb6c <wcrtomb@plt+0x16e5c>
  41bb5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bb60:	add	x0, x0, #0x8d0
  41bb64:	ldr	x1, [sp, #32]
  41bb68:	str	x1, [x0]
  41bb6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bb70:	add	x0, x0, #0x8d8
  41bb74:	ldr	x1, [sp, #32]
  41bb78:	str	x1, [x0]
  41bb7c:	ldr	x0, [sp, #32]
  41bb80:	ldp	x29, x30, [sp], #48
  41bb84:	ret
  41bb88:	stp	x29, x30, [sp, #-64]!
  41bb8c:	mov	x29, sp
  41bb90:	str	x0, [sp, #24]
  41bb94:	str	x1, [sp, #16]
  41bb98:	ldr	x0, [sp, #24]
  41bb9c:	bl	4040b0 <strlen@plt>
  41bba0:	str	x0, [sp, #48]
  41bba4:	ldr	x0, [sp, #16]
  41bba8:	bl	4040b0 <strlen@plt>
  41bbac:	str	x0, [sp, #40]
  41bbb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bbb4:	add	x0, x0, #0x8d0
  41bbb8:	ldr	x0, [x0]
  41bbbc:	str	x0, [sp, #56]
  41bbc0:	b	41bbec <wcrtomb@plt+0x16edc>
  41bbc4:	ldr	x0, [sp, #56]
  41bbc8:	add	x0, x0, #0x58
  41bbcc:	ldr	x4, [sp, #40]
  41bbd0:	ldr	x3, [sp, #16]
  41bbd4:	ldr	x2, [sp, #48]
  41bbd8:	ldr	x1, [sp, #24]
  41bbdc:	bl	424550 <wcrtomb@plt+0x1f840>
  41bbe0:	ldr	x0, [sp, #56]
  41bbe4:	ldr	x0, [x0]
  41bbe8:	str	x0, [sp, #56]
  41bbec:	ldr	x0, [sp, #56]
  41bbf0:	cmp	x0, #0x0
  41bbf4:	b.ne	41bbc4 <wcrtomb@plt+0x16eb4>  // b.any
  41bbf8:	nop
  41bbfc:	nop
  41bc00:	ldp	x29, x30, [sp], #64
  41bc04:	ret
  41bc08:	stp	x29, x30, [sp, #-32]!
  41bc0c:	mov	x29, sp
  41bc10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bc14:	add	x0, x0, #0x8e0
  41bc18:	ldr	x0, [x0]
  41bc1c:	cmp	x0, #0x0
  41bc20:	b.eq	41bc34 <wcrtomb@plt+0x16f24>  // b.none
  41bc24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bc28:	add	x0, x0, #0x8e0
  41bc2c:	ldr	x0, [x0]
  41bc30:	bl	44ebc0 <argp_usage@@Base+0x5ad4>
  41bc34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bc38:	add	x0, x0, #0x8e8
  41bc3c:	ldr	x0, [x0]
  41bc40:	cmp	x0, #0x0
  41bc44:	b.eq	41bc58 <wcrtomb@plt+0x16f48>  // b.none
  41bc48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bc4c:	add	x0, x0, #0x8e8
  41bc50:	ldr	x0, [x0]
  41bc54:	bl	44ebc0 <argp_usage@@Base+0x5ad4>
  41bc58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bc5c:	add	x0, x0, #0x8d0
  41bc60:	ldr	x0, [x0]
  41bc64:	str	x0, [sp, #24]
  41bc68:	b	41bc88 <wcrtomb@plt+0x16f78>
  41bc6c:	ldr	x0, [sp, #24]
  41bc70:	ldr	x0, [x0]
  41bc74:	str	x0, [sp, #16]
  41bc78:	ldr	x0, [sp, #24]
  41bc7c:	bl	41bac4 <wcrtomb@plt+0x16db4>
  41bc80:	ldr	x0, [sp, #16]
  41bc84:	str	x0, [sp, #24]
  41bc88:	ldr	x0, [sp, #24]
  41bc8c:	cmp	x0, #0x0
  41bc90:	b.ne	41bc6c <wcrtomb@plt+0x16f5c>  // b.any
  41bc94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bc98:	add	x0, x0, #0x8d8
  41bc9c:	str	xzr, [x0]
  41bca0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bca4:	add	x0, x0, #0x8d8
  41bca8:	ldr	x1, [x0]
  41bcac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bcb0:	add	x0, x0, #0x8d0
  41bcb4:	str	x1, [x0]
  41bcb8:	nop
  41bcbc:	ldp	x29, x30, [sp], #32
  41bcc0:	ret
  41bcc4:	stp	x29, x30, [sp, #-96]!
  41bcc8:	mov	x29, sp
  41bccc:	str	x0, [sp, #72]
  41bcd0:	stp	x1, x2, [sp, #56]
  41bcd4:	str	x3, [sp, #48]
  41bcd8:	str	x4, [sp, #40]
  41bcdc:	strb	w5, [sp, #39]
  41bce0:	strb	w6, [sp, #38]
  41bce4:	str	x7, [sp, #24]
  41bce8:	ldr	x0, [sp, #72]
  41bcec:	bl	41bafc <wcrtomb@plt+0x16dec>
  41bcf0:	str	x0, [sp, #88]
  41bcf4:	ldr	x2, [sp, #88]
  41bcf8:	ldp	x0, x1, [sp, #56]
  41bcfc:	stp	x0, x1, [x2, #8]
  41bd00:	ldr	x0, [sp, #88]
  41bd04:	ldr	x1, [sp, #48]
  41bd08:	str	x1, [x0, #24]
  41bd0c:	ldr	x0, [sp, #88]
  41bd10:	ldr	x1, [sp, #40]
  41bd14:	str	x1, [x0, #32]
  41bd18:	ldr	x0, [sp, #88]
  41bd1c:	mov	w1, #0x1                   	// #1
  41bd20:	str	w1, [x0, #56]
  41bd24:	ldrb	w0, [sp, #39]
  41bd28:	cmp	w0, #0x0
  41bd2c:	b.eq	41bd44 <wcrtomb@plt+0x17034>  // b.none
  41bd30:	ldr	x0, [sp, #88]
  41bd34:	ldr	w0, [x0, #60]
  41bd38:	orr	w1, w0, #0x2
  41bd3c:	ldr	x0, [sp, #88]
  41bd40:	str	w1, [x0, #60]
  41bd44:	ldrb	w0, [sp, #38]
  41bd48:	cmp	w0, #0x0
  41bd4c:	b.eq	41bd64 <wcrtomb@plt+0x17054>  // b.none
  41bd50:	ldr	x0, [sp, #88]
  41bd54:	ldr	w0, [x0, #60]
  41bd58:	orr	w1, w0, #0x4
  41bd5c:	ldr	x0, [sp, #88]
  41bd60:	str	w1, [x0, #60]
  41bd64:	ldr	x0, [sp, #24]
  41bd68:	cmp	x0, #0x0
  41bd6c:	b.eq	41bd88 <wcrtomb@plt+0x17078>  // b.none
  41bd70:	ldr	x0, [sp, #24]
  41bd74:	bl	41b5fc <wcrtomb@plt+0x168ec>
  41bd78:	mov	x1, x0
  41bd7c:	ldr	x0, [sp, #88]
  41bd80:	str	x1, [x0, #40]
  41bd84:	b	41bd90 <wcrtomb@plt+0x17080>
  41bd88:	ldr	x0, [sp, #88]
  41bd8c:	str	xzr, [x0, #40]
  41bd90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bd94:	add	x0, x0, #0x8e0
  41bd98:	ldr	x0, [x0]
  41bd9c:	cmp	x0, #0x0
  41bda0:	b.ne	41bde8 <wcrtomb@plt+0x170d8>  // b.any
  41bda4:	mov	x4, #0x0                   	// #0
  41bda8:	adrp	x0, 41b000 <wcrtomb@plt+0x162f0>
  41bdac:	add	x3, x0, #0x8dc
  41bdb0:	adrp	x0, 41b000 <wcrtomb@plt+0x162f0>
  41bdb4:	add	x2, x0, #0x8ac
  41bdb8:	mov	x1, #0x0                   	// #0
  41bdbc:	mov	x0, #0x0                   	// #0
  41bdc0:	bl	44ea34 <argp_usage@@Base+0x5948>
  41bdc4:	mov	x1, x0
  41bdc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bdcc:	add	x0, x0, #0x8e0
  41bdd0:	str	x1, [x0]
  41bdd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bdd8:	add	x0, x0, #0x8e0
  41bddc:	ldr	x0, [x0]
  41bde0:	cmp	x0, #0x0
  41bde4:	b.eq	41be04 <wcrtomb@plt+0x170f4>  // b.none
  41bde8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bdec:	add	x0, x0, #0x8e0
  41bdf0:	ldr	x0, [x0]
  41bdf4:	ldr	x1, [sp, #88]
  41bdf8:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  41bdfc:	cmp	x0, #0x0
  41be00:	b.ne	41be08 <wcrtomb@plt+0x170f8>  // b.any
  41be04:	bl	412b2c <wcrtomb@plt+0xde1c>
  41be08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41be0c:	add	x0, x0, #0x8e8
  41be10:	ldr	x0, [x0]
  41be14:	cmp	x0, #0x0
  41be18:	b.ne	41be60 <wcrtomb@plt+0x17150>  // b.any
  41be1c:	mov	x4, #0x0                   	// #0
  41be20:	adrp	x0, 41b000 <wcrtomb@plt+0x162f0>
  41be24:	add	x3, x0, #0x970
  41be28:	adrp	x0, 41b000 <wcrtomb@plt+0x162f0>
  41be2c:	add	x2, x0, #0x92c
  41be30:	mov	x1, #0x0                   	// #0
  41be34:	mov	x0, #0x0                   	// #0
  41be38:	bl	44ea34 <argp_usage@@Base+0x5948>
  41be3c:	mov	x1, x0
  41be40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41be44:	add	x0, x0, #0x8e8
  41be48:	str	x1, [x0]
  41be4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41be50:	add	x0, x0, #0x8e8
  41be54:	ldr	x0, [x0]
  41be58:	cmp	x0, #0x0
  41be5c:	b.eq	41be7c <wcrtomb@plt+0x1716c>  // b.none
  41be60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41be64:	add	x0, x0, #0x8e8
  41be68:	ldr	x0, [x0]
  41be6c:	ldr	x1, [sp, #88]
  41be70:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  41be74:	cmp	x0, #0x0
  41be78:	b.ne	41be80 <wcrtomb@plt+0x17170>  // b.any
  41be7c:	bl	412b2c <wcrtomb@plt+0xde1c>
  41be80:	ldr	x0, [sp, #88]
  41be84:	ldp	x29, x30, [sp], #96
  41be88:	ret
  41be8c:	stp	x29, x30, [sp, #-64]!
  41be90:	mov	x29, sp
  41be94:	str	x0, [sp, #24]
  41be98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41be9c:	add	x0, x0, #0x8e0
  41bea0:	ldr	x0, [x0]
  41bea4:	cmp	x0, #0x0
  41bea8:	b.ne	41beb4 <wcrtomb@plt+0x171a4>  // b.any
  41beac:	mov	x0, #0x0                   	// #0
  41beb0:	b	41bf00 <wcrtomb@plt+0x171f0>
  41beb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41beb8:	add	x0, x0, #0x30
  41bebc:	ldr	w0, [x0]
  41bec0:	ldr	x1, [sp, #24]
  41bec4:	bl	424458 <wcrtomb@plt+0x1f748>
  41bec8:	str	x0, [sp, #56]
  41becc:	ldr	x1, [sp, #56]
  41bed0:	ldr	x0, [sp, #24]
  41bed4:	bl	41b9d8 <wcrtomb@plt+0x16cc8>
  41bed8:	str	x0, [sp, #48]
  41bedc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bee0:	add	x0, x0, #0x8e0
  41bee4:	ldr	x0, [x0]
  41bee8:	ldr	x1, [sp, #48]
  41beec:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  41bef0:	str	x0, [sp, #40]
  41bef4:	ldr	x0, [sp, #48]
  41bef8:	bl	41bac4 <wcrtomb@plt+0x16db4>
  41befc:	ldr	x0, [sp, #40]
  41bf00:	ldp	x29, x30, [sp], #64
  41bf04:	ret
  41bf08:	stp	x29, x30, [sp, #-64]!
  41bf0c:	mov	x29, sp
  41bf10:	str	x0, [sp, #56]
  41bf14:	str	x1, [sp, #48]
  41bf18:	str	x2, [sp, #40]
  41bf1c:	str	x3, [sp, #32]
  41bf20:	str	x4, [sp, #24]
  41bf24:	ldr	x0, [sp, #56]
  41bf28:	add	x0, x0, #0x58
  41bf2c:	ldr	x4, [sp, #24]
  41bf30:	ldr	x3, [sp, #32]
  41bf34:	ldr	x2, [sp, #40]
  41bf38:	ldr	x1, [sp, #48]
  41bf3c:	bl	424550 <wcrtomb@plt+0x1f840>
  41bf40:	nop
  41bf44:	ldp	x29, x30, [sp], #64
  41bf48:	ret
  41bf4c:	stp	x29, x30, [sp, #-48]!
  41bf50:	mov	x29, sp
  41bf54:	str	x0, [sp, #24]
  41bf58:	str	x1, [sp, #16]
  41bf5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bf60:	add	x0, x0, #0x8e8
  41bf64:	ldr	x0, [x0]
  41bf68:	cmp	x0, #0x0
  41bf6c:	b.ne	41bf78 <wcrtomb@plt+0x17268>  // b.any
  41bf70:	mov	x0, #0x0                   	// #0
  41bf74:	b	41bfc8 <wcrtomb@plt+0x172b8>
  41bf78:	mov	x1, #0x0                   	// #0
  41bf7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41bf80:	add	x0, x0, #0xc88
  41bf84:	bl	41b9d8 <wcrtomb@plt+0x16cc8>
  41bf88:	str	x0, [sp, #40]
  41bf8c:	ldr	x0, [sp, #40]
  41bf90:	ldr	x1, [sp, #24]
  41bf94:	str	x1, [x0, #24]
  41bf98:	ldr	x0, [sp, #40]
  41bf9c:	ldr	x1, [sp, #16]
  41bfa0:	str	x1, [x0, #32]
  41bfa4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41bfa8:	add	x0, x0, #0x8e8
  41bfac:	ldr	x0, [x0]
  41bfb0:	ldr	x1, [sp, #40]
  41bfb4:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  41bfb8:	str	x0, [sp, #32]
  41bfbc:	ldr	x0, [sp, #40]
  41bfc0:	bl	41bac4 <wcrtomb@plt+0x16db4>
  41bfc4:	ldr	x0, [sp, #32]
  41bfc8:	ldp	x29, x30, [sp], #48
  41bfcc:	ret
  41bfd0:	stp	x29, x30, [sp, #-192]!
  41bfd4:	mov	x29, sp
  41bfd8:	str	x19, [sp, #16]
  41bfdc:	str	x0, [sp, #40]
  41bfe0:	ldr	x0, [sp, #40]
  41bfe4:	ldr	x0, [x0]
  41bfe8:	bl	41be8c <wcrtomb@plt+0x1717c>
  41bfec:	str	x0, [sp, #184]
  41bff0:	ldr	x0, [sp, #184]
  41bff4:	cmp	x0, #0x0
  41bff8:	b.eq	41c034 <wcrtomb@plt+0x17324>  // b.none
  41bffc:	ldr	x0, [sp, #40]
  41c000:	ldr	w0, [x0, #408]
  41c004:	add	x1, sp, #0x38
  41c008:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  41c00c:	cmp	w0, #0x0
  41c010:	b.eq	41c024 <wcrtomb@plt+0x17314>  // b.none
  41c014:	ldr	x0, [sp, #184]
  41c018:	ldr	x0, [x0, #88]
  41c01c:	bl	4260e0 <wcrtomb@plt+0x213d0>
  41c020:	b	41c034 <wcrtomb@plt+0x17324>
  41c024:	ldr	x19, [sp, #184]
  41c028:	add	x0, sp, #0x38
  41c02c:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  41c030:	stp	x0, x1, [x19, #8]
  41c034:	nop
  41c038:	ldr	x19, [sp, #16]
  41c03c:	ldp	x29, x30, [sp], #192
  41c040:	ret
  41c044:	stp	x29, x30, [sp, #-128]!
  41c048:	mov	x29, sp
  41c04c:	stp	x19, x20, [sp, #16]
  41c050:	str	x0, [sp, #56]
  41c054:	str	x1, [sp, #48]
  41c058:	str	w2, [sp, #44]
  41c05c:	str	x3, [sp, #32]
  41c060:	ldr	x0, [sp, #48]
  41c064:	add	x0, x0, #0x58
  41c068:	str	x0, [sp, #104]
  41c06c:	ldr	x0, [sp, #104]
  41c070:	ldr	x0, [x0]
  41c074:	lsr	x0, x0, #63
  41c078:	strb	w0, [sp, #103]
  41c07c:	strb	wzr, [sp, #119]
  41c080:	ldr	x0, [sp, #56]
  41c084:	bl	41be8c <wcrtomb@plt+0x1717c>
  41c088:	str	x0, [sp, #120]
  41c08c:	ldr	x0, [sp, #120]
  41c090:	cmp	x0, #0x0
  41c094:	b.eq	41c308 <wcrtomb@plt+0x175f8>  // b.none
  41c098:	ldr	x0, [sp, #120]
  41c09c:	ldr	w0, [x0, #60]
  41c0a0:	and	w0, w0, #0x1
  41c0a4:	cmp	w0, #0x0
  41c0a8:	b.eq	41c0e4 <wcrtomb@plt+0x173d4>  // b.none
  41c0ac:	ldr	w0, [sp, #44]
  41c0b0:	and	w0, w0, #0x20
  41c0b4:	cmp	w0, #0x0
  41c0b8:	b.eq	41c0d0 <wcrtomb@plt+0x173c0>  // b.none
  41c0bc:	ldr	x0, [sp, #120]
  41c0c0:	add	x0, x0, #0x58
  41c0c4:	ldr	x1, [sp, #56]
  41c0c8:	bl	423d0c <wcrtomb@plt+0x1effc>
  41c0cc:	b	41c0e4 <wcrtomb@plt+0x173d4>
  41c0d0:	ldr	x0, [sp, #32]
  41c0d4:	mov	w1, #0x4e                  	// #78
  41c0d8:	strb	w1, [x0]
  41c0dc:	ldr	x0, [sp, #120]
  41c0e0:	b	41c7e8 <wcrtomb@plt+0x17ad8>
  41c0e4:	ldr	x0, [sp, #120]
  41c0e8:	ldr	x0, [x0, #88]
  41c0ec:	ldr	x1, [sp, #56]
  41c0f0:	bl	4047c0 <strcmp@plt>
  41c0f4:	cmp	w0, #0x0
  41c0f8:	b.eq	41c110 <wcrtomb@plt+0x17400>  // b.none
  41c0fc:	ldr	x0, [sp, #32]
  41c100:	mov	w1, #0x4e                  	// #78
  41c104:	strb	w1, [x0]
  41c108:	ldr	x0, [sp, #120]
  41c10c:	b	41c7e8 <wcrtomb@plt+0x17ad8>
  41c110:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c114:	add	x0, x0, #0x50
  41c118:	ldrb	w0, [x0]
  41c11c:	cmp	w0, #0x0
  41c120:	b.eq	41c164 <wcrtomb@plt+0x17454>  // b.none
  41c124:	ldr	x0, [sp, #120]
  41c128:	ldr	w0, [x0, #60]
  41c12c:	and	w0, w0, #0x2
  41c130:	cmp	w0, #0x0
  41c134:	b.eq	41c14c <wcrtomb@plt+0x1743c>  // b.none
  41c138:	ldrb	w0, [sp, #103]
  41c13c:	eor	w0, w0, #0x1
  41c140:	and	w0, w0, #0xff
  41c144:	cmp	w0, #0x0
  41c148:	b.eq	41c164 <wcrtomb@plt+0x17454>  // b.none
  41c14c:	ldr	x0, [sp, #120]
  41c150:	ldr	x1, [x0, #24]
  41c154:	ldr	x0, [sp, #104]
  41c158:	ldr	x0, [x0]
  41c15c:	cmp	x1, x0
  41c160:	b.ne	41c17c <wcrtomb@plt+0x1746c>  // b.any
  41c164:	ldr	x0, [sp, #120]
  41c168:	ldr	x1, [x0, #32]
  41c16c:	ldr	x0, [sp, #104]
  41c170:	ldr	x0, [x0, #8]
  41c174:	cmp	x1, x0
  41c178:	b.eq	41c2dc <wcrtomb@plt+0x175cc>  // b.none
  41c17c:	ldr	x0, [sp, #104]
  41c180:	ldr	x2, [x0]
  41c184:	ldr	x0, [sp, #104]
  41c188:	ldr	x0, [x0, #8]
  41c18c:	mov	x1, x0
  41c190:	mov	x0, x2
  41c194:	bl	41bf4c <wcrtomb@plt+0x1723c>
  41c198:	str	x0, [sp, #80]
  41c19c:	ldr	x0, [sp, #80]
  41c1a0:	cmp	x0, #0x0
  41c1a4:	b.eq	41c284 <wcrtomb@plt+0x17574>  // b.none
  41c1a8:	ldr	x0, [sp, #80]
  41c1ac:	ldr	x0, [x0, #88]
  41c1b0:	ldr	x1, [sp, #56]
  41c1b4:	bl	4047c0 <strcmp@plt>
  41c1b8:	cmp	w0, #0x0
  41c1bc:	b.eq	41c274 <wcrtomb@plt+0x17564>  // b.none
  41c1c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41c1c4:	add	x0, x0, #0x24c
  41c1c8:	ldr	w0, [x0]
  41c1cc:	and	w0, w0, #0x2000
  41c1d0:	cmp	w0, #0x0
  41c1d4:	b.eq	41c244 <wcrtomb@plt+0x17534>  // b.none
  41c1d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c1dc:	add	x0, x0, #0x420
  41c1e0:	ldr	x0, [x0]
  41c1e4:	cmp	x0, #0x0
  41c1e8:	b.eq	41c1fc <wcrtomb@plt+0x174ec>  // b.none
  41c1ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c1f0:	add	x0, x0, #0x420
  41c1f4:	ldr	x0, [x0]
  41c1f8:	blr	x0
  41c1fc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c200:	add	x0, x0, #0xc90
  41c204:	bl	404c60 <gettext@plt>
  41c208:	mov	x19, x0
  41c20c:	ldr	x0, [sp, #56]
  41c210:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41c214:	mov	x20, x0
  41c218:	ldr	x0, [sp, #80]
  41c21c:	ldr	x0, [x0, #88]
  41c220:	mov	x1, x0
  41c224:	mov	w0, #0x1                   	// #1
  41c228:	bl	459f10 <argp_usage@@Base+0x10e24>
  41c22c:	mov	x4, x0
  41c230:	mov	x3, x20
  41c234:	mov	x2, x19
  41c238:	mov	w1, #0x0                   	// #0
  41c23c:	mov	w0, #0x0                   	// #0
  41c240:	bl	404100 <error@plt>
  41c244:	ldr	x0, [sp, #120]
  41c248:	ldr	x1, [sp, #80]
  41c24c:	str	x1, [x0, #64]
  41c250:	ldr	x0, [sp, #120]
  41c254:	ldr	w0, [x0, #60]
  41c258:	orr	w1, w0, #0x10
  41c25c:	ldr	x0, [sp, #120]
  41c260:	str	w1, [x0, #60]
  41c264:	ldr	x0, [sp, #80]
  41c268:	ldr	x0, [x0, #88]
  41c26c:	ldr	x1, [sp, #56]
  41c270:	bl	41bb88 <wcrtomb@plt+0x16e78>
  41c274:	ldr	x0, [sp, #120]
  41c278:	mov	w1, #0x1                   	// #1
  41c27c:	str	w1, [x0, #56]
  41c280:	b	41c2b8 <wcrtomb@plt+0x175a8>
  41c284:	mov	w0, #0x1                   	// #1
  41c288:	strb	w0, [sp, #119]
  41c28c:	ldr	x0, [sp, #120]
  41c290:	mov	w1, #0x2                   	// #2
  41c294:	str	w1, [x0, #56]
  41c298:	ldr	x0, [sp, #104]
  41c29c:	ldr	x1, [x0]
  41c2a0:	ldr	x0, [sp, #120]
  41c2a4:	str	x1, [x0, #24]
  41c2a8:	ldr	x0, [sp, #104]
  41c2ac:	ldr	x1, [x0, #8]
  41c2b0:	ldr	x0, [sp, #120]
  41c2b4:	str	x1, [x0, #32]
  41c2b8:	ldrb	w0, [sp, #103]
  41c2bc:	cmp	w0, #0x0
  41c2c0:	b.eq	41c2ec <wcrtomb@plt+0x175dc>  // b.none
  41c2c4:	ldr	x0, [sp, #120]
  41c2c8:	ldr	w0, [x0, #60]
  41c2cc:	orr	w1, w0, #0x2
  41c2d0:	ldr	x0, [sp, #120]
  41c2d4:	str	w1, [x0, #60]
  41c2d8:	b	41c2ec <wcrtomb@plt+0x175dc>
  41c2dc:	ldr	x0, [sp, #120]
  41c2e0:	mov	w1, #0x1                   	// #1
  41c2e4:	str	w1, [x0, #56]
  41c2e8:	b	41c2f0 <wcrtomb@plt+0x175e0>
  41c2ec:	nop
  41c2f0:	ldr	x0, [sp, #120]
  41c2f4:	ldr	w0, [x0, #60]
  41c2f8:	orr	w1, w0, #0x4
  41c2fc:	ldr	x0, [sp, #120]
  41c300:	str	w1, [x0, #60]
  41c304:	b	41c544 <wcrtomb@plt+0x17834>
  41c308:	ldr	x0, [sp, #104]
  41c30c:	ldr	x2, [x0]
  41c310:	ldr	x0, [sp, #104]
  41c314:	ldr	x0, [x0, #8]
  41c318:	mov	x1, x0
  41c31c:	mov	x0, x2
  41c320:	bl	41bf4c <wcrtomb@plt+0x1723c>
  41c324:	str	x0, [sp, #88]
  41c328:	ldr	x0, [sp, #104]
  41c32c:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  41c330:	ldr	x2, [sp, #104]
  41c334:	ldr	x3, [x2]
  41c338:	ldr	x2, [sp, #104]
  41c33c:	ldr	x2, [x2, #8]
  41c340:	mov	x7, #0x0                   	// #0
  41c344:	mov	w6, #0x1                   	// #1
  41c348:	ldrb	w5, [sp, #103]
  41c34c:	mov	x4, x2
  41c350:	mov	x2, x1
  41c354:	mov	x1, x0
  41c358:	ldr	x0, [sp, #56]
  41c35c:	bl	41bcc4 <wcrtomb@plt+0x16fb4>
  41c360:	str	x0, [sp, #120]
  41c364:	ldr	x0, [sp, #88]
  41c368:	cmp	x0, #0x0
  41c36c:	b.eq	41c44c <wcrtomb@plt+0x1773c>  // b.none
  41c370:	ldr	x0, [sp, #88]
  41c374:	ldr	x0, [x0, #88]
  41c378:	ldr	x1, [sp, #56]
  41c37c:	bl	4047c0 <strcmp@plt>
  41c380:	cmp	w0, #0x0
  41c384:	b.eq	41c43c <wcrtomb@plt+0x1772c>  // b.none
  41c388:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41c38c:	add	x0, x0, #0x24c
  41c390:	ldr	w0, [x0]
  41c394:	and	w0, w0, #0x2000
  41c398:	cmp	w0, #0x0
  41c39c:	b.eq	41c40c <wcrtomb@plt+0x176fc>  // b.none
  41c3a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c3a4:	add	x0, x0, #0x420
  41c3a8:	ldr	x0, [x0]
  41c3ac:	cmp	x0, #0x0
  41c3b0:	b.eq	41c3c4 <wcrtomb@plt+0x176b4>  // b.none
  41c3b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c3b8:	add	x0, x0, #0x420
  41c3bc:	ldr	x0, [x0]
  41c3c0:	blr	x0
  41c3c4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c3c8:	add	x0, x0, #0xc90
  41c3cc:	bl	404c60 <gettext@plt>
  41c3d0:	mov	x19, x0
  41c3d4:	ldr	x0, [sp, #56]
  41c3d8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41c3dc:	mov	x20, x0
  41c3e0:	ldr	x0, [sp, #88]
  41c3e4:	ldr	x0, [x0, #88]
  41c3e8:	mov	x1, x0
  41c3ec:	mov	w0, #0x1                   	// #1
  41c3f0:	bl	459f10 <argp_usage@@Base+0x10e24>
  41c3f4:	mov	x4, x0
  41c3f8:	mov	x3, x20
  41c3fc:	mov	x2, x19
  41c400:	mov	w1, #0x0                   	// #0
  41c404:	mov	w0, #0x0                   	// #0
  41c408:	bl	404100 <error@plt>
  41c40c:	ldr	x0, [sp, #120]
  41c410:	ldr	x1, [sp, #88]
  41c414:	str	x1, [x0, #64]
  41c418:	ldr	x0, [sp, #120]
  41c41c:	ldr	w0, [x0, #60]
  41c420:	orr	w1, w0, #0x10
  41c424:	ldr	x0, [sp, #120]
  41c428:	str	w1, [x0, #60]
  41c42c:	ldr	x0, [sp, #88]
  41c430:	ldr	x0, [x0, #88]
  41c434:	ldr	x1, [sp, #56]
  41c438:	bl	41bb88 <wcrtomb@plt+0x16e78>
  41c43c:	ldr	x0, [sp, #120]
  41c440:	mov	w1, #0x1                   	// #1
  41c444:	str	w1, [x0, #56]
  41c448:	b	41c544 <wcrtomb@plt+0x17834>
  41c44c:	ldr	x0, [sp, #120]
  41c450:	ldr	w0, [x0, #60]
  41c454:	orr	w1, w0, #0x8
  41c458:	ldr	x0, [sp, #120]
  41c45c:	str	w1, [x0, #60]
  41c460:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41c464:	add	x0, x0, #0x24c
  41c468:	ldr	w0, [x0]
  41c46c:	and	w0, w0, #0x1000
  41c470:	cmp	w0, #0x0
  41c474:	b.eq	41c4c8 <wcrtomb@plt+0x177b8>  // b.none
  41c478:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c47c:	add	x0, x0, #0x420
  41c480:	ldr	x0, [x0]
  41c484:	cmp	x0, #0x0
  41c488:	b.eq	41c49c <wcrtomb@plt+0x1778c>  // b.none
  41c48c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c490:	add	x0, x0, #0x420
  41c494:	ldr	x0, [x0]
  41c498:	blr	x0
  41c49c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c4a0:	add	x0, x0, #0xcb8
  41c4a4:	bl	404c60 <gettext@plt>
  41c4a8:	mov	x19, x0
  41c4ac:	ldr	x0, [sp, #56]
  41c4b0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41c4b4:	mov	x3, x0
  41c4b8:	mov	x2, x19
  41c4bc:	mov	w1, #0x0                   	// #0
  41c4c0:	mov	w0, #0x0                   	// #0
  41c4c4:	bl	404100 <error@plt>
  41c4c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c4cc:	add	x0, x0, #0x370
  41c4d0:	ldr	x0, [x0]
  41c4d4:	cmp	x0, #0x0
  41c4d8:	b.ne	41c530 <wcrtomb@plt+0x17820>  // b.any
  41c4dc:	ldr	x0, [sp, #104]
  41c4e0:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  41c4e4:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c4e8:	add	x2, x2, #0x58
  41c4ec:	ldp	x2, x3, [x2]
  41c4f0:	bl	45ab0c <argp_usage@@Base+0x11a20>
  41c4f4:	cmp	w0, #0x0
  41c4f8:	b.lt	41c530 <wcrtomb@plt+0x17820>  // b.tstop
  41c4fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c500:	add	x0, x0, #0x3fc
  41c504:	ldr	w0, [x0]
  41c508:	cmp	w0, #0x0
  41c50c:	b.eq	41c538 <wcrtomb@plt+0x17828>  // b.none
  41c510:	ldr	x0, [sp, #104]
  41c514:	bl	45a9c8 <argp_usage@@Base+0x118dc>
  41c518:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c51c:	add	x2, x2, #0x58
  41c520:	ldp	x2, x3, [x2]
  41c524:	bl	45ab0c <argp_usage@@Base+0x11a20>
  41c528:	cmp	w0, #0x0
  41c52c:	b.ge	41c538 <wcrtomb@plt+0x17828>  // b.tcont
  41c530:	mov	w0, #0x2                   	// #2
  41c534:	b	41c53c <wcrtomb@plt+0x1782c>
  41c538:	mov	w0, #0x1                   	// #1
  41c53c:	ldr	x1, [sp, #120]
  41c540:	str	w0, [x1, #56]
  41c544:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c548:	add	x0, x0, #0x85
  41c54c:	ldrb	w0, [x0]
  41c550:	cmp	w0, #0x0
  41c554:	b.eq	41c624 <wcrtomb@plt+0x17914>  // b.none
  41c558:	ldr	x0, [sp, #48]
  41c55c:	ldr	x0, [x0, #392]
  41c560:	cmp	x0, #0x0
  41c564:	b.eq	41c624 <wcrtomb@plt+0x17914>  // b.none
  41c568:	ldr	x0, [sp, #104]
  41c56c:	ldr	x1, [x0]
  41c570:	ldr	x0, [sp, #48]
  41c574:	ldr	x0, [x0, #392]
  41c578:	ldr	x0, [x0, #88]
  41c57c:	cmp	x1, x0
  41c580:	b.eq	41c624 <wcrtomb@plt+0x17914>  // b.none
  41c584:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41c588:	add	x0, x0, #0x24c
  41c58c:	ldr	w0, [x0]
  41c590:	and	w0, w0, #0x40000
  41c594:	cmp	w0, #0x0
  41c598:	b.eq	41c5f0 <wcrtomb@plt+0x178e0>  // b.none
  41c59c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c5a0:	add	x0, x0, #0x420
  41c5a4:	ldr	x0, [x0]
  41c5a8:	cmp	x0, #0x0
  41c5ac:	b.eq	41c5c0 <wcrtomb@plt+0x178b0>  // b.none
  41c5b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c5b4:	add	x0, x0, #0x420
  41c5b8:	ldr	x0, [x0]
  41c5bc:	blr	x0
  41c5c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c5c4:	add	x0, x0, #0xcd0
  41c5c8:	bl	404c60 <gettext@plt>
  41c5cc:	mov	x19, x0
  41c5d0:	ldr	x0, [sp, #120]
  41c5d4:	ldr	x0, [x0, #88]
  41c5d8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41c5dc:	mov	x3, x0
  41c5e0:	mov	x2, x19
  41c5e4:	mov	w1, #0x0                   	// #0
  41c5e8:	mov	w0, #0x0                   	// #0
  41c5ec:	bl	404100 <error@plt>
  41c5f0:	ldr	x0, [sp, #120]
  41c5f4:	str	wzr, [x0, #56]
  41c5f8:	ldr	x0, [sp, #120]
  41c5fc:	ldr	x0, [x0, #40]
  41c600:	cmp	x0, #0x0
  41c604:	b.eq	41c61c <wcrtomb@plt+0x1790c>  // b.none
  41c608:	ldr	x0, [sp, #120]
  41c60c:	ldr	x0, [x0, #40]
  41c610:	bl	41b620 <wcrtomb@plt+0x16910>
  41c614:	ldr	x0, [sp, #120]
  41c618:	str	xzr, [x0, #40]
  41c61c:	strb	wzr, [sp, #119]
  41c620:	b	41c664 <wcrtomb@plt+0x17954>
  41c624:	ldr	w0, [sp, #44]
  41c628:	and	w0, w0, #0x10
  41c62c:	cmp	w0, #0x0
  41c630:	b.eq	41c664 <wcrtomb@plt+0x17954>  // b.none
  41c634:	ldr	w0, [sp, #44]
  41c638:	and	w0, w0, #0x3
  41c63c:	mov	w1, w0
  41c640:	ldr	x0, [sp, #120]
  41c644:	str	w1, [x0, #56]
  41c648:	ldr	x0, [sp, #120]
  41c64c:	ldr	w0, [x0, #56]
  41c650:	cmp	w0, #0x0
  41c654:	b.ne	41c664 <wcrtomb@plt+0x17954>  // b.any
  41c658:	ldr	x0, [sp, #32]
  41c65c:	mov	w1, #0x4e                  	// #78
  41c660:	strb	w1, [x0]
  41c664:	ldrb	w0, [sp, #119]
  41c668:	cmp	w0, #0x0
  41c66c:	b.eq	41c6d8 <wcrtomb@plt+0x179c8>  // b.none
  41c670:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41c674:	add	x0, x0, #0x24c
  41c678:	ldr	w0, [x0]
  41c67c:	and	w0, w0, #0x2000
  41c680:	cmp	w0, #0x0
  41c684:	b.eq	41c6d8 <wcrtomb@plt+0x179c8>  // b.none
  41c688:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c68c:	add	x0, x0, #0x420
  41c690:	ldr	x0, [x0]
  41c694:	cmp	x0, #0x0
  41c698:	b.eq	41c6ac <wcrtomb@plt+0x1799c>  // b.none
  41c69c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41c6a0:	add	x0, x0, #0x420
  41c6a4:	ldr	x0, [x0]
  41c6a8:	blr	x0
  41c6ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c6b0:	add	x0, x0, #0xd08
  41c6b4:	bl	404c60 <gettext@plt>
  41c6b8:	mov	x19, x0
  41c6bc:	ldr	x0, [sp, #56]
  41c6c0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41c6c4:	mov	x3, x0
  41c6c8:	mov	x2, x19
  41c6cc:	mov	w1, #0x0                   	// #0
  41c6d0:	mov	w0, #0x0                   	// #0
  41c6d4:	bl	404100 <error@plt>
  41c6d8:	ldr	x0, [sp, #120]
  41c6dc:	ldr	w0, [x0, #60]
  41c6e0:	orr	w1, w0, #0x1
  41c6e4:	ldr	x0, [sp, #120]
  41c6e8:	str	w1, [x0, #60]
  41c6ec:	ldr	x0, [sp, #120]
  41c6f0:	ldr	w0, [x0, #56]
  41c6f4:	cmp	w0, #0x0
  41c6f8:	b.eq	41c7e4 <wcrtomb@plt+0x17ad4>  // b.none
  41c6fc:	add	x0, sp, #0x48
  41c700:	mov	x1, x0
  41c704:	ldr	x0, [sp, #48]
  41c708:	bl	40d0e8 <wcrtomb@plt+0x83d8>
  41c70c:	cmp	w0, #0x3
  41c710:	b.eq	41c740 <wcrtomb@plt+0x17a30>  // b.none
  41c714:	cmp	w0, #0x3
  41c718:	b.hi	41c7e4 <wcrtomb@plt+0x17ad4>  // b.pmore
  41c71c:	cmp	w0, #0x2
  41c720:	b.eq	41c7b0 <wcrtomb@plt+0x17aa0>  // b.none
  41c724:	cmp	w0, #0x2
  41c728:	b.hi	41c7e4 <wcrtomb@plt+0x17ad4>  // b.pmore
  41c72c:	cmp	w0, #0x0
  41c730:	b.eq	41c7e0 <wcrtomb@plt+0x17ad0>  // b.none
  41c734:	cmp	w0, #0x1
  41c738:	b.eq	41c778 <wcrtomb@plt+0x17a68>  // b.none
  41c73c:	b	41c7e4 <wcrtomb@plt+0x17ad4>
  41c740:	ldr	x19, [sp, #72]
  41c744:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c748:	add	x0, x0, #0xd28
  41c74c:	bl	404c60 <gettext@plt>
  41c750:	mov	x2, x0
  41c754:	mov	x1, x19
  41c758:	ldr	x0, [sp, #56]
  41c75c:	bl	40d02c <wcrtomb@plt+0x831c>
  41c760:	ldr	x0, [sp, #32]
  41c764:	mov	w1, #0x4e                  	// #78
  41c768:	strb	w1, [x0]
  41c76c:	ldr	x0, [sp, #120]
  41c770:	str	wzr, [x0, #56]
  41c774:	b	41c7e4 <wcrtomb@plt+0x17ad4>
  41c778:	ldr	x19, [sp, #72]
  41c77c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c780:	add	x0, x0, #0xd40
  41c784:	bl	404c60 <gettext@plt>
  41c788:	mov	x2, x0
  41c78c:	mov	x1, x19
  41c790:	ldr	x0, [sp, #56]
  41c794:	bl	40d02c <wcrtomb@plt+0x831c>
  41c798:	ldr	x0, [sp, #120]
  41c79c:	str	wzr, [x0, #56]
  41c7a0:	ldr	x1, [sp, #72]
  41c7a4:	ldr	x0, [sp, #120]
  41c7a8:	str	x1, [x0, #72]
  41c7ac:	b	41c7e4 <wcrtomb@plt+0x17ad4>
  41c7b0:	ldr	x19, [sp, #72]
  41c7b4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41c7b8:	add	x0, x0, #0xd40
  41c7bc:	bl	404c60 <gettext@plt>
  41c7c0:	mov	x2, x0
  41c7c4:	mov	x1, x19
  41c7c8:	ldr	x0, [sp, #56]
  41c7cc:	bl	40d02c <wcrtomb@plt+0x831c>
  41c7d0:	ldr	x1, [sp, #72]
  41c7d4:	ldr	x0, [sp, #120]
  41c7d8:	str	x1, [x0, #72]
  41c7dc:	b	41c7e4 <wcrtomb@plt+0x17ad4>
  41c7e0:	nop
  41c7e4:	ldr	x0, [sp, #120]
  41c7e8:	ldp	x19, x20, [sp, #16]
  41c7ec:	ldp	x29, x30, [sp], #128
  41c7f0:	ret
  41c7f4:	stp	x29, x30, [sp, #-112]!
  41c7f8:	mov	x29, sp
  41c7fc:	str	x0, [sp, #24]
  41c800:	str	x1, [sp, #16]
  41c804:	ldr	x0, [sp, #24]
  41c808:	ldr	w0, [x0, #56]
  41c80c:	cmp	w0, #0x2
  41c810:	b.ne	41c81c <wcrtomb@plt+0x17b0c>  // b.any
  41c814:	str	xzr, [sp, #64]
  41c818:	b	41c874 <wcrtomb@plt+0x17b64>
  41c81c:	ldr	x0, [sp, #24]
  41c820:	ldr	w0, [x0, #60]
  41c824:	and	w0, w0, #0x10
  41c828:	cmp	w0, #0x0
  41c82c:	b.eq	41c868 <wcrtomb@plt+0x17b58>  // b.none
  41c830:	ldr	x0, [sp, #24]
  41c834:	ldr	x0, [x0, #64]
  41c838:	ldr	x0, [x0, #48]
  41c83c:	cmp	x0, #0x0
  41c840:	b.eq	41c854 <wcrtomb@plt+0x17b44>  // b.none
  41c844:	ldr	x0, [sp, #24]
  41c848:	ldr	x0, [x0, #64]
  41c84c:	ldr	x0, [x0, #48]
  41c850:	b	41c860 <wcrtomb@plt+0x17b50>
  41c854:	ldr	x0, [sp, #24]
  41c858:	ldr	x0, [x0, #64]
  41c85c:	ldr	x0, [x0, #40]
  41c860:	str	x0, [sp, #64]
  41c864:	b	41c874 <wcrtomb@plt+0x17b64>
  41c868:	ldr	x0, [sp, #24]
  41c86c:	ldr	x0, [x0, #40]
  41c870:	str	x0, [sp, #64]
  41c874:	str	xzr, [sp, #96]
  41c878:	str	xzr, [sp, #88]
  41c87c:	ldr	x0, [sp, #16]
  41c880:	str	x0, [sp, #80]
  41c884:	b	41c8c8 <wcrtomb@plt+0x17bb8>
  41c888:	ldr	x0, [sp, #80]
  41c88c:	bl	4040b0 <strlen@plt>
  41c890:	mov	x1, x0
  41c894:	ldr	x0, [sp, #88]
  41c898:	add	x0, x1, x0
  41c89c:	add	x0, x0, #0x2
  41c8a0:	str	x0, [sp, #88]
  41c8a4:	ldr	x0, [sp, #80]
  41c8a8:	bl	4040b0 <strlen@plt>
  41c8ac:	add	x0, x0, #0x1
  41c8b0:	ldr	x1, [sp, #80]
  41c8b4:	add	x0, x1, x0
  41c8b8:	str	x0, [sp, #80]
  41c8bc:	ldr	x0, [sp, #96]
  41c8c0:	add	x0, x0, #0x1
  41c8c4:	str	x0, [sp, #96]
  41c8c8:	ldr	x0, [sp, #80]
  41c8cc:	ldrb	w0, [x0]
  41c8d0:	cmp	w0, #0x0
  41c8d4:	b.ne	41c888 <wcrtomb@plt+0x17b78>  // b.any
  41c8d8:	ldr	x0, [sp, #88]
  41c8dc:	add	x0, x0, #0x1
  41c8e0:	str	x0, [sp, #88]
  41c8e4:	mov	x1, #0x8                   	// #8
  41c8e8:	ldr	x0, [sp, #96]
  41c8ec:	bl	45b7a4 <argp_usage@@Base+0x126b8>
  41c8f0:	str	x0, [sp, #56]
  41c8f4:	str	xzr, [sp, #104]
  41c8f8:	ldr	x0, [sp, #16]
  41c8fc:	str	x0, [sp, #80]
  41c900:	b	41c940 <wcrtomb@plt+0x17c30>
  41c904:	ldr	x0, [sp, #104]
  41c908:	lsl	x0, x0, #3
  41c90c:	ldr	x1, [sp, #56]
  41c910:	add	x0, x1, x0
  41c914:	ldr	x1, [sp, #80]
  41c918:	str	x1, [x0]
  41c91c:	ldr	x0, [sp, #80]
  41c920:	bl	4040b0 <strlen@plt>
  41c924:	add	x0, x0, #0x1
  41c928:	ldr	x1, [sp, #80]
  41c92c:	add	x0, x1, x0
  41c930:	str	x0, [sp, #80]
  41c934:	ldr	x0, [sp, #104]
  41c938:	add	x0, x0, #0x1
  41c93c:	str	x0, [sp, #104]
  41c940:	ldr	x0, [sp, #80]
  41c944:	ldrb	w0, [x0]
  41c948:	cmp	w0, #0x0
  41c94c:	b.ne	41c904 <wcrtomb@plt+0x17bf4>  // b.any
  41c950:	adrp	x0, 41b000 <wcrtomb@plt+0x162f0>
  41c954:	add	x3, x0, #0x64c
  41c958:	mov	x2, #0x8                   	// #8
  41c95c:	ldr	x1, [sp, #96]
  41c960:	ldr	x0, [sp, #56]
  41c964:	bl	404280 <qsort@plt>
  41c968:	ldr	x0, [sp, #88]
  41c96c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41c970:	str	x0, [sp, #48]
  41c974:	ldr	x0, [sp, #48]
  41c978:	str	x0, [sp, #72]
  41c97c:	str	xzr, [sp, #104]
  41c980:	b	41ca80 <wcrtomb@plt+0x17d70>
  41c984:	ldr	x0, [sp, #104]
  41c988:	lsl	x0, x0, #3
  41c98c:	ldr	x1, [sp, #56]
  41c990:	add	x0, x1, x0
  41c994:	ldr	x0, [x0]
  41c998:	mov	x1, x0
  41c99c:	ldr	x0, [sp, #64]
  41c9a0:	bl	41b690 <wcrtomb@plt+0x16980>
  41c9a4:	str	x0, [sp, #40]
  41c9a8:	ldr	x0, [sp, #40]
  41c9ac:	cmp	x0, #0x0
  41c9b0:	b.eq	41c9f0 <wcrtomb@plt+0x17ce0>  // b.none
  41c9b4:	ldr	x0, [sp, #24]
  41c9b8:	ldr	x0, [x0, #72]
  41c9bc:	cmp	x0, #0x0
  41c9c0:	b.eq	41c9d4 <wcrtomb@plt+0x17cc4>  // b.none
  41c9c4:	ldr	x0, [sp, #72]
  41c9c8:	mov	w1, #0x49                  	// #73
  41c9cc:	strb	w1, [x0]
  41c9d0:	b	41c9e0 <wcrtomb@plt+0x17cd0>
  41c9d4:	ldr	x0, [sp, #72]
  41c9d8:	mov	w1, #0x20                  	// #32
  41c9dc:	strb	w1, [x0]
  41c9e0:	ldr	x0, [sp, #72]
  41c9e4:	add	x0, x0, #0x1
  41c9e8:	str	x0, [sp, #72]
  41c9ec:	b	41ca2c <wcrtomb@plt+0x17d1c>
  41c9f0:	ldr	x0, [sp, #24]
  41c9f4:	ldr	x0, [x0, #72]
  41c9f8:	cmp	x0, #0x0
  41c9fc:	b.eq	41ca18 <wcrtomb@plt+0x17d08>  // b.none
  41ca00:	ldr	x0, [sp, #72]
  41ca04:	add	x1, x0, #0x1
  41ca08:	str	x1, [sp, #72]
  41ca0c:	mov	w1, #0x49                  	// #73
  41ca10:	strb	w1, [x0]
  41ca14:	b	41ca2c <wcrtomb@plt+0x17d1c>
  41ca18:	ldr	x0, [sp, #72]
  41ca1c:	add	x1, x0, #0x1
  41ca20:	str	x1, [sp, #72]
  41ca24:	mov	w1, #0x59                  	// #89
  41ca28:	strb	w1, [x0]
  41ca2c:	ldr	x0, [sp, #104]
  41ca30:	lsl	x0, x0, #3
  41ca34:	ldr	x1, [sp, #56]
  41ca38:	add	x0, x1, x0
  41ca3c:	ldr	x0, [x0]
  41ca40:	str	x0, [sp, #80]
  41ca44:	nop
  41ca48:	ldr	x1, [sp, #80]
  41ca4c:	add	x0, x1, #0x1
  41ca50:	str	x0, [sp, #80]
  41ca54:	ldr	x0, [sp, #72]
  41ca58:	add	x2, x0, #0x1
  41ca5c:	str	x2, [sp, #72]
  41ca60:	ldrb	w1, [x1]
  41ca64:	strb	w1, [x0]
  41ca68:	ldrb	w0, [x0]
  41ca6c:	cmp	w0, #0x0
  41ca70:	b.ne	41ca48 <wcrtomb@plt+0x17d38>  // b.any
  41ca74:	ldr	x0, [sp, #104]
  41ca78:	add	x0, x0, #0x1
  41ca7c:	str	x0, [sp, #104]
  41ca80:	ldr	x1, [sp, #104]
  41ca84:	ldr	x0, [sp, #96]
  41ca88:	cmp	x1, x0
  41ca8c:	b.cc	41c984 <wcrtomb@plt+0x17c74>  // b.lo, b.ul, b.last
  41ca90:	ldr	x0, [sp, #72]
  41ca94:	strb	wzr, [x0]
  41ca98:	ldr	x0, [sp, #24]
  41ca9c:	ldr	x1, [x0, #40]
  41caa0:	ldr	x0, [sp, #24]
  41caa4:	str	x1, [x0, #48]
  41caa8:	mov	x1, #0x0                   	// #0
  41caac:	ldr	x0, [sp, #48]
  41cab0:	bl	41b438 <wcrtomb@plt+0x16728>
  41cab4:	mov	x1, x0
  41cab8:	ldr	x0, [sp, #24]
  41cabc:	str	x1, [x0, #40]
  41cac0:	ldr	x0, [sp, #48]
  41cac4:	bl	404880 <free@plt>
  41cac8:	ldr	x0, [sp, #56]
  41cacc:	bl	404880 <free@plt>
  41cad0:	nop
  41cad4:	ldp	x29, x30, [sp], #112
  41cad8:	ret
  41cadc:	stp	x29, x30, [sp, #-48]!
  41cae0:	mov	x29, sp
  41cae4:	str	x0, [sp, #24]
  41cae8:	ldr	x0, [sp, #24]
  41caec:	ldr	x0, [x0, #72]
  41caf0:	bl	4040b0 <strlen@plt>
  41caf4:	add	x0, x0, #0x1
  41caf8:	str	x0, [sp, #40]
  41cafc:	ldr	x0, [sp, #40]
  41cb00:	add	x0, x0, #0x2
  41cb04:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41cb08:	str	x0, [sp, #32]
  41cb0c:	ldr	x0, [sp, #32]
  41cb10:	mov	w1, #0x59                  	// #89
  41cb14:	strb	w1, [x0]
  41cb18:	ldr	x0, [sp, #32]
  41cb1c:	add	x3, x0, #0x1
  41cb20:	ldr	x0, [sp, #24]
  41cb24:	ldr	x0, [x0, #72]
  41cb28:	ldr	x2, [sp, #40]
  41cb2c:	mov	x1, x0
  41cb30:	mov	x0, x3
  41cb34:	bl	404020 <memcpy@plt>
  41cb38:	ldr	x0, [sp, #40]
  41cb3c:	add	x0, x0, #0x1
  41cb40:	ldr	x1, [sp, #32]
  41cb44:	add	x0, x1, x0
  41cb48:	strb	wzr, [x0]
  41cb4c:	ldr	x0, [sp, #24]
  41cb50:	ldr	x1, [x0, #40]
  41cb54:	ldr	x0, [sp, #24]
  41cb58:	str	x1, [x0, #48]
  41cb5c:	mov	x1, #0x0                   	// #0
  41cb60:	ldr	x0, [sp, #32]
  41cb64:	bl	41b438 <wcrtomb@plt+0x16728>
  41cb68:	mov	x1, x0
  41cb6c:	ldr	x0, [sp, #24]
  41cb70:	str	x1, [x0, #40]
  41cb74:	ldr	x0, [sp, #32]
  41cb78:	bl	404880 <free@plt>
  41cb7c:	nop
  41cb80:	ldp	x29, x30, [sp], #48
  41cb84:	ret
  41cb88:	sub	sp, sp, #0x240
  41cb8c:	stp	x29, x30, [sp]
  41cb90:	mov	x29, sp
  41cb94:	str	x0, [sp, #24]
  41cb98:	ldr	x0, [sp, #24]
  41cb9c:	ldr	x0, [x0]
  41cba0:	str	x0, [sp, #544]
  41cba4:	ldr	x0, [sp, #24]
  41cba8:	bl	40ff88 <wcrtomb@plt+0xb278>
  41cbac:	str	x0, [sp, #536]
  41cbb0:	ldr	x0, [sp, #24]
  41cbb4:	ldr	x0, [x0, #88]
  41cbb8:	str	x0, [sp, #528]
  41cbbc:	ldr	x0, [sp, #24]
  41cbc0:	ldr	x0, [x0, #392]
  41cbc4:	cmp	x0, #0x0
  41cbc8:	cset	w0, eq  // eq = none
  41cbcc:	strb	w0, [sp, #527]
  41cbd0:	ldr	x0, [sp, #536]
  41cbd4:	cmp	x0, #0x0
  41cbd8:	b.ne	41cbe4 <wcrtomb@plt+0x17ed4>  // b.any
  41cbdc:	ldr	x0, [sp, #544]
  41cbe0:	bl	43a93c <wcrtomb@plt+0x35c2c>
  41cbe4:	ldr	x0, [sp, #24]
  41cbe8:	bl	412bfc <wcrtomb@plt+0xdeec>
  41cbec:	ldr	x0, [sp, #544]
  41cbf0:	bl	45b858 <argp_usage@@Base+0x1276c>
  41cbf4:	str	x0, [sp, #512]
  41cbf8:	ldr	x0, [sp, #512]
  41cbfc:	bl	4241d0 <wcrtomb@plt+0x1f4c0>
  41cc00:	ldrb	w0, [sp, #527]
  41cc04:	cmp	w0, #0x0
  41cc08:	b.eq	41cc14 <wcrtomb@plt+0x17f04>  // b.none
  41cc0c:	mov	w0, #0x20                  	// #32
  41cc10:	b	41cc18 <wcrtomb@plt+0x17f08>
  41cc14:	mov	w0, #0x0                   	// #0
  41cc18:	add	x1, sp, #0x1df
  41cc1c:	mov	x3, x1
  41cc20:	mov	w2, w0
  41cc24:	ldr	x1, [sp, #24]
  41cc28:	ldr	x0, [sp, #512]
  41cc2c:	bl	41c044 <wcrtomb@plt+0x17334>
  41cc30:	str	x0, [sp, #504]
  41cc34:	ldr	x0, [sp, #512]
  41cc38:	bl	404880 <free@plt>
  41cc3c:	ldr	x0, [sp, #544]
  41cc40:	bl	426350 <wcrtomb@plt+0x21640>
  41cc44:	str	x0, [sp, #496]
  41cc48:	ldr	x0, [sp, #536]
  41cc4c:	cmp	x0, #0x0
  41cc50:	b.eq	41cfb8 <wcrtomb@plt+0x182a8>  // b.none
  41cc54:	ldr	x0, [sp, #504]
  41cc58:	ldr	w0, [x0, #56]
  41cc5c:	cmp	w0, #0x0
  41cc60:	b.eq	41cfa0 <wcrtomb@plt+0x18290>  // b.none
  41cc64:	ldr	x1, [sp, #536]
  41cc68:	ldr	x0, [sp, #504]
  41cc6c:	bl	41c7f4 <wcrtomb@plt+0x17ae4>
  41cc70:	ldr	x0, [sp, #504]
  41cc74:	ldr	x0, [x0, #40]
  41cc78:	add	x1, sp, #0x1d0
  41cc7c:	mov	x2, x1
  41cc80:	mov	w1, #0x1                   	// #1
  41cc84:	bl	41b7ec <wcrtomb@plt+0x16adc>
  41cc88:	str	x0, [sp, #568]
  41cc8c:	b	41cf88 <wcrtomb@plt+0x18278>
  41cc90:	ldr	x0, [sp, #568]
  41cc94:	add	x0, x0, #0x1
  41cc98:	mov	x1, x0
  41cc9c:	ldr	x0, [sp, #496]
  41cca0:	bl	426440 <wcrtomb@plt+0x21730>
  41cca4:	str	x0, [sp, #488]
  41cca8:	ldr	x0, [sp, #568]
  41ccac:	ldrb	w0, [x0]
  41ccb0:	cmp	w0, #0x49
  41ccb4:	b.ne	41ccc8 <wcrtomb@plt+0x17fb8>  // b.any
  41ccb8:	ldr	x0, [sp, #568]
  41ccbc:	mov	w1, #0x4e                  	// #78
  41ccc0:	strb	w1, [x0]
  41ccc4:	b	41cf7c <wcrtomb@plt+0x1826c>
  41ccc8:	ldr	x1, [sp, #24]
  41cccc:	ldr	x0, [sp, #488]
  41ccd0:	bl	412f50 <wcrtomb@plt+0xe240>
  41ccd4:	and	w0, w0, #0xff
  41ccd8:	cmp	w0, #0x0
  41ccdc:	b.eq	41ccf0 <wcrtomb@plt+0x17fe0>  // b.none
  41cce0:	ldr	x0, [sp, #568]
  41cce4:	mov	w1, #0x4e                  	// #78
  41cce8:	strb	w1, [x0]
  41ccec:	b	41cf7c <wcrtomb@plt+0x1826c>
  41ccf0:	ldr	x0, [sp, #24]
  41ccf4:	ldr	w0, [x0, #408]
  41ccf8:	str	w0, [sp, #484]
  41ccfc:	str	xzr, [sp, #560]
  41cd00:	add	x0, sp, #0x28
  41cd04:	bl	434e14 <wcrtomb@plt+0x30104>
  41cd08:	ldr	w0, [sp, #484]
  41cd0c:	cmp	w0, #0x0
  41cd10:	b.ge	41cd38 <wcrtomb@plt+0x18028>  // b.tcont
  41cd14:	bl	404bc0 <__errno_location@plt>
  41cd18:	mov	x1, x0
  41cd1c:	ldr	w0, [sp, #484]
  41cd20:	neg	w0, w0
  41cd24:	str	w0, [x1]
  41cd28:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  41cd2c:	add	x0, x0, #0xf04
  41cd30:	str	x0, [sp, #560]
  41cd34:	b	41cdfc <wcrtomb@plt+0x180ec>
  41cd38:	ldr	x0, [sp, #568]
  41cd3c:	add	x1, x0, #0x1
  41cd40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41cd44:	add	x0, x0, #0x260
  41cd48:	ldr	w2, [x0]
  41cd4c:	add	x0, sp, #0x28
  41cd50:	add	x0, x0, #0x58
  41cd54:	mov	w3, w2
  41cd58:	mov	x2, x0
  41cd5c:	ldr	w0, [sp, #484]
  41cd60:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  41cd64:	cmp	w0, #0x0
  41cd68:	b.eq	41cd7c <wcrtomb@plt+0x1806c>  // b.none
  41cd6c:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  41cd70:	add	x0, x0, #0xe0
  41cd74:	str	x0, [sp, #560]
  41cd78:	b	41cdfc <wcrtomb@plt+0x180ec>
  41cd7c:	ldr	w0, [sp, #144]
  41cd80:	and	w0, w0, #0xf000
  41cd84:	cmp	w0, #0x4, lsl #12
  41cd88:	b.ne	41cdfc <wcrtomb@plt+0x180ec>  // b.any
  41cd8c:	ldr	x0, [sp, #568]
  41cd90:	add	x1, x0, #0x1
  41cd94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41cd98:	add	x0, x0, #0x2f4
  41cd9c:	ldr	w0, [x0]
  41cda0:	mov	w2, w0
  41cda4:	ldr	x0, [sp, #24]
  41cda8:	bl	410a0c <wcrtomb@plt+0xbcfc>
  41cdac:	str	w0, [sp, #480]
  41cdb0:	ldr	w0, [sp, #480]
  41cdb4:	cmp	w0, #0x0
  41cdb8:	b.ge	41cdcc <wcrtomb@plt+0x180bc>  // b.tcont
  41cdbc:	adrp	x0, 425000 <wcrtomb@plt+0x202f0>
  41cdc0:	add	x0, x0, #0xf04
  41cdc4:	str	x0, [sp, #560]
  41cdc8:	b	41cdfc <wcrtomb@plt+0x180ec>
  41cdcc:	ldr	w0, [sp, #480]
  41cdd0:	str	w0, [sp, #448]
  41cdd4:	add	x0, sp, #0x28
  41cdd8:	add	x0, x0, #0x58
  41cddc:	mov	x1, x0
  41cde0:	ldr	w0, [sp, #480]
  41cde4:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  41cde8:	cmp	w0, #0x0
  41cdec:	b.eq	41cdfc <wcrtomb@plt+0x180ec>  // b.none
  41cdf0:	adrp	x0, 426000 <wcrtomb@plt+0x212f0>
  41cdf4:	add	x0, x0, #0xe0
  41cdf8:	str	x0, [sp, #560]
  41cdfc:	ldr	x0, [sp, #560]
  41ce00:	cmp	x0, #0x0
  41ce04:	b.eq	41ce28 <wcrtomb@plt+0x18118>  // b.none
  41ce08:	ldr	x2, [sp, #560]
  41ce0c:	mov	w1, #0x0                   	// #0
  41ce10:	ldr	x0, [sp, #488]
  41ce14:	bl	426138 <wcrtomb@plt+0x21428>
  41ce18:	ldr	x0, [sp, #568]
  41ce1c:	mov	w1, #0x4e                  	// #78
  41ce20:	strb	w1, [x0]
  41ce24:	b	41cf74 <wcrtomb@plt+0x18264>
  41ce28:	ldr	w0, [sp, #144]
  41ce2c:	and	w0, w0, #0xf000
  41ce30:	cmp	w0, #0x4, lsl #12
  41ce34:	b.ne	41ceb8 <wcrtomb@plt+0x181a8>  // b.any
  41ce38:	str	wzr, [sp, #556]
  41ce3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ce40:	add	x0, x0, #0x2d4
  41ce44:	ldr	w0, [x0]
  41ce48:	cmp	w0, #0x0
  41ce4c:	b.ne	41ce60 <wcrtomb@plt+0x18150>  // b.any
  41ce50:	ldr	w0, [sp, #556]
  41ce54:	orr	w0, w0, #0x10
  41ce58:	str	w0, [sp, #556]
  41ce5c:	b	41ce80 <wcrtomb@plt+0x18170>
  41ce60:	ldr	x0, [sp, #504]
  41ce64:	ldr	w0, [x0, #56]
  41ce68:	cmp	w0, #0x2
  41ce6c:	b.ne	41ce80 <wcrtomb@plt+0x18170>  // b.any
  41ce70:	ldr	w1, [sp, #556]
  41ce74:	mov	w0, #0x12                  	// #18
  41ce78:	orr	w0, w1, w0
  41ce7c:	str	w0, [sp, #556]
  41ce80:	ldr	x0, [sp, #568]
  41ce84:	mov	w1, #0x44                  	// #68
  41ce88:	strb	w1, [x0]
  41ce8c:	ldr	x0, [sp, #24]
  41ce90:	str	x0, [sp, #432]
  41ce94:	add	x0, sp, #0x28
  41ce98:	ldr	x3, [sp, #568]
  41ce9c:	ldr	w2, [sp, #556]
  41cea0:	mov	x1, x0
  41cea4:	ldr	x0, [sp, #488]
  41cea8:	bl	41c044 <wcrtomb@plt+0x17334>
  41ceac:	add	x0, sp, #0x28
  41ceb0:	bl	410ac8 <wcrtomb@plt+0xbdb8>
  41ceb4:	b	41cf74 <wcrtomb@plt+0x18264>
  41ceb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41cebc:	add	x0, x0, #0x85
  41cec0:	ldrb	w0, [x0]
  41cec4:	cmp	w0, #0x0
  41cec8:	b.eq	41ceec <wcrtomb@plt+0x181dc>  // b.none
  41cecc:	ldr	x0, [sp, #128]
  41ced0:	ldr	x1, [sp, #528]
  41ced4:	cmp	x1, x0
  41ced8:	b.eq	41ceec <wcrtomb@plt+0x181dc>  // b.none
  41cedc:	ldr	x0, [sp, #568]
  41cee0:	mov	w1, #0x4e                  	// #78
  41cee4:	strb	w1, [x0]
  41cee8:	b	41cf74 <wcrtomb@plt+0x18264>
  41ceec:	ldr	x0, [sp, #568]
  41cef0:	ldrb	w0, [x0]
  41cef4:	cmp	w0, #0x59
  41cef8:	b.eq	41cf74 <wcrtomb@plt+0x18264>  // b.none
  41cefc:	add	x0, sp, #0x28
  41cf00:	add	x0, x0, #0x58
  41cf04:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  41cf08:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  41cf0c:	add	x2, x2, #0x58
  41cf10:	ldp	x2, x3, [x2]
  41cf14:	bl	45ab0c <argp_usage@@Base+0x11a20>
  41cf18:	cmp	w0, #0x0
  41cf1c:	b.ge	41cf68 <wcrtomb@plt+0x18258>  // b.tcont
  41cf20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41cf24:	add	x0, x0, #0x3fc
  41cf28:	ldr	w0, [x0]
  41cf2c:	cmp	w0, #0x0
  41cf30:	b.eq	41cf58 <wcrtomb@plt+0x18248>  // b.none
  41cf34:	add	x0, sp, #0x28
  41cf38:	add	x0, x0, #0x58
  41cf3c:	bl	45a9c8 <argp_usage@@Base+0x118dc>
  41cf40:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  41cf44:	add	x2, x2, #0x58
  41cf48:	ldp	x2, x3, [x2]
  41cf4c:	bl	45ab0c <argp_usage@@Base+0x11a20>
  41cf50:	cmp	w0, #0x0
  41cf54:	b.ge	41cf68 <wcrtomb@plt+0x18258>  // b.tcont
  41cf58:	ldr	x0, [sp, #568]
  41cf5c:	mov	w1, #0x4e                  	// #78
  41cf60:	strb	w1, [x0]
  41cf64:	b	41cf74 <wcrtomb@plt+0x18264>
  41cf68:	ldr	x0, [sp, #568]
  41cf6c:	mov	w1, #0x59                  	// #89
  41cf70:	strb	w1, [x0]
  41cf74:	add	x0, sp, #0x28
  41cf78:	bl	434ecc <wcrtomb@plt+0x301bc>
  41cf7c:	ldr	x0, [sp, #464]
  41cf80:	bl	41b708 <wcrtomb@plt+0x169f8>
  41cf84:	str	x0, [sp, #568]
  41cf88:	ldr	x0, [sp, #568]
  41cf8c:	cmp	x0, #0x0
  41cf90:	b.ne	41cc90 <wcrtomb@plt+0x17f80>  // b.any
  41cf94:	ldr	x0, [sp, #464]
  41cf98:	bl	404880 <free@plt>
  41cf9c:	b	41cfb8 <wcrtomb@plt+0x182a8>
  41cfa0:	ldr	x0, [sp, #504]
  41cfa4:	ldr	x0, [x0, #72]
  41cfa8:	cmp	x0, #0x0
  41cfac:	b.eq	41cfb8 <wcrtomb@plt+0x182a8>  // b.none
  41cfb0:	ldr	x0, [sp, #504]
  41cfb4:	bl	41cadc <wcrtomb@plt+0x17dcc>
  41cfb8:	ldr	x0, [sp, #496]
  41cfbc:	bl	426414 <wcrtomb@plt+0x21704>
  41cfc0:	ldr	x0, [sp, #536]
  41cfc4:	bl	404880 <free@plt>
  41cfc8:	ldr	x0, [sp, #504]
  41cfcc:	ldp	x29, x30, [sp]
  41cfd0:	add	sp, sp, #0x240
  41cfd4:	ret
  41cfd8:	sub	sp, sp, #0x10
  41cfdc:	str	x0, [sp, #8]
  41cfe0:	ldr	x0, [sp, #8]
  41cfe4:	cmp	x0, #0x0
  41cfe8:	b.ne	41cff4 <wcrtomb@plt+0x182e4>  // b.any
  41cfec:	mov	x0, #0x0                   	// #0
  41cff0:	b	41d018 <wcrtomb@plt+0x18308>
  41cff4:	ldr	x0, [sp, #8]
  41cff8:	ldr	x0, [x0, #40]
  41cffc:	cmp	x0, #0x0
  41d000:	b.eq	41d014 <wcrtomb@plt+0x18304>  // b.none
  41d004:	ldr	x0, [sp, #8]
  41d008:	ldr	x0, [x0, #40]
  41d00c:	ldr	x0, [x0]
  41d010:	b	41d018 <wcrtomb@plt+0x18308>
  41d014:	mov	x0, #0x0                   	// #0
  41d018:	add	sp, sp, #0x10
  41d01c:	ret
  41d020:	stp	x29, x30, [sp, #-48]!
  41d024:	mov	x29, sp
  41d028:	str	x0, [sp, #24]
  41d02c:	ldr	x0, [sp, #24]
  41d030:	bl	41cfd8 <wcrtomb@plt+0x182c8>
  41d034:	str	x0, [sp, #40]
  41d038:	ldr	x0, [sp, #40]
  41d03c:	cmp	x0, #0x0
  41d040:	b.eq	41d04c <wcrtomb@plt+0x1833c>  // b.none
  41d044:	ldr	x0, [sp, #40]
  41d048:	b	41d054 <wcrtomb@plt+0x18344>
  41d04c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41d050:	add	x0, x0, #0xd58
  41d054:	ldp	x29, x30, [sp], #48
  41d058:	ret
  41d05c:	stp	x29, x30, [sp, #-144]!
  41d060:	mov	x29, sp
  41d064:	str	x0, [sp, #40]
  41d068:	str	x1, [sp, #32]
  41d06c:	str	x2, [sp, #24]
  41d070:	ldr	x0, [sp, #32]
  41d074:	ldrb	w0, [x0]
  41d078:	cmp	w0, #0x0
  41d07c:	b.eq	41d0a0 <wcrtomb@plt+0x18390>  // b.none
  41d080:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d084:	add	x0, x0, #0x3e8
  41d088:	ldrb	w0, [x0]
  41d08c:	mov	w2, w0
  41d090:	mov	w1, #0x0                   	// #0
  41d094:	ldr	x0, [sp, #32]
  41d098:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41d09c:	b	41d0a4 <wcrtomb@plt+0x18394>
  41d0a0:	ldr	x0, [sp, #32]
  41d0a4:	str	x0, [sp, #136]
  41d0a8:	ldr	x0, [sp, #40]
  41d0ac:	str	x0, [sp, #128]
  41d0b0:	ldr	x0, [sp, #128]
  41d0b4:	str	x0, [sp, #120]
  41d0b8:	ldr	x0, [sp, #120]
  41d0bc:	ldr	x1, [x0, #32]
  41d0c0:	ldr	x0, [sp, #120]
  41d0c4:	ldr	x0, [x0, #24]
  41d0c8:	sub	x0, x1, x0
  41d0cc:	cmp	x0, #0x0
  41d0d0:	b.ne	41d0e0 <wcrtomb@plt+0x183d0>  // b.any
  41d0d4:	mov	x1, #0x1                   	// #1
  41d0d8:	ldr	x0, [sp, #128]
  41d0dc:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d0e0:	ldr	x0, [sp, #128]
  41d0e4:	ldr	x0, [x0, #24]
  41d0e8:	add	x2, x0, #0x1
  41d0ec:	ldr	x1, [sp, #128]
  41d0f0:	str	x2, [x1, #24]
  41d0f4:	mov	w1, #0x52                  	// #82
  41d0f8:	strb	w1, [x0]
  41d0fc:	ldr	x0, [sp, #40]
  41d100:	str	x0, [sp, #112]
  41d104:	ldr	x0, [sp, #136]
  41d108:	bl	4040b0 <strlen@plt>
  41d10c:	add	x0, x0, #0x1
  41d110:	str	x0, [sp, #104]
  41d114:	ldr	x0, [sp, #112]
  41d118:	str	x0, [sp, #96]
  41d11c:	ldr	x0, [sp, #96]
  41d120:	ldr	x1, [x0, #32]
  41d124:	ldr	x0, [sp, #96]
  41d128:	ldr	x0, [x0, #24]
  41d12c:	sub	x0, x1, x0
  41d130:	mov	x1, x0
  41d134:	ldr	x0, [sp, #104]
  41d138:	cmp	x1, x0
  41d13c:	b.cs	41d14c <wcrtomb@plt+0x1843c>  // b.hs, b.nlast
  41d140:	ldr	x1, [sp, #104]
  41d144:	ldr	x0, [sp, #112]
  41d148:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d14c:	ldr	x0, [sp, #112]
  41d150:	ldr	x0, [x0, #24]
  41d154:	ldr	x2, [sp, #104]
  41d158:	ldr	x1, [sp, #136]
  41d15c:	bl	404020 <memcpy@plt>
  41d160:	ldr	x0, [sp, #112]
  41d164:	ldr	x1, [x0, #24]
  41d168:	ldr	x0, [sp, #104]
  41d16c:	add	x1, x1, x0
  41d170:	ldr	x0, [sp, #112]
  41d174:	str	x1, [x0, #24]
  41d178:	ldr	x0, [sp, #24]
  41d17c:	ldrb	w0, [x0]
  41d180:	cmp	w0, #0x0
  41d184:	b.eq	41d1a8 <wcrtomb@plt+0x18498>  // b.none
  41d188:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d18c:	add	x0, x0, #0x3e8
  41d190:	ldrb	w0, [x0]
  41d194:	mov	w2, w0
  41d198:	mov	w1, #0x0                   	// #0
  41d19c:	ldr	x0, [sp, #24]
  41d1a0:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41d1a4:	b	41d1ac <wcrtomb@plt+0x1849c>
  41d1a8:	ldr	x0, [sp, #24]
  41d1ac:	str	x0, [sp, #136]
  41d1b0:	ldr	x0, [sp, #40]
  41d1b4:	str	x0, [sp, #88]
  41d1b8:	ldr	x0, [sp, #88]
  41d1bc:	str	x0, [sp, #80]
  41d1c0:	ldr	x0, [sp, #80]
  41d1c4:	ldr	x1, [x0, #32]
  41d1c8:	ldr	x0, [sp, #80]
  41d1cc:	ldr	x0, [x0, #24]
  41d1d0:	sub	x0, x1, x0
  41d1d4:	cmp	x0, #0x0
  41d1d8:	b.ne	41d1e8 <wcrtomb@plt+0x184d8>  // b.any
  41d1dc:	mov	x1, #0x1                   	// #1
  41d1e0:	ldr	x0, [sp, #88]
  41d1e4:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d1e8:	ldr	x0, [sp, #88]
  41d1ec:	ldr	x0, [x0, #24]
  41d1f0:	add	x2, x0, #0x1
  41d1f4:	ldr	x1, [sp, #88]
  41d1f8:	str	x2, [x1, #24]
  41d1fc:	mov	w1, #0x54                  	// #84
  41d200:	strb	w1, [x0]
  41d204:	ldr	x0, [sp, #40]
  41d208:	str	x0, [sp, #72]
  41d20c:	ldr	x0, [sp, #136]
  41d210:	bl	4040b0 <strlen@plt>
  41d214:	add	x0, x0, #0x1
  41d218:	str	x0, [sp, #64]
  41d21c:	ldr	x0, [sp, #72]
  41d220:	str	x0, [sp, #56]
  41d224:	ldr	x0, [sp, #56]
  41d228:	ldr	x1, [x0, #32]
  41d22c:	ldr	x0, [sp, #56]
  41d230:	ldr	x0, [x0, #24]
  41d234:	sub	x0, x1, x0
  41d238:	mov	x1, x0
  41d23c:	ldr	x0, [sp, #64]
  41d240:	cmp	x1, x0
  41d244:	b.cs	41d254 <wcrtomb@plt+0x18544>  // b.hs, b.nlast
  41d248:	ldr	x1, [sp, #64]
  41d24c:	ldr	x0, [sp, #72]
  41d250:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d254:	ldr	x0, [sp, #72]
  41d258:	ldr	x0, [x0, #24]
  41d25c:	ldr	x2, [sp, #64]
  41d260:	ldr	x1, [sp, #136]
  41d264:	bl	404020 <memcpy@plt>
  41d268:	ldr	x0, [sp, #72]
  41d26c:	ldr	x1, [x0, #24]
  41d270:	ldr	x0, [sp, #64]
  41d274:	add	x1, x1, x0
  41d278:	ldr	x0, [sp, #72]
  41d27c:	str	x1, [x0, #24]
  41d280:	nop
  41d284:	ldp	x29, x30, [sp], #144
  41d288:	ret
  41d28c:	stp	x29, x30, [sp, #-96]!
  41d290:	mov	x29, sp
  41d294:	str	x0, [sp, #24]
  41d298:	str	x1, [sp, #16]
  41d29c:	ldr	x0, [sp, #24]
  41d2a0:	ldr	w0, [x0, #60]
  41d2a4:	and	w0, w0, #0x10
  41d2a8:	cmp	w0, #0x0
  41d2ac:	b.eq	41d4d8 <wcrtomb@plt+0x187c8>  // b.none
  41d2b0:	ldr	x0, [sp, #24]
  41d2b4:	str	x0, [sp, #88]
  41d2b8:	b	41d2dc <wcrtomb@plt+0x185cc>
  41d2bc:	ldr	x0, [sp, #88]
  41d2c0:	ldr	w0, [x0, #60]
  41d2c4:	and	w1, w0, #0xffffffef
  41d2c8:	ldr	x0, [sp, #88]
  41d2cc:	str	w1, [x0, #60]
  41d2d0:	ldr	x0, [sp, #88]
  41d2d4:	ldr	x0, [x0, #64]
  41d2d8:	str	x0, [sp, #88]
  41d2dc:	ldr	x0, [sp, #88]
  41d2e0:	cmp	x0, #0x0
  41d2e4:	b.eq	41d2fc <wcrtomb@plt+0x185ec>  // b.none
  41d2e8:	ldr	x0, [sp, #88]
  41d2ec:	ldr	x0, [x0, #64]
  41d2f0:	ldr	x1, [sp, #24]
  41d2f4:	cmp	x1, x0
  41d2f8:	b.ne	41d2bc <wcrtomb@plt+0x185ac>  // b.any
  41d2fc:	ldr	x0, [sp, #88]
  41d300:	cmp	x0, #0x0
  41d304:	b.ne	41d360 <wcrtomb@plt+0x18650>  // b.any
  41d308:	ldr	x0, [sp, #24]
  41d30c:	str	x0, [sp, #80]
  41d310:	b	41d340 <wcrtomb@plt+0x18630>
  41d314:	ldr	x0, [sp, #80]
  41d318:	ldr	x0, [x0, #64]
  41d31c:	ldr	x1, [x0, #88]
  41d320:	ldr	x0, [sp, #80]
  41d324:	ldr	x0, [x0, #88]
  41d328:	mov	x2, x0
  41d32c:	ldr	x0, [sp, #16]
  41d330:	bl	41d05c <wcrtomb@plt+0x1834c>
  41d334:	ldr	x0, [sp, #80]
  41d338:	ldr	x0, [x0, #64]
  41d33c:	str	x0, [sp, #80]
  41d340:	ldr	x0, [sp, #80]
  41d344:	cmp	x0, #0x0
  41d348:	b.eq	41d4d8 <wcrtomb@plt+0x187c8>  // b.none
  41d34c:	ldr	x0, [sp, #80]
  41d350:	ldr	x0, [x0, #64]
  41d354:	cmp	x0, #0x0
  41d358:	b.ne	41d314 <wcrtomb@plt+0x18604>  // b.any
  41d35c:	b	41d4d8 <wcrtomb@plt+0x187c8>
  41d360:	ldr	x0, [sp, #88]
  41d364:	ldr	w0, [x0, #60]
  41d368:	and	w1, w0, #0xffffffef
  41d36c:	ldr	x0, [sp, #88]
  41d370:	str	w1, [x0, #60]
  41d374:	ldr	x0, [sp, #24]
  41d378:	ldr	x0, [x0, #88]
  41d37c:	bl	449ecc <argp_usage@@Base+0xde0>
  41d380:	str	x0, [sp, #72]
  41d384:	ldr	x0, [sp, #16]
  41d388:	str	x0, [sp, #64]
  41d38c:	ldr	x0, [sp, #64]
  41d390:	str	x0, [sp, #56]
  41d394:	ldr	x0, [sp, #56]
  41d398:	ldr	x1, [x0, #32]
  41d39c:	ldr	x0, [sp, #56]
  41d3a0:	ldr	x0, [x0, #24]
  41d3a4:	sub	x0, x1, x0
  41d3a8:	cmp	x0, #0x0
  41d3ac:	b.ne	41d3bc <wcrtomb@plt+0x186ac>  // b.any
  41d3b0:	mov	x1, #0x1                   	// #1
  41d3b4:	ldr	x0, [sp, #64]
  41d3b8:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d3bc:	ldr	x0, [sp, #64]
  41d3c0:	ldr	x0, [x0, #24]
  41d3c4:	add	x2, x0, #0x1
  41d3c8:	ldr	x1, [sp, #64]
  41d3cc:	str	x2, [x1, #24]
  41d3d0:	mov	w1, #0x58                  	// #88
  41d3d4:	strb	w1, [x0]
  41d3d8:	ldr	x0, [sp, #16]
  41d3dc:	str	x0, [sp, #48]
  41d3e0:	ldr	x0, [sp, #72]
  41d3e4:	bl	4040b0 <strlen@plt>
  41d3e8:	add	x0, x0, #0x1
  41d3ec:	str	x0, [sp, #40]
  41d3f0:	ldr	x0, [sp, #48]
  41d3f4:	str	x0, [sp, #32]
  41d3f8:	ldr	x0, [sp, #32]
  41d3fc:	ldr	x1, [x0, #32]
  41d400:	ldr	x0, [sp, #32]
  41d404:	ldr	x0, [x0, #24]
  41d408:	sub	x0, x1, x0
  41d40c:	mov	x1, x0
  41d410:	ldr	x0, [sp, #40]
  41d414:	cmp	x1, x0
  41d418:	b.cs	41d428 <wcrtomb@plt+0x18718>  // b.hs, b.nlast
  41d41c:	ldr	x1, [sp, #40]
  41d420:	ldr	x0, [sp, #48]
  41d424:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d428:	ldr	x0, [sp, #48]
  41d42c:	ldr	x0, [x0, #24]
  41d430:	ldr	x2, [sp, #40]
  41d434:	ldr	x1, [sp, #72]
  41d438:	bl	404020 <memcpy@plt>
  41d43c:	ldr	x0, [sp, #48]
  41d440:	ldr	x1, [x0, #24]
  41d444:	ldr	x0, [sp, #40]
  41d448:	add	x1, x1, x0
  41d44c:	ldr	x0, [sp, #48]
  41d450:	str	x1, [x0, #24]
  41d454:	ldr	x0, [sp, #24]
  41d458:	ldr	x1, [x0, #88]
  41d45c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41d460:	add	x2, x0, #0xc88
  41d464:	ldr	x0, [sp, #16]
  41d468:	bl	41d05c <wcrtomb@plt+0x1834c>
  41d46c:	ldr	x0, [sp, #24]
  41d470:	str	x0, [sp, #80]
  41d474:	b	41d4a4 <wcrtomb@plt+0x18794>
  41d478:	ldr	x0, [sp, #80]
  41d47c:	ldr	x0, [x0, #64]
  41d480:	ldr	x1, [x0, #88]
  41d484:	ldr	x0, [sp, #80]
  41d488:	ldr	x0, [x0, #88]
  41d48c:	mov	x2, x0
  41d490:	ldr	x0, [sp, #16]
  41d494:	bl	41d05c <wcrtomb@plt+0x1834c>
  41d498:	ldr	x0, [sp, #80]
  41d49c:	ldr	x0, [x0, #64]
  41d4a0:	str	x0, [sp, #80]
  41d4a4:	ldr	x1, [sp, #80]
  41d4a8:	ldr	x0, [sp, #88]
  41d4ac:	cmp	x1, x0
  41d4b0:	b.ne	41d478 <wcrtomb@plt+0x18768>  // b.any
  41d4b4:	ldr	x0, [sp, #88]
  41d4b8:	ldr	x0, [x0, #88]
  41d4bc:	mov	x2, x0
  41d4c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41d4c4:	add	x1, x0, #0xc88
  41d4c8:	ldr	x0, [sp, #16]
  41d4cc:	bl	41d05c <wcrtomb@plt+0x1834c>
  41d4d0:	ldr	x0, [sp, #72]
  41d4d4:	bl	404880 <free@plt>
  41d4d8:	nop
  41d4dc:	ldp	x29, x30, [sp], #96
  41d4e0:	ret
  41d4e4:	stp	x29, x30, [sp, #-224]!
  41d4e8:	mov	x29, sp
  41d4ec:	str	x0, [sp, #24]
  41d4f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41d4f4:	add	x0, x0, #0x8d0
  41d4f8:	ldr	x0, [x0]
  41d4fc:	cmp	x0, #0x0
  41d500:	b.eq	41d7d4 <wcrtomb@plt+0x18ac4>  // b.none
  41d504:	add	x5, sp, #0x20
  41d508:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  41d50c:	add	x4, x0, #0x880
  41d510:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  41d514:	add	x3, x0, #0x6a4
  41d518:	mov	x2, #0x0                   	// #0
  41d51c:	mov	x1, #0x0                   	// #0
  41d520:	mov	x0, x5
  41d524:	bl	45ccf8 <_obstack_begin@@Base>
  41d528:	ldr	x0, [sp, #24]
  41d52c:	bl	41cfd8 <wcrtomb@plt+0x182c8>
  41d530:	str	x0, [sp, #200]
  41d534:	ldr	x0, [sp, #200]
  41d538:	cmp	x0, #0x0
  41d53c:	b.eq	41d5c8 <wcrtomb@plt+0x188b8>  // b.none
  41d540:	ldr	x0, [sp, #200]
  41d544:	bl	41b848 <wcrtomb@plt+0x16b38>
  41d548:	sub	x0, x0, #0x1
  41d54c:	str	x0, [sp, #216]
  41d550:	add	x0, sp, #0x20
  41d554:	str	x0, [sp, #192]
  41d558:	ldr	x0, [sp, #216]
  41d55c:	str	x0, [sp, #184]
  41d560:	ldr	x0, [sp, #192]
  41d564:	str	x0, [sp, #176]
  41d568:	ldr	x0, [sp, #176]
  41d56c:	ldr	x1, [x0, #32]
  41d570:	ldr	x0, [sp, #176]
  41d574:	ldr	x0, [x0, #24]
  41d578:	sub	x0, x1, x0
  41d57c:	mov	x1, x0
  41d580:	ldr	x0, [sp, #184]
  41d584:	cmp	x1, x0
  41d588:	b.cs	41d598 <wcrtomb@plt+0x18888>  // b.hs, b.nlast
  41d58c:	ldr	x1, [sp, #184]
  41d590:	ldr	x0, [sp, #192]
  41d594:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d598:	ldr	x0, [sp, #192]
  41d59c:	ldr	x0, [x0, #24]
  41d5a0:	ldr	x2, [sp, #184]
  41d5a4:	ldr	x1, [sp, #200]
  41d5a8:	bl	404020 <memcpy@plt>
  41d5ac:	ldr	x0, [sp, #192]
  41d5b0:	ldr	x1, [x0, #24]
  41d5b4:	ldr	x0, [sp, #184]
  41d5b8:	add	x1, x1, x0
  41d5bc:	ldr	x0, [sp, #192]
  41d5c0:	str	x1, [x0, #24]
  41d5c4:	b	41d5cc <wcrtomb@plt+0x188bc>
  41d5c8:	str	xzr, [sp, #216]
  41d5cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41d5d0:	add	x0, x0, #0x8d0
  41d5d4:	ldr	x0, [x0]
  41d5d8:	str	x0, [sp, #208]
  41d5dc:	b	41d5fc <wcrtomb@plt+0x188ec>
  41d5e0:	add	x0, sp, #0x20
  41d5e4:	mov	x1, x0
  41d5e8:	ldr	x0, [sp, #208]
  41d5ec:	bl	41d28c <wcrtomb@plt+0x1857c>
  41d5f0:	ldr	x0, [sp, #208]
  41d5f4:	ldr	x0, [x0]
  41d5f8:	str	x0, [sp, #208]
  41d5fc:	ldr	x0, [sp, #208]
  41d600:	cmp	x0, #0x0
  41d604:	b.ne	41d5e0 <wcrtomb@plt+0x188d0>  // b.any
  41d608:	ldr	x0, [sp, #24]
  41d60c:	cmp	x0, #0x0
  41d610:	b.eq	41d770 <wcrtomb@plt+0x18a60>  // b.none
  41d614:	add	x0, sp, #0x20
  41d618:	str	x0, [sp, #168]
  41d61c:	ldr	x0, [sp, #168]
  41d620:	ldr	x1, [x0, #24]
  41d624:	ldr	x0, [sp, #168]
  41d628:	ldr	x0, [x0, #16]
  41d62c:	sub	x0, x1, x0
  41d630:	mov	x1, x0
  41d634:	ldr	x0, [sp, #216]
  41d638:	cmp	x1, x0
  41d63c:	b.eq	41d770 <wcrtomb@plt+0x18a60>  // b.none
  41d640:	add	x0, sp, #0x20
  41d644:	str	x0, [sp, #160]
  41d648:	ldr	x0, [sp, #160]
  41d64c:	str	x0, [sp, #152]
  41d650:	ldr	x0, [sp, #152]
  41d654:	ldr	x1, [x0, #32]
  41d658:	ldr	x0, [sp, #152]
  41d65c:	ldr	x0, [x0, #24]
  41d660:	sub	x0, x1, x0
  41d664:	cmp	x0, #0x0
  41d668:	b.ne	41d678 <wcrtomb@plt+0x18968>  // b.any
  41d66c:	mov	x1, #0x1                   	// #1
  41d670:	ldr	x0, [sp, #160]
  41d674:	bl	45cdc0 <_obstack_newchunk@@Base>
  41d678:	ldr	x0, [sp, #160]
  41d67c:	ldr	x0, [x0, #24]
  41d680:	add	x2, x0, #0x1
  41d684:	ldr	x1, [sp, #160]
  41d688:	str	x2, [x1, #24]
  41d68c:	strb	wzr, [x0]
  41d690:	ldr	x0, [sp, #24]
  41d694:	ldr	x0, [x0, #40]
  41d698:	bl	41b620 <wcrtomb@plt+0x16910>
  41d69c:	add	x0, sp, #0x20
  41d6a0:	str	x0, [sp, #144]
  41d6a4:	ldr	x0, [sp, #144]
  41d6a8:	ldr	x0, [x0, #16]
  41d6ac:	str	x0, [sp, #136]
  41d6b0:	ldr	x0, [sp, #144]
  41d6b4:	ldr	x0, [x0, #24]
  41d6b8:	ldr	x1, [sp, #136]
  41d6bc:	cmp	x1, x0
  41d6c0:	b.ne	41d6d4 <wcrtomb@plt+0x189c4>  // b.any
  41d6c4:	ldr	x0, [sp, #144]
  41d6c8:	ldrb	w1, [x0, #80]
  41d6cc:	orr	w1, w1, #0x2
  41d6d0:	strb	w1, [x0, #80]
  41d6d4:	ldr	x0, [sp, #144]
  41d6d8:	ldr	x0, [x0, #24]
  41d6dc:	mov	x1, x0
  41d6e0:	ldr	x0, [sp, #144]
  41d6e4:	ldr	x0, [x0, #48]
  41d6e8:	add	x1, x1, x0
  41d6ec:	ldr	x0, [sp, #144]
  41d6f0:	ldr	x0, [x0, #48]
  41d6f4:	mvn	x0, x0
  41d6f8:	and	x0, x1, x0
  41d6fc:	mov	x1, x0
  41d700:	ldr	x0, [sp, #144]
  41d704:	str	x1, [x0, #24]
  41d708:	ldr	x0, [sp, #144]
  41d70c:	ldr	x1, [x0, #24]
  41d710:	ldr	x0, [sp, #144]
  41d714:	ldr	x0, [x0, #8]
  41d718:	sub	x0, x1, x0
  41d71c:	mov	x2, x0
  41d720:	ldr	x0, [sp, #144]
  41d724:	ldr	x1, [x0, #32]
  41d728:	ldr	x0, [sp, #144]
  41d72c:	ldr	x0, [x0, #8]
  41d730:	sub	x0, x1, x0
  41d734:	cmp	x2, x0
  41d738:	b.ls	41d74c <wcrtomb@plt+0x18a3c>  // b.plast
  41d73c:	ldr	x0, [sp, #144]
  41d740:	ldr	x1, [x0, #32]
  41d744:	ldr	x0, [sp, #144]
  41d748:	str	x1, [x0, #24]
  41d74c:	ldr	x0, [sp, #144]
  41d750:	ldr	x1, [x0, #24]
  41d754:	ldr	x0, [sp, #144]
  41d758:	str	x1, [x0, #16]
  41d75c:	ldr	x0, [sp, #136]
  41d760:	bl	41b5fc <wcrtomb@plt+0x168ec>
  41d764:	mov	x1, x0
  41d768:	ldr	x0, [sp, #24]
  41d76c:	str	x1, [x0, #40]
  41d770:	add	x0, sp, #0x20
  41d774:	str	x0, [sp, #128]
  41d778:	str	xzr, [sp, #120]
  41d77c:	ldr	x0, [sp, #128]
  41d780:	ldr	x0, [x0, #8]
  41d784:	ldr	x1, [sp, #120]
  41d788:	cmp	x1, x0
  41d78c:	b.ls	41d7c4 <wcrtomb@plt+0x18ab4>  // b.plast
  41d790:	ldr	x0, [sp, #128]
  41d794:	ldr	x0, [x0, #32]
  41d798:	ldr	x1, [sp, #120]
  41d79c:	cmp	x1, x0
  41d7a0:	b.cs	41d7c4 <wcrtomb@plt+0x18ab4>  // b.hs, b.nlast
  41d7a4:	ldr	x0, [sp, #128]
  41d7a8:	ldr	x1, [sp, #120]
  41d7ac:	str	x1, [x0, #16]
  41d7b0:	ldr	x0, [sp, #128]
  41d7b4:	ldr	x1, [x0, #16]
  41d7b8:	ldr	x0, [sp, #128]
  41d7bc:	str	x1, [x0, #24]
  41d7c0:	b	41d7d8 <wcrtomb@plt+0x18ac8>
  41d7c4:	ldr	x1, [sp, #120]
  41d7c8:	ldr	x0, [sp, #128]
  41d7cc:	bl	45d05c <_obstack_free@@Base>
  41d7d0:	b	41d7d8 <wcrtomb@plt+0x18ac8>
  41d7d4:	nop
  41d7d8:	ldp	x29, x30, [sp], #224
  41d7dc:	ret
  41d7e0:	stp	x29, x30, [sp, #-144]!
  41d7e4:	mov	x29, sp
  41d7e8:	stp	x19, x20, [sp, #16]
  41d7ec:	str	w0, [sp, #44]
  41d7f0:	str	x1, [sp, #32]
  41d7f4:	str	xzr, [sp, #80]
  41d7f8:	str	xzr, [sp, #72]
  41d7fc:	mov	x0, #0x1                   	// #1
  41d800:	str	x0, [sp, #136]
  41d804:	ldr	w0, [sp, #44]
  41d808:	cmp	w0, #0x1
  41d80c:	b.ne	41d85c <wcrtomb@plt+0x18b4c>  // b.any
  41d810:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41d814:	add	x0, x0, #0x8f0
  41d818:	ldr	x2, [x0]
  41d81c:	add	x1, sp, #0x48
  41d820:	add	x0, sp, #0x50
  41d824:	bl	404840 <getline@plt>
  41d828:	cmp	x0, #0x0
  41d82c:	b.gt	41d84c <wcrtomb@plt+0x18b3c>
  41d830:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d834:	add	x0, x0, #0x370
  41d838:	ldr	x0, [x0]
  41d83c:	bl	43a684 <wcrtomb@plt+0x35974>
  41d840:	ldr	x0, [sp, #80]
  41d844:	bl	404880 <free@plt>
  41d848:	b	41de80 <wcrtomb@plt+0x19170>
  41d84c:	ldr	x0, [sp, #136]
  41d850:	add	x0, x0, #0x1
  41d854:	str	x0, [sp, #136]
  41d858:	b	41d878 <wcrtomb@plt+0x18b68>
  41d85c:	ldr	x0, [sp, #32]
  41d860:	bl	404620 <strdup@plt>
  41d864:	str	x0, [sp, #80]
  41d868:	ldr	x0, [sp, #80]
  41d86c:	bl	4040b0 <strlen@plt>
  41d870:	add	x0, x0, #0x1
  41d874:	str	x0, [sp, #72]
  41d878:	ldr	x0, [sp, #80]
  41d87c:	add	x1, sp, #0x40
  41d880:	mov	w2, #0x0                   	// #0
  41d884:	bl	424a60 <wcrtomb@plt+0x1fd50>
  41d888:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d88c:	add	x2, x2, #0x58
  41d890:	stp	x0, x1, [x2]
  41d894:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d898:	add	x0, x0, #0x58
  41d89c:	ldp	x0, x1, [x0]
  41d8a0:	bl	423cbc <wcrtomb@plt+0x1efac>
  41d8a4:	and	w0, w0, #0xff
  41d8a8:	eor	w0, w0, #0x1
  41d8ac:	and	w0, w0, #0xff
  41d8b0:	cmp	w0, #0x0
  41d8b4:	b.eq	41d928 <wcrtomb@plt+0x18c18>  // b.none
  41d8b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d8bc:	add	x0, x0, #0x420
  41d8c0:	ldr	x0, [x0]
  41d8c4:	cmp	x0, #0x0
  41d8c8:	b.eq	41d8dc <wcrtomb@plt+0x18bcc>  // b.none
  41d8cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d8d0:	add	x0, x0, #0x420
  41d8d4:	ldr	x0, [x0]
  41d8d8:	blr	x0
  41d8dc:	bl	404bc0 <__errno_location@plt>
  41d8e0:	ldr	w19, [x0]
  41d8e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d8e8:	add	x0, x0, #0x370
  41d8ec:	ldr	x0, [x0]
  41d8f0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41d8f4:	mov	x20, x0
  41d8f8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41d8fc:	add	x0, x0, #0xd60
  41d900:	bl	404c60 <gettext@plt>
  41d904:	mov	x5, x0
  41d908:	ldr	x4, [sp, #136]
  41d90c:	mov	x3, x20
  41d910:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41d914:	add	x2, x0, #0xd78
  41d918:	mov	w1, w19
  41d91c:	mov	w0, #0x0                   	// #0
  41d920:	bl	404100 <error@plt>
  41d924:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41d928:	ldr	w0, [sp, #44]
  41d92c:	cmp	w0, #0x1
  41d930:	b.ne	41de50 <wcrtomb@plt+0x19140>  // b.any
  41d934:	ldr	x0, [sp, #64]
  41d938:	ldrb	w0, [x0]
  41d93c:	cmp	w0, #0x0
  41d940:	b.eq	41de50 <wcrtomb@plt+0x19140>  // b.none
  41d944:	ldr	x0, [sp, #64]
  41d948:	add	x0, x0, #0x1
  41d94c:	str	x0, [sp, #120]
  41d950:	bl	404bc0 <__errno_location@plt>
  41d954:	str	wzr, [x0]
  41d958:	add	x0, sp, #0x40
  41d95c:	mov	w2, #0xa                   	// #10
  41d960:	mov	x1, x0
  41d964:	ldr	x0, [sp, #120]
  41d968:	bl	4046e0 <strtoumax@plt>
  41d96c:	str	x0, [sp, #112]
  41d970:	bl	404bc0 <__errno_location@plt>
  41d974:	ldr	w0, [x0]
  41d978:	cmp	w0, #0x0
  41d97c:	b.ne	41d9a4 <wcrtomb@plt+0x18c94>  // b.any
  41d980:	ldr	x1, [sp, #112]
  41d984:	mov	x0, #0xc9ff                	// #51711
  41d988:	movk	x0, #0x3b9a, lsl #16
  41d98c:	cmp	x1, x0
  41d990:	b.ls	41d9a4 <wcrtomb@plt+0x18c94>  // b.plast
  41d994:	bl	404bc0 <__errno_location@plt>
  41d998:	mov	x1, x0
  41d99c:	mov	w0, #0x22                  	// #34
  41d9a0:	str	w0, [x1]
  41d9a4:	bl	404bc0 <__errno_location@plt>
  41d9a8:	ldr	w0, [x0]
  41d9ac:	cmp	w0, #0x0
  41d9b0:	b.ne	41d9c4 <wcrtomb@plt+0x18cb4>  // b.any
  41d9b4:	ldr	x0, [sp, #64]
  41d9b8:	ldr	x1, [sp, #120]
  41d9bc:	cmp	x1, x0
  41d9c0:	b.ne	41da64 <wcrtomb@plt+0x18d54>  // b.any
  41d9c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d9c8:	add	x0, x0, #0x420
  41d9cc:	ldr	x0, [x0]
  41d9d0:	cmp	x0, #0x0
  41d9d4:	b.eq	41d9e8 <wcrtomb@plt+0x18cd8>  // b.none
  41d9d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d9dc:	add	x0, x0, #0x420
  41d9e0:	ldr	x0, [x0]
  41d9e4:	blr	x0
  41d9e8:	bl	404bc0 <__errno_location@plt>
  41d9ec:	ldr	w19, [x0]
  41d9f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41d9f4:	add	x0, x0, #0x370
  41d9f8:	ldr	x0, [x0]
  41d9fc:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41da00:	mov	x20, x0
  41da04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41da08:	add	x0, x0, #0xd60
  41da0c:	bl	404c60 <gettext@plt>
  41da10:	mov	x5, x0
  41da14:	ldr	x4, [sp, #136]
  41da18:	mov	x3, x20
  41da1c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41da20:	add	x2, x0, #0xd78
  41da24:	mov	w1, w19
  41da28:	mov	w0, #0x0                   	// #0
  41da2c:	bl	404100 <error@plt>
  41da30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41da34:	add	x0, x0, #0xdb0
  41da38:	mov	w1, #0x2                   	// #2
  41da3c:	str	w1, [x0]
  41da40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41da44:	add	x0, x0, #0x58
  41da48:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41da4c:	str	x1, [x0]
  41da50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41da54:	add	x0, x0, #0x58
  41da58:	mov	x1, #0xffffffffffffffff    	// #-1
  41da5c:	str	x1, [x0, #8]
  41da60:	b	41da74 <wcrtomb@plt+0x18d64>
  41da64:	ldr	x1, [sp, #112]
  41da68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41da6c:	add	x0, x0, #0x58
  41da70:	str	x1, [x0, #8]
  41da74:	b	41de50 <wcrtomb@plt+0x19140>
  41da78:	ldr	x0, [sp, #80]
  41da7c:	ldrb	w0, [x0]
  41da80:	cmp	w0, #0x2b
  41da84:	cset	w0, eq  // eq = none
  41da88:	strb	w0, [sp, #107]
  41da8c:	ldr	x1, [sp, #80]
  41da90:	ldrb	w0, [sp, #107]
  41da94:	add	x0, x1, x0
  41da98:	str	x0, [sp, #128]
  41da9c:	ldr	x0, [sp, #136]
  41daa0:	add	x0, x0, #0x1
  41daa4:	str	x0, [sp, #136]
  41daa8:	ldr	x1, [sp, #80]
  41daac:	ldrsw	x0, [sp, #108]
  41dab0:	sub	x0, x0, #0x1
  41dab4:	add	x0, x1, x0
  41dab8:	ldrb	w0, [x0]
  41dabc:	cmp	w0, #0xa
  41dac0:	b.ne	41dad8 <wcrtomb@plt+0x18dc8>  // b.any
  41dac4:	ldr	x1, [sp, #80]
  41dac8:	ldrsw	x0, [sp, #108]
  41dacc:	sub	x0, x0, #0x1
  41dad0:	add	x0, x1, x0
  41dad4:	strb	wzr, [x0]
  41dad8:	ldr	w0, [sp, #44]
  41dadc:	cmp	w0, #0x1
  41dae0:	b.ne	41dca8 <wcrtomb@plt+0x18f98>  // b.any
  41dae4:	add	x0, sp, #0x40
  41dae8:	mov	w2, #0x0                   	// #0
  41daec:	mov	x1, x0
  41daf0:	ldr	x0, [sp, #128]
  41daf4:	bl	424a60 <wcrtomb@plt+0x1fd50>
  41daf8:	stp	x0, x1, [sp, #48]
  41dafc:	ldr	x0, [sp, #64]
  41db00:	str	x0, [sp, #128]
  41db04:	ldp	x0, x1, [sp, #48]
  41db08:	bl	423cbc <wcrtomb@plt+0x1efac>
  41db0c:	and	w0, w0, #0xff
  41db10:	eor	w0, w0, #0x1
  41db14:	and	w0, w0, #0xff
  41db18:	cmp	w0, #0x0
  41db1c:	b.ne	41db30 <wcrtomb@plt+0x18e20>  // b.any
  41db20:	ldr	x0, [sp, #128]
  41db24:	ldrb	w0, [x0]
  41db28:	cmp	w0, #0x20
  41db2c:	b.eq	41dba0 <wcrtomb@plt+0x18e90>  // b.none
  41db30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41db34:	add	x0, x0, #0x420
  41db38:	ldr	x0, [x0]
  41db3c:	cmp	x0, #0x0
  41db40:	b.eq	41db54 <wcrtomb@plt+0x18e44>  // b.none
  41db44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41db48:	add	x0, x0, #0x420
  41db4c:	ldr	x0, [x0]
  41db50:	blr	x0
  41db54:	bl	404bc0 <__errno_location@plt>
  41db58:	ldr	w19, [x0]
  41db5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41db60:	add	x0, x0, #0x370
  41db64:	ldr	x0, [x0]
  41db68:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41db6c:	mov	x20, x0
  41db70:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41db74:	add	x0, x0, #0xd88
  41db78:	bl	404c60 <gettext@plt>
  41db7c:	mov	x5, x0
  41db80:	ldr	x4, [sp, #136]
  41db84:	mov	x3, x20
  41db88:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41db8c:	add	x2, x0, #0xd78
  41db90:	mov	w1, w19
  41db94:	mov	w0, #0x0                   	// #0
  41db98:	bl	404100 <error@plt>
  41db9c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41dba0:	bl	404bc0 <__errno_location@plt>
  41dba4:	str	wzr, [x0]
  41dba8:	add	x0, sp, #0x40
  41dbac:	mov	w2, #0xa                   	// #10
  41dbb0:	mov	x1, x0
  41dbb4:	ldr	x0, [sp, #128]
  41dbb8:	bl	4046e0 <strtoumax@plt>
  41dbbc:	str	x0, [sp, #112]
  41dbc0:	bl	404bc0 <__errno_location@plt>
  41dbc4:	ldr	w0, [x0]
  41dbc8:	cmp	w0, #0x0
  41dbcc:	b.ne	41dbf4 <wcrtomb@plt+0x18ee4>  // b.any
  41dbd0:	ldr	x1, [sp, #112]
  41dbd4:	mov	x0, #0xc9ff                	// #51711
  41dbd8:	movk	x0, #0x3b9a, lsl #16
  41dbdc:	cmp	x1, x0
  41dbe0:	b.ls	41dbf4 <wcrtomb@plt+0x18ee4>  // b.plast
  41dbe4:	bl	404bc0 <__errno_location@plt>
  41dbe8:	mov	x1, x0
  41dbec:	mov	w0, #0x22                  	// #34
  41dbf0:	str	w0, [x1]
  41dbf4:	bl	404bc0 <__errno_location@plt>
  41dbf8:	ldr	w0, [x0]
  41dbfc:	cmp	w0, #0x0
  41dc00:	b.ne	41dc24 <wcrtomb@plt+0x18f14>  // b.any
  41dc04:	ldr	x0, [sp, #64]
  41dc08:	ldr	x1, [sp, #128]
  41dc0c:	cmp	x1, x0
  41dc10:	b.eq	41dc24 <wcrtomb@plt+0x18f14>  // b.none
  41dc14:	ldr	x0, [sp, #64]
  41dc18:	ldrb	w0, [x0]
  41dc1c:	cmp	w0, #0x20
  41dc20:	b.eq	41dc94 <wcrtomb@plt+0x18f84>  // b.none
  41dc24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dc28:	add	x0, x0, #0x420
  41dc2c:	ldr	x0, [x0]
  41dc30:	cmp	x0, #0x0
  41dc34:	b.eq	41dc48 <wcrtomb@plt+0x18f38>  // b.none
  41dc38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dc3c:	add	x0, x0, #0x420
  41dc40:	ldr	x0, [x0]
  41dc44:	blr	x0
  41dc48:	bl	404bc0 <__errno_location@plt>
  41dc4c:	ldr	w19, [x0]
  41dc50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dc54:	add	x0, x0, #0x370
  41dc58:	ldr	x0, [x0]
  41dc5c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41dc60:	mov	x20, x0
  41dc64:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41dc68:	add	x0, x0, #0xda8
  41dc6c:	bl	404c60 <gettext@plt>
  41dc70:	mov	x5, x0
  41dc74:	ldr	x4, [sp, #136]
  41dc78:	mov	x3, x20
  41dc7c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41dc80:	add	x2, x0, #0xd78
  41dc84:	mov	w1, w19
  41dc88:	mov	w0, #0x0                   	// #0
  41dc8c:	bl	404100 <error@plt>
  41dc90:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41dc94:	ldr	x0, [sp, #112]
  41dc98:	str	x0, [sp, #56]
  41dc9c:	ldr	x0, [sp, #64]
  41dca0:	str	x0, [sp, #128]
  41dca4:	b	41dcb4 <wcrtomb@plt+0x18fa4>
  41dca8:	str	xzr, [sp, #56]
  41dcac:	ldr	x0, [sp, #56]
  41dcb0:	str	x0, [sp, #48]
  41dcb4:	add	x0, sp, #0x40
  41dcb8:	mov	x3, #0xffffffffffffffff    	// #-1
  41dcbc:	mov	x2, #0x0                   	// #0
  41dcc0:	mov	x1, x0
  41dcc4:	ldr	x0, [sp, #128]
  41dcc8:	bl	4246c0 <wcrtomb@plt+0x1f9b0>
  41dccc:	str	x0, [sp, #96]
  41dcd0:	ldr	x0, [sp, #64]
  41dcd4:	str	x0, [sp, #128]
  41dcd8:	bl	404bc0 <__errno_location@plt>
  41dcdc:	ldr	w0, [x0]
  41dce0:	cmp	w0, #0x0
  41dce4:	b.ne	41dcf8 <wcrtomb@plt+0x18fe8>  // b.any
  41dce8:	ldr	x0, [sp, #128]
  41dcec:	ldrb	w0, [x0]
  41dcf0:	cmp	w0, #0x20
  41dcf4:	b.eq	41dd68 <wcrtomb@plt+0x19058>  // b.none
  41dcf8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dcfc:	add	x0, x0, #0x420
  41dd00:	ldr	x0, [x0]
  41dd04:	cmp	x0, #0x0
  41dd08:	b.eq	41dd1c <wcrtomb@plt+0x1900c>  // b.none
  41dd0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dd10:	add	x0, x0, #0x420
  41dd14:	ldr	x0, [x0]
  41dd18:	blr	x0
  41dd1c:	bl	404bc0 <__errno_location@plt>
  41dd20:	ldr	w19, [x0]
  41dd24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dd28:	add	x0, x0, #0x370
  41dd2c:	ldr	x0, [x0]
  41dd30:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41dd34:	mov	x20, x0
  41dd38:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41dd3c:	add	x0, x0, #0xdd0
  41dd40:	bl	404c60 <gettext@plt>
  41dd44:	mov	x5, x0
  41dd48:	ldr	x4, [sp, #136]
  41dd4c:	mov	x3, x20
  41dd50:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41dd54:	add	x2, x0, #0xd78
  41dd58:	mov	w1, w19
  41dd5c:	mov	w0, #0x0                   	// #0
  41dd60:	bl	404100 <error@plt>
  41dd64:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41dd68:	add	x0, sp, #0x40
  41dd6c:	mov	x3, #0xffffffffffffffff    	// #-1
  41dd70:	mov	x2, #0x0                   	// #0
  41dd74:	mov	x1, x0
  41dd78:	ldr	x0, [sp, #128]
  41dd7c:	bl	4246c0 <wcrtomb@plt+0x1f9b0>
  41dd80:	str	x0, [sp, #88]
  41dd84:	ldr	x0, [sp, #64]
  41dd88:	str	x0, [sp, #128]
  41dd8c:	bl	404bc0 <__errno_location@plt>
  41dd90:	ldr	w0, [x0]
  41dd94:	cmp	w0, #0x0
  41dd98:	b.ne	41ddac <wcrtomb@plt+0x1909c>  // b.any
  41dd9c:	ldr	x0, [sp, #128]
  41dda0:	ldrb	w0, [x0]
  41dda4:	cmp	w0, #0x20
  41dda8:	b.eq	41de1c <wcrtomb@plt+0x1910c>  // b.none
  41ddac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ddb0:	add	x0, x0, #0x420
  41ddb4:	ldr	x0, [x0]
  41ddb8:	cmp	x0, #0x0
  41ddbc:	b.eq	41ddd0 <wcrtomb@plt+0x190c0>  // b.none
  41ddc0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ddc4:	add	x0, x0, #0x420
  41ddc8:	ldr	x0, [x0]
  41ddcc:	blr	x0
  41ddd0:	bl	404bc0 <__errno_location@plt>
  41ddd4:	ldr	w19, [x0]
  41ddd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41dddc:	add	x0, x0, #0x370
  41dde0:	ldr	x0, [x0]
  41dde4:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41dde8:	mov	x20, x0
  41ddec:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41ddf0:	add	x0, x0, #0xde8
  41ddf4:	bl	404c60 <gettext@plt>
  41ddf8:	mov	x5, x0
  41ddfc:	ldr	x4, [sp, #136]
  41de00:	mov	x3, x20
  41de04:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41de08:	add	x2, x0, #0xd78
  41de0c:	mov	w1, w19
  41de10:	mov	w0, #0x0                   	// #0
  41de14:	bl	404100 <error@plt>
  41de18:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41de1c:	ldr	x0, [sp, #128]
  41de20:	add	x0, x0, #0x1
  41de24:	str	x0, [sp, #128]
  41de28:	ldr	x0, [sp, #128]
  41de2c:	bl	423de0 <wcrtomb@plt+0x1f0d0>
  41de30:	mov	x7, #0x0                   	// #0
  41de34:	mov	w6, #0x0                   	// #0
  41de38:	ldrb	w5, [sp, #107]
  41de3c:	ldr	x4, [sp, #88]
  41de40:	ldr	x3, [sp, #96]
  41de44:	ldp	x1, x2, [sp, #48]
  41de48:	ldr	x0, [sp, #128]
  41de4c:	bl	41bcc4 <wcrtomb@plt+0x16fb4>
  41de50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41de54:	add	x0, x0, #0x8f0
  41de58:	ldr	x2, [x0]
  41de5c:	add	x1, sp, #0x48
  41de60:	add	x0, sp, #0x50
  41de64:	bl	404840 <getline@plt>
  41de68:	str	w0, [sp, #108]
  41de6c:	ldr	w0, [sp, #108]
  41de70:	cmp	w0, #0x0
  41de74:	b.gt	41da78 <wcrtomb@plt+0x18d68>
  41de78:	ldr	x0, [sp, #80]
  41de7c:	bl	404880 <free@plt>
  41de80:	ldp	x19, x20, [sp, #16]
  41de84:	ldp	x29, x30, [sp], #144
  41de88:	ret
  41de8c:	stp	x29, x30, [sp, #-96]!
  41de90:	mov	x29, sp
  41de94:	str	x0, [sp, #40]
  41de98:	str	x1, [sp, #32]
  41de9c:	str	x2, [sp, #24]
  41dea0:	str	xzr, [sp, #80]
  41dea4:	ldr	x0, [sp, #40]
  41dea8:	bl	404640 <getc_unlocked@plt>
  41deac:	str	w0, [sp, #92]
  41deb0:	b	41df24 <wcrtomb@plt+0x19214>
  41deb4:	ldr	x0, [sp, #32]
  41deb8:	str	x0, [sp, #72]
  41debc:	ldr	x0, [sp, #72]
  41dec0:	str	x0, [sp, #64]
  41dec4:	ldr	x0, [sp, #64]
  41dec8:	ldr	x1, [x0, #32]
  41decc:	ldr	x0, [sp, #64]
  41ded0:	ldr	x0, [x0, #24]
  41ded4:	sub	x0, x1, x0
  41ded8:	cmp	x0, #0x0
  41dedc:	b.ne	41deec <wcrtomb@plt+0x191dc>  // b.any
  41dee0:	mov	x1, #0x1                   	// #1
  41dee4:	ldr	x0, [sp, #72]
  41dee8:	bl	45cdc0 <_obstack_newchunk@@Base>
  41deec:	ldr	x0, [sp, #72]
  41def0:	ldr	x0, [x0, #24]
  41def4:	add	x2, x0, #0x1
  41def8:	ldr	x1, [sp, #72]
  41defc:	str	x2, [x1, #24]
  41df00:	ldr	w1, [sp, #92]
  41df04:	and	w1, w1, #0xff
  41df08:	strb	w1, [x0]
  41df0c:	ldr	x0, [sp, #40]
  41df10:	bl	404640 <getc_unlocked@plt>
  41df14:	str	w0, [sp, #92]
  41df18:	ldr	x0, [sp, #80]
  41df1c:	add	x0, x0, #0x1
  41df20:	str	x0, [sp, #80]
  41df24:	ldr	w0, [sp, #92]
  41df28:	cmn	w0, #0x1
  41df2c:	b.eq	41df3c <wcrtomb@plt+0x1922c>  // b.none
  41df30:	ldr	w0, [sp, #92]
  41df34:	cmp	w0, #0x0
  41df38:	b.ne	41deb4 <wcrtomb@plt+0x191a4>  // b.any
  41df3c:	ldr	x0, [sp, #32]
  41df40:	str	x0, [sp, #56]
  41df44:	ldr	x0, [sp, #56]
  41df48:	str	x0, [sp, #48]
  41df4c:	ldr	x0, [sp, #48]
  41df50:	ldr	x1, [x0, #32]
  41df54:	ldr	x0, [sp, #48]
  41df58:	ldr	x0, [x0, #24]
  41df5c:	sub	x0, x1, x0
  41df60:	cmp	x0, #0x0
  41df64:	b.ne	41df74 <wcrtomb@plt+0x19264>  // b.any
  41df68:	mov	x1, #0x1                   	// #1
  41df6c:	ldr	x0, [sp, #56]
  41df70:	bl	45cdc0 <_obstack_newchunk@@Base>
  41df74:	ldr	x0, [sp, #56]
  41df78:	ldr	x0, [x0, #24]
  41df7c:	add	x2, x0, #0x1
  41df80:	ldr	x1, [sp, #56]
  41df84:	str	x2, [x1, #24]
  41df88:	strb	wzr, [x0]
  41df8c:	ldr	x0, [sp, #24]
  41df90:	ldr	x1, [sp, #80]
  41df94:	str	x1, [x0]
  41df98:	ldr	w0, [sp, #92]
  41df9c:	ldp	x29, x30, [sp], #96
  41dfa0:	ret
  41dfa4:	sub	sp, sp, #0xf0
  41dfa8:	stp	x29, x30, [sp, #16]
  41dfac:	add	x29, sp, #0x10
  41dfb0:	stp	x19, x20, [sp, #32]
  41dfb4:	stp	x21, x22, [sp, #48]
  41dfb8:	str	x0, [sp, #104]
  41dfbc:	str	x1, [sp, #96]
  41dfc0:	str	x2, [sp, #88]
  41dfc4:	str	x3, [sp, #80]
  41dfc8:	str	x4, [sp, #72]
  41dfcc:	ldr	x0, [sp, #104]
  41dfd0:	bl	404640 <getc_unlocked@plt>
  41dfd4:	str	w0, [sp, #232]
  41dfd8:	ldr	w0, [sp, #232]
  41dfdc:	cmp	w0, #0x2d
  41dfe0:	cset	w0, eq  // eq = none
  41dfe4:	strb	w0, [sp, #231]
  41dfe8:	str	wzr, [sp, #236]
  41dfec:	b	41e0c4 <wcrtomb@plt+0x193b4>
  41dff0:	ldr	w0, [sp, #232]
  41dff4:	and	w2, w0, #0xff
  41dff8:	ldrsw	x0, [sp, #236]
  41dffc:	add	x1, sp, #0xc0
  41e000:	strb	w2, [x1, x0]
  41e004:	ldr	w0, [sp, #236]
  41e008:	cmp	w0, #0x14
  41e00c:	b.ne	41e0ac <wcrtomb@plt+0x1939c>  // b.any
  41e010:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e014:	add	x0, x0, #0x420
  41e018:	ldr	x0, [x0]
  41e01c:	cmp	x0, #0x0
  41e020:	b.eq	41e034 <wcrtomb@plt+0x19324>  // b.none
  41e024:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e028:	add	x0, x0, #0x420
  41e02c:	ldr	x0, [x0]
  41e030:	blr	x0
  41e034:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e038:	add	x0, x0, #0xe00
  41e03c:	bl	404c60 <gettext@plt>
  41e040:	mov	x19, x0
  41e044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e048:	add	x0, x0, #0x370
  41e04c:	ldr	x0, [x0]
  41e050:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e054:	mov	x20, x0
  41e058:	ldr	x0, [sp, #104]
  41e05c:	bl	4049b0 <ftello@plt>
  41e060:	mov	x2, x0
  41e064:	add	x0, sp, #0xa8
  41e068:	mov	x1, x0
  41e06c:	mov	x0, x2
  41e070:	bl	450838 <argp_usage@@Base+0x774c>
  41e074:	mov	x2, x0
  41e078:	ldr	w0, [sp, #236]
  41e07c:	add	w0, w0, #0x1
  41e080:	add	x1, sp, #0xc0
  41e084:	mov	x7, x1
  41e088:	mov	w6, w0
  41e08c:	ldr	x5, [sp, #96]
  41e090:	mov	x4, x2
  41e094:	mov	x3, x20
  41e098:	mov	x2, x19
  41e09c:	mov	w1, #0x0                   	// #0
  41e0a0:	mov	w0, #0x0                   	// #0
  41e0a4:	bl	404100 <error@plt>
  41e0a8:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e0ac:	ldr	x0, [sp, #104]
  41e0b0:	bl	404640 <getc_unlocked@plt>
  41e0b4:	str	w0, [sp, #232]
  41e0b8:	ldr	w0, [sp, #236]
  41e0bc:	add	w0, w0, #0x1
  41e0c0:	str	w0, [sp, #236]
  41e0c4:	ldr	w0, [sp, #236]
  41e0c8:	cmp	w0, #0x0
  41e0cc:	b.ne	41e0dc <wcrtomb@plt+0x193cc>  // b.any
  41e0d0:	ldrb	w0, [sp, #231]
  41e0d4:	cmp	w0, #0x0
  41e0d8:	b.ne	41dff0 <wcrtomb@plt+0x192e0>  // b.any
  41e0dc:	ldr	w0, [sp, #232]
  41e0e0:	sub	w0, w0, #0x30
  41e0e4:	cmp	w0, #0x9
  41e0e8:	b.ls	41dff0 <wcrtomb@plt+0x192e0>  // b.plast
  41e0ec:	ldrsw	x0, [sp, #236]
  41e0f0:	add	x1, sp, #0xc0
  41e0f4:	strb	wzr, [x1, x0]
  41e0f8:	ldr	w0, [sp, #232]
  41e0fc:	cmp	w0, #0x0
  41e100:	b.ge	41e19c <wcrtomb@plt+0x1948c>  // b.tcont
  41e104:	ldr	x0, [sp, #104]
  41e108:	bl	4041e0 <ferror_unlocked@plt>
  41e10c:	cmp	w0, #0x0
  41e110:	b.eq	41e124 <wcrtomb@plt+0x19414>  // b.none
  41e114:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e118:	add	x0, x0, #0x370
  41e11c:	ldr	x0, [x0]
  41e120:	bl	43a80c <wcrtomb@plt+0x35afc>
  41e124:	ldr	w0, [sp, #236]
  41e128:	cmp	w0, #0x0
  41e12c:	b.eq	41e194 <wcrtomb@plt+0x19484>  // b.none
  41e130:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e134:	add	x0, x0, #0x420
  41e138:	ldr	x0, [x0]
  41e13c:	cmp	x0, #0x0
  41e140:	b.eq	41e154 <wcrtomb@plt+0x19444>  // b.none
  41e144:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e148:	add	x0, x0, #0x420
  41e14c:	ldr	x0, [x0]
  41e150:	blr	x0
  41e154:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e158:	add	x0, x0, #0x370
  41e15c:	ldr	x0, [x0]
  41e160:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e164:	mov	x19, x0
  41e168:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e16c:	add	x0, x0, #0xe28
  41e170:	bl	404c60 <gettext@plt>
  41e174:	mov	x4, x0
  41e178:	mov	x3, x19
  41e17c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e180:	add	x2, x0, #0xe48
  41e184:	mov	w1, #0x0                   	// #0
  41e188:	mov	w0, #0x0                   	// #0
  41e18c:	bl	404100 <error@plt>
  41e190:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e194:	mov	w0, #0x0                   	// #0
  41e198:	b	41e3e0 <wcrtomb@plt+0x196d0>
  41e19c:	ldr	w0, [sp, #232]
  41e1a0:	cmp	w0, #0x0
  41e1a4:	b.eq	41e244 <wcrtomb@plt+0x19534>  // b.none
  41e1a8:	ldr	w0, [sp, #232]
  41e1ac:	str	w0, [sp, #220]
  41e1b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e1b4:	add	x0, x0, #0x420
  41e1b8:	ldr	x0, [x0]
  41e1bc:	cmp	x0, #0x0
  41e1c0:	b.eq	41e1d4 <wcrtomb@plt+0x194c4>  // b.none
  41e1c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e1c8:	add	x0, x0, #0x420
  41e1cc:	ldr	x0, [x0]
  41e1d0:	blr	x0
  41e1d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e1d8:	add	x0, x0, #0xe50
  41e1dc:	bl	404c60 <gettext@plt>
  41e1e0:	mov	x19, x0
  41e1e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e1e8:	add	x0, x0, #0x370
  41e1ec:	ldr	x0, [x0]
  41e1f0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e1f4:	mov	x20, x0
  41e1f8:	ldr	x0, [sp, #104]
  41e1fc:	bl	4049b0 <ftello@plt>
  41e200:	mov	x2, x0
  41e204:	add	x0, sp, #0xa8
  41e208:	mov	x1, x0
  41e20c:	mov	x0, x2
  41e210:	bl	450838 <argp_usage@@Base+0x774c>
  41e214:	mov	x1, x0
  41e218:	add	x0, sp, #0xc0
  41e21c:	ldr	w7, [sp, #220]
  41e220:	mov	x6, x0
  41e224:	ldr	x5, [sp, #96]
  41e228:	mov	x4, x1
  41e22c:	mov	x3, x20
  41e230:	mov	x2, x19
  41e234:	mov	w1, #0x0                   	// #0
  41e238:	mov	w0, #0x0                   	// #0
  41e23c:	bl	404100 <error@plt>
  41e240:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e244:	add	x0, sp, #0xc0
  41e248:	ldr	x3, [sp, #80]
  41e24c:	ldr	x2, [sp, #88]
  41e250:	mov	x1, #0x0                   	// #0
  41e254:	bl	4246c0 <wcrtomb@plt+0x1f9b0>
  41e258:	mov	x1, x0
  41e25c:	ldr	x0, [sp, #72]
  41e260:	str	x1, [x0]
  41e264:	bl	404bc0 <__errno_location@plt>
  41e268:	ldr	w0, [x0]
  41e26c:	str	w0, [sp, #224]
  41e270:	ldr	w0, [sp, #224]
  41e274:	cmp	w0, #0x0
  41e278:	b.eq	41e3d8 <wcrtomb@plt+0x196c8>  // b.none
  41e27c:	ldr	w0, [sp, #224]
  41e280:	cmp	w0, #0x22
  41e284:	b.ne	41e348 <wcrtomb@plt+0x19638>  // b.any
  41e288:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e28c:	add	x0, x0, #0x420
  41e290:	ldr	x0, [x0]
  41e294:	cmp	x0, #0x0
  41e298:	b.eq	41e2ac <wcrtomb@plt+0x1959c>  // b.none
  41e29c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e2a0:	add	x0, x0, #0x420
  41e2a4:	ldr	x0, [x0]
  41e2a8:	blr	x0
  41e2ac:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e2b0:	add	x0, x0, #0xe88
  41e2b4:	bl	404c60 <gettext@plt>
  41e2b8:	mov	x19, x0
  41e2bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e2c0:	add	x0, x0, #0x370
  41e2c4:	ldr	x0, [x0]
  41e2c8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e2cc:	mov	x20, x0
  41e2d0:	ldr	x0, [sp, #104]
  41e2d4:	bl	4049b0 <ftello@plt>
  41e2d8:	mov	x2, x0
  41e2dc:	add	x0, sp, #0xa8
  41e2e0:	mov	x1, x0
  41e2e4:	mov	x0, x2
  41e2e8:	bl	450838 <argp_usage@@Base+0x774c>
  41e2ec:	mov	x21, x0
  41e2f0:	add	x0, sp, #0x90
  41e2f4:	mov	x1, x0
  41e2f8:	ldr	x0, [sp, #88]
  41e2fc:	bl	4506e8 <argp_usage@@Base+0x75fc>
  41e300:	mov	x22, x0
  41e304:	add	x0, sp, #0x78
  41e308:	mov	x1, x0
  41e30c:	ldr	x0, [sp, #80]
  41e310:	bl	450988 <argp_usage@@Base+0x789c>
  41e314:	mov	x1, x0
  41e318:	add	x0, sp, #0xc0
  41e31c:	str	x0, [sp]
  41e320:	ldr	x7, [sp, #96]
  41e324:	mov	x6, x1
  41e328:	mov	x5, x22
  41e32c:	mov	x4, x21
  41e330:	mov	x3, x20
  41e334:	mov	x2, x19
  41e338:	ldr	w1, [sp, #224]
  41e33c:	mov	w0, #0x0                   	// #0
  41e340:	bl	404100 <error@plt>
  41e344:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e348:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e34c:	add	x0, x0, #0x420
  41e350:	ldr	x0, [x0]
  41e354:	cmp	x0, #0x0
  41e358:	b.eq	41e36c <wcrtomb@plt+0x1965c>  // b.none
  41e35c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e360:	add	x0, x0, #0x420
  41e364:	ldr	x0, [x0]
  41e368:	blr	x0
  41e36c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e370:	add	x0, x0, #0xeb8
  41e374:	bl	404c60 <gettext@plt>
  41e378:	mov	x19, x0
  41e37c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e380:	add	x0, x0, #0x370
  41e384:	ldr	x0, [x0]
  41e388:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e38c:	mov	x20, x0
  41e390:	ldr	x0, [sp, #104]
  41e394:	bl	4049b0 <ftello@plt>
  41e398:	mov	x2, x0
  41e39c:	add	x0, sp, #0xa8
  41e3a0:	mov	x1, x0
  41e3a4:	mov	x0, x2
  41e3a8:	bl	450838 <argp_usage@@Base+0x774c>
  41e3ac:	mov	x1, x0
  41e3b0:	add	x0, sp, #0xc0
  41e3b4:	mov	x6, x0
  41e3b8:	ldr	x5, [sp, #96]
  41e3bc:	mov	x4, x1
  41e3c0:	mov	x3, x20
  41e3c4:	mov	x2, x19
  41e3c8:	ldr	w1, [sp, #224]
  41e3cc:	mov	w0, #0x0                   	// #0
  41e3d0:	bl	404100 <error@plt>
  41e3d4:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e3d8:	nop
  41e3dc:	mov	w0, #0x1                   	// #1
  41e3e0:	ldp	x19, x20, [sp, #32]
  41e3e4:	ldp	x21, x22, [sp, #48]
  41e3e8:	ldp	x29, x30, [sp, #16]
  41e3ec:	add	sp, sp, #0xf0
  41e3f0:	ret
  41e3f4:	stp	x29, x30, [sp, #-64]!
  41e3f8:	mov	x29, sp
  41e3fc:	str	x19, [sp, #16]
  41e400:	str	x0, [sp, #40]
  41e404:	str	x1, [sp, #32]
  41e408:	add	x0, sp, #0x38
  41e40c:	mov	x4, x0
  41e410:	mov	x3, #0x7fffffffffffffff    	// #9223372036854775807
  41e414:	mov	x2, #0x8000000000000000    	// #-9223372036854775808
  41e418:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e41c:	add	x1, x0, #0xed0
  41e420:	ldr	x0, [sp, #40]
  41e424:	bl	41dfa4 <wcrtomb@plt+0x19294>
  41e428:	and	w0, w0, #0xff
  41e42c:	cmp	w0, #0x0
  41e430:	b.eq	41e480 <wcrtomb@plt+0x19770>  // b.none
  41e434:	add	x0, sp, #0x30
  41e438:	mov	x4, x0
  41e43c:	mov	x3, #0xc9ff                	// #51711
  41e440:	movk	x3, #0x3b9a, lsl #16
  41e444:	mov	x2, #0x0                   	// #0
  41e448:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e44c:	add	x1, x0, #0xed8
  41e450:	ldr	x0, [sp, #40]
  41e454:	bl	41dfa4 <wcrtomb@plt+0x19294>
  41e458:	and	w0, w0, #0xff
  41e45c:	cmp	w0, #0x0
  41e460:	b.eq	41e480 <wcrtomb@plt+0x19770>  // b.none
  41e464:	ldr	x1, [sp, #56]
  41e468:	ldr	x0, [sp, #32]
  41e46c:	str	x1, [x0]
  41e470:	ldr	x1, [sp, #48]
  41e474:	ldr	x0, [sp, #32]
  41e478:	str	x1, [x0, #8]
  41e47c:	b	41e4e4 <wcrtomb@plt+0x197d4>
  41e480:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e484:	add	x0, x0, #0x420
  41e488:	ldr	x0, [x0]
  41e48c:	cmp	x0, #0x0
  41e490:	b.eq	41e4a4 <wcrtomb@plt+0x19794>  // b.none
  41e494:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e498:	add	x0, x0, #0x420
  41e49c:	ldr	x0, [x0]
  41e4a0:	blr	x0
  41e4a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e4a8:	add	x0, x0, #0x370
  41e4ac:	ldr	x0, [x0]
  41e4b0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e4b4:	mov	x19, x0
  41e4b8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e4bc:	add	x0, x0, #0xe28
  41e4c0:	bl	404c60 <gettext@plt>
  41e4c4:	mov	x4, x0
  41e4c8:	mov	x3, x19
  41e4cc:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e4d0:	add	x2, x0, #0xe48
  41e4d4:	mov	w1, #0x0                   	// #0
  41e4d8:	mov	w0, #0x0                   	// #0
  41e4dc:	bl	404100 <error@plt>
  41e4e0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e4e4:	ldr	x19, [sp, #16]
  41e4e8:	ldp	x29, x30, [sp], #64
  41e4ec:	ret
  41e4f0:	stp	x29, x30, [sp, #-288]!
  41e4f4:	mov	x29, sp
  41e4f8:	stp	x19, x20, [sp, #16]
  41e4fc:	str	x21, [sp, #32]
  41e500:	add	x5, sp, #0x70
  41e504:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  41e508:	add	x4, x0, #0x880
  41e50c:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  41e510:	add	x3, x0, #0x6a4
  41e514:	mov	x2, #0x0                   	// #0
  41e518:	mov	x1, #0x0                   	// #0
  41e51c:	mov	x0, x5
  41e520:	bl	45ccf8 <_obstack_begin@@Base>
  41e524:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e528:	add	x0, x0, #0x8f0
  41e52c:	ldr	x2, [x0]
  41e530:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e534:	add	x1, x0, #0x58
  41e538:	mov	x0, x2
  41e53c:	bl	41e3f4 <wcrtomb@plt+0x196e4>
  41e540:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e544:	add	x0, x0, #0x8f0
  41e548:	ldr	x5, [x0]
  41e54c:	add	x0, sp, #0x50
  41e550:	mov	x4, x0
  41e554:	mov	x3, #0x1                   	// #1
  41e558:	mov	x2, #0x0                   	// #0
  41e55c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e560:	add	x1, x0, #0xee0
  41e564:	mov	x0, x5
  41e568:	bl	41dfa4 <wcrtomb@plt+0x19294>
  41e56c:	and	w0, w0, #0xff
  41e570:	eor	w0, w0, #0x1
  41e574:	and	w0, w0, #0xff
  41e578:	cmp	w0, #0x0
  41e57c:	b.ne	41e9c8 <wcrtomb@plt+0x19cb8>  // b.any
  41e580:	ldr	x0, [sp, #80]
  41e584:	cmp	x0, #0x0
  41e588:	cset	w0, ne  // ne = any
  41e58c:	strb	w0, [sp, #287]
  41e590:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e594:	add	x0, x0, #0x8f0
  41e598:	ldr	x0, [x0]
  41e59c:	add	x1, sp, #0x40
  41e5a0:	bl	41e3f4 <wcrtomb@plt+0x196e4>
  41e5a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e5a8:	add	x0, x0, #0x8f0
  41e5ac:	ldr	x5, [x0]
  41e5b0:	add	x0, sp, #0x50
  41e5b4:	mov	x4, x0
  41e5b8:	mov	x3, #0xffffffffffffffff    	// #-1
  41e5bc:	mov	x2, #0x0                   	// #0
  41e5c0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e5c4:	add	x1, x0, #0xee8
  41e5c8:	mov	x0, x5
  41e5cc:	bl	41dfa4 <wcrtomb@plt+0x19294>
  41e5d0:	and	w0, w0, #0xff
  41e5d4:	eor	w0, w0, #0x1
  41e5d8:	and	w0, w0, #0xff
  41e5dc:	cmp	w0, #0x0
  41e5e0:	b.ne	41e950 <wcrtomb@plt+0x19c40>  // b.any
  41e5e4:	ldr	x0, [sp, #80]
  41e5e8:	str	x0, [sp, #272]
  41e5ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e5f0:	add	x0, x0, #0x8f0
  41e5f4:	ldr	x5, [x0]
  41e5f8:	add	x0, sp, #0x50
  41e5fc:	mov	x4, x0
  41e600:	mov	x3, #0xffffffffffffffff    	// #-1
  41e604:	mov	x2, #0x0                   	// #0
  41e608:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e60c:	add	x1, x0, #0xef0
  41e610:	mov	x0, x5
  41e614:	bl	41dfa4 <wcrtomb@plt+0x19294>
  41e618:	and	w0, w0, #0xff
  41e61c:	eor	w0, w0, #0x1
  41e620:	and	w0, w0, #0xff
  41e624:	cmp	w0, #0x0
  41e628:	b.ne	41e958 <wcrtomb@plt+0x19c48>  // b.any
  41e62c:	ldr	x0, [sp, #80]
  41e630:	str	x0, [sp, #264]
  41e634:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e638:	add	x0, x0, #0x8f0
  41e63c:	ldr	x0, [x0]
  41e640:	add	x2, sp, #0x38
  41e644:	add	x1, sp, #0x70
  41e648:	bl	41de8c <wcrtomb@plt+0x1917c>
  41e64c:	cmp	w0, #0x0
  41e650:	b.ne	41e960 <wcrtomb@plt+0x19c50>  // b.any
  41e654:	add	x0, sp, #0x70
  41e658:	str	x0, [sp, #256]
  41e65c:	ldr	x0, [sp, #256]
  41e660:	ldr	x0, [x0, #16]
  41e664:	str	x0, [sp, #248]
  41e668:	ldr	x0, [sp, #256]
  41e66c:	ldr	x0, [x0, #24]
  41e670:	ldr	x1, [sp, #248]
  41e674:	cmp	x1, x0
  41e678:	b.ne	41e68c <wcrtomb@plt+0x1997c>  // b.any
  41e67c:	ldr	x0, [sp, #256]
  41e680:	ldrb	w1, [x0, #80]
  41e684:	orr	w1, w1, #0x2
  41e688:	strb	w1, [x0, #80]
  41e68c:	ldr	x0, [sp, #256]
  41e690:	ldr	x0, [x0, #24]
  41e694:	mov	x1, x0
  41e698:	ldr	x0, [sp, #256]
  41e69c:	ldr	x0, [x0, #48]
  41e6a0:	add	x1, x1, x0
  41e6a4:	ldr	x0, [sp, #256]
  41e6a8:	ldr	x0, [x0, #48]
  41e6ac:	mvn	x0, x0
  41e6b0:	and	x0, x1, x0
  41e6b4:	mov	x1, x0
  41e6b8:	ldr	x0, [sp, #256]
  41e6bc:	str	x1, [x0, #24]
  41e6c0:	ldr	x0, [sp, #256]
  41e6c4:	ldr	x1, [x0, #24]
  41e6c8:	ldr	x0, [sp, #256]
  41e6cc:	ldr	x0, [x0, #8]
  41e6d0:	sub	x0, x1, x0
  41e6d4:	mov	x2, x0
  41e6d8:	ldr	x0, [sp, #256]
  41e6dc:	ldr	x1, [x0, #32]
  41e6e0:	ldr	x0, [sp, #256]
  41e6e4:	ldr	x0, [x0, #8]
  41e6e8:	sub	x0, x1, x0
  41e6ec:	cmp	x2, x0
  41e6f0:	b.ls	41e704 <wcrtomb@plt+0x199f4>  // b.plast
  41e6f4:	ldr	x0, [sp, #256]
  41e6f8:	ldr	x1, [x0, #32]
  41e6fc:	ldr	x0, [sp, #256]
  41e700:	str	x1, [x0, #24]
  41e704:	ldr	x0, [sp, #256]
  41e708:	ldr	x1, [x0, #24]
  41e70c:	ldr	x0, [sp, #256]
  41e710:	str	x1, [x0, #16]
  41e714:	ldr	x0, [sp, #248]
  41e718:	str	x0, [sp, #240]
  41e71c:	nop
  41e720:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e724:	add	x0, x0, #0x8f0
  41e728:	ldr	x0, [x0]
  41e72c:	add	x2, sp, #0x38
  41e730:	add	x1, sp, #0x70
  41e734:	bl	41de8c <wcrtomb@plt+0x1917c>
  41e738:	cmp	w0, #0x0
  41e73c:	b.ne	41e74c <wcrtomb@plt+0x19a3c>  // b.any
  41e740:	ldr	x0, [sp, #56]
  41e744:	cmp	x0, #0x1
  41e748:	b.hi	41e720 <wcrtomb@plt+0x19a10>  // b.pmore
  41e74c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e750:	add	x0, x0, #0x8f0
  41e754:	ldr	x0, [x0]
  41e758:	bl	404640 <getc_unlocked@plt>
  41e75c:	cmp	w0, #0x0
  41e760:	b.eq	41e800 <wcrtomb@plt+0x19af0>  // b.none
  41e764:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e768:	add	x0, x0, #0x420
  41e76c:	ldr	x0, [x0]
  41e770:	cmp	x0, #0x0
  41e774:	b.eq	41e788 <wcrtomb@plt+0x19a78>  // b.none
  41e778:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e77c:	add	x0, x0, #0x420
  41e780:	ldr	x0, [x0]
  41e784:	blr	x0
  41e788:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e78c:	add	x0, x0, #0xef8
  41e790:	bl	404c60 <gettext@plt>
  41e794:	mov	x19, x0
  41e798:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e79c:	add	x0, x0, #0x370
  41e7a0:	ldr	x0, [x0]
  41e7a4:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e7a8:	mov	x20, x0
  41e7ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41e7b0:	add	x0, x0, #0x8f0
  41e7b4:	ldr	x0, [x0]
  41e7b8:	bl	4049b0 <ftello@plt>
  41e7bc:	mov	x2, x0
  41e7c0:	add	x0, sp, #0x58
  41e7c4:	mov	x1, x0
  41e7c8:	mov	x0, x2
  41e7cc:	bl	450838 <argp_usage@@Base+0x774c>
  41e7d0:	mov	x21, x0
  41e7d4:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e7d8:	add	x0, x0, #0xf08
  41e7dc:	bl	404c60 <gettext@plt>
  41e7e0:	mov	x5, x0
  41e7e4:	mov	x4, x21
  41e7e8:	mov	x3, x20
  41e7ec:	mov	x2, x19
  41e7f0:	mov	w1, #0x0                   	// #0
  41e7f4:	mov	w0, #0x0                   	// #0
  41e7f8:	bl	404100 <error@plt>
  41e7fc:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e800:	add	x0, sp, #0x70
  41e804:	str	x0, [sp, #232]
  41e808:	ldr	x0, [sp, #232]
  41e80c:	ldr	x0, [x0, #16]
  41e810:	str	x0, [sp, #224]
  41e814:	ldr	x0, [sp, #232]
  41e818:	ldr	x0, [x0, #24]
  41e81c:	ldr	x1, [sp, #224]
  41e820:	cmp	x1, x0
  41e824:	b.ne	41e838 <wcrtomb@plt+0x19b28>  // b.any
  41e828:	ldr	x0, [sp, #232]
  41e82c:	ldrb	w1, [x0, #80]
  41e830:	orr	w1, w1, #0x2
  41e834:	strb	w1, [x0, #80]
  41e838:	ldr	x0, [sp, #232]
  41e83c:	ldr	x0, [x0, #24]
  41e840:	mov	x1, x0
  41e844:	ldr	x0, [sp, #232]
  41e848:	ldr	x0, [x0, #48]
  41e84c:	add	x1, x1, x0
  41e850:	ldr	x0, [sp, #232]
  41e854:	ldr	x0, [x0, #48]
  41e858:	mvn	x0, x0
  41e85c:	and	x0, x1, x0
  41e860:	mov	x1, x0
  41e864:	ldr	x0, [sp, #232]
  41e868:	str	x1, [x0, #24]
  41e86c:	ldr	x0, [sp, #232]
  41e870:	ldr	x1, [x0, #24]
  41e874:	ldr	x0, [sp, #232]
  41e878:	ldr	x0, [x0, #8]
  41e87c:	sub	x0, x1, x0
  41e880:	mov	x2, x0
  41e884:	ldr	x0, [sp, #232]
  41e888:	ldr	x1, [x0, #32]
  41e88c:	ldr	x0, [sp, #232]
  41e890:	ldr	x0, [x0, #8]
  41e894:	sub	x0, x1, x0
  41e898:	cmp	x2, x0
  41e89c:	b.ls	41e8b0 <wcrtomb@plt+0x19ba0>  // b.plast
  41e8a0:	ldr	x0, [sp, #232]
  41e8a4:	ldr	x1, [x0, #32]
  41e8a8:	ldr	x0, [sp, #232]
  41e8ac:	str	x1, [x0, #24]
  41e8b0:	ldr	x0, [sp, #232]
  41e8b4:	ldr	x1, [x0, #24]
  41e8b8:	ldr	x0, [sp, #232]
  41e8bc:	str	x1, [x0, #16]
  41e8c0:	ldr	x0, [sp, #224]
  41e8c4:	str	x0, [sp, #216]
  41e8c8:	ldr	x7, [sp, #216]
  41e8cc:	mov	w6, #0x0                   	// #0
  41e8d0:	ldrb	w5, [sp, #287]
  41e8d4:	ldr	x4, [sp, #264]
  41e8d8:	ldr	x3, [sp, #272]
  41e8dc:	ldp	x1, x2, [sp, #64]
  41e8e0:	ldr	x0, [sp, #240]
  41e8e4:	bl	41bcc4 <wcrtomb@plt+0x16fb4>
  41e8e8:	add	x0, sp, #0x70
  41e8ec:	str	x0, [sp, #208]
  41e8f0:	ldr	x0, [sp, #216]
  41e8f4:	str	x0, [sp, #200]
  41e8f8:	ldr	x0, [sp, #208]
  41e8fc:	ldr	x0, [x0, #8]
  41e900:	ldr	x1, [sp, #200]
  41e904:	cmp	x1, x0
  41e908:	b.ls	41e940 <wcrtomb@plt+0x19c30>  // b.plast
  41e90c:	ldr	x0, [sp, #208]
  41e910:	ldr	x0, [x0, #32]
  41e914:	ldr	x1, [sp, #200]
  41e918:	cmp	x1, x0
  41e91c:	b.cs	41e940 <wcrtomb@plt+0x19c30>  // b.hs, b.nlast
  41e920:	ldr	x0, [sp, #208]
  41e924:	ldr	x1, [sp, #200]
  41e928:	str	x1, [x0, #16]
  41e92c:	ldr	x0, [sp, #208]
  41e930:	ldr	x1, [x0, #16]
  41e934:	ldr	x0, [sp, #208]
  41e938:	str	x1, [x0, #24]
  41e93c:	b	41e94c <wcrtomb@plt+0x19c3c>
  41e940:	ldr	x1, [sp, #200]
  41e944:	ldr	x0, [sp, #208]
  41e948:	bl	45d05c <_obstack_free@@Base>
  41e94c:	b	41e540 <wcrtomb@plt+0x19830>
  41e950:	nop
  41e954:	b	41e964 <wcrtomb@plt+0x19c54>
  41e958:	nop
  41e95c:	b	41e964 <wcrtomb@plt+0x19c54>
  41e960:	nop
  41e964:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e968:	add	x0, x0, #0x420
  41e96c:	ldr	x0, [x0]
  41e970:	cmp	x0, #0x0
  41e974:	b.eq	41e988 <wcrtomb@plt+0x19c78>  // b.none
  41e978:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e97c:	add	x0, x0, #0x420
  41e980:	ldr	x0, [x0]
  41e984:	blr	x0
  41e988:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41e98c:	add	x0, x0, #0x370
  41e990:	ldr	x0, [x0]
  41e994:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41e998:	mov	x19, x0
  41e99c:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e9a0:	add	x0, x0, #0xe28
  41e9a4:	bl	404c60 <gettext@plt>
  41e9a8:	mov	x4, x0
  41e9ac:	mov	x3, x19
  41e9b0:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e9b4:	add	x2, x0, #0xe48
  41e9b8:	mov	w1, #0x0                   	// #0
  41e9bc:	mov	w0, #0x0                   	// #0
  41e9c0:	bl	404100 <error@plt>
  41e9c4:	bl	412ae0 <wcrtomb@plt+0xddd0>
  41e9c8:	nop
  41e9cc:	ldp	x19, x20, [sp, #16]
  41e9d0:	ldr	x21, [sp, #32]
  41e9d4:	ldp	x29, x30, [sp], #288
  41e9d8:	ret
  41e9dc:	stp	x29, x30, [sp, #-96]!
  41e9e0:	mov	x29, sp
  41e9e4:	stp	x19, x20, [sp, #16]
  41e9e8:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41e9ec:	add	x0, x0, #0xfd8
  41e9f0:	bl	404770 <puts@plt>
  41e9f4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41e9f8:	add	x3, x0, #0x8
  41e9fc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ea00:	add	x2, x0, #0x10
  41ea04:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ea08:	add	x1, x0, #0x18
  41ea0c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ea10:	add	x0, x0, #0x28
  41ea14:	bl	404ba0 <printf@plt>
  41ea18:	adrp	x0, 480000 <_obstack_memory_used@@Base+0x22ec0>
  41ea1c:	add	x0, x0, #0xf48
  41ea20:	str	x0, [sp, #88]
  41ea24:	b	41eab4 <wcrtomb@plt+0x19da4>
  41ea28:	ldr	x0, [sp, #88]
  41ea2c:	ldr	x19, [x0]
  41ea30:	ldr	x0, [sp, #88]
  41ea34:	ldr	x0, [x0, #8]
  41ea38:	mov	x4, x0
  41ea3c:	ldr	x0, [sp, #88]
  41ea40:	ldr	x1, [x0, #8]
  41ea44:	ldr	x0, [sp, #88]
  41ea48:	ldr	x0, [x0, #16]
  41ea4c:	add	x2, sp, #0x40
  41ea50:	mov	x3, x2
  41ea54:	mov	x2, x0
  41ea58:	mov	x0, x4
  41ea5c:	bl	42465c <wcrtomb@plt+0x1f94c>
  41ea60:	mov	x20, x0
  41ea64:	ldr	x0, [sp, #88]
  41ea68:	ldr	x4, [x0, #16]
  41ea6c:	ldr	x0, [sp, #88]
  41ea70:	ldr	x1, [x0, #8]
  41ea74:	ldr	x0, [sp, #88]
  41ea78:	ldr	x0, [x0, #16]
  41ea7c:	add	x2, sp, #0x28
  41ea80:	mov	x3, x2
  41ea84:	mov	x2, x0
  41ea88:	mov	x0, x4
  41ea8c:	bl	42465c <wcrtomb@plt+0x1f94c>
  41ea90:	mov	x3, x0
  41ea94:	mov	x2, x20
  41ea98:	mov	x1, x19
  41ea9c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41eaa0:	add	x0, x0, #0x48
  41eaa4:	bl	404ba0 <printf@plt>
  41eaa8:	ldr	x0, [sp, #88]
  41eaac:	add	x0, x0, #0x18
  41eab0:	str	x0, [sp, #88]
  41eab4:	ldr	x0, [sp, #88]
  41eab8:	ldr	x0, [x0]
  41eabc:	cmp	x0, #0x0
  41eac0:	b.ne	41ea28 <wcrtomb@plt+0x19d18>  // b.any
  41eac4:	mov	w0, #0xa                   	// #10
  41eac8:	bl	404c00 <putchar@plt>
  41eacc:	nop
  41ead0:	ldp	x19, x20, [sp, #16]
  41ead4:	ldp	x29, x30, [sp], #96
  41ead8:	ret
  41eadc:	stp	x29, x30, [sp, #-64]!
  41eae0:	mov	x29, sp
  41eae4:	str	xzr, [sp, #24]
  41eae8:	str	xzr, [sp, #16]
  41eaec:	mov	w0, #0x42                  	// #66
  41eaf0:	str	w0, [sp, #60]
  41eaf4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41eaf8:	add	x0, x0, #0x33c
  41eafc:	ldr	w0, [x0]
  41eb00:	cmp	w0, #0x0
  41eb04:	b.ne	41eb14 <wcrtomb@plt+0x19e04>  // b.any
  41eb08:	ldr	w0, [sp, #60]
  41eb0c:	orr	w0, w0, #0x200
  41eb10:	str	w0, [sp, #60]
  41eb14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41eb18:	add	x0, x0, #0x370
  41eb1c:	ldr	x0, [x0]
  41eb20:	mov	w2, #0x1b6                 	// #438
  41eb24:	ldr	w1, [sp, #60]
  41eb28:	bl	404430 <open@plt>
  41eb2c:	str	w0, [sp, #36]
  41eb30:	ldr	w0, [sp, #36]
  41eb34:	cmp	w0, #0x0
  41eb38:	b.ge	41eb50 <wcrtomb@plt+0x19e40>  // b.tcont
  41eb3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41eb40:	add	x0, x0, #0x370
  41eb44:	ldr	x0, [x0]
  41eb48:	bl	43a618 <wcrtomb@plt+0x35908>
  41eb4c:	b	41edc8 <wcrtomb@plt+0x1a0b8>
  41eb50:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41eb54:	add	x1, x0, #0x68
  41eb58:	ldr	w0, [sp, #36]
  41eb5c:	bl	4044e0 <fdopen@plt>
  41eb60:	mov	x1, x0
  41eb64:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41eb68:	add	x0, x0, #0x8f0
  41eb6c:	str	x1, [x0]
  41eb70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41eb74:	add	x0, x0, #0x8f0
  41eb78:	ldr	x0, [x0]
  41eb7c:	cmp	x0, #0x0
  41eb80:	b.ne	41eba0 <wcrtomb@plt+0x19e90>  // b.any
  41eb84:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41eb88:	add	x0, x0, #0x370
  41eb8c:	ldr	x0, [x0]
  41eb90:	bl	43a618 <wcrtomb@plt+0x35908>
  41eb94:	ldr	w0, [sp, #36]
  41eb98:	bl	404660 <close@plt>
  41eb9c:	b	41edc8 <wcrtomb@plt+0x1a0b8>
  41eba0:	bl	429f68 <wcrtomb@plt+0x25258>
  41eba4:	bl	42a060 <wcrtomb@plt+0x25350>
  41eba8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ebac:	add	x0, x0, #0x8f0
  41ebb0:	ldr	x2, [x0]
  41ebb4:	add	x1, sp, #0x10
  41ebb8:	add	x0, sp, #0x18
  41ebbc:	bl	404840 <getline@plt>
  41ebc0:	cmp	x0, #0x0
  41ebc4:	b.le	41ed94 <wcrtomb@plt+0x1a084>
  41ebc8:	ldr	x3, [sp, #24]
  41ebcc:	mov	x2, #0x7                   	// #7
  41ebd0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ebd4:	add	x1, x0, #0x70
  41ebd8:	mov	x0, x3
  41ebdc:	bl	404480 <strncmp@plt>
  41ebe0:	cmp	w0, #0x0
  41ebe4:	b.ne	41ecf8 <wcrtomb@plt+0x19fe8>  // b.any
  41ebe8:	ldr	x0, [sp, #24]
  41ebec:	add	x0, x0, #0x7
  41ebf0:	str	x0, [sp, #48]
  41ebf4:	ldr	x0, [sp, #48]
  41ebf8:	add	x1, x0, #0x1
  41ebfc:	str	x1, [sp, #48]
  41ec00:	ldrb	w0, [x0]
  41ec04:	cmp	w0, #0x2d
  41ec08:	b.eq	41eccc <wcrtomb@plt+0x19fbc>  // b.none
  41ec0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ec10:	add	x0, x0, #0x420
  41ec14:	ldr	x0, [x0]
  41ec18:	cmp	x0, #0x0
  41ec1c:	b.eq	41ec30 <wcrtomb@plt+0x19f20>  // b.none
  41ec20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ec24:	add	x0, x0, #0x420
  41ec28:	ldr	x0, [x0]
  41ec2c:	blr	x0
  41ec30:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ec34:	add	x0, x0, #0x78
  41ec38:	bl	404c60 <gettext@plt>
  41ec3c:	mov	x2, x0
  41ec40:	mov	w1, #0x0                   	// #0
  41ec44:	mov	w0, #0x1                   	// #1
  41ec48:	bl	404100 <error@plt>
  41ec4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ec50:	add	x0, x0, #0xdb0
  41ec54:	mov	w1, #0x2                   	// #2
  41ec58:	str	w1, [x0]
  41ec5c:	b	41eccc <wcrtomb@plt+0x19fbc>
  41ec60:	ldr	x0, [sp, #48]
  41ec64:	ldrb	w0, [x0]
  41ec68:	cmp	w0, #0x0
  41ec6c:	b.ne	41ecc0 <wcrtomb@plt+0x19fb0>  // b.any
  41ec70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ec74:	add	x0, x0, #0x420
  41ec78:	ldr	x0, [x0]
  41ec7c:	cmp	x0, #0x0
  41ec80:	b.eq	41ec94 <wcrtomb@plt+0x19f84>  // b.none
  41ec84:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ec88:	add	x0, x0, #0x420
  41ec8c:	ldr	x0, [x0]
  41ec90:	blr	x0
  41ec94:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ec98:	add	x0, x0, #0x78
  41ec9c:	bl	404c60 <gettext@plt>
  41eca0:	mov	x2, x0
  41eca4:	mov	w1, #0x0                   	// #0
  41eca8:	mov	w0, #0x1                   	// #1
  41ecac:	bl	404100 <error@plt>
  41ecb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ecb4:	add	x0, x0, #0xdb0
  41ecb8:	mov	w1, #0x2                   	// #2
  41ecbc:	str	w1, [x0]
  41ecc0:	ldr	x0, [sp, #48]
  41ecc4:	add	x0, x0, #0x1
  41ecc8:	str	x0, [sp, #48]
  41eccc:	ldr	x0, [sp, #48]
  41ecd0:	ldrb	w0, [x0]
  41ecd4:	cmp	w0, #0x2d
  41ecd8:	b.ne	41ec60 <wcrtomb@plt+0x19f50>  // b.any
  41ecdc:	ldr	x0, [sp, #48]
  41ece0:	add	x0, x0, #0x1
  41ece4:	mov	w2, #0xa                   	// #10
  41ece8:	mov	x1, #0x0                   	// #0
  41ecec:	bl	4046e0 <strtoumax@plt>
  41ecf0:	str	x0, [sp, #40]
  41ecf4:	b	41ecfc <wcrtomb@plt+0x19fec>
  41ecf8:	str	xzr, [sp, #40]
  41ecfc:	ldr	x0, [sp, #40]
  41ed00:	cmp	x0, #0x1
  41ed04:	b.ls	41ed18 <wcrtomb@plt+0x1a008>  // b.plast
  41ed08:	ldr	x0, [sp, #40]
  41ed0c:	cmp	x0, #0x2
  41ed10:	b.eq	41ed34 <wcrtomb@plt+0x1a024>  // b.none
  41ed14:	b	41ed3c <wcrtomb@plt+0x1a02c>
  41ed18:	ldr	x0, [sp, #40]
  41ed1c:	mov	w2, w0
  41ed20:	ldr	x0, [sp, #24]
  41ed24:	mov	x1, x0
  41ed28:	mov	w0, w2
  41ed2c:	bl	41d7e0 <wcrtomb@plt+0x18ad0>
  41ed30:	b	41ed98 <wcrtomb@plt+0x1a088>
  41ed34:	bl	41e4f0 <wcrtomb@plt+0x197e0>
  41ed38:	b	41ed98 <wcrtomb@plt+0x1a088>
  41ed3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ed40:	add	x0, x0, #0x420
  41ed44:	ldr	x0, [x0]
  41ed48:	cmp	x0, #0x0
  41ed4c:	b.eq	41ed60 <wcrtomb@plt+0x1a050>  // b.none
  41ed50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ed54:	add	x0, x0, #0x420
  41ed58:	ldr	x0, [x0]
  41ed5c:	blr	x0
  41ed60:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ed64:	add	x0, x0, #0x98
  41ed68:	bl	404c60 <gettext@plt>
  41ed6c:	ldr	x3, [sp, #40]
  41ed70:	mov	x2, x0
  41ed74:	mov	w1, #0x0                   	// #0
  41ed78:	mov	w0, #0x1                   	// #1
  41ed7c:	bl	404100 <error@plt>
  41ed80:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ed84:	add	x0, x0, #0xdb0
  41ed88:	mov	w1, #0x2                   	// #2
  41ed8c:	str	w1, [x0]
  41ed90:	b	41ed98 <wcrtomb@plt+0x1a088>
  41ed94:	nop
  41ed98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ed9c:	add	x0, x0, #0x8f0
  41eda0:	ldr	x0, [x0]
  41eda4:	bl	4041e0 <ferror_unlocked@plt>
  41eda8:	cmp	w0, #0x0
  41edac:	b.eq	41edc0 <wcrtomb@plt+0x1a0b0>  // b.none
  41edb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41edb4:	add	x0, x0, #0x370
  41edb8:	ldr	x0, [x0]
  41edbc:	bl	43a684 <wcrtomb@plt+0x35974>
  41edc0:	ldr	x0, [sp, #24]
  41edc4:	bl	404880 <free@plt>
  41edc8:	ldp	x29, x30, [sp], #64
  41edcc:	ret
  41edd0:	stp	x29, x30, [sp, #-112]!
  41edd4:	mov	x29, sp
  41edd8:	str	x19, [sp, #16]
  41eddc:	str	x0, [sp, #40]
  41ede0:	str	x1, [sp, #32]
  41ede4:	ldr	x0, [sp, #40]
  41ede8:	str	x0, [sp, #96]
  41edec:	ldr	x0, [sp, #32]
  41edf0:	str	x0, [sp, #88]
  41edf4:	ldr	x0, [sp, #96]
  41edf8:	ldr	w0, [x0, #60]
  41edfc:	and	w0, w0, #0x4
  41ee00:	cmp	w0, #0x0
  41ee04:	b.eq	41eff8 <wcrtomb@plt+0x1a2e8>  // b.none
  41ee08:	ldr	x0, [sp, #96]
  41ee0c:	ldr	w0, [x0, #60]
  41ee10:	and	w0, w0, #0x2
  41ee14:	cmp	w0, #0x0
  41ee18:	b.eq	41ee28 <wcrtomb@plt+0x1a118>  // b.none
  41ee1c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ee20:	add	x0, x0, #0xc8
  41ee24:	b	41ee30 <wcrtomb@plt+0x1a120>
  41ee28:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ee2c:	add	x0, x0, #0xd0
  41ee30:	str	x0, [sp, #80]
  41ee34:	ldr	x3, [sp, #88]
  41ee38:	mov	x2, #0x1                   	// #1
  41ee3c:	mov	x1, #0x2                   	// #2
  41ee40:	ldr	x0, [sp, #80]
  41ee44:	bl	404090 <fwrite_unlocked@plt>
  41ee48:	ldr	x0, [sp, #96]
  41ee4c:	ldr	x0, [x0, #8]
  41ee50:	mov	x4, x0
  41ee54:	add	x0, sp, #0x38
  41ee58:	mov	x3, x0
  41ee5c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  41ee60:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  41ee64:	mov	x0, x4
  41ee68:	bl	42465c <wcrtomb@plt+0x1f94c>
  41ee6c:	str	x0, [sp, #80]
  41ee70:	ldr	x0, [sp, #80]
  41ee74:	bl	4040b0 <strlen@plt>
  41ee78:	add	x0, x0, #0x1
  41ee7c:	ldr	x3, [sp, #88]
  41ee80:	mov	x2, #0x1                   	// #1
  41ee84:	mov	x1, x0
  41ee88:	ldr	x0, [sp, #80]
  41ee8c:	bl	404090 <fwrite_unlocked@plt>
  41ee90:	ldr	x0, [sp, #96]
  41ee94:	ldr	x0, [x0, #16]
  41ee98:	add	x1, sp, #0x38
  41ee9c:	bl	4506e8 <argp_usage@@Base+0x75fc>
  41eea0:	str	x0, [sp, #80]
  41eea4:	ldr	x0, [sp, #80]
  41eea8:	bl	4040b0 <strlen@plt>
  41eeac:	add	x0, x0, #0x1
  41eeb0:	ldr	x3, [sp, #88]
  41eeb4:	mov	x2, #0x1                   	// #1
  41eeb8:	mov	x1, x0
  41eebc:	ldr	x0, [sp, #80]
  41eec0:	bl	404090 <fwrite_unlocked@plt>
  41eec4:	ldr	x0, [sp, #96]
  41eec8:	ldr	x0, [x0, #24]
  41eecc:	add	x1, sp, #0x38
  41eed0:	mov	x3, x1
  41eed4:	mov	x2, #0xffffffffffffffff    	// #-1
  41eed8:	mov	x1, #0x0                   	// #0
  41eedc:	bl	42465c <wcrtomb@plt+0x1f94c>
  41eee0:	str	x0, [sp, #80]
  41eee4:	ldr	x0, [sp, #80]
  41eee8:	bl	4040b0 <strlen@plt>
  41eeec:	add	x0, x0, #0x1
  41eef0:	ldr	x3, [sp, #88]
  41eef4:	mov	x2, #0x1                   	// #1
  41eef8:	mov	x1, x0
  41eefc:	ldr	x0, [sp, #80]
  41ef00:	bl	404090 <fwrite_unlocked@plt>
  41ef04:	ldr	x0, [sp, #96]
  41ef08:	ldr	x0, [x0, #32]
  41ef0c:	add	x1, sp, #0x38
  41ef10:	mov	x3, x1
  41ef14:	mov	x2, #0xffffffffffffffff    	// #-1
  41ef18:	mov	x1, #0x0                   	// #0
  41ef1c:	bl	42465c <wcrtomb@plt+0x1f94c>
  41ef20:	str	x0, [sp, #80]
  41ef24:	ldr	x0, [sp, #80]
  41ef28:	bl	4040b0 <strlen@plt>
  41ef2c:	add	x0, x0, #0x1
  41ef30:	ldr	x3, [sp, #88]
  41ef34:	mov	x2, #0x1                   	// #1
  41ef38:	mov	x1, x0
  41ef3c:	ldr	x0, [sp, #80]
  41ef40:	bl	404090 <fwrite_unlocked@plt>
  41ef44:	ldr	x0, [sp, #96]
  41ef48:	ldr	x19, [x0, #88]
  41ef4c:	ldr	x0, [sp, #96]
  41ef50:	ldr	x0, [x0, #88]
  41ef54:	bl	4040b0 <strlen@plt>
  41ef58:	add	x0, x0, #0x1
  41ef5c:	ldr	x3, [sp, #88]
  41ef60:	mov	x2, #0x1                   	// #1
  41ef64:	mov	x1, x0
  41ef68:	mov	x0, x19
  41ef6c:	bl	404090 <fwrite_unlocked@plt>
  41ef70:	ldr	x0, [sp, #96]
  41ef74:	ldr	x0, [x0, #40]
  41ef78:	cmp	x0, #0x0
  41ef7c:	b.eq	41efe0 <wcrtomb@plt+0x1a2d0>  // b.none
  41ef80:	ldr	x0, [sp, #96]
  41ef84:	ldr	x0, [x0, #40]
  41ef88:	add	x1, sp, #0x30
  41ef8c:	mov	x2, x1
  41ef90:	mov	w1, #0x0                   	// #0
  41ef94:	bl	41b7ec <wcrtomb@plt+0x16adc>
  41ef98:	str	x0, [sp, #104]
  41ef9c:	b	41efcc <wcrtomb@plt+0x1a2bc>
  41efa0:	ldr	x0, [sp, #104]
  41efa4:	bl	4040b0 <strlen@plt>
  41efa8:	add	x0, x0, #0x1
  41efac:	ldr	x3, [sp, #88]
  41efb0:	mov	x2, #0x1                   	// #1
  41efb4:	mov	x1, x0
  41efb8:	ldr	x0, [sp, #104]
  41efbc:	bl	404090 <fwrite_unlocked@plt>
  41efc0:	ldr	x0, [sp, #48]
  41efc4:	bl	41b708 <wcrtomb@plt+0x169f8>
  41efc8:	str	x0, [sp, #104]
  41efcc:	ldr	x0, [sp, #104]
  41efd0:	cmp	x0, #0x0
  41efd4:	b.ne	41efa0 <wcrtomb@plt+0x1a290>  // b.any
  41efd8:	ldr	x0, [sp, #48]
  41efdc:	bl	404880 <free@plt>
  41efe0:	ldr	x3, [sp, #88]
  41efe4:	mov	x2, #0x1                   	// #1
  41efe8:	mov	x1, #0x2                   	// #2
  41efec:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41eff0:	add	x0, x0, #0xd8
  41eff4:	bl	404090 <fwrite_unlocked@plt>
  41eff8:	ldr	x0, [sp, #88]
  41effc:	bl	4041e0 <ferror_unlocked@plt>
  41f000:	cmp	w0, #0x0
  41f004:	cset	w0, eq  // eq = none
  41f008:	and	w0, w0, #0xff
  41f00c:	ldr	x19, [sp, #16]
  41f010:	ldp	x29, x30, [sp], #112
  41f014:	ret
  41f018:	stp	x29, x30, [sp, #-64]!
  41f01c:	mov	x29, sp
  41f020:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f024:	add	x0, x0, #0x8f0
  41f028:	ldr	x0, [x0]
  41f02c:	str	x0, [sp, #56]
  41f030:	ldr	x0, [sp, #56]
  41f034:	cmp	x0, #0x0
  41f038:	b.eq	41f1b0 <wcrtomb@plt+0x1a4a0>  // b.none
  41f03c:	mov	w2, #0x0                   	// #0
  41f040:	mov	x1, #0x0                   	// #0
  41f044:	ldr	x0, [sp, #56]
  41f048:	bl	404830 <fseeko@plt>
  41f04c:	cmp	w0, #0x0
  41f050:	b.eq	41f064 <wcrtomb@plt+0x1a354>  // b.none
  41f054:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f058:	add	x0, x0, #0x370
  41f05c:	ldr	x0, [x0]
  41f060:	bl	43a98c <wcrtomb@plt+0x35c7c>
  41f064:	ldr	x0, [sp, #56]
  41f068:	bl	404320 <fileno@plt>
  41f06c:	bl	42de04 <wcrtomb@plt+0x290f4>
  41f070:	cmp	w0, #0x0
  41f074:	b.eq	41f088 <wcrtomb@plt+0x1a378>  // b.none
  41f078:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f07c:	add	x0, x0, #0x370
  41f080:	ldr	x0, [x0]
  41f084:	bl	43ac24 <wcrtomb@plt+0x35f14>
  41f088:	mov	w4, #0x2                   	// #2
  41f08c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f090:	add	x3, x0, #0xe0
  41f094:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f098:	add	x2, x0, #0x70
  41f09c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f0a0:	add	x1, x0, #0xe8
  41f0a4:	ldr	x0, [sp, #56]
  41f0a8:	bl	404c90 <fprintf@plt>
  41f0ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f0b0:	add	x0, x0, #0x2f8
  41f0b4:	ldr	x0, [x0]
  41f0b8:	add	x1, sp, #0x18
  41f0bc:	bl	4506e8 <argp_usage@@Base+0x75fc>
  41f0c0:	str	x0, [sp, #48]
  41f0c4:	ldr	x0, [sp, #48]
  41f0c8:	bl	4040b0 <strlen@plt>
  41f0cc:	add	x0, x0, #0x1
  41f0d0:	ldr	x3, [sp, #56]
  41f0d4:	mov	x2, #0x1                   	// #1
  41f0d8:	mov	x1, x0
  41f0dc:	ldr	x0, [sp, #48]
  41f0e0:	bl	404090 <fwrite_unlocked@plt>
  41f0e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f0e8:	add	x0, x0, #0x2f8
  41f0ec:	ldr	x0, [x0, #8]
  41f0f0:	mov	x2, x0
  41f0f4:	add	x0, sp, #0x18
  41f0f8:	mov	x1, x0
  41f0fc:	mov	x0, x2
  41f100:	bl	450988 <argp_usage@@Base+0x789c>
  41f104:	str	x0, [sp, #48]
  41f108:	ldr	x0, [sp, #48]
  41f10c:	bl	4040b0 <strlen@plt>
  41f110:	add	x0, x0, #0x1
  41f114:	ldr	x3, [sp, #56]
  41f118:	mov	x2, #0x1                   	// #1
  41f11c:	mov	x1, x0
  41f120:	ldr	x0, [sp, #48]
  41f124:	bl	404090 <fwrite_unlocked@plt>
  41f128:	ldr	x0, [sp, #56]
  41f12c:	bl	4041e0 <ferror_unlocked@plt>
  41f130:	cmp	w0, #0x0
  41f134:	b.ne	41f16c <wcrtomb@plt+0x1a45c>  // b.any
  41f138:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f13c:	add	x0, x0, #0x8e0
  41f140:	ldr	x0, [x0]
  41f144:	cmp	x0, #0x0
  41f148:	b.eq	41f16c <wcrtomb@plt+0x1a45c>  // b.none
  41f14c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f150:	add	x0, x0, #0x8e0
  41f154:	ldr	x3, [x0]
  41f158:	ldr	x2, [sp, #56]
  41f15c:	adrp	x0, 41e000 <wcrtomb@plt+0x192f0>
  41f160:	add	x1, x0, #0xdd0
  41f164:	mov	x0, x3
  41f168:	bl	44e56c <argp_usage@@Base+0x5480>
  41f16c:	ldr	x0, [sp, #56]
  41f170:	bl	4041e0 <ferror_unlocked@plt>
  41f174:	cmp	w0, #0x0
  41f178:	b.eq	41f18c <wcrtomb@plt+0x1a47c>  // b.none
  41f17c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f180:	add	x0, x0, #0x370
  41f184:	ldr	x0, [x0]
  41f188:	bl	43acec <wcrtomb@plt+0x35fdc>
  41f18c:	ldr	x0, [sp, #56]
  41f190:	bl	404380 <fclose@plt>
  41f194:	cmp	w0, #0x0
  41f198:	b.eq	41f1b4 <wcrtomb@plt+0x1a4a4>  // b.none
  41f19c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f1a0:	add	x0, x0, #0x370
  41f1a4:	ldr	x0, [x0]
  41f1a8:	bl	43a490 <wcrtomb@plt+0x35780>
  41f1ac:	b	41f1b4 <wcrtomb@plt+0x1a4a4>
  41f1b0:	nop
  41f1b4:	ldp	x29, x30, [sp], #64
  41f1b8:	ret
  41f1bc:	stp	x29, x30, [sp, #-80]!
  41f1c0:	mov	x29, sp
  41f1c4:	str	x0, [sp, #24]
  41f1c8:	ldr	x0, [sp, #24]
  41f1cc:	ldr	x0, [x0, #136]
  41f1d0:	str	x0, [sp, #72]
  41f1d4:	ldr	x0, [sp, #72]
  41f1d8:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  41f1dc:	str	x0, [sp, #48]
  41f1e0:	ldr	x0, [sp, #48]
  41f1e4:	str	x0, [sp, #56]
  41f1e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f1ec:	add	x0, x0, #0x18
  41f1f0:	ldr	x0, [x0]
  41f1f4:	bl	4060c4 <wcrtomb@plt+0x13b4>
  41f1f8:	ldr	x0, [sp, #24]
  41f1fc:	bl	405180 <wcrtomb@plt+0x470>
  41f200:	b	41f2dc <wcrtomb@plt+0x1a5cc>
  41f204:	ldr	x0, [sp, #72]
  41f208:	bl	4051ec <wcrtomb@plt+0x4dc>
  41f20c:	bl	406030 <wcrtomb@plt+0x1320>
  41f210:	str	x0, [sp, #40]
  41f214:	ldr	x0, [sp, #40]
  41f218:	cmp	x0, #0x0
  41f21c:	b.ne	41f270 <wcrtomb@plt+0x1a560>  // b.any
  41f220:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f224:	add	x0, x0, #0x420
  41f228:	ldr	x0, [x0]
  41f22c:	cmp	x0, #0x0
  41f230:	b.eq	41f244 <wcrtomb@plt+0x1a534>  // b.none
  41f234:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f238:	add	x0, x0, #0x420
  41f23c:	ldr	x0, [x0]
  41f240:	blr	x0
  41f244:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f248:	add	x0, x0, #0xf8
  41f24c:	bl	404c60 <gettext@plt>
  41f250:	mov	x2, x0
  41f254:	mov	w1, #0x0                   	// #0
  41f258:	mov	w0, #0x1                   	// #1
  41f25c:	bl	404100 <error@plt>
  41f260:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f264:	add	x0, x0, #0xdb0
  41f268:	mov	w1, #0x2                   	// #2
  41f26c:	str	w1, [x0]
  41f270:	ldr	x0, [sp, #40]
  41f274:	bl	406138 <wcrtomb@plt+0x1428>
  41f278:	str	x0, [sp, #64]
  41f27c:	ldr	x1, [sp, #64]
  41f280:	ldr	x0, [sp, #72]
  41f284:	cmp	x1, x0
  41f288:	b.ls	41f294 <wcrtomb@plt+0x1a584>  // b.plast
  41f28c:	ldr	x0, [sp, #72]
  41f290:	str	x0, [sp, #64]
  41f294:	ldr	x0, [sp, #40]
  41f298:	ldr	x2, [sp, #64]
  41f29c:	mov	x1, x0
  41f2a0:	ldr	x0, [sp, #56]
  41f2a4:	bl	404020 <memcpy@plt>
  41f2a8:	ldr	x1, [sp, #56]
  41f2ac:	ldr	x0, [sp, #64]
  41f2b0:	add	x0, x1, x0
  41f2b4:	str	x0, [sp, #56]
  41f2b8:	ldr	x0, [sp, #64]
  41f2bc:	sub	x0, x0, #0x1
  41f2c0:	ldr	x1, [sp, #40]
  41f2c4:	add	x0, x1, x0
  41f2c8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  41f2cc:	ldr	x1, [sp, #72]
  41f2d0:	ldr	x0, [sp, #64]
  41f2d4:	sub	x0, x1, x0
  41f2d8:	str	x0, [sp, #72]
  41f2dc:	ldr	x0, [sp, #72]
  41f2e0:	cmp	x0, #0x0
  41f2e4:	b.ne	41f204 <wcrtomb@plt+0x1a4f4>  // b.any
  41f2e8:	bl	4051bc <wcrtomb@plt+0x4ac>
  41f2ec:	ldr	x0, [sp, #24]
  41f2f0:	ldr	x1, [sp, #48]
  41f2f4:	str	x1, [x0, #384]
  41f2f8:	ldr	x0, [sp, #24]
  41f2fc:	mov	w1, #0x1                   	// #1
  41f300:	strb	w1, [x0, #377]
  41f304:	nop
  41f308:	ldp	x29, x30, [sp], #80
  41f30c:	ret
  41f310:	stp	x29, x30, [sp, #-32]!
  41f314:	mov	x29, sp
  41f318:	str	x0, [sp, #24]
  41f31c:	ldr	x0, [sp, #24]
  41f320:	ldrb	w0, [x0, #376]
  41f324:	cmp	w0, #0x0
  41f328:	b.eq	41f344 <wcrtomb@plt+0x1a634>  // b.none
  41f32c:	ldr	x0, [sp, #24]
  41f330:	ldr	x0, [x0, #384]
  41f334:	cmp	x0, #0x0
  41f338:	b.ne	41f344 <wcrtomb@plt+0x1a634>  // b.any
  41f33c:	ldr	x0, [sp, #24]
  41f340:	bl	41f1bc <wcrtomb@plt+0x1a4ac>
  41f344:	ldr	x0, [sp, #24]
  41f348:	ldrb	w0, [x0, #376]
  41f34c:	ldp	x29, x30, [sp], #32
  41f350:	ret
  41f354:	stp	x29, x30, [sp, #-64]!
  41f358:	mov	x29, sp
  41f35c:	str	x0, [sp, #24]
  41f360:	str	wzr, [sp, #52]
  41f364:	str	wzr, [sp, #48]
  41f368:	ldr	x0, [sp, #24]
  41f36c:	str	x0, [sp, #56]
  41f370:	b	41f668 <wcrtomb@plt+0x1a958>
  41f374:	ldr	w0, [sp, #48]
  41f378:	cmp	w0, #0x0
  41f37c:	b.eq	41f40c <wcrtomb@plt+0x1a6fc>  // b.none
  41f380:	ldr	x0, [sp, #56]
  41f384:	ldrb	w0, [x0]
  41f388:	mov	w1, w0
  41f38c:	ldr	w0, [sp, #48]
  41f390:	cmp	w0, w1
  41f394:	b.eq	41f40c <wcrtomb@plt+0x1a6fc>  // b.none
  41f398:	ldr	x0, [sp, #56]
  41f39c:	ldrb	w0, [x0]
  41f3a0:	strb	w0, [sp, #47]
  41f3a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f3a8:	add	x0, x0, #0x420
  41f3ac:	ldr	x0, [x0]
  41f3b0:	cmp	x0, #0x0
  41f3b4:	b.eq	41f3c8 <wcrtomb@plt+0x1a6b8>  // b.none
  41f3b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f3bc:	add	x0, x0, #0x420
  41f3c0:	ldr	x0, [x0]
  41f3c4:	blr	x0
  41f3c8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f3cc:	add	x0, x0, #0x118
  41f3d0:	bl	404c60 <gettext@plt>
  41f3d4:	mov	x1, x0
  41f3d8:	ldrb	w0, [sp, #47]
  41f3dc:	mov	w4, w0
  41f3e0:	ldr	w3, [sp, #48]
  41f3e4:	mov	x2, x1
  41f3e8:	mov	w1, #0x0                   	// #0
  41f3ec:	mov	w0, #0x0                   	// #0
  41f3f0:	bl	404100 <error@plt>
  41f3f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f3f8:	add	x0, x0, #0xdb0
  41f3fc:	mov	w1, #0x2                   	// #2
  41f400:	str	w1, [x0]
  41f404:	mov	w0, #0x0                   	// #0
  41f408:	b	41f748 <wcrtomb@plt+0x1aa38>
  41f40c:	ldr	x0, [sp, #56]
  41f410:	ldrb	w0, [x0]
  41f414:	cmp	w0, #0x59
  41f418:	b.eq	41f644 <wcrtomb@plt+0x1a934>  // b.none
  41f41c:	cmp	w0, #0x59
  41f420:	b.gt	41f64c <wcrtomb@plt+0x1a93c>
  41f424:	cmp	w0, #0x58
  41f428:	b.eq	41f468 <wcrtomb@plt+0x1a758>  // b.none
  41f42c:	cmp	w0, #0x58
  41f430:	b.gt	41f64c <wcrtomb@plt+0x1a93c>
  41f434:	cmp	w0, #0x54
  41f438:	b.eq	41f560 <wcrtomb@plt+0x1a850>  // b.none
  41f43c:	cmp	w0, #0x54
  41f440:	b.gt	41f64c <wcrtomb@plt+0x1a93c>
  41f444:	cmp	w0, #0x52
  41f448:	b.eq	41f4d8 <wcrtomb@plt+0x1a7c8>  // b.none
  41f44c:	cmp	w0, #0x52
  41f450:	b.gt	41f64c <wcrtomb@plt+0x1a93c>
  41f454:	cmp	w0, #0x44
  41f458:	b.eq	41f644 <wcrtomb@plt+0x1a934>  // b.none
  41f45c:	cmp	w0, #0x4e
  41f460:	b.eq	41f644 <wcrtomb@plt+0x1a934>  // b.none
  41f464:	b	41f64c <wcrtomb@plt+0x1a93c>
  41f468:	ldr	w0, [sp, #52]
  41f46c:	cmp	w0, #0x0
  41f470:	b.eq	41f4cc <wcrtomb@plt+0x1a7bc>  // b.none
  41f474:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f478:	add	x0, x0, #0x420
  41f47c:	ldr	x0, [x0]
  41f480:	cmp	x0, #0x0
  41f484:	b.eq	41f498 <wcrtomb@plt+0x1a788>  // b.none
  41f488:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f48c:	add	x0, x0, #0x420
  41f490:	ldr	x0, [x0]
  41f494:	blr	x0
  41f498:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f49c:	add	x0, x0, #0x148
  41f4a0:	bl	404c60 <gettext@plt>
  41f4a4:	mov	x2, x0
  41f4a8:	mov	w1, #0x0                   	// #0
  41f4ac:	mov	w0, #0x0                   	// #0
  41f4b0:	bl	404100 <error@plt>
  41f4b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f4b8:	add	x0, x0, #0xdb0
  41f4bc:	mov	w1, #0x2                   	// #2
  41f4c0:	str	w1, [x0]
  41f4c4:	mov	w0, #0x0                   	// #0
  41f4c8:	b	41f748 <wcrtomb@plt+0x1aa38>
  41f4cc:	mov	w0, #0x1                   	// #1
  41f4d0:	str	w0, [sp, #52]
  41f4d4:	b	41f650 <wcrtomb@plt+0x1a940>
  41f4d8:	ldr	x0, [sp, #56]
  41f4dc:	add	x0, x0, #0x1
  41f4e0:	ldrb	w0, [x0]
  41f4e4:	cmp	w0, #0x0
  41f4e8:	b.ne	41f554 <wcrtomb@plt+0x1a844>  // b.any
  41f4ec:	ldr	w0, [sp, #52]
  41f4f0:	cmp	w0, #0x0
  41f4f4:	b.ne	41f550 <wcrtomb@plt+0x1a840>  // b.any
  41f4f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f4fc:	add	x0, x0, #0x420
  41f500:	ldr	x0, [x0]
  41f504:	cmp	x0, #0x0
  41f508:	b.eq	41f51c <wcrtomb@plt+0x1a80c>  // b.none
  41f50c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f510:	add	x0, x0, #0x420
  41f514:	ldr	x0, [x0]
  41f518:	blr	x0
  41f51c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f520:	add	x0, x0, #0x170
  41f524:	bl	404c60 <gettext@plt>
  41f528:	mov	x2, x0
  41f52c:	mov	w1, #0x0                   	// #0
  41f530:	mov	w0, #0x0                   	// #0
  41f534:	bl	404100 <error@plt>
  41f538:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f53c:	add	x0, x0, #0xdb0
  41f540:	mov	w1, #0x2                   	// #2
  41f544:	str	w1, [x0]
  41f548:	mov	w0, #0x0                   	// #0
  41f54c:	b	41f748 <wcrtomb@plt+0x1aa38>
  41f550:	str	wzr, [sp, #52]
  41f554:	mov	w0, #0x54                  	// #84
  41f558:	str	w0, [sp, #48]
  41f55c:	b	41f650 <wcrtomb@plt+0x1a940>
  41f560:	ldr	w0, [sp, #48]
  41f564:	cmp	w0, #0x54
  41f568:	b.eq	41f5c4 <wcrtomb@plt+0x1a8b4>  // b.none
  41f56c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f570:	add	x0, x0, #0x420
  41f574:	ldr	x0, [x0]
  41f578:	cmp	x0, #0x0
  41f57c:	b.eq	41f590 <wcrtomb@plt+0x1a880>  // b.none
  41f580:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f584:	add	x0, x0, #0x420
  41f588:	ldr	x0, [x0]
  41f58c:	blr	x0
  41f590:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f594:	add	x0, x0, #0x198
  41f598:	bl	404c60 <gettext@plt>
  41f59c:	mov	x2, x0
  41f5a0:	mov	w1, #0x0                   	// #0
  41f5a4:	mov	w0, #0x0                   	// #0
  41f5a8:	bl	404100 <error@plt>
  41f5ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f5b0:	add	x0, x0, #0xdb0
  41f5b4:	mov	w1, #0x2                   	// #2
  41f5b8:	str	w1, [x0]
  41f5bc:	mov	w0, #0x0                   	// #0
  41f5c0:	b	41f748 <wcrtomb@plt+0x1aa38>
  41f5c4:	ldr	x0, [sp, #56]
  41f5c8:	add	x0, x0, #0x1
  41f5cc:	ldrb	w0, [x0]
  41f5d0:	cmp	w0, #0x0
  41f5d4:	b.ne	41f63c <wcrtomb@plt+0x1a92c>  // b.any
  41f5d8:	ldr	w0, [sp, #52]
  41f5dc:	cmp	w0, #0x0
  41f5e0:	b.ne	41f63c <wcrtomb@plt+0x1a92c>  // b.any
  41f5e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f5e8:	add	x0, x0, #0x420
  41f5ec:	ldr	x0, [x0]
  41f5f0:	cmp	x0, #0x0
  41f5f4:	b.eq	41f608 <wcrtomb@plt+0x1a8f8>  // b.none
  41f5f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f5fc:	add	x0, x0, #0x420
  41f600:	ldr	x0, [x0]
  41f604:	blr	x0
  41f608:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f60c:	add	x0, x0, #0x1c8
  41f610:	bl	404c60 <gettext@plt>
  41f614:	mov	x2, x0
  41f618:	mov	w1, #0x0                   	// #0
  41f61c:	mov	w0, #0x0                   	// #0
  41f620:	bl	404100 <error@plt>
  41f624:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f628:	add	x0, x0, #0xdb0
  41f62c:	mov	w1, #0x2                   	// #2
  41f630:	str	w1, [x0]
  41f634:	mov	w0, #0x0                   	// #0
  41f638:	b	41f748 <wcrtomb@plt+0x1aa38>
  41f63c:	str	wzr, [sp, #48]
  41f640:	b	41f650 <wcrtomb@plt+0x1a940>
  41f644:	nop
  41f648:	b	41f650 <wcrtomb@plt+0x1a940>
  41f64c:	nop
  41f650:	ldr	x0, [sp, #56]
  41f654:	bl	4040b0 <strlen@plt>
  41f658:	add	x0, x0, #0x1
  41f65c:	ldr	x1, [sp, #56]
  41f660:	add	x0, x1, x0
  41f664:	str	x0, [sp, #56]
  41f668:	ldr	x0, [sp, #56]
  41f66c:	ldrb	w0, [x0]
  41f670:	cmp	w0, #0x0
  41f674:	b.ne	41f374 <wcrtomb@plt+0x1a664>  // b.any
  41f678:	ldr	w0, [sp, #48]
  41f67c:	cmp	w0, #0x0
  41f680:	b.eq	41f6e0 <wcrtomb@plt+0x1a9d0>  // b.none
  41f684:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f688:	add	x0, x0, #0x420
  41f68c:	ldr	x0, [x0]
  41f690:	cmp	x0, #0x0
  41f694:	b.eq	41f6a8 <wcrtomb@plt+0x1a998>  // b.none
  41f698:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f69c:	add	x0, x0, #0x420
  41f6a0:	ldr	x0, [x0]
  41f6a4:	blr	x0
  41f6a8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f6ac:	add	x0, x0, #0x1f0
  41f6b0:	bl	404c60 <gettext@plt>
  41f6b4:	ldr	w3, [sp, #48]
  41f6b8:	mov	x2, x0
  41f6bc:	mov	w1, #0x0                   	// #0
  41f6c0:	mov	w0, #0x0                   	// #0
  41f6c4:	bl	404100 <error@plt>
  41f6c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f6cc:	add	x0, x0, #0xdb0
  41f6d0:	mov	w1, #0x2                   	// #2
  41f6d4:	str	w1, [x0]
  41f6d8:	mov	w0, #0x0                   	// #0
  41f6dc:	b	41f748 <wcrtomb@plt+0x1aa38>
  41f6e0:	ldr	w0, [sp, #52]
  41f6e4:	cmp	w0, #0x0
  41f6e8:	b.eq	41f744 <wcrtomb@plt+0x1aa34>  // b.none
  41f6ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f6f0:	add	x0, x0, #0x24c
  41f6f4:	ldr	w0, [x0]
  41f6f8:	and	w0, w0, #0x2
  41f6fc:	cmp	w0, #0x0
  41f700:	b.eq	41f744 <wcrtomb@plt+0x1aa34>  // b.none
  41f704:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f708:	add	x0, x0, #0x420
  41f70c:	ldr	x0, [x0]
  41f710:	cmp	x0, #0x0
  41f714:	b.eq	41f728 <wcrtomb@plt+0x1aa18>  // b.none
  41f718:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f71c:	add	x0, x0, #0x420
  41f720:	ldr	x0, [x0]
  41f724:	blr	x0
  41f728:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f72c:	add	x0, x0, #0x228
  41f730:	bl	404c60 <gettext@plt>
  41f734:	mov	x2, x0
  41f738:	mov	w1, #0x0                   	// #0
  41f73c:	mov	w0, #0x0                   	// #0
  41f740:	bl	404100 <error@plt>
  41f744:	mov	w0, #0x1                   	// #1
  41f748:	ldp	x29, x30, [sp], #64
  41f74c:	ret
  41f750:	stp	x29, x30, [sp, #-288]!
  41f754:	mov	x29, sp
  41f758:	stp	x19, x20, [sp, #16]
  41f75c:	str	x21, [sp, #32]
  41f760:	str	x0, [sp, #56]
  41f764:	str	xzr, [sp, #256]
  41f768:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f76c:	add	x0, x0, #0x90
  41f770:	bl	41f310 <wcrtomb@plt+0x1a600>
  41f774:	and	w0, w0, #0xff
  41f778:	eor	w0, w0, #0x1
  41f77c:	and	w0, w0, #0xff
  41f780:	cmp	w0, #0x0
  41f784:	b.eq	41f790 <wcrtomb@plt+0x1aa80>  // b.none
  41f788:	mov	w0, #0x0                   	// #0
  41f78c:	b	41fd3c <wcrtomb@plt+0x1b02c>
  41f790:	mov	w1, #0x0                   	// #0
  41f794:	ldr	x0, [sp, #56]
  41f798:	bl	4265d4 <wcrtomb@plt+0x218c4>
  41f79c:	str	x0, [sp, #232]
  41f7a0:	ldr	x0, [sp, #232]
  41f7a4:	cmp	x0, #0x0
  41f7a8:	b.ne	41f7b4 <wcrtomb@plt+0x1aaa4>  // b.any
  41f7ac:	mov	w0, #0x0                   	// #0
  41f7b0:	b	41fd3c <wcrtomb@plt+0x1b02c>
  41f7b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f7b8:	add	x0, x0, #0x90
  41f7bc:	ldr	x0, [x0, #384]
  41f7c0:	bl	41f354 <wcrtomb@plt+0x1a644>
  41f7c4:	and	w0, w0, #0xff
  41f7c8:	eor	w0, w0, #0x1
  41f7cc:	and	w0, w0, #0xff
  41f7d0:	cmp	w0, #0x0
  41f7d4:	b.eq	41f7e0 <wcrtomb@plt+0x1aad0>  // b.none
  41f7d8:	mov	w0, #0x0                   	// #0
  41f7dc:	b	41fd3c <wcrtomb@plt+0x1b02c>
  41f7e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f7e4:	add	x0, x0, #0x90
  41f7e8:	ldr	x0, [x0, #384]
  41f7ec:	str	x0, [sp, #272]
  41f7f0:	b	41fa30 <wcrtomb@plt+0x1ad20>
  41f7f4:	ldr	x0, [sp, #272]
  41f7f8:	ldrb	w0, [x0]
  41f7fc:	cmp	w0, #0x58
  41f800:	b.ne	41f90c <wcrtomb@plt+0x1abfc>  // b.any
  41f804:	ldr	x0, [sp, #272]
  41f808:	add	x0, x0, #0x1
  41f80c:	bl	4040b0 <strlen@plt>
  41f810:	str	x0, [sp, #200]
  41f814:	ldr	x0, [sp, #200]
  41f818:	add	x0, x0, #0xc
  41f81c:	mov	x1, x0
  41f820:	ldr	x0, [sp, #256]
  41f824:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  41f828:	str	x0, [sp, #256]
  41f82c:	ldr	x0, [sp, #272]
  41f830:	add	x0, x0, #0x1
  41f834:	ldr	x2, [sp, #200]
  41f838:	mov	x1, x0
  41f83c:	ldr	x0, [sp, #256]
  41f840:	bl	404020 <memcpy@plt>
  41f844:	ldr	x1, [sp, #256]
  41f848:	ldr	x0, [sp, #200]
  41f84c:	add	x0, x1, x0
  41f850:	mov	w1, #0x2f                  	// #47
  41f854:	strb	w1, [x0]
  41f858:	ldr	x0, [sp, #200]
  41f85c:	add	x0, x0, #0x1
  41f860:	ldr	x1, [sp, #256]
  41f864:	add	x3, x1, x0
  41f868:	mov	x2, #0xb                   	// #11
  41f86c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f870:	add	x1, x0, #0x250
  41f874:	mov	x0, x3
  41f878:	bl	404020 <memcpy@plt>
  41f87c:	ldr	x0, [sp, #256]
  41f880:	bl	404700 <mkdtemp@plt>
  41f884:	cmp	x0, #0x0
  41f888:	b.ne	41fa18 <wcrtomb@plt+0x1ad08>  // b.any
  41f88c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f890:	add	x0, x0, #0x420
  41f894:	ldr	x0, [x0]
  41f898:	cmp	x0, #0x0
  41f89c:	b.eq	41f8b0 <wcrtomb@plt+0x1aba0>  // b.none
  41f8a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f8a4:	add	x0, x0, #0x420
  41f8a8:	ldr	x0, [x0]
  41f8ac:	blr	x0
  41f8b0:	bl	404bc0 <__errno_location@plt>
  41f8b4:	ldr	w19, [x0]
  41f8b8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41f8bc:	add	x0, x0, #0x260
  41f8c0:	bl	404c60 <gettext@plt>
  41f8c4:	mov	x20, x0
  41f8c8:	ldr	x0, [sp, #256]
  41f8cc:	bl	459f38 <argp_usage@@Base+0x10e4c>
  41f8d0:	mov	x3, x0
  41f8d4:	mov	x2, x20
  41f8d8:	mov	w1, w19
  41f8dc:	mov	w0, #0x0                   	// #0
  41f8e0:	bl	404100 <error@plt>
  41f8e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41f8e8:	add	x0, x0, #0xdb0
  41f8ec:	mov	w1, #0x2                   	// #2
  41f8f0:	str	w1, [x0]
  41f8f4:	ldr	x0, [sp, #256]
  41f8f8:	bl	404880 <free@plt>
  41f8fc:	ldr	x0, [sp, #232]
  41f900:	bl	404880 <free@plt>
  41f904:	mov	w0, #0x0                   	// #0
  41f908:	b	41fd3c <wcrtomb@plt+0x1b02c>
  41f90c:	ldr	x0, [sp, #272]
  41f910:	ldrb	w0, [x0]
  41f914:	cmp	w0, #0x52
  41f918:	b.ne	41fa18 <wcrtomb@plt+0x1ad08>  // b.any
  41f91c:	ldr	x0, [sp, #272]
  41f920:	add	x0, x0, #0x1
  41f924:	str	x0, [sp, #248]
  41f928:	ldr	x0, [sp, #272]
  41f92c:	bl	4040b0 <strlen@plt>
  41f930:	add	x0, x0, #0x1
  41f934:	ldr	x1, [sp, #272]
  41f938:	add	x0, x1, x0
  41f93c:	str	x0, [sp, #272]
  41f940:	ldr	x0, [sp, #272]
  41f944:	add	x0, x0, #0x1
  41f948:	str	x0, [sp, #240]
  41f94c:	ldr	x0, [sp, #248]
  41f950:	ldrb	w0, [x0]
  41f954:	cmp	w0, #0x0
  41f958:	b.eq	41f97c <wcrtomb@plt+0x1ac6c>  // b.none
  41f95c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f960:	add	x0, x0, #0x3e8
  41f964:	ldrb	w0, [x0]
  41f968:	mov	w2, w0
  41f96c:	mov	w1, #0x0                   	// #0
  41f970:	ldr	x0, [sp, #248]
  41f974:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41f978:	str	x0, [sp, #248]
  41f97c:	ldr	x0, [sp, #240]
  41f980:	ldrb	w0, [x0]
  41f984:	cmp	w0, #0x0
  41f988:	b.eq	41f9ac <wcrtomb@plt+0x1ac9c>  // b.none
  41f98c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41f990:	add	x0, x0, #0x3e8
  41f994:	ldrb	w0, [x0]
  41f998:	mov	w2, w0
  41f99c:	mov	w1, #0x0                   	// #0
  41f9a0:	ldr	x0, [sp, #240]
  41f9a4:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41f9a8:	str	x0, [sp, #240]
  41f9ac:	ldr	x0, [sp, #248]
  41f9b0:	ldrb	w0, [x0]
  41f9b4:	cmp	w0, #0x0
  41f9b8:	b.ne	41f9c8 <wcrtomb@plt+0x1acb8>  // b.any
  41f9bc:	ldr	x0, [sp, #256]
  41f9c0:	str	x0, [sp, #248]
  41f9c4:	b	41f9e0 <wcrtomb@plt+0x1acd0>
  41f9c8:	ldr	x0, [sp, #240]
  41f9cc:	ldrb	w0, [x0]
  41f9d0:	cmp	w0, #0x0
  41f9d4:	b.ne	41f9e0 <wcrtomb@plt+0x1acd0>  // b.any
  41f9d8:	ldr	x0, [sp, #256]
  41f9dc:	str	x0, [sp, #240]
  41f9e0:	ldr	x1, [sp, #240]
  41f9e4:	ldr	x0, [sp, #248]
  41f9e8:	bl	41717c <wcrtomb@plt+0x1246c>
  41f9ec:	and	w0, w0, #0xff
  41f9f0:	eor	w0, w0, #0x1
  41f9f4:	and	w0, w0, #0xff
  41f9f8:	cmp	w0, #0x0
  41f9fc:	b.eq	41fa18 <wcrtomb@plt+0x1ad08>  // b.none
  41fa00:	ldr	x0, [sp, #256]
  41fa04:	bl	404880 <free@plt>
  41fa08:	ldr	x0, [sp, #232]
  41fa0c:	bl	404880 <free@plt>
  41fa10:	mov	w0, #0x0                   	// #0
  41fa14:	b	41fd3c <wcrtomb@plt+0x1b02c>
  41fa18:	ldr	x0, [sp, #272]
  41fa1c:	bl	4040b0 <strlen@plt>
  41fa20:	add	x0, x0, #0x1
  41fa24:	ldr	x1, [sp, #272]
  41fa28:	add	x0, x1, x0
  41fa2c:	str	x0, [sp, #272]
  41fa30:	ldr	x0, [sp, #272]
  41fa34:	ldrb	w0, [x0]
  41fa38:	cmp	w0, #0x0
  41fa3c:	b.ne	41f7f4 <wcrtomb@plt+0x1aae4>  // b.any
  41fa40:	ldr	x0, [sp, #256]
  41fa44:	bl	404880 <free@plt>
  41fa48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fa4c:	add	x0, x0, #0x90
  41fa50:	ldr	x0, [x0, #384]
  41fa54:	bl	41b5fc <wcrtomb@plt+0x168ec>
  41fa58:	str	x0, [sp, #224]
  41fa5c:	str	xzr, [sp, #264]
  41fa60:	ldr	x0, [sp, #232]
  41fa64:	str	x0, [sp, #280]
  41fa68:	b	41fd10 <wcrtomb@plt+0x1b000>
  41fa6c:	ldr	x0, [sp, #264]
  41fa70:	bl	404880 <free@plt>
  41fa74:	ldr	x1, [sp, #280]
  41fa78:	ldr	x0, [sp, #56]
  41fa7c:	bl	42a0b4 <wcrtomb@plt+0x253a4>
  41fa80:	str	x0, [sp, #264]
  41fa84:	add	x0, sp, #0x48
  41fa88:	mov	x1, x0
  41fa8c:	ldr	x0, [sp, #264]
  41fa90:	bl	4255c4 <wcrtomb@plt+0x208b4>
  41fa94:	cmp	w0, #0x0
  41fa98:	b.eq	41fb08 <wcrtomb@plt+0x1adf8>  // b.none
  41fa9c:	bl	404bc0 <__errno_location@plt>
  41faa0:	ldr	w0, [x0]
  41faa4:	cmp	w0, #0x2
  41faa8:	b.eq	41fcf4 <wcrtomb@plt+0x1afe4>  // b.none
  41faac:	ldr	x0, [sp, #264]
  41fab0:	bl	4260e0 <wcrtomb@plt+0x213d0>
  41fab4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fab8:	add	x0, x0, #0x420
  41fabc:	ldr	x0, [x0]
  41fac0:	cmp	x0, #0x0
  41fac4:	b.eq	41fad8 <wcrtomb@plt+0x1adc8>  // b.none
  41fac8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41facc:	add	x0, x0, #0x420
  41fad0:	ldr	x0, [x0]
  41fad4:	blr	x0
  41fad8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41fadc:	add	x0, x0, #0x298
  41fae0:	bl	404c60 <gettext@plt>
  41fae4:	mov	x19, x0
  41fae8:	ldr	x0, [sp, #264]
  41faec:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41faf0:	mov	x3, x0
  41faf4:	mov	x2, x19
  41faf8:	mov	w1, #0x0                   	// #0
  41fafc:	mov	w0, #0x0                   	// #0
  41fb00:	bl	404100 <error@plt>
  41fb04:	b	41fcf4 <wcrtomb@plt+0x1afe4>
  41fb08:	ldr	x1, [sp, #280]
  41fb0c:	ldr	x0, [sp, #224]
  41fb10:	bl	41b690 <wcrtomb@plt+0x16980>
  41fb14:	str	x0, [sp, #216]
  41fb18:	ldr	x0, [sp, #216]
  41fb1c:	cmp	x0, #0x0
  41fb20:	b.eq	41fb64 <wcrtomb@plt+0x1ae54>  // b.none
  41fb24:	ldr	x0, [sp, #216]
  41fb28:	ldrb	w0, [x0]
  41fb2c:	cmp	w0, #0x44
  41fb30:	b.ne	41fb44 <wcrtomb@plt+0x1ae34>  // b.any
  41fb34:	ldr	w0, [sp, #88]
  41fb38:	and	w0, w0, #0xf000
  41fb3c:	cmp	w0, #0x4, lsl #12
  41fb40:	b.ne	41fb64 <wcrtomb@plt+0x1ae54>  // b.any
  41fb44:	ldr	x0, [sp, #216]
  41fb48:	ldrb	w0, [x0]
  41fb4c:	cmp	w0, #0x59
  41fb50:	b.ne	41fcf8 <wcrtomb@plt+0x1afe8>  // b.any
  41fb54:	ldr	w0, [sp, #88]
  41fb58:	and	w0, w0, #0xf000
  41fb5c:	cmp	w0, #0x4, lsl #12
  41fb60:	b.ne	41fcf8 <wcrtomb@plt+0x1afe8>  // b.any
  41fb64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fb68:	add	x0, x0, #0x85
  41fb6c:	ldrb	w0, [x0]
  41fb70:	cmp	w0, #0x0
  41fb74:	b.eq	41fbe4 <wcrtomb@plt+0x1aed4>  // b.none
  41fb78:	ldr	x1, [sp, #72]
  41fb7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fb80:	add	x0, x0, #0x368
  41fb84:	ldr	x0, [x0]
  41fb88:	cmp	x1, x0
  41fb8c:	b.eq	41fbe4 <wcrtomb@plt+0x1aed4>  // b.none
  41fb90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fb94:	add	x0, x0, #0x420
  41fb98:	ldr	x0, [x0]
  41fb9c:	cmp	x0, #0x0
  41fba0:	b.eq	41fbb4 <wcrtomb@plt+0x1aea4>  // b.none
  41fba4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fba8:	add	x0, x0, #0x420
  41fbac:	ldr	x0, [x0]
  41fbb0:	blr	x0
  41fbb4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41fbb8:	add	x0, x0, #0x2c8
  41fbbc:	bl	404c60 <gettext@plt>
  41fbc0:	mov	x19, x0
  41fbc4:	ldr	x0, [sp, #264]
  41fbc8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41fbcc:	mov	x3, x0
  41fbd0:	mov	x2, x19
  41fbd4:	mov	w1, #0x0                   	// #0
  41fbd8:	mov	w0, #0x0                   	// #0
  41fbdc:	bl	404100 <error@plt>
  41fbe0:	b	41fcf8 <wcrtomb@plt+0x1afe8>
  41fbe4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fbe8:	add	x0, x0, #0x280
  41fbec:	ldrb	w0, [x0]
  41fbf0:	eor	w0, w0, #0x1
  41fbf4:	and	w0, w0, #0xff
  41fbf8:	cmp	w0, #0x0
  41fbfc:	b.ne	41fc18 <wcrtomb@plt+0x1af08>  // b.any
  41fc00:	ldr	x1, [sp, #264]
  41fc04:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41fc08:	add	x0, x0, #0x300
  41fc0c:	bl	42fab8 <wcrtomb@plt+0x2ada8>
  41fc10:	cmp	w0, #0x0
  41fc14:	b.eq	41fcf8 <wcrtomb@plt+0x1afe8>  // b.none
  41fc18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fc1c:	add	x0, x0, #0x2b4
  41fc20:	ldr	w0, [x0]
  41fc24:	cmp	w0, #0x0
  41fc28:	b.eq	41fc70 <wcrtomb@plt+0x1af60>  // b.none
  41fc2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fc30:	add	x0, x0, #0xf88
  41fc34:	ldr	x19, [x0]
  41fc38:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41fc3c:	add	x0, x0, #0x308
  41fc40:	bl	404c60 <gettext@plt>
  41fc44:	mov	x21, x0
  41fc48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fc4c:	add	x0, x0, #0xe08
  41fc50:	ldr	x20, [x0]
  41fc54:	ldr	x0, [sp, #264]
  41fc58:	bl	459f38 <argp_usage@@Base+0x10e4c>
  41fc5c:	mov	x3, x0
  41fc60:	mov	x2, x20
  41fc64:	mov	x1, x21
  41fc68:	mov	x0, x19
  41fc6c:	bl	404c90 <fprintf@plt>
  41fc70:	mov	w1, #0x1                   	// #1
  41fc74:	ldr	x0, [sp, #264]
  41fc78:	bl	424ec0 <wcrtomb@plt+0x201b0>
  41fc7c:	cmp	w0, #0x0
  41fc80:	b.ne	41fcf8 <wcrtomb@plt+0x1afe8>  // b.any
  41fc84:	bl	404bc0 <__errno_location@plt>
  41fc88:	ldr	w0, [x0]
  41fc8c:	str	w0, [sp, #212]
  41fc90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fc94:	add	x0, x0, #0x420
  41fc98:	ldr	x0, [x0]
  41fc9c:	cmp	x0, #0x0
  41fca0:	b.eq	41fcb4 <wcrtomb@plt+0x1afa4>  // b.none
  41fca4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fca8:	add	x0, x0, #0x420
  41fcac:	ldr	x0, [x0]
  41fcb0:	blr	x0
  41fcb4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41fcb8:	add	x0, x0, #0x320
  41fcbc:	bl	404c60 <gettext@plt>
  41fcc0:	mov	x19, x0
  41fcc4:	ldr	x0, [sp, #264]
  41fcc8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  41fccc:	mov	x3, x0
  41fcd0:	mov	x2, x19
  41fcd4:	ldr	w1, [sp, #212]
  41fcd8:	mov	w0, #0x0                   	// #0
  41fcdc:	bl	404100 <error@plt>
  41fce0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fce4:	add	x0, x0, #0xdb0
  41fce8:	mov	w1, #0x2                   	// #2
  41fcec:	str	w1, [x0]
  41fcf0:	b	41fcf8 <wcrtomb@plt+0x1afe8>
  41fcf4:	nop
  41fcf8:	ldr	x0, [sp, #280]
  41fcfc:	bl	4040b0 <strlen@plt>
  41fd00:	add	x0, x0, #0x1
  41fd04:	ldr	x1, [sp, #280]
  41fd08:	add	x0, x1, x0
  41fd0c:	str	x0, [sp, #280]
  41fd10:	ldr	x0, [sp, #280]
  41fd14:	ldrb	w0, [x0]
  41fd18:	cmp	w0, #0x0
  41fd1c:	b.ne	41fa6c <wcrtomb@plt+0x1ad5c>  // b.any
  41fd20:	ldr	x0, [sp, #264]
  41fd24:	bl	404880 <free@plt>
  41fd28:	ldr	x0, [sp, #224]
  41fd2c:	bl	41b620 <wcrtomb@plt+0x16910>
  41fd30:	ldr	x0, [sp, #232]
  41fd34:	bl	404880 <free@plt>
  41fd38:	mov	w0, #0x1                   	// #1
  41fd3c:	ldp	x19, x20, [sp, #16]
  41fd40:	ldr	x21, [sp, #32]
  41fd44:	ldp	x29, x30, [sp], #288
  41fd48:	ret
  41fd4c:	stp	x29, x30, [sp, #-32]!
  41fd50:	mov	x29, sp
  41fd54:	str	x0, [sp, #24]
  41fd58:	ldr	x0, [sp, #24]
  41fd5c:	bl	41f750 <wcrtomb@plt+0x1aa40>
  41fd60:	and	w0, w0, #0xff
  41fd64:	eor	w0, w0, #0x1
  41fd68:	and	w0, w0, #0xff
  41fd6c:	cmp	w0, #0x0
  41fd70:	b.eq	41fd78 <wcrtomb@plt+0x1b068>  // b.none
  41fd74:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  41fd78:	nop
  41fd7c:	ldp	x29, x30, [sp], #32
  41fd80:	ret
  41fd84:	stp	x29, x30, [sp, #-48]!
  41fd88:	mov	x29, sp
  41fd8c:	str	x0, [sp, #24]
  41fd90:	str	x1, [sp, #16]
  41fd94:	str	wzr, [sp, #44]
  41fd98:	b	41fec4 <wcrtomb@plt+0x1b1b4>
  41fd9c:	ldr	x0, [sp, #24]
  41fda0:	ldrb	w0, [x0]
  41fda4:	cmp	w0, #0x0
  41fda8:	b.eq	41fe50 <wcrtomb@plt+0x1b140>  // b.none
  41fdac:	cmp	w0, #0x0
  41fdb0:	b.lt	41fe88 <wcrtomb@plt+0x1b178>  // b.tstop
  41fdb4:	cmp	w0, #0x59
  41fdb8:	b.gt	41fe88 <wcrtomb@plt+0x1b178>
  41fdbc:	cmp	w0, #0x44
  41fdc0:	b.lt	41fe88 <wcrtomb@plt+0x1b178>  // b.tstop
  41fdc4:	sub	w0, w0, #0x44
  41fdc8:	mov	x1, #0x1                   	// #1
  41fdcc:	lsl	x1, x1, x0
  41fdd0:	mov	x0, #0x4401                	// #17409
  41fdd4:	movk	x0, #0x31, lsl #16
  41fdd8:	and	x0, x1, x0
  41fddc:	cmp	x0, #0x0
  41fde0:	cset	w0, ne  // ne = any
  41fde4:	and	w0, w0, #0xff
  41fde8:	cmp	w0, #0x0
  41fdec:	b.eq	41fe88 <wcrtomb@plt+0x1b178>  // b.none
  41fdf0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fdf4:	add	x0, x0, #0xf88
  41fdf8:	ldr	x1, [x0]
  41fdfc:	ldr	x0, [sp, #24]
  41fe00:	ldrb	w0, [x0]
  41fe04:	bl	404250 <fputc@plt>
  41fe08:	ldr	w0, [sp, #44]
  41fe0c:	cmp	w0, #0x0
  41fe10:	b.ne	41fe34 <wcrtomb@plt+0x1b124>  // b.any
  41fe14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fe18:	add	x0, x0, #0xf88
  41fe1c:	ldr	x0, [x0]
  41fe20:	mov	x1, x0
  41fe24:	mov	w0, #0x20                  	// #32
  41fe28:	bl	404250 <fputc@plt>
  41fe2c:	mov	w0, #0x1                   	// #1
  41fe30:	str	w0, [sp, #44]
  41fe34:	ldr	x0, [sp, #24]
  41fe38:	add	x0, x0, #0x1
  41fe3c:	str	x0, [sp, #24]
  41fe40:	ldr	x0, [sp, #16]
  41fe44:	sub	x0, x0, #0x1
  41fe48:	str	x0, [sp, #16]
  41fe4c:	b	41fec4 <wcrtomb@plt+0x1b1b4>
  41fe50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fe54:	add	x0, x0, #0xf88
  41fe58:	ldr	x0, [x0]
  41fe5c:	mov	x1, x0
  41fe60:	mov	w0, #0xa                   	// #10
  41fe64:	bl	404a40 <fputc_unlocked@plt>
  41fe68:	ldr	x0, [sp, #24]
  41fe6c:	add	x0, x0, #0x1
  41fe70:	str	x0, [sp, #24]
  41fe74:	ldr	x0, [sp, #16]
  41fe78:	sub	x0, x0, #0x1
  41fe7c:	str	x0, [sp, #16]
  41fe80:	str	wzr, [sp, #44]
  41fe84:	b	41fec4 <wcrtomb@plt+0x1b1b4>
  41fe88:	ldr	x0, [sp, #24]
  41fe8c:	ldrb	w0, [x0]
  41fe90:	mov	w2, w0
  41fe94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fe98:	add	x0, x0, #0xf88
  41fe9c:	ldr	x0, [x0]
  41fea0:	mov	x1, x0
  41fea4:	mov	w0, w2
  41fea8:	bl	404a40 <fputc_unlocked@plt>
  41feac:	ldr	x0, [sp, #24]
  41feb0:	add	x0, x0, #0x1
  41feb4:	str	x0, [sp, #24]
  41feb8:	ldr	x0, [sp, #16]
  41febc:	sub	x0, x0, #0x1
  41fec0:	str	x0, [sp, #16]
  41fec4:	ldr	x0, [sp, #16]
  41fec8:	cmp	x0, #0x0
  41fecc:	b.ne	41fd9c <wcrtomb@plt+0x1b08c>  // b.any
  41fed0:	nop
  41fed4:	nop
  41fed8:	ldp	x29, x30, [sp], #48
  41fedc:	ret
  41fee0:	stp	x29, x30, [sp, #-32]!
  41fee4:	mov	x29, sp
  41fee8:	mov	x2, #0x100                 	// #256
  41feec:	mov	w1, #0x40                  	// #64
  41fef0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41fef4:	add	x0, x0, #0x900
  41fef8:	bl	4044d0 <memset@plt>
  41fefc:	str	wzr, [sp, #28]
  41ff00:	b	41ff3c <wcrtomb@plt+0x1b22c>
  41ff04:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  41ff08:	add	x1, x0, #0x338
  41ff0c:	ldrsw	x0, [sp, #28]
  41ff10:	ldrb	w0, [x1, x0]
  41ff14:	mov	w3, w0
  41ff18:	ldr	w0, [sp, #28]
  41ff1c:	and	w2, w0, #0xff
  41ff20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  41ff24:	add	x1, x0, #0x900
  41ff28:	sxtw	x0, w3
  41ff2c:	strb	w2, [x1, x0]
  41ff30:	ldr	w0, [sp, #28]
  41ff34:	add	w0, w0, #0x1
  41ff38:	str	w0, [sp, #28]
  41ff3c:	ldr	w0, [sp, #28]
  41ff40:	cmp	w0, #0x3f
  41ff44:	b.le	41ff04 <wcrtomb@plt+0x1b1f4>
  41ff48:	nop
  41ff4c:	nop
  41ff50:	ldp	x29, x30, [sp], #32
  41ff54:	ret
  41ff58:	stp	x29, x30, [sp, #-48]!
  41ff5c:	mov	x29, sp
  41ff60:	str	x0, [sp, #24]
  41ff64:	str	x1, [sp, #16]
  41ff68:	ldr	x0, [sp, #16]
  41ff6c:	ldr	w0, [x0]
  41ff70:	str	w0, [sp, #36]
  41ff74:	ldr	w0, [sp, #36]
  41ff78:	cmp	w0, #0x4
  41ff7c:	b.eq	41ffa8 <wcrtomb@plt+0x1b298>  // b.none
  41ff80:	ldr	w0, [sp, #36]
  41ff84:	cmp	w0, #0x4
  41ff88:	b.gt	41fff8 <wcrtomb@plt+0x1b2e8>
  41ff8c:	ldr	w0, [sp, #36]
  41ff90:	cmp	w0, #0x1
  41ff94:	b.eq	41ffd4 <wcrtomb@plt+0x1b2c4>  // b.none
  41ff98:	ldr	w0, [sp, #36]
  41ff9c:	cmp	w0, #0x2
  41ffa0:	b.eq	41ffb0 <wcrtomb@plt+0x1b2a0>  // b.none
  41ffa4:	b	41fff8 <wcrtomb@plt+0x1b2e8>
  41ffa8:	ldr	x0, [sp, #24]
  41ffac:	b	420054 <wcrtomb@plt+0x1b344>
  41ffb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ffb4:	add	x0, x0, #0x3e8
  41ffb8:	ldrb	w0, [x0]
  41ffbc:	mov	w2, w0
  41ffc0:	mov	w1, #0x1                   	// #1
  41ffc4:	ldr	x0, [sp, #24]
  41ffc8:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41ffcc:	str	x0, [sp, #24]
  41ffd0:	b	41fff8 <wcrtomb@plt+0x1b2e8>
  41ffd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41ffd8:	add	x0, x0, #0x3e8
  41ffdc:	ldrb	w0, [x0]
  41ffe0:	mov	w2, w0
  41ffe4:	mov	w1, #0x0                   	// #0
  41ffe8:	ldr	x0, [sp, #24]
  41ffec:	bl	43afc0 <wcrtomb@plt+0x362b0>
  41fff0:	str	x0, [sp, #24]
  41fff4:	nop
  41fff8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  41fffc:	add	x0, x0, #0x3a0
  420000:	ldr	x0, [x0]
  420004:	cmp	x0, #0x0
  420008:	b.eq	420050 <wcrtomb@plt+0x1b340>  // b.none
  42000c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420010:	add	x0, x0, #0x3a0
  420014:	ldr	x0, [x0]
  420018:	mov	x1, x0
  42001c:	ldr	x0, [sp, #24]
  420020:	bl	42a184 <wcrtomb@plt+0x25474>
  420024:	str	x0, [sp, #40]
  420028:	ldr	x0, [sp, #40]
  42002c:	cmn	x0, #0x1
  420030:	b.ne	420040 <wcrtomb@plt+0x1b330>  // b.any
  420034:	ldr	x0, [sp, #24]
  420038:	bl	4040b0 <strlen@plt>
  42003c:	str	x0, [sp, #40]
  420040:	ldr	x1, [sp, #24]
  420044:	ldr	x0, [sp, #40]
  420048:	add	x0, x1, x0
  42004c:	str	x0, [sp, #24]
  420050:	ldr	x0, [sp, #24]
  420054:	ldp	x29, x30, [sp], #48
  420058:	ret
  42005c:	stp	x29, x30, [sp, #-32]!
  420060:	mov	x29, sp
  420064:	str	x0, [sp, #24]
  420068:	str	w1, [sp, #20]
  42006c:	ldr	w1, [sp, #20]
  420070:	add	x0, sp, #0x14
  420074:	mov	x3, x0
  420078:	adrp	x0, 41f000 <wcrtomb@plt+0x1a2f0>
  42007c:	add	x2, x0, #0xf58
  420080:	ldr	x0, [sp, #24]
  420084:	bl	436910 <wcrtomb@plt+0x31c00>
  420088:	and	w0, w0, #0xff
  42008c:	ldp	x29, x30, [sp], #32
  420090:	ret
  420094:	stp	x29, x30, [sp, #-64]!
  420098:	mov	x29, sp
  42009c:	str	x0, [sp, #24]
  4200a0:	ldr	x0, [sp, #24]
  4200a4:	ldr	x0, [x0]
  4200a8:	str	x0, [sp, #48]
  4200ac:	ldr	x0, [sp, #48]
  4200b0:	str	x0, [sp, #56]
  4200b4:	b	4200c4 <wcrtomb@plt+0x1b3b4>
  4200b8:	ldr	x0, [sp, #56]
  4200bc:	add	x0, x0, #0x1
  4200c0:	str	x0, [sp, #56]
  4200c4:	ldr	x0, [sp, #56]
  4200c8:	ldrb	w0, [x0]
  4200cc:	cmp	w0, #0x0
  4200d0:	b.eq	4200f4 <wcrtomb@plt+0x1b3e4>  // b.none
  4200d4:	ldr	x0, [sp, #56]
  4200d8:	ldrb	w0, [x0]
  4200dc:	cmp	w0, #0x2f
  4200e0:	b.eq	4200b8 <wcrtomb@plt+0x1b3a8>  // b.none
  4200e4:	ldr	x0, [sp, #56]
  4200e8:	ldrb	w0, [x0]
  4200ec:	cmp	w0, #0x2e
  4200f0:	b.eq	4200b8 <wcrtomb@plt+0x1b3a8>  // b.none
  4200f4:	ldr	x0, [sp, #56]
  4200f8:	ldrb	w0, [x0]
  4200fc:	cmp	w0, #0x0
  420100:	b.eq	4201a0 <wcrtomb@plt+0x1b490>  // b.none
  420104:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420108:	add	x0, x0, #0x268
  42010c:	ldr	x0, [x0]
  420110:	bl	4040b0 <strlen@plt>
  420114:	str	w0, [sp, #44]
  420118:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42011c:	add	x0, x0, #0x268
  420120:	ldr	x0, [x0]
  420124:	ldrsw	x1, [sp, #44]
  420128:	mov	x2, x1
  42012c:	mov	x1, x0
  420130:	ldr	x0, [sp, #56]
  420134:	bl	404480 <strncmp@plt>
  420138:	cmp	w0, #0x0
  42013c:	b.ne	420170 <wcrtomb@plt+0x1b460>  // b.any
  420140:	ldrsw	x0, [sp, #44]
  420144:	ldr	x1, [sp, #56]
  420148:	add	x0, x1, x0
  42014c:	ldrb	w0, [x0]
  420150:	cmp	w0, #0x2f
  420154:	b.eq	4201c8 <wcrtomb@plt+0x1b4b8>  // b.none
  420158:	ldrsw	x0, [sp, #44]
  42015c:	ldr	x1, [sp, #56]
  420160:	add	x0, x1, x0
  420164:	ldrb	w0, [x0]
  420168:	cmp	w0, #0x0
  42016c:	b.eq	4201c8 <wcrtomb@plt+0x1b4b8>  // b.none
  420170:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420174:	add	x0, x0, #0x268
  420178:	ldr	x0, [x0]
  42017c:	ldr	x1, [sp, #48]
  420180:	bl	42a0b4 <wcrtomb@plt+0x253a4>
  420184:	mov	x1, x0
  420188:	ldr	x0, [sp, #24]
  42018c:	str	x1, [x0]
  420190:	ldr	x0, [sp, #24]
  420194:	ldr	x0, [x0]
  420198:	bl	424258 <wcrtomb@plt+0x1f548>
  42019c:	b	4201bc <wcrtomb@plt+0x1b4ac>
  4201a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4201a4:	add	x0, x0, #0x268
  4201a8:	ldr	x0, [x0]
  4201ac:	bl	45b858 <argp_usage@@Base+0x1276c>
  4201b0:	mov	x1, x0
  4201b4:	ldr	x0, [sp, #24]
  4201b8:	str	x1, [x0]
  4201bc:	ldr	x0, [sp, #48]
  4201c0:	bl	404880 <free@plt>
  4201c4:	b	4201cc <wcrtomb@plt+0x1b4bc>
  4201c8:	nop
  4201cc:	ldp	x29, x30, [sp], #64
  4201d0:	ret
  4201d4:	stp	x29, x30, [sp, #-32]!
  4201d8:	mov	x29, sp
  4201dc:	str	w0, [sp, #28]
  4201e0:	str	x1, [sp, #16]
  4201e4:	ldr	w0, [sp, #28]
  4201e8:	cmp	w0, #0x56
  4201ec:	b.eq	420260 <wcrtomb@plt+0x1b550>  // b.none
  4201f0:	ldr	x0, [sp, #16]
  4201f4:	add	x0, x0, #0x8
  4201f8:	mov	w1, #0x1                   	// #1
  4201fc:	bl	42005c <wcrtomb@plt+0x1b34c>
  420200:	ldr	w0, [sp, #28]
  420204:	cmp	w0, #0x31
  420208:	b.eq	42022c <wcrtomb@plt+0x1b51c>  // b.none
  42020c:	ldr	w0, [sp, #28]
  420210:	cmp	w0, #0x32
  420214:	b.ne	42023c <wcrtomb@plt+0x1b52c>  // b.any
  420218:	ldr	x0, [sp, #16]
  42021c:	add	x0, x0, #0x18
  420220:	mov	w1, #0x4                   	// #4
  420224:	bl	42005c <wcrtomb@plt+0x1b34c>
  420228:	b	42023c <wcrtomb@plt+0x1b52c>
  42022c:	ldr	x0, [sp, #16]
  420230:	add	x0, x0, #0x18
  420234:	mov	w1, #0x2                   	// #2
  420238:	bl	42005c <wcrtomb@plt+0x1b34c>
  42023c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420240:	add	x0, x0, #0x37b
  420244:	ldrb	w0, [x0]
  420248:	cmp	w0, #0x0
  42024c:	b.eq	420264 <wcrtomb@plt+0x1b554>  // b.none
  420250:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420254:	add	x0, x0, #0x98
  420258:	bl	420094 <wcrtomb@plt+0x1b384>
  42025c:	b	420264 <wcrtomb@plt+0x1b554>
  420260:	nop
  420264:	ldp	x29, x30, [sp], #32
  420268:	ret
  42026c:	stp	x29, x30, [sp, #-176]!
  420270:	mov	x29, sp
  420274:	stp	x19, x20, [sp, #16]
  420278:	str	x0, [sp, #40]
  42027c:	str	wzr, [sp, #172]
  420280:	bl	41fee0 <wcrtomb@plt+0x1b1d0>
  420284:	bl	4283f0 <wcrtomb@plt+0x236e0>
  420288:	mov	w0, #0x0                   	// #0
  42028c:	bl	40a6d0 <wcrtomb@plt+0x59c0>
  420290:	ldr	w0, [sp, #172]
  420294:	str	w0, [sp, #168]
  420298:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42029c:	add	x0, x0, #0x90
  4202a0:	bl	434ecc <wcrtomb@plt+0x301bc>
  4202a4:	mov	w2, #0x0                   	// #0
  4202a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4202ac:	add	x1, x0, #0x90
  4202b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4202b4:	add	x0, x0, #0x18
  4202b8:	bl	420af0 <wcrtomb@plt+0x1bde0>
  4202bc:	str	w0, [sp, #172]
  4202c0:	ldr	w0, [sp, #172]
  4202c4:	cmp	w0, #0x5
  4202c8:	b.eq	4206a4 <wcrtomb@plt+0x1b994>  // b.none
  4202cc:	ldr	w0, [sp, #172]
  4202d0:	cmp	w0, #0x5
  4202d4:	b.hi	42088c <wcrtomb@plt+0x1bb7c>  // b.pmore
  4202d8:	ldr	w0, [sp, #172]
  4202dc:	cmp	w0, #0x4
  4202e0:	b.eq	420648 <wcrtomb@plt+0x1b938>  // b.none
  4202e4:	ldr	w0, [sp, #172]
  4202e8:	cmp	w0, #0x4
  4202ec:	b.hi	42088c <wcrtomb@plt+0x1bb7c>  // b.pmore
  4202f0:	ldr	w0, [sp, #172]
  4202f4:	cmp	w0, #0x3
  4202f8:	b.eq	420514 <wcrtomb@plt+0x1b804>  // b.none
  4202fc:	ldr	w0, [sp, #172]
  420300:	cmp	w0, #0x3
  420304:	b.hi	42088c <wcrtomb@plt+0x1bb7c>  // b.pmore
  420308:	ldr	w0, [sp, #172]
  42030c:	cmp	w0, #0x2
  420310:	b.eq	42033c <wcrtomb@plt+0x1b62c>  // b.none
  420314:	ldr	w0, [sp, #172]
  420318:	cmp	w0, #0x2
  42031c:	b.hi	42088c <wcrtomb@plt+0x1bb7c>  // b.pmore
  420320:	ldr	w0, [sp, #172]
  420324:	cmp	w0, #0x0
  420328:	b.eq	42033c <wcrtomb@plt+0x1b62c>  // b.none
  42032c:	ldr	w0, [sp, #172]
  420330:	cmp	w0, #0x1
  420334:	b.eq	420340 <wcrtomb@plt+0x1b630>  // b.none
  420338:	b	42088c <wcrtomb@plt+0x1bb7c>
  42033c:	bl	404710 <abort@plt>
  420340:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420344:	add	x0, x0, #0x18
  420348:	ldr	x4, [x0]
  42034c:	mov	w3, #0x1                   	// #1
  420350:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420354:	add	x2, x0, #0x0
  420358:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42035c:	add	x1, x0, #0x90
  420360:	mov	x0, x4
  420364:	bl	42112c <wcrtomb@plt+0x1c41c>
  420368:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42036c:	add	x0, x0, #0x90
  420370:	ldr	x0, [x0, #8]
  420374:	bl	428a00 <wcrtomb@plt+0x23cf0>
  420378:	and	w0, w0, #0xff
  42037c:	eor	w0, w0, #0x1
  420380:	and	w0, w0, #0xff
  420384:	cmp	w0, #0x0
  420388:	b.ne	420430 <wcrtomb@plt+0x1b720>  // b.any
  42038c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420390:	add	x0, x0, #0x58
  420394:	ldr	x0, [x0, #8]
  420398:	cmp	x0, #0x0
  42039c:	b.lt	420400 <wcrtomb@plt+0x1b6f0>  // b.tstop
  4203a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4203a4:	add	x0, x0, #0x18
  4203a8:	ldr	x0, [x0]
  4203ac:	add	x0, x0, #0x88
  4203b0:	mov	x1, #0xc                   	// #12
  4203b4:	bl	42225c <wcrtomb@plt+0x1d54c>
  4203b8:	str	x0, [sp, #144]
  4203bc:	str	xzr, [sp, #152]
  4203c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4203c4:	add	x2, x0, #0x90
  4203c8:	ldp	x0, x1, [sp, #144]
  4203cc:	stp	x0, x1, [x2, #232]
  4203d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4203d4:	add	x1, x0, #0x58
  4203d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4203dc:	add	x0, x0, #0x90
  4203e0:	ldp	x2, x3, [x1]
  4203e4:	ldp	x0, x1, [x0, #232]
  4203e8:	bl	45ab0c <argp_usage@@Base+0x11a20>
  4203ec:	lsr	w0, w0, #31
  4203f0:	and	w0, w0, #0x1
  4203f4:	and	w0, w0, #0xff
  4203f8:	cmp	w0, #0x0
  4203fc:	b.ne	420430 <wcrtomb@plt+0x1b720>  // b.any
  420400:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420404:	add	x0, x0, #0x90
  420408:	ldr	x2, [x0, #8]
  42040c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420410:	add	x0, x0, #0x90
  420414:	ldr	x0, [x0, #392]
  420418:	mov	x1, x0
  42041c:	mov	x0, x2
  420420:	bl	412f50 <wcrtomb@plt+0xe240>
  420424:	and	w0, w0, #0xff
  420428:	cmp	w0, #0x0
  42042c:	b.eq	4204d8 <wcrtomb@plt+0x1b7c8>  // b.none
  420430:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420434:	add	x0, x0, #0x18
  420438:	ldr	x0, [x0]
  42043c:	ldrb	w0, [x0, #156]
  420440:	cmp	w0, #0x56
  420444:	b.eq	4204e0 <wcrtomb@plt+0x1b7d0>  // b.none
  420448:	cmp	w0, #0x56
  42044c:	b.gt	4204d0 <wcrtomb@plt+0x1b7c0>
  420450:	cmp	w0, #0x35
  420454:	b.eq	420464 <wcrtomb@plt+0x1b754>  // b.none
  420458:	cmp	w0, #0x4d
  42045c:	b.ne	4204d0 <wcrtomb@plt+0x1b7c0>  // b.any
  420460:	b	4204e0 <wcrtomb@plt+0x1b7d0>
  420464:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420468:	add	x0, x0, #0x2ea
  42046c:	ldrb	w0, [x0]
  420470:	cmp	w0, #0x0
  420474:	b.eq	4204d0 <wcrtomb@plt+0x1b7c0>  // b.none
  420478:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42047c:	add	x0, x0, #0x420
  420480:	ldr	x0, [x0]
  420484:	cmp	x0, #0x0
  420488:	b.eq	42049c <wcrtomb@plt+0x1b78c>  // b.none
  42048c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420490:	add	x0, x0, #0x420
  420494:	ldr	x0, [x0]
  420498:	blr	x0
  42049c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4204a0:	add	x0, x0, #0x378
  4204a4:	bl	404c60 <gettext@plt>
  4204a8:	mov	x19, x0
  4204ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4204b0:	add	x0, x0, #0x90
  4204b4:	ldr	x0, [x0, #8]
  4204b8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  4204bc:	mov	x3, x0
  4204c0:	mov	x2, x19
  4204c4:	mov	w1, #0x0                   	// #0
  4204c8:	mov	w0, #0x0                   	// #0
  4204cc:	bl	404100 <error@plt>
  4204d0:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  4204d4:	b	420868 <wcrtomb@plt+0x1bb58>
  4204d8:	nop
  4204dc:	b	4204e4 <wcrtomb@plt+0x1b7d4>
  4204e0:	nop
  4204e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4204e8:	add	x0, x0, #0x18
  4204ec:	ldr	x0, [x0]
  4204f0:	ldrb	w0, [x0, #156]
  4204f4:	mov	w2, w0
  4204f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4204fc:	add	x1, x0, #0x90
  420500:	mov	w0, w2
  420504:	bl	4201d4 <wcrtomb@plt+0x1b4c4>
  420508:	ldr	x0, [sp, #40]
  42050c:	blr	x0
  420510:	b	420868 <wcrtomb@plt+0x1bb58>
  420514:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420518:	add	x0, x0, #0x2d1
  42051c:	ldrb	w0, [x0]
  420520:	cmp	w0, #0x0
  420524:	b.eq	42056c <wcrtomb@plt+0x1b85c>  // b.none
  420528:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42052c:	add	x0, x0, #0xf88
  420530:	ldr	x19, [x0]
  420534:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  420538:	add	x0, x0, #0x388
  42053c:	bl	404c60 <gettext@plt>
  420540:	mov	x20, x0
  420544:	bl	405f78 <wcrtomb@plt+0x1268>
  420548:	mov	x2, x0
  42054c:	add	x0, sp, #0x78
  420550:	mov	x1, x0
  420554:	mov	x0, x2
  420558:	bl	450988 <argp_usage@@Base+0x789c>
  42055c:	mov	x2, x0
  420560:	mov	x1, x20
  420564:	mov	x0, x19
  420568:	bl	404c90 <fprintf@plt>
  42056c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420570:	add	x0, x0, #0x18
  420574:	ldr	x0, [x0]
  420578:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42057c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420580:	add	x0, x0, #0x7d
  420584:	ldrb	w0, [x0]
  420588:	eor	w0, w0, #0x1
  42058c:	and	w0, w0, #0xff
  420590:	cmp	w0, #0x0
  420594:	b.eq	42063c <wcrtomb@plt+0x1b92c>  // b.none
  420598:	mov	w2, #0x0                   	// #0
  42059c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4205a0:	add	x1, x0, #0x90
  4205a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4205a8:	add	x0, x0, #0x18
  4205ac:	bl	420af0 <wcrtomb@plt+0x1bde0>
  4205b0:	str	w0, [sp, #172]
  4205b4:	ldr	w0, [sp, #172]
  4205b8:	cmp	w0, #0x3
  4205bc:	b.eq	42084c <wcrtomb@plt+0x1bb3c>  // b.none
  4205c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4205c4:	add	x0, x0, #0x24c
  4205c8:	ldr	w0, [x0]
  4205cc:	and	w0, w0, #0x1
  4205d0:	cmp	w0, #0x0
  4205d4:	b.eq	420854 <wcrtomb@plt+0x1bb44>  // b.none
  4205d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4205dc:	add	x0, x0, #0x420
  4205e0:	ldr	x0, [x0]
  4205e4:	cmp	x0, #0x0
  4205e8:	b.eq	4205fc <wcrtomb@plt+0x1b8ec>  // b.none
  4205ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4205f0:	add	x0, x0, #0x420
  4205f4:	ldr	x0, [x0]
  4205f8:	blr	x0
  4205fc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  420600:	add	x0, x0, #0x3a8
  420604:	bl	404c60 <gettext@plt>
  420608:	mov	x19, x0
  42060c:	bl	405f78 <wcrtomb@plt+0x1268>
  420610:	mov	x2, x0
  420614:	add	x0, sp, #0x60
  420618:	mov	x1, x0
  42061c:	mov	x0, x2
  420620:	bl	450988 <argp_usage@@Base+0x789c>
  420624:	mov	x3, x0
  420628:	mov	x2, x19
  42062c:	mov	w1, #0x0                   	// #0
  420630:	mov	w0, #0x0                   	// #0
  420634:	bl	404100 <error@plt>
  420638:	b	420854 <wcrtomb@plt+0x1bb44>
  42063c:	ldr	w0, [sp, #168]
  420640:	str	w0, [sp, #172]
  420644:	b	420868 <wcrtomb@plt+0x1bb58>
  420648:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42064c:	add	x0, x0, #0x2d1
  420650:	ldrb	w0, [x0]
  420654:	cmp	w0, #0x0
  420658:	b.eq	42085c <wcrtomb@plt+0x1bb4c>  // b.none
  42065c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  420660:	add	x0, x0, #0xf88
  420664:	ldr	x19, [x0]
  420668:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42066c:	add	x0, x0, #0x3c0
  420670:	bl	404c60 <gettext@plt>
  420674:	mov	x20, x0
  420678:	bl	405f78 <wcrtomb@plt+0x1268>
  42067c:	mov	x2, x0
  420680:	add	x0, sp, #0x48
  420684:	mov	x1, x0
  420688:	mov	x0, x2
  42068c:	bl	450988 <argp_usage@@Base+0x789c>
  420690:	mov	x2, x0
  420694:	mov	x1, x20
  420698:	mov	x0, x19
  42069c:	bl	404c90 <fprintf@plt>
  4206a0:	b	42085c <wcrtomb@plt+0x1bb4c>
  4206a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4206a8:	add	x0, x0, #0x18
  4206ac:	ldr	x0, [x0]
  4206b0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  4206b4:	ldr	w0, [sp, #168]
  4206b8:	cmp	w0, #0x5
  4206bc:	b.hi	420864 <wcrtomb@plt+0x1bb54>  // b.pmore
  4206c0:	ldr	w0, [sp, #168]
  4206c4:	cmp	w0, #0x4
  4206c8:	b.cs	420844 <wcrtomb@plt+0x1bb34>  // b.hs, b.nlast
  4206cc:	ldr	w0, [sp, #168]
  4206d0:	cmp	w0, #0x3
  4206d4:	b.eq	420768 <wcrtomb@plt+0x1ba58>  // b.none
  4206d8:	ldr	w0, [sp, #168]
  4206dc:	cmp	w0, #0x3
  4206e0:	b.hi	420864 <wcrtomb@plt+0x1bb54>  // b.pmore
  4206e4:	ldr	w0, [sp, #168]
  4206e8:	cmp	w0, #0x2
  4206ec:	b.eq	420840 <wcrtomb@plt+0x1bb30>  // b.none
  4206f0:	ldr	w0, [sp, #168]
  4206f4:	cmp	w0, #0x2
  4206f8:	b.hi	420864 <wcrtomb@plt+0x1bb54>  // b.pmore
  4206fc:	ldr	w0, [sp, #168]
  420700:	cmp	w0, #0x0
  420704:	b.eq	420718 <wcrtomb@plt+0x1ba08>  // b.none
  420708:	ldr	w0, [sp, #168]
  42070c:	cmp	w0, #0x1
  420710:	b.eq	420768 <wcrtomb@plt+0x1ba58>  // b.none
  420714:	b	420864 <wcrtomb@plt+0x1bb54>
  420718:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42071c:	add	x0, x0, #0x420
  420720:	ldr	x0, [x0]
  420724:	cmp	x0, #0x0
  420728:	b.eq	42073c <wcrtomb@plt+0x1ba2c>  // b.none
  42072c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420730:	add	x0, x0, #0x420
  420734:	ldr	x0, [x0]
  420738:	blr	x0
  42073c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  420740:	add	x0, x0, #0x3e0
  420744:	bl	404c60 <gettext@plt>
  420748:	mov	x2, x0
  42074c:	mov	w1, #0x0                   	// #0
  420750:	mov	w0, #0x0                   	// #0
  420754:	bl	404100 <error@plt>
  420758:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42075c:	add	x0, x0, #0xdb0
  420760:	mov	w1, #0x2                   	// #2
  420764:	str	w1, [x0]
  420768:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42076c:	add	x0, x0, #0x2d1
  420770:	ldrb	w0, [x0]
  420774:	cmp	w0, #0x0
  420778:	b.eq	4207ec <wcrtomb@plt+0x1badc>  // b.none
  42077c:	bl	405f78 <wcrtomb@plt+0x1268>
  420780:	str	x0, [sp, #160]
  420784:	ldr	x1, [sp, #160]
  420788:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42078c:	add	x0, x0, #0x10
  420790:	ldr	x0, [x0]
  420794:	sub	x0, x1, x0
  420798:	str	x0, [sp, #160]
  42079c:	ldr	x1, [sp, #160]
  4207a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4207a4:	add	x0, x0, #0x20
  4207a8:	ldr	x0, [x0]
  4207ac:	sub	x0, x1, x0
  4207b0:	str	x0, [sp, #160]
  4207b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4207b8:	add	x0, x0, #0xf88
  4207bc:	ldr	x19, [x0]
  4207c0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4207c4:	add	x0, x0, #0x408
  4207c8:	bl	404c60 <gettext@plt>
  4207cc:	mov	x20, x0
  4207d0:	ldr	x0, [sp, #160]
  4207d4:	add	x1, sp, #0x30
  4207d8:	bl	450988 <argp_usage@@Base+0x789c>
  4207dc:	mov	x2, x0
  4207e0:	mov	x1, x20
  4207e4:	mov	x0, x19
  4207e8:	bl	404c90 <fprintf@plt>
  4207ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4207f0:	add	x0, x0, #0x420
  4207f4:	ldr	x0, [x0]
  4207f8:	cmp	x0, #0x0
  4207fc:	b.eq	420810 <wcrtomb@plt+0x1bb00>  // b.none
  420800:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420804:	add	x0, x0, #0x420
  420808:	ldr	x0, [x0]
  42080c:	blr	x0
  420810:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  420814:	add	x0, x0, #0x418
  420818:	bl	404c60 <gettext@plt>
  42081c:	mov	x2, x0
  420820:	mov	w1, #0x0                   	// #0
  420824:	mov	w0, #0x0                   	// #0
  420828:	bl	404100 <error@plt>
  42082c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  420830:	add	x0, x0, #0xdb0
  420834:	mov	w1, #0x2                   	// #2
  420838:	str	w1, [x0]
  42083c:	b	420848 <wcrtomb@plt+0x1bb38>
  420840:	bl	404710 <abort@plt>
  420844:	nop
  420848:	b	420864 <wcrtomb@plt+0x1bb54>
  42084c:	nop
  420850:	b	42088c <wcrtomb@plt+0x1bb7c>
  420854:	nop
  420858:	b	42088c <wcrtomb@plt+0x1bb7c>
  42085c:	nop
  420860:	b	42088c <wcrtomb@plt+0x1bb7c>
  420864:	nop
  420868:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42086c:	add	x0, x0, #0x90
  420870:	bl	428bec <wcrtomb@plt+0x23edc>
  420874:	and	w0, w0, #0xff
  420878:	eor	w0, w0, #0x1
  42087c:	and	w0, w0, #0xff
  420880:	cmp	w0, #0x0
  420884:	b.ne	420290 <wcrtomb@plt+0x1b580>  // b.any
  420888:	b	420890 <wcrtomb@plt+0x1bb80>
  42088c:	nop
  420890:	bl	407adc <wcrtomb@plt+0x2dcc>
  420894:	bl	428dec <wcrtomb@plt+0x240dc>
  420898:	nop
  42089c:	ldp	x19, x20, [sp, #16]
  4208a0:	ldp	x29, x30, [sp], #176
  4208a4:	ret
  4208a8:	stp	x29, x30, [sp, #-48]!
  4208ac:	mov	x29, sp
  4208b0:	str	x19, [sp, #16]
  4208b4:	bl	405f78 <wcrtomb@plt+0x1268>
  4208b8:	str	x0, [sp, #40]
  4208bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4208c0:	add	x0, x0, #0x2b4
  4208c4:	ldr	w0, [x0]
  4208c8:	cmp	w0, #0x0
  4208cc:	b.eq	4208f0 <wcrtomb@plt+0x1bbe0>  // b.none
  4208d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4208d4:	add	x0, x0, #0x18
  4208d8:	ldr	x0, [x0]
  4208dc:	ldr	x2, [sp, #40]
  4208e0:	mov	x1, x0
  4208e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4208e8:	add	x0, x0, #0x90
  4208ec:	bl	422f1c <wcrtomb@plt+0x1e20c>
  4208f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4208f4:	add	x0, x0, #0x51
  4208f8:	ldrb	w0, [x0]
  4208fc:	cmp	w0, #0x0
  420900:	b.eq	420958 <wcrtomb@plt+0x1bc48>  // b.none
  420904:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420908:	add	x0, x0, #0x2b4
  42090c:	ldr	w0, [x0]
  420910:	cmp	w0, #0x2
  420914:	b.le	420958 <wcrtomb@plt+0x1bc48>
  420918:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42091c:	add	x0, x0, #0x90
  420920:	bl	41f310 <wcrtomb@plt+0x1a600>
  420924:	and	w0, w0, #0xff
  420928:	cmp	w0, #0x0
  42092c:	b.eq	420958 <wcrtomb@plt+0x1bc48>  // b.none
  420930:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420934:	add	x0, x0, #0x90
  420938:	ldr	x19, [x0, #384]
  42093c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420940:	add	x0, x0, #0x90
  420944:	ldr	x0, [x0, #384]
  420948:	bl	41b848 <wcrtomb@plt+0x16b38>
  42094c:	mov	x1, x0
  420950:	mov	x0, x19
  420954:	bl	41fd84 <wcrtomb@plt+0x1b074>
  420958:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  42095c:	nop
  420960:	ldr	x19, [sp, #16]
  420964:	ldp	x29, x30, [sp], #48
  420968:	ret
  42096c:	stp	x29, x30, [sp, #-64]!
  420970:	mov	x29, sp
  420974:	str	x0, [sp, #24]
  420978:	strb	w1, [sp, #23]
  42097c:	str	wzr, [sp, #52]
  420980:	str	wzr, [sp, #48]
  420984:	ldr	x0, [sp, #24]
  420988:	str	x0, [sp, #40]
  42098c:	mov	x0, #0x200                 	// #512
  420990:	str	x0, [sp, #56]
  420994:	b	4209d4 <wcrtomb@plt+0x1bcc4>
  420998:	ldr	x0, [sp, #40]
  42099c:	ldrb	w0, [x0]
  4209a0:	mov	w1, w0
  4209a4:	ldr	w0, [sp, #52]
  4209a8:	add	w0, w0, w1
  4209ac:	str	w0, [sp, #52]
  4209b0:	ldr	x0, [sp, #40]
  4209b4:	add	x1, x0, #0x1
  4209b8:	str	x1, [sp, #40]
  4209bc:	ldrb	w0, [x0]
  4209c0:	sxtb	w0, w0
  4209c4:	mov	w1, w0
  4209c8:	ldr	w0, [sp, #48]
  4209cc:	add	w0, w0, w1
  4209d0:	str	w0, [sp, #48]
  4209d4:	ldr	x0, [sp, #56]
  4209d8:	sub	x1, x0, #0x1
  4209dc:	str	x1, [sp, #56]
  4209e0:	cmp	x0, #0x0
  4209e4:	b.ne	420998 <wcrtomb@plt+0x1bc88>  // b.any
  4209e8:	ldr	w0, [sp, #52]
  4209ec:	cmp	w0, #0x0
  4209f0:	b.ne	4209fc <wcrtomb@plt+0x1bcec>  // b.any
  4209f4:	mov	w0, #0x3                   	// #3
  4209f8:	b	420ae8 <wcrtomb@plt+0x1bdd8>
  4209fc:	mov	x0, #0x8                   	// #8
  420a00:	str	x0, [sp, #56]
  420a04:	b	420a4c <wcrtomb@plt+0x1bd3c>
  420a08:	ldr	x1, [sp, #24]
  420a0c:	ldr	x0, [sp, #56]
  420a10:	add	x0, x1, x0
  420a14:	ldrb	w0, [x0, #148]
  420a18:	mov	w1, w0
  420a1c:	ldr	w0, [sp, #52]
  420a20:	sub	w0, w0, w1
  420a24:	str	w0, [sp, #52]
  420a28:	ldr	x1, [sp, #24]
  420a2c:	ldr	x0, [sp, #56]
  420a30:	add	x0, x1, x0
  420a34:	ldrb	w0, [x0, #148]
  420a38:	sxtb	w0, w0
  420a3c:	mov	w1, w0
  420a40:	ldr	w0, [sp, #48]
  420a44:	sub	w0, w0, w1
  420a48:	str	w0, [sp, #48]
  420a4c:	ldr	x0, [sp, #56]
  420a50:	sub	x1, x0, #0x1
  420a54:	str	x1, [sp, #56]
  420a58:	cmp	x0, #0x0
  420a5c:	b.ne	420a08 <wcrtomb@plt+0x1bcf8>  // b.any
  420a60:	ldr	w0, [sp, #52]
  420a64:	add	w0, w0, #0x100
  420a68:	str	w0, [sp, #52]
  420a6c:	ldr	w0, [sp, #48]
  420a70:	add	w0, w0, #0x100
  420a74:	str	w0, [sp, #48]
  420a78:	ldr	x0, [sp, #24]
  420a7c:	add	x0, x0, #0x94
  420a80:	ldrb	w6, [sp, #23]
  420a84:	mov	w5, #0x1                   	// #1
  420a88:	mov	x4, #0x7fffffff            	// #2147483647
  420a8c:	mov	x3, #0x0                   	// #0
  420a90:	mov	x2, #0x0                   	// #0
  420a94:	mov	x1, #0x8                   	// #8
  420a98:	bl	421644 <wcrtomb@plt+0x1c934>
  420a9c:	str	w0, [sp, #36]
  420aa0:	ldr	w0, [sp, #36]
  420aa4:	cmp	w0, #0x0
  420aa8:	b.ge	420ab4 <wcrtomb@plt+0x1bda4>  // b.tcont
  420aac:	mov	w0, #0x5                   	// #5
  420ab0:	b	420ae8 <wcrtomb@plt+0x1bdd8>
  420ab4:	ldr	w0, [sp, #36]
  420ab8:	str	w0, [sp, #32]
  420abc:	ldr	w1, [sp, #52]
  420ac0:	ldr	w0, [sp, #32]
  420ac4:	cmp	w1, w0
  420ac8:	b.eq	420ae4 <wcrtomb@plt+0x1bdd4>  // b.none
  420acc:	ldr	w1, [sp, #48]
  420ad0:	ldr	w0, [sp, #32]
  420ad4:	cmp	w1, w0
  420ad8:	b.eq	420ae4 <wcrtomb@plt+0x1bdd4>  // b.none
  420adc:	mov	w0, #0x5                   	// #5
  420ae0:	b	420ae8 <wcrtomb@plt+0x1bdd8>
  420ae4:	mov	w0, #0x1                   	// #1
  420ae8:	ldp	x29, x30, [sp], #64
  420aec:	ret
  420af0:	stp	x29, x30, [sp, #-464]!
  420af4:	mov	x29, sp
  420af8:	str	x19, [sp, #16]
  420afc:	str	x0, [sp, #56]
  420b00:	str	x1, [sp, #48]
  420b04:	str	w2, [sp, #44]
  420b08:	str	xzr, [sp, #432]
  420b0c:	str	xzr, [sp, #424]
  420b10:	str	xzr, [sp, #416]
  420b14:	str	xzr, [sp, #408]
  420b18:	bl	406030 <wcrtomb@plt+0x1320>
  420b1c:	str	x0, [sp, #384]
  420b20:	ldr	x0, [sp, #56]
  420b24:	ldr	x1, [sp, #384]
  420b28:	str	x1, [x0]
  420b2c:	ldr	x0, [sp, #384]
  420b30:	cmp	x0, #0x0
  420b34:	b.ne	420b40 <wcrtomb@plt+0x1be30>  // b.any
  420b38:	mov	w0, #0x4                   	// #4
  420b3c:	b	421120 <wcrtomb@plt+0x1c410>
  420b40:	mov	w1, #0x0                   	// #0
  420b44:	ldr	x0, [sp, #384]
  420b48:	bl	42096c <wcrtomb@plt+0x1bc5c>
  420b4c:	str	w0, [sp, #380]
  420b50:	ldr	w0, [sp, #380]
  420b54:	cmp	w0, #0x1
  420b58:	b.eq	420b64 <wcrtomb@plt+0x1be54>  // b.none
  420b5c:	ldr	w0, [sp, #380]
  420b60:	b	421120 <wcrtomb@plt+0x1c410>
  420b64:	ldr	x0, [sp, #384]
  420b68:	ldrb	w0, [x0, #156]
  420b6c:	cmp	w0, #0x31
  420b70:	b.ne	420b80 <wcrtomb@plt+0x1be70>  // b.any
  420b74:	ldr	x0, [sp, #48]
  420b78:	str	xzr, [x0, #136]
  420b7c:	b	420bb4 <wcrtomb@plt+0x1bea4>
  420b80:	ldr	x0, [sp, #384]
  420b84:	add	x0, x0, #0x7c
  420b88:	mov	x1, #0xc                   	// #12
  420b8c:	bl	422220 <wcrtomb@plt+0x1d510>
  420b90:	mov	x1, x0
  420b94:	ldr	x0, [sp, #48]
  420b98:	str	x1, [x0, #136]
  420b9c:	ldr	x0, [sp, #48]
  420ba0:	ldr	x0, [x0, #136]
  420ba4:	cmp	x0, #0x0
  420ba8:	b.ge	420bb4 <wcrtomb@plt+0x1bea4>  // b.tcont
  420bac:	mov	w0, #0x5                   	// #5
  420bb0:	b	421120 <wcrtomb@plt+0x1c410>
  420bb4:	ldr	x0, [sp, #384]
  420bb8:	ldrb	w0, [x0, #156]
  420bbc:	cmp	w0, #0x4c
  420bc0:	b.eq	420c04 <wcrtomb@plt+0x1bef4>  // b.none
  420bc4:	ldr	x0, [sp, #384]
  420bc8:	ldrb	w0, [x0, #156]
  420bcc:	cmp	w0, #0x4b
  420bd0:	b.eq	420c04 <wcrtomb@plt+0x1bef4>  // b.none
  420bd4:	ldr	x0, [sp, #384]
  420bd8:	ldrb	w0, [x0, #156]
  420bdc:	cmp	w0, #0x78
  420be0:	b.eq	420c04 <wcrtomb@plt+0x1bef4>  // b.none
  420be4:	ldr	x0, [sp, #384]
  420be8:	ldrb	w0, [x0, #156]
  420bec:	cmp	w0, #0x67
  420bf0:	b.eq	420c04 <wcrtomb@plt+0x1bef4>  // b.none
  420bf4:	ldr	x0, [sp, #384]
  420bf8:	ldrb	w0, [x0, #156]
  420bfc:	cmp	w0, #0x58
  420c00:	b.ne	420f2c <wcrtomb@plt+0x1c21c>  // b.any
  420c04:	ldr	w0, [sp, #44]
  420c08:	cmp	w0, #0x1
  420c0c:	b.ne	420c18 <wcrtomb@plt+0x1bf08>  // b.any
  420c10:	mov	w0, #0x2                   	// #2
  420c14:	b	421120 <wcrtomb@plt+0x1c410>
  420c18:	ldr	x0, [sp, #384]
  420c1c:	ldrb	w0, [x0, #156]
  420c20:	cmp	w0, #0x4c
  420c24:	b.eq	420c38 <wcrtomb@plt+0x1bf28>  // b.none
  420c28:	ldr	x0, [sp, #384]
  420c2c:	ldrb	w0, [x0, #156]
  420c30:	cmp	w0, #0x4b
  420c34:	b.ne	420e30 <wcrtomb@plt+0x1c120>  // b.any
  420c38:	ldr	x0, [sp, #48]
  420c3c:	ldr	x0, [x0, #136]
  420c40:	str	x0, [sp, #360]
  420c44:	ldr	x0, [sp, #360]
  420c48:	and	x0, x0, #0x1ff
  420c4c:	str	x0, [sp, #352]
  420c50:	ldr	x0, [sp, #360]
  420c54:	add	x0, x0, #0x200
  420c58:	str	x0, [sp, #448]
  420c5c:	ldr	x0, [sp, #352]
  420c60:	cmp	x0, #0x0
  420c64:	b.eq	420c7c <wcrtomb@plt+0x1bf6c>  // b.none
  420c68:	ldr	x1, [sp, #448]
  420c6c:	ldr	x0, [sp, #352]
  420c70:	sub	x0, x1, x0
  420c74:	add	x0, x0, #0x200
  420c78:	str	x0, [sp, #448]
  420c7c:	ldr	x0, [sp, #48]
  420c80:	ldr	x1, [x0, #136]
  420c84:	ldr	x0, [sp, #360]
  420c88:	cmp	x1, x0
  420c8c:	b.ne	420ca0 <wcrtomb@plt+0x1bf90>  // b.any
  420c90:	ldr	x1, [sp, #448]
  420c94:	ldr	x0, [sp, #360]
  420c98:	cmp	x1, x0
  420c9c:	b.cs	420ca4 <wcrtomb@plt+0x1bf94>  // b.hs, b.nlast
  420ca0:	bl	412b2c <wcrtomb@plt+0xde1c>
  420ca4:	ldr	x0, [sp, #448]
  420ca8:	add	x0, x0, #0x1
  420cac:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  420cb0:	str	x0, [sp, #344]
  420cb4:	ldr	x0, [sp, #384]
  420cb8:	ldrb	w0, [x0, #156]
  420cbc:	cmp	w0, #0x4c
  420cc0:	b.ne	420ce4 <wcrtomb@plt+0x1bfd4>  // b.any
  420cc4:	ldr	x0, [sp, #432]
  420cc8:	bl	404880 <free@plt>
  420ccc:	ldr	x0, [sp, #344]
  420cd0:	str	x0, [sp, #432]
  420cd4:	ldr	x0, [sp, #448]
  420cd8:	lsr	x0, x0, #9
  420cdc:	str	x0, [sp, #416]
  420ce0:	b	420d00 <wcrtomb@plt+0x1bff0>
  420ce4:	ldr	x0, [sp, #424]
  420ce8:	bl	404880 <free@plt>
  420cec:	ldr	x0, [sp, #344]
  420cf0:	str	x0, [sp, #424]
  420cf4:	ldr	x0, [sp, #448]
  420cf8:	lsr	x0, x0, #9
  420cfc:	str	x0, [sp, #408]
  420d00:	ldr	x0, [sp, #384]
  420d04:	bl	4060c4 <wcrtomb@plt+0x13b4>
  420d08:	ldr	x1, [sp, #344]
  420d0c:	ldr	x0, [sp, #384]
  420d10:	mov	x3, x1
  420d14:	mov	x1, x0
  420d18:	mov	x0, #0x200                 	// #512
  420d1c:	mov	x2, x0
  420d20:	mov	x0, x3
  420d24:	bl	404020 <memcpy@plt>
  420d28:	ldr	x0, [sp, #344]
  420d2c:	add	x0, x0, #0x200
  420d30:	str	x0, [sp, #456]
  420d34:	ldr	x0, [sp, #448]
  420d38:	sub	x0, x0, #0x200
  420d3c:	str	x0, [sp, #448]
  420d40:	b	420e18 <wcrtomb@plt+0x1c108>
  420d44:	bl	406030 <wcrtomb@plt+0x1320>
  420d48:	str	x0, [sp, #336]
  420d4c:	ldr	x0, [sp, #336]
  420d50:	cmp	x0, #0x0
  420d54:	b.ne	420dac <wcrtomb@plt+0x1c09c>  // b.any
  420d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420d5c:	add	x0, x0, #0x420
  420d60:	ldr	x0, [x0]
  420d64:	cmp	x0, #0x0
  420d68:	b.eq	420d7c <wcrtomb@plt+0x1c06c>  // b.none
  420d6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420d70:	add	x0, x0, #0x420
  420d74:	ldr	x0, [x0]
  420d78:	blr	x0
  420d7c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  420d80:	add	x0, x0, #0x430
  420d84:	bl	404c60 <gettext@plt>
  420d88:	mov	x2, x0
  420d8c:	mov	w1, #0x0                   	// #0
  420d90:	mov	w0, #0x0                   	// #0
  420d94:	bl	404100 <error@plt>
  420d98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  420d9c:	add	x0, x0, #0xdb0
  420da0:	mov	w1, #0x2                   	// #2
  420da4:	str	w1, [x0]
  420da8:	b	420e24 <wcrtomb@plt+0x1c114>
  420dac:	ldr	x0, [sp, #336]
  420db0:	bl	406138 <wcrtomb@plt+0x1428>
  420db4:	str	x0, [sp, #440]
  420db8:	ldr	x1, [sp, #440]
  420dbc:	ldr	x0, [sp, #448]
  420dc0:	cmp	x1, x0
  420dc4:	b.ls	420dd0 <wcrtomb@plt+0x1c0c0>  // b.plast
  420dc8:	ldr	x0, [sp, #448]
  420dcc:	str	x0, [sp, #440]
  420dd0:	ldr	x0, [sp, #336]
  420dd4:	ldr	x2, [sp, #440]
  420dd8:	mov	x1, x0
  420ddc:	ldr	x0, [sp, #456]
  420de0:	bl	404020 <memcpy@plt>
  420de4:	ldr	x1, [sp, #456]
  420de8:	ldr	x0, [sp, #440]
  420dec:	add	x0, x1, x0
  420df0:	str	x0, [sp, #456]
  420df4:	ldr	x0, [sp, #440]
  420df8:	sub	x0, x0, #0x1
  420dfc:	ldr	x1, [sp, #336]
  420e00:	add	x0, x1, x0
  420e04:	bl	4060c4 <wcrtomb@plt+0x13b4>
  420e08:	ldr	x1, [sp, #448]
  420e0c:	ldr	x0, [sp, #440]
  420e10:	sub	x0, x1, x0
  420e14:	str	x0, [sp, #448]
  420e18:	ldr	x0, [sp, #448]
  420e1c:	cmp	x0, #0x0
  420e20:	b.ne	420d44 <wcrtomb@plt+0x1c034>  // b.any
  420e24:	ldr	x0, [sp, #456]
  420e28:	strb	wzr, [x0]
  420e2c:	b	420f28 <wcrtomb@plt+0x1c218>
  420e30:	ldr	x0, [sp, #384]
  420e34:	ldrb	w0, [x0, #156]
  420e38:	cmp	w0, #0x78
  420e3c:	b.eq	420e50 <wcrtomb@plt+0x1c140>  // b.none
  420e40:	ldr	x0, [sp, #384]
  420e44:	ldrb	w0, [x0, #156]
  420e48:	cmp	w0, #0x58
  420e4c:	b.ne	420e7c <wcrtomb@plt+0x1c16c>  // b.any
  420e50:	ldr	x0, [sp, #48]
  420e54:	add	x19, x0, #0x158
  420e58:	ldr	x0, [sp, #384]
  420e5c:	add	x0, x0, #0x7c
  420e60:	mov	x1, #0xc                   	// #12
  420e64:	bl	422220 <wcrtomb@plt+0x1d510>
  420e68:	mov	x2, x0
  420e6c:	ldr	x1, [sp, #384]
  420e70:	mov	x0, x19
  420e74:	bl	4192b0 <wcrtomb@plt+0x145a0>
  420e78:	b	420f28 <wcrtomb@plt+0x1c218>
  420e7c:	ldr	x0, [sp, #384]
  420e80:	ldrb	w0, [x0, #156]
  420e84:	cmp	w0, #0x67
  420e88:	b.ne	421118 <wcrtomb@plt+0x1c408>  // b.any
  420e8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  420e90:	add	x0, x0, #0x8f8
  420e94:	ldr	x0, [x0]
  420e98:	cmp	x0, #0x0
  420e9c:	b.ne	420eb8 <wcrtomb@plt+0x1c1a8>  // b.any
  420ea0:	mov	x0, #0x200                 	// #512
  420ea4:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  420ea8:	mov	x1, x0
  420eac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  420eb0:	add	x0, x0, #0x8f8
  420eb4:	str	x1, [x0]
  420eb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  420ebc:	add	x0, x0, #0x8f8
  420ec0:	ldr	x0, [x0]
  420ec4:	mov	x2, #0x200                 	// #512
  420ec8:	ldr	x1, [sp, #384]
  420ecc:	bl	404020 <memcpy@plt>
  420ed0:	add	x0, sp, #0x48
  420ed4:	mov	x2, #0x20                  	// #32
  420ed8:	mov	w1, #0x0                   	// #0
  420edc:	bl	4044d0 <memset@plt>
  420ee0:	ldr	x0, [sp, #384]
  420ee4:	add	x0, x0, #0x7c
  420ee8:	mov	x1, #0xc                   	// #12
  420eec:	bl	422220 <wcrtomb@plt+0x1d510>
  420ef0:	mov	x1, x0
  420ef4:	add	x0, sp, #0x48
  420ef8:	mov	x2, x1
  420efc:	ldr	x1, [sp, #384]
  420f00:	bl	4192b0 <wcrtomb@plt+0x145a0>
  420f04:	add	x0, sp, #0x48
  420f08:	bl	41910c <wcrtomb@plt+0x143fc>
  420f0c:	add	x0, sp, #0x48
  420f10:	bl	419804 <wcrtomb@plt+0x14af4>
  420f14:	ldr	w0, [sp, #44]
  420f18:	cmp	w0, #0x2
  420f1c:	b.ne	421118 <wcrtomb@plt+0x1c408>  // b.any
  420f20:	mov	w0, #0x2                   	// #2
  420f24:	b	421120 <wcrtomb@plt+0x1c410>
  420f28:	b	421118 <wcrtomb@plt+0x1c408>
  420f2c:	ldr	x0, [sp, #384]
  420f30:	str	x0, [sp, #368]
  420f34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420f38:	add	x0, x0, #0x8
  420f3c:	ldr	x0, [x0]
  420f40:	bl	404880 <free@plt>
  420f44:	ldr	x0, [sp, #432]
  420f48:	cmp	x0, #0x0
  420f4c:	b.eq	420f80 <wcrtomb@plt+0x1c270>  // b.none
  420f50:	ldr	x0, [sp, #432]
  420f54:	add	x0, x0, #0x200
  420f58:	str	x0, [sp, #400]
  420f5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420f60:	add	x0, x0, #0x8
  420f64:	ldr	x1, [sp, #432]
  420f68:	str	x1, [x0]
  420f6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  420f70:	add	x0, x0, #0x10
  420f74:	ldr	x1, [sp, #416]
  420f78:	str	x1, [x0]
  420f7c:	b	421048 <wcrtomb@plt+0x1c338>
  420f80:	add	x0, sp, #0x48
  420f84:	str	x0, [sp, #392]
  420f88:	ldr	x0, [sp, #368]
  420f8c:	ldrb	w0, [x0, #345]
  420f90:	cmp	w0, #0x0
  420f94:	b.eq	421008 <wcrtomb@plt+0x1c2f8>  // b.none
  420f98:	ldr	x0, [sp, #368]
  420f9c:	add	x2, x0, #0x101
  420fa0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  420fa4:	add	x1, x0, #0x450
  420fa8:	mov	x0, x2
  420fac:	bl	4047c0 <strcmp@plt>
  420fb0:	cmp	w0, #0x0
  420fb4:	b.ne	421008 <wcrtomb@plt+0x1c2f8>  // b.any
  420fb8:	ldr	x0, [sp, #368]
  420fbc:	add	x0, x0, #0x159
  420fc0:	mov	x2, #0x9b                  	// #155
  420fc4:	mov	x1, x0
  420fc8:	ldr	x0, [sp, #392]
  420fcc:	bl	404020 <memcpy@plt>
  420fd0:	ldr	x0, [sp, #392]
  420fd4:	add	x0, x0, #0x9b
  420fd8:	strb	wzr, [x0]
  420fdc:	ldr	x0, [sp, #392]
  420fe0:	bl	4040b0 <strlen@plt>
  420fe4:	mov	x1, x0
  420fe8:	ldr	x0, [sp, #392]
  420fec:	add	x0, x0, x1
  420ff0:	str	x0, [sp, #392]
  420ff4:	ldr	x0, [sp, #392]
  420ff8:	add	x1, x0, #0x1
  420ffc:	str	x1, [sp, #392]
  421000:	mov	w1, #0x2f                  	// #47
  421004:	strb	w1, [x0]
  421008:	ldr	x0, [sp, #368]
  42100c:	mov	x2, #0x64                  	// #100
  421010:	mov	x1, x0
  421014:	ldr	x0, [sp, #392]
  421018:	bl	404020 <memcpy@plt>
  42101c:	ldr	x0, [sp, #392]
  421020:	add	x0, x0, #0x64
  421024:	strb	wzr, [x0]
  421028:	add	x0, sp, #0x48
  42102c:	str	x0, [sp, #400]
  421030:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421034:	add	x0, x0, #0x8
  421038:	str	xzr, [x0]
  42103c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421040:	add	x0, x0, #0x10
  421044:	str	xzr, [x0]
  421048:	ldr	x0, [sp, #48]
  42104c:	ldr	x1, [sp, #400]
  421050:	bl	423d0c <wcrtomb@plt+0x1effc>
  421054:	ldr	x0, [sp, #48]
  421058:	add	x0, x0, #0x8
  42105c:	ldr	x1, [sp, #400]
  421060:	bl	423d0c <wcrtomb@plt+0x1effc>
  421064:	ldr	x0, [sp, #48]
  421068:	ldr	x0, [x0, #8]
  42106c:	bl	44a1dc <argp_usage@@Base+0x10f0>
  421070:	and	w1, w0, #0xff
  421074:	ldr	x0, [sp, #48]
  421078:	strb	w1, [x0, #16]
  42107c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421080:	add	x0, x0, #0x28
  421084:	ldr	x0, [x0]
  421088:	bl	404880 <free@plt>
  42108c:	ldr	x0, [sp, #424]
  421090:	cmp	x0, #0x0
  421094:	b.eq	4210c8 <wcrtomb@plt+0x1c3b8>  // b.none
  421098:	ldr	x0, [sp, #424]
  42109c:	add	x0, x0, #0x200
  4210a0:	str	x0, [sp, #400]
  4210a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4210a8:	add	x0, x0, #0x28
  4210ac:	ldr	x1, [sp, #424]
  4210b0:	str	x1, [x0]
  4210b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4210b8:	add	x0, x0, #0x20
  4210bc:	ldr	x1, [sp, #408]
  4210c0:	str	x1, [x0]
  4210c4:	b	421100 <wcrtomb@plt+0x1c3f0>
  4210c8:	ldr	x0, [sp, #368]
  4210cc:	add	x1, x0, #0x9d
  4210d0:	add	x0, sp, #0x48
  4210d4:	mov	x2, #0x64                  	// #100
  4210d8:	bl	404020 <memcpy@plt>
  4210dc:	strb	wzr, [sp, #172]
  4210e0:	add	x0, sp, #0x48
  4210e4:	str	x0, [sp, #400]
  4210e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4210ec:	add	x0, x0, #0x28
  4210f0:	str	xzr, [x0]
  4210f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4210f8:	add	x0, x0, #0x20
  4210fc:	str	xzr, [x0]
  421100:	ldr	x0, [sp, #48]
  421104:	add	x0, x0, #0x18
  421108:	ldr	x1, [sp, #400]
  42110c:	bl	423d0c <wcrtomb@plt+0x1effc>
  421110:	mov	w0, #0x1                   	// #1
  421114:	b	421120 <wcrtomb@plt+0x1c410>
  421118:	nop
  42111c:	b	420b18 <wcrtomb@plt+0x1be08>
  421120:	ldr	x19, [sp, #16]
  421124:	ldp	x29, x30, [sp], #464
  421128:	ret
  42112c:	stp	x29, x30, [sp, #-80]!
  421130:	mov	x29, sp
  421134:	str	x19, [sp, #16]
  421138:	str	x0, [sp, #56]
  42113c:	str	x1, [sp, #48]
  421140:	str	x2, [sp, #40]
  421144:	str	w3, [sp, #36]
  421148:	ldr	x0, [sp, #56]
  42114c:	add	x0, x0, #0x64
  421150:	add	x1, sp, #0x47
  421154:	mov	x2, x1
  421158:	mov	x1, #0x8                   	// #8
  42115c:	bl	4221b0 <wcrtomb@plt+0x1d4a0>
  421160:	str	w0, [sp, #72]
  421164:	ldr	x0, [sp, #56]
  421168:	add	x2, x0, #0x101
  42116c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421170:	add	x1, x0, #0x450
  421174:	mov	x0, x2
  421178:	bl	4047c0 <strcmp@plt>
  42117c:	cmp	w0, #0x0
  421180:	b.ne	421228 <wcrtomb@plt+0x1c518>  // b.any
  421184:	ldr	x0, [sp, #56]
  421188:	ldrb	w0, [x0, #475]
  42118c:	cmp	w0, #0x0
  421190:	b.ne	421200 <wcrtomb@plt+0x1c4f0>  // b.any
  421194:	ldr	x0, [sp, #56]
  421198:	ldrb	w0, [x0, #476]
  42119c:	cmp	w0, #0x2f
  4211a0:	b.ls	421200 <wcrtomb@plt+0x1c4f0>  // b.plast
  4211a4:	ldr	x0, [sp, #56]
  4211a8:	ldrb	w0, [x0, #476]
  4211ac:	cmp	w0, #0x37
  4211b0:	b.hi	421200 <wcrtomb@plt+0x1c4f0>  // b.pmore
  4211b4:	ldr	x0, [sp, #56]
  4211b8:	ldrb	w0, [x0, #487]
  4211bc:	cmp	w0, #0x20
  4211c0:	b.ne	421200 <wcrtomb@plt+0x1c4f0>  // b.any
  4211c4:	ldr	x0, [sp, #56]
  4211c8:	ldrb	w0, [x0, #488]
  4211cc:	cmp	w0, #0x2f
  4211d0:	b.ls	421200 <wcrtomb@plt+0x1c4f0>  // b.plast
  4211d4:	ldr	x0, [sp, #56]
  4211d8:	ldrb	w0, [x0, #488]
  4211dc:	cmp	w0, #0x37
  4211e0:	b.hi	421200 <wcrtomb@plt+0x1c4f0>  // b.pmore
  4211e4:	ldr	x0, [sp, #56]
  4211e8:	ldrb	w0, [x0, #499]
  4211ec:	cmp	w0, #0x20
  4211f0:	b.ne	421200 <wcrtomb@plt+0x1c4f0>  // b.any
  4211f4:	mov	w0, #0x5                   	// #5
  4211f8:	str	w0, [sp, #76]
  4211fc:	b	421270 <wcrtomb@plt+0x1c560>
  421200:	ldr	x0, [sp, #48]
  421204:	ldr	x0, [x0, #352]
  421208:	cmp	x0, #0x0
  42120c:	b.eq	42121c <wcrtomb@plt+0x1c50c>  // b.none
  421210:	mov	w0, #0x4                   	// #4
  421214:	str	w0, [sp, #76]
  421218:	b	421270 <wcrtomb@plt+0x1c560>
  42121c:	mov	w0, #0x3                   	// #3
  421220:	str	w0, [sp, #76]
  421224:	b	421270 <wcrtomb@plt+0x1c560>
  421228:	ldr	x0, [sp, #56]
  42122c:	add	x2, x0, #0x101
  421230:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421234:	add	x1, x0, #0x458
  421238:	mov	x0, x2
  42123c:	bl	4047c0 <strcmp@plt>
  421240:	cmp	w0, #0x0
  421244:	b.ne	421268 <wcrtomb@plt+0x1c558>  // b.any
  421248:	ldrb	w0, [sp, #71]
  42124c:	cmp	w0, #0x0
  421250:	b.eq	42125c <wcrtomb@plt+0x1c54c>  // b.none
  421254:	mov	w0, #0x2                   	// #2
  421258:	b	421260 <wcrtomb@plt+0x1c550>
  42125c:	mov	w0, #0x6                   	// #6
  421260:	str	w0, [sp, #76]
  421264:	b	421270 <wcrtomb@plt+0x1c560>
  421268:	mov	w0, #0x1                   	// #1
  42126c:	str	w0, [sp, #76]
  421270:	ldr	x0, [sp, #40]
  421274:	ldr	w1, [sp, #76]
  421278:	str	w1, [x0]
  42127c:	ldr	x0, [sp, #48]
  421280:	ldr	w1, [sp, #72]
  421284:	str	w1, [x0, #104]
  421288:	ldr	x0, [sp, #56]
  42128c:	add	x0, x0, #0x88
  421290:	mov	x1, #0xc                   	// #12
  421294:	bl	42225c <wcrtomb@plt+0x1d54c>
  421298:	mov	x1, x0
  42129c:	ldr	x0, [sp, #48]
  4212a0:	str	x1, [x0, #232]
  4212a4:	ldr	x0, [sp, #48]
  4212a8:	str	xzr, [x0, #240]
  4212ac:	ldr	x0, [sp, #48]
  4212b0:	add	x3, x0, #0x20
  4212b4:	ldr	x0, [sp, #56]
  4212b8:	ldrb	w0, [x0, #265]
  4212bc:	cmp	w0, #0x0
  4212c0:	b.eq	4212d0 <wcrtomb@plt+0x1c5c0>  // b.none
  4212c4:	ldr	x0, [sp, #56]
  4212c8:	add	x0, x0, #0x109
  4212cc:	b	4212d4 <wcrtomb@plt+0x1c5c4>
  4212d0:	mov	x0, #0x0                   	// #0
  4212d4:	mov	x2, #0x20                  	// #32
  4212d8:	mov	x1, x0
  4212dc:	mov	x0, x3
  4212e0:	bl	423d5c <wcrtomb@plt+0x1f04c>
  4212e4:	ldr	x0, [sp, #48]
  4212e8:	add	x3, x0, #0x28
  4212ec:	ldr	x0, [sp, #56]
  4212f0:	ldrb	w0, [x0, #297]
  4212f4:	cmp	w0, #0x0
  4212f8:	b.eq	421308 <wcrtomb@plt+0x1c5f8>  // b.none
  4212fc:	ldr	x0, [sp, #56]
  421300:	add	x0, x0, #0x129
  421304:	b	42130c <wcrtomb@plt+0x1c5fc>
  421308:	mov	x0, #0x0                   	// #0
  42130c:	mov	x2, #0x20                  	// #32
  421310:	mov	x1, x0
  421314:	mov	x0, x3
  421318:	bl	423d5c <wcrtomb@plt+0x1f04c>
  42131c:	ldr	x0, [sp, #48]
  421320:	bl	4183f4 <wcrtomb@plt+0x136e4>
  421324:	ldr	w0, [sp, #76]
  421328:	cmp	w0, #0x2
  42132c:	b.ne	421398 <wcrtomb@plt+0x1c688>  // b.any
  421330:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421334:	add	x0, x0, #0x51
  421338:	ldrb	w0, [x0]
  42133c:	cmp	w0, #0x0
  421340:	b.eq	421398 <wcrtomb@plt+0x1c688>  // b.none
  421344:	ldr	x0, [sp, #56]
  421348:	add	x0, x0, #0x159
  42134c:	mov	x1, #0xc                   	// #12
  421350:	bl	42225c <wcrtomb@plt+0x1d54c>
  421354:	mov	x1, x0
  421358:	ldr	x0, [sp, #48]
  42135c:	str	x1, [x0, #216]
  421360:	ldr	x0, [sp, #56]
  421364:	add	x0, x0, #0x165
  421368:	mov	x1, #0xc                   	// #12
  42136c:	bl	42225c <wcrtomb@plt+0x1d54c>
  421370:	mov	x1, x0
  421374:	ldr	x0, [sp, #48]
  421378:	str	x1, [x0, #248]
  42137c:	ldr	x0, [sp, #48]
  421380:	str	xzr, [x0, #256]
  421384:	ldr	x0, [sp, #48]
  421388:	ldr	x1, [x0, #256]
  42138c:	ldr	x0, [sp, #48]
  421390:	str	x1, [x0, #224]
  421394:	b	42141c <wcrtomb@plt+0x1c70c>
  421398:	ldr	w0, [sp, #76]
  42139c:	cmp	w0, #0x5
  4213a0:	b.ne	4213f8 <wcrtomb@plt+0x1c6e8>  // b.any
  4213a4:	ldr	x0, [sp, #56]
  4213a8:	add	x0, x0, #0x1dc
  4213ac:	mov	x1, #0xc                   	// #12
  4213b0:	bl	42225c <wcrtomb@plt+0x1d54c>
  4213b4:	mov	x1, x0
  4213b8:	ldr	x0, [sp, #48]
  4213bc:	str	x1, [x0, #216]
  4213c0:	ldr	x0, [sp, #56]
  4213c4:	add	x0, x0, #0x1e8
  4213c8:	mov	x1, #0xc                   	// #12
  4213cc:	bl	42225c <wcrtomb@plt+0x1d54c>
  4213d0:	mov	x1, x0
  4213d4:	ldr	x0, [sp, #48]
  4213d8:	str	x1, [x0, #248]
  4213dc:	ldr	x0, [sp, #48]
  4213e0:	str	xzr, [x0, #256]
  4213e4:	ldr	x0, [sp, #48]
  4213e8:	ldr	x1, [x0, #256]
  4213ec:	ldr	x0, [sp, #48]
  4213f0:	str	x1, [x0, #224]
  4213f4:	b	42141c <wcrtomb@plt+0x1c70c>
  4213f8:	ldr	x2, [sp, #48]
  4213fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421400:	add	x0, x0, #0x2f8
  421404:	ldp	x0, x1, [x0]
  421408:	stp	x0, x1, [x2, #248]
  42140c:	ldr	x2, [sp, #48]
  421410:	ldr	x0, [sp, #48]
  421414:	ldp	x0, x1, [x0, #248]
  421418:	stp	x0, x1, [x2, #216]
  42141c:	ldr	w0, [sp, #76]
  421420:	cmp	w0, #0x1
  421424:	b.ne	42146c <wcrtomb@plt+0x1c75c>  // b.any
  421428:	ldr	x0, [sp, #56]
  42142c:	add	x0, x0, #0x6c
  421430:	mov	x1, #0x8                   	// #8
  421434:	bl	422298 <wcrtomb@plt+0x1d588>
  421438:	mov	w1, w0
  42143c:	ldr	x0, [sp, #48]
  421440:	str	w1, [x0, #112]
  421444:	ldr	x0, [sp, #56]
  421448:	add	x0, x0, #0x74
  42144c:	mov	x1, #0x8                   	// #8
  421450:	bl	4220fc <wcrtomb@plt+0x1d3ec>
  421454:	mov	w1, w0
  421458:	ldr	x0, [sp, #48]
  42145c:	str	w1, [x0, #116]
  421460:	ldr	x0, [sp, #48]
  421464:	str	xzr, [x0, #120]
  421468:	b	42159c <wcrtomb@plt+0x1c88c>
  42146c:	ldr	w0, [sp, #36]
  421470:	cmp	w0, #0x0
  421474:	b.eq	421540 <wcrtomb@plt+0x1c830>  // b.none
  421478:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42147c:	add	x0, x0, #0x2d0
  421480:	ldrb	w0, [x0]
  421484:	cmp	w0, #0x0
  421488:	b.ne	4214c0 <wcrtomb@plt+0x1c7b0>  // b.any
  42148c:	ldr	x0, [sp, #56]
  421490:	ldrb	w0, [x0, #265]
  421494:	cmp	w0, #0x0
  421498:	b.eq	4214c0 <wcrtomb@plt+0x1c7b0>  // b.none
  42149c:	ldr	x0, [sp, #56]
  4214a0:	add	x2, x0, #0x109
  4214a4:	ldr	x0, [sp, #48]
  4214a8:	add	x0, x0, #0x70
  4214ac:	mov	x1, x0
  4214b0:	mov	x0, x2
  4214b4:	bl	426f60 <wcrtomb@plt+0x22250>
  4214b8:	cmp	w0, #0x0
  4214bc:	b.ne	4214dc <wcrtomb@plt+0x1c7cc>  // b.any
  4214c0:	ldr	x0, [sp, #56]
  4214c4:	add	x0, x0, #0x6c
  4214c8:	mov	x1, #0x8                   	// #8
  4214cc:	bl	422298 <wcrtomb@plt+0x1d588>
  4214d0:	mov	w1, w0
  4214d4:	ldr	x0, [sp, #48]
  4214d8:	str	w1, [x0, #112]
  4214dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4214e0:	add	x0, x0, #0x2d0
  4214e4:	ldrb	w0, [x0]
  4214e8:	cmp	w0, #0x0
  4214ec:	b.ne	421524 <wcrtomb@plt+0x1c814>  // b.any
  4214f0:	ldr	x0, [sp, #56]
  4214f4:	ldrb	w0, [x0, #297]
  4214f8:	cmp	w0, #0x0
  4214fc:	b.eq	421524 <wcrtomb@plt+0x1c814>  // b.none
  421500:	ldr	x0, [sp, #56]
  421504:	add	x2, x0, #0x129
  421508:	ldr	x0, [sp, #48]
  42150c:	add	x0, x0, #0x74
  421510:	mov	x1, x0
  421514:	mov	x0, x2
  421518:	bl	427080 <wcrtomb@plt+0x22370>
  42151c:	cmp	w0, #0x0
  421520:	b.ne	421540 <wcrtomb@plt+0x1c830>  // b.any
  421524:	ldr	x0, [sp, #56]
  421528:	add	x0, x0, #0x74
  42152c:	mov	x1, #0x8                   	// #8
  421530:	bl	4220fc <wcrtomb@plt+0x1d3ec>
  421534:	mov	w1, w0
  421538:	ldr	x0, [sp, #48]
  42153c:	str	w1, [x0, #116]
  421540:	ldr	x0, [sp, #56]
  421544:	ldrb	w0, [x0, #156]
  421548:	sub	w0, w0, #0x33
  42154c:	cmp	w0, #0x1
  421550:	b.hi	421594 <wcrtomb@plt+0x1c884>  // b.pmore
  421554:	ldr	x0, [sp, #56]
  421558:	add	x0, x0, #0x149
  42155c:	mov	x1, #0x8                   	// #8
  421560:	bl	422138 <wcrtomb@plt+0x1d428>
  421564:	mov	w19, w0
  421568:	ldr	x0, [sp, #56]
  42156c:	add	x0, x0, #0x151
  421570:	mov	x1, #0x8                   	// #8
  421574:	bl	422174 <wcrtomb@plt+0x1d464>
  421578:	mov	w1, w0
  42157c:	mov	w0, w19
  421580:	bl	4042f0 <gnu_dev_makedev@plt>
  421584:	mov	x1, x0
  421588:	ldr	x0, [sp, #48]
  42158c:	str	x1, [x0, #120]
  421590:	b	42159c <wcrtomb@plt+0x1c88c>
  421594:	ldr	x0, [sp, #48]
  421598:	str	xzr, [x0, #120]
  42159c:	ldr	x0, [sp, #48]
  4215a0:	bl	418fa8 <wcrtomb@plt+0x14298>
  4215a4:	ldr	x0, [sp, #48]
  4215a8:	bl	42b380 <wcrtomb@plt+0x26670>
  4215ac:	and	w0, w0, #0xff
  4215b0:	cmp	w0, #0x0
  4215b4:	b.eq	4215d0 <wcrtomb@plt+0x1c8c0>  // b.none
  4215b8:	ldr	x0, [sp, #48]
  4215bc:	bl	42b3cc <wcrtomb@plt+0x266bc>
  4215c0:	ldr	x0, [sp, #48]
  4215c4:	mov	w1, #0x1                   	// #1
  4215c8:	strb	w1, [x0, #272]
  4215cc:	b	421634 <wcrtomb@plt+0x1c924>
  4215d0:	ldr	x0, [sp, #48]
  4215d4:	strb	wzr, [x0, #272]
  4215d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4215dc:	add	x0, x0, #0x0
  4215e0:	ldr	w0, [x0]
  4215e4:	cmp	w0, #0x6
  4215e8:	b.eq	421600 <wcrtomb@plt+0x1c8f0>  // b.none
  4215ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4215f0:	add	x0, x0, #0x0
  4215f4:	ldr	w0, [x0]
  4215f8:	cmp	w0, #0x2
  4215fc:	b.ne	421618 <wcrtomb@plt+0x1c908>  // b.any
  421600:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421604:	add	x0, x0, #0x18
  421608:	ldr	x0, [x0]
  42160c:	ldrb	w0, [x0, #156]
  421610:	cmp	w0, #0x44
  421614:	b.eq	421628 <wcrtomb@plt+0x1c918>  // b.none
  421618:	ldr	x0, [sp, #48]
  42161c:	ldr	x0, [x0, #384]
  421620:	cmp	x0, #0x0
  421624:	b.eq	421634 <wcrtomb@plt+0x1c924>  // b.none
  421628:	ldr	x0, [sp, #48]
  42162c:	mov	w1, #0x1                   	// #1
  421630:	strb	w1, [x0, #376]
  421634:	nop
  421638:	ldr	x19, [sp, #16]
  42163c:	ldp	x29, x30, [sp], #80
  421640:	ret
  421644:	sub	sp, sp, #0x4f0
  421648:	stp	x29, x30, [sp]
  42164c:	mov	x29, sp
  421650:	str	x19, [sp, #16]
  421654:	str	x0, [x29, #72]
  421658:	str	x1, [x29, #64]
  42165c:	str	x2, [x29, #56]
  421660:	str	x3, [x29, #48]
  421664:	str	x4, [x29, #40]
  421668:	strb	w5, [x29, #39]
  42166c:	strb	w6, [x29, #38]
  421670:	ldr	x0, [x29, #48]
  421674:	str	x0, [x29, #1208]
  421678:	ldr	x0, [x29, #1208]
  42167c:	neg	x0, x0
  421680:	str	x0, [x29, #1200]
  421684:	ldr	x0, [x29, #72]
  421688:	str	x0, [x29, #1248]
  42168c:	ldr	x1, [x29, #1248]
  421690:	ldr	x0, [x29, #64]
  421694:	add	x0, x1, x0
  421698:	str	x0, [x29, #1240]
  42169c:	strb	wzr, [x29, #1239]
  4216a0:	ldr	x0, [x29, #1248]
  4216a4:	ldrb	w0, [x0]
  4216a8:	cmp	w0, #0x0
  4216ac:	cset	w0, eq  // eq = none
  4216b0:	and	w0, w0, #0xff
  4216b4:	and	x0, x0, #0xff
  4216b8:	ldr	x1, [x29, #1248]
  4216bc:	add	x0, x1, x0
  4216c0:	str	x0, [x29, #1248]
  4216c4:	ldr	x1, [x29, #1248]
  4216c8:	ldr	x0, [x29, #1240]
  4216cc:	cmp	x1, x0
  4216d0:	b.ne	421750 <wcrtomb@plt+0x1ca40>  // b.any
  4216d4:	ldr	x0, [x29, #56]
  4216d8:	cmp	x0, #0x0
  4216dc:	b.eq	421748 <wcrtomb@plt+0x1ca38>  // b.none
  4216e0:	ldrb	w0, [x29, #38]
  4216e4:	eor	w0, w0, #0x1
  4216e8:	and	w0, w0, #0xff
  4216ec:	cmp	w0, #0x0
  4216f0:	b.eq	421748 <wcrtomb@plt+0x1ca38>  // b.none
  4216f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4216f8:	add	x0, x0, #0x420
  4216fc:	ldr	x0, [x0]
  421700:	cmp	x0, #0x0
  421704:	b.eq	421718 <wcrtomb@plt+0x1ca08>  // b.none
  421708:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42170c:	add	x0, x0, #0x420
  421710:	ldr	x0, [x0]
  421714:	blr	x0
  421718:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42171c:	add	x0, x0, #0x460
  421720:	bl	404c60 <gettext@plt>
  421724:	ldr	x3, [x29, #56]
  421728:	mov	x2, x0
  42172c:	mov	w1, #0x0                   	// #0
  421730:	mov	w0, #0x0                   	// #0
  421734:	bl	404100 <error@plt>
  421738:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42173c:	add	x0, x0, #0xdb0
  421740:	mov	w1, #0x2                   	// #2
  421744:	str	w1, [x0]
  421748:	mov	x0, #0xffffffffffffffff    	// #-1
  42174c:	b	4220e8 <wcrtomb@plt+0x1d3d8>
  421750:	bl	4047f0 <__ctype_b_loc@plt>
  421754:	ldr	x1, [x0]
  421758:	ldr	x0, [x29, #1248]
  42175c:	ldrb	w0, [x0]
  421760:	and	x0, x0, #0xff
  421764:	lsl	x0, x0, #1
  421768:	add	x0, x1, x0
  42176c:	ldrh	w0, [x0]
  421770:	and	w0, w0, #0x2000
  421774:	cmp	w0, #0x0
  421778:	b.eq	42178c <wcrtomb@plt+0x1ca7c>  // b.none
  42177c:	ldr	x0, [x29, #1248]
  421780:	add	x0, x0, #0x1
  421784:	str	x0, [x29, #1248]
  421788:	b	4216c4 <wcrtomb@plt+0x1c9b4>
  42178c:	nop
  421790:	str	xzr, [x29, #1256]
  421794:	ldr	x0, [x29, #1248]
  421798:	ldrb	w0, [x0]
  42179c:	sub	w0, w0, #0x30
  4217a0:	cmp	w0, #0x7
  4217a4:	b.hi	421a90 <wcrtomb@plt+0x1cd80>  // b.pmore
  4217a8:	ldr	x0, [x29, #1248]
  4217ac:	str	x0, [x29, #1160]
  4217b0:	strb	wzr, [x29, #1238]
  4217b4:	ldr	x0, [x29, #1248]
  4217b8:	add	x1, x0, #0x1
  4217bc:	str	x1, [x29, #1248]
  4217c0:	ldrb	w0, [x0]
  4217c4:	sub	w0, w0, #0x30
  4217c8:	sxtw	x0, w0
  4217cc:	ldr	x1, [x29, #1256]
  4217d0:	add	x0, x1, x0
  4217d4:	str	x0, [x29, #1256]
  4217d8:	ldr	x1, [x29, #1248]
  4217dc:	ldr	x0, [x29, #1240]
  4217e0:	cmp	x1, x0
  4217e4:	b.eq	421838 <wcrtomb@plt+0x1cb28>  // b.none
  4217e8:	ldr	x0, [x29, #1248]
  4217ec:	ldrb	w0, [x0]
  4217f0:	sub	w0, w0, #0x30
  4217f4:	cmp	w0, #0x7
  4217f8:	b.hi	421838 <wcrtomb@plt+0x1cb28>  // b.pmore
  4217fc:	ldrb	w0, [x29, #1238]
  421800:	ldr	x1, [x29, #1256]
  421804:	and	x1, x1, #0x1fffffffffffffff
  421808:	ldr	x2, [x29, #1256]
  42180c:	cmp	x2, x1
  421810:	cset	w1, ne  // ne = any
  421814:	and	w1, w1, #0xff
  421818:	orr	w0, w0, w1
  42181c:	cmp	w0, #0x0
  421820:	cset	w0, ne  // ne = any
  421824:	strb	w0, [x29, #1238]
  421828:	ldr	x0, [x29, #1256]
  42182c:	lsl	x0, x0, #3
  421830:	str	x0, [x29, #1256]
  421834:	b	4217b4 <wcrtomb@plt+0x1caa4>
  421838:	ldrb	w0, [x29, #1238]
  42183c:	cmp	w0, #0x0
  421840:	b.ne	421854 <wcrtomb@plt+0x1cb44>  // b.any
  421844:	ldr	x1, [x29, #40]
  421848:	ldr	x0, [x29, #1256]
  42184c:	cmp	x1, x0
  421850:	b.cs	4219f4 <wcrtomb@plt+0x1cce4>  // b.hs, b.nlast
  421854:	ldr	x0, [x29, #1160]
  421858:	ldrb	w0, [x0]
  42185c:	cmp	w0, #0x31
  421860:	b.ls	4219f4 <wcrtomb@plt+0x1cce4>  // b.plast
  421864:	ldr	x0, [x29, #56]
  421868:	cmp	x0, #0x0
  42186c:	b.eq	4219f4 <wcrtomb@plt+0x1cce4>  // b.none
  421870:	ldr	x0, [x29, #1160]
  421874:	ldrb	w0, [x0]
  421878:	sub	w0, w0, #0x30
  42187c:	orr	w0, w0, #0x4
  421880:	str	w0, [x29, #1232]
  421884:	strb	wzr, [x29, #1238]
  421888:	str	xzr, [x29, #1256]
  42188c:	ldr	x0, [x29, #1160]
  421890:	str	x0, [x29, #1248]
  421894:	mov	w1, #0x7                   	// #7
  421898:	ldr	w0, [x29, #1232]
  42189c:	sub	w0, w1, w0
  4218a0:	sxtw	x0, w0
  4218a4:	ldr	x1, [x29, #1256]
  4218a8:	add	x0, x1, x0
  4218ac:	str	x0, [x29, #1256]
  4218b0:	ldr	x0, [x29, #1248]
  4218b4:	add	x0, x0, #0x1
  4218b8:	str	x0, [x29, #1248]
  4218bc:	ldr	x1, [x29, #1248]
  4218c0:	ldr	x0, [x29, #1240]
  4218c4:	cmp	x1, x0
  4218c8:	b.eq	42192c <wcrtomb@plt+0x1cc1c>  // b.none
  4218cc:	ldr	x0, [x29, #1248]
  4218d0:	ldrb	w0, [x0]
  4218d4:	sub	w0, w0, #0x30
  4218d8:	cmp	w0, #0x7
  4218dc:	b.hi	42192c <wcrtomb@plt+0x1cc1c>  // b.pmore
  4218e0:	ldr	x0, [x29, #1248]
  4218e4:	ldrb	w0, [x0]
  4218e8:	sub	w0, w0, #0x30
  4218ec:	str	w0, [x29, #1232]
  4218f0:	ldrb	w0, [x29, #1238]
  4218f4:	ldr	x1, [x29, #1256]
  4218f8:	and	x1, x1, #0x1fffffffffffffff
  4218fc:	ldr	x2, [x29, #1256]
  421900:	cmp	x2, x1
  421904:	cset	w1, ne  // ne = any
  421908:	and	w1, w1, #0xff
  42190c:	orr	w0, w0, w1
  421910:	cmp	w0, #0x0
  421914:	cset	w0, ne  // ne = any
  421918:	strb	w0, [x29, #1238]
  42191c:	ldr	x0, [x29, #1256]
  421920:	lsl	x0, x0, #3
  421924:	str	x0, [x29, #1256]
  421928:	b	421894 <wcrtomb@plt+0x1cb84>
  42192c:	ldr	x0, [x29, #1256]
  421930:	add	x0, x0, #0x1
  421934:	str	x0, [x29, #1256]
  421938:	ldrb	w0, [x29, #1238]
  42193c:	ldr	x1, [x29, #1256]
  421940:	cmp	x1, #0x0
  421944:	cset	w1, eq  // eq = none
  421948:	and	w1, w1, #0xff
  42194c:	orr	w0, w0, w1
  421950:	cmp	w0, #0x0
  421954:	cset	w0, ne  // ne = any
  421958:	strb	w0, [x29, #1238]
  42195c:	ldrb	w0, [x29, #1238]
  421960:	eor	w0, w0, #0x1
  421964:	and	w0, w0, #0xff
  421968:	cmp	w0, #0x0
  42196c:	b.eq	4219f4 <wcrtomb@plt+0x1cce4>  // b.none
  421970:	ldr	x1, [x29, #1256]
  421974:	ldr	x0, [x29, #1200]
  421978:	cmp	x1, x0
  42197c:	b.hi	4219f4 <wcrtomb@plt+0x1cce4>  // b.pmore
  421980:	ldrb	w0, [x29, #38]
  421984:	eor	w0, w0, #0x1
  421988:	and	w0, w0, #0xff
  42198c:	cmp	w0, #0x0
  421990:	b.eq	4219ec <wcrtomb@plt+0x1ccdc>  // b.none
  421994:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421998:	add	x0, x0, #0x420
  42199c:	ldr	x0, [x0]
  4219a0:	cmp	x0, #0x0
  4219a4:	b.eq	4219b8 <wcrtomb@plt+0x1cca8>  // b.none
  4219a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4219ac:	add	x0, x0, #0x420
  4219b0:	ldr	x0, [x0]
  4219b4:	blr	x0
  4219b8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4219bc:	add	x0, x0, #0x498
  4219c0:	bl	404c60 <gettext@plt>
  4219c4:	mov	x2, x0
  4219c8:	ldr	x1, [x29, #1248]
  4219cc:	ldr	x0, [x29, #1160]
  4219d0:	sub	x0, x1, x0
  4219d4:	ldr	x5, [x29, #56]
  4219d8:	ldr	x4, [x29, #1160]
  4219dc:	mov	w3, w0
  4219e0:	mov	w1, #0x0                   	// #0
  4219e4:	mov	w0, #0x0                   	// #0
  4219e8:	bl	404100 <error@plt>
  4219ec:	mov	w0, #0x1                   	// #1
  4219f0:	strb	w0, [x29, #1239]
  4219f4:	ldrb	w0, [x29, #1238]
  4219f8:	cmp	w0, #0x0
  4219fc:	b.eq	421e10 <wcrtomb@plt+0x1d100>  // b.none
  421a00:	ldr	x0, [x29, #56]
  421a04:	cmp	x0, #0x0
  421a08:	b.eq	421a88 <wcrtomb@plt+0x1cd78>  // b.none
  421a0c:	ldrb	w0, [x29, #38]
  421a10:	eor	w0, w0, #0x1
  421a14:	and	w0, w0, #0xff
  421a18:	cmp	w0, #0x0
  421a1c:	b.eq	421a88 <wcrtomb@plt+0x1cd78>  // b.none
  421a20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421a24:	add	x0, x0, #0x420
  421a28:	ldr	x0, [x0]
  421a2c:	cmp	x0, #0x0
  421a30:	b.eq	421a44 <wcrtomb@plt+0x1cd34>  // b.none
  421a34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421a38:	add	x0, x0, #0x420
  421a3c:	ldr	x0, [x0]
  421a40:	blr	x0
  421a44:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421a48:	add	x0, x0, #0x4e0
  421a4c:	bl	404c60 <gettext@plt>
  421a50:	mov	x2, x0
  421a54:	ldr	x1, [x29, #1248]
  421a58:	ldr	x0, [x29, #1160]
  421a5c:	sub	x0, x1, x0
  421a60:	ldr	x5, [x29, #56]
  421a64:	ldr	x4, [x29, #1160]
  421a68:	mov	w3, w0
  421a6c:	mov	w1, #0x0                   	// #0
  421a70:	mov	w0, #0x0                   	// #0
  421a74:	bl	404100 <error@plt>
  421a78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421a7c:	add	x0, x0, #0xdb0
  421a80:	mov	w1, #0x2                   	// #2
  421a84:	str	w1, [x0]
  421a88:	mov	x0, #0xffffffffffffffff    	// #-1
  421a8c:	b	4220e8 <wcrtomb@plt+0x1d3d8>
  421a90:	ldrb	w0, [x29, #39]
  421a94:	cmp	w0, #0x0
  421a98:	b.ne	421e10 <wcrtomb@plt+0x1d100>  // b.any
  421a9c:	ldr	x0, [x29, #1248]
  421aa0:	ldrb	w0, [x0]
  421aa4:	cmp	w0, #0x2d
  421aa8:	b.eq	421abc <wcrtomb@plt+0x1cdac>  // b.none
  421aac:	ldr	x0, [x29, #1248]
  421ab0:	ldrb	w0, [x0]
  421ab4:	cmp	w0, #0x2b
  421ab8:	b.ne	421ca8 <wcrtomb@plt+0x1cf98>  // b.any
  421abc:	ldrb	w0, [x29, #38]
  421ac0:	eor	w0, w0, #0x1
  421ac4:	and	w0, w0, #0xff
  421ac8:	cmp	w0, #0x0
  421acc:	b.eq	421b3c <wcrtomb@plt+0x1ce2c>  // b.none
  421ad0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421ad4:	add	x0, x0, #0xa01
  421ad8:	ldrb	w0, [x0]
  421adc:	eor	w0, w0, #0x1
  421ae0:	and	w0, w0, #0xff
  421ae4:	cmp	w0, #0x0
  421ae8:	b.eq	421b3c <wcrtomb@plt+0x1ce2c>  // b.none
  421aec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421af0:	add	x0, x0, #0xa01
  421af4:	mov	w1, #0x1                   	// #1
  421af8:	strb	w1, [x0]
  421afc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421b00:	add	x0, x0, #0x420
  421b04:	ldr	x0, [x0]
  421b08:	cmp	x0, #0x0
  421b0c:	b.eq	421b20 <wcrtomb@plt+0x1ce10>  // b.none
  421b10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421b14:	add	x0, x0, #0x420
  421b18:	ldr	x0, [x0]
  421b1c:	blr	x0
  421b20:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421b24:	add	x0, x0, #0x510
  421b28:	bl	404c60 <gettext@plt>
  421b2c:	mov	x2, x0
  421b30:	mov	w1, #0x0                   	// #0
  421b34:	mov	w0, #0x0                   	// #0
  421b38:	bl	404100 <error@plt>
  421b3c:	ldr	x0, [x29, #1248]
  421b40:	add	x1, x0, #0x1
  421b44:	str	x1, [x29, #1248]
  421b48:	ldrb	w0, [x0]
  421b4c:	cmp	w0, #0x2d
  421b50:	cset	w0, eq  // eq = none
  421b54:	strb	w0, [x29, #1239]
  421b58:	b	421c68 <wcrtomb@plt+0x1cf58>
  421b5c:	ldr	x0, [x29, #1256]
  421b60:	and	x0, x0, #0x3ffffffffffffff
  421b64:	ldr	x1, [x29, #1256]
  421b68:	cmp	x1, x0
  421b6c:	b.eq	421c48 <wcrtomb@plt+0x1cf38>  // b.none
  421b70:	ldr	x0, [x29, #64]
  421b74:	add	x0, x0, #0x1
  421b78:	add	x0, x0, #0xf
  421b7c:	lsr	x0, x0, #4
  421b80:	lsl	x0, x0, #4
  421b84:	sub	sp, sp, x0
  421b88:	mov	x0, sp
  421b8c:	add	x0, x0, #0xf
  421b90:	lsr	x0, x0, #4
  421b94:	lsl	x0, x0, #4
  421b98:	str	x0, [x29, #1168]
  421b9c:	ldr	x2, [x29, #64]
  421ba0:	ldr	x1, [x29, #72]
  421ba4:	ldr	x0, [x29, #1168]
  421ba8:	bl	404020 <memcpy@plt>
  421bac:	ldr	x1, [x29, #1168]
  421bb0:	ldr	x0, [x29, #64]
  421bb4:	add	x0, x1, x0
  421bb8:	strb	wzr, [x0]
  421bbc:	ldr	x0, [x29, #56]
  421bc0:	cmp	x0, #0x0
  421bc4:	b.eq	421c40 <wcrtomb@plt+0x1cf30>  // b.none
  421bc8:	ldrb	w0, [x29, #38]
  421bcc:	eor	w0, w0, #0x1
  421bd0:	and	w0, w0, #0xff
  421bd4:	cmp	w0, #0x0
  421bd8:	b.eq	421c40 <wcrtomb@plt+0x1cf30>  // b.none
  421bdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421be0:	add	x0, x0, #0x420
  421be4:	ldr	x0, [x0]
  421be8:	cmp	x0, #0x0
  421bec:	b.eq	421c00 <wcrtomb@plt+0x1cef0>  // b.none
  421bf0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421bf4:	add	x0, x0, #0x420
  421bf8:	ldr	x0, [x0]
  421bfc:	blr	x0
  421c00:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421c04:	add	x0, x0, #0x540
  421c08:	bl	404c60 <gettext@plt>
  421c0c:	mov	x19, x0
  421c10:	ldr	x0, [x29, #1168]
  421c14:	bl	459f38 <argp_usage@@Base+0x10e4c>
  421c18:	ldr	x4, [x29, #56]
  421c1c:	mov	x3, x0
  421c20:	mov	x2, x19
  421c24:	mov	w1, #0x0                   	// #0
  421c28:	mov	w0, #0x0                   	// #0
  421c2c:	bl	404100 <error@plt>
  421c30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421c34:	add	x0, x0, #0xdb0
  421c38:	mov	w1, #0x2                   	// #2
  421c3c:	str	w1, [x0]
  421c40:	mov	x0, #0xffffffffffffffff    	// #-1
  421c44:	b	4220e8 <wcrtomb@plt+0x1d3d8>
  421c48:	ldr	x0, [x29, #1256]
  421c4c:	lsl	x1, x0, #6
  421c50:	ldrsw	x0, [x29, #1180]
  421c54:	orr	x0, x1, x0
  421c58:	str	x0, [x29, #1256]
  421c5c:	ldr	x0, [x29, #1248]
  421c60:	add	x0, x0, #0x1
  421c64:	str	x0, [x29, #1248]
  421c68:	ldr	x1, [x29, #1248]
  421c6c:	ldr	x0, [x29, #1240]
  421c70:	cmp	x1, x0
  421c74:	b.eq	421e0c <wcrtomb@plt+0x1d0fc>  // b.none
  421c78:	ldr	x0, [x29, #1248]
  421c7c:	ldrb	w0, [x0]
  421c80:	mov	w2, w0
  421c84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421c88:	add	x1, x0, #0x900
  421c8c:	sxtw	x0, w2
  421c90:	ldrb	w0, [x1, x0]
  421c94:	str	w0, [x29, #1180]
  421c98:	ldr	w0, [x29, #1180]
  421c9c:	cmp	w0, #0x3f
  421ca0:	b.le	421b5c <wcrtomb@plt+0x1ce4c>
  421ca4:	b	421e0c <wcrtomb@plt+0x1d0fc>
  421ca8:	ldr	x0, [x29, #1248]
  421cac:	ldrb	w0, [x0]
  421cb0:	cmp	w0, #0x80
  421cb4:	b.eq	421cc8 <wcrtomb@plt+0x1cfb8>  // b.none
  421cb8:	ldr	x0, [x29, #1248]
  421cbc:	ldrb	w0, [x0]
  421cc0:	cmp	w0, #0xff
  421cc4:	b.ne	421e10 <wcrtomb@plt+0x1d100>  // b.any
  421cc8:	ldr	x0, [x29, #1248]
  421ccc:	ldrb	w0, [x0]
  421cd0:	and	w0, w0, #0x40
  421cd4:	str	w0, [x29, #1196]
  421cd8:	ldr	w0, [x29, #1196]
  421cdc:	neg	w0, w0
  421ce0:	sxtw	x0, w0
  421ce4:	lsl	x0, x0, #50
  421ce8:	str	x0, [x29, #1184]
  421cec:	ldr	x0, [x29, #1248]
  421cf0:	add	x1, x0, #0x1
  421cf4:	str	x1, [x29, #1248]
  421cf8:	ldrb	w0, [x0]
  421cfc:	and	w1, w0, #0x3f
  421d00:	ldr	w0, [x29, #1196]
  421d04:	sub	w0, w1, w0
  421d08:	sxtw	x0, w0
  421d0c:	str	x0, [x29, #1256]
  421d10:	ldr	x0, [x29, #1256]
  421d14:	lsl	x1, x0, #8
  421d18:	ldr	x0, [x29, #1248]
  421d1c:	add	x2, x0, #0x1
  421d20:	str	x2, [x29, #1248]
  421d24:	ldrb	w0, [x0]
  421d28:	and	x0, x0, #0xff
  421d2c:	add	x0, x1, x0
  421d30:	str	x0, [x29, #1256]
  421d34:	ldr	x1, [x29, #1248]
  421d38:	ldr	x0, [x29, #1240]
  421d3c:	cmp	x1, x0
  421d40:	b.eq	421ddc <wcrtomb@plt+0x1d0cc>  // b.none
  421d44:	ldr	x0, [x29, #1256]
  421d48:	and	x1, x0, #0xffffffffffffff
  421d4c:	ldr	x0, [x29, #1184]
  421d50:	orr	x0, x1, x0
  421d54:	ldr	x1, [x29, #1256]
  421d58:	cmp	x1, x0
  421d5c:	b.eq	421d10 <wcrtomb@plt+0x1d000>  // b.none
  421d60:	ldr	x0, [x29, #56]
  421d64:	cmp	x0, #0x0
  421d68:	b.eq	421dd4 <wcrtomb@plt+0x1d0c4>  // b.none
  421d6c:	ldrb	w0, [x29, #38]
  421d70:	eor	w0, w0, #0x1
  421d74:	and	w0, w0, #0xff
  421d78:	cmp	w0, #0x0
  421d7c:	b.eq	421dd4 <wcrtomb@plt+0x1d0c4>  // b.none
  421d80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421d84:	add	x0, x0, #0x420
  421d88:	ldr	x0, [x0]
  421d8c:	cmp	x0, #0x0
  421d90:	b.eq	421da4 <wcrtomb@plt+0x1d094>  // b.none
  421d94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421d98:	add	x0, x0, #0x420
  421d9c:	ldr	x0, [x0]
  421da0:	blr	x0
  421da4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421da8:	add	x0, x0, #0x578
  421dac:	bl	404c60 <gettext@plt>
  421db0:	ldr	x3, [x29, #56]
  421db4:	mov	x2, x0
  421db8:	mov	w1, #0x0                   	// #0
  421dbc:	mov	w0, #0x0                   	// #0
  421dc0:	bl	404100 <error@plt>
  421dc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421dc8:	add	x0, x0, #0xdb0
  421dcc:	mov	w1, #0x2                   	// #2
  421dd0:	str	w1, [x0]
  421dd4:	mov	x0, #0xffffffffffffffff    	// #-1
  421dd8:	b	4220e8 <wcrtomb@plt+0x1d3d8>
  421ddc:	nop
  421de0:	ldr	w0, [x29, #1196]
  421de4:	cmp	w0, #0x0
  421de8:	cset	w0, ne  // ne = any
  421dec:	strb	w0, [x29, #1239]
  421df0:	ldrb	w0, [x29, #1239]
  421df4:	cmp	w0, #0x0
  421df8:	b.eq	421e10 <wcrtomb@plt+0x1d100>  // b.none
  421dfc:	ldr	x0, [x29, #1256]
  421e00:	neg	x0, x0
  421e04:	str	x0, [x29, #1256]
  421e08:	b	421e10 <wcrtomb@plt+0x1d100>
  421e0c:	nop
  421e10:	ldr	x1, [x29, #1248]
  421e14:	ldr	x0, [x29, #1240]
  421e18:	cmp	x1, x0
  421e1c:	b.eq	421f90 <wcrtomb@plt+0x1d280>  // b.none
  421e20:	ldr	x0, [x29, #1248]
  421e24:	ldrb	w0, [x0]
  421e28:	cmp	w0, #0x0
  421e2c:	b.eq	421f90 <wcrtomb@plt+0x1d280>  // b.none
  421e30:	bl	4047f0 <__ctype_b_loc@plt>
  421e34:	ldr	x1, [x0]
  421e38:	ldr	x0, [x29, #1248]
  421e3c:	ldrb	w0, [x0]
  421e40:	and	x0, x0, #0xff
  421e44:	lsl	x0, x0, #1
  421e48:	add	x0, x1, x0
  421e4c:	ldrh	w0, [x0]
  421e50:	and	w0, w0, #0x2000
  421e54:	cmp	w0, #0x0
  421e58:	b.ne	421f90 <wcrtomb@plt+0x1d280>  // b.any
  421e5c:	ldr	x0, [x29, #56]
  421e60:	cmp	x0, #0x0
  421e64:	b.eq	421f88 <wcrtomb@plt+0x1d278>  // b.none
  421e68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421e6c:	add	x0, x0, #0xa08
  421e70:	ldr	x0, [x0]
  421e74:	cmp	x0, #0x0
  421e78:	b.ne	421eb8 <wcrtomb@plt+0x1d1a8>  // b.any
  421e7c:	mov	x0, #0x0                   	// #0
  421e80:	bl	457d34 <argp_usage@@Base+0xec48>
  421e84:	mov	x1, x0
  421e88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421e8c:	add	x0, x0, #0xa08
  421e90:	str	x1, [x0]
  421e94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421e98:	add	x0, x0, #0xa08
  421e9c:	ldr	x0, [x0]
  421ea0:	mov	w1, #0x8                   	// #8
  421ea4:	bl	457dc0 <argp_usage@@Base+0xecd4>
  421ea8:	b	421eb8 <wcrtomb@plt+0x1d1a8>
  421eac:	ldr	x0, [x29, #1240]
  421eb0:	sub	x0, x0, #0x1
  421eb4:	str	x0, [x29, #1240]
  421eb8:	ldr	x1, [x29, #72]
  421ebc:	ldr	x0, [x29, #1240]
  421ec0:	cmp	x1, x0
  421ec4:	b.eq	421edc <wcrtomb@plt+0x1d1cc>  // b.none
  421ec8:	ldr	x0, [x29, #1240]
  421ecc:	sub	x0, x0, #0x1
  421ed0:	ldrb	w0, [x0]
  421ed4:	cmp	w0, #0x0
  421ed8:	b.eq	421eac <wcrtomb@plt+0x1d19c>  // b.none
  421edc:	ldr	x1, [x29, #1240]
  421ee0:	ldr	x0, [x29, #72]
  421ee4:	sub	x0, x1, x0
  421ee8:	mov	x2, x0
  421eec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421ef0:	add	x0, x0, #0xa08
  421ef4:	ldr	x1, [x0]
  421ef8:	add	x0, x29, #0x58
  421efc:	mov	x4, x1
  421f00:	mov	x3, x2
  421f04:	ldr	x2, [x29, #72]
  421f08:	mov	x1, #0x3e8                 	// #1000
  421f0c:	bl	4594c8 <argp_usage@@Base+0x103dc>
  421f10:	ldrb	w0, [x29, #38]
  421f14:	eor	w0, w0, #0x1
  421f18:	and	w0, w0, #0xff
  421f1c:	cmp	w0, #0x0
  421f20:	b.eq	421f88 <wcrtomb@plt+0x1d278>  // b.none
  421f24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421f28:	add	x0, x0, #0x420
  421f2c:	ldr	x0, [x0]
  421f30:	cmp	x0, #0x0
  421f34:	b.eq	421f48 <wcrtomb@plt+0x1d238>  // b.none
  421f38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  421f3c:	add	x0, x0, #0x420
  421f40:	ldr	x0, [x0]
  421f44:	blr	x0
  421f48:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  421f4c:	add	x0, x0, #0x5a8
  421f50:	bl	404c60 <gettext@plt>
  421f54:	mov	x1, x0
  421f58:	add	x0, x29, #0x58
  421f5c:	ldr	x5, [x29, #56]
  421f60:	mov	x4, x0
  421f64:	mov	w3, #0x3e8                 	// #1000
  421f68:	mov	x2, x1
  421f6c:	mov	w1, #0x0                   	// #0
  421f70:	mov	w0, #0x0                   	// #0
  421f74:	bl	404100 <error@plt>
  421f78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  421f7c:	add	x0, x0, #0xdb0
  421f80:	mov	w1, #0x2                   	// #2
  421f84:	str	w1, [x0]
  421f88:	mov	x0, #0xffffffffffffffff    	// #-1
  421f8c:	b	4220e8 <wcrtomb@plt+0x1d3d8>
  421f90:	ldrb	w0, [x29, #1239]
  421f94:	cmp	w0, #0x0
  421f98:	b.eq	421fa4 <wcrtomb@plt+0x1d294>  // b.none
  421f9c:	ldr	x0, [x29, #1200]
  421fa0:	b	421fa8 <wcrtomb@plt+0x1d298>
  421fa4:	ldr	x0, [x29, #40]
  421fa8:	ldr	x1, [x29, #1256]
  421fac:	cmp	x0, x1
  421fb0:	b.cc	421fd8 <wcrtomb@plt+0x1d2c8>  // b.lo, b.ul, b.last
  421fb4:	ldrb	w0, [x29, #1239]
  421fb8:	cmp	w0, #0x0
  421fbc:	b.eq	421fcc <wcrtomb@plt+0x1d2bc>  // b.none
  421fc0:	ldr	x0, [x29, #1256]
  421fc4:	neg	x0, x0
  421fc8:	b	421fd0 <wcrtomb@plt+0x1d2c0>
  421fcc:	ldr	x0, [x29, #1256]
  421fd0:	bl	423c7c <wcrtomb@plt+0x1ef6c>
  421fd4:	b	4220e8 <wcrtomb@plt+0x1d3d8>
  421fd8:	ldr	x0, [x29, #56]
  421fdc:	cmp	x0, #0x0
  421fe0:	b.eq	4220e4 <wcrtomb@plt+0x1d3d4>  // b.none
  421fe4:	ldrb	w0, [x29, #38]
  421fe8:	eor	w0, w0, #0x1
  421fec:	and	w0, w0, #0xff
  421ff0:	cmp	w0, #0x0
  421ff4:	b.eq	4220e4 <wcrtomb@plt+0x1d3d4>  // b.none
  421ff8:	add	x0, x29, #0x470
  421ffc:	add	x0, x0, #0x1
  422000:	mov	x1, x0
  422004:	ldr	x0, [x29, #1200]
  422008:	bl	450988 <argp_usage@@Base+0x789c>
  42200c:	str	x0, [x29, #1224]
  422010:	add	x0, x29, #0x440
  422014:	add	x0, x0, #0x1
  422018:	mov	x1, x0
  42201c:	ldr	x0, [x29, #1256]
  422020:	bl	450988 <argp_usage@@Base+0x789c>
  422024:	str	x0, [x29, #1216]
  422028:	ldrb	w0, [x29, #1239]
  42202c:	cmp	w0, #0x0
  422030:	b.eq	42204c <wcrtomb@plt+0x1d33c>  // b.none
  422034:	ldr	x0, [x29, #1216]
  422038:	sub	x0, x0, #0x1
  42203c:	str	x0, [x29, #1216]
  422040:	ldr	x0, [x29, #1216]
  422044:	mov	w1, #0x2d                  	// #45
  422048:	strb	w1, [x0]
  42204c:	ldr	x0, [x29, #1200]
  422050:	cmp	x0, #0x0
  422054:	b.eq	422070 <wcrtomb@plt+0x1d360>  // b.none
  422058:	ldr	x0, [x29, #1224]
  42205c:	sub	x0, x0, #0x1
  422060:	str	x0, [x29, #1224]
  422064:	ldr	x0, [x29, #1224]
  422068:	mov	w1, #0x2d                  	// #45
  42206c:	strb	w1, [x0]
  422070:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422074:	add	x0, x0, #0x420
  422078:	ldr	x0, [x0]
  42207c:	cmp	x0, #0x0
  422080:	b.eq	422094 <wcrtomb@plt+0x1d384>  // b.none
  422084:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422088:	add	x0, x0, #0x420
  42208c:	ldr	x0, [x0]
  422090:	blr	x0
  422094:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422098:	add	x0, x0, #0x5e0
  42209c:	bl	404c60 <gettext@plt>
  4220a0:	mov	x19, x0
  4220a4:	add	x0, x29, #0x458
  4220a8:	mov	x1, x0
  4220ac:	ldr	x0, [x29, #40]
  4220b0:	bl	450988 <argp_usage@@Base+0x789c>
  4220b4:	mov	x6, x0
  4220b8:	ldr	x5, [x29, #1224]
  4220bc:	ldr	x4, [x29, #56]
  4220c0:	ldr	x3, [x29, #1216]
  4220c4:	mov	x2, x19
  4220c8:	mov	w1, #0x0                   	// #0
  4220cc:	mov	w0, #0x0                   	// #0
  4220d0:	bl	404100 <error@plt>
  4220d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4220d8:	add	x0, x0, #0xdb0
  4220dc:	mov	w1, #0x2                   	// #2
  4220e0:	str	w1, [x0]
  4220e4:	mov	x0, #0xffffffffffffffff    	// #-1
  4220e8:	mov	sp, x29
  4220ec:	ldr	x19, [sp, #16]
  4220f0:	ldp	x29, x30, [sp]
  4220f4:	add	sp, sp, #0x4f0
  4220f8:	ret
  4220fc:	stp	x29, x30, [sp, #-32]!
  422100:	mov	x29, sp
  422104:	str	x0, [sp, #24]
  422108:	str	x1, [sp, #16]
  42210c:	mov	w6, #0x0                   	// #0
  422110:	mov	w5, #0x0                   	// #0
  422114:	mov	x4, #0xffffffff            	// #4294967295
  422118:	mov	x3, #0x0                   	// #0
  42211c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422120:	add	x2, x0, #0x610
  422124:	ldr	x1, [sp, #16]
  422128:	ldr	x0, [sp, #24]
  42212c:	bl	421644 <wcrtomb@plt+0x1c934>
  422130:	ldp	x29, x30, [sp], #32
  422134:	ret
  422138:	stp	x29, x30, [sp, #-32]!
  42213c:	mov	x29, sp
  422140:	str	x0, [sp, #24]
  422144:	str	x1, [sp, #16]
  422148:	mov	w6, #0x0                   	// #0
  42214c:	mov	w5, #0x0                   	// #0
  422150:	mov	x4, #0x7fffffff            	// #2147483647
  422154:	mov	x3, #0xffffffff80000000    	// #-2147483648
  422158:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42215c:	add	x2, x0, #0x618
  422160:	ldr	x1, [sp, #16]
  422164:	ldr	x0, [sp, #24]
  422168:	bl	421644 <wcrtomb@plt+0x1c934>
  42216c:	ldp	x29, x30, [sp], #32
  422170:	ret
  422174:	stp	x29, x30, [sp, #-32]!
  422178:	mov	x29, sp
  42217c:	str	x0, [sp, #24]
  422180:	str	x1, [sp, #16]
  422184:	mov	w6, #0x0                   	// #0
  422188:	mov	w5, #0x0                   	// #0
  42218c:	mov	x4, #0x7fffffff            	// #2147483647
  422190:	mov	x3, #0xffffffff80000000    	// #-2147483648
  422194:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422198:	add	x2, x0, #0x620
  42219c:	ldr	x1, [sp, #16]
  4221a0:	ldr	x0, [sp, #24]
  4221a4:	bl	421644 <wcrtomb@plt+0x1c934>
  4221a8:	ldp	x29, x30, [sp], #32
  4221ac:	ret
  4221b0:	stp	x29, x30, [sp, #-64]!
  4221b4:	mov	x29, sp
  4221b8:	str	x0, [sp, #40]
  4221bc:	str	x1, [sp, #32]
  4221c0:	str	x2, [sp, #24]
  4221c4:	mov	w6, #0x0                   	// #0
  4221c8:	mov	w5, #0x0                   	// #0
  4221cc:	mov	x4, #0xffffffffffffffff    	// #-1
  4221d0:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  4221d4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4221d8:	add	x2, x0, #0x628
  4221dc:	ldr	x1, [sp, #32]
  4221e0:	ldr	x0, [sp, #40]
  4221e4:	bl	421644 <wcrtomb@plt+0x1c934>
  4221e8:	str	x0, [sp, #56]
  4221ec:	ldr	x0, [sp, #56]
  4221f0:	and	w0, w0, #0xfff
  4221f4:	str	w0, [sp, #52]
  4221f8:	ldr	x0, [sp, #56]
  4221fc:	and	x0, x0, #0xfffffffffffff000
  422200:	cmp	x0, #0x0
  422204:	cset	w0, ne  // ne = any
  422208:	and	w1, w0, #0xff
  42220c:	ldr	x0, [sp, #24]
  422210:	strb	w1, [x0]
  422214:	ldr	w0, [sp, #52]
  422218:	ldp	x29, x30, [sp], #64
  42221c:	ret
  422220:	stp	x29, x30, [sp, #-32]!
  422224:	mov	x29, sp
  422228:	str	x0, [sp, #24]
  42222c:	str	x1, [sp, #16]
  422230:	mov	w6, #0x0                   	// #0
  422234:	mov	w5, #0x0                   	// #0
  422238:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  42223c:	mov	x3, #0x0                   	// #0
  422240:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422244:	add	x2, x0, #0x630
  422248:	ldr	x1, [sp, #16]
  42224c:	ldr	x0, [sp, #24]
  422250:	bl	421644 <wcrtomb@plt+0x1c934>
  422254:	ldp	x29, x30, [sp], #32
  422258:	ret
  42225c:	stp	x29, x30, [sp, #-32]!
  422260:	mov	x29, sp
  422264:	str	x0, [sp, #24]
  422268:	str	x1, [sp, #16]
  42226c:	mov	w6, #0x0                   	// #0
  422270:	mov	w5, #0x0                   	// #0
  422274:	mov	x4, #0x7fffffffffffffff    	// #9223372036854775807
  422278:	mov	x3, #0x8000000000000000    	// #-9223372036854775808
  42227c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422280:	add	x2, x0, #0x638
  422284:	ldr	x1, [sp, #16]
  422288:	ldr	x0, [sp, #24]
  42228c:	bl	421644 <wcrtomb@plt+0x1c934>
  422290:	ldp	x29, x30, [sp], #32
  422294:	ret
  422298:	stp	x29, x30, [sp, #-32]!
  42229c:	mov	x29, sp
  4222a0:	str	x0, [sp, #24]
  4222a4:	str	x1, [sp, #16]
  4222a8:	mov	w6, #0x0                   	// #0
  4222ac:	mov	w5, #0x0                   	// #0
  4222b0:	mov	x4, #0xffffffff            	// #4294967295
  4222b4:	mov	x3, #0x0                   	// #0
  4222b8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4222bc:	add	x2, x0, #0x640
  4222c0:	ldr	x1, [sp, #16]
  4222c4:	ldr	x0, [sp, #24]
  4222c8:	bl	421644 <wcrtomb@plt+0x1c934>
  4222cc:	ldp	x29, x30, [sp], #32
  4222d0:	ret
  4222d4:	stp	x29, x30, [sp, #-32]!
  4222d8:	mov	x29, sp
  4222dc:	str	x0, [sp, #24]
  4222e0:	str	x1, [sp, #16]
  4222e4:	mov	w6, #0x0                   	// #0
  4222e8:	mov	w5, #0x0                   	// #0
  4222ec:	mov	x4, #0xffffffffffffffff    	// #-1
  4222f0:	mov	x3, #0x0                   	// #0
  4222f4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4222f8:	add	x2, x0, #0x648
  4222fc:	ldr	x1, [sp, #16]
  422300:	ldr	x0, [sp, #24]
  422304:	bl	421644 <wcrtomb@plt+0x1c934>
  422308:	ldp	x29, x30, [sp], #32
  42230c:	ret
  422310:	stp	x29, x30, [sp, #-96]!
  422314:	mov	x29, sp
  422318:	stp	x0, x1, [sp, #32]
  42231c:	strb	w2, [sp, #31]
  422320:	ldr	x0, [sp, #32]
  422324:	str	x0, [sp, #56]
  422328:	ldr	x0, [sp, #40]
  42232c:	str	w0, [sp, #92]
  422330:	ldr	x0, [sp, #56]
  422334:	lsr	x0, x0, #63
  422338:	strb	w0, [sp, #79]
  42233c:	ldrb	w0, [sp, #79]
  422340:	cmp	w0, #0x0
  422344:	b.eq	422374 <wcrtomb@plt+0x1d664>  // b.none
  422348:	ldr	w0, [sp, #92]
  42234c:	cmp	w0, #0x0
  422350:	b.eq	422374 <wcrtomb@plt+0x1d664>  // b.none
  422354:	ldr	x0, [sp, #56]
  422358:	add	x0, x0, #0x1
  42235c:	str	x0, [sp, #56]
  422360:	mov	w1, #0xca00                	// #51712
  422364:	movk	w1, #0x3b9a, lsl #16
  422368:	ldr	w0, [sp, #92]
  42236c:	sub	w0, w1, w0
  422370:	str	w0, [sp, #92]
  422374:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422378:	add	x0, x0, #0x259
  42237c:	ldrb	w0, [x0]
  422380:	cmp	w0, #0x0
  422384:	b.eq	422394 <wcrtomb@plt+0x1d684>  // b.none
  422388:	add	x0, sp, #0x38
  42238c:	bl	4045c0 <gmtime@plt>
  422390:	b	42239c <wcrtomb@plt+0x1d68c>
  422394:	add	x0, sp, #0x38
  422398:	bl	404340 <localtime@plt>
  42239c:	str	x0, [sp, #64]
  4223a0:	ldr	x0, [sp, #64]
  4223a4:	cmp	x0, #0x0
  4223a8:	b.eq	422428 <wcrtomb@plt+0x1d718>  // b.none
  4223ac:	ldrb	w0, [sp, #31]
  4223b0:	cmp	w0, #0x0
  4223b4:	b.eq	422400 <wcrtomb@plt+0x1d6f0>  // b.none
  4223b8:	ldr	x3, [sp, #64]
  4223bc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4223c0:	add	x2, x0, #0x658
  4223c4:	mov	x1, #0x25                  	// #37
  4223c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4223cc:	add	x0, x0, #0xa10
  4223d0:	bl	404230 <strftime@plt>
  4223d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4223d8:	add	x0, x0, #0xa10
  4223dc:	bl	4040b0 <strlen@plt>
  4223e0:	mov	x1, x0
  4223e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4223e8:	add	x0, x0, #0xa10
  4223ec:	add	x0, x1, x0
  4223f0:	mov	x1, x0
  4223f4:	ldr	w0, [sp, #92]
  4223f8:	bl	424808 <wcrtomb@plt+0x1faf8>
  4223fc:	b	42241c <wcrtomb@plt+0x1d70c>
  422400:	ldr	x3, [sp, #64]
  422404:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422408:	add	x2, x0, #0x670
  42240c:	mov	x1, #0x25                  	// #37
  422410:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422414:	add	x0, x0, #0xa10
  422418:	bl	404230 <strftime@plt>
  42241c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422420:	add	x0, x0, #0xa10
  422424:	b	4224e4 <wcrtomb@plt+0x1d7d4>
  422428:	ldrb	w0, [sp, #79]
  42242c:	cmp	w0, #0x0
  422430:	b.eq	422440 <wcrtomb@plt+0x1d730>  // b.none
  422434:	ldr	x0, [sp, #56]
  422438:	neg	x0, x0
  42243c:	b	422444 <wcrtomb@plt+0x1d734>
  422440:	ldr	x0, [sp, #56]
  422444:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422448:	add	x1, x1, #0xa16
  42244c:	bl	450988 <argp_usage@@Base+0x789c>
  422450:	str	x0, [sp, #80]
  422454:	ldrb	w0, [sp, #79]
  422458:	cmp	w0, #0x0
  42245c:	b.eq	422494 <wcrtomb@plt+0x1d784>  // b.none
  422460:	ldr	x0, [sp, #80]
  422464:	sub	x0, x0, #0x1
  422468:	str	x0, [sp, #80]
  42246c:	ldr	x0, [sp, #80]
  422470:	mov	w1, #0x2d                  	// #45
  422474:	strb	w1, [x0]
  422478:	b	422494 <wcrtomb@plt+0x1d784>
  42247c:	ldr	x0, [sp, #80]
  422480:	sub	x0, x0, #0x1
  422484:	str	x0, [sp, #80]
  422488:	ldr	x0, [sp, #80]
  42248c:	mov	w1, #0x20                  	// #32
  422490:	strb	w1, [x0]
  422494:	ldrb	w0, [sp, #31]
  422498:	cmp	w0, #0x0
  42249c:	b.eq	4224ac <wcrtomb@plt+0x1d79c>  // b.none
  4224a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4224a4:	add	x0, x0, #0xa31
  4224a8:	b	4224b4 <wcrtomb@plt+0x1d7a4>
  4224ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4224b0:	add	x0, x0, #0xa24
  4224b4:	ldr	x1, [sp, #80]
  4224b8:	cmp	x0, x1
  4224bc:	b.cc	42247c <wcrtomb@plt+0x1d76c>  // b.lo, b.ul, b.last
  4224c0:	ldrb	w0, [sp, #31]
  4224c4:	cmp	w0, #0x0
  4224c8:	b.eq	4224e0 <wcrtomb@plt+0x1d7d0>  // b.none
  4224cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4224d0:	add	x0, x0, #0xa2a
  4224d4:	mov	x1, x0
  4224d8:	ldr	w0, [sp, #92]
  4224dc:	bl	424808 <wcrtomb@plt+0x1faf8>
  4224e0:	ldr	x0, [sp, #80]
  4224e4:	ldp	x29, x30, [sp], #96
  4224e8:	ret
  4224ec:	sub	sp, sp, #0x120
  4224f0:	stp	x29, x30, [sp, #16]
  4224f4:	add	x29, sp, #0x10
  4224f8:	stp	x19, x20, [sp, #32]
  4224fc:	str	x0, [sp, #72]
  422500:	str	x1, [sp, #64]
  422504:	str	x2, [sp, #56]
  422508:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42250c:	add	x0, x0, #0x378
  422510:	ldrb	w0, [x0]
  422514:	cmp	w0, #0x0
  422518:	b.eq	422548 <wcrtomb@plt+0x1d838>  // b.none
  42251c:	ldr	x0, [sp, #72]
  422520:	ldr	x0, [x0, #8]
  422524:	cmp	x0, #0x0
  422528:	b.eq	422538 <wcrtomb@plt+0x1d828>  // b.none
  42252c:	ldr	x0, [sp, #72]
  422530:	ldr	x0, [x0, #8]
  422534:	b	422540 <wcrtomb@plt+0x1d830>
  422538:	ldr	x0, [sp, #72]
  42253c:	ldr	x0, [x0]
  422540:	str	x0, [sp, #280]
  422544:	b	422570 <wcrtomb@plt+0x1d860>
  422548:	ldr	x0, [sp, #72]
  42254c:	ldr	x0, [x0]
  422550:	cmp	x0, #0x0
  422554:	b.eq	422564 <wcrtomb@plt+0x1d854>  // b.none
  422558:	ldr	x0, [sp, #72]
  42255c:	ldr	x0, [x0]
  422560:	b	42256c <wcrtomb@plt+0x1d85c>
  422564:	ldr	x0, [sp, #72]
  422568:	ldr	x0, [x0, #8]
  42256c:	str	x0, [sp, #280]
  422570:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422574:	add	x0, x0, #0x2d1
  422578:	ldrb	w0, [x0]
  42257c:	cmp	w0, #0x0
  422580:	b.eq	422600 <wcrtomb@plt+0x1d8f0>  // b.none
  422584:	ldr	x0, [sp, #56]
  422588:	cmp	x0, #0x0
  42258c:	b.ge	422598 <wcrtomb@plt+0x1d888>  // b.tcont
  422590:	bl	405f78 <wcrtomb@plt+0x1268>
  422594:	str	x0, [sp, #56]
  422598:	ldr	x1, [sp, #56]
  42259c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4225a0:	add	x0, x0, #0x10
  4225a4:	ldr	x0, [x0]
  4225a8:	sub	x0, x1, x0
  4225ac:	str	x0, [sp, #56]
  4225b0:	ldr	x1, [sp, #56]
  4225b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4225b8:	add	x0, x0, #0x20
  4225bc:	ldr	x0, [x0]
  4225c0:	sub	x0, x1, x0
  4225c4:	str	x0, [sp, #56]
  4225c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4225cc:	add	x0, x0, #0xf88
  4225d0:	ldr	x19, [x0]
  4225d4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4225d8:	add	x0, x0, #0x408
  4225dc:	bl	404c60 <gettext@plt>
  4225e0:	mov	x20, x0
  4225e4:	ldr	x0, [sp, #56]
  4225e8:	add	x1, sp, #0x58
  4225ec:	bl	450988 <argp_usage@@Base+0x789c>
  4225f0:	mov	x2, x0
  4225f4:	mov	x1, x20
  4225f8:	mov	x0, x19
  4225fc:	bl	404c90 <fprintf@plt>
  422600:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422604:	add	x0, x0, #0x2b4
  422608:	ldr	w0, [x0]
  42260c:	cmp	w0, #0x1
  422610:	b.gt	422690 <wcrtomb@plt+0x1d980>
  422614:	ldr	x0, [sp, #280]
  422618:	bl	459b14 <argp_usage@@Base+0x10a28>
  42261c:	mov	x2, x0
  422620:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422624:	add	x0, x0, #0xf88
  422628:	ldr	x0, [x0]
  42262c:	mov	x1, x0
  422630:	mov	x0, x2
  422634:	bl	404ab0 <fputs_unlocked@plt>
  422638:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42263c:	add	x0, x0, #0x378
  422640:	ldrb	w0, [x0]
  422644:	cmp	w0, #0x0
  422648:	b.eq	422674 <wcrtomb@plt+0x1d964>  // b.none
  42264c:	ldr	x0, [sp, #72]
  422650:	ldrb	w0, [x0, #16]
  422654:	cmp	w0, #0x0
  422658:	b.eq	422674 <wcrtomb@plt+0x1d964>  // b.none
  42265c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422660:	add	x0, x0, #0xf88
  422664:	ldr	x0, [x0]
  422668:	mov	x1, x0
  42266c:	mov	w0, #0x2f                  	// #47
  422670:	bl	404a40 <fputc_unlocked@plt>
  422674:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422678:	add	x0, x0, #0xf88
  42267c:	ldr	x0, [x0]
  422680:	mov	x1, x0
  422684:	mov	w0, #0xa                   	// #10
  422688:	bl	404a40 <fputc_unlocked@plt>
  42268c:	b	422e20 <wcrtomb@plt+0x1e110>
  422690:	mov	w0, #0x3f                  	// #63
  422694:	strb	w0, [sp, #232]
  422698:	ldr	x0, [sp, #64]
  42269c:	ldrb	w0, [x0, #156]
  4226a0:	cmp	w0, #0x56
  4226a4:	b.eq	422774 <wcrtomb@plt+0x1da64>  // b.none
  4226a8:	cmp	w0, #0x56
  4226ac:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  4226b0:	cmp	w0, #0x53
  4226b4:	b.eq	4227f8 <wcrtomb@plt+0x1dae8>  // b.none
  4226b8:	cmp	w0, #0x53
  4226bc:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  4226c0:	cmp	w0, #0x4d
  4226c4:	b.eq	422790 <wcrtomb@plt+0x1da80>  // b.none
  4226c8:	cmp	w0, #0x4d
  4226cc:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  4226d0:	cmp	w0, #0x4c
  4226d4:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  4226d8:	cmp	w0, #0x4b
  4226dc:	b.ge	42279c <wcrtomb@plt+0x1da8c>  // b.tcont
  4226e0:	cmp	w0, #0x44
  4226e4:	b.eq	422828 <wcrtomb@plt+0x1db18>  // b.none
  4226e8:	cmp	w0, #0x44
  4226ec:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  4226f0:	cmp	w0, #0x37
  4226f4:	b.eq	422870 <wcrtomb@plt+0x1db60>  // b.none
  4226f8:	cmp	w0, #0x37
  4226fc:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422700:	cmp	w0, #0x36
  422704:	b.eq	422864 <wcrtomb@plt+0x1db54>  // b.none
  422708:	cmp	w0, #0x36
  42270c:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422710:	cmp	w0, #0x35
  422714:	b.eq	422834 <wcrtomb@plt+0x1db24>  // b.none
  422718:	cmp	w0, #0x35
  42271c:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422720:	cmp	w0, #0x34
  422724:	b.eq	42284c <wcrtomb@plt+0x1db3c>  // b.none
  422728:	cmp	w0, #0x34
  42272c:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422730:	cmp	w0, #0x33
  422734:	b.eq	422858 <wcrtomb@plt+0x1db48>  // b.none
  422738:	cmp	w0, #0x33
  42273c:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422740:	cmp	w0, #0x32
  422744:	b.eq	422840 <wcrtomb@plt+0x1db30>  // b.none
  422748:	cmp	w0, #0x32
  42274c:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422750:	cmp	w0, #0x31
  422754:	b.eq	42281c <wcrtomb@plt+0x1db0c>  // b.none
  422758:	cmp	w0, #0x31
  42275c:	b.gt	42287c <wcrtomb@plt+0x1db6c>
  422760:	cmp	w0, #0x0
  422764:	b.eq	4227f8 <wcrtomb@plt+0x1dae8>  // b.none
  422768:	cmp	w0, #0x30
  42276c:	b.eq	4227f8 <wcrtomb@plt+0x1dae8>  // b.none
  422770:	b	42287c <wcrtomb@plt+0x1db6c>
  422774:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422778:	add	x0, x0, #0xa00
  42277c:	mov	w1, #0x1                   	// #1
  422780:	strb	w1, [x0]
  422784:	mov	w0, #0x56                  	// #86
  422788:	strb	w0, [sp, #232]
  42278c:	b	42287c <wcrtomb@plt+0x1db6c>
  422790:	mov	w0, #0x4d                  	// #77
  422794:	strb	w0, [sp, #232]
  422798:	b	42287c <wcrtomb@plt+0x1db6c>
  42279c:	mov	w0, #0x4c                  	// #76
  4227a0:	strb	w0, [sp, #232]
  4227a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4227a8:	add	x0, x0, #0x420
  4227ac:	ldr	x0, [x0]
  4227b0:	cmp	x0, #0x0
  4227b4:	b.eq	4227c8 <wcrtomb@plt+0x1dab8>  // b.none
  4227b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4227bc:	add	x0, x0, #0x420
  4227c0:	ldr	x0, [x0]
  4227c4:	blr	x0
  4227c8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4227cc:	add	x0, x0, #0x680
  4227d0:	bl	404c60 <gettext@plt>
  4227d4:	mov	x2, x0
  4227d8:	mov	w1, #0x0                   	// #0
  4227dc:	mov	w0, #0x0                   	// #0
  4227e0:	bl	404100 <error@plt>
  4227e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4227e8:	add	x0, x0, #0xdb0
  4227ec:	mov	w1, #0x2                   	// #2
  4227f0:	str	w1, [x0]
  4227f4:	b	42287c <wcrtomb@plt+0x1db6c>
  4227f8:	ldr	x0, [sp, #72]
  4227fc:	ldrb	w0, [x0, #16]
  422800:	cmp	w0, #0x0
  422804:	b.eq	422810 <wcrtomb@plt+0x1db00>  // b.none
  422808:	mov	w0, #0x64                  	// #100
  42280c:	b	422814 <wcrtomb@plt+0x1db04>
  422810:	mov	w0, #0x2d                  	// #45
  422814:	strb	w0, [sp, #232]
  422818:	b	42287c <wcrtomb@plt+0x1db6c>
  42281c:	mov	w0, #0x68                  	// #104
  422820:	strb	w0, [sp, #232]
  422824:	b	42287c <wcrtomb@plt+0x1db6c>
  422828:	mov	w0, #0x64                  	// #100
  42282c:	strb	w0, [sp, #232]
  422830:	b	42287c <wcrtomb@plt+0x1db6c>
  422834:	mov	w0, #0x64                  	// #100
  422838:	strb	w0, [sp, #232]
  42283c:	b	42287c <wcrtomb@plt+0x1db6c>
  422840:	mov	w0, #0x6c                  	// #108
  422844:	strb	w0, [sp, #232]
  422848:	b	42287c <wcrtomb@plt+0x1db6c>
  42284c:	mov	w0, #0x62                  	// #98
  422850:	strb	w0, [sp, #232]
  422854:	b	42287c <wcrtomb@plt+0x1db6c>
  422858:	mov	w0, #0x63                  	// #99
  42285c:	strb	w0, [sp, #232]
  422860:	b	42287c <wcrtomb@plt+0x1db6c>
  422864:	mov	w0, #0x70                  	// #112
  422868:	strb	w0, [sp, #232]
  42286c:	b	42287c <wcrtomb@plt+0x1db6c>
  422870:	mov	w0, #0x43                  	// #67
  422874:	strb	w0, [sp, #232]
  422878:	nop
  42287c:	ldr	x0, [sp, #72]
  422880:	ldr	w2, [x0, #104]
  422884:	add	x0, sp, #0xe8
  422888:	add	x0, x0, #0x1
  42288c:	mov	x1, x0
  422890:	mov	w0, w2
  422894:	bl	439f70 <wcrtomb@plt+0x35260>
  422898:	add	x0, sp, #0xe8
  42289c:	add	x0, x0, #0xa
  4228a0:	mov	x1, x0
  4228a4:	ldr	x0, [sp, #72]
  4228a8:	bl	439b78 <wcrtomb@plt+0x34e68>
  4228ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4228b0:	add	x0, x0, #0x2e8
  4228b4:	ldrb	w1, [x0]
  4228b8:	ldr	x0, [sp, #72]
  4228bc:	mov	w2, w1
  4228c0:	ldp	x0, x1, [x0, #232]
  4228c4:	bl	422310 <wcrtomb@plt+0x1d600>
  4228c8:	str	x0, [sp, #256]
  4228cc:	ldr	x0, [sp, #256]
  4228d0:	bl	4040b0 <strlen@plt>
  4228d4:	str	w0, [sp, #252]
  4228d8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4228dc:	add	x0, x0, #0x8ac
  4228e0:	ldr	w0, [x0]
  4228e4:	ldr	w1, [sp, #252]
  4228e8:	cmp	w1, w0
  4228ec:	b.le	422900 <wcrtomb@plt+0x1dbf0>
  4228f0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4228f4:	add	x0, x0, #0x8ac
  4228f8:	ldr	w1, [sp, #252]
  4228fc:	str	w1, [x0]
  422900:	ldr	x0, [sp, #72]
  422904:	ldr	x0, [x0, #32]
  422908:	cmp	x0, #0x0
  42290c:	b.eq	422964 <wcrtomb@plt+0x1dc54>  // b.none
  422910:	ldr	x0, [sp, #72]
  422914:	ldr	x0, [x0, #32]
  422918:	ldrb	w0, [x0]
  42291c:	cmp	w0, #0x0
  422920:	b.eq	422964 <wcrtomb@plt+0x1dc54>  // b.none
  422924:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422928:	add	x0, x0, #0x0
  42292c:	ldr	w0, [x0]
  422930:	cmp	w0, #0x1
  422934:	b.eq	422964 <wcrtomb@plt+0x1dc54>  // b.none
  422938:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42293c:	add	x0, x0, #0x2d0
  422940:	ldrb	w0, [x0]
  422944:	eor	w0, w0, #0x1
  422948:	and	w0, w0, #0xff
  42294c:	cmp	w0, #0x0
  422950:	b.eq	422964 <wcrtomb@plt+0x1dc54>  // b.none
  422954:	ldr	x0, [sp, #72]
  422958:	ldr	x0, [x0, #32]
  42295c:	str	x0, [sp, #272]
  422960:	b	42297c <wcrtomb@plt+0x1dc6c>
  422964:	ldr	x0, [sp, #72]
  422968:	ldr	w0, [x0, #112]
  42296c:	mov	w0, w0
  422970:	add	x1, sp, #0xd0
  422974:	bl	450988 <argp_usage@@Base+0x789c>
  422978:	str	x0, [sp, #272]
  42297c:	ldr	x0, [sp, #72]
  422980:	ldr	x0, [x0, #40]
  422984:	cmp	x0, #0x0
  422988:	b.eq	4229e0 <wcrtomb@plt+0x1dcd0>  // b.none
  42298c:	ldr	x0, [sp, #72]
  422990:	ldr	x0, [x0, #40]
  422994:	ldrb	w0, [x0]
  422998:	cmp	w0, #0x0
  42299c:	b.eq	4229e0 <wcrtomb@plt+0x1dcd0>  // b.none
  4229a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4229a4:	add	x0, x0, #0x0
  4229a8:	ldr	w0, [x0]
  4229ac:	cmp	w0, #0x1
  4229b0:	b.eq	4229e0 <wcrtomb@plt+0x1dcd0>  // b.none
  4229b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4229b8:	add	x0, x0, #0x2d0
  4229bc:	ldrb	w0, [x0]
  4229c0:	eor	w0, w0, #0x1
  4229c4:	and	w0, w0, #0xff
  4229c8:	cmp	w0, #0x0
  4229cc:	b.eq	4229e0 <wcrtomb@plt+0x1dcd0>  // b.none
  4229d0:	ldr	x0, [sp, #72]
  4229d4:	ldr	x0, [x0, #40]
  4229d8:	str	x0, [sp, #264]
  4229dc:	b	4229f8 <wcrtomb@plt+0x1dce8>
  4229e0:	ldr	x0, [sp, #72]
  4229e4:	ldr	w0, [x0, #116]
  4229e8:	mov	w0, w0
  4229ec:	add	x1, sp, #0xb8
  4229f0:	bl	450988 <argp_usage@@Base+0x789c>
  4229f4:	str	x0, [sp, #264]
  4229f8:	ldr	x0, [sp, #64]
  4229fc:	ldrb	w0, [x0, #156]
  422a00:	sub	w0, w0, #0x33
  422a04:	cmp	w0, #0x1
  422a08:	b.hi	422a74 <wcrtomb@plt+0x1dd64>  // b.pmore
  422a0c:	ldr	x0, [sp, #72]
  422a10:	ldr	x0, [x0, #120]
  422a14:	bl	404750 <gnu_dev_major@plt>
  422a18:	mov	w0, w0
  422a1c:	add	x1, sp, #0x70
  422a20:	bl	450988 <argp_usage@@Base+0x789c>
  422a24:	mov	x1, x0
  422a28:	add	x0, sp, #0x88
  422a2c:	bl	4049d0 <strcpy@plt>
  422a30:	add	x0, sp, #0x88
  422a34:	bl	4040b0 <strlen@plt>
  422a38:	mov	x1, x0
  422a3c:	add	x0, sp, #0x88
  422a40:	add	x0, x0, x1
  422a44:	mov	w1, #0x2c                  	// #44
  422a48:	strh	w1, [x0]
  422a4c:	ldr	x0, [sp, #72]
  422a50:	ldr	x0, [x0, #120]
  422a54:	bl	4049c0 <gnu_dev_minor@plt>
  422a58:	mov	w0, w0
  422a5c:	add	x1, sp, #0x70
  422a60:	bl	450988 <argp_usage@@Base+0x789c>
  422a64:	mov	x1, x0
  422a68:	add	x0, sp, #0x88
  422a6c:	bl	4044c0 <strcat@plt>
  422a70:	b	422aa0 <wcrtomb@plt+0x1dd90>
  422a74:	ldr	x0, [sp, #72]
  422a78:	ldr	x0, [x0, #136]
  422a7c:	mov	x2, x0
  422a80:	add	x0, sp, #0x70
  422a84:	mov	x1, x0
  422a88:	mov	x0, x2
  422a8c:	bl	450988 <argp_usage@@Base+0x789c>
  422a90:	mov	x1, x0
  422a94:	add	x0, sp, #0x88
  422a98:	bl	4049d0 <strcpy@plt>
  422a9c:	nop
  422aa0:	add	x0, sp, #0x88
  422aa4:	bl	4040b0 <strlen@plt>
  422aa8:	str	w0, [sp, #248]
  422aac:	ldr	x0, [sp, #272]
  422ab0:	bl	4040b0 <strlen@plt>
  422ab4:	mov	w19, w0
  422ab8:	ldr	x0, [sp, #264]
  422abc:	bl	4040b0 <strlen@plt>
  422ac0:	add	w1, w19, w0
  422ac4:	ldr	w0, [sp, #248]
  422ac8:	add	w0, w1, w0
  422acc:	add	w0, w0, #0x2
  422ad0:	str	w0, [sp, #244]
  422ad4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  422ad8:	add	x0, x0, #0x8a8
  422adc:	ldr	w0, [x0]
  422ae0:	ldr	w1, [sp, #244]
  422ae4:	cmp	w1, w0
  422ae8:	b.le	422afc <wcrtomb@plt+0x1ddec>
  422aec:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  422af0:	add	x0, x0, #0x8a8
  422af4:	ldr	w1, [sp, #244]
  422af8:	str	w1, [x0]
  422afc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422b00:	add	x0, x0, #0xf88
  422b04:	ldr	x8, [x0]
  422b08:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  422b0c:	add	x0, x0, #0x8a8
  422b10:	ldr	w1, [x0]
  422b14:	ldr	w0, [sp, #244]
  422b18:	sub	w1, w1, w0
  422b1c:	ldr	w0, [sp, #248]
  422b20:	add	w2, w1, w0
  422b24:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  422b28:	add	x0, x0, #0x8ac
  422b2c:	ldr	w4, [x0]
  422b30:	add	x3, sp, #0x88
  422b34:	add	x1, sp, #0xe8
  422b38:	ldr	x0, [sp, #256]
  422b3c:	str	x0, [sp]
  422b40:	mov	w7, w4
  422b44:	mov	x6, x3
  422b48:	mov	w5, w2
  422b4c:	ldr	x4, [sp, #264]
  422b50:	ldr	x3, [sp, #272]
  422b54:	mov	x2, x1
  422b58:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422b5c:	add	x1, x0, #0x6a0
  422b60:	mov	x0, x8
  422b64:	bl	404c90 <fprintf@plt>
  422b68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422b6c:	add	x0, x0, #0xf88
  422b70:	ldr	x19, [x0]
  422b74:	ldr	x0, [sp, #280]
  422b78:	bl	459b14 <argp_usage@@Base+0x10a28>
  422b7c:	mov	x2, x0
  422b80:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422b84:	add	x1, x0, #0x6b8
  422b88:	mov	x0, x19
  422b8c:	bl	404c90 <fprintf@plt>
  422b90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422b94:	add	x0, x0, #0x378
  422b98:	ldrb	w0, [x0]
  422b9c:	cmp	w0, #0x0
  422ba0:	b.eq	422bcc <wcrtomb@plt+0x1debc>  // b.none
  422ba4:	ldr	x0, [sp, #72]
  422ba8:	ldrb	w0, [x0, #16]
  422bac:	cmp	w0, #0x0
  422bb0:	b.eq	422bcc <wcrtomb@plt+0x1debc>  // b.none
  422bb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422bb8:	add	x0, x0, #0xf88
  422bbc:	ldr	x0, [x0]
  422bc0:	mov	x1, x0
  422bc4:	mov	w0, #0x2f                  	// #47
  422bc8:	bl	404a40 <fputc_unlocked@plt>
  422bcc:	ldr	x0, [sp, #64]
  422bd0:	ldrb	w0, [x0, #156]
  422bd4:	cmp	w0, #0x56
  422bd8:	b.eq	422d98 <wcrtomb@plt+0x1e088>  // b.none
  422bdc:	cmp	w0, #0x56
  422be0:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422be4:	cmp	w0, #0x53
  422be8:	b.eq	422d2c <wcrtomb@plt+0x1e01c>  // b.none
  422bec:	cmp	w0, #0x53
  422bf0:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422bf4:	cmp	w0, #0x4d
  422bf8:	b.eq	422dc0 <wcrtomb@plt+0x1e0b0>  // b.none
  422bfc:	cmp	w0, #0x4d
  422c00:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c04:	cmp	w0, #0x4c
  422c08:	b.eq	422d70 <wcrtomb@plt+0x1e060>  // b.none
  422c0c:	cmp	w0, #0x4c
  422c10:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c14:	cmp	w0, #0x4b
  422c18:	b.eq	422d48 <wcrtomb@plt+0x1e038>  // b.none
  422c1c:	cmp	w0, #0x4b
  422c20:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c24:	cmp	w0, #0x44
  422c28:	b.eq	422d2c <wcrtomb@plt+0x1e01c>  // b.none
  422c2c:	cmp	w0, #0x44
  422c30:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c34:	cmp	w0, #0x37
  422c38:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c3c:	cmp	w0, #0x33
  422c40:	b.ge	422d2c <wcrtomb@plt+0x1e01c>  // b.tcont
  422c44:	cmp	w0, #0x32
  422c48:	b.eq	422c78 <wcrtomb@plt+0x1df68>  // b.none
  422c4c:	cmp	w0, #0x32
  422c50:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c54:	cmp	w0, #0x31
  422c58:	b.eq	422ca8 <wcrtomb@plt+0x1df98>  // b.none
  422c5c:	cmp	w0, #0x31
  422c60:	b.gt	422ce4 <wcrtomb@plt+0x1dfd4>
  422c64:	cmp	w0, #0x0
  422c68:	b.eq	422d2c <wcrtomb@plt+0x1e01c>  // b.none
  422c6c:	cmp	w0, #0x30
  422c70:	b.eq	422d2c <wcrtomb@plt+0x1e01c>  // b.none
  422c74:	b	422ce4 <wcrtomb@plt+0x1dfd4>
  422c78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422c7c:	add	x0, x0, #0xf88
  422c80:	ldr	x19, [x0]
  422c84:	ldr	x0, [sp, #72]
  422c88:	ldr	x0, [x0, #24]
  422c8c:	bl	459b14 <argp_usage@@Base+0x10a28>
  422c90:	mov	x2, x0
  422c94:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422c98:	add	x1, x0, #0x6c0
  422c9c:	mov	x0, x19
  422ca0:	bl	404c90 <fprintf@plt>
  422ca4:	b	422e20 <wcrtomb@plt+0x1e110>
  422ca8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422cac:	add	x0, x0, #0xf88
  422cb0:	ldr	x19, [x0]
  422cb4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422cb8:	add	x0, x0, #0x6c8
  422cbc:	bl	404c60 <gettext@plt>
  422cc0:	mov	x20, x0
  422cc4:	ldr	x0, [sp, #72]
  422cc8:	ldr	x0, [x0, #24]
  422ccc:	bl	459b14 <argp_usage@@Base+0x10a28>
  422cd0:	mov	x2, x0
  422cd4:	mov	x1, x20
  422cd8:	mov	x0, x19
  422cdc:	bl	404c90 <fprintf@plt>
  422ce0:	b	422e20 <wcrtomb@plt+0x1e110>
  422ce4:	ldr	x0, [sp, #64]
  422ce8:	ldrb	w0, [x0, #156]
  422cec:	strb	w0, [sp, #80]
  422cf0:	strb	wzr, [sp, #81]
  422cf4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422cf8:	add	x0, x0, #0xf88
  422cfc:	ldr	x19, [x0]
  422d00:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422d04:	add	x0, x0, #0x6d8
  422d08:	bl	404c60 <gettext@plt>
  422d0c:	mov	x20, x0
  422d10:	add	x0, sp, #0x50
  422d14:	bl	459f38 <argp_usage@@Base+0x10e4c>
  422d18:	mov	x2, x0
  422d1c:	mov	x1, x20
  422d20:	mov	x0, x19
  422d24:	bl	404c90 <fprintf@plt>
  422d28:	b	422e20 <wcrtomb@plt+0x1e110>
  422d2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422d30:	add	x0, x0, #0xf88
  422d34:	ldr	x0, [x0]
  422d38:	mov	x1, x0
  422d3c:	mov	w0, #0xa                   	// #10
  422d40:	bl	404330 <putc_unlocked@plt>
  422d44:	b	422e20 <wcrtomb@plt+0x1e110>
  422d48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422d4c:	add	x0, x0, #0xf88
  422d50:	ldr	x19, [x0]
  422d54:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422d58:	add	x0, x0, #0x6f0
  422d5c:	bl	404c60 <gettext@plt>
  422d60:	mov	x1, x0
  422d64:	mov	x0, x19
  422d68:	bl	404c90 <fprintf@plt>
  422d6c:	b	422e20 <wcrtomb@plt+0x1e110>
  422d70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422d74:	add	x0, x0, #0xf88
  422d78:	ldr	x19, [x0]
  422d7c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422d80:	add	x0, x0, #0x700
  422d84:	bl	404c60 <gettext@plt>
  422d88:	mov	x1, x0
  422d8c:	mov	x0, x19
  422d90:	bl	404c90 <fprintf@plt>
  422d94:	b	422e20 <wcrtomb@plt+0x1e110>
  422d98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422d9c:	add	x0, x0, #0xf88
  422da0:	ldr	x19, [x0]
  422da4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422da8:	add	x0, x0, #0x710
  422dac:	bl	404c60 <gettext@plt>
  422db0:	mov	x1, x0
  422db4:	mov	x0, x19
  422db8:	bl	404c90 <fprintf@plt>
  422dbc:	b	422e20 <wcrtomb@plt+0x1e110>
  422dc0:	ldr	x0, [sp, #64]
  422dc4:	add	x0, x0, #0x171
  422dc8:	mov	x1, #0xc                   	// #12
  422dcc:	bl	4222d4 <wcrtomb@plt+0x1d5c4>
  422dd0:	mov	x2, x0
  422dd4:	add	x0, sp, #0x70
  422dd8:	mov	x1, x0
  422ddc:	mov	x0, x2
  422de0:	bl	450988 <argp_usage@@Base+0x789c>
  422de4:	mov	x1, x0
  422de8:	add	x0, sp, #0x88
  422dec:	bl	4049d0 <strcpy@plt>
  422df0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422df4:	add	x0, x0, #0xf88
  422df8:	ldr	x19, [x0]
  422dfc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422e00:	add	x0, x0, #0x728
  422e04:	bl	404c60 <gettext@plt>
  422e08:	mov	x1, x0
  422e0c:	add	x0, sp, #0x88
  422e10:	mov	x2, x0
  422e14:	mov	x0, x19
  422e18:	bl	404c90 <fprintf@plt>
  422e1c:	nop
  422e20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422e24:	add	x0, x0, #0xf88
  422e28:	ldr	x0, [x0]
  422e2c:	bl	404990 <fflush_unlocked@plt>
  422e30:	ldr	x0, [sp, #72]
  422e34:	bl	439d1c <wcrtomb@plt+0x3500c>
  422e38:	nop
  422e3c:	ldp	x19, x20, [sp, #32]
  422e40:	ldp	x29, x30, [sp, #16]
  422e44:	add	sp, sp, #0x120
  422e48:	ret
  422e4c:	sub	sp, sp, #0x3c0
  422e50:	stp	x29, x30, [sp]
  422e54:	mov	x29, sp
  422e58:	add	x0, sp, #0x18
  422e5c:	mov	x2, #0x200                 	// #512
  422e60:	mov	w1, #0x0                   	// #0
  422e64:	bl	4044d0 <memset@plt>
  422e68:	mov	w0, #0x56                  	// #86
  422e6c:	strb	w0, [sp, #180]
  422e70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422e74:	add	x0, x0, #0x8f8
  422e78:	ldr	x0, [x0]
  422e7c:	cmp	x0, #0x0
  422e80:	b.eq	422ea8 <wcrtomb@plt+0x1e198>  // b.none
  422e84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422e88:	add	x0, x0, #0x8f8
  422e8c:	ldr	x0, [x0]
  422e90:	add	x1, x0, #0x88
  422e94:	add	x0, sp, #0xa0
  422e98:	ldr	x2, [x1]
  422e9c:	str	x2, [x0]
  422ea0:	ldr	w1, [x1, #8]
  422ea4:	str	w1, [x0, #8]
  422ea8:	add	x0, sp, #0x218
  422eac:	bl	434e14 <wcrtomb@plt+0x30104>
  422eb0:	add	x0, sp, #0x218
  422eb4:	add	x2, x0, #0x8
  422eb8:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  422ebc:	add	x1, x0, #0x748
  422ec0:	mov	x0, x2
  422ec4:	bl	423d0c <wcrtomb@plt+0x1effc>
  422ec8:	add	x2, sp, #0x14
  422ecc:	add	x1, sp, #0x218
  422ed0:	add	x0, sp, #0x18
  422ed4:	mov	w3, #0x0                   	// #0
  422ed8:	bl	42112c <wcrtomb@plt+0x1c41c>
  422edc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422ee0:	add	x0, x0, #0xfb0
  422ee4:	ldr	x1, [x0]
  422ee8:	add	x0, sp, #0x218
  422eec:	add	x0, x0, #0x8
  422ef0:	bl	423d0c <wcrtomb@plt+0x1effc>
  422ef4:	add	x1, sp, #0x18
  422ef8:	add	x0, sp, #0x218
  422efc:	mov	x2, #0x0                   	// #0
  422f00:	bl	4224ec <wcrtomb@plt+0x1d7dc>
  422f04:	add	x0, sp, #0x218
  422f08:	bl	434ecc <wcrtomb@plt+0x301bc>
  422f0c:	nop
  422f10:	ldp	x29, x30, [sp]
  422f14:	add	sp, sp, #0x3c0
  422f18:	ret
  422f1c:	stp	x29, x30, [sp, #-48]!
  422f20:	mov	x29, sp
  422f24:	str	x0, [sp, #40]
  422f28:	str	x1, [sp, #32]
  422f2c:	str	x2, [sp, #24]
  422f30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422f34:	add	x0, x0, #0x0
  422f38:	ldr	w0, [x0]
  422f3c:	cmp	w0, #0x4
  422f40:	b.ne	422f88 <wcrtomb@plt+0x1e278>  // b.any
  422f44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422f48:	add	x0, x0, #0xa00
  422f4c:	ldrb	w0, [x0]
  422f50:	eor	w0, w0, #0x1
  422f54:	and	w0, w0, #0xff
  422f58:	cmp	w0, #0x0
  422f5c:	b.eq	422f88 <wcrtomb@plt+0x1e278>  // b.none
  422f60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422f64:	add	x0, x0, #0xfb0
  422f68:	ldr	x0, [x0]
  422f6c:	cmp	x0, #0x0
  422f70:	b.eq	422f88 <wcrtomb@plt+0x1e278>  // b.none
  422f74:	bl	422e4c <wcrtomb@plt+0x1e13c>
  422f78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  422f7c:	add	x0, x0, #0xa00
  422f80:	mov	w1, #0x1                   	// #1
  422f84:	strb	w1, [x0]
  422f88:	ldr	x2, [sp, #24]
  422f8c:	ldr	x1, [sp, #32]
  422f90:	ldr	x0, [sp, #40]
  422f94:	bl	4224ec <wcrtomb@plt+0x1d7dc>
  422f98:	nop
  422f9c:	ldp	x29, x30, [sp], #48
  422fa0:	ret
  422fa4:	stp	x29, x30, [sp, #-112]!
  422fa8:	mov	x29, sp
  422fac:	stp	x19, x20, [sp, #16]
  422fb0:	str	x21, [sp, #32]
  422fb4:	str	x0, [sp, #56]
  422fb8:	str	w1, [sp, #52]
  422fbc:	str	w2, [sp, #48]
  422fc0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422fc4:	add	x0, x0, #0x2b4
  422fc8:	ldr	w0, [x0]
  422fcc:	cmp	w0, #0x1
  422fd0:	b.le	4230b4 <wcrtomb@plt+0x1e3a4>
  422fd4:	mov	w0, #0x64                  	// #100
  422fd8:	strb	w0, [sp, #96]
  422fdc:	add	x0, sp, #0x60
  422fe0:	add	x0, x0, #0x1
  422fe4:	mov	x1, x0
  422fe8:	ldr	w0, [sp, #48]
  422fec:	bl	439f70 <wcrtomb@plt+0x35260>
  422ff0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  422ff4:	add	x0, x0, #0x2d1
  422ff8:	ldrb	w0, [x0]
  422ffc:	cmp	w0, #0x0
  423000:	b.eq	423048 <wcrtomb@plt+0x1e338>  // b.none
  423004:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423008:	add	x0, x0, #0xf88
  42300c:	ldr	x19, [x0]
  423010:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423014:	add	x0, x0, #0x408
  423018:	bl	404c60 <gettext@plt>
  42301c:	mov	x20, x0
  423020:	bl	405f78 <wcrtomb@plt+0x1268>
  423024:	mov	x2, x0
  423028:	add	x0, sp, #0x48
  42302c:	mov	x1, x0
  423030:	mov	x0, x2
  423034:	bl	450988 <argp_usage@@Base+0x789c>
  423038:	mov	x2, x0
  42303c:	mov	x1, x20
  423040:	mov	x0, x19
  423044:	bl	404c90 <fprintf@plt>
  423048:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42304c:	add	x0, x0, #0xf88
  423050:	ldr	x19, [x0]
  423054:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  423058:	add	x0, x0, #0x8a8
  42305c:	ldr	w0, [x0]
  423060:	add	w1, w0, #0x1
  423064:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  423068:	add	x0, x0, #0x8ac
  42306c:	ldr	w0, [x0]
  423070:	add	w20, w1, w0
  423074:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423078:	add	x0, x0, #0x750
  42307c:	bl	404c60 <gettext@plt>
  423080:	mov	x21, x0
  423084:	ldr	x0, [sp, #56]
  423088:	bl	459b14 <argp_usage@@Base+0x10a28>
  42308c:	mov	x1, x0
  423090:	add	x0, sp, #0x60
  423094:	mov	x5, x1
  423098:	mov	x4, x21
  42309c:	mov	w3, w20
  4230a0:	mov	x2, x0
  4230a4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4230a8:	add	x1, x0, #0x768
  4230ac:	mov	x0, x19
  4230b0:	bl	404c90 <fprintf@plt>
  4230b4:	nop
  4230b8:	ldp	x19, x20, [sp, #16]
  4230bc:	ldr	x21, [sp, #32]
  4230c0:	ldp	x29, x30, [sp], #112
  4230c4:	ret
  4230c8:	stp	x29, x30, [sp, #-48]!
  4230cc:	mov	x29, sp
  4230d0:	str	x0, [sp, #24]
  4230d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4230d8:	add	x0, x0, #0x3d0
  4230dc:	ldrb	w0, [x0]
  4230e0:	cmp	w0, #0x0
  4230e4:	b.eq	423124 <wcrtomb@plt+0x1e414>  // b.none
  4230e8:	ldr	x0, [sp, #24]
  4230ec:	bl	407890 <wcrtomb@plt+0x2b80>
  4230f0:	str	x0, [sp, #40]
  4230f4:	ldr	x0, [sp, #40]
  4230f8:	cmp	x0, #0x0
  4230fc:	b.lt	423118 <wcrtomb@plt+0x1e408>  // b.tstop
  423100:	ldr	x0, [sp, #40]
  423104:	lsl	x0, x0, #9
  423108:	ldr	x1, [sp, #24]
  42310c:	sub	x0, x1, x0
  423110:	str	x0, [sp, #24]
  423114:	b	423124 <wcrtomb@plt+0x1e414>
  423118:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42311c:	add	x0, x0, #0x3d0
  423120:	strb	wzr, [x0]
  423124:	ldr	x0, [sp, #24]
  423128:	bl	4051ec <wcrtomb@plt+0x4dc>
  42312c:	b	4231a4 <wcrtomb@plt+0x1e494>
  423130:	bl	406030 <wcrtomb@plt+0x1320>
  423134:	str	x0, [sp, #32]
  423138:	ldr	x0, [sp, #32]
  42313c:	cmp	x0, #0x0
  423140:	b.ne	423188 <wcrtomb@plt+0x1e478>  // b.any
  423144:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423148:	add	x0, x0, #0x420
  42314c:	ldr	x0, [x0]
  423150:	cmp	x0, #0x0
  423154:	b.eq	423168 <wcrtomb@plt+0x1e458>  // b.none
  423158:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42315c:	add	x0, x0, #0x420
  423160:	ldr	x0, [x0]
  423164:	blr	x0
  423168:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42316c:	add	x0, x0, #0x430
  423170:	bl	404c60 <gettext@plt>
  423174:	mov	x2, x0
  423178:	mov	w1, #0x0                   	// #0
  42317c:	mov	w0, #0x0                   	// #0
  423180:	bl	404100 <error@plt>
  423184:	bl	412ae0 <wcrtomb@plt+0xddd0>
  423188:	ldr	x0, [sp, #32]
  42318c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  423190:	ldr	x0, [sp, #24]
  423194:	sub	x0, x0, #0x200
  423198:	str	x0, [sp, #24]
  42319c:	ldr	x0, [sp, #24]
  4231a0:	bl	4051ec <wcrtomb@plt+0x4dc>
  4231a4:	ldr	x0, [sp, #24]
  4231a8:	cmp	x0, #0x0
  4231ac:	b.gt	423130 <wcrtomb@plt+0x1e420>
  4231b0:	nop
  4231b4:	nop
  4231b8:	ldp	x29, x30, [sp], #48
  4231bc:	ret
  4231c0:	stp	x29, x30, [sp, #-32]!
  4231c4:	mov	x29, sp
  4231c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4231cc:	add	x0, x0, #0x90
  4231d0:	ldrb	w0, [x0, #377]
  4231d4:	eor	w0, w0, #0x1
  4231d8:	and	w0, w0, #0xff
  4231dc:	cmp	w0, #0x0
  4231e0:	b.eq	423258 <wcrtomb@plt+0x1e548>  // b.none
  4231e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4231e8:	add	x0, x0, #0x18
  4231ec:	ldr	x0, [x0]
  4231f0:	ldrb	w0, [x0, #156]
  4231f4:	strb	w0, [sp, #31]
  4231f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4231fc:	add	x0, x0, #0x18
  423200:	ldr	x0, [x0]
  423204:	bl	4060c4 <wcrtomb@plt+0x13b4>
  423208:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42320c:	add	x0, x0, #0x90
  423210:	bl	405180 <wcrtomb@plt+0x470>
  423214:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423218:	add	x0, x0, #0x90
  42321c:	ldrb	w0, [x0, #272]
  423220:	cmp	w0, #0x0
  423224:	b.eq	423238 <wcrtomb@plt+0x1e528>  // b.none
  423228:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42322c:	add	x0, x0, #0x90
  423230:	bl	42b528 <wcrtomb@plt+0x26818>
  423234:	b	423254 <wcrtomb@plt+0x1e544>
  423238:	ldrb	w0, [sp, #31]
  42323c:	cmp	w0, #0x35
  423240:	b.eq	423254 <wcrtomb@plt+0x1e544>  // b.none
  423244:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423248:	add	x0, x0, #0x90
  42324c:	ldr	x0, [x0, #136]
  423250:	bl	4230c8 <wcrtomb@plt+0x1e3b8>
  423254:	bl	4051bc <wcrtomb@plt+0x4ac>
  423258:	nop
  42325c:	ldp	x29, x30, [sp], #32
  423260:	ret
  423264:	stp	x29, x30, [sp, #-32]!
  423268:	mov	x29, sp
  42326c:	bl	41fee0 <wcrtomb@plt+0x1b1d0>
  423270:	bl	4283f0 <wcrtomb@plt+0x236e0>
  423274:	mov	w0, #0x0                   	// #0
  423278:	bl	40a6d0 <wcrtomb@plt+0x59c0>
  42327c:	mov	w2, #0x0                   	// #0
  423280:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423284:	add	x1, x0, #0x90
  423288:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42328c:	add	x0, x0, #0x18
  423290:	bl	420af0 <wcrtomb@plt+0x1bde0>
  423294:	cmp	w0, #0x1
  423298:	b.ne	423384 <wcrtomb@plt+0x1e674>  // b.any
  42329c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4232a0:	add	x0, x0, #0x18
  4232a4:	ldr	x4, [x0]
  4232a8:	mov	w3, #0x0                   	// #0
  4232ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4232b0:	add	x2, x0, #0x0
  4232b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4232b8:	add	x1, x0, #0x90
  4232bc:	mov	x0, x4
  4232c0:	bl	42112c <wcrtomb@plt+0x1c41c>
  4232c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4232c8:	add	x0, x0, #0x18
  4232cc:	ldr	x0, [x0]
  4232d0:	ldrb	w0, [x0, #156]
  4232d4:	cmp	w0, #0x56
  4232d8:	b.ne	4232fc <wcrtomb@plt+0x1e5ec>  // b.any
  4232dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4232e0:	add	x0, x0, #0x18
  4232e4:	ldr	x0, [x0]
  4232e8:	mov	x2, #0x64                  	// #100
  4232ec:	mov	x1, x0
  4232f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4232f4:	add	x0, x0, #0xfb0
  4232f8:	bl	423d5c <wcrtomb@plt+0x1f04c>
  4232fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423300:	add	x0, x0, #0xfb0
  423304:	ldr	x0, [x0]
  423308:	cmp	x0, #0x0
  42330c:	b.eq	423384 <wcrtomb@plt+0x1e674>  // b.none
  423310:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423314:	add	x0, x0, #0x2b4
  423318:	ldr	w0, [x0]
  42331c:	cmp	w0, #0x0
  423320:	b.eq	423328 <wcrtomb@plt+0x1e618>  // b.none
  423324:	bl	422e4c <wcrtomb@plt+0x1e13c>
  423328:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42332c:	add	x0, x0, #0xfb0
  423330:	ldr	x0, [x0]
  423334:	bl	428a00 <wcrtomb@plt+0x23cf0>
  423338:	and	w0, w0, #0xff
  42333c:	eor	w0, w0, #0x1
  423340:	and	w0, w0, #0xff
  423344:	cmp	w0, #0x0
  423348:	b.eq	423384 <wcrtomb@plt+0x1e674>  // b.none
  42334c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423350:	add	x0, x0, #0x7c
  423354:	ldrb	w0, [x0]
  423358:	cmp	w0, #0x0
  42335c:	b.eq	423384 <wcrtomb@plt+0x1e674>  // b.none
  423360:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423364:	add	x0, x0, #0xfb0
  423368:	ldr	x0, [x0]
  42336c:	bl	409558 <wcrtomb@plt+0x4848>
  423370:	str	x0, [sp, #24]
  423374:	ldr	x0, [sp, #24]
  423378:	bl	428a00 <wcrtomb@plt+0x23cf0>
  42337c:	ldr	x0, [sp, #24]
  423380:	bl	404880 <free@plt>
  423384:	bl	407adc <wcrtomb@plt+0x2dcc>
  423388:	bl	428fe0 <wcrtomb@plt+0x242d0>
  42338c:	nop
  423390:	ldp	x29, x30, [sp], #32
  423394:	ret
  423398:	sub	sp, sp, #0x20
  42339c:	str	x0, [sp, #8]
  4233a0:	str	x1, [sp]
  4233a4:	ldr	x0, [sp, #8]
  4233a8:	str	x0, [sp, #24]
  4233ac:	ldr	x0, [sp, #24]
  4233b0:	ldr	x0, [x0]
  4233b4:	ldr	x1, [sp]
  4233b8:	udiv	x2, x0, x1
  4233bc:	ldr	x1, [sp]
  4233c0:	mul	x1, x2, x1
  4233c4:	sub	x0, x0, x1
  4233c8:	add	sp, sp, #0x20
  4233cc:	ret
  4233d0:	sub	sp, sp, #0x20
  4233d4:	str	x0, [sp, #8]
  4233d8:	str	x1, [sp]
  4233dc:	ldr	x0, [sp, #8]
  4233e0:	str	x0, [sp, #24]
  4233e4:	ldr	x0, [sp]
  4233e8:	str	x0, [sp, #16]
  4233ec:	ldr	x0, [sp, #24]
  4233f0:	ldr	x1, [x0]
  4233f4:	ldr	x0, [sp, #16]
  4233f8:	ldr	x0, [x0]
  4233fc:	cmp	x1, x0
  423400:	cset	w0, eq  // eq = none
  423404:	and	w0, w0, #0xff
  423408:	add	sp, sp, #0x20
  42340c:	ret
  423410:	stp	x29, x30, [sp, #-80]!
  423414:	mov	x29, sp
  423418:	str	x0, [sp, #56]
  42341c:	str	x1, [sp, #48]
  423420:	str	x2, [sp, #40]
  423424:	str	x3, [sp, #32]
  423428:	str	x4, [sp, #24]
  42342c:	str	w5, [sp, #20]
  423430:	bl	404bc0 <__errno_location@plt>
  423434:	str	wzr, [x0]
  423438:	add	x0, sp, #0x40
  42343c:	mov	w2, #0xa                   	// #10
  423440:	mov	x1, x0
  423444:	ldr	x0, [sp, #48]
  423448:	bl	4046e0 <strtoumax@plt>
  42344c:	str	x0, [sp, #72]
  423450:	ldr	x0, [sp, #64]
  423454:	ldrb	w0, [x0]
  423458:	cmp	w0, #0x0
  42345c:	b.ne	423470 <wcrtomb@plt+0x1e760>  // b.any
  423460:	bl	404bc0 <__errno_location@plt>
  423464:	ldr	w0, [x0]
  423468:	cmp	w0, #0x0
  42346c:	b.eq	4234a4 <wcrtomb@plt+0x1e794>  // b.none
  423470:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423474:	add	x0, x0, #0x778
  423478:	bl	404c60 <gettext@plt>
  42347c:	ldr	x6, [sp, #48]
  423480:	ldr	x5, [sp, #40]
  423484:	ldr	w4, [sp, #20]
  423488:	ldr	x3, [sp, #24]
  42348c:	mov	x2, x0
  423490:	mov	w1, #0x0                   	// #0
  423494:	mov	w0, #0x0                   	// #0
  423498:	bl	404100 <error@plt>
  42349c:	mov	w0, #0xffffffff            	// #-1
  4234a0:	b	4234f8 <wcrtomb@plt+0x1e7e8>
  4234a4:	ldr	x1, [sp, #72]
  4234a8:	ldr	x0, [sp, #32]
  4234ac:	cmp	x1, x0
  4234b0:	b.ls	4234e8 <wcrtomb@plt+0x1e7d8>  // b.plast
  4234b4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4234b8:	add	x0, x0, #0x790
  4234bc:	bl	404c60 <gettext@plt>
  4234c0:	ldr	x6, [sp, #48]
  4234c4:	ldr	x5, [sp, #40]
  4234c8:	ldr	w4, [sp, #20]
  4234cc:	ldr	x3, [sp, #24]
  4234d0:	mov	x2, x0
  4234d4:	mov	w1, #0x0                   	// #0
  4234d8:	mov	w0, #0x0                   	// #0
  4234dc:	bl	404100 <error@plt>
  4234e0:	mov	w0, #0xffffffff            	// #-1
  4234e4:	b	4234f8 <wcrtomb@plt+0x1e7e8>
  4234e8:	ldr	x0, [sp, #56]
  4234ec:	ldr	x1, [sp, #72]
  4234f0:	str	x1, [x0]
  4234f4:	mov	w0, #0x0                   	// #0
  4234f8:	ldp	x29, x30, [sp], #80
  4234fc:	ret
  423500:	stp	x29, x30, [sp, #-400]!
  423504:	mov	x29, sp
  423508:	str	x19, [sp, #16]
  42350c:	str	x0, [sp, #72]
  423510:	str	x1, [sp, #64]
  423514:	str	x2, [sp, #56]
  423518:	str	x3, [sp, #48]
  42351c:	str	x4, [sp, #40]
  423520:	str	xzr, [sp, #336]
  423524:	str	xzr, [sp, #328]
  423528:	str	wzr, [sp, #388]
  42352c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423530:	add	x1, x0, #0x7b0
  423534:	ldr	x0, [sp, #64]
  423538:	bl	4043d0 <fopen@plt>
  42353c:	str	x0, [sp, #368]
  423540:	ldr	x0, [sp, #368]
  423544:	cmp	x0, #0x0
  423548:	b.ne	423554 <wcrtomb@plt+0x1e844>  // b.any
  42354c:	ldr	x0, [sp, #64]
  423550:	bl	43a640 <wcrtomb@plt+0x35930>
  423554:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423558:	add	x0, x0, #0x7b8
  42355c:	str	x0, [sp, #160]
  423560:	mov	w0, #0x8e44                	// #36420
  423564:	str	w0, [sp, #396]
  423568:	str	wzr, [sp, #392]
  42356c:	b	42390c <wcrtomb@plt+0x1ebfc>
  423570:	str	xzr, [sp, #376]
  423574:	ldr	w0, [sp, #392]
  423578:	add	w0, w0, #0x1
  42357c:	str	w0, [sp, #392]
  423580:	ldr	x0, [sp, #336]
  423584:	ldr	w2, [sp, #396]
  423588:	add	x1, sp, #0x60
  42358c:	bl	4423e8 <wcrtomb@plt+0x3d6d8>
  423590:	cmp	w0, #0x0
  423594:	b.eq	4235f4 <wcrtomb@plt+0x1e8e4>  // b.none
  423598:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42359c:	add	x0, x0, #0x420
  4235a0:	ldr	x0, [x0]
  4235a4:	cmp	x0, #0x0
  4235a8:	b.eq	4235bc <wcrtomb@plt+0x1e8ac>  // b.none
  4235ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4235b0:	add	x0, x0, #0x420
  4235b4:	ldr	x0, [x0]
  4235b8:	blr	x0
  4235bc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4235c0:	add	x0, x0, #0x7c0
  4235c4:	bl	404c60 <gettext@plt>
  4235c8:	mov	x19, x0
  4235cc:	add	x0, sp, #0x60
  4235d0:	bl	4426b0 <wcrtomb@plt+0x3d9a0>
  4235d4:	mov	x5, x0
  4235d8:	ldr	w4, [sp, #392]
  4235dc:	ldr	x3, [sp, #64]
  4235e0:	mov	x2, x19
  4235e4:	mov	w1, #0x0                   	// #0
  4235e8:	mov	w0, #0x0                   	// #0
  4235ec:	bl	404100 <error@plt>
  4235f0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4235f4:	ldr	w0, [sp, #396]
  4235f8:	orr	w0, w0, #0x8
  4235fc:	str	w0, [sp, #396]
  423600:	ldr	x0, [sp, #96]
  423604:	cmp	x0, #0x0
  423608:	b.eq	423908 <wcrtomb@plt+0x1ebf8>  // b.none
  42360c:	ldr	x0, [sp, #96]
  423610:	cmp	x0, #0x2
  423614:	b.eq	423648 <wcrtomb@plt+0x1e938>  // b.none
  423618:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42361c:	add	x0, x0, #0x7e0
  423620:	bl	404c60 <gettext@plt>
  423624:	ldr	w4, [sp, #392]
  423628:	ldr	x3, [sp, #64]
  42362c:	mov	x2, x0
  423630:	mov	w1, #0x0                   	// #0
  423634:	mov	w0, #0x0                   	// #0
  423638:	bl	404100 <error@plt>
  42363c:	mov	w0, #0x1                   	// #1
  423640:	str	w0, [sp, #388]
  423644:	b	42390c <wcrtomb@plt+0x1ebfc>
  423648:	ldr	x0, [sp, #104]
  42364c:	ldr	x0, [x0]
  423650:	ldrb	w0, [x0]
  423654:	cmp	w0, #0x2b
  423658:	b.ne	423694 <wcrtomb@plt+0x1e984>  // b.any
  42365c:	ldr	x0, [sp, #104]
  423660:	ldr	x0, [x0]
  423664:	add	x1, x0, #0x1
  423668:	add	x0, sp, #0x58
  42366c:	ldr	w5, [sp, #392]
  423670:	ldr	x4, [sp, #64]
  423674:	ldr	x3, [sp, #40]
  423678:	ldr	x2, [sp, #48]
  42367c:	bl	423410 <wcrtomb@plt+0x1e700>
  423680:	cmp	w0, #0x0
  423684:	b.eq	423704 <wcrtomb@plt+0x1e9f4>  // b.none
  423688:	mov	w0, #0x1                   	// #1
  42368c:	str	w0, [sp, #388]
  423690:	b	42390c <wcrtomb@plt+0x1ebfc>
  423694:	ldr	x0, [sp, #56]
  423698:	cmp	x0, #0x0
  42369c:	b.eq	423704 <wcrtomb@plt+0x1e9f4>  // b.none
  4236a0:	ldr	x0, [sp, #104]
  4236a4:	ldr	x0, [x0]
  4236a8:	ldr	x1, [sp, #56]
  4236ac:	blr	x1
  4236b0:	str	x0, [sp, #88]
  4236b4:	ldr	x0, [sp, #88]
  4236b8:	cmn	x0, #0x1
  4236bc:	b.ne	423704 <wcrtomb@plt+0x1e9f4>  // b.any
  4236c0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4236c4:	add	x0, x0, #0x7f8
  4236c8:	bl	404c60 <gettext@plt>
  4236cc:	mov	x1, x0
  4236d0:	ldr	x0, [sp, #104]
  4236d4:	ldr	x0, [x0]
  4236d8:	mov	x6, x0
  4236dc:	ldr	x5, [sp, #48]
  4236e0:	ldr	w4, [sp, #392]
  4236e4:	ldr	x3, [sp, #64]
  4236e8:	mov	x2, x1
  4236ec:	mov	w1, #0x0                   	// #0
  4236f0:	mov	w0, #0x0                   	// #0
  4236f4:	bl	404100 <error@plt>
  4236f8:	mov	w0, #0x1                   	// #1
  4236fc:	str	w0, [sp, #388]
  423700:	b	42390c <wcrtomb@plt+0x1ebfc>
  423704:	ldr	x0, [sp, #104]
  423708:	add	x0, x0, #0x8
  42370c:	ldr	x0, [x0]
  423710:	mov	w1, #0x3a                  	// #58
  423714:	bl	404930 <strchr@plt>
  423718:	str	x0, [sp, #352]
  42371c:	ldr	x0, [sp, #352]
  423720:	cmp	x0, #0x0
  423724:	b.eq	42378c <wcrtomb@plt+0x1ea7c>  // b.none
  423728:	ldr	x0, [sp, #104]
  42372c:	add	x0, x0, #0x8
  423730:	ldr	x0, [x0]
  423734:	ldr	x1, [sp, #352]
  423738:	cmp	x1, x0
  42373c:	b.ls	42374c <wcrtomb@plt+0x1ea3c>  // b.plast
  423740:	ldr	x0, [sp, #104]
  423744:	ldr	x0, [x0, #8]
  423748:	str	x0, [sp, #376]
  42374c:	ldr	x0, [sp, #352]
  423750:	add	x1, x0, #0x1
  423754:	str	x1, [sp, #352]
  423758:	strb	wzr, [x0]
  42375c:	add	x0, sp, #0x50
  423760:	ldr	w5, [sp, #392]
  423764:	ldr	x4, [sp, #64]
  423768:	ldr	x3, [sp, #40]
  42376c:	ldr	x2, [sp, #48]
  423770:	ldr	x1, [sp, #352]
  423774:	bl	423410 <wcrtomb@plt+0x1e700>
  423778:	cmp	w0, #0x0
  42377c:	b.eq	423854 <wcrtomb@plt+0x1eb44>  // b.none
  423780:	mov	w0, #0x1                   	// #1
  423784:	str	w0, [sp, #388]
  423788:	b	42390c <wcrtomb@plt+0x1ebfc>
  42378c:	ldr	x0, [sp, #104]
  423790:	add	x0, x0, #0x8
  423794:	ldr	x0, [x0]
  423798:	ldrb	w0, [x0]
  42379c:	cmp	w0, #0x2b
  4237a0:	b.ne	4237dc <wcrtomb@plt+0x1eacc>  // b.any
  4237a4:	ldr	x0, [sp, #104]
  4237a8:	add	x0, x0, #0x8
  4237ac:	ldr	x1, [x0]
  4237b0:	add	x0, sp, #0x50
  4237b4:	ldr	w5, [sp, #392]
  4237b8:	ldr	x4, [sp, #64]
  4237bc:	ldr	x3, [sp, #40]
  4237c0:	ldr	x2, [sp, #48]
  4237c4:	bl	423410 <wcrtomb@plt+0x1e700>
  4237c8:	cmp	w0, #0x0
  4237cc:	b.eq	423854 <wcrtomb@plt+0x1eb44>  // b.none
  4237d0:	mov	w0, #0x1                   	// #1
  4237d4:	str	w0, [sp, #388]
  4237d8:	b	42390c <wcrtomb@plt+0x1ebfc>
  4237dc:	ldr	x0, [sp, #104]
  4237e0:	ldr	x0, [x0, #8]
  4237e4:	str	x0, [sp, #376]
  4237e8:	ldr	x0, [sp, #104]
  4237ec:	add	x0, x0, #0x8
  4237f0:	ldr	x0, [x0]
  4237f4:	ldr	x1, [sp, #56]
  4237f8:	blr	x1
  4237fc:	str	x0, [sp, #80]
  423800:	ldr	x0, [sp, #80]
  423804:	cmn	x0, #0x1
  423808:	b.ne	423854 <wcrtomb@plt+0x1eb44>  // b.any
  42380c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423810:	add	x0, x0, #0x7f8
  423814:	bl	404c60 <gettext@plt>
  423818:	mov	x1, x0
  42381c:	ldr	x0, [sp, #104]
  423820:	add	x0, x0, #0x8
  423824:	ldr	x0, [x0]
  423828:	mov	x6, x0
  42382c:	ldr	x5, [sp, #48]
  423830:	ldr	w4, [sp, #392]
  423834:	ldr	x3, [sp, #64]
  423838:	mov	x2, x1
  42383c:	mov	w1, #0x0                   	// #0
  423840:	mov	w0, #0x0                   	// #0
  423844:	bl	404100 <error@plt>
  423848:	mov	w0, #0x1                   	// #1
  42384c:	str	w0, [sp, #388]
  423850:	b	42390c <wcrtomb@plt+0x1ebfc>
  423854:	mov	x0, #0x18                  	// #24
  423858:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  42385c:	str	x0, [sp, #344]
  423860:	ldr	x1, [sp, #88]
  423864:	ldr	x0, [sp, #344]
  423868:	str	x1, [x0]
  42386c:	ldr	x1, [sp, #80]
  423870:	ldr	x0, [sp, #344]
  423874:	str	x1, [x0, #8]
  423878:	ldr	x0, [sp, #376]
  42387c:	cmp	x0, #0x0
  423880:	b.eq	423894 <wcrtomb@plt+0x1eb84>  // b.none
  423884:	ldr	x0, [sp, #376]
  423888:	bl	45b858 <argp_usage@@Base+0x1276c>
  42388c:	mov	x1, x0
  423890:	b	423898 <wcrtomb@plt+0x1eb88>
  423894:	mov	x1, #0x0                   	// #0
  423898:	ldr	x0, [sp, #344]
  42389c:	str	x1, [x0, #16]
  4238a0:	ldr	x0, [sp, #72]
  4238a4:	ldr	x0, [x0]
  4238a8:	cmp	x0, #0x0
  4238ac:	b.ne	4238ec <wcrtomb@plt+0x1ebdc>  // b.any
  4238b0:	mov	x4, #0x0                   	// #0
  4238b4:	adrp	x0, 423000 <wcrtomb@plt+0x1e2f0>
  4238b8:	add	x3, x0, #0x3d0
  4238bc:	adrp	x0, 423000 <wcrtomb@plt+0x1e2f0>
  4238c0:	add	x2, x0, #0x398
  4238c4:	mov	x1, #0x0                   	// #0
  4238c8:	mov	x0, #0x0                   	// #0
  4238cc:	bl	44ea34 <argp_usage@@Base+0x5948>
  4238d0:	mov	x1, x0
  4238d4:	ldr	x0, [sp, #72]
  4238d8:	str	x1, [x0]
  4238dc:	ldr	x0, [sp, #72]
  4238e0:	ldr	x0, [x0]
  4238e4:	cmp	x0, #0x0
  4238e8:	b.eq	423904 <wcrtomb@plt+0x1ebf4>  // b.none
  4238ec:	ldr	x0, [sp, #72]
  4238f0:	ldr	x0, [x0]
  4238f4:	ldr	x1, [sp, #344]
  4238f8:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  4238fc:	cmp	x0, #0x0
  423900:	b.ne	42390c <wcrtomb@plt+0x1ebfc>  // b.any
  423904:	bl	412b2c <wcrtomb@plt+0xde1c>
  423908:	nop
  42390c:	add	x1, sp, #0x148
  423910:	add	x0, sp, #0x150
  423914:	ldr	x2, [sp, #368]
  423918:	bl	404840 <getline@plt>
  42391c:	str	x0, [sp, #360]
  423920:	ldr	x0, [sp, #360]
  423924:	cmp	x0, #0x0
  423928:	b.gt	423570 <wcrtomb@plt+0x1e860>
  42392c:	ldr	w0, [sp, #396]
  423930:	and	w0, w0, #0x8
  423934:	cmp	w0, #0x0
  423938:	b.eq	423944 <wcrtomb@plt+0x1ec34>  // b.none
  42393c:	add	x0, sp, #0x60
  423940:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  423944:	ldr	x0, [sp, #368]
  423948:	bl	404380 <fclose@plt>
  42394c:	ldr	w0, [sp, #388]
  423950:	cmp	w0, #0x0
  423954:	b.eq	42399c <wcrtomb@plt+0x1ec8c>  // b.none
  423958:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42395c:	add	x0, x0, #0x420
  423960:	ldr	x0, [x0]
  423964:	cmp	x0, #0x0
  423968:	b.eq	42397c <wcrtomb@plt+0x1ec6c>  // b.none
  42396c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423970:	add	x0, x0, #0x420
  423974:	ldr	x0, [x0]
  423978:	blr	x0
  42397c:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423980:	add	x0, x0, #0x818
  423984:	bl	404c60 <gettext@plt>
  423988:	mov	x2, x0
  42398c:	mov	w1, #0x0                   	// #0
  423990:	mov	w0, #0x0                   	// #0
  423994:	bl	404100 <error@plt>
  423998:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42399c:	nop
  4239a0:	ldr	x19, [sp, #16]
  4239a4:	ldp	x29, x30, [sp], #400
  4239a8:	ret
  4239ac:	stp	x29, x30, [sp, #-48]!
  4239b0:	mov	x29, sp
  4239b4:	str	x0, [sp, #24]
  4239b8:	ldr	x0, [sp, #24]
  4239bc:	bl	404500 <getpwnam@plt>
  4239c0:	str	x0, [sp, #40]
  4239c4:	ldr	x0, [sp, #40]
  4239c8:	cmp	x0, #0x0
  4239cc:	b.eq	4239e0 <wcrtomb@plt+0x1ecd0>  // b.none
  4239d0:	ldr	x0, [sp, #40]
  4239d4:	ldr	w0, [x0, #16]
  4239d8:	mov	w0, w0
  4239dc:	b	4239e4 <wcrtomb@plt+0x1ecd4>
  4239e0:	mov	x0, #0xffffffffffffffff    	// #-1
  4239e4:	ldp	x29, x30, [sp], #48
  4239e8:	ret
  4239ec:	stp	x29, x30, [sp, #-32]!
  4239f0:	mov	x29, sp
  4239f4:	str	x0, [sp, #24]
  4239f8:	mov	x4, #0xffffffff            	// #4294967295
  4239fc:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423a00:	add	x3, x0, #0x830
  423a04:	adrp	x0, 423000 <wcrtomb@plt+0x1e2f0>
  423a08:	add	x2, x0, #0x9ac
  423a0c:	ldr	x1, [sp, #24]
  423a10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423a14:	add	x0, x0, #0xa38
  423a18:	bl	423500 <wcrtomb@plt+0x1e7f0>
  423a1c:	nop
  423a20:	ldp	x29, x30, [sp], #32
  423a24:	ret
  423a28:	stp	x29, x30, [sp, #-96]!
  423a2c:	mov	x29, sp
  423a30:	str	w0, [sp, #44]
  423a34:	str	x1, [sp, #32]
  423a38:	str	x2, [sp, #24]
  423a3c:	mov	w0, #0x1                   	// #1
  423a40:	str	w0, [sp, #92]
  423a44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423a48:	add	x0, x0, #0xa38
  423a4c:	ldr	x0, [x0]
  423a50:	cmp	x0, #0x0
  423a54:	b.eq	423ab0 <wcrtomb@plt+0x1eda0>  // b.none
  423a58:	ldr	w0, [sp, #44]
  423a5c:	str	x0, [sp, #56]
  423a60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423a64:	add	x0, x0, #0xa38
  423a68:	ldr	x0, [x0]
  423a6c:	add	x1, sp, #0x38
  423a70:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  423a74:	str	x0, [sp, #80]
  423a78:	ldr	x0, [sp, #80]
  423a7c:	cmp	x0, #0x0
  423a80:	b.eq	423ab0 <wcrtomb@plt+0x1eda0>  // b.none
  423a84:	ldr	x0, [sp, #80]
  423a88:	ldr	x0, [x0, #8]
  423a8c:	mov	w1, w0
  423a90:	ldr	x0, [sp, #32]
  423a94:	str	w1, [x0]
  423a98:	ldr	x0, [sp, #80]
  423a9c:	ldr	x1, [x0, #16]
  423aa0:	ldr	x0, [sp, #24]
  423aa4:	str	x1, [x0]
  423aa8:	mov	w0, #0x0                   	// #0
  423aac:	b	423b0c <wcrtomb@plt+0x1edfc>
  423ab0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423ab4:	add	x0, x0, #0x340
  423ab8:	ldr	w0, [x0]
  423abc:	cmn	w0, #0x1
  423ac0:	b.eq	423adc <wcrtomb@plt+0x1edcc>  // b.none
  423ac4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423ac8:	add	x0, x0, #0x340
  423acc:	ldr	w1, [x0]
  423ad0:	ldr	x0, [sp, #32]
  423ad4:	str	w1, [x0]
  423ad8:	str	wzr, [sp, #92]
  423adc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423ae0:	add	x0, x0, #0x278
  423ae4:	ldr	x0, [x0]
  423ae8:	cmp	x0, #0x0
  423aec:	b.eq	423b08 <wcrtomb@plt+0x1edf8>  // b.none
  423af0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423af4:	add	x0, x0, #0x278
  423af8:	ldr	x1, [x0]
  423afc:	ldr	x0, [sp, #24]
  423b00:	str	x1, [x0]
  423b04:	str	wzr, [sp, #92]
  423b08:	ldr	w0, [sp, #92]
  423b0c:	ldp	x29, x30, [sp], #96
  423b10:	ret
  423b14:	stp	x29, x30, [sp, #-48]!
  423b18:	mov	x29, sp
  423b1c:	str	x0, [sp, #24]
  423b20:	ldr	x0, [sp, #24]
  423b24:	bl	4041d0 <getgrnam@plt>
  423b28:	str	x0, [sp, #40]
  423b2c:	ldr	x0, [sp, #40]
  423b30:	cmp	x0, #0x0
  423b34:	b.eq	423b48 <wcrtomb@plt+0x1ee38>  // b.none
  423b38:	ldr	x0, [sp, #40]
  423b3c:	ldr	w0, [x0, #16]
  423b40:	mov	w0, w0
  423b44:	b	423b4c <wcrtomb@plt+0x1ee3c>
  423b48:	mov	x0, #0xffffffffffffffff    	// #-1
  423b4c:	ldp	x29, x30, [sp], #48
  423b50:	ret
  423b54:	stp	x29, x30, [sp, #-32]!
  423b58:	mov	x29, sp
  423b5c:	str	x0, [sp, #24]
  423b60:	mov	x4, #0xffffffff            	// #4294967295
  423b64:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  423b68:	add	x3, x0, #0x838
  423b6c:	adrp	x0, 423000 <wcrtomb@plt+0x1e2f0>
  423b70:	add	x2, x0, #0xb14
  423b74:	ldr	x1, [sp, #24]
  423b78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423b7c:	add	x0, x0, #0xa40
  423b80:	bl	423500 <wcrtomb@plt+0x1e7f0>
  423b84:	nop
  423b88:	ldp	x29, x30, [sp], #32
  423b8c:	ret
  423b90:	stp	x29, x30, [sp, #-96]!
  423b94:	mov	x29, sp
  423b98:	str	w0, [sp, #44]
  423b9c:	str	x1, [sp, #32]
  423ba0:	str	x2, [sp, #24]
  423ba4:	mov	w0, #0x1                   	// #1
  423ba8:	str	w0, [sp, #92]
  423bac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423bb0:	add	x0, x0, #0xa40
  423bb4:	ldr	x0, [x0]
  423bb8:	cmp	x0, #0x0
  423bbc:	b.eq	423c18 <wcrtomb@plt+0x1ef08>  // b.none
  423bc0:	ldr	w0, [sp, #44]
  423bc4:	str	x0, [sp, #56]
  423bc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  423bcc:	add	x0, x0, #0xa40
  423bd0:	ldr	x0, [x0]
  423bd4:	add	x1, sp, #0x38
  423bd8:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  423bdc:	str	x0, [sp, #80]
  423be0:	ldr	x0, [sp, #80]
  423be4:	cmp	x0, #0x0
  423be8:	b.eq	423c18 <wcrtomb@plt+0x1ef08>  // b.none
  423bec:	ldr	x0, [sp, #80]
  423bf0:	ldr	x0, [x0, #8]
  423bf4:	mov	w1, w0
  423bf8:	ldr	x0, [sp, #32]
  423bfc:	str	w1, [x0]
  423c00:	ldr	x0, [sp, #80]
  423c04:	ldr	x1, [x0, #16]
  423c08:	ldr	x0, [sp, #24]
  423c0c:	str	x1, [x0]
  423c10:	mov	w0, #0x0                   	// #0
  423c14:	b	423c74 <wcrtomb@plt+0x1ef64>
  423c18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423c1c:	add	x0, x0, #0x2f0
  423c20:	ldr	w0, [x0]
  423c24:	cmn	w0, #0x1
  423c28:	b.eq	423c44 <wcrtomb@plt+0x1ef34>  // b.none
  423c2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423c30:	add	x0, x0, #0x2f0
  423c34:	ldr	w1, [x0]
  423c38:	ldr	x0, [sp, #32]
  423c3c:	str	w1, [x0]
  423c40:	str	wzr, [sp, #92]
  423c44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423c48:	add	x0, x0, #0x240
  423c4c:	ldr	x0, [x0]
  423c50:	cmp	x0, #0x0
  423c54:	b.eq	423c70 <wcrtomb@plt+0x1ef60>  // b.none
  423c58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  423c5c:	add	x0, x0, #0x240
  423c60:	ldr	x1, [x0]
  423c64:	ldr	x0, [sp, #24]
  423c68:	str	x1, [x0]
  423c6c:	str	wzr, [sp, #92]
  423c70:	ldr	w0, [sp, #92]
  423c74:	ldp	x29, x30, [sp], #96
  423c78:	ret
  423c7c:	sub	sp, sp, #0x20
  423c80:	str	x0, [sp, #8]
  423c84:	ldr	x0, [sp, #8]
  423c88:	cmp	x0, #0x0
  423c8c:	b.lt	423c98 <wcrtomb@plt+0x1ef88>  // b.tstop
  423c90:	ldr	x0, [sp, #8]
  423c94:	b	423cb4 <wcrtomb@plt+0x1efa4>
  423c98:	ldr	x1, [sp, #8]
  423c9c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  423ca0:	add	x0, x1, x0
  423ca4:	str	x0, [sp, #24]
  423ca8:	ldr	x1, [sp, #24]
  423cac:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  423cb0:	add	x0, x1, x0
  423cb4:	add	sp, sp, #0x20
  423cb8:	ret
  423cbc:	sub	sp, sp, #0x10
  423cc0:	stp	x0, x1, [sp]
  423cc4:	ldr	x0, [sp, #8]
  423cc8:	mvn	x0, x0
  423ccc:	lsr	x0, x0, #63
  423cd0:	and	w0, w0, #0xff
  423cd4:	add	sp, sp, #0x10
  423cd8:	ret
  423cdc:	stp	x29, x30, [sp, #-32]!
  423ce0:	mov	x29, sp
  423ce4:	str	w0, [sp, #28]
  423ce8:	str	x1, [sp, #16]
  423cec:	mov	x0, #0x0                   	// #0
  423cf0:	bl	457d90 <argp_usage@@Base+0xeca4>
  423cf4:	ldr	x2, [sp, #16]
  423cf8:	mov	w1, w0
  423cfc:	ldr	w0, [sp, #28]
  423d00:	bl	459d20 <argp_usage@@Base+0x10c34>
  423d04:	ldp	x29, x30, [sp], #32
  423d08:	ret
  423d0c:	stp	x29, x30, [sp, #-32]!
  423d10:	mov	x29, sp
  423d14:	str	x0, [sp, #24]
  423d18:	str	x1, [sp, #16]
  423d1c:	ldr	x0, [sp, #24]
  423d20:	ldr	x0, [x0]
  423d24:	bl	404880 <free@plt>
  423d28:	ldr	x0, [sp, #16]
  423d2c:	cmp	x0, #0x0
  423d30:	b.eq	423d44 <wcrtomb@plt+0x1f034>  // b.none
  423d34:	ldr	x0, [sp, #16]
  423d38:	bl	45b858 <argp_usage@@Base+0x1276c>
  423d3c:	mov	x1, x0
  423d40:	b	423d48 <wcrtomb@plt+0x1f038>
  423d44:	mov	x1, #0x0                   	// #0
  423d48:	ldr	x0, [sp, #24]
  423d4c:	str	x1, [x0]
  423d50:	nop
  423d54:	ldp	x29, x30, [sp], #32
  423d58:	ret
  423d5c:	stp	x29, x30, [sp, #-64]!
  423d60:	mov	x29, sp
  423d64:	str	x0, [sp, #40]
  423d68:	str	x1, [sp, #32]
  423d6c:	str	x2, [sp, #24]
  423d70:	ldr	x0, [sp, #40]
  423d74:	ldr	x0, [x0]
  423d78:	bl	404880 <free@plt>
  423d7c:	ldr	x0, [sp, #32]
  423d80:	cmp	x0, #0x0
  423d84:	b.eq	423dd4 <wcrtomb@plt+0x1f0c4>  // b.none
  423d88:	ldr	x1, [sp, #24]
  423d8c:	ldr	x0, [sp, #32]
  423d90:	bl	404180 <strnlen@plt>
  423d94:	str	x0, [sp, #56]
  423d98:	ldr	x0, [sp, #56]
  423d9c:	add	x0, x0, #0x1
  423da0:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  423da4:	str	x0, [sp, #48]
  423da8:	ldr	x2, [sp, #56]
  423dac:	ldr	x1, [sp, #32]
  423db0:	ldr	x0, [sp, #48]
  423db4:	bl	404020 <memcpy@plt>
  423db8:	ldr	x1, [sp, #48]
  423dbc:	ldr	x0, [sp, #56]
  423dc0:	add	x0, x1, x0
  423dc4:	strb	wzr, [x0]
  423dc8:	ldr	x0, [sp, #40]
  423dcc:	ldr	x1, [sp, #48]
  423dd0:	str	x1, [x0]
  423dd4:	nop
  423dd8:	ldp	x29, x30, [sp], #64
  423ddc:	ret
  423de0:	sub	sp, sp, #0x30
  423de4:	str	x0, [sp, #8]
  423de8:	mov	w0, #0x1                   	// #1
  423dec:	str	w0, [sp, #44]
  423df0:	ldr	x0, [sp, #8]
  423df4:	str	x0, [sp, #32]
  423df8:	ldr	x0, [sp, #8]
  423dfc:	str	x0, [sp, #24]
  423e00:	b	42419c <wcrtomb@plt+0x1f48c>
  423e04:	ldr	x0, [sp, #32]
  423e08:	ldrb	w0, [x0]
  423e0c:	cmp	w0, #0x5c
  423e10:	b.ne	424150 <wcrtomb@plt+0x1f440>  // b.any
  423e14:	ldr	x0, [sp, #32]
  423e18:	add	x0, x0, #0x1
  423e1c:	str	x0, [sp, #32]
  423e20:	ldr	x0, [sp, #32]
  423e24:	ldrb	w0, [x0]
  423e28:	cmp	w0, #0x76
  423e2c:	b.eq	423fc4 <wcrtomb@plt+0x1f2b4>  // b.none
  423e30:	cmp	w0, #0x76
  423e34:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e38:	cmp	w0, #0x74
  423e3c:	b.eq	423fa0 <wcrtomb@plt+0x1f290>  // b.none
  423e40:	cmp	w0, #0x74
  423e44:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e48:	cmp	w0, #0x72
  423e4c:	b.eq	423f7c <wcrtomb@plt+0x1f26c>  // b.none
  423e50:	cmp	w0, #0x72
  423e54:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e58:	cmp	w0, #0x6e
  423e5c:	b.eq	423f58 <wcrtomb@plt+0x1f248>  // b.none
  423e60:	cmp	w0, #0x6e
  423e64:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e68:	cmp	w0, #0x66
  423e6c:	b.eq	423f34 <wcrtomb@plt+0x1f224>  // b.none
  423e70:	cmp	w0, #0x66
  423e74:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e78:	cmp	w0, #0x62
  423e7c:	b.eq	423f10 <wcrtomb@plt+0x1f200>  // b.none
  423e80:	cmp	w0, #0x62
  423e84:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e88:	cmp	w0, #0x61
  423e8c:	b.eq	423eec <wcrtomb@plt+0x1f1dc>  // b.none
  423e90:	cmp	w0, #0x61
  423e94:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423e98:	cmp	w0, #0x5c
  423e9c:	b.eq	423ec8 <wcrtomb@plt+0x1f1b8>  // b.none
  423ea0:	cmp	w0, #0x5c
  423ea4:	b.gt	424100 <wcrtomb@plt+0x1f3f0>
  423ea8:	cmp	w0, #0x37
  423eac:	b.gt	423ebc <wcrtomb@plt+0x1f1ac>
  423eb0:	cmp	w0, #0x30
  423eb4:	b.ge	42400c <wcrtomb@plt+0x1f2fc>  // b.tcont
  423eb8:	b	424100 <wcrtomb@plt+0x1f3f0>
  423ebc:	cmp	w0, #0x3f
  423ec0:	b.eq	423fe8 <wcrtomb@plt+0x1f2d8>  // b.none
  423ec4:	b	424100 <wcrtomb@plt+0x1f3f0>
  423ec8:	ldr	x0, [sp, #24]
  423ecc:	add	x1, x0, #0x1
  423ed0:	str	x1, [sp, #24]
  423ed4:	mov	w1, #0x5c                  	// #92
  423ed8:	strb	w1, [x0]
  423edc:	ldr	x0, [sp, #32]
  423ee0:	add	x0, x0, #0x1
  423ee4:	str	x0, [sp, #32]
  423ee8:	b	42419c <wcrtomb@plt+0x1f48c>
  423eec:	ldr	x0, [sp, #24]
  423ef0:	add	x1, x0, #0x1
  423ef4:	str	x1, [sp, #24]
  423ef8:	mov	w1, #0x7                   	// #7
  423efc:	strb	w1, [x0]
  423f00:	ldr	x0, [sp, #32]
  423f04:	add	x0, x0, #0x1
  423f08:	str	x0, [sp, #32]
  423f0c:	b	42419c <wcrtomb@plt+0x1f48c>
  423f10:	ldr	x0, [sp, #24]
  423f14:	add	x1, x0, #0x1
  423f18:	str	x1, [sp, #24]
  423f1c:	mov	w1, #0x8                   	// #8
  423f20:	strb	w1, [x0]
  423f24:	ldr	x0, [sp, #32]
  423f28:	add	x0, x0, #0x1
  423f2c:	str	x0, [sp, #32]
  423f30:	b	42419c <wcrtomb@plt+0x1f48c>
  423f34:	ldr	x0, [sp, #24]
  423f38:	add	x1, x0, #0x1
  423f3c:	str	x1, [sp, #24]
  423f40:	mov	w1, #0xc                   	// #12
  423f44:	strb	w1, [x0]
  423f48:	ldr	x0, [sp, #32]
  423f4c:	add	x0, x0, #0x1
  423f50:	str	x0, [sp, #32]
  423f54:	b	42419c <wcrtomb@plt+0x1f48c>
  423f58:	ldr	x0, [sp, #24]
  423f5c:	add	x1, x0, #0x1
  423f60:	str	x1, [sp, #24]
  423f64:	mov	w1, #0xa                   	// #10
  423f68:	strb	w1, [x0]
  423f6c:	ldr	x0, [sp, #32]
  423f70:	add	x0, x0, #0x1
  423f74:	str	x0, [sp, #32]
  423f78:	b	42419c <wcrtomb@plt+0x1f48c>
  423f7c:	ldr	x0, [sp, #24]
  423f80:	add	x1, x0, #0x1
  423f84:	str	x1, [sp, #24]
  423f88:	mov	w1, #0xd                   	// #13
  423f8c:	strb	w1, [x0]
  423f90:	ldr	x0, [sp, #32]
  423f94:	add	x0, x0, #0x1
  423f98:	str	x0, [sp, #32]
  423f9c:	b	42419c <wcrtomb@plt+0x1f48c>
  423fa0:	ldr	x0, [sp, #24]
  423fa4:	add	x1, x0, #0x1
  423fa8:	str	x1, [sp, #24]
  423fac:	mov	w1, #0x9                   	// #9
  423fb0:	strb	w1, [x0]
  423fb4:	ldr	x0, [sp, #32]
  423fb8:	add	x0, x0, #0x1
  423fbc:	str	x0, [sp, #32]
  423fc0:	b	42419c <wcrtomb@plt+0x1f48c>
  423fc4:	ldr	x0, [sp, #24]
  423fc8:	add	x1, x0, #0x1
  423fcc:	str	x1, [sp, #24]
  423fd0:	mov	w1, #0xb                   	// #11
  423fd4:	strb	w1, [x0]
  423fd8:	ldr	x0, [sp, #32]
  423fdc:	add	x0, x0, #0x1
  423fe0:	str	x0, [sp, #32]
  423fe4:	b	42419c <wcrtomb@plt+0x1f48c>
  423fe8:	ldr	x0, [sp, #24]
  423fec:	add	x1, x0, #0x1
  423ff0:	str	x1, [sp, #24]
  423ff4:	mov	w1, #0x7f                  	// #127
  423ff8:	strb	w1, [x0]
  423ffc:	ldr	x0, [sp, #32]
  424000:	add	x0, x0, #0x1
  424004:	str	x0, [sp, #32]
  424008:	b	42419c <wcrtomb@plt+0x1f48c>
  42400c:	ldr	x0, [sp, #32]
  424010:	add	x1, x0, #0x1
  424014:	str	x1, [sp, #32]
  424018:	ldrb	w0, [x0]
  42401c:	sub	w0, w0, #0x30
  424020:	str	w0, [sp, #20]
  424024:	ldr	x0, [sp, #32]
  424028:	ldrb	w0, [x0]
  42402c:	cmp	w0, #0x2f
  424030:	b.ls	424044 <wcrtomb@plt+0x1f334>  // b.plast
  424034:	ldr	x0, [sp, #32]
  424038:	ldrb	w0, [x0]
  42403c:	cmp	w0, #0x37
  424040:	b.ls	424060 <wcrtomb@plt+0x1f350>  // b.plast
  424044:	ldr	x0, [sp, #24]
  424048:	add	x1, x0, #0x1
  42404c:	str	x1, [sp, #24]
  424050:	ldr	w1, [sp, #20]
  424054:	and	w1, w1, #0xff
  424058:	strb	w1, [x0]
  42405c:	b	42419c <wcrtomb@plt+0x1f48c>
  424060:	ldr	w0, [sp, #20]
  424064:	lsl	w1, w0, #3
  424068:	ldr	x0, [sp, #32]
  42406c:	add	x2, x0, #0x1
  424070:	str	x2, [sp, #32]
  424074:	ldrb	w0, [x0]
  424078:	add	w0, w1, w0
  42407c:	sub	w0, w0, #0x30
  424080:	str	w0, [sp, #20]
  424084:	ldr	x0, [sp, #32]
  424088:	ldrb	w0, [x0]
  42408c:	cmp	w0, #0x2f
  424090:	b.ls	4240a4 <wcrtomb@plt+0x1f394>  // b.plast
  424094:	ldr	x0, [sp, #32]
  424098:	ldrb	w0, [x0]
  42409c:	cmp	w0, #0x37
  4240a0:	b.ls	4240c0 <wcrtomb@plt+0x1f3b0>  // b.plast
  4240a4:	ldr	x0, [sp, #24]
  4240a8:	add	x1, x0, #0x1
  4240ac:	str	x1, [sp, #24]
  4240b0:	ldr	w1, [sp, #20]
  4240b4:	and	w1, w1, #0xff
  4240b8:	strb	w1, [x0]
  4240bc:	b	42419c <wcrtomb@plt+0x1f48c>
  4240c0:	ldr	w0, [sp, #20]
  4240c4:	lsl	w1, w0, #3
  4240c8:	ldr	x0, [sp, #32]
  4240cc:	add	x2, x0, #0x1
  4240d0:	str	x2, [sp, #32]
  4240d4:	ldrb	w0, [x0]
  4240d8:	add	w0, w1, w0
  4240dc:	sub	w0, w0, #0x30
  4240e0:	str	w0, [sp, #20]
  4240e4:	ldr	x0, [sp, #24]
  4240e8:	add	x1, x0, #0x1
  4240ec:	str	x1, [sp, #24]
  4240f0:	ldr	w1, [sp, #20]
  4240f4:	and	w1, w1, #0xff
  4240f8:	strb	w1, [x0]
  4240fc:	b	42419c <wcrtomb@plt+0x1f48c>
  424100:	str	wzr, [sp, #44]
  424104:	ldr	x0, [sp, #24]
  424108:	add	x1, x0, #0x1
  42410c:	str	x1, [sp, #24]
  424110:	mov	w1, #0x5c                  	// #92
  424114:	strb	w1, [x0]
  424118:	ldr	x0, [sp, #32]
  42411c:	ldrb	w0, [x0]
  424120:	cmp	w0, #0x0
  424124:	b.eq	424148 <wcrtomb@plt+0x1f438>  // b.none
  424128:	ldr	x1, [sp, #32]
  42412c:	add	x0, x1, #0x1
  424130:	str	x0, [sp, #32]
  424134:	ldr	x0, [sp, #24]
  424138:	add	x2, x0, #0x1
  42413c:	str	x2, [sp, #24]
  424140:	ldrb	w1, [x1]
  424144:	strb	w1, [x0]
  424148:	nop
  42414c:	b	42419c <wcrtomb@plt+0x1f48c>
  424150:	ldr	x1, [sp, #32]
  424154:	ldr	x0, [sp, #24]
  424158:	cmp	x1, x0
  42415c:	b.eq	424184 <wcrtomb@plt+0x1f474>  // b.none
  424160:	ldr	x1, [sp, #32]
  424164:	add	x0, x1, #0x1
  424168:	str	x0, [sp, #32]
  42416c:	ldr	x0, [sp, #24]
  424170:	add	x2, x0, #0x1
  424174:	str	x2, [sp, #24]
  424178:	ldrb	w1, [x1]
  42417c:	strb	w1, [x0]
  424180:	b	42419c <wcrtomb@plt+0x1f48c>
  424184:	ldr	x0, [sp, #32]
  424188:	add	x0, x0, #0x1
  42418c:	str	x0, [sp, #32]
  424190:	ldr	x0, [sp, #24]
  424194:	add	x0, x0, #0x1
  424198:	str	x0, [sp, #24]
  42419c:	ldr	x0, [sp, #32]
  4241a0:	ldrb	w0, [x0]
  4241a4:	cmp	w0, #0x0
  4241a8:	b.ne	423e04 <wcrtomb@plt+0x1f0f4>  // b.any
  4241ac:	ldr	x1, [sp, #32]
  4241b0:	ldr	x0, [sp, #24]
  4241b4:	cmp	x1, x0
  4241b8:	b.eq	4241c4 <wcrtomb@plt+0x1f4b4>  // b.none
  4241bc:	ldr	x0, [sp, #24]
  4241c0:	strb	wzr, [x0]
  4241c4:	ldr	w0, [sp, #44]
  4241c8:	add	sp, sp, #0x30
  4241cc:	ret
  4241d0:	stp	x29, x30, [sp, #-48]!
  4241d4:	mov	x29, sp
  4241d8:	str	x0, [sp, #24]
  4241dc:	ldr	x0, [sp, #24]
  4241e0:	cmp	x0, #0x0
  4241e4:	b.eq	4241f8 <wcrtomb@plt+0x1f4e8>  // b.none
  4241e8:	ldr	x0, [sp, #24]
  4241ec:	ldrb	w0, [x0]
  4241f0:	cmp	w0, #0x0
  4241f4:	b.ne	424200 <wcrtomb@plt+0x1f4f0>  // b.any
  4241f8:	ldr	x0, [sp, #24]
  4241fc:	b	424250 <wcrtomb@plt+0x1f540>
  424200:	ldr	x0, [sp, #24]
  424204:	bl	4040b0 <strlen@plt>
  424208:	sub	x0, x0, #0x1
  42420c:	ldr	x1, [sp, #24]
  424210:	add	x0, x1, x0
  424214:	str	x0, [sp, #40]
  424218:	b	42422c <wcrtomb@plt+0x1f51c>
  42421c:	ldr	x0, [sp, #40]
  424220:	sub	x1, x0, #0x1
  424224:	str	x1, [sp, #40]
  424228:	strb	wzr, [x0]
  42422c:	ldr	x1, [sp, #40]
  424230:	ldr	x0, [sp, #24]
  424234:	cmp	x1, x0
  424238:	b.ls	42424c <wcrtomb@plt+0x1f53c>  // b.plast
  42423c:	ldr	x0, [sp, #40]
  424240:	ldrb	w0, [x0]
  424244:	cmp	w0, #0x2f
  424248:	b.eq	42421c <wcrtomb@plt+0x1f50c>  // b.none
  42424c:	ldr	x0, [sp, #24]
  424250:	ldp	x29, x30, [sp], #48
  424254:	ret
  424258:	sub	sp, sp, #0x30
  42425c:	str	x0, [sp, #8]
  424260:	ldr	x0, [sp, #8]
  424264:	str	x0, [sp, #24]
  424268:	ldr	x0, [sp, #24]
  42426c:	str	x0, [sp, #40]
  424270:	ldr	x0, [sp, #40]
  424274:	str	x0, [sp, #32]
  424278:	b	4242cc <wcrtomb@plt+0x1f5bc>
  42427c:	ldr	x0, [sp, #32]
  424280:	add	x0, x0, #0x2
  424284:	str	x0, [sp, #32]
  424288:	b	424298 <wcrtomb@plt+0x1f588>
  42428c:	ldr	x0, [sp, #32]
  424290:	add	x0, x0, #0x1
  424294:	str	x0, [sp, #32]
  424298:	ldr	x0, [sp, #32]
  42429c:	ldrb	w0, [x0]
  4242a0:	cmp	w0, #0x2f
  4242a4:	b.eq	42428c <wcrtomb@plt+0x1f57c>  // b.none
  4242a8:	ldr	x0, [sp, #32]
  4242ac:	ldrb	w0, [x0]
  4242b0:	cmp	w0, #0x0
  4242b4:	cset	w0, eq  // eq = none
  4242b8:	and	w0, w0, #0xff
  4242bc:	and	x0, x0, #0xff
  4242c0:	ldr	x1, [sp, #40]
  4242c4:	add	x0, x1, x0
  4242c8:	str	x0, [sp, #40]
  4242cc:	ldr	x0, [sp, #32]
  4242d0:	ldrb	w1, [x0]
  4242d4:	ldr	x0, [sp, #40]
  4242d8:	strb	w1, [x0]
  4242dc:	ldr	x0, [sp, #40]
  4242e0:	ldrb	w0, [x0]
  4242e4:	cmp	w0, #0x2e
  4242e8:	b.ne	424368 <wcrtomb@plt+0x1f658>  // b.any
  4242ec:	ldr	x0, [sp, #32]
  4242f0:	add	x0, x0, #0x1
  4242f4:	ldrb	w0, [x0]
  4242f8:	cmp	w0, #0x2f
  4242fc:	b.eq	42427c <wcrtomb@plt+0x1f56c>  // b.none
  424300:	b	424368 <wcrtomb@plt+0x1f658>
  424304:	ldrb	w0, [sp, #23]
  424308:	cmp	w0, #0x2f
  42430c:	b.ne	424368 <wcrtomb@plt+0x1f658>  // b.any
  424310:	b	42433c <wcrtomb@plt+0x1f62c>
  424314:	ldr	x0, [sp, #32]
  424318:	ldrb	w0, [x0]
  42431c:	cmp	w0, #0x2e
  424320:	b.ne	42432c <wcrtomb@plt+0x1f61c>  // b.any
  424324:	mov	x0, #0x2                   	// #2
  424328:	b	424330 <wcrtomb@plt+0x1f620>
  42432c:	mov	x0, #0x1                   	// #1
  424330:	ldr	x1, [sp, #32]
  424334:	add	x0, x1, x0
  424338:	str	x0, [sp, #32]
  42433c:	ldr	x0, [sp, #32]
  424340:	ldrb	w0, [x0]
  424344:	cmp	w0, #0x2e
  424348:	cset	w0, eq  // eq = none
  42434c:	and	w0, w0, #0xff
  424350:	and	x0, x0, #0xff
  424354:	ldr	x1, [sp, #32]
  424358:	add	x0, x1, x0
  42435c:	ldrb	w0, [x0]
  424360:	cmp	w0, #0x2f
  424364:	b.eq	424314 <wcrtomb@plt+0x1f604>  // b.none
  424368:	ldr	x0, [sp, #32]
  42436c:	add	x1, x0, #0x1
  424370:	str	x1, [sp, #32]
  424374:	ldrb	w0, [x0]
  424378:	strb	w0, [sp, #23]
  42437c:	ldr	x0, [sp, #40]
  424380:	add	x1, x0, #0x1
  424384:	str	x1, [sp, #40]
  424388:	ldrb	w1, [sp, #23]
  42438c:	strb	w1, [x0]
  424390:	ldrb	w0, [x0]
  424394:	cmp	w0, #0x0
  424398:	b.ne	424304 <wcrtomb@plt+0x1f5f4>  // b.any
  42439c:	ldr	x1, [sp, #40]
  4243a0:	ldr	x0, [sp, #24]
  4243a4:	sub	x0, x1, x0
  4243a8:	cmp	x0, #0x2
  4243ac:	b.le	42444c <wcrtomb@plt+0x1f73c>
  4243b0:	ldr	x0, [sp, #40]
  4243b4:	sub	x0, x0, #0x2
  4243b8:	ldrb	w0, [x0]
  4243bc:	cmp	w0, #0x2e
  4243c0:	b.ne	4243e0 <wcrtomb@plt+0x1f6d0>  // b.any
  4243c4:	ldr	x0, [sp, #40]
  4243c8:	sub	x0, x0, #0x3
  4243cc:	ldrb	w0, [x0]
  4243d0:	cmp	w0, #0x2f
  4243d4:	b.ne	4243e0 <wcrtomb@plt+0x1f6d0>  // b.any
  4243d8:	mov	w0, #0x1                   	// #1
  4243dc:	b	4243e4 <wcrtomb@plt+0x1f6d4>
  4243e0:	mov	w0, #0x0                   	// #0
  4243e4:	sxtw	x0, w0
  4243e8:	neg	x0, x0
  4243ec:	ldr	x1, [sp, #40]
  4243f0:	add	x0, x1, x0
  4243f4:	str	x0, [sp, #40]
  4243f8:	ldr	x1, [sp, #40]
  4243fc:	ldr	x0, [sp, #24]
  424400:	sub	x0, x1, x0
  424404:	cmp	x0, #0x2
  424408:	b.le	424428 <wcrtomb@plt+0x1f718>
  42440c:	ldr	x0, [sp, #40]
  424410:	sub	x0, x0, #0x2
  424414:	ldrb	w0, [x0]
  424418:	cmp	w0, #0x2f
  42441c:	b.ne	424428 <wcrtomb@plt+0x1f718>  // b.any
  424420:	mov	w0, #0x1                   	// #1
  424424:	b	42442c <wcrtomb@plt+0x1f71c>
  424428:	mov	w0, #0x0                   	// #0
  42442c:	sxtw	x0, w0
  424430:	neg	x0, x0
  424434:	ldr	x1, [sp, #40]
  424438:	add	x0, x1, x0
  42443c:	str	x0, [sp, #40]
  424440:	ldr	x0, [sp, #40]
  424444:	sub	x0, x0, #0x1
  424448:	strb	wzr, [x0]
  42444c:	nop
  424450:	add	sp, sp, #0x30
  424454:	ret
  424458:	stp	x29, x30, [sp, #-80]!
  42445c:	mov	x29, sp
  424460:	str	x19, [sp, #16]
  424464:	str	w0, [sp, #44]
  424468:	str	x1, [sp, #32]
  42446c:	str	xzr, [sp, #72]
  424470:	ldr	x0, [sp, #32]
  424474:	ldrb	w0, [x0]
  424478:	cmp	w0, #0x2f
  42447c:	b.eq	424520 <wcrtomb@plt+0x1f810>  // b.none
  424480:	ldr	w0, [sp, #44]
  424484:	bl	425e24 <wcrtomb@plt+0x21114>
  424488:	str	x0, [sp, #64]
  42448c:	ldr	x0, [sp, #64]
  424490:	cmp	x0, #0x0
  424494:	b.ne	4244ac <wcrtomb@plt+0x1f79c>  // b.any
  424498:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42449c:	add	x1, x0, #0x840
  4244a0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4244a4:	add	x0, x0, #0x848
  4244a8:	bl	43a240 <wcrtomb@plt+0x35530>
  4244ac:	ldr	x0, [sp, #64]
  4244b0:	bl	4040b0 <strlen@plt>
  4244b4:	str	x0, [sp, #56]
  4244b8:	mov	w0, #0x1                   	// #1
  4244bc:	strb	w0, [sp, #55]
  4244c0:	ldrb	w1, [sp, #55]
  4244c4:	ldr	x0, [sp, #56]
  4244c8:	add	x19, x1, x0
  4244cc:	ldr	x0, [sp, #32]
  4244d0:	bl	4040b0 <strlen@plt>
  4244d4:	add	x0, x19, x0
  4244d8:	add	x0, x0, #0x1
  4244dc:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4244e0:	str	x0, [sp, #72]
  4244e4:	ldr	x1, [sp, #64]
  4244e8:	ldr	x0, [sp, #72]
  4244ec:	bl	4049d0 <strcpy@plt>
  4244f0:	ldr	x1, [sp, #72]
  4244f4:	ldr	x0, [sp, #56]
  4244f8:	add	x0, x1, x0
  4244fc:	mov	w1, #0x2f                  	// #47
  424500:	strb	w1, [x0]
  424504:	ldrb	w1, [sp, #55]
  424508:	ldr	x0, [sp, #56]
  42450c:	add	x0, x1, x0
  424510:	ldr	x1, [sp, #72]
  424514:	add	x0, x1, x0
  424518:	ldr	x1, [sp, #32]
  42451c:	bl	4049d0 <strcpy@plt>
  424520:	ldr	x0, [sp, #72]
  424524:	cmp	x0, #0x0
  424528:	b.ne	424538 <wcrtomb@plt+0x1f828>  // b.any
  42452c:	ldr	x0, [sp, #32]
  424530:	bl	45b858 <argp_usage@@Base+0x1276c>
  424534:	str	x0, [sp, #72]
  424538:	ldr	x0, [sp, #72]
  42453c:	bl	424258 <wcrtomb@plt+0x1f548>
  424540:	ldr	x0, [sp, #72]
  424544:	ldr	x19, [sp, #16]
  424548:	ldp	x29, x30, [sp], #80
  42454c:	ret
  424550:	stp	x29, x30, [sp, #-80]!
  424554:	mov	x29, sp
  424558:	str	x0, [sp, #56]
  42455c:	str	x1, [sp, #48]
  424560:	str	x2, [sp, #40]
  424564:	str	x3, [sp, #32]
  424568:	str	x4, [sp, #24]
  42456c:	ldr	x0, [sp, #56]
  424570:	ldr	x0, [x0]
  424574:	str	x0, [sp, #72]
  424578:	ldr	x0, [sp, #72]
  42457c:	bl	4040b0 <strlen@plt>
  424580:	str	x0, [sp, #64]
  424584:	ldr	x1, [sp, #64]
  424588:	ldr	x0, [sp, #40]
  42458c:	cmp	x1, x0
  424590:	b.ls	424650 <wcrtomb@plt+0x1f940>  // b.plast
  424594:	ldr	x2, [sp, #40]
  424598:	ldr	x1, [sp, #48]
  42459c:	ldr	x0, [sp, #72]
  4245a0:	bl	404790 <memcmp@plt>
  4245a4:	cmp	w0, #0x0
  4245a8:	b.ne	424650 <wcrtomb@plt+0x1f940>  // b.any
  4245ac:	ldr	x1, [sp, #72]
  4245b0:	ldr	x0, [sp, #40]
  4245b4:	add	x0, x1, x0
  4245b8:	ldrb	w0, [x0]
  4245bc:	cmp	w0, #0x2f
  4245c0:	b.ne	424650 <wcrtomb@plt+0x1f940>  // b.any
  4245c4:	ldr	x1, [sp, #24]
  4245c8:	ldr	x0, [sp, #40]
  4245cc:	cmp	x1, x0
  4245d0:	b.ls	424608 <wcrtomb@plt+0x1f8f8>  // b.plast
  4245d4:	ldr	x1, [sp, #64]
  4245d8:	ldr	x0, [sp, #40]
  4245dc:	sub	x1, x1, x0
  4245e0:	ldr	x0, [sp, #24]
  4245e4:	add	x0, x1, x0
  4245e8:	add	x0, x0, #0x1
  4245ec:	mov	x1, x0
  4245f0:	ldr	x0, [sp, #72]
  4245f4:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  4245f8:	str	x0, [sp, #72]
  4245fc:	ldr	x0, [sp, #56]
  424600:	ldr	x1, [sp, #72]
  424604:	str	x1, [x0]
  424608:	ldr	x1, [sp, #72]
  42460c:	ldr	x0, [sp, #24]
  424610:	add	x3, x1, x0
  424614:	ldr	x1, [sp, #72]
  424618:	ldr	x0, [sp, #40]
  42461c:	add	x4, x1, x0
  424620:	ldr	x1, [sp, #64]
  424624:	ldr	x0, [sp, #40]
  424628:	sub	x0, x1, x0
  42462c:	add	x0, x0, #0x1
  424630:	mov	x2, x0
  424634:	mov	x1, x4
  424638:	mov	x0, x3
  42463c:	bl	404030 <memmove@plt>
  424640:	ldr	x2, [sp, #24]
  424644:	ldr	x1, [sp, #32]
  424648:	ldr	x0, [sp, #72]
  42464c:	bl	404020 <memcpy@plt>
  424650:	nop
  424654:	ldp	x29, x30, [sp], #80
  424658:	ret
  42465c:	stp	x29, x30, [sp, #-64]!
  424660:	mov	x29, sp
  424664:	str	x0, [sp, #40]
  424668:	str	x1, [sp, #32]
  42466c:	str	x2, [sp, #24]
  424670:	str	x3, [sp, #16]
  424674:	ldr	x1, [sp, #40]
  424678:	ldr	x0, [sp, #24]
  42467c:	cmp	x1, x0
  424680:	b.hi	424694 <wcrtomb@plt+0x1f984>  // b.pmore
  424684:	ldr	x1, [sp, #16]
  424688:	ldr	x0, [sp, #40]
  42468c:	bl	450988 <argp_usage@@Base+0x789c>
  424690:	b	4246b8 <wcrtomb@plt+0x1f9a8>
  424694:	ldr	x0, [sp, #32]
  424698:	ldr	x1, [sp, #40]
  42469c:	sub	x0, x1, x0
  4246a0:	str	x0, [sp, #56]
  4246a4:	ldr	x1, [sp, #56]
  4246a8:	ldr	x0, [sp, #32]
  4246ac:	add	x0, x1, x0
  4246b0:	ldr	x1, [sp, #16]
  4246b4:	bl	4506e8 <argp_usage@@Base+0x75fc>
  4246b8:	ldp	x29, x30, [sp], #64
  4246bc:	ret
  4246c0:	stp	x29, x30, [sp, #-80]!
  4246c4:	mov	x29, sp
  4246c8:	str	x0, [sp, #40]
  4246cc:	str	x1, [sp, #32]
  4246d0:	str	x2, [sp, #24]
  4246d4:	str	x3, [sp, #16]
  4246d8:	bl	404bc0 <__errno_location@plt>
  4246dc:	str	wzr, [x0]
  4246e0:	ldr	x0, [sp, #16]
  4246e4:	cmp	x0, #0x0
  4246e8:	b.lt	424790 <wcrtomb@plt+0x1fa80>  // b.tstop
  4246ec:	ldr	x0, [sp, #40]
  4246f0:	ldrb	w0, [x0]
  4246f4:	cmp	w0, #0x2d
  4246f8:	cset	w0, eq  // eq = none
  4246fc:	and	w0, w0, #0xff
  424700:	and	x0, x0, #0xff
  424704:	ldr	x1, [sp, #40]
  424708:	add	x0, x1, x0
  42470c:	ldrb	w0, [x0]
  424710:	sub	w0, w0, #0x30
  424714:	cmp	w0, #0x9
  424718:	b.hi	4247ec <wcrtomb@plt+0x1fadc>  // b.pmore
  42471c:	mov	w2, #0xa                   	// #10
  424720:	ldr	x1, [sp, #32]
  424724:	ldr	x0, [sp, #40]
  424728:	bl	404150 <strtoimax@plt>
  42472c:	str	x0, [sp, #64]
  424730:	ldr	x0, [sp, #16]
  424734:	str	x0, [sp, #56]
  424738:	ldr	x1, [sp, #24]
  42473c:	ldr	x0, [sp, #64]
  424740:	cmp	x1, x0
  424744:	b.gt	424760 <wcrtomb@plt+0x1fa50>
  424748:	ldr	x1, [sp, #64]
  42474c:	ldr	x0, [sp, #56]
  424750:	cmp	x1, x0
  424754:	b.gt	424760 <wcrtomb@plt+0x1fa50>
  424758:	ldr	x0, [sp, #64]
  42475c:	b	424800 <wcrtomb@plt+0x1faf0>
  424760:	bl	404bc0 <__errno_location@plt>
  424764:	mov	x1, x0
  424768:	mov	w0, #0x22                  	// #34
  42476c:	str	w0, [x1]
  424770:	ldr	x1, [sp, #64]
  424774:	ldr	x0, [sp, #24]
  424778:	cmp	x1, x0
  42477c:	b.ge	424788 <wcrtomb@plt+0x1fa78>  // b.tcont
  424780:	ldr	x0, [sp, #24]
  424784:	b	424800 <wcrtomb@plt+0x1faf0>
  424788:	ldr	x0, [sp, #16]
  42478c:	b	424800 <wcrtomb@plt+0x1faf0>
  424790:	ldr	x0, [sp, #40]
  424794:	ldrb	w0, [x0]
  424798:	sub	w0, w0, #0x30
  42479c:	cmp	w0, #0x9
  4247a0:	b.hi	4247ec <wcrtomb@plt+0x1fadc>  // b.pmore
  4247a4:	mov	w2, #0xa                   	// #10
  4247a8:	ldr	x1, [sp, #32]
  4247ac:	ldr	x0, [sp, #40]
  4247b0:	bl	4046e0 <strtoumax@plt>
  4247b4:	str	x0, [sp, #72]
  4247b8:	ldr	x1, [sp, #72]
  4247bc:	ldr	x0, [sp, #16]
  4247c0:	cmp	x1, x0
  4247c4:	b.hi	4247d4 <wcrtomb@plt+0x1fac4>  // b.pmore
  4247c8:	ldr	x0, [sp, #72]
  4247cc:	bl	423c7c <wcrtomb@plt+0x1ef6c>
  4247d0:	b	424800 <wcrtomb@plt+0x1faf0>
  4247d4:	bl	404bc0 <__errno_location@plt>
  4247d8:	mov	x1, x0
  4247dc:	mov	w0, #0x22                  	// #34
  4247e0:	str	w0, [x1]
  4247e4:	ldr	x0, [sp, #16]
  4247e8:	b	424800 <wcrtomb@plt+0x1faf0>
  4247ec:	bl	404bc0 <__errno_location@plt>
  4247f0:	mov	x1, x0
  4247f4:	mov	w0, #0x16                  	// #22
  4247f8:	str	w0, [x1]
  4247fc:	mov	x0, #0x0                   	// #0
  424800:	ldp	x29, x30, [sp], #80
  424804:	ret
  424808:	sub	sp, sp, #0x20
  42480c:	str	w0, [sp, #12]
  424810:	str	x1, [sp]
  424814:	ldr	w0, [sp, #12]
  424818:	cmp	w0, #0x0
  42481c:	b.ne	42482c <wcrtomb@plt+0x1fb1c>  // b.any
  424820:	ldr	x0, [sp]
  424824:	strb	wzr, [x0]
  424828:	b	42495c <wcrtomb@plt+0x1fc4c>
  42482c:	mov	w0, #0x9                   	// #9
  424830:	str	w0, [sp, #28]
  424834:	ldr	x0, [sp]
  424838:	add	x1, x0, #0x1
  42483c:	str	x1, [sp]
  424840:	mov	w1, #0x2e                  	// #46
  424844:	strb	w1, [x0]
  424848:	b	42487c <wcrtomb@plt+0x1fb6c>
  42484c:	ldr	w0, [sp, #12]
  424850:	mov	w1, #0x6667                	// #26215
  424854:	movk	w1, #0x6666, lsl #16
  424858:	smull	x1, w0, w1
  42485c:	lsr	x1, x1, #32
  424860:	asr	w1, w1, #2
  424864:	asr	w0, w0, #31
  424868:	sub	w0, w1, w0
  42486c:	str	w0, [sp, #12]
  424870:	ldr	w0, [sp, #28]
  424874:	sub	w0, w0, #0x1
  424878:	str	w0, [sp, #28]
  42487c:	ldr	w2, [sp, #12]
  424880:	mov	w0, #0x6667                	// #26215
  424884:	movk	w0, #0x6666, lsl #16
  424888:	smull	x0, w2, w0
  42488c:	lsr	x0, x0, #32
  424890:	asr	w1, w0, #2
  424894:	asr	w0, w2, #31
  424898:	sub	w1, w1, w0
  42489c:	mov	w0, w1
  4248a0:	lsl	w0, w0, #2
  4248a4:	add	w0, w0, w1
  4248a8:	lsl	w0, w0, #1
  4248ac:	sub	w1, w2, w0
  4248b0:	cmp	w1, #0x0
  4248b4:	b.eq	42484c <wcrtomb@plt+0x1fb3c>  // b.none
  4248b8:	ldrsw	x0, [sp, #28]
  4248bc:	ldr	x1, [sp]
  4248c0:	add	x0, x1, x0
  4248c4:	strb	wzr, [x0]
  4248c8:	ldr	w1, [sp, #12]
  4248cc:	mov	w0, #0x6667                	// #26215
  4248d0:	movk	w0, #0x6666, lsl #16
  4248d4:	smull	x0, w1, w0
  4248d8:	lsr	x0, x0, #32
  4248dc:	asr	w2, w0, #2
  4248e0:	asr	w0, w1, #31
  4248e4:	sub	w2, w2, w0
  4248e8:	mov	w0, w2
  4248ec:	lsl	w0, w0, #2
  4248f0:	add	w0, w0, w2
  4248f4:	lsl	w0, w0, #1
  4248f8:	sub	w2, w1, w0
  4248fc:	and	w1, w2, #0xff
  424900:	ldr	w0, [sp, #28]
  424904:	sub	w0, w0, #0x1
  424908:	str	w0, [sp, #28]
  42490c:	ldrsw	x0, [sp, #28]
  424910:	ldr	x2, [sp]
  424914:	add	x0, x2, x0
  424918:	add	w1, w1, #0x30
  42491c:	and	w1, w1, #0xff
  424920:	strb	w1, [x0]
  424924:	ldr	w0, [sp, #28]
  424928:	cmp	w0, #0x0
  42492c:	b.eq	424958 <wcrtomb@plt+0x1fc48>  // b.none
  424930:	ldr	w0, [sp, #12]
  424934:	mov	w1, #0x6667                	// #26215
  424938:	movk	w1, #0x6666, lsl #16
  42493c:	smull	x1, w0, w1
  424940:	lsr	x1, x1, #32
  424944:	asr	w1, w1, #2
  424948:	asr	w0, w0, #31
  42494c:	sub	w0, w1, w0
  424950:	str	w0, [sp, #12]
  424954:	b	4248c8 <wcrtomb@plt+0x1fbb8>
  424958:	nop
  42495c:	nop
  424960:	add	sp, sp, #0x20
  424964:	ret
  424968:	stp	x29, x30, [sp, #-80]!
  42496c:	mov	x29, sp
  424970:	stp	x0, x1, [sp, #32]
  424974:	str	x2, [sp, #24]
  424978:	ldr	x0, [sp, #32]
  42497c:	str	x0, [sp, #72]
  424980:	ldr	x0, [sp, #40]
  424984:	str	w0, [sp, #68]
  424988:	ldr	x0, [sp, #72]
  42498c:	lsr	x0, x0, #63
  424990:	strb	w0, [sp, #55]
  424994:	ldr	w1, [sp, #68]
  424998:	mov	w0, #0xc9ff                	// #51711
  42499c:	movk	w0, #0x3b9a, lsl #16
  4249a0:	cmp	w1, w0
  4249a4:	b.gt	4249b4 <wcrtomb@plt+0x1fca4>
  4249a8:	ldr	w0, [sp, #68]
  4249ac:	cmp	w0, #0x0
  4249b0:	b.ge	4249b8 <wcrtomb@plt+0x1fca8>  // b.tcont
  4249b4:	str	wzr, [sp, #68]
  4249b8:	ldrb	w0, [sp, #55]
  4249bc:	cmp	w0, #0x0
  4249c0:	b.eq	4249f0 <wcrtomb@plt+0x1fce0>  // b.none
  4249c4:	ldr	w0, [sp, #68]
  4249c8:	cmp	w0, #0x0
  4249cc:	b.eq	4249f0 <wcrtomb@plt+0x1fce0>  // b.none
  4249d0:	ldr	x0, [sp, #72]
  4249d4:	add	x0, x0, #0x1
  4249d8:	str	x0, [sp, #72]
  4249dc:	mov	w1, #0xca00                	// #51712
  4249e0:	movk	w1, #0x3b9a, lsl #16
  4249e4:	ldr	w0, [sp, #68]
  4249e8:	sub	w0, w1, w0
  4249ec:	str	w0, [sp, #68]
  4249f0:	ldrb	w0, [sp, #55]
  4249f4:	cmp	w0, #0x0
  4249f8:	b.eq	424a08 <wcrtomb@plt+0x1fcf8>  // b.none
  4249fc:	ldr	x0, [sp, #72]
  424a00:	neg	x0, x0
  424a04:	b	424a0c <wcrtomb@plt+0x1fcfc>
  424a08:	ldr	x0, [sp, #72]
  424a0c:	ldr	x1, [sp, #24]
  424a10:	add	x1, x1, #0x1
  424a14:	bl	450988 <argp_usage@@Base+0x789c>
  424a18:	str	x0, [sp, #56]
  424a1c:	ldrb	w0, [sp, #55]
  424a20:	cmp	w0, #0x0
  424a24:	b.eq	424a40 <wcrtomb@plt+0x1fd30>  // b.none
  424a28:	ldr	x0, [sp, #56]
  424a2c:	sub	x0, x0, #0x1
  424a30:	str	x0, [sp, #56]
  424a34:	ldr	x0, [sp, #56]
  424a38:	mov	w1, #0x2d                  	// #45
  424a3c:	strb	w1, [x0]
  424a40:	ldr	x0, [sp, #24]
  424a44:	add	x0, x0, #0x15
  424a48:	mov	x1, x0
  424a4c:	ldr	w0, [sp, #68]
  424a50:	bl	424808 <wcrtomb@plt+0x1faf8>
  424a54:	ldr	x0, [sp, #56]
  424a58:	ldp	x29, x30, [sp], #80
  424a5c:	ret
  424a60:	stp	x29, x30, [sp, #-112]!
  424a64:	mov	x29, sp
  424a68:	str	x0, [sp, #40]
  424a6c:	str	x1, [sp, #32]
  424a70:	strb	w2, [sp, #31]
  424a74:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  424a78:	str	x0, [sp, #104]
  424a7c:	mov	w0, #0xffffffff            	// #-1
  424a80:	str	w0, [sp, #100]
  424a84:	ldr	x0, [sp, #40]
  424a88:	str	x0, [sp, #88]
  424a8c:	ldr	x0, [sp, #40]
  424a90:	ldrb	w0, [x0]
  424a94:	cmp	w0, #0x2d
  424a98:	cset	w0, eq  // eq = none
  424a9c:	strb	w0, [sp, #82]
  424aa0:	ldrb	w0, [sp, #82]
  424aa4:	ldr	x1, [sp, #40]
  424aa8:	add	x0, x1, x0
  424aac:	ldrb	w0, [x0]
  424ab0:	sub	w0, w0, #0x30
  424ab4:	cmp	w0, #0x9
  424ab8:	b.ls	424ad0 <wcrtomb@plt+0x1fdc0>  // b.plast
  424abc:	bl	404bc0 <__errno_location@plt>
  424ac0:	mov	x1, x0
  424ac4:	mov	w0, #0x16                  	// #22
  424ac8:	str	w0, [x1]
  424acc:	b	424cb8 <wcrtomb@plt+0x1ffa8>
  424ad0:	bl	404bc0 <__errno_location@plt>
  424ad4:	str	wzr, [x0]
  424ad8:	ldrb	w0, [sp, #82]
  424adc:	cmp	w0, #0x0
  424ae0:	b.eq	424b04 <wcrtomb@plt+0x1fdf4>  // b.none
  424ae4:	mov	w2, #0xa                   	// #10
  424ae8:	ldr	x1, [sp, #32]
  424aec:	ldr	x0, [sp, #40]
  424af0:	bl	404150 <strtoimax@plt>
  424af4:	str	x0, [sp, #64]
  424af8:	ldr	x0, [sp, #64]
  424afc:	str	x0, [sp, #104]
  424b00:	b	424b40 <wcrtomb@plt+0x1fe30>
  424b04:	mov	w2, #0xa                   	// #10
  424b08:	ldr	x1, [sp, #32]
  424b0c:	ldr	x0, [sp, #40]
  424b10:	bl	4046e0 <strtoumax@plt>
  424b14:	str	x0, [sp, #72]
  424b18:	ldr	x0, [sp, #72]
  424b1c:	cmp	x0, #0x0
  424b20:	b.lt	424b30 <wcrtomb@plt+0x1fe20>  // b.tstop
  424b24:	ldr	x0, [sp, #72]
  424b28:	str	x0, [sp, #104]
  424b2c:	b	424b40 <wcrtomb@plt+0x1fe30>
  424b30:	bl	404bc0 <__errno_location@plt>
  424b34:	mov	x1, x0
  424b38:	mov	w0, #0x22                  	// #34
  424b3c:	str	w0, [x1]
  424b40:	ldr	x0, [sp, #32]
  424b44:	ldr	x0, [x0]
  424b48:	str	x0, [sp, #88]
  424b4c:	str	wzr, [sp, #100]
  424b50:	ldrb	w0, [sp, #31]
  424b54:	cmp	w0, #0x0
  424b58:	b.eq	424ca0 <wcrtomb@plt+0x1ff90>  // b.none
  424b5c:	ldr	x0, [sp, #88]
  424b60:	ldrb	w0, [x0]
  424b64:	cmp	w0, #0x2e
  424b68:	b.ne	424ca0 <wcrtomb@plt+0x1ff90>  // b.any
  424b6c:	str	wzr, [sp, #84]
  424b70:	strb	wzr, [sp, #83]
  424b74:	b	424be8 <wcrtomb@plt+0x1fed8>
  424b78:	ldr	w0, [sp, #84]
  424b7c:	cmp	w0, #0x8
  424b80:	b.gt	424bc0 <wcrtomb@plt+0x1feb0>
  424b84:	ldr	w0, [sp, #84]
  424b88:	add	w0, w0, #0x1
  424b8c:	str	w0, [sp, #84]
  424b90:	ldr	w1, [sp, #100]
  424b94:	mov	w0, w1
  424b98:	lsl	w0, w0, #2
  424b9c:	add	w0, w0, w1
  424ba0:	lsl	w0, w0, #1
  424ba4:	mov	w1, w0
  424ba8:	ldr	x0, [sp, #88]
  424bac:	ldrb	w0, [x0]
  424bb0:	sub	w0, w0, #0x30
  424bb4:	add	w0, w1, w0
  424bb8:	str	w0, [sp, #100]
  424bbc:	b	424be8 <wcrtomb@plt+0x1fed8>
  424bc0:	ldrb	w0, [sp, #83]
  424bc4:	ldr	x1, [sp, #88]
  424bc8:	ldrb	w1, [x1]
  424bcc:	cmp	w1, #0x30
  424bd0:	cset	w1, ne  // ne = any
  424bd4:	and	w1, w1, #0xff
  424bd8:	orr	w0, w0, w1
  424bdc:	cmp	w0, #0x0
  424be0:	cset	w0, ne  // ne = any
  424be4:	strb	w0, [sp, #83]
  424be8:	ldr	x0, [sp, #88]
  424bec:	add	x0, x0, #0x1
  424bf0:	str	x0, [sp, #88]
  424bf4:	ldr	x0, [sp, #88]
  424bf8:	ldrb	w0, [x0]
  424bfc:	sub	w0, w0, #0x30
  424c00:	cmp	w0, #0x9
  424c04:	b.ls	424b78 <wcrtomb@plt+0x1fe68>  // b.plast
  424c08:	b	424c30 <wcrtomb@plt+0x1ff20>
  424c0c:	ldr	w0, [sp, #84]
  424c10:	add	w0, w0, #0x1
  424c14:	str	w0, [sp, #84]
  424c18:	ldr	w1, [sp, #100]
  424c1c:	mov	w0, w1
  424c20:	lsl	w0, w0, #2
  424c24:	add	w0, w0, w1
  424c28:	lsl	w0, w0, #1
  424c2c:	str	w0, [sp, #100]
  424c30:	ldr	w0, [sp, #84]
  424c34:	cmp	w0, #0x8
  424c38:	b.le	424c0c <wcrtomb@plt+0x1fefc>
  424c3c:	ldrb	w0, [sp, #82]
  424c40:	cmp	w0, #0x0
  424c44:	b.eq	424ca0 <wcrtomb@plt+0x1ff90>  // b.none
  424c48:	ldrb	w0, [sp, #83]
  424c4c:	ldr	w1, [sp, #100]
  424c50:	add	w0, w1, w0
  424c54:	str	w0, [sp, #100]
  424c58:	ldr	w0, [sp, #100]
  424c5c:	cmp	w0, #0x0
  424c60:	b.eq	424ca0 <wcrtomb@plt+0x1ff90>  // b.none
  424c64:	ldr	x1, [sp, #104]
  424c68:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  424c6c:	cmp	x1, x0
  424c70:	b.ne	424c80 <wcrtomb@plt+0x1ff70>  // b.any
  424c74:	mov	w0, #0xffffffff            	// #-1
  424c78:	str	w0, [sp, #100]
  424c7c:	b	424ca0 <wcrtomb@plt+0x1ff90>
  424c80:	ldr	x0, [sp, #104]
  424c84:	sub	x0, x0, #0x1
  424c88:	str	x0, [sp, #104]
  424c8c:	mov	w1, #0xca00                	// #51712
  424c90:	movk	w1, #0x3b9a, lsl #16
  424c94:	ldr	w0, [sp, #100]
  424c98:	sub	w0, w1, w0
  424c9c:	str	w0, [sp, #100]
  424ca0:	bl	404bc0 <__errno_location@plt>
  424ca4:	ldr	w0, [x0]
  424ca8:	cmp	w0, #0x22
  424cac:	b.ne	424cb8 <wcrtomb@plt+0x1ffa8>  // b.any
  424cb0:	mov	w0, #0xffffffff            	// #-1
  424cb4:	str	w0, [sp, #100]
  424cb8:	ldr	x0, [sp, #32]
  424cbc:	ldr	x1, [sp, #88]
  424cc0:	str	x1, [x0]
  424cc4:	ldr	x0, [sp, #104]
  424cc8:	str	x0, [sp, #48]
  424ccc:	ldrsw	x0, [sp, #100]
  424cd0:	str	x0, [sp, #56]
  424cd4:	ldp	x0, x1, [sp, #48]
  424cd8:	ldp	x29, x30, [sp], #112
  424cdc:	ret
  424ce0:	sub	sp, sp, #0x10
  424ce4:	str	x0, [sp, #8]
  424ce8:	ldr	x0, [sp, #8]
  424cec:	ldrb	w0, [x0]
  424cf0:	cmp	w0, #0x2f
  424cf4:	b.ne	424de0 <wcrtomb@plt+0x200d0>  // b.any
  424cf8:	ldr	x0, [sp, #8]
  424cfc:	add	x0, x0, #0x1
  424d00:	ldrb	w0, [x0]
  424d04:	cmp	w0, #0x2f
  424d08:	b.ne	424d1c <wcrtomb@plt+0x2000c>  // b.any
  424d0c:	ldr	x0, [sp, #8]
  424d10:	add	x0, x0, #0x1
  424d14:	str	x0, [sp, #8]
  424d18:	b	424cf8 <wcrtomb@plt+0x1ffe8>
  424d1c:	ldr	x0, [sp, #8]
  424d20:	add	x0, x0, #0x1
  424d24:	ldrb	w0, [x0]
  424d28:	cmp	w0, #0x2e
  424d2c:	b.ne	424d94 <wcrtomb@plt+0x20084>  // b.any
  424d30:	ldr	x0, [sp, #8]
  424d34:	add	x0, x0, #0x2
  424d38:	ldrb	w0, [x0]
  424d3c:	cmp	w0, #0x2e
  424d40:	b.ne	424d4c <wcrtomb@plt+0x2003c>  // b.any
  424d44:	mov	x0, #0x3                   	// #3
  424d48:	b	424d50 <wcrtomb@plt+0x20040>
  424d4c:	mov	x0, #0x2                   	// #2
  424d50:	ldr	x1, [sp, #8]
  424d54:	add	x0, x1, x0
  424d58:	ldrb	w0, [x0]
  424d5c:	cmp	w0, #0x2f
  424d60:	b.ne	424d94 <wcrtomb@plt+0x20084>  // b.any
  424d64:	ldr	x0, [sp, #8]
  424d68:	add	x0, x0, #0x2
  424d6c:	ldrb	w0, [x0]
  424d70:	cmp	w0, #0x2e
  424d74:	b.ne	424d80 <wcrtomb@plt+0x20070>  // b.any
  424d78:	mov	x0, #0x3                   	// #3
  424d7c:	b	424d84 <wcrtomb@plt+0x20074>
  424d80:	mov	x0, #0x2                   	// #2
  424d84:	ldr	x1, [sp, #8]
  424d88:	add	x0, x1, x0
  424d8c:	str	x0, [sp, #8]
  424d90:	b	424db0 <wcrtomb@plt+0x200a0>
  424d94:	ldr	x0, [sp, #8]
  424d98:	add	x0, x0, #0x1
  424d9c:	ldrb	w0, [x0]
  424da0:	cmp	w0, #0x0
  424da4:	cset	w0, eq  // eq = none
  424da8:	and	w0, w0, #0xff
  424dac:	b	424e4c <wcrtomb@plt+0x2013c>
  424db0:	b	424cf8 <wcrtomb@plt+0x1ffe8>
  424db4:	ldr	x0, [sp, #8]
  424db8:	add	x0, x0, #0x2
  424dbc:	str	x0, [sp, #8]
  424dc0:	b	424dd0 <wcrtomb@plt+0x200c0>
  424dc4:	ldr	x0, [sp, #8]
  424dc8:	add	x0, x0, #0x1
  424dcc:	str	x0, [sp, #8]
  424dd0:	ldr	x0, [sp, #8]
  424dd4:	ldrb	w0, [x0]
  424dd8:	cmp	w0, #0x2f
  424ddc:	b.eq	424dc4 <wcrtomb@plt+0x200b4>  // b.none
  424de0:	ldr	x0, [sp, #8]
  424de4:	ldrb	w0, [x0]
  424de8:	cmp	w0, #0x2e
  424dec:	b.ne	424e04 <wcrtomb@plt+0x200f4>  // b.any
  424df0:	ldr	x0, [sp, #8]
  424df4:	add	x0, x0, #0x1
  424df8:	ldrb	w0, [x0]
  424dfc:	cmp	w0, #0x2f
  424e00:	b.eq	424db4 <wcrtomb@plt+0x200a4>  // b.none
  424e04:	ldr	x0, [sp, #8]
  424e08:	ldrb	w0, [x0]
  424e0c:	cmp	w0, #0x0
  424e10:	b.eq	424e38 <wcrtomb@plt+0x20128>  // b.none
  424e14:	ldr	x0, [sp, #8]
  424e18:	ldrb	w0, [x0]
  424e1c:	cmp	w0, #0x2e
  424e20:	b.ne	424e40 <wcrtomb@plt+0x20130>  // b.any
  424e24:	ldr	x0, [sp, #8]
  424e28:	add	x0, x0, #0x1
  424e2c:	ldrb	w0, [x0]
  424e30:	cmp	w0, #0x0
  424e34:	b.ne	424e40 <wcrtomb@plt+0x20130>  // b.any
  424e38:	mov	w0, #0x1                   	// #1
  424e3c:	b	424e44 <wcrtomb@plt+0x20134>
  424e40:	mov	w0, #0x0                   	// #0
  424e44:	and	w0, w0, #0x1
  424e48:	and	w0, w0, #0xff
  424e4c:	add	sp, sp, #0x10
  424e50:	ret
  424e54:	stp	x29, x30, [sp, #-32]!
  424e58:	mov	x29, sp
  424e5c:	str	x0, [sp, #24]
  424e60:	ldr	x0, [sp, #24]
  424e64:	bl	424ce0 <wcrtomb@plt+0x1ffd0>
  424e68:	and	w0, w0, #0xff
  424e6c:	cmp	w0, #0x0
  424e70:	b.eq	424e84 <wcrtomb@plt+0x20174>  // b.none
  424e74:	bl	404bc0 <__errno_location@plt>
  424e78:	str	wzr, [x0]
  424e7c:	mov	w0, #0xffffffff            	// #-1
  424e80:	b	424eb8 <wcrtomb@plt+0x201a8>
  424e84:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  424e88:	add	x0, x0, #0x8b0
  424e8c:	ldr	w0, [x0]
  424e90:	mov	w2, #0x200                 	// #512
  424e94:	ldr	x1, [sp, #24]
  424e98:	bl	404240 <unlinkat@plt>
  424e9c:	cmp	w0, #0x0
  424ea0:	b.ne	424eb4 <wcrtomb@plt+0x201a4>  // b.any
  424ea4:	ldr	x0, [sp, #24]
  424ea8:	bl	414610 <wcrtomb@plt+0xf900>
  424eac:	mov	w0, #0x0                   	// #0
  424eb0:	b	424eb8 <wcrtomb@plt+0x201a8>
  424eb4:	mov	w0, #0xffffffff            	// #-1
  424eb8:	ldp	x29, x30, [sp], #32
  424ebc:	ret
  424ec0:	stp	x29, x30, [sp, #-80]!
  424ec4:	mov	x29, sp
  424ec8:	str	x0, [sp, #24]
  424ecc:	str	w1, [sp, #20]
  424ed0:	mov	w0, #0x1                   	// #1
  424ed4:	strb	w0, [sp, #71]
  424ed8:	ldrb	w0, [sp, #71]
  424edc:	cmp	w0, #0x0
  424ee0:	b.eq	424f34 <wcrtomb@plt+0x20224>  // b.none
  424ee4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  424ee8:	add	x0, x0, #0x8b0
  424eec:	ldr	w0, [x0]
  424ef0:	mov	w2, #0x0                   	// #0
  424ef4:	ldr	x1, [sp, #24]
  424ef8:	bl	404240 <unlinkat@plt>
  424efc:	cmp	w0, #0x0
  424f00:	b.ne	424f0c <wcrtomb@plt+0x201fc>  // b.any
  424f04:	mov	w0, #0x1                   	// #1
  424f08:	b	4250f0 <wcrtomb@plt+0x203e0>
  424f0c:	bl	404bc0 <__errno_location@plt>
  424f10:	ldr	w0, [x0]
  424f14:	cmp	w0, #0x1
  424f18:	b.eq	424f34 <wcrtomb@plt+0x20224>  // b.none
  424f1c:	bl	404bc0 <__errno_location@plt>
  424f20:	ldr	w0, [x0]
  424f24:	cmp	w0, #0x15
  424f28:	b.eq	424f34 <wcrtomb@plt+0x20224>  // b.none
  424f2c:	mov	w0, #0x0                   	// #0
  424f30:	b	4250f0 <wcrtomb@plt+0x203e0>
  424f34:	ldr	x0, [sp, #24]
  424f38:	bl	424e54 <wcrtomb@plt+0x20144>
  424f3c:	cmp	w0, #0x0
  424f40:	b.ne	424f4c <wcrtomb@plt+0x2023c>  // b.any
  424f44:	mov	w0, #0x1                   	// #1
  424f48:	b	4250f0 <wcrtomb@plt+0x203e0>
  424f4c:	bl	404bc0 <__errno_location@plt>
  424f50:	ldr	w0, [x0]
  424f54:	cmp	w0, #0x27
  424f58:	b.eq	424fcc <wcrtomb@plt+0x202bc>  // b.none
  424f5c:	cmp	w0, #0x27
  424f60:	b.gt	4250ec <wcrtomb@plt+0x203dc>
  424f64:	cmp	w0, #0x14
  424f68:	b.eq	424f88 <wcrtomb@plt+0x20278>  // b.none
  424f6c:	cmp	w0, #0x14
  424f70:	b.gt	4250ec <wcrtomb@plt+0x203dc>
  424f74:	cmp	w0, #0x0
  424f78:	b.eq	424fcc <wcrtomb@plt+0x202bc>  // b.none
  424f7c:	cmp	w0, #0x11
  424f80:	b.eq	424fcc <wcrtomb@plt+0x202bc>  // b.none
  424f84:	b	4250ec <wcrtomb@plt+0x203dc>
  424f88:	ldrb	w0, [sp, #71]
  424f8c:	eor	w0, w0, #0x1
  424f90:	and	w0, w0, #0xff
  424f94:	cmp	w0, #0x0
  424f98:	b.eq	424fc4 <wcrtomb@plt+0x202b4>  // b.none
  424f9c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  424fa0:	add	x0, x0, #0x8b0
  424fa4:	ldr	w0, [x0]
  424fa8:	mov	w2, #0x0                   	// #0
  424fac:	ldr	x1, [sp, #24]
  424fb0:	bl	404240 <unlinkat@plt>
  424fb4:	cmp	w0, #0x0
  424fb8:	b.ne	424fc4 <wcrtomb@plt+0x202b4>  // b.any
  424fbc:	mov	w0, #0x1                   	// #1
  424fc0:	b	4250f0 <wcrtomb@plt+0x203e0>
  424fc4:	mov	w0, #0x0                   	// #0
  424fc8:	b	4250f0 <wcrtomb@plt+0x203e0>
  424fcc:	ldr	w0, [sp, #20]
  424fd0:	cmp	w0, #0x2
  424fd4:	b.eq	425000 <wcrtomb@plt+0x202f0>  // b.none
  424fd8:	ldr	w0, [sp, #20]
  424fdc:	cmp	w0, #0x2
  424fe0:	b.hi	4250e8 <wcrtomb@plt+0x203d8>  // b.pmore
  424fe4:	ldr	w0, [sp, #20]
  424fe8:	cmp	w0, #0x0
  424fec:	b.eq	4250e4 <wcrtomb@plt+0x203d4>  // b.none
  424ff0:	ldr	w0, [sp, #20]
  424ff4:	cmp	w0, #0x1
  424ff8:	b.eq	425008 <wcrtomb@plt+0x202f8>  // b.none
  424ffc:	b	4250e8 <wcrtomb@plt+0x203d8>
  425000:	mov	w0, #0xffffffff            	// #-1
  425004:	b	4250f0 <wcrtomb@plt+0x203e0>
  425008:	mov	w1, #0x0                   	// #0
  42500c:	ldr	x0, [sp, #24]
  425010:	bl	4265d4 <wcrtomb@plt+0x218c4>
  425014:	str	x0, [sp, #56]
  425018:	ldr	x0, [sp, #56]
  42501c:	cmp	x0, #0x0
  425020:	b.ne	42502c <wcrtomb@plt+0x2031c>  // b.any
  425024:	mov	w0, #0x0                   	// #0
  425028:	b	4250f0 <wcrtomb@plt+0x203e0>
  42502c:	ldr	x0, [sp, #56]
  425030:	str	x0, [sp, #72]
  425034:	b	4250ac <wcrtomb@plt+0x2039c>
  425038:	ldr	x1, [sp, #72]
  42503c:	ldr	x0, [sp, #24]
  425040:	bl	42a0b4 <wcrtomb@plt+0x253a4>
  425044:	str	x0, [sp, #40]
  425048:	mov	w1, #0x1                   	// #1
  42504c:	ldr	x0, [sp, #40]
  425050:	bl	424ec0 <wcrtomb@plt+0x201b0>
  425054:	str	w0, [sp, #36]
  425058:	bl	404bc0 <__errno_location@plt>
  42505c:	ldr	w0, [x0]
  425060:	str	w0, [sp, #32]
  425064:	ldr	x0, [sp, #40]
  425068:	bl	404880 <free@plt>
  42506c:	ldr	w0, [sp, #36]
  425070:	cmp	w0, #0x0
  425074:	b.ne	425098 <wcrtomb@plt+0x20388>  // b.any
  425078:	ldr	x0, [sp, #56]
  42507c:	bl	404880 <free@plt>
  425080:	bl	404bc0 <__errno_location@plt>
  425084:	mov	x1, x0
  425088:	ldr	w0, [sp, #32]
  42508c:	str	w0, [x1]
  425090:	mov	w0, #0x0                   	// #0
  425094:	b	4250f0 <wcrtomb@plt+0x203e0>
  425098:	ldr	x0, [sp, #48]
  42509c:	add	x0, x0, #0x1
  4250a0:	ldr	x1, [sp, #72]
  4250a4:	add	x0, x1, x0
  4250a8:	str	x0, [sp, #72]
  4250ac:	ldr	x0, [sp, #72]
  4250b0:	bl	4040b0 <strlen@plt>
  4250b4:	str	x0, [sp, #48]
  4250b8:	ldr	x0, [sp, #48]
  4250bc:	cmp	x0, #0x0
  4250c0:	b.ne	425038 <wcrtomb@plt+0x20328>  // b.any
  4250c4:	ldr	x0, [sp, #56]
  4250c8:	bl	404880 <free@plt>
  4250cc:	ldr	x0, [sp, #24]
  4250d0:	bl	424e54 <wcrtomb@plt+0x20144>
  4250d4:	cmp	w0, #0x0
  4250d8:	cset	w0, eq  // eq = none
  4250dc:	and	w0, w0, #0xff
  4250e0:	b	4250f0 <wcrtomb@plt+0x203e0>
  4250e4:	nop
  4250e8:	nop
  4250ec:	mov	w0, #0x0                   	// #0
  4250f0:	ldp	x29, x30, [sp], #80
  4250f4:	ret
  4250f8:	stp	x29, x30, [sp, #-208]!
  4250fc:	mov	x29, sp
  425100:	stp	x19, x20, [sp, #16]
  425104:	str	x21, [sp, #32]
  425108:	str	x0, [sp, #56]
  42510c:	strb	w1, [sp, #55]
  425110:	ldr	x1, [sp, #56]
  425114:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425118:	add	x0, x0, #0xa48
  42511c:	bl	423d0c <wcrtomb@plt+0x1effc>
  425120:	mov	x1, #0x0                   	// #0
  425124:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425128:	add	x0, x0, #0xa50
  42512c:	bl	423d0c <wcrtomb@plt+0x1effc>
  425130:	ldrb	w0, [sp, #55]
  425134:	cmp	w0, #0x0
  425138:	b.eq	4251d4 <wcrtomb@plt+0x204c4>  // b.none
  42513c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425140:	add	x0, x0, #0x428
  425144:	ldrb	w0, [x0]
  425148:	eor	w0, w0, #0x1
  42514c:	and	w0, w0, #0xff
  425150:	cmp	w0, #0x0
  425154:	b.eq	4251d4 <wcrtomb@plt+0x204c4>  // b.none
  425158:	mov	w1, #0x3a                  	// #58
  42515c:	ldr	x0, [sp, #56]
  425160:	bl	404930 <strchr@plt>
  425164:	mov	x1, x0
  425168:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42516c:	add	x0, x0, #0x430
  425170:	str	x1, [x0]
  425174:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425178:	add	x0, x0, #0x430
  42517c:	ldr	x0, [x0]
  425180:	cmp	x0, #0x0
  425184:	b.eq	4251d4 <wcrtomb@plt+0x204c4>  // b.none
  425188:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42518c:	add	x0, x0, #0x430
  425190:	ldr	x0, [x0]
  425194:	ldr	x1, [sp, #56]
  425198:	cmp	x1, x0
  42519c:	b.cs	4251d4 <wcrtomb@plt+0x204c4>  // b.hs, b.nlast
  4251a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4251a4:	add	x0, x0, #0x430
  4251a8:	ldr	x1, [x0]
  4251ac:	ldr	x0, [sp, #56]
  4251b0:	sub	x0, x1, x0
  4251b4:	mov	x2, x0
  4251b8:	mov	w1, #0x2f                  	// #47
  4251bc:	ldr	x0, [sp, #56]
  4251c0:	bl	404a20 <memchr@plt>
  4251c4:	cmp	x0, #0x0
  4251c8:	b.ne	4251d4 <wcrtomb@plt+0x204c4>  // b.any
  4251cc:	mov	w0, #0x1                   	// #1
  4251d0:	b	42541c <wcrtomb@plt+0x2070c>
  4251d4:	add	x0, sp, #0x48
  4251d8:	mov	x1, x0
  4251dc:	ldr	x0, [sp, #56]
  4251e0:	bl	4255c4 <wcrtomb@plt+0x208b4>
  4251e4:	cmp	w0, #0x0
  4251e8:	b.eq	425214 <wcrtomb@plt+0x20504>  // b.none
  4251ec:	bl	404bc0 <__errno_location@plt>
  4251f0:	ldr	w0, [x0]
  4251f4:	cmp	w0, #0x2
  4251f8:	b.ne	425204 <wcrtomb@plt+0x204f4>  // b.any
  4251fc:	mov	w0, #0x1                   	// #1
  425200:	b	42541c <wcrtomb@plt+0x2070c>
  425204:	ldr	x0, [sp, #56]
  425208:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  42520c:	mov	w0, #0x0                   	// #0
  425210:	b	42541c <wcrtomb@plt+0x2070c>
  425214:	ldr	w0, [sp, #88]
  425218:	and	w0, w0, #0xf000
  42521c:	cmp	w0, #0x4, lsl #12
  425220:	b.ne	42522c <wcrtomb@plt+0x2051c>  // b.any
  425224:	mov	w0, #0x1                   	// #1
  425228:	b	42541c <wcrtomb@plt+0x2070c>
  42522c:	ldrb	w0, [sp, #55]
  425230:	cmp	w0, #0x0
  425234:	b.eq	425260 <wcrtomb@plt+0x20550>  // b.none
  425238:	ldr	w0, [sp, #88]
  42523c:	and	w0, w0, #0xf000
  425240:	cmp	w0, #0x6, lsl #12
  425244:	b.eq	425258 <wcrtomb@plt+0x20548>  // b.none
  425248:	ldr	w0, [sp, #88]
  42524c:	and	w0, w0, #0xf000
  425250:	cmp	w0, #0x2, lsl #12
  425254:	b.ne	425260 <wcrtomb@plt+0x20550>  // b.any
  425258:	mov	w0, #0x1                   	// #1
  42525c:	b	42541c <wcrtomb@plt+0x2070c>
  425260:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  425264:	add	x0, x0, #0x8b0
  425268:	ldr	w3, [x0]
  42526c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425270:	add	x0, x0, #0x308
  425274:	ldr	w0, [x0]
  425278:	mov	w2, w0
  42527c:	ldr	x1, [sp, #56]
  425280:	mov	w0, w3
  425284:	bl	449c50 <argp_usage@@Base+0xb64>
  425288:	mov	x1, x0
  42528c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425290:	add	x0, x0, #0xa50
  425294:	str	x1, [x0]
  425298:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42529c:	add	x0, x0, #0xa50
  4252a0:	ldr	x0, [x0]
  4252a4:	cmp	x0, #0x0
  4252a8:	b.ne	4252b0 <wcrtomb@plt+0x205a0>  // b.any
  4252ac:	bl	412b2c <wcrtomb@plt+0xde1c>
  4252b0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4252b4:	add	x0, x0, #0x8b0
  4252b8:	ldr	w4, [x0]
  4252bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4252c0:	add	x0, x0, #0xa48
  4252c4:	ldr	x1, [x0]
  4252c8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4252cc:	add	x0, x0, #0x8b0
  4252d0:	ldr	w2, [x0]
  4252d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4252d8:	add	x0, x0, #0xa50
  4252dc:	ldr	x0, [x0]
  4252e0:	mov	x3, x0
  4252e4:	mov	w0, w4
  4252e8:	bl	4048c0 <renameat@plt>
  4252ec:	cmp	w0, #0x0
  4252f0:	b.ne	425374 <wcrtomb@plt+0x20664>  // b.any
  4252f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4252f8:	add	x0, x0, #0x2b4
  4252fc:	ldr	w0, [x0]
  425300:	cmp	w0, #0x0
  425304:	b.eq	42536c <wcrtomb@plt+0x2065c>  // b.none
  425308:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42530c:	add	x0, x0, #0xf88
  425310:	ldr	x19, [x0]
  425314:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  425318:	add	x0, x0, #0x850
  42531c:	bl	404c60 <gettext@plt>
  425320:	mov	x20, x0
  425324:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425328:	add	x0, x0, #0xa48
  42532c:	ldr	x0, [x0]
  425330:	mov	x1, x0
  425334:	mov	w0, #0x0                   	// #0
  425338:	bl	459f10 <argp_usage@@Base+0x10e24>
  42533c:	mov	x21, x0
  425340:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425344:	add	x0, x0, #0xa50
  425348:	ldr	x0, [x0]
  42534c:	mov	x1, x0
  425350:	mov	w0, #0x1                   	// #1
  425354:	bl	459f10 <argp_usage@@Base+0x10e24>
  425358:	mov	x3, x0
  42535c:	mov	x2, x21
  425360:	mov	x1, x20
  425364:	mov	x0, x19
  425368:	bl	404c90 <fprintf@plt>
  42536c:	mov	w0, #0x1                   	// #1
  425370:	b	42541c <wcrtomb@plt+0x2070c>
  425374:	bl	404bc0 <__errno_location@plt>
  425378:	ldr	w0, [x0]
  42537c:	str	w0, [sp, #204]
  425380:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425384:	add	x0, x0, #0x420
  425388:	ldr	x0, [x0]
  42538c:	cmp	x0, #0x0
  425390:	b.eq	4253a4 <wcrtomb@plt+0x20694>  // b.none
  425394:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425398:	add	x0, x0, #0x420
  42539c:	ldr	x0, [x0]
  4253a0:	blr	x0
  4253a4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4253a8:	add	x0, x0, #0x868
  4253ac:	bl	404c60 <gettext@plt>
  4253b0:	mov	x19, x0
  4253b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4253b8:	add	x0, x0, #0xa48
  4253bc:	ldr	x0, [x0]
  4253c0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  4253c4:	mov	x20, x0
  4253c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4253cc:	add	x0, x0, #0xa50
  4253d0:	ldr	x0, [x0]
  4253d4:	mov	x1, x0
  4253d8:	mov	w0, #0x1                   	// #1
  4253dc:	bl	459f10 <argp_usage@@Base+0x10e24>
  4253e0:	mov	x4, x0
  4253e4:	mov	x3, x20
  4253e8:	mov	x2, x19
  4253ec:	ldr	w1, [sp, #204]
  4253f0:	mov	w0, #0x0                   	// #0
  4253f4:	bl	404100 <error@plt>
  4253f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4253fc:	add	x0, x0, #0xdb0
  425400:	mov	w1, #0x2                   	// #2
  425404:	str	w1, [x0]
  425408:	mov	x1, #0x0                   	// #0
  42540c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425410:	add	x0, x0, #0xa50
  425414:	bl	423d0c <wcrtomb@plt+0x1effc>
  425418:	mov	w0, #0x0                   	// #0
  42541c:	ldp	x19, x20, [sp, #16]
  425420:	ldr	x21, [sp, #32]
  425424:	ldp	x29, x30, [sp], #208
  425428:	ret
  42542c:	stp	x29, x30, [sp, #-64]!
  425430:	mov	x29, sp
  425434:	stp	x19, x20, [sp, #16]
  425438:	str	x21, [sp, #32]
  42543c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425440:	add	x0, x0, #0xa50
  425444:	ldr	x0, [x0]
  425448:	cmp	x0, #0x0
  42544c:	b.eq	4255b0 <wcrtomb@plt+0x208a0>  // b.none
  425450:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  425454:	add	x0, x0, #0x8b0
  425458:	ldr	w4, [x0]
  42545c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425460:	add	x0, x0, #0xa50
  425464:	ldr	x1, [x0]
  425468:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  42546c:	add	x0, x0, #0x8b0
  425470:	ldr	w2, [x0]
  425474:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425478:	add	x0, x0, #0xa48
  42547c:	ldr	x0, [x0]
  425480:	mov	x3, x0
  425484:	mov	w0, w4
  425488:	bl	4048c0 <renameat@plt>
  42548c:	cmp	w0, #0x0
  425490:	b.eq	425528 <wcrtomb@plt+0x20818>  // b.none
  425494:	bl	404bc0 <__errno_location@plt>
  425498:	ldr	w0, [x0]
  42549c:	str	w0, [sp, #60]
  4254a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4254a4:	add	x0, x0, #0x420
  4254a8:	ldr	x0, [x0]
  4254ac:	cmp	x0, #0x0
  4254b0:	b.eq	4254c4 <wcrtomb@plt+0x207b4>  // b.none
  4254b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4254b8:	add	x0, x0, #0x420
  4254bc:	ldr	x0, [x0]
  4254c0:	blr	x0
  4254c4:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4254c8:	add	x0, x0, #0x868
  4254cc:	bl	404c60 <gettext@plt>
  4254d0:	mov	x19, x0
  4254d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4254d8:	add	x0, x0, #0xa50
  4254dc:	ldr	x0, [x0]
  4254e0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  4254e4:	mov	x20, x0
  4254e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4254ec:	add	x0, x0, #0xa48
  4254f0:	ldr	x0, [x0]
  4254f4:	mov	x1, x0
  4254f8:	mov	w0, #0x1                   	// #1
  4254fc:	bl	459f10 <argp_usage@@Base+0x10e24>
  425500:	mov	x4, x0
  425504:	mov	x3, x20
  425508:	mov	x2, x19
  42550c:	ldr	w1, [sp, #60]
  425510:	mov	w0, #0x0                   	// #0
  425514:	bl	404100 <error@plt>
  425518:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42551c:	add	x0, x0, #0xdb0
  425520:	mov	w1, #0x2                   	// #2
  425524:	str	w1, [x0]
  425528:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42552c:	add	x0, x0, #0x2b4
  425530:	ldr	w0, [x0]
  425534:	cmp	w0, #0x0
  425538:	b.eq	4255a0 <wcrtomb@plt+0x20890>  // b.none
  42553c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425540:	add	x0, x0, #0xf88
  425544:	ldr	x19, [x0]
  425548:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42554c:	add	x0, x0, #0x880
  425550:	bl	404c60 <gettext@plt>
  425554:	mov	x20, x0
  425558:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42555c:	add	x0, x0, #0xa50
  425560:	ldr	x0, [x0]
  425564:	mov	x1, x0
  425568:	mov	w0, #0x0                   	// #0
  42556c:	bl	459f10 <argp_usage@@Base+0x10e24>
  425570:	mov	x21, x0
  425574:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425578:	add	x0, x0, #0xa48
  42557c:	ldr	x0, [x0]
  425580:	mov	x1, x0
  425584:	mov	w0, #0x1                   	// #1
  425588:	bl	459f10 <argp_usage@@Base+0x10e24>
  42558c:	mov	x3, x0
  425590:	mov	x2, x21
  425594:	mov	x1, x20
  425598:	mov	x0, x19
  42559c:	bl	404c90 <fprintf@plt>
  4255a0:	mov	x1, #0x0                   	// #0
  4255a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4255a8:	add	x0, x0, #0xa50
  4255ac:	bl	423d0c <wcrtomb@plt+0x1effc>
  4255b0:	nop
  4255b4:	ldp	x19, x20, [sp, #16]
  4255b8:	ldr	x21, [sp, #32]
  4255bc:	ldp	x29, x30, [sp], #64
  4255c0:	ret
  4255c4:	stp	x29, x30, [sp, #-32]!
  4255c8:	mov	x29, sp
  4255cc:	str	x0, [sp, #24]
  4255d0:	str	x1, [sp, #16]
  4255d4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4255d8:	add	x0, x0, #0x8b0
  4255dc:	ldr	w4, [x0]
  4255e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4255e4:	add	x0, x0, #0x260
  4255e8:	ldr	w0, [x0]
  4255ec:	mov	w3, w0
  4255f0:	ldr	x2, [sp, #16]
  4255f4:	ldr	x1, [sp, #24]
  4255f8:	mov	w0, w4
  4255fc:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  425600:	ldp	x29, x30, [sp], #32
  425604:	ret
  425608:	stp	x29, x30, [sp, #-64]!
  42560c:	mov	x29, sp
  425610:	str	w0, [sp, #44]
  425614:	str	x1, [sp, #32]
  425618:	str	x2, [sp, #24]
  42561c:	ldr	x2, [sp, #24]
  425620:	ldr	x1, [sp, #32]
  425624:	ldr	w0, [sp, #44]
  425628:	bl	45a2ac <argp_usage@@Base+0x111c0>
  42562c:	str	x0, [sp, #56]
  425630:	ldr	x0, [sp, #56]
  425634:	cmn	x0, #0x1
  425638:	b.ne	4256ac <wcrtomb@plt+0x2099c>  // b.any
  42563c:	bl	404bc0 <__errno_location@plt>
  425640:	ldr	w0, [x0]
  425644:	cmp	w0, #0xb
  425648:	b.ne	4256ac <wcrtomb@plt+0x2099c>  // b.any
  42564c:	mov	w1, #0x3                   	// #3
  425650:	ldr	w0, [sp, #44]
  425654:	bl	45c480 <argp_usage@@Base+0x13394>
  425658:	str	w0, [sp, #52]
  42565c:	ldr	w0, [sp, #52]
  425660:	cmp	w0, #0x0
  425664:	b.lt	4256ac <wcrtomb@plt+0x2099c>  // b.tstop
  425668:	ldr	w0, [sp, #52]
  42566c:	and	w0, w0, #0x800
  425670:	cmp	w0, #0x0
  425674:	b.eq	4256ac <wcrtomb@plt+0x2099c>  // b.none
  425678:	ldr	w0, [sp, #52]
  42567c:	and	w0, w0, #0xfffff7ff
  425680:	mov	w2, w0
  425684:	mov	w1, #0x4                   	// #4
  425688:	ldr	w0, [sp, #44]
  42568c:	bl	45c480 <argp_usage@@Base+0x13394>
  425690:	cmn	w0, #0x1
  425694:	b.eq	4256ac <wcrtomb@plt+0x2099c>  // b.none
  425698:	ldr	x2, [sp, #24]
  42569c:	ldr	x1, [sp, #32]
  4256a0:	ldr	w0, [sp, #44]
  4256a4:	bl	45a2ac <argp_usage@@Base+0x111c0>
  4256a8:	str	x0, [sp, #56]
  4256ac:	ldr	x0, [sp, #56]
  4256b0:	ldp	x29, x30, [sp], #64
  4256b4:	ret
  4256b8:	stp	x29, x30, [sp, #-80]!
  4256bc:	mov	x29, sp
  4256c0:	str	w0, [sp, #44]
  4256c4:	str	x1, [sp, #32]
  4256c8:	str	x2, [sp, #24]
  4256cc:	ldr	x2, [sp, #24]
  4256d0:	ldr	x1, [sp, #32]
  4256d4:	ldr	w0, [sp, #44]
  4256d8:	bl	44dee8 <argp_usage@@Base+0x4dfc>
  4256dc:	str	x0, [sp, #72]
  4256e0:	ldr	x1, [sp, #72]
  4256e4:	ldr	x0, [sp, #24]
  4256e8:	cmp	x1, x0
  4256ec:	b.cs	42578c <wcrtomb@plt+0x20a7c>  // b.hs, b.nlast
  4256f0:	bl	404bc0 <__errno_location@plt>
  4256f4:	ldr	w0, [x0]
  4256f8:	cmp	w0, #0xb
  4256fc:	b.ne	42578c <wcrtomb@plt+0x20a7c>  // b.any
  425700:	mov	w1, #0x3                   	// #3
  425704:	ldr	w0, [sp, #44]
  425708:	bl	45c480 <argp_usage@@Base+0x13394>
  42570c:	str	w0, [sp, #68]
  425710:	ldr	w0, [sp, #68]
  425714:	cmp	w0, #0x0
  425718:	b.lt	42578c <wcrtomb@plt+0x20a7c>  // b.tstop
  42571c:	ldr	w0, [sp, #68]
  425720:	and	w0, w0, #0x800
  425724:	cmp	w0, #0x0
  425728:	b.eq	42578c <wcrtomb@plt+0x20a7c>  // b.none
  42572c:	ldr	w0, [sp, #68]
  425730:	and	w0, w0, #0xfffff7ff
  425734:	mov	w2, w0
  425738:	mov	w1, #0x4                   	// #4
  42573c:	ldr	w0, [sp, #44]
  425740:	bl	45c480 <argp_usage@@Base+0x13394>
  425744:	cmn	w0, #0x1
  425748:	b.eq	42578c <wcrtomb@plt+0x20a7c>  // b.none
  42574c:	ldr	x0, [sp, #32]
  425750:	str	x0, [sp, #56]
  425754:	ldr	x1, [sp, #56]
  425758:	ldr	x0, [sp, #72]
  42575c:	add	x3, x1, x0
  425760:	ldr	x1, [sp, #24]
  425764:	ldr	x0, [sp, #72]
  425768:	sub	x0, x1, x0
  42576c:	mov	x2, x0
  425770:	mov	x1, x3
  425774:	ldr	w0, [sp, #44]
  425778:	bl	44dee8 <argp_usage@@Base+0x4dfc>
  42577c:	mov	x1, x0
  425780:	ldr	x0, [sp, #72]
  425784:	add	x0, x0, x1
  425788:	str	x0, [sp, #72]
  42578c:	ldr	x0, [sp, #72]
  425790:	ldp	x29, x30, [sp], #80
  425794:	ret
  425798:	stp	x29, x30, [sp, #-80]!
  42579c:	mov	x29, sp
  4257a0:	str	w0, [sp, #44]
  4257a4:	str	w1, [sp, #40]
  4257a8:	str	x2, [sp, #32]
  4257ac:	stp	x3, x4, [sp, #16]
  4257b0:	ldp	x0, x1, [sp, #16]
  4257b4:	stp	x0, x1, [sp, #48]
  4257b8:	mov	x0, #0x3ffffffe            	// #1073741822
  4257bc:	str	x0, [sp, #72]
  4257c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4257c4:	add	x0, x0, #0x260
  4257c8:	ldr	w1, [x0]
  4257cc:	add	x0, sp, #0x30
  4257d0:	mov	w4, w1
  4257d4:	mov	x3, x0
  4257d8:	ldr	x2, [sp, #32]
  4257dc:	ldr	w1, [sp, #40]
  4257e0:	ldr	w0, [sp, #44]
  4257e4:	bl	44b5a8 <argp_usage@@Base+0x24bc>
  4257e8:	ldp	x29, x30, [sp], #80
  4257ec:	ret
  4257f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4257f4:	add	x0, x0, #0xa60
  4257f8:	ldr	x0, [x0]
  4257fc:	cmp	x0, #0x0
  425800:	b.ne	425814 <wcrtomb@plt+0x20b04>  // b.any
  425804:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425808:	add	x0, x0, #0xa60
  42580c:	ldr	x0, [x0]
  425810:	b	425824 <wcrtomb@plt+0x20b14>
  425814:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425818:	add	x0, x0, #0xa60
  42581c:	ldr	x0, [x0]
  425820:	sub	w0, w0, #0x1
  425824:	ret
  425828:	stp	x29, x30, [sp, #-64]!
  42582c:	mov	x29, sp
  425830:	str	x19, [sp, #16]
  425834:	str	x0, [sp, #40]
  425838:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42583c:	add	x0, x0, #0xa60
  425840:	ldr	x1, [x0]
  425844:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425848:	add	x0, x0, #0xa68
  42584c:	ldr	x0, [x0]
  425850:	cmp	x1, x0
  425854:	b.ne	42597c <wcrtomb@plt+0x20c6c>  // b.any
  425858:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42585c:	add	x0, x0, #0xa68
  425860:	ldr	x0, [x0]
  425864:	cmp	x0, #0x0
  425868:	b.ne	42587c <wcrtomb@plt+0x20b6c>  // b.any
  42586c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425870:	add	x0, x0, #0xa68
  425874:	mov	x1, #0x2                   	// #2
  425878:	str	x1, [x0]
  42587c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425880:	add	x0, x0, #0xa58
  425884:	ldr	x3, [x0]
  425888:	mov	x2, #0x18                  	// #24
  42588c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425890:	add	x1, x0, #0xa68
  425894:	mov	x0, x3
  425898:	bl	45b56c <argp_usage@@Base+0x12480>
  42589c:	mov	x1, x0
  4258a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4258a4:	add	x0, x0, #0xa58
  4258a8:	str	x1, [x0]
  4258ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4258b0:	add	x0, x0, #0xa60
  4258b4:	ldr	x0, [x0]
  4258b8:	cmp	x0, #0x0
  4258bc:	b.ne	42597c <wcrtomb@plt+0x20c6c>  // b.any
  4258c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4258c4:	add	x0, x0, #0xa58
  4258c8:	ldr	x2, [x0]
  4258cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4258d0:	add	x0, x0, #0xa60
  4258d4:	ldr	x1, [x0]
  4258d8:	mov	x0, x1
  4258dc:	lsl	x0, x0, #1
  4258e0:	add	x0, x0, x1
  4258e4:	lsl	x0, x0, #3
  4258e8:	add	x0, x2, x0
  4258ec:	adrp	x1, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4258f0:	add	x1, x1, #0x840
  4258f4:	str	x1, [x0]
  4258f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4258fc:	add	x0, x0, #0xa58
  425900:	ldr	x2, [x0]
  425904:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425908:	add	x0, x0, #0xa60
  42590c:	ldr	x1, [x0]
  425910:	mov	x0, x1
  425914:	lsl	x0, x0, #1
  425918:	add	x0, x0, x1
  42591c:	lsl	x0, x0, #3
  425920:	add	x19, x2, x0
  425924:	bl	45b884 <argp_usage@@Base+0x12798>
  425928:	str	x0, [x19, #8]
  42592c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425930:	add	x0, x0, #0xa58
  425934:	ldr	x2, [x0]
  425938:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42593c:	add	x0, x0, #0xa60
  425940:	ldr	x1, [x0]
  425944:	mov	x0, x1
  425948:	lsl	x0, x0, #1
  42594c:	add	x0, x0, x1
  425950:	lsl	x0, x0, #3
  425954:	add	x0, x2, x0
  425958:	mov	w1, #0xffffff9c            	// #-100
  42595c:	str	w1, [x0, #16]
  425960:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425964:	add	x0, x0, #0xa60
  425968:	ldr	x0, [x0]
  42596c:	add	x1, x0, #0x1
  425970:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425974:	add	x0, x0, #0xa60
  425978:	str	x1, [x0]
  42597c:	ldr	x0, [sp, #40]
  425980:	ldrb	w0, [x0]
  425984:	cmp	w0, #0x0
  425988:	b.eq	425a20 <wcrtomb@plt+0x20d10>  // b.none
  42598c:	b	4259bc <wcrtomb@plt+0x20cac>
  425990:	ldr	x0, [sp, #40]
  425994:	add	x0, x0, #0x2
  425998:	str	x0, [sp, #40]
  42599c:	b	4259ac <wcrtomb@plt+0x20c9c>
  4259a0:	ldr	x0, [sp, #40]
  4259a4:	add	x0, x0, #0x1
  4259a8:	str	x0, [sp, #40]
  4259ac:	ldr	x0, [sp, #40]
  4259b0:	ldrb	w0, [x0]
  4259b4:	cmp	w0, #0x2f
  4259b8:	b.eq	4259a0 <wcrtomb@plt+0x20c90>  // b.none
  4259bc:	ldr	x0, [sp, #40]
  4259c0:	ldrb	w0, [x0]
  4259c4:	cmp	w0, #0x2e
  4259c8:	b.ne	4259e0 <wcrtomb@plt+0x20cd0>  // b.any
  4259cc:	ldr	x0, [sp, #40]
  4259d0:	add	x0, x0, #0x1
  4259d4:	ldrb	w0, [x0]
  4259d8:	cmp	w0, #0x2f
  4259dc:	b.eq	425990 <wcrtomb@plt+0x20c80>  // b.none
  4259e0:	ldr	x0, [sp, #40]
  4259e4:	ldrb	w0, [x0]
  4259e8:	cmp	w0, #0x2e
  4259ec:	cset	w0, eq  // eq = none
  4259f0:	and	w0, w0, #0xff
  4259f4:	and	x0, x0, #0xff
  4259f8:	ldr	x1, [sp, #40]
  4259fc:	add	x0, x1, x0
  425a00:	ldrb	w0, [x0]
  425a04:	cmp	w0, #0x0
  425a08:	b.ne	425a20 <wcrtomb@plt+0x20d10>  // b.any
  425a0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425a10:	add	x0, x0, #0xa60
  425a14:	ldr	x0, [x0]
  425a18:	sub	w0, w0, #0x1
  425a1c:	b	425b8c <wcrtomb@plt+0x20e7c>
  425a20:	ldr	x0, [sp, #40]
  425a24:	ldrb	w0, [x0]
  425a28:	cmp	w0, #0x2f
  425a2c:	b.ne	425a40 <wcrtomb@plt+0x20d30>  // b.any
  425a30:	ldr	x0, [sp, #40]
  425a34:	bl	45b858 <argp_usage@@Base+0x1276c>
  425a38:	str	x0, [sp, #56]
  425a3c:	b	425ad8 <wcrtomb@plt+0x20dc8>
  425a40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425a44:	add	x0, x0, #0xa58
  425a48:	ldr	x2, [x0]
  425a4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425a50:	add	x0, x0, #0xa60
  425a54:	ldr	x1, [x0]
  425a58:	mov	x0, x1
  425a5c:	lsl	x0, x0, #1
  425a60:	add	x0, x0, x1
  425a64:	lsl	x0, x0, #3
  425a68:	sub	x0, x0, #0x18
  425a6c:	add	x0, x2, x0
  425a70:	ldr	x0, [x0, #8]
  425a74:	cmp	x0, #0x0
  425a78:	b.eq	425ad4 <wcrtomb@plt+0x20dc4>  // b.none
  425a7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425a80:	add	x0, x0, #0xa58
  425a84:	ldr	x2, [x0]
  425a88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425a8c:	add	x0, x0, #0xa60
  425a90:	ldr	x1, [x0]
  425a94:	mov	x0, x1
  425a98:	lsl	x0, x0, #1
  425a9c:	add	x0, x0, x1
  425aa0:	lsl	x0, x0, #3
  425aa4:	sub	x0, x0, #0x18
  425aa8:	add	x0, x2, x0
  425aac:	ldr	x0, [x0, #8]
  425ab0:	bl	426350 <wcrtomb@plt+0x21640>
  425ab4:	str	x0, [sp, #48]
  425ab8:	ldr	x1, [sp, #40]
  425abc:	ldr	x0, [sp, #48]
  425ac0:	bl	4264d8 <wcrtomb@plt+0x217c8>
  425ac4:	ldr	x0, [sp, #48]
  425ac8:	bl	42656c <wcrtomb@plt+0x2185c>
  425acc:	str	x0, [sp, #56]
  425ad0:	b	425ad8 <wcrtomb@plt+0x20dc8>
  425ad4:	str	xzr, [sp, #56]
  425ad8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425adc:	add	x0, x0, #0xa58
  425ae0:	ldr	x2, [x0]
  425ae4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425ae8:	add	x0, x0, #0xa60
  425aec:	ldr	x1, [x0]
  425af0:	mov	x0, x1
  425af4:	lsl	x0, x0, #1
  425af8:	add	x0, x0, x1
  425afc:	lsl	x0, x0, #3
  425b00:	add	x0, x2, x0
  425b04:	ldr	x1, [sp, #40]
  425b08:	str	x1, [x0]
  425b0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425b10:	add	x0, x0, #0xa58
  425b14:	ldr	x2, [x0]
  425b18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425b1c:	add	x0, x0, #0xa60
  425b20:	ldr	x1, [x0]
  425b24:	mov	x0, x1
  425b28:	lsl	x0, x0, #1
  425b2c:	add	x0, x0, x1
  425b30:	lsl	x0, x0, #3
  425b34:	add	x0, x2, x0
  425b38:	ldr	x1, [sp, #56]
  425b3c:	str	x1, [x0, #8]
  425b40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425b44:	add	x0, x0, #0xa58
  425b48:	ldr	x2, [x0]
  425b4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425b50:	add	x0, x0, #0xa60
  425b54:	ldr	x1, [x0]
  425b58:	mov	x0, x1
  425b5c:	lsl	x0, x0, #1
  425b60:	add	x0, x0, x1
  425b64:	lsl	x0, x0, #3
  425b68:	add	x0, x2, x0
  425b6c:	str	wzr, [x0, #16]
  425b70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425b74:	add	x0, x0, #0xa60
  425b78:	ldr	x0, [x0]
  425b7c:	add	x2, x0, #0x1
  425b80:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425b84:	add	x1, x1, #0xa60
  425b88:	str	x2, [x1]
  425b8c:	ldr	x19, [sp, #16]
  425b90:	ldp	x29, x30, [sp], #64
  425b94:	ret
  425b98:	stp	x29, x30, [sp, #-80]!
  425b9c:	mov	x29, sp
  425ba0:	str	w0, [sp, #28]
  425ba4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425ba8:	add	x0, x0, #0x30
  425bac:	ldr	w0, [x0]
  425bb0:	ldr	w1, [sp, #28]
  425bb4:	cmp	w1, w0
  425bb8:	b.eq	425de0 <wcrtomb@plt+0x210d0>  // b.none
  425bbc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425bc0:	add	x0, x0, #0xa58
  425bc4:	ldr	x2, [x0]
  425bc8:	ldrsw	x1, [sp, #28]
  425bcc:	mov	x0, x1
  425bd0:	lsl	x0, x0, #1
  425bd4:	add	x0, x0, x1
  425bd8:	lsl	x0, x0, #3
  425bdc:	add	x0, x2, x0
  425be0:	str	x0, [sp, #48]
  425be4:	ldr	x0, [sp, #48]
  425be8:	ldr	w0, [x0, #16]
  425bec:	str	w0, [sp, #76]
  425bf0:	ldr	w0, [sp, #76]
  425bf4:	cmp	w0, #0x0
  425bf8:	b.ne	425d24 <wcrtomb@plt+0x21014>  // b.any
  425bfc:	ldr	x0, [sp, #48]
  425c00:	ldr	x0, [x0]
  425c04:	ldrb	w0, [x0]
  425c08:	cmp	w0, #0x2f
  425c0c:	b.eq	425c1c <wcrtomb@plt+0x20f0c>  // b.none
  425c10:	ldr	w0, [sp, #28]
  425c14:	sub	w0, w0, #0x1
  425c18:	bl	425b98 <wcrtomb@plt+0x20e88>
  425c1c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  425c20:	add	x0, x0, #0x8b0
  425c24:	ldr	w3, [x0]
  425c28:	ldr	x0, [sp, #48]
  425c2c:	ldr	x1, [x0]
  425c30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425c34:	add	x0, x0, #0x2ec
  425c38:	ldr	w0, [x0]
  425c3c:	and	w0, w0, #0xffff7fff
  425c40:	mov	w2, w0
  425c44:	mov	w0, w3
  425c48:	bl	404b90 <openat@plt>
  425c4c:	str	w0, [sp, #76]
  425c50:	ldr	w0, [sp, #76]
  425c54:	cmp	w0, #0x0
  425c58:	b.ge	425c68 <wcrtomb@plt+0x20f58>  // b.tcont
  425c5c:	ldr	x0, [sp, #48]
  425c60:	ldr	x0, [x0]
  425c64:	bl	43a640 <wcrtomb@plt+0x35930>
  425c68:	ldr	x0, [sp, #48]
  425c6c:	ldr	w1, [sp, #76]
  425c70:	str	w1, [x0, #16]
  425c74:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425c78:	add	x0, x0, #0xab0
  425c7c:	ldr	x0, [x0]
  425c80:	cmp	x0, #0xf
  425c84:	b.hi	425cb8 <wcrtomb@plt+0x20fa8>  // b.pmore
  425c88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425c8c:	add	x0, x0, #0xab0
  425c90:	ldr	x0, [x0]
  425c94:	add	x2, x0, #0x1
  425c98:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425c9c:	add	x1, x1, #0xab0
  425ca0:	str	x2, [x1]
  425ca4:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425ca8:	add	x1, x1, #0xa70
  425cac:	ldr	w2, [sp, #28]
  425cb0:	str	w2, [x1, x0, lsl #2]
  425cb4:	b	425d24 <wcrtomb@plt+0x21014>
  425cb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425cbc:	add	x0, x0, #0xa58
  425cc0:	ldr	x2, [x0]
  425cc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425cc8:	add	x0, x0, #0xa70
  425ccc:	ldr	w0, [x0, #60]
  425cd0:	sxtw	x1, w0
  425cd4:	mov	x0, x1
  425cd8:	lsl	x0, x0, #1
  425cdc:	add	x0, x0, x1
  425ce0:	lsl	x0, x0, #3
  425ce4:	add	x0, x2, x0
  425ce8:	str	x0, [sp, #40]
  425cec:	ldr	x0, [sp, #40]
  425cf0:	ldr	w0, [x0, #16]
  425cf4:	bl	404660 <close@plt>
  425cf8:	cmp	w0, #0x0
  425cfc:	b.eq	425d0c <wcrtomb@plt+0x20ffc>  // b.none
  425d00:	ldr	x0, [sp, #40]
  425d04:	ldr	x0, [x0]
  425d08:	bl	425eac <wcrtomb@plt+0x2119c>
  425d0c:	ldr	x0, [sp, #40]
  425d10:	str	wzr, [x0, #16]
  425d14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425d18:	add	x0, x0, #0xa70
  425d1c:	ldr	w1, [sp, #28]
  425d20:	str	w1, [x0, #60]
  425d24:	ldr	w0, [sp, #76]
  425d28:	cmp	w0, #0x0
  425d2c:	b.le	425dc0 <wcrtomb@plt+0x210b0>
  425d30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425d34:	add	x0, x0, #0xa70
  425d38:	ldr	w0, [x0]
  425d3c:	str	w0, [sp, #60]
  425d40:	mov	x0, #0x1                   	// #1
  425d44:	str	x0, [sp, #64]
  425d48:	b	425d98 <wcrtomb@plt+0x21088>
  425d4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425d50:	add	x0, x0, #0xa70
  425d54:	ldr	x1, [sp, #64]
  425d58:	ldr	w0, [x0, x1, lsl #2]
  425d5c:	str	w0, [sp, #36]
  425d60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425d64:	add	x0, x0, #0xa70
  425d68:	ldr	x1, [sp, #64]
  425d6c:	ldr	w2, [sp, #60]
  425d70:	str	w2, [x0, x1, lsl #2]
  425d74:	ldr	w1, [sp, #36]
  425d78:	ldr	w0, [sp, #28]
  425d7c:	cmp	w1, w0
  425d80:	b.eq	425dac <wcrtomb@plt+0x2109c>  // b.none
  425d84:	ldr	w0, [sp, #36]
  425d88:	str	w0, [sp, #60]
  425d8c:	ldr	x0, [sp, #64]
  425d90:	add	x0, x0, #0x1
  425d94:	str	x0, [sp, #64]
  425d98:	ldr	w1, [sp, #60]
  425d9c:	ldr	w0, [sp, #28]
  425da0:	cmp	w1, w0
  425da4:	b.ne	425d4c <wcrtomb@plt+0x2103c>  // b.any
  425da8:	b	425db0 <wcrtomb@plt+0x210a0>
  425dac:	nop
  425db0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425db4:	add	x0, x0, #0xa70
  425db8:	ldr	w1, [sp, #28]
  425dbc:	str	w1, [x0]
  425dc0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425dc4:	add	x0, x0, #0x30
  425dc8:	ldr	w1, [sp, #28]
  425dcc:	str	w1, [x0]
  425dd0:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  425dd4:	add	x0, x0, #0x8b0
  425dd8:	ldr	w1, [sp, #76]
  425ddc:	str	w1, [x0]
  425de0:	nop
  425de4:	ldp	x29, x30, [sp], #80
  425de8:	ret
  425dec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425df0:	add	x0, x0, #0xa58
  425df4:	ldr	x2, [x0]
  425df8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425dfc:	add	x0, x0, #0x30
  425e00:	ldr	w0, [x0]
  425e04:	sxtw	x1, w0
  425e08:	mov	x0, x1
  425e0c:	lsl	x0, x0, #1
  425e10:	add	x0, x0, x1
  425e14:	lsl	x0, x0, #3
  425e18:	add	x0, x2, x0
  425e1c:	ldr	x0, [x0]
  425e20:	ret
  425e24:	stp	x29, x30, [sp, #-32]!
  425e28:	mov	x29, sp
  425e2c:	str	w0, [sp, #28]
  425e30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425e34:	add	x0, x0, #0xa58
  425e38:	ldr	x0, [x0]
  425e3c:	cmp	x0, #0x0
  425e40:	b.ne	425e7c <wcrtomb@plt+0x2116c>  // b.any
  425e44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425e48:	add	x0, x0, #0xab8
  425e4c:	ldr	x0, [x0]
  425e50:	cmp	x0, #0x0
  425e54:	b.ne	425e6c <wcrtomb@plt+0x2115c>  // b.any
  425e58:	bl	45b884 <argp_usage@@Base+0x12798>
  425e5c:	mov	x1, x0
  425e60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425e64:	add	x0, x0, #0xab8
  425e68:	str	x1, [x0]
  425e6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425e70:	add	x0, x0, #0xab8
  425e74:	ldr	x0, [x0]
  425e78:	b	425ea4 <wcrtomb@plt+0x21194>
  425e7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425e80:	add	x0, x0, #0xa58
  425e84:	ldr	x2, [x0]
  425e88:	ldrsw	x1, [sp, #28]
  425e8c:	mov	x0, x1
  425e90:	lsl	x0, x0, #1
  425e94:	add	x0, x0, x1
  425e98:	lsl	x0, x0, #3
  425e9c:	add	x0, x2, x0
  425ea0:	ldr	x0, [x0, #8]
  425ea4:	ldp	x29, x30, [sp], #32
  425ea8:	ret
  425eac:	stp	x29, x30, [sp, #-32]!
  425eb0:	mov	x29, sp
  425eb4:	str	x0, [sp, #24]
  425eb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425ebc:	add	x0, x0, #0x3e9
  425ec0:	ldrb	w0, [x0]
  425ec4:	cmp	w0, #0x0
  425ec8:	b.eq	425ef0 <wcrtomb@plt+0x211e0>  // b.none
  425ecc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425ed0:	add	x0, x0, #0x24c
  425ed4:	ldr	w0, [x0]
  425ed8:	and	w0, w0, #0x800000
  425edc:	cmp	w0, #0x0
  425ee0:	b.eq	425ef8 <wcrtomb@plt+0x211e8>  // b.none
  425ee4:	ldr	x0, [sp, #24]
  425ee8:	bl	43a4b8 <wcrtomb@plt+0x357a8>
  425eec:	b	425ef8 <wcrtomb@plt+0x211e8>
  425ef0:	ldr	x0, [sp, #24]
  425ef4:	bl	43a490 <wcrtomb@plt+0x35780>
  425ef8:	nop
  425efc:	ldp	x29, x30, [sp], #32
  425f00:	ret
  425f04:	stp	x29, x30, [sp, #-32]!
  425f08:	mov	x29, sp
  425f0c:	str	x0, [sp, #24]
  425f10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425f14:	add	x0, x0, #0x3e9
  425f18:	ldrb	w0, [x0]
  425f1c:	cmp	w0, #0x0
  425f20:	b.eq	425f48 <wcrtomb@plt+0x21238>  // b.none
  425f24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425f28:	add	x0, x0, #0x24c
  425f2c:	ldr	w0, [x0]
  425f30:	and	w0, w0, #0x800000
  425f34:	cmp	w0, #0x0
  425f38:	b.eq	425f50 <wcrtomb@plt+0x21240>  // b.none
  425f3c:	ldr	x0, [sp, #24]
  425f40:	bl	43a65c <wcrtomb@plt+0x3594c>
  425f44:	b	425f50 <wcrtomb@plt+0x21240>
  425f48:	ldr	x0, [sp, #24]
  425f4c:	bl	43a618 <wcrtomb@plt+0x35908>
  425f50:	nop
  425f54:	ldp	x29, x30, [sp], #32
  425f58:	ret
  425f5c:	stp	x29, x30, [sp, #-48]!
  425f60:	mov	x29, sp
  425f64:	str	x0, [sp, #40]
  425f68:	str	x1, [sp, #32]
  425f6c:	str	x2, [sp, #24]
  425f70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425f74:	add	x0, x0, #0x3e9
  425f78:	ldrb	w0, [x0]
  425f7c:	cmp	w0, #0x0
  425f80:	b.eq	425fb0 <wcrtomb@plt+0x212a0>  // b.none
  425f84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425f88:	add	x0, x0, #0x24c
  425f8c:	ldr	w0, [x0]
  425f90:	and	w0, w0, #0x800000
  425f94:	cmp	w0, #0x0
  425f98:	b.eq	425fc0 <wcrtomb@plt+0x212b0>  // b.none
  425f9c:	ldr	x2, [sp, #24]
  425fa0:	ldr	x1, [sp, #32]
  425fa4:	ldr	x0, [sp, #40]
  425fa8:	bl	43a764 <wcrtomb@plt+0x35a54>
  425fac:	b	425fc0 <wcrtomb@plt+0x212b0>
  425fb0:	ldr	x2, [sp, #24]
  425fb4:	ldr	x1, [sp, #32]
  425fb8:	ldr	x0, [sp, #40]
  425fbc:	bl	43a6ac <wcrtomb@plt+0x3599c>
  425fc0:	nop
  425fc4:	ldp	x29, x30, [sp], #48
  425fc8:	ret
  425fcc:	stp	x29, x30, [sp, #-32]!
  425fd0:	mov	x29, sp
  425fd4:	str	x0, [sp, #24]
  425fd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  425fdc:	add	x0, x0, #0x3e9
  425fe0:	ldrb	w0, [x0]
  425fe4:	cmp	w0, #0x0
  425fe8:	b.eq	426010 <wcrtomb@plt+0x21300>  // b.none
  425fec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  425ff0:	add	x0, x0, #0x24c
  425ff4:	ldr	w0, [x0]
  425ff8:	and	w0, w0, #0x800000
  425ffc:	cmp	w0, #0x0
  426000:	b.eq	426018 <wcrtomb@plt+0x21308>  // b.none
  426004:	ldr	x0, [sp, #24]
  426008:	bl	43a8ec <wcrtomb@plt+0x35bdc>
  42600c:	b	426018 <wcrtomb@plt+0x21308>
  426010:	ldr	x0, [sp, #24]
  426014:	bl	43a8c4 <wcrtomb@plt+0x35bb4>
  426018:	nop
  42601c:	ldp	x29, x30, [sp], #32
  426020:	ret
  426024:	stp	x29, x30, [sp, #-32]!
  426028:	mov	x29, sp
  42602c:	str	x0, [sp, #24]
  426030:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426034:	add	x0, x0, #0x3e9
  426038:	ldrb	w0, [x0]
  42603c:	cmp	w0, #0x0
  426040:	b.eq	426068 <wcrtomb@plt+0x21358>  // b.none
  426044:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426048:	add	x0, x0, #0x24c
  42604c:	ldr	w0, [x0]
  426050:	and	w0, w0, #0x800000
  426054:	cmp	w0, #0x0
  426058:	b.eq	426070 <wcrtomb@plt+0x21360>  // b.none
  42605c:	ldr	x0, [sp, #24]
  426060:	bl	43a964 <wcrtomb@plt+0x35c54>
  426064:	b	426070 <wcrtomb@plt+0x21360>
  426068:	ldr	x0, [sp, #24]
  42606c:	bl	43a93c <wcrtomb@plt+0x35c2c>
  426070:	nop
  426074:	ldp	x29, x30, [sp], #32
  426078:	ret
  42607c:	stp	x29, x30, [sp, #-32]!
  426080:	mov	x29, sp
  426084:	str	x0, [sp, #24]
  426088:	str	x1, [sp, #16]
  42608c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426090:	add	x0, x0, #0x3e9
  426094:	ldrb	w0, [x0]
  426098:	cmp	w0, #0x0
  42609c:	b.eq	4260c8 <wcrtomb@plt+0x213b8>  // b.none
  4260a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4260a4:	add	x0, x0, #0x24c
  4260a8:	ldr	w0, [x0]
  4260ac:	and	w0, w0, #0x800000
  4260b0:	cmp	w0, #0x0
  4260b4:	b.eq	4260d4 <wcrtomb@plt+0x213c4>  // b.none
  4260b8:	ldr	x1, [sp, #16]
  4260bc:	ldr	x0, [sp, #24]
  4260c0:	bl	43aa80 <wcrtomb@plt+0x35d70>
  4260c4:	b	4260d4 <wcrtomb@plt+0x213c4>
  4260c8:	ldr	x1, [sp, #16]
  4260cc:	ldr	x0, [sp, #24]
  4260d0:	bl	43a9b4 <wcrtomb@plt+0x35ca4>
  4260d4:	nop
  4260d8:	ldp	x29, x30, [sp], #32
  4260dc:	ret
  4260e0:	stp	x29, x30, [sp, #-32]!
  4260e4:	mov	x29, sp
  4260e8:	str	x0, [sp, #24]
  4260ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4260f0:	add	x0, x0, #0x3e9
  4260f4:	ldrb	w0, [x0]
  4260f8:	cmp	w0, #0x0
  4260fc:	b.eq	426124 <wcrtomb@plt+0x21414>  // b.none
  426100:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426104:	add	x0, x0, #0x24c
  426108:	ldr	w0, [x0]
  42610c:	and	w0, w0, #0x800000
  426110:	cmp	w0, #0x0
  426114:	b.eq	42612c <wcrtomb@plt+0x2141c>  // b.none
  426118:	ldr	x0, [sp, #24]
  42611c:	bl	43abfc <wcrtomb@plt+0x35eec>
  426120:	b	42612c <wcrtomb@plt+0x2141c>
  426124:	ldr	x0, [sp, #24]
  426128:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  42612c:	nop
  426130:	ldp	x29, x30, [sp], #32
  426134:	ret
  426138:	stp	x29, x30, [sp, #-64]!
  42613c:	mov	x29, sp
  426140:	str	x19, [sp, #16]
  426144:	str	x0, [sp, #56]
  426148:	strb	w1, [sp, #55]
  42614c:	str	x2, [sp, #40]
  426150:	ldrb	w0, [sp, #55]
  426154:	eor	w0, w0, #0x1
  426158:	and	w0, w0, #0xff
  42615c:	cmp	w0, #0x0
  426160:	b.eq	4261e8 <wcrtomb@plt+0x214d8>  // b.none
  426164:	bl	404bc0 <__errno_location@plt>
  426168:	ldr	w0, [x0]
  42616c:	cmp	w0, #0x2
  426170:	b.ne	4261e8 <wcrtomb@plt+0x214d8>  // b.any
  426174:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426178:	add	x0, x0, #0x24c
  42617c:	ldr	w0, [x0]
  426180:	and	w0, w0, #0x40
  426184:	cmp	w0, #0x0
  426188:	b.eq	4261dc <wcrtomb@plt+0x214cc>  // b.none
  42618c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426190:	add	x0, x0, #0x420
  426194:	ldr	x0, [x0]
  426198:	cmp	x0, #0x0
  42619c:	b.eq	4261b0 <wcrtomb@plt+0x214a0>  // b.none
  4261a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4261a4:	add	x0, x0, #0x420
  4261a8:	ldr	x0, [x0]
  4261ac:	blr	x0
  4261b0:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  4261b4:	add	x0, x0, #0x898
  4261b8:	bl	404c60 <gettext@plt>
  4261bc:	mov	x19, x0
  4261c0:	ldr	x0, [sp, #56]
  4261c4:	bl	459cd8 <argp_usage@@Base+0x10bec>
  4261c8:	mov	x3, x0
  4261cc:	mov	x2, x19
  4261d0:	mov	w1, #0x0                   	// #0
  4261d4:	mov	w0, #0x0                   	// #0
  4261d8:	bl	404100 <error@plt>
  4261dc:	mov	w0, #0x1                   	// #1
  4261e0:	bl	434ff4 <wcrtomb@plt+0x302e4>
  4261e4:	b	4261f8 <wcrtomb@plt+0x214e8>
  4261e8:	ldr	x1, [sp, #40]
  4261ec:	ldr	x0, [sp, #56]
  4261f0:	blr	x1
  4261f4:	nop
  4261f8:	nop
  4261fc:	ldr	x19, [sp, #16]
  426200:	ldp	x29, x30, [sp], #64
  426204:	ret
  426208:	stp	x29, x30, [sp, #-32]!
  42620c:	mov	x29, sp
  426210:	bl	4042a0 <fork@plt>
  426214:	str	w0, [sp, #28]
  426218:	ldr	w0, [sp, #28]
  42621c:	cmn	w0, #0x1
  426220:	b.ne	426240 <wcrtomb@plt+0x21530>  // b.any
  426224:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  426228:	add	x0, x0, #0x8c0
  42622c:	bl	404c60 <gettext@plt>
  426230:	mov	x1, x0
  426234:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  426238:	add	x0, x0, #0x8d0
  42623c:	bl	43a240 <wcrtomb@plt+0x35530>
  426240:	ldr	w0, [sp, #28]
  426244:	ldp	x29, x30, [sp], #32
  426248:	ret
  42624c:	stp	x29, x30, [sp, #-32]!
  426250:	mov	x29, sp
  426254:	str	x0, [sp, #24]
  426258:	ldr	x0, [sp, #24]
  42625c:	bl	404210 <pipe@plt>
  426260:	cmp	w0, #0x0
  426264:	b.ge	426284 <wcrtomb@plt+0x21574>  // b.tcont
  426268:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42626c:	add	x0, x0, #0x8d8
  426270:	bl	404c60 <gettext@plt>
  426274:	mov	x1, x0
  426278:	adrp	x0, 481000 <_obstack_memory_used@@Base+0x23ec0>
  42627c:	add	x0, x0, #0x8f0
  426280:	bl	43a240 <wcrtomb@plt+0x35530>
  426284:	nop
  426288:	ldp	x29, x30, [sp], #32
  42628c:	ret
  426290:	sub	sp, sp, #0x20
  426294:	str	x0, [sp, #8]
  426298:	str	x1, [sp]
  42629c:	ldr	x0, [sp, #8]
  4262a0:	str	x0, [sp, #24]
  4262a4:	ldr	x0, [sp]
  4262a8:	sub	x0, x0, #0x1
  4262ac:	ldr	x1, [sp, #24]
  4262b0:	add	x0, x1, x0
  4262b4:	str	x0, [sp, #16]
  4262b8:	ldr	x0, [sp, #16]
  4262bc:	ldr	x1, [sp]
  4262c0:	udiv	x2, x0, x1
  4262c4:	ldr	x1, [sp]
  4262c8:	mul	x1, x2, x1
  4262cc:	sub	x0, x0, x1
  4262d0:	neg	x0, x0
  4262d4:	ldr	x1, [sp, #16]
  4262d8:	add	x0, x1, x0
  4262dc:	add	sp, sp, #0x20
  4262e0:	ret
  4262e4:	stp	x29, x30, [sp, #-48]!
  4262e8:	mov	x29, sp
  4262ec:	str	x0, [sp, #24]
  4262f0:	str	x1, [sp, #16]
  4262f4:	bl	404600 <getpagesize@plt>
  4262f8:	sxtw	x0, w0
  4262fc:	str	x0, [sp, #40]
  426300:	ldr	x1, [sp, #16]
  426304:	ldr	x0, [sp, #40]
  426308:	add	x0, x1, x0
  42630c:	str	x0, [sp, #32]
  426310:	ldr	x1, [sp, #32]
  426314:	ldr	x0, [sp, #16]
  426318:	cmp	x1, x0
  42631c:	b.cs	426324 <wcrtomb@plt+0x21614>  // b.hs, b.nlast
  426320:	bl	412b2c <wcrtomb@plt+0xde1c>
  426324:	ldr	x0, [sp, #32]
  426328:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  42632c:	mov	x1, x0
  426330:	ldr	x0, [sp, #24]
  426334:	str	x1, [x0]
  426338:	ldr	x0, [sp, #24]
  42633c:	ldr	x0, [x0]
  426340:	ldr	x1, [sp, #40]
  426344:	bl	426290 <wcrtomb@plt+0x21580>
  426348:	ldp	x29, x30, [sp], #48
  42634c:	ret
  426350:	stp	x29, x30, [sp, #-48]!
  426354:	mov	x29, sp
  426358:	str	x0, [sp, #24]
  42635c:	mov	x0, #0x18                  	// #24
  426360:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  426364:	str	x0, [sp, #40]
  426368:	ldr	x0, [sp, #24]
  42636c:	bl	4040b0 <strlen@plt>
  426370:	add	x1, x0, #0x2
  426374:	ldr	x0, [sp, #40]
  426378:	str	x1, [x0, #8]
  42637c:	ldr	x0, [sp, #40]
  426380:	ldr	x0, [x0, #8]
  426384:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  426388:	mov	x1, x0
  42638c:	ldr	x0, [sp, #40]
  426390:	str	x1, [x0]
  426394:	ldr	x0, [sp, #40]
  426398:	ldr	x0, [x0]
  42639c:	ldr	x1, [sp, #24]
  4263a0:	bl	4049d0 <strcpy@plt>
  4263a4:	ldr	x0, [sp, #40]
  4263a8:	ldr	x0, [x0]
  4263ac:	bl	4040b0 <strlen@plt>
  4263b0:	mov	x1, x0
  4263b4:	ldr	x0, [sp, #40]
  4263b8:	str	x1, [x0, #16]
  4263bc:	ldr	x0, [sp, #40]
  4263c0:	ldr	x1, [x0]
  4263c4:	ldr	x0, [sp, #40]
  4263c8:	ldr	x0, [x0, #16]
  4263cc:	sub	x0, x0, #0x1
  4263d0:	add	x0, x1, x0
  4263d4:	ldrb	w0, [x0]
  4263d8:	cmp	w0, #0x2f
  4263dc:	b.eq	426408 <wcrtomb@plt+0x216f8>  // b.none
  4263e0:	ldr	x0, [sp, #40]
  4263e4:	ldr	x1, [x0]
  4263e8:	ldr	x0, [sp, #40]
  4263ec:	ldr	x0, [x0, #16]
  4263f0:	add	x3, x0, #0x1
  4263f4:	ldr	x2, [sp, #40]
  4263f8:	str	x3, [x2, #16]
  4263fc:	add	x0, x1, x0
  426400:	mov	w1, #0x2f                  	// #47
  426404:	strb	w1, [x0]
  426408:	ldr	x0, [sp, #40]
  42640c:	ldp	x29, x30, [sp], #48
  426410:	ret
  426414:	stp	x29, x30, [sp, #-32]!
  426418:	mov	x29, sp
  42641c:	str	x0, [sp, #24]
  426420:	ldr	x0, [sp, #24]
  426424:	ldr	x0, [x0]
  426428:	bl	404880 <free@plt>
  42642c:	ldr	x0, [sp, #24]
  426430:	bl	404880 <free@plt>
  426434:	nop
  426438:	ldp	x29, x30, [sp], #32
  42643c:	ret
  426440:	stp	x29, x30, [sp, #-48]!
  426444:	mov	x29, sp
  426448:	str	x0, [sp, #24]
  42644c:	str	x1, [sp, #16]
  426450:	ldr	x0, [sp, #16]
  426454:	bl	4040b0 <strlen@plt>
  426458:	str	x0, [sp, #40]
  42645c:	b	426488 <wcrtomb@plt+0x21778>
  426460:	ldr	x0, [sp, #24]
  426464:	ldr	x2, [x0]
  426468:	ldr	x0, [sp, #24]
  42646c:	add	x0, x0, #0x8
  426470:	mov	x1, x0
  426474:	mov	x0, x2
  426478:	bl	45b754 <argp_usage@@Base+0x12668>
  42647c:	mov	x1, x0
  426480:	ldr	x0, [sp, #24]
  426484:	str	x1, [x0]
  426488:	ldr	x0, [sp, #24]
  42648c:	ldr	x1, [x0, #16]
  426490:	ldr	x0, [sp, #40]
  426494:	add	x0, x1, x0
  426498:	add	x1, x0, #0x1
  42649c:	ldr	x0, [sp, #24]
  4264a0:	ldr	x0, [x0, #8]
  4264a4:	cmp	x1, x0
  4264a8:	b.cs	426460 <wcrtomb@plt+0x21750>  // b.hs, b.nlast
  4264ac:	ldr	x0, [sp, #24]
  4264b0:	ldr	x1, [x0]
  4264b4:	ldr	x0, [sp, #24]
  4264b8:	ldr	x0, [x0, #16]
  4264bc:	add	x0, x1, x0
  4264c0:	ldr	x1, [sp, #16]
  4264c4:	bl	4049d0 <strcpy@plt>
  4264c8:	ldr	x0, [sp, #24]
  4264cc:	ldr	x0, [x0]
  4264d0:	ldp	x29, x30, [sp], #48
  4264d4:	ret
  4264d8:	stp	x29, x30, [sp, #-48]!
  4264dc:	mov	x29, sp
  4264e0:	str	x19, [sp, #16]
  4264e4:	str	x0, [sp, #40]
  4264e8:	str	x1, [sp, #32]
  4264ec:	ldr	x0, [sp, #40]
  4264f0:	ldr	x1, [x0]
  4264f4:	ldr	x0, [sp, #40]
  4264f8:	ldr	x0, [x0, #16]
  4264fc:	sub	x0, x0, #0x1
  426500:	add	x0, x1, x0
  426504:	ldrb	w0, [x0]
  426508:	cmp	w0, #0x2f
  42650c:	b.eq	426534 <wcrtomb@plt+0x21824>  // b.none
  426510:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  426514:	add	x1, x0, #0x8b8
  426518:	ldr	x0, [sp, #40]
  42651c:	bl	426440 <wcrtomb@plt+0x21730>
  426520:	ldr	x0, [sp, #40]
  426524:	ldr	x0, [x0, #16]
  426528:	add	x1, x0, #0x1
  42652c:	ldr	x0, [sp, #40]
  426530:	str	x1, [x0, #16]
  426534:	ldr	x1, [sp, #32]
  426538:	ldr	x0, [sp, #40]
  42653c:	bl	426440 <wcrtomb@plt+0x21730>
  426540:	ldr	x0, [sp, #40]
  426544:	ldr	x19, [x0, #16]
  426548:	ldr	x0, [sp, #32]
  42654c:	bl	4040b0 <strlen@plt>
  426550:	add	x1, x19, x0
  426554:	ldr	x0, [sp, #40]
  426558:	str	x1, [x0, #16]
  42655c:	nop
  426560:	ldr	x19, [sp, #16]
  426564:	ldp	x29, x30, [sp], #48
  426568:	ret
  42656c:	stp	x29, x30, [sp, #-48]!
  426570:	mov	x29, sp
  426574:	str	x0, [sp, #24]
  426578:	ldr	x0, [sp, #24]
  42657c:	ldr	x0, [x0]
  426580:	str	x0, [sp, #40]
  426584:	ldr	x0, [sp, #24]
  426588:	ldr	x1, [x0]
  42658c:	ldr	x0, [sp, #24]
  426590:	ldr	x0, [x0, #16]
  426594:	sub	x0, x0, #0x1
  426598:	add	x0, x1, x0
  42659c:	ldrb	w0, [x0]
  4265a0:	cmp	w0, #0x2f
  4265a4:	b.ne	4265c0 <wcrtomb@plt+0x218b0>  // b.any
  4265a8:	ldr	x0, [sp, #24]
  4265ac:	ldr	x1, [x0]
  4265b0:	ldr	x0, [sp, #24]
  4265b4:	ldr	x0, [x0, #16]
  4265b8:	add	x0, x1, x0
  4265bc:	strb	wzr, [x0]
  4265c0:	ldr	x0, [sp, #24]
  4265c4:	bl	404880 <free@plt>
  4265c8:	ldr	x0, [sp, #40]
  4265cc:	ldp	x29, x30, [sp], #48
  4265d0:	ret
  4265d4:	stp	x29, x30, [sp, #-64]!
  4265d8:	mov	x29, sp
  4265dc:	str	x0, [sp, #24]
  4265e0:	str	w1, [sp, #20]
  4265e4:	str	xzr, [sp, #56]
  4265e8:	str	xzr, [sp, #48]
  4265ec:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4265f0:	add	x0, x0, #0x8b0
  4265f4:	ldr	w3, [x0]
  4265f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4265fc:	add	x0, x0, #0x2f4
  426600:	ldr	w0, [x0]
  426604:	orr	w0, w0, #0x4000
  426608:	mov	w2, w0
  42660c:	ldr	x1, [sp, #24]
  426610:	mov	w0, w3
  426614:	bl	404b90 <openat@plt>
  426618:	str	w0, [sp, #44]
  42661c:	ldr	w0, [sp, #44]
  426620:	cmp	w0, #0x0
  426624:	b.ge	426658 <wcrtomb@plt+0x21948>  // b.tcont
  426628:	ldr	w0, [sp, #20]
  42662c:	cmp	w0, #0x0
  426630:	b.ne	42664c <wcrtomb@plt+0x2193c>  // b.any
  426634:	bl	404bc0 <__errno_location@plt>
  426638:	ldr	w0, [x0]
  42663c:	cmp	w0, #0x2
  426640:	b.ne	42664c <wcrtomb@plt+0x2193c>  // b.any
  426644:	mov	x0, #0x0                   	// #0
  426648:	b	426708 <wcrtomb@plt+0x219f8>
  42664c:	ldr	x0, [sp, #24]
  426650:	bl	43a618 <wcrtomb@plt+0x35908>
  426654:	b	4266a0 <wcrtomb@plt+0x21990>
  426658:	ldr	w0, [sp, #44]
  42665c:	bl	4046c0 <fdopendir@plt>
  426660:	str	x0, [sp, #48]
  426664:	ldr	x0, [sp, #48]
  426668:	cmp	x0, #0x0
  42666c:	b.eq	426698 <wcrtomb@plt+0x21988>  // b.none
  426670:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426674:	add	x0, x0, #0x238
  426678:	ldr	w0, [x0]
  42667c:	mov	w1, w0
  426680:	ldr	x0, [sp, #48]
  426684:	bl	45a574 <argp_usage@@Base+0x11488>
  426688:	str	x0, [sp, #56]
  42668c:	ldr	x0, [sp, #56]
  426690:	cmp	x0, #0x0
  426694:	b.ne	4266a0 <wcrtomb@plt+0x21990>  // b.any
  426698:	ldr	x0, [sp, #24]
  42669c:	bl	43a93c <wcrtomb@plt+0x35c2c>
  4266a0:	ldr	x0, [sp, #48]
  4266a4:	cmp	x0, #0x0
  4266a8:	b.eq	4266c4 <wcrtomb@plt+0x219b4>  // b.none
  4266ac:	ldr	x0, [sp, #48]
  4266b0:	bl	404630 <closedir@plt>
  4266b4:	cmp	w0, #0x0
  4266b8:	cset	w0, ne  // ne = any
  4266bc:	and	w0, w0, #0xff
  4266c0:	b	4266f4 <wcrtomb@plt+0x219e4>
  4266c4:	ldr	w0, [sp, #44]
  4266c8:	cmp	w0, #0x0
  4266cc:	b.lt	4266e8 <wcrtomb@plt+0x219d8>  // b.tstop
  4266d0:	ldr	w0, [sp, #44]
  4266d4:	bl	404660 <close@plt>
  4266d8:	cmp	w0, #0x0
  4266dc:	b.eq	4266e8 <wcrtomb@plt+0x219d8>  // b.none
  4266e0:	mov	w0, #0x1                   	// #1
  4266e4:	b	4266ec <wcrtomb@plt+0x219dc>
  4266e8:	mov	w0, #0x0                   	// #0
  4266ec:	and	w0, w0, #0x1
  4266f0:	and	w0, w0, #0xff
  4266f4:	cmp	w0, #0x0
  4266f8:	b.eq	426704 <wcrtomb@plt+0x219f4>  // b.none
  4266fc:	ldr	x0, [sp, #24]
  426700:	bl	43a93c <wcrtomb@plt+0x35c2c>
  426704:	ldr	x0, [sp, #56]
  426708:	ldp	x29, x30, [sp], #64
  42670c:	ret
  426710:	sub	sp, sp, #0x20
  426714:	str	w0, [sp, #12]
  426718:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  42671c:	add	x0, x0, #0x8c0
  426720:	str	x0, [sp, #24]
  426724:	b	426750 <wcrtomb@plt+0x21a40>
  426728:	ldr	x0, [sp, #24]
  42672c:	ldr	w0, [x0, #8]
  426730:	ldr	w1, [sp, #12]
  426734:	cmp	w1, w0
  426738:	b.ne	426744 <wcrtomb@plt+0x21a34>  // b.any
  42673c:	ldr	x0, [sp, #24]
  426740:	b	426784 <wcrtomb@plt+0x21a74>
  426744:	ldr	x0, [sp, #24]
  426748:	add	x0, x0, #0x30
  42674c:	str	x0, [sp, #24]
  426750:	ldr	x0, [sp, #24]
  426754:	ldr	x0, [x0]
  426758:	cmp	x0, #0x0
  42675c:	b.ne	426728 <wcrtomb@plt+0x21a18>  // b.any
  426760:	ldr	x0, [sp, #24]
  426764:	ldr	w0, [x0, #8]
  426768:	cmp	w0, #0x0
  42676c:	b.ne	426728 <wcrtomb@plt+0x21a18>  // b.any
  426770:	ldr	x0, [sp, #24]
  426774:	ldr	x0, [x0, #32]
  426778:	cmp	x0, #0x0
  42677c:	b.ne	426728 <wcrtomb@plt+0x21a18>  // b.any
  426780:	mov	x0, #0x0                   	// #0
  426784:	add	sp, sp, #0x20
  426788:	ret
  42678c:	stp	x29, x30, [sp, #-48]!
  426790:	mov	x29, sp
  426794:	str	w0, [sp, #28]
  426798:	ldr	w0, [sp, #28]
  42679c:	bl	426710 <wcrtomb@plt+0x21a00>
  4267a0:	str	x0, [sp, #40]
  4267a4:	ldr	x0, [sp, #40]
  4267a8:	cmp	x0, #0x0
  4267ac:	b.eq	4267bc <wcrtomb@plt+0x21aac>  // b.none
  4267b0:	ldr	x0, [sp, #40]
  4267b4:	ldr	x0, [x0]
  4267b8:	b	4267c0 <wcrtomb@plt+0x21ab0>
  4267bc:	mov	x0, #0x0                   	// #0
  4267c0:	ldp	x29, x30, [sp], #48
  4267c4:	ret
  4267c8:	stp	x29, x30, [sp, #-32]!
  4267cc:	mov	x29, sp
  4267d0:	str	w0, [sp, #28]
  4267d4:	ldr	w0, [sp, #28]
  4267d8:	bl	426710 <wcrtomb@plt+0x21a00>
  4267dc:	cmp	x0, #0x0
  4267e0:	cset	w0, ne  // ne = any
  4267e4:	and	w0, w0, #0xff
  4267e8:	ldp	x29, x30, [sp], #32
  4267ec:	ret
  4267f0:	stp	x29, x30, [sp, #-48]!
  4267f4:	mov	x29, sp
  4267f8:	str	w0, [sp, #44]
  4267fc:	str	x1, [sp, #32]
  426800:	str	x2, [sp, #24]
  426804:	ldr	w0, [sp, #44]
  426808:	cmp	w0, #0x100
  42680c:	b.eq	426850 <wcrtomb@plt+0x21b40>  // b.none
  426810:	ldr	w0, [sp, #44]
  426814:	cmp	w0, #0x100
  426818:	b.gt	42685c <wcrtomb@plt+0x21b4c>
  42681c:	ldr	w0, [sp, #44]
  426820:	cmp	w0, #0x43
  426824:	b.eq	426838 <wcrtomb@plt+0x21b28>  // b.none
  426828:	ldr	w0, [sp, #44]
  42682c:	cmp	w0, #0x54
  426830:	b.eq	426844 <wcrtomb@plt+0x21b34>  // b.none
  426834:	b	42685c <wcrtomb@plt+0x21b4c>
  426838:	ldr	x0, [sp, #32]
  42683c:	bl	42782c <wcrtomb@plt+0x22b1c>
  426840:	b	426888 <wcrtomb@plt+0x21b78>
  426844:	ldr	x0, [sp, #32]
  426848:	bl	427864 <wcrtomb@plt+0x22b54>
  42684c:	b	426888 <wcrtomb@plt+0x21b78>
  426850:	ldr	x0, [sp, #32]
  426854:	bl	427794 <wcrtomb@plt+0x22a84>
  426858:	b	426888 <wcrtomb@plt+0x21b78>
  42685c:	ldr	w0, [sp, #44]
  426860:	bl	4267c8 <wcrtomb@plt+0x21ab8>
  426864:	and	w0, w0, #0xff
  426868:	cmp	w0, #0x0
  42686c:	b.eq	426880 <wcrtomb@plt+0x21b70>  // b.none
  426870:	ldr	x1, [sp, #32]
  426874:	ldr	w0, [sp, #44]
  426878:	bl	4277e4 <wcrtomb@plt+0x22ad4>
  42687c:	b	426888 <wcrtomb@plt+0x21b78>
  426880:	mov	w0, #0x7                   	// #7
  426884:	b	42688c <wcrtomb@plt+0x21b7c>
  426888:	mov	w0, #0x0                   	// #0
  42688c:	ldp	x29, x30, [sp], #48
  426890:	ret
  426894:	stp	x29, x30, [sp, #-48]!
  426898:	mov	x29, sp
  42689c:	str	x0, [sp, #24]
  4268a0:	str	w1, [sp, #20]
  4268a4:	str	wzr, [sp, #44]
  4268a8:	b	4268e8 <wcrtomb@plt+0x21bd8>
  4268ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4268b0:	add	x0, x0, #0x70
  4268b4:	ldr	x3, [x0]
  4268b8:	ldrsw	x0, [sp, #44]
  4268bc:	lsl	x0, x0, #3
  4268c0:	ldr	x1, [sp, #24]
  4268c4:	add	x0, x1, x0
  4268c8:	ldr	x0, [x0]
  4268cc:	ldr	w2, [sp, #20]
  4268d0:	mov	x1, x0
  4268d4:	mov	x0, x3
  4268d8:	bl	44ae84 <argp_usage@@Base+0x1d98>
  4268dc:	ldr	w0, [sp, #44]
  4268e0:	add	w0, w0, #0x1
  4268e4:	str	w0, [sp, #44]
  4268e8:	ldrsw	x0, [sp, #44]
  4268ec:	lsl	x0, x0, #3
  4268f0:	ldr	x1, [sp, #24]
  4268f4:	add	x0, x1, x0
  4268f8:	ldr	x0, [x0]
  4268fc:	cmp	x0, #0x0
  426900:	b.ne	4268ac <wcrtomb@plt+0x21b9c>  // b.any
  426904:	nop
  426908:	nop
  42690c:	ldp	x29, x30, [sp], #48
  426910:	ret
  426914:	stp	x29, x30, [sp, #-48]!
  426918:	mov	x29, sp
  42691c:	str	w0, [sp, #28]
  426920:	str	x1, [sp, #16]
  426924:	ldr	w0, [sp, #28]
  426928:	sub	w0, w0, #0x58
  42692c:	cmp	w0, #0xc4
  426930:	b.hi	426cf0 <wcrtomb@plt+0x21fe0>  // b.pmore
  426934:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426938:	add	x1, x1, #0x408
  42693c:	ldr	w0, [x1, w0, uxtw #2]
  426940:	adr	x1, 42694c <wcrtomb@plt+0x21c3c>
  426944:	add	x0, x1, w0, sxtw #2
  426948:	br	x0
  42694c:	mov	w1, #0x10000000            	// #268435456
  426950:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426954:	add	x0, x0, #0x3b0
  426958:	bl	426894 <wcrtomb@plt+0x21b84>
  42695c:	b	426d34 <wcrtomb@plt+0x22024>
  426960:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426964:	add	x0, x0, #0x70
  426968:	ldr	x3, [x0]
  42696c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426970:	add	x0, x0, #0xac4
  426974:	ldr	w0, [x0]
  426978:	cmp	w0, #0x1
  42697c:	b.eq	426988 <wcrtomb@plt+0x21c78>  // b.none
  426980:	mov	w0, #0x10000000            	// #268435456
  426984:	b	42698c <wcrtomb@plt+0x21c7c>
  426988:	mov	w0, #0x0                   	// #0
  42698c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426990:	add	x1, x1, #0xac8
  426994:	ldr	w1, [x1]
  426998:	orr	w1, w0, w1
  42699c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4269a0:	add	x0, x0, #0x2d4
  4269a4:	ldr	w0, [x0]
  4269a8:	orr	w0, w1, w0
  4269ac:	mov	w2, w0
  4269b0:	ldr	x1, [sp, #16]
  4269b4:	mov	x0, x3
  4269b8:	bl	44ae84 <argp_usage@@Base+0x1d98>
  4269bc:	b	426d34 <wcrtomb@plt+0x22024>
  4269c0:	adrp	x0, 40d000 <wcrtomb@plt+0x82f0>
  4269c4:	add	x2, x0, #0x1e4
  4269c8:	mov	w1, #0x1                   	// #1
  4269cc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  4269d0:	add	x0, x0, #0x3d0
  4269d4:	bl	40cfa4 <wcrtomb@plt+0x8294>
  4269d8:	b	426d34 <wcrtomb@plt+0x22024>
  4269dc:	adrp	x0, 40d000 <wcrtomb@plt+0x82f0>
  4269e0:	add	x2, x0, #0x1e4
  4269e4:	mov	w1, #0x2                   	// #2
  4269e8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  4269ec:	add	x0, x0, #0x3d0
  4269f0:	bl	40cfa4 <wcrtomb@plt+0x8294>
  4269f4:	b	426d34 <wcrtomb@plt+0x22024>
  4269f8:	adrp	x0, 40d000 <wcrtomb@plt+0x82f0>
  4269fc:	add	x2, x0, #0x1e4
  426a00:	mov	w1, #0x3                   	// #3
  426a04:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426a08:	add	x0, x0, #0x3d0
  426a0c:	bl	40cfa4 <wcrtomb@plt+0x8294>
  426a10:	b	426d34 <wcrtomb@plt+0x22024>
  426a14:	mov	w1, #0x2                   	// #2
  426a18:	ldr	x0, [sp, #16]
  426a1c:	bl	412b5c <wcrtomb@plt+0xde4c>
  426a20:	b	426d34 <wcrtomb@plt+0x22024>
  426a24:	mov	w1, #0x1                   	// #1
  426a28:	ldr	x0, [sp, #16]
  426a2c:	bl	412b5c <wcrtomb@plt+0xde4c>
  426a30:	b	426d34 <wcrtomb@plt+0x22024>
  426a34:	mov	x2, #0x0                   	// #0
  426a38:	mov	w1, #0x1                   	// #1
  426a3c:	ldr	x0, [sp, #16]
  426a40:	bl	40cfa4 <wcrtomb@plt+0x8294>
  426a44:	b	426d34 <wcrtomb@plt+0x22024>
  426a48:	mov	x2, #0x0                   	// #0
  426a4c:	mov	w1, #0x2                   	// #2
  426a50:	ldr	x0, [sp, #16]
  426a54:	bl	40cfa4 <wcrtomb@plt+0x8294>
  426a58:	b	426d34 <wcrtomb@plt+0x22024>
  426a5c:	mov	x2, #0x0                   	// #0
  426a60:	mov	w1, #0x3                   	// #3
  426a64:	ldr	x0, [sp, #16]
  426a68:	bl	40cfa4 <wcrtomb@plt+0x8294>
  426a6c:	b	426d34 <wcrtomb@plt+0x22024>
  426a70:	mov	w1, #0x0                   	// #0
  426a74:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426a78:	add	x0, x0, #0x2e8
  426a7c:	bl	426894 <wcrtomb@plt+0x21b84>
  426a80:	b	426d34 <wcrtomb@plt+0x22024>
  426a84:	bl	413648 <wcrtomb@plt+0xe938>
  426a88:	b	426d34 <wcrtomb@plt+0x22024>
  426a8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426a90:	add	x0, x0, #0x2d4
  426a94:	mov	w1, #0x8                   	// #8
  426a98:	str	w1, [x0]
  426a9c:	b	426d34 <wcrtomb@plt+0x22024>
  426aa0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426aa4:	add	x0, x0, #0x2d4
  426aa8:	str	wzr, [x0]
  426aac:	b	426d34 <wcrtomb@plt+0x22024>
  426ab0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426ab4:	add	x0, x0, #0x324
  426ab8:	mov	w1, #0x1                   	// #1
  426abc:	strb	w1, [x0]
  426ac0:	b	426d34 <wcrtomb@plt+0x22024>
  426ac4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426ac8:	add	x0, x0, #0x324
  426acc:	strb	wzr, [x0]
  426ad0:	b	426d34 <wcrtomb@plt+0x22024>
  426ad4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  426ad8:	add	x0, x0, #0xf50
  426adc:	strb	wzr, [x0]
  426ae0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426ae4:	add	x0, x0, #0xac0
  426ae8:	mov	w1, #0x1                   	// #1
  426aec:	strb	w1, [x0]
  426af0:	b	426d34 <wcrtomb@plt+0x22024>
  426af4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  426af8:	add	x0, x0, #0xf50
  426afc:	mov	w1, #0xa                   	// #10
  426b00:	strb	w1, [x0]
  426b04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426b08:	add	x0, x0, #0xac0
  426b0c:	strb	wzr, [x0]
  426b10:	b	426d34 <wcrtomb@plt+0x22024>
  426b14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426b18:	add	x0, x0, #0x70
  426b1c:	ldr	x5, [x0]
  426b20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426b24:	add	x0, x0, #0xac4
  426b28:	ldr	w0, [x0]
  426b2c:	cmp	w0, #0x1
  426b30:	b.eq	426b3c <wcrtomb@plt+0x21e2c>  // b.none
  426b34:	mov	w0, #0x10000000            	// #268435456
  426b38:	b	426b40 <wcrtomb@plt+0x21e30>
  426b3c:	mov	w0, #0x0                   	// #0
  426b40:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426b44:	add	x1, x1, #0xac8
  426b48:	ldr	w1, [x1]
  426b4c:	orr	w1, w0, w1
  426b50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426b54:	add	x0, x0, #0x2d4
  426b58:	ldr	w0, [x0]
  426b5c:	orr	w0, w1, w0
  426b60:	mov	w4, #0xa                   	// #10
  426b64:	mov	w3, w0
  426b68:	ldr	x2, [sp, #16]
  426b6c:	mov	x1, x5
  426b70:	adrp	x0, 44a000 <argp_usage@@Base+0xf14>
  426b74:	add	x0, x0, #0xe84
  426b78:	bl	44b4a0 <argp_usage@@Base+0x23b4>
  426b7c:	cmp	w0, #0x0
  426b80:	b.eq	426d30 <wcrtomb@plt+0x22020>  // b.none
  426b84:	bl	404bc0 <__errno_location@plt>
  426b88:	ldr	w0, [x0]
  426b8c:	str	w0, [sp, #44]
  426b90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426b94:	add	x0, x0, #0x420
  426b98:	ldr	x0, [x0]
  426b9c:	cmp	x0, #0x0
  426ba0:	b.eq	426bb4 <wcrtomb@plt+0x21ea4>  // b.none
  426ba4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426ba8:	add	x0, x0, #0x420
  426bac:	ldr	x0, [x0]
  426bb0:	blr	x0
  426bb4:	ldr	x0, [sp, #16]
  426bb8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  426bbc:	mov	x3, x0
  426bc0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426bc4:	add	x2, x0, #0x3e0
  426bc8:	ldr	w1, [sp, #44]
  426bcc:	mov	w0, #0x0                   	// #0
  426bd0:	bl	404100 <error@plt>
  426bd4:	bl	412ae0 <wcrtomb@plt+0xddd0>
  426bd8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426bdc:	add	x0, x0, #0xac8
  426be0:	ldr	w0, [x0]
  426be4:	orr	w1, w0, #0x40000000
  426be8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426bec:	add	x0, x0, #0xac8
  426bf0:	str	w1, [x0]
  426bf4:	b	426d34 <wcrtomb@plt+0x22024>
  426bf8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  426bfc:	add	x0, x0, #0xf54
  426c00:	str	wzr, [x0]
  426c04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c08:	add	x0, x0, #0xac8
  426c0c:	ldr	w0, [x0]
  426c10:	and	w1, w0, #0xbfffffff
  426c14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c18:	add	x0, x0, #0xac8
  426c1c:	str	w1, [x0]
  426c20:	b	426d34 <wcrtomb@plt+0x22024>
  426c24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c28:	add	x0, x0, #0xac8
  426c2c:	ldr	w0, [x0]
  426c30:	orr	w1, w0, #0x10
  426c34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c38:	add	x0, x0, #0xac8
  426c3c:	str	w1, [x0]
  426c40:	b	426d34 <wcrtomb@plt+0x22024>
  426c44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c48:	add	x0, x0, #0xac8
  426c4c:	ldr	w0, [x0]
  426c50:	and	w1, w0, #0xffffffef
  426c54:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c58:	add	x0, x0, #0xac8
  426c5c:	str	w1, [x0]
  426c60:	b	426d34 <wcrtomb@plt+0x22024>
  426c64:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c68:	add	x0, x0, #0xac4
  426c6c:	mov	w1, #0x2                   	// #2
  426c70:	str	w1, [x0]
  426c74:	b	426d34 <wcrtomb@plt+0x22024>
  426c78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c7c:	add	x0, x0, #0xac4
  426c80:	mov	w1, #0x1                   	// #1
  426c84:	str	w1, [x0]
  426c88:	b	426d34 <wcrtomb@plt+0x22024>
  426c8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426c90:	add	x0, x0, #0xac8
  426c94:	ldr	w0, [x0]
  426c98:	and	w1, w0, #0xfffffffe
  426c9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426ca0:	add	x0, x0, #0xac8
  426ca4:	str	w1, [x0]
  426ca8:	b	426d34 <wcrtomb@plt+0x22024>
  426cac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426cb0:	add	x0, x0, #0xac8
  426cb4:	ldr	w0, [x0]
  426cb8:	orr	w1, w0, #0x1
  426cbc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426cc0:	add	x0, x0, #0xac8
  426cc4:	str	w1, [x0]
  426cc8:	b	426d34 <wcrtomb@plt+0x22024>
  426ccc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426cd0:	add	x0, x0, #0xac0
  426cd4:	mov	w1, #0x1                   	// #1
  426cd8:	strb	w1, [x0]
  426cdc:	b	426d34 <wcrtomb@plt+0x22024>
  426ce0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426ce4:	add	x0, x0, #0xac0
  426ce8:	strb	wzr, [x0]
  426cec:	b	426d34 <wcrtomb@plt+0x22024>
  426cf0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426cf4:	add	x0, x0, #0x420
  426cf8:	ldr	x0, [x0]
  426cfc:	cmp	x0, #0x0
  426d00:	b.eq	426d14 <wcrtomb@plt+0x22004>  // b.none
  426d04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  426d08:	add	x0, x0, #0x420
  426d0c:	ldr	x0, [x0]
  426d10:	blr	x0
  426d14:	ldr	w3, [sp, #28]
  426d18:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426d1c:	add	x2, x0, #0x3e8
  426d20:	mov	w1, #0x0                   	// #0
  426d24:	mov	w0, #0x0                   	// #0
  426d28:	bl	404100 <error@plt>
  426d2c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  426d30:	nop
  426d34:	nop
  426d38:	ldp	x29, x30, [sp], #48
  426d3c:	ret
  426d40:	stp	x29, x30, [sp, #-48]!
  426d44:	mov	x29, sp
  426d48:	str	w0, [sp, #28]
  426d4c:	str	x1, [sp, #16]
  426d50:	ldr	w0, [sp, #28]
  426d54:	cmp	w0, #0x0
  426d58:	b.eq	426d90 <wcrtomb@plt+0x22080>  // b.none
  426d5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426d60:	add	x0, x0, #0xaf8
  426d64:	ldr	w0, [x0]
  426d68:	ldr	w1, [sp, #28]
  426d6c:	cmp	w1, w0
  426d70:	b.ne	426d90 <wcrtomb@plt+0x22080>  // b.any
  426d74:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426d78:	add	x0, x0, #0x720
  426d7c:	bl	45b858 <argp_usage@@Base+0x1276c>
  426d80:	mov	x1, x0
  426d84:	ldr	x0, [sp, #16]
  426d88:	str	x1, [x0]
  426d8c:	b	426e48 <wcrtomb@plt+0x22138>
  426d90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426d94:	add	x0, x0, #0xad0
  426d98:	ldr	x0, [x0]
  426d9c:	cmp	x0, #0x0
  426da0:	b.eq	426dbc <wcrtomb@plt+0x220ac>  // b.none
  426da4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426da8:	add	x0, x0, #0xae0
  426dac:	ldr	w0, [x0]
  426db0:	ldr	w1, [sp, #28]
  426db4:	cmp	w1, w0
  426db8:	b.eq	426e2c <wcrtomb@plt+0x2211c>  // b.none
  426dbc:	ldr	w0, [sp, #28]
  426dc0:	bl	4047d0 <getpwuid@plt>
  426dc4:	str	x0, [sp, #40]
  426dc8:	ldr	x0, [sp, #40]
  426dcc:	cmp	x0, #0x0
  426dd0:	b.eq	426e00 <wcrtomb@plt+0x220f0>  // b.none
  426dd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426dd8:	add	x0, x0, #0xae0
  426ddc:	ldr	w1, [sp, #28]
  426de0:	str	w1, [x0]
  426de4:	ldr	x0, [sp, #40]
  426de8:	ldr	x0, [x0]
  426dec:	mov	x1, x0
  426df0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426df4:	add	x0, x0, #0xad0
  426df8:	bl	423d0c <wcrtomb@plt+0x1effc>
  426dfc:	b	426e2c <wcrtomb@plt+0x2211c>
  426e00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426e04:	add	x0, x0, #0xaf8
  426e08:	ldr	w1, [sp, #28]
  426e0c:	str	w1, [x0]
  426e10:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426e14:	add	x0, x0, #0x720
  426e18:	bl	45b858 <argp_usage@@Base+0x1276c>
  426e1c:	mov	x1, x0
  426e20:	ldr	x0, [sp, #16]
  426e24:	str	x1, [x0]
  426e28:	b	426e48 <wcrtomb@plt+0x22138>
  426e2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426e30:	add	x0, x0, #0xad0
  426e34:	ldr	x0, [x0]
  426e38:	bl	45b858 <argp_usage@@Base+0x1276c>
  426e3c:	mov	x1, x0
  426e40:	ldr	x0, [sp, #16]
  426e44:	str	x1, [x0]
  426e48:	ldp	x29, x30, [sp], #48
  426e4c:	ret
  426e50:	stp	x29, x30, [sp, #-48]!
  426e54:	mov	x29, sp
  426e58:	str	w0, [sp, #28]
  426e5c:	str	x1, [sp, #16]
  426e60:	ldr	w0, [sp, #28]
  426e64:	cmp	w0, #0x0
  426e68:	b.eq	426ea0 <wcrtomb@plt+0x22190>  // b.none
  426e6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426e70:	add	x0, x0, #0xafc
  426e74:	ldr	w0, [x0]
  426e78:	ldr	w1, [sp, #28]
  426e7c:	cmp	w1, w0
  426e80:	b.ne	426ea0 <wcrtomb@plt+0x22190>  // b.any
  426e84:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426e88:	add	x0, x0, #0x720
  426e8c:	bl	45b858 <argp_usage@@Base+0x1276c>
  426e90:	mov	x1, x0
  426e94:	ldr	x0, [sp, #16]
  426e98:	str	x1, [x0]
  426e9c:	b	426f58 <wcrtomb@plt+0x22248>
  426ea0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426ea4:	add	x0, x0, #0xad8
  426ea8:	ldr	x0, [x0]
  426eac:	cmp	x0, #0x0
  426eb0:	b.eq	426ecc <wcrtomb@plt+0x221bc>  // b.none
  426eb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426eb8:	add	x0, x0, #0xae4
  426ebc:	ldr	w0, [x0]
  426ec0:	ldr	w1, [sp, #28]
  426ec4:	cmp	w1, w0
  426ec8:	b.eq	426f3c <wcrtomb@plt+0x2222c>  // b.none
  426ecc:	ldr	w0, [sp, #28]
  426ed0:	bl	404c20 <getgrgid@plt>
  426ed4:	str	x0, [sp, #40]
  426ed8:	ldr	x0, [sp, #40]
  426edc:	cmp	x0, #0x0
  426ee0:	b.eq	426f10 <wcrtomb@plt+0x22200>  // b.none
  426ee4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426ee8:	add	x0, x0, #0xae4
  426eec:	ldr	w1, [sp, #28]
  426ef0:	str	w1, [x0]
  426ef4:	ldr	x0, [sp, #40]
  426ef8:	ldr	x0, [x0]
  426efc:	mov	x1, x0
  426f00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426f04:	add	x0, x0, #0xad8
  426f08:	bl	423d0c <wcrtomb@plt+0x1effc>
  426f0c:	b	426f3c <wcrtomb@plt+0x2222c>
  426f10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426f14:	add	x0, x0, #0xafc
  426f18:	ldr	w1, [sp, #28]
  426f1c:	str	w1, [x0]
  426f20:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  426f24:	add	x0, x0, #0x720
  426f28:	bl	45b858 <argp_usage@@Base+0x1276c>
  426f2c:	mov	x1, x0
  426f30:	ldr	x0, [sp, #16]
  426f34:	str	x1, [x0]
  426f38:	b	426f58 <wcrtomb@plt+0x22248>
  426f3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426f40:	add	x0, x0, #0xad8
  426f44:	ldr	x0, [x0]
  426f48:	bl	45b858 <argp_usage@@Base+0x1276c>
  426f4c:	mov	x1, x0
  426f50:	ldr	x0, [sp, #16]
  426f54:	str	x1, [x0]
  426f58:	ldp	x29, x30, [sp], #48
  426f5c:	ret
  426f60:	stp	x29, x30, [sp, #-48]!
  426f64:	mov	x29, sp
  426f68:	str	x0, [sp, #24]
  426f6c:	str	x1, [sp, #16]
  426f70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426f74:	add	x0, x0, #0xae8
  426f78:	ldr	x0, [x0]
  426f7c:	cmp	x0, #0x0
  426f80:	b.eq	426fac <wcrtomb@plt+0x2229c>  // b.none
  426f84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426f88:	add	x0, x0, #0xae8
  426f8c:	ldr	x0, [x0]
  426f90:	mov	x1, x0
  426f94:	ldr	x0, [sp, #24]
  426f98:	bl	4047c0 <strcmp@plt>
  426f9c:	cmp	w0, #0x0
  426fa0:	b.ne	426fac <wcrtomb@plt+0x2229c>  // b.any
  426fa4:	mov	w0, #0x0                   	// #0
  426fa8:	b	427078 <wcrtomb@plt+0x22368>
  426fac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426fb0:	add	x0, x0, #0xad0
  426fb4:	ldr	x0, [x0]
  426fb8:	cmp	x0, #0x0
  426fbc:	b.eq	427000 <wcrtomb@plt+0x222f0>  // b.none
  426fc0:	ldr	x0, [sp, #24]
  426fc4:	ldrb	w1, [x0]
  426fc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426fcc:	add	x0, x0, #0xad0
  426fd0:	ldr	x0, [x0]
  426fd4:	ldrb	w0, [x0]
  426fd8:	cmp	w1, w0
  426fdc:	b.ne	427000 <wcrtomb@plt+0x222f0>  // b.any
  426fe0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  426fe4:	add	x0, x0, #0xad0
  426fe8:	ldr	x0, [x0]
  426fec:	mov	x1, x0
  426ff0:	ldr	x0, [sp, #24]
  426ff4:	bl	4047c0 <strcmp@plt>
  426ff8:	cmp	w0, #0x0
  426ffc:	b.eq	427060 <wcrtomb@plt+0x22350>  // b.none
  427000:	ldr	x0, [sp, #24]
  427004:	bl	404500 <getpwnam@plt>
  427008:	str	x0, [sp, #40]
  42700c:	ldr	x0, [sp, #40]
  427010:	cmp	x0, #0x0
  427014:	b.eq	427048 <wcrtomb@plt+0x22338>  // b.none
  427018:	ldr	x0, [sp, #40]
  42701c:	ldr	w1, [x0, #16]
  427020:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427024:	add	x0, x0, #0xae0
  427028:	str	w1, [x0]
  42702c:	ldr	x0, [sp, #40]
  427030:	ldr	x0, [x0]
  427034:	mov	x1, x0
  427038:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42703c:	add	x0, x0, #0xad0
  427040:	bl	423d0c <wcrtomb@plt+0x1effc>
  427044:	b	427060 <wcrtomb@plt+0x22350>
  427048:	ldr	x1, [sp, #24]
  42704c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427050:	add	x0, x0, #0xae8
  427054:	bl	423d0c <wcrtomb@plt+0x1effc>
  427058:	mov	w0, #0x0                   	// #0
  42705c:	b	427078 <wcrtomb@plt+0x22368>
  427060:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427064:	add	x0, x0, #0xae0
  427068:	ldr	w1, [x0]
  42706c:	ldr	x0, [sp, #16]
  427070:	str	w1, [x0]
  427074:	mov	w0, #0x1                   	// #1
  427078:	ldp	x29, x30, [sp], #48
  42707c:	ret
  427080:	stp	x29, x30, [sp, #-48]!
  427084:	mov	x29, sp
  427088:	str	x0, [sp, #24]
  42708c:	str	x1, [sp, #16]
  427090:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427094:	add	x0, x0, #0xaf0
  427098:	ldr	x0, [x0]
  42709c:	cmp	x0, #0x0
  4270a0:	b.eq	4270cc <wcrtomb@plt+0x223bc>  // b.none
  4270a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4270a8:	add	x0, x0, #0xaf0
  4270ac:	ldr	x0, [x0]
  4270b0:	mov	x1, x0
  4270b4:	ldr	x0, [sp, #24]
  4270b8:	bl	4047c0 <strcmp@plt>
  4270bc:	cmp	w0, #0x0
  4270c0:	b.ne	4270cc <wcrtomb@plt+0x223bc>  // b.any
  4270c4:	mov	w0, #0x0                   	// #0
  4270c8:	b	427190 <wcrtomb@plt+0x22480>
  4270cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4270d0:	add	x0, x0, #0xad8
  4270d4:	ldr	x0, [x0]
  4270d8:	cmp	x0, #0x0
  4270dc:	b.eq	427120 <wcrtomb@plt+0x22410>  // b.none
  4270e0:	ldr	x0, [sp, #24]
  4270e4:	ldrb	w1, [x0]
  4270e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4270ec:	add	x0, x0, #0xad8
  4270f0:	ldr	x0, [x0]
  4270f4:	ldrb	w0, [x0]
  4270f8:	cmp	w1, w0
  4270fc:	b.ne	427120 <wcrtomb@plt+0x22410>  // b.any
  427100:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427104:	add	x0, x0, #0xad8
  427108:	ldr	x0, [x0]
  42710c:	mov	x1, x0
  427110:	ldr	x0, [sp, #24]
  427114:	bl	4047c0 <strcmp@plt>
  427118:	cmp	w0, #0x0
  42711c:	b.eq	427178 <wcrtomb@plt+0x22468>  // b.none
  427120:	ldr	x0, [sp, #24]
  427124:	bl	4041d0 <getgrnam@plt>
  427128:	str	x0, [sp, #40]
  42712c:	ldr	x0, [sp, #40]
  427130:	cmp	x0, #0x0
  427134:	b.eq	427160 <wcrtomb@plt+0x22450>  // b.none
  427138:	ldr	x0, [sp, #40]
  42713c:	ldr	w1, [x0, #16]
  427140:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427144:	add	x0, x0, #0xae4
  427148:	str	w1, [x0]
  42714c:	ldr	x1, [sp, #24]
  427150:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427154:	add	x0, x0, #0xad8
  427158:	bl	423d0c <wcrtomb@plt+0x1effc>
  42715c:	b	427178 <wcrtomb@plt+0x22468>
  427160:	ldr	x1, [sp, #24]
  427164:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427168:	add	x0, x0, #0xaf0
  42716c:	bl	423d0c <wcrtomb@plt+0x1effc>
  427170:	mov	w0, #0x0                   	// #0
  427174:	b	427190 <wcrtomb@plt+0x22480>
  427178:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42717c:	add	x0, x0, #0xae4
  427180:	ldr	w1, [x0]
  427184:	ldr	x0, [sp, #16]
  427188:	str	w1, [x0]
  42718c:	mov	w0, #0x1                   	// #1
  427190:	ldp	x29, x30, [sp], #48
  427194:	ret
  427198:	stp	x29, x30, [sp, #-48]!
  42719c:	mov	x29, sp
  4271a0:	str	x0, [sp, #24]
  4271a4:	mov	x0, #0x60                  	// #96
  4271a8:	bl	45b77c <argp_usage@@Base+0x12690>
  4271ac:	str	x0, [sp, #40]
  4271b0:	ldr	x0, [sp, #24]
  4271b4:	cmp	x0, #0x0
  4271b8:	b.ne	4271c8 <wcrtomb@plt+0x224b8>  // b.any
  4271bc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  4271c0:	add	x0, x0, #0x720
  4271c4:	str	x0, [sp, #24]
  4271c8:	ldr	x0, [sp, #24]
  4271cc:	bl	45b858 <argp_usage@@Base+0x1276c>
  4271d0:	mov	x1, x0
  4271d4:	ldr	x0, [sp, #40]
  4271d8:	str	x1, [x0, #16]
  4271dc:	ldr	x0, [sp, #40]
  4271e0:	ldr	x0, [x0, #16]
  4271e4:	bl	4040b0 <strlen@plt>
  4271e8:	mov	x1, x0
  4271ec:	ldr	x0, [sp, #40]
  4271f0:	str	x1, [x0, #24]
  4271f4:	ldr	x0, [sp, #40]
  4271f8:	ldp	x29, x30, [sp], #48
  4271fc:	ret
  427200:	stp	x29, x30, [sp, #-32]!
  427204:	mov	x29, sp
  427208:	str	x0, [sp, #24]
  42720c:	ldr	x0, [sp, #24]
  427210:	cmp	x0, #0x0
  427214:	b.eq	427238 <wcrtomb@plt+0x22528>  // b.none
  427218:	ldr	x0, [sp, #24]
  42721c:	ldr	x0, [x0, #16]
  427220:	bl	404880 <free@plt>
  427224:	ldr	x0, [sp, #24]
  427228:	ldr	x0, [x0, #88]
  42722c:	bl	404880 <free@plt>
  427230:	ldr	x0, [sp, #24]
  427234:	bl	404880 <free@plt>
  427238:	nop
  42723c:	ldp	x29, x30, [sp], #32
  427240:	ret
  427244:	stp	x29, x30, [sp, #-32]!
  427248:	mov	x29, sp
  42724c:	mov	x0, #0x38                  	// #56
  427250:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  427254:	str	x0, [sp, #24]
  427258:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42725c:	add	x0, x0, #0xb10
  427260:	ldr	x0, [x0]
  427264:	cmp	x0, #0x0
  427268:	b.ne	4272c0 <wcrtomb@plt+0x225b0>  // b.any
  42726c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427270:	add	x0, x0, #0xb10
  427274:	ldr	x1, [sp, #24]
  427278:	str	x1, [x0]
  42727c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427280:	add	x0, x0, #0xb10
  427284:	ldr	x0, [x0]
  427288:	str	xzr, [x0]
  42728c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427290:	add	x1, x1, #0xb10
  427294:	ldr	x1, [x1]
  427298:	ldr	x0, [x0]
  42729c:	str	x0, [x1, #8]
  4272a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4272a4:	add	x0, x0, #0xb10
  4272a8:	ldr	x0, [x0]
  4272ac:	mov	w1, #0x3                   	// #3
  4272b0:	str	w1, [x0, #16]
  4272b4:	mov	x0, #0x38                  	// #56
  4272b8:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4272bc:	str	x0, [sp, #24]
  4272c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4272c4:	add	x0, x0, #0xb10
  4272c8:	ldr	x0, [x0]
  4272cc:	ldr	x1, [x0, #8]
  4272d0:	ldr	x0, [sp, #24]
  4272d4:	str	x1, [x0, #8]
  4272d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4272dc:	add	x0, x0, #0xb10
  4272e0:	ldr	x0, [x0]
  4272e4:	ldr	x0, [x0, #8]
  4272e8:	cmp	x0, #0x0
  4272ec:	b.eq	427308 <wcrtomb@plt+0x225f8>  // b.none
  4272f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4272f4:	add	x0, x0, #0xb10
  4272f8:	ldr	x0, [x0]
  4272fc:	ldr	x0, [x0, #8]
  427300:	ldr	x1, [sp, #24]
  427304:	str	x1, [x0]
  427308:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42730c:	add	x0, x0, #0xb10
  427310:	ldr	x1, [x0]
  427314:	ldr	x0, [sp, #24]
  427318:	str	x1, [x0]
  42731c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427320:	add	x0, x0, #0xb10
  427324:	ldr	x0, [x0]
  427328:	ldr	x1, [sp, #24]
  42732c:	str	x1, [x0, #8]
  427330:	ldr	x0, [sp, #24]
  427334:	ldp	x29, x30, [sp], #32
  427338:	ret
  42733c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427340:	add	x0, x0, #0xb10
  427344:	ldr	x0, [x0]
  427348:	cmp	x0, #0x0
  42734c:	b.eq	427388 <wcrtomb@plt+0x22678>  // b.none
  427350:	b	427370 <wcrtomb@plt+0x22660>
  427354:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427358:	add	x0, x0, #0xb10
  42735c:	ldr	x0, [x0]
  427360:	ldr	x1, [x0, #8]
  427364:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427368:	add	x0, x0, #0xb10
  42736c:	str	x1, [x0]
  427370:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427374:	add	x0, x0, #0xb10
  427378:	ldr	x0, [x0]
  42737c:	ldr	x0, [x0, #8]
  427380:	cmp	x0, #0x0
  427384:	b.ne	427354 <wcrtomb@plt+0x22644>  // b.any
  427388:	nop
  42738c:	ret
  427390:	sub	sp, sp, #0x10
  427394:	str	x0, [sp, #8]
  427398:	ldr	x0, [sp, #8]
  42739c:	str	xzr, [x0]
  4273a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4273a4:	add	x0, x0, #0x48
  4273a8:	ldr	x1, [x0]
  4273ac:	ldr	x0, [sp, #8]
  4273b0:	str	x1, [x0, #8]
  4273b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4273b8:	add	x0, x0, #0x48
  4273bc:	ldr	x0, [x0]
  4273c0:	cmp	x0, #0x0
  4273c4:	b.eq	4273dc <wcrtomb@plt+0x226cc>  // b.none
  4273c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4273cc:	add	x0, x0, #0x48
  4273d0:	ldr	x0, [x0]
  4273d4:	ldr	x1, [sp, #8]
  4273d8:	str	x1, [x0]
  4273dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4273e0:	add	x0, x0, #0x48
  4273e4:	ldr	x1, [sp, #8]
  4273e8:	str	x1, [x0]
  4273ec:	nop
  4273f0:	add	sp, sp, #0x10
  4273f4:	ret
  4273f8:	stp	x29, x30, [sp, #-32]!
  4273fc:	mov	x29, sp
  427400:	b	427438 <wcrtomb@plt+0x22728>
  427404:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427408:	add	x0, x0, #0x48
  42740c:	ldr	x0, [x0]
  427410:	str	x0, [sp, #24]
  427414:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427418:	add	x0, x0, #0x48
  42741c:	ldr	x0, [x0]
  427420:	ldr	x1, [x0, #8]
  427424:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427428:	add	x0, x0, #0x48
  42742c:	str	x1, [x0]
  427430:	ldr	x0, [sp, #24]
  427434:	bl	404880 <free@plt>
  427438:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42743c:	add	x0, x0, #0x48
  427440:	ldr	x0, [x0]
  427444:	cmp	x0, #0x0
  427448:	b.ne	427404 <wcrtomb@plt+0x226f4>  // b.any
  42744c:	nop
  427450:	nop
  427454:	ldp	x29, x30, [sp], #32
  427458:	ret
  42745c:	stp	x29, x30, [sp, #-48]!
  427460:	mov	x29, sp
  427464:	stp	x19, x20, [sp, #16]
  427468:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42746c:	add	x0, x0, #0x48
  427470:	ldr	x0, [x0]
  427474:	cmp	x0, #0x0
  427478:	b.eq	427694 <wcrtomb@plt+0x22984>  // b.none
  42747c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427480:	add	x0, x0, #0x420
  427484:	ldr	x0, [x0]
  427488:	cmp	x0, #0x0
  42748c:	b.eq	4274a0 <wcrtomb@plt+0x22790>  // b.none
  427490:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427494:	add	x0, x0, #0x420
  427498:	ldr	x0, [x0]
  42749c:	blr	x0
  4274a0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  4274a4:	add	x0, x0, #0x728
  4274a8:	bl	404c60 <gettext@plt>
  4274ac:	mov	x2, x0
  4274b0:	mov	w1, #0x0                   	// #0
  4274b4:	mov	w0, #0x0                   	// #0
  4274b8:	bl	404100 <error@plt>
  4274bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4274c0:	add	x0, x0, #0xdb0
  4274c4:	mov	w1, #0x2                   	// #2
  4274c8:	str	w1, [x0]
  4274cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4274d0:	add	x0, x0, #0x48
  4274d4:	ldr	x0, [x0]
  4274d8:	str	x0, [sp, #40]
  4274dc:	b	4274ec <wcrtomb@plt+0x227dc>
  4274e0:	ldr	x0, [sp, #40]
  4274e4:	ldr	x0, [x0, #8]
  4274e8:	str	x0, [sp, #40]
  4274ec:	ldr	x0, [sp, #40]
  4274f0:	ldr	x0, [x0, #8]
  4274f4:	cmp	x0, #0x0
  4274f8:	b.ne	4274e0 <wcrtomb@plt+0x227d0>  // b.any
  4274fc:	b	427684 <wcrtomb@plt+0x22974>
  427500:	ldr	x0, [sp, #40]
  427504:	ldr	w0, [x0, #16]
  427508:	cmp	w0, #0x1
  42750c:	b.eq	42751c <wcrtomb@plt+0x2280c>  // b.none
  427510:	cmp	w0, #0x4
  427514:	b.eq	427584 <wcrtomb@plt+0x22874>  // b.none
  427518:	b	427678 <wcrtomb@plt+0x22968>
  42751c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427520:	add	x0, x0, #0x420
  427524:	ldr	x0, [x0]
  427528:	cmp	x0, #0x0
  42752c:	b.eq	427540 <wcrtomb@plt+0x22830>  // b.none
  427530:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427534:	add	x0, x0, #0x420
  427538:	ldr	x0, [x0]
  42753c:	blr	x0
  427540:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427544:	add	x0, x0, #0x7f8
  427548:	bl	404c60 <gettext@plt>
  42754c:	mov	x19, x0
  427550:	ldr	x0, [sp, #40]
  427554:	ldr	x0, [x0, #24]
  427558:	bl	459f38 <argp_usage@@Base+0x10e4c>
  42755c:	mov	x3, x0
  427560:	mov	x2, x19
  427564:	mov	w1, #0x0                   	// #0
  427568:	mov	w0, #0x0                   	// #0
  42756c:	bl	404100 <error@plt>
  427570:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427574:	add	x0, x0, #0xdb0
  427578:	mov	w1, #0x2                   	// #2
  42757c:	str	w1, [x0]
  427580:	b	427678 <wcrtomb@plt+0x22968>
  427584:	ldr	x0, [sp, #40]
  427588:	ldr	x0, [x0, #32]
  42758c:	cmp	x0, #0x0
  427590:	b.eq	427610 <wcrtomb@plt+0x22900>  // b.none
  427594:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427598:	add	x0, x0, #0x420
  42759c:	ldr	x0, [x0]
  4275a0:	cmp	x0, #0x0
  4275a4:	b.eq	4275b8 <wcrtomb@plt+0x228a8>  // b.none
  4275a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4275ac:	add	x0, x0, #0x420
  4275b0:	ldr	x0, [x0]
  4275b4:	blr	x0
  4275b8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  4275bc:	add	x0, x0, #0x810
  4275c0:	bl	404c60 <gettext@plt>
  4275c4:	mov	x19, x0
  4275c8:	ldr	x0, [sp, #40]
  4275cc:	ldr	w0, [x0, #24]
  4275d0:	bl	42678c <wcrtomb@plt+0x21a7c>
  4275d4:	mov	x20, x0
  4275d8:	ldr	x0, [sp, #40]
  4275dc:	ldr	x0, [x0, #32]
  4275e0:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4275e4:	mov	x4, x0
  4275e8:	mov	x3, x20
  4275ec:	mov	x2, x19
  4275f0:	mov	w1, #0x0                   	// #0
  4275f4:	mov	w0, #0x0                   	// #0
  4275f8:	bl	404100 <error@plt>
  4275fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427600:	add	x0, x0, #0xdb0
  427604:	mov	w1, #0x2                   	// #2
  427608:	str	w1, [x0]
  42760c:	b	427674 <wcrtomb@plt+0x22964>
  427610:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427614:	add	x0, x0, #0x420
  427618:	ldr	x0, [x0]
  42761c:	cmp	x0, #0x0
  427620:	b.eq	427634 <wcrtomb@plt+0x22924>  // b.none
  427624:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427628:	add	x0, x0, #0x420
  42762c:	ldr	x0, [x0]
  427630:	blr	x0
  427634:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427638:	add	x0, x0, #0x828
  42763c:	bl	404c60 <gettext@plt>
  427640:	mov	x19, x0
  427644:	ldr	x0, [sp, #40]
  427648:	ldr	w0, [x0, #24]
  42764c:	bl	42678c <wcrtomb@plt+0x21a7c>
  427650:	mov	x3, x0
  427654:	mov	x2, x19
  427658:	mov	w1, #0x0                   	// #0
  42765c:	mov	w0, #0x0                   	// #0
  427660:	bl	404100 <error@plt>
  427664:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427668:	add	x0, x0, #0xdb0
  42766c:	mov	w1, #0x2                   	// #2
  427670:	str	w1, [x0]
  427674:	nop
  427678:	ldr	x0, [sp, #40]
  42767c:	ldr	x0, [x0]
  427680:	str	x0, [sp, #40]
  427684:	ldr	x0, [sp, #40]
  427688:	cmp	x0, #0x0
  42768c:	b.ne	427500 <wcrtomb@plt+0x227f0>  // b.any
  427690:	bl	4273f8 <wcrtomb@plt+0x226e8>
  427694:	nop
  427698:	ldp	x19, x20, [sp, #16]
  42769c:	ldp	x29, x30, [sp], #48
  4276a0:	ret
  4276a4:	stp	x29, x30, [sp, #-32]!
  4276a8:	mov	x29, sp
  4276ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4276b0:	add	x0, x0, #0xb10
  4276b4:	ldr	x0, [x0]
  4276b8:	str	x0, [sp, #24]
  4276bc:	ldr	x0, [sp, #24]
  4276c0:	ldr	x1, [x0]
  4276c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4276c8:	add	x0, x0, #0xb10
  4276cc:	str	x1, [x0]
  4276d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4276d4:	add	x0, x0, #0xb10
  4276d8:	ldr	x0, [x0]
  4276dc:	cmp	x0, #0x0
  4276e0:	b.eq	4276f4 <wcrtomb@plt+0x229e4>  // b.none
  4276e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4276e8:	add	x0, x0, #0xb10
  4276ec:	ldr	x0, [x0]
  4276f0:	str	xzr, [x0, #8]
  4276f4:	ldr	x0, [sp, #24]
  4276f8:	ldr	w0, [x0, #16]
  4276fc:	cmp	w0, #0x4
  427700:	b.eq	427714 <wcrtomb@plt+0x22a04>  // b.none
  427704:	ldr	x0, [sp, #24]
  427708:	ldr	w0, [x0, #16]
  42770c:	cmp	w0, #0x1
  427710:	b.ne	427748 <wcrtomb@plt+0x22a38>  // b.any
  427714:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427718:	add	x0, x0, #0x38c
  42771c:	ldr	w0, [x0]
  427720:	cmp	w0, #0x3
  427724:	b.eq	42773c <wcrtomb@plt+0x22a2c>  // b.none
  427728:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42772c:	add	x0, x0, #0x38c
  427730:	ldr	w0, [x0]
  427734:	cmp	w0, #0x8
  427738:	b.ne	427768 <wcrtomb@plt+0x22a58>  // b.any
  42773c:	ldr	x0, [sp, #24]
  427740:	bl	427390 <wcrtomb@plt+0x22680>
  427744:	b	427768 <wcrtomb@plt+0x22a58>
  427748:	ldr	x0, [sp, #24]
  42774c:	ldr	w0, [x0, #16]
  427750:	cmp	w0, #0x3
  427754:	b.eq	42775c <wcrtomb@plt+0x22a4c>  // b.none
  427758:	bl	4273f8 <wcrtomb@plt+0x226e8>
  42775c:	ldr	x0, [sp, #24]
  427760:	bl	404880 <free@plt>
  427764:	b	42776c <wcrtomb@plt+0x22a5c>
  427768:	nop
  42776c:	nop
  427770:	ldp	x29, x30, [sp], #32
  427774:	ret
  427778:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42777c:	add	x0, x0, #0x38
  427780:	ldr	x0, [x0]
  427784:	cmp	x0, #0x0
  427788:	cset	w0, ne  // ne = any
  42778c:	and	w0, w0, #0xff
  427790:	ret
  427794:	stp	x29, x30, [sp, #-48]!
  427798:	mov	x29, sp
  42779c:	str	x0, [sp, #24]
  4277a0:	bl	427244 <wcrtomb@plt+0x22534>
  4277a4:	str	x0, [sp, #40]
  4277a8:	ldr	x0, [sp, #40]
  4277ac:	str	wzr, [x0, #16]
  4277b0:	ldr	x0, [sp, #40]
  4277b4:	ldr	x1, [sp, #24]
  4277b8:	str	x1, [x0, #24]
  4277bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4277c0:	add	x0, x0, #0x38
  4277c4:	ldr	x0, [x0]
  4277c8:	add	x1, x0, #0x1
  4277cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4277d0:	add	x0, x0, #0x38
  4277d4:	str	x1, [x0]
  4277d8:	nop
  4277dc:	ldp	x29, x30, [sp], #48
  4277e0:	ret
  4277e4:	stp	x29, x30, [sp, #-48]!
  4277e8:	mov	x29, sp
  4277ec:	str	w0, [sp, #28]
  4277f0:	str	x1, [sp, #16]
  4277f4:	bl	427244 <wcrtomb@plt+0x22534>
  4277f8:	str	x0, [sp, #40]
  4277fc:	ldr	x0, [sp, #40]
  427800:	mov	w1, #0x4                   	// #4
  427804:	str	w1, [x0, #16]
  427808:	ldr	x0, [sp, #40]
  42780c:	ldr	w1, [sp, #28]
  427810:	str	w1, [x0, #24]
  427814:	ldr	x0, [sp, #40]
  427818:	ldr	x1, [sp, #16]
  42781c:	str	x1, [x0, #32]
  427820:	nop
  427824:	ldp	x29, x30, [sp], #48
  427828:	ret
  42782c:	stp	x29, x30, [sp, #-48]!
  427830:	mov	x29, sp
  427834:	str	x0, [sp, #24]
  427838:	bl	427244 <wcrtomb@plt+0x22534>
  42783c:	str	x0, [sp, #40]
  427840:	ldr	x0, [sp, #40]
  427844:	mov	w1, #0x1                   	// #1
  427848:	str	w1, [x0, #16]
  42784c:	ldr	x0, [sp, #40]
  427850:	ldr	x1, [sp, #24]
  427854:	str	x1, [x0, #24]
  427858:	nop
  42785c:	ldp	x29, x30, [sp], #48
  427860:	ret
  427864:	stp	x29, x30, [sp, #-48]!
  427868:	mov	x29, sp
  42786c:	str	x0, [sp, #24]
  427870:	bl	427244 <wcrtomb@plt+0x22534>
  427874:	str	x0, [sp, #40]
  427878:	ldr	x0, [sp, #40]
  42787c:	mov	w1, #0x2                   	// #2
  427880:	str	w1, [x0, #16]
  427884:	ldr	x0, [sp, #40]
  427888:	ldr	x1, [sp, #24]
  42788c:	str	x1, [x0, #24]
  427890:	ldr	x0, [sp, #40]
  427894:	str	xzr, [x0, #32]
  427898:	ldr	x0, [sp, #40]
  42789c:	str	xzr, [x0, #48]
  4278a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4278a4:	add	x0, x0, #0x38
  4278a8:	ldr	x0, [x0]
  4278ac:	add	x1, x0, #0x1
  4278b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4278b4:	add	x0, x0, #0x38
  4278b8:	str	x1, [x0]
  4278bc:	nop
  4278c0:	ldp	x29, x30, [sp], #48
  4278c4:	ret
  4278c8:	stp	x29, x30, [sp, #-16]!
  4278cc:	mov	x29, sp
  4278d0:	mov	x0, #0x66                  	// #102
  4278d4:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4278d8:	mov	x1, x0
  4278dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4278e0:	add	x0, x0, #0xb18
  4278e4:	str	x1, [x0]
  4278e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4278ec:	add	x0, x0, #0xb20
  4278f0:	mov	x1, #0x64                  	// #100
  4278f4:	str	x1, [x0]
  4278f8:	bl	42733c <wcrtomb@plt+0x2262c>
  4278fc:	nop
  427900:	ldp	x29, x30, [sp], #16
  427904:	ret
  427908:	stp	x29, x30, [sp, #-16]!
  42790c:	mov	x29, sp
  427910:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427914:	add	x0, x0, #0xb18
  427918:	ldr	x0, [x0]
  42791c:	bl	404880 <free@plt>
  427920:	nop
  427924:	ldp	x29, x30, [sp], #16
  427928:	ret
  42792c:	stp	x29, x30, [sp, #-32]!
  427930:	mov	x29, sp
  427934:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427938:	add	x0, x0, #0xb10
  42793c:	ldr	x0, [x0]
  427940:	str	x0, [sp, #24]
  427944:	b	427980 <wcrtomb@plt+0x22c70>
  427948:	ldr	x0, [sp, #24]
  42794c:	ldr	w0, [x0, #16]
  427950:	cmp	w0, #0x2
  427954:	b.ne	427974 <wcrtomb@plt+0x22c64>  // b.any
  427958:	ldr	x0, [sp, #24]
  42795c:	ldr	x0, [x0, #48]
  427960:	cmp	x0, #0x0
  427964:	b.eq	427974 <wcrtomb@plt+0x22c64>  // b.none
  427968:	ldr	x0, [sp, #24]
  42796c:	ldr	x0, [x0, #24]
  427970:	b	427998 <wcrtomb@plt+0x22c88>
  427974:	ldr	x0, [sp, #24]
  427978:	ldr	x0, [x0]
  42797c:	str	x0, [sp, #24]
  427980:	ldr	x0, [sp, #24]
  427984:	cmp	x0, #0x0
  427988:	b.ne	427948 <wcrtomb@plt+0x22c38>  // b.any
  42798c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427990:	add	x0, x0, #0x840
  427994:	bl	404c60 <gettext@plt>
  427998:	ldp	x29, x30, [sp], #32
  42799c:	ret
  4279a0:	stp	x29, x30, [sp, #-208]!
  4279a4:	mov	x29, sp
  4279a8:	str	x19, [sp, #16]
  4279ac:	str	x0, [sp, #40]
  4279b0:	add	x0, sp, #0x38
  4279b4:	mov	x1, x0
  4279b8:	ldr	x0, [sp, #40]
  4279bc:	bl	47ec60 <_obstack_memory_used@@Base+0x21b20>
  4279c0:	cmp	w0, #0x0
  4279c4:	b.eq	4279d0 <wcrtomb@plt+0x22cc0>  // b.none
  4279c8:	ldr	x0, [sp, #40]
  4279cc:	bl	43abb8 <wcrtomb@plt+0x35ea8>
  4279d0:	bl	42792c <wcrtomb@plt+0x22c1c>
  4279d4:	str	x0, [sp, #192]
  4279d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4279dc:	add	x0, x0, #0xb28
  4279e0:	ldr	x0, [x0]
  4279e4:	str	x0, [sp, #200]
  4279e8:	b	427ac4 <wcrtomb@plt+0x22db4>
  4279ec:	ldr	x0, [sp, #200]
  4279f0:	ldr	x1, [x0, #8]
  4279f4:	ldr	x0, [sp, #64]
  4279f8:	cmp	x1, x0
  4279fc:	b.ne	427ab8 <wcrtomb@plt+0x22da8>  // b.any
  427a00:	ldr	x0, [sp, #200]
  427a04:	ldr	x1, [x0, #16]
  427a08:	ldr	x0, [sp, #56]
  427a0c:	cmp	x1, x0
  427a10:	b.ne	427ab8 <wcrtomb@plt+0x22da8>  // b.any
  427a14:	mov	w2, #0x1                   	// #1
  427a18:	mov	w1, #0x3a                  	// #58
  427a1c:	mov	x0, #0x0                   	// #0
  427a20:	bl	457dfc <argp_usage@@Base+0xed10>
  427a24:	str	w0, [sp, #188]
  427a28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427a2c:	add	x0, x0, #0x420
  427a30:	ldr	x0, [x0]
  427a34:	cmp	x0, #0x0
  427a38:	b.eq	427a4c <wcrtomb@plt+0x22d3c>  // b.none
  427a3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427a40:	add	x0, x0, #0x420
  427a44:	ldr	x0, [x0]
  427a48:	blr	x0
  427a4c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427a50:	add	x0, x0, #0x850
  427a54:	bl	404c60 <gettext@plt>
  427a58:	mov	x19, x0
  427a5c:	ldr	x1, [sp, #40]
  427a60:	mov	w0, #0x0                   	// #0
  427a64:	bl	459ab0 <argp_usage@@Base+0x109c4>
  427a68:	mov	x1, x0
  427a6c:	ldr	x0, [sp, #200]
  427a70:	ldr	x0, [x0, #24]
  427a74:	mov	x5, x0
  427a78:	ldr	x4, [sp, #192]
  427a7c:	mov	x3, x1
  427a80:	mov	x2, x19
  427a84:	mov	w1, #0x0                   	// #0
  427a88:	mov	w0, #0x0                   	// #0
  427a8c:	bl	404100 <error@plt>
  427a90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427a94:	add	x0, x0, #0xdb0
  427a98:	mov	w1, #0x2                   	// #2
  427a9c:	str	w1, [x0]
  427aa0:	ldr	w2, [sp, #188]
  427aa4:	mov	w1, #0x3a                  	// #58
  427aa8:	mov	x0, #0x0                   	// #0
  427aac:	bl	457dfc <argp_usage@@Base+0xed10>
  427ab0:	mov	w0, #0x1                   	// #1
  427ab4:	b	427b28 <wcrtomb@plt+0x22e18>
  427ab8:	ldr	x0, [sp, #200]
  427abc:	ldr	x0, [x0]
  427ac0:	str	x0, [sp, #200]
  427ac4:	ldr	x0, [sp, #200]
  427ac8:	cmp	x0, #0x0
  427acc:	b.ne	4279ec <wcrtomb@plt+0x22cdc>  // b.any
  427ad0:	mov	x0, #0x20                  	// #32
  427ad4:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  427ad8:	str	x0, [sp, #200]
  427adc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427ae0:	add	x0, x0, #0xb28
  427ae4:	ldr	x1, [x0]
  427ae8:	ldr	x0, [sp, #200]
  427aec:	str	x1, [x0]
  427af0:	ldr	x1, [sp, #64]
  427af4:	ldr	x0, [sp, #200]
  427af8:	str	x1, [x0, #8]
  427afc:	ldr	x1, [sp, #56]
  427b00:	ldr	x0, [sp, #200]
  427b04:	str	x1, [x0, #16]
  427b08:	ldr	x0, [sp, #200]
  427b0c:	ldr	x1, [sp, #192]
  427b10:	str	x1, [x0, #24]
  427b14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427b18:	add	x0, x0, #0xb28
  427b1c:	ldr	x1, [sp, #200]
  427b20:	str	x1, [x0]
  427b24:	mov	w0, #0x0                   	// #0
  427b28:	ldr	x19, [sp, #16]
  427b2c:	ldp	x29, x30, [sp], #208
  427b30:	ret
  427b34:	stp	x29, x30, [sp, #-48]!
  427b38:	mov	x29, sp
  427b3c:	str	x0, [sp, #24]
  427b40:	ldr	x0, [sp, #24]
  427b44:	bl	4040b0 <strlen@plt>
  427b48:	sub	x0, x0, #0x1
  427b4c:	ldr	x1, [sp, #24]
  427b50:	add	x0, x1, x0
  427b54:	str	x0, [sp, #40]
  427b58:	b	427b6c <wcrtomb@plt+0x22e5c>
  427b5c:	ldr	x0, [sp, #40]
  427b60:	sub	x1, x0, #0x1
  427b64:	str	x1, [sp, #40]
  427b68:	strb	wzr, [x0]
  427b6c:	ldr	x1, [sp, #40]
  427b70:	ldr	x0, [sp, #24]
  427b74:	cmp	x1, x0
  427b78:	b.ls	427b8c <wcrtomb@plt+0x22e7c>  // b.plast
  427b7c:	ldr	x0, [sp, #40]
  427b80:	ldrb	w0, [x0]
  427b84:	cmp	w0, #0x2f
  427b88:	b.eq	427b5c <wcrtomb@plt+0x22e4c>  // b.none
  427b8c:	nop
  427b90:	ldp	x29, x30, [sp], #48
  427b94:	ret
  427b98:	stp	x29, x30, [sp, #-64]!
  427b9c:	mov	x29, sp
  427ba0:	str	x0, [sp, #24]
  427ba4:	str	xzr, [sp, #48]
  427ba8:	ldr	x0, [sp, #24]
  427bac:	ldr	x0, [x0, #48]
  427bb0:	str	x0, [sp, #40]
  427bb4:	ldr	x0, [sp, #24]
  427bb8:	ldr	w0, [x0, #40]
  427bbc:	str	w0, [sp, #36]
  427bc0:	ldr	x0, [sp, #24]
  427bc4:	ldr	x0, [x0, #32]
  427bc8:	add	x1, x0, #0x1
  427bcc:	ldr	x0, [sp, #24]
  427bd0:	str	x1, [x0, #32]
  427bd4:	ldr	x0, [sp, #40]
  427bd8:	bl	404640 <getc_unlocked@plt>
  427bdc:	str	w0, [sp, #60]
  427be0:	b	427c70 <wcrtomb@plt+0x22f60>
  427be4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427be8:	add	x0, x0, #0xb20
  427bec:	ldr	x0, [x0]
  427bf0:	ldr	x1, [sp, #48]
  427bf4:	cmp	x1, x0
  427bf8:	b.ne	427c28 <wcrtomb@plt+0x22f18>  // b.any
  427bfc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427c00:	add	x0, x0, #0xb18
  427c04:	ldr	x2, [x0]
  427c08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427c0c:	add	x1, x0, #0xb20
  427c10:	mov	x0, x2
  427c14:	bl	45b754 <argp_usage@@Base+0x12668>
  427c18:	mov	x1, x0
  427c1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427c20:	add	x0, x0, #0xb18
  427c24:	str	x1, [x0]
  427c28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427c2c:	add	x0, x0, #0xb18
  427c30:	ldr	x1, [x0]
  427c34:	ldr	x0, [sp, #48]
  427c38:	add	x2, x0, #0x1
  427c3c:	str	x2, [sp, #48]
  427c40:	add	x0, x1, x0
  427c44:	ldr	w1, [sp, #60]
  427c48:	and	w1, w1, #0xff
  427c4c:	strb	w1, [x0]
  427c50:	ldr	w0, [sp, #60]
  427c54:	cmp	w0, #0x0
  427c58:	b.ne	427c64 <wcrtomb@plt+0x22f54>  // b.any
  427c5c:	mov	w0, #0x2                   	// #2
  427c60:	b	427d3c <wcrtomb@plt+0x2302c>
  427c64:	ldr	x0, [sp, #40]
  427c68:	bl	404640 <getc_unlocked@plt>
  427c6c:	str	w0, [sp, #60]
  427c70:	ldr	w0, [sp, #60]
  427c74:	cmn	w0, #0x1
  427c78:	b.eq	427c8c <wcrtomb@plt+0x22f7c>  // b.none
  427c7c:	ldr	w1, [sp, #60]
  427c80:	ldr	w0, [sp, #36]
  427c84:	cmp	w1, w0
  427c88:	b.ne	427be4 <wcrtomb@plt+0x22ed4>  // b.any
  427c8c:	ldr	x0, [sp, #48]
  427c90:	cmp	x0, #0x0
  427c94:	b.ne	427cac <wcrtomb@plt+0x22f9c>  // b.any
  427c98:	ldr	w0, [sp, #60]
  427c9c:	cmn	w0, #0x1
  427ca0:	b.eq	427cac <wcrtomb@plt+0x22f9c>  // b.none
  427ca4:	mov	w0, #0x3                   	// #3
  427ca8:	b	427d3c <wcrtomb@plt+0x2302c>
  427cac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427cb0:	add	x0, x0, #0xb20
  427cb4:	ldr	x0, [x0]
  427cb8:	ldr	x1, [sp, #48]
  427cbc:	cmp	x1, x0
  427cc0:	b.ne	427cf0 <wcrtomb@plt+0x22fe0>  // b.any
  427cc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427cc8:	add	x0, x0, #0xb18
  427ccc:	ldr	x2, [x0]
  427cd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427cd4:	add	x1, x0, #0xb20
  427cd8:	mov	x0, x2
  427cdc:	bl	45b754 <argp_usage@@Base+0x12668>
  427ce0:	mov	x1, x0
  427ce4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427ce8:	add	x0, x0, #0xb18
  427cec:	str	x1, [x0]
  427cf0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427cf4:	add	x0, x0, #0xb18
  427cf8:	ldr	x1, [x0]
  427cfc:	ldr	x0, [sp, #48]
  427d00:	add	x0, x1, x0
  427d04:	strb	wzr, [x0]
  427d08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427d0c:	add	x0, x0, #0xb18
  427d10:	ldr	x0, [x0]
  427d14:	bl	427b34 <wcrtomb@plt+0x22e24>
  427d18:	ldr	x0, [sp, #48]
  427d1c:	cmp	x0, #0x0
  427d20:	b.ne	427d38 <wcrtomb@plt+0x23028>  // b.any
  427d24:	ldr	w0, [sp, #60]
  427d28:	cmn	w0, #0x1
  427d2c:	b.ne	427d38 <wcrtomb@plt+0x23028>  // b.any
  427d30:	mov	w0, #0x1                   	// #1
  427d34:	b	427d3c <wcrtomb@plt+0x2302c>
  427d38:	mov	w0, #0x0                   	// #0
  427d3c:	ldp	x29, x30, [sp], #64
  427d40:	ret
  427d44:	stp	x29, x30, [sp, #-320]!
  427d48:	mov	x29, sp
  427d4c:	str	x19, [sp, #16]
  427d50:	str	x0, [sp, #40]
  427d54:	str	x1, [sp, #32]
  427d58:	b	427d68 <wcrtomb@plt+0x23058>
  427d5c:	ldr	x0, [sp, #40]
  427d60:	add	x0, x0, #0x1
  427d64:	str	x0, [sp, #40]
  427d68:	ldr	x0, [sp, #40]
  427d6c:	ldrb	w0, [x0]
  427d70:	cmp	w0, #0x0
  427d74:	b.eq	427da4 <wcrtomb@plt+0x23094>  // b.none
  427d78:	bl	4047f0 <__ctype_b_loc@plt>
  427d7c:	ldr	x1, [x0]
  427d80:	ldr	x0, [sp, #40]
  427d84:	ldrb	w0, [x0]
  427d88:	and	x0, x0, #0xff
  427d8c:	lsl	x0, x0, #1
  427d90:	add	x0, x1, x0
  427d94:	ldrh	w0, [x0]
  427d98:	and	w0, w0, #0x2000
  427d9c:	cmp	w0, #0x0
  427da0:	b.ne	427d5c <wcrtomb@plt+0x2304c>  // b.any
  427da4:	ldr	x0, [sp, #40]
  427da8:	ldrb	w0, [x0]
  427dac:	cmp	w0, #0x2d
  427db0:	b.eq	427dbc <wcrtomb@plt+0x230ac>  // b.none
  427db4:	mov	w0, #0x1                   	// #1
  427db8:	b	427ee8 <wcrtomb@plt+0x231d8>
  427dbc:	mov	x0, #0x1                   	// #1
  427dc0:	str	x0, [sp, #96]
  427dc4:	add	x0, sp, #0x50
  427dc8:	mov	w2, #0xe46                 	// #3654
  427dcc:	movk	w2, #0x200, lsl #16
  427dd0:	mov	x1, x0
  427dd4:	ldr	x0, [sp, #40]
  427dd8:	bl	4423e8 <wcrtomb@plt+0x3d6d8>
  427ddc:	cmp	w0, #0x0
  427de0:	b.eq	427e3c <wcrtomb@plt+0x2312c>  // b.none
  427de4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427de8:	add	x0, x0, #0x420
  427dec:	ldr	x0, [x0]
  427df0:	cmp	x0, #0x0
  427df4:	b.eq	427e08 <wcrtomb@plt+0x230f8>  // b.none
  427df8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  427dfc:	add	x0, x0, #0x420
  427e00:	ldr	x0, [x0]
  427e04:	blr	x0
  427e08:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427e0c:	add	x0, x0, #0x888
  427e10:	bl	404c60 <gettext@plt>
  427e14:	mov	x19, x0
  427e18:	add	x0, sp, #0x50
  427e1c:	bl	4426b0 <wcrtomb@plt+0x3d9a0>
  427e20:	mov	x4, x0
  427e24:	ldr	x3, [sp, #40]
  427e28:	mov	x2, x19
  427e2c:	mov	w1, #0x0                   	// #0
  427e30:	mov	w0, #0x0                   	// #0
  427e34:	bl	404100 <error@plt>
  427e38:	bl	412ae0 <wcrtomb@plt+0xddd0>
  427e3c:	ldr	x0, [sp, #88]
  427e40:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427e44:	add	x1, x1, #0xe08
  427e48:	ldr	x1, [x1]
  427e4c:	str	x1, [x0]
  427e50:	mov	w0, #0x2                   	// #2
  427e54:	str	w0, [sp, #48]
  427e58:	ldr	x0, [sp, #32]
  427e5c:	ldr	x0, [x0, #24]
  427e60:	str	x0, [sp, #56]
  427e64:	ldr	x0, [sp, #32]
  427e68:	ldr	x0, [x0, #32]
  427e6c:	str	x0, [sp, #64]
  427e70:	ldr	x0, [sp, #80]
  427e74:	mov	w1, w0
  427e78:	ldr	x0, [sp, #96]
  427e7c:	add	w0, w1, w0
  427e80:	mov	w3, w0
  427e84:	ldr	x0, [sp, #88]
  427e88:	add	x1, sp, #0x30
  427e8c:	mov	x2, x1
  427e90:	mov	x1, x0
  427e94:	mov	w0, w3
  427e98:	bl	433164 <wcrtomb@plt+0x2e454>
  427e9c:	str	wzr, [sp, #316]
  427ea0:	b	427ec4 <wcrtomb@plt+0x231b4>
  427ea4:	ldr	x1, [sp, #88]
  427ea8:	ldrsw	x0, [sp, #316]
  427eac:	lsl	x0, x0, #3
  427eb0:	add	x0, x1, x0
  427eb4:	str	xzr, [x0]
  427eb8:	ldr	w0, [sp, #316]
  427ebc:	add	w0, w0, #0x1
  427ec0:	str	w0, [sp, #316]
  427ec4:	ldrsw	x1, [sp, #316]
  427ec8:	ldr	x2, [sp, #80]
  427ecc:	ldr	x0, [sp, #96]
  427ed0:	add	x0, x2, x0
  427ed4:	cmp	x1, x0
  427ed8:	b.cc	427ea4 <wcrtomb@plt+0x23194>  // b.lo, b.ul, b.last
  427edc:	add	x0, sp, #0x50
  427ee0:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  427ee4:	mov	w0, #0x0                   	// #0
  427ee8:	ldr	x19, [sp, #16]
  427eec:	ldp	x29, x30, [sp], #320
  427ef0:	ret
  427ef4:	stp	x29, x30, [sp, #-32]!
  427ef8:	mov	x29, sp
  427efc:	str	x0, [sp, #24]
  427f00:	str	x1, [sp, #16]
  427f04:	ldr	x0, [sp, #24]
  427f08:	ldr	x0, [x0, #48]
  427f0c:	cmp	x0, #0x0
  427f10:	b.ne	427fe4 <wcrtomb@plt+0x232d4>  // b.any
  427f14:	ldr	x0, [sp, #24]
  427f18:	ldr	x2, [x0, #24]
  427f1c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427f20:	add	x1, x0, #0x8a8
  427f24:	mov	x0, x2
  427f28:	bl	4047c0 <strcmp@plt>
  427f2c:	cmp	w0, #0x0
  427f30:	b.ne	427f58 <wcrtomb@plt+0x23248>  // b.any
  427f34:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427f38:	add	x0, x0, #0x8b0
  427f3c:	bl	42fa1c <wcrtomb@plt+0x2ad0c>
  427f40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427f44:	add	x0, x0, #0x4a8
  427f48:	ldr	x1, [x0]
  427f4c:	ldr	x0, [sp, #24]
  427f50:	str	x1, [x0, #48]
  427f54:	b	427fb8 <wcrtomb@plt+0x232a8>
  427f58:	ldr	x0, [sp, #24]
  427f5c:	ldr	x0, [x0, #24]
  427f60:	bl	4279a0 <wcrtomb@plt+0x22c90>
  427f64:	cmp	w0, #0x0
  427f68:	b.eq	427f78 <wcrtomb@plt+0x23268>  // b.none
  427f6c:	bl	4276a4 <wcrtomb@plt+0x22994>
  427f70:	mov	w0, #0x1                   	// #1
  427f74:	b	428158 <wcrtomb@plt+0x23448>
  427f78:	ldr	x0, [sp, #24]
  427f7c:	ldr	x2, [x0, #24]
  427f80:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  427f84:	add	x1, x0, #0x8b8
  427f88:	mov	x0, x2
  427f8c:	bl	4043d0 <fopen@plt>
  427f90:	mov	x1, x0
  427f94:	ldr	x0, [sp, #24]
  427f98:	str	x1, [x0, #48]
  427f9c:	ldr	x0, [sp, #24]
  427fa0:	ldr	x0, [x0, #48]
  427fa4:	cmp	x0, #0x0
  427fa8:	b.ne	427fb8 <wcrtomb@plt+0x232a8>  // b.any
  427fac:	ldr	x0, [sp, #24]
  427fb0:	ldr	x0, [x0, #24]
  427fb4:	bl	43a640 <wcrtomb@plt+0x35930>
  427fb8:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  427fbc:	add	x0, x0, #0xf50
  427fc0:	ldrb	w0, [x0]
  427fc4:	mov	w1, w0
  427fc8:	ldr	x0, [sp, #24]
  427fcc:	str	w1, [x0, #40]
  427fd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  427fd4:	add	x0, x0, #0xac0
  427fd8:	ldrb	w1, [x0]
  427fdc:	ldr	x0, [sp, #24]
  427fe0:	strb	w1, [x0, #44]
  427fe4:	ldr	x0, [sp, #24]
  427fe8:	bl	427b98 <wcrtomb@plt+0x22e88>
  427fec:	cmp	w0, #0x3
  427ff0:	b.eq	428150 <wcrtomb@plt+0x23440>  // b.none
  427ff4:	cmp	w0, #0x3
  427ff8:	b.hi	427fe4 <wcrtomb@plt+0x232d4>  // b.pmore
  427ffc:	cmp	w0, #0x2
  428000:	b.eq	428020 <wcrtomb@plt+0x23310>  // b.none
  428004:	cmp	w0, #0x2
  428008:	b.hi	427fe4 <wcrtomb@plt+0x232d4>  // b.pmore
  42800c:	cmp	w0, #0x0
  428010:	b.eq	428088 <wcrtomb@plt+0x23378>  // b.none
  428014:	cmp	w0, #0x1
  428018:	b.eq	428110 <wcrtomb@plt+0x23400>  // b.none
  42801c:	b	427fe4 <wcrtomb@plt+0x232d4>
  428020:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428024:	add	x0, x0, #0x24c
  428028:	ldr	w0, [x0]
  42802c:	and	w0, w0, #0x200
  428030:	cmp	w0, #0x0
  428034:	b.eq	428080 <wcrtomb@plt+0x23370>  // b.none
  428038:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42803c:	add	x0, x0, #0x420
  428040:	ldr	x0, [x0]
  428044:	cmp	x0, #0x0
  428048:	b.eq	42805c <wcrtomb@plt+0x2334c>  // b.none
  42804c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428050:	add	x0, x0, #0x420
  428054:	ldr	x0, [x0]
  428058:	blr	x0
  42805c:	ldr	x0, [sp, #24]
  428060:	ldr	x0, [x0, #24]
  428064:	bl	459cd8 <argp_usage@@Base+0x10bec>
  428068:	mov	x3, x0
  42806c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  428070:	add	x2, x0, #0x8c0
  428074:	mov	w1, #0x0                   	// #0
  428078:	mov	w0, #0x0                   	// #0
  42807c:	bl	404100 <error@plt>
  428080:	ldr	x0, [sp, #24]
  428084:	str	wzr, [x0, #40]
  428088:	ldr	x0, [sp, #24]
  42808c:	ldrb	w0, [x0, #44]
  428090:	eor	w0, w0, #0x1
  428094:	and	w0, w0, #0xff
  428098:	cmp	w0, #0x0
  42809c:	b.eq	4280ec <wcrtomb@plt+0x233dc>  // b.none
  4280a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4280a4:	add	x0, x0, #0x324
  4280a8:	ldrb	w0, [x0]
  4280ac:	cmp	w0, #0x0
  4280b0:	b.eq	4280c4 <wcrtomb@plt+0x233b4>  // b.none
  4280b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4280b8:	add	x0, x0, #0xb18
  4280bc:	ldr	x0, [x0]
  4280c0:	bl	423de0 <wcrtomb@plt+0x1f0d0>
  4280c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4280c8:	add	x0, x0, #0xb18
  4280cc:	ldr	x0, [x0]
  4280d0:	ldr	x1, [sp, #24]
  4280d4:	bl	427d44 <wcrtomb@plt+0x23034>
  4280d8:	cmp	w0, #0x0
  4280dc:	b.ne	4280ec <wcrtomb@plt+0x233dc>  // b.any
  4280e0:	bl	42733c <wcrtomb@plt+0x2262c>
  4280e4:	mov	w0, #0x1                   	// #1
  4280e8:	b	428158 <wcrtomb@plt+0x23448>
  4280ec:	ldr	x0, [sp, #16]
  4280f0:	str	wzr, [x0, #16]
  4280f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4280f8:	add	x0, x0, #0xb18
  4280fc:	ldr	x1, [x0]
  428100:	ldr	x0, [sp, #16]
  428104:	str	x1, [x0, #24]
  428108:	mov	w0, #0x0                   	// #0
  42810c:	b	428158 <wcrtomb@plt+0x23448>
  428110:	ldr	x0, [sp, #24]
  428114:	ldr	x2, [x0, #24]
  428118:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42811c:	add	x1, x0, #0x8a8
  428120:	mov	x0, x2
  428124:	bl	4047c0 <strcmp@plt>
  428128:	cmp	w0, #0x0
  42812c:	b.eq	42813c <wcrtomb@plt+0x2342c>  // b.none
  428130:	ldr	x0, [sp, #24]
  428134:	ldr	x0, [x0, #48]
  428138:	bl	404380 <fclose@plt>
  42813c:	ldr	x0, [sp, #24]
  428140:	str	xzr, [x0, #48]
  428144:	bl	4276a4 <wcrtomb@plt+0x22994>
  428148:	mov	w0, #0x1                   	// #1
  42814c:	b	428158 <wcrtomb@plt+0x23448>
  428150:	nop
  428154:	b	427fe4 <wcrtomb@plt+0x232d4>
  428158:	ldp	x29, x30, [sp], #32
  42815c:	ret
  428160:	stp	x29, x30, [sp, #-48]!
  428164:	mov	x29, sp
  428168:	str	x0, [sp, #24]
  42816c:	ldr	x0, [sp, #24]
  428170:	ldr	x0, [x0, #24]
  428174:	str	x0, [sp, #40]
  428178:	ldr	x0, [sp, #40]
  42817c:	bl	4040b0 <strlen@plt>
  428180:	str	x0, [sp, #32]
  428184:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428188:	add	x0, x0, #0xb20
  42818c:	ldr	x0, [x0]
  428190:	ldr	x1, [sp, #32]
  428194:	cmp	x1, x0
  428198:	b.ls	42821c <wcrtomb@plt+0x2350c>  // b.plast
  42819c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4281a0:	add	x0, x0, #0xb20
  4281a4:	ldr	x0, [x0]
  4281a8:	lsl	x1, x0, #1
  4281ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4281b0:	add	x0, x0, #0xb20
  4281b4:	str	x1, [x0]
  4281b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4281bc:	add	x0, x0, #0xb20
  4281c0:	ldr	x0, [x0]
  4281c4:	cmp	x0, #0x0
  4281c8:	b.ne	4281d0 <wcrtomb@plt+0x234c0>  // b.any
  4281cc:	bl	412b2c <wcrtomb@plt+0xde1c>
  4281d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4281d4:	add	x0, x0, #0xb20
  4281d8:	ldr	x0, [x0]
  4281dc:	ldr	x1, [sp, #32]
  4281e0:	cmp	x1, x0
  4281e4:	b.hi	42819c <wcrtomb@plt+0x2348c>  // b.pmore
  4281e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4281ec:	add	x0, x0, #0xb18
  4281f0:	ldr	x0, [x0]
  4281f4:	bl	404880 <free@plt>
  4281f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4281fc:	add	x0, x0, #0xb20
  428200:	ldr	x0, [x0]
  428204:	add	x0, x0, #0x2
  428208:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  42820c:	mov	x1, x0
  428210:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428214:	add	x0, x0, #0xb18
  428218:	str	x1, [x0]
  42821c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428220:	add	x0, x0, #0xb18
  428224:	ldr	x0, [x0]
  428228:	ldr	x1, [sp, #40]
  42822c:	bl	4049d0 <strcpy@plt>
  428230:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428234:	add	x0, x0, #0xb18
  428238:	ldr	x0, [x0]
  42823c:	bl	427b34 <wcrtomb@plt+0x22e24>
  428240:	nop
  428244:	ldp	x29, x30, [sp], #48
  428248:	ret
  42824c:	stp	x29, x30, [sp, #-48]!
  428250:	mov	x29, sp
  428254:	str	w0, [sp, #28]
  428258:	b	428388 <wcrtomb@plt+0x23678>
  42825c:	ldr	x0, [sp, #40]
  428260:	ldr	w0, [x0, #16]
  428264:	cmp	w0, #0x4
  428268:	b.eq	428364 <wcrtomb@plt+0x23654>  // b.none
  42826c:	cmp	w0, #0x4
  428270:	b.hi	428388 <wcrtomb@plt+0x23678>  // b.pmore
  428274:	cmp	w0, #0x3
  428278:	b.eq	4282a8 <wcrtomb@plt+0x23598>  // b.none
  42827c:	cmp	w0, #0x3
  428280:	b.hi	428388 <wcrtomb@plt+0x23678>  // b.pmore
  428284:	cmp	w0, #0x2
  428288:	b.eq	4282b0 <wcrtomb@plt+0x235a0>  // b.none
  42828c:	cmp	w0, #0x2
  428290:	b.hi	428388 <wcrtomb@plt+0x23678>  // b.pmore
  428294:	cmp	w0, #0x0
  428298:	b.eq	4282fc <wcrtomb@plt+0x235ec>  // b.none
  42829c:	cmp	w0, #0x1
  4282a0:	b.eq	4282d4 <wcrtomb@plt+0x235c4>  // b.none
  4282a4:	b	428388 <wcrtomb@plt+0x23678>
  4282a8:	bl	4276a4 <wcrtomb@plt+0x22994>
  4282ac:	b	428388 <wcrtomb@plt+0x23678>
  4282b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4282b4:	add	x1, x0, #0xb30
  4282b8:	ldr	x0, [sp, #40]
  4282bc:	bl	427ef4 <wcrtomb@plt+0x231e4>
  4282c0:	cmp	w0, #0x0
  4282c4:	b.ne	428388 <wcrtomb@plt+0x23678>  // b.any
  4282c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4282cc:	add	x0, x0, #0xb30
  4282d0:	b	4283ac <wcrtomb@plt+0x2369c>
  4282d4:	ldr	w0, [sp, #28]
  4282d8:	cmp	w0, #0x0
  4282dc:	b.eq	4282fc <wcrtomb@plt+0x235ec>  // b.none
  4282e0:	ldr	x0, [sp, #40]
  4282e4:	ldr	x0, [x0, #24]
  4282e8:	bl	45b858 <argp_usage@@Base+0x1276c>
  4282ec:	bl	425828 <wcrtomb@plt+0x20b18>
  4282f0:	bl	425b98 <wcrtomb@plt+0x20e88>
  4282f4:	bl	4276a4 <wcrtomb@plt+0x22994>
  4282f8:	b	428388 <wcrtomb@plt+0x23678>
  4282fc:	ldr	x0, [sp, #40]
  428300:	bl	428160 <wcrtomb@plt+0x23450>
  428304:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428308:	add	x0, x0, #0x324
  42830c:	ldrb	w0, [x0]
  428310:	cmp	w0, #0x0
  428314:	b.eq	428328 <wcrtomb@plt+0x23618>  // b.none
  428318:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42831c:	add	x0, x0, #0xb18
  428320:	ldr	x0, [x0]
  428324:	bl	423de0 <wcrtomb@plt+0x1f0d0>
  428328:	ldr	x0, [sp, #40]
  42832c:	ldr	w1, [x0, #16]
  428330:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428334:	add	x0, x0, #0xb30
  428338:	str	w1, [x0, #16]
  42833c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428340:	add	x0, x0, #0xb18
  428344:	ldr	x1, [x0]
  428348:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42834c:	add	x0, x0, #0xb30
  428350:	str	x1, [x0, #24]
  428354:	bl	4276a4 <wcrtomb@plt+0x22994>
  428358:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42835c:	add	x0, x0, #0xb30
  428360:	b	4283ac <wcrtomb@plt+0x2369c>
  428364:	ldr	x0, [sp, #40]
  428368:	ldr	w2, [x0, #24]
  42836c:	ldr	x0, [sp, #40]
  428370:	ldr	x0, [x0, #32]
  428374:	mov	x1, x0
  428378:	mov	w0, w2
  42837c:	bl	426914 <wcrtomb@plt+0x21c04>
  428380:	bl	4276a4 <wcrtomb@plt+0x22994>
  428384:	nop
  428388:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42838c:	add	x0, x0, #0xb10
  428390:	ldr	x0, [x0]
  428394:	str	x0, [sp, #40]
  428398:	ldr	x0, [sp, #40]
  42839c:	cmp	x0, #0x0
  4283a0:	b.ne	42825c <wcrtomb@plt+0x2354c>  // b.any
  4283a4:	bl	42745c <wcrtomb@plt+0x2274c>
  4283a8:	mov	x0, #0x0                   	// #0
  4283ac:	ldp	x29, x30, [sp], #48
  4283b0:	ret
  4283b4:	stp	x29, x30, [sp, #-48]!
  4283b8:	mov	x29, sp
  4283bc:	str	w0, [sp, #28]
  4283c0:	ldr	w0, [sp, #28]
  4283c4:	bl	42824c <wcrtomb@plt+0x2353c>
  4283c8:	str	x0, [sp, #40]
  4283cc:	ldr	x0, [sp, #40]
  4283d0:	cmp	x0, #0x0
  4283d4:	b.eq	4283e4 <wcrtomb@plt+0x236d4>  // b.none
  4283d8:	ldr	x0, [sp, #40]
  4283dc:	ldr	x0, [x0, #24]
  4283e0:	b	4283e8 <wcrtomb@plt+0x236d8>
  4283e4:	mov	x0, #0x0                   	// #0
  4283e8:	ldp	x29, x30, [sp], #48
  4283ec:	ret
  4283f0:	stp	x29, x30, [sp, #-32]!
  4283f4:	mov	x29, sp
  4283f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4283fc:	add	x0, x0, #0x2b0
  428400:	ldrb	w0, [x0]
  428404:	cmp	w0, #0x0
  428408:	b.eq	4285cc <wcrtomb@plt+0x238bc>  // b.none
  42840c:	b	428430 <wcrtomb@plt+0x23720>
  428410:	ldr	x0, [sp, #16]
  428414:	ldr	x0, [x0, #24]
  428418:	bl	45b858 <argp_usage@@Base+0x1276c>
  42841c:	bl	425828 <wcrtomb@plt+0x20b18>
  428420:	mov	w1, w0
  428424:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428428:	add	x0, x0, #0xb68
  42842c:	str	w1, [x0]
  428430:	mov	w0, #0x0                   	// #0
  428434:	bl	42824c <wcrtomb@plt+0x2353c>
  428438:	str	x0, [sp, #16]
  42843c:	ldr	x0, [sp, #16]
  428440:	cmp	x0, #0x0
  428444:	b.eq	428458 <wcrtomb@plt+0x23748>  // b.none
  428448:	ldr	x0, [sp, #16]
  42844c:	ldr	w0, [x0, #16]
  428450:	cmp	w0, #0x1
  428454:	b.eq	428410 <wcrtomb@plt+0x23700>  // b.none
  428458:	ldr	x0, [sp, #16]
  42845c:	cmp	x0, #0x0
  428460:	b.eq	428594 <wcrtomb@plt+0x23884>  // b.none
  428464:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428468:	add	x0, x0, #0xb70
  42846c:	ldr	x0, [x0]
  428470:	bl	427200 <wcrtomb@plt+0x224f0>
  428474:	ldr	x0, [sp, #16]
  428478:	ldr	x0, [x0, #24]
  42847c:	bl	427198 <wcrtomb@plt+0x22488>
  428480:	mov	x1, x0
  428484:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428488:	add	x0, x0, #0xb70
  42848c:	str	x1, [x0]
  428490:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428494:	add	x0, x0, #0xb70
  428498:	ldr	x0, [x0]
  42849c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4284a0:	add	x1, x1, #0xb68
  4284a4:	ldr	w1, [x1]
  4284a8:	str	w1, [x0, #40]
  4284ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4284b0:	add	x0, x0, #0xb70
  4284b4:	ldr	x0, [x0]
  4284b8:	str	xzr, [x0]
  4284bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4284c0:	add	x0, x0, #0xb70
  4284c4:	ldr	x0, [x0]
  4284c8:	str	xzr, [x0, #48]
  4284cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4284d0:	add	x0, x0, #0xac4
  4284d4:	ldr	w0, [x0]
  4284d8:	cmp	w0, #0x2
  4284dc:	b.ne	4284e8 <wcrtomb@plt+0x237d8>  // b.any
  4284e0:	mov	w0, #0x10000000            	// #268435456
  4284e4:	b	4284ec <wcrtomb@plt+0x237dc>
  4284e8:	mov	w0, #0x0                   	// #0
  4284ec:	adrp	x1, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4284f0:	add	x1, x1, #0xf54
  4284f4:	ldr	w1, [x1]
  4284f8:	orr	w1, w0, w1
  4284fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428500:	add	x0, x0, #0xac8
  428504:	ldr	w0, [x0]
  428508:	orr	w2, w1, w0
  42850c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428510:	add	x0, x0, #0x2d4
  428514:	ldr	w1, [x0]
  428518:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42851c:	add	x0, x0, #0xb70
  428520:	ldr	x0, [x0]
  428524:	orr	w1, w2, w1
  428528:	str	w1, [x0, #32]
  42852c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428530:	add	x0, x0, #0xb70
  428534:	ldr	x0, [x0]
  428538:	str	xzr, [x0, #56]
  42853c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428540:	add	x0, x0, #0xb70
  428544:	ldr	x0, [x0]
  428548:	str	xzr, [x0, #64]
  42854c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428550:	add	x0, x0, #0xb70
  428554:	ldr	x0, [x0]
  428558:	mov	w1, #0x1                   	// #1
  42855c:	strb	w1, [x0, #36]
  428560:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428564:	add	x0, x0, #0xb70
  428568:	ldr	x1, [x0]
  42856c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428570:	add	x0, x0, #0xb08
  428574:	str	x1, [x0]
  428578:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42857c:	add	x0, x0, #0xb08
  428580:	ldr	x1, [x0]
  428584:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428588:	add	x0, x0, #0xb00
  42858c:	str	x1, [x0]
  428590:	b	428668 <wcrtomb@plt+0x23958>
  428594:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428598:	add	x0, x0, #0xb68
  42859c:	ldr	w0, [x0]
  4285a0:	cmp	w0, #0x0
  4285a4:	b.eq	428668 <wcrtomb@plt+0x23958>  // b.none
  4285a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4285ac:	add	x0, x0, #0xb68
  4285b0:	ldr	w0, [x0]
  4285b4:	mov	x3, #0x0                   	// #0
  4285b8:	mov	w2, #0x0                   	// #0
  4285bc:	mov	w1, w0
  4285c0:	mov	x0, #0x0                   	// #0
  4285c4:	bl	428674 <wcrtomb@plt+0x23964>
  4285c8:	b	428668 <wcrtomb@plt+0x23958>
  4285cc:	str	wzr, [sp, #28]
  4285d0:	ldr	w0, [sp, #28]
  4285d4:	str	w0, [sp, #24]
  4285d8:	b	4285f0 <wcrtomb@plt+0x238e0>
  4285dc:	ldr	x0, [sp, #16]
  4285e0:	ldr	x0, [x0, #24]
  4285e4:	bl	45b858 <argp_usage@@Base+0x1276c>
  4285e8:	bl	425828 <wcrtomb@plt+0x20b18>
  4285ec:	str	w0, [sp, #28]
  4285f0:	mov	w0, #0x0                   	// #0
  4285f4:	bl	42824c <wcrtomb@plt+0x2353c>
  4285f8:	str	x0, [sp, #16]
  4285fc:	ldr	x0, [sp, #16]
  428600:	cmp	x0, #0x0
  428604:	b.eq	428618 <wcrtomb@plt+0x23908>  // b.none
  428608:	ldr	x0, [sp, #16]
  42860c:	ldr	w0, [x0, #16]
  428610:	cmp	w0, #0x1
  428614:	b.eq	4285dc <wcrtomb@plt+0x238cc>  // b.none
  428618:	ldr	x0, [sp, #16]
  42861c:	cmp	x0, #0x0
  428620:	b.eq	428640 <wcrtomb@plt+0x23930>  // b.none
  428624:	ldr	x0, [sp, #16]
  428628:	ldr	x0, [x0, #24]
  42862c:	mov	x3, #0x0                   	// #0
  428630:	mov	w2, #0x1                   	// #1
  428634:	ldr	w1, [sp, #28]
  428638:	bl	428674 <wcrtomb@plt+0x23964>
  42863c:	b	4285d0 <wcrtomb@plt+0x238c0>
  428640:	ldr	w1, [sp, #28]
  428644:	ldr	w0, [sp, #24]
  428648:	cmp	w1, w0
  42864c:	b.eq	428664 <wcrtomb@plt+0x23954>  // b.none
  428650:	mov	x3, #0x0                   	// #0
  428654:	mov	w2, #0x0                   	// #0
  428658:	ldr	w1, [sp, #28]
  42865c:	mov	x0, #0x0                   	// #0
  428660:	bl	428674 <wcrtomb@plt+0x23964>
  428664:	nop
  428668:	nop
  42866c:	ldp	x29, x30, [sp], #32
  428670:	ret
  428674:	stp	x29, x30, [sp, #-64]!
  428678:	mov	x29, sp
  42867c:	str	x0, [sp, #40]
  428680:	str	w1, [sp, #36]
  428684:	strb	w2, [sp, #35]
  428688:	str	x3, [sp, #24]
  42868c:	ldr	x0, [sp, #40]
  428690:	bl	427198 <wcrtomb@plt+0x22488>
  428694:	str	x0, [sp, #56]
  428698:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42869c:	add	x0, x0, #0xb08
  4286a0:	ldr	x1, [x0]
  4286a4:	ldr	x0, [sp, #56]
  4286a8:	str	x1, [x0, #8]
  4286ac:	ldr	x0, [sp, #56]
  4286b0:	str	xzr, [x0]
  4286b4:	ldr	x0, [sp, #56]
  4286b8:	str	xzr, [x0, #48]
  4286bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4286c0:	add	x0, x0, #0xac4
  4286c4:	ldr	w0, [x0]
  4286c8:	cmp	w0, #0x2
  4286cc:	b.ne	4286d8 <wcrtomb@plt+0x239c8>  // b.any
  4286d0:	mov	w0, #0x10000000            	// #268435456
  4286d4:	b	4286dc <wcrtomb@plt+0x239cc>
  4286d8:	mov	w0, #0x0                   	// #0
  4286dc:	adrp	x1, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4286e0:	add	x1, x1, #0xf54
  4286e4:	ldr	w1, [x1]
  4286e8:	orr	w1, w0, w1
  4286ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4286f0:	add	x0, x0, #0xac8
  4286f4:	ldr	w0, [x0]
  4286f8:	orr	w1, w1, w0
  4286fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428700:	add	x0, x0, #0x2d4
  428704:	ldr	w0, [x0]
  428708:	orr	w1, w1, w0
  42870c:	ldr	x0, [sp, #56]
  428710:	str	w1, [x0, #32]
  428714:	ldr	x0, [sp, #56]
  428718:	ldr	w1, [sp, #36]
  42871c:	str	w1, [x0, #40]
  428720:	ldr	x0, [sp, #56]
  428724:	str	xzr, [x0, #56]
  428728:	ldr	x0, [sp, #56]
  42872c:	ldr	x1, [sp, #24]
  428730:	str	x1, [x0, #64]
  428734:	ldr	x0, [sp, #56]
  428738:	ldrb	w1, [sp, #35]
  42873c:	strb	w1, [x0, #36]
  428740:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428744:	add	x0, x0, #0xb08
  428748:	ldr	x0, [x0]
  42874c:	cmp	x0, #0x0
  428750:	b.eq	42876c <wcrtomb@plt+0x23a5c>  // b.none
  428754:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428758:	add	x0, x0, #0xb08
  42875c:	ldr	x0, [x0]
  428760:	ldr	x1, [sp, #56]
  428764:	str	x1, [x0]
  428768:	b	42877c <wcrtomb@plt+0x23a6c>
  42876c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428770:	add	x0, x0, #0xb00
  428774:	ldr	x1, [sp, #56]
  428778:	str	x1, [x0]
  42877c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428780:	add	x0, x0, #0xb08
  428784:	ldr	x1, [sp, #56]
  428788:	str	x1, [x0]
  42878c:	ldr	x0, [sp, #56]
  428790:	ldp	x29, x30, [sp], #64
  428794:	ret
  428798:	stp	x29, x30, [sp, #-48]!
  42879c:	mov	x29, sp
  4287a0:	str	x0, [sp, #24]
  4287a4:	ldr	x0, [sp, #24]
  4287a8:	bl	427198 <wcrtomb@plt+0x22488>
  4287ac:	str	x0, [sp, #40]
  4287b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4287b4:	add	x0, x0, #0x2d8
  4287b8:	ldrb	w0, [x0]
  4287bc:	cmp	w0, #0x0
  4287c0:	b.eq	4287e4 <wcrtomb@plt+0x23ad4>  // b.none
  4287c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4287c8:	add	x0, x0, #0xb00
  4287cc:	ldr	x0, [x0]
  4287d0:	str	x0, [sp, #32]
  4287d4:	ldr	x0, [sp, #32]
  4287d8:	bl	42896c <wcrtomb@plt+0x23c5c>
  4287dc:	ldr	x0, [sp, #32]
  4287e0:	bl	427200 <wcrtomb@plt+0x224f0>
  4287e4:	ldr	x0, [sp, #40]
  4287e8:	str	xzr, [x0, #8]
  4287ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4287f0:	add	x0, x0, #0xb00
  4287f4:	ldr	x1, [x0]
  4287f8:	ldr	x0, [sp, #40]
  4287fc:	str	x1, [x0]
  428800:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428804:	add	x0, x0, #0xb00
  428808:	ldr	x1, [sp, #40]
  42880c:	str	x1, [x0]
  428810:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428814:	add	x0, x0, #0xb08
  428818:	ldr	x0, [x0]
  42881c:	cmp	x0, #0x0
  428820:	b.ne	42883c <wcrtomb@plt+0x23b2c>  // b.any
  428824:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428828:	add	x0, x0, #0xb00
  42882c:	ldr	x1, [x0]
  428830:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428834:	add	x0, x0, #0xb08
  428838:	str	x1, [x0]
  42883c:	ldr	x0, [sp, #40]
  428840:	str	xzr, [x0, #48]
  428844:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428848:	add	x0, x0, #0xac4
  42884c:	ldr	w0, [x0]
  428850:	cmp	w0, #0x2
  428854:	b.ne	428860 <wcrtomb@plt+0x23b50>  // b.any
  428858:	mov	w0, #0x10000000            	// #268435456
  42885c:	b	428864 <wcrtomb@plt+0x23b54>
  428860:	mov	w0, #0x0                   	// #0
  428864:	adrp	x1, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  428868:	add	x1, x1, #0xf54
  42886c:	ldr	w1, [x1]
  428870:	orr	w1, w0, w1
  428874:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428878:	add	x0, x0, #0xac8
  42887c:	ldr	w0, [x0]
  428880:	orr	w1, w1, w0
  428884:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428888:	add	x0, x0, #0x2d4
  42888c:	ldr	w0, [x0]
  428890:	orr	w1, w1, w0
  428894:	ldr	x0, [sp, #40]
  428898:	str	w1, [x0, #32]
  42889c:	ldr	x0, [sp, #40]
  4288a0:	str	wzr, [x0, #40]
  4288a4:	ldr	x0, [sp, #40]
  4288a8:	str	xzr, [x0, #56]
  4288ac:	ldr	x0, [sp, #40]
  4288b0:	str	xzr, [x0, #64]
  4288b4:	ldr	x0, [sp, #40]
  4288b8:	mov	w1, #0x1                   	// #1
  4288bc:	strb	w1, [x0, #36]
  4288c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4288c4:	add	x0, x0, #0x2d8
  4288c8:	mov	w1, #0x1                   	// #1
  4288cc:	strb	w1, [x0]
  4288d0:	nop
  4288d4:	ldp	x29, x30, [sp], #48
  4288d8:	ret
  4288dc:	stp	x29, x30, [sp, #-48]!
  4288e0:	mov	x29, sp
  4288e4:	str	x0, [sp, #24]
  4288e8:	str	x1, [sp, #16]
  4288ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4288f0:	add	x0, x0, #0xb00
  4288f4:	ldr	x0, [x0]
  4288f8:	str	x0, [sp, #40]
  4288fc:	b	428954 <wcrtomb@plt+0x23c44>
  428900:	ldr	x0, [sp, #40]
  428904:	ldr	x0, [x0, #16]
  428908:	ldrb	w0, [x0]
  42890c:	cmp	w0, #0x0
  428910:	b.eq	428948 <wcrtomb@plt+0x23c38>  // b.none
  428914:	ldr	x0, [sp, #40]
  428918:	ldr	x3, [x0, #16]
  42891c:	ldr	x0, [sp, #40]
  428920:	ldr	w0, [x0, #32]
  428924:	mov	w2, w0
  428928:	ldr	x1, [sp, #24]
  42892c:	mov	x0, x3
  428930:	bl	44aa74 <argp_usage@@Base+0x1988>
  428934:	and	w0, w0, #0xff
  428938:	cmp	w0, #0x0
  42893c:	b.eq	428948 <wcrtomb@plt+0x23c38>  // b.none
  428940:	ldr	x0, [sp, #40]
  428944:	b	428964 <wcrtomb@plt+0x23c54>
  428948:	ldr	x0, [sp, #40]
  42894c:	ldr	x0, [x0]
  428950:	str	x0, [sp, #40]
  428954:	ldr	x0, [sp, #40]
  428958:	cmp	x0, #0x0
  42895c:	b.ne	428900 <wcrtomb@plt+0x23bf0>  // b.any
  428960:	mov	x0, #0x0                   	// #0
  428964:	ldp	x29, x30, [sp], #48
  428968:	ret
  42896c:	sub	sp, sp, #0x20
  428970:	str	x0, [sp, #8]
  428974:	ldr	x0, [sp, #8]
  428978:	ldr	x0, [x0, #8]
  42897c:	str	x0, [sp, #24]
  428980:	ldr	x0, [sp, #24]
  428984:	cmp	x0, #0x0
  428988:	b.eq	4289a0 <wcrtomb@plt+0x23c90>  // b.none
  42898c:	ldr	x0, [sp, #8]
  428990:	ldr	x1, [x0]
  428994:	ldr	x0, [sp, #24]
  428998:	str	x1, [x0]
  42899c:	b	4289b4 <wcrtomb@plt+0x23ca4>
  4289a0:	ldr	x0, [sp, #8]
  4289a4:	ldr	x1, [x0]
  4289a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4289ac:	add	x0, x0, #0xb00
  4289b0:	str	x1, [x0]
  4289b4:	ldr	x0, [sp, #8]
  4289b8:	ldr	x0, [x0]
  4289bc:	str	x0, [sp, #24]
  4289c0:	ldr	x0, [sp, #24]
  4289c4:	cmp	x0, #0x0
  4289c8:	b.eq	4289e0 <wcrtomb@plt+0x23cd0>  // b.none
  4289cc:	ldr	x0, [sp, #8]
  4289d0:	ldr	x1, [x0, #8]
  4289d4:	ldr	x0, [sp, #24]
  4289d8:	str	x1, [x0, #8]
  4289dc:	b	4289f4 <wcrtomb@plt+0x23ce4>
  4289e0:	ldr	x0, [sp, #8]
  4289e4:	ldr	x1, [x0, #8]
  4289e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4289ec:	add	x0, x0, #0xb08
  4289f0:	str	x1, [x0]
  4289f4:	nop
  4289f8:	add	sp, sp, #0x20
  4289fc:	ret
  428a00:	stp	x29, x30, [sp, #-48]!
  428a04:	mov	x29, sp
  428a08:	str	x0, [sp, #24]
  428a0c:	ldr	x0, [sp, #24]
  428a10:	bl	4040b0 <strlen@plt>
  428a14:	str	x0, [sp, #32]
  428a18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428a1c:	add	x0, x0, #0xb00
  428a20:	ldr	x0, [x0]
  428a24:	str	x0, [sp, #40]
  428a28:	ldr	x0, [sp, #40]
  428a2c:	cmp	x0, #0x0
  428a30:	b.ne	428a3c <wcrtomb@plt+0x23d2c>  // b.any
  428a34:	mov	w0, #0x1                   	// #1
  428a38:	b	428be4 <wcrtomb@plt+0x23ed4>
  428a3c:	ldr	x0, [sp, #40]
  428a40:	ldr	x0, [x0, #16]
  428a44:	ldrb	w0, [x0]
  428a48:	cmp	w0, #0x0
  428a4c:	b.ne	428a7c <wcrtomb@plt+0x23d6c>  // b.any
  428a50:	ldr	x0, [sp, #40]
  428a54:	ldr	w0, [x0, #40]
  428a58:	bl	425b98 <wcrtomb@plt+0x20e88>
  428a5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428a60:	add	x0, x0, #0xb00
  428a64:	str	xzr, [x0]
  428a68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428a6c:	add	x0, x0, #0xb08
  428a70:	str	xzr, [x0]
  428a74:	mov	w0, #0x1                   	// #1
  428a78:	b	428be4 <wcrtomb@plt+0x23ed4>
  428a7c:	ldr	x1, [sp, #32]
  428a80:	ldr	x0, [sp, #24]
  428a84:	bl	4288dc <wcrtomb@plt+0x23bcc>
  428a88:	str	x0, [sp, #40]
  428a8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428a90:	add	x0, x0, #0x2d8
  428a94:	ldrb	w0, [x0]
  428a98:	cmp	w0, #0x0
  428a9c:	b.eq	428acc <wcrtomb@plt+0x23dbc>  // b.none
  428aa0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428aa4:	add	x0, x0, #0xb00
  428aa8:	ldr	x0, [x0]
  428aac:	ldr	x1, [sp, #40]
  428ab0:	cmp	x1, x0
  428ab4:	b.ne	428ac8 <wcrtomb@plt+0x23db8>  // b.any
  428ab8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428abc:	add	x0, x0, #0x2d8
  428ac0:	strb	wzr, [x0]
  428ac4:	b	428acc <wcrtomb@plt+0x23dbc>
  428ac8:	str	xzr, [sp, #40]
  428acc:	ldr	x0, [sp, #40]
  428ad0:	cmp	x0, #0x0
  428ad4:	b.eq	428b88 <wcrtomb@plt+0x23e78>  // b.none
  428ad8:	ldr	x0, [sp, #40]
  428adc:	ldr	x0, [x0, #24]
  428ae0:	ldr	x1, [sp, #24]
  428ae4:	add	x0, x1, x0
  428ae8:	ldrb	w0, [x0]
  428aec:	cmp	w0, #0x2f
  428af0:	b.ne	428b18 <wcrtomb@plt+0x23e08>  // b.any
  428af4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428af8:	add	x0, x0, #0x2d4
  428afc:	ldr	w0, [x0]
  428b00:	cmp	w0, #0x0
  428b04:	b.eq	428b18 <wcrtomb@plt+0x23e08>  // b.none
  428b08:	ldr	x0, [sp, #40]
  428b0c:	ldr	x0, [x0, #48]
  428b10:	cmp	x0, #0x0
  428b14:	b.ne	428b2c <wcrtomb@plt+0x23e1c>  // b.any
  428b18:	ldr	x0, [sp, #40]
  428b1c:	ldr	x0, [x0, #48]
  428b20:	add	x1, x0, #0x1
  428b24:	ldr	x0, [sp, #40]
  428b28:	str	x1, [x0, #48]
  428b2c:	ldr	x0, [sp, #40]
  428b30:	ldr	w0, [x0, #40]
  428b34:	bl	425b98 <wcrtomb@plt+0x20e88>
  428b38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428b3c:	add	x0, x0, #0x328
  428b40:	ldr	x0, [x0]
  428b44:	cmp	x0, #0x0
  428b48:	b.ne	428b64 <wcrtomb@plt+0x23e54>  // b.any
  428b4c:	ldr	x0, [sp, #40]
  428b50:	ldr	x0, [x0, #48]
  428b54:	cmp	x0, #0x0
  428b58:	cset	w0, ne  // ne = any
  428b5c:	and	w0, w0, #0xff
  428b60:	b	428be4 <wcrtomb@plt+0x23ed4>
  428b64:	ldr	x0, [sp, #40]
  428b68:	ldr	x1, [x0, #48]
  428b6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428b70:	add	x0, x0, #0x328
  428b74:	ldr	x0, [x0]
  428b78:	cmp	x1, x0
  428b7c:	cset	w0, eq  // eq = none
  428b80:	and	w0, w0, #0xff
  428b84:	b	428be4 <wcrtomb@plt+0x23ed4>
  428b88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428b8c:	add	x0, x0, #0x2b0
  428b90:	ldrb	w0, [x0]
  428b94:	cmp	w0, #0x0
  428b98:	b.eq	428bd8 <wcrtomb@plt+0x23ec8>  // b.none
  428b9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428ba0:	add	x0, x0, #0xb00
  428ba4:	ldr	x0, [x0]
  428ba8:	ldr	x0, [x0, #48]
  428bac:	cmp	x0, #0x0
  428bb0:	b.eq	428bd8 <wcrtomb@plt+0x23ec8>  // b.none
  428bb4:	bl	4283f0 <wcrtomb@plt+0x236e0>
  428bb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428bbc:	add	x0, x0, #0xb00
  428bc0:	ldr	x0, [x0]
  428bc4:	ldr	x0, [x0, #48]
  428bc8:	cmp	x0, #0x0
  428bcc:	b.eq	428be0 <wcrtomb@plt+0x23ed0>  // b.none
  428bd0:	mov	w0, #0x0                   	// #0
  428bd4:	b	428be4 <wcrtomb@plt+0x23ed4>
  428bd8:	mov	w0, #0x0                   	// #0
  428bdc:	b	428be4 <wcrtomb@plt+0x23ed4>
  428be0:	b	428a18 <wcrtomb@plt+0x23d08>
  428be4:	ldp	x29, x30, [sp], #48
  428be8:	ret
  428bec:	stp	x29, x30, [sp, #-48]!
  428bf0:	mov	x29, sp
  428bf4:	str	x0, [sp, #24]
  428bf8:	ldr	x0, [sp, #24]
  428bfc:	ldr	x0, [x0, #8]
  428c00:	cmp	x0, #0x0
  428c04:	b.eq	428c2c <wcrtomb@plt+0x23f1c>  // b.none
  428c08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428c0c:	add	x0, x0, #0x328
  428c10:	ldr	x0, [x0]
  428c14:	cmp	x0, #0x0
  428c18:	b.eq	428c2c <wcrtomb@plt+0x23f1c>  // b.none
  428c1c:	ldr	x0, [sp, #24]
  428c20:	ldrb	w0, [x0, #16]
  428c24:	cmp	w0, #0x0
  428c28:	b.eq	428c34 <wcrtomb@plt+0x23f24>  // b.none
  428c2c:	mov	w0, #0x0                   	// #0
  428c30:	b	428d08 <wcrtomb@plt+0x23ff8>
  428c34:	ldr	x0, [sp, #24]
  428c38:	ldr	x0, [x0, #8]
  428c3c:	bl	4040b0 <strlen@plt>
  428c40:	str	x0, [sp, #32]
  428c44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428c48:	add	x0, x0, #0xb00
  428c4c:	ldr	x0, [x0]
  428c50:	str	x0, [sp, #40]
  428c54:	b	428cf8 <wcrtomb@plt+0x23fe8>
  428c58:	ldr	x0, [sp, #40]
  428c5c:	ldr	x0, [x0, #16]
  428c60:	ldrb	w0, [x0]
  428c64:	cmp	w0, #0x0
  428c68:	b.eq	428cb0 <wcrtomb@plt+0x23fa0>  // b.none
  428c6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428c70:	add	x0, x0, #0x328
  428c74:	ldr	x0, [x0]
  428c78:	cmp	x0, #0x0
  428c7c:	b.ne	428c94 <wcrtomb@plt+0x23f84>  // b.any
  428c80:	ldr	x0, [sp, #40]
  428c84:	ldr	x0, [x0, #48]
  428c88:	cmp	x0, #0x0
  428c8c:	b.eq	428ce4 <wcrtomb@plt+0x23fd4>  // b.none
  428c90:	b	428cb0 <wcrtomb@plt+0x23fa0>
  428c94:	ldr	x0, [sp, #40]
  428c98:	ldr	x1, [x0, #48]
  428c9c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428ca0:	add	x0, x0, #0x328
  428ca4:	ldr	x0, [x0]
  428ca8:	cmp	x1, x0
  428cac:	b.cc	428ce4 <wcrtomb@plt+0x23fd4>  // b.lo, b.ul, b.last
  428cb0:	ldr	x0, [sp, #40]
  428cb4:	ldr	x0, [x0, #24]
  428cb8:	ldr	x1, [sp, #32]
  428cbc:	cmp	x1, x0
  428cc0:	b.cc	428cec <wcrtomb@plt+0x23fdc>  // b.lo, b.ul, b.last
  428cc4:	ldr	x0, [sp, #24]
  428cc8:	ldr	x1, [x0, #8]
  428ccc:	ldr	x0, [sp, #40]
  428cd0:	ldr	x0, [x0, #24]
  428cd4:	add	x0, x1, x0
  428cd8:	ldrb	w0, [x0]
  428cdc:	cmp	w0, #0x2f
  428ce0:	b.ne	428cec <wcrtomb@plt+0x23fdc>  // b.any
  428ce4:	mov	w0, #0x0                   	// #0
  428ce8:	b	428d08 <wcrtomb@plt+0x23ff8>
  428cec:	ldr	x0, [sp, #40]
  428cf0:	ldr	x0, [x0]
  428cf4:	str	x0, [sp, #40]
  428cf8:	ldr	x0, [sp, #40]
  428cfc:	cmp	x0, #0x0
  428d00:	b.ne	428c58 <wcrtomb@plt+0x23f48>  // b.any
  428d04:	mov	w0, #0x1                   	// #1
  428d08:	ldp	x29, x30, [sp], #48
  428d0c:	ret
  428d10:	stp	x29, x30, [sp, #-32]!
  428d14:	mov	x29, sp
  428d18:	str	x0, [sp, #24]
  428d1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428d20:	add	x0, x0, #0xac4
  428d24:	ldr	w0, [x0]
  428d28:	cmp	w0, #0x0
  428d2c:	b.ne	428dd8 <wcrtomb@plt+0x240c8>  // b.any
  428d30:	mov	w1, #0x0                   	// #0
  428d34:	ldr	x0, [sp, #24]
  428d38:	bl	44a29c <argp_usage@@Base+0x11b0>
  428d3c:	and	w0, w0, #0xff
  428d40:	cmp	w0, #0x0
  428d44:	b.eq	428dd8 <wcrtomb@plt+0x240c8>  // b.none
  428d48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428d4c:	add	x0, x0, #0xb78
  428d50:	mov	w1, #0x1                   	// #1
  428d54:	str	w1, [x0]
  428d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428d5c:	add	x0, x0, #0x420
  428d60:	ldr	x0, [x0]
  428d64:	cmp	x0, #0x0
  428d68:	b.eq	428d7c <wcrtomb@plt+0x2406c>  // b.none
  428d6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428d70:	add	x0, x0, #0x420
  428d74:	ldr	x0, [x0]
  428d78:	blr	x0
  428d7c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  428d80:	add	x0, x0, #0x8f0
  428d84:	bl	404c60 <gettext@plt>
  428d88:	mov	x2, x0
  428d8c:	mov	w1, #0x0                   	// #0
  428d90:	mov	w0, #0x0                   	// #0
  428d94:	bl	404100 <error@plt>
  428d98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428d9c:	add	x0, x0, #0x420
  428da0:	ldr	x0, [x0]
  428da4:	cmp	x0, #0x0
  428da8:	b.eq	428dbc <wcrtomb@plt+0x240ac>  // b.none
  428dac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428db0:	add	x0, x0, #0x420
  428db4:	ldr	x0, [x0]
  428db8:	blr	x0
  428dbc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  428dc0:	add	x0, x0, #0x920
  428dc4:	bl	404c60 <gettext@plt>
  428dc8:	mov	x2, x0
  428dcc:	mov	w1, #0x0                   	// #0
  428dd0:	mov	w0, #0x0                   	// #0
  428dd4:	bl	404100 <error@plt>
  428dd8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428ddc:	add	x0, x0, #0xb78
  428de0:	ldr	w0, [x0]
  428de4:	ldp	x29, x30, [sp], #32
  428de8:	ret
  428dec:	stp	x29, x30, [sp, #-48]!
  428df0:	mov	x29, sp
  428df4:	str	x19, [sp, #16]
  428df8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428dfc:	add	x0, x0, #0xb00
  428e00:	ldr	x0, [x0]
  428e04:	str	x0, [sp, #40]
  428e08:	b	428f14 <wcrtomb@plt+0x24204>
  428e0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428e10:	add	x0, x0, #0x328
  428e14:	ldr	x0, [x0]
  428e18:	cmp	x0, #0x0
  428e1c:	b.ne	428e38 <wcrtomb@plt+0x24128>  // b.any
  428e20:	ldr	x0, [sp, #40]
  428e24:	ldr	x0, [x0, #48]
  428e28:	cmp	x0, #0x0
  428e2c:	cset	w0, eq  // eq = none
  428e30:	and	w0, w0, #0xff
  428e34:	b	428e58 <wcrtomb@plt+0x24148>
  428e38:	ldr	x0, [sp, #40]
  428e3c:	ldr	x1, [x0, #48]
  428e40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428e44:	add	x0, x0, #0x328
  428e48:	ldr	x0, [x0]
  428e4c:	cmp	x1, x0
  428e50:	cset	w0, cc  // cc = lo, ul, last
  428e54:	and	w0, w0, #0xff
  428e58:	cmp	w0, #0x0
  428e5c:	b.eq	428f08 <wcrtomb@plt+0x241f8>  // b.none
  428e60:	ldr	x0, [sp, #40]
  428e64:	ldr	x0, [x0, #16]
  428e68:	ldrb	w0, [x0]
  428e6c:	cmp	w0, #0x0
  428e70:	b.eq	428f08 <wcrtomb@plt+0x241f8>  // b.none
  428e74:	ldr	x0, [sp, #40]
  428e78:	ldr	x0, [x0, #16]
  428e7c:	bl	428d10 <wcrtomb@plt+0x24000>
  428e80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428e84:	add	x0, x0, #0x420
  428e88:	ldr	x0, [x0]
  428e8c:	cmp	x0, #0x0
  428e90:	b.eq	428ea4 <wcrtomb@plt+0x24194>  // b.none
  428e94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428e98:	add	x0, x0, #0x420
  428e9c:	ldr	x0, [x0]
  428ea0:	blr	x0
  428ea4:	ldr	x0, [sp, #40]
  428ea8:	ldr	x0, [x0, #48]
  428eac:	cmp	x0, #0x0
  428eb0:	b.ne	428ec8 <wcrtomb@plt+0x241b8>  // b.any
  428eb4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  428eb8:	add	x0, x0, #0x978
  428ebc:	bl	404c60 <gettext@plt>
  428ec0:	mov	x19, x0
  428ec4:	b	428ed8 <wcrtomb@plt+0x241c8>
  428ec8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  428ecc:	add	x0, x0, #0x998
  428ed0:	bl	404c60 <gettext@plt>
  428ed4:	mov	x19, x0
  428ed8:	ldr	x0, [sp, #40]
  428edc:	ldr	x0, [x0, #16]
  428ee0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  428ee4:	mov	x3, x0
  428ee8:	mov	x2, x19
  428eec:	mov	w1, #0x0                   	// #0
  428ef0:	mov	w0, #0x0                   	// #0
  428ef4:	bl	404100 <error@plt>
  428ef8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428efc:	add	x0, x0, #0xdb0
  428f00:	mov	w1, #0x2                   	// #2
  428f04:	str	w1, [x0]
  428f08:	ldr	x0, [sp, #40]
  428f0c:	ldr	x0, [x0]
  428f10:	str	x0, [sp, #40]
  428f14:	ldr	x0, [sp, #40]
  428f18:	cmp	x0, #0x0
  428f1c:	b.ne	428e0c <wcrtomb@plt+0x240fc>  // b.any
  428f20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428f24:	add	x0, x0, #0xb00
  428f28:	str	xzr, [x0]
  428f2c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428f30:	add	x0, x0, #0xb08
  428f34:	str	xzr, [x0]
  428f38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428f3c:	add	x0, x0, #0x2b0
  428f40:	ldrb	w0, [x0]
  428f44:	cmp	w0, #0x0
  428f48:	b.eq	428fd0 <wcrtomb@plt+0x242c0>  // b.none
  428f4c:	b	428fb8 <wcrtomb@plt+0x242a8>
  428f50:	ldr	x0, [sp, #32]
  428f54:	bl	428d10 <wcrtomb@plt+0x24000>
  428f58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428f5c:	add	x0, x0, #0x420
  428f60:	ldr	x0, [x0]
  428f64:	cmp	x0, #0x0
  428f68:	b.eq	428f7c <wcrtomb@plt+0x2426c>  // b.none
  428f6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  428f70:	add	x0, x0, #0x420
  428f74:	ldr	x0, [x0]
  428f78:	blr	x0
  428f7c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  428f80:	add	x0, x0, #0x978
  428f84:	bl	404c60 <gettext@plt>
  428f88:	mov	x19, x0
  428f8c:	ldr	x0, [sp, #32]
  428f90:	bl	459cd8 <argp_usage@@Base+0x10bec>
  428f94:	mov	x3, x0
  428f98:	mov	x2, x19
  428f9c:	mov	w1, #0x0                   	// #0
  428fa0:	mov	w0, #0x0                   	// #0
  428fa4:	bl	404100 <error@plt>
  428fa8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428fac:	add	x0, x0, #0xdb0
  428fb0:	mov	w1, #0x2                   	// #2
  428fb4:	str	w1, [x0]
  428fb8:	mov	w0, #0x1                   	// #1
  428fbc:	bl	4283b4 <wcrtomb@plt+0x236a4>
  428fc0:	str	x0, [sp, #32]
  428fc4:	ldr	x0, [sp, #32]
  428fc8:	cmp	x0, #0x0
  428fcc:	b.ne	428f50 <wcrtomb@plt+0x24240>  // b.any
  428fd0:	nop
  428fd4:	ldr	x19, [sp, #16]
  428fd8:	ldp	x29, x30, [sp], #48
  428fdc:	ret
  428fe0:	stp	x29, x30, [sp, #-32]!
  428fe4:	mov	x29, sp
  428fe8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  428fec:	add	x0, x0, #0xb00
  428ff0:	ldr	x0, [x0]
  428ff4:	cmp	x0, #0x0
  428ff8:	b.eq	429158 <wcrtomb@plt+0x24448>  // b.none
  428ffc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429000:	add	x0, x0, #0xb00
  429004:	ldr	x0, [x0]
  429008:	str	x0, [sp, #24]
  42900c:	b	429070 <wcrtomb@plt+0x24360>
  429010:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429014:	add	x0, x0, #0x328
  429018:	ldr	x0, [x0]
  42901c:	cmp	x0, #0x0
  429020:	b.ne	42903c <wcrtomb@plt+0x2432c>  // b.any
  429024:	ldr	x0, [sp, #24]
  429028:	ldr	x0, [x0, #48]
  42902c:	cmp	x0, #0x0
  429030:	cset	w0, ne  // ne = any
  429034:	and	w0, w0, #0xff
  429038:	b	42905c <wcrtomb@plt+0x2434c>
  42903c:	ldr	x0, [sp, #24]
  429040:	ldr	x1, [x0, #48]
  429044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429048:	add	x0, x0, #0x328
  42904c:	ldr	x0, [x0]
  429050:	cmp	x1, x0
  429054:	cset	w0, cs  // cs = hs, nlast
  429058:	and	w0, w0, #0xff
  42905c:	cmp	w0, #0x0
  429060:	b.ne	429160 <wcrtomb@plt+0x24450>  // b.any
  429064:	ldr	x0, [sp, #24]
  429068:	ldr	x0, [x0]
  42906c:	str	x0, [sp, #24]
  429070:	ldr	x0, [sp, #24]
  429074:	cmp	x0, #0x0
  429078:	b.ne	429010 <wcrtomb@plt+0x24300>  // b.any
  42907c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429080:	add	x0, x0, #0x2b4
  429084:	ldr	w0, [x0]
  429088:	cmp	w0, #0x0
  42908c:	b.eq	4290ac <wcrtomb@plt+0x2439c>  // b.none
  429090:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  429094:	add	x0, x0, #0x9c8
  429098:	bl	404c60 <gettext@plt>
  42909c:	mov	x2, x0
  4290a0:	mov	w1, #0x0                   	// #0
  4290a4:	mov	w0, #0x0                   	// #0
  4290a8:	bl	404100 <error@plt>
  4290ac:	mov	w0, #0x1                   	// #1
  4290b0:	bl	434ff4 <wcrtomb@plt+0x302e4>
  4290b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4290b8:	add	x0, x0, #0xb00
  4290bc:	ldr	x0, [x0]
  4290c0:	str	x0, [sp, #24]
  4290c4:	b	4290e8 <wcrtomb@plt+0x243d8>
  4290c8:	ldr	x0, [sp, #24]
  4290cc:	ldr	x0, [x0, #16]
  4290d0:	bl	428d10 <wcrtomb@plt+0x24000>
  4290d4:	cmp	w0, #0x0
  4290d8:	b.ne	4290f8 <wcrtomb@plt+0x243e8>  // b.any
  4290dc:	ldr	x0, [sp, #24]
  4290e0:	ldr	x0, [x0]
  4290e4:	str	x0, [sp, #24]
  4290e8:	ldr	x0, [sp, #24]
  4290ec:	cmp	x0, #0x0
  4290f0:	b.ne	4290c8 <wcrtomb@plt+0x243b8>  // b.any
  4290f4:	b	4290fc <wcrtomb@plt+0x243ec>
  4290f8:	nop
  4290fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429100:	add	x0, x0, #0xb00
  429104:	str	xzr, [x0]
  429108:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42910c:	add	x0, x0, #0xb08
  429110:	str	xzr, [x0]
  429114:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429118:	add	x0, x0, #0x2b0
  42911c:	ldrb	w0, [x0]
  429120:	cmp	w0, #0x0
  429124:	b.eq	429164 <wcrtomb@plt+0x24454>  // b.none
  429128:	nop
  42912c:	mov	w0, #0x1                   	// #1
  429130:	bl	4283b4 <wcrtomb@plt+0x236a4>
  429134:	str	x0, [sp, #16]
  429138:	ldr	x0, [sp, #16]
  42913c:	cmp	x0, #0x0
  429140:	b.eq	429164 <wcrtomb@plt+0x24454>  // b.none
  429144:	ldr	x0, [sp, #16]
  429148:	bl	428d10 <wcrtomb@plt+0x24000>
  42914c:	cmp	w0, #0x0
  429150:	b.eq	42912c <wcrtomb@plt+0x2441c>  // b.none
  429154:	b	429164 <wcrtomb@plt+0x24454>
  429158:	nop
  42915c:	b	429164 <wcrtomb@plt+0x24454>
  429160:	nop
  429164:	ldp	x29, x30, [sp], #32
  429168:	ret
  42916c:	stp	x29, x30, [sp, #-112]!
  429170:	mov	x29, sp
  429174:	str	x0, [sp, #40]
  429178:	str	w1, [sp, #36]
  42917c:	str	x2, [sp, #24]
  429180:	ldr	w0, [sp, #36]
  429184:	cmp	w0, #0x1
  429188:	b.ne	429194 <wcrtomb@plt+0x24484>  // b.any
  42918c:	ldr	x0, [sp, #40]
  429190:	b	429358 <wcrtomb@plt+0x24648>
  429194:	ldr	w0, [sp, #36]
  429198:	cmp	w0, #0x2
  42919c:	b.ne	4291f0 <wcrtomb@plt+0x244e0>  // b.any
  4291a0:	ldr	x0, [sp, #40]
  4291a4:	ldr	x0, [x0]
  4291a8:	ldr	x2, [sp, #24]
  4291ac:	mov	x1, x0
  4291b0:	ldr	x0, [sp, #40]
  4291b4:	blr	x2
  4291b8:	cmp	w0, #0x0
  4291bc:	b.le	4291e8 <wcrtomb@plt+0x244d8>
  4291c0:	ldr	x0, [sp, #40]
  4291c4:	ldr	x0, [x0]
  4291c8:	str	x0, [sp, #56]
  4291cc:	ldr	x0, [sp, #56]
  4291d0:	ldr	x1, [sp, #40]
  4291d4:	str	x1, [x0]
  4291d8:	ldr	x0, [sp, #40]
  4291dc:	str	xzr, [x0]
  4291e0:	ldr	x0, [sp, #56]
  4291e4:	b	429358 <wcrtomb@plt+0x24648>
  4291e8:	ldr	x0, [sp, #40]
  4291ec:	b	429358 <wcrtomb@plt+0x24648>
  4291f0:	ldr	x0, [sp, #40]
  4291f4:	str	x0, [sp, #104]
  4291f8:	ldr	w0, [sp, #36]
  4291fc:	add	w0, w0, #0x1
  429200:	lsr	w1, w0, #31
  429204:	add	w0, w1, w0
  429208:	asr	w0, w0, #1
  42920c:	str	w0, [sp, #72]
  429210:	ldr	w0, [sp, #36]
  429214:	lsr	w1, w0, #31
  429218:	add	w0, w1, w0
  42921c:	asr	w0, w0, #1
  429220:	str	w0, [sp, #68]
  429224:	ldr	x0, [sp, #40]
  429228:	str	x0, [sp, #80]
  42922c:	ldr	w0, [sp, #72]
  429230:	sub	w0, w0, #0x1
  429234:	str	w0, [sp, #76]
  429238:	b	429254 <wcrtomb@plt+0x24544>
  42923c:	ldr	x0, [sp, #80]
  429240:	ldr	x0, [x0]
  429244:	str	x0, [sp, #80]
  429248:	ldr	w0, [sp, #76]
  42924c:	sub	w0, w0, #0x1
  429250:	str	w0, [sp, #76]
  429254:	ldr	w0, [sp, #76]
  429258:	cmp	w0, #0x0
  42925c:	b.ne	42923c <wcrtomb@plt+0x2452c>  // b.any
  429260:	ldr	x0, [sp, #80]
  429264:	ldr	x0, [x0]
  429268:	str	x0, [sp, #96]
  42926c:	ldr	x0, [sp, #80]
  429270:	str	xzr, [x0]
  429274:	ldr	x2, [sp, #24]
  429278:	ldr	w1, [sp, #72]
  42927c:	ldr	x0, [sp, #104]
  429280:	bl	42916c <wcrtomb@plt+0x2445c>
  429284:	str	x0, [sp, #104]
  429288:	ldr	x2, [sp, #24]
  42928c:	ldr	w1, [sp, #68]
  429290:	ldr	x0, [sp, #96]
  429294:	bl	42916c <wcrtomb@plt+0x2445c>
  429298:	str	x0, [sp, #96]
  42929c:	add	x0, sp, #0x38
  4292a0:	str	x0, [sp, #88]
  4292a4:	b	429314 <wcrtomb@plt+0x24604>
  4292a8:	ldr	x2, [sp, #24]
  4292ac:	ldr	x1, [sp, #96]
  4292b0:	ldr	x0, [sp, #104]
  4292b4:	blr	x2
  4292b8:	cmp	w0, #0x0
  4292bc:	b.ge	4292ec <wcrtomb@plt+0x245dc>  // b.tcont
  4292c0:	ldr	x0, [sp, #104]
  4292c4:	ldr	x0, [x0]
  4292c8:	str	x0, [sp, #80]
  4292cc:	ldr	x0, [sp, #88]
  4292d0:	ldr	x1, [sp, #104]
  4292d4:	str	x1, [x0]
  4292d8:	ldr	x0, [sp, #104]
  4292dc:	str	x0, [sp, #88]
  4292e0:	ldr	x0, [sp, #80]
  4292e4:	str	x0, [sp, #104]
  4292e8:	b	429314 <wcrtomb@plt+0x24604>
  4292ec:	ldr	x0, [sp, #96]
  4292f0:	ldr	x0, [x0]
  4292f4:	str	x0, [sp, #80]
  4292f8:	ldr	x0, [sp, #88]
  4292fc:	ldr	x1, [sp, #96]
  429300:	str	x1, [x0]
  429304:	ldr	x0, [sp, #96]
  429308:	str	x0, [sp, #88]
  42930c:	ldr	x0, [sp, #80]
  429310:	str	x0, [sp, #96]
  429314:	ldr	x0, [sp, #104]
  429318:	cmp	x0, #0x0
  42931c:	b.eq	42932c <wcrtomb@plt+0x2461c>  // b.none
  429320:	ldr	x0, [sp, #96]
  429324:	cmp	x0, #0x0
  429328:	b.ne	4292a8 <wcrtomb@plt+0x24598>  // b.any
  42932c:	ldr	x0, [sp, #104]
  429330:	cmp	x0, #0x0
  429334:	b.eq	429348 <wcrtomb@plt+0x24638>  // b.none
  429338:	ldr	x0, [sp, #88]
  42933c:	ldr	x1, [sp, #104]
  429340:	str	x1, [x0]
  429344:	b	429354 <wcrtomb@plt+0x24644>
  429348:	ldr	x0, [sp, #88]
  42934c:	ldr	x1, [sp, #96]
  429350:	str	x1, [x0]
  429354:	ldr	x0, [sp, #56]
  429358:	ldp	x29, x30, [sp], #112
  42935c:	ret
  429360:	stp	x29, x30, [sp, #-80]!
  429364:	mov	x29, sp
  429368:	str	x0, [sp, #40]
  42936c:	str	w1, [sp, #36]
  429370:	str	x2, [sp, #24]
  429374:	ldr	x2, [sp, #24]
  429378:	ldr	w1, [sp, #36]
  42937c:	ldr	x0, [sp, #40]
  429380:	bl	42916c <wcrtomb@plt+0x2445c>
  429384:	str	x0, [sp, #56]
  429388:	str	xzr, [sp, #64]
  42938c:	ldr	x0, [sp, #56]
  429390:	str	x0, [sp, #72]
  429394:	b	4293b8 <wcrtomb@plt+0x246a8>
  429398:	ldr	x0, [sp, #72]
  42939c:	ldr	x1, [sp, #64]
  4293a0:	str	x1, [x0, #8]
  4293a4:	ldr	x0, [sp, #72]
  4293a8:	str	x0, [sp, #64]
  4293ac:	ldr	x0, [sp, #72]
  4293b0:	ldr	x0, [x0]
  4293b4:	str	x0, [sp, #72]
  4293b8:	ldr	x0, [sp, #72]
  4293bc:	cmp	x0, #0x0
  4293c0:	b.ne	429398 <wcrtomb@plt+0x24688>  // b.any
  4293c4:	ldr	x0, [sp, #56]
  4293c8:	ldp	x29, x30, [sp], #80
  4293cc:	ret
  4293d0:	stp	x29, x30, [sp, #-48]!
  4293d4:	mov	x29, sp
  4293d8:	str	x0, [sp, #24]
  4293dc:	str	x1, [sp, #16]
  4293e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4293e4:	add	x0, x0, #0x328
  4293e8:	ldr	x0, [x0]
  4293ec:	cmp	x0, #0x0
  4293f0:	b.ne	429410 <wcrtomb@plt+0x24700>  // b.any
  4293f4:	ldr	x0, [sp, #16]
  4293f8:	ldr	x0, [x0, #48]
  4293fc:	cmp	x0, #0x0
  429400:	cset	w0, ne  // ne = any
  429404:	and	w0, w0, #0xff
  429408:	mov	w2, w0
  42940c:	b	429434 <wcrtomb@plt+0x24724>
  429410:	ldr	x0, [sp, #16]
  429414:	ldr	x1, [x0, #48]
  429418:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42941c:	add	x0, x0, #0x328
  429420:	ldr	x0, [x0]
  429424:	cmp	x1, x0
  429428:	cset	w0, cs  // cs = hs, nlast
  42942c:	and	w0, w0, #0xff
  429430:	mov	w2, w0
  429434:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429438:	add	x0, x0, #0x328
  42943c:	ldr	x0, [x0]
  429440:	cmp	x0, #0x0
  429444:	b.ne	429460 <wcrtomb@plt+0x24750>  // b.any
  429448:	ldr	x0, [sp, #24]
  42944c:	ldr	x0, [x0, #48]
  429450:	cmp	x0, #0x0
  429454:	cset	w0, ne  // ne = any
  429458:	and	w0, w0, #0xff
  42945c:	b	429480 <wcrtomb@plt+0x24770>
  429460:	ldr	x0, [sp, #24]
  429464:	ldr	x1, [x0, #48]
  429468:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42946c:	add	x0, x0, #0x328
  429470:	ldr	x0, [x0]
  429474:	cmp	x1, x0
  429478:	cset	w0, cs  // cs = hs, nlast
  42947c:	and	w0, w0, #0xff
  429480:	sub	w0, w2, w0
  429484:	str	w0, [sp, #44]
  429488:	ldr	w0, [sp, #44]
  42948c:	cmp	w0, #0x0
  429490:	b.ne	4294b4 <wcrtomb@plt+0x247a4>  // b.any
  429494:	ldr	x0, [sp, #24]
  429498:	ldr	x2, [x0, #16]
  42949c:	ldr	x0, [sp, #16]
  4294a0:	ldr	x0, [x0, #16]
  4294a4:	mov	x1, x0
  4294a8:	mov	x0, x2
  4294ac:	bl	4047c0 <strcmp@plt>
  4294b0:	b	4294b8 <wcrtomb@plt+0x247a8>
  4294b4:	ldr	w0, [sp, #44]
  4294b8:	ldp	x29, x30, [sp], #48
  4294bc:	ret
  4294c0:	stp	x29, x30, [sp, #-32]!
  4294c4:	mov	x29, sp
  4294c8:	str	x0, [sp, #24]
  4294cc:	str	x1, [sp, #16]
  4294d0:	ldr	x0, [sp, #24]
  4294d4:	ldr	x2, [x0, #16]
  4294d8:	ldr	x0, [sp, #16]
  4294dc:	ldr	x0, [x0, #16]
  4294e0:	mov	x1, x0
  4294e4:	mov	x0, x2
  4294e8:	bl	4047c0 <strcmp@plt>
  4294ec:	ldp	x29, x30, [sp], #32
  4294f0:	ret
  4294f4:	sub	sp, sp, #0x230
  4294f8:	stp	x29, x30, [sp]
  4294fc:	mov	x29, sp
  429500:	str	x19, [sp, #16]
  429504:	str	x0, [sp, #40]
  429508:	str	x1, [sp, #32]
  42950c:	ldr	x0, [sp, #40]
  429510:	bl	41cb88 <wcrtomb@plt+0x17e78>
  429514:	mov	x1, x0
  429518:	ldr	x0, [sp, #32]
  42951c:	str	x1, [x0, #56]
  429520:	ldr	x0, [sp, #32]
  429524:	ldr	x0, [x0, #56]
  429528:	bl	41cfd8 <wcrtomb@plt+0x182c8>
  42952c:	str	x0, [sp, #496]
  429530:	ldr	x0, [sp, #496]
  429534:	cmp	x0, #0x0
  429538:	b.eq	4297ec <wcrtomb@plt+0x24adc>  // b.none
  42953c:	str	xzr, [sp, #552]
  429540:	str	xzr, [sp, #544]
  429544:	ldr	x0, [sp, #32]
  429548:	ldr	x0, [x0, #24]
  42954c:	str	x0, [sp, #536]
  429550:	ldr	x0, [sp, #536]
  429554:	cmp	x0, #0x63
  429558:	b.ls	429568 <wcrtomb@plt+0x24858>  // b.plast
  42955c:	ldr	x0, [sp, #536]
  429560:	add	x0, x0, #0x64
  429564:	b	42956c <wcrtomb@plt+0x2485c>
  429568:	mov	x0, #0x64                  	// #100
  42956c:	str	x0, [sp, #528]
  429570:	ldr	x0, [sp, #528]
  429574:	add	x0, x0, #0x1
  429578:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  42957c:	str	x0, [sp, #520]
  429580:	ldr	x0, [sp, #32]
  429584:	ldr	w0, [x0, #40]
  429588:	str	w0, [sp, #492]
  42958c:	ldr	x0, [sp, #32]
  429590:	ldr	x0, [x0, #16]
  429594:	mov	x1, x0
  429598:	ldr	x0, [sp, #520]
  42959c:	bl	4049d0 <strcpy@plt>
  4295a0:	ldr	x0, [sp, #536]
  4295a4:	sub	x0, x0, #0x1
  4295a8:	ldr	x1, [sp, #520]
  4295ac:	add	x0, x1, x0
  4295b0:	ldrb	w0, [x0]
  4295b4:	cmp	w0, #0x2f
  4295b8:	b.eq	4295e8 <wcrtomb@plt+0x248d8>  // b.none
  4295bc:	ldr	x0, [sp, #536]
  4295c0:	add	x1, x0, #0x1
  4295c4:	str	x1, [sp, #536]
  4295c8:	ldr	x1, [sp, #520]
  4295cc:	add	x0, x1, x0
  4295d0:	mov	w1, #0x2f                  	// #47
  4295d4:	strb	w1, [x0]
  4295d8:	ldr	x1, [sp, #520]
  4295dc:	ldr	x0, [sp, #536]
  4295e0:	add	x0, x1, x0
  4295e4:	strb	wzr, [x0]
  4295e8:	ldr	x0, [sp, #496]
  4295ec:	str	x0, [sp, #512]
  4295f0:	b	4297c8 <wcrtomb@plt+0x24ab8>
  4295f4:	ldr	x0, [sp, #512]
  4295f8:	bl	4040b0 <strlen@plt>
  4295fc:	str	x0, [sp, #480]
  429600:	ldr	x0, [sp, #512]
  429604:	ldrb	w0, [x0]
  429608:	cmp	w0, #0x44
  42960c:	b.ne	4297b4 <wcrtomb@plt+0x24aa4>  // b.any
  429610:	ldr	x1, [sp, #536]
  429614:	ldr	x0, [sp, #480]
  429618:	add	x0, x1, x0
  42961c:	ldr	x1, [sp, #528]
  429620:	cmp	x1, x0
  429624:	b.hi	429674 <wcrtomb@plt+0x24964>  // b.pmore
  429628:	ldr	x0, [sp, #528]
  42962c:	lsl	x0, x0, #1
  429630:	str	x0, [sp, #528]
  429634:	ldr	x0, [sp, #528]
  429638:	cmp	x0, #0x0
  42963c:	b.ne	429644 <wcrtomb@plt+0x24934>  // b.any
  429640:	bl	412b2c <wcrtomb@plt+0xde1c>
  429644:	ldr	x1, [sp, #536]
  429648:	ldr	x0, [sp, #480]
  42964c:	add	x0, x1, x0
  429650:	ldr	x1, [sp, #528]
  429654:	cmp	x1, x0
  429658:	b.ls	429628 <wcrtomb@plt+0x24918>  // b.plast
  42965c:	ldr	x0, [sp, #528]
  429660:	add	x0, x0, #0x1
  429664:	mov	x1, x0
  429668:	ldr	x0, [sp, #520]
  42966c:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  429670:	str	x0, [sp, #520]
  429674:	ldr	x1, [sp, #520]
  429678:	ldr	x0, [sp, #536]
  42967c:	add	x2, x1, x0
  429680:	ldr	x0, [sp, #512]
  429684:	add	x0, x0, #0x1
  429688:	mov	x1, x0
  42968c:	mov	x0, x2
  429690:	bl	4049d0 <strcpy@plt>
  429694:	ldr	x3, [sp, #32]
  429698:	mov	w2, #0x0                   	// #0
  42969c:	ldr	w1, [sp, #492]
  4296a0:	ldr	x0, [sp, #520]
  4296a4:	bl	428674 <wcrtomb@plt+0x23964>
  4296a8:	str	x0, [sp, #472]
  4296ac:	ldr	x0, [sp, #552]
  4296b0:	cmp	x0, #0x0
  4296b4:	b.ne	4296c4 <wcrtomb@plt+0x249b4>  // b.any
  4296b8:	ldr	x0, [sp, #472]
  4296bc:	str	x0, [sp, #552]
  4296c0:	b	4296d0 <wcrtomb@plt+0x249c0>
  4296c4:	ldr	x0, [sp, #544]
  4296c8:	ldr	x1, [sp, #472]
  4296cc:	str	x1, [x0, #80]
  4296d0:	ldr	x0, [sp, #472]
  4296d4:	str	x0, [sp, #544]
  4296d8:	add	x0, sp, #0x30
  4296dc:	bl	434e14 <wcrtomb@plt+0x30104>
  4296e0:	ldr	x0, [sp, #40]
  4296e4:	str	x0, [sp, #440]
  4296e8:	ldr	x0, [sp, #40]
  4296ec:	ldr	w0, [x0, #408]
  4296f0:	cmp	w0, #0x0
  4296f4:	b.ge	42971c <wcrtomb@plt+0x24a0c>  // b.tcont
  4296f8:	mov	w0, #0xffffffff            	// #-1
  4296fc:	str	w0, [sp, #508]
  429700:	ldr	x0, [sp, #40]
  429704:	ldr	w19, [x0, #408]
  429708:	bl	404bc0 <__errno_location@plt>
  42970c:	mov	x1, x0
  429710:	neg	w0, w19
  429714:	str	w0, [x1]
  429718:	b	429744 <wcrtomb@plt+0x24a34>
  42971c:	ldr	x0, [sp, #512]
  429720:	add	x1, x0, #0x1
  429724:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429728:	add	x0, x0, #0x2f4
  42972c:	ldr	w0, [x0]
  429730:	orr	w0, w0, #0x4000
  429734:	mov	w2, w0
  429738:	ldr	x0, [sp, #40]
  42973c:	bl	410a0c <wcrtomb@plt+0xbcfc>
  429740:	str	w0, [sp, #508]
  429744:	ldr	w0, [sp, #508]
  429748:	cmp	w0, #0x0
  42974c:	b.ge	42975c <wcrtomb@plt+0x24a4c>  // b.tcont
  429750:	ldr	x0, [sp, #520]
  429754:	bl	425f04 <wcrtomb@plt+0x211f4>
  429758:	b	4297ac <wcrtomb@plt+0x24a9c>
  42975c:	ldr	w0, [sp, #508]
  429760:	str	w0, [sp, #456]
  429764:	add	x0, sp, #0x30
  429768:	add	x0, x0, #0x58
  42976c:	mov	x1, x0
  429770:	ldr	w0, [sp, #508]
  429774:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  429778:	cmp	w0, #0x0
  42977c:	b.eq	42978c <wcrtomb@plt+0x24a7c>  // b.none
  429780:	ldr	x0, [sp, #520]
  429784:	bl	4260e0 <wcrtomb@plt+0x213d0>
  429788:	b	4297ac <wcrtomb@plt+0x24a9c>
  42978c:	ldr	x0, [sp, #520]
  429790:	bl	45b858 <argp_usage@@Base+0x1276c>
  429794:	str	x0, [sp, #48]
  429798:	add	x0, sp, #0x30
  42979c:	ldr	x1, [sp, #472]
  4297a0:	bl	4294f4 <wcrtomb@plt+0x247e4>
  4297a4:	add	x0, sp, #0x30
  4297a8:	bl	410ac8 <wcrtomb@plt+0xbdb8>
  4297ac:	add	x0, sp, #0x30
  4297b0:	bl	434ecc <wcrtomb@plt+0x301bc>
  4297b4:	ldr	x0, [sp, #480]
  4297b8:	add	x0, x0, #0x1
  4297bc:	ldr	x1, [sp, #512]
  4297c0:	add	x0, x1, x0
  4297c4:	str	x0, [sp, #512]
  4297c8:	ldr	x0, [sp, #512]
  4297cc:	ldrb	w0, [x0]
  4297d0:	cmp	w0, #0x0
  4297d4:	b.ne	4295f4 <wcrtomb@plt+0x248e4>  // b.any
  4297d8:	ldr	x0, [sp, #520]
  4297dc:	bl	404880 <free@plt>
  4297e0:	ldr	x0, [sp, #32]
  4297e4:	ldr	x1, [sp, #552]
  4297e8:	str	x1, [x0, #72]
  4297ec:	nop
  4297f0:	ldr	x19, [sp, #16]
  4297f4:	ldp	x29, x30, [sp]
  4297f8:	add	sp, sp, #0x230
  4297fc:	ret
  429800:	stp	x29, x30, [sp, #-48]!
  429804:	mov	x29, sp
  429808:	str	x0, [sp, #24]
  42980c:	str	x1, [sp, #16]
  429810:	ldr	x0, [sp, #24]
  429814:	str	x0, [sp, #40]
  429818:	ldr	x0, [sp, #40]
  42981c:	ldr	x0, [x0, #88]
  429820:	ldr	x1, [sp, #16]
  429824:	bl	44e630 <argp_usage@@Base+0x5544>
  429828:	ldp	x29, x30, [sp], #48
  42982c:	ret
  429830:	stp	x29, x30, [sp, #-48]!
  429834:	mov	x29, sp
  429838:	str	x0, [sp, #24]
  42983c:	str	x1, [sp, #16]
  429840:	ldr	x0, [sp, #24]
  429844:	str	x0, [sp, #40]
  429848:	ldr	x0, [sp, #16]
  42984c:	str	x0, [sp, #32]
  429850:	ldr	x0, [sp, #40]
  429854:	ldr	x2, [x0, #88]
  429858:	ldr	x0, [sp, #32]
  42985c:	ldr	x0, [x0, #88]
  429860:	mov	x1, x0
  429864:	mov	x0, x2
  429868:	bl	4047c0 <strcmp@plt>
  42986c:	cmp	w0, #0x0
  429870:	cset	w0, eq  // eq = none
  429874:	and	w0, w0, #0xff
  429878:	ldp	x29, x30, [sp], #48
  42987c:	ret
  429880:	stp	x29, x30, [sp, #-80]!
  429884:	mov	x29, sp
  429888:	str	x0, [sp, #24]
  42988c:	str	x1, [sp, #16]
  429890:	ldr	x0, [sp, #24]
  429894:	ldr	x0, [x0, #64]
  429898:	ldr	x0, [x0, #24]
  42989c:	str	x0, [sp, #72]
  4298a0:	ldr	x0, [sp, #16]
  4298a4:	ldr	x0, [x0, #24]
  4298a8:	str	x0, [sp, #64]
  4298ac:	ldr	x0, [sp, #16]
  4298b0:	ldr	x0, [x0, #16]
  4298b4:	str	x0, [sp, #56]
  4298b8:	b	42996c <wcrtomb@plt+0x24c5c>
  4298bc:	ldr	x0, [sp, #24]
  4298c0:	ldr	x1, [x0, #24]
  4298c4:	ldr	x0, [sp, #72]
  4298c8:	sub	x0, x1, x0
  4298cc:	ldr	x1, [sp, #64]
  4298d0:	add	x0, x1, x0
  4298d4:	str	x0, [sp, #48]
  4298d8:	ldr	x0, [sp, #48]
  4298dc:	add	x0, x0, #0x1
  4298e0:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4298e4:	str	x0, [sp, #40]
  4298e8:	ldr	x1, [sp, #56]
  4298ec:	ldr	x0, [sp, #40]
  4298f0:	bl	4049d0 <strcpy@plt>
  4298f4:	ldr	x0, [sp, #24]
  4298f8:	ldr	x1, [x0, #16]
  4298fc:	ldr	x0, [sp, #72]
  429900:	add	x0, x1, x0
  429904:	mov	x1, x0
  429908:	ldr	x0, [sp, #40]
  42990c:	bl	4044c0 <strcat@plt>
  429910:	ldr	x0, [sp, #24]
  429914:	ldr	x0, [x0, #16]
  429918:	bl	404880 <free@plt>
  42991c:	ldr	x0, [sp, #24]
  429920:	ldr	x1, [sp, #40]
  429924:	str	x1, [x0, #16]
  429928:	ldr	x0, [sp, #24]
  42992c:	ldr	x1, [sp, #48]
  429930:	str	x1, [x0, #24]
  429934:	ldr	x0, [sp, #24]
  429938:	ldr	x5, [x0, #56]
  42993c:	ldr	x0, [sp, #24]
  429940:	ldr	x0, [x0, #64]
  429944:	ldr	x0, [x0, #16]
  429948:	ldr	x4, [sp, #64]
  42994c:	ldr	x3, [sp, #56]
  429950:	ldr	x2, [sp, #72]
  429954:	mov	x1, x0
  429958:	mov	x0, x5
  42995c:	bl	41bf08 <wcrtomb@plt+0x171f8>
  429960:	ldr	x0, [sp, #24]
  429964:	ldr	x0, [x0, #80]
  429968:	str	x0, [sp, #24]
  42996c:	ldr	x0, [sp, #24]
  429970:	cmp	x0, #0x0
  429974:	b.ne	4298bc <wcrtomb@plt+0x24bac>  // b.any
  429978:	nop
  42997c:	nop
  429980:	ldp	x29, x30, [sp], #80
  429984:	ret
  429988:	stp	x29, x30, [sp, #-496]!
  42998c:	mov	x29, sp
  429990:	str	xzr, [sp, #480]
  429994:	bl	4283f0 <wcrtomb@plt+0x236e0>
  429998:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42999c:	add	x0, x0, #0xb00
  4299a0:	ldr	x0, [x0]
  4299a4:	cmp	x0, #0x0
  4299a8:	b.ne	4299c4 <wcrtomb@plt+0x24cb4>  // b.any
  4299ac:	mov	x3, #0x0                   	// #0
  4299b0:	mov	w2, #0x0                   	// #0
  4299b4:	mov	w1, #0x0                   	// #0
  4299b8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  4299bc:	add	x0, x0, #0x9e0
  4299c0:	bl	428674 <wcrtomb@plt+0x23964>
  4299c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4299c8:	add	x0, x0, #0x370
  4299cc:	ldr	x0, [x0]
  4299d0:	cmp	x0, #0x0
  4299d4:	b.eq	429aa4 <wcrtomb@plt+0x24d94>  // b.none
  4299d8:	bl	4257f0 <wcrtomb@plt+0x20ae0>
  4299dc:	cmp	w0, #0x0
  4299e0:	b.eq	429a94 <wcrtomb@plt+0x24d84>  // b.none
  4299e4:	cmp	w0, #0x1
  4299e8:	b.ne	429a4c <wcrtomb@plt+0x24d3c>  // b.any
  4299ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4299f0:	add	x0, x0, #0xb00
  4299f4:	ldr	x0, [x0]
  4299f8:	ldr	w0, [x0, #40]
  4299fc:	cmp	w0, #0x0
  429a00:	b.ne	429a9c <wcrtomb@plt+0x24d8c>  // b.any
  429a04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429a08:	add	x0, x0, #0x420
  429a0c:	ldr	x0, [x0]
  429a10:	cmp	x0, #0x0
  429a14:	b.eq	429a28 <wcrtomb@plt+0x24d18>  // b.none
  429a18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429a1c:	add	x0, x0, #0x420
  429a20:	ldr	x0, [x0]
  429a24:	blr	x0
  429a28:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  429a2c:	add	x0, x0, #0x9e8
  429a30:	bl	404c60 <gettext@plt>
  429a34:	mov	x2, x0
  429a38:	mov	w1, #0x0                   	// #0
  429a3c:	mov	w0, #0x0                   	// #0
  429a40:	bl	404100 <error@plt>
  429a44:	mov	w0, #0x2                   	// #2
  429a48:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  429a4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429a50:	add	x0, x0, #0x420
  429a54:	ldr	x0, [x0]
  429a58:	cmp	x0, #0x0
  429a5c:	b.eq	429a70 <wcrtomb@plt+0x24d60>  // b.none
  429a60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429a64:	add	x0, x0, #0x420
  429a68:	ldr	x0, [x0]
  429a6c:	blr	x0
  429a70:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  429a74:	add	x0, x0, #0xa38
  429a78:	bl	404c60 <gettext@plt>
  429a7c:	mov	x2, x0
  429a80:	mov	w1, #0x0                   	// #0
  429a84:	mov	w0, #0x0                   	// #0
  429a88:	bl	404100 <error@plt>
  429a8c:	mov	w0, #0x2                   	// #2
  429a90:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  429a94:	nop
  429a98:	b	429aa0 <wcrtomb@plt+0x24d90>
  429a9c:	nop
  429aa0:	bl	41eadc <wcrtomb@plt+0x19dcc>
  429aa4:	str	wzr, [sp, #476]
  429aa8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429aac:	add	x0, x0, #0xb00
  429ab0:	ldr	x0, [x0]
  429ab4:	str	x0, [sp, #488]
  429ab8:	b	429c48 <wcrtomb@plt+0x24f38>
  429abc:	ldr	x0, [sp, #488]
  429ac0:	ldr	x0, [x0, #48]
  429ac4:	cmp	x0, #0x0
  429ac8:	b.ne	429c1c <wcrtomb@plt+0x24f0c>  // b.any
  429acc:	ldr	x0, [sp, #488]
  429ad0:	ldr	x0, [x0, #56]
  429ad4:	cmp	x0, #0x0
  429ad8:	b.ne	429c1c <wcrtomb@plt+0x24f0c>  // b.any
  429adc:	ldr	x0, [sp, #488]
  429ae0:	ldr	w0, [x0, #32]
  429ae4:	and	w0, w0, #0x10000000
  429ae8:	cmp	w0, #0x0
  429aec:	b.ne	429c24 <wcrtomb@plt+0x24f14>  // b.any
  429af0:	ldr	x0, [sp, #488]
  429af4:	ldr	w0, [x0, #40]
  429af8:	bl	425b98 <wcrtomb@plt+0x20e88>
  429afc:	ldr	x0, [sp, #488]
  429b00:	ldr	x0, [x0, #16]
  429b04:	ldrb	w0, [x0]
  429b08:	cmp	w0, #0x0
  429b0c:	b.eq	429c2c <wcrtomb@plt+0x24f1c>  // b.none
  429b10:	add	x0, sp, #0x10
  429b14:	bl	434e14 <wcrtomb@plt+0x30104>
  429b18:	ldr	x0, [sp, #488]
  429b1c:	ldr	x2, [x0, #16]
  429b20:	add	x0, sp, #0x10
  429b24:	add	x0, x0, #0x58
  429b28:	mov	x1, x0
  429b2c:	mov	x0, x2
  429b30:	bl	4255c4 <wcrtomb@plt+0x208b4>
  429b34:	cmp	w0, #0x0
  429b38:	b.eq	429b4c <wcrtomb@plt+0x24e3c>  // b.none
  429b3c:	ldr	x0, [sp, #488]
  429b40:	ldr	x0, [x0, #16]
  429b44:	bl	4260e0 <wcrtomb@plt+0x213d0>
  429b48:	b	429c30 <wcrtomb@plt+0x24f20>
  429b4c:	ldr	w0, [sp, #120]
  429b50:	and	w0, w0, #0xf000
  429b54:	cmp	w0, #0x4, lsl #12
  429b58:	b.ne	429c10 <wcrtomb@plt+0x24f00>  // b.any
  429b5c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  429b60:	add	x0, x0, #0x8b0
  429b64:	ldr	w3, [x0]
  429b68:	ldr	x0, [sp, #488]
  429b6c:	ldr	x1, [x0, #16]
  429b70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429b74:	add	x0, x0, #0x2f4
  429b78:	ldr	w0, [x0]
  429b7c:	orr	w0, w0, #0x4000
  429b80:	mov	w2, w0
  429b84:	mov	w0, w3
  429b88:	bl	404b90 <openat@plt>
  429b8c:	str	w0, [sp, #444]
  429b90:	ldr	w0, [sp, #444]
  429b94:	cmp	w0, #0x0
  429b98:	b.ge	429bac <wcrtomb@plt+0x24e9c>  // b.tcont
  429b9c:	ldr	x0, [sp, #488]
  429ba0:	ldr	x0, [x0, #16]
  429ba4:	bl	425f04 <wcrtomb@plt+0x211f4>
  429ba8:	b	429c10 <wcrtomb@plt+0x24f00>
  429bac:	ldr	w0, [sp, #444]
  429bb0:	str	w0, [sp, #424]
  429bb4:	add	x0, sp, #0x10
  429bb8:	add	x0, x0, #0x58
  429bbc:	mov	x1, x0
  429bc0:	ldr	w0, [sp, #444]
  429bc4:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  429bc8:	cmp	w0, #0x0
  429bcc:	b.eq	429be0 <wcrtomb@plt+0x24ed0>  // b.none
  429bd0:	ldr	x0, [sp, #488]
  429bd4:	ldr	x0, [x0, #16]
  429bd8:	bl	4260e0 <wcrtomb@plt+0x213d0>
  429bdc:	b	429c10 <wcrtomb@plt+0x24f00>
  429be0:	ldr	x0, [sp, #488]
  429be4:	ldr	x0, [x0, #16]
  429be8:	bl	45b858 <argp_usage@@Base+0x1276c>
  429bec:	str	x0, [sp, #16]
  429bf0:	ldr	x0, [sp, #488]
  429bf4:	ldr	x0, [x0, #48]
  429bf8:	add	x1, x0, #0x1
  429bfc:	ldr	x0, [sp, #488]
  429c00:	str	x1, [x0, #48]
  429c04:	add	x0, sp, #0x10
  429c08:	ldr	x1, [sp, #488]
  429c0c:	bl	4294f4 <wcrtomb@plt+0x247e4>
  429c10:	add	x0, sp, #0x10
  429c14:	bl	434ecc <wcrtomb@plt+0x301bc>
  429c18:	b	429c30 <wcrtomb@plt+0x24f20>
  429c1c:	nop
  429c20:	b	429c30 <wcrtomb@plt+0x24f20>
  429c24:	nop
  429c28:	b	429c30 <wcrtomb@plt+0x24f20>
  429c2c:	nop
  429c30:	ldr	x0, [sp, #488]
  429c34:	ldr	x0, [x0]
  429c38:	str	x0, [sp, #488]
  429c3c:	ldr	w0, [sp, #476]
  429c40:	add	w0, w0, #0x1
  429c44:	str	w0, [sp, #476]
  429c48:	ldr	x0, [sp, #488]
  429c4c:	cmp	x0, #0x0
  429c50:	b.ne	429abc <wcrtomb@plt+0x24dac>  // b.any
  429c54:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429c58:	add	x0, x0, #0xb00
  429c5c:	ldr	x3, [x0]
  429c60:	adrp	x0, 429000 <wcrtomb@plt+0x242f0>
  429c64:	add	x2, x0, #0x4c0
  429c68:	ldr	w1, [sp, #476]
  429c6c:	mov	x0, x3
  429c70:	bl	429360 <wcrtomb@plt+0x24650>
  429c74:	mov	x1, x0
  429c78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429c7c:	add	x0, x0, #0xb00
  429c80:	str	x1, [x0]
  429c84:	str	wzr, [sp, #476]
  429c88:	mov	x4, #0x0                   	// #0
  429c8c:	adrp	x0, 429000 <wcrtomb@plt+0x242f0>
  429c90:	add	x3, x0, #0x830
  429c94:	adrp	x0, 429000 <wcrtomb@plt+0x242f0>
  429c98:	add	x2, x0, #0x800
  429c9c:	mov	x1, #0x0                   	// #0
  429ca0:	mov	x0, #0x0                   	// #0
  429ca4:	bl	44ea34 <argp_usage@@Base+0x5948>
  429ca8:	str	x0, [sp, #464]
  429cac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429cb0:	add	x0, x0, #0xb00
  429cb4:	ldr	x0, [x0]
  429cb8:	str	x0, [sp, #488]
  429cbc:	b	429de8 <wcrtomb@plt+0x250d8>
  429cc0:	ldr	x0, [sp, #488]
  429cc4:	ldr	x0, [x0]
  429cc8:	str	x0, [sp, #456]
  429ccc:	ldr	x0, [sp, #488]
  429cd0:	ldr	w2, [x0, #40]
  429cd4:	ldr	x0, [sp, #488]
  429cd8:	ldr	x0, [x0, #16]
  429cdc:	mov	x1, x0
  429ce0:	mov	w0, w2
  429ce4:	bl	424458 <wcrtomb@plt+0x1f748>
  429ce8:	mov	x1, x0
  429cec:	ldr	x0, [sp, #488]
  429cf0:	str	x1, [x0, #88]
  429cf4:	ldr	x0, [sp, #480]
  429cf8:	cmp	x0, #0x0
  429cfc:	b.eq	429dac <wcrtomb@plt+0x2509c>  // b.none
  429d00:	ldr	x1, [sp, #488]
  429d04:	ldr	x0, [sp, #464]
  429d08:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  429d0c:	str	x0, [sp, #448]
  429d10:	ldr	x0, [sp, #448]
  429d14:	cmp	x0, #0x0
  429d18:	b.eq	429dac <wcrtomb@plt+0x2509c>  // b.none
  429d1c:	ldr	x0, [sp, #488]
  429d20:	ldr	x0, [x0, #64]
  429d24:	cmp	x0, #0x0
  429d28:	b.ne	429d78 <wcrtomb@plt+0x25068>  // b.any
  429d2c:	ldr	x0, [sp, #448]
  429d30:	ldr	x0, [x0, #72]
  429d34:	cmp	x0, #0x0
  429d38:	b.eq	429d4c <wcrtomb@plt+0x2503c>  // b.none
  429d3c:	ldr	x0, [sp, #448]
  429d40:	ldr	x0, [x0, #72]
  429d44:	ldr	x1, [sp, #488]
  429d48:	bl	429880 <wcrtomb@plt+0x24b70>
  429d4c:	ldr	x1, [sp, #488]
  429d50:	ldr	x0, [sp, #464]
  429d54:	bl	44f710 <argp_usage@@Base+0x6624>
  429d58:	ldr	x0, [sp, #448]
  429d5c:	bl	42896c <wcrtomb@plt+0x23c5c>
  429d60:	ldr	x0, [sp, #448]
  429d64:	bl	427200 <wcrtomb@plt+0x224f0>
  429d68:	ldr	w0, [sp, #476]
  429d6c:	sub	w0, w0, #0x1
  429d70:	str	w0, [sp, #476]
  429d74:	b	429dac <wcrtomb@plt+0x2509c>
  429d78:	ldr	x0, [sp, #488]
  429d7c:	ldr	x0, [x0, #72]
  429d80:	cmp	x0, #0x0
  429d84:	b.eq	429d98 <wcrtomb@plt+0x25088>  // b.none
  429d88:	ldr	x0, [sp, #488]
  429d8c:	ldr	x0, [x0, #72]
  429d90:	ldr	x1, [sp, #448]
  429d94:	bl	429880 <wcrtomb@plt+0x24b70>
  429d98:	ldr	x0, [sp, #488]
  429d9c:	bl	42896c <wcrtomb@plt+0x23c5c>
  429da0:	ldr	x0, [sp, #488]
  429da4:	bl	427200 <wcrtomb@plt+0x224f0>
  429da8:	b	429de0 <wcrtomb@plt+0x250d0>
  429dac:	ldr	x0, [sp, #488]
  429db0:	str	xzr, [x0, #48]
  429db4:	ldr	x1, [sp, #488]
  429db8:	ldr	x0, [sp, #464]
  429dbc:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  429dc0:	cmp	x0, #0x0
  429dc4:	b.ne	429dcc <wcrtomb@plt+0x250bc>  // b.any
  429dc8:	bl	412b2c <wcrtomb@plt+0xde1c>
  429dcc:	ldr	x0, [sp, #488]
  429dd0:	str	x0, [sp, #480]
  429dd4:	ldr	w0, [sp, #476]
  429dd8:	add	w0, w0, #0x1
  429ddc:	str	w0, [sp, #476]
  429de0:	ldr	x0, [sp, #456]
  429de4:	str	x0, [sp, #488]
  429de8:	ldr	x0, [sp, #488]
  429dec:	cmp	x0, #0x0
  429df0:	b.ne	429cc0 <wcrtomb@plt+0x24fb0>  // b.any
  429df4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429df8:	add	x0, x0, #0xb08
  429dfc:	ldr	x1, [sp, #480]
  429e00:	str	x1, [x0]
  429e04:	ldr	x0, [sp, #464]
  429e08:	bl	44ecd4 <argp_usage@@Base+0x5be8>
  429e0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429e10:	add	x0, x0, #0xb00
  429e14:	ldr	x3, [x0]
  429e18:	adrp	x0, 429000 <wcrtomb@plt+0x242f0>
  429e1c:	add	x2, x0, #0x3d0
  429e20:	ldr	w1, [sp, #476]
  429e24:	mov	x0, x3
  429e28:	bl	429360 <wcrtomb@plt+0x24650>
  429e2c:	mov	x1, x0
  429e30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429e34:	add	x0, x0, #0xb00
  429e38:	str	x1, [x0]
  429e3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429e40:	add	x0, x0, #0x370
  429e44:	ldr	x0, [x0]
  429e48:	cmp	x0, #0x0
  429e4c:	b.eq	429ea8 <wcrtomb@plt+0x25198>  // b.none
  429e50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429e54:	add	x0, x0, #0xb00
  429e58:	ldr	x0, [x0]
  429e5c:	str	x0, [sp, #488]
  429e60:	b	429e70 <wcrtomb@plt+0x25160>
  429e64:	ldr	x0, [sp, #488]
  429e68:	ldr	x0, [x0]
  429e6c:	str	x0, [sp, #488]
  429e70:	ldr	x0, [sp, #488]
  429e74:	cmp	x0, #0x0
  429e78:	b.eq	429e90 <wcrtomb@plt+0x25180>  // b.none
  429e7c:	ldr	x0, [sp, #488]
  429e80:	ldr	x0, [x0, #16]
  429e84:	ldrb	w0, [x0]
  429e88:	cmp	w0, #0x0
  429e8c:	b.eq	429e64 <wcrtomb@plt+0x25154>  // b.none
  429e90:	ldr	x0, [sp, #488]
  429e94:	cmp	x0, #0x0
  429e98:	b.eq	429ea8 <wcrtomb@plt+0x25198>  // b.none
  429e9c:	ldr	x0, [sp, #488]
  429ea0:	ldr	x0, [x0, #56]
  429ea4:	bl	41d4e4 <wcrtomb@plt+0x187d4>
  429ea8:	nop
  429eac:	ldp	x29, x30, [sp], #496
  429eb0:	ret
  429eb4:	stp	x29, x30, [sp, #-48]!
  429eb8:	mov	x29, sp
  429ebc:	str	x0, [sp, #24]
  429ec0:	ldr	x0, [sp, #24]
  429ec4:	bl	4040b0 <strlen@plt>
  429ec8:	str	x0, [sp, #40]
  429ecc:	ldr	x1, [sp, #40]
  429ed0:	ldr	x0, [sp, #24]
  429ed4:	bl	4288dc <wcrtomb@plt+0x23bcc>
  429ed8:	str	x0, [sp, #32]
  429edc:	ldr	x0, [sp, #32]
  429ee0:	cmp	x0, #0x0
  429ee4:	b.eq	429ef0 <wcrtomb@plt+0x251e0>  // b.none
  429ee8:	ldr	x0, [sp, #32]
  429eec:	b	429f60 <wcrtomb@plt+0x25250>
  429ef0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429ef4:	add	x0, x0, #0x2b0
  429ef8:	ldrb	w0, [x0]
  429efc:	cmp	w0, #0x0
  429f00:	b.eq	429f54 <wcrtomb@plt+0x25244>  // b.none
  429f04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429f08:	add	x0, x0, #0xb00
  429f0c:	ldr	x0, [x0]
  429f10:	cmp	x0, #0x0
  429f14:	b.eq	429f54 <wcrtomb@plt+0x25244>  // b.none
  429f18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429f1c:	add	x0, x0, #0xb00
  429f20:	ldr	x0, [x0]
  429f24:	ldr	x0, [x0, #48]
  429f28:	cmp	x0, #0x0
  429f2c:	b.eq	429f54 <wcrtomb@plt+0x25244>  // b.none
  429f30:	bl	4283f0 <wcrtomb@plt+0x236e0>
  429f34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429f38:	add	x0, x0, #0xb00
  429f3c:	ldr	x0, [x0]
  429f40:	ldr	x0, [x0, #48]
  429f44:	cmp	x0, #0x0
  429f48:	b.eq	429f5c <wcrtomb@plt+0x2524c>  // b.none
  429f4c:	mov	x0, #0x0                   	// #0
  429f50:	b	429f60 <wcrtomb@plt+0x25250>
  429f54:	mov	x0, #0x0                   	// #0
  429f58:	b	429f60 <wcrtomb@plt+0x25250>
  429f5c:	b	429ecc <wcrtomb@plt+0x251bc>
  429f60:	ldp	x29, x30, [sp], #48
  429f64:	ret
  429f68:	stp	x29, x30, [sp, #-16]!
  429f6c:	mov	x29, sp
  429f70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429f74:	add	x0, x0, #0x40
  429f78:	ldr	x0, [x0]
  429f7c:	cmp	x0, #0x0
  429f80:	b.ne	429fbc <wcrtomb@plt+0x252ac>  // b.any
  429f84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  429f88:	add	x0, x0, #0xb00
  429f8c:	ldr	x1, [x0]
  429f90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429f94:	add	x0, x0, #0x40
  429f98:	str	x1, [x0]
  429f9c:	b	429fbc <wcrtomb@plt+0x252ac>
  429fa0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429fa4:	add	x0, x0, #0x40
  429fa8:	ldr	x0, [x0]
  429fac:	ldr	x1, [x0]
  429fb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429fb4:	add	x0, x0, #0x40
  429fb8:	str	x1, [x0]
  429fbc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429fc0:	add	x0, x0, #0x40
  429fc4:	ldr	x0, [x0]
  429fc8:	cmp	x0, #0x0
  429fcc:	b.eq	42a004 <wcrtomb@plt+0x252f4>  // b.none
  429fd0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429fd4:	add	x0, x0, #0x40
  429fd8:	ldr	x0, [x0]
  429fdc:	ldr	x0, [x0, #48]
  429fe0:	cmp	x0, #0x0
  429fe4:	b.ne	429fa0 <wcrtomb@plt+0x25290>  // b.any
  429fe8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  429fec:	add	x0, x0, #0x40
  429ff0:	ldr	x0, [x0]
  429ff4:	ldr	x0, [x0, #16]
  429ff8:	ldrb	w0, [x0]
  429ffc:	cmp	w0, #0x0
  42a000:	b.eq	429fa0 <wcrtomb@plt+0x25290>  // b.none
  42a004:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42a008:	add	x0, x0, #0x40
  42a00c:	ldr	x0, [x0]
  42a010:	cmp	x0, #0x0
  42a014:	b.eq	42a054 <wcrtomb@plt+0x25344>  // b.none
  42a018:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42a01c:	add	x0, x0, #0x40
  42a020:	ldr	x0, [x0]
  42a024:	ldr	x1, [x0, #48]
  42a028:	add	x1, x1, #0x1
  42a02c:	str	x1, [x0, #48]
  42a030:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42a034:	add	x0, x0, #0x40
  42a038:	ldr	x0, [x0]
  42a03c:	ldr	w0, [x0, #40]
  42a040:	bl	425b98 <wcrtomb@plt+0x20e88>
  42a044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42a048:	add	x0, x0, #0x40
  42a04c:	ldr	x0, [x0]
  42a050:	b	42a058 <wcrtomb@plt+0x25348>
  42a054:	mov	x0, #0x0                   	// #0
  42a058:	ldp	x29, x30, [sp], #16
  42a05c:	ret
  42a060:	sub	sp, sp, #0x10
  42a064:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42a068:	add	x0, x0, #0x40
  42a06c:	str	xzr, [x0]
  42a070:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42a074:	add	x0, x0, #0xb00
  42a078:	ldr	x0, [x0]
  42a07c:	str	x0, [sp, #8]
  42a080:	b	42a098 <wcrtomb@plt+0x25388>
  42a084:	ldr	x0, [sp, #8]
  42a088:	str	xzr, [x0, #48]
  42a08c:	ldr	x0, [sp, #8]
  42a090:	ldr	x0, [x0]
  42a094:	str	x0, [sp, #8]
  42a098:	ldr	x0, [sp, #8]
  42a09c:	cmp	x0, #0x0
  42a0a0:	b.ne	42a084 <wcrtomb@plt+0x25374>  // b.any
  42a0a4:	nop
  42a0a8:	nop
  42a0ac:	add	sp, sp, #0x10
  42a0b0:	ret
  42a0b4:	stp	x29, x30, [sp, #-64]!
  42a0b8:	mov	x29, sp
  42a0bc:	str	x0, [sp, #24]
  42a0c0:	str	x1, [sp, #16]
  42a0c4:	ldr	x0, [sp, #24]
  42a0c8:	bl	4040b0 <strlen@plt>
  42a0cc:	str	x0, [sp, #56]
  42a0d0:	ldr	x0, [sp, #16]
  42a0d4:	bl	4040b0 <strlen@plt>
  42a0d8:	add	x0, x0, #0x1
  42a0dc:	str	x0, [sp, #48]
  42a0e0:	ldr	x0, [sp, #56]
  42a0e4:	cmp	x0, #0x0
  42a0e8:	b.eq	42a110 <wcrtomb@plt+0x25400>  // b.none
  42a0ec:	ldr	x0, [sp, #56]
  42a0f0:	sub	x0, x0, #0x1
  42a0f4:	ldr	x1, [sp, #24]
  42a0f8:	add	x0, x1, x0
  42a0fc:	ldrb	w0, [x0]
  42a100:	cmp	w0, #0x2f
  42a104:	b.eq	42a110 <wcrtomb@plt+0x25400>  // b.none
  42a108:	mov	w0, #0x1                   	// #1
  42a10c:	b	42a114 <wcrtomb@plt+0x25404>
  42a110:	mov	w0, #0x0                   	// #0
  42a114:	str	w0, [sp, #44]
  42a118:	ldrsw	x1, [sp, #44]
  42a11c:	ldr	x0, [sp, #56]
  42a120:	add	x1, x1, x0
  42a124:	ldr	x0, [sp, #48]
  42a128:	add	x0, x1, x0
  42a12c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  42a130:	str	x0, [sp, #32]
  42a134:	ldr	x2, [sp, #56]
  42a138:	ldr	x1, [sp, #24]
  42a13c:	ldr	x0, [sp, #32]
  42a140:	bl	404020 <memcpy@plt>
  42a144:	ldr	x1, [sp, #32]
  42a148:	ldr	x0, [sp, #56]
  42a14c:	add	x0, x1, x0
  42a150:	mov	w1, #0x2f                  	// #47
  42a154:	strb	w1, [x0]
  42a158:	ldrsw	x1, [sp, #44]
  42a15c:	ldr	x0, [sp, #56]
  42a160:	add	x0, x1, x0
  42a164:	ldr	x1, [sp, #32]
  42a168:	add	x0, x1, x0
  42a16c:	ldr	x2, [sp, #48]
  42a170:	ldr	x1, [sp, #16]
  42a174:	bl	404020 <memcpy@plt>
  42a178:	ldr	x0, [sp, #32]
  42a17c:	ldp	x29, x30, [sp], #64
  42a180:	ret
  42a184:	sub	sp, sp, #0x20
  42a188:	str	x0, [sp, #8]
  42a18c:	str	x1, [sp]
  42a190:	ldr	x0, [sp, #8]
  42a194:	str	x0, [sp, #24]
  42a198:	b	42a1a8 <wcrtomb@plt+0x25498>
  42a19c:	ldr	x0, [sp, #24]
  42a1a0:	add	x0, x0, #0x1
  42a1a4:	str	x0, [sp, #24]
  42a1a8:	ldr	x0, [sp, #24]
  42a1ac:	ldrb	w0, [x0]
  42a1b0:	cmp	w0, #0x2f
  42a1b4:	b.eq	42a19c <wcrtomb@plt+0x2548c>  // b.none
  42a1b8:	b	42a22c <wcrtomb@plt+0x2551c>
  42a1bc:	ldr	x0, [sp, #24]
  42a1c0:	ldrb	w0, [x0]
  42a1c4:	cmp	w0, #0x2f
  42a1c8:	cset	w0, eq  // eq = none
  42a1cc:	strb	w0, [sp, #23]
  42a1d0:	ldr	x0, [sp, #24]
  42a1d4:	add	x0, x0, #0x1
  42a1d8:	str	x0, [sp, #24]
  42a1dc:	ldrb	w0, [sp, #23]
  42a1e0:	cmp	w0, #0x0
  42a1e4:	b.eq	42a22c <wcrtomb@plt+0x2551c>  // b.none
  42a1e8:	ldr	x0, [sp]
  42a1ec:	sub	x0, x0, #0x1
  42a1f0:	str	x0, [sp]
  42a1f4:	ldr	x0, [sp]
  42a1f8:	cmp	x0, #0x0
  42a1fc:	b.ne	42a21c <wcrtomb@plt+0x2550c>  // b.any
  42a200:	ldr	x1, [sp, #24]
  42a204:	ldr	x0, [sp, #8]
  42a208:	sub	x0, x1, x0
  42a20c:	b	42a240 <wcrtomb@plt+0x25530>
  42a210:	ldr	x0, [sp, #24]
  42a214:	add	x0, x0, #0x1
  42a218:	str	x0, [sp, #24]
  42a21c:	ldr	x0, [sp, #24]
  42a220:	ldrb	w0, [x0]
  42a224:	cmp	w0, #0x2f
  42a228:	b.eq	42a210 <wcrtomb@plt+0x25500>  // b.none
  42a22c:	ldr	x0, [sp, #24]
  42a230:	ldrb	w0, [x0]
  42a234:	cmp	w0, #0x0
  42a238:	b.ne	42a1bc <wcrtomb@plt+0x254ac>  // b.any
  42a23c:	mov	x0, #0xffffffffffffffff    	// #-1
  42a240:	add	sp, sp, #0x20
  42a244:	ret
  42a248:	sub	sp, sp, #0x20
  42a24c:	str	x0, [sp, #8]
  42a250:	ldr	x0, [sp, #8]
  42a254:	str	x0, [sp, #24]
  42a258:	ldr	x0, [sp, #24]
  42a25c:	ldrb	w0, [x0]
  42a260:	cmp	w0, #0x2e
  42a264:	b.ne	42a2cc <wcrtomb@plt+0x255bc>  // b.any
  42a268:	ldr	x0, [sp, #24]
  42a26c:	add	x0, x0, #0x1
  42a270:	ldrb	w0, [x0]
  42a274:	cmp	w0, #0x2e
  42a278:	b.ne	42a2cc <wcrtomb@plt+0x255bc>  // b.any
  42a27c:	ldr	x0, [sp, #24]
  42a280:	add	x0, x0, #0x2
  42a284:	ldrb	w0, [x0]
  42a288:	cmp	w0, #0x2f
  42a28c:	b.eq	42a2a4 <wcrtomb@plt+0x25594>  // b.none
  42a290:	ldr	x0, [sp, #24]
  42a294:	add	x0, x0, #0x2
  42a298:	ldrb	w0, [x0]
  42a29c:	cmp	w0, #0x0
  42a2a0:	b.ne	42a2cc <wcrtomb@plt+0x255bc>  // b.any
  42a2a4:	mov	w0, #0x1                   	// #1
  42a2a8:	b	42a2ec <wcrtomb@plt+0x255dc>
  42a2ac:	ldr	x0, [sp, #24]
  42a2b0:	add	x1, x0, #0x1
  42a2b4:	str	x1, [sp, #24]
  42a2b8:	ldrb	w0, [x0]
  42a2bc:	cmp	w0, #0x0
  42a2c0:	b.ne	42a2cc <wcrtomb@plt+0x255bc>  // b.any
  42a2c4:	mov	w0, #0x0                   	// #0
  42a2c8:	b	42a2ec <wcrtomb@plt+0x255dc>
  42a2cc:	ldr	x0, [sp, #24]
  42a2d0:	ldrb	w0, [x0]
  42a2d4:	cmp	w0, #0x2f
  42a2d8:	b.ne	42a2ac <wcrtomb@plt+0x2559c>  // b.any
  42a2dc:	ldr	x0, [sp, #24]
  42a2e0:	add	x0, x0, #0x1
  42a2e4:	str	x0, [sp, #24]
  42a2e8:	b	42a258 <wcrtomb@plt+0x25548>
  42a2ec:	add	sp, sp, #0x20
  42a2f0:	ret
  42a2f4:	stp	x29, x30, [sp, #-48]!
  42a2f8:	mov	x29, sp
  42a2fc:	str	x0, [sp, #24]
  42a300:	str	x1, [sp, #16]
  42a304:	ldr	x0, [sp, #24]
  42a308:	ldr	x0, [x0, #8]
  42a30c:	ldr	x1, [sp, #16]
  42a310:	cmp	x1, x0
  42a314:	b.ge	42a3b8 <wcrtomb@plt+0x256a8>  // b.tcont
  42a318:	bl	404bc0 <__errno_location@plt>
  42a31c:	mov	x1, x0
  42a320:	mov	w0, #0x16                  	// #22
  42a324:	str	w0, [x1]
  42a328:	mov	w0, #0x0                   	// #0
  42a32c:	b	42a3d0 <wcrtomb@plt+0x256c0>
  42a330:	ldr	x0, [sp, #24]
  42a334:	ldr	x0, [x0, #8]
  42a338:	ldr	x1, [sp, #16]
  42a33c:	sub	x0, x1, x0
  42a340:	mov	x1, #0x200                 	// #512
  42a344:	cmp	x0, #0x200
  42a348:	csel	x0, x0, x1, le
  42a34c:	str	x0, [sp, #40]
  42a350:	ldr	x0, [sp, #24]
  42a354:	ldr	w3, [x0]
  42a358:	ldr	x2, [sp, #40]
  42a35c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42a360:	add	x1, x0, #0xd78
  42a364:	mov	w0, w3
  42a368:	bl	4046d0 <write@plt>
  42a36c:	str	x0, [sp, #32]
  42a370:	ldr	x0, [sp, #32]
  42a374:	cmp	x0, #0x0
  42a378:	b.gt	42a3a0 <wcrtomb@plt+0x25690>
  42a37c:	ldr	x0, [sp, #32]
  42a380:	cmp	x0, #0x0
  42a384:	b.ne	42a398 <wcrtomb@plt+0x25688>  // b.any
  42a388:	bl	404bc0 <__errno_location@plt>
  42a38c:	mov	x1, x0
  42a390:	mov	w0, #0x16                  	// #22
  42a394:	str	w0, [x1]
  42a398:	mov	w0, #0x0                   	// #0
  42a39c:	b	42a3d0 <wcrtomb@plt+0x256c0>
  42a3a0:	ldr	x0, [sp, #24]
  42a3a4:	ldr	x1, [x0, #8]
  42a3a8:	ldr	x0, [sp, #32]
  42a3ac:	add	x1, x1, x0
  42a3b0:	ldr	x0, [sp, #24]
  42a3b4:	str	x1, [x0, #8]
  42a3b8:	ldr	x0, [sp, #24]
  42a3bc:	ldr	x0, [x0, #8]
  42a3c0:	ldr	x1, [sp, #16]
  42a3c4:	cmp	x1, x0
  42a3c8:	b.gt	42a330 <wcrtomb@plt+0x25620>
  42a3cc:	mov	w0, #0x1                   	// #1
  42a3d0:	ldp	x29, x30, [sp], #48
  42a3d4:	ret
  42a3d8:	stp	x29, x30, [sp, #-32]!
  42a3dc:	mov	x29, sp
  42a3e0:	str	x0, [sp, #24]
  42a3e4:	ldr	x0, [sp, #24]
  42a3e8:	ldr	x0, [x0, #32]
  42a3ec:	ldr	x0, [x0, #16]
  42a3f0:	cmp	x0, #0x0
  42a3f4:	b.eq	42a414 <wcrtomb@plt+0x25704>  // b.none
  42a3f8:	ldr	x0, [sp, #24]
  42a3fc:	ldr	x0, [x0, #32]
  42a400:	ldr	x1, [x0, #16]
  42a404:	ldr	x0, [sp, #24]
  42a408:	blr	x1
  42a40c:	and	w0, w0, #0xff
  42a410:	b	42a418 <wcrtomb@plt+0x25708>
  42a414:	mov	w0, #0x0                   	// #0
  42a418:	ldp	x29, x30, [sp], #32
  42a41c:	ret
  42a420:	stp	x29, x30, [sp, #-32]!
  42a424:	mov	x29, sp
  42a428:	str	x0, [sp, #24]
  42a42c:	mov	x2, #0x30                  	// #48
  42a430:	mov	w1, #0x0                   	// #0
  42a434:	ldr	x0, [sp, #24]
  42a438:	bl	4044d0 <memset@plt>
  42a43c:	ldr	x0, [sp, #24]
  42a440:	bl	42ac5c <wcrtomb@plt+0x25f4c>
  42a444:	and	w0, w0, #0xff
  42a448:	eor	w0, w0, #0x1
  42a44c:	and	w0, w0, #0xff
  42a450:	cmp	w0, #0x0
  42a454:	b.eq	42a460 <wcrtomb@plt+0x25750>  // b.none
  42a458:	mov	w0, #0x0                   	// #0
  42a45c:	b	42a494 <wcrtomb@plt+0x25784>
  42a460:	ldr	x0, [sp, #24]
  42a464:	ldr	x0, [x0, #32]
  42a468:	ldr	x0, [x0]
  42a46c:	cmp	x0, #0x0
  42a470:	b.eq	42a490 <wcrtomb@plt+0x25780>  // b.none
  42a474:	ldr	x0, [sp, #24]
  42a478:	ldr	x0, [x0, #32]
  42a47c:	ldr	x1, [x0]
  42a480:	ldr	x0, [sp, #24]
  42a484:	blr	x1
  42a488:	and	w0, w0, #0xff
  42a48c:	b	42a494 <wcrtomb@plt+0x25784>
  42a490:	mov	w0, #0x1                   	// #1
  42a494:	ldp	x29, x30, [sp], #32
  42a498:	ret
  42a49c:	stp	x29, x30, [sp, #-32]!
  42a4a0:	mov	x29, sp
  42a4a4:	str	x0, [sp, #24]
  42a4a8:	ldr	x0, [sp, #24]
  42a4ac:	ldr	x0, [x0, #32]
  42a4b0:	ldr	x0, [x0, #8]
  42a4b4:	cmp	x0, #0x0
  42a4b8:	b.eq	42a4d8 <wcrtomb@plt+0x257c8>  // b.none
  42a4bc:	ldr	x0, [sp, #24]
  42a4c0:	ldr	x0, [x0, #32]
  42a4c4:	ldr	x1, [x0, #8]
  42a4c8:	ldr	x0, [sp, #24]
  42a4cc:	blr	x1
  42a4d0:	and	w0, w0, #0xff
  42a4d4:	b	42a4dc <wcrtomb@plt+0x257cc>
  42a4d8:	mov	w0, #0x1                   	// #1
  42a4dc:	ldp	x29, x30, [sp], #32
  42a4e0:	ret
  42a4e4:	stp	x29, x30, [sp, #-48]!
  42a4e8:	mov	x29, sp
  42a4ec:	str	x0, [sp, #40]
  42a4f0:	str	w1, [sp, #36]
  42a4f4:	str	x2, [sp, #24]
  42a4f8:	ldr	x0, [sp, #40]
  42a4fc:	ldr	x0, [x0, #32]
  42a500:	ldr	x0, [x0, #48]
  42a504:	cmp	x0, #0x0
  42a508:	b.eq	42a530 <wcrtomb@plt+0x25820>  // b.none
  42a50c:	ldr	x0, [sp, #40]
  42a510:	ldr	x0, [x0, #32]
  42a514:	ldr	x3, [x0, #48]
  42a518:	ldr	x2, [sp, #24]
  42a51c:	ldr	w1, [sp, #36]
  42a520:	ldr	x0, [sp, #40]
  42a524:	blr	x3
  42a528:	and	w0, w0, #0xff
  42a52c:	b	42a534 <wcrtomb@plt+0x25824>
  42a530:	mov	w0, #0x1                   	// #1
  42a534:	ldp	x29, x30, [sp], #48
  42a538:	ret
  42a53c:	stp	x29, x30, [sp, #-32]!
  42a540:	mov	x29, sp
  42a544:	str	x0, [sp, #24]
  42a548:	str	x1, [sp, #16]
  42a54c:	ldr	x0, [sp, #24]
  42a550:	ldr	x0, [x0, #32]
  42a554:	ldr	x0, [x0, #56]
  42a558:	cmp	x0, #0x0
  42a55c:	b.eq	42a580 <wcrtomb@plt+0x25870>  // b.none
  42a560:	ldr	x0, [sp, #24]
  42a564:	ldr	x0, [x0, #32]
  42a568:	ldr	x2, [x0, #56]
  42a56c:	ldr	x1, [sp, #16]
  42a570:	ldr	x0, [sp, #24]
  42a574:	blr	x2
  42a578:	and	w0, w0, #0xff
  42a57c:	b	42a584 <wcrtomb@plt+0x25874>
  42a580:	mov	w0, #0x0                   	// #0
  42a584:	ldp	x29, x30, [sp], #32
  42a588:	ret
  42a58c:	stp	x29, x30, [sp, #-32]!
  42a590:	mov	x29, sp
  42a594:	str	x0, [sp, #24]
  42a598:	str	x1, [sp, #16]
  42a59c:	ldr	x0, [sp, #24]
  42a5a0:	ldr	x0, [x0, #32]
  42a5a4:	ldr	x0, [x0, #64]
  42a5a8:	cmp	x0, #0x0
  42a5ac:	b.eq	42a5d0 <wcrtomb@plt+0x258c0>  // b.none
  42a5b0:	ldr	x0, [sp, #24]
  42a5b4:	ldr	x0, [x0, #32]
  42a5b8:	ldr	x2, [x0, #64]
  42a5bc:	ldr	x1, [sp, #16]
  42a5c0:	ldr	x0, [sp, #24]
  42a5c4:	blr	x2
  42a5c8:	and	w0, w0, #0xff
  42a5cc:	b	42a5d4 <wcrtomb@plt+0x258c4>
  42a5d0:	mov	w0, #0x0                   	// #0
  42a5d4:	ldp	x29, x30, [sp], #32
  42a5d8:	ret
  42a5dc:	stp	x29, x30, [sp, #-32]!
  42a5e0:	mov	x29, sp
  42a5e4:	str	x0, [sp, #24]
  42a5e8:	ldr	x0, [sp, #24]
  42a5ec:	ldr	x0, [x0, #32]
  42a5f0:	ldr	x0, [x0, #24]
  42a5f4:	cmp	x0, #0x0
  42a5f8:	b.eq	42a618 <wcrtomb@plt+0x25908>  // b.none
  42a5fc:	ldr	x0, [sp, #24]
  42a600:	ldr	x0, [x0, #32]
  42a604:	ldr	x1, [x0, #24]
  42a608:	ldr	x0, [sp, #24]
  42a60c:	blr	x1
  42a610:	and	w0, w0, #0xff
  42a614:	b	42a61c <wcrtomb@plt+0x2590c>
  42a618:	mov	w0, #0x0                   	// #0
  42a61c:	ldp	x29, x30, [sp], #32
  42a620:	ret
  42a624:	stp	x29, x30, [sp, #-32]!
  42a628:	mov	x29, sp
  42a62c:	str	x0, [sp, #24]
  42a630:	ldr	x0, [sp, #24]
  42a634:	ldr	x0, [x0, #32]
  42a638:	ldr	x0, [x0, #40]
  42a63c:	cmp	x0, #0x0
  42a640:	b.eq	42a660 <wcrtomb@plt+0x25950>  // b.none
  42a644:	ldr	x0, [sp, #24]
  42a648:	ldr	x0, [x0, #32]
  42a64c:	ldr	x1, [x0, #40]
  42a650:	ldr	x0, [sp, #24]
  42a654:	blr	x1
  42a658:	and	w0, w0, #0xff
  42a65c:	b	42a664 <wcrtomb@plt+0x25954>
  42a660:	mov	w0, #0x1                   	// #1
  42a664:	ldp	x29, x30, [sp], #32
  42a668:	ret
  42a66c:	stp	x29, x30, [sp, #-32]!
  42a670:	mov	x29, sp
  42a674:	str	x0, [sp, #24]
  42a678:	ldr	x0, [sp, #24]
  42a67c:	ldr	x0, [x0, #32]
  42a680:	ldr	x0, [x0, #32]
  42a684:	cmp	x0, #0x0
  42a688:	b.eq	42a6a8 <wcrtomb@plt+0x25998>  // b.none
  42a68c:	ldr	x0, [sp, #24]
  42a690:	ldr	x0, [x0, #32]
  42a694:	ldr	x1, [x0, #32]
  42a698:	ldr	x0, [sp, #24]
  42a69c:	blr	x1
  42a6a0:	and	w0, w0, #0xff
  42a6a4:	b	42a6ac <wcrtomb@plt+0x2599c>
  42a6a8:	mov	w0, #0x1                   	// #1
  42a6ac:	ldp	x29, x30, [sp], #32
  42a6b0:	ret
  42a6b4:	stp	x29, x30, [sp, #-32]!
  42a6b8:	mov	x29, sp
  42a6bc:	str	x0, [sp, #24]
  42a6c0:	str	x1, [sp, #16]
  42a6c4:	ldr	x0, [sp, #24]
  42a6c8:	ldrb	w0, [x0, #4]
  42a6cc:	cmp	w0, #0x0
  42a6d0:	b.eq	42a6f4 <wcrtomb@plt+0x259e4>  // b.none
  42a6d4:	ldr	x0, [sp, #24]
  42a6d8:	ldr	w0, [x0]
  42a6dc:	mov	w2, #0x0                   	// #0
  42a6e0:	ldr	x1, [sp, #16]
  42a6e4:	bl	4042b0 <lseek@plt>
  42a6e8:	lsr	x0, x0, #63
  42a6ec:	and	w0, w0, #0xff
  42a6f0:	b	42a70c <wcrtomb@plt+0x259fc>
  42a6f4:	ldr	x1, [sp, #16]
  42a6f8:	ldr	x0, [sp, #24]
  42a6fc:	bl	42a2f4 <wcrtomb@plt+0x255e4>
  42a700:	and	w0, w0, #0xff
  42a704:	eor	w0, w0, #0x1
  42a708:	and	w0, w0, #0xff
  42a70c:	cmp	w0, #0x0
  42a710:	b.eq	42a730 <wcrtomb@plt+0x25a20>  // b.none
  42a714:	ldr	x0, [sp, #24]
  42a718:	ldr	x0, [x0, #24]
  42a71c:	ldr	x0, [x0]
  42a720:	ldr	x1, [sp, #16]
  42a724:	bl	42607c <wcrtomb@plt+0x2136c>
  42a728:	mov	w0, #0x0                   	// #0
  42a72c:	b	42a734 <wcrtomb@plt+0x25a24>
  42a730:	mov	w0, #0x1                   	// #1
  42a734:	ldp	x29, x30, [sp], #32
  42a738:	ret
  42a73c:	sub	sp, sp, #0x10
  42a740:	str	x0, [sp, #8]
  42a744:	str	x1, [sp]
  42a748:	b	42a76c <wcrtomb@plt+0x25a5c>
  42a74c:	ldr	x0, [sp, #8]
  42a750:	add	x1, x0, #0x1
  42a754:	str	x1, [sp, #8]
  42a758:	ldrb	w0, [x0]
  42a75c:	cmp	w0, #0x0
  42a760:	b.eq	42a76c <wcrtomb@plt+0x25a5c>  // b.none
  42a764:	mov	w0, #0x0                   	// #0
  42a768:	b	42a784 <wcrtomb@plt+0x25a74>
  42a76c:	ldr	x0, [sp]
  42a770:	sub	x1, x0, #0x1
  42a774:	str	x1, [sp]
  42a778:	cmp	x0, #0x0
  42a77c:	b.ne	42a74c <wcrtomb@plt+0x25a3c>  // b.any
  42a780:	mov	w0, #0x1                   	// #1
  42a784:	add	sp, sp, #0x10
  42a788:	ret
  42a78c:	stp	x29, x30, [sp, #-48]!
  42a790:	mov	x29, sp
  42a794:	str	x0, [sp, #24]
  42a798:	str	x1, [sp, #16]
  42a79c:	ldr	x0, [sp, #24]
  42a7a0:	ldr	x0, [x0, #304]
  42a7a4:	str	x0, [sp, #40]
  42a7a8:	ldr	x0, [sp, #24]
  42a7ac:	ldr	x0, [x0, #288]
  42a7b0:	str	x0, [sp, #32]
  42a7b4:	ldr	x0, [sp, #24]
  42a7b8:	ldr	x0, [x0, #296]
  42a7bc:	ldr	x1, [sp, #32]
  42a7c0:	cmp	x1, x0
  42a7c4:	b.ne	42a7f0 <wcrtomb@plt+0x25ae0>  // b.any
  42a7c8:	ldr	x0, [sp, #24]
  42a7cc:	add	x0, x0, #0x128
  42a7d0:	mov	x2, #0x10                  	// #16
  42a7d4:	mov	x1, x0
  42a7d8:	ldr	x0, [sp, #40]
  42a7dc:	bl	45b56c <argp_usage@@Base+0x12480>
  42a7e0:	str	x0, [sp, #40]
  42a7e4:	ldr	x0, [sp, #24]
  42a7e8:	ldr	x1, [sp, #40]
  42a7ec:	str	x1, [x0, #304]
  42a7f0:	ldr	x0, [sp, #32]
  42a7f4:	lsl	x0, x0, #4
  42a7f8:	ldr	x1, [sp, #40]
  42a7fc:	add	x2, x1, x0
  42a800:	ldr	x0, [sp, #16]
  42a804:	ldp	x0, x1, [x0]
  42a808:	stp	x0, x1, [x2]
  42a80c:	ldr	x0, [sp, #32]
  42a810:	add	x1, x0, #0x1
  42a814:	ldr	x0, [sp, #24]
  42a818:	str	x1, [x0, #288]
  42a81c:	nop
  42a820:	ldp	x29, x30, [sp], #48
  42a824:	ret
  42a828:	sub	sp, sp, #0x250
  42a82c:	stp	x29, x30, [sp]
  42a830:	mov	x29, sp
  42a834:	str	x0, [sp, #24]
  42a838:	ldr	x0, [sp, #24]
  42a83c:	ldr	x0, [x0, #24]
  42a840:	str	x0, [sp, #576]
  42a844:	ldr	x0, [sp, #24]
  42a848:	ldr	w0, [x0]
  42a84c:	str	w0, [sp, #572]
  42a850:	str	xzr, [sp, #560]
  42a854:	str	xzr, [sp, #584]
  42a858:	str	xzr, [sp, #32]
  42a85c:	str	xzr, [sp, #40]
  42a860:	ldr	x0, [sp, #576]
  42a864:	str	xzr, [x0, #264]
  42a868:	mov	x2, #0x0                   	// #0
  42a86c:	mov	w1, #0x0                   	// #0
  42a870:	ldr	x0, [sp, #24]
  42a874:	bl	42a4e4 <wcrtomb@plt+0x257d4>
  42a878:	and	w0, w0, #0xff
  42a87c:	eor	w0, w0, #0x1
  42a880:	and	w0, w0, #0xff
  42a884:	cmp	w0, #0x0
  42a888:	b.eq	42a980 <wcrtomb@plt+0x25c70>  // b.none
  42a88c:	mov	w0, #0x0                   	// #0
  42a890:	b	42aa08 <wcrtomb@plt+0x25cf8>
  42a894:	add	x0, sp, #0x30
  42a898:	ldr	x1, [sp, #560]
  42a89c:	bl	42a73c <wcrtomb@plt+0x25a2c>
  42a8a0:	and	w0, w0, #0xff
  42a8a4:	cmp	w0, #0x0
  42a8a8:	b.eq	42a8f8 <wcrtomb@plt+0x25be8>  // b.none
  42a8ac:	ldr	x0, [sp, #40]
  42a8b0:	cmp	x0, #0x0
  42a8b4:	b.eq	42a970 <wcrtomb@plt+0x25c60>  // b.none
  42a8b8:	add	x0, sp, #0x20
  42a8bc:	mov	x1, x0
  42a8c0:	ldr	x0, [sp, #576]
  42a8c4:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42a8c8:	str	xzr, [sp, #40]
  42a8cc:	mov	x2, #0x0                   	// #0
  42a8d0:	mov	w1, #0x1                   	// #1
  42a8d4:	ldr	x0, [sp, #24]
  42a8d8:	bl	42a4e4 <wcrtomb@plt+0x257d4>
  42a8dc:	and	w0, w0, #0xff
  42a8e0:	eor	w0, w0, #0x1
  42a8e4:	and	w0, w0, #0xff
  42a8e8:	cmp	w0, #0x0
  42a8ec:	b.eq	42a970 <wcrtomb@plt+0x25c60>  // b.none
  42a8f0:	mov	w0, #0x0                   	// #0
  42a8f4:	b	42aa08 <wcrtomb@plt+0x25cf8>
  42a8f8:	ldr	x0, [sp, #40]
  42a8fc:	cmp	x0, #0x0
  42a900:	b.ne	42a90c <wcrtomb@plt+0x25bfc>  // b.any
  42a904:	ldr	x0, [sp, #584]
  42a908:	str	x0, [sp, #32]
  42a90c:	ldr	x0, [sp, #40]
  42a910:	mov	x1, x0
  42a914:	ldr	x0, [sp, #560]
  42a918:	add	x0, x1, x0
  42a91c:	str	x0, [sp, #40]
  42a920:	ldr	x0, [sp, #576]
  42a924:	ldr	x0, [x0, #264]
  42a928:	mov	x1, x0
  42a92c:	ldr	x0, [sp, #560]
  42a930:	add	x0, x1, x0
  42a934:	mov	x1, x0
  42a938:	ldr	x0, [sp, #576]
  42a93c:	str	x1, [x0, #264]
  42a940:	add	x0, sp, #0x30
  42a944:	mov	x2, x0
  42a948:	mov	w1, #0x1                   	// #1
  42a94c:	ldr	x0, [sp, #24]
  42a950:	bl	42a4e4 <wcrtomb@plt+0x257d4>
  42a954:	and	w0, w0, #0xff
  42a958:	eor	w0, w0, #0x1
  42a95c:	and	w0, w0, #0xff
  42a960:	cmp	w0, #0x0
  42a964:	b.eq	42a970 <wcrtomb@plt+0x25c60>  // b.none
  42a968:	mov	w0, #0x0                   	// #0
  42a96c:	b	42aa08 <wcrtomb@plt+0x25cf8>
  42a970:	ldr	x1, [sp, #584]
  42a974:	ldr	x0, [sp, #560]
  42a978:	add	x0, x1, x0
  42a97c:	str	x0, [sp, #584]
  42a980:	add	x0, sp, #0x30
  42a984:	mov	x2, #0x200                 	// #512
  42a988:	mov	x1, x0
  42a98c:	ldr	w0, [sp, #572]
  42a990:	bl	425608 <wcrtomb@plt+0x208f8>
  42a994:	str	x0, [sp, #560]
  42a998:	ldr	x0, [sp, #560]
  42a99c:	cmp	x0, #0x0
  42a9a0:	b.eq	42a9b0 <wcrtomb@plt+0x25ca0>  // b.none
  42a9a4:	ldr	x0, [sp, #560]
  42a9a8:	cmn	x0, #0x1
  42a9ac:	b.ne	42a894 <wcrtomb@plt+0x25b84>  // b.any
  42a9b0:	ldr	x0, [sp, #40]
  42a9b4:	cmp	x0, #0x0
  42a9b8:	b.ne	42a9c4 <wcrtomb@plt+0x25cb4>  // b.any
  42a9bc:	ldr	x0, [sp, #584]
  42a9c0:	str	x0, [sp, #32]
  42a9c4:	add	x0, sp, #0x20
  42a9c8:	mov	x1, x0
  42a9cc:	ldr	x0, [sp, #576]
  42a9d0:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42a9d4:	ldr	x0, [sp, #576]
  42a9d8:	ldr	x0, [x0, #264]
  42a9dc:	mov	x1, x0
  42a9e0:	ldr	x0, [sp, #560]
  42a9e4:	add	x0, x1, x0
  42a9e8:	mov	x1, x0
  42a9ec:	ldr	x0, [sp, #576]
  42a9f0:	str	x1, [x0, #264]
  42a9f4:	mov	x2, #0x0                   	// #0
  42a9f8:	mov	w1, #0x2                   	// #2
  42a9fc:	ldr	x0, [sp, #24]
  42aa00:	bl	42a4e4 <wcrtomb@plt+0x257d4>
  42aa04:	and	w0, w0, #0xff
  42aa08:	ldp	x29, x30, [sp]
  42aa0c:	add	sp, sp, #0x250
  42aa10:	ret
  42aa14:	stp	x29, x30, [sp, #-64]!
  42aa18:	mov	x29, sp
  42aa1c:	str	x0, [sp, #24]
  42aa20:	ldr	x0, [sp, #24]
  42aa24:	ldr	x0, [x0, #24]
  42aa28:	str	x0, [sp, #56]
  42aa2c:	str	xzr, [sp, #40]
  42aa30:	str	xzr, [sp, #48]
  42aa34:	ldr	x0, [sp, #56]
  42aa38:	ldr	x0, [x0, #152]
  42aa3c:	cmp	x0, #0x0
  42aa40:	b.ne	42aa70 <wcrtomb@plt+0x25d60>  // b.any
  42aa44:	ldr	x0, [sp, #56]
  42aa48:	str	xzr, [x0, #264]
  42aa4c:	ldr	x0, [sp, #56]
  42aa50:	ldr	x0, [x0, #136]
  42aa54:	str	x0, [sp, #40]
  42aa58:	add	x0, sp, #0x28
  42aa5c:	mov	x1, x0
  42aa60:	ldr	x0, [sp, #56]
  42aa64:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42aa68:	mov	w0, #0x1                   	// #1
  42aa6c:	b	42aa74 <wcrtomb@plt+0x25d64>
  42aa70:	mov	w0, #0x0                   	// #0
  42aa74:	ldp	x29, x30, [sp], #64
  42aa78:	ret
  42aa7c:	stp	x29, x30, [sp, #-96]!
  42aa80:	mov	x29, sp
  42aa84:	str	x0, [sp, #24]
  42aa88:	ldr	x0, [sp, #24]
  42aa8c:	ldr	x0, [x0, #24]
  42aa90:	str	x0, [sp, #80]
  42aa94:	ldr	x0, [sp, #24]
  42aa98:	ldr	w0, [x0]
  42aa9c:	str	w0, [sp, #76]
  42aaa0:	str	xzr, [sp, #40]
  42aaa4:	str	xzr, [sp, #48]
  42aaa8:	str	xzr, [sp, #88]
  42aaac:	ldr	x0, [sp, #80]
  42aab0:	str	xzr, [x0, #264]
  42aab4:	mov	w2, #0x3                   	// #3
  42aab8:	ldr	x1, [sp, #88]
  42aabc:	ldr	w0, [sp, #76]
  42aac0:	bl	4042b0 <lseek@plt>
  42aac4:	str	x0, [sp, #64]
  42aac8:	ldr	x0, [sp, #64]
  42aacc:	cmn	x0, #0x1
  42aad0:	b.ne	42ab14 <wcrtomb@plt+0x25e04>  // b.any
  42aad4:	bl	404bc0 <__errno_location@plt>
  42aad8:	ldr	w0, [x0]
  42aadc:	cmp	w0, #0x6
  42aae0:	b.ne	42ab0c <wcrtomb@plt+0x25dfc>  // b.any
  42aae4:	str	xzr, [sp, #48]
  42aae8:	ldr	x0, [sp, #80]
  42aaec:	ldr	x0, [x0, #136]
  42aaf0:	str	x0, [sp, #40]
  42aaf4:	add	x0, sp, #0x28
  42aaf8:	mov	x1, x0
  42aafc:	ldr	x0, [sp, #80]
  42ab00:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42ab04:	mov	w0, #0x1                   	// #1
  42ab08:	b	42abb8 <wcrtomb@plt+0x25ea8>
  42ab0c:	mov	w0, #0x0                   	// #0
  42ab10:	b	42abb8 <wcrtomb@plt+0x25ea8>
  42ab14:	mov	w2, #0x4                   	// #4
  42ab18:	ldr	x1, [sp, #64]
  42ab1c:	ldr	w0, [sp, #76]
  42ab20:	bl	4042b0 <lseek@plt>
  42ab24:	str	x0, [sp, #56]
  42ab28:	ldr	x0, [sp, #88]
  42ab2c:	cmp	x0, #0x0
  42ab30:	b.ne	42ab6c <wcrtomb@plt+0x25e5c>  // b.any
  42ab34:	ldr	x0, [sp, #64]
  42ab38:	cmp	x0, #0x0
  42ab3c:	b.ne	42ab6c <wcrtomb@plt+0x25e5c>  // b.any
  42ab40:	ldr	x0, [sp, #80]
  42ab44:	ldr	x0, [x0, #136]
  42ab48:	ldr	x1, [sp, #56]
  42ab4c:	cmp	x1, x0
  42ab50:	b.ne	42ab6c <wcrtomb@plt+0x25e5c>  // b.any
  42ab54:	mov	w2, #0x0                   	// #0
  42ab58:	mov	x1, #0x0                   	// #0
  42ab5c:	ldr	w0, [sp, #76]
  42ab60:	bl	4042b0 <lseek@plt>
  42ab64:	mov	w0, #0x0                   	// #0
  42ab68:	b	42abb8 <wcrtomb@plt+0x25ea8>
  42ab6c:	ldr	x0, [sp, #64]
  42ab70:	str	x0, [sp, #40]
  42ab74:	ldr	x1, [sp, #56]
  42ab78:	ldr	x0, [sp, #64]
  42ab7c:	sub	x0, x1, x0
  42ab80:	str	x0, [sp, #48]
  42ab84:	add	x0, sp, #0x28
  42ab88:	mov	x1, x0
  42ab8c:	ldr	x0, [sp, #80]
  42ab90:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42ab94:	ldr	x0, [sp, #80]
  42ab98:	ldr	x1, [x0, #264]
  42ab9c:	ldr	x0, [sp, #48]
  42aba0:	add	x1, x1, x0
  42aba4:	ldr	x0, [sp, #80]
  42aba8:	str	x1, [x0, #264]
  42abac:	ldr	x0, [sp, #56]
  42abb0:	str	x0, [sp, #88]
  42abb4:	b	42aab4 <wcrtomb@plt+0x25da4>
  42abb8:	ldp	x29, x30, [sp], #96
  42abbc:	ret
  42abc0:	stp	x29, x30, [sp, #-32]!
  42abc4:	mov	x29, sp
  42abc8:	str	x0, [sp, #24]
  42abcc:	ldr	x0, [sp, #24]
  42abd0:	bl	42aa14 <wcrtomb@plt+0x25d04>
  42abd4:	and	w0, w0, #0xff
  42abd8:	cmp	w0, #0x0
  42abdc:	b.eq	42abe8 <wcrtomb@plt+0x25ed8>  // b.none
  42abe0:	mov	w0, #0x1                   	// #1
  42abe4:	b	42ac54 <wcrtomb@plt+0x25f44>
  42abe8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42abec:	add	x0, x0, #0x3c4
  42abf0:	ldr	w0, [x0]
  42abf4:	cmp	w0, #0x2
  42abf8:	b.eq	42ac18 <wcrtomb@plt+0x25f08>  // b.none
  42abfc:	cmp	w0, #0x2
  42ac00:	b.hi	42ac50 <wcrtomb@plt+0x25f40>  // b.pmore
  42ac04:	cmp	w0, #0x0
  42ac08:	b.eq	42ac18 <wcrtomb@plt+0x25f08>  // b.none
  42ac0c:	cmp	w0, #0x1
  42ac10:	b.eq	42ac34 <wcrtomb@plt+0x25f24>  // b.none
  42ac14:	b	42ac50 <wcrtomb@plt+0x25f40>
  42ac18:	ldr	x0, [sp, #24]
  42ac1c:	bl	42aa7c <wcrtomb@plt+0x25d6c>
  42ac20:	and	w0, w0, #0xff
  42ac24:	cmp	w0, #0x0
  42ac28:	b.eq	42ac34 <wcrtomb@plt+0x25f24>  // b.none
  42ac2c:	mov	w0, #0x1                   	// #1
  42ac30:	b	42ac54 <wcrtomb@plt+0x25f44>
  42ac34:	ldr	x0, [sp, #24]
  42ac38:	bl	42a828 <wcrtomb@plt+0x25b18>
  42ac3c:	and	w0, w0, #0xff
  42ac40:	cmp	w0, #0x0
  42ac44:	b.eq	42ac50 <wcrtomb@plt+0x25f40>  // b.none
  42ac48:	mov	w0, #0x1                   	// #1
  42ac4c:	b	42ac54 <wcrtomb@plt+0x25f44>
  42ac50:	mov	w0, #0x0                   	// #0
  42ac54:	ldp	x29, x30, [sp], #32
  42ac58:	ret
  42ac5c:	sub	sp, sp, #0x10
  42ac60:	str	x0, [sp, #8]
  42ac64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ac68:	add	x0, x0, #0x0
  42ac6c:	ldr	w0, [x0]
  42ac70:	cmp	w0, #0x0
  42ac74:	b.ne	42ac88 <wcrtomb@plt+0x25f78>  // b.any
  42ac78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ac7c:	add	x0, x0, #0x360
  42ac80:	ldr	w0, [x0]
  42ac84:	b	42ac94 <wcrtomb@plt+0x25f84>
  42ac88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ac8c:	add	x0, x0, #0x0
  42ac90:	ldr	w0, [x0]
  42ac94:	cmp	w0, #0x6
  42ac98:	b.eq	42acf0 <wcrtomb@plt+0x25fe0>  // b.none
  42ac9c:	cmp	w0, #0x6
  42aca0:	b.hi	42ad2c <wcrtomb@plt+0x2601c>  // b.pmore
  42aca4:	cmp	w0, #0x5
  42aca8:	b.eq	42ad18 <wcrtomb@plt+0x26008>  // b.none
  42acac:	cmp	w0, #0x5
  42acb0:	b.hi	42ad2c <wcrtomb@plt+0x2601c>  // b.pmore
  42acb4:	cmp	w0, #0x4
  42acb8:	b.eq	42ad04 <wcrtomb@plt+0x25ff4>  // b.none
  42acbc:	cmp	w0, #0x4
  42acc0:	b.hi	42ad2c <wcrtomb@plt+0x2601c>  // b.pmore
  42acc4:	cmp	w0, #0x3
  42acc8:	b.eq	42ace8 <wcrtomb@plt+0x25fd8>  // b.none
  42accc:	cmp	w0, #0x3
  42acd0:	b.hi	42ad2c <wcrtomb@plt+0x2601c>  // b.pmore
  42acd4:	cmp	w0, #0x1
  42acd8:	b.eq	42ace8 <wcrtomb@plt+0x25fd8>  // b.none
  42acdc:	cmp	w0, #0x2
  42ace0:	b.eq	42acf0 <wcrtomb@plt+0x25fe0>  // b.none
  42ace4:	b	42ad2c <wcrtomb@plt+0x2601c>
  42ace8:	mov	w0, #0x0                   	// #0
  42acec:	b	42ad38 <wcrtomb@plt+0x26028>
  42acf0:	ldr	x0, [sp, #8]
  42acf4:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42acf8:	add	x1, x1, #0xa70
  42acfc:	str	x1, [x0, #32]
  42ad00:	b	42ad34 <wcrtomb@plt+0x26024>
  42ad04:	ldr	x0, [sp, #8]
  42ad08:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42ad0c:	add	x1, x1, #0xb00
  42ad10:	str	x1, [x0, #32]
  42ad14:	b	42ad34 <wcrtomb@plt+0x26024>
  42ad18:	ldr	x0, [sp, #8]
  42ad1c:	adrp	x1, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42ad20:	add	x1, x1, #0xab8
  42ad24:	str	x1, [x0, #32]
  42ad28:	b	42ad34 <wcrtomb@plt+0x26024>
  42ad2c:	mov	w0, #0x0                   	// #0
  42ad30:	b	42ad38 <wcrtomb@plt+0x26028>
  42ad34:	mov	w0, #0x1                   	// #1
  42ad38:	add	sp, sp, #0x10
  42ad3c:	ret
  42ad40:	stp	x29, x30, [sp, #-240]!
  42ad44:	mov	x29, sp
  42ad48:	stp	x19, x20, [sp, #16]
  42ad4c:	str	x0, [sp, #40]
  42ad50:	str	x1, [sp, #32]
  42ad54:	ldr	x0, [sp, #40]
  42ad58:	ldr	x0, [x0, #24]
  42ad5c:	ldr	x1, [x0, #304]
  42ad60:	ldr	x0, [sp, #32]
  42ad64:	lsl	x0, x0, #4
  42ad68:	add	x0, x1, x0
  42ad6c:	ldr	x0, [x0, #8]
  42ad70:	str	x0, [sp, #232]
  42ad74:	ldr	x0, [sp, #40]
  42ad78:	ldr	x0, [x0, #24]
  42ad7c:	ldr	x1, [x0, #304]
  42ad80:	ldr	x0, [sp, #32]
  42ad84:	lsl	x0, x0, #4
  42ad88:	add	x0, x1, x0
  42ad8c:	ldr	x0, [x0]
  42ad90:	mov	x1, x0
  42ad94:	ldr	x0, [sp, #40]
  42ad98:	bl	42a6b4 <wcrtomb@plt+0x259a4>
  42ad9c:	and	w0, w0, #0xff
  42ada0:	eor	w0, w0, #0x1
  42ada4:	and	w0, w0, #0xff
  42ada8:	cmp	w0, #0x0
  42adac:	b.eq	42b01c <wcrtomb@plt+0x2630c>  // b.none
  42adb0:	mov	w0, #0x0                   	// #0
  42adb4:	b	42b02c <wcrtomb@plt+0x2631c>
  42adb8:	ldr	x2, [sp, #232]
  42adbc:	ldr	x1, [sp, #232]
  42adc0:	mov	x0, #0x200                 	// #512
  42adc4:	cmp	x2, #0x200
  42adc8:	csel	x0, x1, x0, le
  42adcc:	str	x0, [sp, #216]
  42add0:	bl	406030 <wcrtomb@plt+0x1320>
  42add4:	str	x0, [sp, #208]
  42add8:	ldr	x0, [sp, #40]
  42addc:	ldr	w0, [x0]
  42ade0:	ldr	x1, [sp, #208]
  42ade4:	ldr	x2, [sp, #216]
  42ade8:	bl	45a2ac <argp_usage@@Base+0x111c0>
  42adec:	str	x0, [sp, #200]
  42adf0:	ldr	x0, [sp, #200]
  42adf4:	cmn	x0, #0x1
  42adf8:	b.ne	42ae64 <wcrtomb@plt+0x26154>  // b.any
  42adfc:	ldr	x0, [sp, #40]
  42ae00:	ldr	x0, [x0, #24]
  42ae04:	ldr	x3, [x0]
  42ae08:	ldr	x0, [sp, #40]
  42ae0c:	ldr	x0, [x0, #24]
  42ae10:	ldr	x1, [x0, #304]
  42ae14:	ldr	x0, [sp, #32]
  42ae18:	lsl	x0, x0, #4
  42ae1c:	add	x0, x1, x0
  42ae20:	ldr	x1, [x0]
  42ae24:	ldr	x0, [sp, #40]
  42ae28:	ldr	x0, [x0, #24]
  42ae2c:	ldr	x2, [x0, #304]
  42ae30:	ldr	x0, [sp, #32]
  42ae34:	lsl	x0, x0, #4
  42ae38:	add	x0, x2, x0
  42ae3c:	ldr	x0, [x0, #8]
  42ae40:	add	x1, x1, x0
  42ae44:	ldr	x0, [sp, #232]
  42ae48:	sub	x0, x1, x0
  42ae4c:	ldr	x2, [sp, #216]
  42ae50:	mov	x1, x0
  42ae54:	mov	x0, x3
  42ae58:	bl	425f5c <wcrtomb@plt+0x2124c>
  42ae5c:	mov	w0, #0x0                   	// #0
  42ae60:	b	42b02c <wcrtomb@plt+0x2631c>
  42ae64:	ldr	x0, [sp, #200]
  42ae68:	cmp	x0, #0x0
  42ae6c:	b.ne	42afbc <wcrtomb@plt+0x262ac>  // b.any
  42ae70:	ldr	x0, [sp, #40]
  42ae74:	ldr	w0, [x0]
  42ae78:	add	x1, sp, #0x30
  42ae7c:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  42ae80:	cmp	w0, #0x0
  42ae84:	b.ne	42aea4 <wcrtomb@plt+0x26194>  // b.any
  42ae88:	ldr	x0, [sp, #40]
  42ae8c:	ldr	x0, [x0, #24]
  42ae90:	ldr	x1, [x0, #136]
  42ae94:	ldr	x0, [sp, #96]
  42ae98:	sub	x0, x1, x0
  42ae9c:	str	x0, [sp, #224]
  42aea0:	b	42aefc <wcrtomb@plt+0x261ec>
  42aea4:	ldr	x0, [sp, #40]
  42aea8:	ldr	x0, [x0, #24]
  42aeac:	ldr	x1, [x0, #136]
  42aeb0:	ldr	x0, [sp, #40]
  42aeb4:	ldr	x0, [x0, #24]
  42aeb8:	ldr	x2, [x0, #304]
  42aebc:	ldr	x0, [sp, #32]
  42aec0:	lsl	x0, x0, #4
  42aec4:	add	x0, x2, x0
  42aec8:	ldr	x2, [x0]
  42aecc:	ldr	x0, [sp, #40]
  42aed0:	ldr	x0, [x0, #24]
  42aed4:	ldr	x3, [x0, #304]
  42aed8:	ldr	x0, [sp, #32]
  42aedc:	lsl	x0, x0, #4
  42aee0:	add	x0, x3, x0
  42aee4:	ldr	x0, [x0, #8]
  42aee8:	add	x2, x2, x0
  42aeec:	ldr	x0, [sp, #232]
  42aef0:	sub	x0, x2, x0
  42aef4:	sub	x0, x1, x0
  42aef8:	str	x0, [sp, #224]
  42aefc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42af00:	add	x0, x0, #0x24c
  42af04:	ldr	w0, [x0]
  42af08:	and	w0, w0, #0x80
  42af0c:	cmp	w0, #0x0
  42af10:	b.eq	42af90 <wcrtomb@plt+0x26280>  // b.none
  42af14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42af18:	add	x0, x0, #0x420
  42af1c:	ldr	x0, [x0]
  42af20:	cmp	x0, #0x0
  42af24:	b.eq	42af38 <wcrtomb@plt+0x26228>  // b.none
  42af28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42af2c:	add	x0, x0, #0x420
  42af30:	ldr	x0, [x0]
  42af34:	blr	x0
  42af38:	ldr	x2, [sp, #224]
  42af3c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42af40:	add	x1, x0, #0xb48
  42af44:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42af48:	add	x0, x0, #0xb78
  42af4c:	bl	404040 <ngettext@plt>
  42af50:	mov	x19, x0
  42af54:	ldr	x0, [sp, #40]
  42af58:	ldr	x0, [x0, #24]
  42af5c:	ldr	x0, [x0]
  42af60:	bl	459cd8 <argp_usage@@Base+0x10bec>
  42af64:	mov	x20, x0
  42af68:	add	x0, sp, #0xb0
  42af6c:	mov	x1, x0
  42af70:	ldr	x0, [sp, #224]
  42af74:	bl	450988 <argp_usage@@Base+0x789c>
  42af78:	mov	x4, x0
  42af7c:	mov	x3, x20
  42af80:	mov	x2, x19
  42af84:	mov	w1, #0x0                   	// #0
  42af88:	mov	w0, #0x0                   	// #0
  42af8c:	bl	404100 <error@plt>
  42af90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42af94:	add	x0, x0, #0x3e9
  42af98:	ldrb	w0, [x0]
  42af9c:	eor	w0, w0, #0x1
  42afa0:	and	w0, w0, #0xff
  42afa4:	cmp	w0, #0x0
  42afa8:	b.eq	42afb4 <wcrtomb@plt+0x262a4>  // b.none
  42afac:	mov	w0, #0x1                   	// #1
  42afb0:	bl	434ff4 <wcrtomb@plt+0x302e4>
  42afb4:	mov	w0, #0x0                   	// #0
  42afb8:	b	42b02c <wcrtomb@plt+0x2631c>
  42afbc:	ldr	x1, [sp, #208]
  42afc0:	ldr	x0, [sp, #200]
  42afc4:	add	x3, x1, x0
  42afc8:	mov	x1, #0x200                 	// #512
  42afcc:	ldr	x0, [sp, #200]
  42afd0:	sub	x0, x1, x0
  42afd4:	mov	x2, x0
  42afd8:	mov	w1, #0x0                   	// #0
  42afdc:	mov	x0, x3
  42afe0:	bl	4044d0 <memset@plt>
  42afe4:	ldr	x1, [sp, #232]
  42afe8:	ldr	x0, [sp, #200]
  42afec:	sub	x0, x1, x0
  42aff0:	str	x0, [sp, #232]
  42aff4:	ldr	x0, [sp, #40]
  42aff8:	ldr	x0, [x0, #16]
  42affc:	mov	x1, x0
  42b000:	ldr	x0, [sp, #200]
  42b004:	add	x0, x1, x0
  42b008:	mov	x1, x0
  42b00c:	ldr	x0, [sp, #40]
  42b010:	str	x1, [x0, #16]
  42b014:	ldr	x0, [sp, #208]
  42b018:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42b01c:	ldr	x0, [sp, #232]
  42b020:	cmp	x0, #0x0
  42b024:	b.gt	42adb8 <wcrtomb@plt+0x260a8>
  42b028:	mov	w0, #0x1                   	// #1
  42b02c:	ldp	x19, x20, [sp, #16]
  42b030:	ldp	x29, x30, [sp], #240
  42b034:	ret
  42b038:	stp	x29, x30, [sp, #-64]!
  42b03c:	mov	x29, sp
  42b040:	str	x0, [sp, #24]
  42b044:	str	x1, [sp, #16]
  42b048:	ldr	x0, [sp, #24]
  42b04c:	ldr	x0, [x0, #24]
  42b050:	ldr	x1, [x0, #304]
  42b054:	ldr	x0, [sp, #16]
  42b058:	lsl	x0, x0, #4
  42b05c:	add	x0, x1, x0
  42b060:	ldr	x0, [x0]
  42b064:	mov	x1, x0
  42b068:	ldr	x0, [sp, #24]
  42b06c:	bl	42a6b4 <wcrtomb@plt+0x259a4>
  42b070:	and	w0, w0, #0xff
  42b074:	eor	w0, w0, #0x1
  42b078:	and	w0, w0, #0xff
  42b07c:	cmp	w0, #0x0
  42b080:	b.eq	42b08c <wcrtomb@plt+0x2637c>  // b.none
  42b084:	mov	w0, #0x0                   	// #0
  42b088:	b	42b234 <wcrtomb@plt+0x26524>
  42b08c:	ldr	x0, [sp, #24]
  42b090:	ldr	x0, [x0, #24]
  42b094:	ldr	x1, [x0, #304]
  42b098:	ldr	x0, [sp, #16]
  42b09c:	lsl	x0, x0, #4
  42b0a0:	add	x0, x1, x0
  42b0a4:	ldr	x0, [x0, #8]
  42b0a8:	str	x0, [sp, #56]
  42b0ac:	ldr	x0, [sp, #56]
  42b0b0:	cmp	x0, #0x0
  42b0b4:	b.ne	42b224 <wcrtomb@plt+0x26514>  // b.any
  42b0b8:	ldr	x0, [sp, #24]
  42b0bc:	ldrb	w0, [x0, #4]
  42b0c0:	cmp	w0, #0x0
  42b0c4:	b.eq	42b230 <wcrtomb@plt+0x26520>  // b.none
  42b0c8:	ldr	x0, [sp, #24]
  42b0cc:	ldr	w0, [x0]
  42b0d0:	bl	42de04 <wcrtomb@plt+0x290f4>
  42b0d4:	cmp	w0, #0x0
  42b0d8:	b.eq	42b230 <wcrtomb@plt+0x26520>  // b.none
  42b0dc:	ldr	x0, [sp, #24]
  42b0e0:	ldr	x0, [x0, #24]
  42b0e4:	ldr	x0, [x0]
  42b0e8:	bl	43ac4c <wcrtomb@plt+0x35f3c>
  42b0ec:	b	42b230 <wcrtomb@plt+0x26520>
  42b0f0:	ldr	x2, [sp, #56]
  42b0f4:	ldr	x1, [sp, #56]
  42b0f8:	mov	x0, #0x200                 	// #512
  42b0fc:	cmp	x2, #0x200
  42b100:	csel	x0, x1, x0, le
  42b104:	str	x0, [sp, #48]
  42b108:	bl	406030 <wcrtomb@plt+0x1320>
  42b10c:	str	x0, [sp, #40]
  42b110:	ldr	x0, [sp, #40]
  42b114:	cmp	x0, #0x0
  42b118:	b.ne	42b174 <wcrtomb@plt+0x26464>  // b.any
  42b11c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42b120:	add	x0, x0, #0x420
  42b124:	ldr	x0, [x0]
  42b128:	cmp	x0, #0x0
  42b12c:	b.eq	42b140 <wcrtomb@plt+0x26430>  // b.none
  42b130:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42b134:	add	x0, x0, #0x420
  42b138:	ldr	x0, [x0]
  42b13c:	blr	x0
  42b140:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42b144:	add	x0, x0, #0xba8
  42b148:	bl	404c60 <gettext@plt>
  42b14c:	mov	x2, x0
  42b150:	mov	w1, #0x0                   	// #0
  42b154:	mov	w0, #0x0                   	// #0
  42b158:	bl	404100 <error@plt>
  42b15c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42b160:	add	x0, x0, #0xdb0
  42b164:	mov	w1, #0x2                   	// #2
  42b168:	str	w1, [x0]
  42b16c:	mov	w0, #0x0                   	// #0
  42b170:	b	42b234 <wcrtomb@plt+0x26524>
  42b174:	ldr	x0, [sp, #40]
  42b178:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42b17c:	ldr	x0, [sp, #24]
  42b180:	ldr	x0, [x0, #16]
  42b184:	add	x1, x0, #0x200
  42b188:	ldr	x0, [sp, #24]
  42b18c:	str	x1, [x0, #16]
  42b190:	ldr	x0, [sp, #24]
  42b194:	ldr	w0, [x0]
  42b198:	ldr	x1, [sp, #40]
  42b19c:	ldr	x2, [sp, #48]
  42b1a0:	bl	4256b8 <wcrtomb@plt+0x209a8>
  42b1a4:	str	x0, [sp, #32]
  42b1a8:	ldr	x1, [sp, #56]
  42b1ac:	ldr	x0, [sp, #32]
  42b1b0:	sub	x0, x1, x0
  42b1b4:	str	x0, [sp, #56]
  42b1b8:	ldr	x0, [sp, #24]
  42b1bc:	ldr	x0, [x0, #24]
  42b1c0:	ldr	x1, [x0, #264]
  42b1c4:	ldr	x0, [sp, #24]
  42b1c8:	ldr	x0, [x0, #16]
  42b1cc:	sub	x0, x1, x0
  42b1d0:	bl	4051ec <wcrtomb@plt+0x4dc>
  42b1d4:	ldr	x0, [sp, #24]
  42b1d8:	ldr	x0, [x0, #8]
  42b1dc:	mov	x1, x0
  42b1e0:	ldr	x0, [sp, #32]
  42b1e4:	add	x0, x1, x0
  42b1e8:	mov	x1, x0
  42b1ec:	ldr	x0, [sp, #24]
  42b1f0:	str	x1, [x0, #8]
  42b1f4:	ldr	x1, [sp, #32]
  42b1f8:	ldr	x0, [sp, #48]
  42b1fc:	cmp	x1, x0
  42b200:	b.eq	42b224 <wcrtomb@plt+0x26514>  // b.none
  42b204:	ldr	x0, [sp, #24]
  42b208:	ldr	x0, [x0, #24]
  42b20c:	ldr	x0, [x0]
  42b210:	ldr	x2, [sp, #48]
  42b214:	ldr	x1, [sp, #32]
  42b218:	bl	43ad14 <wcrtomb@plt+0x36004>
  42b21c:	mov	w0, #0x0                   	// #0
  42b220:	b	42b234 <wcrtomb@plt+0x26524>
  42b224:	ldr	x0, [sp, #56]
  42b228:	cmp	x0, #0x0
  42b22c:	b.gt	42b0f0 <wcrtomb@plt+0x263e0>
  42b230:	mov	w0, #0x1                   	// #1
  42b234:	ldp	x29, x30, [sp], #64
  42b238:	ret
  42b23c:	stp	x29, x30, [sp, #-96]!
  42b240:	mov	x29, sp
  42b244:	str	w0, [sp, #28]
  42b248:	str	x1, [sp, #16]
  42b24c:	add	x0, sp, #0x20
  42b250:	bl	42a420 <wcrtomb@plt+0x25710>
  42b254:	and	w0, w0, #0xff
  42b258:	eor	w0, w0, #0x1
  42b25c:	and	w0, w0, #0xff
  42b260:	cmp	w0, #0x0
  42b264:	b.eq	42b270 <wcrtomb@plt+0x26560>  // b.none
  42b268:	mov	w0, #0x3                   	// #3
  42b26c:	b	42b378 <wcrtomb@plt+0x26668>
  42b270:	ldr	x0, [sp, #16]
  42b274:	str	x0, [sp, #56]
  42b278:	ldr	w0, [sp, #28]
  42b27c:	str	w0, [sp, #32]
  42b280:	mov	w0, #0x1                   	// #1
  42b284:	strb	w0, [sp, #36]
  42b288:	add	x0, sp, #0x20
  42b28c:	bl	42abc0 <wcrtomb@plt+0x25eb0>
  42b290:	strb	w0, [sp, #95]
  42b294:	ldrb	w0, [sp, #95]
  42b298:	cmp	w0, #0x0
  42b29c:	b.eq	42b338 <wcrtomb@plt+0x26628>  // b.none
  42b2a0:	ldr	x0, [sp, #64]
  42b2a4:	ldr	x0, [x0, #56]
  42b2a8:	cmp	x0, #0x0
  42b2ac:	b.eq	42b338 <wcrtomb@plt+0x26628>  // b.none
  42b2b0:	add	x0, sp, #0x20
  42b2b4:	bl	42a5dc <wcrtomb@plt+0x258cc>
  42b2b8:	ldr	w0, [sp, #28]
  42b2bc:	cmp	w0, #0x0
  42b2c0:	b.lt	42b338 <wcrtomb@plt+0x26628>  // b.tstop
  42b2c4:	ldr	x0, [sp, #56]
  42b2c8:	ldr	x3, [x0, #8]
  42b2cc:	ldr	x0, [sp, #56]
  42b2d0:	ldr	x4, [x0, #136]
  42b2d4:	ldr	x0, [sp, #56]
  42b2d8:	ldr	x1, [x0, #264]
  42b2dc:	ldr	x0, [sp, #48]
  42b2e0:	sub	x0, x1, x0
  42b2e4:	mov	x2, x0
  42b2e8:	mov	x1, x4
  42b2ec:	mov	x0, x3
  42b2f0:	bl	404ee8 <wcrtomb@plt+0x1d8>
  42b2f4:	str	xzr, [sp, #80]
  42b2f8:	b	42b318 <wcrtomb@plt+0x26608>
  42b2fc:	add	x0, sp, #0x20
  42b300:	ldr	x1, [sp, #80]
  42b304:	bl	42a53c <wcrtomb@plt+0x2582c>
  42b308:	strb	w0, [sp, #95]
  42b30c:	ldr	x0, [sp, #80]
  42b310:	add	x0, x0, #0x1
  42b314:	str	x0, [sp, #80]
  42b318:	ldrb	w0, [sp, #95]
  42b31c:	cmp	w0, #0x0
  42b320:	b.eq	42b338 <wcrtomb@plt+0x26628>  // b.none
  42b324:	ldr	x0, [sp, #56]
  42b328:	ldr	x0, [x0, #288]
  42b32c:	ldr	x1, [sp, #80]
  42b330:	cmp	x1, x0
  42b334:	b.cc	42b2fc <wcrtomb@plt+0x265ec>  // b.lo, b.ul, b.last
  42b338:	ldr	x0, [sp, #56]
  42b33c:	ldr	x1, [x0, #264]
  42b340:	ldr	x0, [sp, #48]
  42b344:	sub	x0, x1, x0
  42b348:	bl	40f570 <wcrtomb@plt+0xa860>
  42b34c:	add	x0, sp, #0x20
  42b350:	bl	42a49c <wcrtomb@plt+0x2578c>
  42b354:	and	w0, w0, #0xff
  42b358:	cmp	w0, #0x0
  42b35c:	b.eq	42b36c <wcrtomb@plt+0x2665c>  // b.none
  42b360:	ldrb	w0, [sp, #95]
  42b364:	cmp	w0, #0x0
  42b368:	b.ne	42b374 <wcrtomb@plt+0x26664>  // b.any
  42b36c:	mov	w0, #0x1                   	// #1
  42b370:	b	42b378 <wcrtomb@plt+0x26668>
  42b374:	mov	w0, #0x0                   	// #0
  42b378:	ldp	x29, x30, [sp], #96
  42b37c:	ret
  42b380:	stp	x29, x30, [sp, #-80]!
  42b384:	mov	x29, sp
  42b388:	str	x0, [sp, #24]
  42b38c:	add	x0, sp, #0x20
  42b390:	bl	42a420 <wcrtomb@plt+0x25710>
  42b394:	and	w0, w0, #0xff
  42b398:	eor	w0, w0, #0x1
  42b39c:	and	w0, w0, #0xff
  42b3a0:	cmp	w0, #0x0
  42b3a4:	b.eq	42b3b0 <wcrtomb@plt+0x266a0>  // b.none
  42b3a8:	mov	w0, #0x0                   	// #0
  42b3ac:	b	42b3c4 <wcrtomb@plt+0x266b4>
  42b3b0:	ldr	x0, [sp, #24]
  42b3b4:	str	x0, [sp, #56]
  42b3b8:	add	x0, sp, #0x20
  42b3bc:	bl	42a3d8 <wcrtomb@plt+0x256c8>
  42b3c0:	and	w0, w0, #0xff
  42b3c4:	ldp	x29, x30, [sp], #80
  42b3c8:	ret
  42b3cc:	stp	x29, x30, [sp, #-80]!
  42b3d0:	mov	x29, sp
  42b3d4:	str	x0, [sp, #24]
  42b3d8:	add	x0, sp, #0x20
  42b3dc:	bl	42a420 <wcrtomb@plt+0x25710>
  42b3e0:	and	w0, w0, #0xff
  42b3e4:	eor	w0, w0, #0x1
  42b3e8:	and	w0, w0, #0xff
  42b3ec:	cmp	w0, #0x0
  42b3f0:	b.eq	42b3fc <wcrtomb@plt+0x266ec>  // b.none
  42b3f4:	mov	w0, #0x0                   	// #0
  42b3f8:	b	42b410 <wcrtomb@plt+0x26700>
  42b3fc:	ldr	x0, [sp, #24]
  42b400:	str	x0, [sp, #56]
  42b404:	add	x0, sp, #0x20
  42b408:	bl	42a66c <wcrtomb@plt+0x2595c>
  42b40c:	and	w0, w0, #0xff
  42b410:	ldp	x29, x30, [sp], #80
  42b414:	ret
  42b418:	stp	x29, x30, [sp, #-112]!
  42b41c:	mov	x29, sp
  42b420:	str	w0, [sp, #44]
  42b424:	str	x1, [sp, #32]
  42b428:	str	x2, [sp, #24]
  42b42c:	mov	w0, #0x1                   	// #1
  42b430:	strb	w0, [sp, #111]
  42b434:	add	x0, sp, #0x30
  42b438:	bl	42a420 <wcrtomb@plt+0x25710>
  42b43c:	and	w0, w0, #0xff
  42b440:	eor	w0, w0, #0x1
  42b444:	and	w0, w0, #0xff
  42b448:	cmp	w0, #0x0
  42b44c:	b.eq	42b458 <wcrtomb@plt+0x26748>  // b.none
  42b450:	mov	w0, #0x3                   	// #3
  42b454:	b	42b520 <wcrtomb@plt+0x26810>
  42b458:	ldr	x0, [sp, #32]
  42b45c:	str	x0, [sp, #72]
  42b460:	ldr	w0, [sp, #44]
  42b464:	str	w0, [sp, #48]
  42b468:	mov	w2, #0x0                   	// #0
  42b46c:	mov	x1, #0x0                   	// #0
  42b470:	ldr	w0, [sp, #44]
  42b474:	bl	4042b0 <lseek@plt>
  42b478:	cmp	x0, #0x0
  42b47c:	cset	w0, eq  // eq = none
  42b480:	and	w0, w0, #0xff
  42b484:	strb	w0, [sp, #52]
  42b488:	str	xzr, [sp, #56]
  42b48c:	add	x0, sp, #0x30
  42b490:	bl	42a624 <wcrtomb@plt+0x25914>
  42b494:	strb	w0, [sp, #111]
  42b498:	str	xzr, [sp, #96]
  42b49c:	b	42b4bc <wcrtomb@plt+0x267ac>
  42b4a0:	add	x0, sp, #0x30
  42b4a4:	ldr	x1, [sp, #96]
  42b4a8:	bl	42a58c <wcrtomb@plt+0x2587c>
  42b4ac:	strb	w0, [sp, #111]
  42b4b0:	ldr	x0, [sp, #96]
  42b4b4:	add	x0, x0, #0x1
  42b4b8:	str	x0, [sp, #96]
  42b4bc:	ldrb	w0, [sp, #111]
  42b4c0:	cmp	w0, #0x0
  42b4c4:	b.eq	42b4dc <wcrtomb@plt+0x267cc>  // b.none
  42b4c8:	ldr	x0, [sp, #72]
  42b4cc:	ldr	x0, [x0, #288]
  42b4d0:	ldr	x1, [sp, #96]
  42b4d4:	cmp	x1, x0
  42b4d8:	b.cc	42b4a0 <wcrtomb@plt+0x26790>  // b.lo, b.ul, b.last
  42b4dc:	ldr	x0, [sp, #72]
  42b4e0:	ldr	x1, [x0, #264]
  42b4e4:	ldr	x0, [sp, #64]
  42b4e8:	sub	x1, x1, x0
  42b4ec:	ldr	x0, [sp, #24]
  42b4f0:	str	x1, [x0]
  42b4f4:	add	x0, sp, #0x30
  42b4f8:	bl	42a49c <wcrtomb@plt+0x2578c>
  42b4fc:	and	w0, w0, #0xff
  42b500:	cmp	w0, #0x0
  42b504:	b.eq	42b514 <wcrtomb@plt+0x26804>  // b.none
  42b508:	ldrb	w0, [sp, #111]
  42b50c:	cmp	w0, #0x0
  42b510:	b.ne	42b51c <wcrtomb@plt+0x2680c>  // b.any
  42b514:	mov	w0, #0x1                   	// #1
  42b518:	b	42b520 <wcrtomb@plt+0x26810>
  42b51c:	mov	w0, #0x0                   	// #0
  42b520:	ldp	x29, x30, [sp], #112
  42b524:	ret
  42b528:	stp	x29, x30, [sp, #-96]!
  42b52c:	mov	x29, sp
  42b530:	str	x0, [sp, #24]
  42b534:	mov	w0, #0x1                   	// #1
  42b538:	strb	w0, [sp, #95]
  42b53c:	add	x0, sp, #0x28
  42b540:	bl	42a420 <wcrtomb@plt+0x25710>
  42b544:	and	w0, w0, #0xff
  42b548:	eor	w0, w0, #0x1
  42b54c:	and	w0, w0, #0xff
  42b550:	cmp	w0, #0x0
  42b554:	b.eq	42b560 <wcrtomb@plt+0x26850>  // b.none
  42b558:	mov	w0, #0x3                   	// #3
  42b55c:	b	42b5bc <wcrtomb@plt+0x268ac>
  42b560:	ldr	x0, [sp, #24]
  42b564:	str	x0, [sp, #64]
  42b568:	mov	w0, #0xffffffff            	// #-1
  42b56c:	str	w0, [sp, #40]
  42b570:	add	x0, sp, #0x28
  42b574:	bl	42a624 <wcrtomb@plt+0x25914>
  42b578:	strb	w0, [sp, #95]
  42b57c:	ldr	x0, [sp, #64]
  42b580:	ldr	x1, [x0, #264]
  42b584:	ldr	x0, [sp, #56]
  42b588:	sub	x0, x1, x0
  42b58c:	bl	4230c8 <wcrtomb@plt+0x1e3b8>
  42b590:	add	x0, sp, #0x28
  42b594:	bl	42a49c <wcrtomb@plt+0x2578c>
  42b598:	and	w0, w0, #0xff
  42b59c:	cmp	w0, #0x0
  42b5a0:	b.eq	42b5b0 <wcrtomb@plt+0x268a0>  // b.none
  42b5a4:	ldrb	w0, [sp, #95]
  42b5a8:	cmp	w0, #0x0
  42b5ac:	b.ne	42b5b8 <wcrtomb@plt+0x268a8>  // b.any
  42b5b0:	mov	w0, #0x1                   	// #1
  42b5b4:	b	42b5bc <wcrtomb@plt+0x268ac>
  42b5b8:	mov	w0, #0x0                   	// #0
  42b5bc:	ldp	x29, x30, [sp], #96
  42b5c0:	ret
  42b5c4:	sub	sp, sp, #0x270
  42b5c8:	stp	x29, x30, [sp]
  42b5cc:	mov	x29, sp
  42b5d0:	stp	x19, x20, [sp, #16]
  42b5d4:	str	x0, [sp, #56]
  42b5d8:	str	x1, [sp, #48]
  42b5dc:	str	x2, [sp, #40]
  42b5e0:	ldr	x1, [sp, #48]
  42b5e4:	ldr	x0, [sp, #56]
  42b5e8:	bl	42a6b4 <wcrtomb@plt+0x259a4>
  42b5ec:	and	w0, w0, #0xff
  42b5f0:	eor	w0, w0, #0x1
  42b5f4:	and	w0, w0, #0xff
  42b5f8:	cmp	w0, #0x0
  42b5fc:	b.eq	42b70c <wcrtomb@plt+0x269fc>  // b.none
  42b600:	mov	w0, #0x0                   	// #0
  42b604:	b	42b720 <wcrtomb@plt+0x26a10>
  42b608:	ldr	x1, [sp, #40]
  42b60c:	ldr	x0, [sp, #48]
  42b610:	sub	x0, x1, x0
  42b614:	mov	x1, #0x200                 	// #512
  42b618:	cmp	x0, #0x200
  42b61c:	csel	x0, x0, x1, le
  42b620:	str	x0, [sp, #616]
  42b624:	ldr	x0, [sp, #56]
  42b628:	ldr	w0, [x0]
  42b62c:	add	x1, sp, #0x48
  42b630:	ldr	x2, [sp, #616]
  42b634:	bl	45a2ac <argp_usage@@Base+0x111c0>
  42b638:	str	x0, [sp, #608]
  42b63c:	ldr	x0, [sp, #608]
  42b640:	cmn	x0, #0x1
  42b644:	b.ne	42b668 <wcrtomb@plt+0x26958>  // b.any
  42b648:	ldr	x0, [sp, #56]
  42b64c:	ldr	x0, [x0, #24]
  42b650:	ldr	x0, [x0]
  42b654:	ldr	x2, [sp, #616]
  42b658:	ldr	x1, [sp, #48]
  42b65c:	bl	425f5c <wcrtomb@plt+0x2124c>
  42b660:	mov	w0, #0x0                   	// #0
  42b664:	b	42b720 <wcrtomb@plt+0x26a10>
  42b668:	ldr	x0, [sp, #608]
  42b66c:	cmp	x0, #0x0
  42b670:	b.ne	42b69c <wcrtomb@plt+0x2698c>  // b.any
  42b674:	ldr	x0, [sp, #56]
  42b678:	ldr	x19, [x0, #24]
  42b67c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42b680:	add	x0, x0, #0xbc8
  42b684:	bl	404c60 <gettext@plt>
  42b688:	mov	x1, x0
  42b68c:	mov	x0, x19
  42b690:	bl	40b850 <wcrtomb@plt+0x6b40>
  42b694:	mov	w0, #0x0                   	// #0
  42b698:	b	42b720 <wcrtomb@plt+0x26a10>
  42b69c:	add	x0, sp, #0x48
  42b6a0:	ldr	x1, [sp, #608]
  42b6a4:	bl	42a73c <wcrtomb@plt+0x25a2c>
  42b6a8:	and	w0, w0, #0xff
  42b6ac:	eor	w0, w0, #0x1
  42b6b0:	and	w0, w0, #0xff
  42b6b4:	cmp	w0, #0x0
  42b6b8:	b.eq	42b6fc <wcrtomb@plt+0x269ec>  // b.none
  42b6bc:	ldr	x0, [sp, #56]
  42b6c0:	ldr	x19, [x0, #24]
  42b6c4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42b6c8:	add	x0, x0, #0xbd8
  42b6cc:	bl	404c60 <gettext@plt>
  42b6d0:	mov	x20, x0
  42b6d4:	add	x0, sp, #0x248
  42b6d8:	mov	x1, x0
  42b6dc:	ldr	x0, [sp, #48]
  42b6e0:	bl	450838 <argp_usage@@Base+0x774c>
  42b6e4:	mov	x2, x0
  42b6e8:	mov	x1, x20
  42b6ec:	mov	x0, x19
  42b6f0:	bl	40b850 <wcrtomb@plt+0x6b40>
  42b6f4:	mov	w0, #0x0                   	// #0
  42b6f8:	b	42b720 <wcrtomb@plt+0x26a10>
  42b6fc:	ldr	x1, [sp, #48]
  42b700:	ldr	x0, [sp, #608]
  42b704:	add	x0, x1, x0
  42b708:	str	x0, [sp, #48]
  42b70c:	ldr	x1, [sp, #48]
  42b710:	ldr	x0, [sp, #40]
  42b714:	cmp	x1, x0
  42b718:	b.lt	42b608 <wcrtomb@plt+0x268f8>  // b.tstop
  42b71c:	mov	w0, #0x1                   	// #1
  42b720:	ldp	x19, x20, [sp, #16]
  42b724:	ldp	x29, x30, [sp]
  42b728:	add	sp, sp, #0x270
  42b72c:	ret
  42b730:	sub	sp, sp, #0x250
  42b734:	stp	x29, x30, [sp]
  42b738:	mov	x29, sp
  42b73c:	str	x19, [sp, #16]
  42b740:	str	x0, [sp, #40]
  42b744:	str	x1, [sp, #32]
  42b748:	ldr	x0, [sp, #40]
  42b74c:	ldr	x0, [x0, #24]
  42b750:	ldr	x1, [x0, #304]
  42b754:	ldr	x0, [sp, #32]
  42b758:	lsl	x0, x0, #4
  42b75c:	add	x0, x1, x0
  42b760:	ldr	x0, [x0]
  42b764:	mov	x1, x0
  42b768:	ldr	x0, [sp, #40]
  42b76c:	bl	42a6b4 <wcrtomb@plt+0x259a4>
  42b770:	and	w0, w0, #0xff
  42b774:	eor	w0, w0, #0x1
  42b778:	and	w0, w0, #0xff
  42b77c:	cmp	w0, #0x0
  42b780:	b.eq	42b78c <wcrtomb@plt+0x26a7c>  // b.none
  42b784:	mov	w0, #0x0                   	// #0
  42b788:	b	42b9a4 <wcrtomb@plt+0x26c94>
  42b78c:	ldr	x0, [sp, #40]
  42b790:	ldr	x0, [x0, #24]
  42b794:	ldr	x1, [x0, #304]
  42b798:	ldr	x0, [sp, #32]
  42b79c:	lsl	x0, x0, #4
  42b7a0:	add	x0, x1, x0
  42b7a4:	ldr	x0, [x0, #8]
  42b7a8:	str	x0, [sp, #584]
  42b7ac:	ldr	x0, [sp, #40]
  42b7b0:	ldr	x0, [x0, #24]
  42b7b4:	ldr	x1, [x0, #264]
  42b7b8:	ldr	x0, [sp, #40]
  42b7bc:	ldr	x0, [x0, #16]
  42b7c0:	sub	x0, x1, x0
  42b7c4:	bl	4051ec <wcrtomb@plt+0x4dc>
  42b7c8:	b	42b994 <wcrtomb@plt+0x26c84>
  42b7cc:	ldr	x2, [sp, #584]
  42b7d0:	ldr	x1, [sp, #584]
  42b7d4:	mov	x0, #0x200                 	// #512
  42b7d8:	cmp	x2, #0x200
  42b7dc:	csel	x0, x1, x0, le
  42b7e0:	str	x0, [sp, #576]
  42b7e4:	bl	406030 <wcrtomb@plt+0x1320>
  42b7e8:	str	x0, [sp, #568]
  42b7ec:	ldr	x0, [sp, #568]
  42b7f0:	cmp	x0, #0x0
  42b7f4:	b.ne	42b850 <wcrtomb@plt+0x26b40>  // b.any
  42b7f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42b7fc:	add	x0, x0, #0x420
  42b800:	ldr	x0, [x0]
  42b804:	cmp	x0, #0x0
  42b808:	b.eq	42b81c <wcrtomb@plt+0x26b0c>  // b.none
  42b80c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42b810:	add	x0, x0, #0x420
  42b814:	ldr	x0, [x0]
  42b818:	blr	x0
  42b81c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42b820:	add	x0, x0, #0xba8
  42b824:	bl	404c60 <gettext@plt>
  42b828:	mov	x2, x0
  42b82c:	mov	w1, #0x0                   	// #0
  42b830:	mov	w0, #0x0                   	// #0
  42b834:	bl	404100 <error@plt>
  42b838:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42b83c:	add	x0, x0, #0xdb0
  42b840:	mov	w1, #0x2                   	// #2
  42b844:	str	w1, [x0]
  42b848:	mov	w0, #0x0                   	// #0
  42b84c:	b	42b9a4 <wcrtomb@plt+0x26c94>
  42b850:	ldr	x0, [sp, #568]
  42b854:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42b858:	ldr	x0, [sp, #40]
  42b85c:	ldr	x0, [x0, #16]
  42b860:	add	x1, x0, #0x200
  42b864:	ldr	x0, [sp, #40]
  42b868:	str	x1, [x0, #16]
  42b86c:	ldr	x0, [sp, #40]
  42b870:	ldr	w0, [x0]
  42b874:	add	x1, sp, #0x30
  42b878:	ldr	x2, [sp, #576]
  42b87c:	bl	45a2ac <argp_usage@@Base+0x111c0>
  42b880:	str	x0, [sp, #560]
  42b884:	ldr	x0, [sp, #560]
  42b888:	cmn	x0, #0x1
  42b88c:	b.ne	42b8f8 <wcrtomb@plt+0x26be8>  // b.any
  42b890:	ldr	x0, [sp, #40]
  42b894:	ldr	x0, [x0, #24]
  42b898:	ldr	x3, [x0]
  42b89c:	ldr	x0, [sp, #40]
  42b8a0:	ldr	x0, [x0, #24]
  42b8a4:	ldr	x1, [x0, #304]
  42b8a8:	ldr	x0, [sp, #32]
  42b8ac:	lsl	x0, x0, #4
  42b8b0:	add	x0, x1, x0
  42b8b4:	ldr	x1, [x0]
  42b8b8:	ldr	x0, [sp, #40]
  42b8bc:	ldr	x0, [x0, #24]
  42b8c0:	ldr	x2, [x0, #304]
  42b8c4:	ldr	x0, [sp, #32]
  42b8c8:	lsl	x0, x0, #4
  42b8cc:	add	x0, x2, x0
  42b8d0:	ldr	x0, [x0, #8]
  42b8d4:	add	x1, x1, x0
  42b8d8:	ldr	x0, [sp, #584]
  42b8dc:	sub	x0, x1, x0
  42b8e0:	ldr	x2, [sp, #576]
  42b8e4:	mov	x1, x0
  42b8e8:	mov	x0, x3
  42b8ec:	bl	425f5c <wcrtomb@plt+0x2124c>
  42b8f0:	mov	w0, #0x0                   	// #0
  42b8f4:	b	42b9a4 <wcrtomb@plt+0x26c94>
  42b8f8:	ldr	x0, [sp, #560]
  42b8fc:	cmp	x0, #0x0
  42b900:	b.ne	42b928 <wcrtomb@plt+0x26c18>  // b.any
  42b904:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42b908:	add	x0, x0, #0xbc8
  42b90c:	bl	404c60 <gettext@plt>
  42b910:	mov	x1, x0
  42b914:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42b918:	add	x0, x0, #0x90
  42b91c:	bl	40b850 <wcrtomb@plt+0x6b40>
  42b920:	mov	w0, #0x0                   	// #0
  42b924:	b	42b9a4 <wcrtomb@plt+0x26c94>
  42b928:	ldr	x1, [sp, #584]
  42b92c:	ldr	x0, [sp, #560]
  42b930:	sub	x0, x1, x0
  42b934:	str	x0, [sp, #584]
  42b938:	ldr	x0, [sp, #40]
  42b93c:	ldr	x0, [x0, #24]
  42b940:	ldr	x1, [x0, #264]
  42b944:	ldr	x0, [sp, #40]
  42b948:	ldr	x0, [x0, #16]
  42b94c:	sub	x0, x1, x0
  42b950:	bl	4051ec <wcrtomb@plt+0x4dc>
  42b954:	ldr	x0, [sp, #568]
  42b958:	add	x1, sp, #0x30
  42b95c:	ldr	x2, [sp, #576]
  42b960:	bl	404790 <memcmp@plt>
  42b964:	cmp	w0, #0x0
  42b968:	b.eq	42b994 <wcrtomb@plt+0x26c84>  // b.none
  42b96c:	ldr	x0, [sp, #40]
  42b970:	ldr	x19, [x0, #24]
  42b974:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42b978:	add	x0, x0, #0xc00
  42b97c:	bl	404c60 <gettext@plt>
  42b980:	mov	x1, x0
  42b984:	mov	x0, x19
  42b988:	bl	40b850 <wcrtomb@plt+0x6b40>
  42b98c:	mov	w0, #0x0                   	// #0
  42b990:	b	42b9a4 <wcrtomb@plt+0x26c94>
  42b994:	ldr	x0, [sp, #584]
  42b998:	cmp	x0, #0x0
  42b99c:	b.gt	42b7cc <wcrtomb@plt+0x26abc>
  42b9a0:	mov	w0, #0x1                   	// #1
  42b9a4:	ldr	x19, [sp, #16]
  42b9a8:	ldp	x29, x30, [sp]
  42b9ac:	add	sp, sp, #0x250
  42b9b0:	ret
  42b9b4:	stp	x29, x30, [sp, #-112]!
  42b9b8:	mov	x29, sp
  42b9bc:	str	w0, [sp, #28]
  42b9c0:	str	x1, [sp, #16]
  42b9c4:	mov	w0, #0x1                   	// #1
  42b9c8:	strb	w0, [sp, #111]
  42b9cc:	str	xzr, [sp, #88]
  42b9d0:	add	x0, sp, #0x28
  42b9d4:	bl	42a420 <wcrtomb@plt+0x25710>
  42b9d8:	and	w0, w0, #0xff
  42b9dc:	eor	w0, w0, #0x1
  42b9e0:	and	w0, w0, #0xff
  42b9e4:	cmp	w0, #0x0
  42b9e8:	b.eq	42b9f4 <wcrtomb@plt+0x26ce4>  // b.none
  42b9ec:	mov	w0, #0x1                   	// #1
  42b9f0:	b	42bb2c <wcrtomb@plt+0x26e1c>
  42b9f4:	ldr	x0, [sp, #16]
  42b9f8:	str	x0, [sp, #64]
  42b9fc:	ldr	w0, [sp, #28]
  42ba00:	str	w0, [sp, #40]
  42ba04:	mov	w0, #0x1                   	// #1
  42ba08:	strb	w0, [sp, #44]
  42ba0c:	add	x0, sp, #0x28
  42ba10:	bl	42a624 <wcrtomb@plt+0x25914>
  42ba14:	strb	w0, [sp, #111]
  42ba18:	ldr	x0, [sp, #16]
  42ba1c:	bl	405180 <wcrtomb@plt+0x470>
  42ba20:	str	xzr, [sp, #96]
  42ba24:	b	42bad4 <wcrtomb@plt+0x26dc4>
  42ba28:	ldr	x0, [sp, #64]
  42ba2c:	ldr	x1, [x0, #304]
  42ba30:	ldr	x0, [sp, #96]
  42ba34:	lsl	x0, x0, #4
  42ba38:	add	x0, x1, x0
  42ba3c:	ldr	x1, [x0]
  42ba40:	add	x0, sp, #0x28
  42ba44:	mov	x2, x1
  42ba48:	ldr	x1, [sp, #88]
  42ba4c:	bl	42b5c4 <wcrtomb@plt+0x268b4>
  42ba50:	and	w0, w0, #0xff
  42ba54:	cmp	w0, #0x0
  42ba58:	b.eq	42ba7c <wcrtomb@plt+0x26d6c>  // b.none
  42ba5c:	add	x0, sp, #0x28
  42ba60:	ldr	x1, [sp, #96]
  42ba64:	bl	42b730 <wcrtomb@plt+0x26a20>
  42ba68:	and	w0, w0, #0xff
  42ba6c:	cmp	w0, #0x0
  42ba70:	b.eq	42ba7c <wcrtomb@plt+0x26d6c>  // b.none
  42ba74:	mov	w0, #0x1                   	// #1
  42ba78:	b	42ba80 <wcrtomb@plt+0x26d70>
  42ba7c:	mov	w0, #0x0                   	// #0
  42ba80:	strb	w0, [sp, #111]
  42ba84:	ldrb	w0, [sp, #111]
  42ba88:	and	w0, w0, #0x1
  42ba8c:	strb	w0, [sp, #111]
  42ba90:	ldr	x0, [sp, #64]
  42ba94:	ldr	x1, [x0, #304]
  42ba98:	ldr	x0, [sp, #96]
  42ba9c:	lsl	x0, x0, #4
  42baa0:	add	x0, x1, x0
  42baa4:	ldr	x1, [x0]
  42baa8:	ldr	x0, [sp, #64]
  42baac:	ldr	x2, [x0, #304]
  42bab0:	ldr	x0, [sp, #96]
  42bab4:	lsl	x0, x0, #4
  42bab8:	add	x0, x2, x0
  42babc:	ldr	x0, [x0, #8]
  42bac0:	add	x0, x1, x0
  42bac4:	str	x0, [sp, #88]
  42bac8:	ldr	x0, [sp, #96]
  42bacc:	add	x0, x0, #0x1
  42bad0:	str	x0, [sp, #96]
  42bad4:	ldrb	w0, [sp, #111]
  42bad8:	cmp	w0, #0x0
  42badc:	b.eq	42baf4 <wcrtomb@plt+0x26de4>  // b.none
  42bae0:	ldr	x0, [sp, #64]
  42bae4:	ldr	x0, [x0, #288]
  42bae8:	ldr	x1, [sp, #96]
  42baec:	cmp	x1, x0
  42baf0:	b.cc	42ba28 <wcrtomb@plt+0x26d18>  // b.lo, b.ul, b.last
  42baf4:	ldrb	w0, [sp, #111]
  42baf8:	eor	w0, w0, #0x1
  42bafc:	and	w0, w0, #0xff
  42bb00:	cmp	w0, #0x0
  42bb04:	b.eq	42bb1c <wcrtomb@plt+0x26e0c>  // b.none
  42bb08:	ldr	x0, [sp, #64]
  42bb0c:	ldr	x1, [x0, #264]
  42bb10:	ldr	x0, [sp, #56]
  42bb14:	sub	x0, x1, x0
  42bb18:	bl	4230c8 <wcrtomb@plt+0x1e3b8>
  42bb1c:	bl	4051bc <wcrtomb@plt+0x4ac>
  42bb20:	add	x0, sp, #0x28
  42bb24:	bl	42a49c <wcrtomb@plt+0x2578c>
  42bb28:	ldrb	w0, [sp, #111]
  42bb2c:	ldp	x29, x30, [sp], #112
  42bb30:	ret
  42bb34:	sub	sp, sp, #0x10
  42bb38:	str	x0, [sp, #8]
  42bb3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42bb40:	add	x0, x0, #0x18
  42bb44:	ldr	x0, [x0]
  42bb48:	ldrb	w0, [x0, #156]
  42bb4c:	cmp	w0, #0x53
  42bb50:	cset	w0, eq  // eq = none
  42bb54:	and	w0, w0, #0xff
  42bb58:	add	sp, sp, #0x10
  42bb5c:	ret
  42bb60:	stp	x29, x30, [sp, #-48]!
  42bb64:	mov	x29, sp
  42bb68:	str	x0, [sp, #24]
  42bb6c:	str	x1, [sp, #16]
  42bb70:	ldr	x0, [sp, #16]
  42bb74:	ldrb	w0, [x0, #12]
  42bb78:	cmp	w0, #0x0
  42bb7c:	b.ne	42bb88 <wcrtomb@plt+0x26e78>  // b.any
  42bb80:	mov	w0, #0x1                   	// #1
  42bb84:	b	42bc40 <wcrtomb@plt+0x26f30>
  42bb88:	ldr	x0, [sp, #16]
  42bb8c:	mov	x1, #0xc                   	// #12
  42bb90:	bl	422220 <wcrtomb@plt+0x1d510>
  42bb94:	str	x0, [sp, #32]
  42bb98:	ldr	x0, [sp, #16]
  42bb9c:	add	x0, x0, #0xc
  42bba0:	mov	x1, #0xc                   	// #12
  42bba4:	bl	422220 <wcrtomb@plt+0x1d510>
  42bba8:	str	x0, [sp, #40]
  42bbac:	ldr	x0, [sp, #32]
  42bbb0:	cmp	x0, #0x0
  42bbb4:	b.lt	42bc24 <wcrtomb@plt+0x26f14>  // b.tstop
  42bbb8:	ldr	x0, [sp, #40]
  42bbbc:	cmp	x0, #0x0
  42bbc0:	b.lt	42bc24 <wcrtomb@plt+0x26f14>  // b.tstop
  42bbc4:	ldr	x1, [sp, #32]
  42bbc8:	ldr	x0, [sp, #40]
  42bbcc:	mov	x2, #0x0                   	// #0
  42bbd0:	adds	x0, x1, x0
  42bbd4:	b.vc	42bbdc <wcrtomb@plt+0x26ecc>
  42bbd8:	mov	x2, #0x1                   	// #1
  42bbdc:	mov	x0, x2
  42bbe0:	and	w0, w0, #0x1
  42bbe4:	and	w0, w0, #0xff
  42bbe8:	cmp	w0, #0x0
  42bbec:	b.ne	42bc24 <wcrtomb@plt+0x26f14>  // b.any
  42bbf0:	ldr	x0, [sp, #24]
  42bbf4:	ldr	x0, [x0, #24]
  42bbf8:	ldr	x1, [x0, #136]
  42bbfc:	ldr	x2, [sp, #32]
  42bc00:	ldr	x0, [sp, #40]
  42bc04:	add	x0, x2, x0
  42bc08:	cmp	x1, x0
  42bc0c:	b.lt	42bc24 <wcrtomb@plt+0x26f14>  // b.tstop
  42bc10:	ldr	x0, [sp, #24]
  42bc14:	ldr	x0, [x0, #24]
  42bc18:	ldr	x0, [x0, #264]
  42bc1c:	cmp	x0, #0x0
  42bc20:	b.ge	42bc2c <wcrtomb@plt+0x26f1c>  // b.tcont
  42bc24:	mov	w0, #0x2                   	// #2
  42bc28:	b	42bc40 <wcrtomb@plt+0x26f30>
  42bc2c:	ldr	x0, [sp, #24]
  42bc30:	ldr	x0, [x0, #24]
  42bc34:	add	x1, sp, #0x20
  42bc38:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42bc3c:	mov	w0, #0x0                   	// #0
  42bc40:	ldp	x29, x30, [sp], #48
  42bc44:	ret
  42bc48:	stp	x29, x30, [sp, #-48]!
  42bc4c:	mov	x29, sp
  42bc50:	str	x0, [sp, #24]
  42bc54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42bc58:	add	x0, x0, #0x18
  42bc5c:	ldr	x0, [x0]
  42bc60:	add	x0, x0, #0x1e3
  42bc64:	mov	x1, #0xc                   	// #12
  42bc68:	bl	422220 <wcrtomb@plt+0x1d510>
  42bc6c:	str	x0, [sp, #40]
  42bc70:	ldr	x0, [sp, #24]
  42bc74:	ldr	x1, [x0, #24]
  42bc78:	ldr	x0, [sp, #24]
  42bc7c:	ldr	x0, [x0, #24]
  42bc80:	ldr	x1, [x1, #136]
  42bc84:	str	x1, [x0, #264]
  42bc88:	ldr	x0, [sp, #24]
  42bc8c:	ldr	x0, [x0, #24]
  42bc90:	ldr	x2, [sp, #40]
  42bc94:	ldr	x1, [sp, #40]
  42bc98:	mov	x3, #0x0                   	// #0
  42bc9c:	cmp	x2, #0x0
  42bca0:	csel	x1, x1, x3, ge  // ge = tcont
  42bca4:	str	x1, [x0, #136]
  42bca8:	ldr	x0, [sp, #40]
  42bcac:	mvn	x0, x0
  42bcb0:	lsr	x0, x0, #63
  42bcb4:	and	w0, w0, #0xff
  42bcb8:	ldp	x29, x30, [sp], #48
  42bcbc:	ret
  42bcc0:	stp	x29, x30, [sp, #-64]!
  42bcc4:	mov	x29, sp
  42bcc8:	str	x0, [sp, #24]
  42bccc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42bcd0:	add	x0, x0, #0x18
  42bcd4:	ldr	x0, [x0]
  42bcd8:	str	x0, [sp, #40]
  42bcdc:	ldr	x0, [sp, #24]
  42bce0:	ldr	x0, [x0, #24]
  42bce4:	str	xzr, [x0, #288]
  42bce8:	str	xzr, [sp, #56]
  42bcec:	b	42bd3c <wcrtomb@plt+0x2702c>
  42bcf0:	ldr	x1, [sp, #56]
  42bcf4:	mov	x0, x1
  42bcf8:	lsl	x0, x0, #1
  42bcfc:	add	x0, x0, x1
  42bd00:	lsl	x0, x0, #3
  42bd04:	add	x0, x0, #0x180
  42bd08:	ldr	x1, [sp, #40]
  42bd0c:	add	x0, x1, x0
  42bd10:	add	x0, x0, #0x2
  42bd14:	mov	x1, x0
  42bd18:	ldr	x0, [sp, #24]
  42bd1c:	bl	42bb60 <wcrtomb@plt+0x26e50>
  42bd20:	str	w0, [sp, #48]
  42bd24:	ldr	w0, [sp, #48]
  42bd28:	cmp	w0, #0x0
  42bd2c:	b.ne	42bd4c <wcrtomb@plt+0x2703c>  // b.any
  42bd30:	ldr	x0, [sp, #56]
  42bd34:	add	x0, x0, #0x1
  42bd38:	str	x0, [sp, #56]
  42bd3c:	ldr	x0, [sp, #56]
  42bd40:	cmp	x0, #0x3
  42bd44:	b.ls	42bcf0 <wcrtomb@plt+0x26fe0>  // b.plast
  42bd48:	b	42bd50 <wcrtomb@plt+0x27040>
  42bd4c:	nop
  42bd50:	ldr	x0, [sp, #40]
  42bd54:	ldrb	w0, [x0, #482]
  42bd58:	str	w0, [sp, #52]
  42bd5c:	b	42be38 <wcrtomb@plt+0x27128>
  42bd60:	bl	406030 <wcrtomb@plt+0x1320>
  42bd64:	str	x0, [sp, #40]
  42bd68:	ldr	x0, [sp, #40]
  42bd6c:	cmp	x0, #0x0
  42bd70:	b.ne	42bdcc <wcrtomb@plt+0x270bc>  // b.any
  42bd74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42bd78:	add	x0, x0, #0x420
  42bd7c:	ldr	x0, [x0]
  42bd80:	cmp	x0, #0x0
  42bd84:	b.eq	42bd98 <wcrtomb@plt+0x27088>  // b.none
  42bd88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42bd8c:	add	x0, x0, #0x420
  42bd90:	ldr	x0, [x0]
  42bd94:	blr	x0
  42bd98:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42bd9c:	add	x0, x0, #0xba8
  42bda0:	bl	404c60 <gettext@plt>
  42bda4:	mov	x2, x0
  42bda8:	mov	w1, #0x0                   	// #0
  42bdac:	mov	w0, #0x0                   	// #0
  42bdb0:	bl	404100 <error@plt>
  42bdb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42bdb8:	add	x0, x0, #0xdb0
  42bdbc:	mov	w1, #0x2                   	// #2
  42bdc0:	str	w1, [x0]
  42bdc4:	mov	w0, #0x0                   	// #0
  42bdc8:	b	42becc <wcrtomb@plt+0x271bc>
  42bdcc:	ldr	x0, [sp, #40]
  42bdd0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42bdd4:	str	xzr, [sp, #56]
  42bdd8:	b	42be14 <wcrtomb@plt+0x27104>
  42bddc:	ldr	x1, [sp, #56]
  42bde0:	mov	x0, x1
  42bde4:	lsl	x0, x0, #1
  42bde8:	add	x0, x0, x1
  42bdec:	lsl	x0, x0, #3
  42bdf0:	ldr	x1, [sp, #40]
  42bdf4:	add	x0, x1, x0
  42bdf8:	mov	x1, x0
  42bdfc:	ldr	x0, [sp, #24]
  42be00:	bl	42bb60 <wcrtomb@plt+0x26e50>
  42be04:	str	w0, [sp, #48]
  42be08:	ldr	x0, [sp, #56]
  42be0c:	add	x0, x0, #0x1
  42be10:	str	x0, [sp, #56]
  42be14:	ldr	x0, [sp, #56]
  42be18:	cmp	x0, #0x14
  42be1c:	b.hi	42be2c <wcrtomb@plt+0x2711c>  // b.pmore
  42be20:	ldr	w0, [sp, #48]
  42be24:	cmp	w0, #0x0
  42be28:	b.eq	42bddc <wcrtomb@plt+0x270cc>  // b.none
  42be2c:	ldr	x0, [sp, #40]
  42be30:	ldrb	w0, [x0, #504]
  42be34:	str	w0, [sp, #52]
  42be38:	ldr	w0, [sp, #48]
  42be3c:	cmp	w0, #0x0
  42be40:	b.ne	42be50 <wcrtomb@plt+0x27140>  // b.any
  42be44:	ldr	w0, [sp, #52]
  42be48:	cmp	w0, #0x0
  42be4c:	b.ne	42bd60 <wcrtomb@plt+0x27050>  // b.any
  42be50:	ldr	w0, [sp, #48]
  42be54:	cmp	w0, #0x2
  42be58:	b.ne	42bec8 <wcrtomb@plt+0x271b8>  // b.any
  42be5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42be60:	add	x0, x0, #0x420
  42be64:	ldr	x0, [x0]
  42be68:	cmp	x0, #0x0
  42be6c:	b.eq	42be80 <wcrtomb@plt+0x27170>  // b.none
  42be70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42be74:	add	x0, x0, #0x420
  42be78:	ldr	x0, [x0]
  42be7c:	blr	x0
  42be80:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42be84:	add	x0, x0, #0xc10
  42be88:	bl	404c60 <gettext@plt>
  42be8c:	mov	x1, x0
  42be90:	ldr	x0, [sp, #24]
  42be94:	ldr	x0, [x0, #24]
  42be98:	ldr	x0, [x0]
  42be9c:	mov	x3, x0
  42bea0:	mov	x2, x1
  42bea4:	mov	w1, #0x0                   	// #0
  42bea8:	mov	w0, #0x0                   	// #0
  42beac:	bl	404100 <error@plt>
  42beb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42beb4:	add	x0, x0, #0xdb0
  42beb8:	mov	w1, #0x2                   	// #2
  42bebc:	str	w1, [x0]
  42bec0:	mov	w0, #0x0                   	// #0
  42bec4:	b	42becc <wcrtomb@plt+0x271bc>
  42bec8:	mov	w0, #0x1                   	// #1
  42becc:	ldp	x29, x30, [sp], #64
  42bed0:	ret
  42bed4:	stp	x29, x30, [sp, #-48]!
  42bed8:	mov	x29, sp
  42bedc:	str	x0, [sp, #40]
  42bee0:	str	x1, [sp, #32]
  42bee4:	str	x2, [sp, #24]
  42bee8:	str	x3, [sp, #16]
  42beec:	b	42bf80 <wcrtomb@plt+0x27270>
  42bef0:	ldr	x0, [sp, #40]
  42bef4:	ldr	x0, [x0, #24]
  42bef8:	ldr	x1, [x0, #304]
  42befc:	ldr	x0, [sp, #32]
  42bf00:	ldr	x0, [x0]
  42bf04:	lsl	x0, x0, #4
  42bf08:	add	x0, x1, x0
  42bf0c:	ldr	x0, [x0]
  42bf10:	ldr	x1, [sp, #24]
  42bf14:	mov	x2, #0xc                   	// #12
  42bf18:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  42bf1c:	ldr	x0, [sp, #40]
  42bf20:	ldr	x0, [x0, #24]
  42bf24:	ldr	x1, [x0, #304]
  42bf28:	ldr	x0, [sp, #32]
  42bf2c:	ldr	x0, [x0]
  42bf30:	lsl	x0, x0, #4
  42bf34:	add	x0, x1, x0
  42bf38:	ldr	x3, [x0, #8]
  42bf3c:	ldr	x0, [sp, #24]
  42bf40:	add	x0, x0, #0xc
  42bf44:	mov	x2, #0xc                   	// #12
  42bf48:	mov	x1, x0
  42bf4c:	mov	x0, x3
  42bf50:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  42bf54:	ldr	x0, [sp, #16]
  42bf58:	sub	x0, x0, #0x1
  42bf5c:	str	x0, [sp, #16]
  42bf60:	ldr	x0, [sp, #24]
  42bf64:	add	x0, x0, #0x18
  42bf68:	str	x0, [sp, #24]
  42bf6c:	ldr	x0, [sp, #32]
  42bf70:	ldr	x0, [x0]
  42bf74:	add	x1, x0, #0x1
  42bf78:	ldr	x0, [sp, #32]
  42bf7c:	str	x1, [x0]
  42bf80:	ldr	x0, [sp, #32]
  42bf84:	ldr	x1, [x0]
  42bf88:	ldr	x0, [sp, #40]
  42bf8c:	ldr	x0, [x0, #24]
  42bf90:	ldr	x0, [x0, #288]
  42bf94:	cmp	x1, x0
  42bf98:	b.cs	42bfa8 <wcrtomb@plt+0x27298>  // b.hs, b.nlast
  42bf9c:	ldr	x0, [sp, #16]
  42bfa0:	cmp	x0, #0x0
  42bfa4:	b.ne	42bef0 <wcrtomb@plt+0x271e0>  // b.any
  42bfa8:	nop
  42bfac:	ldp	x29, x30, [sp], #48
  42bfb0:	ret
  42bfb4:	stp	x29, x30, [sp, #-64]!
  42bfb8:	mov	x29, sp
  42bfbc:	str	x0, [sp, #24]
  42bfc0:	bl	405f78 <wcrtomb@plt+0x1268>
  42bfc4:	str	x0, [sp, #56]
  42bfc8:	ldr	x0, [sp, #24]
  42bfcc:	ldr	x0, [x0, #24]
  42bfd0:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  42bfd4:	str	x0, [sp, #48]
  42bfd8:	ldr	x0, [sp, #48]
  42bfdc:	mov	w1, #0x53                  	// #83
  42bfe0:	strb	w1, [x0, #156]
  42bfe4:	ldr	x0, [sp, #24]
  42bfe8:	ldr	x0, [x0, #24]
  42bfec:	ldr	x0, [x0, #288]
  42bff0:	cmp	x0, #0x4
  42bff4:	b.ls	42c004 <wcrtomb@plt+0x272f4>  // b.plast
  42bff8:	ldr	x0, [sp, #48]
  42bffc:	mov	w1, #0x1                   	// #1
  42c000:	strb	w1, [x0, #482]
  42c004:	ldr	x0, [sp, #24]
  42c008:	ldr	x0, [x0, #24]
  42c00c:	ldr	x3, [x0, #136]
  42c010:	ldr	x0, [sp, #48]
  42c014:	add	x0, x0, #0x1e3
  42c018:	mov	x2, #0xc                   	// #12
  42c01c:	mov	x1, x0
  42c020:	mov	x0, x3
  42c024:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  42c028:	ldr	x0, [sp, #24]
  42c02c:	ldr	x0, [x0, #24]
  42c030:	ldr	x3, [x0, #264]
  42c034:	ldr	x0, [sp, #48]
  42c038:	add	x0, x0, #0x7c
  42c03c:	mov	x2, #0xc                   	// #12
  42c040:	mov	x1, x0
  42c044:	mov	x0, x3
  42c048:	bl	40dc2c <wcrtomb@plt+0x8f1c>
  42c04c:	str	xzr, [sp, #40]
  42c050:	ldr	x0, [sp, #48]
  42c054:	add	x1, x0, #0x182
  42c058:	add	x0, sp, #0x28
  42c05c:	mov	x3, #0x4                   	// #4
  42c060:	mov	x2, x1
  42c064:	mov	x1, x0
  42c068:	ldr	x0, [sp, #24]
  42c06c:	bl	42bed4 <wcrtomb@plt+0x271c4>
  42c070:	ldr	x0, [sp, #24]
  42c074:	ldr	x0, [x0, #24]
  42c078:	ldr	x1, [x0, #288]
  42c07c:	ldr	x0, [sp, #40]
  42c080:	cmp	x1, x0
  42c084:	cset	w0, hi  // hi = pmore
  42c088:	and	w0, w0, #0xff
  42c08c:	mov	w1, w0
  42c090:	ldr	x0, [sp, #48]
  42c094:	strb	w1, [x0, #482]
  42c098:	ldr	x0, [sp, #24]
  42c09c:	ldr	x0, [x0, #24]
  42c0a0:	ldr	x2, [sp, #56]
  42c0a4:	ldr	x1, [sp, #48]
  42c0a8:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  42c0ac:	b	42c110 <wcrtomb@plt+0x27400>
  42c0b0:	bl	406030 <wcrtomb@plt+0x1320>
  42c0b4:	str	x0, [sp, #48]
  42c0b8:	ldr	x0, [sp, #48]
  42c0bc:	mov	x2, #0x200                 	// #512
  42c0c0:	mov	w1, #0x0                   	// #0
  42c0c4:	bl	4044d0 <memset@plt>
  42c0c8:	ldr	x1, [sp, #48]
  42c0cc:	add	x0, sp, #0x28
  42c0d0:	mov	x3, #0x15                  	// #21
  42c0d4:	mov	x2, x1
  42c0d8:	mov	x1, x0
  42c0dc:	ldr	x0, [sp, #24]
  42c0e0:	bl	42bed4 <wcrtomb@plt+0x271c4>
  42c0e4:	ldr	x0, [sp, #24]
  42c0e8:	ldr	x0, [x0, #24]
  42c0ec:	ldr	x1, [x0, #288]
  42c0f0:	ldr	x0, [sp, #40]
  42c0f4:	cmp	x1, x0
  42c0f8:	b.ls	42c108 <wcrtomb@plt+0x273f8>  // b.plast
  42c0fc:	ldr	x0, [sp, #48]
  42c100:	mov	w1, #0x1                   	// #1
  42c104:	strb	w1, [x0, #504]
  42c108:	ldr	x0, [sp, #48]
  42c10c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42c110:	ldr	x0, [sp, #24]
  42c114:	ldr	x0, [x0, #24]
  42c118:	ldr	x1, [x0, #288]
  42c11c:	ldr	x0, [sp, #40]
  42c120:	cmp	x1, x0
  42c124:	b.hi	42c0b0 <wcrtomb@plt+0x273a0>  // b.pmore
  42c128:	mov	w0, #0x1                   	// #1
  42c12c:	ldp	x29, x30, [sp], #64
  42c130:	ret
  42c134:	sub	sp, sp, #0x10
  42c138:	str	x0, [sp, #8]
  42c13c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c140:	add	x0, x0, #0x18
  42c144:	ldr	x0, [x0]
  42c148:	ldrb	w0, [x0, #156]
  42c14c:	cmp	w0, #0x53
  42c150:	cset	w0, eq  // eq = none
  42c154:	and	w0, w0, #0xff
  42c158:	add	sp, sp, #0x10
  42c15c:	ret
  42c160:	stp	x29, x30, [sp, #-48]!
  42c164:	mov	x29, sp
  42c168:	str	x0, [sp, #24]
  42c16c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c170:	add	x0, x0, #0x18
  42c174:	ldr	x0, [x0]
  42c178:	add	x0, x0, #0x1c4
  42c17c:	mov	x1, #0xc                   	// #12
  42c180:	bl	422220 <wcrtomb@plt+0x1d510>
  42c184:	str	x0, [sp, #40]
  42c188:	ldr	x0, [sp, #24]
  42c18c:	ldr	x1, [x0, #24]
  42c190:	ldr	x0, [sp, #24]
  42c194:	ldr	x0, [x0, #24]
  42c198:	ldr	x1, [x1, #136]
  42c19c:	str	x1, [x0, #264]
  42c1a0:	ldr	x0, [sp, #24]
  42c1a4:	ldr	x0, [x0, #24]
  42c1a8:	ldr	x2, [sp, #40]
  42c1ac:	ldr	x1, [sp, #40]
  42c1b0:	mov	x3, #0x0                   	// #0
  42c1b4:	cmp	x2, #0x0
  42c1b8:	csel	x1, x1, x3, ge  // ge = tcont
  42c1bc:	str	x1, [x0, #136]
  42c1c0:	ldr	x0, [sp, #40]
  42c1c4:	mvn	x0, x0
  42c1c8:	lsr	x0, x0, #63
  42c1cc:	and	w0, w0, #0xff
  42c1d0:	ldp	x29, x30, [sp], #48
  42c1d4:	ret
  42c1d8:	stp	x29, x30, [sp, #-64]!
  42c1dc:	mov	x29, sp
  42c1e0:	str	x0, [sp, #24]
  42c1e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c1e8:	add	x0, x0, #0x18
  42c1ec:	ldr	x0, [x0]
  42c1f0:	str	x0, [sp, #40]
  42c1f4:	str	wzr, [sp, #48]
  42c1f8:	ldr	x0, [sp, #24]
  42c1fc:	ldr	x0, [x0, #24]
  42c200:	str	xzr, [x0, #288]
  42c204:	ldr	x0, [sp, #40]
  42c208:	ldrb	w0, [x0, #345]
  42c20c:	cmp	w0, #0x0
  42c210:	b.ne	42c29c <wcrtomb@plt+0x2758c>  // b.any
  42c214:	ldr	x0, [sp, #40]
  42c218:	ldrb	w0, [x0, #366]
  42c21c:	cmp	w0, #0x0
  42c220:	b.eq	42c29c <wcrtomb@plt+0x2758c>  // b.none
  42c224:	str	xzr, [sp, #56]
  42c228:	b	42c278 <wcrtomb@plt+0x27568>
  42c22c:	ldr	x1, [sp, #56]
  42c230:	mov	x0, x1
  42c234:	lsl	x0, x0, #1
  42c238:	add	x0, x0, x1
  42c23c:	lsl	x0, x0, #3
  42c240:	add	x0, x0, #0x160
  42c244:	ldr	x1, [sp, #40]
  42c248:	add	x0, x1, x0
  42c24c:	add	x0, x0, #0x4
  42c250:	mov	x1, x0
  42c254:	ldr	x0, [sp, #24]
  42c258:	bl	42bb60 <wcrtomb@plt+0x26e50>
  42c25c:	str	w0, [sp, #48]
  42c260:	ldr	w0, [sp, #48]
  42c264:	cmp	w0, #0x0
  42c268:	b.ne	42c288 <wcrtomb@plt+0x27578>  // b.any
  42c26c:	ldr	x0, [sp, #56]
  42c270:	add	x0, x0, #0x1
  42c274:	str	x0, [sp, #56]
  42c278:	ldr	x0, [sp, #56]
  42c27c:	cmp	x0, #0x3
  42c280:	b.ls	42c22c <wcrtomb@plt+0x2751c>  // b.plast
  42c284:	b	42c28c <wcrtomb@plt+0x2757c>
  42c288:	nop
  42c28c:	ldr	x0, [sp, #40]
  42c290:	ldrb	w0, [x0, #355]
  42c294:	str	w0, [sp, #52]
  42c298:	b	42c2a4 <wcrtomb@plt+0x27594>
  42c29c:	mov	w0, #0x1                   	// #1
  42c2a0:	str	w0, [sp, #52]
  42c2a4:	b	42c394 <wcrtomb@plt+0x27684>
  42c2a8:	bl	406030 <wcrtomb@plt+0x1320>
  42c2ac:	str	x0, [sp, #40]
  42c2b0:	ldr	x0, [sp, #40]
  42c2b4:	cmp	x0, #0x0
  42c2b8:	b.ne	42c314 <wcrtomb@plt+0x27604>  // b.any
  42c2bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c2c0:	add	x0, x0, #0x420
  42c2c4:	ldr	x0, [x0]
  42c2c8:	cmp	x0, #0x0
  42c2cc:	b.eq	42c2e0 <wcrtomb@plt+0x275d0>  // b.none
  42c2d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c2d4:	add	x0, x0, #0x420
  42c2d8:	ldr	x0, [x0]
  42c2dc:	blr	x0
  42c2e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c2e4:	add	x0, x0, #0xba8
  42c2e8:	bl	404c60 <gettext@plt>
  42c2ec:	mov	x2, x0
  42c2f0:	mov	w1, #0x0                   	// #0
  42c2f4:	mov	w0, #0x0                   	// #0
  42c2f8:	bl	404100 <error@plt>
  42c2fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42c300:	add	x0, x0, #0xdb0
  42c304:	mov	w1, #0x2                   	// #2
  42c308:	str	w1, [x0]
  42c30c:	mov	w0, #0x0                   	// #0
  42c310:	b	42c428 <wcrtomb@plt+0x27718>
  42c314:	ldr	x0, [sp, #40]
  42c318:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42c31c:	str	xzr, [sp, #56]
  42c320:	b	42c35c <wcrtomb@plt+0x2764c>
  42c324:	ldr	x1, [sp, #56]
  42c328:	mov	x0, x1
  42c32c:	lsl	x0, x0, #1
  42c330:	add	x0, x0, x1
  42c334:	lsl	x0, x0, #3
  42c338:	ldr	x1, [sp, #40]
  42c33c:	add	x0, x1, x0
  42c340:	mov	x1, x0
  42c344:	ldr	x0, [sp, #24]
  42c348:	bl	42bb60 <wcrtomb@plt+0x26e50>
  42c34c:	str	w0, [sp, #48]
  42c350:	ldr	x0, [sp, #56]
  42c354:	add	x0, x0, #0x1
  42c358:	str	x0, [sp, #56]
  42c35c:	ldr	x0, [sp, #56]
  42c360:	cmp	x0, #0x14
  42c364:	b.hi	42c374 <wcrtomb@plt+0x27664>  // b.pmore
  42c368:	ldr	w0, [sp, #48]
  42c36c:	cmp	w0, #0x0
  42c370:	b.eq	42c324 <wcrtomb@plt+0x27614>  // b.none
  42c374:	ldr	x0, [sp, #24]
  42c378:	ldr	x0, [x0, #16]
  42c37c:	add	x1, x0, #0x200
  42c380:	ldr	x0, [sp, #24]
  42c384:	str	x1, [x0, #16]
  42c388:	ldr	x0, [sp, #40]
  42c38c:	ldrb	w0, [x0, #504]
  42c390:	str	w0, [sp, #52]
  42c394:	ldr	w0, [sp, #48]
  42c398:	cmp	w0, #0x0
  42c39c:	b.ne	42c3ac <wcrtomb@plt+0x2769c>  // b.any
  42c3a0:	ldr	w0, [sp, #52]
  42c3a4:	cmp	w0, #0x0
  42c3a8:	b.ne	42c2a8 <wcrtomb@plt+0x27598>  // b.any
  42c3ac:	ldr	w0, [sp, #48]
  42c3b0:	cmp	w0, #0x2
  42c3b4:	b.ne	42c424 <wcrtomb@plt+0x27714>  // b.any
  42c3b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c3bc:	add	x0, x0, #0x420
  42c3c0:	ldr	x0, [x0]
  42c3c4:	cmp	x0, #0x0
  42c3c8:	b.eq	42c3dc <wcrtomb@plt+0x276cc>  // b.none
  42c3cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c3d0:	add	x0, x0, #0x420
  42c3d4:	ldr	x0, [x0]
  42c3d8:	blr	x0
  42c3dc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c3e0:	add	x0, x0, #0xc10
  42c3e4:	bl	404c60 <gettext@plt>
  42c3e8:	mov	x1, x0
  42c3ec:	ldr	x0, [sp, #24]
  42c3f0:	ldr	x0, [x0, #24]
  42c3f4:	ldr	x0, [x0]
  42c3f8:	mov	x3, x0
  42c3fc:	mov	x2, x1
  42c400:	mov	w1, #0x0                   	// #0
  42c404:	mov	w0, #0x0                   	// #0
  42c408:	bl	404100 <error@plt>
  42c40c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42c410:	add	x0, x0, #0xdb0
  42c414:	mov	w1, #0x2                   	// #2
  42c418:	str	w1, [x0]
  42c41c:	mov	w0, #0x0                   	// #0
  42c420:	b	42c428 <wcrtomb@plt+0x27718>
  42c424:	mov	w0, #0x1                   	// #1
  42c428:	ldp	x29, x30, [sp], #64
  42c42c:	ret
  42c430:	sub	sp, sp, #0x10
  42c434:	str	x0, [sp, #8]
  42c438:	ldr	x0, [sp, #8]
  42c43c:	ldr	x0, [x0, #24]
  42c440:	ldr	x0, [x0, #288]
  42c444:	cmp	x0, #0x0
  42c448:	b.ne	42c460 <wcrtomb@plt+0x27750>  // b.any
  42c44c:	ldr	x0, [sp, #8]
  42c450:	ldr	x0, [x0, #24]
  42c454:	ldr	w0, [x0, #276]
  42c458:	cmp	w0, #0x0
  42c45c:	b.eq	42c468 <wcrtomb@plt+0x27758>  // b.none
  42c460:	mov	w0, #0x1                   	// #1
  42c464:	b	42c46c <wcrtomb@plt+0x2775c>
  42c468:	mov	w0, #0x0                   	// #0
  42c46c:	and	w0, w0, #0x1
  42c470:	and	w0, w0, #0xff
  42c474:	add	sp, sp, #0x10
  42c478:	ret
  42c47c:	stp	x29, x30, [sp, #-48]!
  42c480:	mov	x29, sp
  42c484:	str	x0, [sp, #24]
  42c488:	ldr	x0, [sp, #24]
  42c48c:	ldr	x0, [x0, #136]
  42c490:	str	x0, [sp, #40]
  42c494:	ldr	x0, [sp, #24]
  42c498:	ldr	x1, [x0, #264]
  42c49c:	ldr	x0, [sp, #24]
  42c4a0:	str	x1, [x0, #136]
  42c4a4:	ldr	x0, [sp, #24]
  42c4a8:	bl	40e9f4 <wcrtomb@plt+0x9ce4>
  42c4ac:	str	x0, [sp, #32]
  42c4b0:	ldr	x0, [sp, #24]
  42c4b4:	ldr	x1, [sp, #40]
  42c4b8:	str	x1, [x0, #136]
  42c4bc:	ldr	x0, [sp, #32]
  42c4c0:	ldp	x29, x30, [sp], #48
  42c4c4:	ret
  42c4c8:	stp	x29, x30, [sp, #-112]!
  42c4cc:	mov	x29, sp
  42c4d0:	str	x19, [sp, #16]
  42c4d4:	str	x0, [sp, #40]
  42c4d8:	bl	405f78 <wcrtomb@plt+0x1268>
  42c4dc:	str	x0, [sp, #96]
  42c4e0:	ldr	x0, [sp, #40]
  42c4e4:	ldr	x0, [x0, #24]
  42c4e8:	ldr	x0, [x0, #304]
  42c4ec:	str	x0, [sp, #88]
  42c4f0:	str	xzr, [sp, #104]
  42c4f4:	ldr	x0, [sp, #40]
  42c4f8:	ldr	x0, [x0, #24]
  42c4fc:	mov	x2, #0x0                   	// #0
  42c500:	mov	x1, x0
  42c504:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c508:	add	x0, x0, #0xc38
  42c50c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c510:	ldr	x0, [sp, #40]
  42c514:	ldr	x0, [x0, #24]
  42c518:	mov	x2, #0x0                   	// #0
  42c51c:	mov	x1, x0
  42c520:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c524:	add	x0, x0, #0xc48
  42c528:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c52c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c530:	add	x0, x0, #0xc60
  42c534:	bl	4174b8 <wcrtomb@plt+0x127a8>
  42c538:	and	w0, w0, #0xff
  42c53c:	cmp	w0, #0x0
  42c540:	b.ne	42c558 <wcrtomb@plt+0x27848>  // b.any
  42c544:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42c548:	add	x0, x0, #0x88
  42c54c:	ldr	w0, [x0]
  42c550:	cmp	w0, #0x0
  42c554:	b.ne	42c5c8 <wcrtomb@plt+0x278b8>  // b.any
  42c558:	str	xzr, [sp, #72]
  42c55c:	b	42c5ac <wcrtomb@plt+0x2789c>
  42c560:	ldr	x0, [sp, #40]
  42c564:	ldr	x0, [x0, #24]
  42c568:	add	x1, sp, #0x48
  42c56c:	mov	x2, x1
  42c570:	mov	x1, x0
  42c574:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c578:	add	x0, x0, #0xc70
  42c57c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c580:	ldr	x0, [sp, #40]
  42c584:	ldr	x0, [x0, #24]
  42c588:	add	x1, sp, #0x48
  42c58c:	mov	x2, x1
  42c590:	mov	x1, x0
  42c594:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c598:	add	x0, x0, #0xc88
  42c59c:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c5a0:	ldr	x0, [sp, #72]
  42c5a4:	add	x0, x0, #0x1
  42c5a8:	str	x0, [sp, #72]
  42c5ac:	ldr	x0, [sp, #40]
  42c5b0:	ldr	x0, [x0, #24]
  42c5b4:	ldr	x1, [x0, #288]
  42c5b8:	ldr	x0, [sp, #72]
  42c5bc:	cmp	x1, x0
  42c5c0:	b.hi	42c560 <wcrtomb@plt+0x27850>  // b.pmore
  42c5c4:	b	42c774 <wcrtomb@plt+0x27a64>
  42c5c8:	ldr	x0, [sp, #40]
  42c5cc:	ldr	x0, [x0, #24]
  42c5d0:	mov	x2, #0x0                   	// #0
  42c5d4:	mov	x1, x0
  42c5d8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c5dc:	add	x0, x0, #0xca0
  42c5e0:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c5e4:	ldr	x0, [sp, #40]
  42c5e8:	ldr	x0, [x0, #24]
  42c5ec:	ldr	x0, [x0, #8]
  42c5f0:	str	x0, [sp, #104]
  42c5f4:	ldr	x0, [sp, #40]
  42c5f8:	ldr	x3, [x0, #24]
  42c5fc:	ldr	x0, [sp, #40]
  42c600:	ldr	x19, [x0, #24]
  42c604:	mov	x2, #0x0                   	// #0
  42c608:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c60c:	add	x1, x0, #0xcb0
  42c610:	mov	x0, x3
  42c614:	bl	417b94 <wcrtomb@plt+0x12e84>
  42c618:	str	x0, [x19, #8]
  42c61c:	ldr	x0, [sp, #40]
  42c620:	ldr	x0, [x0, #24]
  42c624:	add	x0, x0, #0x158
  42c628:	bl	4198c4 <wcrtomb@plt+0x14bb4>
  42c62c:	str	xzr, [sp, #72]
  42c630:	b	42c704 <wcrtomb@plt+0x279f4>
  42c634:	ldr	x0, [sp, #72]
  42c638:	cmp	x0, #0x0
  42c63c:	b.eq	42c65c <wcrtomb@plt+0x2794c>  // b.none
  42c640:	ldr	x0, [sp, #40]
  42c644:	ldr	x0, [x0, #24]
  42c648:	add	x2, x0, #0x158
  42c64c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c650:	add	x1, x0, #0xcc8
  42c654:	mov	x0, x2
  42c658:	bl	4198e0 <wcrtomb@plt+0x14bd0>
  42c65c:	ldr	x0, [sp, #40]
  42c660:	ldr	x0, [x0, #24]
  42c664:	add	x19, x0, #0x158
  42c668:	ldr	x0, [sp, #72]
  42c66c:	lsl	x0, x0, #4
  42c670:	ldr	x1, [sp, #88]
  42c674:	add	x0, x1, x0
  42c678:	ldr	x0, [x0]
  42c67c:	mov	x2, x0
  42c680:	add	x0, sp, #0x30
  42c684:	mov	x1, x0
  42c688:	mov	x0, x2
  42c68c:	bl	450988 <argp_usage@@Base+0x789c>
  42c690:	mov	x1, x0
  42c694:	mov	x0, x19
  42c698:	bl	4198e0 <wcrtomb@plt+0x14bd0>
  42c69c:	ldr	x0, [sp, #40]
  42c6a0:	ldr	x0, [x0, #24]
  42c6a4:	add	x2, x0, #0x158
  42c6a8:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c6ac:	add	x1, x0, #0xcc8
  42c6b0:	mov	x0, x2
  42c6b4:	bl	4198e0 <wcrtomb@plt+0x14bd0>
  42c6b8:	ldr	x0, [sp, #40]
  42c6bc:	ldr	x0, [x0, #24]
  42c6c0:	add	x19, x0, #0x158
  42c6c4:	ldr	x0, [sp, #72]
  42c6c8:	lsl	x0, x0, #4
  42c6cc:	ldr	x1, [sp, #88]
  42c6d0:	add	x0, x1, x0
  42c6d4:	ldr	x0, [x0, #8]
  42c6d8:	mov	x2, x0
  42c6dc:	add	x0, sp, #0x30
  42c6e0:	mov	x1, x0
  42c6e4:	mov	x0, x2
  42c6e8:	bl	450988 <argp_usage@@Base+0x789c>
  42c6ec:	mov	x1, x0
  42c6f0:	mov	x0, x19
  42c6f4:	bl	4198e0 <wcrtomb@plt+0x14bd0>
  42c6f8:	ldr	x0, [sp, #72]
  42c6fc:	add	x0, x0, #0x1
  42c700:	str	x0, [sp, #72]
  42c704:	ldr	x0, [sp, #40]
  42c708:	ldr	x0, [x0, #24]
  42c70c:	ldr	x1, [x0, #288]
  42c710:	ldr	x0, [sp, #72]
  42c714:	cmp	x1, x0
  42c718:	b.hi	42c634 <wcrtomb@plt+0x27924>  // b.pmore
  42c71c:	ldr	x0, [sp, #40]
  42c720:	ldr	x0, [x0, #24]
  42c724:	add	x2, x0, #0x158
  42c728:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c72c:	add	x1, x0, #0xc60
  42c730:	mov	x0, x2
  42c734:	bl	419954 <wcrtomb@plt+0x14c44>
  42c738:	and	w0, w0, #0xff
  42c73c:	eor	w0, w0, #0x1
  42c740:	and	w0, w0, #0xff
  42c744:	cmp	w0, #0x0
  42c748:	b.eq	42c774 <wcrtomb@plt+0x27a64>  // b.none
  42c74c:	ldr	x0, [sp, #40]
  42c750:	ldr	x0, [x0, #24]
  42c754:	ldr	x0, [x0, #8]
  42c758:	bl	404880 <free@plt>
  42c75c:	ldr	x0, [sp, #40]
  42c760:	ldr	x0, [x0, #24]
  42c764:	ldr	x1, [sp, #104]
  42c768:	str	x1, [x0, #8]
  42c76c:	mov	w0, #0x0                   	// #0
  42c770:	b	42c7c8 <wcrtomb@plt+0x27ab8>
  42c774:	ldr	x0, [sp, #40]
  42c778:	ldr	x0, [x0, #24]
  42c77c:	bl	42c47c <wcrtomb@plt+0x2776c>
  42c780:	str	x0, [sp, #80]
  42c784:	ldr	x0, [sp, #40]
  42c788:	ldr	x0, [x0, #24]
  42c78c:	ldr	x2, [sp, #96]
  42c790:	ldr	x1, [sp, #80]
  42c794:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  42c798:	ldr	x0, [sp, #104]
  42c79c:	cmp	x0, #0x0
  42c7a0:	b.eq	42c7c4 <wcrtomb@plt+0x27ab4>  // b.none
  42c7a4:	ldr	x0, [sp, #40]
  42c7a8:	ldr	x0, [x0, #24]
  42c7ac:	ldr	x0, [x0, #8]
  42c7b0:	bl	404880 <free@plt>
  42c7b4:	ldr	x0, [sp, #40]
  42c7b8:	ldr	x0, [x0, #24]
  42c7bc:	ldr	x1, [sp, #104]
  42c7c0:	str	x1, [x0, #8]
  42c7c4:	mov	w0, #0x1                   	// #1
  42c7c8:	ldr	x19, [sp, #16]
  42c7cc:	ldp	x29, x30, [sp], #112
  42c7d0:	ret
  42c7d4:	stp	x29, x30, [sp, #-240]!
  42c7d8:	mov	x29, sp
  42c7dc:	str	x19, [sp, #16]
  42c7e0:	str	x0, [sp, #40]
  42c7e4:	bl	405f78 <wcrtomb@plt+0x1268>
  42c7e8:	str	x0, [sp, #104]
  42c7ec:	str	xzr, [sp, #208]
  42c7f0:	ldr	x0, [sp, #40]
  42c7f4:	ldr	x0, [x0, #24]
  42c7f8:	ldr	x0, [x0, #304]
  42c7fc:	str	x0, [sp, #96]
  42c800:	ldr	x0, [sp, #40]
  42c804:	ldr	x0, [x0, #24]
  42c808:	ldr	x0, [x0, #8]
  42c80c:	str	x0, [sp, #88]
  42c810:	ldr	x0, [sp, #40]
  42c814:	ldr	x0, [x0, #24]
  42c818:	ldr	x0, [x0, #288]
  42c81c:	add	x1, sp, #0x38
  42c820:	bl	450988 <argp_usage@@Base+0x789c>
  42c824:	str	x0, [sp, #80]
  42c828:	ldr	x0, [sp, #80]
  42c82c:	bl	4040b0 <strlen@plt>
  42c830:	mov	x1, x0
  42c834:	ldr	x0, [sp, #208]
  42c838:	add	x0, x1, x0
  42c83c:	add	x0, x0, #0x1
  42c840:	str	x0, [sp, #208]
  42c844:	str	xzr, [sp, #216]
  42c848:	b	42c8e8 <wcrtomb@plt+0x27bd8>
  42c84c:	ldr	x0, [sp, #216]
  42c850:	lsl	x0, x0, #4
  42c854:	ldr	x1, [sp, #96]
  42c858:	add	x0, x1, x0
  42c85c:	ldr	x0, [x0]
  42c860:	mov	x2, x0
  42c864:	add	x0, sp, #0x38
  42c868:	mov	x1, x0
  42c86c:	mov	x0, x2
  42c870:	bl	450988 <argp_usage@@Base+0x789c>
  42c874:	str	x0, [sp, #80]
  42c878:	ldr	x0, [sp, #80]
  42c87c:	bl	4040b0 <strlen@plt>
  42c880:	mov	x1, x0
  42c884:	ldr	x0, [sp, #208]
  42c888:	add	x0, x1, x0
  42c88c:	add	x0, x0, #0x1
  42c890:	str	x0, [sp, #208]
  42c894:	ldr	x0, [sp, #216]
  42c898:	lsl	x0, x0, #4
  42c89c:	ldr	x1, [sp, #96]
  42c8a0:	add	x0, x1, x0
  42c8a4:	ldr	x0, [x0, #8]
  42c8a8:	mov	x2, x0
  42c8ac:	add	x0, sp, #0x38
  42c8b0:	mov	x1, x0
  42c8b4:	mov	x0, x2
  42c8b8:	bl	450988 <argp_usage@@Base+0x789c>
  42c8bc:	str	x0, [sp, #80]
  42c8c0:	ldr	x0, [sp, #80]
  42c8c4:	bl	4040b0 <strlen@plt>
  42c8c8:	mov	x1, x0
  42c8cc:	ldr	x0, [sp, #208]
  42c8d0:	add	x0, x1, x0
  42c8d4:	add	x0, x0, #0x1
  42c8d8:	str	x0, [sp, #208]
  42c8dc:	ldr	x0, [sp, #216]
  42c8e0:	add	x0, x0, #0x1
  42c8e4:	str	x0, [sp, #216]
  42c8e8:	ldr	x0, [sp, #40]
  42c8ec:	ldr	x0, [x0, #24]
  42c8f0:	ldr	x0, [x0, #288]
  42c8f4:	ldr	x1, [sp, #216]
  42c8f8:	cmp	x1, x0
  42c8fc:	b.cc	42c84c <wcrtomb@plt+0x27b3c>  // b.lo, b.ul, b.last
  42c900:	ldr	x0, [sp, #208]
  42c904:	add	x0, x0, #0x1ff
  42c908:	add	x1, x0, #0x1ff
  42c90c:	cmp	x0, #0x0
  42c910:	csel	x0, x1, x0, lt  // lt = tstop
  42c914:	asr	x0, x0, #9
  42c918:	str	x0, [sp, #208]
  42c91c:	ldr	x0, [sp, #40]
  42c920:	ldr	x0, [x0, #24]
  42c924:	ldr	x2, [x0, #264]
  42c928:	ldr	x0, [sp, #208]
  42c92c:	lsl	x1, x0, #9
  42c930:	ldr	x0, [sp, #40]
  42c934:	ldr	x0, [x0, #24]
  42c938:	add	x1, x2, x1
  42c93c:	str	x1, [x0, #264]
  42c940:	ldr	x0, [sp, #40]
  42c944:	ldr	x1, [x0, #16]
  42c948:	ldr	x0, [sp, #208]
  42c94c:	lsl	x0, x0, #9
  42c950:	add	x1, x1, x0
  42c954:	ldr	x0, [sp, #40]
  42c958:	str	x1, [x0, #16]
  42c95c:	ldr	x0, [sp, #40]
  42c960:	ldr	x0, [x0, #24]
  42c964:	mov	x2, #0x0                   	// #0
  42c968:	mov	x1, x0
  42c96c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c970:	add	x0, x0, #0xcd0
  42c974:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c978:	ldr	x0, [sp, #40]
  42c97c:	ldr	x0, [x0, #24]
  42c980:	mov	x2, #0x0                   	// #0
  42c984:	mov	x1, x0
  42c988:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c98c:	add	x0, x0, #0xce8
  42c990:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c994:	ldr	x0, [sp, #40]
  42c998:	ldr	x0, [x0, #24]
  42c99c:	mov	x2, #0x0                   	// #0
  42c9a0:	mov	x1, x0
  42c9a4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c9a8:	add	x0, x0, #0xca0
  42c9ac:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c9b0:	ldr	x0, [sp, #40]
  42c9b4:	ldr	x0, [x0, #24]
  42c9b8:	mov	x2, #0x0                   	// #0
  42c9bc:	mov	x1, x0
  42c9c0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c9c4:	add	x0, x0, #0xd00
  42c9c8:	bl	4191e4 <wcrtomb@plt+0x144d4>
  42c9cc:	ldr	x0, [sp, #40]
  42c9d0:	ldr	x3, [x0, #24]
  42c9d4:	ldr	x0, [sp, #40]
  42c9d8:	ldr	x19, [x0, #24]
  42c9dc:	mov	x2, #0x0                   	// #0
  42c9e0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42c9e4:	add	x1, x0, #0xcb0
  42c9e8:	mov	x0, x3
  42c9ec:	bl	417b94 <wcrtomb@plt+0x12e84>
  42c9f0:	str	x0, [x19, #8]
  42c9f4:	ldr	x0, [sp, #40]
  42c9f8:	ldr	x0, [x0, #24]
  42c9fc:	ldr	x0, [x0, #8]
  42ca00:	bl	4040b0 <strlen@plt>
  42ca04:	cmp	x0, #0x64
  42ca08:	b.ls	42ca20 <wcrtomb@plt+0x27d10>  // b.plast
  42ca0c:	ldr	x0, [sp, #40]
  42ca10:	ldr	x0, [x0, #24]
  42ca14:	ldr	x0, [x0, #8]
  42ca18:	add	x0, x0, #0x64
  42ca1c:	strb	wzr, [x0]
  42ca20:	ldr	x0, [sp, #40]
  42ca24:	ldr	x0, [x0, #24]
  42ca28:	bl	42c47c <wcrtomb@plt+0x2776c>
  42ca2c:	str	x0, [sp, #232]
  42ca30:	ldr	x0, [sp, #40]
  42ca34:	ldr	x0, [x0, #24]
  42ca38:	ldr	x2, [sp, #104]
  42ca3c:	ldr	x1, [sp, #232]
  42ca40:	bl	40f4b8 <wcrtomb@plt+0xa7a8>
  42ca44:	ldr	x0, [sp, #40]
  42ca48:	ldr	x0, [x0, #24]
  42ca4c:	ldr	x0, [x0, #8]
  42ca50:	bl	404880 <free@plt>
  42ca54:	ldr	x0, [sp, #40]
  42ca58:	ldr	x0, [x0, #24]
  42ca5c:	ldr	x1, [sp, #88]
  42ca60:	str	x1, [x0, #8]
  42ca64:	bl	406030 <wcrtomb@plt+0x1320>
  42ca68:	str	x0, [sp, #232]
  42ca6c:	ldr	x0, [sp, #232]
  42ca70:	str	x0, [sp, #224]
  42ca74:	ldr	x0, [sp, #40]
  42ca78:	ldr	x0, [x0, #24]
  42ca7c:	ldr	x0, [x0, #288]
  42ca80:	add	x1, sp, #0x38
  42ca84:	bl	450988 <argp_usage@@Base+0x789c>
  42ca88:	str	x0, [sp, #80]
  42ca8c:	ldr	x0, [sp, #232]
  42ca90:	add	x0, x0, #0x200
  42ca94:	str	x0, [sp, #200]
  42ca98:	ldr	x0, [sp, #80]
  42ca9c:	str	x0, [sp, #192]
  42caa0:	b	42caf8 <wcrtomb@plt+0x27de8>
  42caa4:	ldr	x1, [sp, #224]
  42caa8:	ldr	x0, [sp, #200]
  42caac:	cmp	x1, x0
  42cab0:	b.ne	42cad8 <wcrtomb@plt+0x27dc8>  // b.any
  42cab4:	ldr	x0, [sp, #232]
  42cab8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cabc:	bl	406030 <wcrtomb@plt+0x1320>
  42cac0:	str	x0, [sp, #232]
  42cac4:	ldr	x0, [sp, #232]
  42cac8:	str	x0, [sp, #224]
  42cacc:	ldr	x0, [sp, #232]
  42cad0:	add	x0, x0, #0x200
  42cad4:	str	x0, [sp, #200]
  42cad8:	ldr	x1, [sp, #192]
  42cadc:	add	x0, x1, #0x1
  42cae0:	str	x0, [sp, #192]
  42cae4:	ldr	x0, [sp, #224]
  42cae8:	add	x2, x0, #0x1
  42caec:	str	x2, [sp, #224]
  42caf0:	ldrb	w1, [x1]
  42caf4:	strb	w1, [x0]
  42caf8:	ldr	x0, [sp, #192]
  42cafc:	ldrb	w0, [x0]
  42cb00:	cmp	w0, #0x0
  42cb04:	b.ne	42caa4 <wcrtomb@plt+0x27d94>  // b.any
  42cb08:	ldr	x0, [sp, #232]
  42cb0c:	add	x0, x0, #0x200
  42cb10:	str	x0, [sp, #184]
  42cb14:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42cb18:	add	x0, x0, #0xd18
  42cb1c:	str	x0, [sp, #176]
  42cb20:	b	42cb78 <wcrtomb@plt+0x27e68>
  42cb24:	ldr	x1, [sp, #224]
  42cb28:	ldr	x0, [sp, #184]
  42cb2c:	cmp	x1, x0
  42cb30:	b.ne	42cb58 <wcrtomb@plt+0x27e48>  // b.any
  42cb34:	ldr	x0, [sp, #232]
  42cb38:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cb3c:	bl	406030 <wcrtomb@plt+0x1320>
  42cb40:	str	x0, [sp, #232]
  42cb44:	ldr	x0, [sp, #232]
  42cb48:	str	x0, [sp, #224]
  42cb4c:	ldr	x0, [sp, #232]
  42cb50:	add	x0, x0, #0x200
  42cb54:	str	x0, [sp, #184]
  42cb58:	ldr	x1, [sp, #176]
  42cb5c:	add	x0, x1, #0x1
  42cb60:	str	x0, [sp, #176]
  42cb64:	ldr	x0, [sp, #224]
  42cb68:	add	x2, x0, #0x1
  42cb6c:	str	x2, [sp, #224]
  42cb70:	ldrb	w1, [x1]
  42cb74:	strb	w1, [x0]
  42cb78:	ldr	x0, [sp, #176]
  42cb7c:	ldrb	w0, [x0]
  42cb80:	cmp	w0, #0x0
  42cb84:	b.ne	42cb24 <wcrtomb@plt+0x27e14>  // b.any
  42cb88:	str	xzr, [sp, #216]
  42cb8c:	b	42cdec <wcrtomb@plt+0x280dc>
  42cb90:	ldr	x0, [sp, #216]
  42cb94:	lsl	x0, x0, #4
  42cb98:	ldr	x1, [sp, #96]
  42cb9c:	add	x0, x1, x0
  42cba0:	ldr	x0, [x0]
  42cba4:	mov	x2, x0
  42cba8:	add	x0, sp, #0x38
  42cbac:	mov	x1, x0
  42cbb0:	mov	x0, x2
  42cbb4:	bl	450988 <argp_usage@@Base+0x789c>
  42cbb8:	str	x0, [sp, #80]
  42cbbc:	ldr	x0, [sp, #232]
  42cbc0:	add	x0, x0, #0x200
  42cbc4:	str	x0, [sp, #168]
  42cbc8:	ldr	x0, [sp, #80]
  42cbcc:	str	x0, [sp, #160]
  42cbd0:	b	42cc28 <wcrtomb@plt+0x27f18>
  42cbd4:	ldr	x1, [sp, #224]
  42cbd8:	ldr	x0, [sp, #168]
  42cbdc:	cmp	x1, x0
  42cbe0:	b.ne	42cc08 <wcrtomb@plt+0x27ef8>  // b.any
  42cbe4:	ldr	x0, [sp, #232]
  42cbe8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cbec:	bl	406030 <wcrtomb@plt+0x1320>
  42cbf0:	str	x0, [sp, #232]
  42cbf4:	ldr	x0, [sp, #232]
  42cbf8:	str	x0, [sp, #224]
  42cbfc:	ldr	x0, [sp, #232]
  42cc00:	add	x0, x0, #0x200
  42cc04:	str	x0, [sp, #168]
  42cc08:	ldr	x1, [sp, #160]
  42cc0c:	add	x0, x1, #0x1
  42cc10:	str	x0, [sp, #160]
  42cc14:	ldr	x0, [sp, #224]
  42cc18:	add	x2, x0, #0x1
  42cc1c:	str	x2, [sp, #224]
  42cc20:	ldrb	w1, [x1]
  42cc24:	strb	w1, [x0]
  42cc28:	ldr	x0, [sp, #160]
  42cc2c:	ldrb	w0, [x0]
  42cc30:	cmp	w0, #0x0
  42cc34:	b.ne	42cbd4 <wcrtomb@plt+0x27ec4>  // b.any
  42cc38:	ldr	x0, [sp, #232]
  42cc3c:	add	x0, x0, #0x200
  42cc40:	str	x0, [sp, #152]
  42cc44:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42cc48:	add	x0, x0, #0xd18
  42cc4c:	str	x0, [sp, #144]
  42cc50:	b	42cca8 <wcrtomb@plt+0x27f98>
  42cc54:	ldr	x1, [sp, #224]
  42cc58:	ldr	x0, [sp, #152]
  42cc5c:	cmp	x1, x0
  42cc60:	b.ne	42cc88 <wcrtomb@plt+0x27f78>  // b.any
  42cc64:	ldr	x0, [sp, #232]
  42cc68:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cc6c:	bl	406030 <wcrtomb@plt+0x1320>
  42cc70:	str	x0, [sp, #232]
  42cc74:	ldr	x0, [sp, #232]
  42cc78:	str	x0, [sp, #224]
  42cc7c:	ldr	x0, [sp, #232]
  42cc80:	add	x0, x0, #0x200
  42cc84:	str	x0, [sp, #152]
  42cc88:	ldr	x1, [sp, #144]
  42cc8c:	add	x0, x1, #0x1
  42cc90:	str	x0, [sp, #144]
  42cc94:	ldr	x0, [sp, #224]
  42cc98:	add	x2, x0, #0x1
  42cc9c:	str	x2, [sp, #224]
  42cca0:	ldrb	w1, [x1]
  42cca4:	strb	w1, [x0]
  42cca8:	ldr	x0, [sp, #144]
  42ccac:	ldrb	w0, [x0]
  42ccb0:	cmp	w0, #0x0
  42ccb4:	b.ne	42cc54 <wcrtomb@plt+0x27f44>  // b.any
  42ccb8:	ldr	x0, [sp, #216]
  42ccbc:	lsl	x0, x0, #4
  42ccc0:	ldr	x1, [sp, #96]
  42ccc4:	add	x0, x1, x0
  42ccc8:	ldr	x0, [x0, #8]
  42cccc:	mov	x2, x0
  42ccd0:	add	x0, sp, #0x38
  42ccd4:	mov	x1, x0
  42ccd8:	mov	x0, x2
  42ccdc:	bl	450988 <argp_usage@@Base+0x789c>
  42cce0:	str	x0, [sp, #80]
  42cce4:	ldr	x0, [sp, #232]
  42cce8:	add	x0, x0, #0x200
  42ccec:	str	x0, [sp, #136]
  42ccf0:	ldr	x0, [sp, #80]
  42ccf4:	str	x0, [sp, #128]
  42ccf8:	b	42cd50 <wcrtomb@plt+0x28040>
  42ccfc:	ldr	x1, [sp, #224]
  42cd00:	ldr	x0, [sp, #136]
  42cd04:	cmp	x1, x0
  42cd08:	b.ne	42cd30 <wcrtomb@plt+0x28020>  // b.any
  42cd0c:	ldr	x0, [sp, #232]
  42cd10:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cd14:	bl	406030 <wcrtomb@plt+0x1320>
  42cd18:	str	x0, [sp, #232]
  42cd1c:	ldr	x0, [sp, #232]
  42cd20:	str	x0, [sp, #224]
  42cd24:	ldr	x0, [sp, #232]
  42cd28:	add	x0, x0, #0x200
  42cd2c:	str	x0, [sp, #136]
  42cd30:	ldr	x1, [sp, #128]
  42cd34:	add	x0, x1, #0x1
  42cd38:	str	x0, [sp, #128]
  42cd3c:	ldr	x0, [sp, #224]
  42cd40:	add	x2, x0, #0x1
  42cd44:	str	x2, [sp, #224]
  42cd48:	ldrb	w1, [x1]
  42cd4c:	strb	w1, [x0]
  42cd50:	ldr	x0, [sp, #128]
  42cd54:	ldrb	w0, [x0]
  42cd58:	cmp	w0, #0x0
  42cd5c:	b.ne	42ccfc <wcrtomb@plt+0x27fec>  // b.any
  42cd60:	ldr	x0, [sp, #232]
  42cd64:	add	x0, x0, #0x200
  42cd68:	str	x0, [sp, #120]
  42cd6c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42cd70:	add	x0, x0, #0xd18
  42cd74:	str	x0, [sp, #112]
  42cd78:	b	42cdd0 <wcrtomb@plt+0x280c0>
  42cd7c:	ldr	x1, [sp, #224]
  42cd80:	ldr	x0, [sp, #120]
  42cd84:	cmp	x1, x0
  42cd88:	b.ne	42cdb0 <wcrtomb@plt+0x280a0>  // b.any
  42cd8c:	ldr	x0, [sp, #232]
  42cd90:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cd94:	bl	406030 <wcrtomb@plt+0x1320>
  42cd98:	str	x0, [sp, #232]
  42cd9c:	ldr	x0, [sp, #232]
  42cda0:	str	x0, [sp, #224]
  42cda4:	ldr	x0, [sp, #232]
  42cda8:	add	x0, x0, #0x200
  42cdac:	str	x0, [sp, #120]
  42cdb0:	ldr	x1, [sp, #112]
  42cdb4:	add	x0, x1, #0x1
  42cdb8:	str	x0, [sp, #112]
  42cdbc:	ldr	x0, [sp, #224]
  42cdc0:	add	x2, x0, #0x1
  42cdc4:	str	x2, [sp, #224]
  42cdc8:	ldrb	w1, [x1]
  42cdcc:	strb	w1, [x0]
  42cdd0:	ldr	x0, [sp, #112]
  42cdd4:	ldrb	w0, [x0]
  42cdd8:	cmp	w0, #0x0
  42cddc:	b.ne	42cd7c <wcrtomb@plt+0x2806c>  // b.any
  42cde0:	ldr	x0, [sp, #216]
  42cde4:	add	x0, x0, #0x1
  42cde8:	str	x0, [sp, #216]
  42cdec:	ldr	x0, [sp, #40]
  42cdf0:	ldr	x0, [x0, #24]
  42cdf4:	ldr	x0, [x0, #288]
  42cdf8:	ldr	x1, [sp, #216]
  42cdfc:	cmp	x1, x0
  42ce00:	b.cc	42cb90 <wcrtomb@plt+0x27e80>  // b.lo, b.ul, b.last
  42ce04:	ldr	x0, [sp, #232]
  42ce08:	ldr	x1, [sp, #224]
  42ce0c:	sub	x0, x1, x0
  42ce10:	mov	x1, #0x200                 	// #512
  42ce14:	sub	x0, x1, x0
  42ce18:	mov	x2, x0
  42ce1c:	mov	w1, #0x0                   	// #0
  42ce20:	ldr	x0, [sp, #224]
  42ce24:	bl	4044d0 <memset@plt>
  42ce28:	ldr	x0, [sp, #232]
  42ce2c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42ce30:	mov	w0, #0x1                   	// #1
  42ce34:	ldr	x19, [sp, #16]
  42ce38:	ldp	x29, x30, [sp], #240
  42ce3c:	ret
  42ce40:	stp	x29, x30, [sp, #-32]!
  42ce44:	mov	x29, sp
  42ce48:	str	x0, [sp, #24]
  42ce4c:	ldr	x0, [sp, #24]
  42ce50:	ldr	x0, [x0, #24]
  42ce54:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ce58:	add	x1, x1, #0x290
  42ce5c:	ldr	w1, [x1]
  42ce60:	str	w1, [x0, #276]
  42ce64:	ldr	x0, [sp, #24]
  42ce68:	ldr	x0, [x0, #24]
  42ce6c:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ce70:	add	x1, x1, #0x88
  42ce74:	ldr	w1, [x1]
  42ce78:	str	w1, [x0, #280]
  42ce7c:	ldr	x0, [sp, #24]
  42ce80:	ldr	x0, [x0, #24]
  42ce84:	ldr	w0, [x0, #276]
  42ce88:	cmp	w0, #0x0
  42ce8c:	b.ne	42ceac <wcrtomb@plt+0x2819c>  // b.any
  42ce90:	ldr	x0, [sp, #24]
  42ce94:	bl	42c4c8 <wcrtomb@plt+0x277b8>
  42ce98:	and	w0, w0, #0xff
  42ce9c:	cmp	w0, #0x0
  42cea0:	cset	w0, ne  // ne = any
  42cea4:	and	w0, w0, #0xff
  42cea8:	b	42cec4 <wcrtomb@plt+0x281b4>
  42ceac:	ldr	x0, [sp, #24]
  42ceb0:	bl	42c7d4 <wcrtomb@plt+0x27ac4>
  42ceb4:	and	w0, w0, #0xff
  42ceb8:	cmp	w0, #0x0
  42cebc:	cset	w0, ne  // ne = any
  42cec0:	and	w0, w0, #0xff
  42cec4:	ldp	x29, x30, [sp], #32
  42cec8:	ret
  42cecc:	stp	x29, x30, [sp, #-64]!
  42ced0:	mov	x29, sp
  42ced4:	str	x0, [sp, #40]
  42ced8:	str	x1, [sp, #32]
  42cedc:	str	x2, [sp, #24]
  42cee0:	ldr	x0, [sp, #32]
  42cee4:	ldrb	w0, [x0]
  42cee8:	sub	w0, w0, #0x30
  42ceec:	cmp	w0, #0x9
  42cef0:	b.ls	42cefc <wcrtomb@plt+0x281ec>  // b.plast
  42cef4:	mov	w0, #0x0                   	// #0
  42cef8:	b	42cf64 <wcrtomb@plt+0x28254>
  42cefc:	bl	404bc0 <__errno_location@plt>
  42cf00:	str	wzr, [x0]
  42cf04:	add	x0, sp, #0x30
  42cf08:	mov	w2, #0xa                   	// #10
  42cf0c:	mov	x1, x0
  42cf10:	ldr	x0, [sp, #32]
  42cf14:	bl	4046e0 <strtoumax@plt>
  42cf18:	str	x0, [sp, #56]
  42cf1c:	ldr	x1, [sp, #56]
  42cf20:	ldr	x0, [sp, #24]
  42cf24:	cmp	x1, x0
  42cf28:	b.hi	42cf4c <wcrtomb@plt+0x2823c>  // b.pmore
  42cf2c:	bl	404bc0 <__errno_location@plt>
  42cf30:	ldr	w0, [x0]
  42cf34:	cmp	w0, #0x22
  42cf38:	b.eq	42cf4c <wcrtomb@plt+0x2823c>  // b.none
  42cf3c:	ldr	x0, [sp, #48]
  42cf40:	ldrb	w0, [x0]
  42cf44:	cmp	w0, #0x0
  42cf48:	b.eq	42cf54 <wcrtomb@plt+0x28244>  // b.none
  42cf4c:	mov	w0, #0x0                   	// #0
  42cf50:	b	42cf64 <wcrtomb@plt+0x28254>
  42cf54:	ldr	x0, [sp, #40]
  42cf58:	ldr	x1, [sp, #56]
  42cf5c:	str	x1, [x0]
  42cf60:	mov	w0, #0x1                   	// #1
  42cf64:	ldp	x29, x30, [sp], #64
  42cf68:	ret
  42cf6c:	stp	x29, x30, [sp, #-176]!
  42cf70:	mov	x29, sp
  42cf74:	str	x19, [sp, #16]
  42cf78:	str	x0, [sp, #40]
  42cf7c:	ldr	x0, [sp, #40]
  42cf80:	ldr	x0, [x0, #24]
  42cf84:	ldr	w0, [x0, #276]
  42cf88:	cmp	w0, #0x0
  42cf8c:	b.eq	42d678 <wcrtomb@plt+0x28968>  // b.none
  42cf90:	bl	405f78 <wcrtomb@plt+0x1268>
  42cf94:	str	x0, [sp, #96]
  42cf98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42cf9c:	add	x0, x0, #0x18
  42cfa0:	ldr	x0, [x0]
  42cfa4:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42cfa8:	bl	406030 <wcrtomb@plt+0x1320>
  42cfac:	str	x0, [sp, #168]
  42cfb0:	ldr	x0, [sp, #168]
  42cfb4:	cmp	x0, #0x0
  42cfb8:	b.ne	42d000 <wcrtomb@plt+0x282f0>  // b.any
  42cfbc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42cfc0:	add	x0, x0, #0x420
  42cfc4:	ldr	x0, [x0]
  42cfc8:	cmp	x0, #0x0
  42cfcc:	b.eq	42cfe0 <wcrtomb@plt+0x282d0>  // b.none
  42cfd0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42cfd4:	add	x0, x0, #0x420
  42cfd8:	ldr	x0, [x0]
  42cfdc:	blr	x0
  42cfe0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42cfe4:	add	x0, x0, #0xba8
  42cfe8:	bl	404c60 <gettext@plt>
  42cfec:	mov	x2, x0
  42cff0:	mov	w1, #0x0                   	// #0
  42cff4:	mov	w0, #0x0                   	// #0
  42cff8:	bl	404100 <error@plt>
  42cffc:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42d000:	ldr	x0, [sp, #168]
  42d004:	str	x0, [sp, #160]
  42d008:	ldr	x0, [sp, #168]
  42d00c:	add	x0, x0, #0x200
  42d010:	str	x0, [sp, #144]
  42d014:	add	x0, sp, #0x40
  42d018:	str	x0, [sp, #136]
  42d01c:	add	x0, sp, #0x40
  42d020:	add	x0, x0, #0x14
  42d024:	ldr	x1, [sp, #136]
  42d028:	cmp	x1, x0
  42d02c:	b.ne	42d09c <wcrtomb@plt+0x2838c>  // b.any
  42d030:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d034:	add	x0, x0, #0x420
  42d038:	ldr	x0, [x0]
  42d03c:	cmp	x0, #0x0
  42d040:	b.eq	42d054 <wcrtomb@plt+0x28344>  // b.none
  42d044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d048:	add	x0, x0, #0x420
  42d04c:	ldr	x0, [x0]
  42d050:	blr	x0
  42d054:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d058:	add	x0, x0, #0xd20
  42d05c:	bl	404c60 <gettext@plt>
  42d060:	mov	x1, x0
  42d064:	ldr	x0, [sp, #40]
  42d068:	ldr	x0, [x0, #24]
  42d06c:	ldr	x0, [x0]
  42d070:	mov	x3, x0
  42d074:	mov	x2, x1
  42d078:	mov	w1, #0x0                   	// #0
  42d07c:	mov	w0, #0x0                   	// #0
  42d080:	bl	404100 <error@plt>
  42d084:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d088:	add	x0, x0, #0xdb0
  42d08c:	mov	w1, #0x2                   	// #2
  42d090:	str	w1, [x0]
  42d094:	mov	w0, #0x0                   	// #0
  42d098:	b	42d67c <wcrtomb@plt+0x2896c>
  42d09c:	ldr	x1, [sp, #160]
  42d0a0:	ldr	x0, [sp, #144]
  42d0a4:	cmp	x1, x0
  42d0a8:	b.ne	42d120 <wcrtomb@plt+0x28410>  // b.any
  42d0ac:	ldr	x0, [sp, #168]
  42d0b0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42d0b4:	bl	406030 <wcrtomb@plt+0x1320>
  42d0b8:	str	x0, [sp, #168]
  42d0bc:	ldr	x0, [sp, #168]
  42d0c0:	cmp	x0, #0x0
  42d0c4:	b.ne	42d10c <wcrtomb@plt+0x283fc>  // b.any
  42d0c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d0cc:	add	x0, x0, #0x420
  42d0d0:	ldr	x0, [x0]
  42d0d4:	cmp	x0, #0x0
  42d0d8:	b.eq	42d0ec <wcrtomb@plt+0x283dc>  // b.none
  42d0dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d0e0:	add	x0, x0, #0x420
  42d0e4:	ldr	x0, [x0]
  42d0e8:	blr	x0
  42d0ec:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d0f0:	add	x0, x0, #0xba8
  42d0f4:	bl	404c60 <gettext@plt>
  42d0f8:	mov	x2, x0
  42d0fc:	mov	w1, #0x0                   	// #0
  42d100:	mov	w0, #0x0                   	// #0
  42d104:	bl	404100 <error@plt>
  42d108:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42d10c:	ldr	x0, [sp, #168]
  42d110:	str	x0, [sp, #160]
  42d114:	ldr	x0, [sp, #168]
  42d118:	add	x0, x0, #0x200
  42d11c:	str	x0, [sp, #144]
  42d120:	ldr	x0, [sp, #160]
  42d124:	add	x1, x0, #0x1
  42d128:	str	x1, [sp, #160]
  42d12c:	ldrb	w1, [x0]
  42d130:	ldr	x0, [sp, #136]
  42d134:	strb	w1, [x0]
  42d138:	ldr	x0, [sp, #136]
  42d13c:	add	x1, x0, #0x1
  42d140:	str	x1, [sp, #136]
  42d144:	ldrb	w0, [x0]
  42d148:	cmp	w0, #0xa
  42d14c:	b.ne	42d01c <wcrtomb@plt+0x2830c>  // b.any
  42d150:	ldr	x0, [sp, #136]
  42d154:	sub	x0, x0, #0x1
  42d158:	strb	wzr, [x0]
  42d15c:	add	x1, sp, #0x40
  42d160:	add	x0, sp, #0x58
  42d164:	mov	x2, #0xffffffffffffffff    	// #-1
  42d168:	bl	42cecc <wcrtomb@plt+0x281bc>
  42d16c:	and	w0, w0, #0xff
  42d170:	eor	w0, w0, #0x1
  42d174:	and	w0, w0, #0xff
  42d178:	cmp	w0, #0x0
  42d17c:	b.eq	42d1ec <wcrtomb@plt+0x284dc>  // b.none
  42d180:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d184:	add	x0, x0, #0x420
  42d188:	ldr	x0, [x0]
  42d18c:	cmp	x0, #0x0
  42d190:	b.eq	42d1a4 <wcrtomb@plt+0x28494>  // b.none
  42d194:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d198:	add	x0, x0, #0x420
  42d19c:	ldr	x0, [x0]
  42d1a0:	blr	x0
  42d1a4:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d1a8:	add	x0, x0, #0xd50
  42d1ac:	bl	404c60 <gettext@plt>
  42d1b0:	mov	x1, x0
  42d1b4:	ldr	x0, [sp, #40]
  42d1b8:	ldr	x0, [x0, #24]
  42d1bc:	ldr	x0, [x0]
  42d1c0:	mov	x3, x0
  42d1c4:	mov	x2, x1
  42d1c8:	mov	w1, #0x0                   	// #0
  42d1cc:	mov	w0, #0x0                   	// #0
  42d1d0:	bl	404100 <error@plt>
  42d1d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d1d8:	add	x0, x0, #0xdb0
  42d1dc:	mov	w1, #0x2                   	// #2
  42d1e0:	str	w1, [x0]
  42d1e4:	mov	w0, #0x0                   	// #0
  42d1e8:	b	42d67c <wcrtomb@plt+0x2896c>
  42d1ec:	ldr	x0, [sp, #40]
  42d1f0:	ldr	x0, [x0, #24]
  42d1f4:	ldr	x1, [sp, #88]
  42d1f8:	str	x1, [x0, #296]
  42d1fc:	ldr	x0, [sp, #40]
  42d200:	ldr	x0, [x0, #24]
  42d204:	ldr	x2, [x0, #296]
  42d208:	ldr	x0, [sp, #40]
  42d20c:	ldr	x19, [x0, #24]
  42d210:	mov	x1, #0x10                  	// #16
  42d214:	mov	x0, x2
  42d218:	bl	45b7a4 <argp_usage@@Base+0x126b8>
  42d21c:	str	x0, [x19, #304]
  42d220:	ldr	x0, [sp, #40]
  42d224:	ldr	x0, [x0, #24]
  42d228:	str	xzr, [x0, #288]
  42d22c:	str	xzr, [sp, #152]
  42d230:	b	42d630 <wcrtomb@plt+0x28920>
  42d234:	ldr	x0, [sp, #168]
  42d238:	add	x0, x0, #0x200
  42d23c:	str	x0, [sp, #128]
  42d240:	add	x0, sp, #0x40
  42d244:	str	x0, [sp, #120]
  42d248:	add	x0, sp, #0x40
  42d24c:	add	x0, x0, #0x14
  42d250:	ldr	x1, [sp, #120]
  42d254:	cmp	x1, x0
  42d258:	b.ne	42d2c8 <wcrtomb@plt+0x285b8>  // b.any
  42d25c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d260:	add	x0, x0, #0x420
  42d264:	ldr	x0, [x0]
  42d268:	cmp	x0, #0x0
  42d26c:	b.eq	42d280 <wcrtomb@plt+0x28570>  // b.none
  42d270:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d274:	add	x0, x0, #0x420
  42d278:	ldr	x0, [x0]
  42d27c:	blr	x0
  42d280:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d284:	add	x0, x0, #0xd20
  42d288:	bl	404c60 <gettext@plt>
  42d28c:	mov	x1, x0
  42d290:	ldr	x0, [sp, #40]
  42d294:	ldr	x0, [x0, #24]
  42d298:	ldr	x0, [x0]
  42d29c:	mov	x3, x0
  42d2a0:	mov	x2, x1
  42d2a4:	mov	w1, #0x0                   	// #0
  42d2a8:	mov	w0, #0x0                   	// #0
  42d2ac:	bl	404100 <error@plt>
  42d2b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d2b4:	add	x0, x0, #0xdb0
  42d2b8:	mov	w1, #0x2                   	// #2
  42d2bc:	str	w1, [x0]
  42d2c0:	mov	w0, #0x0                   	// #0
  42d2c4:	b	42d62c <wcrtomb@plt+0x2891c>
  42d2c8:	ldr	x1, [sp, #160]
  42d2cc:	ldr	x0, [sp, #128]
  42d2d0:	cmp	x1, x0
  42d2d4:	b.ne	42d34c <wcrtomb@plt+0x2863c>  // b.any
  42d2d8:	ldr	x0, [sp, #168]
  42d2dc:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42d2e0:	bl	406030 <wcrtomb@plt+0x1320>
  42d2e4:	str	x0, [sp, #168]
  42d2e8:	ldr	x0, [sp, #168]
  42d2ec:	cmp	x0, #0x0
  42d2f0:	b.ne	42d338 <wcrtomb@plt+0x28628>  // b.any
  42d2f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d2f8:	add	x0, x0, #0x420
  42d2fc:	ldr	x0, [x0]
  42d300:	cmp	x0, #0x0
  42d304:	b.eq	42d318 <wcrtomb@plt+0x28608>  // b.none
  42d308:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d30c:	add	x0, x0, #0x420
  42d310:	ldr	x0, [x0]
  42d314:	blr	x0
  42d318:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d31c:	add	x0, x0, #0xba8
  42d320:	bl	404c60 <gettext@plt>
  42d324:	mov	x2, x0
  42d328:	mov	w1, #0x0                   	// #0
  42d32c:	mov	w0, #0x0                   	// #0
  42d330:	bl	404100 <error@plt>
  42d334:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42d338:	ldr	x0, [sp, #168]
  42d33c:	str	x0, [sp, #160]
  42d340:	ldr	x0, [sp, #168]
  42d344:	add	x0, x0, #0x200
  42d348:	str	x0, [sp, #128]
  42d34c:	ldr	x0, [sp, #160]
  42d350:	add	x1, x0, #0x1
  42d354:	str	x1, [sp, #160]
  42d358:	ldrb	w1, [x0]
  42d35c:	ldr	x0, [sp, #120]
  42d360:	strb	w1, [x0]
  42d364:	ldr	x0, [sp, #120]
  42d368:	add	x1, x0, #0x1
  42d36c:	str	x1, [sp, #120]
  42d370:	ldrb	w0, [x0]
  42d374:	cmp	w0, #0xa
  42d378:	b.ne	42d248 <wcrtomb@plt+0x28538>  // b.any
  42d37c:	ldr	x0, [sp, #120]
  42d380:	sub	x0, x0, #0x1
  42d384:	strb	wzr, [x0]
  42d388:	add	x1, sp, #0x40
  42d38c:	add	x0, sp, #0x58
  42d390:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  42d394:	bl	42cecc <wcrtomb@plt+0x281bc>
  42d398:	and	w0, w0, #0xff
  42d39c:	eor	w0, w0, #0x1
  42d3a0:	and	w0, w0, #0xff
  42d3a4:	cmp	w0, #0x0
  42d3a8:	b.eq	42d418 <wcrtomb@plt+0x28708>  // b.none
  42d3ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d3b0:	add	x0, x0, #0x420
  42d3b4:	ldr	x0, [x0]
  42d3b8:	cmp	x0, #0x0
  42d3bc:	b.eq	42d3d0 <wcrtomb@plt+0x286c0>  // b.none
  42d3c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d3c4:	add	x0, x0, #0x420
  42d3c8:	ldr	x0, [x0]
  42d3cc:	blr	x0
  42d3d0:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d3d4:	add	x0, x0, #0xd50
  42d3d8:	bl	404c60 <gettext@plt>
  42d3dc:	mov	x1, x0
  42d3e0:	ldr	x0, [sp, #40]
  42d3e4:	ldr	x0, [x0, #24]
  42d3e8:	ldr	x0, [x0]
  42d3ec:	mov	x3, x0
  42d3f0:	mov	x2, x1
  42d3f4:	mov	w1, #0x0                   	// #0
  42d3f8:	mov	w0, #0x0                   	// #0
  42d3fc:	bl	404100 <error@plt>
  42d400:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d404:	add	x0, x0, #0xdb0
  42d408:	mov	w1, #0x2                   	// #2
  42d40c:	str	w1, [x0]
  42d410:	mov	w0, #0x0                   	// #0
  42d414:	b	42d62c <wcrtomb@plt+0x2891c>
  42d418:	ldr	x0, [sp, #88]
  42d41c:	str	x0, [sp, #48]
  42d420:	ldr	x0, [sp, #168]
  42d424:	add	x0, x0, #0x200
  42d428:	str	x0, [sp, #112]
  42d42c:	add	x0, sp, #0x40
  42d430:	str	x0, [sp, #104]
  42d434:	add	x0, sp, #0x40
  42d438:	add	x0, x0, #0x14
  42d43c:	ldr	x1, [sp, #104]
  42d440:	cmp	x1, x0
  42d444:	b.ne	42d4b4 <wcrtomb@plt+0x287a4>  // b.any
  42d448:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d44c:	add	x0, x0, #0x420
  42d450:	ldr	x0, [x0]
  42d454:	cmp	x0, #0x0
  42d458:	b.eq	42d46c <wcrtomb@plt+0x2875c>  // b.none
  42d45c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d460:	add	x0, x0, #0x420
  42d464:	ldr	x0, [x0]
  42d468:	blr	x0
  42d46c:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d470:	add	x0, x0, #0xd20
  42d474:	bl	404c60 <gettext@plt>
  42d478:	mov	x1, x0
  42d47c:	ldr	x0, [sp, #40]
  42d480:	ldr	x0, [x0, #24]
  42d484:	ldr	x0, [x0]
  42d488:	mov	x3, x0
  42d48c:	mov	x2, x1
  42d490:	mov	w1, #0x0                   	// #0
  42d494:	mov	w0, #0x0                   	// #0
  42d498:	bl	404100 <error@plt>
  42d49c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d4a0:	add	x0, x0, #0xdb0
  42d4a4:	mov	w1, #0x2                   	// #2
  42d4a8:	str	w1, [x0]
  42d4ac:	mov	w0, #0x0                   	// #0
  42d4b0:	b	42d62c <wcrtomb@plt+0x2891c>
  42d4b4:	ldr	x1, [sp, #160]
  42d4b8:	ldr	x0, [sp, #112]
  42d4bc:	cmp	x1, x0
  42d4c0:	b.ne	42d538 <wcrtomb@plt+0x28828>  // b.any
  42d4c4:	ldr	x0, [sp, #168]
  42d4c8:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42d4cc:	bl	406030 <wcrtomb@plt+0x1320>
  42d4d0:	str	x0, [sp, #168]
  42d4d4:	ldr	x0, [sp, #168]
  42d4d8:	cmp	x0, #0x0
  42d4dc:	b.ne	42d524 <wcrtomb@plt+0x28814>  // b.any
  42d4e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d4e4:	add	x0, x0, #0x420
  42d4e8:	ldr	x0, [x0]
  42d4ec:	cmp	x0, #0x0
  42d4f0:	b.eq	42d504 <wcrtomb@plt+0x287f4>  // b.none
  42d4f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d4f8:	add	x0, x0, #0x420
  42d4fc:	ldr	x0, [x0]
  42d500:	blr	x0
  42d504:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d508:	add	x0, x0, #0xba8
  42d50c:	bl	404c60 <gettext@plt>
  42d510:	mov	x2, x0
  42d514:	mov	w1, #0x0                   	// #0
  42d518:	mov	w0, #0x0                   	// #0
  42d51c:	bl	404100 <error@plt>
  42d520:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42d524:	ldr	x0, [sp, #168]
  42d528:	str	x0, [sp, #160]
  42d52c:	ldr	x0, [sp, #168]
  42d530:	add	x0, x0, #0x200
  42d534:	str	x0, [sp, #112]
  42d538:	ldr	x0, [sp, #160]
  42d53c:	add	x1, x0, #0x1
  42d540:	str	x1, [sp, #160]
  42d544:	ldrb	w1, [x0]
  42d548:	ldr	x0, [sp, #104]
  42d54c:	strb	w1, [x0]
  42d550:	ldr	x0, [sp, #104]
  42d554:	add	x1, x0, #0x1
  42d558:	str	x1, [sp, #104]
  42d55c:	ldrb	w0, [x0]
  42d560:	cmp	w0, #0xa
  42d564:	b.ne	42d434 <wcrtomb@plt+0x28724>  // b.any
  42d568:	ldr	x0, [sp, #104]
  42d56c:	sub	x0, x0, #0x1
  42d570:	strb	wzr, [x0]
  42d574:	add	x1, sp, #0x40
  42d578:	add	x0, sp, #0x58
  42d57c:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
  42d580:	bl	42cecc <wcrtomb@plt+0x281bc>
  42d584:	and	w0, w0, #0xff
  42d588:	eor	w0, w0, #0x1
  42d58c:	and	w0, w0, #0xff
  42d590:	cmp	w0, #0x0
  42d594:	b.eq	42d604 <wcrtomb@plt+0x288f4>  // b.none
  42d598:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d59c:	add	x0, x0, #0x420
  42d5a0:	ldr	x0, [x0]
  42d5a4:	cmp	x0, #0x0
  42d5a8:	b.eq	42d5bc <wcrtomb@plt+0x288ac>  // b.none
  42d5ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d5b0:	add	x0, x0, #0x420
  42d5b4:	ldr	x0, [x0]
  42d5b8:	blr	x0
  42d5bc:	adrp	x0, 482000 <_obstack_memory_used@@Base+0x24ec0>
  42d5c0:	add	x0, x0, #0xd50
  42d5c4:	bl	404c60 <gettext@plt>
  42d5c8:	mov	x1, x0
  42d5cc:	ldr	x0, [sp, #40]
  42d5d0:	ldr	x0, [x0, #24]
  42d5d4:	ldr	x0, [x0]
  42d5d8:	mov	x3, x0
  42d5dc:	mov	x2, x1
  42d5e0:	mov	w1, #0x0                   	// #0
  42d5e4:	mov	w0, #0x0                   	// #0
  42d5e8:	bl	404100 <error@plt>
  42d5ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d5f0:	add	x0, x0, #0xdb0
  42d5f4:	mov	w1, #0x2                   	// #2
  42d5f8:	str	w1, [x0]
  42d5fc:	mov	w0, #0x0                   	// #0
  42d600:	b	42d62c <wcrtomb@plt+0x2891c>
  42d604:	ldr	x0, [sp, #88]
  42d608:	str	x0, [sp, #56]
  42d60c:	ldr	x0, [sp, #40]
  42d610:	ldr	x0, [x0, #24]
  42d614:	add	x1, sp, #0x30
  42d618:	bl	42a78c <wcrtomb@plt+0x25a7c>
  42d61c:	ldr	x0, [sp, #152]
  42d620:	add	x0, x0, #0x1
  42d624:	str	x0, [sp, #152]
  42d628:	b	42d630 <wcrtomb@plt+0x28920>
  42d62c:	b	42d67c <wcrtomb@plt+0x2896c>
  42d630:	ldr	x0, [sp, #40]
  42d634:	ldr	x0, [x0, #24]
  42d638:	ldr	x0, [x0, #296]
  42d63c:	ldr	x1, [sp, #152]
  42d640:	cmp	x1, x0
  42d644:	b.cc	42d234 <wcrtomb@plt+0x28524>  // b.lo, b.ul, b.last
  42d648:	ldr	x0, [sp, #168]
  42d64c:	bl	4060c4 <wcrtomb@plt+0x13b4>
  42d650:	bl	405f78 <wcrtomb@plt+0x1268>
  42d654:	mov	x1, x0
  42d658:	ldr	x0, [sp, #96]
  42d65c:	sub	x0, x1, x0
  42d660:	lsl	x1, x0, #9
  42d664:	ldr	x0, [sp, #40]
  42d668:	ldr	x0, [x0, #16]
  42d66c:	add	x1, x1, x0
  42d670:	ldr	x0, [sp, #40]
  42d674:	str	x1, [x0, #16]
  42d678:	mov	w0, #0x1                   	// #1
  42d67c:	ldr	x19, [sp, #16]
  42d680:	ldp	x29, x30, [sp], #176
  42d684:	ret
  42d688:	stp	x29, x30, [sp, #-64]!
  42d68c:	mov	x29, sp
  42d690:	str	x0, [sp, #24]
  42d694:	str	x1, [sp, #16]
  42d698:	mov	w1, #0x2e                  	// #46
  42d69c:	ldr	x0, [sp, #24]
  42d6a0:	bl	404670 <strrchr@plt>
  42d6a4:	str	x0, [sp, #48]
  42d6a8:	ldr	x0, [sp, #48]
  42d6ac:	cmp	x0, #0x0
  42d6b0:	b.eq	42d75c <wcrtomb@plt+0x28a4c>  // b.none
  42d6b4:	ldr	x0, [sp, #48]
  42d6b8:	add	x0, x0, #0x1
  42d6bc:	str	x0, [sp, #48]
  42d6c0:	ldr	x0, [sp, #48]
  42d6c4:	bl	4040b0 <strlen@plt>
  42d6c8:	str	x0, [sp, #40]
  42d6cc:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  42d6d0:	add	x0, x0, #0xfd0
  42d6d4:	str	x0, [sp, #56]
  42d6d8:	b	42d74c <wcrtomb@plt+0x28a3c>
  42d6dc:	ldr	x0, [sp, #56]
  42d6e0:	ldr	x0, [x0, #8]
  42d6e4:	ldr	x1, [sp, #40]
  42d6e8:	cmp	x1, x0
  42d6ec:	b.ne	42d740 <wcrtomb@plt+0x28a30>  // b.any
  42d6f0:	ldr	x0, [sp, #56]
  42d6f4:	ldr	x0, [x0]
  42d6f8:	ldr	x2, [sp, #40]
  42d6fc:	ldr	x1, [sp, #48]
  42d700:	bl	404790 <memcmp@plt>
  42d704:	cmp	w0, #0x0
  42d708:	b.ne	42d740 <wcrtomb@plt+0x28a30>  // b.any
  42d70c:	ldr	x0, [sp, #16]
  42d710:	cmp	x0, #0x0
  42d714:	b.eq	42d738 <wcrtomb@plt+0x28a28>  // b.none
  42d718:	ldr	x0, [sp, #24]
  42d71c:	bl	4040b0 <strlen@plt>
  42d720:	mov	x1, x0
  42d724:	ldr	x0, [sp, #40]
  42d728:	sub	x0, x1, x0
  42d72c:	sub	x1, x0, #0x1
  42d730:	ldr	x0, [sp, #16]
  42d734:	str	x1, [x0]
  42d738:	ldr	x0, [sp, #56]
  42d73c:	b	42d760 <wcrtomb@plt+0x28a50>
  42d740:	ldr	x0, [sp, #56]
  42d744:	add	x0, x0, #0x18
  42d748:	str	x0, [sp, #56]
  42d74c:	ldr	x0, [sp, #56]
  42d750:	ldr	x0, [x0]
  42d754:	cmp	x0, #0x0
  42d758:	b.ne	42d6dc <wcrtomb@plt+0x289cc>  // b.any
  42d75c:	mov	x0, #0x0                   	// #0
  42d760:	ldp	x29, x30, [sp], #64
  42d764:	ret
  42d768:	stp	x29, x30, [sp, #-48]!
  42d76c:	mov	x29, sp
  42d770:	str	x0, [sp, #24]
  42d774:	str	x1, [sp, #16]
  42d778:	mov	x1, #0x0                   	// #0
  42d77c:	ldr	x0, [sp, #24]
  42d780:	bl	42d688 <wcrtomb@plt+0x28978>
  42d784:	str	x0, [sp, #40]
  42d788:	ldr	x0, [sp, #40]
  42d78c:	cmp	x0, #0x0
  42d790:	b.eq	42d7a0 <wcrtomb@plt+0x28a90>  // b.none
  42d794:	ldr	x0, [sp, #40]
  42d798:	ldr	x0, [x0, #16]
  42d79c:	b	42d7a4 <wcrtomb@plt+0x28a94>
  42d7a0:	ldr	x0, [sp, #16]
  42d7a4:	ldp	x29, x30, [sp], #48
  42d7a8:	ret
  42d7ac:	stp	x29, x30, [sp, #-48]!
  42d7b0:	mov	x29, sp
  42d7b4:	str	x0, [sp, #24]
  42d7b8:	str	x1, [sp, #16]
  42d7bc:	ldr	x1, [sp, #16]
  42d7c0:	ldr	x0, [sp, #24]
  42d7c4:	bl	42d768 <wcrtomb@plt+0x28a58>
  42d7c8:	str	x0, [sp, #40]
  42d7cc:	ldr	x0, [sp, #40]
  42d7d0:	cmp	x0, #0x0
  42d7d4:	b.eq	42d7e8 <wcrtomb@plt+0x28ad8>  // b.none
  42d7d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d7dc:	add	x0, x0, #0x3b8
  42d7e0:	ldr	x1, [sp, #40]
  42d7e4:	str	x1, [x0]
  42d7e8:	nop
  42d7ec:	ldp	x29, x30, [sp], #48
  42d7f0:	ret
  42d7f4:	stp	x29, x30, [sp, #-64]!
  42d7f8:	mov	x29, sp
  42d7fc:	str	x0, [sp, #24]
  42d800:	str	xzr, [sp, #56]
  42d804:	add	x0, sp, #0x28
  42d808:	mov	x1, x0
  42d80c:	ldr	x0, [sp, #24]
  42d810:	bl	42d688 <wcrtomb@plt+0x28978>
  42d814:	str	x0, [sp, #48]
  42d818:	ldr	x0, [sp, #48]
  42d81c:	cmp	x0, #0x0
  42d820:	b.eq	42d8c4 <wcrtomb@plt+0x28bb4>  // b.none
  42d824:	ldr	x0, [sp, #40]
  42d828:	cmp	x0, #0x4
  42d82c:	b.ls	42d87c <wcrtomb@plt+0x28b6c>  // b.plast
  42d830:	ldr	x0, [sp, #40]
  42d834:	sub	x0, x0, #0x4
  42d838:	ldr	x1, [sp, #24]
  42d83c:	add	x3, x1, x0
  42d840:	mov	x2, #0x4                   	// #4
  42d844:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42d848:	add	x1, x0, #0x40
  42d84c:	mov	x0, x3
  42d850:	bl	404480 <strncmp@plt>
  42d854:	cmp	w0, #0x0
  42d858:	b.ne	42d87c <wcrtomb@plt+0x28b6c>  // b.any
  42d85c:	ldr	x0, [sp, #48]
  42d860:	ldr	x0, [x0]
  42d864:	ldrb	w0, [x0]
  42d868:	cmp	w0, #0x74
  42d86c:	b.eq	42d87c <wcrtomb@plt+0x28b6c>  // b.none
  42d870:	ldr	x0, [sp, #40]
  42d874:	sub	x0, x0, #0x4
  42d878:	str	x0, [sp, #40]
  42d87c:	ldr	x0, [sp, #40]
  42d880:	cmp	x0, #0x0
  42d884:	b.ne	42d890 <wcrtomb@plt+0x28b80>  // b.any
  42d888:	mov	x0, #0x0                   	// #0
  42d88c:	b	42d8c8 <wcrtomb@plt+0x28bb8>
  42d890:	ldr	x0, [sp, #40]
  42d894:	add	x0, x0, #0x1
  42d898:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  42d89c:	str	x0, [sp, #56]
  42d8a0:	ldr	x0, [sp, #40]
  42d8a4:	mov	x2, x0
  42d8a8:	ldr	x1, [sp, #24]
  42d8ac:	ldr	x0, [sp, #56]
  42d8b0:	bl	404020 <memcpy@plt>
  42d8b4:	ldr	x0, [sp, #40]
  42d8b8:	ldr	x1, [sp, #56]
  42d8bc:	add	x0, x1, x0
  42d8c0:	strb	wzr, [x0]
  42d8c4:	ldr	x0, [sp, #56]
  42d8c8:	ldp	x29, x30, [sp], #64
  42d8cc:	ret
  42d8d0:	stp	x29, x30, [sp, #-64]!
  42d8d4:	mov	x29, sp
  42d8d8:	str	x0, [sp, #24]
  42d8dc:	add	x0, sp, #0x20
  42d8e0:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42d8e4:	add	x1, x1, #0x48
  42d8e8:	str	x1, [x0]
  42d8ec:	add	x0, sp, #0x20
  42d8f0:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42d8f4:	add	x1, x1, #0x50
  42d8f8:	str	x1, [x0, #8]
  42d8fc:	add	x0, sp, #0x20
  42d900:	ldr	x1, [sp, #24]
  42d904:	str	x1, [x0, #16]
  42d908:	add	x0, sp, #0x20
  42d90c:	str	xzr, [x0, #24]
  42d910:	add	x0, sp, #0x20
  42d914:	mov	x1, x0
  42d918:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42d91c:	add	x0, x0, #0x48
  42d920:	bl	4045a0 <execv@plt>
  42d924:	ldr	x0, [sp, #24]
  42d928:	bl	43a4e0 <wcrtomb@plt+0x357d0>
  42d92c:	stp	x29, x30, [sp, #-16]!
  42d930:	mov	x29, sp
  42d934:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d938:	add	x0, x0, #0x400
  42d93c:	ldr	w2, [x0]
  42d940:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d944:	add	x1, x0, #0xb80
  42d948:	mov	w0, w2
  42d94c:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  42d950:	cmp	w0, #0x0
  42d954:	cset	w0, eq  // eq = none
  42d958:	and	w0, w0, #0xff
  42d95c:	ldp	x29, x30, [sp], #16
  42d960:	ret
  42d964:	sub	sp, sp, #0x10
  42d968:	str	x0, [sp, #8]
  42d96c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d970:	add	x0, x0, #0x250
  42d974:	ldr	x0, [x0]
  42d978:	cmp	x0, #0x0
  42d97c:	b.eq	42d9c0 <wcrtomb@plt+0x28cb0>  // b.none
  42d980:	ldr	x0, [sp, #8]
  42d984:	ldr	x1, [x0, #88]
  42d988:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d98c:	add	x0, x0, #0x250
  42d990:	ldr	x0, [x0]
  42d994:	cmp	x1, x0
  42d998:	b.ne	42d9c0 <wcrtomb@plt+0x28cb0>  // b.any
  42d99c:	ldr	x0, [sp, #8]
  42d9a0:	ldr	x1, [x0, #96]
  42d9a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d9a8:	add	x0, x0, #0x3a8
  42d9ac:	ldr	x0, [x0]
  42d9b0:	cmp	x1, x0
  42d9b4:	b.ne	42d9c0 <wcrtomb@plt+0x28cb0>  // b.any
  42d9b8:	mov	w0, #0x1                   	// #1
  42d9bc:	b	42d9c4 <wcrtomb@plt+0x28cb4>
  42d9c0:	mov	w0, #0x0                   	// #0
  42d9c4:	and	w0, w0, #0x1
  42d9c8:	and	w0, w0, #0xff
  42d9cc:	add	sp, sp, #0x10
  42d9d0:	ret
  42d9d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42d9d8:	add	x0, x0, #0x400
  42d9dc:	ldr	w1, [x0]
  42d9e0:	mov	w0, #0x3fffffff            	// #1073741823
  42d9e4:	cmp	w1, w0
  42d9e8:	b.gt	42da38 <wcrtomb@plt+0x28d28>
  42d9ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42d9f0:	add	x0, x0, #0xb80
  42d9f4:	ldr	w0, [x0, #16]
  42d9f8:	and	w0, w0, #0xf000
  42d9fc:	cmp	w0, #0x8, lsl #12
  42da00:	b.ne	42da38 <wcrtomb@plt+0x28d28>  // b.any
  42da04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42da08:	add	x0, x0, #0xb80
  42da0c:	ldr	x1, [x0]
  42da10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42da14:	add	x0, x0, #0x250
  42da18:	str	x1, [x0]
  42da1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42da20:	add	x0, x0, #0xb80
  42da24:	ldr	x1, [x0, #8]
  42da28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42da2c:	add	x0, x0, #0x3a8
  42da30:	str	x1, [x0]
  42da34:	b	42da48 <wcrtomb@plt+0x28d38>
  42da38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42da3c:	add	x0, x0, #0x250
  42da40:	str	xzr, [x0]
  42da44:	nop
  42da48:	nop
  42da4c:	ret
  42da50:	stp	x29, x30, [sp, #-144]!
  42da54:	mov	x29, sp
  42da58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42da5c:	add	x0, x0, #0x2e0
  42da60:	ldr	x0, [x0]
  42da64:	ldr	x2, [x0]
  42da68:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42da6c:	add	x1, x0, #0x358
  42da70:	mov	x0, x2
  42da74:	bl	4047c0 <strcmp@plt>
  42da78:	cmp	w0, #0x0
  42da7c:	b.eq	42dafc <wcrtomb@plt+0x28dec>  // b.none
  42da80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42da84:	add	x0, x0, #0x400
  42da88:	ldr	w1, [x0]
  42da8c:	mov	w0, #0x3fffffff            	// #1073741823
  42da90:	cmp	w1, w0
  42da94:	b.gt	42db04 <wcrtomb@plt+0x28df4>
  42da98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42da9c:	add	x0, x0, #0xb80
  42daa0:	ldr	w0, [x0, #16]
  42daa4:	and	w0, w0, #0xf000
  42daa8:	cmp	w0, #0x2, lsl #12
  42daac:	b.ne	42db04 <wcrtomb@plt+0x28df4>  // b.any
  42dab0:	add	x0, sp, #0x10
  42dab4:	mov	x1, x0
  42dab8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dabc:	add	x0, x0, #0x358
  42dac0:	bl	47ec60 <_obstack_memory_used@@Base+0x21b20>
  42dac4:	cmp	w0, #0x0
  42dac8:	b.ne	42db04 <wcrtomb@plt+0x28df4>  // b.any
  42dacc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42dad0:	add	x0, x0, #0xb80
  42dad4:	ldr	x1, [x0]
  42dad8:	ldr	x0, [sp, #16]
  42dadc:	cmp	x1, x0
  42dae0:	b.ne	42db04 <wcrtomb@plt+0x28df4>  // b.any
  42dae4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42dae8:	add	x0, x0, #0xb80
  42daec:	ldr	x1, [x0, #8]
  42daf0:	ldr	x0, [sp, #24]
  42daf4:	cmp	x1, x0
  42daf8:	b.ne	42db04 <wcrtomb@plt+0x28df4>  // b.any
  42dafc:	mov	w0, #0x1                   	// #1
  42db00:	b	42db08 <wcrtomb@plt+0x28df8>
  42db04:	mov	w0, #0x0                   	// #0
  42db08:	and	w0, w0, #0x1
  42db0c:	and	w1, w0, #0xff
  42db10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42db14:	add	x0, x0, #0x248
  42db18:	strb	w1, [x0]
  42db1c:	nop
  42db20:	ldp	x29, x30, [sp], #144
  42db24:	ret
  42db28:	stp	x29, x30, [sp, #-48]!
  42db2c:	mov	x29, sp
  42db30:	str	w0, [sp, #28]
  42db34:	strb	w1, [sp, #27]
  42db38:	ldr	w0, [sp, #28]
  42db3c:	cmp	w0, #0x0
  42db40:	b.eq	42dc8c <wcrtomb@plt+0x28f7c>  // b.none
  42db44:	b	42db6c <wcrtomb@plt+0x28e5c>
  42db48:	bl	404bc0 <__errno_location@plt>
  42db4c:	ldr	w0, [x0]
  42db50:	cmp	w0, #0x4
  42db54:	b.eq	42db6c <wcrtomb@plt+0x28e5c>  // b.none
  42db58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42db5c:	add	x0, x0, #0x3b8
  42db60:	ldr	x0, [x0]
  42db64:	bl	43acc4 <wcrtomb@plt+0x35fb4>
  42db68:	b	42db88 <wcrtomb@plt+0x28e78>
  42db6c:	add	x0, sp, #0x28
  42db70:	mov	w2, #0x0                   	// #0
  42db74:	mov	x1, x0
  42db78:	ldr	w0, [sp, #28]
  42db7c:	bl	404c50 <waitpid@plt>
  42db80:	cmn	w0, #0x1
  42db84:	b.eq	42db48 <wcrtomb@plt+0x28e38>  // b.none
  42db88:	ldr	w0, [sp, #40]
  42db8c:	and	w0, w0, #0xff
  42db90:	and	w0, w0, #0x7f
  42db94:	and	w0, w0, #0xff
  42db98:	add	w0, w0, #0x1
  42db9c:	and	w0, w0, #0xff
  42dba0:	sxtb	w0, w0
  42dba4:	asr	w0, w0, #1
  42dba8:	sxtb	w0, w0
  42dbac:	cmp	w0, #0x0
  42dbb0:	b.le	42dc20 <wcrtomb@plt+0x28f10>
  42dbb4:	ldr	w0, [sp, #40]
  42dbb8:	and	w0, w0, #0x7f
  42dbbc:	str	w0, [sp, #44]
  42dbc0:	ldrb	w0, [sp, #27]
  42dbc4:	cmp	w0, #0x0
  42dbc8:	b.ne	42dbd8 <wcrtomb@plt+0x28ec8>  // b.any
  42dbcc:	ldr	w0, [sp, #44]
  42dbd0:	cmp	w0, #0xd
  42dbd4:	b.eq	42dc8c <wcrtomb@plt+0x28f7c>  // b.none
  42dbd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42dbdc:	add	x0, x0, #0x420
  42dbe0:	ldr	x0, [x0]
  42dbe4:	cmp	x0, #0x0
  42dbe8:	b.eq	42dbfc <wcrtomb@plt+0x28eec>  // b.none
  42dbec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42dbf0:	add	x0, x0, #0x420
  42dbf4:	ldr	x0, [x0]
  42dbf8:	blr	x0
  42dbfc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dc00:	add	x0, x0, #0x58
  42dc04:	bl	404c60 <gettext@plt>
  42dc08:	ldr	w3, [sp, #44]
  42dc0c:	mov	x2, x0
  42dc10:	mov	w1, #0x0                   	// #0
  42dc14:	mov	w0, #0x0                   	// #0
  42dc18:	bl	404100 <error@plt>
  42dc1c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42dc20:	ldr	w0, [sp, #40]
  42dc24:	asr	w0, w0, #8
  42dc28:	and	w0, w0, #0xff
  42dc2c:	cmp	w0, #0x0
  42dc30:	b.eq	42dc8c <wcrtomb@plt+0x28f7c>  // b.none
  42dc34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42dc38:	add	x0, x0, #0x420
  42dc3c:	ldr	x0, [x0]
  42dc40:	cmp	x0, #0x0
  42dc44:	b.eq	42dc58 <wcrtomb@plt+0x28f48>  // b.none
  42dc48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42dc4c:	add	x0, x0, #0x420
  42dc50:	ldr	x0, [x0]
  42dc54:	blr	x0
  42dc58:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dc5c:	add	x0, x0, #0x78
  42dc60:	bl	404c60 <gettext@plt>
  42dc64:	mov	x1, x0
  42dc68:	ldr	w0, [sp, #40]
  42dc6c:	asr	w0, w0, #8
  42dc70:	and	w0, w0, #0xff
  42dc74:	mov	w3, w0
  42dc78:	mov	x2, x1
  42dc7c:	mov	w1, #0x0                   	// #0
  42dc80:	mov	w0, #0x0                   	// #0
  42dc84:	bl	404100 <error@plt>
  42dc88:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42dc8c:	nop
  42dc90:	ldp	x29, x30, [sp], #48
  42dc94:	ret
  42dc98:	stp	x29, x30, [sp, #-32]!
  42dc9c:	mov	x29, sp
  42dca0:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dca4:	add	x0, x0, #0x98
  42dca8:	bl	404bf0 <getenv@plt>
  42dcac:	str	x0, [sp, #24]
  42dcb0:	ldr	x0, [sp, #24]
  42dcb4:	cmp	x0, #0x0
  42dcb8:	b.ne	42dcc8 <wcrtomb@plt+0x28fb8>  // b.any
  42dcbc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dcc0:	add	x0, x0, #0x48
  42dcc4:	str	x0, [sp, #24]
  42dcc8:	bl	426208 <wcrtomb@plt+0x214f8>
  42dccc:	str	w0, [sp, #20]
  42dcd0:	ldr	w0, [sp, #20]
  42dcd4:	cmp	w0, #0x0
  42dcd8:	b.ne	42dd20 <wcrtomb@plt+0x29010>  // b.any
  42dcdc:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42dce0:	mov	x3, #0x0                   	// #0
  42dce4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dce8:	add	x2, x0, #0xa0
  42dcec:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dcf0:	add	x1, x0, #0xa8
  42dcf4:	ldr	x0, [sp, #24]
  42dcf8:	bl	404be0 <execlp@plt>
  42dcfc:	ldr	x0, [sp, #24]
  42dd00:	bl	43a4e0 <wcrtomb@plt+0x357d0>
  42dd04:	bl	404bc0 <__errno_location@plt>
  42dd08:	ldr	w0, [x0]
  42dd0c:	cmp	w0, #0x4
  42dd10:	b.eq	42dd20 <wcrtomb@plt+0x29010>  // b.none
  42dd14:	ldr	x0, [sp, #24]
  42dd18:	bl	43acc4 <wcrtomb@plt+0x35fb4>
  42dd1c:	b	42dd40 <wcrtomb@plt+0x29030>
  42dd20:	add	x0, sp, #0x10
  42dd24:	mov	w2, #0x0                   	// #0
  42dd28:	mov	x1, x0
  42dd2c:	ldr	w0, [sp, #20]
  42dd30:	bl	404c50 <waitpid@plt>
  42dd34:	cmn	w0, #0x1
  42dd38:	b.eq	42dd04 <wcrtomb@plt+0x28ff4>  // b.none
  42dd3c:	nop
  42dd40:	nop
  42dd44:	ldp	x29, x30, [sp], #32
  42dd48:	ret
  42dd4c:	sub	sp, sp, #0x10
  42dd50:	str	x0, [sp, #8]
  42dd54:	str	x1, [sp]
  42dd58:	ldr	x0, [sp, #8]
  42dd5c:	ldr	w1, [x0, #24]
  42dd60:	ldr	x0, [sp]
  42dd64:	ldr	w0, [x0, #24]
  42dd68:	cmp	w1, w0
  42dd6c:	cset	w0, eq  // eq = none
  42dd70:	and	w0, w0, #0xff
  42dd74:	add	sp, sp, #0x10
  42dd78:	ret
  42dd7c:	sub	sp, sp, #0x10
  42dd80:	str	x0, [sp, #8]
  42dd84:	str	x1, [sp]
  42dd88:	ldr	x0, [sp, #8]
  42dd8c:	ldr	w1, [x0, #28]
  42dd90:	ldr	x0, [sp]
  42dd94:	ldr	w0, [x0, #28]
  42dd98:	cmp	w1, w0
  42dd9c:	cset	w0, eq  // eq = none
  42dda0:	and	w0, w0, #0xff
  42dda4:	add	sp, sp, #0x10
  42dda8:	ret
  42ddac:	sub	sp, sp, #0x10
  42ddb0:	str	x0, [sp, #8]
  42ddb4:	str	x1, [sp]
  42ddb8:	ldr	x0, [sp]
  42ddbc:	ldr	x1, [x0]
  42ddc0:	ldr	x0, [sp, #8]
  42ddc4:	ldr	x0, [x0]
  42ddc8:	cmp	x1, x0
  42ddcc:	b.ne	42ddf0 <wcrtomb@plt+0x290e0>  // b.any
  42ddd0:	ldr	x0, [sp]
  42ddd4:	ldr	x1, [x0, #8]
  42ddd8:	ldr	x0, [sp, #8]
  42dddc:	ldr	x0, [x0, #8]
  42dde0:	cmp	x1, x0
  42dde4:	b.ne	42ddf0 <wcrtomb@plt+0x290e0>  // b.any
  42dde8:	mov	w0, #0x1                   	// #1
  42ddec:	b	42ddf4 <wcrtomb@plt+0x290e4>
  42ddf0:	mov	w0, #0x0                   	// #0
  42ddf4:	and	w0, w0, #0x1
  42ddf8:	and	w0, w0, #0xff
  42ddfc:	add	sp, sp, #0x10
  42de00:	ret
  42de04:	stp	x29, x30, [sp, #-48]!
  42de08:	mov	x29, sp
  42de0c:	str	w0, [sp, #28]
  42de10:	mov	w2, #0x1                   	// #1
  42de14:	mov	x1, #0x0                   	// #0
  42de18:	ldr	w0, [sp, #28]
  42de1c:	bl	4042b0 <lseek@plt>
  42de20:	str	x0, [sp, #40]
  42de24:	ldr	x0, [sp, #40]
  42de28:	cmp	x0, #0x0
  42de2c:	b.lt	42de40 <wcrtomb@plt+0x29130>  // b.tstop
  42de30:	ldr	x1, [sp, #40]
  42de34:	ldr	w0, [sp, #28]
  42de38:	bl	404ae0 <ftruncate@plt>
  42de3c:	b	42de44 <wcrtomb@plt+0x29134>
  42de40:	mov	w0, #0xffffffff            	// #-1
  42de44:	ldp	x29, x30, [sp], #48
  42de48:	ret
  42de4c:	stp	x29, x30, [sp, #-160]!
  42de50:	mov	x29, sp
  42de54:	str	x0, [sp, #24]
  42de58:	add	x0, sp, #0x20
  42de5c:	mov	x1, x0
  42de60:	ldr	x0, [sp, #24]
  42de64:	bl	47ec60 <_obstack_memory_used@@Base+0x21b20>
  42de68:	cmp	w0, #0x0
  42de6c:	b.ne	42de88 <wcrtomb@plt+0x29178>  // b.any
  42de70:	ldr	w0, [sp, #48]
  42de74:	and	w0, w0, #0xf000
  42de78:	cmp	w0, #0x8, lsl #12
  42de7c:	cset	w0, eq  // eq = none
  42de80:	and	w0, w0, #0xff
  42de84:	b	42de9c <wcrtomb@plt+0x2918c>
  42de88:	bl	404bc0 <__errno_location@plt>
  42de8c:	ldr	w0, [x0]
  42de90:	cmp	w0, #0x2
  42de94:	cset	w0, eq  // eq = none
  42de98:	and	w0, w0, #0xff
  42de9c:	ldp	x29, x30, [sp], #160
  42dea0:	ret
  42dea4:	stp	x29, x30, [sp, #-16]!
  42dea8:	mov	x29, sp
  42deac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42deb0:	add	x0, x0, #0x400
  42deb4:	ldr	w1, [x0]
  42deb8:	mov	w0, #0x3fffffff            	// #1073741823
  42debc:	cmp	w1, w0
  42dec0:	b.le	42df04 <wcrtomb@plt+0x291f4>
  42dec4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42dec8:	add	x0, x0, #0x400
  42decc:	ldr	w1, [x0]
  42ded0:	mov	w0, #0xc0000000            	// #-1073741824
  42ded4:	add	w3, w1, w0
  42ded8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42dedc:	add	x0, x0, #0xfc0
  42dee0:	ldr	x0, [x0]
  42dee4:	mov	x1, x0
  42dee8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42deec:	add	x0, x0, #0x3c8
  42def0:	ldr	x0, [x0]
  42def4:	mov	x2, x0
  42def8:	mov	w0, w3
  42defc:	bl	43c1bc <wcrtomb@plt+0x374ac>
  42df00:	b	42df38 <wcrtomb@plt+0x29228>
  42df04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42df08:	add	x0, x0, #0x400
  42df0c:	ldr	w3, [x0]
  42df10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42df14:	add	x0, x0, #0xfc0
  42df18:	ldr	x0, [x0]
  42df1c:	mov	x1, x0
  42df20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42df24:	add	x0, x0, #0x3c8
  42df28:	ldr	x0, [x0]
  42df2c:	mov	x2, x0
  42df30:	mov	w0, w3
  42df34:	bl	44dee8 <argp_usage@@Base+0x4dfc>
  42df38:	ldp	x29, x30, [sp], #16
  42df3c:	ret
  42df40:	stp	x29, x30, [sp, #-48]!
  42df44:	mov	x29, sp
  42df48:	str	w0, [sp, #28]
  42df4c:	str	w1, [sp, #24]
  42df50:	ldr	w1, [sp, #28]
  42df54:	ldr	w0, [sp, #24]
  42df58:	cmp	w1, w0
  42df5c:	b.eq	42e05c <wcrtomb@plt+0x2934c>  // b.none
  42df60:	ldr	w0, [sp, #24]
  42df64:	bl	404660 <close@plt>
  42df68:	str	w0, [sp, #44]
  42df6c:	ldr	w0, [sp, #44]
  42df70:	cmp	w0, #0x0
  42df74:	b.eq	42dfd8 <wcrtomb@plt+0x292c8>  // b.none
  42df78:	bl	404bc0 <__errno_location@plt>
  42df7c:	ldr	w0, [x0]
  42df80:	cmp	w0, #0x9
  42df84:	b.eq	42dfd8 <wcrtomb@plt+0x292c8>  // b.none
  42df88:	bl	404bc0 <__errno_location@plt>
  42df8c:	ldr	w0, [x0]
  42df90:	str	w0, [sp, #40]
  42df94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42df98:	add	x0, x0, #0x420
  42df9c:	ldr	x0, [x0]
  42dfa0:	cmp	x0, #0x0
  42dfa4:	b.eq	42dfb8 <wcrtomb@plt+0x292a8>  // b.none
  42dfa8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42dfac:	add	x0, x0, #0x420
  42dfb0:	ldr	x0, [x0]
  42dfb4:	blr	x0
  42dfb8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42dfbc:	add	x0, x0, #0xb0
  42dfc0:	bl	404c60 <gettext@plt>
  42dfc4:	mov	x2, x0
  42dfc8:	ldr	w1, [sp, #40]
  42dfcc:	mov	w0, #0x0                   	// #0
  42dfd0:	bl	404100 <error@plt>
  42dfd4:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42dfd8:	ldr	w0, [sp, #28]
  42dfdc:	bl	4040f0 <dup@plt>
  42dfe0:	str	w0, [sp, #44]
  42dfe4:	ldr	w1, [sp, #44]
  42dfe8:	ldr	w0, [sp, #24]
  42dfec:	cmp	w1, w0
  42dff0:	b.eq	42e054 <wcrtomb@plt+0x29344>  // b.none
  42dff4:	ldr	w0, [sp, #44]
  42dff8:	cmp	w0, #0x0
  42dffc:	b.ge	42e050 <wcrtomb@plt+0x29340>  // b.tcont
  42e000:	bl	404bc0 <__errno_location@plt>
  42e004:	ldr	w0, [x0]
  42e008:	str	w0, [sp, #36]
  42e00c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e010:	add	x0, x0, #0x420
  42e014:	ldr	x0, [x0]
  42e018:	cmp	x0, #0x0
  42e01c:	b.eq	42e030 <wcrtomb@plt+0x29320>  // b.none
  42e020:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e024:	add	x0, x0, #0x420
  42e028:	ldr	x0, [x0]
  42e02c:	blr	x0
  42e030:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e034:	add	x0, x0, #0xc0
  42e038:	bl	404c60 <gettext@plt>
  42e03c:	mov	x2, x0
  42e040:	ldr	w1, [sp, #36]
  42e044:	mov	w0, #0x0                   	// #0
  42e048:	bl	404100 <error@plt>
  42e04c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42e050:	bl	404710 <abort@plt>
  42e054:	ldr	w0, [sp, #28]
  42e058:	bl	406160 <wcrtomb@plt+0x1450>
  42e05c:	nop
  42e060:	ldp	x29, x30, [sp], #48
  42e064:	ret
  42e068:	stp	x29, x30, [sp, #-48]!
  42e06c:	mov	x29, sp
  42e070:	str	w0, [sp, #28]
  42e074:	str	wzr, [sp, #44]
  42e078:	b	42e0a0 <wcrtomb@plt+0x29390>
  42e07c:	bl	404bc0 <__errno_location@plt>
  42e080:	ldr	w0, [x0]
  42e084:	cmp	w0, #0x4
  42e088:	b.eq	42e0a0 <wcrtomb@plt+0x29390>  // b.none
  42e08c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e090:	add	x0, x0, #0x3b8
  42e094:	ldr	x0, [x0]
  42e098:	bl	43acc4 <wcrtomb@plt+0x35fb4>
  42e09c:	b	42e0bc <wcrtomb@plt+0x293ac>
  42e0a0:	add	x0, sp, #0x28
  42e0a4:	mov	w2, #0x0                   	// #0
  42e0a8:	mov	x1, x0
  42e0ac:	ldr	w0, [sp, #28]
  42e0b0:	bl	404c50 <waitpid@plt>
  42e0b4:	cmn	w0, #0x1
  42e0b8:	b.eq	42e07c <wcrtomb@plt+0x2936c>  // b.none
  42e0bc:	ldr	w0, [sp, #40]
  42e0c0:	and	w0, w0, #0xff
  42e0c4:	and	w0, w0, #0x7f
  42e0c8:	and	w0, w0, #0xff
  42e0cc:	add	w0, w0, #0x1
  42e0d0:	and	w0, w0, #0xff
  42e0d4:	sxtb	w0, w0
  42e0d8:	asr	w0, w0, #1
  42e0dc:	sxtb	w0, w0
  42e0e0:	cmp	w0, #0x0
  42e0e4:	b.le	42e0f8 <wcrtomb@plt+0x293e8>
  42e0e8:	ldr	w0, [sp, #40]
  42e0ec:	and	w0, w0, #0x7f
  42e0f0:	bl	4040e0 <raise@plt>
  42e0f4:	b	42e11c <wcrtomb@plt+0x2940c>
  42e0f8:	ldr	w0, [sp, #40]
  42e0fc:	asr	w0, w0, #8
  42e100:	and	w0, w0, #0xff
  42e104:	cmp	w0, #0x0
  42e108:	b.eq	42e11c <wcrtomb@plt+0x2940c>  // b.none
  42e10c:	ldr	w0, [sp, #40]
  42e110:	asr	w0, w0, #8
  42e114:	and	w0, w0, #0xff
  42e118:	str	w0, [sp, #44]
  42e11c:	ldr	w0, [sp, #44]
  42e120:	bl	4040d0 <exit@plt>
  42e124:	stp	x29, x30, [sp, #-80]!
  42e128:	mov	x29, sp
  42e12c:	mov	x1, #0x1                   	// #1
  42e130:	mov	w0, #0xd                   	// #13
  42e134:	bl	404360 <signal@plt>
  42e138:	add	x0, sp, #0x18
  42e13c:	bl	42624c <wcrtomb@plt+0x2153c>
  42e140:	bl	426208 <wcrtomb@plt+0x214f8>
  42e144:	str	w0, [sp, #52]
  42e148:	ldr	w0, [sp, #52]
  42e14c:	cmp	w0, #0x0
  42e150:	b.le	42e174 <wcrtomb@plt+0x29464>
  42e154:	ldr	w1, [sp, #28]
  42e158:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e15c:	add	x0, x0, #0x400
  42e160:	str	w1, [x0]
  42e164:	ldr	w0, [sp, #24]
  42e168:	bl	406160 <wcrtomb@plt+0x1450>
  42e16c:	ldr	w0, [sp, #52]
  42e170:	b	42e6c4 <wcrtomb@plt+0x299b4>
  42e174:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e178:	add	x0, x0, #0xd0
  42e17c:	bl	404c60 <gettext@plt>
  42e180:	bl	457c20 <argp_usage@@Base+0xeb34>
  42e184:	mov	x1, #0x0                   	// #0
  42e188:	mov	w0, #0xd                   	// #13
  42e18c:	bl	404360 <signal@plt>
  42e190:	ldr	w0, [sp, #24]
  42e194:	mov	w1, #0x0                   	// #0
  42e198:	bl	42df40 <wcrtomb@plt+0x29230>
  42e19c:	ldr	w0, [sp, #28]
  42e1a0:	bl	406160 <wcrtomb@plt+0x1450>
  42e1a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e1a8:	add	x0, x0, #0x428
  42e1ac:	ldrb	w0, [x0]
  42e1b0:	cmp	w0, #0x0
  42e1b4:	b.ne	42e260 <wcrtomb@plt+0x29550>  // b.any
  42e1b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e1bc:	add	x0, x0, #0x2e0
  42e1c0:	ldr	x0, [x0]
  42e1c4:	ldr	x0, [x0]
  42e1c8:	mov	w1, #0x3a                  	// #58
  42e1cc:	bl	404930 <strchr@plt>
  42e1d0:	mov	x1, x0
  42e1d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e1d8:	add	x0, x0, #0x430
  42e1dc:	str	x1, [x0]
  42e1e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e1e4:	add	x0, x0, #0x430
  42e1e8:	ldr	x0, [x0]
  42e1ec:	cmp	x0, #0x0
  42e1f0:	b.eq	42e260 <wcrtomb@plt+0x29550>  // b.none
  42e1f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e1f8:	add	x0, x0, #0x2e0
  42e1fc:	ldr	x0, [x0]
  42e200:	ldr	x1, [x0]
  42e204:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e208:	add	x0, x0, #0x430
  42e20c:	ldr	x0, [x0]
  42e210:	cmp	x1, x0
  42e214:	b.cs	42e260 <wcrtomb@plt+0x29550>  // b.hs, b.nlast
  42e218:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e21c:	add	x0, x0, #0x2e0
  42e220:	ldr	x0, [x0]
  42e224:	ldr	x3, [x0]
  42e228:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e22c:	add	x0, x0, #0x430
  42e230:	ldr	x1, [x0]
  42e234:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e238:	add	x0, x0, #0x2e0
  42e23c:	ldr	x0, [x0]
  42e240:	ldr	x0, [x0]
  42e244:	sub	x0, x1, x0
  42e248:	mov	x2, x0
  42e24c:	mov	w1, #0x2f                  	// #47
  42e250:	mov	x0, x3
  42e254:	bl	404a20 <memchr@plt>
  42e258:	cmp	x0, #0x0
  42e25c:	b.eq	42e37c <wcrtomb@plt+0x2966c>  // b.none
  42e260:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e264:	add	x0, x0, #0x2e0
  42e268:	ldr	x0, [x0]
  42e26c:	ldr	x0, [x0]
  42e270:	bl	42de4c <wcrtomb@plt+0x2913c>
  42e274:	cmp	w0, #0x0
  42e278:	b.eq	42e37c <wcrtomb@plt+0x2966c>  // b.none
  42e27c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e280:	add	x0, x0, #0x325
  42e284:	ldrb	w0, [x0]
  42e288:	cmp	w0, #0x0
  42e28c:	b.eq	42e2a8 <wcrtomb@plt+0x29598>  // b.none
  42e290:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e294:	add	x0, x0, #0x2e0
  42e298:	ldr	x0, [x0]
  42e29c:	ldr	x0, [x0]
  42e2a0:	mov	w1, #0x1                   	// #1
  42e2a4:	bl	4250f8 <wcrtomb@plt+0x203e8>
  42e2a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e2ac:	add	x0, x0, #0x2e0
  42e2b0:	ldr	x0, [x0]
  42e2b4:	ldr	x2, [x0]
  42e2b8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e2bc:	add	x1, x0, #0xe0
  42e2c0:	mov	x0, x2
  42e2c4:	bl	4047c0 <strcmp@plt>
  42e2c8:	cmp	w0, #0x0
  42e2cc:	b.eq	42e368 <wcrtomb@plt+0x29658>  // b.none
  42e2d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e2d4:	add	x0, x0, #0x2e0
  42e2d8:	ldr	x0, [x0]
  42e2dc:	ldr	x0, [x0]
  42e2e0:	mov	w1, #0x1b6                 	// #438
  42e2e4:	bl	404ca0 <creat@plt>
  42e2e8:	mov	w1, w0
  42e2ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e2f0:	add	x0, x0, #0x400
  42e2f4:	str	w1, [x0]
  42e2f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e2fc:	add	x0, x0, #0x400
  42e300:	ldr	w0, [x0]
  42e304:	cmp	w0, #0x0
  42e308:	b.ge	42e354 <wcrtomb@plt+0x29644>  // b.tcont
  42e30c:	bl	404bc0 <__errno_location@plt>
  42e310:	ldr	w0, [x0]
  42e314:	str	w0, [sp, #48]
  42e318:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e31c:	add	x0, x0, #0x325
  42e320:	ldrb	w0, [x0]
  42e324:	cmp	w0, #0x0
  42e328:	b.eq	42e330 <wcrtomb@plt+0x29620>  // b.none
  42e32c:	bl	42542c <wcrtomb@plt+0x2071c>
  42e330:	bl	404bc0 <__errno_location@plt>
  42e334:	mov	x1, x0
  42e338:	ldr	w0, [sp, #48]
  42e33c:	str	w0, [x1]
  42e340:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e344:	add	x0, x0, #0x2e0
  42e348:	ldr	x0, [x0]
  42e34c:	ldr	x0, [x0]
  42e350:	bl	43a640 <wcrtomb@plt+0x35930>
  42e354:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e358:	add	x0, x0, #0x400
  42e35c:	ldr	w0, [x0]
  42e360:	mov	w1, #0x1                   	// #1
  42e364:	bl	42df40 <wcrtomb@plt+0x29230>
  42e368:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42e36c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e370:	add	x0, x0, #0x3b8
  42e374:	ldr	x0, [x0]
  42e378:	bl	42d8d0 <wcrtomb@plt+0x28bc0>
  42e37c:	add	x0, sp, #0x10
  42e380:	bl	42624c <wcrtomb@plt+0x2153c>
  42e384:	bl	426208 <wcrtomb@plt+0x214f8>
  42e388:	str	w0, [sp, #44]
  42e38c:	ldr	w0, [sp, #44]
  42e390:	cmp	w0, #0x0
  42e394:	b.ne	42e3d0 <wcrtomb@plt+0x296c0>  // b.any
  42e398:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e39c:	add	x0, x0, #0xe8
  42e3a0:	bl	404c60 <gettext@plt>
  42e3a4:	bl	457c20 <argp_usage@@Base+0xeb34>
  42e3a8:	ldr	w0, [sp, #20]
  42e3ac:	mov	w1, #0x1                   	// #1
  42e3b0:	bl	42df40 <wcrtomb@plt+0x29230>
  42e3b4:	ldr	w0, [sp, #16]
  42e3b8:	bl	406160 <wcrtomb@plt+0x1450>
  42e3bc:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42e3c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e3c4:	add	x0, x0, #0x3b8
  42e3c8:	ldr	x0, [x0]
  42e3cc:	bl	42d8d0 <wcrtomb@plt+0x28bc0>
  42e3d0:	ldr	w0, [sp, #16]
  42e3d4:	mov	w1, #0x0                   	// #0
  42e3d8:	bl	42df40 <wcrtomb@plt+0x29230>
  42e3dc:	ldr	w0, [sp, #20]
  42e3e0:	bl	406160 <wcrtomb@plt+0x1450>
  42e3e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e3e8:	add	x0, x0, #0x2e0
  42e3ec:	ldr	x0, [x0]
  42e3f0:	ldr	x2, [x0]
  42e3f4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e3f8:	add	x1, x0, #0xe0
  42e3fc:	mov	x0, x2
  42e400:	bl	4047c0 <strcmp@plt>
  42e404:	cmp	w0, #0x0
  42e408:	b.ne	42e420 <wcrtomb@plt+0x29710>  // b.any
  42e40c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e410:	add	x0, x0, #0x400
  42e414:	mov	w1, #0x1                   	// #1
  42e418:	str	w1, [x0]
  42e41c:	b	42e564 <wcrtomb@plt+0x29854>
  42e420:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e424:	add	x0, x0, #0x428
  42e428:	ldrb	w0, [x0]
  42e42c:	eor	w0, w0, #0x1
  42e430:	and	w0, w0, #0xff
  42e434:	cmp	w0, #0x0
  42e438:	b.eq	42e518 <wcrtomb@plt+0x29808>  // b.none
  42e43c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e440:	add	x0, x0, #0x2e0
  42e444:	ldr	x0, [x0]
  42e448:	ldr	x0, [x0]
  42e44c:	mov	w1, #0x3a                  	// #58
  42e450:	bl	404930 <strchr@plt>
  42e454:	mov	x1, x0
  42e458:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e45c:	add	x0, x0, #0x430
  42e460:	str	x1, [x0]
  42e464:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e468:	add	x0, x0, #0x430
  42e46c:	ldr	x0, [x0]
  42e470:	cmp	x0, #0x0
  42e474:	b.eq	42e518 <wcrtomb@plt+0x29808>  // b.none
  42e478:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e47c:	add	x0, x0, #0x2e0
  42e480:	ldr	x0, [x0]
  42e484:	ldr	x1, [x0]
  42e488:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e48c:	add	x0, x0, #0x430
  42e490:	ldr	x0, [x0]
  42e494:	cmp	x1, x0
  42e498:	b.cs	42e518 <wcrtomb@plt+0x29808>  // b.hs, b.nlast
  42e49c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e4a0:	add	x0, x0, #0x2e0
  42e4a4:	ldr	x0, [x0]
  42e4a8:	ldr	x3, [x0]
  42e4ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e4b0:	add	x0, x0, #0x430
  42e4b4:	ldr	x1, [x0]
  42e4b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e4bc:	add	x0, x0, #0x2e0
  42e4c0:	ldr	x0, [x0]
  42e4c4:	ldr	x0, [x0]
  42e4c8:	sub	x0, x1, x0
  42e4cc:	mov	x2, x0
  42e4d0:	mov	w1, #0x2f                  	// #47
  42e4d4:	mov	x0, x3
  42e4d8:	bl	404a20 <memchr@plt>
  42e4dc:	cmp	x0, #0x0
  42e4e0:	b.ne	42e518 <wcrtomb@plt+0x29808>  // b.any
  42e4e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e4e8:	add	x0, x0, #0x2e0
  42e4ec:	ldr	x0, [x0]
  42e4f0:	ldr	x4, [x0]
  42e4f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e4f8:	add	x0, x0, #0x358
  42e4fc:	ldr	x0, [x0]
  42e500:	mov	x3, x0
  42e504:	mov	w2, #0x40000000            	// #1073741824
  42e508:	mov	w1, #0x41                  	// #65
  42e50c:	mov	x0, x4
  42e510:	bl	43ba64 <wcrtomb@plt+0x36d54>
  42e514:	b	42e530 <wcrtomb@plt+0x29820>
  42e518:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e51c:	add	x0, x0, #0x2e0
  42e520:	ldr	x0, [x0]
  42e524:	ldr	x0, [x0]
  42e528:	mov	w1, #0x1b6                 	// #438
  42e52c:	bl	404ca0 <creat@plt>
  42e530:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e534:	add	x1, x1, #0x400
  42e538:	str	w0, [x1]
  42e53c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e540:	add	x0, x0, #0x400
  42e544:	ldr	w0, [x0]
  42e548:	cmp	w0, #0x0
  42e54c:	b.ge	42e564 <wcrtomb@plt+0x29854>  // b.tcont
  42e550:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e554:	add	x0, x0, #0x2e0
  42e558:	ldr	x0, [x0]
  42e55c:	ldr	x0, [x0]
  42e560:	bl	43a640 <wcrtomb@plt+0x35930>
  42e564:	str	xzr, [sp, #72]
  42e568:	str	xzr, [sp, #56]
  42e56c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42e570:	add	x0, x0, #0xfc0
  42e574:	ldr	x0, [x0]
  42e578:	str	x0, [sp, #64]
  42e57c:	b	42e5f4 <wcrtomb@plt+0x298e4>
  42e580:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e584:	add	x0, x0, #0x3c8
  42e588:	ldr	x1, [x0]
  42e58c:	ldr	x0, [sp, #56]
  42e590:	sub	x0, x1, x0
  42e594:	str	x0, [sp, #32]
  42e598:	ldr	x2, [sp, #32]
  42e59c:	ldr	x1, [sp, #64]
  42e5a0:	mov	w0, #0x0                   	// #0
  42e5a4:	bl	45a2ac <argp_usage@@Base+0x111c0>
  42e5a8:	str	x0, [sp, #72]
  42e5ac:	ldr	x0, [sp, #72]
  42e5b0:	cmn	x0, #0x1
  42e5b4:	b.ne	42e5c8 <wcrtomb@plt+0x298b8>  // b.any
  42e5b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e5bc:	add	x0, x0, #0x3b8
  42e5c0:	ldr	x0, [x0]
  42e5c4:	bl	43a80c <wcrtomb@plt+0x35afc>
  42e5c8:	ldr	x0, [sp, #72]
  42e5cc:	cmp	x0, #0x0
  42e5d0:	b.eq	42e610 <wcrtomb@plt+0x29900>  // b.none
  42e5d4:	ldr	x1, [sp, #56]
  42e5d8:	ldr	x0, [sp, #72]
  42e5dc:	add	x0, x1, x0
  42e5e0:	str	x0, [sp, #56]
  42e5e4:	ldr	x1, [sp, #64]
  42e5e8:	ldr	x0, [sp, #72]
  42e5ec:	add	x0, x1, x0
  42e5f0:	str	x0, [sp, #64]
  42e5f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e5f8:	add	x0, x0, #0x3c8
  42e5fc:	ldr	x0, [x0]
  42e600:	ldr	x1, [sp, #56]
  42e604:	cmp	x1, x0
  42e608:	b.cc	42e580 <wcrtomb@plt+0x29870>  // b.lo, b.ul, b.last
  42e60c:	b	42e614 <wcrtomb@plt+0x29904>
  42e610:	nop
  42e614:	ldr	x0, [sp, #72]
  42e618:	cmp	x0, #0x0
  42e61c:	b.ne	42e690 <wcrtomb@plt+0x29980>  // b.any
  42e620:	ldr	x0, [sp, #56]
  42e624:	cmp	x0, #0x0
  42e628:	b.eq	42e6b8 <wcrtomb@plt+0x299a8>  // b.none
  42e62c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42e630:	add	x0, x0, #0xfc0
  42e634:	ldr	x0, [x0]
  42e638:	mov	x1, x0
  42e63c:	ldr	x0, [sp, #56]
  42e640:	add	x3, x1, x0
  42e644:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e648:	add	x0, x0, #0x3c8
  42e64c:	ldr	x1, [x0]
  42e650:	ldr	x0, [sp, #56]
  42e654:	sub	x0, x1, x0
  42e658:	mov	x2, x0
  42e65c:	mov	w1, #0x0                   	// #0
  42e660:	mov	x0, x3
  42e664:	bl	4044d0 <memset@plt>
  42e668:	bl	42dea4 <wcrtomb@plt+0x29194>
  42e66c:	str	x0, [sp, #72]
  42e670:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e674:	add	x0, x0, #0x3c8
  42e678:	ldr	x0, [x0]
  42e67c:	ldr	x1, [sp, #72]
  42e680:	cmp	x1, x0
  42e684:	b.eq	42e6b8 <wcrtomb@plt+0x299a8>  // b.none
  42e688:	ldr	x0, [sp, #72]
  42e68c:	bl	406ef4 <wcrtomb@plt+0x21e4>
  42e690:	bl	42dea4 <wcrtomb@plt+0x29194>
  42e694:	str	x0, [sp, #72]
  42e698:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e69c:	add	x0, x0, #0x3c8
  42e6a0:	ldr	x0, [x0]
  42e6a4:	ldr	x1, [sp, #72]
  42e6a8:	cmp	x1, x0
  42e6ac:	b.eq	42e564 <wcrtomb@plt+0x29854>  // b.none
  42e6b0:	ldr	x0, [sp, #72]
  42e6b4:	bl	406ef4 <wcrtomb@plt+0x21e4>
  42e6b8:	nop
  42e6bc:	ldr	w0, [sp, #44]
  42e6c0:	bl	42e068 <wcrtomb@plt+0x29358>
  42e6c4:	ldp	x29, x30, [sp], #80
  42e6c8:	ret
  42e6cc:	stp	x29, x30, [sp, #-288]!
  42e6d0:	mov	x29, sp
  42e6d4:	str	x19, [sp, #16]
  42e6d8:	str	xzr, [sp, #272]
  42e6dc:	mov	w0, #0xe06                 	// #3590
  42e6e0:	movk	w0, #0x208, lsl #16
  42e6e4:	str	w0, [sp, #268]
  42e6e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42e6ec:	add	x0, x0, #0x4b0
  42e6f0:	ldr	x0, [x0]
  42e6f4:	str	x0, [sp, #144]
  42e6f8:	mov	x0, #0x1                   	// #1
  42e6fc:	str	x0, [sp, #48]
  42e700:	add	x0, sp, #0x108
  42e704:	bl	405430 <wcrtomb@plt+0x720>
  42e708:	str	x0, [sp, #280]
  42e70c:	b	42e8dc <wcrtomb@plt+0x29bcc>
  42e710:	ldr	x0, [sp, #272]
  42e714:	cmp	x0, #0x0
  42e718:	b.eq	42e7dc <wcrtomb@plt+0x29acc>  // b.none
  42e71c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42e720:	add	x0, x0, #0x24c
  42e724:	ldr	w0, [x0]
  42e728:	and	w0, w0, #0x80000
  42e72c:	cmp	w0, #0x0
  42e730:	b.eq	42e780 <wcrtomb@plt+0x29a70>  // b.none
  42e734:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e738:	add	x0, x0, #0x420
  42e73c:	ldr	x0, [x0]
  42e740:	cmp	x0, #0x0
  42e744:	b.eq	42e758 <wcrtomb@plt+0x29a48>  // b.none
  42e748:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e74c:	add	x0, x0, #0x420
  42e750:	ldr	x0, [x0]
  42e754:	blr	x0
  42e758:	bl	404bc0 <__errno_location@plt>
  42e75c:	ldr	w19, [x0]
  42e760:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e764:	add	x0, x0, #0x100
  42e768:	bl	404c60 <gettext@plt>
  42e76c:	ldr	x3, [sp, #272]
  42e770:	mov	x2, x0
  42e774:	mov	w1, w19
  42e778:	mov	w0, #0x0                   	// #0
  42e77c:	bl	404100 <error@plt>
  42e780:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42e784:	add	x0, x0, #0x24c
  42e788:	ldr	w0, [x0]
  42e78c:	and	w0, w0, #0x80000
  42e790:	cmp	w0, #0x0
  42e794:	b.eq	42e7dc <wcrtomb@plt+0x29acc>  // b.none
  42e798:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e79c:	add	x0, x0, #0x420
  42e7a0:	ldr	x0, [x0]
  42e7a4:	cmp	x0, #0x0
  42e7a8:	b.eq	42e7bc <wcrtomb@plt+0x29aac>  // b.none
  42e7ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e7b0:	add	x0, x0, #0x420
  42e7b4:	ldr	x0, [x0]
  42e7b8:	blr	x0
  42e7bc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e7c0:	add	x0, x0, #0x110
  42e7c4:	bl	404c60 <gettext@plt>
  42e7c8:	ldr	x3, [sp, #280]
  42e7cc:	mov	x2, x0
  42e7d0:	mov	w1, #0x0                   	// #0
  42e7d4:	mov	w0, #0x0                   	// #0
  42e7d8:	bl	404100 <error@plt>
  42e7dc:	ldr	w1, [sp, #268]
  42e7e0:	add	x0, sp, #0x20
  42e7e4:	mov	w2, w1
  42e7e8:	mov	x1, x0
  42e7ec:	ldr	x0, [sp, #280]
  42e7f0:	bl	4423e8 <wcrtomb@plt+0x3d6d8>
  42e7f4:	cmp	w0, #0x0
  42e7f8:	b.eq	42e854 <wcrtomb@plt+0x29b44>  // b.none
  42e7fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e800:	add	x0, x0, #0x420
  42e804:	ldr	x0, [x0]
  42e808:	cmp	x0, #0x0
  42e80c:	b.eq	42e820 <wcrtomb@plt+0x29b10>  // b.none
  42e810:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e814:	add	x0, x0, #0x420
  42e818:	ldr	x0, [x0]
  42e81c:	blr	x0
  42e820:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e824:	add	x0, x0, #0x120
  42e828:	bl	404c60 <gettext@plt>
  42e82c:	mov	x19, x0
  42e830:	add	x0, sp, #0x20
  42e834:	bl	4426b0 <wcrtomb@plt+0x3d9a0>
  42e838:	mov	x4, x0
  42e83c:	ldr	x3, [sp, #280]
  42e840:	mov	x2, x19
  42e844:	mov	w1, #0x0                   	// #0
  42e848:	mov	w0, #0x0                   	// #0
  42e84c:	bl	404100 <error@plt>
  42e850:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42e854:	ldr	w0, [sp, #268]
  42e858:	orr	w0, w0, #0x8
  42e85c:	str	w0, [sp, #268]
  42e860:	ldr	x3, [sp, #40]
  42e864:	ldr	x1, [sp, #40]
  42e868:	ldr	x0, [sp, #48]
  42e86c:	lsl	x0, x0, #3
  42e870:	add	x1, x1, x0
  42e874:	ldr	x0, [sp, #32]
  42e878:	lsl	x0, x0, #3
  42e87c:	mov	x2, x0
  42e880:	mov	x0, x3
  42e884:	bl	404030 <memmove@plt>
  42e888:	ldr	x1, [sp, #40]
  42e88c:	ldr	x0, [sp, #32]
  42e890:	lsl	x0, x0, #3
  42e894:	add	x0, x1, x0
  42e898:	adrp	x1, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e89c:	add	x1, x1, #0x140
  42e8a0:	str	x1, [x0]
  42e8a4:	ldr	x0, [sp, #280]
  42e8a8:	str	x0, [sp, #272]
  42e8ac:	ldr	x0, [sp, #40]
  42e8b0:	ldr	x0, [x0]
  42e8b4:	ldr	x1, [sp, #40]
  42e8b8:	bl	4047b0 <execvp@plt>
  42e8bc:	ldr	x1, [sp, #40]
  42e8c0:	ldr	x0, [sp, #32]
  42e8c4:	lsl	x0, x0, #3
  42e8c8:	add	x0, x1, x0
  42e8cc:	str	xzr, [x0]
  42e8d0:	add	x0, sp, #0x108
  42e8d4:	bl	4054c0 <wcrtomb@plt+0x7b0>
  42e8d8:	str	x0, [sp, #280]
  42e8dc:	ldr	x0, [sp, #280]
  42e8e0:	cmp	x0, #0x0
  42e8e4:	b.ne	42e710 <wcrtomb@plt+0x29a00>  // b.any
  42e8e8:	ldr	x0, [sp, #272]
  42e8ec:	cmp	x0, #0x0
  42e8f0:	b.ne	42e938 <wcrtomb@plt+0x29c28>  // b.any
  42e8f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e8f8:	add	x0, x0, #0x420
  42e8fc:	ldr	x0, [x0]
  42e900:	cmp	x0, #0x0
  42e904:	b.eq	42e918 <wcrtomb@plt+0x29c08>  // b.none
  42e908:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e90c:	add	x0, x0, #0x420
  42e910:	ldr	x0, [x0]
  42e914:	blr	x0
  42e918:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e91c:	add	x0, x0, #0x148
  42e920:	bl	404c60 <gettext@plt>
  42e924:	mov	x2, x0
  42e928:	mov	w1, #0x0                   	// #0
  42e92c:	mov	w0, #0x0                   	// #0
  42e930:	bl	404100 <error@plt>
  42e934:	bl	412ae0 <wcrtomb@plt+0xddd0>
  42e938:	ldr	x0, [sp, #272]
  42e93c:	bl	43a4e0 <wcrtomb@plt+0x357d0>
  42e940:	stp	x29, x30, [sp, #-80]!
  42e944:	mov	x29, sp
  42e948:	add	x0, sp, #0x20
  42e94c:	bl	42624c <wcrtomb@plt+0x2153c>
  42e950:	bl	426208 <wcrtomb@plt+0x214f8>
  42e954:	str	w0, [sp, #60]
  42e958:	ldr	w0, [sp, #60]
  42e95c:	cmp	w0, #0x0
  42e960:	b.le	42e984 <wcrtomb@plt+0x29c74>
  42e964:	ldr	w1, [sp, #32]
  42e968:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e96c:	add	x0, x0, #0x400
  42e970:	str	w1, [x0]
  42e974:	ldr	w0, [sp, #36]
  42e978:	bl	406160 <wcrtomb@plt+0x1450>
  42e97c:	ldr	w0, [sp, #60]
  42e980:	b	42ee5c <wcrtomb@plt+0x2a14c>
  42e984:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e988:	add	x0, x0, #0xd0
  42e98c:	bl	404c60 <gettext@plt>
  42e990:	bl	457c20 <argp_usage@@Base+0xeb34>
  42e994:	mov	x1, #0x0                   	// #0
  42e998:	mov	w0, #0xd                   	// #13
  42e99c:	bl	404360 <signal@plt>
  42e9a0:	ldr	w0, [sp, #36]
  42e9a4:	mov	w1, #0x1                   	// #1
  42e9a8:	bl	42df40 <wcrtomb@plt+0x29230>
  42e9ac:	ldr	w0, [sp, #32]
  42e9b0:	bl	406160 <wcrtomb@plt+0x1450>
  42e9b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e9b8:	add	x0, x0, #0x2e0
  42e9bc:	ldr	x0, [x0]
  42e9c0:	ldr	x2, [x0]
  42e9c4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42e9c8:	add	x1, x0, #0xe0
  42e9cc:	mov	x0, x2
  42e9d0:	bl	4047c0 <strcmp@plt>
  42e9d4:	cmp	w0, #0x0
  42e9d8:	b.eq	42eb24 <wcrtomb@plt+0x29e14>  // b.none
  42e9dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e9e0:	add	x0, x0, #0x428
  42e9e4:	ldrb	w0, [x0]
  42e9e8:	cmp	w0, #0x0
  42e9ec:	b.ne	42ea98 <wcrtomb@plt+0x29d88>  // b.any
  42e9f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42e9f4:	add	x0, x0, #0x2e0
  42e9f8:	ldr	x0, [x0]
  42e9fc:	ldr	x0, [x0]
  42ea00:	mov	w1, #0x3a                  	// #58
  42ea04:	bl	404930 <strchr@plt>
  42ea08:	mov	x1, x0
  42ea0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea10:	add	x0, x0, #0x430
  42ea14:	str	x1, [x0]
  42ea18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea1c:	add	x0, x0, #0x430
  42ea20:	ldr	x0, [x0]
  42ea24:	cmp	x0, #0x0
  42ea28:	b.eq	42ea98 <wcrtomb@plt+0x29d88>  // b.none
  42ea2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea30:	add	x0, x0, #0x2e0
  42ea34:	ldr	x0, [x0]
  42ea38:	ldr	x1, [x0]
  42ea3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea40:	add	x0, x0, #0x430
  42ea44:	ldr	x0, [x0]
  42ea48:	cmp	x1, x0
  42ea4c:	b.cs	42ea98 <wcrtomb@plt+0x29d88>  // b.hs, b.nlast
  42ea50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea54:	add	x0, x0, #0x2e0
  42ea58:	ldr	x0, [x0]
  42ea5c:	ldr	x3, [x0]
  42ea60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea64:	add	x0, x0, #0x430
  42ea68:	ldr	x1, [x0]
  42ea6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea70:	add	x0, x0, #0x2e0
  42ea74:	ldr	x0, [x0]
  42ea78:	ldr	x0, [x0]
  42ea7c:	sub	x0, x1, x0
  42ea80:	mov	x2, x0
  42ea84:	mov	w1, #0x2f                  	// #47
  42ea88:	mov	x0, x3
  42ea8c:	bl	404a20 <memchr@plt>
  42ea90:	cmp	x0, #0x0
  42ea94:	b.eq	42eb24 <wcrtomb@plt+0x29e14>  // b.none
  42ea98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ea9c:	add	x0, x0, #0x2e0
  42eaa0:	ldr	x0, [x0]
  42eaa4:	ldr	x0, [x0]
  42eaa8:	bl	42de4c <wcrtomb@plt+0x2913c>
  42eaac:	cmp	w0, #0x0
  42eab0:	b.eq	42eb24 <wcrtomb@plt+0x29e14>  // b.none
  42eab4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42eab8:	add	x0, x0, #0x2e0
  42eabc:	ldr	x0, [x0]
  42eac0:	ldr	x0, [x0]
  42eac4:	mov	w2, #0x1b6                 	// #438
  42eac8:	mov	w1, #0x0                   	// #0
  42eacc:	bl	404430 <open@plt>
  42ead0:	mov	w1, w0
  42ead4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ead8:	add	x0, x0, #0x400
  42eadc:	str	w1, [x0]
  42eae0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42eae4:	add	x0, x0, #0x400
  42eae8:	ldr	w0, [x0]
  42eaec:	cmp	w0, #0x0
  42eaf0:	b.ge	42eb08 <wcrtomb@plt+0x29df8>  // b.tcont
  42eaf4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42eaf8:	add	x0, x0, #0x2e0
  42eafc:	ldr	x0, [x0]
  42eb00:	ldr	x0, [x0]
  42eb04:	bl	43a640 <wcrtomb@plt+0x35930>
  42eb08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42eb0c:	add	x0, x0, #0x400
  42eb10:	ldr	w0, [x0]
  42eb14:	mov	w1, #0x0                   	// #0
  42eb18:	bl	42df40 <wcrtomb@plt+0x29230>
  42eb1c:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42eb20:	bl	42e6cc <wcrtomb@plt+0x299bc>
  42eb24:	add	x0, sp, #0x18
  42eb28:	bl	42624c <wcrtomb@plt+0x2153c>
  42eb2c:	bl	426208 <wcrtomb@plt+0x214f8>
  42eb30:	str	w0, [sp, #56]
  42eb34:	ldr	w0, [sp, #56]
  42eb38:	cmp	w0, #0x0
  42eb3c:	b.ne	42eb6c <wcrtomb@plt+0x29e5c>  // b.any
  42eb40:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42eb44:	add	x0, x0, #0xe8
  42eb48:	bl	404c60 <gettext@plt>
  42eb4c:	bl	457c20 <argp_usage@@Base+0xeb34>
  42eb50:	ldr	w0, [sp, #24]
  42eb54:	mov	w1, #0x0                   	// #0
  42eb58:	bl	42df40 <wcrtomb@plt+0x29230>
  42eb5c:	ldr	w0, [sp, #28]
  42eb60:	bl	406160 <wcrtomb@plt+0x1450>
  42eb64:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42eb68:	bl	42e6cc <wcrtomb@plt+0x299bc>
  42eb6c:	ldr	w0, [sp, #28]
  42eb70:	mov	w1, #0x1                   	// #1
  42eb74:	bl	42df40 <wcrtomb@plt+0x29230>
  42eb78:	ldr	w0, [sp, #24]
  42eb7c:	bl	406160 <wcrtomb@plt+0x1450>
  42eb80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42eb84:	add	x0, x0, #0x2e0
  42eb88:	ldr	x0, [x0]
  42eb8c:	ldr	x2, [x0]
  42eb90:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42eb94:	add	x1, x0, #0xe0
  42eb98:	mov	x0, x2
  42eb9c:	bl	4047c0 <strcmp@plt>
  42eba0:	cmp	w0, #0x0
  42eba4:	b.ne	42ebb8 <wcrtomb@plt+0x29ea8>  // b.any
  42eba8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ebac:	add	x0, x0, #0x400
  42ebb0:	str	wzr, [x0]
  42ebb4:	b	42ecd8 <wcrtomb@plt+0x29fc8>
  42ebb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ebbc:	add	x0, x0, #0x428
  42ebc0:	ldrb	w0, [x0]
  42ebc4:	eor	w0, w0, #0x1
  42ebc8:	and	w0, w0, #0xff
  42ebcc:	cmp	w0, #0x0
  42ebd0:	b.eq	42ecb0 <wcrtomb@plt+0x29fa0>  // b.none
  42ebd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ebd8:	add	x0, x0, #0x2e0
  42ebdc:	ldr	x0, [x0]
  42ebe0:	ldr	x0, [x0]
  42ebe4:	mov	w1, #0x3a                  	// #58
  42ebe8:	bl	404930 <strchr@plt>
  42ebec:	mov	x1, x0
  42ebf0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ebf4:	add	x0, x0, #0x430
  42ebf8:	str	x1, [x0]
  42ebfc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec00:	add	x0, x0, #0x430
  42ec04:	ldr	x0, [x0]
  42ec08:	cmp	x0, #0x0
  42ec0c:	b.eq	42ecb0 <wcrtomb@plt+0x29fa0>  // b.none
  42ec10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec14:	add	x0, x0, #0x2e0
  42ec18:	ldr	x0, [x0]
  42ec1c:	ldr	x1, [x0]
  42ec20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec24:	add	x0, x0, #0x430
  42ec28:	ldr	x0, [x0]
  42ec2c:	cmp	x1, x0
  42ec30:	b.cs	42ecb0 <wcrtomb@plt+0x29fa0>  // b.hs, b.nlast
  42ec34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec38:	add	x0, x0, #0x2e0
  42ec3c:	ldr	x0, [x0]
  42ec40:	ldr	x3, [x0]
  42ec44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec48:	add	x0, x0, #0x430
  42ec4c:	ldr	x1, [x0]
  42ec50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec54:	add	x0, x0, #0x2e0
  42ec58:	ldr	x0, [x0]
  42ec5c:	ldr	x0, [x0]
  42ec60:	sub	x0, x1, x0
  42ec64:	mov	x2, x0
  42ec68:	mov	w1, #0x2f                  	// #47
  42ec6c:	mov	x0, x3
  42ec70:	bl	404a20 <memchr@plt>
  42ec74:	cmp	x0, #0x0
  42ec78:	b.ne	42ecb0 <wcrtomb@plt+0x29fa0>  // b.any
  42ec7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec80:	add	x0, x0, #0x2e0
  42ec84:	ldr	x0, [x0]
  42ec88:	ldr	x4, [x0]
  42ec8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ec90:	add	x0, x0, #0x358
  42ec94:	ldr	x0, [x0]
  42ec98:	mov	x3, x0
  42ec9c:	mov	w2, #0x40000000            	// #1073741824
  42eca0:	mov	w1, #0x0                   	// #0
  42eca4:	mov	x0, x4
  42eca8:	bl	43ba64 <wcrtomb@plt+0x36d54>
  42ecac:	b	42eccc <wcrtomb@plt+0x29fbc>
  42ecb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ecb4:	add	x0, x0, #0x2e0
  42ecb8:	ldr	x0, [x0]
  42ecbc:	ldr	x0, [x0]
  42ecc0:	mov	w2, #0x1b6                 	// #438
  42ecc4:	mov	w1, #0x0                   	// #0
  42ecc8:	bl	404430 <open@plt>
  42eccc:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ecd0:	add	x1, x1, #0x400
  42ecd4:	str	w0, [x1]
  42ecd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ecdc:	add	x0, x0, #0x400
  42ece0:	ldr	w0, [x0]
  42ece4:	cmp	w0, #0x0
  42ece8:	b.ge	42ed00 <wcrtomb@plt+0x29ff0>  // b.tcont
  42ecec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ecf0:	add	x0, x0, #0x2e0
  42ecf4:	ldr	x0, [x0]
  42ecf8:	ldr	x0, [x0]
  42ecfc:	bl	43a640 <wcrtomb@plt+0x35930>
  42ed00:	bl	405228 <wcrtomb@plt+0x518>
  42ed04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ed08:	add	x0, x0, #0x400
  42ed0c:	ldr	w1, [x0]
  42ed10:	mov	w0, #0x3fffffff            	// #1073741823
  42ed14:	cmp	w1, w0
  42ed18:	b.le	42ed5c <wcrtomb@plt+0x2a04c>
  42ed1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ed20:	add	x0, x0, #0x400
  42ed24:	ldr	w1, [x0]
  42ed28:	mov	w0, #0xc0000000            	// #-1073741824
  42ed2c:	add	w3, w1, w0
  42ed30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42ed34:	add	x0, x0, #0xfc0
  42ed38:	ldr	x0, [x0]
  42ed3c:	mov	x1, x0
  42ed40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ed44:	add	x0, x0, #0x3c8
  42ed48:	ldr	x0, [x0]
  42ed4c:	mov	x2, x0
  42ed50:	mov	w0, w3
  42ed54:	bl	43c0a0 <wcrtomb@plt+0x37390>
  42ed58:	b	42ed90 <wcrtomb@plt+0x2a080>
  42ed5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ed60:	add	x0, x0, #0x400
  42ed64:	ldr	w3, [x0]
  42ed68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42ed6c:	add	x0, x0, #0xfc0
  42ed70:	ldr	x0, [x0]
  42ed74:	mov	x1, x0
  42ed78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ed7c:	add	x0, x0, #0x3c8
  42ed80:	ldr	x0, [x0]
  42ed84:	mov	x2, x0
  42ed88:	mov	w0, w3
  42ed8c:	bl	45a2ac <argp_usage@@Base+0x111c0>
  42ed90:	str	x0, [sp, #48]
  42ed94:	ldr	x0, [sp, #48]
  42ed98:	cmn	x0, #0x1
  42ed9c:	b.ne	42eda8 <wcrtomb@plt+0x2a098>  // b.any
  42eda0:	bl	406f60 <wcrtomb@plt+0x2250>
  42eda4:	b	42ed04 <wcrtomb@plt+0x29ff4>
  42eda8:	ldr	x0, [sp, #48]
  42edac:	cmp	x0, #0x0
  42edb0:	b.eq	42ee48 <wcrtomb@plt+0x2a138>  // b.none
  42edb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42edb8:	add	x0, x0, #0xfc0
  42edbc:	ldr	x0, [x0]
  42edc0:	str	x0, [sp, #72]
  42edc4:	ldr	x0, [sp, #48]
  42edc8:	str	x0, [sp, #64]
  42edcc:	b	42ee38 <wcrtomb@plt+0x2a128>
  42edd0:	ldr	x2, [sp, #64]
  42edd4:	ldr	x1, [sp, #64]
  42edd8:	mov	x0, #0x200                 	// #512
  42eddc:	cmp	x2, #0x200
  42ede0:	csel	x0, x1, x0, ls  // ls = plast
  42ede4:	str	x0, [sp, #40]
  42ede8:	ldr	x2, [sp, #40]
  42edec:	ldr	x1, [sp, #72]
  42edf0:	mov	w0, #0x1                   	// #1
  42edf4:	bl	44dee8 <argp_usage@@Base+0x4dfc>
  42edf8:	mov	x1, x0
  42edfc:	ldr	x0, [sp, #40]
  42ee00:	cmp	x0, x1
  42ee04:	b.eq	42ee18 <wcrtomb@plt+0x2a108>  // b.none
  42ee08:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42ee0c:	add	x0, x0, #0x3b8
  42ee10:	ldr	x0, [x0]
  42ee14:	bl	43acec <wcrtomb@plt+0x35fdc>
  42ee18:	ldr	x1, [sp, #72]
  42ee1c:	ldr	x0, [sp, #40]
  42ee20:	add	x0, x1, x0
  42ee24:	str	x0, [sp, #72]
  42ee28:	ldr	x1, [sp, #64]
  42ee2c:	ldr	x0, [sp, #40]
  42ee30:	sub	x0, x1, x0
  42ee34:	str	x0, [sp, #64]
  42ee38:	ldr	x0, [sp, #64]
  42ee3c:	cmp	x0, #0x0
  42ee40:	b.ne	42edd0 <wcrtomb@plt+0x2a0c0>  // b.any
  42ee44:	b	42ed00 <wcrtomb@plt+0x29ff0>
  42ee48:	nop
  42ee4c:	mov	w0, #0x1                   	// #1
  42ee50:	bl	406160 <wcrtomb@plt+0x1450>
  42ee54:	ldr	w0, [sp, #56]
  42ee58:	bl	42e068 <wcrtomb@plt+0x29358>
  42ee5c:	ldp	x29, x30, [sp], #80
  42ee60:	ret
  42ee64:	stp	x29, x30, [sp, #-64]!
  42ee68:	mov	x29, sp
  42ee6c:	str	x0, [sp, #24]
  42ee70:	str	x1, [sp, #16]
  42ee74:	add	x0, sp, #0x20
  42ee78:	mov	x1, x0
  42ee7c:	ldr	x0, [sp, #16]
  42ee80:	bl	450988 <argp_usage@@Base+0x789c>
  42ee84:	str	x0, [sp, #56]
  42ee88:	mov	w2, #0x1                   	// #1
  42ee8c:	ldr	x1, [sp, #56]
  42ee90:	ldr	x0, [sp, #24]
  42ee94:	bl	4041c0 <setenv@plt>
  42ee98:	cmp	w0, #0x0
  42ee9c:	b.eq	42eea4 <wcrtomb@plt+0x2a194>  // b.none
  42eea0:	bl	412b2c <wcrtomb@plt+0xde1c>
  42eea4:	nop
  42eea8:	ldp	x29, x30, [sp], #64
  42eeac:	ret
  42eeb0:	stp	x29, x30, [sp, #-80]!
  42eeb4:	mov	x29, sp
  42eeb8:	str	x0, [sp, #40]
  42eebc:	stp	x1, x2, [sp, #24]
  42eec0:	add	x0, sp, #0x30
  42eec4:	mov	x2, x0
  42eec8:	ldp	x0, x1, [sp, #24]
  42eecc:	bl	424968 <wcrtomb@plt+0x1fc58>
  42eed0:	mov	w2, #0x1                   	// #1
  42eed4:	mov	x1, x0
  42eed8:	ldr	x0, [sp, #40]
  42eedc:	bl	4041c0 <setenv@plt>
  42eee0:	cmp	w0, #0x0
  42eee4:	b.eq	42eeec <wcrtomb@plt+0x2a1dc>  // b.none
  42eee8:	bl	412b2c <wcrtomb@plt+0xde1c>
  42eeec:	nop
  42eef0:	ldp	x29, x30, [sp], #80
  42eef4:	ret
  42eef8:	stp	x29, x30, [sp, #-64]!
  42eefc:	mov	x29, sp
  42ef00:	str	x0, [sp, #24]
  42ef04:	str	x1, [sp, #16]
  42ef08:	add	x4, sp, #0x28
  42ef0c:	ldr	x3, [sp, #16]
  42ef10:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ef14:	add	x2, x0, #0x170
  42ef18:	mov	x1, #0x18                  	// #24
  42ef1c:	mov	x0, x4
  42ef20:	bl	4042e0 <snprintf@plt>
  42ef24:	add	x0, sp, #0x28
  42ef28:	mov	w2, #0x1                   	// #1
  42ef2c:	mov	x1, x0
  42ef30:	ldr	x0, [sp, #24]
  42ef34:	bl	4041c0 <setenv@plt>
  42ef38:	cmp	w0, #0x0
  42ef3c:	b.eq	42ef44 <wcrtomb@plt+0x2a234>  // b.none
  42ef40:	bl	412b2c <wcrtomb@plt+0xde1c>
  42ef44:	nop
  42ef48:	ldp	x29, x30, [sp], #64
  42ef4c:	ret
  42ef50:	stp	x29, x30, [sp, #-32]!
  42ef54:	mov	x29, sp
  42ef58:	str	x0, [sp, #24]
  42ef5c:	str	x1, [sp, #16]
  42ef60:	ldr	x0, [sp, #16]
  42ef64:	cmp	x0, #0x0
  42ef68:	b.eq	42ef88 <wcrtomb@plt+0x2a278>  // b.none
  42ef6c:	mov	w2, #0x1                   	// #1
  42ef70:	ldr	x1, [sp, #16]
  42ef74:	ldr	x0, [sp, #24]
  42ef78:	bl	4041c0 <setenv@plt>
  42ef7c:	cmp	w0, #0x0
  42ef80:	b.eq	42ef90 <wcrtomb@plt+0x2a280>  // b.none
  42ef84:	bl	412b2c <wcrtomb@plt+0xde1c>
  42ef88:	ldr	x0, [sp, #24]
  42ef8c:	bl	4049f0 <unsetenv@plt>
  42ef90:	nop
  42ef94:	ldp	x29, x30, [sp], #32
  42ef98:	ret
  42ef9c:	stp	x29, x30, [sp, #-48]!
  42efa0:	mov	x29, sp
  42efa4:	str	x0, [sp, #24]
  42efa8:	strb	w1, [sp, #23]
  42efac:	ldrb	w0, [sp, #23]
  42efb0:	strb	w0, [sp, #40]
  42efb4:	strb	wzr, [sp, #41]
  42efb8:	add	x0, sp, #0x28
  42efbc:	mov	w2, #0x1                   	// #1
  42efc0:	mov	x1, x0
  42efc4:	ldr	x0, [sp, #24]
  42efc8:	bl	4041c0 <setenv@plt>
  42efcc:	cmp	w0, #0x0
  42efd0:	b.eq	42efd8 <wcrtomb@plt+0x2a2c8>  // b.none
  42efd4:	bl	412b2c <wcrtomb@plt+0xde1c>
  42efd8:	nop
  42efdc:	ldp	x29, x30, [sp], #48
  42efe0:	ret
  42efe4:	stp	x29, x30, [sp, #-48]!
  42efe8:	mov	x29, sp
  42efec:	str	x0, [sp, #40]
  42eff0:	strb	w1, [sp, #39]
  42eff4:	str	x2, [sp, #24]
  42eff8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42effc:	add	x1, x0, #0x178
  42f000:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f004:	add	x0, x0, #0x180
  42f008:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f00c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f010:	add	x0, x0, #0x310
  42f014:	ldr	x0, [x0]
  42f018:	ldr	x0, [x0]
  42f01c:	mov	x1, x0
  42f020:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f024:	add	x0, x0, #0x190
  42f028:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f02c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f030:	add	x0, x0, #0x310
  42f034:	ldr	x1, [x0]
  42f038:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f03c:	add	x0, x0, #0x2e0
  42f040:	ldr	x0, [x0]
  42f044:	sub	x0, x1, x0
  42f048:	asr	x0, x0, #3
  42f04c:	add	x0, x0, #0x1
  42f050:	mov	x1, x0
  42f054:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f058:	add	x0, x0, #0x1a0
  42f05c:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f060:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f064:	add	x0, x0, #0x31c
  42f068:	ldr	w0, [x0]
  42f06c:	sxtw	x0, w0
  42f070:	mov	x1, x0
  42f074:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f078:	add	x0, x0, #0x1b0
  42f07c:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f080:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f084:	add	x0, x0, #0x0
  42f088:	ldr	w0, [x0]
  42f08c:	cmp	w0, #0x0
  42f090:	b.ne	42f0a4 <wcrtomb@plt+0x2a394>  // b.any
  42f094:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f098:	add	x0, x0, #0x360
  42f09c:	ldr	w0, [x0]
  42f0a0:	b	42f0b0 <wcrtomb@plt+0x2a3a0>
  42f0a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f0a8:	add	x0, x0, #0x0
  42f0ac:	ldr	w0, [x0]
  42f0b0:	bl	42fd78 <wcrtomb@plt+0x2b068>
  42f0b4:	mov	x1, x0
  42f0b8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f0bc:	add	x0, x0, #0x1c8
  42f0c0:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f0c4:	ldrb	w1, [sp, #39]
  42f0c8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f0cc:	add	x0, x0, #0x1d8
  42f0d0:	bl	42ef9c <wcrtomb@plt+0x2a28c>
  42f0d4:	ldr	x0, [sp, #24]
  42f0d8:	ldr	w0, [x0, #104]
  42f0dc:	mov	w0, w0
  42f0e0:	mov	x1, x0
  42f0e4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f0e8:	add	x0, x0, #0x1e8
  42f0ec:	bl	42eef8 <wcrtomb@plt+0x2a1e8>
  42f0f0:	ldr	x1, [sp, #40]
  42f0f4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f0f8:	add	x0, x0, #0x1f8
  42f0fc:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f100:	ldr	x0, [sp, #24]
  42f104:	ldr	x0, [x0, #8]
  42f108:	mov	x1, x0
  42f10c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f110:	add	x0, x0, #0x208
  42f114:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f118:	ldr	x0, [sp, #24]
  42f11c:	ldr	x0, [x0, #32]
  42f120:	mov	x1, x0
  42f124:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f128:	add	x0, x0, #0x218
  42f12c:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f130:	ldr	x0, [sp, #24]
  42f134:	ldr	x0, [x0, #40]
  42f138:	mov	x1, x0
  42f13c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f140:	add	x0, x0, #0x228
  42f144:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f148:	ldr	x0, [sp, #24]
  42f14c:	ldp	x1, x2, [x0, #216]
  42f150:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f154:	add	x0, x0, #0x238
  42f158:	bl	42eeb0 <wcrtomb@plt+0x2a1a0>
  42f15c:	ldr	x0, [sp, #24]
  42f160:	ldp	x1, x2, [x0, #232]
  42f164:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f168:	add	x0, x0, #0x248
  42f16c:	bl	42eeb0 <wcrtomb@plt+0x2a1a0>
  42f170:	ldr	x0, [sp, #24]
  42f174:	ldp	x1, x2, [x0, #248]
  42f178:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f17c:	add	x0, x0, #0x258
  42f180:	bl	42eeb0 <wcrtomb@plt+0x2a1a0>
  42f184:	ldr	x0, [sp, #24]
  42f188:	ldr	x0, [x0, #136]
  42f18c:	mov	x1, x0
  42f190:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f194:	add	x0, x0, #0x268
  42f198:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f19c:	ldr	x0, [sp, #24]
  42f1a0:	ldr	w0, [x0, #112]
  42f1a4:	mov	w0, w0
  42f1a8:	mov	x1, x0
  42f1ac:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f1b0:	add	x0, x0, #0x278
  42f1b4:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f1b8:	ldr	x0, [sp, #24]
  42f1bc:	ldr	w0, [x0, #116]
  42f1c0:	mov	w0, w0
  42f1c4:	mov	x1, x0
  42f1c8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f1cc:	add	x0, x0, #0x280
  42f1d0:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f1d4:	ldrb	w0, [sp, #39]
  42f1d8:	cmp	w0, #0x6c
  42f1dc:	b.eq	42f258 <wcrtomb@plt+0x2a548>  // b.none
  42f1e0:	cmp	w0, #0x6c
  42f1e4:	b.gt	42f28c <wcrtomb@plt+0x2a57c>
  42f1e8:	cmp	w0, #0x63
  42f1ec:	b.gt	42f1fc <wcrtomb@plt+0x2a4ec>
  42f1f0:	cmp	w0, #0x62
  42f1f4:	b.ge	42f208 <wcrtomb@plt+0x2a4f8>  // b.tcont
  42f1f8:	b	42f28c <wcrtomb@plt+0x2a57c>
  42f1fc:	cmp	w0, #0x68
  42f200:	b.eq	42f258 <wcrtomb@plt+0x2a548>  // b.none
  42f204:	b	42f28c <wcrtomb@plt+0x2a57c>
  42f208:	ldr	x0, [sp, #24]
  42f20c:	ldr	x0, [x0, #120]
  42f210:	bl	4049c0 <gnu_dev_minor@plt>
  42f214:	mov	w0, w0
  42f218:	mov	x1, x0
  42f21c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f220:	add	x0, x0, #0x288
  42f224:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f228:	ldr	x0, [sp, #24]
  42f22c:	ldr	x0, [x0, #120]
  42f230:	bl	404750 <gnu_dev_major@plt>
  42f234:	mov	w0, w0
  42f238:	mov	x1, x0
  42f23c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f240:	add	x0, x0, #0x298
  42f244:	bl	42ee64 <wcrtomb@plt+0x2a154>
  42f248:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f24c:	add	x0, x0, #0x2a8
  42f250:	bl	4049f0 <unsetenv@plt>
  42f254:	b	42f2b4 <wcrtomb@plt+0x2a5a4>
  42f258:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f25c:	add	x0, x0, #0x288
  42f260:	bl	4049f0 <unsetenv@plt>
  42f264:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f268:	add	x0, x0, #0x298
  42f26c:	bl	4049f0 <unsetenv@plt>
  42f270:	ldr	x0, [sp, #24]
  42f274:	ldr	x0, [x0, #24]
  42f278:	mov	x1, x0
  42f27c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f280:	add	x0, x0, #0x2a8
  42f284:	bl	42ef50 <wcrtomb@plt+0x2a240>
  42f288:	b	42f2b4 <wcrtomb@plt+0x2a5a4>
  42f28c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f290:	add	x0, x0, #0x288
  42f294:	bl	4049f0 <unsetenv@plt>
  42f298:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f29c:	add	x0, x0, #0x298
  42f2a0:	bl	4049f0 <unsetenv@plt>
  42f2a4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f2a8:	add	x0, x0, #0x2a8
  42f2ac:	bl	4049f0 <unsetenv@plt>
  42f2b0:	nop
  42f2b4:	nop
  42f2b8:	ldp	x29, x30, [sp], #48
  42f2bc:	ret
  42f2c0:	stp	x29, x30, [sp, #-64]!
  42f2c4:	mov	x29, sp
  42f2c8:	str	x0, [sp, #40]
  42f2cc:	str	w1, [sp, #36]
  42f2d0:	str	x2, [sp, #24]
  42f2d4:	add	x0, sp, #0x38
  42f2d8:	bl	42624c <wcrtomb@plt+0x2153c>
  42f2dc:	mov	x1, #0x1                   	// #1
  42f2e0:	mov	w0, #0xd                   	// #13
  42f2e4:	bl	404360 <signal@plt>
  42f2e8:	mov	x1, x0
  42f2ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f2f0:	add	x0, x0, #0xc08
  42f2f4:	str	x1, [x0]
  42f2f8:	bl	426208 <wcrtomb@plt+0x214f8>
  42f2fc:	mov	w1, w0
  42f300:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f304:	add	x0, x0, #0xc00
  42f308:	str	w1, [x0]
  42f30c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f310:	add	x0, x0, #0xc00
  42f314:	ldr	w0, [x0]
  42f318:	cmp	w0, #0x0
  42f31c:	b.eq	42f330 <wcrtomb@plt+0x2a620>  // b.none
  42f320:	ldr	w0, [sp, #56]
  42f324:	bl	406160 <wcrtomb@plt+0x1450>
  42f328:	ldr	w0, [sp, #60]
  42f32c:	b	42f370 <wcrtomb@plt+0x2a660>
  42f330:	ldr	w0, [sp, #56]
  42f334:	mov	w1, #0x0                   	// #0
  42f338:	bl	42df40 <wcrtomb@plt+0x29230>
  42f33c:	ldr	w0, [sp, #60]
  42f340:	bl	406160 <wcrtomb@plt+0x1450>
  42f344:	ldr	w0, [sp, #36]
  42f348:	and	w0, w0, #0xff
  42f34c:	ldr	x2, [sp, #24]
  42f350:	mov	w1, w0
  42f354:	ldr	x0, [sp, #40]
  42f358:	bl	42efe4 <wcrtomb@plt+0x2a2d4>
  42f35c:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42f360:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f364:	add	x0, x0, #0x298
  42f368:	ldr	x0, [x0]
  42f36c:	bl	42d8d0 <wcrtomb@plt+0x28bc0>
  42f370:	ldp	x29, x30, [sp], #64
  42f374:	ret
  42f378:	stp	x29, x30, [sp, #-32]!
  42f37c:	mov	x29, sp
  42f380:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f384:	add	x0, x0, #0xc00
  42f388:	ldr	w0, [x0]
  42f38c:	cmp	w0, #0x0
  42f390:	b.lt	42f5c8 <wcrtomb@plt+0x2a8b8>  // b.tstop
  42f394:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f398:	add	x0, x0, #0xc08
  42f39c:	ldr	x0, [x0]
  42f3a0:	mov	x1, x0
  42f3a4:	mov	w0, #0xd                   	// #13
  42f3a8:	bl	404360 <signal@plt>
  42f3ac:	b	42f3e4 <wcrtomb@plt+0x2a6d4>
  42f3b0:	bl	404bc0 <__errno_location@plt>
  42f3b4:	ldr	w0, [x0]
  42f3b8:	cmp	w0, #0x4
  42f3bc:	b.eq	42f3e4 <wcrtomb@plt+0x2a6d4>  // b.none
  42f3c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f3c4:	add	x0, x0, #0xc00
  42f3c8:	mov	w1, #0xffffffff            	// #-1
  42f3cc:	str	w1, [x0]
  42f3d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f3d4:	add	x0, x0, #0x298
  42f3d8:	ldr	x0, [x0]
  42f3dc:	bl	43acc4 <wcrtomb@plt+0x35fb4>
  42f3e0:	b	42f5cc <wcrtomb@plt+0x2a8bc>
  42f3e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f3e8:	add	x0, x0, #0xc00
  42f3ec:	ldr	w0, [x0]
  42f3f0:	add	x1, sp, #0x1c
  42f3f4:	mov	w2, #0x0                   	// #0
  42f3f8:	bl	404c50 <waitpid@plt>
  42f3fc:	cmn	w0, #0x1
  42f400:	b.eq	42f3b0 <wcrtomb@plt+0x2a6a0>  // b.none
  42f404:	ldr	w0, [sp, #28]
  42f408:	and	w0, w0, #0x7f
  42f40c:	cmp	w0, #0x0
  42f410:	b.ne	42f4bc <wcrtomb@plt+0x2a7ac>  // b.any
  42f414:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f418:	add	x0, x0, #0x271
  42f41c:	ldrb	w0, [x0]
  42f420:	eor	w0, w0, #0x1
  42f424:	and	w0, w0, #0xff
  42f428:	cmp	w0, #0x0
  42f42c:	b.eq	42f5b4 <wcrtomb@plt+0x2a8a4>  // b.none
  42f430:	ldr	w0, [sp, #28]
  42f434:	asr	w0, w0, #8
  42f438:	and	w0, w0, #0xff
  42f43c:	cmp	w0, #0x0
  42f440:	b.eq	42f5b4 <wcrtomb@plt+0x2a8a4>  // b.none
  42f444:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f448:	add	x0, x0, #0x420
  42f44c:	ldr	x0, [x0]
  42f450:	cmp	x0, #0x0
  42f454:	b.eq	42f468 <wcrtomb@plt+0x2a758>  // b.none
  42f458:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f45c:	add	x0, x0, #0x420
  42f460:	ldr	x0, [x0]
  42f464:	blr	x0
  42f468:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f46c:	add	x0, x0, #0x2b8
  42f470:	bl	404c60 <gettext@plt>
  42f474:	mov	x2, x0
  42f478:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f47c:	add	x0, x0, #0xc00
  42f480:	ldr	w0, [x0]
  42f484:	sxtw	x1, w0
  42f488:	ldr	w0, [sp, #28]
  42f48c:	asr	w0, w0, #8
  42f490:	and	w0, w0, #0xff
  42f494:	mov	w4, w0
  42f498:	mov	x3, x1
  42f49c:	mov	w1, #0x0                   	// #0
  42f4a0:	mov	w0, #0x0                   	// #0
  42f4a4:	bl	404100 <error@plt>
  42f4a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f4ac:	add	x0, x0, #0xdb0
  42f4b0:	mov	w1, #0x2                   	// #2
  42f4b4:	str	w1, [x0]
  42f4b8:	b	42f5b4 <wcrtomb@plt+0x2a8a4>
  42f4bc:	ldr	w0, [sp, #28]
  42f4c0:	and	w0, w0, #0xff
  42f4c4:	and	w0, w0, #0x7f
  42f4c8:	and	w0, w0, #0xff
  42f4cc:	add	w0, w0, #0x1
  42f4d0:	and	w0, w0, #0xff
  42f4d4:	sxtb	w0, w0
  42f4d8:	asr	w0, w0, #1
  42f4dc:	sxtb	w0, w0
  42f4e0:	cmp	w0, #0x0
  42f4e4:	b.le	42f54c <wcrtomb@plt+0x2a83c>
  42f4e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f4ec:	add	x0, x0, #0x420
  42f4f0:	ldr	x0, [x0]
  42f4f4:	cmp	x0, #0x0
  42f4f8:	b.eq	42f50c <wcrtomb@plt+0x2a7fc>  // b.none
  42f4fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f500:	add	x0, x0, #0x420
  42f504:	ldr	x0, [x0]
  42f508:	blr	x0
  42f50c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f510:	add	x0, x0, #0x2d8
  42f514:	bl	404c60 <gettext@plt>
  42f518:	mov	x2, x0
  42f51c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f520:	add	x0, x0, #0xc00
  42f524:	ldr	w0, [x0]
  42f528:	sxtw	x1, w0
  42f52c:	ldr	w0, [sp, #28]
  42f530:	and	w0, w0, #0x7f
  42f534:	mov	w4, w0
  42f538:	mov	x3, x1
  42f53c:	mov	w1, #0x0                   	// #0
  42f540:	mov	w0, #0x0                   	// #0
  42f544:	bl	404100 <error@plt>
  42f548:	b	42f5b4 <wcrtomb@plt+0x2a8a4>
  42f54c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f550:	add	x0, x0, #0x420
  42f554:	ldr	x0, [x0]
  42f558:	cmp	x0, #0x0
  42f55c:	b.eq	42f570 <wcrtomb@plt+0x2a860>  // b.none
  42f560:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f564:	add	x0, x0, #0x420
  42f568:	ldr	x0, [x0]
  42f56c:	blr	x0
  42f570:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f574:	add	x0, x0, #0x300
  42f578:	bl	404c60 <gettext@plt>
  42f57c:	mov	x1, x0
  42f580:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f584:	add	x0, x0, #0xc00
  42f588:	ldr	w0, [x0]
  42f58c:	sxtw	x0, w0
  42f590:	mov	x3, x0
  42f594:	mov	x2, x1
  42f598:	mov	w1, #0x0                   	// #0
  42f59c:	mov	w0, #0x0                   	// #0
  42f5a0:	bl	404100 <error@plt>
  42f5a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f5a8:	add	x0, x0, #0xdb0
  42f5ac:	mov	w1, #0x2                   	// #2
  42f5b0:	str	w1, [x0]
  42f5b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f5b8:	add	x0, x0, #0xc00
  42f5bc:	mov	w1, #0xffffffff            	// #-1
  42f5c0:	str	w1, [x0]
  42f5c4:	b	42f5cc <wcrtomb@plt+0x2a8bc>
  42f5c8:	nop
  42f5cc:	ldp	x29, x30, [sp], #32
  42f5d0:	ret
  42f5d4:	stp	x29, x30, [sp, #-112]!
  42f5d8:	mov	x29, sp
  42f5dc:	str	x0, [sp, #24]
  42f5e0:	str	w1, [sp, #20]
  42f5e4:	add	x0, sp, #0x40
  42f5e8:	bl	42624c <wcrtomb@plt+0x2153c>
  42f5ec:	mov	x1, #0x1                   	// #1
  42f5f0:	mov	w0, #0xd                   	// #13
  42f5f4:	bl	404360 <signal@plt>
  42f5f8:	mov	x1, x0
  42f5fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f600:	add	x0, x0, #0xc10
  42f604:	str	x1, [x0]
  42f608:	bl	426208 <wcrtomb@plt+0x214f8>
  42f60c:	str	w0, [sp, #104]
  42f610:	ldr	w0, [sp, #104]
  42f614:	cmp	w0, #0x0
  42f618:	b.eq	42f784 <wcrtomb@plt+0x2aa74>  // b.none
  42f61c:	str	xzr, [sp, #48]
  42f620:	str	xzr, [sp, #40]
  42f624:	ldr	w0, [sp, #68]
  42f628:	bl	406160 <wcrtomb@plt+0x1450>
  42f62c:	ldr	w2, [sp, #64]
  42f630:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f634:	add	x1, x0, #0x328
  42f638:	mov	w0, w2
  42f63c:	bl	4044e0 <fdopen@plt>
  42f640:	str	x0, [sp, #96]
  42f644:	add	x1, sp, #0x28
  42f648:	add	x0, sp, #0x30
  42f64c:	ldr	x2, [sp, #96]
  42f650:	bl	404840 <getline@plt>
  42f654:	str	w0, [sp, #108]
  42f658:	ldr	x0, [sp, #96]
  42f65c:	bl	404380 <fclose@plt>
  42f660:	ldr	w0, [sp, #108]
  42f664:	cmp	w0, #0x0
  42f668:	b.le	42f6e8 <wcrtomb@plt+0x2a9d8>
  42f66c:	ldr	x1, [sp, #48]
  42f670:	ldrsw	x0, [sp, #108]
  42f674:	sub	x0, x0, #0x1
  42f678:	add	x0, x1, x0
  42f67c:	ldrb	w0, [x0]
  42f680:	cmp	w0, #0xa
  42f684:	b.ne	42f6e8 <wcrtomb@plt+0x2a9d8>  // b.any
  42f688:	ldr	x1, [sp, #48]
  42f68c:	ldr	w0, [sp, #108]
  42f690:	sub	w0, w0, #0x1
  42f694:	str	w0, [sp, #108]
  42f698:	ldrsw	x0, [sp, #108]
  42f69c:	add	x0, x1, x0
  42f6a0:	strb	wzr, [x0]
  42f6a4:	b	42f6e8 <wcrtomb@plt+0x2a9d8>
  42f6a8:	bl	404bc0 <__errno_location@plt>
  42f6ac:	ldr	w0, [x0]
  42f6b0:	cmp	w0, #0x4
  42f6b4:	b.eq	42f6e8 <wcrtomb@plt+0x2a9d8>  // b.none
  42f6b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f6bc:	add	x0, x0, #0xc10
  42f6c0:	ldr	x0, [x0]
  42f6c4:	mov	x1, x0
  42f6c8:	mov	w0, #0xd                   	// #13
  42f6cc:	bl	404360 <signal@plt>
  42f6d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f6d4:	add	x0, x0, #0x330
  42f6d8:	ldr	x0, [x0]
  42f6dc:	bl	43acc4 <wcrtomb@plt+0x35fb4>
  42f6e0:	mov	w0, #0xffffffff            	// #-1
  42f6e4:	b	42f8b0 <wcrtomb@plt+0x2aba0>
  42f6e8:	add	x0, sp, #0x3c
  42f6ec:	mov	w2, #0x0                   	// #0
  42f6f0:	mov	x1, x0
  42f6f4:	ldr	w0, [sp, #104]
  42f6f8:	bl	404c50 <waitpid@plt>
  42f6fc:	cmn	w0, #0x1
  42f700:	b.eq	42f6a8 <wcrtomb@plt+0x2a998>  // b.none
  42f704:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42f708:	add	x0, x0, #0xc10
  42f70c:	ldr	x0, [x0]
  42f710:	mov	x1, x0
  42f714:	mov	w0, #0xd                   	// #13
  42f718:	bl	404360 <signal@plt>
  42f71c:	ldr	w0, [sp, #60]
  42f720:	and	w0, w0, #0x7f
  42f724:	cmp	w0, #0x0
  42f728:	b.ne	42f774 <wcrtomb@plt+0x2aa64>  // b.any
  42f72c:	ldr	w0, [sp, #60]
  42f730:	asr	w0, w0, #8
  42f734:	and	w0, w0, #0xff
  42f738:	cmp	w0, #0x0
  42f73c:	b.ne	42f75c <wcrtomb@plt+0x2aa4c>  // b.any
  42f740:	ldr	w0, [sp, #108]
  42f744:	cmp	w0, #0x0
  42f748:	b.le	42f75c <wcrtomb@plt+0x2aa4c>
  42f74c:	ldr	x1, [sp, #48]
  42f750:	ldr	x0, [sp, #24]
  42f754:	str	x1, [x0]
  42f758:	b	42f764 <wcrtomb@plt+0x2aa54>
  42f75c:	ldr	x0, [sp, #48]
  42f760:	bl	404880 <free@plt>
  42f764:	ldr	w0, [sp, #60]
  42f768:	asr	w0, w0, #8
  42f76c:	and	w0, w0, #0xff
  42f770:	b	42f8b0 <wcrtomb@plt+0x2aba0>
  42f774:	ldr	x0, [sp, #48]
  42f778:	bl	404880 <free@plt>
  42f77c:	mov	w0, #0xffffffff            	// #-1
  42f780:	b	42f8b0 <wcrtomb@plt+0x2aba0>
  42f784:	mov	w2, #0x1                   	// #1
  42f788:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f78c:	add	x1, x0, #0x178
  42f790:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f794:	add	x0, x0, #0x180
  42f798:	bl	4041c0 <setenv@plt>
  42f79c:	ldr	x0, [sp, #24]
  42f7a0:	ldr	x0, [x0]
  42f7a4:	mov	w2, #0x1                   	// #1
  42f7a8:	mov	x1, x0
  42f7ac:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f7b0:	add	x0, x0, #0x190
  42f7b4:	bl	4041c0 <setenv@plt>
  42f7b8:	ldrsw	x0, [sp, #20]
  42f7bc:	add	x1, sp, #0x48
  42f7c0:	bl	450988 <argp_usage@@Base+0x789c>
  42f7c4:	mov	w2, #0x1                   	// #1
  42f7c8:	mov	x1, x0
  42f7cc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f7d0:	add	x0, x0, #0x1a0
  42f7d4:	bl	4041c0 <setenv@plt>
  42f7d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f7dc:	add	x0, x0, #0x31c
  42f7e0:	ldr	w0, [x0]
  42f7e4:	sxtw	x0, w0
  42f7e8:	add	x1, sp, #0x48
  42f7ec:	bl	450988 <argp_usage@@Base+0x789c>
  42f7f0:	mov	w2, #0x1                   	// #1
  42f7f4:	mov	x1, x0
  42f7f8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f7fc:	add	x0, x0, #0x1b0
  42f800:	bl	4041c0 <setenv@plt>
  42f804:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f808:	add	x0, x0, #0x38c
  42f80c:	ldr	w0, [x0]
  42f810:	bl	42fe64 <wcrtomb@plt+0x2b154>
  42f814:	mov	w2, #0x1                   	// #1
  42f818:	mov	x1, x0
  42f81c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f820:	add	x0, x0, #0x330
  42f824:	bl	4041c0 <setenv@plt>
  42f828:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f82c:	add	x0, x0, #0x0
  42f830:	ldr	w0, [x0]
  42f834:	cmp	w0, #0x0
  42f838:	b.ne	42f84c <wcrtomb@plt+0x2ab3c>  // b.any
  42f83c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f840:	add	x0, x0, #0x360
  42f844:	ldr	w0, [x0]
  42f848:	b	42f858 <wcrtomb@plt+0x2ab48>
  42f84c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f850:	add	x0, x0, #0x0
  42f854:	ldr	w0, [x0]
  42f858:	bl	42fd78 <wcrtomb@plt+0x2b068>
  42f85c:	mov	w2, #0x1                   	// #1
  42f860:	mov	x1, x0
  42f864:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f868:	add	x0, x0, #0x1c8
  42f86c:	bl	4041c0 <setenv@plt>
  42f870:	ldr	w0, [sp, #68]
  42f874:	sxtw	x0, w0
  42f878:	add	x1, sp, #0x48
  42f87c:	bl	450988 <argp_usage@@Base+0x789c>
  42f880:	mov	w2, #0x1                   	// #1
  42f884:	mov	x1, x0
  42f888:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f88c:	add	x0, x0, #0x340
  42f890:	bl	4041c0 <setenv@plt>
  42f894:	ldr	w0, [sp, #64]
  42f898:	bl	406160 <wcrtomb@plt+0x1450>
  42f89c:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42f8a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f8a4:	add	x0, x0, #0x330
  42f8a8:	ldr	x0, [x0]
  42f8ac:	bl	42d8d0 <wcrtomb@plt+0x28bc0>
  42f8b0:	ldp	x29, x30, [sp], #112
  42f8b4:	ret
  42f8b8:	stp	x29, x30, [sp, #-96]!
  42f8bc:	mov	x29, sp
  42f8c0:	str	x0, [sp, #40]
  42f8c4:	str	x1, [sp, #32]
  42f8c8:	str	w2, [sp, #28]
  42f8cc:	bl	426208 <wcrtomb@plt+0x214f8>
  42f8d0:	str	w0, [sp, #92]
  42f8d4:	ldr	w0, [sp, #92]
  42f8d8:	cmp	w0, #0x0
  42f8dc:	b.eq	42f924 <wcrtomb@plt+0x2ac14>  // b.none
  42f8e0:	b	42f904 <wcrtomb@plt+0x2abf4>
  42f8e4:	bl	404bc0 <__errno_location@plt>
  42f8e8:	ldr	w0, [x0]
  42f8ec:	cmp	w0, #0x4
  42f8f0:	b.eq	42f904 <wcrtomb@plt+0x2abf4>  // b.none
  42f8f4:	ldr	x0, [sp, #40]
  42f8f8:	bl	43acc4 <wcrtomb@plt+0x35fb4>
  42f8fc:	nop
  42f900:	b	42fa14 <wcrtomb@plt+0x2ad04>
  42f904:	add	x0, sp, #0x3c
  42f908:	mov	w2, #0x0                   	// #0
  42f90c:	mov	x1, x0
  42f910:	ldr	w0, [sp, #92]
  42f914:	bl	404c50 <waitpid@plt>
  42f918:	cmn	w0, #0x1
  42f91c:	b.eq	42f8e4 <wcrtomb@plt+0x2abd4>  // b.none
  42f920:	b	42fa14 <wcrtomb@plt+0x2ad04>
  42f924:	mov	w2, #0x1                   	// #1
  42f928:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f92c:	add	x1, x0, #0x178
  42f930:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f934:	add	x0, x0, #0x180
  42f938:	bl	4041c0 <setenv@plt>
  42f93c:	mov	w2, #0x1                   	// #1
  42f940:	ldr	x1, [sp, #32]
  42f944:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f948:	add	x0, x0, #0x190
  42f94c:	bl	4041c0 <setenv@plt>
  42f950:	ldrsw	x0, [sp, #28]
  42f954:	add	x1, sp, #0x40
  42f958:	bl	450988 <argp_usage@@Base+0x789c>
  42f95c:	mov	w2, #0x1                   	// #1
  42f960:	mov	x1, x0
  42f964:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f968:	add	x0, x0, #0x348
  42f96c:	bl	4041c0 <setenv@plt>
  42f970:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f974:	add	x0, x0, #0x31c
  42f978:	ldr	w0, [x0]
  42f97c:	sxtw	x0, w0
  42f980:	add	x1, sp, #0x40
  42f984:	bl	450988 <argp_usage@@Base+0x789c>
  42f988:	mov	w2, #0x1                   	// #1
  42f98c:	mov	x1, x0
  42f990:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f994:	add	x0, x0, #0x1b0
  42f998:	bl	4041c0 <setenv@plt>
  42f99c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f9a0:	add	x0, x0, #0x38c
  42f9a4:	ldr	w0, [x0]
  42f9a8:	bl	42fe64 <wcrtomb@plt+0x2b154>
  42f9ac:	mov	w2, #0x1                   	// #1
  42f9b0:	mov	x1, x0
  42f9b4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42f9b8:	add	x0, x0, #0x330
  42f9bc:	bl	4041c0 <setenv@plt>
  42f9c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f9c4:	add	x0, x0, #0x0
  42f9c8:	ldr	w0, [x0]
  42f9cc:	cmp	w0, #0x0
  42f9d0:	b.ne	42f9e4 <wcrtomb@plt+0x2acd4>  // b.any
  42f9d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f9d8:	add	x0, x0, #0x360
  42f9dc:	ldr	w0, [x0]
  42f9e0:	b	42f9f0 <wcrtomb@plt+0x2ace0>
  42f9e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42f9e8:	add	x0, x0, #0x0
  42f9ec:	ldr	w0, [x0]
  42f9f0:	bl	42fd78 <wcrtomb@plt+0x2b068>
  42f9f4:	mov	w2, #0x1                   	// #1
  42f9f8:	mov	x1, x0
  42f9fc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fa00:	add	x0, x0, #0x1c8
  42fa04:	bl	4041c0 <setenv@plt>
  42fa08:	bl	457c18 <argp_usage@@Base+0xeb2c>
  42fa0c:	ldr	x0, [sp, #40]
  42fa10:	bl	42d8d0 <wcrtomb@plt+0x28bc0>
  42fa14:	ldp	x29, x30, [sp], #96
  42fa18:	ret
  42fa1c:	stp	x29, x30, [sp, #-32]!
  42fa20:	mov	x29, sp
  42fa24:	str	x0, [sp, #24]
  42fa28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fa2c:	add	x0, x0, #0xc28
  42fa30:	ldr	x0, [x0]
  42fa34:	cmp	x0, #0x0
  42fa38:	b.eq	42fa9c <wcrtomb@plt+0x2ad8c>  // b.none
  42fa3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fa40:	add	x0, x0, #0x420
  42fa44:	ldr	x0, [x0]
  42fa48:	cmp	x0, #0x0
  42fa4c:	b.eq	42fa60 <wcrtomb@plt+0x2ad50>  // b.none
  42fa50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fa54:	add	x0, x0, #0x420
  42fa58:	ldr	x0, [x0]
  42fa5c:	blr	x0
  42fa60:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fa64:	add	x0, x0, #0x368
  42fa68:	bl	404c60 <gettext@plt>
  42fa6c:	mov	x1, x0
  42fa70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fa74:	add	x0, x0, #0xc28
  42fa78:	ldr	x0, [x0]
  42fa7c:	ldr	x4, [sp, #24]
  42fa80:	mov	x3, x0
  42fa84:	mov	x2, x1
  42fa88:	mov	w1, #0x0                   	// #0
  42fa8c:	mov	w0, #0x0                   	// #0
  42fa90:	bl	404100 <error@plt>
  42fa94:	mov	w0, #0x2                   	// #2
  42fa98:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  42fa9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42faa0:	add	x0, x0, #0xc28
  42faa4:	ldr	x1, [sp, #24]
  42faa8:	str	x1, [x0]
  42faac:	nop
  42fab0:	ldp	x29, x30, [sp], #32
  42fab4:	ret
  42fab8:	stp	x29, x30, [sp, #-80]!
  42fabc:	mov	x29, sp
  42fac0:	str	x19, [sp, #16]
  42fac4:	str	x0, [sp, #40]
  42fac8:	str	x1, [sp, #32]
  42facc:	strb	wzr, [sp, #79]
  42fad0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fad4:	add	x0, x0, #0xcb0
  42fad8:	ldr	x0, [x0]
  42fadc:	cmp	x0, #0x0
  42fae0:	b.ne	42fb74 <wcrtomb@plt+0x2ae64>  // b.any
  42fae4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fae8:	add	x0, x0, #0x400
  42faec:	ldr	w0, [x0]
  42faf0:	cmp	w0, #0x0
  42faf4:	b.eq	42fb0c <wcrtomb@plt+0x2adfc>  // b.none
  42faf8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fafc:	add	x0, x0, #0xc28
  42fb00:	ldr	x0, [x0]
  42fb04:	cmp	x0, #0x0
  42fb08:	b.eq	42fb50 <wcrtomb@plt+0x2ae40>  // b.none
  42fb0c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fb10:	add	x1, x0, #0x398
  42fb14:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fb18:	add	x0, x0, #0x3a0
  42fb1c:	bl	4043d0 <fopen@plt>
  42fb20:	mov	x1, x0
  42fb24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fb28:	add	x0, x0, #0xcb0
  42fb2c:	str	x1, [x0]
  42fb30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fb34:	add	x0, x0, #0xcb0
  42fb38:	ldr	x0, [x0]
  42fb3c:	cmp	x0, #0x0
  42fb40:	b.ne	42fb74 <wcrtomb@plt+0x2ae64>  // b.any
  42fb44:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fb48:	add	x0, x0, #0x3a0
  42fb4c:	bl	43a640 <wcrtomb@plt+0x35930>
  42fb50:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fb54:	add	x0, x0, #0x3b0
  42fb58:	bl	42fa1c <wcrtomb@plt+0x2ad0c>
  42fb5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fb60:	add	x0, x0, #0x4a8
  42fb64:	ldr	x1, [x0]
  42fb68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fb6c:	add	x0, x0, #0xcb0
  42fb70:	str	x1, [x0]
  42fb74:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fb78:	add	x0, x0, #0xf88
  42fb7c:	ldr	x19, [x0]
  42fb80:	ldr	x0, [sp, #32]
  42fb84:	bl	459f38 <argp_usage@@Base+0x10e4c>
  42fb88:	mov	x3, x0
  42fb8c:	ldr	x2, [sp, #40]
  42fb90:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fb94:	add	x1, x0, #0x3b8
  42fb98:	mov	x0, x19
  42fb9c:	bl	404c90 <fprintf@plt>
  42fba0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fba4:	add	x0, x0, #0xf88
  42fba8:	ldr	x0, [x0]
  42fbac:	bl	404990 <fflush_unlocked@plt>
  42fbb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fbb4:	add	x0, x0, #0xcb8
  42fbb8:	ldr	w0, [x0]
  42fbbc:	cmp	w0, #0x0
  42fbc0:	b.ne	42fc1c <wcrtomb@plt+0x2af0c>  // b.any
  42fbc4:	str	xzr, [sp, #64]
  42fbc8:	str	xzr, [sp, #56]
  42fbcc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fbd0:	add	x0, x0, #0xcb0
  42fbd4:	ldr	x2, [x0]
  42fbd8:	add	x1, sp, #0x38
  42fbdc:	add	x0, sp, #0x40
  42fbe0:	bl	404840 <getline@plt>
  42fbe4:	cmp	x0, #0x0
  42fbe8:	b.ge	42fc00 <wcrtomb@plt+0x2aef0>  // b.tcont
  42fbec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fbf0:	add	x0, x0, #0xcb8
  42fbf4:	mov	w1, #0x1                   	// #1
  42fbf8:	str	w1, [x0]
  42fbfc:	b	42fc14 <wcrtomb@plt+0x2af04>
  42fc00:	ldr	x0, [sp, #64]
  42fc04:	bl	404120 <rpmatch@plt>
  42fc08:	cmp	w0, #0x0
  42fc0c:	cset	w0, gt
  42fc10:	strb	w0, [sp, #79]
  42fc14:	ldr	x0, [sp, #64]
  42fc18:	bl	404880 <free@plt>
  42fc1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fc20:	add	x0, x0, #0xcb8
  42fc24:	ldr	w0, [x0]
  42fc28:	cmp	w0, #0x0
  42fc2c:	b.eq	42fc58 <wcrtomb@plt+0x2af48>  // b.none
  42fc30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fc34:	add	x0, x0, #0xf88
  42fc38:	ldr	x0, [x0]
  42fc3c:	mov	x1, x0
  42fc40:	mov	w0, #0xa                   	// #10
  42fc44:	bl	404a40 <fputc_unlocked@plt>
  42fc48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  42fc4c:	add	x0, x0, #0xf88
  42fc50:	ldr	x0, [x0]
  42fc54:	bl	404990 <fflush_unlocked@plt>
  42fc58:	ldrb	w0, [sp, #79]
  42fc5c:	ldr	x19, [sp, #16]
  42fc60:	ldp	x29, x30, [sp], #80
  42fc64:	ret
  42fc68:	stp	x29, x30, [sp, #-64]!
  42fc6c:	mov	x29, sp
  42fc70:	str	x19, [sp, #16]
  42fc74:	str	x0, [sp, #40]
  42fc78:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fc7c:	add	x0, x0, #0x3f0
  42fc80:	str	x0, [sp, #56]
  42fc84:	b	42fcfc <wcrtomb@plt+0x2afec>
  42fc88:	ldr	x0, [sp, #56]
  42fc8c:	add	x0, x0, #0x10
  42fc90:	str	x0, [sp, #56]
  42fc94:	ldr	x0, [sp, #56]
  42fc98:	ldr	x0, [x0]
  42fc9c:	cmp	x0, #0x0
  42fca0:	b.ne	42fcfc <wcrtomb@plt+0x2afec>  // b.any
  42fca4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fca8:	add	x0, x0, #0x420
  42fcac:	ldr	x0, [x0]
  42fcb0:	cmp	x0, #0x0
  42fcb4:	b.eq	42fcc8 <wcrtomb@plt+0x2afb8>  // b.none
  42fcb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fcbc:	add	x0, x0, #0x420
  42fcc0:	ldr	x0, [x0]
  42fcc4:	blr	x0
  42fcc8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fccc:	add	x0, x0, #0x460
  42fcd0:	bl	404c60 <gettext@plt>
  42fcd4:	mov	x19, x0
  42fcd8:	ldr	x0, [sp, #40]
  42fcdc:	bl	459cd8 <argp_usage@@Base+0x10bec>
  42fce0:	mov	x3, x0
  42fce4:	mov	x2, x19
  42fce8:	mov	w1, #0x0                   	// #0
  42fcec:	mov	w0, #0x0                   	// #0
  42fcf0:	bl	404100 <error@plt>
  42fcf4:	mov	w0, #0x2                   	// #2
  42fcf8:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  42fcfc:	ldr	x0, [sp, #56]
  42fd00:	ldr	x0, [x0]
  42fd04:	ldr	x1, [sp, #40]
  42fd08:	bl	4047c0 <strcmp@plt>
  42fd0c:	cmp	w0, #0x0
  42fd10:	b.ne	42fc88 <wcrtomb@plt+0x2af78>  // b.any
  42fd14:	ldr	x0, [sp, #56]
  42fd18:	ldr	w1, [x0, #8]
  42fd1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fd20:	add	x0, x0, #0x360
  42fd24:	str	w1, [x0]
  42fd28:	nop
  42fd2c:	ldr	x19, [sp, #16]
  42fd30:	ldp	x29, x30, [sp], #64
  42fd34:	ret
  42fd38:	stp	x29, x30, [sp, #-32]!
  42fd3c:	mov	x29, sp
  42fd40:	str	w0, [sp, #28]
  42fd44:	ldr	w0, [sp, #28]
  42fd48:	cmp	w0, #0x1
  42fd4c:	b.ne	42fd5c <wcrtomb@plt+0x2b04c>  // b.any
  42fd50:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fd54:	add	x0, x0, #0x3d8
  42fd58:	bl	42fc68 <wcrtomb@plt+0x2af58>
  42fd5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fd60:	add	x0, x0, #0x2c0
  42fd64:	ldr	w1, [sp, #28]
  42fd68:	str	w1, [x0]
  42fd6c:	nop
  42fd70:	ldp	x29, x30, [sp], #32
  42fd74:	ret
  42fd78:	sub	sp, sp, #0x20
  42fd7c:	str	w0, [sp, #12]
  42fd80:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fd84:	add	x0, x0, #0x3f0
  42fd88:	str	x0, [sp, #24]
  42fd8c:	b	42fdbc <wcrtomb@plt+0x2b0ac>
  42fd90:	ldr	x0, [sp, #24]
  42fd94:	ldr	w0, [x0, #8]
  42fd98:	ldr	w1, [sp, #12]
  42fd9c:	cmp	w1, w0
  42fda0:	b.ne	42fdb0 <wcrtomb@plt+0x2b0a0>  // b.any
  42fda4:	ldr	x0, [sp, #24]
  42fda8:	ldr	x0, [x0]
  42fdac:	b	42fdd4 <wcrtomb@plt+0x2b0c4>
  42fdb0:	ldr	x0, [sp, #24]
  42fdb4:	add	x0, x0, #0x10
  42fdb8:	str	x0, [sp, #24]
  42fdbc:	ldr	x0, [sp, #24]
  42fdc0:	ldr	x0, [x0]
  42fdc4:	cmp	x0, #0x0
  42fdc8:	b.ne	42fd90 <wcrtomb@plt+0x2b080>  // b.any
  42fdcc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fdd0:	add	x0, x0, #0x480
  42fdd4:	add	sp, sp, #0x20
  42fdd8:	ret
  42fddc:	stp	x29, x30, [sp, #-32]!
  42fde0:	mov	x29, sp
  42fde4:	str	w0, [sp, #28]
  42fde8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fdec:	add	x0, x0, #0x360
  42fdf0:	ldr	w0, [x0]
  42fdf4:	mov	w1, #0x1                   	// #1
  42fdf8:	lsl	w0, w1, w0
  42fdfc:	mov	w1, w0
  42fe00:	ldr	w0, [sp, #28]
  42fe04:	and	w0, w1, w0
  42fe08:	cmp	w0, #0x0
  42fe0c:	b.ne	42fe58 <wcrtomb@plt+0x2b148>  // b.any
  42fe10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fe14:	add	x0, x0, #0x420
  42fe18:	ldr	x0, [x0]
  42fe1c:	cmp	x0, #0x0
  42fe20:	b.eq	42fe34 <wcrtomb@plt+0x2b124>  // b.none
  42fe24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  42fe28:	add	x0, x0, #0x420
  42fe2c:	ldr	x0, [x0]
  42fe30:	blr	x0
  42fe34:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42fe38:	add	x0, x0, #0x490
  42fe3c:	bl	404c60 <gettext@plt>
  42fe40:	mov	x2, x0
  42fe44:	mov	w1, #0x0                   	// #0
  42fe48:	mov	w0, #0x0                   	// #0
  42fe4c:	bl	404100 <error@plt>
  42fe50:	mov	w0, #0x2                   	// #2
  42fe54:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  42fe58:	nop
  42fe5c:	ldp	x29, x30, [sp], #32
  42fe60:	ret
  42fe64:	stp	x29, x30, [sp, #-32]!
  42fe68:	mov	x29, sp
  42fe6c:	str	w0, [sp, #28]
  42fe70:	ldr	w0, [sp, #28]
  42fe74:	cmp	w0, #0x9
  42fe78:	b.eq	42ffb8 <wcrtomb@plt+0x2b2a8>  // b.none
  42fe7c:	ldr	w0, [sp, #28]
  42fe80:	cmp	w0, #0x9
  42fe84:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42fe88:	ldr	w0, [sp, #28]
  42fe8c:	cmp	w0, #0x8
  42fe90:	b.eq	42ffac <wcrtomb@plt+0x2b29c>  // b.none
  42fe94:	ldr	w0, [sp, #28]
  42fe98:	cmp	w0, #0x8
  42fe9c:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42fea0:	ldr	w0, [sp, #28]
  42fea4:	cmp	w0, #0x7
  42fea8:	b.eq	42ffa0 <wcrtomb@plt+0x2b290>  // b.none
  42feac:	ldr	w0, [sp, #28]
  42feb0:	cmp	w0, #0x7
  42feb4:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42feb8:	ldr	w0, [sp, #28]
  42febc:	cmp	w0, #0x6
  42fec0:	b.eq	42ff94 <wcrtomb@plt+0x2b284>  // b.none
  42fec4:	ldr	w0, [sp, #28]
  42fec8:	cmp	w0, #0x6
  42fecc:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42fed0:	ldr	w0, [sp, #28]
  42fed4:	cmp	w0, #0x5
  42fed8:	b.eq	42ff88 <wcrtomb@plt+0x2b278>  // b.none
  42fedc:	ldr	w0, [sp, #28]
  42fee0:	cmp	w0, #0x5
  42fee4:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42fee8:	ldr	w0, [sp, #28]
  42feec:	cmp	w0, #0x4
  42fef0:	b.eq	42ff7c <wcrtomb@plt+0x2b26c>  // b.none
  42fef4:	ldr	w0, [sp, #28]
  42fef8:	cmp	w0, #0x4
  42fefc:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42ff00:	ldr	w0, [sp, #28]
  42ff04:	cmp	w0, #0x3
  42ff08:	b.eq	42ff70 <wcrtomb@plt+0x2b260>  // b.none
  42ff0c:	ldr	w0, [sp, #28]
  42ff10:	cmp	w0, #0x3
  42ff14:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42ff18:	ldr	w0, [sp, #28]
  42ff1c:	cmp	w0, #0x2
  42ff20:	b.eq	42ff64 <wcrtomb@plt+0x2b254>  // b.none
  42ff24:	ldr	w0, [sp, #28]
  42ff28:	cmp	w0, #0x2
  42ff2c:	b.hi	42ffc4 <wcrtomb@plt+0x2b2b4>  // b.pmore
  42ff30:	ldr	w0, [sp, #28]
  42ff34:	cmp	w0, #0x0
  42ff38:	b.eq	42ff4c <wcrtomb@plt+0x2b23c>  // b.none
  42ff3c:	ldr	w0, [sp, #28]
  42ff40:	cmp	w0, #0x1
  42ff44:	b.eq	42ff58 <wcrtomb@plt+0x2b248>  // b.none
  42ff48:	b	42ffc4 <wcrtomb@plt+0x2b2b4>
  42ff4c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff50:	add	x0, x0, #0x480
  42ff54:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ff58:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff5c:	add	x0, x0, #0x4c8
  42ff60:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ff64:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff68:	add	x0, x0, #0x4d0
  42ff6c:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ff70:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff74:	add	x0, x0, #0x4d8
  42ff78:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ff7c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff80:	add	x0, x0, #0x4e0
  42ff84:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ff88:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff8c:	add	x0, x0, #0x4e8
  42ff90:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ff94:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ff98:	add	x0, x0, #0x4f0
  42ff9c:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ffa0:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ffa4:	add	x0, x0, #0x4f8
  42ffa8:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ffac:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ffb0:	add	x0, x0, #0x500
  42ffb4:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ffb8:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  42ffbc:	add	x0, x0, #0x508
  42ffc0:	b	42ffc8 <wcrtomb@plt+0x2b2b8>
  42ffc4:	bl	404710 <abort@plt>
  42ffc8:	ldp	x29, x30, [sp], #32
  42ffcc:	ret
  42ffd0:	stp	x29, x30, [sp, #-112]!
  42ffd4:	mov	x29, sp
  42ffd8:	str	x0, [sp, #24]
  42ffdc:	str	x1, [sp, #16]
  42ffe0:	ldr	x0, [sp, #16]
  42ffe4:	bl	4040b0 <strlen@plt>
  42ffe8:	str	x0, [sp, #96]
  42ffec:	str	wzr, [sp, #108]
  42fff0:	b	430160 <wcrtomb@plt+0x2b450>
  42fff4:	ldr	x0, [sp, #24]
  42fff8:	str	x0, [sp, #88]
  42fffc:	ldr	x0, [sp, #96]
  430000:	str	x0, [sp, #80]
  430004:	ldr	x0, [sp, #88]
  430008:	str	x0, [sp, #72]
  43000c:	ldr	x0, [sp, #72]
  430010:	ldr	x1, [x0, #32]
  430014:	ldr	x0, [sp, #72]
  430018:	ldr	x0, [x0, #24]
  43001c:	sub	x0, x1, x0
  430020:	mov	x1, x0
  430024:	ldr	x0, [sp, #80]
  430028:	cmp	x1, x0
  43002c:	b.cs	43003c <wcrtomb@plt+0x2b32c>  // b.hs, b.nlast
  430030:	ldr	x1, [sp, #80]
  430034:	ldr	x0, [sp, #88]
  430038:	bl	45cdc0 <_obstack_newchunk@@Base>
  43003c:	ldr	x0, [sp, #88]
  430040:	ldr	x0, [x0, #24]
  430044:	ldr	x2, [sp, #80]
  430048:	ldr	x1, [sp, #16]
  43004c:	bl	404020 <memcpy@plt>
  430050:	ldr	x0, [sp, #88]
  430054:	ldr	x1, [x0, #24]
  430058:	ldr	x0, [sp, #80]
  43005c:	add	x1, x1, x0
  430060:	ldr	x0, [sp, #88]
  430064:	str	x1, [x0, #24]
  430068:	ldr	x0, [sp, #24]
  43006c:	str	x0, [sp, #64]
  430070:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  430074:	add	x0, x0, #0xc38
  430078:	ldrsw	x1, [sp, #108]
  43007c:	ldr	x0, [x0, x1, lsl #3]
  430080:	bl	4040b0 <strlen@plt>
  430084:	str	x0, [sp, #56]
  430088:	ldr	x0, [sp, #64]
  43008c:	str	x0, [sp, #48]
  430090:	ldr	x0, [sp, #48]
  430094:	ldr	x1, [x0, #32]
  430098:	ldr	x0, [sp, #48]
  43009c:	ldr	x0, [x0, #24]
  4300a0:	sub	x0, x1, x0
  4300a4:	mov	x1, x0
  4300a8:	ldr	x0, [sp, #56]
  4300ac:	cmp	x1, x0
  4300b0:	b.cs	4300c0 <wcrtomb@plt+0x2b3b0>  // b.hs, b.nlast
  4300b4:	ldr	x1, [sp, #56]
  4300b8:	ldr	x0, [sp, #64]
  4300bc:	bl	45cdc0 <_obstack_newchunk@@Base>
  4300c0:	ldr	x0, [sp, #64]
  4300c4:	ldr	x3, [x0, #24]
  4300c8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4300cc:	add	x0, x0, #0xc38
  4300d0:	ldrsw	x1, [sp, #108]
  4300d4:	ldr	x0, [x0, x1, lsl #3]
  4300d8:	ldr	x2, [sp, #56]
  4300dc:	mov	x1, x0
  4300e0:	mov	x0, x3
  4300e4:	bl	404020 <memcpy@plt>
  4300e8:	ldr	x0, [sp, #64]
  4300ec:	ldr	x1, [x0, #24]
  4300f0:	ldr	x0, [sp, #56]
  4300f4:	add	x1, x1, x0
  4300f8:	ldr	x0, [sp, #64]
  4300fc:	str	x1, [x0, #24]
  430100:	ldr	x0, [sp, #24]
  430104:	str	x0, [sp, #40]
  430108:	ldr	x0, [sp, #40]
  43010c:	str	x0, [sp, #32]
  430110:	ldr	x0, [sp, #32]
  430114:	ldr	x1, [x0, #32]
  430118:	ldr	x0, [sp, #32]
  43011c:	ldr	x0, [x0, #24]
  430120:	sub	x0, x1, x0
  430124:	cmp	x0, #0x0
  430128:	b.ne	430138 <wcrtomb@plt+0x2b428>  // b.any
  43012c:	mov	x1, #0x1                   	// #1
  430130:	ldr	x0, [sp, #40]
  430134:	bl	45cdc0 <_obstack_newchunk@@Base>
  430138:	ldr	x0, [sp, #40]
  43013c:	ldr	x0, [x0, #24]
  430140:	add	x2, x0, #0x1
  430144:	ldr	x1, [sp, #40]
  430148:	str	x2, [x1, #24]
  43014c:	mov	w1, #0xa                   	// #10
  430150:	strb	w1, [x0]
  430154:	ldr	w0, [sp, #108]
  430158:	add	w0, w0, #0x1
  43015c:	str	w0, [sp, #108]
  430160:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  430164:	add	x0, x0, #0xc38
  430168:	ldrsw	x1, [sp, #108]
  43016c:	ldr	x0, [x0, x1, lsl #3]
  430170:	cmp	x0, #0x0
  430174:	b.ne	42fff4 <wcrtomb@plt+0x2b2e4>  // b.any
  430178:	nop
  43017c:	nop
  430180:	ldp	x29, x30, [sp], #112
  430184:	ret
  430188:	stp	x29, x30, [sp, #-48]!
  43018c:	mov	x29, sp
  430190:	str	x0, [sp, #24]
  430194:	str	wzr, [sp, #44]
  430198:	b	4301e0 <wcrtomb@plt+0x2b4d0>
  43019c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4301a0:	add	x0, x0, #0xc38
  4301a4:	ldrsw	x1, [sp, #44]
  4301a8:	ldr	x0, [x0, x1, lsl #3]
  4301ac:	mov	x1, x0
  4301b0:	ldr	x0, [sp, #24]
  4301b4:	bl	4047c0 <strcmp@plt>
  4301b8:	cmp	w0, #0x0
  4301bc:	b.ne	4301d4 <wcrtomb@plt+0x2b4c4>  // b.any
  4301c0:	ldr	w0, [sp, #44]
  4301c4:	mov	w1, w0
  4301c8:	mov	x0, #0x0                   	// #0
  4301cc:	bl	457dc0 <argp_usage@@Base+0xecd4>
  4301d0:	b	430254 <wcrtomb@plt+0x2b544>
  4301d4:	ldr	w0, [sp, #44]
  4301d8:	add	w0, w0, #0x1
  4301dc:	str	w0, [sp, #44]
  4301e0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4301e4:	add	x0, x0, #0xc38
  4301e8:	ldrsw	x1, [sp, #44]
  4301ec:	ldr	x0, [x0, x1, lsl #3]
  4301f0:	cmp	x0, #0x0
  4301f4:	b.ne	43019c <wcrtomb@plt+0x2b48c>  // b.any
  4301f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4301fc:	add	x0, x0, #0x420
  430200:	ldr	x0, [x0]
  430204:	cmp	x0, #0x0
  430208:	b.eq	43021c <wcrtomb@plt+0x2b50c>  // b.none
  43020c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430210:	add	x0, x0, #0x420
  430214:	ldr	x0, [x0]
  430218:	blr	x0
  43021c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  430220:	add	x0, x0, #0x518
  430224:	bl	404c60 <gettext@plt>
  430228:	mov	x1, x0
  43022c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  430230:	add	x0, x0, #0xe08
  430234:	ldr	x0, [x0]
  430238:	mov	x4, x0
  43023c:	ldr	x3, [sp, #24]
  430240:	mov	x2, x1
  430244:	mov	w1, #0x0                   	// #0
  430248:	mov	w0, #0x0                   	// #0
  43024c:	bl	404100 <error@plt>
  430250:	bl	412ae0 <wcrtomb@plt+0xddd0>
  430254:	ldp	x29, x30, [sp], #48
  430258:	ret
  43025c:	stp	x29, x30, [sp, #-16]!
  430260:	mov	x29, sp
  430264:	mov	w0, #0x6                   	// #6
  430268:	bl	42fd78 <wcrtomb@plt+0x2b068>
  43026c:	mov	x6, x0
  430270:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  430274:	add	x0, x0, #0xc38
  430278:	ldr	x1, [x0, #56]
  43027c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430280:	add	x5, x0, #0xc50
  430284:	mov	x4, x1
  430288:	mov	w3, #0x14                  	// #20
  43028c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430290:	add	x2, x0, #0xc68
  430294:	mov	x1, x6
  430298:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  43029c:	add	x0, x0, #0xc70
  4302a0:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  4302a4:	ldp	x29, x30, [sp], #16
  4302a8:	ret
  4302ac:	stp	x29, x30, [sp, #-32]!
  4302b0:	mov	x29, sp
  4302b4:	str	x0, [sp, #24]
  4302b8:	str	x1, [sp, #16]
  4302bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4302c0:	add	x0, x0, #0x420
  4302c4:	ldr	x0, [x0]
  4302c8:	cmp	x0, #0x0
  4302cc:	b.eq	4302e0 <wcrtomb@plt+0x2b5d0>  // b.none
  4302d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4302d4:	add	x0, x0, #0x420
  4302d8:	ldr	x0, [x0]
  4302dc:	blr	x0
  4302e0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4302e4:	add	x0, x0, #0xcb0
  4302e8:	bl	404c60 <gettext@plt>
  4302ec:	ldr	x4, [sp, #16]
  4302f0:	ldr	x3, [sp, #24]
  4302f4:	mov	x2, x0
  4302f8:	mov	w1, #0x0                   	// #0
  4302fc:	mov	w0, #0x0                   	// #0
  430300:	bl	404100 <error@plt>
  430304:	mov	w0, #0x2                   	// #2
  430308:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  43030c:	stp	x29, x30, [sp, #-64]!
  430310:	mov	x29, sp
  430314:	str	w0, [sp, #28]
  430318:	str	x1, [sp, #16]
  43031c:	ldr	w0, [sp, #28]
  430320:	cmp	w0, #0x9
  430324:	b.ls	43032c <wcrtomb@plt+0x2b61c>  // b.plast
  430328:	bl	404710 <abort@plt>
  43032c:	mov	x0, #0x20                  	// #32
  430330:	str	x0, [sp, #56]
  430334:	ldr	x0, [sp, #16]
  430338:	ldr	x0, [x0, #8]
  43033c:	cmp	x0, #0x0
  430340:	b.eq	430364 <wcrtomb@plt+0x2b654>  // b.none
  430344:	ldr	x0, [sp, #16]
  430348:	ldr	x0, [x0, #8]
  43034c:	bl	4040b0 <strlen@plt>
  430350:	mov	x1, x0
  430354:	ldr	x0, [sp, #56]
  430358:	add	x0, x1, x0
  43035c:	add	x0, x0, #0x1
  430360:	str	x0, [sp, #56]
  430364:	ldr	x0, [sp, #56]
  430368:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  43036c:	str	x0, [sp, #48]
  430370:	ldr	x0, [sp, #16]
  430374:	ldr	x0, [x0, #8]
  430378:	cmp	x0, #0x0
  43037c:	b.eq	4303b0 <wcrtomb@plt+0x2b6a0>  // b.none
  430380:	ldr	x0, [sp, #48]
  430384:	add	x0, x0, #0x20
  430388:	str	x0, [sp, #40]
  43038c:	ldr	x0, [sp, #16]
  430390:	ldr	x0, [x0, #8]
  430394:	mov	x1, x0
  430398:	ldr	x0, [sp, #40]
  43039c:	bl	4049d0 <strcpy@plt>
  4303a0:	ldr	x0, [sp, #48]
  4303a4:	ldr	x1, [sp, #40]
  4303a8:	str	x1, [x0, #8]
  4303ac:	b	4303b8 <wcrtomb@plt+0x2b6a8>
  4303b0:	ldr	x0, [sp, #48]
  4303b4:	str	xzr, [x0, #8]
  4303b8:	ldr	x0, [sp, #16]
  4303bc:	ldr	w1, [x0]
  4303c0:	ldr	x0, [sp, #48]
  4303c4:	str	w1, [x0]
  4303c8:	ldr	x0, [sp, #16]
  4303cc:	ldr	x1, [x0, #16]
  4303d0:	ldr	x0, [sp, #48]
  4303d4:	str	x1, [x0, #16]
  4303d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4303dc:	add	x0, x0, #0xc30
  4303e0:	ldr	w1, [sp, #28]
  4303e4:	ldr	x1, [x0, x1, lsl #3]
  4303e8:	ldr	x0, [sp, #48]
  4303ec:	str	x1, [x0, #24]
  4303f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4303f4:	add	x0, x0, #0xc30
  4303f8:	ldr	w1, [sp, #28]
  4303fc:	ldr	x2, [sp, #48]
  430400:	str	x2, [x0, x1, lsl #3]
  430404:	ldr	x0, [sp, #48]
  430408:	ldr	x0, [x0, #24]
  43040c:	ldp	x29, x30, [sp], #64
  430410:	ret
  430414:	sub	sp, sp, #0x10
  430418:	str	w0, [sp, #12]
  43041c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  430420:	add	x0, x0, #0xc30
  430424:	ldrsw	x1, [sp, #12]
  430428:	ldr	x0, [x0, x1, lsl #3]
  43042c:	add	sp, sp, #0x10
  430430:	ret
  430434:	stp	x29, x30, [sp, #-48]!
  430438:	mov	x29, sp
  43043c:	str	w0, [sp, #28]
  430440:	ldr	w0, [sp, #28]
  430444:	bl	430414 <wcrtomb@plt+0x2b704>
  430448:	str	x0, [sp, #40]
  43044c:	ldr	x0, [sp, #40]
  430450:	cmp	x0, #0x0
  430454:	b.ne	430460 <wcrtomb@plt+0x2b750>  // b.any
  430458:	mov	w0, #0x0                   	// #0
  43045c:	b	430474 <wcrtomb@plt+0x2b764>
  430460:	ldr	x0, [sp, #40]
  430464:	ldr	w0, [x0]
  430468:	cmp	w0, #0x1
  43046c:	cset	w0, eq  // eq = none
  430470:	and	w0, w0, #0xff
  430474:	ldp	x29, x30, [sp], #48
  430478:	ret
  43047c:	stp	x29, x30, [sp, #-32]!
  430480:	mov	x29, sp
  430484:	str	x0, [sp, #24]
  430488:	str	x1, [sp, #16]
  43048c:	ldr	x0, [sp, #24]
  430490:	ldr	w1, [x0]
  430494:	ldr	x0, [sp, #16]
  430498:	ldr	w0, [x0]
  43049c:	cmp	w1, w0
  4304a0:	b.eq	4304ac <wcrtomb@plt+0x2b79c>  // b.none
  4304a4:	mov	w0, #0x0                   	// #0
  4304a8:	b	4304ec <wcrtomb@plt+0x2b7dc>
  4304ac:	ldr	x0, [sp, #24]
  4304b0:	ldr	w0, [x0]
  4304b4:	cmp	w0, #0x1
  4304b8:	b.ne	4304c4 <wcrtomb@plt+0x2b7b4>  // b.any
  4304bc:	mov	w0, #0x1                   	// #1
  4304c0:	b	4304ec <wcrtomb@plt+0x2b7dc>
  4304c4:	ldr	x0, [sp, #24]
  4304c8:	ldr	x2, [x0, #8]
  4304cc:	ldr	x0, [sp, #16]
  4304d0:	ldr	x0, [x0, #8]
  4304d4:	mov	x1, x0
  4304d8:	mov	x0, x2
  4304dc:	bl	4047c0 <strcmp@plt>
  4304e0:	cmp	w0, #0x0
  4304e4:	cset	w0, eq  // eq = none
  4304e8:	and	w0, w0, #0xff
  4304ec:	ldp	x29, x30, [sp], #32
  4304f0:	ret
  4304f4:	stp	x29, x30, [sp, #-32]!
  4304f8:	mov	x29, sp
  4304fc:	str	w0, [sp, #28]
  430500:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430504:	add	x0, x0, #0x38c
  430508:	ldr	w0, [x0]
  43050c:	cmp	w0, #0x0
  430510:	b.eq	430574 <wcrtomb@plt+0x2b864>  // b.none
  430514:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430518:	add	x0, x0, #0x38c
  43051c:	ldr	w0, [x0]
  430520:	ldr	w1, [sp, #28]
  430524:	cmp	w1, w0
  430528:	b.eq	430574 <wcrtomb@plt+0x2b864>  // b.none
  43052c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430530:	add	x0, x0, #0x420
  430534:	ldr	x0, [x0]
  430538:	cmp	x0, #0x0
  43053c:	b.eq	430550 <wcrtomb@plt+0x2b840>  // b.none
  430540:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430544:	add	x0, x0, #0x420
  430548:	ldr	x0, [x0]
  43054c:	blr	x0
  430550:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430554:	add	x0, x0, #0xcd0
  430558:	bl	404c60 <gettext@plt>
  43055c:	mov	x2, x0
  430560:	mov	w1, #0x0                   	// #0
  430564:	mov	w0, #0x0                   	// #0
  430568:	bl	404100 <error@plt>
  43056c:	mov	w0, #0x2                   	// #2
  430570:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  430574:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430578:	add	x0, x0, #0x38c
  43057c:	ldr	w1, [sp, #28]
  430580:	str	w1, [x0]
  430584:	nop
  430588:	ldp	x29, x30, [sp], #32
  43058c:	ret
  430590:	stp	x29, x30, [sp, #-48]!
  430594:	mov	x29, sp
  430598:	str	x0, [sp, #24]
  43059c:	str	x1, [sp, #16]
  4305a0:	ldr	x1, [sp, #16]
  4305a4:	mov	w0, #0x0                   	// #0
  4305a8:	bl	43030c <wcrtomb@plt+0x2b5fc>
  4305ac:	str	x0, [sp, #40]
  4305b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4305b4:	add	x0, x0, #0x3b8
  4305b8:	ldr	x0, [x0]
  4305bc:	cmp	x0, #0x0
  4305c0:	b.eq	430638 <wcrtomb@plt+0x2b928>  // b.none
  4305c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4305c8:	add	x0, x0, #0x3b8
  4305cc:	ldr	x0, [x0]
  4305d0:	ldr	x1, [sp, #24]
  4305d4:	bl	4047c0 <strcmp@plt>
  4305d8:	cmp	w0, #0x0
  4305dc:	b.eq	430638 <wcrtomb@plt+0x2b928>  // b.none
  4305e0:	ldr	x0, [sp, #40]
  4305e4:	ldr	w0, [x0]
  4305e8:	cmp	w0, #0x1
  4305ec:	b.ne	430638 <wcrtomb@plt+0x2b928>  // b.any
  4305f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4305f4:	add	x0, x0, #0x420
  4305f8:	ldr	x0, [x0]
  4305fc:	cmp	x0, #0x0
  430600:	b.eq	430614 <wcrtomb@plt+0x2b904>  // b.none
  430604:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430608:	add	x0, x0, #0x420
  43060c:	ldr	x0, [x0]
  430610:	blr	x0
  430614:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430618:	add	x0, x0, #0xd28
  43061c:	bl	404c60 <gettext@plt>
  430620:	mov	x2, x0
  430624:	mov	w1, #0x0                   	// #0
  430628:	mov	w0, #0x0                   	// #0
  43062c:	bl	404100 <error@plt>
  430630:	mov	w0, #0x2                   	// #2
  430634:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  430638:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43063c:	add	x0, x0, #0x3b8
  430640:	ldr	x1, [sp, #24]
  430644:	str	x1, [x0]
  430648:	nop
  43064c:	ldp	x29, x30, [sp], #48
  430650:	ret
  430654:	stp	x29, x30, [sp, #-32]!
  430658:	mov	x29, sp
  43065c:	str	w0, [sp, #28]
  430660:	bl	4052c4 <wcrtomb@plt+0x5b4>
  430664:	bl	405f40 <wcrtomb@plt+0x1230>
  430668:	adrp	x0, 430000 <wcrtomb@plt+0x2b2f0>
  43066c:	add	x1, x0, #0x654
  430670:	ldr	w0, [sp, #28]
  430674:	bl	404360 <signal@plt>
  430678:	nop
  43067c:	ldp	x29, x30, [sp], #32
  430680:	ret
  430684:	stp	x29, x30, [sp, #-32]!
  430688:	mov	x29, sp
  43068c:	str	w0, [sp, #28]
  430690:	adrp	x0, 430000 <wcrtomb@plt+0x2b2f0>
  430694:	add	x1, x0, #0x654
  430698:	ldr	w0, [sp, #28]
  43069c:	bl	404360 <signal@plt>
  4306a0:	nop
  4306a4:	ldp	x29, x30, [sp], #32
  4306a8:	ret
  4306ac:	stp	x29, x30, [sp, #-48]!
  4306b0:	mov	x29, sp
  4306b4:	str	x0, [sp, #24]
  4306b8:	ldr	x0, [sp, #24]
  4306bc:	str	x0, [sp, #32]
  4306c0:	mov	x2, #0x3                   	// #3
  4306c4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4306c8:	add	x1, x0, #0xd48
  4306cc:	ldr	x0, [sp, #32]
  4306d0:	bl	404480 <strncmp@plt>
  4306d4:	cmp	w0, #0x0
  4306d8:	b.ne	4306e8 <wcrtomb@plt+0x2b9d8>  // b.any
  4306dc:	ldr	x0, [sp, #32]
  4306e0:	add	x0, x0, #0x3
  4306e4:	str	x0, [sp, #32]
  4306e8:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4306ec:	add	x0, x0, #0xcc0
  4306f0:	str	x0, [sp, #40]
  4306f4:	b	430728 <wcrtomb@plt+0x2ba18>
  4306f8:	ldr	x0, [sp, #40]
  4306fc:	ldr	x0, [x0]
  430700:	ldr	x1, [sp, #32]
  430704:	bl	4047c0 <strcmp@plt>
  430708:	cmp	w0, #0x0
  43070c:	b.ne	43071c <wcrtomb@plt+0x2ba0c>  // b.any
  430710:	ldr	x0, [sp, #40]
  430714:	ldr	w0, [x0, #8]
  430718:	b	430784 <wcrtomb@plt+0x2ba74>
  43071c:	ldr	x0, [sp, #40]
  430720:	add	x0, x0, #0x10
  430724:	str	x0, [sp, #40]
  430728:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43072c:	add	x0, x0, #0xd10
  430730:	ldr	x1, [sp, #40]
  430734:	cmp	x1, x0
  430738:	b.cc	4306f8 <wcrtomb@plt+0x2b9e8>  // b.lo, b.ul, b.last
  43073c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430740:	add	x0, x0, #0x420
  430744:	ldr	x0, [x0]
  430748:	cmp	x0, #0x0
  43074c:	b.eq	430760 <wcrtomb@plt+0x2ba50>  // b.none
  430750:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430754:	add	x0, x0, #0x420
  430758:	ldr	x0, [x0]
  43075c:	blr	x0
  430760:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430764:	add	x0, x0, #0xd50
  430768:	bl	404c60 <gettext@plt>
  43076c:	ldr	x3, [sp, #24]
  430770:	mov	x2, x0
  430774:	mov	w1, #0x0                   	// #0
  430778:	mov	w0, #0x0                   	// #0
  43077c:	bl	404100 <error@plt>
  430780:	bl	412ae0 <wcrtomb@plt+0xddd0>
  430784:	ldp	x29, x30, [sp], #48
  430788:	ret
  43078c:	stp	x29, x30, [sp, #-32]!
  430790:	mov	x29, sp
  430794:	str	x0, [sp, #24]
  430798:	ldr	x0, [sp, #24]
  43079c:	bl	4306ac <wcrtomb@plt+0x2b99c>
  4307a0:	bl	430684 <wcrtomb@plt+0x2b974>
  4307a4:	nop
  4307a8:	ldp	x29, x30, [sp], #32
  4307ac:	ret
  4307b0:	stp	x29, x30, [sp, #-208]!
  4307b4:	mov	x29, sp
  4307b8:	stp	x19, x20, [sp, #16]
  4307bc:	str	x0, [sp, #56]
  4307c0:	str	x1, [sp, #48]
  4307c4:	str	x2, [sp, #40]
  4307c8:	str	x3, [sp, #32]
  4307cc:	ldr	x0, [sp, #40]
  4307d0:	ldrb	w0, [x0]
  4307d4:	cmp	w0, #0x2f
  4307d8:	b.eq	4307ec <wcrtomb@plt+0x2badc>  // b.none
  4307dc:	ldr	x0, [sp, #40]
  4307e0:	ldrb	w0, [x0]
  4307e4:	cmp	w0, #0x2e
  4307e8:	b.ne	430868 <wcrtomb@plt+0x2bb58>  // b.any
  4307ec:	add	x0, sp, #0x48
  4307f0:	mov	x1, x0
  4307f4:	ldr	x0, [sp, #40]
  4307f8:	bl	47ec60 <_obstack_memory_used@@Base+0x21b20>
  4307fc:	cmp	w0, #0x0
  430800:	b.eq	430854 <wcrtomb@plt+0x2bb44>  // b.none
  430804:	ldr	x0, [sp, #40]
  430808:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  43080c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430810:	add	x0, x0, #0x420
  430814:	ldr	x0, [x0]
  430818:	cmp	x0, #0x0
  43081c:	b.eq	430830 <wcrtomb@plt+0x2bb20>  // b.none
  430820:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430824:	add	x0, x0, #0x420
  430828:	ldr	x0, [x0]
  43082c:	blr	x0
  430830:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430834:	add	x0, x0, #0xd68
  430838:	bl	404c60 <gettext@plt>
  43083c:	mov	x2, x0
  430840:	mov	w1, #0x0                   	// #0
  430844:	mov	w0, #0x0                   	// #0
  430848:	bl	404100 <error@plt>
  43084c:	mov	w0, #0x2                   	// #2
  430850:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  430854:	add	x0, sp, #0x48
  430858:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  43085c:	ldr	x2, [sp, #32]
  430860:	stp	x0, x1, [x2]
  430864:	b	43095c <wcrtomb@plt+0x2bc4c>
  430868:	mov	x2, #0x0                   	// #0
  43086c:	ldr	x1, [sp, #40]
  430870:	ldr	x0, [sp, #32]
  430874:	bl	456164 <argp_usage@@Base+0xd078>
  430878:	and	w0, w0, #0xff
  43087c:	eor	w0, w0, #0x1
  430880:	and	w0, w0, #0xff
  430884:	cmp	w0, #0x0
  430888:	b.eq	430904 <wcrtomb@plt+0x2bbf4>  // b.none
  43088c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430890:	add	x0, x0, #0x420
  430894:	ldr	x0, [x0]
  430898:	cmp	x0, #0x0
  43089c:	b.eq	4308b0 <wcrtomb@plt+0x2bba0>  // b.none
  4308a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4308a4:	add	x0, x0, #0x420
  4308a8:	ldr	x0, [x0]
  4308ac:	blr	x0
  4308b0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4308b4:	add	x0, x0, #0xd88
  4308b8:	bl	404c60 <gettext@plt>
  4308bc:	mov	x19, x0
  4308c0:	ldr	x0, [sp, #32]
  4308c4:	mov	w2, #0x0                   	// #0
  4308c8:	ldp	x0, x1, [x0]
  4308cc:	bl	422310 <wcrtomb@plt+0x1d600>
  4308d0:	mov	x20, x0
  4308d4:	ldr	x0, [sp, #40]
  4308d8:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4308dc:	mov	x4, x0
  4308e0:	mov	x3, x20
  4308e4:	mov	x2, x19
  4308e8:	mov	w1, #0x0                   	// #0
  4308ec:	mov	w0, #0x0                   	// #0
  4308f0:	bl	404100 <error@plt>
  4308f4:	ldr	x0, [sp, #32]
  4308f8:	str	xzr, [x0, #8]
  4308fc:	mov	w0, #0x1                   	// #1
  430900:	b	430960 <wcrtomb@plt+0x2bc50>
  430904:	mov	x0, #0x28                  	// #40
  430908:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  43090c:	str	x0, [sp, #200]
  430910:	ldr	x2, [sp, #200]
  430914:	ldr	x0, [sp, #32]
  430918:	ldp	x0, x1, [x0]
  43091c:	stp	x0, x1, [x2, #8]
  430920:	ldr	x0, [sp, #200]
  430924:	ldr	x1, [sp, #48]
  430928:	str	x1, [x0, #24]
  43092c:	ldr	x0, [sp, #40]
  430930:	bl	45b858 <argp_usage@@Base+0x1276c>
  430934:	mov	x1, x0
  430938:	ldr	x0, [sp, #200]
  43093c:	str	x1, [x0, #32]
  430940:	ldr	x0, [sp, #56]
  430944:	ldr	x1, [x0, #8]
  430948:	ldr	x0, [sp, #200]
  43094c:	str	x1, [x0]
  430950:	ldr	x0, [sp, #56]
  430954:	ldr	x1, [sp, #200]
  430958:	str	x1, [x0, #8]
  43095c:	mov	w0, #0x0                   	// #0
  430960:	ldp	x19, x20, [sp, #16]
  430964:	ldp	x29, x30, [sp], #208
  430968:	ret
  43096c:	stp	x29, x30, [sp, #-64]!
  430970:	mov	x29, sp
  430974:	str	x0, [sp, #24]
  430978:	ldr	x0, [sp, #24]
  43097c:	ldr	x0, [x0, #8]
  430980:	str	x0, [sp, #56]
  430984:	b	430a4c <wcrtomb@plt+0x2bd3c>
  430988:	ldr	x0, [sp, #56]
  43098c:	ldr	x0, [x0]
  430990:	str	x0, [sp, #48]
  430994:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  430998:	add	x0, x0, #0x2b4
  43099c:	ldr	w0, [x0]
  4309a0:	cmp	w0, #0x0
  4309a4:	b.eq	430a30 <wcrtomb@plt+0x2bd20>  // b.none
  4309a8:	ldr	x0, [sp, #56]
  4309ac:	mov	w2, #0x1                   	// #1
  4309b0:	ldp	x0, x1, [x0, #8]
  4309b4:	bl	422310 <wcrtomb@plt+0x1d600>
  4309b8:	str	x0, [sp, #40]
  4309bc:	ldr	x0, [sp, #56]
  4309c0:	ldr	x0, [x0, #32]
  4309c4:	ldr	x1, [sp, #40]
  4309c8:	bl	4047c0 <strcmp@plt>
  4309cc:	cmp	w0, #0x0
  4309d0:	b.eq	430a30 <wcrtomb@plt+0x2bd20>  // b.none
  4309d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4309d8:	add	x0, x0, #0x420
  4309dc:	ldr	x0, [x0]
  4309e0:	cmp	x0, #0x0
  4309e4:	b.eq	4309f8 <wcrtomb@plt+0x2bce8>  // b.none
  4309e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4309ec:	add	x0, x0, #0x420
  4309f0:	ldr	x0, [x0]
  4309f4:	blr	x0
  4309f8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4309fc:	add	x0, x0, #0xdb8
  430a00:	bl	404c60 <gettext@plt>
  430a04:	mov	x2, x0
  430a08:	ldr	x0, [sp, #56]
  430a0c:	ldr	x1, [x0, #24]
  430a10:	ldr	x0, [sp, #56]
  430a14:	ldr	x0, [x0, #32]
  430a18:	ldr	x5, [sp, #40]
  430a1c:	mov	x4, x0
  430a20:	mov	x3, x1
  430a24:	mov	w1, #0x0                   	// #0
  430a28:	mov	w0, #0x0                   	// #0
  430a2c:	bl	404100 <error@plt>
  430a30:	ldr	x0, [sp, #56]
  430a34:	ldr	x0, [x0, #32]
  430a38:	bl	404880 <free@plt>
  430a3c:	ldr	x0, [sp, #56]
  430a40:	bl	404880 <free@plt>
  430a44:	ldr	x0, [sp, #48]
  430a48:	str	x0, [sp, #56]
  430a4c:	ldr	x0, [sp, #56]
  430a50:	cmp	x0, #0x0
  430a54:	b.ne	430988 <wcrtomb@plt+0x2bc78>  // b.any
  430a58:	nop
  430a5c:	nop
  430a60:	ldp	x29, x30, [sp], #64
  430a64:	ret
  430a68:	stp	x29, x30, [sp, #-320]!
  430a6c:	mov	x29, sp
  430a70:	str	w0, [sp, #44]
  430a74:	str	x1, [sp, #32]
  430a78:	str	x2, [sp, #24]
  430a7c:	ldr	w1, [sp, #44]
  430a80:	mov	w0, #0x4                   	// #4
  430a84:	movk	w0, #0x200, lsl #16
  430a88:	cmp	w1, w0
  430a8c:	b.eq	430c98 <wcrtomb@plt+0x2bf88>  // b.none
  430a90:	ldr	w1, [sp, #44]
  430a94:	mov	w0, #0x4                   	// #4
  430a98:	movk	w0, #0x200, lsl #16
  430a9c:	cmp	w1, w0
  430aa0:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430aa4:	ldr	w0, [sp, #44]
  430aa8:	cmp	w0, #0x14f
  430aac:	b.eq	430c70 <wcrtomb@plt+0x2bf60>  // b.none
  430ab0:	ldr	w0, [sp, #44]
  430ab4:	cmp	w0, #0x14f
  430ab8:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430abc:	ldr	w0, [sp, #44]
  430ac0:	cmp	w0, #0x116
  430ac4:	b.eq	430c20 <wcrtomb@plt+0x2bf10>  // b.none
  430ac8:	ldr	w0, [sp, #44]
  430acc:	cmp	w0, #0x116
  430ad0:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430ad4:	ldr	w0, [sp, #44]
  430ad8:	cmp	w0, #0x115
  430adc:	b.eq	430bf8 <wcrtomb@plt+0x2bee8>  // b.none
  430ae0:	ldr	w0, [sp, #44]
  430ae4:	cmp	w0, #0x115
  430ae8:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430aec:	ldr	w0, [sp, #44]
  430af0:	cmp	w0, #0x114
  430af4:	b.eq	430bd0 <wcrtomb@plt+0x2bec0>  // b.none
  430af8:	ldr	w0, [sp, #44]
  430afc:	cmp	w0, #0x114
  430b00:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430b04:	ldr	w0, [sp, #44]
  430b08:	cmp	w0, #0x7a
  430b0c:	b.eq	430b80 <wcrtomb@plt+0x2be70>  // b.none
  430b10:	ldr	w0, [sp, #44]
  430b14:	cmp	w0, #0x7a
  430b18:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430b1c:	ldr	w0, [sp, #44]
  430b20:	cmp	w0, #0x6a
  430b24:	b.eq	430b58 <wcrtomb@plt+0x2be48>  // b.none
  430b28:	ldr	w0, [sp, #44]
  430b2c:	cmp	w0, #0x6a
  430b30:	b.gt	430b4c <wcrtomb@plt+0x2be3c>
  430b34:	ldr	w0, [sp, #44]
  430b38:	cmp	w0, #0x4a
  430b3c:	b.eq	430c48 <wcrtomb@plt+0x2bf38>  // b.none
  430b40:	ldr	w0, [sp, #44]
  430b44:	cmp	w0, #0x5a
  430b48:	b.eq	430ba8 <wcrtomb@plt+0x2be98>  // b.none
  430b4c:	ldr	x0, [sp, #32]
  430b50:	str	x0, [sp, #312]
  430b54:	b	4310ac <wcrtomb@plt+0x2c39c>
  430b58:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430b5c:	add	x0, x0, #0xde0
  430b60:	bl	404c60 <gettext@plt>
  430b64:	mov	x2, x0
  430b68:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430b6c:	add	x1, x0, #0x1c0
  430b70:	mov	x0, x2
  430b74:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430b78:	str	x0, [sp, #312]
  430b7c:	b	4310ac <wcrtomb@plt+0x2c39c>
  430b80:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430b84:	add	x0, x0, #0xde0
  430b88:	bl	404c60 <gettext@plt>
  430b8c:	mov	x2, x0
  430b90:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430b94:	add	x1, x0, #0x1c8
  430b98:	mov	x0, x2
  430b9c:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430ba0:	str	x0, [sp, #312]
  430ba4:	b	4310ac <wcrtomb@plt+0x2c39c>
  430ba8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430bac:	add	x0, x0, #0xde0
  430bb0:	bl	404c60 <gettext@plt>
  430bb4:	mov	x2, x0
  430bb8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430bbc:	add	x1, x0, #0x1e0
  430bc0:	mov	x0, x2
  430bc4:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430bc8:	str	x0, [sp, #312]
  430bcc:	b	4310ac <wcrtomb@plt+0x2c39c>
  430bd0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430bd4:	add	x0, x0, #0xde0
  430bd8:	bl	404c60 <gettext@plt>
  430bdc:	mov	x2, x0
  430be0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430be4:	add	x1, x0, #0x200
  430be8:	mov	x0, x2
  430bec:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430bf0:	str	x0, [sp, #312]
  430bf4:	b	4310ac <wcrtomb@plt+0x2c39c>
  430bf8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430bfc:	add	x0, x0, #0xde0
  430c00:	bl	404c60 <gettext@plt>
  430c04:	mov	x2, x0
  430c08:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c0c:	add	x1, x0, #0x208
  430c10:	mov	x0, x2
  430c14:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430c18:	str	x0, [sp, #312]
  430c1c:	b	4310ac <wcrtomb@plt+0x2c39c>
  430c20:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c24:	add	x0, x0, #0xde0
  430c28:	bl	404c60 <gettext@plt>
  430c2c:	mov	x2, x0
  430c30:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c34:	add	x1, x0, #0x210
  430c38:	mov	x0, x2
  430c3c:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430c40:	str	x0, [sp, #312]
  430c44:	b	4310ac <wcrtomb@plt+0x2c39c>
  430c48:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c4c:	add	x0, x0, #0xde0
  430c50:	bl	404c60 <gettext@plt>
  430c54:	mov	x2, x0
  430c58:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c5c:	add	x1, x0, #0x218
  430c60:	mov	x0, x2
  430c64:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430c68:	str	x0, [sp, #312]
  430c6c:	b	4310ac <wcrtomb@plt+0x2c39c>
  430c70:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c74:	add	x0, x0, #0xde0
  430c78:	bl	404c60 <gettext@plt>
  430c7c:	mov	x2, x0
  430c80:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430c84:	add	x1, x0, #0x220
  430c88:	mov	x0, x2
  430c8c:	bl	45bf38 <argp_usage@@Base+0x12e4c>
  430c90:	str	x0, [sp, #312]
  430c94:	b	4310ac <wcrtomb@plt+0x2c39c>
  430c98:	add	x5, sp, #0x38
  430c9c:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  430ca0:	add	x4, x0, #0x880
  430ca4:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  430ca8:	add	x3, x0, #0x6a4
  430cac:	mov	x2, #0x0                   	// #0
  430cb0:	mov	x1, #0x0                   	// #0
  430cb4:	mov	x0, x5
  430cb8:	bl	45ccf8 <_obstack_begin@@Base>
  430cbc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430cc0:	add	x0, x0, #0xe00
  430cc4:	bl	404c60 <gettext@plt>
  430cc8:	str	x0, [sp, #304]
  430ccc:	add	x0, sp, #0x38
  430cd0:	str	x0, [sp, #296]
  430cd4:	ldr	x0, [sp, #304]
  430cd8:	bl	4040b0 <strlen@plt>
  430cdc:	str	x0, [sp, #288]
  430ce0:	ldr	x0, [sp, #296]
  430ce4:	str	x0, [sp, #280]
  430ce8:	ldr	x0, [sp, #280]
  430cec:	ldr	x1, [x0, #32]
  430cf0:	ldr	x0, [sp, #280]
  430cf4:	ldr	x0, [x0, #24]
  430cf8:	sub	x0, x1, x0
  430cfc:	mov	x1, x0
  430d00:	ldr	x0, [sp, #288]
  430d04:	cmp	x1, x0
  430d08:	b.cs	430d18 <wcrtomb@plt+0x2c008>  // b.hs, b.nlast
  430d0c:	ldr	x1, [sp, #288]
  430d10:	ldr	x0, [sp, #296]
  430d14:	bl	45cdc0 <_obstack_newchunk@@Base>
  430d18:	ldr	x0, [sp, #296]
  430d1c:	ldr	x0, [x0, #24]
  430d20:	ldr	x2, [sp, #288]
  430d24:	ldr	x1, [sp, #304]
  430d28:	bl	404020 <memcpy@plt>
  430d2c:	ldr	x0, [sp, #296]
  430d30:	ldr	x1, [x0, #24]
  430d34:	ldr	x0, [sp, #288]
  430d38:	add	x1, x1, x0
  430d3c:	ldr	x0, [sp, #296]
  430d40:	str	x1, [x0, #24]
  430d44:	add	x0, sp, #0x38
  430d48:	str	x0, [sp, #272]
  430d4c:	mov	x0, #0x2                   	// #2
  430d50:	str	x0, [sp, #264]
  430d54:	ldr	x0, [sp, #272]
  430d58:	str	x0, [sp, #256]
  430d5c:	ldr	x0, [sp, #256]
  430d60:	ldr	x1, [x0, #32]
  430d64:	ldr	x0, [sp, #256]
  430d68:	ldr	x0, [x0, #24]
  430d6c:	sub	x0, x1, x0
  430d70:	mov	x1, x0
  430d74:	ldr	x0, [sp, #264]
  430d78:	cmp	x1, x0
  430d7c:	b.cs	430d8c <wcrtomb@plt+0x2c07c>  // b.hs, b.nlast
  430d80:	ldr	x1, [sp, #264]
  430d84:	ldr	x0, [sp, #272]
  430d88:	bl	45cdc0 <_obstack_newchunk@@Base>
  430d8c:	ldr	x0, [sp, #272]
  430d90:	ldr	x3, [x0, #24]
  430d94:	ldr	x2, [sp, #264]
  430d98:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430d9c:	add	x1, x0, #0xe38
  430da0:	mov	x0, x3
  430da4:	bl	404020 <memcpy@plt>
  430da8:	ldr	x0, [sp, #272]
  430dac:	ldr	x1, [x0, #24]
  430db0:	ldr	x0, [sp, #264]
  430db4:	add	x1, x1, x0
  430db8:	ldr	x0, [sp, #272]
  430dbc:	str	x1, [x0, #24]
  430dc0:	add	x2, sp, #0x38
  430dc4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430dc8:	add	x1, x0, #0xe40
  430dcc:	mov	x0, x2
  430dd0:	bl	42ffd0 <wcrtomb@plt+0x2b2c0>
  430dd4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  430dd8:	add	x0, x0, #0xe48
  430ddc:	bl	404c60 <gettext@plt>
  430de0:	str	x0, [sp, #304]
  430de4:	add	x0, sp, #0x38
  430de8:	str	x0, [sp, #248]
  430dec:	ldr	x0, [sp, #304]
  430df0:	bl	4040b0 <strlen@plt>
  430df4:	str	x0, [sp, #240]
  430df8:	ldr	x0, [sp, #248]
  430dfc:	str	x0, [sp, #232]
  430e00:	ldr	x0, [sp, #232]
  430e04:	ldr	x1, [x0, #32]
  430e08:	ldr	x0, [sp, #232]
  430e0c:	ldr	x0, [x0, #24]
  430e10:	sub	x0, x1, x0
  430e14:	mov	x1, x0
  430e18:	ldr	x0, [sp, #240]
  430e1c:	cmp	x1, x0
  430e20:	b.cs	430e30 <wcrtomb@plt+0x2c120>  // b.hs, b.nlast
  430e24:	ldr	x1, [sp, #240]
  430e28:	ldr	x0, [sp, #248]
  430e2c:	bl	45cdc0 <_obstack_newchunk@@Base>
  430e30:	ldr	x0, [sp, #248]
  430e34:	ldr	x0, [x0, #24]
  430e38:	ldr	x2, [sp, #240]
  430e3c:	ldr	x1, [sp, #304]
  430e40:	bl	404020 <memcpy@plt>
  430e44:	ldr	x0, [sp, #248]
  430e48:	ldr	x1, [x0, #24]
  430e4c:	ldr	x0, [sp, #240]
  430e50:	add	x1, x1, x0
  430e54:	ldr	x0, [sp, #248]
  430e58:	str	x1, [x0, #24]
  430e5c:	bl	43025c <wcrtomb@plt+0x2b54c>
  430e60:	str	x0, [sp, #312]
  430e64:	add	x0, sp, #0x38
  430e68:	str	x0, [sp, #224]
  430e6c:	ldr	x0, [sp, #312]
  430e70:	bl	4040b0 <strlen@plt>
  430e74:	str	x0, [sp, #216]
  430e78:	ldr	x0, [sp, #224]
  430e7c:	str	x0, [sp, #208]
  430e80:	ldr	x0, [sp, #208]
  430e84:	ldr	x1, [x0, #32]
  430e88:	ldr	x0, [sp, #208]
  430e8c:	ldr	x0, [x0, #24]
  430e90:	sub	x0, x1, x0
  430e94:	mov	x1, x0
  430e98:	ldr	x0, [sp, #216]
  430e9c:	cmp	x1, x0
  430ea0:	b.cs	430eb0 <wcrtomb@plt+0x2c1a0>  // b.hs, b.nlast
  430ea4:	ldr	x1, [sp, #216]
  430ea8:	ldr	x0, [sp, #224]
  430eac:	bl	45cdc0 <_obstack_newchunk@@Base>
  430eb0:	ldr	x0, [sp, #224]
  430eb4:	ldr	x0, [x0, #24]
  430eb8:	ldr	x2, [sp, #216]
  430ebc:	ldr	x1, [sp, #312]
  430ec0:	bl	404020 <memcpy@plt>
  430ec4:	ldr	x0, [sp, #224]
  430ec8:	ldr	x1, [x0, #24]
  430ecc:	ldr	x0, [sp, #216]
  430ed0:	add	x1, x1, x0
  430ed4:	ldr	x0, [sp, #224]
  430ed8:	str	x1, [x0, #24]
  430edc:	add	x0, sp, #0x38
  430ee0:	str	x0, [sp, #200]
  430ee4:	ldr	x0, [sp, #200]
  430ee8:	str	x0, [sp, #192]
  430eec:	ldr	x0, [sp, #192]
  430ef0:	ldr	x1, [x0, #32]
  430ef4:	ldr	x0, [sp, #192]
  430ef8:	ldr	x0, [x0, #24]
  430efc:	sub	x0, x1, x0
  430f00:	cmp	x0, #0x0
  430f04:	b.ne	430f14 <wcrtomb@plt+0x2c204>  // b.any
  430f08:	mov	x1, #0x1                   	// #1
  430f0c:	ldr	x0, [sp, #200]
  430f10:	bl	45cdc0 <_obstack_newchunk@@Base>
  430f14:	ldr	x0, [sp, #200]
  430f18:	ldr	x0, [x0, #24]
  430f1c:	add	x2, x0, #0x1
  430f20:	ldr	x1, [sp, #200]
  430f24:	str	x2, [x1, #24]
  430f28:	mov	w1, #0xa                   	// #10
  430f2c:	strb	w1, [x0]
  430f30:	add	x0, sp, #0x38
  430f34:	str	x0, [sp, #184]
  430f38:	ldr	x0, [sp, #184]
  430f3c:	str	x0, [sp, #176]
  430f40:	ldr	x0, [sp, #176]
  430f44:	ldr	x1, [x0, #32]
  430f48:	ldr	x0, [sp, #176]
  430f4c:	ldr	x0, [x0, #24]
  430f50:	sub	x0, x1, x0
  430f54:	cmp	x0, #0x0
  430f58:	b.ne	430f68 <wcrtomb@plt+0x2c258>  // b.any
  430f5c:	mov	x1, #0x1                   	// #1
  430f60:	ldr	x0, [sp, #184]
  430f64:	bl	45cdc0 <_obstack_newchunk@@Base>
  430f68:	ldr	x0, [sp, #184]
  430f6c:	ldr	x0, [x0, #24]
  430f70:	add	x2, x0, #0x1
  430f74:	ldr	x1, [sp, #184]
  430f78:	str	x2, [x1, #24]
  430f7c:	strb	wzr, [x0]
  430f80:	add	x0, sp, #0x38
  430f84:	str	x0, [sp, #168]
  430f88:	ldr	x0, [sp, #168]
  430f8c:	ldr	x0, [x0, #16]
  430f90:	str	x0, [sp, #160]
  430f94:	ldr	x0, [sp, #168]
  430f98:	ldr	x0, [x0, #24]
  430f9c:	ldr	x1, [sp, #160]
  430fa0:	cmp	x1, x0
  430fa4:	b.ne	430fb8 <wcrtomb@plt+0x2c2a8>  // b.any
  430fa8:	ldr	x0, [sp, #168]
  430fac:	ldrb	w1, [x0, #80]
  430fb0:	orr	w1, w1, #0x2
  430fb4:	strb	w1, [x0, #80]
  430fb8:	ldr	x0, [sp, #168]
  430fbc:	ldr	x0, [x0, #24]
  430fc0:	mov	x1, x0
  430fc4:	ldr	x0, [sp, #168]
  430fc8:	ldr	x0, [x0, #48]
  430fcc:	add	x1, x1, x0
  430fd0:	ldr	x0, [sp, #168]
  430fd4:	ldr	x0, [x0, #48]
  430fd8:	mvn	x0, x0
  430fdc:	and	x0, x1, x0
  430fe0:	mov	x1, x0
  430fe4:	ldr	x0, [sp, #168]
  430fe8:	str	x1, [x0, #24]
  430fec:	ldr	x0, [sp, #168]
  430ff0:	ldr	x1, [x0, #24]
  430ff4:	ldr	x0, [sp, #168]
  430ff8:	ldr	x0, [x0, #8]
  430ffc:	sub	x0, x1, x0
  431000:	mov	x2, x0
  431004:	ldr	x0, [sp, #168]
  431008:	ldr	x1, [x0, #32]
  43100c:	ldr	x0, [sp, #168]
  431010:	ldr	x0, [x0, #8]
  431014:	sub	x0, x1, x0
  431018:	cmp	x2, x0
  43101c:	b.ls	431030 <wcrtomb@plt+0x2c320>  // b.plast
  431020:	ldr	x0, [sp, #168]
  431024:	ldr	x1, [x0, #32]
  431028:	ldr	x0, [sp, #168]
  43102c:	str	x1, [x0, #24]
  431030:	ldr	x0, [sp, #168]
  431034:	ldr	x1, [x0, #24]
  431038:	ldr	x0, [sp, #168]
  43103c:	str	x1, [x0, #16]
  431040:	ldr	x0, [sp, #160]
  431044:	bl	45b858 <argp_usage@@Base+0x1276c>
  431048:	str	x0, [sp, #312]
  43104c:	add	x0, sp, #0x38
  431050:	str	x0, [sp, #152]
  431054:	str	xzr, [sp, #144]
  431058:	ldr	x0, [sp, #152]
  43105c:	ldr	x0, [x0, #8]
  431060:	ldr	x1, [sp, #144]
  431064:	cmp	x1, x0
  431068:	b.ls	4310a0 <wcrtomb@plt+0x2c390>  // b.plast
  43106c:	ldr	x0, [sp, #152]
  431070:	ldr	x0, [x0, #32]
  431074:	ldr	x1, [sp, #144]
  431078:	cmp	x1, x0
  43107c:	b.cs	4310a0 <wcrtomb@plt+0x2c390>  // b.hs, b.nlast
  431080:	ldr	x0, [sp, #152]
  431084:	ldr	x1, [sp, #144]
  431088:	str	x1, [x0, #16]
  43108c:	ldr	x0, [sp, #152]
  431090:	ldr	x1, [x0, #16]
  431094:	ldr	x0, [sp, #152]
  431098:	str	x1, [x0, #24]
  43109c:	b	4310ac <wcrtomb@plt+0x2c39c>
  4310a0:	ldr	x1, [sp, #144]
  4310a4:	ldr	x0, [sp, #152]
  4310a8:	bl	45d05c <_obstack_free@@Base>
  4310ac:	ldr	x0, [sp, #312]
  4310b0:	ldp	x29, x30, [sp], #320
  4310b4:	ret
  4310b8:	stp	x29, x30, [sp, #-400]!
  4310bc:	mov	x29, sp
  4310c0:	str	x0, [sp, #24]
  4310c4:	str	x1, [sp, #16]
  4310c8:	add	x5, sp, #0x50
  4310cc:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  4310d0:	add	x4, x0, #0x880
  4310d4:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  4310d8:	add	x3, x0, #0x6a4
  4310dc:	mov	x2, #0x0                   	// #0
  4310e0:	mov	x1, #0x0                   	// #0
  4310e4:	mov	x0, x5
  4310e8:	bl	45ccf8 <_obstack_begin@@Base>
  4310ec:	b	43152c <wcrtomb@plt+0x2c81c>
  4310f0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4310f4:	add	x1, x0, #0xe68
  4310f8:	ldr	x0, [sp, #16]
  4310fc:	bl	404b60 <strcspn@plt>
  431100:	str	x0, [sp, #320]
  431104:	ldr	x2, [sp, #320]
  431108:	mov	w1, #0x3d                  	// #61
  43110c:	ldr	x0, [sp, #16]
  431110:	bl	404a20 <memchr@plt>
  431114:	str	x0, [sp, #392]
  431118:	ldr	x0, [sp, #392]
  43111c:	cmp	x0, #0x0
  431120:	b.eq	431434 <wcrtomb@plt+0x2c724>  // b.none
  431124:	ldr	x1, [sp, #392]
  431128:	ldr	x0, [sp, #16]
  43112c:	sub	x0, x1, x0
  431130:	add	x0, x0, #0x1
  431134:	str	x0, [sp, #384]
  431138:	add	x0, sp, #0x50
  43113c:	str	x0, [sp, #288]
  431140:	ldr	x0, [sp, #384]
  431144:	str	x0, [sp, #280]
  431148:	ldr	x0, [sp, #288]
  43114c:	str	x0, [sp, #272]
  431150:	ldr	x0, [sp, #272]
  431154:	ldr	x1, [x0, #32]
  431158:	ldr	x0, [sp, #272]
  43115c:	ldr	x0, [x0, #24]
  431160:	sub	x0, x1, x0
  431164:	mov	x1, x0
  431168:	ldr	x0, [sp, #280]
  43116c:	cmp	x1, x0
  431170:	b.cs	431180 <wcrtomb@plt+0x2c470>  // b.hs, b.nlast
  431174:	ldr	x1, [sp, #280]
  431178:	ldr	x0, [sp, #288]
  43117c:	bl	45cdc0 <_obstack_newchunk@@Base>
  431180:	ldr	x0, [sp, #288]
  431184:	ldr	x0, [x0, #24]
  431188:	ldr	x2, [sp, #280]
  43118c:	ldr	x1, [sp, #16]
  431190:	bl	404020 <memcpy@plt>
  431194:	ldr	x0, [sp, #288]
  431198:	ldr	x1, [x0, #24]
  43119c:	ldr	x0, [sp, #280]
  4311a0:	add	x1, x1, x0
  4311a4:	ldr	x0, [sp, #288]
  4311a8:	str	x1, [x0, #24]
  4311ac:	ldr	x1, [sp, #320]
  4311b0:	ldr	x0, [sp, #384]
  4311b4:	sub	x0, x1, x0
  4311b8:	str	x0, [sp, #384]
  4311bc:	ldr	x0, [sp, #392]
  4311c0:	add	x0, x0, #0x1
  4311c4:	str	x0, [sp, #392]
  4311c8:	b	4311e4 <wcrtomb@plt+0x2c4d4>
  4311cc:	ldr	x0, [sp, #384]
  4311d0:	sub	x0, x0, #0x1
  4311d4:	str	x0, [sp, #384]
  4311d8:	ldr	x0, [sp, #392]
  4311dc:	add	x0, x0, #0x1
  4311e0:	str	x0, [sp, #392]
  4311e4:	ldr	x0, [sp, #392]
  4311e8:	ldrb	w0, [x0]
  4311ec:	cmp	w0, #0x0
  4311f0:	b.eq	431220 <wcrtomb@plt+0x2c510>  // b.none
  4311f4:	bl	4047f0 <__ctype_b_loc@plt>
  4311f8:	ldr	x1, [x0]
  4311fc:	ldr	x0, [sp, #392]
  431200:	ldrb	w0, [x0]
  431204:	and	x0, x0, #0xff
  431208:	lsl	x0, x0, #1
  43120c:	add	x0, x1, x0
  431210:	ldrh	w0, [x0]
  431214:	and	w0, w0, #0x2000
  431218:	cmp	w0, #0x0
  43121c:	b.ne	4311cc <wcrtomb@plt+0x2c4bc>  // b.any
  431220:	ldr	x0, [sp, #392]
  431224:	ldrb	w0, [x0]
  431228:	cmp	w0, #0x7b
  43122c:	b.ne	4313bc <wcrtomb@plt+0x2c6ac>  // b.any
  431230:	ldr	x0, [sp, #384]
  431234:	sub	x0, x0, #0x1
  431238:	ldr	x1, [sp, #392]
  43123c:	add	x0, x1, x0
  431240:	ldrb	w0, [x0]
  431244:	cmp	w0, #0x7d
  431248:	b.ne	4313bc <wcrtomb@plt+0x2c6ac>  // b.any
  43124c:	ldr	x0, [sp, #384]
  431250:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  431254:	str	x0, [sp, #264]
  431258:	ldr	x0, [sp, #392]
  43125c:	add	x1, x0, #0x1
  431260:	ldr	x0, [sp, #384]
  431264:	sub	x0, x0, #0x2
  431268:	mov	x2, x0
  43126c:	ldr	x0, [sp, #264]
  431270:	bl	404020 <memcpy@plt>
  431274:	ldr	x0, [sp, #384]
  431278:	sub	x0, x0, #0x2
  43127c:	ldr	x1, [sp, #264]
  431280:	add	x0, x1, x0
  431284:	strb	wzr, [x0]
  431288:	add	x0, sp, #0x40
  43128c:	mov	x3, x0
  431290:	ldr	x2, [sp, #264]
  431294:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431298:	add	x1, x0, #0xe70
  43129c:	ldr	x0, [sp, #24]
  4312a0:	bl	4307b0 <wcrtomb@plt+0x2baa0>
  4312a4:	cmp	w0, #0x0
  4312a8:	b.ne	43133c <wcrtomb@plt+0x2c62c>  // b.any
  4312ac:	add	x0, sp, #0x20
  4312b0:	mov	x2, x0
  4312b4:	ldp	x0, x1, [sp, #64]
  4312b8:	bl	424968 <wcrtomb@plt+0x1fc58>
  4312bc:	str	x0, [sp, #232]
  4312c0:	add	x0, sp, #0x50
  4312c4:	str	x0, [sp, #224]
  4312c8:	ldr	x0, [sp, #232]
  4312cc:	bl	4040b0 <strlen@plt>
  4312d0:	str	x0, [sp, #216]
  4312d4:	ldr	x0, [sp, #224]
  4312d8:	str	x0, [sp, #208]
  4312dc:	ldr	x0, [sp, #208]
  4312e0:	ldr	x1, [x0, #32]
  4312e4:	ldr	x0, [sp, #208]
  4312e8:	ldr	x0, [x0, #24]
  4312ec:	sub	x0, x1, x0
  4312f0:	mov	x1, x0
  4312f4:	ldr	x0, [sp, #216]
  4312f8:	cmp	x1, x0
  4312fc:	b.cs	43130c <wcrtomb@plt+0x2c5fc>  // b.hs, b.nlast
  431300:	ldr	x1, [sp, #216]
  431304:	ldr	x0, [sp, #224]
  431308:	bl	45cdc0 <_obstack_newchunk@@Base>
  43130c:	ldr	x0, [sp, #224]
  431310:	ldr	x0, [x0, #24]
  431314:	ldr	x2, [sp, #216]
  431318:	ldr	x1, [sp, #232]
  43131c:	bl	404020 <memcpy@plt>
  431320:	ldr	x0, [sp, #224]
  431324:	ldr	x1, [x0, #24]
  431328:	ldr	x0, [sp, #216]
  43132c:	add	x1, x1, x0
  431330:	ldr	x0, [sp, #224]
  431334:	str	x1, [x0, #24]
  431338:	b	4313b0 <wcrtomb@plt+0x2c6a0>
  43133c:	add	x0, sp, #0x50
  431340:	str	x0, [sp, #256]
  431344:	ldr	x0, [sp, #384]
  431348:	str	x0, [sp, #248]
  43134c:	ldr	x0, [sp, #256]
  431350:	str	x0, [sp, #240]
  431354:	ldr	x0, [sp, #240]
  431358:	ldr	x1, [x0, #32]
  43135c:	ldr	x0, [sp, #240]
  431360:	ldr	x0, [x0, #24]
  431364:	sub	x0, x1, x0
  431368:	mov	x1, x0
  43136c:	ldr	x0, [sp, #248]
  431370:	cmp	x1, x0
  431374:	b.cs	431384 <wcrtomb@plt+0x2c674>  // b.hs, b.nlast
  431378:	ldr	x1, [sp, #248]
  43137c:	ldr	x0, [sp, #256]
  431380:	bl	45cdc0 <_obstack_newchunk@@Base>
  431384:	ldr	x0, [sp, #256]
  431388:	ldr	x0, [x0, #24]
  43138c:	ldr	x2, [sp, #248]
  431390:	ldr	x1, [sp, #392]
  431394:	bl	404020 <memcpy@plt>
  431398:	ldr	x0, [sp, #256]
  43139c:	ldr	x1, [x0, #24]
  4313a0:	ldr	x0, [sp, #248]
  4313a4:	add	x1, x1, x0
  4313a8:	ldr	x0, [sp, #256]
  4313ac:	str	x1, [x0, #24]
  4313b0:	ldr	x0, [sp, #264]
  4313b4:	bl	404880 <free@plt>
  4313b8:	b	4314a8 <wcrtomb@plt+0x2c798>
  4313bc:	add	x0, sp, #0x50
  4313c0:	str	x0, [sp, #200]
  4313c4:	ldr	x0, [sp, #384]
  4313c8:	str	x0, [sp, #192]
  4313cc:	ldr	x0, [sp, #200]
  4313d0:	str	x0, [sp, #184]
  4313d4:	ldr	x0, [sp, #184]
  4313d8:	ldr	x1, [x0, #32]
  4313dc:	ldr	x0, [sp, #184]
  4313e0:	ldr	x0, [x0, #24]
  4313e4:	sub	x0, x1, x0
  4313e8:	mov	x1, x0
  4313ec:	ldr	x0, [sp, #192]
  4313f0:	cmp	x1, x0
  4313f4:	b.cs	431404 <wcrtomb@plt+0x2c6f4>  // b.hs, b.nlast
  4313f8:	ldr	x1, [sp, #192]
  4313fc:	ldr	x0, [sp, #200]
  431400:	bl	45cdc0 <_obstack_newchunk@@Base>
  431404:	ldr	x0, [sp, #200]
  431408:	ldr	x0, [x0, #24]
  43140c:	ldr	x2, [sp, #192]
  431410:	ldr	x1, [sp, #392]
  431414:	bl	404020 <memcpy@plt>
  431418:	ldr	x0, [sp, #200]
  43141c:	ldr	x1, [x0, #24]
  431420:	ldr	x0, [sp, #192]
  431424:	add	x1, x1, x0
  431428:	ldr	x0, [sp, #200]
  43142c:	str	x1, [x0, #24]
  431430:	b	4314a8 <wcrtomb@plt+0x2c798>
  431434:	add	x0, sp, #0x50
  431438:	str	x0, [sp, #312]
  43143c:	ldr	x0, [sp, #320]
  431440:	str	x0, [sp, #304]
  431444:	ldr	x0, [sp, #312]
  431448:	str	x0, [sp, #296]
  43144c:	ldr	x0, [sp, #296]
  431450:	ldr	x1, [x0, #32]
  431454:	ldr	x0, [sp, #296]
  431458:	ldr	x0, [x0, #24]
  43145c:	sub	x0, x1, x0
  431460:	mov	x1, x0
  431464:	ldr	x0, [sp, #304]
  431468:	cmp	x1, x0
  43146c:	b.cs	43147c <wcrtomb@plt+0x2c76c>  // b.hs, b.nlast
  431470:	ldr	x1, [sp, #304]
  431474:	ldr	x0, [sp, #312]
  431478:	bl	45cdc0 <_obstack_newchunk@@Base>
  43147c:	ldr	x0, [sp, #312]
  431480:	ldr	x0, [x0, #24]
  431484:	ldr	x2, [sp, #304]
  431488:	ldr	x1, [sp, #16]
  43148c:	bl	404020 <memcpy@plt>
  431490:	ldr	x0, [sp, #312]
  431494:	ldr	x1, [x0, #24]
  431498:	ldr	x0, [sp, #304]
  43149c:	add	x1, x1, x0
  4314a0:	ldr	x0, [sp, #312]
  4314a4:	str	x1, [x0, #24]
  4314a8:	ldr	x1, [sp, #16]
  4314ac:	ldr	x0, [sp, #320]
  4314b0:	add	x0, x1, x0
  4314b4:	str	x0, [sp, #16]
  4314b8:	ldr	x0, [sp, #16]
  4314bc:	ldrb	w0, [x0]
  4314c0:	cmp	w0, #0x0
  4314c4:	b.eq	43152c <wcrtomb@plt+0x2c81c>  // b.none
  4314c8:	add	x0, sp, #0x50
  4314cc:	str	x0, [sp, #176]
  4314d0:	ldr	x0, [sp, #176]
  4314d4:	str	x0, [sp, #168]
  4314d8:	ldr	x0, [sp, #168]
  4314dc:	ldr	x1, [x0, #32]
  4314e0:	ldr	x0, [sp, #168]
  4314e4:	ldr	x0, [x0, #24]
  4314e8:	sub	x0, x1, x0
  4314ec:	cmp	x0, #0x0
  4314f0:	b.ne	431500 <wcrtomb@plt+0x2c7f0>  // b.any
  4314f4:	mov	x1, #0x1                   	// #1
  4314f8:	ldr	x0, [sp, #176]
  4314fc:	bl	45cdc0 <_obstack_newchunk@@Base>
  431500:	ldr	x0, [sp, #176]
  431504:	ldr	x0, [x0, #24]
  431508:	add	x2, x0, #0x1
  43150c:	ldr	x1, [sp, #176]
  431510:	str	x2, [x1, #24]
  431514:	ldr	x1, [sp, #16]
  431518:	ldrb	w1, [x1]
  43151c:	strb	w1, [x0]
  431520:	ldr	x0, [sp, #16]
  431524:	add	x0, x0, #0x1
  431528:	str	x0, [sp, #16]
  43152c:	ldr	x0, [sp, #16]
  431530:	ldrb	w0, [x0]
  431534:	cmp	w0, #0x0
  431538:	b.ne	4310f0 <wcrtomb@plt+0x2c3e0>  // b.any
  43153c:	add	x0, sp, #0x50
  431540:	str	x0, [sp, #376]
  431544:	ldr	x0, [sp, #376]
  431548:	str	x0, [sp, #368]
  43154c:	ldr	x0, [sp, #368]
  431550:	ldr	x1, [x0, #32]
  431554:	ldr	x0, [sp, #368]
  431558:	ldr	x0, [x0, #24]
  43155c:	sub	x0, x1, x0
  431560:	cmp	x0, #0x0
  431564:	b.ne	431574 <wcrtomb@plt+0x2c864>  // b.any
  431568:	mov	x1, #0x1                   	// #1
  43156c:	ldr	x0, [sp, #376]
  431570:	bl	45cdc0 <_obstack_newchunk@@Base>
  431574:	ldr	x0, [sp, #376]
  431578:	ldr	x0, [x0, #24]
  43157c:	add	x2, x0, #0x1
  431580:	ldr	x1, [sp, #376]
  431584:	str	x2, [x1, #24]
  431588:	strb	wzr, [x0]
  43158c:	add	x0, sp, #0x50
  431590:	str	x0, [sp, #360]
  431594:	ldr	x0, [sp, #360]
  431598:	ldr	x0, [x0, #16]
  43159c:	str	x0, [sp, #352]
  4315a0:	ldr	x0, [sp, #360]
  4315a4:	ldr	x0, [x0, #24]
  4315a8:	ldr	x1, [sp, #352]
  4315ac:	cmp	x1, x0
  4315b0:	b.ne	4315c4 <wcrtomb@plt+0x2c8b4>  // b.any
  4315b4:	ldr	x0, [sp, #360]
  4315b8:	ldrb	w1, [x0, #80]
  4315bc:	orr	w1, w1, #0x2
  4315c0:	strb	w1, [x0, #80]
  4315c4:	ldr	x0, [sp, #360]
  4315c8:	ldr	x0, [x0, #24]
  4315cc:	mov	x1, x0
  4315d0:	ldr	x0, [sp, #360]
  4315d4:	ldr	x0, [x0, #48]
  4315d8:	add	x1, x1, x0
  4315dc:	ldr	x0, [sp, #360]
  4315e0:	ldr	x0, [x0, #48]
  4315e4:	mvn	x0, x0
  4315e8:	and	x0, x1, x0
  4315ec:	mov	x1, x0
  4315f0:	ldr	x0, [sp, #360]
  4315f4:	str	x1, [x0, #24]
  4315f8:	ldr	x0, [sp, #360]
  4315fc:	ldr	x1, [x0, #24]
  431600:	ldr	x0, [sp, #360]
  431604:	ldr	x0, [x0, #8]
  431608:	sub	x0, x1, x0
  43160c:	mov	x2, x0
  431610:	ldr	x0, [sp, #360]
  431614:	ldr	x1, [x0, #32]
  431618:	ldr	x0, [sp, #360]
  43161c:	ldr	x0, [x0, #8]
  431620:	sub	x0, x1, x0
  431624:	cmp	x2, x0
  431628:	b.ls	43163c <wcrtomb@plt+0x2c92c>  // b.plast
  43162c:	ldr	x0, [sp, #360]
  431630:	ldr	x1, [x0, #32]
  431634:	ldr	x0, [sp, #360]
  431638:	str	x1, [x0, #24]
  43163c:	ldr	x0, [sp, #360]
  431640:	ldr	x1, [x0, #24]
  431644:	ldr	x0, [sp, #360]
  431648:	str	x1, [x0, #16]
  43164c:	ldr	x0, [sp, #352]
  431650:	bl	45b858 <argp_usage@@Base+0x1276c>
  431654:	str	x0, [sp, #344]
  431658:	add	x0, sp, #0x50
  43165c:	str	x0, [sp, #336]
  431660:	str	xzr, [sp, #328]
  431664:	ldr	x0, [sp, #336]
  431668:	ldr	x0, [x0, #8]
  43166c:	ldr	x1, [sp, #328]
  431670:	cmp	x1, x0
  431674:	b.ls	4316ac <wcrtomb@plt+0x2c99c>  // b.plast
  431678:	ldr	x0, [sp, #336]
  43167c:	ldr	x0, [x0, #32]
  431680:	ldr	x1, [sp, #328]
  431684:	cmp	x1, x0
  431688:	b.cs	4316ac <wcrtomb@plt+0x2c99c>  // b.hs, b.nlast
  43168c:	ldr	x0, [sp, #336]
  431690:	ldr	x1, [sp, #328]
  431694:	str	x1, [x0, #16]
  431698:	ldr	x0, [sp, #336]
  43169c:	ldr	x1, [x0, #16]
  4316a0:	ldr	x0, [sp, #336]
  4316a4:	str	x1, [x0, #24]
  4316a8:	b	4316b8 <wcrtomb@plt+0x2c9a8>
  4316ac:	ldr	x1, [sp, #328]
  4316b0:	ldr	x0, [sp, #336]
  4316b4:	bl	45d05c <_obstack_free@@Base>
  4316b8:	ldr	x0, [sp, #344]
  4316bc:	ldp	x29, x30, [sp], #400
  4316c0:	ret
  4316c4:	stp	x29, x30, [sp, #-128]!
  4316c8:	mov	x29, sp
  4316cc:	str	x19, [sp, #16]
  4316d0:	str	x0, [sp, #56]
  4316d4:	str	x1, [sp, #48]
  4316d8:	str	x2, [sp, #40]
  4316dc:	mov	x0, #0xffffffffffffffff    	// #-1
  4316e0:	str	x0, [sp, #88]
  4316e4:	str	xzr, [sp, #120]
  4316e8:	str	xzr, [sp, #112]
  4316ec:	mov	w1, #0x3a                  	// #58
  4316f0:	ldr	x0, [sp, #56]
  4316f4:	bl	404930 <strchr@plt>
  4316f8:	str	x0, [sp, #104]
  4316fc:	ldr	x0, [sp, #104]
  431700:	cmp	x0, #0x0
  431704:	b.eq	431784 <wcrtomb@plt+0x2ca74>  // b.none
  431708:	ldr	x0, [sp, #104]
  43170c:	add	x0, x0, #0x1
  431710:	str	x0, [sp, #96]
  431714:	ldr	x0, [sp, #104]
  431718:	strb	wzr, [x0]
  43171c:	ldr	x0, [sp, #56]
  431720:	ldrb	w0, [x0]
  431724:	cmp	w0, #0x0
  431728:	b.eq	431734 <wcrtomb@plt+0x2ca24>  // b.none
  43172c:	ldr	x0, [sp, #56]
  431730:	str	x0, [sp, #120]
  431734:	ldr	x0, [sp, #96]
  431738:	cmp	x0, #0x0
  43173c:	b.eq	431810 <wcrtomb@plt+0x2cb00>  // b.none
  431740:	add	x2, sp, #0x58
  431744:	add	x1, sp, #0x50
  431748:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  43174c:	add	x4, x0, #0xe80
  431750:	mov	x3, x2
  431754:	mov	w2, #0xa                   	// #10
  431758:	ldr	x0, [sp, #96]
  43175c:	bl	45b9cc <argp_usage@@Base+0x128e0>
  431760:	cmp	w0, #0x0
  431764:	b.ne	431778 <wcrtomb@plt+0x2ca68>  // b.any
  431768:	ldr	x0, [sp, #88]
  43176c:	ldr	x1, [sp, #48]
  431770:	cmp	x1, x0
  431774:	b.cs	431810 <wcrtomb@plt+0x2cb00>  // b.hs, b.nlast
  431778:	ldr	x0, [sp, #96]
  43177c:	str	x0, [sp, #112]
  431780:	b	431810 <wcrtomb@plt+0x2cb00>
  431784:	ldr	x0, [sp, #56]
  431788:	ldrb	w0, [x0]
  43178c:	cmp	w0, #0x2f
  431790:	b.ls	4317c8 <wcrtomb@plt+0x2cab8>  // b.plast
  431794:	ldr	x0, [sp, #56]
  431798:	ldrb	w0, [x0]
  43179c:	cmp	w0, #0x39
  4317a0:	b.hi	4317c8 <wcrtomb@plt+0x2cab8>  // b.pmore
  4317a4:	add	x2, sp, #0x48
  4317a8:	add	x1, sp, #0x50
  4317ac:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4317b0:	add	x4, x0, #0xe80
  4317b4:	mov	x3, x2
  4317b8:	mov	w2, #0xa                   	// #10
  4317bc:	ldr	x0, [sp, #56]
  4317c0:	bl	45b9cc <argp_usage@@Base+0x128e0>
  4317c4:	b	4317cc <wcrtomb@plt+0x2cabc>
  4317c8:	mov	w0, #0x4                   	// #4
  4317cc:	cmp	w0, #0x0
  4317d0:	b.eq	4317e8 <wcrtomb@plt+0x2cad8>  // b.none
  4317d4:	cmp	w0, #0x1
  4317d8:	b.eq	431804 <wcrtomb@plt+0x2caf4>  // b.none
  4317dc:	ldr	x0, [sp, #56]
  4317e0:	str	x0, [sp, #120]
  4317e4:	b	431810 <wcrtomb@plt+0x2cb00>
  4317e8:	ldr	x0, [sp, #72]
  4317ec:	ldr	x1, [sp, #48]
  4317f0:	cmp	x1, x0
  4317f4:	b.cc	431804 <wcrtomb@plt+0x2caf4>  // b.lo, b.ul, b.last
  4317f8:	ldr	x0, [sp, #72]
  4317fc:	str	x0, [sp, #88]
  431800:	b	431810 <wcrtomb@plt+0x2cb00>
  431804:	ldr	x0, [sp, #56]
  431808:	str	x0, [sp, #112]
  43180c:	nop
  431810:	ldr	x0, [sp, #112]
  431814:	cmp	x0, #0x0
  431818:	b.eq	431878 <wcrtomb@plt+0x2cb68>  // b.none
  43181c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431820:	add	x0, x0, #0x420
  431824:	ldr	x0, [x0]
  431828:	cmp	x0, #0x0
  43182c:	b.eq	431840 <wcrtomb@plt+0x2cb30>  // b.none
  431830:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431834:	add	x0, x0, #0x420
  431838:	ldr	x0, [x0]
  43183c:	blr	x0
  431840:	ldr	x0, [sp, #112]
  431844:	bl	459cd8 <argp_usage@@Base+0x10bec>
  431848:	mov	x19, x0
  43184c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431850:	add	x0, x0, #0xe88
  431854:	bl	404c60 <gettext@plt>
  431858:	mov	x4, x0
  43185c:	mov	x3, x19
  431860:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431864:	add	x2, x0, #0xea8
  431868:	mov	w1, #0x0                   	// #0
  43186c:	mov	w0, #0x0                   	// #0
  431870:	bl	404100 <error@plt>
  431874:	bl	412ae0 <wcrtomb@plt+0xddd0>
  431878:	ldr	x0, [sp, #120]
  43187c:	cmp	x0, #0x0
  431880:	b.eq	431890 <wcrtomb@plt+0x2cb80>  // b.none
  431884:	ldr	x0, [sp, #40]
  431888:	ldr	x1, [sp, #120]
  43188c:	str	x1, [x0]
  431890:	ldr	x0, [sp, #88]
  431894:	ldr	x19, [sp, #16]
  431898:	ldp	x29, x30, [sp], #128
  43189c:	ret
  4318a0:	stp	x29, x30, [sp, #-48]!
  4318a4:	mov	x29, sp
  4318a8:	str	w0, [sp, #28]
  4318ac:	str	x1, [sp, #16]
  4318b0:	ldr	x1, [sp, #16]
  4318b4:	mov	w0, #0x9                   	// #9
  4318b8:	bl	43030c <wcrtomb@plt+0x2b5fc>
  4318bc:	str	x0, [sp, #40]
  4318c0:	ldr	x0, [sp, #40]
  4318c4:	cmp	x0, #0x0
  4318c8:	b.eq	431934 <wcrtomb@plt+0x2cc24>  // b.none
  4318cc:	ldr	x1, [sp, #40]
  4318d0:	ldr	x0, [sp, #16]
  4318d4:	bl	43047c <wcrtomb@plt+0x2b76c>
  4318d8:	cmp	w0, #0x0
  4318dc:	b.eq	431934 <wcrtomb@plt+0x2cc24>  // b.none
  4318e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4318e4:	add	x0, x0, #0x320
  4318e8:	ldr	w0, [x0]
  4318ec:	mov	w1, w0
  4318f0:	ldr	w0, [sp, #28]
  4318f4:	cmp	w0, w1
  4318f8:	b.eq	431934 <wcrtomb@plt+0x2cc24>  // b.none
  4318fc:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  431900:	add	x0, x0, #0xda0
  431904:	ldrsw	x1, [sp, #28]
  431908:	ldr	x2, [x0, x1, lsl #3]
  43190c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431910:	add	x0, x0, #0x320
  431914:	ldr	w1, [x0]
  431918:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43191c:	add	x0, x0, #0xda0
  431920:	mov	w1, w1
  431924:	ldr	x0, [x0, x1, lsl #3]
  431928:	mov	x1, x0
  43192c:	mov	x0, x2
  431930:	bl	4302ac <wcrtomb@plt+0x2b59c>
  431934:	ldr	w1, [sp, #28]
  431938:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43193c:	add	x0, x0, #0x320
  431940:	str	w1, [x0]
  431944:	nop
  431948:	ldp	x29, x30, [sp], #48
  43194c:	ret
  431950:	stp	x29, x30, [sp, #-176]!
  431954:	mov	x29, sp
  431958:	str	x19, [sp, #16]
  43195c:	str	w0, [sp, #60]
  431960:	str	x1, [sp, #48]
  431964:	str	x2, [sp, #40]
  431968:	ldr	x0, [sp, #40]
  43196c:	ldr	x0, [x0, #40]
  431970:	str	x0, [sp, #168]
  431974:	ldr	w0, [sp, #60]
  431978:	cmp	w0, #0x14f
  43197c:	b.gt	4319b0 <wcrtomb@plt+0x2cca0>
  431980:	ldr	w0, [sp, #60]
  431984:	cmp	w0, #0x0
  431988:	b.lt	432f90 <wcrtomb@plt+0x2e280>  // b.tstop
  43198c:	ldr	w0, [sp, #60]
  431990:	cmp	w0, #0x14f
  431994:	b.hi	432f90 <wcrtomb@plt+0x2e280>  // b.pmore
  431998:	adrp	x1, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43199c:	add	x1, x1, #0x164
  4319a0:	ldr	w0, [x1, w0, uxtw #2]
  4319a4:	adr	x1, 4319b0 <wcrtomb@plt+0x2cca0>
  4319a8:	add	x0, x1, w0, sxtw #2
  4319ac:	br	x0
  4319b0:	ldr	w1, [sp, #60]
  4319b4:	mov	w0, #0x5                   	// #5
  4319b8:	movk	w0, #0x100, lsl #16
  4319bc:	cmp	w1, w0
  4319c0:	b.eq	432ef0 <wcrtomb@plt+0x2e1e0>  // b.none
  4319c4:	b	432f90 <wcrtomb@plt+0x2e280>
  4319c8:	ldr	x0, [sp, #48]
  4319cc:	bl	427794 <wcrtomb@plt+0x22a84>
  4319d0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4319d4:	mov	w0, #0x2                   	// #2
  4319d8:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  4319dc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4319e0:	ldr	x0, [sp, #168]
  4319e4:	mov	w1, #0x1                   	// #1
  4319e8:	str	w1, [x0, #40]
  4319ec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4319f0:	ldr	x0, [sp, #168]
  4319f4:	str	wzr, [x0, #40]
  4319f8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4319fc:	add	x1, sp, #0x80
  431a00:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431a04:	add	x4, x0, #0xe80
  431a08:	mov	x3, x1
  431a0c:	mov	w2, #0xa                   	// #10
  431a10:	mov	x1, #0x0                   	// #0
  431a14:	ldr	x0, [sp, #48]
  431a18:	bl	45b9cc <argp_usage@@Base+0x128e0>
  431a1c:	cmp	w0, #0x0
  431a20:	b.ne	431a98 <wcrtomb@plt+0x2cd88>  // b.any
  431a24:	ldr	x0, [sp, #128]
  431a28:	mov	w1, w0
  431a2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431a30:	add	x0, x0, #0x31c
  431a34:	str	w1, [x0]
  431a38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431a3c:	add	x0, x0, #0x31c
  431a40:	ldr	w0, [x0]
  431a44:	sxtw	x1, w0
  431a48:	ldr	x0, [sp, #128]
  431a4c:	cmp	x1, x0
  431a50:	b.ne	431a98 <wcrtomb@plt+0x2cd88>  // b.any
  431a54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431a58:	add	x0, x0, #0x31c
  431a5c:	ldr	w0, [x0]
  431a60:	cmp	w0, #0x0
  431a64:	b.le	431a98 <wcrtomb@plt+0x2cd88>
  431a68:	ldr	x0, [sp, #128]
  431a6c:	lsl	x1, x0, #9
  431a70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431a74:	add	x0, x0, #0x3c8
  431a78:	str	x1, [x0]
  431a7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431a80:	add	x0, x0, #0x3c8
  431a84:	ldr	x0, [x0]
  431a88:	lsr	x1, x0, #9
  431a8c:	ldr	x0, [sp, #128]
  431a90:	cmp	x1, x0
  431a94:	b.eq	432f98 <wcrtomb@plt+0x2e288>  // b.none
  431a98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431a9c:	add	x0, x0, #0x420
  431aa0:	ldr	x0, [x0]
  431aa4:	cmp	x0, #0x0
  431aa8:	b.eq	431abc <wcrtomb@plt+0x2cdac>  // b.none
  431aac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431ab0:	add	x0, x0, #0x420
  431ab4:	ldr	x0, [x0]
  431ab8:	blr	x0
  431abc:	ldr	x0, [sp, #48]
  431ac0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  431ac4:	mov	x19, x0
  431ac8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431acc:	add	x0, x0, #0xf10
  431ad0:	bl	404c60 <gettext@plt>
  431ad4:	mov	x4, x0
  431ad8:	mov	x3, x19
  431adc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431ae0:	add	x2, x0, #0xea8
  431ae4:	mov	w1, #0x0                   	// #0
  431ae8:	mov	w0, #0x0                   	// #0
  431aec:	bl	404100 <error@plt>
  431af0:	mov	w0, #0x2                   	// #2
  431af4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  431af8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431afc:	add	x0, x0, #0x379
  431b00:	mov	w1, #0x1                   	// #1
  431b04:	strb	w1, [x0]
  431b08:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431b0c:	mov	w0, #0x3                   	// #3
  431b10:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  431b14:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431b18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431b1c:	add	x0, x0, #0x68
  431b20:	mov	w1, #0x2                   	// #2
  431b24:	str	w1, [x0]
  431b28:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431b2c:	mov	w0, #0x5                   	// #5
  431b30:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  431b34:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431b38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431b3c:	add	x0, x0, #0x380
  431b40:	ldr	x1, [x0]
  431b44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  431b48:	add	x0, x0, #0xc20
  431b4c:	ldr	x0, [x0]
  431b50:	cmp	x1, x0
  431b54:	b.ne	431b88 <wcrtomb@plt+0x2ce78>  // b.any
  431b58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431b5c:	add	x0, x0, #0x2e0
  431b60:	ldr	x3, [x0]
  431b64:	mov	x2, #0x8                   	// #8
  431b68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  431b6c:	add	x1, x0, #0xc20
  431b70:	mov	x0, x3
  431b74:	bl	45b56c <argp_usage@@Base+0x12480>
  431b78:	mov	x1, x0
  431b7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431b80:	add	x0, x0, #0x2e0
  431b84:	str	x1, [x0]
  431b88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431b8c:	add	x0, x0, #0x2e0
  431b90:	ldr	x1, [x0]
  431b94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431b98:	add	x0, x0, #0x380
  431b9c:	ldr	x0, [x0]
  431ba0:	add	x3, x0, #0x1
  431ba4:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  431ba8:	add	x2, x2, #0x380
  431bac:	str	x3, [x2]
  431bb0:	lsl	x0, x0, #3
  431bb4:	add	x0, x1, x0
  431bb8:	ldr	x1, [sp, #48]
  431bbc:	str	x1, [x0]
  431bc0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431bc4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431bc8:	add	x0, x0, #0x330
  431bcc:	ldr	x1, [sp, #48]
  431bd0:	str	x1, [x0]
  431bd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431bd8:	add	x0, x0, #0x7c
  431bdc:	mov	w1, #0x1                   	// #1
  431be0:	strb	w1, [x0]
  431be4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431be8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431bec:	add	x0, x0, #0x2e8
  431bf0:	mov	w1, #0x1                   	// #1
  431bf4:	strb	w1, [x0]
  431bf8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431bfc:	ldr	x0, [sp, #168]
  431c00:	ldr	x0, [x0]
  431c04:	mov	x1, x0
  431c08:	mov	w0, #0x2                   	// #2
  431c0c:	bl	43030c <wcrtomb@plt+0x2b5fc>
  431c10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431c14:	add	x0, x0, #0x370
  431c18:	ldr	x1, [sp, #48]
  431c1c:	str	x1, [x0]
  431c20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431c24:	add	x0, x0, #0x3fc
  431c28:	mov	w1, #0x1                   	// #1
  431c2c:	str	w1, [x0]
  431c30:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431c34:	add	x0, x0, #0x51
  431c38:	mov	w1, #0x1                   	// #1
  431c3c:	strb	w1, [x0]
  431c40:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431c44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431c48:	add	x0, x0, #0x270
  431c4c:	mov	w1, #0x1                   	// #1
  431c50:	strb	w1, [x0]
  431c54:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431c58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431c5c:	add	x0, x0, #0x84
  431c60:	mov	w1, #0x1                   	// #1
  431c64:	strb	w1, [x0]
  431c68:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431c6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431c70:	add	x0, x0, #0x7d
  431c74:	mov	w1, #0x1                   	// #1
  431c78:	strb	w1, [x0]
  431c7c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431c80:	ldr	x0, [sp, #168]
  431c84:	ldr	x0, [x0]
  431c88:	mov	x1, x0
  431c8c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431c90:	add	x0, x0, #0x1c0
  431c94:	bl	430590 <wcrtomb@plt+0x2b880>
  431c98:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431c9c:	ldr	x0, [sp, #168]
  431ca0:	ldr	x0, [x0]
  431ca4:	mov	x1, x0
  431ca8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431cac:	add	x0, x0, #0x218
  431cb0:	bl	430590 <wcrtomb@plt+0x2b880>
  431cb4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431cb8:	ldr	x0, [sp, #168]
  431cbc:	ldr	x0, [x0]
  431cc0:	mov	x1, x0
  431cc4:	mov	w0, #0x4                   	// #4
  431cc8:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  431ccc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431cd0:	ldr	x0, [sp, #168]
  431cd4:	ldr	x0, [x0]
  431cd8:	mov	x1, x0
  431cdc:	mov	w0, #0x5                   	// #5
  431ce0:	bl	43030c <wcrtomb@plt+0x2b5fc>
  431ce4:	ldr	x0, [sp, #48]
  431ce8:	bl	428798 <wcrtomb@plt+0x23a88>
  431cec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431cf0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431cf4:	add	x0, x0, #0x85
  431cf8:	mov	w1, #0x1                   	// #1
  431cfc:	strb	w1, [x0]
  431d00:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431d04:	ldr	x0, [sp, #168]
  431d08:	ldr	x0, [x0]
  431d0c:	mov	x1, x0
  431d10:	mov	w0, #0x7                   	// #7
  431d14:	bl	43030c <wcrtomb@plt+0x2b5fc>
  431d18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431d1c:	add	x0, x0, #0x37b
  431d20:	mov	w1, #0x1                   	// #1
  431d24:	strb	w1, [x0]
  431d28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431d2c:	add	x0, x0, #0x268
  431d30:	ldr	x1, [sp, #48]
  431d34:	str	x1, [x0]
  431d38:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431d3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  431d40:	add	x0, x0, #0xc18
  431d44:	mov	w1, #0x1                   	// #1
  431d48:	str	w1, [x0]
  431d4c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431d50:	add	x2, sp, #0x78
  431d54:	add	x1, sp, #0x70
  431d58:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431d5c:	add	x4, x0, #0xf28
  431d60:	mov	x3, x2
  431d64:	mov	w2, #0xa                   	// #10
  431d68:	ldr	x0, [sp, #48]
  431d6c:	bl	45b9cc <argp_usage@@Base+0x128e0>
  431d70:	cmp	w0, #0x0
  431d74:	b.eq	431dd8 <wcrtomb@plt+0x2d0c8>  // b.none
  431d78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431d7c:	add	x0, x0, #0x420
  431d80:	ldr	x0, [x0]
  431d84:	cmp	x0, #0x0
  431d88:	b.eq	431d9c <wcrtomb@plt+0x2d08c>  // b.none
  431d8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431d90:	add	x0, x0, #0x420
  431d94:	ldr	x0, [x0]
  431d98:	blr	x0
  431d9c:	ldr	x0, [sp, #48]
  431da0:	bl	459cd8 <argp_usage@@Base+0x10bec>
  431da4:	mov	x19, x0
  431da8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431dac:	add	x0, x0, #0xf38
  431db0:	bl	404c60 <gettext@plt>
  431db4:	mov	x4, x0
  431db8:	mov	x3, x19
  431dbc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431dc0:	add	x2, x0, #0xea8
  431dc4:	mov	w1, #0x0                   	// #0
  431dc8:	mov	w0, #0x0                   	// #0
  431dcc:	bl	404100 <error@plt>
  431dd0:	mov	w0, #0x2                   	// #2
  431dd4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  431dd8:	ldr	x0, [sp, #112]
  431ddc:	ldr	x1, [sp, #48]
  431de0:	cmp	x1, x0
  431de4:	b.cs	431e30 <wcrtomb@plt+0x2d120>  // b.hs, b.nlast
  431de8:	ldr	x0, [sp, #112]
  431dec:	sub	x0, x0, #0x1
  431df0:	ldrb	w0, [x0]
  431df4:	mov	w1, w0
  431df8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431dfc:	add	x0, x0, #0xf28
  431e00:	bl	404930 <strchr@plt>
  431e04:	cmp	x0, #0x0
  431e08:	b.ne	431e30 <wcrtomb@plt+0x2d120>  // b.any
  431e0c:	ldr	d0, [sp, #120]
  431e10:	ucvtf	d0, d0
  431e14:	mov	x0, #0x4090000000000000    	// #4652218415073722368
  431e18:	fmov	d1, x0
  431e1c:	fmul	d0, d0, d1
  431e20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431e24:	add	x0, x0, #0x2a8
  431e28:	str	d0, [x0]
  431e2c:	b	431e44 <wcrtomb@plt+0x2d134>
  431e30:	ldr	d0, [sp, #120]
  431e34:	ucvtf	d0, d0
  431e38:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431e3c:	add	x0, x0, #0x2a8
  431e40:	str	d0, [x0]
  431e44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431e48:	add	x0, x0, #0x7c
  431e4c:	mov	w1, #0x1                   	// #1
  431e50:	strb	w1, [x0]
  431e54:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431e58:	add	x0, sp, #0x68
  431e5c:	mov	w2, #0xa                   	// #10
  431e60:	mov	x1, x0
  431e64:	ldr	x0, [sp, #48]
  431e68:	bl	4040a0 <strtoul@plt>
  431e6c:	mov	w1, w0
  431e70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431e74:	add	x0, x0, #0x33c
  431e78:	str	w1, [x0]
  431e7c:	ldr	x0, [sp, #104]
  431e80:	ldrb	w0, [x0]
  431e84:	cmp	w0, #0x0
  431e88:	b.eq	432fa0 <wcrtomb@plt+0x2e290>  // b.none
  431e8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431e90:	add	x0, x0, #0x420
  431e94:	ldr	x0, [x0]
  431e98:	cmp	x0, #0x0
  431e9c:	b.eq	431eb0 <wcrtomb@plt+0x2d1a0>  // b.none
  431ea0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431ea4:	add	x0, x0, #0x420
  431ea8:	ldr	x0, [x0]
  431eac:	blr	x0
  431eb0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431eb4:	add	x0, x0, #0xf50
  431eb8:	bl	404c60 <gettext@plt>
  431ebc:	mov	x2, x0
  431ec0:	mov	w1, #0x0                   	// #0
  431ec4:	mov	w0, #0x0                   	// #0
  431ec8:	bl	404100 <error@plt>
  431ecc:	mov	w0, #0x2                   	// #2
  431ed0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  431ed4:	ldr	x0, [sp, #168]
  431ed8:	ldr	x0, [x0]
  431edc:	mov	x1, x0
  431ee0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431ee4:	add	x0, x0, #0x200
  431ee8:	bl	430590 <wcrtomb@plt+0x2b880>
  431eec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431ef0:	ldr	x0, [sp, #168]
  431ef4:	ldr	x0, [x0]
  431ef8:	mov	x1, x0
  431efc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431f00:	add	x0, x0, #0x208
  431f04:	bl	430590 <wcrtomb@plt+0x2b880>
  431f08:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431f0c:	ldr	x0, [sp, #168]
  431f10:	ldr	x0, [x0]
  431f14:	mov	x1, x0
  431f18:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431f1c:	add	x0, x0, #0x210
  431f20:	bl	430590 <wcrtomb@plt+0x2b880>
  431f24:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431f28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431f2c:	add	x0, x0, #0x258
  431f30:	mov	w1, #0x1                   	// #1
  431f34:	strb	w1, [x0]
  431f38:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431f3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431f40:	add	x0, x0, #0x7c
  431f44:	mov	w1, #0x1                   	// #1
  431f48:	strb	w1, [x0]
  431f4c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431f50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431f54:	add	x3, x0, #0x348
  431f58:	ldr	x2, [sp, #48]
  431f5c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  431f60:	add	x1, x0, #0xf70
  431f64:	ldr	x0, [sp, #168]
  431f68:	bl	4307b0 <wcrtomb@plt+0x2baa0>
  431f6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431f70:	add	x0, x0, #0x68
  431f74:	ldr	w0, [x0]
  431f78:	cmp	w0, #0x0
  431f7c:	b.ne	432fa8 <wcrtomb@plt+0x2e298>  // b.any
  431f80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431f84:	add	x0, x0, #0x68
  431f88:	mov	w1, #0x1                   	// #1
  431f8c:	str	w1, [x0]
  431f90:	b	432fa8 <wcrtomb@plt+0x2e298>
  431f94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431f98:	add	x0, x0, #0x78
  431f9c:	mov	w1, #0x1                   	// #1
  431fa0:	str	w1, [x0]
  431fa4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431fa8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431fac:	add	x0, x0, #0x78
  431fb0:	str	wzr, [x0]
  431fb4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  431fb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431fbc:	add	x0, x0, #0x3fc
  431fc0:	mov	w1, #0x1                   	// #1
  431fc4:	str	w1, [x0]
  431fc8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431fcc:	add	x0, x0, #0x58
  431fd0:	ldr	x0, [x0, #8]
  431fd4:	cmp	x0, #0x0
  431fd8:	b.lt	432024 <wcrtomb@plt+0x2d314>  // b.tstop
  431fdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431fe0:	add	x0, x0, #0x420
  431fe4:	ldr	x0, [x0]
  431fe8:	cmp	x0, #0x0
  431fec:	b.eq	432000 <wcrtomb@plt+0x2d2f0>  // b.none
  431ff0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  431ff4:	add	x0, x0, #0x420
  431ff8:	ldr	x0, [x0]
  431ffc:	blr	x0
  432000:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432004:	add	x0, x0, #0xf78
  432008:	bl	404c60 <gettext@plt>
  43200c:	mov	x2, x0
  432010:	mov	w1, #0x0                   	// #0
  432014:	mov	w0, #0x0                   	// #0
  432018:	bl	404100 <error@plt>
  43201c:	mov	w0, #0x2                   	// #2
  432020:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  432024:	ldr	w0, [sp, #60]
  432028:	cmp	w0, #0x119
  43202c:	b.ne	43203c <wcrtomb@plt+0x2d32c>  // b.any
  432030:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432034:	add	x0, x0, #0xf98
  432038:	b	432044 <wcrtomb@plt+0x2d334>
  43203c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432040:	add	x0, x0, #0xfa8
  432044:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  432048:	add	x3, x1, #0x58
  43204c:	ldr	x2, [sp, #48]
  432050:	mov	x1, x0
  432054:	ldr	x0, [sp, #168]
  432058:	bl	4307b0 <wcrtomb@plt+0x2baa0>
  43205c:	ldr	x0, [sp, #168]
  432060:	ldr	x0, [x0]
  432064:	mov	x1, x0
  432068:	mov	w0, #0x3                   	// #3
  43206c:	bl	43030c <wcrtomb@plt+0x2b5fc>
  432070:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432074:	ldr	x0, [sp, #168]
  432078:	mov	w1, #0x1                   	// #1
  43207c:	strb	w1, [x0, #16]
  432080:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432084:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432088:	add	x0, x0, #0x2a1
  43208c:	mov	w1, #0x1                   	// #1
  432090:	strb	w1, [x0]
  432094:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432098:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43209c:	add	x0, x0, #0x294
  4320a0:	mov	w1, #0x1                   	// #1
  4320a4:	str	w1, [x0]
  4320a8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4320ac:	ldr	x0, [sp, #168]
  4320b0:	ldr	x0, [x0]
  4320b4:	mov	x1, x0
  4320b8:	mov	w0, #0x8                   	// #8
  4320bc:	bl	43030c <wcrtomb@plt+0x2b5fc>
  4320c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4320c4:	add	x0, x0, #0x3e8
  4320c8:	mov	w1, #0x1                   	// #1
  4320cc:	strb	w1, [x0]
  4320d0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4320d4:	mov	w0, #0x1                   	// #1
  4320d8:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  4320dc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4320e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4320e4:	add	x0, x0, #0x2d1
  4320e8:	mov	w1, #0x1                   	// #1
  4320ec:	strb	w1, [x0]
  4320f0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4320f4:	ldr	x0, [sp, #168]
  4320f8:	ldr	x0, [x0]
  4320fc:	mov	x1, x0
  432100:	mov	w0, #0x6                   	// #6
  432104:	bl	43030c <wcrtomb@plt+0x2b5fc>
  432108:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43210c:	add	x0, x0, #0x2b0
  432110:	mov	w1, #0x1                   	// #1
  432114:	strb	w1, [x0]
  432118:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43211c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432120:	add	x0, x0, #0x3c0
  432124:	mov	w1, #0x1                   	// #1
  432128:	strb	w1, [x0]
  43212c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432130:	ldr	x0, [sp, #168]
  432134:	ldr	x0, [x0]
  432138:	mov	x1, x0
  43213c:	mov	w0, #0x5                   	// #5
  432140:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  432144:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432148:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43214c:	add	x0, x0, #0x3e8
  432150:	ldr	x0, [x0]
  432154:	mov	x5, x0
  432158:	mov	x4, #0x4                   	// #4
  43215c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432160:	add	x3, x0, #0xf08
  432164:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432168:	add	x2, x0, #0xef0
  43216c:	ldr	x1, [sp, #48]
  432170:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432174:	add	x0, x0, #0xfb8
  432178:	bl	443a80 <wcrtomb@plt+0x3ed70>
  43217c:	mov	x1, x0
  432180:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432184:	add	x0, x0, #0xf08
  432188:	ldr	w0, [x0, x1, lsl #2]
  43218c:	mov	w1, w0
  432190:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432194:	add	x0, x0, #0x3c4
  432198:	str	w1, [x0]
  43219c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4321a0:	add	x0, x0, #0x3c0
  4321a4:	mov	w1, #0x1                   	// #1
  4321a8:	strb	w1, [x0]
  4321ac:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4321b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4321b4:	add	x0, x0, #0x3c0
  4321b8:	mov	w1, #0x1                   	// #1
  4321bc:	strb	w1, [x0]
  4321c0:	add	x0, sp, #0x60
  4321c4:	mov	w2, #0xa                   	// #10
  4321c8:	mov	x1, x0
  4321cc:	ldr	x0, [sp, #48]
  4321d0:	bl	4040a0 <strtoul@plt>
  4321d4:	mov	w1, w0
  4321d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4321dc:	add	x0, x0, #0x290
  4321e0:	str	w1, [x0]
  4321e4:	ldr	x0, [sp, #96]
  4321e8:	ldrb	w0, [x0]
  4321ec:	cmp	w0, #0x0
  4321f0:	b.eq	432fb0 <wcrtomb@plt+0x2e2a0>  // b.none
  4321f4:	ldr	x0, [sp, #96]
  4321f8:	ldrb	w0, [x0]
  4321fc:	cmp	w0, #0x2e
  432200:	b.eq	43224c <wcrtomb@plt+0x2d53c>  // b.none
  432204:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432208:	add	x0, x0, #0x420
  43220c:	ldr	x0, [x0]
  432210:	cmp	x0, #0x0
  432214:	b.eq	432228 <wcrtomb@plt+0x2d518>  // b.none
  432218:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43221c:	add	x0, x0, #0x420
  432220:	ldr	x0, [x0]
  432224:	blr	x0
  432228:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  43222c:	add	x0, x0, #0xfd0
  432230:	bl	404c60 <gettext@plt>
  432234:	mov	x2, x0
  432238:	mov	w1, #0x0                   	// #0
  43223c:	mov	w0, #0x0                   	// #0
  432240:	bl	404100 <error@plt>
  432244:	mov	w0, #0x2                   	// #2
  432248:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  43224c:	ldr	x0, [sp, #96]
  432250:	add	x0, x0, #0x1
  432254:	add	x1, sp, #0x60
  432258:	mov	w2, #0xa                   	// #10
  43225c:	bl	4040a0 <strtoul@plt>
  432260:	mov	w1, w0
  432264:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432268:	add	x0, x0, #0x88
  43226c:	str	w1, [x0]
  432270:	ldr	x0, [sp, #96]
  432274:	ldrb	w0, [x0]
  432278:	cmp	w0, #0x0
  43227c:	b.eq	432fb0 <wcrtomb@plt+0x2e2a0>  // b.none
  432280:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432284:	add	x0, x0, #0x420
  432288:	ldr	x0, [x0]
  43228c:	cmp	x0, #0x0
  432290:	b.eq	4322a4 <wcrtomb@plt+0x2d594>  // b.none
  432294:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432298:	add	x0, x0, #0x420
  43229c:	ldr	x0, [x0]
  4322a0:	blr	x0
  4322a4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4322a8:	add	x0, x0, #0xfd0
  4322ac:	bl	404c60 <gettext@plt>
  4322b0:	mov	x2, x0
  4322b4:	mov	w1, #0x0                   	// #0
  4322b8:	mov	w0, #0x0                   	// #0
  4322bc:	bl	404100 <error@plt>
  4322c0:	mov	w0, #0x2                   	// #2
  4322c4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4322c8:	mov	w0, #0x7                   	// #7
  4322cc:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  4322d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4322d4:	add	x0, x0, #0x2b4
  4322d8:	ldr	w0, [x0]
  4322dc:	add	w1, w0, #0x1
  4322e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4322e4:	add	x0, x0, #0x2b4
  4322e8:	str	w1, [x0]
  4322ec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4322f0:	mov	w0, #0x9                   	// #9
  4322f4:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  4322f8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4322fc:	mov	w0, #0x8                   	// #8
  432300:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  432304:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432308:	ldr	x0, [sp, #168]
  43230c:	ldr	x0, [x0]
  432310:	mov	x1, x0
  432314:	mov	w0, #0x3                   	// #3
  432318:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  43231c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432320:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432324:	add	x0, x0, #0x259
  432328:	mov	w1, #0x1                   	// #1
  43232c:	strb	w1, [x0]
  432330:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432334:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432338:	add	x0, x0, #0x2b4
  43233c:	ldr	w0, [x0]
  432340:	add	w1, w0, #0x1
  432344:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432348:	add	x0, x0, #0x2b4
  43234c:	str	w1, [x0]
  432350:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432354:	add	x0, x0, #0x24c
  432358:	ldr	w1, [x0]
  43235c:	mov	w0, #0x3000                	// #12288
  432360:	movk	w0, #0x58, lsl #16
  432364:	orr	w1, w1, w0
  432368:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43236c:	add	x0, x0, #0x24c
  432370:	str	w1, [x0]
  432374:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432378:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43237c:	add	x0, x0, #0x2b8
  432380:	ldr	x1, [sp, #48]
  432384:	str	x1, [x0]
  432388:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43238c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432390:	add	x0, x0, #0x280
  432394:	mov	w1, #0x1                   	// #1
  432398:	strb	w1, [x0]
  43239c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4323a0:	ldr	x0, [sp, #168]
  4323a4:	ldr	x0, [x0]
  4323a8:	mov	x1, x0
  4323ac:	mov	w0, #0x4                   	// #4
  4323b0:	bl	43030c <wcrtomb@plt+0x2b5fc>
  4323b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4323b8:	add	x0, x0, #0x37a
  4323bc:	mov	w1, #0x1                   	// #1
  4323c0:	strb	w1, [x0]
  4323c4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4323c8:	mov	w0, #0x6                   	// #6
  4323cc:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  4323d0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4323d4:	ldr	x0, [sp, #168]
  4323d8:	ldr	x0, [x0]
  4323dc:	mov	x1, x0
  4323e0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4323e4:	add	x0, x0, #0x1c8
  4323e8:	bl	430590 <wcrtomb@plt+0x2b880>
  4323ec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4323f0:	ldr	x0, [sp, #168]
  4323f4:	ldr	x0, [x0]
  4323f8:	mov	x1, x0
  4323fc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432400:	add	x0, x0, #0x1e0
  432404:	bl	430590 <wcrtomb@plt+0x2b880>
  432408:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43240c:	ldr	x0, [sp, #168]
  432410:	ldr	x0, [x0]
  432414:	mov	x1, x0
  432418:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  43241c:	add	x0, x0, #0x220
  432420:	bl	430590 <wcrtomb@plt+0x2b880>
  432424:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432428:	ldr	x0, [sp, #48]
  43242c:	cmp	x0, #0x0
  432430:	b.eq	43247c <wcrtomb@plt+0x2d76c>  // b.none
  432434:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432438:	add	x0, x0, #0x3e8
  43243c:	ldr	x0, [x0]
  432440:	mov	x5, x0
  432444:	mov	x4, #0x4                   	// #4
  432448:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  43244c:	add	x3, x0, #0xc48
  432450:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432454:	add	x2, x0, #0xc30
  432458:	ldr	x1, [sp, #48]
  43245c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432460:	add	x0, x0, #0xff0
  432464:	bl	443a80 <wcrtomb@plt+0x3ed70>
  432468:	mov	x1, x0
  43246c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432470:	add	x0, x0, #0xc48
  432474:	ldr	w0, [x0, x1, lsl #2]
  432478:	b	432480 <wcrtomb@plt+0x2d770>
  43247c:	mov	w0, #0x1                   	// #1
  432480:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  432484:	add	x1, x1, #0x25c
  432488:	str	w0, [x1]
  43248c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432490:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432494:	add	x0, x0, #0x50
  432498:	mov	w1, #0x1                   	// #1
  43249c:	strb	w1, [x0]
  4324a0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4324a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4324a8:	add	x0, x0, #0x50
  4324ac:	strb	wzr, [x0]
  4324b0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4324b4:	ldr	x0, [sp, #48]
  4324b8:	cmp	x0, #0x0
  4324bc:	b.eq	432560 <wcrtomb@plt+0x2d850>  // b.none
  4324c0:	ldr	x0, [sp, #48]
  4324c4:	ldrb	w0, [x0]
  4324c8:	cmp	w0, #0x2e
  4324cc:	b.ne	4324e8 <wcrtomb@plt+0x2d7d8>  // b.any
  4324d0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4324d4:	add	x0, x0, #0x8
  4324d8:	bl	40a8c8 <wcrtomb@plt+0x5bb8>
  4324dc:	ldr	x0, [sp, #48]
  4324e0:	add	x0, x0, #0x1
  4324e4:	str	x0, [sp, #48]
  4324e8:	add	x0, sp, #0x58
  4324ec:	mov	w2, #0x0                   	// #0
  4324f0:	mov	x1, x0
  4324f4:	ldr	x0, [sp, #48]
  4324f8:	bl	4040a0 <strtoul@plt>
  4324fc:	mov	w1, w0
  432500:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432504:	add	x0, x0, #0x388
  432508:	str	w1, [x0]
  43250c:	ldr	x0, [sp, #88]
  432510:	ldrb	w0, [x0]
  432514:	cmp	w0, #0x0
  432518:	b.eq	432fb8 <wcrtomb@plt+0x2e2a8>  // b.none
  43251c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432520:	add	x0, x0, #0x420
  432524:	ldr	x0, [x0]
  432528:	cmp	x0, #0x0
  43252c:	b.eq	432540 <wcrtomb@plt+0x2d830>  // b.none
  432530:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432534:	add	x0, x0, #0x420
  432538:	ldr	x0, [x0]
  43253c:	blr	x0
  432540:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432544:	add	x0, x0, #0x10
  432548:	bl	404c60 <gettext@plt>
  43254c:	mov	x2, x0
  432550:	mov	w1, #0x0                   	// #0
  432554:	mov	w0, #0x0                   	// #0
  432558:	bl	404100 <error@plt>
  43255c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  432560:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432564:	add	x0, x0, #0x388
  432568:	mov	w1, #0xa                   	// #10
  43256c:	str	w1, [x0]
  432570:	b	432fb8 <wcrtomb@plt+0x2e2a8>
  432574:	ldr	x0, [sp, #48]
  432578:	bl	40a8c8 <wcrtomb@plt+0x5bb8>
  43257c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432580:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432584:	add	x0, x0, #0x325
  432588:	mov	w1, #0x1                   	// #1
  43258c:	strb	w1, [x0]
  432590:	ldr	x0, [sp, #48]
  432594:	cmp	x0, #0x0
  432598:	b.eq	432fc0 <wcrtomb@plt+0x2e2b0>  // b.none
  43259c:	ldr	x0, [sp, #168]
  4325a0:	ldr	x1, [sp, #48]
  4325a4:	str	x1, [x0, #32]
  4325a8:	b	432fc0 <wcrtomb@plt+0x2e2b0>
  4325ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4325b0:	add	x0, x0, #0x3f8
  4325b4:	mov	w1, #0x1                   	// #1
  4325b8:	strb	w1, [x0]
  4325bc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4325c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4325c4:	add	x0, x0, #0x3f8
  4325c8:	strb	wzr, [x0]
  4325cc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4325d0:	mov	w0, #0x4                   	// #4
  4325d4:	bl	4304f4 <wcrtomb@plt+0x2b7e4>
  4325d8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4325dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4325e0:	add	x0, x0, #0x428
  4325e4:	mov	w1, #0x1                   	// #1
  4325e8:	strb	w1, [x0]
  4325ec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4325f0:	ldr	x0, [sp, #48]
  4325f4:	bl	42fc68 <wcrtomb@plt+0x2af58>
  4325f8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4325fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432600:	add	x0, x0, #0x3f0
  432604:	ldr	x1, [sp, #48]
  432608:	str	x1, [x0]
  43260c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432610:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432614:	add	x0, x0, #0x271
  432618:	mov	w1, #0x1                   	// #1
  43261c:	strb	w1, [x0]
  432620:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432624:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432628:	add	x0, x0, #0x3e9
  43262c:	mov	w1, #0x1                   	// #1
  432630:	strb	w1, [x0]
  432634:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432638:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43263c:	add	x0, x0, #0x2a0
  432640:	mov	w1, #0x1                   	// #1
  432644:	strb	w1, [x0]
  432648:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43264c:	ldr	x0, [sp, #168]
  432650:	ldr	x0, [x0]
  432654:	mov	x1, x0
  432658:	mov	w0, #0x6                   	// #6
  43265c:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  432660:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432664:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432668:	add	x2, x0, #0x240
  43266c:	mov	x1, #0xffffffff            	// #4294967295
  432670:	ldr	x0, [sp, #48]
  432674:	bl	4316c4 <wcrtomb@plt+0x2c9b4>
  432678:	str	x0, [sp, #136]
  43267c:	ldr	x0, [sp, #136]
  432680:	cmn	x0, #0x1
  432684:	b.ne	4326cc <wcrtomb@plt+0x2d9bc>  // b.any
  432688:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43268c:	add	x0, x0, #0x2f0
  432690:	mov	w1, #0xffffffff            	// #-1
  432694:	str	w1, [x0]
  432698:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43269c:	add	x0, x0, #0x240
  4326a0:	ldr	x0, [x0]
  4326a4:	cmp	x0, #0x0
  4326a8:	b.eq	432fc8 <wcrtomb@plt+0x2e2b8>  // b.none
  4326ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4326b0:	add	x0, x0, #0x240
  4326b4:	ldr	x2, [x0]
  4326b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4326bc:	add	x1, x0, #0x2f0
  4326c0:	mov	x0, x2
  4326c4:	bl	427080 <wcrtomb@plt+0x22370>
  4326c8:	b	432fc8 <wcrtomb@plt+0x2e2b8>
  4326cc:	ldr	x0, [sp, #136]
  4326d0:	mov	w1, w0
  4326d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4326d8:	add	x0, x0, #0x2f0
  4326dc:	str	w1, [x0]
  4326e0:	b	432fc8 <wcrtomb@plt+0x2e2b8>
  4326e4:	ldr	x0, [sp, #48]
  4326e8:	bl	423b54 <wcrtomb@plt+0x1ee44>
  4326ec:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4326f0:	ldr	x0, [sp, #48]
  4326f4:	bl	4511a0 <argp_usage@@Base+0x80b4>
  4326f8:	mov	x1, x0
  4326fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432700:	add	x0, x0, #0x288
  432704:	str	x1, [x0]
  432708:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43270c:	add	x0, x0, #0x288
  432710:	ldr	x0, [x0]
  432714:	cmp	x0, #0x0
  432718:	b.ne	432760 <wcrtomb@plt+0x2da50>  // b.any
  43271c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432720:	add	x0, x0, #0x420
  432724:	ldr	x0, [x0]
  432728:	cmp	x0, #0x0
  43272c:	b.eq	432740 <wcrtomb@plt+0x2da30>  // b.none
  432730:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432734:	add	x0, x0, #0x420
  432738:	ldr	x0, [x0]
  43273c:	blr	x0
  432740:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432744:	add	x0, x0, #0x38
  432748:	bl	404c60 <gettext@plt>
  43274c:	mov	x2, x0
  432750:	mov	w1, #0x0                   	// #0
  432754:	mov	w0, #0x0                   	// #0
  432758:	bl	404100 <error@plt>
  43275c:	bl	412ae0 <wcrtomb@plt+0xddd0>
  432760:	mov	w0, #0x0                   	// #0
  432764:	bl	404b50 <umask@plt>
  432768:	mov	w1, w0
  43276c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432770:	add	x0, x0, #0x80
  432774:	str	w1, [x0]
  432778:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43277c:	add	x0, x0, #0x80
  432780:	ldr	w0, [x0]
  432784:	bl	404b50 <umask@plt>
  432788:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43278c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432790:	add	x0, x0, #0x271
  432794:	strb	wzr, [x0]
  432798:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43279c:	ldr	x0, [sp, #168]
  4327a0:	ldr	x0, [x0]
  4327a4:	mov	x1, x0
  4327a8:	mov	w0, #0x1                   	// #1
  4327ac:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  4327b0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4327b4:	ldr	x0, [sp, #48]
  4327b8:	ldrb	w0, [x0]
  4327bc:	mov	w2, #0x0                   	// #0
  4327c0:	mov	w1, w0
  4327c4:	mov	x0, #0x0                   	// #0
  4327c8:	bl	457dfc <argp_usage@@Base+0xed10>
  4327cc:	ldr	x0, [sp, #48]
  4327d0:	add	x0, x0, #0x1
  4327d4:	str	x0, [sp, #48]
  4327d8:	ldr	x0, [sp, #48]
  4327dc:	ldrb	w0, [x0]
  4327e0:	cmp	w0, #0x0
  4327e4:	b.ne	4327b4 <wcrtomb@plt+0x2daa4>  // b.any
  4327e8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4327ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4327f0:	add	x0, x0, #0x2d0
  4327f4:	mov	w1, #0x1                   	// #1
  4327f8:	strb	w1, [x0]
  4327fc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432800:	ldr	x0, [sp, #168]
  432804:	ldr	x0, [x0]
  432808:	mov	x1, x0
  43280c:	mov	w0, #0x1                   	// #1
  432810:	bl	43030c <wcrtomb@plt+0x2b5fc>
  432814:	ldr	x0, [sp, #48]
  432818:	cmp	x0, #0x0
  43281c:	b.ne	432834 <wcrtomb@plt+0x2db24>  // b.any
  432820:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432824:	add	x0, x0, #0x328
  432828:	mov	x1, #0x1                   	// #1
  43282c:	str	x1, [x0]
  432830:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432834:	add	x1, sp, #0x50
  432838:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  43283c:	add	x4, x0, #0xe80
  432840:	mov	x3, x1
  432844:	mov	w2, #0xa                   	// #10
  432848:	mov	x1, #0x0                   	// #0
  43284c:	ldr	x0, [sp, #48]
  432850:	bl	45b9cc <argp_usage@@Base+0x128e0>
  432854:	cmp	w0, #0x0
  432858:	b.ne	432870 <wcrtomb@plt+0x2db60>  // b.any
  43285c:	ldr	x1, [sp, #80]
  432860:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432864:	add	x0, x0, #0x328
  432868:	str	x1, [x0]
  43286c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432870:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432874:	add	x0, x0, #0x420
  432878:	ldr	x0, [x0]
  43287c:	cmp	x0, #0x0
  432880:	b.eq	432894 <wcrtomb@plt+0x2db84>  // b.none
  432884:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432888:	add	x0, x0, #0x420
  43288c:	ldr	x0, [x0]
  432890:	blr	x0
  432894:	ldr	x0, [sp, #48]
  432898:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43289c:	mov	x19, x0
  4328a0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4328a4:	add	x0, x0, #0x58
  4328a8:	bl	404c60 <gettext@plt>
  4328ac:	mov	x4, x0
  4328b0:	mov	x3, x19
  4328b4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4328b8:	add	x2, x0, #0xea8
  4328bc:	mov	w1, #0x0                   	// #0
  4328c0:	mov	w0, #0x0                   	// #0
  4328c4:	bl	404100 <error@plt>
  4328c8:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4328cc:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  4328d0:	add	x0, x0, #0x3c0
  4328d4:	bl	42fc68 <wcrtomb@plt+0x2af58>
  4328d8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4328dc:	ldr	x0, [sp, #168]
  4328e0:	ldr	x0, [x0]
  4328e4:	mov	x1, x0
  4328e8:	mov	w0, #0x0                   	// #0
  4328ec:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  4328f0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4328f4:	ldr	x0, [sp, #168]
  4328f8:	ldr	x0, [x0]
  4328fc:	mov	x1, x0
  432900:	mov	w0, #0x2                   	// #2
  432904:	bl	4318a0 <wcrtomb@plt+0x2cb90>
  432908:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  43290c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432910:	add	x2, x0, #0x278
  432914:	mov	x1, #0xffffffff            	// #4294967295
  432918:	ldr	x0, [sp, #48]
  43291c:	bl	4316c4 <wcrtomb@plt+0x2c9b4>
  432920:	str	x0, [sp, #144]
  432924:	ldr	x0, [sp, #144]
  432928:	cmn	x0, #0x1
  43292c:	b.ne	432974 <wcrtomb@plt+0x2dc64>  // b.any
  432930:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432934:	add	x0, x0, #0x340
  432938:	mov	w1, #0xffffffff            	// #-1
  43293c:	str	w1, [x0]
  432940:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432944:	add	x0, x0, #0x278
  432948:	ldr	x0, [x0]
  43294c:	cmp	x0, #0x0
  432950:	b.eq	432fd0 <wcrtomb@plt+0x2e2c0>  // b.none
  432954:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432958:	add	x0, x0, #0x278
  43295c:	ldr	x2, [x0]
  432960:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432964:	add	x1, x0, #0x340
  432968:	mov	x0, x2
  43296c:	bl	426f60 <wcrtomb@plt+0x22250>
  432970:	b	432fd0 <wcrtomb@plt+0x2e2c0>
  432974:	ldr	x0, [sp, #144]
  432978:	mov	w1, w0
  43297c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432980:	add	x0, x0, #0x340
  432984:	str	w1, [x0]
  432988:	b	432fd0 <wcrtomb@plt+0x2e2c0>
  43298c:	ldr	x0, [sp, #48]
  432990:	bl	4239ec <wcrtomb@plt+0x1ecdc>
  432994:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432998:	ldr	x0, [sp, #48]
  43299c:	ldrb	w0, [x0]
  4329a0:	mov	w2, #0x1                   	// #1
  4329a4:	mov	w1, w0
  4329a8:	mov	x0, #0x0                   	// #0
  4329ac:	bl	457dfc <argp_usage@@Base+0xed10>
  4329b0:	ldr	x0, [sp, #48]
  4329b4:	add	x0, x0, #0x1
  4329b8:	str	x0, [sp, #48]
  4329bc:	ldr	x0, [sp, #48]
  4329c0:	ldrb	w0, [x0]
  4329c4:	cmp	w0, #0x0
  4329c8:	b.ne	432998 <wcrtomb@plt+0x2dc88>  // b.any
  4329cc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4329d0:	ldr	x0, [sp, #48]
  4329d4:	bl	430188 <wcrtomb@plt+0x2b478>
  4329d8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  4329dc:	ldr	x1, [sp, #48]
  4329e0:	ldr	x0, [sp, #168]
  4329e4:	bl	4310b8 <wcrtomb@plt+0x2c3a8>
  4329e8:	str	x0, [sp, #152]
  4329ec:	ldr	x0, [sp, #168]
  4329f0:	mov	w1, #0x1                   	// #1
  4329f4:	strb	w1, [x0, #17]
  4329f8:	ldr	x0, [sp, #152]
  4329fc:	bl	417b10 <wcrtomb@plt+0x12e00>
  432a00:	ldr	x0, [sp, #152]
  432a04:	bl	404880 <free@plt>
  432a08:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432a0c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  432a10:	add	x0, x0, #0x3d8
  432a14:	bl	42fc68 <wcrtomb@plt+0x2af58>
  432a18:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432a1c:	add	x1, sp, #0x48
  432a20:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432a24:	add	x4, x0, #0xf28
  432a28:	mov	x3, x1
  432a2c:	mov	w2, #0xa                   	// #10
  432a30:	mov	x1, #0x0                   	// #0
  432a34:	ldr	x0, [sp, #48]
  432a38:	bl	45b9cc <argp_usage@@Base+0x128e0>
  432a3c:	cmp	w0, #0x0
  432a40:	b.eq	432aa4 <wcrtomb@plt+0x2dd94>  // b.none
  432a44:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432a48:	add	x0, x0, #0x420
  432a4c:	ldr	x0, [x0]
  432a50:	cmp	x0, #0x0
  432a54:	b.eq	432a68 <wcrtomb@plt+0x2dd58>  // b.none
  432a58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432a5c:	add	x0, x0, #0x420
  432a60:	ldr	x0, [x0]
  432a64:	blr	x0
  432a68:	ldr	x0, [sp, #48]
  432a6c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  432a70:	mov	x19, x0
  432a74:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432a78:	add	x0, x0, #0x68
  432a7c:	bl	404c60 <gettext@plt>
  432a80:	mov	x4, x0
  432a84:	mov	x3, x19
  432a88:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432a8c:	add	x2, x0, #0xea8
  432a90:	mov	w1, #0x0                   	// #0
  432a94:	mov	w0, #0x0                   	// #0
  432a98:	bl	404100 <error@plt>
  432a9c:	mov	w0, #0x2                   	// #2
  432aa0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  432aa4:	ldr	x1, [sp, #72]
  432aa8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432aac:	add	x0, x0, #0x3c8
  432ab0:	str	x1, [x0]
  432ab4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432ab8:	add	x0, x0, #0x3c8
  432abc:	ldr	x0, [x0]
  432ac0:	and	x0, x0, #0x1ff
  432ac4:	cmp	x0, #0x0
  432ac8:	b.eq	432b18 <wcrtomb@plt+0x2de08>  // b.none
  432acc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432ad0:	add	x0, x0, #0x420
  432ad4:	ldr	x0, [x0]
  432ad8:	cmp	x0, #0x0
  432adc:	b.eq	432af0 <wcrtomb@plt+0x2dde0>  // b.none
  432ae0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432ae4:	add	x0, x0, #0x420
  432ae8:	ldr	x0, [x0]
  432aec:	blr	x0
  432af0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432af4:	add	x0, x0, #0x80
  432af8:	bl	404c60 <gettext@plt>
  432afc:	mov	w3, #0x200                 	// #512
  432b00:	mov	x2, x0
  432b04:	mov	w1, #0x0                   	// #0
  432b08:	mov	w0, #0x0                   	// #0
  432b0c:	bl	404100 <error@plt>
  432b10:	mov	w0, #0x2                   	// #2
  432b14:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  432b18:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432b1c:	add	x0, x0, #0x3c8
  432b20:	ldr	x0, [x0]
  432b24:	lsr	x0, x0, #9
  432b28:	mov	w1, w0
  432b2c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432b30:	add	x0, x0, #0x31c
  432b34:	str	w1, [x0]
  432b38:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432b3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432b40:	add	x0, x0, #0x52
  432b44:	mov	w1, #0x1                   	// #1
  432b48:	strb	w1, [x0]
  432b4c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432b50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432b54:	add	x0, x0, #0x318
  432b58:	mov	w1, #0x1                   	// #1
  432b5c:	strb	w1, [x0]
  432b60:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432b64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432b68:	add	x0, x0, #0x338
  432b6c:	mov	w1, #0x1                   	// #1
  432b70:	strb	w1, [x0]
  432b74:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432b78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432b7c:	add	x0, x0, #0x2a0
  432b80:	ldr	x1, [sp, #48]
  432b84:	str	x1, [x0]
  432b88:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432b8c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432b90:	add	x0, x0, #0x358
  432b94:	ldr	x1, [sp, #48]
  432b98:	str	x1, [x0]
  432b9c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432ba0:	bl	43025c <wcrtomb@plt+0x2b54c>
  432ba4:	str	x0, [sp, #160]
  432ba8:	ldr	x0, [sp, #160]
  432bac:	bl	404770 <puts@plt>
  432bb0:	bl	449dbc <argp_usage@@Base+0xcd0>
  432bb4:	ldr	x0, [sp, #160]
  432bb8:	bl	404880 <free@plt>
  432bbc:	mov	w0, #0x0                   	// #0
  432bc0:	bl	4040d0 <exit@plt>
  432bc4:	bl	41e9dc <wcrtomb@plt+0x19ccc>
  432bc8:	bl	449dbc <argp_usage@@Base+0xcd0>
  432bcc:	mov	w0, #0x0                   	// #0
  432bd0:	bl	4040d0 <exit@plt>
  432bd4:	add	x1, sp, #0x40
  432bd8:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432bdc:	add	x4, x0, #0xe80
  432be0:	mov	x3, x1
  432be4:	mov	w2, #0xa                   	// #10
  432be8:	mov	x1, #0x0                   	// #0
  432bec:	ldr	x0, [sp, #48]
  432bf0:	bl	45b9cc <argp_usage@@Base+0x128e0>
  432bf4:	cmp	w0, #0x0
  432bf8:	b.eq	432c5c <wcrtomb@plt+0x2df4c>  // b.none
  432bfc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432c00:	add	x0, x0, #0x420
  432c04:	ldr	x0, [x0]
  432c08:	cmp	x0, #0x0
  432c0c:	b.eq	432c20 <wcrtomb@plt+0x2df10>  // b.none
  432c10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432c14:	add	x0, x0, #0x420
  432c18:	ldr	x0, [x0]
  432c1c:	blr	x0
  432c20:	ldr	x0, [sp, #48]
  432c24:	bl	459cd8 <argp_usage@@Base+0x10bec>
  432c28:	mov	x19, x0
  432c2c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432c30:	add	x0, x0, #0xa8
  432c34:	bl	404c60 <gettext@plt>
  432c38:	mov	x4, x0
  432c3c:	mov	x3, x19
  432c40:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432c44:	add	x2, x0, #0xea8
  432c48:	mov	w1, #0x0                   	// #0
  432c4c:	mov	w0, #0x0                   	// #0
  432c50:	bl	404100 <error@plt>
  432c54:	mov	w0, #0x2                   	// #2
  432c58:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  432c5c:	ldr	x1, [sp, #64]
  432c60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432c64:	add	x0, x0, #0x3a0
  432c68:	str	x1, [x0]
  432c6c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432c70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432c74:	add	x0, x0, #0x2ea
  432c78:	mov	w1, #0x1                   	// #1
  432c7c:	strb	w1, [x0]
  432c80:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432c84:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432c88:	add	x0, x0, #0x378
  432c8c:	mov	w1, #0x1                   	// #1
  432c90:	strb	w1, [x0]
  432c94:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432c98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432c9c:	add	x0, x0, #0x3e8
  432ca0:	ldr	x0, [x0]
  432ca4:	mov	x5, x0
  432ca8:	mov	x4, #0x4                   	// #4
  432cac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432cb0:	add	x3, x0, #0x148
  432cb4:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  432cb8:	add	x2, x0, #0xec8
  432cbc:	ldr	x1, [sp, #48]
  432cc0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432cc4:	add	x0, x0, #0xc8
  432cc8:	bl	443a80 <wcrtomb@plt+0x3ed70>
  432ccc:	mov	x1, x0
  432cd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432cd4:	add	x0, x0, #0x148
  432cd8:	ldr	w1, [x0, x1, lsl #2]
  432cdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432ce0:	add	x0, x0, #0x238
  432ce4:	str	w1, [x0]
  432ce8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432cec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432cf0:	add	x0, x0, #0x325
  432cf4:	mov	w1, #0x1                   	// #1
  432cf8:	strb	w1, [x0]
  432cfc:	ldr	x0, [sp, #168]
  432d00:	ldr	x1, [sp, #48]
  432d04:	str	x1, [x0, #24]
  432d08:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432d0c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432d10:	add	x0, x0, #0x298
  432d14:	ldr	x0, [x0]
  432d18:	cmp	x0, #0x0
  432d1c:	b.eq	432d68 <wcrtomb@plt+0x2e058>  // b.none
  432d20:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432d24:	add	x0, x0, #0x420
  432d28:	ldr	x0, [x0]
  432d2c:	cmp	x0, #0x0
  432d30:	b.eq	432d44 <wcrtomb@plt+0x2e034>  // b.none
  432d34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432d38:	add	x0, x0, #0x420
  432d3c:	ldr	x0, [x0]
  432d40:	blr	x0
  432d44:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432d48:	add	x0, x0, #0xd0
  432d4c:	bl	404c60 <gettext@plt>
  432d50:	mov	x2, x0
  432d54:	mov	w1, #0x0                   	// #0
  432d58:	mov	w0, #0x0                   	// #0
  432d5c:	bl	404100 <error@plt>
  432d60:	mov	w0, #0x2                   	// #2
  432d64:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  432d68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432d6c:	add	x0, x0, #0x298
  432d70:	ldr	x1, [sp, #48]
  432d74:	str	x1, [x0]
  432d78:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432d7c:	ldr	x0, [sp, #48]
  432d80:	cmp	x0, #0x0
  432d84:	b.eq	432d94 <wcrtomb@plt+0x2e084>  // b.none
  432d88:	ldr	x0, [sp, #48]
  432d8c:	bl	43078c <wcrtomb@plt+0x2ba7c>
  432d90:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432d94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432d98:	add	x0, x0, #0x2e9
  432d9c:	mov	w1, #0x1                   	// #1
  432da0:	strb	w1, [x0]
  432da4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432da8:	ldr	x0, [sp, #48]
  432dac:	bl	435eb0 <wcrtomb@plt+0x311a0>
  432db0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432db4:	ldr	x0, [sp, #168]
  432db8:	ldr	x0, [x0]
  432dbc:	mov	x1, x0
  432dc0:	ldr	x0, [sp, #48]
  432dc4:	bl	430590 <wcrtomb@plt+0x2b880>
  432dc8:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432dcc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432dd0:	add	x0, x0, #0x2c8
  432dd4:	ldr	x1, [sp, #48]
  432dd8:	str	x1, [x0]
  432ddc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432de0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432de4:	add	x0, x0, #0x404
  432de8:	mov	w1, #0xffffffff            	// #-1
  432dec:	str	w1, [x0]
  432df0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432df4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432df8:	add	x0, x0, #0x294
  432dfc:	mov	w1, #0xffffffff            	// #-1
  432e00:	str	w1, [x0]
  432e04:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e08:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  432e0c:	add	x0, x0, #0x3d8
  432e10:	bl	42fc68 <wcrtomb@plt+0x2af58>
  432e14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432e18:	add	x0, x0, #0x3b0
  432e1c:	mov	w1, #0x1                   	// #1
  432e20:	str	w1, [x0]
  432e24:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432e2c:	add	x0, x0, #0x3b0
  432e30:	mov	w1, #0xffffffff            	// #-1
  432e34:	str	w1, [x0]
  432e38:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e3c:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  432e40:	add	x0, x0, #0x3d8
  432e44:	bl	42fc68 <wcrtomb@plt+0x2af58>
  432e48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432e4c:	add	x0, x0, #0x408
  432e50:	mov	w1, #0x1                   	// #1
  432e54:	str	w1, [x0]
  432e58:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432e60:	add	x0, x0, #0x408
  432e64:	mov	w1, #0xffffffff            	// #-1
  432e68:	str	w1, [x0]
  432e6c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e70:	mov	w0, #0x1                   	// #1
  432e74:	bl	42fd38 <wcrtomb@plt+0x2b028>
  432e78:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e7c:	mov	w0, #0xffffffff            	// #-1
  432e80:	bl	42fd38 <wcrtomb@plt+0x2b028>
  432e84:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432e88:	mov	w0, #0x1                   	// #1
  432e8c:	bl	42fd38 <wcrtomb@plt+0x2b028>
  432e90:	ldr	w0, [sp, #60]
  432e94:	cmp	w0, #0x14e
  432e98:	cset	w0, eq  // eq = none
  432e9c:	and	w0, w0, #0xff
  432ea0:	mov	w1, w0
  432ea4:	ldr	x0, [sp, #48]
  432ea8:	bl	4391a4 <wcrtomb@plt+0x34494>
  432eac:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432eb0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  432eb4:	add	x0, x0, #0x404
  432eb8:	mov	w1, #0x1                   	// #1
  432ebc:	str	w1, [x0]
  432ec0:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432ec4:	ldr	x0, [sp, #48]
  432ec8:	bl	437ae0 <wcrtomb@plt+0x32dd0>
  432ecc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432ed0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432ed4:	add	x0, x0, #0xf8
  432ed8:	bl	404c60 <gettext@plt>
  432edc:	mov	x1, x0
  432ee0:	ldr	x0, [sp, #40]
  432ee4:	bl	447278 <argp_error@@Base>
  432ee8:	mov	w0, #0x40                  	// #64
  432eec:	bl	4040d0 <exit@plt>
  432ef0:	ldr	x0, [sp, #168]
  432ef4:	ldr	x0, [x0]
  432ef8:	ldr	w0, [x0]
  432efc:	cmp	w0, #0x2
  432f00:	b.ne	432f44 <wcrtomb@plt+0x2e234>  // b.any
  432f04:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432f08:	add	x0, x0, #0x130
  432f0c:	bl	404c60 <gettext@plt>
  432f10:	mov	x2, x0
  432f14:	ldr	x0, [sp, #168]
  432f18:	ldr	x0, [x0]
  432f1c:	ldr	x1, [x0, #8]
  432f20:	ldr	x0, [sp, #168]
  432f24:	ldr	x0, [x0]
  432f28:	ldr	x0, [x0, #16]
  432f2c:	mov	x4, x0
  432f30:	mov	x3, x1
  432f34:	mov	w1, #0x0                   	// #0
  432f38:	mov	w0, #0x0                   	// #0
  432f3c:	bl	404100 <error@plt>
  432f40:	b	432f88 <wcrtomb@plt+0x2e278>
  432f44:	ldr	x0, [sp, #168]
  432f48:	ldr	x0, [x0]
  432f4c:	ldr	w0, [x0]
  432f50:	cmp	w0, #0x0
  432f54:	b.ne	432f88 <wcrtomb@plt+0x2e278>  // b.any
  432f58:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  432f5c:	add	x0, x0, #0x150
  432f60:	bl	404c60 <gettext@plt>
  432f64:	mov	x1, x0
  432f68:	ldr	x0, [sp, #168]
  432f6c:	ldr	x0, [x0]
  432f70:	ldr	x0, [x0, #8]
  432f74:	mov	x3, x0
  432f78:	mov	x2, x1
  432f7c:	mov	w1, #0x0                   	// #0
  432f80:	mov	w0, #0x0                   	// #0
  432f84:	bl	404100 <error@plt>
  432f88:	mov	w0, #0x40                  	// #64
  432f8c:	bl	4040d0 <exit@plt>
  432f90:	mov	w0, #0x7                   	// #7
  432f94:	b	432fd8 <wcrtomb@plt+0x2e2c8>
  432f98:	nop
  432f9c:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fa0:	nop
  432fa4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fa8:	nop
  432fac:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fb0:	nop
  432fb4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fb8:	nop
  432fbc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fc0:	nop
  432fc4:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fc8:	nop
  432fcc:	b	432fd4 <wcrtomb@plt+0x2e2c4>
  432fd0:	nop
  432fd4:	mov	w0, #0x0                   	// #0
  432fd8:	ldr	x19, [sp, #16]
  432fdc:	ldp	x29, x30, [sp], #176
  432fe0:	ret
  432fe4:	stp	x29, x30, [sp, #-32]!
  432fe8:	mov	x29, sp
  432fec:	str	w0, [sp, #28]
  432ff0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  432ff4:	add	x0, x0, #0x498
  432ff8:	ldr	x1, [x0]
  432ffc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433000:	add	x0, x0, #0xe08
  433004:	ldr	x0, [x0]
  433008:	mov	x3, x0
  43300c:	mov	w2, #0x4                   	// #4
  433010:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433014:	add	x0, x0, #0x158
  433018:	bl	447114 <argp_help@@Base>
  43301c:	bl	449dbc <argp_usage@@Base+0xcd0>
  433020:	ldr	w0, [sp, #28]
  433024:	bl	4040d0 <exit@plt>
  433028:	sub	sp, sp, #0x10
  43302c:	str	x0, [sp, #8]
  433030:	str	w1, [sp, #4]
  433034:	b	433060 <wcrtomb@plt+0x2e350>
  433038:	ldr	x0, [sp, #8]
  43303c:	ldr	w0, [x0, #8]
  433040:	ldr	w1, [sp, #4]
  433044:	cmp	w1, w0
  433048:	b.ne	433054 <wcrtomb@plt+0x2e344>  // b.any
  43304c:	ldr	x0, [sp, #8]
  433050:	b	4330b4 <wcrtomb@plt+0x2e3a4>
  433054:	ldr	x0, [sp, #8]
  433058:	add	x0, x0, #0x30
  43305c:	str	x0, [sp, #8]
  433060:	ldr	x0, [sp, #8]
  433064:	ldr	x0, [x0]
  433068:	cmp	x0, #0x0
  43306c:	b.ne	433038 <wcrtomb@plt+0x2e328>  // b.any
  433070:	ldr	x0, [sp, #8]
  433074:	ldr	w0, [x0, #8]
  433078:	cmp	w0, #0x0
  43307c:	b.ne	433038 <wcrtomb@plt+0x2e328>  // b.any
  433080:	ldr	x0, [sp, #8]
  433084:	ldr	x0, [x0, #16]
  433088:	cmp	x0, #0x0
  43308c:	b.ne	433038 <wcrtomb@plt+0x2e328>  // b.any
  433090:	ldr	x0, [sp, #8]
  433094:	ldr	w0, [x0, #24]
  433098:	cmp	w0, #0x0
  43309c:	b.ne	433038 <wcrtomb@plt+0x2e328>  // b.any
  4330a0:	ldr	x0, [sp, #8]
  4330a4:	ldr	x0, [x0, #32]
  4330a8:	cmp	x0, #0x0
  4330ac:	b.ne	433038 <wcrtomb@plt+0x2e328>  // b.any
  4330b0:	mov	x0, #0x0                   	// #0
  4330b4:	add	sp, sp, #0x10
  4330b8:	ret
  4330bc:	stp	x29, x30, [sp, #-48]!
  4330c0:	mov	x29, sp
  4330c4:	str	x0, [sp, #24]
  4330c8:	str	w1, [sp, #20]
  4330cc:	str	xzr, [sp, #40]
  4330d0:	ldr	x0, [sp, #24]
  4330d4:	ldr	x0, [x0]
  4330d8:	ldr	w1, [sp, #20]
  4330dc:	bl	433028 <wcrtomb@plt+0x2e318>
  4330e0:	str	x0, [sp, #40]
  4330e4:	ldr	x0, [sp, #40]
  4330e8:	cmp	x0, #0x0
  4330ec:	b.ne	433158 <wcrtomb@plt+0x2e448>  // b.any
  4330f0:	ldr	x0, [sp, #24]
  4330f4:	ldr	x0, [x0, #32]
  4330f8:	cmp	x0, #0x0
  4330fc:	b.eq	433158 <wcrtomb@plt+0x2e448>  // b.none
  433100:	ldr	x0, [sp, #24]
  433104:	ldr	x0, [x0, #32]
  433108:	str	x0, [sp, #32]
  43310c:	b	433140 <wcrtomb@plt+0x2e430>
  433110:	ldr	x0, [sp, #32]
  433114:	ldr	x0, [x0]
  433118:	ldr	x0, [x0]
  43311c:	ldr	w1, [sp, #20]
  433120:	bl	433028 <wcrtomb@plt+0x2e318>
  433124:	str	x0, [sp, #40]
  433128:	ldr	x0, [sp, #40]
  43312c:	cmp	x0, #0x0
  433130:	b.ne	433154 <wcrtomb@plt+0x2e444>  // b.any
  433134:	ldr	x0, [sp, #32]
  433138:	add	x0, x0, #0x20
  43313c:	str	x0, [sp, #32]
  433140:	ldr	x0, [sp, #32]
  433144:	ldr	x0, [x0]
  433148:	cmp	x0, #0x0
  43314c:	b.ne	433110 <wcrtomb@plt+0x2e400>  // b.any
  433150:	b	433158 <wcrtomb@plt+0x2e448>
  433154:	nop
  433158:	ldr	x0, [sp, #40]
  43315c:	ldp	x29, x30, [sp], #48
  433160:	ret
  433164:	stp	x29, x30, [sp, #-64]!
  433168:	mov	x29, sp
  43316c:	str	w0, [sp, #44]
  433170:	str	x1, [sp, #32]
  433174:	str	x2, [sp, #24]
  433178:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43317c:	add	x0, x0, #0xc80
  433180:	ldr	x1, [sp, #24]
  433184:	str	x1, [x0]
  433188:	add	x1, sp, #0x3c
  43318c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433190:	add	x5, x0, #0xc80
  433194:	mov	x4, x1
  433198:	mov	w3, #0x28                  	// #40
  43319c:	ldr	x2, [sp, #32]
  4331a0:	ldr	w1, [sp, #44]
  4331a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4331a8:	add	x0, x0, #0x158
  4331ac:	bl	448e70 <argp_parse@@Base>
  4331b0:	cmp	w0, #0x0
  4331b4:	b.eq	4331bc <wcrtomb@plt+0x2e4ac>  // b.none
  4331b8:	bl	404710 <abort@plt>
  4331bc:	ldr	x0, [sp, #24]
  4331c0:	ldr	w0, [x0]
  4331c4:	cmp	w0, #0x0
  4331c8:	b.ne	433234 <wcrtomb@plt+0x2e524>  // b.any
  4331cc:	bl	427778 <wcrtomb@plt+0x22a68>
  4331d0:	and	w0, w0, #0xff
  4331d4:	cmp	w0, #0x0
  4331d8:	b.eq	433234 <wcrtomb@plt+0x2e524>  // b.none
  4331dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4331e0:	add	x0, x0, #0x420
  4331e4:	ldr	x0, [x0]
  4331e8:	cmp	x0, #0x0
  4331ec:	b.eq	433200 <wcrtomb@plt+0x2e4f0>  // b.none
  4331f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4331f4:	add	x0, x0, #0x420
  4331f8:	ldr	x0, [x0]
  4331fc:	blr	x0
  433200:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433204:	add	x0, x0, #0x6d8
  433208:	bl	404c60 <gettext@plt>
  43320c:	mov	x1, x0
  433210:	ldr	x0, [sp, #24]
  433214:	ldr	x0, [x0, #8]
  433218:	mov	x3, x0
  43321c:	mov	x2, x1
  433220:	mov	w1, #0x0                   	// #0
  433224:	mov	w0, #0x0                   	// #0
  433228:	bl	404100 <error@plt>
  43322c:	mov	w0, #0x2                   	// #2
  433230:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433234:	nop
  433238:	ldp	x29, x30, [sp], #64
  43323c:	ret
  433240:	stp	x29, x30, [sp, #-304]!
  433244:	mov	x29, sp
  433248:	str	x19, [sp, #16]
  43324c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433250:	add	x0, x0, #0x6f8
  433254:	bl	404bf0 <getenv@plt>
  433258:	str	x0, [sp, #296]
  43325c:	str	wzr, [sp, #32]
  433260:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433264:	add	x0, x0, #0x6f8
  433268:	str	x0, [sp, #40]
  43326c:	str	xzr, [sp, #48]
  433270:	str	xzr, [sp, #56]
  433274:	ldr	x0, [sp, #296]
  433278:	cmp	x0, #0x0
  43327c:	b.eq	433358 <wcrtomb@plt+0x2e648>  // b.none
  433280:	mov	x0, #0x1                   	// #1
  433284:	str	x0, [sp, #80]
  433288:	add	x0, sp, #0x40
  43328c:	mov	w2, #0xe46                 	// #3654
  433290:	movk	w2, #0x200, lsl #16
  433294:	mov	x1, x0
  433298:	ldr	x0, [sp, #296]
  43329c:	bl	4423e8 <wcrtomb@plt+0x3d6d8>
  4332a0:	cmp	w0, #0x0
  4332a4:	b.eq	4332fc <wcrtomb@plt+0x2e5ec>  // b.none
  4332a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4332ac:	add	x0, x0, #0x420
  4332b0:	ldr	x0, [x0]
  4332b4:	cmp	x0, #0x0
  4332b8:	b.eq	4332cc <wcrtomb@plt+0x2e5bc>  // b.none
  4332bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4332c0:	add	x0, x0, #0x420
  4332c4:	ldr	x0, [x0]
  4332c8:	blr	x0
  4332cc:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4332d0:	add	x0, x0, #0x708
  4332d4:	bl	404c60 <gettext@plt>
  4332d8:	mov	x19, x0
  4332dc:	add	x0, sp, #0x40
  4332e0:	bl	4426b0 <wcrtomb@plt+0x3d9a0>
  4332e4:	mov	x3, x0
  4332e8:	mov	x2, x19
  4332ec:	mov	w1, #0x0                   	// #0
  4332f0:	mov	w0, #0x0                   	// #0
  4332f4:	bl	404100 <error@plt>
  4332f8:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4332fc:	ldr	x0, [sp, #64]
  433300:	cmp	x0, #0x0
  433304:	b.eq	43334c <wcrtomb@plt+0x2e63c>  // b.none
  433308:	ldr	x0, [sp, #72]
  43330c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433310:	add	x1, x1, #0xe08
  433314:	ldr	x1, [x1]
  433318:	str	x1, [x0]
  43331c:	ldr	x0, [sp, #80]
  433320:	mov	w1, w0
  433324:	ldr	x0, [sp, #64]
  433328:	add	w0, w1, w0
  43332c:	mov	w3, w0
  433330:	ldr	x0, [sp, #72]
  433334:	add	x1, sp, #0x20
  433338:	mov	x2, x1
  43333c:	mov	x1, x0
  433340:	mov	w0, w3
  433344:	bl	433164 <wcrtomb@plt+0x2e454>
  433348:	str	xzr, [sp, #64]
  43334c:	add	x0, sp, #0x40
  433350:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  433354:	b	43335c <wcrtomb@plt+0x2e64c>
  433358:	nop
  43335c:	ldr	x19, [sp, #16]
  433360:	ldp	x29, x30, [sp], #304
  433364:	ret
  433368:	stp	x29, x30, [sp, #-224]!
  43336c:	mov	x29, sp
  433370:	str	x19, [sp, #16]
  433374:	str	w0, [sp, #44]
  433378:	str	x1, [sp, #32]
  43337c:	mov	w0, #0x1                   	// #1
  433380:	str	w0, [sp, #64]
  433384:	str	xzr, [sp, #72]
  433388:	str	xzr, [sp, #80]
  43338c:	str	xzr, [sp, #88]
  433390:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433394:	add	x1, x0, #0x190
  433398:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43339c:	add	x0, x0, #0x728
  4333a0:	bl	449250 <argp_usage@@Base+0x164>
  4333a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4333a8:	add	x0, x0, #0xc80
  4333ac:	str	xzr, [x0, #8]
  4333b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4333b4:	add	x0, x0, #0xc80
  4333b8:	strb	wzr, [x0, #16]
  4333bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4333c0:	add	x0, x0, #0xc80
  4333c4:	strb	wzr, [x0, #17]
  4333c8:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4333cc:	add	x0, x0, #0x730
  4333d0:	bl	404bf0 <getenv@plt>
  4333d4:	mov	x1, x0
  4333d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4333dc:	add	x0, x0, #0xc80
  4333e0:	str	x1, [x0, #24]
  4333e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4333e8:	add	x0, x0, #0xc80
  4333ec:	str	xzr, [x0, #32]
  4333f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4333f4:	add	x0, x0, #0xc80
  4333f8:	str	wzr, [x0, #40]
  4333fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433400:	add	x0, x0, #0x38c
  433404:	str	wzr, [x0]
  433408:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43340c:	add	x0, x0, #0x360
  433410:	str	wzr, [x0]
  433414:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433418:	add	x0, x0, #0x31c
  43341c:	mov	w1, #0x14                  	// #20
  433420:	str	w1, [x0]
  433424:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433428:	add	x0, x0, #0x3c8
  43342c:	mov	x1, #0x2800                	// #10240
  433430:	str	x1, [x0]
  433434:	bl	44a4d0 <argp_usage@@Base+0x13e4>
  433438:	mov	x1, x0
  43343c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433440:	add	x0, x0, #0x70
  433444:	str	x1, [x0]
  433448:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43344c:	add	x0, x0, #0x3c4
  433450:	str	wzr, [x0]
  433454:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433458:	add	x0, x0, #0x58
  43345c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  433460:	str	x1, [x0]
  433464:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433468:	add	x0, x0, #0x58
  43346c:	mov	x1, #0xffffffffffffffff    	// #-1
  433470:	str	x1, [x0, #8]
  433474:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433478:	add	x0, x0, #0x348
  43347c:	mov	x1, #0x8000000000000000    	// #-9223372036854775808
  433480:	str	x1, [x0]
  433484:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433488:	add	x0, x0, #0x348
  43348c:	mov	x1, #0xffffffffffffffff    	// #-1
  433490:	str	x1, [x0, #8]
  433494:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433498:	add	x0, x0, #0x2d4
  43349c:	mov	w1, #0x8                   	// #8
  4334a0:	str	w1, [x0]
  4334a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334a8:	add	x0, x0, #0x324
  4334ac:	mov	w1, #0x1                   	// #1
  4334b0:	strb	w1, [x0]
  4334b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334b8:	add	x0, x0, #0x290
  4334bc:	mov	w1, #0x1                   	// #1
  4334c0:	str	w1, [x0]
  4334c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334c8:	add	x0, x0, #0x88
  4334cc:	str	wzr, [x0]
  4334d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334d4:	add	x0, x0, #0x238
  4334d8:	str	wzr, [x0]
  4334dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334e0:	add	x0, x0, #0x340
  4334e4:	mov	w1, #0xffffffff            	// #-1
  4334e8:	str	w1, [x0]
  4334ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334f0:	add	x0, x0, #0x278
  4334f4:	str	xzr, [x0]
  4334f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4334fc:	add	x0, x0, #0x2f0
  433500:	mov	w1, #0xffffffff            	// #-1
  433504:	str	w1, [x0]
  433508:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43350c:	add	x0, x0, #0x240
  433510:	str	xzr, [x0]
  433514:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433518:	add	x0, x0, #0x50
  43351c:	mov	w1, #0x1                   	// #1
  433520:	strb	w1, [x0]
  433524:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433528:	add	x0, x0, #0x33c
  43352c:	mov	w1, #0xffffffff            	// #-1
  433530:	str	w1, [x0]
  433534:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433538:	add	x0, x0, #0x78
  43353c:	mov	w1, #0xffffffff            	// #-1
  433540:	str	w1, [x0]
  433544:	ldr	w0, [sp, #44]
  433548:	cmp	w0, #0x1
  43354c:	b.le	433760 <wcrtomb@plt+0x2ea50>
  433550:	ldr	x0, [sp, #32]
  433554:	add	x0, x0, #0x8
  433558:	ldr	x0, [x0]
  43355c:	ldrb	w0, [x0]
  433560:	cmp	w0, #0x2d
  433564:	b.eq	433760 <wcrtomb@plt+0x2ea50>  // b.none
  433568:	mov	w0, #0x2d                  	// #45
  43356c:	strb	w0, [sp, #56]
  433570:	strb	wzr, [sp, #58]
  433574:	ldr	x0, [sp, #32]
  433578:	add	x0, x0, #0x8
  43357c:	ldr	x0, [x0]
  433580:	bl	4040b0 <strlen@plt>
  433584:	mov	w1, w0
  433588:	ldr	w0, [sp, #44]
  43358c:	add	w0, w1, w0
  433590:	sub	w0, w0, #0x1
  433594:	str	w0, [sp, #196]
  433598:	ldr	w0, [sp, #196]
  43359c:	add	w0, w0, #0x1
  4335a0:	sxtw	x0, w0
  4335a4:	lsl	x0, x0, #3
  4335a8:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4335ac:	str	x0, [sp, #184]
  4335b0:	ldr	x0, [sp, #32]
  4335b4:	str	x0, [sp, #216]
  4335b8:	ldr	x0, [sp, #184]
  4335bc:	str	x0, [sp, #208]
  4335c0:	ldr	x1, [sp, #216]
  4335c4:	add	x0, x1, #0x8
  4335c8:	str	x0, [sp, #216]
  4335cc:	ldr	x0, [sp, #208]
  4335d0:	add	x2, x0, #0x8
  4335d4:	str	x2, [sp, #208]
  4335d8:	ldr	x1, [x1]
  4335dc:	str	x1, [x0]
  4335e0:	ldr	x0, [sp, #216]
  4335e4:	add	x1, x0, #0x8
  4335e8:	str	x1, [sp, #216]
  4335ec:	ldr	x0, [x0]
  4335f0:	str	x0, [sp, #200]
  4335f4:	b	4336f8 <wcrtomb@plt+0x2e9e8>
  4335f8:	ldr	x0, [sp, #200]
  4335fc:	ldrb	w0, [x0]
  433600:	strb	w0, [sp, #57]
  433604:	ldr	x19, [sp, #208]
  433608:	add	x0, x19, #0x8
  43360c:	str	x0, [sp, #208]
  433610:	add	x0, sp, #0x38
  433614:	bl	45b858 <argp_usage@@Base+0x1276c>
  433618:	str	x0, [x19]
  43361c:	ldr	x0, [sp, #200]
  433620:	ldrb	w0, [x0]
  433624:	mov	w1, w0
  433628:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43362c:	add	x0, x0, #0x158
  433630:	bl	4330bc <wcrtomb@plt+0x2e3ac>
  433634:	str	x0, [sp, #176]
  433638:	ldr	x0, [sp, #176]
  43363c:	cmp	x0, #0x0
  433640:	b.eq	4336ec <wcrtomb@plt+0x2e9dc>  // b.none
  433644:	ldr	x0, [sp, #176]
  433648:	ldr	x0, [x0, #16]
  43364c:	cmp	x0, #0x0
  433650:	b.eq	4336ec <wcrtomb@plt+0x2e9dc>  // b.none
  433654:	ldrsw	x0, [sp, #44]
  433658:	lsl	x0, x0, #3
  43365c:	ldr	x1, [sp, #32]
  433660:	add	x0, x1, x0
  433664:	ldr	x1, [sp, #216]
  433668:	cmp	x1, x0
  43366c:	b.cs	433694 <wcrtomb@plt+0x2e984>  // b.hs, b.nlast
  433670:	ldr	x1, [sp, #216]
  433674:	add	x0, x1, #0x8
  433678:	str	x0, [sp, #216]
  43367c:	ldr	x0, [sp, #208]
  433680:	add	x2, x0, #0x8
  433684:	str	x2, [sp, #208]
  433688:	ldr	x1, [x1]
  43368c:	str	x1, [x0]
  433690:	b	4336ec <wcrtomb@plt+0x2e9dc>
  433694:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433698:	add	x0, x0, #0x420
  43369c:	ldr	x0, [x0]
  4336a0:	cmp	x0, #0x0
  4336a4:	b.eq	4336b8 <wcrtomb@plt+0x2e9a8>  // b.none
  4336a8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4336ac:	add	x0, x0, #0x420
  4336b0:	ldr	x0, [x0]
  4336b4:	blr	x0
  4336b8:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4336bc:	add	x0, x0, #0x748
  4336c0:	bl	404c60 <gettext@plt>
  4336c4:	mov	x1, x0
  4336c8:	ldr	x0, [sp, #200]
  4336cc:	ldrb	w0, [x0]
  4336d0:	mov	w3, w0
  4336d4:	mov	x2, x1
  4336d8:	mov	w1, #0x0                   	// #0
  4336dc:	mov	w0, #0x0                   	// #0
  4336e0:	bl	404100 <error@plt>
  4336e4:	mov	w0, #0x2                   	// #2
  4336e8:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4336ec:	ldr	x0, [sp, #200]
  4336f0:	add	x0, x0, #0x1
  4336f4:	str	x0, [sp, #200]
  4336f8:	ldr	x0, [sp, #200]
  4336fc:	ldrb	w0, [x0]
  433700:	cmp	w0, #0x0
  433704:	b.ne	4335f8 <wcrtomb@plt+0x2e8e8>  // b.any
  433708:	b	43372c <wcrtomb@plt+0x2ea1c>
  43370c:	ldr	x1, [sp, #216]
  433710:	add	x0, x1, #0x8
  433714:	str	x0, [sp, #216]
  433718:	ldr	x0, [sp, #208]
  43371c:	add	x2, x0, #0x8
  433720:	str	x2, [sp, #208]
  433724:	ldr	x1, [x1]
  433728:	str	x1, [x0]
  43372c:	ldrsw	x0, [sp, #44]
  433730:	lsl	x0, x0, #3
  433734:	ldr	x1, [sp, #32]
  433738:	add	x0, x1, x0
  43373c:	ldr	x1, [sp, #216]
  433740:	cmp	x1, x0
  433744:	b.cc	43370c <wcrtomb@plt+0x2e9fc>  // b.lo, b.ul, b.last
  433748:	ldr	x0, [sp, #208]
  43374c:	str	xzr, [x0]
  433750:	ldr	w0, [sp, #196]
  433754:	str	w0, [sp, #44]
  433758:	ldr	x0, [sp, #184]
  43375c:	str	x0, [sp, #32]
  433760:	bl	433240 <wcrtomb@plt+0x2e530>
  433764:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433768:	add	x0, x0, #0xc80
  43376c:	add	x1, sp, #0x40
  433770:	str	x1, [x0]
  433774:	add	x1, sp, #0x64
  433778:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43377c:	add	x5, x0, #0xc80
  433780:	mov	x4, x1
  433784:	mov	w3, #0x8                   	// #8
  433788:	ldr	x2, [sp, #32]
  43378c:	ldr	w1, [sp, #44]
  433790:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433794:	add	x0, x0, #0x158
  433798:	bl	448e70 <argp_parse@@Base>
  43379c:	cmp	w0, #0x0
  4337a0:	b.eq	4337ac <wcrtomb@plt+0x2ea9c>  // b.none
  4337a4:	mov	w0, #0x2                   	// #2
  4337a8:	bl	4040d0 <exit@plt>
  4337ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4337b0:	add	x0, x0, #0xc80
  4337b4:	ldrb	w0, [x0, #16]
  4337b8:	cmp	w0, #0x0
  4337bc:	b.eq	433820 <wcrtomb@plt+0x2eb10>  // b.none
  4337c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4337c4:	add	x0, x0, #0x38c
  4337c8:	ldr	w0, [x0]
  4337cc:	cmp	w0, #0x3
  4337d0:	b.ne	4337e4 <wcrtomb@plt+0x2ead4>  // b.any
  4337d4:	adrp	x0, 483000 <_obstack_memory_used@@Base+0x25ec0>
  4337d8:	add	x0, x0, #0x3c0
  4337dc:	bl	42fc68 <wcrtomb@plt+0x2af58>
  4337e0:	b	433820 <wcrtomb@plt+0x2eb10>
  4337e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4337e8:	add	x0, x0, #0x404
  4337ec:	mov	w1, #0xffffffff            	// #-1
  4337f0:	str	w1, [x0]
  4337f4:	b	433820 <wcrtomb@plt+0x2eb10>
  4337f8:	ldr	w0, [sp, #100]
  4337fc:	sxtw	x0, w0
  433800:	lsl	x0, x0, #3
  433804:	ldr	x1, [sp, #32]
  433808:	add	x0, x1, x0
  43380c:	ldr	x0, [x0]
  433810:	bl	427794 <wcrtomb@plt+0x22a84>
  433814:	ldr	w0, [sp, #100]
  433818:	add	w0, w0, #0x1
  43381c:	str	w0, [sp, #100]
  433820:	ldr	w0, [sp, #100]
  433824:	ldr	w1, [sp, #44]
  433828:	cmp	w1, w0
  43382c:	b.gt	4337f8 <wcrtomb@plt+0x2eae8>
  433830:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433834:	add	x0, x0, #0x360
  433838:	ldr	w0, [x0]
  43383c:	cmp	w0, #0x0
  433840:	b.ne	43387c <wcrtomb@plt+0x2eb6c>  // b.any
  433844:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433848:	add	x0, x0, #0xc80
  43384c:	ldrb	w0, [x0, #17]
  433850:	cmp	w0, #0x0
  433854:	b.eq	43386c <wcrtomb@plt+0x2eb5c>  // b.none
  433858:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43385c:	add	x0, x0, #0x360
  433860:	mov	w1, #0x4                   	// #4
  433864:	str	w1, [x0]
  433868:	b	43387c <wcrtomb@plt+0x2eb6c>
  43386c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433870:	add	x0, x0, #0x360
  433874:	mov	w1, #0x6                   	// #6
  433878:	str	w1, [x0]
  43387c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433880:	add	x0, x0, #0x2b8
  433884:	ldr	x0, [x0]
  433888:	cmp	x0, #0x0
  43388c:	b.eq	4338a4 <wcrtomb@plt+0x2eb94>  // b.none
  433890:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433894:	add	x0, x0, #0x38c
  433898:	ldr	w0, [x0]
  43389c:	cmp	w0, #0x3
  4338a0:	b.eq	4338e0 <wcrtomb@plt+0x2ebd0>  // b.none
  4338a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4338a8:	add	x0, x0, #0x51
  4338ac:	ldrb	w0, [x0]
  4338b0:	cmp	w0, #0x0
  4338b4:	b.ne	4338e0 <wcrtomb@plt+0x2ebd0>  // b.any
  4338b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4338bc:	add	x0, x0, #0x7c
  4338c0:	ldrb	w0, [x0]
  4338c4:	cmp	w0, #0x0
  4338c8:	b.ne	4338e0 <wcrtomb@plt+0x2ebd0>  // b.any
  4338cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4338d0:	add	x0, x0, #0x3c0
  4338d4:	ldrb	w0, [x0]
  4338d8:	cmp	w0, #0x0
  4338dc:	b.eq	4338e8 <wcrtomb@plt+0x2ebd8>  // b.none
  4338e0:	mov	w0, #0x54                  	// #84
  4338e4:	bl	42fddc <wcrtomb@plt+0x2b0cc>
  4338e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4338ec:	add	x0, x0, #0x328
  4338f0:	ldr	x0, [x0]
  4338f4:	cmp	x0, #0x0
  4338f8:	b.eq	4339c4 <wcrtomb@plt+0x2ecb4>  // b.none
  4338fc:	bl	427778 <wcrtomb@plt+0x22a68>
  433900:	and	w0, w0, #0xff
  433904:	eor	w0, w0, #0x1
  433908:	and	w0, w0, #0xff
  43390c:	cmp	w0, #0x0
  433910:	b.eq	43395c <wcrtomb@plt+0x2ec4c>  // b.none
  433914:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433918:	add	x0, x0, #0x420
  43391c:	ldr	x0, [x0]
  433920:	cmp	x0, #0x0
  433924:	b.eq	433938 <wcrtomb@plt+0x2ec28>  // b.none
  433928:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43392c:	add	x0, x0, #0x420
  433930:	ldr	x0, [x0]
  433934:	blr	x0
  433938:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43393c:	add	x0, x0, #0x770
  433940:	bl	404c60 <gettext@plt>
  433944:	mov	x2, x0
  433948:	mov	w1, #0x0                   	// #0
  43394c:	mov	w0, #0x0                   	// #0
  433950:	bl	404100 <error@plt>
  433954:	mov	w0, #0x2                   	// #2
  433958:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  43395c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433960:	add	x0, x0, #0x38c
  433964:	ldr	w1, [x0]
  433968:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43396c:	add	x0, x0, #0x1a8
  433970:	mov	w1, w1
  433974:	ldr	w0, [x0, x1, lsl #2]
  433978:	and	w0, w0, #0x10
  43397c:	cmp	w0, #0x0
  433980:	b.ne	4339c4 <wcrtomb@plt+0x2ecb4>  // b.any
  433984:	mov	w0, #0x1                   	// #1
  433988:	bl	430434 <wcrtomb@plt+0x2b724>
  43398c:	cmp	w0, #0x0
  433990:	b.eq	4339b8 <wcrtomb@plt+0x2eca8>  // b.none
  433994:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433998:	add	x0, x0, #0x38c
  43399c:	ldr	w0, [x0]
  4339a0:	bl	42fe64 <wcrtomb@plt+0x2b154>
  4339a4:	mov	x1, x0
  4339a8:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4339ac:	add	x0, x0, #0x7a0
  4339b0:	bl	4302ac <wcrtomb@plt+0x2b59c>
  4339b4:	b	4339c4 <wcrtomb@plt+0x2ecb4>
  4339b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4339bc:	add	x0, x0, #0x328
  4339c0:	str	xzr, [x0]
  4339c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4339c8:	add	x0, x0, #0x380
  4339cc:	ldr	x0, [x0]
  4339d0:	cmp	x0, #0x0
  4339d4:	b.ne	433a34 <wcrtomb@plt+0x2ed24>  // b.any
  4339d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4339dc:	add	x0, x0, #0x380
  4339e0:	mov	x1, #0x1                   	// #1
  4339e4:	str	x1, [x0]
  4339e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4339ec:	add	x0, x0, #0x2e0
  4339f0:	ldr	x19, [x0]
  4339f4:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4339f8:	add	x0, x0, #0x7b0
  4339fc:	bl	404bf0 <getenv@plt>
  433a00:	str	x0, [x19]
  433a04:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433a08:	add	x0, x0, #0x2e0
  433a0c:	ldr	x0, [x0]
  433a10:	ldr	x0, [x0]
  433a14:	cmp	x0, #0x0
  433a18:	b.ne	433a34 <wcrtomb@plt+0x2ed24>  // b.any
  433a1c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433a20:	add	x0, x0, #0x2e0
  433a24:	ldr	x0, [x0]
  433a28:	adrp	x1, 485000 <_obstack_memory_used@@Base+0x27ec0>
  433a2c:	add	x1, x1, #0xc68
  433a30:	str	x1, [x0]
  433a34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433a38:	add	x0, x0, #0x380
  433a3c:	ldr	x0, [x0]
  433a40:	cmp	x0, #0x1
  433a44:	b.ls	433aac <wcrtomb@plt+0x2ed9c>  // b.plast
  433a48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433a4c:	add	x0, x0, #0x7c
  433a50:	ldrb	w0, [x0]
  433a54:	eor	w0, w0, #0x1
  433a58:	and	w0, w0, #0xff
  433a5c:	cmp	w0, #0x0
  433a60:	b.eq	433aac <wcrtomb@plt+0x2ed9c>  // b.none
  433a64:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433a68:	add	x0, x0, #0x420
  433a6c:	ldr	x0, [x0]
  433a70:	cmp	x0, #0x0
  433a74:	b.eq	433a88 <wcrtomb@plt+0x2ed78>  // b.none
  433a78:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433a7c:	add	x0, x0, #0x420
  433a80:	ldr	x0, [x0]
  433a84:	blr	x0
  433a88:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433a8c:	add	x0, x0, #0x7b8
  433a90:	bl	404c60 <gettext@plt>
  433a94:	mov	x2, x0
  433a98:	mov	w1, #0x0                   	// #0
  433a9c:	mov	w0, #0x0                   	// #0
  433aa0:	bl	404100 <error@plt>
  433aa4:	mov	w0, #0x2                   	// #2
  433aa8:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433aac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ab0:	add	x0, x0, #0x370
  433ab4:	ldr	x0, [x0]
  433ab8:	cmp	x0, #0x0
  433abc:	b.eq	433b4c <wcrtomb@plt+0x2ee3c>  // b.none
  433ac0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ac4:	add	x0, x0, #0x58
  433ac8:	ldr	x0, [x0, #8]
  433acc:	cmp	x0, #0x0
  433ad0:	b.lt	433b4c <wcrtomb@plt+0x2ee3c>  // b.tstop
  433ad4:	mov	w0, #0x2                   	// #2
  433ad8:	bl	430414 <wcrtomb@plt+0x2b704>
  433adc:	str	x0, [sp, #168]
  433ae0:	mov	w0, #0x3                   	// #3
  433ae4:	bl	430414 <wcrtomb@plt+0x2b704>
  433ae8:	str	x0, [sp, #160]
  433aec:	ldr	x1, [sp, #160]
  433af0:	ldr	x0, [sp, #168]
  433af4:	bl	43047c <wcrtomb@plt+0x2b76c>
  433af8:	cmp	w0, #0x0
  433afc:	b.eq	433b18 <wcrtomb@plt+0x2ee08>  // b.none
  433b00:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433b04:	add	x1, x0, #0x7e8
  433b08:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433b0c:	add	x0, x0, #0x7f0
  433b10:	bl	4302ac <wcrtomb@plt+0x2b59c>
  433b14:	b	433b4c <wcrtomb@plt+0x2ee3c>
  433b18:	ldr	x0, [sp, #168]
  433b1c:	ldr	w0, [x0]
  433b20:	cmp	w0, #0x1
  433b24:	b.ne	433b38 <wcrtomb@plt+0x2ee28>  // b.any
  433b28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433b2c:	add	x0, x0, #0x370
  433b30:	str	xzr, [x0]
  433b34:	b	433b4c <wcrtomb@plt+0x2ee3c>
  433b38:	mov	x2, #0x10                  	// #16
  433b3c:	mov	w1, #0x0                   	// #0
  433b40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433b44:	add	x0, x0, #0x58
  433b48:	bl	4044d0 <memset@plt>
  433b4c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433b50:	add	x0, x0, #0x33c
  433b54:	ldr	w0, [x0]
  433b58:	cmn	w0, #0x1
  433b5c:	b.eq	433bb4 <wcrtomb@plt+0x2eea4>  // b.none
  433b60:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433b64:	add	x0, x0, #0x370
  433b68:	ldr	x0, [x0]
  433b6c:	cmp	x0, #0x0
  433b70:	b.ne	433bb4 <wcrtomb@plt+0x2eea4>  // b.any
  433b74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433b78:	add	x0, x0, #0x420
  433b7c:	ldr	x0, [x0]
  433b80:	cmp	x0, #0x0
  433b84:	b.eq	433b98 <wcrtomb@plt+0x2ee88>  // b.none
  433b88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433b8c:	add	x0, x0, #0x420
  433b90:	ldr	x0, [x0]
  433b94:	blr	x0
  433b98:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433b9c:	add	x0, x0, #0x808
  433ba0:	bl	404c60 <gettext@plt>
  433ba4:	mov	x2, x0
  433ba8:	mov	w1, #0x0                   	// #0
  433bac:	mov	w0, #0x0                   	// #0
  433bb0:	bl	404100 <error@plt>
  433bb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433bb8:	add	x0, x0, #0x2b8
  433bbc:	ldr	x0, [x0]
  433bc0:	cmp	x0, #0x0
  433bc4:	b.eq	433ca4 <wcrtomb@plt+0x2ef94>  // b.none
  433bc8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433bcc:	add	x0, x0, #0x360
  433bd0:	ldr	w0, [x0]
  433bd4:	cmp	w0, #0x6
  433bd8:	b.eq	433bf0 <wcrtomb@plt+0x2eee0>  // b.none
  433bdc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433be0:	add	x0, x0, #0x360
  433be4:	ldr	w0, [x0]
  433be8:	cmp	w0, #0x2
  433bec:	b.ne	433ca4 <wcrtomb@plt+0x2ef94>  // b.any
  433bf0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433bf4:	add	x0, x0, #0x7c
  433bf8:	ldrb	w0, [x0]
  433bfc:	cmp	w0, #0x0
  433c00:	b.eq	433c0c <wcrtomb@plt+0x2eefc>  // b.none
  433c04:	mov	x0, #0x51                  	// #81
  433c08:	b	433c10 <wcrtomb@plt+0x2ef00>
  433c0c:	mov	x0, #0x63                  	// #99
  433c10:	str	x0, [sp, #152]
  433c14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433c18:	add	x0, x0, #0x2b8
  433c1c:	ldr	x0, [x0]
  433c20:	bl	4040b0 <strlen@plt>
  433c24:	mov	x1, x0
  433c28:	ldr	x0, [sp, #152]
  433c2c:	cmp	x0, x1
  433c30:	b.cs	433ca4 <wcrtomb@plt+0x2ef94>  // b.hs, b.nlast
  433c34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433c38:	add	x0, x0, #0x420
  433c3c:	ldr	x0, [x0]
  433c40:	cmp	x0, #0x0
  433c44:	b.eq	433c58 <wcrtomb@plt+0x2ef48>  // b.none
  433c48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433c4c:	add	x0, x0, #0x420
  433c50:	ldr	x0, [x0]
  433c54:	blr	x0
  433c58:	ldr	x2, [sp, #152]
  433c5c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433c60:	add	x1, x0, #0x840
  433c64:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433c68:	add	x0, x0, #0x878
  433c6c:	bl	404040 <ngettext@plt>
  433c70:	mov	x19, x0
  433c74:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433c78:	add	x0, x0, #0x2b8
  433c7c:	ldr	x0, [x0]
  433c80:	bl	459cd8 <argp_usage@@Base+0x10bec>
  433c84:	ldr	x4, [sp, #152]
  433c88:	mov	x3, x0
  433c8c:	mov	x2, x19
  433c90:	mov	w1, #0x0                   	// #0
  433c94:	mov	w0, #0x0                   	// #0
  433c98:	bl	404100 <error@plt>
  433c9c:	mov	w0, #0x2                   	// #2
  433ca0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433ca4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ca8:	add	x0, x0, #0x37a
  433cac:	ldrb	w0, [x0]
  433cb0:	cmp	w0, #0x0
  433cb4:	b.eq	433dd8 <wcrtomb@plt+0x2f0c8>  // b.none
  433cb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433cbc:	add	x0, x0, #0x7c
  433cc0:	ldrb	w0, [x0]
  433cc4:	cmp	w0, #0x0
  433cc8:	b.eq	433d14 <wcrtomb@plt+0x2f004>  // b.none
  433ccc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433cd0:	add	x0, x0, #0x420
  433cd4:	ldr	x0, [x0]
  433cd8:	cmp	x0, #0x0
  433cdc:	b.eq	433cf0 <wcrtomb@plt+0x2efe0>  // b.none
  433ce0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ce4:	add	x0, x0, #0x420
  433ce8:	ldr	x0, [x0]
  433cec:	blr	x0
  433cf0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433cf4:	add	x0, x0, #0x8b0
  433cf8:	bl	404c60 <gettext@plt>
  433cfc:	mov	x2, x0
  433d00:	mov	w1, #0x0                   	// #0
  433d04:	mov	w0, #0x0                   	// #0
  433d08:	bl	404100 <error@plt>
  433d0c:	mov	w0, #0x2                   	// #2
  433d10:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433d14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433d18:	add	x0, x0, #0x3b8
  433d1c:	ldr	x0, [x0]
  433d20:	cmp	x0, #0x0
  433d24:	b.eq	433d70 <wcrtomb@plt+0x2f060>  // b.none
  433d28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433d2c:	add	x0, x0, #0x420
  433d30:	ldr	x0, [x0]
  433d34:	cmp	x0, #0x0
  433d38:	b.eq	433d4c <wcrtomb@plt+0x2f03c>  // b.none
  433d3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433d40:	add	x0, x0, #0x420
  433d44:	ldr	x0, [x0]
  433d48:	blr	x0
  433d4c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433d50:	add	x0, x0, #0x8d8
  433d54:	bl	404c60 <gettext@plt>
  433d58:	mov	x2, x0
  433d5c:	mov	w1, #0x0                   	// #0
  433d60:	mov	w0, #0x0                   	// #0
  433d64:	bl	404100 <error@plt>
  433d68:	mov	w0, #0x2                   	// #2
  433d6c:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433d70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433d74:	add	x0, x0, #0x38c
  433d78:	ldr	w1, [x0]
  433d7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433d80:	add	x0, x0, #0x1a8
  433d84:	mov	w1, w1
  433d88:	ldr	w0, [x0, x1, lsl #2]
  433d8c:	and	w0, w0, #0x2
  433d90:	cmp	w0, #0x0
  433d94:	b.ne	433dd8 <wcrtomb@plt+0x2f0c8>  // b.any
  433d98:	mov	w0, #0x4                   	// #4
  433d9c:	bl	430434 <wcrtomb@plt+0x2b724>
  433da0:	cmp	w0, #0x0
  433da4:	b.eq	433dcc <wcrtomb@plt+0x2f0bc>  // b.none
  433da8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433dac:	add	x0, x0, #0x38c
  433db0:	ldr	w0, [x0]
  433db4:	bl	42fe64 <wcrtomb@plt+0x2b154>
  433db8:	mov	x1, x0
  433dbc:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433dc0:	add	x0, x0, #0x900
  433dc4:	bl	4302ac <wcrtomb@plt+0x2b59c>
  433dc8:	b	433dd8 <wcrtomb@plt+0x2f0c8>
  433dcc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433dd0:	add	x0, x0, #0x37a
  433dd4:	strb	wzr, [x0]
  433dd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ddc:	add	x0, x0, #0x3b8
  433de0:	ldr	x0, [x0]
  433de4:	cmp	x0, #0x0
  433de8:	b.eq	433f14 <wcrtomb@plt+0x2f204>  // b.none
  433dec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433df0:	add	x0, x0, #0x7c
  433df4:	ldrb	w0, [x0]
  433df8:	cmp	w0, #0x0
  433dfc:	b.eq	433e48 <wcrtomb@plt+0x2f138>  // b.none
  433e00:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433e04:	add	x0, x0, #0x420
  433e08:	ldr	x0, [x0]
  433e0c:	cmp	x0, #0x0
  433e10:	b.eq	433e24 <wcrtomb@plt+0x2f114>  // b.none
  433e14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433e18:	add	x0, x0, #0x420
  433e1c:	ldr	x0, [x0]
  433e20:	blr	x0
  433e24:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433e28:	add	x0, x0, #0x910
  433e2c:	bl	404c60 <gettext@plt>
  433e30:	mov	x2, x0
  433e34:	mov	w1, #0x0                   	// #0
  433e38:	mov	w0, #0x0                   	// #0
  433e3c:	bl	404100 <error@plt>
  433e40:	mov	w0, #0x2                   	// #2
  433e44:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433e48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433e4c:	add	x0, x0, #0x38c
  433e50:	ldr	w1, [x0]
  433e54:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433e58:	add	x0, x0, #0x1a8
  433e5c:	mov	w1, w1
  433e60:	ldr	w0, [x0, x1, lsl #2]
  433e64:	and	w0, w0, #0x4
  433e68:	cmp	w0, #0x0
  433e6c:	b.eq	433eb8 <wcrtomb@plt+0x2f1a8>  // b.none
  433e70:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433e74:	add	x0, x0, #0x420
  433e78:	ldr	x0, [x0]
  433e7c:	cmp	x0, #0x0
  433e80:	b.eq	433e94 <wcrtomb@plt+0x2f184>  // b.none
  433e84:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433e88:	add	x0, x0, #0x420
  433e8c:	ldr	x0, [x0]
  433e90:	blr	x0
  433e94:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433e98:	add	x0, x0, #0x940
  433e9c:	bl	404c60 <gettext@plt>
  433ea0:	mov	x2, x0
  433ea4:	mov	w1, #0x0                   	// #0
  433ea8:	mov	w0, #0x0                   	// #0
  433eac:	bl	404100 <error@plt>
  433eb0:	mov	w0, #0x2                   	// #2
  433eb4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433eb8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ebc:	add	x0, x0, #0x38c
  433ec0:	ldr	w0, [x0]
  433ec4:	cmp	w0, #0x2
  433ec8:	b.ne	433f14 <wcrtomb@plt+0x2f204>  // b.any
  433ecc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ed0:	add	x0, x0, #0x420
  433ed4:	ldr	x0, [x0]
  433ed8:	cmp	x0, #0x0
  433edc:	b.eq	433ef0 <wcrtomb@plt+0x2f1e0>  // b.none
  433ee0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433ee4:	add	x0, x0, #0x420
  433ee8:	ldr	x0, [x0]
  433eec:	blr	x0
  433ef0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433ef4:	add	x0, x0, #0x968
  433ef8:	bl	404c60 <gettext@plt>
  433efc:	mov	x2, x0
  433f00:	mov	w1, #0x0                   	// #0
  433f04:	mov	w0, #0x0                   	// #0
  433f08:	bl	404100 <error@plt>
  433f0c:	mov	w0, #0x2                   	// #2
  433f10:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433f14:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433f18:	add	x0, x0, #0x68
  433f1c:	ldr	w0, [x0]
  433f20:	cmp	w0, #0x2
  433f24:	b.ne	433f84 <wcrtomb@plt+0x2f274>  // b.any
  433f28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433f2c:	add	x0, x0, #0x348
  433f30:	ldr	x0, [x0, #8]
  433f34:	cmp	x0, #0x0
  433f38:	b.ge	433f84 <wcrtomb@plt+0x2f274>  // b.tcont
  433f3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433f40:	add	x0, x0, #0x420
  433f44:	ldr	x0, [x0]
  433f48:	cmp	x0, #0x0
  433f4c:	b.eq	433f60 <wcrtomb@plt+0x2f250>  // b.none
  433f50:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433f54:	add	x0, x0, #0x420
  433f58:	ldr	x0, [x0]
  433f5c:	blr	x0
  433f60:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433f64:	add	x0, x0, #0x990
  433f68:	bl	404c60 <gettext@plt>
  433f6c:	mov	x2, x0
  433f70:	mov	w1, #0x0                   	// #0
  433f74:	mov	w0, #0x0                   	// #0
  433f78:	bl	404100 <error@plt>
  433f7c:	mov	w0, #0x2                   	// #2
  433f80:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  433f84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433f88:	add	x0, x0, #0xc80
  433f8c:	ldrb	w0, [x0, #17]
  433f90:	cmp	w0, #0x0
  433f94:	b.eq	43401c <wcrtomb@plt+0x2f30c>  // b.none
  433f98:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433f9c:	add	x0, x0, #0x360
  433fa0:	ldr	w0, [x0]
  433fa4:	cmp	w0, #0x4
  433fa8:	b.eq	43401c <wcrtomb@plt+0x2f30c>  // b.none
  433fac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433fb0:	add	x0, x0, #0x38c
  433fb4:	ldr	w1, [x0]
  433fb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  433fbc:	add	x0, x0, #0x1a8
  433fc0:	mov	w1, w1
  433fc4:	ldr	w0, [x0, x1, lsl #2]
  433fc8:	and	w0, w0, #0x1
  433fcc:	cmp	w0, #0x0
  433fd0:	b.ne	43401c <wcrtomb@plt+0x2f30c>  // b.any
  433fd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433fd8:	add	x0, x0, #0x420
  433fdc:	ldr	x0, [x0]
  433fe0:	cmp	x0, #0x0
  433fe4:	b.eq	433ff8 <wcrtomb@plt+0x2f2e8>  // b.none
  433fe8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  433fec:	add	x0, x0, #0x420
  433ff0:	ldr	x0, [x0]
  433ff4:	blr	x0
  433ff8:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  433ffc:	add	x0, x0, #0x9c8
  434000:	bl	404c60 <gettext@plt>
  434004:	mov	x2, x0
  434008:	mov	w1, #0x0                   	// #0
  43400c:	mov	w0, #0x0                   	// #0
  434010:	bl	404100 <error@plt>
  434014:	mov	w0, #0x2                   	// #2
  434018:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  43401c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434020:	add	x0, x0, #0x3b0
  434024:	ldr	w0, [x0]
  434028:	cmp	w0, #0x0
  43402c:	b.le	4340b4 <wcrtomb@plt+0x2f3a4>
  434030:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434034:	add	x0, x0, #0x360
  434038:	ldr	w0, [x0]
  43403c:	cmp	w0, #0x4
  434040:	b.eq	4340b4 <wcrtomb@plt+0x2f3a4>  // b.none
  434044:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434048:	add	x0, x0, #0x38c
  43404c:	ldr	w1, [x0]
  434050:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434054:	add	x0, x0, #0x1a8
  434058:	mov	w1, w1
  43405c:	ldr	w0, [x0, x1, lsl #2]
  434060:	and	w0, w0, #0x1
  434064:	cmp	w0, #0x0
  434068:	b.ne	4340b4 <wcrtomb@plt+0x2f3a4>  // b.any
  43406c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434070:	add	x0, x0, #0x420
  434074:	ldr	x0, [x0]
  434078:	cmp	x0, #0x0
  43407c:	b.eq	434090 <wcrtomb@plt+0x2f380>  // b.none
  434080:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434084:	add	x0, x0, #0x420
  434088:	ldr	x0, [x0]
  43408c:	blr	x0
  434090:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434094:	add	x0, x0, #0x9f8
  434098:	bl	404c60 <gettext@plt>
  43409c:	mov	x2, x0
  4340a0:	mov	w1, #0x0                   	// #0
  4340a4:	mov	w0, #0x0                   	// #0
  4340a8:	bl	404100 <error@plt>
  4340ac:	mov	w0, #0x2                   	// #2
  4340b0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4340b4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4340b8:	add	x0, x0, #0x408
  4340bc:	ldr	w0, [x0]
  4340c0:	cmp	w0, #0x0
  4340c4:	b.le	43414c <wcrtomb@plt+0x2f43c>
  4340c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4340cc:	add	x0, x0, #0x360
  4340d0:	ldr	w0, [x0]
  4340d4:	cmp	w0, #0x4
  4340d8:	b.eq	43414c <wcrtomb@plt+0x2f43c>  // b.none
  4340dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4340e0:	add	x0, x0, #0x38c
  4340e4:	ldr	w1, [x0]
  4340e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4340ec:	add	x0, x0, #0x1a8
  4340f0:	mov	w1, w1
  4340f4:	ldr	w0, [x0, x1, lsl #2]
  4340f8:	and	w0, w0, #0x1
  4340fc:	cmp	w0, #0x0
  434100:	b.ne	43414c <wcrtomb@plt+0x2f43c>  // b.any
  434104:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434108:	add	x0, x0, #0x420
  43410c:	ldr	x0, [x0]
  434110:	cmp	x0, #0x0
  434114:	b.eq	434128 <wcrtomb@plt+0x2f418>  // b.none
  434118:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43411c:	add	x0, x0, #0x420
  434120:	ldr	x0, [x0]
  434124:	blr	x0
  434128:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43412c:	add	x0, x0, #0xa28
  434130:	bl	404c60 <gettext@plt>
  434134:	mov	x2, x0
  434138:	mov	w1, #0x0                   	// #0
  43413c:	mov	w0, #0x0                   	// #0
  434140:	bl	404100 <error@plt>
  434144:	mov	w0, #0x2                   	// #2
  434148:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  43414c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434150:	add	x0, x0, #0x2c0
  434154:	ldr	w0, [x0]
  434158:	cmp	w0, #0x0
  43415c:	b.le	4341e4 <wcrtomb@plt+0x2f4d4>
  434160:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434164:	add	x0, x0, #0x360
  434168:	ldr	w0, [x0]
  43416c:	cmp	w0, #0x4
  434170:	b.eq	4341e4 <wcrtomb@plt+0x2f4d4>  // b.none
  434174:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434178:	add	x0, x0, #0x38c
  43417c:	ldr	w1, [x0]
  434180:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434184:	add	x0, x0, #0x1a8
  434188:	mov	w1, w1
  43418c:	ldr	w0, [x0, x1, lsl #2]
  434190:	and	w0, w0, #0x1
  434194:	cmp	w0, #0x0
  434198:	b.ne	4341e4 <wcrtomb@plt+0x2f4d4>  // b.any
  43419c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4341a0:	add	x0, x0, #0x420
  4341a4:	ldr	x0, [x0]
  4341a8:	cmp	x0, #0x0
  4341ac:	b.eq	4341c0 <wcrtomb@plt+0x2f4b0>  // b.none
  4341b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4341b4:	add	x0, x0, #0x420
  4341b8:	ldr	x0, [x0]
  4341bc:	blr	x0
  4341c0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4341c4:	add	x0, x0, #0xa58
  4341c8:	bl	404c60 <gettext@plt>
  4341cc:	mov	x2, x0
  4341d0:	mov	w1, #0x0                   	// #0
  4341d4:	mov	w0, #0x0                   	// #0
  4341d8:	bl	404100 <error@plt>
  4341dc:	mov	w0, #0x2                   	// #2
  4341e0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4341e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4341e8:	add	x0, x0, #0x2d8
  4341ec:	ldrb	w0, [x0]
  4341f0:	cmp	w0, #0x0
  4341f4:	b.eq	434260 <wcrtomb@plt+0x2f550>  // b.none
  4341f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4341fc:	add	x0, x0, #0x38c
  434200:	ldr	w1, [x0]
  434204:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434208:	add	x0, x0, #0x1a8
  43420c:	mov	w1, w1
  434210:	ldr	w0, [x0, x1, lsl #2]
  434214:	and	w0, w0, #0x1
  434218:	cmp	w0, #0x0
  43421c:	b.ne	434260 <wcrtomb@plt+0x2f550>  // b.any
  434220:	mov	w0, #0x5                   	// #5
  434224:	bl	430434 <wcrtomb@plt+0x2b724>
  434228:	cmp	w0, #0x0
  43422c:	b.eq	434254 <wcrtomb@plt+0x2f544>  // b.none
  434230:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434234:	add	x0, x0, #0x38c
  434238:	ldr	w0, [x0]
  43423c:	bl	42fe64 <wcrtomb@plt+0x2b154>
  434240:	mov	x1, x0
  434244:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434248:	add	x0, x0, #0xa88
  43424c:	bl	4302ac <wcrtomb@plt+0x2b59c>
  434250:	b	434260 <wcrtomb@plt+0x2f550>
  434254:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434258:	add	x0, x0, #0x2d8
  43425c:	strb	wzr, [x0]
  434260:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434264:	add	x0, x0, #0x2b0
  434268:	ldrb	w0, [x0]
  43426c:	cmp	w0, #0x0
  434270:	b.eq	4342dc <wcrtomb@plt+0x2f5cc>  // b.none
  434274:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434278:	add	x0, x0, #0x38c
  43427c:	ldr	w1, [x0]
  434280:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434284:	add	x0, x0, #0x1a8
  434288:	mov	w1, w1
  43428c:	ldr	w0, [x0, x1, lsl #2]
  434290:	and	w0, w0, #0x1
  434294:	cmp	w0, #0x0
  434298:	b.ne	4342dc <wcrtomb@plt+0x2f5cc>  // b.any
  43429c:	mov	w0, #0x6                   	// #6
  4342a0:	bl	430434 <wcrtomb@plt+0x2b724>
  4342a4:	cmp	w0, #0x0
  4342a8:	b.eq	4342d0 <wcrtomb@plt+0x2f5c0>  // b.none
  4342ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4342b0:	add	x0, x0, #0x38c
  4342b4:	ldr	w0, [x0]
  4342b8:	bl	42fe64 <wcrtomb@plt+0x2b154>
  4342bc:	mov	x1, x0
  4342c0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4342c4:	add	x0, x0, #0xa98
  4342c8:	bl	4302ac <wcrtomb@plt+0x2b59c>
  4342cc:	b	4342dc <wcrtomb@plt+0x2f5cc>
  4342d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4342d4:	add	x0, x0, #0x2b0
  4342d8:	strb	wzr, [x0]
  4342dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4342e0:	add	x0, x0, #0x37b
  4342e4:	ldrb	w0, [x0]
  4342e8:	cmp	w0, #0x0
  4342ec:	b.eq	434430 <wcrtomb@plt+0x2f720>  // b.none
  4342f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4342f4:	add	x0, x0, #0x3e8
  4342f8:	ldrb	w0, [x0]
  4342fc:	cmp	w0, #0x0
  434300:	b.eq	434374 <wcrtomb@plt+0x2f664>  // b.none
  434304:	mov	w0, #0x7                   	// #7
  434308:	bl	430414 <wcrtomb@plt+0x2b704>
  43430c:	str	x0, [sp, #144]
  434310:	mov	w0, #0x8                   	// #8
  434314:	bl	430414 <wcrtomb@plt+0x2b704>
  434318:	str	x0, [sp, #136]
  43431c:	ldr	x1, [sp, #136]
  434320:	ldr	x0, [sp, #144]
  434324:	bl	43047c <wcrtomb@plt+0x2b76c>
  434328:	cmp	w0, #0x0
  43432c:	b.eq	434348 <wcrtomb@plt+0x2f638>  // b.none
  434330:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434334:	add	x1, x0, #0xaa8
  434338:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43433c:	add	x0, x0, #0xac0
  434340:	bl	4302ac <wcrtomb@plt+0x2b59c>
  434344:	b	434374 <wcrtomb@plt+0x2f664>
  434348:	ldr	x0, [sp, #144]
  43434c:	ldr	w0, [x0]
  434350:	cmp	w0, #0x1
  434354:	b.ne	434368 <wcrtomb@plt+0x2f658>  // b.any
  434358:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43435c:	add	x0, x0, #0x3e8
  434360:	strb	wzr, [x0]
  434364:	b	434374 <wcrtomb@plt+0x2f664>
  434368:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43436c:	add	x0, x0, #0x37b
  434370:	strb	wzr, [x0]
  434374:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434378:	add	x0, x0, #0x37b
  43437c:	ldrb	w0, [x0]
  434380:	cmp	w0, #0x0
  434384:	b.eq	434430 <wcrtomb@plt+0x2f720>  // b.none
  434388:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43438c:	add	x0, x0, #0x268
  434390:	ldr	x0, [x0]
  434394:	cmp	x0, #0x0
  434398:	b.ne	434430 <wcrtomb@plt+0x2f720>  // b.any
  43439c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4343a0:	add	x0, x0, #0x2e0
  4343a4:	ldr	x0, [x0]
  4343a8:	ldr	x0, [x0]
  4343ac:	bl	449f00 <argp_usage@@Base+0xe14>
  4343b0:	str	x0, [sp, #128]
  4343b4:	ldr	x0, [sp, #128]
  4343b8:	bl	42d7f4 <wcrtomb@plt+0x28ae4>
  4343bc:	mov	x1, x0
  4343c0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4343c4:	add	x0, x0, #0x268
  4343c8:	str	x1, [x0]
  4343cc:	ldr	x0, [sp, #128]
  4343d0:	bl	404880 <free@plt>
  4343d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4343d8:	add	x0, x0, #0x268
  4343dc:	ldr	x0, [x0]
  4343e0:	cmp	x0, #0x0
  4343e4:	b.ne	434430 <wcrtomb@plt+0x2f720>  // b.any
  4343e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4343ec:	add	x0, x0, #0x420
  4343f0:	ldr	x0, [x0]
  4343f4:	cmp	x0, #0x0
  4343f8:	b.eq	43440c <wcrtomb@plt+0x2f6fc>  // b.none
  4343fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434400:	add	x0, x0, #0x420
  434404:	ldr	x0, [x0]
  434408:	blr	x0
  43440c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434410:	add	x0, x0, #0xad0
  434414:	bl	404c60 <gettext@plt>
  434418:	mov	x2, x0
  43441c:	mov	w1, #0x0                   	// #0
  434420:	mov	w0, #0x0                   	// #0
  434424:	bl	404100 <error@plt>
  434428:	mov	w0, #0x2                   	// #2
  43442c:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  434430:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434434:	add	x0, x0, #0x52
  434438:	ldrb	w0, [x0]
  43443c:	cmp	w0, #0x0
  434440:	b.eq	434454 <wcrtomb@plt+0x2f744>  // b.none
  434444:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434448:	add	x0, x0, #0x320
  43444c:	mov	w1, #0x3                   	// #3
  434450:	str	w1, [x0]
  434454:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434458:	add	x0, x0, #0x270
  43445c:	ldrb	w0, [x0]
  434460:	cmp	w0, #0x0
  434464:	b.eq	434474 <wcrtomb@plt+0x2f764>  // b.none
  434468:	mov	w0, #0x900                 	// #2304
  43446c:	movk	w0, #0x8, lsl #16
  434470:	b	43447c <wcrtomb@plt+0x2f76c>
  434474:	mov	w0, #0x8900                	// #35072
  434478:	movk	w0, #0x8, lsl #16
  43447c:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  434480:	add	x1, x1, #0x25c
  434484:	ldr	w1, [x1]
  434488:	cmp	w1, #0x2
  43448c:	b.ne	434498 <wcrtomb@plt+0x2f788>  // b.any
  434490:	mov	w1, #0x40000               	// #262144
  434494:	b	43449c <wcrtomb@plt+0x2f78c>
  434498:	mov	w1, #0x0                   	// #0
  43449c:	orr	w0, w0, w1
  4344a0:	str	w0, [sp, #124]
  4344a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4344a8:	add	x0, x0, #0x2f4
  4344ac:	ldr	w1, [sp, #124]
  4344b0:	str	w1, [x0]
  4344b4:	ldr	w0, [sp, #124]
  4344b8:	orr	w1, w0, #0x4000
  4344bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4344c0:	add	x0, x0, #0x2ec
  4344c4:	str	w1, [x0]
  4344c8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4344cc:	add	x0, x0, #0x270
  4344d0:	ldrb	w0, [x0]
  4344d4:	cmp	w0, #0x0
  4344d8:	b.eq	4344e4 <wcrtomb@plt+0x2f7d4>  // b.none
  4344dc:	mov	w0, #0x0                   	// #0
  4344e0:	b	4344e8 <wcrtomb@plt+0x2f7d8>
  4344e4:	mov	w0, #0x100                 	// #256
  4344e8:	adrp	x1, 4ae000 <argp_program_version_hook@@Base+0x228>
  4344ec:	add	x1, x1, #0x260
  4344f0:	str	w0, [x1]
  4344f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4344f8:	add	x0, x0, #0x38c
  4344fc:	ldr	w0, [x0]
  434500:	cmp	w0, #0x9
  434504:	b.ne	434540 <wcrtomb@plt+0x2f830>  // b.any
  434508:	bl	427778 <wcrtomb@plt+0x22a68>
  43450c:	and	w0, w0, #0xff
  434510:	eor	w0, w0, #0x1
  434514:	and	w0, w0, #0xff
  434518:	cmp	w0, #0x0
  43451c:	b.eq	434564 <wcrtomb@plt+0x2f854>  // b.none
  434520:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434524:	add	x0, x0, #0x2b4
  434528:	ldr	w0, [x0]
  43452c:	add	w1, w0, #0x1
  434530:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434534:	add	x0, x0, #0x2b4
  434538:	str	w1, [x0]
  43453c:	b	434564 <wcrtomb@plt+0x2f854>
  434540:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434544:	add	x0, x0, #0x259
  434548:	ldrb	w0, [x0]
  43454c:	cmp	w0, #0x0
  434550:	b.eq	434564 <wcrtomb@plt+0x2f854>  // b.none
  434554:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434558:	add	x0, x0, #0x2b4
  43455c:	mov	w1, #0x2                   	// #2
  434560:	str	w1, [x0]
  434564:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434568:	add	x0, x0, #0x2a8
  43456c:	ldr	d0, [x0]
  434570:	fcmp	d0, #0.0
  434574:	b.eq	4345e4 <wcrtomb@plt+0x2f8d4>  // b.none
  434578:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43457c:	add	x0, x0, #0x3c8
  434580:	ldr	d0, [x0]
  434584:	ucvtf	d1, d0
  434588:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43458c:	add	x0, x0, #0x2a8
  434590:	ldr	d0, [x0]
  434594:	fcmpe	d1, d0
  434598:	b.le	4345e4 <wcrtomb@plt+0x2f8d4>
  43459c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4345a0:	add	x0, x0, #0x420
  4345a4:	ldr	x0, [x0]
  4345a8:	cmp	x0, #0x0
  4345ac:	b.eq	4345c0 <wcrtomb@plt+0x2f8b0>  // b.none
  4345b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4345b4:	add	x0, x0, #0x420
  4345b8:	ldr	x0, [x0]
  4345bc:	blr	x0
  4345c0:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4345c4:	add	x0, x0, #0xb30
  4345c8:	bl	404c60 <gettext@plt>
  4345cc:	mov	x2, x0
  4345d0:	mov	w1, #0x0                   	// #0
  4345d4:	mov	w0, #0x0                   	// #0
  4345d8:	bl	404100 <error@plt>
  4345dc:	mov	w0, #0x2                   	// #2
  4345e0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4345e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4345e8:	add	x0, x0, #0x2b0
  4345ec:	ldrb	w0, [x0]
  4345f0:	cmp	w0, #0x0
  4345f4:	b.eq	43467c <wcrtomb@plt+0x2f96c>  // b.none
  4345f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4345fc:	add	x0, x0, #0x370
  434600:	ldr	x0, [x0]
  434604:	cmp	x0, #0x0
  434608:	b.eq	43467c <wcrtomb@plt+0x2f96c>  // b.none
  43460c:	mov	w0, #0x6                   	// #6
  434610:	bl	430414 <wcrtomb@plt+0x2b704>
  434614:	str	x0, [sp, #112]
  434618:	mov	w0, #0x2                   	// #2
  43461c:	bl	430414 <wcrtomb@plt+0x2b704>
  434620:	str	x0, [sp, #104]
  434624:	ldr	x1, [sp, #104]
  434628:	ldr	x0, [sp, #112]
  43462c:	bl	43047c <wcrtomb@plt+0x2b76c>
  434630:	cmp	w0, #0x0
  434634:	b.eq	434650 <wcrtomb@plt+0x2f940>  // b.none
  434638:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43463c:	add	x1, x0, #0x7f0
  434640:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434644:	add	x0, x0, #0xb60
  434648:	bl	4302ac <wcrtomb@plt+0x2b59c>
  43464c:	b	43467c <wcrtomb@plt+0x2f96c>
  434650:	ldr	x0, [sp, #112]
  434654:	ldr	w0, [x0]
  434658:	cmp	w0, #0x1
  43465c:	b.ne	434670 <wcrtomb@plt+0x2f960>  // b.any
  434660:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434664:	add	x0, x0, #0x370
  434668:	str	xzr, [x0]
  43466c:	b	43467c <wcrtomb@plt+0x2f96c>
  434670:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434674:	add	x0, x0, #0x2b0
  434678:	strb	wzr, [x0]
  43467c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434680:	add	x0, x0, #0x38c
  434684:	ldr	w0, [x0]
  434688:	cmp	w0, #0x9
  43468c:	b.eq	4347b0 <wcrtomb@plt+0x2faa0>  // b.none
  434690:	cmp	w0, #0x9
  434694:	b.hi	434930 <wcrtomb@plt+0x2fc20>  // b.pmore
  434698:	cmp	w0, #0x8
  43469c:	b.eq	434854 <wcrtomb@plt+0x2fb44>  // b.none
  4346a0:	cmp	w0, #0x8
  4346a4:	b.hi	434930 <wcrtomb@plt+0x2fc20>  // b.pmore
  4346a8:	cmp	w0, #0x7
  4346ac:	b.hi	434930 <wcrtomb@plt+0x2fc20>  // b.pmore
  4346b0:	cmp	w0, #0x5
  4346b4:	b.cs	4347b0 <wcrtomb@plt+0x2faa0>  // b.hs, b.nlast
  4346b8:	cmp	w0, #0x2
  4346bc:	b.hi	4346cc <wcrtomb@plt+0x2f9bc>  // b.pmore
  4346c0:	cmp	w0, #0x0
  4346c4:	b.ne	434854 <wcrtomb@plt+0x2fb44>  // b.any
  4346c8:	b	434930 <wcrtomb@plt+0x2fc20>
  4346cc:	cmp	w0, #0x3
  4346d0:	b.ne	434930 <wcrtomb@plt+0x2fc20>  // b.any
  4346d4:	bl	427778 <wcrtomb@plt+0x22a68>
  4346d8:	and	w0, w0, #0xff
  4346dc:	eor	w0, w0, #0x1
  4346e0:	and	w0, w0, #0xff
  4346e4:	cmp	w0, #0x0
  4346e8:	b.eq	434734 <wcrtomb@plt+0x2fa24>  // b.none
  4346ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4346f0:	add	x0, x0, #0x420
  4346f4:	ldr	x0, [x0]
  4346f8:	cmp	x0, #0x0
  4346fc:	b.eq	434710 <wcrtomb@plt+0x2fa00>  // b.none
  434700:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434704:	add	x0, x0, #0x420
  434708:	ldr	x0, [x0]
  43470c:	blr	x0
  434710:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434714:	add	x0, x0, #0xb78
  434718:	bl	404c60 <gettext@plt>
  43471c:	mov	x2, x0
  434720:	mov	w1, #0x0                   	// #0
  434724:	mov	w0, #0x0                   	// #0
  434728:	bl	404100 <error@plt>
  43472c:	mov	w0, #0x2                   	// #2
  434730:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  434734:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434738:	add	x0, x0, #0xc80
  43473c:	ldr	w0, [x0, #40]
  434740:	cmp	w0, #0x0
  434744:	b.eq	434938 <wcrtomb@plt+0x2fc28>  // b.none
  434748:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43474c:	add	x0, x0, #0x380
  434750:	ldr	x0, [x0]
  434754:	cmp	x0, #0x0
  434758:	b.eq	434938 <wcrtomb@plt+0x2fc28>  // b.none
  43475c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434760:	add	x0, x0, #0x2e0
  434764:	ldr	x0, [x0]
  434768:	ldr	x2, [x0]
  43476c:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  434770:	add	x1, x0, #0xc68
  434774:	mov	x0, x2
  434778:	bl	4047c0 <strcmp@plt>
  43477c:	cmp	w0, #0x0
  434780:	b.eq	434938 <wcrtomb@plt+0x2fc28>  // b.none
  434784:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434788:	add	x0, x0, #0x2e0
  43478c:	ldr	x0, [x0]
  434790:	ldr	x2, [x0]
  434794:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434798:	add	x0, x0, #0x3b8
  43479c:	ldr	x0, [x0]
  4347a0:	mov	x1, x0
  4347a4:	mov	x0, x2
  4347a8:	bl	42d7ac <wcrtomb@plt+0x28a9c>
  4347ac:	b	434938 <wcrtomb@plt+0x2fc28>
  4347b0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4347b4:	add	x0, x0, #0x2e0
  4347b8:	ldr	x1, [x0]
  4347bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4347c0:	add	x0, x0, #0x310
  4347c4:	str	x1, [x0]
  4347c8:	b	43481c <wcrtomb@plt+0x2fb0c>
  4347cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4347d0:	add	x0, x0, #0x310
  4347d4:	ldr	x0, [x0]
  4347d8:	ldr	x2, [x0]
  4347dc:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  4347e0:	add	x1, x0, #0xc68
  4347e4:	mov	x0, x2
  4347e8:	bl	4047c0 <strcmp@plt>
  4347ec:	cmp	w0, #0x0
  4347f0:	b.ne	434800 <wcrtomb@plt+0x2faf0>  // b.any
  4347f4:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4347f8:	add	x0, x0, #0xba8
  4347fc:	bl	42fa1c <wcrtomb@plt+0x2ad0c>
  434800:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434804:	add	x0, x0, #0x310
  434808:	ldr	x0, [x0]
  43480c:	add	x1, x0, #0x8
  434810:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434814:	add	x0, x0, #0x310
  434818:	str	x1, [x0]
  43481c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434820:	add	x0, x0, #0x2e0
  434824:	ldr	x1, [x0]
  434828:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43482c:	add	x0, x0, #0x380
  434830:	ldr	x0, [x0]
  434834:	lsl	x0, x0, #3
  434838:	add	x1, x1, x0
  43483c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434840:	add	x0, x0, #0x310
  434844:	ldr	x0, [x0]
  434848:	cmp	x1, x0
  43484c:	b.hi	4347cc <wcrtomb@plt+0x2fabc>  // b.pmore
  434850:	b	43493c <wcrtomb@plt+0x2fc2c>
  434854:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434858:	add	x0, x0, #0x2e0
  43485c:	ldr	x1, [x0]
  434860:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434864:	add	x0, x0, #0x310
  434868:	str	x1, [x0]
  43486c:	b	4348fc <wcrtomb@plt+0x2fbec>
  434870:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434874:	add	x0, x0, #0x310
  434878:	ldr	x0, [x0]
  43487c:	ldr	x2, [x0]
  434880:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  434884:	add	x1, x0, #0xc68
  434888:	mov	x0, x2
  43488c:	bl	4047c0 <strcmp@plt>
  434890:	cmp	w0, #0x0
  434894:	b.ne	4348e0 <wcrtomb@plt+0x2fbd0>  // b.any
  434898:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43489c:	add	x0, x0, #0x420
  4348a0:	ldr	x0, [x0]
  4348a4:	cmp	x0, #0x0
  4348a8:	b.eq	4348bc <wcrtomb@plt+0x2fbac>  // b.none
  4348ac:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4348b0:	add	x0, x0, #0x420
  4348b4:	ldr	x0, [x0]
  4348b8:	blr	x0
  4348bc:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4348c0:	add	x0, x0, #0xbb0
  4348c4:	bl	404c60 <gettext@plt>
  4348c8:	mov	x2, x0
  4348cc:	mov	w1, #0x0                   	// #0
  4348d0:	mov	w0, #0x0                   	// #0
  4348d4:	bl	404100 <error@plt>
  4348d8:	mov	w0, #0x2                   	// #2
  4348dc:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4348e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4348e4:	add	x0, x0, #0x310
  4348e8:	ldr	x0, [x0]
  4348ec:	add	x1, x0, #0x8
  4348f0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4348f4:	add	x0, x0, #0x310
  4348f8:	str	x1, [x0]
  4348fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434900:	add	x0, x0, #0x2e0
  434904:	ldr	x1, [x0]
  434908:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43490c:	add	x0, x0, #0x380
  434910:	ldr	x0, [x0]
  434914:	lsl	x0, x0, #3
  434918:	add	x1, x1, x0
  43491c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434920:	add	x0, x0, #0x310
  434924:	ldr	x0, [x0]
  434928:	cmp	x1, x0
  43492c:	b.hi	434870 <wcrtomb@plt+0x2fb60>  // b.pmore
  434930:	nop
  434934:	b	43493c <wcrtomb@plt+0x2fc2c>
  434938:	nop
  43493c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434940:	add	x0, x0, #0x3f0
  434944:	ldr	x0, [x0]
  434948:	cmp	x0, #0x0
  43494c:	b.eq	4349a0 <wcrtomb@plt+0x2fc90>  // b.none
  434950:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434954:	add	x0, x0, #0x3f0
  434958:	ldr	x2, [x0]
  43495c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434960:	add	x1, x0, #0xbe0
  434964:	mov	x0, x2
  434968:	bl	4043d0 <fopen@plt>
  43496c:	mov	x1, x0
  434970:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434974:	add	x0, x0, #0xf88
  434978:	str	x1, [x0]
  43497c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434980:	add	x0, x0, #0xf88
  434984:	ldr	x0, [x0]
  434988:	cmp	x0, #0x0
  43498c:	b.ne	4349dc <wcrtomb@plt+0x2fccc>  // b.any
  434990:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434994:	add	x0, x0, #0x3f0
  434998:	ldr	x0, [x0]
  43499c:	bl	43a640 <wcrtomb@plt+0x35930>
  4349a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4349a4:	add	x0, x0, #0x2a1
  4349a8:	ldrb	w0, [x0]
  4349ac:	cmp	w0, #0x0
  4349b0:	b.eq	4349c4 <wcrtomb@plt+0x2fcb4>  // b.none
  4349b4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4349b8:	add	x0, x0, #0x498
  4349bc:	ldr	x0, [x0]
  4349c0:	b	4349d0 <wcrtomb@plt+0x2fcc0>
  4349c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4349c8:	add	x0, x0, #0x4a0
  4349cc:	ldr	x0, [x0]
  4349d0:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4349d4:	add	x1, x1, #0xf88
  4349d8:	str	x0, [x1]
  4349dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4349e0:	add	x0, x0, #0x2e0
  4349e4:	ldr	x1, [x0]
  4349e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4349ec:	add	x0, x0, #0x310
  4349f0:	str	x1, [x0]
  4349f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4349f8:	add	x0, x0, #0xc80
  4349fc:	ldr	x0, [x0, #24]
  434a00:	cmp	x0, #0x0
  434a04:	b.eq	434a28 <wcrtomb@plt+0x2fd18>  // b.none
  434a08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434a0c:	add	x0, x0, #0xc80
  434a10:	ldr	x0, [x0, #24]
  434a14:	bl	45b858 <argp_usage@@Base+0x1276c>
  434a18:	mov	x1, x0
  434a1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434a20:	add	x0, x0, #0xdf0
  434a24:	str	x1, [x0]
  434a28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434a2c:	add	x0, x0, #0x325
  434a30:	ldrb	w0, [x0]
  434a34:	cmp	w0, #0x0
  434a38:	b.eq	434ab0 <wcrtomb@plt+0x2fda0>  // b.none
  434a3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434a40:	add	x0, x0, #0xc80
  434a44:	ldr	x0, [x0, #32]
  434a48:	mov	x1, x0
  434a4c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434a50:	add	x0, x0, #0xbe8
  434a54:	bl	449d14 <argp_usage@@Base+0xc28>
  434a58:	mov	w1, w0
  434a5c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434a60:	add	x0, x0, #0x308
  434a64:	str	w1, [x0]
  434a68:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434a6c:	add	x0, x0, #0x308
  434a70:	ldr	w0, [x0]
  434a74:	cmp	w0, #0x0
  434a78:	b.eq	434aa4 <wcrtomb@plt+0x2fd94>  // b.none
  434a7c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434a80:	add	x0, x0, #0x2a1
  434a84:	ldrb	w0, [x0]
  434a88:	cmp	w0, #0x0
  434a8c:	b.ne	434aa4 <wcrtomb@plt+0x2fd94>  // b.any
  434a90:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434a94:	add	x0, x0, #0x298
  434a98:	ldr	x0, [x0]
  434a9c:	cmp	x0, #0x0
  434aa0:	b.eq	434ab0 <wcrtomb@plt+0x2fda0>  // b.none
  434aa4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434aa8:	add	x0, x0, #0x325
  434aac:	strb	wzr, [x0]
  434ab0:	bl	40abcc <wcrtomb@plt+0x5ebc>
  434ab4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434ab8:	add	x0, x0, #0xc80
  434abc:	bl	43096c <wcrtomb@plt+0x2bc5c>
  434ac0:	nop
  434ac4:	ldr	x19, [sp, #16]
  434ac8:	ldp	x29, x30, [sp], #224
  434acc:	ret
  434ad0:	stp	x29, x30, [sp, #-32]!
  434ad4:	mov	x29, sp
  434ad8:	str	w0, [sp, #28]
  434adc:	str	x1, [sp, #16]
  434ae0:	bl	40523c <wcrtomb@plt+0x52c>
  434ae4:	ldr	x0, [sp, #16]
  434ae8:	ldr	x0, [x0]
  434aec:	bl	457c20 <argp_usage@@Base+0xeb34>
  434af0:	adrp	x0, 485000 <_obstack_memory_used@@Base+0x27ec0>
  434af4:	add	x1, x0, #0xe80
  434af8:	mov	w0, #0x6                   	// #6
  434afc:	bl	404cd0 <setlocale@plt>
  434b00:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434b04:	add	x1, x0, #0xbf8
  434b08:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434b0c:	add	x0, x0, #0x728
  434b10:	bl	404490 <bindtextdomain@plt>
  434b14:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434b18:	add	x0, x0, #0x728
  434b1c:	bl	4047a0 <textdomain@plt>
  434b20:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434b24:	add	x0, x0, #0x418
  434b28:	mov	w1, #0x2                   	// #2
  434b2c:	str	w1, [x0]
  434b30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434b34:	add	x0, x0, #0xdb0
  434b38:	str	wzr, [x0]
  434b3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434b40:	add	x0, x0, #0x420
  434b44:	adrp	x1, 40b000 <wcrtomb@plt+0x62f0>
  434b48:	add	x1, x1, #0x648
  434b4c:	str	x1, [x0]
  434b50:	mov	w1, #0x7                   	// #7
  434b54:	mov	x0, #0x0                   	// #0
  434b58:	bl	457dc0 <argp_usage@@Base+0xecd4>
  434b5c:	bl	43c740 <wcrtomb@plt+0x37a30>
  434b60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434b64:	add	x0, x0, #0xc20
  434b68:	mov	x1, #0xa                   	// #10
  434b6c:	str	x1, [x0]
  434b70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434b74:	add	x0, x0, #0xc20
  434b78:	ldr	x0, [x0]
  434b7c:	lsl	x0, x0, #3
  434b80:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  434b84:	mov	x1, x0
  434b88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434b8c:	add	x0, x0, #0x2e0
  434b90:	str	x1, [x0]
  434b94:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434b98:	add	x0, x0, #0x380
  434b9c:	str	xzr, [x0]
  434ba0:	mov	x1, #0x0                   	// #0
  434ba4:	mov	w0, #0x11                  	// #17
  434ba8:	bl	404360 <signal@plt>
  434bac:	bl	457c10 <argp_usage@@Base+0xeb24>
  434bb0:	ldr	x1, [sp, #16]
  434bb4:	ldr	w0, [sp, #28]
  434bb8:	bl	433368 <wcrtomb@plt+0x2e658>
  434bbc:	bl	4278c8 <wcrtomb@plt+0x22bb8>
  434bc0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434bc4:	add	x0, x0, #0x2c8
  434bc8:	ldr	x0, [x0]
  434bcc:	cmp	x0, #0x0
  434bd0:	b.eq	434bd8 <wcrtomb@plt+0x2fec8>  // b.none
  434bd4:	bl	407ce0 <wcrtomb@plt+0x2fd0>
  434bd8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434bdc:	add	x0, x0, #0x38c
  434be0:	ldr	w0, [x0]
  434be4:	cmp	w0, #0x9
  434be8:	b.eq	434d08 <wcrtomb@plt+0x2fff8>  // b.none
  434bec:	cmp	w0, #0x9
  434bf0:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434bf4:	cmp	w0, #0x8
  434bf8:	b.eq	434cb4 <wcrtomb@plt+0x2ffa4>  // b.none
  434bfc:	cmp	w0, #0x8
  434c00:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c04:	cmp	w0, #0x7
  434c08:	b.eq	434ce4 <wcrtomb@plt+0x2ffd4>  // b.none
  434c0c:	cmp	w0, #0x7
  434c10:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c14:	cmp	w0, #0x6
  434c18:	b.eq	434ccc <wcrtomb@plt+0x2ffbc>  // b.none
  434c1c:	cmp	w0, #0x6
  434c20:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c24:	cmp	w0, #0x5
  434c28:	b.eq	434cf4 <wcrtomb@plt+0x2ffe4>  // b.none
  434c2c:	cmp	w0, #0x5
  434c30:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c34:	cmp	w0, #0x4
  434c38:	b.eq	434cbc <wcrtomb@plt+0x2ffac>  // b.none
  434c3c:	cmp	w0, #0x4
  434c40:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c44:	cmp	w0, #0x3
  434c48:	b.eq	434cc4 <wcrtomb@plt+0x2ffb4>  // b.none
  434c4c:	cmp	w0, #0x3
  434c50:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c54:	cmp	w0, #0x0
  434c58:	b.eq	434c6c <wcrtomb@plt+0x2ff5c>  // b.none
  434c5c:	sub	w0, w0, #0x1
  434c60:	cmp	w0, #0x1
  434c64:	b.hi	434d0c <wcrtomb@plt+0x2fffc>  // b.pmore
  434c68:	b	434cb4 <wcrtomb@plt+0x2ffa4>
  434c6c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434c70:	add	x0, x0, #0x420
  434c74:	ldr	x0, [x0]
  434c78:	cmp	x0, #0x0
  434c7c:	b.eq	434c90 <wcrtomb@plt+0x2ff80>  // b.none
  434c80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434c84:	add	x0, x0, #0x420
  434c88:	ldr	x0, [x0]
  434c8c:	blr	x0
  434c90:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434c94:	add	x0, x0, #0xc10
  434c98:	bl	404c60 <gettext@plt>
  434c9c:	mov	x2, x0
  434ca0:	mov	w1, #0x0                   	// #0
  434ca4:	mov	w0, #0x0                   	// #0
  434ca8:	bl	404100 <error@plt>
  434cac:	mov	w0, #0x2                   	// #2
  434cb0:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  434cb4:	bl	437404 <wcrtomb@plt+0x326f4>
  434cb8:	b	434d0c <wcrtomb@plt+0x2fffc>
  434cbc:	bl	412048 <wcrtomb@plt+0xd338>
  434cc0:	b	434d0c <wcrtomb@plt+0x2fffc>
  434cc4:	bl	41006c <wcrtomb@plt+0xb35c>
  434cc8:	b	434d0c <wcrtomb@plt+0x2fffc>
  434ccc:	bl	4136d8 <wcrtomb@plt+0xe9c8>
  434cd0:	adrp	x0, 416000 <wcrtomb@plt+0x112f0>
  434cd4:	add	x0, x0, #0xab0
  434cd8:	bl	42026c <wcrtomb@plt+0x1b55c>
  434cdc:	bl	417144 <wcrtomb@plt+0x12434>
  434ce0:	b	434d0c <wcrtomb@plt+0x2fffc>
  434ce4:	adrp	x0, 420000 <wcrtomb@plt+0x1b2f0>
  434ce8:	add	x0, x0, #0x8a8
  434cec:	bl	42026c <wcrtomb@plt+0x1b55c>
  434cf0:	b	434d0c <wcrtomb@plt+0x2fffc>
  434cf4:	bl	40b800 <wcrtomb@plt+0x6af0>
  434cf8:	adrp	x0, 40c000 <wcrtomb@plt+0x72f0>
  434cfc:	add	x0, x0, #0x80c
  434d00:	bl	42026c <wcrtomb@plt+0x1b55c>
  434d04:	b	434d0c <wcrtomb@plt+0x2fffc>
  434d08:	bl	423264 <wcrtomb@plt+0x1e554>
  434d0c:	bl	40b7b0 <wcrtomb@plt+0x6aa0>
  434d10:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434d14:	add	x0, x0, #0x2e9
  434d18:	ldrb	w0, [x0]
  434d1c:	cmp	w0, #0x0
  434d20:	b.eq	434d28 <wcrtomb@plt+0x30018>  // b.none
  434d24:	bl	405f40 <wcrtomb@plt+0x1230>
  434d28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434d2c:	add	x0, x0, #0xc18
  434d30:	ldr	w0, [x0]
  434d34:	cmp	w0, #0x0
  434d38:	b.eq	434d40 <wcrtomb@plt+0x30030>  // b.none
  434d3c:	bl	410938 <wcrtomb@plt+0xbc28>
  434d40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434d44:	add	x0, x0, #0x2c8
  434d48:	ldr	x0, [x0]
  434d4c:	cmp	x0, #0x0
  434d50:	b.eq	434d58 <wcrtomb@plt+0x30048>  // b.none
  434d54:	bl	407e1c <wcrtomb@plt+0x310c>
  434d58:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434d5c:	add	x0, x0, #0x2e0
  434d60:	ldr	x0, [x0]
  434d64:	bl	404880 <free@plt>
  434d68:	bl	43924c <wcrtomb@plt+0x3453c>
  434d6c:	bl	427908 <wcrtomb@plt+0x22bf8>
  434d70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434d74:	add	x0, x0, #0xdb0
  434d78:	ldr	w0, [x0]
  434d7c:	cmp	w0, #0x2
  434d80:	b.ne	434da0 <wcrtomb@plt+0x30090>  // b.any
  434d84:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  434d88:	add	x0, x0, #0xc60
  434d8c:	bl	404c60 <gettext@plt>
  434d90:	mov	x2, x0
  434d94:	mov	w1, #0x0                   	// #0
  434d98:	mov	w0, #0x0                   	// #0
  434d9c:	bl	404100 <error@plt>
  434da0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434da4:	add	x0, x0, #0xf88
  434da8:	ldr	x1, [x0]
  434dac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434db0:	add	x0, x0, #0x4a0
  434db4:	ldr	x0, [x0]
  434db8:	cmp	x1, x0
  434dbc:	b.ne	434dc8 <wcrtomb@plt+0x300b8>  // b.any
  434dc0:	bl	449dbc <argp_usage@@Base+0xcd0>
  434dc4:	b	434e00 <wcrtomb@plt+0x300f0>
  434dc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434dcc:	add	x0, x0, #0x498
  434dd0:	ldr	x0, [x0]
  434dd4:	bl	4041e0 <ferror_unlocked@plt>
  434dd8:	cmp	w0, #0x0
  434ddc:	b.ne	434df8 <wcrtomb@plt+0x300e8>  // b.any
  434de0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434de4:	add	x0, x0, #0x498
  434de8:	ldr	x0, [x0]
  434dec:	bl	404380 <fclose@plt>
  434df0:	cmp	w0, #0x0
  434df4:	b.eq	434e00 <wcrtomb@plt+0x300f0>  // b.none
  434df8:	mov	w0, #0x2                   	// #2
  434dfc:	bl	434ff4 <wcrtomb@plt+0x302e4>
  434e00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  434e04:	add	x0, x0, #0xdb0
  434e08:	ldr	w0, [x0]
  434e0c:	ldp	x29, x30, [sp], #32
  434e10:	ret
  434e14:	stp	x29, x30, [sp, #-32]!
  434e18:	mov	x29, sp
  434e1c:	str	x0, [sp, #24]
  434e20:	mov	x2, #0x1a8                 	// #424
  434e24:	mov	w1, #0x0                   	// #0
  434e28:	ldr	x0, [sp, #24]
  434e2c:	bl	4044d0 <memset@plt>
  434e30:	nop
  434e34:	ldp	x29, x30, [sp], #32
  434e38:	ret
  434e3c:	stp	x29, x30, [sp, #-48]!
  434e40:	mov	x29, sp
  434e44:	str	x0, [sp, #24]
  434e48:	ldr	x0, [sp, #24]
  434e4c:	ldr	x0, [x0, #400]
  434e50:	cmp	x0, #0x0
  434e54:	b.eq	434e68 <wcrtomb@plt+0x30158>  // b.none
  434e58:	ldr	x0, [sp, #24]
  434e5c:	ldr	x0, [x0, #400]
  434e60:	bl	404630 <closedir@plt>
  434e64:	b	434e8c <wcrtomb@plt+0x3017c>
  434e68:	ldr	x0, [sp, #24]
  434e6c:	ldr	w0, [x0, #408]
  434e70:	cmp	w0, #0x0
  434e74:	b.le	434e88 <wcrtomb@plt+0x30178>
  434e78:	ldr	x0, [sp, #24]
  434e7c:	ldr	w0, [x0, #408]
  434e80:	bl	404660 <close@plt>
  434e84:	b	434e8c <wcrtomb@plt+0x3017c>
  434e88:	mov	w0, #0x0                   	// #0
  434e8c:	str	w0, [sp, #44]
  434e90:	ldr	x0, [sp, #24]
  434e94:	str	xzr, [x0, #400]
  434e98:	ldr	x0, [sp, #24]
  434e9c:	str	wzr, [x0, #408]
  434ea0:	ldr	w0, [sp, #44]
  434ea4:	cmp	w0, #0x0
  434ea8:	b.ne	434eb4 <wcrtomb@plt+0x301a4>  // b.any
  434eac:	mov	w0, #0x1                   	// #1
  434eb0:	b	434ec4 <wcrtomb@plt+0x301b4>
  434eb4:	ldr	x0, [sp, #24]
  434eb8:	ldr	x0, [x0]
  434ebc:	bl	425eac <wcrtomb@plt+0x2119c>
  434ec0:	mov	w0, #0x0                   	// #0
  434ec4:	ldp	x29, x30, [sp], #48
  434ec8:	ret
  434ecc:	stp	x29, x30, [sp, #-32]!
  434ed0:	mov	x29, sp
  434ed4:	str	x0, [sp, #24]
  434ed8:	ldr	x0, [sp, #24]
  434edc:	bl	434e3c <wcrtomb@plt+0x3012c>
  434ee0:	ldr	x0, [sp, #24]
  434ee4:	ldr	x2, [x0, #336]
  434ee8:	ldr	x0, [sp, #24]
  434eec:	ldr	x0, [x0, #328]
  434ef0:	mov	x1, x0
  434ef4:	mov	x0, x2
  434ef8:	bl	418440 <wcrtomb@plt+0x13730>
  434efc:	ldr	x0, [sp, #24]
  434f00:	ldr	x0, [x0]
  434f04:	bl	404880 <free@plt>
  434f08:	ldr	x0, [sp, #24]
  434f0c:	ldr	x0, [x0, #8]
  434f10:	bl	404880 <free@plt>
  434f14:	ldr	x0, [sp, #24]
  434f18:	ldr	x0, [x0, #24]
  434f1c:	bl	404880 <free@plt>
  434f20:	ldr	x0, [sp, #24]
  434f24:	ldr	x0, [x0, #32]
  434f28:	bl	404880 <free@plt>
  434f2c:	ldr	x0, [sp, #24]
  434f30:	ldr	x0, [x0, #40]
  434f34:	bl	404880 <free@plt>
  434f38:	ldr	x0, [sp, #24]
  434f3c:	ldr	x0, [x0, #48]
  434f40:	bl	404880 <free@plt>
  434f44:	ldr	x0, [sp, #24]
  434f48:	ldr	x0, [x0, #56]
  434f4c:	bl	404880 <free@plt>
  434f50:	ldr	x0, [sp, #24]
  434f54:	ldr	x0, [x0, #72]
  434f58:	bl	404880 <free@plt>
  434f5c:	ldr	x0, [sp, #24]
  434f60:	ldr	x0, [x0, #304]
  434f64:	bl	404880 <free@plt>
  434f68:	ldr	x0, [sp, #24]
  434f6c:	ldr	x0, [x0, #384]
  434f70:	bl	404880 <free@plt>
  434f74:	ldr	x0, [sp, #24]
  434f78:	add	x0, x0, #0x158
  434f7c:	bl	419804 <wcrtomb@plt+0x14af4>
  434f80:	ldr	x0, [sp, #24]
  434f84:	bl	412eec <wcrtomb@plt+0xe1dc>
  434f88:	mov	x2, #0x1a8                 	// #424
  434f8c:	mov	w1, #0x0                   	// #0
  434f90:	ldr	x0, [sp, #24]
  434f94:	bl	4044d0 <memset@plt>
  434f98:	nop
  434f9c:	ldp	x29, x30, [sp], #32
  434fa0:	ret
  434fa4:	stp	x29, x30, [sp, #-48]!
  434fa8:	mov	x29, sp
  434fac:	stp	x0, x1, [sp, #32]
  434fb0:	stp	x2, x3, [sp, #16]
  434fb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  434fb8:	add	x0, x0, #0x0
  434fbc:	ldr	w0, [x0]
  434fc0:	mov	w1, #0x10                  	// #16
  434fc4:	asr	w0, w1, w0
  434fc8:	and	w0, w0, #0x1
  434fcc:	cmp	w0, #0x0
  434fd0:	b.ne	434fe0 <wcrtomb@plt+0x302d0>  // b.any
  434fd4:	str	xzr, [sp, #24]
  434fd8:	ldr	x0, [sp, #24]
  434fdc:	str	x0, [sp, #40]
  434fe0:	ldp	x2, x3, [sp, #16]
  434fe4:	ldp	x0, x1, [sp, #32]
  434fe8:	bl	45ab0c <argp_usage@@Base+0x11a20>
  434fec:	ldp	x29, x30, [sp], #48
  434ff0:	ret
  434ff4:	sub	sp, sp, #0x10
  434ff8:	str	w0, [sp, #12]
  434ffc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435000:	add	x0, x0, #0xdb0
  435004:	ldr	w0, [x0]
  435008:	ldr	w1, [sp, #12]
  43500c:	cmp	w1, w0
  435010:	b.le	435024 <wcrtomb@plt+0x30314>
  435014:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435018:	add	x0, x0, #0xdb0
  43501c:	ldr	w1, [sp, #12]
  435020:	str	w1, [x0]
  435024:	nop
  435028:	add	sp, sp, #0x10
  43502c:	ret
  435030:	stp	x29, x30, [sp, #-32]!
  435034:	mov	x29, sp
  435038:	mov	x0, #0x70                  	// #112
  43503c:	bl	45b77c <argp_usage@@Base+0x12690>
  435040:	str	x0, [sp, #24]
  435044:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435048:	add	x0, x0, #0xcc8
  43504c:	ldr	x0, [x0]
  435050:	cmp	x0, #0x0
  435054:	b.eq	435070 <wcrtomb@plt+0x30360>  // b.none
  435058:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43505c:	add	x0, x0, #0xcc8
  435060:	ldr	x0, [x0]
  435064:	ldr	x1, [sp, #24]
  435068:	str	x1, [x0]
  43506c:	b	435080 <wcrtomb@plt+0x30370>
  435070:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435074:	add	x0, x0, #0xcc0
  435078:	ldr	x1, [sp, #24]
  43507c:	str	x1, [x0]
  435080:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435084:	add	x0, x0, #0xcc8
  435088:	ldr	x1, [sp, #24]
  43508c:	str	x1, [x0]
  435090:	ldr	x0, [sp, #24]
  435094:	ldp	x29, x30, [sp], #32
  435098:	ret
  43509c:	stp	x29, x30, [sp, #-48]!
  4350a0:	mov	x29, sp
  4350a4:	str	x0, [sp, #24]
  4350a8:	mov	x0, #0x20                  	// #32
  4350ac:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4350b0:	str	x0, [sp, #40]
  4350b4:	ldr	x0, [sp, #40]
  4350b8:	str	xzr, [x0]
  4350bc:	ldr	x0, [sp, #24]
  4350c0:	ldr	x0, [x0, #96]
  4350c4:	cmp	x0, #0x0
  4350c8:	b.eq	4350e0 <wcrtomb@plt+0x303d0>  // b.none
  4350cc:	ldr	x0, [sp, #24]
  4350d0:	ldr	x0, [x0, #96]
  4350d4:	ldr	x1, [sp, #40]
  4350d8:	str	x1, [x0]
  4350dc:	b	4350ec <wcrtomb@plt+0x303dc>
  4350e0:	ldr	x0, [sp, #24]
  4350e4:	ldr	x1, [sp, #40]
  4350e8:	str	x1, [x0, #88]
  4350ec:	ldr	x0, [sp, #24]
  4350f0:	ldr	x1, [sp, #40]
  4350f4:	str	x1, [x0, #96]
  4350f8:	ldr	x0, [sp, #24]
  4350fc:	ldr	x0, [x0, #104]
  435100:	add	x1, x0, #0x1
  435104:	ldr	x0, [sp, #24]
  435108:	str	x1, [x0, #104]
  43510c:	ldr	x0, [sp, #40]
  435110:	ldp	x29, x30, [sp], #48
  435114:	ret
  435118:	stp	x29, x30, [sp, #-64]!
  43511c:	mov	x29, sp
  435120:	str	x0, [sp, #40]
  435124:	str	x1, [sp, #32]
  435128:	str	x2, [sp, #24]
  43512c:	ldr	x1, [sp, #24]
  435130:	ldr	x0, [sp, #32]
  435134:	sub	x0, x1, x0
  435138:	str	x0, [sp, #56]
  43513c:	ldr	x0, [sp, #56]
  435140:	cmp	x0, #0x0
  435144:	b.eq	4351a8 <wcrtomb@plt+0x30498>  // b.none
  435148:	ldr	x0, [sp, #40]
  43514c:	bl	43509c <wcrtomb@plt+0x3038c>
  435150:	str	x0, [sp, #48]
  435154:	ldr	x0, [sp, #48]
  435158:	str	wzr, [x0, #8]
  43515c:	ldr	x0, [sp, #56]
  435160:	add	x0, x0, #0x1
  435164:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  435168:	mov	x1, x0
  43516c:	ldr	x0, [sp, #48]
  435170:	str	x1, [x0, #16]
  435174:	ldr	x0, [sp, #48]
  435178:	ldr	x0, [x0, #16]
  43517c:	ldr	x2, [sp, #56]
  435180:	ldr	x1, [sp, #32]
  435184:	bl	404020 <memcpy@plt>
  435188:	ldr	x0, [sp, #48]
  43518c:	ldr	x1, [x0, #16]
  435190:	ldr	x0, [sp, #56]
  435194:	add	x0, x1, x0
  435198:	strb	wzr, [x0]
  43519c:	ldr	x0, [sp, #48]
  4351a0:	ldr	x1, [sp, #56]
  4351a4:	str	x1, [x0, #24]
  4351a8:	nop
  4351ac:	ldp	x29, x30, [sp], #64
  4351b0:	ret
  4351b4:	stp	x29, x30, [sp, #-48]!
  4351b8:	mov	x29, sp
  4351bc:	str	x0, [sp, #24]
  4351c0:	str	w1, [sp, #20]
  4351c4:	ldr	x0, [sp, #24]
  4351c8:	bl	43509c <wcrtomb@plt+0x3038c>
  4351cc:	str	x0, [sp, #40]
  4351d0:	ldr	x0, [sp, #40]
  4351d4:	str	wzr, [x0, #8]
  4351d8:	mov	x0, #0x2                   	// #2
  4351dc:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4351e0:	mov	x1, x0
  4351e4:	ldr	x0, [sp, #40]
  4351e8:	str	x1, [x0, #16]
  4351ec:	ldr	x0, [sp, #40]
  4351f0:	ldr	x0, [x0, #16]
  4351f4:	ldr	w1, [sp, #20]
  4351f8:	and	w1, w1, #0xff
  4351fc:	strb	w1, [x0]
  435200:	ldr	x0, [sp, #40]
  435204:	ldr	x0, [x0, #16]
  435208:	add	x0, x0, #0x1
  43520c:	strb	wzr, [x0]
  435210:	ldr	x0, [sp, #40]
  435214:	mov	x1, #0x1                   	// #1
  435218:	str	x1, [x0, #24]
  43521c:	nop
  435220:	ldp	x29, x30, [sp], #48
  435224:	ret
  435228:	stp	x29, x30, [sp, #-48]!
  43522c:	mov	x29, sp
  435230:	str	x0, [sp, #24]
  435234:	str	x1, [sp, #16]
  435238:	ldr	x0, [sp, #24]
  43523c:	bl	43509c <wcrtomb@plt+0x3038c>
  435240:	str	x0, [sp, #40]
  435244:	ldr	x0, [sp, #40]
  435248:	mov	w1, #0x1                   	// #1
  43524c:	str	w1, [x0, #8]
  435250:	ldr	x0, [sp, #40]
  435254:	ldr	x1, [sp, #16]
  435258:	str	x1, [x0, #16]
  43525c:	nop
  435260:	ldp	x29, x30, [sp], #48
  435264:	ret
  435268:	sub	sp, sp, #0x10
  43526c:	str	x0, [sp, #8]
  435270:	str	w1, [sp, #4]
  435274:	ldr	w0, [sp, #4]
  435278:	cmp	w0, #0x73
  43527c:	b.eq	435350 <wcrtomb@plt+0x30640>  // b.none
  435280:	ldr	w0, [sp, #4]
  435284:	cmp	w0, #0x73
  435288:	b.gt	435380 <wcrtomb@plt+0x30670>
  43528c:	ldr	w0, [sp, #4]
  435290:	cmp	w0, #0x72
  435294:	b.eq	4352f0 <wcrtomb@plt+0x305e0>  // b.none
  435298:	ldr	w0, [sp, #4]
  43529c:	cmp	w0, #0x72
  4352a0:	b.gt	435380 <wcrtomb@plt+0x30670>
  4352a4:	ldr	w0, [sp, #4]
  4352a8:	cmp	w0, #0x68
  4352ac:	b.eq	435320 <wcrtomb@plt+0x30610>  // b.none
  4352b0:	ldr	w0, [sp, #4]
  4352b4:	cmp	w0, #0x68
  4352b8:	b.gt	435380 <wcrtomb@plt+0x30670>
  4352bc:	ldr	w0, [sp, #4]
  4352c0:	cmp	w0, #0x53
  4352c4:	b.eq	435368 <wcrtomb@plt+0x30658>  // b.none
  4352c8:	ldr	w0, [sp, #4]
  4352cc:	cmp	w0, #0x53
  4352d0:	b.gt	435380 <wcrtomb@plt+0x30670>
  4352d4:	ldr	w0, [sp, #4]
  4352d8:	cmp	w0, #0x48
  4352dc:	b.eq	435338 <wcrtomb@plt+0x30628>  // b.none
  4352e0:	ldr	w0, [sp, #4]
  4352e4:	cmp	w0, #0x52
  4352e8:	b.eq	435308 <wcrtomb@plt+0x305f8>  // b.none
  4352ec:	b	435380 <wcrtomb@plt+0x30670>
  4352f0:	ldr	x0, [sp, #8]
  4352f4:	ldr	w0, [x0]
  4352f8:	orr	w1, w0, #0x1
  4352fc:	ldr	x0, [sp, #8]
  435300:	str	w1, [x0]
  435304:	b	435388 <wcrtomb@plt+0x30678>
  435308:	ldr	x0, [sp, #8]
  43530c:	ldr	w0, [x0]
  435310:	and	w1, w0, #0xfffffffe
  435314:	ldr	x0, [sp, #8]
  435318:	str	w1, [x0]
  43531c:	b	435388 <wcrtomb@plt+0x30678>
  435320:	ldr	x0, [sp, #8]
  435324:	ldr	w0, [x0]
  435328:	orr	w1, w0, #0x2
  43532c:	ldr	x0, [sp, #8]
  435330:	str	w1, [x0]
  435334:	b	435388 <wcrtomb@plt+0x30678>
  435338:	ldr	x0, [sp, #8]
  43533c:	ldr	w0, [x0]
  435340:	and	w1, w0, #0xfffffffd
  435344:	ldr	x0, [sp, #8]
  435348:	str	w1, [x0]
  43534c:	b	435388 <wcrtomb@plt+0x30678>
  435350:	ldr	x0, [sp, #8]
  435354:	ldr	w0, [x0]
  435358:	orr	w1, w0, #0x4
  43535c:	ldr	x0, [sp, #8]
  435360:	str	w1, [x0]
  435364:	b	435388 <wcrtomb@plt+0x30678>
  435368:	ldr	x0, [sp, #8]
  43536c:	ldr	w0, [x0]
  435370:	and	w1, w0, #0xfffffffb
  435374:	ldr	x0, [sp, #8]
  435378:	str	w1, [x0]
  43537c:	b	435388 <wcrtomb@plt+0x30678>
  435380:	mov	w0, #0x1                   	// #1
  435384:	b	43538c <wcrtomb@plt+0x3067c>
  435388:	mov	w0, #0x0                   	// #0
  43538c:	add	sp, sp, #0x10
  435390:	ret
  435394:	stp	x29, x30, [sp, #-48]!
  435398:	mov	x29, sp
  43539c:	str	x0, [sp, #24]
  4353a0:	str	w1, [sp, #20]
  4353a4:	ldr	x0, [sp, #24]
  4353a8:	bl	43509c <wcrtomb@plt+0x3038c>
  4353ac:	str	x0, [sp, #40]
  4353b0:	ldr	x0, [sp, #40]
  4353b4:	mov	w1, #0x2                   	// #2
  4353b8:	str	w1, [x0, #8]
  4353bc:	ldr	x0, [sp, #40]
  4353c0:	ldr	w1, [sp, #20]
  4353c4:	str	w1, [x0, #16]
  4353c8:	nop
  4353cc:	ldp	x29, x30, [sp], #48
  4353d0:	ret
  4353d4:	sub	sp, sp, #0x280
  4353d8:	stp	x29, x30, [sp]
  4353dc:	mov	x29, sp
  4353e0:	str	x0, [sp, #24]
  4353e4:	str	wzr, [sp, #620]
  4353e8:	bl	435030 <wcrtomb@plt+0x30320>
  4353ec:	str	x0, [sp, #608]
  4353f0:	ldr	x0, [sp, #24]
  4353f4:	ldrb	w0, [x0]
  4353f8:	cmp	w0, #0x73
  4353fc:	b.eq	43553c <wcrtomb@plt+0x3082c>  // b.none
  435400:	mov	x2, #0x6                   	// #6
  435404:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  435408:	add	x1, x0, #0xdd8
  43540c:	ldr	x0, [sp, #24]
  435410:	bl	404480 <strncmp@plt>
  435414:	cmp	w0, #0x0
  435418:	b.ne	4354f4 <wcrtomb@plt+0x307e4>  // b.any
  43541c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435420:	add	x0, x0, #0x1d0
  435424:	str	wzr, [x0]
  435428:	ldr	x0, [sp, #24]
  43542c:	add	x0, x0, #0x6
  435430:	str	x0, [sp, #24]
  435434:	b	4354dc <wcrtomb@plt+0x307cc>
  435438:	ldr	x0, [sp, #24]
  43543c:	ldrb	w0, [x0]
  435440:	cmp	w0, #0x3b
  435444:	b.ne	435458 <wcrtomb@plt+0x30748>  // b.any
  435448:	ldr	x0, [sp, #24]
  43544c:	add	x0, x0, #0x1
  435450:	str	x0, [sp, #24]
  435454:	b	4354ec <wcrtomb@plt+0x307dc>
  435458:	ldr	x0, [sp, #24]
  43545c:	ldrb	w0, [x0]
  435460:	mov	w1, w0
  435464:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435468:	add	x0, x0, #0x1d0
  43546c:	bl	435268 <wcrtomb@plt+0x30558>
  435470:	cmp	w0, #0x0
  435474:	b.eq	4354d0 <wcrtomb@plt+0x307c0>  // b.none
  435478:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43547c:	add	x0, x0, #0x420
  435480:	ldr	x0, [x0]
  435484:	cmp	x0, #0x0
  435488:	b.eq	43549c <wcrtomb@plt+0x3078c>  // b.none
  43548c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435490:	add	x0, x0, #0x420
  435494:	ldr	x0, [x0]
  435498:	blr	x0
  43549c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  4354a0:	add	x0, x0, #0xde0
  4354a4:	bl	404c60 <gettext@plt>
  4354a8:	mov	x1, x0
  4354ac:	ldr	x0, [sp, #24]
  4354b0:	ldrb	w0, [x0]
  4354b4:	mov	w3, w0
  4354b8:	mov	x2, x1
  4354bc:	mov	w1, #0x0                   	// #0
  4354c0:	mov	w0, #0x0                   	// #0
  4354c4:	bl	404100 <error@plt>
  4354c8:	mov	w0, #0x2                   	// #2
  4354cc:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4354d0:	ldr	x0, [sp, #24]
  4354d4:	add	x0, x0, #0x1
  4354d8:	str	x0, [sp, #24]
  4354dc:	ldr	x0, [sp, #24]
  4354e0:	ldrb	w0, [x0]
  4354e4:	cmp	w0, #0x0
  4354e8:	b.ne	435438 <wcrtomb@plt+0x30728>  // b.any
  4354ec:	ldr	x0, [sp, #24]
  4354f0:	b	435ea4 <wcrtomb@plt+0x31194>
  4354f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4354f8:	add	x0, x0, #0x420
  4354fc:	ldr	x0, [x0]
  435500:	cmp	x0, #0x0
  435504:	b.eq	435518 <wcrtomb@plt+0x30808>  // b.none
  435508:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43550c:	add	x0, x0, #0x420
  435510:	ldr	x0, [x0]
  435514:	blr	x0
  435518:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43551c:	add	x0, x0, #0xe00
  435520:	bl	404c60 <gettext@plt>
  435524:	mov	x2, x0
  435528:	mov	w1, #0x0                   	// #0
  43552c:	mov	w0, #0x0                   	// #0
  435530:	bl	404100 <error@plt>
  435534:	mov	w0, #0x2                   	// #2
  435538:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  43553c:	ldr	x0, [sp, #24]
  435540:	add	x0, x0, #0x1
  435544:	ldrb	w0, [x0]
  435548:	str	w0, [sp, #604]
  43554c:	mov	w0, #0x2                   	// #2
  435550:	str	w0, [sp, #636]
  435554:	b	4355a4 <wcrtomb@plt+0x30894>
  435558:	ldrsw	x0, [sp, #636]
  43555c:	ldr	x1, [sp, #24]
  435560:	add	x0, x1, x0
  435564:	ldrb	w0, [x0]
  435568:	cmp	w0, #0x5c
  43556c:	b.ne	435598 <wcrtomb@plt+0x30888>  // b.any
  435570:	ldrsw	x0, [sp, #636]
  435574:	add	x0, x0, #0x1
  435578:	ldr	x1, [sp, #24]
  43557c:	add	x0, x1, x0
  435580:	ldrb	w0, [x0]
  435584:	cmp	w0, #0x0
  435588:	b.eq	435598 <wcrtomb@plt+0x30888>  // b.none
  43558c:	ldr	w0, [sp, #636]
  435590:	add	w0, w0, #0x1
  435594:	str	w0, [sp, #636]
  435598:	ldr	w0, [sp, #636]
  43559c:	add	w0, w0, #0x1
  4355a0:	str	w0, [sp, #636]
  4355a4:	ldrsw	x0, [sp, #636]
  4355a8:	ldr	x1, [sp, #24]
  4355ac:	add	x0, x1, x0
  4355b0:	ldrb	w0, [x0]
  4355b4:	cmp	w0, #0x0
  4355b8:	b.eq	4355dc <wcrtomb@plt+0x308cc>  // b.none
  4355bc:	ldrsw	x0, [sp, #636]
  4355c0:	ldr	x1, [sp, #24]
  4355c4:	add	x0, x1, x0
  4355c8:	ldrb	w0, [x0]
  4355cc:	mov	w1, w0
  4355d0:	ldr	w0, [sp, #604]
  4355d4:	cmp	w0, w1
  4355d8:	b.ne	435558 <wcrtomb@plt+0x30848>  // b.any
  4355dc:	ldrsw	x0, [sp, #636]
  4355e0:	ldr	x1, [sp, #24]
  4355e4:	add	x0, x1, x0
  4355e8:	ldrb	w0, [x0]
  4355ec:	mov	w1, w0
  4355f0:	ldr	w0, [sp, #604]
  4355f4:	cmp	w0, w1
  4355f8:	b.eq	435644 <wcrtomb@plt+0x30934>  // b.none
  4355fc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435600:	add	x0, x0, #0x420
  435604:	ldr	x0, [x0]
  435608:	cmp	x0, #0x0
  43560c:	b.eq	435620 <wcrtomb@plt+0x30910>  // b.none
  435610:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435614:	add	x0, x0, #0x420
  435618:	ldr	x0, [x0]
  43561c:	blr	x0
  435620:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  435624:	add	x0, x0, #0xe00
  435628:	bl	404c60 <gettext@plt>
  43562c:	mov	x2, x0
  435630:	mov	w1, #0x0                   	// #0
  435634:	mov	w0, #0x0                   	// #0
  435638:	bl	404100 <error@plt>
  43563c:	mov	w0, #0x2                   	// #2
  435640:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  435644:	ldr	w0, [sp, #636]
  435648:	add	w0, w0, #0x1
  43564c:	str	w0, [sp, #632]
  435650:	b	4356a0 <wcrtomb@plt+0x30990>
  435654:	ldrsw	x0, [sp, #632]
  435658:	ldr	x1, [sp, #24]
  43565c:	add	x0, x1, x0
  435660:	ldrb	w0, [x0]
  435664:	cmp	w0, #0x5c
  435668:	b.ne	435694 <wcrtomb@plt+0x30984>  // b.any
  43566c:	ldrsw	x0, [sp, #632]
  435670:	add	x0, x0, #0x1
  435674:	ldr	x1, [sp, #24]
  435678:	add	x0, x1, x0
  43567c:	ldrb	w0, [x0]
  435680:	cmp	w0, #0x0
  435684:	b.eq	435694 <wcrtomb@plt+0x30984>  // b.none
  435688:	ldr	w0, [sp, #632]
  43568c:	add	w0, w0, #0x1
  435690:	str	w0, [sp, #632]
  435694:	ldr	w0, [sp, #632]
  435698:	add	w0, w0, #0x1
  43569c:	str	w0, [sp, #632]
  4356a0:	ldrsw	x0, [sp, #632]
  4356a4:	ldr	x1, [sp, #24]
  4356a8:	add	x0, x1, x0
  4356ac:	ldrb	w0, [x0]
  4356b0:	cmp	w0, #0x0
  4356b4:	b.eq	4356d8 <wcrtomb@plt+0x309c8>  // b.none
  4356b8:	ldrsw	x0, [sp, #632]
  4356bc:	ldr	x1, [sp, #24]
  4356c0:	add	x0, x1, x0
  4356c4:	ldrb	w0, [x0]
  4356c8:	mov	w1, w0
  4356cc:	ldr	w0, [sp, #604]
  4356d0:	cmp	w0, w1
  4356d4:	b.ne	435654 <wcrtomb@plt+0x30944>  // b.any
  4356d8:	ldrsw	x0, [sp, #632]
  4356dc:	ldr	x1, [sp, #24]
  4356e0:	add	x0, x1, x0
  4356e4:	ldrb	w0, [x0]
  4356e8:	mov	w1, w0
  4356ec:	ldr	w0, [sp, #604]
  4356f0:	cmp	w0, w1
  4356f4:	b.eq	435740 <wcrtomb@plt+0x30a30>  // b.none
  4356f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4356fc:	add	x0, x0, #0x420
  435700:	ldr	x0, [x0]
  435704:	cmp	x0, #0x0
  435708:	b.eq	43571c <wcrtomb@plt+0x30a0c>  // b.none
  43570c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435710:	add	x0, x0, #0x420
  435714:	ldr	x0, [x0]
  435718:	blr	x0
  43571c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  435720:	add	x0, x0, #0xe00
  435724:	bl	404c60 <gettext@plt>
  435728:	mov	x2, x0
  43572c:	mov	w1, #0x0                   	// #0
  435730:	mov	w0, #0x0                   	// #0
  435734:	bl	404100 <error@plt>
  435738:	mov	w0, #0x2                   	// #2
  43573c:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  435740:	ldr	x0, [sp, #608]
  435744:	str	wzr, [x0, #8]
  435748:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43574c:	add	x0, x0, #0x1d0
  435750:	ldr	w1, [x0]
  435754:	ldr	x0, [sp, #608]
  435758:	str	w1, [x0, #12]
  43575c:	ldrsw	x0, [sp, #632]
  435760:	add	x0, x0, #0x1
  435764:	ldr	x1, [sp, #24]
  435768:	add	x0, x1, x0
  43576c:	str	x0, [sp, #560]
  435770:	b	43589c <wcrtomb@plt+0x30b8c>
  435774:	ldr	x0, [sp, #560]
  435778:	ldrb	w0, [x0]
  43577c:	cmp	w0, #0x78
  435780:	b.eq	4357d8 <wcrtomb@plt+0x30ac8>  // b.none
  435784:	cmp	w0, #0x78
  435788:	b.gt	435814 <wcrtomb@plt+0x30b04>
  43578c:	cmp	w0, #0x69
  435790:	b.eq	4357c8 <wcrtomb@plt+0x30ab8>  // b.none
  435794:	cmp	w0, #0x69
  435798:	b.gt	435814 <wcrtomb@plt+0x30b04>
  43579c:	cmp	w0, #0x39
  4357a0:	b.gt	4357b0 <wcrtomb@plt+0x30aa0>
  4357a4:	cmp	w0, #0x30
  4357a8:	b.ge	4357e8 <wcrtomb@plt+0x30ad8>  // b.tcont
  4357ac:	b	435814 <wcrtomb@plt+0x30b04>
  4357b0:	cmp	w0, #0x67
  4357b4:	b.ne	435814 <wcrtomb@plt+0x30b04>  // b.any
  4357b8:	ldr	x0, [sp, #608]
  4357bc:	mov	w1, #0x1                   	// #1
  4357c0:	str	w1, [x0, #8]
  4357c4:	b	435890 <wcrtomb@plt+0x30b80>
  4357c8:	ldr	w0, [sp, #620]
  4357cc:	orr	w0, w0, #0x2
  4357d0:	str	w0, [sp, #620]
  4357d4:	b	435890 <wcrtomb@plt+0x30b80>
  4357d8:	ldr	w0, [sp, #620]
  4357dc:	orr	w0, w0, #0x1
  4357e0:	str	w0, [sp, #620]
  4357e4:	b	435890 <wcrtomb@plt+0x30b80>
  4357e8:	ldr	x0, [sp, #560]
  4357ec:	add	x1, sp, #0x230
  4357f0:	mov	w2, #0x0                   	// #0
  4357f4:	bl	4040a0 <strtoul@plt>
  4357f8:	mov	w1, w0
  4357fc:	ldr	x0, [sp, #608]
  435800:	str	w1, [x0, #16]
  435804:	ldr	x0, [sp, #560]
  435808:	sub	x0, x0, #0x1
  43580c:	str	x0, [sp, #560]
  435810:	b	435890 <wcrtomb@plt+0x30b80>
  435814:	ldr	x0, [sp, #608]
  435818:	add	x2, x0, #0xc
  43581c:	ldr	x0, [sp, #560]
  435820:	ldrb	w0, [x0]
  435824:	mov	w1, w0
  435828:	mov	x0, x2
  43582c:	bl	435268 <wcrtomb@plt+0x30558>
  435830:	cmp	w0, #0x0
  435834:	b.eq	435890 <wcrtomb@plt+0x30b80>  // b.none
  435838:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43583c:	add	x0, x0, #0x420
  435840:	ldr	x0, [x0]
  435844:	cmp	x0, #0x0
  435848:	b.eq	43585c <wcrtomb@plt+0x30b4c>  // b.none
  43584c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435850:	add	x0, x0, #0x420
  435854:	ldr	x0, [x0]
  435858:	blr	x0
  43585c:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  435860:	add	x0, x0, #0xe20
  435864:	bl	404c60 <gettext@plt>
  435868:	mov	x1, x0
  43586c:	ldr	x0, [sp, #560]
  435870:	ldrb	w0, [x0]
  435874:	mov	w3, w0
  435878:	mov	x2, x1
  43587c:	mov	w1, #0x0                   	// #0
  435880:	mov	w0, #0x0                   	// #0
  435884:	bl	404100 <error@plt>
  435888:	mov	w0, #0x2                   	// #2
  43588c:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  435890:	ldr	x0, [sp, #560]
  435894:	add	x0, x0, #0x1
  435898:	str	x0, [sp, #560]
  43589c:	ldr	x0, [sp, #560]
  4358a0:	ldrb	w0, [x0]
  4358a4:	cmp	w0, #0x0
  4358a8:	b.eq	4358bc <wcrtomb@plt+0x30bac>  // b.none
  4358ac:	ldr	x0, [sp, #560]
  4358b0:	ldrb	w0, [x0]
  4358b4:	cmp	w0, #0x3b
  4358b8:	b.ne	435774 <wcrtomb@plt+0x30a64>  // b.any
  4358bc:	ldr	x0, [sp, #560]
  4358c0:	ldrb	w0, [x0]
  4358c4:	cmp	w0, #0x3b
  4358c8:	b.ne	4358d8 <wcrtomb@plt+0x30bc8>  // b.any
  4358cc:	ldr	x0, [sp, #560]
  4358d0:	add	x0, x0, #0x1
  4358d4:	str	x0, [sp, #560]
  4358d8:	ldr	w0, [sp, #636]
  4358dc:	sub	w0, w0, #0x1
  4358e0:	sxtw	x0, w0
  4358e4:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  4358e8:	str	x0, [sp, #592]
  4358ec:	ldr	x0, [sp, #24]
  4358f0:	add	x1, x0, #0x2
  4358f4:	ldr	w0, [sp, #636]
  4358f8:	sub	w0, w0, #0x2
  4358fc:	sxtw	x0, w0
  435900:	mov	x2, x0
  435904:	ldr	x0, [sp, #592]
  435908:	bl	404020 <memcpy@plt>
  43590c:	ldrsw	x0, [sp, #636]
  435910:	sub	x0, x0, #0x2
  435914:	ldr	x1, [sp, #592]
  435918:	add	x0, x1, x0
  43591c:	strb	wzr, [x0]
  435920:	ldr	x0, [sp, #608]
  435924:	add	x0, x0, #0x18
  435928:	ldr	w2, [sp, #620]
  43592c:	ldr	x1, [sp, #592]
  435930:	bl	462cec <_obstack_memory_used@@Base+0x5bac>
  435934:	str	w0, [sp, #588]
  435938:	ldr	w0, [sp, #588]
  43593c:	cmp	w0, #0x0
  435940:	b.eq	4359b8 <wcrtomb@plt+0x30ca8>  // b.none
  435944:	ldr	x0, [sp, #608]
  435948:	add	x0, x0, #0x18
  43594c:	add	x1, sp, #0x28
  435950:	mov	x3, #0x200                 	// #512
  435954:	mov	x2, x1
  435958:	mov	x1, x0
  43595c:	ldr	w0, [sp, #588]
  435960:	bl	462e88 <_obstack_memory_used@@Base+0x5d48>
  435964:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435968:	add	x0, x0, #0x420
  43596c:	ldr	x0, [x0]
  435970:	cmp	x0, #0x0
  435974:	b.eq	435988 <wcrtomb@plt+0x30c78>  // b.none
  435978:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43597c:	add	x0, x0, #0x420
  435980:	ldr	x0, [x0]
  435984:	blr	x0
  435988:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43598c:	add	x0, x0, #0xe50
  435990:	bl	404c60 <gettext@plt>
  435994:	mov	x1, x0
  435998:	add	x0, sp, #0x28
  43599c:	mov	x3, x0
  4359a0:	mov	x2, x1
  4359a4:	mov	w1, #0x0                   	// #0
  4359a8:	mov	w0, #0x0                   	// #0
  4359ac:	bl	404100 <error@plt>
  4359b0:	mov	w0, #0x2                   	// #2
  4359b4:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  4359b8:	ldr	x0, [sp, #592]
  4359bc:	ldrb	w0, [x0]
  4359c0:	cmp	w0, #0x5e
  4359c4:	b.eq	4359f0 <wcrtomb@plt+0x30ce0>  // b.none
  4359c8:	ldr	w0, [sp, #636]
  4359cc:	cmp	w0, #0x2
  4359d0:	b.le	4359f8 <wcrtomb@plt+0x30ce8>
  4359d4:	ldrsw	x0, [sp, #636]
  4359d8:	sub	x0, x0, #0x3
  4359dc:	ldr	x1, [sp, #592]
  4359e0:	add	x0, x1, x0
  4359e4:	ldrb	w0, [x0]
  4359e8:	cmp	w0, #0x24
  4359ec:	b.ne	4359f8 <wcrtomb@plt+0x30ce8>  // b.any
  4359f0:	ldr	x0, [sp, #608]
  4359f4:	str	wzr, [x0, #8]
  4359f8:	ldr	x0, [sp, #592]
  4359fc:	bl	404880 <free@plt>
  435a00:	ldr	w0, [sp, #636]
  435a04:	add	w0, w0, #0x1
  435a08:	str	w0, [sp, #636]
  435a0c:	ldr	w1, [sp, #632]
  435a10:	ldr	w0, [sp, #636]
  435a14:	sub	w0, w1, w0
  435a18:	add	w0, w0, #0x1
  435a1c:	sxtw	x0, w0
  435a20:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  435a24:	str	x0, [sp, #592]
  435a28:	ldrsw	x0, [sp, #636]
  435a2c:	ldr	x1, [sp, #24]
  435a30:	add	x3, x1, x0
  435a34:	ldr	w1, [sp, #632]
  435a38:	ldr	w0, [sp, #636]
  435a3c:	sub	w0, w1, w0
  435a40:	sxtw	x0, w0
  435a44:	mov	x2, x0
  435a48:	mov	x1, x3
  435a4c:	ldr	x0, [sp, #592]
  435a50:	bl	404020 <memcpy@plt>
  435a54:	ldr	w1, [sp, #632]
  435a58:	ldr	w0, [sp, #636]
  435a5c:	sub	w0, w1, w0
  435a60:	sxtw	x0, w0
  435a64:	ldr	x1, [sp, #592]
  435a68:	add	x0, x1, x0
  435a6c:	strb	wzr, [x0]
  435a70:	ldr	x0, [sp, #592]
  435a74:	str	x0, [sp, #624]
  435a78:	ldr	x0, [sp, #624]
  435a7c:	str	x0, [sp, #568]
  435a80:	b	435e74 <wcrtomb@plt+0x31164>
  435a84:	ldr	x0, [sp, #568]
  435a88:	ldrb	w0, [x0]
  435a8c:	cmp	w0, #0x5c
  435a90:	b.ne	435e20 <wcrtomb@plt+0x31110>  // b.any
  435a94:	ldr	x0, [sp, #568]
  435a98:	mov	x2, x0
  435a9c:	ldr	x1, [sp, #624]
  435aa0:	ldr	x0, [sp, #608]
  435aa4:	bl	435118 <wcrtomb@plt+0x30408>
  435aa8:	ldr	x0, [sp, #568]
  435aac:	add	x0, x0, #0x1
  435ab0:	str	x0, [sp, #568]
  435ab4:	ldr	x0, [sp, #568]
  435ab8:	ldrb	w0, [x0]
  435abc:	cmp	w0, #0x76
  435ac0:	b.eq	435cec <wcrtomb@plt+0x30fdc>  // b.none
  435ac4:	cmp	w0, #0x76
  435ac8:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435acc:	cmp	w0, #0x75
  435ad0:	b.eq	435d78 <wcrtomb@plt+0x31068>  // b.none
  435ad4:	cmp	w0, #0x75
  435ad8:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435adc:	cmp	w0, #0x74
  435ae0:	b.eq	435cd0 <wcrtomb@plt+0x30fc0>  // b.none
  435ae4:	cmp	w0, #0x74
  435ae8:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435aec:	cmp	w0, #0x72
  435af0:	b.eq	435cb4 <wcrtomb@plt+0x30fa4>  // b.none
  435af4:	cmp	w0, #0x72
  435af8:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435afc:	cmp	w0, #0x6e
  435b00:	b.eq	435c98 <wcrtomb@plt+0x30f88>  // b.none
  435b04:	cmp	w0, #0x6e
  435b08:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b0c:	cmp	w0, #0x6c
  435b10:	b.eq	435d40 <wcrtomb@plt+0x31030>  // b.none
  435b14:	cmp	w0, #0x6c
  435b18:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b1c:	cmp	w0, #0x66
  435b20:	b.eq	435c7c <wcrtomb@plt+0x30f6c>  // b.none
  435b24:	cmp	w0, #0x66
  435b28:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b2c:	cmp	w0, #0x62
  435b30:	b.eq	435c60 <wcrtomb@plt+0x30f50>  // b.none
  435b34:	cmp	w0, #0x62
  435b38:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b3c:	cmp	w0, #0x61
  435b40:	b.eq	435c44 <wcrtomb@plt+0x30f34>  // b.none
  435b44:	cmp	w0, #0x61
  435b48:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b4c:	cmp	w0, #0x5c
  435b50:	b.eq	435c28 <wcrtomb@plt+0x30f18>  // b.none
  435b54:	cmp	w0, #0x5c
  435b58:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b5c:	cmp	w0, #0x55
  435b60:	b.eq	435d5c <wcrtomb@plt+0x3104c>  // b.none
  435b64:	cmp	w0, #0x55
  435b68:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b6c:	cmp	w0, #0x4c
  435b70:	b.eq	435d24 <wcrtomb@plt+0x31014>  // b.none
  435b74:	cmp	w0, #0x4c
  435b78:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b7c:	cmp	w0, #0x45
  435b80:	b.eq	435d94 <wcrtomb@plt+0x31084>  // b.none
  435b84:	cmp	w0, #0x45
  435b88:	b.gt	435db0 <wcrtomb@plt+0x310a0>
  435b8c:	cmp	w0, #0x26
  435b90:	b.eq	435d08 <wcrtomb@plt+0x30ff8>  // b.none
  435b94:	cmp	w0, #0x26
  435b98:	b.lt	435db0 <wcrtomb@plt+0x310a0>  // b.tstop
  435b9c:	sub	w0, w0, #0x30
  435ba0:	cmp	w0, #0x9
  435ba4:	b.hi	435db0 <wcrtomb@plt+0x310a0>  // b.pmore
  435ba8:	ldr	x0, [sp, #568]
  435bac:	add	x1, sp, #0x238
  435bb0:	mov	w2, #0xa                   	// #10
  435bb4:	bl	4040a0 <strtoul@plt>
  435bb8:	str	x0, [sp, #576]
  435bbc:	ldr	x0, [sp, #608]
  435bc0:	ldr	x0, [x0, #72]
  435bc4:	ldr	x1, [sp, #576]
  435bc8:	cmp	x1, x0
  435bcc:	b.ls	435c18 <wcrtomb@plt+0x30f08>  // b.plast
  435bd0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435bd4:	add	x0, x0, #0x420
  435bd8:	ldr	x0, [x0]
  435bdc:	cmp	x0, #0x0
  435be0:	b.eq	435bf4 <wcrtomb@plt+0x30ee4>  // b.none
  435be4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  435be8:	add	x0, x0, #0x420
  435bec:	ldr	x0, [x0]
  435bf0:	blr	x0
  435bf4:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  435bf8:	add	x0, x0, #0xe78
  435bfc:	bl	404c60 <gettext@plt>
  435c00:	mov	x2, x0
  435c04:	mov	w1, #0x0                   	// #0
  435c08:	mov	w0, #0x0                   	// #0
  435c0c:	bl	404100 <error@plt>
  435c10:	mov	w0, #0x2                   	// #2
  435c14:	bl	432fe4 <wcrtomb@plt+0x2e2d4>
  435c18:	ldr	x1, [sp, #576]
  435c1c:	ldr	x0, [sp, #608]
  435c20:	bl	435228 <wcrtomb@plt+0x30518>
  435c24:	b	435e14 <wcrtomb@plt+0x31104>
  435c28:	mov	w1, #0x5c                  	// #92
  435c2c:	ldr	x0, [sp, #608]
  435c30:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435c34:	ldr	x0, [sp, #568]
  435c38:	add	x0, x0, #0x1
  435c3c:	str	x0, [sp, #568]
  435c40:	b	435e14 <wcrtomb@plt+0x31104>
  435c44:	mov	w1, #0x7                   	// #7
  435c48:	ldr	x0, [sp, #608]
  435c4c:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435c50:	ldr	x0, [sp, #568]
  435c54:	add	x0, x0, #0x1
  435c58:	str	x0, [sp, #568]
  435c5c:	b	435e14 <wcrtomb@plt+0x31104>
  435c60:	mov	w1, #0x8                   	// #8
  435c64:	ldr	x0, [sp, #608]
  435c68:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435c6c:	ldr	x0, [sp, #568]
  435c70:	add	x0, x0, #0x1
  435c74:	str	x0, [sp, #568]
  435c78:	b	435e14 <wcrtomb@plt+0x31104>
  435c7c:	mov	w1, #0xc                   	// #12
  435c80:	ldr	x0, [sp, #608]
  435c84:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435c88:	ldr	x0, [sp, #568]
  435c8c:	add	x0, x0, #0x1
  435c90:	str	x0, [sp, #568]
  435c94:	b	435e14 <wcrtomb@plt+0x31104>
  435c98:	mov	w1, #0xa                   	// #10
  435c9c:	ldr	x0, [sp, #608]
  435ca0:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435ca4:	ldr	x0, [sp, #568]
  435ca8:	add	x0, x0, #0x1
  435cac:	str	x0, [sp, #568]
  435cb0:	b	435e14 <wcrtomb@plt+0x31104>
  435cb4:	mov	w1, #0xd                   	// #13
  435cb8:	ldr	x0, [sp, #608]
  435cbc:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435cc0:	ldr	x0, [sp, #568]
  435cc4:	add	x0, x0, #0x1
  435cc8:	str	x0, [sp, #568]
  435ccc:	b	435e14 <wcrtomb@plt+0x31104>
  435cd0:	mov	w1, #0x9                   	// #9
  435cd4:	ldr	x0, [sp, #608]
  435cd8:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435cdc:	ldr	x0, [sp, #568]
  435ce0:	add	x0, x0, #0x1
  435ce4:	str	x0, [sp, #568]
  435ce8:	b	435e14 <wcrtomb@plt+0x31104>
  435cec:	mov	w1, #0xb                   	// #11
  435cf0:	ldr	x0, [sp, #608]
  435cf4:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435cf8:	ldr	x0, [sp, #568]
  435cfc:	add	x0, x0, #0x1
  435d00:	str	x0, [sp, #568]
  435d04:	b	435e14 <wcrtomb@plt+0x31104>
  435d08:	mov	w1, #0x26                  	// #38
  435d0c:	ldr	x0, [sp, #608]
  435d10:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435d14:	ldr	x0, [sp, #568]
  435d18:	add	x0, x0, #0x1
  435d1c:	str	x0, [sp, #568]
  435d20:	b	435e14 <wcrtomb@plt+0x31104>
  435d24:	mov	w1, #0x4                   	// #4
  435d28:	ldr	x0, [sp, #608]
  435d2c:	bl	435394 <wcrtomb@plt+0x30684>
  435d30:	ldr	x0, [sp, #568]
  435d34:	add	x0, x0, #0x1
  435d38:	str	x0, [sp, #568]
  435d3c:	b	435e14 <wcrtomb@plt+0x31104>
  435d40:	mov	w1, #0x2                   	// #2
  435d44:	ldr	x0, [sp, #608]
  435d48:	bl	435394 <wcrtomb@plt+0x30684>
  435d4c:	ldr	x0, [sp, #568]
  435d50:	add	x0, x0, #0x1
  435d54:	str	x0, [sp, #568]
  435d58:	b	435e14 <wcrtomb@plt+0x31104>
  435d5c:	mov	w1, #0x3                   	// #3
  435d60:	ldr	x0, [sp, #608]
  435d64:	bl	435394 <wcrtomb@plt+0x30684>
  435d68:	ldr	x0, [sp, #568]
  435d6c:	add	x0, x0, #0x1
  435d70:	str	x0, [sp, #568]
  435d74:	b	435e14 <wcrtomb@plt+0x31104>
  435d78:	mov	w1, #0x1                   	// #1
  435d7c:	ldr	x0, [sp, #608]
  435d80:	bl	435394 <wcrtomb@plt+0x30684>
  435d84:	ldr	x0, [sp, #568]
  435d88:	add	x0, x0, #0x1
  435d8c:	str	x0, [sp, #568]
  435d90:	b	435e14 <wcrtomb@plt+0x31104>
  435d94:	mov	w1, #0x0                   	// #0
  435d98:	ldr	x0, [sp, #608]
  435d9c:	bl	435394 <wcrtomb@plt+0x30684>
  435da0:	ldr	x0, [sp, #568]
  435da4:	add	x0, x0, #0x1
  435da8:	str	x0, [sp, #568]
  435dac:	b	435e14 <wcrtomb@plt+0x31104>
  435db0:	ldr	x0, [sp, #568]
  435db4:	ldrb	w0, [x0]
  435db8:	mov	w1, w0
  435dbc:	ldr	w0, [sp, #604]
  435dc0:	cmp	w0, w1
  435dc4:	b.ne	435dd8 <wcrtomb@plt+0x310c8>  // b.any
  435dc8:	ldr	w1, [sp, #604]
  435dcc:	ldr	x0, [sp, #608]
  435dd0:	bl	4351b4 <wcrtomb@plt+0x304a4>
  435dd4:	b	435e04 <wcrtomb@plt+0x310f4>
  435dd8:	mov	w0, #0x5c                  	// #92
  435ddc:	strb	w0, [sp, #552]
  435de0:	ldr	x0, [sp, #568]
  435de4:	ldrb	w0, [x0]
  435de8:	strb	w0, [sp, #553]
  435dec:	add	x0, sp, #0x228
  435df0:	add	x0, x0, #0x2
  435df4:	add	x1, sp, #0x228
  435df8:	mov	x2, x0
  435dfc:	ldr	x0, [sp, #608]
  435e00:	bl	435118 <wcrtomb@plt+0x30408>
  435e04:	ldr	x0, [sp, #568]
  435e08:	add	x0, x0, #0x1
  435e0c:	str	x0, [sp, #568]
  435e10:	nop
  435e14:	ldr	x0, [sp, #568]
  435e18:	str	x0, [sp, #624]
  435e1c:	b	435e74 <wcrtomb@plt+0x31164>
  435e20:	ldr	x0, [sp, #568]
  435e24:	ldrb	w0, [x0]
  435e28:	cmp	w0, #0x26
  435e2c:	b.ne	435e68 <wcrtomb@plt+0x31158>  // b.any
  435e30:	ldr	x0, [sp, #568]
  435e34:	mov	x2, x0
  435e38:	ldr	x1, [sp, #624]
  435e3c:	ldr	x0, [sp, #608]
  435e40:	bl	435118 <wcrtomb@plt+0x30408>
  435e44:	mov	x1, #0x0                   	// #0
  435e48:	ldr	x0, [sp, #608]
  435e4c:	bl	435228 <wcrtomb@plt+0x30518>
  435e50:	ldr	x0, [sp, #568]
  435e54:	add	x0, x0, #0x1
  435e58:	str	x0, [sp, #568]
  435e5c:	ldr	x0, [sp, #568]
  435e60:	str	x0, [sp, #624]
  435e64:	b	435e74 <wcrtomb@plt+0x31164>
  435e68:	ldr	x0, [sp, #568]
  435e6c:	add	x0, x0, #0x1
  435e70:	str	x0, [sp, #568]
  435e74:	ldr	x0, [sp, #568]
  435e78:	ldrb	w0, [x0]
  435e7c:	cmp	w0, #0x0
  435e80:	b.ne	435a84 <wcrtomb@plt+0x30d74>  // b.any
  435e84:	ldr	x0, [sp, #568]
  435e88:	mov	x2, x0
  435e8c:	ldr	x1, [sp, #624]
  435e90:	ldr	x0, [sp, #608]
  435e94:	bl	435118 <wcrtomb@plt+0x30408>
  435e98:	ldr	x0, [sp, #592]
  435e9c:	bl	404880 <free@plt>
  435ea0:	ldr	x0, [sp, #560]
  435ea4:	ldp	x29, x30, [sp]
  435ea8:	add	sp, sp, #0x280
  435eac:	ret
  435eb0:	stp	x29, x30, [sp, #-32]!
  435eb4:	mov	x29, sp
  435eb8:	str	x0, [sp, #24]
  435ebc:	b	435ecc <wcrtomb@plt+0x311bc>
  435ec0:	ldr	x0, [sp, #24]
  435ec4:	bl	4353d4 <wcrtomb@plt+0x306c4>
  435ec8:	str	x0, [sp, #24]
  435ecc:	ldr	x0, [sp, #24]
  435ed0:	ldrb	w0, [x0]
  435ed4:	cmp	w0, #0x0
  435ed8:	b.ne	435ec0 <wcrtomb@plt+0x311b0>  // b.any
  435edc:	nop
  435ee0:	nop
  435ee4:	ldp	x29, x30, [sp], #32
  435ee8:	ret
  435eec:	stp	x29, x30, [sp, #-64]!
  435ef0:	mov	x29, sp
  435ef4:	str	w0, [sp, #44]
  435ef8:	str	x1, [sp, #32]
  435efc:	str	x2, [sp, #24]
  435f00:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435f04:	add	x0, x0, #0xd38
  435f08:	ldr	x0, [x0]
  435f0c:	ldr	x1, [sp, #24]
  435f10:	cmp	x1, x0
  435f14:	b.ls	435f5c <wcrtomb@plt+0x3124c>  // b.plast
  435f18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435f1c:	add	x0, x0, #0xd38
  435f20:	ldr	x1, [sp, #24]
  435f24:	str	x1, [x0]
  435f28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435f2c:	add	x0, x0, #0xcd0
  435f30:	ldr	x2, [x0]
  435f34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435f38:	add	x0, x0, #0xd38
  435f3c:	ldr	x0, [x0]
  435f40:	mov	x1, x0
  435f44:	mov	x0, x2
  435f48:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  435f4c:	mov	x1, x0
  435f50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435f54:	add	x0, x0, #0xcd0
  435f58:	str	x1, [x0]
  435f5c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435f60:	add	x0, x0, #0xcd0
  435f64:	ldr	x0, [x0]
  435f68:	ldr	x2, [sp, #24]
  435f6c:	ldr	x1, [sp, #32]
  435f70:	bl	404020 <memcpy@plt>
  435f74:	ldr	w0, [sp, #44]
  435f78:	cmp	w0, #0x4
  435f7c:	b.eq	436090 <wcrtomb@plt+0x31380>  // b.none
  435f80:	ldr	w0, [sp, #44]
  435f84:	cmp	w0, #0x4
  435f88:	b.hi	4360f0 <wcrtomb@plt+0x313e0>  // b.pmore
  435f8c:	ldr	w0, [sp, #44]
  435f90:	cmp	w0, #0x3
  435f94:	b.eq	436034 <wcrtomb@plt+0x31324>  // b.none
  435f98:	ldr	w0, [sp, #44]
  435f9c:	cmp	w0, #0x3
  435fa0:	b.hi	4360f0 <wcrtomb@plt+0x313e0>  // b.pmore
  435fa4:	ldr	w0, [sp, #44]
  435fa8:	cmp	w0, #0x2
  435fac:	b.eq	436004 <wcrtomb@plt+0x312f4>  // b.none
  435fb0:	ldr	w0, [sp, #44]
  435fb4:	cmp	w0, #0x2
  435fb8:	b.hi	4360f0 <wcrtomb@plt+0x313e0>  // b.pmore
  435fbc:	ldr	w0, [sp, #44]
  435fc0:	cmp	w0, #0x0
  435fc4:	b.eq	4360ec <wcrtomb@plt+0x313dc>  // b.none
  435fc8:	ldr	w0, [sp, #44]
  435fcc:	cmp	w0, #0x1
  435fd0:	b.ne	4360f0 <wcrtomb@plt+0x313e0>  // b.any
  435fd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435fd8:	add	x0, x0, #0xcd0
  435fdc:	ldr	x0, [x0]
  435fe0:	ldrb	w0, [x0]
  435fe4:	bl	404400 <toupper@plt>
  435fe8:	mov	w1, w0
  435fec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  435ff0:	add	x0, x0, #0xcd0
  435ff4:	ldr	x0, [x0]
  435ff8:	and	w1, w1, #0xff
  435ffc:	strb	w1, [x0]
  436000:	b	4360f0 <wcrtomb@plt+0x313e0>
  436004:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436008:	add	x0, x0, #0xcd0
  43600c:	ldr	x0, [x0]
  436010:	ldrb	w0, [x0]
  436014:	bl	404bd0 <tolower@plt>
  436018:	mov	w1, w0
  43601c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436020:	add	x0, x0, #0xcd0
  436024:	ldr	x0, [x0]
  436028:	and	w1, w1, #0xff
  43602c:	strb	w1, [x0]
  436030:	b	4360f0 <wcrtomb@plt+0x313e0>
  436034:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436038:	add	x0, x0, #0xcd0
  43603c:	ldr	x0, [x0]
  436040:	str	x0, [sp, #56]
  436044:	b	43606c <wcrtomb@plt+0x3135c>
  436048:	ldr	x0, [sp, #56]
  43604c:	ldrb	w0, [x0]
  436050:	bl	404400 <toupper@plt>
  436054:	and	w1, w0, #0xff
  436058:	ldr	x0, [sp, #56]
  43605c:	strb	w1, [x0]
  436060:	ldr	x0, [sp, #56]
  436064:	add	x0, x0, #0x1
  436068:	str	x0, [sp, #56]
  43606c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436070:	add	x0, x0, #0xcd0
  436074:	ldr	x1, [x0]
  436078:	ldr	x0, [sp, #24]
  43607c:	add	x0, x1, x0
  436080:	ldr	x1, [sp, #56]
  436084:	cmp	x1, x0
  436088:	b.cc	436048 <wcrtomb@plt+0x31338>  // b.lo, b.ul, b.last
  43608c:	b	4360f0 <wcrtomb@plt+0x313e0>
  436090:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436094:	add	x0, x0, #0xcd0
  436098:	ldr	x0, [x0]
  43609c:	str	x0, [sp, #56]
  4360a0:	b	4360c8 <wcrtomb@plt+0x313b8>
  4360a4:	ldr	x0, [sp, #56]
  4360a8:	ldrb	w0, [x0]
  4360ac:	bl	404bd0 <tolower@plt>
  4360b0:	and	w1, w0, #0xff
  4360b4:	ldr	x0, [sp, #56]
  4360b8:	strb	w1, [x0]
  4360bc:	ldr	x0, [sp, #56]
  4360c0:	add	x0, x0, #0x1
  4360c4:	str	x0, [sp, #56]
  4360c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4360cc:	add	x0, x0, #0xcd0
  4360d0:	ldr	x1, [x0]
  4360d4:	ldr	x0, [sp, #24]
  4360d8:	add	x0, x1, x0
  4360dc:	ldr	x1, [sp, #56]
  4360e0:	cmp	x1, x0
  4360e4:	b.cc	4360a4 <wcrtomb@plt+0x31394>  // b.lo, b.ul, b.last
  4360e8:	b	4360f0 <wcrtomb@plt+0x313e0>
  4360ec:	nop
  4360f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4360f4:	add	x0, x0, #0xcd0
  4360f8:	ldr	x0, [x0]
  4360fc:	ldp	x29, x30, [sp], #64
  436100:	ret
  436104:	stp	x29, x30, [sp, #-256]!
  436108:	mov	x29, sp
  43610c:	str	x0, [sp, #24]
  436110:	str	x1, [sp, #16]
  436114:	str	xzr, [sp, #248]
  436118:	str	wzr, [sp, #244]
  43611c:	str	wzr, [sp, #240]
  436120:	ldr	x0, [sp, #24]
  436124:	ldr	x0, [x0, #72]
  436128:	add	x0, x0, #0x1
  43612c:	lsl	x0, x0, #4
  436130:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  436134:	str	x0, [sp, #208]
  436138:	b	4366f4 <wcrtomb@plt+0x319e4>
  43613c:	ldr	x0, [sp, #24]
  436140:	add	x5, x0, #0x18
  436144:	ldr	x0, [sp, #24]
  436148:	ldr	x0, [x0, #72]
  43614c:	add	x0, x0, #0x1
  436150:	mov	w4, #0x0                   	// #0
  436154:	ldr	x3, [sp, #208]
  436158:	mov	x2, x0
  43615c:	ldr	x1, [sp, #16]
  436160:	mov	x0, x5
  436164:	bl	46ac68 <_obstack_memory_used@@Base+0xdb28>
  436168:	str	w0, [sp, #204]
  43616c:	ldr	w0, [sp, #204]
  436170:	cmp	w0, #0x0
  436174:	b.ne	4365d0 <wcrtomb@plt+0x318c0>  // b.any
  436178:	ldr	x0, [sp, #208]
  43617c:	ldr	x0, [x0, #8]
  436180:	str	x0, [sp, #232]
  436184:	ldr	x0, [sp, #208]
  436188:	ldr	x0, [x0]
  43618c:	cmp	x0, #0x0
  436190:	b.eq	436210 <wcrtomb@plt+0x31500>  // b.none
  436194:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436198:	add	x0, x0, #0xcd8
  43619c:	str	x0, [sp, #168]
  4361a0:	ldr	x0, [sp, #208]
  4361a4:	ldr	x0, [x0]
  4361a8:	str	x0, [sp, #160]
  4361ac:	ldr	x0, [sp, #168]
  4361b0:	str	x0, [sp, #152]
  4361b4:	ldr	x0, [sp, #152]
  4361b8:	ldr	x1, [x0, #32]
  4361bc:	ldr	x0, [sp, #152]
  4361c0:	ldr	x0, [x0, #24]
  4361c4:	sub	x0, x1, x0
  4361c8:	mov	x1, x0
  4361cc:	ldr	x0, [sp, #160]
  4361d0:	cmp	x1, x0
  4361d4:	b.cs	4361e4 <wcrtomb@plt+0x314d4>  // b.hs, b.nlast
  4361d8:	ldr	x1, [sp, #160]
  4361dc:	ldr	x0, [sp, #168]
  4361e0:	bl	45cdc0 <_obstack_newchunk@@Base>
  4361e4:	ldr	x0, [sp, #168]
  4361e8:	ldr	x0, [x0, #24]
  4361ec:	ldr	x2, [sp, #160]
  4361f0:	ldr	x1, [sp, #16]
  4361f4:	bl	404020 <memcpy@plt>
  4361f8:	ldr	x0, [sp, #168]
  4361fc:	ldr	x1, [x0, #24]
  436200:	ldr	x0, [sp, #160]
  436204:	add	x1, x1, x0
  436208:	ldr	x0, [sp, #168]
  43620c:	str	x1, [x0, #24]
  436210:	ldr	x0, [sp, #248]
  436214:	add	x0, x0, #0x1
  436218:	str	x0, [sp, #248]
  43621c:	ldr	x0, [sp, #24]
  436220:	ldr	w0, [x0, #16]
  436224:	cmp	w0, #0x0
  436228:	b.eq	4362d0 <wcrtomb@plt+0x315c0>  // b.none
  43622c:	ldr	x0, [sp, #24]
  436230:	ldr	w0, [x0, #16]
  436234:	mov	w0, w0
  436238:	ldr	x1, [sp, #248]
  43623c:	cmp	x1, x0
  436240:	b.cs	4362d0 <wcrtomb@plt+0x315c0>  // b.hs, b.nlast
  436244:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436248:	add	x0, x0, #0xcd8
  43624c:	str	x0, [sp, #144]
  436250:	ldr	x0, [sp, #232]
  436254:	str	x0, [sp, #136]
  436258:	ldr	x0, [sp, #144]
  43625c:	str	x0, [sp, #128]
  436260:	ldr	x0, [sp, #128]
  436264:	ldr	x1, [x0, #32]
  436268:	ldr	x0, [sp, #128]
  43626c:	ldr	x0, [x0, #24]
  436270:	sub	x0, x1, x0
  436274:	mov	x1, x0
  436278:	ldr	x0, [sp, #136]
  43627c:	cmp	x1, x0
  436280:	b.cs	436290 <wcrtomb@plt+0x31580>  // b.hs, b.nlast
  436284:	ldr	x1, [sp, #136]
  436288:	ldr	x0, [sp, #144]
  43628c:	bl	45cdc0 <_obstack_newchunk@@Base>
  436290:	ldr	x0, [sp, #144]
  436294:	ldr	x0, [x0, #24]
  436298:	ldr	x2, [sp, #136]
  43629c:	ldr	x1, [sp, #16]
  4362a0:	bl	404020 <memcpy@plt>
  4362a4:	ldr	x0, [sp, #144]
  4362a8:	ldr	x1, [x0, #24]
  4362ac:	ldr	x0, [sp, #136]
  4362b0:	add	x1, x1, x0
  4362b4:	ldr	x0, [sp, #144]
  4362b8:	str	x1, [x0, #24]
  4362bc:	ldr	x1, [sp, #16]
  4362c0:	ldr	x0, [sp, #232]
  4362c4:	add	x0, x1, x0
  4362c8:	str	x0, [sp, #16]
  4362cc:	b	4366f4 <wcrtomb@plt+0x319e4>
  4362d0:	ldr	x0, [sp, #24]
  4362d4:	ldr	x0, [x0, #88]
  4362d8:	str	x0, [sp, #216]
  4362dc:	b	4365c0 <wcrtomb@plt+0x318b0>
  4362e0:	ldr	x0, [sp, #216]
  4362e4:	ldr	w0, [x0, #8]
  4362e8:	cmp	w0, #0x2
  4362ec:	b.eq	43654c <wcrtomb@plt+0x3183c>  // b.none
  4362f0:	cmp	w0, #0x2
  4362f4:	b.hi	4365b4 <wcrtomb@plt+0x318a4>  // b.pmore
  4362f8:	cmp	w0, #0x0
  4362fc:	b.eq	43630c <wcrtomb@plt+0x315fc>  // b.none
  436300:	cmp	w0, #0x1
  436304:	b.eq	4363ec <wcrtomb@plt+0x316dc>  // b.none
  436308:	b	4365b4 <wcrtomb@plt+0x318a4>
  43630c:	ldr	w0, [sp, #244]
  436310:	cmp	w0, #0x0
  436314:	b.ne	436328 <wcrtomb@plt+0x31618>  // b.any
  436318:	ldr	x0, [sp, #216]
  43631c:	ldr	x0, [x0, #16]
  436320:	str	x0, [sp, #224]
  436324:	b	43636c <wcrtomb@plt+0x3165c>
  436328:	ldr	x0, [sp, #216]
  43632c:	ldr	x1, [x0, #16]
  436330:	ldr	x0, [sp, #216]
  436334:	ldr	x0, [x0, #24]
  436338:	mov	x2, x0
  43633c:	ldr	w0, [sp, #244]
  436340:	bl	435eec <wcrtomb@plt+0x311dc>
  436344:	str	x0, [sp, #224]
  436348:	ldr	w0, [sp, #244]
  43634c:	cmp	w0, #0x1
  436350:	b.eq	436360 <wcrtomb@plt+0x31650>  // b.none
  436354:	ldr	w0, [sp, #244]
  436358:	cmp	w0, #0x2
  43635c:	b.ne	43636c <wcrtomb@plt+0x3165c>  // b.any
  436360:	ldr	w0, [sp, #240]
  436364:	str	w0, [sp, #244]
  436368:	str	wzr, [sp, #240]
  43636c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436370:	add	x0, x0, #0xcd8
  436374:	str	x0, [sp, #88]
  436378:	ldr	x0, [sp, #216]
  43637c:	ldr	x0, [x0, #24]
  436380:	str	x0, [sp, #80]
  436384:	ldr	x0, [sp, #88]
  436388:	str	x0, [sp, #72]
  43638c:	ldr	x0, [sp, #72]
  436390:	ldr	x1, [x0, #32]
  436394:	ldr	x0, [sp, #72]
  436398:	ldr	x0, [x0, #24]
  43639c:	sub	x0, x1, x0
  4363a0:	mov	x1, x0
  4363a4:	ldr	x0, [sp, #80]
  4363a8:	cmp	x1, x0
  4363ac:	b.cs	4363bc <wcrtomb@plt+0x316ac>  // b.hs, b.nlast
  4363b0:	ldr	x1, [sp, #80]
  4363b4:	ldr	x0, [sp, #88]
  4363b8:	bl	45cdc0 <_obstack_newchunk@@Base>
  4363bc:	ldr	x0, [sp, #88]
  4363c0:	ldr	x0, [x0, #24]
  4363c4:	ldr	x2, [sp, #80]
  4363c8:	ldr	x1, [sp, #224]
  4363cc:	bl	404020 <memcpy@plt>
  4363d0:	ldr	x0, [sp, #88]
  4363d4:	ldr	x1, [x0, #24]
  4363d8:	ldr	x0, [sp, #80]
  4363dc:	add	x1, x1, x0
  4363e0:	ldr	x0, [sp, #88]
  4363e4:	str	x1, [x0, #24]
  4363e8:	b	4365b4 <wcrtomb@plt+0x318a4>
  4363ec:	ldr	x0, [sp, #216]
  4363f0:	ldr	x0, [x0, #16]
  4363f4:	lsl	x0, x0, #4
  4363f8:	ldr	x1, [sp, #208]
  4363fc:	add	x0, x1, x0
  436400:	ldr	x0, [x0]
  436404:	cmn	x0, #0x1
  436408:	b.eq	4365b0 <wcrtomb@plt+0x318a0>  // b.none
  43640c:	ldr	x0, [sp, #216]
  436410:	ldr	x0, [x0, #16]
  436414:	lsl	x0, x0, #4
  436418:	ldr	x1, [sp, #208]
  43641c:	add	x0, x1, x0
  436420:	ldr	x0, [x0, #8]
  436424:	cmn	x0, #0x1
  436428:	b.eq	4365b0 <wcrtomb@plt+0x318a0>  // b.none
  43642c:	ldr	x0, [sp, #216]
  436430:	ldr	x0, [x0, #16]
  436434:	lsl	x0, x0, #4
  436438:	ldr	x1, [sp, #208]
  43643c:	add	x0, x1, x0
  436440:	ldr	x1, [x0, #8]
  436444:	ldr	x0, [sp, #216]
  436448:	ldr	x0, [x0, #16]
  43644c:	lsl	x0, x0, #4
  436450:	ldr	x2, [sp, #208]
  436454:	add	x0, x2, x0
  436458:	ldr	x0, [x0]
  43645c:	sub	x0, x1, x0
  436460:	str	x0, [sp, #120]
  436464:	ldr	x0, [sp, #216]
  436468:	ldr	x0, [x0, #16]
  43646c:	lsl	x0, x0, #4
  436470:	ldr	x1, [sp, #208]
  436474:	add	x0, x1, x0
  436478:	ldr	x0, [x0]
  43647c:	mov	x1, x0
  436480:	ldr	x0, [sp, #16]
  436484:	add	x0, x0, x1
  436488:	str	x0, [sp, #224]
  43648c:	ldr	w0, [sp, #244]
  436490:	cmp	w0, #0x0
  436494:	b.eq	4364d0 <wcrtomb@plt+0x317c0>  // b.none
  436498:	ldr	x2, [sp, #120]
  43649c:	ldr	x1, [sp, #224]
  4364a0:	ldr	w0, [sp, #244]
  4364a4:	bl	435eec <wcrtomb@plt+0x311dc>
  4364a8:	str	x0, [sp, #224]
  4364ac:	ldr	w0, [sp, #244]
  4364b0:	cmp	w0, #0x1
  4364b4:	b.eq	4364c4 <wcrtomb@plt+0x317b4>  // b.none
  4364b8:	ldr	w0, [sp, #244]
  4364bc:	cmp	w0, #0x2
  4364c0:	b.ne	4364d0 <wcrtomb@plt+0x317c0>  // b.any
  4364c4:	ldr	w0, [sp, #240]
  4364c8:	str	w0, [sp, #244]
  4364cc:	str	wzr, [sp, #240]
  4364d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4364d4:	add	x0, x0, #0xcd8
  4364d8:	str	x0, [sp, #112]
  4364dc:	ldr	x0, [sp, #120]
  4364e0:	str	x0, [sp, #104]
  4364e4:	ldr	x0, [sp, #112]
  4364e8:	str	x0, [sp, #96]
  4364ec:	ldr	x0, [sp, #96]
  4364f0:	ldr	x1, [x0, #32]
  4364f4:	ldr	x0, [sp, #96]
  4364f8:	ldr	x0, [x0, #24]
  4364fc:	sub	x0, x1, x0
  436500:	mov	x1, x0
  436504:	ldr	x0, [sp, #104]
  436508:	cmp	x1, x0
  43650c:	b.cs	43651c <wcrtomb@plt+0x3180c>  // b.hs, b.nlast
  436510:	ldr	x1, [sp, #104]
  436514:	ldr	x0, [sp, #112]
  436518:	bl	45cdc0 <_obstack_newchunk@@Base>
  43651c:	ldr	x0, [sp, #112]
  436520:	ldr	x0, [x0, #24]
  436524:	ldr	x2, [sp, #104]
  436528:	ldr	x1, [sp, #224]
  43652c:	bl	404020 <memcpy@plt>
  436530:	ldr	x0, [sp, #112]
  436534:	ldr	x1, [x0, #24]
  436538:	ldr	x0, [sp, #104]
  43653c:	add	x1, x1, x0
  436540:	ldr	x0, [sp, #112]
  436544:	str	x1, [x0, #24]
  436548:	b	4365b0 <wcrtomb@plt+0x318a0>
  43654c:	ldr	x0, [sp, #216]
  436550:	ldr	w0, [x0, #16]
  436554:	cmp	w0, #0x4
  436558:	b.hi	4365b4 <wcrtomb@plt+0x318a4>  // b.pmore
  43655c:	cmp	w0, #0x3
  436560:	b.cs	4365a0 <wcrtomb@plt+0x31890>  // b.hs, b.nlast
  436564:	cmp	w0, #0x0
  436568:	b.eq	4365a0 <wcrtomb@plt+0x31890>  // b.none
  43656c:	sub	w0, w0, #0x1
  436570:	cmp	w0, #0x1
  436574:	b.hi	4365b4 <wcrtomb@plt+0x318a4>  // b.pmore
  436578:	ldr	w0, [sp, #240]
  43657c:	cmp	w0, #0x0
  436580:	b.eq	436594 <wcrtomb@plt+0x31884>  // b.none
  436584:	ldr	w0, [sp, #240]
  436588:	sub	w0, w0, #0x3
  43658c:	cmp	w0, #0x1
  436590:	b.hi	43659c <wcrtomb@plt+0x3188c>  // b.pmore
  436594:	ldr	w0, [sp, #244]
  436598:	str	w0, [sp, #240]
  43659c:	nop
  4365a0:	ldr	x0, [sp, #216]
  4365a4:	ldr	w0, [x0, #16]
  4365a8:	str	w0, [sp, #244]
  4365ac:	b	4365b4 <wcrtomb@plt+0x318a4>
  4365b0:	nop
  4365b4:	ldr	x0, [sp, #216]
  4365b8:	ldr	x0, [x0]
  4365bc:	str	x0, [sp, #216]
  4365c0:	ldr	x0, [sp, #216]
  4365c4:	cmp	x0, #0x0
  4365c8:	b.ne	4362e0 <wcrtomb@plt+0x315d0>  // b.any
  4365cc:	b	436654 <wcrtomb@plt+0x31944>
  4365d0:	ldr	x0, [sp, #16]
  4365d4:	bl	4040b0 <strlen@plt>
  4365d8:	str	x0, [sp, #232]
  4365dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4365e0:	add	x0, x0, #0xcd8
  4365e4:	str	x0, [sp, #192]
  4365e8:	ldr	x0, [sp, #232]
  4365ec:	str	x0, [sp, #184]
  4365f0:	ldr	x0, [sp, #192]
  4365f4:	str	x0, [sp, #176]
  4365f8:	ldr	x0, [sp, #176]
  4365fc:	ldr	x1, [x0, #32]
  436600:	ldr	x0, [sp, #176]
  436604:	ldr	x0, [x0, #24]
  436608:	sub	x0, x1, x0
  43660c:	mov	x1, x0
  436610:	ldr	x0, [sp, #184]
  436614:	cmp	x1, x0
  436618:	b.cs	436628 <wcrtomb@plt+0x31918>  // b.hs, b.nlast
  43661c:	ldr	x1, [sp, #184]
  436620:	ldr	x0, [sp, #192]
  436624:	bl	45cdc0 <_obstack_newchunk@@Base>
  436628:	ldr	x0, [sp, #192]
  43662c:	ldr	x0, [x0, #24]
  436630:	ldr	x2, [sp, #184]
  436634:	ldr	x1, [sp, #16]
  436638:	bl	404020 <memcpy@plt>
  43663c:	ldr	x0, [sp, #192]
  436640:	ldr	x1, [x0, #24]
  436644:	ldr	x0, [sp, #184]
  436648:	add	x1, x1, x0
  43664c:	ldr	x0, [sp, #192]
  436650:	str	x1, [x0, #24]
  436654:	ldr	x1, [sp, #16]
  436658:	ldr	x0, [sp, #232]
  43665c:	add	x0, x1, x0
  436660:	str	x0, [sp, #16]
  436664:	ldr	x0, [sp, #24]
  436668:	ldr	w0, [x0, #8]
  43666c:	cmp	w0, #0x0
  436670:	b.ne	4366f4 <wcrtomb@plt+0x319e4>  // b.any
  436674:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436678:	add	x0, x0, #0xcd8
  43667c:	str	x0, [sp, #64]
  436680:	ldr	x0, [sp, #16]
  436684:	bl	4040b0 <strlen@plt>
  436688:	str	x0, [sp, #56]
  43668c:	ldr	x0, [sp, #64]
  436690:	str	x0, [sp, #48]
  436694:	ldr	x0, [sp, #48]
  436698:	ldr	x1, [x0, #32]
  43669c:	ldr	x0, [sp, #48]
  4366a0:	ldr	x0, [x0, #24]
  4366a4:	sub	x0, x1, x0
  4366a8:	mov	x1, x0
  4366ac:	ldr	x0, [sp, #56]
  4366b0:	cmp	x1, x0
  4366b4:	b.cs	4366c4 <wcrtomb@plt+0x319b4>  // b.hs, b.nlast
  4366b8:	ldr	x1, [sp, #56]
  4366bc:	ldr	x0, [sp, #64]
  4366c0:	bl	45cdc0 <_obstack_newchunk@@Base>
  4366c4:	ldr	x0, [sp, #64]
  4366c8:	ldr	x0, [x0, #24]
  4366cc:	ldr	x2, [sp, #56]
  4366d0:	ldr	x1, [sp, #16]
  4366d4:	bl	404020 <memcpy@plt>
  4366d8:	ldr	x0, [sp, #64]
  4366dc:	ldr	x1, [x0, #24]
  4366e0:	ldr	x0, [sp, #56]
  4366e4:	add	x1, x1, x0
  4366e8:	ldr	x0, [sp, #64]
  4366ec:	str	x1, [x0, #24]
  4366f0:	b	436704 <wcrtomb@plt+0x319f4>
  4366f4:	ldr	x0, [sp, #16]
  4366f8:	ldrb	w0, [x0]
  4366fc:	cmp	w0, #0x0
  436700:	b.ne	43613c <wcrtomb@plt+0x3142c>  // b.any
  436704:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436708:	add	x0, x0, #0xcd8
  43670c:	str	x0, [sp, #40]
  436710:	ldr	x0, [sp, #40]
  436714:	str	x0, [sp, #32]
  436718:	ldr	x0, [sp, #32]
  43671c:	ldr	x1, [x0, #32]
  436720:	ldr	x0, [sp, #32]
  436724:	ldr	x0, [x0, #24]
  436728:	sub	x0, x1, x0
  43672c:	cmp	x0, #0x0
  436730:	b.ne	436740 <wcrtomb@plt+0x31a30>  // b.any
  436734:	mov	x1, #0x1                   	// #1
  436738:	ldr	x0, [sp, #40]
  43673c:	bl	45cdc0 <_obstack_newchunk@@Base>
  436740:	ldr	x0, [sp, #40]
  436744:	ldr	x0, [x0, #24]
  436748:	add	x2, x0, #0x1
  43674c:	ldr	x1, [sp, #40]
  436750:	str	x2, [x1, #24]
  436754:	strb	wzr, [x0]
  436758:	ldr	x0, [sp, #208]
  43675c:	bl	404880 <free@plt>
  436760:	nop
  436764:	ldp	x29, x30, [sp], #256
  436768:	ret
  43676c:	stp	x29, x30, [sp, #-80]!
  436770:	mov	x29, sp
  436774:	str	w0, [sp, #44]
  436778:	str	x1, [sp, #32]
  43677c:	str	x2, [sp, #24]
  436780:	strb	wzr, [sp, #71]
  436784:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436788:	add	x0, x0, #0xd30
  43678c:	ldrb	w0, [x0]
  436790:	eor	w0, w0, #0x1
  436794:	and	w0, w0, #0xff
  436798:	cmp	w0, #0x0
  43679c:	b.eq	4367d4 <wcrtomb@plt+0x31ac4>  // b.none
  4367a0:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  4367a4:	add	x4, x0, #0x880
  4367a8:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  4367ac:	add	x3, x0, #0x6a4
  4367b0:	mov	x2, #0x0                   	// #0
  4367b4:	mov	x1, #0x0                   	// #0
  4367b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4367bc:	add	x0, x0, #0xcd8
  4367c0:	bl	45ccf8 <_obstack_begin@@Base>
  4367c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4367c8:	add	x0, x0, #0xd30
  4367cc:	mov	w1, #0x1                   	// #1
  4367d0:	strb	w1, [x0]
  4367d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4367d8:	add	x0, x0, #0xcc0
  4367dc:	ldr	x0, [x0]
  4367e0:	str	x0, [sp, #72]
  4367e4:	b	4368ec <wcrtomb@plt+0x31bdc>
  4367e8:	ldr	x0, [sp, #72]
  4367ec:	ldr	w1, [x0, #12]
  4367f0:	ldr	w0, [sp, #44]
  4367f4:	and	w0, w1, w0
  4367f8:	cmp	w0, #0x0
  4367fc:	b.eq	4368e0 <wcrtomb@plt+0x31bd0>  // b.none
  436800:	ldr	x1, [sp, #32]
  436804:	ldr	x0, [sp, #72]
  436808:	bl	436104 <wcrtomb@plt+0x313f4>
  43680c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436810:	add	x0, x0, #0xcd8
  436814:	str	x0, [sp, #56]
  436818:	ldr	x0, [sp, #56]
  43681c:	ldr	x0, [x0, #16]
  436820:	str	x0, [sp, #48]
  436824:	ldr	x0, [sp, #56]
  436828:	ldr	x0, [x0, #24]
  43682c:	ldr	x1, [sp, #48]
  436830:	cmp	x1, x0
  436834:	b.ne	436848 <wcrtomb@plt+0x31b38>  // b.any
  436838:	ldr	x0, [sp, #56]
  43683c:	ldrb	w1, [x0, #80]
  436840:	orr	w1, w1, #0x2
  436844:	strb	w1, [x0, #80]
  436848:	ldr	x0, [sp, #56]
  43684c:	ldr	x0, [x0, #24]
  436850:	mov	x1, x0
  436854:	ldr	x0, [sp, #56]
  436858:	ldr	x0, [x0, #48]
  43685c:	add	x1, x1, x0
  436860:	ldr	x0, [sp, #56]
  436864:	ldr	x0, [x0, #48]
  436868:	mvn	x0, x0
  43686c:	and	x0, x1, x0
  436870:	mov	x1, x0
  436874:	ldr	x0, [sp, #56]
  436878:	str	x1, [x0, #24]
  43687c:	ldr	x0, [sp, #56]
  436880:	ldr	x1, [x0, #24]
  436884:	ldr	x0, [sp, #56]
  436888:	ldr	x0, [x0, #8]
  43688c:	sub	x0, x1, x0
  436890:	mov	x2, x0
  436894:	ldr	x0, [sp, #56]
  436898:	ldr	x1, [x0, #32]
  43689c:	ldr	x0, [sp, #56]
  4368a0:	ldr	x0, [x0, #8]
  4368a4:	sub	x0, x1, x0
  4368a8:	cmp	x2, x0
  4368ac:	b.ls	4368c0 <wcrtomb@plt+0x31bb0>  // b.plast
  4368b0:	ldr	x0, [sp, #56]
  4368b4:	ldr	x1, [x0, #32]
  4368b8:	ldr	x0, [sp, #56]
  4368bc:	str	x1, [x0, #24]
  4368c0:	ldr	x0, [sp, #56]
  4368c4:	ldr	x1, [x0, #24]
  4368c8:	ldr	x0, [sp, #56]
  4368cc:	str	x1, [x0, #16]
  4368d0:	ldr	x0, [sp, #48]
  4368d4:	str	x0, [sp, #32]
  4368d8:	mov	w0, #0x1                   	// #1
  4368dc:	strb	w0, [sp, #71]
  4368e0:	ldr	x0, [sp, #72]
  4368e4:	ldr	x0, [x0]
  4368e8:	str	x0, [sp, #72]
  4368ec:	ldr	x0, [sp, #72]
  4368f0:	cmp	x0, #0x0
  4368f4:	b.ne	4367e8 <wcrtomb@plt+0x31ad8>  // b.any
  4368f8:	ldr	x0, [sp, #24]
  4368fc:	ldr	x1, [sp, #32]
  436900:	str	x1, [x0]
  436904:	ldrb	w0, [sp, #71]
  436908:	ldp	x29, x30, [sp], #80
  43690c:	ret
  436910:	stp	x29, x30, [sp, #-80]!
  436914:	mov	x29, sp
  436918:	str	x0, [sp, #40]
  43691c:	str	w1, [sp, #36]
  436920:	str	x2, [sp, #24]
  436924:	str	x3, [sp, #16]
  436928:	ldr	x0, [sp, #40]
  43692c:	ldr	x0, [x0]
  436930:	add	x1, sp, #0x30
  436934:	mov	x2, x1
  436938:	mov	x1, x0
  43693c:	ldr	w0, [sp, #36]
  436940:	bl	43676c <wcrtomb@plt+0x31a5c>
  436944:	strb	w0, [sp, #79]
  436948:	ldrb	w0, [sp, #79]
  43694c:	cmp	w0, #0x0
  436950:	b.eq	4369f0 <wcrtomb@plt+0x31ce0>  // b.none
  436954:	ldr	x0, [sp, #24]
  436958:	cmp	x0, #0x0
  43695c:	b.eq	436974 <wcrtomb@plt+0x31c64>  // b.none
  436960:	ldr	x0, [sp, #48]
  436964:	ldr	x2, [sp, #24]
  436968:	ldr	x1, [sp, #16]
  43696c:	blr	x2
  436970:	b	436978 <wcrtomb@plt+0x31c68>
  436974:	ldr	x0, [sp, #48]
  436978:	mov	x1, x0
  43697c:	ldr	x0, [sp, #40]
  436980:	bl	423d0c <wcrtomb@plt+0x1effc>
  436984:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436988:	add	x0, x0, #0xcd8
  43698c:	str	x0, [sp, #64]
  436990:	ldr	x0, [sp, #48]
  436994:	str	x0, [sp, #56]
  436998:	ldr	x0, [sp, #64]
  43699c:	ldr	x0, [x0, #8]
  4369a0:	ldr	x1, [sp, #56]
  4369a4:	cmp	x1, x0
  4369a8:	b.ls	4369e0 <wcrtomb@plt+0x31cd0>  // b.plast
  4369ac:	ldr	x0, [sp, #64]
  4369b0:	ldr	x0, [x0, #32]
  4369b4:	ldr	x1, [sp, #56]
  4369b8:	cmp	x1, x0
  4369bc:	b.cs	4369e0 <wcrtomb@plt+0x31cd0>  // b.hs, b.nlast
  4369c0:	ldr	x0, [sp, #64]
  4369c4:	ldr	x1, [sp, #56]
  4369c8:	str	x1, [x0, #16]
  4369cc:	ldr	x0, [sp, #64]
  4369d0:	ldr	x1, [x0, #16]
  4369d4:	ldr	x0, [sp, #64]
  4369d8:	str	x1, [x0, #24]
  4369dc:	b	436a30 <wcrtomb@plt+0x31d20>
  4369e0:	ldr	x1, [sp, #56]
  4369e4:	ldr	x0, [sp, #64]
  4369e8:	bl	45d05c <_obstack_free@@Base>
  4369ec:	b	436a30 <wcrtomb@plt+0x31d20>
  4369f0:	ldr	x0, [sp, #24]
  4369f4:	cmp	x0, #0x0
  4369f8:	b.eq	436a30 <wcrtomb@plt+0x31d20>  // b.none
  4369fc:	ldr	x0, [sp, #40]
  436a00:	str	xzr, [x0]
  436a04:	ldr	x0, [sp, #48]
  436a08:	ldr	x2, [sp, #24]
  436a0c:	ldr	x1, [sp, #16]
  436a10:	blr	x2
  436a14:	mov	x1, x0
  436a18:	ldr	x0, [sp, #40]
  436a1c:	bl	423d0c <wcrtomb@plt+0x1effc>
  436a20:	ldr	x0, [sp, #48]
  436a24:	bl	404880 <free@plt>
  436a28:	mov	w0, #0x1                   	// #1
  436a2c:	strb	w0, [sp, #79]
  436a30:	ldrb	w0, [sp, #79]
  436a34:	ldp	x29, x30, [sp], #80
  436a38:	ret
  436a3c:	stp	x29, x30, [sp, #-32]!
  436a40:	mov	x29, sp
  436a44:	str	x0, [sp, #24]
  436a48:	str	w1, [sp, #20]
  436a4c:	mov	x3, #0x0                   	// #0
  436a50:	mov	x2, #0x0                   	// #0
  436a54:	ldr	w1, [sp, #20]
  436a58:	ldr	x0, [sp, #24]
  436a5c:	bl	436910 <wcrtomb@plt+0x31c00>
  436a60:	and	w0, w0, #0xff
  436a64:	ldp	x29, x30, [sp], #32
  436a68:	ret
  436a6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436a70:	add	x0, x0, #0xcc0
  436a74:	ldr	x0, [x0]
  436a78:	cmp	x0, #0x0
  436a7c:	cset	w0, ne  // ne = any
  436a80:	and	w0, w0, #0xff
  436a84:	ret
  436a88:	stp	x29, x30, [sp, #-32]!
  436a8c:	mov	x29, sp
  436a90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436a94:	add	x0, x0, #0xd58
  436a98:	ldr	x0, [x0]
  436a9c:	cmp	x0, #0x0
  436aa0:	b.eq	436ad4 <wcrtomb@plt+0x31dc4>  // b.none
  436aa4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436aa8:	add	x0, x0, #0xd58
  436aac:	ldr	x0, [x0]
  436ab0:	str	x0, [sp, #24]
  436ab4:	ldr	x0, [sp, #24]
  436ab8:	ldr	x1, [x0]
  436abc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436ac0:	add	x0, x0, #0xd58
  436ac4:	str	x1, [x0]
  436ac8:	ldr	x0, [sp, #24]
  436acc:	str	xzr, [x0]
  436ad0:	b	436ae0 <wcrtomb@plt+0x31dd0>
  436ad4:	mov	x0, #0x28                  	// #40
  436ad8:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  436adc:	str	x0, [sp, #24]
  436ae0:	ldr	x0, [sp, #24]
  436ae4:	ldp	x29, x30, [sp], #32
  436ae8:	ret
  436aec:	sub	sp, sp, #0x10
  436af0:	str	x0, [sp, #8]
  436af4:	str	x1, [sp]
  436af8:	ldr	x0, [sp, #8]
  436afc:	cmp	x0, #0x0
  436b00:	b.eq	436b24 <wcrtomb@plt+0x31e14>  // b.none
  436b04:	ldr	x0, [sp, #8]
  436b08:	ldr	x1, [x0]
  436b0c:	ldr	x0, [sp]
  436b10:	str	x1, [x0]
  436b14:	ldr	x0, [sp, #8]
  436b18:	ldr	x1, [sp]
  436b1c:	str	x1, [x0]
  436b20:	b	436b48 <wcrtomb@plt+0x31e38>
  436b24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436b28:	add	x0, x0, #0xd40
  436b2c:	ldr	x1, [x0]
  436b30:	ldr	x0, [sp]
  436b34:	str	x1, [x0]
  436b38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436b3c:	add	x0, x0, #0xd40
  436b40:	ldr	x1, [sp]
  436b44:	str	x1, [x0]
  436b48:	ldr	x0, [sp]
  436b4c:	ldr	x0, [x0]
  436b50:	cmp	x0, #0x0
  436b54:	b.ne	436b68 <wcrtomb@plt+0x31e58>  // b.any
  436b58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436b5c:	add	x0, x0, #0xd48
  436b60:	ldr	x1, [sp]
  436b64:	str	x1, [x0]
  436b68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436b6c:	add	x0, x0, #0xd50
  436b70:	ldr	x0, [x0]
  436b74:	add	x1, x0, #0x1
  436b78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436b7c:	add	x0, x0, #0xd50
  436b80:	str	x1, [x0]
  436b84:	nop
  436b88:	add	sp, sp, #0x10
  436b8c:	ret
  436b90:	stp	x29, x30, [sp, #-32]!
  436b94:	mov	x29, sp
  436b98:	str	x0, [sp, #24]
  436b9c:	ldr	x0, [sp, #24]
  436ba0:	ldr	x0, [x0, #16]
  436ba4:	bl	404880 <free@plt>
  436ba8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436bac:	add	x0, x0, #0xd58
  436bb0:	ldr	x1, [x0]
  436bb4:	ldr	x0, [sp, #24]
  436bb8:	str	x1, [x0]
  436bbc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436bc0:	add	x0, x0, #0xd58
  436bc4:	ldr	x1, [sp, #24]
  436bc8:	str	x1, [x0]
  436bcc:	nop
  436bd0:	ldp	x29, x30, [sp], #32
  436bd4:	ret
  436bd8:	stp	x29, x30, [sp, #-96]!
  436bdc:	mov	x29, sp
  436be0:	strb	w0, [sp, #31]
  436be4:	str	xzr, [sp, #80]
  436be8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  436bec:	add	x0, x0, #0x30
  436bf0:	ldr	w0, [x0]
  436bf4:	str	w0, [sp, #68]
  436bf8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436bfc:	add	x0, x0, #0xd40
  436c00:	ldr	x0, [x0]
  436c04:	str	x0, [sp, #88]
  436c08:	b	436e10 <wcrtomb@plt+0x32100>
  436c0c:	ldr	x0, [sp, #88]
  436c10:	ldr	x0, [x0]
  436c14:	str	x0, [sp, #48]
  436c18:	ldrb	w0, [sp, #31]
  436c1c:	cmp	w0, #0x0
  436c20:	b.ne	436c54 <wcrtomb@plt+0x31f44>  // b.any
  436c24:	ldr	x0, [sp, #88]
  436c28:	ldr	x0, [x0, #32]
  436c2c:	mov	x1, x0
  436c30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436c34:	add	x0, x0, #0xd60
  436c38:	ldr	x0, [x0]
  436c3c:	add	x0, x1, x0
  436c40:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436c44:	add	x1, x1, #0xfa0
  436c48:	ldr	x1, [x1]
  436c4c:	cmp	x0, x1
  436c50:	b.cs	436e00 <wcrtomb@plt+0x320f0>  // b.hs, b.nlast
  436c54:	ldr	x0, [sp, #88]
  436c58:	ldr	w0, [x0, #8]
  436c5c:	bl	425b98 <wcrtomb@plt+0x20e88>
  436c60:	ldr	x0, [sp, #88]
  436c64:	ldrb	w0, [x0, #24]
  436c68:	cmp	w0, #0x0
  436c6c:	b.eq	436d4c <wcrtomb@plt+0x3203c>  // b.none
  436c70:	ldr	x0, [sp, #88]
  436c74:	ldr	w0, [x0, #8]
  436c78:	cmp	w0, #0x0
  436c7c:	b.eq	436cd8 <wcrtomb@plt+0x31fc8>  // b.none
  436c80:	ldr	x0, [sp, #88]
  436c84:	ldrb	w0, [x0, #24]
  436c88:	cmp	w0, #0x0
  436c8c:	b.eq	436cd8 <wcrtomb@plt+0x31fc8>  // b.none
  436c90:	ldr	x0, [sp, #88]
  436c94:	ldr	x0, [x0, #16]
  436c98:	ldrb	w0, [x0]
  436c9c:	cmp	w0, #0x0
  436ca0:	b.eq	436cc4 <wcrtomb@plt+0x31fb4>  // b.none
  436ca4:	ldr	x0, [sp, #88]
  436ca8:	ldr	x2, [x0, #16]
  436cac:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  436cb0:	add	x1, x0, #0xeb8
  436cb4:	mov	x0, x2
  436cb8:	bl	4047c0 <strcmp@plt>
  436cbc:	cmp	w0, #0x0
  436cc0:	b.ne	436cd8 <wcrtomb@plt+0x31fc8>  // b.any
  436cc4:	ldr	x0, [sp, #88]
  436cc8:	str	x0, [sp, #80]
  436ccc:	ldr	x0, [sp, #48]
  436cd0:	str	x0, [sp, #88]
  436cd4:	b	436e10 <wcrtomb@plt+0x32100>
  436cd8:	ldr	x0, [sp, #88]
  436cdc:	ldr	x0, [x0, #16]
  436ce0:	str	x0, [sp, #40]
  436ce4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  436ce8:	add	x0, x0, #0x8b0
  436cec:	ldr	w0, [x0]
  436cf0:	mov	w2, #0x200                 	// #512
  436cf4:	ldr	x1, [sp, #40]
  436cf8:	bl	404240 <unlinkat@plt>
  436cfc:	cmp	w0, #0x0
  436d00:	b.eq	436d98 <wcrtomb@plt+0x32088>  // b.none
  436d04:	bl	404bc0 <__errno_location@plt>
  436d08:	ldr	w0, [x0]
  436d0c:	cmp	w0, #0x27
  436d10:	b.eq	436d2c <wcrtomb@plt+0x3201c>  // b.none
  436d14:	cmp	w0, #0x27
  436d18:	b.gt	436d40 <wcrtomb@plt+0x32030>
  436d1c:	cmp	w0, #0x2
  436d20:	b.eq	436da0 <wcrtomb@plt+0x32090>  // b.none
  436d24:	cmp	w0, #0x11
  436d28:	b.ne	436d40 <wcrtomb@plt+0x32030>  // b.any
  436d2c:	ldr	x0, [sp, #88]
  436d30:	str	x0, [sp, #80]
  436d34:	ldr	x0, [sp, #48]
  436d38:	str	x0, [sp, #88]
  436d3c:	b	436e10 <wcrtomb@plt+0x32100>
  436d40:	ldr	x0, [sp, #40]
  436d44:	bl	43a914 <wcrtomb@plt+0x35c04>
  436d48:	b	436da4 <wcrtomb@plt+0x32094>
  436d4c:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  436d50:	add	x0, x0, #0x8b0
  436d54:	ldr	w3, [x0]
  436d58:	ldr	x0, [sp, #88]
  436d5c:	ldr	x0, [x0, #16]
  436d60:	mov	w2, #0x0                   	// #0
  436d64:	mov	x1, x0
  436d68:	mov	w0, w3
  436d6c:	bl	404240 <unlinkat@plt>
  436d70:	cmp	w0, #0x0
  436d74:	b.eq	436da4 <wcrtomb@plt+0x32094>  // b.none
  436d78:	bl	404bc0 <__errno_location@plt>
  436d7c:	ldr	w0, [x0]
  436d80:	cmp	w0, #0x2
  436d84:	b.eq	436da4 <wcrtomb@plt+0x32094>  // b.none
  436d88:	ldr	x0, [sp, #88]
  436d8c:	ldr	x0, [x0, #16]
  436d90:	bl	43ac74 <wcrtomb@plt+0x35f64>
  436d94:	b	436da4 <wcrtomb@plt+0x32094>
  436d98:	nop
  436d9c:	b	436da4 <wcrtomb@plt+0x32094>
  436da0:	nop
  436da4:	ldr	x0, [sp, #88]
  436da8:	bl	436b90 <wcrtomb@plt+0x31e80>
  436dac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436db0:	add	x0, x0, #0xd50
  436db4:	ldr	x0, [x0]
  436db8:	sub	x1, x0, #0x1
  436dbc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436dc0:	add	x0, x0, #0xd50
  436dc4:	str	x1, [x0]
  436dc8:	ldr	x0, [sp, #48]
  436dcc:	str	x0, [sp, #88]
  436dd0:	ldr	x0, [sp, #80]
  436dd4:	cmp	x0, #0x0
  436dd8:	b.eq	436dec <wcrtomb@plt+0x320dc>  // b.none
  436ddc:	ldr	x0, [sp, #80]
  436de0:	ldr	x1, [sp, #88]
  436de4:	str	x1, [x0]
  436de8:	b	436e10 <wcrtomb@plt+0x32100>
  436dec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436df0:	add	x0, x0, #0xd40
  436df4:	ldr	x1, [sp, #88]
  436df8:	str	x1, [x0]
  436dfc:	b	436e10 <wcrtomb@plt+0x32100>
  436e00:	ldr	x0, [sp, #88]
  436e04:	str	x0, [sp, #80]
  436e08:	ldr	x0, [sp, #48]
  436e0c:	str	x0, [sp, #88]
  436e10:	ldr	x0, [sp, #88]
  436e14:	cmp	x0, #0x0
  436e18:	b.ne	436c0c <wcrtomb@plt+0x31efc>  // b.any
  436e1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436e20:	add	x0, x0, #0xd40
  436e24:	ldr	x0, [x0]
  436e28:	cmp	x0, #0x0
  436e2c:	b.ne	436e40 <wcrtomb@plt+0x32130>  // b.any
  436e30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436e34:	add	x0, x0, #0xd48
  436e38:	str	xzr, [x0]
  436e3c:	b	436f88 <wcrtomb@plt+0x32278>
  436e40:	ldrb	w0, [sp, #31]
  436e44:	cmp	w0, #0x0
  436e48:	b.eq	436f88 <wcrtomb@plt+0x32278>  // b.none
  436e4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436e50:	add	x0, x0, #0xd40
  436e54:	ldr	x0, [x0]
  436e58:	str	x0, [sp, #88]
  436e5c:	b	436f58 <wcrtomb@plt+0x32248>
  436e60:	ldr	x0, [sp, #88]
  436e64:	ldr	x0, [x0]
  436e68:	str	x0, [sp, #56]
  436e6c:	ldr	x0, [sp, #88]
  436e70:	ldr	w0, [x0, #8]
  436e74:	bl	425b98 <wcrtomb@plt+0x20e88>
  436e78:	ldr	x0, [sp, #88]
  436e7c:	ldr	w0, [x0, #8]
  436e80:	cmp	w0, #0x0
  436e84:	b.eq	436ee8 <wcrtomb@plt+0x321d8>  // b.none
  436e88:	ldr	x0, [sp, #88]
  436e8c:	ldrb	w0, [x0, #24]
  436e90:	cmp	w0, #0x0
  436e94:	b.eq	436ee8 <wcrtomb@plt+0x321d8>  // b.none
  436e98:	ldr	x0, [sp, #88]
  436e9c:	ldr	x0, [x0, #16]
  436ea0:	ldrb	w0, [x0]
  436ea4:	cmp	w0, #0x0
  436ea8:	b.eq	436ecc <wcrtomb@plt+0x321bc>  // b.none
  436eac:	ldr	x0, [sp, #88]
  436eb0:	ldr	x2, [x0, #16]
  436eb4:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  436eb8:	add	x1, x0, #0xeb8
  436ebc:	mov	x0, x2
  436ec0:	bl	4047c0 <strcmp@plt>
  436ec4:	cmp	w0, #0x0
  436ec8:	b.ne	436ee8 <wcrtomb@plt+0x321d8>  // b.any
  436ecc:	bl	425dec <wcrtomb@plt+0x210dc>
  436ed0:	str	x0, [sp, #72]
  436ed4:	ldr	x0, [sp, #88]
  436ed8:	ldr	w0, [x0, #8]
  436edc:	sub	w0, w0, #0x1
  436ee0:	bl	425b98 <wcrtomb@plt+0x20e88>
  436ee4:	b	436ef4 <wcrtomb@plt+0x321e4>
  436ee8:	ldr	x0, [sp, #88]
  436eec:	ldr	x0, [x0, #16]
  436ef0:	str	x0, [sp, #72]
  436ef4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  436ef8:	add	x0, x0, #0x8b0
  436efc:	ldr	w0, [x0]
  436f00:	mov	w2, #0x200                 	// #512
  436f04:	ldr	x1, [sp, #72]
  436f08:	bl	404240 <unlinkat@plt>
  436f0c:	cmp	w0, #0x0
  436f10:	b.eq	436f2c <wcrtomb@plt+0x3221c>  // b.none
  436f14:	bl	404bc0 <__errno_location@plt>
  436f18:	ldr	w0, [x0]
  436f1c:	cmp	w0, #0x2
  436f20:	b.eq	436f2c <wcrtomb@plt+0x3221c>  // b.none
  436f24:	ldr	x0, [sp, #72]
  436f28:	bl	43a914 <wcrtomb@plt+0x35c04>
  436f2c:	ldr	x0, [sp, #88]
  436f30:	bl	436b90 <wcrtomb@plt+0x31e80>
  436f34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436f38:	add	x0, x0, #0xd50
  436f3c:	ldr	x0, [x0]
  436f40:	sub	x1, x0, #0x1
  436f44:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436f48:	add	x0, x0, #0xd50
  436f4c:	str	x1, [x0]
  436f50:	ldr	x0, [sp, #56]
  436f54:	str	x0, [sp, #88]
  436f58:	ldr	x0, [sp, #88]
  436f5c:	cmp	x0, #0x0
  436f60:	b.ne	436e60 <wcrtomb@plt+0x32150>  // b.any
  436f64:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436f68:	add	x0, x0, #0xd48
  436f6c:	str	xzr, [x0]
  436f70:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436f74:	add	x0, x0, #0xd48
  436f78:	ldr	x1, [x0]
  436f7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436f80:	add	x0, x0, #0xd40
  436f84:	str	x1, [x0]
  436f88:	ldr	w0, [sp, #68]
  436f8c:	bl	425b98 <wcrtomb@plt+0x20e88>
  436f90:	nop
  436f94:	ldp	x29, x30, [sp], #96
  436f98:	ret
  436f9c:	stp	x29, x30, [sp, #-32]!
  436fa0:	mov	x29, sp
  436fa4:	mov	w0, #0x1                   	// #1
  436fa8:	bl	436bd8 <wcrtomb@plt+0x31ec8>
  436fac:	b	436fe4 <wcrtomb@plt+0x322d4>
  436fb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436fb4:	add	x0, x0, #0xd58
  436fb8:	ldr	x0, [x0]
  436fbc:	ldr	x0, [x0]
  436fc0:	str	x0, [sp, #24]
  436fc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436fc8:	add	x0, x0, #0xd58
  436fcc:	ldr	x0, [x0]
  436fd0:	bl	404880 <free@plt>
  436fd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436fd8:	add	x0, x0, #0xd58
  436fdc:	ldr	x1, [sp, #24]
  436fe0:	str	x1, [x0]
  436fe4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  436fe8:	add	x0, x0, #0xd58
  436fec:	ldr	x0, [x0]
  436ff0:	cmp	x0, #0x0
  436ff4:	b.ne	436fb0 <wcrtomb@plt+0x322a0>  // b.any
  436ff8:	nop
  436ffc:	nop
  437000:	ldp	x29, x30, [sp], #32
  437004:	ret
  437008:	stp	x29, x30, [sp, #-64]!
  43700c:	mov	x29, sp
  437010:	str	x0, [sp, #24]
  437014:	strb	w1, [sp, #23]
  437018:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43701c:	add	x0, x0, #0xd40
  437020:	ldr	x0, [x0]
  437024:	cmp	x0, #0x0
  437028:	b.eq	43706c <wcrtomb@plt+0x3235c>  // b.none
  43702c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437030:	add	x0, x0, #0xd40
  437034:	ldr	x0, [x0]
  437038:	ldr	x0, [x0, #32]
  43703c:	mov	x1, x0
  437040:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437044:	add	x0, x0, #0xd60
  437048:	ldr	x0, [x0]
  43704c:	add	x0, x1, x0
  437050:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437054:	add	x1, x1, #0xfa0
  437058:	ldr	x1, [x1]
  43705c:	cmp	x0, x1
  437060:	b.cs	43706c <wcrtomb@plt+0x3235c>  // b.hs, b.nlast
  437064:	mov	w0, #0x0                   	// #0
  437068:	bl	436bd8 <wcrtomb@plt+0x31ec8>
  43706c:	bl	436a88 <wcrtomb@plt+0x31d78>
  437070:	str	x0, [sp, #40]
  437074:	ldr	x0, [sp, #40]
  437078:	str	xzr, [x0]
  43707c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437080:	add	x0, x0, #0x30
  437084:	ldr	w1, [x0]
  437088:	ldr	x0, [sp, #40]
  43708c:	str	w1, [x0, #8]
  437090:	ldr	x0, [sp, #24]
  437094:	bl	45b858 <argp_usage@@Base+0x1276c>
  437098:	mov	x1, x0
  43709c:	ldr	x0, [sp, #40]
  4370a0:	str	x1, [x0, #16]
  4370a4:	ldr	x0, [sp, #40]
  4370a8:	ldr	x0, [x0, #16]
  4370ac:	bl	424258 <wcrtomb@plt+0x1f548>
  4370b0:	ldr	x0, [sp, #40]
  4370b4:	ldrb	w1, [sp, #23]
  4370b8:	strb	w1, [x0, #24]
  4370bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4370c0:	add	x0, x0, #0xfa0
  4370c4:	ldr	x1, [x0]
  4370c8:	ldr	x0, [sp, #40]
  4370cc:	str	x1, [x0, #32]
  4370d0:	ldr	x0, [sp, #40]
  4370d4:	ldrb	w0, [x0, #24]
  4370d8:	cmp	w0, #0x0
  4370dc:	b.eq	4371e4 <wcrtomb@plt+0x324d4>  // b.none
  4370e0:	ldr	x0, [sp, #40]
  4370e4:	ldr	x0, [x0, #16]
  4370e8:	ldrb	w0, [x0]
  4370ec:	cmp	w0, #0x0
  4370f0:	b.eq	437114 <wcrtomb@plt+0x32404>  // b.none
  4370f4:	ldr	x0, [sp, #40]
  4370f8:	ldr	x2, [x0, #16]
  4370fc:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  437100:	add	x1, x0, #0xeb8
  437104:	mov	x0, x2
  437108:	bl	4047c0 <strcmp@plt>
  43710c:	cmp	w0, #0x0
  437110:	b.ne	4371e4 <wcrtomb@plt+0x324d4>  // b.any
  437114:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437118:	add	x0, x0, #0xd40
  43711c:	ldr	x0, [x0]
  437120:	str	x0, [sp, #56]
  437124:	str	xzr, [sp, #48]
  437128:	b	43719c <wcrtomb@plt+0x3248c>
  43712c:	ldr	x0, [sp, #56]
  437130:	ldrb	w0, [x0, #24]
  437134:	cmp	w0, #0x0
  437138:	b.eq	437188 <wcrtomb@plt+0x32478>  // b.none
  43713c:	ldr	x0, [sp, #56]
  437140:	ldr	x0, [x0, #16]
  437144:	ldrb	w0, [x0]
  437148:	cmp	w0, #0x0
  43714c:	b.eq	437170 <wcrtomb@plt+0x32460>  // b.none
  437150:	ldr	x0, [sp, #56]
  437154:	ldr	x2, [x0, #16]
  437158:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43715c:	add	x1, x0, #0xeb8
  437160:	mov	x0, x2
  437164:	bl	4047c0 <strcmp@plt>
  437168:	cmp	w0, #0x0
  43716c:	b.ne	437188 <wcrtomb@plt+0x32478>  // b.any
  437170:	ldr	x0, [sp, #56]
  437174:	ldr	w1, [x0, #8]
  437178:	ldr	x0, [sp, #40]
  43717c:	ldr	w0, [x0, #8]
  437180:	cmp	w1, w0
  437184:	b.lt	4371ac <wcrtomb@plt+0x3249c>  // b.tstop
  437188:	ldr	x0, [sp, #56]
  43718c:	str	x0, [sp, #48]
  437190:	ldr	x0, [sp, #56]
  437194:	ldr	x0, [x0]
  437198:	str	x0, [sp, #56]
  43719c:	ldr	x0, [sp, #56]
  4371a0:	cmp	x0, #0x0
  4371a4:	b.ne	43712c <wcrtomb@plt+0x3241c>  // b.any
  4371a8:	b	4371b0 <wcrtomb@plt+0x324a0>
  4371ac:	nop
  4371b0:	ldr	x0, [sp, #56]
  4371b4:	cmp	x0, #0x0
  4371b8:	b.eq	4371cc <wcrtomb@plt+0x324bc>  // b.none
  4371bc:	ldr	x1, [sp, #40]
  4371c0:	ldr	x0, [sp, #48]
  4371c4:	bl	436aec <wcrtomb@plt+0x31ddc>
  4371c8:	b	4371fc <wcrtomb@plt+0x324ec>
  4371cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4371d0:	add	x0, x0, #0xd48
  4371d4:	ldr	x0, [x0]
  4371d8:	ldr	x1, [sp, #40]
  4371dc:	bl	436aec <wcrtomb@plt+0x31ddc>
  4371e0:	b	4371fc <wcrtomb@plt+0x324ec>
  4371e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4371e8:	add	x0, x0, #0xd48
  4371ec:	ldr	x0, [x0]
  4371f0:	ldr	x1, [sp, #40]
  4371f4:	bl	436aec <wcrtomb@plt+0x31ddc>
  4371f8:	nop
  4371fc:	nop
  437200:	ldp	x29, x30, [sp], #64
  437204:	ret
  437208:	stp	x29, x30, [sp, #-240]!
  43720c:	mov	x29, sp
  437210:	stp	x19, x20, [sp, #16]
  437214:	str	x0, [sp, #40]
  437218:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  43721c:	add	x0, x0, #0x8b0
  437220:	ldr	w0, [x0]
  437224:	mov	w2, #0x0                   	// #0
  437228:	ldr	x1, [sp, #40]
  43722c:	bl	404b90 <openat@plt>
  437230:	str	w0, [sp, #220]
  437234:	ldr	w0, [sp, #220]
  437238:	cmp	w0, #0x0
  43723c:	b.ge	43724c <wcrtomb@plt+0x3253c>  // b.tcont
  437240:	ldr	x0, [sp, #40]
  437244:	bl	43a618 <wcrtomb@plt+0x35908>
  437248:	b	4373f8 <wcrtomb@plt+0x326e8>
  43724c:	add	x0, sp, #0x48
  437250:	mov	x1, x0
  437254:	ldr	w0, [sp, #220]
  437258:	bl	47ec70 <_obstack_memory_used@@Base+0x21b30>
  43725c:	cmp	w0, #0x0
  437260:	b.eq	437270 <wcrtomb@plt+0x32560>  // b.none
  437264:	ldr	x0, [sp, #40]
  437268:	bl	43abd4 <wcrtomb@plt+0x35ec4>
  43726c:	b	4373e0 <wcrtomb@plt+0x326d0>
  437270:	ldr	x0, [sp, #120]
  437274:	str	x0, [sp, #232]
  437278:	b	4373d4 <wcrtomb@plt+0x326c4>
  43727c:	bl	406030 <wcrtomb@plt+0x1320>
  437280:	str	x0, [sp, #208]
  437284:	ldr	x0, [sp, #208]
  437288:	bl	406138 <wcrtomb@plt+0x1428>
  43728c:	str	x0, [sp, #224]
  437290:	ldr	x0, [sp, #232]
  437294:	ldr	x1, [sp, #224]
  437298:	cmp	x1, x0
  43729c:	b.ls	4372e8 <wcrtomb@plt+0x325d8>  // b.plast
  4372a0:	ldr	x0, [sp, #232]
  4372a4:	str	x0, [sp, #224]
  4372a8:	ldr	x0, [sp, #224]
  4372ac:	and	x0, x0, #0x1ff
  4372b0:	str	x0, [sp, #200]
  4372b4:	ldr	x0, [sp, #200]
  4372b8:	cmp	x0, #0x0
  4372bc:	b.eq	4372e8 <wcrtomb@plt+0x325d8>  // b.none
  4372c0:	ldr	x1, [sp, #208]
  4372c4:	ldr	x0, [sp, #232]
  4372c8:	add	x3, x1, x0
  4372cc:	mov	x1, #0x200                 	// #512
  4372d0:	ldr	x0, [sp, #200]
  4372d4:	sub	x0, x1, x0
  4372d8:	mov	x2, x0
  4372dc:	mov	w1, #0x0                   	// #0
  4372e0:	mov	x0, x3
  4372e4:	bl	4044d0 <memset@plt>
  4372e8:	ldr	x0, [sp, #208]
  4372ec:	ldr	x2, [sp, #224]
  4372f0:	mov	x1, x0
  4372f4:	ldr	w0, [sp, #220]
  4372f8:	bl	45a2ac <argp_usage@@Base+0x111c0>
  4372fc:	str	x0, [sp, #200]
  437300:	ldr	x0, [sp, #200]
  437304:	cmn	x0, #0x1
  437308:	b.ne	437328 <wcrtomb@plt+0x32618>  // b.any
  43730c:	ldr	x1, [sp, #120]
  437310:	ldr	x0, [sp, #232]
  437314:	sub	x0, x1, x0
  437318:	ldr	x2, [sp, #224]
  43731c:	mov	x1, x0
  437320:	ldr	x0, [sp, #40]
  437324:	bl	43a828 <wcrtomb@plt+0x35b18>
  437328:	ldr	x0, [sp, #200]
  43732c:	cmp	x0, #0x0
  437330:	b.ne	4373ac <wcrtomb@plt+0x3269c>  // b.any
  437334:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437338:	add	x0, x0, #0x420
  43733c:	ldr	x0, [x0]
  437340:	cmp	x0, #0x0
  437344:	b.eq	437358 <wcrtomb@plt+0x32648>  // b.none
  437348:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43734c:	add	x0, x0, #0x420
  437350:	ldr	x0, [x0]
  437354:	blr	x0
  437358:	ldr	x0, [sp, #232]
  43735c:	mov	x2, x0
  437360:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  437364:	add	x1, x0, #0xec0
  437368:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43736c:	add	x0, x0, #0xee0
  437370:	bl	404040 <ngettext@plt>
  437374:	mov	x19, x0
  437378:	ldr	x0, [sp, #40]
  43737c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  437380:	mov	x20, x0
  437384:	ldr	x0, [sp, #232]
  437388:	add	x1, sp, #0x30
  43738c:	bl	450988 <argp_usage@@Base+0x789c>
  437390:	mov	x4, x0
  437394:	mov	x3, x20
  437398:	mov	x2, x19
  43739c:	mov	w1, #0x0                   	// #0
  4373a0:	mov	w0, #0x0                   	// #0
  4373a4:	bl	404100 <error@plt>
  4373a8:	bl	412ae0 <wcrtomb@plt+0xddd0>
  4373ac:	ldr	x1, [sp, #232]
  4373b0:	ldr	x0, [sp, #200]
  4373b4:	sub	x0, x1, x0
  4373b8:	str	x0, [sp, #232]
  4373bc:	ldr	x0, [sp, #200]
  4373c0:	sub	x0, x0, #0x1
  4373c4:	and	x0, x0, #0xfffffffffffffe00
  4373c8:	ldr	x1, [sp, #208]
  4373cc:	add	x0, x1, x0
  4373d0:	bl	4060c4 <wcrtomb@plt+0x13b4>
  4373d4:	ldr	x0, [sp, #232]
  4373d8:	cmp	x0, #0x0
  4373dc:	b.gt	43727c <wcrtomb@plt+0x3256c>
  4373e0:	ldr	w0, [sp, #220]
  4373e4:	bl	404660 <close@plt>
  4373e8:	cmp	w0, #0x0
  4373ec:	b.eq	4373f8 <wcrtomb@plt+0x326e8>  // b.none
  4373f0:	ldr	x0, [sp, #40]
  4373f4:	bl	43a490 <wcrtomb@plt+0x35780>
  4373f8:	ldp	x19, x20, [sp, #16]
  4373fc:	ldp	x29, x30, [sp], #240
  437400:	ret
  437404:	stp	x29, x30, [sp, #-208]!
  437408:	mov	x29, sp
  43740c:	str	wzr, [sp, #204]
  437410:	strb	wzr, [sp, #203]
  437414:	bl	4283f0 <wcrtomb@plt+0x236e0>
  437418:	mov	w0, #0x2                   	// #2
  43741c:	bl	40a6d0 <wcrtomb@plt+0x59c0>
  437420:	bl	418384 <wcrtomb@plt+0x13674>
  437424:	b	4377e0 <wcrtomb@plt+0x32ad0>
  437428:	mov	w2, #0x0                   	// #0
  43742c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437430:	add	x1, x0, #0x90
  437434:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437438:	add	x0, x0, #0x18
  43743c:	bl	420af0 <wcrtomb@plt+0x1bde0>
  437440:	str	w0, [sp, #172]
  437444:	ldr	w0, [sp, #172]
  437448:	cmp	w0, #0x5
  43744c:	b.eq	4376a0 <wcrtomb@plt+0x32990>  // b.none
  437450:	ldr	w0, [sp, #172]
  437454:	cmp	w0, #0x5
  437458:	b.hi	4377cc <wcrtomb@plt+0x32abc>  // b.pmore
  43745c:	ldr	w0, [sp, #172]
  437460:	cmp	w0, #0x4
  437464:	b.eq	437694 <wcrtomb@plt+0x32984>  // b.none
  437468:	ldr	w0, [sp, #172]
  43746c:	cmp	w0, #0x4
  437470:	b.hi	4377cc <wcrtomb@plt+0x32abc>  // b.pmore
  437474:	ldr	w0, [sp, #172]
  437478:	cmp	w0, #0x3
  43747c:	b.eq	437670 <wcrtomb@plt+0x32960>  // b.none
  437480:	ldr	w0, [sp, #172]
  437484:	cmp	w0, #0x3
  437488:	b.hi	4377cc <wcrtomb@plt+0x32abc>  // b.pmore
  43748c:	ldr	w0, [sp, #172]
  437490:	cmp	w0, #0x2
  437494:	b.eq	4374c0 <wcrtomb@plt+0x327b0>  // b.none
  437498:	ldr	w0, [sp, #172]
  43749c:	cmp	w0, #0x2
  4374a0:	b.hi	4377cc <wcrtomb@plt+0x32abc>  // b.pmore
  4374a4:	ldr	w0, [sp, #172]
  4374a8:	cmp	w0, #0x0
  4374ac:	b.eq	4374c0 <wcrtomb@plt+0x327b0>  // b.none
  4374b0:	ldr	w0, [sp, #172]
  4374b4:	cmp	w0, #0x1
  4374b8:	b.eq	4374c4 <wcrtomb@plt+0x327b4>  // b.none
  4374bc:	b	4377cc <wcrtomb@plt+0x32abc>
  4374c0:	bl	404710 <abort@plt>
  4374c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4374c8:	add	x0, x0, #0x18
  4374cc:	ldr	x4, [x0]
  4374d0:	mov	w3, #0x0                   	// #0
  4374d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4374d8:	add	x2, x0, #0x0
  4374dc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4374e0:	add	x1, x0, #0x90
  4374e4:	mov	x0, x4
  4374e8:	bl	42112c <wcrtomb@plt+0x1c41c>
  4374ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4374f0:	add	x0, x0, #0x18
  4374f4:	ldr	x0, [x0]
  4374f8:	ldrb	w0, [x0, #156]
  4374fc:	mov	w2, w0
  437500:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437504:	add	x1, x0, #0x90
  437508:	mov	w0, w2
  43750c:	bl	4201d4 <wcrtomb@plt+0x1b4c4>
  437510:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437514:	add	x0, x0, #0x0
  437518:	ldr	w1, [x0]
  43751c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437520:	add	x0, x0, #0x360
  437524:	str	w1, [x0]
  437528:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43752c:	add	x0, x0, #0x38c
  437530:	ldr	w0, [x0]
  437534:	cmp	w0, #0x8
  437538:	b.ne	437668 <wcrtomb@plt+0x32958>  // b.any
  43753c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437540:	add	x0, x0, #0x90
  437544:	ldr	x0, [x0, #8]
  437548:	bl	429eb4 <wcrtomb@plt+0x251a4>
  43754c:	str	x0, [sp, #160]
  437550:	ldr	x0, [sp, #160]
  437554:	cmp	x0, #0x0
  437558:	b.eq	437668 <wcrtomb@plt+0x32958>  // b.none
  43755c:	ldr	x0, [sp, #160]
  437560:	ldr	w0, [x0, #40]
  437564:	bl	425b98 <wcrtomb@plt+0x20e88>
  437568:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43756c:	add	x0, x0, #0x90
  437570:	ldr	x0, [x0, #8]
  437574:	add	x1, sp, #0x10
  437578:	bl	4255c4 <wcrtomb@plt+0x208b4>
  43757c:	cmp	w0, #0x0
  437580:	b.ne	437668 <wcrtomb@plt+0x32958>  // b.any
  437584:	ldr	w0, [sp, #32]
  437588:	and	w0, w0, #0xf000
  43758c:	cmp	w0, #0x4, lsl #12
  437590:	b.ne	437640 <wcrtomb@plt+0x32930>  // b.any
  437594:	ldr	x0, [sp, #160]
  437598:	ldr	x0, [x0, #16]
  43759c:	mov	w1, #0x1                   	// #1
  4375a0:	bl	4265d4 <wcrtomb@plt+0x218c4>
  4375a4:	str	x0, [sp, #152]
  4375a8:	ldr	x0, [sp, #152]
  4375ac:	cmp	x0, #0x0
  4375b0:	b.eq	437668 <wcrtomb@plt+0x32958>  // b.none
  4375b4:	ldr	x0, [sp, #160]
  4375b8:	ldr	x0, [x0, #16]
  4375bc:	bl	426350 <wcrtomb@plt+0x21640>
  4375c0:	str	x0, [sp, #144]
  4375c4:	ldr	x0, [sp, #152]
  4375c8:	str	x0, [sp, #192]
  4375cc:	b	437614 <wcrtomb@plt+0x32904>
  4375d0:	ldr	x1, [sp, #192]
  4375d4:	ldr	x0, [sp, #144]
  4375d8:	bl	426440 <wcrtomb@plt+0x21730>
  4375dc:	mov	x4, x0
  4375e0:	ldr	x0, [sp, #160]
  4375e4:	ldr	w0, [x0, #40]
  4375e8:	mov	x3, #0x0                   	// #0
  4375ec:	mov	w2, #0x0                   	// #0
  4375f0:	mov	w1, w0
  4375f4:	mov	x0, x4
  4375f8:	bl	428674 <wcrtomb@plt+0x23964>
  4375fc:	ldr	x0, [sp, #192]
  437600:	bl	4040b0 <strlen@plt>
  437604:	add	x0, x0, #0x1
  437608:	ldr	x1, [sp, #192]
  43760c:	add	x0, x1, x0
  437610:	str	x0, [sp, #192]
  437614:	ldr	x0, [sp, #192]
  437618:	ldrb	w0, [x0]
  43761c:	cmp	w0, #0x0
  437620:	b.ne	4375d0 <wcrtomb@plt+0x328c0>  // b.any
  437624:	ldr	x0, [sp, #144]
  437628:	bl	426414 <wcrtomb@plt+0x21704>
  43762c:	ldr	x0, [sp, #152]
  437630:	bl	404880 <free@plt>
  437634:	ldr	x0, [sp, #160]
  437638:	bl	42896c <wcrtomb@plt+0x23c5c>
  43763c:	b	437668 <wcrtomb@plt+0x32958>
  437640:	add	x0, sp, #0x10
  437644:	bl	45a9e0 <argp_usage@@Base+0x118f4>
  437648:	adrp	x2, 4ae000 <argp_program_version_hook@@Base+0x228>
  43764c:	add	x2, x2, #0x90
  437650:	ldp	x2, x3, [x2, #232]
  437654:	bl	434fa4 <wcrtomb@plt+0x30294>
  437658:	cmp	w0, #0x0
  43765c:	b.gt	437668 <wcrtomb@plt+0x32958>
  437660:	ldr	x0, [sp, #160]
  437664:	bl	42896c <wcrtomb@plt+0x23c5c>
  437668:	bl	4231c0 <wcrtomb@plt+0x1e4b0>
  43766c:	b	4377cc <wcrtomb@plt+0x32abc>
  437670:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437674:	add	x0, x0, #0x18
  437678:	ldr	x1, [x0]
  43767c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437680:	add	x0, x0, #0xfd8
  437684:	str	x1, [x0]
  437688:	mov	w0, #0x1                   	// #1
  43768c:	strb	w0, [sp, #203]
  437690:	b	4377cc <wcrtomb@plt+0x32abc>
  437694:	mov	w0, #0x1                   	// #1
  437698:	strb	w0, [sp, #203]
  43769c:	b	4377cc <wcrtomb@plt+0x32abc>
  4376a0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4376a4:	add	x0, x0, #0x18
  4376a8:	ldr	x0, [x0]
  4376ac:	bl	4060c4 <wcrtomb@plt+0x13b4>
  4376b0:	ldr	w0, [sp, #204]
  4376b4:	cmp	w0, #0x5
  4376b8:	b.eq	4377c4 <wcrtomb@plt+0x32ab4>  // b.none
  4376bc:	ldr	w0, [sp, #204]
  4376c0:	cmp	w0, #0x5
  4376c4:	b.hi	4377c8 <wcrtomb@plt+0x32ab8>  // b.pmore
  4376c8:	ldr	w0, [sp, #204]
  4376cc:	cmp	w0, #0x4
  4376d0:	b.eq	4377c0 <wcrtomb@plt+0x32ab0>  // b.none
  4376d4:	ldr	w0, [sp, #204]
  4376d8:	cmp	w0, #0x4
  4376dc:	b.hi	4377c8 <wcrtomb@plt+0x32ab8>  // b.pmore
  4376e0:	ldr	w0, [sp, #204]
  4376e4:	cmp	w0, #0x3
  4376e8:	b.eq	43776c <wcrtomb@plt+0x32a5c>  // b.none
  4376ec:	ldr	w0, [sp, #204]
  4376f0:	cmp	w0, #0x3
  4376f4:	b.hi	4377c8 <wcrtomb@plt+0x32ab8>  // b.pmore
  4376f8:	ldr	w0, [sp, #204]
  4376fc:	cmp	w0, #0x2
  437700:	b.eq	4377c0 <wcrtomb@plt+0x32ab0>  // b.none
  437704:	ldr	w0, [sp, #204]
  437708:	cmp	w0, #0x2
  43770c:	b.hi	4377c8 <wcrtomb@plt+0x32ab8>  // b.pmore
  437710:	ldr	w0, [sp, #204]
  437714:	cmp	w0, #0x0
  437718:	b.eq	43772c <wcrtomb@plt+0x32a1c>  // b.none
  43771c:	ldr	w0, [sp, #204]
  437720:	cmp	w0, #0x1
  437724:	b.eq	43776c <wcrtomb@plt+0x32a5c>  // b.none
  437728:	b	4377c8 <wcrtomb@plt+0x32ab8>
  43772c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437730:	add	x0, x0, #0x420
  437734:	ldr	x0, [x0]
  437738:	cmp	x0, #0x0
  43773c:	b.eq	437750 <wcrtomb@plt+0x32a40>  // b.none
  437740:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437744:	add	x0, x0, #0x420
  437748:	ldr	x0, [x0]
  43774c:	blr	x0
  437750:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  437754:	add	x0, x0, #0xf00
  437758:	bl	404c60 <gettext@plt>
  43775c:	mov	x2, x0
  437760:	mov	w1, #0x0                   	// #0
  437764:	mov	w0, #0x0                   	// #0
  437768:	bl	404100 <error@plt>
  43776c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437770:	add	x0, x0, #0x420
  437774:	ldr	x0, [x0]
  437778:	cmp	x0, #0x0
  43777c:	b.eq	437790 <wcrtomb@plt+0x32a80>  // b.none
  437780:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437784:	add	x0, x0, #0x420
  437788:	ldr	x0, [x0]
  43778c:	blr	x0
  437790:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  437794:	add	x0, x0, #0xf28
  437798:	bl	404c60 <gettext@plt>
  43779c:	mov	x2, x0
  4377a0:	mov	w1, #0x0                   	// #0
  4377a4:	mov	w0, #0x0                   	// #0
  4377a8:	bl	404100 <error@plt>
  4377ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4377b0:	add	x0, x0, #0xdb0
  4377b4:	mov	w1, #0x2                   	// #2
  4377b8:	str	w1, [x0]
  4377bc:	b	4377c4 <wcrtomb@plt+0x32ab4>
  4377c0:	bl	404710 <abort@plt>
  4377c4:	nop
  4377c8:	nop
  4377cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4377d0:	add	x0, x0, #0x90
  4377d4:	bl	434ecc <wcrtomb@plt+0x301bc>
  4377d8:	ldr	w0, [sp, #172]
  4377dc:	str	w0, [sp, #204]
  4377e0:	ldrb	w0, [sp, #203]
  4377e4:	eor	w0, w0, #0x1
  4377e8:	and	w0, w0, #0xff
  4377ec:	cmp	w0, #0x0
  4377f0:	b.ne	437428 <wcrtomb@plt+0x32718>  // b.any
  4377f4:	bl	405fb0 <wcrtomb@plt+0x12a0>
  4377f8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4377fc:	add	x0, x0, #0x410
  437800:	mov	w1, #0x1                   	// #1
  437804:	strb	w1, [x0]
  437808:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43780c:	add	x0, x0, #0xfd8
  437810:	ldr	x0, [x0]
  437814:	mov	x1, x0
  437818:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43781c:	add	x0, x0, #0x418
  437820:	str	x1, [x0]
  437824:	b	4378b0 <wcrtomb@plt+0x32ba0>
  437828:	ldr	x0, [sp, #184]
  43782c:	ldr	x0, [x0, #16]
  437830:	str	x0, [sp, #176]
  437834:	mov	x1, #0x0                   	// #0
  437838:	ldr	x0, [sp, #176]
  43783c:	bl	412f50 <wcrtomb@plt+0xe240>
  437840:	and	w0, w0, #0xff
  437844:	cmp	w0, #0x0
  437848:	b.eq	437850 <wcrtomb@plt+0x32b40>  // b.none
  43784c:	b	4378b0 <wcrtomb@plt+0x32ba0>
  437850:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437854:	add	x0, x0, #0x280
  437858:	ldrb	w0, [x0]
  43785c:	cmp	w0, #0x0
  437860:	b.eq	437880 <wcrtomb@plt+0x32b70>  // b.none
  437864:	ldr	x1, [sp, #176]
  437868:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  43786c:	add	x0, x0, #0xf40
  437870:	bl	42fab8 <wcrtomb@plt+0x2ada8>
  437874:	cmp	w0, #0x0
  437878:	b.ne	437880 <wcrtomb@plt+0x32b70>  // b.any
  43787c:	b	4378b0 <wcrtomb@plt+0x32ba0>
  437880:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  437884:	add	x0, x0, #0x38c
  437888:	ldr	w0, [x0]
  43788c:	cmp	w0, #0x2
  437890:	b.ne	4378a0 <wcrtomb@plt+0x32b90>  // b.any
  437894:	ldr	x0, [sp, #176]
  437898:	bl	437208 <wcrtomb@plt+0x324f8>
  43789c:	b	4378b0 <wcrtomb@plt+0x32ba0>
  4378a0:	ldr	x2, [sp, #176]
  4378a4:	ldr	x1, [sp, #176]
  4378a8:	mov	x0, #0x0                   	// #0
  4378ac:	bl	41199c <wcrtomb@plt+0xcc8c>
  4378b0:	bl	429f68 <wcrtomb@plt+0x25258>
  4378b4:	str	x0, [sp, #184]
  4378b8:	ldr	x0, [sp, #184]
  4378bc:	cmp	x0, #0x0
  4378c0:	b.ne	437828 <wcrtomb@plt+0x32b18>  // b.any
  4378c4:	bl	40df54 <wcrtomb@plt+0x9244>
  4378c8:	bl	407adc <wcrtomb@plt+0x2dcc>
  4378cc:	bl	436f9c <wcrtomb@plt+0x3228c>
  4378d0:	bl	428dec <wcrtomb@plt+0x240dc>
  4378d4:	nop
  4378d8:	ldp	x29, x30, [sp], #208
  4378dc:	ret
  4378e0:	stp	x29, x30, [sp, #-48]!
  4378e4:	mov	x29, sp
  4378e8:	str	x19, [sp, #16]
  4378ec:	strb	w0, [sp, #47]
  4378f0:	ldrb	w1, [sp, #47]
  4378f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4378f8:	add	x0, x0, #0x1d8
  4378fc:	sxtw	x1, w1
  437900:	ldr	x0, [x0, x1, lsl #3]
  437904:	cmn	x0, #0x1
  437908:	b.ne	437978 <wcrtomb@plt+0x32c68>  // b.any
  43790c:	ldrb	w0, [sp, #47]
  437910:	cmp	w0, #0x0
  437914:	b.eq	437948 <wcrtomb@plt+0x32c38>  // b.none
  437918:	bl	450a20 <argp_usage@@Base+0x7934>
  43791c:	ldrb	w19, [sp, #47]
  437920:	mov	x1, x0
  437924:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  437928:	add	x0, x0, #0xf48
  43792c:	bl	404a00 <iconv_open@plt>
  437930:	mov	x2, x0
  437934:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437938:	add	x0, x0, #0x1d8
  43793c:	sxtw	x1, w19
  437940:	str	x2, [x0, x1, lsl #3]
  437944:	b	437978 <wcrtomb@plt+0x32c68>
  437948:	bl	450a20 <argp_usage@@Base+0x7934>
  43794c:	mov	x2, x0
  437950:	ldrb	w19, [sp, #47]
  437954:	adrp	x0, 486000 <_obstack_memory_used@@Base+0x28ec0>
  437958:	add	x1, x0, #0xf48
  43795c:	mov	x0, x2
  437960:	bl	404a00 <iconv_open@plt>
  437964:	mov	x2, x0
  437968:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43796c:	add	x0, x0, #0x1d8
  437970:	sxtw	x1, w19
  437974:	str	x2, [x0, x1, lsl #3]
  437978:	ldrb	w1, [sp, #47]
  43797c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437980:	add	x0, x0, #0x1d8
  437984:	sxtw	x1, w1
  437988:	ldr	x0, [x0, x1, lsl #3]
  43798c:	ldr	x19, [sp, #16]
  437990:	ldp	x29, x30, [sp], #48
  437994:	ret
  437998:	stp	x29, x30, [sp, #-96]!
  43799c:	mov	x29, sp
  4379a0:	strb	w0, [sp, #47]
  4379a4:	str	x1, [sp, #32]
  4379a8:	str	x2, [sp, #24]
  4379ac:	ldrb	w0, [sp, #47]
  4379b0:	bl	4378e0 <wcrtomb@plt+0x32bd0>
  4379b4:	str	x0, [sp, #88]
  4379b8:	ldr	x0, [sp, #88]
  4379bc:	cmp	x0, #0x0
  4379c0:	b.ne	4379e0 <wcrtomb@plt+0x32cd0>  // b.any
  4379c4:	ldr	x0, [sp, #32]
  4379c8:	bl	45b858 <argp_usage@@Base+0x1276c>
  4379cc:	mov	x1, x0
  4379d0:	ldr	x0, [sp, #24]
  4379d4:	str	x1, [x0]
  4379d8:	mov	w0, #0x1                   	// #1
  4379dc:	b	437a88 <wcrtomb@plt+0x32d78>
  4379e0:	ldr	x0, [sp, #88]
  4379e4:	cmn	x0, #0x1
  4379e8:	b.ne	4379f4 <wcrtomb@plt+0x32ce4>  // b.any
  4379ec:	mov	w0, #0x0                   	// #0
  4379f0:	b	437a88 <wcrtomb@plt+0x32d78>
  4379f4:	ldr	x0, [sp, #32]
  4379f8:	bl	4040b0 <strlen@plt>
  4379fc:	add	x0, x0, #0x1
  437a00:	str	x0, [sp, #56]
  437a04:	ldr	x0, [sp, #56]
  437a08:	lsl	x0, x0, #4
  437a0c:	add	x0, x0, #0x1
  437a10:	str	x0, [sp, #48]
  437a14:	ldr	x0, [sp, #48]
  437a18:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  437a1c:	str	x0, [sp, #80]
  437a20:	ldr	x0, [sp, #80]
  437a24:	str	x0, [sp, #64]
  437a28:	ldr	x0, [sp, #32]
  437a2c:	str	x0, [sp, #72]
  437a30:	add	x3, sp, #0x30
  437a34:	add	x2, sp, #0x40
  437a38:	add	x1, sp, #0x38
  437a3c:	add	x0, sp, #0x48
  437a40:	mov	x4, x3
  437a44:	mov	x3, x2
  437a48:	mov	x2, x1
  437a4c:	mov	x1, x0
  437a50:	ldr	x0, [sp, #88]
  437a54:	bl	4047e0 <iconv@plt>
  437a58:	cmp	x0, #0x0
  437a5c:	b.eq	437a70 <wcrtomb@plt+0x32d60>  // b.none
  437a60:	ldr	x0, [sp, #80]
  437a64:	bl	404880 <free@plt>
  437a68:	mov	w0, #0x0                   	// #0
  437a6c:	b	437a88 <wcrtomb@plt+0x32d78>
  437a70:	ldr	x0, [sp, #64]
  437a74:	strb	wzr, [x0]
  437a78:	ldr	x0, [sp, #24]
  437a7c:	ldr	x1, [sp, #80]
  437a80:	str	x1, [x0]
  437a84:	mov	w0, #0x1                   	// #1
  437a88:	ldp	x29, x30, [sp], #96
  437a8c:	ret
  437a90:	sub	sp, sp, #0x10
  437a94:	str	x0, [sp, #8]
  437a98:	b	437ac4 <wcrtomb@plt+0x32db4>
  437a9c:	ldr	x0, [sp, #8]
  437aa0:	ldrb	w0, [x0]
  437aa4:	and	w0, w0, #0xffffff80
  437aa8:	cmp	w0, #0x0
  437aac:	b.eq	437ab8 <wcrtomb@plt+0x32da8>  // b.none
  437ab0:	mov	w0, #0x0                   	// #0
  437ab4:	b	437ad8 <wcrtomb@plt+0x32dc8>
  437ab8:	ldr	x0, [sp, #8]
  437abc:	add	x0, x0, #0x1
  437ac0:	str	x0, [sp, #8]
  437ac4:	ldr	x0, [sp, #8]
  437ac8:	ldrb	w0, [x0]
  437acc:	cmp	w0, #0x0
  437ad0:	b.ne	437a9c <wcrtomb@plt+0x32d8c>  // b.any
  437ad4:	mov	w0, #0x1                   	// #1
  437ad8:	add	sp, sp, #0x10
  437adc:	ret
  437ae0:	stp	x29, x30, [sp, #-48]!
  437ae4:	mov	x29, sp
  437ae8:	str	x0, [sp, #24]
  437aec:	str	wzr, [sp, #44]
  437af0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  437af4:	add	x1, x0, #0x1c0
  437af8:	ldr	x0, [sp, #24]
  437afc:	bl	4047c0 <strcmp@plt>
  437b00:	cmp	w0, #0x0
  437b04:	b.ne	437b18 <wcrtomb@plt+0x32e08>  // b.any
  437b08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437b0c:	add	x0, x0, #0x24c
  437b10:	str	wzr, [x0]
  437b14:	b	437bf4 <wcrtomb@plt+0x32ee4>
  437b18:	ldr	x0, [sp, #24]
  437b1c:	bl	4040b0 <strlen@plt>
  437b20:	cmp	x0, #0x2
  437b24:	b.ls	437b58 <wcrtomb@plt+0x32e48>  // b.plast
  437b28:	mov	x2, #0x3                   	// #3
  437b2c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  437b30:	add	x1, x0, #0x1c8
  437b34:	ldr	x0, [sp, #24]
  437b38:	bl	404790 <memcmp@plt>
  437b3c:	cmp	w0, #0x0
  437b40:	b.ne	437b58 <wcrtomb@plt+0x32e48>  // b.any
  437b44:	mov	w0, #0x1                   	// #1
  437b48:	str	w0, [sp, #44]
  437b4c:	ldr	x0, [sp, #24]
  437b50:	add	x0, x0, #0x3
  437b54:	str	x0, [sp, #24]
  437b58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437b5c:	add	x0, x0, #0x3e8
  437b60:	ldr	x0, [x0]
  437b64:	mov	x5, x0
  437b68:	mov	x4, #0x4                   	// #4
  437b6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437b70:	add	x3, x0, #0x1e8
  437b74:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  437b78:	add	x2, x0, #0xf0
  437b7c:	ldr	x1, [sp, #24]
  437b80:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  437b84:	add	x0, x0, #0x1d0
  437b88:	bl	443a80 <wcrtomb@plt+0x3ed70>
  437b8c:	mov	x1, x0
  437b90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437b94:	add	x0, x0, #0x1e8
  437b98:	ldr	w0, [x0, x1, lsl #2]
  437b9c:	str	w0, [sp, #40]
  437ba0:	ldr	w0, [sp, #44]
  437ba4:	cmp	w0, #0x0
  437ba8:	b.eq	437bd4 <wcrtomb@plt+0x32ec4>  // b.none
  437bac:	ldr	w0, [sp, #40]
  437bb0:	mvn	w1, w0
  437bb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437bb8:	add	x0, x0, #0x24c
  437bbc:	ldr	w0, [x0]
  437bc0:	and	w1, w1, w0
  437bc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437bc8:	add	x0, x0, #0x24c
  437bcc:	str	w1, [x0]
  437bd0:	b	437bf4 <wcrtomb@plt+0x32ee4>
  437bd4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437bd8:	add	x0, x0, #0x24c
  437bdc:	ldr	w1, [x0]
  437be0:	ldr	w0, [sp, #40]
  437be4:	orr	w1, w1, w0
  437be8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  437bec:	add	x0, x0, #0x24c
  437bf0:	str	w1, [x0]
  437bf4:	ldp	x29, x30, [sp], #48
  437bf8:	ret
  437bfc:	mov	x12, #0x1020                	// #4128
  437c00:	sub	sp, sp, x12
  437c04:	stp	x29, x30, [sp]
  437c08:	mov	x29, sp
  437c0c:	str	w0, [sp, #28]
  437c10:	str	x1, [sp, #16]
  437c14:	str	w2, [sp, #24]
  437c18:	ldr	w0, [sp, #28]
  437c1c:	cmn	w0, #0x64
  437c20:	b.eq	437c34 <wcrtomb@plt+0x32f24>  // b.none
  437c24:	ldr	x0, [sp, #16]
  437c28:	ldrb	w0, [x0]
  437c2c:	cmp	w0, #0x2f
  437c30:	b.ne	437c44 <wcrtomb@plt+0x32f34>  // b.any
  437c34:	ldr	w1, [sp, #24]
  437c38:	ldr	x0, [sp, #16]
  437c3c:	bl	404810 <acl_get_file@plt>
  437c40:	b	437e14 <wcrtomb@plt+0x33104>
  437c44:	add	x0, sp, #0x28
  437c48:	ldr	x2, [sp, #16]
  437c4c:	ldr	w1, [sp, #28]
  437c50:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  437c54:	str	x0, [sp, #4120]
  437c58:	ldr	x0, [sp, #4120]
  437c5c:	cmp	x0, #0x0
  437c60:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437c64:	ldr	w1, [sp, #24]
  437c68:	ldr	x0, [sp, #4120]
  437c6c:	bl	404810 <acl_get_file@plt>
  437c70:	str	x0, [sp, #4112]
  437c74:	bl	404bc0 <__errno_location@plt>
  437c78:	ldr	w0, [x0]
  437c7c:	str	w0, [sp, #4108]
  437c80:	add	x0, sp, #0x28
  437c84:	ldr	x1, [sp, #4120]
  437c88:	cmp	x1, x0
  437c8c:	b.eq	437c98 <wcrtomb@plt+0x32f88>  // b.none
  437c90:	ldr	x0, [sp, #4120]
  437c94:	bl	404880 <free@plt>
  437c98:	ldr	x0, [sp, #4112]
  437c9c:	cmp	x0, #0x0
  437ca0:	b.eq	437cac <wcrtomb@plt+0x32f9c>  // b.none
  437ca4:	ldr	x0, [sp, #4112]
  437ca8:	b	437e14 <wcrtomb@plt+0x33104>
  437cac:	ldr	w0, [sp, #4108]
  437cb0:	cmp	w0, #0x14
  437cb4:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437cb8:	ldr	w0, [sp, #4108]
  437cbc:	cmp	w0, #0x2
  437cc0:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437cc4:	ldr	w0, [sp, #4108]
  437cc8:	cmp	w0, #0x1
  437ccc:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437cd0:	ldr	w0, [sp, #4108]
  437cd4:	cmp	w0, #0xd
  437cd8:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437cdc:	ldr	w0, [sp, #4108]
  437ce0:	cmp	w0, #0x26
  437ce4:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437ce8:	ldr	w0, [sp, #4108]
  437cec:	cmp	w0, #0x5f
  437cf0:	b.eq	437d0c <wcrtomb@plt+0x32ffc>  // b.none
  437cf4:	bl	404bc0 <__errno_location@plt>
  437cf8:	mov	x1, x0
  437cfc:	ldr	w0, [sp, #4108]
  437d00:	str	w0, [x1]
  437d04:	ldr	x0, [sp, #4112]
  437d08:	b	437e14 <wcrtomb@plt+0x33104>
  437d0c:	add	x0, sp, #0xfe8
  437d10:	bl	45a3cc <argp_usage@@Base+0x112e0>
  437d14:	cmp	w0, #0x0
  437d18:	b.eq	437d28 <wcrtomb@plt+0x33018>  // b.none
  437d1c:	bl	404bc0 <__errno_location@plt>
  437d20:	ldr	w0, [x0]
  437d24:	bl	451a50 <argp_usage@@Base+0x8964>
  437d28:	ldr	w0, [sp, #28]
  437d2c:	cmp	w0, #0x0
  437d30:	b.lt	437d64 <wcrtomb@plt+0x33054>  // b.tstop
  437d34:	ldr	w0, [sp, #4072]
  437d38:	ldr	w1, [sp, #28]
  437d3c:	cmp	w1, w0
  437d40:	b.ne	437d64 <wcrtomb@plt+0x33054>  // b.any
  437d44:	add	x0, sp, #0xfe8
  437d48:	bl	45a490 <argp_usage@@Base+0x113a4>
  437d4c:	bl	404bc0 <__errno_location@plt>
  437d50:	mov	x1, x0
  437d54:	mov	w0, #0x9                   	// #9
  437d58:	str	w0, [x1]
  437d5c:	mov	x0, #0x0                   	// #0
  437d60:	b	437e14 <wcrtomb@plt+0x33104>
  437d64:	ldr	w0, [sp, #28]
  437d68:	bl	404110 <fchdir@plt>
  437d6c:	cmp	w0, #0x0
  437d70:	b.eq	437da0 <wcrtomb@plt+0x33090>  // b.none
  437d74:	bl	404bc0 <__errno_location@plt>
  437d78:	ldr	w0, [x0]
  437d7c:	str	w0, [sp, #4092]
  437d80:	add	x0, sp, #0xfe8
  437d84:	bl	45a490 <argp_usage@@Base+0x113a4>
  437d88:	bl	404bc0 <__errno_location@plt>
  437d8c:	mov	x1, x0
  437d90:	ldr	w0, [sp, #4092]
  437d94:	str	w0, [x1]
  437d98:	mov	x0, #0x0                   	// #0
  437d9c:	b	437e14 <wcrtomb@plt+0x33104>
  437da0:	ldr	w1, [sp, #24]
  437da4:	ldr	x0, [sp, #16]
  437da8:	bl	404810 <acl_get_file@plt>
  437dac:	str	x0, [sp, #4096]
  437db0:	ldr	x0, [sp, #4096]
  437db4:	cmp	x0, #0x0
  437db8:	b.ne	437dc8 <wcrtomb@plt+0x330b8>  // b.any
  437dbc:	bl	404bc0 <__errno_location@plt>
  437dc0:	ldr	w0, [x0]
  437dc4:	b	437dcc <wcrtomb@plt+0x330bc>
  437dc8:	mov	w0, #0x0                   	// #0
  437dcc:	str	w0, [sp, #4092]
  437dd0:	add	x0, sp, #0xfe8
  437dd4:	bl	45a450 <argp_usage@@Base+0x11364>
  437dd8:	cmp	w0, #0x0
  437ddc:	b.eq	437dec <wcrtomb@plt+0x330dc>  // b.none
  437de0:	bl	404bc0 <__errno_location@plt>
  437de4:	ldr	w0, [x0]
  437de8:	bl	451a8c <argp_usage@@Base+0x89a0>
  437dec:	add	x0, sp, #0xfe8
  437df0:	bl	45a490 <argp_usage@@Base+0x113a4>
  437df4:	ldr	w0, [sp, #4092]
  437df8:	cmp	w0, #0x0
  437dfc:	b.eq	437e10 <wcrtomb@plt+0x33100>  // b.none
  437e00:	bl	404bc0 <__errno_location@plt>
  437e04:	mov	x1, x0
  437e08:	ldr	w0, [sp, #4092]
  437e0c:	str	w0, [x1]
  437e10:	ldr	x0, [sp, #4096]
  437e14:	ldp	x29, x30, [sp]
  437e18:	mov	x12, #0x1020                	// #4128
  437e1c:	add	sp, sp, x12
  437e20:	ret
  437e24:	mov	x12, #0x1020                	// #4128
  437e28:	sub	sp, sp, x12
  437e2c:	stp	x29, x30, [sp]
  437e30:	mov	x29, sp
  437e34:	str	w0, [sp, #44]
  437e38:	str	x1, [sp, #32]
  437e3c:	str	w2, [sp, #40]
  437e40:	str	x3, [sp, #24]
  437e44:	ldr	w0, [sp, #44]
  437e48:	cmn	w0, #0x64
  437e4c:	b.eq	437e60 <wcrtomb@plt+0x33150>  // b.none
  437e50:	ldr	x0, [sp, #32]
  437e54:	ldrb	w0, [x0]
  437e58:	cmp	w0, #0x2f
  437e5c:	b.ne	437e74 <wcrtomb@plt+0x33164>  // b.any
  437e60:	ldr	x2, [sp, #24]
  437e64:	ldr	w1, [sp, #40]
  437e68:	ldr	x0, [sp, #32]
  437e6c:	bl	4045f0 <acl_set_file@plt>
  437e70:	b	43804c <wcrtomb@plt+0x3333c>
  437e74:	add	x0, sp, #0x38
  437e78:	ldr	x2, [sp, #32]
  437e7c:	ldr	w1, [sp, #44]
  437e80:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  437e84:	str	x0, [sp, #4120]
  437e88:	ldr	x0, [sp, #4120]
  437e8c:	cmp	x0, #0x0
  437e90:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437e94:	ldr	x2, [sp, #24]
  437e98:	ldr	w1, [sp, #40]
  437e9c:	ldr	x0, [sp, #4120]
  437ea0:	bl	4045f0 <acl_set_file@plt>
  437ea4:	str	w0, [sp, #4116]
  437ea8:	bl	404bc0 <__errno_location@plt>
  437eac:	ldr	w0, [x0]
  437eb0:	str	w0, [sp, #4112]
  437eb4:	add	x0, sp, #0x38
  437eb8:	ldr	x1, [sp, #4120]
  437ebc:	cmp	x1, x0
  437ec0:	b.eq	437ecc <wcrtomb@plt+0x331bc>  // b.none
  437ec4:	ldr	x0, [sp, #4120]
  437ec8:	bl	404880 <free@plt>
  437ecc:	ldr	w0, [sp, #4116]
  437ed0:	cmn	w0, #0x1
  437ed4:	b.eq	437ee0 <wcrtomb@plt+0x331d0>  // b.none
  437ed8:	ldr	w0, [sp, #4116]
  437edc:	b	43804c <wcrtomb@plt+0x3333c>
  437ee0:	ldr	w0, [sp, #4112]
  437ee4:	cmp	w0, #0x14
  437ee8:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437eec:	ldr	w0, [sp, #4112]
  437ef0:	cmp	w0, #0x2
  437ef4:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437ef8:	ldr	w0, [sp, #4112]
  437efc:	cmp	w0, #0x1
  437f00:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437f04:	ldr	w0, [sp, #4112]
  437f08:	cmp	w0, #0xd
  437f0c:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437f10:	ldr	w0, [sp, #4112]
  437f14:	cmp	w0, #0x26
  437f18:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437f1c:	ldr	w0, [sp, #4112]
  437f20:	cmp	w0, #0x5f
  437f24:	b.eq	437f40 <wcrtomb@plt+0x33230>  // b.none
  437f28:	bl	404bc0 <__errno_location@plt>
  437f2c:	mov	x1, x0
  437f30:	ldr	w0, [sp, #4112]
  437f34:	str	w0, [x1]
  437f38:	ldr	w0, [sp, #4116]
  437f3c:	b	43804c <wcrtomb@plt+0x3333c>
  437f40:	add	x0, sp, #0xff8
  437f44:	bl	45a3cc <argp_usage@@Base+0x112e0>
  437f48:	cmp	w0, #0x0
  437f4c:	b.eq	437f5c <wcrtomb@plt+0x3324c>  // b.none
  437f50:	bl	404bc0 <__errno_location@plt>
  437f54:	ldr	w0, [x0]
  437f58:	bl	451a50 <argp_usage@@Base+0x8964>
  437f5c:	ldr	w0, [sp, #44]
  437f60:	cmp	w0, #0x0
  437f64:	b.lt	437f98 <wcrtomb@plt+0x33288>  // b.tstop
  437f68:	ldr	w0, [sp, #4088]
  437f6c:	ldr	w1, [sp, #44]
  437f70:	cmp	w1, w0
  437f74:	b.ne	437f98 <wcrtomb@plt+0x33288>  // b.any
  437f78:	add	x0, sp, #0xff8
  437f7c:	bl	45a490 <argp_usage@@Base+0x113a4>
  437f80:	bl	404bc0 <__errno_location@plt>
  437f84:	mov	x1, x0
  437f88:	mov	w0, #0x9                   	// #9
  437f8c:	str	w0, [x1]
  437f90:	mov	w0, #0xffffffff            	// #-1
  437f94:	b	43804c <wcrtomb@plt+0x3333c>
  437f98:	ldr	w0, [sp, #44]
  437f9c:	bl	404110 <fchdir@plt>
  437fa0:	cmp	w0, #0x0
  437fa4:	b.eq	437fd4 <wcrtomb@plt+0x332c4>  // b.none
  437fa8:	bl	404bc0 <__errno_location@plt>
  437fac:	ldr	w0, [x0]
  437fb0:	str	w0, [sp, #4104]
  437fb4:	add	x0, sp, #0xff8
  437fb8:	bl	45a490 <argp_usage@@Base+0x113a4>
  437fbc:	bl	404bc0 <__errno_location@plt>
  437fc0:	mov	x1, x0
  437fc4:	ldr	w0, [sp, #4104]
  437fc8:	str	w0, [x1]
  437fcc:	mov	w0, #0xffffffff            	// #-1
  437fd0:	b	43804c <wcrtomb@plt+0x3333c>
  437fd4:	ldr	x2, [sp, #24]
  437fd8:	ldr	w1, [sp, #40]
  437fdc:	ldr	x0, [sp, #32]
  437fe0:	bl	4045f0 <acl_set_file@plt>
  437fe4:	str	w0, [sp, #4108]
  437fe8:	ldr	w0, [sp, #4108]
  437fec:	cmn	w0, #0x1
  437ff0:	b.ne	438000 <wcrtomb@plt+0x332f0>  // b.any
  437ff4:	bl	404bc0 <__errno_location@plt>
  437ff8:	ldr	w0, [x0]
  437ffc:	b	438004 <wcrtomb@plt+0x332f4>
  438000:	mov	w0, #0x0                   	// #0
  438004:	str	w0, [sp, #4104]
  438008:	add	x0, sp, #0xff8
  43800c:	bl	45a450 <argp_usage@@Base+0x11364>
  438010:	cmp	w0, #0x0
  438014:	b.eq	438024 <wcrtomb@plt+0x33314>  // b.none
  438018:	bl	404bc0 <__errno_location@plt>
  43801c:	ldr	w0, [x0]
  438020:	bl	451a8c <argp_usage@@Base+0x89a0>
  438024:	add	x0, sp, #0xff8
  438028:	bl	45a490 <argp_usage@@Base+0x113a4>
  43802c:	ldr	w0, [sp, #4104]
  438030:	cmp	w0, #0x0
  438034:	b.eq	438048 <wcrtomb@plt+0x33338>  // b.none
  438038:	bl	404bc0 <__errno_location@plt>
  43803c:	mov	x1, x0
  438040:	ldr	w0, [sp, #4104]
  438044:	str	w0, [x1]
  438048:	ldr	w0, [sp, #4108]
  43804c:	ldp	x29, x30, [sp]
  438050:	mov	x12, #0x1020                	// #4128
  438054:	add	sp, sp, x12
  438058:	ret
  43805c:	mov	x12, #0x1010                	// #4112
  438060:	sub	sp, sp, x12
  438064:	stp	x29, x30, [sp]
  438068:	mov	x29, sp
  43806c:	str	w0, [sp, #28]
  438070:	str	x1, [sp, #16]
  438074:	ldr	w0, [sp, #28]
  438078:	cmn	w0, #0x64
  43807c:	b.eq	438090 <wcrtomb@plt+0x33380>  // b.none
  438080:	ldr	x0, [sp, #16]
  438084:	ldrb	w0, [x0]
  438088:	cmp	w0, #0x2f
  43808c:	b.ne	43809c <wcrtomb@plt+0x3338c>  // b.any
  438090:	ldr	x0, [sp, #16]
  438094:	bl	404370 <acl_delete_def_file@plt>
  438098:	b	438264 <wcrtomb@plt+0x33554>
  43809c:	add	x0, sp, #0x28
  4380a0:	ldr	x2, [sp, #16]
  4380a4:	ldr	w1, [sp, #28]
  4380a8:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  4380ac:	str	x0, [sp, #4104]
  4380b0:	ldr	x0, [sp, #4104]
  4380b4:	cmp	x0, #0x0
  4380b8:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  4380bc:	ldr	x0, [sp, #4104]
  4380c0:	bl	404370 <acl_delete_def_file@plt>
  4380c4:	str	w0, [sp, #4100]
  4380c8:	bl	404bc0 <__errno_location@plt>
  4380cc:	ldr	w0, [x0]
  4380d0:	str	w0, [sp, #4096]
  4380d4:	add	x0, sp, #0x28
  4380d8:	ldr	x1, [sp, #4104]
  4380dc:	cmp	x1, x0
  4380e0:	b.eq	4380ec <wcrtomb@plt+0x333dc>  // b.none
  4380e4:	ldr	x0, [sp, #4104]
  4380e8:	bl	404880 <free@plt>
  4380ec:	ldr	w0, [sp, #4100]
  4380f0:	cmn	w0, #0x1
  4380f4:	b.eq	438100 <wcrtomb@plt+0x333f0>  // b.none
  4380f8:	ldr	w0, [sp, #4100]
  4380fc:	b	438264 <wcrtomb@plt+0x33554>
  438100:	ldr	w0, [sp, #4096]
  438104:	cmp	w0, #0x14
  438108:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  43810c:	ldr	w0, [sp, #4096]
  438110:	cmp	w0, #0x2
  438114:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  438118:	ldr	w0, [sp, #4096]
  43811c:	cmp	w0, #0x1
  438120:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  438124:	ldr	w0, [sp, #4096]
  438128:	cmp	w0, #0xd
  43812c:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  438130:	ldr	w0, [sp, #4096]
  438134:	cmp	w0, #0x26
  438138:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  43813c:	ldr	w0, [sp, #4096]
  438140:	cmp	w0, #0x5f
  438144:	b.eq	438160 <wcrtomb@plt+0x33450>  // b.none
  438148:	bl	404bc0 <__errno_location@plt>
  43814c:	mov	x1, x0
  438150:	ldr	w0, [sp, #4096]
  438154:	str	w0, [x1]
  438158:	ldr	w0, [sp, #4100]
  43815c:	b	438264 <wcrtomb@plt+0x33554>
  438160:	add	x0, sp, #0xfe8
  438164:	bl	45a3cc <argp_usage@@Base+0x112e0>
  438168:	cmp	w0, #0x0
  43816c:	b.eq	43817c <wcrtomb@plt+0x3346c>  // b.none
  438170:	bl	404bc0 <__errno_location@plt>
  438174:	ldr	w0, [x0]
  438178:	bl	451a50 <argp_usage@@Base+0x8964>
  43817c:	ldr	w0, [sp, #28]
  438180:	cmp	w0, #0x0
  438184:	b.lt	4381b8 <wcrtomb@plt+0x334a8>  // b.tstop
  438188:	ldr	w0, [sp, #4072]
  43818c:	ldr	w1, [sp, #28]
  438190:	cmp	w1, w0
  438194:	b.ne	4381b8 <wcrtomb@plt+0x334a8>  // b.any
  438198:	add	x0, sp, #0xfe8
  43819c:	bl	45a490 <argp_usage@@Base+0x113a4>
  4381a0:	bl	404bc0 <__errno_location@plt>
  4381a4:	mov	x1, x0
  4381a8:	mov	w0, #0x9                   	// #9
  4381ac:	str	w0, [x1]
  4381b0:	mov	w0, #0xffffffff            	// #-1
  4381b4:	b	438264 <wcrtomb@plt+0x33554>
  4381b8:	ldr	w0, [sp, #28]
  4381bc:	bl	404110 <fchdir@plt>
  4381c0:	cmp	w0, #0x0
  4381c4:	b.eq	4381f4 <wcrtomb@plt+0x334e4>  // b.none
  4381c8:	bl	404bc0 <__errno_location@plt>
  4381cc:	ldr	w0, [x0]
  4381d0:	str	w0, [sp, #4088]
  4381d4:	add	x0, sp, #0xfe8
  4381d8:	bl	45a490 <argp_usage@@Base+0x113a4>
  4381dc:	bl	404bc0 <__errno_location@plt>
  4381e0:	mov	x1, x0
  4381e4:	ldr	w0, [sp, #4088]
  4381e8:	str	w0, [x1]
  4381ec:	mov	w0, #0xffffffff            	// #-1
  4381f0:	b	438264 <wcrtomb@plt+0x33554>
  4381f4:	ldr	x0, [sp, #16]
  4381f8:	bl	404370 <acl_delete_def_file@plt>
  4381fc:	str	w0, [sp, #4092]
  438200:	ldr	w0, [sp, #4092]
  438204:	cmn	w0, #0x1
  438208:	b.ne	438218 <wcrtomb@plt+0x33508>  // b.any
  43820c:	bl	404bc0 <__errno_location@plt>
  438210:	ldr	w0, [x0]
  438214:	b	43821c <wcrtomb@plt+0x3350c>
  438218:	mov	w0, #0x0                   	// #0
  43821c:	str	w0, [sp, #4088]
  438220:	add	x0, sp, #0xfe8
  438224:	bl	45a450 <argp_usage@@Base+0x11364>
  438228:	cmp	w0, #0x0
  43822c:	b.eq	43823c <wcrtomb@plt+0x3352c>  // b.none
  438230:	bl	404bc0 <__errno_location@plt>
  438234:	ldr	w0, [x0]
  438238:	bl	451a8c <argp_usage@@Base+0x89a0>
  43823c:	add	x0, sp, #0xfe8
  438240:	bl	45a490 <argp_usage@@Base+0x113a4>
  438244:	ldr	w0, [sp, #4088]
  438248:	cmp	w0, #0x0
  43824c:	b.eq	438260 <wcrtomb@plt+0x33550>  // b.none
  438250:	bl	404bc0 <__errno_location@plt>
  438254:	mov	x1, x0
  438258:	ldr	w0, [sp, #4088]
  43825c:	str	w0, [x1]
  438260:	ldr	w0, [sp, #4092]
  438264:	ldp	x29, x30, [sp]
  438268:	mov	x12, #0x1010                	// #4112
  43826c:	add	sp, sp, x12
  438270:	ret
  438274:	mov	x12, #0x1020                	// #4128
  438278:	sub	sp, sp, x12
  43827c:	stp	x29, x30, [sp]
  438280:	mov	x29, sp
  438284:	str	w0, [sp, #44]
  438288:	str	x1, [sp, #32]
  43828c:	str	x2, [sp, #24]
  438290:	ldr	w0, [sp, #44]
  438294:	cmn	w0, #0x64
  438298:	b.eq	4382ac <wcrtomb@plt+0x3359c>  // b.none
  43829c:	ldr	x0, [sp, #32]
  4382a0:	ldrb	w0, [x0]
  4382a4:	cmp	w0, #0x2f
  4382a8:	b.ne	4382bc <wcrtomb@plt+0x335ac>  // b.any
  4382ac:	ldr	x1, [sp, #24]
  4382b0:	ldr	x0, [sp, #32]
  4382b4:	bl	44b664 <argp_usage@@Base+0x2578>
  4382b8:	b	43848c <wcrtomb@plt+0x3377c>
  4382bc:	add	x0, sp, #0x38
  4382c0:	ldr	x2, [sp, #32]
  4382c4:	ldr	w1, [sp, #44]
  4382c8:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  4382cc:	str	x0, [sp, #4120]
  4382d0:	ldr	x0, [sp, #4120]
  4382d4:	cmp	x0, #0x0
  4382d8:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  4382dc:	ldr	x1, [sp, #24]
  4382e0:	ldr	x0, [sp, #4120]
  4382e4:	bl	44b664 <argp_usage@@Base+0x2578>
  4382e8:	str	w0, [sp, #4116]
  4382ec:	bl	404bc0 <__errno_location@plt>
  4382f0:	ldr	w0, [x0]
  4382f4:	str	w0, [sp, #4112]
  4382f8:	add	x0, sp, #0x38
  4382fc:	ldr	x1, [sp, #4120]
  438300:	cmp	x1, x0
  438304:	b.eq	438310 <wcrtomb@plt+0x33600>  // b.none
  438308:	ldr	x0, [sp, #4120]
  43830c:	bl	404880 <free@plt>
  438310:	ldr	w0, [sp, #4116]
  438314:	cmn	w0, #0x1
  438318:	b.eq	438324 <wcrtomb@plt+0x33614>  // b.none
  43831c:	ldr	w0, [sp, #4116]
  438320:	b	43848c <wcrtomb@plt+0x3377c>
  438324:	ldr	w0, [sp, #4112]
  438328:	cmp	w0, #0x14
  43832c:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  438330:	ldr	w0, [sp, #4112]
  438334:	cmp	w0, #0x2
  438338:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  43833c:	ldr	w0, [sp, #4112]
  438340:	cmp	w0, #0x1
  438344:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  438348:	ldr	w0, [sp, #4112]
  43834c:	cmp	w0, #0xd
  438350:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  438354:	ldr	w0, [sp, #4112]
  438358:	cmp	w0, #0x26
  43835c:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  438360:	ldr	w0, [sp, #4112]
  438364:	cmp	w0, #0x5f
  438368:	b.eq	438384 <wcrtomb@plt+0x33674>  // b.none
  43836c:	bl	404bc0 <__errno_location@plt>
  438370:	mov	x1, x0
  438374:	ldr	w0, [sp, #4112]
  438378:	str	w0, [x1]
  43837c:	ldr	w0, [sp, #4116]
  438380:	b	43848c <wcrtomb@plt+0x3377c>
  438384:	add	x0, sp, #0xff8
  438388:	bl	45a3cc <argp_usage@@Base+0x112e0>
  43838c:	cmp	w0, #0x0
  438390:	b.eq	4383a0 <wcrtomb@plt+0x33690>  // b.none
  438394:	bl	404bc0 <__errno_location@plt>
  438398:	ldr	w0, [x0]
  43839c:	bl	451a50 <argp_usage@@Base+0x8964>
  4383a0:	ldr	w0, [sp, #44]
  4383a4:	cmp	w0, #0x0
  4383a8:	b.lt	4383dc <wcrtomb@plt+0x336cc>  // b.tstop
  4383ac:	ldr	w0, [sp, #4088]
  4383b0:	ldr	w1, [sp, #44]
  4383b4:	cmp	w1, w0
  4383b8:	b.ne	4383dc <wcrtomb@plt+0x336cc>  // b.any
  4383bc:	add	x0, sp, #0xff8
  4383c0:	bl	45a490 <argp_usage@@Base+0x113a4>
  4383c4:	bl	404bc0 <__errno_location@plt>
  4383c8:	mov	x1, x0
  4383cc:	mov	w0, #0x9                   	// #9
  4383d0:	str	w0, [x1]
  4383d4:	mov	w0, #0xffffffff            	// #-1
  4383d8:	b	43848c <wcrtomb@plt+0x3377c>
  4383dc:	ldr	w0, [sp, #44]
  4383e0:	bl	404110 <fchdir@plt>
  4383e4:	cmp	w0, #0x0
  4383e8:	b.eq	438418 <wcrtomb@plt+0x33708>  // b.none
  4383ec:	bl	404bc0 <__errno_location@plt>
  4383f0:	ldr	w0, [x0]
  4383f4:	str	w0, [sp, #4104]
  4383f8:	add	x0, sp, #0xff8
  4383fc:	bl	45a490 <argp_usage@@Base+0x113a4>
  438400:	bl	404bc0 <__errno_location@plt>
  438404:	mov	x1, x0
  438408:	ldr	w0, [sp, #4104]
  43840c:	str	w0, [x1]
  438410:	mov	w0, #0xffffffff            	// #-1
  438414:	b	43848c <wcrtomb@plt+0x3377c>
  438418:	ldr	x1, [sp, #24]
  43841c:	ldr	x0, [sp, #32]
  438420:	bl	44b664 <argp_usage@@Base+0x2578>
  438424:	str	w0, [sp, #4108]
  438428:	ldr	w0, [sp, #4108]
  43842c:	cmn	w0, #0x1
  438430:	b.ne	438440 <wcrtomb@plt+0x33730>  // b.any
  438434:	bl	404bc0 <__errno_location@plt>
  438438:	ldr	w0, [x0]
  43843c:	b	438444 <wcrtomb@plt+0x33734>
  438440:	mov	w0, #0x0                   	// #0
  438444:	str	w0, [sp, #4104]
  438448:	add	x0, sp, #0xff8
  43844c:	bl	45a450 <argp_usage@@Base+0x11364>
  438450:	cmp	w0, #0x0
  438454:	b.eq	438464 <wcrtomb@plt+0x33754>  // b.none
  438458:	bl	404bc0 <__errno_location@plt>
  43845c:	ldr	w0, [x0]
  438460:	bl	451a8c <argp_usage@@Base+0x89a0>
  438464:	add	x0, sp, #0xff8
  438468:	bl	45a490 <argp_usage@@Base+0x113a4>
  43846c:	ldr	w0, [sp, #4104]
  438470:	cmp	w0, #0x0
  438474:	b.eq	438488 <wcrtomb@plt+0x33778>  // b.none
  438478:	bl	404bc0 <__errno_location@plt>
  43847c:	mov	x1, x0
  438480:	ldr	w0, [sp, #4104]
  438484:	str	w0, [x1]
  438488:	ldr	w0, [sp, #4108]
  43848c:	ldp	x29, x30, [sp]
  438490:	mov	x12, #0x1020                	// #4128
  438494:	add	sp, sp, x12
  438498:	ret
  43849c:	stp	x29, x30, [sp, #-64]!
  4384a0:	mov	x29, sp
  4384a4:	str	w0, [sp, #28]
  4384a8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4384ac:	add	x0, x0, #0x1e0
  4384b0:	add	x2, sp, #0x20
  4384b4:	mov	x3, x0
  4384b8:	ldp	x0, x1, [x3]
  4384bc:	stp	x0, x1, [x2]
  4384c0:	ldp	x0, x1, [x3, #16]
  4384c4:	stp	x0, x1, [x2, #16]
  4384c8:	ldr	w0, [sp, #28]
  4384cc:	and	w0, w0, #0x100
  4384d0:	cmp	w0, #0x0
  4384d4:	b.eq	4384e0 <wcrtomb@plt+0x337d0>  // b.none
  4384d8:	mov	w0, #0x72                  	// #114
  4384dc:	strb	w0, [sp, #38]
  4384e0:	ldr	w0, [sp, #28]
  4384e4:	and	w0, w0, #0x80
  4384e8:	cmp	w0, #0x0
  4384ec:	b.eq	4384f8 <wcrtomb@plt+0x337e8>  // b.none
  4384f0:	mov	w0, #0x77                  	// #119
  4384f4:	strb	w0, [sp, #39]
  4384f8:	ldr	w0, [sp, #28]
  4384fc:	and	w0, w0, #0x40
  438500:	cmp	w0, #0x0
  438504:	b.eq	438510 <wcrtomb@plt+0x33800>  // b.none
  438508:	mov	w0, #0x78                  	// #120
  43850c:	strb	w0, [sp, #40]
  438510:	ldr	w0, [sp, #28]
  438514:	and	w0, w0, #0x20
  438518:	cmp	w0, #0x0
  43851c:	b.eq	438528 <wcrtomb@plt+0x33818>  // b.none
  438520:	mov	w0, #0x72                  	// #114
  438524:	strb	w0, [sp, #49]
  438528:	ldr	w0, [sp, #28]
  43852c:	and	w0, w0, #0x10
  438530:	cmp	w0, #0x0
  438534:	b.eq	438540 <wcrtomb@plt+0x33830>  // b.none
  438538:	mov	w0, #0x77                  	// #119
  43853c:	strb	w0, [sp, #50]
  438540:	ldr	w0, [sp, #28]
  438544:	and	w0, w0, #0x8
  438548:	cmp	w0, #0x0
  43854c:	b.eq	438558 <wcrtomb@plt+0x33848>  // b.none
  438550:	mov	w0, #0x78                  	// #120
  438554:	strb	w0, [sp, #51]
  438558:	ldr	w0, [sp, #28]
  43855c:	and	w0, w0, #0x4
  438560:	cmp	w0, #0x0
  438564:	b.eq	438570 <wcrtomb@plt+0x33860>  // b.none
  438568:	mov	w0, #0x72                  	// #114
  43856c:	strb	w0, [sp, #60]
  438570:	ldr	w0, [sp, #28]
  438574:	and	w0, w0, #0x2
  438578:	cmp	w0, #0x0
  43857c:	b.eq	438588 <wcrtomb@plt+0x33878>  // b.none
  438580:	mov	w0, #0x77                  	// #119
  438584:	strb	w0, [sp, #61]
  438588:	ldr	w0, [sp, #28]
  43858c:	and	w0, w0, #0x1
  438590:	cmp	w0, #0x0
  438594:	b.eq	4385a0 <wcrtomb@plt+0x33890>  // b.none
  438598:	mov	w0, #0x78                  	// #120
  43859c:	strb	w0, [sp, #62]
  4385a0:	add	x0, sp, #0x20
  4385a4:	bl	404ac0 <acl_from_text@plt>
  4385a8:	ldp	x29, x30, [sp], #64
  4385ac:	ret
  4385b0:	stp	x29, x30, [sp, #-32]!
  4385b4:	mov	x29, sp
  4385b8:	str	x0, [sp, #24]
  4385bc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4385c0:	add	x1, x0, #0x200
  4385c4:	ldr	x0, [sp, #24]
  4385c8:	bl	404b60 <strcspn@plt>
  4385cc:	mov	x1, x0
  4385d0:	ldr	x0, [sp, #24]
  4385d4:	add	x0, x0, x1
  4385d8:	str	x0, [sp, #24]
  4385dc:	ldr	x0, [sp, #24]
  4385e0:	ldrb	w0, [x0]
  4385e4:	cmp	w0, #0x3a
  4385e8:	b.eq	4385f4 <wcrtomb@plt+0x338e4>  // b.none
  4385ec:	ldr	x0, [sp, #24]
  4385f0:	b	438668 <wcrtomb@plt+0x33958>
  4385f4:	ldr	x0, [sp, #24]
  4385f8:	add	x0, x0, #0x1
  4385fc:	str	x0, [sp, #24]
  438600:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438604:	add	x1, x0, #0x200
  438608:	ldr	x0, [sp, #24]
  43860c:	bl	404b60 <strcspn@plt>
  438610:	mov	x1, x0
  438614:	ldr	x0, [sp, #24]
  438618:	add	x0, x0, x1
  43861c:	str	x0, [sp, #24]
  438620:	ldr	x0, [sp, #24]
  438624:	ldrb	w0, [x0]
  438628:	cmp	w0, #0x3a
  43862c:	b.eq	438638 <wcrtomb@plt+0x33928>  // b.none
  438630:	ldr	x0, [sp, #24]
  438634:	b	438668 <wcrtomb@plt+0x33958>
  438638:	ldr	x0, [sp, #24]
  43863c:	add	x0, x0, #0x1
  438640:	str	x0, [sp, #24]
  438644:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438648:	add	x1, x0, #0x200
  43864c:	ldr	x0, [sp, #24]
  438650:	bl	404b60 <strcspn@plt>
  438654:	mov	x1, x0
  438658:	ldr	x0, [sp, #24]
  43865c:	add	x0, x0, x1
  438660:	str	x0, [sp, #24]
  438664:	ldr	x0, [sp, #24]
  438668:	ldp	x29, x30, [sp], #32
  43866c:	ret
  438670:	stp	x29, x30, [sp, #-64]!
  438674:	mov	x29, sp
  438678:	str	x0, [sp, #24]
  43867c:	ldr	x0, [sp, #24]
  438680:	str	x0, [sp, #56]
  438684:	ldr	x0, [sp, #24]
  438688:	str	x0, [sp, #48]
  43868c:	b	438758 <wcrtomb@plt+0x33a48>
  438690:	ldr	x0, [sp, #56]
  438694:	str	x0, [sp, #40]
  438698:	str	xzr, [sp, #32]
  43869c:	ldr	x0, [sp, #56]
  4386a0:	bl	4385b0 <wcrtomb@plt+0x338a0>
  4386a4:	str	x0, [sp, #56]
  4386a8:	ldr	x1, [sp, #56]
  4386ac:	ldr	x0, [sp, #40]
  4386b0:	sub	x0, x1, x0
  4386b4:	str	x0, [sp, #32]
  4386b8:	ldr	x1, [sp, #40]
  4386bc:	ldr	x0, [sp, #48]
  4386c0:	cmp	x1, x0
  4386c4:	b.eq	4386d8 <wcrtomb@plt+0x339c8>  // b.none
  4386c8:	ldr	x2, [sp, #32]
  4386cc:	ldr	x1, [sp, #40]
  4386d0:	ldr	x0, [sp, #48]
  4386d4:	bl	404030 <memmove@plt>
  4386d8:	ldr	x1, [sp, #48]
  4386dc:	ldr	x0, [sp, #32]
  4386e0:	add	x0, x1, x0
  4386e4:	str	x0, [sp, #48]
  4386e8:	ldr	x0, [sp, #56]
  4386ec:	ldrb	w0, [x0]
  4386f0:	cmp	w0, #0x3a
  4386f4:	b.ne	438718 <wcrtomb@plt+0x33a08>  // b.any
  4386f8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4386fc:	add	x1, x0, #0x208
  438700:	ldr	x0, [sp, #56]
  438704:	bl	404b60 <strcspn@plt>
  438708:	mov	x1, x0
  43870c:	ldr	x0, [sp, #56]
  438710:	add	x0, x0, x1
  438714:	str	x0, [sp, #56]
  438718:	ldr	x0, [sp, #56]
  43871c:	ldrb	w0, [x0]
  438720:	cmp	w0, #0xa
  438724:	b.eq	438738 <wcrtomb@plt+0x33a28>  // b.none
  438728:	ldr	x0, [sp, #56]
  43872c:	ldrb	w0, [x0]
  438730:	cmp	w0, #0x2c
  438734:	b.ne	438758 <wcrtomb@plt+0x33a48>  // b.any
  438738:	ldr	x1, [sp, #56]
  43873c:	add	x0, x1, #0x1
  438740:	str	x0, [sp, #56]
  438744:	ldr	x0, [sp, #48]
  438748:	add	x2, x0, #0x1
  43874c:	str	x2, [sp, #48]
  438750:	ldrb	w1, [x1]
  438754:	strb	w1, [x0]
  438758:	ldr	x0, [sp, #56]
  43875c:	ldrb	w0, [x0]
  438760:	cmp	w0, #0x0
  438764:	b.ne	438690 <wcrtomb@plt+0x33980>  // b.any
  438768:	ldr	x1, [sp, #56]
  43876c:	ldr	x0, [sp, #48]
  438770:	cmp	x1, x0
  438774:	b.eq	438780 <wcrtomb@plt+0x33a70>  // b.none
  438778:	ldr	x0, [sp, #48]
  43877c:	strb	wzr, [x0]
  438780:	ldr	x0, [sp, #24]
  438784:	ldp	x29, x30, [sp], #64
  438788:	ret
  43878c:	stp	x29, x30, [sp, #-96]!
  438790:	mov	x29, sp
  438794:	str	x19, [sp, #16]
  438798:	str	x0, [sp, #72]
  43879c:	str	x1, [sp, #64]
  4387a0:	str	w2, [sp, #60]
  4387a4:	str	x3, [sp, #48]
  4387a8:	str	x4, [sp, #40]
  4387ac:	strb	w5, [sp, #59]
  4387b0:	ldr	x0, [sp, #48]
  4387b4:	cmp	x0, #0x0
  4387b8:	b.eq	4387d8 <wcrtomb@plt+0x33ac8>  // b.none
  4387bc:	ldr	x0, [sp, #48]
  4387c0:	bl	438670 <wcrtomb@plt+0x33960>
  4387c4:	str	x0, [sp, #48]
  4387c8:	ldr	x0, [sp, #48]
  4387cc:	bl	404ac0 <acl_from_text@plt>
  4387d0:	str	x0, [sp, #88]
  4387d4:	b	438878 <wcrtomb@plt+0x33b68>
  4387d8:	ldrb	w0, [sp, #59]
  4387dc:	cmp	w0, #0x0
  4387e0:	b.eq	438868 <wcrtomb@plt+0x33b58>  // b.none
  4387e4:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  4387e8:	add	x0, x0, #0x8b0
  4387ec:	ldr	w0, [x0]
  4387f0:	ldr	x1, [sp, #64]
  4387f4:	bl	43805c <wcrtomb@plt+0x3334c>
  4387f8:	cmp	w0, #0x0
  4387fc:	b.eq	438930 <wcrtomb@plt+0x33c20>  // b.none
  438800:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  438804:	add	x0, x0, #0x24c
  438808:	ldr	w0, [x0]
  43880c:	and	w0, w0, #0x200000
  438810:	cmp	w0, #0x0
  438814:	b.eq	438930 <wcrtomb@plt+0x33c20>  // b.none
  438818:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43881c:	add	x0, x0, #0x420
  438820:	ldr	x0, [x0]
  438824:	cmp	x0, #0x0
  438828:	b.eq	43883c <wcrtomb@plt+0x33b2c>  // b.none
  43882c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  438830:	add	x0, x0, #0x420
  438834:	ldr	x0, [x0]
  438838:	blr	x0
  43883c:	bl	404bc0 <__errno_location@plt>
  438840:	ldr	w19, [x0]
  438844:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438848:	add	x0, x0, #0x210
  43884c:	bl	404c60 <gettext@plt>
  438850:	ldr	x3, [sp, #64]
  438854:	mov	x2, x0
  438858:	mov	w1, w19
  43885c:	mov	w0, #0x0                   	// #0
  438860:	bl	404100 <error@plt>
  438864:	b	438930 <wcrtomb@plt+0x33c20>
  438868:	ldr	x0, [sp, #72]
  43886c:	ldr	w0, [x0, #104]
  438870:	bl	43849c <wcrtomb@plt+0x3378c>
  438874:	str	x0, [sp, #88]
  438878:	ldr	x0, [sp, #88]
  43887c:	cmp	x0, #0x0
  438880:	b.ne	438898 <wcrtomb@plt+0x33b88>  // b.any
  438884:	ldr	x1, [sp, #64]
  438888:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43888c:	add	x0, x0, #0x258
  438890:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  438894:	b	438934 <wcrtomb@plt+0x33c24>
  438898:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  43889c:	add	x0, x0, #0x8b0
  4388a0:	ldr	w0, [x0]
  4388a4:	ldr	w1, [sp, #60]
  4388a8:	ldr	x3, [sp, #88]
  4388ac:	mov	w2, w1
  4388b0:	ldr	x1, [sp, #64]
  4388b4:	bl	437e24 <wcrtomb@plt+0x33114>
  4388b8:	cmn	w0, #0x1
  4388bc:	b.ne	438924 <wcrtomb@plt+0x33c14>  // b.any
  4388c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4388c4:	add	x0, x0, #0x24c
  4388c8:	ldr	w0, [x0]
  4388cc:	and	w0, w0, #0x200000
  4388d0:	cmp	w0, #0x0
  4388d4:	b.eq	438924 <wcrtomb@plt+0x33c14>  // b.none
  4388d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4388dc:	add	x0, x0, #0x420
  4388e0:	ldr	x0, [x0]
  4388e4:	cmp	x0, #0x0
  4388e8:	b.eq	4388fc <wcrtomb@plt+0x33bec>  // b.none
  4388ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4388f0:	add	x0, x0, #0x420
  4388f4:	ldr	x0, [x0]
  4388f8:	blr	x0
  4388fc:	bl	404bc0 <__errno_location@plt>
  438900:	ldr	w19, [x0]
  438904:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438908:	add	x0, x0, #0x268
  43890c:	bl	404c60 <gettext@plt>
  438910:	ldr	x3, [sp, #64]
  438914:	mov	x2, x0
  438918:	mov	w1, w19
  43891c:	mov	w0, #0x0                   	// #0
  438920:	bl	404100 <error@plt>
  438924:	ldr	x0, [sp, #88]
  438928:	bl	404ce0 <acl_free@plt>
  43892c:	b	438934 <wcrtomb@plt+0x33c24>
  438930:	nop
  438934:	ldr	x19, [sp, #16]
  438938:	ldp	x29, x30, [sp], #96
  43893c:	ret
  438940:	stp	x29, x30, [sp, #-48]!
  438944:	mov	x29, sp
  438948:	str	x0, [sp, #24]
  43894c:	str	x1, [sp, #16]
  438950:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438954:	add	x1, x0, #0x2a0
  438958:	ldr	x0, [sp, #24]
  43895c:	bl	404b60 <strcspn@plt>
  438960:	mov	x1, x0
  438964:	ldr	x0, [sp, #24]
  438968:	add	x0, x0, x1
  43896c:	str	x0, [sp, #32]
  438970:	ldr	x0, [sp, #32]
  438974:	str	x0, [sp, #40]
  438978:	b	4389f0 <wcrtomb@plt+0x33ce0>
  43897c:	ldr	x0, [sp, #32]
  438980:	ldrb	w0, [x0]
  438984:	cmp	w0, #0x9
  438988:	b.ne	43899c <wcrtomb@plt+0x33c8c>  // b.any
  43898c:	ldr	x0, [sp, #32]
  438990:	add	x0, x0, #0x1
  438994:	str	x0, [sp, #32]
  438998:	b	4389f0 <wcrtomb@plt+0x33ce0>
  43899c:	ldr	x0, [sp, #32]
  4389a0:	ldrb	w0, [x0]
  4389a4:	cmp	w0, #0x23
  4389a8:	b.ne	4389d0 <wcrtomb@plt+0x33cc0>  // b.any
  4389ac:	b	4389bc <wcrtomb@plt+0x33cac>
  4389b0:	ldr	x0, [sp, #32]
  4389b4:	add	x0, x0, #0x1
  4389b8:	str	x0, [sp, #32]
  4389bc:	ldr	x0, [sp, #32]
  4389c0:	ldrb	w0, [x0]
  4389c4:	cmp	w0, #0xa
  4389c8:	b.ne	4389b0 <wcrtomb@plt+0x33ca0>  // b.any
  4389cc:	b	4389f0 <wcrtomb@plt+0x33ce0>
  4389d0:	ldr	x1, [sp, #32]
  4389d4:	add	x0, x1, #0x1
  4389d8:	str	x0, [sp, #32]
  4389dc:	ldr	x0, [sp, #40]
  4389e0:	add	x2, x0, #0x1
  4389e4:	str	x2, [sp, #40]
  4389e8:	ldrb	w1, [x1]
  4389ec:	strb	w1, [x0]
  4389f0:	ldr	x0, [sp, #32]
  4389f4:	ldrb	w0, [x0]
  4389f8:	cmp	w0, #0x0
  4389fc:	b.ne	43897c <wcrtomb@plt+0x33c6c>  // b.any
  438a00:	ldr	x1, [sp, #40]
  438a04:	ldr	x0, [sp, #24]
  438a08:	sub	x0, x1, x0
  438a0c:	mov	x1, x0
  438a10:	ldr	x0, [sp, #16]
  438a14:	str	x1, [x0]
  438a18:	ldr	x0, [sp, #40]
  438a1c:	add	x1, x0, #0x1
  438a20:	str	x1, [sp, #40]
  438a24:	strb	wzr, [x0]
  438a28:	nop
  438a2c:	ldp	x29, x30, [sp], #48
  438a30:	ret
  438a34:	stp	x29, x30, [sp, #-80]!
  438a38:	mov	x29, sp
  438a3c:	str	w0, [sp, #60]
  438a40:	str	x1, [sp, #48]
  438a44:	str	x2, [sp, #40]
  438a48:	str	x3, [sp, #32]
  438a4c:	str	x4, [sp, #24]
  438a50:	str	xzr, [sp, #72]
  438a54:	mov	w2, #0x8000                	// #32768
  438a58:	ldr	x1, [sp, #48]
  438a5c:	ldr	w0, [sp, #60]
  438a60:	bl	437bfc <wcrtomb@plt+0x32eec>
  438a64:	str	x0, [sp, #64]
  438a68:	ldr	x0, [sp, #64]
  438a6c:	cmp	x0, #0x0
  438a70:	b.ne	438a98 <wcrtomb@plt+0x33d88>  // b.any
  438a74:	bl	404bc0 <__errno_location@plt>
  438a78:	ldr	w0, [x0]
  438a7c:	cmp	w0, #0x5f
  438a80:	b.eq	438b00 <wcrtomb@plt+0x33df0>  // b.none
  438a84:	ldr	x1, [sp, #48]
  438a88:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438a8c:	add	x0, x0, #0x2a8
  438a90:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  438a94:	b	438b00 <wcrtomb@plt+0x33df0>
  438a98:	mov	x1, #0x0                   	// #0
  438a9c:	ldr	x0, [sp, #64]
  438aa0:	bl	404680 <acl_to_text@plt>
  438aa4:	str	x0, [sp, #72]
  438aa8:	ldr	x0, [sp, #64]
  438aac:	bl	404ce0 <acl_free@plt>
  438ab0:	ldr	x0, [sp, #72]
  438ab4:	cmp	x0, #0x0
  438ab8:	b.ne	438ad0 <wcrtomb@plt+0x33dc0>  // b.any
  438abc:	ldr	x1, [sp, #48]
  438ac0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438ac4:	add	x0, x0, #0x2b8
  438ac8:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  438acc:	b	438b04 <wcrtomb@plt+0x33df4>
  438ad0:	ldr	x0, [sp, #72]
  438ad4:	bl	45b858 <argp_usage@@Base+0x1276c>
  438ad8:	mov	x1, x0
  438adc:	ldr	x0, [sp, #32]
  438ae0:	str	x1, [x0]
  438ae4:	ldr	x0, [sp, #32]
  438ae8:	ldr	x0, [x0]
  438aec:	ldr	x1, [sp, #24]
  438af0:	bl	438940 <wcrtomb@plt+0x33c30>
  438af4:	ldr	x0, [sp, #72]
  438af8:	bl	404ce0 <acl_free@plt>
  438afc:	b	438b04 <wcrtomb@plt+0x33df4>
  438b00:	nop
  438b04:	ldp	x29, x30, [sp], #80
  438b08:	ret
  438b0c:	stp	x29, x30, [sp, #-80]!
  438b10:	mov	x29, sp
  438b14:	str	w0, [sp, #60]
  438b18:	str	x1, [sp, #48]
  438b1c:	str	x2, [sp, #40]
  438b20:	str	x3, [sp, #32]
  438b24:	str	x4, [sp, #24]
  438b28:	str	xzr, [sp, #72]
  438b2c:	mov	w2, #0x4000                	// #16384
  438b30:	ldr	x1, [sp, #48]
  438b34:	ldr	w0, [sp, #60]
  438b38:	bl	437bfc <wcrtomb@plt+0x32eec>
  438b3c:	str	x0, [sp, #64]
  438b40:	ldr	x0, [sp, #64]
  438b44:	cmp	x0, #0x0
  438b48:	b.ne	438b70 <wcrtomb@plt+0x33e60>  // b.any
  438b4c:	bl	404bc0 <__errno_location@plt>
  438b50:	ldr	w0, [x0]
  438b54:	cmp	w0, #0x5f
  438b58:	b.eq	438bd8 <wcrtomb@plt+0x33ec8>  // b.none
  438b5c:	ldr	x1, [sp, #48]
  438b60:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438b64:	add	x0, x0, #0x2a8
  438b68:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  438b6c:	b	438bd8 <wcrtomb@plt+0x33ec8>
  438b70:	mov	x1, #0x0                   	// #0
  438b74:	ldr	x0, [sp, #64]
  438b78:	bl	404680 <acl_to_text@plt>
  438b7c:	str	x0, [sp, #72]
  438b80:	ldr	x0, [sp, #64]
  438b84:	bl	404ce0 <acl_free@plt>
  438b88:	ldr	x0, [sp, #72]
  438b8c:	cmp	x0, #0x0
  438b90:	b.ne	438ba8 <wcrtomb@plt+0x33e98>  // b.any
  438b94:	ldr	x1, [sp, #48]
  438b98:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438b9c:	add	x0, x0, #0x2b8
  438ba0:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  438ba4:	b	438bdc <wcrtomb@plt+0x33ecc>
  438ba8:	ldr	x0, [sp, #72]
  438bac:	bl	45b858 <argp_usage@@Base+0x1276c>
  438bb0:	mov	x1, x0
  438bb4:	ldr	x0, [sp, #32]
  438bb8:	str	x1, [x0]
  438bbc:	ldr	x0, [sp, #32]
  438bc0:	ldr	x0, [x0]
  438bc4:	ldr	x1, [sp, #24]
  438bc8:	bl	438940 <wcrtomb@plt+0x33c30>
  438bcc:	ldr	x0, [sp, #72]
  438bd0:	bl	404ce0 <acl_free@plt>
  438bd4:	b	438bdc <wcrtomb@plt+0x33ecc>
  438bd8:	nop
  438bdc:	ldp	x29, x30, [sp], #80
  438be0:	ret
  438be4:	stp	x29, x30, [sp, #-272]!
  438be8:	mov	x29, sp
  438bec:	str	x0, [sp, #40]
  438bf0:	strb	w1, [sp, #39]
  438bf4:	str	x2, [sp, #24]
  438bf8:	str	x3, [sp, #16]
  438bfc:	ldr	x0, [sp, #40]
  438c00:	bl	4040b0 <strlen@plt>
  438c04:	str	w0, [sp, #264]
  438c08:	ldr	x0, [sp, #24]
  438c0c:	str	x0, [sp, #256]
  438c10:	str	wzr, [sp, #268]
  438c14:	ldr	x0, [sp, #24]
  438c18:	cmp	x0, #0x0
  438c1c:	b.eq	438f8c <wcrtomb@plt+0x3427c>  // b.none
  438c20:	ldr	x0, [sp, #16]
  438c24:	cmp	x0, #0x0
  438c28:	b.eq	438f8c <wcrtomb@plt+0x3427c>  // b.none
  438c2c:	add	x5, sp, #0x30
  438c30:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  438c34:	add	x4, x0, #0x880
  438c38:	adrp	x0, 45b000 <argp_usage@@Base+0x11f14>
  438c3c:	add	x3, x0, #0x6a4
  438c40:	mov	x2, #0x0                   	// #0
  438c44:	mov	x1, #0x0                   	// #0
  438c48:	mov	x0, x5
  438c4c:	bl	45ccf8 <_obstack_begin@@Base>
  438c50:	b	438de8 <wcrtomb@plt+0x340d8>
  438c54:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  438c58:	add	x1, x0, #0x2c8
  438c5c:	ldr	x0, [sp, #24]
  438c60:	bl	404b60 <strcspn@plt>
  438c64:	str	w0, [sp, #252]
  438c68:	ldr	w0, [sp, #252]
  438c6c:	cmp	w0, #0x0
  438c70:	b.eq	438dfc <wcrtomb@plt+0x340ec>  // b.none
  438c74:	ldr	x1, [sp, #256]
  438c78:	ldr	x0, [sp, #24]
  438c7c:	cmp	x1, x0
  438c80:	b.eq	438cd8 <wcrtomb@plt+0x33fc8>  // b.none
  438c84:	add	x0, sp, #0x30
  438c88:	str	x0, [sp, #240]
  438c8c:	ldr	x0, [sp, #240]
  438c90:	str	x0, [sp, #232]
  438c94:	ldr	x0, [sp, #232]
  438c98:	ldr	x1, [x0, #32]
  438c9c:	ldr	x0, [sp, #232]
  438ca0:	ldr	x0, [x0, #24]
  438ca4:	sub	x0, x1, x0
  438ca8:	cmp	x0, #0x0
  438cac:	b.ne	438cbc <wcrtomb@plt+0x33fac>  // b.any
  438cb0:	mov	x1, #0x1                   	// #1
  438cb4:	ldr	x0, [sp, #240]
  438cb8:	bl	45cdc0 <_obstack_newchunk@@Base>
  438cbc:	ldr	x0, [sp, #240]
  438cc0:	ldr	x0, [x0, #24]
  438cc4:	add	x2, x0, #0x1
  438cc8:	ldr	x1, [sp, #240]
  438ccc:	str	x2, [x1, #24]
  438cd0:	ldrb	w1, [sp, #39]
  438cd4:	strb	w1, [x0]
  438cd8:	add	x0, sp, #0x30
  438cdc:	str	x0, [sp, #224]
  438ce0:	ldrsw	x0, [sp, #264]
  438ce4:	str	x0, [sp, #216]
  438ce8:	ldr	x0, [sp, #224]
  438cec:	str	x0, [sp, #208]
  438cf0:	ldr	x0, [sp, #208]
  438cf4:	ldr	x1, [x0, #32]
  438cf8:	ldr	x0, [sp, #208]
  438cfc:	ldr	x0, [x0, #24]
  438d00:	sub	x0, x1, x0
  438d04:	mov	x1, x0
  438d08:	ldr	x0, [sp, #216]
  438d0c:	cmp	x1, x0
  438d10:	b.cs	438d20 <wcrtomb@plt+0x34010>  // b.hs, b.nlast
  438d14:	ldr	x1, [sp, #216]
  438d18:	ldr	x0, [sp, #224]
  438d1c:	bl	45cdc0 <_obstack_newchunk@@Base>
  438d20:	ldr	x0, [sp, #224]
  438d24:	ldr	x0, [x0, #24]
  438d28:	ldr	x2, [sp, #216]
  438d2c:	ldr	x1, [sp, #40]
  438d30:	bl	404020 <memcpy@plt>
  438d34:	ldr	x0, [sp, #224]
  438d38:	ldr	x1, [x0, #24]
  438d3c:	ldr	x0, [sp, #216]
  438d40:	add	x1, x1, x0
  438d44:	ldr	x0, [sp, #224]
  438d48:	str	x1, [x0, #24]
  438d4c:	add	x0, sp, #0x30
  438d50:	str	x0, [sp, #200]
  438d54:	ldrsw	x0, [sp, #252]
  438d58:	str	x0, [sp, #192]
  438d5c:	ldr	x0, [sp, #200]
  438d60:	str	x0, [sp, #184]
  438d64:	ldr	x0, [sp, #184]
  438d68:	ldr	x1, [x0, #32]
  438d6c:	ldr	x0, [sp, #184]
  438d70:	ldr	x0, [x0, #24]
  438d74:	sub	x0, x1, x0
  438d78:	mov	x1, x0
  438d7c:	ldr	x0, [sp, #192]
  438d80:	cmp	x1, x0
  438d84:	b.cs	438d94 <wcrtomb@plt+0x34084>  // b.hs, b.nlast
  438d88:	ldr	x1, [sp, #192]
  438d8c:	ldr	x0, [sp, #200]
  438d90:	bl	45cdc0 <_obstack_newchunk@@Base>
  438d94:	ldr	x0, [sp, #200]
  438d98:	ldr	x0, [x0, #24]
  438d9c:	ldr	x2, [sp, #192]
  438da0:	ldr	x1, [sp, #24]
  438da4:	bl	404020 <memcpy@plt>
  438da8:	ldr	x0, [sp, #200]
  438dac:	ldr	x1, [x0, #24]
  438db0:	ldr	x0, [sp, #192]
  438db4:	add	x1, x1, x0
  438db8:	ldr	x0, [sp, #200]
  438dbc:	str	x1, [x0, #24]
  438dc0:	ldr	w0, [sp, #252]
  438dc4:	add	w0, w0, #0x1
  438dc8:	ldr	w1, [sp, #268]
  438dcc:	add	w0, w1, w0
  438dd0:	str	w0, [sp, #268]
  438dd4:	ldrsw	x0, [sp, #252]
  438dd8:	add	x0, x0, #0x1
  438ddc:	ldr	x1, [sp, #24]
  438de0:	add	x0, x1, x0
  438de4:	str	x0, [sp, #24]
  438de8:	ldrsw	x0, [sp, #268]
  438dec:	ldr	x1, [sp, #16]
  438df0:	cmp	x1, x0
  438df4:	b.cs	438c54 <wcrtomb@plt+0x33f44>  // b.hs, b.nlast
  438df8:	b	438e00 <wcrtomb@plt+0x340f0>
  438dfc:	nop
  438e00:	add	x0, sp, #0x30
  438e04:	str	x0, [sp, #176]
  438e08:	ldr	x0, [sp, #176]
  438e0c:	str	x0, [sp, #168]
  438e10:	ldr	x0, [sp, #168]
  438e14:	ldr	x1, [x0, #32]
  438e18:	ldr	x0, [sp, #168]
  438e1c:	ldr	x0, [x0, #24]
  438e20:	sub	x0, x1, x0
  438e24:	cmp	x0, #0x0
  438e28:	b.ne	438e38 <wcrtomb@plt+0x34128>  // b.any
  438e2c:	mov	x1, #0x1                   	// #1
  438e30:	ldr	x0, [sp, #176]
  438e34:	bl	45cdc0 <_obstack_newchunk@@Base>
  438e38:	ldr	x0, [sp, #176]
  438e3c:	ldr	x0, [x0, #24]
  438e40:	add	x2, x0, #0x1
  438e44:	ldr	x1, [sp, #176]
  438e48:	str	x2, [x1, #24]
  438e4c:	strb	wzr, [x0]
  438e50:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  438e54:	add	x0, x0, #0xf88
  438e58:	ldr	x2, [x0]
  438e5c:	add	x0, sp, #0x30
  438e60:	str	x0, [sp, #160]
  438e64:	ldr	x0, [sp, #160]
  438e68:	ldr	x0, [x0, #16]
  438e6c:	str	x0, [sp, #152]
  438e70:	ldr	x0, [sp, #160]
  438e74:	ldr	x0, [x0, #24]
  438e78:	ldr	x1, [sp, #152]
  438e7c:	cmp	x1, x0
  438e80:	b.ne	438e94 <wcrtomb@plt+0x34184>  // b.any
  438e84:	ldr	x0, [sp, #160]
  438e88:	ldrb	w1, [x0, #80]
  438e8c:	orr	w1, w1, #0x2
  438e90:	strb	w1, [x0, #80]
  438e94:	ldr	x0, [sp, #160]
  438e98:	ldr	x0, [x0, #24]
  438e9c:	mov	x1, x0
  438ea0:	ldr	x0, [sp, #160]
  438ea4:	ldr	x0, [x0, #48]
  438ea8:	add	x1, x1, x0
  438eac:	ldr	x0, [sp, #160]
  438eb0:	ldr	x0, [x0, #48]
  438eb4:	mvn	x0, x0
  438eb8:	and	x0, x1, x0
  438ebc:	mov	x1, x0
  438ec0:	ldr	x0, [sp, #160]
  438ec4:	str	x1, [x0, #24]
  438ec8:	ldr	x0, [sp, #160]
  438ecc:	ldr	x1, [x0, #24]
  438ed0:	ldr	x0, [sp, #160]
  438ed4:	ldr	x0, [x0, #8]
  438ed8:	sub	x0, x1, x0
  438edc:	mov	x3, x0
  438ee0:	ldr	x0, [sp, #160]
  438ee4:	ldr	x1, [x0, #32]
  438ee8:	ldr	x0, [sp, #160]
  438eec:	ldr	x0, [x0, #8]
  438ef0:	sub	x0, x1, x0
  438ef4:	cmp	x3, x0
  438ef8:	b.ls	438f0c <wcrtomb@plt+0x341fc>  // b.plast
  438efc:	ldr	x0, [sp, #160]
  438f00:	ldr	x1, [x0, #32]
  438f04:	ldr	x0, [sp, #160]
  438f08:	str	x1, [x0, #24]
  438f0c:	ldr	x0, [sp, #160]
  438f10:	ldr	x1, [x0, #24]
  438f14:	ldr	x0, [sp, #160]
  438f18:	str	x1, [x0, #16]
  438f1c:	ldr	x0, [sp, #152]
  438f20:	mov	x1, x2
  438f24:	bl	4040c0 <fputs@plt>
  438f28:	add	x0, sp, #0x30
  438f2c:	str	x0, [sp, #144]
  438f30:	str	xzr, [sp, #136]
  438f34:	ldr	x0, [sp, #144]
  438f38:	ldr	x0, [x0, #8]
  438f3c:	ldr	x1, [sp, #136]
  438f40:	cmp	x1, x0
  438f44:	b.ls	438f7c <wcrtomb@plt+0x3426c>  // b.plast
  438f48:	ldr	x0, [sp, #144]
  438f4c:	ldr	x0, [x0, #32]
  438f50:	ldr	x1, [sp, #136]
  438f54:	cmp	x1, x0
  438f58:	b.cs	438f7c <wcrtomb@plt+0x3426c>  // b.hs, b.nlast
  438f5c:	ldr	x0, [sp, #144]
  438f60:	ldr	x1, [sp, #136]
  438f64:	str	x1, [x0, #16]
  438f68:	ldr	x0, [sp, #144]
  438f6c:	ldr	x1, [x0, #16]
  438f70:	ldr	x0, [sp, #144]
  438f74:	str	x1, [x0, #24]
  438f78:	b	438f90 <wcrtomb@plt+0x34280>
  438f7c:	ldr	x1, [sp, #136]
  438f80:	ldr	x0, [sp, #144]
  438f84:	bl	45d05c <_obstack_free@@Base>
  438f88:	b	438f90 <wcrtomb@plt+0x34280>
  438f8c:	nop
  438f90:	ldp	x29, x30, [sp], #272
  438f94:	ret
  438f98:	stp	x29, x30, [sp, #-64]!
  438f9c:	mov	x29, sp
  438fa0:	str	w0, [sp, #44]
  438fa4:	str	x1, [sp, #32]
  438fa8:	str	x2, [sp, #24]
  438fac:	str	w3, [sp, #40]
  438fb0:	str	w4, [sp, #20]
  438fb4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  438fb8:	add	x0, x0, #0x3b0
  438fbc:	ldr	w0, [x0]
  438fc0:	cmp	w0, #0x0
  438fc4:	b.le	439074 <wcrtomb@plt+0x34364>
  438fc8:	ldr	x0, [sp, #24]
  438fcc:	add	x0, x0, #0x58
  438fd0:	mov	x2, x0
  438fd4:	ldr	x1, [sp, #32]
  438fd8:	ldr	w0, [sp, #44]
  438fdc:	bl	438274 <wcrtomb@plt+0x33564>
  438fe0:	str	w0, [sp, #60]
  438fe4:	ldr	w0, [sp, #60]
  438fe8:	cmp	w0, #0x0
  438fec:	b.eq	439070 <wcrtomb@plt+0x34360>  // b.none
  438ff0:	ldr	w0, [sp, #60]
  438ff4:	cmn	w0, #0x1
  438ff8:	b.ne	439010 <wcrtomb@plt+0x34300>  // b.any
  438ffc:	ldr	x1, [sp, #32]
  439000:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439004:	add	x0, x0, #0x2d0
  439008:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43900c:	b	439074 <wcrtomb@plt+0x34364>
  439010:	ldr	x0, [sp, #24]
  439014:	add	x1, x0, #0x38
  439018:	ldr	x0, [sp, #24]
  43901c:	add	x0, x0, #0x40
  439020:	mov	x4, x0
  439024:	mov	x3, x1
  439028:	ldr	x2, [sp, #24]
  43902c:	ldr	x1, [sp, #32]
  439030:	ldr	w0, [sp, #44]
  439034:	bl	438a34 <wcrtomb@plt+0x33d24>
  439038:	ldr	w0, [sp, #20]
  43903c:	cmp	w0, #0x0
  439040:	b.ne	439074 <wcrtomb@plt+0x34364>  // b.any
  439044:	ldr	x0, [sp, #24]
  439048:	add	x1, x0, #0x48
  43904c:	ldr	x0, [sp, #24]
  439050:	add	x0, x0, #0x50
  439054:	mov	x4, x0
  439058:	mov	x3, x1
  43905c:	ldr	x2, [sp, #24]
  439060:	ldr	x1, [sp, #32]
  439064:	ldr	w0, [sp, #44]
  439068:	bl	438b0c <wcrtomb@plt+0x33dfc>
  43906c:	b	439074 <wcrtomb@plt+0x34364>
  439070:	nop
  439074:	ldp	x29, x30, [sp], #64
  439078:	ret
  43907c:	stp	x29, x30, [sp, #-48]!
  439080:	mov	x29, sp
  439084:	str	x0, [sp, #40]
  439088:	str	x1, [sp, #32]
  43908c:	strb	w2, [sp, #31]
  439090:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439094:	add	x0, x0, #0x3b0
  439098:	ldr	w0, [x0]
  43909c:	cmp	w0, #0x0
  4390a0:	b.le	439120 <wcrtomb@plt+0x34410>
  4390a4:	ldrb	w0, [sp, #31]
  4390a8:	cmp	w0, #0x32
  4390ac:	b.eq	439120 <wcrtomb@plt+0x34410>  // b.none
  4390b0:	ldr	x0, [sp, #40]
  4390b4:	ldr	x1, [x0, #56]
  4390b8:	ldr	x0, [sp, #40]
  4390bc:	ldr	x0, [x0, #64]
  4390c0:	mov	w5, #0x0                   	// #0
  4390c4:	mov	x4, x0
  4390c8:	mov	x3, x1
  4390cc:	mov	w2, #0x8000                	// #32768
  4390d0:	ldr	x1, [sp, #32]
  4390d4:	ldr	x0, [sp, #40]
  4390d8:	bl	43878c <wcrtomb@plt+0x33a7c>
  4390dc:	ldrb	w0, [sp, #31]
  4390e0:	cmp	w0, #0x35
  4390e4:	b.eq	4390f4 <wcrtomb@plt+0x343e4>  // b.none
  4390e8:	ldrb	w0, [sp, #31]
  4390ec:	cmp	w0, #0x44
  4390f0:	b.ne	439120 <wcrtomb@plt+0x34410>  // b.any
  4390f4:	ldr	x0, [sp, #40]
  4390f8:	ldr	x1, [x0, #72]
  4390fc:	ldr	x0, [sp, #40]
  439100:	ldr	x0, [x0, #80]
  439104:	mov	w5, #0x1                   	// #1
  439108:	mov	x4, x0
  43910c:	mov	x3, x1
  439110:	mov	w2, #0x4000                	// #16384
  439114:	ldr	x1, [sp, #32]
  439118:	ldr	x0, [sp, #40]
  43911c:	bl	43878c <wcrtomb@plt+0x33a7c>
  439120:	nop
  439124:	ldp	x29, x30, [sp], #48
  439128:	ret
  43912c:	stp	x29, x30, [sp, #-32]!
  439130:	mov	x29, sp
  439134:	str	x0, [sp, #24]
  439138:	ldr	x0, [sp, #24]
  43913c:	ldr	x1, [x0, #16]
  439140:	ldr	x0, [sp, #24]
  439144:	ldr	x0, [x0, #8]
  439148:	cmp	x1, x0
  43914c:	b.ne	439198 <wcrtomb@plt+0x34488>  // b.any
  439150:	ldr	x0, [sp, #24]
  439154:	ldr	x0, [x0, #8]
  439158:	cmp	x0, #0x0
  43915c:	b.ne	43916c <wcrtomb@plt+0x3445c>  // b.any
  439160:	ldr	x0, [sp, #24]
  439164:	mov	x1, #0x4                   	// #4
  439168:	str	x1, [x0, #8]
  43916c:	ldr	x0, [sp, #24]
  439170:	ldr	x3, [x0]
  439174:	ldr	x0, [sp, #24]
  439178:	add	x0, x0, #0x8
  43917c:	mov	x2, #0x8                   	// #8
  439180:	mov	x1, x0
  439184:	mov	x0, x3
  439188:	bl	45b56c <argp_usage@@Base+0x12480>
  43918c:	mov	x1, x0
  439190:	ldr	x0, [sp, #24]
  439194:	str	x1, [x0]
  439198:	nop
  43919c:	ldp	x29, x30, [sp], #32
  4391a0:	ret
  4391a4:	stp	x29, x30, [sp, #-48]!
  4391a8:	mov	x29, sp
  4391ac:	str	x0, [sp, #24]
  4391b0:	strb	w1, [sp, #23]
  4391b4:	ldrb	w0, [sp, #23]
  4391b8:	cmp	w0, #0x0
  4391bc:	b.eq	4391cc <wcrtomb@plt+0x344bc>  // b.none
  4391c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4391c4:	add	x0, x0, #0xd68
  4391c8:	b	4391d4 <wcrtomb@plt+0x344c4>
  4391cc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4391d0:	add	x0, x0, #0xd80
  4391d4:	str	x0, [sp, #40]
  4391d8:	ldr	x0, [sp, #40]
  4391dc:	bl	43912c <wcrtomb@plt+0x3441c>
  4391e0:	ldr	x0, [sp, #40]
  4391e4:	ldr	x1, [x0]
  4391e8:	ldr	x0, [sp, #40]
  4391ec:	ldr	x0, [x0, #16]
  4391f0:	add	x3, x0, #0x1
  4391f4:	ldr	x2, [sp, #40]
  4391f8:	str	x3, [x2, #16]
  4391fc:	lsl	x0, x0, #3
  439200:	add	x0, x1, x0
  439204:	ldr	x1, [sp, #24]
  439208:	str	x1, [x0]
  43920c:	nop
  439210:	ldp	x29, x30, [sp], #48
  439214:	ret
  439218:	stp	x29, x30, [sp, #-32]!
  43921c:	mov	x29, sp
  439220:	str	x0, [sp, #24]
  439224:	ldr	x0, [sp, #24]
  439228:	ldr	x0, [x0, #8]
  43922c:	cmp	x0, #0x0
  439230:	b.eq	439240 <wcrtomb@plt+0x34530>  // b.none
  439234:	ldr	x0, [sp, #24]
  439238:	ldr	x0, [x0]
  43923c:	bl	404880 <free@plt>
  439240:	nop
  439244:	ldp	x29, x30, [sp], #32
  439248:	ret
  43924c:	stp	x29, x30, [sp, #-16]!
  439250:	mov	x29, sp
  439254:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439258:	add	x0, x0, #0xd68
  43925c:	bl	439218 <wcrtomb@plt+0x34508>
  439260:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439264:	add	x0, x0, #0xd80
  439268:	bl	439218 <wcrtomb@plt+0x34508>
  43926c:	nop
  439270:	ldp	x29, x30, [sp], #16
  439274:	ret
  439278:	stp	x29, x30, [sp, #-80]!
  43927c:	mov	x29, sp
  439280:	str	w0, [sp, #44]
  439284:	str	x1, [sp, #32]
  439288:	str	x2, [sp, #24]
  43928c:	str	w3, [sp, #40]
  439290:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439294:	add	x0, x0, #0x2c0
  439298:	ldr	w0, [x0]
  43929c:	cmp	w0, #0x0
  4392a0:	b.le	4395e4 <wcrtomb@plt+0x348d4>
  4392a4:	mov	x0, #0xffffffffffffffff    	// #-1
  4392a8:	str	x0, [sp, #72]
  4392ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4392b0:	add	x0, x0, #0xd98
  4392b4:	ldr	x0, [x0]
  4392b8:	cmp	x0, #0x0
  4392bc:	b.ne	439324 <wcrtomb@plt+0x34614>  // b.any
  4392c0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4392c4:	add	x0, x0, #0xd98
  4392c8:	ldr	x3, [x0]
  4392cc:	mov	x2, #0x1                   	// #1
  4392d0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4392d4:	add	x1, x0, #0x250
  4392d8:	mov	x0, x3
  4392dc:	bl	45b56c <argp_usage@@Base+0x12480>
  4392e0:	mov	x1, x0
  4392e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4392e8:	add	x0, x0, #0xd98
  4392ec:	str	x1, [x0]
  4392f0:	b	439324 <wcrtomb@plt+0x34614>
  4392f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4392f8:	add	x0, x0, #0xd98
  4392fc:	ldr	x3, [x0]
  439300:	mov	x2, #0x1                   	// #1
  439304:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439308:	add	x1, x0, #0x250
  43930c:	mov	x0, x3
  439310:	bl	45b56c <argp_usage@@Base+0x12480>
  439314:	mov	x1, x0
  439318:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43931c:	add	x0, x0, #0xd98
  439320:	str	x1, [x0]
  439324:	ldr	w0, [sp, #40]
  439328:	cmp	w0, #0x0
  43932c:	b.ne	439370 <wcrtomb@plt+0x34660>  // b.any
  439330:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439334:	add	x0, x0, #0xd98
  439338:	ldr	x1, [x0]
  43933c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439340:	add	x0, x0, #0x250
  439344:	ldr	x0, [x0]
  439348:	mov	x3, x0
  43934c:	mov	x2, x1
  439350:	ldr	x1, [sp, #32]
  439354:	ldr	w0, [sp, #44]
  439358:	bl	443384 <wcrtomb@plt+0x3e674>
  43935c:	str	x0, [sp, #72]
  439360:	ldr	x0, [sp, #72]
  439364:	cmn	x0, #0x1
  439368:	b.eq	4393a4 <wcrtomb@plt+0x34694>  // b.none
  43936c:	b	4393b4 <wcrtomb@plt+0x346a4>
  439370:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439374:	add	x0, x0, #0xd98
  439378:	ldr	x1, [x0]
  43937c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439380:	add	x0, x0, #0x250
  439384:	ldr	x0, [x0]
  439388:	mov	x2, x0
  43938c:	ldr	w0, [sp, #40]
  439390:	bl	404a50 <flistxattr@plt>
  439394:	str	x0, [sp, #72]
  439398:	ldr	x0, [sp, #72]
  43939c:	cmn	x0, #0x1
  4393a0:	b.ne	4393b4 <wcrtomb@plt+0x346a4>  // b.any
  4393a4:	bl	404bc0 <__errno_location@plt>
  4393a8:	ldr	w0, [x0]
  4393ac:	cmp	w0, #0x22
  4393b0:	b.eq	4392f4 <wcrtomb@plt+0x345e4>  // b.none
  4393b4:	ldr	x0, [sp, #72]
  4393b8:	cmn	x0, #0x1
  4393bc:	b.ne	4393ec <wcrtomb@plt+0x346dc>  // b.any
  4393c0:	ldr	w0, [sp, #40]
  4393c4:	cmp	w0, #0x0
  4393c8:	b.ne	4393d8 <wcrtomb@plt+0x346c8>  // b.any
  4393cc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4393d0:	add	x0, x0, #0x2e0
  4393d4:	b	4393e0 <wcrtomb@plt+0x346d0>
  4393d8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4393dc:	add	x0, x0, #0x2f0
  4393e0:	ldr	x1, [sp, #32]
  4393e4:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  4393e8:	b	4395e4 <wcrtomb@plt+0x348d4>
  4393ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4393f0:	add	x0, x0, #0xd98
  4393f4:	ldr	x0, [x0]
  4393f8:	str	x0, [sp, #64]
  4393fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439400:	add	x0, x0, #0xda0
  439404:	ldr	x0, [x0]
  439408:	cmp	x0, #0x0
  43940c:	b.ne	4395d8 <wcrtomb@plt+0x348c8>  // b.any
  439410:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439414:	add	x0, x0, #0xda0
  439418:	ldr	x3, [x0]
  43941c:	mov	x2, #0x1                   	// #1
  439420:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439424:	add	x1, x0, #0x258
  439428:	mov	x0, x3
  43942c:	bl	45b56c <argp_usage@@Base+0x12480>
  439430:	mov	x1, x0
  439434:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439438:	add	x0, x0, #0xda0
  43943c:	str	x1, [x0]
  439440:	b	4395d8 <wcrtomb@plt+0x348c8>
  439444:	ldr	x0, [sp, #64]
  439448:	bl	4040b0 <strlen@plt>
  43944c:	str	x0, [sp, #48]
  439450:	str	xzr, [sp, #56]
  439454:	b	439488 <wcrtomb@plt+0x34778>
  439458:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43945c:	add	x0, x0, #0xda0
  439460:	ldr	x3, [x0]
  439464:	mov	x2, #0x1                   	// #1
  439468:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43946c:	add	x1, x0, #0x258
  439470:	mov	x0, x3
  439474:	bl	45b56c <argp_usage@@Base+0x12480>
  439478:	mov	x1, x0
  43947c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439480:	add	x0, x0, #0xda0
  439484:	str	x1, [x0]
  439488:	ldr	w0, [sp, #40]
  43948c:	cmp	w0, #0x0
  439490:	b.ne	4394d8 <wcrtomb@plt+0x347c8>  // b.any
  439494:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439498:	add	x0, x0, #0xda0
  43949c:	ldr	x1, [x0]
  4394a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4394a4:	add	x0, x0, #0x258
  4394a8:	ldr	x0, [x0]
  4394ac:	mov	x4, x0
  4394b0:	mov	x3, x1
  4394b4:	ldr	x2, [sp, #64]
  4394b8:	ldr	x1, [sp, #32]
  4394bc:	ldr	w0, [sp, #44]
  4394c0:	bl	442ef0 <wcrtomb@plt+0x3e1e0>
  4394c4:	str	x0, [sp, #56]
  4394c8:	ldr	x0, [sp, #56]
  4394cc:	cmn	x0, #0x1
  4394d0:	b.eq	439514 <wcrtomb@plt+0x34804>  // b.none
  4394d4:	b	439524 <wcrtomb@plt+0x34814>
  4394d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4394dc:	add	x0, x0, #0xda0
  4394e0:	ldr	x1, [x0]
  4394e4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4394e8:	add	x0, x0, #0x258
  4394ec:	ldr	x0, [x0]
  4394f0:	mov	x3, x0
  4394f4:	mov	x2, x1
  4394f8:	ldr	x1, [sp, #64]
  4394fc:	ldr	w0, [sp, #40]
  439500:	bl	4048e0 <fgetxattr@plt>
  439504:	str	x0, [sp, #56]
  439508:	ldr	x0, [sp, #56]
  43950c:	cmn	x0, #0x1
  439510:	b.ne	439524 <wcrtomb@plt+0x34814>  // b.any
  439514:	bl	404bc0 <__errno_location@plt>
  439518:	ldr	w0, [x0]
  43951c:	cmp	w0, #0x22
  439520:	b.eq	439458 <wcrtomb@plt+0x34748>  // b.none
  439524:	ldr	x0, [sp, #56]
  439528:	cmn	x0, #0x1
  43952c:	b.eq	439578 <wcrtomb@plt+0x34868>  // b.none
  439530:	mov	w1, #0x1                   	// #1
  439534:	ldr	x0, [sp, #64]
  439538:	bl	4399b8 <wcrtomb@plt+0x34ca8>
  43953c:	and	w0, w0, #0xff
  439540:	eor	w0, w0, #0x1
  439544:	and	w0, w0, #0xff
  439548:	cmp	w0, #0x0
  43954c:	b.eq	4395b0 <wcrtomb@plt+0x348a0>  // b.none
  439550:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439554:	add	x0, x0, #0xda0
  439558:	ldr	x0, [x0]
  43955c:	ldr	x1, [sp, #56]
  439560:	mov	x3, x1
  439564:	mov	x2, x0
  439568:	ldr	x1, [sp, #64]
  43956c:	ldr	x0, [sp, #24]
  439570:	bl	4186f8 <wcrtomb@plt+0x139e8>
  439574:	b	4395b0 <wcrtomb@plt+0x348a0>
  439578:	bl	404bc0 <__errno_location@plt>
  43957c:	ldr	w0, [x0]
  439580:	cmp	w0, #0x3d
  439584:	b.eq	4395b0 <wcrtomb@plt+0x348a0>  // b.none
  439588:	ldr	w0, [sp, #40]
  43958c:	cmp	w0, #0x0
  439590:	b.ne	4395a0 <wcrtomb@plt+0x34890>  // b.any
  439594:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439598:	add	x0, x0, #0x300
  43959c:	b	4395a8 <wcrtomb@plt+0x34898>
  4395a0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4395a4:	add	x0, x0, #0x310
  4395a8:	ldr	x1, [sp, #32]
  4395ac:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  4395b0:	ldr	x0, [sp, #48]
  4395b4:	add	x0, x0, #0x1
  4395b8:	ldr	x1, [sp, #64]
  4395bc:	add	x0, x1, x0
  4395c0:	str	x0, [sp, #64]
  4395c4:	ldr	x1, [sp, #72]
  4395c8:	ldr	x0, [sp, #48]
  4395cc:	sub	x0, x1, x0
  4395d0:	sub	x0, x0, #0x1
  4395d4:	str	x0, [sp, #72]
  4395d8:	ldr	x0, [sp, #72]
  4395dc:	cmp	x0, #0x0
  4395e0:	b.gt	439444 <wcrtomb@plt+0x34734>
  4395e4:	nop
  4395e8:	ldp	x29, x30, [sp], #80
  4395ec:	ret
  4395f0:	stp	x29, x30, [sp, #-96]!
  4395f4:	mov	x29, sp
  4395f8:	str	x19, [sp, #16]
  4395fc:	str	x0, [sp, #72]
  439600:	str	x1, [sp, #64]
  439604:	strb	w2, [sp, #63]
  439608:	str	x3, [sp, #48]
  43960c:	str	x4, [sp, #40]
  439610:	str	x5, [sp, #32]
  439614:	ldr	x0, [sp, #40]
  439618:	cmp	x0, #0x0
  43961c:	b.eq	439718 <wcrtomb@plt+0x34a08>  // b.none
  439620:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439624:	add	x0, x0, #0x320
  439628:	str	x0, [sp, #88]
  43962c:	mov	w0, #0xffffffff            	// #-1
  439630:	str	w0, [sp, #84]
  439634:	ldrb	w0, [sp, #63]
  439638:	cmp	w0, #0x32
  43963c:	b.eq	43966c <wcrtomb@plt+0x3495c>  // b.none
  439640:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  439644:	add	x0, x0, #0x8b0
  439648:	ldr	w0, [x0]
  43964c:	mov	w5, #0x0                   	// #0
  439650:	ldr	x4, [sp, #32]
  439654:	ldr	x3, [sp, #40]
  439658:	ldr	x2, [sp, #48]
  43965c:	ldr	x1, [sp, #64]
  439660:	bl	4427bc <wcrtomb@plt+0x3daac>
  439664:	str	w0, [sp, #84]
  439668:	b	4396a0 <wcrtomb@plt+0x34990>
  43966c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439670:	add	x0, x0, #0x330
  439674:	str	x0, [sp, #88]
  439678:	adrp	x0, 4aa000 <_obstack_memory_used@@Base+0x4cec0>
  43967c:	add	x0, x0, #0x8b0
  439680:	ldr	w0, [x0]
  439684:	mov	w5, #0x0                   	// #0
  439688:	ldr	x4, [sp, #32]
  43968c:	ldr	x3, [sp, #40]
  439690:	ldr	x2, [sp, #48]
  439694:	ldr	x1, [sp, #64]
  439698:	bl	442a28 <wcrtomb@plt+0x3dd18>
  43969c:	str	w0, [sp, #84]
  4396a0:	ldr	w0, [sp, #84]
  4396a4:	cmn	w0, #0x1
  4396a8:	b.ne	439718 <wcrtomb@plt+0x34a08>  // b.any
  4396ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4396b0:	add	x0, x0, #0x24c
  4396b4:	ldr	w0, [x0]
  4396b8:	and	w0, w0, #0x200000
  4396bc:	cmp	w0, #0x0
  4396c0:	b.eq	439718 <wcrtomb@plt+0x34a08>  // b.none
  4396c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4396c8:	add	x0, x0, #0x420
  4396cc:	ldr	x0, [x0]
  4396d0:	cmp	x0, #0x0
  4396d4:	b.eq	4396e8 <wcrtomb@plt+0x349d8>  // b.none
  4396d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4396dc:	add	x0, x0, #0x420
  4396e0:	ldr	x0, [x0]
  4396e4:	blr	x0
  4396e8:	bl	404bc0 <__errno_location@plt>
  4396ec:	ldr	w19, [x0]
  4396f0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4396f4:	add	x0, x0, #0x340
  4396f8:	bl	404c60 <gettext@plt>
  4396fc:	ldr	x5, [sp, #64]
  439700:	ldr	x4, [sp, #48]
  439704:	ldr	x3, [sp, #88]
  439708:	mov	x2, x0
  43970c:	mov	w1, w19
  439710:	mov	w0, #0x0                   	// #0
  439714:	bl	404100 <error@plt>
  439718:	nop
  43971c:	ldr	x19, [sp, #16]
  439720:	ldp	x29, x30, [sp], #96
  439724:	ret
  439728:	stp	x29, x30, [sp, #-48]!
  43972c:	mov	x29, sp
  439730:	str	w0, [sp, #44]
  439734:	str	x1, [sp, #32]
  439738:	str	x2, [sp, #24]
  43973c:	str	w3, [sp, #40]
  439740:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439744:	add	x0, x0, #0x408
  439748:	ldr	w0, [x0]
  43974c:	cmp	w0, #0x0
  439750:	b.le	4397b8 <wcrtomb@plt+0x34aa8>
  439754:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439758:	add	x0, x0, #0xda8
  43975c:	ldr	w0, [x0]
  439760:	cmp	w0, #0x0
  439764:	b.ne	4397a8 <wcrtomb@plt+0x34a98>  // b.any
  439768:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43976c:	add	x0, x0, #0x420
  439770:	ldr	x0, [x0]
  439774:	cmp	x0, #0x0
  439778:	b.eq	43978c <wcrtomb@plt+0x34a7c>  // b.none
  43977c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439780:	add	x0, x0, #0x420
  439784:	ldr	x0, [x0]
  439788:	blr	x0
  43978c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439790:	add	x0, x0, #0x378
  439794:	bl	404c60 <gettext@plt>
  439798:	mov	x2, x0
  43979c:	mov	w1, #0x0                   	// #0
  4397a0:	mov	w0, #0x0                   	// #0
  4397a4:	bl	404100 <error@plt>
  4397a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4397ac:	add	x0, x0, #0xda8
  4397b0:	mov	w1, #0x1                   	// #1
  4397b4:	str	w1, [x0]
  4397b8:	nop
  4397bc:	ldp	x29, x30, [sp], #48
  4397c0:	ret
  4397c4:	stp	x29, x30, [sp, #-48]!
  4397c8:	mov	x29, sp
  4397cc:	str	x0, [sp, #40]
  4397d0:	str	x1, [sp, #32]
  4397d4:	strb	w2, [sp, #31]
  4397d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4397dc:	add	x0, x0, #0x408
  4397e0:	ldr	w0, [x0]
  4397e4:	cmp	w0, #0x0
  4397e8:	b.le	439850 <wcrtomb@plt+0x34b40>
  4397ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4397f0:	add	x0, x0, #0xdac
  4397f4:	ldr	w0, [x0]
  4397f8:	cmp	w0, #0x0
  4397fc:	b.ne	439840 <wcrtomb@plt+0x34b30>  // b.any
  439800:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439804:	add	x0, x0, #0x420
  439808:	ldr	x0, [x0]
  43980c:	cmp	x0, #0x0
  439810:	b.eq	439824 <wcrtomb@plt+0x34b14>  // b.none
  439814:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439818:	add	x0, x0, #0x420
  43981c:	ldr	x0, [x0]
  439820:	blr	x0
  439824:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439828:	add	x0, x0, #0x378
  43982c:	bl	404c60 <gettext@plt>
  439830:	mov	x2, x0
  439834:	mov	w1, #0x0                   	// #0
  439838:	mov	w0, #0x0                   	// #0
  43983c:	bl	404100 <error@plt>
  439840:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439844:	add	x0, x0, #0xdac
  439848:	mov	w1, #0x1                   	// #1
  43984c:	str	w1, [x0]
  439850:	nop
  439854:	ldp	x29, x30, [sp], #48
  439858:	ret
  43985c:	stp	x29, x30, [sp, #-48]!
  439860:	mov	x29, sp
  439864:	str	x0, [sp, #24]
  439868:	str	x1, [sp, #16]
  43986c:	ldr	x0, [sp, #16]
  439870:	ldr	x0, [x0, #8]
  439874:	cmp	x0, #0x0
  439878:	b.ne	439884 <wcrtomb@plt+0x34b74>  // b.any
  43987c:	mov	w0, #0x0                   	// #0
  439880:	b	4398e4 <wcrtomb@plt+0x34bd4>
  439884:	str	wzr, [sp, #44]
  439888:	b	4398cc <wcrtomb@plt+0x34bbc>
  43988c:	ldr	x0, [sp, #16]
  439890:	ldr	x1, [x0]
  439894:	ldrsw	x0, [sp, #44]
  439898:	lsl	x0, x0, #3
  43989c:	add	x0, x1, x0
  4398a0:	ldr	x0, [x0]
  4398a4:	mov	w2, #0x0                   	// #0
  4398a8:	ldr	x1, [sp, #24]
  4398ac:	bl	404980 <fnmatch@plt>
  4398b0:	cmp	w0, #0x0
  4398b4:	b.ne	4398c0 <wcrtomb@plt+0x34bb0>  // b.any
  4398b8:	mov	w0, #0x1                   	// #1
  4398bc:	b	4398e4 <wcrtomb@plt+0x34bd4>
  4398c0:	ldr	w0, [sp, #44]
  4398c4:	add	w0, w0, #0x1
  4398c8:	str	w0, [sp, #44]
  4398cc:	ldrsw	x1, [sp, #44]
  4398d0:	ldr	x0, [sp, #16]
  4398d4:	ldr	x0, [x0, #16]
  4398d8:	cmp	x1, x0
  4398dc:	b.cc	43988c <wcrtomb@plt+0x34b7c>  // b.lo, b.ul, b.last
  4398e0:	mov	w0, #0x0                   	// #0
  4398e4:	ldp	x29, x30, [sp], #48
  4398e8:	ret
  4398ec:	stp	x29, x30, [sp, #-32]!
  4398f0:	mov	x29, sp
  4398f4:	str	x0, [sp, #24]
  4398f8:	strb	w1, [sp, #23]
  4398fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439900:	add	x0, x0, #0xd68
  439904:	ldr	x0, [x0, #8]
  439908:	cmp	x0, #0x0
  43990c:	b.eq	439928 <wcrtomb@plt+0x34c18>  // b.none
  439910:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439914:	add	x1, x0, #0xd68
  439918:	ldr	x0, [sp, #24]
  43991c:	bl	43985c <wcrtomb@plt+0x34b4c>
  439920:	and	w0, w0, #0xff
  439924:	b	43995c <wcrtomb@plt+0x34c4c>
  439928:	ldrb	w0, [sp, #23]
  43992c:	cmp	w0, #0x0
  439930:	b.eq	43993c <wcrtomb@plt+0x34c2c>  // b.none
  439934:	mov	w0, #0x1                   	// #1
  439938:	b	43995c <wcrtomb@plt+0x34c4c>
  43993c:	mov	x2, #0x5                   	// #5
  439940:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439944:	add	x1, x0, #0x3a0
  439948:	ldr	x0, [sp, #24]
  43994c:	bl	404480 <strncmp@plt>
  439950:	cmp	w0, #0x0
  439954:	cset	w0, eq  // eq = none
  439958:	and	w0, w0, #0xff
  43995c:	ldp	x29, x30, [sp], #32
  439960:	ret
  439964:	stp	x29, x30, [sp, #-32]!
  439968:	mov	x29, sp
  43996c:	str	x0, [sp, #24]
  439970:	strb	w1, [sp, #23]
  439974:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439978:	add	x0, x0, #0xd68
  43997c:	ldr	x0, [x0, #32]
  439980:	cmp	x0, #0x0
  439984:	b.eq	4399ac <wcrtomb@plt+0x34c9c>  // b.none
  439988:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43998c:	add	x1, x0, #0xd80
  439990:	ldr	x0, [sp, #24]
  439994:	bl	43985c <wcrtomb@plt+0x34b4c>
  439998:	and	w0, w0, #0xff
  43999c:	cmp	w0, #0x0
  4399a0:	b.eq	4399ac <wcrtomb@plt+0x34c9c>  // b.none
  4399a4:	mov	w0, #0x1                   	// #1
  4399a8:	b	4399b0 <wcrtomb@plt+0x34ca0>
  4399ac:	mov	w0, #0x0                   	// #0
  4399b0:	ldp	x29, x30, [sp], #32
  4399b4:	ret
  4399b8:	stp	x29, x30, [sp, #-32]!
  4399bc:	mov	x29, sp
  4399c0:	str	x0, [sp, #24]
  4399c4:	strb	w1, [sp, #23]
  4399c8:	ldrb	w1, [sp, #23]
  4399cc:	ldr	x0, [sp, #24]
  4399d0:	bl	4398ec <wcrtomb@plt+0x34bdc>
  4399d4:	and	w0, w0, #0xff
  4399d8:	cmp	w0, #0x0
  4399dc:	b.eq	4399f8 <wcrtomb@plt+0x34ce8>  // b.none
  4399e0:	ldrb	w1, [sp, #23]
  4399e4:	ldr	x0, [sp, #24]
  4399e8:	bl	439964 <wcrtomb@plt+0x34c54>
  4399ec:	and	w0, w0, #0xff
  4399f0:	cmp	w0, #0x0
  4399f4:	b.eq	439a00 <wcrtomb@plt+0x34cf0>  // b.none
  4399f8:	mov	w0, #0x1                   	// #1
  4399fc:	b	439a04 <wcrtomb@plt+0x34cf4>
  439a00:	mov	w0, #0x0                   	// #0
  439a04:	ldp	x29, x30, [sp], #32
  439a08:	ret
  439a0c:	stp	x29, x30, [sp, #-64]!
  439a10:	mov	x29, sp
  439a14:	str	x0, [sp, #40]
  439a18:	str	x1, [sp, #32]
  439a1c:	strb	w2, [sp, #31]
  439a20:	str	w3, [sp, #24]
  439a24:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439a28:	add	x0, x0, #0x2c0
  439a2c:	ldr	w0, [x0]
  439a30:	cmp	w0, #0x0
  439a34:	b.le	439b70 <wcrtomb@plt+0x34e60>
  439a38:	str	xzr, [sp, #56]
  439a3c:	ldr	x0, [sp, #40]
  439a40:	ldr	x0, [x0, #328]
  439a44:	cmp	x0, #0x0
  439a48:	b.eq	439b6c <wcrtomb@plt+0x34e5c>  // b.none
  439a4c:	b	439b54 <wcrtomb@plt+0x34e44>
  439a50:	ldr	x0, [sp, #40]
  439a54:	ldr	x2, [x0, #336]
  439a58:	ldr	x1, [sp, #56]
  439a5c:	mov	x0, x1
  439a60:	lsl	x0, x0, #1
  439a64:	add	x0, x0, x1
  439a68:	lsl	x0, x0, #3
  439a6c:	add	x0, x2, x0
  439a70:	ldr	x0, [x0]
  439a74:	str	x0, [sp, #48]
  439a78:	ldr	x0, [sp, #48]
  439a7c:	add	x0, x0, #0xd
  439a80:	str	x0, [sp, #48]
  439a84:	ldrb	w0, [sp, #31]
  439a88:	cmp	w0, #0x30
  439a8c:	b.ne	439abc <wcrtomb@plt+0x34dac>  // b.any
  439a90:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439a94:	add	x1, x0, #0x3a8
  439a98:	ldr	x0, [sp, #48]
  439a9c:	bl	4047c0 <strcmp@plt>
  439aa0:	cmp	w0, #0x0
  439aa4:	cset	w0, ne  // ne = any
  439aa8:	and	w0, w0, #0xff
  439aac:	mov	w1, w0
  439ab0:	ldr	w0, [sp, #24]
  439ab4:	cmp	w0, w1
  439ab8:	b.eq	439b3c <wcrtomb@plt+0x34e2c>  // b.none
  439abc:	mov	w1, #0x0                   	// #0
  439ac0:	ldr	x0, [sp, #48]
  439ac4:	bl	4399b8 <wcrtomb@plt+0x34ca8>
  439ac8:	and	w0, w0, #0xff
  439acc:	cmp	w0, #0x0
  439ad0:	b.ne	439b44 <wcrtomb@plt+0x34e34>  // b.any
  439ad4:	ldr	x0, [sp, #40]
  439ad8:	ldr	x2, [x0, #336]
  439adc:	ldr	x1, [sp, #56]
  439ae0:	mov	x0, x1
  439ae4:	lsl	x0, x0, #1
  439ae8:	add	x0, x0, x1
  439aec:	lsl	x0, x0, #3
  439af0:	add	x0, x2, x0
  439af4:	ldr	x3, [x0, #8]
  439af8:	ldr	x0, [sp, #40]
  439afc:	ldr	x2, [x0, #336]
  439b00:	ldr	x1, [sp, #56]
  439b04:	mov	x0, x1
  439b08:	lsl	x0, x0, #1
  439b0c:	add	x0, x0, x1
  439b10:	lsl	x0, x0, #3
  439b14:	add	x0, x2, x0
  439b18:	ldr	x0, [x0, #16]
  439b1c:	mov	x5, x0
  439b20:	mov	x4, x3
  439b24:	ldr	x3, [sp, #48]
  439b28:	ldrb	w2, [sp, #31]
  439b2c:	ldr	x1, [sp, #32]
  439b30:	ldr	x0, [sp, #40]
  439b34:	bl	4395f0 <wcrtomb@plt+0x348e0>
  439b38:	b	439b48 <wcrtomb@plt+0x34e38>
  439b3c:	nop
  439b40:	b	439b48 <wcrtomb@plt+0x34e38>
  439b44:	nop
  439b48:	ldr	x0, [sp, #56]
  439b4c:	add	x0, x0, #0x1
  439b50:	str	x0, [sp, #56]
  439b54:	ldr	x0, [sp, #40]
  439b58:	ldr	x0, [x0, #328]
  439b5c:	ldr	x1, [sp, #56]
  439b60:	cmp	x1, x0
  439b64:	b.cc	439a50 <wcrtomb@plt+0x34d40>  // b.lo, b.ul, b.last
  439b68:	b	439b70 <wcrtomb@plt+0x34e60>
  439b6c:	nop
  439b70:	ldp	x29, x30, [sp], #64
  439b74:	ret
  439b78:	stp	x29, x30, [sp, #-48]!
  439b7c:	mov	x29, sp
  439b80:	str	x0, [sp, #24]
  439b84:	str	x1, [sp, #16]
  439b88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439b8c:	add	x0, x0, #0x2b4
  439b90:	ldr	w0, [x0]
  439b94:	cmp	w0, #0x1
  439b98:	b.gt	439ba8 <wcrtomb@plt+0x34e98>
  439b9c:	ldr	x0, [sp, #16]
  439ba0:	strb	wzr, [x0]
  439ba4:	b	439d14 <wcrtomb@plt+0x35004>
  439ba8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439bac:	add	x0, x0, #0x2c0
  439bb0:	ldr	w0, [x0]
  439bb4:	cmp	w0, #0x0
  439bb8:	b.gt	439be4 <wcrtomb@plt+0x34ed4>
  439bbc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439bc0:	add	x0, x0, #0x408
  439bc4:	ldr	w0, [x0]
  439bc8:	cmp	w0, #0x0
  439bcc:	b.gt	439be4 <wcrtomb@plt+0x34ed4>
  439bd0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439bd4:	add	x0, x0, #0x3b0
  439bd8:	ldr	w0, [x0]
  439bdc:	cmp	w0, #0x0
  439be0:	b.le	439bfc <wcrtomb@plt+0x34eec>
  439be4:	ldr	x0, [sp, #16]
  439be8:	mov	w1, #0x20                  	// #32
  439bec:	strb	w1, [x0]
  439bf0:	ldr	x0, [sp, #16]
  439bf4:	add	x0, x0, #0x1
  439bf8:	strb	wzr, [x0]
  439bfc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439c00:	add	x0, x0, #0x2c0
  439c04:	ldr	w0, [x0]
  439c08:	cmp	w0, #0x0
  439c0c:	b.le	439ca4 <wcrtomb@plt+0x34f94>
  439c10:	ldr	x0, [sp, #24]
  439c14:	ldr	x0, [x0, #328]
  439c18:	cmp	x0, #0x0
  439c1c:	b.eq	439ca4 <wcrtomb@plt+0x34f94>  // b.none
  439c20:	str	wzr, [sp, #44]
  439c24:	b	439c90 <wcrtomb@plt+0x34f80>
  439c28:	ldr	x0, [sp, #24]
  439c2c:	ldr	x2, [x0, #336]
  439c30:	ldrsw	x1, [sp, #44]
  439c34:	mov	x0, x1
  439c38:	lsl	x0, x0, #1
  439c3c:	add	x0, x0, x1
  439c40:	lsl	x0, x0, #3
  439c44:	add	x0, x2, x0
  439c48:	ldr	x0, [x0]
  439c4c:	add	x0, x0, #0xd
  439c50:	str	x0, [sp, #32]
  439c54:	mov	w1, #0x0                   	// #0
  439c58:	ldr	x0, [sp, #32]
  439c5c:	bl	4399b8 <wcrtomb@plt+0x34ca8>
  439c60:	and	w0, w0, #0xff
  439c64:	eor	w0, w0, #0x1
  439c68:	and	w0, w0, #0xff
  439c6c:	cmp	w0, #0x0
  439c70:	b.eq	439c84 <wcrtomb@plt+0x34f74>  // b.none
  439c74:	ldr	x0, [sp, #16]
  439c78:	mov	w1, #0x2a                  	// #42
  439c7c:	strb	w1, [x0]
  439c80:	b	439ca4 <wcrtomb@plt+0x34f94>
  439c84:	ldr	w0, [sp, #44]
  439c88:	add	w0, w0, #0x1
  439c8c:	str	w0, [sp, #44]
  439c90:	ldrsw	x1, [sp, #44]
  439c94:	ldr	x0, [sp, #24]
  439c98:	ldr	x0, [x0, #328]
  439c9c:	cmp	x1, x0
  439ca0:	b.cc	439c28 <wcrtomb@plt+0x34f18>  // b.lo, b.ul, b.last
  439ca4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439ca8:	add	x0, x0, #0x408
  439cac:	ldr	w0, [x0]
  439cb0:	cmp	w0, #0x0
  439cb4:	b.le	439cd4 <wcrtomb@plt+0x34fc4>
  439cb8:	ldr	x0, [sp, #24]
  439cbc:	ldr	x0, [x0, #48]
  439cc0:	cmp	x0, #0x0
  439cc4:	b.eq	439cd4 <wcrtomb@plt+0x34fc4>  // b.none
  439cc8:	ldr	x0, [sp, #16]
  439ccc:	mov	w1, #0x2e                  	// #46
  439cd0:	strb	w1, [x0]
  439cd4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439cd8:	add	x0, x0, #0x3b0
  439cdc:	ldr	w0, [x0]
  439ce0:	cmp	w0, #0x0
  439ce4:	b.le	439d14 <wcrtomb@plt+0x35004>
  439ce8:	ldr	x0, [sp, #24]
  439cec:	ldr	x0, [x0, #64]
  439cf0:	cmp	x0, #0x0
  439cf4:	b.ne	439d08 <wcrtomb@plt+0x34ff8>  // b.any
  439cf8:	ldr	x0, [sp, #24]
  439cfc:	ldr	x0, [x0, #80]
  439d00:	cmp	x0, #0x0
  439d04:	b.eq	439d14 <wcrtomb@plt+0x35004>  // b.none
  439d08:	ldr	x0, [sp, #16]
  439d0c:	mov	w1, #0x2b                  	// #43
  439d10:	strb	w1, [x0]
  439d14:	ldp	x29, x30, [sp], #48
  439d18:	ret
  439d1c:	stp	x29, x30, [sp, #-48]!
  439d20:	mov	x29, sp
  439d24:	str	x0, [sp, #24]
  439d28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439d2c:	add	x0, x0, #0x2b4
  439d30:	ldr	w0, [x0]
  439d34:	cmp	w0, #0x2
  439d38:	b.le	439f64 <wcrtomb@plt+0x35254>
  439d3c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439d40:	add	x0, x0, #0x408
  439d44:	ldr	w0, [x0]
  439d48:	cmp	w0, #0x0
  439d4c:	b.le	439d88 <wcrtomb@plt+0x35078>
  439d50:	ldr	x0, [sp, #24]
  439d54:	ldr	x0, [x0, #48]
  439d58:	cmp	x0, #0x0
  439d5c:	b.eq	439d88 <wcrtomb@plt+0x35078>  // b.none
  439d60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439d64:	add	x0, x0, #0xf88
  439d68:	ldr	x3, [x0]
  439d6c:	ldr	x0, [sp, #24]
  439d70:	ldr	x0, [x0, #48]
  439d74:	mov	x2, x0
  439d78:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439d7c:	add	x1, x0, #0x3c0
  439d80:	mov	x0, x3
  439d84:	bl	404c90 <fprintf@plt>
  439d88:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439d8c:	add	x0, x0, #0x3b0
  439d90:	ldr	w0, [x0]
  439d94:	cmp	w0, #0x0
  439d98:	b.le	439e80 <wcrtomb@plt+0x35170>
  439d9c:	ldr	x0, [sp, #24]
  439da0:	ldr	x0, [x0, #64]
  439da4:	cmp	x0, #0x0
  439da8:	b.ne	439dbc <wcrtomb@plt+0x350ac>  // b.any
  439dac:	ldr	x0, [sp, #24]
  439db0:	ldr	x0, [x0, #80]
  439db4:	cmp	x0, #0x0
  439db8:	b.eq	439e80 <wcrtomb@plt+0x35170>  // b.none
  439dbc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439dc0:	add	x0, x0, #0xf88
  439dc4:	ldr	x0, [x0]
  439dc8:	mov	x3, x0
  439dcc:	mov	x2, #0x5                   	// #5
  439dd0:	mov	x1, #0x1                   	// #1
  439dd4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439dd8:	add	x0, x0, #0x3d0
  439ddc:	bl	404970 <fwrite@plt>
  439de0:	ldr	x0, [sp, #24]
  439de4:	ldr	x1, [x0, #56]
  439de8:	ldr	x0, [sp, #24]
  439dec:	ldr	x0, [x0, #64]
  439df0:	mov	x3, x0
  439df4:	mov	x2, x1
  439df8:	mov	w1, #0x2c                  	// #44
  439dfc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439e00:	add	x0, x0, #0x3d8
  439e04:	bl	438be4 <wcrtomb@plt+0x33ed4>
  439e08:	ldr	x0, [sp, #24]
  439e0c:	ldr	x0, [x0, #64]
  439e10:	cmp	x0, #0x0
  439e14:	b.eq	439e40 <wcrtomb@plt+0x35130>  // b.none
  439e18:	ldr	x0, [sp, #24]
  439e1c:	ldr	x0, [x0, #80]
  439e20:	cmp	x0, #0x0
  439e24:	b.eq	439e40 <wcrtomb@plt+0x35130>  // b.none
  439e28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439e2c:	add	x0, x0, #0xf88
  439e30:	ldr	x0, [x0]
  439e34:	mov	x1, x0
  439e38:	mov	w0, #0x2c                  	// #44
  439e3c:	bl	404250 <fputc@plt>
  439e40:	ldr	x0, [sp, #24]
  439e44:	ldr	x1, [x0, #72]
  439e48:	ldr	x0, [sp, #24]
  439e4c:	ldr	x0, [x0, #80]
  439e50:	mov	x3, x0
  439e54:	mov	x2, x1
  439e58:	mov	w1, #0x2c                  	// #44
  439e5c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439e60:	add	x0, x0, #0x3e0
  439e64:	bl	438be4 <wcrtomb@plt+0x33ed4>
  439e68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439e6c:	add	x0, x0, #0xf88
  439e70:	ldr	x0, [x0]
  439e74:	mov	x1, x0
  439e78:	mov	w0, #0xa                   	// #10
  439e7c:	bl	404250 <fputc@plt>
  439e80:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  439e84:	add	x0, x0, #0x2c0
  439e88:	ldr	w0, [x0]
  439e8c:	cmp	w0, #0x0
  439e90:	b.le	439f68 <wcrtomb@plt+0x35258>
  439e94:	ldr	x0, [sp, #24]
  439e98:	ldr	x0, [x0, #328]
  439e9c:	cmp	x0, #0x0
  439ea0:	b.eq	439f68 <wcrtomb@plt+0x35258>  // b.none
  439ea4:	str	wzr, [sp, #44]
  439ea8:	b	439f4c <wcrtomb@plt+0x3523c>
  439eac:	ldr	x0, [sp, #24]
  439eb0:	ldr	x2, [x0, #336]
  439eb4:	ldrsw	x1, [sp, #44]
  439eb8:	mov	x0, x1
  439ebc:	lsl	x0, x0, #1
  439ec0:	add	x0, x0, x1
  439ec4:	lsl	x0, x0, #3
  439ec8:	add	x0, x2, x0
  439ecc:	ldr	x0, [x0]
  439ed0:	add	x0, x0, #0xd
  439ed4:	str	x0, [sp, #32]
  439ed8:	mov	w1, #0x0                   	// #0
  439edc:	ldr	x0, [sp, #32]
  439ee0:	bl	4399b8 <wcrtomb@plt+0x34ca8>
  439ee4:	and	w0, w0, #0xff
  439ee8:	eor	w0, w0, #0x1
  439eec:	and	w0, w0, #0xff
  439ef0:	cmp	w0, #0x0
  439ef4:	b.eq	439f40 <wcrtomb@plt+0x35230>  // b.none
  439ef8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  439efc:	add	x0, x0, #0xf88
  439f00:	ldr	x4, [x0]
  439f04:	ldr	x0, [sp, #24]
  439f08:	ldr	x2, [x0, #336]
  439f0c:	ldrsw	x1, [sp, #44]
  439f10:	mov	x0, x1
  439f14:	lsl	x0, x0, #1
  439f18:	add	x0, x0, x1
  439f1c:	lsl	x0, x0, #3
  439f20:	add	x0, x2, x0
  439f24:	ldr	x0, [x0, #16]
  439f28:	ldr	x3, [sp, #32]
  439f2c:	mov	x2, x0
  439f30:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  439f34:	add	x1, x0, #0x3f0
  439f38:	mov	x0, x4
  439f3c:	bl	404c90 <fprintf@plt>
  439f40:	ldr	w0, [sp, #44]
  439f44:	add	w0, w0, #0x1
  439f48:	str	w0, [sp, #44]
  439f4c:	ldrsw	x1, [sp, #44]
  439f50:	ldr	x0, [sp, #24]
  439f54:	ldr	x0, [x0, #328]
  439f58:	cmp	x1, x0
  439f5c:	b.cc	439eac <wcrtomb@plt+0x3519c>  // b.lo, b.ul, b.last
  439f60:	b	439f68 <wcrtomb@plt+0x35258>
  439f64:	nop
  439f68:	ldp	x29, x30, [sp], #48
  439f6c:	ret
  439f70:	sub	sp, sp, #0x10
  439f74:	str	w0, [sp, #12]
  439f78:	str	x1, [sp]
  439f7c:	ldr	w0, [sp, #12]
  439f80:	and	w0, w0, #0x100
  439f84:	cmp	w0, #0x0
  439f88:	b.eq	439f94 <wcrtomb@plt+0x35284>  // b.none
  439f8c:	mov	w1, #0x72                  	// #114
  439f90:	b	439f98 <wcrtomb@plt+0x35288>
  439f94:	mov	w1, #0x2d                  	// #45
  439f98:	ldr	x0, [sp]
  439f9c:	add	x2, x0, #0x1
  439fa0:	str	x2, [sp]
  439fa4:	strb	w1, [x0]
  439fa8:	ldr	w0, [sp, #12]
  439fac:	and	w0, w0, #0x80
  439fb0:	cmp	w0, #0x0
  439fb4:	b.eq	439fc0 <wcrtomb@plt+0x352b0>  // b.none
  439fb8:	mov	w1, #0x77                  	// #119
  439fbc:	b	439fc4 <wcrtomb@plt+0x352b4>
  439fc0:	mov	w1, #0x2d                  	// #45
  439fc4:	ldr	x0, [sp]
  439fc8:	add	x2, x0, #0x1
  439fcc:	str	x2, [sp]
  439fd0:	strb	w1, [x0]
  439fd4:	ldr	w0, [sp, #12]
  439fd8:	and	w0, w0, #0x800
  439fdc:	cmp	w0, #0x0
  439fe0:	b.eq	43a004 <wcrtomb@plt+0x352f4>  // b.none
  439fe4:	ldr	w0, [sp, #12]
  439fe8:	and	w0, w0, #0x40
  439fec:	cmp	w0, #0x0
  439ff0:	b.eq	439ffc <wcrtomb@plt+0x352ec>  // b.none
  439ff4:	mov	w0, #0x73                  	// #115
  439ff8:	b	43a020 <wcrtomb@plt+0x35310>
  439ffc:	mov	w0, #0x53                  	// #83
  43a000:	b	43a020 <wcrtomb@plt+0x35310>
  43a004:	ldr	w0, [sp, #12]
  43a008:	and	w0, w0, #0x40
  43a00c:	cmp	w0, #0x0
  43a010:	b.eq	43a01c <wcrtomb@plt+0x3530c>  // b.none
  43a014:	mov	w0, #0x78                  	// #120
  43a018:	b	43a020 <wcrtomb@plt+0x35310>
  43a01c:	mov	w0, #0x2d                  	// #45
  43a020:	ldr	x1, [sp]
  43a024:	add	x2, x1, #0x1
  43a028:	str	x2, [sp]
  43a02c:	strb	w0, [x1]
  43a030:	ldr	w0, [sp, #12]
  43a034:	and	w0, w0, #0x20
  43a038:	cmp	w0, #0x0
  43a03c:	b.eq	43a048 <wcrtomb@plt+0x35338>  // b.none
  43a040:	mov	w1, #0x72                  	// #114
  43a044:	b	43a04c <wcrtomb@plt+0x3533c>
  43a048:	mov	w1, #0x2d                  	// #45
  43a04c:	ldr	x0, [sp]
  43a050:	add	x2, x0, #0x1
  43a054:	str	x2, [sp]
  43a058:	strb	w1, [x0]
  43a05c:	ldr	w0, [sp, #12]
  43a060:	and	w0, w0, #0x10
  43a064:	cmp	w0, #0x0
  43a068:	b.eq	43a074 <wcrtomb@plt+0x35364>  // b.none
  43a06c:	mov	w1, #0x77                  	// #119
  43a070:	b	43a078 <wcrtomb@plt+0x35368>
  43a074:	mov	w1, #0x2d                  	// #45
  43a078:	ldr	x0, [sp]
  43a07c:	add	x2, x0, #0x1
  43a080:	str	x2, [sp]
  43a084:	strb	w1, [x0]
  43a088:	ldr	w0, [sp, #12]
  43a08c:	and	w0, w0, #0x400
  43a090:	cmp	w0, #0x0
  43a094:	b.eq	43a0b8 <wcrtomb@plt+0x353a8>  // b.none
  43a098:	ldr	w0, [sp, #12]
  43a09c:	and	w0, w0, #0x8
  43a0a0:	cmp	w0, #0x0
  43a0a4:	b.eq	43a0b0 <wcrtomb@plt+0x353a0>  // b.none
  43a0a8:	mov	w0, #0x73                  	// #115
  43a0ac:	b	43a0d4 <wcrtomb@plt+0x353c4>
  43a0b0:	mov	w0, #0x53                  	// #83
  43a0b4:	b	43a0d4 <wcrtomb@plt+0x353c4>
  43a0b8:	ldr	w0, [sp, #12]
  43a0bc:	and	w0, w0, #0x8
  43a0c0:	cmp	w0, #0x0
  43a0c4:	b.eq	43a0d0 <wcrtomb@plt+0x353c0>  // b.none
  43a0c8:	mov	w0, #0x78                  	// #120
  43a0cc:	b	43a0d4 <wcrtomb@plt+0x353c4>
  43a0d0:	mov	w0, #0x2d                  	// #45
  43a0d4:	ldr	x1, [sp]
  43a0d8:	add	x2, x1, #0x1
  43a0dc:	str	x2, [sp]
  43a0e0:	strb	w0, [x1]
  43a0e4:	ldr	w0, [sp, #12]
  43a0e8:	and	w0, w0, #0x4
  43a0ec:	cmp	w0, #0x0
  43a0f0:	b.eq	43a0fc <wcrtomb@plt+0x353ec>  // b.none
  43a0f4:	mov	w1, #0x72                  	// #114
  43a0f8:	b	43a100 <wcrtomb@plt+0x353f0>
  43a0fc:	mov	w1, #0x2d                  	// #45
  43a100:	ldr	x0, [sp]
  43a104:	add	x2, x0, #0x1
  43a108:	str	x2, [sp]
  43a10c:	strb	w1, [x0]
  43a110:	ldr	w0, [sp, #12]
  43a114:	and	w0, w0, #0x2
  43a118:	cmp	w0, #0x0
  43a11c:	b.eq	43a128 <wcrtomb@plt+0x35418>  // b.none
  43a120:	mov	w1, #0x77                  	// #119
  43a124:	b	43a12c <wcrtomb@plt+0x3541c>
  43a128:	mov	w1, #0x2d                  	// #45
  43a12c:	ldr	x0, [sp]
  43a130:	add	x2, x0, #0x1
  43a134:	str	x2, [sp]
  43a138:	strb	w1, [x0]
  43a13c:	ldr	w0, [sp, #12]
  43a140:	and	w0, w0, #0x200
  43a144:	cmp	w0, #0x0
  43a148:	b.eq	43a16c <wcrtomb@plt+0x3545c>  // b.none
  43a14c:	ldr	w0, [sp, #12]
  43a150:	and	w0, w0, #0x1
  43a154:	cmp	w0, #0x0
  43a158:	b.eq	43a164 <wcrtomb@plt+0x35454>  // b.none
  43a15c:	mov	w0, #0x74                  	// #116
  43a160:	b	43a188 <wcrtomb@plt+0x35478>
  43a164:	mov	w0, #0x54                  	// #84
  43a168:	b	43a188 <wcrtomb@plt+0x35478>
  43a16c:	ldr	w0, [sp, #12]
  43a170:	and	w0, w0, #0x1
  43a174:	cmp	w0, #0x0
  43a178:	b.eq	43a184 <wcrtomb@plt+0x35474>  // b.none
  43a17c:	mov	w0, #0x78                  	// #120
  43a180:	b	43a188 <wcrtomb@plt+0x35478>
  43a184:	mov	w0, #0x2d                  	// #45
  43a188:	ldr	x1, [sp]
  43a18c:	add	x2, x1, #0x1
  43a190:	str	x2, [sp]
  43a194:	strb	w0, [x1]
  43a198:	ldr	x0, [sp]
  43a19c:	strb	wzr, [x0]
  43a1a0:	nop
  43a1a4:	add	sp, sp, #0x10
  43a1a8:	ret
  43a1ac:	stp	x29, x30, [sp, #-64]!
  43a1b0:	mov	x29, sp
  43a1b4:	str	x19, [sp, #16]
  43a1b8:	str	x0, [sp, #40]
  43a1bc:	str	x1, [sp, #32]
  43a1c0:	bl	404bc0 <__errno_location@plt>
  43a1c4:	ldr	w0, [x0]
  43a1c8:	str	w0, [sp, #60]
  43a1cc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a1d0:	add	x0, x0, #0x420
  43a1d4:	ldr	x0, [x0]
  43a1d8:	cmp	x0, #0x0
  43a1dc:	b.eq	43a1f0 <wcrtomb@plt+0x354e0>  // b.none
  43a1e0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a1e4:	add	x0, x0, #0x420
  43a1e8:	ldr	x0, [x0]
  43a1ec:	blr	x0
  43a1f0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a1f4:	add	x0, x0, #0x400
  43a1f8:	bl	404c60 <gettext@plt>
  43a1fc:	mov	x19, x0
  43a200:	ldr	x0, [sp, #32]
  43a204:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a208:	ldr	x4, [sp, #40]
  43a20c:	mov	x3, x0
  43a210:	mov	x2, x19
  43a214:	ldr	w1, [sp, #60]
  43a218:	mov	w0, #0x0                   	// #0
  43a21c:	bl	404100 <error@plt>
  43a220:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43a224:	add	x0, x0, #0xdb0
  43a228:	mov	w1, #0x2                   	// #2
  43a22c:	str	w1, [x0]
  43a230:	nop
  43a234:	ldr	x19, [sp, #16]
  43a238:	ldp	x29, x30, [sp], #64
  43a23c:	ret
  43a240:	stp	x29, x30, [sp, #-64]!
  43a244:	mov	x29, sp
  43a248:	str	x19, [sp, #16]
  43a24c:	str	x0, [sp, #40]
  43a250:	str	x1, [sp, #32]
  43a254:	bl	404bc0 <__errno_location@plt>
  43a258:	ldr	w0, [x0]
  43a25c:	str	w0, [sp, #60]
  43a260:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a264:	add	x0, x0, #0x420
  43a268:	ldr	x0, [x0]
  43a26c:	cmp	x0, #0x0
  43a270:	b.eq	43a284 <wcrtomb@plt+0x35574>  // b.none
  43a274:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a278:	add	x0, x0, #0x420
  43a27c:	ldr	x0, [x0]
  43a280:	blr	x0
  43a284:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a288:	add	x0, x0, #0x400
  43a28c:	bl	404c60 <gettext@plt>
  43a290:	mov	x19, x0
  43a294:	ldr	x0, [sp, #32]
  43a298:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a29c:	ldr	x4, [sp, #40]
  43a2a0:	mov	x3, x0
  43a2a4:	mov	x2, x19
  43a2a8:	ldr	w1, [sp, #60]
  43a2ac:	mov	w0, #0x0                   	// #0
  43a2b0:	bl	404100 <error@plt>
  43a2b4:	bl	412ae0 <wcrtomb@plt+0xddd0>
  43a2b8:	stp	x29, x30, [sp, #-64]!
  43a2bc:	mov	x29, sp
  43a2c0:	str	x19, [sp, #16]
  43a2c4:	str	x0, [sp, #40]
  43a2c8:	str	x1, [sp, #32]
  43a2cc:	bl	404bc0 <__errno_location@plt>
  43a2d0:	ldr	w0, [x0]
  43a2d4:	str	w0, [sp, #60]
  43a2d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a2dc:	add	x0, x0, #0x420
  43a2e0:	ldr	x0, [x0]
  43a2e4:	cmp	x0, #0x0
  43a2e8:	b.eq	43a2fc <wcrtomb@plt+0x355ec>  // b.none
  43a2ec:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a2f0:	add	x0, x0, #0x420
  43a2f4:	ldr	x0, [x0]
  43a2f8:	blr	x0
  43a2fc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a300:	add	x0, x0, #0x410
  43a304:	bl	404c60 <gettext@plt>
  43a308:	mov	x19, x0
  43a30c:	ldr	x0, [sp, #32]
  43a310:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a314:	ldr	x4, [sp, #40]
  43a318:	mov	x3, x0
  43a31c:	mov	x2, x19
  43a320:	ldr	w1, [sp, #60]
  43a324:	mov	w0, #0x0                   	// #0
  43a328:	bl	404100 <error@plt>
  43a32c:	nop
  43a330:	ldr	x19, [sp, #16]
  43a334:	ldp	x29, x30, [sp], #64
  43a338:	ret
  43a33c:	stp	x29, x30, [sp, #-64]!
  43a340:	mov	x29, sp
  43a344:	str	x19, [sp, #16]
  43a348:	str	x0, [sp, #40]
  43a34c:	str	w1, [sp, #36]
  43a350:	bl	404bc0 <__errno_location@plt>
  43a354:	ldr	w0, [x0]
  43a358:	str	w0, [sp, #60]
  43a35c:	add	x0, sp, #0x30
  43a360:	mov	x1, x0
  43a364:	ldr	w0, [sp, #36]
  43a368:	bl	439f70 <wcrtomb@plt+0x35260>
  43a36c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a370:	add	x0, x0, #0x420
  43a374:	ldr	x0, [x0]
  43a378:	cmp	x0, #0x0
  43a37c:	b.eq	43a390 <wcrtomb@plt+0x35680>  // b.none
  43a380:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a384:	add	x0, x0, #0x420
  43a388:	ldr	x0, [x0]
  43a38c:	blr	x0
  43a390:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a394:	add	x0, x0, #0x428
  43a398:	bl	404c60 <gettext@plt>
  43a39c:	mov	x19, x0
  43a3a0:	ldr	x0, [sp, #40]
  43a3a4:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a3a8:	mov	x1, x0
  43a3ac:	add	x0, sp, #0x30
  43a3b0:	mov	x4, x0
  43a3b4:	mov	x3, x1
  43a3b8:	mov	x2, x19
  43a3bc:	ldr	w1, [sp, #60]
  43a3c0:	mov	w0, #0x0                   	// #0
  43a3c4:	bl	404100 <error@plt>
  43a3c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43a3cc:	add	x0, x0, #0xdb0
  43a3d0:	mov	w1, #0x2                   	// #2
  43a3d4:	str	w1, [x0]
  43a3d8:	nop
  43a3dc:	ldr	x19, [sp, #16]
  43a3e0:	ldp	x29, x30, [sp], #64
  43a3e4:	ret
  43a3e8:	stp	x29, x30, [sp, #-64]!
  43a3ec:	mov	x29, sp
  43a3f0:	str	x19, [sp, #16]
  43a3f4:	str	x0, [sp, #40]
  43a3f8:	str	w1, [sp, #36]
  43a3fc:	str	w2, [sp, #32]
  43a400:	bl	404bc0 <__errno_location@plt>
  43a404:	ldr	w0, [x0]
  43a408:	str	w0, [sp, #60]
  43a40c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a410:	add	x0, x0, #0x420
  43a414:	ldr	x0, [x0]
  43a418:	cmp	x0, #0x0
  43a41c:	b.eq	43a430 <wcrtomb@plt+0x35720>  // b.none
  43a420:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a424:	add	x0, x0, #0x420
  43a428:	ldr	x0, [x0]
  43a42c:	blr	x0
  43a430:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a434:	add	x0, x0, #0x448
  43a438:	bl	404c60 <gettext@plt>
  43a43c:	mov	x19, x0
  43a440:	ldr	x0, [sp, #40]
  43a444:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a448:	mov	x2, x0
  43a44c:	ldr	w0, [sp, #36]
  43a450:	ldr	w1, [sp, #32]
  43a454:	mov	x5, x1
  43a458:	mov	x4, x0
  43a45c:	mov	x3, x2
  43a460:	mov	x2, x19
  43a464:	ldr	w1, [sp, #60]
  43a468:	mov	w0, #0x0                   	// #0
  43a46c:	bl	404100 <error@plt>
  43a470:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43a474:	add	x0, x0, #0xdb0
  43a478:	mov	w1, #0x2                   	// #2
  43a47c:	str	w1, [x0]
  43a480:	nop
  43a484:	ldr	x19, [sp, #16]
  43a488:	ldp	x29, x30, [sp], #64
  43a48c:	ret
  43a490:	stp	x29, x30, [sp, #-32]!
  43a494:	mov	x29, sp
  43a498:	str	x0, [sp, #24]
  43a49c:	ldr	x1, [sp, #24]
  43a4a0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a4a4:	add	x0, x0, #0x478
  43a4a8:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a4ac:	nop
  43a4b0:	ldp	x29, x30, [sp], #32
  43a4b4:	ret
  43a4b8:	stp	x29, x30, [sp, #-32]!
  43a4bc:	mov	x29, sp
  43a4c0:	str	x0, [sp, #24]
  43a4c4:	ldr	x1, [sp, #24]
  43a4c8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a4cc:	add	x0, x0, #0x478
  43a4d0:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43a4d4:	nop
  43a4d8:	ldp	x29, x30, [sp], #32
  43a4dc:	ret
  43a4e0:	stp	x29, x30, [sp, #-32]!
  43a4e4:	mov	x29, sp
  43a4e8:	str	x0, [sp, #24]
  43a4ec:	ldr	x1, [sp, #24]
  43a4f0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a4f4:	add	x0, x0, #0x480
  43a4f8:	bl	43a240 <wcrtomb@plt+0x35530>
  43a4fc:	stp	x29, x30, [sp, #-64]!
  43a500:	mov	x29, sp
  43a504:	stp	x19, x20, [sp, #16]
  43a508:	str	x0, [sp, #40]
  43a50c:	str	x1, [sp, #32]
  43a510:	bl	404bc0 <__errno_location@plt>
  43a514:	ldr	w0, [x0]
  43a518:	str	w0, [sp, #60]
  43a51c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a520:	add	x0, x0, #0x420
  43a524:	ldr	x0, [x0]
  43a528:	cmp	x0, #0x0
  43a52c:	b.eq	43a540 <wcrtomb@plt+0x35830>  // b.none
  43a530:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a534:	add	x0, x0, #0x420
  43a538:	ldr	x0, [x0]
  43a53c:	blr	x0
  43a540:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a544:	add	x0, x0, #0x488
  43a548:	bl	404c60 <gettext@plt>
  43a54c:	mov	x19, x0
  43a550:	ldr	x0, [sp, #32]
  43a554:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a558:	mov	x20, x0
  43a55c:	ldr	x1, [sp, #40]
  43a560:	mov	w0, #0x1                   	// #1
  43a564:	bl	459f10 <argp_usage@@Base+0x10e24>
  43a568:	mov	x4, x0
  43a56c:	mov	x3, x20
  43a570:	mov	x2, x19
  43a574:	ldr	w1, [sp, #60]
  43a578:	mov	w0, #0x0                   	// #0
  43a57c:	bl	404100 <error@plt>
  43a580:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43a584:	add	x0, x0, #0xdb0
  43a588:	mov	w1, #0x2                   	// #2
  43a58c:	str	w1, [x0]
  43a590:	nop
  43a594:	ldp	x19, x20, [sp, #16]
  43a598:	ldp	x29, x30, [sp], #64
  43a59c:	ret
  43a5a0:	stp	x29, x30, [sp, #-32]!
  43a5a4:	mov	x29, sp
  43a5a8:	str	x0, [sp, #24]
  43a5ac:	ldr	x1, [sp, #24]
  43a5b0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a5b4:	add	x0, x0, #0x4a8
  43a5b8:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a5bc:	nop
  43a5c0:	ldp	x29, x30, [sp], #32
  43a5c4:	ret
  43a5c8:	stp	x29, x30, [sp, #-32]!
  43a5cc:	mov	x29, sp
  43a5d0:	str	x0, [sp, #24]
  43a5d4:	ldr	x1, [sp, #24]
  43a5d8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a5dc:	add	x0, x0, #0x4b0
  43a5e0:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a5e4:	nop
  43a5e8:	ldp	x29, x30, [sp], #32
  43a5ec:	ret
  43a5f0:	stp	x29, x30, [sp, #-32]!
  43a5f4:	mov	x29, sp
  43a5f8:	str	x0, [sp, #24]
  43a5fc:	ldr	x1, [sp, #24]
  43a600:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a604:	add	x0, x0, #0x4b8
  43a608:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a60c:	nop
  43a610:	ldp	x29, x30, [sp], #32
  43a614:	ret
  43a618:	stp	x29, x30, [sp, #-32]!
  43a61c:	mov	x29, sp
  43a620:	str	x0, [sp, #24]
  43a624:	ldr	x1, [sp, #24]
  43a628:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a62c:	add	x0, x0, #0x4c0
  43a630:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a634:	nop
  43a638:	ldp	x29, x30, [sp], #32
  43a63c:	ret
  43a640:	stp	x29, x30, [sp, #-32]!
  43a644:	mov	x29, sp
  43a648:	str	x0, [sp, #24]
  43a64c:	ldr	x1, [sp, #24]
  43a650:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a654:	add	x0, x0, #0x4c0
  43a658:	bl	43a240 <wcrtomb@plt+0x35530>
  43a65c:	stp	x29, x30, [sp, #-32]!
  43a660:	mov	x29, sp
  43a664:	str	x0, [sp, #24]
  43a668:	ldr	x1, [sp, #24]
  43a66c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a670:	add	x0, x0, #0x4c0
  43a674:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43a678:	nop
  43a67c:	ldp	x29, x30, [sp], #32
  43a680:	ret
  43a684:	stp	x29, x30, [sp, #-32]!
  43a688:	mov	x29, sp
  43a68c:	str	x0, [sp, #24]
  43a690:	ldr	x1, [sp, #24]
  43a694:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a698:	add	x0, x0, #0x4c8
  43a69c:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a6a0:	nop
  43a6a4:	ldp	x29, x30, [sp], #32
  43a6a8:	ret
  43a6ac:	stp	x29, x30, [sp, #-96]!
  43a6b0:	mov	x29, sp
  43a6b4:	stp	x19, x20, [sp, #16]
  43a6b8:	str	x0, [sp, #56]
  43a6bc:	str	x1, [sp, #48]
  43a6c0:	str	x2, [sp, #40]
  43a6c4:	bl	404bc0 <__errno_location@plt>
  43a6c8:	ldr	w0, [x0]
  43a6cc:	str	w0, [sp, #92]
  43a6d0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a6d4:	add	x0, x0, #0x420
  43a6d8:	ldr	x0, [x0]
  43a6dc:	cmp	x0, #0x0
  43a6e0:	b.eq	43a6f4 <wcrtomb@plt+0x359e4>  // b.none
  43a6e4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a6e8:	add	x0, x0, #0x420
  43a6ec:	ldr	x0, [x0]
  43a6f0:	blr	x0
  43a6f4:	ldr	x2, [sp, #40]
  43a6f8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a6fc:	add	x1, x0, #0x4d0
  43a700:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a704:	add	x0, x0, #0x508
  43a708:	bl	404040 <ngettext@plt>
  43a70c:	mov	x19, x0
  43a710:	ldr	x0, [sp, #56]
  43a714:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a718:	mov	x20, x0
  43a71c:	ldr	x0, [sp, #48]
  43a720:	add	x1, sp, #0x40
  43a724:	bl	450988 <argp_usage@@Base+0x789c>
  43a728:	ldr	x5, [sp, #40]
  43a72c:	mov	x4, x0
  43a730:	mov	x3, x20
  43a734:	mov	x2, x19
  43a738:	ldr	w1, [sp, #92]
  43a73c:	mov	w0, #0x0                   	// #0
  43a740:	bl	404100 <error@plt>
  43a744:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43a748:	add	x0, x0, #0xdb0
  43a74c:	mov	w1, #0x2                   	// #2
  43a750:	str	w1, [x0]
  43a754:	nop
  43a758:	ldp	x19, x20, [sp, #16]
  43a75c:	ldp	x29, x30, [sp], #96
  43a760:	ret
  43a764:	stp	x29, x30, [sp, #-96]!
  43a768:	mov	x29, sp
  43a76c:	stp	x19, x20, [sp, #16]
  43a770:	str	x0, [sp, #56]
  43a774:	str	x1, [sp, #48]
  43a778:	str	x2, [sp, #40]
  43a77c:	bl	404bc0 <__errno_location@plt>
  43a780:	ldr	w0, [x0]
  43a784:	str	w0, [sp, #92]
  43a788:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a78c:	add	x0, x0, #0x420
  43a790:	ldr	x0, [x0]
  43a794:	cmp	x0, #0x0
  43a798:	b.eq	43a7ac <wcrtomb@plt+0x35a9c>  // b.none
  43a79c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a7a0:	add	x0, x0, #0x420
  43a7a4:	ldr	x0, [x0]
  43a7a8:	blr	x0
  43a7ac:	ldr	x2, [sp, #40]
  43a7b0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a7b4:	add	x1, x0, #0x540
  43a7b8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a7bc:	add	x0, x0, #0x580
  43a7c0:	bl	404040 <ngettext@plt>
  43a7c4:	mov	x19, x0
  43a7c8:	ldr	x0, [sp, #56]
  43a7cc:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a7d0:	mov	x20, x0
  43a7d4:	ldr	x0, [sp, #48]
  43a7d8:	add	x1, sp, #0x40
  43a7dc:	bl	450988 <argp_usage@@Base+0x789c>
  43a7e0:	ldr	x5, [sp, #40]
  43a7e4:	mov	x4, x0
  43a7e8:	mov	x3, x20
  43a7ec:	mov	x2, x19
  43a7f0:	ldr	w1, [sp, #92]
  43a7f4:	mov	w0, #0x0                   	// #0
  43a7f8:	bl	404100 <error@plt>
  43a7fc:	nop
  43a800:	ldp	x19, x20, [sp, #16]
  43a804:	ldp	x29, x30, [sp], #96
  43a808:	ret
  43a80c:	stp	x29, x30, [sp, #-32]!
  43a810:	mov	x29, sp
  43a814:	str	x0, [sp, #24]
  43a818:	ldr	x1, [sp, #24]
  43a81c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a820:	add	x0, x0, #0x4c8
  43a824:	bl	43a240 <wcrtomb@plt+0x35530>
  43a828:	stp	x29, x30, [sp, #-96]!
  43a82c:	mov	x29, sp
  43a830:	stp	x19, x20, [sp, #16]
  43a834:	str	x0, [sp, #56]
  43a838:	str	x1, [sp, #48]
  43a83c:	str	x2, [sp, #40]
  43a840:	bl	404bc0 <__errno_location@plt>
  43a844:	ldr	w0, [x0]
  43a848:	str	w0, [sp, #92]
  43a84c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a850:	add	x0, x0, #0x420
  43a854:	ldr	x0, [x0]
  43a858:	cmp	x0, #0x0
  43a85c:	b.eq	43a870 <wcrtomb@plt+0x35b60>  // b.none
  43a860:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a864:	add	x0, x0, #0x420
  43a868:	ldr	x0, [x0]
  43a86c:	blr	x0
  43a870:	ldr	x2, [sp, #40]
  43a874:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a878:	add	x1, x0, #0x4d0
  43a87c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a880:	add	x0, x0, #0x508
  43a884:	bl	404040 <ngettext@plt>
  43a888:	mov	x19, x0
  43a88c:	ldr	x0, [sp, #56]
  43a890:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43a894:	mov	x20, x0
  43a898:	ldr	x0, [sp, #48]
  43a89c:	add	x1, sp, #0x40
  43a8a0:	bl	450988 <argp_usage@@Base+0x789c>
  43a8a4:	ldr	x5, [sp, #40]
  43a8a8:	mov	x4, x0
  43a8ac:	mov	x3, x20
  43a8b0:	mov	x2, x19
  43a8b4:	ldr	w1, [sp, #92]
  43a8b8:	mov	w0, #0x0                   	// #0
  43a8bc:	bl	404100 <error@plt>
  43a8c0:	bl	412ae0 <wcrtomb@plt+0xddd0>
  43a8c4:	stp	x29, x30, [sp, #-32]!
  43a8c8:	mov	x29, sp
  43a8cc:	str	x0, [sp, #24]
  43a8d0:	ldr	x1, [sp, #24]
  43a8d4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a8d8:	add	x0, x0, #0x5c0
  43a8dc:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a8e0:	nop
  43a8e4:	ldp	x29, x30, [sp], #32
  43a8e8:	ret
  43a8ec:	stp	x29, x30, [sp, #-32]!
  43a8f0:	mov	x29, sp
  43a8f4:	str	x0, [sp, #24]
  43a8f8:	ldr	x1, [sp, #24]
  43a8fc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a900:	add	x0, x0, #0x5c0
  43a904:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43a908:	nop
  43a90c:	ldp	x29, x30, [sp], #32
  43a910:	ret
  43a914:	stp	x29, x30, [sp, #-32]!
  43a918:	mov	x29, sp
  43a91c:	str	x0, [sp, #24]
  43a920:	ldr	x1, [sp, #24]
  43a924:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a928:	add	x0, x0, #0x5d0
  43a92c:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a930:	nop
  43a934:	ldp	x29, x30, [sp], #32
  43a938:	ret
  43a93c:	stp	x29, x30, [sp, #-32]!
  43a940:	mov	x29, sp
  43a944:	str	x0, [sp, #24]
  43a948:	ldr	x1, [sp, #24]
  43a94c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a950:	add	x0, x0, #0x5d8
  43a954:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a958:	nop
  43a95c:	ldp	x29, x30, [sp], #32
  43a960:	ret
  43a964:	stp	x29, x30, [sp, #-32]!
  43a968:	mov	x29, sp
  43a96c:	str	x0, [sp, #24]
  43a970:	ldr	x1, [sp, #24]
  43a974:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a978:	add	x0, x0, #0x5d8
  43a97c:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43a980:	nop
  43a984:	ldp	x29, x30, [sp], #32
  43a988:	ret
  43a98c:	stp	x29, x30, [sp, #-32]!
  43a990:	mov	x29, sp
  43a994:	str	x0, [sp, #24]
  43a998:	ldr	x1, [sp, #24]
  43a99c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a9a0:	add	x0, x0, #0x5e0
  43a9a4:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43a9a8:	nop
  43a9ac:	ldp	x29, x30, [sp], #32
  43a9b0:	ret
  43a9b4:	stp	x29, x30, [sp, #-80]!
  43a9b8:	mov	x29, sp
  43a9bc:	stp	x19, x20, [sp, #16]
  43a9c0:	str	x0, [sp, #40]
  43a9c4:	str	x1, [sp, #32]
  43a9c8:	bl	404bc0 <__errno_location@plt>
  43a9cc:	ldr	w0, [x0]
  43a9d0:	str	w0, [sp, #76]
  43a9d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a9d8:	add	x0, x0, #0x420
  43a9dc:	ldr	x0, [x0]
  43a9e0:	cmp	x0, #0x0
  43a9e4:	b.eq	43a9f8 <wcrtomb@plt+0x35ce8>  // b.none
  43a9e8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43a9ec:	add	x0, x0, #0x420
  43a9f0:	ldr	x0, [x0]
  43a9f4:	blr	x0
  43a9f8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43a9fc:	add	x0, x0, #0x5e8
  43aa00:	bl	404c60 <gettext@plt>
  43aa04:	mov	x19, x0
  43aa08:	ldr	x0, [sp, #40]
  43aa0c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43aa10:	mov	x20, x0
  43aa14:	ldr	x0, [sp, #32]
  43aa18:	add	x1, sp, #0x30
  43aa1c:	bl	450988 <argp_usage@@Base+0x789c>
  43aa20:	mov	x4, x0
  43aa24:	mov	x3, x20
  43aa28:	mov	x2, x19
  43aa2c:	ldr	w1, [sp, #76]
  43aa30:	mov	w0, #0x0                   	// #0
  43aa34:	bl	404100 <error@plt>
  43aa38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43aa3c:	add	x0, x0, #0xdb0
  43aa40:	mov	w1, #0x2                   	// #2
  43aa44:	str	w1, [x0]
  43aa48:	nop
  43aa4c:	ldp	x19, x20, [sp, #16]
  43aa50:	ldp	x29, x30, [sp], #80
  43aa54:	ret
  43aa58:	stp	x29, x30, [sp, #-32]!
  43aa5c:	mov	x29, sp
  43aa60:	str	x0, [sp, #24]
  43aa64:	ldr	x1, [sp, #24]
  43aa68:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43aa6c:	add	x0, x0, #0x5e0
  43aa70:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43aa74:	nop
  43aa78:	ldp	x29, x30, [sp], #32
  43aa7c:	ret
  43aa80:	stp	x29, x30, [sp, #-80]!
  43aa84:	mov	x29, sp
  43aa88:	stp	x19, x20, [sp, #16]
  43aa8c:	str	x0, [sp, #40]
  43aa90:	str	x1, [sp, #32]
  43aa94:	bl	404bc0 <__errno_location@plt>
  43aa98:	ldr	w0, [x0]
  43aa9c:	str	w0, [sp, #76]
  43aaa0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43aaa4:	add	x0, x0, #0x420
  43aaa8:	ldr	x0, [x0]
  43aaac:	cmp	x0, #0x0
  43aab0:	b.eq	43aac4 <wcrtomb@plt+0x35db4>  // b.none
  43aab4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43aab8:	add	x0, x0, #0x420
  43aabc:	ldr	x0, [x0]
  43aac0:	blr	x0
  43aac4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43aac8:	add	x0, x0, #0x600
  43aacc:	bl	404c60 <gettext@plt>
  43aad0:	mov	x19, x0
  43aad4:	ldr	x0, [sp, #40]
  43aad8:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43aadc:	mov	x20, x0
  43aae0:	ldr	x0, [sp, #32]
  43aae4:	add	x1, sp, #0x30
  43aae8:	bl	450988 <argp_usage@@Base+0x789c>
  43aaec:	mov	x4, x0
  43aaf0:	mov	x3, x20
  43aaf4:	mov	x2, x19
  43aaf8:	ldr	w1, [sp, #76]
  43aafc:	mov	w0, #0x0                   	// #0
  43ab00:	bl	404100 <error@plt>
  43ab04:	nop
  43ab08:	ldp	x19, x20, [sp, #16]
  43ab0c:	ldp	x29, x30, [sp], #80
  43ab10:	ret
  43ab14:	stp	x29, x30, [sp, #-64]!
  43ab18:	mov	x29, sp
  43ab1c:	stp	x19, x20, [sp, #16]
  43ab20:	str	x0, [sp, #40]
  43ab24:	str	x1, [sp, #32]
  43ab28:	bl	404bc0 <__errno_location@plt>
  43ab2c:	ldr	w0, [x0]
  43ab30:	str	w0, [sp, #60]
  43ab34:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43ab38:	add	x0, x0, #0x420
  43ab3c:	ldr	x0, [x0]
  43ab40:	cmp	x0, #0x0
  43ab44:	b.eq	43ab58 <wcrtomb@plt+0x35e48>  // b.none
  43ab48:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43ab4c:	add	x0, x0, #0x420
  43ab50:	ldr	x0, [x0]
  43ab54:	blr	x0
  43ab58:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ab5c:	add	x0, x0, #0x620
  43ab60:	bl	404c60 <gettext@plt>
  43ab64:	mov	x19, x0
  43ab68:	ldr	x0, [sp, #32]
  43ab6c:	bl	459cd8 <argp_usage@@Base+0x10bec>
  43ab70:	mov	x20, x0
  43ab74:	ldr	x1, [sp, #40]
  43ab78:	mov	w0, #0x1                   	// #1
  43ab7c:	bl	459f10 <argp_usage@@Base+0x10e24>
  43ab80:	mov	x4, x0
  43ab84:	mov	x3, x20
  43ab88:	mov	x2, x19
  43ab8c:	ldr	w1, [sp, #60]
  43ab90:	mov	w0, #0x0                   	// #0
  43ab94:	bl	404100 <error@plt>
  43ab98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43ab9c:	add	x0, x0, #0xdb0
  43aba0:	mov	w1, #0x2                   	// #2
  43aba4:	str	w1, [x0]
  43aba8:	nop
  43abac:	ldp	x19, x20, [sp, #16]
  43abb0:	ldp	x29, x30, [sp], #64
  43abb4:	ret
  43abb8:	stp	x29, x30, [sp, #-32]!
  43abbc:	mov	x29, sp
  43abc0:	str	x0, [sp, #24]
  43abc4:	ldr	x1, [sp, #24]
  43abc8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43abcc:	add	x0, x0, #0x640
  43abd0:	bl	43a240 <wcrtomb@plt+0x35530>
  43abd4:	stp	x29, x30, [sp, #-32]!
  43abd8:	mov	x29, sp
  43abdc:	str	x0, [sp, #24]
  43abe0:	ldr	x1, [sp, #24]
  43abe4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43abe8:	add	x0, x0, #0x640
  43abec:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43abf0:	nop
  43abf4:	ldp	x29, x30, [sp], #32
  43abf8:	ret
  43abfc:	stp	x29, x30, [sp, #-32]!
  43ac00:	mov	x29, sp
  43ac04:	str	x0, [sp, #24]
  43ac08:	ldr	x1, [sp, #24]
  43ac0c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ac10:	add	x0, x0, #0x640
  43ac14:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43ac18:	nop
  43ac1c:	ldp	x29, x30, [sp], #32
  43ac20:	ret
  43ac24:	stp	x29, x30, [sp, #-32]!
  43ac28:	mov	x29, sp
  43ac2c:	str	x0, [sp, #24]
  43ac30:	ldr	x1, [sp, #24]
  43ac34:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ac38:	add	x0, x0, #0x648
  43ac3c:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43ac40:	nop
  43ac44:	ldp	x29, x30, [sp], #32
  43ac48:	ret
  43ac4c:	stp	x29, x30, [sp, #-32]!
  43ac50:	mov	x29, sp
  43ac54:	str	x0, [sp, #24]
  43ac58:	ldr	x1, [sp, #24]
  43ac5c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ac60:	add	x0, x0, #0x648
  43ac64:	bl	43a2b8 <wcrtomb@plt+0x355a8>
  43ac68:	nop
  43ac6c:	ldp	x29, x30, [sp], #32
  43ac70:	ret
  43ac74:	stp	x29, x30, [sp, #-32]!
  43ac78:	mov	x29, sp
  43ac7c:	str	x0, [sp, #24]
  43ac80:	ldr	x1, [sp, #24]
  43ac84:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ac88:	add	x0, x0, #0x658
  43ac8c:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43ac90:	nop
  43ac94:	ldp	x29, x30, [sp], #32
  43ac98:	ret
  43ac9c:	stp	x29, x30, [sp, #-32]!
  43aca0:	mov	x29, sp
  43aca4:	str	x0, [sp, #24]
  43aca8:	ldr	x1, [sp, #24]
  43acac:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43acb0:	add	x0, x0, #0x660
  43acb4:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43acb8:	nop
  43acbc:	ldp	x29, x30, [sp], #32
  43acc0:	ret
  43acc4:	stp	x29, x30, [sp, #-32]!
  43acc8:	mov	x29, sp
  43accc:	str	x0, [sp, #24]
  43acd0:	ldr	x1, [sp, #24]
  43acd4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43acd8:	add	x0, x0, #0x668
  43acdc:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43ace0:	nop
  43ace4:	ldp	x29, x30, [sp], #32
  43ace8:	ret
  43acec:	stp	x29, x30, [sp, #-32]!
  43acf0:	mov	x29, sp
  43acf4:	str	x0, [sp, #24]
  43acf8:	ldr	x1, [sp, #24]
  43acfc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ad00:	add	x0, x0, #0x670
  43ad04:	bl	43a1ac <wcrtomb@plt+0x3549c>
  43ad08:	nop
  43ad0c:	ldp	x29, x30, [sp], #32
  43ad10:	ret
  43ad14:	stp	x29, x30, [sp, #-48]!
  43ad18:	mov	x29, sp
  43ad1c:	str	x0, [sp, #40]
  43ad20:	str	x1, [sp, #32]
  43ad24:	str	x2, [sp, #24]
  43ad28:	ldr	x0, [sp, #32]
  43ad2c:	cmp	x0, #0x0
  43ad30:	b.ne	43ad40 <wcrtomb@plt+0x36030>  // b.any
  43ad34:	ldr	x0, [sp, #40]
  43ad38:	bl	43acec <wcrtomb@plt+0x35fdc>
  43ad3c:	b	43ada8 <wcrtomb@plt+0x36098>
  43ad40:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43ad44:	add	x0, x0, #0x420
  43ad48:	ldr	x0, [x0]
  43ad4c:	cmp	x0, #0x0
  43ad50:	b.eq	43ad64 <wcrtomb@plt+0x36054>  // b.none
  43ad54:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43ad58:	add	x0, x0, #0x420
  43ad5c:	ldr	x0, [x0]
  43ad60:	blr	x0
  43ad64:	ldr	x2, [sp, #24]
  43ad68:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ad6c:	add	x1, x0, #0x678
  43ad70:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ad74:	add	x0, x0, #0x698
  43ad78:	bl	404040 <ngettext@plt>
  43ad7c:	ldr	x5, [sp, #24]
  43ad80:	ldr	x4, [sp, #32]
  43ad84:	ldr	x3, [sp, #40]
  43ad88:	mov	x2, x0
  43ad8c:	mov	w1, #0x0                   	// #0
  43ad90:	mov	w0, #0x0                   	// #0
  43ad94:	bl	404100 <error@plt>
  43ad98:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43ad9c:	add	x0, x0, #0xdb0
  43ada0:	mov	w1, #0x2                   	// #2
  43ada4:	str	w1, [x0]
  43ada8:	nop
  43adac:	ldp	x29, x30, [sp], #48
  43adb0:	ret
  43adb4:	stp	x29, x30, [sp, #-32]!
  43adb8:	mov	x29, sp
  43adbc:	str	x0, [sp, #24]
  43adc0:	ldr	x1, [sp, #24]
  43adc4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43adc8:	add	x0, x0, #0x6b8
  43adcc:	bl	43a240 <wcrtomb@plt+0x35530>
  43add0:	stp	x29, x30, [sp, #-32]!
  43add4:	mov	x29, sp
  43add8:	str	x0, [sp, #24]
  43addc:	str	x1, [sp, #16]
  43ade0:	ldr	x1, [sp, #16]
  43ade4:	ldr	x0, [sp, #24]
  43ade8:	bl	44e630 <argp_usage@@Base+0x5544>
  43adec:	ldp	x29, x30, [sp], #32
  43adf0:	ret
  43adf4:	stp	x29, x30, [sp, #-32]!
  43adf8:	mov	x29, sp
  43adfc:	str	x0, [sp, #24]
  43ae00:	str	x1, [sp, #16]
  43ae04:	ldr	x1, [sp, #16]
  43ae08:	ldr	x0, [sp, #24]
  43ae0c:	bl	4047c0 <strcmp@plt>
  43ae10:	cmp	w0, #0x0
  43ae14:	cset	w0, eq  // eq = none
  43ae18:	and	w0, w0, #0xff
  43ae1c:	ldp	x29, x30, [sp], #32
  43ae20:	ret
  43ae24:	stp	x29, x30, [sp, #-80]!
  43ae28:	mov	x29, sp
  43ae2c:	str	x0, [sp, #40]
  43ae30:	str	x1, [sp, #32]
  43ae34:	str	x2, [sp, #24]
  43ae38:	str	x3, [sp, #16]
  43ae3c:	ldr	x0, [sp, #40]
  43ae40:	ldr	x0, [x0]
  43ae44:	str	x0, [sp, #72]
  43ae48:	ldr	x0, [sp, #24]
  43ae4c:	cmp	x0, #0x0
  43ae50:	b.eq	43ae88 <wcrtomb@plt+0x36178>  // b.none
  43ae54:	ldr	x0, [sp, #24]
  43ae58:	add	x0, x0, #0x1
  43ae5c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  43ae60:	str	x0, [sp, #64]
  43ae64:	ldr	x2, [sp, #24]
  43ae68:	ldr	x1, [sp, #32]
  43ae6c:	ldr	x0, [sp, #64]
  43ae70:	bl	404020 <memcpy@plt>
  43ae74:	ldr	x1, [sp, #64]
  43ae78:	ldr	x0, [sp, #24]
  43ae7c:	add	x0, x1, x0
  43ae80:	strb	wzr, [x0]
  43ae84:	b	43ae94 <wcrtomb@plt+0x36184>
  43ae88:	ldr	x0, [sp, #32]
  43ae8c:	bl	45b858 <argp_usage@@Base+0x1276c>
  43ae90:	str	x0, [sp, #64]
  43ae94:	ldr	x0, [sp, #72]
  43ae98:	cmp	x0, #0x0
  43ae9c:	b.ne	43aee0 <wcrtomb@plt+0x361d0>  // b.any
  43aea0:	mov	x4, #0x0                   	// #0
  43aea4:	adrp	x0, 43a000 <wcrtomb@plt+0x352f0>
  43aea8:	add	x3, x0, #0xdf4
  43aeac:	adrp	x0, 43a000 <wcrtomb@plt+0x352f0>
  43aeb0:	add	x2, x0, #0xdd0
  43aeb4:	mov	x1, #0x0                   	// #0
  43aeb8:	mov	x0, #0x0                   	// #0
  43aebc:	bl	44ea34 <argp_usage@@Base+0x5948>
  43aec0:	str	x0, [sp, #72]
  43aec4:	ldr	x0, [sp, #40]
  43aec8:	ldr	x1, [sp, #72]
  43aecc:	str	x1, [x0]
  43aed0:	ldr	x0, [sp, #40]
  43aed4:	ldr	x0, [x0]
  43aed8:	cmp	x0, #0x0
  43aedc:	b.eq	43aefc <wcrtomb@plt+0x361ec>  // b.none
  43aee0:	ldr	x1, [sp, #64]
  43aee4:	ldr	x0, [sp, #72]
  43aee8:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  43aeec:	str	x0, [sp, #56]
  43aef0:	ldr	x0, [sp, #56]
  43aef4:	cmp	x0, #0x0
  43aef8:	b.ne	43af00 <wcrtomb@plt+0x361f0>  // b.any
  43aefc:	bl	412b2c <wcrtomb@plt+0xde1c>
  43af00:	ldr	x1, [sp, #56]
  43af04:	ldr	x0, [sp, #64]
  43af08:	cmp	x1, x0
  43af0c:	b.ne	43af30 <wcrtomb@plt+0x36220>  // b.any
  43af10:	ldr	x0, [sp, #16]
  43af14:	cmp	x0, #0x0
  43af18:	b.eq	43af28 <wcrtomb@plt+0x36218>  // b.none
  43af1c:	ldr	x0, [sp, #16]
  43af20:	ldr	x1, [sp, #64]
  43af24:	str	x1, [x0]
  43af28:	mov	w0, #0x1                   	// #1
  43af2c:	b	43af3c <wcrtomb@plt+0x3622c>
  43af30:	ldr	x0, [sp, #64]
  43af34:	bl	404880 <free@plt>
  43af38:	mov	w0, #0x0                   	// #0
  43af3c:	ldp	x29, x30, [sp], #80
  43af40:	ret
  43af44:	stp	x29, x30, [sp, #-16]!
  43af48:	mov	x29, sp
  43af4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43af50:	add	x0, x0, #0xdb8
  43af54:	ldr	x0, [x0]
  43af58:	cmp	x0, #0x0
  43af5c:	b.eq	43af78 <wcrtomb@plt+0x36268>  // b.none
  43af60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43af64:	add	x0, x0, #0xdb8
  43af68:	ldr	x0, [x0]
  43af6c:	bl	44e00c <argp_usage@@Base+0x4f20>
  43af70:	cmp	x0, #0x0
  43af74:	b.ne	43afa4 <wcrtomb@plt+0x36294>  // b.any
  43af78:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43af7c:	add	x0, x0, #0xdb8
  43af80:	ldr	x0, [x0, #8]
  43af84:	cmp	x0, #0x0
  43af88:	b.eq	43afac <wcrtomb@plt+0x3629c>  // b.none
  43af8c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43af90:	add	x0, x0, #0xdb8
  43af94:	ldr	x0, [x0, #8]
  43af98:	bl	44e00c <argp_usage@@Base+0x4f20>
  43af9c:	cmp	x0, #0x0
  43afa0:	b.eq	43afac <wcrtomb@plt+0x3629c>  // b.none
  43afa4:	mov	w0, #0x1                   	// #1
  43afa8:	b	43afb0 <wcrtomb@plt+0x362a0>
  43afac:	mov	w0, #0x0                   	// #0
  43afb0:	and	w0, w0, #0x1
  43afb4:	and	w0, w0, #0xff
  43afb8:	ldp	x29, x30, [sp], #16
  43afbc:	ret
  43afc0:	stp	x29, x30, [sp, #-64]!
  43afc4:	mov	x29, sp
  43afc8:	str	x0, [sp, #24]
  43afcc:	strb	w1, [sp, #23]
  43afd0:	strb	w2, [sp, #22]
  43afd4:	ldrb	w0, [sp, #22]
  43afd8:	cmp	w0, #0x0
  43afdc:	b.eq	43afec <wcrtomb@plt+0x362dc>  // b.none
  43afe0:	ldr	x0, [sp, #24]
  43afe4:	str	x0, [sp, #56]
  43afe8:	b	43b184 <wcrtomb@plt+0x36474>
  43afec:	str	xzr, [sp, #48]
  43aff0:	ldr	x1, [sp, #24]
  43aff4:	ldr	x0, [sp, #48]
  43aff8:	add	x0, x1, x0
  43affc:	str	x0, [sp, #56]
  43b000:	b	43b098 <wcrtomb@plt+0x36388>
  43b004:	ldr	x0, [sp, #56]
  43b008:	ldrb	w0, [x0]
  43b00c:	cmp	w0, #0x2e
  43b010:	b.ne	43b064 <wcrtomb@plt+0x36354>  // b.any
  43b014:	ldr	x0, [sp, #56]
  43b018:	add	x0, x0, #0x1
  43b01c:	ldrb	w0, [x0]
  43b020:	cmp	w0, #0x2e
  43b024:	b.ne	43b064 <wcrtomb@plt+0x36354>  // b.any
  43b028:	ldr	x0, [sp, #56]
  43b02c:	add	x0, x0, #0x2
  43b030:	ldrb	w0, [x0]
  43b034:	cmp	w0, #0x2f
  43b038:	b.eq	43b050 <wcrtomb@plt+0x36340>  // b.none
  43b03c:	ldr	x0, [sp, #56]
  43b040:	add	x0, x0, #0x2
  43b044:	ldrb	w0, [x0]
  43b048:	cmp	w0, #0x0
  43b04c:	b.ne	43b064 <wcrtomb@plt+0x36354>  // b.any
  43b050:	ldr	x0, [sp, #56]
  43b054:	add	x1, x0, #0x2
  43b058:	ldr	x0, [sp, #24]
  43b05c:	sub	x0, x1, x0
  43b060:	str	x0, [sp, #48]
  43b064:	ldr	x0, [sp, #56]
  43b068:	add	x1, x0, #0x1
  43b06c:	str	x1, [sp, #56]
  43b070:	ldrb	w0, [x0]
  43b074:	strb	w0, [sp, #47]
  43b078:	ldrb	w0, [sp, #47]
  43b07c:	cmp	w0, #0x2f
  43b080:	b.ne	43b088 <wcrtomb@plt+0x36378>  // b.any
  43b084:	b	43b098 <wcrtomb@plt+0x36388>
  43b088:	ldr	x0, [sp, #56]
  43b08c:	ldrb	w0, [x0]
  43b090:	cmp	w0, #0x0
  43b094:	b.ne	43b064 <wcrtomb@plt+0x36354>  // b.any
  43b098:	ldr	x0, [sp, #56]
  43b09c:	ldrb	w0, [x0]
  43b0a0:	cmp	w0, #0x0
  43b0a4:	b.ne	43b004 <wcrtomb@plt+0x362f4>  // b.any
  43b0a8:	ldr	x1, [sp, #24]
  43b0ac:	ldr	x0, [sp, #48]
  43b0b0:	add	x0, x1, x0
  43b0b4:	str	x0, [sp, #56]
  43b0b8:	b	43b0c8 <wcrtomb@plt+0x363b8>
  43b0bc:	ldr	x0, [sp, #56]
  43b0c0:	add	x0, x0, #0x1
  43b0c4:	str	x0, [sp, #56]
  43b0c8:	ldr	x0, [sp, #56]
  43b0cc:	ldrb	w0, [x0]
  43b0d0:	cmp	w0, #0x2f
  43b0d4:	b.eq	43b0bc <wcrtomb@plt+0x363ac>  // b.none
  43b0d8:	ldr	x1, [sp, #56]
  43b0dc:	ldr	x0, [sp, #24]
  43b0e0:	sub	x0, x1, x0
  43b0e4:	str	x0, [sp, #48]
  43b0e8:	ldr	x0, [sp, #48]
  43b0ec:	cmp	x0, #0x0
  43b0f0:	b.eq	43b184 <wcrtomb@plt+0x36474>  // b.none
  43b0f4:	ldrb	w0, [sp, #23]
  43b0f8:	sxtw	x0, w0
  43b0fc:	lsl	x1, x0, #3
  43b100:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b104:	add	x0, x0, #0xdb8
  43b108:	add	x0, x1, x0
  43b10c:	add	x1, sp, #0x20
  43b110:	mov	x3, x1
  43b114:	ldr	x2, [sp, #48]
  43b118:	ldr	x1, [sp, #24]
  43b11c:	bl	43ae24 <wcrtomb@plt+0x36114>
  43b120:	and	w0, w0, #0xff
  43b124:	cmp	w0, #0x0
  43b128:	b.eq	43b184 <wcrtomb@plt+0x36474>  // b.none
  43b12c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43b130:	add	x0, x0, #0x420
  43b134:	ldr	x0, [x0]
  43b138:	cmp	x0, #0x0
  43b13c:	b.eq	43b150 <wcrtomb@plt+0x36440>  // b.none
  43b140:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43b144:	add	x0, x0, #0x420
  43b148:	ldr	x0, [x0]
  43b14c:	blr	x0
  43b150:	ldrb	w1, [sp, #23]
  43b154:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b158:	add	x0, x0, #0x728
  43b15c:	sxtw	x1, w1
  43b160:	ldr	x0, [x0, x1, lsl #3]
  43b164:	bl	404c60 <gettext@plt>
  43b168:	mov	x1, x0
  43b16c:	ldr	x0, [sp, #32]
  43b170:	mov	x3, x0
  43b174:	mov	x2, x1
  43b178:	mov	w1, #0x0                   	// #0
  43b17c:	mov	w0, #0x0                   	// #0
  43b180:	bl	404100 <error@plt>
  43b184:	ldr	x0, [sp, #56]
  43b188:	ldrb	w0, [x0]
  43b18c:	cmp	w0, #0x0
  43b190:	b.ne	43b204 <wcrtomb@plt+0x364f4>  // b.any
  43b194:	ldr	x1, [sp, #56]
  43b198:	ldr	x0, [sp, #24]
  43b19c:	cmp	x1, x0
  43b1a0:	b.ne	43b1f8 <wcrtomb@plt+0x364e8>  // b.any
  43b1a4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43b1a8:	add	x0, x0, #0x420
  43b1ac:	ldr	x0, [x0]
  43b1b0:	cmp	x0, #0x0
  43b1b4:	b.eq	43b1c8 <wcrtomb@plt+0x364b8>  // b.none
  43b1b8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  43b1bc:	add	x0, x0, #0x420
  43b1c0:	ldr	x0, [x0]
  43b1c4:	blr	x0
  43b1c8:	ldrb	w1, [sp, #23]
  43b1cc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b1d0:	add	x0, x0, #0x790
  43b1d4:	sxtw	x1, w1
  43b1d8:	ldr	x0, [x0, x1, lsl #3]
  43b1dc:	bl	404c60 <gettext@plt>
  43b1e0:	mov	x3, x0
  43b1e4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b1e8:	add	x2, x0, #0x6c0
  43b1ec:	mov	w1, #0x0                   	// #0
  43b1f0:	mov	w0, #0x0                   	// #0
  43b1f4:	bl	404100 <error@plt>
  43b1f8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b1fc:	add	x0, x0, #0x6c8
  43b200:	str	x0, [sp, #56]
  43b204:	ldr	x0, [sp, #56]
  43b208:	ldp	x29, x30, [sp], #64
  43b20c:	ret
  43b210:	stp	x29, x30, [sp, #-32]!
  43b214:	mov	x29, sp
  43b218:	str	w0, [sp, #28]
  43b21c:	str	w1, [sp, #24]
  43b220:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b224:	add	x1, x0, #0x260
  43b228:	ldrsw	x0, [sp, #28]
  43b22c:	lsl	x0, x0, #3
  43b230:	add	x0, x1, x0
  43b234:	ldr	w0, [x0]
  43b238:	bl	404660 <close@plt>
  43b23c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b240:	add	x1, x0, #0x280
  43b244:	ldrsw	x0, [sp, #28]
  43b248:	lsl	x0, x0, #3
  43b24c:	add	x0, x1, x0
  43b250:	ldr	w0, [x0, #4]
  43b254:	bl	404660 <close@plt>
  43b258:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b25c:	add	x1, x0, #0x260
  43b260:	ldrsw	x0, [sp, #28]
  43b264:	lsl	x0, x0, #3
  43b268:	add	x0, x1, x0
  43b26c:	mov	w1, #0xffffffff            	// #-1
  43b270:	str	w1, [x0]
  43b274:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b278:	add	x1, x0, #0x280
  43b27c:	ldrsw	x0, [sp, #28]
  43b280:	lsl	x0, x0, #3
  43b284:	add	x0, x1, x0
  43b288:	mov	w1, #0xffffffff            	// #-1
  43b28c:	str	w1, [x0, #4]
  43b290:	bl	404bc0 <__errno_location@plt>
  43b294:	mov	x1, x0
  43b298:	ldr	w0, [sp, #24]
  43b29c:	str	w0, [x1]
  43b2a0:	nop
  43b2a4:	ldp	x29, x30, [sp], #32
  43b2a8:	ret
  43b2ac:	stp	x29, x30, [sp, #-64]!
  43b2b0:	mov	x29, sp
  43b2b4:	str	w0, [sp, #28]
  43b2b8:	str	x1, [sp, #16]
  43b2bc:	ldr	x0, [sp, #16]
  43b2c0:	bl	4040b0 <strlen@plt>
  43b2c4:	str	x0, [sp, #56]
  43b2c8:	mov	x1, #0x1                   	// #1
  43b2cc:	mov	w0, #0xd                   	// #13
  43b2d0:	bl	404360 <signal@plt>
  43b2d4:	str	x0, [sp, #48]
  43b2d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b2dc:	add	x1, x0, #0x280
  43b2e0:	ldrsw	x0, [sp, #28]
  43b2e4:	lsl	x0, x0, #3
  43b2e8:	add	x0, x1, x0
  43b2ec:	ldr	w0, [x0, #4]
  43b2f0:	ldr	x2, [sp, #56]
  43b2f4:	ldr	x1, [sp, #16]
  43b2f8:	bl	44dee8 <argp_usage@@Base+0x4dfc>
  43b2fc:	str	x0, [sp, #40]
  43b300:	ldr	x1, [sp, #48]
  43b304:	mov	w0, #0xd                   	// #13
  43b308:	bl	404360 <signal@plt>
  43b30c:	ldr	x0, [sp, #56]
  43b310:	ldr	x1, [sp, #40]
  43b314:	cmp	x1, x0
  43b318:	b.ne	43b324 <wcrtomb@plt+0x36614>  // b.any
  43b31c:	mov	w0, #0x0                   	// #0
  43b320:	b	43b334 <wcrtomb@plt+0x36624>
  43b324:	mov	w1, #0x5                   	// #5
  43b328:	ldr	w0, [sp, #28]
  43b32c:	bl	43b210 <wcrtomb@plt+0x36500>
  43b330:	mov	w0, #0xffffffff            	// #-1
  43b334:	ldp	x29, x30, [sp], #64
  43b338:	ret
  43b33c:	stp	x29, x30, [sp, #-64]!
  43b340:	mov	x29, sp
  43b344:	stp	x19, x20, [sp, #16]
  43b348:	str	w0, [sp, #44]
  43b34c:	str	x1, [sp, #32]
  43b350:	str	wzr, [sp, #52]
  43b354:	ldr	x0, [sp, #32]
  43b358:	str	x0, [sp, #56]
  43b35c:	b	43b3d4 <wcrtomb@plt+0x366c4>
  43b360:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b364:	add	x1, x0, #0x260
  43b368:	ldrsw	x0, [sp, #44]
  43b36c:	lsl	x0, x0, #3
  43b370:	add	x0, x1, x0
  43b374:	ldr	w0, [x0]
  43b378:	mov	x2, #0x1                   	// #1
  43b37c:	ldr	x1, [sp, #56]
  43b380:	bl	45a2ac <argp_usage@@Base+0x111c0>
  43b384:	cmp	x0, #0x1
  43b388:	b.eq	43b3a0 <wcrtomb@plt+0x36690>  // b.none
  43b38c:	mov	w1, #0x5                   	// #5
  43b390:	ldr	w0, [sp, #44]
  43b394:	bl	43b210 <wcrtomb@plt+0x36500>
  43b398:	mov	x0, #0x0                   	// #0
  43b39c:	b	43b518 <wcrtomb@plt+0x36808>
  43b3a0:	ldr	x0, [sp, #56]
  43b3a4:	ldrb	w0, [x0]
  43b3a8:	cmp	w0, #0xa
  43b3ac:	b.ne	43b3bc <wcrtomb@plt+0x366ac>  // b.any
  43b3b0:	ldr	x0, [sp, #56]
  43b3b4:	strb	wzr, [x0]
  43b3b8:	b	43b3e0 <wcrtomb@plt+0x366d0>
  43b3bc:	ldr	w0, [sp, #52]
  43b3c0:	add	w0, w0, #0x1
  43b3c4:	str	w0, [sp, #52]
  43b3c8:	ldr	x0, [sp, #56]
  43b3cc:	add	x0, x0, #0x1
  43b3d0:	str	x0, [sp, #56]
  43b3d4:	ldr	w0, [sp, #52]
  43b3d8:	cmp	w0, #0x3f
  43b3dc:	b.le	43b360 <wcrtomb@plt+0x36650>
  43b3e0:	ldr	w0, [sp, #52]
  43b3e4:	cmp	w0, #0x40
  43b3e8:	b.ne	43b400 <wcrtomb@plt+0x366f0>  // b.any
  43b3ec:	mov	w1, #0x5                   	// #5
  43b3f0:	ldr	w0, [sp, #44]
  43b3f4:	bl	43b210 <wcrtomb@plt+0x36500>
  43b3f8:	mov	x0, #0x0                   	// #0
  43b3fc:	b	43b518 <wcrtomb@plt+0x36808>
  43b400:	ldr	x0, [sp, #32]
  43b404:	str	x0, [sp, #56]
  43b408:	b	43b428 <wcrtomb@plt+0x36718>
  43b40c:	ldr	x0, [sp, #56]
  43b410:	ldrb	w0, [x0]
  43b414:	cmp	w0, #0x20
  43b418:	b.ne	43b43c <wcrtomb@plt+0x3672c>  // b.any
  43b41c:	ldr	x0, [sp, #56]
  43b420:	add	x0, x0, #0x1
  43b424:	str	x0, [sp, #56]
  43b428:	ldr	x0, [sp, #56]
  43b42c:	ldrb	w0, [x0]
  43b430:	cmp	w0, #0x0
  43b434:	b.ne	43b40c <wcrtomb@plt+0x366fc>  // b.any
  43b438:	b	43b440 <wcrtomb@plt+0x36730>
  43b43c:	nop
  43b440:	ldr	x0, [sp, #56]
  43b444:	ldrb	w0, [x0]
  43b448:	cmp	w0, #0x45
  43b44c:	b.eq	43b470 <wcrtomb@plt+0x36760>  // b.none
  43b450:	ldr	x0, [sp, #56]
  43b454:	ldrb	w0, [x0]
  43b458:	cmp	w0, #0x46
  43b45c:	b.ne	43b4ec <wcrtomb@plt+0x367dc>  // b.any
  43b460:	b	43b470 <wcrtomb@plt+0x36760>
  43b464:	ldrb	w0, [sp, #51]
  43b468:	cmp	w0, #0xa
  43b46c:	b.eq	43b4a0 <wcrtomb@plt+0x36790>  // b.none
  43b470:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43b474:	add	x1, x0, #0x260
  43b478:	ldrsw	x0, [sp, #44]
  43b47c:	lsl	x0, x0, #3
  43b480:	add	x0, x1, x0
  43b484:	ldr	w0, [x0]
  43b488:	add	x1, sp, #0x33
  43b48c:	mov	x2, #0x1                   	// #1
  43b490:	bl	45a2ac <argp_usage@@Base+0x111c0>
  43b494:	cmp	x0, #0x1
  43b498:	b.eq	43b464 <wcrtomb@plt+0x36754>  // b.none
  43b49c:	b	43b4a4 <wcrtomb@plt+0x36794>
  43b4a0:	nop
  43b4a4:	ldr	x0, [sp, #56]
  43b4a8:	add	x20, x0, #0x1
  43b4ac:	bl	404bc0 <__errno_location@plt>
  43b4b0:	mov	x19, x0
  43b4b4:	mov	x0, x20
  43b4b8:	bl	4043a0 <atoi@plt>
  43b4bc:	str	w0, [x19]
  43b4c0:	ldr	x0, [sp, #56]
  43b4c4:	ldrb	w0, [x0]
  43b4c8:	cmp	w0, #0x46
  43b4cc:	b.ne	43b4e4 <wcrtomb@plt+0x367d4>  // b.any
  43b4d0:	bl	404bc0 <__errno_location@plt>
  43b4d4:	ldr	w0, [x0]
  43b4d8:	mov	w1, w0
  43b4dc:	ldr	w0, [sp, #44]
  43b4e0:	bl	43b210 <wcrtomb@plt+0x36500>
  43b4e4:	mov	x0, #0x0                   	// #0
  43b4e8:	b	43b518 <wcrtomb@plt+0x36808>
  43b4ec:	ldr	x0, [sp, #56]
  43b4f0:	ldrb	w0, [x0]
  43b4f4:	cmp	w0, #0x41
  43b4f8:	b.eq	43b510 <wcrtomb@plt+0x36800>  // b.none
  43b4fc:	mov	w1, #0x5                   	// #5
  43b500:	ldr	w0, [sp, #44]
  43b504:	bl	43b210 <wcrtomb@plt+0x36500>
  43b508:	mov	x0, #0x0                   	// #0
  43b50c:	b	43b518 <wcrtomb@plt+0x36808>
  43b510:	ldr	x0, [sp, #56]
  43b514:	add	x0, x0, #0x1
  43b518:	ldp	x19, x20, [sp, #16]
  43b51c:	ldp	x29, x30, [sp], #64
  43b520:	ret
  43b524:	stp	x29, x30, [sp, #-112]!
  43b528:	mov	x29, sp
  43b52c:	str	w0, [sp, #28]
  43b530:	add	x0, sp, #0x20
  43b534:	mov	x1, x0
  43b538:	ldr	w0, [sp, #28]
  43b53c:	bl	43b33c <wcrtomb@plt+0x3662c>
  43b540:	str	x0, [sp, #104]
  43b544:	ldr	x0, [sp, #104]
  43b548:	cmp	x0, #0x0
  43b54c:	b.eq	43b580 <wcrtomb@plt+0x36870>  // b.none
  43b550:	ldr	x0, [sp, #104]
  43b554:	bl	404690 <atol@plt>
  43b558:	str	x0, [sp, #96]
  43b55c:	ldr	x0, [sp, #96]
  43b560:	cmp	x0, #0x0
  43b564:	b.lt	43b570 <wcrtomb@plt+0x36860>  // b.tstop
  43b568:	ldr	x0, [sp, #96]
  43b56c:	b	43b584 <wcrtomb@plt+0x36874>
  43b570:	bl	404bc0 <__errno_location@plt>
  43b574:	mov	x1, x0
  43b578:	mov	w0, #0x5                   	// #5
  43b57c:	str	w0, [x1]
  43b580:	mov	x0, #0xffffffffffffffff    	// #-1
  43b584:	ldp	x29, x30, [sp], #112
  43b588:	ret
  43b58c:	stp	x29, x30, [sp, #-144]!
  43b590:	mov	x29, sp
  43b594:	str	w0, [sp, #28]
  43b598:	add	x0, sp, #0x28
  43b59c:	mov	x1, x0
  43b5a0:	ldr	w0, [sp, #28]
  43b5a4:	bl	43b33c <wcrtomb@plt+0x3662c>
  43b5a8:	str	x0, [sp, #136]
  43b5ac:	ldr	x0, [sp, #136]
  43b5b0:	cmp	x0, #0x0
  43b5b4:	b.ne	43b5c0 <wcrtomb@plt+0x368b0>  // b.any
  43b5b8:	mov	x0, #0xffffffffffffffff    	// #-1
  43b5bc:	b	43b720 <wcrtomb@plt+0x36a10>
  43b5c0:	str	xzr, [sp, #128]
  43b5c4:	b	43b5d4 <wcrtomb@plt+0x368c4>
  43b5c8:	ldr	x0, [sp, #136]
  43b5cc:	add	x0, x0, #0x1
  43b5d0:	str	x0, [sp, #136]
  43b5d4:	ldr	x0, [sp, #136]
  43b5d8:	ldrb	w0, [x0]
  43b5dc:	cmp	w0, #0x20
  43b5e0:	b.eq	43b5c8 <wcrtomb@plt+0x368b8>  // b.none
  43b5e4:	ldr	x0, [sp, #136]
  43b5e8:	ldrb	w0, [x0]
  43b5ec:	cmp	w0, #0x9
  43b5f0:	b.eq	43b5c8 <wcrtomb@plt+0x368b8>  // b.none
  43b5f4:	ldr	x0, [sp, #136]
  43b5f8:	ldrb	w0, [x0]
  43b5fc:	cmp	w0, #0x2d
  43b600:	cset	w0, eq  // eq = none
  43b604:	and	w0, w0, #0xff
  43b608:	str	w0, [sp, #124]
  43b60c:	ldr	w0, [sp, #124]
  43b610:	cmp	w0, #0x0
  43b614:	b.ne	43b628 <wcrtomb@plt+0x36918>  // b.any
  43b618:	ldr	x0, [sp, #136]
  43b61c:	ldrb	w0, [x0]
  43b620:	cmp	w0, #0x2b
  43b624:	b.ne	43b630 <wcrtomb@plt+0x36920>  // b.any
  43b628:	mov	w0, #0x1                   	// #1
  43b62c:	b	43b634 <wcrtomb@plt+0x36924>
  43b630:	mov	w0, #0x0                   	// #0
  43b634:	sxtw	x0, w0
  43b638:	ldr	x1, [sp, #136]
  43b63c:	add	x0, x1, x0
  43b640:	str	x0, [sp, #136]
  43b644:	ldr	x0, [sp, #136]
  43b648:	add	x1, x0, #0x1
  43b64c:	str	x1, [sp, #136]
  43b650:	ldrb	w0, [x0]
  43b654:	sub	w0, w0, #0x30
  43b658:	str	w0, [sp, #120]
  43b65c:	ldr	w0, [sp, #120]
  43b660:	cmp	w0, #0x9
  43b664:	b.hi	43b718 <wcrtomb@plt+0x36a08>  // b.pmore
  43b668:	ldr	x1, [sp, #128]
  43b66c:	mov	x0, x1
  43b670:	lsl	x0, x0, #2
  43b674:	add	x0, x0, x1
  43b678:	lsl	x0, x0, #1
  43b67c:	str	x0, [sp, #112]
  43b680:	ldr	w0, [sp, #124]
  43b684:	cmp	w0, #0x0
  43b688:	b.eq	43b69c <wcrtomb@plt+0x3698c>  // b.none
  43b68c:	ldrsw	x0, [sp, #120]
  43b690:	ldr	x1, [sp, #112]
  43b694:	sub	x0, x1, x0
  43b698:	b	43b6a8 <wcrtomb@plt+0x36998>
  43b69c:	ldrsw	x1, [sp, #120]
  43b6a0:	ldr	x0, [sp, #112]
  43b6a4:	add	x0, x1, x0
  43b6a8:	str	x0, [sp, #104]
  43b6ac:	ldr	x0, [sp, #112]
  43b6b0:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  43b6b4:	movk	x1, #0x6667
  43b6b8:	smulh	x1, x0, x1
  43b6bc:	asr	x1, x1, #2
  43b6c0:	asr	x0, x0, #63
  43b6c4:	sub	x0, x1, x0
  43b6c8:	ldr	x1, [sp, #128]
  43b6cc:	cmp	x1, x0
  43b6d0:	b.ne	43b704 <wcrtomb@plt+0x369f4>  // b.any
  43b6d4:	ldr	w0, [sp, #124]
  43b6d8:	cmp	w0, #0x0
  43b6dc:	b.eq	43b6f4 <wcrtomb@plt+0x369e4>  // b.none
  43b6e0:	ldr	x1, [sp, #112]
  43b6e4:	ldr	x0, [sp, #104]
  43b6e8:	cmp	x1, x0
  43b6ec:	b.lt	43b704 <wcrtomb@plt+0x369f4>  // b.tstop
  43b6f0:	b	43b70c <wcrtomb@plt+0x369fc>
  43b6f4:	ldr	x1, [sp, #104]
  43b6f8:	ldr	x0, [sp, #112]
  43b6fc:	cmp	x1, x0
  43b700:	b.ge	43b70c <wcrtomb@plt+0x369fc>  // b.tcont
  43b704:	mov	x0, #0xffffffffffffffff    	// #-1
  43b708:	b	43b720 <wcrtomb@plt+0x36a10>
  43b70c:	ldr	x0, [sp, #104]
  43b710:	str	x0, [sp, #128]
  43b714:	b	43b644 <wcrtomb@plt+0x36934>
  43b718:	nop
  43b71c:	ldr	x0, [sp, #128]
  43b720:	ldp	x29, x30, [sp], #144
  43b724:	ret
  43b728:	stp	x29, x30, [sp, #-32]!
  43b72c:	mov	x29, sp
  43b730:	str	x0, [sp, #24]
  43b734:	str	w1, [sp, #20]
  43b738:	ldr	w2, [sp, #20]
  43b73c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b740:	add	x1, x0, #0x7b8
  43b744:	ldr	x0, [sp, #24]
  43b748:	bl	4041f0 <sprintf@plt>
  43b74c:	ldr	w0, [sp, #20]
  43b750:	and	w0, w0, #0x3
  43b754:	cmp	w0, #0x2
  43b758:	b.eq	43b7ac <wcrtomb@plt+0x36a9c>  // b.none
  43b75c:	cmp	w0, #0x2
  43b760:	b.gt	43b814 <wcrtomb@plt+0x36b04>
  43b764:	cmp	w0, #0x0
  43b768:	b.eq	43b778 <wcrtomb@plt+0x36a68>  // b.none
  43b76c:	cmp	w0, #0x1
  43b770:	b.eq	43b7e0 <wcrtomb@plt+0x36ad0>  // b.none
  43b774:	b	43b814 <wcrtomb@plt+0x36b04>
  43b778:	ldr	x0, [sp, #24]
  43b77c:	bl	4040b0 <strlen@plt>
  43b780:	mov	x1, x0
  43b784:	ldr	x0, [sp, #24]
  43b788:	add	x2, x0, x1
  43b78c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b790:	add	x1, x0, #0x7c0
  43b794:	mov	x0, x2
  43b798:	ldr	x2, [x1]
  43b79c:	str	x2, [x0]
  43b7a0:	ldrb	w1, [x1, #8]
  43b7a4:	strb	w1, [x0, #8]
  43b7a8:	b	43b818 <wcrtomb@plt+0x36b08>
  43b7ac:	ldr	x0, [sp, #24]
  43b7b0:	bl	4040b0 <strlen@plt>
  43b7b4:	mov	x1, x0
  43b7b8:	ldr	x0, [sp, #24]
  43b7bc:	add	x2, x0, x1
  43b7c0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b7c4:	add	x1, x0, #0x7d0
  43b7c8:	mov	x0, x2
  43b7cc:	ldr	w2, [x1]
  43b7d0:	str	w2, [x0]
  43b7d4:	ldur	w1, [x1, #3]
  43b7d8:	stur	w1, [x0, #3]
  43b7dc:	b	43b818 <wcrtomb@plt+0x36b08>
  43b7e0:	ldr	x0, [sp, #24]
  43b7e4:	bl	4040b0 <strlen@plt>
  43b7e8:	mov	x1, x0
  43b7ec:	ldr	x0, [sp, #24]
  43b7f0:	add	x2, x0, x1
  43b7f4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b7f8:	add	x1, x0, #0x7d8
  43b7fc:	mov	x0, x2
  43b800:	ldr	x2, [x1]
  43b804:	str	x2, [x0]
  43b808:	ldrb	w1, [x1, #8]
  43b80c:	strb	w1, [x0, #8]
  43b810:	b	43b818 <wcrtomb@plt+0x36b08>
  43b814:	bl	404710 <abort@plt>
  43b818:	ldr	w0, [sp, #20]
  43b81c:	and	w0, w0, #0x400
  43b820:	cmp	w0, #0x0
  43b824:	b.eq	43b858 <wcrtomb@plt+0x36b48>  // b.none
  43b828:	ldr	x0, [sp, #24]
  43b82c:	bl	4040b0 <strlen@plt>
  43b830:	mov	x1, x0
  43b834:	ldr	x0, [sp, #24]
  43b838:	add	x2, x0, x1
  43b83c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b840:	add	x1, x0, #0x7e8
  43b844:	mov	x0, x2
  43b848:	ldr	x2, [x1]
  43b84c:	str	x2, [x0]
  43b850:	ldrh	w1, [x1, #8]
  43b854:	strh	w1, [x0, #8]
  43b858:	ldr	w0, [sp, #20]
  43b85c:	and	w0, w0, #0x40
  43b860:	cmp	w0, #0x0
  43b864:	b.eq	43b898 <wcrtomb@plt+0x36b88>  // b.none
  43b868:	ldr	x0, [sp, #24]
  43b86c:	bl	4040b0 <strlen@plt>
  43b870:	mov	x1, x0
  43b874:	ldr	x0, [sp, #24]
  43b878:	add	x2, x0, x1
  43b87c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b880:	add	x1, x0, #0x7f8
  43b884:	mov	x0, x2
  43b888:	ldr	x2, [x1]
  43b88c:	str	x2, [x0]
  43b890:	ldrb	w1, [x1, #8]
  43b894:	strb	w1, [x0, #8]
  43b898:	ldr	w0, [sp, #20]
  43b89c:	and	w0, w0, #0x1000
  43b8a0:	cmp	w0, #0x0
  43b8a4:	b.eq	43b8d8 <wcrtomb@plt+0x36bc8>  // b.none
  43b8a8:	ldr	x0, [sp, #24]
  43b8ac:	bl	4040b0 <strlen@plt>
  43b8b0:	mov	x1, x0
  43b8b4:	ldr	x0, [sp, #24]
  43b8b8:	add	x2, x0, x1
  43b8bc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b8c0:	add	x1, x0, #0x808
  43b8c4:	mov	x0, x2
  43b8c8:	ldr	x2, [x1]
  43b8cc:	str	x2, [x0]
  43b8d0:	ldrb	w1, [x1, #8]
  43b8d4:	strb	w1, [x0, #8]
  43b8d8:	ldr	w0, [sp, #20]
  43b8dc:	and	w0, w0, #0x80
  43b8e0:	cmp	w0, #0x0
  43b8e4:	b.eq	43b910 <wcrtomb@plt+0x36c00>  // b.none
  43b8e8:	ldr	x0, [sp, #24]
  43b8ec:	bl	4040b0 <strlen@plt>
  43b8f0:	mov	x1, x0
  43b8f4:	ldr	x0, [sp, #24]
  43b8f8:	add	x0, x0, x1
  43b8fc:	mov	x1, #0x4f7c                	// #20348
  43b900:	movk	x1, #0x455f, lsl #16
  43b904:	movk	x1, #0x4358, lsl #32
  43b908:	movk	x1, #0x4c, lsl #48
  43b90c:	str	x1, [x0]
  43b910:	ldr	w0, [sp, #20]
  43b914:	and	w0, w0, #0x100
  43b918:	cmp	w0, #0x0
  43b91c:	b.eq	43b950 <wcrtomb@plt+0x36c40>  // b.none
  43b920:	ldr	x0, [sp, #24]
  43b924:	bl	4040b0 <strlen@plt>
  43b928:	mov	x1, x0
  43b92c:	ldr	x0, [sp, #24]
  43b930:	add	x2, x0, x1
  43b934:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b938:	add	x1, x0, #0x818
  43b93c:	mov	x0, x2
  43b940:	ldr	x2, [x1]
  43b944:	str	x2, [x0]
  43b948:	ldrh	w1, [x1, #8]
  43b94c:	strh	w1, [x0, #8]
  43b950:	ldr	w0, [sp, #20]
  43b954:	and	w0, w0, #0x800
  43b958:	cmp	w0, #0x0
  43b95c:	b.eq	43b990 <wcrtomb@plt+0x36c80>  // b.none
  43b960:	ldr	x0, [sp, #24]
  43b964:	bl	4040b0 <strlen@plt>
  43b968:	mov	x1, x0
  43b96c:	ldr	x0, [sp, #24]
  43b970:	add	x2, x0, x1
  43b974:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b978:	add	x1, x0, #0x828
  43b97c:	mov	x0, x2
  43b980:	ldr	x2, [x1]
  43b984:	str	x2, [x0]
  43b988:	ldr	w1, [x1, #8]
  43b98c:	str	w1, [x0, #8]
  43b990:	ldr	w1, [sp, #20]
  43b994:	mov	w0, #0x1000                	// #4096
  43b998:	movk	w0, #0x10, lsl #16
  43b99c:	and	w0, w1, w0
  43b9a0:	cmp	w0, #0x0
  43b9a4:	b.eq	43b9d8 <wcrtomb@plt+0x36cc8>  // b.none
  43b9a8:	ldr	x0, [sp, #24]
  43b9ac:	bl	4040b0 <strlen@plt>
  43b9b0:	mov	x1, x0
  43b9b4:	ldr	x0, [sp, #24]
  43b9b8:	add	x2, x0, x1
  43b9bc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43b9c0:	add	x1, x0, #0x838
  43b9c4:	mov	x0, x2
  43b9c8:	ldr	x2, [x1]
  43b9cc:	str	x2, [x0]
  43b9d0:	ldrb	w1, [x1, #8]
  43b9d4:	strb	w1, [x0, #8]
  43b9d8:	ldr	w1, [sp, #20]
  43b9dc:	mov	w0, #0x1000                	// #4096
  43b9e0:	movk	w0, #0x10, lsl #16
  43b9e4:	and	w0, w1, w0
  43b9e8:	cmp	w0, #0x0
  43b9ec:	b.eq	43ba18 <wcrtomb@plt+0x36d08>  // b.none
  43b9f0:	ldr	x0, [sp, #24]
  43b9f4:	bl	4040b0 <strlen@plt>
  43b9f8:	mov	x1, x0
  43b9fc:	ldr	x0, [sp, #24]
  43ba00:	add	x0, x0, x1
  43ba04:	mov	x1, #0x4f7c                	// #20348
  43ba08:	movk	x1, #0x535f, lsl #16
  43ba0c:	movk	x1, #0x4e59, lsl #32
  43ba10:	movk	x1, #0x43, lsl #48
  43ba14:	str	x1, [x0]
  43ba18:	ldr	w0, [sp, #20]
  43ba1c:	and	w0, w0, #0x200
  43ba20:	cmp	w0, #0x0
  43ba24:	b.eq	43ba58 <wcrtomb@plt+0x36d48>  // b.none
  43ba28:	ldr	x0, [sp, #24]
  43ba2c:	bl	4040b0 <strlen@plt>
  43ba30:	mov	x1, x0
  43ba34:	ldr	x0, [sp, #24]
  43ba38:	add	x2, x0, x1
  43ba3c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ba40:	add	x1, x0, #0x848
  43ba44:	mov	x0, x2
  43ba48:	ldr	x2, [x1]
  43ba4c:	str	x2, [x0]
  43ba50:	ldrb	w1, [x1, #8]
  43ba54:	strb	w1, [x0, #8]
  43ba58:	nop
  43ba5c:	ldp	x29, x30, [sp], #32
  43ba60:	ret
  43ba64:	stp	x29, x30, [sp, #-160]!
  43ba68:	mov	x29, sp
  43ba6c:	str	x19, [sp, #16]
  43ba70:	str	x0, [sp, #56]
  43ba74:	str	w1, [sp, #52]
  43ba78:	str	w2, [sp, #48]
  43ba7c:	str	x3, [sp, #40]
  43ba80:	str	wzr, [sp, #156]
  43ba84:	b	43bad4 <wcrtomb@plt+0x36dc4>
  43ba88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43ba8c:	add	x1, x0, #0x260
  43ba90:	ldrsw	x0, [sp, #156]
  43ba94:	lsl	x0, x0, #3
  43ba98:	add	x0, x1, x0
  43ba9c:	ldr	w0, [x0]
  43baa0:	cmn	w0, #0x1
  43baa4:	b.ne	43bac8 <wcrtomb@plt+0x36db8>  // b.any
  43baa8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43baac:	add	x1, x0, #0x280
  43bab0:	ldrsw	x0, [sp, #156]
  43bab4:	lsl	x0, x0, #3
  43bab8:	add	x0, x1, x0
  43babc:	ldr	w0, [x0, #4]
  43bac0:	cmn	w0, #0x1
  43bac4:	b.eq	43bae4 <wcrtomb@plt+0x36dd4>  // b.none
  43bac8:	ldr	w0, [sp, #156]
  43bacc:	add	w0, w0, #0x1
  43bad0:	str	w0, [sp, #156]
  43bad4:	ldr	w0, [sp, #156]
  43bad8:	cmp	w0, #0x3
  43badc:	b.le	43ba88 <wcrtomb@plt+0x36d78>
  43bae0:	b	43bae8 <wcrtomb@plt+0x36dd8>
  43bae4:	nop
  43bae8:	ldr	w0, [sp, #156]
  43baec:	cmp	w0, #0x4
  43baf0:	b.ne	43bb0c <wcrtomb@plt+0x36dfc>  // b.any
  43baf4:	bl	404bc0 <__errno_location@plt>
  43baf8:	mov	x1, x0
  43bafc:	mov	w0, #0x18                  	// #24
  43bb00:	str	w0, [x1]
  43bb04:	mov	w0, #0xffffffff            	// #-1
  43bb08:	b	43c03c <wcrtomb@plt+0x3732c>
  43bb0c:	ldr	x0, [sp, #56]
  43bb10:	bl	45b858 <argp_usage@@Base+0x1276c>
  43bb14:	str	x0, [sp, #112]
  43bb18:	ldr	x0, [sp, #112]
  43bb1c:	str	x0, [sp, #144]
  43bb20:	str	xzr, [sp, #128]
  43bb24:	str	xzr, [sp, #136]
  43bb28:	ldr	x0, [sp, #112]
  43bb2c:	str	x0, [sp, #120]
  43bb30:	b	43bbf0 <wcrtomb@plt+0x36ee0>
  43bb34:	ldr	x0, [sp, #120]
  43bb38:	ldrb	w0, [x0]
  43bb3c:	cmp	w0, #0x40
  43bb40:	b.eq	43bb80 <wcrtomb@plt+0x36e70>  // b.none
  43bb44:	cmp	w0, #0x40
  43bb48:	b.gt	43bbd0 <wcrtomb@plt+0x36ec0>
  43bb4c:	cmp	w0, #0xa
  43bb50:	b.eq	43bb60 <wcrtomb@plt+0x36e50>  // b.none
  43bb54:	cmp	w0, #0x3a
  43bb58:	b.eq	43bbac <wcrtomb@plt+0x36e9c>  // b.none
  43bb5c:	b	43bbd0 <wcrtomb@plt+0x36ec0>
  43bb60:	ldr	x0, [sp, #112]
  43bb64:	bl	404880 <free@plt>
  43bb68:	bl	404bc0 <__errno_location@plt>
  43bb6c:	mov	x1, x0
  43bb70:	mov	w0, #0x2                   	// #2
  43bb74:	str	w0, [x1]
  43bb78:	mov	w0, #0xffffffff            	// #-1
  43bb7c:	b	43c03c <wcrtomb@plt+0x3732c>
  43bb80:	ldr	x0, [sp, #128]
  43bb84:	cmp	x0, #0x0
  43bb88:	b.ne	43bbd8 <wcrtomb@plt+0x36ec8>  // b.any
  43bb8c:	ldr	x0, [sp, #144]
  43bb90:	str	x0, [sp, #128]
  43bb94:	ldr	x0, [sp, #120]
  43bb98:	strb	wzr, [x0]
  43bb9c:	ldr	x0, [sp, #120]
  43bba0:	add	x0, x0, #0x1
  43bba4:	str	x0, [sp, #144]
  43bba8:	b	43bbd8 <wcrtomb@plt+0x36ec8>
  43bbac:	ldr	x0, [sp, #136]
  43bbb0:	cmp	x0, #0x0
  43bbb4:	b.ne	43bbe0 <wcrtomb@plt+0x36ed0>  // b.any
  43bbb8:	ldr	x0, [sp, #120]
  43bbbc:	strb	wzr, [x0]
  43bbc0:	ldr	x0, [sp, #120]
  43bbc4:	add	x0, x0, #0x1
  43bbc8:	str	x0, [sp, #136]
  43bbcc:	b	43bbe0 <wcrtomb@plt+0x36ed0>
  43bbd0:	nop
  43bbd4:	b	43bbe4 <wcrtomb@plt+0x36ed4>
  43bbd8:	nop
  43bbdc:	b	43bbe4 <wcrtomb@plt+0x36ed4>
  43bbe0:	nop
  43bbe4:	ldr	x0, [sp, #120]
  43bbe8:	add	x0, x0, #0x1
  43bbec:	str	x0, [sp, #120]
  43bbf0:	ldr	x0, [sp, #120]
  43bbf4:	ldrb	w0, [x0]
  43bbf8:	cmp	w0, #0x0
  43bbfc:	b.ne	43bb34 <wcrtomb@plt+0x36e24>  // b.any
  43bc00:	ldr	x0, [sp, #144]
  43bc04:	bl	404cb0 <gethostbyname@plt>
  43bc08:	cmp	x0, #0x0
  43bc0c:	b.ne	43bc30 <wcrtomb@plt+0x36f20>  // b.any
  43bc10:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43bc14:	add	x0, x0, #0x858
  43bc18:	bl	404c60 <gettext@plt>
  43bc1c:	ldr	x3, [sp, #144]
  43bc20:	mov	x2, x0
  43bc24:	mov	w1, #0x0                   	// #0
  43bc28:	mov	w0, #0x80                  	// #128
  43bc2c:	bl	404100 <error@plt>
  43bc30:	ldr	x0, [sp, #128]
  43bc34:	cmp	x0, #0x0
  43bc38:	b.eq	43bc50 <wcrtomb@plt+0x36f40>  // b.none
  43bc3c:	ldr	x0, [sp, #128]
  43bc40:	ldrb	w0, [x0]
  43bc44:	cmp	w0, #0x0
  43bc48:	b.ne	43bc50 <wcrtomb@plt+0x36f40>  // b.any
  43bc4c:	str	xzr, [sp, #128]
  43bc50:	ldr	x0, [sp, #40]
  43bc54:	cmp	x0, #0x0
  43bc58:	b.ne	43bc7c <wcrtomb@plt+0x36f6c>  // b.any
  43bc5c:	ldr	x0, [sp, #112]
  43bc60:	bl	404880 <free@plt>
  43bc64:	bl	404bc0 <__errno_location@plt>
  43bc68:	mov	x1, x0
  43bc6c:	mov	w0, #0x5                   	// #5
  43bc70:	str	w0, [x1]
  43bc74:	mov	w0, #0xffffffff            	// #-1
  43bc78:	b	43c03c <wcrtomb@plt+0x3732c>
  43bc7c:	ldr	x0, [sp, #40]
  43bc80:	bl	44a0e0 <argp_usage@@Base+0xff4>
  43bc84:	str	x0, [sp, #104]
  43bc88:	ldrsw	x0, [sp, #156]
  43bc8c:	lsl	x1, x0, #3
  43bc90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bc94:	add	x0, x0, #0x280
  43bc98:	add	x0, x1, x0
  43bc9c:	bl	404210 <pipe@plt>
  43bca0:	cmn	w0, #0x1
  43bca4:	b.eq	43bcc8 <wcrtomb@plt+0x36fb8>  // b.none
  43bca8:	ldrsw	x0, [sp, #156]
  43bcac:	lsl	x1, x0, #3
  43bcb0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bcb4:	add	x0, x0, #0x260
  43bcb8:	add	x0, x1, x0
  43bcbc:	bl	404210 <pipe@plt>
  43bcc0:	cmn	w0, #0x1
  43bcc4:	b.ne	43bcf4 <wcrtomb@plt+0x36fe4>  // b.any
  43bcc8:	bl	404bc0 <__errno_location@plt>
  43bccc:	ldr	w0, [x0]
  43bcd0:	str	w0, [sp, #68]
  43bcd4:	ldr	x0, [sp, #112]
  43bcd8:	bl	404880 <free@plt>
  43bcdc:	bl	404bc0 <__errno_location@plt>
  43bce0:	mov	x1, x0
  43bce4:	ldr	w0, [sp, #68]
  43bce8:	str	w0, [x1]
  43bcec:	mov	w0, #0xffffffff            	// #-1
  43bcf0:	b	43c03c <wcrtomb@plt+0x3732c>
  43bcf4:	bl	4042a0 <fork@plt>
  43bcf8:	str	w0, [sp, #100]
  43bcfc:	ldr	w0, [sp, #100]
  43bd00:	cmn	w0, #0x1
  43bd04:	b.ne	43bd34 <wcrtomb@plt+0x37024>  // b.any
  43bd08:	bl	404bc0 <__errno_location@plt>
  43bd0c:	ldr	w0, [x0]
  43bd10:	str	w0, [sp, #72]
  43bd14:	ldr	x0, [sp, #112]
  43bd18:	bl	404880 <free@plt>
  43bd1c:	bl	404bc0 <__errno_location@plt>
  43bd20:	mov	x1, x0
  43bd24:	ldr	w0, [sp, #72]
  43bd28:	str	w0, [x1]
  43bd2c:	mov	w0, #0xffffffff            	// #-1
  43bd30:	b	43c03c <wcrtomb@plt+0x3732c>
  43bd34:	ldr	w0, [sp, #100]
  43bd38:	cmp	w0, #0x0
  43bd3c:	b.ne	43bf30 <wcrtomb@plt+0x37220>  // b.any
  43bd40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bd44:	add	x1, x0, #0x280
  43bd48:	ldrsw	x0, [sp, #156]
  43bd4c:	lsl	x0, x0, #3
  43bd50:	add	x0, x1, x0
  43bd54:	ldr	w0, [x0]
  43bd58:	mov	w1, #0x0                   	// #0
  43bd5c:	bl	404b00 <dup2@plt>
  43bd60:	cmp	w0, #0x0
  43bd64:	b.lt	43be60 <wcrtomb@plt+0x37150>  // b.tstop
  43bd68:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bd6c:	add	x1, x0, #0x280
  43bd70:	ldrsw	x0, [sp, #156]
  43bd74:	lsl	x0, x0, #3
  43bd78:	add	x0, x1, x0
  43bd7c:	ldr	w0, [x0]
  43bd80:	cmp	w0, #0x0
  43bd84:	b.eq	43bdac <wcrtomb@plt+0x3709c>  // b.none
  43bd88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bd8c:	add	x1, x0, #0x280
  43bd90:	ldrsw	x0, [sp, #156]
  43bd94:	lsl	x0, x0, #3
  43bd98:	add	x0, x1, x0
  43bd9c:	ldr	w0, [x0]
  43bda0:	bl	404660 <close@plt>
  43bda4:	cmp	w0, #0x0
  43bda8:	b.ne	43be60 <wcrtomb@plt+0x37150>  // b.any
  43bdac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bdb0:	add	x1, x0, #0x280
  43bdb4:	ldrsw	x0, [sp, #156]
  43bdb8:	lsl	x0, x0, #3
  43bdbc:	add	x0, x1, x0
  43bdc0:	ldr	w0, [x0, #4]
  43bdc4:	cmp	w0, #0x0
  43bdc8:	b.eq	43bdf0 <wcrtomb@plt+0x370e0>  // b.none
  43bdcc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bdd0:	add	x1, x0, #0x280
  43bdd4:	ldrsw	x0, [sp, #156]
  43bdd8:	lsl	x0, x0, #3
  43bddc:	add	x0, x1, x0
  43bde0:	ldr	w0, [x0, #4]
  43bde4:	bl	404660 <close@plt>
  43bde8:	cmp	w0, #0x0
  43bdec:	b.ne	43be60 <wcrtomb@plt+0x37150>  // b.any
  43bdf0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bdf4:	add	x1, x0, #0x260
  43bdf8:	ldrsw	x0, [sp, #156]
  43bdfc:	lsl	x0, x0, #3
  43be00:	add	x0, x1, x0
  43be04:	ldr	w0, [x0, #4]
  43be08:	mov	w1, #0x1                   	// #1
  43be0c:	bl	404b00 <dup2@plt>
  43be10:	cmp	w0, #0x0
  43be14:	b.lt	43be60 <wcrtomb@plt+0x37150>  // b.tstop
  43be18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43be1c:	add	x1, x0, #0x260
  43be20:	ldrsw	x0, [sp, #156]
  43be24:	lsl	x0, x0, #3
  43be28:	add	x0, x1, x0
  43be2c:	ldr	w0, [x0]
  43be30:	bl	404660 <close@plt>
  43be34:	cmp	w0, #0x0
  43be38:	b.ne	43be60 <wcrtomb@plt+0x37150>  // b.any
  43be3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43be40:	add	x1, x0, #0x260
  43be44:	ldrsw	x0, [sp, #156]
  43be48:	lsl	x0, x0, #3
  43be4c:	add	x0, x1, x0
  43be50:	ldr	w0, [x0, #4]
  43be54:	bl	404660 <close@plt>
  43be58:	cmp	w0, #0x0
  43be5c:	b.eq	43be84 <wcrtomb@plt+0x37174>  // b.none
  43be60:	bl	404bc0 <__errno_location@plt>
  43be64:	ldr	w19, [x0]
  43be68:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43be6c:	add	x0, x0, #0x880
  43be70:	bl	404c60 <gettext@plt>
  43be74:	mov	x2, x0
  43be78:	mov	w1, w19
  43be7c:	mov	w0, #0x80                  	// #128
  43be80:	bl	404100 <error@plt>
  43be84:	bl	404200 <getuid@plt>
  43be88:	bl	404070 <setuid@plt>
  43be8c:	cmp	w0, #0x0
  43be90:	b.ne	43bea4 <wcrtomb@plt+0x37194>  // b.any
  43be94:	bl	4048b0 <getgid@plt>
  43be98:	bl	404720 <setgid@plt>
  43be9c:	cmp	w0, #0x0
  43bea0:	b.eq	43bea8 <wcrtomb@plt+0x37198>  // b.none
  43bea4:	bl	404710 <abort@plt>
  43bea8:	ldr	x0, [sp, #128]
  43beac:	cmp	x0, #0x0
  43beb0:	b.eq	43bee8 <wcrtomb@plt+0x371d8>  // b.none
  43beb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43beb8:	add	x0, x0, #0x2a0
  43bebc:	ldr	x0, [x0]
  43bec0:	mov	x6, #0x0                   	// #0
  43bec4:	mov	x5, x0
  43bec8:	ldr	x4, [sp, #128]
  43becc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43bed0:	add	x3, x0, #0x8a8
  43bed4:	ldr	x2, [sp, #144]
  43bed8:	ldr	x1, [sp, #104]
  43bedc:	ldr	x0, [sp, #40]
  43bee0:	bl	404130 <execl@plt>
  43bee4:	b	43bf0c <wcrtomb@plt+0x371fc>
  43bee8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43beec:	add	x0, x0, #0x2a0
  43bef0:	ldr	x0, [x0]
  43bef4:	mov	x4, #0x0                   	// #0
  43bef8:	mov	x3, x0
  43befc:	ldr	x2, [sp, #144]
  43bf00:	ldr	x1, [sp, #104]
  43bf04:	ldr	x0, [sp, #40]
  43bf08:	bl	404130 <execl@plt>
  43bf0c:	bl	404bc0 <__errno_location@plt>
  43bf10:	ldr	w19, [x0]
  43bf14:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43bf18:	add	x0, x0, #0x8b0
  43bf1c:	bl	404c60 <gettext@plt>
  43bf20:	mov	x2, x0
  43bf24:	mov	w1, w19
  43bf28:	mov	w0, #0x80                  	// #128
  43bf2c:	bl	404100 <error@plt>
  43bf30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bf34:	add	x1, x0, #0x260
  43bf38:	ldrsw	x0, [sp, #156]
  43bf3c:	lsl	x0, x0, #3
  43bf40:	add	x0, x1, x0
  43bf44:	ldr	w0, [x0, #4]
  43bf48:	bl	404660 <close@plt>
  43bf4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43bf50:	add	x1, x0, #0x280
  43bf54:	ldrsw	x0, [sp, #156]
  43bf58:	lsl	x0, x0, #3
  43bf5c:	add	x0, x1, x0
  43bf60:	ldr	w0, [x0]
  43bf64:	bl	404660 <close@plt>
  43bf68:	ldr	x0, [sp, #136]
  43bf6c:	bl	4040b0 <strlen@plt>
  43bf70:	str	x0, [sp, #88]
  43bf74:	ldr	x0, [sp, #88]
  43bf78:	add	x0, x0, #0x3e8
  43bf7c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  43bf80:	str	x0, [sp, #80]
  43bf84:	ldr	x2, [sp, #136]
  43bf88:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43bf8c:	add	x1, x0, #0x8d0
  43bf90:	ldr	x0, [sp, #80]
  43bf94:	bl	4041f0 <sprintf@plt>
  43bf98:	ldr	x0, [sp, #88]
  43bf9c:	add	x0, x0, #0x2
  43bfa0:	ldr	x1, [sp, #80]
  43bfa4:	add	x0, x1, x0
  43bfa8:	ldr	w1, [sp, #52]
  43bfac:	bl	43b728 <wcrtomb@plt+0x36a18>
  43bfb0:	ldr	x0, [sp, #80]
  43bfb4:	bl	4040b0 <strlen@plt>
  43bfb8:	mov	x1, x0
  43bfbc:	ldr	x0, [sp, #80]
  43bfc0:	add	x0, x0, x1
  43bfc4:	mov	w1, #0xa                   	// #10
  43bfc8:	strh	w1, [x0]
  43bfcc:	ldr	x1, [sp, #80]
  43bfd0:	ldr	w0, [sp, #156]
  43bfd4:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43bfd8:	cmn	w0, #0x1
  43bfdc:	b.eq	43bff0 <wcrtomb@plt+0x372e0>  // b.none
  43bfe0:	ldr	w0, [sp, #156]
  43bfe4:	bl	43b524 <wcrtomb@plt+0x36814>
  43bfe8:	cmn	x0, #0x1
  43bfec:	b.ne	43c020 <wcrtomb@plt+0x37310>  // b.any
  43bff0:	bl	404bc0 <__errno_location@plt>
  43bff4:	ldr	w0, [x0]
  43bff8:	str	w0, [sp, #76]
  43bffc:	ldr	x0, [sp, #80]
  43c000:	bl	404880 <free@plt>
  43c004:	ldr	x0, [sp, #112]
  43c008:	bl	404880 <free@plt>
  43c00c:	ldr	w1, [sp, #76]
  43c010:	ldr	w0, [sp, #156]
  43c014:	bl	43b210 <wcrtomb@plt+0x36500>
  43c018:	mov	w0, #0xffffffff            	// #-1
  43c01c:	b	43c03c <wcrtomb@plt+0x3732c>
  43c020:	ldr	x0, [sp, #80]
  43c024:	bl	404880 <free@plt>
  43c028:	ldr	x0, [sp, #112]
  43c02c:	bl	404880 <free@plt>
  43c030:	ldr	w1, [sp, #156]
  43c034:	ldr	w0, [sp, #48]
  43c038:	add	w0, w1, w0
  43c03c:	ldr	x19, [sp, #16]
  43c040:	ldp	x29, x30, [sp], #160
  43c044:	ret
  43c048:	stp	x29, x30, [sp, #-48]!
  43c04c:	mov	x29, sp
  43c050:	str	w0, [sp, #28]
  43c054:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c058:	add	x1, x0, #0x8d8
  43c05c:	ldr	w0, [sp, #28]
  43c060:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43c064:	cmn	w0, #0x1
  43c068:	b.ne	43c074 <wcrtomb@plt+0x37364>  // b.any
  43c06c:	mov	w0, #0xffffffff            	// #-1
  43c070:	b	43c098 <wcrtomb@plt+0x37388>
  43c074:	ldr	w0, [sp, #28]
  43c078:	bl	43b524 <wcrtomb@plt+0x36814>
  43c07c:	str	x0, [sp, #40]
  43c080:	bl	404bc0 <__errno_location@plt>
  43c084:	ldr	w0, [x0]
  43c088:	mov	w1, w0
  43c08c:	ldr	w0, [sp, #28]
  43c090:	bl	43b210 <wcrtomb@plt+0x36500>
  43c094:	ldr	x0, [sp, #40]
  43c098:	ldp	x29, x30, [sp], #48
  43c09c:	ret
  43c0a0:	stp	x29, x30, [sp, #-144]!
  43c0a4:	mov	x29, sp
  43c0a8:	str	w0, [sp, #44]
  43c0ac:	str	x1, [sp, #32]
  43c0b0:	str	x2, [sp, #24]
  43c0b4:	add	x3, sp, #0x38
  43c0b8:	ldr	x2, [sp, #24]
  43c0bc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c0c0:	add	x1, x0, #0x8e0
  43c0c4:	mov	x0, x3
  43c0c8:	bl	4041f0 <sprintf@plt>
  43c0cc:	add	x0, sp, #0x38
  43c0d0:	mov	x1, x0
  43c0d4:	ldr	w0, [sp, #44]
  43c0d8:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43c0dc:	cmn	w0, #0x1
  43c0e0:	b.eq	43c10c <wcrtomb@plt+0x373fc>  // b.none
  43c0e4:	ldr	w0, [sp, #44]
  43c0e8:	bl	43b524 <wcrtomb@plt+0x36814>
  43c0ec:	str	x0, [sp, #128]
  43c0f0:	ldr	x0, [sp, #128]
  43c0f4:	cmn	x0, #0x1
  43c0f8:	b.eq	43c10c <wcrtomb@plt+0x373fc>  // b.none
  43c0fc:	ldr	x1, [sp, #128]
  43c100:	ldr	x0, [sp, #24]
  43c104:	cmp	x1, x0
  43c108:	b.ls	43c114 <wcrtomb@plt+0x37404>  // b.plast
  43c10c:	mov	x0, #0xffffffffffffffff    	// #-1
  43c110:	b	43c1b4 <wcrtomb@plt+0x374a4>
  43c114:	str	xzr, [sp, #136]
  43c118:	b	43c1a0 <wcrtomb@plt+0x37490>
  43c11c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43c120:	add	x1, x0, #0x260
  43c124:	ldrsw	x0, [sp, #44]
  43c128:	lsl	x0, x0, #3
  43c12c:	add	x0, x1, x0
  43c130:	ldr	w3, [x0]
  43c134:	ldr	x1, [sp, #128]
  43c138:	ldr	x0, [sp, #136]
  43c13c:	sub	x0, x1, x0
  43c140:	mov	x2, x0
  43c144:	ldr	x1, [sp, #32]
  43c148:	mov	w0, w3
  43c14c:	bl	45a2ac <argp_usage@@Base+0x111c0>
  43c150:	str	x0, [sp, #120]
  43c154:	ldr	x0, [sp, #120]
  43c158:	cmn	x0, #0x1
  43c15c:	b.eq	43c16c <wcrtomb@plt+0x3745c>  // b.none
  43c160:	ldr	x0, [sp, #120]
  43c164:	cmp	x0, #0x0
  43c168:	b.ne	43c180 <wcrtomb@plt+0x37470>  // b.any
  43c16c:	mov	w1, #0x5                   	// #5
  43c170:	ldr	w0, [sp, #44]
  43c174:	bl	43b210 <wcrtomb@plt+0x36500>
  43c178:	mov	x0, #0xffffffffffffffff    	// #-1
  43c17c:	b	43c1b4 <wcrtomb@plt+0x374a4>
  43c180:	ldr	x1, [sp, #136]
  43c184:	ldr	x0, [sp, #120]
  43c188:	add	x0, x1, x0
  43c18c:	str	x0, [sp, #136]
  43c190:	ldr	x1, [sp, #32]
  43c194:	ldr	x0, [sp, #120]
  43c198:	add	x0, x1, x0
  43c19c:	str	x0, [sp, #32]
  43c1a0:	ldr	x1, [sp, #136]
  43c1a4:	ldr	x0, [sp, #128]
  43c1a8:	cmp	x1, x0
  43c1ac:	b.cc	43c11c <wcrtomb@plt+0x3740c>  // b.lo, b.ul, b.last
  43c1b0:	ldr	x0, [sp, #128]
  43c1b4:	ldp	x29, x30, [sp], #144
  43c1b8:	ret
  43c1bc:	stp	x29, x30, [sp, #-144]!
  43c1c0:	mov	x29, sp
  43c1c4:	str	w0, [sp, #44]
  43c1c8:	str	x1, [sp, #32]
  43c1cc:	str	x2, [sp, #24]
  43c1d0:	add	x3, sp, #0x38
  43c1d4:	ldr	x2, [sp, #24]
  43c1d8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c1dc:	add	x1, x0, #0x8e8
  43c1e0:	mov	x0, x3
  43c1e4:	bl	4041f0 <sprintf@plt>
  43c1e8:	add	x0, sp, #0x38
  43c1ec:	mov	x1, x0
  43c1f0:	ldr	w0, [sp, #44]
  43c1f4:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43c1f8:	cmn	w0, #0x1
  43c1fc:	b.ne	43c208 <wcrtomb@plt+0x374f8>  // b.any
  43c200:	mov	x0, #0x0                   	// #0
  43c204:	b	43c2ac <wcrtomb@plt+0x3759c>
  43c208:	mov	x1, #0x1                   	// #1
  43c20c:	mov	w0, #0xd                   	// #13
  43c210:	bl	404360 <signal@plt>
  43c214:	str	x0, [sp, #128]
  43c218:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43c21c:	add	x1, x0, #0x280
  43c220:	ldrsw	x0, [sp, #44]
  43c224:	lsl	x0, x0, #3
  43c228:	add	x0, x1, x0
  43c22c:	ldr	w0, [x0, #4]
  43c230:	ldr	x2, [sp, #24]
  43c234:	ldr	x1, [sp, #32]
  43c238:	bl	44dee8 <argp_usage@@Base+0x4dfc>
  43c23c:	str	x0, [sp, #136]
  43c240:	ldr	x1, [sp, #128]
  43c244:	mov	w0, #0xd                   	// #13
  43c248:	bl	404360 <signal@plt>
  43c24c:	ldr	x1, [sp, #136]
  43c250:	ldr	x0, [sp, #24]
  43c254:	cmp	x1, x0
  43c258:	b.ne	43c29c <wcrtomb@plt+0x3758c>  // b.any
  43c25c:	ldr	w0, [sp, #44]
  43c260:	bl	43b524 <wcrtomb@plt+0x36814>
  43c264:	str	x0, [sp, #120]
  43c268:	ldr	x0, [sp, #120]
  43c26c:	cmp	x0, #0x0
  43c270:	b.ge	43c27c <wcrtomb@plt+0x3756c>  // b.tcont
  43c274:	mov	x0, #0x0                   	// #0
  43c278:	b	43c2ac <wcrtomb@plt+0x3759c>
  43c27c:	ldr	x0, [sp, #24]
  43c280:	ldr	x1, [sp, #120]
  43c284:	cmp	x1, x0
  43c288:	b.ne	43c294 <wcrtomb@plt+0x37584>  // b.any
  43c28c:	ldr	x0, [sp, #24]
  43c290:	b	43c2ac <wcrtomb@plt+0x3759c>
  43c294:	ldr	x0, [sp, #120]
  43c298:	str	x0, [sp, #136]
  43c29c:	mov	w1, #0x5                   	// #5
  43c2a0:	ldr	w0, [sp, #44]
  43c2a4:	bl	43b210 <wcrtomb@plt+0x36500>
  43c2a8:	ldr	x0, [sp, #136]
  43c2ac:	ldp	x29, x30, [sp], #144
  43c2b0:	ret
  43c2b4:	stp	x29, x30, [sp, #-144]!
  43c2b8:	mov	x29, sp
  43c2bc:	str	w0, [sp, #28]
  43c2c0:	str	x1, [sp, #16]
  43c2c4:	str	w2, [sp, #24]
  43c2c8:	ldr	x0, [sp, #16]
  43c2cc:	cmp	x0, #0x0
  43c2d0:	b.ge	43c2e0 <wcrtomb@plt+0x375d0>  // b.tcont
  43c2d4:	ldr	x0, [sp, #16]
  43c2d8:	neg	x0, x0
  43c2dc:	b	43c2e4 <wcrtomb@plt+0x375d4>
  43c2e0:	ldr	x0, [sp, #16]
  43c2e4:	str	x0, [sp, #136]
  43c2e8:	add	x0, sp, #0x28
  43c2ec:	add	x0, x0, #0x15
  43c2f0:	str	x0, [sp, #128]
  43c2f4:	ldr	x0, [sp, #128]
  43c2f8:	sub	x0, x0, #0x1
  43c2fc:	str	x0, [sp, #128]
  43c300:	ldr	x0, [sp, #128]
  43c304:	strb	wzr, [x0]
  43c308:	ldr	x2, [sp, #136]
  43c30c:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  43c310:	movk	x0, #0xcccd
  43c314:	umulh	x0, x2, x0
  43c318:	lsr	x1, x0, #3
  43c31c:	mov	x0, x1
  43c320:	lsl	x0, x0, #2
  43c324:	add	x0, x0, x1
  43c328:	lsl	x0, x0, #1
  43c32c:	sub	x1, x2, x0
  43c330:	and	w0, w1, #0xff
  43c334:	ldr	x1, [sp, #128]
  43c338:	sub	x1, x1, #0x1
  43c33c:	str	x1, [sp, #128]
  43c340:	add	w0, w0, #0x30
  43c344:	and	w1, w0, #0xff
  43c348:	ldr	x0, [sp, #128]
  43c34c:	strb	w1, [x0]
  43c350:	ldr	x1, [sp, #136]
  43c354:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  43c358:	movk	x0, #0xcccd
  43c35c:	umulh	x0, x1, x0
  43c360:	lsr	x0, x0, #3
  43c364:	str	x0, [sp, #136]
  43c368:	ldr	x0, [sp, #136]
  43c36c:	cmp	x0, #0x0
  43c370:	b.ne	43c308 <wcrtomb@plt+0x375f8>  // b.any
  43c374:	ldr	x0, [sp, #16]
  43c378:	cmp	x0, #0x0
  43c37c:	b.ge	43c398 <wcrtomb@plt+0x37688>  // b.tcont
  43c380:	ldr	x0, [sp, #128]
  43c384:	sub	x0, x0, #0x1
  43c388:	str	x0, [sp, #128]
  43c38c:	ldr	x0, [sp, #128]
  43c390:	mov	w1, #0x2d                  	// #45
  43c394:	strb	w1, [x0]
  43c398:	ldr	w0, [sp, #24]
  43c39c:	cmp	w0, #0x2
  43c3a0:	b.eq	43c3e0 <wcrtomb@plt+0x376d0>  // b.none
  43c3a4:	ldr	w0, [sp, #24]
  43c3a8:	cmp	w0, #0x2
  43c3ac:	b.gt	43c3ec <wcrtomb@plt+0x376dc>
  43c3b0:	ldr	w0, [sp, #24]
  43c3b4:	cmp	w0, #0x0
  43c3b8:	b.eq	43c3cc <wcrtomb@plt+0x376bc>  // b.none
  43c3bc:	ldr	w0, [sp, #24]
  43c3c0:	cmp	w0, #0x1
  43c3c4:	b.eq	43c3d4 <wcrtomb@plt+0x376c4>  // b.none
  43c3c8:	b	43c3ec <wcrtomb@plt+0x376dc>
  43c3cc:	str	wzr, [sp, #24]
  43c3d0:	b	43c3f0 <wcrtomb@plt+0x376e0>
  43c3d4:	mov	w0, #0x1                   	// #1
  43c3d8:	str	w0, [sp, #24]
  43c3dc:	b	43c3f0 <wcrtomb@plt+0x376e0>
  43c3e0:	mov	w0, #0x2                   	// #2
  43c3e4:	str	w0, [sp, #24]
  43c3e8:	b	43c3f0 <wcrtomb@plt+0x376e0>
  43c3ec:	bl	404710 <abort@plt>
  43c3f0:	add	x4, sp, #0x40
  43c3f4:	ldr	w3, [sp, #24]
  43c3f8:	ldr	x2, [sp, #128]
  43c3fc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c400:	add	x1, x0, #0x8f0
  43c404:	mov	x0, x4
  43c408:	bl	4041f0 <sprintf@plt>
  43c40c:	add	x0, sp, #0x40
  43c410:	mov	x1, x0
  43c414:	ldr	w0, [sp, #28]
  43c418:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43c41c:	cmn	w0, #0x1
  43c420:	b.ne	43c42c <wcrtomb@plt+0x3771c>  // b.any
  43c424:	mov	x0, #0xffffffffffffffff    	// #-1
  43c428:	b	43c434 <wcrtomb@plt+0x37724>
  43c42c:	ldr	w0, [sp, #28]
  43c430:	bl	43b58c <wcrtomb@plt+0x3687c>
  43c434:	ldp	x29, x30, [sp], #144
  43c438:	ret
  43c43c:	stp	x29, x30, [sp, #-160]!
  43c440:	mov	x29, sp
  43c444:	str	w0, [sp, #28]
  43c448:	str	w1, [sp, #24]
  43c44c:	str	x2, [sp, #16]
  43c450:	ldr	w1, [sp, #24]
  43c454:	mov	w0, #0x6d02                	// #27906
  43c458:	movk	w0, #0x8030, lsl #16
  43c45c:	cmp	w1, w0
  43c460:	b.eq	43c5c8 <wcrtomb@plt+0x378b8>  // b.none
  43c464:	ldr	w1, [sp, #24]
  43c468:	mov	w0, #0x6d01                	// #27905
  43c46c:	movk	w0, #0x4008, lsl #16
  43c470:	cmp	w1, w0
  43c474:	b.eq	43c490 <wcrtomb@plt+0x37780>  // b.none
  43c478:	bl	404bc0 <__errno_location@plt>
  43c47c:	mov	x1, x0
  43c480:	mov	w0, #0x5f                  	// #95
  43c484:	str	w0, [x1]
  43c488:	mov	w0, #0xffffffff            	// #-1
  43c48c:	b	43c738 <wcrtomb@plt+0x37a28>
  43c490:	ldr	x0, [sp, #16]
  43c494:	ldr	w0, [x0, #4]
  43c498:	cmp	w0, #0x0
  43c49c:	b.ge	43c4b4 <wcrtomb@plt+0x377a4>  // b.tcont
  43c4a0:	ldr	x0, [sp, #16]
  43c4a4:	ldr	w0, [x0, #4]
  43c4a8:	sxtw	x0, w0
  43c4ac:	neg	x0, x0
  43c4b0:	b	43c4c0 <wcrtomb@plt+0x377b0>
  43c4b4:	ldr	x0, [sp, #16]
  43c4b8:	ldr	w0, [x0, #4]
  43c4bc:	sxtw	x0, w0
  43c4c0:	str	x0, [sp, #152]
  43c4c4:	add	x0, sp, #0x68
  43c4c8:	add	x0, x0, #0x15
  43c4cc:	str	x0, [sp, #144]
  43c4d0:	ldr	x0, [sp, #144]
  43c4d4:	sub	x0, x0, #0x1
  43c4d8:	str	x0, [sp, #144]
  43c4dc:	ldr	x0, [sp, #144]
  43c4e0:	strb	wzr, [x0]
  43c4e4:	ldr	x2, [sp, #152]
  43c4e8:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  43c4ec:	movk	x0, #0xcccd
  43c4f0:	umulh	x0, x2, x0
  43c4f4:	lsr	x1, x0, #3
  43c4f8:	mov	x0, x1
  43c4fc:	lsl	x0, x0, #2
  43c500:	add	x0, x0, x1
  43c504:	lsl	x0, x0, #1
  43c508:	sub	x1, x2, x0
  43c50c:	and	w0, w1, #0xff
  43c510:	ldr	x1, [sp, #144]
  43c514:	sub	x1, x1, #0x1
  43c518:	str	x1, [sp, #144]
  43c51c:	add	w0, w0, #0x30
  43c520:	and	w1, w0, #0xff
  43c524:	ldr	x0, [sp, #144]
  43c528:	strb	w1, [x0]
  43c52c:	ldr	x1, [sp, #152]
  43c530:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  43c534:	movk	x0, #0xcccd
  43c538:	umulh	x0, x1, x0
  43c53c:	lsr	x0, x0, #3
  43c540:	str	x0, [sp, #152]
  43c544:	ldr	x0, [sp, #152]
  43c548:	cmp	x0, #0x0
  43c54c:	b.ne	43c4e4 <wcrtomb@plt+0x377d4>  // b.any
  43c550:	ldr	x0, [sp, #16]
  43c554:	ldr	w0, [x0, #4]
  43c558:	cmp	w0, #0x0
  43c55c:	b.ge	43c578 <wcrtomb@plt+0x37868>  // b.tcont
  43c560:	ldr	x0, [sp, #144]
  43c564:	sub	x0, x0, #0x1
  43c568:	str	x0, [sp, #144]
  43c56c:	ldr	x0, [sp, #144]
  43c570:	mov	w1, #0x2d                  	// #45
  43c574:	strb	w1, [x0]
  43c578:	ldr	x0, [sp, #16]
  43c57c:	ldrsh	w0, [x0]
  43c580:	add	x4, sp, #0x28
  43c584:	ldr	x3, [sp, #144]
  43c588:	mov	w2, w0
  43c58c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c590:	add	x1, x0, #0x8f8
  43c594:	mov	x0, x4
  43c598:	bl	4041f0 <sprintf@plt>
  43c59c:	add	x0, sp, #0x28
  43c5a0:	mov	x1, x0
  43c5a4:	ldr	w0, [sp, #28]
  43c5a8:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43c5ac:	cmn	w0, #0x1
  43c5b0:	b.ne	43c5bc <wcrtomb@plt+0x378ac>  // b.any
  43c5b4:	mov	w0, #0xffffffff            	// #-1
  43c5b8:	b	43c738 <wcrtomb@plt+0x37a28>
  43c5bc:	ldr	w0, [sp, #28]
  43c5c0:	bl	43b524 <wcrtomb@plt+0x36814>
  43c5c4:	b	43c738 <wcrtomb@plt+0x37a28>
  43c5c8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c5cc:	add	x1, x0, #0x900
  43c5d0:	ldr	w0, [sp, #28]
  43c5d4:	bl	43b2ac <wcrtomb@plt+0x3659c>
  43c5d8:	cmn	w0, #0x1
  43c5dc:	b.eq	43c5f8 <wcrtomb@plt+0x378e8>  // b.none
  43c5e0:	ldr	w0, [sp, #28]
  43c5e4:	bl	43b524 <wcrtomb@plt+0x36814>
  43c5e8:	str	x0, [sp, #136]
  43c5ec:	ldr	x0, [sp, #136]
  43c5f0:	cmn	x0, #0x1
  43c5f4:	b.ne	43c600 <wcrtomb@plt+0x378f0>  // b.any
  43c5f8:	mov	w0, #0xffffffff            	// #-1
  43c5fc:	b	43c738 <wcrtomb@plt+0x37a28>
  43c600:	ldr	x0, [sp, #136]
  43c604:	cmp	x0, #0x8
  43c608:	b.ls	43c69c <wcrtomb@plt+0x3798c>  // b.plast
  43c60c:	bl	404bc0 <__errno_location@plt>
  43c610:	mov	x1, x0
  43c614:	mov	w0, #0x4b                  	// #75
  43c618:	str	w0, [x1]
  43c61c:	mov	w0, #0xffffffff            	// #-1
  43c620:	b	43c738 <wcrtomb@plt+0x37a28>
  43c624:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43c628:	add	x1, x0, #0x260
  43c62c:	ldrsw	x0, [sp, #28]
  43c630:	lsl	x0, x0, #3
  43c634:	add	x0, x1, x0
  43c638:	ldr	w0, [x0]
  43c63c:	ldr	x1, [sp, #136]
  43c640:	mov	x2, x1
  43c644:	ldr	x1, [sp, #16]
  43c648:	bl	45a2ac <argp_usage@@Base+0x111c0>
  43c64c:	str	x0, [sp, #128]
  43c650:	ldr	x0, [sp, #128]
  43c654:	cmn	x0, #0x1
  43c658:	b.eq	43c668 <wcrtomb@plt+0x37958>  // b.none
  43c65c:	ldr	x0, [sp, #128]
  43c660:	cmp	x0, #0x0
  43c664:	b.ne	43c67c <wcrtomb@plt+0x3796c>  // b.any
  43c668:	mov	w1, #0x5                   	// #5
  43c66c:	ldr	w0, [sp, #28]
  43c670:	bl	43b210 <wcrtomb@plt+0x36500>
  43c674:	mov	w0, #0xffffffff            	// #-1
  43c678:	b	43c738 <wcrtomb@plt+0x37a28>
  43c67c:	ldr	x1, [sp, #136]
  43c680:	ldr	x0, [sp, #128]
  43c684:	sub	x0, x1, x0
  43c688:	str	x0, [sp, #136]
  43c68c:	ldr	x1, [sp, #16]
  43c690:	ldr	x0, [sp, #128]
  43c694:	add	x0, x1, x0
  43c698:	str	x0, [sp, #16]
  43c69c:	ldr	x0, [sp, #136]
  43c6a0:	cmp	x0, #0x0
  43c6a4:	b.gt	43c624 <wcrtomb@plt+0x37914>
  43c6a8:	ldr	x0, [sp, #16]
  43c6ac:	ldr	x0, [x0]
  43c6b0:	cmp	x0, #0xff
  43c6b4:	b.gt	43c6c0 <wcrtomb@plt+0x379b0>
  43c6b8:	mov	w0, #0x0                   	// #0
  43c6bc:	b	43c738 <wcrtomb@plt+0x37a28>
  43c6c0:	str	xzr, [sp, #128]
  43c6c4:	b	43c724 <wcrtomb@plt+0x37a14>
  43c6c8:	ldr	x1, [sp, #16]
  43c6cc:	ldr	x0, [sp, #128]
  43c6d0:	add	x0, x1, x0
  43c6d4:	ldrb	w0, [x0]
  43c6d8:	strb	w0, [sp, #127]
  43c6dc:	ldr	x0, [sp, #128]
  43c6e0:	add	x0, x0, #0x1
  43c6e4:	ldr	x1, [sp, #16]
  43c6e8:	add	x1, x1, x0
  43c6ec:	ldr	x2, [sp, #16]
  43c6f0:	ldr	x0, [sp, #128]
  43c6f4:	add	x0, x2, x0
  43c6f8:	ldrb	w1, [x1]
  43c6fc:	strb	w1, [x0]
  43c700:	ldr	x0, [sp, #128]
  43c704:	add	x0, x0, #0x1
  43c708:	ldr	x1, [sp, #16]
  43c70c:	add	x0, x1, x0
  43c710:	ldrb	w1, [sp, #127]
  43c714:	strb	w1, [x0]
  43c718:	ldr	x0, [sp, #128]
  43c71c:	add	x0, x0, #0x2
  43c720:	str	x0, [sp, #128]
  43c724:	ldr	x0, [sp, #136]
  43c728:	ldr	x1, [sp, #128]
  43c72c:	cmp	x1, x0
  43c730:	b.cc	43c6c8 <wcrtomb@plt+0x379b8>  // b.lo, b.ul, b.last
  43c734:	mov	w0, #0x0                   	// #0
  43c738:	ldp	x29, x30, [sp], #160
  43c73c:	ret
  43c740:	stp	x29, x30, [sp, #-32]!
  43c744:	mov	x29, sp
  43c748:	mov	w0, #0x1                   	// #1
  43c74c:	strb	w0, [sp, #27]
  43c750:	str	wzr, [sp, #28]
  43c754:	b	43c820 <wcrtomb@plt+0x37b10>
  43c758:	mov	w1, #0x1                   	// #1
  43c75c:	ldr	w0, [sp, #28]
  43c760:	bl	45c480 <argp_usage@@Base+0x13394>
  43c764:	cmp	w0, #0x0
  43c768:	b.ge	43c814 <wcrtomb@plt+0x37b04>  // b.tcont
  43c76c:	bl	404bc0 <__errno_location@plt>
  43c770:	ldr	w0, [x0]
  43c774:	cmp	w0, #0x9
  43c778:	b.eq	43c784 <wcrtomb@plt+0x37a74>  // b.none
  43c77c:	strb	wzr, [sp, #27]
  43c780:	b	43c814 <wcrtomb@plt+0x37b04>
  43c784:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c788:	add	x0, x0, #0x928
  43c78c:	ldrsw	x1, [sp, #28]
  43c790:	ldr	w0, [x0, x1, lsl #2]
  43c794:	str	w0, [sp, #16]
  43c798:	ldr	w0, [sp, #16]
  43c79c:	cmp	w0, #0x0
  43c7a0:	b.eq	43c7d8 <wcrtomb@plt+0x37ac8>  // b.none
  43c7a4:	ldr	w1, [sp, #16]
  43c7a8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c7ac:	add	x0, x0, #0x908
  43c7b0:	bl	404430 <open@plt>
  43c7b4:	mov	w1, w0
  43c7b8:	ldr	w0, [sp, #28]
  43c7bc:	cmp	w0, w1
  43c7c0:	cset	w0, ne  // ne = any
  43c7c4:	and	w0, w0, #0xff
  43c7c8:	str	w0, [sp, #20]
  43c7cc:	ldr	w0, [sp, #20]
  43c7d0:	cmp	w0, #0x0
  43c7d4:	b.eq	43c7ec <wcrtomb@plt+0x37adc>  // b.none
  43c7d8:	ldr	w1, [sp, #16]
  43c7dc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c7e0:	add	x0, x0, #0x918
  43c7e4:	bl	404430 <open@plt>
  43c7e8:	str	w0, [sp, #20]
  43c7ec:	ldr	w1, [sp, #20]
  43c7f0:	ldr	w0, [sp, #28]
  43c7f4:	cmp	w1, w0
  43c7f8:	b.eq	43c814 <wcrtomb@plt+0x37b04>  // b.none
  43c7fc:	ldr	w0, [sp, #20]
  43c800:	cmp	w0, #0x0
  43c804:	b.lt	43c810 <wcrtomb@plt+0x37b00>  // b.tstop
  43c808:	ldr	w0, [sp, #20]
  43c80c:	bl	404660 <close@plt>
  43c810:	strb	wzr, [sp, #27]
  43c814:	ldr	w0, [sp, #28]
  43c818:	add	w0, w0, #0x1
  43c81c:	str	w0, [sp, #28]
  43c820:	ldr	w0, [sp, #28]
  43c824:	cmp	w0, #0x2
  43c828:	b.le	43c758 <wcrtomb@plt+0x37a48>
  43c82c:	ldrb	w0, [sp, #27]
  43c830:	ldp	x29, x30, [sp], #32
  43c834:	ret
  43c838:	stp	x29, x30, [sp, #-48]!
  43c83c:	mov	x29, sp
  43c840:	str	x19, [sp, #16]
  43c844:	str	x0, [sp, #40]
  43c848:	ldr	x0, [sp, #40]
  43c84c:	ldr	x19, [x0, #96]
  43c850:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c854:	add	x0, x0, #0x938
  43c858:	bl	404c60 <gettext@plt>
  43c85c:	mov	x1, x0
  43c860:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43c864:	add	x0, x0, #0x950
  43c868:	blr	x19
  43c86c:	bl	404710 <abort@plt>
  43c870:	stp	x29, x30, [sp, #-288]!
  43c874:	mov	x29, sp
  43c878:	str	x0, [sp, #56]
  43c87c:	str	x1, [sp, #232]
  43c880:	str	x2, [sp, #240]
  43c884:	str	x3, [sp, #248]
  43c888:	str	x4, [sp, #256]
  43c88c:	str	x5, [sp, #264]
  43c890:	str	x6, [sp, #272]
  43c894:	str	x7, [sp, #280]
  43c898:	str	q0, [sp, #96]
  43c89c:	str	q1, [sp, #112]
  43c8a0:	str	q2, [sp, #128]
  43c8a4:	str	q3, [sp, #144]
  43c8a8:	str	q4, [sp, #160]
  43c8ac:	str	q5, [sp, #176]
  43c8b0:	str	q6, [sp, #192]
  43c8b4:	str	q7, [sp, #208]
  43c8b8:	add	x0, sp, #0x120
  43c8bc:	str	x0, [sp, #64]
  43c8c0:	add	x0, sp, #0x120
  43c8c4:	str	x0, [sp, #72]
  43c8c8:	add	x0, sp, #0xe0
  43c8cc:	str	x0, [sp, #80]
  43c8d0:	mov	w0, #0xffffffc8            	// #-56
  43c8d4:	str	w0, [sp, #88]
  43c8d8:	mov	w0, #0xffffff80            	// #-128
  43c8dc:	str	w0, [sp, #92]
  43c8e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43c8e4:	add	x0, x0, #0x498
  43c8e8:	ldr	x4, [x0]
  43c8ec:	add	x2, sp, #0x10
  43c8f0:	add	x3, sp, #0x40
  43c8f4:	ldp	x0, x1, [x3]
  43c8f8:	stp	x0, x1, [x2]
  43c8fc:	ldp	x0, x1, [x3, #16]
  43c900:	stp	x0, x1, [x2, #16]
  43c904:	add	x0, sp, #0x10
  43c908:	mov	x2, x0
  43c90c:	ldr	x1, [sp, #56]
  43c910:	mov	x0, x4
  43c914:	bl	404b80 <vfprintf@plt>
  43c918:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43c91c:	add	x0, x0, #0x498
  43c920:	ldr	x0, [x0]
  43c924:	mov	x1, x0
  43c928:	mov	w0, #0xa                   	// #10
  43c92c:	bl	404250 <fputc@plt>
  43c930:	nop
  43c934:	ldp	x29, x30, [sp], #288
  43c938:	ret
  43c93c:	stp	x29, x30, [sp, #-32]!
  43c940:	mov	x29, sp
  43c944:	str	x0, [sp, #24]
  43c948:	str	w1, [sp, #20]
  43c94c:	ldr	x0, [sp, #24]
  43c950:	ldr	w1, [sp, #20]
  43c954:	str	w1, [x0, #192]
  43c958:	ldr	x0, [sp, #24]
  43c95c:	ldr	w0, [x0, #32]
  43c960:	and	w0, w0, #0x10
  43c964:	cmp	w0, #0x0
  43c968:	b.eq	43c974 <wcrtomb@plt+0x37c64>  // b.none
  43c96c:	ldr	x0, [sp, #24]
  43c970:	bl	44271c <wcrtomb@plt+0x3da0c>
  43c974:	ldr	w0, [sp, #20]
  43c978:	ldp	x29, x30, [sp], #32
  43c97c:	ret
  43c980:	stp	x29, x30, [sp, #-32]!
  43c984:	mov	x29, sp
  43c988:	str	x0, [sp, #24]
  43c98c:	bl	404bc0 <__errno_location@plt>
  43c990:	mov	x1, x0
  43c994:	mov	w0, #0xc                   	// #12
  43c998:	str	w0, [x1]
  43c99c:	ldr	x0, [sp, #24]
  43c9a0:	mov	w1, #0x2                   	// #2
  43c9a4:	str	w1, [x0, #192]
  43c9a8:	ldr	x0, [sp, #24]
  43c9ac:	ldr	w0, [x0, #32]
  43c9b0:	and	w0, w0, #0x80
  43c9b4:	cmp	w0, #0x0
  43c9b8:	b.eq	43c9cc <wcrtomb@plt+0x37cbc>  // b.none
  43c9bc:	ldr	x0, [sp, #24]
  43c9c0:	ldr	x1, [x0, #88]
  43c9c4:	ldr	x0, [sp, #24]
  43c9c8:	blr	x1
  43c9cc:	ldr	x0, [sp, #24]
  43c9d0:	ldr	w0, [x0, #32]
  43c9d4:	and	w0, w0, #0x10
  43c9d8:	cmp	w0, #0x0
  43c9dc:	b.eq	43c9e8 <wcrtomb@plt+0x37cd8>  // b.none
  43c9e0:	ldr	x0, [sp, #24]
  43c9e4:	bl	44271c <wcrtomb@plt+0x3da0c>
  43c9e8:	ldr	x0, [sp, #24]
  43c9ec:	ldr	w0, [x0, #32]
  43c9f0:	and	w0, w0, #0x8
  43c9f4:	cmp	w0, #0x0
  43c9f8:	b.ne	43ca04 <wcrtomb@plt+0x37cf4>  // b.any
  43c9fc:	ldr	x0, [sp, #24]
  43ca00:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43ca04:	ldr	x0, [sp, #24]
  43ca08:	bl	43d804 <wcrtomb@plt+0x38af4>
  43ca0c:	ldr	x0, [sp, #24]
  43ca10:	ldr	w0, [x0, #192]
  43ca14:	ldp	x29, x30, [sp], #32
  43ca18:	ret
  43ca1c:	stp	x29, x30, [sp, #-80]!
  43ca20:	mov	x29, sp
  43ca24:	str	x0, [sp, #56]
  43ca28:	str	x1, [sp, #48]
  43ca2c:	str	x2, [sp, #40]
  43ca30:	str	w3, [sp, #36]
  43ca34:	str	w4, [sp, #32]
  43ca38:	str	w5, [sp, #28]
  43ca3c:	ldr	x0, [sp, #56]
  43ca40:	ldr	x1, [x0, #56]
  43ca44:	ldr	x0, [sp, #48]
  43ca48:	str	x1, [x0, #56]
  43ca4c:	ldr	x0, [sp, #56]
  43ca50:	ldr	x1, [x0, #104]
  43ca54:	ldr	x0, [sp, #48]
  43ca58:	str	x1, [x0, #104]
  43ca5c:	ldr	x0, [sp, #56]
  43ca60:	ldr	x1, [x0, #96]
  43ca64:	ldr	x0, [sp, #48]
  43ca68:	str	x1, [x0, #96]
  43ca6c:	ldr	x0, [sp, #56]
  43ca70:	ldr	x1, [x0, #88]
  43ca74:	ldr	x0, [sp, #48]
  43ca78:	str	x1, [x0, #88]
  43ca7c:	ldr	w0, [sp, #32]
  43ca80:	and	w0, w0, #0x40
  43ca84:	cmp	w0, #0x0
  43ca88:	b.ne	43cac8 <wcrtomb@plt+0x37db8>  // b.any
  43ca8c:	ldr	x0, [sp, #56]
  43ca90:	ldr	x1, [x0, #112]
  43ca94:	ldr	x0, [sp, #48]
  43ca98:	str	x1, [x0, #112]
  43ca9c:	ldr	x0, [sp, #56]
  43caa0:	ldr	x1, [x0, #144]
  43caa4:	ldr	x0, [sp, #48]
  43caa8:	str	x1, [x0, #144]
  43caac:	ldr	x0, [sp, #56]
  43cab0:	ldr	w1, [x0, #32]
  43cab4:	mov	w0, #0x8180000             	// #135790592
  43cab8:	and	w0, w1, w0
  43cabc:	ldr	w1, [sp, #32]
  43cac0:	orr	w0, w1, w0
  43cac4:	str	w0, [sp, #32]
  43cac8:	ldr	w0, [sp, #32]
  43cacc:	and	w0, w0, #0x4
  43cad0:	cmp	w0, #0x0
  43cad4:	b.ne	43cae8 <wcrtomb@plt+0x37dd8>  // b.any
  43cad8:	ldr	x0, [sp, #56]
  43cadc:	ldr	x1, [x0, #160]
  43cae0:	ldr	x0, [sp, #48]
  43cae4:	str	x1, [x0, #160]
  43cae8:	ldr	w1, [sp, #32]
  43caec:	mov	w0, #0x44                  	// #68
  43caf0:	and	w0, w1, w0
  43caf4:	cmp	w0, #0x44
  43caf8:	b.eq	43cb24 <wcrtomb@plt+0x37e14>  // b.none
  43cafc:	ldr	x0, [sp, #56]
  43cb00:	ldr	x1, [x0, #152]
  43cb04:	ldr	x0, [sp, #48]
  43cb08:	str	x1, [x0, #152]
  43cb0c:	ldr	x0, [sp, #56]
  43cb10:	ldr	w0, [x0, #32]
  43cb14:	and	w0, w0, #0x4000000
  43cb18:	ldr	w1, [sp, #32]
  43cb1c:	orr	w0, w1, w0
  43cb20:	str	w0, [sp, #32]
  43cb24:	ldr	x0, [sp, #56]
  43cb28:	ldr	w1, [x0, #36]
  43cb2c:	ldr	x0, [sp, #48]
  43cb30:	str	w1, [x0, #36]
  43cb34:	ldr	x0, [sp, #56]
  43cb38:	ldr	w1, [x0, #32]
  43cb3c:	mov	w0, #0x10                  	// #16
  43cb40:	movk	w0, #0x8020, lsl #16
  43cb44:	and	w1, w1, w0
  43cb48:	ldr	w0, [sp, #32]
  43cb4c:	orr	w1, w1, w0
  43cb50:	mov	w0, #0x4000                	// #16384
  43cb54:	movk	w0, #0x7, lsl #16
  43cb58:	orr	w0, w1, w0
  43cb5c:	str	w0, [sp, #32]
  43cb60:	ldrsw	x0, [sp, #36]
  43cb64:	ldr	w3, [sp, #32]
  43cb68:	mov	x2, x0
  43cb6c:	ldr	x1, [sp, #40]
  43cb70:	ldr	x0, [sp, #48]
  43cb74:	bl	43cce8 <wcrtomb@plt+0x37fd8>
  43cb78:	str	w0, [sp, #76]
  43cb7c:	ldr	w0, [sp, #76]
  43cb80:	cmp	w0, #0x0
  43cb84:	b.eq	43cb90 <wcrtomb@plt+0x37e80>  // b.none
  43cb88:	ldr	w0, [sp, #76]
  43cb8c:	b	43cbf4 <wcrtomb@plt+0x37ee4>
  43cb90:	ldr	x0, [sp, #56]
  43cb94:	ldr	w0, [x0, #224]
  43cb98:	add	w1, w0, #0x1
  43cb9c:	ldr	x0, [sp, #48]
  43cba0:	str	w1, [x0, #224]
  43cba4:	mov	x1, #0x0                   	// #0
  43cba8:	ldr	x0, [sp, #48]
  43cbac:	bl	441fb4 <wcrtomb@plt+0x3d2a4>
  43cbb0:	str	w0, [sp, #76]
  43cbb4:	ldr	w0, [sp, #76]
  43cbb8:	cmp	w0, #0x0
  43cbbc:	b.eq	43cbd0 <wcrtomb@plt+0x37ec0>  // b.none
  43cbc0:	ldr	x0, [sp, #48]
  43cbc4:	bl	43d804 <wcrtomb@plt+0x38af4>
  43cbc8:	ldr	w0, [sp, #76]
  43cbcc:	b	43cbf4 <wcrtomb@plt+0x37ee4>
  43cbd0:	ldr	w0, [sp, #28]
  43cbd4:	cmp	w0, #0x0
  43cbd8:	b.eq	43cbf0 <wcrtomb@plt+0x37ee0>  // b.none
  43cbdc:	ldr	x0, [sp, #48]
  43cbe0:	bl	43de14 <wcrtomb@plt+0x39104>
  43cbe4:	str	w0, [sp, #76]
  43cbe8:	ldr	x0, [sp, #48]
  43cbec:	bl	43d804 <wcrtomb@plt+0x38af4>
  43cbf0:	ldr	w0, [sp, #76]
  43cbf4:	ldp	x29, x30, [sp], #80
  43cbf8:	ret
  43cbfc:	stp	x29, x30, [sp, #-32]!
  43cc00:	mov	x29, sp
  43cc04:	str	x0, [sp, #24]
  43cc08:	str	x1, [sp, #16]
  43cc0c:	ldr	x0, [sp, #24]
  43cc10:	ldr	w0, [x0, #192]
  43cc14:	cmp	w0, #0x9
  43cc18:	b.ne	43cc28 <wcrtomb@plt+0x37f18>  // b.any
  43cc1c:	ldr	x0, [sp, #24]
  43cc20:	ldr	x0, [x0, #200]
  43cc24:	bl	404880 <free@plt>
  43cc28:	ldr	x0, [sp, #16]
  43cc2c:	ldr	w1, [x0, #192]
  43cc30:	ldr	x0, [sp, #24]
  43cc34:	str	w1, [x0, #192]
  43cc38:	ldr	x0, [sp, #16]
  43cc3c:	ldr	w0, [x0, #192]
  43cc40:	cmp	w0, #0x9
  43cc44:	b.ne	43cc68 <wcrtomb@plt+0x37f58>  // b.any
  43cc48:	ldr	x0, [sp, #16]
  43cc4c:	ldr	x1, [x0, #200]
  43cc50:	ldr	x0, [sp, #24]
  43cc54:	str	x1, [x0, #200]
  43cc58:	ldr	x0, [sp, #16]
  43cc5c:	str	wzr, [x0, #192]
  43cc60:	ldr	x0, [sp, #16]
  43cc64:	str	xzr, [x0, #200]
  43cc68:	nop
  43cc6c:	ldp	x29, x30, [sp], #32
  43cc70:	ret
  43cc74:	stp	x29, x30, [sp, #-32]!
  43cc78:	mov	x29, sp
  43cc7c:	str	x0, [sp, #24]
  43cc80:	ldr	x0, [sp, #24]
  43cc84:	ldr	w0, [x0, #32]
  43cc88:	and	w0, w0, #0x8
  43cc8c:	cmp	w0, #0x0
  43cc90:	b.eq	43ccbc <wcrtomb@plt+0x37fac>  // b.none
  43cc94:	ldr	x0, [sp, #24]
  43cc98:	ldr	w0, [x0, #32]
  43cc9c:	and	w0, w0, #0x1
  43cca0:	cmp	w0, #0x0
  43cca4:	b.ne	43ccb0 <wcrtomb@plt+0x37fa0>  // b.any
  43cca8:	ldr	x0, [sp, #24]
  43ccac:	bl	442434 <wcrtomb@plt+0x3d724>
  43ccb0:	ldr	x0, [sp, #24]
  43ccb4:	bl	442598 <wcrtomb@plt+0x3d888>
  43ccb8:	b	43ccd4 <wcrtomb@plt+0x37fc4>
  43ccbc:	ldr	x0, [sp, #24]
  43ccc0:	str	xzr, [x0, #8]
  43ccc4:	ldr	x0, [sp, #24]
  43ccc8:	str	xzr, [x0]
  43cccc:	ldr	x0, [sp, #24]
  43ccd0:	str	xzr, [x0, #24]
  43ccd4:	ldr	x0, [sp, #24]
  43ccd8:	str	wzr, [x0, #192]
  43ccdc:	nop
  43cce0:	ldp	x29, x30, [sp], #32
  43cce4:	ret
  43cce8:	stp	x29, x30, [sp, #-48]!
  43ccec:	mov	x29, sp
  43ccf0:	str	x0, [sp, #40]
  43ccf4:	str	x1, [sp, #32]
  43ccf8:	str	x2, [sp, #24]
  43ccfc:	str	w3, [sp, #20]
  43cd00:	ldr	x0, [sp, #40]
  43cd04:	ldr	w1, [sp, #20]
  43cd08:	str	w1, [x0, #32]
  43cd0c:	ldr	x0, [sp, #40]
  43cd10:	ldr	w0, [x0, #32]
  43cd14:	and	w0, w0, #0x10000
  43cd18:	cmp	w0, #0x0
  43cd1c:	b.ne	43cd30 <wcrtomb@plt+0x38020>  // b.any
  43cd20:	ldr	x0, [sp, #40]
  43cd24:	adrp	x1, 43c000 <wcrtomb@plt+0x372f0>
  43cd28:	add	x1, x1, #0x838
  43cd2c:	str	x1, [x0, #88]
  43cd30:	ldr	x0, [sp, #40]
  43cd34:	ldr	w0, [x0, #32]
  43cd38:	and	w0, w0, #0x20000
  43cd3c:	cmp	w0, #0x0
  43cd40:	b.ne	43cd54 <wcrtomb@plt+0x38044>  // b.any
  43cd44:	ldr	x0, [sp, #40]
  43cd48:	adrp	x1, 43c000 <wcrtomb@plt+0x372f0>
  43cd4c:	add	x1, x1, #0x870
  43cd50:	str	x1, [x0, #96]
  43cd54:	ldr	x0, [sp, #40]
  43cd58:	ldr	w0, [x0, #32]
  43cd5c:	and	w0, w0, #0x40
  43cd60:	cmp	w0, #0x0
  43cd64:	b.ne	43cd88 <wcrtomb@plt+0x38078>  // b.any
  43cd68:	ldr	x0, [sp, #40]
  43cd6c:	str	xzr, [x0, #136]
  43cd70:	ldr	x0, [sp, #40]
  43cd74:	ldr	x1, [x0, #136]
  43cd78:	ldr	x0, [sp, #40]
  43cd7c:	str	x1, [x0, #128]
  43cd80:	ldr	x0, [sp, #40]
  43cd84:	str	xzr, [x0, #120]
  43cd88:	ldr	x0, [sp, #40]
  43cd8c:	ldr	w0, [x0, #32]
  43cd90:	and	w0, w0, #0x4
  43cd94:	cmp	w0, #0x0
  43cd98:	b.ne	43cdd4 <wcrtomb@plt+0x380c4>  // b.any
  43cd9c:	ldr	x0, [sp, #40]
  43cda0:	ldr	x0, [x0, #160]
  43cda4:	cmp	x0, #0x0
  43cda8:	b.ne	43cdd4 <wcrtomb@plt+0x380c4>  // b.any
  43cdac:	mov	w1, #0x3                   	// #3
  43cdb0:	ldr	x0, [sp, #40]
  43cdb4:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43cdb8:	bl	404bc0 <__errno_location@plt>
  43cdbc:	mov	x1, x0
  43cdc0:	mov	w0, #0x16                  	// #22
  43cdc4:	str	w0, [x1]
  43cdc8:	ldr	x0, [sp, #40]
  43cdcc:	ldr	w0, [x0, #192]
  43cdd0:	b	43d034 <wcrtomb@plt+0x38324>
  43cdd4:	ldr	x0, [sp, #40]
  43cdd8:	ldr	w0, [x0, #32]
  43cddc:	and	w0, w0, #0x200000
  43cde0:	cmp	w0, #0x0
  43cde4:	b.eq	43ce60 <wcrtomb@plt+0x38150>  // b.none
  43cde8:	ldr	x0, [sp, #40]
  43cdec:	ldr	w0, [x0, #32]
  43cdf0:	and	w0, w0, #0x40000
  43cdf4:	cmp	w0, #0x0
  43cdf8:	b.ne	43ce60 <wcrtomb@plt+0x38150>  // b.any
  43cdfc:	ldr	x0, [sp, #40]
  43ce00:	ldr	w0, [x0, #32]
  43ce04:	and	w0, w0, #0x20000
  43ce08:	cmp	w0, #0x0
  43ce0c:	b.eq	43ce24 <wcrtomb@plt+0x38114>  // b.none
  43ce10:	ldr	x0, [sp, #40]
  43ce14:	ldr	x1, [x0, #96]
  43ce18:	ldr	x0, [sp, #40]
  43ce1c:	str	x1, [x0, #104]
  43ce20:	b	43ce60 <wcrtomb@plt+0x38150>
  43ce24:	ldr	x0, [sp, #40]
  43ce28:	ldr	w0, [x0, #32]
  43ce2c:	and	w0, w0, #0x10
  43ce30:	cmp	w0, #0x0
  43ce34:	b.eq	43ce4c <wcrtomb@plt+0x3813c>  // b.none
  43ce38:	ldr	x0, [sp, #40]
  43ce3c:	adrp	x1, 43c000 <wcrtomb@plt+0x372f0>
  43ce40:	add	x1, x1, #0x870
  43ce44:	str	x1, [x0, #104]
  43ce48:	b	43ce60 <wcrtomb@plt+0x38150>
  43ce4c:	ldr	x0, [sp, #40]
  43ce50:	ldr	w0, [x0, #32]
  43ce54:	and	w1, w0, #0xffdfffff
  43ce58:	ldr	x0, [sp, #40]
  43ce5c:	str	w1, [x0, #32]
  43ce60:	ldr	x0, [sp, #40]
  43ce64:	ldr	x1, [sp, #32]
  43ce68:	str	x1, [x0, #168]
  43ce6c:	ldr	x0, [sp, #40]
  43ce70:	ldr	x1, [sp, #24]
  43ce74:	str	x1, [x0, #176]
  43ce78:	ldr	x0, [sp, #40]
  43ce7c:	ldr	w0, [x0, #32]
  43ce80:	and	w0, w0, #0x2
  43ce84:	cmp	w0, #0x0
  43ce88:	b.ne	43ce94 <wcrtomb@plt+0x38184>  // b.any
  43ce8c:	ldr	x0, [sp, #40]
  43ce90:	str	xzr, [x0, #16]
  43ce94:	ldr	x0, [sp, #40]
  43ce98:	ldr	w0, [x0, #32]
  43ce9c:	and	w0, w0, #0x4000
  43cea0:	cmp	w0, #0x0
  43cea4:	b.ne	43ceb8 <wcrtomb@plt+0x381a8>  // b.any
  43cea8:	ldr	x0, [sp, #40]
  43ceac:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43ceb0:	add	x1, x1, #0x958
  43ceb4:	str	x1, [x0, #56]
  43ceb8:	ldr	x0, [sp, #40]
  43cebc:	ldr	w0, [x0, #32]
  43cec0:	and	w0, w0, #0x8000
  43cec4:	cmp	w0, #0x0
  43cec8:	b.ne	43ced4 <wcrtomb@plt+0x381c4>  // b.any
  43cecc:	ldr	x0, [sp, #40]
  43ced0:	str	xzr, [x0, #64]
  43ced4:	ldr	x0, [sp, #40]
  43ced8:	ldr	w0, [x0, #32]
  43cedc:	and	w0, w0, #0x4000000
  43cee0:	cmp	w0, #0x0
  43cee4:	b.ne	43cef0 <wcrtomb@plt+0x381e0>  // b.any
  43cee8:	ldr	x0, [sp, #40]
  43ceec:	str	xzr, [x0, #152]
  43cef0:	ldr	x0, [sp, #40]
  43cef4:	ldr	w0, [x0, #32]
  43cef8:	cmp	w0, #0x0
  43cefc:	b.lt	43cf08 <wcrtomb@plt+0x381f8>  // b.tstop
  43cf00:	ldr	x0, [sp, #40]
  43cf04:	str	wzr, [x0, #36]
  43cf08:	ldr	x0, [sp, #40]
  43cf0c:	ldr	w0, [x0, #32]
  43cf10:	and	w0, w0, #0x10000000
  43cf14:	cmp	w0, #0x0
  43cf18:	b.eq	43cf60 <wcrtomb@plt+0x38250>  // b.none
  43cf1c:	ldr	x0, [sp, #40]
  43cf20:	ldr	x0, [x0, #72]
  43cf24:	cmp	x0, #0x0
  43cf28:	b.ne	43cf3c <wcrtomb@plt+0x3822c>  // b.any
  43cf2c:	ldr	x0, [sp, #40]
  43cf30:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43cf34:	add	x1, x1, #0x960
  43cf38:	str	x1, [x0, #72]
  43cf3c:	ldr	x0, [sp, #40]
  43cf40:	ldr	x0, [x0, #80]
  43cf44:	cmp	x0, #0x0
  43cf48:	b.ne	43cfe4 <wcrtomb@plt+0x382d4>  // b.any
  43cf4c:	ldr	x0, [sp, #40]
  43cf50:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43cf54:	add	x1, x1, #0x960
  43cf58:	str	x1, [x0, #80]
  43cf5c:	b	43cfe4 <wcrtomb@plt+0x382d4>
  43cf60:	ldr	x0, [sp, #40]
  43cf64:	ldr	w0, [x0, #32]
  43cf68:	and	w0, w0, #0x2000000
  43cf6c:	cmp	w0, #0x0
  43cf70:	b.eq	43cfb0 <wcrtomb@plt+0x382a0>  // b.none
  43cf74:	ldr	x0, [sp, #40]
  43cf78:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43cf7c:	add	x1, x1, #0x2a8
  43cf80:	str	x1, [x0, #72]
  43cf84:	ldr	x0, [sp, #40]
  43cf88:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43cf8c:	add	x1, x1, #0x2a8
  43cf90:	str	x1, [x0, #80]
  43cf94:	ldr	x0, [sp, #40]
  43cf98:	ldr	w1, [x0, #36]
  43cf9c:	mov	w0, #0x660                 	// #1632
  43cfa0:	orr	w1, w1, w0
  43cfa4:	ldr	x0, [sp, #40]
  43cfa8:	str	w1, [x0, #36]
  43cfac:	b	43cfe4 <wcrtomb@plt+0x382d4>
  43cfb0:	ldr	x0, [sp, #40]
  43cfb4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43cfb8:	add	x1, x1, #0x960
  43cfbc:	str	x1, [x0, #72]
  43cfc0:	ldr	x0, [sp, #40]
  43cfc4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43cfc8:	add	x1, x1, #0x968
  43cfcc:	str	x1, [x0, #80]
  43cfd0:	ldr	x0, [sp, #40]
  43cfd4:	ldr	w0, [x0, #36]
  43cfd8:	orr	w1, w0, #0x100
  43cfdc:	ldr	x0, [sp, #40]
  43cfe0:	str	w1, [x0, #36]
  43cfe4:	ldr	x0, [sp, #40]
  43cfe8:	str	xzr, [x0, #184]
  43cfec:	ldr	x0, [sp, #40]
  43cff0:	str	xzr, [x0, #48]
  43cff4:	ldr	x0, [sp, #40]
  43cff8:	ldr	w0, [x0, #32]
  43cffc:	and	w0, w0, #0x8
  43d000:	cmp	w0, #0x0
  43d004:	b.eq	43d010 <wcrtomb@plt+0x38300>  // b.none
  43d008:	ldr	x0, [sp, #40]
  43d00c:	bl	43d804 <wcrtomb@plt+0x38af4>
  43d010:	ldr	x0, [sp, #40]
  43d014:	str	xzr, [x0, #216]
  43d018:	ldr	x0, [sp, #40]
  43d01c:	ldr	x1, [x0, #216]
  43d020:	ldr	x0, [sp, #40]
  43d024:	str	x1, [x0, #208]
  43d028:	ldr	x0, [sp, #40]
  43d02c:	bl	43cc74 <wcrtomb@plt+0x37f64>
  43d030:	mov	w0, #0x0                   	// #0
  43d034:	ldp	x29, x30, [sp], #48
  43d038:	ret
  43d03c:	stp	x29, x30, [sp, #-64]!
  43d040:	mov	x29, sp
  43d044:	str	x0, [sp, #24]
  43d048:	str	x1, [sp, #16]
  43d04c:	ldr	x0, [sp, #24]
  43d050:	ldr	w0, [x0, #32]
  43d054:	and	w0, w0, #0x2
  43d058:	cmp	w0, #0x0
  43d05c:	b.eq	43d06c <wcrtomb@plt+0x3835c>  // b.none
  43d060:	ldr	x0, [sp, #24]
  43d064:	ldr	x0, [x0, #16]
  43d068:	b	43d070 <wcrtomb@plt+0x38360>
  43d06c:	mov	x0, #0x0                   	// #0
  43d070:	str	x0, [sp, #40]
  43d074:	ldr	x0, [sp, #24]
  43d078:	ldr	x0, [x0, #8]
  43d07c:	cmp	x0, #0x0
  43d080:	b.ne	43d0bc <wcrtomb@plt+0x383ac>  // b.any
  43d084:	ldr	x1, [sp, #40]
  43d088:	ldr	x0, [sp, #16]
  43d08c:	add	x0, x1, x0
  43d090:	cmp	x0, #0x80
  43d094:	b.ls	43d0a0 <wcrtomb@plt+0x38390>  // b.plast
  43d098:	ldr	x0, [sp, #16]
  43d09c:	b	43d0a4 <wcrtomb@plt+0x38394>
  43d0a0:	mov	x0, #0x80                  	// #128
  43d0a4:	str	x0, [sp, #48]
  43d0a8:	mov	x1, #0x8                   	// #8
  43d0ac:	ldr	x0, [sp, #48]
  43d0b0:	bl	404560 <calloc@plt>
  43d0b4:	str	x0, [sp, #56]
  43d0b8:	b	43d13c <wcrtomb@plt+0x3842c>
  43d0bc:	ldr	x0, [sp, #24]
  43d0c0:	ldr	x1, [x0, #24]
  43d0c4:	ldr	x0, [sp, #24]
  43d0c8:	ldr	x2, [x0]
  43d0cc:	ldr	x0, [sp, #40]
  43d0d0:	add	x2, x2, x0
  43d0d4:	ldr	x0, [sp, #16]
  43d0d8:	add	x0, x2, x0
  43d0dc:	cmp	x1, x0
  43d0e0:	b.cs	43d134 <wcrtomb@plt+0x38424>  // b.hs, b.nlast
  43d0e4:	ldr	x0, [sp, #24]
  43d0e8:	ldr	x1, [x0]
  43d0ec:	ldr	x0, [sp, #40]
  43d0f0:	add	x1, x1, x0
  43d0f4:	ldr	x3, [sp, #16]
  43d0f8:	ldr	x2, [sp, #16]
  43d0fc:	mov	x0, #0x80                  	// #128
  43d100:	cmp	x3, #0x80
  43d104:	csel	x0, x2, x0, cs  // cs = hs, nlast
  43d108:	add	x0, x1, x0
  43d10c:	str	x0, [sp, #48]
  43d110:	ldr	x0, [sp, #24]
  43d114:	ldr	x2, [x0, #8]
  43d118:	ldr	x0, [sp, #48]
  43d11c:	lsl	x0, x0, #3
  43d120:	mov	x1, x0
  43d124:	mov	x0, x2
  43d128:	bl	4045e0 <realloc@plt>
  43d12c:	str	x0, [sp, #56]
  43d130:	b	43d13c <wcrtomb@plt+0x3842c>
  43d134:	mov	w0, #0x0                   	// #0
  43d138:	b	43d170 <wcrtomb@plt+0x38460>
  43d13c:	ldr	x0, [sp, #56]
  43d140:	cmp	x0, #0x0
  43d144:	b.eq	43d168 <wcrtomb@plt+0x38458>  // b.none
  43d148:	ldr	x0, [sp, #24]
  43d14c:	ldr	x1, [sp, #48]
  43d150:	str	x1, [x0, #24]
  43d154:	ldr	x0, [sp, #24]
  43d158:	ldr	x1, [sp, #56]
  43d15c:	str	x1, [x0, #8]
  43d160:	mov	w0, #0x0                   	// #0
  43d164:	b	43d170 <wcrtomb@plt+0x38460>
  43d168:	ldr	x0, [sp, #24]
  43d16c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43d170:	ldp	x29, x30, [sp], #64
  43d174:	ret
  43d178:	sub	sp, sp, #0x20
  43d17c:	str	w0, [sp, #12]
  43d180:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43d184:	add	x0, x0, #0xdc8
  43d188:	str	x0, [sp, #24]
  43d18c:	ldr	w0, [sp, #12]
  43d190:	and	w0, w0, #0x2
  43d194:	cmp	w0, #0x0
  43d198:	b.eq	43d1b4 <wcrtomb@plt+0x384a4>  // b.none
  43d19c:	ldr	x0, [sp, #24]
  43d1a0:	add	x1, x0, #0x1
  43d1a4:	str	x1, [sp, #24]
  43d1a8:	mov	w1, #0x77                  	// #119
  43d1ac:	strb	w1, [x0]
  43d1b0:	b	43d1f0 <wcrtomb@plt+0x384e0>
  43d1b4:	ldr	w0, [sp, #12]
  43d1b8:	and	w0, w0, #0x1
  43d1bc:	cmp	w0, #0x0
  43d1c0:	b.eq	43d1dc <wcrtomb@plt+0x384cc>  // b.none
  43d1c4:	ldr	x0, [sp, #24]
  43d1c8:	add	x1, x0, #0x1
  43d1cc:	str	x1, [sp, #24]
  43d1d0:	mov	w1, #0x6e                  	// #110
  43d1d4:	strb	w1, [x0]
  43d1d8:	b	43d1f0 <wcrtomb@plt+0x384e0>
  43d1dc:	ldr	x0, [sp, #24]
  43d1e0:	add	x1, x0, #0x1
  43d1e4:	str	x1, [sp, #24]
  43d1e8:	mov	w1, #0x2d                  	// #45
  43d1ec:	strb	w1, [x0]
  43d1f0:	ldr	w0, [sp, #12]
  43d1f4:	and	w0, w0, #0x4
  43d1f8:	cmp	w0, #0x0
  43d1fc:	b.eq	43d218 <wcrtomb@plt+0x38508>  // b.none
  43d200:	ldr	x0, [sp, #24]
  43d204:	add	x1, x0, #0x1
  43d208:	str	x1, [sp, #24]
  43d20c:	mov	w1, #0x71                  	// #113
  43d210:	strb	w1, [x0]
  43d214:	b	43d22c <wcrtomb@plt+0x3851c>
  43d218:	ldr	x0, [sp, #24]
  43d21c:	add	x1, x0, #0x1
  43d220:	str	x1, [sp, #24]
  43d224:	mov	w1, #0x2d                  	// #45
  43d228:	strb	w1, [x0]
  43d22c:	ldr	w0, [sp, #12]
  43d230:	and	w0, w0, #0x8
  43d234:	cmp	w0, #0x0
  43d238:	b.eq	43d254 <wcrtomb@plt+0x38544>  // b.none
  43d23c:	ldr	x0, [sp, #24]
  43d240:	add	x1, x0, #0x1
  43d244:	str	x1, [sp, #24]
  43d248:	mov	w1, #0x45                  	// #69
  43d24c:	strb	w1, [x0]
  43d250:	b	43d268 <wcrtomb@plt+0x38558>
  43d254:	ldr	x0, [sp, #24]
  43d258:	add	x1, x0, #0x1
  43d25c:	str	x1, [sp, #24]
  43d260:	mov	w1, #0x2d                  	// #45
  43d264:	strb	w1, [x0]
  43d268:	ldr	w0, [sp, #12]
  43d26c:	and	w0, w0, #0x10
  43d270:	cmp	w0, #0x0
  43d274:	b.eq	43d290 <wcrtomb@plt+0x38580>  // b.none
  43d278:	ldr	x0, [sp, #24]
  43d27c:	add	x1, x0, #0x1
  43d280:	str	x1, [sp, #24]
  43d284:	mov	w1, #0x6a                  	// #106
  43d288:	strb	w1, [x0]
  43d28c:	b	43d2a4 <wcrtomb@plt+0x38594>
  43d290:	ldr	x0, [sp, #24]
  43d294:	add	x1, x0, #0x1
  43d298:	str	x1, [sp, #24]
  43d29c:	mov	w1, #0x2d                  	// #45
  43d2a0:	strb	w1, [x0]
  43d2a4:	ldr	w0, [sp, #12]
  43d2a8:	and	w0, w0, #0x20
  43d2ac:	cmp	w0, #0x0
  43d2b0:	b.eq	43d2cc <wcrtomb@plt+0x385bc>  // b.none
  43d2b4:	ldr	x0, [sp, #24]
  43d2b8:	add	x1, x0, #0x1
  43d2bc:	str	x1, [sp, #24]
  43d2c0:	mov	w1, #0x73                  	// #115
  43d2c4:	strb	w1, [x0]
  43d2c8:	b	43d2e0 <wcrtomb@plt+0x385d0>
  43d2cc:	ldr	x0, [sp, #24]
  43d2d0:	add	x1, x0, #0x1
  43d2d4:	str	x1, [sp, #24]
  43d2d8:	mov	w1, #0x2d                  	// #45
  43d2dc:	strb	w1, [x0]
  43d2e0:	ldr	w0, [sp, #12]
  43d2e4:	and	w0, w0, #0x40
  43d2e8:	cmp	w0, #0x0
  43d2ec:	b.eq	43d308 <wcrtomb@plt+0x385f8>  // b.none
  43d2f0:	ldr	x0, [sp, #24]
  43d2f4:	add	x1, x0, #0x1
  43d2f8:	str	x1, [sp, #24]
  43d2fc:	mov	w1, #0x64                  	// #100
  43d300:	strb	w1, [x0]
  43d304:	b	43d31c <wcrtomb@plt+0x3860c>
  43d308:	ldr	x0, [sp, #24]
  43d30c:	add	x1, x0, #0x1
  43d310:	str	x1, [sp, #24]
  43d314:	mov	w1, #0x2d                  	// #45
  43d318:	strb	w1, [x0]
  43d31c:	ldr	x0, [sp, #24]
  43d320:	strb	wzr, [x0]
  43d324:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  43d328:	add	x0, x0, #0xdc8
  43d32c:	add	sp, sp, #0x20
  43d330:	ret
  43d334:	sub	sp, sp, #0x10
  43d338:	str	x0, [sp, #8]
  43d33c:	str	x1, [sp]
  43d340:	ldr	x0, [sp]
  43d344:	ldr	w0, [x0, #16]
  43d348:	and	w0, w0, #0x1
  43d34c:	cmp	w0, #0x0
  43d350:	b.eq	43d360 <wcrtomb@plt+0x38650>  // b.none
  43d354:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43d358:	add	x0, x0, #0x960
  43d35c:	b	43d394 <wcrtomb@plt+0x38684>
  43d360:	ldr	x0, [sp]
  43d364:	ldr	w0, [x0, #16]
  43d368:	and	w0, w0, #0x2
  43d36c:	cmp	w0, #0x0
  43d370:	b.eq	43d380 <wcrtomb@plt+0x38670>  // b.none
  43d374:	ldr	x0, [sp]
  43d378:	ldr	x0, [x0, #24]
  43d37c:	b	43d394 <wcrtomb@plt+0x38684>
  43d380:	ldr	x0, [sp, #8]
  43d384:	ldr	x1, [x0, #168]
  43d388:	ldr	x0, [sp]
  43d38c:	ldr	x0, [x0, #24]
  43d390:	add	x0, x1, x0
  43d394:	add	sp, sp, #0x10
  43d398:	ret
  43d39c:	stp	x29, x30, [sp, #-32]!
  43d3a0:	mov	x29, sp
  43d3a4:	str	x0, [sp, #24]
  43d3a8:	ldr	x0, [sp, #24]
  43d3ac:	ldr	w0, [x0, #16]
  43d3b0:	and	w0, w0, #0x1
  43d3b4:	cmp	w0, #0x0
  43d3b8:	b.eq	43d3c4 <wcrtomb@plt+0x386b4>  // b.none
  43d3bc:	mov	x0, #0x0                   	// #0
  43d3c0:	b	43d3fc <wcrtomb@plt+0x386ec>
  43d3c4:	ldr	x0, [sp, #24]
  43d3c8:	ldr	w0, [x0, #16]
  43d3cc:	and	w0, w0, #0x2
  43d3d0:	cmp	w0, #0x0
  43d3d4:	b.eq	43d3e8 <wcrtomb@plt+0x386d8>  // b.none
  43d3d8:	ldr	x0, [sp, #24]
  43d3dc:	ldr	x0, [x0, #24]
  43d3e0:	bl	4040b0 <strlen@plt>
  43d3e4:	b	43d3fc <wcrtomb@plt+0x386ec>
  43d3e8:	ldr	x0, [sp, #24]
  43d3ec:	ldr	x1, [x0, #32]
  43d3f0:	ldr	x0, [sp, #24]
  43d3f4:	ldr	x0, [x0, #24]
  43d3f8:	sub	x0, x1, x0
  43d3fc:	ldp	x29, x30, [sp], #32
  43d400:	ret
  43d404:	stp	x29, x30, [sp, #-48]!
  43d408:	mov	x29, sp
  43d40c:	str	x0, [sp, #24]
  43d410:	str	x1, [sp, #16]
  43d414:	mov	x1, #0x28                  	// #40
  43d418:	mov	x0, #0x1                   	// #1
  43d41c:	bl	404560 <calloc@plt>
  43d420:	str	x0, [sp, #40]
  43d424:	ldr	x0, [sp, #40]
  43d428:	cmp	x0, #0x0
  43d42c:	b.ne	43d43c <wcrtomb@plt+0x3872c>  // b.any
  43d430:	ldr	x0, [sp, #24]
  43d434:	bl	43c980 <wcrtomb@plt+0x37c70>
  43d438:	b	43d44c <wcrtomb@plt+0x3873c>
  43d43c:	ldr	x0, [sp, #16]
  43d440:	ldr	x1, [sp, #40]
  43d444:	str	x1, [x0]
  43d448:	mov	w0, #0x0                   	// #0
  43d44c:	ldp	x29, x30, [sp], #48
  43d450:	ret
  43d454:	stp	x29, x30, [sp, #-32]!
  43d458:	mov	x29, sp
  43d45c:	str	x0, [sp, #24]
  43d460:	ldr	x0, [sp, #24]
  43d464:	ldr	w0, [x0, #16]
  43d468:	and	w0, w0, #0x2
  43d46c:	cmp	w0, #0x0
  43d470:	b.eq	43d480 <wcrtomb@plt+0x38770>  // b.none
  43d474:	ldr	x0, [sp, #24]
  43d478:	ldr	x0, [x0, #24]
  43d47c:	bl	404880 <free@plt>
  43d480:	ldr	x0, [sp, #24]
  43d484:	bl	404880 <free@plt>
  43d488:	nop
  43d48c:	ldp	x29, x30, [sp], #32
  43d490:	ret
  43d494:	sub	sp, sp, #0x10
  43d498:	str	x0, [sp, #8]
  43d49c:	str	x1, [sp]
  43d4a0:	ldr	x0, [sp]
  43d4a4:	str	xzr, [x0, #8]
  43d4a8:	ldr	x0, [sp, #8]
  43d4ac:	ldr	x1, [x0, #216]
  43d4b0:	ldr	x0, [sp]
  43d4b4:	str	x1, [x0]
  43d4b8:	ldr	x0, [sp, #8]
  43d4bc:	ldr	x0, [x0, #216]
  43d4c0:	cmp	x0, #0x0
  43d4c4:	b.eq	43d4dc <wcrtomb@plt+0x387cc>  // b.none
  43d4c8:	ldr	x0, [sp, #8]
  43d4cc:	ldr	x0, [x0, #216]
  43d4d0:	ldr	x1, [sp]
  43d4d4:	str	x1, [x0, #8]
  43d4d8:	b	43d4e8 <wcrtomb@plt+0x387d8>
  43d4dc:	ldr	x0, [sp, #8]
  43d4e0:	ldr	x1, [sp]
  43d4e4:	str	x1, [x0, #208]
  43d4e8:	ldr	x0, [sp, #8]
  43d4ec:	ldr	x1, [sp]
  43d4f0:	str	x1, [x0, #216]
  43d4f4:	nop
  43d4f8:	add	sp, sp, #0x10
  43d4fc:	ret
  43d500:	sub	sp, sp, #0x20
  43d504:	str	x0, [sp, #8]
  43d508:	str	x1, [sp]
  43d50c:	ldr	x0, [sp]
  43d510:	ldr	x0, [x0]
  43d514:	str	x0, [sp, #24]
  43d518:	ldr	x0, [sp, #24]
  43d51c:	cmp	x0, #0x0
  43d520:	b.eq	43d55c <wcrtomb@plt+0x3884c>  // b.none
  43d524:	ldr	x0, [sp]
  43d528:	ldr	x1, [x0, #8]
  43d52c:	ldr	x0, [sp, #24]
  43d530:	str	x1, [x0, #8]
  43d534:	ldr	x0, [sp]
  43d538:	ldr	x0, [x0, #8]
  43d53c:	cmp	x0, #0x0
  43d540:	b.ne	43d56c <wcrtomb@plt+0x3885c>  // b.any
  43d544:	ldr	x0, [sp, #24]
  43d548:	ldr	w0, [x0, #16]
  43d54c:	and	w1, w0, #0xffffffef
  43d550:	ldr	x0, [sp, #24]
  43d554:	str	w1, [x0, #16]
  43d558:	b	43d56c <wcrtomb@plt+0x3885c>
  43d55c:	ldr	x0, [sp]
  43d560:	ldr	x1, [x0, #8]
  43d564:	ldr	x0, [sp, #8]
  43d568:	str	x1, [x0, #208]
  43d56c:	ldr	x0, [sp]
  43d570:	ldr	x0, [x0, #8]
  43d574:	str	x0, [sp, #24]
  43d578:	ldr	x0, [sp, #24]
  43d57c:	cmp	x0, #0x0
  43d580:	b.eq	43d598 <wcrtomb@plt+0x38888>  // b.none
  43d584:	ldr	x0, [sp]
  43d588:	ldr	x1, [x0]
  43d58c:	ldr	x0, [sp, #24]
  43d590:	str	x1, [x0]
  43d594:	b	43d5a8 <wcrtomb@plt+0x38898>
  43d598:	ldr	x0, [sp]
  43d59c:	ldr	x1, [x0]
  43d5a0:	ldr	x0, [sp, #8]
  43d5a4:	str	x1, [x0, #216]
  43d5a8:	ldr	x0, [sp]
  43d5ac:	str	xzr, [x0]
  43d5b0:	ldr	x0, [sp]
  43d5b4:	ldr	x1, [x0]
  43d5b8:	ldr	x0, [sp]
  43d5bc:	str	x1, [x0, #8]
  43d5c0:	nop
  43d5c4:	add	sp, sp, #0x20
  43d5c8:	ret
  43d5cc:	sub	sp, sp, #0x10
  43d5d0:	str	x0, [sp, #8]
  43d5d4:	b	43d5e4 <wcrtomb@plt+0x388d4>
  43d5d8:	ldr	x0, [sp, #8]
  43d5dc:	ldr	x0, [x0, #8]
  43d5e0:	str	x0, [sp, #8]
  43d5e4:	ldr	x0, [sp, #8]
  43d5e8:	cmp	x0, #0x0
  43d5ec:	b.eq	43d600 <wcrtomb@plt+0x388f0>  // b.none
  43d5f0:	ldr	x0, [sp, #8]
  43d5f4:	ldr	x0, [x0, #8]
  43d5f8:	cmp	x0, #0x0
  43d5fc:	b.ne	43d5d8 <wcrtomb@plt+0x388c8>  // b.any
  43d600:	ldr	x0, [sp, #8]
  43d604:	add	sp, sp, #0x10
  43d608:	ret
  43d60c:	stp	x29, x30, [sp, #-80]!
  43d610:	mov	x29, sp
  43d614:	str	x0, [sp, #40]
  43d618:	str	x1, [sp, #32]
  43d61c:	str	x2, [sp, #24]
  43d620:	str	w3, [sp, #20]
  43d624:	ldr	x0, [sp, #40]
  43d628:	ldr	x0, [x0, #208]
  43d62c:	cmp	x0, #0x0
  43d630:	b.ne	43d66c <wcrtomb@plt+0x3895c>  // b.any
  43d634:	ldr	x0, [sp, #32]
  43d638:	str	xzr, [x0]
  43d63c:	ldr	x0, [sp, #32]
  43d640:	ldr	x1, [x0]
  43d644:	ldr	x0, [sp, #32]
  43d648:	str	x1, [x0, #8]
  43d64c:	ldr	x0, [sp, #40]
  43d650:	ldr	x1, [sp, #32]
  43d654:	str	x1, [x0, #216]
  43d658:	ldr	x0, [sp, #40]
  43d65c:	ldr	x1, [x0, #216]
  43d660:	ldr	x0, [sp, #40]
  43d664:	str	x1, [x0, #208]
  43d668:	b	43d748 <wcrtomb@plt+0x38a38>
  43d66c:	ldr	w0, [sp, #20]
  43d670:	cmp	w0, #0x0
  43d674:	b.eq	43d6e4 <wcrtomb@plt+0x389d4>  // b.none
  43d678:	ldr	x0, [sp, #24]
  43d67c:	ldr	x0, [x0]
  43d680:	cmp	x0, #0x0
  43d684:	b.eq	43d6a8 <wcrtomb@plt+0x38998>  // b.none
  43d688:	ldr	x0, [sp, #24]
  43d68c:	ldr	x0, [x0]
  43d690:	mov	w3, #0x0                   	// #0
  43d694:	mov	x2, x0
  43d698:	ldr	x1, [sp, #32]
  43d69c:	ldr	x0, [sp, #40]
  43d6a0:	bl	43d60c <wcrtomb@plt+0x388fc>
  43d6a4:	b	43d748 <wcrtomb@plt+0x38a38>
  43d6a8:	ldr	x0, [sp, #32]
  43d6ac:	bl	43d5cc <wcrtomb@plt+0x388bc>
  43d6b0:	str	x0, [sp, #56]
  43d6b4:	ldr	x0, [sp, #32]
  43d6b8:	str	xzr, [x0]
  43d6bc:	ldr	x0, [sp, #56]
  43d6c0:	ldr	x1, [sp, #24]
  43d6c4:	str	x1, [x0, #8]
  43d6c8:	ldr	x0, [sp, #24]
  43d6cc:	ldr	x1, [sp, #56]
  43d6d0:	str	x1, [x0]
  43d6d4:	ldr	x0, [sp, #40]
  43d6d8:	ldr	x1, [sp, #32]
  43d6dc:	str	x1, [x0, #208]
  43d6e0:	b	43d748 <wcrtomb@plt+0x38a38>
  43d6e4:	ldr	x0, [sp, #32]
  43d6e8:	bl	43d5cc <wcrtomb@plt+0x388bc>
  43d6ec:	str	x0, [sp, #72]
  43d6f0:	ldr	x0, [sp, #24]
  43d6f4:	ldr	x0, [x0, #8]
  43d6f8:	str	x0, [sp, #64]
  43d6fc:	ldr	x0, [sp, #64]
  43d700:	cmp	x0, #0x0
  43d704:	b.eq	43d718 <wcrtomb@plt+0x38a08>  // b.none
  43d708:	ldr	x0, [sp, #64]
  43d70c:	ldr	x1, [sp, #72]
  43d710:	str	x1, [x0]
  43d714:	b	43d724 <wcrtomb@plt+0x38a14>
  43d718:	ldr	x0, [sp, #40]
  43d71c:	ldr	x1, [sp, #72]
  43d720:	str	x1, [x0, #216]
  43d724:	ldr	x0, [sp, #72]
  43d728:	ldr	x1, [sp, #64]
  43d72c:	str	x1, [x0, #8]
  43d730:	ldr	x0, [sp, #32]
  43d734:	ldr	x1, [sp, #24]
  43d738:	str	x1, [x0]
  43d73c:	ldr	x0, [sp, #24]
  43d740:	ldr	x1, [sp, #32]
  43d744:	str	x1, [x0, #8]
  43d748:	nop
  43d74c:	ldp	x29, x30, [sp], #80
  43d750:	ret
  43d754:	stp	x29, x30, [sp, #-64]!
  43d758:	mov	x29, sp
  43d75c:	str	x0, [sp, #40]
  43d760:	str	x1, [sp, #32]
  43d764:	str	x2, [sp, #24]
  43d768:	str	w3, [sp, #20]
  43d76c:	ldr	x1, [sp, #24]
  43d770:	ldr	x0, [sp, #32]
  43d774:	cmp	x1, x0
  43d778:	b.ne	43d794 <wcrtomb@plt+0x38a84>  // b.any
  43d77c:	ldr	w0, [sp, #20]
  43d780:	and	w0, w0, #0x100
  43d784:	cmp	w0, #0x0
  43d788:	b.ne	43d794 <wcrtomb@plt+0x38a84>  // b.any
  43d78c:	mov	w0, #0x0                   	// #0
  43d790:	b	43d7fc <wcrtomb@plt+0x38aec>
  43d794:	add	x0, sp, #0x30
  43d798:	mov	x1, x0
  43d79c:	ldr	x0, [sp, #40]
  43d7a0:	bl	43d404 <wcrtomb@plt+0x386f4>
  43d7a4:	str	w0, [sp, #60]
  43d7a8:	ldr	w0, [sp, #60]
  43d7ac:	cmp	w0, #0x0
  43d7b0:	b.eq	43d7bc <wcrtomb@plt+0x38aac>  // b.none
  43d7b4:	ldr	w0, [sp, #60]
  43d7b8:	b	43d7fc <wcrtomb@plt+0x38aec>
  43d7bc:	ldr	w2, [sp, #20]
  43d7c0:	ldr	x0, [sp, #48]
  43d7c4:	mov	w1, #0xfffffefd            	// #-259
  43d7c8:	and	w1, w2, w1
  43d7cc:	str	w1, [x0, #16]
  43d7d0:	ldr	x0, [sp, #48]
  43d7d4:	ldr	x1, [sp, #32]
  43d7d8:	str	x1, [x0, #24]
  43d7dc:	ldr	x0, [sp, #48]
  43d7e0:	ldr	x1, [sp, #24]
  43d7e4:	str	x1, [x0, #32]
  43d7e8:	ldr	x0, [sp, #48]
  43d7ec:	mov	x1, x0
  43d7f0:	ldr	x0, [sp, #40]
  43d7f4:	bl	43d494 <wcrtomb@plt+0x38784>
  43d7f8:	mov	w0, #0x0                   	// #0
  43d7fc:	ldp	x29, x30, [sp], #64
  43d800:	ret
  43d804:	stp	x29, x30, [sp, #-48]!
  43d808:	mov	x29, sp
  43d80c:	str	x0, [sp, #24]
  43d810:	ldr	x0, [sp, #24]
  43d814:	ldr	x0, [x0, #208]
  43d818:	str	x0, [sp, #40]
  43d81c:	b	43d83c <wcrtomb@plt+0x38b2c>
  43d820:	ldr	x0, [sp, #40]
  43d824:	ldr	x0, [x0, #8]
  43d828:	str	x0, [sp, #32]
  43d82c:	ldr	x0, [sp, #40]
  43d830:	bl	43d454 <wcrtomb@plt+0x38744>
  43d834:	ldr	x0, [sp, #32]
  43d838:	str	x0, [sp, #40]
  43d83c:	ldr	x0, [sp, #40]
  43d840:	cmp	x0, #0x0
  43d844:	b.ne	43d820 <wcrtomb@plt+0x38b10>  // b.any
  43d848:	ldr	x0, [sp, #24]
  43d84c:	str	xzr, [x0, #216]
  43d850:	ldr	x0, [sp, #24]
  43d854:	ldr	x1, [x0, #216]
  43d858:	ldr	x0, [sp, #24]
  43d85c:	str	x1, [x0, #208]
  43d860:	nop
  43d864:	ldp	x29, x30, [sp], #48
  43d868:	ret
  43d86c:	stp	x29, x30, [sp, #-80]!
  43d870:	mov	x29, sp
  43d874:	stp	x19, x20, [sp, #16]
  43d878:	str	x21, [sp, #32]
  43d87c:	str	x0, [sp, #56]
  43d880:	str	wzr, [sp, #68]
  43d884:	ldr	x0, [sp, #56]
  43d888:	ldr	x0, [x0, #208]
  43d88c:	str	x0, [sp, #72]
  43d890:	str	wzr, [sp, #68]
  43d894:	b	43d99c <wcrtomb@plt+0x38c8c>
  43d898:	ldr	x0, [sp, #72]
  43d89c:	ldr	w0, [x0, #16]
  43d8a0:	and	w0, w0, #0x2
  43d8a4:	cmp	w0, #0x0
  43d8a8:	b.eq	43d904 <wcrtomb@plt+0x38bf4>  // b.none
  43d8ac:	ldr	x0, [sp, #56]
  43d8b0:	ldr	x19, [x0, #104]
  43d8b4:	ldr	x0, [sp, #56]
  43d8b8:	ldr	w20, [x0, #224]
  43d8bc:	ldr	x0, [sp, #72]
  43d8c0:	ldr	w21, [x0, #16]
  43d8c4:	ldr	x0, [sp, #72]
  43d8c8:	ldr	w0, [x0, #16]
  43d8cc:	bl	43d178 <wcrtomb@plt+0x38468>
  43d8d0:	mov	x1, x0
  43d8d4:	ldr	x0, [sp, #72]
  43d8d8:	ldr	x0, [x0, #24]
  43d8dc:	mov	x6, x0
  43d8e0:	mov	x5, x1
  43d8e4:	mov	w4, w21
  43d8e8:	ldr	x3, [sp, #72]
  43d8ec:	ldr	w2, [sp, #68]
  43d8f0:	mov	w1, w20
  43d8f4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43d8f8:	add	x0, x0, #0x970
  43d8fc:	blr	x19
  43d900:	b	43d984 <wcrtomb@plt+0x38c74>
  43d904:	ldr	x0, [sp, #56]
  43d908:	ldr	x19, [x0, #104]
  43d90c:	ldr	x0, [sp, #56]
  43d910:	ldr	w20, [x0, #224]
  43d914:	ldr	x0, [sp, #72]
  43d918:	ldr	w21, [x0, #16]
  43d91c:	ldr	x0, [sp, #72]
  43d920:	ldr	w0, [x0, #16]
  43d924:	bl	43d178 <wcrtomb@plt+0x38468>
  43d928:	mov	x2, x0
  43d92c:	ldr	x0, [sp, #72]
  43d930:	ldr	x0, [x0, #32]
  43d934:	mov	w1, w0
  43d938:	ldr	x0, [sp, #72]
  43d93c:	ldr	x0, [x0, #24]
  43d940:	sub	w0, w1, w0
  43d944:	mov	w3, w0
  43d948:	ldr	x0, [sp, #56]
  43d94c:	ldr	x1, [x0, #168]
  43d950:	ldr	x0, [sp, #72]
  43d954:	ldr	x0, [x0, #24]
  43d958:	add	x0, x1, x0
  43d95c:	mov	x7, x0
  43d960:	mov	w6, w3
  43d964:	mov	x5, x2
  43d968:	mov	w4, w21
  43d96c:	ldr	x3, [sp, #72]
  43d970:	ldr	w2, [sp, #68]
  43d974:	mov	w1, w20
  43d978:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43d97c:	add	x0, x0, #0x990
  43d980:	blr	x19
  43d984:	ldr	x0, [sp, #72]
  43d988:	ldr	x0, [x0, #8]
  43d98c:	str	x0, [sp, #72]
  43d990:	ldr	w0, [sp, #68]
  43d994:	add	w0, w0, #0x1
  43d998:	str	w0, [sp, #68]
  43d99c:	ldr	x0, [sp, #72]
  43d9a0:	cmp	x0, #0x0
  43d9a4:	b.ne	43d898 <wcrtomb@plt+0x38b88>  // b.any
  43d9a8:	nop
  43d9ac:	nop
  43d9b0:	ldp	x19, x20, [sp, #16]
  43d9b4:	ldr	x21, [sp, #32]
  43d9b8:	ldp	x29, x30, [sp], #80
  43d9bc:	ret
  43d9c0:	stp	x29, x30, [sp, #-112]!
  43d9c4:	mov	x29, sp
  43d9c8:	str	x0, [sp, #24]
  43d9cc:	str	x1, [sp, #16]
  43d9d0:	str	xzr, [sp, #96]
  43d9d4:	ldr	x0, [sp, #16]
  43d9d8:	ldr	w0, [x0, #16]
  43d9dc:	and	w0, w0, #0x10
  43d9e0:	cmp	w0, #0x0
  43d9e4:	b.ne	43d9f0 <wcrtomb@plt+0x38ce0>  // b.any
  43d9e8:	mov	w0, #0x0                   	// #0
  43d9ec:	b	43dbc8 <wcrtomb@plt+0x38eb8>
  43d9f0:	ldr	x0, [sp, #16]
  43d9f4:	str	x0, [sp, #104]
  43d9f8:	b	43da20 <wcrtomb@plt+0x38d10>
  43d9fc:	ldr	x0, [sp, #104]
  43da00:	bl	43d39c <wcrtomb@plt+0x3868c>
  43da04:	mov	x1, x0
  43da08:	ldr	x0, [sp, #96]
  43da0c:	add	x0, x0, x1
  43da10:	str	x0, [sp, #96]
  43da14:	ldr	x0, [sp, #104]
  43da18:	ldr	x0, [x0, #8]
  43da1c:	str	x0, [sp, #104]
  43da20:	ldr	x0, [sp, #104]
  43da24:	cmp	x0, #0x0
  43da28:	b.eq	43da40 <wcrtomb@plt+0x38d30>  // b.none
  43da2c:	ldr	x0, [sp, #104]
  43da30:	ldr	w0, [x0, #16]
  43da34:	and	w0, w0, #0x10
  43da38:	cmp	w0, #0x0
  43da3c:	b.ne	43d9fc <wcrtomb@plt+0x38cec>  // b.any
  43da40:	ldr	x0, [sp, #104]
  43da44:	cmp	x0, #0x0
  43da48:	b.eq	43da64 <wcrtomb@plt+0x38d54>  // b.none
  43da4c:	ldr	x0, [sp, #104]
  43da50:	bl	43d39c <wcrtomb@plt+0x3868c>
  43da54:	mov	x1, x0
  43da58:	ldr	x0, [sp, #96]
  43da5c:	add	x0, x0, x1
  43da60:	str	x0, [sp, #96]
  43da64:	ldr	x0, [sp, #104]
  43da68:	str	x0, [sp, #72]
  43da6c:	ldr	x0, [sp, #96]
  43da70:	add	x0, x0, #0x1
  43da74:	bl	4043f0 <malloc@plt>
  43da78:	str	x0, [sp, #64]
  43da7c:	ldr	x0, [sp, #64]
  43da80:	cmp	x0, #0x0
  43da84:	b.ne	43da94 <wcrtomb@plt+0x38d84>  // b.any
  43da88:	ldr	x0, [sp, #24]
  43da8c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43da90:	b	43dbc8 <wcrtomb@plt+0x38eb8>
  43da94:	ldr	x0, [sp, #64]
  43da98:	str	x0, [sp, #88]
  43da9c:	ldr	x0, [sp, #16]
  43daa0:	str	x0, [sp, #104]
  43daa4:	str	wzr, [sp, #84]
  43daa8:	b	43db58 <wcrtomb@plt+0x38e48>
  43daac:	ldr	x0, [sp, #104]
  43dab0:	ldr	x0, [x0, #8]
  43dab4:	str	x0, [sp, #56]
  43dab8:	ldr	x1, [sp, #104]
  43dabc:	ldr	x0, [sp, #24]
  43dac0:	bl	43d334 <wcrtomb@plt+0x38624>
  43dac4:	str	x0, [sp, #48]
  43dac8:	ldr	x0, [sp, #104]
  43dacc:	bl	43d39c <wcrtomb@plt+0x3868c>
  43dad0:	str	x0, [sp, #40]
  43dad4:	ldr	x2, [sp, #40]
  43dad8:	ldr	x1, [sp, #48]
  43dadc:	ldr	x0, [sp, #88]
  43dae0:	bl	404020 <memcpy@plt>
  43dae4:	ldr	x1, [sp, #88]
  43dae8:	ldr	x0, [sp, #40]
  43daec:	add	x0, x1, x0
  43daf0:	str	x0, [sp, #88]
  43daf4:	ldr	x1, [sp, #104]
  43daf8:	ldr	x0, [sp, #16]
  43dafc:	cmp	x1, x0
  43db00:	b.eq	43db50 <wcrtomb@plt+0x38e40>  // b.none
  43db04:	ldr	x0, [sp, #16]
  43db08:	ldr	w1, [x0, #16]
  43db0c:	ldr	x0, [sp, #104]
  43db10:	ldr	w0, [x0, #16]
  43db14:	and	w0, w0, #0x4
  43db18:	orr	w1, w1, w0
  43db1c:	ldr	x0, [sp, #16]
  43db20:	str	w1, [x0, #16]
  43db24:	ldr	x1, [sp, #104]
  43db28:	ldr	x0, [sp, #24]
  43db2c:	bl	43d500 <wcrtomb@plt+0x387f0>
  43db30:	ldr	x1, [sp, #104]
  43db34:	ldr	x0, [sp, #72]
  43db38:	cmp	x1, x0
  43db3c:	cset	w0, eq  // eq = none
  43db40:	and	w0, w0, #0xff
  43db44:	str	w0, [sp, #84]
  43db48:	ldr	x0, [sp, #104]
  43db4c:	bl	43d454 <wcrtomb@plt+0x38744>
  43db50:	ldr	x0, [sp, #56]
  43db54:	str	x0, [sp, #104]
  43db58:	ldr	w0, [sp, #84]
  43db5c:	cmp	w0, #0x0
  43db60:	b.eq	43daac <wcrtomb@plt+0x38d9c>  // b.none
  43db64:	ldr	x0, [sp, #88]
  43db68:	strb	wzr, [x0]
  43db6c:	ldr	x0, [sp, #16]
  43db70:	ldr	w0, [x0, #16]
  43db74:	and	w1, w0, #0xffffffef
  43db78:	ldr	x0, [sp, #16]
  43db7c:	str	w1, [x0, #16]
  43db80:	ldr	x0, [sp, #16]
  43db84:	ldr	w0, [x0, #16]
  43db88:	and	w0, w0, #0x2
  43db8c:	cmp	w0, #0x0
  43db90:	b.eq	43dba4 <wcrtomb@plt+0x38e94>  // b.none
  43db94:	ldr	x0, [sp, #16]
  43db98:	ldr	x0, [x0, #24]
  43db9c:	bl	404880 <free@plt>
  43dba0:	b	43dbb8 <wcrtomb@plt+0x38ea8>
  43dba4:	ldr	x0, [sp, #16]
  43dba8:	ldr	w0, [x0, #16]
  43dbac:	orr	w1, w0, #0x2
  43dbb0:	ldr	x0, [sp, #16]
  43dbb4:	str	w1, [x0, #16]
  43dbb8:	ldr	x0, [sp, #16]
  43dbbc:	ldr	x1, [sp, #64]
  43dbc0:	str	x1, [x0, #24]
  43dbc4:	mov	w0, #0x0                   	// #0
  43dbc8:	ldp	x29, x30, [sp], #112
  43dbcc:	ret
  43dbd0:	stp	x29, x30, [sp, #-80]!
  43dbd4:	mov	x29, sp
  43dbd8:	str	x0, [sp, #24]
  43dbdc:	ldr	x0, [sp, #24]
  43dbe0:	ldr	x0, [x0, #208]
  43dbe4:	str	x0, [sp, #72]
  43dbe8:	b	43dcfc <wcrtomb@plt+0x38fec>
  43dbec:	ldr	x1, [sp, #72]
  43dbf0:	ldr	x0, [sp, #24]
  43dbf4:	bl	43d334 <wcrtomb@plt+0x38624>
  43dbf8:	str	x0, [sp, #56]
  43dbfc:	ldr	x0, [sp, #72]
  43dc00:	bl	43d39c <wcrtomb@plt+0x3868c>
  43dc04:	str	x0, [sp, #48]
  43dc08:	ldr	x0, [sp, #24]
  43dc0c:	ldr	w0, [x0, #32]
  43dc10:	and	w0, w0, #0x600
  43dc14:	cmp	w0, #0x0
  43dc18:	b.eq	43dc3c <wcrtomb@plt+0x38f2c>  // b.none
  43dc1c:	ldr	x0, [sp, #72]
  43dc20:	ldr	w0, [x0, #16]
  43dc24:	and	w0, w0, #0x8
  43dc28:	cmp	w0, #0x0
  43dc2c:	cset	w0, eq  // eq = none
  43dc30:	and	w0, w0, #0xff
  43dc34:	str	w0, [sp, #68]
  43dc38:	b	43dc40 <wcrtomb@plt+0x38f30>
  43dc3c:	str	wzr, [sp, #68]
  43dc40:	ldr	w0, [sp, #68]
  43dc44:	cmp	w0, #0x0
  43dc48:	b.eq	43dcf0 <wcrtomb@plt+0x38fe0>  // b.none
  43dc4c:	ldr	x0, [sp, #72]
  43dc50:	ldr	w0, [x0, #16]
  43dc54:	and	w0, w0, #0x2
  43dc58:	cmp	w0, #0x0
  43dc5c:	b.ne	43dcc8 <wcrtomb@plt+0x38fb8>  // b.any
  43dc60:	ldr	x0, [sp, #48]
  43dc64:	add	x0, x0, #0x1
  43dc68:	bl	4043f0 <malloc@plt>
  43dc6c:	str	x0, [sp, #40]
  43dc70:	ldr	x0, [sp, #40]
  43dc74:	cmp	x0, #0x0
  43dc78:	b.ne	43dc88 <wcrtomb@plt+0x38f78>  // b.any
  43dc7c:	ldr	x0, [sp, #24]
  43dc80:	bl	43c980 <wcrtomb@plt+0x37c70>
  43dc84:	b	43dd0c <wcrtomb@plt+0x38ffc>
  43dc88:	ldr	x2, [sp, #48]
  43dc8c:	ldr	x1, [sp, #56]
  43dc90:	ldr	x0, [sp, #40]
  43dc94:	bl	404020 <memcpy@plt>
  43dc98:	ldr	x1, [sp, #40]
  43dc9c:	ldr	x0, [sp, #48]
  43dca0:	add	x0, x1, x0
  43dca4:	strb	wzr, [x0]
  43dca8:	ldr	x0, [sp, #72]
  43dcac:	ldr	x1, [sp, #40]
  43dcb0:	str	x1, [x0, #24]
  43dcb4:	ldr	x0, [sp, #72]
  43dcb8:	ldr	w0, [x0, #16]
  43dcbc:	orr	w1, w0, #0x2
  43dcc0:	ldr	x0, [sp, #72]
  43dcc4:	str	w1, [x0, #16]
  43dcc8:	ldr	x0, [sp, #72]
  43dccc:	ldr	w0, [x0, #16]
  43dcd0:	and	w1, w0, #0x4
  43dcd4:	ldr	x0, [sp, #72]
  43dcd8:	ldr	x0, [x0, #24]
  43dcdc:	ldr	x4, [sp, #48]
  43dce0:	ldr	x3, [sp, #56]
  43dce4:	mov	x2, x0
  43dce8:	ldr	x0, [sp, #24]
  43dcec:	bl	441934 <wcrtomb@plt+0x3cc24>
  43dcf0:	ldr	x0, [sp, #72]
  43dcf4:	ldr	x0, [x0, #8]
  43dcf8:	str	x0, [sp, #72]
  43dcfc:	ldr	x0, [sp, #72]
  43dd00:	cmp	x0, #0x0
  43dd04:	b.ne	43dbec <wcrtomb@plt+0x38edc>  // b.any
  43dd08:	mov	w0, #0x0                   	// #0
  43dd0c:	ldp	x29, x30, [sp], #80
  43dd10:	ret
  43dd14:	stp	x29, x30, [sp, #-48]!
  43dd18:	mov	x29, sp
  43dd1c:	str	x0, [sp, #24]
  43dd20:	ldr	x0, [sp, #24]
  43dd24:	ldr	x0, [x0, #208]
  43dd28:	str	x0, [sp, #40]
  43dd2c:	b	43dd6c <wcrtomb@plt+0x3905c>
  43dd30:	ldr	x0, [sp, #40]
  43dd34:	ldr	w0, [x0, #16]
  43dd38:	and	w0, w0, #0x10
  43dd3c:	cmp	w0, #0x0
  43dd40:	b.eq	43dd60 <wcrtomb@plt+0x39050>  // b.none
  43dd44:	ldr	x1, [sp, #40]
  43dd48:	ldr	x0, [sp, #24]
  43dd4c:	bl	43d9c0 <wcrtomb@plt+0x38cb0>
  43dd50:	cmp	w0, #0x0
  43dd54:	b.eq	43dd60 <wcrtomb@plt+0x39050>  // b.none
  43dd58:	mov	w0, #0x1                   	// #1
  43dd5c:	b	43dd7c <wcrtomb@plt+0x3906c>
  43dd60:	ldr	x0, [sp, #40]
  43dd64:	ldr	x0, [x0, #8]
  43dd68:	str	x0, [sp, #40]
  43dd6c:	ldr	x0, [sp, #40]
  43dd70:	cmp	x0, #0x0
  43dd74:	b.ne	43dd30 <wcrtomb@plt+0x39020>  // b.any
  43dd78:	mov	w0, #0x0                   	// #0
  43dd7c:	ldp	x29, x30, [sp], #48
  43dd80:	ret
  43dd84:	stp	x29, x30, [sp, #-48]!
  43dd88:	mov	x29, sp
  43dd8c:	str	x0, [sp, #24]
  43dd90:	str	x1, [sp, #16]
  43dd94:	ldr	x0, [sp, #16]
  43dd98:	ldr	x0, [x0, #8]
  43dd9c:	cmp	x0, #0x0
  43dda0:	b.eq	43de08 <wcrtomb@plt+0x390f8>  // b.none
  43dda4:	ldr	x0, [sp, #16]
  43dda8:	str	x0, [sp, #40]
  43ddac:	b	43ddd0 <wcrtomb@plt+0x390c0>
  43ddb0:	ldr	x0, [sp, #40]
  43ddb4:	ldr	w0, [x0, #16]
  43ddb8:	orr	w1, w0, #0x10
  43ddbc:	ldr	x0, [sp, #40]
  43ddc0:	str	w1, [x0, #16]
  43ddc4:	ldr	x0, [sp, #40]
  43ddc8:	ldr	x0, [x0, #8]
  43ddcc:	str	x0, [sp, #40]
  43ddd0:	ldr	x0, [sp, #40]
  43ddd4:	cmp	x0, #0x0
  43ddd8:	b.eq	43ddec <wcrtomb@plt+0x390dc>  // b.none
  43dddc:	ldr	x0, [sp, #40]
  43dde0:	ldr	x0, [x0, #8]
  43dde4:	cmp	x0, #0x0
  43dde8:	b.ne	43ddb0 <wcrtomb@plt+0x390a0>  // b.any
  43ddec:	ldr	x1, [sp, #16]
  43ddf0:	ldr	x0, [sp, #24]
  43ddf4:	bl	43d9c0 <wcrtomb@plt+0x38cb0>
  43ddf8:	cmp	w0, #0x0
  43ddfc:	b.eq	43de08 <wcrtomb@plt+0x390f8>  // b.none
  43de00:	mov	w0, #0x1                   	// #1
  43de04:	b	43de0c <wcrtomb@plt+0x390fc>
  43de08:	mov	w0, #0x0                   	// #0
  43de0c:	ldp	x29, x30, [sp], #48
  43de10:	ret
  43de14:	stp	x29, x30, [sp, #-128]!
  43de18:	mov	x29, sp
  43de1c:	str	x19, [sp, #16]
  43de20:	str	x0, [sp, #40]
  43de24:	str	wzr, [sp, #108]
  43de28:	str	xzr, [sp, #112]
  43de2c:	ldr	x0, [sp, #40]
  43de30:	ldr	x0, [x0, #208]
  43de34:	str	x0, [sp, #120]
  43de38:	b	43dfac <wcrtomb@plt+0x3929c>
  43de3c:	ldr	x0, [sp, #120]
  43de40:	ldr	x0, [x0, #8]
  43de44:	str	x0, [sp, #96]
  43de48:	ldr	x0, [sp, #120]
  43de4c:	ldr	w0, [x0, #16]
  43de50:	and	w0, w0, #0x40
  43de54:	cmp	w0, #0x0
  43de58:	b.eq	43df28 <wcrtomb@plt+0x39218>  // b.none
  43de5c:	ldr	x0, [sp, #40]
  43de60:	ldr	w0, [x0, #32]
  43de64:	and	w0, w0, #0x1000
  43de68:	cmp	w0, #0x0
  43de6c:	b.eq	43defc <wcrtomb@plt+0x391ec>  // b.none
  43de70:	ldr	x0, [sp, #40]
  43de74:	ldr	w0, [x0, #32]
  43de78:	and	w0, w0, #0x800
  43de7c:	cmp	w0, #0x0
  43de80:	b.eq	43df7c <wcrtomb@plt+0x3926c>  // b.none
  43de84:	ldr	x1, [sp, #120]
  43de88:	ldr	x0, [sp, #40]
  43de8c:	bl	43d334 <wcrtomb@plt+0x38624>
  43de90:	str	x0, [sp, #88]
  43de94:	ldr	w0, [sp, #108]
  43de98:	cmp	w0, #0x0
  43de9c:	b.eq	43dee4 <wcrtomb@plt+0x391d4>  // b.none
  43dea0:	ldr	x0, [sp, #88]
  43dea4:	ldrb	w0, [x0]
  43dea8:	mov	w1, w0
  43deac:	ldr	w0, [sp, #108]
  43deb0:	cmp	w0, w1
  43deb4:	b.ne	43ded0 <wcrtomb@plt+0x391c0>  // b.any
  43deb8:	ldr	x1, [sp, #120]
  43debc:	ldr	x0, [sp, #40]
  43dec0:	bl	43d500 <wcrtomb@plt+0x387f0>
  43dec4:	ldr	x0, [sp, #96]
  43dec8:	str	x0, [sp, #120]
  43decc:	b	43dfac <wcrtomb@plt+0x3929c>
  43ded0:	str	wzr, [sp, #108]
  43ded4:	ldr	x0, [sp, #112]
  43ded8:	add	x0, x0, #0x1
  43dedc:	str	x0, [sp, #112]
  43dee0:	b	43df7c <wcrtomb@plt+0x3926c>
  43dee4:	ldr	x0, [sp, #88]
  43dee8:	ldrb	w0, [x0]
  43deec:	str	w0, [sp, #108]
  43def0:	ldr	x0, [sp, #96]
  43def4:	str	x0, [sp, #120]
  43def8:	b	43dfac <wcrtomb@plt+0x3929c>
  43defc:	ldr	x0, [sp, #40]
  43df00:	ldr	w0, [x0, #36]
  43df04:	and	w0, w0, #0x80
  43df08:	cmp	w0, #0x0
  43df0c:	b.eq	43df7c <wcrtomb@plt+0x3926c>  // b.none
  43df10:	ldr	x1, [sp, #120]
  43df14:	ldr	x0, [sp, #40]
  43df18:	bl	43d500 <wcrtomb@plt+0x387f0>
  43df1c:	ldr	x0, [sp, #96]
  43df20:	str	x0, [sp, #120]
  43df24:	b	43dfac <wcrtomb@plt+0x3929c>
  43df28:	ldr	w0, [sp, #108]
  43df2c:	cmp	w0, #0x0
  43df30:	b.eq	43df44 <wcrtomb@plt+0x39234>  // b.none
  43df34:	ldr	x0, [sp, #112]
  43df38:	add	x0, x0, #0x1
  43df3c:	str	x0, [sp, #112]
  43df40:	str	wzr, [sp, #108]
  43df44:	ldr	x0, [sp, #40]
  43df48:	ldr	w0, [x0, #36]
  43df4c:	and	w0, w0, #0x80
  43df50:	cmp	w0, #0x0
  43df54:	b.eq	43df7c <wcrtomb@plt+0x3926c>  // b.none
  43df58:	ldr	x0, [sp, #40]
  43df5c:	ldr	x1, [x0, #48]
  43df60:	ldr	x0, [sp, #112]
  43df64:	add	x0, x1, x0
  43df68:	add	x1, x0, #0x1
  43df6c:	ldr	x0, [sp, #40]
  43df70:	ldr	x0, [x0, #40]
  43df74:	cmp	x1, x0
  43df78:	b.eq	43dfbc <wcrtomb@plt+0x392ac>  // b.none
  43df7c:	ldr	x0, [sp, #112]
  43df80:	add	x0, x0, #0x1
  43df84:	str	x0, [sp, #112]
  43df88:	ldr	x0, [sp, #40]
  43df8c:	ldr	w0, [x0, #32]
  43df90:	and	w0, w0, #0x20000000
  43df94:	cmp	w0, #0x0
  43df98:	b.eq	43dfa4 <wcrtomb@plt+0x39294>  // b.none
  43df9c:	str	xzr, [sp, #120]
  43dfa0:	b	43dfac <wcrtomb@plt+0x3929c>
  43dfa4:	ldr	x0, [sp, #96]
  43dfa8:	str	x0, [sp, #120]
  43dfac:	ldr	x0, [sp, #120]
  43dfb0:	cmp	x0, #0x0
  43dfb4:	b.ne	43de3c <wcrtomb@plt+0x3912c>  // b.any
  43dfb8:	b	43dfc0 <wcrtomb@plt+0x392b0>
  43dfbc:	nop
  43dfc0:	ldr	x0, [sp, #120]
  43dfc4:	cmp	x0, #0x0
  43dfc8:	b.eq	43dff8 <wcrtomb@plt+0x392e8>  // b.none
  43dfcc:	ldr	x1, [sp, #120]
  43dfd0:	ldr	x0, [sp, #40]
  43dfd4:	bl	43dd84 <wcrtomb@plt+0x39074>
  43dfd8:	cmp	w0, #0x0
  43dfdc:	b.eq	43dfec <wcrtomb@plt+0x392dc>  // b.none
  43dfe0:	ldr	x0, [sp, #40]
  43dfe4:	ldr	w0, [x0, #192]
  43dfe8:	b	43e1f0 <wcrtomb@plt+0x394e0>
  43dfec:	ldr	x0, [sp, #112]
  43dff0:	add	x0, x0, #0x1
  43dff4:	str	x0, [sp, #112]
  43dff8:	ldr	x0, [sp, #112]
  43dffc:	cmp	x0, #0x0
  43e000:	b.ne	43e098 <wcrtomb@plt+0x39388>  // b.any
  43e004:	ldr	x0, [sp, #40]
  43e008:	ldr	w0, [x0, #32]
  43e00c:	and	w0, w0, #0x20000000
  43e010:	cmp	w0, #0x0
  43e014:	b.eq	43e098 <wcrtomb@plt+0x39388>  // b.none
  43e018:	ldr	x0, [sp, #40]
  43e01c:	ldr	x1, [x0, #184]
  43e020:	ldr	x0, [sp, #40]
  43e024:	ldr	x0, [x0, #176]
  43e028:	cmp	x1, x0
  43e02c:	b.cs	43e088 <wcrtomb@plt+0x39378>  // b.hs, b.nlast
  43e030:	ldr	x0, [sp, #40]
  43e034:	ldr	w0, [x0, #32]
  43e038:	and	w0, w0, #0x200000
  43e03c:	cmp	w0, #0x0
  43e040:	b.eq	43e05c <wcrtomb@plt+0x3934c>  // b.none
  43e044:	ldr	x0, [sp, #40]
  43e048:	ldr	x19, [x0, #104]
  43e04c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43e050:	add	x0, x0, #0x9b8
  43e054:	bl	404c60 <gettext@plt>
  43e058:	blr	x19
  43e05c:	ldr	x0, [sp, #40]
  43e060:	bl	440dd8 <wcrtomb@plt+0x3c0c8>
  43e064:	mov	x1, x0
  43e068:	ldr	x0, [sp, #40]
  43e06c:	bl	441fb4 <wcrtomb@plt+0x3d2a4>
  43e070:	str	w0, [sp, #84]
  43e074:	ldr	w0, [sp, #84]
  43e078:	cmp	w0, #0x0
  43e07c:	b.eq	43de24 <wcrtomb@plt+0x39114>  // b.none
  43e080:	ldr	w0, [sp, #84]
  43e084:	b	43e1f0 <wcrtomb@plt+0x394e0>
  43e088:	ldr	x0, [sp, #40]
  43e08c:	str	xzr, [x0, #96]
  43e090:	mov	w0, #0x0                   	// #0
  43e094:	b	43e1f0 <wcrtomb@plt+0x394e0>
  43e098:	ldr	x0, [sp, #112]
  43e09c:	add	x0, x0, #0x1
  43e0a0:	mov	x1, x0
  43e0a4:	ldr	x0, [sp, #40]
  43e0a8:	bl	43d03c <wcrtomb@plt+0x3832c>
  43e0ac:	cmp	w0, #0x0
  43e0b0:	b.eq	43e1ac <wcrtomb@plt+0x3949c>  // b.none
  43e0b4:	ldr	x0, [sp, #40]
  43e0b8:	ldr	w0, [x0, #192]
  43e0bc:	b	43e1f0 <wcrtomb@plt+0x394e0>
  43e0c0:	ldr	x0, [sp, #40]
  43e0c4:	ldr	x0, [x0, #208]
  43e0c8:	mov	x1, x0
  43e0cc:	ldr	x0, [sp, #40]
  43e0d0:	bl	43d334 <wcrtomb@plt+0x38624>
  43e0d4:	str	x0, [sp, #72]
  43e0d8:	ldr	x0, [sp, #40]
  43e0dc:	ldr	x0, [x0, #208]
  43e0e0:	bl	43d39c <wcrtomb@plt+0x3868c>
  43e0e4:	str	x0, [sp, #64]
  43e0e8:	ldr	x0, [sp, #64]
  43e0ec:	add	x0, x0, #0x1
  43e0f0:	bl	4043f0 <malloc@plt>
  43e0f4:	str	x0, [sp, #56]
  43e0f8:	ldr	x0, [sp, #40]
  43e0fc:	ldr	x1, [x0, #8]
  43e100:	ldr	x0, [sp, #40]
  43e104:	ldr	x2, [x0, #16]
  43e108:	ldr	x0, [sp, #40]
  43e10c:	ldr	x0, [x0]
  43e110:	add	x0, x2, x0
  43e114:	lsl	x0, x0, #3
  43e118:	add	x0, x1, x0
  43e11c:	ldr	x1, [sp, #56]
  43e120:	str	x1, [x0]
  43e124:	ldr	x0, [sp, #56]
  43e128:	cmp	x0, #0x0
  43e12c:	b.ne	43e13c <wcrtomb@plt+0x3942c>  // b.any
  43e130:	ldr	x0, [sp, #40]
  43e134:	bl	43c980 <wcrtomb@plt+0x37c70>
  43e138:	b	43e1f0 <wcrtomb@plt+0x394e0>
  43e13c:	ldr	x2, [sp, #64]
  43e140:	ldr	x1, [sp, #72]
  43e144:	ldr	x0, [sp, #56]
  43e148:	bl	404020 <memcpy@plt>
  43e14c:	ldr	x1, [sp, #56]
  43e150:	ldr	x0, [sp, #64]
  43e154:	add	x0, x1, x0
  43e158:	strb	wzr, [x0]
  43e15c:	ldr	x0, [sp, #40]
  43e160:	ldr	x0, [x0, #208]
  43e164:	mov	x1, x0
  43e168:	ldr	x0, [sp, #40]
  43e16c:	bl	43d500 <wcrtomb@plt+0x387f0>
  43e170:	ldr	x0, [sp, #40]
  43e174:	ldr	x0, [x0]
  43e178:	add	x1, x0, #0x1
  43e17c:	ldr	x0, [sp, #40]
  43e180:	str	x1, [x0]
  43e184:	ldr	x0, [sp, #40]
  43e188:	ldr	x0, [x0, #48]
  43e18c:	add	x1, x0, #0x1
  43e190:	ldr	x0, [sp, #40]
  43e194:	str	x1, [x0, #48]
  43e198:	ldr	x0, [sp, #40]
  43e19c:	ldr	w0, [x0, #32]
  43e1a0:	and	w0, w0, #0x20000000
  43e1a4:	cmp	w0, #0x0
  43e1a8:	b.ne	43e1c0 <wcrtomb@plt+0x394b0>  // b.any
  43e1ac:	ldr	x0, [sp, #40]
  43e1b0:	ldr	x0, [x0, #208]
  43e1b4:	cmp	x0, #0x0
  43e1b8:	b.ne	43e0c0 <wcrtomb@plt+0x393b0>  // b.any
  43e1bc:	b	43e1c4 <wcrtomb@plt+0x394b4>
  43e1c0:	nop
  43e1c4:	ldr	x0, [sp, #40]
  43e1c8:	ldr	x1, [x0, #8]
  43e1cc:	ldr	x0, [sp, #40]
  43e1d0:	ldr	x2, [x0, #16]
  43e1d4:	ldr	x0, [sp, #40]
  43e1d8:	ldr	x0, [x0]
  43e1dc:	add	x0, x2, x0
  43e1e0:	lsl	x0, x0, #3
  43e1e4:	add	x0, x1, x0
  43e1e8:	str	xzr, [x0]
  43e1ec:	mov	w0, #0x0                   	// #0
  43e1f0:	ldr	x19, [sp, #16]
  43e1f4:	ldp	x29, x30, [sp], #128
  43e1f8:	ret
  43e1fc:	stp	x29, x30, [sp, #-80]!
  43e200:	mov	x29, sp
  43e204:	str	x0, [sp, #40]
  43e208:	str	w1, [sp, #36]
  43e20c:	str	x2, [sp, #24]
  43e210:	ldr	x0, [sp, #40]
  43e214:	ldr	x1, [x0]
  43e218:	ldrsw	x0, [sp, #36]
  43e21c:	add	x0, x1, x0
  43e220:	add	x0, x0, #0x1
  43e224:	mov	x1, x0
  43e228:	ldr	x0, [sp, #40]
  43e22c:	bl	43d03c <wcrtomb@plt+0x3832c>
  43e230:	str	w0, [sp, #68]
  43e234:	ldr	w0, [sp, #68]
  43e238:	cmp	w0, #0x0
  43e23c:	b.eq	43e248 <wcrtomb@plt+0x39538>  // b.none
  43e240:	ldr	w0, [sp, #68]
  43e244:	b	43e3a0 <wcrtomb@plt+0x39690>
  43e248:	str	xzr, [sp, #72]
  43e24c:	b	43e34c <wcrtomb@plt+0x3963c>
  43e250:	ldr	x0, [sp, #72]
  43e254:	lsl	x0, x0, #3
  43e258:	ldr	x1, [sp, #24]
  43e25c:	add	x0, x1, x0
  43e260:	ldr	x0, [x0]
  43e264:	bl	404620 <strdup@plt>
  43e268:	str	x0, [sp, #56]
  43e26c:	ldr	x0, [sp, #56]
  43e270:	cmp	x0, #0x0
  43e274:	b.ne	43e30c <wcrtomb@plt+0x395fc>  // b.any
  43e278:	b	43e2f4 <wcrtomb@plt+0x395e4>
  43e27c:	ldr	x0, [sp, #40]
  43e280:	ldr	x1, [x0, #8]
  43e284:	ldr	x0, [sp, #40]
  43e288:	ldr	x2, [x0, #16]
  43e28c:	ldr	x0, [sp, #40]
  43e290:	ldr	x0, [x0]
  43e294:	add	x2, x2, x0
  43e298:	ldr	x0, [sp, #72]
  43e29c:	add	x0, x2, x0
  43e2a0:	lsl	x0, x0, #3
  43e2a4:	sub	x0, x0, #0x8
  43e2a8:	add	x0, x1, x0
  43e2ac:	ldr	x0, [x0]
  43e2b0:	bl	404880 <free@plt>
  43e2b4:	ldr	x0, [sp, #40]
  43e2b8:	ldr	x1, [x0, #8]
  43e2bc:	ldr	x0, [sp, #40]
  43e2c0:	ldr	x2, [x0, #16]
  43e2c4:	ldr	x0, [sp, #40]
  43e2c8:	ldr	x0, [x0]
  43e2cc:	add	x2, x2, x0
  43e2d0:	ldr	x0, [sp, #72]
  43e2d4:	add	x0, x2, x0
  43e2d8:	lsl	x0, x0, #3
  43e2dc:	sub	x0, x0, #0x8
  43e2e0:	add	x0, x1, x0
  43e2e4:	str	xzr, [x0]
  43e2e8:	ldr	x0, [sp, #72]
  43e2ec:	sub	x0, x0, #0x1
  43e2f0:	str	x0, [sp, #72]
  43e2f4:	ldr	x0, [sp, #72]
  43e2f8:	cmp	x0, #0x0
  43e2fc:	b.ne	43e27c <wcrtomb@plt+0x3956c>  // b.any
  43e300:	ldr	x0, [sp, #40]
  43e304:	bl	43c980 <wcrtomb@plt+0x37c70>
  43e308:	b	43e3a0 <wcrtomb@plt+0x39690>
  43e30c:	ldr	x0, [sp, #40]
  43e310:	ldr	x1, [x0, #8]
  43e314:	ldr	x0, [sp, #40]
  43e318:	ldr	x2, [x0, #16]
  43e31c:	ldr	x0, [sp, #40]
  43e320:	ldr	x0, [x0]
  43e324:	add	x2, x2, x0
  43e328:	ldr	x0, [sp, #72]
  43e32c:	add	x0, x2, x0
  43e330:	lsl	x0, x0, #3
  43e334:	add	x0, x1, x0
  43e338:	ldr	x1, [sp, #56]
  43e33c:	str	x1, [x0]
  43e340:	ldr	x0, [sp, #72]
  43e344:	add	x0, x0, #0x1
  43e348:	str	x0, [sp, #72]
  43e34c:	ldrsw	x0, [sp, #36]
  43e350:	ldr	x1, [sp, #72]
  43e354:	cmp	x1, x0
  43e358:	b.cc	43e250 <wcrtomb@plt+0x39540>  // b.lo, b.ul, b.last
  43e35c:	ldr	x0, [sp, #40]
  43e360:	ldr	x1, [x0]
  43e364:	ldr	x0, [sp, #72]
  43e368:	add	x1, x1, x0
  43e36c:	ldr	x0, [sp, #40]
  43e370:	str	x1, [x0]
  43e374:	ldr	x0, [sp, #40]
  43e378:	ldr	x1, [x0, #8]
  43e37c:	ldr	x0, [sp, #40]
  43e380:	ldr	x2, [x0, #16]
  43e384:	ldr	x0, [sp, #40]
  43e388:	ldr	x0, [x0]
  43e38c:	add	x0, x2, x0
  43e390:	lsl	x0, x0, #3
  43e394:	add	x0, x1, x0
  43e398:	str	xzr, [x0]
  43e39c:	mov	w0, #0x0                   	// #0
  43e3a0:	ldp	x29, x30, [sp], #80
  43e3a4:	ret
  43e3a8:	stp	x29, x30, [sp, #-96]!
  43e3ac:	mov	x29, sp
  43e3b0:	str	x0, [sp, #56]
  43e3b4:	str	x1, [sp, #48]
  43e3b8:	str	x2, [sp, #40]
  43e3bc:	str	x3, [sp, #32]
  43e3c0:	str	x4, [sp, #24]
  43e3c4:	str	w5, [sp, #20]
  43e3c8:	ldr	x0, [sp, #24]
  43e3cc:	cmp	x0, #0x0
  43e3d0:	b.ne	43e3dc <wcrtomb@plt+0x396cc>  // b.any
  43e3d4:	mov	w0, #0x0                   	// #0
  43e3d8:	b	43e504 <wcrtomb@plt+0x397f4>
  43e3dc:	add	x0, sp, #0x48
  43e3e0:	mov	x1, x0
  43e3e4:	ldr	x0, [sp, #56]
  43e3e8:	bl	43d404 <wcrtomb@plt+0x386f4>
  43e3ec:	cmp	w0, #0x0
  43e3f0:	b.eq	43e3fc <wcrtomb@plt+0x396ec>  // b.none
  43e3f4:	mov	w0, #0x1                   	// #1
  43e3f8:	b	43e504 <wcrtomb@plt+0x397f4>
  43e3fc:	ldr	x1, [sp, #72]
  43e400:	ldr	x0, [sp, #48]
  43e404:	ldr	x0, [x0]
  43e408:	mov	w3, #0x0                   	// #0
  43e40c:	mov	x2, x0
  43e410:	ldr	x0, [sp, #56]
  43e414:	bl	43d60c <wcrtomb@plt+0x388fc>
  43e418:	ldr	x0, [sp, #40]
  43e41c:	ldr	w0, [x0, #16]
  43e420:	and	w0, w0, #0x2
  43e424:	cmp	w0, #0x0
  43e428:	b.eq	43e4ac <wcrtomb@plt+0x3979c>  // b.none
  43e42c:	ldr	x1, [sp, #40]
  43e430:	ldr	x0, [sp, #56]
  43e434:	bl	43d334 <wcrtomb@plt+0x38624>
  43e438:	str	x0, [sp, #88]
  43e43c:	ldr	x0, [sp, #24]
  43e440:	add	x0, x0, #0x1
  43e444:	bl	4043f0 <malloc@plt>
  43e448:	str	x0, [sp, #80]
  43e44c:	ldr	x0, [sp, #80]
  43e450:	cmp	x0, #0x0
  43e454:	b.ne	43e464 <wcrtomb@plt+0x39754>  // b.any
  43e458:	ldr	x0, [sp, #56]
  43e45c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43e460:	b	43e504 <wcrtomb@plt+0x397f4>
  43e464:	ldr	x1, [sp, #88]
  43e468:	ldr	x0, [sp, #32]
  43e46c:	add	x0, x1, x0
  43e470:	ldr	x2, [sp, #24]
  43e474:	mov	x1, x0
  43e478:	ldr	x0, [sp, #80]
  43e47c:	bl	404020 <memcpy@plt>
  43e480:	ldr	x1, [sp, #80]
  43e484:	ldr	x0, [sp, #24]
  43e488:	add	x0, x1, x0
  43e48c:	strb	wzr, [x0]
  43e490:	ldr	x0, [sp, #72]
  43e494:	mov	w1, #0x2                   	// #2
  43e498:	str	w1, [x0, #16]
  43e49c:	ldr	x0, [sp, #72]
  43e4a0:	ldr	x1, [sp, #80]
  43e4a4:	str	x1, [x0, #24]
  43e4a8:	b	43e4dc <wcrtomb@plt+0x397cc>
  43e4ac:	ldr	x0, [sp, #40]
  43e4b0:	ldr	x2, [x0, #24]
  43e4b4:	ldr	x0, [sp, #72]
  43e4b8:	ldr	x1, [sp, #32]
  43e4bc:	add	x1, x2, x1
  43e4c0:	str	x1, [x0, #24]
  43e4c4:	ldr	x0, [sp, #72]
  43e4c8:	ldr	x2, [x0, #24]
  43e4cc:	ldr	x0, [sp, #72]
  43e4d0:	ldr	x1, [sp, #24]
  43e4d4:	add	x1, x2, x1
  43e4d8:	str	x1, [x0, #32]
  43e4dc:	ldr	x0, [sp, #72]
  43e4e0:	ldr	w2, [x0, #16]
  43e4e4:	ldr	w1, [sp, #20]
  43e4e8:	ldr	x0, [sp, #72]
  43e4ec:	orr	w1, w2, w1
  43e4f0:	str	w1, [x0, #16]
  43e4f4:	ldr	x1, [sp, #72]
  43e4f8:	ldr	x0, [sp, #48]
  43e4fc:	str	x1, [x0]
  43e500:	mov	w0, #0x0                   	// #0
  43e504:	ldp	x29, x30, [sp], #96
  43e508:	ret
  43e50c:	sub	sp, sp, #0x40
  43e510:	str	x0, [sp, #40]
  43e514:	str	x1, [sp, #32]
  43e518:	str	x2, [sp, #24]
  43e51c:	str	x3, [sp, #16]
  43e520:	str	x4, [sp, #8]
  43e524:	str	wzr, [sp, #60]
  43e528:	mov	x0, #0x1                   	// #1
  43e52c:	str	x0, [sp, #48]
  43e530:	b	43e6b0 <wcrtomb@plt+0x399a0>
  43e534:	ldr	w0, [sp, #60]
  43e538:	cmp	w0, #0x2
  43e53c:	b.eq	43e650 <wcrtomb@plt+0x39940>  // b.none
  43e540:	ldr	w0, [sp, #60]
  43e544:	cmp	w0, #0x2
  43e548:	b.hi	43e6a4 <wcrtomb@plt+0x39994>  // b.pmore
  43e54c:	ldr	w0, [sp, #60]
  43e550:	cmp	w0, #0x0
  43e554:	b.eq	43e568 <wcrtomb@plt+0x39858>  // b.none
  43e558:	ldr	w0, [sp, #60]
  43e55c:	cmp	w0, #0x1
  43e560:	b.eq	43e630 <wcrtomb@plt+0x39920>  // b.none
  43e564:	b	43e6a4 <wcrtomb@plt+0x39994>
  43e568:	ldr	x1, [sp, #40]
  43e56c:	ldr	x0, [sp, #32]
  43e570:	add	x0, x1, x0
  43e574:	ldrb	w0, [x0]
  43e578:	cmp	w0, #0x22
  43e57c:	b.eq	43e608 <wcrtomb@plt+0x398f8>  // b.none
  43e580:	cmp	w0, #0x27
  43e584:	b.eq	43e614 <wcrtomb@plt+0x39904>  // b.none
  43e588:	ldr	x1, [sp, #40]
  43e58c:	ldr	x0, [sp, #32]
  43e590:	add	x0, x1, x0
  43e594:	ldrb	w1, [x0]
  43e598:	ldr	x0, [sp, #8]
  43e59c:	ldrb	w0, [x0]
  43e5a0:	cmp	w1, w0
  43e5a4:	b.ne	43e5b8 <wcrtomb@plt+0x398a8>  // b.any
  43e5a8:	ldr	x0, [sp, #48]
  43e5ac:	add	x0, x0, #0x1
  43e5b0:	str	x0, [sp, #48]
  43e5b4:	b	43e62c <wcrtomb@plt+0x3991c>
  43e5b8:	ldr	x1, [sp, #40]
  43e5bc:	ldr	x0, [sp, #32]
  43e5c0:	add	x0, x1, x0
  43e5c4:	ldrb	w1, [x0]
  43e5c8:	ldr	x0, [sp, #8]
  43e5cc:	add	x0, x0, #0x1
  43e5d0:	ldrb	w0, [x0]
  43e5d4:	cmp	w1, w0
  43e5d8:	b.ne	43e620 <wcrtomb@plt+0x39910>  // b.any
  43e5dc:	ldr	x0, [sp, #48]
  43e5e0:	sub	x0, x0, #0x1
  43e5e4:	str	x0, [sp, #48]
  43e5e8:	ldr	x0, [sp, #48]
  43e5ec:	cmp	x0, #0x0
  43e5f0:	b.ne	43e628 <wcrtomb@plt+0x39918>  // b.any
  43e5f4:	ldr	x0, [sp, #16]
  43e5f8:	ldr	x1, [sp, #32]
  43e5fc:	str	x1, [x0]
  43e600:	mov	w0, #0x0                   	// #0
  43e604:	b	43e6c4 <wcrtomb@plt+0x399b4>
  43e608:	mov	w0, #0x2                   	// #2
  43e60c:	str	w0, [sp, #60]
  43e610:	b	43e62c <wcrtomb@plt+0x3991c>
  43e614:	mov	w0, #0x1                   	// #1
  43e618:	str	w0, [sp, #60]
  43e61c:	b	43e62c <wcrtomb@plt+0x3991c>
  43e620:	nop
  43e624:	b	43e6a4 <wcrtomb@plt+0x39994>
  43e628:	nop
  43e62c:	b	43e6a4 <wcrtomb@plt+0x39994>
  43e630:	ldr	x1, [sp, #40]
  43e634:	ldr	x0, [sp, #32]
  43e638:	add	x0, x1, x0
  43e63c:	ldrb	w0, [x0]
  43e640:	cmp	w0, #0x27
  43e644:	b.ne	43e698 <wcrtomb@plt+0x39988>  // b.any
  43e648:	str	wzr, [sp, #60]
  43e64c:	b	43e698 <wcrtomb@plt+0x39988>
  43e650:	ldr	x1, [sp, #40]
  43e654:	ldr	x0, [sp, #32]
  43e658:	add	x0, x1, x0
  43e65c:	ldrb	w0, [x0]
  43e660:	cmp	w0, #0x5c
  43e664:	b.ne	43e678 <wcrtomb@plt+0x39968>  // b.any
  43e668:	ldr	x0, [sp, #32]
  43e66c:	add	x0, x0, #0x1
  43e670:	str	x0, [sp, #32]
  43e674:	b	43e6a0 <wcrtomb@plt+0x39990>
  43e678:	ldr	x1, [sp, #40]
  43e67c:	ldr	x0, [sp, #32]
  43e680:	add	x0, x1, x0
  43e684:	ldrb	w0, [x0]
  43e688:	cmp	w0, #0x22
  43e68c:	b.ne	43e6a0 <wcrtomb@plt+0x39990>  // b.any
  43e690:	str	wzr, [sp, #60]
  43e694:	b	43e6a0 <wcrtomb@plt+0x39990>
  43e698:	nop
  43e69c:	b	43e6a4 <wcrtomb@plt+0x39994>
  43e6a0:	nop
  43e6a4:	ldr	x0, [sp, #32]
  43e6a8:	add	x0, x0, #0x1
  43e6ac:	str	x0, [sp, #32]
  43e6b0:	ldr	x1, [sp, #32]
  43e6b4:	ldr	x0, [sp, #24]
  43e6b8:	cmp	x1, x0
  43e6bc:	b.cc	43e534 <wcrtomb@plt+0x39824>  // b.lo, b.ul, b.last
  43e6c0:	mov	w0, #0x1                   	// #1
  43e6c4:	add	sp, sp, #0x40
  43e6c8:	ret
  43e6cc:	stp	x29, x30, [sp, #-80]!
  43e6d0:	mov	x29, sp
  43e6d4:	str	x0, [sp, #40]
  43e6d8:	str	x1, [sp, #32]
  43e6dc:	str	x2, [sp, #24]
  43e6e0:	str	x3, [sp, #16]
  43e6e4:	ldr	x0, [sp, #40]
  43e6e8:	ldr	w0, [x0, #32]
  43e6ec:	and	w0, w0, #0x80000
  43e6f0:	cmp	w0, #0x0
  43e6f4:	b.ne	43e700 <wcrtomb@plt+0x399f0>  // b.any
  43e6f8:	mov	w0, #0x5                   	// #5
  43e6fc:	b	43e908 <wcrtomb@plt+0x39bf8>
  43e700:	ldr	x0, [sp, #40]
  43e704:	ldr	w0, [x0, #32]
  43e708:	and	w0, w0, #0x8000000
  43e70c:	cmp	w0, #0x0
  43e710:	b.eq	43e800 <wcrtomb@plt+0x39af0>  // b.none
  43e714:	str	xzr, [sp, #72]
  43e718:	b	43e7dc <wcrtomb@plt+0x39acc>
  43e71c:	ldr	x0, [sp, #40]
  43e720:	ldr	x1, [x0, #112]
  43e724:	ldr	x0, [sp, #72]
  43e728:	lsl	x0, x0, #3
  43e72c:	add	x0, x1, x0
  43e730:	ldr	x0, [x0]
  43e734:	bl	4040b0 <strlen@plt>
  43e738:	str	x0, [sp, #48]
  43e73c:	ldr	x1, [sp, #48]
  43e740:	ldr	x0, [sp, #24]
  43e744:	cmp	x1, x0
  43e748:	b.ne	43e7a4 <wcrtomb@plt+0x39a94>  // b.any
  43e74c:	ldr	x0, [sp, #40]
  43e750:	ldr	x1, [x0, #112]
  43e754:	ldr	x0, [sp, #72]
  43e758:	lsl	x0, x0, #3
  43e75c:	add	x0, x1, x0
  43e760:	ldr	x0, [x0]
  43e764:	ldr	x2, [sp, #48]
  43e768:	ldr	x1, [sp, #32]
  43e76c:	bl	404790 <memcmp@plt>
  43e770:	cmp	w0, #0x0
  43e774:	b.ne	43e7a4 <wcrtomb@plt+0x39a94>  // b.any
  43e778:	ldr	x0, [sp, #40]
  43e77c:	ldr	x1, [x0, #112]
  43e780:	ldr	x0, [sp, #72]
  43e784:	add	x0, x0, #0x1
  43e788:	lsl	x0, x0, #3
  43e78c:	add	x0, x1, x0
  43e790:	ldr	x1, [x0]
  43e794:	ldr	x0, [sp, #16]
  43e798:	str	x1, [x0]
  43e79c:	mov	w0, #0x0                   	// #0
  43e7a0:	b	43e908 <wcrtomb@plt+0x39bf8>
  43e7a4:	ldr	x0, [sp, #72]
  43e7a8:	add	x0, x0, #0x1
  43e7ac:	str	x0, [sp, #72]
  43e7b0:	ldr	x0, [sp, #40]
  43e7b4:	ldr	x1, [x0, #112]
  43e7b8:	ldr	x0, [sp, #72]
  43e7bc:	lsl	x0, x0, #3
  43e7c0:	add	x0, x1, x0
  43e7c4:	ldr	x0, [x0]
  43e7c8:	cmp	x0, #0x0
  43e7cc:	b.eq	43e900 <wcrtomb@plt+0x39bf0>  // b.none
  43e7d0:	ldr	x0, [sp, #72]
  43e7d4:	add	x0, x0, #0x1
  43e7d8:	str	x0, [sp, #72]
  43e7dc:	ldr	x0, [sp, #40]
  43e7e0:	ldr	x1, [x0, #112]
  43e7e4:	ldr	x0, [sp, #72]
  43e7e8:	lsl	x0, x0, #3
  43e7ec:	add	x0, x1, x0
  43e7f0:	ldr	x0, [x0]
  43e7f4:	cmp	x0, #0x0
  43e7f8:	b.ne	43e71c <wcrtomb@plt+0x39a0c>  // b.any
  43e7fc:	b	43e904 <wcrtomb@plt+0x39bf4>
  43e800:	ldr	x0, [sp, #40]
  43e804:	ldr	x0, [x0, #112]
  43e808:	cmp	x0, #0x0
  43e80c:	b.eq	43e904 <wcrtomb@plt+0x39bf4>  // b.none
  43e810:	str	xzr, [sp, #72]
  43e814:	b	43e8dc <wcrtomb@plt+0x39bcc>
  43e818:	ldr	x0, [sp, #40]
  43e81c:	ldr	x1, [x0, #112]
  43e820:	ldr	x0, [sp, #72]
  43e824:	lsl	x0, x0, #3
  43e828:	add	x0, x1, x0
  43e82c:	ldr	x0, [x0]
  43e830:	str	x0, [sp, #56]
  43e834:	str	xzr, [sp, #64]
  43e838:	b	43e870 <wcrtomb@plt+0x39b60>
  43e83c:	ldr	x1, [sp, #32]
  43e840:	ldr	x0, [sp, #64]
  43e844:	add	x0, x1, x0
  43e848:	ldrb	w1, [x0]
  43e84c:	ldr	x2, [sp, #56]
  43e850:	ldr	x0, [sp, #64]
  43e854:	add	x0, x2, x0
  43e858:	ldrb	w0, [x0]
  43e85c:	cmp	w1, w0
  43e860:	b.ne	43e884 <wcrtomb@plt+0x39b74>  // b.any
  43e864:	ldr	x0, [sp, #64]
  43e868:	add	x0, x0, #0x1
  43e86c:	str	x0, [sp, #64]
  43e870:	ldr	x1, [sp, #64]
  43e874:	ldr	x0, [sp, #24]
  43e878:	cmp	x1, x0
  43e87c:	b.cc	43e83c <wcrtomb@plt+0x39b2c>  // b.lo, b.ul, b.last
  43e880:	b	43e888 <wcrtomb@plt+0x39b78>
  43e884:	nop
  43e888:	ldr	x1, [sp, #64]
  43e88c:	ldr	x0, [sp, #24]
  43e890:	cmp	x1, x0
  43e894:	b.ne	43e8d0 <wcrtomb@plt+0x39bc0>  // b.any
  43e898:	ldr	x1, [sp, #56]
  43e89c:	ldr	x0, [sp, #64]
  43e8a0:	add	x0, x1, x0
  43e8a4:	ldrb	w0, [x0]
  43e8a8:	cmp	w0, #0x3d
  43e8ac:	b.ne	43e8d0 <wcrtomb@plt+0x39bc0>  // b.any
  43e8b0:	ldr	x0, [sp, #64]
  43e8b4:	add	x0, x0, #0x1
  43e8b8:	ldr	x1, [sp, #56]
  43e8bc:	add	x1, x1, x0
  43e8c0:	ldr	x0, [sp, #16]
  43e8c4:	str	x1, [x0]
  43e8c8:	mov	w0, #0x0                   	// #0
  43e8cc:	b	43e908 <wcrtomb@plt+0x39bf8>
  43e8d0:	ldr	x0, [sp, #72]
  43e8d4:	add	x0, x0, #0x1
  43e8d8:	str	x0, [sp, #72]
  43e8dc:	ldr	x0, [sp, #40]
  43e8e0:	ldr	x1, [x0, #112]
  43e8e4:	ldr	x0, [sp, #72]
  43e8e8:	lsl	x0, x0, #3
  43e8ec:	add	x0, x1, x0
  43e8f0:	ldr	x0, [x0]
  43e8f4:	cmp	x0, #0x0
  43e8f8:	b.ne	43e818 <wcrtomb@plt+0x39b08>  // b.any
  43e8fc:	b	43e904 <wcrtomb@plt+0x39bf4>
  43e900:	nop
  43e904:	mov	w0, #0x5                   	// #5
  43e908:	ldp	x29, x30, [sp], #80
  43e90c:	ret
  43e910:	stp	x29, x30, [sp, #-128]!
  43e914:	mov	x29, sp
  43e918:	str	x19, [sp, #16]
  43e91c:	str	x0, [sp, #56]
  43e920:	str	x1, [sp, #48]
  43e924:	str	x2, [sp, #40]
  43e928:	str	x3, [sp, #32]
  43e92c:	ldr	x0, [sp, #56]
  43e930:	ldr	w0, [x0, #32]
  43e934:	and	w0, w0, #0x8000000
  43e938:	cmp	w0, #0x0
  43e93c:	b.eq	43e948 <wcrtomb@plt+0x39c38>  // b.none
  43e940:	mov	w0, #0x2                   	// #2
  43e944:	b	43e94c <wcrtomb@plt+0x39c3c>
  43e948:	mov	w0, #0x1                   	// #1
  43e94c:	str	w0, [sp, #108]
  43e950:	ldr	x0, [sp, #56]
  43e954:	ldr	x1, [x0, #128]
  43e958:	ldrsw	x0, [sp, #108]
  43e95c:	add	x1, x1, x0
  43e960:	ldr	x0, [sp, #56]
  43e964:	ldr	x0, [x0, #136]
  43e968:	cmp	x1, x0
  43e96c:	b.cc	43ec18 <wcrtomb@plt+0x39f08>  // b.lo, b.ul, b.last
  43e970:	ldr	x0, [sp, #56]
  43e974:	ldr	x0, [x0, #120]
  43e978:	cmp	x0, #0x0
  43e97c:	b.ne	43ebac <wcrtomb@plt+0x39e9c>  // b.any
  43e980:	ldr	x0, [sp, #56]
  43e984:	ldr	w0, [x0, #32]
  43e988:	and	w0, w0, #0x80000
  43e98c:	cmp	w0, #0x0
  43e990:	b.eq	43eb3c <wcrtomb@plt+0x39e2c>  // b.none
  43e994:	str	xzr, [sp, #120]
  43e998:	ldr	x0, [sp, #56]
  43e99c:	ldr	x0, [x0, #112]
  43e9a0:	cmp	x0, #0x0
  43e9a4:	b.eq	43e9d8 <wcrtomb@plt+0x39cc8>  // b.none
  43e9a8:	b	43e9b8 <wcrtomb@plt+0x39ca8>
  43e9ac:	ldr	x0, [sp, #120]
  43e9b0:	add	x0, x0, #0x1
  43e9b4:	str	x0, [sp, #120]
  43e9b8:	ldr	x0, [sp, #56]
  43e9bc:	ldr	x1, [x0, #112]
  43e9c0:	ldr	x0, [sp, #120]
  43e9c4:	lsl	x0, x0, #3
  43e9c8:	add	x0, x1, x0
  43e9cc:	ldr	x0, [x0]
  43e9d0:	cmp	x0, #0x0
  43e9d4:	b.ne	43e9ac <wcrtomb@plt+0x39c9c>  // b.any
  43e9d8:	ldrsw	x1, [sp, #108]
  43e9dc:	ldr	x0, [sp, #120]
  43e9e0:	add	x0, x1, x0
  43e9e4:	add	x0, x0, #0x1
  43e9e8:	str	x0, [sp, #88]
  43e9ec:	mov	x1, #0x8                   	// #8
  43e9f0:	ldr	x0, [sp, #88]
  43e9f4:	bl	404560 <calloc@plt>
  43e9f8:	str	x0, [sp, #96]
  43e9fc:	ldr	x0, [sp, #96]
  43ea00:	cmp	x0, #0x0
  43ea04:	b.ne	43ea14 <wcrtomb@plt+0x39d04>  // b.any
  43ea08:	ldr	x0, [sp, #56]
  43ea0c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43ea10:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43ea14:	str	xzr, [sp, #112]
  43ea18:	b	43eae0 <wcrtomb@plt+0x39dd0>
  43ea1c:	ldr	x0, [sp, #56]
  43ea20:	ldr	x1, [x0, #112]
  43ea24:	ldr	x0, [sp, #112]
  43ea28:	lsl	x0, x0, #3
  43ea2c:	add	x0, x1, x0
  43ea30:	ldr	x2, [x0]
  43ea34:	ldr	x0, [sp, #112]
  43ea38:	lsl	x0, x0, #3
  43ea3c:	ldr	x1, [sp, #96]
  43ea40:	add	x19, x1, x0
  43ea44:	mov	x0, x2
  43ea48:	bl	404620 <strdup@plt>
  43ea4c:	str	x0, [x19]
  43ea50:	ldr	x0, [sp, #112]
  43ea54:	lsl	x0, x0, #3
  43ea58:	ldr	x1, [sp, #96]
  43ea5c:	add	x0, x1, x0
  43ea60:	ldr	x0, [x0]
  43ea64:	cmp	x0, #0x0
  43ea68:	b.ne	43ead4 <wcrtomb@plt+0x39dc4>  // b.any
  43ea6c:	b	43ea98 <wcrtomb@plt+0x39d88>
  43ea70:	ldr	x0, [sp, #112]
  43ea74:	lsl	x0, x0, #3
  43ea78:	sub	x0, x0, #0x8
  43ea7c:	ldr	x1, [sp, #96]
  43ea80:	add	x0, x1, x0
  43ea84:	ldr	x0, [x0]
  43ea88:	bl	404880 <free@plt>
  43ea8c:	ldr	x0, [sp, #112]
  43ea90:	sub	x0, x0, #0x1
  43ea94:	str	x0, [sp, #112]
  43ea98:	ldr	x0, [sp, #112]
  43ea9c:	cmp	x0, #0x1
  43eaa0:	b.hi	43ea70 <wcrtomb@plt+0x39d60>  // b.pmore
  43eaa4:	ldr	x0, [sp, #112]
  43eaa8:	lsl	x0, x0, #3
  43eaac:	sub	x0, x0, #0x8
  43eab0:	ldr	x1, [sp, #96]
  43eab4:	add	x0, x1, x0
  43eab8:	ldr	x0, [x0]
  43eabc:	bl	404880 <free@plt>
  43eac0:	ldr	x0, [sp, #96]
  43eac4:	bl	404880 <free@plt>
  43eac8:	ldr	x0, [sp, #56]
  43eacc:	bl	43c980 <wcrtomb@plt+0x37c70>
  43ead0:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43ead4:	ldr	x0, [sp, #112]
  43ead8:	add	x0, x0, #0x1
  43eadc:	str	x0, [sp, #112]
  43eae0:	ldr	x1, [sp, #112]
  43eae4:	ldr	x0, [sp, #120]
  43eae8:	cmp	x1, x0
  43eaec:	b.cc	43ea1c <wcrtomb@plt+0x39d0c>  // b.lo, b.ul, b.last
  43eaf0:	ldr	x0, [sp, #112]
  43eaf4:	lsl	x0, x0, #3
  43eaf8:	ldr	x1, [sp, #96]
  43eafc:	add	x0, x1, x0
  43eb00:	str	xzr, [x0]
  43eb04:	ldr	x0, [sp, #56]
  43eb08:	ldr	x1, [sp, #96]
  43eb0c:	str	x1, [x0, #120]
  43eb10:	ldr	x0, [sp, #56]
  43eb14:	ldr	x1, [sp, #120]
  43eb18:	str	x1, [x0, #128]
  43eb1c:	ldr	x0, [sp, #56]
  43eb20:	ldr	x1, [sp, #88]
  43eb24:	str	x1, [x0, #136]
  43eb28:	ldr	x0, [sp, #56]
  43eb2c:	ldr	x1, [x0, #120]
  43eb30:	ldr	x0, [sp, #56]
  43eb34:	str	x1, [x0, #112]
  43eb38:	b	43ec18 <wcrtomb@plt+0x39f08>
  43eb3c:	mov	x1, #0x8                   	// #8
  43eb40:	mov	x0, #0x10                  	// #16
  43eb44:	bl	404560 <calloc@plt>
  43eb48:	str	x0, [sp, #96]
  43eb4c:	ldr	x0, [sp, #96]
  43eb50:	cmp	x0, #0x0
  43eb54:	b.ne	43eb64 <wcrtomb@plt+0x39e54>  // b.any
  43eb58:	ldr	x0, [sp, #56]
  43eb5c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43eb60:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43eb64:	ldr	x0, [sp, #56]
  43eb68:	ldr	x1, [sp, #96]
  43eb6c:	str	x1, [x0, #120]
  43eb70:	ldr	x0, [sp, #56]
  43eb74:	str	xzr, [x0, #128]
  43eb78:	ldr	x0, [sp, #56]
  43eb7c:	mov	x1, #0x10                  	// #16
  43eb80:	str	x1, [x0, #136]
  43eb84:	ldr	x0, [sp, #56]
  43eb88:	ldr	x1, [x0, #120]
  43eb8c:	ldr	x0, [sp, #56]
  43eb90:	str	x1, [x0, #112]
  43eb94:	ldr	x0, [sp, #56]
  43eb98:	ldr	w0, [x0, #32]
  43eb9c:	orr	w1, w0, #0x80000
  43eba0:	ldr	x0, [sp, #56]
  43eba4:	str	w1, [x0, #32]
  43eba8:	b	43ec18 <wcrtomb@plt+0x39f08>
  43ebac:	ldr	x0, [sp, #56]
  43ebb0:	ldr	x0, [x0, #136]
  43ebb4:	lsl	x1, x0, #1
  43ebb8:	ldr	x0, [sp, #56]
  43ebbc:	str	x1, [x0, #136]
  43ebc0:	ldr	x0, [sp, #56]
  43ebc4:	ldr	x2, [x0, #120]
  43ebc8:	ldr	x0, [sp, #56]
  43ebcc:	ldr	x0, [x0, #136]
  43ebd0:	lsl	x0, x0, #3
  43ebd4:	mov	x1, x0
  43ebd8:	mov	x0, x2
  43ebdc:	bl	4045e0 <realloc@plt>
  43ebe0:	str	x0, [sp, #96]
  43ebe4:	ldr	x0, [sp, #96]
  43ebe8:	cmp	x0, #0x0
  43ebec:	b.ne	43ebfc <wcrtomb@plt+0x39eec>  // b.any
  43ebf0:	ldr	x0, [sp, #56]
  43ebf4:	bl	43c980 <wcrtomb@plt+0x37c70>
  43ebf8:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43ebfc:	ldr	x0, [sp, #56]
  43ec00:	ldr	x1, [sp, #96]
  43ec04:	str	x1, [x0, #120]
  43ec08:	ldr	x0, [sp, #56]
  43ec0c:	ldr	x1, [x0, #120]
  43ec10:	ldr	x0, [sp, #56]
  43ec14:	str	x1, [x0, #112]
  43ec18:	ldr	x0, [sp, #56]
  43ec1c:	ldr	w0, [x0, #32]
  43ec20:	and	w0, w0, #0x8000000
  43ec24:	cmp	w0, #0x0
  43ec28:	b.eq	43ecfc <wcrtomb@plt+0x39fec>  // b.none
  43ec2c:	ldr	x0, [sp, #40]
  43ec30:	add	x0, x0, #0x1
  43ec34:	bl	4043f0 <malloc@plt>
  43ec38:	str	x0, [sp, #72]
  43ec3c:	ldr	x0, [sp, #72]
  43ec40:	cmp	x0, #0x0
  43ec44:	b.ne	43ec54 <wcrtomb@plt+0x39f44>  // b.any
  43ec48:	ldr	x0, [sp, #56]
  43ec4c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43ec50:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43ec54:	ldr	x2, [sp, #40]
  43ec58:	ldr	x1, [sp, #48]
  43ec5c:	ldr	x0, [sp, #72]
  43ec60:	bl	404020 <memcpy@plt>
  43ec64:	ldr	x1, [sp, #72]
  43ec68:	ldr	x0, [sp, #40]
  43ec6c:	add	x0, x1, x0
  43ec70:	strb	wzr, [x0]
  43ec74:	ldr	x0, [sp, #32]
  43ec78:	bl	404620 <strdup@plt>
  43ec7c:	str	x0, [sp, #80]
  43ec80:	ldr	x0, [sp, #80]
  43ec84:	cmp	x0, #0x0
  43ec88:	b.ne	43eca0 <wcrtomb@plt+0x39f90>  // b.any
  43ec8c:	ldr	x0, [sp, #72]
  43ec90:	bl	404880 <free@plt>
  43ec94:	ldr	x0, [sp, #56]
  43ec98:	bl	43c980 <wcrtomb@plt+0x37c70>
  43ec9c:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43eca0:	ldr	x0, [sp, #56]
  43eca4:	ldr	x1, [x0, #112]
  43eca8:	ldr	x0, [sp, #56]
  43ecac:	ldr	x0, [x0, #128]
  43ecb0:	add	x3, x0, #0x1
  43ecb4:	ldr	x2, [sp, #56]
  43ecb8:	str	x3, [x2, #128]
  43ecbc:	lsl	x0, x0, #3
  43ecc0:	add	x0, x1, x0
  43ecc4:	ldr	x1, [sp, #72]
  43ecc8:	str	x1, [x0]
  43eccc:	ldr	x0, [sp, #56]
  43ecd0:	ldr	x1, [x0, #112]
  43ecd4:	ldr	x0, [sp, #56]
  43ecd8:	ldr	x0, [x0, #128]
  43ecdc:	add	x3, x0, #0x1
  43ece0:	ldr	x2, [sp, #56]
  43ece4:	str	x3, [x2, #128]
  43ece8:	lsl	x0, x0, #3
  43ecec:	add	x0, x1, x0
  43ecf0:	ldr	x1, [sp, #80]
  43ecf4:	str	x1, [x0]
  43ecf8:	b	43eda0 <wcrtomb@plt+0x3a090>
  43ecfc:	ldr	x0, [sp, #32]
  43ed00:	bl	4040b0 <strlen@plt>
  43ed04:	mov	x1, x0
  43ed08:	ldr	x0, [sp, #40]
  43ed0c:	add	x0, x1, x0
  43ed10:	add	x0, x0, #0x2
  43ed14:	bl	4043f0 <malloc@plt>
  43ed18:	str	x0, [sp, #80]
  43ed1c:	ldr	x0, [sp, #80]
  43ed20:	cmp	x0, #0x0
  43ed24:	b.ne	43ed34 <wcrtomb@plt+0x3a024>  // b.any
  43ed28:	ldr	x0, [sp, #56]
  43ed2c:	bl	43c980 <wcrtomb@plt+0x37c70>
  43ed30:	b	43edcc <wcrtomb@plt+0x3a0bc>
  43ed34:	ldr	x2, [sp, #40]
  43ed38:	ldr	x1, [sp, #48]
  43ed3c:	ldr	x0, [sp, #80]
  43ed40:	bl	404020 <memcpy@plt>
  43ed44:	ldr	x0, [sp, #40]
  43ed48:	add	x1, x0, #0x1
  43ed4c:	str	x1, [sp, #40]
  43ed50:	ldr	x1, [sp, #80]
  43ed54:	add	x0, x1, x0
  43ed58:	mov	w1, #0x3d                  	// #61
  43ed5c:	strb	w1, [x0]
  43ed60:	ldr	x1, [sp, #80]
  43ed64:	ldr	x0, [sp, #40]
  43ed68:	add	x0, x1, x0
  43ed6c:	ldr	x1, [sp, #32]
  43ed70:	bl	4049d0 <strcpy@plt>
  43ed74:	ldr	x0, [sp, #56]
  43ed78:	ldr	x1, [x0, #112]
  43ed7c:	ldr	x0, [sp, #56]
  43ed80:	ldr	x0, [x0, #128]
  43ed84:	add	x3, x0, #0x1
  43ed88:	ldr	x2, [sp, #56]
  43ed8c:	str	x3, [x2, #128]
  43ed90:	lsl	x0, x0, #3
  43ed94:	add	x0, x1, x0
  43ed98:	ldr	x1, [sp, #80]
  43ed9c:	str	x1, [x0]
  43eda0:	ldr	x0, [sp, #56]
  43eda4:	ldr	x1, [x0, #112]
  43eda8:	ldr	x0, [sp, #56]
  43edac:	ldr	x0, [x0, #128]
  43edb0:	add	x3, x0, #0x1
  43edb4:	ldr	x2, [sp, #56]
  43edb8:	str	x3, [x2, #128]
  43edbc:	lsl	x0, x0, #3
  43edc0:	add	x0, x1, x0
  43edc4:	str	xzr, [x0]
  43edc8:	mov	w0, #0x0                   	// #0
  43edcc:	ldr	x19, [sp, #16]
  43edd0:	ldp	x29, x30, [sp], #128
  43edd4:	ret
  43edd8:	sub	sp, sp, #0x290
  43eddc:	stp	x29, x30, [sp]
  43ede0:	mov	x29, sp
  43ede4:	str	x19, [sp, #16]
  43ede8:	str	x0, [sp, #72]
  43edec:	str	x1, [sp, #64]
  43edf0:	str	x2, [sp, #56]
  43edf4:	str	x3, [sp, #48]
  43edf8:	str	x4, [sp, #40]
  43edfc:	str	w5, [sp, #36]
  43ee00:	str	xzr, [sp, #648]
  43ee04:	str	xzr, [sp, #640]
  43ee08:	ldr	x0, [sp, #64]
  43ee0c:	sub	x0, x0, #0x1
  43ee10:	str	x0, [sp, #624]
  43ee14:	ldr	x0, [sp, #64]
  43ee18:	ldrb	w0, [x0]
  43ee1c:	cmp	w0, #0x40
  43ee20:	b.ls	43ee34 <wcrtomb@plt+0x3a124>  // b.plast
  43ee24:	ldr	x0, [sp, #64]
  43ee28:	ldrb	w0, [x0]
  43ee2c:	cmp	w0, #0x5a
  43ee30:	b.ls	43ee64 <wcrtomb@plt+0x3a154>  // b.plast
  43ee34:	ldr	x0, [sp, #64]
  43ee38:	ldrb	w0, [x0]
  43ee3c:	cmp	w0, #0x60
  43ee40:	b.ls	43ee54 <wcrtomb@plt+0x3a144>  // b.plast
  43ee44:	ldr	x0, [sp, #64]
  43ee48:	ldrb	w0, [x0]
  43ee4c:	cmp	w0, #0x7a
  43ee50:	b.ls	43ee64 <wcrtomb@plt+0x3a154>  // b.plast
  43ee54:	ldr	x0, [sp, #64]
  43ee58:	ldrb	w0, [x0]
  43ee5c:	cmp	w0, #0x5f
  43ee60:	b.ne	43ef58 <wcrtomb@plt+0x3a248>  // b.any
  43ee64:	mov	x0, #0x1                   	// #1
  43ee68:	str	x0, [sp, #648]
  43ee6c:	b	43ef24 <wcrtomb@plt+0x3a214>
  43ee70:	ldr	x1, [sp, #64]
  43ee74:	ldr	x0, [sp, #648]
  43ee78:	add	x0, x1, x0
  43ee7c:	ldrb	w0, [x0]
  43ee80:	cmp	w0, #0x40
  43ee84:	b.ls	43eea0 <wcrtomb@plt+0x3a190>  // b.plast
  43ee88:	ldr	x1, [sp, #64]
  43ee8c:	ldr	x0, [sp, #648]
  43ee90:	add	x0, x1, x0
  43ee94:	ldrb	w0, [x0]
  43ee98:	cmp	w0, #0x5a
  43ee9c:	b.ls	43ef18 <wcrtomb@plt+0x3a208>  // b.plast
  43eea0:	ldr	x1, [sp, #64]
  43eea4:	ldr	x0, [sp, #648]
  43eea8:	add	x0, x1, x0
  43eeac:	ldrb	w0, [x0]
  43eeb0:	cmp	w0, #0x60
  43eeb4:	b.ls	43eed0 <wcrtomb@plt+0x3a1c0>  // b.plast
  43eeb8:	ldr	x1, [sp, #64]
  43eebc:	ldr	x0, [sp, #648]
  43eec0:	add	x0, x1, x0
  43eec4:	ldrb	w0, [x0]
  43eec8:	cmp	w0, #0x7a
  43eecc:	b.ls	43ef18 <wcrtomb@plt+0x3a208>  // b.plast
  43eed0:	ldr	x1, [sp, #64]
  43eed4:	ldr	x0, [sp, #648]
  43eed8:	add	x0, x1, x0
  43eedc:	ldrb	w0, [x0]
  43eee0:	cmp	w0, #0x2f
  43eee4:	b.ls	43ef00 <wcrtomb@plt+0x3a1f0>  // b.plast
  43eee8:	ldr	x1, [sp, #64]
  43eeec:	ldr	x0, [sp, #648]
  43eef0:	add	x0, x1, x0
  43eef4:	ldrb	w0, [x0]
  43eef8:	cmp	w0, #0x39
  43eefc:	b.ls	43ef18 <wcrtomb@plt+0x3a208>  // b.plast
  43ef00:	ldr	x1, [sp, #64]
  43ef04:	ldr	x0, [sp, #648]
  43ef08:	add	x0, x1, x0
  43ef0c:	ldrb	w0, [x0]
  43ef10:	cmp	w0, #0x5f
  43ef14:	b.ne	43ef38 <wcrtomb@plt+0x3a228>  // b.any
  43ef18:	ldr	x0, [sp, #648]
  43ef1c:	add	x0, x0, #0x1
  43ef20:	str	x0, [sp, #648]
  43ef24:	ldr	x1, [sp, #648]
  43ef28:	ldr	x0, [sp, #56]
  43ef2c:	cmp	x1, x0
  43ef30:	b.cc	43ee70 <wcrtomb@plt+0x3a160>  // b.lo, b.ul, b.last
  43ef34:	b	43ef3c <wcrtomb@plt+0x3a22c>
  43ef38:	nop
  43ef3c:	ldr	x0, [sp, #648]
  43ef40:	sub	x0, x0, #0x1
  43ef44:	ldr	x1, [sp, #64]
  43ef48:	add	x1, x1, x0
  43ef4c:	ldr	x0, [sp, #40]
  43ef50:	str	x1, [x0]
  43ef54:	b	43f1d4 <wcrtomb@plt+0x3a4c4>
  43ef58:	ldr	x0, [sp, #64]
  43ef5c:	ldrb	w0, [x0]
  43ef60:	cmp	w0, #0x7b
  43ef64:	b.ne	43f104 <wcrtomb@plt+0x3a3f4>  // b.any
  43ef68:	ldr	x0, [sp, #64]
  43ef6c:	add	x0, x0, #0x1
  43ef70:	str	x0, [sp, #64]
  43ef74:	ldr	x0, [sp, #56]
  43ef78:	sub	x0, x0, #0x1
  43ef7c:	str	x0, [sp, #56]
  43ef80:	mov	x0, #0x1                   	// #1
  43ef84:	str	x0, [sp, #648]
  43ef88:	b	43f0d4 <wcrtomb@plt+0x3a3c4>
  43ef8c:	ldr	x1, [sp, #64]
  43ef90:	ldr	x0, [sp, #648]
  43ef94:	add	x0, x1, x0
  43ef98:	ldrb	w0, [x0]
  43ef9c:	cmp	w0, #0x3a
  43efa0:	b.ne	43f00c <wcrtomb@plt+0x3a2fc>  // b.any
  43efa4:	ldr	x0, [sp, #648]
  43efa8:	add	x0, x0, #0x1
  43efac:	ldr	x1, [sp, #64]
  43efb0:	add	x0, x1, x0
  43efb4:	str	x0, [sp, #640]
  43efb8:	ldr	x0, [sp, #648]
  43efbc:	add	x1, x0, #0x1
  43efc0:	add	x2, sp, #0x148
  43efc4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43efc8:	add	x4, x0, #0x9c8
  43efcc:	mov	x3, x2
  43efd0:	ldr	x2, [sp, #56]
  43efd4:	ldr	x0, [sp, #64]
  43efd8:	bl	43e50c <wcrtomb@plt+0x397fc>
  43efdc:	cmp	w0, #0x0
  43efe0:	b.eq	43eff4 <wcrtomb@plt+0x3a2e4>  // b.none
  43efe4:	mov	w1, #0x4                   	// #4
  43efe8:	ldr	x0, [sp, #72]
  43efec:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43eff0:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43eff4:	ldr	x0, [sp, #328]
  43eff8:	ldr	x1, [sp, #64]
  43effc:	add	x1, x1, x0
  43f000:	ldr	x0, [sp, #40]
  43f004:	str	x1, [x0]
  43f008:	b	43f0e4 <wcrtomb@plt+0x3a3d4>
  43f00c:	ldr	x1, [sp, #64]
  43f010:	ldr	x0, [sp, #648]
  43f014:	add	x0, x1, x0
  43f018:	ldrb	w0, [x0]
  43f01c:	cmp	w0, #0x7d
  43f020:	b.ne	43f040 <wcrtomb@plt+0x3a330>  // b.any
  43f024:	str	xzr, [sp, #640]
  43f028:	ldr	x1, [sp, #64]
  43f02c:	ldr	x0, [sp, #648]
  43f030:	add	x1, x1, x0
  43f034:	ldr	x0, [sp, #40]
  43f038:	str	x1, [x0]
  43f03c:	b	43f0e4 <wcrtomb@plt+0x3a3d4>
  43f040:	ldr	x1, [sp, #64]
  43f044:	ldr	x0, [sp, #648]
  43f048:	add	x0, x1, x0
  43f04c:	ldrb	w0, [x0]
  43f050:	mov	w1, w0
  43f054:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f058:	add	x0, x0, #0x9d0
  43f05c:	bl	404930 <strchr@plt>
  43f060:	cmp	x0, #0x0
  43f064:	b.eq	43f0c8 <wcrtomb@plt+0x3a3b8>  // b.none
  43f068:	ldr	x1, [sp, #64]
  43f06c:	ldr	x0, [sp, #648]
  43f070:	add	x0, x1, x0
  43f074:	str	x0, [sp, #640]
  43f078:	add	x1, sp, #0x140
  43f07c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f080:	add	x4, x0, #0x9c8
  43f084:	mov	x3, x1
  43f088:	ldr	x2, [sp, #56]
  43f08c:	ldr	x1, [sp, #648]
  43f090:	ldr	x0, [sp, #64]
  43f094:	bl	43e50c <wcrtomb@plt+0x397fc>
  43f098:	cmp	w0, #0x0
  43f09c:	b.eq	43f0b0 <wcrtomb@plt+0x3a3a0>  // b.none
  43f0a0:	mov	w1, #0x4                   	// #4
  43f0a4:	ldr	x0, [sp, #72]
  43f0a8:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43f0ac:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f0b0:	ldr	x0, [sp, #320]
  43f0b4:	ldr	x1, [sp, #64]
  43f0b8:	add	x1, x1, x0
  43f0bc:	ldr	x0, [sp, #40]
  43f0c0:	str	x1, [x0]
  43f0c4:	b	43f0e4 <wcrtomb@plt+0x3a3d4>
  43f0c8:	ldr	x0, [sp, #648]
  43f0cc:	add	x0, x0, #0x1
  43f0d0:	str	x0, [sp, #648]
  43f0d4:	ldr	x1, [sp, #648]
  43f0d8:	ldr	x0, [sp, #56]
  43f0dc:	cmp	x1, x0
  43f0e0:	b.cc	43ef8c <wcrtomb@plt+0x3a27c>  // b.lo, b.ul, b.last
  43f0e4:	ldr	x1, [sp, #648]
  43f0e8:	ldr	x0, [sp, #56]
  43f0ec:	cmp	x1, x0
  43f0f0:	b.ne	43f1d4 <wcrtomb@plt+0x3a4c4>  // b.any
  43f0f4:	mov	w1, #0x4                   	// #4
  43f0f8:	ldr	x0, [sp, #72]
  43f0fc:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43f100:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f104:	add	x0, sp, #0x238
  43f108:	mov	x1, x0
  43f10c:	ldr	x0, [sp, #72]
  43f110:	bl	43d404 <wcrtomb@plt+0x386f4>
  43f114:	cmp	w0, #0x0
  43f118:	b.eq	43f124 <wcrtomb@plt+0x3a414>  // b.none
  43f11c:	mov	w0, #0x1                   	// #1
  43f120:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f124:	ldr	x1, [sp, #568]
  43f128:	ldr	x0, [sp, #48]
  43f12c:	ldr	x0, [x0]
  43f130:	mov	w3, #0x0                   	// #0
  43f134:	mov	x2, x0
  43f138:	ldr	x0, [sp, #72]
  43f13c:	bl	43d60c <wcrtomb@plt+0x388fc>
  43f140:	ldr	x1, [sp, #568]
  43f144:	ldr	x0, [sp, #48]
  43f148:	str	x1, [x0]
  43f14c:	ldr	x0, [sp, #568]
  43f150:	ldr	w1, [sp, #36]
  43f154:	orr	w1, w1, #0x2
  43f158:	str	w1, [x0, #16]
  43f15c:	ldr	x19, [sp, #568]
  43f160:	mov	x0, #0x3                   	// #3
  43f164:	bl	4043f0 <malloc@plt>
  43f168:	str	x0, [x19, #24]
  43f16c:	ldr	x0, [sp, #568]
  43f170:	ldr	x0, [x0, #24]
  43f174:	cmp	x0, #0x0
  43f178:	b.ne	43f188 <wcrtomb@plt+0x3a478>  // b.any
  43f17c:	ldr	x0, [sp, #72]
  43f180:	bl	43c980 <wcrtomb@plt+0x37c70>
  43f184:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f188:	ldr	x0, [sp, #568]
  43f18c:	ldr	x0, [x0, #24]
  43f190:	mov	w1, #0x24                  	// #36
  43f194:	strb	w1, [x0]
  43f198:	ldr	x0, [sp, #568]
  43f19c:	ldr	x0, [x0, #24]
  43f1a0:	add	x0, x0, #0x1
  43f1a4:	ldr	x1, [sp, #64]
  43f1a8:	ldrb	w1, [x1]
  43f1ac:	strb	w1, [x0]
  43f1b0:	ldr	x0, [sp, #568]
  43f1b4:	ldr	x0, [x0, #24]
  43f1b8:	add	x0, x0, #0x2
  43f1bc:	strb	wzr, [x0]
  43f1c0:	ldr	x0, [sp, #40]
  43f1c4:	ldr	x1, [sp, #64]
  43f1c8:	str	x1, [x0]
  43f1cc:	mov	w0, #0x0                   	// #0
  43f1d0:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f1d4:	ldr	x0, [sp, #640]
  43f1d8:	cmp	x0, #0x0
  43f1dc:	b.eq	43f210 <wcrtomb@plt+0x3a500>  // b.none
  43f1e0:	ldr	x0, [sp, #640]
  43f1e4:	ldrb	w0, [x0]
  43f1e8:	mov	w1, w0
  43f1ec:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f1f0:	add	x0, x0, #0x9d0
  43f1f4:	bl	404930 <strchr@plt>
  43f1f8:	cmp	x0, #0x0
  43f1fc:	b.ne	43f210 <wcrtomb@plt+0x3a500>  // b.any
  43f200:	mov	w0, #0x5                   	// #5
  43f204:	str	w0, [sp, #636]
  43f208:	str	xzr, [sp, #640]
  43f20c:	b	43f314 <wcrtomb@plt+0x3a604>
  43f210:	add	x0, sp, #0x240
  43f214:	mov	x3, x0
  43f218:	ldr	x2, [sp, #648]
  43f21c:	ldr	x1, [sp, #64]
  43f220:	ldr	x0, [sp, #72]
  43f224:	bl	43e6cc <wcrtomb@plt+0x399bc>
  43f228:	str	w0, [sp, #636]
  43f22c:	ldr	w0, [sp, #636]
  43f230:	cmp	w0, #0x0
  43f234:	b.ne	43f274 <wcrtomb@plt+0x3a564>  // b.any
  43f238:	ldr	x0, [sp, #576]
  43f23c:	cmp	x0, #0x0
  43f240:	b.eq	43f268 <wcrtomb@plt+0x3a558>  // b.none
  43f244:	ldr	x0, [sp, #576]
  43f248:	bl	404620 <strdup@plt>
  43f24c:	str	x0, [sp, #584]
  43f250:	ldr	x0, [sp, #584]
  43f254:	cmp	x0, #0x0
  43f258:	b.ne	43f2bc <wcrtomb@plt+0x3a5ac>  // b.any
  43f25c:	mov	w0, #0x2                   	// #2
  43f260:	str	w0, [sp, #636]
  43f264:	b	43f2bc <wcrtomb@plt+0x3a5ac>
  43f268:	mov	w0, #0x5                   	// #5
  43f26c:	str	w0, [sp, #636]
  43f270:	b	43f2bc <wcrtomb@plt+0x3a5ac>
  43f274:	ldr	x0, [sp, #72]
  43f278:	ldr	w0, [x0, #32]
  43f27c:	and	w0, w0, #0x100000
  43f280:	cmp	w0, #0x0
  43f284:	b.eq	43f2b4 <wcrtomb@plt+0x3a5a4>  // b.none
  43f288:	ldr	x0, [sp, #72]
  43f28c:	ldr	x4, [x0, #144]
  43f290:	ldr	x0, [sp, #72]
  43f294:	ldr	x1, [x0, #152]
  43f298:	add	x0, sp, #0x248
  43f29c:	mov	x3, x1
  43f2a0:	ldr	x2, [sp, #648]
  43f2a4:	ldr	x1, [sp, #64]
  43f2a8:	blr	x4
  43f2ac:	str	w0, [sp, #636]
  43f2b0:	b	43f2bc <wcrtomb@plt+0x3a5ac>
  43f2b4:	mov	w0, #0x5                   	// #5
  43f2b8:	str	w0, [sp, #636]
  43f2bc:	ldr	w0, [sp, #636]
  43f2c0:	cmp	w0, #0x0
  43f2c4:	b.ne	43f314 <wcrtomb@plt+0x3a604>  // b.any
  43f2c8:	ldr	x0, [sp, #584]
  43f2cc:	cmp	x0, #0x0
  43f2d0:	b.eq	43f2e4 <wcrtomb@plt+0x3a5d4>  // b.none
  43f2d4:	ldr	x0, [sp, #584]
  43f2d8:	ldrb	w0, [x0]
  43f2dc:	cmp	w0, #0x0
  43f2e0:	b.ne	43f314 <wcrtomb@plt+0x3a604>  // b.any
  43f2e4:	ldr	x0, [sp, #640]
  43f2e8:	cmp	x0, #0x0
  43f2ec:	b.eq	43f314 <wcrtomb@plt+0x3a604>  // b.none
  43f2f0:	ldr	x0, [sp, #640]
  43f2f4:	sub	x0, x0, #0x1
  43f2f8:	ldrb	w0, [x0]
  43f2fc:	cmp	w0, #0x3a
  43f300:	b.ne	43f314 <wcrtomb@plt+0x3a604>  // b.any
  43f304:	ldr	x0, [sp, #584]
  43f308:	bl	404880 <free@plt>
  43f30c:	mov	w0, #0x5                   	// #5
  43f310:	str	w0, [sp, #636]
  43f314:	ldr	w0, [sp, #636]
  43f318:	cmp	w0, #0x9
  43f31c:	b.eq	43f6e4 <wcrtomb@plt+0x3a9d4>  // b.none
  43f320:	ldr	w0, [sp, #636]
  43f324:	cmp	w0, #0x9
  43f328:	b.gt	43f70c <wcrtomb@plt+0x3a9fc>
  43f32c:	ldr	w0, [sp, #636]
  43f330:	cmp	w0, #0x5
  43f334:	b.eq	43f420 <wcrtomb@plt+0x3a710>  // b.none
  43f338:	ldr	w0, [sp, #636]
  43f33c:	cmp	w0, #0x5
  43f340:	b.gt	43f70c <wcrtomb@plt+0x3a9fc>
  43f344:	ldr	w0, [sp, #636]
  43f348:	cmp	w0, #0x0
  43f34c:	b.eq	43f360 <wcrtomb@plt+0x3a650>  // b.none
  43f350:	ldr	w0, [sp, #636]
  43f354:	cmp	w0, #0x2
  43f358:	b.eq	43f6d8 <wcrtomb@plt+0x3a9c8>  // b.none
  43f35c:	b	43f70c <wcrtomb@plt+0x3a9fc>
  43f360:	ldr	x0, [sp, #640]
  43f364:	cmp	x0, #0x0
  43f368:	b.eq	43f720 <wcrtomb@plt+0x3aa10>  // b.none
  43f36c:	ldr	x0, [sp, #640]
  43f370:	ldrb	w0, [x0]
  43f374:	cmp	w0, #0x2b
  43f378:	b.ne	43f720 <wcrtomb@plt+0x3aa10>  // b.any
  43f37c:	ldr	x0, [sp, #40]
  43f380:	ldr	x1, [x0]
  43f384:	ldr	x0, [sp, #640]
  43f388:	add	x0, x0, #0x1
  43f38c:	str	x0, [sp, #640]
  43f390:	ldr	x0, [sp, #640]
  43f394:	sub	x0, x1, x0
  43f398:	str	x0, [sp, #608]
  43f39c:	ldr	x0, [sp, #608]
  43f3a0:	mov	w2, w0
  43f3a4:	ldr	x0, [sp, #72]
  43f3a8:	ldr	w1, [x0, #32]
  43f3ac:	mov	w0, #0x44                  	// #68
  43f3b0:	and	w1, w1, w0
  43f3b4:	mov	w0, #0x700                 	// #1792
  43f3b8:	movk	w0, #0x40, lsl #16
  43f3bc:	orr	w1, w1, w0
  43f3c0:	add	x0, sp, #0x150
  43f3c4:	mov	w5, #0x1                   	// #1
  43f3c8:	mov	w4, w1
  43f3cc:	mov	w3, w2
  43f3d0:	ldr	x2, [sp, #640]
  43f3d4:	mov	x1, x0
  43f3d8:	ldr	x0, [sp, #72]
  43f3dc:	bl	43ca1c <wcrtomb@plt+0x37d0c>
  43f3e0:	str	w0, [sp, #636]
  43f3e4:	ldr	w0, [sp, #636]
  43f3e8:	cmp	w0, #0x0
  43f3ec:	b.eq	43f3f8 <wcrtomb@plt+0x3a6e8>  // b.none
  43f3f0:	ldr	w0, [sp, #636]
  43f3f4:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f3f8:	ldr	x0, [sp, #584]
  43f3fc:	bl	404880 <free@plt>
  43f400:	ldr	x0, [sp, #344]
  43f404:	ldr	x0, [x0]
  43f408:	str	x0, [sp, #584]
  43f40c:	ldr	x0, [sp, #344]
  43f410:	str	xzr, [x0]
  43f414:	add	x0, sp, #0x150
  43f418:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43f41c:	b	43f720 <wcrtomb@plt+0x3aa10>
  43f420:	ldr	x0, [sp, #640]
  43f424:	cmp	x0, #0x0
  43f428:	b.eq	43f634 <wcrtomb@plt+0x3a924>  // b.none
  43f42c:	ldr	x0, [sp, #640]
  43f430:	ldrb	w0, [x0]
  43f434:	cmp	w0, #0x2d
  43f438:	b.eq	43f44c <wcrtomb@plt+0x3a73c>  // b.none
  43f43c:	ldr	x0, [sp, #640]
  43f440:	ldrb	w0, [x0]
  43f444:	cmp	w0, #0x3d
  43f448:	b.ne	43f514 <wcrtomb@plt+0x3a804>  // b.any
  43f44c:	ldr	x0, [sp, #40]
  43f450:	ldr	x1, [x0]
  43f454:	ldr	x0, [sp, #640]
  43f458:	add	x0, x0, #0x1
  43f45c:	str	x0, [sp, #640]
  43f460:	ldr	x0, [sp, #640]
  43f464:	sub	x0, x1, x0
  43f468:	str	x0, [sp, #616]
  43f46c:	ldr	x0, [sp, #616]
  43f470:	mov	w2, w0
  43f474:	ldr	x0, [sp, #72]
  43f478:	ldr	w1, [x0, #32]
  43f47c:	mov	w0, #0x44                  	// #68
  43f480:	and	w1, w1, w0
  43f484:	mov	w0, #0x700                 	// #1792
  43f488:	movk	w0, #0x40, lsl #16
  43f48c:	orr	w1, w1, w0
  43f490:	add	x0, sp, #0x150
  43f494:	mov	w5, #0x1                   	// #1
  43f498:	mov	w4, w1
  43f49c:	mov	w3, w2
  43f4a0:	ldr	x2, [sp, #640]
  43f4a4:	mov	x1, x0
  43f4a8:	ldr	x0, [sp, #72]
  43f4ac:	bl	43ca1c <wcrtomb@plt+0x37d0c>
  43f4b0:	str	w0, [sp, #636]
  43f4b4:	ldr	w0, [sp, #636]
  43f4b8:	cmp	w0, #0x0
  43f4bc:	b.eq	43f4c8 <wcrtomb@plt+0x3a7b8>  // b.none
  43f4c0:	ldr	w0, [sp, #636]
  43f4c4:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f4c8:	ldr	x0, [sp, #344]
  43f4cc:	ldr	x0, [x0]
  43f4d0:	str	x0, [sp, #584]
  43f4d4:	ldr	x0, [sp, #344]
  43f4d8:	str	xzr, [x0]
  43f4dc:	add	x0, sp, #0x150
  43f4e0:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43f4e4:	ldr	x0, [sp, #640]
  43f4e8:	sub	x0, x0, #0x1
  43f4ec:	ldrb	w0, [x0]
  43f4f0:	cmp	w0, #0x3d
  43f4f4:	b.ne	43f6d4 <wcrtomb@plt+0x3a9c4>  // b.any
  43f4f8:	ldr	x0, [sp, #584]
  43f4fc:	mov	x3, x0
  43f500:	ldr	x2, [sp, #648]
  43f504:	ldr	x1, [sp, #64]
  43f508:	ldr	x0, [sp, #72]
  43f50c:	bl	43e910 <wcrtomb@plt+0x39c00>
  43f510:	b	43f6d4 <wcrtomb@plt+0x3a9c4>
  43f514:	ldr	x0, [sp, #640]
  43f518:	ldrb	w0, [x0]
  43f51c:	cmp	w0, #0x3f
  43f520:	b.ne	43f62c <wcrtomb@plt+0x3a91c>  // b.any
  43f524:	ldr	x0, [sp, #40]
  43f528:	ldr	x1, [x0]
  43f52c:	ldr	x0, [sp, #640]
  43f530:	add	x0, x0, #0x1
  43f534:	str	x0, [sp, #640]
  43f538:	ldr	x0, [sp, #640]
  43f53c:	sub	x0, x1, x0
  43f540:	str	x0, [sp, #616]
  43f544:	ldr	x0, [sp, #616]
  43f548:	cmp	x0, #0x0
  43f54c:	b.ne	43f574 <wcrtomb@plt+0x3a864>  // b.any
  43f550:	ldr	x0, [sp, #72]
  43f554:	ldr	x19, [x0, #96]
  43f558:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f55c:	add	x0, x0, #0x9d8
  43f560:	bl	404c60 <gettext@plt>
  43f564:	ldr	x1, [sp, #648]
  43f568:	ldr	x2, [sp, #64]
  43f56c:	blr	x19
  43f570:	b	43f62c <wcrtomb@plt+0x3a91c>
  43f574:	ldr	x0, [sp, #616]
  43f578:	mov	w2, w0
  43f57c:	ldr	x0, [sp, #72]
  43f580:	ldr	w1, [x0, #32]
  43f584:	mov	w0, #0x44                  	// #68
  43f588:	and	w1, w1, w0
  43f58c:	mov	w0, #0x700                 	// #1792
  43f590:	movk	w0, #0x40, lsl #16
  43f594:	orr	w1, w1, w0
  43f598:	add	x0, sp, #0x150
  43f59c:	mov	w5, #0x1                   	// #1
  43f5a0:	mov	w4, w1
  43f5a4:	mov	w3, w2
  43f5a8:	ldr	x2, [sp, #640]
  43f5ac:	mov	x1, x0
  43f5b0:	ldr	x0, [sp, #72]
  43f5b4:	bl	43ca1c <wcrtomb@plt+0x37d0c>
  43f5b8:	str	w0, [sp, #636]
  43f5bc:	ldr	w0, [sp, #636]
  43f5c0:	cmp	w0, #0x0
  43f5c4:	b.ne	43f5f8 <wcrtomb@plt+0x3a8e8>  // b.any
  43f5c8:	ldr	x0, [sp, #72]
  43f5cc:	ldr	x4, [x0, #96]
  43f5d0:	ldr	x0, [sp, #648]
  43f5d4:	mov	w1, w0
  43f5d8:	ldr	x0, [sp, #344]
  43f5dc:	ldr	x0, [x0]
  43f5e0:	mov	x3, x0
  43f5e4:	ldr	x2, [sp, #64]
  43f5e8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f5ec:	add	x0, x0, #0x9f8
  43f5f0:	blr	x4
  43f5f4:	b	43f624 <wcrtomb@plt+0x3a914>
  43f5f8:	ldr	x0, [sp, #72]
  43f5fc:	ldr	x5, [x0, #96]
  43f600:	ldr	x0, [sp, #648]
  43f604:	mov	w1, w0
  43f608:	ldr	x0, [sp, #616]
  43f60c:	ldr	x4, [sp, #640]
  43f610:	mov	w3, w0
  43f614:	ldr	x2, [sp, #64]
  43f618:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f61c:	add	x0, x0, #0xa08
  43f620:	blr	x5
  43f624:	add	x0, sp, #0x150
  43f628:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43f62c:	str	xzr, [sp, #584]
  43f630:	b	43f728 <wcrtomb@plt+0x3aa18>
  43f634:	ldr	x0, [sp, #72]
  43f638:	ldr	w0, [x0, #32]
  43f63c:	and	w0, w0, #0x20
  43f640:	cmp	w0, #0x0
  43f644:	b.eq	43f65c <wcrtomb@plt+0x3a94c>  // b.none
  43f648:	mov	w1, #0x5                   	// #5
  43f64c:	ldr	x0, [sp, #72]
  43f650:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43f654:	mov	w0, #0x1                   	// #1
  43f658:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f65c:	ldr	x0, [sp, #72]
  43f660:	ldr	w0, [x0, #32]
  43f664:	and	w0, w0, #0x1000000
  43f668:	cmp	w0, #0x0
  43f66c:	b.eq	43f690 <wcrtomb@plt+0x3a980>  // b.none
  43f670:	ldr	x0, [sp, #72]
  43f674:	ldr	x19, [x0, #96]
  43f678:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f67c:	add	x0, x0, #0xa18
  43f680:	bl	404c60 <gettext@plt>
  43f684:	ldr	x1, [sp, #648]
  43f688:	ldr	x2, [sp, #64]
  43f68c:	blr	x19
  43f690:	ldr	x0, [sp, #72]
  43f694:	ldr	w0, [x0, #32]
  43f698:	and	w0, w0, #0x800000
  43f69c:	cmp	w0, #0x0
  43f6a0:	b.eq	43f6ac <wcrtomb@plt+0x3a99c>  // b.none
  43f6a4:	str	xzr, [sp, #584]
  43f6a8:	b	43f728 <wcrtomb@plt+0x3aa18>
  43f6ac:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43f6b0:	add	x0, x0, #0x960
  43f6b4:	bl	404620 <strdup@plt>
  43f6b8:	str	x0, [sp, #584]
  43f6bc:	ldr	x0, [sp, #584]
  43f6c0:	cmp	x0, #0x0
  43f6c4:	b.ne	43f728 <wcrtomb@plt+0x3aa18>  // b.any
  43f6c8:	ldr	x0, [sp, #72]
  43f6cc:	bl	43c980 <wcrtomb@plt+0x37c70>
  43f6d0:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f6d4:	b	43f728 <wcrtomb@plt+0x3aa18>
  43f6d8:	ldr	x0, [sp, #72]
  43f6dc:	bl	43c980 <wcrtomb@plt+0x37c70>
  43f6e0:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f6e4:	ldr	x0, [sp, #72]
  43f6e8:	ldr	w0, [x0, #192]
  43f6ec:	cmp	w0, #0x9
  43f6f0:	b.ne	43f700 <wcrtomb@plt+0x3a9f0>  // b.any
  43f6f4:	ldr	x0, [sp, #72]
  43f6f8:	ldr	x0, [x0, #200]
  43f6fc:	bl	404880 <free@plt>
  43f700:	ldr	x1, [sp, #584]
  43f704:	ldr	x0, [sp, #72]
  43f708:	str	x1, [x0, #200]
  43f70c:	ldr	w1, [sp, #636]
  43f710:	ldr	x0, [sp, #72]
  43f714:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43f718:	mov	w0, #0x1                   	// #1
  43f71c:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f720:	nop
  43f724:	b	43f72c <wcrtomb@plt+0x3aa1c>
  43f728:	nop
  43f72c:	ldr	x0, [sp, #584]
  43f730:	cmp	x0, #0x0
  43f734:	b.eq	43f904 <wcrtomb@plt+0x3abf4>  // b.none
  43f738:	ldr	w0, [sp, #36]
  43f73c:	and	w0, w0, #0x4
  43f740:	cmp	w0, #0x0
  43f744:	b.eq	43f7bc <wcrtomb@plt+0x3aaac>  // b.none
  43f748:	add	x0, sp, #0x238
  43f74c:	mov	x1, x0
  43f750:	ldr	x0, [sp, #72]
  43f754:	bl	43d404 <wcrtomb@plt+0x386f4>
  43f758:	cmp	w0, #0x0
  43f75c:	b.eq	43f770 <wcrtomb@plt+0x3aa60>  // b.none
  43f760:	ldr	x0, [sp, #584]
  43f764:	bl	404880 <free@plt>
  43f768:	mov	w0, #0x1                   	// #1
  43f76c:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f770:	ldr	x1, [sp, #568]
  43f774:	ldr	x0, [sp, #48]
  43f778:	ldr	x0, [x0]
  43f77c:	mov	w3, #0x0                   	// #0
  43f780:	mov	x2, x0
  43f784:	ldr	x0, [sp, #72]
  43f788:	bl	43d60c <wcrtomb@plt+0x388fc>
  43f78c:	ldr	x1, [sp, #568]
  43f790:	ldr	x0, [sp, #48]
  43f794:	str	x1, [x0]
  43f798:	ldr	x0, [sp, #568]
  43f79c:	ldr	w2, [sp, #36]
  43f7a0:	mov	w1, #0xa                   	// #10
  43f7a4:	orr	w1, w2, w1
  43f7a8:	str	w1, [x0, #16]
  43f7ac:	ldr	x0, [sp, #568]
  43f7b0:	ldr	x1, [sp, #584]
  43f7b4:	str	x1, [x0, #24]
  43f7b8:	b	43fa3c <wcrtomb@plt+0x3ad2c>
  43f7bc:	ldr	x0, [sp, #584]
  43f7c0:	ldrb	w0, [x0]
  43f7c4:	cmp	w0, #0x0
  43f7c8:	b.ne	43f82c <wcrtomb@plt+0x3ab1c>  // b.any
  43f7cc:	ldr	x0, [sp, #584]
  43f7d0:	bl	404880 <free@plt>
  43f7d4:	add	x0, sp, #0x238
  43f7d8:	mov	x1, x0
  43f7dc:	ldr	x0, [sp, #72]
  43f7e0:	bl	43d404 <wcrtomb@plt+0x386f4>
  43f7e4:	cmp	w0, #0x0
  43f7e8:	b.eq	43f7f4 <wcrtomb@plt+0x3aae4>  // b.none
  43f7ec:	mov	w0, #0x1                   	// #1
  43f7f0:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f7f4:	ldr	x1, [sp, #568]
  43f7f8:	ldr	x0, [sp, #48]
  43f7fc:	ldr	x0, [x0]
  43f800:	mov	w3, #0x0                   	// #0
  43f804:	mov	x2, x0
  43f808:	ldr	x0, [sp, #72]
  43f80c:	bl	43d60c <wcrtomb@plt+0x388fc>
  43f810:	ldr	x1, [sp, #568]
  43f814:	ldr	x0, [sp, #48]
  43f818:	str	x1, [x0]
  43f81c:	ldr	x0, [sp, #568]
  43f820:	mov	w1, #0x1                   	// #1
  43f824:	str	w1, [x0, #16]
  43f828:	b	43fa3c <wcrtomb@plt+0x3ad2c>
  43f82c:	ldr	x19, [sp, #584]
  43f830:	ldr	x0, [sp, #584]
  43f834:	bl	4040b0 <strlen@plt>
  43f838:	mov	w2, w0
  43f83c:	ldr	x0, [sp, #72]
  43f840:	ldr	w0, [x0, #32]
  43f844:	and	w0, w0, #0x1000
  43f848:	cmp	w0, #0x0
  43f84c:	b.ne	43f864 <wcrtomb@plt+0x3ab54>  // b.any
  43f850:	ldr	x0, [sp, #72]
  43f854:	ldr	w0, [x0, #36]
  43f858:	and	w0, w0, #0x80
  43f85c:	cmp	w0, #0x0
  43f860:	b.eq	43f86c <wcrtomb@plt+0x3ab5c>  // b.none
  43f864:	mov	w0, #0x1644                	// #5700
  43f868:	b	43f870 <wcrtomb@plt+0x3ab60>
  43f86c:	mov	w0, #0x644                 	// #1604
  43f870:	add	x1, sp, #0x58
  43f874:	mov	w5, #0x0                   	// #0
  43f878:	mov	w4, w0
  43f87c:	mov	w3, w2
  43f880:	mov	x2, x19
  43f884:	ldr	x0, [sp, #72]
  43f888:	bl	43ca1c <wcrtomb@plt+0x37d0c>
  43f88c:	str	w0, [sp, #596]
  43f890:	ldr	x0, [sp, #584]
  43f894:	bl	404880 <free@plt>
  43f898:	ldr	w0, [sp, #596]
  43f89c:	cmp	w0, #0x0
  43f8a0:	b.eq	43f8c4 <wcrtomb@plt+0x3abb4>  // b.none
  43f8a4:	add	x0, sp, #0x58
  43f8a8:	mov	x1, x0
  43f8ac:	ldr	x0, [sp, #72]
  43f8b0:	bl	43cbfc <wcrtomb@plt+0x37eec>
  43f8b4:	add	x0, sp, #0x58
  43f8b8:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43f8bc:	mov	w0, #0x1                   	// #1
  43f8c0:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f8c4:	ldr	x1, [sp, #296]
  43f8c8:	ldr	x0, [sp, #48]
  43f8cc:	ldr	x0, [x0]
  43f8d0:	mov	w3, #0x0                   	// #0
  43f8d4:	mov	x2, x0
  43f8d8:	ldr	x0, [sp, #72]
  43f8dc:	bl	43d60c <wcrtomb@plt+0x388fc>
  43f8e0:	ldr	x1, [sp, #304]
  43f8e4:	ldr	x0, [sp, #48]
  43f8e8:	str	x1, [x0]
  43f8ec:	str	xzr, [sp, #304]
  43f8f0:	ldr	x0, [sp, #304]
  43f8f4:	str	x0, [sp, #296]
  43f8f8:	add	x0, sp, #0x58
  43f8fc:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43f900:	b	43fa3c <wcrtomb@plt+0x3ad2c>
  43f904:	ldr	x0, [sp, #72]
  43f908:	ldr	w0, [x0, #32]
  43f90c:	and	w0, w0, #0x800000
  43f910:	cmp	w0, #0x0
  43f914:	b.eq	43f9e8 <wcrtomb@plt+0x3acd8>  // b.none
  43f918:	ldr	x0, [sp, #40]
  43f91c:	ldr	x1, [x0]
  43f920:	ldr	x0, [sp, #624]
  43f924:	sub	x0, x1, x0
  43f928:	add	x0, x0, #0x1
  43f92c:	str	x0, [sp, #600]
  43f930:	add	x0, sp, #0x238
  43f934:	mov	x1, x0
  43f938:	ldr	x0, [sp, #72]
  43f93c:	bl	43d404 <wcrtomb@plt+0x386f4>
  43f940:	cmp	w0, #0x0
  43f944:	b.eq	43f950 <wcrtomb@plt+0x3ac40>  // b.none
  43f948:	mov	w0, #0x1                   	// #1
  43f94c:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f950:	ldr	x1, [sp, #568]
  43f954:	ldr	x0, [sp, #48]
  43f958:	ldr	x0, [x0]
  43f95c:	mov	w3, #0x0                   	// #0
  43f960:	mov	x2, x0
  43f964:	ldr	x0, [sp, #72]
  43f968:	bl	43d60c <wcrtomb@plt+0x388fc>
  43f96c:	ldr	x1, [sp, #568]
  43f970:	ldr	x0, [sp, #48]
  43f974:	str	x1, [x0]
  43f978:	ldr	x0, [sp, #568]
  43f97c:	ldr	w2, [sp, #36]
  43f980:	mov	w1, #0xa                   	// #10
  43f984:	orr	w1, w2, w1
  43f988:	str	w1, [x0, #16]
  43f98c:	ldr	x0, [sp, #600]
  43f990:	add	x0, x0, #0x1
  43f994:	ldr	x19, [sp, #568]
  43f998:	bl	4043f0 <malloc@plt>
  43f99c:	str	x0, [x19, #24]
  43f9a0:	ldr	x0, [sp, #568]
  43f9a4:	ldr	x0, [x0, #24]
  43f9a8:	cmp	x0, #0x0
  43f9ac:	b.ne	43f9bc <wcrtomb@plt+0x3acac>  // b.any
  43f9b0:	ldr	x0, [sp, #72]
  43f9b4:	bl	43c980 <wcrtomb@plt+0x37c70>
  43f9b8:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43f9bc:	ldr	x0, [sp, #568]
  43f9c0:	ldr	x0, [x0, #24]
  43f9c4:	ldr	x2, [sp, #600]
  43f9c8:	ldr	x1, [sp, #624]
  43f9cc:	bl	404020 <memcpy@plt>
  43f9d0:	ldr	x0, [sp, #568]
  43f9d4:	ldr	x1, [x0, #24]
  43f9d8:	ldr	x0, [sp, #600]
  43f9dc:	add	x0, x1, x0
  43f9e0:	strb	wzr, [x0]
  43f9e4:	b	43fa3c <wcrtomb@plt+0x3ad2c>
  43f9e8:	add	x0, sp, #0x238
  43f9ec:	mov	x1, x0
  43f9f0:	ldr	x0, [sp, #72]
  43f9f4:	bl	43d404 <wcrtomb@plt+0x386f4>
  43f9f8:	cmp	w0, #0x0
  43f9fc:	b.eq	43fa08 <wcrtomb@plt+0x3acf8>  // b.none
  43fa00:	mov	w0, #0x1                   	// #1
  43fa04:	b	43fa40 <wcrtomb@plt+0x3ad30>
  43fa08:	ldr	x1, [sp, #568]
  43fa0c:	ldr	x0, [sp, #48]
  43fa10:	ldr	x0, [x0]
  43fa14:	mov	w3, #0x0                   	// #0
  43fa18:	mov	x2, x0
  43fa1c:	ldr	x0, [sp, #72]
  43fa20:	bl	43d60c <wcrtomb@plt+0x388fc>
  43fa24:	ldr	x1, [sp, #568]
  43fa28:	ldr	x0, [sp, #48]
  43fa2c:	str	x1, [x0]
  43fa30:	ldr	x0, [sp, #568]
  43fa34:	mov	w1, #0x1                   	// #1
  43fa38:	str	w1, [x0, #16]
  43fa3c:	mov	w0, #0x0                   	// #0
  43fa40:	ldr	x19, [sp, #16]
  43fa44:	ldp	x29, x30, [sp]
  43fa48:	add	sp, sp, #0x290
  43fa4c:	ret
  43fa50:	sub	sp, sp, #0x10
  43fa54:	str	w0, [sp, #12]
  43fa58:	ldr	w0, [sp, #12]
  43fa5c:	cmp	w0, #0x7b
  43fa60:	b.eq	43faa0 <wcrtomb@plt+0x3ad90>  // b.none
  43fa64:	ldr	w0, [sp, #12]
  43fa68:	cmp	w0, #0x40
  43fa6c:	b.ls	43fa7c <wcrtomb@plt+0x3ad6c>  // b.plast
  43fa70:	ldr	w0, [sp, #12]
  43fa74:	cmp	w0, #0x5a
  43fa78:	b.ls	43faa0 <wcrtomb@plt+0x3ad90>  // b.plast
  43fa7c:	ldr	w0, [sp, #12]
  43fa80:	cmp	w0, #0x60
  43fa84:	b.ls	43fa94 <wcrtomb@plt+0x3ad84>  // b.plast
  43fa88:	ldr	w0, [sp, #12]
  43fa8c:	cmp	w0, #0x7a
  43fa90:	b.ls	43faa0 <wcrtomb@plt+0x3ad90>  // b.plast
  43fa94:	ldr	w0, [sp, #12]
  43fa98:	cmp	w0, #0x5f
  43fa9c:	b.ne	43faa8 <wcrtomb@plt+0x3ad98>  // b.any
  43faa0:	mov	w0, #0x1                   	// #1
  43faa4:	b	43faac <wcrtomb@plt+0x3ad9c>
  43faa8:	mov	w0, #0x0                   	// #0
  43faac:	add	sp, sp, #0x10
  43fab0:	ret
  43fab4:	stp	x29, x30, [sp, #-112]!
  43fab8:	mov	x29, sp
  43fabc:	str	x0, [sp, #40]
  43fac0:	str	x1, [sp, #32]
  43fac4:	str	x2, [sp, #24]
  43fac8:	str	x3, [sp, #16]
  43facc:	ldr	x1, [sp, #32]
  43fad0:	ldr	x0, [sp, #40]
  43fad4:	bl	43d334 <wcrtomb@plt+0x38624>
  43fad8:	str	x0, [sp, #104]
  43fadc:	ldr	x0, [sp, #32]
  43fae0:	bl	43d39c <wcrtomb@plt+0x3868c>
  43fae4:	str	x0, [sp, #88]
  43fae8:	ldr	x1, [sp, #104]
  43faec:	ldr	x0, [sp, #88]
  43faf0:	add	x0, x1, x0
  43faf4:	str	x0, [sp, #80]
  43faf8:	str	xzr, [sp, #96]
  43fafc:	ldr	x0, [sp, #32]
  43fb00:	str	x0, [sp, #56]
  43fb04:	ldr	x0, [sp, #104]
  43fb08:	str	x0, [sp, #64]
  43fb0c:	b	43fc58 <wcrtomb@plt+0x3af48>
  43fb10:	ldr	x0, [sp, #64]
  43fb14:	ldrb	w0, [x0]
  43fb18:	cmp	w0, #0x5c
  43fb1c:	b.ne	43fb30 <wcrtomb@plt+0x3ae20>  // b.any
  43fb20:	ldr	x0, [sp, #64]
  43fb24:	add	x0, x0, #0x1
  43fb28:	str	x0, [sp, #64]
  43fb2c:	b	43fc4c <wcrtomb@plt+0x3af3c>
  43fb30:	ldr	x0, [sp, #64]
  43fb34:	ldrb	w0, [x0]
  43fb38:	cmp	w0, #0x24
  43fb3c:	b.ne	43fc4c <wcrtomb@plt+0x3af3c>  // b.any
  43fb40:	ldr	x0, [sp, #64]
  43fb44:	add	x0, x0, #0x1
  43fb48:	ldrb	w0, [x0]
  43fb4c:	ldr	x1, [sp, #24]
  43fb50:	blr	x1
  43fb54:	cmp	w0, #0x0
  43fb58:	b.eq	43fc4c <wcrtomb@plt+0x3af3c>  // b.none
  43fb5c:	ldr	x1, [sp, #64]
  43fb60:	ldr	x0, [sp, #104]
  43fb64:	sub	x0, x1, x0
  43fb68:	str	x0, [sp, #72]
  43fb6c:	ldr	x0, [sp, #56]
  43fb70:	ldr	x1, [sp, #32]
  43fb74:	cmp	x1, x0
  43fb78:	b.eq	43fb90 <wcrtomb@plt+0x3ae80>  // b.none
  43fb7c:	ldr	x0, [sp, #56]
  43fb80:	ldr	w1, [x0, #16]
  43fb84:	ldr	x0, [sp, #56]
  43fb88:	orr	w1, w1, #0x10
  43fb8c:	str	w1, [x0, #16]
  43fb90:	add	x0, sp, #0x38
  43fb94:	mov	w5, #0x10                  	// #16
  43fb98:	ldr	x4, [sp, #72]
  43fb9c:	ldr	x3, [sp, #96]
  43fba0:	ldr	x2, [sp, #32]
  43fba4:	mov	x1, x0
  43fba8:	ldr	x0, [sp, #40]
  43fbac:	bl	43e3a8 <wcrtomb@plt+0x39698>
  43fbb0:	cmp	w0, #0x0
  43fbb4:	b.eq	43fbc0 <wcrtomb@plt+0x3aeb0>  // b.none
  43fbb8:	mov	w0, #0x1                   	// #1
  43fbbc:	b	43fd18 <wcrtomb@plt+0x3b008>
  43fbc0:	ldr	x0, [sp, #64]
  43fbc4:	add	x0, x0, #0x1
  43fbc8:	str	x0, [sp, #64]
  43fbcc:	ldr	x7, [sp, #64]
  43fbd0:	ldr	x1, [sp, #88]
  43fbd4:	ldr	x0, [sp, #72]
  43fbd8:	sub	x2, x1, x0
  43fbdc:	ldr	x0, [sp, #32]
  43fbe0:	ldr	w1, [x0, #16]
  43fbe4:	mov	w0, #0x14                  	// #20
  43fbe8:	and	w3, w1, w0
  43fbec:	add	x1, sp, #0x40
  43fbf0:	add	x0, sp, #0x38
  43fbf4:	ldr	x6, [sp, #16]
  43fbf8:	mov	w5, w3
  43fbfc:	mov	x4, x1
  43fc00:	mov	x3, x0
  43fc04:	mov	x1, x7
  43fc08:	ldr	x0, [sp, #40]
  43fc0c:	blr	x6
  43fc10:	cmp	w0, #0x0
  43fc14:	b.eq	43fc20 <wcrtomb@plt+0x3af10>  // b.none
  43fc18:	mov	w0, #0x1                   	// #1
  43fc1c:	b	43fd18 <wcrtomb@plt+0x3b008>
  43fc20:	ldr	x1, [sp, #64]
  43fc24:	ldr	x0, [sp, #104]
  43fc28:	sub	x0, x1, x0
  43fc2c:	mov	x1, x0
  43fc30:	ldr	x0, [sp, #96]
  43fc34:	add	x0, x1, x0
  43fc38:	add	x0, x0, #0x1
  43fc3c:	str	x0, [sp, #96]
  43fc40:	ldr	x0, [sp, #64]
  43fc44:	add	x0, x0, #0x1
  43fc48:	str	x0, [sp, #104]
  43fc4c:	ldr	x0, [sp, #64]
  43fc50:	add	x0, x0, #0x1
  43fc54:	str	x0, [sp, #64]
  43fc58:	ldr	x0, [sp, #64]
  43fc5c:	ldr	x1, [sp, #80]
  43fc60:	cmp	x1, x0
  43fc64:	b.hi	43fb10 <wcrtomb@plt+0x3ae00>  // b.pmore
  43fc68:	ldr	x0, [sp, #64]
  43fc6c:	ldr	x1, [sp, #104]
  43fc70:	cmp	x1, x0
  43fc74:	b.cs	43fcf0 <wcrtomb@plt+0x3afe0>  // b.hs, b.nlast
  43fc78:	ldr	x0, [sp, #56]
  43fc7c:	ldr	x1, [sp, #32]
  43fc80:	cmp	x1, x0
  43fc84:	b.eq	43fc9c <wcrtomb@plt+0x3af8c>  // b.none
  43fc88:	ldr	x0, [sp, #56]
  43fc8c:	ldr	w1, [x0, #16]
  43fc90:	ldr	x0, [sp, #56]
  43fc94:	orr	w1, w1, #0x10
  43fc98:	str	w1, [x0, #16]
  43fc9c:	ldr	x1, [sp, #64]
  43fca0:	ldr	x0, [sp, #104]
  43fca4:	sub	x0, x1, x0
  43fca8:	mov	x2, x0
  43fcac:	ldr	x0, [sp, #32]
  43fcb0:	ldr	w0, [x0, #16]
  43fcb4:	mov	w1, w0
  43fcb8:	mov	w0, #0x14                  	// #20
  43fcbc:	and	w1, w1, w0
  43fcc0:	add	x0, sp, #0x38
  43fcc4:	mov	w5, w1
  43fcc8:	mov	x4, x2
  43fccc:	ldr	x3, [sp, #96]
  43fcd0:	ldr	x2, [sp, #32]
  43fcd4:	mov	x1, x0
  43fcd8:	ldr	x0, [sp, #40]
  43fcdc:	bl	43e3a8 <wcrtomb@plt+0x39698>
  43fce0:	cmp	w0, #0x0
  43fce4:	b.eq	43fcf0 <wcrtomb@plt+0x3afe0>  // b.none
  43fce8:	mov	w0, #0x1                   	// #1
  43fcec:	b	43fd18 <wcrtomb@plt+0x3b008>
  43fcf0:	ldr	x0, [sp, #56]
  43fcf4:	ldr	x1, [sp, #32]
  43fcf8:	cmp	x1, x0
  43fcfc:	b.eq	43fd14 <wcrtomb@plt+0x3b004>  // b.none
  43fd00:	ldr	x1, [sp, #32]
  43fd04:	ldr	x0, [sp, #40]
  43fd08:	bl	43d500 <wcrtomb@plt+0x387f0>
  43fd0c:	ldr	x0, [sp, #32]
  43fd10:	bl	43d454 <wcrtomb@plt+0x38744>
  43fd14:	mov	w0, #0x0                   	// #0
  43fd18:	ldp	x29, x30, [sp], #112
  43fd1c:	ret
  43fd20:	stp	x29, x30, [sp, #-48]!
  43fd24:	mov	x29, sp
  43fd28:	str	x0, [sp, #24]
  43fd2c:	ldr	x0, [sp, #24]
  43fd30:	ldr	x0, [x0, #208]
  43fd34:	str	x0, [sp, #40]
  43fd38:	b	43fdb8 <wcrtomb@plt+0x3b0a8>
  43fd3c:	ldr	x0, [sp, #40]
  43fd40:	ldr	x0, [x0, #8]
  43fd44:	str	x0, [sp, #32]
  43fd48:	ldr	x0, [sp, #40]
  43fd4c:	ldr	w0, [x0, #16]
  43fd50:	and	w0, w0, #0x40
  43fd54:	cmp	w0, #0x0
  43fd58:	b.eq	43fd88 <wcrtomb@plt+0x3b078>  // b.none
  43fd5c:	ldr	x0, [sp, #40]
  43fd60:	ldr	x0, [x0]
  43fd64:	cmp	x0, #0x0
  43fd68:	b.eq	43fd88 <wcrtomb@plt+0x3b078>  // b.none
  43fd6c:	ldr	x0, [sp, #40]
  43fd70:	ldr	x0, [x0]
  43fd74:	ldr	w1, [x0, #16]
  43fd78:	ldr	x0, [sp, #40]
  43fd7c:	ldr	x0, [x0]
  43fd80:	and	w1, w1, #0xffffffef
  43fd84:	str	w1, [x0, #16]
  43fd88:	ldr	x0, [sp, #40]
  43fd8c:	ldr	w0, [x0, #16]
  43fd90:	and	w0, w0, #0x1
  43fd94:	cmp	w0, #0x0
  43fd98:	b.eq	43fdb0 <wcrtomb@plt+0x3b0a0>  // b.none
  43fd9c:	ldr	x1, [sp, #40]
  43fda0:	ldr	x0, [sp, #24]
  43fda4:	bl	43d500 <wcrtomb@plt+0x387f0>
  43fda8:	ldr	x0, [sp, #40]
  43fdac:	bl	43d454 <wcrtomb@plt+0x38744>
  43fdb0:	ldr	x0, [sp, #32]
  43fdb4:	str	x0, [sp, #40]
  43fdb8:	ldr	x0, [sp, #40]
  43fdbc:	cmp	x0, #0x0
  43fdc0:	b.ne	43fd3c <wcrtomb@plt+0x3b02c>  // b.any
  43fdc4:	nop
  43fdc8:	nop
  43fdcc:	ldp	x29, x30, [sp], #48
  43fdd0:	ret
  43fdd4:	stp	x29, x30, [sp, #-48]!
  43fdd8:	mov	x29, sp
  43fddc:	str	x0, [sp, #24]
  43fde0:	ldr	x0, [sp, #24]
  43fde4:	ldr	x0, [x0, #208]
  43fde8:	str	x0, [sp, #40]
  43fdec:	b	43fe48 <wcrtomb@plt+0x3b138>
  43fdf0:	ldr	x0, [sp, #40]
  43fdf4:	ldr	x0, [x0, #8]
  43fdf8:	str	x0, [sp, #32]
  43fdfc:	ldr	x0, [sp, #40]
  43fe00:	ldr	w1, [x0, #16]
  43fe04:	mov	w0, #0x48                  	// #72
  43fe08:	and	w0, w1, w0
  43fe0c:	cmp	w0, #0x0
  43fe10:	b.ne	43fe40 <wcrtomb@plt+0x3b130>  // b.any
  43fe14:	adrp	x0, 43e000 <wcrtomb@plt+0x392f0>
  43fe18:	add	x3, x0, #0xdd8
  43fe1c:	adrp	x0, 43f000 <wcrtomb@plt+0x3a2f0>
  43fe20:	add	x2, x0, #0xa50
  43fe24:	ldr	x1, [sp, #40]
  43fe28:	ldr	x0, [sp, #24]
  43fe2c:	bl	43fab4 <wcrtomb@plt+0x3ada4>
  43fe30:	cmp	w0, #0x0
  43fe34:	b.eq	43fe40 <wcrtomb@plt+0x3b130>  // b.none
  43fe38:	mov	w0, #0x1                   	// #1
  43fe3c:	b	43fe60 <wcrtomb@plt+0x3b150>
  43fe40:	ldr	x0, [sp, #32]
  43fe44:	str	x0, [sp, #40]
  43fe48:	ldr	x0, [sp, #40]
  43fe4c:	cmp	x0, #0x0
  43fe50:	b.ne	43fdf0 <wcrtomb@plt+0x3b0e0>  // b.any
  43fe54:	ldr	x0, [sp, #24]
  43fe58:	bl	43fd20 <wcrtomb@plt+0x3b010>
  43fe5c:	mov	w0, #0x0                   	// #0
  43fe60:	ldp	x29, x30, [sp], #48
  43fe64:	ret
  43fe68:	sub	sp, sp, #0x10
  43fe6c:	str	w0, [sp, #12]
  43fe70:	ldr	w0, [sp, #12]
  43fe74:	cmp	w0, #0x28
  43fe78:	cset	w0, eq  // eq = none
  43fe7c:	and	w0, w0, #0xff
  43fe80:	add	sp, sp, #0x10
  43fe84:	ret
  43fe88:	stp	x29, x30, [sp, #-352]!
  43fe8c:	mov	x29, sp
  43fe90:	str	x19, [sp, #16]
  43fe94:	str	x0, [sp, #72]
  43fe98:	str	x1, [sp, #64]
  43fe9c:	str	x2, [sp, #56]
  43fea0:	str	x3, [sp, #48]
  43fea4:	str	x4, [sp, #40]
  43fea8:	str	w5, [sp, #36]
  43feac:	ldr	x0, [sp, #64]
  43feb0:	add	x0, x0, #0x1
  43feb4:	str	x0, [sp, #64]
  43feb8:	ldr	x0, [sp, #56]
  43febc:	sub	x0, x0, #0x1
  43fec0:	str	x0, [sp, #56]
  43fec4:	add	x1, sp, #0x150
  43fec8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  43fecc:	add	x4, x0, #0xa40
  43fed0:	mov	x3, x1
  43fed4:	ldr	x2, [sp, #56]
  43fed8:	mov	x1, #0x0                   	// #0
  43fedc:	ldr	x0, [sp, #64]
  43fee0:	bl	43e50c <wcrtomb@plt+0x397fc>
  43fee4:	cmp	w0, #0x0
  43fee8:	b.eq	43ff00 <wcrtomb@plt+0x3b1f0>  // b.none
  43feec:	mov	w1, #0x7                   	// #7
  43fef0:	ldr	x0, [sp, #72]
  43fef4:	bl	43c93c <wcrtomb@plt+0x37c2c>
  43fef8:	mov	w0, #0x1                   	// #1
  43fefc:	b	440284 <wcrtomb@plt+0x3b574>
  43ff00:	ldr	x0, [sp, #336]
  43ff04:	ldr	x1, [sp, #64]
  43ff08:	add	x1, x1, x0
  43ff0c:	ldr	x0, [sp, #40]
  43ff10:	str	x1, [x0]
  43ff14:	ldr	x0, [sp, #72]
  43ff18:	ldr	w0, [x0, #36]
  43ff1c:	and	w0, w0, #0x8
  43ff20:	cmp	w0, #0x0
  43ff24:	b.eq	43ffc0 <wcrtomb@plt+0x3b2b0>  // b.none
  43ff28:	ldr	x0, [sp, #336]
  43ff2c:	mov	w1, w0
  43ff30:	add	x0, sp, #0x58
  43ff34:	mov	w5, #0x1                   	// #1
  43ff38:	mov	w4, #0x700                 	// #1792
  43ff3c:	mov	w3, w1
  43ff40:	ldr	x2, [sp, #64]
  43ff44:	mov	x1, x0
  43ff48:	ldr	x0, [sp, #72]
  43ff4c:	bl	43ca1c <wcrtomb@plt+0x37d0c>
  43ff50:	str	w0, [sp, #348]
  43ff54:	ldr	w0, [sp, #348]
  43ff58:	cmp	w0, #0x0
  43ff5c:	b.eq	43ff80 <wcrtomb@plt+0x3b270>  // b.none
  43ff60:	add	x0, sp, #0x58
  43ff64:	mov	x1, x0
  43ff68:	ldr	x0, [sp, #72]
  43ff6c:	bl	43cbfc <wcrtomb@plt+0x37eec>
  43ff70:	add	x0, sp, #0x58
  43ff74:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43ff78:	mov	w0, #0x1                   	// #1
  43ff7c:	b	440284 <wcrtomb@plt+0x3b574>
  43ff80:	ldr	x0, [sp, #72]
  43ff84:	ldr	x5, [x0, #160]
  43ff88:	ldr	x1, [sp, #336]
  43ff8c:	ldr	x2, [sp, #96]
  43ff90:	ldr	x0, [sp, #72]
  43ff94:	ldr	x3, [x0, #152]
  43ff98:	add	x0, sp, #0x148
  43ff9c:	mov	x4, x3
  43ffa0:	mov	x3, x2
  43ffa4:	mov	x2, x1
  43ffa8:	ldr	x1, [sp, #64]
  43ffac:	blr	x5
  43ffb0:	str	w0, [sp, #348]
  43ffb4:	add	x0, sp, #0x58
  43ffb8:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  43ffbc:	b	43fff0 <wcrtomb@plt+0x3b2e0>
  43ffc0:	ldr	x0, [sp, #72]
  43ffc4:	ldr	x5, [x0, #160]
  43ffc8:	ldr	x1, [sp, #336]
  43ffcc:	ldr	x0, [sp, #72]
  43ffd0:	ldr	x2, [x0, #152]
  43ffd4:	add	x0, sp, #0x148
  43ffd8:	mov	x4, x2
  43ffdc:	mov	x3, #0x0                   	// #0
  43ffe0:	mov	x2, x1
  43ffe4:	ldr	x1, [sp, #64]
  43ffe8:	blr	x5
  43ffec:	str	w0, [sp, #348]
  43fff0:	ldr	w0, [sp, #348]
  43fff4:	cmp	w0, #0x2
  43fff8:	b.ne	440008 <wcrtomb@plt+0x3b2f8>  // b.any
  43fffc:	ldr	x0, [sp, #72]
  440000:	bl	43c980 <wcrtomb@plt+0x37c70>
  440004:	b	440284 <wcrtomb@plt+0x3b574>
  440008:	ldr	w0, [sp, #348]
  44000c:	cmp	w0, #0x0
  440010:	b.eq	44005c <wcrtomb@plt+0x3b34c>  // b.none
  440014:	ldr	w0, [sp, #348]
  440018:	cmp	w0, #0x9
  44001c:	b.ne	440048 <wcrtomb@plt+0x3b338>  // b.any
  440020:	ldr	x0, [sp, #72]
  440024:	ldr	w0, [x0, #192]
  440028:	cmp	w0, #0x9
  44002c:	b.ne	44003c <wcrtomb@plt+0x3b32c>  // b.any
  440030:	ldr	x0, [sp, #72]
  440034:	ldr	x0, [x0, #200]
  440038:	bl	404880 <free@plt>
  44003c:	ldr	x1, [sp, #328]
  440040:	ldr	x0, [sp, #72]
  440044:	str	x1, [x0, #200]
  440048:	ldr	w1, [sp, #348]
  44004c:	ldr	x0, [sp, #72]
  440050:	bl	43c93c <wcrtomb@plt+0x37c2c>
  440054:	mov	w0, #0x1                   	// #1
  440058:	b	440284 <wcrtomb@plt+0x3b574>
  44005c:	ldr	x0, [sp, #328]
  440060:	cmp	x0, #0x0
  440064:	b.eq	44022c <wcrtomb@plt+0x3b51c>  // b.none
  440068:	ldr	w0, [sp, #36]
  44006c:	and	w0, w0, #0x4
  440070:	cmp	w0, #0x0
  440074:	b.eq	4400e4 <wcrtomb@plt+0x3b3d4>  // b.none
  440078:	add	x0, sp, #0x140
  44007c:	mov	x1, x0
  440080:	ldr	x0, [sp, #72]
  440084:	bl	43d404 <wcrtomb@plt+0x386f4>
  440088:	cmp	w0, #0x0
  44008c:	b.eq	440098 <wcrtomb@plt+0x3b388>  // b.none
  440090:	mov	w0, #0x1                   	// #1
  440094:	b	440284 <wcrtomb@plt+0x3b574>
  440098:	ldr	x1, [sp, #320]
  44009c:	ldr	x0, [sp, #48]
  4400a0:	ldr	x0, [x0]
  4400a4:	mov	w3, #0x0                   	// #0
  4400a8:	mov	x2, x0
  4400ac:	ldr	x0, [sp, #72]
  4400b0:	bl	43d60c <wcrtomb@plt+0x388fc>
  4400b4:	ldr	x1, [sp, #320]
  4400b8:	ldr	x0, [sp, #48]
  4400bc:	str	x1, [x0]
  4400c0:	ldr	x0, [sp, #320]
  4400c4:	ldr	w2, [sp, #36]
  4400c8:	mov	w1, #0xa                   	// #10
  4400cc:	orr	w1, w2, w1
  4400d0:	str	w1, [x0, #16]
  4400d4:	ldr	x0, [sp, #320]
  4400d8:	ldr	x1, [sp, #328]
  4400dc:	str	x1, [x0, #24]
  4400e0:	b	440280 <wcrtomb@plt+0x3b570>
  4400e4:	ldr	x0, [sp, #328]
  4400e8:	ldrb	w0, [x0]
  4400ec:	cmp	w0, #0x0
  4400f0:	b.ne	440154 <wcrtomb@plt+0x3b444>  // b.any
  4400f4:	ldr	x0, [sp, #328]
  4400f8:	bl	404880 <free@plt>
  4400fc:	add	x0, sp, #0x140
  440100:	mov	x1, x0
  440104:	ldr	x0, [sp, #72]
  440108:	bl	43d404 <wcrtomb@plt+0x386f4>
  44010c:	cmp	w0, #0x0
  440110:	b.eq	44011c <wcrtomb@plt+0x3b40c>  // b.none
  440114:	mov	w0, #0x1                   	// #1
  440118:	b	440284 <wcrtomb@plt+0x3b574>
  44011c:	ldr	x1, [sp, #320]
  440120:	ldr	x0, [sp, #48]
  440124:	ldr	x0, [x0]
  440128:	mov	w3, #0x0                   	// #0
  44012c:	mov	x2, x0
  440130:	ldr	x0, [sp, #72]
  440134:	bl	43d60c <wcrtomb@plt+0x388fc>
  440138:	ldr	x1, [sp, #320]
  44013c:	ldr	x0, [sp, #48]
  440140:	str	x1, [x0]
  440144:	ldr	x0, [sp, #320]
  440148:	mov	w1, #0x1                   	// #1
  44014c:	str	w1, [x0, #16]
  440150:	b	440280 <wcrtomb@plt+0x3b570>
  440154:	ldr	x19, [sp, #328]
  440158:	ldr	x0, [sp, #328]
  44015c:	bl	4040b0 <strlen@plt>
  440160:	mov	w2, w0
  440164:	ldr	x0, [sp, #72]
  440168:	ldr	w0, [x0, #32]
  44016c:	and	w0, w0, #0x1000
  440170:	cmp	w0, #0x0
  440174:	b.ne	44018c <wcrtomb@plt+0x3b47c>  // b.any
  440178:	ldr	x0, [sp, #72]
  44017c:	ldr	w0, [x0, #36]
  440180:	and	w0, w0, #0x80
  440184:	cmp	w0, #0x0
  440188:	b.eq	440194 <wcrtomb@plt+0x3b484>  // b.none
  44018c:	mov	w0, #0x1744                	// #5956
  440190:	b	440198 <wcrtomb@plt+0x3b488>
  440194:	mov	w0, #0x744                 	// #1860
  440198:	add	x1, sp, #0x58
  44019c:	mov	w5, #0x0                   	// #0
  4401a0:	mov	w4, w0
  4401a4:	mov	w3, w2
  4401a8:	mov	x2, x19
  4401ac:	ldr	x0, [sp, #72]
  4401b0:	bl	43ca1c <wcrtomb@plt+0x37d0c>
  4401b4:	str	w0, [sp, #344]
  4401b8:	ldr	x0, [sp, #328]
  4401bc:	bl	404880 <free@plt>
  4401c0:	ldr	w0, [sp, #344]
  4401c4:	cmp	w0, #0x0
  4401c8:	b.eq	4401ec <wcrtomb@plt+0x3b4dc>  // b.none
  4401cc:	add	x0, sp, #0x58
  4401d0:	mov	x1, x0
  4401d4:	ldr	x0, [sp, #72]
  4401d8:	bl	43cbfc <wcrtomb@plt+0x37eec>
  4401dc:	add	x0, sp, #0x58
  4401e0:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  4401e4:	mov	w0, #0x1                   	// #1
  4401e8:	b	440284 <wcrtomb@plt+0x3b574>
  4401ec:	ldr	x1, [sp, #296]
  4401f0:	ldr	x0, [sp, #48]
  4401f4:	ldr	x0, [x0]
  4401f8:	mov	w3, #0x0                   	// #0
  4401fc:	mov	x2, x0
  440200:	ldr	x0, [sp, #72]
  440204:	bl	43d60c <wcrtomb@plt+0x388fc>
  440208:	ldr	x1, [sp, #304]
  44020c:	ldr	x0, [sp, #48]
  440210:	str	x1, [x0]
  440214:	str	xzr, [sp, #304]
  440218:	ldr	x0, [sp, #304]
  44021c:	str	x0, [sp, #296]
  440220:	add	x0, sp, #0x58
  440224:	bl	4425dc <wcrtomb@plt+0x3d8cc>
  440228:	b	440280 <wcrtomb@plt+0x3b570>
  44022c:	add	x0, sp, #0x140
  440230:	mov	x1, x0
  440234:	ldr	x0, [sp, #72]
  440238:	bl	43d404 <wcrtomb@plt+0x386f4>
  44023c:	cmp	w0, #0x0
  440240:	b.eq	44024c <wcrtomb@plt+0x3b53c>  // b.none
  440244:	mov	w0, #0x1                   	// #1
  440248:	b	440284 <wcrtomb@plt+0x3b574>
  44024c:	ldr	x1, [sp, #320]
  440250:	ldr	x0, [sp, #48]
  440254:	ldr	x0, [x0]
  440258:	mov	w3, #0x0                   	// #0
  44025c:	mov	x2, x0
  440260:	ldr	x0, [sp, #72]
  440264:	bl	43d60c <wcrtomb@plt+0x388fc>
  440268:	ldr	x1, [sp, #320]
  44026c:	ldr	x0, [sp, #48]
  440270:	str	x1, [x0]
  440274:	ldr	x0, [sp, #320]
  440278:	mov	w1, #0x1                   	// #1
  44027c:	str	w1, [x0, #16]
  440280:	mov	w0, #0x0                   	// #0
  440284:	ldr	x19, [sp, #16]
  440288:	ldp	x29, x30, [sp], #352
  44028c:	ret
  440290:	stp	x29, x30, [sp, #-48]!
  440294:	mov	x29, sp
  440298:	str	x0, [sp, #24]
  44029c:	ldr	x0, [sp, #24]
  4402a0:	ldr	x0, [x0, #208]
  4402a4:	str	x0, [sp, #40]
  4402a8:	b	440300 <wcrtomb@plt+0x3b5f0>
  4402ac:	ldr	x0, [sp, #40]
  4402b0:	ldr	x0, [x0, #8]
  4402b4:	str	x0, [sp, #32]
  4402b8:	ldr	x0, [sp, #40]
  4402bc:	ldr	w0, [x0, #16]
  4402c0:	and	w0, w0, #0x8
  4402c4:	cmp	w0, #0x0
  4402c8:	b.ne	4402f8 <wcrtomb@plt+0x3b5e8>  // b.any
  4402cc:	adrp	x0, 43f000 <wcrtomb@plt+0x3a2f0>
  4402d0:	add	x3, x0, #0xe88
  4402d4:	adrp	x0, 43f000 <wcrtomb@plt+0x3a2f0>
  4402d8:	add	x2, x0, #0xe68
  4402dc:	ldr	x1, [sp, #40]
  4402e0:	ldr	x0, [sp, #24]
  4402e4:	bl	43fab4 <wcrtomb@plt+0x3ada4>
  4402e8:	cmp	w0, #0x0
  4402ec:	b.eq	4402f8 <wcrtomb@plt+0x3b5e8>  // b.none
  4402f0:	mov	w0, #0x1                   	// #1
  4402f4:	b	440318 <wcrtomb@plt+0x3b608>
  4402f8:	ldr	x0, [sp, #32]
  4402fc:	str	x0, [sp, #40]
  440300:	ldr	x0, [sp, #40]
  440304:	cmp	x0, #0x0
  440308:	b.ne	4402ac <wcrtomb@plt+0x3b59c>  // b.any
  44030c:	ldr	x0, [sp, #24]
  440310:	bl	43fd20 <wcrtomb@plt+0x3b010>
  440314:	mov	w0, #0x0                   	// #0
  440318:	ldp	x29, x30, [sp], #48
  44031c:	ret
  440320:	stp	x29, x30, [sp, #-48]!
  440324:	mov	x29, sp
  440328:	str	x0, [sp, #24]
  44032c:	ldr	x0, [sp, #24]
  440330:	ldr	x0, [x0, #208]
  440334:	str	x0, [sp, #40]
  440338:	b	440504 <wcrtomb@plt+0x3b7f4>
  44033c:	ldr	x0, [sp, #40]
  440340:	ldr	w0, [x0, #16]
  440344:	and	w0, w0, #0x4
  440348:	cmp	w0, #0x0
  44034c:	b.ne	4403f0 <wcrtomb@plt+0x3b6e0>  // b.any
  440350:	ldr	x0, [sp, #40]
  440354:	ldr	x0, [x0, #24]
  440358:	str	x0, [sp, #32]
  44035c:	b	44036c <wcrtomb@plt+0x3b65c>
  440360:	ldr	x0, [sp, #32]
  440364:	add	x0, x0, #0x1
  440368:	str	x0, [sp, #32]
  44036c:	ldr	x0, [sp, #40]
  440370:	ldr	x0, [x0, #32]
  440374:	ldr	x1, [sp, #32]
  440378:	cmp	x1, x0
  44037c:	b.cs	4403d4 <wcrtomb@plt+0x3b6c4>  // b.hs, b.nlast
  440380:	ldr	x0, [sp, #24]
  440384:	ldr	x1, [x0, #168]
  440388:	ldr	x0, [sp, #32]
  44038c:	add	x0, x1, x0
  440390:	ldrb	w0, [x0]
  440394:	cmp	w0, #0x20
  440398:	b.eq	440360 <wcrtomb@plt+0x3b650>  // b.none
  44039c:	ldr	x0, [sp, #24]
  4403a0:	ldr	x1, [x0, #168]
  4403a4:	ldr	x0, [sp, #32]
  4403a8:	add	x0, x1, x0
  4403ac:	ldrb	w0, [x0]
  4403b0:	cmp	w0, #0x9
  4403b4:	b.eq	440360 <wcrtomb@plt+0x3b650>  // b.none
  4403b8:	ldr	x0, [sp, #24]
  4403bc:	ldr	x1, [x0, #168]
  4403c0:	ldr	x0, [sp, #32]
  4403c4:	add	x0, x1, x0
  4403c8:	ldrb	w0, [x0]
  4403cc:	cmp	w0, #0xa
  4403d0:	b.eq	440360 <wcrtomb@plt+0x3b650>  // b.none
  4403d4:	ldr	x0, [sp, #40]
  4403d8:	ldr	x1, [sp, #32]
  4403dc:	str	x1, [x0, #24]
  4403e0:	b	4403f0 <wcrtomb@plt+0x3b6e0>
  4403e4:	ldr	x0, [sp, #40]
  4403e8:	ldr	x0, [x0, #8]
  4403ec:	str	x0, [sp, #40]
  4403f0:	ldr	x0, [sp, #40]
  4403f4:	ldr	x0, [x0, #8]
  4403f8:	cmp	x0, #0x0
  4403fc:	b.eq	440414 <wcrtomb@plt+0x3b704>  // b.none
  440400:	ldr	x0, [sp, #40]
  440404:	ldr	w0, [x0, #16]
  440408:	and	w0, w0, #0x10
  44040c:	cmp	w0, #0x0
  440410:	b.ne	4403e4 <wcrtomb@plt+0x3b6d4>  // b.any
  440414:	ldr	x0, [sp, #40]
  440418:	ldr	w0, [x0, #16]
  44041c:	and	w0, w0, #0x4
  440420:	cmp	w0, #0x0
  440424:	b.ne	4404f4 <wcrtomb@plt+0x3b7e4>  // b.any
  440428:	ldr	x0, [sp, #40]
  44042c:	ldr	x0, [x0, #32]
  440430:	str	x0, [sp, #32]
  440434:	b	440444 <wcrtomb@plt+0x3b734>
  440438:	ldr	x0, [sp, #32]
  44043c:	sub	x0, x0, #0x1
  440440:	str	x0, [sp, #32]
  440444:	ldr	x0, [sp, #40]
  440448:	ldr	x0, [x0, #24]
  44044c:	ldr	x1, [sp, #32]
  440450:	cmp	x1, x0
  440454:	b.ls	4404b8 <wcrtomb@plt+0x3b7a8>  // b.plast
  440458:	ldr	x0, [sp, #24]
  44045c:	ldr	x1, [x0, #168]
  440460:	ldr	x0, [sp, #32]
  440464:	sub	x0, x0, #0x1
  440468:	add	x0, x1, x0
  44046c:	ldrb	w0, [x0]
  440470:	cmp	w0, #0x20
  440474:	b.eq	440438 <wcrtomb@plt+0x3b728>  // b.none
  440478:	ldr	x0, [sp, #24]
  44047c:	ldr	x1, [x0, #168]
  440480:	ldr	x0, [sp, #32]
  440484:	sub	x0, x0, #0x1
  440488:	add	x0, x1, x0
  44048c:	ldrb	w0, [x0]
  440490:	cmp	w0, #0x9
  440494:	b.eq	440438 <wcrtomb@plt+0x3b728>  // b.none
  440498:	ldr	x0, [sp, #24]
  44049c:	ldr	x1, [x0, #168]
  4404a0:	ldr	x0, [sp, #32]
  4404a4:	sub	x0, x0, #0x1
  4404a8:	add	x0, x1, x0
  4404ac:	ldrb	w0, [x0]
  4404b0:	cmp	w0, #0xa
  4404b4:	b.eq	440438 <wcrtomb@plt+0x3b728>  // b.none
  4404b8:	ldr	x0, [sp, #40]
  4404bc:	ldr	x1, [sp, #32]
  4404c0:	str	x1, [x0, #32]
  4404c4:	ldr	x0, [sp, #40]
  4404c8:	ldr	x1, [x0, #24]
  4404cc:	ldr	x0, [sp, #40]
  4404d0:	ldr	x0, [x0, #32]
  4404d4:	cmp	x1, x0
  4404d8:	b.ne	4404f8 <wcrtomb@plt+0x3b7e8>  // b.any
  4404dc:	ldr	x0, [sp, #40]
  4404e0:	ldr	w0, [x0, #16]
  4404e4:	orr	w1, w0, #0x1
  4404e8:	ldr	x0, [sp, #40]
  4404ec:	str	w1, [x0, #16]
  4404f0:	b	4404f8 <wcrtomb@plt+0x3b7e8>
  4404f4:	nop
  4404f8:	ldr	x0, [sp, #40]
  4404fc:	ldr	x0, [x0, #8]
  440500:	str	x0, [sp, #40]
  440504:	ldr	x0, [sp, #40]
  440508:	cmp	x0, #0x0
  44050c:	b.ne	44033c <wcrtomb@plt+0x3b62c>  // b.any
  440510:	ldr	x0, [sp, #24]
  440514:	bl	43fd20 <wcrtomb@plt+0x3b010>
  440518:	mov	w0, #0x0                   	// #0
  44051c:	ldp	x29, x30, [sp], #48
  440520:	ret
  440524:	stp	x29, x30, [sp, #-128]!
  440528:	mov	x29, sp
  44052c:	str	x0, [sp, #24]
  440530:	str	xzr, [sp, #112]
  440534:	str	xzr, [sp, #104]
  440538:	ldr	x0, [sp, #24]
  44053c:	ldr	x0, [x0, #208]
  440540:	str	x0, [sp, #120]
  440544:	b	4407b8 <wcrtomb@plt+0x3baa8>
  440548:	ldr	x0, [sp, #120]
  44054c:	ldr	w0, [x0, #16]
  440550:	and	w0, w0, #0x4
  440554:	cmp	w0, #0x0
  440558:	b.ne	440798 <wcrtomb@plt+0x3ba88>  // b.any
  44055c:	ldr	x1, [sp, #120]
  440560:	ldr	x0, [sp, #24]
  440564:	bl	43d334 <wcrtomb@plt+0x38624>
  440568:	str	x0, [sp, #80]
  44056c:	ldr	x0, [sp, #80]
  440570:	ldrb	w0, [x0]
  440574:	cmp	w0, #0x7e
  440578:	b.ne	4407ac <wcrtomb@plt+0x3ba9c>  // b.any
  44057c:	ldr	x0, [sp, #120]
  440580:	bl	43d39c <wcrtomb@plt+0x3868c>
  440584:	str	x0, [sp, #72]
  440588:	mov	x0, #0x1                   	// #1
  44058c:	str	x0, [sp, #96]
  440590:	b	4405a0 <wcrtomb@plt+0x3b890>
  440594:	ldr	x0, [sp, #96]
  440598:	add	x0, x0, #0x1
  44059c:	str	x0, [sp, #96]
  4405a0:	ldr	x1, [sp, #96]
  4405a4:	ldr	x0, [sp, #72]
  4405a8:	cmp	x1, x0
  4405ac:	b.cs	4405c8 <wcrtomb@plt+0x3b8b8>  // b.hs, b.nlast
  4405b0:	ldr	x1, [sp, #80]
  4405b4:	ldr	x0, [sp, #96]
  4405b8:	add	x0, x1, x0
  4405bc:	ldrb	w0, [x0]
  4405c0:	cmp	w0, #0x2f
  4405c4:	b.ne	440594 <wcrtomb@plt+0x3b884>  // b.any
  4405c8:	ldr	x1, [sp, #96]
  4405cc:	ldr	x0, [sp, #72]
  4405d0:	cmp	x1, x0
  4405d4:	b.eq	4407a0 <wcrtomb@plt+0x3ba90>  // b.none
  4405d8:	ldr	x0, [sp, #96]
  4405dc:	cmp	x0, #0x1
  4405e0:	b.ls	440678 <wcrtomb@plt+0x3b968>  // b.plast
  4405e4:	ldr	x1, [sp, #96]
  4405e8:	ldr	x0, [sp, #104]
  4405ec:	cmp	x1, x0
  4405f0:	b.ls	440634 <wcrtomb@plt+0x3b924>  // b.plast
  4405f4:	ldr	x1, [sp, #96]
  4405f8:	ldr	x0, [sp, #112]
  4405fc:	bl	4045e0 <realloc@plt>
  440600:	str	x0, [sp, #64]
  440604:	ldr	x0, [sp, #64]
  440608:	cmp	x0, #0x0
  44060c:	b.ne	440624 <wcrtomb@plt+0x3b914>  // b.any
  440610:	ldr	x0, [sp, #112]
  440614:	bl	404880 <free@plt>
  440618:	ldr	x0, [sp, #24]
  44061c:	bl	43c980 <wcrtomb@plt+0x37c70>
  440620:	b	4407d0 <wcrtomb@plt+0x3bac0>
  440624:	ldr	x0, [sp, #64]
  440628:	str	x0, [sp, #112]
  44062c:	ldr	x0, [sp, #96]
  440630:	str	x0, [sp, #104]
  440634:	ldr	x0, [sp, #96]
  440638:	sub	x0, x0, #0x1
  44063c:	str	x0, [sp, #96]
  440640:	ldr	x0, [sp, #80]
  440644:	add	x0, x0, #0x1
  440648:	ldr	x2, [sp, #96]
  44064c:	mov	x1, x0
  440650:	ldr	x0, [sp, #112]
  440654:	bl	404020 <memcpy@plt>
  440658:	ldr	x1, [sp, #112]
  44065c:	ldr	x0, [sp, #96]
  440660:	add	x0, x1, x0
  440664:	strb	wzr, [x0]
  440668:	ldr	x0, [sp, #112]
  44066c:	bl	404500 <getpwnam@plt>
  440670:	str	x0, [sp, #88]
  440674:	b	440684 <wcrtomb@plt+0x3b974>
  440678:	bl	404200 <getuid@plt>
  44067c:	bl	4047d0 <getpwuid@plt>
  440680:	str	x0, [sp, #88]
  440684:	ldr	x0, [sp, #88]
  440688:	cmp	x0, #0x0
  44068c:	b.eq	4407a8 <wcrtomb@plt+0x3ba98>  // b.none
  440690:	ldr	x0, [sp, #88]
  440694:	ldr	x0, [x0, #32]
  440698:	bl	4040b0 <strlen@plt>
  44069c:	str	x0, [sp, #56]
  4406a0:	ldr	x1, [sp, #72]
  4406a4:	ldr	x0, [sp, #96]
  4406a8:	sub	x0, x1, x0
  4406ac:	ldr	x1, [sp, #56]
  4406b0:	add	x0, x1, x0
  4406b4:	str	x0, [sp, #48]
  4406b8:	ldr	x0, [sp, #48]
  4406bc:	bl	4043f0 <malloc@plt>
  4406c0:	str	x0, [sp, #40]
  4406c4:	ldr	x0, [sp, #40]
  4406c8:	cmp	x0, #0x0
  4406cc:	b.ne	4406e4 <wcrtomb@plt+0x3b9d4>  // b.any
  4406d0:	ldr	x0, [sp, #112]
  4406d4:	bl	404880 <free@plt>
  4406d8:	ldr	x0, [sp, #24]
  4406dc:	bl	43c980 <wcrtomb@plt+0x37c70>
  4406e0:	b	4407d0 <wcrtomb@plt+0x3bac0>
  4406e4:	ldr	x0, [sp, #48]
  4406e8:	sub	x0, x0, #0x1
  4406ec:	str	x0, [sp, #48]
  4406f0:	ldr	x0, [sp, #88]
  4406f4:	ldr	x0, [x0, #32]
  4406f8:	ldr	x2, [sp, #56]
  4406fc:	mov	x1, x0
  440700:	ldr	x0, [sp, #40]
  440704:	bl	404020 <memcpy@plt>
  440708:	ldr	x1, [sp, #40]
  44070c:	ldr	x0, [sp, #56]
  440710:	add	x3, x1, x0
  440714:	ldr	x0, [sp, #96]
  440718:	add	x0, x0, #0x1
  44071c:	ldr	x1, [sp, #80]
  440720:	add	x4, x1, x0
  440724:	ldr	x1, [sp, #72]
  440728:	ldr	x0, [sp, #96]
  44072c:	sub	x0, x1, x0
  440730:	sub	x0, x0, #0x1
  440734:	mov	x2, x0
  440738:	mov	x1, x4
  44073c:	mov	x0, x3
  440740:	bl	404020 <memcpy@plt>
  440744:	ldr	x1, [sp, #40]
  440748:	ldr	x0, [sp, #48]
  44074c:	add	x0, x1, x0
  440750:	strb	wzr, [x0]
  440754:	ldr	x0, [sp, #120]
  440758:	ldr	w0, [x0, #16]
  44075c:	and	w0, w0, #0x2
  440760:	cmp	w0, #0x0
  440764:	b.eq	440774 <wcrtomb@plt+0x3ba64>  // b.none
  440768:	ldr	x0, [sp, #120]
  44076c:	ldr	x0, [x0, #24]
  440770:	bl	404880 <free@plt>
  440774:	ldr	x0, [sp, #120]
  440778:	ldr	x1, [sp, #40]
  44077c:	str	x1, [x0, #24]
  440780:	ldr	x0, [sp, #120]
  440784:	ldr	w0, [x0, #16]
  440788:	orr	w1, w0, #0x2
  44078c:	ldr	x0, [sp, #120]
  440790:	str	w1, [x0, #16]
  440794:	b	4407ac <wcrtomb@plt+0x3ba9c>
  440798:	nop
  44079c:	b	4407ac <wcrtomb@plt+0x3ba9c>
  4407a0:	nop
  4407a4:	b	4407ac <wcrtomb@plt+0x3ba9c>
  4407a8:	nop
  4407ac:	ldr	x0, [sp, #120]
  4407b0:	ldr	x0, [x0, #8]
  4407b4:	str	x0, [sp, #120]
  4407b8:	ldr	x0, [sp, #120]
  4407bc:	cmp	x0, #0x0
  4407c0:	b.ne	440548 <wcrtomb@plt+0x3b838>  // b.any
  4407c4:	ldr	x0, [sp, #112]
  4407c8:	bl	404880 <free@plt>
  4407cc:	mov	w0, #0x0                   	// #0
  4407d0:	ldp	x29, x30, [sp], #128
  4407d4:	ret
  4407d8:	stp	x29, x30, [sp, #-32]!
  4407dc:	mov	x29, sp
  4407e0:	str	x0, [sp, #24]
  4407e4:	str	w1, [sp, #20]
  4407e8:	b	44081c <wcrtomb@plt+0x3bb0c>
  4407ec:	ldr	x0, [sp, #24]
  4407f0:	add	x1, x0, #0x1
  4407f4:	str	x1, [sp, #24]
  4407f8:	ldrb	w0, [x0]
  4407fc:	mov	w1, w0
  440800:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  440804:	add	x0, x0, #0xa48
  440808:	bl	404930 <strchr@plt>
  44080c:	cmp	x0, #0x0
  440810:	b.eq	44081c <wcrtomb@plt+0x3bb0c>  // b.none
  440814:	mov	w0, #0x1                   	// #1
  440818:	b	440834 <wcrtomb@plt+0x3bb24>
  44081c:	ldr	w0, [sp, #20]
  440820:	sub	w1, w0, #0x1
  440824:	str	w1, [sp, #20]
  440828:	cmp	w0, #0x0
  44082c:	b.ne	4407ec <wcrtomb@plt+0x3badc>  // b.any
  440830:	mov	w0, #0x0                   	// #0
  440834:	ldp	x29, x30, [sp], #32
  440838:	ret
  44083c:	stp	x29, x30, [sp, #-304]!
  440840:	mov	x29, sp
  440844:	str	x0, [sp, #24]
  440848:	str	wzr, [sp, #292]
  44084c:	ldr	x0, [sp, #24]
  440850:	ldr	w0, [x0, #36]
  440854:	and	w0, w0, #0x4
  440858:	cmp	w0, #0x0
  44085c:	b.eq	440868 <wcrtomb@plt+0x3bb58>  // b.none
  440860:	mov	w0, #0x80                  	// #128
  440864:	str	w0, [sp, #292]
  440868:	ldr	x0, [sp, #24]
  44086c:	ldr	x0, [x0, #208]
  440870:	str	x0, [sp, #296]
  440874:	b	440b50 <wcrtomb@plt+0x3be40>
  440878:	ldr	x0, [sp, #296]
  44087c:	ldr	x0, [x0, #8]
  440880:	str	x0, [sp, #272]
  440884:	ldr	x0, [sp, #296]
  440888:	ldr	w0, [x0, #16]
  44088c:	and	w0, w0, #0x4
  440890:	cmp	w0, #0x0
  440894:	b.ne	440b44 <wcrtomb@plt+0x3be34>  // b.any
  440898:	ldr	x1, [sp, #296]
  44089c:	ldr	x0, [sp, #24]
  4408a0:	bl	43d334 <wcrtomb@plt+0x38624>
  4408a4:	str	x0, [sp, #264]
  4408a8:	ldr	x0, [sp, #296]
  4408ac:	bl	43d39c <wcrtomb@plt+0x3868c>
  4408b0:	str	x0, [sp, #256]
  4408b4:	ldr	x0, [sp, #256]
  4408b8:	mov	w1, w0
  4408bc:	ldr	x0, [sp, #264]
  4408c0:	bl	4407d8 <wcrtomb@plt+0x3bac8>
  4408c4:	cmp	w0, #0x0
  4408c8:	b.eq	440b48 <wcrtomb@plt+0x3be38>  // b.none
  4408cc:	ldr	x0, [sp, #256]
  4408d0:	add	x0, x0, #0x1
  4408d4:	bl	4043f0 <malloc@plt>
  4408d8:	str	x0, [sp, #248]
  4408dc:	ldr	x0, [sp, #248]
  4408e0:	cmp	x0, #0x0
  4408e4:	b.ne	4408f4 <wcrtomb@plt+0x3bbe4>  // b.any
  4408e8:	ldr	x0, [sp, #24]
  4408ec:	bl	43c980 <wcrtomb@plt+0x37c70>
  4408f0:	b	440b60 <wcrtomb@plt+0x3be50>
  4408f4:	ldr	x2, [sp, #256]
  4408f8:	ldr	x1, [sp, #264]
  4408fc:	ldr	x0, [sp, #248]
  440900:	bl	404020 <memcpy@plt>
  440904:	ldr	x1, [sp, #248]
  440908:	ldr	x0, [sp, #256]
  44090c:	add	x0, x1, x0
  440910:	strb	wzr, [x0]
  440914:	add	x0, sp, #0x20
  440918:	mov	x3, x0
  44091c:	mov	x2, #0x0                   	// #0
  440920:	ldr	w1, [sp, #292]
  440924:	ldr	x0, [sp, #248]
  440928:	bl	404ad0 <glob@plt>
  44092c:	cmp	w0, #0x3
  440930:	b.eq	440980 <wcrtomb@plt+0x3bc70>  // b.none
  440934:	cmp	w0, #0x3
  440938:	b.gt	440a54 <wcrtomb@plt+0x3bd44>
  44093c:	cmp	w0, #0x0
  440940:	b.eq	440950 <wcrtomb@plt+0x3bc40>  // b.none
  440944:	cmp	w0, #0x1
  440948:	b.eq	44096c <wcrtomb@plt+0x3bc5c>  // b.none
  44094c:	b	440a54 <wcrtomb@plt+0x3bd44>
  440950:	ldr	x0, [sp, #248]
  440954:	bl	404880 <free@plt>
  440958:	nop
  44095c:	ldr	x0, [sp, #296]
  440960:	str	x0, [sp, #280]
  440964:	str	wzr, [sp, #288]
  440968:	b	440b14 <wcrtomb@plt+0x3be04>
  44096c:	ldr	x0, [sp, #248]
  440970:	bl	404880 <free@plt>
  440974:	ldr	x0, [sp, #24]
  440978:	bl	43c980 <wcrtomb@plt+0x37c70>
  44097c:	b	440b60 <wcrtomb@plt+0x3be50>
  440980:	ldr	x0, [sp, #24]
  440984:	ldr	w0, [x0, #36]
  440988:	and	w0, w0, #0x1
  44098c:	cmp	w0, #0x0
  440990:	b.eq	4409ac <wcrtomb@plt+0x3bc9c>  // b.none
  440994:	ldr	x1, [sp, #296]
  440998:	ldr	x0, [sp, #24]
  44099c:	bl	43d500 <wcrtomb@plt+0x387f0>
  4409a0:	ldr	x0, [sp, #296]
  4409a4:	bl	43d454 <wcrtomb@plt+0x38744>
  4409a8:	b	440a48 <wcrtomb@plt+0x3bd38>
  4409ac:	ldr	x0, [sp, #24]
  4409b0:	ldr	w0, [x0, #36]
  4409b4:	and	w0, w0, #0x2
  4409b8:	cmp	w0, #0x0
  4409bc:	b.eq	440a48 <wcrtomb@plt+0x3bd38>  // b.none
  4409c0:	ldr	x0, [sp, #24]
  4409c4:	ldr	w0, [x0, #192]
  4409c8:	cmp	w0, #0x9
  4409cc:	b.ne	4409dc <wcrtomb@plt+0x3bccc>  // b.any
  4409d0:	ldr	x0, [sp, #24]
  4409d4:	ldr	x0, [x0, #200]
  4409d8:	bl	404880 <free@plt>
  4409dc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4409e0:	add	x0, x0, #0xa50
  4409e4:	bl	404c60 <gettext@plt>
  4409e8:	mov	x1, x0
  4409ec:	add	x0, sp, #0x68
  4409f0:	ldr	x3, [sp, #248]
  4409f4:	mov	x2, x1
  4409f8:	mov	x1, #0x80                  	// #128
  4409fc:	bl	4042e0 <snprintf@plt>
  440a00:	ldr	x0, [sp, #248]
  440a04:	bl	404880 <free@plt>
  440a08:	add	x0, sp, #0x68
  440a0c:	bl	404620 <strdup@plt>
  440a10:	mov	x1, x0
  440a14:	ldr	x0, [sp, #24]
  440a18:	str	x1, [x0, #200]
  440a1c:	ldr	x0, [sp, #24]
  440a20:	ldr	x0, [x0, #200]
  440a24:	cmp	x0, #0x0
  440a28:	b.ne	440a38 <wcrtomb@plt+0x3bd28>  // b.any
  440a2c:	ldr	x0, [sp, #24]
  440a30:	bl	43c980 <wcrtomb@plt+0x37c70>
  440a34:	b	440b60 <wcrtomb@plt+0x3be50>
  440a38:	mov	w1, #0x9                   	// #9
  440a3c:	ldr	x0, [sp, #24]
  440a40:	bl	43c93c <wcrtomb@plt+0x37c2c>
  440a44:	b	440b60 <wcrtomb@plt+0x3be50>
  440a48:	ldr	x0, [sp, #248]
  440a4c:	bl	404880 <free@plt>
  440a50:	b	440b48 <wcrtomb@plt+0x3be38>
  440a54:	ldr	x0, [sp, #248]
  440a58:	bl	404880 <free@plt>
  440a5c:	mov	w1, #0x8                   	// #8
  440a60:	ldr	x0, [sp, #24]
  440a64:	bl	43c93c <wcrtomb@plt+0x37c2c>
  440a68:	b	440b60 <wcrtomb@plt+0x3be50>
  440a6c:	add	x0, sp, #0xe8
  440a70:	mov	x1, x0
  440a74:	ldr	x0, [sp, #24]
  440a78:	bl	43d404 <wcrtomb@plt+0x386f4>
  440a7c:	cmp	w0, #0x0
  440a80:	b.eq	440a8c <wcrtomb@plt+0x3bd7c>  // b.none
  440a84:	mov	w0, #0x1                   	// #1
  440a88:	b	440b60 <wcrtomb@plt+0x3be50>
  440a8c:	ldr	x1, [sp, #40]
  440a90:	ldrsw	x0, [sp, #288]
  440a94:	lsl	x0, x0, #3
  440a98:	add	x0, x1, x0
  440a9c:	ldr	x0, [x0]
  440aa0:	bl	404620 <strdup@plt>
  440aa4:	str	x0, [sp, #240]
  440aa8:	ldr	x0, [sp, #240]
  440aac:	cmp	x0, #0x0
  440ab0:	b.ne	440ac8 <wcrtomb@plt+0x3bdb8>  // b.any
  440ab4:	ldr	x0, [sp, #232]
  440ab8:	bl	43d454 <wcrtomb@plt+0x38744>
  440abc:	ldr	x0, [sp, #24]
  440ac0:	bl	43c980 <wcrtomb@plt+0x37c70>
  440ac4:	b	440b60 <wcrtomb@plt+0x3be50>
  440ac8:	ldr	x0, [sp, #232]
  440acc:	ldr	x1, [sp, #240]
  440ad0:	str	x1, [x0, #24]
  440ad4:	ldr	x0, [sp, #232]
  440ad8:	ldr	w1, [x0, #16]
  440adc:	ldr	x0, [sp, #232]
  440ae0:	orr	w1, w1, #0x6
  440ae4:	str	w1, [x0, #16]
  440ae8:	ldr	x0, [sp, #232]
  440aec:	mov	w3, #0x0                   	// #0
  440af0:	ldr	x2, [sp, #280]
  440af4:	mov	x1, x0
  440af8:	ldr	x0, [sp, #24]
  440afc:	bl	43d60c <wcrtomb@plt+0x388fc>
  440b00:	ldr	x0, [sp, #232]
  440b04:	str	x0, [sp, #280]
  440b08:	ldr	w0, [sp, #288]
  440b0c:	add	w0, w0, #0x1
  440b10:	str	w0, [sp, #288]
  440b14:	ldrsw	x1, [sp, #288]
  440b18:	ldr	x0, [sp, #32]
  440b1c:	cmp	x1, x0
  440b20:	b.cc	440a6c <wcrtomb@plt+0x3bd5c>  // b.lo, b.ul, b.last
  440b24:	add	x0, sp, #0x20
  440b28:	bl	404940 <globfree@plt>
  440b2c:	ldr	x1, [sp, #296]
  440b30:	ldr	x0, [sp, #24]
  440b34:	bl	43d500 <wcrtomb@plt+0x387f0>
  440b38:	ldr	x0, [sp, #296]
  440b3c:	bl	43d454 <wcrtomb@plt+0x38744>
  440b40:	b	440b48 <wcrtomb@plt+0x3be38>
  440b44:	nop
  440b48:	ldr	x0, [sp, #272]
  440b4c:	str	x0, [sp, #296]
  440b50:	ldr	x0, [sp, #296]
  440b54:	cmp	x0, #0x0
  440b58:	b.ne	440878 <wcrtomb@plt+0x3bb68>  // b.any
  440b5c:	mov	w0, #0x0                   	// #0
  440b60:	ldp	x29, x30, [sp], #304
  440b64:	ret
  440b68:	stp	x29, x30, [sp, #-64]!
  440b6c:	mov	x29, sp
  440b70:	str	x0, [sp, #40]
  440b74:	str	x1, [sp, #32]
  440b78:	str	x2, [sp, #24]
  440b7c:	ldr	x1, [sp, #40]
  440b80:	ldr	x0, [sp, #32]
  440b84:	add	x0, x1, x0
  440b88:	ldrb	w0, [x0]
  440b8c:	cmp	w0, #0x3b
  440b90:	b.ne	440ba0 <wcrtomb@plt+0x3be90>  // b.any
  440b94:	ldr	x0, [sp, #32]
  440b98:	add	x0, x0, #0x1
  440b9c:	str	x0, [sp, #32]
  440ba0:	ldr	x1, [sp, #40]
  440ba4:	ldr	x0, [sp, #32]
  440ba8:	add	x0, x1, x0
  440bac:	ldrb	w0, [x0]
  440bb0:	cmp	w0, #0x73
  440bb4:	b.ne	440d94 <wcrtomb@plt+0x3c084>  // b.any
  440bb8:	ldr	x0, [sp, #32]
  440bbc:	add	x0, x0, #0x3
  440bc0:	ldr	x1, [sp, #24]
  440bc4:	cmp	x1, x0
  440bc8:	b.ls	440d94 <wcrtomb@plt+0x3c084>  // b.plast
  440bcc:	ldr	x0, [sp, #32]
  440bd0:	add	x0, x0, #0x1
  440bd4:	ldr	x1, [sp, #40]
  440bd8:	add	x0, x1, x0
  440bdc:	ldrb	w0, [x0]
  440be0:	mov	w1, w0
  440be4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  440be8:	add	x0, x0, #0xa70
  440bec:	bl	404930 <strchr@plt>
  440bf0:	cmp	x0, #0x0
  440bf4:	b.eq	440d94 <wcrtomb@plt+0x3c084>  // b.none
  440bf8:	ldr	x0, [sp, #32]
  440bfc:	add	x0, x0, #0x1
  440c00:	str	x0, [sp, #32]
  440c04:	ldr	x1, [sp, #40]
  440c08:	ldr	x0, [sp, #32]
  440c0c:	add	x0, x1, x0
  440c10:	ldrb	w0, [x0]
  440c14:	str	w0, [sp, #56]
  440c18:	mov	w0, #0x1                   	// #1
  440c1c:	str	w0, [sp, #60]
  440c20:	ldr	x0, [sp, #32]
  440c24:	add	x0, x0, #0x1
  440c28:	str	x0, [sp, #32]
  440c2c:	b	440d50 <wcrtomb@plt+0x3c040>
  440c30:	ldr	w0, [sp, #60]
  440c34:	cmp	w0, #0x3
  440c38:	b.ne	440cf0 <wcrtomb@plt+0x3bfe0>  // b.any
  440c3c:	ldr	x1, [sp, #40]
  440c40:	ldr	x0, [sp, #32]
  440c44:	add	x0, x1, x0
  440c48:	ldrb	w0, [x0]
  440c4c:	mov	w1, w0
  440c50:	ldr	w0, [sp, #56]
  440c54:	cmp	w0, w1
  440c58:	b.eq	440d60 <wcrtomb@plt+0x3c050>  // b.none
  440c5c:	ldr	x1, [sp, #40]
  440c60:	ldr	x0, [sp, #32]
  440c64:	add	x0, x1, x0
  440c68:	ldrb	w0, [x0]
  440c6c:	cmp	w0, #0x40
  440c70:	b.ls	440c8c <wcrtomb@plt+0x3bf7c>  // b.plast
  440c74:	ldr	x1, [sp, #40]
  440c78:	ldr	x0, [sp, #32]
  440c7c:	add	x0, x1, x0
  440c80:	ldrb	w0, [x0]
  440c84:	cmp	w0, #0x5a
  440c88:	b.ls	440d44 <wcrtomb@plt+0x3c034>  // b.plast
  440c8c:	ldr	x1, [sp, #40]
  440c90:	ldr	x0, [sp, #32]
  440c94:	add	x0, x1, x0
  440c98:	ldrb	w0, [x0]
  440c9c:	cmp	w0, #0x60
  440ca0:	b.ls	440cbc <wcrtomb@plt+0x3bfac>  // b.plast
  440ca4:	ldr	x1, [sp, #40]
  440ca8:	ldr	x0, [sp, #32]
  440cac:	add	x0, x1, x0
  440cb0:	ldrb	w0, [x0]
  440cb4:	cmp	w0, #0x7a
  440cb8:	b.ls	440d44 <wcrtomb@plt+0x3c034>  // b.plast
  440cbc:	ldr	x1, [sp, #40]
  440cc0:	ldr	x0, [sp, #32]
  440cc4:	add	x0, x1, x0
  440cc8:	ldrb	w0, [x0]
  440ccc:	cmp	w0, #0x2f
  440cd0:	b.ls	440d60 <wcrtomb@plt+0x3c050>  // b.plast
  440cd4:	ldr	x1, [sp, #40]
  440cd8:	ldr	x0, [sp, #32]
  440cdc:	add	x0, x1, x0
  440ce0:	ldrb	w0, [x0]
  440ce4:	cmp	w0, #0x39
  440ce8:	b.hi	440d60 <wcrtomb@plt+0x3c050>  // b.pmore
  440cec:	b	440d44 <wcrtomb@plt+0x3c034>
  440cf0:	ldr	x1, [sp, #40]
  440cf4:	ldr	x0, [sp, #32]
  440cf8:	add	x0, x1, x0
  440cfc:	ldrb	w0, [x0]
  440d00:	cmp	w0, #0x5c
  440d04:	b.ne	440d18 <wcrtomb@plt+0x3c008>  // b.any
  440d08:	ldr	x0, [sp, #32]
  440d0c:	add	x0, x0, #0x1
  440d10:	str	x0, [sp, #32]
  440d14:	b	440d44 <wcrtomb@plt+0x3c034>
  440d18:	ldr	x1, [sp, #40]
  440d1c:	ldr	x0, [sp, #32]
  440d20:	add	x0, x1, x0
  440d24:	ldrb	w0, [x0]
  440d28:	mov	w1, w0
  440d2c:	ldr	w0, [sp, #56]
  440d30:	cmp	w0, w1
  440d34:	b.ne	440d44 <wcrtomb@plt+0x3c034>  // b.any
  440d38:	ldr	w0, [sp, #60]
  440d3c:	add	w0, w0, #0x1
  440d40:	str	w0, [sp, #60]
  440d44:	ldr	x0, [sp, #32]
  440d48:	add	x0, x0, #0x1
  440d4c:	str	x0, [sp, #32]
  440d50:	ldr	x1, [sp, #32]
  440d54:	ldr	x0, [sp, #24]
  440d58:	cmp	x1, x0
  440d5c:	b.cc	440c30 <wcrtomb@plt+0x3bf20>  // b.lo, b.ul, b.last
  440d60:	ldr	w0, [sp, #60]
  440d64:	cmp	w0, #0x3
  440d68:	b.ne	440d94 <wcrtomb@plt+0x3c084>  // b.any
  440d6c:	ldr	x1, [sp, #32]
  440d70:	ldr	x0, [sp, #24]
  440d74:	cmp	x1, x0
  440d78:	b.cs	440d94 <wcrtomb@plt+0x3c084>  // b.hs, b.nlast
  440d7c:	ldr	x1, [sp, #40]
  440d80:	ldr	x0, [sp, #32]
  440d84:	add	x0, x1, x0
  440d88:	ldrb	w0, [x0]
  440d8c:	cmp	w0, #0x3b
  440d90:	b.eq	440b7c <wcrtomb@plt+0x3be6c>  // b.none
  440d94:	ldr	x0, [sp, #32]
  440d98:	ldp	x29, x30, [sp], #64
  440d9c:	ret
  440da0:	sub	sp, sp, #0x10
  440da4:	str	x0, [sp, #8]
  440da8:	str	w1, [sp, #4]
  440dac:	ldr	w0, [sp, #4]
  440db0:	cmp	w0, #0x0
  440db4:	b.eq	440dc4 <wcrtomb@plt+0x3c0b4>  // b.none
  440db8:	ldr	x0, [sp, #8]
  440dbc:	ldr	x0, [x0, #184]
  440dc0:	b	440dd0 <wcrtomb@plt+0x3c0c0>
  440dc4:	ldr	x0, [sp, #8]
  440dc8:	ldr	x0, [x0, #184]
  440dcc:	add	x0, x0, #0x1
  440dd0:	add	sp, sp, #0x10
  440dd4:	ret
  440dd8:	stp	x29, x30, [sp, #-32]!
  440ddc:	mov	x29, sp
  440de0:	str	x0, [sp, #24]
  440de4:	ldr	x0, [sp, #24]
  440de8:	ldr	w0, [x0, #32]
  440dec:	and	w0, w0, #0x1000
  440df0:	cmp	w0, #0x0
  440df4:	b.ne	440e0c <wcrtomb@plt+0x3c0fc>  // b.any
  440df8:	ldr	x0, [sp, #24]
  440dfc:	ldr	w0, [x0, #36]
  440e00:	and	w0, w0, #0x80
  440e04:	cmp	w0, #0x0
  440e08:	b.eq	440e14 <wcrtomb@plt+0x3c104>  // b.none
  440e0c:	mov	w0, #0x1                   	// #1
  440e10:	b	440e18 <wcrtomb@plt+0x3c108>
  440e14:	mov	w0, #0x0                   	// #0
  440e18:	mov	w1, w0
  440e1c:	ldr	x0, [sp, #24]
  440e20:	bl	440da0 <wcrtomb@plt+0x3c090>
  440e24:	ldp	x29, x30, [sp], #32
  440e28:	ret
  440e2c:	stp	x29, x30, [sp, #-32]!
  440e30:	mov	x29, sp
  440e34:	str	x0, [sp, #24]
  440e38:	ldr	x0, [sp, #24]
  440e3c:	ldr	w0, [x0, #32]
  440e40:	and	w0, w0, #0x1000
  440e44:	mov	w1, w0
  440e48:	ldr	x0, [sp, #24]
  440e4c:	bl	440da0 <wcrtomb@plt+0x3c090>
  440e50:	ldp	x29, x30, [sp], #32
  440e54:	ret
  440e58:	stp	x29, x30, [sp, #-96]!
  440e5c:	mov	x29, sp
  440e60:	str	x0, [sp, #40]
  440e64:	str	x1, [sp, #32]
  440e68:	str	x2, [sp, #24]
  440e6c:	ldr	x0, [sp, #40]
  440e70:	ldr	x0, [x0, #168]
  440e74:	str	x0, [sp, #72]
  440e78:	ldr	x0, [sp, #40]
  440e7c:	ldr	x0, [x0, #176]
  440e80:	str	x0, [sp, #64]
  440e84:	ldr	x1, [sp, #72]
  440e88:	ldr	x0, [sp, #32]
  440e8c:	add	x0, x1, x0
  440e90:	ldrb	w0, [x0]
  440e94:	strb	w0, [sp, #63]
  440e98:	ldr	x0, [sp, #32]
  440e9c:	add	x0, x0, #0x1
  440ea0:	str	x0, [sp, #88]
  440ea4:	b	440ee4 <wcrtomb@plt+0x3c1d4>
  440ea8:	ldrb	w0, [sp, #63]
  440eac:	cmp	w0, #0x22
  440eb0:	b.ne	440ed8 <wcrtomb@plt+0x3c1c8>  // b.any
  440eb4:	ldr	x1, [sp, #72]
  440eb8:	ldr	x0, [sp, #88]
  440ebc:	add	x0, x1, x0
  440ec0:	ldrb	w0, [x0]
  440ec4:	cmp	w0, #0x5c
  440ec8:	b.ne	440ed8 <wcrtomb@plt+0x3c1c8>  // b.any
  440ecc:	ldr	x0, [sp, #88]
  440ed0:	add	x0, x0, #0x1
  440ed4:	str	x0, [sp, #88]
  440ed8:	ldr	x0, [sp, #88]
  440edc:	add	x0, x0, #0x1
  440ee0:	str	x0, [sp, #88]
  440ee4:	ldr	x1, [sp, #88]
  440ee8:	ldr	x0, [sp, #64]
  440eec:	cmp	x1, x0
  440ef0:	b.cs	440f10 <wcrtomb@plt+0x3c200>  // b.hs, b.nlast
  440ef4:	ldr	x1, [sp, #72]
  440ef8:	ldr	x0, [sp, #88]
  440efc:	add	x0, x1, x0
  440f00:	ldrb	w0, [x0]
  440f04:	ldrb	w1, [sp, #63]
  440f08:	cmp	w1, w0
  440f0c:	b.ne	440ea8 <wcrtomb@plt+0x3c198>  // b.any
  440f10:	ldr	x1, [sp, #88]
  440f14:	ldr	x0, [sp, #64]
  440f18:	cmp	x1, x0
  440f1c:	b.cs	440fa4 <wcrtomb@plt+0x3c294>  // b.hs, b.nlast
  440f20:	ldr	x1, [sp, #72]
  440f24:	ldr	x0, [sp, #88]
  440f28:	add	x0, x1, x0
  440f2c:	ldrb	w0, [x0]
  440f30:	ldrb	w1, [sp, #63]
  440f34:	cmp	w1, w0
  440f38:	b.ne	440fa4 <wcrtomb@plt+0x3c294>  // b.any
  440f3c:	mov	w0, #0x104                 	// #260
  440f40:	str	w0, [sp, #84]
  440f44:	ldrb	w0, [sp, #63]
  440f48:	cmp	w0, #0x27
  440f4c:	b.ne	440f5c <wcrtomb@plt+0x3c24c>  // b.any
  440f50:	ldr	w0, [sp, #84]
  440f54:	orr	w0, w0, #0x8
  440f58:	str	w0, [sp, #84]
  440f5c:	ldr	x0, [sp, #32]
  440f60:	add	x0, x0, #0x1
  440f64:	ldr	w1, [sp, #84]
  440f68:	mov	w3, w1
  440f6c:	ldr	x2, [sp, #88]
  440f70:	mov	x1, x0
  440f74:	ldr	x0, [sp, #40]
  440f78:	bl	43d754 <wcrtomb@plt+0x38a44>
  440f7c:	cmp	w0, #0x0
  440f80:	b.eq	440f8c <wcrtomb@plt+0x3c27c>  // b.none
  440f84:	mov	w0, #0x2                   	// #2
  440f88:	b	440fc0 <wcrtomb@plt+0x3c2b0>
  440f8c:	ldr	x0, [sp, #24]
  440f90:	ldr	x1, [sp, #88]
  440f94:	str	x1, [x0]
  440f98:	nop
  440f9c:	mov	w0, #0x0                   	// #0
  440fa0:	b	440fc0 <wcrtomb@plt+0x3c2b0>
  440fa4:	ldr	x0, [sp, #40]
  440fa8:	ldr	x1, [sp, #32]
  440fac:	str	x1, [x0, #184]
  440fb0:	mov	w1, #0x1                   	// #1
  440fb4:	ldr	x0, [sp, #40]
  440fb8:	bl	43c93c <wcrtomb@plt+0x37c2c>
  440fbc:	mov	w0, #0x2                   	// #2
  440fc0:	ldp	x29, x30, [sp], #96
  440fc4:	ret
  440fc8:	stp	x29, x30, [sp, #-112]!
  440fcc:	mov	x29, sp
  440fd0:	str	x0, [sp, #40]
  440fd4:	str	x1, [sp, #32]
  440fd8:	str	w2, [sp, #28]
  440fdc:	ldr	x0, [sp, #40]
  440fe0:	ldr	x0, [x0, #176]
  440fe4:	str	x0, [sp, #80]
  440fe8:	ldr	x0, [sp, #40]
  440fec:	ldr	x0, [x0, #168]
  440ff0:	str	x0, [sp, #72]
  440ff4:	ldr	x0, [sp, #40]
  440ff8:	ldr	x0, [x0, #64]
  440ffc:	str	x0, [sp, #64]
  441000:	str	wzr, [sp, #108]
  441004:	str	wzr, [sp, #104]
  441008:	ldr	x0, [sp, #40]
  44100c:	ldr	x0, [x0, #216]
  441010:	str	x0, [sp, #96]
  441014:	ldr	x0, [sp, #32]
  441018:	str	x0, [sp, #56]
  44101c:	ldr	x0, [sp, #56]
  441020:	ldr	x1, [sp, #80]
  441024:	cmp	x1, x0
  441028:	b.hi	44103c <wcrtomb@plt+0x3c32c>  // b.pmore
  44102c:	ldr	x0, [sp, #40]
  441030:	str	wzr, [x0, #192]
  441034:	mov	w0, #0x0                   	// #0
  441038:	b	4415a8 <wcrtomb@plt+0x3c898>
  44103c:	ldr	x0, [sp, #56]
  441040:	str	x0, [sp, #32]
  441044:	ldr	x0, [sp, #40]
  441048:	ldr	w0, [x0, #32]
  44104c:	and	w0, w0, #0x2000
  441050:	cmp	w0, #0x0
  441054:	b.eq	4410d8 <wcrtomb@plt+0x3c3c8>  // b.none
  441058:	ldr	x0, [sp, #56]
  44105c:	ldr	x1, [sp, #72]
  441060:	add	x0, x1, x0
  441064:	ldrb	w0, [x0]
  441068:	cmp	w0, #0x73
  44106c:	b.ne	4410d8 <wcrtomb@plt+0x3c3c8>  // b.any
  441070:	ldr	x0, [sp, #56]
  441074:	add	x0, x0, #0x3
  441078:	ldr	x1, [sp, #80]
  44107c:	cmp	x1, x0
  441080:	b.ls	4410d8 <wcrtomb@plt+0x3c3c8>  // b.plast
  441084:	ldr	x0, [sp, #56]
  441088:	add	x0, x0, #0x1
  44108c:	ldr	x1, [sp, #72]
  441090:	add	x0, x1, x0
  441094:	ldrb	w0, [x0]
  441098:	mov	w1, w0
  44109c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4410a0:	add	x0, x0, #0xa70
  4410a4:	bl	404930 <strchr@plt>
  4410a8:	cmp	x0, #0x0
  4410ac:	b.eq	4410d8 <wcrtomb@plt+0x3c3c8>  // b.none
  4410b0:	mov	w0, #0x20                  	// #32
  4410b4:	str	w0, [sp, #104]
  4410b8:	ldr	x0, [sp, #56]
  4410bc:	ldr	x2, [sp, #80]
  4410c0:	mov	x1, x0
  4410c4:	ldr	x0, [sp, #72]
  4410c8:	bl	440b68 <wcrtomb@plt+0x3be58>
  4410cc:	sxtw	x0, w0
  4410d0:	str	x0, [sp, #56]
  4410d4:	b	4414b4 <wcrtomb@plt+0x3c7a4>
  4410d8:	ldr	w0, [sp, #28]
  4410dc:	cmp	w0, #0x0
  4410e0:	b.ne	44142c <wcrtomb@plt+0x3c71c>  // b.any
  4410e4:	ldr	x0, [sp, #40]
  4410e8:	ldr	x2, [x0, #56]
  4410ec:	ldr	x0, [sp, #56]
  4410f0:	ldr	x1, [sp, #72]
  4410f4:	add	x0, x1, x0
  4410f8:	ldrb	w0, [x0]
  4410fc:	mov	w1, w0
  441100:	mov	x0, x2
  441104:	bl	404930 <strchr@plt>
  441108:	cmp	x0, #0x0
  44110c:	b.ne	441448 <wcrtomb@plt+0x3c738>  // b.any
  441110:	b	44142c <wcrtomb@plt+0x3c71c>
  441114:	ldr	x0, [sp, #64]
  441118:	cmp	x0, #0x0
  44111c:	b.eq	4411c4 <wcrtomb@plt+0x3c4b4>  // b.none
  441120:	ldr	x0, [sp, #56]
  441124:	ldr	x1, [sp, #72]
  441128:	add	x0, x1, x0
  44112c:	ldrb	w0, [x0]
  441130:	mov	w1, w0
  441134:	ldr	x0, [sp, #64]
  441138:	bl	404930 <strchr@plt>
  44113c:	cmp	x0, #0x0
  441140:	b.eq	4411c4 <wcrtomb@plt+0x3c4b4>  // b.none
  441144:	ldr	x0, [sp, #56]
  441148:	add	x0, x0, #0x1
  44114c:	str	x0, [sp, #88]
  441150:	b	441160 <wcrtomb@plt+0x3c450>
  441154:	ldr	x0, [sp, #88]
  441158:	add	x0, x0, #0x1
  44115c:	str	x0, [sp, #88]
  441160:	ldr	x1, [sp, #88]
  441164:	ldr	x0, [sp, #80]
  441168:	cmp	x1, x0
  44116c:	b.cs	441188 <wcrtomb@plt+0x3c478>  // b.hs, b.nlast
  441170:	ldr	x1, [sp, #72]
  441174:	ldr	x0, [sp, #88]
  441178:	add	x0, x1, x0
  44117c:	ldrb	w0, [x0]
  441180:	cmp	w0, #0xa
  441184:	b.ne	441154 <wcrtomb@plt+0x3c444>  // b.any
  441188:	ldr	x0, [sp, #56]
  44118c:	mov	w3, #0x0                   	// #0
  441190:	mov	x2, x0
  441194:	ldr	x1, [sp, #32]
  441198:	ldr	x0, [sp, #40]
  44119c:	bl	43d754 <wcrtomb@plt+0x38a44>
  4411a0:	cmp	w0, #0x0
  4411a4:	b.eq	4411b0 <wcrtomb@plt+0x3c4a0>  // b.none
  4411a8:	mov	w0, #0x2                   	// #2
  4411ac:	b	4415a8 <wcrtomb@plt+0x3c898>
  4411b0:	ldr	x0, [sp, #40]
  4411b4:	ldr	x1, [sp, #88]
  4411b8:	str	x1, [x0, #184]
  4411bc:	mov	w0, #0x1                   	// #1
  4411c0:	b	4415a8 <wcrtomb@plt+0x3c898>
  4411c4:	ldr	x0, [sp, #40]
  4411c8:	ldr	w0, [x0, #32]
  4411cc:	and	w0, w0, #0x600
  4411d0:	cmp	w0, #0x0
  4411d4:	b.eq	441310 <wcrtomb@plt+0x3c600>  // b.none
  4411d8:	ldr	x0, [sp, #56]
  4411dc:	ldr	x1, [sp, #72]
  4411e0:	add	x0, x1, x0
  4411e4:	ldrb	w0, [x0]
  4411e8:	cmp	w0, #0x5c
  4411ec:	b.ne	44121c <wcrtomb@plt+0x3c50c>  // b.any
  4411f0:	ldr	x0, [sp, #56]
  4411f4:	add	x0, x0, #0x1
  4411f8:	str	x0, [sp, #56]
  4411fc:	ldr	x0, [sp, #56]
  441200:	ldr	x1, [sp, #80]
  441204:	cmp	x1, x0
  441208:	b.eq	441440 <wcrtomb@plt+0x3c730>  // b.none
  44120c:	ldr	x0, [sp, #56]
  441210:	add	x0, x0, #0x1
  441214:	str	x0, [sp, #56]
  441218:	b	44142c <wcrtomb@plt+0x3c71c>
  44121c:	ldr	x0, [sp, #40]
  441220:	ldr	w0, [x0, #32]
  441224:	and	w0, w0, #0x200
  441228:	cmp	w0, #0x0
  44122c:	b.eq	441248 <wcrtomb@plt+0x3c538>  // b.none
  441230:	ldr	x0, [sp, #56]
  441234:	ldr	x1, [sp, #72]
  441238:	add	x0, x1, x0
  44123c:	ldrb	w0, [x0]
  441240:	cmp	w0, #0x27
  441244:	b.eq	441274 <wcrtomb@plt+0x3c564>  // b.none
  441248:	ldr	x0, [sp, #40]
  44124c:	ldr	w0, [x0, #32]
  441250:	and	w0, w0, #0x400
  441254:	cmp	w0, #0x0
  441258:	b.eq	441310 <wcrtomb@plt+0x3c600>  // b.none
  44125c:	ldr	x0, [sp, #56]
  441260:	ldr	x1, [sp, #72]
  441264:	add	x0, x1, x0
  441268:	ldrb	w0, [x0]
  44126c:	cmp	w0, #0x22
  441270:	b.ne	441310 <wcrtomb@plt+0x3c600>  // b.any
  441274:	ldr	w0, [sp, #108]
  441278:	cmp	w0, #0x0
  44127c:	b.eq	4412ac <wcrtomb@plt+0x3c59c>  // b.none
  441280:	ldr	x0, [sp, #40]
  441284:	ldr	x0, [x0, #216]
  441288:	cmp	x0, #0x0
  44128c:	b.eq	4412ac <wcrtomb@plt+0x3c59c>  // b.none
  441290:	ldr	x0, [sp, #40]
  441294:	ldr	x0, [x0, #216]
  441298:	ldr	w1, [x0, #16]
  44129c:	ldr	x0, [sp, #40]
  4412a0:	ldr	x0, [x0, #216]
  4412a4:	orr	w1, w1, #0x10
  4412a8:	str	w1, [x0, #16]
  4412ac:	ldr	x0, [sp, #56]
  4412b0:	mov	w3, #0x10                  	// #16
  4412b4:	mov	x2, x0
  4412b8:	ldr	x1, [sp, #32]
  4412bc:	ldr	x0, [sp, #40]
  4412c0:	bl	43d754 <wcrtomb@plt+0x38a44>
  4412c4:	cmp	w0, #0x0
  4412c8:	b.eq	4412d4 <wcrtomb@plt+0x3c5c4>  // b.none
  4412cc:	mov	w0, #0x2                   	// #2
  4412d0:	b	4415a8 <wcrtomb@plt+0x3c898>
  4412d4:	ldr	x0, [sp, #56]
  4412d8:	add	x1, sp, #0x38
  4412dc:	mov	x2, x1
  4412e0:	mov	x1, x0
  4412e4:	ldr	x0, [sp, #40]
  4412e8:	bl	440e58 <wcrtomb@plt+0x3c148>
  4412ec:	cmp	w0, #0x0
  4412f0:	b.eq	4412fc <wcrtomb@plt+0x3c5ec>  // b.none
  4412f4:	mov	w0, #0x2                   	// #2
  4412f8:	b	4415a8 <wcrtomb@plt+0x3c898>
  4412fc:	ldr	x0, [sp, #56]
  441300:	add	x0, x0, #0x1
  441304:	str	x0, [sp, #32]
  441308:	mov	w0, #0x1                   	// #1
  44130c:	str	w0, [sp, #108]
  441310:	ldr	x0, [sp, #56]
  441314:	ldr	x1, [sp, #72]
  441318:	add	x0, x1, x0
  44131c:	ldrb	w0, [x0]
  441320:	cmp	w0, #0x24
  441324:	b.ne	4413e8 <wcrtomb@plt+0x3c6d8>  // b.any
  441328:	ldr	x0, [sp, #40]
  44132c:	ldr	w0, [x0, #32]
  441330:	and	w0, w0, #0x40
  441334:	cmp	w0, #0x0
  441338:	b.ne	441388 <wcrtomb@plt+0x3c678>  // b.any
  44133c:	ldr	x0, [sp, #56]
  441340:	add	x0, x0, #0x1
  441344:	ldr	x1, [sp, #72]
  441348:	add	x0, x1, x0
  44134c:	ldrb	w0, [x0]
  441350:	cmp	w0, #0x7b
  441354:	b.ne	441388 <wcrtomb@plt+0x3c678>  // b.any
  441358:	ldr	x0, [sp, #56]
  44135c:	add	x1, x0, #0x2
  441360:	add	x2, sp, #0x38
  441364:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  441368:	add	x4, x0, #0x9c8
  44136c:	mov	x3, x2
  441370:	ldr	x2, [sp, #80]
  441374:	ldr	x0, [sp, #72]
  441378:	bl	43e50c <wcrtomb@plt+0x397fc>
  44137c:	cmp	w0, #0x0
  441380:	b.ne	441388 <wcrtomb@plt+0x3c678>  // b.any
  441384:	b	44142c <wcrtomb@plt+0x3c71c>
  441388:	ldr	x0, [sp, #40]
  44138c:	ldr	w0, [x0, #32]
  441390:	and	w0, w0, #0x4
  441394:	cmp	w0, #0x0
  441398:	b.ne	4413e8 <wcrtomb@plt+0x3c6d8>  // b.any
  44139c:	ldr	x0, [sp, #56]
  4413a0:	add	x0, x0, #0x1
  4413a4:	ldr	x1, [sp, #72]
  4413a8:	add	x0, x1, x0
  4413ac:	ldrb	w0, [x0]
  4413b0:	cmp	w0, #0x28
  4413b4:	b.ne	4413e8 <wcrtomb@plt+0x3c6d8>  // b.any
  4413b8:	ldr	x0, [sp, #56]
  4413bc:	add	x1, x0, #0x2
  4413c0:	add	x2, sp, #0x38
  4413c4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4413c8:	add	x4, x0, #0xa40
  4413cc:	mov	x3, x2
  4413d0:	ldr	x2, [sp, #80]
  4413d4:	ldr	x0, [sp, #72]
  4413d8:	bl	43e50c <wcrtomb@plt+0x397fc>
  4413dc:	cmp	w0, #0x0
  4413e0:	b.ne	4413e8 <wcrtomb@plt+0x3c6d8>  // b.any
  4413e4:	b	44142c <wcrtomb@plt+0x3c71c>
  4413e8:	ldr	w0, [sp, #28]
  4413ec:	cmp	w0, #0x0
  4413f0:	b.ne	441420 <wcrtomb@plt+0x3c710>  // b.any
  4413f4:	ldr	x0, [sp, #40]
  4413f8:	ldr	x2, [x0, #56]
  4413fc:	ldr	x0, [sp, #56]
  441400:	ldr	x1, [sp, #72]
  441404:	add	x0, x1, x0
  441408:	ldrb	w0, [x0]
  44140c:	mov	w1, w0
  441410:	mov	x0, x2
  441414:	bl	404930 <strchr@plt>
  441418:	cmp	x0, #0x0
  44141c:	b.ne	4414b0 <wcrtomb@plt+0x3c7a0>  // b.any
  441420:	ldr	x0, [sp, #56]
  441424:	add	x0, x0, #0x1
  441428:	str	x0, [sp, #56]
  44142c:	ldr	x0, [sp, #56]
  441430:	ldr	x1, [sp, #80]
  441434:	cmp	x1, x0
  441438:	b.hi	441114 <wcrtomb@plt+0x3c404>  // b.pmore
  44143c:	b	4414b0 <wcrtomb@plt+0x3c7a0>
  441440:	nop
  441444:	b	4414b0 <wcrtomb@plt+0x3c7a0>
  441448:	ldr	x0, [sp, #40]
  44144c:	ldr	w0, [x0, #32]
  441450:	and	w0, w0, #0x1000
  441454:	cmp	w0, #0x0
  441458:	b.ne	441470 <wcrtomb@plt+0x3c760>  // b.any
  44145c:	ldr	x0, [sp, #40]
  441460:	ldr	w0, [x0, #36]
  441464:	and	w0, w0, #0x80
  441468:	cmp	w0, #0x0
  44146c:	b.eq	44148c <wcrtomb@plt+0x3c77c>  // b.none
  441470:	ldr	x0, [sp, #56]
  441474:	add	x0, x0, #0x1
  441478:	str	x0, [sp, #56]
  44147c:	ldr	w0, [sp, #104]
  441480:	orr	w0, w0, #0x40
  441484:	str	w0, [sp, #104]
  441488:	b	4414b4 <wcrtomb@plt+0x3c7a4>
  44148c:	ldr	x0, [sp, #40]
  441490:	ldr	w0, [x0, #32]
  441494:	and	w0, w0, #0x800
  441498:	cmp	w0, #0x0
  44149c:	b.ne	4414b4 <wcrtomb@plt+0x3c7a4>  // b.any
  4414a0:	ldr	w0, [sp, #104]
  4414a4:	orr	w0, w0, #0x100
  4414a8:	str	w0, [sp, #104]
  4414ac:	b	4414b4 <wcrtomb@plt+0x3c7a4>
  4414b0:	nop
  4414b4:	ldr	w0, [sp, #108]
  4414b8:	cmp	w0, #0x0
  4414bc:	b.eq	4414fc <wcrtomb@plt+0x3c7ec>  // b.none
  4414c0:	ldr	x0, [sp, #56]
  4414c4:	ldr	x1, [sp, #32]
  4414c8:	cmp	x1, x0
  4414cc:	b.cs	4414fc <wcrtomb@plt+0x3c7ec>  // b.hs, b.nlast
  4414d0:	ldr	x0, [sp, #40]
  4414d4:	ldr	x0, [x0, #216]
  4414d8:	cmp	x0, #0x0
  4414dc:	b.eq	4414fc <wcrtomb@plt+0x3c7ec>  // b.none
  4414e0:	ldr	x0, [sp, #40]
  4414e4:	ldr	x0, [x0, #216]
  4414e8:	ldr	w1, [x0, #16]
  4414ec:	ldr	x0, [sp, #40]
  4414f0:	ldr	x0, [x0, #216]
  4414f4:	orr	w1, w1, #0x10
  4414f8:	str	w1, [x0, #16]
  4414fc:	ldr	x0, [sp, #56]
  441500:	ldr	w1, [sp, #104]
  441504:	mov	w3, w1
  441508:	mov	x2, x0
  44150c:	ldr	x1, [sp, #32]
  441510:	ldr	x0, [sp, #40]
  441514:	bl	43d754 <wcrtomb@plt+0x38a44>
  441518:	cmp	w0, #0x0
  44151c:	b.eq	441528 <wcrtomb@plt+0x3c818>  // b.none
  441520:	mov	w0, #0x2                   	// #2
  441524:	b	4415a8 <wcrtomb@plt+0x3c898>
  441528:	ldr	x1, [sp, #56]
  44152c:	ldr	x0, [sp, #40]
  441530:	str	x1, [x0, #184]
  441534:	ldr	x0, [sp, #40]
  441538:	ldr	w0, [x0, #32]
  44153c:	and	w0, w0, #0x20000000
  441540:	cmp	w0, #0x0
  441544:	b.eq	441550 <wcrtomb@plt+0x3c840>  // b.none
  441548:	mov	w0, #0x0                   	// #0
  44154c:	b	4415a8 <wcrtomb@plt+0x3c898>
  441550:	ldr	w0, [sp, #28]
  441554:	cmp	w0, #0x0
  441558:	b.eq	4415a4 <wcrtomb@plt+0x3c894>  // b.none
  44155c:	ldr	x0, [sp, #96]
  441560:	cmp	x0, #0x0
  441564:	b.ne	441598 <wcrtomb@plt+0x3c888>  // b.any
  441568:	ldr	x0, [sp, #40]
  44156c:	ldr	x0, [x0, #208]
  441570:	str	x0, [sp, #96]
  441574:	b	441598 <wcrtomb@plt+0x3c888>
  441578:	ldr	x0, [sp, #96]
  44157c:	ldr	w0, [x0, #16]
  441580:	orr	w1, w0, #0x4
  441584:	ldr	x0, [sp, #96]
  441588:	str	w1, [x0, #16]
  44158c:	ldr	x0, [sp, #96]
  441590:	ldr	x0, [x0, #8]
  441594:	str	x0, [sp, #96]
  441598:	ldr	x0, [sp, #96]
  44159c:	cmp	x0, #0x0
  4415a0:	b.ne	441578 <wcrtomb@plt+0x3c868>  // b.any
  4415a4:	mov	w0, #0x1                   	// #1
  4415a8:	ldp	x29, x30, [sp], #112
  4415ac:	ret
  4415b0:	stp	x29, x30, [sp, #-64]!
  4415b4:	mov	x29, sp
  4415b8:	str	x0, [sp, #40]
  4415bc:	str	x1, [sp, #32]
  4415c0:	str	w2, [sp, #28]
  4415c4:	str	w3, [sp, #24]
  4415c8:	str	wzr, [sp, #60]
  4415cc:	str	wzr, [sp, #56]
  4415d0:	b	441680 <wcrtomb@plt+0x3c970>
  4415d4:	ldr	x0, [sp, #32]
  4415d8:	ldrb	w0, [x0]
  4415dc:	str	w0, [sp, #52]
  4415e0:	ldr	w0, [sp, #52]
  4415e4:	cmp	w0, #0x7f
  4415e8:	b.gt	441690 <wcrtomb@plt+0x3c980>
  4415ec:	ldr	w0, [sp, #52]
  4415f0:	cmp	w0, #0x2f
  4415f4:	b.ls	441610 <wcrtomb@plt+0x3c900>  // b.plast
  4415f8:	ldr	w0, [sp, #52]
  4415fc:	cmp	w0, #0x39
  441600:	b.hi	441610 <wcrtomb@plt+0x3c900>  // b.pmore
  441604:	ldr	w0, [sp, #52]
  441608:	sub	w0, w0, #0x30
  44160c:	b	44163c <wcrtomb@plt+0x3c92c>
  441610:	ldr	w1, [sp, #52]
  441614:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  441618:	add	x0, x0, #0xa98
  44161c:	bl	404930 <strchr@plt>
  441620:	cmp	x0, #0x0
  441624:	b.eq	441638 <wcrtomb@plt+0x3c928>  // b.none
  441628:	ldr	w0, [sp, #52]
  44162c:	bl	404400 <toupper@plt>
  441630:	sub	w0, w0, #0x37
  441634:	b	44163c <wcrtomb@plt+0x3c92c>
  441638:	mov	w0, #0xff                  	// #255
  44163c:	str	w0, [sp, #52]
  441640:	ldr	w1, [sp, #52]
  441644:	ldr	w0, [sp, #28]
  441648:	cmp	w1, w0
  44164c:	b.ge	441690 <wcrtomb@plt+0x3c980>  // b.tcont
  441650:	ldr	w1, [sp, #56]
  441654:	ldr	w0, [sp, #28]
  441658:	mul	w0, w1, w0
  44165c:	ldr	w1, [sp, #52]
  441660:	add	w0, w1, w0
  441664:	str	w0, [sp, #56]
  441668:	ldr	w0, [sp, #60]
  44166c:	add	w0, w0, #0x1
  441670:	str	w0, [sp, #60]
  441674:	ldr	x0, [sp, #32]
  441678:	add	x0, x0, #0x1
  44167c:	str	x0, [sp, #32]
  441680:	ldr	w1, [sp, #60]
  441684:	ldr	w0, [sp, #24]
  441688:	cmp	w1, w0
  44168c:	b.lt	4415d4 <wcrtomb@plt+0x3c8c4>  // b.tstop
  441690:	ldr	x0, [sp, #40]
  441694:	ldr	w1, [sp, #56]
  441698:	str	w1, [x0]
  44169c:	ldr	w0, [sp, #60]
  4416a0:	ldp	x29, x30, [sp], #64
  4416a4:	ret
  4416a8:	stp	x29, x30, [sp, #-64]!
  4416ac:	mov	x29, sp
  4416b0:	str	x0, [sp, #40]
  4416b4:	str	w1, [sp, #36]
  4416b8:	str	x2, [sp, #24]
  4416bc:	str	xzr, [sp, #56]
  4416c0:	ldr	x0, [sp, #24]
  4416c4:	str	wzr, [x0]
  4416c8:	b	4417e4 <wcrtomb@plt+0x3cad4>
  4416cc:	ldr	x0, [sp, #40]
  4416d0:	ldrb	w0, [x0]
  4416d4:	mov	w1, w0
  4416d8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4416dc:	add	x0, x0, #0xaa8
  4416e0:	bl	404930 <strchr@plt>
  4416e4:	cmp	x0, #0x0
  4416e8:	b.eq	4416f8 <wcrtomb@plt+0x3c9e8>  // b.none
  4416ec:	ldr	x0, [sp, #24]
  4416f0:	mov	w1, #0x1                   	// #1
  4416f4:	str	w1, [x0]
  4416f8:	ldr	x0, [sp, #40]
  4416fc:	ldrb	w0, [x0]
  441700:	cmp	w0, #0x20
  441704:	b.ne	441718 <wcrtomb@plt+0x3ca08>  // b.any
  441708:	ldr	x0, [sp, #56]
  44170c:	add	x0, x0, #0x1
  441710:	str	x0, [sp, #56]
  441714:	b	4417d8 <wcrtomb@plt+0x3cac8>
  441718:	ldr	x0, [sp, #40]
  44171c:	ldrb	w0, [x0]
  441720:	cmp	w0, #0x22
  441724:	b.ne	441738 <wcrtomb@plt+0x3ca28>  // b.any
  441728:	ldr	x0, [sp, #56]
  44172c:	add	x0, x0, #0x2
  441730:	str	x0, [sp, #56]
  441734:	b	4417d8 <wcrtomb@plt+0x3cac8>
  441738:	ldr	x0, [sp, #40]
  44173c:	ldrb	w0, [x0]
  441740:	cmp	w0, #0x9
  441744:	b.eq	44178c <wcrtomb@plt+0x3ca7c>  // b.none
  441748:	ldr	x0, [sp, #40]
  44174c:	ldrb	w0, [x0]
  441750:	cmp	w0, #0x5c
  441754:	b.eq	44178c <wcrtomb@plt+0x3ca7c>  // b.none
  441758:	ldr	x0, [sp, #40]
  44175c:	ldrb	w0, [x0]
  441760:	cmp	w0, #0x1f
  441764:	b.ls	44178c <wcrtomb@plt+0x3ca7c>  // b.plast
  441768:	ldr	x0, [sp, #40]
  44176c:	ldrb	w0, [x0]
  441770:	sxtb	w0, w0
  441774:	cmp	w0, #0x0
  441778:	b.lt	44178c <wcrtomb@plt+0x3ca7c>  // b.tstop
  44177c:	ldr	x0, [sp, #56]
  441780:	add	x0, x0, #0x1
  441784:	str	x0, [sp, #56]
  441788:	b	4417d8 <wcrtomb@plt+0x3cac8>
  44178c:	ldr	w0, [sp, #36]
  441790:	cmp	w0, #0x0
  441794:	b.eq	4417a8 <wcrtomb@plt+0x3ca98>  // b.none
  441798:	ldr	x0, [sp, #56]
  44179c:	add	x0, x0, #0x3
  4417a0:	str	x0, [sp, #56]
  4417a4:	b	4417d8 <wcrtomb@plt+0x3cac8>
  4417a8:	ldr	x0, [sp, #40]
  4417ac:	ldrb	w0, [x0]
  4417b0:	bl	441910 <wcrtomb@plt+0x3cc00>
  4417b4:	cmp	w0, #0x0
  4417b8:	b.eq	4417cc <wcrtomb@plt+0x3cabc>  // b.none
  4417bc:	ldr	x0, [sp, #56]
  4417c0:	add	x0, x0, #0x2
  4417c4:	str	x0, [sp, #56]
  4417c8:	b	4417d8 <wcrtomb@plt+0x3cac8>
  4417cc:	ldr	x0, [sp, #56]
  4417d0:	add	x0, x0, #0x4
  4417d4:	str	x0, [sp, #56]
  4417d8:	ldr	x0, [sp, #40]
  4417dc:	add	x0, x0, #0x1
  4417e0:	str	x0, [sp, #40]
  4417e4:	ldr	x0, [sp, #40]
  4417e8:	ldrb	w0, [x0]
  4417ec:	cmp	w0, #0x0
  4417f0:	b.ne	4416cc <wcrtomb@plt+0x3c9bc>  // b.any
  4417f4:	ldr	x0, [sp, #56]
  4417f8:	ldp	x29, x30, [sp], #64
  4417fc:	ret
  441800:	sub	sp, sp, #0x10
  441804:	str	x0, [sp, #8]
  441808:	str	w1, [sp, #4]
  44180c:	b	441848 <wcrtomb@plt+0x3cb38>
  441810:	ldr	x0, [sp, #8]
  441814:	add	x1, x0, #0x1
  441818:	str	x1, [sp, #8]
  44181c:	ldrb	w0, [x0]
  441820:	mov	w1, w0
  441824:	ldr	w0, [sp, #4]
  441828:	cmp	w0, w1
  44182c:	b.ne	44183c <wcrtomb@plt+0x3cb2c>  // b.any
  441830:	ldr	x0, [sp, #8]
  441834:	ldrb	w0, [x0]
  441838:	b	441870 <wcrtomb@plt+0x3cb60>
  44183c:	ldr	x0, [sp, #8]
  441840:	add	x0, x0, #0x1
  441844:	str	x0, [sp, #8]
  441848:	ldr	x0, [sp, #8]
  44184c:	ldrb	w0, [x0]
  441850:	cmp	w0, #0x0
  441854:	b.eq	44186c <wcrtomb@plt+0x3cb5c>  // b.none
  441858:	ldr	x0, [sp, #8]
  44185c:	add	x0, x0, #0x1
  441860:	ldrb	w0, [x0]
  441864:	cmp	w0, #0x0
  441868:	b.ne	441810 <wcrtomb@plt+0x3cb00>  // b.any
  44186c:	mov	w0, #0x0                   	// #0
  441870:	add	sp, sp, #0x10
  441874:	ret
  441878:	sub	sp, sp, #0x10
  44187c:	str	x0, [sp, #8]
  441880:	str	w1, [sp, #4]
  441884:	b	4418bc <wcrtomb@plt+0x3cbac>
  441888:	ldr	x0, [sp, #8]
  44188c:	add	x0, x0, #0x1
  441890:	ldrb	w0, [x0]
  441894:	mov	w1, w0
  441898:	ldr	w0, [sp, #4]
  44189c:	cmp	w0, w1
  4418a0:	b.ne	4418b0 <wcrtomb@plt+0x3cba0>  // b.any
  4418a4:	ldr	x0, [sp, #8]
  4418a8:	ldrb	w0, [x0]
  4418ac:	b	4418e4 <wcrtomb@plt+0x3cbd4>
  4418b0:	ldr	x0, [sp, #8]
  4418b4:	add	x0, x0, #0x2
  4418b8:	str	x0, [sp, #8]
  4418bc:	ldr	x0, [sp, #8]
  4418c0:	ldrb	w0, [x0]
  4418c4:	cmp	w0, #0x0
  4418c8:	b.eq	4418e0 <wcrtomb@plt+0x3cbd0>  // b.none
  4418cc:	ldr	x0, [sp, #8]
  4418d0:	add	x0, x0, #0x1
  4418d4:	ldrb	w0, [x0]
  4418d8:	cmp	w0, #0x0
  4418dc:	b.ne	441888 <wcrtomb@plt+0x3cb78>  // b.any
  4418e0:	mov	w0, #0x0                   	// #0
  4418e4:	add	sp, sp, #0x10
  4418e8:	ret
  4418ec:	stp	x29, x30, [sp, #-32]!
  4418f0:	mov	x29, sp
  4418f4:	str	w0, [sp, #28]
  4418f8:	ldr	w1, [sp, #28]
  4418fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  441900:	add	x0, x0, #0x2a8
  441904:	bl	441800 <wcrtomb@plt+0x3caf0>
  441908:	ldp	x29, x30, [sp], #32
  44190c:	ret
  441910:	stp	x29, x30, [sp, #-32]!
  441914:	mov	x29, sp
  441918:	str	w0, [sp, #28]
  44191c:	ldr	w1, [sp, #28]
  441920:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  441924:	add	x0, x0, #0x2a8
  441928:	bl	441878 <wcrtomb@plt+0x3cb68>
  44192c:	ldp	x29, x30, [sp], #32
  441930:	ret
  441934:	stp	x29, x30, [sp, #-80]!
  441938:	mov	x29, sp
  44193c:	str	x0, [sp, #56]
  441940:	str	w1, [sp, #52]
  441944:	str	x2, [sp, #40]
  441948:	str	x3, [sp, #32]
  44194c:	str	x4, [sp, #24]
  441950:	str	wzr, [sp, #76]
  441954:	ldr	w0, [sp, #52]
  441958:	cmp	w0, #0x0
  44195c:	cset	w0, ne  // ne = any
  441960:	and	w0, w0, #0xff
  441964:	str	w0, [sp, #52]
  441968:	b	441d40 <wcrtomb@plt+0x3d030>
  44196c:	ldrsw	x0, [sp, #76]
  441970:	ldr	x1, [sp, #32]
  441974:	add	x0, x1, x0
  441978:	ldrb	w0, [x0]
  44197c:	cmp	w0, #0x5c
  441980:	b.ne	441d14 <wcrtomb@plt+0x3d004>  // b.any
  441984:	ldr	w0, [sp, #76]
  441988:	add	w0, w0, #0x1
  44198c:	str	w0, [sp, #76]
  441990:	ldr	x0, [sp, #56]
  441994:	ldr	w0, [x0, #36]
  441998:	ldr	w1, [sp, #52]
  44199c:	lsl	w1, w1, #2
  4419a0:	mov	w2, #0x40                  	// #64
  4419a4:	lsl	w1, w2, w1
  4419a8:	and	w0, w0, w1
  4419ac:	cmp	w0, #0x0
  4419b0:	b.eq	441ae0 <wcrtomb@plt+0x3cdd0>  // b.none
  4419b4:	ldrsw	x0, [sp, #76]
  4419b8:	ldr	x1, [sp, #32]
  4419bc:	add	x0, x1, x0
  4419c0:	ldrb	w0, [x0]
  4419c4:	cmp	w0, #0x78
  4419c8:	b.eq	4419e4 <wcrtomb@plt+0x3ccd4>  // b.none
  4419cc:	ldrsw	x0, [sp, #76]
  4419d0:	ldr	x1, [sp, #32]
  4419d4:	add	x0, x1, x0
  4419d8:	ldrb	w0, [x0]
  4419dc:	cmp	w0, #0x58
  4419e0:	b.ne	441ae0 <wcrtomb@plt+0x3cdd0>  // b.any
  4419e4:	ldrsw	x0, [sp, #76]
  4419e8:	ldr	x1, [sp, #24]
  4419ec:	sub	x0, x1, x0
  4419f0:	cmp	x0, #0x1
  4419f4:	b.hi	441a3c <wcrtomb@plt+0x3cd2c>  // b.pmore
  4419f8:	ldr	x0, [sp, #40]
  4419fc:	add	x1, x0, #0x1
  441a00:	str	x1, [sp, #40]
  441a04:	mov	w1, #0x5c                  	// #92
  441a08:	strb	w1, [x0]
  441a0c:	ldr	w0, [sp, #76]
  441a10:	add	w1, w0, #0x1
  441a14:	str	w1, [sp, #76]
  441a18:	sxtw	x0, w0
  441a1c:	ldr	x1, [sp, #32]
  441a20:	add	x1, x1, x0
  441a24:	ldr	x0, [sp, #40]
  441a28:	add	x2, x0, #0x1
  441a2c:	str	x2, [sp, #40]
  441a30:	ldrb	w1, [x1]
  441a34:	strb	w1, [x0]
  441a38:	b	441d40 <wcrtomb@plt+0x3d030>
  441a3c:	ldrsw	x0, [sp, #76]
  441a40:	add	x0, x0, #0x1
  441a44:	ldr	x1, [sp, #32]
  441a48:	add	x1, x1, x0
  441a4c:	add	x0, sp, #0x40
  441a50:	mov	w3, #0x2                   	// #2
  441a54:	mov	w2, #0x10                  	// #16
  441a58:	bl	4415b0 <wcrtomb@plt+0x3c8a0>
  441a5c:	str	w0, [sp, #72]
  441a60:	ldr	w0, [sp, #72]
  441a64:	cmp	w0, #0x0
  441a68:	b.ne	441ab0 <wcrtomb@plt+0x3cda0>  // b.any
  441a6c:	ldr	x0, [sp, #40]
  441a70:	add	x1, x0, #0x1
  441a74:	str	x1, [sp, #40]
  441a78:	mov	w1, #0x5c                  	// #92
  441a7c:	strb	w1, [x0]
  441a80:	ldr	w0, [sp, #76]
  441a84:	add	w1, w0, #0x1
  441a88:	str	w1, [sp, #76]
  441a8c:	sxtw	x0, w0
  441a90:	ldr	x1, [sp, #32]
  441a94:	add	x1, x1, x0
  441a98:	ldr	x0, [sp, #40]
  441a9c:	add	x2, x0, #0x1
  441aa0:	str	x2, [sp, #40]
  441aa4:	ldrb	w1, [x1]
  441aa8:	strb	w1, [x0]
  441aac:	b	441d40 <wcrtomb@plt+0x3d030>
  441ab0:	ldr	w2, [sp, #64]
  441ab4:	ldr	x0, [sp, #40]
  441ab8:	add	x1, x0, #0x1
  441abc:	str	x1, [sp, #40]
  441ac0:	and	w1, w2, #0xff
  441ac4:	strb	w1, [x0]
  441ac8:	ldr	w0, [sp, #72]
  441acc:	add	w0, w0, #0x1
  441ad0:	ldr	w1, [sp, #76]
  441ad4:	add	w0, w1, w0
  441ad8:	str	w0, [sp, #76]
  441adc:	b	441d40 <wcrtomb@plt+0x3d030>
  441ae0:	ldr	x0, [sp, #56]
  441ae4:	ldr	w0, [x0, #36]
  441ae8:	ldr	w1, [sp, #52]
  441aec:	lsl	w1, w1, #2
  441af0:	mov	w2, #0x20                  	// #32
  441af4:	lsl	w1, w2, w1
  441af8:	and	w0, w0, w1
  441afc:	cmp	w0, #0x0
  441b00:	b.eq	441c40 <wcrtomb@plt+0x3cf30>  // b.none
  441b04:	ldrsw	x0, [sp, #76]
  441b08:	ldr	x1, [sp, #32]
  441b0c:	add	x0, x1, x0
  441b10:	ldrb	w0, [x0]
  441b14:	sxtb	w0, w0
  441b18:	cmp	w0, #0x0
  441b1c:	b.lt	441c40 <wcrtomb@plt+0x3cf30>  // b.tstop
  441b20:	ldrsw	x0, [sp, #76]
  441b24:	ldr	x1, [sp, #32]
  441b28:	add	x0, x1, x0
  441b2c:	ldrb	w0, [x0]
  441b30:	cmp	w0, #0x2f
  441b34:	b.ls	441c40 <wcrtomb@plt+0x3cf30>  // b.plast
  441b38:	ldrsw	x0, [sp, #76]
  441b3c:	ldr	x1, [sp, #32]
  441b40:	add	x0, x1, x0
  441b44:	ldrb	w0, [x0]
  441b48:	cmp	w0, #0x39
  441b4c:	b.hi	441c40 <wcrtomb@plt+0x3cf30>  // b.pmore
  441b50:	ldrsw	x0, [sp, #76]
  441b54:	ldr	x1, [sp, #24]
  441b58:	cmp	x1, x0
  441b5c:	b.ne	441ba4 <wcrtomb@plt+0x3ce94>  // b.any
  441b60:	ldr	x0, [sp, #40]
  441b64:	add	x1, x0, #0x1
  441b68:	str	x1, [sp, #40]
  441b6c:	mov	w1, #0x5c                  	// #92
  441b70:	strb	w1, [x0]
  441b74:	ldr	w0, [sp, #76]
  441b78:	add	w1, w0, #0x1
  441b7c:	str	w1, [sp, #76]
  441b80:	sxtw	x0, w0
  441b84:	ldr	x1, [sp, #32]
  441b88:	add	x1, x1, x0
  441b8c:	ldr	x0, [sp, #40]
  441b90:	add	x2, x0, #0x1
  441b94:	str	x2, [sp, #40]
  441b98:	ldrb	w1, [x1]
  441b9c:	strb	w1, [x0]
  441ba0:	b	441d40 <wcrtomb@plt+0x3d030>
  441ba4:	ldrsw	x0, [sp, #76]
  441ba8:	ldr	x1, [sp, #32]
  441bac:	add	x1, x1, x0
  441bb0:	add	x0, sp, #0x40
  441bb4:	mov	w3, #0x3                   	// #3
  441bb8:	mov	w2, #0x8                   	// #8
  441bbc:	bl	4415b0 <wcrtomb@plt+0x3c8a0>
  441bc0:	str	w0, [sp, #68]
  441bc4:	ldr	w0, [sp, #68]
  441bc8:	cmp	w0, #0x0
  441bcc:	b.ne	441c14 <wcrtomb@plt+0x3cf04>  // b.any
  441bd0:	ldr	x0, [sp, #40]
  441bd4:	add	x1, x0, #0x1
  441bd8:	str	x1, [sp, #40]
  441bdc:	mov	w1, #0x5c                  	// #92
  441be0:	strb	w1, [x0]
  441be4:	ldr	w0, [sp, #76]
  441be8:	add	w1, w0, #0x1
  441bec:	str	w1, [sp, #76]
  441bf0:	sxtw	x0, w0
  441bf4:	ldr	x1, [sp, #32]
  441bf8:	add	x1, x1, x0
  441bfc:	ldr	x0, [sp, #40]
  441c00:	add	x2, x0, #0x1
  441c04:	str	x2, [sp, #40]
  441c08:	ldrb	w1, [x1]
  441c0c:	strb	w1, [x0]
  441c10:	b	441d40 <wcrtomb@plt+0x3d030>
  441c14:	ldr	w2, [sp, #64]
  441c18:	ldr	x0, [sp, #40]
  441c1c:	add	x1, x0, #0x1
  441c20:	str	x1, [sp, #40]
  441c24:	and	w1, w2, #0xff
  441c28:	strb	w1, [x0]
  441c2c:	ldr	w1, [sp, #76]
  441c30:	ldr	w0, [sp, #68]
  441c34:	add	w0, w1, w0
  441c38:	str	w0, [sp, #76]
  441c3c:	b	441d40 <wcrtomb@plt+0x3d030>
  441c40:	ldr	x1, [sp, #56]
  441c44:	ldrsw	x0, [sp, #52]
  441c48:	add	x0, x0, #0x8
  441c4c:	lsl	x0, x0, #3
  441c50:	add	x0, x1, x0
  441c54:	ldr	x2, [x0, #8]
  441c58:	ldrsw	x0, [sp, #76]
  441c5c:	ldr	x1, [sp, #32]
  441c60:	add	x0, x1, x0
  441c64:	ldrb	w0, [x0]
  441c68:	mov	w1, w0
  441c6c:	mov	x0, x2
  441c70:	bl	441800 <wcrtomb@plt+0x3caf0>
  441c74:	str	w0, [sp, #64]
  441c78:	ldr	w0, [sp, #64]
  441c7c:	cmp	w0, #0x0
  441c80:	b.eq	441cac <wcrtomb@plt+0x3cf9c>  // b.none
  441c84:	ldr	w2, [sp, #64]
  441c88:	ldr	x0, [sp, #40]
  441c8c:	add	x1, x0, #0x1
  441c90:	str	x1, [sp, #40]
  441c94:	and	w1, w2, #0xff
  441c98:	strb	w1, [x0]
  441c9c:	ldr	w0, [sp, #76]
  441ca0:	add	w0, w0, #0x1
  441ca4:	str	w0, [sp, #76]
  441ca8:	b	441d40 <wcrtomb@plt+0x3d030>
  441cac:	ldr	x0, [sp, #56]
  441cb0:	ldr	w0, [x0, #36]
  441cb4:	ldr	w1, [sp, #52]
  441cb8:	lsl	w1, w1, #2
  441cbc:	mov	w2, #0x10                  	// #16
  441cc0:	lsl	w1, w2, w1
  441cc4:	and	w0, w0, w1
  441cc8:	cmp	w0, #0x0
  441ccc:	b.eq	441ce4 <wcrtomb@plt+0x3cfd4>  // b.none
  441cd0:	ldr	x0, [sp, #40]
  441cd4:	add	x1, x0, #0x1
  441cd8:	str	x1, [sp, #40]
  441cdc:	mov	w1, #0x5c                  	// #92
  441ce0:	strb	w1, [x0]
  441ce4:	ldr	w0, [sp, #76]
  441ce8:	add	w1, w0, #0x1
  441cec:	str	w1, [sp, #76]
  441cf0:	sxtw	x0, w0
  441cf4:	ldr	x1, [sp, #32]
  441cf8:	add	x1, x1, x0
  441cfc:	ldr	x0, [sp, #40]
  441d00:	add	x2, x0, #0x1
  441d04:	str	x2, [sp, #40]
  441d08:	ldrb	w1, [x1]
  441d0c:	strb	w1, [x0]
  441d10:	b	441d40 <wcrtomb@plt+0x3d030>
  441d14:	ldr	w0, [sp, #76]
  441d18:	add	w1, w0, #0x1
  441d1c:	str	w1, [sp, #76]
  441d20:	sxtw	x0, w0
  441d24:	ldr	x1, [sp, #32]
  441d28:	add	x1, x1, x0
  441d2c:	ldr	x0, [sp, #40]
  441d30:	add	x2, x0, #0x1
  441d34:	str	x2, [sp, #40]
  441d38:	ldrb	w1, [x1]
  441d3c:	strb	w1, [x0]
  441d40:	ldrsw	x0, [sp, #76]
  441d44:	ldr	x1, [sp, #24]
  441d48:	cmp	x1, x0
  441d4c:	b.hi	44196c <wcrtomb@plt+0x3cc5c>  // b.pmore
  441d50:	ldr	x0, [sp, #40]
  441d54:	strb	wzr, [x0]
  441d58:	nop
  441d5c:	ldp	x29, x30, [sp], #80
  441d60:	ret
  441d64:	stp	x29, x30, [sp, #-64]!
  441d68:	mov	x29, sp
  441d6c:	str	x0, [sp, #40]
  441d70:	str	x1, [sp, #32]
  441d74:	str	w2, [sp, #28]
  441d78:	b	441f0c <wcrtomb@plt+0x3d1fc>
  441d7c:	ldr	x0, [sp, #32]
  441d80:	ldrb	w0, [x0]
  441d84:	cmp	w0, #0x22
  441d88:	b.ne	441dbc <wcrtomb@plt+0x3d0ac>  // b.any
  441d8c:	ldr	x0, [sp, #40]
  441d90:	add	x1, x0, #0x1
  441d94:	str	x1, [sp, #40]
  441d98:	mov	w1, #0x5c                  	// #92
  441d9c:	strb	w1, [x0]
  441da0:	ldr	x0, [sp, #40]
  441da4:	add	x1, x0, #0x1
  441da8:	str	x1, [sp, #40]
  441dac:	ldr	x1, [sp, #32]
  441db0:	ldrb	w1, [x1]
  441db4:	strb	w1, [x0]
  441db8:	b	441f00 <wcrtomb@plt+0x3d1f0>
  441dbc:	ldr	x0, [sp, #32]
  441dc0:	ldrb	w0, [x0]
  441dc4:	cmp	w0, #0x9
  441dc8:	b.eq	441e1c <wcrtomb@plt+0x3d10c>  // b.none
  441dcc:	ldr	x0, [sp, #32]
  441dd0:	ldrb	w0, [x0]
  441dd4:	cmp	w0, #0x5c
  441dd8:	b.eq	441e1c <wcrtomb@plt+0x3d10c>  // b.none
  441ddc:	ldr	x0, [sp, #32]
  441de0:	ldrb	w0, [x0]
  441de4:	cmp	w0, #0x1f
  441de8:	b.ls	441e1c <wcrtomb@plt+0x3d10c>  // b.plast
  441dec:	ldr	x0, [sp, #32]
  441df0:	ldrb	w0, [x0]
  441df4:	sxtb	w0, w0
  441df8:	cmp	w0, #0x0
  441dfc:	b.lt	441e1c <wcrtomb@plt+0x3d10c>  // b.tstop
  441e00:	ldr	x0, [sp, #40]
  441e04:	add	x1, x0, #0x1
  441e08:	str	x1, [sp, #40]
  441e0c:	ldr	x1, [sp, #32]
  441e10:	ldrb	w1, [x1]
  441e14:	strb	w1, [x0]
  441e18:	b	441f00 <wcrtomb@plt+0x3d1f0>
  441e1c:	ldr	w0, [sp, #28]
  441e20:	cmp	w0, #0x0
  441e24:	b.eq	441e70 <wcrtomb@plt+0x3d160>  // b.none
  441e28:	ldr	x0, [sp, #32]
  441e2c:	ldrb	w0, [x0]
  441e30:	add	x4, sp, #0x38
  441e34:	mov	w3, w0
  441e38:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  441e3c:	add	x2, x0, #0xab0
  441e40:	mov	x1, #0x4                   	// #4
  441e44:	mov	x0, x4
  441e48:	bl	4042e0 <snprintf@plt>
  441e4c:	add	x0, sp, #0x38
  441e50:	mov	x2, #0x3                   	// #3
  441e54:	mov	x1, x0
  441e58:	ldr	x0, [sp, #40]
  441e5c:	bl	404020 <memcpy@plt>
  441e60:	ldr	x0, [sp, #40]
  441e64:	add	x0, x0, #0x3
  441e68:	str	x0, [sp, #40]
  441e6c:	b	441f00 <wcrtomb@plt+0x3d1f0>
  441e70:	ldr	x0, [sp, #32]
  441e74:	ldrb	w0, [x0]
  441e78:	bl	441910 <wcrtomb@plt+0x3cc00>
  441e7c:	str	w0, [sp, #60]
  441e80:	ldr	x0, [sp, #40]
  441e84:	add	x1, x0, #0x1
  441e88:	str	x1, [sp, #40]
  441e8c:	mov	w1, #0x5c                  	// #92
  441e90:	strb	w1, [x0]
  441e94:	ldr	w0, [sp, #60]
  441e98:	cmp	w0, #0x0
  441e9c:	b.eq	441ebc <wcrtomb@plt+0x3d1ac>  // b.none
  441ea0:	ldr	x0, [sp, #40]
  441ea4:	add	x1, x0, #0x1
  441ea8:	str	x1, [sp, #40]
  441eac:	ldr	w1, [sp, #60]
  441eb0:	and	w1, w1, #0xff
  441eb4:	strb	w1, [x0]
  441eb8:	b	441f00 <wcrtomb@plt+0x3d1f0>
  441ebc:	ldr	x0, [sp, #32]
  441ec0:	ldrb	w0, [x0]
  441ec4:	add	x4, sp, #0x38
  441ec8:	mov	w3, w0
  441ecc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  441ed0:	add	x2, x0, #0xab8
  441ed4:	mov	x1, #0x4                   	// #4
  441ed8:	mov	x0, x4
  441edc:	bl	4042e0 <snprintf@plt>
  441ee0:	add	x0, sp, #0x38
  441ee4:	mov	x2, #0x3                   	// #3
  441ee8:	mov	x1, x0
  441eec:	ldr	x0, [sp, #40]
  441ef0:	bl	404020 <memcpy@plt>
  441ef4:	ldr	x0, [sp, #40]
  441ef8:	add	x0, x0, #0x3
  441efc:	str	x0, [sp, #40]
  441f00:	ldr	x0, [sp, #32]
  441f04:	add	x0, x0, #0x1
  441f08:	str	x0, [sp, #32]
  441f0c:	ldr	x0, [sp, #32]
  441f10:	ldrb	w0, [x0]
  441f14:	cmp	w0, #0x0
  441f18:	b.ne	441d7c <wcrtomb@plt+0x3d06c>  // b.any
  441f1c:	nop
  441f20:	nop
  441f24:	ldp	x29, x30, [sp], #64
  441f28:	ret
  441f2c:	sub	sp, sp, #0x20
  441f30:	str	x0, [sp, #8]
  441f34:	str	x1, [sp]
  441f38:	ldr	x0, [sp]
  441f3c:	ldr	w0, [x0, #32]
  441f40:	ldr	x1, [sp, #8]
  441f44:	ldr	w1, [x1, #8]
  441f48:	and	w0, w0, w1
  441f4c:	str	w0, [sp, #28]
  441f50:	ldr	x0, [sp, #8]
  441f54:	ldr	w0, [x0, #12]
  441f58:	and	w0, w0, #0x2
  441f5c:	cmp	w0, #0x0
  441f60:	b.eq	441f80 <wcrtomb@plt+0x3d270>  // b.none
  441f64:	ldr	x0, [sp, #8]
  441f68:	ldr	w0, [x0, #8]
  441f6c:	ldr	w1, [sp, #28]
  441f70:	cmp	w1, w0
  441f74:	cset	w0, eq  // eq = none
  441f78:	and	w0, w0, #0xff
  441f7c:	str	w0, [sp, #28]
  441f80:	ldr	x0, [sp, #8]
  441f84:	ldr	w0, [x0, #12]
  441f88:	and	w0, w0, #0x1
  441f8c:	cmp	w0, #0x0
  441f90:	b.eq	441fa8 <wcrtomb@plt+0x3d298>  // b.none
  441f94:	ldr	w0, [sp, #28]
  441f98:	cmp	w0, #0x0
  441f9c:	cset	w0, eq  // eq = none
  441fa0:	and	w0, w0, #0xff
  441fa4:	str	w0, [sp, #28]
  441fa8:	ldr	w0, [sp, #28]
  441fac:	add	sp, sp, #0x20
  441fb0:	ret
  441fb4:	stp	x29, x30, [sp, #-64]!
  441fb8:	mov	x29, sp
  441fbc:	stp	x19, x20, [sp, #16]
  441fc0:	str	x0, [sp, #40]
  441fc4:	str	x1, [sp, #32]
  441fc8:	ldr	x0, [sp, #40]
  441fcc:	ldr	w0, [x0, #32]
  441fd0:	and	w0, w0, #0x200000
  441fd4:	cmp	w0, #0x0
  441fd8:	b.eq	44201c <wcrtomb@plt+0x3d30c>  // b.none
  441fdc:	ldr	x0, [sp, #40]
  441fe0:	ldr	x19, [x0, #104]
  441fe4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  441fe8:	add	x0, x0, #0xb40
  441fec:	bl	404c60 <gettext@plt>
  441ff0:	mov	x4, x0
  441ff4:	ldr	x0, [sp, #40]
  441ff8:	ldr	w1, [x0, #224]
  441ffc:	ldr	x0, [sp, #40]
  442000:	ldr	x0, [x0, #176]
  442004:	mov	w2, w0
  442008:	ldr	x0, [sp, #40]
  44200c:	ldr	x0, [x0, #168]
  442010:	mov	x3, x0
  442014:	mov	x0, x4
  442018:	blr	x19
  44201c:	ldr	x0, [sp, #40]
  442020:	ldr	w0, [x0, #32]
  442024:	and	w0, w0, #0x400000
  442028:	cmp	w0, #0x0
  44202c:	b.ne	442060 <wcrtomb@plt+0x3d350>  // b.any
  442030:	ldr	x0, [sp, #40]
  442034:	ldr	w0, [x0, #36]
  442038:	and	w0, w0, #0x80
  44203c:	cmp	w0, #0x0
  442040:	b.eq	442090 <wcrtomb@plt+0x3d380>  // b.none
  442044:	ldr	x0, [sp, #40]
  442048:	ldr	x0, [x0, #48]
  44204c:	add	x1, x0, #0x1
  442050:	ldr	x0, [sp, #40]
  442054:	ldr	x0, [x0, #40]
  442058:	cmp	x1, x0
  44205c:	b.ne	442090 <wcrtomb@plt+0x3d380>  // b.any
  442060:	mov	w2, #0x1                   	// #1
  442064:	ldr	x1, [sp, #32]
  442068:	ldr	x0, [sp, #40]
  44206c:	bl	440fc8 <wcrtomb@plt+0x3c2b8>
  442070:	cmp	w0, #0x2
  442074:	b.ne	4420f4 <wcrtomb@plt+0x3d3e4>  // b.any
  442078:	ldr	x0, [sp, #40]
  44207c:	ldr	w0, [x0, #192]
  442080:	b	44227c <wcrtomb@plt+0x3d56c>
  442084:	ldr	x0, [sp, #40]
  442088:	bl	440dd8 <wcrtomb@plt+0x3c0c8>
  44208c:	str	x0, [sp, #32]
  442090:	mov	w2, #0x0                   	// #0
  442094:	ldr	x1, [sp, #32]
  442098:	ldr	x0, [sp, #40]
  44209c:	bl	440fc8 <wcrtomb@plt+0x3c2b8>
  4420a0:	str	w0, [sp, #52]
  4420a4:	ldr	w0, [sp, #52]
  4420a8:	cmp	w0, #0x1
  4420ac:	b.eq	442084 <wcrtomb@plt+0x3d374>  // b.none
  4420b0:	ldr	x0, [sp, #40]
  4420b4:	ldr	x0, [x0, #216]
  4420b8:	cmp	x0, #0x0
  4420bc:	b.eq	4420dc <wcrtomb@plt+0x3d3cc>  // b.none
  4420c0:	ldr	x0, [sp, #40]
  4420c4:	ldr	x0, [x0, #216]
  4420c8:	ldr	w1, [x0, #16]
  4420cc:	ldr	x0, [sp, #40]
  4420d0:	ldr	x0, [x0, #216]
  4420d4:	and	w1, w1, #0xffffffef
  4420d8:	str	w1, [x0, #16]
  4420dc:	ldr	w0, [sp, #52]
  4420e0:	cmp	w0, #0x2
  4420e4:	b.ne	4420f4 <wcrtomb@plt+0x3d3e4>  // b.any
  4420e8:	ldr	x0, [sp, #40]
  4420ec:	ldr	w0, [x0, #192]
  4420f0:	b	44227c <wcrtomb@plt+0x3d56c>
  4420f4:	ldr	x0, [sp, #40]
  4420f8:	ldr	w0, [x0, #32]
  4420fc:	and	w0, w0, #0x200000
  442100:	cmp	w0, #0x0
  442104:	b.eq	442140 <wcrtomb@plt+0x3d430>  // b.none
  442108:	ldr	x0, [sp, #40]
  44210c:	ldr	x19, [x0, #104]
  442110:	ldr	x0, [sp, #40]
  442114:	ldr	w20, [x0, #224]
  442118:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  44211c:	add	x0, x0, #0xb58
  442120:	bl	404c60 <gettext@plt>
  442124:	mov	x2, x0
  442128:	mov	w1, w20
  44212c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  442130:	add	x0, x0, #0xb68
  442134:	blr	x19
  442138:	ldr	x0, [sp, #40]
  44213c:	bl	43d86c <wcrtomb@plt+0x38b5c>
  442140:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  442144:	add	x0, x0, #0x2c0
  442148:	str	x0, [sp, #56]
  44214c:	b	442254 <wcrtomb@plt+0x3d544>
  442150:	ldr	x1, [sp, #40]
  442154:	ldr	x0, [sp, #56]
  442158:	bl	441f2c <wcrtomb@plt+0x3d21c>
  44215c:	cmp	w0, #0x0
  442160:	b.eq	442248 <wcrtomb@plt+0x3d538>  // b.none
  442164:	ldr	x0, [sp, #56]
  442168:	ldr	w0, [x0, #12]
  44216c:	and	w0, w0, #0x4
  442170:	cmp	w0, #0x0
  442174:	b.eq	4421d4 <wcrtomb@plt+0x3d4c4>  // b.none
  442178:	ldr	x0, [sp, #40]
  44217c:	bl	43dd14 <wcrtomb@plt+0x39004>
  442180:	cmp	w0, #0x0
  442184:	b.ne	442268 <wcrtomb@plt+0x3d558>  // b.any
  442188:	ldr	x0, [sp, #40]
  44218c:	ldr	w0, [x0, #32]
  442190:	and	w0, w0, #0x200000
  442194:	cmp	w0, #0x0
  442198:	b.eq	4421d4 <wcrtomb@plt+0x3d4c4>  // b.none
  44219c:	ldr	x0, [sp, #40]
  4421a0:	ldr	x19, [x0, #104]
  4421a4:	ldr	x0, [sp, #40]
  4421a8:	ldr	w20, [x0, #224]
  4421ac:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4421b0:	add	x0, x0, #0xb78
  4421b4:	bl	404c60 <gettext@plt>
  4421b8:	mov	x2, x0
  4421bc:	mov	w1, w20
  4421c0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4421c4:	add	x0, x0, #0xb68
  4421c8:	blr	x19
  4421cc:	ldr	x0, [sp, #40]
  4421d0:	bl	43d86c <wcrtomb@plt+0x38b5c>
  4421d4:	ldr	x0, [sp, #56]
  4421d8:	ldr	x0, [x0, #16]
  4421dc:	cmp	x0, #0x0
  4421e0:	b.eq	442248 <wcrtomb@plt+0x3d538>  // b.none
  4421e4:	ldr	x0, [sp, #56]
  4421e8:	ldr	x1, [x0, #16]
  4421ec:	ldr	x0, [sp, #40]
  4421f0:	blr	x1
  4421f4:	cmp	w0, #0x0
  4421f8:	b.ne	442270 <wcrtomb@plt+0x3d560>  // b.any
  4421fc:	ldr	x0, [sp, #40]
  442200:	ldr	w0, [x0, #32]
  442204:	and	w0, w0, #0x200000
  442208:	cmp	w0, #0x0
  44220c:	b.eq	442248 <wcrtomb@plt+0x3d538>  // b.none
  442210:	ldr	x0, [sp, #40]
  442214:	ldr	x19, [x0, #104]
  442218:	ldr	x0, [sp, #40]
  44221c:	ldr	w20, [x0, #224]
  442220:	ldr	x0, [sp, #56]
  442224:	ldr	x0, [x0]
  442228:	bl	404c60 <gettext@plt>
  44222c:	mov	x2, x0
  442230:	mov	w1, w20
  442234:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  442238:	add	x0, x0, #0xb68
  44223c:	blr	x19
  442240:	ldr	x0, [sp, #40]
  442244:	bl	43d86c <wcrtomb@plt+0x38b5c>
  442248:	ldr	x0, [sp, #56]
  44224c:	add	x0, x0, #0x18
  442250:	str	x0, [sp, #56]
  442254:	ldr	x0, [sp, #56]
  442258:	ldr	x0, [x0]
  44225c:	cmp	x0, #0x0
  442260:	b.ne	442150 <wcrtomb@plt+0x3d440>  // b.any
  442264:	b	442274 <wcrtomb@plt+0x3d564>
  442268:	nop
  44226c:	b	442274 <wcrtomb@plt+0x3d564>
  442270:	nop
  442274:	ldr	x0, [sp, #40]
  442278:	ldr	w0, [x0, #192]
  44227c:	ldp	x19, x20, [sp, #16]
  442280:	ldp	x29, x30, [sp], #64
  442284:	ret
  442288:	stp	x29, x30, [sp, #-64]!
  44228c:	mov	x29, sp
  442290:	str	x0, [sp, #40]
  442294:	str	x1, [sp, #32]
  442298:	str	x2, [sp, #24]
  44229c:	str	w3, [sp, #20]
  4422a0:	str	w4, [sp, #16]
  4422a4:	ldr	x0, [sp, #40]
  4422a8:	cmp	x0, #0x0
  4422ac:	b.ne	442340 <wcrtomb@plt+0x3d630>  // b.any
  4422b0:	ldr	w0, [sp, #20]
  4422b4:	and	w0, w0, #0x20000000
  4422b8:	cmp	w0, #0x0
  4422bc:	b.ne	4422d0 <wcrtomb@plt+0x3d5c0>  // b.any
  4422c0:	mov	w1, #0x3                   	// #3
  4422c4:	ldr	x0, [sp, #24]
  4422c8:	bl	43c93c <wcrtomb@plt+0x37c2c>
  4422cc:	b	4423a8 <wcrtomb@plt+0x3d698>
  4422d0:	ldr	x0, [sp, #24]
  4422d4:	ldr	x0, [x0, #208]
  4422d8:	cmp	x0, #0x0
  4422dc:	b.eq	4422ec <wcrtomb@plt+0x3d5dc>  // b.none
  4422e0:	ldr	x0, [sp, #24]
  4422e4:	bl	43de14 <wcrtomb@plt+0x39104>
  4422e8:	b	4423a8 <wcrtomb@plt+0x3d698>
  4422ec:	ldr	x0, [sp, #24]
  4422f0:	bl	440e2c <wcrtomb@plt+0x3c11c>
  4422f4:	str	x0, [sp, #56]
  4422f8:	ldr	x0, [sp, #24]
  4422fc:	ldr	x1, [x0, #184]
  442300:	ldr	x0, [sp, #24]
  442304:	ldr	x0, [x0, #176]
  442308:	cmp	x1, x0
  44230c:	b.ne	442320 <wcrtomb@plt+0x3d610>  // b.any
  442310:	mov	w1, #0x6                   	// #6
  442314:	ldr	x0, [sp, #24]
  442318:	bl	43c93c <wcrtomb@plt+0x37c2c>
  44231c:	b	4423a8 <wcrtomb@plt+0x3d698>
  442320:	ldr	x0, [sp, #24]
  442324:	ldr	w0, [x0, #32]
  442328:	orr	w1, w0, #0x8
  44232c:	ldr	x0, [sp, #24]
  442330:	str	w1, [x0, #32]
  442334:	ldr	x0, [sp, #24]
  442338:	bl	43cc74 <wcrtomb@plt+0x37f64>
  44233c:	b	44237c <wcrtomb@plt+0x3d66c>
  442340:	str	xzr, [sp, #56]
  442344:	ldr	w3, [sp, #20]
  442348:	ldr	x2, [sp, #32]
  44234c:	ldr	x1, [sp, #40]
  442350:	ldr	x0, [sp, #24]
  442354:	bl	43cce8 <wcrtomb@plt+0x37fd8>
  442358:	str	w0, [sp, #52]
  44235c:	ldr	w0, [sp, #52]
  442360:	cmp	w0, #0x0
  442364:	b.eq	442370 <wcrtomb@plt+0x3d660>  // b.none
  442368:	ldr	w0, [sp, #52]
  44236c:	b	4423a8 <wcrtomb@plt+0x3d698>
  442370:	ldr	x0, [sp, #24]
  442374:	ldr	w1, [sp, #16]
  442378:	str	w1, [x0, #224]
  44237c:	ldr	x1, [sp, #56]
  442380:	ldr	x0, [sp, #24]
  442384:	bl	441fb4 <wcrtomb@plt+0x3d2a4>
  442388:	str	w0, [sp, #52]
  44238c:	ldr	w0, [sp, #52]
  442390:	cmp	w0, #0x0
  442394:	b.eq	4423a0 <wcrtomb@plt+0x3d690>  // b.none
  442398:	ldr	w0, [sp, #52]
  44239c:	b	4423a8 <wcrtomb@plt+0x3d698>
  4423a0:	ldr	x0, [sp, #24]
  4423a4:	bl	43de14 <wcrtomb@plt+0x39104>
  4423a8:	ldp	x29, x30, [sp], #64
  4423ac:	ret
  4423b0:	stp	x29, x30, [sp, #-48]!
  4423b4:	mov	x29, sp
  4423b8:	str	x0, [sp, #40]
  4423bc:	str	x1, [sp, #32]
  4423c0:	str	x2, [sp, #24]
  4423c4:	str	w3, [sp, #20]
  4423c8:	mov	w4, #0x0                   	// #0
  4423cc:	ldr	w3, [sp, #20]
  4423d0:	ldr	x2, [sp, #24]
  4423d4:	ldr	x1, [sp, #32]
  4423d8:	ldr	x0, [sp, #40]
  4423dc:	bl	442288 <wcrtomb@plt+0x3d578>
  4423e0:	ldp	x29, x30, [sp], #48
  4423e4:	ret
  4423e8:	stp	x29, x30, [sp, #-48]!
  4423ec:	mov	x29, sp
  4423f0:	str	x0, [sp, #40]
  4423f4:	str	x1, [sp, #32]
  4423f8:	str	w2, [sp, #28]
  4423fc:	ldr	x0, [sp, #40]
  442400:	cmp	x0, #0x0
  442404:	b.eq	442414 <wcrtomb@plt+0x3d704>  // b.none
  442408:	ldr	x0, [sp, #40]
  44240c:	bl	4040b0 <strlen@plt>
  442410:	b	442418 <wcrtomb@plt+0x3d708>
  442414:	mov	x0, #0x0                   	// #0
  442418:	ldr	w3, [sp, #28]
  44241c:	ldr	x2, [sp, #32]
  442420:	mov	x1, x0
  442424:	ldr	x0, [sp, #40]
  442428:	bl	4423b0 <wcrtomb@plt+0x3d6a0>
  44242c:	ldp	x29, x30, [sp], #48
  442430:	ret
  442434:	stp	x29, x30, [sp, #-48]!
  442438:	mov	x29, sp
  44243c:	str	x0, [sp, #24]
  442440:	str	xzr, [sp, #40]
  442444:	b	4424b4 <wcrtomb@plt+0x3d7a4>
  442448:	ldr	x0, [sp, #24]
  44244c:	ldr	x1, [x0, #8]
  442450:	ldr	x0, [sp, #24]
  442454:	ldr	x2, [x0, #16]
  442458:	ldr	x0, [sp, #40]
  44245c:	add	x0, x2, x0
  442460:	lsl	x0, x0, #3
  442464:	add	x0, x1, x0
  442468:	ldr	x0, [x0]
  44246c:	str	x0, [sp, #32]
  442470:	ldr	x0, [sp, #32]
  442474:	cmp	x0, #0x0
  442478:	b.eq	4424a8 <wcrtomb@plt+0x3d798>  // b.none
  44247c:	ldr	x0, [sp, #32]
  442480:	bl	404880 <free@plt>
  442484:	ldr	x0, [sp, #24]
  442488:	ldr	x1, [x0, #8]
  44248c:	ldr	x0, [sp, #24]
  442490:	ldr	x2, [x0, #16]
  442494:	ldr	x0, [sp, #40]
  442498:	add	x0, x2, x0
  44249c:	lsl	x0, x0, #3
  4424a0:	add	x0, x1, x0
  4424a4:	str	xzr, [x0]
  4424a8:	ldr	x0, [sp, #40]
  4424ac:	add	x0, x0, #0x1
  4424b0:	str	x0, [sp, #40]
  4424b4:	ldr	x0, [sp, #24]
  4424b8:	ldr	x0, [x0]
  4424bc:	ldr	x1, [sp, #40]
  4424c0:	cmp	x1, x0
  4424c4:	b.cc	442448 <wcrtomb@plt+0x3d738>  // b.lo, b.ul, b.last
  4424c8:	ldr	x0, [sp, #24]
  4424cc:	str	xzr, [x0]
  4424d0:	nop
  4424d4:	ldp	x29, x30, [sp], #48
  4424d8:	ret
  4424dc:	stp	x29, x30, [sp, #-48]!
  4424e0:	mov	x29, sp
  4424e4:	str	x0, [sp, #24]
  4424e8:	ldr	x0, [sp, #24]
  4424ec:	ldr	w0, [x0, #32]
  4424f0:	and	w0, w0, #0x4
  4424f4:	cmp	w0, #0x0
  4424f8:	b.ne	44258c <wcrtomb@plt+0x3d87c>  // b.any
  4424fc:	ldr	x0, [sp, #24]
  442500:	ldr	x0, [x0, #120]
  442504:	cmp	x0, #0x0
  442508:	b.eq	442590 <wcrtomb@plt+0x3d880>  // b.none
  44250c:	str	xzr, [sp, #40]
  442510:	b	44253c <wcrtomb@plt+0x3d82c>
  442514:	ldr	x0, [sp, #24]
  442518:	ldr	x1, [x0, #120]
  44251c:	ldr	x0, [sp, #40]
  442520:	lsl	x0, x0, #3
  442524:	add	x0, x1, x0
  442528:	ldr	x0, [x0]
  44252c:	bl	404880 <free@plt>
  442530:	ldr	x0, [sp, #40]
  442534:	add	x0, x0, #0x1
  442538:	str	x0, [sp, #40]
  44253c:	ldr	x0, [sp, #24]
  442540:	ldr	x1, [x0, #120]
  442544:	ldr	x0, [sp, #40]
  442548:	lsl	x0, x0, #3
  44254c:	add	x0, x1, x0
  442550:	ldr	x0, [x0]
  442554:	cmp	x0, #0x0
  442558:	b.ne	442514 <wcrtomb@plt+0x3d804>  // b.any
  44255c:	ldr	x0, [sp, #24]
  442560:	ldr	x0, [x0, #120]
  442564:	bl	404880 <free@plt>
  442568:	ldr	x0, [sp, #24]
  44256c:	str	xzr, [x0, #136]
  442570:	ldr	x0, [sp, #24]
  442574:	ldr	x1, [x0, #136]
  442578:	ldr	x0, [sp, #24]
  44257c:	str	x1, [x0, #128]
  442580:	ldr	x0, [sp, #24]
  442584:	str	xzr, [x0, #120]
  442588:	b	442590 <wcrtomb@plt+0x3d880>
  44258c:	nop
  442590:	ldp	x29, x30, [sp], #48
  442594:	ret
  442598:	stp	x29, x30, [sp, #-32]!
  44259c:	mov	x29, sp
  4425a0:	str	x0, [sp, #24]
  4425a4:	ldr	x0, [sp, #24]
  4425a8:	ldr	w0, [x0, #192]
  4425ac:	cmp	w0, #0x9
  4425b0:	b.ne	4425c0 <wcrtomb@plt+0x3d8b0>  // b.any
  4425b4:	ldr	x0, [sp, #24]
  4425b8:	ldr	x0, [x0, #200]
  4425bc:	bl	404880 <free@plt>
  4425c0:	ldr	x0, [sp, #24]
  4425c4:	str	xzr, [x0, #200]
  4425c8:	ldr	x0, [sp, #24]
  4425cc:	str	wzr, [x0, #192]
  4425d0:	nop
  4425d4:	ldp	x29, x30, [sp], #32
  4425d8:	ret
  4425dc:	stp	x29, x30, [sp, #-32]!
  4425e0:	mov	x29, sp
  4425e4:	str	x0, [sp, #24]
  4425e8:	ldr	x0, [sp, #24]
  4425ec:	bl	43d804 <wcrtomb@plt+0x38af4>
  4425f0:	ldr	x0, [sp, #24]
  4425f4:	bl	442434 <wcrtomb@plt+0x3d724>
  4425f8:	ldr	x0, [sp, #24]
  4425fc:	ldr	x0, [x0, #8]
  442600:	bl	404880 <free@plt>
  442604:	ldr	x0, [sp, #24]
  442608:	str	xzr, [x0, #8]
  44260c:	ldr	x0, [sp, #24]
  442610:	bl	4424dc <wcrtomb@plt+0x3d7cc>
  442614:	nop
  442618:	ldp	x29, x30, [sp], #32
  44261c:	ret
  442620:	stp	x29, x30, [sp, #-64]!
  442624:	mov	x29, sp
  442628:	str	x0, [sp, #40]
  44262c:	str	x1, [sp, #32]
  442630:	str	x2, [sp, #24]
  442634:	ldr	x0, [sp, #40]
  442638:	ldr	x2, [x0, #8]
  44263c:	ldr	x0, [sp, #40]
  442640:	ldr	x0, [x0]
  442644:	add	x0, x0, #0x1
  442648:	lsl	x0, x0, #3
  44264c:	mov	x1, x0
  442650:	mov	x0, x2
  442654:	bl	4045e0 <realloc@plt>
  442658:	str	x0, [sp, #56]
  44265c:	ldr	x0, [sp, #56]
  442660:	cmp	x0, #0x0
  442664:	b.ne	442670 <wcrtomb@plt+0x3d960>  // b.any
  442668:	mov	w0, #0xffffffff            	// #-1
  44266c:	b	4426a8 <wcrtomb@plt+0x3d998>
  442670:	ldr	x0, [sp, #24]
  442674:	ldr	x1, [sp, #56]
  442678:	str	x1, [x0]
  44267c:	ldr	x0, [sp, #40]
  442680:	ldr	x1, [x0]
  442684:	ldr	x0, [sp, #32]
  442688:	str	x1, [x0]
  44268c:	ldr	x0, [sp, #40]
  442690:	str	xzr, [x0, #8]
  442694:	ldr	x0, [sp, #40]
  442698:	str	xzr, [x0]
  44269c:	ldr	x0, [sp, #40]
  4426a0:	str	xzr, [x0, #24]
  4426a4:	mov	w0, #0x0                   	// #0
  4426a8:	ldp	x29, x30, [sp], #64
  4426ac:	ret
  4426b0:	sub	sp, sp, #0x10
  4426b4:	str	x0, [sp, #8]
  4426b8:	ldr	x0, [sp, #8]
  4426bc:	ldr	w0, [x0, #192]
  4426c0:	cmp	w0, #0x9
  4426c4:	b.ne	4426d4 <wcrtomb@plt+0x3d9c4>  // b.any
  4426c8:	ldr	x0, [sp, #8]
  4426cc:	ldr	x0, [x0, #200]
  4426d0:	b	442714 <wcrtomb@plt+0x3da04>
  4426d4:	ldr	x0, [sp, #8]
  4426d8:	ldr	w1, [x0, #192]
  4426dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4426e0:	add	x0, x0, #0x3e0
  4426e4:	ldr	w0, [x0]
  4426e8:	cmp	w1, w0
  4426ec:	b.ge	44270c <wcrtomb@plt+0x3d9fc>  // b.tcont
  4426f0:	ldr	x0, [sp, #8]
  4426f4:	ldr	w1, [x0, #192]
  4426f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4426fc:	add	x0, x0, #0x398
  442700:	sxtw	x1, w1
  442704:	ldr	x0, [x0, x1, lsl #3]
  442708:	b	442714 <wcrtomb@plt+0x3da04>
  44270c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  442710:	add	x0, x0, #0xc30
  442714:	add	sp, sp, #0x10
  442718:	ret
  44271c:	stp	x29, x30, [sp, #-48]!
  442720:	mov	x29, sp
  442724:	str	x19, [sp, #16]
  442728:	str	x0, [sp, #40]
  44272c:	ldr	x0, [sp, #40]
  442730:	ldr	w0, [x0, #192]
  442734:	cmp	w0, #0x1
  442738:	b.ne	442788 <wcrtomb@plt+0x3da78>  // b.any
  44273c:	ldr	x0, [sp, #40]
  442740:	ldr	x19, [x0, #96]
  442744:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  442748:	add	x0, x0, #0xc40
  44274c:	bl	404c60 <gettext@plt>
  442750:	mov	x3, x0
  442754:	ldr	x0, [sp, #40]
  442758:	ldr	x1, [x0, #168]
  44275c:	ldr	x0, [sp, #40]
  442760:	ldr	x0, [x0, #184]
  442764:	add	x0, x1, x0
  442768:	ldrb	w0, [x0]
  44276c:	mov	w1, w0
  442770:	ldr	x0, [sp, #40]
  442774:	ldr	x0, [x0, #184]
  442778:	mov	x2, x0
  44277c:	mov	x0, x3
  442780:	blr	x19
  442784:	b	4427ac <wcrtomb@plt+0x3da9c>
  442788:	ldr	x0, [sp, #40]
  44278c:	ldr	x19, [x0, #96]
  442790:	ldr	x0, [sp, #40]
  442794:	bl	4426b0 <wcrtomb@plt+0x3d9a0>
  442798:	mov	x1, x0
  44279c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4427a0:	add	x0, x0, #0x950
  4427a4:	blr	x19
  4427a8:	nop
  4427ac:	nop
  4427b0:	ldr	x19, [sp, #16]
  4427b4:	ldp	x29, x30, [sp], #48
  4427b8:	ret
  4427bc:	mov	x12, #0x1030                	// #4144
  4427c0:	sub	sp, sp, x12
  4427c4:	stp	x29, x30, [sp]
  4427c8:	mov	x29, sp
  4427cc:	str	w0, [sp, #60]
  4427d0:	str	x1, [sp, #48]
  4427d4:	str	x2, [sp, #40]
  4427d8:	str	x3, [sp, #32]
  4427dc:	str	x4, [sp, #24]
  4427e0:	str	w5, [sp, #56]
  4427e4:	ldr	w0, [sp, #60]
  4427e8:	cmn	w0, #0x64
  4427ec:	b.eq	442800 <wcrtomb@plt+0x3daf0>  // b.none
  4427f0:	ldr	x0, [sp, #48]
  4427f4:	ldrb	w0, [x0]
  4427f8:	cmp	w0, #0x2f
  4427fc:	b.ne	44281c <wcrtomb@plt+0x3db0c>  // b.any
  442800:	ldr	w4, [sp, #56]
  442804:	ldr	x3, [sp, #24]
  442808:	ldr	x2, [sp, #32]
  44280c:	ldr	x1, [sp, #40]
  442810:	ldr	x0, [sp, #48]
  442814:	bl	4044b0 <setxattr@plt>
  442818:	b	442a18 <wcrtomb@plt+0x3dd08>
  44281c:	add	x0, sp, #0x48
  442820:	ldr	x2, [sp, #48]
  442824:	ldr	w1, [sp, #60]
  442828:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  44282c:	str	x0, [sp, #4136]
  442830:	ldr	x0, [sp, #4136]
  442834:	cmp	x0, #0x0
  442838:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  44283c:	ldr	w4, [sp, #56]
  442840:	ldr	x3, [sp, #24]
  442844:	ldr	x2, [sp, #32]
  442848:	ldr	x1, [sp, #40]
  44284c:	ldr	x0, [sp, #4136]
  442850:	bl	4044b0 <setxattr@plt>
  442854:	str	w0, [sp, #4132]
  442858:	bl	404bc0 <__errno_location@plt>
  44285c:	ldr	w0, [x0]
  442860:	str	w0, [sp, #4128]
  442864:	add	x0, sp, #0x48
  442868:	ldr	x1, [sp, #4136]
  44286c:	cmp	x1, x0
  442870:	b.eq	44287c <wcrtomb@plt+0x3db6c>  // b.none
  442874:	ldr	x0, [sp, #4136]
  442878:	bl	404880 <free@plt>
  44287c:	ldr	w0, [sp, #4132]
  442880:	cmn	w0, #0x1
  442884:	b.eq	442890 <wcrtomb@plt+0x3db80>  // b.none
  442888:	ldr	w0, [sp, #4132]
  44288c:	b	442a18 <wcrtomb@plt+0x3dd08>
  442890:	ldr	w0, [sp, #4128]
  442894:	cmp	w0, #0x14
  442898:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  44289c:	ldr	w0, [sp, #4128]
  4428a0:	cmp	w0, #0x2
  4428a4:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  4428a8:	ldr	w0, [sp, #4128]
  4428ac:	cmp	w0, #0x1
  4428b0:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  4428b4:	ldr	w0, [sp, #4128]
  4428b8:	cmp	w0, #0xd
  4428bc:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  4428c0:	ldr	w0, [sp, #4128]
  4428c4:	cmp	w0, #0x26
  4428c8:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  4428cc:	ldr	w0, [sp, #4128]
  4428d0:	cmp	w0, #0x5f
  4428d4:	b.eq	4428f0 <wcrtomb@plt+0x3dbe0>  // b.none
  4428d8:	bl	404bc0 <__errno_location@plt>
  4428dc:	mov	x1, x0
  4428e0:	ldr	w0, [sp, #4128]
  4428e4:	str	w0, [x1]
  4428e8:	ldr	w0, [sp, #4132]
  4428ec:	b	442a18 <wcrtomb@plt+0x3dd08>
  4428f0:	add	x0, sp, #0x1, lsl #12
  4428f4:	add	x0, x0, #0x8
  4428f8:	bl	45a3cc <argp_usage@@Base+0x112e0>
  4428fc:	cmp	w0, #0x0
  442900:	b.eq	442910 <wcrtomb@plt+0x3dc00>  // b.none
  442904:	bl	404bc0 <__errno_location@plt>
  442908:	ldr	w0, [x0]
  44290c:	bl	451a50 <argp_usage@@Base+0x8964>
  442910:	ldr	w0, [sp, #60]
  442914:	cmp	w0, #0x0
  442918:	b.lt	442950 <wcrtomb@plt+0x3dc40>  // b.tstop
  44291c:	ldr	w0, [sp, #4104]
  442920:	ldr	w1, [sp, #60]
  442924:	cmp	w1, w0
  442928:	b.ne	442950 <wcrtomb@plt+0x3dc40>  // b.any
  44292c:	add	x0, sp, #0x1, lsl #12
  442930:	add	x0, x0, #0x8
  442934:	bl	45a490 <argp_usage@@Base+0x113a4>
  442938:	bl	404bc0 <__errno_location@plt>
  44293c:	mov	x1, x0
  442940:	mov	w0, #0x9                   	// #9
  442944:	str	w0, [x1]
  442948:	mov	w0, #0xffffffff            	// #-1
  44294c:	b	442a18 <wcrtomb@plt+0x3dd08>
  442950:	ldr	w0, [sp, #60]
  442954:	bl	404110 <fchdir@plt>
  442958:	cmp	w0, #0x0
  44295c:	b.eq	442990 <wcrtomb@plt+0x3dc80>  // b.none
  442960:	bl	404bc0 <__errno_location@plt>
  442964:	ldr	w0, [x0]
  442968:	str	w0, [sp, #4120]
  44296c:	add	x0, sp, #0x1, lsl #12
  442970:	add	x0, x0, #0x8
  442974:	bl	45a490 <argp_usage@@Base+0x113a4>
  442978:	bl	404bc0 <__errno_location@plt>
  44297c:	mov	x1, x0
  442980:	ldr	w0, [sp, #4120]
  442984:	str	w0, [x1]
  442988:	mov	w0, #0xffffffff            	// #-1
  44298c:	b	442a18 <wcrtomb@plt+0x3dd08>
  442990:	ldr	w4, [sp, #56]
  442994:	ldr	x3, [sp, #24]
  442998:	ldr	x2, [sp, #32]
  44299c:	ldr	x1, [sp, #40]
  4429a0:	ldr	x0, [sp, #48]
  4429a4:	bl	4044b0 <setxattr@plt>
  4429a8:	str	w0, [sp, #4124]
  4429ac:	ldr	w0, [sp, #4124]
  4429b0:	cmn	w0, #0x1
  4429b4:	b.ne	4429c4 <wcrtomb@plt+0x3dcb4>  // b.any
  4429b8:	bl	404bc0 <__errno_location@plt>
  4429bc:	ldr	w0, [x0]
  4429c0:	b	4429c8 <wcrtomb@plt+0x3dcb8>
  4429c4:	mov	w0, #0x0                   	// #0
  4429c8:	str	w0, [sp, #4120]
  4429cc:	add	x0, sp, #0x1, lsl #12
  4429d0:	add	x0, x0, #0x8
  4429d4:	bl	45a450 <argp_usage@@Base+0x11364>
  4429d8:	cmp	w0, #0x0
  4429dc:	b.eq	4429ec <wcrtomb@plt+0x3dcdc>  // b.none
  4429e0:	bl	404bc0 <__errno_location@plt>
  4429e4:	ldr	w0, [x0]
  4429e8:	bl	451a8c <argp_usage@@Base+0x89a0>
  4429ec:	add	x0, sp, #0x1, lsl #12
  4429f0:	add	x0, x0, #0x8
  4429f4:	bl	45a490 <argp_usage@@Base+0x113a4>
  4429f8:	ldr	w0, [sp, #4120]
  4429fc:	cmp	w0, #0x0
  442a00:	b.eq	442a14 <wcrtomb@plt+0x3dd04>  // b.none
  442a04:	bl	404bc0 <__errno_location@plt>
  442a08:	mov	x1, x0
  442a0c:	ldr	w0, [sp, #4120]
  442a10:	str	w0, [x1]
  442a14:	ldr	w0, [sp, #4124]
  442a18:	ldp	x29, x30, [sp]
  442a1c:	mov	x12, #0x1030                	// #4144
  442a20:	add	sp, sp, x12
  442a24:	ret
  442a28:	mov	x12, #0x1030                	// #4144
  442a2c:	sub	sp, sp, x12
  442a30:	stp	x29, x30, [sp]
  442a34:	mov	x29, sp
  442a38:	str	w0, [sp, #60]
  442a3c:	str	x1, [sp, #48]
  442a40:	str	x2, [sp, #40]
  442a44:	str	x3, [sp, #32]
  442a48:	str	x4, [sp, #24]
  442a4c:	str	w5, [sp, #56]
  442a50:	ldr	w0, [sp, #60]
  442a54:	cmn	w0, #0x64
  442a58:	b.eq	442a6c <wcrtomb@plt+0x3dd5c>  // b.none
  442a5c:	ldr	x0, [sp, #48]
  442a60:	ldrb	w0, [x0]
  442a64:	cmp	w0, #0x2f
  442a68:	b.ne	442a88 <wcrtomb@plt+0x3dd78>  // b.any
  442a6c:	ldr	w4, [sp, #56]
  442a70:	ldr	x3, [sp, #24]
  442a74:	ldr	x2, [sp, #32]
  442a78:	ldr	x1, [sp, #40]
  442a7c:	ldr	x0, [sp, #48]
  442a80:	bl	404570 <lsetxattr@plt>
  442a84:	b	442c84 <wcrtomb@plt+0x3df74>
  442a88:	add	x0, sp, #0x48
  442a8c:	ldr	x2, [sp, #48]
  442a90:	ldr	w1, [sp, #60]
  442a94:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  442a98:	str	x0, [sp, #4136]
  442a9c:	ldr	x0, [sp, #4136]
  442aa0:	cmp	x0, #0x0
  442aa4:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442aa8:	ldr	w4, [sp, #56]
  442aac:	ldr	x3, [sp, #24]
  442ab0:	ldr	x2, [sp, #32]
  442ab4:	ldr	x1, [sp, #40]
  442ab8:	ldr	x0, [sp, #4136]
  442abc:	bl	404570 <lsetxattr@plt>
  442ac0:	str	w0, [sp, #4132]
  442ac4:	bl	404bc0 <__errno_location@plt>
  442ac8:	ldr	w0, [x0]
  442acc:	str	w0, [sp, #4128]
  442ad0:	add	x0, sp, #0x48
  442ad4:	ldr	x1, [sp, #4136]
  442ad8:	cmp	x1, x0
  442adc:	b.eq	442ae8 <wcrtomb@plt+0x3ddd8>  // b.none
  442ae0:	ldr	x0, [sp, #4136]
  442ae4:	bl	404880 <free@plt>
  442ae8:	ldr	w0, [sp, #4132]
  442aec:	cmn	w0, #0x1
  442af0:	b.eq	442afc <wcrtomb@plt+0x3ddec>  // b.none
  442af4:	ldr	w0, [sp, #4132]
  442af8:	b	442c84 <wcrtomb@plt+0x3df74>
  442afc:	ldr	w0, [sp, #4128]
  442b00:	cmp	w0, #0x14
  442b04:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442b08:	ldr	w0, [sp, #4128]
  442b0c:	cmp	w0, #0x2
  442b10:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442b14:	ldr	w0, [sp, #4128]
  442b18:	cmp	w0, #0x1
  442b1c:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442b20:	ldr	w0, [sp, #4128]
  442b24:	cmp	w0, #0xd
  442b28:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442b2c:	ldr	w0, [sp, #4128]
  442b30:	cmp	w0, #0x26
  442b34:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442b38:	ldr	w0, [sp, #4128]
  442b3c:	cmp	w0, #0x5f
  442b40:	b.eq	442b5c <wcrtomb@plt+0x3de4c>  // b.none
  442b44:	bl	404bc0 <__errno_location@plt>
  442b48:	mov	x1, x0
  442b4c:	ldr	w0, [sp, #4128]
  442b50:	str	w0, [x1]
  442b54:	ldr	w0, [sp, #4132]
  442b58:	b	442c84 <wcrtomb@plt+0x3df74>
  442b5c:	add	x0, sp, #0x1, lsl #12
  442b60:	add	x0, x0, #0x8
  442b64:	bl	45a3cc <argp_usage@@Base+0x112e0>
  442b68:	cmp	w0, #0x0
  442b6c:	b.eq	442b7c <wcrtomb@plt+0x3de6c>  // b.none
  442b70:	bl	404bc0 <__errno_location@plt>
  442b74:	ldr	w0, [x0]
  442b78:	bl	451a50 <argp_usage@@Base+0x8964>
  442b7c:	ldr	w0, [sp, #60]
  442b80:	cmp	w0, #0x0
  442b84:	b.lt	442bbc <wcrtomb@plt+0x3deac>  // b.tstop
  442b88:	ldr	w0, [sp, #4104]
  442b8c:	ldr	w1, [sp, #60]
  442b90:	cmp	w1, w0
  442b94:	b.ne	442bbc <wcrtomb@plt+0x3deac>  // b.any
  442b98:	add	x0, sp, #0x1, lsl #12
  442b9c:	add	x0, x0, #0x8
  442ba0:	bl	45a490 <argp_usage@@Base+0x113a4>
  442ba4:	bl	404bc0 <__errno_location@plt>
  442ba8:	mov	x1, x0
  442bac:	mov	w0, #0x9                   	// #9
  442bb0:	str	w0, [x1]
  442bb4:	mov	w0, #0xffffffff            	// #-1
  442bb8:	b	442c84 <wcrtomb@plt+0x3df74>
  442bbc:	ldr	w0, [sp, #60]
  442bc0:	bl	404110 <fchdir@plt>
  442bc4:	cmp	w0, #0x0
  442bc8:	b.eq	442bfc <wcrtomb@plt+0x3deec>  // b.none
  442bcc:	bl	404bc0 <__errno_location@plt>
  442bd0:	ldr	w0, [x0]
  442bd4:	str	w0, [sp, #4120]
  442bd8:	add	x0, sp, #0x1, lsl #12
  442bdc:	add	x0, x0, #0x8
  442be0:	bl	45a490 <argp_usage@@Base+0x113a4>
  442be4:	bl	404bc0 <__errno_location@plt>
  442be8:	mov	x1, x0
  442bec:	ldr	w0, [sp, #4120]
  442bf0:	str	w0, [x1]
  442bf4:	mov	w0, #0xffffffff            	// #-1
  442bf8:	b	442c84 <wcrtomb@plt+0x3df74>
  442bfc:	ldr	w4, [sp, #56]
  442c00:	ldr	x3, [sp, #24]
  442c04:	ldr	x2, [sp, #32]
  442c08:	ldr	x1, [sp, #40]
  442c0c:	ldr	x0, [sp, #48]
  442c10:	bl	404570 <lsetxattr@plt>
  442c14:	str	w0, [sp, #4124]
  442c18:	ldr	w0, [sp, #4124]
  442c1c:	cmn	w0, #0x1
  442c20:	b.ne	442c30 <wcrtomb@plt+0x3df20>  // b.any
  442c24:	bl	404bc0 <__errno_location@plt>
  442c28:	ldr	w0, [x0]
  442c2c:	b	442c34 <wcrtomb@plt+0x3df24>
  442c30:	mov	w0, #0x0                   	// #0
  442c34:	str	w0, [sp, #4120]
  442c38:	add	x0, sp, #0x1, lsl #12
  442c3c:	add	x0, x0, #0x8
  442c40:	bl	45a450 <argp_usage@@Base+0x11364>
  442c44:	cmp	w0, #0x0
  442c48:	b.eq	442c58 <wcrtomb@plt+0x3df48>  // b.none
  442c4c:	bl	404bc0 <__errno_location@plt>
  442c50:	ldr	w0, [x0]
  442c54:	bl	451a8c <argp_usage@@Base+0x89a0>
  442c58:	add	x0, sp, #0x1, lsl #12
  442c5c:	add	x0, x0, #0x8
  442c60:	bl	45a490 <argp_usage@@Base+0x113a4>
  442c64:	ldr	w0, [sp, #4120]
  442c68:	cmp	w0, #0x0
  442c6c:	b.eq	442c80 <wcrtomb@plt+0x3df70>  // b.none
  442c70:	bl	404bc0 <__errno_location@plt>
  442c74:	mov	x1, x0
  442c78:	ldr	w0, [sp, #4120]
  442c7c:	str	w0, [x1]
  442c80:	ldr	w0, [sp, #4124]
  442c84:	ldp	x29, x30, [sp]
  442c88:	mov	x12, #0x1030                	// #4144
  442c8c:	add	sp, sp, x12
  442c90:	ret
  442c94:	mov	x12, #0x1040                	// #4160
  442c98:	sub	sp, sp, x12
  442c9c:	stp	x29, x30, [sp]
  442ca0:	mov	x29, sp
  442ca4:	str	w0, [sp, #60]
  442ca8:	str	x1, [sp, #48]
  442cac:	str	x2, [sp, #40]
  442cb0:	str	x3, [sp, #32]
  442cb4:	str	x4, [sp, #24]
  442cb8:	ldr	w0, [sp, #60]
  442cbc:	cmn	w0, #0x64
  442cc0:	b.eq	442cd4 <wcrtomb@plt+0x3dfc4>  // b.none
  442cc4:	ldr	x0, [sp, #48]
  442cc8:	ldrb	w0, [x0]
  442ccc:	cmp	w0, #0x2f
  442cd0:	b.ne	442cec <wcrtomb@plt+0x3dfdc>  // b.any
  442cd4:	ldr	x3, [sp, #24]
  442cd8:	ldr	x2, [sp, #32]
  442cdc:	ldr	x1, [sp, #40]
  442ce0:	ldr	x0, [sp, #48]
  442ce4:	bl	404780 <getxattr@plt>
  442ce8:	b	442ee0 <wcrtomb@plt+0x3e1d0>
  442cec:	add	x0, sp, #0x48
  442cf0:	ldr	x2, [sp, #48]
  442cf4:	ldr	w1, [sp, #60]
  442cf8:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  442cfc:	str	x0, [sp, #4152]
  442d00:	ldr	x0, [sp, #4152]
  442d04:	cmp	x0, #0x0
  442d08:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442d0c:	ldr	x3, [sp, #24]
  442d10:	ldr	x2, [sp, #32]
  442d14:	ldr	x1, [sp, #40]
  442d18:	ldr	x0, [sp, #4152]
  442d1c:	bl	404780 <getxattr@plt>
  442d20:	str	x0, [sp, #4144]
  442d24:	bl	404bc0 <__errno_location@plt>
  442d28:	ldr	w0, [x0]
  442d2c:	str	w0, [sp, #4140]
  442d30:	add	x0, sp, #0x48
  442d34:	ldr	x1, [sp, #4152]
  442d38:	cmp	x1, x0
  442d3c:	b.eq	442d48 <wcrtomb@plt+0x3e038>  // b.none
  442d40:	ldr	x0, [sp, #4152]
  442d44:	bl	404880 <free@plt>
  442d48:	ldr	x0, [sp, #4144]
  442d4c:	cmn	x0, #0x1
  442d50:	b.eq	442d5c <wcrtomb@plt+0x3e04c>  // b.none
  442d54:	ldr	x0, [sp, #4144]
  442d58:	b	442ee0 <wcrtomb@plt+0x3e1d0>
  442d5c:	ldr	w0, [sp, #4140]
  442d60:	cmp	w0, #0x14
  442d64:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442d68:	ldr	w0, [sp, #4140]
  442d6c:	cmp	w0, #0x2
  442d70:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442d74:	ldr	w0, [sp, #4140]
  442d78:	cmp	w0, #0x1
  442d7c:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442d80:	ldr	w0, [sp, #4140]
  442d84:	cmp	w0, #0xd
  442d88:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442d8c:	ldr	w0, [sp, #4140]
  442d90:	cmp	w0, #0x26
  442d94:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442d98:	ldr	w0, [sp, #4140]
  442d9c:	cmp	w0, #0x5f
  442da0:	b.eq	442dbc <wcrtomb@plt+0x3e0ac>  // b.none
  442da4:	bl	404bc0 <__errno_location@plt>
  442da8:	mov	x1, x0
  442dac:	ldr	w0, [sp, #4140]
  442db0:	str	w0, [x1]
  442db4:	ldr	x0, [sp, #4144]
  442db8:	b	442ee0 <wcrtomb@plt+0x3e1d0>
  442dbc:	add	x0, sp, #0x1, lsl #12
  442dc0:	add	x0, x0, #0x8
  442dc4:	bl	45a3cc <argp_usage@@Base+0x112e0>
  442dc8:	cmp	w0, #0x0
  442dcc:	b.eq	442ddc <wcrtomb@plt+0x3e0cc>  // b.none
  442dd0:	bl	404bc0 <__errno_location@plt>
  442dd4:	ldr	w0, [x0]
  442dd8:	bl	451a50 <argp_usage@@Base+0x8964>
  442ddc:	ldr	w0, [sp, #60]
  442de0:	cmp	w0, #0x0
  442de4:	b.lt	442e1c <wcrtomb@plt+0x3e10c>  // b.tstop
  442de8:	ldr	w0, [sp, #4104]
  442dec:	ldr	w1, [sp, #60]
  442df0:	cmp	w1, w0
  442df4:	b.ne	442e1c <wcrtomb@plt+0x3e10c>  // b.any
  442df8:	add	x0, sp, #0x1, lsl #12
  442dfc:	add	x0, x0, #0x8
  442e00:	bl	45a490 <argp_usage@@Base+0x113a4>
  442e04:	bl	404bc0 <__errno_location@plt>
  442e08:	mov	x1, x0
  442e0c:	mov	w0, #0x9                   	// #9
  442e10:	str	w0, [x1]
  442e14:	mov	x0, #0xffffffffffffffff    	// #-1
  442e18:	b	442ee0 <wcrtomb@plt+0x3e1d0>
  442e1c:	ldr	w0, [sp, #60]
  442e20:	bl	404110 <fchdir@plt>
  442e24:	cmp	w0, #0x0
  442e28:	b.eq	442e5c <wcrtomb@plt+0x3e14c>  // b.none
  442e2c:	bl	404bc0 <__errno_location@plt>
  442e30:	ldr	w0, [x0]
  442e34:	str	w0, [sp, #4124]
  442e38:	add	x0, sp, #0x1, lsl #12
  442e3c:	add	x0, x0, #0x8
  442e40:	bl	45a490 <argp_usage@@Base+0x113a4>
  442e44:	bl	404bc0 <__errno_location@plt>
  442e48:	mov	x1, x0
  442e4c:	ldr	w0, [sp, #4124]
  442e50:	str	w0, [x1]
  442e54:	mov	x0, #0xffffffffffffffff    	// #-1
  442e58:	b	442ee0 <wcrtomb@plt+0x3e1d0>
  442e5c:	ldr	x3, [sp, #24]
  442e60:	ldr	x2, [sp, #32]
  442e64:	ldr	x1, [sp, #40]
  442e68:	ldr	x0, [sp, #48]
  442e6c:	bl	404780 <getxattr@plt>
  442e70:	str	x0, [sp, #4128]
  442e74:	ldr	x0, [sp, #4128]
  442e78:	cmn	x0, #0x1
  442e7c:	b.ne	442e8c <wcrtomb@plt+0x3e17c>  // b.any
  442e80:	bl	404bc0 <__errno_location@plt>
  442e84:	ldr	w0, [x0]
  442e88:	b	442e90 <wcrtomb@plt+0x3e180>
  442e8c:	mov	w0, #0x0                   	// #0
  442e90:	str	w0, [sp, #4124]
  442e94:	add	x0, sp, #0x1, lsl #12
  442e98:	add	x0, x0, #0x8
  442e9c:	bl	45a450 <argp_usage@@Base+0x11364>
  442ea0:	cmp	w0, #0x0
  442ea4:	b.eq	442eb4 <wcrtomb@plt+0x3e1a4>  // b.none
  442ea8:	bl	404bc0 <__errno_location@plt>
  442eac:	ldr	w0, [x0]
  442eb0:	bl	451a8c <argp_usage@@Base+0x89a0>
  442eb4:	add	x0, sp, #0x1, lsl #12
  442eb8:	add	x0, x0, #0x8
  442ebc:	bl	45a490 <argp_usage@@Base+0x113a4>
  442ec0:	ldr	w0, [sp, #4124]
  442ec4:	cmp	w0, #0x0
  442ec8:	b.eq	442edc <wcrtomb@plt+0x3e1cc>  // b.none
  442ecc:	bl	404bc0 <__errno_location@plt>
  442ed0:	mov	x1, x0
  442ed4:	ldr	w0, [sp, #4124]
  442ed8:	str	w0, [x1]
  442edc:	ldr	x0, [sp, #4128]
  442ee0:	ldp	x29, x30, [sp]
  442ee4:	mov	x12, #0x1040                	// #4160
  442ee8:	add	sp, sp, x12
  442eec:	ret
  442ef0:	mov	x12, #0x1040                	// #4160
  442ef4:	sub	sp, sp, x12
  442ef8:	stp	x29, x30, [sp]
  442efc:	mov	x29, sp
  442f00:	str	w0, [sp, #60]
  442f04:	str	x1, [sp, #48]
  442f08:	str	x2, [sp, #40]
  442f0c:	str	x3, [sp, #32]
  442f10:	str	x4, [sp, #24]
  442f14:	ldr	w0, [sp, #60]
  442f18:	cmn	w0, #0x64
  442f1c:	b.eq	442f30 <wcrtomb@plt+0x3e220>  // b.none
  442f20:	ldr	x0, [sp, #48]
  442f24:	ldrb	w0, [x0]
  442f28:	cmp	w0, #0x2f
  442f2c:	b.ne	442f48 <wcrtomb@plt+0x3e238>  // b.any
  442f30:	ldr	x3, [sp, #24]
  442f34:	ldr	x2, [sp, #32]
  442f38:	ldr	x1, [sp, #40]
  442f3c:	ldr	x0, [sp, #48]
  442f40:	bl	404610 <lgetxattr@plt>
  442f44:	b	44313c <wcrtomb@plt+0x3e42c>
  442f48:	add	x0, sp, #0x48
  442f4c:	ldr	x2, [sp, #48]
  442f50:	ldr	w1, [sp, #60]
  442f54:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  442f58:	str	x0, [sp, #4152]
  442f5c:	ldr	x0, [sp, #4152]
  442f60:	cmp	x0, #0x0
  442f64:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  442f68:	ldr	x3, [sp, #24]
  442f6c:	ldr	x2, [sp, #32]
  442f70:	ldr	x1, [sp, #40]
  442f74:	ldr	x0, [sp, #4152]
  442f78:	bl	404610 <lgetxattr@plt>
  442f7c:	str	x0, [sp, #4144]
  442f80:	bl	404bc0 <__errno_location@plt>
  442f84:	ldr	w0, [x0]
  442f88:	str	w0, [sp, #4140]
  442f8c:	add	x0, sp, #0x48
  442f90:	ldr	x1, [sp, #4152]
  442f94:	cmp	x1, x0
  442f98:	b.eq	442fa4 <wcrtomb@plt+0x3e294>  // b.none
  442f9c:	ldr	x0, [sp, #4152]
  442fa0:	bl	404880 <free@plt>
  442fa4:	ldr	x0, [sp, #4144]
  442fa8:	cmn	x0, #0x1
  442fac:	b.eq	442fb8 <wcrtomb@plt+0x3e2a8>  // b.none
  442fb0:	ldr	x0, [sp, #4144]
  442fb4:	b	44313c <wcrtomb@plt+0x3e42c>
  442fb8:	ldr	w0, [sp, #4140]
  442fbc:	cmp	w0, #0x14
  442fc0:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  442fc4:	ldr	w0, [sp, #4140]
  442fc8:	cmp	w0, #0x2
  442fcc:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  442fd0:	ldr	w0, [sp, #4140]
  442fd4:	cmp	w0, #0x1
  442fd8:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  442fdc:	ldr	w0, [sp, #4140]
  442fe0:	cmp	w0, #0xd
  442fe4:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  442fe8:	ldr	w0, [sp, #4140]
  442fec:	cmp	w0, #0x26
  442ff0:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  442ff4:	ldr	w0, [sp, #4140]
  442ff8:	cmp	w0, #0x5f
  442ffc:	b.eq	443018 <wcrtomb@plt+0x3e308>  // b.none
  443000:	bl	404bc0 <__errno_location@plt>
  443004:	mov	x1, x0
  443008:	ldr	w0, [sp, #4140]
  44300c:	str	w0, [x1]
  443010:	ldr	x0, [sp, #4144]
  443014:	b	44313c <wcrtomb@plt+0x3e42c>
  443018:	add	x0, sp, #0x1, lsl #12
  44301c:	add	x0, x0, #0x8
  443020:	bl	45a3cc <argp_usage@@Base+0x112e0>
  443024:	cmp	w0, #0x0
  443028:	b.eq	443038 <wcrtomb@plt+0x3e328>  // b.none
  44302c:	bl	404bc0 <__errno_location@plt>
  443030:	ldr	w0, [x0]
  443034:	bl	451a50 <argp_usage@@Base+0x8964>
  443038:	ldr	w0, [sp, #60]
  44303c:	cmp	w0, #0x0
  443040:	b.lt	443078 <wcrtomb@plt+0x3e368>  // b.tstop
  443044:	ldr	w0, [sp, #4104]
  443048:	ldr	w1, [sp, #60]
  44304c:	cmp	w1, w0
  443050:	b.ne	443078 <wcrtomb@plt+0x3e368>  // b.any
  443054:	add	x0, sp, #0x1, lsl #12
  443058:	add	x0, x0, #0x8
  44305c:	bl	45a490 <argp_usage@@Base+0x113a4>
  443060:	bl	404bc0 <__errno_location@plt>
  443064:	mov	x1, x0
  443068:	mov	w0, #0x9                   	// #9
  44306c:	str	w0, [x1]
  443070:	mov	x0, #0xffffffffffffffff    	// #-1
  443074:	b	44313c <wcrtomb@plt+0x3e42c>
  443078:	ldr	w0, [sp, #60]
  44307c:	bl	404110 <fchdir@plt>
  443080:	cmp	w0, #0x0
  443084:	b.eq	4430b8 <wcrtomb@plt+0x3e3a8>  // b.none
  443088:	bl	404bc0 <__errno_location@plt>
  44308c:	ldr	w0, [x0]
  443090:	str	w0, [sp, #4124]
  443094:	add	x0, sp, #0x1, lsl #12
  443098:	add	x0, x0, #0x8
  44309c:	bl	45a490 <argp_usage@@Base+0x113a4>
  4430a0:	bl	404bc0 <__errno_location@plt>
  4430a4:	mov	x1, x0
  4430a8:	ldr	w0, [sp, #4124]
  4430ac:	str	w0, [x1]
  4430b0:	mov	x0, #0xffffffffffffffff    	// #-1
  4430b4:	b	44313c <wcrtomb@plt+0x3e42c>
  4430b8:	ldr	x3, [sp, #24]
  4430bc:	ldr	x2, [sp, #32]
  4430c0:	ldr	x1, [sp, #40]
  4430c4:	ldr	x0, [sp, #48]
  4430c8:	bl	404610 <lgetxattr@plt>
  4430cc:	str	x0, [sp, #4128]
  4430d0:	ldr	x0, [sp, #4128]
  4430d4:	cmn	x0, #0x1
  4430d8:	b.ne	4430e8 <wcrtomb@plt+0x3e3d8>  // b.any
  4430dc:	bl	404bc0 <__errno_location@plt>
  4430e0:	ldr	w0, [x0]
  4430e4:	b	4430ec <wcrtomb@plt+0x3e3dc>
  4430e8:	mov	w0, #0x0                   	// #0
  4430ec:	str	w0, [sp, #4124]
  4430f0:	add	x0, sp, #0x1, lsl #12
  4430f4:	add	x0, x0, #0x8
  4430f8:	bl	45a450 <argp_usage@@Base+0x11364>
  4430fc:	cmp	w0, #0x0
  443100:	b.eq	443110 <wcrtomb@plt+0x3e400>  // b.none
  443104:	bl	404bc0 <__errno_location@plt>
  443108:	ldr	w0, [x0]
  44310c:	bl	451a8c <argp_usage@@Base+0x89a0>
  443110:	add	x0, sp, #0x1, lsl #12
  443114:	add	x0, x0, #0x8
  443118:	bl	45a490 <argp_usage@@Base+0x113a4>
  44311c:	ldr	w0, [sp, #4124]
  443120:	cmp	w0, #0x0
  443124:	b.eq	443138 <wcrtomb@plt+0x3e428>  // b.none
  443128:	bl	404bc0 <__errno_location@plt>
  44312c:	mov	x1, x0
  443130:	ldr	w0, [sp, #4124]
  443134:	str	w0, [x1]
  443138:	ldr	x0, [sp, #4128]
  44313c:	ldp	x29, x30, [sp]
  443140:	mov	x12, #0x1040                	// #4160
  443144:	add	sp, sp, x12
  443148:	ret
  44314c:	mov	x12, #0x1030                	// #4144
  443150:	sub	sp, sp, x12
  443154:	stp	x29, x30, [sp]
  443158:	mov	x29, sp
  44315c:	str	w0, [sp, #44]
  443160:	str	x1, [sp, #32]
  443164:	str	x2, [sp, #24]
  443168:	str	x3, [sp, #16]
  44316c:	ldr	w0, [sp, #44]
  443170:	cmn	w0, #0x64
  443174:	b.eq	443188 <wcrtomb@plt+0x3e478>  // b.none
  443178:	ldr	x0, [sp, #32]
  44317c:	ldrb	w0, [x0]
  443180:	cmp	w0, #0x2f
  443184:	b.ne	44319c <wcrtomb@plt+0x3e48c>  // b.any
  443188:	ldr	x2, [sp, #16]
  44318c:	ldr	x1, [sp, #24]
  443190:	ldr	x0, [sp, #32]
  443194:	bl	404580 <listxattr@plt>
  443198:	b	443374 <wcrtomb@plt+0x3e664>
  44319c:	add	x0, sp, #0x38
  4431a0:	ldr	x2, [sp, #32]
  4431a4:	ldr	w1, [sp, #44]
  4431a8:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  4431ac:	str	x0, [sp, #4136]
  4431b0:	ldr	x0, [sp, #4136]
  4431b4:	cmp	x0, #0x0
  4431b8:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  4431bc:	ldr	x2, [sp, #16]
  4431c0:	ldr	x1, [sp, #24]
  4431c4:	ldr	x0, [sp, #4136]
  4431c8:	bl	404580 <listxattr@plt>
  4431cc:	str	x0, [sp, #4128]
  4431d0:	bl	404bc0 <__errno_location@plt>
  4431d4:	ldr	w0, [x0]
  4431d8:	str	w0, [sp, #4124]
  4431dc:	add	x0, sp, #0x38
  4431e0:	ldr	x1, [sp, #4136]
  4431e4:	cmp	x1, x0
  4431e8:	b.eq	4431f4 <wcrtomb@plt+0x3e4e4>  // b.none
  4431ec:	ldr	x0, [sp, #4136]
  4431f0:	bl	404880 <free@plt>
  4431f4:	ldr	x0, [sp, #4128]
  4431f8:	cmn	x0, #0x1
  4431fc:	b.eq	443208 <wcrtomb@plt+0x3e4f8>  // b.none
  443200:	ldr	x0, [sp, #4128]
  443204:	b	443374 <wcrtomb@plt+0x3e664>
  443208:	ldr	w0, [sp, #4124]
  44320c:	cmp	w0, #0x14
  443210:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  443214:	ldr	w0, [sp, #4124]
  443218:	cmp	w0, #0x2
  44321c:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  443220:	ldr	w0, [sp, #4124]
  443224:	cmp	w0, #0x1
  443228:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  44322c:	ldr	w0, [sp, #4124]
  443230:	cmp	w0, #0xd
  443234:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  443238:	ldr	w0, [sp, #4124]
  44323c:	cmp	w0, #0x26
  443240:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  443244:	ldr	w0, [sp, #4124]
  443248:	cmp	w0, #0x5f
  44324c:	b.eq	443268 <wcrtomb@plt+0x3e558>  // b.none
  443250:	bl	404bc0 <__errno_location@plt>
  443254:	mov	x1, x0
  443258:	ldr	w0, [sp, #4124]
  44325c:	str	w0, [x1]
  443260:	ldr	x0, [sp, #4128]
  443264:	b	443374 <wcrtomb@plt+0x3e664>
  443268:	add	x0, sp, #0xff8
  44326c:	bl	45a3cc <argp_usage@@Base+0x112e0>
  443270:	cmp	w0, #0x0
  443274:	b.eq	443284 <wcrtomb@plt+0x3e574>  // b.none
  443278:	bl	404bc0 <__errno_location@plt>
  44327c:	ldr	w0, [x0]
  443280:	bl	451a50 <argp_usage@@Base+0x8964>
  443284:	ldr	w0, [sp, #44]
  443288:	cmp	w0, #0x0
  44328c:	b.lt	4432c0 <wcrtomb@plt+0x3e5b0>  // b.tstop
  443290:	ldr	w0, [sp, #4088]
  443294:	ldr	w1, [sp, #44]
  443298:	cmp	w1, w0
  44329c:	b.ne	4432c0 <wcrtomb@plt+0x3e5b0>  // b.any
  4432a0:	add	x0, sp, #0xff8
  4432a4:	bl	45a490 <argp_usage@@Base+0x113a4>
  4432a8:	bl	404bc0 <__errno_location@plt>
  4432ac:	mov	x1, x0
  4432b0:	mov	w0, #0x9                   	// #9
  4432b4:	str	w0, [x1]
  4432b8:	mov	x0, #0xffffffffffffffff    	// #-1
  4432bc:	b	443374 <wcrtomb@plt+0x3e664>
  4432c0:	ldr	w0, [sp, #44]
  4432c4:	bl	404110 <fchdir@plt>
  4432c8:	cmp	w0, #0x0
  4432cc:	b.eq	4432fc <wcrtomb@plt+0x3e5ec>  // b.none
  4432d0:	bl	404bc0 <__errno_location@plt>
  4432d4:	ldr	w0, [x0]
  4432d8:	str	w0, [sp, #4108]
  4432dc:	add	x0, sp, #0xff8
  4432e0:	bl	45a490 <argp_usage@@Base+0x113a4>
  4432e4:	bl	404bc0 <__errno_location@plt>
  4432e8:	mov	x1, x0
  4432ec:	ldr	w0, [sp, #4108]
  4432f0:	str	w0, [x1]
  4432f4:	mov	x0, #0xffffffffffffffff    	// #-1
  4432f8:	b	443374 <wcrtomb@plt+0x3e664>
  4432fc:	ldr	x2, [sp, #16]
  443300:	ldr	x1, [sp, #24]
  443304:	ldr	x0, [sp, #32]
  443308:	bl	404580 <listxattr@plt>
  44330c:	str	x0, [sp, #4112]
  443310:	ldr	x0, [sp, #4112]
  443314:	cmn	x0, #0x1
  443318:	b.ne	443328 <wcrtomb@plt+0x3e618>  // b.any
  44331c:	bl	404bc0 <__errno_location@plt>
  443320:	ldr	w0, [x0]
  443324:	b	44332c <wcrtomb@plt+0x3e61c>
  443328:	mov	w0, #0x0                   	// #0
  44332c:	str	w0, [sp, #4108]
  443330:	add	x0, sp, #0xff8
  443334:	bl	45a450 <argp_usage@@Base+0x11364>
  443338:	cmp	w0, #0x0
  44333c:	b.eq	44334c <wcrtomb@plt+0x3e63c>  // b.none
  443340:	bl	404bc0 <__errno_location@plt>
  443344:	ldr	w0, [x0]
  443348:	bl	451a8c <argp_usage@@Base+0x89a0>
  44334c:	add	x0, sp, #0xff8
  443350:	bl	45a490 <argp_usage@@Base+0x113a4>
  443354:	ldr	w0, [sp, #4108]
  443358:	cmp	w0, #0x0
  44335c:	b.eq	443370 <wcrtomb@plt+0x3e660>  // b.none
  443360:	bl	404bc0 <__errno_location@plt>
  443364:	mov	x1, x0
  443368:	ldr	w0, [sp, #4108]
  44336c:	str	w0, [x1]
  443370:	ldr	x0, [sp, #4112]
  443374:	ldp	x29, x30, [sp]
  443378:	mov	x12, #0x1030                	// #4144
  44337c:	add	sp, sp, x12
  443380:	ret
  443384:	mov	x12, #0x1030                	// #4144
  443388:	sub	sp, sp, x12
  44338c:	stp	x29, x30, [sp]
  443390:	mov	x29, sp
  443394:	str	w0, [sp, #44]
  443398:	str	x1, [sp, #32]
  44339c:	str	x2, [sp, #24]
  4433a0:	str	x3, [sp, #16]
  4433a4:	ldr	w0, [sp, #44]
  4433a8:	cmn	w0, #0x64
  4433ac:	b.eq	4433c0 <wcrtomb@plt+0x3e6b0>  // b.none
  4433b0:	ldr	x0, [sp, #32]
  4433b4:	ldrb	w0, [x0]
  4433b8:	cmp	w0, #0x2f
  4433bc:	b.ne	4433d4 <wcrtomb@plt+0x3e6c4>  // b.any
  4433c0:	ldr	x2, [sp, #16]
  4433c4:	ldr	x1, [sp, #24]
  4433c8:	ldr	x0, [sp, #32]
  4433cc:	bl	404af0 <llistxattr@plt>
  4433d0:	b	4435ac <wcrtomb@plt+0x3e89c>
  4433d4:	add	x0, sp, #0x38
  4433d8:	ldr	x2, [sp, #32]
  4433dc:	ldr	w1, [sp, #44]
  4433e0:	bl	45d1e8 <_obstack_memory_used@@Base+0xa8>
  4433e4:	str	x0, [sp, #4136]
  4433e8:	ldr	x0, [sp, #4136]
  4433ec:	cmp	x0, #0x0
  4433f0:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  4433f4:	ldr	x2, [sp, #16]
  4433f8:	ldr	x1, [sp, #24]
  4433fc:	ldr	x0, [sp, #4136]
  443400:	bl	404af0 <llistxattr@plt>
  443404:	str	x0, [sp, #4128]
  443408:	bl	404bc0 <__errno_location@plt>
  44340c:	ldr	w0, [x0]
  443410:	str	w0, [sp, #4124]
  443414:	add	x0, sp, #0x38
  443418:	ldr	x1, [sp, #4136]
  44341c:	cmp	x1, x0
  443420:	b.eq	44342c <wcrtomb@plt+0x3e71c>  // b.none
  443424:	ldr	x0, [sp, #4136]
  443428:	bl	404880 <free@plt>
  44342c:	ldr	x0, [sp, #4128]
  443430:	cmn	x0, #0x1
  443434:	b.eq	443440 <wcrtomb@plt+0x3e730>  // b.none
  443438:	ldr	x0, [sp, #4128]
  44343c:	b	4435ac <wcrtomb@plt+0x3e89c>
  443440:	ldr	w0, [sp, #4124]
  443444:	cmp	w0, #0x14
  443448:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  44344c:	ldr	w0, [sp, #4124]
  443450:	cmp	w0, #0x2
  443454:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  443458:	ldr	w0, [sp, #4124]
  44345c:	cmp	w0, #0x1
  443460:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  443464:	ldr	w0, [sp, #4124]
  443468:	cmp	w0, #0xd
  44346c:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  443470:	ldr	w0, [sp, #4124]
  443474:	cmp	w0, #0x26
  443478:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  44347c:	ldr	w0, [sp, #4124]
  443480:	cmp	w0, #0x5f
  443484:	b.eq	4434a0 <wcrtomb@plt+0x3e790>  // b.none
  443488:	bl	404bc0 <__errno_location@plt>
  44348c:	mov	x1, x0
  443490:	ldr	w0, [sp, #4124]
  443494:	str	w0, [x1]
  443498:	ldr	x0, [sp, #4128]
  44349c:	b	4435ac <wcrtomb@plt+0x3e89c>
  4434a0:	add	x0, sp, #0xff8
  4434a4:	bl	45a3cc <argp_usage@@Base+0x112e0>
  4434a8:	cmp	w0, #0x0
  4434ac:	b.eq	4434bc <wcrtomb@plt+0x3e7ac>  // b.none
  4434b0:	bl	404bc0 <__errno_location@plt>
  4434b4:	ldr	w0, [x0]
  4434b8:	bl	451a50 <argp_usage@@Base+0x8964>
  4434bc:	ldr	w0, [sp, #44]
  4434c0:	cmp	w0, #0x0
  4434c4:	b.lt	4434f8 <wcrtomb@plt+0x3e7e8>  // b.tstop
  4434c8:	ldr	w0, [sp, #4088]
  4434cc:	ldr	w1, [sp, #44]
  4434d0:	cmp	w1, w0
  4434d4:	b.ne	4434f8 <wcrtomb@plt+0x3e7e8>  // b.any
  4434d8:	add	x0, sp, #0xff8
  4434dc:	bl	45a490 <argp_usage@@Base+0x113a4>
  4434e0:	bl	404bc0 <__errno_location@plt>
  4434e4:	mov	x1, x0
  4434e8:	mov	w0, #0x9                   	// #9
  4434ec:	str	w0, [x1]
  4434f0:	mov	x0, #0xffffffffffffffff    	// #-1
  4434f4:	b	4435ac <wcrtomb@plt+0x3e89c>
  4434f8:	ldr	w0, [sp, #44]
  4434fc:	bl	404110 <fchdir@plt>
  443500:	cmp	w0, #0x0
  443504:	b.eq	443534 <wcrtomb@plt+0x3e824>  // b.none
  443508:	bl	404bc0 <__errno_location@plt>
  44350c:	ldr	w0, [x0]
  443510:	str	w0, [sp, #4108]
  443514:	add	x0, sp, #0xff8
  443518:	bl	45a490 <argp_usage@@Base+0x113a4>
  44351c:	bl	404bc0 <__errno_location@plt>
  443520:	mov	x1, x0
  443524:	ldr	w0, [sp, #4108]
  443528:	str	w0, [x1]
  44352c:	mov	x0, #0xffffffffffffffff    	// #-1
  443530:	b	4435ac <wcrtomb@plt+0x3e89c>
  443534:	ldr	x2, [sp, #16]
  443538:	ldr	x1, [sp, #24]
  44353c:	ldr	x0, [sp, #32]
  443540:	bl	404af0 <llistxattr@plt>
  443544:	str	x0, [sp, #4112]
  443548:	ldr	x0, [sp, #4112]
  44354c:	cmn	x0, #0x1
  443550:	b.ne	443560 <wcrtomb@plt+0x3e850>  // b.any
  443554:	bl	404bc0 <__errno_location@plt>
  443558:	ldr	w0, [x0]
  44355c:	b	443564 <wcrtomb@plt+0x3e854>
  443560:	mov	w0, #0x0                   	// #0
  443564:	str	w0, [sp, #4108]
  443568:	add	x0, sp, #0xff8
  44356c:	bl	45a450 <argp_usage@@Base+0x11364>
  443570:	cmp	w0, #0x0
  443574:	b.eq	443584 <wcrtomb@plt+0x3e874>  // b.none
  443578:	bl	404bc0 <__errno_location@plt>
  44357c:	ldr	w0, [x0]
  443580:	bl	451a8c <argp_usage@@Base+0x89a0>
  443584:	add	x0, sp, #0xff8
  443588:	bl	45a490 <argp_usage@@Base+0x113a4>
  44358c:	ldr	w0, [sp, #4108]
  443590:	cmp	w0, #0x0
  443594:	b.eq	4435a8 <wcrtomb@plt+0x3e898>  // b.none
  443598:	bl	404bc0 <__errno_location@plt>
  44359c:	mov	x1, x0
  4435a0:	ldr	w0, [sp, #4108]
  4435a4:	str	w0, [x1]
  4435a8:	ldr	x0, [sp, #4112]
  4435ac:	ldp	x29, x30, [sp]
  4435b0:	mov	x12, #0x1030                	// #4144
  4435b4:	add	sp, sp, x12
  4435b8:	ret
  4435bc:	stp	x29, x30, [sp, #-112]!
  4435c0:	mov	x29, sp
  4435c4:	str	w0, [sp, #44]
  4435c8:	str	x1, [sp, #32]
  4435cc:	str	x2, [sp, #24]
  4435d0:	mov	x0, #0x400                 	// #1024
  4435d4:	str	x0, [sp, #96]
  4435d8:	mov	x0, #0x2000                	// #8192
  4435dc:	str	x0, [sp, #88]
  4435e0:	ldr	x1, [sp, #96]
  4435e4:	ldr	x0, [sp, #88]
  4435e8:	cmp	x1, x0
  4435ec:	b.cs	4435fc <wcrtomb@plt+0x3e8ec>  // b.hs, b.nlast
  4435f0:	ldr	x0, [sp, #96]
  4435f4:	add	x0, x0, #0x1
  4435f8:	b	443600 <wcrtomb@plt+0x3e8f0>
  4435fc:	ldr	x0, [sp, #88]
  443600:	str	x0, [sp, #80]
  443604:	ldr	x1, [sp, #24]
  443608:	ldr	x0, [sp, #80]
  44360c:	cmp	x1, x0
  443610:	b.cs	443620 <wcrtomb@plt+0x3e910>  // b.hs, b.nlast
  443614:	ldr	x0, [sp, #24]
  443618:	add	x0, x0, #0x1
  44361c:	b	443624 <wcrtomb@plt+0x3e914>
  443620:	ldr	x0, [sp, #80]
  443624:	str	x0, [sp, #104]
  443628:	ldr	x0, [sp, #104]
  44362c:	bl	4043f0 <malloc@plt>
  443630:	str	x0, [sp, #72]
  443634:	ldr	x0, [sp, #72]
  443638:	cmp	x0, #0x0
  44363c:	b.ne	443648 <wcrtomb@plt+0x3e938>  // b.any
  443640:	mov	x0, #0x0                   	// #0
  443644:	b	443730 <wcrtomb@plt+0x3ea20>
  443648:	ldr	x3, [sp, #104]
  44364c:	ldr	x2, [sp, #72]
  443650:	ldr	x1, [sp, #32]
  443654:	ldr	w0, [sp, #44]
  443658:	bl	404d00 <readlinkat@plt>
  44365c:	str	x0, [sp, #64]
  443660:	ldr	x0, [sp, #64]
  443664:	str	x0, [sp, #56]
  443668:	ldr	x0, [sp, #64]
  44366c:	cmp	x0, #0x0
  443670:	b.ge	4436b0 <wcrtomb@plt+0x3e9a0>  // b.tcont
  443674:	bl	404bc0 <__errno_location@plt>
  443678:	ldr	w0, [x0]
  44367c:	cmp	w0, #0x22
  443680:	b.eq	4436b0 <wcrtomb@plt+0x3e9a0>  // b.none
  443684:	bl	404bc0 <__errno_location@plt>
  443688:	ldr	w0, [x0]
  44368c:	str	w0, [sp, #52]
  443690:	ldr	x0, [sp, #72]
  443694:	bl	404880 <free@plt>
  443698:	bl	404bc0 <__errno_location@plt>
  44369c:	mov	x1, x0
  4436a0:	ldr	w0, [sp, #52]
  4436a4:	str	w0, [x1]
  4436a8:	mov	x0, #0x0                   	// #0
  4436ac:	b	443730 <wcrtomb@plt+0x3ea20>
  4436b0:	ldr	x1, [sp, #56]
  4436b4:	ldr	x0, [sp, #104]
  4436b8:	cmp	x1, x0
  4436bc:	b.cs	4436d8 <wcrtomb@plt+0x3e9c8>  // b.hs, b.nlast
  4436c0:	ldr	x1, [sp, #72]
  4436c4:	ldr	x0, [sp, #56]
  4436c8:	add	x0, x1, x0
  4436cc:	strb	wzr, [x0]
  4436d0:	ldr	x0, [sp, #72]
  4436d4:	b	443730 <wcrtomb@plt+0x3ea20>
  4436d8:	ldr	x0, [sp, #72]
  4436dc:	bl	404880 <free@plt>
  4436e0:	ldr	x1, [sp, #104]
  4436e4:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  4436e8:	cmp	x1, x0
  4436ec:	b.hi	443700 <wcrtomb@plt+0x3e9f0>  // b.pmore
  4436f0:	ldr	x0, [sp, #104]
  4436f4:	lsl	x0, x0, #1
  4436f8:	str	x0, [sp, #104]
  4436fc:	b	443628 <wcrtomb@plt+0x3e918>
  443700:	ldr	x1, [sp, #104]
  443704:	mov	x0, #0x7ffffffffffffffe    	// #9223372036854775806
  443708:	cmp	x1, x0
  44370c:	b.hi	44371c <wcrtomb@plt+0x3ea0c>  // b.pmore
  443710:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  443714:	str	x0, [sp, #104]
  443718:	b	443628 <wcrtomb@plt+0x3e918>
  44371c:	bl	404bc0 <__errno_location@plt>
  443720:	mov	x1, x0
  443724:	mov	w0, #0xc                   	// #12
  443728:	str	w0, [x1]
  44372c:	mov	x0, #0x0                   	// #0
  443730:	ldp	x29, x30, [sp], #112
  443734:	ret
  443738:	stp	x29, x30, [sp, #-16]!
  44373c:	mov	x29, sp
  443740:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  443744:	add	x0, x0, #0x418
  443748:	ldr	w0, [x0]
  44374c:	bl	4040d0 <exit@plt>
  443750:	stp	x29, x30, [sp, #-80]!
  443754:	mov	x29, sp
  443758:	str	x0, [sp, #40]
  44375c:	str	x1, [sp, #32]
  443760:	str	x2, [sp, #24]
  443764:	str	x3, [sp, #16]
  443768:	mov	x0, #0xffffffffffffffff    	// #-1
  44376c:	str	x0, [sp, #64]
  443770:	strb	wzr, [sp, #63]
  443774:	ldr	x0, [sp, #40]
  443778:	bl	4040b0 <strlen@plt>
  44377c:	str	x0, [sp, #48]
  443780:	str	xzr, [sp, #72]
  443784:	b	443858 <wcrtomb@plt+0x3eb48>
  443788:	ldr	x0, [sp, #72]
  44378c:	lsl	x0, x0, #3
  443790:	ldr	x1, [sp, #32]
  443794:	add	x0, x1, x0
  443798:	ldr	x0, [x0]
  44379c:	ldr	x2, [sp, #48]
  4437a0:	ldr	x1, [sp, #40]
  4437a4:	bl	404480 <strncmp@plt>
  4437a8:	cmp	w0, #0x0
  4437ac:	b.ne	44384c <wcrtomb@plt+0x3eb3c>  // b.any
  4437b0:	ldr	x0, [sp, #72]
  4437b4:	lsl	x0, x0, #3
  4437b8:	ldr	x1, [sp, #32]
  4437bc:	add	x0, x1, x0
  4437c0:	ldr	x0, [x0]
  4437c4:	bl	4040b0 <strlen@plt>
  4437c8:	mov	x1, x0
  4437cc:	ldr	x0, [sp, #48]
  4437d0:	cmp	x0, x1
  4437d4:	b.ne	4437e0 <wcrtomb@plt+0x3ead0>  // b.any
  4437d8:	ldr	x0, [sp, #72]
  4437dc:	b	44388c <wcrtomb@plt+0x3eb7c>
  4437e0:	ldr	x0, [sp, #64]
  4437e4:	cmn	x0, #0x1
  4437e8:	b.ne	4437f8 <wcrtomb@plt+0x3eae8>  // b.any
  4437ec:	ldr	x0, [sp, #72]
  4437f0:	str	x0, [sp, #64]
  4437f4:	b	44384c <wcrtomb@plt+0x3eb3c>
  4437f8:	ldr	x0, [sp, #24]
  4437fc:	cmp	x0, #0x0
  443800:	b.eq	443844 <wcrtomb@plt+0x3eb34>  // b.none
  443804:	ldr	x1, [sp, #64]
  443808:	ldr	x0, [sp, #16]
  44380c:	mul	x0, x1, x0
  443810:	ldr	x1, [sp, #24]
  443814:	add	x3, x1, x0
  443818:	ldr	x1, [sp, #16]
  44381c:	ldr	x0, [sp, #72]
  443820:	mul	x0, x1, x0
  443824:	ldr	x1, [sp, #24]
  443828:	add	x0, x1, x0
  44382c:	ldr	x2, [sp, #16]
  443830:	mov	x1, x0
  443834:	mov	x0, x3
  443838:	bl	404790 <memcmp@plt>
  44383c:	cmp	w0, #0x0
  443840:	b.eq	44384c <wcrtomb@plt+0x3eb3c>  // b.none
  443844:	mov	w0, #0x1                   	// #1
  443848:	strb	w0, [sp, #63]
  44384c:	ldr	x0, [sp, #72]
  443850:	add	x0, x0, #0x1
  443854:	str	x0, [sp, #72]
  443858:	ldr	x0, [sp, #72]
  44385c:	lsl	x0, x0, #3
  443860:	ldr	x1, [sp, #32]
  443864:	add	x0, x1, x0
  443868:	ldr	x0, [x0]
  44386c:	cmp	x0, #0x0
  443870:	b.ne	443788 <wcrtomb@plt+0x3ea78>  // b.any
  443874:	ldrb	w0, [sp, #63]
  443878:	cmp	w0, #0x0
  44387c:	b.eq	443888 <wcrtomb@plt+0x3eb78>  // b.none
  443880:	mov	x0, #0xfffffffffffffffe    	// #-2
  443884:	b	44388c <wcrtomb@plt+0x3eb7c>
  443888:	ldr	x0, [sp, #64]
  44388c:	ldp	x29, x30, [sp], #80
  443890:	ret
  443894:	stp	x29, x30, [sp, #-80]!
  443898:	mov	x29, sp
  44389c:	str	x19, [sp, #16]
  4438a0:	str	x0, [sp, #56]
  4438a4:	str	x1, [sp, #48]
  4438a8:	str	x2, [sp, #40]
  4438ac:	ldr	x0, [sp, #40]
  4438b0:	cmn	x0, #0x1
  4438b4:	b.ne	4438c8 <wcrtomb@plt+0x3ebb8>  // b.any
  4438b8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4438bc:	add	x0, x0, #0xc68
  4438c0:	bl	404c60 <gettext@plt>
  4438c4:	b	4438d4 <wcrtomb@plt+0x3ebc4>
  4438c8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4438cc:	add	x0, x0, #0xc88
  4438d0:	bl	404c60 <gettext@plt>
  4438d4:	str	x0, [sp, #72]
  4438d8:	ldr	x2, [sp, #48]
  4438dc:	mov	w1, #0x8                   	// #8
  4438e0:	mov	w0, #0x0                   	// #0
  4438e4:	bl	459b5c <argp_usage@@Base+0x10a70>
  4438e8:	mov	x19, x0
  4438ec:	ldr	x1, [sp, #56]
  4438f0:	mov	w0, #0x1                   	// #1
  4438f4:	bl	459f10 <argp_usage@@Base+0x10e24>
  4438f8:	mov	x4, x0
  4438fc:	mov	x3, x19
  443900:	ldr	x2, [sp, #72]
  443904:	mov	w1, #0x0                   	// #0
  443908:	mov	w0, #0x0                   	// #0
  44390c:	bl	404100 <error@plt>
  443910:	nop
  443914:	ldr	x19, [sp, #16]
  443918:	ldp	x29, x30, [sp], #80
  44391c:	ret
  443920:	stp	x29, x30, [sp, #-80]!
  443924:	mov	x29, sp
  443928:	str	x19, [sp, #16]
  44392c:	str	x0, [sp, #56]
  443930:	str	x1, [sp, #48]
  443934:	str	x2, [sp, #40]
  443938:	str	xzr, [sp, #64]
  44393c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443940:	add	x0, x0, #0xca8
  443944:	bl	404c60 <gettext@plt>
  443948:	mov	x2, x0
  44394c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  443950:	add	x0, x0, #0x498
  443954:	ldr	x0, [x0]
  443958:	mov	x1, x0
  44395c:	mov	x0, x2
  443960:	bl	404ab0 <fputs_unlocked@plt>
  443964:	str	xzr, [sp, #72]
  443968:	b	443a3c <wcrtomb@plt+0x3ed2c>
  44396c:	ldr	x0, [sp, #72]
  443970:	cmp	x0, #0x0
  443974:	b.eq	4439a4 <wcrtomb@plt+0x3ec94>  // b.none
  443978:	ldr	x1, [sp, #40]
  44397c:	ldr	x0, [sp, #72]
  443980:	mul	x0, x1, x0
  443984:	ldr	x1, [sp, #48]
  443988:	add	x0, x1, x0
  44398c:	ldr	x2, [sp, #40]
  443990:	mov	x1, x0
  443994:	ldr	x0, [sp, #64]
  443998:	bl	404790 <memcmp@plt>
  44399c:	cmp	w0, #0x0
  4439a0:	b.eq	4439f8 <wcrtomb@plt+0x3ece8>  // b.none
  4439a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4439a8:	add	x0, x0, #0x498
  4439ac:	ldr	x19, [x0]
  4439b0:	ldr	x0, [sp, #72]
  4439b4:	lsl	x0, x0, #3
  4439b8:	ldr	x1, [sp, #56]
  4439bc:	add	x0, x1, x0
  4439c0:	ldr	x0, [x0]
  4439c4:	bl	459f38 <argp_usage@@Base+0x10e4c>
  4439c8:	mov	x2, x0
  4439cc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4439d0:	add	x1, x0, #0xcc0
  4439d4:	mov	x0, x19
  4439d8:	bl	404c90 <fprintf@plt>
  4439dc:	ldr	x1, [sp, #40]
  4439e0:	ldr	x0, [sp, #72]
  4439e4:	mul	x0, x1, x0
  4439e8:	ldr	x1, [sp, #48]
  4439ec:	add	x0, x1, x0
  4439f0:	str	x0, [sp, #64]
  4439f4:	b	443a30 <wcrtomb@plt+0x3ed20>
  4439f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4439fc:	add	x0, x0, #0x498
  443a00:	ldr	x19, [x0]
  443a04:	ldr	x0, [sp, #72]
  443a08:	lsl	x0, x0, #3
  443a0c:	ldr	x1, [sp, #56]
  443a10:	add	x0, x1, x0
  443a14:	ldr	x0, [x0]
  443a18:	bl	459f38 <argp_usage@@Base+0x10e4c>
  443a1c:	mov	x2, x0
  443a20:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443a24:	add	x1, x0, #0xcc8
  443a28:	mov	x0, x19
  443a2c:	bl	404c90 <fprintf@plt>
  443a30:	ldr	x0, [sp, #72]
  443a34:	add	x0, x0, #0x1
  443a38:	str	x0, [sp, #72]
  443a3c:	ldr	x0, [sp, #72]
  443a40:	lsl	x0, x0, #3
  443a44:	ldr	x1, [sp, #56]
  443a48:	add	x0, x1, x0
  443a4c:	ldr	x0, [x0]
  443a50:	cmp	x0, #0x0
  443a54:	b.ne	44396c <wcrtomb@plt+0x3ec5c>  // b.any
  443a58:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  443a5c:	add	x0, x0, #0x498
  443a60:	ldr	x0, [x0]
  443a64:	mov	x1, x0
  443a68:	mov	w0, #0xa                   	// #10
  443a6c:	bl	404330 <putc_unlocked@plt>
  443a70:	nop
  443a74:	ldr	x19, [sp, #16]
  443a78:	ldp	x29, x30, [sp], #80
  443a7c:	ret
  443a80:	stp	x29, x30, [sp, #-80]!
  443a84:	mov	x29, sp
  443a88:	str	x0, [sp, #56]
  443a8c:	str	x1, [sp, #48]
  443a90:	str	x2, [sp, #40]
  443a94:	str	x3, [sp, #32]
  443a98:	str	x4, [sp, #24]
  443a9c:	str	x5, [sp, #16]
  443aa0:	ldr	x3, [sp, #24]
  443aa4:	ldr	x2, [sp, #32]
  443aa8:	ldr	x1, [sp, #40]
  443aac:	ldr	x0, [sp, #48]
  443ab0:	bl	443750 <wcrtomb@plt+0x3ea40>
  443ab4:	str	x0, [sp, #72]
  443ab8:	ldr	x0, [sp, #72]
  443abc:	cmp	x0, #0x0
  443ac0:	b.lt	443acc <wcrtomb@plt+0x3edbc>  // b.tstop
  443ac4:	ldr	x0, [sp, #72]
  443ac8:	b	443af8 <wcrtomb@plt+0x3ede8>
  443acc:	ldr	x2, [sp, #72]
  443ad0:	ldr	x1, [sp, #48]
  443ad4:	ldr	x0, [sp, #56]
  443ad8:	bl	443894 <wcrtomb@plt+0x3eb84>
  443adc:	ldr	x2, [sp, #24]
  443ae0:	ldr	x1, [sp, #32]
  443ae4:	ldr	x0, [sp, #40]
  443ae8:	bl	443920 <wcrtomb@plt+0x3ec10>
  443aec:	ldr	x0, [sp, #16]
  443af0:	blr	x0
  443af4:	mov	x0, #0xffffffffffffffff    	// #-1
  443af8:	ldp	x29, x30, [sp], #80
  443afc:	ret
  443b00:	stp	x29, x30, [sp, #-64]!
  443b04:	mov	x29, sp
  443b08:	str	x0, [sp, #40]
  443b0c:	str	x1, [sp, #32]
  443b10:	str	x2, [sp, #24]
  443b14:	str	x3, [sp, #16]
  443b18:	str	xzr, [sp, #56]
  443b1c:	b	443b70 <wcrtomb@plt+0x3ee60>
  443b20:	ldr	x1, [sp, #16]
  443b24:	ldr	x0, [sp, #56]
  443b28:	mul	x0, x1, x0
  443b2c:	ldr	x1, [sp, #24]
  443b30:	add	x0, x1, x0
  443b34:	ldr	x2, [sp, #16]
  443b38:	mov	x1, x0
  443b3c:	ldr	x0, [sp, #40]
  443b40:	bl	404790 <memcmp@plt>
  443b44:	cmp	w0, #0x0
  443b48:	b.ne	443b64 <wcrtomb@plt+0x3ee54>  // b.any
  443b4c:	ldr	x0, [sp, #56]
  443b50:	lsl	x0, x0, #3
  443b54:	ldr	x1, [sp, #32]
  443b58:	add	x0, x1, x0
  443b5c:	ldr	x0, [x0]
  443b60:	b	443b90 <wcrtomb@plt+0x3ee80>
  443b64:	ldr	x0, [sp, #56]
  443b68:	add	x0, x0, #0x1
  443b6c:	str	x0, [sp, #56]
  443b70:	ldr	x0, [sp, #56]
  443b74:	lsl	x0, x0, #3
  443b78:	ldr	x1, [sp, #32]
  443b7c:	add	x0, x1, x0
  443b80:	ldr	x0, [x0]
  443b84:	cmp	x0, #0x0
  443b88:	b.ne	443b20 <wcrtomb@plt+0x3ee10>  // b.any
  443b8c:	mov	x0, #0x0                   	// #0
  443b90:	ldp	x29, x30, [sp], #64
  443b94:	ret
  443b98:	stp	x29, x30, [sp, #-48]!
  443b9c:	mov	x29, sp
  443ba0:	str	x0, [sp, #24]
  443ba4:	str	x1, [sp, #16]
  443ba8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443bac:	add	x0, x0, #0xcd0
  443bb0:	str	x0, [sp, #40]
  443bb4:	b	443c58 <wcrtomb@plt+0x3ef48>
  443bb8:	ldr	x0, [sp, #40]
  443bbc:	ldrb	w0, [x0, #14]
  443bc0:	cmp	w0, #0x0
  443bc4:	b.ne	443c48 <wcrtomb@plt+0x3ef38>  // b.any
  443bc8:	ldr	x0, [sp, #40]
  443bcc:	ldrb	w0, [x0, #15]
  443bd0:	cmp	w0, #0x20
  443bd4:	b.eq	443c48 <wcrtomb@plt+0x3ef38>  // b.none
  443bd8:	ldr	x0, [sp, #40]
  443bdc:	ldrb	w0, [x0, #15]
  443be0:	and	x0, x0, #0xff
  443be4:	ldr	x1, [sp, #16]
  443be8:	add	x0, x1, x0
  443bec:	ldr	w1, [x0]
  443bf0:	ldr	x0, [sp, #16]
  443bf4:	ldr	w0, [x0, #32]
  443bf8:	cmp	w1, w0
  443bfc:	b.lt	443c4c <wcrtomb@plt+0x3ef3c>  // b.tstop
  443c00:	ldr	x0, [sp, #24]
  443c04:	ldr	x0, [x0]
  443c08:	ldr	x2, [x0, #48]
  443c0c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443c10:	add	x1, x0, #0xd60
  443c14:	mov	x0, x2
  443c18:	bl	404870 <dgettext@plt>
  443c1c:	mov	x1, x0
  443c20:	ldr	x0, [sp, #40]
  443c24:	mov	x5, x0
  443c28:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443c2c:	add	x4, x0, #0xd98
  443c30:	mov	x3, x1
  443c34:	mov	w2, #0x0                   	// #0
  443c38:	mov	w1, #0x0                   	// #0
  443c3c:	ldr	x0, [sp, #24]
  443c40:	bl	4473e4 <argp_failure@@Base>
  443c44:	b	443ca0 <wcrtomb@plt+0x3ef90>
  443c48:	nop
  443c4c:	ldr	x0, [sp, #40]
  443c50:	add	x0, x0, #0x10
  443c54:	str	x0, [sp, #40]
  443c58:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443c5c:	add	x0, x0, #0xd60
  443c60:	ldr	x1, [sp, #40]
  443c64:	cmp	x1, x0
  443c68:	b.cc	443bb8 <wcrtomb@plt+0x3eea8>  // b.lo, b.ul, b.last
  443c6c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  443c70:	add	x0, x0, #0x3f0
  443c74:	ldr	x1, [sp, #16]
  443c78:	ldp	x2, x3, [x1]
  443c7c:	stp	x2, x3, [x0]
  443c80:	ldp	x2, x3, [x1, #16]
  443c84:	stp	x2, x3, [x0, #16]
  443c88:	ldr	x1, [x1, #32]
  443c8c:	str	x1, [x0, #32]
  443c90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  443c94:	add	x0, x0, #0x3f0
  443c98:	mov	w1, #0x1                   	// #1
  443c9c:	str	w1, [x0, #36]
  443ca0:	ldp	x29, x30, [sp], #48
  443ca4:	ret
  443ca8:	stp	x29, x30, [sp, #-112]!
  443cac:	mov	x29, sp
  443cb0:	str	x0, [sp, #24]
  443cb4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443cb8:	add	x0, x0, #0xda0
  443cbc:	bl	404bf0 <getenv@plt>
  443cc0:	str	x0, [sp, #104]
  443cc4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  443cc8:	add	x1, x0, #0x3f0
  443ccc:	add	x0, sp, #0x20
  443cd0:	ldp	x2, x3, [x1]
  443cd4:	stp	x2, x3, [x0]
  443cd8:	ldp	x2, x3, [x1, #16]
  443cdc:	stp	x2, x3, [x0, #16]
  443ce0:	ldr	x1, [x1, #32]
  443ce4:	str	x1, [x0, #32]
  443ce8:	ldr	x0, [sp, #104]
  443cec:	cmp	x0, #0x0
  443cf0:	b.eq	4441b0 <wcrtomb@plt+0x3f4a0>  // b.none
  443cf4:	b	444190 <wcrtomb@plt+0x3f480>
  443cf8:	ldr	x0, [sp, #104]
  443cfc:	add	x0, x0, #0x1
  443d00:	str	x0, [sp, #104]
  443d04:	bl	4047f0 <__ctype_b_loc@plt>
  443d08:	ldr	x1, [x0]
  443d0c:	ldr	x0, [sp, #104]
  443d10:	ldrb	w0, [x0]
  443d14:	and	x0, x0, #0xff
  443d18:	lsl	x0, x0, #1
  443d1c:	add	x0, x1, x0
  443d20:	ldrh	w0, [x0]
  443d24:	and	w0, w0, #0x2000
  443d28:	cmp	w0, #0x0
  443d2c:	b.ne	443cf8 <wcrtomb@plt+0x3efe8>  // b.any
  443d30:	bl	4047f0 <__ctype_b_loc@plt>
  443d34:	ldr	x1, [x0]
  443d38:	ldr	x0, [sp, #104]
  443d3c:	ldrb	w0, [x0]
  443d40:	and	x0, x0, #0xff
  443d44:	lsl	x0, x0, #1
  443d48:	add	x0, x1, x0
  443d4c:	ldrh	w0, [x0]
  443d50:	and	w0, w0, #0x400
  443d54:	cmp	w0, #0x0
  443d58:	b.eq	444138 <wcrtomb@plt+0x3f428>  // b.none
  443d5c:	str	wzr, [sp, #84]
  443d60:	str	wzr, [sp, #80]
  443d64:	ldr	x0, [sp, #104]
  443d68:	str	x0, [sp, #72]
  443d6c:	b	443d7c <wcrtomb@plt+0x3f06c>
  443d70:	ldr	x0, [sp, #72]
  443d74:	add	x0, x0, #0x1
  443d78:	str	x0, [sp, #72]
  443d7c:	bl	4047f0 <__ctype_b_loc@plt>
  443d80:	ldr	x1, [x0]
  443d84:	ldr	x0, [sp, #72]
  443d88:	ldrb	w0, [x0]
  443d8c:	and	x0, x0, #0xff
  443d90:	lsl	x0, x0, #1
  443d94:	add	x0, x1, x0
  443d98:	ldrh	w0, [x0]
  443d9c:	and	w0, w0, #0x8
  443da0:	cmp	w0, #0x0
  443da4:	b.ne	443d70 <wcrtomb@plt+0x3f060>  // b.any
  443da8:	ldr	x0, [sp, #72]
  443dac:	ldrb	w0, [x0]
  443db0:	cmp	w0, #0x2d
  443db4:	b.eq	443d70 <wcrtomb@plt+0x3f060>  // b.none
  443db8:	ldr	x0, [sp, #72]
  443dbc:	ldrb	w0, [x0]
  443dc0:	cmp	w0, #0x5f
  443dc4:	b.eq	443d70 <wcrtomb@plt+0x3f060>  // b.none
  443dc8:	ldr	x1, [sp, #72]
  443dcc:	ldr	x0, [sp, #104]
  443dd0:	sub	x0, x1, x0
  443dd4:	str	x0, [sp, #96]
  443dd8:	b	443de8 <wcrtomb@plt+0x3f0d8>
  443ddc:	ldr	x0, [sp, #72]
  443de0:	add	x0, x0, #0x1
  443de4:	str	x0, [sp, #72]
  443de8:	bl	4047f0 <__ctype_b_loc@plt>
  443dec:	ldr	x1, [x0]
  443df0:	ldr	x0, [sp, #72]
  443df4:	ldrb	w0, [x0]
  443df8:	and	x0, x0, #0xff
  443dfc:	lsl	x0, x0, #1
  443e00:	add	x0, x1, x0
  443e04:	ldrh	w0, [x0]
  443e08:	and	w0, w0, #0x2000
  443e0c:	cmp	w0, #0x0
  443e10:	b.ne	443ddc <wcrtomb@plt+0x3f0cc>  // b.any
  443e14:	ldr	x0, [sp, #72]
  443e18:	ldrb	w0, [x0]
  443e1c:	cmp	w0, #0x0
  443e20:	b.eq	443e34 <wcrtomb@plt+0x3f124>  // b.none
  443e24:	ldr	x0, [sp, #72]
  443e28:	ldrb	w0, [x0]
  443e2c:	cmp	w0, #0x2c
  443e30:	b.ne	443e40 <wcrtomb@plt+0x3f130>  // b.any
  443e34:	mov	w0, #0x1                   	// #1
  443e38:	str	w0, [sp, #84]
  443e3c:	b	443e98 <wcrtomb@plt+0x3f188>
  443e40:	ldr	x0, [sp, #72]
  443e44:	ldrb	w0, [x0]
  443e48:	cmp	w0, #0x3d
  443e4c:	b.ne	443e98 <wcrtomb@plt+0x3f188>  // b.any
  443e50:	ldr	x0, [sp, #72]
  443e54:	add	x0, x0, #0x1
  443e58:	str	x0, [sp, #72]
  443e5c:	b	443e6c <wcrtomb@plt+0x3f15c>
  443e60:	ldr	x0, [sp, #72]
  443e64:	add	x0, x0, #0x1
  443e68:	str	x0, [sp, #72]
  443e6c:	bl	4047f0 <__ctype_b_loc@plt>
  443e70:	ldr	x1, [x0]
  443e74:	ldr	x0, [sp, #72]
  443e78:	ldrb	w0, [x0]
  443e7c:	and	x0, x0, #0xff
  443e80:	lsl	x0, x0, #1
  443e84:	add	x0, x1, x0
  443e88:	ldrh	w0, [x0]
  443e8c:	and	w0, w0, #0x2000
  443e90:	cmp	w0, #0x0
  443e94:	b.ne	443e60 <wcrtomb@plt+0x3f150>  // b.any
  443e98:	ldr	w0, [sp, #84]
  443e9c:	cmp	w0, #0x0
  443ea0:	b.eq	443f08 <wcrtomb@plt+0x3f1f8>  // b.none
  443ea4:	ldr	x0, [sp, #104]
  443ea8:	ldrb	w0, [x0]
  443eac:	cmp	w0, #0x6e
  443eb0:	b.ne	443efc <wcrtomb@plt+0x3f1ec>  // b.any
  443eb4:	ldr	x0, [sp, #104]
  443eb8:	add	x0, x0, #0x1
  443ebc:	ldrb	w0, [x0]
  443ec0:	cmp	w0, #0x6f
  443ec4:	b.ne	443efc <wcrtomb@plt+0x3f1ec>  // b.any
  443ec8:	ldr	x0, [sp, #104]
  443ecc:	add	x0, x0, #0x2
  443ed0:	ldrb	w0, [x0]
  443ed4:	cmp	w0, #0x2d
  443ed8:	b.ne	443efc <wcrtomb@plt+0x3f1ec>  // b.any
  443edc:	str	wzr, [sp, #80]
  443ee0:	ldr	x0, [sp, #104]
  443ee4:	add	x0, x0, #0x3
  443ee8:	str	x0, [sp, #104]
  443eec:	ldr	x0, [sp, #96]
  443ef0:	sub	x0, x0, #0x3
  443ef4:	str	x0, [sp, #96]
  443ef8:	b	443fb8 <wcrtomb@plt+0x3f2a8>
  443efc:	mov	w0, #0x1                   	// #1
  443f00:	str	w0, [sp, #80]
  443f04:	b	443fb8 <wcrtomb@plt+0x3f2a8>
  443f08:	bl	4047f0 <__ctype_b_loc@plt>
  443f0c:	ldr	x1, [x0]
  443f10:	ldr	x0, [sp, #72]
  443f14:	ldrb	w0, [x0]
  443f18:	and	x0, x0, #0xff
  443f1c:	lsl	x0, x0, #1
  443f20:	add	x0, x1, x0
  443f24:	ldrh	w0, [x0]
  443f28:	and	w0, w0, #0x800
  443f2c:	cmp	w0, #0x0
  443f30:	b.eq	443fb8 <wcrtomb@plt+0x3f2a8>  // b.none
  443f34:	ldr	x0, [sp, #72]
  443f38:	bl	4043a0 <atoi@plt>
  443f3c:	str	w0, [sp, #80]
  443f40:	b	443f50 <wcrtomb@plt+0x3f240>
  443f44:	ldr	x0, [sp, #72]
  443f48:	add	x0, x0, #0x1
  443f4c:	str	x0, [sp, #72]
  443f50:	bl	4047f0 <__ctype_b_loc@plt>
  443f54:	ldr	x1, [x0]
  443f58:	ldr	x0, [sp, #72]
  443f5c:	ldrb	w0, [x0]
  443f60:	and	x0, x0, #0xff
  443f64:	lsl	x0, x0, #1
  443f68:	add	x0, x1, x0
  443f6c:	ldrh	w0, [x0]
  443f70:	and	w0, w0, #0x800
  443f74:	cmp	w0, #0x0
  443f78:	b.ne	443f44 <wcrtomb@plt+0x3f234>  // b.any
  443f7c:	b	443f8c <wcrtomb@plt+0x3f27c>
  443f80:	ldr	x0, [sp, #72]
  443f84:	add	x0, x0, #0x1
  443f88:	str	x0, [sp, #72]
  443f8c:	bl	4047f0 <__ctype_b_loc@plt>
  443f90:	ldr	x1, [x0]
  443f94:	ldr	x0, [sp, #72]
  443f98:	ldrb	w0, [x0]
  443f9c:	and	x0, x0, #0xff
  443fa0:	lsl	x0, x0, #1
  443fa4:	add	x0, x1, x0
  443fa8:	ldrh	w0, [x0]
  443fac:	and	w0, w0, #0x2000
  443fb0:	cmp	w0, #0x0
  443fb4:	b.ne	443f80 <wcrtomb@plt+0x3f270>  // b.any
  443fb8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  443fbc:	add	x0, x0, #0xcd0
  443fc0:	str	x0, [sp, #88]
  443fc4:	b	44409c <wcrtomb@plt+0x3f38c>
  443fc8:	ldr	x0, [sp, #88]
  443fcc:	bl	4040b0 <strlen@plt>
  443fd0:	mov	x1, x0
  443fd4:	ldr	x0, [sp, #96]
  443fd8:	cmp	x0, x1
  443fdc:	b.ne	444090 <wcrtomb@plt+0x3f380>  // b.any
  443fe0:	ldr	x0, [sp, #88]
  443fe4:	ldr	x2, [sp, #96]
  443fe8:	mov	x1, x0
  443fec:	ldr	x0, [sp, #104]
  443ff0:	bl	404480 <strncmp@plt>
  443ff4:	cmp	w0, #0x0
  443ff8:	b.ne	444090 <wcrtomb@plt+0x3f380>  // b.any
  443ffc:	ldr	w0, [sp, #84]
  444000:	cmp	w0, #0x0
  444004:	b.eq	444070 <wcrtomb@plt+0x3f360>  // b.none
  444008:	ldr	x0, [sp, #88]
  44400c:	ldrb	w0, [x0, #14]
  444010:	eor	w0, w0, #0x1
  444014:	and	w0, w0, #0xff
  444018:	cmp	w0, #0x0
  44401c:	b.eq	444070 <wcrtomb@plt+0x3f360>  // b.none
  444020:	ldr	x0, [sp, #24]
  444024:	cmp	x0, #0x0
  444028:	b.eq	44403c <wcrtomb@plt+0x3f32c>  // b.none
  44402c:	ldr	x0, [sp, #24]
  444030:	ldr	x0, [x0]
  444034:	ldr	x0, [x0, #48]
  444038:	b	444040 <wcrtomb@plt+0x3f330>
  44403c:	mov	x0, #0x0                   	// #0
  444040:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  444044:	add	x1, x1, #0xdb0
  444048:	bl	404870 <dgettext@plt>
  44404c:	ldr	x1, [sp, #96]
  444050:	ldr	x5, [sp, #104]
  444054:	mov	w4, w1
  444058:	mov	x3, x0
  44405c:	mov	w2, #0x0                   	// #0
  444060:	mov	w1, #0x0                   	// #0
  444064:	ldr	x0, [sp, #24]
  444068:	bl	4473e4 <argp_failure@@Base>
  44406c:	b	4440b0 <wcrtomb@plt+0x3f3a0>
  444070:	ldr	x0, [sp, #88]
  444074:	ldrb	w0, [x0, #15]
  444078:	and	x0, x0, #0xff
  44407c:	add	x1, sp, #0x20
  444080:	add	x0, x1, x0
  444084:	ldr	w1, [sp, #80]
  444088:	str	w1, [x0]
  44408c:	b	4440b0 <wcrtomb@plt+0x3f3a0>
  444090:	ldr	x0, [sp, #88]
  444094:	add	x0, x0, #0x10
  444098:	str	x0, [sp, #88]
  44409c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4440a0:	add	x0, x0, #0xd60
  4440a4:	ldr	x1, [sp, #88]
  4440a8:	cmp	x1, x0
  4440ac:	b.cc	443fc8 <wcrtomb@plt+0x3f2b8>  // b.lo, b.ul, b.last
  4440b0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4440b4:	add	x0, x0, #0xd60
  4440b8:	ldr	x1, [sp, #88]
  4440bc:	cmp	x1, x0
  4440c0:	b.ne	444110 <wcrtomb@plt+0x3f400>  // b.any
  4440c4:	ldr	x0, [sp, #24]
  4440c8:	cmp	x0, #0x0
  4440cc:	b.eq	4440e0 <wcrtomb@plt+0x3f3d0>  // b.none
  4440d0:	ldr	x0, [sp, #24]
  4440d4:	ldr	x0, [x0]
  4440d8:	ldr	x0, [x0, #48]
  4440dc:	b	4440e4 <wcrtomb@plt+0x3f3d4>
  4440e0:	mov	x0, #0x0                   	// #0
  4440e4:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4440e8:	add	x1, x1, #0xde0
  4440ec:	bl	404870 <dgettext@plt>
  4440f0:	ldr	x1, [sp, #96]
  4440f4:	ldr	x5, [sp, #104]
  4440f8:	mov	w4, w1
  4440fc:	mov	x3, x0
  444100:	mov	w2, #0x0                   	// #0
  444104:	mov	w1, #0x0                   	// #0
  444108:	ldr	x0, [sp, #24]
  44410c:	bl	4473e4 <argp_failure@@Base>
  444110:	ldr	x0, [sp, #72]
  444114:	str	x0, [sp, #104]
  444118:	ldr	x0, [sp, #104]
  44411c:	ldrb	w0, [x0]
  444120:	cmp	w0, #0x2c
  444124:	b.ne	444190 <wcrtomb@plt+0x3f480>  // b.any
  444128:	ldr	x0, [sp, #104]
  44412c:	add	x0, x0, #0x1
  444130:	str	x0, [sp, #104]
  444134:	b	444190 <wcrtomb@plt+0x3f480>
  444138:	ldr	x0, [sp, #104]
  44413c:	ldrb	w0, [x0]
  444140:	cmp	w0, #0x0
  444144:	b.eq	444190 <wcrtomb@plt+0x3f480>  // b.none
  444148:	ldr	x0, [sp, #24]
  44414c:	cmp	x0, #0x0
  444150:	b.eq	444164 <wcrtomb@plt+0x3f454>  // b.none
  444154:	ldr	x0, [sp, #24]
  444158:	ldr	x0, [x0]
  44415c:	ldr	x0, [x0, #48]
  444160:	b	444168 <wcrtomb@plt+0x3f458>
  444164:	mov	x0, #0x0                   	// #0
  444168:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  44416c:	add	x1, x1, #0xe08
  444170:	bl	404870 <dgettext@plt>
  444174:	ldr	x4, [sp, #104]
  444178:	mov	x3, x0
  44417c:	mov	w2, #0x0                   	// #0
  444180:	mov	w1, #0x0                   	// #0
  444184:	ldr	x0, [sp, #24]
  444188:	bl	4473e4 <argp_failure@@Base>
  44418c:	b	4441a0 <wcrtomb@plt+0x3f490>
  444190:	ldr	x0, [sp, #104]
  444194:	ldrb	w0, [x0]
  444198:	cmp	w0, #0x0
  44419c:	b.ne	443d04 <wcrtomb@plt+0x3eff4>  // b.any
  4441a0:	add	x0, sp, #0x20
  4441a4:	mov	x1, x0
  4441a8:	ldr	x0, [sp, #24]
  4441ac:	bl	443b98 <wcrtomb@plt+0x3ee88>
  4441b0:	nop
  4441b4:	ldp	x29, x30, [sp], #112
  4441b8:	ret
  4441bc:	sub	sp, sp, #0x20
  4441c0:	strb	w0, [sp, #31]
  4441c4:	str	x1, [sp, #16]
  4441c8:	str	x2, [sp, #8]
  4441cc:	b	4441f8 <wcrtomb@plt+0x3f4e8>
  4441d0:	ldr	x0, [sp, #16]
  4441d4:	ldrb	w0, [x0]
  4441d8:	ldrb	w1, [sp, #31]
  4441dc:	cmp	w1, w0
  4441e0:	b.ne	4441ec <wcrtomb@plt+0x3f4dc>  // b.any
  4441e4:	mov	w0, #0x1                   	// #1
  4441e8:	b	44420c <wcrtomb@plt+0x3f4fc>
  4441ec:	ldr	x0, [sp, #16]
  4441f0:	add	x0, x0, #0x1
  4441f4:	str	x0, [sp, #16]
  4441f8:	ldr	x1, [sp, #16]
  4441fc:	ldr	x0, [sp, #8]
  444200:	cmp	x1, x0
  444204:	b.cc	4441d0 <wcrtomb@plt+0x3f4c0>  // b.lo, b.ul, b.last
  444208:	mov	w0, #0x0                   	// #0
  44420c:	add	sp, sp, #0x20
  444210:	ret
  444214:	stp	x29, x30, [sp, #-80]!
  444218:	mov	x29, sp
  44421c:	str	x0, [sp, #24]
  444220:	str	x1, [sp, #16]
  444224:	ldr	x0, [sp, #24]
  444228:	ldr	x0, [x0]
  44422c:	str	x0, [sp, #40]
  444230:	str	wzr, [sp, #52]
  444234:	mov	x0, #0x20                  	// #32
  444238:	bl	4043f0 <malloc@plt>
  44423c:	str	x0, [sp, #32]
  444240:	ldr	x0, [sp, #32]
  444244:	cmp	x0, #0x0
  444248:	b.ne	44426c <wcrtomb@plt+0x3f55c>  // b.any
  44424c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  444250:	add	x3, x0, #0x38
  444254:	mov	w2, #0x1b9                 	// #441
  444258:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  44425c:	add	x1, x0, #0xe28
  444260:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  444264:	add	x0, x0, #0xe38
  444268:	bl	404bb0 <__assert_fail@plt>
  44426c:	ldr	x0, [sp, #32]
  444270:	str	wzr, [x0, #8]
  444274:	ldr	x0, [sp, #32]
  444278:	str	xzr, [x0, #24]
  44427c:	ldr	x0, [sp, #40]
  444280:	cmp	x0, #0x0
  444284:	b.eq	44452c <wcrtomb@plt+0x3f81c>  // b.none
  444288:	str	wzr, [sp, #48]
  44428c:	ldr	x0, [sp, #40]
  444290:	ldr	w0, [x0, #24]
  444294:	and	w0, w0, #0x4
  444298:	cmp	w0, #0x0
  44429c:	b.eq	4442c0 <wcrtomb@plt+0x3f5b0>  // b.none
  4442a0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4442a4:	add	x3, x0, #0x38
  4442a8:	mov	w2, #0x1c3                 	// #451
  4442ac:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4442b0:	add	x1, x0, #0xe28
  4442b4:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4442b8:	add	x0, x0, #0xe40
  4442bc:	bl	404bb0 <__assert_fail@plt>
  4442c0:	ldr	x0, [sp, #40]
  4442c4:	str	x0, [sp, #64]
  4442c8:	b	44431c <wcrtomb@plt+0x3f60c>
  4442cc:	ldr	x0, [sp, #64]
  4442d0:	ldr	w0, [x0, #24]
  4442d4:	and	w0, w0, #0x4
  4442d8:	cmp	w0, #0x0
  4442dc:	b.ne	4442f4 <wcrtomb@plt+0x3f5e4>  // b.any
  4442e0:	ldr	x0, [sp, #32]
  4442e4:	ldr	w0, [x0, #8]
  4442e8:	add	w1, w0, #0x1
  4442ec:	ldr	x0, [sp, #32]
  4442f0:	str	w1, [x0, #8]
  4442f4:	ldr	x0, [sp, #64]
  4442f8:	bl	449120 <argp_usage@@Base+0x34>
  4442fc:	cmp	w0, #0x0
  444300:	b.eq	444310 <wcrtomb@plt+0x3f600>  // b.none
  444304:	ldr	w0, [sp, #52]
  444308:	add	w0, w0, #0x1
  44430c:	str	w0, [sp, #52]
  444310:	ldr	x0, [sp, #64]
  444314:	add	x0, x0, #0x30
  444318:	str	x0, [sp, #64]
  44431c:	ldr	x0, [sp, #64]
  444320:	bl	4491a4 <argp_usage@@Base+0xb8>
  444324:	cmp	w0, #0x0
  444328:	b.eq	4442cc <wcrtomb@plt+0x3f5bc>  // b.none
  44432c:	ldr	x0, [sp, #32]
  444330:	ldr	w0, [x0, #8]
  444334:	mov	w1, w0
  444338:	mov	x0, x1
  44433c:	lsl	x0, x0, #3
  444340:	sub	x0, x0, x1
  444344:	lsl	x0, x0, #3
  444348:	bl	4043f0 <malloc@plt>
  44434c:	mov	x1, x0
  444350:	ldr	x0, [sp, #32]
  444354:	str	x1, [x0]
  444358:	ldr	w0, [sp, #52]
  44435c:	add	w0, w0, #0x1
  444360:	mov	w0, w0
  444364:	bl	4043f0 <malloc@plt>
  444368:	mov	x1, x0
  44436c:	ldr	x0, [sp, #32]
  444370:	str	x1, [x0, #16]
  444374:	ldr	x0, [sp, #32]
  444378:	ldr	x0, [x0]
  44437c:	cmp	x0, #0x0
  444380:	b.eq	444394 <wcrtomb@plt+0x3f684>  // b.none
  444384:	ldr	x0, [sp, #32]
  444388:	ldr	x0, [x0, #16]
  44438c:	cmp	x0, #0x0
  444390:	b.ne	4443b4 <wcrtomb@plt+0x3f6a4>  // b.any
  444394:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  444398:	add	x3, x0, #0x38
  44439c:	mov	w2, #0x1d1                 	// #465
  4443a0:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4443a4:	add	x1, x0, #0xe28
  4443a8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  4443ac:	add	x0, x0, #0xe50
  4443b0:	bl	404bb0 <__assert_fail@plt>
  4443b4:	ldr	x0, [sp, #32]
  4443b8:	ldr	x0, [x0, #16]
  4443bc:	str	x0, [sp, #72]
  4443c0:	ldr	x0, [sp, #40]
  4443c4:	str	x0, [sp, #64]
  4443c8:	ldr	x0, [sp, #32]
  4443cc:	ldr	x0, [x0]
  4443d0:	str	x0, [sp, #56]
  4443d4:	b	444514 <wcrtomb@plt+0x3f804>
  4443d8:	ldr	x0, [sp, #56]
  4443dc:	ldr	x1, [sp, #64]
  4443e0:	str	x1, [x0]
  4443e4:	ldr	x0, [sp, #56]
  4443e8:	str	wzr, [x0, #8]
  4443ec:	ldr	x0, [sp, #56]
  4443f0:	ldr	x1, [sp, #72]
  4443f4:	str	x1, [x0, #16]
  4443f8:	ldr	x0, [sp, #64]
  4443fc:	ldr	w0, [x0, #40]
  444400:	cmp	w0, #0x0
  444404:	b.eq	444414 <wcrtomb@plt+0x3f704>  // b.none
  444408:	ldr	x0, [sp, #64]
  44440c:	ldr	w0, [x0, #40]
  444410:	b	444444 <wcrtomb@plt+0x3f734>
  444414:	ldr	x0, [sp, #64]
  444418:	ldr	x0, [x0]
  44441c:	cmp	x0, #0x0
  444420:	b.ne	444440 <wcrtomb@plt+0x3f730>  // b.any
  444424:	ldr	x0, [sp, #64]
  444428:	ldr	w0, [x0, #8]
  44442c:	cmp	w0, #0x0
  444430:	b.ne	444440 <wcrtomb@plt+0x3f730>  // b.any
  444434:	ldr	w0, [sp, #48]
  444438:	add	w0, w0, #0x1
  44443c:	b	444444 <wcrtomb@plt+0x3f734>
  444440:	ldr	w0, [sp, #48]
  444444:	str	w0, [sp, #48]
  444448:	ldr	x0, [sp, #56]
  44444c:	ldr	w1, [sp, #48]
  444450:	str	w1, [x0, #24]
  444454:	ldr	x0, [sp, #56]
  444458:	ldr	x1, [sp, #16]
  44445c:	str	x1, [x0, #32]
  444460:	ldr	x0, [sp, #56]
  444464:	ldr	x1, [sp, #24]
  444468:	str	x1, [x0, #40]
  44446c:	ldr	x0, [sp, #56]
  444470:	ldr	w0, [x0, #8]
  444474:	add	w1, w0, #0x1
  444478:	ldr	x0, [sp, #56]
  44447c:	str	w1, [x0, #8]
  444480:	ldr	x0, [sp, #64]
  444484:	bl	449120 <argp_usage@@Base+0x34>
  444488:	cmp	w0, #0x0
  44448c:	b.eq	4444d8 <wcrtomb@plt+0x3f7c8>  // b.none
  444490:	ldr	x0, [sp, #64]
  444494:	ldr	w0, [x0, #8]
  444498:	and	w3, w0, #0xff
  44449c:	ldr	x0, [sp, #32]
  4444a0:	ldr	x0, [x0, #16]
  4444a4:	ldr	x2, [sp, #72]
  4444a8:	mov	x1, x0
  4444ac:	mov	w0, w3
  4444b0:	bl	4441bc <wcrtomb@plt+0x3f4ac>
  4444b4:	cmp	w0, #0x0
  4444b8:	b.ne	4444d8 <wcrtomb@plt+0x3f7c8>  // b.any
  4444bc:	ldr	x0, [sp, #64]
  4444c0:	ldr	w2, [x0, #8]
  4444c4:	ldr	x0, [sp, #72]
  4444c8:	add	x1, x0, #0x1
  4444cc:	str	x1, [sp, #72]
  4444d0:	and	w1, w2, #0xff
  4444d4:	strb	w1, [x0]
  4444d8:	ldr	x0, [sp, #64]
  4444dc:	add	x0, x0, #0x30
  4444e0:	str	x0, [sp, #64]
  4444e4:	ldr	x0, [sp, #64]
  4444e8:	bl	4491a4 <argp_usage@@Base+0xb8>
  4444ec:	cmp	w0, #0x0
  4444f0:	b.ne	444508 <wcrtomb@plt+0x3f7f8>  // b.any
  4444f4:	ldr	x0, [sp, #64]
  4444f8:	ldr	w0, [x0, #24]
  4444fc:	and	w0, w0, #0x4
  444500:	cmp	w0, #0x0
  444504:	b.ne	44446c <wcrtomb@plt+0x3f75c>  // b.any
  444508:	ldr	x0, [sp, #56]
  44450c:	add	x0, x0, #0x38
  444510:	str	x0, [sp, #56]
  444514:	ldr	x0, [sp, #64]
  444518:	bl	4491a4 <argp_usage@@Base+0xb8>
  44451c:	cmp	w0, #0x0
  444520:	b.eq	4443d8 <wcrtomb@plt+0x3f6c8>  // b.none
  444524:	ldr	x0, [sp, #72]
  444528:	strb	wzr, [x0]
  44452c:	ldr	x0, [sp, #32]
  444530:	ldp	x29, x30, [sp], #80
  444534:	ret
  444538:	stp	x29, x30, [sp, #-80]!
  44453c:	mov	x29, sp
  444540:	str	x0, [sp, #56]
  444544:	str	w1, [sp, #52]
  444548:	str	x2, [sp, #40]
  44454c:	str	w3, [sp, #48]
  444550:	str	x4, [sp, #32]
  444554:	str	x5, [sp, #24]
  444558:	mov	x0, #0x30                  	// #48
  44455c:	bl	4043f0 <malloc@plt>
  444560:	str	x0, [sp, #72]
  444564:	ldr	x0, [sp, #72]
  444568:	cmp	x0, #0x0
  44456c:	b.eq	4445f0 <wcrtomb@plt+0x3f8e0>  // b.none
  444570:	ldr	x0, [sp, #72]
  444574:	ldr	w1, [sp, #52]
  444578:	str	w1, [x0, #12]
  44457c:	ldr	x0, [sp, #72]
  444580:	ldr	x1, [sp, #40]
  444584:	str	x1, [x0]
  444588:	ldr	x0, [sp, #72]
  44458c:	ldr	w1, [sp, #48]
  444590:	str	w1, [x0, #8]
  444594:	ldr	x0, [sp, #72]
  444598:	ldr	x1, [sp, #32]
  44459c:	str	x1, [x0, #16]
  4445a0:	ldr	x0, [sp, #72]
  4445a4:	ldr	x1, [sp, #24]
  4445a8:	str	x1, [x0, #24]
  4445ac:	ldr	x0, [sp, #32]
  4445b0:	cmp	x0, #0x0
  4445b4:	b.eq	4445c8 <wcrtomb@plt+0x3f8b8>  // b.none
  4445b8:	ldr	x0, [sp, #32]
  4445bc:	ldr	w0, [x0, #32]
  4445c0:	add	w0, w0, #0x1
  4445c4:	b	4445cc <wcrtomb@plt+0x3f8bc>
  4445c8:	mov	w0, #0x0                   	// #0
  4445cc:	ldr	x1, [sp, #72]
  4445d0:	str	w0, [x1, #32]
  4445d4:	ldr	x0, [sp, #56]
  4445d8:	ldr	x1, [x0, #24]
  4445dc:	ldr	x0, [sp, #72]
  4445e0:	str	x1, [x0, #40]
  4445e4:	ldr	x0, [sp, #56]
  4445e8:	ldr	x1, [sp, #72]
  4445ec:	str	x1, [x0, #24]
  4445f0:	ldr	x0, [sp, #72]
  4445f4:	ldp	x29, x30, [sp], #80
  4445f8:	ret
  4445fc:	stp	x29, x30, [sp, #-48]!
  444600:	mov	x29, sp
  444604:	str	x0, [sp, #24]
  444608:	ldr	x0, [sp, #24]
  44460c:	ldr	x0, [x0, #24]
  444610:	str	x0, [sp, #40]
  444614:	b	444634 <wcrtomb@plt+0x3f924>
  444618:	ldr	x0, [sp, #40]
  44461c:	ldr	x0, [x0, #40]
  444620:	str	x0, [sp, #32]
  444624:	ldr	x0, [sp, #40]
  444628:	bl	404880 <free@plt>
  44462c:	ldr	x0, [sp, #32]
  444630:	str	x0, [sp, #40]
  444634:	ldr	x0, [sp, #40]
  444638:	cmp	x0, #0x0
  44463c:	b.ne	444618 <wcrtomb@plt+0x3f908>  // b.any
  444640:	ldr	x0, [sp, #24]
  444644:	ldr	w0, [x0, #8]
  444648:	cmp	w0, #0x0
  44464c:	b.eq	444668 <wcrtomb@plt+0x3f958>  // b.none
  444650:	ldr	x0, [sp, #24]
  444654:	ldr	x0, [x0]
  444658:	bl	404880 <free@plt>
  44465c:	ldr	x0, [sp, #24]
  444660:	ldr	x0, [x0, #16]
  444664:	bl	404880 <free@plt>
  444668:	ldr	x0, [sp, #24]
  44466c:	bl	404880 <free@plt>
  444670:	nop
  444674:	ldp	x29, x30, [sp], #48
  444678:	ret
  44467c:	stp	x29, x30, [sp, #-80]!
  444680:	mov	x29, sp
  444684:	str	x0, [sp, #40]
  444688:	str	x1, [sp, #32]
  44468c:	str	x2, [sp, #24]
  444690:	str	x3, [sp, #16]
  444694:	str	wzr, [sp, #72]
  444698:	ldr	x0, [sp, #40]
  44469c:	ldr	x0, [x0]
  4446a0:	str	x0, [sp, #56]
  4446a4:	ldr	x0, [sp, #40]
  4446a8:	ldr	x0, [x0, #16]
  4446ac:	str	x0, [sp, #48]
  4446b0:	ldr	x0, [sp, #56]
  4446b4:	str	x0, [sp, #64]
  4446b8:	ldr	x0, [sp, #40]
  4446bc:	ldr	w0, [x0, #8]
  4446c0:	str	w0, [sp, #76]
  4446c4:	b	444764 <wcrtomb@plt+0x3fa54>
  4446c8:	ldr	x0, [sp, #64]
  4446cc:	bl	449120 <argp_usage@@Base+0x34>
  4446d0:	cmp	w0, #0x0
  4446d4:	b.eq	44474c <wcrtomb@plt+0x3fa3c>  // b.none
  4446d8:	ldr	x0, [sp, #48]
  4446dc:	ldrb	w0, [x0]
  4446e0:	mov	w1, w0
  4446e4:	ldr	x0, [sp, #64]
  4446e8:	ldr	w0, [x0, #8]
  4446ec:	cmp	w1, w0
  4446f0:	b.ne	44474c <wcrtomb@plt+0x3fa3c>  // b.any
  4446f4:	ldr	x0, [sp, #64]
  4446f8:	ldr	w0, [x0, #24]
  4446fc:	and	w0, w0, #0x4
  444700:	cmp	w0, #0x0
  444704:	b.ne	444710 <wcrtomb@plt+0x3fa00>  // b.any
  444708:	ldr	x0, [sp, #64]
  44470c:	str	x0, [sp, #56]
  444710:	ldr	x0, [sp, #64]
  444714:	ldr	w0, [x0, #24]
  444718:	and	w0, w0, #0x2
  44471c:	cmp	w0, #0x0
  444720:	b.ne	444740 <wcrtomb@plt+0x3fa30>  // b.any
  444724:	ldr	x4, [sp, #32]
  444728:	ldr	x3, [sp, #16]
  44472c:	ldr	x2, [sp, #24]
  444730:	ldr	x1, [sp, #56]
  444734:	ldr	x0, [sp, #64]
  444738:	blr	x4
  44473c:	str	w0, [sp, #72]
  444740:	ldr	x0, [sp, #48]
  444744:	add	x0, x0, #0x1
  444748:	str	x0, [sp, #48]
  44474c:	ldr	x0, [sp, #64]
  444750:	add	x0, x0, #0x30
  444754:	str	x0, [sp, #64]
  444758:	ldr	w0, [sp, #76]
  44475c:	sub	w0, w0, #0x1
  444760:	str	w0, [sp, #76]
  444764:	ldr	w0, [sp, #76]
  444768:	cmp	w0, #0x0
  44476c:	b.eq	44477c <wcrtomb@plt+0x3fa6c>  // b.none
  444770:	ldr	w0, [sp, #72]
  444774:	cmp	w0, #0x0
  444778:	b.eq	4446c8 <wcrtomb@plt+0x3f9b8>  // b.none
  44477c:	ldr	w0, [sp, #72]
  444780:	ldp	x29, x30, [sp], #80
  444784:	ret
  444788:	stp	x29, x30, [sp, #-48]!
  44478c:	mov	x29, sp
  444790:	str	x0, [sp, #40]
  444794:	str	x1, [sp, #32]
  444798:	str	x2, [sp, #24]
  44479c:	str	x3, [sp, #16]
  4447a0:	ldr	x0, [sp, #40]
  4447a4:	bl	449120 <argp_usage@@Base+0x34>
  4447a8:	cmp	w0, #0x0
  4447ac:	b.eq	4447bc <wcrtomb@plt+0x3faac>  // b.none
  4447b0:	ldr	x0, [sp, #40]
  4447b4:	ldr	w0, [x0, #8]
  4447b8:	b	4447c0 <wcrtomb@plt+0x3fab0>
  4447bc:	mov	w0, #0x0                   	// #0
  4447c0:	ldp	x29, x30, [sp], #48
  4447c4:	ret
  4447c8:	stp	x29, x30, [sp, #-32]!
  4447cc:	mov	x29, sp
  4447d0:	str	x0, [sp, #24]
  4447d4:	ldr	x0, [sp, #24]
  4447d8:	ldr	x0, [x0, #40]
  4447dc:	ldr	x0, [x0, #48]
  4447e0:	mov	x3, #0x0                   	// #0
  4447e4:	mov	x2, x0
  4447e8:	adrp	x0, 444000 <wcrtomb@plt+0x3f2f0>
  4447ec:	add	x1, x0, #0x788
  4447f0:	ldr	x0, [sp, #24]
  4447f4:	bl	44467c <wcrtomb@plt+0x3f96c>
  4447f8:	and	w0, w0, #0xff
  4447fc:	ldp	x29, x30, [sp], #32
  444800:	ret
  444804:	sub	sp, sp, #0x20
  444808:	str	x0, [sp, #8]
  44480c:	ldr	x0, [sp, #8]
  444810:	ldr	x0, [x0]
  444814:	str	x0, [sp, #24]
  444818:	ldr	x0, [sp, #8]
  44481c:	ldr	w0, [x0, #8]
  444820:	str	w0, [sp, #20]
  444824:	b	444870 <wcrtomb@plt+0x3fb60>
  444828:	ldr	x0, [sp, #24]
  44482c:	ldr	x0, [x0]
  444830:	cmp	x0, #0x0
  444834:	b.eq	444858 <wcrtomb@plt+0x3fb48>  // b.none
  444838:	ldr	x0, [sp, #24]
  44483c:	ldr	w0, [x0, #24]
  444840:	and	w0, w0, #0x2
  444844:	cmp	w0, #0x0
  444848:	b.ne	444858 <wcrtomb@plt+0x3fb48>  // b.any
  44484c:	ldr	x0, [sp, #24]
  444850:	ldr	x0, [x0]
  444854:	b	444880 <wcrtomb@plt+0x3fb70>
  444858:	ldr	x0, [sp, #24]
  44485c:	add	x0, x0, #0x30
  444860:	str	x0, [sp, #24]
  444864:	ldr	w0, [sp, #20]
  444868:	sub	w0, w0, #0x1
  44486c:	str	w0, [sp, #20]
  444870:	ldr	w0, [sp, #20]
  444874:	cmp	w0, #0x0
  444878:	b.ne	444828 <wcrtomb@plt+0x3fb18>  // b.any
  44487c:	mov	x0, #0x0                   	// #0
  444880:	add	sp, sp, #0x20
  444884:	ret
  444888:	stp	x29, x30, [sp, #-64]!
  44488c:	mov	x29, sp
  444890:	str	x0, [sp, #24]
  444894:	str	x1, [sp, #16]
  444898:	ldr	x0, [sp, #24]
  44489c:	ldr	x0, [x0]
  4448a0:	str	x0, [sp, #56]
  4448a4:	ldr	x0, [sp, #24]
  4448a8:	ldr	w0, [x0, #8]
  4448ac:	str	w0, [sp, #52]
  4448b0:	b	444940 <wcrtomb@plt+0x3fc30>
  4448b4:	ldr	x0, [sp, #56]
  4448b8:	ldr	x0, [x0]
  4448bc:	str	x0, [sp, #40]
  4448c0:	ldr	x0, [sp, #56]
  4448c4:	ldr	w0, [x0, #8]
  4448c8:	str	w0, [sp, #36]
  4448cc:	b	444920 <wcrtomb@plt+0x3fc10>
  4448d0:	ldr	x0, [sp, #40]
  4448d4:	ldr	x0, [x0]
  4448d8:	cmp	x0, #0x0
  4448dc:	b.eq	444914 <wcrtomb@plt+0x3fc04>  // b.none
  4448e0:	ldr	x0, [sp, #40]
  4448e4:	ldr	w0, [x0, #24]
  4448e8:	and	w0, w0, #0x2
  4448ec:	cmp	w0, #0x0
  4448f0:	b.ne	444914 <wcrtomb@plt+0x3fc04>  // b.any
  4448f4:	ldr	x0, [sp, #40]
  4448f8:	ldr	x0, [x0]
  4448fc:	ldr	x1, [sp, #16]
  444900:	bl	4047c0 <strcmp@plt>
  444904:	cmp	w0, #0x0
  444908:	b.ne	444914 <wcrtomb@plt+0x3fc04>  // b.any
  44490c:	ldr	x0, [sp, #56]
  444910:	b	444958 <wcrtomb@plt+0x3fc48>
  444914:	ldr	x0, [sp, #40]
  444918:	add	x0, x0, #0x30
  44491c:	str	x0, [sp, #40]
  444920:	ldr	w0, [sp, #36]
  444924:	sub	w1, w0, #0x1
  444928:	str	w1, [sp, #36]
  44492c:	cmp	w0, #0x0
  444930:	b.ne	4448d0 <wcrtomb@plt+0x3fbc0>  // b.any
  444934:	ldr	x0, [sp, #56]
  444938:	add	x0, x0, #0x38
  44493c:	str	x0, [sp, #56]
  444940:	ldr	w0, [sp, #52]
  444944:	sub	w1, w0, #0x1
  444948:	str	w1, [sp, #52]
  44494c:	cmp	w0, #0x0
  444950:	b.ne	4448b4 <wcrtomb@plt+0x3fba4>  // b.any
  444954:	mov	x0, #0x0                   	// #0
  444958:	ldp	x29, x30, [sp], #64
  44495c:	ret
  444960:	stp	x29, x30, [sp, #-64]!
  444964:	mov	x29, sp
  444968:	str	x0, [sp, #40]
  44496c:	str	x1, [sp, #32]
  444970:	str	w2, [sp, #28]
  444974:	ldr	x1, [sp, #32]
  444978:	ldr	x0, [sp, #40]
  44497c:	bl	444888 <wcrtomb@plt+0x3fb78>
  444980:	str	x0, [sp, #56]
  444984:	ldr	x0, [sp, #56]
  444988:	cmp	x0, #0x0
  44498c:	b.eq	44499c <wcrtomb@plt+0x3fc8c>  // b.none
  444990:	ldr	x0, [sp, #56]
  444994:	ldr	w1, [sp, #28]
  444998:	str	w1, [x0, #24]
  44499c:	nop
  4449a0:	ldp	x29, x30, [sp], #64
  4449a4:	ret
  4449a8:	sub	sp, sp, #0x10
  4449ac:	str	w0, [sp, #12]
  4449b0:	str	w1, [sp, #8]
  4449b4:	str	w2, [sp, #4]
  4449b8:	ldr	w1, [sp, #12]
  4449bc:	ldr	w0, [sp, #8]
  4449c0:	cmp	w1, w0
  4449c4:	b.ne	4449d0 <wcrtomb@plt+0x3fcc0>  // b.any
  4449c8:	ldr	w0, [sp, #4]
  4449cc:	b	444a1c <wcrtomb@plt+0x3fd0c>
  4449d0:	ldr	w0, [sp, #12]
  4449d4:	cmp	w0, #0x0
  4449d8:	b.ge	4449e8 <wcrtomb@plt+0x3fcd8>  // b.tcont
  4449dc:	ldr	w0, [sp, #8]
  4449e0:	cmp	w0, #0x0
  4449e4:	b.lt	444a00 <wcrtomb@plt+0x3fcf0>  // b.tstop
  4449e8:	ldr	w0, [sp, #12]
  4449ec:	cmp	w0, #0x0
  4449f0:	b.lt	444a10 <wcrtomb@plt+0x3fd00>  // b.tstop
  4449f4:	ldr	w0, [sp, #8]
  4449f8:	cmp	w0, #0x0
  4449fc:	b.lt	444a10 <wcrtomb@plt+0x3fd00>  // b.tstop
  444a00:	ldr	w1, [sp, #12]
  444a04:	ldr	w0, [sp, #8]
  444a08:	sub	w0, w1, w0
  444a0c:	b	444a1c <wcrtomb@plt+0x3fd0c>
  444a10:	ldr	w1, [sp, #8]
  444a14:	ldr	w0, [sp, #12]
  444a18:	sub	w0, w1, w0
  444a1c:	add	sp, sp, #0x10
  444a20:	ret
  444a24:	stp	x29, x30, [sp, #-32]!
  444a28:	mov	x29, sp
  444a2c:	str	x0, [sp, #24]
  444a30:	str	x1, [sp, #16]
  444a34:	b	444a44 <wcrtomb@plt+0x3fd34>
  444a38:	ldr	x0, [sp, #24]
  444a3c:	ldr	x0, [x0, #16]
  444a40:	str	x0, [sp, #24]
  444a44:	ldr	x0, [sp, #24]
  444a48:	ldr	w1, [x0, #32]
  444a4c:	ldr	x0, [sp, #16]
  444a50:	ldr	w0, [x0, #32]
  444a54:	cmp	w1, w0
  444a58:	b.gt	444a38 <wcrtomb@plt+0x3fd28>
  444a5c:	b	444a6c <wcrtomb@plt+0x3fd5c>
  444a60:	ldr	x0, [sp, #16]
  444a64:	ldr	x0, [x0, #16]
  444a68:	str	x0, [sp, #16]
  444a6c:	ldr	x0, [sp, #16]
  444a70:	ldr	w1, [x0, #32]
  444a74:	ldr	x0, [sp, #24]
  444a78:	ldr	w0, [x0, #32]
  444a7c:	cmp	w1, w0
  444a80:	b.gt	444a60 <wcrtomb@plt+0x3fd50>
  444a84:	b	444aa0 <wcrtomb@plt+0x3fd90>
  444a88:	ldr	x0, [sp, #24]
  444a8c:	ldr	x0, [x0, #16]
  444a90:	str	x0, [sp, #24]
  444a94:	ldr	x0, [sp, #16]
  444a98:	ldr	x0, [x0, #16]
  444a9c:	str	x0, [sp, #16]
  444aa0:	ldr	x0, [sp, #24]
  444aa4:	ldr	x1, [x0, #16]
  444aa8:	ldr	x0, [sp, #16]
  444aac:	ldr	x0, [x0, #16]
  444ab0:	cmp	x1, x0
  444ab4:	b.ne	444a88 <wcrtomb@plt+0x3fd78>  // b.any
  444ab8:	ldr	x0, [sp, #24]
  444abc:	ldr	w3, [x0, #12]
  444ac0:	ldr	x0, [sp, #16]
  444ac4:	ldr	w4, [x0, #12]
  444ac8:	ldr	x0, [sp, #16]
  444acc:	ldr	w1, [x0, #8]
  444ad0:	ldr	x0, [sp, #24]
  444ad4:	ldr	w0, [x0, #8]
  444ad8:	sub	w0, w1, w0
  444adc:	mov	w2, w0
  444ae0:	mov	w1, w4
  444ae4:	mov	w0, w3
  444ae8:	bl	4449a8 <wcrtomb@plt+0x3fc98>
  444aec:	ldp	x29, x30, [sp], #32
  444af0:	ret
  444af4:	sub	sp, sp, #0x10
  444af8:	str	x0, [sp, #8]
  444afc:	b	444b0c <wcrtomb@plt+0x3fdfc>
  444b00:	ldr	x0, [sp, #8]
  444b04:	ldr	x0, [x0, #16]
  444b08:	str	x0, [sp, #8]
  444b0c:	ldr	x0, [sp, #8]
  444b10:	ldr	x0, [x0, #16]
  444b14:	cmp	x0, #0x0
  444b18:	b.ne	444b00 <wcrtomb@plt+0x3fdf0>  // b.any
  444b1c:	ldr	x0, [sp, #8]
  444b20:	add	sp, sp, #0x10
  444b24:	ret
  444b28:	sub	sp, sp, #0x10
  444b2c:	str	x0, [sp, #8]
  444b30:	str	x1, [sp]
  444b34:	b	444b44 <wcrtomb@plt+0x3fe34>
  444b38:	ldr	x0, [sp, #8]
  444b3c:	ldr	x0, [x0, #16]
  444b40:	str	x0, [sp, #8]
  444b44:	ldr	x0, [sp, #8]
  444b48:	cmp	x0, #0x0
  444b4c:	b.eq	444b60 <wcrtomb@plt+0x3fe50>  // b.none
  444b50:	ldr	x1, [sp, #8]
  444b54:	ldr	x0, [sp]
  444b58:	cmp	x1, x0
  444b5c:	b.ne	444b38 <wcrtomb@plt+0x3fe28>  // b.any
  444b60:	ldr	x1, [sp, #8]
  444b64:	ldr	x0, [sp]
  444b68:	cmp	x1, x0
  444b6c:	cset	w0, eq  // eq = none
  444b70:	and	w0, w0, #0xff
  444b74:	add	sp, sp, #0x10
  444b78:	ret
  444b7c:	stp	x29, x30, [sp, #-48]!
  444b80:	mov	x29, sp
  444b84:	str	x0, [sp, #24]
  444b88:	b	444ba0 <wcrtomb@plt+0x3fe90>
  444b8c:	ldr	x0, [sp, #24]
  444b90:	ldr	x0, [x0]
  444b94:	add	x1, x0, #0x1
  444b98:	ldr	x0, [sp, #24]
  444b9c:	str	x1, [x0]
  444ba0:	bl	4047f0 <__ctype_b_loc@plt>
  444ba4:	ldr	x1, [x0]
  444ba8:	ldr	x0, [sp, #24]
  444bac:	ldr	x0, [x0]
  444bb0:	ldrb	w0, [x0]
  444bb4:	and	x0, x0, #0xff
  444bb8:	lsl	x0, x0, #1
  444bbc:	add	x0, x1, x0
  444bc0:	ldrh	w0, [x0]
  444bc4:	and	w0, w0, #0x2000
  444bc8:	cmp	w0, #0x0
  444bcc:	b.ne	444b8c <wcrtomb@plt+0x3fe7c>  // b.any
  444bd0:	ldr	x0, [sp, #24]
  444bd4:	ldr	x0, [x0]
  444bd8:	ldrb	w0, [x0]
  444bdc:	cmp	w0, #0x2d
  444be0:	cset	w0, ne  // ne = any
  444be4:	and	w0, w0, #0xff
  444be8:	str	w0, [sp, #44]
  444bec:	b	444c04 <wcrtomb@plt+0x3fef4>
  444bf0:	ldr	x0, [sp, #24]
  444bf4:	ldr	x0, [x0]
  444bf8:	add	x1, x0, #0x1
  444bfc:	ldr	x0, [sp, #24]
  444c00:	str	x1, [x0]
  444c04:	ldr	x0, [sp, #24]
  444c08:	ldr	x0, [x0]
  444c0c:	ldrb	w0, [x0]
  444c10:	cmp	w0, #0x0
  444c14:	b.eq	444c48 <wcrtomb@plt+0x3ff38>  // b.none
  444c18:	bl	4047f0 <__ctype_b_loc@plt>
  444c1c:	ldr	x1, [x0]
  444c20:	ldr	x0, [sp, #24]
  444c24:	ldr	x0, [x0]
  444c28:	ldrb	w0, [x0]
  444c2c:	and	x0, x0, #0xff
  444c30:	lsl	x0, x0, #1
  444c34:	add	x0, x1, x0
  444c38:	ldrh	w0, [x0]
  444c3c:	and	w0, w0, #0x8
  444c40:	cmp	w0, #0x0
  444c44:	b.eq	444bf0 <wcrtomb@plt+0x3fee0>  // b.none
  444c48:	ldr	w0, [sp, #44]
  444c4c:	ldp	x29, x30, [sp], #48
  444c50:	ret
  444c54:	stp	x29, x30, [sp, #-96]!
  444c58:	mov	x29, sp
  444c5c:	str	x19, [sp, #16]
  444c60:	str	x0, [sp, #40]
  444c64:	str	x1, [sp, #32]
  444c68:	ldr	x0, [sp, #40]
  444c6c:	ldr	w0, [x0, #24]
  444c70:	str	w0, [sp, #84]
  444c74:	ldr	x0, [sp, #32]
  444c78:	ldr	w0, [x0, #24]
  444c7c:	str	w0, [sp, #80]
  444c80:	ldr	x0, [sp, #40]
  444c84:	ldr	x1, [x0, #32]
  444c88:	ldr	x0, [sp, #32]
  444c8c:	ldr	x0, [x0, #32]
  444c90:	cmp	x1, x0
  444c94:	b.eq	444d1c <wcrtomb@plt+0x4000c>  // b.none
  444c98:	ldr	x0, [sp, #40]
  444c9c:	ldr	x0, [x0, #32]
  444ca0:	cmp	x0, #0x0
  444ca4:	b.ne	444ccc <wcrtomb@plt+0x3ffbc>  // b.any
  444ca8:	ldr	x0, [sp, #32]
  444cac:	ldr	x0, [x0, #32]
  444cb0:	bl	444af4 <wcrtomb@plt+0x3fde4>
  444cb4:	ldr	w0, [x0, #12]
  444cb8:	mov	w2, #0xffffffff            	// #-1
  444cbc:	mov	w1, w0
  444cc0:	ldr	w0, [sp, #84]
  444cc4:	bl	4449a8 <wcrtomb@plt+0x3fc98>
  444cc8:	b	444f38 <wcrtomb@plt+0x40228>
  444ccc:	ldr	x0, [sp, #32]
  444cd0:	ldr	x0, [x0, #32]
  444cd4:	cmp	x0, #0x0
  444cd8:	b.ne	444cfc <wcrtomb@plt+0x3ffec>  // b.any
  444cdc:	ldr	x0, [sp, #40]
  444ce0:	ldr	x0, [x0, #32]
  444ce4:	bl	444af4 <wcrtomb@plt+0x3fde4>
  444ce8:	ldr	w0, [x0, #12]
  444cec:	mov	w2, #0x1                   	// #1
  444cf0:	ldr	w1, [sp, #80]
  444cf4:	bl	4449a8 <wcrtomb@plt+0x3fc98>
  444cf8:	b	444f38 <wcrtomb@plt+0x40228>
  444cfc:	ldr	x0, [sp, #40]
  444d00:	ldr	x2, [x0, #32]
  444d04:	ldr	x0, [sp, #32]
  444d08:	ldr	x0, [x0, #32]
  444d0c:	mov	x1, x0
  444d10:	mov	x0, x2
  444d14:	bl	444a24 <wcrtomb@plt+0x3fd14>
  444d18:	b	444f38 <wcrtomb@plt+0x40228>
  444d1c:	ldr	w1, [sp, #84]
  444d20:	ldr	w0, [sp, #80]
  444d24:	cmp	w1, w0
  444d28:	b.ne	444f28 <wcrtomb@plt+0x40218>  // b.any
  444d2c:	ldr	x0, [sp, #40]
  444d30:	bl	4447c8 <wcrtomb@plt+0x3fab8>
  444d34:	and	w0, w0, #0xff
  444d38:	str	w0, [sp, #76]
  444d3c:	ldr	x0, [sp, #32]
  444d40:	bl	4447c8 <wcrtomb@plt+0x3fab8>
  444d44:	and	w0, w0, #0xff
  444d48:	str	w0, [sp, #72]
  444d4c:	ldr	x0, [sp, #40]
  444d50:	ldr	x0, [x0]
  444d54:	ldr	w0, [x0, #24]
  444d58:	and	w0, w0, #0x8
  444d5c:	str	w0, [sp, #92]
  444d60:	ldr	x0, [sp, #32]
  444d64:	ldr	x0, [x0]
  444d68:	ldr	w0, [x0, #24]
  444d6c:	and	w0, w0, #0x8
  444d70:	str	w0, [sp, #88]
  444d74:	ldr	x0, [sp, #40]
  444d78:	bl	444804 <wcrtomb@plt+0x3faf4>
  444d7c:	str	x0, [sp, #56]
  444d80:	ldr	x0, [sp, #32]
  444d84:	bl	444804 <wcrtomb@plt+0x3faf4>
  444d88:	str	x0, [sp, #48]
  444d8c:	ldr	w0, [sp, #92]
  444d90:	cmp	w0, #0x0
  444d94:	b.eq	444dc4 <wcrtomb@plt+0x400b4>  // b.none
  444d98:	ldr	x0, [sp, #56]
  444d9c:	cmp	x0, #0x0
  444da0:	b.eq	444dbc <wcrtomb@plt+0x400ac>  // b.none
  444da4:	add	x0, sp, #0x38
  444da8:	bl	444b7c <wcrtomb@plt+0x3fe6c>
  444dac:	cmp	w0, #0x0
  444db0:	b.eq	444dbc <wcrtomb@plt+0x400ac>  // b.none
  444db4:	mov	w0, #0x1                   	// #1
  444db8:	b	444dc0 <wcrtomb@plt+0x400b0>
  444dbc:	mov	w0, #0x0                   	// #0
  444dc0:	str	w0, [sp, #92]
  444dc4:	ldr	w0, [sp, #88]
  444dc8:	cmp	w0, #0x0
  444dcc:	b.eq	444dfc <wcrtomb@plt+0x400ec>  // b.none
  444dd0:	ldr	x0, [sp, #48]
  444dd4:	cmp	x0, #0x0
  444dd8:	b.eq	444df4 <wcrtomb@plt+0x400e4>  // b.none
  444ddc:	add	x0, sp, #0x30
  444de0:	bl	444b7c <wcrtomb@plt+0x3fe6c>
  444de4:	cmp	w0, #0x0
  444de8:	b.eq	444df4 <wcrtomb@plt+0x400e4>  // b.none
  444dec:	mov	w0, #0x1                   	// #1
  444df0:	b	444df8 <wcrtomb@plt+0x400e8>
  444df4:	mov	w0, #0x0                   	// #0
  444df8:	str	w0, [sp, #88]
  444dfc:	ldr	w1, [sp, #92]
  444e00:	ldr	w0, [sp, #88]
  444e04:	cmp	w1, w0
  444e08:	b.eq	444e1c <wcrtomb@plt+0x4010c>  // b.none
  444e0c:	ldr	w1, [sp, #92]
  444e10:	ldr	w0, [sp, #88]
  444e14:	sub	w0, w1, w0
  444e18:	b	444f38 <wcrtomb@plt+0x40228>
  444e1c:	ldr	w0, [sp, #76]
  444e20:	cmp	w0, #0x0
  444e24:	b.ne	444e5c <wcrtomb@plt+0x4014c>  // b.any
  444e28:	ldr	w0, [sp, #72]
  444e2c:	cmp	w0, #0x0
  444e30:	b.ne	444e5c <wcrtomb@plt+0x4014c>  // b.any
  444e34:	ldr	x0, [sp, #56]
  444e38:	cmp	x0, #0x0
  444e3c:	b.eq	444e5c <wcrtomb@plt+0x4014c>  // b.none
  444e40:	ldr	x0, [sp, #48]
  444e44:	cmp	x0, #0x0
  444e48:	b.eq	444e5c <wcrtomb@plt+0x4014c>  // b.none
  444e4c:	ldr	x0, [sp, #56]
  444e50:	ldr	x1, [sp, #48]
  444e54:	bl	4045b0 <strcasecmp@plt>
  444e58:	b	444f38 <wcrtomb@plt+0x40228>
  444e5c:	ldr	w0, [sp, #76]
  444e60:	cmp	w0, #0x0
  444e64:	b.ne	444e88 <wcrtomb@plt+0x40178>  // b.any
  444e68:	ldr	x0, [sp, #56]
  444e6c:	cmp	x0, #0x0
  444e70:	b.eq	444e80 <wcrtomb@plt+0x40170>  // b.none
  444e74:	ldr	x0, [sp, #56]
  444e78:	ldrb	w0, [x0]
  444e7c:	b	444e90 <wcrtomb@plt+0x40180>
  444e80:	mov	w0, #0x0                   	// #0
  444e84:	b	444e90 <wcrtomb@plt+0x40180>
  444e88:	ldr	w0, [sp, #76]
  444e8c:	and	w0, w0, #0xff
  444e90:	strb	w0, [sp, #71]
  444e94:	ldr	w0, [sp, #72]
  444e98:	cmp	w0, #0x0
  444e9c:	b.ne	444ec0 <wcrtomb@plt+0x401b0>  // b.any
  444ea0:	ldr	x0, [sp, #48]
  444ea4:	cmp	x0, #0x0
  444ea8:	b.eq	444eb8 <wcrtomb@plt+0x401a8>  // b.none
  444eac:	ldr	x0, [sp, #48]
  444eb0:	ldrb	w0, [x0]
  444eb4:	b	444ec8 <wcrtomb@plt+0x401b8>
  444eb8:	mov	w0, #0x0                   	// #0
  444ebc:	b	444ec8 <wcrtomb@plt+0x401b8>
  444ec0:	ldr	w0, [sp, #72]
  444ec4:	and	w0, w0, #0xff
  444ec8:	strb	w0, [sp, #70]
  444ecc:	bl	4042d0 <__ctype_tolower_loc@plt>
  444ed0:	ldr	x1, [x0]
  444ed4:	ldrb	w0, [sp, #71]
  444ed8:	lsl	x0, x0, #2
  444edc:	add	x0, x1, x0
  444ee0:	ldr	w19, [x0]
  444ee4:	bl	4042d0 <__ctype_tolower_loc@plt>
  444ee8:	ldr	x1, [x0]
  444eec:	ldrb	w0, [sp, #70]
  444ef0:	lsl	x0, x0, #2
  444ef4:	add	x0, x1, x0
  444ef8:	ldr	w0, [x0]
  444efc:	sub	w0, w19, w0
  444f00:	str	w0, [sp, #64]
  444f04:	ldr	w0, [sp, #64]
  444f08:	cmp	w0, #0x0
  444f0c:	b.ne	444f20 <wcrtomb@plt+0x40210>  // b.any
  444f10:	ldrb	w1, [sp, #70]
  444f14:	ldrb	w0, [sp, #71]
  444f18:	sub	w0, w1, w0
  444f1c:	b	444f38 <wcrtomb@plt+0x40228>
  444f20:	ldr	w0, [sp, #64]
  444f24:	b	444f38 <wcrtomb@plt+0x40228>
  444f28:	mov	w2, #0x0                   	// #0
  444f2c:	ldr	w1, [sp, #80]
  444f30:	ldr	w0, [sp, #84]
  444f34:	bl	4449a8 <wcrtomb@plt+0x3fc98>
  444f38:	ldr	x19, [sp, #16]
  444f3c:	ldp	x29, x30, [sp], #96
  444f40:	ret
  444f44:	stp	x29, x30, [sp, #-32]!
  444f48:	mov	x29, sp
  444f4c:	str	x0, [sp, #24]
  444f50:	str	x1, [sp, #16]
  444f54:	ldr	x1, [sp, #16]
  444f58:	ldr	x0, [sp, #24]
  444f5c:	bl	444c54 <wcrtomb@plt+0x3ff44>
  444f60:	ldp	x29, x30, [sp], #32
  444f64:	ret
  444f68:	stp	x29, x30, [sp, #-48]!
  444f6c:	mov	x29, sp
  444f70:	str	x0, [sp, #24]
  444f74:	ldr	x0, [sp, #24]
  444f78:	ldr	w0, [x0, #8]
  444f7c:	cmp	w0, #0x0
  444f80:	b.eq	444ff8 <wcrtomb@plt+0x402e8>  // b.none
  444f84:	str	wzr, [sp, #44]
  444f88:	ldr	x0, [sp, #24]
  444f8c:	ldr	x0, [x0]
  444f90:	str	x0, [sp, #32]
  444f94:	b	444fbc <wcrtomb@plt+0x402ac>
  444f98:	ldr	x0, [sp, #32]
  444f9c:	ldr	w1, [sp, #44]
  444fa0:	str	w1, [x0, #48]
  444fa4:	ldr	w0, [sp, #44]
  444fa8:	add	w0, w0, #0x1
  444fac:	str	w0, [sp, #44]
  444fb0:	ldr	x0, [sp, #32]
  444fb4:	add	x0, x0, #0x38
  444fb8:	str	x0, [sp, #32]
  444fbc:	ldr	x0, [sp, #24]
  444fc0:	ldr	w0, [x0, #8]
  444fc4:	ldr	w1, [sp, #44]
  444fc8:	cmp	w1, w0
  444fcc:	b.cc	444f98 <wcrtomb@plt+0x40288>  // b.lo, b.ul, b.last
  444fd0:	ldr	x0, [sp, #24]
  444fd4:	ldr	x4, [x0]
  444fd8:	ldr	x0, [sp, #24]
  444fdc:	ldr	w0, [x0, #8]
  444fe0:	mov	w1, w0
  444fe4:	adrp	x0, 444000 <wcrtomb@plt+0x3f2f0>
  444fe8:	add	x3, x0, #0xf44
  444fec:	mov	x2, #0x38                  	// #56
  444ff0:	mov	x0, x4
  444ff4:	bl	404280 <qsort@plt>
  444ff8:	nop
  444ffc:	ldp	x29, x30, [sp], #48
  445000:	ret
  445004:	stp	x29, x30, [sp, #-144]!
  445008:	mov	x29, sp
  44500c:	str	x19, [sp, #16]
  445010:	str	x0, [sp, #40]
  445014:	str	x1, [sp, #32]
  445018:	ldr	x0, [sp, #40]
  44501c:	add	x0, x0, #0x18
  445020:	str	x0, [sp, #136]
  445024:	b	445038 <wcrtomb@plt+0x40328>
  445028:	ldr	x0, [sp, #136]
  44502c:	ldr	x0, [x0]
  445030:	add	x0, x0, #0x28
  445034:	str	x0, [sp, #136]
  445038:	ldr	x0, [sp, #136]
  44503c:	ldr	x0, [x0]
  445040:	cmp	x0, #0x0
  445044:	b.ne	445028 <wcrtomb@plt+0x40318>  // b.any
  445048:	ldr	x0, [sp, #32]
  44504c:	ldr	x1, [x0, #24]
  445050:	ldr	x0, [sp, #136]
  445054:	str	x1, [x0]
  445058:	ldr	x0, [sp, #32]
  44505c:	str	xzr, [x0, #24]
  445060:	ldr	x0, [sp, #32]
  445064:	ldr	w0, [x0, #8]
  445068:	cmp	w0, #0x0
  44506c:	b.eq	4453a4 <wcrtomb@plt+0x40694>  // b.none
  445070:	ldr	x0, [sp, #40]
  445074:	ldr	w0, [x0, #8]
  445078:	cmp	w0, #0x0
  44507c:	b.ne	4450bc <wcrtomb@plt+0x403ac>  // b.any
  445080:	ldr	x0, [sp, #32]
  445084:	ldr	w1, [x0, #8]
  445088:	ldr	x0, [sp, #40]
  44508c:	str	w1, [x0, #8]
  445090:	ldr	x0, [sp, #32]
  445094:	ldr	x1, [x0]
  445098:	ldr	x0, [sp, #40]
  44509c:	str	x1, [x0]
  4450a0:	ldr	x0, [sp, #32]
  4450a4:	ldr	x1, [x0, #16]
  4450a8:	ldr	x0, [sp, #40]
  4450ac:	str	x1, [x0, #16]
  4450b0:	ldr	x0, [sp, #32]
  4450b4:	str	wzr, [x0, #8]
  4450b8:	b	4453a4 <wcrtomb@plt+0x40694>
  4450bc:	ldr	x0, [sp, #40]
  4450c0:	ldr	w1, [x0, #8]
  4450c4:	ldr	x0, [sp, #32]
  4450c8:	ldr	w0, [x0, #8]
  4450cc:	add	w0, w1, w0
  4450d0:	str	w0, [sp, #84]
  4450d4:	ldr	w1, [sp, #84]
  4450d8:	mov	x0, x1
  4450dc:	lsl	x0, x0, #3
  4450e0:	sub	x0, x0, x1
  4450e4:	lsl	x0, x0, #3
  4450e8:	bl	4043f0 <malloc@plt>
  4450ec:	str	x0, [sp, #72]
  4450f0:	ldr	x0, [sp, #40]
  4450f4:	ldr	x0, [x0, #16]
  4450f8:	bl	4040b0 <strlen@plt>
  4450fc:	str	w0, [sp, #68]
  445100:	ldr	w19, [sp, #68]
  445104:	ldr	x0, [sp, #32]
  445108:	ldr	x0, [x0, #16]
  44510c:	bl	4040b0 <strlen@plt>
  445110:	add	x0, x19, x0
  445114:	add	x0, x0, #0x1
  445118:	bl	4043f0 <malloc@plt>
  44511c:	str	x0, [sp, #56]
  445120:	ldr	x0, [sp, #72]
  445124:	cmp	x0, #0x0
  445128:	b.eq	445138 <wcrtomb@plt+0x40428>  // b.none
  44512c:	ldr	x0, [sp, #56]
  445130:	cmp	x0, #0x0
  445134:	b.ne	445158 <wcrtomb@plt+0x40448>  // b.any
  445138:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44513c:	add	x3, x0, #0x48
  445140:	mov	w2, #0x366                 	// #870
  445144:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445148:	add	x1, x0, #0xe28
  44514c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445150:	add	x0, x0, #0xe78
  445154:	bl	404bb0 <__assert_fail@plt>
  445158:	ldr	x0, [sp, #40]
  44515c:	ldr	x3, [x0]
  445160:	ldr	x0, [sp, #40]
  445164:	ldr	w0, [x0, #8]
  445168:	mov	w1, w0
  44516c:	mov	x0, x1
  445170:	lsl	x0, x0, #3
  445174:	sub	x0, x0, x1
  445178:	lsl	x0, x0, #3
  44517c:	mov	x2, x0
  445180:	mov	x1, x3
  445184:	ldr	x0, [sp, #72]
  445188:	bl	4048d0 <mempcpy@plt>
  44518c:	mov	x4, x0
  445190:	ldr	x0, [sp, #32]
  445194:	ldr	x3, [x0]
  445198:	ldr	x0, [sp, #32]
  44519c:	ldr	w0, [x0, #8]
  4451a0:	mov	w1, w0
  4451a4:	mov	x0, x1
  4451a8:	lsl	x0, x0, #3
  4451ac:	sub	x0, x0, x1
  4451b0:	lsl	x0, x0, #3
  4451b4:	mov	x2, x0
  4451b8:	mov	x1, x3
  4451bc:	mov	x0, x4
  4451c0:	bl	4048d0 <mempcpy@plt>
  4451c4:	ldr	x0, [sp, #40]
  4451c8:	ldr	x0, [x0, #16]
  4451cc:	ldr	w1, [sp, #68]
  4451d0:	mov	x2, x1
  4451d4:	mov	x1, x0
  4451d8:	ldr	x0, [sp, #56]
  4451dc:	bl	4048d0 <mempcpy@plt>
  4451e0:	ldr	x0, [sp, #72]
  4451e4:	str	x0, [sp, #104]
  4451e8:	ldr	x0, [sp, #40]
  4451ec:	ldr	w0, [x0, #8]
  4451f0:	str	w0, [sp, #132]
  4451f4:	b	445238 <wcrtomb@plt+0x40528>
  4451f8:	ldr	x0, [sp, #104]
  4451fc:	ldr	x1, [x0, #16]
  445200:	ldr	x0, [sp, #40]
  445204:	ldr	x0, [x0, #16]
  445208:	sub	x0, x1, x0
  44520c:	mov	x1, x0
  445210:	ldr	x0, [sp, #56]
  445214:	add	x1, x0, x1
  445218:	ldr	x0, [sp, #104]
  44521c:	str	x1, [x0, #16]
  445220:	ldr	x0, [sp, #104]
  445224:	add	x0, x0, #0x38
  445228:	str	x0, [sp, #104]
  44522c:	ldr	w0, [sp, #132]
  445230:	sub	w0, w0, #0x1
  445234:	str	w0, [sp, #132]
  445238:	ldr	w0, [sp, #132]
  44523c:	cmp	w0, #0x0
  445240:	b.ne	4451f8 <wcrtomb@plt+0x404e8>  // b.any
  445244:	ldr	w0, [sp, #68]
  445248:	ldr	x1, [sp, #56]
  44524c:	add	x0, x1, x0
  445250:	str	x0, [sp, #120]
  445254:	ldr	x0, [sp, #32]
  445258:	ldr	x0, [x0, #16]
  44525c:	str	x0, [sp, #112]
  445260:	ldr	x0, [sp, #32]
  445264:	ldr	w0, [x0, #8]
  445268:	str	w0, [sp, #132]
  44526c:	b	445354 <wcrtomb@plt+0x40644>
  445270:	ldr	x0, [sp, #104]
  445274:	ldr	x1, [sp, #120]
  445278:	str	x1, [x0, #16]
  44527c:	ldr	x0, [sp, #104]
  445280:	ldr	w0, [x0, #8]
  445284:	str	w0, [sp, #100]
  445288:	ldr	x0, [sp, #104]
  44528c:	ldr	x0, [x0]
  445290:	str	x0, [sp, #88]
  445294:	b	445330 <wcrtomb@plt+0x40620>
  445298:	ldr	x0, [sp, #112]
  44529c:	ldrb	w0, [x0]
  4452a0:	str	w0, [sp, #52]
  4452a4:	ldr	x0, [sp, #88]
  4452a8:	bl	449120 <argp_usage@@Base+0x34>
  4452ac:	cmp	w0, #0x0
  4452b0:	b.eq	445318 <wcrtomb@plt+0x40608>  // b.none
  4452b4:	ldr	x0, [sp, #88]
  4452b8:	ldr	w0, [x0, #8]
  4452bc:	ldr	w1, [sp, #52]
  4452c0:	cmp	w1, w0
  4452c4:	b.ne	445318 <wcrtomb@plt+0x40608>  // b.any
  4452c8:	ldr	w0, [sp, #52]
  4452cc:	and	w3, w0, #0xff
  4452d0:	ldr	w0, [sp, #68]
  4452d4:	ldr	x1, [sp, #56]
  4452d8:	add	x0, x1, x0
  4452dc:	mov	x2, x0
  4452e0:	ldr	x1, [sp, #56]
  4452e4:	mov	w0, w3
  4452e8:	bl	4441bc <wcrtomb@plt+0x3f4ac>
  4452ec:	cmp	w0, #0x0
  4452f0:	b.ne	44530c <wcrtomb@plt+0x405fc>  // b.any
  4452f4:	ldr	x0, [sp, #120]
  4452f8:	add	x1, x0, #0x1
  4452fc:	str	x1, [sp, #120]
  445300:	ldr	w1, [sp, #52]
  445304:	and	w1, w1, #0xff
  445308:	strb	w1, [x0]
  44530c:	ldr	x0, [sp, #112]
  445310:	add	x0, x0, #0x1
  445314:	str	x0, [sp, #112]
  445318:	ldr	x0, [sp, #88]
  44531c:	add	x0, x0, #0x30
  445320:	str	x0, [sp, #88]
  445324:	ldr	w0, [sp, #100]
  445328:	sub	w0, w0, #0x1
  44532c:	str	w0, [sp, #100]
  445330:	ldr	w0, [sp, #100]
  445334:	cmp	w0, #0x0
  445338:	b.ne	445298 <wcrtomb@plt+0x40588>  // b.any
  44533c:	ldr	x0, [sp, #104]
  445340:	add	x0, x0, #0x38
  445344:	str	x0, [sp, #104]
  445348:	ldr	w0, [sp, #132]
  44534c:	sub	w0, w0, #0x1
  445350:	str	w0, [sp, #132]
  445354:	ldr	w0, [sp, #132]
  445358:	cmp	w0, #0x0
  44535c:	b.ne	445270 <wcrtomb@plt+0x40560>  // b.any
  445360:	ldr	x0, [sp, #120]
  445364:	strb	wzr, [x0]
  445368:	ldr	x0, [sp, #40]
  44536c:	ldr	x0, [x0]
  445370:	bl	404880 <free@plt>
  445374:	ldr	x0, [sp, #40]
  445378:	ldr	x0, [x0, #16]
  44537c:	bl	404880 <free@plt>
  445380:	ldr	x0, [sp, #40]
  445384:	ldr	x1, [sp, #72]
  445388:	str	x1, [x0]
  44538c:	ldr	x0, [sp, #40]
  445390:	ldr	w1, [sp, #84]
  445394:	str	w1, [x0, #8]
  445398:	ldr	x0, [sp, #40]
  44539c:	ldr	x1, [sp, #56]
  4453a0:	str	x1, [x0, #16]
  4453a4:	ldr	x0, [sp, #32]
  4453a8:	bl	4445fc <wcrtomb@plt+0x3f8ec>
  4453ac:	nop
  4453b0:	ldr	x19, [sp, #16]
  4453b4:	ldp	x29, x30, [sp], #144
  4453b8:	ret
  4453bc:	stp	x29, x30, [sp, #-48]!
  4453c0:	mov	x29, sp
  4453c4:	str	x0, [sp, #24]
  4453c8:	str	w1, [sp, #20]
  4453cc:	ldr	x0, [sp, #24]
  4453d0:	bl	476474 <_obstack_memory_used@@Base+0x19334>
  4453d4:	mov	w1, w0
  4453d8:	ldr	w0, [sp, #20]
  4453dc:	sub	w0, w0, w1
  4453e0:	str	w0, [sp, #44]
  4453e4:	b	4453f4 <wcrtomb@plt+0x406e4>
  4453e8:	mov	w1, #0x20                  	// #32
  4453ec:	ldr	x0, [sp, #24]
  4453f0:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  4453f4:	ldr	w0, [sp, #44]
  4453f8:	sub	w1, w0, #0x1
  4453fc:	str	w1, [sp, #44]
  445400:	cmp	w0, #0x0
  445404:	b.gt	4453e8 <wcrtomb@plt+0x406d8>
  445408:	nop
  44540c:	nop
  445410:	ldp	x29, x30, [sp], #48
  445414:	ret
  445418:	stp	x29, x30, [sp, #-32]!
  44541c:	mov	x29, sp
  445420:	str	x0, [sp, #24]
  445424:	str	x1, [sp, #16]
  445428:	ldr	x0, [sp, #24]
  44542c:	bl	476474 <_obstack_memory_used@@Base+0x19334>
  445430:	mov	x1, x0
  445434:	ldr	x0, [sp, #16]
  445438:	add	x1, x1, x0
  44543c:	ldr	x0, [sp, #24]
  445440:	ldr	x0, [x0, #16]
  445444:	cmp	x1, x0
  445448:	b.cc	44545c <wcrtomb@plt+0x4074c>  // b.lo, b.ul, b.last
  44544c:	mov	w1, #0xa                   	// #10
  445450:	ldr	x0, [sp, #24]
  445454:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445458:	b	445468 <wcrtomb@plt+0x40758>
  44545c:	mov	w1, #0x20                  	// #32
  445460:	ldr	x0, [sp, #24]
  445464:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445468:	nop
  44546c:	ldp	x29, x30, [sp], #32
  445470:	ret
  445474:	stp	x29, x30, [sp, #-64]!
  445478:	mov	x29, sp
  44547c:	str	x0, [sp, #56]
  445480:	str	x1, [sp, #48]
  445484:	str	x2, [sp, #40]
  445488:	str	x3, [sp, #32]
  44548c:	str	x4, [sp, #24]
  445490:	ldr	x0, [sp, #56]
  445494:	ldr	x0, [x0, #16]
  445498:	cmp	x0, #0x0
  44549c:	b.eq	445500 <wcrtomb@plt+0x407f0>  // b.none
  4454a0:	ldr	x0, [sp, #56]
  4454a4:	ldr	w0, [x0, #24]
  4454a8:	and	w0, w0, #0x1
  4454ac:	cmp	w0, #0x0
  4454b0:	b.eq	4454dc <wcrtomb@plt+0x407cc>  // b.none
  4454b4:	ldr	x0, [sp, #56]
  4454b8:	ldr	x0, [x0, #16]
  4454bc:	mov	x1, x0
  4454c0:	ldr	x0, [sp, #32]
  4454c4:	bl	404870 <dgettext@plt>
  4454c8:	mov	x2, x0
  4454cc:	ldr	x1, [sp, #40]
  4454d0:	ldr	x0, [sp, #24]
  4454d4:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  4454d8:	b	445500 <wcrtomb@plt+0x407f0>
  4454dc:	ldr	x0, [sp, #56]
  4454e0:	ldr	x0, [x0, #16]
  4454e4:	mov	x1, x0
  4454e8:	ldr	x0, [sp, #32]
  4454ec:	bl	404870 <dgettext@plt>
  4454f0:	mov	x2, x0
  4454f4:	ldr	x1, [sp, #48]
  4454f8:	ldr	x0, [sp, #24]
  4454fc:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  445500:	nop
  445504:	ldp	x29, x30, [sp], #64
  445508:	ret
  44550c:	stp	x29, x30, [sp, #-64]!
  445510:	mov	x29, sp
  445514:	str	x0, [sp, #40]
  445518:	str	w1, [sp, #36]
  44551c:	str	x2, [sp, #24]
  445520:	str	x3, [sp, #16]
  445524:	ldr	x0, [sp, #24]
  445528:	cmp	x0, #0x0
  44552c:	b.eq	44556c <wcrtomb@plt+0x4085c>  // b.none
  445530:	ldr	x0, [sp, #24]
  445534:	ldr	x0, [x0, #40]
  445538:	cmp	x0, #0x0
  44553c:	b.eq	44556c <wcrtomb@plt+0x4085c>  // b.none
  445540:	ldr	x1, [sp, #16]
  445544:	ldr	x0, [sp, #24]
  445548:	bl	44906c <argp_parse@@Base+0x1fc>
  44554c:	str	x0, [sp, #56]
  445550:	ldr	x0, [sp, #24]
  445554:	ldr	x3, [x0, #40]
  445558:	ldr	x2, [sp, #56]
  44555c:	ldr	x1, [sp, #40]
  445560:	ldr	w0, [sp, #36]
  445564:	blr	x3
  445568:	b	445570 <wcrtomb@plt+0x40860>
  44556c:	ldr	x0, [sp, #40]
  445570:	ldp	x29, x30, [sp], #64
  445574:	ret
  445578:	stp	x29, x30, [sp, #-64]!
  44557c:	mov	x29, sp
  445580:	str	x0, [sp, #40]
  445584:	str	x1, [sp, #32]
  445588:	str	x2, [sp, #24]
  44558c:	ldr	x0, [sp, #32]
  445590:	ldr	x0, [x0, #48]
  445594:	ldr	x1, [sp, #40]
  445598:	bl	404870 <dgettext@plt>
  44559c:	str	x0, [sp, #56]
  4455a0:	ldr	x0, [sp, #24]
  4455a4:	ldr	x0, [x0, #32]
  4455a8:	mov	x3, x0
  4455ac:	ldr	x2, [sp, #32]
  4455b0:	mov	w1, #0x3                   	// #3
  4455b4:	movk	w1, #0x200, lsl #16
  4455b8:	ldr	x0, [sp, #56]
  4455bc:	bl	44550c <wcrtomb@plt+0x407fc>
  4455c0:	str	x0, [sp, #48]
  4455c4:	ldr	x0, [sp, #48]
  4455c8:	cmp	x0, #0x0
  4455cc:	b.eq	4456ac <wcrtomb@plt+0x4099c>  // b.none
  4455d0:	ldr	x0, [sp, #48]
  4455d4:	ldrb	w0, [x0]
  4455d8:	cmp	w0, #0x0
  4455dc:	b.eq	44569c <wcrtomb@plt+0x4098c>  // b.none
  4455e0:	ldr	x0, [sp, #24]
  4455e4:	ldr	x0, [x0, #16]
  4455e8:	ldr	x0, [x0]
  4455ec:	cmp	x0, #0x0
  4455f0:	b.eq	445604 <wcrtomb@plt+0x408f4>  // b.none
  4455f4:	ldr	x0, [sp, #24]
  4455f8:	ldr	x0, [x0, #8]
  4455fc:	mov	w1, #0xa                   	// #10
  445600:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445604:	ldr	x0, [sp, #24]
  445608:	ldr	x2, [x0, #8]
  44560c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445610:	add	x0, x0, #0x3f0
  445614:	ldr	w0, [x0, #24]
  445618:	mov	w1, w0
  44561c:	mov	x0, x2
  445620:	bl	4453bc <wcrtomb@plt+0x406ac>
  445624:	ldr	x0, [sp, #24]
  445628:	ldr	x2, [x0, #8]
  44562c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445630:	add	x0, x0, #0x3f0
  445634:	ldr	w0, [x0, #24]
  445638:	sxtw	x0, w0
  44563c:	mov	x1, x0
  445640:	mov	x0, x2
  445644:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  445648:	ldr	x0, [sp, #24]
  44564c:	ldr	x2, [x0, #8]
  445650:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445654:	add	x0, x0, #0x3f0
  445658:	ldr	w0, [x0, #24]
  44565c:	sxtw	x0, w0
  445660:	mov	x1, x0
  445664:	mov	x0, x2
  445668:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  44566c:	ldr	x0, [sp, #24]
  445670:	ldr	x0, [x0, #8]
  445674:	ldr	x1, [sp, #48]
  445678:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  44567c:	ldr	x0, [sp, #24]
  445680:	ldr	x0, [x0, #8]
  445684:	mov	x1, #0x0                   	// #0
  445688:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  44568c:	ldr	x0, [sp, #24]
  445690:	ldr	x0, [x0, #8]
  445694:	mov	w1, #0xa                   	// #10
  445698:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  44569c:	ldr	x0, [sp, #24]
  4456a0:	ldr	x0, [x0, #16]
  4456a4:	mov	w1, #0x1                   	// #1
  4456a8:	str	w1, [x0, #8]
  4456ac:	ldr	x1, [sp, #48]
  4456b0:	ldr	x0, [sp, #56]
  4456b4:	cmp	x1, x0
  4456b8:	b.eq	4456c4 <wcrtomb@plt+0x409b4>  // b.none
  4456bc:	ldr	x0, [sp, #48]
  4456c0:	bl	404880 <free@plt>
  4456c4:	nop
  4456c8:	ldp	x29, x30, [sp], #64
  4456cc:	ret
  4456d0:	stp	x29, x30, [sp, #-64]!
  4456d4:	mov	x29, sp
  4456d8:	str	w0, [sp, #28]
  4456dc:	str	x1, [sp, #16]
  4456e0:	ldr	x0, [sp, #16]
  4456e4:	ldr	w0, [x0, #24]
  4456e8:	cmp	w0, #0x0
  4456ec:	b.eq	445810 <wcrtomb@plt+0x40b00>  // b.none
  4456f0:	ldr	x0, [sp, #16]
  4456f4:	ldr	x0, [x0, #16]
  4456f8:	ldr	x0, [x0]
  4456fc:	str	x0, [sp, #56]
  445700:	ldr	x0, [sp, #16]
  445704:	ldr	x0, [x0]
  445708:	ldr	x0, [x0, #32]
  44570c:	str	x0, [sp, #48]
  445710:	ldr	x0, [sp, #16]
  445714:	ldr	x0, [x0, #16]
  445718:	ldr	w0, [x0, #8]
  44571c:	cmp	w0, #0x0
  445720:	b.eq	44575c <wcrtomb@plt+0x40a4c>  // b.none
  445724:	ldr	x0, [sp, #56]
  445728:	cmp	x0, #0x0
  44572c:	b.eq	44575c <wcrtomb@plt+0x40a4c>  // b.none
  445730:	ldr	x0, [sp, #16]
  445734:	ldr	x0, [x0]
  445738:	ldr	w1, [x0, #24]
  44573c:	ldr	x0, [sp, #56]
  445740:	ldr	w0, [x0, #24]
  445744:	cmp	w1, w0
  445748:	b.eq	44575c <wcrtomb@plt+0x40a4c>  // b.none
  44574c:	ldr	x0, [sp, #16]
  445750:	ldr	x0, [x0, #8]
  445754:	mov	w1, #0xa                   	// #10
  445758:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  44575c:	ldr	x0, [sp, #48]
  445760:	cmp	x0, #0x0
  445764:	b.eq	445804 <wcrtomb@plt+0x40af4>  // b.none
  445768:	ldr	x0, [sp, #48]
  44576c:	ldr	x0, [x0]
  445770:	cmp	x0, #0x0
  445774:	b.eq	445804 <wcrtomb@plt+0x40af4>  // b.none
  445778:	ldr	x0, [sp, #48]
  44577c:	ldr	x0, [x0]
  445780:	ldrb	w0, [x0]
  445784:	cmp	w0, #0x0
  445788:	b.eq	445804 <wcrtomb@plt+0x40af4>  // b.none
  44578c:	ldr	x0, [sp, #56]
  445790:	cmp	x0, #0x0
  445794:	b.eq	4457c4 <wcrtomb@plt+0x40ab4>  // b.none
  445798:	ldr	x0, [sp, #56]
  44579c:	ldr	x0, [x0, #32]
  4457a0:	ldr	x1, [sp, #48]
  4457a4:	cmp	x1, x0
  4457a8:	b.eq	445804 <wcrtomb@plt+0x40af4>  // b.none
  4457ac:	ldr	x0, [sp, #56]
  4457b0:	ldr	x0, [x0, #32]
  4457b4:	ldr	x1, [sp, #48]
  4457b8:	bl	444b28 <wcrtomb@plt+0x3fe18>
  4457bc:	cmp	w0, #0x0
  4457c0:	b.ne	445804 <wcrtomb@plt+0x40af4>  // b.any
  4457c4:	ldr	x0, [sp, #16]
  4457c8:	ldr	x0, [x0, #8]
  4457cc:	ldr	x0, [x0, #24]
  4457d0:	str	w0, [sp, #44]
  4457d4:	ldr	x0, [sp, #48]
  4457d8:	ldr	x3, [x0]
  4457dc:	ldr	x0, [sp, #48]
  4457e0:	ldr	x0, [x0, #24]
  4457e4:	ldr	x2, [sp, #16]
  4457e8:	mov	x1, x0
  4457ec:	mov	x0, x3
  4457f0:	bl	445578 <wcrtomb@plt+0x40868>
  4457f4:	ldr	x0, [sp, #16]
  4457f8:	ldr	x0, [x0, #8]
  4457fc:	ldrsw	x1, [sp, #44]
  445800:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  445804:	ldr	x0, [sp, #16]
  445808:	str	wzr, [x0, #24]
  44580c:	b	445828 <wcrtomb@plt+0x40b18>
  445810:	ldr	x0, [sp, #16]
  445814:	ldr	x2, [x0, #8]
  445818:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  44581c:	add	x1, x0, #0xe98
  445820:	mov	x0, x2
  445824:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  445828:	ldr	x0, [sp, #16]
  44582c:	ldr	x0, [x0, #8]
  445830:	ldr	w1, [sp, #28]
  445834:	bl	4453bc <wcrtomb@plt+0x406ac>
  445838:	nop
  44583c:	ldp	x29, x30, [sp], #64
  445840:	ret
  445844:	stp	x29, x30, [sp, #-160]!
  445848:	mov	x29, sp
  44584c:	str	x0, [sp, #40]
  445850:	str	x1, [sp, #32]
  445854:	str	x2, [sp, #24]
  445858:	str	x3, [sp, #16]
  44585c:	ldr	x0, [sp, #40]
  445860:	ldr	x0, [x0]
  445864:	str	x0, [sp, #120]
  445868:	ldr	x0, [sp, #40]
  44586c:	ldr	x0, [x0, #16]
  445870:	str	x0, [sp, #136]
  445874:	str	wzr, [sp, #132]
  445878:	mov	x1, #0x0                   	// #0
  44587c:	ldr	x0, [sp, #24]
  445880:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  445884:	str	w0, [sp, #116]
  445888:	ldr	x0, [sp, #24]
  44588c:	ldr	x0, [x0, #24]
  445890:	str	w0, [sp, #112]
  445894:	ldr	x0, [sp, #40]
  445898:	str	x0, [sp, #48]
  44589c:	ldr	x0, [sp, #24]
  4458a0:	str	x0, [sp, #56]
  4458a4:	ldr	x0, [sp, #16]
  4458a8:	str	x0, [sp, #64]
  4458ac:	mov	w0, #0x1                   	// #1
  4458b0:	str	w0, [sp, #72]
  4458b4:	ldr	x0, [sp, #32]
  4458b8:	str	x0, [sp, #80]
  4458bc:	ldr	x0, [sp, #120]
  4458c0:	ldr	w0, [x0, #24]
  4458c4:	and	w0, w0, #0x8
  4458c8:	cmp	w0, #0x0
  4458cc:	b.ne	44593c <wcrtomb@plt+0x40c2c>  // b.any
  4458d0:	ldr	x0, [sp, #120]
  4458d4:	str	x0, [sp, #144]
  4458d8:	ldr	x0, [sp, #40]
  4458dc:	ldr	w0, [x0, #8]
  4458e0:	str	w0, [sp, #156]
  4458e4:	b	445930 <wcrtomb@plt+0x40c20>
  4458e8:	ldr	x0, [sp, #144]
  4458ec:	ldr	x0, [x0]
  4458f0:	cmp	x0, #0x0
  4458f4:	b.eq	445918 <wcrtomb@plt+0x40c08>  // b.none
  4458f8:	ldr	x0, [sp, #144]
  4458fc:	ldr	w0, [x0, #24]
  445900:	and	w0, w0, #0x2
  445904:	cmp	w0, #0x0
  445908:	b.ne	445918 <wcrtomb@plt+0x40c08>  // b.any
  44590c:	mov	w0, #0x1                   	// #1
  445910:	str	w0, [sp, #132]
  445914:	b	44593c <wcrtomb@plt+0x40c2c>
  445918:	ldr	x0, [sp, #144]
  44591c:	add	x0, x0, #0x30
  445920:	str	x0, [sp, #144]
  445924:	ldr	w0, [sp, #156]
  445928:	sub	w0, w0, #0x1
  44592c:	str	w0, [sp, #156]
  445930:	ldr	w0, [sp, #156]
  445934:	cmp	w0, #0x0
  445938:	b.ne	4458e8 <wcrtomb@plt+0x40bd8>  // b.any
  44593c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445940:	add	x0, x0, #0x3f0
  445944:	ldr	w0, [x0, #8]
  445948:	sxtw	x0, w0
  44594c:	mov	x1, x0
  445950:	ldr	x0, [sp, #24]
  445954:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  445958:	ldr	x0, [sp, #120]
  44595c:	str	x0, [sp, #144]
  445960:	ldr	x0, [sp, #40]
  445964:	ldr	w0, [x0, #8]
  445968:	str	w0, [sp, #156]
  44596c:	b	445a90 <wcrtomb@plt+0x40d80>
  445970:	ldr	x0, [sp, #144]
  445974:	bl	449120 <argp_usage@@Base+0x34>
  445978:	cmp	w0, #0x0
  44597c:	b.eq	445a78 <wcrtomb@plt+0x40d68>  // b.none
  445980:	ldr	x0, [sp, #144]
  445984:	ldr	w0, [x0, #8]
  445988:	ldr	x1, [sp, #136]
  44598c:	ldrb	w1, [x1]
  445990:	cmp	w0, w1
  445994:	b.ne	445a78 <wcrtomb@plt+0x40d68>  // b.any
  445998:	ldr	x0, [sp, #144]
  44599c:	ldr	w0, [x0, #24]
  4459a0:	and	w0, w0, #0x2
  4459a4:	cmp	w0, #0x0
  4459a8:	b.ne	445a6c <wcrtomb@plt+0x40d5c>  // b.any
  4459ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4459b0:	add	x0, x0, #0x3f0
  4459b4:	ldr	w0, [x0, #8]
  4459b8:	mov	w2, w0
  4459bc:	add	x0, sp, #0x30
  4459c0:	mov	x1, x0
  4459c4:	mov	w0, w2
  4459c8:	bl	4456d0 <wcrtomb@plt+0x409c0>
  4459cc:	mov	w1, #0x2d                  	// #45
  4459d0:	ldr	x0, [sp, #24]
  4459d4:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  4459d8:	ldr	x0, [sp, #136]
  4459dc:	ldrb	w0, [x0]
  4459e0:	mov	w1, w0
  4459e4:	ldr	x0, [sp, #24]
  4459e8:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  4459ec:	ldr	w0, [sp, #132]
  4459f0:	cmp	w0, #0x0
  4459f4:	b.eq	445a0c <wcrtomb@plt+0x40cfc>  // b.none
  4459f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4459fc:	add	x0, x0, #0x3f0
  445a00:	ldr	w0, [x0]
  445a04:	cmp	w0, #0x0
  445a08:	b.eq	445a50 <wcrtomb@plt+0x40d40>  // b.none
  445a0c:	ldr	x0, [sp, #32]
  445a10:	cmp	x0, #0x0
  445a14:	b.eq	445a28 <wcrtomb@plt+0x40d18>  // b.none
  445a18:	ldr	x0, [sp, #32]
  445a1c:	ldr	x0, [x0]
  445a20:	ldr	x0, [x0, #48]
  445a24:	b	445a2c <wcrtomb@plt+0x40d1c>
  445a28:	mov	x0, #0x0                   	// #0
  445a2c:	ldr	x4, [sp, #24]
  445a30:	mov	x3, x0
  445a34:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445a38:	add	x2, x0, #0xea0
  445a3c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445a40:	add	x1, x0, #0xea8
  445a44:	ldr	x0, [sp, #120]
  445a48:	bl	445474 <wcrtomb@plt+0x40764>
  445a4c:	b	445a6c <wcrtomb@plt+0x40d5c>
  445a50:	ldr	x0, [sp, #120]
  445a54:	ldr	x0, [x0, #16]
  445a58:	cmp	x0, #0x0
  445a5c:	b.eq	445a6c <wcrtomb@plt+0x40d5c>  // b.none
  445a60:	ldr	x0, [sp, #16]
  445a64:	mov	w1, #0x1                   	// #1
  445a68:	str	w1, [x0, #12]
  445a6c:	ldr	x0, [sp, #136]
  445a70:	add	x0, x0, #0x1
  445a74:	str	x0, [sp, #136]
  445a78:	ldr	x0, [sp, #144]
  445a7c:	add	x0, x0, #0x30
  445a80:	str	x0, [sp, #144]
  445a84:	ldr	w0, [sp, #156]
  445a88:	sub	w0, w0, #0x1
  445a8c:	str	w0, [sp, #156]
  445a90:	ldr	w0, [sp, #156]
  445a94:	cmp	w0, #0x0
  445a98:	b.ne	445970 <wcrtomb@plt+0x40c60>  // b.any
  445a9c:	ldr	x0, [sp, #120]
  445aa0:	ldr	w0, [x0, #24]
  445aa4:	and	w0, w0, #0x8
  445aa8:	cmp	w0, #0x0
  445aac:	b.eq	445b88 <wcrtomb@plt+0x40e78>  // b.none
  445ab0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445ab4:	add	x0, x0, #0x3f0
  445ab8:	ldr	w0, [x0, #16]
  445abc:	sxtw	x0, w0
  445ac0:	mov	x1, x0
  445ac4:	ldr	x0, [sp, #24]
  445ac8:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  445acc:	ldr	x0, [sp, #120]
  445ad0:	str	x0, [sp, #144]
  445ad4:	ldr	x0, [sp, #40]
  445ad8:	ldr	w0, [x0, #8]
  445adc:	str	w0, [sp, #156]
  445ae0:	b	445b78 <wcrtomb@plt+0x40e68>
  445ae4:	ldr	x0, [sp, #144]
  445ae8:	ldr	x0, [x0]
  445aec:	cmp	x0, #0x0
  445af0:	b.eq	445b60 <wcrtomb@plt+0x40e50>  // b.none
  445af4:	ldr	x0, [sp, #144]
  445af8:	ldr	w0, [x0, #24]
  445afc:	and	w0, w0, #0x2
  445b00:	cmp	w0, #0x0
  445b04:	b.ne	445b60 <wcrtomb@plt+0x40e50>  // b.any
  445b08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445b0c:	add	x0, x0, #0x3f0
  445b10:	ldr	w0, [x0, #16]
  445b14:	mov	w2, w0
  445b18:	add	x0, sp, #0x30
  445b1c:	mov	x1, x0
  445b20:	mov	w0, w2
  445b24:	bl	4456d0 <wcrtomb@plt+0x409c0>
  445b28:	ldr	x0, [sp, #32]
  445b2c:	cmp	x0, #0x0
  445b30:	b.eq	445b44 <wcrtomb@plt+0x40e34>  // b.none
  445b34:	ldr	x0, [sp, #32]
  445b38:	ldr	x0, [x0]
  445b3c:	ldr	x0, [x0, #48]
  445b40:	b	445b48 <wcrtomb@plt+0x40e38>
  445b44:	mov	x0, #0x0                   	// #0
  445b48:	ldr	x1, [sp, #144]
  445b4c:	ldr	x1, [x1]
  445b50:	bl	404870 <dgettext@plt>
  445b54:	mov	x1, x0
  445b58:	ldr	x0, [sp, #24]
  445b5c:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  445b60:	ldr	x0, [sp, #144]
  445b64:	add	x0, x0, #0x30
  445b68:	str	x0, [sp, #144]
  445b6c:	ldr	w0, [sp, #156]
  445b70:	sub	w0, w0, #0x1
  445b74:	str	w0, [sp, #156]
  445b78:	ldr	w0, [sp, #156]
  445b7c:	cmp	w0, #0x0
  445b80:	b.ne	445ae4 <wcrtomb@plt+0x40dd4>  // b.any
  445b84:	b	445c80 <wcrtomb@plt+0x40f70>
  445b88:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445b8c:	add	x0, x0, #0x3f0
  445b90:	ldr	w0, [x0, #12]
  445b94:	sxtw	x0, w0
  445b98:	mov	x1, x0
  445b9c:	ldr	x0, [sp, #24]
  445ba0:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  445ba4:	ldr	x0, [sp, #120]
  445ba8:	str	x0, [sp, #144]
  445bac:	ldr	x0, [sp, #40]
  445bb0:	ldr	w0, [x0, #8]
  445bb4:	str	w0, [sp, #156]
  445bb8:	b	445c74 <wcrtomb@plt+0x40f64>
  445bbc:	ldr	x0, [sp, #144]
  445bc0:	ldr	x0, [x0]
  445bc4:	cmp	x0, #0x0
  445bc8:	b.eq	445c5c <wcrtomb@plt+0x40f4c>  // b.none
  445bcc:	ldr	x0, [sp, #144]
  445bd0:	ldr	w0, [x0, #24]
  445bd4:	and	w0, w0, #0x2
  445bd8:	cmp	w0, #0x0
  445bdc:	b.ne	445c5c <wcrtomb@plt+0x40f4c>  // b.any
  445be0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445be4:	add	x0, x0, #0x3f0
  445be8:	ldr	w0, [x0, #12]
  445bec:	mov	w2, w0
  445bf0:	add	x0, sp, #0x30
  445bf4:	mov	x1, x0
  445bf8:	mov	w0, w2
  445bfc:	bl	4456d0 <wcrtomb@plt+0x409c0>
  445c00:	ldr	x0, [sp, #144]
  445c04:	ldr	x0, [x0]
  445c08:	mov	x2, x0
  445c0c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445c10:	add	x1, x0, #0xeb0
  445c14:	ldr	x0, [sp, #24]
  445c18:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  445c1c:	ldr	x0, [sp, #32]
  445c20:	cmp	x0, #0x0
  445c24:	b.eq	445c38 <wcrtomb@plt+0x40f28>  // b.none
  445c28:	ldr	x0, [sp, #32]
  445c2c:	ldr	x0, [x0]
  445c30:	ldr	x0, [x0, #48]
  445c34:	b	445c3c <wcrtomb@plt+0x40f2c>
  445c38:	mov	x0, #0x0                   	// #0
  445c3c:	ldr	x4, [sp, #24]
  445c40:	mov	x3, x0
  445c44:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445c48:	add	x2, x0, #0xeb8
  445c4c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445c50:	add	x1, x0, #0xec0
  445c54:	ldr	x0, [sp, #120]
  445c58:	bl	445474 <wcrtomb@plt+0x40764>
  445c5c:	ldr	x0, [sp, #144]
  445c60:	add	x0, x0, #0x30
  445c64:	str	x0, [sp, #144]
  445c68:	ldr	w0, [sp, #156]
  445c6c:	sub	w0, w0, #0x1
  445c70:	str	w0, [sp, #156]
  445c74:	ldr	w0, [sp, #156]
  445c78:	cmp	w0, #0x0
  445c7c:	b.ne	445bbc <wcrtomb@plt+0x40eac>  // b.any
  445c80:	mov	x1, #0x0                   	// #0
  445c84:	ldr	x0, [sp, #24]
  445c88:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  445c8c:	ldr	w0, [sp, #72]
  445c90:	cmp	w0, #0x0
  445c94:	b.eq	445ce0 <wcrtomb@plt+0x40fd0>  // b.none
  445c98:	ldr	x0, [sp, #120]
  445c9c:	bl	449120 <argp_usage@@Base+0x34>
  445ca0:	cmp	w0, #0x0
  445ca4:	b.ne	445e7c <wcrtomb@plt+0x4116c>  // b.any
  445ca8:	ldr	x0, [sp, #120]
  445cac:	ldr	x0, [x0]
  445cb0:	cmp	x0, #0x0
  445cb4:	b.ne	445e7c <wcrtomb@plt+0x4116c>  // b.any
  445cb8:	ldr	x0, [sp, #120]
  445cbc:	ldr	x3, [x0, #32]
  445cc0:	ldr	x0, [sp, #40]
  445cc4:	ldr	x0, [x0, #40]
  445cc8:	add	x1, sp, #0x30
  445ccc:	mov	x2, x1
  445cd0:	mov	x1, x0
  445cd4:	mov	x0, x3
  445cd8:	bl	445578 <wcrtomb@plt+0x40868>
  445cdc:	b	445e6c <wcrtomb@plt+0x4115c>
  445ce0:	ldr	x0, [sp, #120]
  445ce4:	ldr	x0, [x0, #32]
  445ce8:	cmp	x0, #0x0
  445cec:	b.eq	445d20 <wcrtomb@plt+0x41010>  // b.none
  445cf0:	ldr	x0, [sp, #32]
  445cf4:	cmp	x0, #0x0
  445cf8:	b.eq	445d0c <wcrtomb@plt+0x40ffc>  // b.none
  445cfc:	ldr	x0, [sp, #32]
  445d00:	ldr	x0, [x0]
  445d04:	ldr	x0, [x0, #48]
  445d08:	b	445d10 <wcrtomb@plt+0x41000>
  445d0c:	mov	x0, #0x0                   	// #0
  445d10:	ldr	x1, [sp, #120]
  445d14:	ldr	x1, [x1, #32]
  445d18:	bl	404870 <dgettext@plt>
  445d1c:	b	445d24 <wcrtomb@plt+0x41014>
  445d20:	mov	x0, #0x0                   	// #0
  445d24:	str	x0, [sp, #104]
  445d28:	ldr	x0, [sp, #120]
  445d2c:	ldr	w1, [x0, #8]
  445d30:	ldr	x0, [sp, #40]
  445d34:	ldr	x0, [x0, #40]
  445d38:	ldr	x3, [sp, #32]
  445d3c:	mov	x2, x0
  445d40:	ldr	x0, [sp, #104]
  445d44:	bl	44550c <wcrtomb@plt+0x407fc>
  445d48:	str	x0, [sp, #96]
  445d4c:	ldr	x0, [sp, #96]
  445d50:	cmp	x0, #0x0
  445d54:	b.eq	445e30 <wcrtomb@plt+0x41120>  // b.none
  445d58:	ldr	x0, [sp, #96]
  445d5c:	ldrb	w0, [x0]
  445d60:	cmp	w0, #0x0
  445d64:	b.eq	445e30 <wcrtomb@plt+0x41120>  // b.none
  445d68:	ldr	x0, [sp, #24]
  445d6c:	bl	476474 <_obstack_memory_used@@Base+0x19334>
  445d70:	str	w0, [sp, #92]
  445d74:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445d78:	add	x0, x0, #0x3f0
  445d7c:	ldr	w0, [x0, #20]
  445d80:	sxtw	x0, w0
  445d84:	mov	x1, x0
  445d88:	ldr	x0, [sp, #24]
  445d8c:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  445d90:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445d94:	add	x0, x0, #0x3f0
  445d98:	ldr	w0, [x0, #20]
  445d9c:	sxtw	x0, w0
  445da0:	mov	x1, x0
  445da4:	ldr	x0, [sp, #24]
  445da8:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  445dac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445db0:	add	x0, x0, #0x3f0
  445db4:	ldr	w0, [x0, #20]
  445db8:	add	w0, w0, #0x3
  445dbc:	mov	w1, w0
  445dc0:	ldr	w0, [sp, #92]
  445dc4:	cmp	w0, w1
  445dc8:	b.ls	445ddc <wcrtomb@plt+0x410cc>  // b.plast
  445dcc:	mov	w1, #0xa                   	// #10
  445dd0:	ldr	x0, [sp, #24]
  445dd4:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445dd8:	b	445e24 <wcrtomb@plt+0x41114>
  445ddc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445de0:	add	x0, x0, #0x3f0
  445de4:	ldr	w0, [x0, #20]
  445de8:	mov	w1, w0
  445dec:	ldr	w0, [sp, #92]
  445df0:	cmp	w0, w1
  445df4:	b.cc	445e0c <wcrtomb@plt+0x410fc>  // b.lo, b.ul, b.last
  445df8:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445dfc:	add	x1, x0, #0xec8
  445e00:	ldr	x0, [sp, #24]
  445e04:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  445e08:	b	445e24 <wcrtomb@plt+0x41114>
  445e0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445e10:	add	x0, x0, #0x3f0
  445e14:	ldr	w0, [x0, #20]
  445e18:	mov	w1, w0
  445e1c:	ldr	x0, [sp, #24]
  445e20:	bl	4453bc <wcrtomb@plt+0x406ac>
  445e24:	ldr	x1, [sp, #96]
  445e28:	ldr	x0, [sp, #24]
  445e2c:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  445e30:	ldr	x0, [sp, #96]
  445e34:	cmp	x0, #0x0
  445e38:	b.eq	445e54 <wcrtomb@plt+0x41144>  // b.none
  445e3c:	ldr	x1, [sp, #96]
  445e40:	ldr	x0, [sp, #104]
  445e44:	cmp	x1, x0
  445e48:	b.eq	445e54 <wcrtomb@plt+0x41144>  // b.none
  445e4c:	ldr	x0, [sp, #96]
  445e50:	bl	404880 <free@plt>
  445e54:	mov	x1, #0x0                   	// #0
  445e58:	ldr	x0, [sp, #24]
  445e5c:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  445e60:	mov	w1, #0xa                   	// #10
  445e64:	ldr	x0, [sp, #24]
  445e68:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445e6c:	ldr	x0, [sp, #16]
  445e70:	ldr	x1, [sp, #40]
  445e74:	str	x1, [x0]
  445e78:	b	445e80 <wcrtomb@plt+0x41170>
  445e7c:	nop
  445e80:	ldrsw	x0, [sp, #116]
  445e84:	mov	x1, x0
  445e88:	ldr	x0, [sp, #24]
  445e8c:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  445e90:	ldrsw	x0, [sp, #112]
  445e94:	mov	x1, x0
  445e98:	ldr	x0, [sp, #24]
  445e9c:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  445ea0:	nop
  445ea4:	ldp	x29, x30, [sp], #160
  445ea8:	ret
  445eac:	stp	x29, x30, [sp, #-96]!
  445eb0:	mov	x29, sp
  445eb4:	str	x0, [sp, #40]
  445eb8:	str	x1, [sp, #32]
  445ebc:	str	x2, [sp, #24]
  445ec0:	str	xzr, [sp, #48]
  445ec4:	str	wzr, [sp, #56]
  445ec8:	str	wzr, [sp, #60]
  445ecc:	ldr	x0, [sp, #40]
  445ed0:	ldr	x0, [x0]
  445ed4:	str	x0, [sp, #80]
  445ed8:	ldr	x0, [sp, #40]
  445edc:	ldr	w0, [x0, #8]
  445ee0:	str	w0, [sp, #92]
  445ee4:	b	445f18 <wcrtomb@plt+0x41208>
  445ee8:	add	x0, sp, #0x30
  445eec:	mov	x3, x0
  445ef0:	ldr	x2, [sp, #24]
  445ef4:	ldr	x1, [sp, #32]
  445ef8:	ldr	x0, [sp, #80]
  445efc:	bl	445844 <wcrtomb@plt+0x40b34>
  445f00:	ldr	x0, [sp, #80]
  445f04:	add	x0, x0, #0x38
  445f08:	str	x0, [sp, #80]
  445f0c:	ldr	w0, [sp, #92]
  445f10:	sub	w0, w0, #0x1
  445f14:	str	w0, [sp, #92]
  445f18:	ldr	w0, [sp, #92]
  445f1c:	cmp	w0, #0x0
  445f20:	b.ne	445ee8 <wcrtomb@plt+0x411d8>  // b.any
  445f24:	ldr	w0, [sp, #60]
  445f28:	cmp	w0, #0x0
  445f2c:	b.eq	446010 <wcrtomb@plt+0x41300>  // b.none
  445f30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  445f34:	add	x0, x0, #0x3f0
  445f38:	ldr	w0, [x0, #4]
  445f3c:	cmp	w0, #0x0
  445f40:	b.eq	446010 <wcrtomb@plt+0x41300>  // b.none
  445f44:	ldr	x0, [sp, #32]
  445f48:	cmp	x0, #0x0
  445f4c:	b.eq	445f60 <wcrtomb@plt+0x41250>  // b.none
  445f50:	ldr	x0, [sp, #32]
  445f54:	ldr	x0, [x0]
  445f58:	ldr	x0, [x0, #48]
  445f5c:	b	445f64 <wcrtomb@plt+0x41254>
  445f60:	mov	x0, #0x0                   	// #0
  445f64:	adrp	x1, 487000 <_obstack_memory_used@@Base+0x29ec0>
  445f68:	add	x1, x1, #0xed0
  445f6c:	bl	404870 <dgettext@plt>
  445f70:	str	x0, [sp, #72]
  445f74:	ldr	x0, [sp, #32]
  445f78:	cmp	x0, #0x0
  445f7c:	b.eq	445f8c <wcrtomb@plt+0x4127c>  // b.none
  445f80:	ldr	x0, [sp, #32]
  445f84:	ldr	x0, [x0]
  445f88:	b	445f90 <wcrtomb@plt+0x41280>
  445f8c:	mov	x0, #0x0                   	// #0
  445f90:	ldr	x3, [sp, #32]
  445f94:	mov	x2, x0
  445f98:	mov	w1, #0x5                   	// #5
  445f9c:	movk	w1, #0x200, lsl #16
  445fa0:	ldr	x0, [sp, #72]
  445fa4:	bl	44550c <wcrtomb@plt+0x407fc>
  445fa8:	str	x0, [sp, #64]
  445fac:	ldr	x0, [sp, #64]
  445fb0:	cmp	x0, #0x0
  445fb4:	b.eq	445fec <wcrtomb@plt+0x412dc>  // b.none
  445fb8:	ldr	x0, [sp, #64]
  445fbc:	ldrb	w0, [x0]
  445fc0:	cmp	w0, #0x0
  445fc4:	b.eq	445fec <wcrtomb@plt+0x412dc>  // b.none
  445fc8:	mov	w1, #0xa                   	// #10
  445fcc:	ldr	x0, [sp, #24]
  445fd0:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445fd4:	ldr	x1, [sp, #64]
  445fd8:	ldr	x0, [sp, #24]
  445fdc:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  445fe0:	mov	w1, #0xa                   	// #10
  445fe4:	ldr	x0, [sp, #24]
  445fe8:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  445fec:	ldr	x0, [sp, #64]
  445ff0:	cmp	x0, #0x0
  445ff4:	b.eq	446010 <wcrtomb@plt+0x41300>  // b.none
  445ff8:	ldr	x1, [sp, #64]
  445ffc:	ldr	x0, [sp, #72]
  446000:	cmp	x1, x0
  446004:	b.eq	446010 <wcrtomb@plt+0x41300>  // b.none
  446008:	ldr	x0, [sp, #64]
  44600c:	bl	404880 <free@plt>
  446010:	nop
  446014:	ldp	x29, x30, [sp], #96
  446018:	ret
  44601c:	sub	sp, sp, #0x30
  446020:	str	x0, [sp, #24]
  446024:	str	x1, [sp, #16]
  446028:	str	x2, [sp, #8]
  44602c:	str	x3, [sp]
  446030:	ldr	x0, [sp]
  446034:	str	x0, [sp, #40]
  446038:	ldr	x0, [sp, #24]
  44603c:	ldr	x0, [x0, #16]
  446040:	cmp	x0, #0x0
  446044:	b.ne	44609c <wcrtomb@plt+0x4138c>  // b.any
  446048:	ldr	x0, [sp, #16]
  44604c:	ldr	x0, [x0, #16]
  446050:	cmp	x0, #0x0
  446054:	b.ne	44609c <wcrtomb@plt+0x4138c>  // b.any
  446058:	ldr	x0, [sp, #24]
  44605c:	ldr	w1, [x0, #24]
  446060:	ldr	x0, [sp, #16]
  446064:	ldr	w0, [x0, #24]
  446068:	orr	w0, w1, w0
  44606c:	and	w0, w0, #0x10
  446070:	cmp	w0, #0x0
  446074:	b.ne	44609c <wcrtomb@plt+0x4138c>  // b.any
  446078:	ldr	x0, [sp, #24]
  44607c:	ldr	w3, [x0, #8]
  446080:	ldr	x0, [sp, #40]
  446084:	ldr	x0, [x0]
  446088:	add	x2, x0, #0x1
  44608c:	ldr	x1, [sp, #40]
  446090:	str	x2, [x1]
  446094:	and	w1, w3, #0xff
  446098:	strb	w1, [x0]
  44609c:	mov	w0, #0x0                   	// #0
  4460a0:	add	sp, sp, #0x30
  4460a4:	ret
  4460a8:	stp	x29, x30, [sp, #-80]!
  4460ac:	mov	x29, sp
  4460b0:	str	x0, [sp, #40]
  4460b4:	str	x1, [sp, #32]
  4460b8:	str	x2, [sp, #24]
  4460bc:	str	x3, [sp, #16]
  4460c0:	ldr	x0, [sp, #16]
  4460c4:	str	x0, [sp, #64]
  4460c8:	ldr	x0, [sp, #40]
  4460cc:	ldr	x0, [x0, #16]
  4460d0:	str	x0, [sp, #72]
  4460d4:	ldr	x0, [sp, #40]
  4460d8:	ldr	w1, [x0, #24]
  4460dc:	ldr	x0, [sp, #32]
  4460e0:	ldr	w0, [x0, #24]
  4460e4:	orr	w0, w1, w0
  4460e8:	str	w0, [sp, #60]
  4460ec:	ldr	x0, [sp, #72]
  4460f0:	cmp	x0, #0x0
  4460f4:	b.ne	446104 <wcrtomb@plt+0x413f4>  // b.any
  4460f8:	ldr	x0, [sp, #32]
  4460fc:	ldr	x0, [x0, #16]
  446100:	str	x0, [sp, #72]
  446104:	ldr	x0, [sp, #72]
  446108:	cmp	x0, #0x0
  44610c:	b.eq	44619c <wcrtomb@plt+0x4148c>  // b.none
  446110:	ldr	w0, [sp, #60]
  446114:	and	w0, w0, #0x10
  446118:	cmp	w0, #0x0
  44611c:	b.ne	44619c <wcrtomb@plt+0x4148c>  // b.any
  446120:	ldr	x1, [sp, #72]
  446124:	ldr	x0, [sp, #24]
  446128:	bl	404870 <dgettext@plt>
  44612c:	str	x0, [sp, #72]
  446130:	ldr	w0, [sp, #60]
  446134:	and	w0, w0, #0x1
  446138:	cmp	w0, #0x0
  44613c:	b.eq	446164 <wcrtomb@plt+0x41454>  // b.none
  446140:	ldr	x0, [sp, #40]
  446144:	ldr	w0, [x0, #8]
  446148:	ldr	x3, [sp, #72]
  44614c:	mov	w2, w0
  446150:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446154:	add	x1, x0, #0xf48
  446158:	ldr	x0, [sp, #64]
  44615c:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  446160:	b	44619c <wcrtomb@plt+0x4148c>
  446164:	ldr	x0, [sp, #72]
  446168:	bl	4040b0 <strlen@plt>
  44616c:	add	x0, x0, #0x6
  446170:	mov	x1, x0
  446174:	ldr	x0, [sp, #64]
  446178:	bl	445418 <wcrtomb@plt+0x40708>
  44617c:	ldr	x0, [sp, #40]
  446180:	ldr	w0, [x0, #8]
  446184:	ldr	x3, [sp, #72]
  446188:	mov	w2, w0
  44618c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446190:	add	x1, x0, #0xf58
  446194:	ldr	x0, [sp, #64]
  446198:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  44619c:	mov	w0, #0x0                   	// #0
  4461a0:	ldp	x29, x30, [sp], #80
  4461a4:	ret
  4461a8:	stp	x29, x30, [sp, #-80]!
  4461ac:	mov	x29, sp
  4461b0:	str	x0, [sp, #40]
  4461b4:	str	x1, [sp, #32]
  4461b8:	str	x2, [sp, #24]
  4461bc:	str	x3, [sp, #16]
  4461c0:	ldr	x0, [sp, #16]
  4461c4:	str	x0, [sp, #64]
  4461c8:	ldr	x0, [sp, #40]
  4461cc:	ldr	x0, [x0, #16]
  4461d0:	str	x0, [sp, #72]
  4461d4:	ldr	x0, [sp, #40]
  4461d8:	ldr	w1, [x0, #24]
  4461dc:	ldr	x0, [sp, #32]
  4461e0:	ldr	w0, [x0, #24]
  4461e4:	orr	w0, w1, w0
  4461e8:	str	w0, [sp, #60]
  4461ec:	ldr	x0, [sp, #72]
  4461f0:	cmp	x0, #0x0
  4461f4:	b.ne	446204 <wcrtomb@plt+0x414f4>  // b.any
  4461f8:	ldr	x0, [sp, #32]
  4461fc:	ldr	x0, [x0, #16]
  446200:	str	x0, [sp, #72]
  446204:	ldr	w0, [sp, #60]
  446208:	and	w0, w0, #0x10
  44620c:	cmp	w0, #0x0
  446210:	b.ne	4462a4 <wcrtomb@plt+0x41594>  // b.any
  446214:	ldr	x0, [sp, #72]
  446218:	cmp	x0, #0x0
  44621c:	b.eq	446288 <wcrtomb@plt+0x41578>  // b.none
  446220:	ldr	x1, [sp, #72]
  446224:	ldr	x0, [sp, #24]
  446228:	bl	404870 <dgettext@plt>
  44622c:	str	x0, [sp, #72]
  446230:	ldr	w0, [sp, #60]
  446234:	and	w0, w0, #0x1
  446238:	cmp	w0, #0x0
  44623c:	b.eq	446264 <wcrtomb@plt+0x41554>  // b.none
  446240:	ldr	x0, [sp, #40]
  446244:	ldr	x0, [x0]
  446248:	ldr	x3, [sp, #72]
  44624c:	mov	x2, x0
  446250:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446254:	add	x1, x0, #0xf68
  446258:	ldr	x0, [sp, #64]
  44625c:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  446260:	b	4462a4 <wcrtomb@plt+0x41594>
  446264:	ldr	x0, [sp, #40]
  446268:	ldr	x0, [x0]
  44626c:	ldr	x3, [sp, #72]
  446270:	mov	x2, x0
  446274:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446278:	add	x1, x0, #0xf78
  44627c:	ldr	x0, [sp, #64]
  446280:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  446284:	b	4462a4 <wcrtomb@plt+0x41594>
  446288:	ldr	x0, [sp, #40]
  44628c:	ldr	x0, [x0]
  446290:	mov	x2, x0
  446294:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446298:	add	x1, x0, #0xf88
  44629c:	ldr	x0, [sp, #64]
  4462a0:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  4462a4:	mov	w0, #0x0                   	// #0
  4462a8:	ldp	x29, x30, [sp], #80
  4462ac:	ret
  4462b0:	stp	x29, x30, [sp, #-128]!
  4462b4:	mov	x29, sp
  4462b8:	str	x0, [x29, #24]
  4462bc:	str	x1, [x29, #16]
  4462c0:	ldr	x0, [x29, #24]
  4462c4:	ldr	w0, [x0, #8]
  4462c8:	cmp	w0, #0x0
  4462cc:	b.eq	446530 <wcrtomb@plt+0x41820>  // b.none
  4462d0:	ldr	x0, [x29, #24]
  4462d4:	ldr	x0, [x0, #16]
  4462d8:	bl	4040b0 <strlen@plt>
  4462dc:	add	x0, x0, #0x1
  4462e0:	add	x0, x0, #0xf
  4462e4:	lsr	x0, x0, #4
  4462e8:	lsl	x0, x0, #4
  4462ec:	sub	sp, sp, x0
  4462f0:	mov	x0, sp
  4462f4:	add	x0, x0, #0xf
  4462f8:	lsr	x0, x0, #4
  4462fc:	lsl	x0, x0, #4
  446300:	str	x0, [x29, #104]
  446304:	ldr	x0, [x29, #104]
  446308:	str	x0, [x29, #32]
  44630c:	ldr	x0, [x29, #24]
  446310:	ldr	x0, [x0]
  446314:	str	x0, [x29, #112]
  446318:	ldr	x0, [x29, #24]
  44631c:	ldr	w0, [x0, #8]
  446320:	str	w0, [x29, #124]
  446324:	b	446368 <wcrtomb@plt+0x41658>
  446328:	ldr	x0, [x29, #112]
  44632c:	ldr	x0, [x0, #40]
  446330:	ldr	x0, [x0, #48]
  446334:	add	x1, x29, #0x20
  446338:	mov	x3, x1
  44633c:	mov	x2, x0
  446340:	adrp	x0, 446000 <wcrtomb@plt+0x412f0>
  446344:	add	x1, x0, #0x1c
  446348:	ldr	x0, [x29, #112]
  44634c:	bl	44467c <wcrtomb@plt+0x3f96c>
  446350:	ldr	x0, [x29, #112]
  446354:	add	x0, x0, #0x38
  446358:	str	x0, [x29, #112]
  44635c:	ldr	w0, [x29, #124]
  446360:	sub	w0, w0, #0x1
  446364:	str	w0, [x29, #124]
  446368:	ldr	w0, [x29, #124]
  44636c:	cmp	w0, #0x0
  446370:	b.ne	446328 <wcrtomb@plt+0x41618>  // b.any
  446374:	ldr	x0, [x29, #32]
  446378:	ldr	x1, [x29, #104]
  44637c:	cmp	x1, x0
  446380:	b.cs	4463a8 <wcrtomb@plt+0x41698>  // b.hs, b.nlast
  446384:	ldr	x0, [x29, #32]
  446388:	add	x1, x0, #0x1
  44638c:	str	x1, [x29, #32]
  446390:	strb	wzr, [x0]
  446394:	ldr	x2, [x29, #104]
  446398:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  44639c:	add	x1, x0, #0xf90
  4463a0:	ldr	x0, [x29, #16]
  4463a4:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  4463a8:	ldr	x0, [x29, #24]
  4463ac:	ldr	x0, [x0]
  4463b0:	str	x0, [x29, #112]
  4463b4:	ldr	x0, [x29, #24]
  4463b8:	ldr	w0, [x0, #8]
  4463bc:	str	w0, [x29, #124]
  4463c0:	b	446400 <wcrtomb@plt+0x416f0>
  4463c4:	ldr	x0, [x29, #112]
  4463c8:	ldr	x0, [x0, #40]
  4463cc:	ldr	x0, [x0, #48]
  4463d0:	ldr	x3, [x29, #16]
  4463d4:	mov	x2, x0
  4463d8:	adrp	x0, 446000 <wcrtomb@plt+0x412f0>
  4463dc:	add	x1, x0, #0xa8
  4463e0:	ldr	x0, [x29, #112]
  4463e4:	bl	44467c <wcrtomb@plt+0x3f96c>
  4463e8:	ldr	x0, [x29, #112]
  4463ec:	add	x0, x0, #0x38
  4463f0:	str	x0, [x29, #112]
  4463f4:	ldr	w0, [x29, #124]
  4463f8:	sub	w0, w0, #0x1
  4463fc:	str	w0, [x29, #124]
  446400:	ldr	w0, [x29, #124]
  446404:	cmp	w0, #0x0
  446408:	b.ne	4463c4 <wcrtomb@plt+0x416b4>  // b.any
  44640c:	ldr	x0, [x29, #24]
  446410:	ldr	x0, [x0]
  446414:	str	x0, [x29, #112]
  446418:	ldr	x0, [x29, #24]
  44641c:	ldr	w0, [x0, #8]
  446420:	str	w0, [x29, #124]
  446424:	b	446524 <wcrtomb@plt+0x41814>
  446428:	ldr	x0, [x29, #112]
  44642c:	ldr	x0, [x0, #40]
  446430:	ldr	x0, [x0, #48]
  446434:	ldr	x1, [x29, #112]
  446438:	str	x1, [x29, #96]
  44643c:	adrp	x1, 446000 <wcrtomb@plt+0x412f0>
  446440:	add	x1, x1, #0x1a8
  446444:	str	x1, [x29, #88]
  446448:	str	x0, [x29, #80]
  44644c:	ldr	x0, [x29, #16]
  446450:	str	x0, [x29, #72]
  446454:	str	wzr, [x29, #68]
  446458:	ldr	x0, [x29, #96]
  44645c:	ldr	x0, [x0]
  446460:	str	x0, [x29, #56]
  446464:	ldr	x0, [x29, #56]
  446468:	str	x0, [x29, #48]
  44646c:	ldr	x0, [x29, #96]
  446470:	ldr	w0, [x0, #8]
  446474:	str	w0, [x29, #44]
  446478:	b	4464f0 <wcrtomb@plt+0x417e0>
  44647c:	ldr	x0, [x29, #48]
  446480:	ldr	x0, [x0]
  446484:	cmp	x0, #0x0
  446488:	b.eq	4464d8 <wcrtomb@plt+0x417c8>  // b.none
  44648c:	ldr	x0, [x29, #48]
  446490:	ldr	w0, [x0, #24]
  446494:	and	w0, w0, #0x4
  446498:	cmp	w0, #0x0
  44649c:	b.ne	4464a8 <wcrtomb@plt+0x41798>  // b.any
  4464a0:	ldr	x0, [x29, #48]
  4464a4:	str	x0, [x29, #56]
  4464a8:	ldr	x0, [x29, #48]
  4464ac:	ldr	w0, [x0, #24]
  4464b0:	and	w0, w0, #0x2
  4464b4:	cmp	w0, #0x0
  4464b8:	b.ne	4464d8 <wcrtomb@plt+0x417c8>  // b.any
  4464bc:	ldr	x4, [x29, #88]
  4464c0:	ldr	x3, [x29, #72]
  4464c4:	ldr	x2, [x29, #80]
  4464c8:	ldr	x1, [x29, #56]
  4464cc:	ldr	x0, [x29, #48]
  4464d0:	blr	x4
  4464d4:	str	w0, [x29, #68]
  4464d8:	ldr	x0, [x29, #48]
  4464dc:	add	x0, x0, #0x30
  4464e0:	str	x0, [x29, #48]
  4464e4:	ldr	w0, [x29, #44]
  4464e8:	sub	w0, w0, #0x1
  4464ec:	str	w0, [x29, #44]
  4464f0:	ldr	w0, [x29, #44]
  4464f4:	cmp	w0, #0x0
  4464f8:	b.eq	446508 <wcrtomb@plt+0x417f8>  // b.none
  4464fc:	ldr	w0, [x29, #68]
  446500:	cmp	w0, #0x0
  446504:	b.eq	44647c <wcrtomb@plt+0x4176c>  // b.none
  446508:	nop
  44650c:	ldr	x0, [x29, #112]
  446510:	add	x0, x0, #0x38
  446514:	str	x0, [x29, #112]
  446518:	ldr	w0, [x29, #124]
  44651c:	sub	w0, w0, #0x1
  446520:	str	w0, [x29, #124]
  446524:	ldr	w0, [x29, #124]
  446528:	cmp	w0, #0x0
  44652c:	b.ne	446428 <wcrtomb@plt+0x41718>  // b.any
  446530:	nop
  446534:	mov	sp, x29
  446538:	ldp	x29, x30, [sp], #128
  44653c:	ret
  446540:	stp	x29, x30, [sp, #-64]!
  446544:	mov	x29, sp
  446548:	str	x0, [sp, #24]
  44654c:	str	x1, [sp, #16]
  446550:	ldr	x0, [sp, #24]
  446554:	ldr	x0, [x0, #32]
  446558:	str	x0, [sp, #56]
  44655c:	ldr	x1, [sp, #16]
  446560:	ldr	x0, [sp, #24]
  446564:	bl	444214 <wcrtomb@plt+0x3f504>
  446568:	str	x0, [sp, #48]
  44656c:	ldr	x0, [sp, #56]
  446570:	cmp	x0, #0x0
  446574:	b.eq	44661c <wcrtomb@plt+0x4190c>  // b.none
  446578:	b	44660c <wcrtomb@plt+0x418fc>
  44657c:	ldr	x0, [sp, #56]
  446580:	ldr	w0, [x0, #24]
  446584:	cmp	w0, #0x0
  446588:	b.ne	44659c <wcrtomb@plt+0x4188c>  // b.any
  44658c:	ldr	x0, [sp, #56]
  446590:	ldr	x0, [x0, #16]
  446594:	cmp	x0, #0x0
  446598:	b.eq	4465dc <wcrtomb@plt+0x418cc>  // b.none
  44659c:	ldr	x0, [sp, #56]
  4465a0:	ldr	w6, [x0, #24]
  4465a4:	ldr	x0, [sp, #56]
  4465a8:	ldr	x2, [x0, #16]
  4465ac:	ldr	x0, [sp, #24]
  4465b0:	ldr	x0, [x0, #32]
  4465b4:	ldr	x1, [sp, #56]
  4465b8:	sub	x0, x1, x0
  4465bc:	asr	x0, x0, #5
  4465c0:	ldr	x5, [sp, #24]
  4465c4:	ldr	x4, [sp, #16]
  4465c8:	mov	w3, w0
  4465cc:	mov	w1, w6
  4465d0:	ldr	x0, [sp, #48]
  4465d4:	bl	444538 <wcrtomb@plt+0x3f828>
  4465d8:	b	4465e0 <wcrtomb@plt+0x418d0>
  4465dc:	ldr	x0, [sp, #16]
  4465e0:	str	x0, [sp, #40]
  4465e4:	ldr	x0, [sp, #56]
  4465e8:	ldr	x0, [x0]
  4465ec:	ldr	x1, [sp, #40]
  4465f0:	bl	446540 <wcrtomb@plt+0x41830>
  4465f4:	mov	x1, x0
  4465f8:	ldr	x0, [sp, #48]
  4465fc:	bl	445004 <wcrtomb@plt+0x402f4>
  446600:	ldr	x0, [sp, #56]
  446604:	add	x0, x0, #0x20
  446608:	str	x0, [sp, #56]
  44660c:	ldr	x0, [sp, #56]
  446610:	ldr	x0, [x0]
  446614:	cmp	x0, #0x0
  446618:	b.ne	44657c <wcrtomb@plt+0x4186c>  // b.any
  44661c:	ldr	x0, [sp, #48]
  446620:	ldp	x29, x30, [sp], #64
  446624:	ret
  446628:	stp	x29, x30, [sp, #-48]!
  44662c:	mov	x29, sp
  446630:	str	x0, [sp, #24]
  446634:	str	xzr, [sp, #40]
  446638:	ldr	x0, [sp, #24]
  44663c:	ldr	x0, [x0, #32]
  446640:	str	x0, [sp, #32]
  446644:	ldr	x0, [sp, #24]
  446648:	ldr	x0, [x0, #16]
  44664c:	cmp	x0, #0x0
  446650:	b.eq	446678 <wcrtomb@plt+0x41968>  // b.none
  446654:	ldr	x0, [sp, #24]
  446658:	ldr	x0, [x0, #16]
  44665c:	mov	w1, #0xa                   	// #10
  446660:	bl	404930 <strchr@plt>
  446664:	cmp	x0, #0x0
  446668:	b.eq	446678 <wcrtomb@plt+0x41968>  // b.none
  44666c:	ldr	x0, [sp, #40]
  446670:	add	x0, x0, #0x1
  446674:	str	x0, [sp, #40]
  446678:	ldr	x0, [sp, #32]
  44667c:	cmp	x0, #0x0
  446680:	b.eq	4466bc <wcrtomb@plt+0x419ac>  // b.none
  446684:	b	4466ac <wcrtomb@plt+0x4199c>
  446688:	ldr	x0, [sp, #32]
  44668c:	add	x1, x0, #0x20
  446690:	str	x1, [sp, #32]
  446694:	ldr	x0, [x0]
  446698:	bl	446628 <wcrtomb@plt+0x41918>
  44669c:	mov	x1, x0
  4466a0:	ldr	x0, [sp, #40]
  4466a4:	add	x0, x0, x1
  4466a8:	str	x0, [sp, #40]
  4466ac:	ldr	x0, [sp, #32]
  4466b0:	ldr	x0, [x0]
  4466b4:	cmp	x0, #0x0
  4466b8:	b.ne	446688 <wcrtomb@plt+0x41978>  // b.any
  4466bc:	ldr	x0, [sp, #40]
  4466c0:	ldp	x29, x30, [sp], #48
  4466c4:	ret
  4466c8:	stp	x29, x30, [sp, #-128]!
  4466cc:	mov	x29, sp
  4466d0:	str	x0, [sp, #56]
  4466d4:	str	x1, [sp, #48]
  4466d8:	str	x2, [sp, #40]
  4466dc:	str	w3, [sp, #36]
  4466e0:	str	x4, [sp, #24]
  4466e4:	ldr	x0, [sp, #40]
  4466e8:	ldr	x0, [x0]
  4466ec:	str	x0, [sp, #80]
  4466f0:	str	wzr, [sp, #124]
  4466f4:	ldr	x0, [sp, #56]
  4466f8:	ldr	x0, [x0, #32]
  4466fc:	str	x0, [sp, #112]
  446700:	ldr	x0, [sp, #56]
  446704:	ldr	x2, [x0, #48]
  446708:	ldr	x0, [sp, #56]
  44670c:	ldr	x0, [x0, #16]
  446710:	mov	x1, x0
  446714:	mov	x0, x2
  446718:	bl	404870 <dgettext@plt>
  44671c:	str	x0, [sp, #72]
  446720:	str	xzr, [sp, #104]
  446724:	ldr	x3, [sp, #48]
  446728:	ldr	x2, [sp, #56]
  44672c:	mov	w1, #0x6                   	// #6
  446730:	movk	w1, #0x200, lsl #16
  446734:	ldr	x0, [sp, #72]
  446738:	bl	44550c <wcrtomb@plt+0x407fc>
  44673c:	str	x0, [sp, #64]
  446740:	ldr	x0, [sp, #64]
  446744:	cmp	x0, #0x0
  446748:	b.eq	446810 <wcrtomb@plt+0x41b00>  // b.none
  44674c:	ldr	x0, [sp, #64]
  446750:	str	x0, [sp, #96]
  446754:	mov	w1, #0xa                   	// #10
  446758:	ldr	x0, [sp, #96]
  44675c:	bl	404a80 <strchrnul@plt>
  446760:	str	x0, [sp, #104]
  446764:	ldr	x0, [sp, #104]
  446768:	ldrb	w0, [x0]
  44676c:	cmp	w0, #0x0
  446770:	b.eq	4467d8 <wcrtomb@plt+0x41ac8>  // b.none
  446774:	mov	w0, #0x1                   	// #1
  446778:	str	w0, [sp, #124]
  44677c:	str	wzr, [sp, #92]
  446780:	b	4467ac <wcrtomb@plt+0x41a9c>
  446784:	ldr	x0, [sp, #104]
  446788:	add	x0, x0, #0x1
  44678c:	str	x0, [sp, #96]
  446790:	mov	w1, #0xa                   	// #10
  446794:	ldr	x0, [sp, #96]
  446798:	bl	404a80 <strchrnul@plt>
  44679c:	str	x0, [sp, #104]
  4467a0:	ldr	w0, [sp, #92]
  4467a4:	add	w0, w0, #0x1
  4467a8:	str	w0, [sp, #92]
  4467ac:	ldr	x0, [sp, #80]
  4467b0:	ldrb	w0, [x0]
  4467b4:	mov	w1, w0
  4467b8:	ldr	w0, [sp, #92]
  4467bc:	cmp	w0, w1
  4467c0:	b.lt	446784 <wcrtomb@plt+0x41a74>  // b.tstop
  4467c4:	ldr	x0, [sp, #40]
  4467c8:	ldr	x0, [x0]
  4467cc:	add	x1, x0, #0x1
  4467d0:	ldr	x0, [sp, #40]
  4467d4:	str	x1, [x0]
  4467d8:	ldr	x0, [sp, #104]
  4467dc:	add	x1, x0, #0x1
  4467e0:	ldr	x0, [sp, #96]
  4467e4:	sub	x0, x1, x0
  4467e8:	mov	x1, x0
  4467ec:	ldr	x0, [sp, #24]
  4467f0:	bl	445418 <wcrtomb@plt+0x40708>
  4467f4:	ldr	x1, [sp, #104]
  4467f8:	ldr	x0, [sp, #96]
  4467fc:	sub	x0, x1, x0
  446800:	mov	x2, x0
  446804:	ldr	x1, [sp, #96]
  446808:	ldr	x0, [sp, #24]
  44680c:	bl	4761e8 <_obstack_memory_used@@Base+0x190a8>
  446810:	ldr	x0, [sp, #64]
  446814:	cmp	x0, #0x0
  446818:	b.eq	446834 <wcrtomb@plt+0x41b24>  // b.none
  44681c:	ldr	x1, [sp, #64]
  446820:	ldr	x0, [sp, #72]
  446824:	cmp	x1, x0
  446828:	b.eq	446834 <wcrtomb@plt+0x41b24>  // b.none
  44682c:	ldr	x0, [sp, #64]
  446830:	bl	404880 <free@plt>
  446834:	ldr	x0, [sp, #112]
  446838:	cmp	x0, #0x0
  44683c:	b.eq	446888 <wcrtomb@plt+0x41b78>  // b.none
  446840:	b	446878 <wcrtomb@plt+0x41b68>
  446844:	ldr	x0, [sp, #112]
  446848:	add	x1, x0, #0x20
  44684c:	str	x1, [sp, #112]
  446850:	ldr	x0, [x0]
  446854:	ldr	x4, [sp, #24]
  446858:	ldr	w3, [sp, #36]
  44685c:	ldr	x2, [sp, #40]
  446860:	ldr	x1, [sp, #48]
  446864:	bl	4466c8 <wcrtomb@plt+0x419b8>
  446868:	cmp	w0, #0x0
  44686c:	cset	w0, eq  // eq = none
  446870:	and	w0, w0, #0xff
  446874:	str	w0, [sp, #36]
  446878:	ldr	x0, [sp, #112]
  44687c:	ldr	x0, [x0]
  446880:	cmp	x0, #0x0
  446884:	b.ne	446844 <wcrtomb@plt+0x41b34>  // b.any
  446888:	ldr	w0, [sp, #36]
  44688c:	cmp	w0, #0x0
  446890:	b.eq	4468e8 <wcrtomb@plt+0x41bd8>  // b.none
  446894:	ldr	w0, [sp, #124]
  446898:	cmp	w0, #0x0
  44689c:	b.eq	4468e8 <wcrtomb@plt+0x41bd8>  // b.none
  4468a0:	ldr	x0, [sp, #104]
  4468a4:	ldrb	w0, [x0]
  4468a8:	cmp	w0, #0x0
  4468ac:	b.eq	4468d0 <wcrtomb@plt+0x41bc0>  // b.none
  4468b0:	ldr	x0, [sp, #80]
  4468b4:	ldrb	w0, [x0]
  4468b8:	add	w0, w0, #0x1
  4468bc:	and	w1, w0, #0xff
  4468c0:	ldr	x0, [sp, #80]
  4468c4:	strb	w1, [x0]
  4468c8:	str	wzr, [sp, #36]
  4468cc:	b	4468e8 <wcrtomb@plt+0x41bd8>
  4468d0:	ldr	x0, [sp, #80]
  4468d4:	ldrb	w0, [x0]
  4468d8:	cmp	w0, #0x0
  4468dc:	b.eq	4468e8 <wcrtomb@plt+0x41bd8>  // b.none
  4468e0:	ldr	x0, [sp, #80]
  4468e4:	strb	wzr, [x0]
  4468e8:	ldr	w0, [sp, #36]
  4468ec:	cmp	w0, #0x0
  4468f0:	cset	w0, eq  // eq = none
  4468f4:	and	w0, w0, #0xff
  4468f8:	ldp	x29, x30, [sp], #128
  4468fc:	ret
  446900:	stp	x29, x30, [sp, #-128]!
  446904:	mov	x29, sp
  446908:	str	x0, [sp, #56]
  44690c:	str	x1, [sp, #48]
  446910:	str	w2, [sp, #44]
  446914:	str	w3, [sp, #40]
  446918:	str	w4, [sp, #36]
  44691c:	str	x5, [sp, #24]
  446920:	str	xzr, [sp, #104]
  446924:	str	wzr, [sp, #100]
  446928:	str	xzr, [sp, #88]
  44692c:	ldr	x0, [sp, #56]
  446930:	ldr	x2, [x0, #48]
  446934:	ldr	x0, [sp, #56]
  446938:	ldr	x0, [x0, #24]
  44693c:	mov	x1, x0
  446940:	mov	x0, x2
  446944:	bl	404870 <dgettext@plt>
  446948:	str	x0, [sp, #72]
  44694c:	ldr	x0, [sp, #56]
  446950:	ldr	x0, [x0, #32]
  446954:	str	x0, [sp, #80]
  446958:	ldr	x0, [sp, #72]
  44695c:	cmp	x0, #0x0
  446960:	b.eq	4469dc <wcrtomb@plt+0x41ccc>  // b.none
  446964:	mov	w1, #0xb                   	// #11
  446968:	ldr	x0, [sp, #72]
  44696c:	bl	404930 <strchr@plt>
  446970:	str	x0, [sp, #64]
  446974:	ldr	w0, [sp, #44]
  446978:	cmp	w0, #0x0
  44697c:	b.eq	4469a0 <wcrtomb@plt+0x41c90>  // b.none
  446980:	ldr	x0, [sp, #64]
  446984:	cmp	x0, #0x0
  446988:	b.eq	446998 <wcrtomb@plt+0x41c88>  // b.none
  44698c:	ldr	x0, [sp, #64]
  446990:	add	x0, x0, #0x1
  446994:	b	4469a4 <wcrtomb@plt+0x41c94>
  446998:	mov	x0, #0x0                   	// #0
  44699c:	b	4469a4 <wcrtomb@plt+0x41c94>
  4469a0:	ldr	x0, [sp, #72]
  4469a4:	str	x0, [sp, #112]
  4469a8:	ldr	w0, [sp, #44]
  4469ac:	cmp	w0, #0x0
  4469b0:	b.ne	4469d0 <wcrtomb@plt+0x41cc0>  // b.any
  4469b4:	ldr	x0, [sp, #64]
  4469b8:	cmp	x0, #0x0
  4469bc:	b.eq	4469d0 <wcrtomb@plt+0x41cc0>  // b.none
  4469c0:	ldr	x1, [sp, #64]
  4469c4:	ldr	x0, [sp, #72]
  4469c8:	sub	x0, x1, x0
  4469cc:	b	4469d4 <wcrtomb@plt+0x41cc4>
  4469d0:	mov	x0, #0x0                   	// #0
  4469d4:	str	x0, [sp, #88]
  4469d8:	b	4469e0 <wcrtomb@plt+0x41cd0>
  4469dc:	str	xzr, [sp, #112]
  4469e0:	ldr	x0, [sp, #56]
  4469e4:	ldr	x0, [x0, #40]
  4469e8:	cmp	x0, #0x0
  4469ec:	b.eq	446a58 <wcrtomb@plt+0x41d48>  // b.none
  4469f0:	ldr	x0, [sp, #88]
  4469f4:	cmp	x0, #0x0
  4469f8:	b.eq	446a0c <wcrtomb@plt+0x41cfc>  // b.none
  4469fc:	ldr	x1, [sp, #88]
  446a00:	ldr	x0, [sp, #112]
  446a04:	bl	404910 <strndup@plt>
  446a08:	str	x0, [sp, #112]
  446a0c:	ldr	x1, [sp, #48]
  446a10:	ldr	x0, [sp, #56]
  446a14:	bl	44906c <argp_parse@@Base+0x1fc>
  446a18:	str	x0, [sp, #104]
  446a1c:	ldr	x0, [sp, #56]
  446a20:	ldr	x3, [x0, #40]
  446a24:	ldr	w0, [sp, #44]
  446a28:	cmp	w0, #0x0
  446a2c:	b.eq	446a3c <wcrtomb@plt+0x41d2c>  // b.none
  446a30:	mov	w0, #0x2                   	// #2
  446a34:	movk	w0, #0x200, lsl #16
  446a38:	b	446a44 <wcrtomb@plt+0x41d34>
  446a3c:	mov	w0, #0x1                   	// #1
  446a40:	movk	w0, #0x200, lsl #16
  446a44:	ldr	x2, [sp, #104]
  446a48:	ldr	x1, [sp, #112]
  446a4c:	blr	x3
  446a50:	str	x0, [sp, #120]
  446a54:	b	446a60 <wcrtomb@plt+0x41d50>
  446a58:	ldr	x0, [sp, #112]
  446a5c:	str	x0, [sp, #120]
  446a60:	ldr	x0, [sp, #120]
  446a64:	cmp	x0, #0x0
  446a68:	b.eq	446af0 <wcrtomb@plt+0x41de0>  // b.none
  446a6c:	ldr	w0, [sp, #40]
  446a70:	cmp	w0, #0x0
  446a74:	b.eq	446a84 <wcrtomb@plt+0x41d74>  // b.none
  446a78:	mov	w1, #0xa                   	// #10
  446a7c:	ldr	x0, [sp, #24]
  446a80:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  446a84:	ldr	x1, [sp, #120]
  446a88:	ldr	x0, [sp, #112]
  446a8c:	cmp	x1, x0
  446a90:	b.ne	446ab4 <wcrtomb@plt+0x41da4>  // b.any
  446a94:	ldr	x0, [sp, #88]
  446a98:	cmp	x0, #0x0
  446a9c:	b.eq	446ab4 <wcrtomb@plt+0x41da4>  // b.none
  446aa0:	ldr	x2, [sp, #88]
  446aa4:	ldr	x1, [sp, #112]
  446aa8:	ldr	x0, [sp, #24]
  446aac:	bl	4761e8 <_obstack_memory_used@@Base+0x190a8>
  446ab0:	b	446ac0 <wcrtomb@plt+0x41db0>
  446ab4:	ldr	x1, [sp, #120]
  446ab8:	ldr	x0, [sp, #24]
  446abc:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  446ac0:	ldr	x0, [sp, #24]
  446ac4:	bl	476474 <_obstack_memory_used@@Base+0x19334>
  446ac8:	mov	x1, x0
  446acc:	ldr	x0, [sp, #24]
  446ad0:	ldr	x0, [x0, #8]
  446ad4:	cmp	x1, x0
  446ad8:	b.ls	446ae8 <wcrtomb@plt+0x41dd8>  // b.plast
  446adc:	mov	w1, #0xa                   	// #10
  446ae0:	ldr	x0, [sp, #24]
  446ae4:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  446ae8:	mov	w0, #0x1                   	// #1
  446aec:	str	w0, [sp, #100]
  446af0:	ldr	x0, [sp, #120]
  446af4:	cmp	x0, #0x0
  446af8:	b.eq	446b14 <wcrtomb@plt+0x41e04>  // b.none
  446afc:	ldr	x1, [sp, #120]
  446b00:	ldr	x0, [sp, #112]
  446b04:	cmp	x1, x0
  446b08:	b.eq	446b14 <wcrtomb@plt+0x41e04>  // b.none
  446b0c:	ldr	x0, [sp, #120]
  446b10:	bl	404880 <free@plt>
  446b14:	ldr	x0, [sp, #112]
  446b18:	cmp	x0, #0x0
  446b1c:	b.eq	446b44 <wcrtomb@plt+0x41e34>  // b.none
  446b20:	ldr	x0, [sp, #88]
  446b24:	cmp	x0, #0x0
  446b28:	b.eq	446b44 <wcrtomb@plt+0x41e34>  // b.none
  446b2c:	ldr	x0, [sp, #56]
  446b30:	ldr	x0, [x0, #40]
  446b34:	cmp	x0, #0x0
  446b38:	b.eq	446b44 <wcrtomb@plt+0x41e34>  // b.none
  446b3c:	ldr	x0, [sp, #112]
  446b40:	bl	404880 <free@plt>
  446b44:	ldr	w0, [sp, #44]
  446b48:	cmp	w0, #0x0
  446b4c:	b.eq	446bf4 <wcrtomb@plt+0x41ee4>  // b.none
  446b50:	ldr	x0, [sp, #56]
  446b54:	ldr	x0, [x0, #40]
  446b58:	cmp	x0, #0x0
  446b5c:	b.eq	446bf4 <wcrtomb@plt+0x41ee4>  // b.none
  446b60:	ldr	x0, [sp, #56]
  446b64:	ldr	x3, [x0, #40]
  446b68:	ldr	x2, [sp, #104]
  446b6c:	mov	x1, #0x0                   	// #0
  446b70:	mov	w0, #0x4                   	// #4
  446b74:	movk	w0, #0x200, lsl #16
  446b78:	blr	x3
  446b7c:	str	x0, [sp, #120]
  446b80:	ldr	x0, [sp, #120]
  446b84:	cmp	x0, #0x0
  446b88:	b.eq	446bf4 <wcrtomb@plt+0x41ee4>  // b.none
  446b8c:	ldr	w0, [sp, #100]
  446b90:	cmp	w0, #0x0
  446b94:	b.ne	446ba4 <wcrtomb@plt+0x41e94>  // b.any
  446b98:	ldr	w0, [sp, #40]
  446b9c:	cmp	w0, #0x0
  446ba0:	b.eq	446bb0 <wcrtomb@plt+0x41ea0>  // b.none
  446ba4:	mov	w1, #0xa                   	// #10
  446ba8:	ldr	x0, [sp, #24]
  446bac:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  446bb0:	ldr	x1, [sp, #120]
  446bb4:	ldr	x0, [sp, #24]
  446bb8:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  446bbc:	ldr	x0, [sp, #120]
  446bc0:	bl	404880 <free@plt>
  446bc4:	ldr	x0, [sp, #24]
  446bc8:	bl	476474 <_obstack_memory_used@@Base+0x19334>
  446bcc:	mov	x1, x0
  446bd0:	ldr	x0, [sp, #24]
  446bd4:	ldr	x0, [x0, #8]
  446bd8:	cmp	x1, x0
  446bdc:	b.ls	446bec <wcrtomb@plt+0x41edc>  // b.plast
  446be0:	mov	w1, #0xa                   	// #10
  446be4:	ldr	x0, [sp, #24]
  446be8:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  446bec:	mov	w0, #0x1                   	// #1
  446bf0:	str	w0, [sp, #100]
  446bf4:	ldr	x0, [sp, #80]
  446bf8:	cmp	x0, #0x0
  446bfc:	b.eq	446c8c <wcrtomb@plt+0x41f7c>  // b.none
  446c00:	b	446c64 <wcrtomb@plt+0x41f54>
  446c04:	ldr	x0, [sp, #80]
  446c08:	add	x1, x0, #0x20
  446c0c:	str	x1, [sp, #80]
  446c10:	ldr	x6, [x0]
  446c14:	ldr	w0, [sp, #100]
  446c18:	cmp	w0, #0x0
  446c1c:	b.ne	446c2c <wcrtomb@plt+0x41f1c>  // b.any
  446c20:	ldr	w0, [sp, #40]
  446c24:	cmp	w0, #0x0
  446c28:	b.eq	446c34 <wcrtomb@plt+0x41f24>  // b.none
  446c2c:	mov	w0, #0x1                   	// #1
  446c30:	b	446c38 <wcrtomb@plt+0x41f28>
  446c34:	mov	w0, #0x0                   	// #0
  446c38:	ldr	x5, [sp, #24]
  446c3c:	ldr	w4, [sp, #36]
  446c40:	mov	w3, w0
  446c44:	ldr	w2, [sp, #44]
  446c48:	ldr	x1, [sp, #48]
  446c4c:	mov	x0, x6
  446c50:	bl	446900 <wcrtomb@plt+0x41bf0>
  446c54:	mov	w1, w0
  446c58:	ldr	w0, [sp, #100]
  446c5c:	orr	w0, w0, w1
  446c60:	str	w0, [sp, #100]
  446c64:	ldr	x0, [sp, #80]
  446c68:	ldr	x0, [x0]
  446c6c:	cmp	x0, #0x0
  446c70:	b.eq	446c8c <wcrtomb@plt+0x41f7c>  // b.none
  446c74:	ldr	w0, [sp, #36]
  446c78:	cmp	w0, #0x0
  446c7c:	b.eq	446c04 <wcrtomb@plt+0x41ef4>  // b.none
  446c80:	ldr	w0, [sp, #100]
  446c84:	cmp	w0, #0x0
  446c88:	b.eq	446c04 <wcrtomb@plt+0x41ef4>  // b.none
  446c8c:	ldr	w0, [sp, #100]
  446c90:	ldp	x29, x30, [sp], #128
  446c94:	ret
  446c98:	stp	x29, x30, [sp, #-144]!
  446c9c:	mov	x29, sp
  446ca0:	str	x0, [x29, #56]
  446ca4:	str	x1, [x29, #48]
  446ca8:	str	x2, [x29, #40]
  446cac:	str	w3, [x29, #36]
  446cb0:	str	x4, [x29, #24]
  446cb4:	str	wzr, [x29, #140]
  446cb8:	str	xzr, [x29, #128]
  446cbc:	ldr	x0, [x29, #40]
  446cc0:	cmp	x0, #0x0
  446cc4:	b.eq	447104 <wcrtomb@plt+0x423f4>  // b.none
  446cc8:	ldr	x0, [x29, #40]
  446ccc:	bl	404140 <flockfile@plt>
  446cd0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  446cd4:	add	x0, x0, #0x3f0
  446cd8:	ldr	w0, [x0, #36]
  446cdc:	cmp	w0, #0x0
  446ce0:	b.ne	446cec <wcrtomb@plt+0x41fdc>  // b.any
  446ce4:	ldr	x0, [x29, #48]
  446ce8:	bl	443ca8 <wcrtomb@plt+0x3ef98>
  446cec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  446cf0:	add	x0, x0, #0x3f0
  446cf4:	ldr	w0, [x0, #32]
  446cf8:	sxtw	x0, w0
  446cfc:	mov	x3, #0x0                   	// #0
  446d00:	mov	x2, x0
  446d04:	mov	x1, #0x0                   	// #0
  446d08:	ldr	x0, [x29, #40]
  446d0c:	bl	4754e8 <_obstack_memory_used@@Base+0x183a8>
  446d10:	str	x0, [x29, #112]
  446d14:	ldr	x0, [x29, #112]
  446d18:	cmp	x0, #0x0
  446d1c:	b.ne	446d2c <wcrtomb@plt+0x4201c>  // b.any
  446d20:	ldr	x0, [x29, #40]
  446d24:	bl	404420 <funlockfile@plt>
  446d28:	b	447108 <wcrtomb@plt+0x423f8>
  446d2c:	ldr	w1, [x29, #36]
  446d30:	mov	w0, #0xb                   	// #11
  446d34:	and	w0, w1, w0
  446d38:	cmp	w0, #0x0
  446d3c:	b.eq	446d80 <wcrtomb@plt+0x42070>  // b.none
  446d40:	mov	x1, #0x0                   	// #0
  446d44:	ldr	x0, [x29, #56]
  446d48:	bl	446540 <wcrtomb@plt+0x41830>
  446d4c:	str	x0, [x29, #128]
  446d50:	mov	w2, #0xffffffff            	// #-1
  446d54:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446d58:	add	x1, x0, #0xf98
  446d5c:	ldr	x0, [x29, #128]
  446d60:	bl	444960 <wcrtomb@plt+0x3fc50>
  446d64:	mov	w2, #0xffffffff            	// #-1
  446d68:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446d6c:	add	x1, x0, #0xfa0
  446d70:	ldr	x0, [x29, #128]
  446d74:	bl	444960 <wcrtomb@plt+0x3fc50>
  446d78:	ldr	x0, [x29, #128]
  446d7c:	bl	444f68 <wcrtomb@plt+0x40258>
  446d80:	ldr	w0, [x29, #36]
  446d84:	and	w0, w0, #0x3
  446d88:	cmp	w0, #0x0
  446d8c:	b.eq	446f58 <wcrtomb@plt+0x42248>  // b.none
  446d90:	mov	w0, #0x1                   	// #1
  446d94:	str	w0, [x29, #124]
  446d98:	ldr	x0, [x29, #56]
  446d9c:	bl	446628 <wcrtomb@plt+0x41918>
  446da0:	str	x0, [x29, #104]
  446da4:	ldr	x0, [x29, #104]
  446da8:	add	x0, x0, #0xf
  446dac:	lsr	x0, x0, #4
  446db0:	lsl	x0, x0, #4
  446db4:	sub	sp, sp, x0
  446db8:	mov	x0, sp
  446dbc:	add	x0, x0, #0xf
  446dc0:	lsr	x0, x0, #4
  446dc4:	lsl	x0, x0, #4
  446dc8:	str	x0, [x29, #96]
  446dcc:	ldr	x2, [x29, #104]
  446dd0:	mov	w1, #0x0                   	// #0
  446dd4:	ldr	x0, [x29, #96]
  446dd8:	bl	4044d0 <memset@plt>
  446ddc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  446de0:	add	x0, x0, #0x3f0
  446de4:	ldr	w0, [x0, #28]
  446de8:	sxtw	x0, w0
  446dec:	mov	x1, x0
  446df0:	ldr	x0, [x29, #112]
  446df4:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  446df8:	str	w0, [x29, #92]
  446dfc:	ldr	x0, [x29, #96]
  446e00:	str	x0, [x29, #72]
  446e04:	ldr	w0, [x29, #124]
  446e08:	cmp	w0, #0x0
  446e0c:	b.eq	446e44 <wcrtomb@plt+0x42134>  // b.none
  446e10:	ldr	x0, [x29, #56]
  446e14:	ldr	x2, [x0, #48]
  446e18:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446e1c:	add	x1, x0, #0xfa8
  446e20:	mov	x0, x2
  446e24:	bl	404870 <dgettext@plt>
  446e28:	ldr	x3, [x29, #24]
  446e2c:	mov	x2, x0
  446e30:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446e34:	add	x1, x0, #0xfb0
  446e38:	ldr	x0, [x29, #112]
  446e3c:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  446e40:	b	446e74 <wcrtomb@plt+0x42164>
  446e44:	ldr	x0, [x29, #56]
  446e48:	ldr	x2, [x0, #48]
  446e4c:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446e50:	add	x1, x0, #0xfb8
  446e54:	mov	x0, x2
  446e58:	bl	404870 <dgettext@plt>
  446e5c:	ldr	x3, [x29, #24]
  446e60:	mov	x2, x0
  446e64:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446e68:	add	x1, x0, #0xfb0
  446e6c:	ldr	x0, [x29, #112]
  446e70:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  446e74:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  446e78:	add	x0, x0, #0x3f0
  446e7c:	ldr	w0, [x0, #28]
  446e80:	sxtw	x0, w0
  446e84:	mov	x1, x0
  446e88:	ldr	x0, [x29, #112]
  446e8c:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  446e90:	str	w0, [x29, #88]
  446e94:	ldr	w0, [x29, #36]
  446e98:	and	w0, w0, #0x2
  446e9c:	cmp	w0, #0x0
  446ea0:	b.eq	446edc <wcrtomb@plt+0x421cc>  // b.none
  446ea4:	ldr	x0, [x29, #128]
  446ea8:	ldr	w0, [x0, #8]
  446eac:	cmp	w0, #0x0
  446eb0:	b.eq	446ef4 <wcrtomb@plt+0x421e4>  // b.none
  446eb4:	ldr	x0, [x29, #56]
  446eb8:	ldr	x2, [x0, #48]
  446ebc:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446ec0:	add	x1, x0, #0xfc0
  446ec4:	mov	x0, x2
  446ec8:	bl	404870 <dgettext@plt>
  446ecc:	mov	x1, x0
  446ed0:	ldr	x0, [x29, #112]
  446ed4:	bl	476270 <_obstack_memory_used@@Base+0x19130>
  446ed8:	b	446ef4 <wcrtomb@plt+0x421e4>
  446edc:	ldr	x1, [x29, #112]
  446ee0:	ldr	x0, [x29, #128]
  446ee4:	bl	4462b0 <wcrtomb@plt+0x415a0>
  446ee8:	ldr	w0, [x29, #36]
  446eec:	orr	w0, w0, #0x2
  446ef0:	str	w0, [x29, #36]
  446ef4:	add	x0, x29, #0x48
  446ef8:	ldr	x4, [x29, #112]
  446efc:	mov	w3, #0x1                   	// #1
  446f00:	mov	x2, x0
  446f04:	ldr	x1, [x29, #48]
  446f08:	ldr	x0, [x29, #56]
  446f0c:	bl	4466c8 <wcrtomb@plt+0x419b8>
  446f10:	str	w0, [x29, #84]
  446f14:	ldrsw	x0, [x29, #92]
  446f18:	mov	x1, x0
  446f1c:	ldr	x0, [x29, #112]
  446f20:	bl	476410 <_obstack_memory_used@@Base+0x192d0>
  446f24:	ldrsw	x0, [x29, #88]
  446f28:	mov	x1, x0
  446f2c:	ldr	x0, [x29, #112]
  446f30:	bl	476348 <_obstack_memory_used@@Base+0x19208>
  446f34:	mov	w1, #0xa                   	// #10
  446f38:	ldr	x0, [x29, #112]
  446f3c:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  446f40:	mov	w0, #0x1                   	// #1
  446f44:	str	w0, [x29, #140]
  446f48:	str	wzr, [x29, #124]
  446f4c:	ldr	w0, [x29, #84]
  446f50:	cmp	w0, #0x0
  446f54:	b.ne	446ddc <wcrtomb@plt+0x420cc>  // b.any
  446f58:	ldr	w0, [x29, #36]
  446f5c:	and	w0, w0, #0x10
  446f60:	cmp	w0, #0x0
  446f64:	b.eq	446f94 <wcrtomb@plt+0x42284>  // b.none
  446f68:	ldr	x5, [x29, #112]
  446f6c:	mov	w4, #0x1                   	// #1
  446f70:	mov	w3, #0x0                   	// #0
  446f74:	mov	w2, #0x0                   	// #0
  446f78:	ldr	x1, [x29, #48]
  446f7c:	ldr	x0, [x29, #56]
  446f80:	bl	446900 <wcrtomb@plt+0x41bf0>
  446f84:	mov	w1, w0
  446f88:	ldr	w0, [x29, #140]
  446f8c:	orr	w0, w0, w1
  446f90:	str	w0, [x29, #140]
  446f94:	ldr	w0, [x29, #36]
  446f98:	and	w0, w0, #0x4
  446f9c:	cmp	w0, #0x0
  446fa0:	b.eq	446fd8 <wcrtomb@plt+0x422c8>  // b.none
  446fa4:	ldr	x0, [x29, #56]
  446fa8:	ldr	x2, [x0, #48]
  446fac:	adrp	x0, 487000 <_obstack_memory_used@@Base+0x29ec0>
  446fb0:	add	x1, x0, #0xfd0
  446fb4:	mov	x0, x2
  446fb8:	bl	404870 <dgettext@plt>
  446fbc:	ldr	x3, [x29, #24]
  446fc0:	ldr	x2, [x29, #24]
  446fc4:	mov	x1, x0
  446fc8:	ldr	x0, [x29, #112]
  446fcc:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  446fd0:	mov	w0, #0x1                   	// #1
  446fd4:	str	w0, [x29, #140]
  446fd8:	ldr	w0, [x29, #36]
  446fdc:	and	w0, w0, #0x8
  446fe0:	cmp	w0, #0x0
  446fe4:	b.eq	447028 <wcrtomb@plt+0x42318>  // b.none
  446fe8:	ldr	x0, [x29, #128]
  446fec:	ldr	w0, [x0, #8]
  446ff0:	cmp	w0, #0x0
  446ff4:	b.eq	447028 <wcrtomb@plt+0x42318>  // b.none
  446ff8:	ldr	w0, [x29, #140]
  446ffc:	cmp	w0, #0x0
  447000:	b.eq	447010 <wcrtomb@plt+0x42300>  // b.none
  447004:	mov	w1, #0xa                   	// #10
  447008:	ldr	x0, [x29, #112]
  44700c:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  447010:	ldr	x2, [x29, #112]
  447014:	ldr	x1, [x29, #48]
  447018:	ldr	x0, [x29, #128]
  44701c:	bl	445eac <wcrtomb@plt+0x4119c>
  447020:	mov	w0, #0x1                   	// #1
  447024:	str	w0, [x29, #140]
  447028:	ldr	w0, [x29, #36]
  44702c:	and	w0, w0, #0x20
  447030:	cmp	w0, #0x0
  447034:	b.eq	447064 <wcrtomb@plt+0x42354>  // b.none
  447038:	ldr	x5, [x29, #112]
  44703c:	mov	w4, #0x0                   	// #0
  447040:	ldr	w3, [x29, #140]
  447044:	mov	w2, #0x1                   	// #1
  447048:	ldr	x1, [x29, #48]
  44704c:	ldr	x0, [x29, #56]
  447050:	bl	446900 <wcrtomb@plt+0x41bf0>
  447054:	mov	w1, w0
  447058:	ldr	w0, [x29, #140]
  44705c:	orr	w0, w0, w1
  447060:	str	w0, [x29, #140]
  447064:	ldr	w0, [x29, #36]
  447068:	and	w0, w0, #0x40
  44706c:	cmp	w0, #0x0
  447070:	b.eq	4470dc <wcrtomb@plt+0x423cc>  // b.none
  447074:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  447078:	add	x0, x0, #0x448
  44707c:	ldr	x0, [x0]
  447080:	cmp	x0, #0x0
  447084:	b.eq	4470dc <wcrtomb@plt+0x423cc>  // b.none
  447088:	ldr	w0, [x29, #140]
  44708c:	cmp	w0, #0x0
  447090:	b.eq	4470a0 <wcrtomb@plt+0x42390>  // b.none
  447094:	mov	w1, #0xa                   	// #10
  447098:	ldr	x0, [x29, #112]
  44709c:	bl	4762d8 <_obstack_memory_used@@Base+0x19198>
  4470a0:	ldr	x0, [x29, #56]
  4470a4:	ldr	x2, [x0, #48]
  4470a8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4470ac:	add	x1, x0, #0x8
  4470b0:	mov	x0, x2
  4470b4:	bl	404870 <dgettext@plt>
  4470b8:	mov	x1, x0
  4470bc:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4470c0:	add	x0, x0, #0x448
  4470c4:	ldr	x0, [x0]
  4470c8:	mov	x2, x0
  4470cc:	ldr	x0, [x29, #112]
  4470d0:	bl	4760ac <_obstack_memory_used@@Base+0x18f6c>
  4470d4:	mov	w0, #0x1                   	// #1
  4470d8:	str	w0, [x29, #140]
  4470dc:	ldr	x0, [x29, #40]
  4470e0:	bl	404420 <funlockfile@plt>
  4470e4:	ldr	x0, [x29, #128]
  4470e8:	cmp	x0, #0x0
  4470ec:	b.eq	4470f8 <wcrtomb@plt+0x423e8>  // b.none
  4470f0:	ldr	x0, [x29, #128]
  4470f4:	bl	4445fc <wcrtomb@plt+0x3f8ec>
  4470f8:	ldr	x0, [x29, #112]
  4470fc:	bl	4755bc <_obstack_memory_used@@Base+0x1847c>
  447100:	b	447108 <wcrtomb@plt+0x423f8>
  447104:	nop
  447108:	mov	sp, x29
  44710c:	ldp	x29, x30, [sp], #144
  447110:	ret

0000000000447114 <argp_help@@Base>:
  447114:	stp	x29, x30, [sp, #-48]!
  447118:	mov	x29, sp
  44711c:	str	x0, [sp, #40]
  447120:	str	x1, [sp, #32]
  447124:	str	w2, [sp, #28]
  447128:	str	x3, [sp, #16]
  44712c:	ldr	x4, [sp, #16]
  447130:	ldr	w3, [sp, #28]
  447134:	ldr	x2, [sp, #32]
  447138:	mov	x1, #0x0                   	// #0
  44713c:	ldr	x0, [sp, #40]
  447140:	bl	446c98 <wcrtomb@plt+0x41f88>
  447144:	nop
  447148:	ldp	x29, x30, [sp], #48
  44714c:	ret

0000000000447150 <argp_state_help@@Base>:
  447150:	stp	x29, x30, [sp, #-48]!
  447154:	mov	x29, sp
  447158:	str	x0, [sp, #40]
  44715c:	str	x1, [sp, #32]
  447160:	str	w2, [sp, #28]
  447164:	ldr	x0, [sp, #40]
  447168:	cmp	x0, #0x0
  44716c:	b.eq	447184 <argp_state_help@@Base+0x34>  // b.none
  447170:	ldr	x0, [sp, #40]
  447174:	ldr	w0, [x0, #28]
  447178:	and	w0, w0, #0x2
  44717c:	cmp	w0, #0x0
  447180:	b.ne	44726c <argp_state_help@@Base+0x11c>  // b.any
  447184:	ldr	x0, [sp, #32]
  447188:	cmp	x0, #0x0
  44718c:	b.eq	44726c <argp_state_help@@Base+0x11c>  // b.none
  447190:	ldr	x0, [sp, #40]
  447194:	cmp	x0, #0x0
  447198:	b.eq	4471bc <argp_state_help@@Base+0x6c>  // b.none
  44719c:	ldr	x0, [sp, #40]
  4471a0:	ldr	w0, [x0, #28]
  4471a4:	and	w0, w0, #0x40
  4471a8:	cmp	w0, #0x0
  4471ac:	b.eq	4471bc <argp_state_help@@Base+0x6c>  // b.none
  4471b0:	ldr	w0, [sp, #28]
  4471b4:	orr	w0, w0, #0x80
  4471b8:	str	w0, [sp, #28]
  4471bc:	ldr	x0, [sp, #40]
  4471c0:	cmp	x0, #0x0
  4471c4:	b.eq	4471d4 <argp_state_help@@Base+0x84>  // b.none
  4471c8:	ldr	x0, [sp, #40]
  4471cc:	ldr	x5, [x0]
  4471d0:	b	4471d8 <argp_state_help@@Base+0x88>
  4471d4:	mov	x5, #0x0                   	// #0
  4471d8:	ldr	x0, [sp, #40]
  4471dc:	cmp	x0, #0x0
  4471e0:	b.eq	4471f0 <argp_state_help@@Base+0xa0>  // b.none
  4471e4:	ldr	x0, [sp, #40]
  4471e8:	ldr	x0, [x0, #64]
  4471ec:	b	4471fc <argp_state_help@@Base+0xac>
  4471f0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4471f4:	add	x0, x0, #0x4b8
  4471f8:	ldr	x0, [x0]
  4471fc:	mov	x4, x0
  447200:	ldr	w3, [sp, #28]
  447204:	ldr	x2, [sp, #32]
  447208:	ldr	x1, [sp, #40]
  44720c:	mov	x0, x5
  447210:	bl	446c98 <wcrtomb@plt+0x41f88>
  447214:	ldr	x0, [sp, #40]
  447218:	cmp	x0, #0x0
  44721c:	b.eq	447234 <argp_state_help@@Base+0xe4>  // b.none
  447220:	ldr	x0, [sp, #40]
  447224:	ldr	w0, [x0, #28]
  447228:	and	w0, w0, #0x20
  44722c:	cmp	w0, #0x0
  447230:	b.ne	44726c <argp_state_help@@Base+0x11c>  // b.any
  447234:	ldr	w0, [sp, #28]
  447238:	and	w0, w0, #0x100
  44723c:	cmp	w0, #0x0
  447240:	b.eq	447254 <argp_state_help@@Base+0x104>  // b.none
  447244:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  447248:	add	x0, x0, #0x480
  44724c:	ldr	w0, [x0]
  447250:	bl	4040d0 <exit@plt>
  447254:	ldr	w0, [sp, #28]
  447258:	and	w0, w0, #0x200
  44725c:	cmp	w0, #0x0
  447260:	b.eq	44726c <argp_state_help@@Base+0x11c>  // b.none
  447264:	mov	w0, #0x0                   	// #0
  447268:	bl	4040d0 <exit@plt>
  44726c:	nop
  447270:	ldp	x29, x30, [sp], #48
  447274:	ret

0000000000447278 <argp_error@@Base>:
  447278:	stp	x29, x30, [sp, #-288]!
  44727c:	mov	x29, sp
  447280:	str	x0, [sp, #56]
  447284:	str	x1, [sp, #48]
  447288:	str	x2, [sp, #240]
  44728c:	str	x3, [sp, #248]
  447290:	str	x4, [sp, #256]
  447294:	str	x5, [sp, #264]
  447298:	str	x6, [sp, #272]
  44729c:	str	x7, [sp, #280]
  4472a0:	str	q0, [sp, #112]
  4472a4:	str	q1, [sp, #128]
  4472a8:	str	q2, [sp, #144]
  4472ac:	str	q3, [sp, #160]
  4472b0:	str	q4, [sp, #176]
  4472b4:	str	q5, [sp, #192]
  4472b8:	str	q6, [sp, #208]
  4472bc:	str	q7, [sp, #224]
  4472c0:	ldr	x0, [sp, #56]
  4472c4:	cmp	x0, #0x0
  4472c8:	b.eq	4472e0 <argp_error@@Base+0x68>  // b.none
  4472cc:	ldr	x0, [sp, #56]
  4472d0:	ldr	w0, [x0, #28]
  4472d4:	and	w0, w0, #0x2
  4472d8:	cmp	w0, #0x0
  4472dc:	b.ne	4473d8 <argp_error@@Base+0x160>  // b.any
  4472e0:	ldr	x0, [sp, #56]
  4472e4:	cmp	x0, #0x0
  4472e8:	b.eq	4472f8 <argp_error@@Base+0x80>  // b.none
  4472ec:	ldr	x0, [sp, #56]
  4472f0:	ldr	x0, [x0, #72]
  4472f4:	b	447304 <argp_error@@Base+0x8c>
  4472f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4472fc:	add	x0, x0, #0x498
  447300:	ldr	x0, [x0]
  447304:	str	x0, [sp, #104]
  447308:	ldr	x0, [sp, #104]
  44730c:	cmp	x0, #0x0
  447310:	b.eq	4473d8 <argp_error@@Base+0x160>  // b.none
  447314:	ldr	x0, [sp, #104]
  447318:	bl	404140 <flockfile@plt>
  44731c:	add	x0, sp, #0x120
  447320:	str	x0, [sp, #72]
  447324:	add	x0, sp, #0x120
  447328:	str	x0, [sp, #80]
  44732c:	add	x0, sp, #0xf0
  447330:	str	x0, [sp, #88]
  447334:	mov	w0, #0xffffffd0            	// #-48
  447338:	str	w0, [sp, #96]
  44733c:	mov	w0, #0xffffff80            	// #-128
  447340:	str	w0, [sp, #100]
  447344:	ldr	x0, [sp, #56]
  447348:	cmp	x0, #0x0
  44734c:	b.eq	44735c <argp_error@@Base+0xe4>  // b.none
  447350:	ldr	x0, [sp, #56]
  447354:	ldr	x0, [x0, #64]
  447358:	b	447368 <argp_error@@Base+0xf0>
  44735c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  447360:	add	x0, x0, #0x4b8
  447364:	ldr	x0, [x0]
  447368:	ldr	x1, [sp, #104]
  44736c:	bl	404ab0 <fputs_unlocked@plt>
  447370:	ldr	x1, [sp, #104]
  447374:	mov	w0, #0x3a                  	// #58
  447378:	bl	404330 <putc_unlocked@plt>
  44737c:	ldr	x1, [sp, #104]
  447380:	mov	w0, #0x20                  	// #32
  447384:	bl	404330 <putc_unlocked@plt>
  447388:	add	x2, sp, #0x10
  44738c:	add	x3, sp, #0x48
  447390:	ldp	x0, x1, [x3]
  447394:	stp	x0, x1, [x2]
  447398:	ldp	x0, x1, [x3, #16]
  44739c:	stp	x0, x1, [x2, #16]
  4473a0:	add	x0, sp, #0x10
  4473a4:	mov	x2, x0
  4473a8:	ldr	x1, [sp, #48]
  4473ac:	ldr	x0, [sp, #104]
  4473b0:	bl	404b80 <vfprintf@plt>
  4473b4:	ldr	x1, [sp, #104]
  4473b8:	mov	w0, #0xa                   	// #10
  4473bc:	bl	404330 <putc_unlocked@plt>
  4473c0:	mov	w2, #0x104                 	// #260
  4473c4:	ldr	x1, [sp, #104]
  4473c8:	ldr	x0, [sp, #56]
  4473cc:	bl	447150 <argp_state_help@@Base>
  4473d0:	ldr	x0, [sp, #104]
  4473d4:	bl	404420 <funlockfile@plt>
  4473d8:	nop
  4473dc:	ldp	x29, x30, [sp], #288
  4473e0:	ret

00000000004473e4 <argp_failure@@Base>:
  4473e4:	stp	x29, x30, [sp, #-464]!
  4473e8:	mov	x29, sp
  4473ec:	str	x0, [sp, #72]
  4473f0:	str	w1, [sp, #68]
  4473f4:	str	w2, [sp, #64]
  4473f8:	str	x3, [sp, #56]
  4473fc:	str	x4, [sp, #432]
  447400:	str	x5, [sp, #440]
  447404:	str	x6, [sp, #448]
  447408:	str	x7, [sp, #456]
  44740c:	str	q0, [sp, #304]
  447410:	str	q1, [sp, #320]
  447414:	str	q2, [sp, #336]
  447418:	str	q3, [sp, #352]
  44741c:	str	q4, [sp, #368]
  447420:	str	q5, [sp, #384]
  447424:	str	q6, [sp, #400]
  447428:	str	q7, [sp, #416]
  44742c:	ldr	x0, [sp, #72]
  447430:	cmp	x0, #0x0
  447434:	b.eq	44744c <argp_failure@@Base+0x68>  // b.none
  447438:	ldr	x0, [sp, #72]
  44743c:	ldr	w0, [x0, #28]
  447440:	and	w0, w0, #0x2
  447444:	cmp	w0, #0x0
  447448:	b.ne	447604 <argp_failure@@Base+0x220>  // b.any
  44744c:	ldr	x0, [sp, #72]
  447450:	cmp	x0, #0x0
  447454:	b.eq	447464 <argp_failure@@Base+0x80>  // b.none
  447458:	ldr	x0, [sp, #72]
  44745c:	ldr	x0, [x0, #72]
  447460:	b	447470 <argp_failure@@Base+0x8c>
  447464:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  447468:	add	x0, x0, #0x498
  44746c:	ldr	x0, [x0]
  447470:	str	x0, [sp, #288]
  447474:	ldr	x0, [sp, #288]
  447478:	cmp	x0, #0x0
  44747c:	b.eq	447604 <argp_failure@@Base+0x220>  // b.none
  447480:	ldr	x0, [sp, #288]
  447484:	bl	404140 <flockfile@plt>
  447488:	ldr	x0, [sp, #72]
  44748c:	cmp	x0, #0x0
  447490:	b.eq	4474a0 <argp_failure@@Base+0xbc>  // b.none
  447494:	ldr	x0, [sp, #72]
  447498:	ldr	x0, [x0, #64]
  44749c:	b	4474ac <argp_failure@@Base+0xc8>
  4474a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4474a4:	add	x0, x0, #0x4b8
  4474a8:	ldr	x0, [x0]
  4474ac:	ldr	x1, [sp, #288]
  4474b0:	bl	404ab0 <fputs_unlocked@plt>
  4474b4:	ldr	x0, [sp, #56]
  4474b8:	cmp	x0, #0x0
  4474bc:	b.eq	44752c <argp_failure@@Base+0x148>  // b.none
  4474c0:	add	x0, sp, #0x1d0
  4474c4:	str	x0, [sp, #88]
  4474c8:	add	x0, sp, #0x1d0
  4474cc:	str	x0, [sp, #96]
  4474d0:	add	x0, sp, #0x1b0
  4474d4:	str	x0, [sp, #104]
  4474d8:	mov	w0, #0xffffffe0            	// #-32
  4474dc:	str	w0, [sp, #112]
  4474e0:	mov	w0, #0xffffff80            	// #-128
  4474e4:	str	w0, [sp, #116]
  4474e8:	ldr	x1, [sp, #288]
  4474ec:	mov	w0, #0x3a                  	// #58
  4474f0:	bl	404330 <putc_unlocked@plt>
  4474f4:	ldr	x1, [sp, #288]
  4474f8:	mov	w0, #0x20                  	// #32
  4474fc:	bl	404330 <putc_unlocked@plt>
  447500:	add	x2, sp, #0x10
  447504:	add	x3, sp, #0x58
  447508:	ldp	x0, x1, [x3]
  44750c:	stp	x0, x1, [x2]
  447510:	ldp	x0, x1, [x3, #16]
  447514:	stp	x0, x1, [x2, #16]
  447518:	add	x0, sp, #0x10
  44751c:	mov	x2, x0
  447520:	ldr	x1, [sp, #56]
  447524:	ldr	x0, [sp, #288]
  447528:	bl	404b80 <vfprintf@plt>
  44752c:	ldr	w0, [sp, #64]
  447530:	cmp	w0, #0x0
  447534:	b.eq	4475bc <argp_failure@@Base+0x1d8>  // b.none
  447538:	str	xzr, [sp, #296]
  44753c:	ldr	x1, [sp, #288]
  447540:	mov	w0, #0x3a                  	// #58
  447544:	bl	404330 <putc_unlocked@plt>
  447548:	ldr	x1, [sp, #288]
  44754c:	mov	w0, #0x20                  	// #32
  447550:	bl	404330 <putc_unlocked@plt>
  447554:	add	x0, sp, #0x58
  447558:	mov	x2, #0xc8                  	// #200
  44755c:	mov	x1, x0
  447560:	ldr	w0, [sp, #64]
  447564:	bl	404550 <strerror_r@plt>
  447568:	str	x0, [sp, #296]
  44756c:	ldr	x0, [sp, #296]
  447570:	cmp	x0, #0x0
  447574:	b.ne	4475b0 <argp_failure@@Base+0x1cc>  // b.any
  447578:	ldr	w0, [sp, #64]
  44757c:	bl	404650 <strerror@plt>
  447580:	str	x0, [sp, #296]
  447584:	ldr	x0, [sp, #296]
  447588:	cmp	x0, #0x0
  44758c:	b.ne	4475b0 <argp_failure@@Base+0x1cc>  // b.any
  447590:	ldr	x0, [sp, #72]
  447594:	ldr	x0, [x0]
  447598:	ldr	x2, [x0, #48]
  44759c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4475a0:	add	x1, x0, #0x20
  4475a4:	mov	x0, x2
  4475a8:	bl	404870 <dgettext@plt>
  4475ac:	str	x0, [sp, #296]
  4475b0:	ldr	x1, [sp, #288]
  4475b4:	ldr	x0, [sp, #296]
  4475b8:	bl	404ab0 <fputs_unlocked@plt>
  4475bc:	ldr	x1, [sp, #288]
  4475c0:	mov	w0, #0xa                   	// #10
  4475c4:	bl	404330 <putc_unlocked@plt>
  4475c8:	ldr	x0, [sp, #288]
  4475cc:	bl	404420 <funlockfile@plt>
  4475d0:	ldr	w0, [sp, #68]
  4475d4:	cmp	w0, #0x0
  4475d8:	b.eq	447604 <argp_failure@@Base+0x220>  // b.none
  4475dc:	ldr	x0, [sp, #72]
  4475e0:	cmp	x0, #0x0
  4475e4:	b.eq	4475fc <argp_failure@@Base+0x218>  // b.none
  4475e8:	ldr	x0, [sp, #72]
  4475ec:	ldr	w0, [x0, #28]
  4475f0:	and	w0, w0, #0x20
  4475f4:	cmp	w0, #0x0
  4475f8:	b.ne	447604 <argp_failure@@Base+0x220>  // b.any
  4475fc:	ldr	w0, [sp, #68]
  447600:	bl	4040d0 <exit@plt>
  447604:	nop
  447608:	ldp	x29, x30, [sp], #464
  44760c:	ret
  447610:	stp	x29, x30, [sp, #-48]!
  447614:	mov	x29, sp
  447618:	str	w0, [sp, #44]
  44761c:	str	x1, [sp, #32]
  447620:	str	x2, [sp, #24]
  447624:	ldr	w0, [sp, #44]
  447628:	cmp	w0, #0x3f
  44762c:	b.eq	447670 <argp_failure@@Base+0x28c>  // b.none
  447630:	ldr	w0, [sp, #44]
  447634:	cmp	w0, #0x3f
  447638:	b.gt	44776c <argp_failure@@Base+0x388>
  44763c:	ldr	w0, [sp, #44]
  447640:	cmn	w0, #0x2
  447644:	b.eq	4476a8 <argp_failure@@Base+0x2c4>  // b.none
  447648:	ldr	w0, [sp, #44]
  44764c:	cmn	w0, #0x2
  447650:	b.gt	44776c <argp_failure@@Base+0x388>
  447654:	ldr	w0, [sp, #44]
  447658:	cmn	w0, #0x4
  44765c:	b.eq	447708 <argp_failure@@Base+0x324>  // b.none
  447660:	ldr	w0, [sp, #44]
  447664:	cmn	w0, #0x3
  447668:	b.eq	44768c <argp_failure@@Base+0x2a8>  // b.none
  44766c:	b	44776c <argp_failure@@Base+0x388>
  447670:	ldr	x0, [sp, #24]
  447674:	ldr	x0, [x0, #80]
  447678:	mov	w2, #0x27a                 	// #634
  44767c:	mov	x1, x0
  447680:	ldr	x0, [sp, #24]
  447684:	bl	447150 <argp_state_help@@Base>
  447688:	b	447778 <argp_failure@@Base+0x394>
  44768c:	ldr	x0, [sp, #24]
  447690:	ldr	x0, [x0, #80]
  447694:	mov	w2, #0x201                 	// #513
  447698:	mov	x1, x0
  44769c:	ldr	x0, [sp, #24]
  4476a0:	bl	447150 <argp_state_help@@Base>
  4476a4:	b	447778 <argp_failure@@Base+0x394>
  4476a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4476ac:	add	x0, x0, #0x490
  4476b0:	ldr	x1, [sp, #32]
  4476b4:	str	x1, [x0]
  4476b8:	ldr	x0, [sp, #32]
  4476bc:	bl	44a0e0 <argp_usage@@Base+0xff4>
  4476c0:	mov	x1, x0
  4476c4:	ldr	x0, [sp, #24]
  4476c8:	str	x1, [x0, #64]
  4476cc:	ldr	x0, [sp, #24]
  4476d0:	ldr	x1, [x0, #64]
  4476d4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4476d8:	add	x0, x0, #0x4b8
  4476dc:	str	x1, [x0]
  4476e0:	ldr	x0, [sp, #24]
  4476e4:	ldr	w0, [x0, #28]
  4476e8:	and	w0, w0, #0x3
  4476ec:	cmp	w0, #0x1
  4476f0:	b.ne	447774 <argp_failure@@Base+0x390>  // b.any
  4476f4:	ldr	x0, [sp, #24]
  4476f8:	ldr	x0, [x0, #16]
  4476fc:	ldr	x1, [sp, #32]
  447700:	str	x1, [x0]
  447704:	b	447774 <argp_failure@@Base+0x390>
  447708:	ldr	x0, [sp, #32]
  44770c:	cmp	x0, #0x0
  447710:	b.eq	44771c <argp_failure@@Base+0x338>  // b.none
  447714:	ldr	x0, [sp, #32]
  447718:	b	447724 <argp_failure@@Base+0x340>
  44771c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  447720:	add	x0, x0, #0x1f8
  447724:	bl	4043a0 <atoi@plt>
  447728:	mov	w1, w0
  44772c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  447730:	add	x0, x0, #0xdd0
  447734:	str	w1, [x0]
  447738:	b	447744 <argp_failure@@Base+0x360>
  44773c:	mov	w0, #0x1                   	// #1
  447740:	bl	404520 <sleep@plt>
  447744:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  447748:	add	x0, x0, #0xdd0
  44774c:	ldr	w0, [x0]
  447750:	sub	w2, w0, #0x1
  447754:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  447758:	add	x1, x1, #0xdd0
  44775c:	str	w2, [x1]
  447760:	cmp	w0, #0x0
  447764:	b.gt	44773c <argp_failure@@Base+0x358>
  447768:	b	447778 <argp_failure@@Base+0x394>
  44776c:	mov	w0, #0x7                   	// #7
  447770:	b	44777c <argp_failure@@Base+0x398>
  447774:	nop
  447778:	mov	w0, #0x0                   	// #0
  44777c:	ldp	x29, x30, [sp], #48
  447780:	ret
  447784:	stp	x29, x30, [sp, #-48]!
  447788:	mov	x29, sp
  44778c:	str	w0, [sp, #44]
  447790:	str	x1, [sp, #32]
  447794:	str	x2, [sp, #24]
  447798:	ldr	w0, [sp, #44]
  44779c:	cmp	w0, #0x56
  4477a0:	b.ne	447864 <argp_failure@@Base+0x480>  // b.any
  4477a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4477a8:	add	x0, x0, #0xdd8
  4477ac:	ldr	x0, [x0]
  4477b0:	cmp	x0, #0x0
  4477b4:	b.eq	4477d8 <argp_failure@@Base+0x3f4>  // b.none
  4477b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4477bc:	add	x0, x0, #0xdd8
  4477c0:	ldr	x2, [x0]
  4477c4:	ldr	x0, [sp, #24]
  4477c8:	ldr	x0, [x0, #80]
  4477cc:	ldr	x1, [sp, #24]
  4477d0:	blr	x2
  4477d4:	b	447848 <argp_failure@@Base+0x464>
  4477d8:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4477dc:	add	x0, x0, #0x438
  4477e0:	ldr	x0, [x0]
  4477e4:	cmp	x0, #0x0
  4477e8:	b.eq	447818 <argp_failure@@Base+0x434>  // b.none
  4477ec:	ldr	x0, [sp, #24]
  4477f0:	ldr	x3, [x0, #80]
  4477f4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4477f8:	add	x0, x0, #0x438
  4477fc:	ldr	x0, [x0]
  447800:	mov	x2, x0
  447804:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  447808:	add	x1, x0, #0x2c0
  44780c:	mov	x0, x3
  447810:	bl	404c90 <fprintf@plt>
  447814:	b	447848 <argp_failure@@Base+0x464>
  447818:	ldr	x0, [sp, #24]
  44781c:	ldr	x0, [x0]
  447820:	ldr	x2, [x0, #48]
  447824:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  447828:	add	x1, x0, #0x2c8
  44782c:	mov	x0, x2
  447830:	bl	404870 <dgettext@plt>
  447834:	mov	x2, x0
  447838:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44783c:	add	x1, x0, #0x2f0
  447840:	ldr	x0, [sp, #24]
  447844:	bl	447278 <argp_error@@Base>
  447848:	ldr	x0, [sp, #24]
  44784c:	ldr	w0, [x0, #28]
  447850:	and	w0, w0, #0x20
  447854:	cmp	w0, #0x0
  447858:	b.ne	44786c <argp_failure@@Base+0x488>  // b.any
  44785c:	mov	w0, #0x0                   	// #0
  447860:	bl	4040d0 <exit@plt>
  447864:	mov	w0, #0x7                   	// #7
  447868:	b	447874 <argp_failure@@Base+0x490>
  44786c:	nop
  447870:	mov	w0, #0x0                   	// #0
  447874:	ldp	x29, x30, [sp], #48
  447878:	ret
  44787c:	stp	x29, x30, [sp, #-48]!
  447880:	mov	x29, sp
  447884:	str	x0, [sp, #24]
  447888:	str	x1, [sp, #16]
  44788c:	ldr	x0, [sp, #24]
  447890:	str	x0, [sp, #40]
  447894:	b	4478dc <argp_failure@@Base+0x4f8>
  447898:	ldr	x0, [sp, #16]
  44789c:	cmp	x0, #0x0
  4478a0:	b.eq	4478d0 <argp_failure@@Base+0x4ec>  // b.none
  4478a4:	ldr	x0, [sp, #40]
  4478a8:	ldr	x0, [x0]
  4478ac:	ldr	x1, [sp, #16]
  4478b0:	bl	4047c0 <strcmp@plt>
  4478b4:	cmp	w0, #0x0
  4478b8:	b.ne	4478d0 <argp_failure@@Base+0x4ec>  // b.any
  4478bc:	ldr	x1, [sp, #40]
  4478c0:	ldr	x0, [sp, #24]
  4478c4:	sub	x0, x1, x0
  4478c8:	asr	x0, x0, #5
  4478cc:	b	447910 <argp_failure@@Base+0x52c>
  4478d0:	ldr	x0, [sp, #40]
  4478d4:	add	x0, x0, #0x20
  4478d8:	str	x0, [sp, #40]
  4478dc:	ldr	x0, [sp, #40]
  4478e0:	ldr	x0, [x0]
  4478e4:	cmp	x0, #0x0
  4478e8:	b.ne	447898 <argp_failure@@Base+0x4b4>  // b.any
  4478ec:	ldr	x0, [sp, #16]
  4478f0:	cmp	x0, #0x0
  4478f4:	b.ne	44790c <argp_failure@@Base+0x528>  // b.any
  4478f8:	ldr	x1, [sp, #40]
  4478fc:	ldr	x0, [sp, #24]
  447900:	sub	x0, x1, x0
  447904:	asr	x0, x0, #5
  447908:	b	447910 <argp_failure@@Base+0x52c>
  44790c:	mov	w0, #0xffffffff            	// #-1
  447910:	ldp	x29, x30, [sp], #48
  447914:	ret
  447918:	stp	x29, x30, [sp, #-64]!
  44791c:	mov	x29, sp
  447920:	str	x0, [sp, #40]
  447924:	str	x1, [sp, #32]
  447928:	str	w2, [sp, #28]
  44792c:	str	x3, [sp, #16]
  447930:	ldr	x0, [sp, #40]
  447934:	ldr	x0, [x0]
  447938:	cmp	x0, #0x0
  44793c:	b.eq	4479b4 <argp_failure@@Base+0x5d0>  // b.none
  447940:	ldr	x0, [sp, #40]
  447944:	ldr	x1, [x0, #64]
  447948:	ldr	x0, [sp, #32]
  44794c:	str	x1, [x0, #56]
  447950:	ldr	x0, [sp, #40]
  447954:	ldr	x1, [x0, #48]
  447958:	ldr	x0, [sp, #32]
  44795c:	str	x1, [x0, #40]
  447960:	ldr	x0, [sp, #40]
  447964:	ldr	x1, [x0, #56]
  447968:	ldr	x0, [sp, #32]
  44796c:	str	x1, [x0, #48]
  447970:	ldr	x0, [sp, #40]
  447974:	ldr	w1, [x0, #24]
  447978:	ldr	x0, [sp, #32]
  44797c:	str	w1, [x0, #32]
  447980:	ldr	x0, [sp, #40]
  447984:	ldr	x3, [x0]
  447988:	ldr	x2, [sp, #32]
  44798c:	ldr	x1, [sp, #16]
  447990:	ldr	w0, [sp, #28]
  447994:	blr	x3
  447998:	str	w0, [sp, #60]
  44799c:	ldr	x0, [sp, #32]
  4479a0:	ldr	x1, [x0, #56]
  4479a4:	ldr	x0, [sp, #40]
  4479a8:	str	x1, [x0, #64]
  4479ac:	ldr	w0, [sp, #60]
  4479b0:	b	4479b8 <argp_failure@@Base+0x5d4>
  4479b4:	mov	w0, #0x7                   	// #7
  4479b8:	ldp	x29, x30, [sp], #64
  4479bc:	ret
  4479c0:	stp	x29, x30, [sp, #-96]!
  4479c4:	mov	x29, sp
  4479c8:	str	x0, [sp, #56]
  4479cc:	str	x1, [sp, #48]
  4479d0:	str	w2, [sp, #44]
  4479d4:	str	x3, [sp, #32]
  4479d8:	str	x4, [sp, #24]
  4479dc:	ldr	x0, [sp, #56]
  4479e0:	ldr	x0, [x0]
  4479e4:	str	x0, [sp, #88]
  4479e8:	ldr	x0, [sp, #56]
  4479ec:	ldr	x0, [x0, #32]
  4479f0:	str	x0, [sp, #80]
  4479f4:	ldr	x0, [sp, #88]
  4479f8:	cmp	x0, #0x0
  4479fc:	b.ne	447a10 <argp_failure@@Base+0x62c>  // b.any
  447a00:	ldr	x0, [sp, #56]
  447a04:	ldr	x0, [x0, #8]
  447a08:	cmp	x0, #0x0
  447a0c:	b.eq	447d1c <argp_failure@@Base+0x938>  // b.none
  447a10:	ldr	x0, [sp, #88]
  447a14:	cmp	x0, #0x0
  447a18:	b.eq	447c3c <argp_failure@@Base+0x858>  // b.none
  447a1c:	ldr	x0, [sp, #88]
  447a20:	str	x0, [sp, #72]
  447a24:	b	447c2c <argp_failure@@Base+0x848>
  447a28:	ldr	x0, [sp, #72]
  447a2c:	ldr	w0, [x0, #24]
  447a30:	and	w0, w0, #0x4
  447a34:	cmp	w0, #0x0
  447a38:	b.ne	447a44 <argp_failure@@Base+0x660>  // b.any
  447a3c:	ldr	x0, [sp, #72]
  447a40:	str	x0, [sp, #88]
  447a44:	ldr	x0, [sp, #88]
  447a48:	ldr	w0, [x0, #24]
  447a4c:	and	w0, w0, #0x8
  447a50:	cmp	w0, #0x0
  447a54:	b.ne	447c20 <argp_failure@@Base+0x83c>  // b.any
  447a58:	ldr	x0, [sp, #72]
  447a5c:	bl	449120 <argp_usage@@Base+0x34>
  447a60:	cmp	w0, #0x0
  447a64:	b.eq	447af4 <argp_failure@@Base+0x710>  // b.none
  447a68:	ldr	x0, [sp, #72]
  447a6c:	ldr	w3, [x0, #8]
  447a70:	ldr	x0, [sp, #24]
  447a74:	ldr	x0, [x0, #8]
  447a78:	add	x2, x0, #0x1
  447a7c:	ldr	x1, [sp, #24]
  447a80:	str	x2, [x1, #8]
  447a84:	and	w1, w3, #0xff
  447a88:	strb	w1, [x0]
  447a8c:	ldr	x0, [sp, #88]
  447a90:	ldr	x0, [x0, #16]
  447a94:	cmp	x0, #0x0
  447a98:	b.eq	447ae8 <argp_failure@@Base+0x704>  // b.none
  447a9c:	ldr	x0, [sp, #24]
  447aa0:	ldr	x0, [x0, #8]
  447aa4:	add	x2, x0, #0x1
  447aa8:	ldr	x1, [sp, #24]
  447aac:	str	x2, [x1, #8]
  447ab0:	mov	w1, #0x3a                  	// #58
  447ab4:	strb	w1, [x0]
  447ab8:	ldr	x0, [sp, #88]
  447abc:	ldr	w0, [x0, #24]
  447ac0:	and	w0, w0, #0x1
  447ac4:	cmp	w0, #0x0
  447ac8:	b.eq	447ae8 <argp_failure@@Base+0x704>  // b.none
  447acc:	ldr	x0, [sp, #24]
  447ad0:	ldr	x0, [x0, #8]
  447ad4:	add	x2, x0, #0x1
  447ad8:	ldr	x1, [sp, #24]
  447adc:	str	x2, [x1, #8]
  447ae0:	mov	w1, #0x3a                  	// #58
  447ae4:	strb	w1, [x0]
  447ae8:	ldr	x0, [sp, #24]
  447aec:	ldr	x0, [x0, #8]
  447af0:	strb	wzr, [x0]
  447af4:	ldr	x0, [sp, #72]
  447af8:	ldr	x0, [x0]
  447afc:	cmp	x0, #0x0
  447b00:	b.eq	447c20 <argp_failure@@Base+0x83c>  // b.none
  447b04:	ldr	x0, [sp, #24]
  447b08:	ldr	x0, [x0]
  447b0c:	ldr	x2, [x0, #16]
  447b10:	ldr	x0, [sp, #72]
  447b14:	ldr	x0, [x0]
  447b18:	mov	x1, x0
  447b1c:	mov	x0, x2
  447b20:	bl	44787c <argp_failure@@Base+0x498>
  447b24:	cmp	w0, #0x0
  447b28:	b.ge	447c20 <argp_failure@@Base+0x83c>  // b.tcont
  447b2c:	ldr	x0, [sp, #24]
  447b30:	ldr	x0, [x0, #16]
  447b34:	ldr	x1, [sp, #72]
  447b38:	ldr	x1, [x1]
  447b3c:	str	x1, [x0]
  447b40:	ldr	x0, [sp, #88]
  447b44:	ldr	x0, [x0, #16]
  447b48:	cmp	x0, #0x0
  447b4c:	b.eq	447b74 <argp_failure@@Base+0x790>  // b.none
  447b50:	ldr	x0, [sp, #88]
  447b54:	ldr	w0, [x0, #24]
  447b58:	and	w0, w0, #0x1
  447b5c:	cmp	w0, #0x0
  447b60:	b.eq	447b6c <argp_failure@@Base+0x788>  // b.none
  447b64:	mov	w0, #0x2                   	// #2
  447b68:	b	447b78 <argp_failure@@Base+0x794>
  447b6c:	mov	w0, #0x1                   	// #1
  447b70:	b	447b78 <argp_failure@@Base+0x794>
  447b74:	mov	w0, #0x0                   	// #0
  447b78:	ldr	x1, [sp, #24]
  447b7c:	ldr	x1, [x1, #16]
  447b80:	str	w0, [x1, #8]
  447b84:	ldr	x0, [sp, #24]
  447b88:	ldr	x0, [x0, #16]
  447b8c:	str	xzr, [x0, #16]
  447b90:	ldr	x0, [sp, #72]
  447b94:	ldr	w0, [x0, #8]
  447b98:	cmp	w0, #0x0
  447b9c:	b.eq	447bb0 <argp_failure@@Base+0x7cc>  // b.none
  447ba0:	ldr	x0, [sp, #72]
  447ba4:	ldr	w0, [x0, #8]
  447ba8:	and	w0, w0, #0xffffff
  447bac:	b	447bbc <argp_failure@@Base+0x7d8>
  447bb0:	ldr	x0, [sp, #88]
  447bb4:	ldr	w0, [x0, #8]
  447bb8:	and	w0, w0, #0xffffff
  447bbc:	ldr	x1, [sp, #24]
  447bc0:	ldr	x1, [x1]
  447bc4:	ldr	x1, [x1, #80]
  447bc8:	ldr	x2, [sp, #32]
  447bcc:	sub	x1, x2, x1
  447bd0:	asr	x2, x1, #3
  447bd4:	mov	x1, #0x8e39                	// #36409
  447bd8:	movk	x1, #0x38e3, lsl #16
  447bdc:	movk	x1, #0xe38e, lsl #32
  447be0:	movk	x1, #0x8e38, lsl #48
  447be4:	mul	x1, x2, x1
  447be8:	add	w1, w1, #0x1
  447bec:	lsl	w1, w1, #24
  447bf0:	add	w1, w0, w1
  447bf4:	ldr	x0, [sp, #24]
  447bf8:	ldr	x0, [x0, #16]
  447bfc:	str	w1, [x0, #24]
  447c00:	ldr	x0, [sp, #24]
  447c04:	ldr	x0, [x0, #16]
  447c08:	add	x1, x0, #0x20
  447c0c:	ldr	x0, [sp, #24]
  447c10:	str	x1, [x0, #16]
  447c14:	ldr	x0, [sp, #24]
  447c18:	ldr	x0, [x0, #16]
  447c1c:	str	xzr, [x0]
  447c20:	ldr	x0, [sp, #72]
  447c24:	add	x0, x0, #0x30
  447c28:	str	x0, [sp, #72]
  447c2c:	ldr	x0, [sp, #72]
  447c30:	bl	4491a4 <argp_usage@@Base+0xb8>
  447c34:	cmp	w0, #0x0
  447c38:	b.eq	447a28 <argp_failure@@Base+0x644>  // b.none
  447c3c:	ldr	x0, [sp, #56]
  447c40:	ldr	x1, [x0, #8]
  447c44:	ldr	x0, [sp, #32]
  447c48:	str	x1, [x0]
  447c4c:	ldr	x0, [sp, #32]
  447c50:	ldr	x1, [sp, #56]
  447c54:	str	x1, [x0, #8]
  447c58:	ldr	x0, [sp, #24]
  447c5c:	ldr	x1, [x0, #8]
  447c60:	ldr	x0, [sp, #32]
  447c64:	str	x1, [x0, #16]
  447c68:	ldr	x0, [sp, #32]
  447c6c:	str	wzr, [x0, #24]
  447c70:	ldr	x0, [sp, #32]
  447c74:	ldr	x1, [sp, #48]
  447c78:	str	x1, [x0, #32]
  447c7c:	ldr	x0, [sp, #32]
  447c80:	ldr	w1, [sp, #44]
  447c84:	str	w1, [x0, #40]
  447c88:	ldr	x0, [sp, #32]
  447c8c:	str	xzr, [x0, #48]
  447c90:	ldr	x0, [sp, #32]
  447c94:	str	xzr, [x0, #64]
  447c98:	ldr	x0, [sp, #32]
  447c9c:	str	xzr, [x0, #56]
  447ca0:	ldr	x0, [sp, #80]
  447ca4:	cmp	x0, #0x0
  447ca8:	b.eq	447d08 <argp_failure@@Base+0x924>  // b.none
  447cac:	str	wzr, [sp, #68]
  447cb0:	b	447cc0 <argp_failure@@Base+0x8dc>
  447cb4:	ldr	w0, [sp, #68]
  447cb8:	add	w0, w0, #0x1
  447cbc:	str	w0, [sp, #68]
  447cc0:	ldr	w0, [sp, #68]
  447cc4:	lsl	x0, x0, #5
  447cc8:	ldr	x1, [sp, #80]
  447ccc:	add	x0, x1, x0
  447cd0:	ldr	x0, [x0]
  447cd4:	cmp	x0, #0x0
  447cd8:	b.ne	447cb4 <argp_failure@@Base+0x8d0>  // b.any
  447cdc:	ldr	x0, [sp, #24]
  447ce0:	ldr	x1, [x0, #24]
  447ce4:	ldr	x0, [sp, #32]
  447ce8:	str	x1, [x0, #56]
  447cec:	ldr	x0, [sp, #24]
  447cf0:	ldr	x1, [x0, #24]
  447cf4:	ldr	w0, [sp, #68]
  447cf8:	lsl	x0, x0, #3
  447cfc:	add	x1, x1, x0
  447d00:	ldr	x0, [sp, #24]
  447d04:	str	x1, [x0, #24]
  447d08:	ldr	x0, [sp, #32]
  447d0c:	add	x1, x0, #0x48
  447d10:	str	x1, [sp, #32]
  447d14:	str	x0, [sp, #48]
  447d18:	b	447d20 <argp_failure@@Base+0x93c>
  447d1c:	str	xzr, [sp, #48]
  447d20:	ldr	x0, [sp, #80]
  447d24:	cmp	x0, #0x0
  447d28:	b.eq	447d7c <argp_failure@@Base+0x998>  // b.none
  447d2c:	str	wzr, [sp, #64]
  447d30:	b	447d6c <argp_failure@@Base+0x988>
  447d34:	ldr	x0, [sp, #80]
  447d38:	add	x1, x0, #0x20
  447d3c:	str	x1, [sp, #80]
  447d40:	ldr	x5, [x0]
  447d44:	ldr	w0, [sp, #64]
  447d48:	add	w1, w0, #0x1
  447d4c:	str	w1, [sp, #64]
  447d50:	ldr	x4, [sp, #24]
  447d54:	ldr	x3, [sp, #32]
  447d58:	mov	w2, w0
  447d5c:	ldr	x1, [sp, #48]
  447d60:	mov	x0, x5
  447d64:	bl	4479c0 <argp_failure@@Base+0x5dc>
  447d68:	str	x0, [sp, #32]
  447d6c:	ldr	x0, [sp, #80]
  447d70:	ldr	x0, [x0]
  447d74:	cmp	x0, #0x0
  447d78:	b.ne	447d34 <argp_failure@@Base+0x950>  // b.any
  447d7c:	ldr	x0, [sp, #32]
  447d80:	ldp	x29, x30, [sp], #96
  447d84:	ret
  447d88:	stp	x29, x30, [sp, #-80]!
  447d8c:	mov	x29, sp
  447d90:	str	x0, [sp, #40]
  447d94:	str	x1, [sp, #32]
  447d98:	str	w2, [sp, #28]
  447d9c:	ldr	x0, [sp, #40]
  447da0:	str	x0, [sp, #48]
  447da4:	ldr	x0, [sp, #40]
  447da8:	ldr	x0, [x0, #8]
  447dac:	str	x0, [sp, #56]
  447db0:	ldr	x0, [sp, #40]
  447db4:	ldr	x0, [x0, #16]
  447db8:	str	x0, [sp, #64]
  447dbc:	ldr	x0, [sp, #40]
  447dc0:	ldr	x0, [x0, #96]
  447dc4:	str	x0, [sp, #72]
  447dc8:	ldr	w0, [sp, #28]
  447dcc:	and	w0, w0, #0x8
  447dd0:	cmp	w0, #0x0
  447dd4:	b.eq	447df0 <argp_failure@@Base+0xa0c>  // b.none
  447dd8:	ldr	x0, [sp, #56]
  447ddc:	add	x1, x0, #0x1
  447de0:	str	x1, [sp, #56]
  447de4:	mov	w1, #0x2d                  	// #45
  447de8:	strb	w1, [x0]
  447dec:	b	447e14 <argp_failure@@Base+0xa30>
  447df0:	ldr	w0, [sp, #28]
  447df4:	and	w0, w0, #0x4
  447df8:	cmp	w0, #0x0
  447dfc:	b.eq	447e14 <argp_failure@@Base+0xa30>  // b.none
  447e00:	ldr	x0, [sp, #56]
  447e04:	add	x1, x0, #0x1
  447e08:	str	x1, [sp, #56]
  447e0c:	mov	w1, #0x2b                  	// #43
  447e10:	strb	w1, [x0]
  447e14:	ldr	x0, [sp, #56]
  447e18:	strb	wzr, [x0]
  447e1c:	ldr	x0, [sp, #64]
  447e20:	str	xzr, [x0]
  447e24:	ldr	x0, [sp, #40]
  447e28:	ldr	x1, [sp, #32]
  447e2c:	str	x1, [x0]
  447e30:	ldr	x0, [sp, #32]
  447e34:	cmp	x0, #0x0
  447e38:	b.eq	447e70 <argp_failure@@Base+0xa8c>  // b.none
  447e3c:	ldr	x0, [sp, #40]
  447e40:	ldr	x0, [x0, #80]
  447e44:	add	x1, sp, #0x30
  447e48:	mov	x4, x1
  447e4c:	mov	x3, x0
  447e50:	mov	w2, #0x0                   	// #0
  447e54:	mov	x1, #0x0                   	// #0
  447e58:	ldr	x0, [sp, #32]
  447e5c:	bl	4479c0 <argp_failure@@Base+0x5dc>
  447e60:	mov	x1, x0
  447e64:	ldr	x0, [sp, #40]
  447e68:	str	x1, [x0, #88]
  447e6c:	b	447e80 <argp_failure@@Base+0xa9c>
  447e70:	ldr	x0, [sp, #40]
  447e74:	ldr	x1, [x0, #80]
  447e78:	ldr	x0, [sp, #40]
  447e7c:	str	x1, [x0, #88]
  447e80:	nop
  447e84:	ldp	x29, x30, [sp], #80
  447e88:	ret
  447e8c:	stp	x29, x30, [sp, #-64]!
  447e90:	mov	x29, sp
  447e94:	str	x0, [sp, #24]
  447e98:	str	x1, [sp, #16]
  447e9c:	ldr	x0, [sp, #24]
  447ea0:	ldr	x0, [x0, #32]
  447ea4:	str	x0, [sp, #56]
  447ea8:	ldr	x0, [sp, #24]
  447eac:	ldr	x0, [x0]
  447eb0:	str	x0, [sp, #48]
  447eb4:	ldr	x0, [sp, #48]
  447eb8:	cmp	x0, #0x0
  447ebc:	b.ne	447ed0 <argp_failure@@Base+0xaec>  // b.any
  447ec0:	ldr	x0, [sp, #24]
  447ec4:	ldr	x0, [x0, #8]
  447ec8:	cmp	x0, #0x0
  447ecc:	b.eq	447f5c <argp_failure@@Base+0xb78>  // b.none
  447ed0:	ldr	x0, [sp, #16]
  447ed4:	ldr	x0, [x0, #16]
  447ed8:	add	x1, x0, #0x1
  447edc:	ldr	x0, [sp, #16]
  447ee0:	str	x1, [x0, #16]
  447ee4:	ldr	x0, [sp, #48]
  447ee8:	cmp	x0, #0x0
  447eec:	b.eq	447f5c <argp_failure@@Base+0xb78>  // b.none
  447ef0:	str	wzr, [sp, #44]
  447ef4:	b	447f04 <argp_failure@@Base+0xb20>
  447ef8:	ldr	w0, [sp, #44]
  447efc:	add	w0, w0, #0x1
  447f00:	str	w0, [sp, #44]
  447f04:	ldr	x0, [sp, #48]
  447f08:	add	x1, x0, #0x30
  447f0c:	str	x1, [sp, #48]
  447f10:	bl	4491a4 <argp_usage@@Base+0xb8>
  447f14:	cmp	w0, #0x0
  447f18:	b.eq	447ef8 <argp_failure@@Base+0xb14>  // b.none
  447f1c:	ldr	x0, [sp, #16]
  447f20:	ldr	x2, [x0]
  447f24:	ldr	w1, [sp, #44]
  447f28:	mov	w0, w1
  447f2c:	lsl	w0, w0, #1
  447f30:	add	w0, w0, w1
  447f34:	sxtw	x0, w0
  447f38:	add	x1, x2, x0
  447f3c:	ldr	x0, [sp, #16]
  447f40:	str	x1, [x0]
  447f44:	ldr	x0, [sp, #16]
  447f48:	ldr	x1, [x0, #8]
  447f4c:	ldrsw	x0, [sp, #44]
  447f50:	add	x1, x1, x0
  447f54:	ldr	x0, [sp, #16]
  447f58:	str	x1, [x0, #8]
  447f5c:	ldr	x0, [sp, #56]
  447f60:	cmp	x0, #0x0
  447f64:	b.eq	447fa8 <argp_failure@@Base+0xbc4>  // b.none
  447f68:	b	447f98 <argp_failure@@Base+0xbb4>
  447f6c:	ldr	x0, [sp, #56]
  447f70:	add	x1, x0, #0x20
  447f74:	str	x1, [sp, #56]
  447f78:	ldr	x0, [x0]
  447f7c:	ldr	x1, [sp, #16]
  447f80:	bl	447e8c <argp_failure@@Base+0xaa8>
  447f84:	ldr	x0, [sp, #16]
  447f88:	ldr	x0, [x0, #24]
  447f8c:	add	x1, x0, #0x1
  447f90:	ldr	x0, [sp, #16]
  447f94:	str	x1, [x0, #24]
  447f98:	ldr	x0, [sp, #56]
  447f9c:	ldr	x0, [x0]
  447fa0:	cmp	x0, #0x0
  447fa4:	b.ne	447f6c <argp_failure@@Base+0xb88>  // b.any
  447fa8:	nop
  447fac:	ldp	x29, x30, [sp], #64
  447fb0:	ret
  447fb4:	stp	x29, x30, [sp, #-240]!
  447fb8:	mov	x29, sp
  447fbc:	str	x0, [sp, #56]
  447fc0:	str	x1, [sp, #48]
  447fc4:	str	w2, [sp, #44]
  447fc8:	str	x3, [sp, #32]
  447fcc:	str	w4, [sp, #40]
  447fd0:	str	x5, [sp, #24]
  447fd4:	str	wzr, [sp, #236]
  447fd8:	stp	xzr, xzr, [sp, #64]
  447fdc:	stp	xzr, xzr, [sp, #80]
  447fe0:	stp	xzr, xzr, [sp, #96]
  447fe4:	str	xzr, [sp, #112]
  447fe8:	mov	w0, #0x1                   	// #1
  447fec:	str	w0, [sp, #64]
  447ff0:	mov	w0, #0x1                   	// #1
  447ff4:	str	w0, [sp, #68]
  447ff8:	ldr	w0, [sp, #40]
  447ffc:	and	w0, w0, #0x4
  448000:	cmp	w0, #0x0
  448004:	cset	w0, eq  // eq = none
  448008:	and	w0, w0, #0xff
  44800c:	and	x0, x0, #0xff
  448010:	str	x0, [sp, #120]
  448014:	str	xzr, [sp, #128]
  448018:	str	xzr, [sp, #136]
  44801c:	str	xzr, [sp, #144]
  448020:	ldr	x0, [sp, #48]
  448024:	cmp	x0, #0x0
  448028:	b.eq	44803c <argp_failure@@Base+0xc58>  // b.none
  44802c:	add	x0, sp, #0x78
  448030:	mov	x1, x0
  448034:	ldr	x0, [sp, #48]
  448038:	bl	447e8c <argp_failure@@Base+0xaa8>
  44803c:	ldr	x0, [sp, #136]
  448040:	add	x1, x0, #0x1
  448044:	mov	x0, x1
  448048:	lsl	x0, x0, #3
  44804c:	add	x0, x0, x1
  448050:	lsl	x0, x0, #3
  448054:	str	x0, [sp, #216]
  448058:	ldr	x0, [sp, #144]
  44805c:	lsl	x0, x0, #3
  448060:	str	x0, [sp, #208]
  448064:	ldr	x0, [sp, #128]
  448068:	add	x0, x0, #0x1
  44806c:	lsl	x0, x0, #5
  448070:	str	x0, [sp, #200]
  448074:	ldr	x0, [sp, #120]
  448078:	add	x0, x0, #0x1
  44807c:	str	x0, [sp, #192]
  448080:	ldr	x0, [sp, #216]
  448084:	str	x0, [sp, #184]
  448088:	ldr	x1, [sp, #184]
  44808c:	ldr	x0, [sp, #208]
  448090:	add	x0, x1, x0
  448094:	add	x0, x0, #0x7
  448098:	and	x0, x0, #0xfffffffffffffff8
  44809c:	str	x0, [sp, #176]
  4480a0:	ldr	x1, [sp, #176]
  4480a4:	ldr	x0, [sp, #200]
  4480a8:	add	x0, x1, x0
  4480ac:	str	x0, [sp, #168]
  4480b0:	ldr	x1, [sp, #168]
  4480b4:	ldr	x0, [sp, #192]
  4480b8:	add	x0, x1, x0
  4480bc:	str	x0, [sp, #160]
  4480c0:	ldr	x0, [sp, #160]
  4480c4:	bl	4043f0 <malloc@plt>
  4480c8:	mov	x1, x0
  4480cc:	ldr	x0, [sp, #56]
  4480d0:	str	x1, [x0, #208]
  4480d4:	ldr	x0, [sp, #56]
  4480d8:	ldr	x0, [x0, #208]
  4480dc:	cmp	x0, #0x0
  4480e0:	b.ne	4480ec <argp_failure@@Base+0xd08>  // b.any
  4480e4:	mov	w0, #0xc                   	// #12
  4480e8:	b	44842c <argp_failure@@Base+0x1048>
  4480ec:	ldr	x0, [sp, #56]
  4480f0:	ldr	x0, [x0, #208]
  4480f4:	str	x0, [sp, #152]
  4480f8:	ldr	x0, [sp, #56]
  4480fc:	ldr	x1, [x0, #208]
  448100:	ldr	x0, [sp, #56]
  448104:	str	x1, [x0, #80]
  448108:	ldr	x1, [sp, #152]
  44810c:	ldr	x0, [sp, #184]
  448110:	add	x1, x1, x0
  448114:	ldr	x0, [sp, #56]
  448118:	str	x1, [x0, #96]
  44811c:	ldr	x1, [sp, #152]
  448120:	ldr	x0, [sp, #176]
  448124:	add	x1, x1, x0
  448128:	ldr	x0, [sp, #56]
  44812c:	str	x1, [x0, #16]
  448130:	ldr	x1, [sp, #152]
  448134:	ldr	x0, [sp, #168]
  448138:	add	x1, x1, x0
  44813c:	ldr	x0, [sp, #56]
  448140:	str	x1, [x0, #8]
  448144:	ldr	x0, [sp, #56]
  448148:	add	x0, x0, #0x18
  44814c:	mov	x1, x0
  448150:	add	x0, sp, #0x40
  448154:	ldp	x2, x3, [x0]
  448158:	stp	x2, x3, [x1]
  44815c:	ldp	x2, x3, [x0, #16]
  448160:	stp	x2, x3, [x1, #16]
  448164:	ldp	x2, x3, [x0, #32]
  448168:	stp	x2, x3, [x1, #32]
  44816c:	ldr	x0, [x0, #48]
  448170:	str	x0, [x1, #48]
  448174:	ldr	x0, [sp, #56]
  448178:	ldr	x0, [x0, #96]
  44817c:	ldr	x2, [sp, #208]
  448180:	mov	w1, #0x0                   	// #0
  448184:	bl	4044d0 <memset@plt>
  448188:	ldr	w2, [sp, #40]
  44818c:	ldr	x1, [sp, #48]
  448190:	ldr	x0, [sp, #56]
  448194:	bl	447d88 <argp_failure@@Base+0x9a4>
  448198:	ldr	x0, [sp, #56]
  44819c:	add	x0, x0, #0x70
  4481a0:	mov	x2, #0x60                  	// #96
  4481a4:	mov	w1, #0x0                   	// #0
  4481a8:	bl	4044d0 <memset@plt>
  4481ac:	ldr	x0, [sp, #56]
  4481b0:	ldr	x1, [x0]
  4481b4:	ldr	x0, [sp, #56]
  4481b8:	str	x1, [x0, #112]
  4481bc:	ldr	x0, [sp, #56]
  4481c0:	ldr	w1, [sp, #44]
  4481c4:	str	w1, [x0, #120]
  4481c8:	ldr	x0, [sp, #56]
  4481cc:	ldr	x1, [sp, #32]
  4481d0:	str	x1, [x0, #128]
  4481d4:	ldr	w1, [sp, #40]
  4481d8:	ldr	x0, [sp, #56]
  4481dc:	str	w1, [x0, #140]
  4481e0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4481e4:	add	x0, x0, #0x498
  4481e8:	ldr	x1, [x0]
  4481ec:	ldr	x0, [sp, #56]
  4481f0:	str	x1, [x0, #184]
  4481f4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4481f8:	add	x0, x0, #0x4a0
  4481fc:	ldr	x1, [x0]
  448200:	ldr	x0, [sp, #56]
  448204:	str	x1, [x0, #192]
  448208:	ldr	x0, [sp, #56]
  44820c:	str	wzr, [x0, #136]
  448210:	ldr	x0, [sp, #56]
  448214:	ldr	x1, [sp, #56]
  448218:	str	x1, [x0, #200]
  44821c:	ldr	x0, [sp, #56]
  448220:	mov	w1, #0x1                   	// #1
  448224:	str	w1, [x0, #104]
  448228:	ldr	x0, [sp, #56]
  44822c:	ldr	x1, [x0, #80]
  448230:	ldr	x0, [sp, #56]
  448234:	ldr	x0, [x0, #88]
  448238:	cmp	x1, x0
  44823c:	b.cs	448250 <argp_failure@@Base+0xe6c>  // b.hs, b.nlast
  448240:	ldr	x0, [sp, #56]
  448244:	ldr	x0, [x0, #80]
  448248:	ldr	x1, [sp, #24]
  44824c:	str	x1, [x0, #48]
  448250:	ldr	x0, [sp, #56]
  448254:	ldr	x0, [x0, #80]
  448258:	str	x0, [sp, #224]
  44825c:	b	44831c <argp_failure@@Base+0xf38>
  448260:	ldr	x0, [sp, #224]
  448264:	ldr	x0, [x0, #32]
  448268:	cmp	x0, #0x0
  44826c:	b.eq	44829c <argp_failure@@Base+0xeb8>  // b.none
  448270:	ldr	x0, [sp, #224]
  448274:	ldr	x0, [x0, #32]
  448278:	ldr	x1, [x0, #56]
  44827c:	ldr	x0, [sp, #224]
  448280:	ldr	w0, [x0, #40]
  448284:	mov	w0, w0
  448288:	lsl	x0, x0, #3
  44828c:	add	x0, x1, x0
  448290:	ldr	x1, [x0]
  448294:	ldr	x0, [sp, #224]
  448298:	str	x1, [x0, #48]
  44829c:	ldr	x0, [sp, #224]
  4482a0:	ldr	x0, [x0]
  4482a4:	cmp	x0, #0x0
  4482a8:	b.ne	4482ec <argp_failure@@Base+0xf08>  // b.any
  4482ac:	ldr	x0, [sp, #224]
  4482b0:	ldr	x0, [x0, #8]
  4482b4:	ldr	x0, [x0, #32]
  4482b8:	cmp	x0, #0x0
  4482bc:	b.eq	4482ec <argp_failure@@Base+0xf08>  // b.none
  4482c0:	ldr	x0, [sp, #224]
  4482c4:	ldr	x0, [x0, #8]
  4482c8:	ldr	x0, [x0, #32]
  4482cc:	ldr	x0, [x0]
  4482d0:	cmp	x0, #0x0
  4482d4:	b.eq	4482ec <argp_failure@@Base+0xf08>  // b.none
  4482d8:	ldr	x0, [sp, #224]
  4482dc:	ldr	x0, [x0, #56]
  4482e0:	ldr	x1, [sp, #224]
  4482e4:	ldr	x1, [x1, #48]
  4482e8:	str	x1, [x0]
  4482ec:	ldr	x0, [sp, #56]
  4482f0:	add	x0, x0, #0x70
  4482f4:	mov	x3, #0x0                   	// #0
  4482f8:	mov	w2, #0x3                   	// #3
  4482fc:	movk	w2, #0x100, lsl #16
  448300:	mov	x1, x0
  448304:	ldr	x0, [sp, #224]
  448308:	bl	447918 <argp_failure@@Base+0x534>
  44830c:	str	w0, [sp, #236]
  448310:	ldr	x0, [sp, #224]
  448314:	add	x0, x0, #0x48
  448318:	str	x0, [sp, #224]
  44831c:	ldr	x0, [sp, #56]
  448320:	ldr	x0, [x0, #88]
  448324:	ldr	x1, [sp, #224]
  448328:	cmp	x1, x0
  44832c:	b.cs	448348 <argp_failure@@Base+0xf64>  // b.hs, b.nlast
  448330:	ldr	w0, [sp, #236]
  448334:	cmp	w0, #0x0
  448338:	b.eq	448260 <argp_failure@@Base+0xe7c>  // b.none
  44833c:	ldr	w0, [sp, #236]
  448340:	cmp	w0, #0x7
  448344:	b.eq	448260 <argp_failure@@Base+0xe7c>  // b.none
  448348:	ldr	w0, [sp, #236]
  44834c:	cmp	w0, #0x7
  448350:	b.ne	448358 <argp_failure@@Base+0xf74>  // b.any
  448354:	str	wzr, [sp, #236]
  448358:	ldr	w0, [sp, #236]
  44835c:	cmp	w0, #0x0
  448360:	b.eq	44836c <argp_failure@@Base+0xf88>  // b.none
  448364:	ldr	w0, [sp, #236]
  448368:	b	44842c <argp_failure@@Base+0x1048>
  44836c:	ldr	x0, [sp, #56]
  448370:	ldr	w0, [x0, #140]
  448374:	and	w0, w0, #0x2
  448378:	cmp	w0, #0x0
  44837c:	b.eq	4483c8 <argp_failure@@Base+0xfe4>  // b.none
  448380:	ldr	x0, [sp, #56]
  448384:	str	wzr, [x0, #28]
  448388:	ldr	x0, [sp, #56]
  44838c:	ldr	w0, [x0, #140]
  448390:	and	w0, w0, #0x1
  448394:	cmp	w0, #0x0
  448398:	b.eq	4483d4 <argp_failure@@Base+0xff0>  // b.none
  44839c:	ldr	x0, [sp, #56]
  4483a0:	ldr	x0, [x0, #128]
  4483a4:	sub	x1, x0, #0x8
  4483a8:	ldr	x0, [sp, #56]
  4483ac:	str	x1, [x0, #128]
  4483b0:	ldr	x0, [sp, #56]
  4483b4:	ldr	w0, [x0, #120]
  4483b8:	add	w1, w0, #0x1
  4483bc:	ldr	x0, [sp, #56]
  4483c0:	str	w1, [x0, #120]
  4483c4:	b	4483d4 <argp_failure@@Base+0xff0>
  4483c8:	ldr	x0, [sp, #56]
  4483cc:	mov	w1, #0x1                   	// #1
  4483d0:	str	w1, [x0, #28]
  4483d4:	ldr	x0, [sp, #56]
  4483d8:	ldr	x0, [x0, #128]
  4483dc:	ldr	x1, [sp, #32]
  4483e0:	cmp	x1, x0
  4483e4:	b.ne	448414 <argp_failure@@Base+0x1030>  // b.any
  4483e8:	ldr	x0, [sp, #32]
  4483ec:	ldr	x0, [x0]
  4483f0:	cmp	x0, #0x0
  4483f4:	b.eq	448414 <argp_failure@@Base+0x1030>  // b.none
  4483f8:	ldr	x0, [sp, #32]
  4483fc:	ldr	x0, [x0]
  448400:	bl	44a0e0 <argp_usage@@Base+0xff4>
  448404:	mov	x1, x0
  448408:	ldr	x0, [sp, #56]
  44840c:	str	x1, [x0, #176]
  448410:	b	448428 <argp_failure@@Base+0x1044>
  448414:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  448418:	add	x0, x0, #0x4b8
  44841c:	ldr	x1, [x0]
  448420:	ldr	x0, [sp, #56]
  448424:	str	x1, [x0, #176]
  448428:	mov	w0, #0x0                   	// #0
  44842c:	ldp	x29, x30, [sp], #240
  448430:	ret
  448434:	stp	x29, x30, [sp, #-80]!
  448438:	mov	x29, sp
  44843c:	str	x19, [sp, #16]
  448440:	str	x0, [sp, #56]
  448444:	str	w1, [sp, #52]
  448448:	str	w2, [sp, #48]
  44844c:	str	x3, [sp, #40]
  448450:	ldr	w0, [sp, #52]
  448454:	cmp	w0, #0x7
  448458:	b.ne	44846c <argp_failure@@Base+0x1088>  // b.any
  44845c:	ldr	w0, [sp, #48]
  448460:	cmp	w0, #0x0
  448464:	b.eq	44846c <argp_failure@@Base+0x1088>  // b.none
  448468:	str	wzr, [sp, #52]
  44846c:	ldr	w0, [sp, #52]
  448470:	cmp	w0, #0x0
  448474:	b.ne	448634 <argp_failure@@Base+0x1250>  // b.any
  448478:	ldr	x0, [sp, #56]
  44847c:	ldr	w1, [x0, #136]
  448480:	ldr	x0, [sp, #56]
  448484:	ldr	w0, [x0, #120]
  448488:	cmp	w1, w0
  44848c:	b.ne	4485ac <argp_failure@@Base+0x11c8>  // b.any
  448490:	ldr	x0, [sp, #56]
  448494:	ldr	x0, [x0, #80]
  448498:	str	x0, [sp, #72]
  44849c:	b	4484e0 <argp_failure@@Base+0x10fc>
  4484a0:	ldr	x0, [sp, #72]
  4484a4:	ldr	w0, [x0, #24]
  4484a8:	cmp	w0, #0x0
  4484ac:	b.ne	4484d4 <argp_failure@@Base+0x10f0>  // b.any
  4484b0:	ldr	x0, [sp, #56]
  4484b4:	add	x0, x0, #0x70
  4484b8:	mov	x3, #0x0                   	// #0
  4484bc:	mov	w2, #0x2                   	// #2
  4484c0:	movk	w2, #0x100, lsl #16
  4484c4:	mov	x1, x0
  4484c8:	ldr	x0, [sp, #72]
  4484cc:	bl	447918 <argp_failure@@Base+0x534>
  4484d0:	str	w0, [sp, #52]
  4484d4:	ldr	x0, [sp, #72]
  4484d8:	add	x0, x0, #0x48
  4484dc:	str	x0, [sp, #72]
  4484e0:	ldr	x0, [sp, #56]
  4484e4:	ldr	x0, [x0, #88]
  4484e8:	ldr	x1, [sp, #72]
  4484ec:	cmp	x1, x0
  4484f0:	b.cs	44850c <argp_failure@@Base+0x1128>  // b.hs, b.nlast
  4484f4:	ldr	w0, [sp, #52]
  4484f8:	cmp	w0, #0x0
  4484fc:	b.eq	4484a0 <argp_failure@@Base+0x10bc>  // b.none
  448500:	ldr	w0, [sp, #52]
  448504:	cmp	w0, #0x7
  448508:	b.eq	4484a0 <argp_failure@@Base+0x10bc>  // b.none
  44850c:	ldr	x0, [sp, #56]
  448510:	ldr	x0, [x0, #88]
  448514:	sub	x0, x0, #0x48
  448518:	str	x0, [sp, #72]
  44851c:	b	448550 <argp_failure@@Base+0x116c>
  448520:	ldr	x0, [sp, #56]
  448524:	add	x0, x0, #0x70
  448528:	mov	x3, #0x0                   	// #0
  44852c:	mov	w2, #0x1                   	// #1
  448530:	movk	w2, #0x100, lsl #16
  448534:	mov	x1, x0
  448538:	ldr	x0, [sp, #72]
  44853c:	bl	447918 <argp_failure@@Base+0x534>
  448540:	str	w0, [sp, #52]
  448544:	ldr	x0, [sp, #72]
  448548:	sub	x0, x0, #0x48
  44854c:	str	x0, [sp, #72]
  448550:	ldr	x0, [sp, #56]
  448554:	ldr	x0, [x0, #80]
  448558:	ldr	x1, [sp, #72]
  44855c:	cmp	x1, x0
  448560:	b.cc	44857c <argp_failure@@Base+0x1198>  // b.lo, b.ul, b.last
  448564:	ldr	w0, [sp, #52]
  448568:	cmp	w0, #0x0
  44856c:	b.eq	448520 <argp_failure@@Base+0x113c>  // b.none
  448570:	ldr	w0, [sp, #52]
  448574:	cmp	w0, #0x7
  448578:	b.eq	448520 <argp_failure@@Base+0x113c>  // b.none
  44857c:	ldr	w0, [sp, #52]
  448580:	cmp	w0, #0x7
  448584:	b.ne	44858c <argp_failure@@Base+0x11a8>  // b.any
  448588:	str	wzr, [sp, #52]
  44858c:	ldr	x0, [sp, #40]
  448590:	cmp	x0, #0x0
  448594:	b.eq	448634 <argp_failure@@Base+0x1250>  // b.none
  448598:	ldr	x0, [sp, #56]
  44859c:	ldr	w1, [x0, #136]
  4485a0:	ldr	x0, [sp, #40]
  4485a4:	str	w1, [x0]
  4485a8:	b	448634 <argp_failure@@Base+0x1250>
  4485ac:	ldr	x0, [sp, #40]
  4485b0:	cmp	x0, #0x0
  4485b4:	b.eq	4485cc <argp_failure@@Base+0x11e8>  // b.none
  4485b8:	ldr	x0, [sp, #56]
  4485bc:	ldr	w1, [x0, #136]
  4485c0:	ldr	x0, [sp, #40]
  4485c4:	str	w1, [x0]
  4485c8:	b	448634 <argp_failure@@Base+0x1250>
  4485cc:	ldr	x0, [sp, #56]
  4485d0:	ldr	w0, [x0, #140]
  4485d4:	and	w0, w0, #0x2
  4485d8:	cmp	w0, #0x0
  4485dc:	b.ne	44862c <argp_failure@@Base+0x1248>  // b.any
  4485e0:	ldr	x0, [sp, #56]
  4485e4:	ldr	x0, [x0, #184]
  4485e8:	cmp	x0, #0x0
  4485ec:	b.eq	44862c <argp_failure@@Base+0x1248>  // b.none
  4485f0:	ldr	x0, [sp, #56]
  4485f4:	ldr	x19, [x0, #184]
  4485f8:	ldr	x0, [sp, #56]
  4485fc:	ldr	x0, [x0]
  448600:	ldr	x2, [x0, #48]
  448604:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448608:	add	x1, x0, #0x330
  44860c:	mov	x0, x2
  448610:	bl	404870 <dgettext@plt>
  448614:	mov	x1, x0
  448618:	ldr	x0, [sp, #56]
  44861c:	ldr	x0, [x0, #176]
  448620:	mov	x2, x0
  448624:	mov	x0, x19
  448628:	bl	404c90 <fprintf@plt>
  44862c:	mov	w0, #0x7                   	// #7
  448630:	str	w0, [sp, #52]
  448634:	ldr	w0, [sp, #52]
  448638:	cmp	w0, #0x0
  44863c:	b.eq	4486c0 <argp_failure@@Base+0x12dc>  // b.none
  448640:	ldr	w0, [sp, #52]
  448644:	cmp	w0, #0x7
  448648:	b.ne	44866c <argp_failure@@Base+0x1288>  // b.any
  44864c:	ldr	x0, [sp, #56]
  448650:	add	x3, x0, #0x70
  448654:	ldr	x0, [sp, #56]
  448658:	ldr	x0, [x0, #184]
  44865c:	mov	w2, #0x104                 	// #260
  448660:	mov	x1, x0
  448664:	mov	x0, x3
  448668:	bl	447150 <argp_state_help@@Base>
  44866c:	ldr	x0, [sp, #56]
  448670:	ldr	x0, [x0, #80]
  448674:	str	x0, [sp, #72]
  448678:	b	4486a8 <argp_failure@@Base+0x12c4>
  44867c:	ldr	x0, [sp, #56]
  448680:	add	x0, x0, #0x70
  448684:	mov	x3, #0x0                   	// #0
  448688:	mov	w2, #0x5                   	// #5
  44868c:	movk	w2, #0x100, lsl #16
  448690:	mov	x1, x0
  448694:	ldr	x0, [sp, #72]
  448698:	bl	447918 <argp_failure@@Base+0x534>
  44869c:	ldr	x0, [sp, #72]
  4486a0:	add	x0, x0, #0x48
  4486a4:	str	x0, [sp, #72]
  4486a8:	ldr	x0, [sp, #56]
  4486ac:	ldr	x0, [x0, #88]
  4486b0:	ldr	x1, [sp, #72]
  4486b4:	cmp	x1, x0
  4486b8:	b.cc	44867c <argp_failure@@Base+0x1298>  // b.lo, b.ul, b.last
  4486bc:	b	448740 <argp_failure@@Base+0x135c>
  4486c0:	ldr	x0, [sp, #56]
  4486c4:	ldr	x0, [x0, #88]
  4486c8:	sub	x0, x0, #0x48
  4486cc:	str	x0, [sp, #72]
  4486d0:	b	448704 <argp_failure@@Base+0x1320>
  4486d4:	ldr	x0, [sp, #56]
  4486d8:	add	x0, x0, #0x70
  4486dc:	mov	x3, #0x0                   	// #0
  4486e0:	mov	w2, #0x4                   	// #4
  4486e4:	movk	w2, #0x100, lsl #16
  4486e8:	mov	x1, x0
  4486ec:	ldr	x0, [sp, #72]
  4486f0:	bl	447918 <argp_failure@@Base+0x534>
  4486f4:	str	w0, [sp, #52]
  4486f8:	ldr	x0, [sp, #72]
  4486fc:	sub	x0, x0, #0x48
  448700:	str	x0, [sp, #72]
  448704:	ldr	x0, [sp, #56]
  448708:	ldr	x0, [x0, #80]
  44870c:	ldr	x1, [sp, #72]
  448710:	cmp	x1, x0
  448714:	b.cc	448730 <argp_failure@@Base+0x134c>  // b.lo, b.ul, b.last
  448718:	ldr	w0, [sp, #52]
  44871c:	cmp	w0, #0x0
  448720:	b.eq	4486d4 <argp_failure@@Base+0x12f0>  // b.none
  448724:	ldr	w0, [sp, #52]
  448728:	cmp	w0, #0x7
  44872c:	b.eq	4486d4 <argp_failure@@Base+0x12f0>  // b.none
  448730:	ldr	w0, [sp, #52]
  448734:	cmp	w0, #0x7
  448738:	b.ne	448740 <argp_failure@@Base+0x135c>  // b.any
  44873c:	str	wzr, [sp, #52]
  448740:	ldr	x0, [sp, #56]
  448744:	ldr	x0, [x0, #88]
  448748:	sub	x0, x0, #0x48
  44874c:	str	x0, [sp, #72]
  448750:	b	448780 <argp_failure@@Base+0x139c>
  448754:	ldr	x0, [sp, #56]
  448758:	add	x0, x0, #0x70
  44875c:	mov	x3, #0x0                   	// #0
  448760:	mov	w2, #0x7                   	// #7
  448764:	movk	w2, #0x100, lsl #16
  448768:	mov	x1, x0
  44876c:	ldr	x0, [sp, #72]
  448770:	bl	447918 <argp_failure@@Base+0x534>
  448774:	ldr	x0, [sp, #72]
  448778:	sub	x0, x0, #0x48
  44877c:	str	x0, [sp, #72]
  448780:	ldr	x0, [sp, #56]
  448784:	ldr	x0, [x0, #80]
  448788:	ldr	x1, [sp, #72]
  44878c:	cmp	x1, x0
  448790:	b.cs	448754 <argp_failure@@Base+0x1370>  // b.hs, b.nlast
  448794:	ldr	w0, [sp, #52]
  448798:	cmp	w0, #0x7
  44879c:	b.ne	4487a8 <argp_failure@@Base+0x13c4>  // b.any
  4487a0:	mov	w0, #0x16                  	// #22
  4487a4:	str	w0, [sp, #52]
  4487a8:	ldr	x0, [sp, #56]
  4487ac:	ldr	x0, [x0, #208]
  4487b0:	bl	404880 <free@plt>
  4487b4:	ldr	w0, [sp, #52]
  4487b8:	ldr	x19, [sp, #16]
  4487bc:	ldp	x29, x30, [sp], #80
  4487c0:	ret
  4487c4:	stp	x29, x30, [sp, #-64]!
  4487c8:	mov	x29, sp
  4487cc:	str	x0, [sp, #24]
  4487d0:	str	x1, [sp, #16]
  4487d4:	ldr	x0, [sp, #24]
  4487d8:	ldr	w0, [x0, #136]
  4487dc:	sub	w1, w0, #0x1
  4487e0:	ldr	x0, [sp, #24]
  4487e4:	str	w1, [x0, #136]
  4487e8:	ldr	x0, [sp, #24]
  4487ec:	ldr	w0, [x0, #136]
  4487f0:	str	w0, [sp, #40]
  4487f4:	mov	w0, #0x7                   	// #7
  4487f8:	str	w0, [sp, #60]
  4487fc:	str	wzr, [sp, #44]
  448800:	ldr	x0, [sp, #24]
  448804:	ldr	x0, [x0, #80]
  448808:	str	x0, [sp, #48]
  44880c:	b	4488a0 <argp_failure@@Base+0x14bc>
  448810:	ldr	x0, [sp, #24]
  448814:	ldr	w0, [x0, #136]
  448818:	add	w1, w0, #0x1
  44881c:	ldr	x0, [sp, #24]
  448820:	str	w1, [x0, #136]
  448824:	str	wzr, [sp, #44]
  448828:	ldr	x0, [sp, #24]
  44882c:	add	x0, x0, #0x70
  448830:	ldr	x3, [sp, #16]
  448834:	ldr	w2, [sp, #44]
  448838:	mov	x1, x0
  44883c:	ldr	x0, [sp, #48]
  448840:	bl	447918 <argp_failure@@Base+0x534>
  448844:	str	w0, [sp, #60]
  448848:	ldr	w0, [sp, #60]
  44884c:	cmp	w0, #0x7
  448850:	b.ne	448894 <argp_failure@@Base+0x14b0>  // b.any
  448854:	ldr	x0, [sp, #24]
  448858:	ldr	w0, [x0, #136]
  44885c:	sub	w1, w0, #0x1
  448860:	ldr	x0, [sp, #24]
  448864:	str	w1, [x0, #136]
  448868:	mov	w0, #0x6                   	// #6
  44886c:	movk	w0, #0x100, lsl #16
  448870:	str	w0, [sp, #44]
  448874:	ldr	x0, [sp, #24]
  448878:	add	x0, x0, #0x70
  44887c:	mov	x3, #0x0                   	// #0
  448880:	ldr	w2, [sp, #44]
  448884:	mov	x1, x0
  448888:	ldr	x0, [sp, #48]
  44888c:	bl	447918 <argp_failure@@Base+0x534>
  448890:	str	w0, [sp, #60]
  448894:	ldr	x0, [sp, #48]
  448898:	add	x0, x0, #0x48
  44889c:	str	x0, [sp, #48]
  4488a0:	ldr	x0, [sp, #24]
  4488a4:	ldr	x0, [x0, #88]
  4488a8:	ldr	x1, [sp, #48]
  4488ac:	cmp	x1, x0
  4488b0:	b.cs	4488c0 <argp_failure@@Base+0x14dc>  // b.hs, b.nlast
  4488b4:	ldr	w0, [sp, #60]
  4488b8:	cmp	w0, #0x7
  4488bc:	b.eq	448810 <argp_failure@@Base+0x142c>  // b.none
  4488c0:	ldr	w0, [sp, #60]
  4488c4:	cmp	w0, #0x0
  4488c8:	b.ne	448940 <argp_failure@@Base+0x155c>  // b.any
  4488cc:	ldr	w1, [sp, #44]
  4488d0:	mov	w0, #0x6                   	// #6
  4488d4:	movk	w0, #0x100, lsl #16
  4488d8:	cmp	w1, w0
  4488dc:	b.ne	4488f0 <argp_failure@@Base+0x150c>  // b.any
  4488e0:	ldr	x0, [sp, #24]
  4488e4:	ldr	w1, [x0, #120]
  4488e8:	ldr	x0, [sp, #24]
  4488ec:	str	w1, [x0, #136]
  4488f0:	ldr	x0, [sp, #24]
  4488f4:	ldr	w0, [x0, #136]
  4488f8:	ldr	w1, [sp, #40]
  4488fc:	cmp	w1, w0
  448900:	b.ge	448934 <argp_failure@@Base+0x1550>  // b.tcont
  448904:	ldr	x0, [sp, #48]
  448908:	sub	x0, x0, #0x48
  44890c:	str	x0, [sp, #48]
  448910:	ldr	x0, [sp, #48]
  448914:	ldr	w1, [x0, #24]
  448918:	ldr	x2, [sp, #24]
  44891c:	ldr	w3, [x2, #136]
  448920:	ldr	w2, [sp, #40]
  448924:	sub	w2, w3, w2
  448928:	add	w1, w1, w2
  44892c:	str	w1, [x0, #24]
  448930:	b	448940 <argp_failure@@Base+0x155c>
  448934:	ldr	x0, [sp, #24]
  448938:	mov	w1, #0x1                   	// #1
  44893c:	str	w1, [x0, #104]
  448940:	ldr	w0, [sp, #60]
  448944:	ldp	x29, x30, [sp], #64
  448948:	ret
  44894c:	stp	x29, x30, [sp, #-112]!
  448950:	mov	x29, sp
  448954:	stp	x19, x20, [sp, #16]
  448958:	str	x0, [sp, #56]
  44895c:	str	w1, [sp, #52]
  448960:	str	x2, [sp, #40]
  448964:	ldr	w0, [sp, #52]
  448968:	asr	w0, w0, #24
  44896c:	str	w0, [sp, #84]
  448970:	mov	w0, #0x7                   	// #7
  448974:	str	w0, [sp, #108]
  448978:	ldr	w0, [sp, #84]
  44897c:	cmp	w0, #0x0
  448980:	b.ne	448a14 <argp_failure@@Base+0x1630>  // b.any
  448984:	ldr	x0, [sp, #56]
  448988:	ldr	x0, [x0, #8]
  44898c:	ldr	w1, [sp, #52]
  448990:	bl	404930 <strchr@plt>
  448994:	str	x0, [sp, #72]
  448998:	ldr	x0, [sp, #72]
  44899c:	cmp	x0, #0x0
  4489a0:	b.eq	448a88 <argp_failure@@Base+0x16a4>  // b.none
  4489a4:	ldr	x0, [sp, #56]
  4489a8:	ldr	x0, [x0, #80]
  4489ac:	str	x0, [sp, #96]
  4489b0:	b	4489fc <argp_failure@@Base+0x1618>
  4489b4:	ldr	x0, [sp, #96]
  4489b8:	ldr	x0, [x0, #16]
  4489bc:	ldr	x1, [sp, #72]
  4489c0:	cmp	x1, x0
  4489c4:	b.cs	4489f0 <argp_failure@@Base+0x160c>  // b.hs, b.nlast
  4489c8:	ldr	x0, [sp, #56]
  4489cc:	add	x1, x0, #0x70
  4489d0:	ldr	x0, [sp, #56]
  4489d4:	ldr	x0, [x0, #40]
  4489d8:	mov	x3, x0
  4489dc:	ldr	w2, [sp, #52]
  4489e0:	ldr	x0, [sp, #96]
  4489e4:	bl	447918 <argp_failure@@Base+0x534>
  4489e8:	str	w0, [sp, #108]
  4489ec:	b	448a88 <argp_failure@@Base+0x16a4>
  4489f0:	ldr	x0, [sp, #96]
  4489f4:	add	x0, x0, #0x48
  4489f8:	str	x0, [sp, #96]
  4489fc:	ldr	x0, [sp, #56]
  448a00:	ldr	x0, [x0, #88]
  448a04:	ldr	x1, [sp, #96]
  448a08:	cmp	x1, x0
  448a0c:	b.cc	4489b4 <argp_failure@@Base+0x15d0>  // b.lo, b.ul, b.last
  448a10:	b	448a88 <argp_failure@@Base+0x16a4>
  448a14:	ldr	w0, [sp, #52]
  448a18:	and	w0, w0, #0x800000
  448a1c:	cmp	w0, #0x0
  448a20:	b.eq	448a2c <argp_failure@@Base+0x1648>  // b.none
  448a24:	mov	w0, #0xff000000            	// #-16777216
  448a28:	b	448a30 <argp_failure@@Base+0x164c>
  448a2c:	mov	w0, #0x0                   	// #0
  448a30:	ldr	w1, [sp, #52]
  448a34:	and	w1, w1, #0xffffff
  448a38:	orr	w0, w0, w1
  448a3c:	str	w0, [sp, #80]
  448a40:	ldr	x0, [sp, #56]
  448a44:	ldr	x2, [x0, #80]
  448a48:	ldrsw	x1, [sp, #84]
  448a4c:	mov	x0, x1
  448a50:	lsl	x0, x0, #3
  448a54:	add	x0, x0, x1
  448a58:	lsl	x0, x0, #3
  448a5c:	sub	x0, x0, #0x48
  448a60:	add	x4, x2, x0
  448a64:	ldr	x0, [sp, #56]
  448a68:	add	x1, x0, #0x70
  448a6c:	ldr	x0, [sp, #56]
  448a70:	ldr	x0, [x0, #40]
  448a74:	mov	x3, x0
  448a78:	ldr	w2, [sp, #80]
  448a7c:	mov	x0, x4
  448a80:	bl	447918 <argp_failure@@Base+0x534>
  448a84:	str	w0, [sp, #108]
  448a88:	ldr	w0, [sp, #108]
  448a8c:	cmp	w0, #0x7
  448a90:	b.ne	448b80 <argp_failure@@Base+0x179c>  // b.any
  448a94:	ldr	w0, [sp, #84]
  448a98:	cmp	w0, #0x0
  448a9c:	b.ne	448ae0 <argp_failure@@Base+0x16fc>  // b.any
  448aa0:	ldr	x0, [sp, #56]
  448aa4:	add	x19, x0, #0x70
  448aa8:	ldr	x0, [sp, #56]
  448aac:	ldr	x0, [x0]
  448ab0:	ldr	x2, [x0, #48]
  448ab4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448ab8:	add	x1, x0, #0x370
  448abc:	mov	x0, x2
  448ac0:	bl	404870 <dgettext@plt>
  448ac4:	mov	x3, x0
  448ac8:	ldr	w2, [sp, #52]
  448acc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448ad0:	add	x1, x0, #0x348
  448ad4:	mov	x0, x19
  448ad8:	bl	447278 <argp_error@@Base>
  448adc:	b	448b80 <argp_failure@@Base+0x179c>
  448ae0:	ldr	x0, [sp, #56]
  448ae4:	ldr	x0, [x0, #16]
  448ae8:	str	x0, [sp, #88]
  448aec:	b	448afc <argp_failure@@Base+0x1718>
  448af0:	ldr	x0, [sp, #88]
  448af4:	add	x0, x0, #0x20
  448af8:	str	x0, [sp, #88]
  448afc:	ldr	x0, [sp, #88]
  448b00:	ldr	w0, [x0, #24]
  448b04:	ldr	w1, [sp, #52]
  448b08:	cmp	w1, w0
  448b0c:	b.eq	448b20 <argp_failure@@Base+0x173c>  // b.none
  448b10:	ldr	x0, [sp, #88]
  448b14:	ldr	x0, [x0]
  448b18:	cmp	x0, #0x0
  448b1c:	b.ne	448af0 <argp_failure@@Base+0x170c>  // b.any
  448b20:	ldr	x0, [sp, #56]
  448b24:	add	x20, x0, #0x70
  448b28:	ldr	x0, [sp, #88]
  448b2c:	ldr	x0, [x0]
  448b30:	cmp	x0, #0x0
  448b34:	b.eq	448b44 <argp_failure@@Base+0x1760>  // b.none
  448b38:	ldr	x0, [sp, #88]
  448b3c:	ldr	x19, [x0]
  448b40:	b	448b4c <argp_failure@@Base+0x1768>
  448b44:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448b48:	add	x19, x0, #0x350
  448b4c:	ldr	x0, [sp, #56]
  448b50:	ldr	x0, [x0]
  448b54:	ldr	x2, [x0, #48]
  448b58:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448b5c:	add	x1, x0, #0x370
  448b60:	mov	x0, x2
  448b64:	bl	404870 <dgettext@plt>
  448b68:	mov	x3, x0
  448b6c:	mov	x2, x19
  448b70:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448b74:	add	x1, x0, #0x358
  448b78:	mov	x0, x20
  448b7c:	bl	447278 <argp_error@@Base>
  448b80:	ldr	w0, [sp, #108]
  448b84:	ldp	x19, x20, [sp, #16]
  448b88:	ldp	x29, x30, [sp], #112
  448b8c:	ret
  448b90:	stp	x29, x30, [sp, #-48]!
  448b94:	mov	x29, sp
  448b98:	str	x0, [sp, #24]
  448b9c:	str	x1, [sp, #16]
  448ba0:	str	wzr, [sp, #40]
  448ba4:	ldr	x0, [sp, #24]
  448ba8:	ldr	w0, [x0, #148]
  448bac:	cmp	w0, #0x0
  448bb0:	b.eq	448bd4 <argp_failure@@Base+0x17f0>  // b.none
  448bb4:	ldr	x0, [sp, #24]
  448bb8:	ldr	w1, [x0, #136]
  448bbc:	ldr	x0, [sp, #24]
  448bc0:	ldr	w0, [x0, #148]
  448bc4:	cmp	w1, w0
  448bc8:	b.ge	448bd4 <argp_failure@@Base+0x17f0>  // b.tcont
  448bcc:	ldr	x0, [sp, #24]
  448bd0:	str	wzr, [x0, #148]
  448bd4:	ldr	x0, [sp, #24]
  448bd8:	ldr	w0, [x0, #104]
  448bdc:	cmp	w0, #0x0
  448be0:	b.eq	448d50 <argp_failure@@Base+0x196c>  // b.none
  448be4:	ldr	x0, [sp, #24]
  448be8:	ldr	w0, [x0, #148]
  448bec:	cmp	w0, #0x0
  448bf0:	b.ne	448d50 <argp_failure@@Base+0x196c>  // b.any
  448bf4:	ldr	x0, [sp, #24]
  448bf8:	ldr	w1, [x0, #136]
  448bfc:	ldr	x0, [sp, #24]
  448c00:	str	w1, [x0, #24]
  448c04:	ldr	x0, [sp, #24]
  448c08:	mov	w1, #0xffffffff            	// #-1
  448c0c:	str	w1, [x0, #32]
  448c10:	ldr	x0, [sp, #24]
  448c14:	ldr	w0, [x0, #140]
  448c18:	and	w0, w0, #0x40
  448c1c:	cmp	w0, #0x0
  448c20:	b.eq	448c64 <argp_failure@@Base+0x1880>  // b.none
  448c24:	ldr	x0, [sp, #24]
  448c28:	ldr	w6, [x0, #120]
  448c2c:	ldr	x0, [sp, #24]
  448c30:	ldr	x1, [x0, #128]
  448c34:	ldr	x0, [sp, #24]
  448c38:	ldr	x2, [x0, #8]
  448c3c:	ldr	x0, [sp, #24]
  448c40:	ldr	x3, [x0, #16]
  448c44:	ldr	x0, [sp, #24]
  448c48:	add	x0, x0, #0x18
  448c4c:	mov	x5, x0
  448c50:	mov	x4, #0x0                   	// #0
  448c54:	mov	w0, w6
  448c58:	bl	45c9fc <argp_usage@@Base+0x13910>
  448c5c:	str	w0, [sp, #44]
  448c60:	b	448ca0 <argp_failure@@Base+0x18bc>
  448c64:	ldr	x0, [sp, #24]
  448c68:	ldr	w6, [x0, #120]
  448c6c:	ldr	x0, [sp, #24]
  448c70:	ldr	x1, [x0, #128]
  448c74:	ldr	x0, [sp, #24]
  448c78:	ldr	x2, [x0, #8]
  448c7c:	ldr	x0, [sp, #24]
  448c80:	ldr	x3, [x0, #16]
  448c84:	ldr	x0, [sp, #24]
  448c88:	add	x0, x0, #0x18
  448c8c:	mov	x5, x0
  448c90:	mov	x4, #0x0                   	// #0
  448c94:	mov	w0, w6
  448c98:	bl	45c96c <argp_usage@@Base+0x13880>
  448c9c:	str	w0, [sp, #44]
  448ca0:	ldr	x0, [sp, #24]
  448ca4:	ldr	w1, [x0, #24]
  448ca8:	ldr	x0, [sp, #24]
  448cac:	str	w1, [x0, #136]
  448cb0:	ldr	w0, [sp, #44]
  448cb4:	cmn	w0, #0x1
  448cb8:	b.ne	448d24 <argp_failure@@Base+0x1940>  // b.any
  448cbc:	ldr	x0, [sp, #24]
  448cc0:	str	wzr, [x0, #104]
  448cc4:	ldr	x0, [sp, #24]
  448cc8:	ldr	w0, [x0, #136]
  448ccc:	cmp	w0, #0x1
  448cd0:	b.le	448d5c <argp_failure@@Base+0x1978>
  448cd4:	ldr	x0, [sp, #24]
  448cd8:	ldr	x1, [x0, #128]
  448cdc:	ldr	x0, [sp, #24]
  448ce0:	ldr	w0, [x0, #136]
  448ce4:	sxtw	x0, w0
  448ce8:	lsl	x0, x0, #3
  448cec:	sub	x0, x0, #0x8
  448cf0:	add	x0, x1, x0
  448cf4:	ldr	x2, [x0]
  448cf8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448cfc:	add	x1, x0, #0x368
  448d00:	mov	x0, x2
  448d04:	bl	4047c0 <strcmp@plt>
  448d08:	cmp	w0, #0x0
  448d0c:	b.ne	448d5c <argp_failure@@Base+0x1978>  // b.any
  448d10:	ldr	x0, [sp, #24]
  448d14:	ldr	w1, [x0, #136]
  448d18:	ldr	x0, [sp, #24]
  448d1c:	str	w1, [x0, #148]
  448d20:	b	448d5c <argp_failure@@Base+0x1978>
  448d24:	ldr	w0, [sp, #44]
  448d28:	cmp	w0, #0x3f
  448d2c:	b.ne	448d5c <argp_failure@@Base+0x1978>  // b.any
  448d30:	ldr	x0, [sp, #24]
  448d34:	ldr	w0, [x0, #32]
  448d38:	cmn	w0, #0x1
  448d3c:	b.eq	448d5c <argp_failure@@Base+0x1978>  // b.none
  448d40:	ldr	x0, [sp, #16]
  448d44:	str	wzr, [x0]
  448d48:	mov	w0, #0x7                   	// #7
  448d4c:	b	448e68 <argp_failure@@Base+0x1a84>
  448d50:	mov	w0, #0xffffffff            	// #-1
  448d54:	str	w0, [sp, #44]
  448d58:	b	448d60 <argp_failure@@Base+0x197c>
  448d5c:	nop
  448d60:	ldr	w0, [sp, #44]
  448d64:	cmn	w0, #0x1
  448d68:	b.ne	448de8 <argp_failure@@Base+0x1a04>  // b.any
  448d6c:	ldr	x0, [sp, #24]
  448d70:	ldr	w1, [x0, #136]
  448d74:	ldr	x0, [sp, #24]
  448d78:	ldr	w0, [x0, #120]
  448d7c:	cmp	w1, w0
  448d80:	b.ge	448d98 <argp_failure@@Base+0x19b4>  // b.tcont
  448d84:	ldr	x0, [sp, #24]
  448d88:	ldr	w0, [x0, #140]
  448d8c:	and	w0, w0, #0x4
  448d90:	cmp	w0, #0x0
  448d94:	b.eq	448dac <argp_failure@@Base+0x19c8>  // b.none
  448d98:	ldr	x0, [sp, #16]
  448d9c:	mov	w1, #0x1                   	// #1
  448da0:	str	w1, [x0]
  448da4:	mov	w0, #0x7                   	// #7
  448da8:	b	448e68 <argp_failure@@Base+0x1a84>
  448dac:	mov	w0, #0x1                   	// #1
  448db0:	str	w0, [sp, #44]
  448db4:	ldr	x0, [sp, #24]
  448db8:	ldr	x1, [x0, #128]
  448dbc:	ldr	x0, [sp, #24]
  448dc0:	ldr	w0, [x0, #136]
  448dc4:	add	w3, w0, #0x1
  448dc8:	ldr	x2, [sp, #24]
  448dcc:	str	w3, [x2, #136]
  448dd0:	sxtw	x0, w0
  448dd4:	lsl	x0, x0, #3
  448dd8:	add	x0, x1, x0
  448ddc:	ldr	x1, [x0]
  448de0:	ldr	x0, [sp, #24]
  448de4:	str	x1, [x0, #40]
  448de8:	ldr	w0, [sp, #44]
  448dec:	cmp	w0, #0x1
  448df0:	b.ne	448e10 <argp_failure@@Base+0x1a2c>  // b.any
  448df4:	ldr	x0, [sp, #24]
  448df8:	ldr	x0, [x0, #40]
  448dfc:	mov	x1, x0
  448e00:	ldr	x0, [sp, #24]
  448e04:	bl	4487c4 <argp_failure@@Base+0x13e0>
  448e08:	str	w0, [sp, #40]
  448e0c:	b	448e2c <argp_failure@@Base+0x1a48>
  448e10:	ldr	x0, [sp, #24]
  448e14:	ldr	x0, [x0, #40]
  448e18:	mov	x2, x0
  448e1c:	ldr	w1, [sp, #44]
  448e20:	ldr	x0, [sp, #24]
  448e24:	bl	44894c <argp_failure@@Base+0x1568>
  448e28:	str	w0, [sp, #40]
  448e2c:	ldr	w0, [sp, #40]
  448e30:	cmp	w0, #0x7
  448e34:	b.ne	448e64 <argp_failure@@Base+0x1a80>  // b.any
  448e38:	ldr	w0, [sp, #44]
  448e3c:	cmn	w0, #0x1
  448e40:	b.eq	448e50 <argp_failure@@Base+0x1a6c>  // b.none
  448e44:	ldr	w0, [sp, #44]
  448e48:	cmp	w0, #0x1
  448e4c:	b.ne	448e58 <argp_failure@@Base+0x1a74>  // b.any
  448e50:	mov	w0, #0x1                   	// #1
  448e54:	b	448e5c <argp_failure@@Base+0x1a78>
  448e58:	mov	w0, #0x0                   	// #0
  448e5c:	ldr	x1, [sp, #16]
  448e60:	str	w0, [x1]
  448e64:	ldr	w0, [sp, #40]
  448e68:	ldp	x29, x30, [sp], #48
  448e6c:	ret

0000000000448e70 <argp_parse@@Base>:
  448e70:	stp	x29, x30, [sp, #-320]!
  448e74:	mov	x29, sp
  448e78:	str	x0, [x29, #56]
  448e7c:	str	w1, [x29, #52]
  448e80:	str	x2, [x29, #40]
  448e84:	str	w3, [x29, #48]
  448e88:	str	x4, [x29, #32]
  448e8c:	str	x5, [x29, #24]
  448e90:	str	wzr, [x29, #76]
  448e94:	ldr	w0, [x29, #48]
  448e98:	and	w0, w0, #0x1
  448e9c:	cmp	w0, #0x0
  448ea0:	b.ne	448efc <argp_parse@@Base+0x8c>  // b.any
  448ea4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  448ea8:	add	x0, x0, #0x490
  448eac:	ldr	x0, [x0]
  448eb0:	cmp	x0, #0x0
  448eb4:	b.ne	448ecc <argp_parse@@Base+0x5c>  // b.any
  448eb8:	ldr	x0, [x29, #40]
  448ebc:	ldr	x1, [x0]
  448ec0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  448ec4:	add	x0, x0, #0x490
  448ec8:	str	x1, [x0]
  448ecc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  448ed0:	add	x0, x0, #0x4b8
  448ed4:	ldr	x0, [x0]
  448ed8:	cmp	x0, #0x0
  448edc:	b.ne	448efc <argp_parse@@Base+0x8c>  // b.any
  448ee0:	ldr	x0, [x29, #40]
  448ee4:	ldr	x0, [x0]
  448ee8:	bl	44a0e0 <argp_usage@@Base+0xff4>
  448eec:	mov	x1, x0
  448ef0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  448ef4:	add	x0, x0, #0x4b8
  448ef8:	str	x1, [x0]
  448efc:	ldr	w0, [x29, #48]
  448f00:	and	w0, w0, #0x10
  448f04:	cmp	w0, #0x0
  448f08:	b.ne	448ff0 <argp_parse@@Base+0x180>  // b.any
  448f0c:	sub	sp, sp, #0x80
  448f10:	mov	x0, sp
  448f14:	add	x0, x0, #0xf
  448f18:	lsr	x0, x0, #4
  448f1c:	lsl	x0, x0, #4
  448f20:	str	x0, [x29, #304]
  448f24:	sub	sp, sp, #0x40
  448f28:	mov	x0, sp
  448f2c:	add	x0, x0, #0xf
  448f30:	lsr	x0, x0, #4
  448f34:	lsl	x0, x0, #4
  448f38:	str	x0, [x29, #296]
  448f3c:	mov	x2, #0x38                  	// #56
  448f40:	mov	w1, #0x0                   	// #0
  448f44:	ldr	x0, [x29, #296]
  448f48:	bl	4044d0 <memset@plt>
  448f4c:	ldr	x0, [x29, #296]
  448f50:	ldr	x1, [x29, #304]
  448f54:	str	x1, [x0, #32]
  448f58:	mov	x2, #0x80                  	// #128
  448f5c:	mov	w1, #0x0                   	// #0
  448f60:	ldr	x0, [x29, #304]
  448f64:	bl	4044d0 <memset@plt>
  448f68:	ldr	x0, [x29, #56]
  448f6c:	cmp	x0, #0x0
  448f70:	b.eq	448f88 <argp_parse@@Base+0x118>  // b.none
  448f74:	ldr	x0, [x29, #304]
  448f78:	add	x1, x0, #0x20
  448f7c:	str	x1, [x29, #304]
  448f80:	ldr	x1, [x29, #56]
  448f84:	str	x1, [x0]
  448f88:	ldr	x0, [x29, #304]
  448f8c:	add	x1, x0, #0x20
  448f90:	str	x1, [x29, #304]
  448f94:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448f98:	add	x1, x1, #0x208
  448f9c:	str	x1, [x0]
  448fa0:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  448fa4:	add	x0, x0, #0x438
  448fa8:	ldr	x0, [x0]
  448fac:	cmp	x0, #0x0
  448fb0:	b.ne	448fc8 <argp_parse@@Base+0x158>  // b.any
  448fb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  448fb8:	add	x0, x0, #0xdd8
  448fbc:	ldr	x0, [x0]
  448fc0:	cmp	x0, #0x0
  448fc4:	b.eq	448fe0 <argp_parse@@Base+0x170>  // b.none
  448fc8:	ldr	x0, [x29, #304]
  448fcc:	add	x1, x0, #0x20
  448fd0:	str	x1, [x29, #304]
  448fd4:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2aec0>
  448fd8:	add	x1, x1, #0x2f8
  448fdc:	str	x1, [x0]
  448fe0:	ldr	x0, [x29, #304]
  448fe4:	str	xzr, [x0]
  448fe8:	ldr	x0, [x29, #296]
  448fec:	str	x0, [x29, #56]
  448ff0:	ldr	w1, [x29, #48]
  448ff4:	add	x0, x29, #0x50
  448ff8:	ldr	x5, [x29, #24]
  448ffc:	mov	w4, w1
  449000:	ldr	x3, [x29, #40]
  449004:	ldr	w2, [x29, #52]
  449008:	ldr	x1, [x29, #56]
  44900c:	bl	447fb4 <argp_failure@@Base+0xbd0>
  449010:	str	w0, [x29, #316]
  449014:	ldr	w0, [x29, #316]
  449018:	cmp	w0, #0x0
  44901c:	b.ne	44905c <argp_parse@@Base+0x1ec>  // b.any
  449020:	b	449034 <argp_parse@@Base+0x1c4>
  449024:	add	x1, x29, #0x4c
  449028:	add	x0, x29, #0x50
  44902c:	bl	448b90 <argp_failure@@Base+0x17ac>
  449030:	str	w0, [x29, #316]
  449034:	ldr	w0, [x29, #316]
  449038:	cmp	w0, #0x0
  44903c:	b.eq	449024 <argp_parse@@Base+0x1b4>  // b.none
  449040:	ldr	w1, [x29, #76]
  449044:	add	x0, x29, #0x50
  449048:	ldr	x3, [x29, #32]
  44904c:	mov	w2, w1
  449050:	ldr	w1, [x29, #316]
  449054:	bl	448434 <argp_failure@@Base+0x1050>
  449058:	str	w0, [x29, #316]
  44905c:	ldr	w0, [x29, #316]
  449060:	mov	sp, x29
  449064:	ldp	x29, x30, [sp], #320
  449068:	ret
  44906c:	sub	sp, sp, #0x20
  449070:	str	x0, [sp, #8]
  449074:	str	x1, [sp]
  449078:	ldr	x0, [sp]
  44907c:	cmp	x0, #0x0
  449080:	b.eq	4490e0 <argp_parse@@Base+0x270>  // b.none
  449084:	ldr	x0, [sp]
  449088:	ldr	x0, [x0, #88]
  44908c:	str	x0, [sp, #16]
  449090:	ldr	x0, [sp, #16]
  449094:	ldr	x0, [x0, #80]
  449098:	str	x0, [sp, #24]
  44909c:	b	4490cc <argp_parse@@Base+0x25c>
  4490a0:	ldr	x0, [sp, #24]
  4490a4:	ldr	x0, [x0, #8]
  4490a8:	ldr	x1, [sp, #8]
  4490ac:	cmp	x1, x0
  4490b0:	b.ne	4490c0 <argp_parse@@Base+0x250>  // b.any
  4490b4:	ldr	x0, [sp, #24]
  4490b8:	ldr	x0, [x0, #48]
  4490bc:	b	4490e4 <argp_parse@@Base+0x274>
  4490c0:	ldr	x0, [sp, #24]
  4490c4:	add	x0, x0, #0x48
  4490c8:	str	x0, [sp, #24]
  4490cc:	ldr	x0, [sp, #16]
  4490d0:	ldr	x0, [x0, #88]
  4490d4:	ldr	x1, [sp, #24]
  4490d8:	cmp	x1, x0
  4490dc:	b.cc	4490a0 <argp_parse@@Base+0x230>  // b.lo, b.ul, b.last
  4490e0:	mov	x0, #0x0                   	// #0
  4490e4:	add	sp, sp, #0x20
  4490e8:	ret

00000000004490ec <argp_usage@@Base>:
  4490ec:	stp	x29, x30, [sp, #-32]!
  4490f0:	mov	x29, sp
  4490f4:	str	x0, [sp, #24]
  4490f8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4490fc:	add	x0, x0, #0x498
  449100:	ldr	x0, [x0]
  449104:	mov	w2, #0x106                 	// #262
  449108:	mov	x1, x0
  44910c:	ldr	x0, [sp, #24]
  449110:	bl	447150 <argp_state_help@@Base>
  449114:	nop
  449118:	ldp	x29, x30, [sp], #32
  44911c:	ret
  449120:	stp	x29, x30, [sp, #-48]!
  449124:	mov	x29, sp
  449128:	str	x0, [sp, #24]
  44912c:	ldr	x0, [sp, #24]
  449130:	ldr	w0, [x0, #24]
  449134:	and	w0, w0, #0x8
  449138:	cmp	w0, #0x0
  44913c:	b.eq	449148 <argp_usage@@Base+0x5c>  // b.none
  449140:	mov	w0, #0x0                   	// #0
  449144:	b	44919c <argp_usage@@Base+0xb0>
  449148:	ldr	x0, [sp, #24]
  44914c:	ldr	w0, [x0, #8]
  449150:	str	w0, [sp, #44]
  449154:	ldr	w0, [sp, #44]
  449158:	cmp	w0, #0x0
  44915c:	b.le	449198 <argp_usage@@Base+0xac>
  449160:	ldr	w0, [sp, #44]
  449164:	cmp	w0, #0xff
  449168:	b.gt	449198 <argp_usage@@Base+0xac>
  44916c:	bl	4047f0 <__ctype_b_loc@plt>
  449170:	ldr	x1, [x0]
  449174:	ldrsw	x0, [sp, #44]
  449178:	lsl	x0, x0, #1
  44917c:	add	x0, x1, x0
  449180:	ldrh	w0, [x0]
  449184:	and	w0, w0, #0x4000
  449188:	cmp	w0, #0x0
  44918c:	b.eq	449198 <argp_usage@@Base+0xac>  // b.none
  449190:	mov	w0, #0x1                   	// #1
  449194:	b	44919c <argp_usage@@Base+0xb0>
  449198:	mov	w0, #0x0                   	// #0
  44919c:	ldp	x29, x30, [sp], #48
  4491a0:	ret
  4491a4:	sub	sp, sp, #0x10
  4491a8:	str	x0, [sp, #8]
  4491ac:	ldr	x0, [sp, #8]
  4491b0:	ldr	w0, [x0, #8]
  4491b4:	cmp	w0, #0x0
  4491b8:	b.ne	4491f4 <argp_usage@@Base+0x108>  // b.any
  4491bc:	ldr	x0, [sp, #8]
  4491c0:	ldr	x0, [x0]
  4491c4:	cmp	x0, #0x0
  4491c8:	b.ne	4491f4 <argp_usage@@Base+0x108>  // b.any
  4491cc:	ldr	x0, [sp, #8]
  4491d0:	ldr	x0, [x0, #32]
  4491d4:	cmp	x0, #0x0
  4491d8:	b.ne	4491f4 <argp_usage@@Base+0x108>  // b.any
  4491dc:	ldr	x0, [sp, #8]
  4491e0:	ldr	w0, [x0, #40]
  4491e4:	cmp	w0, #0x0
  4491e8:	b.ne	4491f4 <argp_usage@@Base+0x108>  // b.any
  4491ec:	mov	w0, #0x1                   	// #1
  4491f0:	b	4491f8 <argp_usage@@Base+0x10c>
  4491f4:	mov	w0, #0x0                   	// #0
  4491f8:	add	sp, sp, #0x10
  4491fc:	ret
  449200:	stp	x29, x30, [sp, #-32]!
  449204:	mov	x29, sp
  449208:	str	x0, [sp, #24]
  44920c:	str	x1, [sp, #16]
  449210:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449214:	add	x0, x0, #0xde0
  449218:	ldr	x1, [x0]
  44921c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449220:	add	x0, x0, #0xde8
  449224:	ldr	x0, [x0]
  449228:	mov	x4, x0
  44922c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449230:	add	x3, x0, #0x3a8
  449234:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449238:	add	x2, x0, #0x3b0
  44923c:	ldr	x0, [sp, #24]
  449240:	bl	45b1dc <argp_usage@@Base+0x120f0>
  449244:	nop
  449248:	ldp	x29, x30, [sp], #32
  44924c:	ret
  449250:	sub	sp, sp, #0x10
  449254:	str	x0, [sp, #8]
  449258:	str	x1, [sp]
  44925c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449260:	add	x0, x0, #0xdd8
  449264:	adrp	x1, 449000 <argp_parse@@Base+0x190>
  449268:	add	x1, x1, #0x200
  44926c:	str	x1, [x0]
  449270:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449274:	add	x0, x0, #0xde0
  449278:	ldr	x1, [sp, #8]
  44927c:	str	x1, [x0]
  449280:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449284:	add	x0, x0, #0xde8
  449288:	ldr	x1, [sp]
  44928c:	str	x1, [x0]
  449290:	nop
  449294:	add	sp, sp, #0x10
  449298:	ret
  44929c:	stp	x29, x30, [sp, #-32]!
  4492a0:	mov	x29, sp
  4492a4:	str	x0, [sp, #24]
  4492a8:	ldr	x0, [sp, #24]
  4492ac:	cmp	x0, #0x0
  4492b0:	b.ne	4492c4 <argp_usage@@Base+0x1d8>  // b.any
  4492b4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4492b8:	add	x0, x0, #0x3b8
  4492bc:	bl	404bf0 <getenv@plt>
  4492c0:	str	x0, [sp, #24]
  4492c4:	ldr	x0, [sp, #24]
  4492c8:	cmp	x0, #0x0
  4492cc:	b.eq	449300 <argp_usage@@Base+0x214>  // b.none
  4492d0:	ldr	x0, [sp, #24]
  4492d4:	ldrb	w0, [x0]
  4492d8:	cmp	w0, #0x0
  4492dc:	b.eq	449300 <argp_usage@@Base+0x214>  // b.none
  4492e0:	ldr	x0, [sp, #24]
  4492e4:	bl	44a0e0 <argp_usage@@Base+0xff4>
  4492e8:	mov	x1, x0
  4492ec:	ldr	x0, [sp, #24]
  4492f0:	cmp	x0, x1
  4492f4:	b.ne	449300 <argp_usage@@Base+0x214>  // b.any
  4492f8:	ldr	x0, [sp, #24]
  4492fc:	b	449308 <argp_usage@@Base+0x21c>
  449300:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449304:	add	x0, x0, #0x3d0
  449308:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  44930c:	add	x1, x1, #0xdf0
  449310:	str	x0, [x1]
  449314:	nop
  449318:	ldp	x29, x30, [sp], #32
  44931c:	ret
  449320:	stp	x29, x30, [sp, #-96]!
  449324:	mov	x29, sp
  449328:	str	x0, [sp, #40]
  44932c:	str	x1, [sp, #32]
  449330:	strb	w2, [sp, #31]
  449334:	str	w3, [sp, #24]
  449338:	str	x4, [sp, #16]
  44933c:	ldr	x0, [sp, #40]
  449340:	bl	44a0e0 <argp_usage@@Base+0xff4>
  449344:	str	x0, [sp, #64]
  449348:	ldr	x0, [sp, #64]
  44934c:	bl	44a17c <argp_usage@@Base+0x1090>
  449350:	str	x0, [sp, #88]
  449354:	mov	x0, #0xff                  	// #255
  449358:	str	x0, [sp, #80]
  44935c:	ldr	x0, [sp, #88]
  449360:	cmp	x0, #0xe
  449364:	b.ls	449464 <argp_usage@@Base+0x378>  // b.plast
  449368:	ldr	x0, [sp, #16]
  44936c:	ldr	x0, [x0]
  449370:	cmp	x0, #0x0
  449374:	b.ne	449458 <argp_usage@@Base+0x36c>  // b.any
  449378:	ldr	w0, [sp, #24]
  44937c:	cmp	w0, #0x0
  449380:	b.ge	4493e8 <argp_usage@@Base+0x2fc>  // b.tcont
  449384:	ldr	x0, [sp, #64]
  449388:	ldrh	w0, [x0]
  44938c:	strh	w0, [sp, #56]
  449390:	ldr	x0, [sp, #64]
  449394:	mov	w1, #0x2e                  	// #46
  449398:	strh	w1, [x0]
  44939c:	bl	404bc0 <__errno_location@plt>
  4493a0:	str	wzr, [x0]
  4493a4:	mov	w1, #0x3                   	// #3
  4493a8:	ldr	x0, [sp, #40]
  4493ac:	bl	404290 <pathconf@plt>
  4493b0:	str	x0, [sp, #72]
  4493b4:	bl	404bc0 <__errno_location@plt>
  4493b8:	ldr	w0, [x0]
  4493bc:	cmp	w0, #0x0
  4493c0:	cset	w0, eq  // eq = none
  4493c4:	and	w0, w0, #0xff
  4493c8:	and	x0, x0, #0xff
  4493cc:	ldr	x1, [sp, #72]
  4493d0:	sub	x0, x1, x0
  4493d4:	str	x0, [sp, #72]
  4493d8:	ldrh	w1, [sp, #56]
  4493dc:	ldr	x0, [sp, #64]
  4493e0:	strh	w1, [x0]
  4493e4:	b	449424 <argp_usage@@Base+0x338>
  4493e8:	bl	404bc0 <__errno_location@plt>
  4493ec:	str	wzr, [x0]
  4493f0:	mov	w1, #0x3                   	// #3
  4493f4:	ldr	w0, [sp, #24]
  4493f8:	bl	404760 <fpathconf@plt>
  4493fc:	str	x0, [sp, #72]
  449400:	bl	404bc0 <__errno_location@plt>
  449404:	ldr	w0, [x0]
  449408:	cmp	w0, #0x0
  44940c:	cset	w0, eq  // eq = none
  449410:	and	w0, w0, #0xff
  449414:	and	x0, x0, #0xff
  449418:	ldr	x1, [sp, #72]
  44941c:	sub	x0, x1, x0
  449420:	str	x0, [sp, #72]
  449424:	ldr	x0, [sp, #72]
  449428:	cmp	x0, #0x0
  44942c:	b.ge	44944c <argp_usage@@Base+0x360>  // b.tcont
  449430:	ldr	x0, [sp, #72]
  449434:	cmn	x0, #0x1
  449438:	b.ge	449444 <argp_usage@@Base+0x358>  // b.tcont
  44943c:	mov	x0, #0xe                   	// #14
  449440:	b	449450 <argp_usage@@Base+0x364>
  449444:	mov	x0, #0xffffffffffffffff    	// #-1
  449448:	b	449450 <argp_usage@@Base+0x364>
  44944c:	ldr	x0, [sp, #72]
  449450:	ldr	x1, [sp, #16]
  449454:	str	x0, [x1]
  449458:	ldr	x0, [sp, #16]
  44945c:	ldr	x0, [x0]
  449460:	str	x0, [sp, #80]
  449464:	ldr	x1, [sp, #80]
  449468:	ldr	x0, [sp, #88]
  44946c:	cmp	x1, x0
  449470:	b.cs	4494d0 <argp_usage@@Base+0x3e4>  // b.hs, b.nlast
  449474:	ldr	x1, [sp, #40]
  449478:	ldr	x0, [sp, #32]
  44947c:	add	x1, x1, x0
  449480:	ldr	x0, [sp, #64]
  449484:	sub	x0, x1, x0
  449488:	str	x0, [sp, #88]
  44948c:	ldr	x1, [sp, #80]
  449490:	ldr	x0, [sp, #88]
  449494:	cmp	x1, x0
  449498:	b.hi	4494a8 <argp_usage@@Base+0x3bc>  // b.pmore
  44949c:	ldr	x0, [sp, #80]
  4494a0:	sub	x0, x0, #0x1
  4494a4:	str	x0, [sp, #88]
  4494a8:	ldr	x1, [sp, #64]
  4494ac:	ldr	x0, [sp, #88]
  4494b0:	add	x0, x1, x0
  4494b4:	ldrb	w1, [sp, #31]
  4494b8:	strb	w1, [x0]
  4494bc:	ldr	x0, [sp, #88]
  4494c0:	add	x0, x0, #0x1
  4494c4:	ldr	x1, [sp, #64]
  4494c8:	add	x0, x1, x0
  4494cc:	strb	wzr, [x0]
  4494d0:	nop
  4494d4:	ldp	x29, x30, [sp], #96
  4494d8:	ret
  4494dc:	stp	x29, x30, [sp, #-192]!
  4494e0:	mov	x29, sp
  4494e4:	str	w0, [sp, #76]
  4494e8:	str	x1, [sp, #64]
  4494ec:	str	x2, [sp, #56]
  4494f0:	str	x3, [sp, #48]
  4494f4:	str	x4, [sp, #40]
  4494f8:	str	x5, [sp, #32]
  4494fc:	str	x6, [sp, #24]
  449500:	mov	w0, #0x2                   	// #2
  449504:	str	w0, [sp, #188]
  449508:	ldr	x0, [sp, #32]
  44950c:	ldr	x0, [x0]
  449510:	str	x0, [sp, #176]
  449514:	ldr	x0, [sp, #64]
  449518:	ldr	x0, [x0]
  44951c:	str	x0, [sp, #168]
  449520:	mov	x0, #0x1                   	// #1
  449524:	str	x0, [sp, #160]
  449528:	ldr	x0, [sp, #40]
  44952c:	ldr	x1, [sp, #168]
  449530:	add	x0, x1, x0
  449534:	str	x0, [sp, #120]
  449538:	ldr	x0, [sp, #120]
  44953c:	bl	44a17c <argp_usage@@Base+0x1090>
  449540:	str	x0, [sp, #112]
  449544:	ldr	x0, [sp, #176]
  449548:	cmp	x0, #0x0
  44954c:	b.eq	44955c <argp_usage@@Base+0x470>  // b.none
  449550:	ldr	x0, [sp, #176]
  449554:	bl	404800 <rewinddir@plt>
  449558:	b	44991c <argp_usage@@Base+0x830>
  44955c:	ldr	x0, [sp, #120]
  449560:	ldrh	w0, [x0]
  449564:	strh	w0, [sp, #80]
  449568:	ldr	x0, [sp, #120]
  44956c:	mov	w1, #0x2e                  	// #46
  449570:	strh	w1, [x0]
  449574:	ldr	x3, [sp, #24]
  449578:	mov	w2, #0x0                   	// #0
  44957c:	ldr	x1, [sp, #168]
  449580:	ldr	w0, [sp, #76]
  449584:	bl	451ac8 <argp_usage@@Base+0x89dc>
  449588:	str	x0, [sp, #176]
  44958c:	ldr	x0, [sp, #176]
  449590:	cmp	x0, #0x0
  449594:	b.ne	4495b0 <argp_usage@@Base+0x4c4>  // b.any
  449598:	bl	404bc0 <__errno_location@plt>
  44959c:	ldr	w0, [x0]
  4495a0:	cmp	w0, #0xc
  4495a4:	b.ne	4495b0 <argp_usage@@Base+0x4c4>  // b.any
  4495a8:	mov	w0, #0x3                   	// #3
  4495ac:	str	w0, [sp, #188]
  4495b0:	ldrh	w1, [sp, #80]
  4495b4:	ldr	x0, [sp, #120]
  4495b8:	strh	w1, [x0]
  4495bc:	ldr	x1, [sp, #120]
  4495c0:	ldr	x0, [sp, #112]
  4495c4:	add	x2, x1, x0
  4495c8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4495cc:	add	x1, x0, #0x3d8
  4495d0:	mov	x0, x2
  4495d4:	ldr	w2, [x1]
  4495d8:	str	w2, [x0]
  4495dc:	ldrb	w1, [x1, #4]
  4495e0:	strb	w1, [x0, #4]
  4495e4:	ldr	x0, [sp, #176]
  4495e8:	cmp	x0, #0x0
  4495ec:	b.ne	4495f8 <argp_usage@@Base+0x50c>  // b.any
  4495f0:	ldr	w0, [sp, #188]
  4495f4:	b	449944 <argp_usage@@Base+0x858>
  4495f8:	ldr	x0, [sp, #32]
  4495fc:	ldr	x1, [sp, #176]
  449600:	str	x1, [x0]
  449604:	b	44991c <argp_usage@@Base+0x830>
  449608:	ldr	x0, [sp, #104]
  44960c:	add	x0, x0, #0x13
  449610:	bl	4040b0 <strlen@plt>
  449614:	mov	x1, x0
  449618:	ldr	x0, [sp, #112]
  44961c:	add	x0, x0, #0x4
  449620:	cmp	x1, x0
  449624:	b.cs	44962c <argp_usage@@Base+0x540>  // b.hs, b.nlast
  449628:	b	44991c <argp_usage@@Base+0x830>
  44962c:	ldr	x0, [sp, #40]
  449630:	ldr	x1, [sp, #168]
  449634:	add	x3, x1, x0
  449638:	ldr	x0, [sp, #104]
  44963c:	add	x1, x0, #0x13
  449640:	ldr	x0, [sp, #112]
  449644:	add	x0, x0, #0x2
  449648:	mov	x2, x0
  44964c:	mov	x0, x3
  449650:	bl	404790 <memcmp@plt>
  449654:	cmp	w0, #0x0
  449658:	b.eq	449660 <argp_usage@@Base+0x574>  // b.none
  44965c:	b	44991c <argp_usage@@Base+0x830>
  449660:	ldr	x0, [sp, #104]
  449664:	add	x1, x0, #0x13
  449668:	ldr	x0, [sp, #112]
  44966c:	add	x0, x0, #0x2
  449670:	add	x0, x1, x0
  449674:	str	x0, [sp, #96]
  449678:	ldr	x0, [sp, #96]
  44967c:	ldrb	w0, [x0]
  449680:	cmp	w0, #0x30
  449684:	b.ls	44991c <argp_usage@@Base+0x830>  // b.plast
  449688:	ldr	x0, [sp, #96]
  44968c:	ldrb	w0, [x0]
  449690:	cmp	w0, #0x39
  449694:	b.ls	44969c <argp_usage@@Base+0x5b0>  // b.plast
  449698:	b	44991c <argp_usage@@Base+0x830>
  44969c:	ldr	x0, [sp, #96]
  4496a0:	ldrb	w0, [x0]
  4496a4:	cmp	w0, #0x39
  4496a8:	cset	w0, eq  // eq = none
  4496ac:	strb	w0, [sp, #151]
  4496b0:	mov	x0, #0x1                   	// #1
  4496b4:	str	x0, [sp, #136]
  4496b8:	b	4496f8 <argp_usage@@Base+0x60c>
  4496bc:	ldrb	w0, [sp, #151]
  4496c0:	ldr	x2, [sp, #96]
  4496c4:	ldr	x1, [sp, #136]
  4496c8:	add	x1, x2, x1
  4496cc:	ldrb	w1, [x1]
  4496d0:	cmp	w1, #0x39
  4496d4:	cset	w1, eq  // eq = none
  4496d8:	and	w1, w1, #0xff
  4496dc:	and	w0, w0, w1
  4496e0:	cmp	w0, #0x0
  4496e4:	cset	w0, ne  // ne = any
  4496e8:	strb	w0, [sp, #151]
  4496ec:	ldr	x0, [sp, #136]
  4496f0:	add	x0, x0, #0x1
  4496f4:	str	x0, [sp, #136]
  4496f8:	ldr	x1, [sp, #96]
  4496fc:	ldr	x0, [sp, #136]
  449700:	add	x0, x1, x0
  449704:	ldrb	w0, [x0]
  449708:	sub	w0, w0, #0x30
  44970c:	cmp	w0, #0x9
  449710:	b.ls	4496bc <argp_usage@@Base+0x5d0>  // b.plast
  449714:	ldr	x1, [sp, #96]
  449718:	ldr	x0, [sp, #136]
  44971c:	add	x0, x1, x0
  449720:	ldrb	w0, [x0]
  449724:	cmp	w0, #0x7e
  449728:	b.ne	44991c <argp_usage@@Base+0x830>  // b.any
  44972c:	ldr	x0, [sp, #136]
  449730:	add	x0, x0, #0x1
  449734:	ldr	x1, [sp, #96]
  449738:	add	x0, x1, x0
  44973c:	ldrb	w0, [x0]
  449740:	cmp	w0, #0x0
  449744:	b.ne	44991c <argp_usage@@Base+0x830>  // b.any
  449748:	ldr	x1, [sp, #160]
  44974c:	ldr	x0, [sp, #136]
  449750:	cmp	x1, x0
  449754:	b.cc	449790 <argp_usage@@Base+0x6a4>  // b.lo, b.ul, b.last
  449758:	ldr	x1, [sp, #160]
  44975c:	ldr	x0, [sp, #136]
  449760:	cmp	x1, x0
  449764:	b.ne	44991c <argp_usage@@Base+0x830>  // b.any
  449768:	ldr	x0, [sp, #48]
  44976c:	add	x0, x0, #0x2
  449770:	ldr	x1, [sp, #168]
  449774:	add	x0, x1, x0
  449778:	ldr	x2, [sp, #136]
  44977c:	ldr	x1, [sp, #96]
  449780:	bl	404790 <memcmp@plt>
  449784:	cmp	w0, #0x0
  449788:	b.le	449790 <argp_usage@@Base+0x6a4>
  44978c:	b	44991c <argp_usage@@Base+0x830>
  449790:	ldrb	w0, [sp, #151]
  449794:	ldr	x1, [sp, #136]
  449798:	add	x0, x1, x0
  44979c:	str	x0, [sp, #160]
  4497a0:	ldrb	w0, [sp, #151]
  4497a4:	str	w0, [sp, #188]
  4497a8:	ldr	x1, [sp, #48]
  4497ac:	ldr	x0, [sp, #160]
  4497b0:	add	x0, x1, x0
  4497b4:	add	x0, x0, #0x4
  4497b8:	str	x0, [sp, #128]
  4497bc:	ldr	x1, [sp, #56]
  4497c0:	ldr	x0, [sp, #128]
  4497c4:	cmp	x1, x0
  4497c8:	b.cs	44985c <argp_usage@@Base+0x770>  // b.hs, b.nlast
  4497cc:	mov	x0, #0x0                   	// #0
  4497d0:	ldr	x1, [sp, #128]
  4497d4:	lsl	x1, x1, #1
  4497d8:	ldr	x2, [sp, #128]
  4497dc:	lsr	x2, x2, #63
  4497e0:	cmp	x2, #0x0
  4497e4:	b.eq	4497ec <argp_usage@@Base+0x700>  // b.none
  4497e8:	mov	x0, #0x1                   	// #1
  4497ec:	cmp	x1, #0x0
  4497f0:	b.ge	4497f8 <argp_usage@@Base+0x70c>  // b.tcont
  4497f4:	mov	x0, #0x1                   	// #1
  4497f8:	and	w0, w0, #0x1
  4497fc:	and	w0, w0, #0xff
  449800:	eor	w0, w0, #0x1
  449804:	and	w0, w0, #0xff
  449808:	cmp	w0, #0x0
  44980c:	b.eq	44981c <argp_usage@@Base+0x730>  // b.none
  449810:	ldr	x0, [sp, #128]
  449814:	lsl	x0, x0, #1
  449818:	str	x0, [sp, #128]
  44981c:	ldr	x1, [sp, #128]
  449820:	ldr	x0, [sp, #168]
  449824:	bl	4045e0 <realloc@plt>
  449828:	str	x0, [sp, #88]
  44982c:	ldr	x0, [sp, #88]
  449830:	cmp	x0, #0x0
  449834:	b.ne	44984c <argp_usage@@Base+0x760>  // b.any
  449838:	ldr	x0, [sp, #64]
  44983c:	ldr	x1, [sp, #168]
  449840:	str	x1, [x0]
  449844:	mov	w0, #0x3                   	// #3
  449848:	b	449944 <argp_usage@@Base+0x858>
  44984c:	ldr	x0, [sp, #88]
  449850:	str	x0, [sp, #168]
  449854:	ldr	x0, [sp, #128]
  449858:	str	x0, [sp, #56]
  44985c:	ldr	x1, [sp, #168]
  449860:	ldr	x0, [sp, #48]
  449864:	add	x0, x1, x0
  449868:	str	x0, [sp, #152]
  44986c:	ldr	x0, [sp, #152]
  449870:	add	x1, x0, #0x1
  449874:	str	x1, [sp, #152]
  449878:	mov	w1, #0x2e                  	// #46
  44987c:	strb	w1, [x0]
  449880:	ldr	x0, [sp, #152]
  449884:	add	x1, x0, #0x1
  449888:	str	x1, [sp, #152]
  44988c:	mov	w1, #0x7e                  	// #126
  449890:	strb	w1, [x0]
  449894:	ldr	x0, [sp, #152]
  449898:	mov	w1, #0x30                  	// #48
  44989c:	strb	w1, [x0]
  4498a0:	ldrb	w0, [sp, #151]
  4498a4:	ldr	x1, [sp, #152]
  4498a8:	add	x0, x1, x0
  4498ac:	str	x0, [sp, #152]
  4498b0:	ldr	x0, [sp, #136]
  4498b4:	add	x0, x0, #0x2
  4498b8:	mov	x2, x0
  4498bc:	ldr	x1, [sp, #96]
  4498c0:	ldr	x0, [sp, #152]
  4498c4:	bl	404020 <memcpy@plt>
  4498c8:	ldr	x1, [sp, #152]
  4498cc:	ldr	x0, [sp, #136]
  4498d0:	add	x0, x1, x0
  4498d4:	str	x0, [sp, #152]
  4498d8:	b	4498e8 <argp_usage@@Base+0x7fc>
  4498dc:	ldr	x0, [sp, #152]
  4498e0:	mov	w1, #0x30                  	// #48
  4498e4:	strb	w1, [x0]
  4498e8:	ldr	x0, [sp, #152]
  4498ec:	sub	x0, x0, #0x1
  4498f0:	str	x0, [sp, #152]
  4498f4:	ldr	x0, [sp, #152]
  4498f8:	ldrb	w0, [x0]
  4498fc:	cmp	w0, #0x39
  449900:	b.eq	4498dc <argp_usage@@Base+0x7f0>  // b.none
  449904:	ldr	x0, [sp, #152]
  449908:	ldrb	w0, [x0]
  44990c:	add	w0, w0, #0x1
  449910:	and	w1, w0, #0xff
  449914:	ldr	x0, [sp, #152]
  449918:	strb	w1, [x0]
  44991c:	ldr	x0, [sp, #176]
  449920:	bl	4045d0 <readdir@plt>
  449924:	str	x0, [sp, #104]
  449928:	ldr	x0, [sp, #104]
  44992c:	cmp	x0, #0x0
  449930:	b.ne	449608 <argp_usage@@Base+0x51c>  // b.any
  449934:	ldr	x0, [sp, #64]
  449938:	ldr	x1, [sp, #168]
  44993c:	str	x1, [x0]
  449940:	ldr	w0, [sp, #188]
  449944:	ldp	x29, x30, [sp], #192
  449948:	ret
  44994c:	stp	x29, x30, [sp, #-128]!
  449950:	mov	x29, sp
  449954:	str	w0, [sp, #44]
  449958:	str	x1, [sp, #32]
  44995c:	str	w2, [sp, #40]
  449960:	strb	w3, [sp, #31]
  449964:	ldr	x0, [sp, #32]
  449968:	bl	44a0e0 <argp_usage@@Base+0xff4>
  44996c:	mov	x1, x0
  449970:	ldr	x0, [sp, #32]
  449974:	sub	x0, x1, x0
  449978:	str	x0, [sp, #120]
  44997c:	ldr	x0, [sp, #120]
  449980:	ldr	x1, [sp, #32]
  449984:	add	x0, x1, x0
  449988:	bl	4040b0 <strlen@plt>
  44998c:	mov	x1, x0
  449990:	ldr	x0, [sp, #120]
  449994:	add	x0, x1, x0
  449998:	str	x0, [sp, #104]
  44999c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4499a0:	add	x0, x0, #0xdf0
  4499a4:	ldr	x0, [x0]
  4499a8:	cmp	x0, #0x0
  4499ac:	b.ne	4499b8 <argp_usage@@Base+0x8cc>  // b.any
  4499b0:	mov	x0, #0x0                   	// #0
  4499b4:	bl	44929c <argp_usage@@Base+0x1b0>
  4499b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4499bc:	add	x0, x0, #0xdf0
  4499c0:	ldr	x0, [x0]
  4499c4:	bl	4040b0 <strlen@plt>
  4499c8:	add	x0, x0, #0x1
  4499cc:	str	x0, [sp, #96]
  4499d0:	ldr	x0, [sp, #96]
  4499d4:	str	x0, [sp, #112]
  4499d8:	ldr	x0, [sp, #112]
  4499dc:	cmp	x0, #0x8
  4499e0:	b.hi	4499ec <argp_usage@@Base+0x900>  // b.pmore
  4499e4:	mov	x0, #0x9                   	// #9
  4499e8:	str	x0, [sp, #112]
  4499ec:	ldr	x1, [sp, #104]
  4499f0:	ldr	x0, [sp, #112]
  4499f4:	add	x0, x1, x0
  4499f8:	add	x0, x0, #0x1
  4499fc:	str	x0, [sp, #88]
  449a00:	ldr	x0, [sp, #88]
  449a04:	bl	4043f0 <malloc@plt>
  449a08:	str	x0, [sp, #72]
  449a0c:	ldr	x0, [sp, #72]
  449a10:	cmp	x0, #0x0
  449a14:	b.ne	449a20 <argp_usage@@Base+0x934>  // b.any
  449a18:	ldr	x0, [sp, #72]
  449a1c:	b	449c48 <argp_usage@@Base+0xb5c>
  449a20:	str	xzr, [sp, #64]
  449a24:	mov	w0, #0xffffffff            	// #-1
  449a28:	str	w0, [sp, #60]
  449a2c:	str	xzr, [sp, #48]
  449a30:	ldr	x3, [sp, #72]
  449a34:	ldr	x0, [sp, #104]
  449a38:	add	x0, x0, #0x1
  449a3c:	mov	x2, x0
  449a40:	ldr	x1, [sp, #32]
  449a44:	mov	x0, x3
  449a48:	bl	404020 <memcpy@plt>
  449a4c:	ldr	w0, [sp, #40]
  449a50:	cmp	w0, #0x1
  449a54:	b.ne	449a84 <argp_usage@@Base+0x998>  // b.any
  449a58:	ldr	x1, [sp, #72]
  449a5c:	ldr	x0, [sp, #104]
  449a60:	add	x3, x1, x0
  449a64:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449a68:	add	x0, x0, #0xdf0
  449a6c:	ldr	x0, [x0]
  449a70:	ldr	x2, [sp, #96]
  449a74:	mov	x1, x0
  449a78:	mov	x0, x3
  449a7c:	bl	404020 <memcpy@plt>
  449a80:	b	449b6c <argp_usage@@Base+0xa80>
  449a84:	ldr	x1, [sp, #88]
  449a88:	add	x3, sp, #0x3c
  449a8c:	add	x2, sp, #0x40
  449a90:	add	x0, sp, #0x48
  449a94:	mov	x6, x3
  449a98:	mov	x5, x2
  449a9c:	ldr	x4, [sp, #120]
  449aa0:	ldr	x3, [sp, #104]
  449aa4:	mov	x2, x1
  449aa8:	mov	x1, x0
  449aac:	ldr	w0, [sp, #44]
  449ab0:	bl	4494dc <argp_usage@@Base+0x3f0>
  449ab4:	cmp	w0, #0x3
  449ab8:	b.eq	449b48 <argp_usage@@Base+0xa5c>  // b.none
  449abc:	cmp	w0, #0x3
  449ac0:	b.hi	449b6c <argp_usage@@Base+0xa80>  // b.pmore
  449ac4:	cmp	w0, #0x2
  449ac8:	b.eq	449ae8 <argp_usage@@Base+0x9fc>  // b.none
  449acc:	cmp	w0, #0x2
  449ad0:	b.hi	449b6c <argp_usage@@Base+0xa80>  // b.pmore
  449ad4:	cmp	w0, #0x0
  449ad8:	b.eq	449b68 <argp_usage@@Base+0xa7c>  // b.none
  449adc:	cmp	w0, #0x1
  449ae0:	b.eq	449b24 <argp_usage@@Base+0xa38>  // b.none
  449ae4:	b	449b6c <argp_usage@@Base+0xa80>
  449ae8:	ldr	w0, [sp, #40]
  449aec:	cmp	w0, #0x2
  449af0:	b.ne	449b24 <argp_usage@@Base+0xa38>  // b.any
  449af4:	mov	w0, #0x1                   	// #1
  449af8:	str	w0, [sp, #40]
  449afc:	ldr	x1, [sp, #72]
  449b00:	ldr	x0, [sp, #104]
  449b04:	add	x3, x1, x0
  449b08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449b0c:	add	x0, x0, #0xdf0
  449b10:	ldr	x0, [x0]
  449b14:	ldr	x2, [sp, #96]
  449b18:	mov	x1, x0
  449b1c:	mov	x0, x3
  449b20:	bl	404020 <memcpy@plt>
  449b24:	ldr	x0, [sp, #72]
  449b28:	ldr	w1, [sp, #60]
  449b2c:	add	x2, sp, #0x30
  449b30:	mov	x4, x2
  449b34:	mov	w3, w1
  449b38:	mov	w2, #0x7e                  	// #126
  449b3c:	ldr	x1, [sp, #104]
  449b40:	bl	449320 <argp_usage@@Base+0x234>
  449b44:	b	449b6c <argp_usage@@Base+0xa80>
  449b48:	ldr	x0, [sp, #72]
  449b4c:	bl	404880 <free@plt>
  449b50:	bl	404bc0 <__errno_location@plt>
  449b54:	mov	x1, x0
  449b58:	mov	w0, #0xc                   	// #12
  449b5c:	str	w0, [x1]
  449b60:	mov	x0, #0x0                   	// #0
  449b64:	b	449c48 <argp_usage@@Base+0xb5c>
  449b68:	nop
  449b6c:	ldrb	w0, [sp, #31]
  449b70:	eor	w0, w0, #0x1
  449b74:	and	w0, w0, #0xff
  449b78:	cmp	w0, #0x0
  449b7c:	b.ne	449c24 <argp_usage@@Base+0xb38>  // b.any
  449b80:	ldr	w0, [sp, #60]
  449b84:	cmp	w0, #0x0
  449b88:	b.ge	449b98 <argp_usage@@Base+0xaac>  // b.tcont
  449b8c:	mov	w0, #0xffffff9c            	// #-100
  449b90:	str	w0, [sp, #60]
  449b94:	str	xzr, [sp, #120]
  449b98:	ldr	w0, [sp, #40]
  449b9c:	cmp	w0, #0x1
  449ba0:	cset	w0, ne  // ne = any
  449ba4:	and	w0, w0, #0xff
  449ba8:	str	w0, [sp, #84]
  449bac:	ldr	w2, [sp, #60]
  449bb0:	ldr	x1, [sp, #72]
  449bb4:	ldr	x0, [sp, #120]
  449bb8:	add	x0, x1, x0
  449bbc:	ldr	w4, [sp, #84]
  449bc0:	mov	x3, x0
  449bc4:	ldr	x1, [sp, #32]
  449bc8:	mov	w0, #0xffffff9c            	// #-100
  449bcc:	bl	459f80 <argp_usage@@Base+0x10e94>
  449bd0:	cmp	w0, #0x0
  449bd4:	b.eq	449c2c <argp_usage@@Base+0xb40>  // b.none
  449bd8:	bl	404bc0 <__errno_location@plt>
  449bdc:	ldr	w0, [x0]
  449be0:	str	w0, [sp, #80]
  449be4:	ldr	w0, [sp, #80]
  449be8:	cmp	w0, #0x11
  449bec:	b.eq	449a30 <argp_usage@@Base+0x944>  // b.none
  449bf0:	ldr	x0, [sp, #64]
  449bf4:	cmp	x0, #0x0
  449bf8:	b.eq	449c04 <argp_usage@@Base+0xb18>  // b.none
  449bfc:	ldr	x0, [sp, #64]
  449c00:	bl	404630 <closedir@plt>
  449c04:	ldr	x0, [sp, #72]
  449c08:	bl	404880 <free@plt>
  449c0c:	bl	404bc0 <__errno_location@plt>
  449c10:	mov	x1, x0
  449c14:	ldr	w0, [sp, #80]
  449c18:	str	w0, [x1]
  449c1c:	mov	x0, #0x0                   	// #0
  449c20:	b	449c48 <argp_usage@@Base+0xb5c>
  449c24:	nop
  449c28:	b	449c30 <argp_usage@@Base+0xb44>
  449c2c:	nop
  449c30:	ldr	x0, [sp, #64]
  449c34:	cmp	x0, #0x0
  449c38:	b.eq	449c44 <argp_usage@@Base+0xb58>  // b.none
  449c3c:	ldr	x0, [sp, #64]
  449c40:	bl	404630 <closedir@plt>
  449c44:	ldr	x0, [sp, #72]
  449c48:	ldp	x29, x30, [sp], #128
  449c4c:	ret
  449c50:	stp	x29, x30, [sp, #-48]!
  449c54:	mov	x29, sp
  449c58:	str	w0, [sp, #28]
  449c5c:	str	x1, [sp, #16]
  449c60:	str	w2, [sp, #24]
  449c64:	mov	w3, #0x0                   	// #0
  449c68:	ldr	w2, [sp, #24]
  449c6c:	ldr	x1, [sp, #16]
  449c70:	ldr	w0, [sp, #28]
  449c74:	bl	44994c <argp_usage@@Base+0x860>
  449c78:	str	x0, [sp, #40]
  449c7c:	ldr	x0, [sp, #40]
  449c80:	cmp	x0, #0x0
  449c84:	b.ne	449c8c <argp_usage@@Base+0xba0>  // b.any
  449c88:	bl	412b2c <wcrtomb@plt+0xde1c>
  449c8c:	ldr	x0, [sp, #40]
  449c90:	ldp	x29, x30, [sp], #48
  449c94:	ret
  449c98:	stp	x29, x30, [sp, #-32]!
  449c9c:	mov	x29, sp
  449ca0:	str	x0, [sp, #24]
  449ca4:	str	x1, [sp, #16]
  449ca8:	ldr	x0, [sp, #16]
  449cac:	cmp	x0, #0x0
  449cb0:	b.eq	449cc4 <argp_usage@@Base+0xbd8>  // b.none
  449cb4:	ldr	x0, [sp, #16]
  449cb8:	ldrb	w0, [x0]
  449cbc:	cmp	w0, #0x0
  449cc0:	b.ne	449ccc <argp_usage@@Base+0xbe0>  // b.any
  449cc4:	mov	w0, #0x2                   	// #2
  449cc8:	b	449d0c <argp_usage@@Base+0xc20>
  449ccc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449cd0:	add	x0, x0, #0x3e8
  449cd4:	ldr	x0, [x0]
  449cd8:	mov	x5, x0
  449cdc:	mov	x4, #0x4                   	// #4
  449ce0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449ce4:	add	x3, x0, #0x478
  449ce8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449cec:	add	x2, x0, #0x430
  449cf0:	ldr	x1, [sp, #16]
  449cf4:	ldr	x0, [sp, #24]
  449cf8:	bl	443a80 <wcrtomb@plt+0x3ed70>
  449cfc:	mov	x1, x0
  449d00:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449d04:	add	x0, x0, #0x478
  449d08:	ldr	w0, [x0, x1, lsl #2]
  449d0c:	ldp	x29, x30, [sp], #32
  449d10:	ret
  449d14:	stp	x29, x30, [sp, #-32]!
  449d18:	mov	x29, sp
  449d1c:	str	x0, [sp, #24]
  449d20:	str	x1, [sp, #16]
  449d24:	ldr	x0, [sp, #16]
  449d28:	cmp	x0, #0x0
  449d2c:	b.eq	449d50 <argp_usage@@Base+0xc64>  // b.none
  449d30:	ldr	x0, [sp, #16]
  449d34:	ldrb	w0, [x0]
  449d38:	cmp	w0, #0x0
  449d3c:	b.eq	449d50 <argp_usage@@Base+0xc64>  // b.none
  449d40:	ldr	x1, [sp, #16]
  449d44:	ldr	x0, [sp, #24]
  449d48:	bl	449c98 <argp_usage@@Base+0xbac>
  449d4c:	b	449d6c <argp_usage@@Base+0xc80>
  449d50:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449d54:	add	x0, x0, #0x498
  449d58:	bl	404bf0 <getenv@plt>
  449d5c:	mov	x1, x0
  449d60:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449d64:	add	x0, x0, #0x4a8
  449d68:	bl	449c98 <argp_usage@@Base+0xbac>
  449d6c:	ldp	x29, x30, [sp], #32
  449d70:	ret
  449d74:	sub	sp, sp, #0x10
  449d78:	str	x0, [sp, #8]
  449d7c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449d80:	add	x0, x0, #0xdf8
  449d84:	ldr	x1, [sp, #8]
  449d88:	str	x1, [x0]
  449d8c:	nop
  449d90:	add	sp, sp, #0x10
  449d94:	ret
  449d98:	sub	sp, sp, #0x10
  449d9c:	strb	w0, [sp, #15]
  449da0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449da4:	add	x0, x0, #0xe00
  449da8:	ldrb	w1, [sp, #15]
  449dac:	strb	w1, [x0]
  449db0:	nop
  449db4:	add	sp, sp, #0x10
  449db8:	ret
  449dbc:	stp	x29, x30, [sp, #-48]!
  449dc0:	mov	x29, sp
  449dc4:	str	x19, [sp, #16]
  449dc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449dcc:	add	x0, x0, #0x4a0
  449dd0:	ldr	x0, [x0]
  449dd4:	bl	476b14 <_obstack_memory_used@@Base+0x199d4>
  449dd8:	cmp	w0, #0x0
  449ddc:	b.eq	449e94 <argp_usage@@Base+0xda8>  // b.none
  449de0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449de4:	add	x0, x0, #0xe00
  449de8:	ldrb	w0, [x0]
  449dec:	eor	w0, w0, #0x1
  449df0:	and	w0, w0, #0xff
  449df4:	cmp	w0, #0x0
  449df8:	b.ne	449e0c <argp_usage@@Base+0xd20>  // b.any
  449dfc:	bl	404bc0 <__errno_location@plt>
  449e00:	ldr	w0, [x0]
  449e04:	cmp	w0, #0x20
  449e08:	b.eq	449e94 <argp_usage@@Base+0xda8>  // b.none
  449e0c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449e10:	add	x0, x0, #0x4c0
  449e14:	bl	404c60 <gettext@plt>
  449e18:	str	x0, [sp, #40]
  449e1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449e20:	add	x0, x0, #0xdf8
  449e24:	ldr	x0, [x0]
  449e28:	cmp	x0, #0x0
  449e2c:	b.eq	449e68 <argp_usage@@Base+0xd7c>  // b.none
  449e30:	bl	404bc0 <__errno_location@plt>
  449e34:	ldr	w19, [x0]
  449e38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449e3c:	add	x0, x0, #0xdf8
  449e40:	ldr	x0, [x0]
  449e44:	bl	459cd8 <argp_usage@@Base+0x10bec>
  449e48:	ldr	x4, [sp, #40]
  449e4c:	mov	x3, x0
  449e50:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449e54:	add	x2, x0, #0x4d0
  449e58:	mov	w1, w19
  449e5c:	mov	w0, #0x0                   	// #0
  449e60:	bl	404100 <error@plt>
  449e64:	b	449e84 <argp_usage@@Base+0xd98>
  449e68:	bl	404bc0 <__errno_location@plt>
  449e6c:	ldr	w1, [x0]
  449e70:	ldr	x3, [sp, #40]
  449e74:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  449e78:	add	x2, x0, #0x4d8
  449e7c:	mov	w0, #0x0                   	// #0
  449e80:	bl	404100 <error@plt>
  449e84:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449e88:	add	x0, x0, #0x418
  449e8c:	ldr	w0, [x0]
  449e90:	bl	404050 <_exit@plt>
  449e94:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449e98:	add	x0, x0, #0x498
  449e9c:	ldr	x0, [x0]
  449ea0:	bl	476b14 <_obstack_memory_used@@Base+0x199d4>
  449ea4:	cmp	w0, #0x0
  449ea8:	b.eq	449ebc <argp_usage@@Base+0xdd0>  // b.none
  449eac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  449eb0:	add	x0, x0, #0x418
  449eb4:	ldr	w0, [x0]
  449eb8:	bl	404050 <_exit@plt>
  449ebc:	nop
  449ec0:	ldr	x19, [sp, #16]
  449ec4:	ldp	x29, x30, [sp], #48
  449ec8:	ret
  449ecc:	stp	x29, x30, [sp, #-48]!
  449ed0:	mov	x29, sp
  449ed4:	str	x0, [sp, #24]
  449ed8:	ldr	x0, [sp, #24]
  449edc:	bl	44a038 <argp_usage@@Base+0xf4c>
  449ee0:	str	x0, [sp, #40]
  449ee4:	ldr	x0, [sp, #40]
  449ee8:	cmp	x0, #0x0
  449eec:	b.ne	449ef4 <argp_usage@@Base+0xe08>  // b.any
  449ef0:	bl	412b2c <wcrtomb@plt+0xde1c>
  449ef4:	ldr	x0, [sp, #40]
  449ef8:	ldp	x29, x30, [sp], #48
  449efc:	ret
  449f00:	stp	x29, x30, [sp, #-48]!
  449f04:	mov	x29, sp
  449f08:	str	x0, [sp, #24]
  449f0c:	ldr	x0, [sp, #24]
  449f10:	bl	44a0e0 <argp_usage@@Base+0xff4>
  449f14:	str	x0, [sp, #32]
  449f18:	ldr	x0, [sp, #32]
  449f1c:	ldrb	w0, [x0]
  449f20:	cmp	w0, #0x0
  449f24:	b.ne	449f40 <argp_usage@@Base+0xe54>  // b.any
  449f28:	ldr	x0, [sp, #24]
  449f2c:	bl	44a17c <argp_usage@@Base+0x1090>
  449f30:	mov	x1, x0
  449f34:	ldr	x0, [sp, #24]
  449f38:	bl	45b8c8 <argp_usage@@Base+0x127dc>
  449f3c:	b	449f7c <argp_usage@@Base+0xe90>
  449f40:	ldr	x0, [sp, #32]
  449f44:	bl	44a17c <argp_usage@@Base+0x1090>
  449f48:	str	x0, [sp, #40]
  449f4c:	ldr	x1, [sp, #32]
  449f50:	ldr	x0, [sp, #40]
  449f54:	add	x0, x1, x0
  449f58:	ldrb	w0, [x0]
  449f5c:	cmp	w0, #0x2f
  449f60:	b.ne	449f70 <argp_usage@@Base+0xe84>  // b.any
  449f64:	ldr	x0, [sp, #40]
  449f68:	add	x0, x0, #0x1
  449f6c:	str	x0, [sp, #40]
  449f70:	ldr	x1, [sp, #40]
  449f74:	ldr	x0, [sp, #32]
  449f78:	bl	45b8c8 <argp_usage@@Base+0x127dc>
  449f7c:	ldp	x29, x30, [sp], #48
  449f80:	ret
  449f84:	stp	x29, x30, [sp, #-48]!
  449f88:	mov	x29, sp
  449f8c:	str	x0, [sp, #24]
  449f90:	str	xzr, [sp, #32]
  449f94:	ldr	x0, [sp, #32]
  449f98:	cmp	x0, #0x0
  449f9c:	b.ne	449fc0 <argp_usage@@Base+0xed4>  // b.any
  449fa0:	ldr	x0, [sp, #24]
  449fa4:	ldrb	w0, [x0]
  449fa8:	cmp	w0, #0x2f
  449fac:	b.ne	449fb8 <argp_usage@@Base+0xecc>  // b.any
  449fb0:	mov	x0, #0x1                   	// #1
  449fb4:	b	449fc4 <argp_usage@@Base+0xed8>
  449fb8:	mov	x0, #0x0                   	// #0
  449fbc:	b	449fc4 <argp_usage@@Base+0xed8>
  449fc0:	mov	x0, #0x0                   	// #0
  449fc4:	ldr	x1, [sp, #32]
  449fc8:	add	x0, x1, x0
  449fcc:	str	x0, [sp, #32]
  449fd0:	ldr	x0, [sp, #24]
  449fd4:	bl	44a0e0 <argp_usage@@Base+0xff4>
  449fd8:	mov	x1, x0
  449fdc:	ldr	x0, [sp, #24]
  449fe0:	sub	x0, x1, x0
  449fe4:	str	x0, [sp, #40]
  449fe8:	b	44a014 <argp_usage@@Base+0xf28>
  449fec:	ldr	x0, [sp, #40]
  449ff0:	sub	x0, x0, #0x1
  449ff4:	ldr	x1, [sp, #24]
  449ff8:	add	x0, x1, x0
  449ffc:	ldrb	w0, [x0]
  44a000:	cmp	w0, #0x2f
  44a004:	b.ne	44a028 <argp_usage@@Base+0xf3c>  // b.any
  44a008:	ldr	x0, [sp, #40]
  44a00c:	sub	x0, x0, #0x1
  44a010:	str	x0, [sp, #40]
  44a014:	ldr	x1, [sp, #32]
  44a018:	ldr	x0, [sp, #40]
  44a01c:	cmp	x1, x0
  44a020:	b.cc	449fec <argp_usage@@Base+0xf00>  // b.lo, b.ul, b.last
  44a024:	b	44a02c <argp_usage@@Base+0xf40>
  44a028:	nop
  44a02c:	ldr	x0, [sp, #40]
  44a030:	ldp	x29, x30, [sp], #48
  44a034:	ret
  44a038:	stp	x29, x30, [sp, #-64]!
  44a03c:	mov	x29, sp
  44a040:	str	x0, [sp, #24]
  44a044:	ldr	x0, [sp, #24]
  44a048:	bl	449f84 <argp_usage@@Base+0xe98>
  44a04c:	str	x0, [sp, #56]
  44a050:	ldr	x0, [sp, #56]
  44a054:	cmp	x0, #0x0
  44a058:	cset	w0, eq  // eq = none
  44a05c:	strb	w0, [sp, #55]
  44a060:	ldrb	w1, [sp, #55]
  44a064:	ldr	x0, [sp, #56]
  44a068:	add	x0, x1, x0
  44a06c:	add	x0, x0, #0x1
  44a070:	bl	4043f0 <malloc@plt>
  44a074:	str	x0, [sp, #40]
  44a078:	ldr	x0, [sp, #40]
  44a07c:	cmp	x0, #0x0
  44a080:	b.ne	44a08c <argp_usage@@Base+0xfa0>  // b.any
  44a084:	mov	x0, #0x0                   	// #0
  44a088:	b	44a0d8 <argp_usage@@Base+0xfec>
  44a08c:	ldr	x2, [sp, #56]
  44a090:	ldr	x1, [sp, #24]
  44a094:	ldr	x0, [sp, #40]
  44a098:	bl	404020 <memcpy@plt>
  44a09c:	ldrb	w0, [sp, #55]
  44a0a0:	cmp	w0, #0x0
  44a0a4:	b.eq	44a0c4 <argp_usage@@Base+0xfd8>  // b.none
  44a0a8:	ldr	x0, [sp, #56]
  44a0ac:	add	x1, x0, #0x1
  44a0b0:	str	x1, [sp, #56]
  44a0b4:	ldr	x1, [sp, #40]
  44a0b8:	add	x0, x1, x0
  44a0bc:	mov	w1, #0x2e                  	// #46
  44a0c0:	strb	w1, [x0]
  44a0c4:	ldr	x1, [sp, #40]
  44a0c8:	ldr	x0, [sp, #56]
  44a0cc:	add	x0, x1, x0
  44a0d0:	strb	wzr, [x0]
  44a0d4:	ldr	x0, [sp, #40]
  44a0d8:	ldp	x29, x30, [sp], #64
  44a0dc:	ret
  44a0e0:	sub	sp, sp, #0x30
  44a0e4:	str	x0, [sp, #8]
  44a0e8:	ldr	x0, [sp, #8]
  44a0ec:	str	x0, [sp, #40]
  44a0f0:	strb	wzr, [sp, #31]
  44a0f4:	b	44a104 <argp_usage@@Base+0x1018>
  44a0f8:	ldr	x0, [sp, #40]
  44a0fc:	add	x0, x0, #0x1
  44a100:	str	x0, [sp, #40]
  44a104:	ldr	x0, [sp, #40]
  44a108:	ldrb	w0, [x0]
  44a10c:	cmp	w0, #0x2f
  44a110:	b.eq	44a0f8 <argp_usage@@Base+0x100c>  // b.none
  44a114:	ldr	x0, [sp, #40]
  44a118:	str	x0, [sp, #32]
  44a11c:	b	44a160 <argp_usage@@Base+0x1074>
  44a120:	ldr	x0, [sp, #32]
  44a124:	ldrb	w0, [x0]
  44a128:	cmp	w0, #0x2f
  44a12c:	b.ne	44a13c <argp_usage@@Base+0x1050>  // b.any
  44a130:	mov	w0, #0x1                   	// #1
  44a134:	strb	w0, [sp, #31]
  44a138:	b	44a154 <argp_usage@@Base+0x1068>
  44a13c:	ldrb	w0, [sp, #31]
  44a140:	cmp	w0, #0x0
  44a144:	b.eq	44a154 <argp_usage@@Base+0x1068>  // b.none
  44a148:	ldr	x0, [sp, #32]
  44a14c:	str	x0, [sp, #40]
  44a150:	strb	wzr, [sp, #31]
  44a154:	ldr	x0, [sp, #32]
  44a158:	add	x0, x0, #0x1
  44a15c:	str	x0, [sp, #32]
  44a160:	ldr	x0, [sp, #32]
  44a164:	ldrb	w0, [x0]
  44a168:	cmp	w0, #0x0
  44a16c:	b.ne	44a120 <argp_usage@@Base+0x1034>  // b.any
  44a170:	ldr	x0, [sp, #40]
  44a174:	add	sp, sp, #0x30
  44a178:	ret
  44a17c:	stp	x29, x30, [sp, #-48]!
  44a180:	mov	x29, sp
  44a184:	str	x0, [sp, #24]
  44a188:	str	xzr, [sp, #32]
  44a18c:	ldr	x0, [sp, #24]
  44a190:	bl	4040b0 <strlen@plt>
  44a194:	str	x0, [sp, #40]
  44a198:	b	44a1a8 <argp_usage@@Base+0x10bc>
  44a19c:	ldr	x0, [sp, #40]
  44a1a0:	sub	x0, x0, #0x1
  44a1a4:	str	x0, [sp, #40]
  44a1a8:	ldr	x0, [sp, #40]
  44a1ac:	cmp	x0, #0x1
  44a1b0:	b.ls	44a1d0 <argp_usage@@Base+0x10e4>  // b.plast
  44a1b4:	ldr	x0, [sp, #40]
  44a1b8:	sub	x0, x0, #0x1
  44a1bc:	ldr	x1, [sp, #24]
  44a1c0:	add	x0, x1, x0
  44a1c4:	ldrb	w0, [x0]
  44a1c8:	cmp	w0, #0x2f
  44a1cc:	b.eq	44a19c <argp_usage@@Base+0x10b0>  // b.none
  44a1d0:	ldr	x0, [sp, #40]
  44a1d4:	ldp	x29, x30, [sp], #48
  44a1d8:	ret
  44a1dc:	stp	x29, x30, [sp, #-64]!
  44a1e0:	mov	x29, sp
  44a1e4:	str	x0, [sp, #24]
  44a1e8:	ldr	x0, [sp, #24]
  44a1ec:	bl	44a0e0 <argp_usage@@Base+0xff4>
  44a1f0:	str	x0, [sp, #56]
  44a1f4:	ldr	x0, [sp, #56]
  44a1f8:	ldrb	w0, [x0]
  44a1fc:	cmp	w0, #0x0
  44a200:	b.ne	44a20c <argp_usage@@Base+0x1120>  // b.any
  44a204:	ldr	x0, [sp, #24]
  44a208:	str	x0, [sp, #56]
  44a20c:	ldr	x0, [sp, #56]
  44a210:	bl	44a17c <argp_usage@@Base+0x1090>
  44a214:	mov	x1, x0
  44a218:	ldr	x0, [sp, #56]
  44a21c:	add	x0, x0, x1
  44a220:	str	x0, [sp, #48]
  44a224:	ldr	x0, [sp, #48]
  44a228:	ldrb	w0, [x0]
  44a22c:	cmp	w0, #0x0
  44a230:	cset	w0, ne  // ne = any
  44a234:	strb	w0, [sp, #47]
  44a238:	ldr	x0, [sp, #48]
  44a23c:	strb	wzr, [x0]
  44a240:	ldrb	w0, [sp, #47]
  44a244:	ldp	x29, x30, [sp], #64
  44a248:	ret
  44a24c:	stp	x29, x30, [sp, #-48]!
  44a250:	mov	x29, sp
  44a254:	str	x0, [sp, #24]
  44a258:	str	x1, [sp, #16]
  44a25c:	mov	x0, #0x10                  	// #16
  44a260:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  44a264:	str	x0, [sp, #40]
  44a268:	ldr	x0, [sp, #40]
  44a26c:	ldr	x1, [sp, #16]
  44a270:	str	x1, [x0, #8]
  44a274:	ldr	x0, [sp, #24]
  44a278:	ldr	x1, [x0, #8]
  44a27c:	ldr	x0, [sp, #40]
  44a280:	str	x1, [x0]
  44a284:	ldr	x0, [sp, #24]
  44a288:	ldr	x1, [sp, #40]
  44a28c:	str	x1, [x0, #8]
  44a290:	nop
  44a294:	ldp	x29, x30, [sp], #48
  44a298:	ret
  44a29c:	sub	sp, sp, #0x10
  44a2a0:	str	x0, [sp, #8]
  44a2a4:	str	w1, [sp, #4]
  44a2a8:	ldr	x0, [sp, #8]
  44a2ac:	add	x1, x0, #0x1
  44a2b0:	str	x1, [sp, #8]
  44a2b4:	ldrb	w0, [x0]
  44a2b8:	cmp	w0, #0x7d
  44a2bc:	b.eq	44a384 <argp_usage@@Base+0x1298>  // b.none
  44a2c0:	cmp	w0, #0x7d
  44a2c4:	b.gt	44a2a8 <argp_usage@@Base+0x11bc>
  44a2c8:	cmp	w0, #0x7b
  44a2cc:	b.eq	44a384 <argp_usage@@Base+0x1298>  // b.none
  44a2d0:	cmp	w0, #0x7b
  44a2d4:	b.gt	44a2a8 <argp_usage@@Base+0x11bc>
  44a2d8:	cmp	w0, #0x5c
  44a2dc:	b.eq	44a39c <argp_usage@@Base+0x12b0>  // b.none
  44a2e0:	cmp	w0, #0x5c
  44a2e4:	b.gt	44a2a8 <argp_usage@@Base+0x11bc>
  44a2e8:	cmp	w0, #0x5b
  44a2ec:	b.eq	44a414 <argp_usage@@Base+0x1328>  // b.none
  44a2f0:	cmp	w0, #0x5b
  44a2f4:	b.gt	44a2a8 <argp_usage@@Base+0x11bc>
  44a2f8:	cmp	w0, #0x0
  44a2fc:	b.eq	44a41c <argp_usage@@Base+0x1330>  // b.none
  44a300:	cmp	w0, #0x0
  44a304:	b.lt	44a2a8 <argp_usage@@Base+0x11bc>  // b.tstop
  44a308:	cmp	w0, #0x40
  44a30c:	b.gt	44a2a8 <argp_usage@@Base+0x11bc>
  44a310:	cmp	w0, #0x21
  44a314:	b.lt	44a2a8 <argp_usage@@Base+0x11bc>  // b.tstop
  44a318:	sub	w0, w0, #0x21
  44a31c:	mov	x1, #0x1                   	// #1
  44a320:	lsl	x0, x1, x0
  44a324:	mov	x1, #0x401                 	// #1025
  44a328:	movk	x1, #0x8000, lsl #16
  44a32c:	and	x1, x0, x1
  44a330:	cmp	x1, #0x0
  44a334:	cset	w1, ne  // ne = any
  44a338:	and	w1, w1, #0xff
  44a33c:	cmp	w1, #0x0
  44a340:	b.ne	44a3ec <argp_usage@@Base+0x1300>  // b.any
  44a344:	mov	x1, #0x2180                	// #8576
  44a348:	and	x1, x0, x1
  44a34c:	cmp	x1, #0x0
  44a350:	cset	w1, ne  // ne = any
  44a354:	and	w1, w1, #0xff
  44a358:	cmp	w1, #0x0
  44a35c:	b.ne	44a384 <argp_usage@@Base+0x1298>  // b.any
  44a360:	mov	x1, #0x200                 	// #512
  44a364:	movk	x1, #0x4000, lsl #16
  44a368:	and	x0, x0, x1
  44a36c:	cmp	x0, #0x0
  44a370:	cset	w0, ne  // ne = any
  44a374:	and	w0, w0, #0xff
  44a378:	cmp	w0, #0x0
  44a37c:	b.ne	44a414 <argp_usage@@Base+0x1328>  // b.any
  44a380:	b	44a2a8 <argp_usage@@Base+0x11bc>
  44a384:	ldr	w0, [sp, #4]
  44a388:	and	w0, w0, #0x8000000
  44a38c:	cmp	w0, #0x0
  44a390:	b.eq	44a424 <argp_usage@@Base+0x1338>  // b.none
  44a394:	mov	w0, #0x1                   	// #1
  44a398:	b	44a43c <argp_usage@@Base+0x1350>
  44a39c:	ldr	w0, [sp, #4]
  44a3a0:	and	w0, w0, #0x8000000
  44a3a4:	cmp	w0, #0x0
  44a3a8:	b.ne	44a42c <argp_usage@@Base+0x1340>  // b.any
  44a3ac:	ldr	w0, [sp, #4]
  44a3b0:	and	w0, w0, #0x2
  44a3b4:	cmp	w0, #0x0
  44a3b8:	b.ne	44a3d4 <argp_usage@@Base+0x12e8>  // b.any
  44a3bc:	ldr	x0, [sp, #8]
  44a3c0:	ldrb	w0, [x0]
  44a3c4:	cmp	w0, #0x0
  44a3c8:	b.eq	44a3d4 <argp_usage@@Base+0x12e8>  // b.none
  44a3cc:	mov	w0, #0x1                   	// #1
  44a3d0:	b	44a3d8 <argp_usage@@Base+0x12ec>
  44a3d4:	mov	w0, #0x0                   	// #0
  44a3d8:	sxtw	x0, w0
  44a3dc:	ldr	x1, [sp, #8]
  44a3e0:	add	x0, x1, x0
  44a3e4:	str	x0, [sp, #8]
  44a3e8:	b	44a438 <argp_usage@@Base+0x134c>
  44a3ec:	ldr	w0, [sp, #4]
  44a3f0:	and	w0, w0, #0x20
  44a3f4:	cmp	w0, #0x0
  44a3f8:	b.eq	44a434 <argp_usage@@Base+0x1348>  // b.none
  44a3fc:	ldr	x0, [sp, #8]
  44a400:	ldrb	w0, [x0]
  44a404:	cmp	w0, #0x28
  44a408:	b.ne	44a434 <argp_usage@@Base+0x1348>  // b.any
  44a40c:	mov	w0, #0x1                   	// #1
  44a410:	b	44a43c <argp_usage@@Base+0x1350>
  44a414:	mov	w0, #0x1                   	// #1
  44a418:	b	44a43c <argp_usage@@Base+0x1350>
  44a41c:	mov	w0, #0x0                   	// #0
  44a420:	b	44a43c <argp_usage@@Base+0x1350>
  44a424:	nop
  44a428:	b	44a2a8 <argp_usage@@Base+0x11bc>
  44a42c:	nop
  44a430:	b	44a2a8 <argp_usage@@Base+0x11bc>
  44a434:	nop
  44a438:	b	44a2a8 <argp_usage@@Base+0x11bc>
  44a43c:	add	sp, sp, #0x10
  44a440:	ret
  44a444:	sub	sp, sp, #0x20
  44a448:	str	x0, [sp, #8]
  44a44c:	ldr	x0, [sp, #8]
  44a450:	str	x0, [sp, #24]
  44a454:	ldr	x0, [sp, #24]
  44a458:	ldrb	w0, [x0]
  44a45c:	cmp	w0, #0x5c
  44a460:	b.ne	44a480 <argp_usage@@Base+0x1394>  // b.any
  44a464:	ldr	x0, [sp, #24]
  44a468:	add	x0, x0, #0x1
  44a46c:	ldrb	w0, [x0]
  44a470:	cmp	w0, #0x0
  44a474:	b.eq	44a480 <argp_usage@@Base+0x1394>  // b.none
  44a478:	mov	w0, #0x1                   	// #1
  44a47c:	b	44a484 <argp_usage@@Base+0x1398>
  44a480:	mov	w0, #0x0                   	// #0
  44a484:	sxtw	x0, w0
  44a488:	ldr	x1, [sp, #24]
  44a48c:	add	x0, x1, x0
  44a490:	str	x0, [sp, #24]
  44a494:	ldr	x1, [sp, #24]
  44a498:	add	x0, x1, #0x1
  44a49c:	str	x0, [sp, #24]
  44a4a0:	ldr	x0, [sp, #8]
  44a4a4:	add	x2, x0, #0x1
  44a4a8:	str	x2, [sp, #8]
  44a4ac:	ldrb	w1, [x1]
  44a4b0:	strb	w1, [x0]
  44a4b4:	ldrb	w0, [x0]
  44a4b8:	cmp	w0, #0x0
  44a4bc:	b.ne	44a454 <argp_usage@@Base+0x1368>  // b.any
  44a4c0:	nop
  44a4c4:	nop
  44a4c8:	add	sp, sp, #0x20
  44a4cc:	ret
  44a4d0:	stp	x29, x30, [sp, #-16]!
  44a4d4:	mov	x29, sp
  44a4d8:	mov	x0, #0x10                  	// #16
  44a4dc:	bl	45b77c <argp_usage@@Base+0x12690>
  44a4e0:	ldp	x29, x30, [sp], #16
  44a4e4:	ret
  44a4e8:	stp	x29, x30, [sp, #-48]!
  44a4ec:	mov	x29, sp
  44a4f0:	str	x0, [sp, #24]
  44a4f4:	str	x1, [sp, #16]
  44a4f8:	ldr	x0, [sp, #24]
  44a4fc:	str	x0, [sp, #40]
  44a500:	ldr	x1, [sp, #16]
  44a504:	ldr	x0, [sp, #40]
  44a508:	bl	44e630 <argp_usage@@Base+0x5544>
  44a50c:	ldp	x29, x30, [sp], #48
  44a510:	ret
  44a514:	stp	x29, x30, [sp, #-176]!
  44a518:	mov	x29, sp
  44a51c:	str	x0, [sp, #24]
  44a520:	str	x1, [sp, #16]
  44a524:	ldr	x0, [sp, #24]
  44a528:	str	x0, [sp, #152]
  44a52c:	str	xzr, [sp, #168]
  44a530:	ldr	x0, [sp, #152]
  44a534:	str	x0, [sp, #104]
  44a538:	strb	wzr, [sp, #88]
  44a53c:	add	x0, sp, #0x58
  44a540:	add	x0, x0, #0x4
  44a544:	mov	x2, #0x8                   	// #8
  44a548:	mov	w1, #0x0                   	// #0
  44a54c:	bl	4044d0 <memset@plt>
  44a550:	strb	wzr, [sp, #100]
  44a554:	b	44a5e4 <argp_usage@@Base+0x14f8>
  44a558:	add	x0, sp, #0x28
  44a55c:	add	x1, sp, #0x68
  44a560:	ldp	x2, x3, [x1]
  44a564:	stp	x2, x3, [x0]
  44a568:	ldp	x2, x3, [x1, #16]
  44a56c:	stp	x2, x3, [x0, #16]
  44a570:	ldp	x2, x3, [x1, #32]
  44a574:	stp	x2, x3, [x0, #32]
  44a578:	ldrb	w0, [sp, #56]
  44a57c:	cmp	w0, #0x0
  44a580:	b.eq	44a594 <argp_usage@@Base+0x14a8>  // b.none
  44a584:	ldr	w0, [sp, #60]
  44a588:	bl	404c80 <towlower@plt>
  44a58c:	str	w0, [sp, #164]
  44a590:	b	44a5a0 <argp_usage@@Base+0x14b4>
  44a594:	ldr	x0, [sp, #40]
  44a598:	ldrb	w0, [x0]
  44a59c:	str	w0, [sp, #164]
  44a5a0:	ldr	x1, [sp, #168]
  44a5a4:	mov	x0, x1
  44a5a8:	lsl	x0, x0, #5
  44a5ac:	sub	x1, x0, x1
  44a5b0:	ldr	w0, [sp, #164]
  44a5b4:	add	x0, x1, x0
  44a5b8:	ldr	x1, [sp, #16]
  44a5bc:	udiv	x2, x0, x1
  44a5c0:	ldr	x1, [sp, #16]
  44a5c4:	mul	x1, x2, x1
  44a5c8:	sub	x0, x0, x1
  44a5cc:	str	x0, [sp, #168]
  44a5d0:	ldr	x1, [sp, #104]
  44a5d4:	ldr	x0, [sp, #112]
  44a5d8:	add	x0, x1, x0
  44a5dc:	str	x0, [sp, #104]
  44a5e0:	strb	wzr, [sp, #100]
  44a5e4:	add	x0, sp, #0x58
  44a5e8:	bl	450e0c <argp_usage@@Base+0x7d20>
  44a5ec:	ldrb	w0, [sp, #120]
  44a5f0:	eor	w0, w0, #0x1
  44a5f4:	and	w0, w0, #0xff
  44a5f8:	cmp	w0, #0x0
  44a5fc:	b.ne	44a60c <argp_usage@@Base+0x1520>  // b.any
  44a600:	ldr	w0, [sp, #124]
  44a604:	cmp	w0, #0x0
  44a608:	b.eq	44a614 <argp_usage@@Base+0x1528>  // b.none
  44a60c:	mov	w0, #0x1                   	// #1
  44a610:	b	44a618 <argp_usage@@Base+0x152c>
  44a614:	mov	w0, #0x0                   	// #0
  44a618:	cmp	w0, #0x0
  44a61c:	b.ne	44a558 <argp_usage@@Base+0x146c>  // b.any
  44a620:	ldr	x0, [sp, #168]
  44a624:	ldp	x29, x30, [sp], #176
  44a628:	ret
  44a62c:	stp	x29, x30, [sp, #-48]!
  44a630:	mov	x29, sp
  44a634:	str	x0, [sp, #24]
  44a638:	str	x1, [sp, #16]
  44a63c:	ldr	x0, [sp, #24]
  44a640:	str	x0, [sp, #40]
  44a644:	ldr	x0, [sp, #16]
  44a648:	str	x0, [sp, #32]
  44a64c:	ldr	x1, [sp, #32]
  44a650:	ldr	x0, [sp, #40]
  44a654:	bl	4047c0 <strcmp@plt>
  44a658:	cmp	w0, #0x0
  44a65c:	cset	w0, eq  // eq = none
  44a660:	and	w0, w0, #0xff
  44a664:	ldp	x29, x30, [sp], #48
  44a668:	ret
  44a66c:	stp	x29, x30, [sp, #-48]!
  44a670:	mov	x29, sp
  44a674:	str	x0, [sp, #24]
  44a678:	str	x1, [sp, #16]
  44a67c:	ldr	x0, [sp, #24]
  44a680:	str	x0, [sp, #40]
  44a684:	ldr	x0, [sp, #16]
  44a688:	str	x0, [sp, #32]
  44a68c:	ldr	x1, [sp, #32]
  44a690:	ldr	x0, [sp, #40]
  44a694:	bl	450a74 <argp_usage@@Base+0x7988>
  44a698:	cmp	w0, #0x0
  44a69c:	cset	w0, eq  // eq = none
  44a6a0:	and	w0, w0, #0xff
  44a6a4:	ldp	x29, x30, [sp], #48
  44a6a8:	ret
  44a6ac:	stp	x29, x30, [sp, #-32]!
  44a6b0:	mov	x29, sp
  44a6b4:	str	x0, [sp, #24]
  44a6b8:	ldr	x0, [sp, #24]
  44a6bc:	bl	404880 <free@plt>
  44a6c0:	nop
  44a6c4:	ldp	x29, x30, [sp], #32
  44a6c8:	ret
  44a6cc:	stp	x29, x30, [sp, #-48]!
  44a6d0:	mov	x29, sp
  44a6d4:	str	x0, [sp, #24]
  44a6d8:	str	w1, [sp, #20]
  44a6dc:	str	w2, [sp, #16]
  44a6e0:	mov	x0, #0x28                  	// #40
  44a6e4:	bl	45b77c <argp_usage@@Base+0x12690>
  44a6e8:	str	x0, [sp, #40]
  44a6ec:	ldr	x0, [sp, #40]
  44a6f0:	ldr	w1, [sp, #20]
  44a6f4:	str	w1, [x0, #8]
  44a6f8:	ldr	x0, [sp, #40]
  44a6fc:	ldr	w1, [sp, #16]
  44a700:	str	w1, [x0, #12]
  44a704:	ldr	w0, [sp, #20]
  44a708:	cmp	w0, #0x0
  44a70c:	b.eq	44a71c <argp_usage@@Base+0x1630>  // b.none
  44a710:	ldr	w0, [sp, #20]
  44a714:	cmp	w0, #0x1
  44a718:	b	44a790 <argp_usage@@Base+0x16a4>
  44a71c:	ldr	w0, [sp, #16]
  44a720:	and	w0, w0, #0x10
  44a724:	cmp	w0, #0x0
  44a728:	b.eq	44a738 <argp_usage@@Base+0x164c>  // b.none
  44a72c:	adrp	x0, 44a000 <argp_usage@@Base+0xf14>
  44a730:	add	x0, x0, #0x514
  44a734:	b	44a740 <argp_usage@@Base+0x1654>
  44a738:	adrp	x0, 44a000 <argp_usage@@Base+0xf14>
  44a73c:	add	x0, x0, #0x4e8
  44a740:	ldr	w1, [sp, #16]
  44a744:	and	w1, w1, #0x10
  44a748:	cmp	w1, #0x0
  44a74c:	b.eq	44a75c <argp_usage@@Base+0x1670>  // b.none
  44a750:	adrp	x1, 44a000 <argp_usage@@Base+0xf14>
  44a754:	add	x1, x1, #0x66c
  44a758:	b	44a764 <argp_usage@@Base+0x1678>
  44a75c:	adrp	x1, 44a000 <argp_usage@@Base+0xf14>
  44a760:	add	x1, x1, #0x62c
  44a764:	adrp	x2, 44a000 <argp_usage@@Base+0xf14>
  44a768:	add	x4, x2, #0x6ac
  44a76c:	mov	x3, x1
  44a770:	mov	x2, x0
  44a774:	mov	x1, #0x0                   	// #0
  44a778:	mov	x0, #0x0                   	// #0
  44a77c:	bl	44ea34 <argp_usage@@Base+0x5948>
  44a780:	mov	x1, x0
  44a784:	ldr	x0, [sp, #40]
  44a788:	str	x1, [x0, #16]
  44a78c:	nop
  44a790:	ldr	x0, [sp, #24]
  44a794:	ldr	x1, [x0]
  44a798:	ldr	x0, [sp, #40]
  44a79c:	str	x1, [x0]
  44a7a0:	ldr	x0, [sp, #24]
  44a7a4:	ldr	x1, [sp, #40]
  44a7a8:	str	x1, [x0]
  44a7ac:	nop
  44a7b0:	ldp	x29, x30, [sp], #48
  44a7b4:	ret
  44a7b8:	stp	x29, x30, [sp, #-48]!
  44a7bc:	mov	x29, sp
  44a7c0:	str	x0, [sp, #24]
  44a7c4:	ldr	x0, [sp, #24]
  44a7c8:	ldr	w0, [x0, #8]
  44a7cc:	cmp	w0, #0x0
  44a7d0:	b.eq	44a86c <argp_usage@@Base+0x1780>  // b.none
  44a7d4:	cmp	w0, #0x1
  44a7d8:	b.ne	44a87c <argp_usage@@Base+0x1790>  // b.any
  44a7dc:	str	xzr, [sp, #40]
  44a7e0:	b	44a848 <argp_usage@@Base+0x175c>
  44a7e4:	ldr	x0, [sp, #24]
  44a7e8:	ldr	x2, [x0, #16]
  44a7ec:	ldr	x1, [sp, #40]
  44a7f0:	mov	x0, x1
  44a7f4:	lsl	x0, x0, #3
  44a7f8:	add	x0, x0, x1
  44a7fc:	lsl	x0, x0, #3
  44a800:	add	x0, x2, x0
  44a804:	ldr	w0, [x0]
  44a808:	and	w0, w0, #0x8000000
  44a80c:	cmp	w0, #0x0
  44a810:	b.eq	44a83c <argp_usage@@Base+0x1750>  // b.none
  44a814:	ldr	x0, [sp, #24]
  44a818:	ldr	x2, [x0, #16]
  44a81c:	ldr	x1, [sp, #40]
  44a820:	mov	x0, x1
  44a824:	lsl	x0, x0, #3
  44a828:	add	x0, x0, x1
  44a82c:	lsl	x0, x0, #3
  44a830:	add	x0, x2, x0
  44a834:	add	x0, x0, #0x8
  44a838:	bl	463200 <_obstack_memory_used@@Base+0x60c0>
  44a83c:	ldr	x0, [sp, #40]
  44a840:	add	x0, x0, #0x1
  44a844:	str	x0, [sp, #40]
  44a848:	ldr	x0, [sp, #24]
  44a84c:	ldr	x0, [x0, #32]
  44a850:	ldr	x1, [sp, #40]
  44a854:	cmp	x1, x0
  44a858:	b.cc	44a7e4 <argp_usage@@Base+0x16f8>  // b.lo, b.ul, b.last
  44a85c:	ldr	x0, [sp, #24]
  44a860:	ldr	x0, [x0, #16]
  44a864:	bl	404880 <free@plt>
  44a868:	b	44a87c <argp_usage@@Base+0x1790>
  44a86c:	ldr	x0, [sp, #24]
  44a870:	ldr	x0, [x0, #16]
  44a874:	bl	44ecd4 <argp_usage@@Base+0x5be8>
  44a878:	nop
  44a87c:	ldr	x0, [sp, #24]
  44a880:	bl	404880 <free@plt>
  44a884:	nop
  44a888:	ldp	x29, x30, [sp], #48
  44a88c:	ret
  44a890:	stp	x29, x30, [sp, #-64]!
  44a894:	mov	x29, sp
  44a898:	str	x0, [sp, #24]
  44a89c:	ldr	x0, [sp, #24]
  44a8a0:	ldr	x0, [x0]
  44a8a4:	str	x0, [sp, #56]
  44a8a8:	b	44a8c8 <argp_usage@@Base+0x17dc>
  44a8ac:	ldr	x0, [sp, #56]
  44a8b0:	ldr	x0, [x0]
  44a8b4:	str	x0, [sp, #32]
  44a8b8:	ldr	x0, [sp, #56]
  44a8bc:	bl	44a7b8 <argp_usage@@Base+0x16cc>
  44a8c0:	ldr	x0, [sp, #32]
  44a8c4:	str	x0, [sp, #56]
  44a8c8:	ldr	x0, [sp, #56]
  44a8cc:	cmp	x0, #0x0
  44a8d0:	b.ne	44a8ac <argp_usage@@Base+0x17c0>  // b.any
  44a8d4:	ldr	x0, [sp, #24]
  44a8d8:	ldr	x0, [x0, #8]
  44a8dc:	str	x0, [sp, #48]
  44a8e0:	b	44a90c <argp_usage@@Base+0x1820>
  44a8e4:	ldr	x0, [sp, #48]
  44a8e8:	ldr	x0, [x0]
  44a8ec:	str	x0, [sp, #40]
  44a8f0:	ldr	x0, [sp, #48]
  44a8f4:	ldr	x0, [x0, #8]
  44a8f8:	bl	404880 <free@plt>
  44a8fc:	ldr	x0, [sp, #48]
  44a900:	bl	404880 <free@plt>
  44a904:	ldr	x0, [sp, #40]
  44a908:	str	x0, [sp, #48]
  44a90c:	ldr	x0, [sp, #48]
  44a910:	cmp	x0, #0x0
  44a914:	b.ne	44a8e4 <argp_usage@@Base+0x17f8>  // b.any
  44a918:	ldr	x0, [sp, #24]
  44a91c:	bl	404880 <free@plt>
  44a920:	nop
  44a924:	ldp	x29, x30, [sp], #64
  44a928:	ret
  44a92c:	stp	x29, x30, [sp, #-96]!
  44a930:	mov	x29, sp
  44a934:	str	x0, [sp, #40]
  44a938:	str	x1, [sp, #32]
  44a93c:	str	w2, [sp, #28]
  44a940:	ldr	w0, [sp, #28]
  44a944:	and	w0, w0, #0x8
  44a948:	cmp	w0, #0x0
  44a94c:	b.ne	44a980 <argp_usage@@Base+0x1894>  // b.any
  44a950:	ldr	w0, [sp, #28]
  44a954:	and	w0, w0, #0x10
  44a958:	cmp	w0, #0x0
  44a95c:	b.eq	44a970 <argp_usage@@Base+0x1884>  // b.none
  44a960:	ldr	x1, [sp, #32]
  44a964:	ldr	x0, [sp, #40]
  44a968:	bl	450a74 <argp_usage@@Base+0x7988>
  44a96c:	b	44aa6c <argp_usage@@Base+0x1980>
  44a970:	ldr	x1, [sp, #32]
  44a974:	ldr	x0, [sp, #40]
  44a978:	bl	4047c0 <strcmp@plt>
  44a97c:	b	44aa6c <argp_usage@@Base+0x1980>
  44a980:	ldr	w0, [sp, #28]
  44a984:	and	w0, w0, #0x10
  44a988:	cmp	w0, #0x0
  44a98c:	b.ne	44a9e8 <argp_usage@@Base+0x18fc>  // b.any
  44a990:	ldr	x0, [sp, #40]
  44a994:	bl	4040b0 <strlen@plt>
  44a998:	str	x0, [sp, #56]
  44a99c:	ldr	x2, [sp, #56]
  44a9a0:	ldr	x1, [sp, #32]
  44a9a4:	ldr	x0, [sp, #40]
  44a9a8:	bl	404480 <strncmp@plt>
  44a9ac:	str	w0, [sp, #92]
  44a9b0:	ldr	w0, [sp, #92]
  44a9b4:	cmp	w0, #0x0
  44a9b8:	b.ne	44a9e0 <argp_usage@@Base+0x18f4>  // b.any
  44a9bc:	ldr	x1, [sp, #32]
  44a9c0:	ldr	x0, [sp, #56]
  44a9c4:	add	x0, x1, x0
  44a9c8:	ldrb	w0, [x0]
  44a9cc:	str	w0, [sp, #92]
  44a9d0:	ldr	w0, [sp, #92]
  44a9d4:	cmp	w0, #0x2f
  44a9d8:	b.ne	44a9e0 <argp_usage@@Base+0x18f4>  // b.any
  44a9dc:	str	wzr, [sp, #92]
  44a9e0:	ldr	w0, [sp, #92]
  44a9e4:	b	44aa6c <argp_usage@@Base+0x1980>
  44a9e8:	ldr	x0, [sp, #32]
  44a9ec:	bl	45b858 <argp_usage@@Base+0x1276c>
  44a9f0:	str	x0, [sp, #72]
  44a9f4:	ldr	x0, [sp, #72]
  44a9f8:	str	x0, [sp, #80]
  44a9fc:	mov	w1, #0x2f                  	// #47
  44aa00:	ldr	x0, [sp, #80]
  44aa04:	bl	404930 <strchr@plt>
  44aa08:	str	x0, [sp, #80]
  44aa0c:	ldr	x0, [sp, #80]
  44aa10:	cmp	x0, #0x0
  44aa14:	b.eq	44aa20 <argp_usage@@Base+0x1934>  // b.none
  44aa18:	ldr	x0, [sp, #80]
  44aa1c:	strb	wzr, [x0]
  44aa20:	ldr	x1, [sp, #72]
  44aa24:	ldr	x0, [sp, #40]
  44aa28:	bl	450a74 <argp_usage@@Base+0x7988>
  44aa2c:	str	w0, [sp, #68]
  44aa30:	ldr	x0, [sp, #80]
  44aa34:	cmp	x0, #0x0
  44aa38:	b.eq	44aa60 <argp_usage@@Base+0x1974>  // b.none
  44aa3c:	ldr	w0, [sp, #68]
  44aa40:	cmp	w0, #0x0
  44aa44:	b.le	44aa60 <argp_usage@@Base+0x1974>
  44aa48:	ldr	x0, [sp, #80]
  44aa4c:	add	x1, x0, #0x1
  44aa50:	str	x1, [sp, #80]
  44aa54:	mov	w1, #0x2f                  	// #47
  44aa58:	strb	w1, [x0]
  44aa5c:	b	44a9fc <argp_usage@@Base+0x1910>
  44aa60:	ldr	x0, [sp, #72]
  44aa64:	bl	404880 <free@plt>
  44aa68:	ldr	w0, [sp, #68]
  44aa6c:	ldp	x29, x30, [sp], #96
  44aa70:	ret
  44aa74:	stp	x29, x30, [sp, #-80]!
  44aa78:	mov	x29, sp
  44aa7c:	str	x0, [sp, #40]
  44aa80:	str	x1, [sp, #32]
  44aa84:	str	w2, [sp, #28]
  44aa88:	ldr	w0, [sp, #28]
  44aa8c:	and	w0, w0, #0x10000000
  44aa90:	cmp	w0, #0x0
  44aa94:	b.eq	44aaa4 <argp_usage@@Base+0x19b8>  // b.none
  44aa98:	adrp	x0, 404000 <mbrtowc@plt-0x10>
  44aa9c:	add	x0, x0, #0x980
  44aaa0:	b	44aaac <argp_usage@@Base+0x19c0>
  44aaa4:	adrp	x0, 44a000 <argp_usage@@Base+0xf14>
  44aaa8:	add	x0, x0, #0x92c
  44aaac:	str	x0, [sp, #56]
  44aab0:	ldr	x3, [sp, #56]
  44aab4:	ldr	w2, [sp, #28]
  44aab8:	ldr	x1, [sp, #32]
  44aabc:	ldr	x0, [sp, #40]
  44aac0:	blr	x3
  44aac4:	cmp	w0, #0x0
  44aac8:	cset	w0, eq  // eq = none
  44aacc:	strb	w0, [sp, #79]
  44aad0:	ldr	w0, [sp, #28]
  44aad4:	and	w0, w0, #0x40000000
  44aad8:	cmp	w0, #0x0
  44aadc:	b.ne	44ab68 <argp_usage@@Base+0x1a7c>  // b.any
  44aae0:	ldr	x0, [sp, #32]
  44aae4:	str	x0, [sp, #64]
  44aae8:	b	44ab44 <argp_usage@@Base+0x1a58>
  44aaec:	ldr	x0, [sp, #64]
  44aaf0:	ldrb	w0, [x0]
  44aaf4:	cmp	w0, #0x2f
  44aaf8:	b.ne	44ab38 <argp_usage@@Base+0x1a4c>  // b.any
  44aafc:	ldr	x0, [sp, #64]
  44ab00:	add	x0, x0, #0x1
  44ab04:	ldrb	w0, [x0]
  44ab08:	cmp	w0, #0x2f
  44ab0c:	b.eq	44ab38 <argp_usage@@Base+0x1a4c>  // b.none
  44ab10:	ldr	x0, [sp, #64]
  44ab14:	add	x0, x0, #0x1
  44ab18:	ldr	x3, [sp, #56]
  44ab1c:	ldr	w2, [sp, #28]
  44ab20:	mov	x1, x0
  44ab24:	ldr	x0, [sp, #40]
  44ab28:	blr	x3
  44ab2c:	cmp	w0, #0x0
  44ab30:	cset	w0, eq  // eq = none
  44ab34:	strb	w0, [sp, #79]
  44ab38:	ldr	x0, [sp, #64]
  44ab3c:	add	x0, x0, #0x1
  44ab40:	str	x0, [sp, #64]
  44ab44:	ldr	x0, [sp, #64]
  44ab48:	ldrb	w0, [x0]
  44ab4c:	cmp	w0, #0x0
  44ab50:	b.eq	44ab68 <argp_usage@@Base+0x1a7c>  // b.none
  44ab54:	ldrb	w0, [sp, #79]
  44ab58:	eor	w0, w0, #0x1
  44ab5c:	and	w0, w0, #0xff
  44ab60:	cmp	w0, #0x0
  44ab64:	b.ne	44aaec <argp_usage@@Base+0x1a00>  // b.any
  44ab68:	ldrb	w0, [sp, #79]
  44ab6c:	ldp	x29, x30, [sp], #80
  44ab70:	ret
  44ab74:	stp	x29, x30, [sp, #-48]!
  44ab78:	mov	x29, sp
  44ab7c:	str	x0, [sp, #24]
  44ab80:	str	x1, [sp, #16]
  44ab84:	ldr	x0, [sp, #24]
  44ab88:	ldr	w0, [x0]
  44ab8c:	str	w0, [sp, #44]
  44ab90:	ldr	w0, [sp, #44]
  44ab94:	and	w0, w0, #0x8000000
  44ab98:	cmp	w0, #0x0
  44ab9c:	b.eq	44abcc <argp_usage@@Base+0x1ae0>  // b.none
  44aba0:	ldr	x0, [sp, #24]
  44aba4:	add	x0, x0, #0x8
  44aba8:	mov	w4, #0x0                   	// #0
  44abac:	mov	x3, #0x0                   	// #0
  44abb0:	mov	x2, #0x0                   	// #0
  44abb4:	ldr	x1, [sp, #16]
  44abb8:	bl	46ac68 <_obstack_memory_used@@Base+0xdb28>
  44abbc:	cmp	w0, #0x0
  44abc0:	cset	w0, eq  // eq = none
  44abc4:	and	w0, w0, #0xff
  44abc8:	b	44abf0 <argp_usage@@Base+0x1b04>
  44abcc:	ldr	x0, [sp, #24]
  44abd0:	ldr	x0, [x0, #8]
  44abd4:	ldr	w2, [sp, #44]
  44abd8:	ldr	x1, [sp, #16]
  44abdc:	bl	44aa74 <argp_usage@@Base+0x1988>
  44abe0:	and	w0, w0, #0xff
  44abe4:	cmp	w0, #0x0
  44abe8:	cset	w0, ne  // ne = any
  44abec:	and	w0, w0, #0xff
  44abf0:	ldp	x29, x30, [sp], #48
  44abf4:	ret
  44abf8:	stp	x29, x30, [sp, #-64]!
  44abfc:	mov	x29, sp
  44ac00:	str	x0, [sp, #24]
  44ac04:	str	x1, [sp, #16]
  44ac08:	ldr	x0, [sp, #24]
  44ac0c:	ldr	x0, [x0, #32]
  44ac10:	str	x0, [sp, #48]
  44ac14:	ldr	x0, [sp, #24]
  44ac18:	ldr	x0, [x0, #16]
  44ac1c:	str	x0, [sp, #40]
  44ac20:	str	xzr, [sp, #56]
  44ac24:	b	44ac70 <argp_usage@@Base+0x1b84>
  44ac28:	ldr	x1, [sp, #56]
  44ac2c:	mov	x0, x1
  44ac30:	lsl	x0, x0, #3
  44ac34:	add	x0, x0, x1
  44ac38:	lsl	x0, x0, #3
  44ac3c:	mov	x1, x0
  44ac40:	ldr	x0, [sp, #40]
  44ac44:	add	x0, x0, x1
  44ac48:	ldr	x1, [sp, #16]
  44ac4c:	bl	44ab74 <argp_usage@@Base+0x1a88>
  44ac50:	and	w0, w0, #0xff
  44ac54:	cmp	w0, #0x0
  44ac58:	b.eq	44ac64 <argp_usage@@Base+0x1b78>  // b.none
  44ac5c:	mov	w0, #0x1                   	// #1
  44ac60:	b	44ac84 <argp_usage@@Base+0x1b98>
  44ac64:	ldr	x0, [sp, #56]
  44ac68:	add	x0, x0, #0x1
  44ac6c:	str	x0, [sp, #56]
  44ac70:	ldr	x1, [sp, #56]
  44ac74:	ldr	x0, [sp, #48]
  44ac78:	cmp	x1, x0
  44ac7c:	b.cc	44ac28 <argp_usage@@Base+0x1b3c>  // b.lo, b.ul, b.last
  44ac80:	mov	w0, #0x0                   	// #0
  44ac84:	ldp	x29, x30, [sp], #64
  44ac88:	ret
  44ac8c:	stp	x29, x30, [sp, #-80]!
  44ac90:	mov	x29, sp
  44ac94:	str	x0, [sp, #40]
  44ac98:	str	x1, [sp, #32]
  44ac9c:	str	x2, [sp, #24]
  44aca0:	ldr	x0, [sp, #40]
  44aca4:	ldr	w0, [x0, #12]
  44aca8:	str	w0, [sp, #76]
  44acac:	ldr	x0, [sp, #40]
  44acb0:	ldr	x0, [x0, #16]
  44acb4:	str	x0, [sp, #64]
  44acb8:	ldr	x1, [sp, #32]
  44acbc:	ldr	x0, [sp, #24]
  44acc0:	bl	4049d0 <strcpy@plt>
  44acc4:	ldr	x1, [sp, #24]
  44acc8:	ldr	x0, [sp, #64]
  44accc:	bl	44e2c0 <argp_usage@@Base+0x51d4>
  44acd0:	cmp	x0, #0x0
  44acd4:	b.eq	44ace0 <argp_usage@@Base+0x1bf4>  // b.none
  44acd8:	mov	w0, #0x1                   	// #1
  44acdc:	b	44ad6c <argp_usage@@Base+0x1c80>
  44ace0:	ldr	w0, [sp, #76]
  44ace4:	and	w0, w0, #0x8
  44ace8:	cmp	w0, #0x0
  44acec:	b.eq	44ad18 <argp_usage@@Base+0x1c2c>  // b.none
  44acf0:	mov	w1, #0x2f                  	// #47
  44acf4:	ldr	x0, [sp, #24]
  44acf8:	bl	404670 <strrchr@plt>
  44acfc:	str	x0, [sp, #56]
  44ad00:	ldr	x0, [sp, #56]
  44ad04:	cmp	x0, #0x0
  44ad08:	b.eq	44ad18 <argp_usage@@Base+0x1c2c>  // b.none
  44ad0c:	ldr	x0, [sp, #56]
  44ad10:	strb	wzr, [x0]
  44ad14:	b	44acc4 <argp_usage@@Base+0x1bd8>
  44ad18:	nop
  44ad1c:	ldr	w0, [sp, #76]
  44ad20:	and	w0, w0, #0x40000000
  44ad24:	cmp	w0, #0x0
  44ad28:	b.ne	44ad64 <argp_usage@@Base+0x1c78>  // b.any
  44ad2c:	mov	w1, #0x2f                  	// #47
  44ad30:	ldr	x0, [sp, #32]
  44ad34:	bl	404930 <strchr@plt>
  44ad38:	str	x0, [sp, #32]
  44ad3c:	ldr	x0, [sp, #32]
  44ad40:	cmp	x0, #0x0
  44ad44:	b.eq	44ad54 <argp_usage@@Base+0x1c68>  // b.none
  44ad48:	ldr	x0, [sp, #32]
  44ad4c:	add	x0, x0, #0x1
  44ad50:	str	x0, [sp, #32]
  44ad54:	ldr	x0, [sp, #32]
  44ad58:	cmp	x0, #0x0
  44ad5c:	b.ne	44acb8 <argp_usage@@Base+0x1bcc>  // b.any
  44ad60:	b	44ad68 <argp_usage@@Base+0x1c7c>
  44ad64:	nop
  44ad68:	mov	w0, #0x0                   	// #0
  44ad6c:	ldp	x29, x30, [sp], #80
  44ad70:	ret
  44ad74:	stp	x29, x30, [sp, #-64]!
  44ad78:	mov	x29, sp
  44ad7c:	str	x0, [sp, #24]
  44ad80:	str	x1, [sp, #16]
  44ad84:	strb	wzr, [sp, #55]
  44ad88:	str	xzr, [sp, #40]
  44ad8c:	ldr	x0, [sp, #24]
  44ad90:	ldr	x0, [x0]
  44ad94:	cmp	x0, #0x0
  44ad98:	b.ne	44ada4 <argp_usage@@Base+0x1cb8>  // b.any
  44ad9c:	mov	w0, #0x0                   	// #0
  44ada0:	b	44ae7c <argp_usage@@Base+0x1d90>
  44ada4:	ldr	x0, [sp, #24]
  44ada8:	ldr	x0, [x0]
  44adac:	str	x0, [sp, #56]
  44adb0:	ldr	x0, [sp, #56]
  44adb4:	ldr	w0, [x0, #8]
  44adb8:	cmp	w0, #0x0
  44adbc:	b.ne	44ae00 <argp_usage@@Base+0x1d14>  // b.any
  44adc0:	ldr	x0, [sp, #40]
  44adc4:	cmp	x0, #0x0
  44adc8:	b.ne	44ade0 <argp_usage@@Base+0x1cf4>  // b.any
  44adcc:	ldr	x0, [sp, #16]
  44add0:	bl	4040b0 <strlen@plt>
  44add4:	add	x0, x0, #0x1
  44add8:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  44addc:	str	x0, [sp, #40]
  44ade0:	ldr	x2, [sp, #40]
  44ade4:	ldr	x1, [sp, #16]
  44ade8:	ldr	x0, [sp, #56]
  44adec:	bl	44ac8c <argp_usage@@Base+0x1ba0>
  44adf0:	and	w0, w0, #0xff
  44adf4:	cmp	w0, #0x0
  44adf8:	b.eq	44ae18 <argp_usage@@Base+0x1d2c>  // b.none
  44adfc:	b	44ae48 <argp_usage@@Base+0x1d5c>
  44ae00:	ldr	x1, [sp, #16]
  44ae04:	ldr	x0, [sp, #56]
  44ae08:	bl	44abf8 <argp_usage@@Base+0x1b0c>
  44ae0c:	and	w0, w0, #0xff
  44ae10:	cmp	w0, #0x0
  44ae14:	b.ne	44ae44 <argp_usage@@Base+0x1d58>  // b.any
  44ae18:	ldr	x0, [sp, #56]
  44ae1c:	ldr	x0, [x0]
  44ae20:	cmp	x0, #0x0
  44ae24:	b.ne	44ae34 <argp_usage@@Base+0x1d48>  // b.any
  44ae28:	mov	w0, #0x1                   	// #1
  44ae2c:	strb	w0, [sp, #55]
  44ae30:	b	44ae48 <argp_usage@@Base+0x1d5c>
  44ae34:	ldr	x0, [sp, #56]
  44ae38:	ldr	x0, [x0]
  44ae3c:	str	x0, [sp, #56]
  44ae40:	b	44adb0 <argp_usage@@Base+0x1cc4>
  44ae44:	nop
  44ae48:	ldr	x0, [sp, #40]
  44ae4c:	bl	404880 <free@plt>
  44ae50:	ldrb	w0, [sp, #55]
  44ae54:	ldr	x1, [sp, #56]
  44ae58:	ldr	w1, [x1, #12]
  44ae5c:	and	w1, w1, #0x20000000
  44ae60:	cmp	w1, #0x0
  44ae64:	cset	w1, eq  // eq = none
  44ae68:	and	w1, w1, #0xff
  44ae6c:	eor	w0, w0, w1
  44ae70:	cmp	w0, #0x0
  44ae74:	cset	w0, ne  // ne = any
  44ae78:	and	w0, w0, #0xff
  44ae7c:	ldp	x29, x30, [sp], #64
  44ae80:	ret
  44ae84:	stp	x29, x30, [sp, #-128]!
  44ae88:	mov	x29, sp
  44ae8c:	str	x0, [sp, #40]
  44ae90:	str	x1, [sp, #32]
  44ae94:	str	w2, [sp, #28]
  44ae98:	ldr	w0, [sp, #28]
  44ae9c:	and	w0, w0, #0x18000000
  44aea0:	cmp	w0, #0x0
  44aea4:	b.eq	44b124 <argp_usage@@Base+0x2038>  // b.none
  44aea8:	ldr	w1, [sp, #28]
  44aeac:	ldr	x0, [sp, #32]
  44aeb0:	bl	44a29c <argp_usage@@Base+0x11b0>
  44aeb4:	and	w0, w0, #0xff
  44aeb8:	cmp	w0, #0x0
  44aebc:	b.eq	44b124 <argp_usage@@Base+0x2038>  // b.none
  44aec0:	ldr	x0, [sp, #40]
  44aec4:	ldr	x0, [x0]
  44aec8:	cmp	x0, #0x0
  44aecc:	b.eq	44af04 <argp_usage@@Base+0x1e18>  // b.none
  44aed0:	ldr	x0, [sp, #40]
  44aed4:	ldr	x0, [x0]
  44aed8:	ldr	w0, [x0, #8]
  44aedc:	cmp	w0, #0x1
  44aee0:	b.ne	44af04 <argp_usage@@Base+0x1e18>  // b.any
  44aee4:	ldr	x0, [sp, #40]
  44aee8:	ldr	x0, [x0]
  44aeec:	ldr	w1, [x0, #12]
  44aef0:	ldr	w0, [sp, #28]
  44aef4:	eor	w0, w1, w0
  44aef8:	and	w0, w0, #0x20000000
  44aefc:	cmp	w0, #0x0
  44af00:	b.eq	44af14 <argp_usage@@Base+0x1e28>  // b.none
  44af04:	ldr	w2, [sp, #28]
  44af08:	mov	w1, #0x1                   	// #1
  44af0c:	ldr	x0, [sp, #40]
  44af10:	bl	44a6cc <argp_usage@@Base+0x15e0>
  44af14:	ldr	x0, [sp, #40]
  44af18:	ldr	x0, [x0]
  44af1c:	str	x0, [sp, #104]
  44af20:	ldr	x0, [sp, #104]
  44af24:	add	x0, x0, #0x10
  44af28:	str	x0, [sp, #96]
  44af2c:	ldr	x0, [sp, #96]
  44af30:	ldr	x1, [x0, #16]
  44af34:	ldr	x0, [sp, #96]
  44af38:	ldr	x0, [x0, #8]
  44af3c:	cmp	x1, x0
  44af40:	b.ne	44af70 <argp_usage@@Base+0x1e84>  // b.any
  44af44:	ldr	x0, [sp, #96]
  44af48:	ldr	x3, [x0]
  44af4c:	ldr	x0, [sp, #96]
  44af50:	add	x0, x0, #0x8
  44af54:	mov	x2, #0x48                  	// #72
  44af58:	mov	x1, x0
  44af5c:	mov	x0, x3
  44af60:	bl	45b56c <argp_usage@@Base+0x12480>
  44af64:	mov	x1, x0
  44af68:	ldr	x0, [sp, #96]
  44af6c:	str	x1, [x0]
  44af70:	ldr	x0, [sp, #96]
  44af74:	ldr	x2, [x0]
  44af78:	ldr	x0, [sp, #96]
  44af7c:	ldr	x1, [x0, #16]
  44af80:	add	x3, x1, #0x1
  44af84:	ldr	x0, [sp, #96]
  44af88:	str	x3, [x0, #16]
  44af8c:	mov	x0, x1
  44af90:	lsl	x0, x0, #3
  44af94:	add	x0, x0, x1
  44af98:	lsl	x0, x0, #3
  44af9c:	add	x0, x2, x0
  44afa0:	str	x0, [sp, #88]
  44afa4:	ldr	x0, [sp, #88]
  44afa8:	ldr	w1, [sp, #28]
  44afac:	str	w1, [x0]
  44afb0:	ldr	w0, [sp, #28]
  44afb4:	and	w0, w0, #0x8000000
  44afb8:	cmp	w0, #0x0
  44afbc:	b.eq	44b0ec <argp_usage@@Base+0x2000>  // b.none
  44afc0:	ldr	w0, [sp, #28]
  44afc4:	asr	w0, w0, #3
  44afc8:	and	w1, w0, #0x2
  44afcc:	mov	w0, #0x9                   	// #9
  44afd0:	orr	w0, w1, w0
  44afd4:	str	w0, [sp, #84]
  44afd8:	ldr	w0, [sp, #28]
  44afdc:	and	w0, w0, #0x8
  44afe0:	cmp	w0, #0x0
  44afe4:	b.eq	44b0b0 <argp_usage@@Base+0x1fc4>  // b.none
  44afe8:	ldr	x0, [sp, #32]
  44afec:	bl	4040b0 <strlen@plt>
  44aff0:	str	x0, [sp, #112]
  44aff4:	b	44b004 <argp_usage@@Base+0x1f18>
  44aff8:	ldr	x0, [sp, #112]
  44affc:	sub	x0, x0, #0x1
  44b000:	str	x0, [sp, #112]
  44b004:	ldr	x0, [sp, #112]
  44b008:	cmp	x0, #0x0
  44b00c:	b.eq	44b02c <argp_usage@@Base+0x1f40>  // b.none
  44b010:	ldr	x0, [sp, #112]
  44b014:	sub	x0, x0, #0x1
  44b018:	ldr	x1, [sp, #32]
  44b01c:	add	x0, x1, x0
  44b020:	ldrb	w0, [x0]
  44b024:	cmp	w0, #0x2f
  44b028:	b.eq	44aff8 <argp_usage@@Base+0x1f0c>  // b.none
  44b02c:	ldr	x0, [sp, #112]
  44b030:	cmp	x0, #0x0
  44b034:	b.ne	44b044 <argp_usage@@Base+0x1f58>  // b.any
  44b038:	mov	w0, #0x1                   	// #1
  44b03c:	str	w0, [sp, #124]
  44b040:	b	44b0c8 <argp_usage@@Base+0x1fdc>
  44b044:	ldr	x0, [sp, #112]
  44b048:	add	x0, x0, #0x7
  44b04c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  44b050:	str	x0, [sp, #72]
  44b054:	ldr	x2, [sp, #112]
  44b058:	ldr	x1, [sp, #32]
  44b05c:	ldr	x0, [sp, #72]
  44b060:	bl	404020 <memcpy@plt>
  44b064:	ldr	x1, [sp, #72]
  44b068:	ldr	x0, [sp, #112]
  44b06c:	add	x2, x1, x0
  44b070:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44b074:	add	x1, x0, #0x4e0
  44b078:	mov	x0, x2
  44b07c:	ldr	w2, [x1]
  44b080:	str	w2, [x0]
  44b084:	ldur	w1, [x1, #3]
  44b088:	stur	w1, [x0, #3]
  44b08c:	ldr	x0, [sp, #88]
  44b090:	add	x0, x0, #0x8
  44b094:	ldr	w2, [sp, #84]
  44b098:	ldr	x1, [sp, #72]
  44b09c:	bl	462cec <_obstack_memory_used@@Base+0x5bac>
  44b0a0:	str	w0, [sp, #124]
  44b0a4:	ldr	x0, [sp, #72]
  44b0a8:	bl	404880 <free@plt>
  44b0ac:	b	44b0c8 <argp_usage@@Base+0x1fdc>
  44b0b0:	ldr	x0, [sp, #88]
  44b0b4:	add	x0, x0, #0x8
  44b0b8:	ldr	w2, [sp, #84]
  44b0bc:	ldr	x1, [sp, #32]
  44b0c0:	bl	462cec <_obstack_memory_used@@Base+0x5bac>
  44b0c4:	str	w0, [sp, #124]
  44b0c8:	ldr	w0, [sp, #124]
  44b0cc:	cmp	w0, #0x0
  44b0d0:	b.eq	44b1f4 <argp_usage@@Base+0x2108>  // b.none
  44b0d4:	ldr	x0, [sp, #96]
  44b0d8:	ldr	x0, [x0, #16]
  44b0dc:	sub	x1, x0, #0x1
  44b0e0:	ldr	x0, [sp, #96]
  44b0e4:	str	x1, [x0, #16]
  44b0e8:	b	44b1f8 <argp_usage@@Base+0x210c>
  44b0ec:	ldr	w0, [sp, #28]
  44b0f0:	and	w0, w0, #0x4000000
  44b0f4:	cmp	w0, #0x0
  44b0f8:	b.eq	44b114 <argp_usage@@Base+0x2028>  // b.none
  44b0fc:	ldr	x0, [sp, #32]
  44b100:	bl	45b858 <argp_usage@@Base+0x1276c>
  44b104:	str	x0, [sp, #32]
  44b108:	ldr	x1, [sp, #32]
  44b10c:	ldr	x0, [sp, #40]
  44b110:	bl	44a24c <argp_usage@@Base+0x1160>
  44b114:	ldr	x0, [sp, #88]
  44b118:	ldr	x1, [sp, #32]
  44b11c:	str	x1, [x0, #8]
  44b120:	b	44b1f4 <argp_usage@@Base+0x2108>
  44b124:	mov	w0, #0x18                  	// #24
  44b128:	movk	w0, #0x6000, lsl #16
  44b12c:	str	w0, [sp, #68]
  44b130:	ldr	x0, [sp, #40]
  44b134:	ldr	x0, [x0]
  44b138:	cmp	x0, #0x0
  44b13c:	b.eq	44b178 <argp_usage@@Base+0x208c>  // b.none
  44b140:	ldr	x0, [sp, #40]
  44b144:	ldr	x0, [x0]
  44b148:	ldr	w0, [x0, #8]
  44b14c:	cmp	w0, #0x0
  44b150:	b.ne	44b178 <argp_usage@@Base+0x208c>  // b.any
  44b154:	ldr	x0, [sp, #40]
  44b158:	ldr	x0, [x0]
  44b15c:	ldr	w1, [x0, #12]
  44b160:	ldr	w0, [sp, #28]
  44b164:	eor	w1, w1, w0
  44b168:	ldr	w0, [sp, #68]
  44b16c:	and	w0, w1, w0
  44b170:	cmp	w0, #0x0
  44b174:	b.eq	44b188 <argp_usage@@Base+0x209c>  // b.none
  44b178:	ldr	w2, [sp, #28]
  44b17c:	mov	w1, #0x0                   	// #0
  44b180:	ldr	x0, [sp, #40]
  44b184:	bl	44a6cc <argp_usage@@Base+0x15e0>
  44b188:	ldr	x0, [sp, #40]
  44b18c:	ldr	x0, [x0]
  44b190:	str	x0, [sp, #104]
  44b194:	ldr	x0, [sp, #32]
  44b198:	bl	45b858 <argp_usage@@Base+0x1276c>
  44b19c:	str	x0, [sp, #56]
  44b1a0:	ldr	w1, [sp, #28]
  44b1a4:	mov	w0, #0x2                   	// #2
  44b1a8:	movk	w0, #0x1000, lsl #16
  44b1ac:	and	w1, w1, w0
  44b1b0:	mov	w0, #0x10000000            	// #268435456
  44b1b4:	cmp	w1, w0
  44b1b8:	b.ne	44b1c4 <argp_usage@@Base+0x20d8>  // b.any
  44b1bc:	ldr	x0, [sp, #56]
  44b1c0:	bl	44a444 <argp_usage@@Base+0x1358>
  44b1c4:	ldr	x0, [sp, #104]
  44b1c8:	ldr	x0, [x0, #16]
  44b1cc:	ldr	x1, [sp, #56]
  44b1d0:	bl	44f6b4 <argp_usage@@Base+0x65c8>
  44b1d4:	str	x0, [sp, #48]
  44b1d8:	ldr	x1, [sp, #48]
  44b1dc:	ldr	x0, [sp, #56]
  44b1e0:	cmp	x1, x0
  44b1e4:	b.eq	44b1f8 <argp_usage@@Base+0x210c>  // b.none
  44b1e8:	ldr	x0, [sp, #56]
  44b1ec:	bl	404880 <free@plt>
  44b1f0:	b	44b1f8 <argp_usage@@Base+0x210c>
  44b1f4:	nop
  44b1f8:	ldp	x29, x30, [sp], #128
  44b1fc:	ret
  44b200:	stp	x29, x30, [sp, #-144]!
  44b204:	mov	x29, sp
  44b208:	str	x0, [sp, #56]
  44b20c:	str	x1, [sp, #48]
  44b210:	str	x2, [sp, #40]
  44b214:	str	w3, [sp, #36]
  44b218:	strb	w4, [sp, #35]
  44b21c:	str	x5, [sp, #24]
  44b220:	str	xzr, [sp, #136]
  44b224:	str	xzr, [sp, #72]
  44b228:	str	xzr, [sp, #112]
  44b22c:	str	wzr, [sp, #108]
  44b230:	b	44b278 <argp_usage@@Base+0x218c>
  44b234:	ldr	x0, [sp, #72]
  44b238:	ldr	x1, [sp, #112]
  44b23c:	cmp	x1, x0
  44b240:	b.ne	44b258 <argp_usage@@Base+0x216c>  // b.any
  44b244:	add	x0, sp, #0x48
  44b248:	mov	x1, x0
  44b24c:	ldr	x0, [sp, #136]
  44b250:	bl	45b754 <argp_usage@@Base+0x12668>
  44b254:	str	x0, [sp, #136]
  44b258:	ldr	x0, [sp, #112]
  44b25c:	add	x1, x0, #0x1
  44b260:	str	x1, [sp, #112]
  44b264:	ldr	x1, [sp, #136]
  44b268:	add	x0, x1, x0
  44b26c:	ldr	w1, [sp, #92]
  44b270:	and	w1, w1, #0xff
  44b274:	strb	w1, [x0]
  44b278:	ldr	x0, [sp, #40]
  44b27c:	bl	404640 <getc_unlocked@plt>
  44b280:	str	w0, [sp, #92]
  44b284:	ldr	w0, [sp, #92]
  44b288:	cmn	w0, #0x1
  44b28c:	b.ne	44b234 <argp_usage@@Base+0x2148>  // b.any
  44b290:	ldr	x0, [sp, #40]
  44b294:	bl	4041e0 <ferror_unlocked@plt>
  44b298:	cmp	w0, #0x0
  44b29c:	b.eq	44b2ac <argp_usage@@Base+0x21c0>  // b.none
  44b2a0:	bl	404bc0 <__errno_location@plt>
  44b2a4:	ldr	w0, [x0]
  44b2a8:	str	w0, [sp, #108]
  44b2ac:	ldr	x0, [sp, #112]
  44b2b0:	add	x0, x0, #0x1
  44b2b4:	mov	x1, x0
  44b2b8:	ldr	x0, [sp, #136]
  44b2bc:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  44b2c0:	str	x0, [sp, #136]
  44b2c4:	ldr	x1, [sp, #136]
  44b2c8:	ldr	x0, [sp, #112]
  44b2cc:	add	x0, x1, x0
  44b2d0:	ldrb	w1, [sp, #35]
  44b2d4:	strb	w1, [x0]
  44b2d8:	ldr	x0, [sp, #112]
  44b2dc:	cmp	x0, #0x0
  44b2e0:	b.eq	44b30c <argp_usage@@Base+0x2220>  // b.none
  44b2e4:	ldr	x0, [sp, #112]
  44b2e8:	sub	x0, x0, #0x1
  44b2ec:	ldr	x1, [sp, #136]
  44b2f0:	add	x0, x1, x0
  44b2f4:	ldrb	w0, [x0]
  44b2f8:	ldrb	w1, [sp, #35]
  44b2fc:	cmp	w1, w0
  44b300:	b.eq	44b30c <argp_usage@@Base+0x2220>  // b.none
  44b304:	mov	w0, #0x1                   	// #1
  44b308:	b	44b310 <argp_usage@@Base+0x2224>
  44b30c:	mov	w0, #0x0                   	// #0
  44b310:	sxtw	x1, w0
  44b314:	ldr	x0, [sp, #112]
  44b318:	add	x0, x1, x0
  44b31c:	ldr	x1, [sp, #136]
  44b320:	add	x0, x1, x0
  44b324:	str	x0, [sp, #80]
  44b328:	ldr	x1, [sp, #136]
  44b32c:	ldr	x0, [sp, #48]
  44b330:	bl	44a24c <argp_usage@@Base+0x1160>
  44b334:	ldr	x0, [sp, #136]
  44b338:	str	x0, [sp, #120]
  44b33c:	ldr	x0, [sp, #136]
  44b340:	str	x0, [sp, #128]
  44b344:	b	44b41c <argp_usage@@Base+0x2330>
  44b348:	ldr	x0, [sp, #128]
  44b34c:	ldrb	w0, [x0]
  44b350:	ldrb	w1, [sp, #35]
  44b354:	cmp	w1, w0
  44b358:	b.ne	44b410 <argp_usage@@Base+0x2324>  // b.any
  44b35c:	ldr	x0, [sp, #128]
  44b360:	str	x0, [sp, #96]
  44b364:	bl	4047f0 <__ctype_b_loc@plt>
  44b368:	ldr	x1, [x0]
  44b36c:	ldrb	w0, [sp, #35]
  44b370:	lsl	x0, x0, #1
  44b374:	add	x0, x1, x0
  44b378:	ldrh	w0, [x0]
  44b37c:	and	w0, w0, #0x2000
  44b380:	cmp	w0, #0x0
  44b384:	b.eq	44b3dc <argp_usage@@Base+0x22f0>  // b.none
  44b388:	ldr	x1, [sp, #96]
  44b38c:	ldr	x0, [sp, #120]
  44b390:	cmp	x1, x0
  44b394:	b.eq	44b400 <argp_usage@@Base+0x2314>  // b.none
  44b398:	bl	4047f0 <__ctype_b_loc@plt>
  44b39c:	ldr	x1, [x0]
  44b3a0:	ldr	x0, [sp, #96]
  44b3a4:	sub	x0, x0, #0x1
  44b3a8:	ldrb	w0, [x0]
  44b3ac:	and	x0, x0, #0xff
  44b3b0:	lsl	x0, x0, #1
  44b3b4:	add	x0, x1, x0
  44b3b8:	ldrh	w0, [x0]
  44b3bc:	and	w0, w0, #0x2000
  44b3c0:	cmp	w0, #0x0
  44b3c4:	b.eq	44b3d8 <argp_usage@@Base+0x22ec>  // b.none
  44b3c8:	ldr	x0, [sp, #96]
  44b3cc:	sub	x0, x0, #0x1
  44b3d0:	str	x0, [sp, #96]
  44b3d4:	b	44b388 <argp_usage@@Base+0x229c>
  44b3d8:	nop
  44b3dc:	ldr	x0, [sp, #96]
  44b3e0:	strb	wzr, [x0]
  44b3e4:	ldr	x4, [sp, #56]
  44b3e8:	ldr	x3, [sp, #24]
  44b3ec:	ldr	w2, [sp, #36]
  44b3f0:	ldr	x1, [sp, #120]
  44b3f4:	ldr	x0, [sp, #48]
  44b3f8:	blr	x4
  44b3fc:	b	44b404 <argp_usage@@Base+0x2318>
  44b400:	nop
  44b404:	ldr	x0, [sp, #128]
  44b408:	add	x0, x0, #0x1
  44b40c:	str	x0, [sp, #120]
  44b410:	ldr	x0, [sp, #128]
  44b414:	add	x0, x0, #0x1
  44b418:	str	x0, [sp, #128]
  44b41c:	ldr	x1, [sp, #128]
  44b420:	ldr	x0, [sp, #80]
  44b424:	cmp	x1, x0
  44b428:	b.cc	44b348 <argp_usage@@Base+0x225c>  // b.lo, b.ul, b.last
  44b42c:	bl	404bc0 <__errno_location@plt>
  44b430:	mov	x1, x0
  44b434:	ldr	w0, [sp, #108]
  44b438:	str	w0, [x1]
  44b43c:	ldr	w0, [sp, #108]
  44b440:	cmp	w0, #0x0
  44b444:	b.eq	44b450 <argp_usage@@Base+0x2364>  // b.none
  44b448:	mov	w0, #0xffffffff            	// #-1
  44b44c:	b	44b454 <argp_usage@@Base+0x2368>
  44b450:	mov	w0, #0x0                   	// #0
  44b454:	ldp	x29, x30, [sp], #144
  44b458:	ret
  44b45c:	stp	x29, x30, [sp, #-64]!
  44b460:	mov	x29, sp
  44b464:	str	x0, [sp, #40]
  44b468:	str	x1, [sp, #32]
  44b46c:	str	w2, [sp, #28]
  44b470:	str	x3, [sp, #16]
  44b474:	ldr	x0, [sp, #16]
  44b478:	str	x0, [sp, #56]
  44b47c:	ldr	x0, [sp, #56]
  44b480:	ldr	x3, [x0]
  44b484:	ldr	w2, [sp, #28]
  44b488:	ldr	x1, [sp, #32]
  44b48c:	ldr	x0, [sp, #40]
  44b490:	blr	x3
  44b494:	nop
  44b498:	ldp	x29, x30, [sp], #64
  44b49c:	ret
  44b4a0:	stp	x29, x30, [sp, #-64]!
  44b4a4:	mov	x29, sp
  44b4a8:	str	x0, [sp, #40]
  44b4ac:	str	x1, [sp, #32]
  44b4b0:	str	x2, [sp, #24]
  44b4b4:	str	w3, [sp, #20]
  44b4b8:	strb	w4, [sp, #19]
  44b4bc:	ldr	x0, [sp, #24]
  44b4c0:	ldrb	w0, [x0]
  44b4c4:	cmp	w0, #0x2d
  44b4c8:	b.ne	44b4e8 <argp_usage@@Base+0x23fc>  // b.any
  44b4cc:	ldr	x0, [sp, #24]
  44b4d0:	add	x0, x0, #0x1
  44b4d4:	ldrb	w0, [x0]
  44b4d8:	cmp	w0, #0x0
  44b4dc:	b.ne	44b4e8 <argp_usage@@Base+0x23fc>  // b.any
  44b4e0:	mov	w0, #0x1                   	// #1
  44b4e4:	b	44b4ec <argp_usage@@Base+0x2400>
  44b4e8:	mov	w0, #0x0                   	// #0
  44b4ec:	strb	w0, [sp, #51]
  44b4f0:	ldrb	w0, [sp, #51]
  44b4f4:	and	w0, w0, #0x1
  44b4f8:	strb	w0, [sp, #51]
  44b4fc:	str	wzr, [sp, #52]
  44b500:	ldrb	w0, [sp, #51]
  44b504:	cmp	w0, #0x0
  44b508:	b.eq	44b520 <argp_usage@@Base+0x2434>  // b.none
  44b50c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  44b510:	add	x0, x0, #0x4a8
  44b514:	ldr	x0, [x0]
  44b518:	str	x0, [sp, #56]
  44b51c:	b	44b548 <argp_usage@@Base+0x245c>
  44b520:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44b524:	add	x1, x0, #0x4e8
  44b528:	ldr	x0, [sp, #24]
  44b52c:	bl	4043d0 <fopen@plt>
  44b530:	str	x0, [sp, #56]
  44b534:	ldr	x0, [sp, #56]
  44b538:	cmp	x0, #0x0
  44b53c:	b.ne	44b548 <argp_usage@@Base+0x245c>  // b.any
  44b540:	mov	w0, #0xffffffff            	// #-1
  44b544:	b	44b5a0 <argp_usage@@Base+0x24b4>
  44b548:	add	x0, sp, #0x28
  44b54c:	mov	x5, x0
  44b550:	ldrb	w4, [sp, #19]
  44b554:	ldr	w3, [sp, #20]
  44b558:	ldr	x2, [sp, #56]
  44b55c:	ldr	x1, [sp, #32]
  44b560:	adrp	x0, 44b000 <argp_usage@@Base+0x1f14>
  44b564:	add	x0, x0, #0x45c
  44b568:	bl	44b200 <argp_usage@@Base+0x2114>
  44b56c:	str	w0, [sp, #52]
  44b570:	ldrb	w0, [sp, #51]
  44b574:	eor	w0, w0, #0x1
  44b578:	and	w0, w0, #0xff
  44b57c:	cmp	w0, #0x0
  44b580:	b.eq	44b59c <argp_usage@@Base+0x24b0>  // b.none
  44b584:	ldr	x0, [sp, #56]
  44b588:	bl	404380 <fclose@plt>
  44b58c:	cmp	w0, #0x0
  44b590:	b.eq	44b59c <argp_usage@@Base+0x24b0>  // b.none
  44b594:	mov	w0, #0xffffffff            	// #-1
  44b598:	str	w0, [sp, #52]
  44b59c:	ldr	w0, [sp, #52]
  44b5a0:	ldp	x29, x30, [sp], #64
  44b5a4:	ret
  44b5a8:	stp	x29, x30, [sp, #-64]!
  44b5ac:	mov	x29, sp
  44b5b0:	str	w0, [sp, #44]
  44b5b4:	str	w1, [sp, #40]
  44b5b8:	str	x2, [sp, #32]
  44b5bc:	str	x3, [sp, #24]
  44b5c0:	str	w4, [sp, #20]
  44b5c4:	mov	w0, #0x1                   	// #1
  44b5c8:	str	w0, [sp, #60]
  44b5cc:	ldr	w0, [sp, #44]
  44b5d0:	cmp	w0, #0x0
  44b5d4:	b.lt	44b5e8 <argp_usage@@Base+0x24fc>  // b.tstop
  44b5d8:	ldr	x1, [sp, #24]
  44b5dc:	ldr	w0, [sp, #44]
  44b5e0:	bl	404470 <futimens@plt>
  44b5e4:	str	w0, [sp, #60]
  44b5e8:	ldr	x0, [sp, #32]
  44b5ec:	cmp	x0, #0x0
  44b5f0:	b.eq	44b634 <argp_usage@@Base+0x2548>  // b.none
  44b5f4:	ldr	w0, [sp, #44]
  44b5f8:	cmp	w0, #0x0
  44b5fc:	b.lt	44b61c <argp_usage@@Base+0x2530>  // b.tstop
  44b600:	ldr	w0, [sp, #60]
  44b604:	cmn	w0, #0x1
  44b608:	b.ne	44b634 <argp_usage@@Base+0x2548>  // b.any
  44b60c:	bl	404bc0 <__errno_location@plt>
  44b610:	ldr	w0, [x0]
  44b614:	cmp	w0, #0x26
  44b618:	b.ne	44b634 <argp_usage@@Base+0x2548>  // b.any
  44b61c:	ldr	w3, [sp, #20]
  44b620:	ldr	x2, [sp, #24]
  44b624:	ldr	x1, [sp, #32]
  44b628:	ldr	w0, [sp, #40]
  44b62c:	bl	404960 <utimensat@plt>
  44b630:	str	w0, [sp, #60]
  44b634:	ldr	w0, [sp, #60]
  44b638:	cmp	w0, #0x1
  44b63c:	b.ne	44b658 <argp_usage@@Base+0x256c>  // b.any
  44b640:	bl	404bc0 <__errno_location@plt>
  44b644:	mov	x1, x0
  44b648:	mov	w0, #0x9                   	// #9
  44b64c:	str	w0, [x1]
  44b650:	mov	w0, #0xffffffff            	// #-1
  44b654:	str	w0, [sp, #60]
  44b658:	ldr	w0, [sp, #60]
  44b65c:	ldp	x29, x30, [sp], #64
  44b660:	ret
  44b664:	stp	x29, x30, [sp, #-48]!
  44b668:	mov	x29, sp
  44b66c:	str	x0, [sp, #24]
  44b670:	str	x1, [sp, #16]
  44b674:	ldr	x0, [sp, #16]
  44b678:	ldr	w0, [x0, #16]
  44b67c:	and	w0, w0, #0xf000
  44b680:	cmp	w0, #0xa, lsl #12
  44b684:	b.eq	44b77c <argp_usage@@Base+0x2690>  // b.none
  44b688:	mov	x3, #0x0                   	// #0
  44b68c:	mov	x2, #0x0                   	// #0
  44b690:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44b694:	add	x1, x0, #0x4f0
  44b698:	ldr	x0, [sp, #24]
  44b69c:	bl	404780 <getxattr@plt>
  44b6a0:	str	x0, [sp, #40]
  44b6a4:	ldr	x0, [sp, #40]
  44b6a8:	cmp	x0, #0x0
  44b6ac:	b.ge	44b6c8 <argp_usage@@Base+0x25dc>  // b.tcont
  44b6b0:	bl	404bc0 <__errno_location@plt>
  44b6b4:	ldr	w0, [x0]
  44b6b8:	cmp	w0, #0x3d
  44b6bc:	b.ne	44b6c8 <argp_usage@@Base+0x25dc>  // b.any
  44b6c0:	str	xzr, [sp, #40]
  44b6c4:	b	44b6dc <argp_usage@@Base+0x25f0>
  44b6c8:	ldr	x0, [sp, #40]
  44b6cc:	cmp	x0, #0x0
  44b6d0:	b.le	44b6dc <argp_usage@@Base+0x25f0>
  44b6d4:	mov	w0, #0x1                   	// #1
  44b6d8:	b	44b780 <argp_usage@@Base+0x2694>
  44b6dc:	ldr	x0, [sp, #40]
  44b6e0:	cmp	x0, #0x0
  44b6e4:	b.ne	44b750 <argp_usage@@Base+0x2664>  // b.any
  44b6e8:	ldr	x0, [sp, #16]
  44b6ec:	ldr	w0, [x0, #16]
  44b6f0:	and	w0, w0, #0xf000
  44b6f4:	cmp	w0, #0x4, lsl #12
  44b6f8:	b.ne	44b750 <argp_usage@@Base+0x2664>  // b.any
  44b6fc:	mov	x3, #0x0                   	// #0
  44b700:	mov	x2, #0x0                   	// #0
  44b704:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44b708:	add	x1, x0, #0x508
  44b70c:	ldr	x0, [sp, #24]
  44b710:	bl	404780 <getxattr@plt>
  44b714:	str	x0, [sp, #40]
  44b718:	ldr	x0, [sp, #40]
  44b71c:	cmp	x0, #0x0
  44b720:	b.ge	44b73c <argp_usage@@Base+0x2650>  // b.tcont
  44b724:	bl	404bc0 <__errno_location@plt>
  44b728:	ldr	w0, [x0]
  44b72c:	cmp	w0, #0x3d
  44b730:	b.ne	44b73c <argp_usage@@Base+0x2650>  // b.any
  44b734:	str	xzr, [sp, #40]
  44b738:	b	44b750 <argp_usage@@Base+0x2664>
  44b73c:	ldr	x0, [sp, #40]
  44b740:	cmp	x0, #0x0
  44b744:	b.le	44b750 <argp_usage@@Base+0x2664>
  44b748:	mov	w0, #0x1                   	// #1
  44b74c:	b	44b780 <argp_usage@@Base+0x2694>
  44b750:	ldr	x0, [sp, #40]
  44b754:	cmp	x0, #0x0
  44b758:	b.ge	44b774 <argp_usage@@Base+0x2688>  // b.tcont
  44b75c:	bl	404bc0 <__errno_location@plt>
  44b760:	ldr	w0, [x0]
  44b764:	bl	475468 <_obstack_memory_used@@Base+0x18328>
  44b768:	and	w0, w0, #0xff
  44b76c:	neg	w0, w0
  44b770:	b	44b780 <argp_usage@@Base+0x2694>
  44b774:	ldr	x0, [sp, #40]
  44b778:	b	44b780 <argp_usage@@Base+0x2694>
  44b77c:	mov	w0, #0x0                   	// #0
  44b780:	ldp	x29, x30, [sp], #48
  44b784:	ret
  44b788:	stp	x29, x30, [sp, #-48]!
  44b78c:	mov	x29, sp
  44b790:	str	x0, [sp, #40]
  44b794:	str	x1, [sp, #32]
  44b798:	str	x2, [sp, #24]
  44b79c:	b	44b7c0 <argp_usage@@Base+0x26d4>
  44b7a0:	ldr	x0, [sp, #32]
  44b7a4:	ldrb	w0, [x0]
  44b7a8:	bl	404bd0 <tolower@plt>
  44b7ac:	ldr	x1, [sp, #40]
  44b7b0:	bl	404250 <fputc@plt>
  44b7b4:	ldr	x0, [sp, #32]
  44b7b8:	add	x0, x0, #0x1
  44b7bc:	str	x0, [sp, #32]
  44b7c0:	ldr	x0, [sp, #24]
  44b7c4:	sub	x1, x0, #0x1
  44b7c8:	str	x1, [sp, #24]
  44b7cc:	cmp	x0, #0x0
  44b7d0:	b.ne	44b7a0 <argp_usage@@Base+0x26b4>  // b.any
  44b7d4:	nop
  44b7d8:	nop
  44b7dc:	ldp	x29, x30, [sp], #48
  44b7e0:	ret
  44b7e4:	stp	x29, x30, [sp, #-48]!
  44b7e8:	mov	x29, sp
  44b7ec:	str	x0, [sp, #40]
  44b7f0:	str	x1, [sp, #32]
  44b7f4:	str	x2, [sp, #24]
  44b7f8:	b	44b81c <argp_usage@@Base+0x2730>
  44b7fc:	ldr	x0, [sp, #32]
  44b800:	ldrb	w0, [x0]
  44b804:	bl	404400 <toupper@plt>
  44b808:	ldr	x1, [sp, #40]
  44b80c:	bl	404250 <fputc@plt>
  44b810:	ldr	x0, [sp, #32]
  44b814:	add	x0, x0, #0x1
  44b818:	str	x0, [sp, #32]
  44b81c:	ldr	x0, [sp, #24]
  44b820:	sub	x1, x0, #0x1
  44b824:	str	x1, [sp, #24]
  44b828:	cmp	x0, #0x0
  44b82c:	b.ne	44b7fc <argp_usage@@Base+0x2710>  // b.any
  44b830:	nop
  44b834:	nop
  44b838:	ldp	x29, x30, [sp], #48
  44b83c:	ret
  44b840:	sub	sp, sp, #0x20
  44b844:	str	w0, [sp, #12]
  44b848:	str	w1, [sp, #8]
  44b84c:	mov	w0, #0x17a                 	// #378
  44b850:	str	w0, [sp, #28]
  44b854:	ldr	w1, [sp, #12]
  44b858:	ldr	w0, [sp, #8]
  44b85c:	sub	w0, w1, w0
  44b860:	add	w1, w0, #0x4
  44b864:	ldr	w0, [sp, #28]
  44b868:	add	w0, w1, w0
  44b86c:	mov	w1, #0x2493                	// #9363
  44b870:	movk	w1, #0x9249, lsl #16
  44b874:	smull	x1, w0, w1
  44b878:	lsr	x1, x1, #32
  44b87c:	add	w1, w0, w1
  44b880:	asr	w2, w1, #2
  44b884:	asr	w1, w0, #31
  44b888:	sub	w2, w2, w1
  44b88c:	mov	w1, w2
  44b890:	lsl	w1, w1, #3
  44b894:	sub	w1, w1, w2
  44b898:	sub	w2, w0, w1
  44b89c:	ldr	w0, [sp, #12]
  44b8a0:	sub	w0, w0, w2
  44b8a4:	add	w0, w0, #0x3
  44b8a8:	add	sp, sp, #0x20
  44b8ac:	ret
  44b8b0:	stp	x29, x30, [sp, #-80]!
  44b8b4:	mov	x29, sp
  44b8b8:	str	x0, [sp, #56]
  44b8bc:	str	x1, [sp, #48]
  44b8c0:	str	x2, [sp, #40]
  44b8c4:	str	x3, [sp, #32]
  44b8c8:	str	w4, [sp, #28]
  44b8cc:	strb	wzr, [sp, #79]
  44b8d0:	add	x0, sp, #0x4f
  44b8d4:	ldr	w6, [sp, #28]
  44b8d8:	ldr	x5, [sp, #32]
  44b8dc:	mov	x4, x0
  44b8e0:	mov	w3, #0x0                   	// #0
  44b8e4:	ldr	x2, [sp, #40]
  44b8e8:	ldr	x1, [sp, #48]
  44b8ec:	ldr	x0, [sp, #56]
  44b8f0:	bl	44b8fc <argp_usage@@Base+0x2810>
  44b8f4:	ldp	x29, x30, [sp], #80
  44b8f8:	ret
  44b8fc:	sub	sp, sp, #0x7d0
  44b900:	stp	x29, x30, [sp]
  44b904:	mov	x29, sp
  44b908:	str	x0, [sp, #56]
  44b90c:	str	x1, [sp, #48]
  44b910:	str	x2, [sp, #40]
  44b914:	strb	w3, [sp, #39]
  44b918:	str	x4, [sp, #24]
  44b91c:	str	x5, [sp, #16]
  44b920:	str	w6, [sp, #32]
  44b924:	mov	x0, #0xffffffffffffffff    	// #-1
  44b928:	str	x0, [sp, #1616]
  44b92c:	ldr	x0, [sp, #40]
  44b930:	ldr	w0, [x0, #8]
  44b934:	str	w0, [sp, #1996]
  44b938:	str	xzr, [sp, #1976]
  44b93c:	ldr	x0, [sp, #56]
  44b940:	str	x0, [sp, #1608]
  44b944:	str	xzr, [sp, #1984]
  44b948:	ldr	x0, [sp, #40]
  44b94c:	ldr	x0, [x0, #48]
  44b950:	str	x0, [sp, #1984]
  44b954:	ldr	x0, [sp, #1984]
  44b958:	cmp	x0, #0x0
  44b95c:	b.ne	44b96c <argp_usage@@Base+0x2880>  // b.any
  44b960:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44b964:	add	x0, x0, #0x528
  44b968:	str	x0, [sp, #1984]
  44b96c:	ldr	w0, [sp, #1996]
  44b970:	cmp	w0, #0xc
  44b974:	b.le	44b988 <argp_usage@@Base+0x289c>
  44b978:	ldr	w0, [sp, #1996]
  44b97c:	sub	w0, w0, #0xc
  44b980:	str	w0, [sp, #1996]
  44b984:	b	44b99c <argp_usage@@Base+0x28b0>
  44b988:	ldr	w0, [sp, #1996]
  44b98c:	cmp	w0, #0x0
  44b990:	b.ne	44b99c <argp_usage@@Base+0x28b0>  // b.any
  44b994:	mov	w0, #0xc                   	// #12
  44b998:	str	w0, [sp, #1996]
  44b99c:	ldr	x0, [sp, #48]
  44b9a0:	str	x0, [sp, #1968]
  44b9a4:	b	44dec8 <argp_usage@@Base+0x4ddc>
  44b9a8:	str	wzr, [sp, #1964]
  44b9ac:	str	wzr, [sp, #1956]
  44b9b0:	mov	w0, #0xffffffff            	// #-1
  44b9b4:	str	w0, [sp, #1916]
  44b9b8:	strb	wzr, [sp, #1915]
  44b9bc:	ldrb	w0, [sp, #39]
  44b9c0:	strb	w0, [sp, #1914]
  44b9c4:	strb	wzr, [sp, #1903]
  44b9c8:	ldr	x0, [sp, #1968]
  44b9cc:	ldrb	w0, [x0]
  44b9d0:	cmp	w0, #0x25
  44b9d4:	b.eq	44bb00 <argp_usage@@Base+0x2a14>  // b.none
  44b9d8:	mov	x0, #0x1                   	// #1
  44b9dc:	str	x0, [sp, #1144]
  44b9e0:	ldr	w1, [sp, #1916]
  44b9e4:	ldr	w0, [sp, #1916]
  44b9e8:	mov	w2, #0x0                   	// #0
  44b9ec:	cmp	w1, #0x0
  44b9f0:	csel	w0, w0, w2, ge  // ge = tcont
  44b9f4:	sxtw	x0, w0
  44b9f8:	str	x0, [sp, #1136]
  44b9fc:	ldr	x0, [sp, #1136]
  44ba00:	ldr	x2, [sp, #1144]
  44ba04:	ldr	x1, [sp, #1144]
  44ba08:	cmp	x2, x0
  44ba0c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44ba10:	str	x0, [sp, #1128]
  44ba14:	ldr	x1, [sp, #1616]
  44ba18:	ldr	x0, [sp, #1976]
  44ba1c:	sub	x0, x1, x0
  44ba20:	ldr	x1, [sp, #1128]
  44ba24:	cmp	x1, x0
  44ba28:	b.cc	44ba34 <argp_usage@@Base+0x2948>  // b.lo, b.ul, b.last
  44ba2c:	mov	x0, #0x0                   	// #0
  44ba30:	b	44dedc <argp_usage@@Base+0x4df0>
  44ba34:	ldr	x0, [sp, #1608]
  44ba38:	cmp	x0, #0x0
  44ba3c:	b.eq	44baec <argp_usage@@Base+0x2a00>  // b.none
  44ba40:	ldr	w0, [sp, #1956]
  44ba44:	cmp	w0, #0x0
  44ba48:	b.ne	44badc <argp_usage@@Base+0x29f0>  // b.any
  44ba4c:	ldr	x1, [sp, #1144]
  44ba50:	ldr	x0, [sp, #1136]
  44ba54:	cmp	x1, x0
  44ba58:	b.cs	44badc <argp_usage@@Base+0x29f0>  // b.hs, b.nlast
  44ba5c:	ldrsw	x1, [sp, #1916]
  44ba60:	ldr	x0, [sp, #1144]
  44ba64:	sub	x0, x1, x0
  44ba68:	str	x0, [sp, #1120]
  44ba6c:	ldr	w0, [sp, #1964]
  44ba70:	cmp	w0, #0x30
  44ba74:	b.ne	44baac <argp_usage@@Base+0x29c0>  // b.any
  44ba78:	str	xzr, [sp, #1888]
  44ba7c:	b	44ba98 <argp_usage@@Base+0x29ac>
  44ba80:	ldr	x1, [sp, #1608]
  44ba84:	mov	w0, #0x30                  	// #48
  44ba88:	bl	404250 <fputc@plt>
  44ba8c:	ldr	x0, [sp, #1888]
  44ba90:	add	x0, x0, #0x1
  44ba94:	str	x0, [sp, #1888]
  44ba98:	ldr	x1, [sp, #1888]
  44ba9c:	ldr	x0, [sp, #1120]
  44baa0:	cmp	x1, x0
  44baa4:	b.cc	44ba80 <argp_usage@@Base+0x2994>  // b.lo, b.ul, b.last
  44baa8:	b	44badc <argp_usage@@Base+0x29f0>
  44baac:	str	xzr, [sp, #1880]
  44bab0:	b	44bacc <argp_usage@@Base+0x29e0>
  44bab4:	ldr	x1, [sp, #1608]
  44bab8:	mov	w0, #0x20                  	// #32
  44babc:	bl	404250 <fputc@plt>
  44bac0:	ldr	x0, [sp, #1880]
  44bac4:	add	x0, x0, #0x1
  44bac8:	str	x0, [sp, #1880]
  44bacc:	ldr	x1, [sp, #1880]
  44bad0:	ldr	x0, [sp, #1120]
  44bad4:	cmp	x1, x0
  44bad8:	b.cc	44bab4 <argp_usage@@Base+0x29c8>  // b.lo, b.ul, b.last
  44badc:	ldr	x0, [sp, #1968]
  44bae0:	ldrb	w0, [x0]
  44bae4:	ldr	x1, [sp, #1608]
  44bae8:	bl	404250 <fputc@plt>
  44baec:	ldr	x1, [sp, #1976]
  44baf0:	ldr	x0, [sp, #1128]
  44baf4:	add	x0, x1, x0
  44baf8:	str	x0, [sp, #1976]
  44bafc:	b	44debc <argp_usage@@Base+0x4dd0>
  44bb00:	ldr	x0, [sp, #1968]
  44bb04:	add	x0, x0, #0x1
  44bb08:	str	x0, [sp, #1968]
  44bb0c:	ldr	x0, [sp, #1968]
  44bb10:	ldrb	w0, [x0]
  44bb14:	cmp	w0, #0x5f
  44bb18:	b.eq	44bb54 <argp_usage@@Base+0x2a68>  // b.none
  44bb1c:	cmp	w0, #0x5f
  44bb20:	b.gt	44bb7c <argp_usage@@Base+0x2a90>
  44bb24:	cmp	w0, #0x5e
  44bb28:	b.eq	44bb64 <argp_usage@@Base+0x2a78>  // b.none
  44bb2c:	cmp	w0, #0x5e
  44bb30:	b.gt	44bb7c <argp_usage@@Base+0x2a90>
  44bb34:	cmp	w0, #0x30
  44bb38:	b.eq	44bb54 <argp_usage@@Base+0x2a68>  // b.none
  44bb3c:	cmp	w0, #0x30
  44bb40:	b.gt	44bb7c <argp_usage@@Base+0x2a90>
  44bb44:	cmp	w0, #0x23
  44bb48:	b.eq	44bb70 <argp_usage@@Base+0x2a84>  // b.none
  44bb4c:	cmp	w0, #0x2d
  44bb50:	b.ne	44bb7c <argp_usage@@Base+0x2a90>  // b.any
  44bb54:	ldr	x0, [sp, #1968]
  44bb58:	ldrb	w0, [x0]
  44bb5c:	str	w0, [sp, #1964]
  44bb60:	b	44bb9c <argp_usage@@Base+0x2ab0>
  44bb64:	mov	w0, #0x1                   	// #1
  44bb68:	strb	w0, [sp, #1914]
  44bb6c:	b	44bb9c <argp_usage@@Base+0x2ab0>
  44bb70:	mov	w0, #0x1                   	// #1
  44bb74:	strb	w0, [sp, #1903]
  44bb78:	b	44bb9c <argp_usage@@Base+0x2ab0>
  44bb7c:	nop
  44bb80:	nop
  44bb84:	ldr	x0, [sp, #1968]
  44bb88:	ldrb	w0, [x0]
  44bb8c:	sub	w0, w0, #0x30
  44bb90:	cmp	w0, #0x9
  44bb94:	b.hi	44bc38 <argp_usage@@Base+0x2b4c>  // b.pmore
  44bb98:	b	44bba0 <argp_usage@@Base+0x2ab4>
  44bb9c:	b	44bb00 <argp_usage@@Base+0x2a14>
  44bba0:	str	wzr, [sp, #1916]
  44bba4:	ldr	w1, [sp, #1916]
  44bba8:	mov	w0, #0xcccc                	// #52428
  44bbac:	movk	w0, #0xccc, lsl #16
  44bbb0:	cmp	w1, w0
  44bbb4:	b.gt	44bbdc <argp_usage@@Base+0x2af0>
  44bbb8:	ldr	w1, [sp, #1916]
  44bbbc:	mov	w0, #0xcccc                	// #52428
  44bbc0:	movk	w0, #0xccc, lsl #16
  44bbc4:	cmp	w1, w0
  44bbc8:	b.ne	44bbe8 <argp_usage@@Base+0x2afc>  // b.any
  44bbcc:	ldr	x0, [sp, #1968]
  44bbd0:	ldrb	w0, [x0]
  44bbd4:	cmp	w0, #0x37
  44bbd8:	b.ls	44bbe8 <argp_usage@@Base+0x2afc>  // b.plast
  44bbdc:	mov	w0, #0x7fffffff            	// #2147483647
  44bbe0:	str	w0, [sp, #1916]
  44bbe4:	b	44bc18 <argp_usage@@Base+0x2b2c>
  44bbe8:	ldr	w1, [sp, #1916]
  44bbec:	mov	w0, w1
  44bbf0:	lsl	w0, w0, #2
  44bbf4:	add	w0, w0, w1
  44bbf8:	lsl	w0, w0, #1
  44bbfc:	str	w0, [sp, #1916]
  44bc00:	ldr	x0, [sp, #1968]
  44bc04:	ldrb	w0, [x0]
  44bc08:	sub	w0, w0, #0x30
  44bc0c:	ldr	w1, [sp, #1916]
  44bc10:	add	w0, w1, w0
  44bc14:	str	w0, [sp, #1916]
  44bc18:	ldr	x0, [sp, #1968]
  44bc1c:	add	x0, x0, #0x1
  44bc20:	str	x0, [sp, #1968]
  44bc24:	ldr	x0, [sp, #1968]
  44bc28:	ldrb	w0, [x0]
  44bc2c:	sub	w0, w0, #0x30
  44bc30:	cmp	w0, #0x9
  44bc34:	b.ls	44bba4 <argp_usage@@Base+0x2ab8>  // b.plast
  44bc38:	ldr	x0, [sp, #1968]
  44bc3c:	ldrb	w0, [x0]
  44bc40:	cmp	w0, #0x45
  44bc44:	b.eq	44bc50 <argp_usage@@Base+0x2b64>  // b.none
  44bc48:	cmp	w0, #0x4f
  44bc4c:	b.ne	44bc68 <argp_usage@@Base+0x2b7c>  // b.any
  44bc50:	ldr	x0, [sp, #1968]
  44bc54:	add	x1, x0, #0x1
  44bc58:	str	x1, [sp, #1968]
  44bc5c:	ldrb	w0, [x0]
  44bc60:	str	w0, [sp, #1960]
  44bc64:	b	44bc70 <argp_usage@@Base+0x2b84>
  44bc68:	str	wzr, [sp, #1960]
  44bc6c:	nop
  44bc70:	ldr	x0, [sp, #1968]
  44bc74:	ldrb	w0, [x0]
  44bc78:	str	w0, [sp, #1896]
  44bc7c:	ldr	w0, [sp, #1896]
  44bc80:	cmp	w0, #0x7a
  44bc84:	b.hi	44dcc4 <argp_usage@@Base+0x4bd8>  // b.pmore
  44bc88:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44bc8c:	add	x1, x1, #0x564
  44bc90:	ldr	w0, [x1, w0, uxtw #2]
  44bc94:	adr	x1, 44bca0 <argp_usage@@Base+0x2bb4>
  44bc98:	add	x0, x1, w0, sxtw #2
  44bc9c:	br	x0
  44bca0:	ldr	w0, [sp, #1960]
  44bca4:	cmp	w0, #0x0
  44bca8:	b.ne	44dc08 <argp_usage@@Base+0x4b1c>  // b.any
  44bcac:	mov	x0, #0x1                   	// #1
  44bcb0:	str	x0, [sp, #1208]
  44bcb4:	ldr	w1, [sp, #1916]
  44bcb8:	ldr	w0, [sp, #1916]
  44bcbc:	mov	w2, #0x0                   	// #0
  44bcc0:	cmp	w1, #0x0
  44bcc4:	csel	w0, w0, w2, ge  // ge = tcont
  44bcc8:	sxtw	x0, w0
  44bccc:	str	x0, [sp, #1200]
  44bcd0:	ldr	x0, [sp, #1200]
  44bcd4:	ldr	x2, [sp, #1208]
  44bcd8:	ldr	x1, [sp, #1208]
  44bcdc:	cmp	x2, x0
  44bce0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44bce4:	str	x0, [sp, #1192]
  44bce8:	ldr	x1, [sp, #1616]
  44bcec:	ldr	x0, [sp, #1976]
  44bcf0:	sub	x0, x1, x0
  44bcf4:	ldr	x1, [sp, #1192]
  44bcf8:	cmp	x1, x0
  44bcfc:	b.cc	44bd08 <argp_usage@@Base+0x2c1c>  // b.lo, b.ul, b.last
  44bd00:	mov	x0, #0x0                   	// #0
  44bd04:	b	44dedc <argp_usage@@Base+0x4df0>
  44bd08:	ldr	x0, [sp, #1608]
  44bd0c:	cmp	x0, #0x0
  44bd10:	b.eq	44bdc0 <argp_usage@@Base+0x2cd4>  // b.none
  44bd14:	ldr	w0, [sp, #1956]
  44bd18:	cmp	w0, #0x0
  44bd1c:	b.ne	44bdb0 <argp_usage@@Base+0x2cc4>  // b.any
  44bd20:	ldr	x1, [sp, #1208]
  44bd24:	ldr	x0, [sp, #1200]
  44bd28:	cmp	x1, x0
  44bd2c:	b.cs	44bdb0 <argp_usage@@Base+0x2cc4>  // b.hs, b.nlast
  44bd30:	ldrsw	x1, [sp, #1916]
  44bd34:	ldr	x0, [sp, #1208]
  44bd38:	sub	x0, x1, x0
  44bd3c:	str	x0, [sp, #1184]
  44bd40:	ldr	w0, [sp, #1964]
  44bd44:	cmp	w0, #0x30
  44bd48:	b.ne	44bd80 <argp_usage@@Base+0x2c94>  // b.any
  44bd4c:	str	xzr, [sp, #1872]
  44bd50:	b	44bd6c <argp_usage@@Base+0x2c80>
  44bd54:	ldr	x1, [sp, #1608]
  44bd58:	mov	w0, #0x30                  	// #48
  44bd5c:	bl	404250 <fputc@plt>
  44bd60:	ldr	x0, [sp, #1872]
  44bd64:	add	x0, x0, #0x1
  44bd68:	str	x0, [sp, #1872]
  44bd6c:	ldr	x1, [sp, #1872]
  44bd70:	ldr	x0, [sp, #1184]
  44bd74:	cmp	x1, x0
  44bd78:	b.cc	44bd54 <argp_usage@@Base+0x2c68>  // b.lo, b.ul, b.last
  44bd7c:	b	44bdb0 <argp_usage@@Base+0x2cc4>
  44bd80:	str	xzr, [sp, #1864]
  44bd84:	b	44bda0 <argp_usage@@Base+0x2cb4>
  44bd88:	ldr	x1, [sp, #1608]
  44bd8c:	mov	w0, #0x20                  	// #32
  44bd90:	bl	404250 <fputc@plt>
  44bd94:	ldr	x0, [sp, #1864]
  44bd98:	add	x0, x0, #0x1
  44bd9c:	str	x0, [sp, #1864]
  44bda0:	ldr	x1, [sp, #1864]
  44bda4:	ldr	x0, [sp, #1184]
  44bda8:	cmp	x1, x0
  44bdac:	b.cc	44bd88 <argp_usage@@Base+0x2c9c>  // b.lo, b.ul, b.last
  44bdb0:	ldr	x0, [sp, #1968]
  44bdb4:	ldrb	w0, [x0]
  44bdb8:	ldr	x1, [sp, #1608]
  44bdbc:	bl	404250 <fputc@plt>
  44bdc0:	ldr	x1, [sp, #1976]
  44bdc4:	ldr	x0, [sp, #1192]
  44bdc8:	add	x0, x1, x0
  44bdcc:	str	x0, [sp, #1976]
  44bdd0:	b	44debc <argp_usage@@Base+0x4dd0>
  44bdd4:	ldr	w0, [sp, #1960]
  44bdd8:	cmp	w0, #0x0
  44bddc:	b.ne	44dc10 <argp_usage@@Base+0x4b24>  // b.any
  44bde0:	ldrb	w0, [sp, #1903]
  44bde4:	cmp	w0, #0x0
  44bde8:	b.eq	44bfe8 <argp_usage@@Base+0x2efc>  // b.none
  44bdec:	mov	w0, #0x1                   	// #1
  44bdf0:	strb	w0, [sp, #1914]
  44bdf4:	strb	wzr, [sp, #1915]
  44bdf8:	b	44bfe8 <argp_usage@@Base+0x2efc>
  44bdfc:	ldr	w0, [sp, #1960]
  44be00:	cmp	w0, #0x0
  44be04:	b.ne	44dc18 <argp_usage@@Base+0x4b2c>  // b.any
  44be08:	ldrb	w0, [sp, #1903]
  44be0c:	cmp	w0, #0x0
  44be10:	b.eq	44bff0 <argp_usage@@Base+0x2f04>  // b.none
  44be14:	mov	w0, #0x1                   	// #1
  44be18:	strb	w0, [sp, #1914]
  44be1c:	strb	wzr, [sp, #1915]
  44be20:	b	44bff0 <argp_usage@@Base+0x2f04>
  44be24:	ldrb	w0, [sp, #1903]
  44be28:	cmp	w0, #0x0
  44be2c:	b.eq	44be3c <argp_usage@@Base+0x2d50>  // b.none
  44be30:	mov	w0, #0x1                   	// #1
  44be34:	strb	w0, [sp, #1914]
  44be38:	strb	wzr, [sp, #1915]
  44be3c:	ldr	w0, [sp, #1960]
  44be40:	cmp	w0, #0x45
  44be44:	b.ne	44bff8 <argp_usage@@Base+0x2f0c>  // b.any
  44be48:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44be4c:	ldr	w0, [sp, #1960]
  44be50:	cmp	w0, #0x45
  44be54:	b.eq	44dc20 <argp_usage@@Base+0x4b34>  // b.none
  44be58:	ldrb	w0, [sp, #1903]
  44be5c:	cmp	w0, #0x0
  44be60:	b.eq	44c000 <argp_usage@@Base+0x2f14>  // b.none
  44be64:	mov	w0, #0x1                   	// #1
  44be68:	strb	w0, [sp, #1914]
  44be6c:	strb	wzr, [sp, #1915]
  44be70:	b	44c000 <argp_usage@@Base+0x2f14>
  44be74:	ldr	w0, [sp, #1960]
  44be78:	cmp	w0, #0x4f
  44be7c:	b.ne	44c008 <argp_usage@@Base+0x2f1c>  // b.any
  44be80:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44be84:	ldr	w6, [sp, #32]
  44be88:	ldr	x5, [sp, #16]
  44be8c:	ldr	x4, [sp, #24]
  44be90:	ldrb	w3, [sp, #1914]
  44be94:	ldr	x2, [sp, #40]
  44be98:	ldr	x1, [sp, #1928]
  44be9c:	mov	x0, #0x0                   	// #0
  44bea0:	bl	44b8fc <argp_usage@@Base+0x2810>
  44bea4:	str	x0, [sp, #1480]
  44bea8:	ldr	x0, [sp, #1480]
  44beac:	str	x0, [sp, #1472]
  44beb0:	ldr	w1, [sp, #1916]
  44beb4:	ldr	w0, [sp, #1916]
  44beb8:	mov	w2, #0x0                   	// #0
  44bebc:	cmp	w1, #0x0
  44bec0:	csel	w0, w0, w2, ge  // ge = tcont
  44bec4:	sxtw	x0, w0
  44bec8:	str	x0, [sp, #1464]
  44becc:	ldr	x0, [sp, #1464]
  44bed0:	ldr	x2, [sp, #1472]
  44bed4:	ldr	x1, [sp, #1472]
  44bed8:	cmp	x2, x0
  44bedc:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44bee0:	str	x0, [sp, #1456]
  44bee4:	ldr	x1, [sp, #1616]
  44bee8:	ldr	x0, [sp, #1976]
  44beec:	sub	x0, x1, x0
  44bef0:	ldr	x1, [sp, #1456]
  44bef4:	cmp	x1, x0
  44bef8:	b.cc	44bf04 <argp_usage@@Base+0x2e18>  // b.lo, b.ul, b.last
  44befc:	mov	x0, #0x0                   	// #0
  44bf00:	b	44dedc <argp_usage@@Base+0x4df0>
  44bf04:	ldr	x0, [sp, #1608]
  44bf08:	cmp	x0, #0x0
  44bf0c:	b.eq	44bfcc <argp_usage@@Base+0x2ee0>  // b.none
  44bf10:	ldr	w0, [sp, #1956]
  44bf14:	cmp	w0, #0x0
  44bf18:	b.ne	44bfac <argp_usage@@Base+0x2ec0>  // b.any
  44bf1c:	ldr	x1, [sp, #1472]
  44bf20:	ldr	x0, [sp, #1464]
  44bf24:	cmp	x1, x0
  44bf28:	b.cs	44bfac <argp_usage@@Base+0x2ec0>  // b.hs, b.nlast
  44bf2c:	ldrsw	x1, [sp, #1916]
  44bf30:	ldr	x0, [sp, #1472]
  44bf34:	sub	x0, x1, x0
  44bf38:	str	x0, [sp, #1448]
  44bf3c:	ldr	w0, [sp, #1964]
  44bf40:	cmp	w0, #0x30
  44bf44:	b.ne	44bf7c <argp_usage@@Base+0x2e90>  // b.any
  44bf48:	str	xzr, [sp, #1856]
  44bf4c:	b	44bf68 <argp_usage@@Base+0x2e7c>
  44bf50:	ldr	x1, [sp, #1608]
  44bf54:	mov	w0, #0x30                  	// #48
  44bf58:	bl	404250 <fputc@plt>
  44bf5c:	ldr	x0, [sp, #1856]
  44bf60:	add	x0, x0, #0x1
  44bf64:	str	x0, [sp, #1856]
  44bf68:	ldr	x1, [sp, #1856]
  44bf6c:	ldr	x0, [sp, #1448]
  44bf70:	cmp	x1, x0
  44bf74:	b.cc	44bf50 <argp_usage@@Base+0x2e64>  // b.lo, b.ul, b.last
  44bf78:	b	44bfac <argp_usage@@Base+0x2ec0>
  44bf7c:	str	xzr, [sp, #1848]
  44bf80:	b	44bf9c <argp_usage@@Base+0x2eb0>
  44bf84:	ldr	x1, [sp, #1608]
  44bf88:	mov	w0, #0x20                  	// #32
  44bf8c:	bl	404250 <fputc@plt>
  44bf90:	ldr	x0, [sp, #1848]
  44bf94:	add	x0, x0, #0x1
  44bf98:	str	x0, [sp, #1848]
  44bf9c:	ldr	x1, [sp, #1848]
  44bfa0:	ldr	x0, [sp, #1448]
  44bfa4:	cmp	x1, x0
  44bfa8:	b.cc	44bf84 <argp_usage@@Base+0x2e98>  // b.lo, b.ul, b.last
  44bfac:	ldr	w6, [sp, #32]
  44bfb0:	ldr	x5, [sp, #16]
  44bfb4:	ldr	x4, [sp, #24]
  44bfb8:	ldrb	w3, [sp, #1914]
  44bfbc:	ldr	x2, [sp, #40]
  44bfc0:	ldr	x1, [sp, #1928]
  44bfc4:	ldr	x0, [sp, #1608]
  44bfc8:	bl	44b8fc <argp_usage@@Base+0x2810>
  44bfcc:	ldr	x1, [sp, #1976]
  44bfd0:	ldr	x0, [sp, #1456]
  44bfd4:	add	x0, x1, x0
  44bfd8:	str	x0, [sp, #1976]
  44bfdc:	b	44debc <argp_usage@@Base+0x4dd0>
  44bfe0:	nop
  44bfe4:	b	44c044 <argp_usage@@Base+0x2f58>
  44bfe8:	nop
  44bfec:	b	44c044 <argp_usage@@Base+0x2f58>
  44bff0:	nop
  44bff4:	b	44c044 <argp_usage@@Base+0x2f58>
  44bff8:	nop
  44bffc:	b	44c044 <argp_usage@@Base+0x2f58>
  44c000:	nop
  44c004:	b	44c044 <argp_usage@@Base+0x2f58>
  44c008:	nop
  44c00c:	b	44c044 <argp_usage@@Base+0x2f58>
  44c010:	nop
  44c014:	b	44c044 <argp_usage@@Base+0x2f58>
  44c018:	nop
  44c01c:	b	44c044 <argp_usage@@Base+0x2f58>
  44c020:	nop
  44c024:	b	44c044 <argp_usage@@Base+0x2f58>
  44c028:	nop
  44c02c:	b	44c044 <argp_usage@@Base+0x2f58>
  44c030:	nop
  44c034:	b	44c044 <argp_usage@@Base+0x2f58>
  44c038:	nop
  44c03c:	b	44c044 <argp_usage@@Base+0x2f58>
  44c040:	nop
  44c044:	add	x0, sp, #0x440
  44c048:	str	x0, [sp, #1840]
  44c04c:	ldr	x0, [sp, #1840]
  44c050:	add	x1, x0, #0x1
  44c054:	str	x1, [sp, #1840]
  44c058:	mov	w1, #0x20                  	// #32
  44c05c:	strb	w1, [x0]
  44c060:	ldr	x0, [sp, #1840]
  44c064:	add	x1, x0, #0x1
  44c068:	str	x1, [sp, #1840]
  44c06c:	mov	w1, #0x25                  	// #37
  44c070:	strb	w1, [x0]
  44c074:	ldr	w0, [sp, #1960]
  44c078:	cmp	w0, #0x0
  44c07c:	b.eq	44c098 <argp_usage@@Base+0x2fac>  // b.none
  44c080:	ldr	x0, [sp, #1840]
  44c084:	add	x1, x0, #0x1
  44c088:	str	x1, [sp, #1840]
  44c08c:	ldr	w1, [sp, #1960]
  44c090:	and	w1, w1, #0xff
  44c094:	strb	w1, [x0]
  44c098:	ldr	x0, [sp, #1840]
  44c09c:	add	x1, x0, #0x1
  44c0a0:	str	x1, [sp, #1840]
  44c0a4:	ldr	w1, [sp, #1896]
  44c0a8:	and	w1, w1, #0xff
  44c0ac:	strb	w1, [x0]
  44c0b0:	ldr	x0, [sp, #1840]
  44c0b4:	strb	wzr, [x0]
  44c0b8:	add	x1, sp, #0x440
  44c0bc:	add	x0, sp, #0x40
  44c0c0:	ldr	x3, [sp, #40]
  44c0c4:	mov	x2, x1
  44c0c8:	mov	x1, #0x400                 	// #1024
  44c0cc:	bl	404230 <strftime@plt>
  44c0d0:	str	x0, [sp, #1248]
  44c0d4:	ldr	x0, [sp, #1248]
  44c0d8:	cmp	x0, #0x0
  44c0dc:	b.eq	44deb0 <argp_usage@@Base+0x4dc4>  // b.none
  44c0e0:	ldr	x0, [sp, #1248]
  44c0e4:	sub	x0, x0, #0x1
  44c0e8:	str	x0, [sp, #1240]
  44c0ec:	ldr	w1, [sp, #1916]
  44c0f0:	ldr	w0, [sp, #1916]
  44c0f4:	mov	w2, #0x0                   	// #0
  44c0f8:	cmp	w1, #0x0
  44c0fc:	csel	w0, w0, w2, ge  // ge = tcont
  44c100:	sxtw	x0, w0
  44c104:	str	x0, [sp, #1232]
  44c108:	ldr	x0, [sp, #1232]
  44c10c:	ldr	x2, [sp, #1240]
  44c110:	ldr	x1, [sp, #1240]
  44c114:	cmp	x2, x0
  44c118:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44c11c:	str	x0, [sp, #1224]
  44c120:	ldr	x1, [sp, #1616]
  44c124:	ldr	x0, [sp, #1976]
  44c128:	sub	x0, x1, x0
  44c12c:	ldr	x1, [sp, #1224]
  44c130:	cmp	x1, x0
  44c134:	b.cc	44c140 <argp_usage@@Base+0x3054>  // b.lo, b.ul, b.last
  44c138:	mov	x0, #0x0                   	// #0
  44c13c:	b	44dedc <argp_usage@@Base+0x4df0>
  44c140:	ldr	x0, [sp, #1608]
  44c144:	cmp	x0, #0x0
  44c148:	b.eq	44c250 <argp_usage@@Base+0x3164>  // b.none
  44c14c:	ldr	w0, [sp, #1956]
  44c150:	cmp	w0, #0x0
  44c154:	b.ne	44c1e8 <argp_usage@@Base+0x30fc>  // b.any
  44c158:	ldr	x1, [sp, #1240]
  44c15c:	ldr	x0, [sp, #1232]
  44c160:	cmp	x1, x0
  44c164:	b.cs	44c1e8 <argp_usage@@Base+0x30fc>  // b.hs, b.nlast
  44c168:	ldrsw	x1, [sp, #1916]
  44c16c:	ldr	x0, [sp, #1240]
  44c170:	sub	x0, x1, x0
  44c174:	str	x0, [sp, #1216]
  44c178:	ldr	w0, [sp, #1964]
  44c17c:	cmp	w0, #0x30
  44c180:	b.ne	44c1b8 <argp_usage@@Base+0x30cc>  // b.any
  44c184:	str	xzr, [sp, #1832]
  44c188:	b	44c1a4 <argp_usage@@Base+0x30b8>
  44c18c:	ldr	x1, [sp, #1608]
  44c190:	mov	w0, #0x30                  	// #48
  44c194:	bl	404250 <fputc@plt>
  44c198:	ldr	x0, [sp, #1832]
  44c19c:	add	x0, x0, #0x1
  44c1a0:	str	x0, [sp, #1832]
  44c1a4:	ldr	x1, [sp, #1832]
  44c1a8:	ldr	x0, [sp, #1216]
  44c1ac:	cmp	x1, x0
  44c1b0:	b.cc	44c18c <argp_usage@@Base+0x30a0>  // b.lo, b.ul, b.last
  44c1b4:	b	44c1e8 <argp_usage@@Base+0x30fc>
  44c1b8:	str	xzr, [sp, #1824]
  44c1bc:	b	44c1d8 <argp_usage@@Base+0x30ec>
  44c1c0:	ldr	x1, [sp, #1608]
  44c1c4:	mov	w0, #0x20                  	// #32
  44c1c8:	bl	404250 <fputc@plt>
  44c1cc:	ldr	x0, [sp, #1824]
  44c1d0:	add	x0, x0, #0x1
  44c1d4:	str	x0, [sp, #1824]
  44c1d8:	ldr	x1, [sp, #1824]
  44c1dc:	ldr	x0, [sp, #1216]
  44c1e0:	cmp	x1, x0
  44c1e4:	b.cc	44c1c0 <argp_usage@@Base+0x30d4>  // b.lo, b.ul, b.last
  44c1e8:	ldrb	w0, [sp, #1915]
  44c1ec:	cmp	w0, #0x0
  44c1f0:	b.eq	44c210 <argp_usage@@Base+0x3124>  // b.none
  44c1f4:	add	x0, sp, #0x40
  44c1f8:	add	x0, x0, #0x1
  44c1fc:	ldr	x2, [sp, #1240]
  44c200:	mov	x1, x0
  44c204:	ldr	x0, [sp, #1608]
  44c208:	bl	44b788 <argp_usage@@Base+0x269c>
  44c20c:	b	44c250 <argp_usage@@Base+0x3164>
  44c210:	ldrb	w0, [sp, #1914]
  44c214:	cmp	w0, #0x0
  44c218:	b.eq	44c238 <argp_usage@@Base+0x314c>  // b.none
  44c21c:	add	x0, sp, #0x40
  44c220:	add	x0, x0, #0x1
  44c224:	ldr	x2, [sp, #1240]
  44c228:	mov	x1, x0
  44c22c:	ldr	x0, [sp, #1608]
  44c230:	bl	44b7e4 <argp_usage@@Base+0x26f8>
  44c234:	b	44c250 <argp_usage@@Base+0x3164>
  44c238:	add	x0, sp, #0x40
  44c23c:	add	x0, x0, #0x1
  44c240:	ldr	x3, [sp, #1608]
  44c244:	mov	x2, #0x1                   	// #1
  44c248:	ldr	x1, [sp, #1240]
  44c24c:	bl	404970 <fwrite@plt>
  44c250:	ldr	x1, [sp, #1976]
  44c254:	ldr	x0, [sp, #1224]
  44c258:	add	x0, x1, x0
  44c25c:	str	x0, [sp, #1976]
  44c260:	b	44deb0 <argp_usage@@Base+0x4dc4>
  44c264:	ldr	w0, [sp, #1960]
  44c268:	cmp	w0, #0x45
  44c26c:	b.eq	44c010 <argp_usage@@Base+0x2f24>  // b.none
  44c270:	ldr	x0, [sp, #40]
  44c274:	ldr	w0, [x0, #20]
  44c278:	mov	w1, #0x851f                	// #34079
  44c27c:	movk	w1, #0x51eb, lsl #16
  44c280:	smull	x1, w0, w1
  44c284:	lsr	x1, x1, #32
  44c288:	asr	w1, w1, #5
  44c28c:	asr	w0, w0, #31
  44c290:	sub	w0, w1, w0
  44c294:	add	w0, w0, #0x13
  44c298:	str	w0, [sp, #1444]
  44c29c:	ldr	x0, [sp, #40]
  44c2a0:	ldr	w1, [x0, #20]
  44c2a4:	mov	w0, #0x851f                	// #34079
  44c2a8:	movk	w0, #0x51eb, lsl #16
  44c2ac:	smull	x0, w1, w0
  44c2b0:	lsr	x0, x0, #32
  44c2b4:	asr	w2, w0, #5
  44c2b8:	asr	w0, w1, #31
  44c2bc:	sub	w0, w2, w0
  44c2c0:	mov	w2, #0x64                  	// #100
  44c2c4:	mul	w0, w0, w2
  44c2c8:	sub	w0, w1, w0
  44c2cc:	cmp	w0, #0x0
  44c2d0:	b.ge	44c2e8 <argp_usage@@Base+0x31fc>  // b.tcont
  44c2d4:	ldr	w0, [sp, #1444]
  44c2d8:	cmp	w0, #0x0
  44c2dc:	b.le	44c2e8 <argp_usage@@Base+0x31fc>
  44c2e0:	mov	w0, #0x1                   	// #1
  44c2e4:	b	44c2ec <argp_usage@@Base+0x3200>
  44c2e8:	mov	w0, #0x0                   	// #0
  44c2ec:	ldr	w1, [sp, #1444]
  44c2f0:	sub	w0, w1, w0
  44c2f4:	str	w0, [sp, #1444]
  44c2f8:	mov	w0, #0x2                   	// #2
  44c2fc:	str	w0, [sp, #1956]
  44c300:	ldr	x0, [sp, #40]
  44c304:	ldr	w0, [x0, #20]
  44c308:	cmn	w0, #0x76c
  44c30c:	cset	w0, lt  // lt = tstop
  44c310:	strb	w0, [sp, #1947]
  44c314:	ldr	w0, [sp, #1444]
  44c318:	str	w0, [sp, #1948]
  44c31c:	b	44c3dc <argp_usage@@Base+0x32f0>
  44c320:	ldr	w0, [sp, #1960]
  44c324:	cmp	w0, #0x4f
  44c328:	b.ne	44c018 <argp_usage@@Base+0x2f2c>  // b.any
  44c32c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44c330:	ldr	w0, [sp, #1960]
  44c334:	cmp	w0, #0x0
  44c338:	b.ne	44dc28 <argp_usage@@Base+0x4b3c>  // b.any
  44c33c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44c340:	add	x0, x0, #0x530
  44c344:	str	x0, [sp, #1928]
  44c348:	b	44be84 <argp_usage@@Base+0x2d98>
  44c34c:	ldr	w0, [sp, #1960]
  44c350:	cmp	w0, #0x45
  44c354:	b.eq	44dc30 <argp_usage@@Base+0x4b44>  // b.none
  44c358:	mov	w0, #0x2                   	// #2
  44c35c:	str	w0, [sp, #1956]
  44c360:	ldr	x0, [sp, #40]
  44c364:	ldr	w0, [x0, #12]
  44c368:	str	w0, [sp, #1952]
  44c36c:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44c370:	ldr	w0, [sp, #1960]
  44c374:	cmp	w0, #0x45
  44c378:	b.eq	44dc38 <argp_usage@@Base+0x4b4c>  // b.none
  44c37c:	mov	w0, #0x2                   	// #2
  44c380:	str	w0, [sp, #1956]
  44c384:	ldr	x0, [sp, #40]
  44c388:	ldr	w0, [x0, #12]
  44c38c:	str	w0, [sp, #1952]
  44c390:	b	44c3a0 <argp_usage@@Base+0x32b4>
  44c394:	mov	w0, #0x1                   	// #1
  44c398:	strb	w0, [sp, #1946]
  44c39c:	b	44c3e4 <argp_usage@@Base+0x32f8>
  44c3a0:	ldr	w0, [sp, #1964]
  44c3a4:	cmp	w0, #0x30
  44c3a8:	b.eq	44c3c4 <argp_usage@@Base+0x32d8>  // b.none
  44c3ac:	ldr	w0, [sp, #1964]
  44c3b0:	cmp	w0, #0x2d
  44c3b4:	b.eq	44c3c4 <argp_usage@@Base+0x32d8>  // b.none
  44c3b8:	mov	w0, #0x5f                  	// #95
  44c3bc:	str	w0, [sp, #1964]
  44c3c0:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44c3c4:	nop
  44c3c8:	ldr	w0, [sp, #1952]
  44c3cc:	lsr	w0, w0, #31
  44c3d0:	strb	w0, [sp, #1947]
  44c3d4:	ldr	w0, [sp, #1952]
  44c3d8:	str	w0, [sp, #1948]
  44c3dc:	strb	wzr, [sp, #1946]
  44c3e0:	str	wzr, [sp, #1940]
  44c3e4:	ldr	w0, [sp, #1960]
  44c3e8:	cmp	w0, #0x4f
  44c3ec:	b.ne	44c404 <argp_usage@@Base+0x3318>  // b.any
  44c3f0:	ldrb	w0, [sp, #1947]
  44c3f4:	eor	w0, w0, #0x1
  44c3f8:	and	w0, w0, #0xff
  44c3fc:	cmp	w0, #0x0
  44c400:	b.ne	44c020 <argp_usage@@Base+0x2f34>  // b.any
  44c404:	add	x0, sp, #0x448
  44c408:	add	x0, x0, #0x17
  44c40c:	str	x0, [sp, #1920]
  44c410:	ldrb	w0, [sp, #1947]
  44c414:	cmp	w0, #0x0
  44c418:	b.eq	44c428 <argp_usage@@Base+0x333c>  // b.none
  44c41c:	ldr	w0, [sp, #1948]
  44c420:	neg	w0, w0
  44c424:	str	w0, [sp, #1948]
  44c428:	ldr	w0, [sp, #1940]
  44c42c:	and	w0, w0, #0x1
  44c430:	cmp	w0, #0x0
  44c434:	b.eq	44c450 <argp_usage@@Base+0x3364>  // b.none
  44c438:	ldr	x0, [sp, #1920]
  44c43c:	sub	x0, x0, #0x1
  44c440:	str	x0, [sp, #1920]
  44c444:	ldr	x0, [sp, #1920]
  44c448:	mov	w1, #0x3a                  	// #58
  44c44c:	strb	w1, [x0]
  44c450:	ldr	w0, [sp, #1940]
  44c454:	asr	w0, w0, #1
  44c458:	str	w0, [sp, #1940]
  44c45c:	ldr	w2, [sp, #1948]
  44c460:	mov	w0, #0xcccd                	// #52429
  44c464:	movk	w0, #0xcccc, lsl #16
  44c468:	umull	x0, w2, w0
  44c46c:	lsr	x0, x0, #32
  44c470:	lsr	w1, w0, #3
  44c474:	mov	w0, w1
  44c478:	lsl	w0, w0, #2
  44c47c:	add	w0, w0, w1
  44c480:	lsl	w0, w0, #1
  44c484:	sub	w1, w2, w0
  44c488:	and	w0, w1, #0xff
  44c48c:	ldr	x1, [sp, #1920]
  44c490:	sub	x1, x1, #0x1
  44c494:	str	x1, [sp, #1920]
  44c498:	add	w0, w0, #0x30
  44c49c:	and	w1, w0, #0xff
  44c4a0:	ldr	x0, [sp, #1920]
  44c4a4:	strb	w1, [x0]
  44c4a8:	ldr	w1, [sp, #1948]
  44c4ac:	mov	w0, #0xcccd                	// #52429
  44c4b0:	movk	w0, #0xcccc, lsl #16
  44c4b4:	umull	x0, w1, w0
  44c4b8:	lsr	x0, x0, #32
  44c4bc:	lsr	w0, w0, #3
  44c4c0:	str	w0, [sp, #1948]
  44c4c4:	ldr	w0, [sp, #1948]
  44c4c8:	cmp	w0, #0x0
  44c4cc:	b.ne	44c428 <argp_usage@@Base+0x333c>  // b.any
  44c4d0:	ldr	w0, [sp, #1940]
  44c4d4:	cmp	w0, #0x0
  44c4d8:	b.ne	44c428 <argp_usage@@Base+0x333c>  // b.any
  44c4dc:	nop
  44c4e0:	ldr	w1, [sp, #1956]
  44c4e4:	ldr	w0, [sp, #1916]
  44c4e8:	cmp	w1, w0
  44c4ec:	b.ge	44c4f8 <argp_usage@@Base+0x340c>  // b.tcont
  44c4f0:	ldr	w0, [sp, #1916]
  44c4f4:	str	w0, [sp, #1956]
  44c4f8:	ldrb	w0, [sp, #1947]
  44c4fc:	cmp	w0, #0x0
  44c500:	b.eq	44c50c <argp_usage@@Base+0x3420>  // b.none
  44c504:	mov	w0, #0x2d                  	// #45
  44c508:	b	44c524 <argp_usage@@Base+0x3438>
  44c50c:	ldrb	w0, [sp, #1946]
  44c510:	cmp	w0, #0x0
  44c514:	b.eq	44c520 <argp_usage@@Base+0x3434>  // b.none
  44c518:	mov	w0, #0x2b                  	// #43
  44c51c:	b	44c524 <argp_usage@@Base+0x3438>
  44c520:	mov	w0, #0x0                   	// #0
  44c524:	strb	w0, [sp, #1427]
  44c528:	ldr	w0, [sp, #1964]
  44c52c:	cmp	w0, #0x2d
  44c530:	b.ne	44c664 <argp_usage@@Base+0x3578>  // b.any
  44c534:	ldrb	w0, [sp, #1427]
  44c538:	cmp	w0, #0x0
  44c53c:	b.eq	44cb3c <argp_usage@@Base+0x3a50>  // b.none
  44c540:	mov	x0, #0x1                   	// #1
  44c544:	str	x0, [sp, #1312]
  44c548:	ldr	w1, [sp, #1916]
  44c54c:	ldr	w0, [sp, #1916]
  44c550:	mov	w2, #0x0                   	// #0
  44c554:	cmp	w1, #0x0
  44c558:	csel	w0, w0, w2, ge  // ge = tcont
  44c55c:	sxtw	x0, w0
  44c560:	str	x0, [sp, #1304]
  44c564:	ldr	x0, [sp, #1304]
  44c568:	ldr	x2, [sp, #1312]
  44c56c:	ldr	x1, [sp, #1312]
  44c570:	cmp	x2, x0
  44c574:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44c578:	str	x0, [sp, #1296]
  44c57c:	ldr	x1, [sp, #1616]
  44c580:	ldr	x0, [sp, #1976]
  44c584:	sub	x0, x1, x0
  44c588:	ldr	x1, [sp, #1296]
  44c58c:	cmp	x1, x0
  44c590:	b.cc	44c59c <argp_usage@@Base+0x34b0>  // b.lo, b.ul, b.last
  44c594:	mov	x0, #0x0                   	// #0
  44c598:	b	44dedc <argp_usage@@Base+0x4df0>
  44c59c:	ldr	x0, [sp, #1608]
  44c5a0:	cmp	x0, #0x0
  44c5a4:	b.eq	44c650 <argp_usage@@Base+0x3564>  // b.none
  44c5a8:	ldr	w0, [sp, #1956]
  44c5ac:	cmp	w0, #0x0
  44c5b0:	b.ne	44c644 <argp_usage@@Base+0x3558>  // b.any
  44c5b4:	ldr	x1, [sp, #1312]
  44c5b8:	ldr	x0, [sp, #1304]
  44c5bc:	cmp	x1, x0
  44c5c0:	b.cs	44c644 <argp_usage@@Base+0x3558>  // b.hs, b.nlast
  44c5c4:	ldrsw	x1, [sp, #1916]
  44c5c8:	ldr	x0, [sp, #1312]
  44c5cc:	sub	x0, x1, x0
  44c5d0:	str	x0, [sp, #1288]
  44c5d4:	ldr	w0, [sp, #1964]
  44c5d8:	cmp	w0, #0x30
  44c5dc:	b.ne	44c614 <argp_usage@@Base+0x3528>  // b.any
  44c5e0:	str	xzr, [sp, #1816]
  44c5e4:	b	44c600 <argp_usage@@Base+0x3514>
  44c5e8:	ldr	x1, [sp, #1608]
  44c5ec:	mov	w0, #0x30                  	// #48
  44c5f0:	bl	404250 <fputc@plt>
  44c5f4:	ldr	x0, [sp, #1816]
  44c5f8:	add	x0, x0, #0x1
  44c5fc:	str	x0, [sp, #1816]
  44c600:	ldr	x1, [sp, #1816]
  44c604:	ldr	x0, [sp, #1288]
  44c608:	cmp	x1, x0
  44c60c:	b.cc	44c5e8 <argp_usage@@Base+0x34fc>  // b.lo, b.ul, b.last
  44c610:	b	44c644 <argp_usage@@Base+0x3558>
  44c614:	str	xzr, [sp, #1808]
  44c618:	b	44c634 <argp_usage@@Base+0x3548>
  44c61c:	ldr	x1, [sp, #1608]
  44c620:	mov	w0, #0x20                  	// #32
  44c624:	bl	404250 <fputc@plt>
  44c628:	ldr	x0, [sp, #1808]
  44c62c:	add	x0, x0, #0x1
  44c630:	str	x0, [sp, #1808]
  44c634:	ldr	x1, [sp, #1808]
  44c638:	ldr	x0, [sp, #1288]
  44c63c:	cmp	x1, x0
  44c640:	b.cc	44c61c <argp_usage@@Base+0x3530>  // b.lo, b.ul, b.last
  44c644:	ldrb	w0, [sp, #1427]
  44c648:	ldr	x1, [sp, #1608]
  44c64c:	bl	404250 <fputc@plt>
  44c650:	ldr	x1, [sp, #1976]
  44c654:	ldr	x0, [sp, #1296]
  44c658:	add	x0, x1, x0
  44c65c:	str	x0, [sp, #1976]
  44c660:	b	44cb3c <argp_usage@@Base+0x3a50>
  44c664:	ldr	w1, [sp, #1956]
  44c668:	add	x0, sp, #0x448
  44c66c:	add	x0, x0, #0x17
  44c670:	ldr	x2, [sp, #1920]
  44c674:	sub	x0, x0, x2
  44c678:	sub	w0, w1, w0
  44c67c:	ldrb	w1, [sp, #1427]
  44c680:	cmp	w1, #0x0
  44c684:	cset	w1, ne  // ne = any
  44c688:	and	w1, w1, #0xff
  44c68c:	sub	w0, w0, w1
  44c690:	str	w0, [sp, #1420]
  44c694:	ldr	w0, [sp, #1420]
  44c698:	cmp	w0, #0x0
  44c69c:	b.le	44ca10 <argp_usage@@Base+0x3924>
  44c6a0:	ldr	w0, [sp, #1964]
  44c6a4:	cmp	w0, #0x5f
  44c6a8:	b.ne	44c870 <argp_usage@@Base+0x3784>  // b.any
  44c6ac:	ldrsw	x1, [sp, #1420]
  44c6b0:	ldr	x2, [sp, #1616]
  44c6b4:	ldr	x0, [sp, #1976]
  44c6b8:	sub	x0, x2, x0
  44c6bc:	cmp	x1, x0
  44c6c0:	b.cc	44c6cc <argp_usage@@Base+0x35e0>  // b.lo, b.ul, b.last
  44c6c4:	mov	x0, #0x0                   	// #0
  44c6c8:	b	44dedc <argp_usage@@Base+0x4df0>
  44c6cc:	ldr	x0, [sp, #1608]
  44c6d0:	cmp	x0, #0x0
  44c6d4:	b.eq	44c708 <argp_usage@@Base+0x361c>  // b.none
  44c6d8:	str	xzr, [sp, #1800]
  44c6dc:	b	44c6f8 <argp_usage@@Base+0x360c>
  44c6e0:	ldr	x1, [sp, #1608]
  44c6e4:	mov	w0, #0x20                  	// #32
  44c6e8:	bl	404250 <fputc@plt>
  44c6ec:	ldr	x0, [sp, #1800]
  44c6f0:	add	x0, x0, #0x1
  44c6f4:	str	x0, [sp, #1800]
  44c6f8:	ldrsw	x0, [sp, #1420]
  44c6fc:	ldr	x1, [sp, #1800]
  44c700:	cmp	x1, x0
  44c704:	b.cc	44c6e0 <argp_usage@@Base+0x35f4>  // b.lo, b.ul, b.last
  44c708:	ldrsw	x0, [sp, #1420]
  44c70c:	ldr	x1, [sp, #1976]
  44c710:	add	x0, x1, x0
  44c714:	str	x0, [sp, #1976]
  44c718:	ldr	w1, [sp, #1916]
  44c71c:	ldr	w0, [sp, #1420]
  44c720:	cmp	w1, w0
  44c724:	b.le	44c738 <argp_usage@@Base+0x364c>
  44c728:	ldr	w1, [sp, #1916]
  44c72c:	ldr	w0, [sp, #1420]
  44c730:	sub	w0, w1, w0
  44c734:	b	44c73c <argp_usage@@Base+0x3650>
  44c738:	mov	w0, #0x0                   	// #0
  44c73c:	str	w0, [sp, #1916]
  44c740:	ldrb	w0, [sp, #1427]
  44c744:	cmp	w0, #0x0
  44c748:	b.eq	44cb3c <argp_usage@@Base+0x3a50>  // b.none
  44c74c:	mov	x0, #0x1                   	// #1
  44c750:	str	x0, [sp, #1344]
  44c754:	ldr	w1, [sp, #1916]
  44c758:	ldr	w0, [sp, #1916]
  44c75c:	mov	w2, #0x0                   	// #0
  44c760:	cmp	w1, #0x0
  44c764:	csel	w0, w0, w2, ge  // ge = tcont
  44c768:	sxtw	x0, w0
  44c76c:	str	x0, [sp, #1336]
  44c770:	ldr	x0, [sp, #1336]
  44c774:	ldr	x2, [sp, #1344]
  44c778:	ldr	x1, [sp, #1344]
  44c77c:	cmp	x2, x0
  44c780:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44c784:	str	x0, [sp, #1328]
  44c788:	ldr	x1, [sp, #1616]
  44c78c:	ldr	x0, [sp, #1976]
  44c790:	sub	x0, x1, x0
  44c794:	ldr	x1, [sp, #1328]
  44c798:	cmp	x1, x0
  44c79c:	b.cc	44c7a8 <argp_usage@@Base+0x36bc>  // b.lo, b.ul, b.last
  44c7a0:	mov	x0, #0x0                   	// #0
  44c7a4:	b	44dedc <argp_usage@@Base+0x4df0>
  44c7a8:	ldr	x0, [sp, #1608]
  44c7ac:	cmp	x0, #0x0
  44c7b0:	b.eq	44c85c <argp_usage@@Base+0x3770>  // b.none
  44c7b4:	ldr	w0, [sp, #1956]
  44c7b8:	cmp	w0, #0x0
  44c7bc:	b.ne	44c850 <argp_usage@@Base+0x3764>  // b.any
  44c7c0:	ldr	x1, [sp, #1344]
  44c7c4:	ldr	x0, [sp, #1336]
  44c7c8:	cmp	x1, x0
  44c7cc:	b.cs	44c850 <argp_usage@@Base+0x3764>  // b.hs, b.nlast
  44c7d0:	ldrsw	x1, [sp, #1916]
  44c7d4:	ldr	x0, [sp, #1344]
  44c7d8:	sub	x0, x1, x0
  44c7dc:	str	x0, [sp, #1320]
  44c7e0:	ldr	w0, [sp, #1964]
  44c7e4:	cmp	w0, #0x30
  44c7e8:	b.ne	44c820 <argp_usage@@Base+0x3734>  // b.any
  44c7ec:	str	xzr, [sp, #1792]
  44c7f0:	b	44c80c <argp_usage@@Base+0x3720>
  44c7f4:	ldr	x1, [sp, #1608]
  44c7f8:	mov	w0, #0x30                  	// #48
  44c7fc:	bl	404250 <fputc@plt>
  44c800:	ldr	x0, [sp, #1792]
  44c804:	add	x0, x0, #0x1
  44c808:	str	x0, [sp, #1792]
  44c80c:	ldr	x1, [sp, #1792]
  44c810:	ldr	x0, [sp, #1320]
  44c814:	cmp	x1, x0
  44c818:	b.cc	44c7f4 <argp_usage@@Base+0x3708>  // b.lo, b.ul, b.last
  44c81c:	b	44c850 <argp_usage@@Base+0x3764>
  44c820:	str	xzr, [sp, #1784]
  44c824:	b	44c840 <argp_usage@@Base+0x3754>
  44c828:	ldr	x1, [sp, #1608]
  44c82c:	mov	w0, #0x20                  	// #32
  44c830:	bl	404250 <fputc@plt>
  44c834:	ldr	x0, [sp, #1784]
  44c838:	add	x0, x0, #0x1
  44c83c:	str	x0, [sp, #1784]
  44c840:	ldr	x1, [sp, #1784]
  44c844:	ldr	x0, [sp, #1320]
  44c848:	cmp	x1, x0
  44c84c:	b.cc	44c828 <argp_usage@@Base+0x373c>  // b.lo, b.ul, b.last
  44c850:	ldrb	w0, [sp, #1427]
  44c854:	ldr	x1, [sp, #1608]
  44c858:	bl	404250 <fputc@plt>
  44c85c:	ldr	x1, [sp, #1976]
  44c860:	ldr	x0, [sp, #1328]
  44c864:	add	x0, x1, x0
  44c868:	str	x0, [sp, #1976]
  44c86c:	b	44cb3c <argp_usage@@Base+0x3a50>
  44c870:	ldrsw	x1, [sp, #1956]
  44c874:	ldr	x2, [sp, #1616]
  44c878:	ldr	x0, [sp, #1976]
  44c87c:	sub	x0, x2, x0
  44c880:	cmp	x1, x0
  44c884:	b.cc	44c890 <argp_usage@@Base+0x37a4>  // b.lo, b.ul, b.last
  44c888:	mov	x0, #0x0                   	// #0
  44c88c:	b	44dedc <argp_usage@@Base+0x4df0>
  44c890:	ldrb	w0, [sp, #1427]
  44c894:	cmp	w0, #0x0
  44c898:	b.eq	44c9bc <argp_usage@@Base+0x38d0>  // b.none
  44c89c:	mov	x0, #0x1                   	// #1
  44c8a0:	str	x0, [sp, #1376]
  44c8a4:	ldr	w1, [sp, #1916]
  44c8a8:	ldr	w0, [sp, #1916]
  44c8ac:	mov	w2, #0x0                   	// #0
  44c8b0:	cmp	w1, #0x0
  44c8b4:	csel	w0, w0, w2, ge  // ge = tcont
  44c8b8:	sxtw	x0, w0
  44c8bc:	str	x0, [sp, #1368]
  44c8c0:	ldr	x0, [sp, #1368]
  44c8c4:	ldr	x2, [sp, #1376]
  44c8c8:	ldr	x1, [sp, #1376]
  44c8cc:	cmp	x2, x0
  44c8d0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44c8d4:	str	x0, [sp, #1360]
  44c8d8:	ldr	x1, [sp, #1616]
  44c8dc:	ldr	x0, [sp, #1976]
  44c8e0:	sub	x0, x1, x0
  44c8e4:	ldr	x1, [sp, #1360]
  44c8e8:	cmp	x1, x0
  44c8ec:	b.cc	44c8f8 <argp_usage@@Base+0x380c>  // b.lo, b.ul, b.last
  44c8f0:	mov	x0, #0x0                   	// #0
  44c8f4:	b	44dedc <argp_usage@@Base+0x4df0>
  44c8f8:	ldr	x0, [sp, #1608]
  44c8fc:	cmp	x0, #0x0
  44c900:	b.eq	44c9ac <argp_usage@@Base+0x38c0>  // b.none
  44c904:	ldr	w0, [sp, #1956]
  44c908:	cmp	w0, #0x0
  44c90c:	b.ne	44c9a0 <argp_usage@@Base+0x38b4>  // b.any
  44c910:	ldr	x1, [sp, #1376]
  44c914:	ldr	x0, [sp, #1368]
  44c918:	cmp	x1, x0
  44c91c:	b.cs	44c9a0 <argp_usage@@Base+0x38b4>  // b.hs, b.nlast
  44c920:	ldrsw	x1, [sp, #1916]
  44c924:	ldr	x0, [sp, #1376]
  44c928:	sub	x0, x1, x0
  44c92c:	str	x0, [sp, #1352]
  44c930:	ldr	w0, [sp, #1964]
  44c934:	cmp	w0, #0x30
  44c938:	b.ne	44c970 <argp_usage@@Base+0x3884>  // b.any
  44c93c:	str	xzr, [sp, #1776]
  44c940:	b	44c95c <argp_usage@@Base+0x3870>
  44c944:	ldr	x1, [sp, #1608]
  44c948:	mov	w0, #0x30                  	// #48
  44c94c:	bl	404250 <fputc@plt>
  44c950:	ldr	x0, [sp, #1776]
  44c954:	add	x0, x0, #0x1
  44c958:	str	x0, [sp, #1776]
  44c95c:	ldr	x1, [sp, #1776]
  44c960:	ldr	x0, [sp, #1352]
  44c964:	cmp	x1, x0
  44c968:	b.cc	44c944 <argp_usage@@Base+0x3858>  // b.lo, b.ul, b.last
  44c96c:	b	44c9a0 <argp_usage@@Base+0x38b4>
  44c970:	str	xzr, [sp, #1768]
  44c974:	b	44c990 <argp_usage@@Base+0x38a4>
  44c978:	ldr	x1, [sp, #1608]
  44c97c:	mov	w0, #0x20                  	// #32
  44c980:	bl	404250 <fputc@plt>
  44c984:	ldr	x0, [sp, #1768]
  44c988:	add	x0, x0, #0x1
  44c98c:	str	x0, [sp, #1768]
  44c990:	ldr	x1, [sp, #1768]
  44c994:	ldr	x0, [sp, #1352]
  44c998:	cmp	x1, x0
  44c99c:	b.cc	44c978 <argp_usage@@Base+0x388c>  // b.lo, b.ul, b.last
  44c9a0:	ldrb	w0, [sp, #1427]
  44c9a4:	ldr	x1, [sp, #1608]
  44c9a8:	bl	404250 <fputc@plt>
  44c9ac:	ldr	x1, [sp, #1976]
  44c9b0:	ldr	x0, [sp, #1360]
  44c9b4:	add	x0, x1, x0
  44c9b8:	str	x0, [sp, #1976]
  44c9bc:	ldr	x0, [sp, #1608]
  44c9c0:	cmp	x0, #0x0
  44c9c4:	b.eq	44c9f8 <argp_usage@@Base+0x390c>  // b.none
  44c9c8:	str	xzr, [sp, #1760]
  44c9cc:	b	44c9e8 <argp_usage@@Base+0x38fc>
  44c9d0:	ldr	x1, [sp, #1608]
  44c9d4:	mov	w0, #0x30                  	// #48
  44c9d8:	bl	404250 <fputc@plt>
  44c9dc:	ldr	x0, [sp, #1760]
  44c9e0:	add	x0, x0, #0x1
  44c9e4:	str	x0, [sp, #1760]
  44c9e8:	ldrsw	x0, [sp, #1420]
  44c9ec:	ldr	x1, [sp, #1760]
  44c9f0:	cmp	x1, x0
  44c9f4:	b.cc	44c9d0 <argp_usage@@Base+0x38e4>  // b.lo, b.ul, b.last
  44c9f8:	ldrsw	x0, [sp, #1420]
  44c9fc:	ldr	x1, [sp, #1976]
  44ca00:	add	x0, x1, x0
  44ca04:	str	x0, [sp, #1976]
  44ca08:	str	wzr, [sp, #1916]
  44ca0c:	b	44cb3c <argp_usage@@Base+0x3a50>
  44ca10:	ldrb	w0, [sp, #1427]
  44ca14:	cmp	w0, #0x0
  44ca18:	b.eq	44cb3c <argp_usage@@Base+0x3a50>  // b.none
  44ca1c:	mov	x0, #0x1                   	// #1
  44ca20:	str	x0, [sp, #1408]
  44ca24:	ldr	w1, [sp, #1916]
  44ca28:	ldr	w0, [sp, #1916]
  44ca2c:	mov	w2, #0x0                   	// #0
  44ca30:	cmp	w1, #0x0
  44ca34:	csel	w0, w0, w2, ge  // ge = tcont
  44ca38:	sxtw	x0, w0
  44ca3c:	str	x0, [sp, #1400]
  44ca40:	ldr	x0, [sp, #1400]
  44ca44:	ldr	x2, [sp, #1408]
  44ca48:	ldr	x1, [sp, #1408]
  44ca4c:	cmp	x2, x0
  44ca50:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44ca54:	str	x0, [sp, #1392]
  44ca58:	ldr	x1, [sp, #1616]
  44ca5c:	ldr	x0, [sp, #1976]
  44ca60:	sub	x0, x1, x0
  44ca64:	ldr	x1, [sp, #1392]
  44ca68:	cmp	x1, x0
  44ca6c:	b.cc	44ca78 <argp_usage@@Base+0x398c>  // b.lo, b.ul, b.last
  44ca70:	mov	x0, #0x0                   	// #0
  44ca74:	b	44dedc <argp_usage@@Base+0x4df0>
  44ca78:	ldr	x0, [sp, #1608]
  44ca7c:	cmp	x0, #0x0
  44ca80:	b.eq	44cb2c <argp_usage@@Base+0x3a40>  // b.none
  44ca84:	ldr	w0, [sp, #1956]
  44ca88:	cmp	w0, #0x0
  44ca8c:	b.ne	44cb20 <argp_usage@@Base+0x3a34>  // b.any
  44ca90:	ldr	x1, [sp, #1408]
  44ca94:	ldr	x0, [sp, #1400]
  44ca98:	cmp	x1, x0
  44ca9c:	b.cs	44cb20 <argp_usage@@Base+0x3a34>  // b.hs, b.nlast
  44caa0:	ldrsw	x1, [sp, #1916]
  44caa4:	ldr	x0, [sp, #1408]
  44caa8:	sub	x0, x1, x0
  44caac:	str	x0, [sp, #1384]
  44cab0:	ldr	w0, [sp, #1964]
  44cab4:	cmp	w0, #0x30
  44cab8:	b.ne	44caf0 <argp_usage@@Base+0x3a04>  // b.any
  44cabc:	str	xzr, [sp, #1752]
  44cac0:	b	44cadc <argp_usage@@Base+0x39f0>
  44cac4:	ldr	x1, [sp, #1608]
  44cac8:	mov	w0, #0x30                  	// #48
  44cacc:	bl	404250 <fputc@plt>
  44cad0:	ldr	x0, [sp, #1752]
  44cad4:	add	x0, x0, #0x1
  44cad8:	str	x0, [sp, #1752]
  44cadc:	ldr	x1, [sp, #1752]
  44cae0:	ldr	x0, [sp, #1384]
  44cae4:	cmp	x1, x0
  44cae8:	b.cc	44cac4 <argp_usage@@Base+0x39d8>  // b.lo, b.ul, b.last
  44caec:	b	44cb20 <argp_usage@@Base+0x3a34>
  44caf0:	str	xzr, [sp, #1744]
  44caf4:	b	44cb10 <argp_usage@@Base+0x3a24>
  44caf8:	ldr	x1, [sp, #1608]
  44cafc:	mov	w0, #0x20                  	// #32
  44cb00:	bl	404250 <fputc@plt>
  44cb04:	ldr	x0, [sp, #1744]
  44cb08:	add	x0, x0, #0x1
  44cb0c:	str	x0, [sp, #1744]
  44cb10:	ldr	x1, [sp, #1744]
  44cb14:	ldr	x0, [sp, #1384]
  44cb18:	cmp	x1, x0
  44cb1c:	b.cc	44caf8 <argp_usage@@Base+0x3a0c>  // b.lo, b.ul, b.last
  44cb20:	ldrb	w0, [sp, #1427]
  44cb24:	ldr	x1, [sp, #1608]
  44cb28:	bl	404250 <fputc@plt>
  44cb2c:	ldr	x1, [sp, #1976]
  44cb30:	ldr	x0, [sp, #1392]
  44cb34:	add	x0, x1, x0
  44cb38:	str	x0, [sp, #1976]
  44cb3c:	add	x0, sp, #0x448
  44cb40:	add	x0, x0, #0x17
  44cb44:	ldr	x1, [sp, #1920]
  44cb48:	sub	x0, x0, x1
  44cb4c:	str	x0, [sp, #1280]
  44cb50:	ldr	w1, [sp, #1916]
  44cb54:	ldr	w0, [sp, #1916]
  44cb58:	mov	w2, #0x0                   	// #0
  44cb5c:	cmp	w1, #0x0
  44cb60:	csel	w0, w0, w2, ge  // ge = tcont
  44cb64:	sxtw	x0, w0
  44cb68:	str	x0, [sp, #1272]
  44cb6c:	ldr	x0, [sp, #1272]
  44cb70:	ldr	x2, [sp, #1280]
  44cb74:	ldr	x1, [sp, #1280]
  44cb78:	cmp	x2, x0
  44cb7c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44cb80:	str	x0, [sp, #1264]
  44cb84:	ldr	x1, [sp, #1616]
  44cb88:	ldr	x0, [sp, #1976]
  44cb8c:	sub	x0, x1, x0
  44cb90:	ldr	x1, [sp, #1264]
  44cb94:	cmp	x1, x0
  44cb98:	b.cc	44cba4 <argp_usage@@Base+0x3ab8>  // b.lo, b.ul, b.last
  44cb9c:	mov	x0, #0x0                   	// #0
  44cba0:	b	44dedc <argp_usage@@Base+0x4df0>
  44cba4:	ldr	x0, [sp, #1608]
  44cba8:	cmp	x0, #0x0
  44cbac:	b.eq	44cca0 <argp_usage@@Base+0x3bb4>  // b.none
  44cbb0:	ldr	w0, [sp, #1956]
  44cbb4:	cmp	w0, #0x0
  44cbb8:	b.ne	44cc4c <argp_usage@@Base+0x3b60>  // b.any
  44cbbc:	ldr	x1, [sp, #1280]
  44cbc0:	ldr	x0, [sp, #1272]
  44cbc4:	cmp	x1, x0
  44cbc8:	b.cs	44cc4c <argp_usage@@Base+0x3b60>  // b.hs, b.nlast
  44cbcc:	ldrsw	x1, [sp, #1916]
  44cbd0:	ldr	x0, [sp, #1280]
  44cbd4:	sub	x0, x1, x0
  44cbd8:	str	x0, [sp, #1256]
  44cbdc:	ldr	w0, [sp, #1964]
  44cbe0:	cmp	w0, #0x30
  44cbe4:	b.ne	44cc1c <argp_usage@@Base+0x3b30>  // b.any
  44cbe8:	str	xzr, [sp, #1736]
  44cbec:	b	44cc08 <argp_usage@@Base+0x3b1c>
  44cbf0:	ldr	x1, [sp, #1608]
  44cbf4:	mov	w0, #0x30                  	// #48
  44cbf8:	bl	404250 <fputc@plt>
  44cbfc:	ldr	x0, [sp, #1736]
  44cc00:	add	x0, x0, #0x1
  44cc04:	str	x0, [sp, #1736]
  44cc08:	ldr	x1, [sp, #1736]
  44cc0c:	ldr	x0, [sp, #1256]
  44cc10:	cmp	x1, x0
  44cc14:	b.cc	44cbf0 <argp_usage@@Base+0x3b04>  // b.lo, b.ul, b.last
  44cc18:	b	44cc4c <argp_usage@@Base+0x3b60>
  44cc1c:	str	xzr, [sp, #1728]
  44cc20:	b	44cc3c <argp_usage@@Base+0x3b50>
  44cc24:	ldr	x1, [sp, #1608]
  44cc28:	mov	w0, #0x20                  	// #32
  44cc2c:	bl	404250 <fputc@plt>
  44cc30:	ldr	x0, [sp, #1728]
  44cc34:	add	x0, x0, #0x1
  44cc38:	str	x0, [sp, #1728]
  44cc3c:	ldr	x1, [sp, #1728]
  44cc40:	ldr	x0, [sp, #1256]
  44cc44:	cmp	x1, x0
  44cc48:	b.cc	44cc24 <argp_usage@@Base+0x3b38>  // b.lo, b.ul, b.last
  44cc4c:	ldrb	w0, [sp, #1915]
  44cc50:	cmp	w0, #0x0
  44cc54:	b.eq	44cc6c <argp_usage@@Base+0x3b80>  // b.none
  44cc58:	ldr	x2, [sp, #1280]
  44cc5c:	ldr	x1, [sp, #1920]
  44cc60:	ldr	x0, [sp, #1608]
  44cc64:	bl	44b788 <argp_usage@@Base+0x269c>
  44cc68:	b	44cca0 <argp_usage@@Base+0x3bb4>
  44cc6c:	ldrb	w0, [sp, #1914]
  44cc70:	cmp	w0, #0x0
  44cc74:	b.eq	44cc8c <argp_usage@@Base+0x3ba0>  // b.none
  44cc78:	ldr	x2, [sp, #1280]
  44cc7c:	ldr	x1, [sp, #1920]
  44cc80:	ldr	x0, [sp, #1608]
  44cc84:	bl	44b7e4 <argp_usage@@Base+0x26f8>
  44cc88:	b	44cca0 <argp_usage@@Base+0x3bb4>
  44cc8c:	ldr	x3, [sp, #1608]
  44cc90:	mov	x2, #0x1                   	// #1
  44cc94:	ldr	x1, [sp, #1280]
  44cc98:	ldr	x0, [sp, #1920]
  44cc9c:	bl	404970 <fwrite@plt>
  44cca0:	ldr	x1, [sp, #1976]
  44cca4:	ldr	x0, [sp, #1264]
  44cca8:	add	x0, x1, x0
  44ccac:	str	x0, [sp, #1976]
  44ccb0:	b	44debc <argp_usage@@Base+0x4dd0>
  44ccb4:	ldr	w0, [sp, #1960]
  44ccb8:	cmp	w0, #0x0
  44ccbc:	b.ne	44dc40 <argp_usage@@Base+0x4b54>  // b.any
  44ccc0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44ccc4:	add	x0, x0, #0x540
  44ccc8:	str	x0, [sp, #1928]
  44cccc:	b	44be84 <argp_usage@@Base+0x2d98>
  44ccd0:	ldr	w0, [sp, #1960]
  44ccd4:	cmp	w0, #0x45
  44ccd8:	b.eq	44dc48 <argp_usage@@Base+0x4b5c>  // b.none
  44ccdc:	mov	w0, #0x2                   	// #2
  44cce0:	str	w0, [sp, #1956]
  44cce4:	ldr	x0, [sp, #40]
  44cce8:	ldr	w0, [x0, #8]
  44ccec:	str	w0, [sp, #1952]
  44ccf0:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44ccf4:	ldr	w0, [sp, #1960]
  44ccf8:	cmp	w0, #0x45
  44ccfc:	b.eq	44dc50 <argp_usage@@Base+0x4b64>  // b.none
  44cd00:	mov	w0, #0x2                   	// #2
  44cd04:	str	w0, [sp, #1956]
  44cd08:	ldr	w0, [sp, #1996]
  44cd0c:	str	w0, [sp, #1952]
  44cd10:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44cd14:	ldr	w0, [sp, #1960]
  44cd18:	cmp	w0, #0x45
  44cd1c:	b.eq	44dc58 <argp_usage@@Base+0x4b6c>  // b.none
  44cd20:	mov	w0, #0x2                   	// #2
  44cd24:	str	w0, [sp, #1956]
  44cd28:	ldr	x0, [sp, #40]
  44cd2c:	ldr	w0, [x0, #8]
  44cd30:	str	w0, [sp, #1952]
  44cd34:	b	44c3a0 <argp_usage@@Base+0x32b4>
  44cd38:	ldr	w0, [sp, #1960]
  44cd3c:	cmp	w0, #0x45
  44cd40:	b.eq	44dc60 <argp_usage@@Base+0x4b74>  // b.none
  44cd44:	mov	w0, #0x2                   	// #2
  44cd48:	str	w0, [sp, #1956]
  44cd4c:	ldr	w0, [sp, #1996]
  44cd50:	str	w0, [sp, #1952]
  44cd54:	b	44c3a0 <argp_usage@@Base+0x32b4>
  44cd58:	ldr	w0, [sp, #1960]
  44cd5c:	cmp	w0, #0x45
  44cd60:	b.eq	44dc68 <argp_usage@@Base+0x4b7c>  // b.none
  44cd64:	mov	w0, #0x3                   	// #3
  44cd68:	str	w0, [sp, #1956]
  44cd6c:	ldr	x0, [sp, #40]
  44cd70:	ldr	w0, [x0, #28]
  44cd74:	cmn	w0, #0x1
  44cd78:	cset	w0, lt  // lt = tstop
  44cd7c:	strb	w0, [sp, #1947]
  44cd80:	ldr	x0, [sp, #40]
  44cd84:	ldr	w0, [x0, #28]
  44cd88:	add	w0, w0, #0x1
  44cd8c:	str	w0, [sp, #1948]
  44cd90:	b	44c3dc <argp_usage@@Base+0x32f0>
  44cd94:	ldr	w0, [sp, #1960]
  44cd98:	cmp	w0, #0x45
  44cd9c:	b.eq	44dc70 <argp_usage@@Base+0x4b84>  // b.none
  44cda0:	mov	w0, #0x2                   	// #2
  44cda4:	str	w0, [sp, #1956]
  44cda8:	ldr	x0, [sp, #40]
  44cdac:	ldr	w0, [x0, #4]
  44cdb0:	str	w0, [sp, #1952]
  44cdb4:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44cdb8:	ldr	w0, [sp, #1960]
  44cdbc:	cmp	w0, #0x45
  44cdc0:	b.eq	44dc78 <argp_usage@@Base+0x4b8c>  // b.none
  44cdc4:	mov	w0, #0x2                   	// #2
  44cdc8:	str	w0, [sp, #1956]
  44cdcc:	ldr	x0, [sp, #40]
  44cdd0:	ldr	w0, [x0, #16]
  44cdd4:	cmn	w0, #0x1
  44cdd8:	cset	w0, lt  // lt = tstop
  44cddc:	strb	w0, [sp, #1947]
  44cde0:	ldr	x0, [sp, #40]
  44cde4:	ldr	w0, [x0, #16]
  44cde8:	add	w0, w0, #0x1
  44cdec:	str	w0, [sp, #1948]
  44cdf0:	b	44c3dc <argp_usage@@Base+0x32f0>
  44cdf4:	ldr	w0, [sp, #1960]
  44cdf8:	cmp	w0, #0x45
  44cdfc:	b.eq	44dc80 <argp_usage@@Base+0x4b94>  // b.none
  44ce00:	ldr	w0, [sp, #32]
  44ce04:	str	w0, [sp, #1952]
  44ce08:	ldr	w0, [sp, #1916]
  44ce0c:	cmn	w0, #0x1
  44ce10:	b.ne	44ce20 <argp_usage@@Base+0x3d34>  // b.any
  44ce14:	mov	w0, #0x9                   	// #9
  44ce18:	str	w0, [sp, #1916]
  44ce1c:	b	44ce68 <argp_usage@@Base+0x3d7c>
  44ce20:	ldr	w0, [sp, #1916]
  44ce24:	str	w0, [sp, #1724]
  44ce28:	b	44ce5c <argp_usage@@Base+0x3d70>
  44ce2c:	ldr	w0, [sp, #1952]
  44ce30:	mov	w1, #0x6667                	// #26215
  44ce34:	movk	w1, #0x6666, lsl #16
  44ce38:	smull	x1, w0, w1
  44ce3c:	lsr	x1, x1, #32
  44ce40:	asr	w1, w1, #2
  44ce44:	asr	w0, w0, #31
  44ce48:	sub	w0, w1, w0
  44ce4c:	str	w0, [sp, #1952]
  44ce50:	ldr	w0, [sp, #1724]
  44ce54:	add	w0, w0, #0x1
  44ce58:	str	w0, [sp, #1724]
  44ce5c:	ldr	w0, [sp, #1724]
  44ce60:	cmp	w0, #0x8
  44ce64:	b.le	44ce2c <argp_usage@@Base+0x3d40>
  44ce68:	ldr	w0, [sp, #1916]
  44ce6c:	str	w0, [sp, #1956]
  44ce70:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44ce74:	mov	x0, #0x1                   	// #1
  44ce78:	str	x0, [sp, #1560]
  44ce7c:	ldr	w1, [sp, #1916]
  44ce80:	ldr	w0, [sp, #1916]
  44ce84:	mov	w2, #0x0                   	// #0
  44ce88:	cmp	w1, #0x0
  44ce8c:	csel	w0, w0, w2, ge  // ge = tcont
  44ce90:	sxtw	x0, w0
  44ce94:	str	x0, [sp, #1552]
  44ce98:	ldr	x0, [sp, #1552]
  44ce9c:	ldr	x2, [sp, #1560]
  44cea0:	ldr	x1, [sp, #1560]
  44cea4:	cmp	x2, x0
  44cea8:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44ceac:	str	x0, [sp, #1544]
  44ceb0:	ldr	x1, [sp, #1616]
  44ceb4:	ldr	x0, [sp, #1976]
  44ceb8:	sub	x0, x1, x0
  44cebc:	ldr	x1, [sp, #1544]
  44cec0:	cmp	x1, x0
  44cec4:	b.cc	44ced0 <argp_usage@@Base+0x3de4>  // b.lo, b.ul, b.last
  44cec8:	mov	x0, #0x0                   	// #0
  44cecc:	b	44dedc <argp_usage@@Base+0x4df0>
  44ced0:	ldr	x0, [sp, #1608]
  44ced4:	cmp	x0, #0x0
  44ced8:	b.eq	44cf84 <argp_usage@@Base+0x3e98>  // b.none
  44cedc:	ldr	w0, [sp, #1956]
  44cee0:	cmp	w0, #0x0
  44cee4:	b.ne	44cf78 <argp_usage@@Base+0x3e8c>  // b.any
  44cee8:	ldr	x1, [sp, #1560]
  44ceec:	ldr	x0, [sp, #1552]
  44cef0:	cmp	x1, x0
  44cef4:	b.cs	44cf78 <argp_usage@@Base+0x3e8c>  // b.hs, b.nlast
  44cef8:	ldrsw	x1, [sp, #1916]
  44cefc:	ldr	x0, [sp, #1560]
  44cf00:	sub	x0, x1, x0
  44cf04:	str	x0, [sp, #1536]
  44cf08:	ldr	w0, [sp, #1964]
  44cf0c:	cmp	w0, #0x30
  44cf10:	b.ne	44cf48 <argp_usage@@Base+0x3e5c>  // b.any
  44cf14:	str	xzr, [sp, #1712]
  44cf18:	b	44cf34 <argp_usage@@Base+0x3e48>
  44cf1c:	ldr	x1, [sp, #1608]
  44cf20:	mov	w0, #0x30                  	// #48
  44cf24:	bl	404250 <fputc@plt>
  44cf28:	ldr	x0, [sp, #1712]
  44cf2c:	add	x0, x0, #0x1
  44cf30:	str	x0, [sp, #1712]
  44cf34:	ldr	x1, [sp, #1712]
  44cf38:	ldr	x0, [sp, #1536]
  44cf3c:	cmp	x1, x0
  44cf40:	b.cc	44cf1c <argp_usage@@Base+0x3e30>  // b.lo, b.ul, b.last
  44cf44:	b	44cf78 <argp_usage@@Base+0x3e8c>
  44cf48:	str	xzr, [sp, #1704]
  44cf4c:	b	44cf68 <argp_usage@@Base+0x3e7c>
  44cf50:	ldr	x1, [sp, #1608]
  44cf54:	mov	w0, #0x20                  	// #32
  44cf58:	bl	404250 <fputc@plt>
  44cf5c:	ldr	x0, [sp, #1704]
  44cf60:	add	x0, x0, #0x1
  44cf64:	str	x0, [sp, #1704]
  44cf68:	ldr	x1, [sp, #1704]
  44cf6c:	ldr	x0, [sp, #1536]
  44cf70:	cmp	x1, x0
  44cf74:	b.cc	44cf50 <argp_usage@@Base+0x3e64>  // b.lo, b.ul, b.last
  44cf78:	ldr	x1, [sp, #1608]
  44cf7c:	mov	w0, #0xa                   	// #10
  44cf80:	bl	404250 <fputc@plt>
  44cf84:	ldr	x1, [sp, #1976]
  44cf88:	ldr	x0, [sp, #1544]
  44cf8c:	add	x0, x1, x0
  44cf90:	str	x0, [sp, #1976]
  44cf94:	b	44debc <argp_usage@@Base+0x4dd0>
  44cf98:	mov	w0, #0x1                   	// #1
  44cf9c:	strb	w0, [sp, #1915]
  44cfa0:	mov	w0, #0x70                  	// #112
  44cfa4:	str	w0, [sp, #1896]
  44cfa8:	ldrb	w0, [sp, #1903]
  44cfac:	cmp	w0, #0x0
  44cfb0:	b.eq	44c028 <argp_usage@@Base+0x2f3c>  // b.none
  44cfb4:	strb	wzr, [sp, #1914]
  44cfb8:	mov	w0, #0x1                   	// #1
  44cfbc:	strb	w0, [sp, #1915]
  44cfc0:	b	44c028 <argp_usage@@Base+0x2f3c>
  44cfc4:	mov	w0, #0x1                   	// #1
  44cfc8:	str	w0, [sp, #1956]
  44cfcc:	strb	wzr, [sp, #1947]
  44cfd0:	ldr	x0, [sp, #40]
  44cfd4:	ldr	w1, [x0, #16]
  44cfd8:	mov	w0, #0xb                   	// #11
  44cfdc:	mul	w0, w1, w0
  44cfe0:	asr	w0, w0, #5
  44cfe4:	add	w0, w0, #0x1
  44cfe8:	str	w0, [sp, #1948]
  44cfec:	b	44c3dc <argp_usage@@Base+0x32f0>
  44cff0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44cff4:	add	x0, x0, #0x550
  44cff8:	str	x0, [sp, #1928]
  44cffc:	b	44be84 <argp_usage@@Base+0x2d98>
  44d000:	ldr	w0, [sp, #1960]
  44d004:	cmp	w0, #0x45
  44d008:	b.eq	44dc88 <argp_usage@@Base+0x4b9c>  // b.none
  44d00c:	mov	w0, #0x2                   	// #2
  44d010:	str	w0, [sp, #1956]
  44d014:	ldr	x0, [sp, #40]
  44d018:	ldr	w0, [x0]
  44d01c:	str	w0, [sp, #1952]
  44d020:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d024:	ldr	x1, [sp, #40]
  44d028:	add	x0, sp, #0x40
  44d02c:	ldp	x2, x3, [x1]
  44d030:	stp	x2, x3, [x0]
  44d034:	ldp	x2, x3, [x1, #16]
  44d038:	stp	x2, x3, [x0, #16]
  44d03c:	ldp	x2, x3, [x1, #32]
  44d040:	stp	x2, x3, [x0, #32]
  44d044:	ldr	x1, [x1, #48]
  44d048:	str	x1, [x0, #48]
  44d04c:	add	x0, sp, #0x40
  44d050:	mov	x1, x0
  44d054:	ldr	x0, [sp, #16]
  44d058:	bl	475388 <_obstack_memory_used@@Base+0x18248>
  44d05c:	str	x0, [sp, #1696]
  44d060:	add	x0, sp, #0x448
  44d064:	add	x0, x0, #0x17
  44d068:	str	x0, [sp, #1920]
  44d06c:	ldr	x0, [sp, #1696]
  44d070:	lsr	x0, x0, #63
  44d074:	strb	w0, [sp, #1947]
  44d078:	ldr	x1, [sp, #1696]
  44d07c:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  44d080:	movk	x0, #0x6667
  44d084:	smulh	x0, x1, x0
  44d088:	asr	x2, x0, #2
  44d08c:	asr	x0, x1, #63
  44d090:	sub	x2, x2, x0
  44d094:	mov	x0, x2
  44d098:	lsl	x0, x0, #2
  44d09c:	add	x0, x0, x2
  44d0a0:	lsl	x0, x0, #1
  44d0a4:	sub	x2, x1, x0
  44d0a8:	mov	w0, w2
  44d0ac:	str	w0, [sp, #1572]
  44d0b0:	ldr	x0, [sp, #1696]
  44d0b4:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  44d0b8:	movk	x1, #0x6667
  44d0bc:	smulh	x1, x0, x1
  44d0c0:	asr	x1, x1, #2
  44d0c4:	asr	x0, x0, #63
  44d0c8:	sub	x0, x1, x0
  44d0cc:	str	x0, [sp, #1696]
  44d0d0:	ldrb	w0, [sp, #1947]
  44d0d4:	cmp	w0, #0x0
  44d0d8:	b.eq	44d0f4 <argp_usage@@Base+0x4008>  // b.none
  44d0dc:	ldr	w0, [sp, #1572]
  44d0e0:	and	w0, w0, #0xff
  44d0e4:	mov	w1, #0x30                  	// #48
  44d0e8:	sub	w0, w1, w0
  44d0ec:	and	w0, w0, #0xff
  44d0f0:	b	44d104 <argp_usage@@Base+0x4018>
  44d0f4:	ldr	w0, [sp, #1572]
  44d0f8:	and	w0, w0, #0xff
  44d0fc:	add	w0, w0, #0x30
  44d100:	and	w0, w0, #0xff
  44d104:	ldr	x1, [sp, #1920]
  44d108:	sub	x1, x1, #0x1
  44d10c:	str	x1, [sp, #1920]
  44d110:	ldr	x1, [sp, #1920]
  44d114:	strb	w0, [x1]
  44d118:	ldr	x0, [sp, #1696]
  44d11c:	cmp	x0, #0x0
  44d120:	b.ne	44d078 <argp_usage@@Base+0x3f8c>  // b.any
  44d124:	mov	w0, #0x1                   	// #1
  44d128:	str	w0, [sp, #1956]
  44d12c:	strb	wzr, [sp, #1946]
  44d130:	b	44c4e0 <argp_usage@@Base+0x33f4>
  44d134:	ldr	w0, [sp, #1960]
  44d138:	cmp	w0, #0x4f
  44d13c:	b.ne	44c030 <argp_usage@@Base+0x2f44>  // b.any
  44d140:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44d144:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44d148:	add	x0, x0, #0x558
  44d14c:	str	x0, [sp, #1928]
  44d150:	b	44be84 <argp_usage@@Base+0x2d98>
  44d154:	mov	x0, #0x1                   	// #1
  44d158:	str	x0, [sp, #1600]
  44d15c:	ldr	w1, [sp, #1916]
  44d160:	ldr	w0, [sp, #1916]
  44d164:	mov	w2, #0x0                   	// #0
  44d168:	cmp	w1, #0x0
  44d16c:	csel	w0, w0, w2, ge  // ge = tcont
  44d170:	sxtw	x0, w0
  44d174:	str	x0, [sp, #1592]
  44d178:	ldr	x0, [sp, #1592]
  44d17c:	ldr	x2, [sp, #1600]
  44d180:	ldr	x1, [sp, #1600]
  44d184:	cmp	x2, x0
  44d188:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44d18c:	str	x0, [sp, #1584]
  44d190:	ldr	x1, [sp, #1616]
  44d194:	ldr	x0, [sp, #1976]
  44d198:	sub	x0, x1, x0
  44d19c:	ldr	x1, [sp, #1584]
  44d1a0:	cmp	x1, x0
  44d1a4:	b.cc	44d1b0 <argp_usage@@Base+0x40c4>  // b.lo, b.ul, b.last
  44d1a8:	mov	x0, #0x0                   	// #0
  44d1ac:	b	44dedc <argp_usage@@Base+0x4df0>
  44d1b0:	ldr	x0, [sp, #1608]
  44d1b4:	cmp	x0, #0x0
  44d1b8:	b.eq	44d264 <argp_usage@@Base+0x4178>  // b.none
  44d1bc:	ldr	w0, [sp, #1956]
  44d1c0:	cmp	w0, #0x0
  44d1c4:	b.ne	44d258 <argp_usage@@Base+0x416c>  // b.any
  44d1c8:	ldr	x1, [sp, #1600]
  44d1cc:	ldr	x0, [sp, #1592]
  44d1d0:	cmp	x1, x0
  44d1d4:	b.cs	44d258 <argp_usage@@Base+0x416c>  // b.hs, b.nlast
  44d1d8:	ldrsw	x1, [sp, #1916]
  44d1dc:	ldr	x0, [sp, #1600]
  44d1e0:	sub	x0, x1, x0
  44d1e4:	str	x0, [sp, #1576]
  44d1e8:	ldr	w0, [sp, #1964]
  44d1ec:	cmp	w0, #0x30
  44d1f0:	b.ne	44d228 <argp_usage@@Base+0x413c>  // b.any
  44d1f4:	str	xzr, [sp, #1688]
  44d1f8:	b	44d214 <argp_usage@@Base+0x4128>
  44d1fc:	ldr	x1, [sp, #1608]
  44d200:	mov	w0, #0x30                  	// #48
  44d204:	bl	404250 <fputc@plt>
  44d208:	ldr	x0, [sp, #1688]
  44d20c:	add	x0, x0, #0x1
  44d210:	str	x0, [sp, #1688]
  44d214:	ldr	x1, [sp, #1688]
  44d218:	ldr	x0, [sp, #1576]
  44d21c:	cmp	x1, x0
  44d220:	b.cc	44d1fc <argp_usage@@Base+0x4110>  // b.lo, b.ul, b.last
  44d224:	b	44d258 <argp_usage@@Base+0x416c>
  44d228:	str	xzr, [sp, #1680]
  44d22c:	b	44d248 <argp_usage@@Base+0x415c>
  44d230:	ldr	x1, [sp, #1608]
  44d234:	mov	w0, #0x20                  	// #32
  44d238:	bl	404250 <fputc@plt>
  44d23c:	ldr	x0, [sp, #1680]
  44d240:	add	x0, x0, #0x1
  44d244:	str	x0, [sp, #1680]
  44d248:	ldr	x1, [sp, #1680]
  44d24c:	ldr	x0, [sp, #1576]
  44d250:	cmp	x1, x0
  44d254:	b.cc	44d230 <argp_usage@@Base+0x4144>  // b.lo, b.ul, b.last
  44d258:	ldr	x1, [sp, #1608]
  44d25c:	mov	w0, #0x9                   	// #9
  44d260:	bl	404250 <fputc@plt>
  44d264:	ldr	x1, [sp, #1976]
  44d268:	ldr	x0, [sp, #1584]
  44d26c:	add	x0, x1, x0
  44d270:	str	x0, [sp, #1976]
  44d274:	b	44debc <argp_usage@@Base+0x4dd0>
  44d278:	mov	w0, #0x1                   	// #1
  44d27c:	str	w0, [sp, #1956]
  44d280:	ldr	x0, [sp, #40]
  44d284:	ldr	w0, [x0, #24]
  44d288:	add	w0, w0, #0x6
  44d28c:	mov	w1, #0x2493                	// #9363
  44d290:	movk	w1, #0x9249, lsl #16
  44d294:	smull	x1, w0, w1
  44d298:	lsr	x1, x1, #32
  44d29c:	add	w1, w0, w1
  44d2a0:	asr	w2, w1, #2
  44d2a4:	asr	w1, w0, #31
  44d2a8:	sub	w2, w2, w1
  44d2ac:	mov	w1, w2
  44d2b0:	lsl	w1, w1, #3
  44d2b4:	sub	w1, w1, w2
  44d2b8:	sub	w2, w0, w1
  44d2bc:	add	w0, w2, #0x1
  44d2c0:	str	w0, [sp, #1952]
  44d2c4:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d2c8:	ldr	w0, [sp, #1960]
  44d2cc:	cmp	w0, #0x45
  44d2d0:	b.eq	44dc90 <argp_usage@@Base+0x4ba4>  // b.none
  44d2d4:	mov	w0, #0x2                   	// #2
  44d2d8:	str	w0, [sp, #1956]
  44d2dc:	ldr	x0, [sp, #40]
  44d2e0:	ldr	w1, [x0, #28]
  44d2e4:	ldr	x0, [sp, #40]
  44d2e8:	ldr	w0, [x0, #24]
  44d2ec:	sub	w0, w1, w0
  44d2f0:	add	w0, w0, #0x7
  44d2f4:	mov	w1, #0x2493                	// #9363
  44d2f8:	movk	w1, #0x9249, lsl #16
  44d2fc:	smull	x1, w0, w1
  44d300:	lsr	x1, x1, #32
  44d304:	add	w1, w0, w1
  44d308:	asr	w1, w1, #2
  44d30c:	asr	w0, w0, #31
  44d310:	sub	w0, w1, w0
  44d314:	str	w0, [sp, #1952]
  44d318:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d31c:	ldr	w0, [sp, #1960]
  44d320:	cmp	w0, #0x45
  44d324:	b.eq	44dc98 <argp_usage@@Base+0x4bac>  // b.none
  44d328:	ldr	x0, [sp, #40]
  44d32c:	ldr	w1, [x0, #20]
  44d330:	ldr	x0, [sp, #40]
  44d334:	ldr	w0, [x0, #20]
  44d338:	cmp	w0, #0x0
  44d33c:	b.ge	44d348 <argp_usage@@Base+0x425c>  // b.tcont
  44d340:	mov	w0, #0x12c                 	// #300
  44d344:	b	44d34c <argp_usage@@Base+0x4260>
  44d348:	mov	w0, #0xffffff9c            	// #-100
  44d34c:	add	w0, w0, w1
  44d350:	str	w0, [sp, #1500]
  44d354:	str	wzr, [sp, #1676]
  44d358:	ldr	x0, [sp, #40]
  44d35c:	ldr	w2, [x0, #28]
  44d360:	ldr	x0, [sp, #40]
  44d364:	ldr	w0, [x0, #24]
  44d368:	mov	w1, w0
  44d36c:	mov	w0, w2
  44d370:	bl	44b840 <argp_usage@@Base+0x2754>
  44d374:	str	w0, [sp, #1672]
  44d378:	ldr	w0, [sp, #1672]
  44d37c:	cmp	w0, #0x0
  44d380:	b.ge	44d448 <argp_usage@@Base+0x435c>  // b.tcont
  44d384:	mov	w0, #0xffffffff            	// #-1
  44d388:	str	w0, [sp, #1676]
  44d38c:	ldr	x0, [sp, #40]
  44d390:	ldr	w2, [x0, #28]
  44d394:	ldr	w0, [sp, #1500]
  44d398:	sub	w0, w0, #0x1
  44d39c:	and	w0, w0, #0x3
  44d3a0:	cmp	w0, #0x0
  44d3a4:	b.ne	44d420 <argp_usage@@Base+0x4334>  // b.any
  44d3a8:	ldr	w0, [sp, #1500]
  44d3ac:	sub	w1, w0, #0x1
  44d3b0:	mov	w0, #0x851f                	// #34079
  44d3b4:	movk	w0, #0x51eb, lsl #16
  44d3b8:	smull	x0, w1, w0
  44d3bc:	lsr	x0, x0, #32
  44d3c0:	asr	w3, w0, #5
  44d3c4:	asr	w0, w1, #31
  44d3c8:	sub	w0, w3, w0
  44d3cc:	mov	w3, #0x64                  	// #100
  44d3d0:	mul	w0, w0, w3
  44d3d4:	sub	w0, w1, w0
  44d3d8:	cmp	w0, #0x0
  44d3dc:	b.ne	44d418 <argp_usage@@Base+0x432c>  // b.any
  44d3e0:	ldr	w0, [sp, #1500]
  44d3e4:	sub	w1, w0, #0x1
  44d3e8:	mov	w0, #0x851f                	// #34079
  44d3ec:	movk	w0, #0x51eb, lsl #16
  44d3f0:	smull	x0, w1, w0
  44d3f4:	lsr	x0, x0, #32
  44d3f8:	asr	w3, w0, #7
  44d3fc:	asr	w0, w1, #31
  44d400:	sub	w0, w3, w0
  44d404:	mov	w3, #0x190                 	// #400
  44d408:	mul	w0, w0, w3
  44d40c:	sub	w0, w1, w0
  44d410:	cmp	w0, #0x0
  44d414:	b.ne	44d420 <argp_usage@@Base+0x4334>  // b.any
  44d418:	mov	w0, #0x1                   	// #1
  44d41c:	b	44d424 <argp_usage@@Base+0x4338>
  44d420:	mov	w0, #0x0                   	// #0
  44d424:	add	w0, w0, #0x16d
  44d428:	add	w2, w2, w0
  44d42c:	ldr	x0, [sp, #40]
  44d430:	ldr	w0, [x0, #24]
  44d434:	mov	w1, w0
  44d438:	mov	w0, w2
  44d43c:	bl	44b840 <argp_usage@@Base+0x2754>
  44d440:	str	w0, [sp, #1672]
  44d444:	b	44d510 <argp_usage@@Base+0x4424>
  44d448:	ldr	x0, [sp, #40]
  44d44c:	ldr	w2, [x0, #28]
  44d450:	ldr	w0, [sp, #1500]
  44d454:	and	w0, w0, #0x3
  44d458:	cmp	w0, #0x0
  44d45c:	b.ne	44d4d0 <argp_usage@@Base+0x43e4>  // b.any
  44d460:	ldr	w1, [sp, #1500]
  44d464:	mov	w0, #0x851f                	// #34079
  44d468:	movk	w0, #0x51eb, lsl #16
  44d46c:	smull	x0, w1, w0
  44d470:	lsr	x0, x0, #32
  44d474:	asr	w3, w0, #5
  44d478:	asr	w0, w1, #31
  44d47c:	sub	w0, w3, w0
  44d480:	mov	w3, #0x64                  	// #100
  44d484:	mul	w0, w0, w3
  44d488:	sub	w0, w1, w0
  44d48c:	cmp	w0, #0x0
  44d490:	b.ne	44d4c8 <argp_usage@@Base+0x43dc>  // b.any
  44d494:	ldr	w1, [sp, #1500]
  44d498:	mov	w0, #0x851f                	// #34079
  44d49c:	movk	w0, #0x51eb, lsl #16
  44d4a0:	smull	x0, w1, w0
  44d4a4:	lsr	x0, x0, #32
  44d4a8:	asr	w3, w0, #7
  44d4ac:	asr	w0, w1, #31
  44d4b0:	sub	w0, w3, w0
  44d4b4:	mov	w3, #0x190                 	// #400
  44d4b8:	mul	w0, w0, w3
  44d4bc:	sub	w0, w1, w0
  44d4c0:	cmp	w0, #0x0
  44d4c4:	b.ne	44d4d0 <argp_usage@@Base+0x43e4>  // b.any
  44d4c8:	mov	w0, #0x1                   	// #1
  44d4cc:	b	44d4d4 <argp_usage@@Base+0x43e8>
  44d4d0:	mov	w0, #0x0                   	// #0
  44d4d4:	add	w0, w0, #0x16d
  44d4d8:	sub	w2, w2, w0
  44d4dc:	ldr	x0, [sp, #40]
  44d4e0:	ldr	w0, [x0, #24]
  44d4e4:	mov	w1, w0
  44d4e8:	mov	w0, w2
  44d4ec:	bl	44b840 <argp_usage@@Base+0x2754>
  44d4f0:	str	w0, [sp, #1496]
  44d4f4:	ldr	w0, [sp, #1496]
  44d4f8:	cmp	w0, #0x0
  44d4fc:	b.lt	44d510 <argp_usage@@Base+0x4424>  // b.tstop
  44d500:	mov	w0, #0x1                   	// #1
  44d504:	str	w0, [sp, #1676]
  44d508:	ldr	w0, [sp, #1496]
  44d50c:	str	w0, [sp, #1672]
  44d510:	ldr	x0, [sp, #1968]
  44d514:	ldrb	w0, [x0]
  44d518:	cmp	w0, #0x47
  44d51c:	b.eq	44d5e0 <argp_usage@@Base+0x44f4>  // b.none
  44d520:	cmp	w0, #0x67
  44d524:	b.ne	44d628 <argp_usage@@Base+0x453c>  // b.any
  44d528:	ldr	x0, [sp, #40]
  44d52c:	ldr	w1, [x0, #20]
  44d530:	mov	w0, #0x851f                	// #34079
  44d534:	movk	w0, #0x51eb, lsl #16
  44d538:	smull	x0, w1, w0
  44d53c:	lsr	x0, x0, #32
  44d540:	asr	w2, w0, #5
  44d544:	asr	w0, w1, #31
  44d548:	sub	w0, w2, w0
  44d54c:	mov	w2, #0x64                  	// #100
  44d550:	mul	w0, w0, w2
  44d554:	sub	w0, w1, w0
  44d558:	ldr	w1, [sp, #1676]
  44d55c:	add	w0, w0, w1
  44d560:	mov	w1, #0x851f                	// #34079
  44d564:	movk	w1, #0x51eb, lsl #16
  44d568:	smull	x1, w0, w1
  44d56c:	lsr	x1, x1, #32
  44d570:	asr	w2, w1, #5
  44d574:	asr	w1, w0, #31
  44d578:	sub	w2, w2, w1
  44d57c:	mov	w1, #0x64                  	// #100
  44d580:	mul	w1, w2, w1
  44d584:	sub	w0, w0, w1
  44d588:	str	w0, [sp, #1492]
  44d58c:	mov	w0, #0x2                   	// #2
  44d590:	str	w0, [sp, #1956]
  44d594:	ldr	w0, [sp, #1492]
  44d598:	cmp	w0, #0x0
  44d59c:	b.ge	44d5d4 <argp_usage@@Base+0x44e8>  // b.tcont
  44d5a0:	ldr	x0, [sp, #40]
  44d5a4:	ldr	w1, [x0, #20]
  44d5a8:	mov	w2, #0xfffff894            	// #-1900
  44d5ac:	ldr	w0, [sp, #1676]
  44d5b0:	sub	w0, w2, w0
  44d5b4:	cmp	w1, w0
  44d5b8:	b.ge	44d5c8 <argp_usage@@Base+0x44dc>  // b.tcont
  44d5bc:	ldr	w0, [sp, #1492]
  44d5c0:	neg	w0, w0
  44d5c4:	b	44d5d8 <argp_usage@@Base+0x44ec>
  44d5c8:	ldr	w0, [sp, #1492]
  44d5cc:	add	w0, w0, #0x64
  44d5d0:	b	44d5d8 <argp_usage@@Base+0x44ec>
  44d5d4:	ldr	w0, [sp, #1492]
  44d5d8:	str	w0, [sp, #1952]
  44d5dc:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d5e0:	mov	w0, #0x4                   	// #4
  44d5e4:	str	w0, [sp, #1956]
  44d5e8:	ldr	x0, [sp, #40]
  44d5ec:	ldr	w1, [x0, #20]
  44d5f0:	mov	w2, #0xfffff894            	// #-1900
  44d5f4:	ldr	w0, [sp, #1676]
  44d5f8:	sub	w0, w2, w0
  44d5fc:	cmp	w1, w0
  44d600:	cset	w0, lt  // lt = tstop
  44d604:	strb	w0, [sp, #1947]
  44d608:	ldr	x0, [sp, #40]
  44d60c:	ldr	w0, [x0, #20]
  44d610:	mov	w1, w0
  44d614:	ldr	w0, [sp, #1676]
  44d618:	add	w0, w1, w0
  44d61c:	add	w0, w0, #0x76c
  44d620:	str	w0, [sp, #1948]
  44d624:	b	44c3dc <argp_usage@@Base+0x32f0>
  44d628:	mov	w0, #0x2                   	// #2
  44d62c:	str	w0, [sp, #1956]
  44d630:	ldr	w0, [sp, #1672]
  44d634:	mov	w1, #0x2493                	// #9363
  44d638:	movk	w1, #0x9249, lsl #16
  44d63c:	smull	x1, w0, w1
  44d640:	lsr	x1, x1, #32
  44d644:	add	w1, w0, w1
  44d648:	asr	w1, w1, #2
  44d64c:	asr	w0, w0, #31
  44d650:	sub	w0, w1, w0
  44d654:	add	w0, w0, #0x1
  44d658:	str	w0, [sp, #1952]
  44d65c:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d660:	ldr	w0, [sp, #1960]
  44d664:	cmp	w0, #0x45
  44d668:	b.eq	44dca0 <argp_usage@@Base+0x4bb4>  // b.none
  44d66c:	mov	w0, #0x2                   	// #2
  44d670:	str	w0, [sp, #1956]
  44d674:	ldr	x0, [sp, #40]
  44d678:	ldr	w3, [x0, #28]
  44d67c:	ldr	x0, [sp, #40]
  44d680:	ldr	w0, [x0, #24]
  44d684:	add	w0, w0, #0x6
  44d688:	mov	w1, #0x2493                	// #9363
  44d68c:	movk	w1, #0x9249, lsl #16
  44d690:	smull	x1, w0, w1
  44d694:	lsr	x1, x1, #32
  44d698:	add	w1, w0, w1
  44d69c:	asr	w2, w1, #2
  44d6a0:	asr	w1, w0, #31
  44d6a4:	sub	w2, w2, w1
  44d6a8:	mov	w1, w2
  44d6ac:	lsl	w1, w1, #3
  44d6b0:	sub	w1, w1, w2
  44d6b4:	sub	w2, w0, w1
  44d6b8:	sub	w0, w3, w2
  44d6bc:	add	w0, w0, #0x7
  44d6c0:	mov	w1, #0x2493                	// #9363
  44d6c4:	movk	w1, #0x9249, lsl #16
  44d6c8:	smull	x1, w0, w1
  44d6cc:	lsr	x1, x1, #32
  44d6d0:	add	w1, w0, w1
  44d6d4:	asr	w1, w1, #2
  44d6d8:	asr	w0, w0, #31
  44d6dc:	sub	w0, w1, w0
  44d6e0:	str	w0, [sp, #1952]
  44d6e4:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d6e8:	ldr	w0, [sp, #1960]
  44d6ec:	cmp	w0, #0x45
  44d6f0:	b.eq	44dca8 <argp_usage@@Base+0x4bbc>  // b.none
  44d6f4:	mov	w0, #0x1                   	// #1
  44d6f8:	str	w0, [sp, #1956]
  44d6fc:	ldr	x0, [sp, #40]
  44d700:	ldr	w0, [x0, #24]
  44d704:	str	w0, [sp, #1952]
  44d708:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d70c:	ldr	w0, [sp, #1960]
  44d710:	cmp	w0, #0x45
  44d714:	b.eq	44c038 <argp_usage@@Base+0x2f4c>  // b.none
  44d718:	ldr	w0, [sp, #1960]
  44d71c:	cmp	w0, #0x4f
  44d720:	b.eq	44dcb0 <argp_usage@@Base+0x4bc4>  // b.none
  44d724:	mov	w0, #0x4                   	// #4
  44d728:	str	w0, [sp, #1956]
  44d72c:	ldr	x0, [sp, #40]
  44d730:	ldr	w0, [x0, #20]
  44d734:	cmn	w0, #0x76c
  44d738:	cset	w0, lt  // lt = tstop
  44d73c:	strb	w0, [sp, #1947]
  44d740:	ldr	x0, [sp, #40]
  44d744:	ldr	w0, [x0, #20]
  44d748:	add	w0, w0, #0x76c
  44d74c:	str	w0, [sp, #1948]
  44d750:	b	44c3dc <argp_usage@@Base+0x32f0>
  44d754:	ldr	w0, [sp, #1960]
  44d758:	cmp	w0, #0x45
  44d75c:	b.eq	44c040 <argp_usage@@Base+0x2f54>  // b.none
  44d760:	ldr	x0, [sp, #40]
  44d764:	ldr	w0, [x0, #20]
  44d768:	mov	w1, #0x851f                	// #34079
  44d76c:	movk	w1, #0x51eb, lsl #16
  44d770:	smull	x1, w0, w1
  44d774:	lsr	x1, x1, #32
  44d778:	asr	w2, w1, #5
  44d77c:	asr	w1, w0, #31
  44d780:	sub	w2, w2, w1
  44d784:	mov	w1, #0x64                  	// #100
  44d788:	mul	w1, w2, w1
  44d78c:	sub	w0, w0, w1
  44d790:	str	w0, [sp, #1668]
  44d794:	ldr	w0, [sp, #1668]
  44d798:	cmp	w0, #0x0
  44d79c:	b.ge	44d7c8 <argp_usage@@Base+0x46dc>  // b.tcont
  44d7a0:	ldr	x0, [sp, #40]
  44d7a4:	ldr	w0, [x0, #20]
  44d7a8:	cmn	w0, #0x76c
  44d7ac:	b.ge	44d7bc <argp_usage@@Base+0x46d0>  // b.tcont
  44d7b0:	ldr	w0, [sp, #1668]
  44d7b4:	neg	w0, w0
  44d7b8:	b	44d7c4 <argp_usage@@Base+0x46d8>
  44d7bc:	ldr	w0, [sp, #1668]
  44d7c0:	add	w0, w0, #0x64
  44d7c4:	str	w0, [sp, #1668]
  44d7c8:	mov	w0, #0x2                   	// #2
  44d7cc:	str	w0, [sp, #1956]
  44d7d0:	ldr	w0, [sp, #1668]
  44d7d4:	str	w0, [sp, #1952]
  44d7d8:	b	44c3c8 <argp_usage@@Base+0x32dc>
  44d7dc:	ldrb	w0, [sp, #1903]
  44d7e0:	cmp	w0, #0x0
  44d7e4:	b.eq	44d7f4 <argp_usage@@Base+0x4708>  // b.none
  44d7e8:	strb	wzr, [sp, #1914]
  44d7ec:	mov	w0, #0x1                   	// #1
  44d7f0:	strb	w0, [sp, #1915]
  44d7f4:	ldr	x0, [sp, #1984]
  44d7f8:	bl	4040b0 <strlen@plt>
  44d7fc:	str	x0, [sp, #1528]
  44d800:	ldr	w1, [sp, #1916]
  44d804:	ldr	w0, [sp, #1916]
  44d808:	mov	w2, #0x0                   	// #0
  44d80c:	cmp	w1, #0x0
  44d810:	csel	w0, w0, w2, ge  // ge = tcont
  44d814:	sxtw	x0, w0
  44d818:	str	x0, [sp, #1520]
  44d81c:	ldr	x0, [sp, #1520]
  44d820:	ldr	x2, [sp, #1528]
  44d824:	ldr	x1, [sp, #1528]
  44d828:	cmp	x2, x0
  44d82c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44d830:	str	x0, [sp, #1512]
  44d834:	ldr	x1, [sp, #1616]
  44d838:	ldr	x0, [sp, #1976]
  44d83c:	sub	x0, x1, x0
  44d840:	ldr	x1, [sp, #1512]
  44d844:	cmp	x1, x0
  44d848:	b.cc	44d854 <argp_usage@@Base+0x4768>  // b.lo, b.ul, b.last
  44d84c:	mov	x0, #0x0                   	// #0
  44d850:	b	44dedc <argp_usage@@Base+0x4df0>
  44d854:	ldr	x0, [sp, #1608]
  44d858:	cmp	x0, #0x0
  44d85c:	b.eq	44d950 <argp_usage@@Base+0x4864>  // b.none
  44d860:	ldr	w0, [sp, #1956]
  44d864:	cmp	w0, #0x0
  44d868:	b.ne	44d8fc <argp_usage@@Base+0x4810>  // b.any
  44d86c:	ldr	x1, [sp, #1528]
  44d870:	ldr	x0, [sp, #1520]
  44d874:	cmp	x1, x0
  44d878:	b.cs	44d8fc <argp_usage@@Base+0x4810>  // b.hs, b.nlast
  44d87c:	ldrsw	x1, [sp, #1916]
  44d880:	ldr	x0, [sp, #1528]
  44d884:	sub	x0, x1, x0
  44d888:	str	x0, [sp, #1504]
  44d88c:	ldr	w0, [sp, #1964]
  44d890:	cmp	w0, #0x30
  44d894:	b.ne	44d8cc <argp_usage@@Base+0x47e0>  // b.any
  44d898:	str	xzr, [sp, #1656]
  44d89c:	b	44d8b8 <argp_usage@@Base+0x47cc>
  44d8a0:	ldr	x1, [sp, #1608]
  44d8a4:	mov	w0, #0x30                  	// #48
  44d8a8:	bl	404250 <fputc@plt>
  44d8ac:	ldr	x0, [sp, #1656]
  44d8b0:	add	x0, x0, #0x1
  44d8b4:	str	x0, [sp, #1656]
  44d8b8:	ldr	x1, [sp, #1656]
  44d8bc:	ldr	x0, [sp, #1504]
  44d8c0:	cmp	x1, x0
  44d8c4:	b.cc	44d8a0 <argp_usage@@Base+0x47b4>  // b.lo, b.ul, b.last
  44d8c8:	b	44d8fc <argp_usage@@Base+0x4810>
  44d8cc:	str	xzr, [sp, #1648]
  44d8d0:	b	44d8ec <argp_usage@@Base+0x4800>
  44d8d4:	ldr	x1, [sp, #1608]
  44d8d8:	mov	w0, #0x20                  	// #32
  44d8dc:	bl	404250 <fputc@plt>
  44d8e0:	ldr	x0, [sp, #1648]
  44d8e4:	add	x0, x0, #0x1
  44d8e8:	str	x0, [sp, #1648]
  44d8ec:	ldr	x1, [sp, #1648]
  44d8f0:	ldr	x0, [sp, #1504]
  44d8f4:	cmp	x1, x0
  44d8f8:	b.cc	44d8d4 <argp_usage@@Base+0x47e8>  // b.lo, b.ul, b.last
  44d8fc:	ldrb	w0, [sp, #1915]
  44d900:	cmp	w0, #0x0
  44d904:	b.eq	44d91c <argp_usage@@Base+0x4830>  // b.none
  44d908:	ldr	x2, [sp, #1528]
  44d90c:	ldr	x1, [sp, #1984]
  44d910:	ldr	x0, [sp, #1608]
  44d914:	bl	44b788 <argp_usage@@Base+0x269c>
  44d918:	b	44d950 <argp_usage@@Base+0x4864>
  44d91c:	ldrb	w0, [sp, #1914]
  44d920:	cmp	w0, #0x0
  44d924:	b.eq	44d93c <argp_usage@@Base+0x4850>  // b.none
  44d928:	ldr	x2, [sp, #1528]
  44d92c:	ldr	x1, [sp, #1984]
  44d930:	ldr	x0, [sp, #1608]
  44d934:	bl	44b7e4 <argp_usage@@Base+0x26f8>
  44d938:	b	44d950 <argp_usage@@Base+0x4864>
  44d93c:	ldr	x3, [sp, #1608]
  44d940:	mov	x2, #0x1                   	// #1
  44d944:	ldr	x1, [sp, #1528]
  44d948:	ldr	x0, [sp, #1984]
  44d94c:	bl	404970 <fwrite@plt>
  44d950:	ldr	x1, [sp, #1976]
  44d954:	ldr	x0, [sp, #1512]
  44d958:	add	x0, x1, x0
  44d95c:	str	x0, [sp, #1976]
  44d960:	b	44debc <argp_usage@@Base+0x4dd0>
  44d964:	mov	x0, #0x1                   	// #1
  44d968:	str	x0, [sp, #1904]
  44d96c:	b	44d97c <argp_usage@@Base+0x4890>
  44d970:	ldr	x0, [sp, #1904]
  44d974:	add	x0, x0, #0x1
  44d978:	str	x0, [sp, #1904]
  44d97c:	ldr	x1, [sp, #1968]
  44d980:	ldr	x0, [sp, #1904]
  44d984:	add	x0, x1, x0
  44d988:	ldrb	w0, [x0]
  44d98c:	cmp	w0, #0x3a
  44d990:	b.eq	44d970 <argp_usage@@Base+0x4884>  // b.none
  44d994:	ldr	x1, [sp, #1968]
  44d998:	ldr	x0, [sp, #1904]
  44d99c:	add	x0, x1, x0
  44d9a0:	ldrb	w0, [x0]
  44d9a4:	cmp	w0, #0x7a
  44d9a8:	b.ne	44dcb8 <argp_usage@@Base+0x4bcc>  // b.any
  44d9ac:	ldr	x1, [sp, #1968]
  44d9b0:	ldr	x0, [sp, #1904]
  44d9b4:	add	x0, x1, x0
  44d9b8:	str	x0, [sp, #1968]
  44d9bc:	b	44d9c4 <argp_usage@@Base+0x48d8>
  44d9c0:	str	xzr, [sp, #1904]
  44d9c4:	ldr	x0, [sp, #40]
  44d9c8:	ldr	w0, [x0, #32]
  44d9cc:	cmp	w0, #0x0
  44d9d0:	b.lt	44deb8 <argp_usage@@Base+0x4dcc>  // b.tstop
  44d9d4:	ldr	x0, [sp, #40]
  44d9d8:	ldr	x0, [x0, #40]
  44d9dc:	str	w0, [sp, #1440]
  44d9e0:	ldr	w0, [sp, #1440]
  44d9e4:	cmp	w0, #0x0
  44d9e8:	b.lt	44da08 <argp_usage@@Base+0x491c>  // b.tstop
  44d9ec:	ldr	w0, [sp, #1440]
  44d9f0:	cmp	w0, #0x0
  44d9f4:	b.ne	44da10 <argp_usage@@Base+0x4924>  // b.any
  44d9f8:	ldr	x0, [sp, #1984]
  44d9fc:	ldrb	w0, [x0]
  44da00:	cmp	w0, #0x2d
  44da04:	b.ne	44da10 <argp_usage@@Base+0x4924>  // b.any
  44da08:	mov	w0, #0x1                   	// #1
  44da0c:	b	44da14 <argp_usage@@Base+0x4928>
  44da10:	mov	w0, #0x0                   	// #0
  44da14:	strb	w0, [sp, #1947]
  44da18:	ldrb	w0, [sp, #1947]
  44da1c:	and	w0, w0, #0x1
  44da20:	strb	w0, [sp, #1947]
  44da24:	ldr	w0, [sp, #1440]
  44da28:	mov	w1, #0xb3c5                	// #46021
  44da2c:	movk	w1, #0x91a2, lsl #16
  44da30:	smull	x1, w0, w1
  44da34:	lsr	x1, x1, #32
  44da38:	add	w1, w0, w1
  44da3c:	asr	w1, w1, #11
  44da40:	asr	w0, w0, #31
  44da44:	sub	w0, w1, w0
  44da48:	str	w0, [sp, #1436]
  44da4c:	ldr	w0, [sp, #1440]
  44da50:	mov	w1, #0x8889                	// #34953
  44da54:	movk	w1, #0x8888, lsl #16
  44da58:	smull	x1, w0, w1
  44da5c:	lsr	x1, x1, #32
  44da60:	add	w1, w0, w1
  44da64:	asr	w1, w1, #5
  44da68:	asr	w0, w0, #31
  44da6c:	sub	w1, w1, w0
  44da70:	mov	w0, #0x8889                	// #34953
  44da74:	movk	w0, #0x8888, lsl #16
  44da78:	smull	x0, w1, w0
  44da7c:	lsr	x0, x0, #32
  44da80:	add	w0, w1, w0
  44da84:	asr	w2, w0, #5
  44da88:	asr	w0, w1, #31
  44da8c:	sub	w2, w2, w0
  44da90:	mov	w0, w2
  44da94:	lsl	w0, w0, #4
  44da98:	sub	w0, w0, w2
  44da9c:	lsl	w0, w0, #2
  44daa0:	sub	w0, w1, w0
  44daa4:	str	w0, [sp, #1432]
  44daa8:	ldr	w1, [sp, #1440]
  44daac:	mov	w0, #0x8889                	// #34953
  44dab0:	movk	w0, #0x8888, lsl #16
  44dab4:	smull	x0, w1, w0
  44dab8:	lsr	x0, x0, #32
  44dabc:	add	w0, w1, w0
  44dac0:	asr	w2, w0, #5
  44dac4:	asr	w0, w1, #31
  44dac8:	sub	w2, w2, w0
  44dacc:	mov	w0, w2
  44dad0:	lsl	w0, w0, #4
  44dad4:	sub	w0, w0, w2
  44dad8:	lsl	w0, w0, #2
  44dadc:	sub	w0, w1, w0
  44dae0:	str	w0, [sp, #1428]
  44dae4:	ldr	x0, [sp, #1904]
  44dae8:	cmp	x0, #0x3
  44daec:	b.eq	44dbc8 <argp_usage@@Base+0x4adc>  // b.none
  44daf0:	ldr	x0, [sp, #1904]
  44daf4:	cmp	x0, #0x3
  44daf8:	b.hi	44dcc0 <argp_usage@@Base+0x4bd4>  // b.pmore
  44dafc:	ldr	x0, [sp, #1904]
  44db00:	cmp	x0, #0x2
  44db04:	b.eq	44db8c <argp_usage@@Base+0x4aa0>  // b.none
  44db08:	ldr	x0, [sp, #1904]
  44db0c:	cmp	x0, #0x2
  44db10:	b.hi	44dcc0 <argp_usage@@Base+0x4bd4>  // b.pmore
  44db14:	ldr	x0, [sp, #1904]
  44db18:	cmp	x0, #0x0
  44db1c:	b.eq	44db30 <argp_usage@@Base+0x4a44>  // b.none
  44db20:	ldr	x0, [sp, #1904]
  44db24:	cmp	x0, #0x1
  44db28:	b.eq	44db5c <argp_usage@@Base+0x4a70>  // b.none
  44db2c:	b	44dcc0 <argp_usage@@Base+0x4bd4>
  44db30:	mov	w0, #0x5                   	// #5
  44db34:	str	w0, [sp, #1956]
  44db38:	str	wzr, [sp, #1940]
  44db3c:	ldr	w1, [sp, #1436]
  44db40:	mov	w0, #0x64                  	// #100
  44db44:	mul	w1, w1, w0
  44db48:	ldr	w0, [sp, #1432]
  44db4c:	add	w0, w1, w0
  44db50:	str	w0, [sp, #1948]
  44db54:	b	44c394 <argp_usage@@Base+0x32a8>
  44db58:	nop
  44db5c:	mov	w0, #0x6                   	// #6
  44db60:	str	w0, [sp, #1956]
  44db64:	mov	w0, #0x4                   	// #4
  44db68:	str	w0, [sp, #1940]
  44db6c:	ldr	w1, [sp, #1436]
  44db70:	mov	w0, #0x64                  	// #100
  44db74:	mul	w1, w1, w0
  44db78:	ldr	w0, [sp, #1432]
  44db7c:	add	w0, w1, w0
  44db80:	str	w0, [sp, #1948]
  44db84:	b	44c394 <argp_usage@@Base+0x32a8>
  44db88:	nop
  44db8c:	mov	w0, #0x9                   	// #9
  44db90:	str	w0, [sp, #1956]
  44db94:	mov	w0, #0x14                  	// #20
  44db98:	str	w0, [sp, #1940]
  44db9c:	ldr	w1, [sp, #1436]
  44dba0:	mov	w0, #0x2710                	// #10000
  44dba4:	mul	w1, w1, w0
  44dba8:	ldr	w2, [sp, #1432]
  44dbac:	mov	w0, #0x64                  	// #100
  44dbb0:	mul	w0, w2, w0
  44dbb4:	add	w1, w1, w0
  44dbb8:	ldr	w0, [sp, #1428]
  44dbbc:	add	w0, w1, w0
  44dbc0:	str	w0, [sp, #1948]
  44dbc4:	b	44c394 <argp_usage@@Base+0x32a8>
  44dbc8:	ldr	w0, [sp, #1428]
  44dbcc:	cmp	w0, #0x0
  44dbd0:	b.ne	44db88 <argp_usage@@Base+0x4a9c>  // b.any
  44dbd4:	ldr	w0, [sp, #1432]
  44dbd8:	cmp	w0, #0x0
  44dbdc:	b.ne	44db58 <argp_usage@@Base+0x4a6c>  // b.any
  44dbe0:	mov	w0, #0x3                   	// #3
  44dbe4:	str	w0, [sp, #1956]
  44dbe8:	str	wzr, [sp, #1940]
  44dbec:	ldr	w0, [sp, #1436]
  44dbf0:	str	w0, [sp, #1948]
  44dbf4:	b	44c394 <argp_usage@@Base+0x32a8>
  44dbf8:	ldr	x0, [sp, #1968]
  44dbfc:	sub	x0, x0, #0x1
  44dc00:	str	x0, [sp, #1968]
  44dc04:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc08:	nop
  44dc0c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc10:	nop
  44dc14:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc18:	nop
  44dc1c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc20:	nop
  44dc24:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc28:	nop
  44dc2c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc30:	nop
  44dc34:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc38:	nop
  44dc3c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc40:	nop
  44dc44:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc48:	nop
  44dc4c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc50:	nop
  44dc54:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc58:	nop
  44dc5c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc60:	nop
  44dc64:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc68:	nop
  44dc6c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc70:	nop
  44dc74:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc78:	nop
  44dc7c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc80:	nop
  44dc84:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc88:	nop
  44dc8c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc90:	nop
  44dc94:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dc98:	nop
  44dc9c:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dca0:	nop
  44dca4:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dca8:	nop
  44dcac:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dcb0:	nop
  44dcb4:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dcb8:	nop
  44dcbc:	b	44dcc4 <argp_usage@@Base+0x4bd8>
  44dcc0:	nop
  44dcc4:	mov	w0, #0x1                   	// #1
  44dcc8:	str	w0, [sp, #1644]
  44dccc:	b	44dcdc <argp_usage@@Base+0x4bf0>
  44dcd0:	ldr	w0, [sp, #1644]
  44dcd4:	add	w0, w0, #0x1
  44dcd8:	str	w0, [sp, #1644]
  44dcdc:	mov	w1, #0x1                   	// #1
  44dce0:	ldr	w0, [sp, #1644]
  44dce4:	sub	w0, w1, w0
  44dce8:	sxtw	x0, w0
  44dcec:	ldr	x1, [sp, #1968]
  44dcf0:	add	x0, x1, x0
  44dcf4:	ldrb	w0, [x0]
  44dcf8:	cmp	w0, #0x25
  44dcfc:	b.ne	44dcd0 <argp_usage@@Base+0x4be4>  // b.any
  44dd00:	ldrsw	x0, [sp, #1644]
  44dd04:	str	x0, [sp, #1176]
  44dd08:	ldr	w1, [sp, #1916]
  44dd0c:	ldr	w0, [sp, #1916]
  44dd10:	mov	w2, #0x0                   	// #0
  44dd14:	cmp	w1, #0x0
  44dd18:	csel	w0, w0, w2, ge  // ge = tcont
  44dd1c:	sxtw	x0, w0
  44dd20:	str	x0, [sp, #1168]
  44dd24:	ldr	x0, [sp, #1168]
  44dd28:	ldr	x2, [sp, #1176]
  44dd2c:	ldr	x1, [sp, #1176]
  44dd30:	cmp	x2, x0
  44dd34:	csel	x0, x1, x0, cs  // cs = hs, nlast
  44dd38:	str	x0, [sp, #1160]
  44dd3c:	ldr	x1, [sp, #1616]
  44dd40:	ldr	x0, [sp, #1976]
  44dd44:	sub	x0, x1, x0
  44dd48:	ldr	x1, [sp, #1160]
  44dd4c:	cmp	x1, x0
  44dd50:	b.cc	44dd5c <argp_usage@@Base+0x4c70>  // b.lo, b.ul, b.last
  44dd54:	mov	x0, #0x0                   	// #0
  44dd58:	b	44dedc <argp_usage@@Base+0x4df0>
  44dd5c:	ldr	x0, [sp, #1608]
  44dd60:	cmp	x0, #0x0
  44dd64:	b.eq	44de9c <argp_usage@@Base+0x4db0>  // b.none
  44dd68:	ldr	w0, [sp, #1956]
  44dd6c:	cmp	w0, #0x0
  44dd70:	b.ne	44de04 <argp_usage@@Base+0x4d18>  // b.any
  44dd74:	ldr	x1, [sp, #1176]
  44dd78:	ldr	x0, [sp, #1168]
  44dd7c:	cmp	x1, x0
  44dd80:	b.cs	44de04 <argp_usage@@Base+0x4d18>  // b.hs, b.nlast
  44dd84:	ldrsw	x1, [sp, #1916]
  44dd88:	ldr	x0, [sp, #1176]
  44dd8c:	sub	x0, x1, x0
  44dd90:	str	x0, [sp, #1152]
  44dd94:	ldr	w0, [sp, #1964]
  44dd98:	cmp	w0, #0x30
  44dd9c:	b.ne	44ddd4 <argp_usage@@Base+0x4ce8>  // b.any
  44dda0:	str	xzr, [sp, #1632]
  44dda4:	b	44ddc0 <argp_usage@@Base+0x4cd4>
  44dda8:	ldr	x1, [sp, #1608]
  44ddac:	mov	w0, #0x30                  	// #48
  44ddb0:	bl	404250 <fputc@plt>
  44ddb4:	ldr	x0, [sp, #1632]
  44ddb8:	add	x0, x0, #0x1
  44ddbc:	str	x0, [sp, #1632]
  44ddc0:	ldr	x1, [sp, #1632]
  44ddc4:	ldr	x0, [sp, #1152]
  44ddc8:	cmp	x1, x0
  44ddcc:	b.cc	44dda8 <argp_usage@@Base+0x4cbc>  // b.lo, b.ul, b.last
  44ddd0:	b	44de04 <argp_usage@@Base+0x4d18>
  44ddd4:	str	xzr, [sp, #1624]
  44ddd8:	b	44ddf4 <argp_usage@@Base+0x4d08>
  44dddc:	ldr	x1, [sp, #1608]
  44dde0:	mov	w0, #0x20                  	// #32
  44dde4:	bl	404250 <fputc@plt>
  44dde8:	ldr	x0, [sp, #1624]
  44ddec:	add	x0, x0, #0x1
  44ddf0:	str	x0, [sp, #1624]
  44ddf4:	ldr	x1, [sp, #1624]
  44ddf8:	ldr	x0, [sp, #1152]
  44ddfc:	cmp	x1, x0
  44de00:	b.cc	44dddc <argp_usage@@Base+0x4cf0>  // b.lo, b.ul, b.last
  44de04:	ldrb	w0, [sp, #1915]
  44de08:	cmp	w0, #0x0
  44de0c:	b.eq	44de3c <argp_usage@@Base+0x4d50>  // b.none
  44de10:	mov	w1, #0x1                   	// #1
  44de14:	ldr	w0, [sp, #1644]
  44de18:	sub	w0, w1, w0
  44de1c:	sxtw	x0, w0
  44de20:	ldr	x1, [sp, #1968]
  44de24:	add	x0, x1, x0
  44de28:	ldr	x2, [sp, #1176]
  44de2c:	mov	x1, x0
  44de30:	ldr	x0, [sp, #1608]
  44de34:	bl	44b788 <argp_usage@@Base+0x269c>
  44de38:	b	44de9c <argp_usage@@Base+0x4db0>
  44de3c:	ldrb	w0, [sp, #1914]
  44de40:	cmp	w0, #0x0
  44de44:	b.eq	44de74 <argp_usage@@Base+0x4d88>  // b.none
  44de48:	mov	w1, #0x1                   	// #1
  44de4c:	ldr	w0, [sp, #1644]
  44de50:	sub	w0, w1, w0
  44de54:	sxtw	x0, w0
  44de58:	ldr	x1, [sp, #1968]
  44de5c:	add	x0, x1, x0
  44de60:	ldr	x2, [sp, #1176]
  44de64:	mov	x1, x0
  44de68:	ldr	x0, [sp, #1608]
  44de6c:	bl	44b7e4 <argp_usage@@Base+0x26f8>
  44de70:	b	44de9c <argp_usage@@Base+0x4db0>
  44de74:	mov	w1, #0x1                   	// #1
  44de78:	ldr	w0, [sp, #1644]
  44de7c:	sub	w0, w1, w0
  44de80:	sxtw	x0, w0
  44de84:	ldr	x1, [sp, #1968]
  44de88:	add	x0, x1, x0
  44de8c:	ldr	x3, [sp, #1608]
  44de90:	mov	x2, #0x1                   	// #1
  44de94:	ldr	x1, [sp, #1176]
  44de98:	bl	404970 <fwrite@plt>
  44de9c:	ldr	x1, [sp, #1976]
  44dea0:	ldr	x0, [sp, #1160]
  44dea4:	add	x0, x1, x0
  44dea8:	str	x0, [sp, #1976]
  44deac:	b	44debc <argp_usage@@Base+0x4dd0>
  44deb0:	nop
  44deb4:	b	44debc <argp_usage@@Base+0x4dd0>
  44deb8:	nop
  44debc:	ldr	x0, [sp, #1968]
  44dec0:	add	x0, x0, #0x1
  44dec4:	str	x0, [sp, #1968]
  44dec8:	ldr	x0, [sp, #1968]
  44decc:	ldrb	w0, [x0]
  44ded0:	cmp	w0, #0x0
  44ded4:	b.ne	44b9a8 <argp_usage@@Base+0x28bc>  // b.any
  44ded8:	ldr	x0, [sp, #1976]
  44dedc:	ldp	x29, x30, [sp]
  44dee0:	add	sp, sp, #0x7d0
  44dee4:	ret
  44dee8:	stp	x29, x30, [sp, #-80]!
  44deec:	mov	x29, sp
  44def0:	str	w0, [sp, #44]
  44def4:	str	x1, [sp, #32]
  44def8:	str	x2, [sp, #24]
  44defc:	str	xzr, [sp, #72]
  44df00:	ldr	x0, [sp, #32]
  44df04:	str	x0, [sp, #64]
  44df08:	b	44df7c <argp_usage@@Base+0x4e90>
  44df0c:	ldr	x2, [sp, #24]
  44df10:	ldr	x1, [sp, #64]
  44df14:	ldr	w0, [sp, #44]
  44df18:	bl	45a33c <argp_usage@@Base+0x11250>
  44df1c:	str	x0, [sp, #56]
  44df20:	ldr	x0, [sp, #56]
  44df24:	cmn	x0, #0x1
  44df28:	b.eq	44df8c <argp_usage@@Base+0x4ea0>  // b.none
  44df2c:	ldr	x0, [sp, #56]
  44df30:	cmp	x0, #0x0
  44df34:	b.ne	44df4c <argp_usage@@Base+0x4e60>  // b.any
  44df38:	bl	404bc0 <__errno_location@plt>
  44df3c:	mov	x1, x0
  44df40:	mov	w0, #0x1c                  	// #28
  44df44:	str	w0, [x1]
  44df48:	b	44df90 <argp_usage@@Base+0x4ea4>
  44df4c:	ldr	x1, [sp, #72]
  44df50:	ldr	x0, [sp, #56]
  44df54:	add	x0, x1, x0
  44df58:	str	x0, [sp, #72]
  44df5c:	ldr	x1, [sp, #64]
  44df60:	ldr	x0, [sp, #56]
  44df64:	add	x0, x1, x0
  44df68:	str	x0, [sp, #64]
  44df6c:	ldr	x1, [sp, #24]
  44df70:	ldr	x0, [sp, #56]
  44df74:	sub	x0, x1, x0
  44df78:	str	x0, [sp, #24]
  44df7c:	ldr	x0, [sp, #24]
  44df80:	cmp	x0, #0x0
  44df84:	b.ne	44df0c <argp_usage@@Base+0x4e20>  // b.any
  44df88:	b	44df90 <argp_usage@@Base+0x4ea4>
  44df8c:	nop
  44df90:	ldr	x0, [sp, #72]
  44df94:	ldp	x29, x30, [sp], #80
  44df98:	ret
  44df9c:	stp	x29, x30, [sp, #-32]!
  44dfa0:	mov	x29, sp
  44dfa4:	str	x0, [sp, #24]
  44dfa8:	ldr	x1, [sp, #24]
  44dfac:	mov	w0, #0x0                   	// #0
  44dfb0:	bl	404270 <clock_gettime@plt>
  44dfb4:	nop
  44dfb8:	ldp	x29, x30, [sp], #32
  44dfbc:	ret
  44dfc0:	stp	x29, x30, [sp, #-32]!
  44dfc4:	mov	x29, sp
  44dfc8:	add	x0, sp, #0x10
  44dfcc:	bl	44df9c <argp_usage@@Base+0x4eb0>
  44dfd0:	ldp	x0, x1, [sp, #16]
  44dfd4:	ldp	x29, x30, [sp], #32
  44dfd8:	ret
  44dfdc:	sub	sp, sp, #0x10
  44dfe0:	str	x0, [sp, #8]
  44dfe4:	ldr	x0, [sp, #8]
  44dfe8:	ldr	x0, [x0, #16]
  44dfec:	add	sp, sp, #0x10
  44dff0:	ret
  44dff4:	sub	sp, sp, #0x10
  44dff8:	str	x0, [sp, #8]
  44dffc:	ldr	x0, [sp, #8]
  44e000:	ldr	x0, [x0, #24]
  44e004:	add	sp, sp, #0x10
  44e008:	ret
  44e00c:	sub	sp, sp, #0x10
  44e010:	str	x0, [sp, #8]
  44e014:	ldr	x0, [sp, #8]
  44e018:	ldr	x0, [x0, #32]
  44e01c:	add	sp, sp, #0x10
  44e020:	ret
  44e024:	sub	sp, sp, #0x30
  44e028:	str	x0, [sp, #8]
  44e02c:	str	xzr, [sp, #32]
  44e030:	ldr	x0, [sp, #8]
  44e034:	ldr	x0, [x0]
  44e038:	str	x0, [sp, #40]
  44e03c:	b	44e0ac <argp_usage@@Base+0x4fc0>
  44e040:	ldr	x0, [sp, #40]
  44e044:	ldr	x0, [x0]
  44e048:	cmp	x0, #0x0
  44e04c:	b.eq	44e0a0 <argp_usage@@Base+0x4fb4>  // b.none
  44e050:	ldr	x0, [sp, #40]
  44e054:	str	x0, [sp, #24]
  44e058:	mov	x0, #0x1                   	// #1
  44e05c:	str	x0, [sp, #16]
  44e060:	b	44e070 <argp_usage@@Base+0x4f84>
  44e064:	ldr	x0, [sp, #16]
  44e068:	add	x0, x0, #0x1
  44e06c:	str	x0, [sp, #16]
  44e070:	ldr	x0, [sp, #24]
  44e074:	ldr	x0, [x0, #8]
  44e078:	str	x0, [sp, #24]
  44e07c:	ldr	x0, [sp, #24]
  44e080:	cmp	x0, #0x0
  44e084:	b.ne	44e064 <argp_usage@@Base+0x4f78>  // b.any
  44e088:	ldr	x1, [sp, #16]
  44e08c:	ldr	x0, [sp, #32]
  44e090:	cmp	x1, x0
  44e094:	b.ls	44e0a0 <argp_usage@@Base+0x4fb4>  // b.plast
  44e098:	ldr	x0, [sp, #16]
  44e09c:	str	x0, [sp, #32]
  44e0a0:	ldr	x0, [sp, #40]
  44e0a4:	add	x0, x0, #0x10
  44e0a8:	str	x0, [sp, #40]
  44e0ac:	ldr	x0, [sp, #8]
  44e0b0:	ldr	x0, [x0, #8]
  44e0b4:	ldr	x1, [sp, #40]
  44e0b8:	cmp	x1, x0
  44e0bc:	b.cc	44e040 <argp_usage@@Base+0x4f54>  // b.lo, b.ul, b.last
  44e0c0:	ldr	x0, [sp, #32]
  44e0c4:	add	sp, sp, #0x30
  44e0c8:	ret
  44e0cc:	sub	sp, sp, #0x30
  44e0d0:	str	x0, [sp, #8]
  44e0d4:	str	xzr, [sp, #32]
  44e0d8:	str	xzr, [sp, #24]
  44e0dc:	ldr	x0, [sp, #8]
  44e0e0:	ldr	x0, [x0]
  44e0e4:	str	x0, [sp, #40]
  44e0e8:	b	44e150 <argp_usage@@Base+0x5064>
  44e0ec:	ldr	x0, [sp, #40]
  44e0f0:	ldr	x0, [x0]
  44e0f4:	cmp	x0, #0x0
  44e0f8:	b.eq	44e144 <argp_usage@@Base+0x5058>  // b.none
  44e0fc:	ldr	x0, [sp, #40]
  44e100:	str	x0, [sp, #16]
  44e104:	ldr	x0, [sp, #32]
  44e108:	add	x0, x0, #0x1
  44e10c:	str	x0, [sp, #32]
  44e110:	ldr	x0, [sp, #24]
  44e114:	add	x0, x0, #0x1
  44e118:	str	x0, [sp, #24]
  44e11c:	b	44e12c <argp_usage@@Base+0x5040>
  44e120:	ldr	x0, [sp, #24]
  44e124:	add	x0, x0, #0x1
  44e128:	str	x0, [sp, #24]
  44e12c:	ldr	x0, [sp, #16]
  44e130:	ldr	x0, [x0, #8]
  44e134:	str	x0, [sp, #16]
  44e138:	ldr	x0, [sp, #16]
  44e13c:	cmp	x0, #0x0
  44e140:	b.ne	44e120 <argp_usage@@Base+0x5034>  // b.any
  44e144:	ldr	x0, [sp, #40]
  44e148:	add	x0, x0, #0x10
  44e14c:	str	x0, [sp, #40]
  44e150:	ldr	x0, [sp, #8]
  44e154:	ldr	x0, [x0, #8]
  44e158:	ldr	x1, [sp, #40]
  44e15c:	cmp	x1, x0
  44e160:	b.cc	44e0ec <argp_usage@@Base+0x5000>  // b.lo, b.ul, b.last
  44e164:	ldr	x0, [sp, #8]
  44e168:	ldr	x0, [x0, #24]
  44e16c:	ldr	x1, [sp, #32]
  44e170:	cmp	x1, x0
  44e174:	b.ne	44e194 <argp_usage@@Base+0x50a8>  // b.any
  44e178:	ldr	x0, [sp, #8]
  44e17c:	ldr	x0, [x0, #32]
  44e180:	ldr	x1, [sp, #24]
  44e184:	cmp	x1, x0
  44e188:	b.ne	44e194 <argp_usage@@Base+0x50a8>  // b.any
  44e18c:	mov	w0, #0x1                   	// #1
  44e190:	b	44e198 <argp_usage@@Base+0x50ac>
  44e194:	mov	w0, #0x0                   	// #0
  44e198:	add	sp, sp, #0x30
  44e19c:	ret
  44e1a0:	stp	x29, x30, [sp, #-64]!
  44e1a4:	mov	x29, sp
  44e1a8:	str	x0, [sp, #24]
  44e1ac:	str	x1, [sp, #16]
  44e1b0:	ldr	x0, [sp, #24]
  44e1b4:	bl	44e00c <argp_usage@@Base+0x4f20>
  44e1b8:	str	x0, [sp, #56]
  44e1bc:	ldr	x0, [sp, #24]
  44e1c0:	bl	44dfdc <argp_usage@@Base+0x4ef0>
  44e1c4:	str	x0, [sp, #48]
  44e1c8:	ldr	x0, [sp, #24]
  44e1cc:	bl	44dff4 <argp_usage@@Base+0x4f08>
  44e1d0:	str	x0, [sp, #40]
  44e1d4:	ldr	x0, [sp, #24]
  44e1d8:	bl	44e024 <argp_usage@@Base+0x4f38>
  44e1dc:	str	x0, [sp, #32]
  44e1e0:	ldr	x2, [sp, #56]
  44e1e4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e1e8:	add	x1, x0, #0x768
  44e1ec:	ldr	x0, [sp, #16]
  44e1f0:	bl	404c90 <fprintf@plt>
  44e1f4:	ldr	x2, [sp, #48]
  44e1f8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e1fc:	add	x1, x0, #0x780
  44e200:	ldr	x0, [sp, #16]
  44e204:	bl	404c90 <fprintf@plt>
  44e208:	ldr	d0, [sp, #40]
  44e20c:	ucvtf	d0, d0
  44e210:	mov	x0, #0x4059000000000000    	// #4636737291354636288
  44e214:	fmov	d1, x0
  44e218:	fmul	d1, d0, d1
  44e21c:	ldr	d0, [sp, #48]
  44e220:	ucvtf	d0, d0
  44e224:	fdiv	d0, d1, d0
  44e228:	ldr	x2, [sp, #40]
  44e22c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e230:	add	x1, x0, #0x798
  44e234:	ldr	x0, [sp, #16]
  44e238:	bl	404c90 <fprintf@plt>
  44e23c:	ldr	x2, [sp, #32]
  44e240:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e244:	add	x1, x0, #0x7c0
  44e248:	ldr	x0, [sp, #16]
  44e24c:	bl	404c90 <fprintf@plt>
  44e250:	nop
  44e254:	ldp	x29, x30, [sp], #64
  44e258:	ret
  44e25c:	stp	x29, x30, [sp, #-48]!
  44e260:	mov	x29, sp
  44e264:	str	x0, [sp, #24]
  44e268:	str	x1, [sp, #16]
  44e26c:	ldr	x0, [sp, #24]
  44e270:	ldr	x2, [x0, #48]
  44e274:	ldr	x0, [sp, #24]
  44e278:	ldr	x0, [x0, #16]
  44e27c:	mov	x1, x0
  44e280:	ldr	x0, [sp, #16]
  44e284:	blr	x2
  44e288:	str	x0, [sp, #40]
  44e28c:	ldr	x0, [sp, #24]
  44e290:	ldr	x0, [x0, #16]
  44e294:	ldr	x1, [sp, #40]
  44e298:	cmp	x1, x0
  44e29c:	b.cc	44e2a4 <argp_usage@@Base+0x51b8>  // b.lo, b.ul, b.last
  44e2a0:	bl	404710 <abort@plt>
  44e2a4:	ldr	x0, [sp, #24]
  44e2a8:	ldr	x1, [x0]
  44e2ac:	ldr	x0, [sp, #40]
  44e2b0:	lsl	x0, x0, #4
  44e2b4:	add	x0, x1, x0
  44e2b8:	ldp	x29, x30, [sp], #48
  44e2bc:	ret
  44e2c0:	stp	x29, x30, [sp, #-48]!
  44e2c4:	mov	x29, sp
  44e2c8:	str	x0, [sp, #24]
  44e2cc:	str	x1, [sp, #16]
  44e2d0:	ldr	x1, [sp, #16]
  44e2d4:	ldr	x0, [sp, #24]
  44e2d8:	bl	44e25c <argp_usage@@Base+0x5170>
  44e2dc:	str	x0, [sp, #32]
  44e2e0:	ldr	x0, [sp, #32]
  44e2e4:	ldr	x0, [x0]
  44e2e8:	cmp	x0, #0x0
  44e2ec:	b.ne	44e2f8 <argp_usage@@Base+0x520c>  // b.any
  44e2f0:	mov	x0, #0x0                   	// #0
  44e2f4:	b	44e368 <argp_usage@@Base+0x527c>
  44e2f8:	ldr	x0, [sp, #32]
  44e2fc:	str	x0, [sp, #40]
  44e300:	b	44e358 <argp_usage@@Base+0x526c>
  44e304:	ldr	x0, [sp, #40]
  44e308:	ldr	x0, [x0]
  44e30c:	ldr	x1, [sp, #16]
  44e310:	cmp	x1, x0
  44e314:	b.eq	44e340 <argp_usage@@Base+0x5254>  // b.none
  44e318:	ldr	x0, [sp, #24]
  44e31c:	ldr	x2, [x0, #56]
  44e320:	ldr	x0, [sp, #40]
  44e324:	ldr	x0, [x0]
  44e328:	mov	x1, x0
  44e32c:	ldr	x0, [sp, #16]
  44e330:	blr	x2
  44e334:	and	w0, w0, #0xff
  44e338:	cmp	w0, #0x0
  44e33c:	b.eq	44e34c <argp_usage@@Base+0x5260>  // b.none
  44e340:	ldr	x0, [sp, #40]
  44e344:	ldr	x0, [x0]
  44e348:	b	44e368 <argp_usage@@Base+0x527c>
  44e34c:	ldr	x0, [sp, #40]
  44e350:	ldr	x0, [x0, #8]
  44e354:	str	x0, [sp, #40]
  44e358:	ldr	x0, [sp, #40]
  44e35c:	cmp	x0, #0x0
  44e360:	b.ne	44e304 <argp_usage@@Base+0x5218>  // b.any
  44e364:	mov	x0, #0x0                   	// #0
  44e368:	ldp	x29, x30, [sp], #48
  44e36c:	ret
  44e370:	stp	x29, x30, [sp, #-48]!
  44e374:	mov	x29, sp
  44e378:	str	x0, [sp, #24]
  44e37c:	ldr	x0, [sp, #24]
  44e380:	ldr	x0, [x0, #32]
  44e384:	cmp	x0, #0x0
  44e388:	b.ne	44e394 <argp_usage@@Base+0x52a8>  // b.any
  44e38c:	mov	x0, #0x0                   	// #0
  44e390:	b	44e3e4 <argp_usage@@Base+0x52f8>
  44e394:	ldr	x0, [sp, #24]
  44e398:	ldr	x0, [x0]
  44e39c:	str	x0, [sp, #40]
  44e3a0:	ldr	x0, [sp, #24]
  44e3a4:	ldr	x0, [x0, #8]
  44e3a8:	ldr	x1, [sp, #40]
  44e3ac:	cmp	x1, x0
  44e3b0:	b.cc	44e3b8 <argp_usage@@Base+0x52cc>  // b.lo, b.ul, b.last
  44e3b4:	bl	404710 <abort@plt>
  44e3b8:	ldr	x0, [sp, #40]
  44e3bc:	ldr	x0, [x0]
  44e3c0:	cmp	x0, #0x0
  44e3c4:	b.eq	44e3d4 <argp_usage@@Base+0x52e8>  // b.none
  44e3c8:	ldr	x0, [sp, #40]
  44e3cc:	ldr	x0, [x0]
  44e3d0:	b	44e3e4 <argp_usage@@Base+0x52f8>
  44e3d4:	ldr	x0, [sp, #40]
  44e3d8:	add	x0, x0, #0x10
  44e3dc:	str	x0, [sp, #40]
  44e3e0:	b	44e3a0 <argp_usage@@Base+0x52b4>
  44e3e4:	ldp	x29, x30, [sp], #48
  44e3e8:	ret
  44e3ec:	stp	x29, x30, [sp, #-48]!
  44e3f0:	mov	x29, sp
  44e3f4:	str	x0, [sp, #24]
  44e3f8:	str	x1, [sp, #16]
  44e3fc:	ldr	x1, [sp, #16]
  44e400:	ldr	x0, [sp, #24]
  44e404:	bl	44e25c <argp_usage@@Base+0x5170>
  44e408:	str	x0, [sp, #40]
  44e40c:	ldr	x0, [sp, #40]
  44e410:	str	x0, [sp, #32]
  44e414:	ldr	x0, [sp, #32]
  44e418:	ldr	x0, [x0]
  44e41c:	ldr	x1, [sp, #16]
  44e420:	cmp	x1, x0
  44e424:	b.ne	44e448 <argp_usage@@Base+0x535c>  // b.any
  44e428:	ldr	x0, [sp, #32]
  44e42c:	ldr	x0, [x0, #8]
  44e430:	cmp	x0, #0x0
  44e434:	b.eq	44e448 <argp_usage@@Base+0x535c>  // b.none
  44e438:	ldr	x0, [sp, #32]
  44e43c:	ldr	x0, [x0, #8]
  44e440:	ldr	x0, [x0]
  44e444:	b	44e4a4 <argp_usage@@Base+0x53b8>
  44e448:	ldr	x0, [sp, #32]
  44e44c:	ldr	x0, [x0, #8]
  44e450:	str	x0, [sp, #32]
  44e454:	ldr	x0, [sp, #32]
  44e458:	cmp	x0, #0x0
  44e45c:	b.ne	44e414 <argp_usage@@Base+0x5328>  // b.any
  44e460:	b	44e480 <argp_usage@@Base+0x5394>
  44e464:	ldr	x0, [sp, #40]
  44e468:	ldr	x0, [x0]
  44e46c:	cmp	x0, #0x0
  44e470:	b.eq	44e480 <argp_usage@@Base+0x5394>  // b.none
  44e474:	ldr	x0, [sp, #40]
  44e478:	ldr	x0, [x0]
  44e47c:	b	44e4a4 <argp_usage@@Base+0x53b8>
  44e480:	ldr	x0, [sp, #40]
  44e484:	add	x0, x0, #0x10
  44e488:	str	x0, [sp, #40]
  44e48c:	ldr	x0, [sp, #24]
  44e490:	ldr	x0, [x0, #8]
  44e494:	ldr	x1, [sp, #40]
  44e498:	cmp	x1, x0
  44e49c:	b.cc	44e464 <argp_usage@@Base+0x5378>  // b.lo, b.ul, b.last
  44e4a0:	mov	x0, #0x0                   	// #0
  44e4a4:	ldp	x29, x30, [sp], #48
  44e4a8:	ret
  44e4ac:	sub	sp, sp, #0x40
  44e4b0:	str	x0, [sp, #24]
  44e4b4:	str	x1, [sp, #16]
  44e4b8:	str	x2, [sp, #8]
  44e4bc:	str	xzr, [sp, #56]
  44e4c0:	ldr	x0, [sp, #24]
  44e4c4:	ldr	x0, [x0]
  44e4c8:	str	x0, [sp, #48]
  44e4cc:	b	44e54c <argp_usage@@Base+0x5460>
  44e4d0:	ldr	x0, [sp, #48]
  44e4d4:	ldr	x0, [x0]
  44e4d8:	cmp	x0, #0x0
  44e4dc:	b.eq	44e540 <argp_usage@@Base+0x5454>  // b.none
  44e4e0:	ldr	x0, [sp, #48]
  44e4e4:	str	x0, [sp, #40]
  44e4e8:	b	44e534 <argp_usage@@Base+0x5448>
  44e4ec:	ldr	x1, [sp, #56]
  44e4f0:	ldr	x0, [sp, #8]
  44e4f4:	cmp	x1, x0
  44e4f8:	b.cc	44e504 <argp_usage@@Base+0x5418>  // b.lo, b.ul, b.last
  44e4fc:	ldr	x0, [sp, #56]
  44e500:	b	44e564 <argp_usage@@Base+0x5478>
  44e504:	ldr	x0, [sp, #56]
  44e508:	add	x1, x0, #0x1
  44e50c:	str	x1, [sp, #56]
  44e510:	lsl	x0, x0, #3
  44e514:	ldr	x1, [sp, #16]
  44e518:	add	x0, x1, x0
  44e51c:	ldr	x1, [sp, #40]
  44e520:	ldr	x1, [x1]
  44e524:	str	x1, [x0]
  44e528:	ldr	x0, [sp, #40]
  44e52c:	ldr	x0, [x0, #8]
  44e530:	str	x0, [sp, #40]
  44e534:	ldr	x0, [sp, #40]
  44e538:	cmp	x0, #0x0
  44e53c:	b.ne	44e4ec <argp_usage@@Base+0x5400>  // b.any
  44e540:	ldr	x0, [sp, #48]
  44e544:	add	x0, x0, #0x10
  44e548:	str	x0, [sp, #48]
  44e54c:	ldr	x0, [sp, #24]
  44e550:	ldr	x0, [x0, #8]
  44e554:	ldr	x1, [sp, #48]
  44e558:	cmp	x1, x0
  44e55c:	b.cc	44e4d0 <argp_usage@@Base+0x53e4>  // b.lo, b.ul, b.last
  44e560:	ldr	x0, [sp, #56]
  44e564:	add	sp, sp, #0x40
  44e568:	ret
  44e56c:	stp	x29, x30, [sp, #-80]!
  44e570:	mov	x29, sp
  44e574:	str	x0, [sp, #40]
  44e578:	str	x1, [sp, #32]
  44e57c:	str	x2, [sp, #24]
  44e580:	str	xzr, [sp, #72]
  44e584:	ldr	x0, [sp, #40]
  44e588:	ldr	x0, [x0]
  44e58c:	str	x0, [sp, #64]
  44e590:	b	44e610 <argp_usage@@Base+0x5524>
  44e594:	ldr	x0, [sp, #64]
  44e598:	ldr	x0, [x0]
  44e59c:	cmp	x0, #0x0
  44e5a0:	b.eq	44e604 <argp_usage@@Base+0x5518>  // b.none
  44e5a4:	ldr	x0, [sp, #64]
  44e5a8:	str	x0, [sp, #56]
  44e5ac:	b	44e5f8 <argp_usage@@Base+0x550c>
  44e5b0:	ldr	x0, [sp, #56]
  44e5b4:	ldr	x0, [x0]
  44e5b8:	ldr	x2, [sp, #32]
  44e5bc:	ldr	x1, [sp, #24]
  44e5c0:	blr	x2
  44e5c4:	and	w0, w0, #0xff
  44e5c8:	eor	w0, w0, #0x1
  44e5cc:	and	w0, w0, #0xff
  44e5d0:	cmp	w0, #0x0
  44e5d4:	b.eq	44e5e0 <argp_usage@@Base+0x54f4>  // b.none
  44e5d8:	ldr	x0, [sp, #72]
  44e5dc:	b	44e628 <argp_usage@@Base+0x553c>
  44e5e0:	ldr	x0, [sp, #72]
  44e5e4:	add	x0, x0, #0x1
  44e5e8:	str	x0, [sp, #72]
  44e5ec:	ldr	x0, [sp, #56]
  44e5f0:	ldr	x0, [x0, #8]
  44e5f4:	str	x0, [sp, #56]
  44e5f8:	ldr	x0, [sp, #56]
  44e5fc:	cmp	x0, #0x0
  44e600:	b.ne	44e5b0 <argp_usage@@Base+0x54c4>  // b.any
  44e604:	ldr	x0, [sp, #64]
  44e608:	add	x0, x0, #0x10
  44e60c:	str	x0, [sp, #64]
  44e610:	ldr	x0, [sp, #40]
  44e614:	ldr	x0, [x0, #8]
  44e618:	ldr	x1, [sp, #64]
  44e61c:	cmp	x1, x0
  44e620:	b.cc	44e594 <argp_usage@@Base+0x54a8>  // b.lo, b.ul, b.last
  44e624:	ldr	x0, [sp, #72]
  44e628:	ldp	x29, x30, [sp], #80
  44e62c:	ret
  44e630:	sub	sp, sp, #0x20
  44e634:	str	x0, [sp, #8]
  44e638:	str	x1, [sp]
  44e63c:	str	xzr, [sp, #24]
  44e640:	b	44e680 <argp_usage@@Base+0x5594>
  44e644:	ldr	x1, [sp, #24]
  44e648:	mov	x0, x1
  44e64c:	lsl	x0, x0, #5
  44e650:	sub	x1, x0, x1
  44e654:	ldrb	w0, [sp, #23]
  44e658:	add	x0, x1, x0
  44e65c:	ldr	x1, [sp]
  44e660:	udiv	x2, x0, x1
  44e664:	ldr	x1, [sp]
  44e668:	mul	x1, x2, x1
  44e66c:	sub	x0, x0, x1
  44e670:	str	x0, [sp, #24]
  44e674:	ldr	x0, [sp, #8]
  44e678:	add	x0, x0, #0x1
  44e67c:	str	x0, [sp, #8]
  44e680:	ldr	x0, [sp, #8]
  44e684:	ldrb	w0, [x0]
  44e688:	strb	w0, [sp, #23]
  44e68c:	ldrb	w0, [sp, #23]
  44e690:	cmp	w0, #0x0
  44e694:	b.ne	44e644 <argp_usage@@Base+0x5558>  // b.any
  44e698:	ldr	x0, [sp, #24]
  44e69c:	add	sp, sp, #0x20
  44e6a0:	ret
  44e6a4:	sub	sp, sp, #0x20
  44e6a8:	str	x0, [sp, #8]
  44e6ac:	mov	x0, #0x3                   	// #3
  44e6b0:	str	x0, [sp, #24]
  44e6b4:	ldr	x0, [sp, #24]
  44e6b8:	mul	x0, x0, x0
  44e6bc:	str	x0, [sp, #16]
  44e6c0:	b	44e6f0 <argp_usage@@Base+0x5604>
  44e6c4:	ldr	x0, [sp, #24]
  44e6c8:	add	x0, x0, #0x1
  44e6cc:	str	x0, [sp, #24]
  44e6d0:	ldr	x0, [sp, #24]
  44e6d4:	lsl	x0, x0, #2
  44e6d8:	ldr	x1, [sp, #16]
  44e6dc:	add	x0, x1, x0
  44e6e0:	str	x0, [sp, #16]
  44e6e4:	ldr	x0, [sp, #24]
  44e6e8:	add	x0, x0, #0x1
  44e6ec:	str	x0, [sp, #24]
  44e6f0:	ldr	x1, [sp, #16]
  44e6f4:	ldr	x0, [sp, #8]
  44e6f8:	cmp	x1, x0
  44e6fc:	b.cs	44e720 <argp_usage@@Base+0x5634>  // b.hs, b.nlast
  44e700:	ldr	x0, [sp, #8]
  44e704:	ldr	x1, [sp, #24]
  44e708:	udiv	x2, x0, x1
  44e70c:	ldr	x1, [sp, #24]
  44e710:	mul	x1, x2, x1
  44e714:	sub	x0, x0, x1
  44e718:	cmp	x0, #0x0
  44e71c:	b.ne	44e6c4 <argp_usage@@Base+0x55d8>  // b.any
  44e720:	ldr	x0, [sp, #8]
  44e724:	ldr	x1, [sp, #24]
  44e728:	udiv	x2, x0, x1
  44e72c:	ldr	x1, [sp, #24]
  44e730:	mul	x1, x2, x1
  44e734:	sub	x0, x0, x1
  44e738:	cmp	x0, #0x0
  44e73c:	cset	w0, ne  // ne = any
  44e740:	and	w0, w0, #0xff
  44e744:	add	sp, sp, #0x20
  44e748:	ret
  44e74c:	stp	x29, x30, [sp, #-32]!
  44e750:	mov	x29, sp
  44e754:	str	x0, [sp, #24]
  44e758:	ldr	x0, [sp, #24]
  44e75c:	cmp	x0, #0x9
  44e760:	b.hi	44e76c <argp_usage@@Base+0x5680>  // b.pmore
  44e764:	mov	x0, #0xa                   	// #10
  44e768:	str	x0, [sp, #24]
  44e76c:	ldr	x0, [sp, #24]
  44e770:	orr	x0, x0, #0x1
  44e774:	str	x0, [sp, #24]
  44e778:	b	44e788 <argp_usage@@Base+0x569c>
  44e77c:	ldr	x0, [sp, #24]
  44e780:	add	x0, x0, #0x2
  44e784:	str	x0, [sp, #24]
  44e788:	ldr	x0, [sp, #24]
  44e78c:	cmn	x0, #0x1
  44e790:	b.eq	44e7b0 <argp_usage@@Base+0x56c4>  // b.none
  44e794:	ldr	x0, [sp, #24]
  44e798:	bl	44e6a4 <argp_usage@@Base+0x55b8>
  44e79c:	and	w0, w0, #0xff
  44e7a0:	eor	w0, w0, #0x1
  44e7a4:	and	w0, w0, #0xff
  44e7a8:	cmp	w0, #0x0
  44e7ac:	b.ne	44e77c <argp_usage@@Base+0x5690>  // b.any
  44e7b0:	ldr	x0, [sp, #24]
  44e7b4:	ldp	x29, x30, [sp], #32
  44e7b8:	ret
  44e7bc:	sub	sp, sp, #0x10
  44e7c0:	str	x0, [sp, #8]
  44e7c4:	ldr	x1, [sp, #8]
  44e7c8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e7cc:	add	x0, x0, #0x750
  44e7d0:	mov	x2, x1
  44e7d4:	mov	x3, x0
  44e7d8:	ldp	x0, x1, [x3]
  44e7dc:	stp	x0, x1, [x2]
  44e7e0:	ldr	w0, [x3, #16]
  44e7e4:	str	w0, [x2, #16]
  44e7e8:	nop
  44e7ec:	add	sp, sp, #0x10
  44e7f0:	ret
  44e7f4:	stp	x29, x30, [sp, #-48]!
  44e7f8:	mov	x29, sp
  44e7fc:	str	x0, [sp, #24]
  44e800:	str	x1, [sp, #16]
  44e804:	ldr	x0, [sp, #24]
  44e808:	mov	w1, #0x3                   	// #3
  44e80c:	bl	47658c <_obstack_memory_used@@Base+0x1944c>
  44e810:	str	x0, [sp, #40]
  44e814:	ldr	x0, [sp, #40]
  44e818:	ldr	x1, [sp, #16]
  44e81c:	udiv	x2, x0, x1
  44e820:	ldr	x1, [sp, #16]
  44e824:	mul	x1, x2, x1
  44e828:	sub	x0, x0, x1
  44e82c:	ldp	x29, x30, [sp], #48
  44e830:	ret
  44e834:	sub	sp, sp, #0x10
  44e838:	str	x0, [sp, #8]
  44e83c:	str	x1, [sp]
  44e840:	ldr	x1, [sp, #8]
  44e844:	ldr	x0, [sp]
  44e848:	cmp	x1, x0
  44e84c:	cset	w0, eq  // eq = none
  44e850:	and	w0, w0, #0xff
  44e854:	add	sp, sp, #0x10
  44e858:	ret
  44e85c:	sub	sp, sp, #0x20
  44e860:	str	x0, [sp, #8]
  44e864:	ldr	x0, [sp, #8]
  44e868:	ldr	x0, [x0, #40]
  44e86c:	str	x0, [sp, #24]
  44e870:	ldr	x1, [sp, #24]
  44e874:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e878:	add	x0, x0, #0x750
  44e87c:	cmp	x1, x0
  44e880:	b.ne	44e88c <argp_usage@@Base+0x57a0>  // b.any
  44e884:	mov	w0, #0x1                   	// #1
  44e888:	b	44e968 <argp_usage@@Base+0x587c>
  44e88c:	mov	w0, #0xcccd                	// #52429
  44e890:	movk	w0, #0x3dcc, lsl #16
  44e894:	fmov	s0, w0
  44e898:	str	s0, [sp, #20]
  44e89c:	ldr	x0, [sp, #24]
  44e8a0:	ldr	s0, [x0, #8]
  44e8a4:	ldr	s1, [sp, #20]
  44e8a8:	fcmpe	s1, s0
  44e8ac:	b.pl	44e954 <argp_usage@@Base+0x5868>  // b.nfrst
  44e8b0:	ldr	x0, [sp, #24]
  44e8b4:	ldr	s1, [x0, #8]
  44e8b8:	fmov	s2, #1.000000000000000000e+00
  44e8bc:	ldr	s0, [sp, #20]
  44e8c0:	fsub	s0, s2, s0
  44e8c4:	fcmpe	s1, s0
  44e8c8:	b.pl	44e954 <argp_usage@@Base+0x5868>  // b.nfrst
  44e8cc:	ldr	s1, [sp, #20]
  44e8d0:	fmov	s0, #1.000000000000000000e+00
  44e8d4:	fadd	s1, s1, s0
  44e8d8:	ldr	x0, [sp, #24]
  44e8dc:	ldr	s0, [x0, #12]
  44e8e0:	fcmpe	s1, s0
  44e8e4:	b.pl	44e954 <argp_usage@@Base+0x5868>  // b.nfrst
  44e8e8:	ldr	x0, [sp, #24]
  44e8ec:	ldr	s0, [x0]
  44e8f0:	fcmpe	s0, #0.0
  44e8f4:	b.lt	44e954 <argp_usage@@Base+0x5868>  // b.tstop
  44e8f8:	ldr	x0, [sp, #24]
  44e8fc:	ldr	s1, [x0]
  44e900:	ldr	s0, [sp, #20]
  44e904:	fadd	s1, s1, s0
  44e908:	ldr	x0, [sp, #24]
  44e90c:	ldr	s0, [x0, #4]
  44e910:	fcmpe	s1, s0
  44e914:	b.pl	44e954 <argp_usage@@Base+0x5868>  // b.nfrst
  44e918:	ldr	x0, [sp, #24]
  44e91c:	ldr	s1, [x0, #4]
  44e920:	fmov	s0, #1.000000000000000000e+00
  44e924:	fcmpe	s1, s0
  44e928:	b.hi	44e954 <argp_usage@@Base+0x5868>  // b.pmore
  44e92c:	ldr	x0, [sp, #24]
  44e930:	ldr	s1, [x0]
  44e934:	ldr	s0, [sp, #20]
  44e938:	fadd	s1, s1, s0
  44e93c:	ldr	x0, [sp, #24]
  44e940:	ldr	s0, [x0, #8]
  44e944:	fcmpe	s1, s0
  44e948:	b.pl	44e954 <argp_usage@@Base+0x5868>  // b.nfrst
  44e94c:	mov	w0, #0x1                   	// #1
  44e950:	b	44e968 <argp_usage@@Base+0x587c>
  44e954:	ldr	x0, [sp, #8]
  44e958:	adrp	x1, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44e95c:	add	x1, x1, #0x750
  44e960:	str	x1, [x0, #40]
  44e964:	mov	w0, #0x0                   	// #0
  44e968:	add	sp, sp, #0x20
  44e96c:	ret
  44e970:	stp	x29, x30, [sp, #-48]!
  44e974:	mov	x29, sp
  44e978:	str	x0, [sp, #24]
  44e97c:	str	x1, [sp, #16]
  44e980:	ldr	x0, [sp, #16]
  44e984:	ldrb	w0, [x0, #16]
  44e988:	eor	w0, w0, #0x1
  44e98c:	and	w0, w0, #0xff
  44e990:	cmp	w0, #0x0
  44e994:	b.eq	44e9d8 <argp_usage@@Base+0x58ec>  // b.none
  44e998:	ldr	x0, [sp, #24]
  44e99c:	ucvtf	s1, x0
  44e9a0:	ldr	x0, [sp, #16]
  44e9a4:	ldr	s0, [x0, #8]
  44e9a8:	fdiv	s0, s1, s0
  44e9ac:	str	s0, [sp, #44]
  44e9b0:	ldr	s0, [sp, #44]
  44e9b4:	mov	w0, #0x5f800000            	// #1602224128
  44e9b8:	fmov	s1, w0
  44e9bc:	fcmpe	s0, s1
  44e9c0:	b.lt	44e9cc <argp_usage@@Base+0x58e0>  // b.tstop
  44e9c4:	mov	x0, #0x0                   	// #0
  44e9c8:	b	44ea2c <argp_usage@@Base+0x5940>
  44e9cc:	ldr	s0, [sp, #44]
  44e9d0:	fcvtzu	x0, s0
  44e9d4:	str	x0, [sp, #24]
  44e9d8:	ldr	x0, [sp, #24]
  44e9dc:	bl	44e74c <argp_usage@@Base+0x5660>
  44e9e0:	str	x0, [sp, #24]
  44e9e4:	mov	x0, #0x0                   	// #0
  44e9e8:	ldr	x1, [sp, #24]
  44e9ec:	lsl	x1, x1, #3
  44e9f0:	ldr	x2, [sp, #24]
  44e9f4:	lsr	x2, x2, #61
  44e9f8:	cmp	x2, #0x0
  44e9fc:	b.eq	44ea04 <argp_usage@@Base+0x5918>  // b.none
  44ea00:	mov	x0, #0x1                   	// #1
  44ea04:	cmp	x1, #0x0
  44ea08:	b.ge	44ea10 <argp_usage@@Base+0x5924>  // b.tcont
  44ea0c:	mov	x0, #0x1                   	// #1
  44ea10:	and	w0, w0, #0x1
  44ea14:	and	w0, w0, #0xff
  44ea18:	cmp	w0, #0x0
  44ea1c:	b.eq	44ea28 <argp_usage@@Base+0x593c>  // b.none
  44ea20:	mov	x0, #0x0                   	// #0
  44ea24:	b	44ea2c <argp_usage@@Base+0x5940>
  44ea28:	ldr	x0, [sp, #24]
  44ea2c:	ldp	x29, x30, [sp], #48
  44ea30:	ret
  44ea34:	stp	x29, x30, [sp, #-80]!
  44ea38:	mov	x29, sp
  44ea3c:	str	x0, [sp, #56]
  44ea40:	str	x1, [sp, #48]
  44ea44:	str	x2, [sp, #40]
  44ea48:	str	x3, [sp, #32]
  44ea4c:	str	x4, [sp, #24]
  44ea50:	ldr	x0, [sp, #40]
  44ea54:	cmp	x0, #0x0
  44ea58:	b.ne	44ea68 <argp_usage@@Base+0x597c>  // b.any
  44ea5c:	adrp	x0, 44e000 <argp_usage@@Base+0x4f14>
  44ea60:	add	x0, x0, #0x7f4
  44ea64:	str	x0, [sp, #40]
  44ea68:	ldr	x0, [sp, #32]
  44ea6c:	cmp	x0, #0x0
  44ea70:	b.ne	44ea80 <argp_usage@@Base+0x5994>  // b.any
  44ea74:	adrp	x0, 44e000 <argp_usage@@Base+0x4f14>
  44ea78:	add	x0, x0, #0x834
  44ea7c:	str	x0, [sp, #32]
  44ea80:	mov	x0, #0x50                  	// #80
  44ea84:	bl	4043f0 <malloc@plt>
  44ea88:	str	x0, [sp, #72]
  44ea8c:	ldr	x0, [sp, #72]
  44ea90:	cmp	x0, #0x0
  44ea94:	b.ne	44eaa0 <argp_usage@@Base+0x59b4>  // b.any
  44ea98:	mov	x0, #0x0                   	// #0
  44ea9c:	b	44ebb8 <argp_usage@@Base+0x5acc>
  44eaa0:	ldr	x0, [sp, #48]
  44eaa4:	cmp	x0, #0x0
  44eaa8:	b.ne	44eab8 <argp_usage@@Base+0x59cc>  // b.any
  44eaac:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44eab0:	add	x0, x0, #0x750
  44eab4:	str	x0, [sp, #48]
  44eab8:	ldr	x0, [sp, #72]
  44eabc:	ldr	x1, [sp, #48]
  44eac0:	str	x1, [x0, #40]
  44eac4:	ldr	x0, [sp, #72]
  44eac8:	bl	44e85c <argp_usage@@Base+0x5770>
  44eacc:	and	w0, w0, #0xff
  44ead0:	eor	w0, w0, #0x1
  44ead4:	and	w0, w0, #0xff
  44ead8:	cmp	w0, #0x0
  44eadc:	b.ne	44eb98 <argp_usage@@Base+0x5aac>  // b.any
  44eae0:	ldr	x1, [sp, #48]
  44eae4:	ldr	x0, [sp, #56]
  44eae8:	bl	44e970 <argp_usage@@Base+0x5884>
  44eaec:	mov	x1, x0
  44eaf0:	ldr	x0, [sp, #72]
  44eaf4:	str	x1, [x0, #16]
  44eaf8:	ldr	x0, [sp, #72]
  44eafc:	ldr	x0, [x0, #16]
  44eb00:	cmp	x0, #0x0
  44eb04:	b.eq	44eba0 <argp_usage@@Base+0x5ab4>  // b.none
  44eb08:	ldr	x0, [sp, #72]
  44eb0c:	ldr	x0, [x0, #16]
  44eb10:	mov	x1, #0x10                  	// #16
  44eb14:	bl	404560 <calloc@plt>
  44eb18:	mov	x1, x0
  44eb1c:	ldr	x0, [sp, #72]
  44eb20:	str	x1, [x0]
  44eb24:	ldr	x0, [sp, #72]
  44eb28:	ldr	x0, [x0]
  44eb2c:	cmp	x0, #0x0
  44eb30:	b.eq	44eba8 <argp_usage@@Base+0x5abc>  // b.none
  44eb34:	ldr	x0, [sp, #72]
  44eb38:	ldr	x1, [x0]
  44eb3c:	ldr	x0, [sp, #72]
  44eb40:	ldr	x0, [x0, #16]
  44eb44:	lsl	x0, x0, #4
  44eb48:	add	x1, x1, x0
  44eb4c:	ldr	x0, [sp, #72]
  44eb50:	str	x1, [x0, #8]
  44eb54:	ldr	x0, [sp, #72]
  44eb58:	str	xzr, [x0, #24]
  44eb5c:	ldr	x0, [sp, #72]
  44eb60:	str	xzr, [x0, #32]
  44eb64:	ldr	x0, [sp, #72]
  44eb68:	ldr	x1, [sp, #40]
  44eb6c:	str	x1, [x0, #48]
  44eb70:	ldr	x0, [sp, #72]
  44eb74:	ldr	x1, [sp, #32]
  44eb78:	str	x1, [x0, #56]
  44eb7c:	ldr	x0, [sp, #72]
  44eb80:	ldr	x1, [sp, #24]
  44eb84:	str	x1, [x0, #64]
  44eb88:	ldr	x0, [sp, #72]
  44eb8c:	str	xzr, [x0, #72]
  44eb90:	ldr	x0, [sp, #72]
  44eb94:	b	44ebb8 <argp_usage@@Base+0x5acc>
  44eb98:	nop
  44eb9c:	b	44ebac <argp_usage@@Base+0x5ac0>
  44eba0:	nop
  44eba4:	b	44ebac <argp_usage@@Base+0x5ac0>
  44eba8:	nop
  44ebac:	ldr	x0, [sp, #72]
  44ebb0:	bl	404880 <free@plt>
  44ebb4:	mov	x0, #0x0                   	// #0
  44ebb8:	ldp	x29, x30, [sp], #80
  44ebbc:	ret
  44ebc0:	stp	x29, x30, [sp, #-64]!
  44ebc4:	mov	x29, sp
  44ebc8:	str	x0, [sp, #24]
  44ebcc:	ldr	x0, [sp, #24]
  44ebd0:	ldr	x0, [x0]
  44ebd4:	str	x0, [sp, #56]
  44ebd8:	b	44eca4 <argp_usage@@Base+0x5bb8>
  44ebdc:	ldr	x0, [sp, #56]
  44ebe0:	ldr	x0, [x0]
  44ebe4:	cmp	x0, #0x0
  44ebe8:	b.eq	44ec98 <argp_usage@@Base+0x5bac>  // b.none
  44ebec:	ldr	x0, [sp, #56]
  44ebf0:	ldr	x0, [x0, #8]
  44ebf4:	str	x0, [sp, #48]
  44ebf8:	b	44ec58 <argp_usage@@Base+0x5b6c>
  44ebfc:	ldr	x0, [sp, #24]
  44ec00:	ldr	x0, [x0, #64]
  44ec04:	cmp	x0, #0x0
  44ec08:	b.eq	44ec20 <argp_usage@@Base+0x5b34>  // b.none
  44ec0c:	ldr	x0, [sp, #24]
  44ec10:	ldr	x1, [x0, #64]
  44ec14:	ldr	x0, [sp, #48]
  44ec18:	ldr	x0, [x0]
  44ec1c:	blr	x1
  44ec20:	ldr	x0, [sp, #48]
  44ec24:	str	xzr, [x0]
  44ec28:	ldr	x0, [sp, #48]
  44ec2c:	ldr	x0, [x0, #8]
  44ec30:	str	x0, [sp, #40]
  44ec34:	ldr	x0, [sp, #24]
  44ec38:	ldr	x1, [x0, #72]
  44ec3c:	ldr	x0, [sp, #48]
  44ec40:	str	x1, [x0, #8]
  44ec44:	ldr	x0, [sp, #24]
  44ec48:	ldr	x1, [sp, #48]
  44ec4c:	str	x1, [x0, #72]
  44ec50:	ldr	x0, [sp, #40]
  44ec54:	str	x0, [sp, #48]
  44ec58:	ldr	x0, [sp, #48]
  44ec5c:	cmp	x0, #0x0
  44ec60:	b.ne	44ebfc <argp_usage@@Base+0x5b10>  // b.any
  44ec64:	ldr	x0, [sp, #24]
  44ec68:	ldr	x0, [x0, #64]
  44ec6c:	cmp	x0, #0x0
  44ec70:	b.eq	44ec88 <argp_usage@@Base+0x5b9c>  // b.none
  44ec74:	ldr	x0, [sp, #24]
  44ec78:	ldr	x1, [x0, #64]
  44ec7c:	ldr	x0, [sp, #56]
  44ec80:	ldr	x0, [x0]
  44ec84:	blr	x1
  44ec88:	ldr	x0, [sp, #56]
  44ec8c:	str	xzr, [x0]
  44ec90:	ldr	x0, [sp, #56]
  44ec94:	str	xzr, [x0, #8]
  44ec98:	ldr	x0, [sp, #56]
  44ec9c:	add	x0, x0, #0x10
  44eca0:	str	x0, [sp, #56]
  44eca4:	ldr	x0, [sp, #24]
  44eca8:	ldr	x0, [x0, #8]
  44ecac:	ldr	x1, [sp, #56]
  44ecb0:	cmp	x1, x0
  44ecb4:	b.cc	44ebdc <argp_usage@@Base+0x5af0>  // b.lo, b.ul, b.last
  44ecb8:	ldr	x0, [sp, #24]
  44ecbc:	str	xzr, [x0, #24]
  44ecc0:	ldr	x0, [sp, #24]
  44ecc4:	str	xzr, [x0, #32]
  44ecc8:	nop
  44eccc:	ldp	x29, x30, [sp], #64
  44ecd0:	ret
  44ecd4:	stp	x29, x30, [sp, #-64]!
  44ecd8:	mov	x29, sp
  44ecdc:	str	x0, [sp, #24]
  44ece0:	ldr	x0, [sp, #24]
  44ece4:	ldr	x0, [x0, #64]
  44ece8:	cmp	x0, #0x0
  44ecec:	b.eq	44ed78 <argp_usage@@Base+0x5c8c>  // b.none
  44ecf0:	ldr	x0, [sp, #24]
  44ecf4:	ldr	x0, [x0, #32]
  44ecf8:	cmp	x0, #0x0
  44ecfc:	b.eq	44ed78 <argp_usage@@Base+0x5c8c>  // b.none
  44ed00:	ldr	x0, [sp, #24]
  44ed04:	ldr	x0, [x0]
  44ed08:	str	x0, [sp, #56]
  44ed0c:	b	44ed64 <argp_usage@@Base+0x5c78>
  44ed10:	ldr	x0, [sp, #56]
  44ed14:	ldr	x0, [x0]
  44ed18:	cmp	x0, #0x0
  44ed1c:	b.eq	44ed58 <argp_usage@@Base+0x5c6c>  // b.none
  44ed20:	ldr	x0, [sp, #56]
  44ed24:	str	x0, [sp, #48]
  44ed28:	b	44ed4c <argp_usage@@Base+0x5c60>
  44ed2c:	ldr	x0, [sp, #24]
  44ed30:	ldr	x1, [x0, #64]
  44ed34:	ldr	x0, [sp, #48]
  44ed38:	ldr	x0, [x0]
  44ed3c:	blr	x1
  44ed40:	ldr	x0, [sp, #48]
  44ed44:	ldr	x0, [x0, #8]
  44ed48:	str	x0, [sp, #48]
  44ed4c:	ldr	x0, [sp, #48]
  44ed50:	cmp	x0, #0x0
  44ed54:	b.ne	44ed2c <argp_usage@@Base+0x5c40>  // b.any
  44ed58:	ldr	x0, [sp, #56]
  44ed5c:	add	x0, x0, #0x10
  44ed60:	str	x0, [sp, #56]
  44ed64:	ldr	x0, [sp, #24]
  44ed68:	ldr	x0, [x0, #8]
  44ed6c:	ldr	x1, [sp, #56]
  44ed70:	cmp	x1, x0
  44ed74:	b.cc	44ed10 <argp_usage@@Base+0x5c24>  // b.lo, b.ul, b.last
  44ed78:	ldr	x0, [sp, #24]
  44ed7c:	ldr	x0, [x0]
  44ed80:	str	x0, [sp, #56]
  44ed84:	b	44edcc <argp_usage@@Base+0x5ce0>
  44ed88:	ldr	x0, [sp, #56]
  44ed8c:	ldr	x0, [x0, #8]
  44ed90:	str	x0, [sp, #48]
  44ed94:	b	44edb4 <argp_usage@@Base+0x5cc8>
  44ed98:	ldr	x0, [sp, #48]
  44ed9c:	ldr	x0, [x0, #8]
  44eda0:	str	x0, [sp, #40]
  44eda4:	ldr	x0, [sp, #48]
  44eda8:	bl	404880 <free@plt>
  44edac:	ldr	x0, [sp, #40]
  44edb0:	str	x0, [sp, #48]
  44edb4:	ldr	x0, [sp, #48]
  44edb8:	cmp	x0, #0x0
  44edbc:	b.ne	44ed98 <argp_usage@@Base+0x5cac>  // b.any
  44edc0:	ldr	x0, [sp, #56]
  44edc4:	add	x0, x0, #0x10
  44edc8:	str	x0, [sp, #56]
  44edcc:	ldr	x0, [sp, #24]
  44edd0:	ldr	x0, [x0, #8]
  44edd4:	ldr	x1, [sp, #56]
  44edd8:	cmp	x1, x0
  44eddc:	b.cc	44ed88 <argp_usage@@Base+0x5c9c>  // b.lo, b.ul, b.last
  44ede0:	ldr	x0, [sp, #24]
  44ede4:	ldr	x0, [x0, #72]
  44ede8:	str	x0, [sp, #48]
  44edec:	b	44ee0c <argp_usage@@Base+0x5d20>
  44edf0:	ldr	x0, [sp, #48]
  44edf4:	ldr	x0, [x0, #8]
  44edf8:	str	x0, [sp, #40]
  44edfc:	ldr	x0, [sp, #48]
  44ee00:	bl	404880 <free@plt>
  44ee04:	ldr	x0, [sp, #40]
  44ee08:	str	x0, [sp, #48]
  44ee0c:	ldr	x0, [sp, #48]
  44ee10:	cmp	x0, #0x0
  44ee14:	b.ne	44edf0 <argp_usage@@Base+0x5d04>  // b.any
  44ee18:	ldr	x0, [sp, #24]
  44ee1c:	ldr	x0, [x0]
  44ee20:	bl	404880 <free@plt>
  44ee24:	ldr	x0, [sp, #24]
  44ee28:	bl	404880 <free@plt>
  44ee2c:	nop
  44ee30:	ldp	x29, x30, [sp], #64
  44ee34:	ret
  44ee38:	stp	x29, x30, [sp, #-48]!
  44ee3c:	mov	x29, sp
  44ee40:	str	x0, [sp, #24]
  44ee44:	ldr	x0, [sp, #24]
  44ee48:	ldr	x0, [x0, #72]
  44ee4c:	cmp	x0, #0x0
  44ee50:	b.eq	44ee74 <argp_usage@@Base+0x5d88>  // b.none
  44ee54:	ldr	x0, [sp, #24]
  44ee58:	ldr	x0, [x0, #72]
  44ee5c:	str	x0, [sp, #40]
  44ee60:	ldr	x0, [sp, #40]
  44ee64:	ldr	x1, [x0, #8]
  44ee68:	ldr	x0, [sp, #24]
  44ee6c:	str	x1, [x0, #72]
  44ee70:	b	44ee80 <argp_usage@@Base+0x5d94>
  44ee74:	mov	x0, #0x10                  	// #16
  44ee78:	bl	4043f0 <malloc@plt>
  44ee7c:	str	x0, [sp, #40]
  44ee80:	ldr	x0, [sp, #40]
  44ee84:	ldp	x29, x30, [sp], #48
  44ee88:	ret
  44ee8c:	sub	sp, sp, #0x10
  44ee90:	str	x0, [sp, #8]
  44ee94:	str	x1, [sp]
  44ee98:	ldr	x0, [sp]
  44ee9c:	str	xzr, [x0]
  44eea0:	ldr	x0, [sp, #8]
  44eea4:	ldr	x1, [x0, #72]
  44eea8:	ldr	x0, [sp]
  44eeac:	str	x1, [x0, #8]
  44eeb0:	ldr	x0, [sp, #8]
  44eeb4:	ldr	x1, [sp]
  44eeb8:	str	x1, [x0, #72]
  44eebc:	nop
  44eec0:	add	sp, sp, #0x10
  44eec4:	ret
  44eec8:	stp	x29, x30, [sp, #-96]!
  44eecc:	mov	x29, sp
  44eed0:	str	x0, [sp, #40]
  44eed4:	str	x1, [sp, #32]
  44eed8:	str	x2, [sp, #24]
  44eedc:	strb	w3, [sp, #23]
  44eee0:	ldr	x1, [sp, #32]
  44eee4:	ldr	x0, [sp, #40]
  44eee8:	bl	44e25c <argp_usage@@Base+0x5170>
  44eeec:	str	x0, [sp, #80]
  44eef0:	ldr	x0, [sp, #24]
  44eef4:	ldr	x1, [sp, #80]
  44eef8:	str	x1, [x0]
  44eefc:	ldr	x0, [sp, #80]
  44ef00:	ldr	x0, [x0]
  44ef04:	cmp	x0, #0x0
  44ef08:	b.ne	44ef14 <argp_usage@@Base+0x5e28>  // b.any
  44ef0c:	mov	x0, #0x0                   	// #0
  44ef10:	b	44f070 <argp_usage@@Base+0x5f84>
  44ef14:	ldr	x0, [sp, #80]
  44ef18:	ldr	x0, [x0]
  44ef1c:	ldr	x1, [sp, #32]
  44ef20:	cmp	x1, x0
  44ef24:	b.eq	44ef50 <argp_usage@@Base+0x5e64>  // b.none
  44ef28:	ldr	x0, [sp, #40]
  44ef2c:	ldr	x2, [x0, #56]
  44ef30:	ldr	x0, [sp, #80]
  44ef34:	ldr	x0, [x0]
  44ef38:	mov	x1, x0
  44ef3c:	ldr	x0, [sp, #32]
  44ef40:	blr	x2
  44ef44:	and	w0, w0, #0xff
  44ef48:	cmp	w0, #0x0
  44ef4c:	b.eq	44efb4 <argp_usage@@Base+0x5ec8>  // b.none
  44ef50:	ldr	x0, [sp, #80]
  44ef54:	ldr	x0, [x0]
  44ef58:	str	x0, [sp, #56]
  44ef5c:	ldrb	w0, [sp, #23]
  44ef60:	cmp	w0, #0x0
  44ef64:	b.eq	44efac <argp_usage@@Base+0x5ec0>  // b.none
  44ef68:	ldr	x0, [sp, #80]
  44ef6c:	ldr	x0, [x0, #8]
  44ef70:	cmp	x0, #0x0
  44ef74:	b.eq	44efa4 <argp_usage@@Base+0x5eb8>  // b.none
  44ef78:	ldr	x0, [sp, #80]
  44ef7c:	ldr	x0, [x0, #8]
  44ef80:	str	x0, [sp, #48]
  44ef84:	ldr	x2, [sp, #80]
  44ef88:	ldr	x0, [sp, #48]
  44ef8c:	ldp	x0, x1, [x0]
  44ef90:	stp	x0, x1, [x2]
  44ef94:	ldr	x1, [sp, #48]
  44ef98:	ldr	x0, [sp, #40]
  44ef9c:	bl	44ee8c <argp_usage@@Base+0x5da0>
  44efa0:	b	44efac <argp_usage@@Base+0x5ec0>
  44efa4:	ldr	x0, [sp, #80]
  44efa8:	str	xzr, [x0]
  44efac:	ldr	x0, [sp, #56]
  44efb0:	b	44f070 <argp_usage@@Base+0x5f84>
  44efb4:	ldr	x0, [sp, #80]
  44efb8:	str	x0, [sp, #88]
  44efbc:	b	44f05c <argp_usage@@Base+0x5f70>
  44efc0:	ldr	x0, [sp, #88]
  44efc4:	ldr	x0, [x0, #8]
  44efc8:	ldr	x0, [x0]
  44efcc:	ldr	x1, [sp, #32]
  44efd0:	cmp	x1, x0
  44efd4:	b.eq	44f004 <argp_usage@@Base+0x5f18>  // b.none
  44efd8:	ldr	x0, [sp, #40]
  44efdc:	ldr	x2, [x0, #56]
  44efe0:	ldr	x0, [sp, #88]
  44efe4:	ldr	x0, [x0, #8]
  44efe8:	ldr	x0, [x0]
  44efec:	mov	x1, x0
  44eff0:	ldr	x0, [sp, #32]
  44eff4:	blr	x2
  44eff8:	and	w0, w0, #0xff
  44effc:	cmp	w0, #0x0
  44f000:	b.eq	44f050 <argp_usage@@Base+0x5f64>  // b.none
  44f004:	ldr	x0, [sp, #88]
  44f008:	ldr	x0, [x0, #8]
  44f00c:	ldr	x0, [x0]
  44f010:	str	x0, [sp, #72]
  44f014:	ldrb	w0, [sp, #23]
  44f018:	cmp	w0, #0x0
  44f01c:	b.eq	44f048 <argp_usage@@Base+0x5f5c>  // b.none
  44f020:	ldr	x0, [sp, #88]
  44f024:	ldr	x0, [x0, #8]
  44f028:	str	x0, [sp, #64]
  44f02c:	ldr	x0, [sp, #64]
  44f030:	ldr	x1, [x0, #8]
  44f034:	ldr	x0, [sp, #88]
  44f038:	str	x1, [x0, #8]
  44f03c:	ldr	x1, [sp, #64]
  44f040:	ldr	x0, [sp, #40]
  44f044:	bl	44ee8c <argp_usage@@Base+0x5da0>
  44f048:	ldr	x0, [sp, #72]
  44f04c:	b	44f070 <argp_usage@@Base+0x5f84>
  44f050:	ldr	x0, [sp, #88]
  44f054:	ldr	x0, [x0, #8]
  44f058:	str	x0, [sp, #88]
  44f05c:	ldr	x0, [sp, #88]
  44f060:	ldr	x0, [x0, #8]
  44f064:	cmp	x0, #0x0
  44f068:	b.ne	44efc0 <argp_usage@@Base+0x5ed4>  // b.any
  44f06c:	mov	x0, #0x0                   	// #0
  44f070:	ldp	x29, x30, [sp], #96
  44f074:	ret
  44f078:	stp	x29, x30, [sp, #-96]!
  44f07c:	mov	x29, sp
  44f080:	str	x0, [sp, #40]
  44f084:	str	x1, [sp, #32]
  44f088:	strb	w2, [sp, #31]
  44f08c:	ldr	x0, [sp, #32]
  44f090:	ldr	x0, [x0]
  44f094:	str	x0, [sp, #88]
  44f098:	b	44f230 <argp_usage@@Base+0x6144>
  44f09c:	ldr	x0, [sp, #88]
  44f0a0:	ldr	x0, [x0]
  44f0a4:	cmp	x0, #0x0
  44f0a8:	b.eq	44f224 <argp_usage@@Base+0x6138>  // b.none
  44f0ac:	ldr	x0, [sp, #88]
  44f0b0:	ldr	x0, [x0, #8]
  44f0b4:	str	x0, [sp, #80]
  44f0b8:	b	44f148 <argp_usage@@Base+0x605c>
  44f0bc:	ldr	x0, [sp, #80]
  44f0c0:	ldr	x0, [x0]
  44f0c4:	str	x0, [sp, #72]
  44f0c8:	ldr	x1, [sp, #72]
  44f0cc:	ldr	x0, [sp, #40]
  44f0d0:	bl	44e25c <argp_usage@@Base+0x5170>
  44f0d4:	str	x0, [sp, #64]
  44f0d8:	ldr	x0, [sp, #80]
  44f0dc:	ldr	x0, [x0, #8]
  44f0e0:	str	x0, [sp, #48]
  44f0e4:	ldr	x0, [sp, #64]
  44f0e8:	ldr	x0, [x0]
  44f0ec:	cmp	x0, #0x0
  44f0f0:	b.eq	44f114 <argp_usage@@Base+0x6028>  // b.none
  44f0f4:	ldr	x0, [sp, #64]
  44f0f8:	ldr	x1, [x0, #8]
  44f0fc:	ldr	x0, [sp, #80]
  44f100:	str	x1, [x0, #8]
  44f104:	ldr	x0, [sp, #64]
  44f108:	ldr	x1, [sp, #80]
  44f10c:	str	x1, [x0, #8]
  44f110:	b	44f140 <argp_usage@@Base+0x6054>
  44f114:	ldr	x0, [sp, #64]
  44f118:	ldr	x1, [sp, #72]
  44f11c:	str	x1, [x0]
  44f120:	ldr	x0, [sp, #40]
  44f124:	ldr	x0, [x0, #24]
  44f128:	add	x1, x0, #0x1
  44f12c:	ldr	x0, [sp, #40]
  44f130:	str	x1, [x0, #24]
  44f134:	ldr	x1, [sp, #80]
  44f138:	ldr	x0, [sp, #40]
  44f13c:	bl	44ee8c <argp_usage@@Base+0x5da0>
  44f140:	ldr	x0, [sp, #48]
  44f144:	str	x0, [sp, #80]
  44f148:	ldr	x0, [sp, #80]
  44f14c:	cmp	x0, #0x0
  44f150:	b.ne	44f0bc <argp_usage@@Base+0x5fd0>  // b.any
  44f154:	ldr	x0, [sp, #88]
  44f158:	ldr	x0, [x0]
  44f15c:	str	x0, [sp, #72]
  44f160:	ldr	x0, [sp, #88]
  44f164:	str	xzr, [x0, #8]
  44f168:	ldrb	w0, [sp, #31]
  44f16c:	cmp	w0, #0x0
  44f170:	b.ne	44f220 <argp_usage@@Base+0x6134>  // b.any
  44f174:	ldr	x1, [sp, #72]
  44f178:	ldr	x0, [sp, #40]
  44f17c:	bl	44e25c <argp_usage@@Base+0x5170>
  44f180:	str	x0, [sp, #64]
  44f184:	ldr	x0, [sp, #64]
  44f188:	ldr	x0, [x0]
  44f18c:	cmp	x0, #0x0
  44f190:	b.eq	44f1e0 <argp_usage@@Base+0x60f4>  // b.none
  44f194:	ldr	x0, [sp, #40]
  44f198:	bl	44ee38 <argp_usage@@Base+0x5d4c>
  44f19c:	str	x0, [sp, #56]
  44f1a0:	ldr	x0, [sp, #56]
  44f1a4:	cmp	x0, #0x0
  44f1a8:	b.ne	44f1b4 <argp_usage@@Base+0x60c8>  // b.any
  44f1ac:	mov	w0, #0x0                   	// #0
  44f1b0:	b	44f248 <argp_usage@@Base+0x615c>
  44f1b4:	ldr	x0, [sp, #56]
  44f1b8:	ldr	x1, [sp, #72]
  44f1bc:	str	x1, [x0]
  44f1c0:	ldr	x0, [sp, #64]
  44f1c4:	ldr	x1, [x0, #8]
  44f1c8:	ldr	x0, [sp, #56]
  44f1cc:	str	x1, [x0, #8]
  44f1d0:	ldr	x0, [sp, #64]
  44f1d4:	ldr	x1, [sp, #56]
  44f1d8:	str	x1, [x0, #8]
  44f1dc:	b	44f200 <argp_usage@@Base+0x6114>
  44f1e0:	ldr	x0, [sp, #64]
  44f1e4:	ldr	x1, [sp, #72]
  44f1e8:	str	x1, [x0]
  44f1ec:	ldr	x0, [sp, #40]
  44f1f0:	ldr	x0, [x0, #24]
  44f1f4:	add	x1, x0, #0x1
  44f1f8:	ldr	x0, [sp, #40]
  44f1fc:	str	x1, [x0, #24]
  44f200:	ldr	x0, [sp, #88]
  44f204:	str	xzr, [x0]
  44f208:	ldr	x0, [sp, #32]
  44f20c:	ldr	x0, [x0, #24]
  44f210:	sub	x1, x0, #0x1
  44f214:	ldr	x0, [sp, #32]
  44f218:	str	x1, [x0, #24]
  44f21c:	b	44f224 <argp_usage@@Base+0x6138>
  44f220:	nop
  44f224:	ldr	x0, [sp, #88]
  44f228:	add	x0, x0, #0x10
  44f22c:	str	x0, [sp, #88]
  44f230:	ldr	x0, [sp, #32]
  44f234:	ldr	x0, [x0, #8]
  44f238:	ldr	x1, [sp, #88]
  44f23c:	cmp	x1, x0
  44f240:	b.cc	44f09c <argp_usage@@Base+0x5fb0>  // b.lo, b.ul, b.last
  44f244:	mov	w0, #0x1                   	// #1
  44f248:	ldp	x29, x30, [sp], #96
  44f24c:	ret
  44f250:	stp	x29, x30, [sp, #-128]!
  44f254:	mov	x29, sp
  44f258:	str	x0, [sp, #24]
  44f25c:	str	x1, [sp, #16]
  44f260:	ldr	x0, [sp, #24]
  44f264:	ldr	x0, [x0, #40]
  44f268:	mov	x1, x0
  44f26c:	ldr	x0, [sp, #16]
  44f270:	bl	44e970 <argp_usage@@Base+0x5884>
  44f274:	str	x0, [sp, #120]
  44f278:	ldr	x0, [sp, #120]
  44f27c:	cmp	x0, #0x0
  44f280:	b.ne	44f28c <argp_usage@@Base+0x61a0>  // b.any
  44f284:	mov	w0, #0x0                   	// #0
  44f288:	b	44f454 <argp_usage@@Base+0x6368>
  44f28c:	ldr	x0, [sp, #24]
  44f290:	ldr	x0, [x0, #16]
  44f294:	ldr	x1, [sp, #120]
  44f298:	cmp	x1, x0
  44f29c:	b.ne	44f2a8 <argp_usage@@Base+0x61bc>  // b.any
  44f2a0:	mov	w0, #0x1                   	// #1
  44f2a4:	b	44f454 <argp_usage@@Base+0x6368>
  44f2a8:	add	x0, sp, #0x20
  44f2ac:	str	x0, [sp, #112]
  44f2b0:	mov	x1, #0x10                  	// #16
  44f2b4:	ldr	x0, [sp, #120]
  44f2b8:	bl	404560 <calloc@plt>
  44f2bc:	mov	x1, x0
  44f2c0:	ldr	x0, [sp, #112]
  44f2c4:	str	x1, [x0]
  44f2c8:	ldr	x0, [sp, #112]
  44f2cc:	ldr	x0, [x0]
  44f2d0:	cmp	x0, #0x0
  44f2d4:	b.ne	44f2e0 <argp_usage@@Base+0x61f4>  // b.any
  44f2d8:	mov	w0, #0x0                   	// #0
  44f2dc:	b	44f454 <argp_usage@@Base+0x6368>
  44f2e0:	ldr	x0, [sp, #112]
  44f2e4:	ldr	x1, [sp, #120]
  44f2e8:	str	x1, [x0, #16]
  44f2ec:	ldr	x0, [sp, #112]
  44f2f0:	ldr	x1, [x0]
  44f2f4:	ldr	x0, [sp, #120]
  44f2f8:	lsl	x0, x0, #4
  44f2fc:	add	x1, x1, x0
  44f300:	ldr	x0, [sp, #112]
  44f304:	str	x1, [x0, #8]
  44f308:	ldr	x0, [sp, #112]
  44f30c:	str	xzr, [x0, #24]
  44f310:	ldr	x0, [sp, #112]
  44f314:	str	xzr, [x0, #32]
  44f318:	ldr	x0, [sp, #24]
  44f31c:	ldr	x1, [x0, #40]
  44f320:	ldr	x0, [sp, #112]
  44f324:	str	x1, [x0, #40]
  44f328:	ldr	x0, [sp, #24]
  44f32c:	ldr	x1, [x0, #48]
  44f330:	ldr	x0, [sp, #112]
  44f334:	str	x1, [x0, #48]
  44f338:	ldr	x0, [sp, #24]
  44f33c:	ldr	x1, [x0, #56]
  44f340:	ldr	x0, [sp, #112]
  44f344:	str	x1, [x0, #56]
  44f348:	ldr	x0, [sp, #24]
  44f34c:	ldr	x1, [x0, #64]
  44f350:	ldr	x0, [sp, #112]
  44f354:	str	x1, [x0, #64]
  44f358:	ldr	x0, [sp, #24]
  44f35c:	ldr	x1, [x0, #72]
  44f360:	ldr	x0, [sp, #112]
  44f364:	str	x1, [x0, #72]
  44f368:	mov	w2, #0x0                   	// #0
  44f36c:	ldr	x1, [sp, #24]
  44f370:	ldr	x0, [sp, #112]
  44f374:	bl	44f078 <argp_usage@@Base+0x5f8c>
  44f378:	and	w0, w0, #0xff
  44f37c:	cmp	w0, #0x0
  44f380:	b.eq	44f3e8 <argp_usage@@Base+0x62fc>  // b.none
  44f384:	ldr	x0, [sp, #24]
  44f388:	ldr	x0, [x0]
  44f38c:	bl	404880 <free@plt>
  44f390:	ldr	x0, [sp, #112]
  44f394:	ldr	x1, [x0]
  44f398:	ldr	x0, [sp, #24]
  44f39c:	str	x1, [x0]
  44f3a0:	ldr	x0, [sp, #112]
  44f3a4:	ldr	x1, [x0, #8]
  44f3a8:	ldr	x0, [sp, #24]
  44f3ac:	str	x1, [x0, #8]
  44f3b0:	ldr	x0, [sp, #112]
  44f3b4:	ldr	x1, [x0, #16]
  44f3b8:	ldr	x0, [sp, #24]
  44f3bc:	str	x1, [x0, #16]
  44f3c0:	ldr	x0, [sp, #112]
  44f3c4:	ldr	x1, [x0, #24]
  44f3c8:	ldr	x0, [sp, #24]
  44f3cc:	str	x1, [x0, #24]
  44f3d0:	ldr	x0, [sp, #112]
  44f3d4:	ldr	x1, [x0, #72]
  44f3d8:	ldr	x0, [sp, #24]
  44f3dc:	str	x1, [x0, #72]
  44f3e0:	mov	w0, #0x1                   	// #1
  44f3e4:	b	44f454 <argp_usage@@Base+0x6368>
  44f3e8:	ldr	x0, [sp, #112]
  44f3ec:	ldr	x1, [x0, #72]
  44f3f0:	ldr	x0, [sp, #24]
  44f3f4:	str	x1, [x0, #72]
  44f3f8:	mov	w2, #0x1                   	// #1
  44f3fc:	ldr	x1, [sp, #112]
  44f400:	ldr	x0, [sp, #24]
  44f404:	bl	44f078 <argp_usage@@Base+0x5f8c>
  44f408:	and	w0, w0, #0xff
  44f40c:	eor	w0, w0, #0x1
  44f410:	and	w0, w0, #0xff
  44f414:	cmp	w0, #0x0
  44f418:	b.ne	44f440 <argp_usage@@Base+0x6354>  // b.any
  44f41c:	mov	w2, #0x0                   	// #0
  44f420:	ldr	x1, [sp, #112]
  44f424:	ldr	x0, [sp, #24]
  44f428:	bl	44f078 <argp_usage@@Base+0x5f8c>
  44f42c:	and	w0, w0, #0xff
  44f430:	eor	w0, w0, #0x1
  44f434:	and	w0, w0, #0xff
  44f438:	cmp	w0, #0x0
  44f43c:	b.eq	44f444 <argp_usage@@Base+0x6358>  // b.none
  44f440:	bl	404710 <abort@plt>
  44f444:	ldr	x0, [sp, #112]
  44f448:	ldr	x0, [x0]
  44f44c:	bl	404880 <free@plt>
  44f450:	mov	w0, #0x0                   	// #0
  44f454:	ldp	x29, x30, [sp], #128
  44f458:	ret
  44f45c:	stp	x29, x30, [sp, #-96]!
  44f460:	mov	x29, sp
  44f464:	str	x0, [sp, #40]
  44f468:	str	x1, [sp, #32]
  44f46c:	str	x2, [sp, #24]
  44f470:	ldr	x0, [sp, #32]
  44f474:	cmp	x0, #0x0
  44f478:	b.ne	44f480 <argp_usage@@Base+0x6394>  // b.any
  44f47c:	bl	404710 <abort@plt>
  44f480:	add	x0, sp, #0x38
  44f484:	mov	w3, #0x0                   	// #0
  44f488:	mov	x2, x0
  44f48c:	ldr	x1, [sp, #32]
  44f490:	ldr	x0, [sp, #40]
  44f494:	bl	44eec8 <argp_usage@@Base+0x5ddc>
  44f498:	str	x0, [sp, #88]
  44f49c:	ldr	x0, [sp, #88]
  44f4a0:	cmp	x0, #0x0
  44f4a4:	b.eq	44f4c8 <argp_usage@@Base+0x63dc>  // b.none
  44f4a8:	ldr	x0, [sp, #24]
  44f4ac:	cmp	x0, #0x0
  44f4b0:	b.eq	44f4c0 <argp_usage@@Base+0x63d4>  // b.none
  44f4b4:	ldr	x0, [sp, #24]
  44f4b8:	ldr	x1, [sp, #88]
  44f4bc:	str	x1, [x0]
  44f4c0:	mov	w0, #0x0                   	// #0
  44f4c4:	b	44f6ac <argp_usage@@Base+0x65c0>
  44f4c8:	ldr	x0, [sp, #40]
  44f4cc:	ldr	x0, [x0, #24]
  44f4d0:	ucvtf	s1, x0
  44f4d4:	ldr	x0, [sp, #40]
  44f4d8:	ldr	x0, [x0, #40]
  44f4dc:	ldr	s2, [x0, #8]
  44f4e0:	ldr	x0, [sp, #40]
  44f4e4:	ldr	x0, [x0, #16]
  44f4e8:	ucvtf	s0, x0
  44f4ec:	fmul	s0, s2, s0
  44f4f0:	fcmpe	s1, s0
  44f4f4:	b.le	44f600 <argp_usage@@Base+0x6514>
  44f4f8:	ldr	x0, [sp, #40]
  44f4fc:	bl	44e85c <argp_usage@@Base+0x5770>
  44f500:	ldr	x0, [sp, #40]
  44f504:	ldr	x0, [x0, #24]
  44f508:	ucvtf	s1, x0
  44f50c:	ldr	x0, [sp, #40]
  44f510:	ldr	x0, [x0, #40]
  44f514:	ldr	s2, [x0, #8]
  44f518:	ldr	x0, [sp, #40]
  44f51c:	ldr	x0, [x0, #16]
  44f520:	ucvtf	s0, x0
  44f524:	fmul	s0, s2, s0
  44f528:	fcmpe	s1, s0
  44f52c:	b.le	44f600 <argp_usage@@Base+0x6514>
  44f530:	ldr	x0, [sp, #40]
  44f534:	ldr	x0, [x0, #40]
  44f538:	str	x0, [sp, #80]
  44f53c:	ldr	x0, [sp, #80]
  44f540:	ldrb	w0, [x0, #16]
  44f544:	cmp	w0, #0x0
  44f548:	b.eq	44f568 <argp_usage@@Base+0x647c>  // b.none
  44f54c:	ldr	x0, [sp, #40]
  44f550:	ldr	x0, [x0, #16]
  44f554:	ucvtf	s1, x0
  44f558:	ldr	x0, [sp, #80]
  44f55c:	ldr	s0, [x0, #12]
  44f560:	fmul	s0, s1, s0
  44f564:	b	44f58c <argp_usage@@Base+0x64a0>
  44f568:	ldr	x0, [sp, #40]
  44f56c:	ldr	x0, [x0, #16]
  44f570:	ucvtf	s1, x0
  44f574:	ldr	x0, [sp, #80]
  44f578:	ldr	s0, [x0, #12]
  44f57c:	fmul	s1, s1, s0
  44f580:	ldr	x0, [sp, #80]
  44f584:	ldr	s0, [x0, #8]
  44f588:	fmul	s0, s1, s0
  44f58c:	str	s0, [sp, #76]
  44f590:	ldr	s0, [sp, #76]
  44f594:	mov	w0, #0x5f800000            	// #1602224128
  44f598:	fmov	s1, w0
  44f59c:	fcmpe	s0, s1
  44f5a0:	b.lt	44f5ac <argp_usage@@Base+0x64c0>  // b.tstop
  44f5a4:	mov	w0, #0xffffffff            	// #-1
  44f5a8:	b	44f6ac <argp_usage@@Base+0x65c0>
  44f5ac:	ldr	s0, [sp, #76]
  44f5b0:	fcvtzu	x0, s0
  44f5b4:	mov	x1, x0
  44f5b8:	ldr	x0, [sp, #40]
  44f5bc:	bl	44f250 <argp_usage@@Base+0x6164>
  44f5c0:	and	w0, w0, #0xff
  44f5c4:	eor	w0, w0, #0x1
  44f5c8:	and	w0, w0, #0xff
  44f5cc:	cmp	w0, #0x0
  44f5d0:	b.eq	44f5dc <argp_usage@@Base+0x64f0>  // b.none
  44f5d4:	mov	w0, #0xffffffff            	// #-1
  44f5d8:	b	44f6ac <argp_usage@@Base+0x65c0>
  44f5dc:	add	x0, sp, #0x38
  44f5e0:	mov	w3, #0x0                   	// #0
  44f5e4:	mov	x2, x0
  44f5e8:	ldr	x1, [sp, #32]
  44f5ec:	ldr	x0, [sp, #40]
  44f5f0:	bl	44eec8 <argp_usage@@Base+0x5ddc>
  44f5f4:	cmp	x0, #0x0
  44f5f8:	b.eq	44f600 <argp_usage@@Base+0x6514>  // b.none
  44f5fc:	bl	404710 <abort@plt>
  44f600:	ldr	x0, [sp, #56]
  44f604:	ldr	x0, [x0]
  44f608:	cmp	x0, #0x0
  44f60c:	b.eq	44f674 <argp_usage@@Base+0x6588>  // b.none
  44f610:	ldr	x0, [sp, #40]
  44f614:	bl	44ee38 <argp_usage@@Base+0x5d4c>
  44f618:	str	x0, [sp, #64]
  44f61c:	ldr	x0, [sp, #64]
  44f620:	cmp	x0, #0x0
  44f624:	b.ne	44f630 <argp_usage@@Base+0x6544>  // b.any
  44f628:	mov	w0, #0xffffffff            	// #-1
  44f62c:	b	44f6ac <argp_usage@@Base+0x65c0>
  44f630:	ldr	x0, [sp, #64]
  44f634:	ldr	x1, [sp, #32]
  44f638:	str	x1, [x0]
  44f63c:	ldr	x0, [sp, #56]
  44f640:	ldr	x1, [x0, #8]
  44f644:	ldr	x0, [sp, #64]
  44f648:	str	x1, [x0, #8]
  44f64c:	ldr	x0, [sp, #56]
  44f650:	ldr	x1, [sp, #64]
  44f654:	str	x1, [x0, #8]
  44f658:	ldr	x0, [sp, #40]
  44f65c:	ldr	x0, [x0, #32]
  44f660:	add	x1, x0, #0x1
  44f664:	ldr	x0, [sp, #40]
  44f668:	str	x1, [x0, #32]
  44f66c:	mov	w0, #0x1                   	// #1
  44f670:	b	44f6ac <argp_usage@@Base+0x65c0>
  44f674:	ldr	x0, [sp, #56]
  44f678:	ldr	x1, [sp, #32]
  44f67c:	str	x1, [x0]
  44f680:	ldr	x0, [sp, #40]
  44f684:	ldr	x0, [x0, #32]
  44f688:	add	x1, x0, #0x1
  44f68c:	ldr	x0, [sp, #40]
  44f690:	str	x1, [x0, #32]
  44f694:	ldr	x0, [sp, #40]
  44f698:	ldr	x0, [x0, #24]
  44f69c:	add	x1, x0, #0x1
  44f6a0:	ldr	x0, [sp, #40]
  44f6a4:	str	x1, [x0, #24]
  44f6a8:	mov	w0, #0x1                   	// #1
  44f6ac:	ldp	x29, x30, [sp], #96
  44f6b0:	ret
  44f6b4:	stp	x29, x30, [sp, #-48]!
  44f6b8:	mov	x29, sp
  44f6bc:	str	x0, [sp, #24]
  44f6c0:	str	x1, [sp, #16]
  44f6c4:	add	x0, sp, #0x20
  44f6c8:	mov	x2, x0
  44f6cc:	ldr	x1, [sp, #16]
  44f6d0:	ldr	x0, [sp, #24]
  44f6d4:	bl	44f45c <argp_usage@@Base+0x6370>
  44f6d8:	str	w0, [sp, #44]
  44f6dc:	ldr	w0, [sp, #44]
  44f6e0:	cmn	w0, #0x1
  44f6e4:	b.eq	44f704 <argp_usage@@Base+0x6618>  // b.none
  44f6e8:	ldr	w0, [sp, #44]
  44f6ec:	cmp	w0, #0x0
  44f6f0:	b.ne	44f6fc <argp_usage@@Base+0x6610>  // b.any
  44f6f4:	ldr	x0, [sp, #32]
  44f6f8:	b	44f708 <argp_usage@@Base+0x661c>
  44f6fc:	ldr	x0, [sp, #16]
  44f700:	b	44f708 <argp_usage@@Base+0x661c>
  44f704:	mov	x0, #0x0                   	// #0
  44f708:	ldp	x29, x30, [sp], #48
  44f70c:	ret
  44f710:	stp	x29, x30, [sp, #-80]!
  44f714:	mov	x29, sp
  44f718:	str	x0, [sp, #24]
  44f71c:	str	x1, [sp, #16]
  44f720:	add	x0, sp, #0x20
  44f724:	mov	w3, #0x1                   	// #1
  44f728:	mov	x2, x0
  44f72c:	ldr	x1, [sp, #16]
  44f730:	ldr	x0, [sp, #24]
  44f734:	bl	44eec8 <argp_usage@@Base+0x5ddc>
  44f738:	str	x0, [sp, #64]
  44f73c:	ldr	x0, [sp, #64]
  44f740:	cmp	x0, #0x0
  44f744:	b.ne	44f750 <argp_usage@@Base+0x6664>  // b.any
  44f748:	mov	x0, #0x0                   	// #0
  44f74c:	b	44f8bc <argp_usage@@Base+0x67d0>
  44f750:	ldr	x0, [sp, #24]
  44f754:	ldr	x0, [x0, #32]
  44f758:	sub	x1, x0, #0x1
  44f75c:	ldr	x0, [sp, #24]
  44f760:	str	x1, [x0, #32]
  44f764:	ldr	x0, [sp, #32]
  44f768:	ldr	x0, [x0]
  44f76c:	cmp	x0, #0x0
  44f770:	b.ne	44f8b8 <argp_usage@@Base+0x67cc>  // b.any
  44f774:	ldr	x0, [sp, #24]
  44f778:	ldr	x0, [x0, #24]
  44f77c:	sub	x1, x0, #0x1
  44f780:	ldr	x0, [sp, #24]
  44f784:	str	x1, [x0, #24]
  44f788:	ldr	x0, [sp, #24]
  44f78c:	ldr	x0, [x0, #24]
  44f790:	ucvtf	s1, x0
  44f794:	ldr	x0, [sp, #24]
  44f798:	ldr	x0, [x0, #40]
  44f79c:	ldr	s2, [x0]
  44f7a0:	ldr	x0, [sp, #24]
  44f7a4:	ldr	x0, [x0, #16]
  44f7a8:	ucvtf	s0, x0
  44f7ac:	fmul	s0, s2, s0
  44f7b0:	fcmpe	s1, s0
  44f7b4:	b.pl	44f8b8 <argp_usage@@Base+0x67cc>  // b.nfrst
  44f7b8:	ldr	x0, [sp, #24]
  44f7bc:	bl	44e85c <argp_usage@@Base+0x5770>
  44f7c0:	ldr	x0, [sp, #24]
  44f7c4:	ldr	x0, [x0, #24]
  44f7c8:	ucvtf	s1, x0
  44f7cc:	ldr	x0, [sp, #24]
  44f7d0:	ldr	x0, [x0, #40]
  44f7d4:	ldr	s2, [x0]
  44f7d8:	ldr	x0, [sp, #24]
  44f7dc:	ldr	x0, [x0, #16]
  44f7e0:	ucvtf	s0, x0
  44f7e4:	fmul	s0, s2, s0
  44f7e8:	fcmpe	s1, s0
  44f7ec:	b.pl	44f8b8 <argp_usage@@Base+0x67cc>  // b.nfrst
  44f7f0:	ldr	x0, [sp, #24]
  44f7f4:	ldr	x0, [x0, #40]
  44f7f8:	str	x0, [sp, #56]
  44f7fc:	ldr	x0, [sp, #56]
  44f800:	ldrb	w0, [x0, #16]
  44f804:	cmp	w0, #0x0
  44f808:	b.eq	44f82c <argp_usage@@Base+0x6740>  // b.none
  44f80c:	ldr	x0, [sp, #24]
  44f810:	ldr	x0, [x0, #16]
  44f814:	ucvtf	s1, x0
  44f818:	ldr	x0, [sp, #56]
  44f81c:	ldr	s0, [x0, #4]
  44f820:	fmul	s0, s1, s0
  44f824:	fcvtzu	x0, s0
  44f828:	b	44f854 <argp_usage@@Base+0x6768>
  44f82c:	ldr	x0, [sp, #24]
  44f830:	ldr	x0, [x0, #16]
  44f834:	ucvtf	s1, x0
  44f838:	ldr	x0, [sp, #56]
  44f83c:	ldr	s0, [x0, #4]
  44f840:	fmul	s1, s1, s0
  44f844:	ldr	x0, [sp, #56]
  44f848:	ldr	s0, [x0, #8]
  44f84c:	fmul	s0, s1, s0
  44f850:	fcvtzu	x0, s0
  44f854:	str	x0, [sp, #48]
  44f858:	ldr	x1, [sp, #48]
  44f85c:	ldr	x0, [sp, #24]
  44f860:	bl	44f250 <argp_usage@@Base+0x6164>
  44f864:	and	w0, w0, #0xff
  44f868:	eor	w0, w0, #0x1
  44f86c:	and	w0, w0, #0xff
  44f870:	cmp	w0, #0x0
  44f874:	b.eq	44f8b8 <argp_usage@@Base+0x67cc>  // b.none
  44f878:	ldr	x0, [sp, #24]
  44f87c:	ldr	x0, [x0, #72]
  44f880:	str	x0, [sp, #72]
  44f884:	b	44f8a4 <argp_usage@@Base+0x67b8>
  44f888:	ldr	x0, [sp, #72]
  44f88c:	ldr	x0, [x0, #8]
  44f890:	str	x0, [sp, #40]
  44f894:	ldr	x0, [sp, #72]
  44f898:	bl	404880 <free@plt>
  44f89c:	ldr	x0, [sp, #40]
  44f8a0:	str	x0, [sp, #72]
  44f8a4:	ldr	x0, [sp, #72]
  44f8a8:	cmp	x0, #0x0
  44f8ac:	b.ne	44f888 <argp_usage@@Base+0x679c>  // b.any
  44f8b0:	ldr	x0, [sp, #24]
  44f8b4:	str	xzr, [x0, #72]
  44f8b8:	ldr	x0, [sp, #64]
  44f8bc:	ldp	x29, x30, [sp], #80
  44f8c0:	ret
  44f8c4:	stp	x29, x30, [sp, #-64]!
  44f8c8:	mov	x29, sp
  44f8cc:	str	w0, [sp, #44]
  44f8d0:	str	q0, [sp, #16]
  44f8d4:	ldr	w0, [sp, #44]
  44f8d8:	cmp	w0, #0x1
  44f8dc:	b.eq	44f950 <argp_usage@@Base+0x6864>  // b.none
  44f8e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44f8e4:	add	x0, x0, #0x890
  44f8e8:	ldr	q1, [x0]
  44f8ec:	ldr	q0, [sp, #16]
  44f8f0:	bl	47ccf8 <_obstack_memory_used@@Base+0x1fbb8>
  44f8f4:	cmp	w0, #0x0
  44f8f8:	b.ge	44f950 <argp_usage@@Base+0x6864>  // b.tcont
  44f8fc:	ldr	q0, [sp, #16]
  44f900:	bl	47e6d8 <_obstack_memory_used@@Base+0x21598>
  44f904:	str	x0, [sp, #56]
  44f908:	ldr	w0, [sp, #44]
  44f90c:	cmp	w0, #0x0
  44f910:	b.ne	44f938 <argp_usage@@Base+0x684c>  // b.any
  44f914:	ldr	x0, [sp, #56]
  44f918:	bl	47e970 <_obstack_memory_used@@Base+0x21830>
  44f91c:	mov	v1.16b, v0.16b
  44f920:	ldr	q0, [sp, #16]
  44f924:	bl	47c78c <_obstack_memory_used@@Base+0x1f64c>
  44f928:	cmp	w0, #0x0
  44f92c:	b.eq	44f938 <argp_usage@@Base+0x684c>  // b.none
  44f930:	mov	w0, #0x1                   	// #1
  44f934:	b	44f93c <argp_usage@@Base+0x6850>
  44f938:	mov	w0, #0x0                   	// #0
  44f93c:	sxtw	x1, w0
  44f940:	ldr	x0, [sp, #56]
  44f944:	add	x0, x1, x0
  44f948:	bl	47e970 <_obstack_memory_used@@Base+0x21830>
  44f94c:	str	q0, [sp, #16]
  44f950:	ldr	q0, [sp, #16]
  44f954:	ldp	x29, x30, [sp], #64
  44f958:	ret
  44f95c:	stp	x29, x30, [sp, #-144]!
  44f960:	mov	x29, sp
  44f964:	str	x19, [sp, #16]
  44f968:	str	x0, [sp, #56]
  44f96c:	str	x1, [sp, #48]
  44f970:	str	x2, [sp, #40]
  44f974:	str	x3, [sp, #32]
  44f978:	mov	x0, #0xffffffffffffffff    	// #-1
  44f97c:	str	x0, [sp, #136]
  44f980:	ldr	x0, [sp, #32]
  44f984:	bl	4040b0 <strlen@plt>
  44f988:	str	x0, [sp, #120]
  44f98c:	ldr	x0, [sp, #48]
  44f990:	str	x0, [sp, #128]
  44f994:	add	x0, sp, #0x48
  44f998:	ldr	x2, [sp, #48]
  44f99c:	ldr	x1, [sp, #56]
  44f9a0:	bl	404020 <memcpy@plt>
  44f9a4:	ldr	x1, [sp, #56]
  44f9a8:	ldr	x0, [sp, #48]
  44f9ac:	add	x19, x1, x0
  44f9b0:	ldr	x0, [sp, #40]
  44f9b4:	ldrb	w0, [x0]
  44f9b8:	strb	w0, [sp, #119]
  44f9bc:	ldrb	w0, [sp, #119]
  44f9c0:	cmp	w0, #0x0
  44f9c4:	b.eq	44f9f0 <argp_usage@@Base+0x6904>  // b.none
  44f9c8:	ldrb	w0, [sp, #119]
  44f9cc:	cmp	w0, #0xff
  44f9d0:	b.eq	44f9dc <argp_usage@@Base+0x68f0>  // b.none
  44f9d4:	ldrb	w0, [sp, #119]
  44f9d8:	b	44f9e0 <argp_usage@@Base+0x68f4>
  44f9dc:	ldr	x0, [sp, #128]
  44f9e0:	str	x0, [sp, #136]
  44f9e4:	ldr	x0, [sp, #40]
  44f9e8:	add	x0, x0, #0x1
  44f9ec:	str	x0, [sp, #40]
  44f9f0:	ldr	x1, [sp, #128]
  44f9f4:	ldr	x0, [sp, #136]
  44f9f8:	cmp	x1, x0
  44f9fc:	b.cs	44fa08 <argp_usage@@Base+0x691c>  // b.hs, b.nlast
  44fa00:	ldr	x0, [sp, #128]
  44fa04:	str	x0, [sp, #136]
  44fa08:	ldr	x0, [sp, #136]
  44fa0c:	neg	x0, x0
  44fa10:	add	x19, x19, x0
  44fa14:	ldr	x1, [sp, #128]
  44fa18:	ldr	x0, [sp, #136]
  44fa1c:	sub	x0, x1, x0
  44fa20:	str	x0, [sp, #128]
  44fa24:	add	x1, sp, #0x48
  44fa28:	ldr	x0, [sp, #128]
  44fa2c:	add	x0, x1, x0
  44fa30:	ldr	x2, [sp, #136]
  44fa34:	mov	x1, x0
  44fa38:	mov	x0, x19
  44fa3c:	bl	404020 <memcpy@plt>
  44fa40:	ldr	x0, [sp, #128]
  44fa44:	cmp	x0, #0x0
  44fa48:	b.ne	44fa54 <argp_usage@@Base+0x6968>  // b.any
  44fa4c:	mov	x0, x19
  44fa50:	b	44fa74 <argp_usage@@Base+0x6988>
  44fa54:	ldr	x0, [sp, #120]
  44fa58:	neg	x0, x0
  44fa5c:	add	x19, x19, x0
  44fa60:	ldr	x2, [sp, #120]
  44fa64:	ldr	x1, [sp, #32]
  44fa68:	mov	x0, x19
  44fa6c:	bl	404020 <memcpy@plt>
  44fa70:	b	44f9b0 <argp_usage@@Base+0x68c4>
  44fa74:	ldr	x19, [sp, #16]
  44fa78:	ldp	x29, x30, [sp], #144
  44fa7c:	ret
  44fa80:	stp	x29, x30, [sp, #-320]!
  44fa84:	mov	x29, sp
  44fa88:	str	x0, [sp, #72]
  44fa8c:	str	x1, [sp, #64]
  44fa90:	str	w2, [sp, #60]
  44fa94:	str	x3, [sp, #48]
  44fa98:	str	x4, [sp, #40]
  44fa9c:	ldr	w0, [sp, #60]
  44faa0:	and	w0, w0, #0x3
  44faa4:	str	w0, [sp, #196]
  44faa8:	ldr	w0, [sp, #60]
  44faac:	and	w0, w0, #0x20
  44fab0:	cmp	w0, #0x0
  44fab4:	b.eq	44fac0 <argp_usage@@Base+0x69d4>  // b.none
  44fab8:	mov	w0, #0x400                 	// #1024
  44fabc:	b	44fac4 <argp_usage@@Base+0x69d8>
  44fac0:	mov	w0, #0x3e8                 	// #1000
  44fac4:	str	w0, [sp, #192]
  44fac8:	mov	w0, #0xffffffff            	// #-1
  44facc:	str	w0, [sp, #304]
  44fad0:	mov	w0, #0x8                   	// #8
  44fad4:	str	w0, [sp, #188]
  44fad8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fadc:	add	x0, x0, #0x7f0
  44fae0:	str	x0, [sp, #264]
  44fae4:	mov	x0, #0x1                   	// #1
  44fae8:	str	x0, [sp, #256]
  44faec:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44faf0:	add	x0, x0, #0x7f8
  44faf4:	str	x0, [sp, #176]
  44faf8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fafc:	add	x0, x0, #0x7f8
  44fb00:	str	x0, [sp, #248]
  44fb04:	bl	404300 <localeconv@plt>
  44fb08:	str	x0, [sp, #168]
  44fb0c:	ldr	x0, [sp, #168]
  44fb10:	ldr	x0, [x0]
  44fb14:	bl	4040b0 <strlen@plt>
  44fb18:	str	x0, [sp, #160]
  44fb1c:	ldr	x0, [sp, #160]
  44fb20:	cmp	x0, #0x0
  44fb24:	b.eq	44fb48 <argp_usage@@Base+0x6a5c>  // b.none
  44fb28:	ldr	x0, [sp, #160]
  44fb2c:	cmp	x0, #0x10
  44fb30:	b.hi	44fb48 <argp_usage@@Base+0x6a5c>  // b.pmore
  44fb34:	ldr	x0, [sp, #168]
  44fb38:	ldr	x0, [x0]
  44fb3c:	str	x0, [sp, #264]
  44fb40:	ldr	x0, [sp, #160]
  44fb44:	str	x0, [sp, #256]
  44fb48:	ldr	x0, [sp, #168]
  44fb4c:	ldr	x0, [x0, #16]
  44fb50:	str	x0, [sp, #176]
  44fb54:	ldr	x0, [sp, #168]
  44fb58:	ldr	x0, [x0, #8]
  44fb5c:	bl	4040b0 <strlen@plt>
  44fb60:	cmp	x0, #0x10
  44fb64:	b.hi	44fb74 <argp_usage@@Base+0x6a88>  // b.pmore
  44fb68:	ldr	x0, [sp, #168]
  44fb6c:	ldr	x0, [x0, #8]
  44fb70:	str	x0, [sp, #248]
  44fb74:	ldr	x0, [sp, #64]
  44fb78:	add	x0, x0, #0x287
  44fb7c:	str	x0, [sp, #288]
  44fb80:	ldr	x0, [sp, #288]
  44fb84:	str	x0, [sp, #296]
  44fb88:	ldr	x1, [sp, #40]
  44fb8c:	ldr	x0, [sp, #48]
  44fb90:	cmp	x1, x0
  44fb94:	b.hi	44fbfc <argp_usage@@Base+0x6b10>  // b.pmore
  44fb98:	ldr	x0, [sp, #48]
  44fb9c:	ldr	x1, [sp, #40]
  44fba0:	udiv	x2, x0, x1
  44fba4:	ldr	x1, [sp, #40]
  44fba8:	mul	x1, x2, x1
  44fbac:	sub	x0, x0, x1
  44fbb0:	cmp	x0, #0x0
  44fbb4:	b.ne	44fcec <argp_usage@@Base+0x6c00>  // b.any
  44fbb8:	ldr	x1, [sp, #48]
  44fbbc:	ldr	x0, [sp, #40]
  44fbc0:	udiv	x0, x1, x0
  44fbc4:	str	x0, [sp, #128]
  44fbc8:	ldr	x1, [sp, #72]
  44fbcc:	ldr	x0, [sp, #128]
  44fbd0:	mul	x0, x1, x0
  44fbd4:	str	x0, [sp, #312]
  44fbd8:	ldr	x1, [sp, #312]
  44fbdc:	ldr	x0, [sp, #128]
  44fbe0:	udiv	x0, x1, x0
  44fbe4:	ldr	x1, [sp, #72]
  44fbe8:	cmp	x1, x0
  44fbec:	b.ne	44fcec <argp_usage@@Base+0x6c00>  // b.any
  44fbf0:	str	wzr, [sp, #308]
  44fbf4:	str	wzr, [sp, #276]
  44fbf8:	b	44fefc <argp_usage@@Base+0x6e10>
  44fbfc:	ldr	x0, [sp, #48]
  44fc00:	cmp	x0, #0x0
  44fc04:	b.eq	44fcec <argp_usage@@Base+0x6c00>  // b.none
  44fc08:	ldr	x0, [sp, #40]
  44fc0c:	ldr	x1, [sp, #48]
  44fc10:	udiv	x2, x0, x1
  44fc14:	ldr	x1, [sp, #48]
  44fc18:	mul	x1, x2, x1
  44fc1c:	sub	x0, x0, x1
  44fc20:	cmp	x0, #0x0
  44fc24:	b.ne	44fcec <argp_usage@@Base+0x6c00>  // b.any
  44fc28:	ldr	x1, [sp, #40]
  44fc2c:	ldr	x0, [sp, #48]
  44fc30:	udiv	x0, x1, x0
  44fc34:	str	x0, [sp, #152]
  44fc38:	ldr	x0, [sp, #72]
  44fc3c:	ldr	x1, [sp, #152]
  44fc40:	udiv	x2, x0, x1
  44fc44:	ldr	x1, [sp, #152]
  44fc48:	mul	x1, x2, x1
  44fc4c:	sub	x1, x0, x1
  44fc50:	mov	x0, x1
  44fc54:	lsl	x0, x0, #2
  44fc58:	add	x0, x0, x1
  44fc5c:	lsl	x0, x0, #1
  44fc60:	str	x0, [sp, #144]
  44fc64:	ldr	x0, [sp, #144]
  44fc68:	ldr	x1, [sp, #152]
  44fc6c:	udiv	x2, x0, x1
  44fc70:	ldr	x1, [sp, #152]
  44fc74:	mul	x1, x2, x1
  44fc78:	sub	x0, x0, x1
  44fc7c:	lsl	x0, x0, #1
  44fc80:	str	x0, [sp, #136]
  44fc84:	ldr	x1, [sp, #72]
  44fc88:	ldr	x0, [sp, #152]
  44fc8c:	udiv	x0, x1, x0
  44fc90:	str	x0, [sp, #312]
  44fc94:	ldr	x1, [sp, #144]
  44fc98:	ldr	x0, [sp, #152]
  44fc9c:	udiv	x0, x1, x0
  44fca0:	str	w0, [sp, #308]
  44fca4:	ldr	x1, [sp, #136]
  44fca8:	ldr	x0, [sp, #152]
  44fcac:	cmp	x1, x0
  44fcb0:	b.cs	44fcc8 <argp_usage@@Base+0x6bdc>  // b.hs, b.nlast
  44fcb4:	ldr	x0, [sp, #136]
  44fcb8:	cmp	x0, #0x0
  44fcbc:	cset	w0, ne  // ne = any
  44fcc0:	and	w0, w0, #0xff
  44fcc4:	b	44fce4 <argp_usage@@Base+0x6bf8>
  44fcc8:	ldr	x1, [sp, #152]
  44fccc:	ldr	x0, [sp, #136]
  44fcd0:	cmp	x1, x0
  44fcd4:	b.cs	44fce0 <argp_usage@@Base+0x6bf4>  // b.hs, b.nlast
  44fcd8:	mov	w0, #0x3                   	// #3
  44fcdc:	b	44fce4 <argp_usage@@Base+0x6bf8>
  44fce0:	mov	w0, #0x2                   	// #2
  44fce4:	str	w0, [sp, #276]
  44fce8:	b	44fefc <argp_usage@@Base+0x6e10>
  44fcec:	ldr	x0, [sp, #40]
  44fcf0:	bl	47e970 <_obstack_memory_used@@Base+0x21830>
  44fcf4:	str	q0, [sp, #112]
  44fcf8:	ldr	x0, [sp, #72]
  44fcfc:	bl	47e970 <_obstack_memory_used@@Base+0x21830>
  44fd00:	str	q0, [sp, #16]
  44fd04:	ldr	x0, [sp, #48]
  44fd08:	bl	47e970 <_obstack_memory_used@@Base+0x21830>
  44fd0c:	ldr	q1, [sp, #112]
  44fd10:	bl	47b08c <_obstack_memory_used@@Base+0x1df4c>
  44fd14:	mov	v1.16b, v0.16b
  44fd18:	ldr	q0, [sp, #16]
  44fd1c:	bl	47d02c <_obstack_memory_used@@Base+0x1feec>
  44fd20:	str	q0, [sp, #96]
  44fd24:	ldr	w0, [sp, #60]
  44fd28:	and	w0, w0, #0x10
  44fd2c:	cmp	w0, #0x0
  44fd30:	b.ne	44fd64 <argp_usage@@Base+0x6c78>  // b.any
  44fd34:	ldr	q0, [sp, #96]
  44fd38:	ldr	w0, [sp, #196]
  44fd3c:	bl	44f8c4 <argp_usage@@Base+0x67d8>
  44fd40:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fd44:	add	x1, x0, #0x800
  44fd48:	ldr	x0, [sp, #64]
  44fd4c:	bl	4041f0 <sprintf@plt>
  44fd50:	ldr	x0, [sp, #64]
  44fd54:	bl	4040b0 <strlen@plt>
  44fd58:	str	x0, [sp, #240]
  44fd5c:	str	xzr, [sp, #232]
  44fd60:	b	44febc <argp_usage@@Base+0x6dd0>
  44fd64:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fd68:	add	x0, x0, #0x8a0
  44fd6c:	ldr	q0, [x0]
  44fd70:	str	q0, [sp, #208]
  44fd74:	str	wzr, [sp, #304]
  44fd78:	ldr	w0, [sp, #192]
  44fd7c:	bl	47e560 <_obstack_memory_used@@Base+0x21420>
  44fd80:	mov	v1.16b, v0.16b
  44fd84:	ldr	q0, [sp, #208]
  44fd88:	bl	47d02c <_obstack_memory_used@@Base+0x1feec>
  44fd8c:	str	q0, [sp, #208]
  44fd90:	ldr	w0, [sp, #304]
  44fd94:	add	w0, w0, #0x1
  44fd98:	str	w0, [sp, #304]
  44fd9c:	ldr	w0, [sp, #192]
  44fda0:	bl	47e560 <_obstack_memory_used@@Base+0x21420>
  44fda4:	ldr	q1, [sp, #208]
  44fda8:	bl	47d02c <_obstack_memory_used@@Base+0x1feec>
  44fdac:	mov	v1.16b, v0.16b
  44fdb0:	ldr	q0, [sp, #96]
  44fdb4:	bl	47c9c4 <_obstack_memory_used@@Base+0x1f884>
  44fdb8:	cmp	w0, #0x0
  44fdbc:	b.lt	44fdd0 <argp_usage@@Base+0x6ce4>  // b.tstop
  44fdc0:	ldr	w1, [sp, #304]
  44fdc4:	ldr	w0, [sp, #188]
  44fdc8:	cmp	w1, w0
  44fdcc:	b.lt	44fd78 <argp_usage@@Base+0x6c8c>  // b.tstop
  44fdd0:	ldr	q1, [sp, #208]
  44fdd4:	ldr	q0, [sp, #96]
  44fdd8:	bl	47b08c <_obstack_memory_used@@Base+0x1df4c>
  44fddc:	str	q0, [sp, #96]
  44fde0:	ldr	q0, [sp, #96]
  44fde4:	ldr	w0, [sp, #196]
  44fde8:	bl	44f8c4 <argp_usage@@Base+0x67d8>
  44fdec:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fdf0:	add	x1, x0, #0x808
  44fdf4:	ldr	x0, [sp, #64]
  44fdf8:	bl	4041f0 <sprintf@plt>
  44fdfc:	ldr	x0, [sp, #64]
  44fe00:	bl	4040b0 <strlen@plt>
  44fe04:	str	x0, [sp, #240]
  44fe08:	ldr	x0, [sp, #256]
  44fe0c:	add	x0, x0, #0x1
  44fe10:	str	x0, [sp, #232]
  44fe14:	ldr	w0, [sp, #60]
  44fe18:	and	w0, w0, #0x20
  44fe1c:	cmp	w0, #0x0
  44fe20:	cset	w0, eq  // eq = none
  44fe24:	and	w0, w0, #0xff
  44fe28:	and	x1, x0, #0xff
  44fe2c:	ldr	x0, [sp, #232]
  44fe30:	add	x0, x1, x0
  44fe34:	add	x0, x0, #0x1
  44fe38:	ldr	x1, [sp, #240]
  44fe3c:	cmp	x1, x0
  44fe40:	b.hi	44fe70 <argp_usage@@Base+0x6d84>  // b.pmore
  44fe44:	ldr	w0, [sp, #60]
  44fe48:	and	w0, w0, #0x8
  44fe4c:	cmp	w0, #0x0
  44fe50:	b.eq	44febc <argp_usage@@Base+0x6dd0>  // b.none
  44fe54:	ldr	x0, [sp, #240]
  44fe58:	sub	x0, x0, #0x1
  44fe5c:	ldr	x1, [sp, #64]
  44fe60:	add	x0, x1, x0
  44fe64:	ldrb	w0, [x0]
  44fe68:	cmp	w0, #0x30
  44fe6c:	b.ne	44febc <argp_usage@@Base+0x6dd0>  // b.any
  44fe70:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fe74:	add	x0, x0, #0x8b0
  44fe78:	ldr	q1, [x0]
  44fe7c:	ldr	q0, [sp, #96]
  44fe80:	bl	47d02c <_obstack_memory_used@@Base+0x1feec>
  44fe84:	ldr	w0, [sp, #196]
  44fe88:	bl	44f8c4 <argp_usage@@Base+0x67d8>
  44fe8c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fe90:	add	x0, x0, #0x8b0
  44fe94:	ldr	q1, [x0]
  44fe98:	bl	47b08c <_obstack_memory_used@@Base+0x1df4c>
  44fe9c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  44fea0:	add	x1, x0, #0x800
  44fea4:	ldr	x0, [sp, #64]
  44fea8:	bl	4041f0 <sprintf@plt>
  44feac:	ldr	x0, [sp, #64]
  44feb0:	bl	4040b0 <strlen@plt>
  44feb4:	str	x0, [sp, #240]
  44feb8:	str	xzr, [sp, #232]
  44febc:	ldr	x0, [sp, #240]
  44fec0:	neg	x0, x0
  44fec4:	ldr	x1, [sp, #288]
  44fec8:	add	x0, x1, x0
  44fecc:	str	x0, [sp, #296]
  44fed0:	ldr	x2, [sp, #240]
  44fed4:	ldr	x1, [sp, #64]
  44fed8:	ldr	x0, [sp, #296]
  44fedc:	bl	404030 <memmove@plt>
  44fee0:	ldr	x1, [sp, #240]
  44fee4:	ldr	x0, [sp, #232]
  44fee8:	sub	x0, x1, x0
  44feec:	ldr	x1, [sp, #296]
  44fef0:	add	x0, x1, x0
  44fef4:	str	x0, [sp, #280]
  44fef8:	b	4502d8 <argp_usage@@Base+0x71ec>
  44fefc:	ldr	w0, [sp, #60]
  44ff00:	and	w0, w0, #0x10
  44ff04:	cmp	w0, #0x0
  44ff08:	b.eq	450138 <argp_usage@@Base+0x704c>  // b.none
  44ff0c:	str	wzr, [sp, #304]
  44ff10:	ldr	w0, [sp, #192]
  44ff14:	ldr	x1, [sp, #312]
  44ff18:	cmp	x1, x0
  44ff1c:	b.cc	450138 <argp_usage@@Base+0x704c>  // b.lo, b.ul, b.last
  44ff20:	ldr	w1, [sp, #192]
  44ff24:	ldr	x0, [sp, #312]
  44ff28:	udiv	x2, x0, x1
  44ff2c:	mul	x1, x2, x1
  44ff30:	sub	x0, x0, x1
  44ff34:	mov	w1, w0
  44ff38:	mov	w0, w1
  44ff3c:	lsl	w0, w0, #2
  44ff40:	add	w0, w0, w1
  44ff44:	lsl	w0, w0, #1
  44ff48:	mov	w1, w0
  44ff4c:	ldr	w0, [sp, #308]
  44ff50:	add	w0, w1, w0
  44ff54:	str	w0, [sp, #92]
  44ff58:	ldr	w0, [sp, #92]
  44ff5c:	ldr	w1, [sp, #192]
  44ff60:	udiv	w2, w0, w1
  44ff64:	ldr	w1, [sp, #192]
  44ff68:	mul	w1, w2, w1
  44ff6c:	sub	w0, w0, w1
  44ff70:	lsl	w0, w0, #1
  44ff74:	ldr	w1, [sp, #276]
  44ff78:	asr	w1, w1, #1
  44ff7c:	add	w0, w0, w1
  44ff80:	str	w0, [sp, #88]
  44ff84:	ldr	w0, [sp, #192]
  44ff88:	ldr	x1, [sp, #312]
  44ff8c:	udiv	x0, x1, x0
  44ff90:	str	x0, [sp, #312]
  44ff94:	ldr	w1, [sp, #92]
  44ff98:	ldr	w0, [sp, #192]
  44ff9c:	udiv	w0, w1, w0
  44ffa0:	str	w0, [sp, #308]
  44ffa4:	ldr	w1, [sp, #88]
  44ffa8:	ldr	w0, [sp, #192]
  44ffac:	cmp	w1, w0
  44ffb0:	b.cs	44ffd0 <argp_usage@@Base+0x6ee4>  // b.hs, b.nlast
  44ffb4:	ldr	w1, [sp, #276]
  44ffb8:	ldr	w0, [sp, #88]
  44ffbc:	add	w0, w1, w0
  44ffc0:	cmp	w0, #0x0
  44ffc4:	cset	w0, ne  // ne = any
  44ffc8:	and	w0, w0, #0xff
  44ffcc:	b	44fff4 <argp_usage@@Base+0x6f08>
  44ffd0:	ldr	w1, [sp, #276]
  44ffd4:	ldr	w0, [sp, #88]
  44ffd8:	add	w0, w1, w0
  44ffdc:	ldr	w1, [sp, #192]
  44ffe0:	cmp	w1, w0
  44ffe4:	b.cs	44fff0 <argp_usage@@Base+0x6f04>  // b.hs, b.nlast
  44ffe8:	mov	w0, #0x3                   	// #3
  44ffec:	b	44fff4 <argp_usage@@Base+0x6f08>
  44fff0:	mov	w0, #0x2                   	// #2
  44fff4:	str	w0, [sp, #276]
  44fff8:	ldr	w0, [sp, #304]
  44fffc:	add	w0, w0, #0x1
  450000:	str	w0, [sp, #304]
  450004:	ldr	w0, [sp, #192]
  450008:	ldr	x1, [sp, #312]
  45000c:	cmp	x1, x0
  450010:	b.cc	450024 <argp_usage@@Base+0x6f38>  // b.lo, b.ul, b.last
  450014:	ldr	w1, [sp, #304]
  450018:	ldr	w0, [sp, #188]
  45001c:	cmp	w1, w0
  450020:	b.lt	44ff20 <argp_usage@@Base+0x6e34>  // b.tstop
  450024:	ldr	x0, [sp, #312]
  450028:	cmp	x0, #0x9
  45002c:	b.hi	450138 <argp_usage@@Base+0x704c>  // b.pmore
  450030:	ldr	w0, [sp, #196]
  450034:	cmp	w0, #0x1
  450038:	b.ne	45005c <argp_usage@@Base+0x6f70>  // b.any
  45003c:	ldr	w0, [sp, #308]
  450040:	and	w1, w0, #0x1
  450044:	ldr	w0, [sp, #276]
  450048:	add	w0, w1, w0
  45004c:	cmp	w0, #0x2
  450050:	cset	w0, gt
  450054:	and	w0, w0, #0xff
  450058:	b	450088 <argp_usage@@Base+0x6f9c>
  45005c:	ldr	w0, [sp, #196]
  450060:	cmp	w0, #0x0
  450064:	b.ne	45007c <argp_usage@@Base+0x6f90>  // b.any
  450068:	ldr	w0, [sp, #276]
  45006c:	cmp	w0, #0x0
  450070:	b.le	45007c <argp_usage@@Base+0x6f90>
  450074:	mov	w0, #0x1                   	// #1
  450078:	b	450080 <argp_usage@@Base+0x6f94>
  45007c:	mov	w0, #0x0                   	// #0
  450080:	and	w0, w0, #0x1
  450084:	and	w0, w0, #0xff
  450088:	cmp	w0, #0x0
  45008c:	b.eq	4500bc <argp_usage@@Base+0x6fd0>  // b.none
  450090:	ldr	w0, [sp, #308]
  450094:	add	w0, w0, #0x1
  450098:	str	w0, [sp, #308]
  45009c:	str	wzr, [sp, #276]
  4500a0:	ldr	w0, [sp, #308]
  4500a4:	cmp	w0, #0xa
  4500a8:	b.ne	4500bc <argp_usage@@Base+0x6fd0>  // b.any
  4500ac:	ldr	x0, [sp, #312]
  4500b0:	add	x0, x0, #0x1
  4500b4:	str	x0, [sp, #312]
  4500b8:	str	wzr, [sp, #308]
  4500bc:	ldr	x0, [sp, #312]
  4500c0:	cmp	x0, #0x9
  4500c4:	b.hi	450138 <argp_usage@@Base+0x704c>  // b.pmore
  4500c8:	ldr	w0, [sp, #308]
  4500cc:	cmp	w0, #0x0
  4500d0:	b.ne	4500e4 <argp_usage@@Base+0x6ff8>  // b.any
  4500d4:	ldr	w0, [sp, #60]
  4500d8:	and	w0, w0, #0x8
  4500dc:	cmp	w0, #0x0
  4500e0:	b.ne	450138 <argp_usage@@Base+0x704c>  // b.any
  4500e4:	ldr	w0, [sp, #308]
  4500e8:	and	w0, w0, #0xff
  4500ec:	ldr	x1, [sp, #296]
  4500f0:	sub	x1, x1, #0x1
  4500f4:	str	x1, [sp, #296]
  4500f8:	add	w0, w0, #0x30
  4500fc:	and	w1, w0, #0xff
  450100:	ldr	x0, [sp, #296]
  450104:	strb	w1, [x0]
  450108:	ldr	x0, [sp, #256]
  45010c:	neg	x0, x0
  450110:	ldr	x1, [sp, #296]
  450114:	add	x0, x1, x0
  450118:	str	x0, [sp, #296]
  45011c:	ldr	x2, [sp, #256]
  450120:	ldr	x1, [sp, #264]
  450124:	ldr	x0, [sp, #296]
  450128:	bl	404020 <memcpy@plt>
  45012c:	str	wzr, [sp, #276]
  450130:	ldr	w0, [sp, #276]
  450134:	str	w0, [sp, #308]
  450138:	ldr	w0, [sp, #196]
  45013c:	cmp	w0, #0x1
  450140:	b.ne	45017c <argp_usage@@Base+0x7090>  // b.any
  450144:	ldrsw	x1, [sp, #276]
  450148:	ldr	x0, [sp, #312]
  45014c:	and	x0, x0, #0x1
  450150:	add	x0, x1, x0
  450154:	cmp	x0, #0x0
  450158:	cset	w0, ne  // ne = any
  45015c:	and	w0, w0, #0xff
  450160:	mov	w1, w0
  450164:	ldr	w0, [sp, #308]
  450168:	add	w0, w1, w0
  45016c:	cmp	w0, #0x5
  450170:	cset	w0, gt
  450174:	and	w0, w0, #0xff
  450178:	b	4501b0 <argp_usage@@Base+0x70c4>
  45017c:	ldr	w0, [sp, #196]
  450180:	cmp	w0, #0x0
  450184:	b.ne	4501a4 <argp_usage@@Base+0x70b8>  // b.any
  450188:	ldr	w1, [sp, #308]
  45018c:	ldr	w0, [sp, #276]
  450190:	add	w0, w1, w0
  450194:	cmp	w0, #0x0
  450198:	b.le	4501a4 <argp_usage@@Base+0x70b8>
  45019c:	mov	w0, #0x1                   	// #1
  4501a0:	b	4501a8 <argp_usage@@Base+0x70bc>
  4501a4:	mov	w0, #0x0                   	// #0
  4501a8:	and	w0, w0, #0x1
  4501ac:	and	w0, w0, #0xff
  4501b0:	cmp	w0, #0x0
  4501b4:	b.eq	450254 <argp_usage@@Base+0x7168>  // b.none
  4501b8:	ldr	x0, [sp, #312]
  4501bc:	add	x0, x0, #0x1
  4501c0:	str	x0, [sp, #312]
  4501c4:	ldr	w0, [sp, #60]
  4501c8:	and	w0, w0, #0x10
  4501cc:	cmp	w0, #0x0
  4501d0:	b.eq	450254 <argp_usage@@Base+0x7168>  // b.none
  4501d4:	ldr	w0, [sp, #192]
  4501d8:	ldr	x1, [sp, #312]
  4501dc:	cmp	x1, x0
  4501e0:	b.ne	450254 <argp_usage@@Base+0x7168>  // b.any
  4501e4:	ldr	w1, [sp, #304]
  4501e8:	ldr	w0, [sp, #188]
  4501ec:	cmp	w1, w0
  4501f0:	b.ge	450254 <argp_usage@@Base+0x7168>  // b.tcont
  4501f4:	ldr	w0, [sp, #304]
  4501f8:	add	w0, w0, #0x1
  4501fc:	str	w0, [sp, #304]
  450200:	ldr	w0, [sp, #60]
  450204:	and	w0, w0, #0x8
  450208:	cmp	w0, #0x0
  45020c:	b.ne	45024c <argp_usage@@Base+0x7160>  // b.any
  450210:	ldr	x0, [sp, #296]
  450214:	sub	x0, x0, #0x1
  450218:	str	x0, [sp, #296]
  45021c:	ldr	x0, [sp, #296]
  450220:	mov	w1, #0x30                  	// #48
  450224:	strb	w1, [x0]
  450228:	ldr	x0, [sp, #256]
  45022c:	neg	x0, x0
  450230:	ldr	x1, [sp, #296]
  450234:	add	x0, x1, x0
  450238:	str	x0, [sp, #296]
  45023c:	ldr	x2, [sp, #256]
  450240:	ldr	x1, [sp, #264]
  450244:	ldr	x0, [sp, #296]
  450248:	bl	404020 <memcpy@plt>
  45024c:	mov	x0, #0x1                   	// #1
  450250:	str	x0, [sp, #312]
  450254:	ldr	x0, [sp, #296]
  450258:	str	x0, [sp, #280]
  45025c:	ldr	x2, [sp, #312]
  450260:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  450264:	movk	x0, #0xcccd
  450268:	umulh	x0, x2, x0
  45026c:	lsr	x1, x0, #3
  450270:	mov	x0, x1
  450274:	lsl	x0, x0, #2
  450278:	add	x0, x0, x1
  45027c:	lsl	x0, x0, #1
  450280:	sub	x1, x2, x0
  450284:	mov	w0, w1
  450288:	str	w0, [sp, #84]
  45028c:	ldr	w0, [sp, #84]
  450290:	and	w0, w0, #0xff
  450294:	ldr	x1, [sp, #296]
  450298:	sub	x1, x1, #0x1
  45029c:	str	x1, [sp, #296]
  4502a0:	add	w0, w0, #0x30
  4502a4:	and	w1, w0, #0xff
  4502a8:	ldr	x0, [sp, #296]
  4502ac:	strb	w1, [x0]
  4502b0:	ldr	x1, [sp, #312]
  4502b4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  4502b8:	movk	x0, #0xcccd
  4502bc:	umulh	x0, x1, x0
  4502c0:	lsr	x0, x0, #3
  4502c4:	str	x0, [sp, #312]
  4502c8:	ldr	x0, [sp, #312]
  4502cc:	cmp	x0, #0x0
  4502d0:	b.ne	45025c <argp_usage@@Base+0x7170>  // b.any
  4502d4:	nop
  4502d8:	ldr	w0, [sp, #60]
  4502dc:	and	w0, w0, #0x4
  4502e0:	cmp	w0, #0x0
  4502e4:	b.eq	45030c <argp_usage@@Base+0x7220>  // b.none
  4502e8:	ldr	x1, [sp, #280]
  4502ec:	ldr	x0, [sp, #296]
  4502f0:	sub	x0, x1, x0
  4502f4:	ldr	x3, [sp, #248]
  4502f8:	ldr	x2, [sp, #176]
  4502fc:	mov	x1, x0
  450300:	ldr	x0, [sp, #296]
  450304:	bl	44f95c <argp_usage@@Base+0x6870>
  450308:	str	x0, [sp, #296]
  45030c:	ldr	w0, [sp, #60]
  450310:	and	w0, w0, #0x80
  450314:	cmp	w0, #0x0
  450318:	b.eq	45045c <argp_usage@@Base+0x7370>  // b.none
  45031c:	ldr	w0, [sp, #304]
  450320:	cmp	w0, #0x0
  450324:	b.ge	45037c <argp_usage@@Base+0x7290>  // b.tcont
  450328:	str	wzr, [sp, #304]
  45032c:	mov	x0, #0x1                   	// #1
  450330:	str	x0, [sp, #200]
  450334:	b	450364 <argp_usage@@Base+0x7278>
  450338:	ldr	w0, [sp, #304]
  45033c:	add	w0, w0, #0x1
  450340:	str	w0, [sp, #304]
  450344:	ldr	w1, [sp, #304]
  450348:	ldr	w0, [sp, #188]
  45034c:	cmp	w1, w0
  450350:	b.eq	450378 <argp_usage@@Base+0x728c>  // b.none
  450354:	ldr	w0, [sp, #192]
  450358:	ldr	x1, [sp, #200]
  45035c:	mul	x0, x1, x0
  450360:	str	x0, [sp, #200]
  450364:	ldr	x1, [sp, #200]
  450368:	ldr	x0, [sp, #40]
  45036c:	cmp	x1, x0
  450370:	b.cc	450338 <argp_usage@@Base+0x724c>  // b.lo, b.ul, b.last
  450374:	b	45037c <argp_usage@@Base+0x7290>
  450378:	nop
  45037c:	ldr	w0, [sp, #60]
  450380:	and	w1, w0, #0x100
  450384:	ldr	w0, [sp, #304]
  450388:	orr	w0, w1, w0
  45038c:	cmp	w0, #0x0
  450390:	b.eq	4503b8 <argp_usage@@Base+0x72cc>  // b.none
  450394:	ldr	w0, [sp, #60]
  450398:	and	w0, w0, #0x40
  45039c:	cmp	w0, #0x0
  4503a0:	b.eq	4503b8 <argp_usage@@Base+0x72cc>  // b.none
  4503a4:	ldr	x0, [sp, #288]
  4503a8:	add	x1, x0, #0x1
  4503ac:	str	x1, [sp, #288]
  4503b0:	mov	w1, #0x20                  	// #32
  4503b4:	strb	w1, [x0]
  4503b8:	ldr	w0, [sp, #304]
  4503bc:	cmp	w0, #0x0
  4503c0:	b.eq	450408 <argp_usage@@Base+0x731c>  // b.none
  4503c4:	ldr	w0, [sp, #60]
  4503c8:	and	w0, w0, #0x20
  4503cc:	cmp	w0, #0x0
  4503d0:	b.ne	4503e0 <argp_usage@@Base+0x72f4>  // b.any
  4503d4:	ldr	w0, [sp, #304]
  4503d8:	cmp	w0, #0x1
  4503dc:	b.eq	4503f4 <argp_usage@@Base+0x7308>  // b.none
  4503e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4503e4:	add	x1, x0, #0x7e0
  4503e8:	ldrsw	x0, [sp, #304]
  4503ec:	ldrb	w1, [x1, x0]
  4503f0:	b	4503f8 <argp_usage@@Base+0x730c>
  4503f4:	mov	w1, #0x6b                  	// #107
  4503f8:	ldr	x0, [sp, #288]
  4503fc:	add	x2, x0, #0x1
  450400:	str	x2, [sp, #288]
  450404:	strb	w1, [x0]
  450408:	ldr	w0, [sp, #60]
  45040c:	and	w0, w0, #0x100
  450410:	cmp	w0, #0x0
  450414:	b.eq	45045c <argp_usage@@Base+0x7370>  // b.none
  450418:	ldr	w0, [sp, #60]
  45041c:	and	w0, w0, #0x20
  450420:	cmp	w0, #0x0
  450424:	b.eq	450448 <argp_usage@@Base+0x735c>  // b.none
  450428:	ldr	w0, [sp, #304]
  45042c:	cmp	w0, #0x0
  450430:	b.eq	450448 <argp_usage@@Base+0x735c>  // b.none
  450434:	ldr	x0, [sp, #288]
  450438:	add	x1, x0, #0x1
  45043c:	str	x1, [sp, #288]
  450440:	mov	w1, #0x69                  	// #105
  450444:	strb	w1, [x0]
  450448:	ldr	x0, [sp, #288]
  45044c:	add	x1, x0, #0x1
  450450:	str	x1, [sp, #288]
  450454:	mov	w1, #0x42                  	// #66
  450458:	strb	w1, [x0]
  45045c:	ldr	x0, [sp, #288]
  450460:	strb	wzr, [x0]
  450464:	ldr	x0, [sp, #296]
  450468:	ldp	x29, x30, [sp], #320
  45046c:	ret
  450470:	stp	x29, x30, [sp, #-16]!
  450474:	mov	x29, sp
  450478:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45047c:	add	x0, x0, #0x848
  450480:	bl	404bf0 <getenv@plt>
  450484:	cmp	x0, #0x0
  450488:	b.eq	450494 <argp_usage@@Base+0x73a8>  // b.none
  45048c:	mov	x0, #0x200                 	// #512
  450490:	b	450498 <argp_usage@@Base+0x73ac>
  450494:	mov	x0, #0x400                 	// #1024
  450498:	ldp	x29, x30, [sp], #16
  45049c:	ret
  4504a0:	stp	x29, x30, [sp, #-80]!
  4504a4:	mov	x29, sp
  4504a8:	str	x0, [sp, #40]
  4504ac:	str	x1, [sp, #32]
  4504b0:	str	x2, [sp, #24]
  4504b4:	str	wzr, [sp, #76]
  4504b8:	ldr	x0, [sp, #40]
  4504bc:	cmp	x0, #0x0
  4504c0:	b.ne	450510 <argp_usage@@Base+0x7424>  // b.any
  4504c4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4504c8:	add	x0, x0, #0x858
  4504cc:	bl	404bf0 <getenv@plt>
  4504d0:	str	x0, [sp, #40]
  4504d4:	ldr	x0, [sp, #40]
  4504d8:	cmp	x0, #0x0
  4504dc:	b.ne	450510 <argp_usage@@Base+0x7424>  // b.any
  4504e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4504e4:	add	x0, x0, #0x868
  4504e8:	bl	404bf0 <getenv@plt>
  4504ec:	str	x0, [sp, #40]
  4504f0:	ldr	x0, [sp, #40]
  4504f4:	cmp	x0, #0x0
  4504f8:	b.ne	450510 <argp_usage@@Base+0x7424>  // b.any
  4504fc:	bl	450470 <argp_usage@@Base+0x7384>
  450500:	mov	x1, x0
  450504:	ldr	x0, [sp, #32]
  450508:	str	x1, [x0]
  45050c:	b	450674 <argp_usage@@Base+0x7588>
  450510:	ldr	x0, [sp, #40]
  450514:	ldrb	w0, [x0]
  450518:	cmp	w0, #0x27
  45051c:	b.ne	450538 <argp_usage@@Base+0x744c>  // b.any
  450520:	ldr	w0, [sp, #76]
  450524:	orr	w0, w0, #0x4
  450528:	str	w0, [sp, #76]
  45052c:	ldr	x0, [sp, #40]
  450530:	add	x0, x0, #0x1
  450534:	str	x0, [sp, #40]
  450538:	mov	x3, #0x4                   	// #4
  45053c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450540:	add	x2, x0, #0x840
  450544:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450548:	add	x1, x0, #0x828
  45054c:	ldr	x0, [sp, #40]
  450550:	bl	443750 <wcrtomb@plt+0x3ea40>
  450554:	str	w0, [sp, #72]
  450558:	ldr	w0, [sp, #72]
  45055c:	cmp	w0, #0x0
  450560:	b.lt	450590 <argp_usage@@Base+0x74a4>  // b.tstop
  450564:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450568:	add	x0, x0, #0x840
  45056c:	ldrsw	x1, [sp, #72]
  450570:	ldr	w0, [x0, x1, lsl #2]
  450574:	ldr	w1, [sp, #76]
  450578:	orr	w0, w1, w0
  45057c:	str	w0, [sp, #76]
  450580:	ldr	x0, [sp, #32]
  450584:	mov	x1, #0x1                   	// #1
  450588:	str	x1, [x0]
  45058c:	b	450674 <argp_usage@@Base+0x7588>
  450590:	add	x1, sp, #0x38
  450594:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450598:	add	x4, x0, #0x878
  45059c:	ldr	x3, [sp, #32]
  4505a0:	mov	w2, #0x0                   	// #0
  4505a4:	ldr	x0, [sp, #40]
  4505a8:	bl	45b9cc <argp_usage@@Base+0x128e0>
  4505ac:	str	w0, [sp, #68]
  4505b0:	ldr	w0, [sp, #68]
  4505b4:	cmp	w0, #0x0
  4505b8:	b.eq	45064c <argp_usage@@Base+0x7560>  // b.none
  4505bc:	ldr	x0, [sp, #24]
  4505c0:	str	wzr, [x0]
  4505c4:	ldr	w0, [sp, #68]
  4505c8:	b	450684 <argp_usage@@Base+0x7598>
  4505cc:	ldr	x0, [sp, #56]
  4505d0:	ldr	x1, [sp, #40]
  4505d4:	cmp	x1, x0
  4505d8:	b.ne	450640 <argp_usage@@Base+0x7554>  // b.any
  4505dc:	ldr	w0, [sp, #76]
  4505e0:	orr	w0, w0, #0x80
  4505e4:	str	w0, [sp, #76]
  4505e8:	ldr	x0, [sp, #56]
  4505ec:	sub	x0, x0, #0x1
  4505f0:	ldrb	w0, [x0]
  4505f4:	cmp	w0, #0x42
  4505f8:	b.ne	450608 <argp_usage@@Base+0x751c>  // b.any
  4505fc:	ldr	w0, [sp, #76]
  450600:	orr	w0, w0, #0x100
  450604:	str	w0, [sp, #76]
  450608:	ldr	x0, [sp, #56]
  45060c:	sub	x0, x0, #0x1
  450610:	ldrb	w0, [x0]
  450614:	cmp	w0, #0x42
  450618:	b.ne	450630 <argp_usage@@Base+0x7544>  // b.any
  45061c:	ldr	x0, [sp, #56]
  450620:	sub	x0, x0, #0x2
  450624:	ldrb	w0, [x0]
  450628:	cmp	w0, #0x69
  45062c:	b.ne	450670 <argp_usage@@Base+0x7584>  // b.any
  450630:	ldr	w0, [sp, #76]
  450634:	orr	w0, w0, #0x20
  450638:	str	w0, [sp, #76]
  45063c:	b	450670 <argp_usage@@Base+0x7584>
  450640:	ldr	x0, [sp, #40]
  450644:	add	x0, x0, #0x1
  450648:	str	x0, [sp, #40]
  45064c:	ldr	x0, [sp, #40]
  450650:	ldrb	w0, [x0]
  450654:	cmp	w0, #0x2f
  450658:	b.ls	4505cc <argp_usage@@Base+0x74e0>  // b.plast
  45065c:	ldr	x0, [sp, #40]
  450660:	ldrb	w0, [x0]
  450664:	cmp	w0, #0x39
  450668:	b.hi	4505cc <argp_usage@@Base+0x74e0>  // b.pmore
  45066c:	b	450674 <argp_usage@@Base+0x7588>
  450670:	nop
  450674:	ldr	x0, [sp, #24]
  450678:	ldr	w1, [sp, #76]
  45067c:	str	w1, [x0]
  450680:	mov	w0, #0x0                   	// #0
  450684:	ldp	x29, x30, [sp], #80
  450688:	ret
  45068c:	stp	x29, x30, [sp, #-64]!
  450690:	mov	x29, sp
  450694:	str	x0, [sp, #40]
  450698:	str	x1, [sp, #32]
  45069c:	str	x2, [sp, #24]
  4506a0:	ldr	x2, [sp, #32]
  4506a4:	ldr	x1, [sp, #24]
  4506a8:	ldr	x0, [sp, #40]
  4506ac:	bl	4504a0 <argp_usage@@Base+0x73b4>
  4506b0:	str	w0, [sp, #60]
  4506b4:	ldr	x0, [sp, #24]
  4506b8:	ldr	x0, [x0]
  4506bc:	cmp	x0, #0x0
  4506c0:	b.ne	4506dc <argp_usage@@Base+0x75f0>  // b.any
  4506c4:	bl	450470 <argp_usage@@Base+0x7384>
  4506c8:	mov	x1, x0
  4506cc:	ldr	x0, [sp, #24]
  4506d0:	str	x1, [x0]
  4506d4:	mov	w0, #0x4                   	// #4
  4506d8:	str	w0, [sp, #60]
  4506dc:	ldr	w0, [sp, #60]
  4506e0:	ldp	x29, x30, [sp], #64
  4506e4:	ret
  4506e8:	sub	sp, sp, #0x20
  4506ec:	str	x0, [sp, #8]
  4506f0:	str	x1, [sp]
  4506f4:	ldr	x0, [sp]
  4506f8:	add	x0, x0, #0x14
  4506fc:	str	x0, [sp, #24]
  450700:	ldr	x0, [sp, #24]
  450704:	strb	wzr, [x0]
  450708:	ldr	x0, [sp, #8]
  45070c:	cmp	x0, #0x0
  450710:	b.ge	4507b0 <argp_usage@@Base+0x76c4>  // b.tcont
  450714:	ldr	x1, [sp, #8]
  450718:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  45071c:	movk	x0, #0x6667
  450720:	smulh	x0, x1, x0
  450724:	asr	x2, x0, #2
  450728:	asr	x0, x1, #63
  45072c:	sub	x2, x2, x0
  450730:	mov	x0, x2
  450734:	lsl	x0, x0, #2
  450738:	add	x0, x0, x2
  45073c:	lsl	x0, x0, #1
  450740:	sub	x2, x1, x0
  450744:	and	w0, w2, #0xff
  450748:	ldr	x1, [sp, #24]
  45074c:	sub	x1, x1, #0x1
  450750:	str	x1, [sp, #24]
  450754:	mov	w1, #0x30                  	// #48
  450758:	sub	w0, w1, w0
  45075c:	and	w1, w0, #0xff
  450760:	ldr	x0, [sp, #24]
  450764:	strb	w1, [x0]
  450768:	ldr	x0, [sp, #8]
  45076c:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  450770:	movk	x1, #0x6667
  450774:	smulh	x1, x0, x1
  450778:	asr	x1, x1, #2
  45077c:	asr	x0, x0, #63
  450780:	sub	x0, x1, x0
  450784:	str	x0, [sp, #8]
  450788:	ldr	x0, [sp, #8]
  45078c:	cmp	x0, #0x0
  450790:	b.ne	450714 <argp_usage@@Base+0x7628>  // b.any
  450794:	ldr	x0, [sp, #24]
  450798:	sub	x0, x0, #0x1
  45079c:	str	x0, [sp, #24]
  4507a0:	ldr	x0, [sp, #24]
  4507a4:	mov	w1, #0x2d                  	// #45
  4507a8:	strb	w1, [x0]
  4507ac:	b	45082c <argp_usage@@Base+0x7740>
  4507b0:	ldr	x1, [sp, #8]
  4507b4:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  4507b8:	movk	x0, #0x6667
  4507bc:	smulh	x0, x1, x0
  4507c0:	asr	x2, x0, #2
  4507c4:	asr	x0, x1, #63
  4507c8:	sub	x2, x2, x0
  4507cc:	mov	x0, x2
  4507d0:	lsl	x0, x0, #2
  4507d4:	add	x0, x0, x2
  4507d8:	lsl	x0, x0, #1
  4507dc:	sub	x2, x1, x0
  4507e0:	and	w0, w2, #0xff
  4507e4:	ldr	x1, [sp, #24]
  4507e8:	sub	x1, x1, #0x1
  4507ec:	str	x1, [sp, #24]
  4507f0:	add	w0, w0, #0x30
  4507f4:	and	w1, w0, #0xff
  4507f8:	ldr	x0, [sp, #24]
  4507fc:	strb	w1, [x0]
  450800:	ldr	x0, [sp, #8]
  450804:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  450808:	movk	x1, #0x6667
  45080c:	smulh	x1, x0, x1
  450810:	asr	x1, x1, #2
  450814:	asr	x0, x0, #63
  450818:	sub	x0, x1, x0
  45081c:	str	x0, [sp, #8]
  450820:	ldr	x0, [sp, #8]
  450824:	cmp	x0, #0x0
  450828:	b.ne	4507b0 <argp_usage@@Base+0x76c4>  // b.any
  45082c:	ldr	x0, [sp, #24]
  450830:	add	sp, sp, #0x20
  450834:	ret
  450838:	sub	sp, sp, #0x20
  45083c:	str	x0, [sp, #8]
  450840:	str	x1, [sp]
  450844:	ldr	x0, [sp]
  450848:	add	x0, x0, #0x14
  45084c:	str	x0, [sp, #24]
  450850:	ldr	x0, [sp, #24]
  450854:	strb	wzr, [x0]
  450858:	ldr	x0, [sp, #8]
  45085c:	cmp	x0, #0x0
  450860:	b.ge	450900 <argp_usage@@Base+0x7814>  // b.tcont
  450864:	ldr	x1, [sp, #8]
  450868:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  45086c:	movk	x0, #0x6667
  450870:	smulh	x0, x1, x0
  450874:	asr	x2, x0, #2
  450878:	asr	x0, x1, #63
  45087c:	sub	x2, x2, x0
  450880:	mov	x0, x2
  450884:	lsl	x0, x0, #2
  450888:	add	x0, x0, x2
  45088c:	lsl	x0, x0, #1
  450890:	sub	x2, x1, x0
  450894:	and	w0, w2, #0xff
  450898:	ldr	x1, [sp, #24]
  45089c:	sub	x1, x1, #0x1
  4508a0:	str	x1, [sp, #24]
  4508a4:	mov	w1, #0x30                  	// #48
  4508a8:	sub	w0, w1, w0
  4508ac:	and	w1, w0, #0xff
  4508b0:	ldr	x0, [sp, #24]
  4508b4:	strb	w1, [x0]
  4508b8:	ldr	x0, [sp, #8]
  4508bc:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  4508c0:	movk	x1, #0x6667
  4508c4:	smulh	x1, x0, x1
  4508c8:	asr	x1, x1, #2
  4508cc:	asr	x0, x0, #63
  4508d0:	sub	x0, x1, x0
  4508d4:	str	x0, [sp, #8]
  4508d8:	ldr	x0, [sp, #8]
  4508dc:	cmp	x0, #0x0
  4508e0:	b.ne	450864 <argp_usage@@Base+0x7778>  // b.any
  4508e4:	ldr	x0, [sp, #24]
  4508e8:	sub	x0, x0, #0x1
  4508ec:	str	x0, [sp, #24]
  4508f0:	ldr	x0, [sp, #24]
  4508f4:	mov	w1, #0x2d                  	// #45
  4508f8:	strb	w1, [x0]
  4508fc:	b	45097c <argp_usage@@Base+0x7890>
  450900:	ldr	x1, [sp, #8]
  450904:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  450908:	movk	x0, #0x6667
  45090c:	smulh	x0, x1, x0
  450910:	asr	x2, x0, #2
  450914:	asr	x0, x1, #63
  450918:	sub	x2, x2, x0
  45091c:	mov	x0, x2
  450920:	lsl	x0, x0, #2
  450924:	add	x0, x0, x2
  450928:	lsl	x0, x0, #1
  45092c:	sub	x2, x1, x0
  450930:	and	w0, w2, #0xff
  450934:	ldr	x1, [sp, #24]
  450938:	sub	x1, x1, #0x1
  45093c:	str	x1, [sp, #24]
  450940:	add	w0, w0, #0x30
  450944:	and	w1, w0, #0xff
  450948:	ldr	x0, [sp, #24]
  45094c:	strb	w1, [x0]
  450950:	ldr	x0, [sp, #8]
  450954:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  450958:	movk	x1, #0x6667
  45095c:	smulh	x1, x0, x1
  450960:	asr	x1, x1, #2
  450964:	asr	x0, x0, #63
  450968:	sub	x0, x1, x0
  45096c:	str	x0, [sp, #8]
  450970:	ldr	x0, [sp, #8]
  450974:	cmp	x0, #0x0
  450978:	b.ne	450900 <argp_usage@@Base+0x7814>  // b.any
  45097c:	ldr	x0, [sp, #24]
  450980:	add	sp, sp, #0x20
  450984:	ret
  450988:	sub	sp, sp, #0x20
  45098c:	str	x0, [sp, #8]
  450990:	str	x1, [sp]
  450994:	ldr	x0, [sp]
  450998:	add	x0, x0, #0x14
  45099c:	str	x0, [sp, #24]
  4509a0:	ldr	x0, [sp, #24]
  4509a4:	strb	wzr, [x0]
  4509a8:	ldr	x2, [sp, #8]
  4509ac:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  4509b0:	movk	x0, #0xcccd
  4509b4:	umulh	x0, x2, x0
  4509b8:	lsr	x1, x0, #3
  4509bc:	mov	x0, x1
  4509c0:	lsl	x0, x0, #2
  4509c4:	add	x0, x0, x1
  4509c8:	lsl	x0, x0, #1
  4509cc:	sub	x1, x2, x0
  4509d0:	and	w0, w1, #0xff
  4509d4:	ldr	x1, [sp, #24]
  4509d8:	sub	x1, x1, #0x1
  4509dc:	str	x1, [sp, #24]
  4509e0:	add	w0, w0, #0x30
  4509e4:	and	w1, w0, #0xff
  4509e8:	ldr	x0, [sp, #24]
  4509ec:	strb	w1, [x0]
  4509f0:	ldr	x1, [sp, #8]
  4509f4:	mov	x0, #0xcccccccccccccccc    	// #-3689348814741910324
  4509f8:	movk	x0, #0xcccd
  4509fc:	umulh	x0, x1, x0
  450a00:	lsr	x0, x0, #3
  450a04:	str	x0, [sp, #8]
  450a08:	ldr	x0, [sp, #8]
  450a0c:	cmp	x0, #0x0
  450a10:	b.ne	4509a8 <argp_usage@@Base+0x78bc>  // b.any
  450a14:	ldr	x0, [sp, #24]
  450a18:	add	sp, sp, #0x20
  450a1c:	ret
  450a20:	stp	x29, x30, [sp, #-32]!
  450a24:	mov	x29, sp
  450a28:	mov	w0, #0xe                   	// #14
  450a2c:	bl	4043c0 <nl_langinfo@plt>
  450a30:	str	x0, [sp, #24]
  450a34:	ldr	x0, [sp, #24]
  450a38:	cmp	x0, #0x0
  450a3c:	b.ne	450a4c <argp_usage@@Base+0x7960>  // b.any
  450a40:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450a44:	add	x0, x0, #0x8c0
  450a48:	str	x0, [sp, #24]
  450a4c:	ldr	x0, [sp, #24]
  450a50:	ldrb	w0, [x0]
  450a54:	cmp	w0, #0x0
  450a58:	b.ne	450a68 <argp_usage@@Base+0x797c>  // b.any
  450a5c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450a60:	add	x0, x0, #0x8c8
  450a64:	str	x0, [sp, #24]
  450a68:	ldr	x0, [sp, #24]
  450a6c:	ldp	x29, x30, [sp], #32
  450a70:	ret
  450a74:	stp	x29, x30, [sp, #-208]!
  450a78:	mov	x29, sp
  450a7c:	str	x19, [sp, #16]
  450a80:	str	x0, [sp, #40]
  450a84:	str	x1, [sp, #32]
  450a88:	ldr	x1, [sp, #40]
  450a8c:	ldr	x0, [sp, #32]
  450a90:	cmp	x1, x0
  450a94:	b.ne	450aa0 <argp_usage@@Base+0x79b4>  // b.any
  450a98:	mov	w0, #0x0                   	// #0
  450a9c:	b	450e00 <argp_usage@@Base+0x7d14>
  450aa0:	bl	4048a0 <__ctype_get_mb_cur_max@plt>
  450aa4:	cmp	x0, #0x1
  450aa8:	b.ls	450d10 <argp_usage@@Base+0x7c24>  // b.plast
  450aac:	ldr	x0, [sp, #40]
  450ab0:	str	x0, [sp, #72]
  450ab4:	strb	wzr, [sp, #56]
  450ab8:	add	x0, sp, #0x38
  450abc:	add	x0, x0, #0x4
  450ac0:	mov	x2, #0x8                   	// #8
  450ac4:	mov	w1, #0x0                   	// #0
  450ac8:	bl	4044d0 <memset@plt>
  450acc:	strb	wzr, [sp, #68]
  450ad0:	ldr	x0, [sp, #32]
  450ad4:	str	x0, [sp, #136]
  450ad8:	strb	wzr, [sp, #120]
  450adc:	add	x0, sp, #0x78
  450ae0:	add	x0, x0, #0x4
  450ae4:	mov	x2, #0x8                   	// #8
  450ae8:	mov	w1, #0x0                   	// #0
  450aec:	bl	4044d0 <memset@plt>
  450af0:	strb	wzr, [sp, #132]
  450af4:	b	450c08 <argp_usage@@Base+0x7b1c>
  450af8:	ldrb	w0, [sp, #88]
  450afc:	cmp	w0, #0x0
  450b00:	b.eq	450b34 <argp_usage@@Base+0x7a48>  // b.none
  450b04:	ldrb	w0, [sp, #152]
  450b08:	cmp	w0, #0x0
  450b0c:	b.eq	450b2c <argp_usage@@Base+0x7a40>  // b.none
  450b10:	ldr	w0, [sp, #92]
  450b14:	bl	404c80 <towlower@plt>
  450b18:	mov	w19, w0
  450b1c:	ldr	w0, [sp, #156]
  450b20:	bl	404c80 <towlower@plt>
  450b24:	sub	w0, w19, w0
  450b28:	b	450bc8 <argp_usage@@Base+0x7adc>
  450b2c:	mov	w0, #0xffffffff            	// #-1
  450b30:	b	450bc8 <argp_usage@@Base+0x7adc>
  450b34:	ldrb	w0, [sp, #152]
  450b38:	cmp	w0, #0x0
  450b3c:	b.eq	450b48 <argp_usage@@Base+0x7a5c>  // b.none
  450b40:	mov	w0, #0x1                   	// #1
  450b44:	b	450bc8 <argp_usage@@Base+0x7adc>
  450b48:	ldr	x1, [sp, #80]
  450b4c:	ldr	x0, [sp, #144]
  450b50:	cmp	x1, x0
  450b54:	b.ne	450b6c <argp_usage@@Base+0x7a80>  // b.any
  450b58:	ldr	x0, [sp, #72]
  450b5c:	ldr	x1, [sp, #136]
  450b60:	ldr	x2, [sp, #80]
  450b64:	bl	404790 <memcmp@plt>
  450b68:	b	450bc8 <argp_usage@@Base+0x7adc>
  450b6c:	ldr	x1, [sp, #80]
  450b70:	ldr	x0, [sp, #144]
  450b74:	cmp	x1, x0
  450b78:	b.cs	450ba4 <argp_usage@@Base+0x7ab8>  // b.hs, b.nlast
  450b7c:	ldr	x0, [sp, #72]
  450b80:	ldr	x1, [sp, #136]
  450b84:	ldr	x2, [sp, #80]
  450b88:	bl	404790 <memcmp@plt>
  450b8c:	cmp	w0, #0x0
  450b90:	b.le	450b9c <argp_usage@@Base+0x7ab0>
  450b94:	mov	w0, #0x1                   	// #1
  450b98:	b	450bc8 <argp_usage@@Base+0x7adc>
  450b9c:	mov	w0, #0xffffffff            	// #-1
  450ba0:	b	450bc8 <argp_usage@@Base+0x7adc>
  450ba4:	ldr	x0, [sp, #72]
  450ba8:	ldr	x1, [sp, #136]
  450bac:	ldr	x2, [sp, #144]
  450bb0:	bl	404790 <memcmp@plt>
  450bb4:	cmp	w0, #0x0
  450bb8:	b.lt	450bc4 <argp_usage@@Base+0x7ad8>  // b.tstop
  450bbc:	mov	w0, #0x1                   	// #1
  450bc0:	b	450bc8 <argp_usage@@Base+0x7adc>
  450bc4:	mov	w0, #0xffffffff            	// #-1
  450bc8:	str	w0, [sp, #184]
  450bcc:	ldr	w0, [sp, #184]
  450bd0:	cmp	w0, #0x0
  450bd4:	b.eq	450be0 <argp_usage@@Base+0x7af4>  // b.none
  450bd8:	ldr	w0, [sp, #184]
  450bdc:	b	450e00 <argp_usage@@Base+0x7d14>
  450be0:	ldr	x1, [sp, #72]
  450be4:	ldr	x0, [sp, #80]
  450be8:	add	x0, x1, x0
  450bec:	str	x0, [sp, #72]
  450bf0:	strb	wzr, [sp, #68]
  450bf4:	ldr	x1, [sp, #136]
  450bf8:	ldr	x0, [sp, #144]
  450bfc:	add	x0, x1, x0
  450c00:	str	x0, [sp, #136]
  450c04:	strb	wzr, [sp, #132]
  450c08:	add	x0, sp, #0x38
  450c0c:	bl	450e0c <argp_usage@@Base+0x7d20>
  450c10:	ldrb	w0, [sp, #88]
  450c14:	eor	w0, w0, #0x1
  450c18:	and	w0, w0, #0xff
  450c1c:	cmp	w0, #0x0
  450c20:	b.ne	450c30 <argp_usage@@Base+0x7b44>  // b.any
  450c24:	ldr	w0, [sp, #92]
  450c28:	cmp	w0, #0x0
  450c2c:	b.eq	450c38 <argp_usage@@Base+0x7b4c>  // b.none
  450c30:	mov	w0, #0x1                   	// #1
  450c34:	b	450c3c <argp_usage@@Base+0x7b50>
  450c38:	mov	w0, #0x0                   	// #0
  450c3c:	cmp	w0, #0x0
  450c40:	b.eq	450c80 <argp_usage@@Base+0x7b94>  // b.none
  450c44:	add	x0, sp, #0x78
  450c48:	bl	450e0c <argp_usage@@Base+0x7d20>
  450c4c:	ldrb	w0, [sp, #152]
  450c50:	eor	w0, w0, #0x1
  450c54:	and	w0, w0, #0xff
  450c58:	cmp	w0, #0x0
  450c5c:	b.ne	450c6c <argp_usage@@Base+0x7b80>  // b.any
  450c60:	ldr	w0, [sp, #156]
  450c64:	cmp	w0, #0x0
  450c68:	b.eq	450c74 <argp_usage@@Base+0x7b88>  // b.none
  450c6c:	mov	w0, #0x1                   	// #1
  450c70:	b	450c78 <argp_usage@@Base+0x7b8c>
  450c74:	mov	w0, #0x0                   	// #0
  450c78:	cmp	w0, #0x0
  450c7c:	b.ne	450af8 <argp_usage@@Base+0x7a0c>  // b.any
  450c80:	add	x0, sp, #0x38
  450c84:	bl	450e0c <argp_usage@@Base+0x7d20>
  450c88:	ldrb	w0, [sp, #88]
  450c8c:	eor	w0, w0, #0x1
  450c90:	and	w0, w0, #0xff
  450c94:	cmp	w0, #0x0
  450c98:	b.ne	450ca8 <argp_usage@@Base+0x7bbc>  // b.any
  450c9c:	ldr	w0, [sp, #92]
  450ca0:	cmp	w0, #0x0
  450ca4:	b.eq	450cb0 <argp_usage@@Base+0x7bc4>  // b.none
  450ca8:	mov	w0, #0x1                   	// #1
  450cac:	b	450cb4 <argp_usage@@Base+0x7bc8>
  450cb0:	mov	w0, #0x0                   	// #0
  450cb4:	cmp	w0, #0x0
  450cb8:	b.eq	450cc4 <argp_usage@@Base+0x7bd8>  // b.none
  450cbc:	mov	w0, #0x1                   	// #1
  450cc0:	b	450e00 <argp_usage@@Base+0x7d14>
  450cc4:	add	x0, sp, #0x78
  450cc8:	bl	450e0c <argp_usage@@Base+0x7d20>
  450ccc:	ldrb	w0, [sp, #152]
  450cd0:	eor	w0, w0, #0x1
  450cd4:	and	w0, w0, #0xff
  450cd8:	cmp	w0, #0x0
  450cdc:	b.ne	450cec <argp_usage@@Base+0x7c00>  // b.any
  450ce0:	ldr	w0, [sp, #156]
  450ce4:	cmp	w0, #0x0
  450ce8:	b.eq	450cf4 <argp_usage@@Base+0x7c08>  // b.none
  450cec:	mov	w0, #0x1                   	// #1
  450cf0:	b	450cf8 <argp_usage@@Base+0x7c0c>
  450cf4:	mov	w0, #0x0                   	// #0
  450cf8:	cmp	w0, #0x0
  450cfc:	b.eq	450d08 <argp_usage@@Base+0x7c1c>  // b.none
  450d00:	mov	w0, #0xffffffff            	// #-1
  450d04:	b	450e00 <argp_usage@@Base+0x7d14>
  450d08:	mov	w0, #0x0                   	// #0
  450d0c:	b	450e00 <argp_usage@@Base+0x7d14>
  450d10:	ldr	x0, [sp, #40]
  450d14:	str	x0, [sp, #200]
  450d18:	ldr	x0, [sp, #32]
  450d1c:	str	x0, [sp, #192]
  450d20:	bl	4047f0 <__ctype_b_loc@plt>
  450d24:	ldr	x1, [x0]
  450d28:	ldr	x0, [sp, #200]
  450d2c:	ldrb	w0, [x0]
  450d30:	and	x0, x0, #0xff
  450d34:	lsl	x0, x0, #1
  450d38:	add	x0, x1, x0
  450d3c:	ldrh	w0, [x0]
  450d40:	and	w0, w0, #0x100
  450d44:	cmp	w0, #0x0
  450d48:	b.eq	450d60 <argp_usage@@Base+0x7c74>  // b.none
  450d4c:	ldr	x0, [sp, #200]
  450d50:	ldrb	w0, [x0]
  450d54:	bl	404bd0 <tolower@plt>
  450d58:	and	w0, w0, #0xff
  450d5c:	b	450d68 <argp_usage@@Base+0x7c7c>
  450d60:	ldr	x0, [sp, #200]
  450d64:	ldrb	w0, [x0]
  450d68:	strb	w0, [sp, #191]
  450d6c:	bl	4047f0 <__ctype_b_loc@plt>
  450d70:	ldr	x1, [x0]
  450d74:	ldr	x0, [sp, #192]
  450d78:	ldrb	w0, [x0]
  450d7c:	and	x0, x0, #0xff
  450d80:	lsl	x0, x0, #1
  450d84:	add	x0, x1, x0
  450d88:	ldrh	w0, [x0]
  450d8c:	and	w0, w0, #0x100
  450d90:	cmp	w0, #0x0
  450d94:	b.eq	450dac <argp_usage@@Base+0x7cc0>  // b.none
  450d98:	ldr	x0, [sp, #192]
  450d9c:	ldrb	w0, [x0]
  450da0:	bl	404bd0 <tolower@plt>
  450da4:	and	w0, w0, #0xff
  450da8:	b	450db4 <argp_usage@@Base+0x7cc8>
  450dac:	ldr	x0, [sp, #192]
  450db0:	ldrb	w0, [x0]
  450db4:	strb	w0, [sp, #190]
  450db8:	ldrb	w0, [sp, #191]
  450dbc:	cmp	w0, #0x0
  450dc0:	b.eq	450df0 <argp_usage@@Base+0x7d04>  // b.none
  450dc4:	ldr	x0, [sp, #200]
  450dc8:	add	x0, x0, #0x1
  450dcc:	str	x0, [sp, #200]
  450dd0:	ldr	x0, [sp, #192]
  450dd4:	add	x0, x0, #0x1
  450dd8:	str	x0, [sp, #192]
  450ddc:	ldrb	w1, [sp, #191]
  450de0:	ldrb	w0, [sp, #190]
  450de4:	cmp	w1, w0
  450de8:	b.eq	450d20 <argp_usage@@Base+0x7c34>  // b.none
  450dec:	b	450df4 <argp_usage@@Base+0x7d08>
  450df0:	nop
  450df4:	ldrb	w1, [sp, #191]
  450df8:	ldrb	w0, [sp, #190]
  450dfc:	sub	w0, w1, w0
  450e00:	ldr	x19, [sp, #16]
  450e04:	ldp	x29, x30, [sp], #208
  450e08:	ret
  450e0c:	stp	x29, x30, [sp, #-64]!
  450e10:	mov	x29, sp
  450e14:	stp	x19, x20, [sp, #16]
  450e18:	str	x21, [sp, #32]
  450e1c:	str	x0, [sp, #56]
  450e20:	ldr	x0, [sp, #56]
  450e24:	ldrb	w0, [x0, #12]
  450e28:	cmp	w0, #0x0
  450e2c:	b.ne	451040 <argp_usage@@Base+0x7f54>  // b.any
  450e30:	ldr	x0, [sp, #56]
  450e34:	ldrb	w0, [x0]
  450e38:	cmp	w0, #0x0
  450e3c:	b.ne	450ed4 <argp_usage@@Base+0x7de8>  // b.any
  450e40:	ldr	x0, [sp, #56]
  450e44:	ldr	x0, [x0, #16]
  450e48:	ldrb	w0, [x0]
  450e4c:	bl	476f00 <_obstack_memory_used@@Base+0x19dc0>
  450e50:	and	w0, w0, #0xff
  450e54:	cmp	w0, #0x0
  450e58:	b.eq	450e90 <argp_usage@@Base+0x7da4>  // b.none
  450e5c:	ldr	x0, [sp, #56]
  450e60:	mov	x1, #0x1                   	// #1
  450e64:	str	x1, [x0, #24]
  450e68:	ldr	x0, [sp, #56]
  450e6c:	ldr	x0, [x0, #16]
  450e70:	ldrb	w0, [x0]
  450e74:	mov	w1, w0
  450e78:	ldr	x0, [sp, #56]
  450e7c:	str	w1, [x0, #36]
  450e80:	ldr	x0, [sp, #56]
  450e84:	mov	w1, #0x1                   	// #1
  450e88:	strb	w1, [x0, #32]
  450e8c:	b	451030 <argp_usage@@Base+0x7f44>
  450e90:	ldr	x0, [sp, #56]
  450e94:	add	x0, x0, #0x4
  450e98:	bl	404730 <mbsinit@plt>
  450e9c:	cmp	w0, #0x0
  450ea0:	b.ne	450ec4 <argp_usage@@Base+0x7dd8>  // b.any
  450ea4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450ea8:	add	x3, x0, #0x928
  450eac:	mov	w2, #0x96                  	// #150
  450eb0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450eb4:	add	x1, x0, #0x8d0
  450eb8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450ebc:	add	x0, x0, #0x8e0
  450ec0:	bl	404bb0 <__assert_fail@plt>
  450ec4:	ldr	x0, [sp, #56]
  450ec8:	mov	w1, #0x1                   	// #1
  450ecc:	strb	w1, [x0]
  450ed0:	b	450ed8 <argp_usage@@Base+0x7dec>
  450ed4:	nop
  450ed8:	ldr	x0, [sp, #56]
  450edc:	add	x19, x0, #0x24
  450ee0:	ldr	x0, [sp, #56]
  450ee4:	ldr	x20, [x0, #16]
  450ee8:	ldr	x0, [sp, #56]
  450eec:	ldr	x21, [x0, #16]
  450ef0:	bl	4048a0 <__ctype_get_mb_cur_max@plt>
  450ef4:	mov	x1, x0
  450ef8:	mov	x0, x21
  450efc:	bl	45aa94 <argp_usage@@Base+0x119a8>
  450f00:	mov	x1, x0
  450f04:	ldr	x0, [sp, #56]
  450f08:	add	x0, x0, #0x4
  450f0c:	mov	x3, x0
  450f10:	mov	x2, x1
  450f14:	mov	x1, x20
  450f18:	mov	x0, x19
  450f1c:	bl	45ca48 <argp_usage@@Base+0x1395c>
  450f20:	mov	x1, x0
  450f24:	ldr	x0, [sp, #56]
  450f28:	str	x1, [x0, #24]
  450f2c:	ldr	x0, [sp, #56]
  450f30:	ldr	x0, [x0, #24]
  450f34:	cmn	x0, #0x1
  450f38:	b.ne	450f54 <argp_usage@@Base+0x7e68>  // b.any
  450f3c:	ldr	x0, [sp, #56]
  450f40:	mov	x1, #0x1                   	// #1
  450f44:	str	x1, [x0, #24]
  450f48:	ldr	x0, [sp, #56]
  450f4c:	strb	wzr, [x0, #32]
  450f50:	b	451030 <argp_usage@@Base+0x7f44>
  450f54:	ldr	x0, [sp, #56]
  450f58:	ldr	x0, [x0, #24]
  450f5c:	cmn	x0, #0x2
  450f60:	b.ne	450f88 <argp_usage@@Base+0x7e9c>  // b.any
  450f64:	ldr	x0, [sp, #56]
  450f68:	ldr	x0, [x0, #16]
  450f6c:	bl	4040b0 <strlen@plt>
  450f70:	mov	x1, x0
  450f74:	ldr	x0, [sp, #56]
  450f78:	str	x1, [x0, #24]
  450f7c:	ldr	x0, [sp, #56]
  450f80:	strb	wzr, [x0, #32]
  450f84:	b	451030 <argp_usage@@Base+0x7f44>
  450f88:	ldr	x0, [sp, #56]
  450f8c:	ldr	x0, [x0, #24]
  450f90:	cmp	x0, #0x0
  450f94:	b.ne	451008 <argp_usage@@Base+0x7f1c>  // b.any
  450f98:	ldr	x0, [sp, #56]
  450f9c:	mov	x1, #0x1                   	// #1
  450fa0:	str	x1, [x0, #24]
  450fa4:	ldr	x0, [sp, #56]
  450fa8:	ldr	x0, [x0, #16]
  450fac:	ldrb	w0, [x0]
  450fb0:	cmp	w0, #0x0
  450fb4:	b.eq	450fd8 <argp_usage@@Base+0x7eec>  // b.none
  450fb8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450fbc:	add	x3, x0, #0x928
  450fc0:	mov	w2, #0xb2                  	// #178
  450fc4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450fc8:	add	x1, x0, #0x8d0
  450fcc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450fd0:	add	x0, x0, #0x8f8
  450fd4:	bl	404bb0 <__assert_fail@plt>
  450fd8:	ldr	x0, [sp, #56]
  450fdc:	ldr	w0, [x0, #36]
  450fe0:	cmp	w0, #0x0
  450fe4:	b.eq	451008 <argp_usage@@Base+0x7f1c>  // b.none
  450fe8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450fec:	add	x3, x0, #0x928
  450ff0:	mov	w2, #0xb3                  	// #179
  450ff4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  450ff8:	add	x1, x0, #0x8d0
  450ffc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  451000:	add	x0, x0, #0x910
  451004:	bl	404bb0 <__assert_fail@plt>
  451008:	ldr	x0, [sp, #56]
  45100c:	mov	w1, #0x1                   	// #1
  451010:	strb	w1, [x0, #32]
  451014:	ldr	x0, [sp, #56]
  451018:	add	x0, x0, #0x4
  45101c:	bl	404730 <mbsinit@plt>
  451020:	cmp	w0, #0x0
  451024:	b.eq	451030 <argp_usage@@Base+0x7f44>  // b.none
  451028:	ldr	x0, [sp, #56]
  45102c:	strb	wzr, [x0]
  451030:	ldr	x0, [sp, #56]
  451034:	mov	w1, #0x1                   	// #1
  451038:	strb	w1, [x0, #12]
  45103c:	b	451044 <argp_usage@@Base+0x7f58>
  451040:	nop
  451044:	ldp	x19, x20, [sp, #16]
  451048:	ldr	x21, [sp, #32]
  45104c:	ldp	x29, x30, [sp], #64
  451050:	ret
  451054:	sub	sp, sp, #0x10
  451058:	str	x0, [sp, #8]
  45105c:	str	x1, [sp]
  451060:	ldr	x0, [sp, #8]
  451064:	ldr	x1, [x0, #16]
  451068:	ldr	x0, [sp]
  45106c:	add	x1, x1, x0
  451070:	ldr	x0, [sp, #8]
  451074:	str	x1, [x0, #16]
  451078:	nop
  45107c:	add	sp, sp, #0x10
  451080:	ret
  451084:	stp	x29, x30, [sp, #-32]!
  451088:	mov	x29, sp
  45108c:	str	x0, [sp, #24]
  451090:	str	x1, [sp, #16]
  451094:	ldr	x0, [sp, #16]
  451098:	ldrb	w1, [x0]
  45109c:	ldr	x0, [sp, #24]
  4510a0:	strb	w1, [x0]
  4510a4:	ldr	x0, [sp, #24]
  4510a8:	ldrb	w0, [x0]
  4510ac:	cmp	w0, #0x0
  4510b0:	b.eq	4510d0 <argp_usage@@Base+0x7fe4>  // b.none
  4510b4:	ldr	x0, [sp, #24]
  4510b8:	add	x0, x0, #0x4
  4510bc:	ldr	x1, [sp, #16]
  4510c0:	add	x1, x1, #0x4
  4510c4:	ldr	x1, [x1]
  4510c8:	str	x1, [x0]
  4510cc:	b	4510e4 <argp_usage@@Base+0x7ff8>
  4510d0:	ldr	x0, [sp, #24]
  4510d4:	add	x0, x0, #0x4
  4510d8:	mov	x2, #0x8                   	// #8
  4510dc:	mov	w1, #0x0                   	// #0
  4510e0:	bl	4044d0 <memset@plt>
  4510e4:	ldr	x0, [sp, #16]
  4510e8:	ldrb	w1, [x0, #12]
  4510ec:	ldr	x0, [sp, #24]
  4510f0:	strb	w1, [x0, #12]
  4510f4:	ldr	x0, [sp, #24]
  4510f8:	add	x2, x0, #0x10
  4510fc:	ldr	x0, [sp, #16]
  451100:	add	x0, x0, #0x10
  451104:	mov	x1, x0
  451108:	mov	x0, x2
  45110c:	bl	476e44 <_obstack_memory_used@@Base+0x19d04>
  451110:	nop
  451114:	ldp	x29, x30, [sp], #32
  451118:	ret
  45111c:	sub	sp, sp, #0x10
  451120:	str	w0, [sp, #12]
  451124:	ldr	w0, [sp, #12]
  451128:	add	sp, sp, #0x10
  45112c:	ret
  451130:	stp	x29, x30, [sp, #-48]!
  451134:	mov	x29, sp
  451138:	str	w0, [sp, #28]
  45113c:	str	w1, [sp, #24]
  451140:	mov	x0, #0x20                  	// #32
  451144:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  451148:	str	x0, [sp, #40]
  45114c:	ldr	x0, [sp, #40]
  451150:	mov	w1, #0x3d                  	// #61
  451154:	strb	w1, [x0]
  451158:	ldr	x0, [sp, #40]
  45115c:	mov	w1, #0x1                   	// #1
  451160:	strb	w1, [x0, #1]
  451164:	ldr	x0, [sp, #40]
  451168:	mov	w1, #0xfff                 	// #4095
  45116c:	str	w1, [x0, #4]
  451170:	ldr	x0, [sp, #40]
  451174:	ldr	w1, [sp, #28]
  451178:	str	w1, [x0, #8]
  45117c:	ldr	x0, [sp, #40]
  451180:	ldr	w1, [sp, #24]
  451184:	str	w1, [x0, #12]
  451188:	ldr	x0, [sp, #40]
  45118c:	add	x0, x0, #0x10
  451190:	strb	wzr, [x0, #1]
  451194:	ldr	x0, [sp, #40]
  451198:	ldp	x29, x30, [sp], #48
  45119c:	ret
  4511a0:	stp	x29, x30, [sp, #-128]!
  4511a4:	mov	x29, sp
  4511a8:	str	x0, [sp, #24]
  4511ac:	str	xzr, [sp, #120]
  4511b0:	ldr	x0, [sp, #24]
  4511b4:	ldrb	w0, [x0]
  4511b8:	cmp	w0, #0x2f
  4511bc:	b.ls	451294 <argp_usage@@Base+0x81a8>  // b.plast
  4511c0:	ldr	x0, [sp, #24]
  4511c4:	ldrb	w0, [x0]
  4511c8:	cmp	w0, #0x37
  4511cc:	b.hi	451294 <argp_usage@@Base+0x81a8>  // b.pmore
  4511d0:	str	wzr, [sp, #108]
  4511d4:	ldr	x0, [sp, #24]
  4511d8:	str	x0, [sp, #112]
  4511dc:	ldr	w0, [sp, #108]
  4511e0:	lsl	w1, w0, #3
  4511e4:	ldr	x0, [sp, #112]
  4511e8:	add	x2, x0, #0x1
  4511ec:	str	x2, [sp, #112]
  4511f0:	ldrb	w0, [x0]
  4511f4:	add	w0, w1, w0
  4511f8:	sub	w0, w0, #0x30
  4511fc:	str	w0, [sp, #108]
  451200:	ldr	w0, [sp, #108]
  451204:	cmp	w0, #0xfff
  451208:	b.ls	451214 <argp_usage@@Base+0x8128>  // b.plast
  45120c:	mov	x0, #0x0                   	// #0
  451210:	b	45175c <argp_usage@@Base+0x8670>
  451214:	ldr	x0, [sp, #112]
  451218:	ldrb	w0, [x0]
  45121c:	cmp	w0, #0x2f
  451220:	b.ls	451234 <argp_usage@@Base+0x8148>  // b.plast
  451224:	ldr	x0, [sp, #112]
  451228:	ldrb	w0, [x0]
  45122c:	cmp	w0, #0x37
  451230:	b.ls	4511dc <argp_usage@@Base+0x80f0>  // b.plast
  451234:	ldr	x0, [sp, #112]
  451238:	ldrb	w0, [x0]
  45123c:	cmp	w0, #0x0
  451240:	b.eq	45124c <argp_usage@@Base+0x8160>  // b.none
  451244:	mov	x0, #0x0                   	// #0
  451248:	b	45175c <argp_usage@@Base+0x8670>
  45124c:	ldr	w0, [sp, #108]
  451250:	bl	45111c <argp_usage@@Base+0x8030>
  451254:	str	w0, [sp, #72]
  451258:	ldr	x1, [sp, #112]
  45125c:	ldr	x0, [sp, #24]
  451260:	sub	x0, x1, x0
  451264:	cmp	x0, #0x4
  451268:	b.gt	45127c <argp_usage@@Base+0x8190>
  45126c:	ldr	w0, [sp, #72]
  451270:	and	w0, w0, #0xc00
  451274:	orr	w0, w0, #0x3ff
  451278:	b	451280 <argp_usage@@Base+0x8194>
  45127c:	mov	w0, #0xfff                 	// #4095
  451280:	str	w0, [sp, #68]
  451284:	ldr	w1, [sp, #68]
  451288:	ldr	w0, [sp, #72]
  45128c:	bl	451130 <argp_usage@@Base+0x8044>
  451290:	b	45175c <argp_usage@@Base+0x8670>
  451294:	mov	x0, #0x1                   	// #1
  451298:	str	x0, [sp, #96]
  45129c:	ldr	x0, [sp, #24]
  4512a0:	str	x0, [sp, #112]
  4512a4:	b	451300 <argp_usage@@Base+0x8214>
  4512a8:	ldr	x0, [sp, #112]
  4512ac:	ldrb	w0, [x0]
  4512b0:	cmp	w0, #0x3d
  4512b4:	b.eq	4512d8 <argp_usage@@Base+0x81ec>  // b.none
  4512b8:	ldr	x0, [sp, #112]
  4512bc:	ldrb	w0, [x0]
  4512c0:	cmp	w0, #0x2b
  4512c4:	b.eq	4512d8 <argp_usage@@Base+0x81ec>  // b.none
  4512c8:	ldr	x0, [sp, #112]
  4512cc:	ldrb	w0, [x0]
  4512d0:	cmp	w0, #0x2d
  4512d4:	b.ne	4512e0 <argp_usage@@Base+0x81f4>  // b.any
  4512d8:	mov	w0, #0x1                   	// #1
  4512dc:	b	4512e4 <argp_usage@@Base+0x81f8>
  4512e0:	mov	w0, #0x0                   	// #0
  4512e4:	sxtw	x0, w0
  4512e8:	ldr	x1, [sp, #96]
  4512ec:	add	x0, x1, x0
  4512f0:	str	x0, [sp, #96]
  4512f4:	ldr	x0, [sp, #112]
  4512f8:	add	x0, x0, #0x1
  4512fc:	str	x0, [sp, #112]
  451300:	ldr	x0, [sp, #112]
  451304:	ldrb	w0, [x0]
  451308:	cmp	w0, #0x0
  45130c:	b.ne	4512a8 <argp_usage@@Base+0x81bc>  // b.any
  451310:	mov	x1, #0x10                  	// #16
  451314:	ldr	x0, [sp, #96]
  451318:	bl	45b470 <argp_usage@@Base+0x12384>
  45131c:	str	x0, [sp, #56]
  451320:	ldr	x0, [sp, #24]
  451324:	str	x0, [sp, #112]
  451328:	str	wzr, [sp, #92]
  45132c:	ldr	x0, [sp, #112]
  451330:	ldrb	w0, [x0]
  451334:	cmp	w0, #0x75
  451338:	b.eq	451398 <argp_usage@@Base+0x82ac>  // b.none
  45133c:	cmp	w0, #0x75
  451340:	b.gt	451734 <argp_usage@@Base+0x8648>
  451344:	cmp	w0, #0x6f
  451348:	b.eq	4513c0 <argp_usage@@Base+0x82d4>  // b.none
  45134c:	cmp	w0, #0x6f
  451350:	b.gt	451734 <argp_usage@@Base+0x8648>
  451354:	cmp	w0, #0x67
  451358:	b.eq	4513ac <argp_usage@@Base+0x82c0>  // b.none
  45135c:	cmp	w0, #0x67
  451360:	b.gt	451734 <argp_usage@@Base+0x8648>
  451364:	cmp	w0, #0x61
  451368:	b.eq	4513d4 <argp_usage@@Base+0x82e8>  // b.none
  45136c:	cmp	w0, #0x61
  451370:	b.gt	451734 <argp_usage@@Base+0x8648>
  451374:	cmp	w0, #0x3d
  451378:	b.eq	4513f4 <argp_usage@@Base+0x8308>  // b.none
  45137c:	cmp	w0, #0x3d
  451380:	b.gt	451734 <argp_usage@@Base+0x8648>
  451384:	cmp	w0, #0x2b
  451388:	b.eq	4513f4 <argp_usage@@Base+0x8308>  // b.none
  45138c:	cmp	w0, #0x2d
  451390:	b.eq	4513f4 <argp_usage@@Base+0x8308>  // b.none
  451394:	b	451734 <argp_usage@@Base+0x8648>
  451398:	ldr	w1, [sp, #92]
  45139c:	mov	w0, #0x9c0                 	// #2496
  4513a0:	orr	w0, w1, w0
  4513a4:	str	w0, [sp, #92]
  4513a8:	b	4513e0 <argp_usage@@Base+0x82f4>
  4513ac:	ldr	w1, [sp, #92]
  4513b0:	mov	w0, #0x438                 	// #1080
  4513b4:	orr	w0, w1, w0
  4513b8:	str	w0, [sp, #92]
  4513bc:	b	4513e0 <argp_usage@@Base+0x82f4>
  4513c0:	ldr	w1, [sp, #92]
  4513c4:	mov	w0, #0x207                 	// #519
  4513c8:	orr	w0, w1, w0
  4513cc:	str	w0, [sp, #92]
  4513d0:	b	4513e0 <argp_usage@@Base+0x82f4>
  4513d4:	ldr	w0, [sp, #92]
  4513d8:	orr	w0, w0, #0xfff
  4513dc:	str	w0, [sp, #92]
  4513e0:	ldr	x0, [sp, #112]
  4513e4:	add	x0, x0, #0x1
  4513e8:	str	x0, [sp, #112]
  4513ec:	b	45132c <argp_usage@@Base+0x8240>
  4513f0:	nop
  4513f4:	ldr	x0, [sp, #112]
  4513f8:	add	x1, x0, #0x1
  4513fc:	str	x1, [sp, #112]
  451400:	ldrb	w0, [x0]
  451404:	strb	w0, [sp, #55]
  451408:	str	wzr, [sp, #84]
  45140c:	mov	w0, #0x3                   	// #3
  451410:	strb	w0, [sp, #83]
  451414:	ldr	x0, [sp, #112]
  451418:	ldrb	w0, [x0]
  45141c:	cmp	w0, #0x75
  451420:	b.eq	451504 <argp_usage@@Base+0x8418>  // b.none
  451424:	cmp	w0, #0x75
  451428:	b.gt	45154c <argp_usage@@Base+0x8460>
  45142c:	cmp	w0, #0x6f
  451430:	b.eq	451534 <argp_usage@@Base+0x8448>  // b.none
  451434:	cmp	w0, #0x6f
  451438:	b.gt	45154c <argp_usage@@Base+0x8460>
  45143c:	cmp	w0, #0x37
  451440:	b.gt	451450 <argp_usage@@Base+0x8364>
  451444:	cmp	w0, #0x30
  451448:	b.ge	45145c <argp_usage@@Base+0x8370>  // b.tcont
  45144c:	b	45154c <argp_usage@@Base+0x8460>
  451450:	cmp	w0, #0x67
  451454:	b.eq	45151c <argp_usage@@Base+0x8430>  // b.none
  451458:	b	45154c <argp_usage@@Base+0x8460>
  45145c:	str	wzr, [sp, #76]
  451460:	ldr	w0, [sp, #76]
  451464:	lsl	w1, w0, #3
  451468:	ldr	x0, [sp, #112]
  45146c:	add	x2, x0, #0x1
  451470:	str	x2, [sp, #112]
  451474:	ldrb	w0, [x0]
  451478:	add	w0, w1, w0
  45147c:	sub	w0, w0, #0x30
  451480:	str	w0, [sp, #76]
  451484:	ldr	w0, [sp, #76]
  451488:	cmp	w0, #0xfff
  45148c:	b.hi	45173c <argp_usage@@Base+0x8650>  // b.pmore
  451490:	ldr	x0, [sp, #112]
  451494:	ldrb	w0, [x0]
  451498:	cmp	w0, #0x2f
  45149c:	b.ls	4514b0 <argp_usage@@Base+0x83c4>  // b.plast
  4514a0:	ldr	x0, [sp, #112]
  4514a4:	ldrb	w0, [x0]
  4514a8:	cmp	w0, #0x37
  4514ac:	b.ls	451460 <argp_usage@@Base+0x8374>  // b.plast
  4514b0:	ldr	w0, [sp, #92]
  4514b4:	cmp	w0, #0x0
  4514b8:	b.ne	451744 <argp_usage@@Base+0x8658>  // b.any
  4514bc:	ldr	x0, [sp, #112]
  4514c0:	ldrb	w0, [x0]
  4514c4:	cmp	w0, #0x0
  4514c8:	b.eq	4514dc <argp_usage@@Base+0x83f0>  // b.none
  4514cc:	ldr	x0, [sp, #112]
  4514d0:	ldrb	w0, [x0]
  4514d4:	cmp	w0, #0x2c
  4514d8:	b.ne	451744 <argp_usage@@Base+0x8658>  // b.any
  4514dc:	mov	w0, #0xfff                 	// #4095
  4514e0:	str	w0, [sp, #84]
  4514e4:	ldr	w0, [sp, #84]
  4514e8:	str	w0, [sp, #92]
  4514ec:	ldr	w0, [sp, #76]
  4514f0:	bl	45111c <argp_usage@@Base+0x8030>
  4514f4:	str	w0, [sp, #88]
  4514f8:	mov	w0, #0x1                   	// #1
  4514fc:	strb	w0, [sp, #83]
  451500:	b	45162c <argp_usage@@Base+0x8540>
  451504:	mov	w0, #0x1c0                 	// #448
  451508:	str	w0, [sp, #88]
  45150c:	ldr	x0, [sp, #112]
  451510:	add	x0, x0, #0x1
  451514:	str	x0, [sp, #112]
  451518:	b	45162c <argp_usage@@Base+0x8540>
  45151c:	mov	w0, #0x38                  	// #56
  451520:	str	w0, [sp, #88]
  451524:	ldr	x0, [sp, #112]
  451528:	add	x0, x0, #0x1
  45152c:	str	x0, [sp, #112]
  451530:	b	45162c <argp_usage@@Base+0x8540>
  451534:	mov	w0, #0x7                   	// #7
  451538:	str	w0, [sp, #88]
  45153c:	ldr	x0, [sp, #112]
  451540:	add	x0, x0, #0x1
  451544:	str	x0, [sp, #112]
  451548:	b	45162c <argp_usage@@Base+0x8540>
  45154c:	str	wzr, [sp, #88]
  451550:	mov	w0, #0x1                   	// #1
  451554:	strb	w0, [sp, #83]
  451558:	ldr	x0, [sp, #112]
  45155c:	ldrb	w0, [x0]
  451560:	cmp	w0, #0x78
  451564:	b.eq	4515d8 <argp_usage@@Base+0x84ec>  // b.none
  451568:	cmp	w0, #0x78
  45156c:	b.gt	451628 <argp_usage@@Base+0x853c>
  451570:	cmp	w0, #0x77
  451574:	b.eq	4515c4 <argp_usage@@Base+0x84d8>  // b.none
  451578:	cmp	w0, #0x77
  45157c:	b.gt	451628 <argp_usage@@Base+0x853c>
  451580:	cmp	w0, #0x74
  451584:	b.eq	451608 <argp_usage@@Base+0x851c>  // b.none
  451588:	cmp	w0, #0x74
  45158c:	b.gt	451628 <argp_usage@@Base+0x853c>
  451590:	cmp	w0, #0x73
  451594:	b.eq	4515f8 <argp_usage@@Base+0x850c>  // b.none
  451598:	cmp	w0, #0x73
  45159c:	b.gt	451628 <argp_usage@@Base+0x853c>
  4515a0:	cmp	w0, #0x58
  4515a4:	b.eq	4515ec <argp_usage@@Base+0x8500>  // b.none
  4515a8:	cmp	w0, #0x72
  4515ac:	b.ne	451628 <argp_usage@@Base+0x853c>  // b.any
  4515b0:	ldr	w1, [sp, #88]
  4515b4:	mov	w0, #0x124                 	// #292
  4515b8:	orr	w0, w1, w0
  4515bc:	str	w0, [sp, #88]
  4515c0:	b	451618 <argp_usage@@Base+0x852c>
  4515c4:	ldr	w1, [sp, #88]
  4515c8:	mov	w0, #0x92                  	// #146
  4515cc:	orr	w0, w1, w0
  4515d0:	str	w0, [sp, #88]
  4515d4:	b	451618 <argp_usage@@Base+0x852c>
  4515d8:	ldr	w1, [sp, #88]
  4515dc:	mov	w0, #0x49                  	// #73
  4515e0:	orr	w0, w1, w0
  4515e4:	str	w0, [sp, #88]
  4515e8:	b	451618 <argp_usage@@Base+0x852c>
  4515ec:	mov	w0, #0x2                   	// #2
  4515f0:	strb	w0, [sp, #83]
  4515f4:	b	451618 <argp_usage@@Base+0x852c>
  4515f8:	ldr	w0, [sp, #88]
  4515fc:	orr	w0, w0, #0xc00
  451600:	str	w0, [sp, #88]
  451604:	b	451618 <argp_usage@@Base+0x852c>
  451608:	ldr	w0, [sp, #88]
  45160c:	orr	w0, w0, #0x200
  451610:	str	w0, [sp, #88]
  451614:	nop
  451618:	ldr	x0, [sp, #112]
  45161c:	add	x0, x0, #0x1
  451620:	str	x0, [sp, #112]
  451624:	b	451558 <argp_usage@@Base+0x846c>
  451628:	nop
  45162c:	ldr	x0, [sp, #120]
  451630:	add	x1, x0, #0x1
  451634:	str	x1, [sp, #120]
  451638:	lsl	x0, x0, #4
  45163c:	ldr	x1, [sp, #56]
  451640:	add	x0, x1, x0
  451644:	str	x0, [sp, #40]
  451648:	ldr	x0, [sp, #40]
  45164c:	ldrb	w1, [sp, #55]
  451650:	strb	w1, [x0]
  451654:	ldr	x0, [sp, #40]
  451658:	ldrb	w1, [sp, #83]
  45165c:	strb	w1, [x0, #1]
  451660:	ldr	x0, [sp, #40]
  451664:	ldr	w1, [sp, #92]
  451668:	str	w1, [x0, #4]
  45166c:	ldr	x0, [sp, #40]
  451670:	ldr	w1, [sp, #88]
  451674:	str	w1, [x0, #8]
  451678:	ldr	w0, [sp, #84]
  45167c:	cmp	w0, #0x0
  451680:	b.ne	4516a8 <argp_usage@@Base+0x85bc>  // b.any
  451684:	ldr	w0, [sp, #92]
  451688:	cmp	w0, #0x0
  45168c:	b.eq	4516a0 <argp_usage@@Base+0x85b4>  // b.none
  451690:	ldr	w1, [sp, #92]
  451694:	ldr	w0, [sp, #88]
  451698:	and	w0, w1, w0
  45169c:	b	4516ac <argp_usage@@Base+0x85c0>
  4516a0:	ldr	w0, [sp, #88]
  4516a4:	b	4516ac <argp_usage@@Base+0x85c0>
  4516a8:	ldr	w0, [sp, #84]
  4516ac:	ldr	x1, [sp, #40]
  4516b0:	str	w0, [x1, #12]
  4516b4:	ldr	x0, [sp, #112]
  4516b8:	ldrb	w0, [x0]
  4516bc:	cmp	w0, #0x3d
  4516c0:	b.eq	4513f0 <argp_usage@@Base+0x8304>  // b.none
  4516c4:	ldr	x0, [sp, #112]
  4516c8:	ldrb	w0, [x0]
  4516cc:	cmp	w0, #0x2b
  4516d0:	b.eq	4513f0 <argp_usage@@Base+0x8304>  // b.none
  4516d4:	ldr	x0, [sp, #112]
  4516d8:	ldrb	w0, [x0]
  4516dc:	cmp	w0, #0x2d
  4516e0:	b.eq	4513f0 <argp_usage@@Base+0x8304>  // b.none
  4516e4:	ldr	x0, [sp, #112]
  4516e8:	ldrb	w0, [x0]
  4516ec:	cmp	w0, #0x2c
  4516f0:	b.ne	451704 <argp_usage@@Base+0x8618>  // b.any
  4516f4:	ldr	x0, [sp, #112]
  4516f8:	add	x0, x0, #0x1
  4516fc:	str	x0, [sp, #112]
  451700:	b	451328 <argp_usage@@Base+0x823c>
  451704:	nop
  451708:	ldr	x0, [sp, #112]
  45170c:	ldrb	w0, [x0]
  451710:	cmp	w0, #0x0
  451714:	b.ne	45174c <argp_usage@@Base+0x8660>  // b.any
  451718:	ldr	x0, [sp, #120]
  45171c:	lsl	x0, x0, #4
  451720:	ldr	x1, [sp, #56]
  451724:	add	x0, x1, x0
  451728:	strb	wzr, [x0, #1]
  45172c:	ldr	x0, [sp, #56]
  451730:	b	45175c <argp_usage@@Base+0x8670>
  451734:	nop
  451738:	b	451750 <argp_usage@@Base+0x8664>
  45173c:	nop
  451740:	b	451750 <argp_usage@@Base+0x8664>
  451744:	nop
  451748:	b	451750 <argp_usage@@Base+0x8664>
  45174c:	nop
  451750:	ldr	x0, [sp, #56]
  451754:	bl	404880 <free@plt>
  451758:	mov	x0, #0x0                   	// #0
  45175c:	ldp	x29, x30, [sp], #128
  451760:	ret
  451764:	stp	x29, x30, [sp, #-160]!
  451768:	mov	x29, sp
  45176c:	str	x0, [sp, #24]
  451770:	add	x0, sp, #0x20
  451774:	mov	x1, x0
  451778:	ldr	x0, [sp, #24]
  45177c:	bl	47ec60 <_obstack_memory_used@@Base+0x21b20>
  451780:	cmp	w0, #0x0
  451784:	b.eq	451790 <argp_usage@@Base+0x86a4>  // b.none
  451788:	mov	x0, #0x0                   	// #0
  45178c:	b	45179c <argp_usage@@Base+0x86b0>
  451790:	ldr	w0, [sp, #48]
  451794:	mov	w1, #0xfff                 	// #4095
  451798:	bl	451130 <argp_usage@@Base+0x8044>
  45179c:	ldp	x29, x30, [sp], #160
  4517a0:	ret
  4517a4:	sub	sp, sp, #0x40
  4517a8:	str	w0, [sp, #28]
  4517ac:	strb	w1, [sp, #27]
  4517b0:	str	w2, [sp, #20]
  4517b4:	str	x3, [sp, #8]
  4517b8:	str	x4, [sp]
  4517bc:	ldr	w0, [sp, #28]
  4517c0:	and	w0, w0, #0xfff
  4517c4:	str	w0, [sp, #60]
  4517c8:	str	wzr, [sp, #56]
  4517cc:	b	451a1c <argp_usage@@Base+0x8930>
  4517d0:	ldr	x0, [sp, #8]
  4517d4:	ldr	w0, [x0, #4]
  4517d8:	str	w0, [sp, #48]
  4517dc:	ldrb	w0, [sp, #27]
  4517e0:	cmp	w0, #0x0
  4517e4:	b.eq	4517f0 <argp_usage@@Base+0x8704>  // b.none
  4517e8:	mov	w0, #0xc00                 	// #3072
  4517ec:	b	4517f4 <argp_usage@@Base+0x8708>
  4517f0:	mov	w0, #0x0                   	// #0
  4517f4:	ldr	x1, [sp, #8]
  4517f8:	ldr	w1, [x1, #12]
  4517fc:	mvn	w1, w1
  451800:	and	w0, w0, w1
  451804:	str	w0, [sp, #44]
  451808:	ldr	x0, [sp, #8]
  45180c:	ldr	w0, [x0, #8]
  451810:	str	w0, [sp, #52]
  451814:	ldr	x0, [sp, #8]
  451818:	ldrb	w0, [x0, #1]
  45181c:	cmp	w0, #0x3
  451820:	b.eq	451840 <argp_usage@@Base+0x8754>  // b.none
  451824:	cmp	w0, #0x3
  451828:	b.gt	451908 <argp_usage@@Base+0x881c>
  45182c:	cmp	w0, #0x1
  451830:	b.eq	4518fc <argp_usage@@Base+0x8810>  // b.none
  451834:	cmp	w0, #0x2
  451838:	b.eq	4518cc <argp_usage@@Base+0x87e0>  // b.none
  45183c:	b	451908 <argp_usage@@Base+0x881c>
  451840:	ldr	w1, [sp, #52]
  451844:	ldr	w0, [sp, #60]
  451848:	and	w0, w1, w0
  45184c:	str	w0, [sp, #52]
  451850:	ldr	w1, [sp, #52]
  451854:	mov	w0, #0x124                 	// #292
  451858:	and	w0, w1, w0
  45185c:	cmp	w0, #0x0
  451860:	b.eq	45186c <argp_usage@@Base+0x8780>  // b.none
  451864:	mov	w1, #0x124                 	// #292
  451868:	b	451870 <argp_usage@@Base+0x8784>
  45186c:	mov	w1, #0x0                   	// #0
  451870:	ldr	w2, [sp, #52]
  451874:	mov	w0, #0x92                  	// #146
  451878:	and	w0, w2, w0
  45187c:	cmp	w0, #0x0
  451880:	b.eq	45188c <argp_usage@@Base+0x87a0>  // b.none
  451884:	mov	w0, #0x92                  	// #146
  451888:	b	451890 <argp_usage@@Base+0x87a4>
  45188c:	mov	w0, #0x0                   	// #0
  451890:	orr	w1, w1, w0
  451894:	ldr	w2, [sp, #52]
  451898:	mov	w0, #0x49                  	// #73
  45189c:	and	w0, w2, w0
  4518a0:	cmp	w0, #0x0
  4518a4:	b.eq	4518b0 <argp_usage@@Base+0x87c4>  // b.none
  4518a8:	mov	w0, #0x49                  	// #73
  4518ac:	b	4518b4 <argp_usage@@Base+0x87c8>
  4518b0:	mov	w0, #0x0                   	// #0
  4518b4:	orr	w0, w0, w1
  4518b8:	mov	w1, w0
  4518bc:	ldr	w0, [sp, #52]
  4518c0:	orr	w0, w0, w1
  4518c4:	str	w0, [sp, #52]
  4518c8:	b	451908 <argp_usage@@Base+0x881c>
  4518cc:	ldr	w1, [sp, #60]
  4518d0:	mov	w0, #0x49                  	// #73
  4518d4:	and	w1, w1, w0
  4518d8:	ldrb	w0, [sp, #27]
  4518dc:	orr	w0, w1, w0
  4518e0:	cmp	w0, #0x0
  4518e4:	b.eq	451904 <argp_usage@@Base+0x8818>  // b.none
  4518e8:	ldr	w1, [sp, #52]
  4518ec:	mov	w0, #0x49                  	// #73
  4518f0:	orr	w0, w1, w0
  4518f4:	str	w0, [sp, #52]
  4518f8:	b	451904 <argp_usage@@Base+0x8818>
  4518fc:	nop
  451900:	b	451908 <argp_usage@@Base+0x881c>
  451904:	nop
  451908:	ldr	w0, [sp, #48]
  45190c:	cmp	w0, #0x0
  451910:	b.ne	451920 <argp_usage@@Base+0x8834>  // b.any
  451914:	ldr	w0, [sp, #20]
  451918:	mvn	w0, w0
  45191c:	b	451924 <argp_usage@@Base+0x8838>
  451920:	ldr	w0, [sp, #48]
  451924:	ldr	w1, [sp, #44]
  451928:	mvn	w1, w1
  45192c:	and	w0, w0, w1
  451930:	ldr	w1, [sp, #52]
  451934:	and	w0, w1, w0
  451938:	str	w0, [sp, #52]
  45193c:	ldr	x0, [sp, #8]
  451940:	ldrb	w0, [x0]
  451944:	cmp	w0, #0x3d
  451948:	b.eq	451968 <argp_usage@@Base+0x887c>  // b.none
  45194c:	cmp	w0, #0x3d
  451950:	b.gt	451a10 <argp_usage@@Base+0x8924>
  451954:	cmp	w0, #0x2b
  451958:	b.eq	4519c4 <argp_usage@@Base+0x88d8>  // b.none
  45195c:	cmp	w0, #0x2d
  451960:	b.eq	4519e8 <argp_usage@@Base+0x88fc>  // b.none
  451964:	b	451a10 <argp_usage@@Base+0x8924>
  451968:	ldr	w0, [sp, #48]
  45196c:	cmp	w0, #0x0
  451970:	b.eq	451980 <argp_usage@@Base+0x8894>  // b.none
  451974:	ldr	w0, [sp, #48]
  451978:	mvn	w0, w0
  45197c:	b	451984 <argp_usage@@Base+0x8898>
  451980:	mov	w0, #0x0                   	// #0
  451984:	ldr	w1, [sp, #44]
  451988:	orr	w0, w0, w1
  45198c:	str	w0, [sp, #40]
  451990:	ldr	w0, [sp, #40]
  451994:	mvn	w0, w0
  451998:	and	w0, w0, #0xfff
  45199c:	ldr	w1, [sp, #56]
  4519a0:	orr	w0, w1, w0
  4519a4:	str	w0, [sp, #56]
  4519a8:	ldr	w1, [sp, #60]
  4519ac:	ldr	w0, [sp, #40]
  4519b0:	and	w0, w1, w0
  4519b4:	ldr	w1, [sp, #52]
  4519b8:	orr	w0, w1, w0
  4519bc:	str	w0, [sp, #60]
  4519c0:	b	451a10 <argp_usage@@Base+0x8924>
  4519c4:	ldr	w1, [sp, #56]
  4519c8:	ldr	w0, [sp, #52]
  4519cc:	orr	w0, w1, w0
  4519d0:	str	w0, [sp, #56]
  4519d4:	ldr	w1, [sp, #60]
  4519d8:	ldr	w0, [sp, #52]
  4519dc:	orr	w0, w1, w0
  4519e0:	str	w0, [sp, #60]
  4519e4:	b	451a10 <argp_usage@@Base+0x8924>
  4519e8:	ldr	w1, [sp, #56]
  4519ec:	ldr	w0, [sp, #52]
  4519f0:	orr	w0, w1, w0
  4519f4:	str	w0, [sp, #56]
  4519f8:	ldr	w0, [sp, #52]
  4519fc:	mvn	w0, w0
  451a00:	ldr	w1, [sp, #60]
  451a04:	and	w0, w1, w0
  451a08:	str	w0, [sp, #60]
  451a0c:	nop
  451a10:	ldr	x0, [sp, #8]
  451a14:	add	x0, x0, #0x10
  451a18:	str	x0, [sp, #8]
  451a1c:	ldr	x0, [sp, #8]
  451a20:	ldrb	w0, [x0, #1]
  451a24:	cmp	w0, #0x0
  451a28:	b.ne	4517d0 <argp_usage@@Base+0x86e4>  // b.any
  451a2c:	ldr	x0, [sp]
  451a30:	cmp	x0, #0x0
  451a34:	b.eq	451a44 <argp_usage@@Base+0x8958>  // b.none
  451a38:	ldr	x0, [sp]
  451a3c:	ldr	w1, [sp, #56]
  451a40:	str	w1, [x0]
  451a44:	ldr	w0, [sp, #60]
  451a48:	add	sp, sp, #0x40
  451a4c:	ret
  451a50:	stp	x29, x30, [sp, #-48]!
  451a54:	mov	x29, sp
  451a58:	str	x19, [sp, #16]
  451a5c:	str	w0, [sp, #44]
  451a60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  451a64:	add	x0, x0, #0x418
  451a68:	ldr	w19, [x0]
  451a6c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  451a70:	add	x0, x0, #0x940
  451a74:	bl	404c60 <gettext@plt>
  451a78:	mov	x2, x0
  451a7c:	ldr	w1, [sp, #44]
  451a80:	mov	w0, w19
  451a84:	bl	404100 <error@plt>
  451a88:	bl	404710 <abort@plt>
  451a8c:	stp	x29, x30, [sp, #-48]!
  451a90:	mov	x29, sp
  451a94:	str	x19, [sp, #16]
  451a98:	str	w0, [sp, #44]
  451a9c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  451aa0:	add	x0, x0, #0x418
  451aa4:	ldr	w19, [x0]
  451aa8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  451aac:	add	x0, x0, #0x970
  451ab0:	bl	404c60 <gettext@plt>
  451ab4:	mov	x2, x0
  451ab8:	ldr	w1, [sp, #44]
  451abc:	mov	w0, w19
  451ac0:	bl	404100 <error@plt>
  451ac4:	bl	404710 <abort@plt>
  451ac8:	stp	x29, x30, [sp, #-80]!
  451acc:	mov	x29, sp
  451ad0:	str	w0, [sp, #44]
  451ad4:	str	x1, [sp, #32]
  451ad8:	str	w2, [sp, #40]
  451adc:	str	x3, [sp, #24]
  451ae0:	ldr	w1, [sp, #40]
  451ae4:	mov	w0, #0x4900                	// #18688
  451ae8:	movk	w0, #0x8, lsl #16
  451aec:	orr	w0, w1, w0
  451af0:	str	w0, [sp, #76]
  451af4:	ldr	w2, [sp, #76]
  451af8:	ldr	x1, [sp, #32]
  451afc:	ldr	w0, [sp, #44]
  451b00:	bl	479604 <_obstack_memory_used@@Base+0x1c4c4>
  451b04:	str	w0, [sp, #72]
  451b08:	ldr	w0, [sp, #72]
  451b0c:	cmp	w0, #0x0
  451b10:	b.ge	451b1c <argp_usage@@Base+0x8a30>  // b.tcont
  451b14:	mov	x0, #0x0                   	// #0
  451b18:	b	451b6c <argp_usage@@Base+0x8a80>
  451b1c:	ldr	w0, [sp, #72]
  451b20:	bl	4046c0 <fdopendir@plt>
  451b24:	str	x0, [sp, #64]
  451b28:	ldr	x0, [sp, #64]
  451b2c:	cmp	x0, #0x0
  451b30:	b.eq	451b44 <argp_usage@@Base+0x8a58>  // b.none
  451b34:	ldr	x0, [sp, #24]
  451b38:	ldr	w1, [sp, #72]
  451b3c:	str	w1, [x0]
  451b40:	b	451b68 <argp_usage@@Base+0x8a7c>
  451b44:	bl	404bc0 <__errno_location@plt>
  451b48:	ldr	w0, [x0]
  451b4c:	str	w0, [sp, #60]
  451b50:	ldr	w0, [sp, #72]
  451b54:	bl	404660 <close@plt>
  451b58:	bl	404bc0 <__errno_location@plt>
  451b5c:	mov	x1, x0
  451b60:	ldr	w0, [sp, #60]
  451b64:	str	w0, [x1]
  451b68:	ldr	x0, [sp, #64]
  451b6c:	ldp	x29, x30, [sp], #80
  451b70:	ret
  451b74:	sub	sp, sp, #0x10
  451b78:	str	x0, [sp, #8]
  451b7c:	mov	w0, #0x0                   	// #0
  451b80:	add	sp, sp, #0x10
  451b84:	ret
  451b88:	sub	sp, sp, #0x10
  451b8c:	strb	w0, [sp, #15]
  451b90:	ldrb	w0, [sp, #15]
  451b94:	add	sp, sp, #0x10
  451b98:	ret
  451b9c:	stp	x29, x30, [sp, #-288]!
  451ba0:	mov	x29, sp
  451ba4:	str	x0, [sp, #56]
  451ba8:	str	x1, [sp, #232]
  451bac:	str	x2, [sp, #240]
  451bb0:	str	x3, [sp, #248]
  451bb4:	str	x4, [sp, #256]
  451bb8:	str	x5, [sp, #264]
  451bbc:	str	x6, [sp, #272]
  451bc0:	str	x7, [sp, #280]
  451bc4:	str	q0, [sp, #96]
  451bc8:	str	q1, [sp, #112]
  451bcc:	str	q2, [sp, #128]
  451bd0:	str	q3, [sp, #144]
  451bd4:	str	q4, [sp, #160]
  451bd8:	str	q5, [sp, #176]
  451bdc:	str	q6, [sp, #192]
  451be0:	str	q7, [sp, #208]
  451be4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  451be8:	add	x0, x0, #0x498
  451bec:	ldr	x0, [x0]
  451bf0:	mov	x3, x0
  451bf4:	mov	x2, #0x6                   	// #6
  451bf8:	mov	x1, #0x1                   	// #1
  451bfc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  451c00:	add	x0, x0, #0x9a0
  451c04:	bl	404970 <fwrite@plt>
  451c08:	add	x0, sp, #0x120
  451c0c:	str	x0, [sp, #64]
  451c10:	add	x0, sp, #0x120
  451c14:	str	x0, [sp, #72]
  451c18:	add	x0, sp, #0xe0
  451c1c:	str	x0, [sp, #80]
  451c20:	mov	w0, #0xffffffc8            	// #-56
  451c24:	str	w0, [sp, #88]
  451c28:	mov	w0, #0xffffff80            	// #-128
  451c2c:	str	w0, [sp, #92]
  451c30:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  451c34:	add	x0, x0, #0x498
  451c38:	ldr	x4, [x0]
  451c3c:	add	x2, sp, #0x10
  451c40:	add	x3, sp, #0x40
  451c44:	ldp	x0, x1, [x3]
  451c48:	stp	x0, x1, [x2]
  451c4c:	ldp	x0, x1, [x3, #16]
  451c50:	stp	x0, x1, [x2, #16]
  451c54:	add	x0, sp, #0x10
  451c58:	mov	x2, x0
  451c5c:	ldr	x1, [sp, #56]
  451c60:	mov	x0, x4
  451c64:	bl	404b80 <vfprintf@plt>
  451c68:	nop
  451c6c:	ldp	x29, x30, [sp], #288
  451c70:	ret
  451c74:	str	x19, [sp, #-32]!
  451c78:	str	x0, [sp, #24]
  451c7c:	mov	x19, x1
  451c80:	ldr	x0, [sp, #24]
  451c84:	ldr	x0, [x0, #168]
  451c88:	cmp	x0, #0x0
  451c8c:	b.eq	451d04 <argp_usage@@Base+0x8c18>  // b.none
  451c90:	ldr	x0, [sp, #24]
  451c94:	ldr	x0, [x0, #48]
  451c98:	cmp	x0, #0x0
  451c9c:	b.ne	451d04 <argp_usage@@Base+0x8c18>  // b.any
  451ca0:	ldr	x0, [sp, #24]
  451ca4:	ldrb	w0, [x0, #161]
  451ca8:	eor	w0, w0, #0x1
  451cac:	and	w0, w0, #0xff
  451cb0:	cmp	w0, #0x0
  451cb4:	b.eq	451d04 <argp_usage@@Base+0x8c18>  // b.none
  451cb8:	ldr	x0, [sp, #24]
  451cbc:	ldr	x0, [x0, #200]
  451cc0:	cmp	x0, #0x0
  451cc4:	b.ne	451cd4 <argp_usage@@Base+0x8be8>  // b.any
  451cc8:	ldr	x0, [x19, #16]
  451ccc:	cmp	x0, #0x2
  451cd0:	b.le	451d04 <argp_usage@@Base+0x8c18>
  451cd4:	ldr	x0, [sp, #24]
  451cd8:	mov	w1, #0x1                   	// #1
  451cdc:	strb	w1, [x0, #216]
  451ce0:	ldr	x0, [sp, #24]
  451ce4:	add	x0, x0, #0x20
  451ce8:	mov	x2, x0
  451cec:	mov	x3, x19
  451cf0:	ldp	x0, x1, [x3]
  451cf4:	stp	x0, x1, [x2]
  451cf8:	ldr	x0, [x3, #16]
  451cfc:	str	x0, [x2, #16]
  451d00:	b	451ef0 <argp_usage@@Base+0x8e04>
  451d04:	ldr	x0, [x19, #16]
  451d08:	cmp	x0, #0x4
  451d0c:	b.le	451e20 <argp_usage@@Base+0x8d34>
  451d10:	ldr	x0, [sp, #24]
  451d14:	ldr	x0, [x0, #168]
  451d18:	add	x1, x0, #0x1
  451d1c:	ldr	x0, [sp, #24]
  451d20:	str	x1, [x0, #168]
  451d24:	ldr	x2, [x19, #8]
  451d28:	mov	x0, #0xd70b                	// #55051
  451d2c:	movk	x0, #0x70a3, lsl #16
  451d30:	movk	x0, #0xa3d, lsl #32
  451d34:	movk	x0, #0xa3d7, lsl #48
  451d38:	smulh	x0, x2, x0
  451d3c:	add	x0, x0, x2
  451d40:	asr	x1, x0, #6
  451d44:	asr	x0, x2, #63
  451d48:	sub	x1, x1, x0
  451d4c:	mov	x0, x1
  451d50:	lsl	x0, x0, #1
  451d54:	add	x0, x0, x1
  451d58:	lsl	x0, x0, #3
  451d5c:	add	x0, x0, x1
  451d60:	lsl	x0, x0, #2
  451d64:	sub	x1, x2, x0
  451d68:	ldr	x0, [sp, #24]
  451d6c:	str	x1, [x0, #64]
  451d70:	ldr	x0, [x19, #8]
  451d74:	mov	x1, #0xd70b                	// #55051
  451d78:	movk	x1, #0x70a3, lsl #16
  451d7c:	movk	x1, #0xa3d, lsl #32
  451d80:	movk	x1, #0xa3d7, lsl #48
  451d84:	smulh	x1, x0, x1
  451d88:	add	x1, x1, x0
  451d8c:	asr	x1, x1, #6
  451d90:	asr	x0, x0, #63
  451d94:	sub	x2, x1, x0
  451d98:	mov	x0, #0xd70b                	// #55051
  451d9c:	movk	x0, #0x70a3, lsl #16
  451da0:	movk	x0, #0xa3d, lsl #32
  451da4:	movk	x0, #0xa3d7, lsl #48
  451da8:	smulh	x0, x2, x0
  451dac:	add	x0, x0, x2
  451db0:	asr	x1, x0, #6
  451db4:	asr	x0, x2, #63
  451db8:	sub	x1, x1, x0
  451dbc:	mov	x0, x1
  451dc0:	lsl	x0, x0, #1
  451dc4:	add	x0, x0, x1
  451dc8:	lsl	x0, x0, #3
  451dcc:	add	x0, x0, x1
  451dd0:	lsl	x0, x0, #2
  451dd4:	sub	x1, x2, x0
  451dd8:	ldr	x0, [sp, #24]
  451ddc:	str	x1, [x0, #56]
  451de0:	ldr	x0, [x19, #8]
  451de4:	mov	x1, #0x594b                	// #22859
  451de8:	movk	x1, #0x3886, lsl #16
  451dec:	movk	x1, #0xc5d6, lsl #32
  451df0:	movk	x1, #0x346d, lsl #48
  451df4:	smulh	x1, x0, x1
  451df8:	asr	x1, x1, #11
  451dfc:	asr	x0, x0, #63
  451e00:	sub	x1, x1, x0
  451e04:	ldr	x0, [sp, #24]
  451e08:	str	x1, [x0, #40]
  451e0c:	ldr	x0, [x19, #16]
  451e10:	sub	x1, x0, #0x4
  451e14:	ldr	x0, [sp, #24]
  451e18:	str	x1, [x0, #48]
  451e1c:	b	451ef0 <argp_usage@@Base+0x8e04>
  451e20:	ldr	x0, [sp, #24]
  451e24:	ldr	x0, [x0, #200]
  451e28:	add	x1, x0, #0x1
  451e2c:	ldr	x0, [sp, #24]
  451e30:	str	x1, [x0, #200]
  451e34:	ldr	x0, [x19, #16]
  451e38:	cmp	x0, #0x2
  451e3c:	b.gt	451e58 <argp_usage@@Base+0x8d6c>
  451e40:	ldr	x1, [x19, #8]
  451e44:	ldr	x0, [sp, #24]
  451e48:	str	x1, [x0, #72]
  451e4c:	ldr	x0, [sp, #24]
  451e50:	str	xzr, [x0, #80]
  451e54:	b	451ed4 <argp_usage@@Base+0x8de8>
  451e58:	ldr	x0, [x19, #8]
  451e5c:	mov	x1, #0xd70b                	// #55051
  451e60:	movk	x1, #0x70a3, lsl #16
  451e64:	movk	x1, #0xa3d, lsl #32
  451e68:	movk	x1, #0xa3d7, lsl #48
  451e6c:	smulh	x1, x0, x1
  451e70:	add	x1, x1, x0
  451e74:	asr	x1, x1, #6
  451e78:	asr	x0, x0, #63
  451e7c:	sub	x1, x1, x0
  451e80:	ldr	x0, [sp, #24]
  451e84:	str	x1, [x0, #72]
  451e88:	ldr	x2, [x19, #8]
  451e8c:	mov	x0, #0xd70b                	// #55051
  451e90:	movk	x0, #0x70a3, lsl #16
  451e94:	movk	x0, #0xa3d, lsl #32
  451e98:	movk	x0, #0xa3d7, lsl #48
  451e9c:	smulh	x0, x2, x0
  451ea0:	add	x0, x0, x2
  451ea4:	asr	x1, x0, #6
  451ea8:	asr	x0, x2, #63
  451eac:	sub	x1, x1, x0
  451eb0:	mov	x0, x1
  451eb4:	lsl	x0, x0, #1
  451eb8:	add	x0, x0, x1
  451ebc:	lsl	x0, x0, #3
  451ec0:	add	x0, x0, x1
  451ec4:	lsl	x0, x0, #2
  451ec8:	sub	x1, x2, x0
  451ecc:	ldr	x0, [sp, #24]
  451ed0:	str	x1, [x0, #80]
  451ed4:	ldr	x0, [sp, #24]
  451ed8:	str	xzr, [x0, #88]
  451edc:	ldr	x0, [sp, #24]
  451ee0:	str	xzr, [x0, #96]
  451ee4:	ldr	x0, [sp, #24]
  451ee8:	mov	w1, #0x2                   	// #2
  451eec:	str	w1, [x0, #28]
  451ef0:	nop
  451ef4:	ldr	x19, [sp], #32
  451ef8:	ret
  451efc:	str	x19, [sp, #-32]!
  451f00:	str	x0, [sp, #24]
  451f04:	mov	x19, x1
  451f08:	str	w2, [sp, #20]
  451f0c:	ldr	w0, [sp, #20]
  451f10:	cmp	w0, #0x0
  451f14:	b.ge	4520b8 <argp_usage@@Base+0x8fcc>  // b.tcont
  451f18:	ldr	x0, [sp, #24]
  451f1c:	ldr	w1, [x0, #152]
  451f20:	ldr	w0, [x19, #48]
  451f24:	mov	w8, #0x0                   	// #0
  451f28:	subs	w0, w1, w0
  451f2c:	b.vc	451f34 <argp_usage@@Base+0x8e48>
  451f30:	mov	w8, #0x1                   	// #1
  451f34:	mov	w1, w0
  451f38:	ldr	x0, [sp, #24]
  451f3c:	str	w1, [x0, #152]
  451f40:	ldr	x0, [sp, #24]
  451f44:	ldr	x1, [x0, #144]
  451f48:	ldr	x0, [x19, #40]
  451f4c:	mov	x7, #0x0                   	// #0
  451f50:	subs	x0, x1, x0
  451f54:	b.vc	451f5c <argp_usage@@Base+0x8e70>
  451f58:	mov	x7, #0x1                   	// #1
  451f5c:	mov	x1, x0
  451f60:	ldr	x0, [sp, #24]
  451f64:	str	x1, [x0, #144]
  451f68:	ldr	x0, [sp, #24]
  451f6c:	ldr	x1, [x0, #136]
  451f70:	ldr	x0, [x19, #32]
  451f74:	mov	x6, #0x0                   	// #0
  451f78:	subs	x0, x1, x0
  451f7c:	b.vc	451f84 <argp_usage@@Base+0x8e98>
  451f80:	mov	x6, #0x1                   	// #1
  451f84:	mov	x1, x0
  451f88:	ldr	x0, [sp, #24]
  451f8c:	str	x1, [x0, #136]
  451f90:	ldr	x0, [sp, #24]
  451f94:	ldr	x1, [x0, #128]
  451f98:	ldr	x0, [x19, #24]
  451f9c:	mov	x5, #0x0                   	// #0
  451fa0:	subs	x0, x1, x0
  451fa4:	b.vc	451fac <argp_usage@@Base+0x8ec0>
  451fa8:	mov	x5, #0x1                   	// #1
  451fac:	mov	x1, x0
  451fb0:	ldr	x0, [sp, #24]
  451fb4:	str	x1, [x0, #128]
  451fb8:	ldr	x0, [sp, #24]
  451fbc:	ldr	x1, [x0, #120]
  451fc0:	ldr	x0, [x19, #16]
  451fc4:	mov	x4, #0x0                   	// #0
  451fc8:	subs	x0, x1, x0
  451fcc:	b.vc	451fd4 <argp_usage@@Base+0x8ee8>
  451fd0:	mov	x4, #0x1                   	// #1
  451fd4:	mov	x1, x0
  451fd8:	ldr	x0, [sp, #24]
  451fdc:	str	x1, [x0, #120]
  451fe0:	ldr	x0, [sp, #24]
  451fe4:	ldr	x1, [x0, #112]
  451fe8:	ldr	x0, [x19, #8]
  451fec:	mov	x3, #0x0                   	// #0
  451ff0:	subs	x0, x1, x0
  451ff4:	b.vc	451ffc <argp_usage@@Base+0x8f10>
  451ff8:	mov	x3, #0x1                   	// #1
  451ffc:	mov	x1, x0
  452000:	ldr	x0, [sp, #24]
  452004:	str	x1, [x0, #112]
  452008:	ldr	x0, [sp, #24]
  45200c:	ldr	x1, [x0, #104]
  452010:	ldr	x0, [x19]
  452014:	mov	x2, #0x0                   	// #0
  452018:	subs	x0, x1, x0
  45201c:	b.vc	452024 <argp_usage@@Base+0x8f38>
  452020:	mov	x2, #0x1                   	// #1
  452024:	mov	x1, x0
  452028:	ldr	x0, [sp, #24]
  45202c:	str	x1, [x0, #104]
  452030:	mov	w0, w8
  452034:	and	w0, w0, #0x1
  452038:	and	w1, w0, #0xff
  45203c:	mov	x0, x7
  452040:	and	w0, w0, #0x1
  452044:	and	w0, w0, #0xff
  452048:	orr	w0, w1, w0
  45204c:	and	w1, w0, #0xff
  452050:	mov	x0, x6
  452054:	and	w0, w0, #0x1
  452058:	and	w0, w0, #0xff
  45205c:	orr	w0, w1, w0
  452060:	and	w1, w0, #0xff
  452064:	mov	x0, x5
  452068:	and	w0, w0, #0x1
  45206c:	and	w0, w0, #0xff
  452070:	orr	w0, w1, w0
  452074:	and	w1, w0, #0xff
  452078:	mov	x0, x4
  45207c:	and	w0, w0, #0x1
  452080:	and	w0, w0, #0xff
  452084:	orr	w0, w1, w0
  452088:	and	w1, w0, #0xff
  45208c:	mov	x0, x3
  452090:	and	w0, w0, #0x1
  452094:	and	w0, w0, #0xff
  452098:	orr	w0, w1, w0
  45209c:	and	w1, w0, #0xff
  4520a0:	mov	x0, x2
  4520a4:	and	w0, w0, #0x1
  4520a8:	and	w0, w0, #0xff
  4520ac:	orr	w0, w1, w0
  4520b0:	and	w0, w0, #0xff
  4520b4:	b	452254 <argp_usage@@Base+0x9168>
  4520b8:	ldr	x0, [sp, #24]
  4520bc:	ldr	w1, [x0, #152]
  4520c0:	ldr	w0, [x19, #48]
  4520c4:	mov	w8, #0x0                   	// #0
  4520c8:	adds	w0, w1, w0
  4520cc:	b.vc	4520d4 <argp_usage@@Base+0x8fe8>
  4520d0:	mov	w8, #0x1                   	// #1
  4520d4:	mov	w1, w0
  4520d8:	ldr	x0, [sp, #24]
  4520dc:	str	w1, [x0, #152]
  4520e0:	ldr	x0, [sp, #24]
  4520e4:	ldr	x1, [x0, #144]
  4520e8:	ldr	x0, [x19, #40]
  4520ec:	mov	x7, #0x0                   	// #0
  4520f0:	adds	x0, x1, x0
  4520f4:	b.vc	4520fc <argp_usage@@Base+0x9010>
  4520f8:	mov	x7, #0x1                   	// #1
  4520fc:	mov	x1, x0
  452100:	ldr	x0, [sp, #24]
  452104:	str	x1, [x0, #144]
  452108:	ldr	x0, [sp, #24]
  45210c:	ldr	x1, [x0, #136]
  452110:	ldr	x0, [x19, #32]
  452114:	mov	x6, #0x0                   	// #0
  452118:	adds	x0, x1, x0
  45211c:	b.vc	452124 <argp_usage@@Base+0x9038>
  452120:	mov	x6, #0x1                   	// #1
  452124:	mov	x1, x0
  452128:	ldr	x0, [sp, #24]
  45212c:	str	x1, [x0, #136]
  452130:	ldr	x0, [sp, #24]
  452134:	ldr	x1, [x0, #128]
  452138:	ldr	x0, [x19, #24]
  45213c:	mov	x5, #0x0                   	// #0
  452140:	adds	x0, x1, x0
  452144:	b.vc	45214c <argp_usage@@Base+0x9060>
  452148:	mov	x5, #0x1                   	// #1
  45214c:	mov	x1, x0
  452150:	ldr	x0, [sp, #24]
  452154:	str	x1, [x0, #128]
  452158:	ldr	x0, [sp, #24]
  45215c:	ldr	x1, [x0, #120]
  452160:	ldr	x0, [x19, #16]
  452164:	mov	x4, #0x0                   	// #0
  452168:	adds	x0, x1, x0
  45216c:	b.vc	452174 <argp_usage@@Base+0x9088>
  452170:	mov	x4, #0x1                   	// #1
  452174:	mov	x1, x0
  452178:	ldr	x0, [sp, #24]
  45217c:	str	x1, [x0, #120]
  452180:	ldr	x0, [sp, #24]
  452184:	ldr	x1, [x0, #112]
  452188:	ldr	x0, [x19, #8]
  45218c:	mov	x3, #0x0                   	// #0
  452190:	adds	x0, x1, x0
  452194:	b.vc	45219c <argp_usage@@Base+0x90b0>
  452198:	mov	x3, #0x1                   	// #1
  45219c:	mov	x1, x0
  4521a0:	ldr	x0, [sp, #24]
  4521a4:	str	x1, [x0, #112]
  4521a8:	ldr	x0, [sp, #24]
  4521ac:	ldr	x1, [x0, #104]
  4521b0:	ldr	x0, [x19]
  4521b4:	mov	x2, #0x0                   	// #0
  4521b8:	adds	x0, x1, x0
  4521bc:	b.vc	4521c4 <argp_usage@@Base+0x90d8>
  4521c0:	mov	x2, #0x1                   	// #1
  4521c4:	mov	x1, x0
  4521c8:	ldr	x0, [sp, #24]
  4521cc:	str	x1, [x0, #104]
  4521d0:	mov	w0, w8
  4521d4:	and	w0, w0, #0x1
  4521d8:	and	w1, w0, #0xff
  4521dc:	mov	x0, x7
  4521e0:	and	w0, w0, #0x1
  4521e4:	and	w0, w0, #0xff
  4521e8:	orr	w0, w1, w0
  4521ec:	and	w1, w0, #0xff
  4521f0:	mov	x0, x6
  4521f4:	and	w0, w0, #0x1
  4521f8:	and	w0, w0, #0xff
  4521fc:	orr	w0, w1, w0
  452200:	and	w1, w0, #0xff
  452204:	mov	x0, x5
  452208:	and	w0, w0, #0x1
  45220c:	and	w0, w0, #0xff
  452210:	orr	w0, w1, w0
  452214:	and	w1, w0, #0xff
  452218:	mov	x0, x4
  45221c:	and	w0, w0, #0x1
  452220:	and	w0, w0, #0xff
  452224:	orr	w0, w1, w0
  452228:	and	w1, w0, #0xff
  45222c:	mov	x0, x3
  452230:	and	w0, w0, #0x1
  452234:	and	w0, w0, #0xff
  452238:	orr	w0, w1, w0
  45223c:	and	w1, w0, #0xff
  452240:	mov	x0, x2
  452244:	and	w0, w0, #0x1
  452248:	and	w0, w0, #0xff
  45224c:	orr	w0, w1, w0
  452250:	and	w0, w0, #0xff
  452254:	cmp	w0, #0x0
  452258:	b.eq	452264 <argp_usage@@Base+0x9178>  // b.none
  45225c:	mov	w0, #0x0                   	// #0
  452260:	b	452274 <argp_usage@@Base+0x9188>
  452264:	ldr	x0, [sp, #24]
  452268:	mov	w1, #0x1                   	// #1
  45226c:	strb	w1, [x0, #161]
  452270:	mov	w0, #0x1                   	// #1
  452274:	ldr	x19, [sp], #32
  452278:	ret
  45227c:	sub	sp, sp, #0x30
  452280:	str	x0, [sp, #40]
  452284:	str	x1, [sp, #32]
  452288:	str	x2, [sp, #24]
  45228c:	str	x3, [sp, #16]
  452290:	str	w4, [sp, #12]
  452294:	ldr	x0, [sp, #40]
  452298:	ldr	x1, [sp, #32]
  45229c:	str	x1, [x0, #72]
  4522a0:	ldr	x0, [sp, #40]
  4522a4:	ldr	x1, [sp, #24]
  4522a8:	str	x1, [x0, #80]
  4522ac:	ldr	x0, [sp, #40]
  4522b0:	ldr	x1, [sp, #16]
  4522b4:	str	x1, [x0, #88]
  4522b8:	ldrsw	x1, [sp, #12]
  4522bc:	ldr	x0, [sp, #40]
  4522c0:	str	x1, [x0, #96]
  4522c4:	nop
  4522c8:	add	sp, sp, #0x30
  4522cc:	ret
  4522d0:	stp	x29, x30, [sp, #-64]!
  4522d4:	mov	x29, sp
  4522d8:	str	x0, [sp, #40]
  4522dc:	str	x1, [sp, #32]
  4522e0:	str	w2, [sp, #28]
  4522e4:	ldr	x0, [sp, #40]
  4522e8:	ldrb	w0, [x0, #224]
  4522ec:	cmp	w0, #0x0
  4522f0:	b.eq	452388 <argp_usage@@Base+0x929c>  // b.none
  4522f4:	ldr	x0, [sp, #40]
  4522f8:	ldr	x0, [x0, #8]
  4522fc:	cmn	x0, #0x1
  452300:	b.lt	452360 <argp_usage@@Base+0x9274>  // b.tstop
  452304:	ldr	x0, [sp, #40]
  452308:	ldr	x0, [x0, #8]
  45230c:	cmp	x0, #0xc
  452310:	b.gt	452360 <argp_usage@@Base+0x9274>
  452314:	ldrsw	x4, [sp, #28]
  452318:	ldr	x0, [sp, #40]
  45231c:	ldr	x0, [x0, #8]
  452320:	add	x1, x0, #0x1
  452324:	mov	x0, x1
  452328:	lsl	x0, x0, #1
  45232c:	add	x0, x0, x1
  452330:	lsl	x0, x0, #2
  452334:	sub	x0, x0, x1
  452338:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45233c:	add	x1, x1, #0xac0
  452340:	add	x0, x0, x1
  452344:	mov	x3, x0
  452348:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45234c:	add	x2, x0, #0x9a8
  452350:	mov	x1, x4
  452354:	ldr	x0, [sp, #32]
  452358:	bl	4042e0 <snprintf@plt>
  45235c:	b	452380 <argp_usage@@Base+0x9294>
  452360:	ldrsw	x1, [sp, #28]
  452364:	ldr	x0, [sp, #40]
  452368:	ldr	x0, [x0, #8]
  45236c:	mov	x3, x0
  452370:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452374:	add	x2, x0, #0x9b0
  452378:	ldr	x0, [sp, #32]
  45237c:	bl	4042e0 <snprintf@plt>
  452380:	str	w0, [sp, #60]
  452384:	b	452394 <argp_usage@@Base+0x92a8>
  452388:	ldr	x0, [sp, #32]
  45238c:	strb	wzr, [x0]
  452390:	str	wzr, [sp, #60]
  452394:	ldr	x0, [sp, #40]
  452398:	ldr	w0, [x0, #16]
  45239c:	cmp	w0, #0x0
  4523a0:	b.lt	452438 <argp_usage@@Base+0x934c>  // b.tstop
  4523a4:	ldr	x0, [sp, #40]
  4523a8:	ldr	w0, [x0, #16]
  4523ac:	cmp	w0, #0x6
  4523b0:	b.gt	452438 <argp_usage@@Base+0x934c>
  4523b4:	ldr	w0, [sp, #60]
  4523b8:	cmp	w0, #0x0
  4523bc:	b.lt	452438 <argp_usage@@Base+0x934c>  // b.tstop
  4523c0:	ldr	w1, [sp, #60]
  4523c4:	ldr	w0, [sp, #28]
  4523c8:	cmp	w1, w0
  4523cc:	b.ge	452438 <argp_usage@@Base+0x934c>  // b.tcont
  4523d0:	ldrsw	x0, [sp, #60]
  4523d4:	ldr	x1, [sp, #32]
  4523d8:	add	x4, x1, x0
  4523dc:	ldr	w1, [sp, #28]
  4523e0:	ldr	w0, [sp, #60]
  4523e4:	sub	w0, w1, w0
  4523e8:	sxtw	x5, w0
  4523ec:	ldr	w0, [sp, #60]
  4523f0:	cmp	w0, #0x0
  4523f4:	cset	w0, eq  // eq = none
  4523f8:	and	w0, w0, #0xff
  4523fc:	sxtw	x1, w0
  452400:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452404:	add	x0, x0, #0x9b8
  452408:	add	x2, x1, x0
  45240c:	ldr	x0, [sp, #40]
  452410:	ldr	w0, [x0, #16]
  452414:	sxtw	x0, w0
  452418:	lsl	x1, x0, #2
  45241c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  452420:	add	x0, x0, #0xb60
  452424:	add	x0, x1, x0
  452428:	mov	x3, x0
  45242c:	mov	x1, x5
  452430:	mov	x0, x4
  452434:	bl	4042e0 <snprintf@plt>
  452438:	ldr	x0, [sp, #32]
  45243c:	ldp	x29, x30, [sp], #64
  452440:	ret
  452444:	stp	x29, x30, [sp, #-64]!
  452448:	mov	x29, sp
  45244c:	str	w0, [sp, #28]
  452450:	str	x1, [sp, #16]
  452454:	ldr	x0, [sp, #16]
  452458:	str	x0, [sp, #56]
  45245c:	ldr	w0, [sp, #28]
  452460:	cmp	w0, #0x0
  452464:	b.ge	452470 <argp_usage@@Base+0x9384>  // b.tcont
  452468:	mov	w0, #0x2d                  	// #45
  45246c:	b	452474 <argp_usage@@Base+0x9388>
  452470:	mov	w0, #0x2b                  	// #43
  452474:	strb	w0, [sp, #55]
  452478:	ldr	w0, [sp, #28]
  45247c:	mov	w1, #0xb3c5                	// #46021
  452480:	movk	w1, #0x91a2, lsl #16
  452484:	smull	x1, w0, w1
  452488:	lsr	x1, x1, #32
  45248c:	add	w1, w0, w1
  452490:	asr	w1, w1, #11
  452494:	asr	w0, w0, #31
  452498:	sub	w0, w1, w0
  45249c:	cmp	w0, #0x0
  4524a0:	cneg	w0, w0, lt  // lt = tstop
  4524a4:	str	w0, [sp, #48]
  4524a8:	ldrb	w0, [sp, #55]
  4524ac:	ldr	w3, [sp, #48]
  4524b0:	mov	w2, w0
  4524b4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4524b8:	add	x1, x0, #0x9c0
  4524bc:	ldr	x0, [sp, #16]
  4524c0:	bl	4041f0 <sprintf@plt>
  4524c4:	sxtw	x0, w0
  4524c8:	ldr	x1, [sp, #56]
  4524cc:	add	x0, x1, x0
  4524d0:	str	x0, [sp, #56]
  4524d4:	ldr	w1, [sp, #28]
  4524d8:	mov	w0, #0xb3c5                	// #46021
  4524dc:	movk	w0, #0x91a2, lsl #16
  4524e0:	smull	x0, w1, w0
  4524e4:	lsr	x0, x0, #32
  4524e8:	add	w0, w1, w0
  4524ec:	asr	w2, w0, #11
  4524f0:	asr	w0, w1, #31
  4524f4:	sub	w0, w2, w0
  4524f8:	mov	w2, #0xe10                 	// #3600
  4524fc:	mul	w0, w0, w2
  452500:	sub	w0, w1, w0
  452504:	cmp	w0, #0x0
  452508:	cneg	w0, w0, lt  // lt = tstop
  45250c:	str	w0, [sp, #44]
  452510:	ldr	w0, [sp, #44]
  452514:	cmp	w0, #0x0
  452518:	b.eq	4526d4 <argp_usage@@Base+0x95e8>  // b.none
  45251c:	ldr	w0, [sp, #44]
  452520:	mov	w1, #0x8889                	// #34953
  452524:	movk	w1, #0x8888, lsl #16
  452528:	smull	x1, w0, w1
  45252c:	lsr	x1, x1, #32
  452530:	add	w1, w0, w1
  452534:	asr	w1, w1, #5
  452538:	asr	w0, w0, #31
  45253c:	sub	w0, w1, w0
  452540:	str	w0, [sp, #40]
  452544:	ldr	w1, [sp, #44]
  452548:	mov	w0, #0x8889                	// #34953
  45254c:	movk	w0, #0x8888, lsl #16
  452550:	smull	x0, w1, w0
  452554:	lsr	x0, x0, #32
  452558:	add	w0, w1, w0
  45255c:	asr	w2, w0, #5
  452560:	asr	w0, w1, #31
  452564:	sub	w2, w2, w0
  452568:	mov	w0, w2
  45256c:	lsl	w0, w0, #4
  452570:	sub	w0, w0, w2
  452574:	lsl	w0, w0, #2
  452578:	sub	w0, w1, w0
  45257c:	str	w0, [sp, #36]
  452580:	ldr	x0, [sp, #56]
  452584:	add	x1, x0, #0x1
  452588:	str	x1, [sp, #56]
  45258c:	mov	w1, #0x3a                  	// #58
  452590:	strb	w1, [x0]
  452594:	ldr	w0, [sp, #40]
  452598:	mov	w1, #0x6667                	// #26215
  45259c:	movk	w1, #0x6666, lsl #16
  4525a0:	smull	x1, w0, w1
  4525a4:	lsr	x1, x1, #32
  4525a8:	asr	w1, w1, #2
  4525ac:	asr	w0, w0, #31
  4525b0:	sub	w0, w1, w0
  4525b4:	and	w1, w0, #0xff
  4525b8:	ldr	x0, [sp, #56]
  4525bc:	add	x2, x0, #0x1
  4525c0:	str	x2, [sp, #56]
  4525c4:	add	w1, w1, #0x30
  4525c8:	and	w1, w1, #0xff
  4525cc:	strb	w1, [x0]
  4525d0:	ldr	w1, [sp, #40]
  4525d4:	mov	w0, #0x6667                	// #26215
  4525d8:	movk	w0, #0x6666, lsl #16
  4525dc:	smull	x0, w1, w0
  4525e0:	lsr	x0, x0, #32
  4525e4:	asr	w2, w0, #2
  4525e8:	asr	w0, w1, #31
  4525ec:	sub	w2, w2, w0
  4525f0:	mov	w0, w2
  4525f4:	lsl	w0, w0, #2
  4525f8:	add	w0, w0, w2
  4525fc:	lsl	w0, w0, #1
  452600:	sub	w2, w1, w0
  452604:	and	w1, w2, #0xff
  452608:	ldr	x0, [sp, #56]
  45260c:	add	x2, x0, #0x1
  452610:	str	x2, [sp, #56]
  452614:	add	w1, w1, #0x30
  452618:	and	w1, w1, #0xff
  45261c:	strb	w1, [x0]
  452620:	ldr	w0, [sp, #36]
  452624:	cmp	w0, #0x0
  452628:	b.eq	4526cc <argp_usage@@Base+0x95e0>  // b.none
  45262c:	ldr	x0, [sp, #56]
  452630:	add	x1, x0, #0x1
  452634:	str	x1, [sp, #56]
  452638:	mov	w1, #0x3a                  	// #58
  45263c:	strb	w1, [x0]
  452640:	ldr	w0, [sp, #36]
  452644:	mov	w1, #0x6667                	// #26215
  452648:	movk	w1, #0x6666, lsl #16
  45264c:	smull	x1, w0, w1
  452650:	lsr	x1, x1, #32
  452654:	asr	w1, w1, #2
  452658:	asr	w0, w0, #31
  45265c:	sub	w0, w1, w0
  452660:	and	w1, w0, #0xff
  452664:	ldr	x0, [sp, #56]
  452668:	add	x2, x0, #0x1
  45266c:	str	x2, [sp, #56]
  452670:	add	w1, w1, #0x30
  452674:	and	w1, w1, #0xff
  452678:	strb	w1, [x0]
  45267c:	ldr	w1, [sp, #36]
  452680:	mov	w0, #0x6667                	// #26215
  452684:	movk	w0, #0x6666, lsl #16
  452688:	smull	x0, w1, w0
  45268c:	lsr	x0, x0, #32
  452690:	asr	w2, w0, #2
  452694:	asr	w0, w1, #31
  452698:	sub	w2, w2, w0
  45269c:	mov	w0, w2
  4526a0:	lsl	w0, w0, #2
  4526a4:	add	w0, w0, w2
  4526a8:	lsl	w0, w0, #1
  4526ac:	sub	w2, w1, w0
  4526b0:	and	w1, w2, #0xff
  4526b4:	ldr	x0, [sp, #56]
  4526b8:	add	x2, x0, #0x1
  4526bc:	str	x2, [sp, #56]
  4526c0:	add	w1, w1, #0x30
  4526c4:	and	w1, w1, #0xff
  4526c8:	strb	w1, [x0]
  4526cc:	ldr	x0, [sp, #56]
  4526d0:	strb	wzr, [x0]
  4526d4:	ldr	x0, [sp, #16]
  4526d8:	ldp	x29, x30, [sp], #64
  4526dc:	ret
  4526e0:	stp	x29, x30, [sp, #-224]!
  4526e4:	mov	x29, sp
  4526e8:	stp	x19, x20, [sp, #16]
  4526ec:	str	x0, [sp, #40]
  4526f0:	str	x1, [sp, #32]
  4526f4:	strb	wzr, [sp, #223]
  4526f8:	ldr	x0, [sp, #32]
  4526fc:	ldrb	w0, [x0, #217]
  452700:	eor	w0, w0, #0x1
  452704:	and	w0, w0, #0xff
  452708:	cmp	w0, #0x0
  45270c:	b.ne	452b80 <argp_usage@@Base+0x9a94>  // b.any
  452710:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452714:	add	x0, x0, #0x9c8
  452718:	bl	404c60 <gettext@plt>
  45271c:	ldr	x1, [sp, #40]
  452720:	bl	451b9c <argp_usage@@Base+0x8ab0>
  452724:	ldr	x0, [sp, #32]
  452728:	ldr	x0, [x0, #168]
  45272c:	cmp	x0, #0x0
  452730:	b.eq	4527a0 <argp_usage@@Base+0x96b4>  // b.none
  452734:	ldr	x0, [sp, #32]
  452738:	ldrb	w0, [x0, #218]
  45273c:	eor	w0, w0, #0x1
  452740:	and	w0, w0, #0xff
  452744:	cmp	w0, #0x0
  452748:	b.eq	4527a0 <argp_usage@@Base+0x96b4>  // b.none
  45274c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452750:	add	x0, x0, #0x498
  452754:	ldr	x5, [x0]
  452758:	ldr	x0, [sp, #32]
  45275c:	ldr	x1, [x0, #40]
  452760:	ldr	x0, [sp, #32]
  452764:	ldr	x2, [x0, #56]
  452768:	ldr	x0, [sp, #32]
  45276c:	ldr	x0, [x0, #64]
  452770:	mov	x4, x0
  452774:	mov	x3, x2
  452778:	mov	x2, x1
  45277c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452780:	add	x1, x0, #0x9e0
  452784:	mov	x0, x5
  452788:	bl	404c90 <fprintf@plt>
  45278c:	ldr	x0, [sp, #32]
  452790:	mov	w1, #0x1                   	// #1
  452794:	strb	w1, [x0, #218]
  452798:	mov	w0, #0x1                   	// #1
  45279c:	strb	w0, [sp, #223]
  4527a0:	ldr	x0, [sp, #32]
  4527a4:	ldrb	w1, [x0, #216]
  4527a8:	ldr	x0, [sp, #32]
  4527ac:	ldrb	w0, [x0, #223]
  4527b0:	cmp	w1, w0
  4527b4:	b.eq	452824 <argp_usage@@Base+0x9738>  // b.none
  4527b8:	ldrb	w0, [sp, #223]
  4527bc:	cmp	w0, #0x0
  4527c0:	b.eq	4527dc <argp_usage@@Base+0x96f0>  // b.none
  4527c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4527c8:	add	x0, x0, #0x498
  4527cc:	ldr	x0, [x0]
  4527d0:	mov	x1, x0
  4527d4:	mov	w0, #0x20                  	// #32
  4527d8:	bl	404250 <fputc@plt>
  4527dc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4527e0:	add	x0, x0, #0x498
  4527e4:	ldr	x19, [x0]
  4527e8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4527ec:	add	x0, x0, #0xa00
  4527f0:	bl	404c60 <gettext@plt>
  4527f4:	mov	x1, x0
  4527f8:	ldr	x0, [sp, #32]
  4527fc:	ldr	x0, [x0, #40]
  452800:	mov	x2, x0
  452804:	mov	x0, x19
  452808:	bl	404c90 <fprintf@plt>
  45280c:	ldr	x0, [sp, #32]
  452810:	ldrb	w1, [x0, #216]
  452814:	ldr	x0, [sp, #32]
  452818:	strb	w1, [x0, #223]
  45281c:	mov	w0, #0x1                   	// #1
  452820:	strb	w0, [sp, #223]
  452824:	ldr	x0, [sp, #32]
  452828:	ldr	x0, [x0, #200]
  45282c:	cmp	x0, #0x0
  452830:	b.eq	452924 <argp_usage@@Base+0x9838>  // b.none
  452834:	ldr	x0, [sp, #32]
  452838:	ldrb	w0, [x0, #221]
  45283c:	eor	w0, w0, #0x1
  452840:	and	w0, w0, #0xff
  452844:	cmp	w0, #0x0
  452848:	b.eq	452924 <argp_usage@@Base+0x9838>  // b.none
  45284c:	ldr	x0, [sp, #32]
  452850:	ldr	x0, [x0, #88]
  452854:	str	x0, [sp, #208]
  452858:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45285c:	add	x0, x0, #0x498
  452860:	ldr	x5, [x0]
  452864:	ldrb	w0, [sp, #223]
  452868:	eor	w0, w0, #0x1
  45286c:	and	w0, w0, #0xff
  452870:	sxtw	x1, w0
  452874:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452878:	add	x0, x0, #0xa10
  45287c:	add	x1, x1, x0
  452880:	ldr	x0, [sp, #32]
  452884:	ldr	x2, [x0, #72]
  452888:	ldr	x0, [sp, #32]
  45288c:	ldr	x0, [x0, #80]
  452890:	ldr	x4, [sp, #208]
  452894:	mov	x3, x0
  452898:	mov	x0, x5
  45289c:	bl	404c90 <fprintf@plt>
  4528a0:	ldr	x0, [sp, #32]
  4528a4:	ldr	x0, [x0, #96]
  4528a8:	cmp	x0, #0x0
  4528ac:	b.eq	4528dc <argp_usage@@Base+0x97f0>  // b.none
  4528b0:	ldr	x0, [sp, #32]
  4528b4:	ldr	x0, [x0, #96]
  4528b8:	str	w0, [sp, #204]
  4528bc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4528c0:	add	x0, x0, #0x498
  4528c4:	ldr	x3, [x0]
  4528c8:	ldr	w2, [sp, #204]
  4528cc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4528d0:	add	x1, x0, #0xa28
  4528d4:	mov	x0, x3
  4528d8:	bl	404c90 <fprintf@plt>
  4528dc:	ldr	x0, [sp, #32]
  4528e0:	ldr	w0, [x0, #28]
  4528e4:	cmp	w0, #0x1
  4528e8:	b.ne	452910 <argp_usage@@Base+0x9824>  // b.any
  4528ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4528f0:	add	x0, x0, #0x498
  4528f4:	ldr	x0, [x0]
  4528f8:	mov	x3, x0
  4528fc:	mov	x2, #0x2                   	// #2
  452900:	mov	x1, #0x1                   	// #1
  452904:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452908:	add	x0, x0, #0xa30
  45290c:	bl	404970 <fwrite@plt>
  452910:	ldr	x0, [sp, #32]
  452914:	mov	w1, #0x1                   	// #1
  452918:	strb	w1, [x0, #221]
  45291c:	mov	w0, #0x1                   	// #1
  452920:	strb	w0, [sp, #223]
  452924:	ldr	x0, [sp, #32]
  452928:	ldr	x0, [x0, #176]
  45292c:	cmp	x0, #0x0
  452930:	b.eq	4529dc <argp_usage@@Base+0x98f0>  // b.none
  452934:	ldr	x0, [sp, #32]
  452938:	ldrb	w0, [x0, #219]
  45293c:	eor	w0, w0, #0x1
  452940:	and	w0, w0, #0xff
  452944:	cmp	w0, #0x0
  452948:	b.eq	4529dc <argp_usage@@Base+0x98f0>  // b.none
  45294c:	ldrb	w0, [sp, #223]
  452950:	cmp	w0, #0x0
  452954:	b.eq	452970 <argp_usage@@Base+0x9884>  // b.none
  452958:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45295c:	add	x0, x0, #0x498
  452960:	ldr	x0, [x0]
  452964:	mov	x1, x0
  452968:	mov	w0, #0x20                  	// #32
  45296c:	bl	404250 <fputc@plt>
  452970:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452974:	add	x0, x0, #0x498
  452978:	ldr	x19, [x0]
  45297c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452980:	add	x0, x0, #0xa38
  452984:	bl	404c60 <gettext@plt>
  452988:	mov	x20, x0
  45298c:	add	x0, sp, #0x38
  452990:	mov	w2, #0x64                  	// #100
  452994:	mov	x1, x0
  452998:	ldr	x0, [sp, #32]
  45299c:	bl	4522d0 <argp_usage@@Base+0x91e4>
  4529a0:	mov	x2, x0
  4529a4:	ldr	x0, [sp, #32]
  4529a8:	ldr	x1, [x0, #8]
  4529ac:	ldr	x0, [sp, #32]
  4529b0:	ldr	w0, [x0, #16]
  4529b4:	mov	w4, w0
  4529b8:	mov	x3, x1
  4529bc:	mov	x1, x20
  4529c0:	mov	x0, x19
  4529c4:	bl	404c90 <fprintf@plt>
  4529c8:	ldr	x0, [sp, #32]
  4529cc:	mov	w1, #0x1                   	// #1
  4529d0:	strb	w1, [x0, #219]
  4529d4:	mov	w0, #0x1                   	// #1
  4529d8:	strb	w0, [sp, #223]
  4529dc:	ldr	x0, [sp, #32]
  4529e0:	ldr	x0, [x0, #184]
  4529e4:	cmp	x0, #0x0
  4529e8:	b.eq	452a78 <argp_usage@@Base+0x998c>  // b.none
  4529ec:	ldr	x0, [sp, #32]
  4529f0:	ldrb	w0, [x0, #220]
  4529f4:	eor	w0, w0, #0x1
  4529f8:	and	w0, w0, #0xff
  4529fc:	cmp	w0, #0x0
  452a00:	b.eq	452a78 <argp_usage@@Base+0x998c>  // b.none
  452a04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452a08:	add	x0, x0, #0x498
  452a0c:	ldr	x4, [x0]
  452a10:	ldrb	w0, [sp, #223]
  452a14:	eor	w0, w0, #0x1
  452a18:	and	w0, w0, #0xff
  452a1c:	sxtw	x1, w0
  452a20:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452a24:	add	x0, x0, #0xa58
  452a28:	add	x1, x1, x0
  452a2c:	ldr	x0, [sp, #32]
  452a30:	ldr	w2, [x0, #20]
  452a34:	ldr	x0, [sp, #32]
  452a38:	ldr	x0, [x0, #192]
  452a3c:	cmp	x0, #0x0
  452a40:	b.eq	452a50 <argp_usage@@Base+0x9964>  // b.none
  452a44:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452a48:	add	x0, x0, #0xa68
  452a4c:	b	452a58 <argp_usage@@Base+0x996c>
  452a50:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452a54:	add	x0, x0, #0xa70
  452a58:	mov	x3, x0
  452a5c:	mov	x0, x4
  452a60:	bl	404c90 <fprintf@plt>
  452a64:	ldr	x0, [sp, #32]
  452a68:	mov	w1, #0x1                   	// #1
  452a6c:	strb	w1, [x0, #220]
  452a70:	mov	w0, #0x1                   	// #1
  452a74:	strb	w0, [sp, #223]
  452a78:	ldr	x0, [sp, #32]
  452a7c:	ldr	x0, [x0, #208]
  452a80:	cmp	x0, #0x0
  452a84:	b.eq	452afc <argp_usage@@Base+0x9a10>  // b.none
  452a88:	ldr	x0, [sp, #32]
  452a8c:	ldrb	w0, [x0, #222]
  452a90:	eor	w0, w0, #0x1
  452a94:	and	w0, w0, #0xff
  452a98:	cmp	w0, #0x0
  452a9c:	b.eq	452afc <argp_usage@@Base+0x9a10>  // b.none
  452aa0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452aa4:	add	x0, x0, #0x498
  452aa8:	ldr	x19, [x0]
  452aac:	ldrb	w0, [sp, #223]
  452ab0:	eor	w0, w0, #0x1
  452ab4:	and	w0, w0, #0xff
  452ab8:	sxtw	x1, w0
  452abc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452ac0:	add	x0, x0, #0xa78
  452ac4:	add	x20, x1, x0
  452ac8:	ldr	x0, [sp, #32]
  452acc:	ldr	w0, [x0, #24]
  452ad0:	add	x1, sp, #0xa0
  452ad4:	bl	452444 <argp_usage@@Base+0x9358>
  452ad8:	mov	x2, x0
  452adc:	mov	x1, x20
  452ae0:	mov	x0, x19
  452ae4:	bl	404c90 <fprintf@plt>
  452ae8:	ldr	x0, [sp, #32]
  452aec:	mov	w1, #0x1                   	// #1
  452af0:	strb	w1, [x0, #222]
  452af4:	mov	w0, #0x1                   	// #1
  452af8:	strb	w0, [sp, #223]
  452afc:	ldr	x0, [sp, #32]
  452b00:	ldrb	w0, [x0, #160]
  452b04:	cmp	w0, #0x0
  452b08:	b.eq	452b64 <argp_usage@@Base+0x9a78>  // b.none
  452b0c:	ldr	x0, [sp, #32]
  452b10:	ldr	x0, [x0, #88]
  452b14:	str	x0, [sp, #192]
  452b18:	ldrb	w0, [sp, #223]
  452b1c:	cmp	w0, #0x0
  452b20:	b.eq	452b3c <argp_usage@@Base+0x9a50>  // b.none
  452b24:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452b28:	add	x0, x0, #0x498
  452b2c:	ldr	x0, [x0]
  452b30:	mov	x1, x0
  452b34:	mov	w0, #0x20                  	// #32
  452b38:	bl	404250 <fputc@plt>
  452b3c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452b40:	add	x0, x0, #0x498
  452b44:	ldr	x19, [x0]
  452b48:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452b4c:	add	x0, x0, #0xa80
  452b50:	bl	404c60 <gettext@plt>
  452b54:	ldr	x2, [sp, #192]
  452b58:	mov	x1, x0
  452b5c:	mov	x0, x19
  452b60:	bl	404c90 <fprintf@plt>
  452b64:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452b68:	add	x0, x0, #0x498
  452b6c:	ldr	x0, [x0]
  452b70:	mov	x1, x0
  452b74:	mov	w0, #0xa                   	// #10
  452b78:	bl	404250 <fputc@plt>
  452b7c:	b	452b84 <argp_usage@@Base+0x9a98>
  452b80:	nop
  452b84:	ldp	x19, x20, [sp, #16]
  452b88:	ldp	x29, x30, [sp], #224
  452b8c:	ret
  452b90:	stp	x29, x30, [sp, #-48]!
  452b94:	mov	x29, sp
  452b98:	strb	w0, [sp, #47]
  452b9c:	str	x1, [sp, #32]
  452ba0:	str	x2, [sp, #24]
  452ba4:	ldr	x0, [sp, #32]
  452ba8:	cmp	x0, #0x0
  452bac:	b.ne	452bb8 <argp_usage@@Base+0x9acc>  // b.any
  452bb0:	ldrb	w0, [sp, #47]
  452bb4:	b	452bf8 <argp_usage@@Base+0x9b0c>
  452bb8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452bbc:	add	x0, x0, #0x498
  452bc0:	ldr	x4, [x0]
  452bc4:	ldrb	w0, [sp, #47]
  452bc8:	eor	w0, w0, #0x1
  452bcc:	and	w0, w0, #0xff
  452bd0:	sxtw	x1, w0
  452bd4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452bd8:	add	x0, x0, #0xa98
  452bdc:	add	x0, x1, x0
  452be0:	ldr	x3, [sp, #24]
  452be4:	ldr	x2, [sp, #32]
  452be8:	mov	x1, x0
  452bec:	mov	x0, x4
  452bf0:	bl	404c90 <fprintf@plt>
  452bf4:	mov	w0, #0x1                   	// #1
  452bf8:	ldp	x29, x30, [sp], #48
  452bfc:	ret
  452c00:	stp	x29, x30, [sp, #-48]!
  452c04:	mov	x29, sp
  452c08:	str	x0, [sp, #24]
  452c0c:	str	x1, [sp, #16]
  452c10:	strb	wzr, [sp, #47]
  452c14:	ldr	x0, [sp, #16]
  452c18:	ldrb	w0, [x0, #217]
  452c1c:	eor	w0, w0, #0x1
  452c20:	and	w0, w0, #0xff
  452c24:	cmp	w0, #0x0
  452c28:	b.ne	452dbc <argp_usage@@Base+0x9cd0>  // b.any
  452c2c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452c30:	add	x0, x0, #0x9c8
  452c34:	bl	404c60 <gettext@plt>
  452c38:	ldr	x1, [sp, #24]
  452c3c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  452c40:	ldr	x0, [sp, #16]
  452c44:	ldr	x0, [x0, #104]
  452c48:	cmp	x0, #0x0
  452c4c:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452c50:	ldr	x0, [sp, #16]
  452c54:	ldr	x0, [x0, #112]
  452c58:	cmp	x0, #0x0
  452c5c:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452c60:	ldr	x0, [sp, #16]
  452c64:	ldr	x0, [x0, #120]
  452c68:	cmp	x0, #0x0
  452c6c:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452c70:	ldr	x0, [sp, #16]
  452c74:	ldr	x0, [x0, #128]
  452c78:	cmp	x0, #0x0
  452c7c:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452c80:	ldr	x0, [sp, #16]
  452c84:	ldr	x0, [x0, #136]
  452c88:	cmp	x0, #0x0
  452c8c:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452c90:	ldr	x0, [sp, #16]
  452c94:	ldr	x0, [x0, #144]
  452c98:	cmp	x0, #0x0
  452c9c:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452ca0:	ldr	x0, [sp, #16]
  452ca4:	ldr	w0, [x0, #152]
  452ca8:	cmp	w0, #0x0
  452cac:	b.ne	452cdc <argp_usage@@Base+0x9bf0>  // b.any
  452cb0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452cb4:	add	x0, x0, #0xaa8
  452cb8:	bl	404c60 <gettext@plt>
  452cbc:	mov	x2, x0
  452cc0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452cc4:	add	x0, x0, #0x498
  452cc8:	ldr	x0, [x0]
  452ccc:	mov	x1, x0
  452cd0:	mov	x0, x2
  452cd4:	bl	4040c0 <fputs@plt>
  452cd8:	b	452dc0 <argp_usage@@Base+0x9cd4>
  452cdc:	ldr	x0, [sp, #16]
  452ce0:	ldr	x1, [x0, #104]
  452ce4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452ce8:	add	x2, x0, #0xab8
  452cec:	ldrb	w0, [sp, #47]
  452cf0:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452cf4:	strb	w0, [sp, #47]
  452cf8:	ldr	x0, [sp, #16]
  452cfc:	ldr	x1, [x0, #112]
  452d00:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452d04:	add	x2, x0, #0xac0
  452d08:	ldrb	w0, [sp, #47]
  452d0c:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452d10:	strb	w0, [sp, #47]
  452d14:	ldr	x0, [sp, #16]
  452d18:	ldr	x1, [x0, #120]
  452d1c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452d20:	add	x2, x0, #0xad0
  452d24:	ldrb	w0, [sp, #47]
  452d28:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452d2c:	strb	w0, [sp, #47]
  452d30:	ldr	x0, [sp, #16]
  452d34:	ldr	x1, [x0, #128]
  452d38:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452d3c:	add	x2, x0, #0xad8
  452d40:	ldrb	w0, [sp, #47]
  452d44:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452d48:	strb	w0, [sp, #47]
  452d4c:	ldr	x0, [sp, #16]
  452d50:	ldr	x1, [x0, #136]
  452d54:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452d58:	add	x2, x0, #0xae0
  452d5c:	ldrb	w0, [sp, #47]
  452d60:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452d64:	strb	w0, [sp, #47]
  452d68:	ldr	x0, [sp, #16]
  452d6c:	ldr	x1, [x0, #144]
  452d70:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452d74:	add	x2, x0, #0xae8
  452d78:	ldrb	w0, [sp, #47]
  452d7c:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452d80:	strb	w0, [sp, #47]
  452d84:	ldr	x0, [sp, #16]
  452d88:	ldr	w0, [x0, #152]
  452d8c:	sxtw	x1, w0
  452d90:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452d94:	add	x2, x0, #0xaf0
  452d98:	ldrb	w0, [sp, #47]
  452d9c:	bl	452b90 <argp_usage@@Base+0x9aa4>
  452da0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  452da4:	add	x0, x0, #0x498
  452da8:	ldr	x0, [x0]
  452dac:	mov	x1, x0
  452db0:	mov	w0, #0xa                   	// #10
  452db4:	bl	404250 <fputc@plt>
  452db8:	b	452dc0 <argp_usage@@Base+0x9cd4>
  452dbc:	nop
  452dc0:	ldp	x29, x30, [sp], #48
  452dc4:	ret
  452dc8:	sub	sp, sp, #0x20
  452dcc:	str	x0, [sp, #24]
  452dd0:	str	w1, [sp, #20]
  452dd4:	str	x2, [sp, #8]
  452dd8:	str	x3, [sp]
  452ddc:	ldr	x0, [sp, #24]
  452de0:	cmp	x0, #0x0
  452de4:	b.ne	452df4 <argp_usage@@Base+0x9d08>  // b.any
  452de8:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  452dec:	add	x0, x0, #0xf70
  452df0:	str	x0, [sp, #24]
  452df4:	nop
  452df8:	nop
  452dfc:	add	sp, sp, #0x20
  452e00:	ret
  452e04:	sub	sp, sp, #0x690
  452e08:	stp	x29, x30, [sp]
  452e0c:	mov	x29, sp
  452e10:	stp	x20, x21, [sp, #16]
  452e14:	stp	x22, x23, [sp, #32]
  452e18:	stp	x24, x25, [sp, #48]
  452e1c:	stp	x26, x27, [sp, #64]
  452e20:	str	x0, [sp, #216]
  452e24:	str	wzr, [sp, #1612]
  452e28:	str	wzr, [sp, #1608]
  452e2c:	add	x0, sp, #0x5b8
  452e30:	str	x0, [sp, #1656]
  452e34:	ldr	x0, [sp, #1656]
  452e38:	str	x0, [sp, #1648]
  452e3c:	add	x0, sp, #0x158
  452e40:	str	x0, [sp, #1640]
  452e44:	ldr	x0, [sp, #1640]
  452e48:	str	x0, [sp, #1632]
  452e4c:	mov	x0, #0x14                  	// #20
  452e50:	str	x0, [sp, #1624]
  452e54:	str	wzr, [sp, #1668]
  452e58:	str	wzr, [sp, #1664]
  452e5c:	str	wzr, [sp, #1672]
  452e60:	mov	w0, #0xfffffffe            	// #-2
  452e64:	str	w0, [sp, #1676]
  452e68:	b	452e78 <argp_usage@@Base+0x9d8c>
  452e6c:	ldr	x0, [sp, #1648]
  452e70:	add	x0, x0, #0x2
  452e74:	str	x0, [sp, #1648]
  452e78:	ldr	w0, [sp, #1668]
  452e7c:	sxth	w1, w0
  452e80:	ldr	x0, [sp, #1648]
  452e84:	strh	w1, [x0]
  452e88:	ldr	x0, [sp, #1624]
  452e8c:	lsl	x0, x0, #1
  452e90:	sub	x0, x0, #0x2
  452e94:	ldr	x1, [sp, #1656]
  452e98:	add	x0, x1, x0
  452e9c:	ldr	x1, [sp, #1648]
  452ea0:	cmp	x1, x0
  452ea4:	b.cc	4530ac <argp_usage@@Base+0x9fc0>  // b.lo, b.ul, b.last
  452ea8:	ldr	x1, [sp, #1648]
  452eac:	ldr	x0, [sp, #1656]
  452eb0:	sub	x0, x1, x0
  452eb4:	asr	x0, x0, #1
  452eb8:	add	x0, x0, #0x1
  452ebc:	str	x0, [sp, #1600]
  452ec0:	ldr	x0, [sp, #1624]
  452ec4:	cmp	x0, #0x13
  452ec8:	b.hi	45494c <argp_usage@@Base+0xb860>  // b.pmore
  452ecc:	ldr	x0, [sp, #1624]
  452ed0:	lsl	x0, x0, #1
  452ed4:	str	x0, [sp, #1624]
  452ed8:	ldr	x0, [sp, #1624]
  452edc:	cmp	x0, #0x14
  452ee0:	b.ls	452eec <argp_usage@@Base+0x9e00>  // b.plast
  452ee4:	mov	x0, #0x14                  	// #20
  452ee8:	str	x0, [sp, #1624]
  452eec:	ldr	x0, [sp, #1656]
  452ef0:	str	x0, [sp, #1592]
  452ef4:	ldr	x1, [sp, #1624]
  452ef8:	mov	x0, x1
  452efc:	lsl	x0, x0, #3
  452f00:	sub	x0, x0, x1
  452f04:	lsl	x0, x0, #2
  452f08:	add	x0, x0, x1
  452f0c:	lsl	x0, x0, #1
  452f10:	add	x0, x0, #0x37
  452f14:	bl	4043f0 <malloc@plt>
  452f18:	str	x0, [sp, #1584]
  452f1c:	ldr	x0, [sp, #1584]
  452f20:	cmp	x0, #0x0
  452f24:	b.eq	454954 <argp_usage@@Base+0xb868>  // b.none
  452f28:	ldr	x2, [sp, #1584]
  452f2c:	ldr	x0, [sp, #1600]
  452f30:	lsl	x0, x0, #1
  452f34:	ldr	x1, [sp, #1656]
  452f38:	mov	x3, x2
  452f3c:	mov	x2, x0
  452f40:	mov	x0, x3
  452f44:	bl	404020 <memcpy@plt>
  452f48:	ldr	x0, [sp, #1584]
  452f4c:	str	x0, [sp, #1656]
  452f50:	ldr	x0, [sp, #1624]
  452f54:	lsl	x0, x0, #1
  452f58:	add	x0, x0, #0x37
  452f5c:	str	x0, [sp, #1576]
  452f60:	ldr	x0, [sp, #1576]
  452f64:	lsr	x1, x0, #3
  452f68:	mov	x0, #0x2493                	// #9363
  452f6c:	movk	x0, #0x9249, lsl #16
  452f70:	movk	x0, #0x4924, lsl #32
  452f74:	movk	x0, #0x2492, lsl #48
  452f78:	umulh	x0, x1, x0
  452f7c:	mov	x1, x0
  452f80:	mov	x0, x1
  452f84:	lsl	x0, x0, #3
  452f88:	sub	x0, x0, x1
  452f8c:	lsl	x0, x0, #3
  452f90:	mov	x1, x0
  452f94:	ldr	x0, [sp, #1584]
  452f98:	add	x0, x0, x1
  452f9c:	str	x0, [sp, #1584]
  452fa0:	ldr	x2, [sp, #1584]
  452fa4:	ldr	x1, [sp, #1600]
  452fa8:	mov	x0, x1
  452fac:	lsl	x0, x0, #3
  452fb0:	sub	x0, x0, x1
  452fb4:	lsl	x0, x0, #3
  452fb8:	mov	x1, x0
  452fbc:	ldr	x0, [sp, #1640]
  452fc0:	mov	x3, x2
  452fc4:	mov	x2, x1
  452fc8:	mov	x1, x0
  452fcc:	mov	x0, x3
  452fd0:	bl	404020 <memcpy@plt>
  452fd4:	ldr	x0, [sp, #1584]
  452fd8:	str	x0, [sp, #1640]
  452fdc:	ldr	x1, [sp, #1624]
  452fe0:	mov	x0, x1
  452fe4:	lsl	x0, x0, #3
  452fe8:	sub	x0, x0, x1
  452fec:	lsl	x0, x0, #3
  452ff0:	add	x0, x0, #0x37
  452ff4:	str	x0, [sp, #1568]
  452ff8:	ldr	x0, [sp, #1568]
  452ffc:	lsr	x1, x0, #3
  453000:	mov	x0, #0x2493                	// #9363
  453004:	movk	x0, #0x9249, lsl #16
  453008:	movk	x0, #0x4924, lsl #32
  45300c:	movk	x0, #0x2492, lsl #48
  453010:	umulh	x0, x1, x0
  453014:	mov	x1, x0
  453018:	mov	x0, x1
  45301c:	lsl	x0, x0, #3
  453020:	sub	x0, x0, x1
  453024:	lsl	x0, x0, #3
  453028:	mov	x1, x0
  45302c:	ldr	x0, [sp, #1584]
  453030:	add	x0, x0, x1
  453034:	str	x0, [sp, #1584]
  453038:	add	x0, sp, #0x5b8
  45303c:	ldr	x1, [sp, #1592]
  453040:	cmp	x1, x0
  453044:	b.eq	453050 <argp_usage@@Base+0x9f64>  // b.none
  453048:	ldr	x0, [sp, #1592]
  45304c:	bl	404880 <free@plt>
  453050:	ldr	x0, [sp, #1600]
  453054:	lsl	x0, x0, #1
  453058:	sub	x0, x0, #0x2
  45305c:	ldr	x1, [sp, #1656]
  453060:	add	x0, x1, x0
  453064:	str	x0, [sp, #1648]
  453068:	ldr	x1, [sp, #1600]
  45306c:	mov	x0, x1
  453070:	lsl	x0, x0, #3
  453074:	sub	x0, x0, x1
  453078:	lsl	x0, x0, #3
  45307c:	sub	x0, x0, #0x38
  453080:	ldr	x1, [sp, #1640]
  453084:	add	x0, x1, x0
  453088:	str	x0, [sp, #1632]
  45308c:	ldr	x0, [sp, #1624]
  453090:	lsl	x0, x0, #1
  453094:	sub	x0, x0, #0x2
  453098:	ldr	x1, [sp, #1656]
  45309c:	add	x0, x1, x0
  4530a0:	ldr	x1, [sp, #1648]
  4530a4:	cmp	x1, x0
  4530a8:	b.cs	4548ec <argp_usage@@Base+0xb800>  // b.hs, b.nlast
  4530ac:	ldr	w0, [sp, #1668]
  4530b0:	cmp	w0, #0xc
  4530b4:	b.eq	4548e0 <argp_usage@@Base+0xb7f4>  // b.none
  4530b8:	nop
  4530bc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4530c0:	add	x1, x0, #0xd70
  4530c4:	ldrsw	x0, [sp, #1668]
  4530c8:	ldrsb	w0, [x1, x0]
  4530cc:	str	w0, [sp, #1620]
  4530d0:	ldr	w0, [sp, #1620]
  4530d4:	cmn	w0, #0x5d
  4530d8:	b.eq	453218 <argp_usage@@Base+0xa12c>  // b.none
  4530dc:	ldr	w0, [sp, #1676]
  4530e0:	cmn	w0, #0x2
  4530e4:	b.ne	4530f8 <argp_usage@@Base+0xa00c>  // b.any
  4530e8:	add	x0, sp, #0x5e0
  4530ec:	ldr	x1, [sp, #216]
  4530f0:	bl	45549c <argp_usage@@Base+0xc3b0>
  4530f4:	str	w0, [sp, #1676]
  4530f8:	ldr	w0, [sp, #1676]
  4530fc:	cmp	w0, #0x0
  453100:	b.gt	453114 <argp_usage@@Base+0xa028>
  453104:	str	wzr, [sp, #1612]
  453108:	ldr	w0, [sp, #1612]
  45310c:	str	w0, [sp, #1676]
  453110:	b	45313c <argp_usage@@Base+0xa050>
  453114:	ldr	w0, [sp, #1676]
  453118:	cmp	w0, #0x115
  45311c:	b.hi	453134 <argp_usage@@Base+0xa048>  // b.pmore
  453120:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453124:	add	x1, x0, #0xb00
  453128:	ldrsw	x0, [sp, #1676]
  45312c:	ldrb	w0, [x1, x0]
  453130:	b	453138 <argp_usage@@Base+0xa04c>
  453134:	mov	w0, #0x2                   	// #2
  453138:	str	w0, [sp, #1612]
  45313c:	ldr	w1, [sp, #1620]
  453140:	ldr	w0, [sp, #1612]
  453144:	add	w0, w1, w0
  453148:	str	w0, [sp, #1620]
  45314c:	ldr	w0, [sp, #1620]
  453150:	cmp	w0, #0x0
  453154:	b.lt	453220 <argp_usage@@Base+0xa134>  // b.tstop
  453158:	ldr	w0, [sp, #1620]
  45315c:	cmp	w0, #0x70
  453160:	b.gt	453220 <argp_usage@@Base+0xa134>
  453164:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453168:	add	x1, x0, #0xe80
  45316c:	ldrsw	x0, [sp, #1620]
  453170:	ldrsb	w0, [x1, x0]
  453174:	mov	w1, w0
  453178:	ldr	w0, [sp, #1612]
  45317c:	cmp	w0, w1
  453180:	b.ne	453220 <argp_usage@@Base+0xa134>  // b.any
  453184:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453188:	add	x1, x0, #0xe08
  45318c:	ldrsw	x0, [sp, #1620]
  453190:	ldrb	w0, [x1, x0]
  453194:	str	w0, [sp, #1620]
  453198:	ldr	w0, [sp, #1620]
  45319c:	cmp	w0, #0x0
  4531a0:	b.gt	4531b4 <argp_usage@@Base+0xa0c8>
  4531a4:	ldr	w0, [sp, #1620]
  4531a8:	neg	w0, w0
  4531ac:	str	w0, [sp, #1620]
  4531b0:	b	453248 <argp_usage@@Base+0xa15c>
  4531b4:	ldr	w0, [sp, #1664]
  4531b8:	cmp	w0, #0x0
  4531bc:	b.eq	4531cc <argp_usage@@Base+0xa0e0>  // b.none
  4531c0:	ldr	w0, [sp, #1664]
  4531c4:	sub	w0, w0, #0x1
  4531c8:	str	w0, [sp, #1664]
  4531cc:	mov	w0, #0xfffffffe            	// #-2
  4531d0:	str	w0, [sp, #1676]
  4531d4:	ldr	w0, [sp, #1620]
  4531d8:	str	w0, [sp, #1668]
  4531dc:	ldr	x0, [sp, #1632]
  4531e0:	add	x0, x0, #0x38
  4531e4:	str	x0, [sp, #1632]
  4531e8:	ldr	x0, [sp, #1632]
  4531ec:	mov	x1, x0
  4531f0:	add	x0, sp, #0x5e0
  4531f4:	ldp	x2, x3, [x0]
  4531f8:	stp	x2, x3, [x1]
  4531fc:	ldp	x2, x3, [x0, #16]
  453200:	stp	x2, x3, [x1, #16]
  453204:	ldp	x2, x3, [x0, #32]
  453208:	stp	x2, x3, [x1, #32]
  45320c:	ldr	x0, [x0, #48]
  453210:	str	x0, [x1, #48]
  453214:	b	452e6c <argp_usage@@Base+0x9d80>
  453218:	nop
  45321c:	b	453224 <argp_usage@@Base+0xa138>
  453220:	nop
  453224:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453228:	add	x1, x0, #0xcd8
  45322c:	ldrsw	x0, [sp, #1668]
  453230:	ldrb	w0, [x1, x0]
  453234:	str	w0, [sp, #1620]
  453238:	ldr	w0, [sp, #1620]
  45323c:	cmp	w0, #0x0
  453240:	b.eq	4546fc <argp_usage@@Base+0xb610>  // b.none
  453244:	nop
  453248:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45324c:	add	x1, x0, #0xc78
  453250:	ldrsw	x0, [sp, #1620]
  453254:	ldrb	w0, [x1, x0]
  453258:	str	w0, [sp, #1608]
  45325c:	mov	w1, #0x1                   	// #1
  453260:	ldr	w0, [sp, #1608]
  453264:	sub	w0, w1, w0
  453268:	sxtw	x1, w0
  45326c:	mov	x0, x1
  453270:	lsl	x0, x0, #3
  453274:	sub	x0, x0, x1
  453278:	lsl	x0, x0, #3
  45327c:	mov	x1, x0
  453280:	ldr	x0, [sp, #1632]
  453284:	add	x1, x0, x1
  453288:	add	x0, sp, #0x120
  45328c:	ldp	x2, x3, [x1]
  453290:	stp	x2, x3, [x0]
  453294:	ldp	x2, x3, [x1, #16]
  453298:	stp	x2, x3, [x0, #16]
  45329c:	ldp	x2, x3, [x1, #32]
  4532a0:	stp	x2, x3, [x0, #32]
  4532a4:	ldr	x1, [x1, #48]
  4532a8:	str	x1, [x0, #48]
  4532ac:	ldr	w0, [sp, #1620]
  4532b0:	sub	w0, w0, #0x4
  4532b4:	cmp	w0, #0x57
  4532b8:	b.hi	45457c <argp_usage@@Base+0xb490>  // b.pmore
  4532bc:	adrp	x1, 489000 <_obstack_memory_used@@Base+0x2bec0>
  4532c0:	add	x1, x1, #0xfc
  4532c4:	ldr	w0, [x1, w0, uxtw #2]
  4532c8:	adr	x1, 4532d4 <argp_usage@@Base+0xa1e8>
  4532cc:	add	x0, x1, w0, sxtw #2
  4532d0:	br	x0
  4532d4:	ldr	x2, [sp, #216]
  4532d8:	ldr	x0, [sp, #1632]
  4532dc:	ldp	x0, x1, [x0]
  4532e0:	stp	x0, x1, [x2, #88]
  4532e4:	ldr	x0, [sp, #216]
  4532e8:	mov	w1, #0x1                   	// #1
  4532ec:	strb	w1, [x0, #160]
  4532f0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4532f4:	add	x0, x0, #0xf80
  4532f8:	bl	404c60 <gettext@plt>
  4532fc:	ldr	x1, [sp, #216]
  453300:	bl	4526e0 <argp_usage@@Base+0x95f4>
  453304:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453308:	ldr	x0, [sp, #216]
  45330c:	ldr	x0, [x0, #200]
  453310:	add	x1, x0, #0x1
  453314:	ldr	x0, [sp, #216]
  453318:	str	x1, [x0, #200]
  45331c:	ldr	x0, [sp, #216]
  453320:	ldr	x0, [x0, #168]
  453324:	add	x1, x0, #0x1
  453328:	ldr	x0, [sp, #216]
  45332c:	str	x1, [x0, #168]
  453330:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453334:	add	x0, x0, #0xf98
  453338:	bl	404c60 <gettext@plt>
  45333c:	ldr	x1, [sp, #216]
  453340:	bl	4526e0 <argp_usage@@Base+0x95f4>
  453344:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453348:	ldr	x0, [sp, #216]
  45334c:	ldr	x0, [x0, #200]
  453350:	add	x1, x0, #0x1
  453354:	ldr	x0, [sp, #216]
  453358:	str	x1, [x0, #200]
  45335c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453360:	add	x0, x0, #0xfa8
  453364:	bl	404c60 <gettext@plt>
  453368:	ldr	x1, [sp, #216]
  45336c:	bl	4526e0 <argp_usage@@Base+0x95f4>
  453370:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453374:	ldr	x0, [sp, #216]
  453378:	ldr	x0, [x0, #184]
  45337c:	add	x1, x0, #0x1
  453380:	ldr	x0, [sp, #216]
  453384:	str	x1, [x0, #184]
  453388:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45338c:	add	x0, x0, #0xfb0
  453390:	bl	404c60 <gettext@plt>
  453394:	ldr	x1, [sp, #216]
  453398:	bl	4526e0 <argp_usage@@Base+0x95f4>
  45339c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4533a0:	ldr	x0, [sp, #216]
  4533a4:	ldr	x0, [x0, #208]
  4533a8:	add	x1, x0, #0x1
  4533ac:	ldr	x0, [sp, #216]
  4533b0:	str	x1, [x0, #208]
  4533b4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4533b8:	add	x0, x0, #0xfc0
  4533bc:	bl	404c60 <gettext@plt>
  4533c0:	ldr	x1, [sp, #216]
  4533c4:	bl	4526e0 <argp_usage@@Base+0x95f4>
  4533c8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4533cc:	ldr	x0, [sp, #216]
  4533d0:	ldr	x0, [x0, #168]
  4533d4:	add	x1, x0, #0x1
  4533d8:	ldr	x0, [sp, #216]
  4533dc:	str	x1, [x0, #168]
  4533e0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4533e4:	add	x0, x0, #0xfc8
  4533e8:	bl	404c60 <gettext@plt>
  4533ec:	ldr	x1, [sp, #216]
  4533f0:	bl	4526e0 <argp_usage@@Base+0x95f4>
  4533f4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4533f8:	ldr	x0, [sp, #216]
  4533fc:	ldr	x0, [x0, #176]
  453400:	add	x1, x0, #0x1
  453404:	ldr	x0, [sp, #216]
  453408:	str	x1, [x0, #176]
  45340c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453410:	add	x0, x0, #0xfd0
  453414:	bl	404c60 <gettext@plt>
  453418:	ldr	x1, [sp, #216]
  45341c:	bl	4526e0 <argp_usage@@Base+0x95f4>
  453420:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453424:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453428:	add	x0, x0, #0xfd8
  45342c:	bl	404c60 <gettext@plt>
  453430:	ldr	x1, [sp, #216]
  453434:	bl	452c00 <argp_usage@@Base+0x9b14>
  453438:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45343c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453440:	add	x0, x0, #0xfe8
  453444:	bl	404c60 <gettext@plt>
  453448:	ldr	x1, [sp, #216]
  45344c:	bl	4526e0 <argp_usage@@Base+0x95f4>
  453450:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453454:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453458:	add	x0, x0, #0xff0
  45345c:	bl	404c60 <gettext@plt>
  453460:	ldr	x1, [sp, #216]
  453464:	bl	452c00 <argp_usage@@Base+0x9b14>
  453468:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45346c:	ldr	x0, [sp, #1632]
  453470:	sub	x0, x0, #0x38
  453474:	ldr	x0, [x0, #8]
  453478:	mov	w4, #0x0                   	// #0
  45347c:	mov	x3, #0x0                   	// #0
  453480:	mov	x2, #0x0                   	// #0
  453484:	mov	x1, x0
  453488:	ldr	x0, [sp, #216]
  45348c:	bl	45227c <argp_usage@@Base+0x9190>
  453490:	ldr	x0, [sp, #1632]
  453494:	ldr	x0, [x0]
  453498:	mov	w1, w0
  45349c:	ldr	x0, [sp, #216]
  4534a0:	str	w1, [x0, #28]
  4534a4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4534a8:	ldr	x0, [sp, #1632]
  4534ac:	sub	x0, x0, #0xa8
  4534b0:	ldr	x1, [x0, #8]
  4534b4:	ldr	x0, [sp, #1632]
  4534b8:	sub	x0, x0, #0x38
  4534bc:	ldr	x0, [x0, #8]
  4534c0:	mov	w4, #0x0                   	// #0
  4534c4:	mov	x3, #0x0                   	// #0
  4534c8:	mov	x2, x0
  4534cc:	ldr	x0, [sp, #216]
  4534d0:	bl	45227c <argp_usage@@Base+0x9190>
  4534d4:	ldr	x0, [sp, #1632]
  4534d8:	ldr	x0, [x0]
  4534dc:	mov	w1, w0
  4534e0:	ldr	x0, [sp, #216]
  4534e4:	str	w1, [x0, #28]
  4534e8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4534ec:	ldr	x0, [sp, #1632]
  4534f0:	sub	x0, x0, #0x118
  4534f4:	ldr	x1, [x0, #8]
  4534f8:	ldr	x0, [sp, #1632]
  4534fc:	sub	x0, x0, #0xa8
  453500:	ldr	x2, [x0, #8]
  453504:	ldr	x0, [sp, #1632]
  453508:	sub	x0, x0, #0x38
  45350c:	ldr	x3, [x0]
  453510:	ldr	x0, [sp, #1632]
  453514:	sub	x0, x0, #0x38
  453518:	ldr	x0, [x0, #8]
  45351c:	mov	w4, w0
  453520:	ldr	x0, [sp, #216]
  453524:	bl	45227c <argp_usage@@Base+0x9190>
  453528:	ldr	x0, [sp, #1632]
  45352c:	ldr	x0, [x0]
  453530:	mov	w1, w0
  453534:	ldr	x0, [sp, #216]
  453538:	str	w1, [x0, #28]
  45353c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453540:	ldr	x0, [sp, #1632]
  453544:	sub	x0, x0, #0x38
  453548:	ldr	x0, [x0, #8]
  45354c:	mov	w4, #0x0                   	// #0
  453550:	mov	x3, #0x0                   	// #0
  453554:	mov	x2, #0x0                   	// #0
  453558:	mov	x1, x0
  45355c:	ldr	x0, [sp, #216]
  453560:	bl	45227c <argp_usage@@Base+0x9190>
  453564:	ldr	x0, [sp, #216]
  453568:	mov	w1, #0x2                   	// #2
  45356c:	str	w1, [x0, #28]
  453570:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453574:	ldr	x0, [sp, #1632]
  453578:	sub	x0, x0, #0xa8
  45357c:	ldr	x1, [x0, #8]
  453580:	ldr	x0, [sp, #1632]
  453584:	sub	x0, x0, #0x38
  453588:	ldr	x0, [x0, #8]
  45358c:	mov	w4, #0x0                   	// #0
  453590:	mov	x3, #0x0                   	// #0
  453594:	mov	x2, x0
  453598:	ldr	x0, [sp, #216]
  45359c:	bl	45227c <argp_usage@@Base+0x9190>
  4535a0:	ldr	x0, [sp, #216]
  4535a4:	mov	w1, #0x2                   	// #2
  4535a8:	str	w1, [x0, #28]
  4535ac:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4535b0:	ldr	x0, [sp, #1632]
  4535b4:	sub	x0, x0, #0x118
  4535b8:	ldr	x1, [x0, #8]
  4535bc:	ldr	x0, [sp, #1632]
  4535c0:	sub	x0, x0, #0xa8
  4535c4:	ldr	x2, [x0, #8]
  4535c8:	ldr	x0, [sp, #1632]
  4535cc:	sub	x0, x0, #0x38
  4535d0:	ldr	x3, [x0]
  4535d4:	ldr	x0, [sp, #1632]
  4535d8:	sub	x0, x0, #0x38
  4535dc:	ldr	x0, [x0, #8]
  4535e0:	mov	w4, w0
  4535e4:	ldr	x0, [sp, #216]
  4535e8:	bl	45227c <argp_usage@@Base+0x9190>
  4535ec:	ldr	x0, [sp, #216]
  4535f0:	mov	w1, #0x2                   	// #2
  4535f4:	str	w1, [x0, #28]
  4535f8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4535fc:	ldr	x0, [sp, #216]
  453600:	ldr	x0, [x0, #208]
  453604:	add	x1, x0, #0x1
  453608:	ldr	x0, [sp, #216]
  45360c:	str	x1, [x0, #208]
  453610:	ldr	x0, [sp, #1632]
  453614:	sub	x1, x0, #0x38
  453618:	ldr	x0, [sp, #1632]
  45361c:	ldr	x4, [x0]
  453620:	add	x2, sp, #0xb0
  453624:	mov	x3, x1
  453628:	ldp	x0, x1, [x3]
  45362c:	stp	x0, x1, [x2]
  453630:	ldr	x0, [x3, #16]
  453634:	str	x0, [x2, #16]
  453638:	add	x0, sp, #0xb0
  45363c:	mov	x2, x4
  453640:	mov	x1, x0
  453644:	ldr	x0, [sp, #216]
  453648:	bl	454a94 <argp_usage@@Base+0xb9a8>
  45364c:	and	w0, w0, #0xff
  453650:	eor	w0, w0, #0x1
  453654:	and	w0, w0, #0xff
  453658:	cmp	w0, #0x0
  45365c:	b.eq	454584 <argp_usage@@Base+0xb498>  // b.none
  453660:	b	454940 <argp_usage@@Base+0xb854>
  453664:	ldr	x0, [sp, #1632]
  453668:	ldr	x0, [x0]
  45366c:	mov	w1, w0
  453670:	ldr	x0, [sp, #216]
  453674:	str	w1, [x0, #20]
  453678:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45367c:	ldr	x0, [sp, #216]
  453680:	mov	w1, #0x1                   	// #1
  453684:	str	w1, [x0, #20]
  453688:	ldr	x0, [sp, #216]
  45368c:	ldr	x0, [x0, #192]
  453690:	add	x1, x0, #0x1
  453694:	ldr	x0, [sp, #216]
  453698:	str	x1, [x0, #192]
  45369c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4536a0:	ldr	x0, [sp, #1632]
  4536a4:	ldr	x0, [x0]
  4536a8:	mov	w1, w0
  4536ac:	ldr	x0, [sp, #216]
  4536b0:	str	w1, [x0, #24]
  4536b4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4536b8:	ldr	x0, [sp, #216]
  4536bc:	mov	w1, #0x6270                	// #25200
  4536c0:	str	w1, [x0, #24]
  4536c4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4536c8:	ldr	x0, [sp, #1632]
  4536cc:	sub	x0, x0, #0x38
  4536d0:	ldr	x0, [x0]
  4536d4:	mov	w1, w0
  4536d8:	ldr	x0, [sp, #216]
  4536dc:	str	w1, [x0, #24]
  4536e0:	ldr	x1, [sp, #1632]
  4536e4:	add	x0, sp, #0x70
  4536e8:	ldp	x2, x3, [x1]
  4536ec:	stp	x2, x3, [x0]
  4536f0:	ldp	x2, x3, [x1, #16]
  4536f4:	stp	x2, x3, [x0, #16]
  4536f8:	ldp	x2, x3, [x1, #32]
  4536fc:	stp	x2, x3, [x0, #32]
  453700:	ldr	x1, [x1, #48]
  453704:	str	x1, [x0, #48]
  453708:	add	x0, sp, #0x70
  45370c:	mov	w2, #0x1                   	// #1
  453710:	mov	x1, x0
  453714:	ldr	x0, [sp, #216]
  453718:	bl	451efc <argp_usage@@Base+0x8e10>
  45371c:	and	w0, w0, #0xff
  453720:	eor	w0, w0, #0x1
  453724:	and	w0, w0, #0xff
  453728:	cmp	w0, #0x0
  45372c:	b.ne	4548f4 <argp_usage@@Base+0xb808>  // b.any
  453730:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  453734:	add	x0, x0, #0xfd8
  453738:	bl	404c60 <gettext@plt>
  45373c:	ldr	x1, [sp, #216]
  453740:	bl	452c00 <argp_usage@@Base+0x9b14>
  453744:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453748:	ldr	x0, [sp, #216]
  45374c:	mov	w1, #0x6270                	// #25200
  453750:	str	w1, [x0, #24]
  453754:	ldr	x1, [sp, #1632]
  453758:	add	x0, sp, #0x70
  45375c:	ldp	x2, x3, [x1]
  453760:	stp	x2, x3, [x0]
  453764:	ldp	x2, x3, [x1, #16]
  453768:	stp	x2, x3, [x0, #16]
  45376c:	ldp	x2, x3, [x1, #32]
  453770:	stp	x2, x3, [x0, #32]
  453774:	ldr	x1, [x1, #48]
  453778:	str	x1, [x0, #48]
  45377c:	add	x0, sp, #0x70
  453780:	mov	w2, #0x1                   	// #1
  453784:	mov	x1, x0
  453788:	ldr	x0, [sp, #216]
  45378c:	bl	451efc <argp_usage@@Base+0x8e10>
  453790:	and	w0, w0, #0xff
  453794:	eor	w0, w0, #0x1
  453798:	and	w0, w0, #0xff
  45379c:	cmp	w0, #0x0
  4537a0:	b.ne	4548fc <argp_usage@@Base+0xb810>  // b.any
  4537a4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4537a8:	add	x0, x0, #0xfd8
  4537ac:	bl	404c60 <gettext@plt>
  4537b0:	ldr	x1, [sp, #216]
  4537b4:	bl	452c00 <argp_usage@@Base+0x9b14>
  4537b8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4537bc:	ldr	x0, [sp, #1632]
  4537c0:	sub	x1, x0, #0x38
  4537c4:	ldr	x0, [sp, #1632]
  4537c8:	ldr	x4, [x0]
  4537cc:	add	x2, sp, #0x70
  4537d0:	mov	x3, x1
  4537d4:	ldp	x0, x1, [x3]
  4537d8:	stp	x0, x1, [x2]
  4537dc:	ldr	x0, [x3, #16]
  4537e0:	str	x0, [x2, #16]
  4537e4:	add	x0, sp, #0x70
  4537e8:	mov	x2, x4
  4537ec:	mov	x1, x0
  4537f0:	ldr	x0, [sp, #216]
  4537f4:	bl	454a94 <argp_usage@@Base+0xb9a8>
  4537f8:	and	w0, w0, #0xff
  4537fc:	eor	w0, w0, #0x1
  453800:	and	w0, w0, #0xff
  453804:	cmp	w0, #0x0
  453808:	b.ne	454904 <argp_usage@@Base+0xb818>  // b.any
  45380c:	ldr	x0, [sp, #216]
  453810:	ldr	w2, [x0, #24]
  453814:	ldr	x0, [sp, #1632]
  453818:	sub	x0, x0, #0x70
  45381c:	ldr	x1, [x0]
  453820:	sxtw	x2, w2
  453824:	mov	w0, #0x0                   	// #0
  453828:	adds	x1, x2, x1
  45382c:	b.vc	453834 <argp_usage@@Base+0xa748>
  453830:	mov	w0, #0x1                   	// #1
  453834:	sxtw	x2, w1
  453838:	cmp	x1, x2
  45383c:	b.eq	453844 <argp_usage@@Base+0xa758>  // b.none
  453840:	mov	w0, #0x1                   	// #1
  453844:	mov	w2, w1
  453848:	ldr	x1, [sp, #216]
  45384c:	str	w2, [x1, #24]
  453850:	and	w0, w0, #0x1
  453854:	and	w0, w0, #0xff
  453858:	cmp	w0, #0x0
  45385c:	b.eq	45458c <argp_usage@@Base+0xb4a0>  // b.none
  453860:	b	454940 <argp_usage@@Base+0xb854>
  453864:	ldr	x0, [sp, #1632]
  453868:	ldr	x0, [x0]
  45386c:	add	w0, w0, #0xe10
  453870:	mov	w1, w0
  453874:	ldr	x0, [sp, #216]
  453878:	str	w1, [x0, #24]
  45387c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453880:	ldr	x0, [sp, #1632]
  453884:	sub	x0, x0, #0x38
  453888:	ldr	x0, [x0]
  45388c:	add	w0, w0, #0xe10
  453890:	mov	w1, w0
  453894:	ldr	x0, [sp, #216]
  453898:	str	w1, [x0, #24]
  45389c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4538a0:	ldr	x0, [sp, #216]
  4538a4:	str	xzr, [x0, #8]
  4538a8:	ldr	x0, [sp, #1632]
  4538ac:	ldr	x0, [x0]
  4538b0:	mov	w1, w0
  4538b4:	ldr	x0, [sp, #216]
  4538b8:	str	w1, [x0, #16]
  4538bc:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4538c0:	ldr	x0, [sp, #216]
  4538c4:	str	xzr, [x0, #8]
  4538c8:	ldr	x0, [sp, #1632]
  4538cc:	sub	x0, x0, #0x38
  4538d0:	ldr	x0, [x0]
  4538d4:	mov	w1, w0
  4538d8:	ldr	x0, [sp, #216]
  4538dc:	str	w1, [x0, #16]
  4538e0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4538e4:	ldr	x0, [sp, #1632]
  4538e8:	sub	x0, x0, #0x38
  4538ec:	ldr	x1, [x0]
  4538f0:	ldr	x0, [sp, #216]
  4538f4:	str	x1, [x0, #8]
  4538f8:	ldr	x0, [sp, #1632]
  4538fc:	ldr	x0, [x0]
  453900:	mov	w1, w0
  453904:	ldr	x0, [sp, #216]
  453908:	str	w1, [x0, #16]
  45390c:	ldr	x0, [sp, #216]
  453910:	mov	w1, #0x1                   	// #1
  453914:	strb	w1, [x0, #224]
  453918:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45391c:	ldr	x0, [sp, #1632]
  453920:	sub	x0, x0, #0x38
  453924:	ldr	x1, [x0, #8]
  453928:	ldr	x0, [sp, #216]
  45392c:	str	x1, [x0, #8]
  453930:	ldr	x0, [sp, #1632]
  453934:	ldr	x0, [x0]
  453938:	mov	w1, w0
  45393c:	ldr	x0, [sp, #216]
  453940:	str	w1, [x0, #16]
  453944:	ldr	x0, [sp, #216]
  453948:	mov	w1, #0x1                   	// #1
  45394c:	strb	w1, [x0, #224]
  453950:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453954:	ldr	x0, [sp, #1632]
  453958:	sub	x0, x0, #0x70
  45395c:	ldr	x1, [x0, #8]
  453960:	ldr	x0, [sp, #216]
  453964:	str	x1, [x0, #56]
  453968:	ldr	x0, [sp, #1632]
  45396c:	ldr	x1, [x0, #8]
  453970:	ldr	x0, [sp, #216]
  453974:	str	x1, [x0, #64]
  453978:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45397c:	ldr	x0, [sp, #1632]
  453980:	sub	x0, x0, #0xe0
  453984:	ldr	x0, [x0, #16]
  453988:	cmp	x0, #0x3
  45398c:	b.le	453a2c <argp_usage@@Base+0xa940>
  453990:	ldr	x0, [sp, #216]
  453994:	ldrb	w0, [x0, #217]
  453998:	cmp	w0, #0x0
  45399c:	b.eq	4539dc <argp_usage@@Base+0xa8f0>  // b.none
  4539a0:	ldr	x0, [sp, #1632]
  4539a4:	sub	x0, x0, #0xe0
  4539a8:	ldr	x0, [x0, #16]
  4539ac:	str	x0, [sp, #1560]
  4539b0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4539b4:	add	x0, x0, #0xff8
  4539b8:	bl	404c60 <gettext@plt>
  4539bc:	mov	x3, x0
  4539c0:	ldr	x0, [sp, #1632]
  4539c4:	sub	x0, x0, #0xe0
  4539c8:	ldr	x0, [x0, #8]
  4539cc:	ldr	x2, [sp, #1560]
  4539d0:	mov	x1, x0
  4539d4:	mov	x0, x3
  4539d8:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4539dc:	ldr	x0, [sp, #1632]
  4539e0:	sub	x1, x0, #0xe0
  4539e4:	ldr	x0, [sp, #216]
  4539e8:	add	x0, x0, #0x20
  4539ec:	mov	x2, x0
  4539f0:	mov	x3, x1
  4539f4:	ldp	x0, x1, [x3]
  4539f8:	stp	x0, x1, [x2]
  4539fc:	ldr	x0, [x3, #16]
  453a00:	str	x0, [x2, #16]
  453a04:	ldr	x0, [sp, #1632]
  453a08:	sub	x0, x0, #0x70
  453a0c:	ldr	x1, [x0, #8]
  453a10:	ldr	x0, [sp, #216]
  453a14:	str	x1, [x0, #56]
  453a18:	ldr	x0, [sp, #1632]
  453a1c:	ldr	x1, [x0, #8]
  453a20:	ldr	x0, [sp, #216]
  453a24:	str	x1, [x0, #64]
  453a28:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453a2c:	ldr	x0, [sp, #216]
  453a30:	ldrb	w0, [x0, #217]
  453a34:	cmp	w0, #0x0
  453a38:	b.eq	453a64 <argp_usage@@Base+0xa978>  // b.none
  453a3c:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  453a40:	add	x0, x0, #0x30
  453a44:	bl	404c60 <gettext@plt>
  453a48:	mov	x2, x0
  453a4c:	ldr	x0, [sp, #1632]
  453a50:	sub	x0, x0, #0xe0
  453a54:	ldr	x0, [x0, #8]
  453a58:	mov	x1, x0
  453a5c:	mov	x0, x2
  453a60:	bl	451b9c <argp_usage@@Base+0x8ab0>
  453a64:	ldr	x0, [sp, #1632]
  453a68:	sub	x0, x0, #0xe0
  453a6c:	ldr	x1, [x0, #8]
  453a70:	ldr	x0, [sp, #216]
  453a74:	str	x1, [x0, #56]
  453a78:	ldr	x0, [sp, #1632]
  453a7c:	sub	x0, x0, #0x70
  453a80:	ldr	x1, [x0, #8]
  453a84:	ldr	x0, [sp, #216]
  453a88:	str	x1, [x0, #64]
  453a8c:	ldr	x0, [sp, #216]
  453a90:	add	x1, x0, #0x20
  453a94:	ldr	x0, [sp, #1632]
  453a98:	mov	x2, x1
  453a9c:	mov	x3, x0
  453aa0:	ldp	x0, x1, [x3]
  453aa4:	stp	x0, x1, [x2]
  453aa8:	ldr	x0, [x3, #16]
  453aac:	str	x0, [x2, #16]
  453ab0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453ab4:	ldr	x0, [sp, #1632]
  453ab8:	sub	x0, x0, #0x70
  453abc:	ldr	x1, [x0, #8]
  453ac0:	ldr	x0, [sp, #216]
  453ac4:	str	x1, [x0, #64]
  453ac8:	ldr	x0, [sp, #1632]
  453acc:	sub	x0, x0, #0x38
  453ad0:	ldr	x1, [x0]
  453ad4:	ldr	x0, [sp, #216]
  453ad8:	str	x1, [x0, #56]
  453adc:	ldr	x0, [sp, #1632]
  453ae0:	ldr	x0, [x0, #8]
  453ae4:	mov	x1, #0x0                   	// #0
  453ae8:	negs	x0, x0
  453aec:	b.vc	453af4 <argp_usage@@Base+0xaa08>
  453af0:	mov	x1, #0x1                   	// #1
  453af4:	mov	x2, x0
  453af8:	ldr	x0, [sp, #216]
  453afc:	str	x2, [x0, #40]
  453b00:	mov	x0, x1
  453b04:	and	w0, w0, #0x1
  453b08:	and	w0, w0, #0xff
  453b0c:	cmp	w0, #0x0
  453b10:	b.ne	45490c <argp_usage@@Base+0xb820>  // b.any
  453b14:	ldr	x0, [sp, #1632]
  453b18:	ldr	x1, [x0, #16]
  453b1c:	ldr	x0, [sp, #216]
  453b20:	str	x1, [x0, #48]
  453b24:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453b28:	ldr	x0, [sp, #1632]
  453b2c:	sub	x0, x0, #0x70
  453b30:	ldr	x1, [x0]
  453b34:	ldr	x0, [sp, #216]
  453b38:	str	x1, [x0, #56]
  453b3c:	ldr	x0, [sp, #1632]
  453b40:	sub	x0, x0, #0x38
  453b44:	ldr	x0, [x0, #8]
  453b48:	mov	x1, #0x0                   	// #0
  453b4c:	negs	x0, x0
  453b50:	b.vc	453b58 <argp_usage@@Base+0xaa6c>
  453b54:	mov	x1, #0x1                   	// #1
  453b58:	mov	x2, x0
  453b5c:	ldr	x0, [sp, #216]
  453b60:	str	x2, [x0, #64]
  453b64:	mov	x0, x1
  453b68:	and	w0, w0, #0x1
  453b6c:	and	w0, w0, #0xff
  453b70:	cmp	w0, #0x0
  453b74:	b.ne	454914 <argp_usage@@Base+0xb828>  // b.any
  453b78:	ldr	x0, [sp, #1632]
  453b7c:	ldr	x0, [x0, #8]
  453b80:	mov	x1, #0x0                   	// #0
  453b84:	negs	x0, x0
  453b88:	b.vc	453b90 <argp_usage@@Base+0xaaa4>
  453b8c:	mov	x1, #0x1                   	// #1
  453b90:	mov	x2, x0
  453b94:	ldr	x0, [sp, #216]
  453b98:	str	x2, [x0, #40]
  453b9c:	mov	x0, x1
  453ba0:	and	w0, w0, #0x1
  453ba4:	and	w0, w0, #0xff
  453ba8:	cmp	w0, #0x0
  453bac:	b.ne	45491c <argp_usage@@Base+0xb830>  // b.any
  453bb0:	ldr	x0, [sp, #1632]
  453bb4:	ldr	x1, [x0, #16]
  453bb8:	ldr	x0, [sp, #216]
  453bbc:	str	x1, [x0, #48]
  453bc0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453bc4:	ldr	x0, [sp, #1632]
  453bc8:	sub	x0, x0, #0x38
  453bcc:	ldr	x1, [x0]
  453bd0:	ldr	x0, [sp, #216]
  453bd4:	str	x1, [x0, #56]
  453bd8:	ldr	x0, [sp, #1632]
  453bdc:	ldr	x1, [x0, #8]
  453be0:	ldr	x0, [sp, #216]
  453be4:	str	x1, [x0, #64]
  453be8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453bec:	ldr	x0, [sp, #1632]
  453bf0:	sub	x0, x0, #0xa8
  453bf4:	ldr	x1, [x0]
  453bf8:	ldr	x0, [sp, #216]
  453bfc:	str	x1, [x0, #56]
  453c00:	ldr	x0, [sp, #1632]
  453c04:	sub	x0, x0, #0x70
  453c08:	ldr	x1, [x0, #8]
  453c0c:	ldr	x0, [sp, #216]
  453c10:	str	x1, [x0, #64]
  453c14:	ldr	x0, [sp, #216]
  453c18:	add	x1, x0, #0x20
  453c1c:	ldr	x0, [sp, #1632]
  453c20:	mov	x2, x1
  453c24:	mov	x3, x0
  453c28:	ldp	x0, x1, [x3]
  453c2c:	stp	x0, x1, [x2]
  453c30:	ldr	x0, [x3, #16]
  453c34:	str	x0, [x2, #16]
  453c38:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453c3c:	ldr	x0, [sp, #1632]
  453c40:	sub	x0, x0, #0x38
  453c44:	ldr	x1, [x0, #8]
  453c48:	ldr	x0, [sp, #216]
  453c4c:	str	x1, [x0, #64]
  453c50:	ldr	x0, [sp, #1632]
  453c54:	ldr	x1, [x0]
  453c58:	ldr	x0, [sp, #216]
  453c5c:	str	x1, [x0, #56]
  453c60:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453c64:	ldr	x0, [sp, #1632]
  453c68:	sub	x0, x0, #0x70
  453c6c:	ldr	x1, [x0, #8]
  453c70:	ldr	x0, [sp, #216]
  453c74:	str	x1, [x0, #64]
  453c78:	ldr	x0, [sp, #1632]
  453c7c:	sub	x0, x0, #0x38
  453c80:	ldr	x1, [x0]
  453c84:	ldr	x0, [sp, #216]
  453c88:	str	x1, [x0, #56]
  453c8c:	ldr	x0, [sp, #216]
  453c90:	add	x1, x0, #0x20
  453c94:	ldr	x0, [sp, #1632]
  453c98:	mov	x2, x1
  453c9c:	mov	x3, x0
  453ca0:	ldp	x0, x1, [x3]
  453ca4:	stp	x0, x1, [x2]
  453ca8:	ldr	x0, [x3, #16]
  453cac:	str	x0, [x2, #16]
  453cb0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453cb4:	ldr	x0, [sp, #1632]
  453cb8:	sub	x1, x0, #0x70
  453cbc:	ldr	x0, [sp, #216]
  453cc0:	add	x0, x0, #0x20
  453cc4:	mov	x2, x0
  453cc8:	mov	x3, x1
  453ccc:	ldp	x0, x1, [x3]
  453cd0:	stp	x0, x1, [x2]
  453cd4:	ldr	x0, [x3, #16]
  453cd8:	str	x0, [x2, #16]
  453cdc:	ldr	x0, [sp, #1632]
  453ce0:	sub	x0, x0, #0x38
  453ce4:	ldr	x0, [x0, #8]
  453ce8:	mov	x1, #0x0                   	// #0
  453cec:	negs	x0, x0
  453cf0:	b.vc	453cf8 <argp_usage@@Base+0xac0c>
  453cf4:	mov	x1, #0x1                   	// #1
  453cf8:	mov	x2, x0
  453cfc:	ldr	x0, [sp, #216]
  453d00:	str	x2, [x0, #56]
  453d04:	mov	x0, x1
  453d08:	and	w0, w0, #0x1
  453d0c:	and	w0, w0, #0xff
  453d10:	cmp	w0, #0x0
  453d14:	b.ne	454924 <argp_usage@@Base+0xb838>  // b.any
  453d18:	ldr	x0, [sp, #1632]
  453d1c:	ldr	x0, [x0, #8]
  453d20:	mov	x1, #0x0                   	// #0
  453d24:	negs	x0, x0
  453d28:	b.vc	453d30 <argp_usage@@Base+0xac44>
  453d2c:	mov	x1, #0x1                   	// #1
  453d30:	mov	x2, x0
  453d34:	ldr	x0, [sp, #216]
  453d38:	str	x2, [x0, #64]
  453d3c:	mov	x0, x1
  453d40:	and	w0, w0, #0x1
  453d44:	and	w0, w0, #0xff
  453d48:	cmp	w0, #0x0
  453d4c:	b.eq	454594 <argp_usage@@Base+0xb4a8>  // b.none
  453d50:	b	454940 <argp_usage@@Base+0xb854>
  453d54:	ldr	x0, [sp, #1632]
  453d58:	sub	x1, x0, #0x38
  453d5c:	ldr	x0, [sp, #1632]
  453d60:	ldr	x0, [x0]
  453d64:	mov	w4, w0
  453d68:	add	x0, sp, #0x70
  453d6c:	ldp	x2, x3, [x1]
  453d70:	stp	x2, x3, [x0]
  453d74:	ldp	x2, x3, [x1, #16]
  453d78:	stp	x2, x3, [x0, #16]
  453d7c:	ldp	x2, x3, [x1, #32]
  453d80:	stp	x2, x3, [x0, #32]
  453d84:	ldr	x1, [x1, #48]
  453d88:	str	x1, [x0, #48]
  453d8c:	add	x0, sp, #0x70
  453d90:	mov	w2, w4
  453d94:	mov	x1, x0
  453d98:	ldr	x0, [sp, #216]
  453d9c:	bl	451efc <argp_usage@@Base+0x8e10>
  453da0:	and	w0, w0, #0xff
  453da4:	eor	w0, w0, #0x1
  453da8:	and	w0, w0, #0xff
  453dac:	cmp	w0, #0x0
  453db0:	b.eq	45459c <argp_usage@@Base+0xb4b0>  // b.none
  453db4:	b	454940 <argp_usage@@Base+0xb854>
  453db8:	ldr	x1, [sp, #1632]
  453dbc:	add	x0, sp, #0x70
  453dc0:	ldp	x2, x3, [x1]
  453dc4:	stp	x2, x3, [x0]
  453dc8:	ldp	x2, x3, [x1, #16]
  453dcc:	stp	x2, x3, [x0, #16]
  453dd0:	ldp	x2, x3, [x1, #32]
  453dd4:	stp	x2, x3, [x0, #32]
  453dd8:	ldr	x1, [x1, #48]
  453ddc:	str	x1, [x0, #48]
  453de0:	add	x0, sp, #0x70
  453de4:	mov	w2, #0x1                   	// #1
  453de8:	mov	x1, x0
  453dec:	ldr	x0, [sp, #216]
  453df0:	bl	451efc <argp_usage@@Base+0x8e10>
  453df4:	and	w0, w0, #0xff
  453df8:	eor	w0, w0, #0x1
  453dfc:	and	w0, w0, #0xff
  453e00:	cmp	w0, #0x0
  453e04:	b.eq	4545a4 <argp_usage@@Base+0xb4b8>  // b.none
  453e08:	b	454940 <argp_usage@@Base+0xb854>
  453e0c:	ldr	x1, [sp, #1632]
  453e10:	add	x0, sp, #0x70
  453e14:	ldp	x2, x3, [x1]
  453e18:	stp	x2, x3, [x0]
  453e1c:	ldp	x2, x3, [x1, #16]
  453e20:	stp	x2, x3, [x0, #16]
  453e24:	ldp	x2, x3, [x1, #32]
  453e28:	stp	x2, x3, [x0, #32]
  453e2c:	ldr	x1, [x1, #48]
  453e30:	str	x1, [x0, #48]
  453e34:	add	x0, sp, #0x70
  453e38:	mov	w2, #0x1                   	// #1
  453e3c:	mov	x1, x0
  453e40:	ldr	x0, [sp, #216]
  453e44:	bl	451efc <argp_usage@@Base+0x8e10>
  453e48:	and	w0, w0, #0xff
  453e4c:	eor	w0, w0, #0x1
  453e50:	and	w0, w0, #0xff
  453e54:	cmp	w0, #0x0
  453e58:	b.eq	4545ac <argp_usage@@Base+0xb4c0>  // b.none
  453e5c:	b	454940 <argp_usage@@Base+0xb854>
  453e60:	str	xzr, [sp, #288]
  453e64:	str	xzr, [sp, #296]
  453e68:	str	xzr, [sp, #304]
  453e6c:	str	xzr, [sp, #312]
  453e70:	str	xzr, [sp, #320]
  453e74:	str	xzr, [sp, #328]
  453e78:	str	wzr, [sp, #336]
  453e7c:	ldr	x0, [sp, #1632]
  453e80:	sub	x0, x0, #0x38
  453e84:	ldr	x0, [x0]
  453e88:	str	x0, [sp, #288]
  453e8c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453e90:	str	xzr, [sp, #288]
  453e94:	str	xzr, [sp, #296]
  453e98:	str	xzr, [sp, #304]
  453e9c:	str	xzr, [sp, #312]
  453ea0:	str	xzr, [sp, #320]
  453ea4:	str	xzr, [sp, #328]
  453ea8:	str	wzr, [sp, #336]
  453eac:	ldr	x0, [sp, #1632]
  453eb0:	sub	x0, x0, #0x38
  453eb4:	ldr	x0, [x0, #8]
  453eb8:	str	x0, [sp, #288]
  453ebc:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453ec0:	str	xzr, [sp, #288]
  453ec4:	str	xzr, [sp, #296]
  453ec8:	str	xzr, [sp, #304]
  453ecc:	str	xzr, [sp, #312]
  453ed0:	str	xzr, [sp, #320]
  453ed4:	str	xzr, [sp, #328]
  453ed8:	str	wzr, [sp, #336]
  453edc:	mov	x0, #0x1                   	// #1
  453ee0:	str	x0, [sp, #288]
  453ee4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453ee8:	str	xzr, [sp, #288]
  453eec:	str	xzr, [sp, #296]
  453ef0:	str	xzr, [sp, #304]
  453ef4:	str	xzr, [sp, #312]
  453ef8:	str	xzr, [sp, #320]
  453efc:	str	xzr, [sp, #328]
  453f00:	str	wzr, [sp, #336]
  453f04:	ldr	x0, [sp, #1632]
  453f08:	sub	x0, x0, #0x38
  453f0c:	ldr	x0, [x0]
  453f10:	str	x0, [sp, #296]
  453f14:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453f18:	str	xzr, [sp, #288]
  453f1c:	str	xzr, [sp, #296]
  453f20:	str	xzr, [sp, #304]
  453f24:	str	xzr, [sp, #312]
  453f28:	str	xzr, [sp, #320]
  453f2c:	str	xzr, [sp, #328]
  453f30:	str	wzr, [sp, #336]
  453f34:	ldr	x0, [sp, #1632]
  453f38:	sub	x0, x0, #0x38
  453f3c:	ldr	x0, [x0, #8]
  453f40:	str	x0, [sp, #296]
  453f44:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453f48:	str	xzr, [sp, #288]
  453f4c:	str	xzr, [sp, #296]
  453f50:	str	xzr, [sp, #304]
  453f54:	str	xzr, [sp, #312]
  453f58:	str	xzr, [sp, #320]
  453f5c:	str	xzr, [sp, #328]
  453f60:	str	wzr, [sp, #336]
  453f64:	mov	x0, #0x1                   	// #1
  453f68:	str	x0, [sp, #296]
  453f6c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  453f70:	str	xzr, [sp, #288]
  453f74:	str	xzr, [sp, #296]
  453f78:	str	xzr, [sp, #304]
  453f7c:	str	xzr, [sp, #312]
  453f80:	str	xzr, [sp, #320]
  453f84:	str	xzr, [sp, #328]
  453f88:	str	wzr, [sp, #336]
  453f8c:	ldr	x0, [sp, #1632]
  453f90:	sub	x0, x0, #0x38
  453f94:	ldr	x1, [x0]
  453f98:	ldr	x0, [sp, #1632]
  453f9c:	ldr	x0, [x0]
  453fa0:	mov	x2, #0x0                   	// #0
  453fa4:	mul	x3, x1, x0
  453fa8:	smulh	x0, x1, x0
  453fac:	mov	x20, x3
  453fb0:	mov	x21, x0
  453fb4:	mov	x26, x21
  453fb8:	asr	x27, x21, #63
  453fbc:	asr	x0, x20, #63
  453fc0:	cmp	x0, x26
  453fc4:	b.eq	453fcc <argp_usage@@Base+0xaee0>  // b.none
  453fc8:	mov	x2, #0x1                   	// #1
  453fcc:	mov	x0, x20
  453fd0:	str	x0, [sp, #304]
  453fd4:	mov	x0, x2
  453fd8:	and	w0, w0, #0x1
  453fdc:	and	w0, w0, #0xff
  453fe0:	cmp	w0, #0x0
  453fe4:	b.eq	4545b4 <argp_usage@@Base+0xb4c8>  // b.none
  453fe8:	b	454940 <argp_usage@@Base+0xb854>
  453fec:	str	xzr, [sp, #288]
  453ff0:	str	xzr, [sp, #296]
  453ff4:	str	xzr, [sp, #304]
  453ff8:	str	xzr, [sp, #312]
  453ffc:	str	xzr, [sp, #320]
  454000:	str	xzr, [sp, #328]
  454004:	str	wzr, [sp, #336]
  454008:	ldr	x0, [sp, #1632]
  45400c:	sub	x0, x0, #0x38
  454010:	ldr	x1, [x0, #8]
  454014:	ldr	x0, [sp, #1632]
  454018:	ldr	x0, [x0]
  45401c:	mov	x2, #0x0                   	// #0
  454020:	mul	x3, x1, x0
  454024:	smulh	x0, x1, x0
  454028:	mov	x22, x3
  45402c:	mov	x23, x0
  454030:	str	x23, [sp, #80]
  454034:	asr	x0, x23, #63
  454038:	str	x0, [sp, #88]
  45403c:	asr	x0, x22, #63
  454040:	ldr	x1, [sp, #80]
  454044:	cmp	x0, x1
  454048:	b.eq	454050 <argp_usage@@Base+0xaf64>  // b.none
  45404c:	mov	x2, #0x1                   	// #1
  454050:	mov	x0, x22
  454054:	str	x0, [sp, #304]
  454058:	mov	x0, x2
  45405c:	and	w0, w0, #0x1
  454060:	and	w0, w0, #0xff
  454064:	cmp	w0, #0x0
  454068:	b.eq	4545bc <argp_usage@@Base+0xb4d0>  // b.none
  45406c:	b	454940 <argp_usage@@Base+0xb854>
  454070:	str	xzr, [sp, #288]
  454074:	str	xzr, [sp, #296]
  454078:	str	xzr, [sp, #304]
  45407c:	str	xzr, [sp, #312]
  454080:	str	xzr, [sp, #320]
  454084:	str	xzr, [sp, #328]
  454088:	str	wzr, [sp, #336]
  45408c:	ldr	x0, [sp, #1632]
  454090:	ldr	x0, [x0]
  454094:	str	x0, [sp, #304]
  454098:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45409c:	str	xzr, [sp, #288]
  4540a0:	str	xzr, [sp, #296]
  4540a4:	str	xzr, [sp, #304]
  4540a8:	str	xzr, [sp, #312]
  4540ac:	str	xzr, [sp, #320]
  4540b0:	str	xzr, [sp, #328]
  4540b4:	str	wzr, [sp, #336]
  4540b8:	ldr	x0, [sp, #1632]
  4540bc:	sub	x0, x0, #0x38
  4540c0:	ldr	x0, [x0]
  4540c4:	str	x0, [sp, #312]
  4540c8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4540cc:	str	xzr, [sp, #288]
  4540d0:	str	xzr, [sp, #296]
  4540d4:	str	xzr, [sp, #304]
  4540d8:	str	xzr, [sp, #312]
  4540dc:	str	xzr, [sp, #320]
  4540e0:	str	xzr, [sp, #328]
  4540e4:	str	wzr, [sp, #336]
  4540e8:	ldr	x0, [sp, #1632]
  4540ec:	sub	x0, x0, #0x38
  4540f0:	ldr	x0, [x0, #8]
  4540f4:	str	x0, [sp, #312]
  4540f8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4540fc:	str	xzr, [sp, #288]
  454100:	str	xzr, [sp, #296]
  454104:	str	xzr, [sp, #304]
  454108:	str	xzr, [sp, #312]
  45410c:	str	xzr, [sp, #320]
  454110:	str	xzr, [sp, #328]
  454114:	str	wzr, [sp, #336]
  454118:	mov	x0, #0x1                   	// #1
  45411c:	str	x0, [sp, #312]
  454120:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454124:	str	xzr, [sp, #288]
  454128:	str	xzr, [sp, #296]
  45412c:	str	xzr, [sp, #304]
  454130:	str	xzr, [sp, #312]
  454134:	str	xzr, [sp, #320]
  454138:	str	xzr, [sp, #328]
  45413c:	str	wzr, [sp, #336]
  454140:	ldr	x0, [sp, #1632]
  454144:	sub	x0, x0, #0x38
  454148:	ldr	x0, [x0]
  45414c:	str	x0, [sp, #320]
  454150:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454154:	str	xzr, [sp, #288]
  454158:	str	xzr, [sp, #296]
  45415c:	str	xzr, [sp, #304]
  454160:	str	xzr, [sp, #312]
  454164:	str	xzr, [sp, #320]
  454168:	str	xzr, [sp, #328]
  45416c:	str	wzr, [sp, #336]
  454170:	ldr	x0, [sp, #1632]
  454174:	sub	x0, x0, #0x38
  454178:	ldr	x0, [x0, #8]
  45417c:	str	x0, [sp, #320]
  454180:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454184:	str	xzr, [sp, #288]
  454188:	str	xzr, [sp, #296]
  45418c:	str	xzr, [sp, #304]
  454190:	str	xzr, [sp, #312]
  454194:	str	xzr, [sp, #320]
  454198:	str	xzr, [sp, #328]
  45419c:	str	wzr, [sp, #336]
  4541a0:	mov	x0, #0x1                   	// #1
  4541a4:	str	x0, [sp, #320]
  4541a8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4541ac:	str	xzr, [sp, #288]
  4541b0:	str	xzr, [sp, #296]
  4541b4:	str	xzr, [sp, #304]
  4541b8:	str	xzr, [sp, #312]
  4541bc:	str	xzr, [sp, #320]
  4541c0:	str	xzr, [sp, #328]
  4541c4:	str	wzr, [sp, #336]
  4541c8:	ldr	x0, [sp, #1632]
  4541cc:	sub	x0, x0, #0x38
  4541d0:	ldr	x0, [x0]
  4541d4:	str	x0, [sp, #328]
  4541d8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4541dc:	str	xzr, [sp, #288]
  4541e0:	str	xzr, [sp, #296]
  4541e4:	str	xzr, [sp, #304]
  4541e8:	str	xzr, [sp, #312]
  4541ec:	str	xzr, [sp, #320]
  4541f0:	str	xzr, [sp, #328]
  4541f4:	str	wzr, [sp, #336]
  4541f8:	ldr	x0, [sp, #1632]
  4541fc:	sub	x0, x0, #0x38
  454200:	ldr	x0, [x0, #8]
  454204:	str	x0, [sp, #328]
  454208:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45420c:	str	xzr, [sp, #288]
  454210:	str	xzr, [sp, #296]
  454214:	str	xzr, [sp, #304]
  454218:	str	xzr, [sp, #312]
  45421c:	str	xzr, [sp, #320]
  454220:	str	xzr, [sp, #328]
  454224:	str	wzr, [sp, #336]
  454228:	ldr	x0, [sp, #1632]
  45422c:	sub	x0, x0, #0x38
  454230:	ldr	x0, [x0]
  454234:	str	x0, [sp, #328]
  454238:	ldr	x0, [sp, #1632]
  45423c:	sub	x0, x0, #0x38
  454240:	ldr	x0, [x0, #8]
  454244:	str	w0, [sp, #336]
  454248:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45424c:	str	xzr, [sp, #288]
  454250:	str	xzr, [sp, #296]
  454254:	str	xzr, [sp, #304]
  454258:	str	xzr, [sp, #312]
  45425c:	str	xzr, [sp, #320]
  454260:	str	xzr, [sp, #328]
  454264:	str	wzr, [sp, #336]
  454268:	ldr	x0, [sp, #1632]
  45426c:	sub	x0, x0, #0x38
  454270:	ldr	x0, [x0]
  454274:	str	x0, [sp, #328]
  454278:	ldr	x0, [sp, #1632]
  45427c:	sub	x0, x0, #0x38
  454280:	ldr	x0, [x0, #8]
  454284:	str	w0, [sp, #336]
  454288:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45428c:	str	xzr, [sp, #288]
  454290:	str	xzr, [sp, #296]
  454294:	str	xzr, [sp, #304]
  454298:	str	xzr, [sp, #312]
  45429c:	str	xzr, [sp, #320]
  4542a0:	str	xzr, [sp, #328]
  4542a4:	str	wzr, [sp, #336]
  4542a8:	mov	x0, #0x1                   	// #1
  4542ac:	str	x0, [sp, #328]
  4542b0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4542b4:	str	xzr, [sp, #288]
  4542b8:	str	xzr, [sp, #296]
  4542bc:	str	xzr, [sp, #304]
  4542c0:	str	xzr, [sp, #312]
  4542c4:	str	xzr, [sp, #320]
  4542c8:	str	xzr, [sp, #328]
  4542cc:	str	wzr, [sp, #336]
  4542d0:	ldr	x0, [sp, #1632]
  4542d4:	sub	x0, x0, #0x38
  4542d8:	ldr	x0, [x0, #8]
  4542dc:	str	x0, [sp, #288]
  4542e0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4542e4:	str	xzr, [sp, #288]
  4542e8:	str	xzr, [sp, #296]
  4542ec:	str	xzr, [sp, #304]
  4542f0:	str	xzr, [sp, #312]
  4542f4:	str	xzr, [sp, #320]
  4542f8:	str	xzr, [sp, #328]
  4542fc:	str	wzr, [sp, #336]
  454300:	ldr	x0, [sp, #1632]
  454304:	sub	x0, x0, #0x38
  454308:	ldr	x0, [x0, #8]
  45430c:	str	x0, [sp, #296]
  454310:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454314:	str	xzr, [sp, #288]
  454318:	str	xzr, [sp, #296]
  45431c:	str	xzr, [sp, #304]
  454320:	str	xzr, [sp, #312]
  454324:	str	xzr, [sp, #320]
  454328:	str	xzr, [sp, #328]
  45432c:	str	wzr, [sp, #336]
  454330:	ldr	x0, [sp, #1632]
  454334:	sub	x0, x0, #0x38
  454338:	ldr	x1, [x0, #8]
  45433c:	ldr	x0, [sp, #1632]
  454340:	ldr	x0, [x0]
  454344:	mov	x2, #0x0                   	// #0
  454348:	mul	x3, x1, x0
  45434c:	smulh	x0, x1, x0
  454350:	mov	x24, x3
  454354:	mov	x25, x0
  454358:	str	x25, [sp, #96]
  45435c:	asr	x0, x25, #63
  454360:	str	x0, [sp, #104]
  454364:	asr	x0, x24, #63
  454368:	ldr	x1, [sp, #96]
  45436c:	cmp	x0, x1
  454370:	b.eq	454378 <argp_usage@@Base+0xb28c>  // b.none
  454374:	mov	x2, #0x1                   	// #1
  454378:	mov	x0, x24
  45437c:	str	x0, [sp, #304]
  454380:	mov	x0, x2
  454384:	and	w0, w0, #0x1
  454388:	and	w0, w0, #0xff
  45438c:	cmp	w0, #0x0
  454390:	b.eq	4545c4 <argp_usage@@Base+0xb4d8>  // b.none
  454394:	b	454940 <argp_usage@@Base+0xb854>
  454398:	str	xzr, [sp, #288]
  45439c:	str	xzr, [sp, #296]
  4543a0:	str	xzr, [sp, #304]
  4543a4:	str	xzr, [sp, #312]
  4543a8:	str	xzr, [sp, #320]
  4543ac:	str	xzr, [sp, #328]
  4543b0:	str	wzr, [sp, #336]
  4543b4:	ldr	x0, [sp, #1632]
  4543b8:	sub	x0, x0, #0x38
  4543bc:	ldr	x0, [x0, #8]
  4543c0:	str	x0, [sp, #312]
  4543c4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4543c8:	str	xzr, [sp, #288]
  4543cc:	str	xzr, [sp, #296]
  4543d0:	str	xzr, [sp, #304]
  4543d4:	str	xzr, [sp, #312]
  4543d8:	str	xzr, [sp, #320]
  4543dc:	str	xzr, [sp, #328]
  4543e0:	str	wzr, [sp, #336]
  4543e4:	ldr	x0, [sp, #1632]
  4543e8:	sub	x0, x0, #0x38
  4543ec:	ldr	x0, [x0, #8]
  4543f0:	str	x0, [sp, #320]
  4543f4:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4543f8:	str	xzr, [sp, #288]
  4543fc:	str	xzr, [sp, #296]
  454400:	str	xzr, [sp, #304]
  454404:	str	xzr, [sp, #312]
  454408:	str	xzr, [sp, #320]
  45440c:	str	xzr, [sp, #328]
  454410:	str	wzr, [sp, #336]
  454414:	ldr	x0, [sp, #1632]
  454418:	sub	x0, x0, #0x38
  45441c:	ldr	x0, [x0, #8]
  454420:	str	x0, [sp, #328]
  454424:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454428:	str	xzr, [sp, #288]
  45442c:	str	xzr, [sp, #296]
  454430:	str	xzr, [sp, #304]
  454434:	str	xzr, [sp, #312]
  454438:	str	xzr, [sp, #320]
  45443c:	str	xzr, [sp, #328]
  454440:	str	wzr, [sp, #336]
  454444:	ldr	x0, [sp, #1632]
  454448:	ldr	x0, [x0]
  45444c:	str	x0, [sp, #304]
  454450:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454454:	ldr	x0, [sp, #1632]
  454458:	ldr	x0, [x0, #8]
  45445c:	bl	451b74 <argp_usage@@Base+0x8a88>
  454460:	and	w0, w0, #0xff
  454464:	cmp	w0, #0x0
  454468:	b.ne	45492c <argp_usage@@Base+0xb840>  // b.any
  45446c:	ldr	x0, [sp, #1632]
  454470:	ldr	x0, [x0, #8]
  454474:	str	x0, [sp, #288]
  454478:	str	xzr, [sp, #296]
  45447c:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454480:	ldr	x0, [sp, #1632]
  454484:	ldr	x0, [x0, #8]
  454488:	bl	451b74 <argp_usage@@Base+0x8a88>
  45448c:	and	w0, w0, #0xff
  454490:	cmp	w0, #0x0
  454494:	b.ne	454934 <argp_usage@@Base+0xb848>  // b.any
  454498:	ldr	x0, [sp, #1632]
  45449c:	ldr	x0, [x0, #8]
  4544a0:	str	x0, [sp, #288]
  4544a4:	str	xzr, [sp, #296]
  4544a8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4544ac:	ldr	x0, [sp, #1632]
  4544b0:	add	x2, sp, #0x70
  4544b4:	mov	x3, x0
  4544b8:	ldp	x0, x1, [x3]
  4544bc:	stp	x0, x1, [x2]
  4544c0:	ldr	x0, [x3, #16]
  4544c4:	str	x0, [x2, #16]
  4544c8:	add	x0, sp, #0x70
  4544cc:	mov	x1, x0
  4544d0:	ldr	x0, [sp, #216]
  4544d4:	bl	451c74 <argp_usage@@Base+0x8b88>
  4544d8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4544dc:	ldr	x0, [sp, #1632]
  4544e0:	sub	x0, x0, #0x38
  4544e4:	add	x2, sp, #0x70
  4544e8:	mov	x3, x0
  4544ec:	ldp	x0, x1, [x3]
  4544f0:	stp	x0, x1, [x2]
  4544f4:	ldr	x0, [x3, #16]
  4544f8:	str	x0, [x2, #16]
  4544fc:	add	x0, sp, #0x70
  454500:	mov	x1, x0
  454504:	ldr	x0, [sp, #216]
  454508:	bl	451c74 <argp_usage@@Base+0x8b88>
  45450c:	ldr	x1, [sp, #1632]
  454510:	add	x0, sp, #0x70
  454514:	ldp	x2, x3, [x1]
  454518:	stp	x2, x3, [x0]
  45451c:	ldp	x2, x3, [x1, #16]
  454520:	stp	x2, x3, [x0, #16]
  454524:	ldp	x2, x3, [x1, #32]
  454528:	stp	x2, x3, [x0, #32]
  45452c:	ldr	x1, [x1, #48]
  454530:	str	x1, [x0, #48]
  454534:	add	x0, sp, #0x70
  454538:	mov	w2, #0x1                   	// #1
  45453c:	mov	x1, x0
  454540:	ldr	x0, [sp, #216]
  454544:	bl	451efc <argp_usage@@Base+0x8e10>
  454548:	and	w0, w0, #0xff
  45454c:	eor	w0, w0, #0x1
  454550:	and	w0, w0, #0xff
  454554:	cmp	w0, #0x0
  454558:	b.eq	4545cc <argp_usage@@Base+0xb4e0>  // b.none
  45455c:	b	454940 <argp_usage@@Base+0xb854>
  454560:	mov	x0, #0xffffffffffffffff    	// #-1
  454564:	str	x0, [sp, #288]
  454568:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45456c:	ldr	x0, [sp, #1632]
  454570:	ldr	x0, [x0, #8]
  454574:	str	x0, [sp, #288]
  454578:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45457c:	nop
  454580:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454584:	nop
  454588:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45458c:	nop
  454590:	b	4545d0 <argp_usage@@Base+0xb4e4>
  454594:	nop
  454598:	b	4545d0 <argp_usage@@Base+0xb4e4>
  45459c:	nop
  4545a0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4545a4:	nop
  4545a8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4545ac:	nop
  4545b0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4545b4:	nop
  4545b8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4545bc:	nop
  4545c0:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4545c4:	nop
  4545c8:	b	4545d0 <argp_usage@@Base+0xb4e4>
  4545cc:	nop
  4545d0:	ldrsw	x1, [sp, #1608]
  4545d4:	mov	x0, x1
  4545d8:	lsl	x0, x0, #3
  4545dc:	sub	x0, x0, x1
  4545e0:	lsl	x0, x0, #3
  4545e4:	neg	x0, x0
  4545e8:	ldr	x1, [sp, #1632]
  4545ec:	add	x0, x1, x0
  4545f0:	str	x0, [sp, #1632]
  4545f4:	ldrsw	x0, [sp, #1608]
  4545f8:	lsl	x0, x0, #1
  4545fc:	neg	x0, x0
  454600:	ldr	x1, [sp, #1648]
  454604:	add	x0, x1, x0
  454608:	str	x0, [sp, #1648]
  45460c:	str	wzr, [sp, #1608]
  454610:	ldr	x0, [sp, #1632]
  454614:	add	x0, x0, #0x38
  454618:	str	x0, [sp, #1632]
  45461c:	ldr	x0, [sp, #1632]
  454620:	mov	x1, x0
  454624:	add	x0, sp, #0x120
  454628:	ldp	x2, x3, [x0]
  45462c:	stp	x2, x3, [x1]
  454630:	ldp	x2, x3, [x0, #16]
  454634:	stp	x2, x3, [x1, #16]
  454638:	ldp	x2, x3, [x0, #32]
  45463c:	stp	x2, x3, [x1, #32]
  454640:	ldr	x0, [x0, #48]
  454644:	str	x0, [x1, #48]
  454648:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45464c:	add	x1, x0, #0xc18
  454650:	ldrsw	x0, [sp, #1620]
  454654:	ldrb	w0, [x1, x0]
  454658:	str	w0, [sp, #1620]
  45465c:	ldr	w0, [sp, #1620]
  454660:	sub	w2, w0, #0x1c
  454664:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  454668:	add	x1, x0, #0xde8
  45466c:	sxtw	x0, w2
  454670:	ldrsb	w0, [x1, x0]
  454674:	mov	w1, w0
  454678:	ldr	x0, [sp, #1648]
  45467c:	ldrsh	w0, [x0]
  454680:	add	w0, w1, w0
  454684:	str	w0, [sp, #1668]
  454688:	ldr	w0, [sp, #1668]
  45468c:	cmp	w0, #0x0
  454690:	b.lt	4546dc <argp_usage@@Base+0xb5f0>  // b.tstop
  454694:	ldr	w0, [sp, #1668]
  454698:	cmp	w0, #0x70
  45469c:	b.gt	4546dc <argp_usage@@Base+0xb5f0>
  4546a0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4546a4:	add	x1, x0, #0xe80
  4546a8:	ldrsw	x0, [sp, #1668]
  4546ac:	ldrsb	w0, [x1, x0]
  4546b0:	sxth	w1, w0
  4546b4:	ldr	x0, [sp, #1648]
  4546b8:	ldrsh	w0, [x0]
  4546bc:	cmp	w1, w0
  4546c0:	b.ne	4546dc <argp_usage@@Base+0xb5f0>  // b.any
  4546c4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4546c8:	add	x1, x0, #0xe08
  4546cc:	ldrsw	x0, [sp, #1668]
  4546d0:	ldrb	w0, [x1, x0]
  4546d4:	str	w0, [sp, #1668]
  4546d8:	b	452e6c <argp_usage@@Base+0x9d80>
  4546dc:	ldr	w0, [sp, #1620]
  4546e0:	sub	w2, w0, #0x1c
  4546e4:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4546e8:	add	x1, x0, #0xd50
  4546ec:	sxtw	x0, w2
  4546f0:	ldrsb	w0, [x1, x0]
  4546f4:	str	w0, [sp, #1668]
  4546f8:	b	452e6c <argp_usage@@Base+0x9d80>
  4546fc:	nop
  454700:	ldr	w0, [sp, #1676]
  454704:	cmn	w0, #0x2
  454708:	b.eq	454734 <argp_usage@@Base+0xb648>  // b.none
  45470c:	ldr	w0, [sp, #1676]
  454710:	cmp	w0, #0x115
  454714:	b.hi	45472c <argp_usage@@Base+0xb640>  // b.pmore
  454718:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45471c:	add	x1, x0, #0xb00
  454720:	ldrsw	x0, [sp, #1676]
  454724:	ldrb	w0, [x1, x0]
  454728:	b	454738 <argp_usage@@Base+0xb64c>
  45472c:	mov	w0, #0x2                   	// #2
  454730:	b	454738 <argp_usage@@Base+0xb64c>
  454734:	mov	w0, #0xfffffffe            	// #-2
  454738:	str	w0, [sp, #1612]
  45473c:	ldr	w0, [sp, #1664]
  454740:	cmp	w0, #0x0
  454744:	b.ne	454764 <argp_usage@@Base+0xb678>  // b.any
  454748:	ldr	w0, [sp, #1672]
  45474c:	add	w0, w0, #0x1
  454750:	str	w0, [sp, #1672]
  454754:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454758:	add	x1, x0, #0x78
  45475c:	ldr	x0, [sp, #216]
  454760:	bl	455ac0 <argp_usage@@Base+0xc9d4>
  454764:	ldr	w0, [sp, #1664]
  454768:	cmp	w0, #0x3
  45476c:	b.ne	4547b0 <argp_usage@@Base+0xb6c4>  // b.any
  454770:	ldr	w0, [sp, #1676]
  454774:	cmp	w0, #0x0
  454778:	b.gt	45478c <argp_usage@@Base+0xb6a0>
  45477c:	ldr	w0, [sp, #1676]
  454780:	cmp	w0, #0x0
  454784:	b.ne	4547b0 <argp_usage@@Base+0xb6c4>  // b.any
  454788:	b	454940 <argp_usage@@Base+0xb854>
  45478c:	add	x0, sp, #0x5e0
  454790:	ldr	x3, [sp, #216]
  454794:	mov	x2, x0
  454798:	ldr	w1, [sp, #1612]
  45479c:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  4547a0:	add	x0, x0, #0x88
  4547a4:	bl	452dc8 <argp_usage@@Base+0x9cdc>
  4547a8:	mov	w0, #0xfffffffe            	// #-2
  4547ac:	str	w0, [sp, #1676]
  4547b0:	nop
  4547b4:	mov	w0, #0x3                   	// #3
  4547b8:	str	w0, [sp, #1664]
  4547bc:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  4547c0:	add	x1, x0, #0xd70
  4547c4:	ldrsw	x0, [sp, #1668]
  4547c8:	ldrsb	w0, [x1, x0]
  4547cc:	str	w0, [sp, #1620]
  4547d0:	ldr	w0, [sp, #1620]
  4547d4:	cmn	w0, #0x5d
  4547d8:	b.eq	454838 <argp_usage@@Base+0xb74c>  // b.none
  4547dc:	ldr	w0, [sp, #1620]
  4547e0:	add	w0, w0, #0x1
  4547e4:	str	w0, [sp, #1620]
  4547e8:	ldr	w0, [sp, #1620]
  4547ec:	cmp	w0, #0x0
  4547f0:	b.lt	454838 <argp_usage@@Base+0xb74c>  // b.tstop
  4547f4:	ldr	w0, [sp, #1620]
  4547f8:	cmp	w0, #0x70
  4547fc:	b.gt	454838 <argp_usage@@Base+0xb74c>
  454800:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  454804:	add	x1, x0, #0xe80
  454808:	ldrsw	x0, [sp, #1620]
  45480c:	ldrsb	w0, [x1, x0]
  454810:	cmp	w0, #0x1
  454814:	b.ne	454838 <argp_usage@@Base+0xb74c>  // b.any
  454818:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45481c:	add	x1, x0, #0xe08
  454820:	ldrsw	x0, [sp, #1620]
  454824:	ldrb	w0, [x1, x0]
  454828:	str	w0, [sp, #1620]
  45482c:	ldr	w0, [sp, #1620]
  454830:	cmp	w0, #0x0
  454834:	b.gt	454898 <argp_usage@@Base+0xb7ac>
  454838:	ldr	x1, [sp, #1648]
  45483c:	ldr	x0, [sp, #1656]
  454840:	cmp	x1, x0
  454844:	b.eq	45493c <argp_usage@@Base+0xb850>  // b.none
  454848:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45484c:	add	x1, x0, #0xef8
  454850:	ldrsw	x0, [sp, #1668]
  454854:	ldrb	w0, [x1, x0]
  454858:	ldr	x3, [sp, #216]
  45485c:	ldr	x2, [sp, #1632]
  454860:	mov	w1, w0
  454864:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454868:	add	x0, x0, #0xa0
  45486c:	bl	452dc8 <argp_usage@@Base+0x9cdc>
  454870:	ldr	x0, [sp, #1632]
  454874:	sub	x0, x0, #0x38
  454878:	str	x0, [sp, #1632]
  45487c:	ldr	x0, [sp, #1648]
  454880:	sub	x0, x0, #0x2
  454884:	str	x0, [sp, #1648]
  454888:	ldr	x0, [sp, #1648]
  45488c:	ldrsh	w0, [x0]
  454890:	str	w0, [sp, #1668]
  454894:	b	4547bc <argp_usage@@Base+0xb6d0>
  454898:	nop
  45489c:	ldr	x0, [sp, #1632]
  4548a0:	add	x0, x0, #0x38
  4548a4:	str	x0, [sp, #1632]
  4548a8:	ldr	x0, [sp, #1632]
  4548ac:	mov	x1, x0
  4548b0:	add	x0, sp, #0x5e0
  4548b4:	ldp	x2, x3, [x0]
  4548b8:	stp	x2, x3, [x1]
  4548bc:	ldp	x2, x3, [x0, #16]
  4548c0:	stp	x2, x3, [x1, #16]
  4548c4:	ldp	x2, x3, [x0, #32]
  4548c8:	stp	x2, x3, [x1, #32]
  4548cc:	ldr	x0, [x0, #48]
  4548d0:	str	x0, [x1, #48]
  4548d4:	ldr	w0, [sp, #1620]
  4548d8:	str	w0, [sp, #1668]
  4548dc:	b	452e6c <argp_usage@@Base+0x9d80>
  4548e0:	nop
  4548e4:	str	wzr, [sp, #1616]
  4548e8:	b	454970 <argp_usage@@Base+0xb884>
  4548ec:	nop
  4548f0:	b	454940 <argp_usage@@Base+0xb854>
  4548f4:	nop
  4548f8:	b	454940 <argp_usage@@Base+0xb854>
  4548fc:	nop
  454900:	b	454940 <argp_usage@@Base+0xb854>
  454904:	nop
  454908:	b	454940 <argp_usage@@Base+0xb854>
  45490c:	nop
  454910:	b	454940 <argp_usage@@Base+0xb854>
  454914:	nop
  454918:	b	454940 <argp_usage@@Base+0xb854>
  45491c:	nop
  454920:	b	454940 <argp_usage@@Base+0xb854>
  454924:	nop
  454928:	b	454940 <argp_usage@@Base+0xb854>
  45492c:	nop
  454930:	b	454940 <argp_usage@@Base+0xb854>
  454934:	nop
  454938:	b	454940 <argp_usage@@Base+0xb854>
  45493c:	nop
  454940:	mov	w0, #0x1                   	// #1
  454944:	str	w0, [sp, #1616]
  454948:	b	454970 <argp_usage@@Base+0xb884>
  45494c:	nop
  454950:	b	454958 <argp_usage@@Base+0xb86c>
  454954:	nop
  454958:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  45495c:	add	x1, x0, #0xb0
  454960:	ldr	x0, [sp, #216]
  454964:	bl	455ac0 <argp_usage@@Base+0xc9d4>
  454968:	mov	w0, #0x2                   	// #2
  45496c:	str	w0, [sp, #1616]
  454970:	ldr	w0, [sp, #1676]
  454974:	cmn	w0, #0x2
  454978:	b.eq	4549c0 <argp_usage@@Base+0xb8d4>  // b.none
  45497c:	ldr	w0, [sp, #1676]
  454980:	cmp	w0, #0x115
  454984:	b.hi	45499c <argp_usage@@Base+0xb8b0>  // b.pmore
  454988:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  45498c:	add	x1, x0, #0xb00
  454990:	ldrsw	x0, [sp, #1676]
  454994:	ldrb	w0, [x1, x0]
  454998:	b	4549a0 <argp_usage@@Base+0xb8b4>
  45499c:	mov	w0, #0x2                   	// #2
  4549a0:	str	w0, [sp, #1612]
  4549a4:	add	x0, sp, #0x5e0
  4549a8:	ldr	x3, [sp, #216]
  4549ac:	mov	x2, x0
  4549b0:	ldr	w1, [sp, #1612]
  4549b4:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  4549b8:	add	x0, x0, #0xc8
  4549bc:	bl	452dc8 <argp_usage@@Base+0x9cdc>
  4549c0:	ldrsw	x1, [sp, #1608]
  4549c4:	mov	x0, x1
  4549c8:	lsl	x0, x0, #3
  4549cc:	sub	x0, x0, x1
  4549d0:	lsl	x0, x0, #3
  4549d4:	neg	x0, x0
  4549d8:	ldr	x1, [sp, #1632]
  4549dc:	add	x0, x1, x0
  4549e0:	str	x0, [sp, #1632]
  4549e4:	ldrsw	x0, [sp, #1608]
  4549e8:	lsl	x0, x0, #1
  4549ec:	neg	x0, x0
  4549f0:	ldr	x1, [sp, #1648]
  4549f4:	add	x0, x1, x0
  4549f8:	str	x0, [sp, #1648]
  4549fc:	b	454a4c <argp_usage@@Base+0xb960>
  454a00:	ldr	x0, [sp, #1648]
  454a04:	ldrsh	w0, [x0]
  454a08:	mov	w2, w0
  454a0c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  454a10:	add	x1, x0, #0xef8
  454a14:	sxtw	x0, w2
  454a18:	ldrb	w0, [x1, x0]
  454a1c:	ldr	x3, [sp, #216]
  454a20:	ldr	x2, [sp, #1632]
  454a24:	mov	w1, w0
  454a28:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454a2c:	add	x0, x0, #0xe8
  454a30:	bl	452dc8 <argp_usage@@Base+0x9cdc>
  454a34:	ldr	x0, [sp, #1632]
  454a38:	sub	x0, x0, #0x38
  454a3c:	str	x0, [sp, #1632]
  454a40:	ldr	x0, [sp, #1648]
  454a44:	sub	x0, x0, #0x2
  454a48:	str	x0, [sp, #1648]
  454a4c:	ldr	x1, [sp, #1648]
  454a50:	ldr	x0, [sp, #1656]
  454a54:	cmp	x1, x0
  454a58:	b.ne	454a00 <argp_usage@@Base+0xb914>  // b.any
  454a5c:	add	x0, sp, #0x5b8
  454a60:	ldr	x1, [sp, #1656]
  454a64:	cmp	x1, x0
  454a68:	b.eq	454a74 <argp_usage@@Base+0xb988>  // b.none
  454a6c:	ldr	x0, [sp, #1656]
  454a70:	bl	404880 <free@plt>
  454a74:	ldr	w0, [sp, #1616]
  454a78:	ldp	x20, x21, [sp, #16]
  454a7c:	ldp	x22, x23, [sp, #32]
  454a80:	ldp	x24, x25, [sp, #48]
  454a84:	ldp	x26, x27, [sp, #64]
  454a88:	ldp	x29, x30, [sp]
  454a8c:	add	sp, sp, #0x690
  454a90:	ret
  454a94:	str	x19, [sp, #-48]!
  454a98:	str	x0, [sp, #24]
  454a9c:	mov	x19, x1
  454aa0:	str	x2, [sp, #16]
  454aa4:	strb	wzr, [sp, #47]
  454aa8:	ldr	x0, [x19, #16]
  454aac:	cmp	x0, #0x2
  454ab0:	b.gt	454ae0 <argp_usage@@Base+0xb9f4>
  454ab4:	ldr	x0, [sp, #16]
  454ab8:	cmp	x0, #0x0
  454abc:	b.ge	454ae0 <argp_usage@@Base+0xb9f4>  // b.tcont
  454ac0:	ldr	x1, [x19, #8]
  454ac4:	mov	x0, x1
  454ac8:	lsl	x0, x0, #1
  454acc:	add	x0, x0, x1
  454ad0:	lsl	x0, x0, #3
  454ad4:	add	x0, x0, x1
  454ad8:	lsl	x0, x0, #2
  454adc:	str	x0, [x19, #8]
  454ae0:	ldr	x0, [sp, #16]
  454ae4:	cmp	x0, #0x0
  454ae8:	b.ge	454b78 <argp_usage@@Base+0xba8c>  // b.tcont
  454aec:	ldr	x0, [x19, #8]
  454af0:	mov	x1, #0xd70b                	// #55051
  454af4:	movk	x1, #0x70a3, lsl #16
  454af8:	movk	x1, #0xa3d, lsl #32
  454afc:	movk	x1, #0xa3d7, lsl #48
  454b00:	smulh	x1, x0, x1
  454b04:	add	x1, x1, x0
  454b08:	asr	x1, x1, #6
  454b0c:	asr	x0, x0, #63
  454b10:	sub	x1, x1, x0
  454b14:	mov	x0, x1
  454b18:	lsl	x0, x0, #4
  454b1c:	sub	x0, x0, x1
  454b20:	lsl	x0, x0, #2
  454b24:	mov	x3, x0
  454b28:	ldr	x2, [x19, #8]
  454b2c:	mov	x0, #0xd70b                	// #55051
  454b30:	movk	x0, #0x70a3, lsl #16
  454b34:	movk	x0, #0xa3d, lsl #32
  454b38:	movk	x0, #0xa3d7, lsl #48
  454b3c:	smulh	x0, x2, x0
  454b40:	add	x0, x0, x2
  454b44:	asr	x1, x0, #6
  454b48:	asr	x0, x2, #63
  454b4c:	sub	x1, x1, x0
  454b50:	mov	x0, x1
  454b54:	lsl	x0, x0, #1
  454b58:	add	x0, x0, x1
  454b5c:	lsl	x0, x0, #3
  454b60:	add	x0, x0, x1
  454b64:	lsl	x0, x0, #2
  454b68:	sub	x1, x2, x0
  454b6c:	add	x0, x3, x1
  454b70:	str	x0, [sp, #32]
  454b74:	b	454c54 <argp_usage@@Base+0xbb68>
  454b78:	ldr	x1, [x19, #8]
  454b7c:	mov	x2, #0x0                   	// #0
  454b80:	mov	x0, #0x3c                  	// #60
  454b84:	mul	x3, x1, x0
  454b88:	smulh	x0, x1, x0
  454b8c:	mov	x4, x3
  454b90:	mov	x5, x0
  454b94:	mov	x6, x5
  454b98:	asr	x7, x5, #63
  454b9c:	asr	x0, x4, #63
  454ba0:	cmp	x0, x6
  454ba4:	b.eq	454bac <argp_usage@@Base+0xbac0>  // b.none
  454ba8:	mov	x2, #0x1                   	// #1
  454bac:	mov	x0, x4
  454bb0:	str	x0, [sp, #32]
  454bb4:	mov	x0, x2
  454bb8:	and	w0, w0, #0x1
  454bbc:	and	w1, w0, #0xff
  454bc0:	ldrb	w0, [sp, #47]
  454bc4:	orr	w0, w1, w0
  454bc8:	and	w0, w0, #0xff
  454bcc:	cmp	w0, #0x0
  454bd0:	cset	w0, ne  // ne = any
  454bd4:	strb	w0, [sp, #47]
  454bd8:	ldrb	w0, [x19]
  454bdc:	cmp	w0, #0x0
  454be0:	b.eq	454c14 <argp_usage@@Base+0xbb28>  // b.none
  454be4:	ldr	x1, [sp, #32]
  454be8:	mov	x2, #0x0                   	// #0
  454bec:	ldr	x0, [sp, #16]
  454bf0:	subs	x0, x1, x0
  454bf4:	b.vc	454bfc <argp_usage@@Base+0xbb10>
  454bf8:	mov	x2, #0x1                   	// #1
  454bfc:	str	x0, [sp, #32]
  454c00:	mov	x0, x2
  454c04:	and	w0, w0, #0x1
  454c08:	and	w0, w0, #0xff
  454c0c:	mov	w1, w0
  454c10:	b	454c40 <argp_usage@@Base+0xbb54>
  454c14:	ldr	x1, [sp, #32]
  454c18:	mov	x2, #0x0                   	// #0
  454c1c:	ldr	x0, [sp, #16]
  454c20:	adds	x0, x1, x0
  454c24:	b.vc	454c2c <argp_usage@@Base+0xbb40>
  454c28:	mov	x2, #0x1                   	// #1
  454c2c:	str	x0, [sp, #32]
  454c30:	mov	x0, x2
  454c34:	and	w0, w0, #0x1
  454c38:	and	w0, w0, #0xff
  454c3c:	mov	w1, w0
  454c40:	ldrb	w0, [sp, #47]
  454c44:	orr	w0, w1, w0
  454c48:	cmp	w0, #0x0
  454c4c:	cset	w0, ne  // ne = any
  454c50:	strb	w0, [sp, #47]
  454c54:	ldrb	w0, [sp, #47]
  454c58:	cmp	w0, #0x0
  454c5c:	b.ne	454c78 <argp_usage@@Base+0xbb8c>  // b.any
  454c60:	ldr	x0, [sp, #32]
  454c64:	cmn	x0, #0x5a0
  454c68:	b.lt	454c78 <argp_usage@@Base+0xbb8c>  // b.tstop
  454c6c:	ldr	x0, [sp, #32]
  454c70:	cmp	x0, #0x5a0
  454c74:	b.le	454c80 <argp_usage@@Base+0xbb94>
  454c78:	mov	w0, #0x0                   	// #0
  454c7c:	b	454ca8 <argp_usage@@Base+0xbbbc>
  454c80:	ldr	x0, [sp, #32]
  454c84:	mov	w1, w0
  454c88:	mov	w0, w1
  454c8c:	lsl	w0, w0, #4
  454c90:	sub	w0, w0, w1
  454c94:	lsl	w0, w0, #2
  454c98:	mov	w1, w0
  454c9c:	ldr	x0, [sp, #24]
  454ca0:	str	w1, [x0, #24]
  454ca4:	mov	w0, #0x1                   	// #1
  454ca8:	ldr	x19, [sp], #48
  454cac:	ret
  454cb0:	sub	sp, sp, #0x10
  454cb4:	str	x0, [sp, #8]
  454cb8:	str	w1, [sp, #4]
  454cbc:	ldr	w0, [sp, #4]
  454cc0:	cmp	w0, #0x0
  454cc4:	b.eq	454cfc <argp_usage@@Base+0xbc10>  // b.none
  454cc8:	ldr	w0, [sp, #4]
  454ccc:	cmp	w0, #0x1
  454cd0:	b.eq	454d38 <argp_usage@@Base+0xbc4c>  // b.none
  454cd4:	ldr	x0, [sp, #8]
  454cd8:	cmp	x0, #0x0
  454cdc:	b.lt	454cf4 <argp_usage@@Base+0xbc08>  // b.tstop
  454ce0:	ldr	x0, [sp, #8]
  454ce4:	cmp	x0, #0x17
  454ce8:	b.gt	454cf4 <argp_usage@@Base+0xbc08>
  454cec:	ldr	x0, [sp, #8]
  454cf0:	b	454d74 <argp_usage@@Base+0xbc88>
  454cf4:	mov	w0, #0xffffffff            	// #-1
  454cf8:	b	454d74 <argp_usage@@Base+0xbc88>
  454cfc:	ldr	x0, [sp, #8]
  454d00:	cmp	x0, #0x0
  454d04:	b.le	454d14 <argp_usage@@Base+0xbc28>
  454d08:	ldr	x0, [sp, #8]
  454d0c:	cmp	x0, #0xb
  454d10:	b.le	454d30 <argp_usage@@Base+0xbc44>
  454d14:	ldr	x0, [sp, #8]
  454d18:	cmp	x0, #0xc
  454d1c:	b.ne	454d28 <argp_usage@@Base+0xbc3c>  // b.any
  454d20:	mov	w0, #0x0                   	// #0
  454d24:	b	454d74 <argp_usage@@Base+0xbc88>
  454d28:	mov	w0, #0xffffffff            	// #-1
  454d2c:	b	454d74 <argp_usage@@Base+0xbc88>
  454d30:	ldr	x0, [sp, #8]
  454d34:	b	454d74 <argp_usage@@Base+0xbc88>
  454d38:	ldr	x0, [sp, #8]
  454d3c:	cmp	x0, #0x0
  454d40:	b.le	454d5c <argp_usage@@Base+0xbc70>
  454d44:	ldr	x0, [sp, #8]
  454d48:	cmp	x0, #0xb
  454d4c:	b.gt	454d5c <argp_usage@@Base+0xbc70>
  454d50:	ldr	x0, [sp, #8]
  454d54:	add	w0, w0, #0xc
  454d58:	b	454d74 <argp_usage@@Base+0xbc88>
  454d5c:	ldr	x0, [sp, #8]
  454d60:	cmp	x0, #0xc
  454d64:	b.ne	454d70 <argp_usage@@Base+0xbc84>  // b.any
  454d68:	mov	w0, #0xc                   	// #12
  454d6c:	b	454d74 <argp_usage@@Base+0xbc88>
  454d70:	mov	w0, #0xffffffff            	// #-1
  454d74:	add	sp, sp, #0x10
  454d78:	ret
  454d7c:	stp	x29, x30, [sp, #-32]!
  454d80:	mov	x29, sp
  454d84:	str	w0, [sp, #28]
  454d88:	str	x1, [sp, #16]
  454d8c:	ldr	w0, [sp, #28]
  454d90:	cmn	w0, #0x76c
  454d94:	cset	w0, ge  // ge = tcont
  454d98:	and	w0, w0, #0xff
  454d9c:	sxtw	x1, w0
  454da0:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454da4:	add	x0, x0, #0xfb8
  454da8:	add	x4, x1, x0
  454dac:	ldr	w0, [sp, #28]
  454db0:	mov	w1, #0x851f                	// #34079
  454db4:	movk	w1, #0x51eb, lsl #16
  454db8:	smull	x1, w0, w1
  454dbc:	lsr	x1, x1, #32
  454dc0:	asr	w1, w1, #5
  454dc4:	asr	w0, w0, #31
  454dc8:	sub	w0, w1, w0
  454dcc:	add	w0, w0, #0x13
  454dd0:	cmp	w0, #0x0
  454dd4:	cneg	w5, w0, lt  // lt = tstop
  454dd8:	ldr	w1, [sp, #28]
  454ddc:	mov	w0, #0x851f                	// #34079
  454de0:	movk	w0, #0x51eb, lsl #16
  454de4:	smull	x0, w1, w0
  454de8:	lsr	x0, x0, #32
  454dec:	asr	w2, w0, #5
  454df0:	asr	w0, w1, #31
  454df4:	sub	w0, w2, w0
  454df8:	mov	w2, #0x64                  	// #100
  454dfc:	mul	w0, w0, w2
  454e00:	sub	w0, w1, w0
  454e04:	cmp	w0, #0x0
  454e08:	cneg	w0, w0, lt  // lt = tstop
  454e0c:	mov	w3, w0
  454e10:	mov	w2, w5
  454e14:	mov	x1, x4
  454e18:	ldr	x0, [sp, #16]
  454e1c:	bl	4041f0 <sprintf@plt>
  454e20:	ldr	x0, [sp, #16]
  454e24:	ldp	x29, x30, [sp], #32
  454e28:	ret
  454e2c:	stp	x29, x30, [sp, #-64]!
  454e30:	mov	x29, sp
  454e34:	str	x19, [sp, #16]
  454e38:	mov	x19, x0
  454e3c:	strb	w1, [sp, #47]
  454e40:	str	x2, [sp, #32]
  454e44:	ldr	x0, [x19, #8]
  454e48:	str	x0, [sp, #56]
  454e4c:	ldr	x0, [sp, #56]
  454e50:	cmp	x0, #0x0
  454e54:	b.lt	454eb8 <argp_usage@@Base+0xbdcc>  // b.tstop
  454e58:	ldr	x0, [x19, #16]
  454e5c:	cmp	x0, #0x2
  454e60:	b.ne	454eb8 <argp_usage@@Base+0xbdcc>  // b.any
  454e64:	ldr	x0, [sp, #56]
  454e68:	cmp	x0, #0x44
  454e6c:	b.gt	454e78 <argp_usage@@Base+0xbd8c>
  454e70:	mov	x0, #0x7d0                 	// #2000
  454e74:	b	454e7c <argp_usage@@Base+0xbd90>
  454e78:	mov	x0, #0x76c                 	// #1900
  454e7c:	ldr	x1, [sp, #56]
  454e80:	add	x0, x1, x0
  454e84:	str	x0, [sp, #56]
  454e88:	ldrb	w0, [sp, #47]
  454e8c:	cmp	w0, #0x0
  454e90:	b.eq	454eb8 <argp_usage@@Base+0xbdcc>  // b.none
  454e94:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454e98:	add	x0, x0, #0xfc8
  454e9c:	bl	404c60 <gettext@plt>
  454ea0:	mov	x3, x0
  454ea4:	ldr	x0, [x19, #8]
  454ea8:	ldr	x2, [sp, #56]
  454eac:	mov	x1, x0
  454eb0:	mov	x0, x3
  454eb4:	bl	451b9c <argp_usage@@Base+0x8ab0>
  454eb8:	ldr	x0, [sp, #56]
  454ebc:	cmp	x0, #0x0
  454ec0:	b.ge	454f04 <argp_usage@@Base+0xbe18>  // b.tcont
  454ec4:	mov	w0, #0x0                   	// #0
  454ec8:	mov	x2, #0xfffffffffffff894    	// #-1900
  454ecc:	ldr	x1, [sp, #56]
  454ed0:	subs	x1, x2, x1
  454ed4:	b.vc	454edc <argp_usage@@Base+0xbdf0>
  454ed8:	mov	w0, #0x1                   	// #1
  454edc:	sxtw	x2, w1
  454ee0:	cmp	x1, x2
  454ee4:	b.eq	454eec <argp_usage@@Base+0xbe00>  // b.none
  454ee8:	mov	w0, #0x1                   	// #1
  454eec:	mov	w2, w1
  454ef0:	ldr	x1, [sp, #32]
  454ef4:	str	w2, [x1]
  454ef8:	and	w0, w0, #0x1
  454efc:	and	w0, w0, #0xff
  454f00:	b	454f3c <argp_usage@@Base+0xbe50>
  454f04:	mov	w0, #0x0                   	// #0
  454f08:	ldr	x1, [sp, #56]
  454f0c:	subs	x1, x1, #0x76c
  454f10:	b.vc	454f18 <argp_usage@@Base+0xbe2c>
  454f14:	mov	w0, #0x1                   	// #1
  454f18:	sxtw	x2, w1
  454f1c:	cmp	x1, x2
  454f20:	b.eq	454f28 <argp_usage@@Base+0xbe3c>  // b.none
  454f24:	mov	w0, #0x1                   	// #1
  454f28:	mov	w2, w1
  454f2c:	ldr	x1, [sp, #32]
  454f30:	str	w2, [x1]
  454f34:	and	w0, w0, #0x1
  454f38:	and	w0, w0, #0xff
  454f3c:	cmp	w0, #0x0
  454f40:	b.eq	454f6c <argp_usage@@Base+0xbe80>  // b.none
  454f44:	ldrb	w0, [sp, #47]
  454f48:	cmp	w0, #0x0
  454f4c:	b.eq	454f64 <argp_usage@@Base+0xbe78>  // b.none
  454f50:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454f54:	add	x0, x0, #0xff8
  454f58:	bl	404c60 <gettext@plt>
  454f5c:	ldr	x1, [sp, #56]
  454f60:	bl	451b9c <argp_usage@@Base+0x8ab0>
  454f64:	mov	w0, #0x0                   	// #0
  454f68:	b	454f70 <argp_usage@@Base+0xbe84>
  454f6c:	mov	w0, #0x1                   	// #1
  454f70:	ldr	x19, [sp, #16]
  454f74:	ldp	x29, x30, [sp], #64
  454f78:	ret
  454f7c:	stp	x29, x30, [sp, #-48]!
  454f80:	mov	x29, sp
  454f84:	str	x0, [sp, #24]
  454f88:	str	x1, [sp, #16]
  454f8c:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  454f90:	add	x0, x0, #0x898
  454f94:	str	x0, [sp, #40]
  454f98:	b	454fcc <argp_usage@@Base+0xbee0>
  454f9c:	ldr	x0, [sp, #40]
  454fa0:	ldr	x0, [x0]
  454fa4:	mov	x1, x0
  454fa8:	ldr	x0, [sp, #16]
  454fac:	bl	4047c0 <strcmp@plt>
  454fb0:	cmp	w0, #0x0
  454fb4:	b.ne	454fc0 <argp_usage@@Base+0xbed4>  // b.any
  454fb8:	ldr	x0, [sp, #40]
  454fbc:	b	455080 <argp_usage@@Base+0xbf94>
  454fc0:	ldr	x0, [sp, #40]
  454fc4:	add	x0, x0, #0x10
  454fc8:	str	x0, [sp, #40]
  454fcc:	ldr	x0, [sp, #40]
  454fd0:	ldr	x0, [x0]
  454fd4:	cmp	x0, #0x0
  454fd8:	b.ne	454f9c <argp_usage@@Base+0xbeb0>  // b.any
  454fdc:	ldr	x0, [sp, #24]
  454fe0:	add	x0, x0, #0xe8
  454fe4:	str	x0, [sp, #40]
  454fe8:	b	45501c <argp_usage@@Base+0xbf30>
  454fec:	ldr	x0, [sp, #40]
  454ff0:	ldr	x0, [x0]
  454ff4:	mov	x1, x0
  454ff8:	ldr	x0, [sp, #16]
  454ffc:	bl	4047c0 <strcmp@plt>
  455000:	cmp	w0, #0x0
  455004:	b.ne	455010 <argp_usage@@Base+0xbf24>  // b.any
  455008:	ldr	x0, [sp, #40]
  45500c:	b	455080 <argp_usage@@Base+0xbf94>
  455010:	ldr	x0, [sp, #40]
  455014:	add	x0, x0, #0x10
  455018:	str	x0, [sp, #40]
  45501c:	ldr	x0, [sp, #40]
  455020:	ldr	x0, [x0]
  455024:	cmp	x0, #0x0
  455028:	b.ne	454fec <argp_usage@@Base+0xbf00>  // b.any
  45502c:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  455030:	add	x0, x0, #0xa50
  455034:	str	x0, [sp, #40]
  455038:	b	45506c <argp_usage@@Base+0xbf80>
  45503c:	ldr	x0, [sp, #40]
  455040:	ldr	x0, [x0]
  455044:	mov	x1, x0
  455048:	ldr	x0, [sp, #16]
  45504c:	bl	4047c0 <strcmp@plt>
  455050:	cmp	w0, #0x0
  455054:	b.ne	455060 <argp_usage@@Base+0xbf74>  // b.any
  455058:	ldr	x0, [sp, #40]
  45505c:	b	455080 <argp_usage@@Base+0xbf94>
  455060:	ldr	x0, [sp, #40]
  455064:	add	x0, x0, #0x10
  455068:	str	x0, [sp, #40]
  45506c:	ldr	x0, [sp, #40]
  455070:	ldr	x0, [x0]
  455074:	cmp	x0, #0x0
  455078:	b.ne	45503c <argp_usage@@Base+0xbf50>  // b.any
  45507c:	mov	x0, #0x0                   	// #0
  455080:	ldp	x29, x30, [sp], #48
  455084:	ret
  455088:	stp	x29, x30, [sp, #-80]!
  45508c:	mov	x29, sp
  455090:	str	x0, [sp, #24]
  455094:	str	x1, [sp, #16]
  455098:	ldr	x0, [sp, #16]
  45509c:	str	x0, [sp, #72]
  4550a0:	b	4550d0 <argp_usage@@Base+0xbfe4>
  4550a4:	ldr	x0, [sp, #72]
  4550a8:	ldrb	w0, [x0]
  4550ac:	bl	451b88 <argp_usage@@Base+0x8a9c>
  4550b0:	and	w0, w0, #0xff
  4550b4:	bl	476a5c <_obstack_memory_used@@Base+0x1991c>
  4550b8:	and	w1, w0, #0xff
  4550bc:	ldr	x0, [sp, #72]
  4550c0:	strb	w1, [x0]
  4550c4:	ldr	x0, [sp, #72]
  4550c8:	add	x0, x0, #0x1
  4550cc:	str	x0, [sp, #72]
  4550d0:	ldr	x0, [sp, #72]
  4550d4:	ldrb	w0, [x0]
  4550d8:	cmp	w0, #0x0
  4550dc:	b.ne	4550a4 <argp_usage@@Base+0xbfb8>  // b.any
  4550e0:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  4550e4:	add	x0, x0, #0x280
  4550e8:	str	x0, [sp, #56]
  4550ec:	b	455120 <argp_usage@@Base+0xc034>
  4550f0:	ldr	x0, [sp, #56]
  4550f4:	ldr	x0, [x0]
  4550f8:	mov	x1, x0
  4550fc:	ldr	x0, [sp, #16]
  455100:	bl	4047c0 <strcmp@plt>
  455104:	cmp	w0, #0x0
  455108:	b.ne	455114 <argp_usage@@Base+0xc028>  // b.any
  45510c:	ldr	x0, [sp, #56]
  455110:	b	455494 <argp_usage@@Base+0xc3a8>
  455114:	ldr	x0, [sp, #56]
  455118:	add	x0, x0, #0x10
  45511c:	str	x0, [sp, #56]
  455120:	ldr	x0, [sp, #56]
  455124:	ldr	x0, [x0]
  455128:	cmp	x0, #0x0
  45512c:	b.ne	4550f0 <argp_usage@@Base+0xc004>  // b.any
  455130:	ldr	x0, [sp, #16]
  455134:	bl	4040b0 <strlen@plt>
  455138:	str	x0, [sp, #40]
  45513c:	ldr	x0, [sp, #40]
  455140:	cmp	x0, #0x3
  455144:	b.eq	455168 <argp_usage@@Base+0xc07c>  // b.none
  455148:	ldr	x0, [sp, #40]
  45514c:	cmp	x0, #0x4
  455150:	b.ne	455170 <argp_usage@@Base+0xc084>  // b.any
  455154:	ldr	x0, [sp, #16]
  455158:	add	x0, x0, #0x3
  45515c:	ldrb	w0, [x0]
  455160:	cmp	w0, #0x2e
  455164:	b.ne	455170 <argp_usage@@Base+0xc084>  // b.any
  455168:	mov	w0, #0x1                   	// #1
  45516c:	b	455174 <argp_usage@@Base+0xc088>
  455170:	mov	w0, #0x0                   	// #0
  455174:	strb	w0, [sp, #39]
  455178:	ldrb	w0, [sp, #39]
  45517c:	and	w0, w0, #0x1
  455180:	strb	w0, [sp, #39]
  455184:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  455188:	add	x0, x0, #0x3e0
  45518c:	str	x0, [sp, #56]
  455190:	b	455204 <argp_usage@@Base+0xc118>
  455194:	ldrb	w0, [sp, #39]
  455198:	cmp	w0, #0x0
  45519c:	b.eq	4551c8 <argp_usage@@Base+0xc0dc>  // b.none
  4551a0:	ldr	x0, [sp, #56]
  4551a4:	ldr	x0, [x0]
  4551a8:	mov	x2, #0x3                   	// #3
  4551ac:	mov	x1, x0
  4551b0:	ldr	x0, [sp, #16]
  4551b4:	bl	404480 <strncmp@plt>
  4551b8:	cmp	w0, #0x0
  4551bc:	cset	w0, eq  // eq = none
  4551c0:	and	w0, w0, #0xff
  4551c4:	b	4551e8 <argp_usage@@Base+0xc0fc>
  4551c8:	ldr	x0, [sp, #56]
  4551cc:	ldr	x0, [x0]
  4551d0:	mov	x1, x0
  4551d4:	ldr	x0, [sp, #16]
  4551d8:	bl	4047c0 <strcmp@plt>
  4551dc:	cmp	w0, #0x0
  4551e0:	cset	w0, eq  // eq = none
  4551e4:	and	w0, w0, #0xff
  4551e8:	cmp	w0, #0x0
  4551ec:	b.eq	4551f8 <argp_usage@@Base+0xc10c>  // b.none
  4551f0:	ldr	x0, [sp, #56]
  4551f4:	b	455494 <argp_usage@@Base+0xc3a8>
  4551f8:	ldr	x0, [sp, #56]
  4551fc:	add	x0, x0, #0x10
  455200:	str	x0, [sp, #56]
  455204:	ldr	x0, [sp, #56]
  455208:	ldr	x0, [x0]
  45520c:	cmp	x0, #0x0
  455210:	b.ne	455194 <argp_usage@@Base+0xc0a8>  // b.any
  455214:	ldr	x1, [sp, #16]
  455218:	ldr	x0, [sp, #24]
  45521c:	bl	454f7c <argp_usage@@Base+0xbe90>
  455220:	str	x0, [sp, #56]
  455224:	ldr	x0, [sp, #56]
  455228:	cmp	x0, #0x0
  45522c:	b.eq	455238 <argp_usage@@Base+0xc14c>  // b.none
  455230:	ldr	x0, [sp, #56]
  455234:	b	455494 <argp_usage@@Base+0xc3a8>
  455238:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  45523c:	add	x0, x0, #0x2d0
  455240:	mov	x1, x0
  455244:	ldr	x0, [sp, #16]
  455248:	bl	4047c0 <strcmp@plt>
  45524c:	cmp	w0, #0x0
  455250:	b.ne	455260 <argp_usage@@Base+0xc174>  // b.any
  455254:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  455258:	add	x0, x0, #0x2d8
  45525c:	b	455494 <argp_usage@@Base+0xc3a8>
  455260:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  455264:	add	x0, x0, #0x5c8
  455268:	str	x0, [sp, #56]
  45526c:	b	4552a0 <argp_usage@@Base+0xc1b4>
  455270:	ldr	x0, [sp, #56]
  455274:	ldr	x0, [x0]
  455278:	mov	x1, x0
  45527c:	ldr	x0, [sp, #16]
  455280:	bl	4047c0 <strcmp@plt>
  455284:	cmp	w0, #0x0
  455288:	b.ne	455294 <argp_usage@@Base+0xc1a8>  // b.any
  45528c:	ldr	x0, [sp, #56]
  455290:	b	455494 <argp_usage@@Base+0xc3a8>
  455294:	ldr	x0, [sp, #56]
  455298:	add	x0, x0, #0x10
  45529c:	str	x0, [sp, #56]
  4552a0:	ldr	x0, [sp, #56]
  4552a4:	ldr	x0, [x0]
  4552a8:	cmp	x0, #0x0
  4552ac:	b.ne	455270 <argp_usage@@Base+0xc184>  // b.any
  4552b0:	ldr	x0, [sp, #40]
  4552b4:	sub	x0, x0, #0x1
  4552b8:	ldr	x1, [sp, #16]
  4552bc:	add	x0, x1, x0
  4552c0:	ldrb	w0, [x0]
  4552c4:	cmp	w0, #0x53
  4552c8:	b.ne	455348 <argp_usage@@Base+0xc25c>  // b.any
  4552cc:	ldr	x0, [sp, #40]
  4552d0:	sub	x0, x0, #0x1
  4552d4:	ldr	x1, [sp, #16]
  4552d8:	add	x0, x1, x0
  4552dc:	strb	wzr, [x0]
  4552e0:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  4552e4:	add	x0, x0, #0x5c8
  4552e8:	str	x0, [sp, #56]
  4552ec:	b	455320 <argp_usage@@Base+0xc234>
  4552f0:	ldr	x0, [sp, #56]
  4552f4:	ldr	x0, [x0]
  4552f8:	mov	x1, x0
  4552fc:	ldr	x0, [sp, #16]
  455300:	bl	4047c0 <strcmp@plt>
  455304:	cmp	w0, #0x0
  455308:	b.ne	455314 <argp_usage@@Base+0xc228>  // b.any
  45530c:	ldr	x0, [sp, #56]
  455310:	b	455494 <argp_usage@@Base+0xc3a8>
  455314:	ldr	x0, [sp, #56]
  455318:	add	x0, x0, #0x10
  45531c:	str	x0, [sp, #56]
  455320:	ldr	x0, [sp, #56]
  455324:	ldr	x0, [x0]
  455328:	cmp	x0, #0x0
  45532c:	b.ne	4552f0 <argp_usage@@Base+0xc204>  // b.any
  455330:	ldr	x0, [sp, #40]
  455334:	sub	x0, x0, #0x1
  455338:	ldr	x1, [sp, #16]
  45533c:	add	x0, x1, x0
  455340:	mov	w1, #0x53                  	// #83
  455344:	strb	w1, [x0]
  455348:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  45534c:	add	x0, x0, #0x730
  455350:	str	x0, [sp, #56]
  455354:	b	455388 <argp_usage@@Base+0xc29c>
  455358:	ldr	x0, [sp, #56]
  45535c:	ldr	x0, [x0]
  455360:	mov	x1, x0
  455364:	ldr	x0, [sp, #16]
  455368:	bl	4047c0 <strcmp@plt>
  45536c:	cmp	w0, #0x0
  455370:	b.ne	45537c <argp_usage@@Base+0xc290>  // b.any
  455374:	ldr	x0, [sp, #56]
  455378:	b	455494 <argp_usage@@Base+0xc3a8>
  45537c:	ldr	x0, [sp, #56]
  455380:	add	x0, x0, #0x10
  455384:	str	x0, [sp, #56]
  455388:	ldr	x0, [sp, #56]
  45538c:	ldr	x0, [x0]
  455390:	cmp	x0, #0x0
  455394:	b.ne	455358 <argp_usage@@Base+0xc26c>  // b.any
  455398:	ldr	x0, [sp, #40]
  45539c:	cmp	x0, #0x1
  4553a0:	b.ne	4553f4 <argp_usage@@Base+0xc308>  // b.any
  4553a4:	adrp	x0, 489000 <_obstack_memory_used@@Base+0x2bec0>
  4553a8:	add	x0, x0, #0xe18
  4553ac:	str	x0, [sp, #56]
  4553b0:	b	4553e4 <argp_usage@@Base+0xc2f8>
  4553b4:	ldr	x0, [sp, #16]
  4553b8:	ldrb	w1, [x0]
  4553bc:	ldr	x0, [sp, #56]
  4553c0:	ldr	x0, [x0]
  4553c4:	ldrb	w0, [x0]
  4553c8:	cmp	w1, w0
  4553cc:	b.ne	4553d8 <argp_usage@@Base+0xc2ec>  // b.any
  4553d0:	ldr	x0, [sp, #56]
  4553d4:	b	455494 <argp_usage@@Base+0xc3a8>
  4553d8:	ldr	x0, [sp, #56]
  4553dc:	add	x0, x0, #0x10
  4553e0:	str	x0, [sp, #56]
  4553e4:	ldr	x0, [sp, #56]
  4553e8:	ldr	x0, [x0]
  4553ec:	cmp	x0, #0x0
  4553f0:	b.ne	4553b4 <argp_usage@@Base+0xc2c8>  // b.any
  4553f4:	strb	wzr, [sp, #55]
  4553f8:	ldr	x0, [sp, #16]
  4553fc:	str	x0, [sp, #64]
  455400:	ldr	x0, [sp, #64]
  455404:	str	x0, [sp, #72]
  455408:	b	455440 <argp_usage@@Base+0xc354>
  45540c:	ldr	x0, [sp, #64]
  455410:	ldrb	w0, [x0]
  455414:	cmp	w0, #0x2e
  455418:	b.ne	455428 <argp_usage@@Base+0xc33c>  // b.any
  45541c:	mov	w0, #0x1                   	// #1
  455420:	strb	w0, [sp, #55]
  455424:	b	455434 <argp_usage@@Base+0xc348>
  455428:	ldr	x0, [sp, #72]
  45542c:	add	x0, x0, #0x1
  455430:	str	x0, [sp, #72]
  455434:	ldr	x0, [sp, #64]
  455438:	add	x0, x0, #0x1
  45543c:	str	x0, [sp, #64]
  455440:	ldr	x0, [sp, #64]
  455444:	ldrb	w1, [x0]
  455448:	ldr	x0, [sp, #72]
  45544c:	strb	w1, [x0]
  455450:	ldr	x0, [sp, #72]
  455454:	ldrb	w0, [x0]
  455458:	cmp	w0, #0x0
  45545c:	b.ne	45540c <argp_usage@@Base+0xc320>  // b.any
  455460:	ldrb	w0, [sp, #55]
  455464:	cmp	w0, #0x0
  455468:	b.eq	455490 <argp_usage@@Base+0xc3a4>  // b.none
  45546c:	ldr	x1, [sp, #16]
  455470:	ldr	x0, [sp, #24]
  455474:	bl	454f7c <argp_usage@@Base+0xbe90>
  455478:	str	x0, [sp, #56]
  45547c:	ldr	x0, [sp, #56]
  455480:	cmp	x0, #0x0
  455484:	b.eq	455490 <argp_usage@@Base+0xc3a4>  // b.none
  455488:	ldr	x0, [sp, #56]
  45548c:	b	455494 <argp_usage@@Base+0xc3a8>
  455490:	mov	x0, #0x0                   	// #0
  455494:	ldp	x29, x30, [sp], #80
  455498:	ret
  45549c:	stp	x29, x30, [sp, #-160]!
  4554a0:	mov	x29, sp
  4554a4:	stp	x20, x21, [sp, #16]
  4554a8:	stp	x22, x23, [sp, #32]
  4554ac:	str	x0, [sp, #56]
  4554b0:	str	x1, [sp, #48]
  4554b4:	b	4554cc <argp_usage@@Base+0xc3e0>
  4554b8:	ldr	x0, [sp, #48]
  4554bc:	ldr	x0, [x0]
  4554c0:	add	x1, x0, #0x1
  4554c4:	ldr	x0, [sp, #48]
  4554c8:	str	x1, [x0]
  4554cc:	ldr	x0, [sp, #48]
  4554d0:	ldr	x0, [x0]
  4554d4:	ldrb	w0, [x0]
  4554d8:	strb	w0, [sp, #159]
  4554dc:	ldrb	w0, [sp, #159]
  4554e0:	bl	47695c <_obstack_memory_used@@Base+0x1981c>
  4554e4:	and	w0, w0, #0xff
  4554e8:	cmp	w0, #0x0
  4554ec:	b.ne	4554b8 <argp_usage@@Base+0xc3cc>  // b.any
  4554f0:	ldrb	w0, [sp, #159]
  4554f4:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  4554f8:	and	w0, w0, #0xff
  4554fc:	cmp	w0, #0x0
  455500:	b.ne	45551c <argp_usage@@Base+0xc430>  // b.any
  455504:	ldrb	w0, [sp, #159]
  455508:	cmp	w0, #0x2d
  45550c:	b.eq	45551c <argp_usage@@Base+0xc430>  // b.none
  455510:	ldrb	w0, [sp, #159]
  455514:	cmp	w0, #0x2b
  455518:	b.ne	455900 <argp_usage@@Base+0xc814>  // b.any
  45551c:	str	xzr, [sp, #88]
  455520:	ldrb	w0, [sp, #159]
  455524:	cmp	w0, #0x2d
  455528:	b.eq	455538 <argp_usage@@Base+0xc44c>  // b.none
  45552c:	ldrb	w0, [sp, #159]
  455530:	cmp	w0, #0x2b
  455534:	b.ne	4555b4 <argp_usage@@Base+0xc4c8>  // b.any
  455538:	ldrb	w0, [sp, #159]
  45553c:	cmp	w0, #0x2d
  455540:	b.ne	45554c <argp_usage@@Base+0xc460>  // b.any
  455544:	mov	w0, #0xffffffff            	// #-1
  455548:	b	455550 <argp_usage@@Base+0xc464>
  45554c:	mov	w0, #0x1                   	// #1
  455550:	str	w0, [sp, #140]
  455554:	b	45555c <argp_usage@@Base+0xc470>
  455558:	nop
  45555c:	ldr	x0, [sp, #48]
  455560:	ldr	x0, [x0]
  455564:	add	x1, x0, #0x1
  455568:	ldr	x0, [sp, #48]
  45556c:	str	x1, [x0]
  455570:	ldr	x0, [sp, #48]
  455574:	ldr	x0, [x0]
  455578:	ldrb	w0, [x0]
  45557c:	strb	w0, [sp, #159]
  455580:	ldrb	w0, [sp, #159]
  455584:	bl	47695c <_obstack_memory_used@@Base+0x1981c>
  455588:	and	w0, w0, #0xff
  45558c:	cmp	w0, #0x0
  455590:	b.ne	455558 <argp_usage@@Base+0xc46c>  // b.any
  455594:	ldrb	w0, [sp, #159]
  455598:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  45559c:	and	w0, w0, #0xff
  4555a0:	eor	w0, w0, #0x1
  4555a4:	and	w0, w0, #0xff
  4555a8:	cmp	w0, #0x0
  4555ac:	b.eq	4555b8 <argp_usage@@Base+0xc4cc>  // b.none
  4555b0:	b	455aac <argp_usage@@Base+0xc9c0>
  4555b4:	str	wzr, [sp, #140]
  4555b8:	ldr	x0, [sp, #48]
  4555bc:	ldr	x0, [x0]
  4555c0:	str	x0, [sp, #144]
  4555c4:	ldr	x1, [sp, #88]
  4555c8:	mov	x2, #0x0                   	// #0
  4555cc:	mov	x0, #0xa                   	// #10
  4555d0:	mul	x3, x1, x0
  4555d4:	smulh	x0, x1, x0
  4555d8:	mov	x20, x3
  4555dc:	mov	x21, x0
  4555e0:	mov	x22, x21
  4555e4:	asr	x23, x21, #63
  4555e8:	asr	x0, x20, #63
  4555ec:	cmp	x0, x22
  4555f0:	b.eq	4555f8 <argp_usage@@Base+0xc50c>  // b.none
  4555f4:	mov	x2, #0x1                   	// #1
  4555f8:	mov	x0, x20
  4555fc:	str	x0, [sp, #88]
  455600:	mov	x0, x2
  455604:	and	w0, w0, #0x1
  455608:	and	w0, w0, #0xff
  45560c:	cmp	w0, #0x0
  455610:	b.eq	45561c <argp_usage@@Base+0xc530>  // b.none
  455614:	mov	w0, #0x3f                  	// #63
  455618:	b	455ab0 <argp_usage@@Base+0xc9c4>
  45561c:	ldr	x1, [sp, #88]
  455620:	ldr	w0, [sp, #140]
  455624:	cmp	w0, #0x0
  455628:	b.ge	45563c <argp_usage@@Base+0xc550>  // b.tcont
  45562c:	ldrb	w0, [sp, #159]
  455630:	mov	w2, #0x30                  	// #48
  455634:	sub	w0, w2, w0
  455638:	b	455644 <argp_usage@@Base+0xc558>
  45563c:	ldrb	w0, [sp, #159]
  455640:	sub	w0, w0, #0x30
  455644:	sxtw	x0, w0
  455648:	mov	x2, #0x0                   	// #0
  45564c:	adds	x0, x1, x0
  455650:	b.vc	455658 <argp_usage@@Base+0xc56c>
  455654:	mov	x2, #0x1                   	// #1
  455658:	str	x0, [sp, #88]
  45565c:	mov	x0, x2
  455660:	and	w0, w0, #0x1
  455664:	and	w0, w0, #0xff
  455668:	cmp	w0, #0x0
  45566c:	b.eq	455678 <argp_usage@@Base+0xc58c>  // b.none
  455670:	mov	w0, #0x3f                  	// #63
  455674:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455678:	ldr	x0, [sp, #144]
  45567c:	add	x0, x0, #0x1
  455680:	str	x0, [sp, #144]
  455684:	ldr	x0, [sp, #144]
  455688:	ldrb	w0, [x0]
  45568c:	strb	w0, [sp, #159]
  455690:	ldrb	w0, [sp, #159]
  455694:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  455698:	and	w0, w0, #0xff
  45569c:	cmp	w0, #0x0
  4556a0:	b.ne	4555c4 <argp_usage@@Base+0xc4d8>  // b.any
  4556a4:	ldrb	w0, [sp, #159]
  4556a8:	cmp	w0, #0x2e
  4556ac:	b.eq	4556bc <argp_usage@@Base+0xc5d0>  // b.none
  4556b0:	ldrb	w0, [sp, #159]
  4556b4:	cmp	w0, #0x2c
  4556b8:	b.ne	4558a0 <argp_usage@@Base+0xc7b4>  // b.any
  4556bc:	ldr	x0, [sp, #144]
  4556c0:	add	x0, x0, #0x1
  4556c4:	ldrb	w0, [x0]
  4556c8:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  4556cc:	and	w0, w0, #0xff
  4556d0:	cmp	w0, #0x0
  4556d4:	b.eq	4558a0 <argp_usage@@Base+0xc7b4>  // b.none
  4556d8:	ldr	x0, [sp, #88]
  4556dc:	bl	451b74 <argp_usage@@Base+0x8a88>
  4556e0:	and	w0, w0, #0xff
  4556e4:	cmp	w0, #0x0
  4556e8:	b.eq	4556f4 <argp_usage@@Base+0xc608>  // b.none
  4556ec:	mov	w0, #0x3f                  	// #63
  4556f0:	b	455ab0 <argp_usage@@Base+0xc9c4>
  4556f4:	ldr	x0, [sp, #88]
  4556f8:	str	x0, [sp, #128]
  4556fc:	ldr	x0, [sp, #144]
  455700:	add	x0, x0, #0x1
  455704:	str	x0, [sp, #144]
  455708:	ldr	x0, [sp, #144]
  45570c:	add	x1, x0, #0x1
  455710:	str	x1, [sp, #144]
  455714:	ldrb	w0, [x0]
  455718:	sub	w0, w0, #0x30
  45571c:	str	w0, [sp, #124]
  455720:	mov	w0, #0x2                   	// #2
  455724:	str	w0, [sp, #120]
  455728:	b	455788 <argp_usage@@Base+0xc69c>
  45572c:	ldr	w1, [sp, #124]
  455730:	mov	w0, w1
  455734:	lsl	w0, w0, #2
  455738:	add	w0, w0, w1
  45573c:	lsl	w0, w0, #1
  455740:	str	w0, [sp, #124]
  455744:	ldr	x0, [sp, #144]
  455748:	ldrb	w0, [x0]
  45574c:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  455750:	and	w0, w0, #0xff
  455754:	cmp	w0, #0x0
  455758:	b.eq	45577c <argp_usage@@Base+0xc690>  // b.none
  45575c:	ldr	x0, [sp, #144]
  455760:	add	x1, x0, #0x1
  455764:	str	x1, [sp, #144]
  455768:	ldrb	w0, [x0]
  45576c:	sub	w0, w0, #0x30
  455770:	ldr	w1, [sp, #124]
  455774:	add	w0, w1, w0
  455778:	str	w0, [sp, #124]
  45577c:	ldr	w0, [sp, #120]
  455780:	add	w0, w0, #0x1
  455784:	str	w0, [sp, #120]
  455788:	ldr	w0, [sp, #120]
  45578c:	cmp	w0, #0x9
  455790:	b.le	45572c <argp_usage@@Base+0xc640>
  455794:	ldr	w0, [sp, #140]
  455798:	cmp	w0, #0x0
  45579c:	b.ge	4557f8 <argp_usage@@Base+0xc70c>  // b.tcont
  4557a0:	b	4557d0 <argp_usage@@Base+0xc6e4>
  4557a4:	ldr	x0, [sp, #144]
  4557a8:	ldrb	w0, [x0]
  4557ac:	cmp	w0, #0x30
  4557b0:	b.eq	4557c4 <argp_usage@@Base+0xc6d8>  // b.none
  4557b4:	ldr	w0, [sp, #124]
  4557b8:	add	w0, w0, #0x1
  4557bc:	str	w0, [sp, #124]
  4557c0:	b	4557e8 <argp_usage@@Base+0xc6fc>
  4557c4:	ldr	x0, [sp, #144]
  4557c8:	add	x0, x0, #0x1
  4557cc:	str	x0, [sp, #144]
  4557d0:	ldr	x0, [sp, #144]
  4557d4:	ldrb	w0, [x0]
  4557d8:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  4557dc:	and	w0, w0, #0xff
  4557e0:	cmp	w0, #0x0
  4557e4:	b.ne	4557a4 <argp_usage@@Base+0xc6b8>  // b.any
  4557e8:	b	4557f8 <argp_usage@@Base+0xc70c>
  4557ec:	ldr	x0, [sp, #144]
  4557f0:	add	x0, x0, #0x1
  4557f4:	str	x0, [sp, #144]
  4557f8:	ldr	x0, [sp, #144]
  4557fc:	ldrb	w0, [x0]
  455800:	bl	476834 <_obstack_memory_used@@Base+0x196f4>
  455804:	and	w0, w0, #0xff
  455808:	cmp	w0, #0x0
  45580c:	b.ne	4557ec <argp_usage@@Base+0xc700>  // b.any
  455810:	ldr	w0, [sp, #140]
  455814:	cmp	w0, #0x0
  455818:	b.ge	455860 <argp_usage@@Base+0xc774>  // b.tcont
  45581c:	ldr	w0, [sp, #124]
  455820:	cmp	w0, #0x0
  455824:	b.eq	455860 <argp_usage@@Base+0xc774>  // b.none
  455828:	ldr	x1, [sp, #128]
  45582c:	mov	x0, #0x8000000000000000    	// #-9223372036854775808
  455830:	cmp	x1, x0
  455834:	b.ne	455840 <argp_usage@@Base+0xc754>  // b.any
  455838:	mov	w0, #0x3f                  	// #63
  45583c:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455840:	ldr	x0, [sp, #128]
  455844:	sub	x0, x0, #0x1
  455848:	str	x0, [sp, #128]
  45584c:	mov	w1, #0xca00                	// #51712
  455850:	movk	w1, #0x3b9a, lsl #16
  455854:	ldr	w0, [sp, #124]
  455858:	sub	w0, w1, w0
  45585c:	str	w0, [sp, #124]
  455860:	ldr	x0, [sp, #56]
  455864:	ldr	x1, [sp, #128]
  455868:	str	x1, [x0]
  45586c:	ldrsw	x1, [sp, #124]
  455870:	ldr	x0, [sp, #56]
  455874:	str	x1, [x0, #8]
  455878:	ldr	x0, [sp, #48]
  45587c:	ldr	x1, [sp, #144]
  455880:	str	x1, [x0]
  455884:	ldr	w0, [sp, #140]
  455888:	cmp	w0, #0x0
  45588c:	b.eq	455898 <argp_usage@@Base+0xc7ac>  // b.none
  455890:	mov	w0, #0x114                 	// #276
  455894:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455898:	mov	w0, #0x115                 	// #277
  45589c:	b	455ab0 <argp_usage@@Base+0xc9c4>
  4558a0:	ldr	w0, [sp, #140]
  4558a4:	lsr	w0, w0, #31
  4558a8:	and	w1, w0, #0xff
  4558ac:	ldr	x0, [sp, #56]
  4558b0:	strb	w1, [x0]
  4558b4:	ldr	x1, [sp, #88]
  4558b8:	ldr	x0, [sp, #56]
  4558bc:	str	x1, [x0, #8]
  4558c0:	ldr	x0, [sp, #48]
  4558c4:	ldr	x0, [x0]
  4558c8:	ldr	x1, [sp, #144]
  4558cc:	sub	x1, x1, x0
  4558d0:	ldr	x0, [sp, #56]
  4558d4:	str	x1, [x0, #16]
  4558d8:	ldr	x0, [sp, #48]
  4558dc:	ldr	x1, [sp, #144]
  4558e0:	str	x1, [x0]
  4558e4:	ldr	w0, [sp, #140]
  4558e8:	cmp	w0, #0x0
  4558ec:	b.eq	4558f8 <argp_usage@@Base+0xc80c>  // b.none
  4558f0:	mov	w0, #0x112                 	// #274
  4558f4:	b	455ab0 <argp_usage@@Base+0xc9c4>
  4558f8:	mov	w0, #0x113                 	// #275
  4558fc:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455900:	ldrb	w0, [sp, #159]
  455904:	bl	476744 <_obstack_memory_used@@Base+0x19604>
  455908:	and	w0, w0, #0xff
  45590c:	cmp	w0, #0x0
  455910:	b.eq	455a08 <argp_usage@@Base+0xc91c>  // b.none
  455914:	add	x0, sp, #0x40
  455918:	str	x0, [sp, #112]
  45591c:	add	x0, sp, #0x40
  455920:	add	x0, x0, #0x13
  455924:	ldr	x1, [sp, #112]
  455928:	cmp	x1, x0
  45592c:	b.cs	455944 <argp_usage@@Base+0xc858>  // b.hs, b.nlast
  455930:	ldr	x0, [sp, #112]
  455934:	add	x1, x0, #0x1
  455938:	str	x1, [sp, #112]
  45593c:	ldrb	w1, [sp, #159]
  455940:	strb	w1, [x0]
  455944:	ldr	x0, [sp, #48]
  455948:	ldr	x0, [x0]
  45594c:	add	x1, x0, #0x1
  455950:	ldr	x0, [sp, #48]
  455954:	str	x1, [x0]
  455958:	ldr	x0, [sp, #48]
  45595c:	ldr	x0, [x0]
  455960:	ldrb	w0, [x0]
  455964:	strb	w0, [sp, #159]
  455968:	ldrb	w0, [sp, #159]
  45596c:	bl	476744 <_obstack_memory_used@@Base+0x19604>
  455970:	and	w0, w0, #0xff
  455974:	cmp	w0, #0x0
  455978:	b.ne	45591c <argp_usage@@Base+0xc830>  // b.any
  45597c:	ldrb	w0, [sp, #159]
  455980:	cmp	w0, #0x2e
  455984:	b.eq	45591c <argp_usage@@Base+0xc830>  // b.none
  455988:	ldr	x0, [sp, #112]
  45598c:	strb	wzr, [x0]
  455990:	add	x0, sp, #0x40
  455994:	mov	x1, x0
  455998:	ldr	x0, [sp, #48]
  45599c:	bl	455088 <argp_usage@@Base+0xbf9c>
  4559a0:	str	x0, [sp, #96]
  4559a4:	ldr	x0, [sp, #96]
  4559a8:	cmp	x0, #0x0
  4559ac:	b.ne	4559e8 <argp_usage@@Base+0xc8fc>  // b.any
  4559b0:	ldr	x0, [sp, #48]
  4559b4:	ldrb	w0, [x0, #217]
  4559b8:	cmp	w0, #0x0
  4559bc:	b.eq	4559e0 <argp_usage@@Base+0xc8f4>  // b.none
  4559c0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4559c4:	add	x0, x0, #0x18
  4559c8:	bl	404c60 <gettext@plt>
  4559cc:	mov	x2, x0
  4559d0:	add	x0, sp, #0x40
  4559d4:	mov	x1, x0
  4559d8:	mov	x0, x2
  4559dc:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4559e0:	mov	w0, #0x3f                  	// #63
  4559e4:	b	455ab0 <argp_usage@@Base+0xc9c4>
  4559e8:	ldr	x0, [sp, #96]
  4559ec:	ldr	w0, [x0, #12]
  4559f0:	sxtw	x1, w0
  4559f4:	ldr	x0, [sp, #56]
  4559f8:	str	x1, [x0]
  4559fc:	ldr	x0, [sp, #96]
  455a00:	ldr	w0, [x0, #8]
  455a04:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455a08:	ldrb	w0, [sp, #159]
  455a0c:	cmp	w0, #0x28
  455a10:	b.eq	455a38 <argp_usage@@Base+0xc94c>  // b.none
  455a14:	ldr	x0, [sp, #48]
  455a18:	ldr	x0, [x0]
  455a1c:	add	x2, x0, #0x1
  455a20:	ldr	x1, [sp, #48]
  455a24:	str	x2, [x1]
  455a28:	ldrb	w0, [x0]
  455a2c:	bl	451b88 <argp_usage@@Base+0x8a9c>
  455a30:	and	w0, w0, #0xff
  455a34:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455a38:	str	xzr, [sp, #104]
  455a3c:	ldr	x0, [sp, #48]
  455a40:	ldr	x0, [x0]
  455a44:	add	x2, x0, #0x1
  455a48:	ldr	x1, [sp, #48]
  455a4c:	str	x2, [x1]
  455a50:	ldrb	w0, [x0]
  455a54:	strb	w0, [sp, #159]
  455a58:	ldrb	w0, [sp, #159]
  455a5c:	cmp	w0, #0x0
  455a60:	b.ne	455a6c <argp_usage@@Base+0xc980>  // b.any
  455a64:	ldrb	w0, [sp, #159]
  455a68:	b	455ab0 <argp_usage@@Base+0xc9c4>
  455a6c:	ldrb	w0, [sp, #159]
  455a70:	cmp	w0, #0x28
  455a74:	b.ne	455a88 <argp_usage@@Base+0xc99c>  // b.any
  455a78:	ldr	x0, [sp, #104]
  455a7c:	add	x0, x0, #0x1
  455a80:	str	x0, [sp, #104]
  455a84:	b	455aa0 <argp_usage@@Base+0xc9b4>
  455a88:	ldrb	w0, [sp, #159]
  455a8c:	cmp	w0, #0x29
  455a90:	b.ne	455aa0 <argp_usage@@Base+0xc9b4>  // b.any
  455a94:	ldr	x0, [sp, #104]
  455a98:	sub	x0, x0, #0x1
  455a9c:	str	x0, [sp, #104]
  455aa0:	ldr	x0, [sp, #104]
  455aa4:	cmp	x0, #0x0
  455aa8:	b.ne	455a3c <argp_usage@@Base+0xc950>  // b.any
  455aac:	b	4554b4 <argp_usage@@Base+0xc3c8>
  455ab0:	ldp	x20, x21, [sp, #16]
  455ab4:	ldp	x22, x23, [sp, #32]
  455ab8:	ldp	x29, x30, [sp], #160
  455abc:	ret
  455ac0:	sub	sp, sp, #0x10
  455ac4:	str	x0, [sp, #8]
  455ac8:	str	x1, [sp]
  455acc:	mov	w0, #0x0                   	// #0
  455ad0:	add	sp, sp, #0x10
  455ad4:	ret
  455ad8:	sub	sp, sp, #0x10
  455adc:	str	x0, [sp, #8]
  455ae0:	str	x1, [sp]
  455ae4:	ldr	x0, [sp]
  455ae8:	ldr	w0, [x0, #24]
  455aec:	cmp	w0, #0x0
  455af0:	b.ge	455afc <argp_usage@@Base+0xca10>  // b.tcont
  455af4:	mov	w0, #0x0                   	// #0
  455af8:	b	455b94 <argp_usage@@Base+0xcaa8>
  455afc:	ldr	x0, [sp, #8]
  455b00:	ldr	w1, [x0]
  455b04:	ldr	x0, [sp]
  455b08:	ldr	w0, [x0]
  455b0c:	eor	w1, w1, w0
  455b10:	ldr	x0, [sp, #8]
  455b14:	ldr	w2, [x0, #4]
  455b18:	ldr	x0, [sp]
  455b1c:	ldr	w0, [x0, #4]
  455b20:	eor	w0, w2, w0
  455b24:	orr	w1, w1, w0
  455b28:	ldr	x0, [sp, #8]
  455b2c:	ldr	w2, [x0, #8]
  455b30:	ldr	x0, [sp]
  455b34:	ldr	w0, [x0, #8]
  455b38:	eor	w0, w2, w0
  455b3c:	orr	w1, w1, w0
  455b40:	ldr	x0, [sp, #8]
  455b44:	ldr	w2, [x0, #12]
  455b48:	ldr	x0, [sp]
  455b4c:	ldr	w0, [x0, #12]
  455b50:	eor	w0, w2, w0
  455b54:	orr	w1, w1, w0
  455b58:	ldr	x0, [sp, #8]
  455b5c:	ldr	w2, [x0, #16]
  455b60:	ldr	x0, [sp]
  455b64:	ldr	w0, [x0, #16]
  455b68:	eor	w0, w2, w0
  455b6c:	orr	w1, w1, w0
  455b70:	ldr	x0, [sp, #8]
  455b74:	ldr	w2, [x0, #20]
  455b78:	ldr	x0, [sp]
  455b7c:	ldr	w0, [x0, #20]
  455b80:	eor	w0, w2, w0
  455b84:	orr	w0, w1, w0
  455b88:	cmp	w0, #0x0
  455b8c:	cset	w0, eq  // eq = none
  455b90:	and	w0, w0, #0xff
  455b94:	add	sp, sp, #0x10
  455b98:	ret
  455b9c:	stp	x29, x30, [sp, #-112]!
  455ba0:	mov	x29, sp
  455ba4:	stp	x19, x20, [sp, #16]
  455ba8:	str	x0, [sp, #56]
  455bac:	str	x1, [sp, #48]
  455bb0:	str	x2, [sp, #40]
  455bb4:	str	w3, [sp, #36]
  455bb8:	ldrsw	x1, [sp, #36]
  455bbc:	mov	w5, #0x0                   	// #0
  455bc0:	mov	x4, #0x0                   	// #0
  455bc4:	ldr	x3, [sp, #56]
  455bc8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455bcc:	add	x2, x0, #0x38
  455bd0:	ldr	x0, [sp, #40]
  455bd4:	bl	477084 <_obstack_memory_used@@Base+0x19f44>
  455bd8:	str	w0, [sp, #104]
  455bdc:	ldr	x0, [sp, #48]
  455be0:	cmp	x0, #0x0
  455be4:	b.eq	455c94 <argp_usage@@Base+0xcba8>  // b.none
  455be8:	ldr	w1, [sp, #104]
  455bec:	ldr	w0, [sp, #36]
  455bf0:	cmp	w1, w0
  455bf4:	b.ge	455c94 <argp_usage@@Base+0xcba8>  // b.tcont
  455bf8:	ldr	x0, [sp, #48]
  455bfc:	ldr	x0, [x0, #208]
  455c00:	cmp	x0, #0x0
  455c04:	b.eq	455c94 <argp_usage@@Base+0xcba8>  // b.none
  455c08:	ldr	x0, [sp, #48]
  455c0c:	ldr	w0, [x0, #24]
  455c10:	str	w0, [sp, #108]
  455c14:	ldr	x0, [sp, #48]
  455c18:	ldr	x0, [x0, #184]
  455c1c:	cmp	x0, #0x0
  455c20:	b.eq	455c50 <argp_usage@@Base+0xcb64>  // b.none
  455c24:	ldr	x0, [sp, #48]
  455c28:	ldr	x0, [x0, #208]
  455c2c:	cmp	x0, #0x0
  455c30:	b.ne	455c50 <argp_usage@@Base+0xcb64>  // b.any
  455c34:	ldr	x0, [sp, #48]
  455c38:	ldr	w0, [x0, #20]
  455c3c:	cmp	w0, #0x0
  455c40:	b.le	455c50 <argp_usage@@Base+0xcb64>
  455c44:	ldr	w0, [sp, #108]
  455c48:	add	w0, w0, #0xe10
  455c4c:	str	w0, [sp, #108]
  455c50:	ldrsw	x0, [sp, #104]
  455c54:	ldr	x1, [sp, #40]
  455c58:	add	x19, x1, x0
  455c5c:	ldr	w1, [sp, #36]
  455c60:	ldr	w0, [sp, #104]
  455c64:	sub	w0, w1, w0
  455c68:	sxtw	x20, w0
  455c6c:	add	x0, sp, #0x48
  455c70:	mov	x1, x0
  455c74:	ldr	w0, [sp, #108]
  455c78:	bl	452444 <argp_usage@@Base+0x9358>
  455c7c:	mov	x3, x0
  455c80:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455c84:	add	x2, x0, #0x58
  455c88:	mov	x1, x20
  455c8c:	mov	x0, x19
  455c90:	bl	4042e0 <snprintf@plt>
  455c94:	ldr	x0, [sp, #40]
  455c98:	ldp	x19, x20, [sp, #16]
  455c9c:	ldp	x29, x30, [sp], #112
  455ca0:	ret
  455ca4:	stp	x29, x30, [sp, #-80]!
  455ca8:	mov	x29, sp
  455cac:	str	x19, [sp, #16]
  455cb0:	str	x0, [sp, #56]
  455cb4:	str	x1, [sp, #48]
  455cb8:	str	w2, [sp, #44]
  455cbc:	ldrsw	x19, [sp, #44]
  455cc0:	ldr	x0, [sp, #56]
  455cc4:	ldr	w0, [x0, #20]
  455cc8:	add	x1, sp, #0x40
  455ccc:	bl	454d7c <argp_usage@@Base+0xbc90>
  455cd0:	mov	x2, x0
  455cd4:	ldr	x0, [sp, #56]
  455cd8:	ldr	w0, [x0, #16]
  455cdc:	add	w1, w0, #0x1
  455ce0:	ldr	x0, [sp, #56]
  455ce4:	ldr	w0, [x0, #12]
  455ce8:	mov	w5, w0
  455cec:	mov	w4, w1
  455cf0:	mov	x3, x2
  455cf4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455cf8:	add	x2, x0, #0x60
  455cfc:	mov	x1, x19
  455d00:	ldr	x0, [sp, #48]
  455d04:	bl	4042e0 <snprintf@plt>
  455d08:	ldr	x0, [sp, #48]
  455d0c:	ldr	x19, [sp, #16]
  455d10:	ldp	x29, x30, [sp], #80
  455d14:	ret
  455d18:	stp	x29, x30, [sp, #-48]!
  455d1c:	mov	x29, sp
  455d20:	str	x0, [sp, #40]
  455d24:	str	x1, [sp, #32]
  455d28:	str	w2, [sp, #28]
  455d2c:	ldrsw	x1, [sp, #28]
  455d30:	ldr	x0, [sp, #40]
  455d34:	ldr	w2, [x0, #8]
  455d38:	ldr	x0, [sp, #40]
  455d3c:	ldr	w3, [x0, #4]
  455d40:	ldr	x0, [sp, #40]
  455d44:	ldr	w0, [x0]
  455d48:	mov	w5, w0
  455d4c:	mov	w4, w3
  455d50:	mov	w3, w2
  455d54:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455d58:	add	x2, x0, #0x78
  455d5c:	ldr	x0, [sp, #32]
  455d60:	bl	4042e0 <snprintf@plt>
  455d64:	ldr	x0, [sp, #32]
  455d68:	ldp	x29, x30, [sp], #48
  455d6c:	ret
  455d70:	sub	sp, sp, #0xc0
  455d74:	stp	x29, x30, [sp, #16]
  455d78:	add	x29, sp, #0x10
  455d7c:	str	x19, [sp, #32]
  455d80:	str	x0, [sp, #72]
  455d84:	str	x1, [sp, #64]
  455d88:	str	x2, [sp, #56]
  455d8c:	strb	w3, [sp, #55]
  455d90:	ldr	x0, [sp, #72]
  455d94:	ldr	w1, [x0]
  455d98:	ldr	x0, [sp, #64]
  455d9c:	ldr	w0, [x0]
  455da0:	cmp	w1, w0
  455da4:	cset	w0, eq  // eq = none
  455da8:	strb	w0, [sp, #187]
  455dac:	ldr	x0, [sp, #72]
  455db0:	ldr	w1, [x0, #4]
  455db4:	ldr	x0, [sp, #64]
  455db8:	ldr	w0, [x0, #4]
  455dbc:	cmp	w1, w0
  455dc0:	cset	w0, eq  // eq = none
  455dc4:	strb	w0, [sp, #186]
  455dc8:	ldr	x0, [sp, #72]
  455dcc:	ldr	w1, [x0, #8]
  455dd0:	ldr	x0, [sp, #64]
  455dd4:	ldr	w0, [x0, #8]
  455dd8:	cmp	w1, w0
  455ddc:	cset	w0, eq  // eq = none
  455de0:	strb	w0, [sp, #185]
  455de4:	ldr	x0, [sp, #72]
  455de8:	ldr	w1, [x0, #12]
  455dec:	ldr	x0, [sp, #64]
  455df0:	ldr	w0, [x0, #12]
  455df4:	cmp	w1, w0
  455df8:	cset	w0, eq  // eq = none
  455dfc:	strb	w0, [sp, #184]
  455e00:	ldr	x0, [sp, #72]
  455e04:	ldr	w1, [x0, #16]
  455e08:	ldr	x0, [sp, #64]
  455e0c:	ldr	w0, [x0, #16]
  455e10:	cmp	w1, w0
  455e14:	cset	w0, eq  // eq = none
  455e18:	strb	w0, [sp, #183]
  455e1c:	ldr	x0, [sp, #72]
  455e20:	ldr	w1, [x0, #20]
  455e24:	ldr	x0, [sp, #64]
  455e28:	ldr	w0, [x0, #20]
  455e2c:	cmp	w1, w0
  455e30:	cset	w0, eq  // eq = none
  455e34:	strb	w0, [sp, #182]
  455e38:	ldrb	w0, [sp, #187]
  455e3c:	cmp	w0, #0x0
  455e40:	b.eq	455e90 <argp_usage@@Base+0xcda4>  // b.none
  455e44:	ldrb	w0, [sp, #186]
  455e48:	cmp	w0, #0x0
  455e4c:	b.eq	455e90 <argp_usage@@Base+0xcda4>  // b.none
  455e50:	ldrb	w0, [sp, #185]
  455e54:	eor	w0, w0, #0x1
  455e58:	and	w0, w0, #0xff
  455e5c:	cmp	w0, #0x0
  455e60:	b.eq	455e90 <argp_usage@@Base+0xcda4>  // b.none
  455e64:	ldrb	w0, [sp, #184]
  455e68:	cmp	w0, #0x0
  455e6c:	b.eq	455e90 <argp_usage@@Base+0xcda4>  // b.none
  455e70:	ldrb	w0, [sp, #183]
  455e74:	cmp	w0, #0x0
  455e78:	b.eq	455e90 <argp_usage@@Base+0xcda4>  // b.none
  455e7c:	ldrb	w0, [sp, #182]
  455e80:	cmp	w0, #0x0
  455e84:	b.eq	455e90 <argp_usage@@Base+0xcda4>  // b.none
  455e88:	mov	w0, #0x1                   	// #1
  455e8c:	b	455e94 <argp_usage@@Base+0xcda8>
  455e90:	mov	w0, #0x0                   	// #0
  455e94:	strb	w0, [sp, #181]
  455e98:	ldrb	w0, [sp, #181]
  455e9c:	and	w0, w0, #0x1
  455ea0:	strb	w0, [sp, #181]
  455ea4:	ldr	x0, [sp, #56]
  455ea8:	ldrb	w0, [x0, #217]
  455eac:	eor	w0, w0, #0x1
  455eb0:	and	w0, w0, #0xff
  455eb4:	cmp	w0, #0x0
  455eb8:	b.ne	456150 <argp_usage@@Base+0xd064>  // b.any
  455ebc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455ec0:	add	x0, x0, #0x88
  455ec4:	bl	404c60 <gettext@plt>
  455ec8:	bl	451b9c <argp_usage@@Base+0x8ab0>
  455ecc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455ed0:	add	x0, x0, #0xb0
  455ed4:	bl	404c60 <gettext@plt>
  455ed8:	mov	x19, x0
  455edc:	add	x0, sp, #0x50
  455ee0:	mov	w3, #0x64                  	// #100
  455ee4:	mov	x2, x0
  455ee8:	ldr	x1, [sp, #56]
  455eec:	ldr	x0, [sp, #72]
  455ef0:	bl	455b9c <argp_usage@@Base+0xcab0>
  455ef4:	mov	x1, x0
  455ef8:	mov	x0, x19
  455efc:	bl	451b9c <argp_usage@@Base+0x8ab0>
  455f00:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455f04:	add	x0, x0, #0xd0
  455f08:	bl	404c60 <gettext@plt>
  455f0c:	mov	x19, x0
  455f10:	add	x0, sp, #0x50
  455f14:	mov	w3, #0x64                  	// #100
  455f18:	mov	x2, x0
  455f1c:	ldr	x1, [sp, #56]
  455f20:	ldr	x0, [sp, #64]
  455f24:	bl	455b9c <argp_usage@@Base+0xcab0>
  455f28:	mov	x1, x0
  455f2c:	mov	x0, x19
  455f30:	bl	451b9c <argp_usage@@Base+0x8ab0>
  455f34:	ldrb	w0, [sp, #182]
  455f38:	cmp	w0, #0x0
  455f3c:	b.eq	455f4c <argp_usage@@Base+0xce60>  // b.none
  455f40:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  455f44:	add	x1, x0, #0xa70
  455f48:	b	455f54 <argp_usage@@Base+0xce68>
  455f4c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455f50:	add	x1, x0, #0xf0
  455f54:	ldrb	w0, [sp, #183]
  455f58:	cmp	w0, #0x0
  455f5c:	b.eq	455f6c <argp_usage@@Base+0xce80>  // b.none
  455f60:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  455f64:	add	x2, x0, #0xa70
  455f68:	b	455f74 <argp_usage@@Base+0xce88>
  455f6c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455f70:	add	x2, x0, #0xf8
  455f74:	ldrb	w0, [sp, #184]
  455f78:	cmp	w0, #0x0
  455f7c:	b.eq	455f8c <argp_usage@@Base+0xcea0>  // b.none
  455f80:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  455f84:	add	x3, x0, #0xa70
  455f88:	b	455f94 <argp_usage@@Base+0xcea8>
  455f8c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455f90:	add	x3, x0, #0xf8
  455f94:	ldrb	w0, [sp, #185]
  455f98:	cmp	w0, #0x0
  455f9c:	b.eq	455fac <argp_usage@@Base+0xcec0>  // b.none
  455fa0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  455fa4:	add	x4, x0, #0xa70
  455fa8:	b	455fb4 <argp_usage@@Base+0xcec8>
  455fac:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455fb0:	add	x4, x0, #0xf8
  455fb4:	ldrb	w0, [sp, #186]
  455fb8:	cmp	w0, #0x0
  455fbc:	b.eq	455fcc <argp_usage@@Base+0xcee0>  // b.none
  455fc0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  455fc4:	add	x5, x0, #0xa70
  455fc8:	b	455fd4 <argp_usage@@Base+0xcee8>
  455fcc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455fd0:	add	x5, x0, #0xf8
  455fd4:	ldrb	w0, [sp, #187]
  455fd8:	cmp	w0, #0x0
  455fdc:	b.eq	455fec <argp_usage@@Base+0xcf00>  // b.none
  455fe0:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  455fe4:	add	x0, x0, #0xa70
  455fe8:	b	455ff4 <argp_usage@@Base+0xcf08>
  455fec:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  455ff0:	add	x0, x0, #0xf8
  455ff4:	add	x8, sp, #0x50
  455ff8:	str	x0, [sp]
  455ffc:	mov	x7, x5
  456000:	mov	x6, x4
  456004:	mov	x5, x3
  456008:	mov	x4, x2
  45600c:	mov	x3, x1
  456010:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456014:	add	x2, x0, #0x100
  456018:	mov	x1, #0x64                  	// #100
  45601c:	mov	x0, x8
  456020:	bl	4042e0 <snprintf@plt>
  456024:	str	w0, [sp, #188]
  456028:	ldr	w0, [sp, #188]
  45602c:	cmp	w0, #0x0
  456030:	b.lt	45608c <argp_usage@@Base+0xcfa0>  // b.tstop
  456034:	ldr	w0, [sp, #188]
  456038:	cmp	w0, #0x63
  45603c:	b.ls	456058 <argp_usage@@Base+0xcf6c>  // b.plast
  456040:	mov	w0, #0x63                  	// #99
  456044:	str	w0, [sp, #188]
  456048:	b	456058 <argp_usage@@Base+0xcf6c>
  45604c:	ldr	w0, [sp, #188]
  456050:	sub	w0, w0, #0x1
  456054:	str	w0, [sp, #188]
  456058:	ldr	w0, [sp, #188]
  45605c:	cmp	w0, #0x0
  456060:	b.le	456080 <argp_usage@@Base+0xcf94>
  456064:	ldr	w0, [sp, #188]
  456068:	sub	w0, w0, #0x1
  45606c:	sxtw	x0, w0
  456070:	add	x1, sp, #0x50
  456074:	ldrb	w0, [x1, x0]
  456078:	cmp	w0, #0x20
  45607c:	b.eq	45604c <argp_usage@@Base+0xcf60>  // b.none
  456080:	ldrsw	x0, [sp, #188]
  456084:	add	x1, sp, #0x50
  456088:	strb	wzr, [x1, x0]
  45608c:	add	x0, sp, #0x50
  456090:	mov	x1, x0
  456094:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456098:	add	x0, x0, #0x140
  45609c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4560a0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4560a4:	add	x0, x0, #0x148
  4560a8:	bl	404c60 <gettext@plt>
  4560ac:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4560b0:	ldrb	w0, [sp, #181]
  4560b4:	cmp	w0, #0x0
  4560b8:	b.eq	4560cc <argp_usage@@Base+0xcfe0>  // b.none
  4560bc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4560c0:	add	x0, x0, #0x160
  4560c4:	bl	404c60 <gettext@plt>
  4560c8:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4560cc:	ldrb	w0, [sp, #184]
  4560d0:	eor	w0, w0, #0x1
  4560d4:	and	w0, w0, #0xff
  4560d8:	cmp	w0, #0x0
  4560dc:	b.eq	456104 <argp_usage@@Base+0xd018>  // b.none
  4560e0:	ldrb	w0, [sp, #183]
  4560e4:	eor	w0, w0, #0x1
  4560e8:	and	w0, w0, #0xff
  4560ec:	cmp	w0, #0x0
  4560f0:	b.eq	456104 <argp_usage@@Base+0xd018>  // b.none
  4560f4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4560f8:	add	x0, x0, #0x198
  4560fc:	bl	404c60 <gettext@plt>
  456100:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456104:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456108:	add	x0, x0, #0x1c0
  45610c:	bl	404c60 <gettext@plt>
  456110:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456114:	ldrb	w0, [sp, #55]
  456118:	cmp	w0, #0x0
  45611c:	b.eq	456130 <argp_usage@@Base+0xd044>  // b.none
  456120:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456124:	add	x0, x0, #0x1e8
  456128:	bl	404c60 <gettext@plt>
  45612c:	b	45613c <argp_usage@@Base+0xd050>
  456130:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456134:	add	x0, x0, #0x200
  456138:	bl	404c60 <gettext@plt>
  45613c:	mov	x1, x0
  456140:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456144:	add	x0, x0, #0x218
  456148:	bl	451b9c <argp_usage@@Base+0x8ab0>
  45614c:	b	456154 <argp_usage@@Base+0xd068>
  456150:	nop
  456154:	ldr	x19, [sp, #32]
  456158:	ldp	x29, x30, [sp, #16]
  45615c:	add	sp, sp, #0xc0
  456160:	ret
  456164:	stp	x29, x30, [sp, #-80]!
  456168:	mov	x29, sp
  45616c:	str	x0, [sp, #40]
  456170:	str	x1, [sp, #32]
  456174:	str	x2, [sp, #24]
  456178:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45617c:	add	x0, x0, #0x228
  456180:	bl	404bf0 <getenv@plt>
  456184:	str	x0, [sp, #72]
  456188:	ldr	x0, [sp, #72]
  45618c:	bl	474d8c <_obstack_memory_used@@Base+0x17c4c>
  456190:	str	x0, [sp, #64]
  456194:	ldr	x0, [sp, #64]
  456198:	cmp	x0, #0x0
  45619c:	b.ne	4561a8 <argp_usage@@Base+0xd0bc>  // b.any
  4561a0:	mov	w0, #0x0                   	// #0
  4561a4:	b	4561d4 <argp_usage@@Base+0xd0e8>
  4561a8:	ldr	x5, [sp, #72]
  4561ac:	ldr	x4, [sp, #64]
  4561b0:	mov	w3, #0x0                   	// #0
  4561b4:	ldr	x2, [sp, #24]
  4561b8:	ldr	x1, [sp, #32]
  4561bc:	ldr	x0, [sp, #40]
  4561c0:	bl	4561dc <argp_usage@@Base+0xd0f0>
  4561c4:	strb	w0, [sp, #63]
  4561c8:	ldr	x0, [sp, #64]
  4561cc:	bl	475048 <_obstack_memory_used@@Base+0x17f08>
  4561d0:	ldrb	w0, [sp, #63]
  4561d4:	ldp	x29, x30, [sp], #80
  4561d8:	ret
  4561dc:	sub	sp, sp, #0x620
  4561e0:	stp	x29, x30, [sp]
  4561e4:	mov	x29, sp
  4561e8:	stp	x19, x20, [sp, #16]
  4561ec:	stp	x21, x22, [sp, #32]
  4561f0:	stp	x23, x24, [sp, #48]
  4561f4:	stp	x25, x26, [sp, #64]
  4561f8:	str	x27, [sp, #80]
  4561fc:	str	x0, [sp, #232]
  456200:	str	x1, [sp, #224]
  456204:	str	x2, [sp, #216]
  456208:	str	w3, [sp, #212]
  45620c:	str	x4, [sp, #200]
  456210:	str	x5, [sp, #192]
  456214:	strb	wzr, [sp, #1567]
  456218:	ldr	x0, [sp, #224]
  45621c:	bl	4040b0 <strlen@plt>
  456220:	mov	x1, x0
  456224:	ldr	x0, [sp, #224]
  456228:	add	x0, x0, x1
  45622c:	str	x0, [sp, #1488]
  456230:	str	xzr, [sp, #1552]
  456234:	ldr	x0, [sp, #216]
  456238:	cmp	x0, #0x0
  45623c:	b.ne	456250 <argp_usage@@Base+0xd164>  // b.any
  456240:	add	x0, sp, #0x3e8
  456244:	bl	44df9c <argp_usage@@Base+0x4eb0>
  456248:	add	x0, sp, #0x3e8
  45624c:	str	x0, [sp, #216]
  456250:	ldr	x0, [sp, #216]
  456254:	ldr	x0, [x0]
  456258:	str	x0, [sp, #1544]
  45625c:	ldr	x0, [sp, #216]
  456260:	ldr	x0, [x0, #8]
  456264:	str	w0, [sp, #1484]
  456268:	b	456278 <argp_usage@@Base+0xd18c>
  45626c:	ldr	x0, [sp, #224]
  456270:	add	x0, x0, #0x1
  456274:	str	x0, [sp, #224]
  456278:	ldr	x0, [sp, #224]
  45627c:	ldrb	w0, [x0]
  456280:	strb	w0, [sp, #1483]
  456284:	ldrb	w0, [sp, #1483]
  456288:	bl	47695c <_obstack_memory_used@@Base+0x1981c>
  45628c:	and	w0, w0, #0xff
  456290:	cmp	w0, #0x0
  456294:	b.ne	45626c <argp_usage@@Base+0xd180>  // b.any
  456298:	ldr	x0, [sp, #200]
  45629c:	str	x0, [sp, #1536]
  4562a0:	str	xzr, [sp, #944]
  4562a4:	str	xzr, [sp, #952]
  4562a8:	str	xzr, [sp, #960]
  4562ac:	str	xzr, [sp, #968]
  4562b0:	str	xzr, [sp, #976]
  4562b4:	str	xzr, [sp, #984]
  4562b8:	str	wzr, [sp, #992]
  4562bc:	mov	x2, #0x4                   	// #4
  4562c0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4562c4:	add	x1, x0, #0x230
  4562c8:	ldr	x0, [sp, #224]
  4562cc:	bl	404480 <strncmp@plt>
  4562d0:	cmp	w0, #0x0
  4562d4:	b.ne	456480 <argp_usage@@Base+0xd394>  // b.any
  4562d8:	ldr	x0, [sp, #224]
  4562dc:	add	x0, x0, #0x4
  4562e0:	str	x0, [sp, #1472]
  4562e4:	mov	x0, #0x1                   	// #1
  4562e8:	str	x0, [sp, #1528]
  4562ec:	ldr	x0, [sp, #1472]
  4562f0:	str	x0, [sp, #1520]
  4562f4:	b	456470 <argp_usage@@Base+0xd384>
  4562f8:	ldr	x0, [sp, #1520]
  4562fc:	ldrb	w0, [x0]
  456300:	cmp	w0, #0x5c
  456304:	b.ne	456338 <argp_usage@@Base+0xd24c>  // b.any
  456308:	ldr	x0, [sp, #1520]
  45630c:	add	x0, x0, #0x1
  456310:	str	x0, [sp, #1520]
  456314:	ldr	x0, [sp, #1520]
  456318:	ldrb	w0, [x0]
  45631c:	cmp	w0, #0x5c
  456320:	b.eq	456458 <argp_usage@@Base+0xd36c>  // b.none
  456324:	ldr	x0, [sp, #1520]
  456328:	ldrb	w0, [x0]
  45632c:	cmp	w0, #0x22
  456330:	b.eq	456458 <argp_usage@@Base+0xd36c>  // b.none
  456334:	b	456480 <argp_usage@@Base+0xd394>
  456338:	ldr	x0, [sp, #1520]
  45633c:	ldrb	w0, [x0]
  456340:	cmp	w0, #0x22
  456344:	b.ne	456458 <argp_usage@@Base+0xd36c>  // b.any
  456348:	add	x0, sp, #0x3f8
  45634c:	str	x0, [sp, #1512]
  456350:	ldr	x0, [sp, #1528]
  456354:	cmp	x0, #0x64
  456358:	b.le	45637c <argp_usage@@Base+0xd290>
  45635c:	ldr	x0, [sp, #1528]
  456360:	bl	4043f0 <malloc@plt>
  456364:	str	x0, [sp, #1552]
  456368:	ldr	x0, [sp, #1552]
  45636c:	cmp	x0, #0x0
  456370:	b.eq	457b68 <argp_usage@@Base+0xea7c>  // b.none
  456374:	ldr	x0, [sp, #1552]
  456378:	str	x0, [sp, #1512]
  45637c:	ldr	x0, [sp, #1512]
  456380:	str	x0, [sp, #1504]
  456384:	ldr	x0, [sp, #1472]
  456388:	str	x0, [sp, #1520]
  45638c:	b	4563d8 <argp_usage@@Base+0xd2ec>
  456390:	ldr	x0, [sp, #1520]
  456394:	ldrb	w0, [x0]
  456398:	cmp	w0, #0x5c
  45639c:	cset	w0, eq  // eq = none
  4563a0:	and	w0, w0, #0xff
  4563a4:	and	x0, x0, #0xff
  4563a8:	ldr	x1, [sp, #1520]
  4563ac:	add	x0, x1, x0
  4563b0:	str	x0, [sp, #1520]
  4563b4:	ldr	x0, [sp, #1504]
  4563b8:	add	x1, x0, #0x1
  4563bc:	str	x1, [sp, #1504]
  4563c0:	ldr	x1, [sp, #1520]
  4563c4:	ldrb	w1, [x1]
  4563c8:	strb	w1, [x0]
  4563cc:	ldr	x0, [sp, #1520]
  4563d0:	add	x0, x0, #0x1
  4563d4:	str	x0, [sp, #1520]
  4563d8:	ldr	x0, [sp, #1520]
  4563dc:	ldrb	w0, [x0]
  4563e0:	cmp	w0, #0x22
  4563e4:	b.ne	456390 <argp_usage@@Base+0xd2a4>  // b.any
  4563e8:	ldr	x0, [sp, #1504]
  4563ec:	strb	wzr, [x0]
  4563f0:	ldr	x0, [sp, #1512]
  4563f4:	bl	474d8c <_obstack_memory_used@@Base+0x17c4c>
  4563f8:	str	x0, [sp, #1464]
  4563fc:	ldr	x0, [sp, #1464]
  456400:	cmp	x0, #0x0
  456404:	b.eq	457b70 <argp_usage@@Base+0xea84>  // b.none
  456408:	ldr	x0, [sp, #1464]
  45640c:	str	x0, [sp, #1536]
  456410:	ldr	x0, [sp, #1512]
  456414:	str	x0, [sp, #192]
  456418:	ldr	x0, [sp, #1520]
  45641c:	add	x0, x0, #0x1
  456420:	str	x0, [sp, #224]
  456424:	b	456434 <argp_usage@@Base+0xd348>
  456428:	ldr	x0, [sp, #224]
  45642c:	add	x0, x0, #0x1
  456430:	str	x0, [sp, #224]
  456434:	ldr	x0, [sp, #224]
  456438:	ldrb	w0, [x0]
  45643c:	strb	w0, [sp, #1483]
  456440:	ldrb	w0, [sp, #1483]
  456444:	bl	47695c <_obstack_memory_used@@Base+0x1981c>
  456448:	and	w0, w0, #0xff
  45644c:	cmp	w0, #0x0
  456450:	b.ne	456428 <argp_usage@@Base+0xd33c>  // b.any
  456454:	b	456480 <argp_usage@@Base+0xd394>
  456458:	ldr	x0, [sp, #1520]
  45645c:	add	x0, x0, #0x1
  456460:	str	x0, [sp, #1520]
  456464:	ldr	x0, [sp, #1528]
  456468:	add	x0, x0, #0x1
  45646c:	str	x0, [sp, #1528]
  456470:	ldr	x0, [sp, #1520]
  456474:	ldrb	w0, [x0]
  456478:	cmp	w0, #0x0
  45647c:	b.ne	4562f8 <argp_usage@@Base+0xd20c>  // b.any
  456480:	ldr	x0, [sp, #216]
  456484:	add	x1, sp, #0x340
  456488:	mov	x2, x1
  45648c:	mov	x1, x0
  456490:	ldr	x0, [sp, #1536]
  456494:	bl	4752c4 <_obstack_memory_used@@Base+0x18184>
  456498:	cmp	x0, #0x0
  45649c:	b.eq	457b78 <argp_usage@@Base+0xea8c>  // b.none
  4564a0:	ldr	x0, [sp, #224]
  4564a4:	ldrb	w0, [x0]
  4564a8:	cmp	w0, #0x0
  4564ac:	b.ne	4564bc <argp_usage@@Base+0xd3d0>  // b.any
  4564b0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4564b4:	add	x0, x0, #0x238
  4564b8:	str	x0, [sp, #224]
  4564bc:	ldr	x0, [sp, #224]
  4564c0:	str	x0, [sp, #552]
  4564c4:	ldr	w0, [sp, #212]
  4564c8:	and	w0, w0, #0x1
  4564cc:	cmp	w0, #0x0
  4564d0:	cset	w0, ne  // ne = any
  4564d4:	and	w0, w0, #0xff
  4564d8:	strb	w0, [sp, #769]
  4564dc:	ldr	w0, [sp, #852]
  4564e0:	mov	x1, #0x0                   	// #0
  4564e4:	sxtw	x0, w0
  4564e8:	add	x0, x0, #0x76c
  4564ec:	str	x0, [sp, #592]
  4564f0:	mov	x0, x1
  4564f4:	and	w0, w0, #0x1
  4564f8:	and	w0, w0, #0xff
  4564fc:	cmp	w0, #0x0
  456500:	b.eq	456524 <argp_usage@@Base+0xd438>  // b.none
  456504:	ldrb	w0, [sp, #769]
  456508:	cmp	w0, #0x0
  45650c:	b.eq	457b80 <argp_usage@@Base+0xea94>  // b.none
  456510:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456514:	add	x0, x0, #0x240
  456518:	bl	404c60 <gettext@plt>
  45651c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456520:	b	457b80 <argp_usage@@Base+0xea94>
  456524:	str	xzr, [sp, #600]
  456528:	ldr	w0, [sp, #848]
  45652c:	add	w0, w0, #0x1
  456530:	sxtw	x0, w0
  456534:	str	x0, [sp, #608]
  456538:	ldr	w0, [sp, #844]
  45653c:	sxtw	x0, w0
  456540:	str	x0, [sp, #616]
  456544:	ldr	w0, [sp, #840]
  456548:	sxtw	x0, w0
  45654c:	str	x0, [sp, #624]
  456550:	ldr	w0, [sp, #836]
  456554:	sxtw	x0, w0
  456558:	str	x0, [sp, #632]
  45655c:	ldr	w0, [sp, #832]
  456560:	sxtw	x0, w0
  456564:	str	x0, [sp, #640]
  456568:	ldrsw	x0, [sp, #1484]
  45656c:	str	x0, [sp, #648]
  456570:	ldr	w0, [sp, #864]
  456574:	str	w0, [sp, #1344]
  456578:	mov	w0, #0x2                   	// #2
  45657c:	str	w0, [sp, #580]
  456580:	add	x0, sp, #0x290
  456584:	add	x1, sp, #0x3b0
  456588:	ldp	x2, x3, [x1]
  45658c:	stp	x2, x3, [x0]
  456590:	ldp	x2, x3, [x1, #16]
  456594:	stp	x2, x3, [x0, #16]
  456598:	ldp	x2, x3, [x1, #32]
  45659c:	stp	x2, x3, [x0, #32]
  4565a0:	ldr	x1, [x1, #48]
  4565a4:	str	x1, [x0, #48]
  4565a8:	strb	wzr, [sp, #712]
  4565ac:	strb	wzr, [sp, #713]
  4565b0:	str	xzr, [sp, #720]
  4565b4:	str	xzr, [sp, #728]
  4565b8:	str	xzr, [sp, #752]
  4565bc:	str	xzr, [sp, #736]
  4565c0:	str	xzr, [sp, #744]
  4565c4:	str	xzr, [sp, #760]
  4565c8:	strb	wzr, [sp, #768]
  4565cc:	strb	wzr, [sp, #770]
  4565d0:	strb	wzr, [sp, #771]
  4565d4:	strb	wzr, [sp, #773]
  4565d8:	strb	wzr, [sp, #772]
  4565dc:	strb	wzr, [sp, #774]
  4565e0:	strb	wzr, [sp, #775]
  4565e4:	strb	wzr, [sp, #776]
  4565e8:	ldr	x0, [sp, #880]
  4565ec:	str	x0, [sp, #784]
  4565f0:	mov	w0, #0x10d                 	// #269
  4565f4:	str	w0, [sp, #792]
  4565f8:	ldr	w0, [sp, #864]
  4565fc:	str	w0, [sp, #796]
  456600:	str	xzr, [sp, #800]
  456604:	mov	w0, #0x1                   	// #1
  456608:	str	w0, [sp, #1500]
  45660c:	b	4566d4 <argp_usage@@Base+0xd5e8>
  456610:	ldr	w1, [sp, #1500]
  456614:	mov	w0, #0xa700                	// #42752
  456618:	movk	w0, #0x76, lsl #16
  45661c:	mul	w0, w1, w0
  456620:	sxtw	x0, w0
  456624:	mov	x2, #0x0                   	// #0
  456628:	ldr	x1, [sp, #1544]
  45662c:	adds	x0, x1, x0
  456630:	b.vc	456638 <argp_usage@@Base+0xd54c>
  456634:	mov	x2, #0x1                   	// #1
  456638:	str	x0, [sp, #544]
  45663c:	mov	x0, x2
  456640:	and	w0, w0, #0x1
  456644:	and	w0, w0, #0xff
  456648:	cmp	w0, #0x0
  45664c:	b.ne	4566e0 <argp_usage@@Base+0xd5f4>  // b.any
  456650:	ldr	x0, [sp, #544]
  456654:	bl	451b74 <argp_usage@@Base+0x8a88>
  456658:	and	w0, w0, #0xff
  45665c:	cmp	w0, #0x0
  456660:	b.ne	4566e0 <argp_usage@@Base+0xd5f4>  // b.any
  456664:	ldr	x0, [sp, #544]
  456668:	str	x0, [sp, #536]
  45666c:	add	x1, sp, #0x128
  456670:	add	x0, sp, #0x218
  456674:	mov	x2, x1
  456678:	mov	x1, x0
  45667c:	ldr	x0, [sp, #1536]
  456680:	bl	4752c4 <_obstack_memory_used@@Base+0x18184>
  456684:	cmp	x0, #0x0
  456688:	b.eq	4566c8 <argp_usage@@Base+0xd5dc>  // b.none
  45668c:	ldr	x0, [sp, #344]
  456690:	cmp	x0, #0x0
  456694:	b.eq	4566c8 <argp_usage@@Base+0xd5dc>  // b.none
  456698:	ldr	w1, [sp, #328]
  45669c:	ldr	w0, [sp, #796]
  4566a0:	cmp	w1, w0
  4566a4:	b.eq	4566c8 <argp_usage@@Base+0xd5dc>  // b.none
  4566a8:	ldr	x0, [sp, #344]
  4566ac:	str	x0, [sp, #800]
  4566b0:	mov	w0, #0x10d                 	// #269
  4566b4:	str	w0, [sp, #808]
  4566b8:	ldr	w0, [sp, #328]
  4566bc:	str	w0, [sp, #812]
  4566c0:	str	xzr, [sp, #816]
  4566c4:	b	4566e0 <argp_usage@@Base+0xd5f4>
  4566c8:	ldr	w0, [sp, #1500]
  4566cc:	add	w0, w0, #0x1
  4566d0:	str	w0, [sp, #1500]
  4566d4:	ldr	w0, [sp, #1500]
  4566d8:	cmp	w0, #0x3
  4566dc:	b.le	456610 <argp_usage@@Base+0xd524>
  4566e0:	ldr	x0, [sp, #784]
  4566e4:	cmp	x0, #0x0
  4566e8:	b.eq	456718 <argp_usage@@Base+0xd62c>  // b.none
  4566ec:	ldr	x0, [sp, #800]
  4566f0:	cmp	x0, #0x0
  4566f4:	b.eq	456718 <argp_usage@@Base+0xd62c>  // b.none
  4566f8:	ldr	x0, [sp, #784]
  4566fc:	ldr	x1, [sp, #800]
  456700:	bl	4047c0 <strcmp@plt>
  456704:	cmp	w0, #0x0
  456708:	b.ne	456718 <argp_usage@@Base+0xd62c>  // b.any
  45670c:	mov	w0, #0xffffffff            	// #-1
  456710:	str	w0, [sp, #796]
  456714:	str	xzr, [sp, #800]
  456718:	add	x0, sp, #0x228
  45671c:	bl	452e04 <argp_usage@@Base+0x9d18>
  456720:	cmp	w0, #0x0
  456724:	b.eq	45676c <argp_usage@@Base+0xd680>  // b.none
  456728:	ldrb	w0, [sp, #769]
  45672c:	cmp	w0, #0x0
  456730:	b.eq	457b88 <argp_usage@@Base+0xea9c>  // b.none
  456734:	ldr	x0, [sp, #552]
  456738:	ldr	x1, [sp, #1488]
  45673c:	cmp	x1, x0
  456740:	b.hi	456754 <argp_usage@@Base+0xd668>  // b.pmore
  456744:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456748:	add	x0, x0, #0x268
  45674c:	bl	404c60 <gettext@plt>
  456750:	b	456760 <argp_usage@@Base+0xd674>
  456754:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456758:	add	x0, x0, #0x280
  45675c:	bl	404c60 <gettext@plt>
  456760:	ldr	x1, [sp, #552]
  456764:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456768:	b	457b88 <argp_usage@@Base+0xea9c>
  45676c:	ldrb	w0, [sp, #769]
  456770:	cmp	w0, #0x0
  456774:	b.eq	456960 <argp_usage@@Base+0xd874>  // b.none
  456778:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45677c:	add	x0, x0, #0x2a8
  456780:	bl	404c60 <gettext@plt>
  456784:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456788:	ldrb	w0, [sp, #712]
  45678c:	cmp	w0, #0x0
  456790:	b.eq	4567bc <argp_usage@@Base+0xd6d0>  // b.none
  456794:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  456798:	add	x0, x0, #0x498
  45679c:	ldr	x19, [x0]
  4567a0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4567a4:	add	x0, x0, #0x2c0
  4567a8:	bl	404c60 <gettext@plt>
  4567ac:	mov	x1, x0
  4567b0:	mov	x0, x19
  4567b4:	bl	404c90 <fprintf@plt>
  4567b8:	b	4568c8 <argp_usage@@Base+0xd7dc>
  4567bc:	ldr	x0, [sp, #760]
  4567c0:	cmp	x0, #0x0
  4567c4:	b.eq	4567f0 <argp_usage@@Base+0xd704>  // b.none
  4567c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4567cc:	add	x0, x0, #0x498
  4567d0:	ldr	x19, [x0]
  4567d4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4567d8:	add	x0, x0, #0x2e0
  4567dc:	bl	404c60 <gettext@plt>
  4567e0:	mov	x1, x0
  4567e4:	mov	x0, x19
  4567e8:	bl	404c90 <fprintf@plt>
  4567ec:	b	4568c8 <argp_usage@@Base+0xd7dc>
  4567f0:	ldr	x0, [sp, #192]
  4567f4:	cmp	x0, #0x0
  4567f8:	b.eq	4568a4 <argp_usage@@Base+0xd7b8>  // b.none
  4567fc:	ldr	x1, [sp, #1536]
  456800:	ldr	x0, [sp, #200]
  456804:	cmp	x1, x0
  456808:	b.eq	456838 <argp_usage@@Base+0xd74c>  // b.none
  45680c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  456810:	add	x0, x0, #0x498
  456814:	ldr	x19, [x0]
  456818:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45681c:	add	x0, x0, #0x2f8
  456820:	bl	404c60 <gettext@plt>
  456824:	ldr	x2, [sp, #192]
  456828:	mov	x1, x0
  45682c:	mov	x0, x19
  456830:	bl	404c90 <fprintf@plt>
  456834:	b	4568c8 <argp_usage@@Base+0xd7dc>
  456838:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45683c:	add	x1, x0, #0x310
  456840:	ldr	x0, [sp, #192]
  456844:	bl	4047c0 <strcmp@plt>
  456848:	cmp	w0, #0x0
  45684c:	b.ne	456878 <argp_usage@@Base+0xd78c>  // b.any
  456850:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  456854:	add	x0, x0, #0x498
  456858:	ldr	x19, [x0]
  45685c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456860:	add	x0, x0, #0x318
  456864:	bl	404c60 <gettext@plt>
  456868:	mov	x1, x0
  45686c:	mov	x0, x19
  456870:	bl	404c90 <fprintf@plt>
  456874:	b	4568c8 <argp_usage@@Base+0xd7dc>
  456878:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45687c:	add	x0, x0, #0x498
  456880:	ldr	x19, [x0]
  456884:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456888:	add	x0, x0, #0x340
  45688c:	bl	404c60 <gettext@plt>
  456890:	ldr	x2, [sp, #192]
  456894:	mov	x1, x0
  456898:	mov	x0, x19
  45689c:	bl	404c90 <fprintf@plt>
  4568a0:	b	4568c8 <argp_usage@@Base+0xd7dc>
  4568a4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4568a8:	add	x0, x0, #0x498
  4568ac:	ldr	x19, [x0]
  4568b0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4568b4:	add	x0, x0, #0x360
  4568b8:	bl	404c60 <gettext@plt>
  4568bc:	mov	x1, x0
  4568c0:	mov	x0, x19
  4568c4:	bl	404c90 <fprintf@plt>
  4568c8:	ldr	x0, [sp, #736]
  4568cc:	cmp	x0, #0x0
  4568d0:	b.eq	456910 <argp_usage@@Base+0xd824>  // b.none
  4568d4:	ldr	x0, [sp, #760]
  4568d8:	cmp	x0, #0x0
  4568dc:	b.ne	456910 <argp_usage@@Base+0xd824>  // b.any
  4568e0:	ldr	w0, [sp, #572]
  4568e4:	cmp	w0, #0x0
  4568e8:	b.le	456910 <argp_usage@@Base+0xd824>
  4568ec:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4568f0:	add	x0, x0, #0x498
  4568f4:	ldr	x0, [x0]
  4568f8:	mov	x3, x0
  4568fc:	mov	x2, #0x5                   	// #5
  456900:	mov	x1, #0x1                   	// #1
  456904:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456908:	add	x0, x0, #0x370
  45690c:	bl	404970 <fwrite@plt>
  456910:	ldr	x0, [sp, #760]
  456914:	cmp	x0, #0x0
  456918:	b.eq	456948 <argp_usage@@Base+0xd85c>  // b.none
  45691c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  456920:	add	x0, x0, #0x498
  456924:	ldr	x19, [x0]
  456928:	ldr	w0, [sp, #576]
  45692c:	add	x1, sp, #0x4c8
  456930:	bl	452444 <argp_usage@@Base+0x9358>
  456934:	mov	x2, x0
  456938:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45693c:	add	x1, x0, #0x378
  456940:	mov	x0, x19
  456944:	bl	404c90 <fprintf@plt>
  456948:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45694c:	add	x0, x0, #0x498
  456950:	ldr	x0, [x0]
  456954:	mov	x1, x0
  456958:	mov	w0, #0xa                   	// #10
  45695c:	bl	404250 <fputc@plt>
  456960:	ldrb	w0, [sp, #712]
  456964:	cmp	w0, #0x0
  456968:	b.eq	456980 <argp_usage@@Base+0xd894>  // b.none
  45696c:	ldr	x2, [sp, #232]
  456970:	add	x0, sp, #0x240
  456974:	ldp	x0, x1, [x0, #64]
  456978:	stp	x0, x1, [x2]
  45697c:	b	4579a0 <argp_usage@@Base+0xe8b4>
  456980:	ldr	x1, [sp, #752]
  456984:	ldr	x0, [sp, #720]
  456988:	orr	x1, x1, x0
  45698c:	ldr	x0, [sp, #728]
  456990:	orr	x1, x1, x0
  456994:	ldr	x0, [sp, #744]
  456998:	orr	x1, x1, x0
  45699c:	ldr	x2, [sp, #736]
  4569a0:	ldr	x0, [sp, #760]
  4569a4:	add	x0, x2, x0
  4569a8:	orr	x0, x1, x0
  4569ac:	cmp	x0, #0x1
  4569b0:	b.le	456a44 <argp_usage@@Base+0xd958>
  4569b4:	ldrb	w0, [sp, #769]
  4569b8:	cmp	w0, #0x0
  4569bc:	b.eq	457b90 <argp_usage@@Base+0xeaa4>  // b.none
  4569c0:	ldr	x0, [sp, #752]
  4569c4:	cmp	x0, #0x1
  4569c8:	b.le	4569d8 <argp_usage@@Base+0xd8ec>
  4569cc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4569d0:	add	x0, x0, #0x380
  4569d4:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4569d8:	ldr	x0, [sp, #720]
  4569dc:	cmp	x0, #0x1
  4569e0:	b.le	4569f0 <argp_usage@@Base+0xd904>
  4569e4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4569e8:	add	x0, x0, #0x3a8
  4569ec:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4569f0:	ldr	x0, [sp, #728]
  4569f4:	cmp	x0, #0x1
  4569f8:	b.le	456a08 <argp_usage@@Base+0xd91c>
  4569fc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456a00:	add	x0, x0, #0x3d0
  456a04:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456a08:	ldr	x0, [sp, #744]
  456a0c:	cmp	x0, #0x1
  456a10:	b.le	456a20 <argp_usage@@Base+0xd934>
  456a14:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456a18:	add	x0, x0, #0x3f8
  456a1c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456a20:	ldr	x1, [sp, #736]
  456a24:	ldr	x0, [sp, #760]
  456a28:	add	x0, x1, x0
  456a2c:	cmp	x0, #0x1
  456a30:	b.le	457b90 <argp_usage@@Base+0xeaa4>
  456a34:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456a38:	add	x0, x0, #0x428
  456a3c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456a40:	b	457b90 <argp_usage@@Base+0xeaa4>
  456a44:	ldrb	w4, [sp, #769]
  456a48:	add	x2, sp, #0xa0
  456a4c:	add	x3, sp, #0x248
  456a50:	ldp	x0, x1, [x3]
  456a54:	stp	x0, x1, [x2]
  456a58:	ldr	x0, [x3, #16]
  456a5c:	str	x0, [x2, #16]
  456a60:	add	x0, sp, #0x520
  456a64:	add	x1, x0, #0x14
  456a68:	add	x0, sp, #0xa0
  456a6c:	mov	x2, x1
  456a70:	mov	w1, w4
  456a74:	bl	454e2c <argp_usage@@Base+0xbd40>
  456a78:	and	w0, w0, #0xff
  456a7c:	eor	w0, w0, #0x1
  456a80:	and	w0, w0, #0xff
  456a84:	cmp	w0, #0x0
  456a88:	b.ne	456afc <argp_usage@@Base+0xda10>  // b.any
  456a8c:	ldr	x1, [sp, #608]
  456a90:	mov	w0, #0x0                   	// #0
  456a94:	subs	x1, x1, #0x1
  456a98:	b.vc	456aa0 <argp_usage@@Base+0xd9b4>
  456a9c:	mov	w0, #0x1                   	// #1
  456aa0:	sxtw	x2, w1
  456aa4:	cmp	x1, x2
  456aa8:	b.eq	456ab0 <argp_usage@@Base+0xd9c4>  // b.none
  456aac:	mov	w0, #0x1                   	// #1
  456ab0:	str	w1, [sp, #1328]
  456ab4:	and	w0, w0, #0x1
  456ab8:	and	w0, w0, #0xff
  456abc:	cmp	w0, #0x0
  456ac0:	b.ne	456afc <argp_usage@@Base+0xda10>  // b.any
  456ac4:	ldr	x1, [sp, #616]
  456ac8:	mov	w0, #0x0                   	// #0
  456acc:	adds	x1, x1, xzr
  456ad0:	b.vc	456ad8 <argp_usage@@Base+0xd9ec>
  456ad4:	mov	w0, #0x1                   	// #1
  456ad8:	sxtw	x2, w1
  456adc:	cmp	x1, x2
  456ae0:	b.eq	456ae8 <argp_usage@@Base+0xd9fc>  // b.none
  456ae4:	mov	w0, #0x1                   	// #1
  456ae8:	str	w1, [sp, #1324]
  456aec:	and	w0, w0, #0x1
  456af0:	and	w0, w0, #0xff
  456af4:	cmp	w0, #0x0
  456af8:	b.eq	456b1c <argp_usage@@Base+0xda30>  // b.none
  456afc:	ldrb	w0, [sp, #769]
  456b00:	cmp	w0, #0x0
  456b04:	b.eq	457b98 <argp_usage@@Base+0xeaac>  // b.none
  456b08:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456b0c:	add	x0, x0, #0x450
  456b10:	bl	404c60 <gettext@plt>
  456b14:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456b18:	b	457b98 <argp_usage@@Base+0xeaac>
  456b1c:	ldr	x0, [sp, #752]
  456b20:	cmp	x0, #0x0
  456b24:	b.ne	456b4c <argp_usage@@Base+0xda60>  // b.any
  456b28:	ldrb	w0, [sp, #713]
  456b2c:	cmp	w0, #0x0
  456b30:	b.eq	456c44 <argp_usage@@Base+0xdb58>  // b.none
  456b34:	ldr	x0, [sp, #720]
  456b38:	cmp	x0, #0x0
  456b3c:	b.ne	456c44 <argp_usage@@Base+0xdb58>  // b.any
  456b40:	ldr	x0, [sp, #728]
  456b44:	cmp	x0, #0x0
  456b48:	b.ne	456c44 <argp_usage@@Base+0xdb58>  // b.any
  456b4c:	ldr	x0, [sp, #624]
  456b50:	ldr	w1, [sp, #580]
  456b54:	bl	454cb0 <argp_usage@@Base+0xbbc4>
  456b58:	str	w0, [sp, #1320]
  456b5c:	ldr	w0, [sp, #1320]
  456b60:	cmp	w0, #0x0
  456b64:	b.ge	456bd8 <argp_usage@@Base+0xdaec>  // b.tcont
  456b68:	ldr	w0, [sp, #580]
  456b6c:	cmp	w0, #0x0
  456b70:	b.eq	456b98 <argp_usage@@Base+0xdaac>  // b.none
  456b74:	ldr	w0, [sp, #580]
  456b78:	cmp	w0, #0x1
  456b7c:	b.ne	456b8c <argp_usage@@Base+0xdaa0>  // b.any
  456b80:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  456b84:	add	x0, x0, #0xa30
  456b88:	b	456ba0 <argp_usage@@Base+0xdab4>
  456b8c:	adrp	x0, 488000 <_obstack_memory_used@@Base+0x2aec0>
  456b90:	add	x0, x0, #0xa70
  456b94:	b	456ba0 <argp_usage@@Base+0xdab4>
  456b98:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456b9c:	add	x0, x0, #0x478
  456ba0:	str	x0, [sp, #1456]
  456ba4:	ldrb	w0, [sp, #769]
  456ba8:	cmp	w0, #0x0
  456bac:	b.eq	457ba0 <argp_usage@@Base+0xeab4>  // b.none
  456bb0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456bb4:	add	x0, x0, #0x480
  456bb8:	bl	404c60 <gettext@plt>
  456bbc:	mov	x3, x0
  456bc0:	ldr	x0, [sp, #624]
  456bc4:	ldr	x2, [sp, #1456]
  456bc8:	mov	x1, x0
  456bcc:	mov	x0, x3
  456bd0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456bd4:	b	457ba0 <argp_usage@@Base+0xeab4>
  456bd8:	ldr	x0, [sp, #632]
  456bdc:	str	w0, [sp, #1316]
  456be0:	ldr	x0, [sp, #640]
  456be4:	str	w0, [sp, #1312]
  456be8:	ldrb	w0, [sp, #769]
  456bec:	cmp	w0, #0x0
  456bf0:	b.eq	456c74 <argp_usage@@Base+0xdb88>  // b.none
  456bf4:	ldr	x0, [sp, #752]
  456bf8:	cmp	x0, #0x0
  456bfc:	b.eq	456c14 <argp_usage@@Base+0xdb28>  // b.none
  456c00:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456c04:	add	x0, x0, #0x4a0
  456c08:	bl	404c60 <gettext@plt>
  456c0c:	mov	x19, x0
  456c10:	b	456c24 <argp_usage@@Base+0xdb38>
  456c14:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456c18:	add	x0, x0, #0x4d0
  456c1c:	bl	404c60 <gettext@plt>
  456c20:	mov	x19, x0
  456c24:	add	x1, sp, #0x460
  456c28:	add	x0, sp, #0x520
  456c2c:	mov	w2, #0x64                  	// #100
  456c30:	bl	455d18 <argp_usage@@Base+0xcc2c>
  456c34:	mov	x1, x0
  456c38:	mov	x0, x19
  456c3c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456c40:	b	456c74 <argp_usage@@Base+0xdb88>
  456c44:	str	wzr, [sp, #1312]
  456c48:	ldr	w0, [sp, #1312]
  456c4c:	str	w0, [sp, #1316]
  456c50:	ldr	w0, [sp, #1316]
  456c54:	str	w0, [sp, #1320]
  456c58:	str	xzr, [sp, #648]
  456c5c:	ldrb	w0, [sp, #769]
  456c60:	cmp	w0, #0x0
  456c64:	b.eq	456c74 <argp_usage@@Base+0xdb88>  // b.none
  456c68:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456c6c:	add	x0, x0, #0x500
  456c70:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456c74:	ldr	x1, [sp, #720]
  456c78:	ldr	x0, [sp, #728]
  456c7c:	orr	x1, x1, x0
  456c80:	ldr	x0, [sp, #752]
  456c84:	orr	x0, x1, x0
  456c88:	cmp	x0, #0x0
  456c8c:	b.eq	456c98 <argp_usage@@Base+0xdbac>  // b.none
  456c90:	mov	w0, #0xffffffff            	// #-1
  456c94:	str	w0, [sp, #1344]
  456c98:	ldr	x0, [sp, #736]
  456c9c:	cmp	x0, #0x0
  456ca0:	b.eq	456cac <argp_usage@@Base+0xdbc0>  // b.none
  456ca4:	ldr	w0, [sp, #572]
  456ca8:	str	w0, [sp, #1344]
  456cac:	ldr	w0, [sp, #1312]
  456cb0:	str	w0, [sp, #1256]
  456cb4:	ldr	w0, [sp, #1316]
  456cb8:	str	w0, [sp, #1260]
  456cbc:	ldr	w0, [sp, #1320]
  456cc0:	str	w0, [sp, #1264]
  456cc4:	ldr	w0, [sp, #1324]
  456cc8:	str	w0, [sp, #1268]
  456ccc:	ldr	w0, [sp, #1328]
  456cd0:	str	w0, [sp, #1272]
  456cd4:	ldr	w0, [sp, #1332]
  456cd8:	str	w0, [sp, #1276]
  456cdc:	ldr	w0, [sp, #1344]
  456ce0:	str	w0, [sp, #1288]
  456ce4:	mov	w0, #0xffffffff            	// #-1
  456ce8:	str	w0, [sp, #1336]
  456cec:	add	x0, sp, #0x520
  456cf0:	mov	x1, x0
  456cf4:	ldr	x0, [sp, #1536]
  456cf8:	bl	475388 <_obstack_memory_used@@Base+0x18248>
  456cfc:	str	x0, [sp, #1544]
  456d00:	add	x1, sp, #0x520
  456d04:	add	x0, sp, #0x4e8
  456d08:	bl	455ad8 <argp_usage@@Base+0xc9ec>
  456d0c:	and	w0, w0, #0xff
  456d10:	eor	w0, w0, #0x1
  456d14:	and	w0, w0, #0xff
  456d18:	cmp	w0, #0x0
  456d1c:	b.eq	456e50 <argp_usage@@Base+0xdd64>  // b.none
  456d20:	strb	wzr, [sp, #1499]
  456d24:	ldr	x0, [sp, #760]
  456d28:	cmp	x0, #0x0
  456d2c:	cset	w0, ne  // ne = any
  456d30:	strb	w0, [sp, #1455]
  456d34:	ldrb	w0, [sp, #1455]
  456d38:	cmp	w0, #0x0
  456d3c:	b.eq	456e24 <argp_usage@@Base+0xdd38>  // b.none
  456d40:	mov	w0, #0x58                  	// #88
  456d44:	strb	w0, [sp, #506]
  456d48:	ldrb	w0, [sp, #506]
  456d4c:	strb	w0, [sp, #505]
  456d50:	ldrb	w0, [sp, #505]
  456d54:	strb	w0, [sp, #504]
  456d58:	ldr	w2, [sp, #576]
  456d5c:	add	x0, sp, #0x1f8
  456d60:	add	x0, x0, #0x3
  456d64:	mov	x1, x0
  456d68:	mov	w0, w2
  456d6c:	bl	452444 <argp_usage@@Base+0x9358>
  456d70:	add	x0, sp, #0x1f8
  456d74:	bl	474d8c <_obstack_memory_used@@Base+0x17c4c>
  456d78:	str	x0, [sp, #1440]
  456d7c:	ldr	x0, [sp, #1440]
  456d80:	cmp	x0, #0x0
  456d84:	b.ne	456db8 <argp_usage@@Base+0xdccc>  // b.any
  456d88:	ldrb	w0, [sp, #769]
  456d8c:	cmp	w0, #0x0
  456d90:	b.eq	457ba8 <argp_usage@@Base+0xeabc>  // b.none
  456d94:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  456d98:	add	x0, x0, #0x538
  456d9c:	bl	404c60 <gettext@plt>
  456da0:	mov	x2, x0
  456da4:	add	x0, sp, #0x1f8
  456da8:	mov	x1, x0
  456dac:	mov	x0, x2
  456db0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  456db4:	b	457b90 <argp_usage@@Base+0xeaa4>
  456db8:	ldr	w0, [sp, #1256]
  456dbc:	str	w0, [sp, #1312]
  456dc0:	ldr	w0, [sp, #1260]
  456dc4:	str	w0, [sp, #1316]
  456dc8:	ldr	w0, [sp, #1264]
  456dcc:	str	w0, [sp, #1320]
  456dd0:	ldr	w0, [sp, #1268]
  456dd4:	str	w0, [sp, #1324]
  456dd8:	ldr	w0, [sp, #1272]
  456ddc:	str	w0, [sp, #1328]
  456de0:	ldr	w0, [sp, #1276]
  456de4:	str	w0, [sp, #1332]
  456de8:	ldr	w0, [sp, #1288]
  456dec:	str	w0, [sp, #1344]
  456df0:	mov	w0, #0xffffffff            	// #-1
  456df4:	str	w0, [sp, #1336]
  456df8:	add	x0, sp, #0x520
  456dfc:	mov	x1, x0
  456e00:	ldr	x0, [sp, #1440]
  456e04:	bl	475388 <_obstack_memory_used@@Base+0x18248>
  456e08:	str	x0, [sp, #1544]
  456e0c:	add	x1, sp, #0x520
  456e10:	add	x0, sp, #0x4e8
  456e14:	bl	455ad8 <argp_usage@@Base+0xc9ec>
  456e18:	strb	w0, [sp, #1499]
  456e1c:	ldr	x0, [sp, #1440]
  456e20:	bl	475048 <_obstack_memory_used@@Base+0x17f08>
  456e24:	ldrb	w0, [sp, #1499]
  456e28:	eor	w0, w0, #0x1
  456e2c:	and	w0, w0, #0xff
  456e30:	cmp	w0, #0x0
  456e34:	b.eq	456e50 <argp_usage@@Base+0xdd64>  // b.none
  456e38:	add	x2, sp, #0x228
  456e3c:	add	x1, sp, #0x520
  456e40:	add	x0, sp, #0x4e8
  456e44:	ldrb	w3, [sp, #1455]
  456e48:	bl	455d70 <argp_usage@@Base+0xcc84>
  456e4c:	b	457bcc <argp_usage@@Base+0xeae0>
  456e50:	ldr	x0, [sp, #728]
  456e54:	cmp	x0, #0x0
  456e58:	b.eq	4570c4 <argp_usage@@Base+0xdfd8>  // b.none
  456e5c:	ldr	x0, [sp, #720]
  456e60:	cmp	x0, #0x0
  456e64:	b.ne	4570c4 <argp_usage@@Base+0xdfd8>  // b.any
  456e68:	ldr	x1, [sp, #560]
  456e6c:	ldr	x0, [sp, #560]
  456e70:	cmp	x0, #0x0
  456e74:	b.le	456e90 <argp_usage@@Base+0xdda4>
  456e78:	ldr	w2, [sp, #1336]
  456e7c:	ldr	w0, [sp, #568]
  456e80:	cmp	w2, w0
  456e84:	b.eq	456e90 <argp_usage@@Base+0xdda4>  // b.none
  456e88:	mov	w0, #0x1                   	// #1
  456e8c:	b	456e94 <argp_usage@@Base+0xdda8>
  456e90:	mov	w0, #0x0                   	// #0
  456e94:	sxtw	x0, w0
  456e98:	sub	x0, x1, x0
  456e9c:	mov	x3, #0x0                   	// #0
  456ea0:	str	x0, [sp, #96]
  456ea4:	asr	x0, x0, #63
  456ea8:	str	x0, [sp, #104]
  456eac:	ldp	x4, x5, [sp, #96]
  456eb0:	mov	x0, x4
  456eb4:	mov	x1, x5
  456eb8:	lsr	x2, x0, #61
  456ebc:	lsl	x21, x1, #3
  456ec0:	orr	x21, x2, x21
  456ec4:	lsl	x20, x0, #3
  456ec8:	mov	x0, x20
  456ecc:	mov	x1, x21
  456ed0:	mov	x2, x4
  456ed4:	subs	x2, x0, x2
  456ed8:	mov	x4, x5
  456edc:	sbc	x0, x1, x4
  456ee0:	mov	x26, x2
  456ee4:	mov	x27, x0
  456ee8:	str	x27, [sp, #112]
  456eec:	asr	x0, x27, #63
  456ef0:	str	x0, [sp, #120]
  456ef4:	asr	x0, x26, #63
  456ef8:	ldr	x1, [sp, #112]
  456efc:	cmp	x0, x1
  456f00:	b.eq	456f08 <argp_usage@@Base+0xde1c>  // b.none
  456f04:	mov	x3, #0x1                   	// #1
  456f08:	mov	x0, x26
  456f0c:	str	x0, [sp, #496]
  456f10:	mov	x0, x3
  456f14:	and	w0, w0, #0x1
  456f18:	and	w0, w0, #0xff
  456f1c:	cmp	w0, #0x0
  456f20:	b.ne	456fd4 <argp_usage@@Base+0xdee8>  // b.any
  456f24:	ldr	w1, [sp, #568]
  456f28:	ldr	w0, [sp, #1336]
  456f2c:	sub	w0, w1, w0
  456f30:	add	w0, w0, #0x7
  456f34:	mov	w1, #0x2493                	// #9363
  456f38:	movk	w1, #0x9249, lsl #16
  456f3c:	smull	x1, w0, w1
  456f40:	lsr	x1, x1, #32
  456f44:	add	w1, w0, w1
  456f48:	asr	w2, w1, #2
  456f4c:	asr	w1, w0, #31
  456f50:	sub	w2, w2, w1
  456f54:	mov	w1, w2
  456f58:	lsl	w1, w1, #3
  456f5c:	sub	w1, w1, w2
  456f60:	sub	w2, w0, w1
  456f64:	ldr	x0, [sp, #496]
  456f68:	sxtw	x1, w2
  456f6c:	mov	x2, #0x0                   	// #0
  456f70:	adds	x0, x1, x0
  456f74:	b.vc	456f7c <argp_usage@@Base+0xde90>
  456f78:	mov	x2, #0x1                   	// #1
  456f7c:	str	x0, [sp, #496]
  456f80:	mov	x0, x2
  456f84:	and	w0, w0, #0x1
  456f88:	and	w0, w0, #0xff
  456f8c:	cmp	w0, #0x0
  456f90:	b.ne	456fd4 <argp_usage@@Base+0xdee8>  // b.any
  456f94:	ldr	x2, [sp, #496]
  456f98:	ldr	w0, [sp, #1324]
  456f9c:	sxtw	x1, w0
  456fa0:	mov	w0, #0x0                   	// #0
  456fa4:	adds	x1, x2, x1
  456fa8:	b.vc	456fb0 <argp_usage@@Base+0xdec4>
  456fac:	mov	w0, #0x1                   	// #1
  456fb0:	sxtw	x2, w1
  456fb4:	cmp	x1, x2
  456fb8:	b.eq	456fc0 <argp_usage@@Base+0xded4>  // b.none
  456fbc:	mov	w0, #0x1                   	// #1
  456fc0:	str	w1, [sp, #1324]
  456fc4:	and	w0, w0, #0x1
  456fc8:	and	w0, w0, #0xff
  456fcc:	cmp	w0, #0x0
  456fd0:	b.eq	456fe0 <argp_usage@@Base+0xdef4>  // b.none
  456fd4:	mov	x0, #0xffffffffffffffff    	// #-1
  456fd8:	str	x0, [sp, #1544]
  456fdc:	b	456ffc <argp_usage@@Base+0xdf10>
  456fe0:	mov	w0, #0xffffffff            	// #-1
  456fe4:	str	w0, [sp, #1344]
  456fe8:	add	x0, sp, #0x520
  456fec:	mov	x1, x0
  456ff0:	ldr	x0, [sp, #1536]
  456ff4:	bl	475388 <_obstack_memory_used@@Base+0x18248>
  456ff8:	str	x0, [sp, #1544]
  456ffc:	ldr	x0, [sp, #1544]
  457000:	cmn	x0, #0x1
  457004:	b.ne	457070 <argp_usage@@Base+0xdf84>  // b.any
  457008:	ldrb	w0, [sp, #769]
  45700c:	cmp	w0, #0x0
  457010:	b.eq	457bb0 <argp_usage@@Base+0xeac4>  // b.none
  457014:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457018:	add	x0, x0, #0x558
  45701c:	bl	404c60 <gettext@plt>
  457020:	mov	x21, x0
  457024:	add	x1, sp, #0x128
  457028:	add	x0, sp, #0x228
  45702c:	mov	w2, #0x64                  	// #100
  457030:	bl	4522d0 <argp_usage@@Base+0x91e4>
  457034:	mov	x22, x0
  457038:	ldr	x19, [sp, #560]
  45703c:	ldr	w20, [sp, #568]
  457040:	add	x2, sp, #0x460
  457044:	add	x1, sp, #0x228
  457048:	add	x0, sp, #0x520
  45704c:	mov	w3, #0x64                  	// #100
  457050:	bl	455b9c <argp_usage@@Base+0xcab0>
  457054:	mov	x4, x0
  457058:	mov	w3, w20
  45705c:	mov	x2, x19
  457060:	mov	x1, x22
  457064:	mov	x0, x21
  457068:	bl	451b9c <argp_usage@@Base+0x8ab0>
  45706c:	b	457b90 <argp_usage@@Base+0xeaa4>
  457070:	ldrb	w0, [sp, #769]
  457074:	cmp	w0, #0x0
  457078:	b.eq	4570c4 <argp_usage@@Base+0xdfd8>  // b.none
  45707c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457080:	add	x0, x0, #0x5a8
  457084:	bl	404c60 <gettext@plt>
  457088:	mov	x19, x0
  45708c:	add	x1, sp, #0x128
  457090:	add	x0, sp, #0x228
  457094:	mov	w2, #0x64                  	// #100
  457098:	bl	4522d0 <argp_usage@@Base+0x91e4>
  45709c:	mov	x20, x0
  4570a0:	add	x2, sp, #0x460
  4570a4:	add	x1, sp, #0x228
  4570a8:	add	x0, sp, #0x520
  4570ac:	mov	w3, #0x64                  	// #100
  4570b0:	bl	455b9c <argp_usage@@Base+0xcab0>
  4570b4:	mov	x2, x0
  4570b8:	mov	x1, x20
  4570bc:	mov	x0, x19
  4570c0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4570c4:	ldrb	w0, [sp, #769]
  4570c8:	cmp	w0, #0x0
  4570cc:	b.eq	457188 <argp_usage@@Base+0xe09c>  // b.none
  4570d0:	ldr	x0, [sp, #720]
  4570d4:	cmp	x0, #0x0
  4570d8:	b.ne	457114 <argp_usage@@Base+0xe028>  // b.any
  4570dc:	ldr	x0, [sp, #728]
  4570e0:	cmp	x0, #0x0
  4570e4:	b.ne	457114 <argp_usage@@Base+0xe028>  // b.any
  4570e8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4570ec:	add	x0, x0, #0x5c8
  4570f0:	bl	404c60 <gettext@plt>
  4570f4:	mov	x19, x0
  4570f8:	add	x1, sp, #0x460
  4570fc:	add	x0, sp, #0x520
  457100:	mov	w2, #0x64                  	// #100
  457104:	bl	455ca4 <argp_usage@@Base+0xcbb8>
  457108:	mov	x1, x0
  45710c:	mov	x0, x19
  457110:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457114:	ldr	x0, [sp, #728]
  457118:	cmp	x0, #0x0
  45711c:	b.eq	457158 <argp_usage@@Base+0xe06c>  // b.none
  457120:	ldr	x0, [sp, #720]
  457124:	cmp	x0, #0x0
  457128:	b.eq	457158 <argp_usage@@Base+0xe06c>  // b.none
  45712c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457130:	add	x0, x0, #0x5f8
  457134:	bl	404c60 <gettext@plt>
  457138:	mov	x19, x0
  45713c:	add	x1, sp, #0x128
  457140:	add	x0, sp, #0x228
  457144:	mov	w2, #0x64                  	// #100
  457148:	bl	4522d0 <argp_usage@@Base+0x91e4>
  45714c:	mov	x1, x0
  457150:	mov	x0, x19
  457154:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457158:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45715c:	add	x0, x0, #0x638
  457160:	bl	404c60 <gettext@plt>
  457164:	mov	x19, x0
  457168:	add	x2, sp, #0x460
  45716c:	add	x1, sp, #0x228
  457170:	add	x0, sp, #0x520
  457174:	mov	w3, #0x64                  	// #100
  457178:	bl	455b9c <argp_usage@@Base+0xcab0>
  45717c:	mov	x1, x0
  457180:	mov	x0, x19
  457184:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457188:	ldr	x1, [sp, #656]
  45718c:	ldr	x0, [sp, #664]
  457190:	orr	x1, x1, x0
  457194:	ldr	x0, [sp, #672]
  457198:	orr	x0, x1, x0
  45719c:	cmp	x0, #0x0
  4571a0:	b.eq	457504 <argp_usage@@Base+0xe418>  // b.none
  4571a4:	ldrb	w0, [sp, #769]
  4571a8:	cmp	w0, #0x0
  4571ac:	b.eq	45720c <argp_usage@@Base+0xe120>  // b.none
  4571b0:	ldr	x0, [sp, #656]
  4571b4:	cmp	x0, #0x0
  4571b8:	b.ne	4571c8 <argp_usage@@Base+0xe0dc>  // b.any
  4571bc:	ldr	x0, [sp, #664]
  4571c0:	cmp	x0, #0x0
  4571c4:	b.eq	4571e4 <argp_usage@@Base+0xe0f8>  // b.none
  4571c8:	ldr	w0, [sp, #1324]
  4571cc:	cmp	w0, #0xf
  4571d0:	b.eq	4571e4 <argp_usage@@Base+0xe0f8>  // b.none
  4571d4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4571d8:	add	x0, x0, #0x658
  4571dc:	bl	404c60 <gettext@plt>
  4571e0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4571e4:	ldr	x0, [sp, #672]
  4571e8:	cmp	x0, #0x0
  4571ec:	b.eq	45720c <argp_usage@@Base+0xe120>  // b.none
  4571f0:	ldr	w0, [sp, #1320]
  4571f4:	cmp	w0, #0xc
  4571f8:	b.eq	45720c <argp_usage@@Base+0xe120>  // b.none
  4571fc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457200:	add	x0, x0, #0x6c0
  457204:	bl	404c60 <gettext@plt>
  457208:	bl	451b9c <argp_usage@@Base+0x8ab0>
  45720c:	ldr	w0, [sp, #1332]
  457210:	ldr	x1, [sp, #656]
  457214:	sxtw	x2, w0
  457218:	mov	w0, #0x0                   	// #0
  45721c:	adds	x1, x2, x1
  457220:	b.vc	457228 <argp_usage@@Base+0xe13c>
  457224:	mov	w0, #0x1                   	// #1
  457228:	sxtw	x2, w1
  45722c:	cmp	x1, x2
  457230:	b.eq	457238 <argp_usage@@Base+0xe14c>  // b.none
  457234:	mov	w0, #0x1                   	// #1
  457238:	str	w1, [sp, #492]
  45723c:	and	w0, w0, #0x1
  457240:	and	w0, w0, #0xff
  457244:	cmp	w0, #0x0
  457248:	b.ne	4572cc <argp_usage@@Base+0xe1e0>  // b.any
  45724c:	ldr	w0, [sp, #1328]
  457250:	ldr	x1, [sp, #664]
  457254:	sxtw	x2, w0
  457258:	mov	w0, #0x0                   	// #0
  45725c:	adds	x1, x2, x1
  457260:	b.vc	457268 <argp_usage@@Base+0xe17c>
  457264:	mov	w0, #0x1                   	// #1
  457268:	sxtw	x2, w1
  45726c:	cmp	x1, x2
  457270:	b.eq	457278 <argp_usage@@Base+0xe18c>  // b.none
  457274:	mov	w0, #0x1                   	// #1
  457278:	str	w1, [sp, #488]
  45727c:	and	w0, w0, #0x1
  457280:	and	w0, w0, #0xff
  457284:	cmp	w0, #0x0
  457288:	b.ne	4572cc <argp_usage@@Base+0xe1e0>  // b.any
  45728c:	ldr	w0, [sp, #1324]
  457290:	ldr	x1, [sp, #672]
  457294:	sxtw	x2, w0
  457298:	mov	w0, #0x0                   	// #0
  45729c:	adds	x1, x2, x1
  4572a0:	b.vc	4572a8 <argp_usage@@Base+0xe1bc>
  4572a4:	mov	w0, #0x1                   	// #1
  4572a8:	sxtw	x2, w1
  4572ac:	cmp	x1, x2
  4572b0:	b.eq	4572b8 <argp_usage@@Base+0xe1cc>  // b.none
  4572b4:	mov	w0, #0x1                   	// #1
  4572b8:	str	w1, [sp, #484]
  4572bc:	and	w0, w0, #0x1
  4572c0:	and	w0, w0, #0xff
  4572c4:	cmp	w0, #0x0
  4572c8:	b.eq	457300 <argp_usage@@Base+0xe214>  // b.none
  4572cc:	ldrb	w0, [sp, #769]
  4572d0:	cmp	w0, #0x0
  4572d4:	b.eq	457bb8 <argp_usage@@Base+0xeacc>  // b.none
  4572d8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4572dc:	add	x0, x0, #0x708
  4572e0:	bl	404c60 <gettext@plt>
  4572e4:	mov	x3, x0
  4572e8:	mov	w2, #0x877                 	// #2167
  4572ec:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4572f0:	add	x1, x0, #0x718
  4572f4:	mov	x0, x3
  4572f8:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4572fc:	b	457bb8 <argp_usage@@Base+0xeacc>
  457300:	ldr	w0, [sp, #492]
  457304:	str	w0, [sp, #1332]
  457308:	ldr	w0, [sp, #488]
  45730c:	str	w0, [sp, #1328]
  457310:	ldr	w0, [sp, #484]
  457314:	str	w0, [sp, #1324]
  457318:	ldr	w0, [sp, #1264]
  45731c:	str	w0, [sp, #1320]
  457320:	ldr	w0, [sp, #1260]
  457324:	str	w0, [sp, #1316]
  457328:	ldr	w0, [sp, #1256]
  45732c:	str	w0, [sp, #1312]
  457330:	ldr	w0, [sp, #1288]
  457334:	str	w0, [sp, #1344]
  457338:	add	x0, sp, #0x520
  45733c:	mov	x1, x0
  457340:	ldr	x0, [sp, #1536]
  457344:	bl	475388 <_obstack_memory_used@@Base+0x18248>
  457348:	str	x0, [sp, #1544]
  45734c:	ldr	x0, [sp, #1544]
  457350:	cmn	x0, #0x1
  457354:	b.ne	457398 <argp_usage@@Base+0xe2ac>  // b.any
  457358:	ldrb	w0, [sp, #769]
  45735c:	cmp	w0, #0x0
  457360:	b.eq	4574fc <argp_usage@@Base+0xe410>  // b.none
  457364:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457368:	add	x0, x0, #0x730
  45736c:	bl	404c60 <gettext@plt>
  457370:	mov	x19, x0
  457374:	add	x2, sp, #0x460
  457378:	add	x1, sp, #0x228
  45737c:	add	x0, sp, #0x520
  457380:	mov	w3, #0x64                  	// #100
  457384:	bl	455b9c <argp_usage@@Base+0xcab0>
  457388:	mov	x1, x0
  45738c:	mov	x0, x19
  457390:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457394:	b	4574fc <argp_usage@@Base+0xe410>
  457398:	ldrb	w0, [sp, #769]
  45739c:	cmp	w0, #0x0
  4573a0:	b.eq	457504 <argp_usage@@Base+0xe418>  // b.none
  4573a4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4573a8:	add	x0, x0, #0x770
  4573ac:	bl	404c60 <gettext@plt>
  4573b0:	mov	x4, x0
  4573b4:	ldr	x0, [sp, #656]
  4573b8:	ldr	x1, [sp, #664]
  4573bc:	ldr	x2, [sp, #672]
  4573c0:	mov	x3, x2
  4573c4:	mov	x2, x1
  4573c8:	mov	x1, x0
  4573cc:	mov	x0, x4
  4573d0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4573d4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4573d8:	add	x0, x0, #0x7b0
  4573dc:	bl	404c60 <gettext@plt>
  4573e0:	mov	x19, x0
  4573e4:	add	x2, sp, #0x460
  4573e8:	add	x1, sp, #0x228
  4573ec:	add	x0, sp, #0x520
  4573f0:	mov	w3, #0x64                  	// #100
  4573f4:	bl	455b9c <argp_usage@@Base+0xcab0>
  4573f8:	mov	x1, x0
  4573fc:	mov	x0, x19
  457400:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457404:	ldr	w0, [sp, #1288]
  457408:	cmn	w0, #0x1
  45740c:	b.eq	457430 <argp_usage@@Base+0xe344>  // b.none
  457410:	ldr	w1, [sp, #1344]
  457414:	ldr	w0, [sp, #1288]
  457418:	cmp	w1, w0
  45741c:	b.eq	457430 <argp_usage@@Base+0xe344>  // b.none
  457420:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457424:	add	x0, x0, #0x7d0
  457428:	bl	404c60 <gettext@plt>
  45742c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457430:	ldr	x0, [sp, #672]
  457434:	cmp	x0, #0x0
  457438:	b.ne	457504 <argp_usage@@Base+0xe418>  // b.any
  45743c:	ldr	w1, [sp, #1324]
  457440:	ldr	w0, [sp, #484]
  457444:	cmp	w1, w0
  457448:	b.ne	457468 <argp_usage@@Base+0xe37c>  // b.any
  45744c:	ldr	x0, [sp, #664]
  457450:	cmp	x0, #0x0
  457454:	b.ne	457504 <argp_usage@@Base+0xe418>  // b.any
  457458:	ldr	w1, [sp, #1328]
  45745c:	ldr	w0, [sp, #488]
  457460:	cmp	w1, w0
  457464:	b.eq	457504 <argp_usage@@Base+0xe418>  // b.none
  457468:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45746c:	add	x0, x0, #0x810
  457470:	bl	404c60 <gettext@plt>
  457474:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457478:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45747c:	add	x0, x0, #0x850
  457480:	bl	404c60 <gettext@plt>
  457484:	mov	x19, x0
  457488:	ldr	w0, [sp, #492]
  45748c:	add	x1, sp, #0x1d0
  457490:	bl	454d7c <argp_usage@@Base+0xbc90>
  457494:	mov	x4, x0
  457498:	ldr	w0, [sp, #488]
  45749c:	add	w0, w0, #0x1
  4574a0:	ldr	w1, [sp, #484]
  4574a4:	mov	w3, w1
  4574a8:	mov	w2, w0
  4574ac:	mov	x1, x4
  4574b0:	mov	x0, x19
  4574b4:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4574b8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4574bc:	add	x0, x0, #0x878
  4574c0:	bl	404c60 <gettext@plt>
  4574c4:	mov	x19, x0
  4574c8:	ldr	w0, [sp, #1332]
  4574cc:	add	x1, sp, #0x1d0
  4574d0:	bl	454d7c <argp_usage@@Base+0xbc90>
  4574d4:	mov	x4, x0
  4574d8:	ldr	w0, [sp, #1328]
  4574dc:	add	w0, w0, #0x1
  4574e0:	ldr	w1, [sp, #1324]
  4574e4:	mov	w3, w1
  4574e8:	mov	w2, w0
  4574ec:	mov	x1, x4
  4574f0:	mov	x0, x19
  4574f4:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4574f8:	b	457504 <argp_usage@@Base+0xe418>
  4574fc:	nop
  457500:	b	457b90 <argp_usage@@Base+0xeaa4>
  457504:	ldr	x0, [sp, #760]
  457508:	cmp	x0, #0x0
  45750c:	b.eq	457600 <argp_usage@@Base+0xe514>  // b.none
  457510:	ldr	w0, [sp, #576]
  457514:	sxtw	x0, w0
  457518:	str	x0, [sp, #456]
  45751c:	strb	wzr, [sp, #1439]
  457520:	ldr	x0, [sp, #1352]
  457524:	str	x0, [sp, #1424]
  457528:	ldr	x1, [sp, #456]
  45752c:	mov	x2, #0x0                   	// #0
  457530:	ldr	x0, [sp, #1424]
  457534:	subs	x0, x1, x0
  457538:	b.vc	457540 <argp_usage@@Base+0xe454>
  45753c:	mov	x2, #0x1                   	// #1
  457540:	str	x0, [sp, #456]
  457544:	mov	x0, x2
  457548:	and	w0, w0, #0x1
  45754c:	and	w1, w0, #0xff
  457550:	ldrb	w0, [sp, #1439]
  457554:	orr	w0, w1, w0
  457558:	and	w0, w0, #0xff
  45755c:	cmp	w0, #0x0
  457560:	cset	w0, ne  // ne = any
  457564:	strb	w0, [sp, #1439]
  457568:	ldr	x0, [sp, #456]
  45756c:	mov	x2, #0x0                   	// #0
  457570:	ldr	x1, [sp, #1544]
  457574:	subs	x0, x1, x0
  457578:	b.vc	457580 <argp_usage@@Base+0xe494>
  45757c:	mov	x2, #0x1                   	// #1
  457580:	str	x0, [sp, #448]
  457584:	mov	x0, x2
  457588:	and	w0, w0, #0x1
  45758c:	and	w1, w0, #0xff
  457590:	ldrb	w0, [sp, #1439]
  457594:	orr	w0, w1, w0
  457598:	and	w0, w0, #0xff
  45759c:	cmp	w0, #0x0
  4575a0:	cset	w0, ne  // ne = any
  4575a4:	strb	w0, [sp, #1439]
  4575a8:	ldrb	w0, [sp, #1439]
  4575ac:	cmp	w0, #0x0
  4575b0:	b.ne	4575c8 <argp_usage@@Base+0xe4dc>  // b.any
  4575b4:	ldr	x0, [sp, #448]
  4575b8:	bl	451b74 <argp_usage@@Base+0x8a88>
  4575bc:	and	w0, w0, #0xff
  4575c0:	cmp	w0, #0x0
  4575c4:	b.eq	4575f8 <argp_usage@@Base+0xe50c>  // b.none
  4575c8:	ldrb	w0, [sp, #769]
  4575cc:	cmp	w0, #0x0
  4575d0:	b.eq	457bc0 <argp_usage@@Base+0xead4>  // b.none
  4575d4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4575d8:	add	x0, x0, #0x8a0
  4575dc:	bl	404c60 <gettext@plt>
  4575e0:	mov	x2, x0
  4575e4:	ldr	w0, [sp, #576]
  4575e8:	mov	w1, w0
  4575ec:	mov	x0, x2
  4575f0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4575f4:	b	457b90 <argp_usage@@Base+0xeaa4>
  4575f8:	ldr	x0, [sp, #448]
  4575fc:	str	x0, [sp, #1544]
  457600:	ldrb	w0, [sp, #769]
  457604:	cmp	w0, #0x0
  457608:	b.eq	457648 <argp_usage@@Base+0xe55c>  // b.none
  45760c:	ldr	x0, [sp, #1544]
  457610:	str	x0, [sp, #1416]
  457614:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457618:	add	x0, x0, #0x8d0
  45761c:	bl	404c60 <gettext@plt>
  457620:	mov	x19, x0
  457624:	add	x2, sp, #0x460
  457628:	add	x1, sp, #0x228
  45762c:	add	x0, sp, #0x520
  457630:	mov	w3, #0x64                  	// #100
  457634:	bl	455b9c <argp_usage@@Base+0xcab0>
  457638:	ldr	x2, [sp, #1416]
  45763c:	mov	x1, x0
  457640:	mov	x0, x19
  457644:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457648:	ldr	x0, [sp, #648]
  45764c:	str	x0, [sp, #1408]
  457650:	ldr	w0, [sp, #704]
  457654:	sxtw	x0, w0
  457658:	ldr	x1, [sp, #1408]
  45765c:	add	x0, x1, x0
  457660:	str	x0, [sp, #1400]
  457664:	ldr	x1, [sp, #1400]
  457668:	mov	x0, #0x94b3                	// #38067
  45766c:	movk	x0, #0x26d6, lsl #16
  457670:	movk	x0, #0xbe8, lsl #32
  457674:	movk	x0, #0x112e, lsl #48
  457678:	smulh	x0, x1, x0
  45767c:	asr	x2, x0, #26
  457680:	asr	x0, x1, #63
  457684:	sub	x0, x2, x0
  457688:	mov	x2, #0xca00                	// #51712
  45768c:	movk	x2, #0x3b9a, lsl #16
  457690:	mul	x0, x0, x2
  457694:	sub	x0, x1, x0
  457698:	mov	x1, #0xca00                	// #51712
  45769c:	movk	x1, #0x3b9a, lsl #16
  4576a0:	add	x0, x0, x1
  4576a4:	mov	x1, #0x94b3                	// #38067
  4576a8:	movk	x1, #0x26d6, lsl #16
  4576ac:	movk	x1, #0xbe8, lsl #32
  4576b0:	movk	x1, #0x112e, lsl #48
  4576b4:	smulh	x1, x0, x1
  4576b8:	asr	x2, x1, #26
  4576bc:	asr	x1, x0, #63
  4576c0:	sub	x1, x2, x1
  4576c4:	mov	x2, #0xca00                	// #51712
  4576c8:	movk	x2, #0x3b9a, lsl #16
  4576cc:	mul	x1, x1, x2
  4576d0:	sub	x1, x0, x1
  4576d4:	mov	w0, w1
  4576d8:	str	w0, [sp, #1396]
  4576dc:	ldrsw	x0, [sp, #1396]
  4576e0:	ldr	x1, [sp, #1400]
  4576e4:	sub	x0, x1, x0
  4576e8:	mov	x1, #0x94b3                	// #38067
  4576ec:	movk	x1, #0x26d6, lsl #16
  4576f0:	movk	x1, #0xbe8, lsl #32
  4576f4:	movk	x1, #0x112e, lsl #48
  4576f8:	smulh	x1, x0, x1
  4576fc:	asr	x1, x1, #26
  457700:	asr	x0, x0, #63
  457704:	sub	x0, x1, x0
  457708:	str	w0, [sp, #1392]
  45770c:	ldr	x1, [sp, #680]
  457710:	mov	x2, #0x0                   	// #0
  457714:	mov	x0, #0xe10                 	// #3600
  457718:	mul	x3, x1, x0
  45771c:	smulh	x0, x1, x0
  457720:	mov	x24, x3
  457724:	mov	x25, x0
  457728:	str	x25, [sp, #128]
  45772c:	asr	x0, x25, #63
  457730:	str	x0, [sp, #136]
  457734:	asr	x0, x24, #63
  457738:	ldr	x1, [sp, #128]
  45773c:	cmp	x0, x1
  457740:	b.eq	457748 <argp_usage@@Base+0xe65c>  // b.none
  457744:	mov	x2, #0x1                   	// #1
  457748:	mov	x0, x24
  45774c:	str	x0, [sp, #440]
  457750:	mov	x0, x2
  457754:	and	w0, w0, #0x1
  457758:	and	w0, w0, #0xff
  45775c:	cmp	w0, #0x0
  457760:	b.ne	457890 <argp_usage@@Base+0xe7a4>  // b.any
  457764:	ldr	x0, [sp, #440]
  457768:	mov	x2, #0x0                   	// #0
  45776c:	ldr	x1, [sp, #1544]
  457770:	adds	x0, x1, x0
  457774:	b.vc	45777c <argp_usage@@Base+0xe690>
  457778:	mov	x2, #0x1                   	// #1
  45777c:	str	x0, [sp, #432]
  457780:	mov	x0, x2
  457784:	and	w0, w0, #0x1
  457788:	and	w0, w0, #0xff
  45778c:	cmp	w0, #0x0
  457790:	b.ne	457890 <argp_usage@@Base+0xe7a4>  // b.any
  457794:	ldr	x1, [sp, #688]
  457798:	mov	x2, #0x0                   	// #0
  45779c:	mov	x0, #0x3c                  	// #60
  4577a0:	mul	x3, x1, x0
  4577a4:	smulh	x0, x1, x0
  4577a8:	mov	x22, x3
  4577ac:	mov	x23, x0
  4577b0:	str	x23, [sp, #144]
  4577b4:	asr	x0, x23, #63
  4577b8:	str	x0, [sp, #152]
  4577bc:	asr	x0, x22, #63
  4577c0:	ldr	x1, [sp, #144]
  4577c4:	cmp	x0, x1
  4577c8:	b.eq	4577d0 <argp_usage@@Base+0xe6e4>  // b.none
  4577cc:	mov	x2, #0x1                   	// #1
  4577d0:	mov	x0, x22
  4577d4:	str	x0, [sp, #424]
  4577d8:	mov	x0, x2
  4577dc:	and	w0, w0, #0x1
  4577e0:	and	w0, w0, #0xff
  4577e4:	cmp	w0, #0x0
  4577e8:	b.ne	457890 <argp_usage@@Base+0xe7a4>  // b.any
  4577ec:	ldr	x1, [sp, #432]
  4577f0:	ldr	x0, [sp, #424]
  4577f4:	mov	x2, #0x0                   	// #0
  4577f8:	adds	x0, x1, x0
  4577fc:	b.vc	457804 <argp_usage@@Base+0xe718>
  457800:	mov	x2, #0x1                   	// #1
  457804:	str	x0, [sp, #416]
  457808:	mov	x0, x2
  45780c:	and	w0, w0, #0x1
  457810:	and	w0, w0, #0xff
  457814:	cmp	w0, #0x0
  457818:	b.ne	457890 <argp_usage@@Base+0xe7a4>  // b.any
  45781c:	ldr	x1, [sp, #416]
  457820:	ldr	x0, [sp, #696]
  457824:	mov	x2, #0x0                   	// #0
  457828:	adds	x0, x1, x0
  45782c:	b.vc	457834 <argp_usage@@Base+0xe748>
  457830:	mov	x2, #0x1                   	// #1
  457834:	str	x0, [sp, #408]
  457838:	mov	x0, x2
  45783c:	and	w0, w0, #0x1
  457840:	and	w0, w0, #0xff
  457844:	cmp	w0, #0x0
  457848:	b.ne	457890 <argp_usage@@Base+0xe7a4>  // b.any
  45784c:	ldr	x1, [sp, #408]
  457850:	ldrsw	x0, [sp, #1392]
  457854:	mov	x2, #0x0                   	// #0
  457858:	adds	x0, x1, x0
  45785c:	b.vc	457864 <argp_usage@@Base+0xe778>
  457860:	mov	x2, #0x1                   	// #1
  457864:	str	x0, [sp, #400]
  457868:	mov	x0, x2
  45786c:	and	w0, w0, #0x1
  457870:	and	w0, w0, #0xff
  457874:	cmp	w0, #0x0
  457878:	b.ne	457890 <argp_usage@@Base+0xe7a4>  // b.any
  45787c:	ldr	x0, [sp, #400]
  457880:	bl	451b74 <argp_usage@@Base+0x8a88>
  457884:	and	w0, w0, #0xff
  457888:	cmp	w0, #0x0
  45788c:	b.eq	4578b0 <argp_usage@@Base+0xe7c4>  // b.none
  457890:	ldrb	w0, [sp, #769]
  457894:	cmp	w0, #0x0
  457898:	b.eq	457bc8 <argp_usage@@Base+0xeadc>  // b.none
  45789c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4578a0:	add	x0, x0, #0x8f0
  4578a4:	bl	404c60 <gettext@plt>
  4578a8:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4578ac:	b	457b90 <argp_usage@@Base+0xeaa4>
  4578b0:	ldr	x1, [sp, #400]
  4578b4:	ldr	x0, [sp, #232]
  4578b8:	str	x1, [x0]
  4578bc:	ldrsw	x1, [sp, #1396]
  4578c0:	ldr	x0, [sp, #232]
  4578c4:	str	x1, [x0, #8]
  4578c8:	ldrb	w0, [sp, #769]
  4578cc:	cmp	w0, #0x0
  4578d0:	b.eq	4579a0 <argp_usage@@Base+0xe8b4>  // b.none
  4578d4:	ldr	x1, [sp, #680]
  4578d8:	ldr	x0, [sp, #688]
  4578dc:	orr	x1, x1, x0
  4578e0:	ldr	x0, [sp, #696]
  4578e4:	orr	x1, x1, x0
  4578e8:	ldr	w0, [sp, #704]
  4578ec:	sxtw	x0, w0
  4578f0:	orr	x0, x1, x0
  4578f4:	cmp	x0, #0x0
  4578f8:	b.eq	4579a0 <argp_usage@@Base+0xe8b4>  // b.none
  4578fc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457900:	add	x0, x0, #0x920
  457904:	bl	404c60 <gettext@plt>
  457908:	mov	x5, x0
  45790c:	ldr	x0, [sp, #680]
  457910:	ldr	x1, [sp, #688]
  457914:	ldr	x2, [sp, #696]
  457918:	ldr	w3, [sp, #704]
  45791c:	mov	w4, w3
  457920:	mov	x3, x2
  457924:	mov	x2, x1
  457928:	mov	x1, x0
  45792c:	mov	x0, x5
  457930:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457934:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457938:	add	x0, x0, #0x970
  45793c:	bl	404c60 <gettext@plt>
  457940:	mov	x2, x0
  457944:	ldr	x0, [sp, #400]
  457948:	mov	x1, x0
  45794c:	mov	x0, x2
  457950:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457954:	ldr	w0, [sp, #1344]
  457958:	cmn	w0, #0x1
  45795c:	b.eq	4579a0 <argp_usage@@Base+0xe8b4>  // b.none
  457960:	ldr	x0, [sp, #232]
  457964:	add	x1, sp, #0xf0
  457968:	mov	x2, x1
  45796c:	mov	x1, x0
  457970:	ldr	x0, [sp, #1536]
  457974:	bl	4752c4 <_obstack_memory_used@@Base+0x18184>
  457978:	cmp	x0, #0x0
  45797c:	b.eq	4579a0 <argp_usage@@Base+0xe8b4>  // b.none
  457980:	ldr	w1, [sp, #1344]
  457984:	ldr	w0, [sp, #272]
  457988:	cmp	w1, w0
  45798c:	b.eq	4579a0 <argp_usage@@Base+0xe8b4>  // b.none
  457990:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457994:	add	x0, x0, #0x998
  457998:	bl	404c60 <gettext@plt>
  45799c:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4579a0:	ldrb	w0, [sp, #769]
  4579a4:	cmp	w0, #0x0
  4579a8:	b.eq	457b5c <argp_usage@@Base+0xea70>  // b.none
  4579ac:	ldr	x0, [sp, #192]
  4579b0:	cmp	x0, #0x0
  4579b4:	b.ne	4579cc <argp_usage@@Base+0xe8e0>  // b.any
  4579b8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4579bc:	add	x0, x0, #0x9d8
  4579c0:	bl	404c60 <gettext@plt>
  4579c4:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4579c8:	b	457a0c <argp_usage@@Base+0xe920>
  4579cc:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4579d0:	add	x1, x0, #0x310
  4579d4:	ldr	x0, [sp, #192]
  4579d8:	bl	4047c0 <strcmp@plt>
  4579dc:	cmp	w0, #0x0
  4579e0:	b.ne	4579f8 <argp_usage@@Base+0xe90c>  // b.any
  4579e4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4579e8:	add	x0, x0, #0x9f8
  4579ec:	bl	404c60 <gettext@plt>
  4579f0:	bl	451b9c <argp_usage@@Base+0x8ab0>
  4579f4:	b	457a0c <argp_usage@@Base+0xe920>
  4579f8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4579fc:	add	x0, x0, #0xa18
  457a00:	bl	404c60 <gettext@plt>
  457a04:	ldr	x1, [sp, #192]
  457a08:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457a0c:	ldr	x0, [sp, #232]
  457a10:	ldr	x0, [x0]
  457a14:	str	x0, [sp, #1384]
  457a18:	ldr	x0, [sp, #232]
  457a1c:	ldr	x0, [x0, #8]
  457a20:	str	w0, [sp, #1380]
  457a24:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457a28:	add	x0, x0, #0xa40
  457a2c:	bl	404c60 <gettext@plt>
  457a30:	ldr	w2, [sp, #1380]
  457a34:	ldr	x1, [sp, #1384]
  457a38:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457a3c:	ldr	x0, [sp, #232]
  457a40:	add	x1, sp, #0xf0
  457a44:	bl	404510 <gmtime_r@plt>
  457a48:	cmp	x0, #0x0
  457a4c:	cset	w0, ne  // ne = any
  457a50:	strb	w0, [sp, #1379]
  457a54:	ldrb	w0, [sp, #1379]
  457a58:	cmp	w0, #0x0
  457a5c:	b.eq	457a94 <argp_usage@@Base+0xe9a8>  // b.none
  457a60:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457a64:	add	x0, x0, #0xa68
  457a68:	bl	404c60 <gettext@plt>
  457a6c:	mov	x19, x0
  457a70:	add	x1, sp, #0x460
  457a74:	add	x0, sp, #0xf0
  457a78:	mov	w3, #0x64                  	// #100
  457a7c:	mov	x2, x1
  457a80:	mov	x1, #0x0                   	// #0
  457a84:	bl	455b9c <argp_usage@@Base+0xcab0>
  457a88:	mov	x1, x0
  457a8c:	mov	x0, x19
  457a90:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457a94:	ldr	x0, [sp, #232]
  457a98:	add	x1, sp, #0x128
  457a9c:	mov	x2, x1
  457aa0:	mov	x1, x0
  457aa4:	ldr	x0, [sp, #1536]
  457aa8:	bl	4752c4 <_obstack_memory_used@@Base+0x18184>
  457aac:	cmp	x0, #0x0
  457ab0:	b.eq	457b5c <argp_usage@@Base+0xea70>  // b.none
  457ab4:	mov	w0, #0x1                   	// #1
  457ab8:	strb	w0, [sp, #1378]
  457abc:	ldr	x0, [sp, #336]
  457ac0:	str	x0, [sp, #1368]
  457ac4:	ldrb	w0, [sp, #1378]
  457ac8:	cmp	w0, #0x0
  457acc:	b.eq	457b28 <argp_usage@@Base+0xea3c>  // b.none
  457ad0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457ad4:	add	x0, x0, #0xa80
  457ad8:	bl	404c60 <gettext@plt>
  457adc:	mov	x19, x0
  457ae0:	add	x1, sp, #0x460
  457ae4:	add	x0, sp, #0x128
  457ae8:	mov	w3, #0x64                  	// #100
  457aec:	mov	x2, x1
  457af0:	mov	x1, #0x0                   	// #0
  457af4:	bl	455b9c <argp_usage@@Base+0xcab0>
  457af8:	mov	x20, x0
  457afc:	ldr	x0, [sp, #1368]
  457b00:	mov	w2, w0
  457b04:	add	x0, sp, #0x4c8
  457b08:	mov	x1, x0
  457b0c:	mov	w0, w2
  457b10:	bl	452444 <argp_usage@@Base+0x9358>
  457b14:	mov	x2, x0
  457b18:	mov	x1, x20
  457b1c:	mov	x0, x19
  457b20:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457b24:	b	457b5c <argp_usage@@Base+0xea70>
  457b28:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457b2c:	add	x0, x0, #0xa98
  457b30:	bl	404c60 <gettext@plt>
  457b34:	mov	x19, x0
  457b38:	add	x1, sp, #0x460
  457b3c:	add	x0, sp, #0x128
  457b40:	mov	w3, #0x64                  	// #100
  457b44:	mov	x2, x1
  457b48:	mov	x1, #0x0                   	// #0
  457b4c:	bl	455b9c <argp_usage@@Base+0xcab0>
  457b50:	mov	x1, x0
  457b54:	mov	x0, x19
  457b58:	bl	451b9c <argp_usage@@Base+0x8ab0>
  457b5c:	mov	w0, #0x1                   	// #1
  457b60:	strb	w0, [sp, #1567]
  457b64:	b	457bcc <argp_usage@@Base+0xeae0>
  457b68:	nop
  457b6c:	b	457bcc <argp_usage@@Base+0xeae0>
  457b70:	nop
  457b74:	b	457bcc <argp_usage@@Base+0xeae0>
  457b78:	nop
  457b7c:	b	457bcc <argp_usage@@Base+0xeae0>
  457b80:	nop
  457b84:	b	457bcc <argp_usage@@Base+0xeae0>
  457b88:	nop
  457b8c:	b	457bcc <argp_usage@@Base+0xeae0>
  457b90:	nop
  457b94:	b	457bcc <argp_usage@@Base+0xeae0>
  457b98:	nop
  457b9c:	b	457bcc <argp_usage@@Base+0xeae0>
  457ba0:	nop
  457ba4:	b	457bcc <argp_usage@@Base+0xeae0>
  457ba8:	nop
  457bac:	b	457bcc <argp_usage@@Base+0xeae0>
  457bb0:	nop
  457bb4:	b	457bcc <argp_usage@@Base+0xeae0>
  457bb8:	nop
  457bbc:	b	457bcc <argp_usage@@Base+0xeae0>
  457bc0:	nop
  457bc4:	b	457bcc <argp_usage@@Base+0xeae0>
  457bc8:	nop
  457bcc:	ldr	x1, [sp, #1536]
  457bd0:	ldr	x0, [sp, #200]
  457bd4:	cmp	x1, x0
  457bd8:	b.eq	457be4 <argp_usage@@Base+0xeaf8>  // b.none
  457bdc:	ldr	x0, [sp, #1536]
  457be0:	bl	475048 <_obstack_memory_used@@Base+0x17f08>
  457be4:	ldr	x0, [sp, #1552]
  457be8:	bl	404880 <free@plt>
  457bec:	ldrb	w0, [sp, #1567]
  457bf0:	ldp	x19, x20, [sp, #16]
  457bf4:	ldp	x21, x22, [sp, #32]
  457bf8:	ldp	x23, x24, [sp, #48]
  457bfc:	ldp	x25, x26, [sp, #64]
  457c00:	ldr	x27, [sp, #80]
  457c04:	ldp	x29, x30, [sp]
  457c08:	add	sp, sp, #0x620
  457c0c:	ret
  457c10:	mov	w0, #0xffffffff            	// #-1
  457c14:	ret
  457c18:	mov	w0, #0xffffffff            	// #-1
  457c1c:	ret
  457c20:	stp	x29, x30, [sp, #-48]!
  457c24:	mov	x29, sp
  457c28:	str	x0, [sp, #24]
  457c2c:	ldr	x0, [sp, #24]
  457c30:	cmp	x0, #0x0
  457c34:	b.ne	457c60 <argp_usage@@Base+0xeb74>  // b.any
  457c38:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457c3c:	add	x0, x0, #0x498
  457c40:	ldr	x0, [x0]
  457c44:	mov	x3, x0
  457c48:	mov	x2, #0x37                  	// #55
  457c4c:	mov	x1, #0x1                   	// #1
  457c50:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457c54:	add	x0, x0, #0xb80
  457c58:	bl	404970 <fwrite@plt>
  457c5c:	bl	404710 <abort@plt>
  457c60:	mov	w1, #0x2f                  	// #47
  457c64:	ldr	x0, [sp, #24]
  457c68:	bl	404670 <strrchr@plt>
  457c6c:	str	x0, [sp, #40]
  457c70:	ldr	x0, [sp, #40]
  457c74:	cmp	x0, #0x0
  457c78:	b.eq	457c88 <argp_usage@@Base+0xeb9c>  // b.none
  457c7c:	ldr	x0, [sp, #40]
  457c80:	add	x0, x0, #0x1
  457c84:	b	457c8c <argp_usage@@Base+0xeba0>
  457c88:	ldr	x0, [sp, #24]
  457c8c:	str	x0, [sp, #32]
  457c90:	ldr	x1, [sp, #32]
  457c94:	ldr	x0, [sp, #24]
  457c98:	sub	x0, x1, x0
  457c9c:	cmp	x0, #0x6
  457ca0:	b.le	457d08 <argp_usage@@Base+0xec1c>
  457ca4:	ldr	x0, [sp, #32]
  457ca8:	sub	x3, x0, #0x7
  457cac:	mov	x2, #0x7                   	// #7
  457cb0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457cb4:	add	x1, x0, #0xbb8
  457cb8:	mov	x0, x3
  457cbc:	bl	404480 <strncmp@plt>
  457cc0:	cmp	w0, #0x0
  457cc4:	b.ne	457d08 <argp_usage@@Base+0xec1c>  // b.any
  457cc8:	ldr	x0, [sp, #32]
  457ccc:	str	x0, [sp, #24]
  457cd0:	mov	x2, #0x3                   	// #3
  457cd4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  457cd8:	add	x1, x0, #0xbc0
  457cdc:	ldr	x0, [sp, #32]
  457ce0:	bl	404480 <strncmp@plt>
  457ce4:	cmp	w0, #0x0
  457ce8:	b.ne	457d08 <argp_usage@@Base+0xec1c>  // b.any
  457cec:	ldr	x0, [sp, #32]
  457cf0:	add	x0, x0, #0x3
  457cf4:	str	x0, [sp, #24]
  457cf8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457cfc:	add	x0, x0, #0x4b8
  457d00:	ldr	x1, [sp, #24]
  457d04:	str	x1, [x0]
  457d08:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457d0c:	add	x0, x0, #0xe08
  457d10:	ldr	x1, [sp, #24]
  457d14:	str	x1, [x0]
  457d18:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457d1c:	add	x0, x0, #0x490
  457d20:	ldr	x1, [sp, #24]
  457d24:	str	x1, [x0]
  457d28:	nop
  457d2c:	ldp	x29, x30, [sp], #48
  457d30:	ret
  457d34:	stp	x29, x30, [sp, #-48]!
  457d38:	mov	x29, sp
  457d3c:	str	x0, [sp, #24]
  457d40:	bl	404bc0 <__errno_location@plt>
  457d44:	ldr	w0, [x0]
  457d48:	str	w0, [sp, #44]
  457d4c:	ldr	x0, [sp, #24]
  457d50:	cmp	x0, #0x0
  457d54:	b.eq	457d60 <argp_usage@@Base+0xec74>  // b.none
  457d58:	ldr	x0, [sp, #24]
  457d5c:	b	457d68 <argp_usage@@Base+0xec7c>
  457d60:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457d64:	add	x0, x0, #0xe10
  457d68:	mov	x1, #0x38                  	// #56
  457d6c:	bl	45b82c <argp_usage@@Base+0x12740>
  457d70:	str	x0, [sp, #32]
  457d74:	bl	404bc0 <__errno_location@plt>
  457d78:	mov	x1, x0
  457d7c:	ldr	w0, [sp, #44]
  457d80:	str	w0, [x1]
  457d84:	ldr	x0, [sp, #32]
  457d88:	ldp	x29, x30, [sp], #48
  457d8c:	ret
  457d90:	sub	sp, sp, #0x10
  457d94:	str	x0, [sp, #8]
  457d98:	ldr	x0, [sp, #8]
  457d9c:	cmp	x0, #0x0
  457da0:	b.eq	457dac <argp_usage@@Base+0xecc0>  // b.none
  457da4:	ldr	x0, [sp, #8]
  457da8:	b	457db4 <argp_usage@@Base+0xecc8>
  457dac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457db0:	add	x0, x0, #0xe10
  457db4:	ldr	w0, [x0]
  457db8:	add	sp, sp, #0x10
  457dbc:	ret
  457dc0:	sub	sp, sp, #0x10
  457dc4:	str	x0, [sp, #8]
  457dc8:	str	w1, [sp, #4]
  457dcc:	ldr	x0, [sp, #8]
  457dd0:	cmp	x0, #0x0
  457dd4:	b.eq	457de0 <argp_usage@@Base+0xecf4>  // b.none
  457dd8:	ldr	x0, [sp, #8]
  457ddc:	b	457de8 <argp_usage@@Base+0xecfc>
  457de0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457de4:	add	x0, x0, #0xe10
  457de8:	ldr	w1, [sp, #4]
  457dec:	str	w1, [x0]
  457df0:	nop
  457df4:	add	sp, sp, #0x10
  457df8:	ret
  457dfc:	sub	sp, sp, #0x30
  457e00:	str	x0, [sp, #8]
  457e04:	strb	w1, [sp, #7]
  457e08:	str	w2, [sp]
  457e0c:	ldrb	w0, [sp, #7]
  457e10:	strb	w0, [sp, #47]
  457e14:	ldr	x0, [sp, #8]
  457e18:	cmp	x0, #0x0
  457e1c:	b.eq	457e28 <argp_usage@@Base+0xed3c>  // b.none
  457e20:	ldr	x0, [sp, #8]
  457e24:	b	457e30 <argp_usage@@Base+0xed44>
  457e28:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457e2c:	add	x0, x0, #0xe10
  457e30:	add	x1, x0, #0x8
  457e34:	ldrb	w0, [sp, #47]
  457e38:	lsr	w0, w0, #5
  457e3c:	and	w0, w0, #0xff
  457e40:	and	x0, x0, #0xff
  457e44:	lsl	x0, x0, #2
  457e48:	add	x0, x1, x0
  457e4c:	str	x0, [sp, #32]
  457e50:	ldrb	w0, [sp, #47]
  457e54:	and	w0, w0, #0x1f
  457e58:	str	w0, [sp, #28]
  457e5c:	ldr	x0, [sp, #32]
  457e60:	ldr	w1, [x0]
  457e64:	ldr	w0, [sp, #28]
  457e68:	lsr	w0, w1, w0
  457e6c:	and	w0, w0, #0x1
  457e70:	str	w0, [sp, #24]
  457e74:	ldr	x0, [sp, #32]
  457e78:	ldr	w0, [x0]
  457e7c:	ldr	w1, [sp]
  457e80:	and	w2, w1, #0x1
  457e84:	ldr	w1, [sp, #24]
  457e88:	eor	w2, w2, w1
  457e8c:	ldr	w1, [sp, #28]
  457e90:	lsl	w1, w2, w1
  457e94:	eor	w1, w0, w1
  457e98:	ldr	x0, [sp, #32]
  457e9c:	str	w1, [x0]
  457ea0:	ldr	w0, [sp, #24]
  457ea4:	add	sp, sp, #0x30
  457ea8:	ret
  457eac:	sub	sp, sp, #0x20
  457eb0:	str	x0, [sp, #8]
  457eb4:	str	w1, [sp, #4]
  457eb8:	ldr	x0, [sp, #8]
  457ebc:	cmp	x0, #0x0
  457ec0:	b.ne	457ed0 <argp_usage@@Base+0xede4>  // b.any
  457ec4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457ec8:	add	x0, x0, #0xe10
  457ecc:	str	x0, [sp, #8]
  457ed0:	ldr	x0, [sp, #8]
  457ed4:	ldr	w0, [x0, #4]
  457ed8:	str	w0, [sp, #28]
  457edc:	ldr	x0, [sp, #8]
  457ee0:	ldr	w1, [sp, #4]
  457ee4:	str	w1, [x0, #4]
  457ee8:	ldr	w0, [sp, #28]
  457eec:	add	sp, sp, #0x20
  457ef0:	ret
  457ef4:	stp	x29, x30, [sp, #-48]!
  457ef8:	mov	x29, sp
  457efc:	str	x0, [sp, #40]
  457f00:	str	x1, [sp, #32]
  457f04:	str	x2, [sp, #24]
  457f08:	ldr	x0, [sp, #40]
  457f0c:	cmp	x0, #0x0
  457f10:	b.ne	457f20 <argp_usage@@Base+0xee34>  // b.any
  457f14:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  457f18:	add	x0, x0, #0xe10
  457f1c:	str	x0, [sp, #40]
  457f20:	ldr	x0, [sp, #40]
  457f24:	mov	w1, #0xa                   	// #10
  457f28:	str	w1, [x0]
  457f2c:	ldr	x0, [sp, #32]
  457f30:	cmp	x0, #0x0
  457f34:	b.eq	457f44 <argp_usage@@Base+0xee58>  // b.none
  457f38:	ldr	x0, [sp, #24]
  457f3c:	cmp	x0, #0x0
  457f40:	b.ne	457f48 <argp_usage@@Base+0xee5c>  // b.any
  457f44:	bl	404710 <abort@plt>
  457f48:	ldr	x0, [sp, #40]
  457f4c:	ldr	x1, [sp, #32]
  457f50:	str	x1, [x0, #40]
  457f54:	ldr	x0, [sp, #40]
  457f58:	ldr	x1, [sp, #24]
  457f5c:	str	x1, [x0, #48]
  457f60:	nop
  457f64:	ldp	x29, x30, [sp], #48
  457f68:	ret
  457f6c:	stp	x29, x30, [sp, #-96]!
  457f70:	mov	x29, sp
  457f74:	mov	x1, x8
  457f78:	str	w0, [sp, #28]
  457f7c:	stp	xzr, xzr, [sp, #40]
  457f80:	stp	xzr, xzr, [sp, #56]
  457f84:	stp	xzr, xzr, [sp, #72]
  457f88:	str	xzr, [sp, #88]
  457f8c:	ldr	w0, [sp, #28]
  457f90:	cmp	w0, #0xa
  457f94:	b.ne	457f9c <argp_usage@@Base+0xeeb0>  // b.any
  457f98:	bl	404710 <abort@plt>
  457f9c:	ldr	w0, [sp, #28]
  457fa0:	str	w0, [sp, #40]
  457fa4:	add	x0, sp, #0x28
  457fa8:	ldp	x2, x3, [x0]
  457fac:	stp	x2, x3, [x1]
  457fb0:	ldp	x2, x3, [x0, #16]
  457fb4:	stp	x2, x3, [x1, #16]
  457fb8:	ldp	x2, x3, [x0, #32]
  457fbc:	stp	x2, x3, [x1, #32]
  457fc0:	ldr	x0, [x0, #48]
  457fc4:	str	x0, [x1, #48]
  457fc8:	ldp	x29, x30, [sp], #96
  457fcc:	ret
  457fd0:	stp	x29, x30, [sp, #-48]!
  457fd4:	mov	x29, sp
  457fd8:	str	x0, [sp, #24]
  457fdc:	str	w1, [sp, #20]
  457fe0:	ldr	x0, [sp, #24]
  457fe4:	bl	404c60 <gettext@plt>
  457fe8:	str	x0, [sp, #40]
  457fec:	ldr	x1, [sp, #40]
  457ff0:	ldr	x0, [sp, #24]
  457ff4:	cmp	x1, x0
  457ff8:	b.eq	458004 <argp_usage@@Base+0xef18>  // b.none
  457ffc:	ldr	x0, [sp, #40]
  458000:	b	4580ac <argp_usage@@Base+0xefc0>
  458004:	bl	450a20 <argp_usage@@Base+0x7934>
  458008:	str	x0, [sp, #32]
  45800c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458010:	add	x1, x0, #0xcb8
  458014:	ldr	x0, [sp, #32]
  458018:	bl	476a8c <_obstack_memory_used@@Base+0x1994c>
  45801c:	cmp	w0, #0x0
  458020:	b.ne	45804c <argp_usage@@Base+0xef60>  // b.any
  458024:	ldr	x0, [sp, #24]
  458028:	ldrb	w0, [x0]
  45802c:	cmp	w0, #0x60
  458030:	b.ne	458040 <argp_usage@@Base+0xef54>  // b.any
  458034:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458038:	add	x0, x0, #0xcc0
  45803c:	b	4580ac <argp_usage@@Base+0xefc0>
  458040:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458044:	add	x0, x0, #0xcc8
  458048:	b	4580ac <argp_usage@@Base+0xefc0>
  45804c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458050:	add	x1, x0, #0xcd0
  458054:	ldr	x0, [sp, #32]
  458058:	bl	476a8c <_obstack_memory_used@@Base+0x1994c>
  45805c:	cmp	w0, #0x0
  458060:	b.ne	45808c <argp_usage@@Base+0xefa0>  // b.any
  458064:	ldr	x0, [sp, #24]
  458068:	ldrb	w0, [x0]
  45806c:	cmp	w0, #0x60
  458070:	b.ne	458080 <argp_usage@@Base+0xef94>  // b.any
  458074:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458078:	add	x0, x0, #0xcd8
  45807c:	b	4580ac <argp_usage@@Base+0xefc0>
  458080:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458084:	add	x0, x0, #0xce0
  458088:	b	4580ac <argp_usage@@Base+0xefc0>
  45808c:	ldr	w0, [sp, #20]
  458090:	cmp	w0, #0x9
  458094:	b.ne	4580a4 <argp_usage@@Base+0xefb8>  // b.any
  458098:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45809c:	add	x0, x0, #0xce8
  4580a0:	b	4580ac <argp_usage@@Base+0xefc0>
  4580a4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4580a8:	add	x0, x0, #0xcf0
  4580ac:	ldp	x29, x30, [sp], #48
  4580b0:	ret
  4580b4:	sub	sp, sp, #0xf0
  4580b8:	stp	x29, x30, [sp, #16]
  4580bc:	add	x29, sp, #0x10
  4580c0:	str	x19, [sp, #32]
  4580c4:	str	x0, [sp, #104]
  4580c8:	str	x1, [sp, #96]
  4580cc:	str	x2, [sp, #88]
  4580d0:	str	x3, [sp, #80]
  4580d4:	str	w4, [sp, #76]
  4580d8:	str	w5, [sp, #72]
  4580dc:	str	x6, [sp, #64]
  4580e0:	str	x7, [sp, #56]
  4580e4:	str	xzr, [sp, #224]
  4580e8:	str	xzr, [sp, #216]
  4580ec:	str	xzr, [sp, #208]
  4580f0:	str	xzr, [sp, #200]
  4580f4:	strb	wzr, [sp, #199]
  4580f8:	bl	4048a0 <__ctype_get_mb_cur_max@plt>
  4580fc:	cmp	x0, #0x1
  458100:	cset	w0, eq  // eq = none
  458104:	strb	w0, [sp, #159]
  458108:	ldr	w0, [sp, #72]
  45810c:	and	w0, w0, #0x2
  458110:	cmp	w0, #0x0
  458114:	cset	w0, ne  // ne = any
  458118:	strb	w0, [sp, #198]
  45811c:	strb	wzr, [sp, #197]
  458120:	strb	wzr, [sp, #196]
  458124:	mov	w0, #0x1                   	// #1
  458128:	strb	w0, [sp, #195]
  45812c:	ldr	w0, [sp, #76]
  458130:	cmp	w0, #0xa
  458134:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  458138:	ldr	w0, [sp, #76]
  45813c:	cmp	w0, #0x8
  458140:	b.cs	458274 <argp_usage@@Base+0xf188>  // b.hs, b.nlast
  458144:	ldr	w0, [sp, #76]
  458148:	cmp	w0, #0x7
  45814c:	b.eq	458264 <argp_usage@@Base+0xf178>  // b.none
  458150:	ldr	w0, [sp, #76]
  458154:	cmp	w0, #0x7
  458158:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  45815c:	ldr	w0, [sp, #76]
  458160:	cmp	w0, #0x6
  458164:	b.eq	4581f0 <argp_usage@@Base+0xf104>  // b.none
  458168:	ldr	w0, [sp, #76]
  45816c:	cmp	w0, #0x6
  458170:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  458174:	ldr	w0, [sp, #76]
  458178:	cmp	w0, #0x5
  45817c:	b.eq	458200 <argp_usage@@Base+0xf114>  // b.none
  458180:	ldr	w0, [sp, #76]
  458184:	cmp	w0, #0x5
  458188:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  45818c:	ldr	w0, [sp, #76]
  458190:	cmp	w0, #0x4
  458194:	b.eq	458348 <argp_usage@@Base+0xf25c>  // b.none
  458198:	ldr	w0, [sp, #76]
  45819c:	cmp	w0, #0x4
  4581a0:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  4581a4:	ldr	w0, [sp, #76]
  4581a8:	cmp	w0, #0x3
  4581ac:	b.eq	458338 <argp_usage@@Base+0xf24c>  // b.none
  4581b0:	ldr	w0, [sp, #76]
  4581b4:	cmp	w0, #0x3
  4581b8:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  4581bc:	ldr	w0, [sp, #76]
  4581c0:	cmp	w0, #0x2
  4581c4:	b.eq	458364 <argp_usage@@Base+0xf278>  // b.none
  4581c8:	ldr	w0, [sp, #76]
  4581cc:	cmp	w0, #0x2
  4581d0:	b.hi	4583d0 <argp_usage@@Base+0xf2e4>  // b.pmore
  4581d4:	ldr	w0, [sp, #76]
  4581d8:	cmp	w0, #0x0
  4581dc:	b.eq	4583c8 <argp_usage@@Base+0xf2dc>  // b.none
  4581e0:	ldr	w0, [sp, #76]
  4581e4:	cmp	w0, #0x1
  4581e8:	b.eq	458340 <argp_usage@@Base+0xf254>  // b.none
  4581ec:	b	4583d0 <argp_usage@@Base+0xf2e4>
  4581f0:	mov	w0, #0x5                   	// #5
  4581f4:	str	w0, [sp, #76]
  4581f8:	mov	w0, #0x1                   	// #1
  4581fc:	strb	w0, [sp, #198]
  458200:	ldrb	w0, [sp, #198]
  458204:	eor	w0, w0, #0x1
  458208:	and	w0, w0, #0xff
  45820c:	cmp	w0, #0x0
  458210:	b.eq	458244 <argp_usage@@Base+0xf158>  // b.none
  458214:	ldr	x1, [sp, #224]
  458218:	ldr	x0, [sp, #96]
  45821c:	cmp	x1, x0
  458220:	b.cs	458238 <argp_usage@@Base+0xf14c>  // b.hs, b.nlast
  458224:	ldr	x1, [sp, #104]
  458228:	ldr	x0, [sp, #224]
  45822c:	add	x0, x1, x0
  458230:	mov	w1, #0x22                  	// #34
  458234:	strb	w1, [x0]
  458238:	ldr	x0, [sp, #224]
  45823c:	add	x0, x0, #0x1
  458240:	str	x0, [sp, #224]
  458244:	mov	w0, #0x1                   	// #1
  458248:	strb	w0, [sp, #199]
  45824c:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458250:	add	x0, x0, #0xce8
  458254:	str	x0, [sp, #208]
  458258:	mov	x0, #0x1                   	// #1
  45825c:	str	x0, [sp, #200]
  458260:	b	4583d4 <argp_usage@@Base+0xf2e8>
  458264:	mov	w0, #0x1                   	// #1
  458268:	strb	w0, [sp, #199]
  45826c:	strb	wzr, [sp, #198]
  458270:	b	4583d4 <argp_usage@@Base+0xf2e8>
  458274:	ldr	w0, [sp, #76]
  458278:	cmp	w0, #0xa
  45827c:	b.eq	4582a8 <argp_usage@@Base+0xf1bc>  // b.none
  458280:	ldr	w1, [sp, #76]
  458284:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  458288:	add	x0, x0, #0xcf8
  45828c:	bl	457fd0 <argp_usage@@Base+0xeee4>
  458290:	str	x0, [sp, #56]
  458294:	ldr	w1, [sp, #76]
  458298:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45829c:	add	x0, x0, #0xcf0
  4582a0:	bl	457fd0 <argp_usage@@Base+0xeee4>
  4582a4:	str	x0, [sp, #240]
  4582a8:	ldrb	w0, [sp, #198]
  4582ac:	eor	w0, w0, #0x1
  4582b0:	and	w0, w0, #0xff
  4582b4:	cmp	w0, #0x0
  4582b8:	b.eq	458318 <argp_usage@@Base+0xf22c>  // b.none
  4582bc:	ldr	x0, [sp, #56]
  4582c0:	str	x0, [sp, #208]
  4582c4:	b	458308 <argp_usage@@Base+0xf21c>
  4582c8:	ldr	x1, [sp, #224]
  4582cc:	ldr	x0, [sp, #96]
  4582d0:	cmp	x1, x0
  4582d4:	b.cs	4582f0 <argp_usage@@Base+0xf204>  // b.hs, b.nlast
  4582d8:	ldr	x1, [sp, #104]
  4582dc:	ldr	x0, [sp, #224]
  4582e0:	add	x0, x1, x0
  4582e4:	ldr	x1, [sp, #208]
  4582e8:	ldrb	w1, [x1]
  4582ec:	strb	w1, [x0]
  4582f0:	ldr	x0, [sp, #224]
  4582f4:	add	x0, x0, #0x1
  4582f8:	str	x0, [sp, #224]
  4582fc:	ldr	x0, [sp, #208]
  458300:	add	x0, x0, #0x1
  458304:	str	x0, [sp, #208]
  458308:	ldr	x0, [sp, #208]
  45830c:	ldrb	w0, [x0]
  458310:	cmp	w0, #0x0
  458314:	b.ne	4582c8 <argp_usage@@Base+0xf1dc>  // b.any
  458318:	mov	w0, #0x1                   	// #1
  45831c:	strb	w0, [sp, #199]
  458320:	ldr	x0, [sp, #240]
  458324:	str	x0, [sp, #208]
  458328:	ldr	x0, [sp, #208]
  45832c:	bl	4040b0 <strlen@plt>
  458330:	str	x0, [sp, #200]
  458334:	b	4583d4 <argp_usage@@Base+0xf2e8>
  458338:	mov	w0, #0x1                   	// #1
  45833c:	strb	w0, [sp, #199]
  458340:	mov	w0, #0x1                   	// #1
  458344:	strb	w0, [sp, #198]
  458348:	ldrb	w0, [sp, #198]
  45834c:	eor	w0, w0, #0x1
  458350:	and	w0, w0, #0xff
  458354:	cmp	w0, #0x0
  458358:	b.eq	458364 <argp_usage@@Base+0xf278>  // b.none
  45835c:	mov	w0, #0x1                   	// #1
  458360:	strb	w0, [sp, #199]
  458364:	mov	w0, #0x2                   	// #2
  458368:	str	w0, [sp, #76]
  45836c:	ldrb	w0, [sp, #198]
  458370:	eor	w0, w0, #0x1
  458374:	and	w0, w0, #0xff
  458378:	cmp	w0, #0x0
  45837c:	b.eq	4583b0 <argp_usage@@Base+0xf2c4>  // b.none
  458380:	ldr	x1, [sp, #224]
  458384:	ldr	x0, [sp, #96]
  458388:	cmp	x1, x0
  45838c:	b.cs	4583a4 <argp_usage@@Base+0xf2b8>  // b.hs, b.nlast
  458390:	ldr	x1, [sp, #104]
  458394:	ldr	x0, [sp, #224]
  458398:	add	x0, x1, x0
  45839c:	mov	w1, #0x27                  	// #39
  4583a0:	strb	w1, [x0]
  4583a4:	ldr	x0, [sp, #224]
  4583a8:	add	x0, x0, #0x1
  4583ac:	str	x0, [sp, #224]
  4583b0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4583b4:	add	x0, x0, #0xcf0
  4583b8:	str	x0, [sp, #208]
  4583bc:	mov	x0, #0x1                   	// #1
  4583c0:	str	x0, [sp, #200]
  4583c4:	b	4583d4 <argp_usage@@Base+0xf2e8>
  4583c8:	strb	wzr, [sp, #198]
  4583cc:	b	4583d4 <argp_usage@@Base+0xf2e8>
  4583d0:	bl	404710 <abort@plt>
  4583d4:	str	xzr, [sp, #232]
  4583d8:	b	459290 <argp_usage@@Base+0x101a4>
  4583dc:	strb	wzr, [sp, #192]
  4583e0:	strb	wzr, [sp, #191]
  4583e4:	strb	wzr, [sp, #190]
  4583e8:	ldrb	w0, [sp, #199]
  4583ec:	cmp	w0, #0x0
  4583f0:	b.eq	458484 <argp_usage@@Base+0xf398>  // b.none
  4583f4:	ldr	w0, [sp, #76]
  4583f8:	cmp	w0, #0x2
  4583fc:	b.eq	458484 <argp_usage@@Base+0xf398>  // b.none
  458400:	ldr	x0, [sp, #200]
  458404:	cmp	x0, #0x0
  458408:	b.eq	458484 <argp_usage@@Base+0xf398>  // b.none
  45840c:	ldr	x1, [sp, #232]
  458410:	ldr	x0, [sp, #200]
  458414:	add	x19, x1, x0
  458418:	ldr	x0, [sp, #80]
  45841c:	cmn	x0, #0x1
  458420:	b.ne	458444 <argp_usage@@Base+0xf358>  // b.any
  458424:	ldr	x0, [sp, #200]
  458428:	cmp	x0, #0x1
  45842c:	b.ls	458444 <argp_usage@@Base+0xf358>  // b.plast
  458430:	ldr	x0, [sp, #88]
  458434:	bl	4040b0 <strlen@plt>
  458438:	str	x0, [sp, #80]
  45843c:	ldr	x0, [sp, #80]
  458440:	b	458448 <argp_usage@@Base+0xf35c>
  458444:	ldr	x0, [sp, #80]
  458448:	cmp	x0, x19
  45844c:	b.cc	458484 <argp_usage@@Base+0xf398>  // b.lo, b.ul, b.last
  458450:	ldr	x1, [sp, #88]
  458454:	ldr	x0, [sp, #232]
  458458:	add	x0, x1, x0
  45845c:	ldr	x2, [sp, #200]
  458460:	ldr	x1, [sp, #208]
  458464:	bl	404790 <memcmp@plt>
  458468:	cmp	w0, #0x0
  45846c:	b.ne	458484 <argp_usage@@Base+0xf398>  // b.any
  458470:	ldrb	w0, [sp, #198]
  458474:	cmp	w0, #0x0
  458478:	b.ne	459428 <argp_usage@@Base+0x1033c>  // b.any
  45847c:	mov	w0, #0x1                   	// #1
  458480:	strb	w0, [sp, #192]
  458484:	ldr	x1, [sp, #88]
  458488:	ldr	x0, [sp, #232]
  45848c:	add	x0, x1, x0
  458490:	ldrb	w0, [x0]
  458494:	strb	w0, [sp, #194]
  458498:	ldrb	w0, [sp, #194]
  45849c:	cmp	w0, #0x7e
  4584a0:	b.hi	458a98 <argp_usage@@Base+0xf9ac>  // b.pmore
  4584a4:	adrp	x1, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  4584a8:	add	x1, x1, #0xcfc
  4584ac:	ldr	w0, [x1, w0, uxtw #2]
  4584b0:	adr	x1, 4584bc <argp_usage@@Base+0xf3d0>
  4584b4:	add	x0, x1, w0, sxtw #2
  4584b8:	br	x0
  4584bc:	ldrb	w0, [sp, #199]
  4584c0:	cmp	w0, #0x0
  4584c4:	b.eq	458688 <argp_usage@@Base+0xf59c>  // b.none
  4584c8:	ldrb	w0, [sp, #198]
  4584cc:	cmp	w0, #0x0
  4584d0:	b.ne	459430 <argp_usage@@Base+0x10344>  // b.any
  4584d4:	mov	w0, #0x1                   	// #1
  4584d8:	strb	w0, [sp, #191]
  4584dc:	ldr	w0, [sp, #76]
  4584e0:	cmp	w0, #0x2
  4584e4:	b.ne	458594 <argp_usage@@Base+0xf4a8>  // b.any
  4584e8:	ldrb	w0, [sp, #197]
  4584ec:	eor	w0, w0, #0x1
  4584f0:	and	w0, w0, #0xff
  4584f4:	cmp	w0, #0x0
  4584f8:	b.eq	458594 <argp_usage@@Base+0xf4a8>  // b.none
  4584fc:	ldr	x1, [sp, #224]
  458500:	ldr	x0, [sp, #96]
  458504:	cmp	x1, x0
  458508:	b.cs	458520 <argp_usage@@Base+0xf434>  // b.hs, b.nlast
  45850c:	ldr	x1, [sp, #104]
  458510:	ldr	x0, [sp, #224]
  458514:	add	x0, x1, x0
  458518:	mov	w1, #0x27                  	// #39
  45851c:	strb	w1, [x0]
  458520:	ldr	x0, [sp, #224]
  458524:	add	x0, x0, #0x1
  458528:	str	x0, [sp, #224]
  45852c:	ldr	x1, [sp, #224]
  458530:	ldr	x0, [sp, #96]
  458534:	cmp	x1, x0
  458538:	b.cs	458550 <argp_usage@@Base+0xf464>  // b.hs, b.nlast
  45853c:	ldr	x1, [sp, #104]
  458540:	ldr	x0, [sp, #224]
  458544:	add	x0, x1, x0
  458548:	mov	w1, #0x24                  	// #36
  45854c:	strb	w1, [x0]
  458550:	ldr	x0, [sp, #224]
  458554:	add	x0, x0, #0x1
  458558:	str	x0, [sp, #224]
  45855c:	ldr	x1, [sp, #224]
  458560:	ldr	x0, [sp, #96]
  458564:	cmp	x1, x0
  458568:	b.cs	458580 <argp_usage@@Base+0xf494>  // b.hs, b.nlast
  45856c:	ldr	x1, [sp, #104]
  458570:	ldr	x0, [sp, #224]
  458574:	add	x0, x1, x0
  458578:	mov	w1, #0x27                  	// #39
  45857c:	strb	w1, [x0]
  458580:	ldr	x0, [sp, #224]
  458584:	add	x0, x0, #0x1
  458588:	str	x0, [sp, #224]
  45858c:	mov	w0, #0x1                   	// #1
  458590:	strb	w0, [sp, #197]
  458594:	ldr	x1, [sp, #224]
  458598:	ldr	x0, [sp, #96]
  45859c:	cmp	x1, x0
  4585a0:	b.cs	4585b8 <argp_usage@@Base+0xf4cc>  // b.hs, b.nlast
  4585a4:	ldr	x1, [sp, #104]
  4585a8:	ldr	x0, [sp, #224]
  4585ac:	add	x0, x1, x0
  4585b0:	mov	w1, #0x5c                  	// #92
  4585b4:	strb	w1, [x0]
  4585b8:	ldr	x0, [sp, #224]
  4585bc:	add	x0, x0, #0x1
  4585c0:	str	x0, [sp, #224]
  4585c4:	ldr	w0, [sp, #76]
  4585c8:	cmp	w0, #0x2
  4585cc:	b.eq	45867c <argp_usage@@Base+0xf590>  // b.none
  4585d0:	ldr	x0, [sp, #232]
  4585d4:	add	x0, x0, #0x1
  4585d8:	ldr	x1, [sp, #80]
  4585dc:	cmp	x1, x0
  4585e0:	b.ls	45867c <argp_usage@@Base+0xf590>  // b.plast
  4585e4:	ldr	x0, [sp, #232]
  4585e8:	add	x0, x0, #0x1
  4585ec:	ldr	x1, [sp, #88]
  4585f0:	add	x0, x1, x0
  4585f4:	ldrb	w0, [x0]
  4585f8:	cmp	w0, #0x2f
  4585fc:	b.ls	45867c <argp_usage@@Base+0xf590>  // b.plast
  458600:	ldr	x0, [sp, #232]
  458604:	add	x0, x0, #0x1
  458608:	ldr	x1, [sp, #88]
  45860c:	add	x0, x1, x0
  458610:	ldrb	w0, [x0]
  458614:	cmp	w0, #0x39
  458618:	b.hi	45867c <argp_usage@@Base+0xf590>  // b.pmore
  45861c:	ldr	x1, [sp, #224]
  458620:	ldr	x0, [sp, #96]
  458624:	cmp	x1, x0
  458628:	b.cs	458640 <argp_usage@@Base+0xf554>  // b.hs, b.nlast
  45862c:	ldr	x1, [sp, #104]
  458630:	ldr	x0, [sp, #224]
  458634:	add	x0, x1, x0
  458638:	mov	w1, #0x30                  	// #48
  45863c:	strb	w1, [x0]
  458640:	ldr	x0, [sp, #224]
  458644:	add	x0, x0, #0x1
  458648:	str	x0, [sp, #224]
  45864c:	ldr	x1, [sp, #224]
  458650:	ldr	x0, [sp, #96]
  458654:	cmp	x1, x0
  458658:	b.cs	458670 <argp_usage@@Base+0xf584>  // b.hs, b.nlast
  45865c:	ldr	x1, [sp, #104]
  458660:	ldr	x0, [sp, #224]
  458664:	add	x0, x1, x0
  458668:	mov	w1, #0x30                  	// #48
  45866c:	strb	w1, [x0]
  458670:	ldr	x0, [sp, #224]
  458674:	add	x0, x0, #0x1
  458678:	str	x0, [sp, #224]
  45867c:	mov	w0, #0x30                  	// #48
  458680:	strb	w0, [sp, #194]
  458684:	b	458fe8 <argp_usage@@Base+0xfefc>
  458688:	ldr	w0, [sp, #72]
  45868c:	and	w0, w0, #0x1
  458690:	cmp	w0, #0x0
  458694:	b.eq	458fe8 <argp_usage@@Base+0xfefc>  // b.none
  458698:	b	459284 <argp_usage@@Base+0x10198>
  45869c:	ldr	w0, [sp, #76]
  4586a0:	cmp	w0, #0x2
  4586a4:	b.eq	4586b8 <argp_usage@@Base+0xf5cc>  // b.none
  4586a8:	ldr	w0, [sp, #76]
  4586ac:	cmp	w0, #0x5
  4586b0:	b.eq	4586c8 <argp_usage@@Base+0xf5dc>  // b.none
  4586b4:	b	458860 <argp_usage@@Base+0xf774>
  4586b8:	ldrb	w0, [sp, #198]
  4586bc:	cmp	w0, #0x0
  4586c0:	b.eq	458854 <argp_usage@@Base+0xf768>  // b.none
  4586c4:	b	459464 <argp_usage@@Base+0x10378>
  4586c8:	ldr	w0, [sp, #72]
  4586cc:	and	w0, w0, #0x4
  4586d0:	cmp	w0, #0x0
  4586d4:	b.eq	45885c <argp_usage@@Base+0xf770>  // b.none
  4586d8:	ldr	x0, [sp, #232]
  4586dc:	add	x0, x0, #0x2
  4586e0:	ldr	x1, [sp, #80]
  4586e4:	cmp	x1, x0
  4586e8:	b.ls	45885c <argp_usage@@Base+0xf770>  // b.plast
  4586ec:	ldr	x0, [sp, #232]
  4586f0:	add	x0, x0, #0x1
  4586f4:	ldr	x1, [sp, #88]
  4586f8:	add	x0, x1, x0
  4586fc:	ldrb	w0, [x0]
  458700:	cmp	w0, #0x3f
  458704:	b.ne	45885c <argp_usage@@Base+0xf770>  // b.any
  458708:	ldr	x0, [sp, #232]
  45870c:	add	x0, x0, #0x2
  458710:	ldr	x1, [sp, #88]
  458714:	add	x0, x1, x0
  458718:	ldrb	w0, [x0]
  45871c:	cmp	w0, #0x3e
  458720:	cset	w1, hi  // hi = pmore
  458724:	and	w1, w1, #0xff
  458728:	cmp	w1, #0x0
  45872c:	b.ne	45884c <argp_usage@@Base+0xf760>  // b.any
  458730:	mov	x1, #0x1                   	// #1
  458734:	lsl	x1, x1, x0
  458738:	mov	x0, #0xa38200000000        	// #179778741075968
  45873c:	movk	x0, #0x7000, lsl #48
  458740:	and	x0, x1, x0
  458744:	cmp	x0, #0x0
  458748:	cset	w0, ne  // ne = any
  45874c:	and	w0, w0, #0xff
  458750:	cmp	w0, #0x0
  458754:	b.eq	45884c <argp_usage@@Base+0xf760>  // b.none
  458758:	ldrb	w0, [sp, #198]
  45875c:	cmp	w0, #0x0
  458760:	b.ne	459438 <argp_usage@@Base+0x1034c>  // b.any
  458764:	ldr	x0, [sp, #232]
  458768:	add	x0, x0, #0x2
  45876c:	ldr	x1, [sp, #88]
  458770:	add	x0, x1, x0
  458774:	ldrb	w0, [x0]
  458778:	strb	w0, [sp, #194]
  45877c:	ldr	x0, [sp, #232]
  458780:	add	x0, x0, #0x2
  458784:	str	x0, [sp, #232]
  458788:	ldr	x1, [sp, #224]
  45878c:	ldr	x0, [sp, #96]
  458790:	cmp	x1, x0
  458794:	b.cs	4587ac <argp_usage@@Base+0xf6c0>  // b.hs, b.nlast
  458798:	ldr	x1, [sp, #104]
  45879c:	ldr	x0, [sp, #224]
  4587a0:	add	x0, x1, x0
  4587a4:	mov	w1, #0x3f                  	// #63
  4587a8:	strb	w1, [x0]
  4587ac:	ldr	x0, [sp, #224]
  4587b0:	add	x0, x0, #0x1
  4587b4:	str	x0, [sp, #224]
  4587b8:	ldr	x1, [sp, #224]
  4587bc:	ldr	x0, [sp, #96]
  4587c0:	cmp	x1, x0
  4587c4:	b.cs	4587dc <argp_usage@@Base+0xf6f0>  // b.hs, b.nlast
  4587c8:	ldr	x1, [sp, #104]
  4587cc:	ldr	x0, [sp, #224]
  4587d0:	add	x0, x1, x0
  4587d4:	mov	w1, #0x22                  	// #34
  4587d8:	strb	w1, [x0]
  4587dc:	ldr	x0, [sp, #224]
  4587e0:	add	x0, x0, #0x1
  4587e4:	str	x0, [sp, #224]
  4587e8:	ldr	x1, [sp, #224]
  4587ec:	ldr	x0, [sp, #96]
  4587f0:	cmp	x1, x0
  4587f4:	b.cs	45880c <argp_usage@@Base+0xf720>  // b.hs, b.nlast
  4587f8:	ldr	x1, [sp, #104]
  4587fc:	ldr	x0, [sp, #224]
  458800:	add	x0, x1, x0
  458804:	mov	w1, #0x22                  	// #34
  458808:	strb	w1, [x0]
  45880c:	ldr	x0, [sp, #224]
  458810:	add	x0, x0, #0x1
  458814:	str	x0, [sp, #224]
  458818:	ldr	x1, [sp, #224]
  45881c:	ldr	x0, [sp, #96]
  458820:	cmp	x1, x0
  458824:	b.cs	45883c <argp_usage@@Base+0xf750>  // b.hs, b.nlast
  458828:	ldr	x1, [sp, #104]
  45882c:	ldr	x0, [sp, #224]
  458830:	add	x0, x1, x0
  458834:	mov	w1, #0x3f                  	// #63
  458838:	strb	w1, [x0]
  45883c:	ldr	x0, [sp, #224]
  458840:	add	x0, x0, #0x1
  458844:	str	x0, [sp, #224]
  458848:	b	458850 <argp_usage@@Base+0xf764>
  45884c:	nop
  458850:	b	45885c <argp_usage@@Base+0xf770>
  458854:	nop
  458858:	b	459014 <argp_usage@@Base+0xff28>
  45885c:	nop
  458860:	b	459014 <argp_usage@@Base+0xff28>
  458864:	mov	w0, #0x61                  	// #97
  458868:	strb	w0, [sp, #193]
  45886c:	b	458920 <argp_usage@@Base+0xf834>
  458870:	mov	w0, #0x62                  	// #98
  458874:	strb	w0, [sp, #193]
  458878:	b	458920 <argp_usage@@Base+0xf834>
  45887c:	mov	w0, #0x66                  	// #102
  458880:	strb	w0, [sp, #193]
  458884:	b	458920 <argp_usage@@Base+0xf834>
  458888:	mov	w0, #0x6e                  	// #110
  45888c:	strb	w0, [sp, #193]
  458890:	b	458904 <argp_usage@@Base+0xf818>
  458894:	mov	w0, #0x72                  	// #114
  458898:	strb	w0, [sp, #193]
  45889c:	b	458904 <argp_usage@@Base+0xf818>
  4588a0:	mov	w0, #0x74                  	// #116
  4588a4:	strb	w0, [sp, #193]
  4588a8:	b	458904 <argp_usage@@Base+0xf818>
  4588ac:	mov	w0, #0x76                  	// #118
  4588b0:	strb	w0, [sp, #193]
  4588b4:	b	458920 <argp_usage@@Base+0xf834>
  4588b8:	ldrb	w0, [sp, #194]
  4588bc:	strb	w0, [sp, #193]
  4588c0:	ldr	w0, [sp, #76]
  4588c4:	cmp	w0, #0x2
  4588c8:	b.ne	4588dc <argp_usage@@Base+0xf7f0>  // b.any
  4588cc:	ldrb	w0, [sp, #198]
  4588d0:	cmp	w0, #0x0
  4588d4:	b.eq	4591a4 <argp_usage@@Base+0x100b8>  // b.none
  4588d8:	b	459464 <argp_usage@@Base+0x10378>
  4588dc:	ldrb	w0, [sp, #199]
  4588e0:	cmp	w0, #0x0
  4588e4:	b.eq	458900 <argp_usage@@Base+0xf814>  // b.none
  4588e8:	ldrb	w0, [sp, #198]
  4588ec:	cmp	w0, #0x0
  4588f0:	b.eq	458900 <argp_usage@@Base+0xf814>  // b.none
  4588f4:	ldr	x0, [sp, #200]
  4588f8:	cmp	x0, #0x0
  4588fc:	b.ne	4591ac <argp_usage@@Base+0x100c0>  // b.any
  458900:	nop
  458904:	ldr	w0, [sp, #76]
  458908:	cmp	w0, #0x2
  45890c:	b.ne	45891c <argp_usage@@Base+0xf830>  // b.any
  458910:	ldrb	w0, [sp, #198]
  458914:	cmp	w0, #0x0
  458918:	b.ne	459440 <argp_usage@@Base+0x10354>  // b.any
  45891c:	nop
  458920:	ldrb	w0, [sp, #199]
  458924:	cmp	w0, #0x0
  458928:	b.eq	458ff0 <argp_usage@@Base+0xff04>  // b.none
  45892c:	ldrb	w0, [sp, #193]
  458930:	strb	w0, [sp, #194]
  458934:	b	4590a4 <argp_usage@@Base+0xffb8>
  458938:	ldr	x0, [sp, #80]
  45893c:	cmn	x0, #0x1
  458940:	b.ne	458960 <argp_usage@@Base+0xf874>  // b.any
  458944:	ldr	x0, [sp, #88]
  458948:	add	x0, x0, #0x1
  45894c:	ldrb	w0, [x0]
  458950:	cmp	w0, #0x0
  458954:	cset	w0, ne  // ne = any
  458958:	and	w0, w0, #0xff
  45895c:	b	458970 <argp_usage@@Base+0xf884>
  458960:	ldr	x0, [sp, #80]
  458964:	cmp	x0, #0x1
  458968:	cset	w0, ne  // ne = any
  45896c:	and	w0, w0, #0xff
  458970:	cmp	w0, #0x0
  458974:	b.ne	458ff8 <argp_usage@@Base+0xff0c>  // b.any
  458978:	ldr	x0, [sp, #232]
  45897c:	cmp	x0, #0x0
  458980:	b.ne	459000 <argp_usage@@Base+0xff14>  // b.any
  458984:	mov	w0, #0x1                   	// #1
  458988:	strb	w0, [sp, #190]
  45898c:	ldr	w0, [sp, #76]
  458990:	cmp	w0, #0x2
  458994:	b.ne	459008 <argp_usage@@Base+0xff1c>  // b.any
  458998:	ldrb	w0, [sp, #198]
  45899c:	cmp	w0, #0x0
  4589a0:	b.eq	459008 <argp_usage@@Base+0xff1c>  // b.none
  4589a4:	b	459464 <argp_usage@@Base+0x10378>
  4589a8:	mov	w0, #0x1                   	// #1
  4589ac:	strb	w0, [sp, #196]
  4589b0:	mov	w0, #0x1                   	// #1
  4589b4:	strb	w0, [sp, #190]
  4589b8:	ldr	w0, [sp, #76]
  4589bc:	cmp	w0, #0x2
  4589c0:	b.ne	459010 <argp_usage@@Base+0xff24>  // b.any
  4589c4:	ldrb	w0, [sp, #198]
  4589c8:	cmp	w0, #0x0
  4589cc:	b.ne	459448 <argp_usage@@Base+0x1035c>  // b.any
  4589d0:	ldr	x0, [sp, #96]
  4589d4:	cmp	x0, #0x0
  4589d8:	b.eq	4589f4 <argp_usage@@Base+0xf908>  // b.none
  4589dc:	ldr	x0, [sp, #216]
  4589e0:	cmp	x0, #0x0
  4589e4:	b.ne	4589f4 <argp_usage@@Base+0xf908>  // b.any
  4589e8:	ldr	x0, [sp, #96]
  4589ec:	str	x0, [sp, #216]
  4589f0:	str	xzr, [sp, #96]
  4589f4:	ldr	x1, [sp, #224]
  4589f8:	ldr	x0, [sp, #96]
  4589fc:	cmp	x1, x0
  458a00:	b.cs	458a18 <argp_usage@@Base+0xf92c>  // b.hs, b.nlast
  458a04:	ldr	x1, [sp, #104]
  458a08:	ldr	x0, [sp, #224]
  458a0c:	add	x0, x1, x0
  458a10:	mov	w1, #0x27                  	// #39
  458a14:	strb	w1, [x0]
  458a18:	ldr	x0, [sp, #224]
  458a1c:	add	x0, x0, #0x1
  458a20:	str	x0, [sp, #224]
  458a24:	ldr	x1, [sp, #224]
  458a28:	ldr	x0, [sp, #96]
  458a2c:	cmp	x1, x0
  458a30:	b.cs	458a48 <argp_usage@@Base+0xf95c>  // b.hs, b.nlast
  458a34:	ldr	x1, [sp, #104]
  458a38:	ldr	x0, [sp, #224]
  458a3c:	add	x0, x1, x0
  458a40:	mov	w1, #0x5c                  	// #92
  458a44:	strb	w1, [x0]
  458a48:	ldr	x0, [sp, #224]
  458a4c:	add	x0, x0, #0x1
  458a50:	str	x0, [sp, #224]
  458a54:	ldr	x1, [sp, #224]
  458a58:	ldr	x0, [sp, #96]
  458a5c:	cmp	x1, x0
  458a60:	b.cs	458a78 <argp_usage@@Base+0xf98c>  // b.hs, b.nlast
  458a64:	ldr	x1, [sp, #104]
  458a68:	ldr	x0, [sp, #224]
  458a6c:	add	x0, x1, x0
  458a70:	mov	w1, #0x27                  	// #39
  458a74:	strb	w1, [x0]
  458a78:	ldr	x0, [sp, #224]
  458a7c:	add	x0, x0, #0x1
  458a80:	str	x0, [sp, #224]
  458a84:	strb	wzr, [sp, #197]
  458a88:	b	459010 <argp_usage@@Base+0xff24>
  458a8c:	mov	w0, #0x1                   	// #1
  458a90:	strb	w0, [sp, #190]
  458a94:	b	459014 <argp_usage@@Base+0xff28>
  458a98:	ldrb	w0, [sp, #159]
  458a9c:	cmp	w0, #0x0
  458aa0:	b.eq	458ad8 <argp_usage@@Base+0xf9ec>  // b.none
  458aa4:	mov	x0, #0x1                   	// #1
  458aa8:	str	x0, [sp, #176]
  458aac:	bl	4047f0 <__ctype_b_loc@plt>
  458ab0:	ldr	x1, [x0]
  458ab4:	ldrb	w0, [sp, #194]
  458ab8:	lsl	x0, x0, #1
  458abc:	add	x0, x1, x0
  458ac0:	ldrh	w0, [x0]
  458ac4:	and	w0, w0, #0x4000
  458ac8:	cmp	w0, #0x0
  458acc:	cset	w0, ne  // ne = any
  458ad0:	strb	w0, [sp, #175]
  458ad4:	b	458cb4 <argp_usage@@Base+0xfbc8>
  458ad8:	add	x0, sp, #0x80
  458adc:	mov	x2, #0x8                   	// #8
  458ae0:	mov	w1, #0x0                   	// #0
  458ae4:	bl	4044d0 <memset@plt>
  458ae8:	str	xzr, [sp, #176]
  458aec:	mov	w0, #0x1                   	// #1
  458af0:	strb	w0, [sp, #175]
  458af4:	ldr	x0, [sp, #80]
  458af8:	cmn	x0, #0x1
  458afc:	b.ne	458b0c <argp_usage@@Base+0xfa20>  // b.any
  458b00:	ldr	x0, [sp, #88]
  458b04:	bl	4040b0 <strlen@plt>
  458b08:	str	x0, [sp, #80]
  458b0c:	ldr	x1, [sp, #232]
  458b10:	ldr	x0, [sp, #176]
  458b14:	add	x0, x1, x0
  458b18:	ldr	x1, [sp, #88]
  458b1c:	add	x4, x1, x0
  458b20:	ldr	x1, [sp, #232]
  458b24:	ldr	x0, [sp, #176]
  458b28:	add	x0, x1, x0
  458b2c:	ldr	x1, [sp, #80]
  458b30:	sub	x1, x1, x0
  458b34:	add	x2, sp, #0x80
  458b38:	add	x0, sp, #0x7c
  458b3c:	mov	x3, x2
  458b40:	mov	x2, x1
  458b44:	mov	x1, x4
  458b48:	bl	45ca48 <argp_usage@@Base+0x1395c>
  458b4c:	str	x0, [sp, #144]
  458b50:	ldr	x0, [sp, #144]
  458b54:	cmp	x0, #0x0
  458b58:	b.eq	458ca8 <argp_usage@@Base+0xfbbc>  // b.none
  458b5c:	ldr	x0, [sp, #144]
  458b60:	cmn	x0, #0x1
  458b64:	b.ne	458b70 <argp_usage@@Base+0xfa84>  // b.any
  458b68:	strb	wzr, [sp, #175]
  458b6c:	b	458cb4 <argp_usage@@Base+0xfbc8>
  458b70:	ldr	x0, [sp, #144]
  458b74:	cmn	x0, #0x2
  458b78:	b.ne	458bcc <argp_usage@@Base+0xfae0>  // b.any
  458b7c:	strb	wzr, [sp, #175]
  458b80:	b	458b90 <argp_usage@@Base+0xfaa4>
  458b84:	ldr	x0, [sp, #176]
  458b88:	add	x0, x0, #0x1
  458b8c:	str	x0, [sp, #176]
  458b90:	ldr	x1, [sp, #232]
  458b94:	ldr	x0, [sp, #176]
  458b98:	add	x0, x1, x0
  458b9c:	ldr	x1, [sp, #80]
  458ba0:	cmp	x1, x0
  458ba4:	b.ls	458cb0 <argp_usage@@Base+0xfbc4>  // b.plast
  458ba8:	ldr	x1, [sp, #232]
  458bac:	ldr	x0, [sp, #176]
  458bb0:	add	x0, x1, x0
  458bb4:	ldr	x1, [sp, #88]
  458bb8:	add	x0, x1, x0
  458bbc:	ldrb	w0, [x0]
  458bc0:	cmp	w0, #0x0
  458bc4:	b.ne	458b84 <argp_usage@@Base+0xfa98>  // b.any
  458bc8:	b	458cb0 <argp_usage@@Base+0xfbc4>
  458bcc:	ldrb	w0, [sp, #198]
  458bd0:	cmp	w0, #0x0
  458bd4:	b.eq	458c70 <argp_usage@@Base+0xfb84>  // b.none
  458bd8:	ldr	w0, [sp, #76]
  458bdc:	cmp	w0, #0x2
  458be0:	b.ne	458c70 <argp_usage@@Base+0xfb84>  // b.any
  458be4:	mov	x0, #0x1                   	// #1
  458be8:	str	x0, [sp, #160]
  458bec:	b	458c60 <argp_usage@@Base+0xfb74>
  458bf0:	ldr	x1, [sp, #232]
  458bf4:	ldr	x0, [sp, #176]
  458bf8:	add	x1, x1, x0
  458bfc:	ldr	x0, [sp, #160]
  458c00:	add	x0, x1, x0
  458c04:	ldr	x1, [sp, #88]
  458c08:	add	x0, x1, x0
  458c0c:	ldrb	w0, [x0]
  458c10:	sub	w0, w0, #0x5b
  458c14:	cmp	w0, #0x21
  458c18:	cset	w1, hi  // hi = pmore
  458c1c:	and	w1, w1, #0xff
  458c20:	cmp	w1, #0x0
  458c24:	b.ne	458c50 <argp_usage@@Base+0xfb64>  // b.any
  458c28:	mov	x1, #0x1                   	// #1
  458c2c:	lsl	x1, x1, x0
  458c30:	mov	x0, #0x2b                  	// #43
  458c34:	movk	x0, #0x2, lsl #32
  458c38:	and	x0, x1, x0
  458c3c:	cmp	x0, #0x0
  458c40:	cset	w0, ne  // ne = any
  458c44:	and	w0, w0, #0xff
  458c48:	cmp	w0, #0x0
  458c4c:	b.ne	459464 <argp_usage@@Base+0x10378>  // b.any
  458c50:	nop
  458c54:	ldr	x0, [sp, #160]
  458c58:	add	x0, x0, #0x1
  458c5c:	str	x0, [sp, #160]
  458c60:	ldr	x1, [sp, #160]
  458c64:	ldr	x0, [sp, #144]
  458c68:	cmp	x1, x0
  458c6c:	b.cc	458bf0 <argp_usage@@Base+0xfb04>  // b.lo, b.ul, b.last
  458c70:	ldr	w0, [sp, #124]
  458c74:	bl	404b40 <iswprint@plt>
  458c78:	cmp	w0, #0x0
  458c7c:	b.ne	458c84 <argp_usage@@Base+0xfb98>  // b.any
  458c80:	strb	wzr, [sp, #175]
  458c84:	ldr	x1, [sp, #176]
  458c88:	ldr	x0, [sp, #144]
  458c8c:	add	x0, x1, x0
  458c90:	str	x0, [sp, #176]
  458c94:	add	x0, sp, #0x80
  458c98:	bl	404730 <mbsinit@plt>
  458c9c:	cmp	w0, #0x0
  458ca0:	b.eq	458b0c <argp_usage@@Base+0xfa20>  // b.none
  458ca4:	b	458cb4 <argp_usage@@Base+0xfbc8>
  458ca8:	nop
  458cac:	b	458cb4 <argp_usage@@Base+0xfbc8>
  458cb0:	nop
  458cb4:	ldrb	w0, [sp, #175]
  458cb8:	strb	w0, [sp, #190]
  458cbc:	ldr	x0, [sp, #176]
  458cc0:	cmp	x0, #0x1
  458cc4:	b.hi	458ce8 <argp_usage@@Base+0xfbfc>  // b.pmore
  458cc8:	ldrb	w0, [sp, #199]
  458ccc:	cmp	w0, #0x0
  458cd0:	b.eq	459014 <argp_usage@@Base+0xff28>  // b.none
  458cd4:	ldrb	w0, [sp, #175]
  458cd8:	eor	w0, w0, #0x1
  458cdc:	and	w0, w0, #0xff
  458ce0:	cmp	w0, #0x0
  458ce4:	b.eq	459014 <argp_usage@@Base+0xff28>  // b.none
  458ce8:	ldr	x1, [sp, #232]
  458cec:	ldr	x0, [sp, #176]
  458cf0:	add	x0, x1, x0
  458cf4:	str	x0, [sp, #136]
  458cf8:	ldrb	w0, [sp, #199]
  458cfc:	cmp	w0, #0x0
  458d00:	b.eq	458eb4 <argp_usage@@Base+0xfdc8>  // b.none
  458d04:	ldrb	w0, [sp, #175]
  458d08:	eor	w0, w0, #0x1
  458d0c:	and	w0, w0, #0xff
  458d10:	cmp	w0, #0x0
  458d14:	b.eq	458eb4 <argp_usage@@Base+0xfdc8>  // b.none
  458d18:	ldrb	w0, [sp, #198]
  458d1c:	cmp	w0, #0x0
  458d20:	b.ne	459450 <argp_usage@@Base+0x10364>  // b.any
  458d24:	mov	w0, #0x1                   	// #1
  458d28:	strb	w0, [sp, #191]
  458d2c:	ldr	w0, [sp, #76]
  458d30:	cmp	w0, #0x2
  458d34:	b.ne	458de4 <argp_usage@@Base+0xfcf8>  // b.any
  458d38:	ldrb	w0, [sp, #197]
  458d3c:	eor	w0, w0, #0x1
  458d40:	and	w0, w0, #0xff
  458d44:	cmp	w0, #0x0
  458d48:	b.eq	458de4 <argp_usage@@Base+0xfcf8>  // b.none
  458d4c:	ldr	x1, [sp, #224]
  458d50:	ldr	x0, [sp, #96]
  458d54:	cmp	x1, x0
  458d58:	b.cs	458d70 <argp_usage@@Base+0xfc84>  // b.hs, b.nlast
  458d5c:	ldr	x1, [sp, #104]
  458d60:	ldr	x0, [sp, #224]
  458d64:	add	x0, x1, x0
  458d68:	mov	w1, #0x27                  	// #39
  458d6c:	strb	w1, [x0]
  458d70:	ldr	x0, [sp, #224]
  458d74:	add	x0, x0, #0x1
  458d78:	str	x0, [sp, #224]
  458d7c:	ldr	x1, [sp, #224]
  458d80:	ldr	x0, [sp, #96]
  458d84:	cmp	x1, x0
  458d88:	b.cs	458da0 <argp_usage@@Base+0xfcb4>  // b.hs, b.nlast
  458d8c:	ldr	x1, [sp, #104]
  458d90:	ldr	x0, [sp, #224]
  458d94:	add	x0, x1, x0
  458d98:	mov	w1, #0x24                  	// #36
  458d9c:	strb	w1, [x0]
  458da0:	ldr	x0, [sp, #224]
  458da4:	add	x0, x0, #0x1
  458da8:	str	x0, [sp, #224]
  458dac:	ldr	x1, [sp, #224]
  458db0:	ldr	x0, [sp, #96]
  458db4:	cmp	x1, x0
  458db8:	b.cs	458dd0 <argp_usage@@Base+0xfce4>  // b.hs, b.nlast
  458dbc:	ldr	x1, [sp, #104]
  458dc0:	ldr	x0, [sp, #224]
  458dc4:	add	x0, x1, x0
  458dc8:	mov	w1, #0x27                  	// #39
  458dcc:	strb	w1, [x0]
  458dd0:	ldr	x0, [sp, #224]
  458dd4:	add	x0, x0, #0x1
  458dd8:	str	x0, [sp, #224]
  458ddc:	mov	w0, #0x1                   	// #1
  458de0:	strb	w0, [sp, #197]
  458de4:	ldr	x1, [sp, #224]
  458de8:	ldr	x0, [sp, #96]
  458dec:	cmp	x1, x0
  458df0:	b.cs	458e08 <argp_usage@@Base+0xfd1c>  // b.hs, b.nlast
  458df4:	ldr	x1, [sp, #104]
  458df8:	ldr	x0, [sp, #224]
  458dfc:	add	x0, x1, x0
  458e00:	mov	w1, #0x5c                  	// #92
  458e04:	strb	w1, [x0]
  458e08:	ldr	x0, [sp, #224]
  458e0c:	add	x0, x0, #0x1
  458e10:	str	x0, [sp, #224]
  458e14:	ldr	x1, [sp, #224]
  458e18:	ldr	x0, [sp, #96]
  458e1c:	cmp	x1, x0
  458e20:	b.cs	458e48 <argp_usage@@Base+0xfd5c>  // b.hs, b.nlast
  458e24:	ldrb	w0, [sp, #194]
  458e28:	lsr	w0, w0, #6
  458e2c:	and	w1, w0, #0xff
  458e30:	ldr	x2, [sp, #104]
  458e34:	ldr	x0, [sp, #224]
  458e38:	add	x0, x2, x0
  458e3c:	add	w1, w1, #0x30
  458e40:	and	w1, w1, #0xff
  458e44:	strb	w1, [x0]
  458e48:	ldr	x0, [sp, #224]
  458e4c:	add	x0, x0, #0x1
  458e50:	str	x0, [sp, #224]
  458e54:	ldr	x1, [sp, #224]
  458e58:	ldr	x0, [sp, #96]
  458e5c:	cmp	x1, x0
  458e60:	b.cs	458e90 <argp_usage@@Base+0xfda4>  // b.hs, b.nlast
  458e64:	ldrb	w0, [sp, #194]
  458e68:	lsr	w0, w0, #3
  458e6c:	and	w0, w0, #0xff
  458e70:	and	w0, w0, #0x7
  458e74:	and	w1, w0, #0xff
  458e78:	ldr	x2, [sp, #104]
  458e7c:	ldr	x0, [sp, #224]
  458e80:	add	x0, x2, x0
  458e84:	add	w1, w1, #0x30
  458e88:	and	w1, w1, #0xff
  458e8c:	strb	w1, [x0]
  458e90:	ldr	x0, [sp, #224]
  458e94:	add	x0, x0, #0x1
  458e98:	str	x0, [sp, #224]
  458e9c:	ldrb	w0, [sp, #194]
  458ea0:	and	w0, w0, #0x7
  458ea4:	and	w0, w0, #0xff
  458ea8:	add	w0, w0, #0x30
  458eac:	strb	w0, [sp, #194]
  458eb0:	b	458ef4 <argp_usage@@Base+0xfe08>
  458eb4:	ldrb	w0, [sp, #192]
  458eb8:	cmp	w0, #0x0
  458ebc:	b.eq	458ef4 <argp_usage@@Base+0xfe08>  // b.none
  458ec0:	ldr	x1, [sp, #224]
  458ec4:	ldr	x0, [sp, #96]
  458ec8:	cmp	x1, x0
  458ecc:	b.cs	458ee4 <argp_usage@@Base+0xfdf8>  // b.hs, b.nlast
  458ed0:	ldr	x1, [sp, #104]
  458ed4:	ldr	x0, [sp, #224]
  458ed8:	add	x0, x1, x0
  458edc:	mov	w1, #0x5c                  	// #92
  458ee0:	strb	w1, [x0]
  458ee4:	ldr	x0, [sp, #224]
  458ee8:	add	x0, x0, #0x1
  458eec:	str	x0, [sp, #224]
  458ef0:	strb	wzr, [sp, #192]
  458ef4:	ldr	x0, [sp, #232]
  458ef8:	add	x0, x0, #0x1
  458efc:	ldr	x1, [sp, #136]
  458f00:	cmp	x1, x0
  458f04:	b.ls	458fe0 <argp_usage@@Base+0xfef4>  // b.plast
  458f08:	ldrb	w0, [sp, #197]
  458f0c:	cmp	w0, #0x0
  458f10:	b.eq	458f8c <argp_usage@@Base+0xfea0>  // b.none
  458f14:	ldrb	w0, [sp, #191]
  458f18:	eor	w0, w0, #0x1
  458f1c:	and	w0, w0, #0xff
  458f20:	cmp	w0, #0x0
  458f24:	b.eq	458f8c <argp_usage@@Base+0xfea0>  // b.none
  458f28:	ldr	x1, [sp, #224]
  458f2c:	ldr	x0, [sp, #96]
  458f30:	cmp	x1, x0
  458f34:	b.cs	458f4c <argp_usage@@Base+0xfe60>  // b.hs, b.nlast
  458f38:	ldr	x1, [sp, #104]
  458f3c:	ldr	x0, [sp, #224]
  458f40:	add	x0, x1, x0
  458f44:	mov	w1, #0x27                  	// #39
  458f48:	strb	w1, [x0]
  458f4c:	ldr	x0, [sp, #224]
  458f50:	add	x0, x0, #0x1
  458f54:	str	x0, [sp, #224]
  458f58:	ldr	x1, [sp, #224]
  458f5c:	ldr	x0, [sp, #96]
  458f60:	cmp	x1, x0
  458f64:	b.cs	458f7c <argp_usage@@Base+0xfe90>  // b.hs, b.nlast
  458f68:	ldr	x1, [sp, #104]
  458f6c:	ldr	x0, [sp, #224]
  458f70:	add	x0, x1, x0
  458f74:	mov	w1, #0x27                  	// #39
  458f78:	strb	w1, [x0]
  458f7c:	ldr	x0, [sp, #224]
  458f80:	add	x0, x0, #0x1
  458f84:	str	x0, [sp, #224]
  458f88:	strb	wzr, [sp, #197]
  458f8c:	ldr	x1, [sp, #224]
  458f90:	ldr	x0, [sp, #96]
  458f94:	cmp	x1, x0
  458f98:	b.cs	458fb0 <argp_usage@@Base+0xfec4>  // b.hs, b.nlast
  458f9c:	ldr	x1, [sp, #104]
  458fa0:	ldr	x0, [sp, #224]
  458fa4:	add	x0, x1, x0
  458fa8:	ldrb	w1, [sp, #194]
  458fac:	strb	w1, [x0]
  458fb0:	ldr	x0, [sp, #224]
  458fb4:	add	x0, x0, #0x1
  458fb8:	str	x0, [sp, #224]
  458fbc:	ldr	x0, [sp, #232]
  458fc0:	add	x0, x0, #0x1
  458fc4:	str	x0, [sp, #232]
  458fc8:	ldr	x1, [sp, #88]
  458fcc:	ldr	x0, [sp, #232]
  458fd0:	add	x0, x1, x0
  458fd4:	ldrb	w0, [x0]
  458fd8:	strb	w0, [sp, #194]
  458fdc:	b	458cf8 <argp_usage@@Base+0xfc0c>
  458fe0:	nop
  458fe4:	b	4591b8 <argp_usage@@Base+0x100cc>
  458fe8:	nop
  458fec:	b	459014 <argp_usage@@Base+0xff28>
  458ff0:	nop
  458ff4:	b	459014 <argp_usage@@Base+0xff28>
  458ff8:	nop
  458ffc:	b	459014 <argp_usage@@Base+0xff28>
  459000:	nop
  459004:	b	459014 <argp_usage@@Base+0xff28>
  459008:	nop
  45900c:	b	459014 <argp_usage@@Base+0xff28>
  459010:	nop
  459014:	ldrb	w0, [sp, #199]
  459018:	eor	w0, w0, #0x1
  45901c:	and	w0, w0, #0xff
  459020:	cmp	w0, #0x0
  459024:	b.ne	459034 <argp_usage@@Base+0xff48>  // b.any
  459028:	ldr	w0, [sp, #76]
  45902c:	cmp	w0, #0x2
  459030:	b.ne	459048 <argp_usage@@Base+0xff5c>  // b.any
  459034:	ldrb	w0, [sp, #198]
  459038:	eor	w0, w0, #0x1
  45903c:	and	w0, w0, #0xff
  459040:	cmp	w0, #0x0
  459044:	b.ne	45908c <argp_usage@@Base+0xffa0>  // b.any
  459048:	ldr	x0, [sp, #64]
  45904c:	cmp	x0, #0x0
  459050:	b.eq	45908c <argp_usage@@Base+0xffa0>  // b.none
  459054:	ldrb	w0, [sp, #194]
  459058:	lsr	w0, w0, #5
  45905c:	and	w0, w0, #0xff
  459060:	and	x0, x0, #0xff
  459064:	lsl	x0, x0, #2
  459068:	ldr	x1, [sp, #64]
  45906c:	add	x0, x1, x0
  459070:	ldr	w1, [x0]
  459074:	ldrb	w0, [sp, #194]
  459078:	and	w0, w0, #0x1f
  45907c:	lsr	w0, w1, w0
  459080:	and	w0, w0, #0x1
  459084:	cmp	w0, #0x0
  459088:	b.ne	4590a0 <argp_usage@@Base+0xffb4>  // b.any
  45908c:	ldrb	w0, [sp, #192]
  459090:	eor	w0, w0, #0x1
  459094:	and	w0, w0, #0xff
  459098:	cmp	w0, #0x0
  45909c:	b.ne	4591b4 <argp_usage@@Base+0x100c8>  // b.any
  4590a0:	nop
  4590a4:	ldrb	w0, [sp, #198]
  4590a8:	cmp	w0, #0x0
  4590ac:	b.ne	459458 <argp_usage@@Base+0x1036c>  // b.any
  4590b0:	mov	w0, #0x1                   	// #1
  4590b4:	strb	w0, [sp, #191]
  4590b8:	ldr	w0, [sp, #76]
  4590bc:	cmp	w0, #0x2
  4590c0:	b.ne	459170 <argp_usage@@Base+0x10084>  // b.any
  4590c4:	ldrb	w0, [sp, #197]
  4590c8:	eor	w0, w0, #0x1
  4590cc:	and	w0, w0, #0xff
  4590d0:	cmp	w0, #0x0
  4590d4:	b.eq	459170 <argp_usage@@Base+0x10084>  // b.none
  4590d8:	ldr	x1, [sp, #224]
  4590dc:	ldr	x0, [sp, #96]
  4590e0:	cmp	x1, x0
  4590e4:	b.cs	4590fc <argp_usage@@Base+0x10010>  // b.hs, b.nlast
  4590e8:	ldr	x1, [sp, #104]
  4590ec:	ldr	x0, [sp, #224]
  4590f0:	add	x0, x1, x0
  4590f4:	mov	w1, #0x27                  	// #39
  4590f8:	strb	w1, [x0]
  4590fc:	ldr	x0, [sp, #224]
  459100:	add	x0, x0, #0x1
  459104:	str	x0, [sp, #224]
  459108:	ldr	x1, [sp, #224]
  45910c:	ldr	x0, [sp, #96]
  459110:	cmp	x1, x0
  459114:	b.cs	45912c <argp_usage@@Base+0x10040>  // b.hs, b.nlast
  459118:	ldr	x1, [sp, #104]
  45911c:	ldr	x0, [sp, #224]
  459120:	add	x0, x1, x0
  459124:	mov	w1, #0x24                  	// #36
  459128:	strb	w1, [x0]
  45912c:	ldr	x0, [sp, #224]
  459130:	add	x0, x0, #0x1
  459134:	str	x0, [sp, #224]
  459138:	ldr	x1, [sp, #224]
  45913c:	ldr	x0, [sp, #96]
  459140:	cmp	x1, x0
  459144:	b.cs	45915c <argp_usage@@Base+0x10070>  // b.hs, b.nlast
  459148:	ldr	x1, [sp, #104]
  45914c:	ldr	x0, [sp, #224]
  459150:	add	x0, x1, x0
  459154:	mov	w1, #0x27                  	// #39
  459158:	strb	w1, [x0]
  45915c:	ldr	x0, [sp, #224]
  459160:	add	x0, x0, #0x1
  459164:	str	x0, [sp, #224]
  459168:	mov	w0, #0x1                   	// #1
  45916c:	strb	w0, [sp, #197]
  459170:	ldr	x1, [sp, #224]
  459174:	ldr	x0, [sp, #96]
  459178:	cmp	x1, x0
  45917c:	b.cs	459194 <argp_usage@@Base+0x100a8>  // b.hs, b.nlast
  459180:	ldr	x1, [sp, #104]
  459184:	ldr	x0, [sp, #224]
  459188:	add	x0, x1, x0
  45918c:	mov	w1, #0x5c                  	// #92
  459190:	strb	w1, [x0]
  459194:	ldr	x0, [sp, #224]
  459198:	add	x0, x0, #0x1
  45919c:	str	x0, [sp, #224]
  4591a0:	b	4591b8 <argp_usage@@Base+0x100cc>
  4591a4:	nop
  4591a8:	b	4591b8 <argp_usage@@Base+0x100cc>
  4591ac:	nop
  4591b0:	b	4591b8 <argp_usage@@Base+0x100cc>
  4591b4:	nop
  4591b8:	ldrb	w0, [sp, #197]
  4591bc:	cmp	w0, #0x0
  4591c0:	b.eq	45923c <argp_usage@@Base+0x10150>  // b.none
  4591c4:	ldrb	w0, [sp, #191]
  4591c8:	eor	w0, w0, #0x1
  4591cc:	and	w0, w0, #0xff
  4591d0:	cmp	w0, #0x0
  4591d4:	b.eq	45923c <argp_usage@@Base+0x10150>  // b.none
  4591d8:	ldr	x1, [sp, #224]
  4591dc:	ldr	x0, [sp, #96]
  4591e0:	cmp	x1, x0
  4591e4:	b.cs	4591fc <argp_usage@@Base+0x10110>  // b.hs, b.nlast
  4591e8:	ldr	x1, [sp, #104]
  4591ec:	ldr	x0, [sp, #224]
  4591f0:	add	x0, x1, x0
  4591f4:	mov	w1, #0x27                  	// #39
  4591f8:	strb	w1, [x0]
  4591fc:	ldr	x0, [sp, #224]
  459200:	add	x0, x0, #0x1
  459204:	str	x0, [sp, #224]
  459208:	ldr	x1, [sp, #224]
  45920c:	ldr	x0, [sp, #96]
  459210:	cmp	x1, x0
  459214:	b.cs	45922c <argp_usage@@Base+0x10140>  // b.hs, b.nlast
  459218:	ldr	x1, [sp, #104]
  45921c:	ldr	x0, [sp, #224]
  459220:	add	x0, x1, x0
  459224:	mov	w1, #0x27                  	// #39
  459228:	strb	w1, [x0]
  45922c:	ldr	x0, [sp, #224]
  459230:	add	x0, x0, #0x1
  459234:	str	x0, [sp, #224]
  459238:	strb	wzr, [sp, #197]
  45923c:	ldr	x1, [sp, #224]
  459240:	ldr	x0, [sp, #96]
  459244:	cmp	x1, x0
  459248:	b.cs	459260 <argp_usage@@Base+0x10174>  // b.hs, b.nlast
  45924c:	ldr	x1, [sp, #104]
  459250:	ldr	x0, [sp, #224]
  459254:	add	x0, x1, x0
  459258:	ldrb	w1, [sp, #194]
  45925c:	strb	w1, [x0]
  459260:	ldr	x0, [sp, #224]
  459264:	add	x0, x0, #0x1
  459268:	str	x0, [sp, #224]
  45926c:	ldrb	w0, [sp, #190]
  459270:	eor	w0, w0, #0x1
  459274:	and	w0, w0, #0xff
  459278:	cmp	w0, #0x0
  45927c:	b.eq	459284 <argp_usage@@Base+0x10198>  // b.none
  459280:	strb	wzr, [sp, #195]
  459284:	ldr	x0, [sp, #232]
  459288:	add	x0, x0, #0x1
  45928c:	str	x0, [sp, #232]
  459290:	ldr	x0, [sp, #80]
  459294:	cmn	x0, #0x1
  459298:	b.ne	4592bc <argp_usage@@Base+0x101d0>  // b.any
  45929c:	ldr	x1, [sp, #88]
  4592a0:	ldr	x0, [sp, #232]
  4592a4:	add	x0, x1, x0
  4592a8:	ldrb	w0, [x0]
  4592ac:	cmp	w0, #0x0
  4592b0:	cset	w0, ne  // ne = any
  4592b4:	and	w0, w0, #0xff
  4592b8:	b	4592d0 <argp_usage@@Base+0x101e4>
  4592bc:	ldr	x1, [sp, #232]
  4592c0:	ldr	x0, [sp, #80]
  4592c4:	cmp	x1, x0
  4592c8:	cset	w0, ne  // ne = any
  4592cc:	and	w0, w0, #0xff
  4592d0:	cmp	w0, #0x0
  4592d4:	b.ne	4583dc <argp_usage@@Base+0xf2f0>  // b.any
  4592d8:	ldr	x0, [sp, #224]
  4592dc:	cmp	x0, #0x0
  4592e0:	b.ne	4592fc <argp_usage@@Base+0x10210>  // b.any
  4592e4:	ldr	w0, [sp, #76]
  4592e8:	cmp	w0, #0x2
  4592ec:	b.ne	4592fc <argp_usage@@Base+0x10210>  // b.any
  4592f0:	ldrb	w0, [sp, #198]
  4592f4:	cmp	w0, #0x0
  4592f8:	b.ne	459460 <argp_usage@@Base+0x10374>  // b.any
  4592fc:	ldr	w0, [sp, #76]
  459300:	cmp	w0, #0x2
  459304:	b.ne	45938c <argp_usage@@Base+0x102a0>  // b.any
  459308:	ldrb	w0, [sp, #198]
  45930c:	eor	w0, w0, #0x1
  459310:	and	w0, w0, #0xff
  459314:	cmp	w0, #0x0
  459318:	b.eq	45938c <argp_usage@@Base+0x102a0>  // b.none
  45931c:	ldrb	w0, [sp, #196]
  459320:	cmp	w0, #0x0
  459324:	b.eq	45938c <argp_usage@@Base+0x102a0>  // b.none
  459328:	ldrb	w0, [sp, #195]
  45932c:	cmp	w0, #0x0
  459330:	b.eq	459364 <argp_usage@@Base+0x10278>  // b.none
  459334:	ldr	x0, [sp, #240]
  459338:	str	x0, [sp]
  45933c:	ldr	x7, [sp, #56]
  459340:	ldr	x6, [sp, #64]
  459344:	ldr	w5, [sp, #72]
  459348:	mov	w4, #0x5                   	// #5
  45934c:	ldr	x3, [sp, #80]
  459350:	ldr	x2, [sp, #88]
  459354:	ldr	x1, [sp, #216]
  459358:	ldr	x0, [sp, #104]
  45935c:	bl	4580b4 <argp_usage@@Base+0xefc8>
  459360:	b	4594b8 <argp_usage@@Base+0x103cc>
  459364:	ldr	x0, [sp, #96]
  459368:	cmp	x0, #0x0
  45936c:	b.ne	45938c <argp_usage@@Base+0x102a0>  // b.any
  459370:	ldr	x0, [sp, #216]
  459374:	cmp	x0, #0x0
  459378:	b.eq	45938c <argp_usage@@Base+0x102a0>  // b.none
  45937c:	ldr	x0, [sp, #216]
  459380:	str	x0, [sp, #96]
  459384:	str	xzr, [sp, #224]
  459388:	b	45812c <argp_usage@@Base+0xf040>
  45938c:	ldr	x0, [sp, #208]
  459390:	cmp	x0, #0x0
  459394:	b.eq	459400 <argp_usage@@Base+0x10314>  // b.none
  459398:	ldrb	w0, [sp, #198]
  45939c:	eor	w0, w0, #0x1
  4593a0:	and	w0, w0, #0xff
  4593a4:	cmp	w0, #0x0
  4593a8:	b.eq	459400 <argp_usage@@Base+0x10314>  // b.none
  4593ac:	b	4593f0 <argp_usage@@Base+0x10304>
  4593b0:	ldr	x1, [sp, #224]
  4593b4:	ldr	x0, [sp, #96]
  4593b8:	cmp	x1, x0
  4593bc:	b.cs	4593d8 <argp_usage@@Base+0x102ec>  // b.hs, b.nlast
  4593c0:	ldr	x1, [sp, #104]
  4593c4:	ldr	x0, [sp, #224]
  4593c8:	add	x0, x1, x0
  4593cc:	ldr	x1, [sp, #208]
  4593d0:	ldrb	w1, [x1]
  4593d4:	strb	w1, [x0]
  4593d8:	ldr	x0, [sp, #224]
  4593dc:	add	x0, x0, #0x1
  4593e0:	str	x0, [sp, #224]
  4593e4:	ldr	x0, [sp, #208]
  4593e8:	add	x0, x0, #0x1
  4593ec:	str	x0, [sp, #208]
  4593f0:	ldr	x0, [sp, #208]
  4593f4:	ldrb	w0, [x0]
  4593f8:	cmp	w0, #0x0
  4593fc:	b.ne	4593b0 <argp_usage@@Base+0x102c4>  // b.any
  459400:	ldr	x1, [sp, #224]
  459404:	ldr	x0, [sp, #96]
  459408:	cmp	x1, x0
  45940c:	b.cs	459420 <argp_usage@@Base+0x10334>  // b.hs, b.nlast
  459410:	ldr	x1, [sp, #104]
  459414:	ldr	x0, [sp, #224]
  459418:	add	x0, x1, x0
  45941c:	strb	wzr, [x0]
  459420:	ldr	x0, [sp, #224]
  459424:	b	4594b8 <argp_usage@@Base+0x103cc>
  459428:	nop
  45942c:	b	459464 <argp_usage@@Base+0x10378>
  459430:	nop
  459434:	b	459464 <argp_usage@@Base+0x10378>
  459438:	nop
  45943c:	b	459464 <argp_usage@@Base+0x10378>
  459440:	nop
  459444:	b	459464 <argp_usage@@Base+0x10378>
  459448:	nop
  45944c:	b	459464 <argp_usage@@Base+0x10378>
  459450:	nop
  459454:	b	459464 <argp_usage@@Base+0x10378>
  459458:	nop
  45945c:	b	459464 <argp_usage@@Base+0x10378>
  459460:	nop
  459464:	ldr	w0, [sp, #76]
  459468:	cmp	w0, #0x2
  45946c:	b.ne	459484 <argp_usage@@Base+0x10398>  // b.any
  459470:	ldrb	w0, [sp, #199]
  459474:	cmp	w0, #0x0
  459478:	b.eq	459484 <argp_usage@@Base+0x10398>  // b.none
  45947c:	mov	w0, #0x4                   	// #4
  459480:	str	w0, [sp, #76]
  459484:	ldr	w0, [sp, #72]
  459488:	and	w1, w0, #0xfffffffd
  45948c:	ldr	x0, [sp, #240]
  459490:	str	x0, [sp]
  459494:	ldr	x7, [sp, #56]
  459498:	mov	x6, #0x0                   	// #0
  45949c:	mov	w5, w1
  4594a0:	ldr	w4, [sp, #76]
  4594a4:	ldr	x3, [sp, #80]
  4594a8:	ldr	x2, [sp, #88]
  4594ac:	ldr	x1, [sp, #96]
  4594b0:	ldr	x0, [sp, #104]
  4594b4:	bl	4580b4 <argp_usage@@Base+0xefc8>
  4594b8:	ldr	x19, [sp, #32]
  4594bc:	ldp	x29, x30, [sp, #16]
  4594c0:	add	sp, sp, #0xf0
  4594c4:	ret
  4594c8:	sub	sp, sp, #0x70
  4594cc:	stp	x29, x30, [sp, #16]
  4594d0:	add	x29, sp, #0x10
  4594d4:	str	x0, [sp, #72]
  4594d8:	str	x1, [sp, #64]
  4594dc:	str	x2, [sp, #56]
  4594e0:	str	x3, [sp, #48]
  4594e4:	str	x4, [sp, #40]
  4594e8:	ldr	x0, [sp, #40]
  4594ec:	cmp	x0, #0x0
  4594f0:	b.eq	4594fc <argp_usage@@Base+0x10410>  // b.none
  4594f4:	ldr	x0, [sp, #40]
  4594f8:	b	459504 <argp_usage@@Base+0x10418>
  4594fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459500:	add	x0, x0, #0xe10
  459504:	str	x0, [sp, #104]
  459508:	bl	404bc0 <__errno_location@plt>
  45950c:	ldr	w0, [x0]
  459510:	str	w0, [sp, #100]
  459514:	ldr	x0, [sp, #104]
  459518:	ldr	w1, [x0]
  45951c:	ldr	x0, [sp, #104]
  459520:	ldr	w2, [x0, #4]
  459524:	ldr	x0, [sp, #104]
  459528:	add	x3, x0, #0x8
  45952c:	ldr	x0, [sp, #104]
  459530:	ldr	x4, [x0, #40]
  459534:	ldr	x0, [sp, #104]
  459538:	ldr	x0, [x0, #48]
  45953c:	str	x0, [sp]
  459540:	mov	x7, x4
  459544:	mov	x6, x3
  459548:	mov	w5, w2
  45954c:	mov	w4, w1
  459550:	ldr	x3, [sp, #48]
  459554:	ldr	x2, [sp, #56]
  459558:	ldr	x1, [sp, #64]
  45955c:	ldr	x0, [sp, #72]
  459560:	bl	4580b4 <argp_usage@@Base+0xefc8>
  459564:	str	x0, [sp, #88]
  459568:	bl	404bc0 <__errno_location@plt>
  45956c:	mov	x1, x0
  459570:	ldr	w0, [sp, #100]
  459574:	str	w0, [x1]
  459578:	ldr	x0, [sp, #88]
  45957c:	ldp	x29, x30, [sp, #16]
  459580:	add	sp, sp, #0x70
  459584:	ret
  459588:	stp	x29, x30, [sp, #-48]!
  45958c:	mov	x29, sp
  459590:	str	x0, [sp, #40]
  459594:	str	x1, [sp, #32]
  459598:	str	x2, [sp, #24]
  45959c:	ldr	x3, [sp, #24]
  4595a0:	mov	x2, #0x0                   	// #0
  4595a4:	ldr	x1, [sp, #32]
  4595a8:	ldr	x0, [sp, #40]
  4595ac:	bl	4595b8 <argp_usage@@Base+0x104cc>
  4595b0:	ldp	x29, x30, [sp], #48
  4595b4:	ret
  4595b8:	sub	sp, sp, #0x60
  4595bc:	stp	x29, x30, [sp, #16]
  4595c0:	add	x29, sp, #0x10
  4595c4:	str	x0, [sp, #56]
  4595c8:	str	x1, [sp, #48]
  4595cc:	str	x2, [sp, #40]
  4595d0:	str	x3, [sp, #32]
  4595d4:	ldr	x0, [sp, #32]
  4595d8:	cmp	x0, #0x0
  4595dc:	b.eq	4595e8 <argp_usage@@Base+0x104fc>  // b.none
  4595e0:	ldr	x0, [sp, #32]
  4595e4:	b	4595f0 <argp_usage@@Base+0x10504>
  4595e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4595ec:	add	x0, x0, #0xe10
  4595f0:	str	x0, [sp, #88]
  4595f4:	bl	404bc0 <__errno_location@plt>
  4595f8:	ldr	w0, [x0]
  4595fc:	str	w0, [sp, #84]
  459600:	ldr	x0, [sp, #88]
  459604:	ldr	w0, [x0, #4]
  459608:	ldr	x1, [sp, #40]
  45960c:	cmp	x1, #0x0
  459610:	cset	w1, eq  // eq = none
  459614:	and	w1, w1, #0xff
  459618:	orr	w0, w0, w1
  45961c:	str	w0, [sp, #80]
  459620:	ldr	x0, [sp, #88]
  459624:	ldr	w1, [x0]
  459628:	ldr	x0, [sp, #88]
  45962c:	add	x2, x0, #0x8
  459630:	ldr	x0, [sp, #88]
  459634:	ldr	x3, [x0, #40]
  459638:	ldr	x0, [sp, #88]
  45963c:	ldr	x0, [x0, #48]
  459640:	str	x0, [sp]
  459644:	mov	x7, x3
  459648:	mov	x6, x2
  45964c:	ldr	w5, [sp, #80]
  459650:	mov	w4, w1
  459654:	ldr	x3, [sp, #48]
  459658:	ldr	x2, [sp, #56]
  45965c:	mov	x1, #0x0                   	// #0
  459660:	mov	x0, #0x0                   	// #0
  459664:	bl	4580b4 <argp_usage@@Base+0xefc8>
  459668:	add	x0, x0, #0x1
  45966c:	str	x0, [sp, #72]
  459670:	ldr	x0, [sp, #72]
  459674:	bl	45b688 <argp_usage@@Base+0x1259c>
  459678:	str	x0, [sp, #64]
  45967c:	ldr	x0, [sp, #88]
  459680:	ldr	w1, [x0]
  459684:	ldr	x0, [sp, #88]
  459688:	add	x2, x0, #0x8
  45968c:	ldr	x0, [sp, #88]
  459690:	ldr	x3, [x0, #40]
  459694:	ldr	x0, [sp, #88]
  459698:	ldr	x0, [x0, #48]
  45969c:	str	x0, [sp]
  4596a0:	mov	x7, x3
  4596a4:	mov	x6, x2
  4596a8:	ldr	w5, [sp, #80]
  4596ac:	mov	w4, w1
  4596b0:	ldr	x3, [sp, #48]
  4596b4:	ldr	x2, [sp, #56]
  4596b8:	ldr	x1, [sp, #72]
  4596bc:	ldr	x0, [sp, #64]
  4596c0:	bl	4580b4 <argp_usage@@Base+0xefc8>
  4596c4:	bl	404bc0 <__errno_location@plt>
  4596c8:	mov	x1, x0
  4596cc:	ldr	w0, [sp, #84]
  4596d0:	str	w0, [x1]
  4596d4:	ldr	x0, [sp, #40]
  4596d8:	cmp	x0, #0x0
  4596dc:	b.eq	4596f0 <argp_usage@@Base+0x10604>  // b.none
  4596e0:	ldr	x0, [sp, #72]
  4596e4:	sub	x1, x0, #0x1
  4596e8:	ldr	x0, [sp, #40]
  4596ec:	str	x1, [x0]
  4596f0:	ldr	x0, [sp, #64]
  4596f4:	ldp	x29, x30, [sp, #16]
  4596f8:	add	sp, sp, #0x60
  4596fc:	ret
  459700:	stp	x29, x30, [sp, #-32]!
  459704:	mov	x29, sp
  459708:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45970c:	add	x0, x0, #0x438
  459710:	ldr	x0, [x0]
  459714:	str	x0, [sp, #16]
  459718:	mov	w0, #0x1                   	// #1
  45971c:	str	w0, [sp, #28]
  459720:	b	459748 <argp_usage@@Base+0x1065c>
  459724:	ldrsw	x0, [sp, #28]
  459728:	lsl	x0, x0, #4
  45972c:	ldr	x1, [sp, #16]
  459730:	add	x0, x1, x0
  459734:	ldr	x0, [x0, #8]
  459738:	bl	404880 <free@plt>
  45973c:	ldr	w0, [sp, #28]
  459740:	add	w0, w0, #0x1
  459744:	str	w0, [sp, #28]
  459748:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45974c:	add	x0, x0, #0x420
  459750:	ldr	w0, [x0]
  459754:	ldr	w1, [sp, #28]
  459758:	cmp	w1, w0
  45975c:	b.lt	459724 <argp_usage@@Base+0x10638>  // b.tstop
  459760:	ldr	x0, [sp, #16]
  459764:	ldr	x1, [x0, #8]
  459768:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45976c:	add	x0, x0, #0xe48
  459770:	cmp	x1, x0
  459774:	b.eq	4597a8 <argp_usage@@Base+0x106bc>  // b.none
  459778:	ldr	x0, [sp, #16]
  45977c:	ldr	x0, [x0, #8]
  459780:	bl	404880 <free@plt>
  459784:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459788:	add	x0, x0, #0x428
  45978c:	mov	x1, #0x100                 	// #256
  459790:	str	x1, [x0]
  459794:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459798:	add	x0, x0, #0x428
  45979c:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4597a0:	add	x1, x1, #0xe48
  4597a4:	str	x1, [x0, #8]
  4597a8:	ldr	x1, [sp, #16]
  4597ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4597b0:	add	x0, x0, #0x428
  4597b4:	cmp	x1, x0
  4597b8:	b.eq	4597d8 <argp_usage@@Base+0x106ec>  // b.none
  4597bc:	ldr	x0, [sp, #16]
  4597c0:	bl	404880 <free@plt>
  4597c4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4597c8:	add	x0, x0, #0x438
  4597cc:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4597d0:	add	x1, x1, #0x428
  4597d4:	str	x1, [x0]
  4597d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4597dc:	add	x0, x0, #0x420
  4597e0:	mov	w1, #0x1                   	// #1
  4597e4:	str	w1, [x0]
  4597e8:	nop
  4597ec:	ldp	x29, x30, [sp], #32
  4597f0:	ret
  4597f4:	sub	sp, sp, #0x80
  4597f8:	stp	x29, x30, [sp, #16]
  4597fc:	add	x29, sp, #0x10
  459800:	str	w0, [sp, #60]
  459804:	str	x1, [sp, #48]
  459808:	str	x2, [sp, #40]
  45980c:	str	x3, [sp, #32]
  459810:	bl	404bc0 <__errno_location@plt>
  459814:	ldr	w0, [x0]
  459818:	str	w0, [sp, #108]
  45981c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459820:	add	x0, x0, #0x438
  459824:	ldr	x0, [x0]
  459828:	str	x0, [sp, #120]
  45982c:	ldr	w0, [sp, #60]
  459830:	cmp	w0, #0x0
  459834:	b.ge	45983c <argp_usage@@Base+0x10750>  // b.tcont
  459838:	bl	404710 <abort@plt>
  45983c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459840:	add	x0, x0, #0x420
  459844:	ldr	w0, [x0]
  459848:	ldr	w1, [sp, #60]
  45984c:	cmp	w1, w0
  459850:	b.lt	459948 <argp_usage@@Base+0x1085c>  // b.tstop
  459854:	ldr	x1, [sp, #120]
  459858:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45985c:	add	x0, x0, #0x428
  459860:	cmp	x1, x0
  459864:	cset	w0, eq  // eq = none
  459868:	strb	w0, [sp, #107]
  45986c:	mov	w0, #0x7ffffffe            	// #2147483646
  459870:	str	w0, [sp, #100]
  459874:	ldr	w1, [sp, #100]
  459878:	ldr	w0, [sp, #60]
  45987c:	cmp	w1, w0
  459880:	b.ge	459888 <argp_usage@@Base+0x1079c>  // b.tcont
  459884:	bl	412b2c <wcrtomb@plt+0xde1c>
  459888:	ldrb	w0, [sp, #107]
  45988c:	cmp	w0, #0x0
  459890:	b.eq	45989c <argp_usage@@Base+0x107b0>  // b.none
  459894:	mov	x0, #0x0                   	// #0
  459898:	b	4598a0 <argp_usage@@Base+0x107b4>
  45989c:	ldr	x0, [sp, #120]
  4598a0:	ldr	w1, [sp, #60]
  4598a4:	add	w1, w1, #0x1
  4598a8:	sxtw	x1, w1
  4598ac:	lsl	x1, x1, #4
  4598b0:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  4598b4:	str	x0, [sp, #120]
  4598b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4598bc:	add	x0, x0, #0x438
  4598c0:	ldr	x1, [sp, #120]
  4598c4:	str	x1, [x0]
  4598c8:	ldrb	w0, [sp, #107]
  4598cc:	cmp	w0, #0x0
  4598d0:	b.eq	4598e8 <argp_usage@@Base+0x107fc>  // b.none
  4598d4:	ldr	x2, [sp, #120]
  4598d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4598dc:	add	x0, x0, #0x428
  4598e0:	ldp	x0, x1, [x0]
  4598e4:	stp	x0, x1, [x2]
  4598e8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  4598ec:	add	x0, x0, #0x420
  4598f0:	ldr	w0, [x0]
  4598f4:	sxtw	x0, w0
  4598f8:	lsl	x0, x0, #4
  4598fc:	ldr	x1, [sp, #120]
  459900:	add	x3, x1, x0
  459904:	ldr	w0, [sp, #60]
  459908:	add	w1, w0, #0x1
  45990c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459910:	add	x0, x0, #0x420
  459914:	ldr	w0, [x0]
  459918:	sub	w0, w1, w0
  45991c:	sxtw	x0, w0
  459920:	lsl	x0, x0, #4
  459924:	mov	x2, x0
  459928:	mov	w1, #0x0                   	// #0
  45992c:	mov	x0, x3
  459930:	bl	4044d0 <memset@plt>
  459934:	ldr	w0, [sp, #60]
  459938:	add	w1, w0, #0x1
  45993c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459940:	add	x0, x0, #0x420
  459944:	str	w1, [x0]
  459948:	ldrsw	x0, [sp, #60]
  45994c:	lsl	x0, x0, #4
  459950:	ldr	x1, [sp, #120]
  459954:	add	x0, x1, x0
  459958:	ldr	x0, [x0]
  45995c:	str	x0, [sp, #88]
  459960:	ldrsw	x0, [sp, #60]
  459964:	lsl	x0, x0, #4
  459968:	ldr	x1, [sp, #120]
  45996c:	add	x0, x1, x0
  459970:	ldr	x0, [x0, #8]
  459974:	str	x0, [sp, #112]
  459978:	ldr	x0, [sp, #32]
  45997c:	ldr	w0, [x0, #4]
  459980:	orr	w0, w0, #0x1
  459984:	str	w0, [sp, #84]
  459988:	ldr	x0, [sp, #32]
  45998c:	ldr	w1, [x0]
  459990:	ldr	x0, [sp, #32]
  459994:	add	x2, x0, #0x8
  459998:	ldr	x0, [sp, #32]
  45999c:	ldr	x3, [x0, #40]
  4599a0:	ldr	x0, [sp, #32]
  4599a4:	ldr	x0, [x0, #48]
  4599a8:	str	x0, [sp]
  4599ac:	mov	x7, x3
  4599b0:	mov	x6, x2
  4599b4:	ldr	w5, [sp, #84]
  4599b8:	mov	w4, w1
  4599bc:	ldr	x3, [sp, #40]
  4599c0:	ldr	x2, [sp, #48]
  4599c4:	ldr	x1, [sp, #88]
  4599c8:	ldr	x0, [sp, #112]
  4599cc:	bl	4580b4 <argp_usage@@Base+0xefc8>
  4599d0:	str	x0, [sp, #72]
  4599d4:	ldr	x1, [sp, #88]
  4599d8:	ldr	x0, [sp, #72]
  4599dc:	cmp	x1, x0
  4599e0:	b.hi	459a90 <argp_usage@@Base+0x109a4>  // b.pmore
  4599e4:	ldr	x0, [sp, #72]
  4599e8:	add	x0, x0, #0x1
  4599ec:	str	x0, [sp, #88]
  4599f0:	ldrsw	x0, [sp, #60]
  4599f4:	lsl	x0, x0, #4
  4599f8:	ldr	x1, [sp, #120]
  4599fc:	add	x0, x1, x0
  459a00:	ldr	x1, [sp, #88]
  459a04:	str	x1, [x0]
  459a08:	ldr	x1, [sp, #112]
  459a0c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459a10:	add	x0, x0, #0xe48
  459a14:	cmp	x1, x0
  459a18:	b.eq	459a24 <argp_usage@@Base+0x10938>  // b.none
  459a1c:	ldr	x0, [sp, #112]
  459a20:	bl	404880 <free@plt>
  459a24:	ldr	x0, [sp, #88]
  459a28:	bl	45b688 <argp_usage@@Base+0x1259c>
  459a2c:	str	x0, [sp, #112]
  459a30:	ldrsw	x0, [sp, #60]
  459a34:	lsl	x0, x0, #4
  459a38:	ldr	x1, [sp, #120]
  459a3c:	add	x0, x1, x0
  459a40:	ldr	x1, [sp, #112]
  459a44:	str	x1, [x0, #8]
  459a48:	ldr	x0, [sp, #32]
  459a4c:	ldr	w1, [x0]
  459a50:	ldr	x0, [sp, #32]
  459a54:	add	x2, x0, #0x8
  459a58:	ldr	x0, [sp, #32]
  459a5c:	ldr	x3, [x0, #40]
  459a60:	ldr	x0, [sp, #32]
  459a64:	ldr	x0, [x0, #48]
  459a68:	str	x0, [sp]
  459a6c:	mov	x7, x3
  459a70:	mov	x6, x2
  459a74:	ldr	w5, [sp, #84]
  459a78:	mov	w4, w1
  459a7c:	ldr	x3, [sp, #40]
  459a80:	ldr	x2, [sp, #48]
  459a84:	ldr	x1, [sp, #88]
  459a88:	ldr	x0, [sp, #112]
  459a8c:	bl	4580b4 <argp_usage@@Base+0xefc8>
  459a90:	bl	404bc0 <__errno_location@plt>
  459a94:	mov	x1, x0
  459a98:	ldr	w0, [sp, #108]
  459a9c:	str	w0, [x1]
  459aa0:	ldr	x0, [sp, #112]
  459aa4:	ldp	x29, x30, [sp, #16]
  459aa8:	add	sp, sp, #0x80
  459aac:	ret
  459ab0:	stp	x29, x30, [sp, #-32]!
  459ab4:	mov	x29, sp
  459ab8:	str	w0, [sp, #28]
  459abc:	str	x1, [sp, #16]
  459ac0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459ac4:	add	x3, x0, #0xe10
  459ac8:	mov	x2, #0xffffffffffffffff    	// #-1
  459acc:	ldr	x1, [sp, #16]
  459ad0:	ldr	w0, [sp, #28]
  459ad4:	bl	4597f4 <argp_usage@@Base+0x10708>
  459ad8:	ldp	x29, x30, [sp], #32
  459adc:	ret
  459ae0:	stp	x29, x30, [sp, #-48]!
  459ae4:	mov	x29, sp
  459ae8:	str	w0, [sp, #44]
  459aec:	str	x1, [sp, #32]
  459af0:	str	x2, [sp, #24]
  459af4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459af8:	add	x3, x0, #0xe10
  459afc:	ldr	x2, [sp, #24]
  459b00:	ldr	x1, [sp, #32]
  459b04:	ldr	w0, [sp, #44]
  459b08:	bl	4597f4 <argp_usage@@Base+0x10708>
  459b0c:	ldp	x29, x30, [sp], #48
  459b10:	ret
  459b14:	stp	x29, x30, [sp, #-32]!
  459b18:	mov	x29, sp
  459b1c:	str	x0, [sp, #24]
  459b20:	ldr	x1, [sp, #24]
  459b24:	mov	w0, #0x0                   	// #0
  459b28:	bl	459ab0 <argp_usage@@Base+0x109c4>
  459b2c:	ldp	x29, x30, [sp], #32
  459b30:	ret
  459b34:	stp	x29, x30, [sp, #-32]!
  459b38:	mov	x29, sp
  459b3c:	str	x0, [sp, #24]
  459b40:	str	x1, [sp, #16]
  459b44:	ldr	x2, [sp, #16]
  459b48:	ldr	x1, [sp, #24]
  459b4c:	mov	w0, #0x0                   	// #0
  459b50:	bl	459ae0 <argp_usage@@Base+0x109f4>
  459b54:	ldp	x29, x30, [sp], #32
  459b58:	ret
  459b5c:	stp	x29, x30, [sp, #-96]!
  459b60:	mov	x29, sp
  459b64:	str	w0, [sp, #28]
  459b68:	str	w1, [sp, #24]
  459b6c:	str	x2, [sp, #16]
  459b70:	add	x0, sp, #0x28
  459b74:	mov	x8, x0
  459b78:	ldr	w0, [sp, #24]
  459b7c:	bl	457f6c <argp_usage@@Base+0xee80>
  459b80:	add	x0, sp, #0x28
  459b84:	mov	x3, x0
  459b88:	mov	x2, #0xffffffffffffffff    	// #-1
  459b8c:	ldr	x1, [sp, #16]
  459b90:	ldr	w0, [sp, #28]
  459b94:	bl	4597f4 <argp_usage@@Base+0x10708>
  459b98:	ldp	x29, x30, [sp], #96
  459b9c:	ret
  459ba0:	stp	x29, x30, [sp, #-112]!
  459ba4:	mov	x29, sp
  459ba8:	str	w0, [sp, #44]
  459bac:	str	w1, [sp, #40]
  459bb0:	str	x2, [sp, #32]
  459bb4:	str	x3, [sp, #24]
  459bb8:	add	x0, sp, #0x38
  459bbc:	mov	x8, x0
  459bc0:	ldr	w0, [sp, #40]
  459bc4:	bl	457f6c <argp_usage@@Base+0xee80>
  459bc8:	add	x0, sp, #0x38
  459bcc:	mov	x3, x0
  459bd0:	ldr	x2, [sp, #24]
  459bd4:	ldr	x1, [sp, #32]
  459bd8:	ldr	w0, [sp, #44]
  459bdc:	bl	4597f4 <argp_usage@@Base+0x10708>
  459be0:	ldp	x29, x30, [sp], #112
  459be4:	ret
  459be8:	stp	x29, x30, [sp, #-32]!
  459bec:	mov	x29, sp
  459bf0:	str	w0, [sp, #28]
  459bf4:	str	x1, [sp, #16]
  459bf8:	ldr	x2, [sp, #16]
  459bfc:	ldr	w1, [sp, #28]
  459c00:	mov	w0, #0x0                   	// #0
  459c04:	bl	459b5c <argp_usage@@Base+0x10a70>
  459c08:	ldp	x29, x30, [sp], #32
  459c0c:	ret
  459c10:	stp	x29, x30, [sp, #-48]!
  459c14:	mov	x29, sp
  459c18:	str	w0, [sp, #44]
  459c1c:	str	x1, [sp, #32]
  459c20:	str	x2, [sp, #24]
  459c24:	ldr	x3, [sp, #24]
  459c28:	ldr	x2, [sp, #32]
  459c2c:	ldr	w1, [sp, #44]
  459c30:	mov	w0, #0x0                   	// #0
  459c34:	bl	459ba0 <argp_usage@@Base+0x10ab4>
  459c38:	ldp	x29, x30, [sp], #48
  459c3c:	ret
  459c40:	stp	x29, x30, [sp, #-112]!
  459c44:	mov	x29, sp
  459c48:	str	x0, [sp, #40]
  459c4c:	str	x1, [sp, #32]
  459c50:	strb	w2, [sp, #31]
  459c54:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459c58:	add	x1, x0, #0xe10
  459c5c:	add	x0, sp, #0x38
  459c60:	ldp	x2, x3, [x1]
  459c64:	stp	x2, x3, [x0]
  459c68:	ldp	x2, x3, [x1, #16]
  459c6c:	stp	x2, x3, [x0, #16]
  459c70:	ldp	x2, x3, [x1, #32]
  459c74:	stp	x2, x3, [x0, #32]
  459c78:	ldr	x1, [x1, #48]
  459c7c:	str	x1, [x0, #48]
  459c80:	add	x0, sp, #0x38
  459c84:	mov	w2, #0x1                   	// #1
  459c88:	ldrb	w1, [sp, #31]
  459c8c:	bl	457dfc <argp_usage@@Base+0xed10>
  459c90:	add	x0, sp, #0x38
  459c94:	mov	x3, x0
  459c98:	ldr	x2, [sp, #32]
  459c9c:	ldr	x1, [sp, #40]
  459ca0:	mov	w0, #0x0                   	// #0
  459ca4:	bl	4597f4 <argp_usage@@Base+0x10708>
  459ca8:	ldp	x29, x30, [sp], #112
  459cac:	ret
  459cb0:	stp	x29, x30, [sp, #-32]!
  459cb4:	mov	x29, sp
  459cb8:	str	x0, [sp, #24]
  459cbc:	strb	w1, [sp, #23]
  459cc0:	ldrb	w2, [sp, #23]
  459cc4:	mov	x1, #0xffffffffffffffff    	// #-1
  459cc8:	ldr	x0, [sp, #24]
  459ccc:	bl	459c40 <argp_usage@@Base+0x10b54>
  459cd0:	ldp	x29, x30, [sp], #32
  459cd4:	ret
  459cd8:	stp	x29, x30, [sp, #-32]!
  459cdc:	mov	x29, sp
  459ce0:	str	x0, [sp, #24]
  459ce4:	mov	w1, #0x3a                  	// #58
  459ce8:	ldr	x0, [sp, #24]
  459cec:	bl	459cb0 <argp_usage@@Base+0x10bc4>
  459cf0:	ldp	x29, x30, [sp], #32
  459cf4:	ret
  459cf8:	stp	x29, x30, [sp, #-32]!
  459cfc:	mov	x29, sp
  459d00:	str	x0, [sp, #24]
  459d04:	str	x1, [sp, #16]
  459d08:	mov	w2, #0x3a                  	// #58
  459d0c:	ldr	x1, [sp, #16]
  459d10:	ldr	x0, [sp, #24]
  459d14:	bl	459c40 <argp_usage@@Base+0x10b54>
  459d18:	ldp	x29, x30, [sp], #32
  459d1c:	ret
  459d20:	stp	x29, x30, [sp, #-160]!
  459d24:	mov	x29, sp
  459d28:	str	w0, [sp, #92]
  459d2c:	str	w1, [sp, #88]
  459d30:	str	x2, [sp, #80]
  459d34:	add	x0, sp, #0x10
  459d38:	mov	x8, x0
  459d3c:	ldr	w0, [sp, #88]
  459d40:	bl	457f6c <argp_usage@@Base+0xee80>
  459d44:	add	x0, sp, #0x68
  459d48:	add	x1, sp, #0x10
  459d4c:	ldp	x2, x3, [x1]
  459d50:	stp	x2, x3, [x0]
  459d54:	ldp	x2, x3, [x1, #16]
  459d58:	stp	x2, x3, [x0, #16]
  459d5c:	ldp	x2, x3, [x1, #32]
  459d60:	stp	x2, x3, [x0, #32]
  459d64:	ldr	x1, [x1, #48]
  459d68:	str	x1, [x0, #48]
  459d6c:	add	x0, sp, #0x68
  459d70:	mov	w2, #0x1                   	// #1
  459d74:	mov	w1, #0x3a                  	// #58
  459d78:	bl	457dfc <argp_usage@@Base+0xed10>
  459d7c:	add	x0, sp, #0x68
  459d80:	mov	x3, x0
  459d84:	mov	x2, #0xffffffffffffffff    	// #-1
  459d88:	ldr	x1, [sp, #80]
  459d8c:	ldr	w0, [sp, #92]
  459d90:	bl	4597f4 <argp_usage@@Base+0x10708>
  459d94:	ldp	x29, x30, [sp], #160
  459d98:	ret
  459d9c:	stp	x29, x30, [sp, #-48]!
  459da0:	mov	x29, sp
  459da4:	str	w0, [sp, #44]
  459da8:	str	x1, [sp, #32]
  459dac:	str	x2, [sp, #24]
  459db0:	str	x3, [sp, #16]
  459db4:	mov	x4, #0xffffffffffffffff    	// #-1
  459db8:	ldr	x3, [sp, #16]
  459dbc:	ldr	x2, [sp, #24]
  459dc0:	ldr	x1, [sp, #32]
  459dc4:	ldr	w0, [sp, #44]
  459dc8:	bl	459dd4 <argp_usage@@Base+0x10ce8>
  459dcc:	ldp	x29, x30, [sp], #48
  459dd0:	ret
  459dd4:	stp	x29, x30, [sp, #-128]!
  459dd8:	mov	x29, sp
  459ddc:	str	w0, [sp, #60]
  459de0:	str	x1, [sp, #48]
  459de4:	str	x2, [sp, #40]
  459de8:	str	x3, [sp, #32]
  459dec:	str	x4, [sp, #24]
  459df0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459df4:	add	x1, x0, #0xe10
  459df8:	add	x0, sp, #0x48
  459dfc:	ldp	x2, x3, [x1]
  459e00:	stp	x2, x3, [x0]
  459e04:	ldp	x2, x3, [x1, #16]
  459e08:	stp	x2, x3, [x0, #16]
  459e0c:	ldp	x2, x3, [x1, #32]
  459e10:	stp	x2, x3, [x0, #32]
  459e14:	ldr	x1, [x1, #48]
  459e18:	str	x1, [x0, #48]
  459e1c:	add	x0, sp, #0x48
  459e20:	ldr	x2, [sp, #40]
  459e24:	ldr	x1, [sp, #48]
  459e28:	bl	457ef4 <argp_usage@@Base+0xee08>
  459e2c:	add	x0, sp, #0x48
  459e30:	mov	x3, x0
  459e34:	ldr	x2, [sp, #24]
  459e38:	ldr	x1, [sp, #32]
  459e3c:	ldr	w0, [sp, #60]
  459e40:	bl	4597f4 <argp_usage@@Base+0x10708>
  459e44:	ldp	x29, x30, [sp], #128
  459e48:	ret
  459e4c:	stp	x29, x30, [sp, #-48]!
  459e50:	mov	x29, sp
  459e54:	str	x0, [sp, #40]
  459e58:	str	x1, [sp, #32]
  459e5c:	str	x2, [sp, #24]
  459e60:	ldr	x3, [sp, #24]
  459e64:	ldr	x2, [sp, #32]
  459e68:	ldr	x1, [sp, #40]
  459e6c:	mov	w0, #0x0                   	// #0
  459e70:	bl	459d9c <argp_usage@@Base+0x10cb0>
  459e74:	ldp	x29, x30, [sp], #48
  459e78:	ret
  459e7c:	stp	x29, x30, [sp, #-48]!
  459e80:	mov	x29, sp
  459e84:	str	x0, [sp, #40]
  459e88:	str	x1, [sp, #32]
  459e8c:	str	x2, [sp, #24]
  459e90:	str	x3, [sp, #16]
  459e94:	ldr	x4, [sp, #16]
  459e98:	ldr	x3, [sp, #24]
  459e9c:	ldr	x2, [sp, #32]
  459ea0:	ldr	x1, [sp, #40]
  459ea4:	mov	w0, #0x0                   	// #0
  459ea8:	bl	459dd4 <argp_usage@@Base+0x10ce8>
  459eac:	ldp	x29, x30, [sp], #48
  459eb0:	ret
  459eb4:	stp	x29, x30, [sp, #-48]!
  459eb8:	mov	x29, sp
  459ebc:	str	w0, [sp, #44]
  459ec0:	str	x1, [sp, #32]
  459ec4:	str	x2, [sp, #24]
  459ec8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  459ecc:	add	x3, x0, #0x440
  459ed0:	ldr	x2, [sp, #24]
  459ed4:	ldr	x1, [sp, #32]
  459ed8:	ldr	w0, [sp, #44]
  459edc:	bl	4597f4 <argp_usage@@Base+0x10708>
  459ee0:	ldp	x29, x30, [sp], #48
  459ee4:	ret
  459ee8:	stp	x29, x30, [sp, #-32]!
  459eec:	mov	x29, sp
  459ef0:	str	x0, [sp, #24]
  459ef4:	str	x1, [sp, #16]
  459ef8:	ldr	x2, [sp, #16]
  459efc:	ldr	x1, [sp, #24]
  459f00:	mov	w0, #0x0                   	// #0
  459f04:	bl	459eb4 <argp_usage@@Base+0x10dc8>
  459f08:	ldp	x29, x30, [sp], #32
  459f0c:	ret
  459f10:	stp	x29, x30, [sp, #-32]!
  459f14:	mov	x29, sp
  459f18:	str	w0, [sp, #28]
  459f1c:	str	x1, [sp, #16]
  459f20:	mov	x2, #0xffffffffffffffff    	// #-1
  459f24:	ldr	x1, [sp, #16]
  459f28:	ldr	w0, [sp, #28]
  459f2c:	bl	459eb4 <argp_usage@@Base+0x10dc8>
  459f30:	ldp	x29, x30, [sp], #32
  459f34:	ret
  459f38:	stp	x29, x30, [sp, #-32]!
  459f3c:	mov	x29, sp
  459f40:	str	x0, [sp, #24]
  459f44:	ldr	x1, [sp, #24]
  459f48:	mov	w0, #0x0                   	// #0
  459f4c:	bl	459f10 <argp_usage@@Base+0x10e24>
  459f50:	ldp	x29, x30, [sp], #32
  459f54:	ret
  459f58:	stp	x29, x30, [sp, #-32]!
  459f5c:	mov	x29, sp
  459f60:	str	w0, [sp, #28]
  459f64:	bl	404bc0 <__errno_location@plt>
  459f68:	mov	x1, x0
  459f6c:	ldr	w0, [sp, #28]
  459f70:	str	w0, [x1]
  459f74:	mov	w0, #0xffffffff            	// #-1
  459f78:	ldp	x29, x30, [sp], #32
  459f7c:	ret
  459f80:	stp	x29, x30, [sp, #-368]!
  459f84:	mov	x29, sp
  459f88:	str	w0, [sp, #44]
  459f8c:	str	x1, [sp, #32]
  459f90:	str	w2, [sp, #40]
  459f94:	str	x3, [sp, #24]
  459f98:	str	w4, [sp, #20]
  459f9c:	mov	w0, #0xffffffff            	// #-1
  459fa0:	str	w0, [sp, #360]
  459fa4:	mov	w0, #0x16                  	// #22
  459fa8:	str	w0, [sp, #356]
  459fac:	ldr	w4, [sp, #20]
  459fb0:	ldr	x3, [sp, #24]
  459fb4:	ldr	w2, [sp, #40]
  459fb8:	ldr	x1, [sp, #32]
  459fbc:	ldr	w0, [sp, #44]
  459fc0:	bl	404890 <renameat2@plt>
  459fc4:	str	w0, [sp, #360]
  459fc8:	bl	404bc0 <__errno_location@plt>
  459fcc:	ldr	w0, [x0]
  459fd0:	str	w0, [sp, #356]
  459fd4:	ldr	w0, [sp, #360]
  459fd8:	cmp	w0, #0x0
  459fdc:	b.ge	45a004 <argp_usage@@Base+0x10f18>  // b.tcont
  459fe0:	ldr	w0, [sp, #356]
  459fe4:	cmp	w0, #0x16
  459fe8:	b.eq	45a00c <argp_usage@@Base+0x10f20>  // b.none
  459fec:	ldr	w0, [sp, #356]
  459ff0:	cmp	w0, #0x26
  459ff4:	b.eq	45a00c <argp_usage@@Base+0x10f20>  // b.none
  459ff8:	ldr	w0, [sp, #356]
  459ffc:	cmp	w0, #0x5f
  45a000:	b.eq	45a00c <argp_usage@@Base+0x10f20>  // b.none
  45a004:	ldr	w0, [sp, #360]
  45a008:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a00c:	ldr	x0, [sp, #32]
  45a010:	str	x0, [sp, #344]
  45a014:	ldr	x0, [sp, #24]
  45a018:	str	x0, [sp, #336]
  45a01c:	mov	w0, #0x14                  	// #20
  45a020:	str	w0, [sp, #332]
  45a024:	strb	wzr, [sp, #367]
  45a028:	ldr	w0, [sp, #20]
  45a02c:	cmp	w0, #0x0
  45a030:	b.eq	45a0a8 <argp_usage@@Base+0x10fbc>  // b.none
  45a034:	ldr	w0, [sp, #20]
  45a038:	and	w0, w0, #0xfffffffe
  45a03c:	cmp	w0, #0x0
  45a040:	b.eq	45a050 <argp_usage@@Base+0x10f64>  // b.none
  45a044:	mov	w0, #0x5f                  	// #95
  45a048:	bl	459f58 <argp_usage@@Base+0x10e6c>
  45a04c:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a050:	add	x0, sp, #0xb0
  45a054:	mov	x2, x0
  45a058:	ldr	x1, [sp, #24]
  45a05c:	ldr	w0, [sp, #40]
  45a060:	bl	45aa64 <argp_usage@@Base+0x11978>
  45a064:	cmp	w0, #0x0
  45a068:	b.eq	45a07c <argp_usage@@Base+0x10f90>  // b.none
  45a06c:	bl	404bc0 <__errno_location@plt>
  45a070:	ldr	w0, [x0]
  45a074:	cmp	w0, #0x4b
  45a078:	b.ne	45a088 <argp_usage@@Base+0x10f9c>  // b.any
  45a07c:	mov	w0, #0x11                  	// #17
  45a080:	bl	459f58 <argp_usage@@Base+0x10e6c>
  45a084:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a088:	bl	404bc0 <__errno_location@plt>
  45a08c:	ldr	w0, [x0]
  45a090:	cmp	w0, #0x2
  45a094:	b.eq	45a0a0 <argp_usage@@Base+0x10fb4>  // b.none
  45a098:	mov	w0, #0xffffffff            	// #-1
  45a09c:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a0a0:	mov	w0, #0x1                   	// #1
  45a0a4:	strb	w0, [sp, #367]
  45a0a8:	ldr	x0, [sp, #32]
  45a0ac:	bl	4040b0 <strlen@plt>
  45a0b0:	str	x0, [sp, #320]
  45a0b4:	ldr	x0, [sp, #24]
  45a0b8:	bl	4040b0 <strlen@plt>
  45a0bc:	str	x0, [sp, #312]
  45a0c0:	ldr	x0, [sp, #320]
  45a0c4:	cmp	x0, #0x0
  45a0c8:	b.eq	45a0d8 <argp_usage@@Base+0x10fec>  // b.none
  45a0cc:	ldr	x0, [sp, #312]
  45a0d0:	cmp	x0, #0x0
  45a0d4:	b.ne	45a0f0 <argp_usage@@Base+0x11004>  // b.any
  45a0d8:	ldr	x3, [sp, #24]
  45a0dc:	ldr	w2, [sp, #40]
  45a0e0:	ldr	x1, [sp, #32]
  45a0e4:	ldr	w0, [sp, #44]
  45a0e8:	bl	4048c0 <renameat@plt>
  45a0ec:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a0f0:	ldr	x0, [sp, #320]
  45a0f4:	sub	x0, x0, #0x1
  45a0f8:	ldr	x1, [sp, #32]
  45a0fc:	add	x0, x1, x0
  45a100:	ldrb	w0, [x0]
  45a104:	cmp	w0, #0x2f
  45a108:	cset	w0, eq  // eq = none
  45a10c:	strb	w0, [sp, #311]
  45a110:	ldr	x0, [sp, #312]
  45a114:	sub	x0, x0, #0x1
  45a118:	ldr	x1, [sp, #24]
  45a11c:	add	x0, x1, x0
  45a120:	ldrb	w0, [x0]
  45a124:	cmp	w0, #0x2f
  45a128:	cset	w0, eq  // eq = none
  45a12c:	strb	w0, [sp, #310]
  45a130:	ldrb	w0, [sp, #311]
  45a134:	eor	w0, w0, #0x1
  45a138:	and	w0, w0, #0xff
  45a13c:	cmp	w0, #0x0
  45a140:	b.eq	45a170 <argp_usage@@Base+0x11084>  // b.none
  45a144:	ldrb	w0, [sp, #310]
  45a148:	eor	w0, w0, #0x1
  45a14c:	and	w0, w0, #0xff
  45a150:	cmp	w0, #0x0
  45a154:	b.eq	45a170 <argp_usage@@Base+0x11084>  // b.none
  45a158:	ldr	x3, [sp, #24]
  45a15c:	ldr	w2, [sp, #40]
  45a160:	ldr	x1, [sp, #32]
  45a164:	ldr	w0, [sp, #44]
  45a168:	bl	4048c0 <renameat@plt>
  45a16c:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a170:	add	x0, sp, #0x30
  45a174:	mov	x2, x0
  45a178:	ldr	x1, [sp, #32]
  45a17c:	ldr	w0, [sp, #44]
  45a180:	bl	45aa64 <argp_usage@@Base+0x11978>
  45a184:	cmp	w0, #0x0
  45a188:	b.eq	45a194 <argp_usage@@Base+0x110a8>  // b.none
  45a18c:	mov	w0, #0xffffffff            	// #-1
  45a190:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a194:	ldrb	w0, [sp, #367]
  45a198:	cmp	w0, #0x0
  45a19c:	b.eq	45a1bc <argp_usage@@Base+0x110d0>  // b.none
  45a1a0:	ldr	w0, [sp, #64]
  45a1a4:	and	w0, w0, #0xf000
  45a1a8:	cmp	w0, #0x4, lsl #12
  45a1ac:	b.eq	45a238 <argp_usage@@Base+0x1114c>  // b.none
  45a1b0:	mov	w0, #0x2                   	// #2
  45a1b4:	bl	459f58 <argp_usage@@Base+0x10e6c>
  45a1b8:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a1bc:	add	x0, sp, #0xb0
  45a1c0:	mov	x2, x0
  45a1c4:	ldr	x1, [sp, #24]
  45a1c8:	ldr	w0, [sp, #40]
  45a1cc:	bl	45aa64 <argp_usage@@Base+0x11978>
  45a1d0:	cmp	w0, #0x0
  45a1d4:	b.eq	45a200 <argp_usage@@Base+0x11114>  // b.none
  45a1d8:	bl	404bc0 <__errno_location@plt>
  45a1dc:	ldr	w0, [x0]
  45a1e0:	cmp	w0, #0x2
  45a1e4:	b.ne	45a1f8 <argp_usage@@Base+0x1110c>  // b.any
  45a1e8:	ldr	w0, [sp, #64]
  45a1ec:	and	w0, w0, #0xf000
  45a1f0:	cmp	w0, #0x4, lsl #12
  45a1f4:	b.eq	45a238 <argp_usage@@Base+0x1114c>  // b.none
  45a1f8:	mov	w0, #0xffffffff            	// #-1
  45a1fc:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a200:	ldr	w0, [sp, #192]
  45a204:	and	w0, w0, #0xf000
  45a208:	cmp	w0, #0x4, lsl #12
  45a20c:	b.eq	45a21c <argp_usage@@Base+0x11130>  // b.none
  45a210:	mov	w0, #0x14                  	// #20
  45a214:	bl	459f58 <argp_usage@@Base+0x10e6c>
  45a218:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a21c:	ldr	w0, [sp, #64]
  45a220:	and	w0, w0, #0xf000
  45a224:	cmp	w0, #0x4, lsl #12
  45a228:	b.eq	45a238 <argp_usage@@Base+0x1114c>  // b.none
  45a22c:	mov	w0, #0x15                  	// #21
  45a230:	bl	459f58 <argp_usage@@Base+0x10e6c>
  45a234:	b	45a2a4 <argp_usage@@Base+0x111b8>
  45a238:	ldr	x3, [sp, #336]
  45a23c:	ldr	w2, [sp, #40]
  45a240:	ldr	x1, [sp, #344]
  45a244:	ldr	w0, [sp, #44]
  45a248:	bl	4048c0 <renameat@plt>
  45a24c:	str	w0, [sp, #360]
  45a250:	bl	404bc0 <__errno_location@plt>
  45a254:	ldr	w0, [x0]
  45a258:	str	w0, [sp, #332]
  45a25c:	nop
  45a260:	ldr	x1, [sp, #344]
  45a264:	ldr	x0, [sp, #32]
  45a268:	cmp	x1, x0
  45a26c:	b.eq	45a278 <argp_usage@@Base+0x1118c>  // b.none
  45a270:	ldr	x0, [sp, #344]
  45a274:	bl	404880 <free@plt>
  45a278:	ldr	x1, [sp, #336]
  45a27c:	ldr	x0, [sp, #24]
  45a280:	cmp	x1, x0
  45a284:	b.eq	45a290 <argp_usage@@Base+0x111a4>  // b.none
  45a288:	ldr	x0, [sp, #336]
  45a28c:	bl	404880 <free@plt>
  45a290:	bl	404bc0 <__errno_location@plt>
  45a294:	mov	x1, x0
  45a298:	ldr	w0, [sp, #332]
  45a29c:	str	w0, [x1]
  45a2a0:	ldr	w0, [sp, #360]
  45a2a4:	ldp	x29, x30, [sp], #368
  45a2a8:	ret
  45a2ac:	stp	x29, x30, [sp, #-64]!
  45a2b0:	mov	x29, sp
  45a2b4:	str	w0, [sp, #44]
  45a2b8:	str	x1, [sp, #32]
  45a2bc:	str	x2, [sp, #24]
  45a2c0:	ldr	x2, [sp, #24]
  45a2c4:	ldr	x1, [sp, #32]
  45a2c8:	ldr	w0, [sp, #44]
  45a2cc:	bl	404a10 <read@plt>
  45a2d0:	str	x0, [sp, #56]
  45a2d4:	ldr	x0, [sp, #56]
  45a2d8:	cmp	x0, #0x0
  45a2dc:	b.lt	45a2e8 <argp_usage@@Base+0x111fc>  // b.tstop
  45a2e0:	ldr	x0, [sp, #56]
  45a2e4:	b	45a334 <argp_usage@@Base+0x11248>
  45a2e8:	bl	404bc0 <__errno_location@plt>
  45a2ec:	ldr	w0, [x0]
  45a2f0:	cmp	w0, #0x4
  45a2f4:	b.eq	45a32c <argp_usage@@Base+0x11240>  // b.none
  45a2f8:	bl	404bc0 <__errno_location@plt>
  45a2fc:	ldr	w0, [x0]
  45a300:	cmp	w0, #0x16
  45a304:	b.ne	45a324 <argp_usage@@Base+0x11238>  // b.any
  45a308:	ldr	x1, [sp, #24]
  45a30c:	mov	x0, #0x7ff00000            	// #2146435072
  45a310:	cmp	x1, x0
  45a314:	b.ls	45a324 <argp_usage@@Base+0x11238>  // b.plast
  45a318:	mov	x0, #0x7ff00000            	// #2146435072
  45a31c:	str	x0, [sp, #24]
  45a320:	b	45a330 <argp_usage@@Base+0x11244>
  45a324:	ldr	x0, [sp, #56]
  45a328:	b	45a334 <argp_usage@@Base+0x11248>
  45a32c:	nop
  45a330:	b	45a2c0 <argp_usage@@Base+0x111d4>
  45a334:	ldp	x29, x30, [sp], #64
  45a338:	ret
  45a33c:	stp	x29, x30, [sp, #-64]!
  45a340:	mov	x29, sp
  45a344:	str	w0, [sp, #44]
  45a348:	str	x1, [sp, #32]
  45a34c:	str	x2, [sp, #24]
  45a350:	ldr	x2, [sp, #24]
  45a354:	ldr	x1, [sp, #32]
  45a358:	ldr	w0, [sp, #44]
  45a35c:	bl	4046d0 <write@plt>
  45a360:	str	x0, [sp, #56]
  45a364:	ldr	x0, [sp, #56]
  45a368:	cmp	x0, #0x0
  45a36c:	b.lt	45a378 <argp_usage@@Base+0x1128c>  // b.tstop
  45a370:	ldr	x0, [sp, #56]
  45a374:	b	45a3c4 <argp_usage@@Base+0x112d8>
  45a378:	bl	404bc0 <__errno_location@plt>
  45a37c:	ldr	w0, [x0]
  45a380:	cmp	w0, #0x4
  45a384:	b.eq	45a3bc <argp_usage@@Base+0x112d0>  // b.none
  45a388:	bl	404bc0 <__errno_location@plt>
  45a38c:	ldr	w0, [x0]
  45a390:	cmp	w0, #0x16
  45a394:	b.ne	45a3b4 <argp_usage@@Base+0x112c8>  // b.any
  45a398:	ldr	x1, [sp, #24]
  45a39c:	mov	x0, #0x7ff00000            	// #2146435072
  45a3a0:	cmp	x1, x0
  45a3a4:	b.ls	45a3b4 <argp_usage@@Base+0x112c8>  // b.plast
  45a3a8:	mov	x0, #0x7ff00000            	// #2146435072
  45a3ac:	str	x0, [sp, #24]
  45a3b0:	b	45a3c0 <argp_usage@@Base+0x112d4>
  45a3b4:	ldr	x0, [sp, #56]
  45a3b8:	b	45a3c4 <argp_usage@@Base+0x112d8>
  45a3bc:	nop
  45a3c0:	b	45a350 <argp_usage@@Base+0x11264>
  45a3c4:	ldp	x29, x30, [sp], #64
  45a3c8:	ret
  45a3cc:	stp	x29, x30, [sp, #-32]!
  45a3d0:	mov	x29, sp
  45a3d4:	str	x0, [sp, #24]
  45a3d8:	ldr	x0, [sp, #24]
  45a3dc:	str	xzr, [x0, #8]
  45a3e0:	mov	w1, #0x80000               	// #524288
  45a3e4:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45a3e8:	add	x0, x0, #0xef8
  45a3ec:	bl	476c94 <_obstack_memory_used@@Base+0x19b54>
  45a3f0:	mov	w1, w0
  45a3f4:	ldr	x0, [sp, #24]
  45a3f8:	str	w1, [x0]
  45a3fc:	ldr	x0, [sp, #24]
  45a400:	ldr	w0, [x0]
  45a404:	cmp	w0, #0x0
  45a408:	b.ge	45a444 <argp_usage@@Base+0x11358>  // b.tcont
  45a40c:	mov	x1, #0x0                   	// #0
  45a410:	mov	x0, #0x0                   	// #0
  45a414:	bl	404060 <getcwd@plt>
  45a418:	mov	x1, x0
  45a41c:	ldr	x0, [sp, #24]
  45a420:	str	x1, [x0, #8]
  45a424:	ldr	x0, [sp, #24]
  45a428:	ldr	x0, [x0, #8]
  45a42c:	cmp	x0, #0x0
  45a430:	b.eq	45a43c <argp_usage@@Base+0x11350>  // b.none
  45a434:	mov	w0, #0x0                   	// #0
  45a438:	b	45a448 <argp_usage@@Base+0x1135c>
  45a43c:	mov	w0, #0xffffffff            	// #-1
  45a440:	b	45a448 <argp_usage@@Base+0x1135c>
  45a444:	mov	w0, #0x0                   	// #0
  45a448:	ldp	x29, x30, [sp], #32
  45a44c:	ret
  45a450:	stp	x29, x30, [sp, #-32]!
  45a454:	mov	x29, sp
  45a458:	str	x0, [sp, #24]
  45a45c:	ldr	x0, [sp, #24]
  45a460:	ldr	w0, [x0]
  45a464:	cmp	w0, #0x0
  45a468:	b.lt	45a47c <argp_usage@@Base+0x11390>  // b.tstop
  45a46c:	ldr	x0, [sp, #24]
  45a470:	ldr	w0, [x0]
  45a474:	bl	404110 <fchdir@plt>
  45a478:	b	45a488 <argp_usage@@Base+0x1139c>
  45a47c:	ldr	x0, [sp, #24]
  45a480:	ldr	x0, [x0, #8]
  45a484:	bl	45c124 <argp_usage@@Base+0x13038>
  45a488:	ldp	x29, x30, [sp], #32
  45a48c:	ret
  45a490:	stp	x29, x30, [sp, #-32]!
  45a494:	mov	x29, sp
  45a498:	str	x0, [sp, #24]
  45a49c:	ldr	x0, [sp, #24]
  45a4a0:	ldr	w0, [x0]
  45a4a4:	cmp	w0, #0x0
  45a4a8:	b.lt	45a4b8 <argp_usage@@Base+0x113cc>  // b.tstop
  45a4ac:	ldr	x0, [sp, #24]
  45a4b0:	ldr	w0, [x0]
  45a4b4:	bl	404660 <close@plt>
  45a4b8:	ldr	x0, [sp, #24]
  45a4bc:	ldr	x0, [x0, #8]
  45a4c0:	bl	404880 <free@plt>
  45a4c4:	nop
  45a4c8:	ldp	x29, x30, [sp], #32
  45a4cc:	ret
  45a4d0:	stp	x29, x30, [sp, #-48]!
  45a4d4:	mov	x29, sp
  45a4d8:	str	x0, [sp, #24]
  45a4dc:	str	x1, [sp, #16]
  45a4e0:	ldr	x0, [sp, #24]
  45a4e4:	str	x0, [sp, #40]
  45a4e8:	ldr	x0, [sp, #16]
  45a4ec:	str	x0, [sp, #32]
  45a4f0:	ldr	x0, [sp, #40]
  45a4f4:	ldr	x2, [x0]
  45a4f8:	ldr	x0, [sp, #32]
  45a4fc:	ldr	x0, [x0]
  45a500:	mov	x1, x0
  45a504:	mov	x0, x2
  45a508:	bl	4047c0 <strcmp@plt>
  45a50c:	ldp	x29, x30, [sp], #48
  45a510:	ret
  45a514:	sub	sp, sp, #0x20
  45a518:	str	x0, [sp, #8]
  45a51c:	str	x1, [sp]
  45a520:	ldr	x0, [sp, #8]
  45a524:	str	x0, [sp, #24]
  45a528:	ldr	x0, [sp]
  45a52c:	str	x0, [sp, #16]
  45a530:	ldr	x0, [sp, #24]
  45a534:	ldr	x1, [x0, #8]
  45a538:	ldr	x0, [sp, #16]
  45a53c:	ldr	x0, [x0, #8]
  45a540:	cmp	x1, x0
  45a544:	b.cc	45a568 <argp_usage@@Base+0x1147c>  // b.lo, b.ul, b.last
  45a548:	ldr	x0, [sp, #24]
  45a54c:	ldr	x1, [x0, #8]
  45a550:	ldr	x0, [sp, #16]
  45a554:	ldr	x0, [x0, #8]
  45a558:	cmp	x1, x0
  45a55c:	cset	w0, hi  // hi = pmore
  45a560:	and	w0, w0, #0xff
  45a564:	b	45a56c <argp_usage@@Base+0x11480>
  45a568:	mov	w0, #0xffffffff            	// #-1
  45a56c:	add	sp, sp, #0x20
  45a570:	ret
  45a574:	stp	x29, x30, [sp, #-176]!
  45a578:	mov	x29, sp
  45a57c:	str	x19, [sp, #16]
  45a580:	str	x0, [sp, #40]
  45a584:	str	w1, [sp, #36]
  45a588:	str	xzr, [sp, #168]
  45a58c:	str	xzr, [sp, #160]
  45a590:	str	xzr, [sp, #152]
  45a594:	str	xzr, [sp, #144]
  45a598:	str	xzr, [sp, #136]
  45a59c:	str	xzr, [sp, #128]
  45a5a0:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45a5a4:	add	x0, x0, #0xf00
  45a5a8:	ldr	w1, [sp, #36]
  45a5ac:	ldr	x0, [x0, x1, lsl #3]
  45a5b0:	str	x0, [sp, #112]
  45a5b4:	ldr	x0, [sp, #40]
  45a5b8:	cmp	x0, #0x0
  45a5bc:	b.ne	45a5c8 <argp_usage@@Base+0x114dc>  // b.any
  45a5c0:	mov	x0, #0x0                   	// #0
  45a5c4:	b	45a8c0 <argp_usage@@Base+0x117d4>
  45a5c8:	bl	404bc0 <__errno_location@plt>
  45a5cc:	str	wzr, [x0]
  45a5d0:	ldr	x0, [sp, #40]
  45a5d4:	bl	4045d0 <readdir@plt>
  45a5d8:	str	x0, [sp, #104]
  45a5dc:	ldr	x0, [sp, #104]
  45a5e0:	cmp	x0, #0x0
  45a5e4:	b.eq	45a768 <argp_usage@@Base+0x1167c>  // b.none
  45a5e8:	ldr	x0, [sp, #104]
  45a5ec:	add	x0, x0, #0x13
  45a5f0:	str	x0, [sp, #96]
  45a5f4:	ldr	x0, [sp, #96]
  45a5f8:	ldrb	w0, [x0]
  45a5fc:	cmp	w0, #0x2e
  45a600:	b.ne	45a628 <argp_usage@@Base+0x1153c>  // b.any
  45a604:	ldr	x0, [sp, #96]
  45a608:	add	x0, x0, #0x1
  45a60c:	ldrb	w0, [x0]
  45a610:	cmp	w0, #0x2e
  45a614:	b.eq	45a620 <argp_usage@@Base+0x11534>  // b.none
  45a618:	mov	x0, #0x1                   	// #1
  45a61c:	b	45a62c <argp_usage@@Base+0x11540>
  45a620:	mov	x0, #0x2                   	// #2
  45a624:	b	45a62c <argp_usage@@Base+0x11540>
  45a628:	mov	x0, #0x0                   	// #0
  45a62c:	ldr	x1, [sp, #96]
  45a630:	add	x0, x1, x0
  45a634:	ldrb	w0, [x0]
  45a638:	cmp	w0, #0x0
  45a63c:	b.eq	45a5c8 <argp_usage@@Base+0x114dc>  // b.none
  45a640:	ldr	x0, [sp, #104]
  45a644:	add	x0, x0, #0x13
  45a648:	bl	4040b0 <strlen@plt>
  45a64c:	add	x0, x0, #0x1
  45a650:	str	x0, [sp, #88]
  45a654:	ldr	x0, [sp, #112]
  45a658:	cmp	x0, #0x0
  45a65c:	b.eq	45a6e0 <argp_usage@@Base+0x115f4>  // b.none
  45a660:	ldr	x1, [sp, #144]
  45a664:	ldr	x0, [sp, #136]
  45a668:	cmp	x1, x0
  45a66c:	b.ne	45a698 <argp_usage@@Base+0x115ac>  // b.any
  45a670:	ldr	x0, [sp, #144]
  45a674:	str	x0, [sp, #64]
  45a678:	add	x0, sp, #0x40
  45a67c:	mov	x2, #0x10                  	// #16
  45a680:	mov	x1, x0
  45a684:	ldr	x0, [sp, #152]
  45a688:	bl	45b56c <argp_usage@@Base+0x12480>
  45a68c:	str	x0, [sp, #152]
  45a690:	ldr	x0, [sp, #64]
  45a694:	str	x0, [sp, #144]
  45a698:	ldr	x0, [sp, #136]
  45a69c:	lsl	x0, x0, #4
  45a6a0:	ldr	x1, [sp, #152]
  45a6a4:	add	x19, x1, x0
  45a6a8:	ldr	x0, [sp, #96]
  45a6ac:	bl	45b858 <argp_usage@@Base+0x1276c>
  45a6b0:	str	x0, [x19]
  45a6b4:	ldr	x0, [sp, #136]
  45a6b8:	lsl	x0, x0, #4
  45a6bc:	ldr	x1, [sp, #152]
  45a6c0:	add	x0, x1, x0
  45a6c4:	ldr	x1, [sp, #104]
  45a6c8:	ldr	x1, [x1]
  45a6cc:	str	x1, [x0, #8]
  45a6d0:	ldr	x0, [sp, #136]
  45a6d4:	add	x0, x0, #0x1
  45a6d8:	str	x0, [sp, #136]
  45a6dc:	b	45a754 <argp_usage@@Base+0x11668>
  45a6e0:	ldr	x1, [sp, #160]
  45a6e4:	ldr	x0, [sp, #128]
  45a6e8:	sub	x0, x1, x0
  45a6ec:	ldr	x1, [sp, #88]
  45a6f0:	cmp	x1, x0
  45a6f4:	b.cc	45a73c <argp_usage@@Base+0x11650>  // b.lo, b.ul, b.last
  45a6f8:	ldr	x1, [sp, #128]
  45a6fc:	ldr	x0, [sp, #88]
  45a700:	add	x0, x1, x0
  45a704:	str	x0, [sp, #56]
  45a708:	ldr	x0, [sp, #56]
  45a70c:	ldr	x1, [sp, #128]
  45a710:	cmp	x1, x0
  45a714:	b.ls	45a71c <argp_usage@@Base+0x11630>  // b.plast
  45a718:	bl	412b2c <wcrtomb@plt+0xde1c>
  45a71c:	add	x0, sp, #0x38
  45a720:	mov	x2, #0x1                   	// #1
  45a724:	mov	x1, x0
  45a728:	ldr	x0, [sp, #168]
  45a72c:	bl	45b56c <argp_usage@@Base+0x12480>
  45a730:	str	x0, [sp, #168]
  45a734:	ldr	x0, [sp, #56]
  45a738:	str	x0, [sp, #160]
  45a73c:	ldr	x1, [sp, #168]
  45a740:	ldr	x0, [sp, #128]
  45a744:	add	x0, x1, x0
  45a748:	ldr	x2, [sp, #88]
  45a74c:	ldr	x1, [sp, #96]
  45a750:	bl	404020 <memcpy@plt>
  45a754:	ldr	x1, [sp, #128]
  45a758:	ldr	x0, [sp, #88]
  45a75c:	add	x0, x1, x0
  45a760:	str	x0, [sp, #128]
  45a764:	b	45a5c8 <argp_usage@@Base+0x114dc>
  45a768:	nop
  45a76c:	bl	404bc0 <__errno_location@plt>
  45a770:	ldr	w0, [x0]
  45a774:	str	w0, [sp, #84]
  45a778:	ldr	w0, [sp, #84]
  45a77c:	cmp	w0, #0x0
  45a780:	b.eq	45a7ac <argp_usage@@Base+0x116c0>  // b.none
  45a784:	ldr	x0, [sp, #152]
  45a788:	bl	404880 <free@plt>
  45a78c:	ldr	x0, [sp, #168]
  45a790:	bl	404880 <free@plt>
  45a794:	bl	404bc0 <__errno_location@plt>
  45a798:	mov	x1, x0
  45a79c:	ldr	w0, [sp, #84]
  45a7a0:	str	w0, [x1]
  45a7a4:	mov	x0, #0x0                   	// #0
  45a7a8:	b	45a8c0 <argp_usage@@Base+0x117d4>
  45a7ac:	ldr	x0, [sp, #112]
  45a7b0:	cmp	x0, #0x0
  45a7b4:	b.eq	45a884 <argp_usage@@Base+0x11798>  // b.none
  45a7b8:	ldr	x0, [sp, #136]
  45a7bc:	cmp	x0, #0x0
  45a7c0:	b.eq	45a7d8 <argp_usage@@Base+0x116ec>  // b.none
  45a7c4:	ldr	x3, [sp, #112]
  45a7c8:	mov	x2, #0x10                  	// #16
  45a7cc:	ldr	x1, [sp, #136]
  45a7d0:	ldr	x0, [sp, #152]
  45a7d4:	bl	404280 <qsort@plt>
  45a7d8:	ldr	x0, [sp, #128]
  45a7dc:	add	x0, x0, #0x1
  45a7e0:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  45a7e4:	str	x0, [sp, #168]
  45a7e8:	str	xzr, [sp, #128]
  45a7ec:	str	xzr, [sp, #120]
  45a7f0:	b	45a868 <argp_usage@@Base+0x1177c>
  45a7f4:	ldr	x1, [sp, #168]
  45a7f8:	ldr	x0, [sp, #128]
  45a7fc:	add	x0, x1, x0
  45a800:	str	x0, [sp, #72]
  45a804:	ldr	x0, [sp, #120]
  45a808:	lsl	x0, x0, #4
  45a80c:	ldr	x1, [sp, #152]
  45a810:	add	x0, x1, x0
  45a814:	ldr	x0, [x0]
  45a818:	mov	x1, x0
  45a81c:	ldr	x0, [sp, #72]
  45a820:	bl	404310 <stpcpy@plt>
  45a824:	mov	x1, x0
  45a828:	ldr	x0, [sp, #72]
  45a82c:	sub	x0, x1, x0
  45a830:	add	x0, x0, #0x1
  45a834:	mov	x1, x0
  45a838:	ldr	x0, [sp, #128]
  45a83c:	add	x0, x0, x1
  45a840:	str	x0, [sp, #128]
  45a844:	ldr	x0, [sp, #120]
  45a848:	lsl	x0, x0, #4
  45a84c:	ldr	x1, [sp, #152]
  45a850:	add	x0, x1, x0
  45a854:	ldr	x0, [x0]
  45a858:	bl	404880 <free@plt>
  45a85c:	ldr	x0, [sp, #120]
  45a860:	add	x0, x0, #0x1
  45a864:	str	x0, [sp, #120]
  45a868:	ldr	x1, [sp, #120]
  45a86c:	ldr	x0, [sp, #136]
  45a870:	cmp	x1, x0
  45a874:	b.cc	45a7f4 <argp_usage@@Base+0x11708>  // b.lo, b.ul, b.last
  45a878:	ldr	x0, [sp, #152]
  45a87c:	bl	404880 <free@plt>
  45a880:	b	45a8ac <argp_usage@@Base+0x117c0>
  45a884:	ldr	x1, [sp, #128]
  45a888:	ldr	x0, [sp, #160]
  45a88c:	cmp	x1, x0
  45a890:	b.ne	45a8ac <argp_usage@@Base+0x117c0>  // b.any
  45a894:	ldr	x0, [sp, #128]
  45a898:	add	x0, x0, #0x1
  45a89c:	mov	x1, x0
  45a8a0:	ldr	x0, [sp, #168]
  45a8a4:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  45a8a8:	str	x0, [sp, #168]
  45a8ac:	ldr	x1, [sp, #168]
  45a8b0:	ldr	x0, [sp, #128]
  45a8b4:	add	x0, x1, x0
  45a8b8:	strb	wzr, [x0]
  45a8bc:	ldr	x0, [sp, #168]
  45a8c0:	ldr	x19, [sp, #16]
  45a8c4:	ldp	x29, x30, [sp], #176
  45a8c8:	ret
  45a8cc:	stp	x29, x30, [sp, #-64]!
  45a8d0:	mov	x29, sp
  45a8d4:	str	x0, [sp, #24]
  45a8d8:	str	w1, [sp, #20]
  45a8dc:	ldr	x0, [sp, #24]
  45a8e0:	bl	476bc0 <_obstack_memory_used@@Base+0x19a80>
  45a8e4:	str	x0, [sp, #56]
  45a8e8:	ldr	x0, [sp, #56]
  45a8ec:	cmp	x0, #0x0
  45a8f0:	b.ne	45a8fc <argp_usage@@Base+0x11810>  // b.any
  45a8f4:	mov	x0, #0x0                   	// #0
  45a8f8:	b	45a94c <argp_usage@@Base+0x11860>
  45a8fc:	ldr	w1, [sp, #20]
  45a900:	ldr	x0, [sp, #56]
  45a904:	bl	45a574 <argp_usage@@Base+0x11488>
  45a908:	str	x0, [sp, #48]
  45a90c:	ldr	x0, [sp, #56]
  45a910:	bl	404630 <closedir@plt>
  45a914:	cmp	w0, #0x0
  45a918:	b.eq	45a948 <argp_usage@@Base+0x1185c>  // b.none
  45a91c:	bl	404bc0 <__errno_location@plt>
  45a920:	ldr	w0, [x0]
  45a924:	str	w0, [sp, #44]
  45a928:	ldr	x0, [sp, #48]
  45a92c:	bl	404880 <free@plt>
  45a930:	bl	404bc0 <__errno_location@plt>
  45a934:	mov	x1, x0
  45a938:	ldr	w0, [sp, #44]
  45a93c:	str	w0, [x1]
  45a940:	mov	x0, #0x0                   	// #0
  45a944:	b	45a94c <argp_usage@@Base+0x11860>
  45a948:	ldr	x0, [sp, #48]
  45a94c:	ldp	x29, x30, [sp], #64
  45a950:	ret
  45a954:	sub	sp, sp, #0x10
  45a958:	str	x0, [sp, #8]
  45a95c:	ldr	x0, [sp, #8]
  45a960:	ldr	x0, [x0, #80]
  45a964:	add	sp, sp, #0x10
  45a968:	ret
  45a96c:	sub	sp, sp, #0x10
  45a970:	str	x0, [sp, #8]
  45a974:	ldr	x0, [sp, #8]
  45a978:	ldr	x0, [x0, #112]
  45a97c:	add	sp, sp, #0x10
  45a980:	ret
  45a984:	sub	sp, sp, #0x10
  45a988:	str	x0, [sp, #8]
  45a98c:	ldr	x0, [sp, #8]
  45a990:	ldr	x0, [x0, #96]
  45a994:	add	sp, sp, #0x10
  45a998:	ret
  45a99c:	sub	sp, sp, #0x10
  45a9a0:	str	x0, [sp, #8]
  45a9a4:	mov	x0, #0x0                   	// #0
  45a9a8:	add	sp, sp, #0x10
  45a9ac:	ret
  45a9b0:	sub	sp, sp, #0x10
  45a9b4:	str	x0, [sp, #8]
  45a9b8:	ldr	x0, [sp, #8]
  45a9bc:	ldp	x0, x1, [x0, #72]
  45a9c0:	add	sp, sp, #0x10
  45a9c4:	ret
  45a9c8:	sub	sp, sp, #0x10
  45a9cc:	str	x0, [sp, #8]
  45a9d0:	ldr	x0, [sp, #8]
  45a9d4:	ldp	x0, x1, [x0, #104]
  45a9d8:	add	sp, sp, #0x10
  45a9dc:	ret
  45a9e0:	sub	sp, sp, #0x10
  45a9e4:	str	x0, [sp, #8]
  45a9e8:	ldr	x0, [sp, #8]
  45a9ec:	ldp	x0, x1, [x0, #88]
  45a9f0:	add	sp, sp, #0x10
  45a9f4:	ret
  45a9f8:	sub	sp, sp, #0x20
  45a9fc:	str	x0, [sp, #8]
  45aa00:	mov	x0, #0xffffffffffffffff    	// #-1
  45aa04:	str	x0, [sp, #16]
  45aa08:	mov	x0, #0xffffffffffffffff    	// #-1
  45aa0c:	str	x0, [sp, #24]
  45aa10:	ldp	x0, x1, [sp, #16]
  45aa14:	add	sp, sp, #0x20
  45aa18:	ret
  45aa1c:	sub	sp, sp, #0x10
  45aa20:	str	w0, [sp, #12]
  45aa24:	str	x1, [sp]
  45aa28:	ldr	w0, [sp, #12]
  45aa2c:	add	sp, sp, #0x10
  45aa30:	ret
  45aa34:	stp	x29, x30, [sp, #-48]!
  45aa38:	mov	x29, sp
  45aa3c:	str	w0, [sp, #44]
  45aa40:	str	x1, [sp, #32]
  45aa44:	str	x2, [sp, #24]
  45aa48:	mov	w3, #0x0                   	// #0
  45aa4c:	ldr	x2, [sp, #24]
  45aa50:	ldr	x1, [sp, #32]
  45aa54:	ldr	w0, [sp, #44]
  45aa58:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  45aa5c:	ldp	x29, x30, [sp], #48
  45aa60:	ret
  45aa64:	stp	x29, x30, [sp, #-48]!
  45aa68:	mov	x29, sp
  45aa6c:	str	w0, [sp, #44]
  45aa70:	str	x1, [sp, #32]
  45aa74:	str	x2, [sp, #24]
  45aa78:	mov	w3, #0x100                 	// #256
  45aa7c:	ldr	x2, [sp, #24]
  45aa80:	ldr	x1, [sp, #32]
  45aa84:	ldr	w0, [sp, #44]
  45aa88:	bl	47ec80 <_obstack_memory_used@@Base+0x21b40>
  45aa8c:	ldp	x29, x30, [sp], #48
  45aa90:	ret
  45aa94:	stp	x29, x30, [sp, #-48]!
  45aa98:	mov	x29, sp
  45aa9c:	str	x0, [sp, #24]
  45aaa0:	str	x1, [sp, #16]
  45aaa4:	ldr	x2, [sp, #16]
  45aaa8:	mov	w1, #0x0                   	// #0
  45aaac:	ldr	x0, [sp, #24]
  45aab0:	bl	404a20 <memchr@plt>
  45aab4:	str	x0, [sp, #40]
  45aab8:	ldr	x0, [sp, #40]
  45aabc:	cmp	x0, #0x0
  45aac0:	b.eq	45aad8 <argp_usage@@Base+0x119ec>  // b.none
  45aac4:	ldr	x1, [sp, #40]
  45aac8:	ldr	x0, [sp, #24]
  45aacc:	sub	x0, x1, x0
  45aad0:	add	x0, x0, #0x1
  45aad4:	b	45aadc <argp_usage@@Base+0x119f0>
  45aad8:	ldr	x0, [sp, #16]
  45aadc:	ldp	x29, x30, [sp], #48
  45aae0:	ret
  45aae4:	sub	sp, sp, #0x20
  45aae8:	str	x0, [sp, #8]
  45aaec:	str	x1, [sp]
  45aaf0:	ldr	x0, [sp, #8]
  45aaf4:	str	x0, [sp, #16]
  45aaf8:	ldr	x0, [sp]
  45aafc:	str	x0, [sp, #24]
  45ab00:	ldp	x0, x1, [sp, #16]
  45ab04:	add	sp, sp, #0x20
  45ab08:	ret
  45ab0c:	sub	sp, sp, #0x20
  45ab10:	stp	x0, x1, [sp, #16]
  45ab14:	stp	x2, x3, [sp]
  45ab18:	ldr	x1, [sp, #16]
  45ab1c:	ldr	x0, [sp]
  45ab20:	cmp	x1, x0
  45ab24:	b.ge	45ab30 <argp_usage@@Base+0x11a44>  // b.tcont
  45ab28:	mov	w0, #0xffffffff            	// #-1
  45ab2c:	b	45ab98 <argp_usage@@Base+0x11aac>
  45ab30:	ldr	x1, [sp, #16]
  45ab34:	ldr	x0, [sp]
  45ab38:	cmp	x1, x0
  45ab3c:	b.le	45ab48 <argp_usage@@Base+0x11a5c>
  45ab40:	mov	w0, #0x1                   	// #1
  45ab44:	b	45ab98 <argp_usage@@Base+0x11aac>
  45ab48:	ldr	x0, [sp, #24]
  45ab4c:	cmn	x0, #0x1
  45ab50:	b.lt	45ab68 <argp_usage@@Base+0x11a7c>  // b.tstop
  45ab54:	ldr	x1, [sp, #24]
  45ab58:	mov	x0, #0x9400                	// #37888
  45ab5c:	movk	x0, #0x7735, lsl #16
  45ab60:	cmp	x1, x0
  45ab64:	b.le	45ab68 <argp_usage@@Base+0x11a7c>
  45ab68:	ldr	x0, [sp, #8]
  45ab6c:	cmn	x0, #0x1
  45ab70:	b.lt	45ab88 <argp_usage@@Base+0x11a9c>  // b.tstop
  45ab74:	ldr	x1, [sp, #8]
  45ab78:	mov	x0, #0x9400                	// #37888
  45ab7c:	movk	x0, #0x7735, lsl #16
  45ab80:	cmp	x1, x0
  45ab84:	b.le	45ab88 <argp_usage@@Base+0x11a9c>
  45ab88:	ldr	x0, [sp, #24]
  45ab8c:	mov	w1, w0
  45ab90:	ldr	x0, [sp, #8]
  45ab94:	sub	w0, w1, w0
  45ab98:	add	sp, sp, #0x20
  45ab9c:	ret
  45aba0:	sub	sp, sp, #0x10
  45aba4:	stp	x0, x1, [sp]
  45aba8:	ldr	x0, [sp]
  45abac:	cmp	x0, #0x0
  45abb0:	b.lt	45abdc <argp_usage@@Base+0x11af0>  // b.tstop
  45abb4:	ldr	x0, [sp]
  45abb8:	cmp	x0, #0x0
  45abbc:	b.ne	45abcc <argp_usage@@Base+0x11ae0>  // b.any
  45abc0:	ldr	x0, [sp, #8]
  45abc4:	cmp	x0, #0x0
  45abc8:	b.eq	45abd4 <argp_usage@@Base+0x11ae8>  // b.none
  45abcc:	mov	w0, #0x1                   	// #1
  45abd0:	b	45abe0 <argp_usage@@Base+0x11af4>
  45abd4:	mov	w0, #0x0                   	// #0
  45abd8:	b	45abe0 <argp_usage@@Base+0x11af4>
  45abdc:	mov	w0, #0xffffffff            	// #-1
  45abe0:	add	sp, sp, #0x10
  45abe4:	ret
  45abe8:	sub	sp, sp, #0x10
  45abec:	stp	x0, x1, [sp]
  45abf0:	ldr	d0, [sp]
  45abf4:	scvtf	d1, d0
  45abf8:	ldr	d0, [sp, #8]
  45abfc:	scvtf	d0, d0
  45ac00:	mov	x0, #0xcd6500000000        	// #225833675390976
  45ac04:	movk	x0, #0x41cd, lsl #48
  45ac08:	fmov	d2, x0
  45ac0c:	fdiv	d0, d0, d2
  45ac10:	fadd	d0, d1, d0
  45ac14:	add	sp, sp, #0x10
  45ac18:	ret
  45ac1c:	sub	sp, sp, #0x60
  45ac20:	stp	x29, x30, [sp, #32]
  45ac24:	add	x29, sp, #0x20
  45ac28:	str	x0, [sp, #88]
  45ac2c:	str	x1, [sp, #80]
  45ac30:	str	x2, [sp, #72]
  45ac34:	str	x3, [sp, #64]
  45ac38:	str	x4, [sp, #56]
  45ac3c:	str	x5, [sp, #48]
  45ac40:	ldr	x0, [sp, #80]
  45ac44:	cmp	x0, #0x0
  45ac48:	b.eq	45ac6c <argp_usage@@Base+0x11b80>  // b.none
  45ac4c:	ldr	x4, [sp, #64]
  45ac50:	ldr	x3, [sp, #72]
  45ac54:	ldr	x2, [sp, #80]
  45ac58:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45ac5c:	add	x1, x0, #0xf18
  45ac60:	ldr	x0, [sp, #88]
  45ac64:	bl	404c90 <fprintf@plt>
  45ac68:	b	45ac84 <argp_usage@@Base+0x11b98>
  45ac6c:	ldr	x3, [sp, #64]
  45ac70:	ldr	x2, [sp, #72]
  45ac74:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45ac78:	add	x1, x0, #0xf28
  45ac7c:	ldr	x0, [sp, #88]
  45ac80:	bl	404c90 <fprintf@plt>
  45ac84:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45ac88:	add	x0, x0, #0xf30
  45ac8c:	bl	404c60 <gettext@plt>
  45ac90:	mov	w3, #0x7e3                 	// #2019
  45ac94:	mov	x2, x0
  45ac98:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45ac9c:	add	x1, x0, #0x250
  45aca0:	ldr	x0, [sp, #88]
  45aca4:	bl	404c90 <fprintf@plt>
  45aca8:	adrp	x0, 48a000 <_obstack_memory_used@@Base+0x2cec0>
  45acac:	add	x0, x0, #0xf38
  45acb0:	bl	404c60 <gettext@plt>
  45acb4:	ldr	x1, [sp, #88]
  45acb8:	bl	404ab0 <fputs_unlocked@plt>
  45acbc:	ldr	x0, [sp, #48]
  45acc0:	cmp	x0, #0x9
  45acc4:	b.eq	45b098 <argp_usage@@Base+0x11fac>  // b.none
  45acc8:	ldr	x0, [sp, #48]
  45accc:	cmp	x0, #0x9
  45acd0:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45acd4:	ldr	x0, [sp, #48]
  45acd8:	cmp	x0, #0x8
  45acdc:	b.eq	45b014 <argp_usage@@Base+0x11f28>  // b.none
  45ace0:	ldr	x0, [sp, #48]
  45ace4:	cmp	x0, #0x8
  45ace8:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45acec:	ldr	x0, [sp, #48]
  45acf0:	cmp	x0, #0x7
  45acf4:	b.eq	45af88 <argp_usage@@Base+0x11e9c>  // b.none
  45acf8:	ldr	x0, [sp, #48]
  45acfc:	cmp	x0, #0x7
  45ad00:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45ad04:	ldr	x0, [sp, #48]
  45ad08:	cmp	x0, #0x6
  45ad0c:	b.eq	45af0c <argp_usage@@Base+0x11e20>  // b.none
  45ad10:	ldr	x0, [sp, #48]
  45ad14:	cmp	x0, #0x6
  45ad18:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45ad1c:	ldr	x0, [sp, #48]
  45ad20:	cmp	x0, #0x5
  45ad24:	b.eq	45aea0 <argp_usage@@Base+0x11db4>  // b.none
  45ad28:	ldr	x0, [sp, #48]
  45ad2c:	cmp	x0, #0x5
  45ad30:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45ad34:	ldr	x0, [sp, #48]
  45ad38:	cmp	x0, #0x4
  45ad3c:	b.eq	45ae44 <argp_usage@@Base+0x11d58>  // b.none
  45ad40:	ldr	x0, [sp, #48]
  45ad44:	cmp	x0, #0x4
  45ad48:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45ad4c:	ldr	x0, [sp, #48]
  45ad50:	cmp	x0, #0x3
  45ad54:	b.eq	45adf8 <argp_usage@@Base+0x11d0c>  // b.none
  45ad58:	ldr	x0, [sp, #48]
  45ad5c:	cmp	x0, #0x3
  45ad60:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45ad64:	ldr	x0, [sp, #48]
  45ad68:	cmp	x0, #0x2
  45ad6c:	b.eq	45adbc <argp_usage@@Base+0x11cd0>  // b.none
  45ad70:	ldr	x0, [sp, #48]
  45ad74:	cmp	x0, #0x2
  45ad78:	b.hi	45b130 <argp_usage@@Base+0x12044>  // b.pmore
  45ad7c:	ldr	x0, [sp, #48]
  45ad80:	cmp	x0, #0x0
  45ad84:	b.eq	45b1c8 <argp_usage@@Base+0x120dc>  // b.none
  45ad88:	ldr	x0, [sp, #48]
  45ad8c:	cmp	x0, #0x1
  45ad90:	b.ne	45b130 <argp_usage@@Base+0x12044>  // b.any
  45ad94:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45ad98:	add	x0, x0, #0x8
  45ad9c:	bl	404c60 <gettext@plt>
  45ada0:	mov	x1, x0
  45ada4:	ldr	x0, [sp, #56]
  45ada8:	ldr	x0, [x0]
  45adac:	mov	x2, x0
  45adb0:	ldr	x0, [sp, #88]
  45adb4:	bl	404c90 <fprintf@plt>
  45adb8:	b	45b1cc <argp_usage@@Base+0x120e0>
  45adbc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45adc0:	add	x0, x0, #0x18
  45adc4:	bl	404c60 <gettext@plt>
  45adc8:	mov	x4, x0
  45adcc:	ldr	x0, [sp, #56]
  45add0:	ldr	x1, [x0]
  45add4:	ldr	x0, [sp, #56]
  45add8:	add	x0, x0, #0x8
  45addc:	ldr	x0, [x0]
  45ade0:	mov	x3, x0
  45ade4:	mov	x2, x1
  45ade8:	mov	x1, x4
  45adec:	ldr	x0, [sp, #88]
  45adf0:	bl	404c90 <fprintf@plt>
  45adf4:	b	45b1cc <argp_usage@@Base+0x120e0>
  45adf8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45adfc:	add	x0, x0, #0x30
  45ae00:	bl	404c60 <gettext@plt>
  45ae04:	mov	x5, x0
  45ae08:	ldr	x0, [sp, #56]
  45ae0c:	ldr	x1, [x0]
  45ae10:	ldr	x0, [sp, #56]
  45ae14:	add	x0, x0, #0x8
  45ae18:	ldr	x2, [x0]
  45ae1c:	ldr	x0, [sp, #56]
  45ae20:	add	x0, x0, #0x10
  45ae24:	ldr	x0, [x0]
  45ae28:	mov	x4, x0
  45ae2c:	mov	x3, x2
  45ae30:	mov	x2, x1
  45ae34:	mov	x1, x5
  45ae38:	ldr	x0, [sp, #88]
  45ae3c:	bl	404c90 <fprintf@plt>
  45ae40:	b	45b1cc <argp_usage@@Base+0x120e0>
  45ae44:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45ae48:	add	x0, x0, #0x50
  45ae4c:	bl	404c60 <gettext@plt>
  45ae50:	mov	x6, x0
  45ae54:	ldr	x0, [sp, #56]
  45ae58:	ldr	x1, [x0]
  45ae5c:	ldr	x0, [sp, #56]
  45ae60:	add	x0, x0, #0x8
  45ae64:	ldr	x2, [x0]
  45ae68:	ldr	x0, [sp, #56]
  45ae6c:	add	x0, x0, #0x10
  45ae70:	ldr	x3, [x0]
  45ae74:	ldr	x0, [sp, #56]
  45ae78:	add	x0, x0, #0x18
  45ae7c:	ldr	x0, [x0]
  45ae80:	mov	x5, x0
  45ae84:	mov	x4, x3
  45ae88:	mov	x3, x2
  45ae8c:	mov	x2, x1
  45ae90:	mov	x1, x6
  45ae94:	ldr	x0, [sp, #88]
  45ae98:	bl	404c90 <fprintf@plt>
  45ae9c:	b	45b1cc <argp_usage@@Base+0x120e0>
  45aea0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45aea4:	add	x0, x0, #0x70
  45aea8:	bl	404c60 <gettext@plt>
  45aeac:	mov	x7, x0
  45aeb0:	ldr	x0, [sp, #56]
  45aeb4:	ldr	x1, [x0]
  45aeb8:	ldr	x0, [sp, #56]
  45aebc:	add	x0, x0, #0x8
  45aec0:	ldr	x2, [x0]
  45aec4:	ldr	x0, [sp, #56]
  45aec8:	add	x0, x0, #0x10
  45aecc:	ldr	x3, [x0]
  45aed0:	ldr	x0, [sp, #56]
  45aed4:	add	x0, x0, #0x18
  45aed8:	ldr	x4, [x0]
  45aedc:	ldr	x0, [sp, #56]
  45aee0:	add	x0, x0, #0x20
  45aee4:	ldr	x0, [x0]
  45aee8:	mov	x6, x0
  45aeec:	mov	x5, x4
  45aef0:	mov	x4, x3
  45aef4:	mov	x3, x2
  45aef8:	mov	x2, x1
  45aefc:	mov	x1, x7
  45af00:	ldr	x0, [sp, #88]
  45af04:	bl	404c90 <fprintf@plt>
  45af08:	b	45b1cc <argp_usage@@Base+0x120e0>
  45af0c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45af10:	add	x0, x0, #0x98
  45af14:	bl	404c60 <gettext@plt>
  45af18:	mov	x8, x0
  45af1c:	ldr	x0, [sp, #56]
  45af20:	ldr	x1, [x0]
  45af24:	ldr	x0, [sp, #56]
  45af28:	add	x0, x0, #0x8
  45af2c:	ldr	x2, [x0]
  45af30:	ldr	x0, [sp, #56]
  45af34:	add	x0, x0, #0x10
  45af38:	ldr	x3, [x0]
  45af3c:	ldr	x0, [sp, #56]
  45af40:	add	x0, x0, #0x18
  45af44:	ldr	x4, [x0]
  45af48:	ldr	x0, [sp, #56]
  45af4c:	add	x0, x0, #0x20
  45af50:	ldr	x5, [x0]
  45af54:	ldr	x0, [sp, #56]
  45af58:	add	x0, x0, #0x28
  45af5c:	ldr	x0, [x0]
  45af60:	mov	x7, x0
  45af64:	mov	x6, x5
  45af68:	mov	x5, x4
  45af6c:	mov	x4, x3
  45af70:	mov	x3, x2
  45af74:	mov	x2, x1
  45af78:	mov	x1, x8
  45af7c:	ldr	x0, [sp, #88]
  45af80:	bl	404c90 <fprintf@plt>
  45af84:	b	45b1cc <argp_usage@@Base+0x120e0>
  45af88:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45af8c:	add	x0, x0, #0xc0
  45af90:	bl	404c60 <gettext@plt>
  45af94:	mov	x8, x0
  45af98:	ldr	x0, [sp, #56]
  45af9c:	ldr	x1, [x0]
  45afa0:	ldr	x0, [sp, #56]
  45afa4:	add	x0, x0, #0x8
  45afa8:	ldr	x2, [x0]
  45afac:	ldr	x0, [sp, #56]
  45afb0:	add	x0, x0, #0x10
  45afb4:	ldr	x3, [x0]
  45afb8:	ldr	x0, [sp, #56]
  45afbc:	add	x0, x0, #0x18
  45afc0:	ldr	x4, [x0]
  45afc4:	ldr	x0, [sp, #56]
  45afc8:	add	x0, x0, #0x20
  45afcc:	ldr	x5, [x0]
  45afd0:	ldr	x0, [sp, #56]
  45afd4:	add	x0, x0, #0x28
  45afd8:	ldr	x6, [x0]
  45afdc:	ldr	x0, [sp, #56]
  45afe0:	add	x0, x0, #0x30
  45afe4:	ldr	x0, [x0]
  45afe8:	str	x0, [sp]
  45afec:	mov	x7, x6
  45aff0:	mov	x6, x5
  45aff4:	mov	x5, x4
  45aff8:	mov	x4, x3
  45affc:	mov	x3, x2
  45b000:	mov	x2, x1
  45b004:	mov	x1, x8
  45b008:	ldr	x0, [sp, #88]
  45b00c:	bl	404c90 <fprintf@plt>
  45b010:	b	45b1cc <argp_usage@@Base+0x120e0>
  45b014:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b018:	add	x0, x0, #0xf0
  45b01c:	bl	404c60 <gettext@plt>
  45b020:	mov	x8, x0
  45b024:	ldr	x0, [sp, #56]
  45b028:	ldr	x2, [x0]
  45b02c:	ldr	x0, [sp, #56]
  45b030:	add	x0, x0, #0x8
  45b034:	ldr	x3, [x0]
  45b038:	ldr	x0, [sp, #56]
  45b03c:	add	x0, x0, #0x10
  45b040:	ldr	x4, [x0]
  45b044:	ldr	x0, [sp, #56]
  45b048:	add	x0, x0, #0x18
  45b04c:	ldr	x5, [x0]
  45b050:	ldr	x0, [sp, #56]
  45b054:	add	x0, x0, #0x20
  45b058:	ldr	x6, [x0]
  45b05c:	ldr	x0, [sp, #56]
  45b060:	add	x0, x0, #0x28
  45b064:	ldr	x7, [x0]
  45b068:	ldr	x0, [sp, #56]
  45b06c:	add	x0, x0, #0x30
  45b070:	ldr	x0, [x0]
  45b074:	ldr	x1, [sp, #56]
  45b078:	add	x1, x1, #0x38
  45b07c:	ldr	x1, [x1]
  45b080:	str	x1, [sp, #8]
  45b084:	str	x0, [sp]
  45b088:	mov	x1, x8
  45b08c:	ldr	x0, [sp, #88]
  45b090:	bl	404c90 <fprintf@plt>
  45b094:	b	45b1cc <argp_usage@@Base+0x120e0>
  45b098:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b09c:	add	x0, x0, #0x120
  45b0a0:	bl	404c60 <gettext@plt>
  45b0a4:	mov	x9, x0
  45b0a8:	ldr	x0, [sp, #56]
  45b0ac:	ldr	x8, [x0]
  45b0b0:	ldr	x0, [sp, #56]
  45b0b4:	add	x0, x0, #0x8
  45b0b8:	ldr	x3, [x0]
  45b0bc:	ldr	x0, [sp, #56]
  45b0c0:	add	x0, x0, #0x10
  45b0c4:	ldr	x4, [x0]
  45b0c8:	ldr	x0, [sp, #56]
  45b0cc:	add	x0, x0, #0x18
  45b0d0:	ldr	x5, [x0]
  45b0d4:	ldr	x0, [sp, #56]
  45b0d8:	add	x0, x0, #0x20
  45b0dc:	ldr	x6, [x0]
  45b0e0:	ldr	x0, [sp, #56]
  45b0e4:	add	x0, x0, #0x28
  45b0e8:	ldr	x7, [x0]
  45b0ec:	ldr	x0, [sp, #56]
  45b0f0:	add	x0, x0, #0x30
  45b0f4:	ldr	x0, [x0]
  45b0f8:	ldr	x1, [sp, #56]
  45b0fc:	add	x1, x1, #0x38
  45b100:	ldr	x1, [x1]
  45b104:	ldr	x2, [sp, #56]
  45b108:	add	x2, x2, #0x40
  45b10c:	ldr	x2, [x2]
  45b110:	str	x2, [sp, #16]
  45b114:	str	x1, [sp, #8]
  45b118:	str	x0, [sp]
  45b11c:	mov	x2, x8
  45b120:	mov	x1, x9
  45b124:	ldr	x0, [sp, #88]
  45b128:	bl	404c90 <fprintf@plt>
  45b12c:	b	45b1cc <argp_usage@@Base+0x120e0>
  45b130:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b134:	add	x0, x0, #0x158
  45b138:	bl	404c60 <gettext@plt>
  45b13c:	mov	x9, x0
  45b140:	ldr	x0, [sp, #56]
  45b144:	ldr	x8, [x0]
  45b148:	ldr	x0, [sp, #56]
  45b14c:	add	x0, x0, #0x8
  45b150:	ldr	x3, [x0]
  45b154:	ldr	x0, [sp, #56]
  45b158:	add	x0, x0, #0x10
  45b15c:	ldr	x4, [x0]
  45b160:	ldr	x0, [sp, #56]
  45b164:	add	x0, x0, #0x18
  45b168:	ldr	x5, [x0]
  45b16c:	ldr	x0, [sp, #56]
  45b170:	add	x0, x0, #0x20
  45b174:	ldr	x6, [x0]
  45b178:	ldr	x0, [sp, #56]
  45b17c:	add	x0, x0, #0x28
  45b180:	ldr	x7, [x0]
  45b184:	ldr	x0, [sp, #56]
  45b188:	add	x0, x0, #0x30
  45b18c:	ldr	x0, [x0]
  45b190:	ldr	x1, [sp, #56]
  45b194:	add	x1, x1, #0x38
  45b198:	ldr	x1, [x1]
  45b19c:	ldr	x2, [sp, #56]
  45b1a0:	add	x2, x2, #0x40
  45b1a4:	ldr	x2, [x2]
  45b1a8:	str	x2, [sp, #16]
  45b1ac:	str	x1, [sp, #8]
  45b1b0:	str	x0, [sp]
  45b1b4:	mov	x2, x8
  45b1b8:	mov	x1, x9
  45b1bc:	ldr	x0, [sp, #88]
  45b1c0:	bl	404c90 <fprintf@plt>
  45b1c4:	b	45b1cc <argp_usage@@Base+0x120e0>
  45b1c8:	nop
  45b1cc:	nop
  45b1d0:	ldp	x29, x30, [sp, #32]
  45b1d4:	add	sp, sp, #0x60
  45b1d8:	ret
  45b1dc:	stp	x29, x30, [sp, #-80]!
  45b1e0:	mov	x29, sp
  45b1e4:	str	x0, [sp, #56]
  45b1e8:	str	x1, [sp, #48]
  45b1ec:	str	x2, [sp, #40]
  45b1f0:	str	x3, [sp, #32]
  45b1f4:	str	x4, [sp, #24]
  45b1f8:	str	xzr, [sp, #72]
  45b1fc:	b	45b20c <argp_usage@@Base+0x12120>
  45b200:	ldr	x0, [sp, #72]
  45b204:	add	x0, x0, #0x1
  45b208:	str	x0, [sp, #72]
  45b20c:	ldr	x0, [sp, #72]
  45b210:	lsl	x0, x0, #3
  45b214:	ldr	x1, [sp, #24]
  45b218:	add	x0, x1, x0
  45b21c:	ldr	x0, [x0]
  45b220:	cmp	x0, #0x0
  45b224:	b.ne	45b200 <argp_usage@@Base+0x12114>  // b.any
  45b228:	ldr	x5, [sp, #72]
  45b22c:	ldr	x4, [sp, #24]
  45b230:	ldr	x3, [sp, #32]
  45b234:	ldr	x2, [sp, #40]
  45b238:	ldr	x1, [sp, #48]
  45b23c:	ldr	x0, [sp, #56]
  45b240:	bl	45ac1c <argp_usage@@Base+0x11b30>
  45b244:	nop
  45b248:	ldp	x29, x30, [sp], #80
  45b24c:	ret
  45b250:	stp	x29, x30, [sp, #-160]!
  45b254:	mov	x29, sp
  45b258:	str	x19, [sp, #16]
  45b25c:	str	x0, [sp, #56]
  45b260:	str	x1, [sp, #48]
  45b264:	str	x2, [sp, #40]
  45b268:	str	x3, [sp, #32]
  45b26c:	mov	x19, x4
  45b270:	str	xzr, [sp, #152]
  45b274:	b	45b284 <argp_usage@@Base+0x12198>
  45b278:	ldr	x0, [sp, #152]
  45b27c:	add	x0, x0, #0x1
  45b280:	str	x0, [sp, #152]
  45b284:	ldr	x0, [sp, #152]
  45b288:	cmp	x0, #0x9
  45b28c:	b.hi	45b30c <argp_usage@@Base+0x12220>  // b.pmore
  45b290:	ldr	w1, [x19, #24]
  45b294:	ldr	x0, [x19]
  45b298:	cmp	w1, #0x0
  45b29c:	b.lt	45b2b0 <argp_usage@@Base+0x121c4>  // b.tstop
  45b2a0:	add	x1, x0, #0xf
  45b2a4:	and	x1, x1, #0xfffffffffffffff8
  45b2a8:	str	x1, [x19]
  45b2ac:	b	45b2e0 <argp_usage@@Base+0x121f4>
  45b2b0:	add	w2, w1, #0x8
  45b2b4:	str	w2, [x19, #24]
  45b2b8:	ldr	w2, [x19, #24]
  45b2bc:	cmp	w2, #0x0
  45b2c0:	b.le	45b2d4 <argp_usage@@Base+0x121e8>
  45b2c4:	add	x1, x0, #0xf
  45b2c8:	and	x1, x1, #0xfffffffffffffff8
  45b2cc:	str	x1, [x19]
  45b2d0:	b	45b2e0 <argp_usage@@Base+0x121f4>
  45b2d4:	ldr	x2, [x19, #8]
  45b2d8:	sxtw	x0, w1
  45b2dc:	add	x0, x2, x0
  45b2e0:	ldr	x2, [x0]
  45b2e4:	ldr	x0, [sp, #152]
  45b2e8:	lsl	x0, x0, #3
  45b2ec:	add	x1, sp, #0x48
  45b2f0:	str	x2, [x1, x0]
  45b2f4:	ldr	x0, [sp, #152]
  45b2f8:	lsl	x0, x0, #3
  45b2fc:	add	x1, sp, #0x48
  45b300:	ldr	x0, [x1, x0]
  45b304:	cmp	x0, #0x0
  45b308:	b.ne	45b278 <argp_usage@@Base+0x1218c>  // b.any
  45b30c:	add	x0, sp, #0x48
  45b310:	ldr	x5, [sp, #152]
  45b314:	mov	x4, x0
  45b318:	ldr	x3, [sp, #32]
  45b31c:	ldr	x2, [sp, #40]
  45b320:	ldr	x1, [sp, #48]
  45b324:	ldr	x0, [sp, #56]
  45b328:	bl	45ac1c <argp_usage@@Base+0x11b30>
  45b32c:	nop
  45b330:	ldr	x19, [sp, #16]
  45b334:	ldp	x29, x30, [sp], #160
  45b338:	ret
  45b33c:	stp	x29, x30, [sp, #-272]!
  45b340:	mov	x29, sp
  45b344:	str	x0, [sp, #72]
  45b348:	str	x1, [sp, #64]
  45b34c:	str	x2, [sp, #56]
  45b350:	str	x3, [sp, #48]
  45b354:	str	x4, [sp, #240]
  45b358:	str	x5, [sp, #248]
  45b35c:	str	x6, [sp, #256]
  45b360:	str	x7, [sp, #264]
  45b364:	str	q0, [sp, #112]
  45b368:	str	q1, [sp, #128]
  45b36c:	str	q2, [sp, #144]
  45b370:	str	q3, [sp, #160]
  45b374:	str	q4, [sp, #176]
  45b378:	str	q5, [sp, #192]
  45b37c:	str	q6, [sp, #208]
  45b380:	str	q7, [sp, #224]
  45b384:	add	x0, sp, #0x110
  45b388:	str	x0, [sp, #80]
  45b38c:	add	x0, sp, #0x110
  45b390:	str	x0, [sp, #88]
  45b394:	add	x0, sp, #0xf0
  45b398:	str	x0, [sp, #96]
  45b39c:	mov	w0, #0xffffffe0            	// #-32
  45b3a0:	str	w0, [sp, #104]
  45b3a4:	mov	w0, #0xffffff80            	// #-128
  45b3a8:	str	w0, [sp, #108]
  45b3ac:	add	x2, sp, #0x10
  45b3b0:	add	x3, sp, #0x50
  45b3b4:	ldp	x0, x1, [x3]
  45b3b8:	stp	x0, x1, [x2]
  45b3bc:	ldp	x0, x1, [x3, #16]
  45b3c0:	stp	x0, x1, [x2, #16]
  45b3c4:	add	x0, sp, #0x10
  45b3c8:	mov	x4, x0
  45b3cc:	ldr	x3, [sp, #48]
  45b3d0:	ldr	x2, [sp, #56]
  45b3d4:	ldr	x1, [sp, #64]
  45b3d8:	ldr	x0, [sp, #72]
  45b3dc:	bl	45b250 <argp_usage@@Base+0x12164>
  45b3e0:	nop
  45b3e4:	ldp	x29, x30, [sp], #272
  45b3e8:	ret
  45b3ec:	stp	x29, x30, [sp, #-16]!
  45b3f0:	mov	x29, sp
  45b3f4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b3f8:	add	x0, x0, #0x198
  45b3fc:	bl	404c60 <gettext@plt>
  45b400:	mov	x2, x0
  45b404:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b408:	add	x1, x0, #0x1b0
  45b40c:	mov	x0, x2
  45b410:	bl	404ba0 <printf@plt>
  45b414:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b418:	add	x0, x0, #0x1c0
  45b41c:	bl	404c60 <gettext@plt>
  45b420:	mov	x3, x0
  45b424:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b428:	add	x2, x0, #0x1d8
  45b42c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b430:	add	x1, x0, #0x200
  45b434:	mov	x0, x3
  45b438:	bl	404ba0 <printf@plt>
  45b43c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45b440:	add	x0, x0, #0x208
  45b444:	bl	404c60 <gettext@plt>
  45b448:	mov	x2, x0
  45b44c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45b450:	add	x0, x0, #0x4a0
  45b454:	ldr	x0, [x0]
  45b458:	mov	x1, x0
  45b45c:	mov	x0, x2
  45b460:	bl	404ab0 <fputs_unlocked@plt>
  45b464:	nop
  45b468:	ldp	x29, x30, [sp], #16
  45b46c:	ret
  45b470:	stp	x29, x30, [sp, #-32]!
  45b474:	mov	x29, sp
  45b478:	str	x0, [sp, #24]
  45b47c:	str	x1, [sp, #16]
  45b480:	mov	x0, #0x0                   	// #0
  45b484:	ldr	x6, [sp, #24]
  45b488:	ldr	x1, [sp, #16]
  45b48c:	mul	x7, x6, x1
  45b490:	umulh	x1, x6, x1
  45b494:	mov	x2, x7
  45b498:	mov	x3, x1
  45b49c:	mov	x4, x3
  45b4a0:	mov	x5, #0x0                   	// #0
  45b4a4:	cmp	x4, #0x0
  45b4a8:	b.eq	45b4b0 <argp_usage@@Base+0x123c4>  // b.none
  45b4ac:	mov	x0, #0x1                   	// #1
  45b4b0:	cmp	x2, #0x0
  45b4b4:	b.ge	45b4bc <argp_usage@@Base+0x123d0>  // b.tcont
  45b4b8:	mov	x0, #0x1                   	// #1
  45b4bc:	and	w0, w0, #0x1
  45b4c0:	and	w0, w0, #0xff
  45b4c4:	cmp	w0, #0x0
  45b4c8:	b.eq	45b4d0 <argp_usage@@Base+0x123e4>  // b.none
  45b4cc:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b4d0:	ldr	x1, [sp, #24]
  45b4d4:	ldr	x0, [sp, #16]
  45b4d8:	mul	x0, x1, x0
  45b4dc:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  45b4e0:	ldp	x29, x30, [sp], #32
  45b4e4:	ret
  45b4e8:	stp	x29, x30, [sp, #-48]!
  45b4ec:	mov	x29, sp
  45b4f0:	str	x0, [sp, #40]
  45b4f4:	str	x1, [sp, #32]
  45b4f8:	str	x2, [sp, #24]
  45b4fc:	mov	x0, #0x0                   	// #0
  45b500:	ldr	x2, [sp, #32]
  45b504:	ldr	x1, [sp, #24]
  45b508:	mul	x3, x2, x1
  45b50c:	umulh	x1, x2, x1
  45b510:	mov	x4, x3
  45b514:	mov	x5, x1
  45b518:	mov	x6, x5
  45b51c:	mov	x7, #0x0                   	// #0
  45b520:	cmp	x6, #0x0
  45b524:	b.eq	45b52c <argp_usage@@Base+0x12440>  // b.none
  45b528:	mov	x0, #0x1                   	// #1
  45b52c:	cmp	x4, #0x0
  45b530:	b.ge	45b538 <argp_usage@@Base+0x1244c>  // b.tcont
  45b534:	mov	x0, #0x1                   	// #1
  45b538:	and	w0, w0, #0x1
  45b53c:	and	w0, w0, #0xff
  45b540:	cmp	w0, #0x0
  45b544:	b.eq	45b54c <argp_usage@@Base+0x12460>  // b.none
  45b548:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b54c:	ldr	x1, [sp, #32]
  45b550:	ldr	x0, [sp, #24]
  45b554:	mul	x0, x1, x0
  45b558:	mov	x1, x0
  45b55c:	ldr	x0, [sp, #40]
  45b560:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  45b564:	ldp	x29, x30, [sp], #48
  45b568:	ret
  45b56c:	stp	x29, x30, [sp, #-64]!
  45b570:	mov	x29, sp
  45b574:	str	x0, [sp, #40]
  45b578:	str	x1, [sp, #32]
  45b57c:	str	x2, [sp, #24]
  45b580:	ldr	x0, [sp, #32]
  45b584:	ldr	x0, [x0]
  45b588:	str	x0, [sp, #56]
  45b58c:	ldr	x0, [sp, #40]
  45b590:	cmp	x0, #0x0
  45b594:	b.ne	45b624 <argp_usage@@Base+0x12538>  // b.any
  45b598:	ldr	x0, [sp, #56]
  45b59c:	cmp	x0, #0x0
  45b5a0:	b.ne	45b5d4 <argp_usage@@Base+0x124e8>  // b.any
  45b5a4:	mov	x1, #0x80                  	// #128
  45b5a8:	ldr	x0, [sp, #24]
  45b5ac:	udiv	x0, x1, x0
  45b5b0:	str	x0, [sp, #56]
  45b5b4:	ldr	x0, [sp, #56]
  45b5b8:	cmp	x0, #0x0
  45b5bc:	cset	w0, eq  // eq = none
  45b5c0:	and	w0, w0, #0xff
  45b5c4:	and	x0, x0, #0xff
  45b5c8:	ldr	x1, [sp, #56]
  45b5cc:	add	x0, x1, x0
  45b5d0:	str	x0, [sp, #56]
  45b5d4:	mov	x0, #0x0                   	// #0
  45b5d8:	ldr	x2, [sp, #56]
  45b5dc:	ldr	x1, [sp, #24]
  45b5e0:	mul	x3, x2, x1
  45b5e4:	umulh	x1, x2, x1
  45b5e8:	mov	x4, x3
  45b5ec:	mov	x5, x1
  45b5f0:	mov	x6, x5
  45b5f4:	mov	x7, #0x0                   	// #0
  45b5f8:	cmp	x6, #0x0
  45b5fc:	b.eq	45b604 <argp_usage@@Base+0x12518>  // b.none
  45b600:	mov	x0, #0x1                   	// #1
  45b604:	cmp	x4, #0x0
  45b608:	b.ge	45b610 <argp_usage@@Base+0x12524>  // b.tcont
  45b60c:	mov	x0, #0x1                   	// #1
  45b610:	and	w0, w0, #0x1
  45b614:	and	w0, w0, #0xff
  45b618:	cmp	w0, #0x0
  45b61c:	b.eq	45b65c <argp_usage@@Base+0x12570>  // b.none
  45b620:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b624:	mov	x1, #0x5555555555555555    	// #6148914691236517205
  45b628:	movk	x1, #0x5554
  45b62c:	ldr	x0, [sp, #24]
  45b630:	udiv	x0, x1, x0
  45b634:	ldr	x1, [sp, #56]
  45b638:	cmp	x1, x0
  45b63c:	b.cc	45b644 <argp_usage@@Base+0x12558>  // b.lo, b.ul, b.last
  45b640:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b644:	ldr	x0, [sp, #56]
  45b648:	lsr	x1, x0, #1
  45b64c:	ldr	x0, [sp, #56]
  45b650:	add	x0, x1, x0
  45b654:	add	x0, x0, #0x1
  45b658:	str	x0, [sp, #56]
  45b65c:	ldr	x0, [sp, #32]
  45b660:	ldr	x1, [sp, #56]
  45b664:	str	x1, [x0]
  45b668:	ldr	x1, [sp, #56]
  45b66c:	ldr	x0, [sp, #24]
  45b670:	mul	x0, x1, x0
  45b674:	mov	x1, x0
  45b678:	ldr	x0, [sp, #40]
  45b67c:	bl	45b6e4 <argp_usage@@Base+0x125f8>
  45b680:	ldp	x29, x30, [sp], #64
  45b684:	ret
  45b688:	stp	x29, x30, [sp, #-32]!
  45b68c:	mov	x29, sp
  45b690:	str	x0, [sp, #24]
  45b694:	ldr	x0, [sp, #24]
  45b698:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  45b69c:	ldp	x29, x30, [sp], #32
  45b6a0:	ret
  45b6a4:	stp	x29, x30, [sp, #-48]!
  45b6a8:	mov	x29, sp
  45b6ac:	str	x0, [sp, #24]
  45b6b0:	ldr	x0, [sp, #24]
  45b6b4:	bl	4043f0 <malloc@plt>
  45b6b8:	str	x0, [sp, #40]
  45b6bc:	ldr	x0, [sp, #40]
  45b6c0:	cmp	x0, #0x0
  45b6c4:	b.ne	45b6d8 <argp_usage@@Base+0x125ec>  // b.any
  45b6c8:	ldr	x0, [sp, #24]
  45b6cc:	cmp	x0, #0x0
  45b6d0:	b.eq	45b6d8 <argp_usage@@Base+0x125ec>  // b.none
  45b6d4:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b6d8:	ldr	x0, [sp, #40]
  45b6dc:	ldp	x29, x30, [sp], #48
  45b6e0:	ret
  45b6e4:	stp	x29, x30, [sp, #-32]!
  45b6e8:	mov	x29, sp
  45b6ec:	str	x0, [sp, #24]
  45b6f0:	str	x1, [sp, #16]
  45b6f4:	ldr	x0, [sp, #16]
  45b6f8:	cmp	x0, #0x0
  45b6fc:	b.ne	45b71c <argp_usage@@Base+0x12630>  // b.any
  45b700:	ldr	x0, [sp, #24]
  45b704:	cmp	x0, #0x0
  45b708:	b.eq	45b71c <argp_usage@@Base+0x12630>  // b.none
  45b70c:	ldr	x0, [sp, #24]
  45b710:	bl	404880 <free@plt>
  45b714:	mov	x0, #0x0                   	// #0
  45b718:	b	45b74c <argp_usage@@Base+0x12660>
  45b71c:	ldr	x1, [sp, #16]
  45b720:	ldr	x0, [sp, #24]
  45b724:	bl	4045e0 <realloc@plt>
  45b728:	str	x0, [sp, #24]
  45b72c:	ldr	x0, [sp, #24]
  45b730:	cmp	x0, #0x0
  45b734:	b.ne	45b748 <argp_usage@@Base+0x1265c>  // b.any
  45b738:	ldr	x0, [sp, #16]
  45b73c:	cmp	x0, #0x0
  45b740:	b.eq	45b748 <argp_usage@@Base+0x1265c>  // b.none
  45b744:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b748:	ldr	x0, [sp, #24]
  45b74c:	ldp	x29, x30, [sp], #32
  45b750:	ret
  45b754:	stp	x29, x30, [sp, #-32]!
  45b758:	mov	x29, sp
  45b75c:	str	x0, [sp, #24]
  45b760:	str	x1, [sp, #16]
  45b764:	mov	x2, #0x1                   	// #1
  45b768:	ldr	x1, [sp, #16]
  45b76c:	ldr	x0, [sp, #24]
  45b770:	bl	45b56c <argp_usage@@Base+0x12480>
  45b774:	ldp	x29, x30, [sp], #32
  45b778:	ret
  45b77c:	stp	x29, x30, [sp, #-32]!
  45b780:	mov	x29, sp
  45b784:	str	x0, [sp, #24]
  45b788:	ldr	x0, [sp, #24]
  45b78c:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  45b790:	ldr	x2, [sp, #24]
  45b794:	mov	w1, #0x0                   	// #0
  45b798:	bl	4044d0 <memset@plt>
  45b79c:	ldp	x29, x30, [sp], #32
  45b7a0:	ret
  45b7a4:	stp	x29, x30, [sp, #-48]!
  45b7a8:	mov	x29, sp
  45b7ac:	str	x0, [sp, #24]
  45b7b0:	str	x1, [sp, #16]
  45b7b4:	mov	x0, #0x0                   	// #0
  45b7b8:	ldr	x6, [sp, #24]
  45b7bc:	ldr	x1, [sp, #16]
  45b7c0:	mul	x7, x6, x1
  45b7c4:	umulh	x1, x6, x1
  45b7c8:	mov	x2, x7
  45b7cc:	mov	x3, x1
  45b7d0:	mov	x4, x3
  45b7d4:	mov	x5, #0x0                   	// #0
  45b7d8:	cmp	x4, #0x0
  45b7dc:	b.eq	45b7e4 <argp_usage@@Base+0x126f8>  // b.none
  45b7e0:	mov	x0, #0x1                   	// #1
  45b7e4:	cmp	x2, #0x0
  45b7e8:	b.ge	45b7f0 <argp_usage@@Base+0x12704>  // b.tcont
  45b7ec:	mov	x0, #0x1                   	// #1
  45b7f0:	and	w0, w0, #0x1
  45b7f4:	and	w0, w0, #0xff
  45b7f8:	cmp	w0, #0x0
  45b7fc:	b.ne	45b81c <argp_usage@@Base+0x12730>  // b.any
  45b800:	ldr	x1, [sp, #16]
  45b804:	ldr	x0, [sp, #24]
  45b808:	bl	404560 <calloc@plt>
  45b80c:	str	x0, [sp, #40]
  45b810:	ldr	x0, [sp, #40]
  45b814:	cmp	x0, #0x0
  45b818:	b.ne	45b820 <argp_usage@@Base+0x12734>  // b.any
  45b81c:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b820:	ldr	x0, [sp, #40]
  45b824:	ldp	x29, x30, [sp], #48
  45b828:	ret
  45b82c:	stp	x29, x30, [sp, #-32]!
  45b830:	mov	x29, sp
  45b834:	str	x0, [sp, #24]
  45b838:	str	x1, [sp, #16]
  45b83c:	ldr	x0, [sp, #16]
  45b840:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  45b844:	ldr	x2, [sp, #16]
  45b848:	ldr	x1, [sp, #24]
  45b84c:	bl	404020 <memcpy@plt>
  45b850:	ldp	x29, x30, [sp], #32
  45b854:	ret
  45b858:	stp	x29, x30, [sp, #-32]!
  45b85c:	mov	x29, sp
  45b860:	str	x0, [sp, #24]
  45b864:	ldr	x0, [sp, #24]
  45b868:	bl	4040b0 <strlen@plt>
  45b86c:	add	x0, x0, #0x1
  45b870:	mov	x1, x0
  45b874:	ldr	x0, [sp, #24]
  45b878:	bl	45b82c <argp_usage@@Base+0x12740>
  45b87c:	ldp	x29, x30, [sp], #32
  45b880:	ret
  45b884:	stp	x29, x30, [sp, #-32]!
  45b888:	mov	x29, sp
  45b88c:	mov	x1, #0x0                   	// #0
  45b890:	mov	x0, #0x0                   	// #0
  45b894:	bl	404060 <getcwd@plt>
  45b898:	str	x0, [sp, #24]
  45b89c:	ldr	x0, [sp, #24]
  45b8a0:	cmp	x0, #0x0
  45b8a4:	b.ne	45b8bc <argp_usage@@Base+0x127d0>  // b.any
  45b8a8:	bl	404bc0 <__errno_location@plt>
  45b8ac:	ldr	w0, [x0]
  45b8b0:	cmp	w0, #0xc
  45b8b4:	b.ne	45b8bc <argp_usage@@Base+0x127d0>  // b.any
  45b8b8:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b8bc:	ldr	x0, [sp, #24]
  45b8c0:	ldp	x29, x30, [sp], #32
  45b8c4:	ret
  45b8c8:	stp	x29, x30, [sp, #-48]!
  45b8cc:	mov	x29, sp
  45b8d0:	str	x0, [sp, #24]
  45b8d4:	str	x1, [sp, #16]
  45b8d8:	ldr	x1, [sp, #16]
  45b8dc:	ldr	x0, [sp, #24]
  45b8e0:	bl	404910 <strndup@plt>
  45b8e4:	str	x0, [sp, #40]
  45b8e8:	ldr	x0, [sp, #40]
  45b8ec:	cmp	x0, #0x0
  45b8f0:	b.ne	45b8f8 <argp_usage@@Base+0x1280c>  // b.any
  45b8f4:	bl	412b2c <wcrtomb@plt+0xde1c>
  45b8f8:	ldr	x0, [sp, #40]
  45b8fc:	ldp	x29, x30, [sp], #48
  45b900:	ret
  45b904:	sub	sp, sp, #0x10
  45b908:	str	x0, [sp, #8]
  45b90c:	str	w1, [sp, #4]
  45b910:	ldr	x0, [sp, #8]
  45b914:	ldr	x1, [x0]
  45b918:	ldrsw	x0, [sp, #4]
  45b91c:	mov	x2, #0x0                   	// #0
  45b920:	umulh	x0, x1, x0
  45b924:	cmp	x0, #0x0
  45b928:	b.eq	45b930 <argp_usage@@Base+0x12844>  // b.none
  45b92c:	mov	x2, #0x1                   	// #1
  45b930:	mov	x0, x2
  45b934:	cmp	x0, #0x0
  45b938:	b.eq	45b950 <argp_usage@@Base+0x12864>  // b.none
  45b93c:	ldr	x0, [sp, #8]
  45b940:	mov	x1, #0xffffffffffffffff    	// #-1
  45b944:	str	x1, [x0]
  45b948:	mov	w0, #0x1                   	// #1
  45b94c:	b	45b96c <argp_usage@@Base+0x12880>
  45b950:	ldr	x0, [sp, #8]
  45b954:	ldr	x1, [x0]
  45b958:	ldrsw	x0, [sp, #4]
  45b95c:	mul	x1, x1, x0
  45b960:	ldr	x0, [sp, #8]
  45b964:	str	x1, [x0]
  45b968:	mov	w0, #0x0                   	// #0
  45b96c:	add	sp, sp, #0x10
  45b970:	ret
  45b974:	stp	x29, x30, [sp, #-48]!
  45b978:	mov	x29, sp
  45b97c:	str	x0, [sp, #24]
  45b980:	str	w1, [sp, #20]
  45b984:	str	w2, [sp, #16]
  45b988:	str	wzr, [sp, #44]
  45b98c:	b	45b9ac <argp_usage@@Base+0x128c0>
  45b990:	ldr	w1, [sp, #20]
  45b994:	ldr	x0, [sp, #24]
  45b998:	bl	45b904 <argp_usage@@Base+0x12818>
  45b99c:	mov	w1, w0
  45b9a0:	ldr	w0, [sp, #44]
  45b9a4:	orr	w0, w0, w1
  45b9a8:	str	w0, [sp, #44]
  45b9ac:	ldr	w0, [sp, #16]
  45b9b0:	sub	w1, w0, #0x1
  45b9b4:	str	w1, [sp, #16]
  45b9b8:	cmp	w0, #0x0
  45b9bc:	b.ne	45b990 <argp_usage@@Base+0x128a4>  // b.any
  45b9c0:	ldr	w0, [sp, #44]
  45b9c4:	ldp	x29, x30, [sp], #48
  45b9c8:	ret
  45b9cc:	stp	x29, x30, [sp, #-128]!
  45b9d0:	mov	x29, sp
  45b9d4:	str	x0, [sp, #56]
  45b9d8:	str	x1, [sp, #48]
  45b9dc:	str	w2, [sp, #44]
  45b9e0:	str	x3, [sp, #32]
  45b9e4:	str	x4, [sp, #24]
  45b9e8:	str	wzr, [sp, #124]
  45b9ec:	ldr	w0, [sp, #44]
  45b9f0:	cmp	w0, #0x0
  45b9f4:	b.lt	45ba04 <argp_usage@@Base+0x12918>  // b.tstop
  45b9f8:	ldr	w0, [sp, #44]
  45b9fc:	cmp	w0, #0x24
  45ba00:	b.le	45ba24 <argp_usage@@Base+0x12938>
  45ba04:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45ba08:	add	x3, x0, #0x2b8
  45ba0c:	mov	w2, #0x54                  	// #84
  45ba10:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45ba14:	add	x1, x0, #0x280
  45ba18:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45ba1c:	add	x0, x0, #0x290
  45ba20:	bl	404bb0 <__assert_fail@plt>
  45ba24:	ldr	x0, [sp, #48]
  45ba28:	cmp	x0, #0x0
  45ba2c:	b.ne	45ba38 <argp_usage@@Base+0x1294c>  // b.any
  45ba30:	add	x0, sp, #0x50
  45ba34:	b	45ba3c <argp_usage@@Base+0x12950>
  45ba38:	ldr	x0, [sp, #48]
  45ba3c:	str	x0, [sp, #88]
  45ba40:	bl	404bc0 <__errno_location@plt>
  45ba44:	str	wzr, [x0]
  45ba48:	ldr	x0, [sp, #56]
  45ba4c:	str	x0, [sp, #112]
  45ba50:	ldr	x0, [sp, #112]
  45ba54:	ldrb	w0, [x0]
  45ba58:	strb	w0, [sp, #111]
  45ba5c:	b	45ba78 <argp_usage@@Base+0x1298c>
  45ba60:	ldr	x0, [sp, #112]
  45ba64:	add	x0, x0, #0x1
  45ba68:	str	x0, [sp, #112]
  45ba6c:	ldr	x0, [sp, #112]
  45ba70:	ldrb	w0, [x0]
  45ba74:	strb	w0, [sp, #111]
  45ba78:	bl	4047f0 <__ctype_b_loc@plt>
  45ba7c:	ldr	x1, [x0]
  45ba80:	ldrb	w0, [sp, #111]
  45ba84:	lsl	x0, x0, #1
  45ba88:	add	x0, x1, x0
  45ba8c:	ldrh	w0, [x0]
  45ba90:	and	w0, w0, #0x2000
  45ba94:	cmp	w0, #0x0
  45ba98:	b.ne	45ba60 <argp_usage@@Base+0x12974>  // b.any
  45ba9c:	ldrb	w0, [sp, #111]
  45baa0:	cmp	w0, #0x2d
  45baa4:	b.ne	45bab0 <argp_usage@@Base+0x129c4>  // b.any
  45baa8:	mov	w0, #0x4                   	// #4
  45baac:	b	45bf30 <argp_usage@@Base+0x12e44>
  45bab0:	ldr	w2, [sp, #44]
  45bab4:	ldr	x1, [sp, #88]
  45bab8:	ldr	x0, [sp, #56]
  45babc:	bl	4046e0 <strtoumax@plt>
  45bac0:	str	x0, [sp, #72]
  45bac4:	ldr	x0, [sp, #88]
  45bac8:	ldr	x0, [x0]
  45bacc:	ldr	x1, [sp, #56]
  45bad0:	cmp	x1, x0
  45bad4:	b.ne	45bb2c <argp_usage@@Base+0x12a40>  // b.any
  45bad8:	ldr	x0, [sp, #24]
  45badc:	cmp	x0, #0x0
  45bae0:	b.eq	45bb24 <argp_usage@@Base+0x12a38>  // b.none
  45bae4:	ldr	x0, [sp, #88]
  45bae8:	ldr	x0, [x0]
  45baec:	ldrb	w0, [x0]
  45baf0:	cmp	w0, #0x0
  45baf4:	b.eq	45bb24 <argp_usage@@Base+0x12a38>  // b.none
  45baf8:	ldr	x0, [sp, #88]
  45bafc:	ldr	x0, [x0]
  45bb00:	ldrb	w0, [x0]
  45bb04:	mov	w1, w0
  45bb08:	ldr	x0, [sp, #24]
  45bb0c:	bl	404930 <strchr@plt>
  45bb10:	cmp	x0, #0x0
  45bb14:	b.eq	45bb24 <argp_usage@@Base+0x12a38>  // b.none
  45bb18:	mov	x0, #0x1                   	// #1
  45bb1c:	str	x0, [sp, #72]
  45bb20:	b	45bb5c <argp_usage@@Base+0x12a70>
  45bb24:	mov	w0, #0x4                   	// #4
  45bb28:	b	45bf30 <argp_usage@@Base+0x12e44>
  45bb2c:	bl	404bc0 <__errno_location@plt>
  45bb30:	ldr	w0, [x0]
  45bb34:	cmp	w0, #0x0
  45bb38:	b.eq	45bb5c <argp_usage@@Base+0x12a70>  // b.none
  45bb3c:	bl	404bc0 <__errno_location@plt>
  45bb40:	ldr	w0, [x0]
  45bb44:	cmp	w0, #0x22
  45bb48:	b.eq	45bb54 <argp_usage@@Base+0x12a68>  // b.none
  45bb4c:	mov	w0, #0x4                   	// #4
  45bb50:	b	45bf30 <argp_usage@@Base+0x12e44>
  45bb54:	mov	w0, #0x1                   	// #1
  45bb58:	str	w0, [sp, #124]
  45bb5c:	ldr	x0, [sp, #24]
  45bb60:	cmp	x0, #0x0
  45bb64:	b.ne	45bb7c <argp_usage@@Base+0x12a90>  // b.any
  45bb68:	ldr	x1, [sp, #72]
  45bb6c:	ldr	x0, [sp, #32]
  45bb70:	str	x1, [x0]
  45bb74:	ldr	w0, [sp, #124]
  45bb78:	b	45bf30 <argp_usage@@Base+0x12e44>
  45bb7c:	ldr	x0, [sp, #88]
  45bb80:	ldr	x0, [x0]
  45bb84:	ldrb	w0, [x0]
  45bb88:	cmp	w0, #0x0
  45bb8c:	b.eq	45bf20 <argp_usage@@Base+0x12e34>  // b.none
  45bb90:	mov	w0, #0x400                 	// #1024
  45bb94:	str	w0, [sp, #104]
  45bb98:	mov	w0, #0x1                   	// #1
  45bb9c:	str	w0, [sp, #100]
  45bba0:	ldr	x0, [sp, #88]
  45bba4:	ldr	x0, [x0]
  45bba8:	ldrb	w0, [x0]
  45bbac:	mov	w1, w0
  45bbb0:	ldr	x0, [sp, #24]
  45bbb4:	bl	404930 <strchr@plt>
  45bbb8:	cmp	x0, #0x0
  45bbbc:	b.ne	45bbd8 <argp_usage@@Base+0x12aec>  // b.any
  45bbc0:	ldr	x1, [sp, #72]
  45bbc4:	ldr	x0, [sp, #32]
  45bbc8:	str	x1, [x0]
  45bbcc:	ldr	w0, [sp, #124]
  45bbd0:	orr	w0, w0, #0x2
  45bbd4:	b	45bf30 <argp_usage@@Base+0x12e44>
  45bbd8:	ldr	x0, [sp, #88]
  45bbdc:	ldr	x0, [x0]
  45bbe0:	ldrb	w0, [x0]
  45bbe4:	sub	w0, w0, #0x45
  45bbe8:	cmp	w0, #0x2f
  45bbec:	cset	w1, hi  // hi = pmore
  45bbf0:	and	w1, w1, #0xff
  45bbf4:	cmp	w1, #0x0
  45bbf8:	b.ne	45bcbc <argp_usage@@Base+0x12bd0>  // b.any
  45bbfc:	mov	x1, #0x1                   	// #1
  45bc00:	lsl	x1, x1, x0
  45bc04:	mov	x0, #0x8945                	// #35141
  45bc08:	movk	x0, #0x30, lsl #16
  45bc0c:	movk	x0, #0x8144, lsl #32
  45bc10:	and	x0, x1, x0
  45bc14:	cmp	x0, #0x0
  45bc18:	cset	w0, ne  // ne = any
  45bc1c:	and	w0, w0, #0xff
  45bc20:	cmp	w0, #0x0
  45bc24:	b.eq	45bcbc <argp_usage@@Base+0x12bd0>  // b.none
  45bc28:	mov	w1, #0x30                  	// #48
  45bc2c:	ldr	x0, [sp, #24]
  45bc30:	bl	404930 <strchr@plt>
  45bc34:	cmp	x0, #0x0
  45bc38:	b.eq	45bcb0 <argp_usage@@Base+0x12bc4>  // b.none
  45bc3c:	ldr	x0, [sp, #88]
  45bc40:	ldr	x0, [x0]
  45bc44:	add	x0, x0, #0x1
  45bc48:	ldrb	w0, [x0]
  45bc4c:	cmp	w0, #0x69
  45bc50:	b.eq	45bc70 <argp_usage@@Base+0x12b84>  // b.none
  45bc54:	cmp	w0, #0x69
  45bc58:	b.gt	45bcbc <argp_usage@@Base+0x12bd0>
  45bc5c:	cmp	w0, #0x42
  45bc60:	b.eq	45bc98 <argp_usage@@Base+0x12bac>  // b.none
  45bc64:	cmp	w0, #0x44
  45bc68:	b.eq	45bc98 <argp_usage@@Base+0x12bac>  // b.none
  45bc6c:	b	45bcbc <argp_usage@@Base+0x12bd0>
  45bc70:	ldr	x0, [sp, #88]
  45bc74:	ldr	x0, [x0]
  45bc78:	add	x0, x0, #0x2
  45bc7c:	ldrb	w0, [x0]
  45bc80:	cmp	w0, #0x42
  45bc84:	b.ne	45bcb8 <argp_usage@@Base+0x12bcc>  // b.any
  45bc88:	ldr	w0, [sp, #100]
  45bc8c:	add	w0, w0, #0x2
  45bc90:	str	w0, [sp, #100]
  45bc94:	b	45bcb8 <argp_usage@@Base+0x12bcc>
  45bc98:	mov	w0, #0x3e8                 	// #1000
  45bc9c:	str	w0, [sp, #104]
  45bca0:	ldr	w0, [sp, #100]
  45bca4:	add	w0, w0, #0x1
  45bca8:	str	w0, [sp, #100]
  45bcac:	b	45bcbc <argp_usage@@Base+0x12bd0>
  45bcb0:	nop
  45bcb4:	b	45bcbc <argp_usage@@Base+0x12bd0>
  45bcb8:	nop
  45bcbc:	ldr	x0, [sp, #88]
  45bcc0:	ldr	x0, [x0]
  45bcc4:	ldrb	w0, [x0]
  45bcc8:	cmp	w0, #0x77
  45bccc:	b.eq	45be7c <argp_usage@@Base+0x12d90>  // b.none
  45bcd0:	cmp	w0, #0x77
  45bcd4:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bcd8:	cmp	w0, #0x74
  45bcdc:	b.eq	45be64 <argp_usage@@Base+0x12d78>  // b.none
  45bce0:	cmp	w0, #0x74
  45bce4:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bce8:	cmp	w0, #0x6d
  45bcec:	b.eq	45be34 <argp_usage@@Base+0x12d48>  // b.none
  45bcf0:	cmp	w0, #0x6d
  45bcf4:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bcf8:	cmp	w0, #0x6b
  45bcfc:	b.eq	45be1c <argp_usage@@Base+0x12d30>  // b.none
  45bd00:	cmp	w0, #0x6b
  45bd04:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd08:	cmp	w0, #0x67
  45bd0c:	b.eq	45be04 <argp_usage@@Base+0x12d18>  // b.none
  45bd10:	cmp	w0, #0x67
  45bd14:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd18:	cmp	w0, #0x63
  45bd1c:	b.eq	45bde4 <argp_usage@@Base+0x12cf8>  // b.none
  45bd20:	cmp	w0, #0x63
  45bd24:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd28:	cmp	w0, #0x62
  45bd2c:	b.eq	45bdbc <argp_usage@@Base+0x12cd0>  // b.none
  45bd30:	cmp	w0, #0x62
  45bd34:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd38:	cmp	w0, #0x5a
  45bd3c:	b.eq	45bea8 <argp_usage@@Base+0x12dbc>  // b.none
  45bd40:	cmp	w0, #0x5a
  45bd44:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd48:	cmp	w0, #0x59
  45bd4c:	b.eq	45be90 <argp_usage@@Base+0x12da4>  // b.none
  45bd50:	cmp	w0, #0x59
  45bd54:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd58:	cmp	w0, #0x54
  45bd5c:	b.eq	45be64 <argp_usage@@Base+0x12d78>  // b.none
  45bd60:	cmp	w0, #0x54
  45bd64:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd68:	cmp	w0, #0x50
  45bd6c:	b.eq	45be4c <argp_usage@@Base+0x12d60>  // b.none
  45bd70:	cmp	w0, #0x50
  45bd74:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd78:	cmp	w0, #0x4d
  45bd7c:	b.eq	45be34 <argp_usage@@Base+0x12d48>  // b.none
  45bd80:	cmp	w0, #0x4d
  45bd84:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd88:	cmp	w0, #0x4b
  45bd8c:	b.eq	45be1c <argp_usage@@Base+0x12d30>  // b.none
  45bd90:	cmp	w0, #0x4b
  45bd94:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bd98:	cmp	w0, #0x47
  45bd9c:	b.eq	45be04 <argp_usage@@Base+0x12d18>  // b.none
  45bda0:	cmp	w0, #0x47
  45bda4:	b.gt	45bec0 <argp_usage@@Base+0x12dd4>
  45bda8:	cmp	w0, #0x42
  45bdac:	b.eq	45bdd0 <argp_usage@@Base+0x12ce4>  // b.none
  45bdb0:	cmp	w0, #0x45
  45bdb4:	b.eq	45bdec <argp_usage@@Base+0x12d00>  // b.none
  45bdb8:	b	45bec0 <argp_usage@@Base+0x12dd4>
  45bdbc:	add	x0, sp, #0x48
  45bdc0:	mov	w1, #0x200                 	// #512
  45bdc4:	bl	45b904 <argp_usage@@Base+0x12818>
  45bdc8:	str	w0, [sp, #96]
  45bdcc:	b	45bed8 <argp_usage@@Base+0x12dec>
  45bdd0:	add	x0, sp, #0x48
  45bdd4:	mov	w1, #0x400                 	// #1024
  45bdd8:	bl	45b904 <argp_usage@@Base+0x12818>
  45bddc:	str	w0, [sp, #96]
  45bde0:	b	45bed8 <argp_usage@@Base+0x12dec>
  45bde4:	str	wzr, [sp, #96]
  45bde8:	b	45bed8 <argp_usage@@Base+0x12dec>
  45bdec:	add	x0, sp, #0x48
  45bdf0:	mov	w2, #0x6                   	// #6
  45bdf4:	ldr	w1, [sp, #104]
  45bdf8:	bl	45b974 <argp_usage@@Base+0x12888>
  45bdfc:	str	w0, [sp, #96]
  45be00:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be04:	add	x0, sp, #0x48
  45be08:	mov	w2, #0x3                   	// #3
  45be0c:	ldr	w1, [sp, #104]
  45be10:	bl	45b974 <argp_usage@@Base+0x12888>
  45be14:	str	w0, [sp, #96]
  45be18:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be1c:	add	x0, sp, #0x48
  45be20:	mov	w2, #0x1                   	// #1
  45be24:	ldr	w1, [sp, #104]
  45be28:	bl	45b974 <argp_usage@@Base+0x12888>
  45be2c:	str	w0, [sp, #96]
  45be30:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be34:	add	x0, sp, #0x48
  45be38:	mov	w2, #0x2                   	// #2
  45be3c:	ldr	w1, [sp, #104]
  45be40:	bl	45b974 <argp_usage@@Base+0x12888>
  45be44:	str	w0, [sp, #96]
  45be48:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be4c:	add	x0, sp, #0x48
  45be50:	mov	w2, #0x5                   	// #5
  45be54:	ldr	w1, [sp, #104]
  45be58:	bl	45b974 <argp_usage@@Base+0x12888>
  45be5c:	str	w0, [sp, #96]
  45be60:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be64:	add	x0, sp, #0x48
  45be68:	mov	w2, #0x4                   	// #4
  45be6c:	ldr	w1, [sp, #104]
  45be70:	bl	45b974 <argp_usage@@Base+0x12888>
  45be74:	str	w0, [sp, #96]
  45be78:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be7c:	add	x0, sp, #0x48
  45be80:	mov	w1, #0x2                   	// #2
  45be84:	bl	45b904 <argp_usage@@Base+0x12818>
  45be88:	str	w0, [sp, #96]
  45be8c:	b	45bed8 <argp_usage@@Base+0x12dec>
  45be90:	add	x0, sp, #0x48
  45be94:	mov	w2, #0x8                   	// #8
  45be98:	ldr	w1, [sp, #104]
  45be9c:	bl	45b974 <argp_usage@@Base+0x12888>
  45bea0:	str	w0, [sp, #96]
  45bea4:	b	45bed8 <argp_usage@@Base+0x12dec>
  45bea8:	add	x0, sp, #0x48
  45beac:	mov	w2, #0x7                   	// #7
  45beb0:	ldr	w1, [sp, #104]
  45beb4:	bl	45b974 <argp_usage@@Base+0x12888>
  45beb8:	str	w0, [sp, #96]
  45bebc:	b	45bed8 <argp_usage@@Base+0x12dec>
  45bec0:	ldr	x1, [sp, #72]
  45bec4:	ldr	x0, [sp, #32]
  45bec8:	str	x1, [x0]
  45becc:	ldr	w0, [sp, #124]
  45bed0:	orr	w0, w0, #0x2
  45bed4:	b	45bf30 <argp_usage@@Base+0x12e44>
  45bed8:	ldr	w1, [sp, #124]
  45bedc:	ldr	w0, [sp, #96]
  45bee0:	orr	w0, w1, w0
  45bee4:	str	w0, [sp, #124]
  45bee8:	ldr	x0, [sp, #88]
  45beec:	ldr	x1, [x0]
  45bef0:	ldrsw	x0, [sp, #100]
  45bef4:	add	x1, x1, x0
  45bef8:	ldr	x0, [sp, #88]
  45befc:	str	x1, [x0]
  45bf00:	ldr	x0, [sp, #88]
  45bf04:	ldr	x0, [x0]
  45bf08:	ldrb	w0, [x0]
  45bf0c:	cmp	w0, #0x0
  45bf10:	b.eq	45bf20 <argp_usage@@Base+0x12e34>  // b.none
  45bf14:	ldr	w0, [sp, #124]
  45bf18:	orr	w0, w0, #0x2
  45bf1c:	str	w0, [sp, #124]
  45bf20:	ldr	x1, [sp, #72]
  45bf24:	ldr	x0, [sp, #32]
  45bf28:	str	x1, [x0]
  45bf2c:	ldr	w0, [sp, #124]
  45bf30:	ldp	x29, x30, [sp], #128
  45bf34:	ret
  45bf38:	stp	x29, x30, [sp, #-304]!
  45bf3c:	mov	x29, sp
  45bf40:	str	x0, [sp, #56]
  45bf44:	str	x1, [sp, #248]
  45bf48:	str	x2, [sp, #256]
  45bf4c:	str	x3, [sp, #264]
  45bf50:	str	x4, [sp, #272]
  45bf54:	str	x5, [sp, #280]
  45bf58:	str	x6, [sp, #288]
  45bf5c:	str	x7, [sp, #296]
  45bf60:	str	q0, [sp, #112]
  45bf64:	str	q1, [sp, #128]
  45bf68:	str	q2, [sp, #144]
  45bf6c:	str	q3, [sp, #160]
  45bf70:	str	q4, [sp, #176]
  45bf74:	str	q5, [sp, #192]
  45bf78:	str	q6, [sp, #208]
  45bf7c:	str	q7, [sp, #224]
  45bf80:	add	x0, sp, #0x130
  45bf84:	str	x0, [sp, #72]
  45bf88:	add	x0, sp, #0x130
  45bf8c:	str	x0, [sp, #80]
  45bf90:	add	x0, sp, #0xf0
  45bf94:	str	x0, [sp, #88]
  45bf98:	mov	w0, #0xffffffc8            	// #-56
  45bf9c:	str	w0, [sp, #96]
  45bfa0:	mov	w0, #0xffffff80            	// #-128
  45bfa4:	str	w0, [sp, #100]
  45bfa8:	add	x2, sp, #0x10
  45bfac:	add	x3, sp, #0x48
  45bfb0:	ldp	x0, x1, [x3]
  45bfb4:	stp	x0, x1, [x2]
  45bfb8:	ldp	x0, x1, [x3, #16]
  45bfbc:	stp	x0, x1, [x2, #16]
  45bfc0:	add	x0, sp, #0x10
  45bfc4:	mov	x1, x0
  45bfc8:	ldr	x0, [sp, #56]
  45bfcc:	bl	479938 <_obstack_memory_used@@Base+0x1c7f8>
  45bfd0:	str	x0, [sp, #104]
  45bfd4:	ldr	x0, [sp, #104]
  45bfd8:	ldp	x29, x30, [sp], #304
  45bfdc:	ret
  45bfe0:	sub	sp, sp, #0x10
  45bfe4:	str	x0, [sp, #8]
  45bfe8:	ldr	x0, [sp, #8]
  45bfec:	mov	w1, #0xffffff9c            	// #-100
  45bff0:	str	w1, [x0]
  45bff4:	nop
  45bff8:	add	sp, sp, #0x10
  45bffc:	ret
  45c000:	stp	x29, x30, [sp, #-32]!
  45c004:	mov	x29, sp
  45c008:	str	x0, [sp, #24]
  45c00c:	ldr	x0, [sp, #24]
  45c010:	ldr	w0, [x0]
  45c014:	bl	404110 <fchdir@plt>
  45c018:	ldp	x29, x30, [sp], #32
  45c01c:	ret
  45c020:	stp	x29, x30, [sp, #-48]!
  45c024:	mov	x29, sp
  45c028:	str	x0, [sp, #24]
  45c02c:	ldr	x0, [sp, #24]
  45c030:	ldr	w0, [x0]
  45c034:	cmp	w0, #0x0
  45c038:	b.lt	45c088 <argp_usage@@Base+0x12f9c>  // b.tstop
  45c03c:	ldr	x0, [sp, #24]
  45c040:	ldr	w0, [x0]
  45c044:	bl	404660 <close@plt>
  45c048:	cmp	w0, #0x0
  45c04c:	cset	w0, ne  // ne = any
  45c050:	strb	w0, [sp, #47]
  45c054:	ldrb	w0, [sp, #47]
  45c058:	eor	w0, w0, #0x1
  45c05c:	and	w0, w0, #0xff
  45c060:	cmp	w0, #0x0
  45c064:	b.ne	45c088 <argp_usage@@Base+0x12f9c>  // b.any
  45c068:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c06c:	add	x3, x0, #0x340
  45c070:	mov	w2, #0x40                  	// #64
  45c074:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c078:	add	x1, x0, #0x2c8
  45c07c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c080:	add	x0, x0, #0x2d8
  45c084:	bl	404bb0 <__assert_fail@plt>
  45c088:	nop
  45c08c:	ldp	x29, x30, [sp], #48
  45c090:	ret
  45c094:	stp	x29, x30, [sp, #-48]!
  45c098:	mov	x29, sp
  45c09c:	str	x0, [sp, #24]
  45c0a0:	str	x1, [sp, #16]
  45c0a4:	ldr	x0, [sp, #24]
  45c0a8:	ldr	w0, [x0]
  45c0ac:	mov	w2, #0x4900                	// #18688
  45c0b0:	ldr	x1, [sp, #16]
  45c0b4:	bl	404b90 <openat@plt>
  45c0b8:	str	w0, [sp, #44]
  45c0bc:	ldr	w0, [sp, #44]
  45c0c0:	cmp	w0, #0x0
  45c0c4:	b.ge	45c0d0 <argp_usage@@Base+0x12fe4>  // b.tcont
  45c0c8:	mov	w0, #0xffffffff            	// #-1
  45c0cc:	b	45c0e8 <argp_usage@@Base+0x12ffc>
  45c0d0:	ldr	x0, [sp, #24]
  45c0d4:	bl	45c020 <argp_usage@@Base+0x12f34>
  45c0d8:	ldr	x0, [sp, #24]
  45c0dc:	ldr	w1, [sp, #44]
  45c0e0:	str	w1, [x0]
  45c0e4:	mov	w0, #0x0                   	// #0
  45c0e8:	ldp	x29, x30, [sp], #48
  45c0ec:	ret
  45c0f0:	stp	x29, x30, [sp, #-48]!
  45c0f4:	mov	x29, sp
  45c0f8:	str	x0, [sp, #24]
  45c0fc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c100:	add	x1, x0, #0x2e8
  45c104:	ldr	x0, [sp, #24]
  45c108:	bl	404920 <strspn@plt>
  45c10c:	str	x0, [sp, #40]
  45c110:	ldr	x1, [sp, #24]
  45c114:	ldr	x0, [sp, #40]
  45c118:	add	x0, x1, x0
  45c11c:	ldp	x29, x30, [sp], #48
  45c120:	ret
  45c124:	stp	x29, x30, [sp, #-112]!
  45c128:	mov	x29, sp
  45c12c:	str	x0, [sp, #24]
  45c130:	ldr	x0, [sp, #24]
  45c134:	bl	404860 <chdir@plt>
  45c138:	str	w0, [sp, #108]
  45c13c:	ldr	w0, [sp, #108]
  45c140:	cmp	w0, #0x0
  45c144:	b.eq	45c158 <argp_usage@@Base+0x1306c>  // b.none
  45c148:	bl	404bc0 <__errno_location@plt>
  45c14c:	ldr	w0, [x0]
  45c150:	cmp	w0, #0x24
  45c154:	b.eq	45c160 <argp_usage@@Base+0x13074>  // b.none
  45c158:	ldr	w0, [sp, #108]
  45c15c:	b	45c478 <argp_usage@@Base+0x1338c>
  45c160:	ldr	x0, [sp, #24]
  45c164:	bl	4040b0 <strlen@plt>
  45c168:	str	x0, [sp, #96]
  45c16c:	ldr	x1, [sp, #24]
  45c170:	ldr	x0, [sp, #96]
  45c174:	add	x0, x1, x0
  45c178:	str	x0, [sp, #88]
  45c17c:	add	x0, sp, #0x28
  45c180:	bl	45bfe0 <argp_usage@@Base+0x12ef4>
  45c184:	ldr	x0, [sp, #96]
  45c188:	cmp	x0, #0x0
  45c18c:	b.ne	45c1b0 <argp_usage@@Base+0x130c4>  // b.any
  45c190:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c194:	add	x3, x0, #0x350
  45c198:	mov	w2, #0x7e                  	// #126
  45c19c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c1a0:	add	x1, x0, #0x2c8
  45c1a4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c1a8:	add	x0, x0, #0x2f0
  45c1ac:	bl	404bb0 <__assert_fail@plt>
  45c1b0:	ldr	x0, [sp, #96]
  45c1b4:	cmp	x0, #0xfff
  45c1b8:	b.hi	45c1dc <argp_usage@@Base+0x130f0>  // b.pmore
  45c1bc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c1c0:	add	x3, x0, #0x350
  45c1c4:	mov	w2, #0x7f                  	// #127
  45c1c8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c1cc:	add	x1, x0, #0x2c8
  45c1d0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c1d4:	add	x0, x0, #0x2f8
  45c1d8:	bl	404bb0 <__assert_fail@plt>
  45c1dc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c1e0:	add	x1, x0, #0x2e8
  45c1e4:	ldr	x0, [sp, #24]
  45c1e8:	bl	404920 <strspn@plt>
  45c1ec:	str	x0, [sp, #80]
  45c1f0:	ldr	x0, [sp, #80]
  45c1f4:	cmp	x0, #0x2
  45c1f8:	b.ne	45c290 <argp_usage@@Base+0x131a4>  // b.any
  45c1fc:	ldr	x0, [sp, #24]
  45c200:	add	x3, x0, #0x3
  45c204:	ldr	x0, [sp, #24]
  45c208:	add	x0, x0, #0x3
  45c20c:	ldr	x1, [sp, #88]
  45c210:	sub	x0, x1, x0
  45c214:	mov	x2, x0
  45c218:	mov	w1, #0x2f                  	// #47
  45c21c:	mov	x0, x3
  45c220:	bl	404a20 <memchr@plt>
  45c224:	str	x0, [sp, #72]
  45c228:	ldr	x0, [sp, #72]
  45c22c:	cmp	x0, #0x0
  45c230:	b.ne	45c24c <argp_usage@@Base+0x13160>  // b.any
  45c234:	bl	404bc0 <__errno_location@plt>
  45c238:	mov	x1, x0
  45c23c:	mov	w0, #0x24                  	// #36
  45c240:	str	w0, [x1]
  45c244:	mov	w0, #0xffffffff            	// #-1
  45c248:	b	45c478 <argp_usage@@Base+0x1338c>
  45c24c:	ldr	x0, [sp, #72]
  45c250:	strb	wzr, [x0]
  45c254:	add	x0, sp, #0x28
  45c258:	ldr	x1, [sp, #24]
  45c25c:	bl	45c094 <argp_usage@@Base+0x12fa8>
  45c260:	str	w0, [sp, #68]
  45c264:	ldr	x0, [sp, #72]
  45c268:	mov	w1, #0x2f                  	// #47
  45c26c:	strb	w1, [x0]
  45c270:	ldr	w0, [sp, #68]
  45c274:	cmp	w0, #0x0
  45c278:	b.ne	45c42c <argp_usage@@Base+0x13340>  // b.any
  45c27c:	ldr	x0, [sp, #72]
  45c280:	add	x0, x0, #0x1
  45c284:	bl	45c0f0 <argp_usage@@Base+0x13004>
  45c288:	str	x0, [sp, #24]
  45c28c:	b	45c2c8 <argp_usage@@Base+0x131dc>
  45c290:	ldr	x0, [sp, #80]
  45c294:	cmp	x0, #0x0
  45c298:	b.eq	45c2c8 <argp_usage@@Base+0x131dc>  // b.none
  45c29c:	add	x2, sp, #0x28
  45c2a0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c2a4:	add	x1, x0, #0x2e8
  45c2a8:	mov	x0, x2
  45c2ac:	bl	45c094 <argp_usage@@Base+0x12fa8>
  45c2b0:	cmp	w0, #0x0
  45c2b4:	b.ne	45c434 <argp_usage@@Base+0x13348>  // b.any
  45c2b8:	ldr	x1, [sp, #24]
  45c2bc:	ldr	x0, [sp, #80]
  45c2c0:	add	x0, x1, x0
  45c2c4:	str	x0, [sp, #24]
  45c2c8:	ldr	x0, [sp, #24]
  45c2cc:	ldrb	w0, [x0]
  45c2d0:	cmp	w0, #0x2f
  45c2d4:	b.ne	45c2f8 <argp_usage@@Base+0x1320c>  // b.any
  45c2d8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c2dc:	add	x3, x0, #0x350
  45c2e0:	mov	w2, #0xa2                  	// #162
  45c2e4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c2e8:	add	x1, x0, #0x2c8
  45c2ec:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c2f0:	add	x0, x0, #0x308
  45c2f4:	bl	404bb0 <__assert_fail@plt>
  45c2f8:	ldr	x1, [sp, #24]
  45c2fc:	ldr	x0, [sp, #88]
  45c300:	cmp	x1, x0
  45c304:	b.ls	45c3d4 <argp_usage@@Base+0x132e8>  // b.plast
  45c308:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c30c:	add	x3, x0, #0x350
  45c310:	mov	w2, #0xa3                  	// #163
  45c314:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c318:	add	x1, x0, #0x2c8
  45c31c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c320:	add	x0, x0, #0x318
  45c324:	bl	404bb0 <__assert_fail@plt>
  45c328:	mov	x2, #0x1000                	// #4096
  45c32c:	mov	w1, #0x2f                  	// #47
  45c330:	ldr	x0, [sp, #24]
  45c334:	bl	404950 <memrchr@plt>
  45c338:	str	x0, [sp, #56]
  45c33c:	ldr	x0, [sp, #56]
  45c340:	cmp	x0, #0x0
  45c344:	b.ne	45c360 <argp_usage@@Base+0x13274>  // b.any
  45c348:	bl	404bc0 <__errno_location@plt>
  45c34c:	mov	x1, x0
  45c350:	mov	w0, #0x24                  	// #36
  45c354:	str	w0, [x1]
  45c358:	mov	w0, #0xffffffff            	// #-1
  45c35c:	b	45c478 <argp_usage@@Base+0x1338c>
  45c360:	ldr	x0, [sp, #56]
  45c364:	strb	wzr, [x0]
  45c368:	ldr	x1, [sp, #56]
  45c36c:	ldr	x0, [sp, #24]
  45c370:	sub	x0, x1, x0
  45c374:	cmp	x0, #0xfff
  45c378:	b.le	45c39c <argp_usage@@Base+0x132b0>
  45c37c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c380:	add	x3, x0, #0x350
  45c384:	mov	w2, #0xb3                  	// #179
  45c388:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c38c:	add	x1, x0, #0x2c8
  45c390:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45c394:	add	x0, x0, #0x328
  45c398:	bl	404bb0 <__assert_fail@plt>
  45c39c:	add	x0, sp, #0x28
  45c3a0:	ldr	x1, [sp, #24]
  45c3a4:	bl	45c094 <argp_usage@@Base+0x12fa8>
  45c3a8:	str	w0, [sp, #52]
  45c3ac:	ldr	x0, [sp, #56]
  45c3b0:	mov	w1, #0x2f                  	// #47
  45c3b4:	strb	w1, [x0]
  45c3b8:	ldr	w0, [sp, #52]
  45c3bc:	cmp	w0, #0x0
  45c3c0:	b.ne	45c43c <argp_usage@@Base+0x13350>  // b.any
  45c3c4:	ldr	x0, [sp, #56]
  45c3c8:	add	x0, x0, #0x1
  45c3cc:	bl	45c0f0 <argp_usage@@Base+0x13004>
  45c3d0:	str	x0, [sp, #24]
  45c3d4:	ldr	x1, [sp, #88]
  45c3d8:	ldr	x0, [sp, #24]
  45c3dc:	sub	x0, x1, x0
  45c3e0:	cmp	x0, #0xfff
  45c3e4:	b.gt	45c328 <argp_usage@@Base+0x1323c>
  45c3e8:	ldr	x1, [sp, #24]
  45c3ec:	ldr	x0, [sp, #88]
  45c3f0:	cmp	x1, x0
  45c3f4:	b.cs	45c40c <argp_usage@@Base+0x13320>  // b.hs, b.nlast
  45c3f8:	add	x0, sp, #0x28
  45c3fc:	ldr	x1, [sp, #24]
  45c400:	bl	45c094 <argp_usage@@Base+0x12fa8>
  45c404:	cmp	w0, #0x0
  45c408:	b.ne	45c444 <argp_usage@@Base+0x13358>  // b.any
  45c40c:	add	x0, sp, #0x28
  45c410:	bl	45c000 <argp_usage@@Base+0x12f14>
  45c414:	cmp	w0, #0x0
  45c418:	b.ne	45c44c <argp_usage@@Base+0x13360>  // b.any
  45c41c:	add	x0, sp, #0x28
  45c420:	bl	45c020 <argp_usage@@Base+0x12f34>
  45c424:	mov	w0, #0x0                   	// #0
  45c428:	b	45c478 <argp_usage@@Base+0x1338c>
  45c42c:	nop
  45c430:	b	45c450 <argp_usage@@Base+0x13364>
  45c434:	nop
  45c438:	b	45c450 <argp_usage@@Base+0x13364>
  45c43c:	nop
  45c440:	b	45c450 <argp_usage@@Base+0x13364>
  45c444:	nop
  45c448:	b	45c450 <argp_usage@@Base+0x13364>
  45c44c:	nop
  45c450:	bl	404bc0 <__errno_location@plt>
  45c454:	ldr	w0, [x0]
  45c458:	str	w0, [sp, #48]
  45c45c:	add	x0, sp, #0x28
  45c460:	bl	45c020 <argp_usage@@Base+0x12f34>
  45c464:	bl	404bc0 <__errno_location@plt>
  45c468:	mov	x1, x0
  45c46c:	ldr	w0, [sp, #48]
  45c470:	str	w0, [x1]
  45c474:	mov	w0, #0xffffffff            	// #-1
  45c478:	ldp	x29, x30, [sp], #112
  45c47c:	ret
  45c480:	stp	x29, x30, [sp, #-272]!
  45c484:	mov	x29, sp
  45c488:	str	w0, [sp, #28]
  45c48c:	str	w1, [sp, #24]
  45c490:	str	x2, [sp, #224]
  45c494:	str	x3, [sp, #232]
  45c498:	str	x4, [sp, #240]
  45c49c:	str	x5, [sp, #248]
  45c4a0:	str	x6, [sp, #256]
  45c4a4:	str	x7, [sp, #264]
  45c4a8:	str	q0, [sp, #96]
  45c4ac:	str	q1, [sp, #112]
  45c4b0:	str	q2, [sp, #128]
  45c4b4:	str	q3, [sp, #144]
  45c4b8:	str	q4, [sp, #160]
  45c4bc:	str	q5, [sp, #176]
  45c4c0:	str	q6, [sp, #192]
  45c4c4:	str	q7, [sp, #208]
  45c4c8:	mov	w0, #0xffffffff            	// #-1
  45c4cc:	str	w0, [sp, #92]
  45c4d0:	add	x0, sp, #0x110
  45c4d4:	str	x0, [sp, #40]
  45c4d8:	add	x0, sp, #0x110
  45c4dc:	str	x0, [sp, #48]
  45c4e0:	add	x0, sp, #0xe0
  45c4e4:	str	x0, [sp, #56]
  45c4e8:	mov	w0, #0xffffffd0            	// #-48
  45c4ec:	str	w0, [sp, #64]
  45c4f0:	mov	w0, #0xffffff80            	// #-128
  45c4f4:	str	w0, [sp, #68]
  45c4f8:	ldr	w0, [sp, #24]
  45c4fc:	cmp	w0, #0x0
  45c500:	b.eq	45c514 <argp_usage@@Base+0x13428>  // b.none
  45c504:	ldr	w0, [sp, #24]
  45c508:	cmp	w0, #0x406
  45c50c:	b.eq	45c580 <argp_usage@@Base+0x13494>  // b.none
  45c510:	b	45c5ec <argp_usage@@Base+0x13500>
  45c514:	ldr	w1, [sp, #64]
  45c518:	ldr	x0, [sp, #40]
  45c51c:	cmp	w1, #0x0
  45c520:	b.lt	45c534 <argp_usage@@Base+0x13448>  // b.tstop
  45c524:	add	x1, x0, #0xb
  45c528:	and	x1, x1, #0xfffffffffffffff8
  45c52c:	str	x1, [sp, #40]
  45c530:	b	45c564 <argp_usage@@Base+0x13478>
  45c534:	add	w2, w1, #0x8
  45c538:	str	w2, [sp, #64]
  45c53c:	ldr	w2, [sp, #64]
  45c540:	cmp	w2, #0x0
  45c544:	b.le	45c558 <argp_usage@@Base+0x1346c>
  45c548:	add	x1, x0, #0xb
  45c54c:	and	x1, x1, #0xfffffffffffffff8
  45c550:	str	x1, [sp, #40]
  45c554:	b	45c564 <argp_usage@@Base+0x13478>
  45c558:	ldr	x2, [sp, #48]
  45c55c:	sxtw	x0, w1
  45c560:	add	x0, x2, x0
  45c564:	ldr	w0, [x0]
  45c568:	str	w0, [sp, #84]
  45c56c:	ldr	w1, [sp, #84]
  45c570:	ldr	w0, [sp, #28]
  45c574:	bl	45c7bc <argp_usage@@Base+0x136d0>
  45c578:	str	w0, [sp, #92]
  45c57c:	b	45c7b0 <argp_usage@@Base+0x136c4>
  45c580:	ldr	w1, [sp, #64]
  45c584:	ldr	x0, [sp, #40]
  45c588:	cmp	w1, #0x0
  45c58c:	b.lt	45c5a0 <argp_usage@@Base+0x134b4>  // b.tstop
  45c590:	add	x1, x0, #0xb
  45c594:	and	x1, x1, #0xfffffffffffffff8
  45c598:	str	x1, [sp, #40]
  45c59c:	b	45c5d0 <argp_usage@@Base+0x134e4>
  45c5a0:	add	w2, w1, #0x8
  45c5a4:	str	w2, [sp, #64]
  45c5a8:	ldr	w2, [sp, #64]
  45c5ac:	cmp	w2, #0x0
  45c5b0:	b.le	45c5c4 <argp_usage@@Base+0x134d8>
  45c5b4:	add	x1, x0, #0xb
  45c5b8:	and	x1, x1, #0xfffffffffffffff8
  45c5bc:	str	x1, [sp, #40]
  45c5c0:	b	45c5d0 <argp_usage@@Base+0x134e4>
  45c5c4:	ldr	x2, [sp, #48]
  45c5c8:	sxtw	x0, w1
  45c5cc:	add	x0, x2, x0
  45c5d0:	ldr	w0, [x0]
  45c5d4:	str	w0, [sp, #88]
  45c5d8:	ldr	w1, [sp, #88]
  45c5dc:	ldr	w0, [sp, #28]
  45c5e0:	bl	45c7ec <argp_usage@@Base+0x13700>
  45c5e4:	str	w0, [sp, #92]
  45c5e8:	b	45c7b0 <argp_usage@@Base+0x136c4>
  45c5ec:	ldr	w0, [sp, #24]
  45c5f0:	cmp	w0, #0xb
  45c5f4:	b.gt	45c69c <argp_usage@@Base+0x135b0>
  45c5f8:	ldr	w0, [sp, #24]
  45c5fc:	cmp	w0, #0x0
  45c600:	b.ge	45c654 <argp_usage@@Base+0x13568>  // b.tcont
  45c604:	b	45c73c <argp_usage@@Base+0x13650>
  45c608:	ldr	w0, [sp, #24]
  45c60c:	sub	w0, w0, #0x400
  45c610:	mov	x1, #0x1                   	// #1
  45c614:	lsl	x0, x1, x0
  45c618:	mov	x1, #0x2c5                 	// #709
  45c61c:	and	x1, x0, x1
  45c620:	cmp	x1, #0x0
  45c624:	cset	w1, ne  // ne = any
  45c628:	and	w1, w1, #0xff
  45c62c:	cmp	w1, #0x0
  45c630:	b.ne	45c6cc <argp_usage@@Base+0x135e0>  // b.any
  45c634:	mov	x1, #0x502                 	// #1282
  45c638:	and	x0, x0, x1
  45c63c:	cmp	x0, #0x0
  45c640:	cset	w0, ne  // ne = any
  45c644:	and	w0, w0, #0xff
  45c648:	cmp	w0, #0x0
  45c64c:	b.ne	45c6b8 <argp_usage@@Base+0x135cc>  // b.any
  45c650:	b	45c73c <argp_usage@@Base+0x13650>
  45c654:	ldr	w0, [sp, #24]
  45c658:	mov	x1, #0x1                   	// #1
  45c65c:	lsl	x0, x1, x0
  45c660:	mov	x1, #0x515                 	// #1301
  45c664:	and	x1, x0, x1
  45c668:	cmp	x1, #0x0
  45c66c:	cset	w1, ne  // ne = any
  45c670:	and	w1, w1, #0xff
  45c674:	cmp	w1, #0x0
  45c678:	b.ne	45c6cc <argp_usage@@Base+0x135e0>  // b.any
  45c67c:	mov	x1, #0xa0a                 	// #2570
  45c680:	and	x0, x0, x1
  45c684:	cmp	x0, #0x0
  45c688:	cset	w0, ne  // ne = any
  45c68c:	and	w0, w0, #0xff
  45c690:	cmp	w0, #0x0
  45c694:	b.ne	45c6b8 <argp_usage@@Base+0x135cc>  // b.any
  45c698:	b	45c73c <argp_usage@@Base+0x13650>
  45c69c:	ldr	w0, [sp, #24]
  45c6a0:	cmp	w0, #0x40a
  45c6a4:	b.gt	45c73c <argp_usage@@Base+0x13650>
  45c6a8:	ldr	w0, [sp, #24]
  45c6ac:	cmp	w0, #0x400
  45c6b0:	b.ge	45c608 <argp_usage@@Base+0x1351c>  // b.tcont
  45c6b4:	b	45c73c <argp_usage@@Base+0x13650>
  45c6b8:	ldr	w1, [sp, #24]
  45c6bc:	ldr	w0, [sp, #28]
  45c6c0:	bl	4049a0 <fcntl@plt>
  45c6c4:	str	w0, [sp, #92]
  45c6c8:	b	45c7ac <argp_usage@@Base+0x136c0>
  45c6cc:	ldr	w1, [sp, #64]
  45c6d0:	ldr	x0, [sp, #40]
  45c6d4:	cmp	w1, #0x0
  45c6d8:	b.lt	45c6ec <argp_usage@@Base+0x13600>  // b.tstop
  45c6dc:	add	x1, x0, #0xb
  45c6e0:	and	x1, x1, #0xfffffffffffffff8
  45c6e4:	str	x1, [sp, #40]
  45c6e8:	b	45c71c <argp_usage@@Base+0x13630>
  45c6ec:	add	w2, w1, #0x8
  45c6f0:	str	w2, [sp, #64]
  45c6f4:	ldr	w2, [sp, #64]
  45c6f8:	cmp	w2, #0x0
  45c6fc:	b.le	45c710 <argp_usage@@Base+0x13624>
  45c700:	add	x1, x0, #0xb
  45c704:	and	x1, x1, #0xfffffffffffffff8
  45c708:	str	x1, [sp, #40]
  45c70c:	b	45c71c <argp_usage@@Base+0x13630>
  45c710:	ldr	x2, [sp, #48]
  45c714:	sxtw	x0, w1
  45c718:	add	x0, x2, x0
  45c71c:	ldr	w0, [x0]
  45c720:	str	w0, [sp, #80]
  45c724:	ldr	w2, [sp, #80]
  45c728:	ldr	w1, [sp, #24]
  45c72c:	ldr	w0, [sp, #28]
  45c730:	bl	4049a0 <fcntl@plt>
  45c734:	str	w0, [sp, #92]
  45c738:	b	45c7ac <argp_usage@@Base+0x136c0>
  45c73c:	ldr	w1, [sp, #64]
  45c740:	ldr	x0, [sp, #40]
  45c744:	cmp	w1, #0x0
  45c748:	b.lt	45c75c <argp_usage@@Base+0x13670>  // b.tstop
  45c74c:	add	x1, x0, #0xf
  45c750:	and	x1, x1, #0xfffffffffffffff8
  45c754:	str	x1, [sp, #40]
  45c758:	b	45c78c <argp_usage@@Base+0x136a0>
  45c75c:	add	w2, w1, #0x8
  45c760:	str	w2, [sp, #64]
  45c764:	ldr	w2, [sp, #64]
  45c768:	cmp	w2, #0x0
  45c76c:	b.le	45c780 <argp_usage@@Base+0x13694>
  45c770:	add	x1, x0, #0xf
  45c774:	and	x1, x1, #0xfffffffffffffff8
  45c778:	str	x1, [sp, #40]
  45c77c:	b	45c78c <argp_usage@@Base+0x136a0>
  45c780:	ldr	x2, [sp, #48]
  45c784:	sxtw	x0, w1
  45c788:	add	x0, x2, x0
  45c78c:	ldr	x0, [x0]
  45c790:	str	x0, [sp, #72]
  45c794:	ldr	x2, [sp, #72]
  45c798:	ldr	w1, [sp, #24]
  45c79c:	ldr	w0, [sp, #28]
  45c7a0:	bl	4049a0 <fcntl@plt>
  45c7a4:	str	w0, [sp, #92]
  45c7a8:	nop
  45c7ac:	nop
  45c7b0:	ldr	w0, [sp, #92]
  45c7b4:	ldp	x29, x30, [sp], #272
  45c7b8:	ret
  45c7bc:	stp	x29, x30, [sp, #-48]!
  45c7c0:	mov	x29, sp
  45c7c4:	str	w0, [sp, #28]
  45c7c8:	str	w1, [sp, #24]
  45c7cc:	ldr	w2, [sp, #24]
  45c7d0:	mov	w1, #0x0                   	// #0
  45c7d4:	ldr	w0, [sp, #28]
  45c7d8:	bl	4049a0 <fcntl@plt>
  45c7dc:	str	w0, [sp, #44]
  45c7e0:	ldr	w0, [sp, #44]
  45c7e4:	ldp	x29, x30, [sp], #48
  45c7e8:	ret
  45c7ec:	stp	x29, x30, [sp, #-48]!
  45c7f0:	mov	x29, sp
  45c7f4:	str	w0, [sp, #28]
  45c7f8:	str	w1, [sp, #24]
  45c7fc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45c800:	add	x0, x0, #0xf48
  45c804:	ldr	w0, [x0]
  45c808:	cmp	w0, #0x0
  45c80c:	b.lt	45c884 <argp_usage@@Base+0x13798>  // b.tstop
  45c810:	ldr	w2, [sp, #24]
  45c814:	mov	w1, #0x406                 	// #1030
  45c818:	ldr	w0, [sp, #28]
  45c81c:	bl	4049a0 <fcntl@plt>
  45c820:	str	w0, [sp, #44]
  45c824:	ldr	w0, [sp, #44]
  45c828:	cmp	w0, #0x0
  45c82c:	b.ge	45c840 <argp_usage@@Base+0x13754>  // b.tcont
  45c830:	bl	404bc0 <__errno_location@plt>
  45c834:	ldr	w0, [x0]
  45c838:	cmp	w0, #0x16
  45c83c:	b.eq	45c854 <argp_usage@@Base+0x13768>  // b.none
  45c840:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45c844:	add	x0, x0, #0xf48
  45c848:	mov	w1, #0x1                   	// #1
  45c84c:	str	w1, [x0]
  45c850:	b	45c894 <argp_usage@@Base+0x137a8>
  45c854:	ldr	w1, [sp, #24]
  45c858:	ldr	w0, [sp, #28]
  45c85c:	bl	45c7bc <argp_usage@@Base+0x136d0>
  45c860:	str	w0, [sp, #44]
  45c864:	ldr	w0, [sp, #44]
  45c868:	cmp	w0, #0x0
  45c86c:	b.lt	45c894 <argp_usage@@Base+0x137a8>  // b.tstop
  45c870:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45c874:	add	x0, x0, #0xf48
  45c878:	mov	w1, #0xffffffff            	// #-1
  45c87c:	str	w1, [x0]
  45c880:	b	45c894 <argp_usage@@Base+0x137a8>
  45c884:	ldr	w1, [sp, #24]
  45c888:	ldr	w0, [sp, #28]
  45c88c:	bl	45c7bc <argp_usage@@Base+0x136d0>
  45c890:	str	w0, [sp, #44]
  45c894:	ldr	w0, [sp, #44]
  45c898:	cmp	w0, #0x0
  45c89c:	b.lt	45c91c <argp_usage@@Base+0x13830>  // b.tstop
  45c8a0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45c8a4:	add	x0, x0, #0xf48
  45c8a8:	ldr	w0, [x0]
  45c8ac:	cmn	w0, #0x1
  45c8b0:	b.ne	45c91c <argp_usage@@Base+0x13830>  // b.any
  45c8b4:	mov	w1, #0x1                   	// #1
  45c8b8:	ldr	w0, [sp, #44]
  45c8bc:	bl	4049a0 <fcntl@plt>
  45c8c0:	str	w0, [sp, #40]
  45c8c4:	ldr	w0, [sp, #40]
  45c8c8:	cmp	w0, #0x0
  45c8cc:	b.lt	45c8f0 <argp_usage@@Base+0x13804>  // b.tstop
  45c8d0:	ldr	w0, [sp, #40]
  45c8d4:	orr	w0, w0, #0x1
  45c8d8:	mov	w2, w0
  45c8dc:	mov	w1, #0x2                   	// #2
  45c8e0:	ldr	w0, [sp, #44]
  45c8e4:	bl	4049a0 <fcntl@plt>
  45c8e8:	cmn	w0, #0x1
  45c8ec:	b.ne	45c91c <argp_usage@@Base+0x13830>  // b.any
  45c8f0:	bl	404bc0 <__errno_location@plt>
  45c8f4:	ldr	w0, [x0]
  45c8f8:	str	w0, [sp, #36]
  45c8fc:	ldr	w0, [sp, #44]
  45c900:	bl	404660 <close@plt>
  45c904:	bl	404bc0 <__errno_location@plt>
  45c908:	mov	x1, x0
  45c90c:	ldr	w0, [sp, #36]
  45c910:	str	w0, [x1]
  45c914:	mov	w0, #0xffffffff            	// #-1
  45c918:	str	w0, [sp, #44]
  45c91c:	ldr	w0, [sp, #44]
  45c920:	ldp	x29, x30, [sp], #48
  45c924:	ret
  45c928:	stp	x29, x30, [sp, #-64]!
  45c92c:	mov	x29, sp
  45c930:	str	w0, [sp, #60]
  45c934:	str	x1, [sp, #48]
  45c938:	str	x2, [sp, #40]
  45c93c:	str	x3, [sp, #32]
  45c940:	str	x4, [sp, #24]
  45c944:	mov	w6, #0x0                   	// #0
  45c948:	mov	w5, #0x0                   	// #0
  45c94c:	ldr	x4, [sp, #24]
  45c950:	ldr	x3, [sp, #32]
  45c954:	ldr	x2, [sp, #40]
  45c958:	ldr	x1, [sp, #48]
  45c95c:	ldr	w0, [sp, #60]
  45c960:	bl	47ae84 <_obstack_memory_used@@Base+0x1dd44>
  45c964:	ldp	x29, x30, [sp], #64
  45c968:	ret
  45c96c:	stp	x29, x30, [sp, #-64]!
  45c970:	mov	x29, sp
  45c974:	str	w0, [sp, #60]
  45c978:	str	x1, [sp, #48]
  45c97c:	str	x2, [sp, #40]
  45c980:	str	x3, [sp, #32]
  45c984:	str	x4, [sp, #24]
  45c988:	str	x5, [sp, #16]
  45c98c:	mov	w7, #0x0                   	// #0
  45c990:	ldr	x6, [sp, #16]
  45c994:	mov	w5, #0x0                   	// #0
  45c998:	ldr	x4, [sp, #24]
  45c99c:	ldr	x3, [sp, #32]
  45c9a0:	ldr	x2, [sp, #40]
  45c9a4:	ldr	x1, [sp, #48]
  45c9a8:	ldr	w0, [sp, #60]
  45c9ac:	bl	47a50c <_obstack_memory_used@@Base+0x1d3cc>
  45c9b0:	ldp	x29, x30, [sp], #64
  45c9b4:	ret
  45c9b8:	stp	x29, x30, [sp, #-64]!
  45c9bc:	mov	x29, sp
  45c9c0:	str	w0, [sp, #60]
  45c9c4:	str	x1, [sp, #48]
  45c9c8:	str	x2, [sp, #40]
  45c9cc:	str	x3, [sp, #32]
  45c9d0:	str	x4, [sp, #24]
  45c9d4:	mov	w6, #0x0                   	// #0
  45c9d8:	mov	w5, #0x1                   	// #1
  45c9dc:	ldr	x4, [sp, #24]
  45c9e0:	ldr	x3, [sp, #32]
  45c9e4:	ldr	x2, [sp, #40]
  45c9e8:	ldr	x1, [sp, #48]
  45c9ec:	ldr	w0, [sp, #60]
  45c9f0:	bl	47ae84 <_obstack_memory_used@@Base+0x1dd44>
  45c9f4:	ldp	x29, x30, [sp], #64
  45c9f8:	ret
  45c9fc:	stp	x29, x30, [sp, #-64]!
  45ca00:	mov	x29, sp
  45ca04:	str	w0, [sp, #60]
  45ca08:	str	x1, [sp, #48]
  45ca0c:	str	x2, [sp, #40]
  45ca10:	str	x3, [sp, #32]
  45ca14:	str	x4, [sp, #24]
  45ca18:	str	x5, [sp, #16]
  45ca1c:	mov	w7, #0x0                   	// #0
  45ca20:	ldr	x6, [sp, #16]
  45ca24:	mov	w5, #0x1                   	// #1
  45ca28:	ldr	x4, [sp, #24]
  45ca2c:	ldr	x3, [sp, #32]
  45ca30:	ldr	x2, [sp, #40]
  45ca34:	ldr	x1, [sp, #48]
  45ca38:	ldr	w0, [sp, #60]
  45ca3c:	bl	47a50c <_obstack_memory_used@@Base+0x1d3cc>
  45ca40:	ldp	x29, x30, [sp], #64
  45ca44:	ret
  45ca48:	stp	x29, x30, [sp, #-64]!
  45ca4c:	mov	x29, sp
  45ca50:	str	x0, [sp, #40]
  45ca54:	str	x1, [sp, #32]
  45ca58:	str	x2, [sp, #24]
  45ca5c:	str	x3, [sp, #16]
  45ca60:	ldr	x0, [sp, #40]
  45ca64:	cmp	x0, #0x0
  45ca68:	b.ne	45ca74 <argp_usage@@Base+0x13988>  // b.any
  45ca6c:	add	x0, sp, #0x30
  45ca70:	str	x0, [sp, #40]
  45ca74:	ldr	x3, [sp, #16]
  45ca78:	ldr	x2, [sp, #24]
  45ca7c:	ldr	x1, [sp, #32]
  45ca80:	ldr	x0, [sp, #40]
  45ca84:	bl	404010 <mbrtowc@plt>
  45ca88:	str	x0, [sp, #56]
  45ca8c:	ldr	x0, [sp, #56]
  45ca90:	cmn	x0, #0x3
  45ca94:	b.ls	45cae0 <argp_usage@@Base+0x139f4>  // b.plast
  45ca98:	ldr	x0, [sp, #24]
  45ca9c:	cmp	x0, #0x0
  45caa0:	b.eq	45cae0 <argp_usage@@Base+0x139f4>  // b.none
  45caa4:	mov	w0, #0x0                   	// #0
  45caa8:	bl	476d8c <_obstack_memory_used@@Base+0x19c4c>
  45caac:	and	w0, w0, #0xff
  45cab0:	eor	w0, w0, #0x1
  45cab4:	and	w0, w0, #0xff
  45cab8:	cmp	w0, #0x0
  45cabc:	b.eq	45cae0 <argp_usage@@Base+0x139f4>  // b.none
  45cac0:	ldr	x0, [sp, #32]
  45cac4:	ldrb	w0, [x0]
  45cac8:	strb	w0, [sp, #55]
  45cacc:	ldrb	w1, [sp, #55]
  45cad0:	ldr	x0, [sp, #40]
  45cad4:	str	w1, [x0]
  45cad8:	mov	x0, #0x1                   	// #1
  45cadc:	b	45cae4 <argp_usage@@Base+0x139f8>
  45cae0:	ldr	x0, [sp, #56]
  45cae4:	ldp	x29, x30, [sp], #64
  45cae8:	ret
  45caec:	stp	x29, x30, [sp, #-32]!
  45caf0:	mov	x29, sp
  45caf4:	str	x0, [sp, #24]
  45caf8:	str	x1, [sp, #16]
  45cafc:	ldr	x0, [sp, #24]
  45cb00:	ldrb	w0, [x0, #80]
  45cb04:	and	w0, w0, #0x1
  45cb08:	and	w0, w0, #0xff
  45cb0c:	cmp	w0, #0x0
  45cb10:	b.eq	45cb30 <argp_usage@@Base+0x13a44>  // b.none
  45cb14:	ldr	x0, [sp, #24]
  45cb18:	ldr	x2, [x0, #56]
  45cb1c:	ldr	x0, [sp, #24]
  45cb20:	ldr	x0, [x0, #72]
  45cb24:	ldr	x1, [sp, #16]
  45cb28:	blr	x2
  45cb2c:	b	45cb40 <argp_usage@@Base+0x13a54>
  45cb30:	ldr	x0, [sp, #24]
  45cb34:	ldr	x1, [x0, #56]
  45cb38:	ldr	x0, [sp, #16]
  45cb3c:	blr	x1
  45cb40:	ldp	x29, x30, [sp], #32
  45cb44:	ret
  45cb48:	stp	x29, x30, [sp, #-32]!
  45cb4c:	mov	x29, sp
  45cb50:	str	x0, [sp, #24]
  45cb54:	str	x1, [sp, #16]
  45cb58:	ldr	x0, [sp, #24]
  45cb5c:	ldrb	w0, [x0, #80]
  45cb60:	and	w0, w0, #0x1
  45cb64:	and	w0, w0, #0xff
  45cb68:	cmp	w0, #0x0
  45cb6c:	b.eq	45cb8c <argp_usage@@Base+0x13aa0>  // b.none
  45cb70:	ldr	x0, [sp, #24]
  45cb74:	ldr	x2, [x0, #64]
  45cb78:	ldr	x0, [sp, #24]
  45cb7c:	ldr	x0, [x0, #72]
  45cb80:	ldr	x1, [sp, #16]
  45cb84:	blr	x2
  45cb88:	b	45cb9c <argp_usage@@Base+0x13ab0>
  45cb8c:	ldr	x0, [sp, #24]
  45cb90:	ldr	x1, [x0, #64]
  45cb94:	ldr	x0, [sp, #16]
  45cb98:	blr	x1
  45cb9c:	nop
  45cba0:	ldp	x29, x30, [sp], #32
  45cba4:	ret
  45cba8:	stp	x29, x30, [sp, #-64]!
  45cbac:	mov	x29, sp
  45cbb0:	str	x0, [sp, #40]
  45cbb4:	str	x1, [sp, #32]
  45cbb8:	str	x2, [sp, #24]
  45cbbc:	ldr	x0, [sp, #24]
  45cbc0:	cmp	x0, #0x0
  45cbc4:	b.ne	45cbd0 <argp_usage@@Base+0x13ae4>  // b.any
  45cbc8:	mov	x0, #0x10                  	// #16
  45cbcc:	str	x0, [sp, #24]
  45cbd0:	ldr	x0, [sp, #32]
  45cbd4:	cmp	x0, #0x0
  45cbd8:	b.ne	45cbf8 <argp_usage@@Base+0x13b0c>  // b.any
  45cbdc:	mov	w0, #0x20                  	// #32
  45cbe0:	str	w0, [sp, #60]
  45cbe4:	mov	w1, #0x1000                	// #4096
  45cbe8:	ldr	w0, [sp, #60]
  45cbec:	sub	w0, w1, w0
  45cbf0:	sxtw	x0, w0
  45cbf4:	str	x0, [sp, #32]
  45cbf8:	ldr	x0, [sp, #40]
  45cbfc:	ldr	x1, [sp, #32]
  45cc00:	str	x1, [x0]
  45cc04:	ldr	x0, [sp, #24]
  45cc08:	sub	x1, x0, #0x1
  45cc0c:	ldr	x0, [sp, #40]
  45cc10:	str	x1, [x0, #48]
  45cc14:	ldr	x0, [sp, #40]
  45cc18:	ldr	x0, [x0]
  45cc1c:	mov	x1, x0
  45cc20:	ldr	x0, [sp, #40]
  45cc24:	bl	45caec <argp_usage@@Base+0x13a00>
  45cc28:	mov	x1, x0
  45cc2c:	ldr	x0, [sp, #40]
  45cc30:	str	x1, [x0, #8]
  45cc34:	ldr	x0, [sp, #40]
  45cc38:	ldr	x0, [x0, #8]
  45cc3c:	str	x0, [sp, #48]
  45cc40:	ldr	x0, [sp, #48]
  45cc44:	cmp	x0, #0x0
  45cc48:	b.ne	45cc5c <argp_usage@@Base+0x13b70>  // b.any
  45cc4c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45cc50:	add	x0, x0, #0x478
  45cc54:	ldr	x0, [x0]
  45cc58:	blr	x0
  45cc5c:	ldr	x0, [sp, #48]
  45cc60:	add	x0, x0, #0x10
  45cc64:	mov	x1, x0
  45cc68:	ldr	x0, [sp, #24]
  45cc6c:	add	x0, x1, x0
  45cc70:	sub	x1, x0, #0x1
  45cc74:	ldr	x0, [sp, #24]
  45cc78:	neg	x0, x0
  45cc7c:	and	x0, x1, x0
  45cc80:	mov	x1, x0
  45cc84:	ldr	x0, [sp, #40]
  45cc88:	str	x1, [x0, #16]
  45cc8c:	ldr	x0, [sp, #40]
  45cc90:	ldr	x1, [x0, #16]
  45cc94:	ldr	x0, [sp, #40]
  45cc98:	str	x1, [x0, #24]
  45cc9c:	ldr	x0, [sp, #40]
  45cca0:	ldr	x0, [x0]
  45cca4:	ldr	x1, [sp, #48]
  45cca8:	add	x1, x1, x0
  45ccac:	ldr	x0, [sp, #48]
  45ccb0:	str	x1, [x0]
  45ccb4:	ldr	x0, [sp, #48]
  45ccb8:	ldr	x1, [x0]
  45ccbc:	ldr	x0, [sp, #40]
  45ccc0:	str	x1, [x0, #32]
  45ccc4:	ldr	x0, [sp, #48]
  45ccc8:	str	xzr, [x0, #8]
  45cccc:	ldr	x0, [sp, #40]
  45ccd0:	ldrb	w1, [x0, #80]
  45ccd4:	and	w1, w1, #0xfffffffd
  45ccd8:	strb	w1, [x0, #80]
  45ccdc:	ldr	x0, [sp, #40]
  45cce0:	ldrb	w1, [x0, #80]
  45cce4:	and	w1, w1, #0xfffffffb
  45cce8:	strb	w1, [x0, #80]
  45ccec:	mov	w0, #0x1                   	// #1
  45ccf0:	ldp	x29, x30, [sp], #64
  45ccf4:	ret

000000000045ccf8 <_obstack_begin@@Base>:
  45ccf8:	stp	x29, x30, [sp, #-64]!
  45ccfc:	mov	x29, sp
  45cd00:	str	x0, [sp, #56]
  45cd04:	str	x1, [sp, #48]
  45cd08:	str	x2, [sp, #40]
  45cd0c:	str	x3, [sp, #32]
  45cd10:	str	x4, [sp, #24]
  45cd14:	ldr	x0, [sp, #56]
  45cd18:	ldr	x1, [sp, #32]
  45cd1c:	str	x1, [x0, #56]
  45cd20:	ldr	x0, [sp, #56]
  45cd24:	ldr	x1, [sp, #24]
  45cd28:	str	x1, [x0, #64]
  45cd2c:	ldr	x0, [sp, #56]
  45cd30:	ldrb	w1, [x0, #80]
  45cd34:	and	w1, w1, #0xfffffffe
  45cd38:	strb	w1, [x0, #80]
  45cd3c:	ldr	x2, [sp, #40]
  45cd40:	ldr	x1, [sp, #48]
  45cd44:	ldr	x0, [sp, #56]
  45cd48:	bl	45cba8 <argp_usage@@Base+0x13abc>
  45cd4c:	ldp	x29, x30, [sp], #64
  45cd50:	ret

000000000045cd54 <_obstack_begin_1@@Base>:
  45cd54:	stp	x29, x30, [sp, #-64]!
  45cd58:	mov	x29, sp
  45cd5c:	str	x0, [sp, #56]
  45cd60:	str	x1, [sp, #48]
  45cd64:	str	x2, [sp, #40]
  45cd68:	str	x3, [sp, #32]
  45cd6c:	str	x4, [sp, #24]
  45cd70:	str	x5, [sp, #16]
  45cd74:	ldr	x0, [sp, #56]
  45cd78:	ldr	x1, [sp, #32]
  45cd7c:	str	x1, [x0, #56]
  45cd80:	ldr	x0, [sp, #56]
  45cd84:	ldr	x1, [sp, #24]
  45cd88:	str	x1, [x0, #64]
  45cd8c:	ldr	x0, [sp, #56]
  45cd90:	ldr	x1, [sp, #16]
  45cd94:	str	x1, [x0, #72]
  45cd98:	ldr	x0, [sp, #56]
  45cd9c:	ldrb	w1, [x0, #80]
  45cda0:	orr	w1, w1, #0x1
  45cda4:	strb	w1, [x0, #80]
  45cda8:	ldr	x2, [sp, #40]
  45cdac:	ldr	x1, [sp, #48]
  45cdb0:	ldr	x0, [sp, #56]
  45cdb4:	bl	45cba8 <argp_usage@@Base+0x13abc>
  45cdb8:	ldp	x29, x30, [sp], #64
  45cdbc:	ret

000000000045cdc0 <_obstack_newchunk@@Base>:
  45cdc0:	stp	x29, x30, [sp, #-96]!
  45cdc4:	mov	x29, sp
  45cdc8:	str	x0, [sp, #24]
  45cdcc:	str	x1, [sp, #16]
  45cdd0:	ldr	x0, [sp, #24]
  45cdd4:	ldr	x0, [x0, #8]
  45cdd8:	str	x0, [sp, #72]
  45cddc:	str	xzr, [sp, #88]
  45cde0:	ldr	x0, [sp, #24]
  45cde4:	ldr	x1, [x0, #24]
  45cde8:	ldr	x0, [sp, #24]
  45cdec:	ldr	x0, [x0, #16]
  45cdf0:	sub	x0, x1, x0
  45cdf4:	str	x0, [sp, #64]
  45cdf8:	ldr	x1, [sp, #64]
  45cdfc:	ldr	x0, [sp, #16]
  45ce00:	add	x0, x1, x0
  45ce04:	str	x0, [sp, #56]
  45ce08:	ldr	x0, [sp, #24]
  45ce0c:	ldr	x0, [x0, #48]
  45ce10:	ldr	x1, [sp, #56]
  45ce14:	add	x0, x1, x0
  45ce18:	str	x0, [sp, #48]
  45ce1c:	ldr	x0, [sp, #64]
  45ce20:	lsr	x1, x0, #3
  45ce24:	ldr	x0, [sp, #48]
  45ce28:	add	x0, x1, x0
  45ce2c:	add	x0, x0, #0x64
  45ce30:	str	x0, [sp, #80]
  45ce34:	ldr	x1, [sp, #80]
  45ce38:	ldr	x0, [sp, #48]
  45ce3c:	cmp	x1, x0
  45ce40:	b.cs	45ce4c <_obstack_newchunk@@Base+0x8c>  // b.hs, b.nlast
  45ce44:	ldr	x0, [sp, #48]
  45ce48:	str	x0, [sp, #80]
  45ce4c:	ldr	x0, [sp, #24]
  45ce50:	ldr	x0, [x0]
  45ce54:	ldr	x1, [sp, #80]
  45ce58:	cmp	x1, x0
  45ce5c:	b.cs	45ce6c <_obstack_newchunk@@Base+0xac>  // b.hs, b.nlast
  45ce60:	ldr	x0, [sp, #24]
  45ce64:	ldr	x0, [x0]
  45ce68:	str	x0, [sp, #80]
  45ce6c:	ldr	x1, [sp, #64]
  45ce70:	ldr	x0, [sp, #56]
  45ce74:	cmp	x1, x0
  45ce78:	b.hi	45ce9c <_obstack_newchunk@@Base+0xdc>  // b.pmore
  45ce7c:	ldr	x1, [sp, #56]
  45ce80:	ldr	x0, [sp, #48]
  45ce84:	cmp	x1, x0
  45ce88:	b.hi	45ce9c <_obstack_newchunk@@Base+0xdc>  // b.pmore
  45ce8c:	ldr	x1, [sp, #80]
  45ce90:	ldr	x0, [sp, #24]
  45ce94:	bl	45caec <argp_usage@@Base+0x13a00>
  45ce98:	str	x0, [sp, #88]
  45ce9c:	ldr	x0, [sp, #88]
  45cea0:	cmp	x0, #0x0
  45cea4:	b.ne	45ceb8 <_obstack_newchunk@@Base+0xf8>  // b.any
  45cea8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45ceac:	add	x0, x0, #0x478
  45ceb0:	ldr	x0, [x0]
  45ceb4:	blr	x0
  45ceb8:	ldr	x0, [sp, #24]
  45cebc:	ldr	x1, [sp, #88]
  45cec0:	str	x1, [x0, #8]
  45cec4:	ldr	x0, [sp, #88]
  45cec8:	ldr	x1, [sp, #72]
  45cecc:	str	x1, [x0, #8]
  45ced0:	ldr	x1, [sp, #88]
  45ced4:	ldr	x0, [sp, #80]
  45ced8:	add	x1, x1, x0
  45cedc:	ldr	x0, [sp, #24]
  45cee0:	str	x1, [x0, #32]
  45cee4:	ldr	x0, [sp, #24]
  45cee8:	ldr	x1, [x0, #32]
  45ceec:	ldr	x0, [sp, #88]
  45cef0:	str	x1, [x0]
  45cef4:	ldr	x0, [sp, #88]
  45cef8:	add	x0, x0, #0x10
  45cefc:	mov	x1, x0
  45cf00:	ldr	x0, [sp, #24]
  45cf04:	ldr	x0, [x0, #48]
  45cf08:	add	x1, x1, x0
  45cf0c:	ldr	x0, [sp, #24]
  45cf10:	ldr	x0, [x0, #48]
  45cf14:	mvn	x0, x0
  45cf18:	and	x0, x1, x0
  45cf1c:	str	x0, [sp, #40]
  45cf20:	ldr	x0, [sp, #24]
  45cf24:	ldr	x0, [x0, #16]
  45cf28:	ldr	x2, [sp, #64]
  45cf2c:	mov	x1, x0
  45cf30:	ldr	x0, [sp, #40]
  45cf34:	bl	404020 <memcpy@plt>
  45cf38:	ldr	x0, [sp, #24]
  45cf3c:	ldrb	w0, [x0, #80]
  45cf40:	and	w0, w0, #0x2
  45cf44:	and	w0, w0, #0xff
  45cf48:	cmp	w0, #0x0
  45cf4c:	b.ne	45cfa4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  45cf50:	ldr	x0, [sp, #24]
  45cf54:	ldr	x0, [x0, #16]
  45cf58:	ldr	x1, [sp, #72]
  45cf5c:	add	x1, x1, #0x10
  45cf60:	mov	x2, x1
  45cf64:	ldr	x1, [sp, #24]
  45cf68:	ldr	x1, [x1, #48]
  45cf6c:	add	x2, x2, x1
  45cf70:	ldr	x1, [sp, #24]
  45cf74:	ldr	x1, [x1, #48]
  45cf78:	mvn	x1, x1
  45cf7c:	and	x1, x2, x1
  45cf80:	cmp	x0, x1
  45cf84:	b.ne	45cfa4 <_obstack_newchunk@@Base+0x1e4>  // b.any
  45cf88:	ldr	x0, [sp, #72]
  45cf8c:	ldr	x1, [x0, #8]
  45cf90:	ldr	x0, [sp, #88]
  45cf94:	str	x1, [x0, #8]
  45cf98:	ldr	x1, [sp, #72]
  45cf9c:	ldr	x0, [sp, #24]
  45cfa0:	bl	45cb48 <argp_usage@@Base+0x13a5c>
  45cfa4:	ldr	x0, [sp, #24]
  45cfa8:	ldr	x1, [sp, #40]
  45cfac:	str	x1, [x0, #16]
  45cfb0:	ldr	x0, [sp, #24]
  45cfb4:	ldr	x1, [x0, #16]
  45cfb8:	ldr	x0, [sp, #64]
  45cfbc:	add	x1, x1, x0
  45cfc0:	ldr	x0, [sp, #24]
  45cfc4:	str	x1, [x0, #24]
  45cfc8:	ldr	x0, [sp, #24]
  45cfcc:	ldrb	w1, [x0, #80]
  45cfd0:	and	w1, w1, #0xfffffffd
  45cfd4:	strb	w1, [x0, #80]
  45cfd8:	nop
  45cfdc:	ldp	x29, x30, [sp], #96
  45cfe0:	ret

000000000045cfe4 <_obstack_allocated_p@@Base>:
  45cfe4:	sub	sp, sp, #0x20
  45cfe8:	str	x0, [sp, #8]
  45cfec:	str	x1, [sp]
  45cff0:	ldr	x0, [sp, #8]
  45cff4:	ldr	x0, [x0, #8]
  45cff8:	str	x0, [sp, #24]
  45cffc:	b	45d014 <_obstack_allocated_p@@Base+0x30>
  45d000:	ldr	x0, [sp, #24]
  45d004:	ldr	x0, [x0, #8]
  45d008:	str	x0, [sp, #16]
  45d00c:	ldr	x0, [sp, #16]
  45d010:	str	x0, [sp, #24]
  45d014:	ldr	x0, [sp, #24]
  45d018:	cmp	x0, #0x0
  45d01c:	b.eq	45d044 <_obstack_allocated_p@@Base+0x60>  // b.none
  45d020:	ldr	x1, [sp, #24]
  45d024:	ldr	x0, [sp]
  45d028:	cmp	x1, x0
  45d02c:	b.cs	45d000 <_obstack_allocated_p@@Base+0x1c>  // b.hs, b.nlast
  45d030:	ldr	x0, [sp, #24]
  45d034:	ldr	x0, [x0]
  45d038:	ldr	x1, [sp]
  45d03c:	cmp	x1, x0
  45d040:	b.hi	45d000 <_obstack_allocated_p@@Base+0x1c>  // b.pmore
  45d044:	ldr	x0, [sp, #24]
  45d048:	cmp	x0, #0x0
  45d04c:	cset	w0, ne  // ne = any
  45d050:	and	w0, w0, #0xff
  45d054:	add	sp, sp, #0x20
  45d058:	ret

000000000045d05c <_obstack_free@@Base>:
  45d05c:	stp	x29, x30, [sp, #-48]!
  45d060:	mov	x29, sp
  45d064:	str	x0, [sp, #24]
  45d068:	str	x1, [sp, #16]
  45d06c:	ldr	x0, [sp, #24]
  45d070:	ldr	x0, [x0, #8]
  45d074:	str	x0, [sp, #40]
  45d078:	b	45d0ac <_obstack_free@@Base+0x50>
  45d07c:	ldr	x0, [sp, #40]
  45d080:	ldr	x0, [x0, #8]
  45d084:	str	x0, [sp, #32]
  45d088:	ldr	x1, [sp, #40]
  45d08c:	ldr	x0, [sp, #24]
  45d090:	bl	45cb48 <argp_usage@@Base+0x13a5c>
  45d094:	ldr	x0, [sp, #32]
  45d098:	str	x0, [sp, #40]
  45d09c:	ldr	x0, [sp, #24]
  45d0a0:	ldrb	w1, [x0, #80]
  45d0a4:	orr	w1, w1, #0x2
  45d0a8:	strb	w1, [x0, #80]
  45d0ac:	ldr	x0, [sp, #40]
  45d0b0:	cmp	x0, #0x0
  45d0b4:	b.eq	45d0dc <_obstack_free@@Base+0x80>  // b.none
  45d0b8:	ldr	x1, [sp, #40]
  45d0bc:	ldr	x0, [sp, #16]
  45d0c0:	cmp	x1, x0
  45d0c4:	b.cs	45d07c <_obstack_free@@Base+0x20>  // b.hs, b.nlast
  45d0c8:	ldr	x0, [sp, #40]
  45d0cc:	ldr	x0, [x0]
  45d0d0:	ldr	x1, [sp, #16]
  45d0d4:	cmp	x1, x0
  45d0d8:	b.hi	45d07c <_obstack_free@@Base+0x20>  // b.pmore
  45d0dc:	ldr	x0, [sp, #40]
  45d0e0:	cmp	x0, #0x0
  45d0e4:	b.eq	45d124 <_obstack_free@@Base+0xc8>  // b.none
  45d0e8:	ldr	x0, [sp, #24]
  45d0ec:	ldr	x1, [sp, #16]
  45d0f0:	str	x1, [x0, #24]
  45d0f4:	ldr	x0, [sp, #24]
  45d0f8:	ldr	x1, [x0, #24]
  45d0fc:	ldr	x0, [sp, #24]
  45d100:	str	x1, [x0, #16]
  45d104:	ldr	x0, [sp, #40]
  45d108:	ldr	x1, [x0]
  45d10c:	ldr	x0, [sp, #24]
  45d110:	str	x1, [x0, #32]
  45d114:	ldr	x0, [sp, #24]
  45d118:	ldr	x1, [sp, #40]
  45d11c:	str	x1, [x0, #8]
  45d120:	b	45d134 <_obstack_free@@Base+0xd8>
  45d124:	ldr	x0, [sp, #16]
  45d128:	cmp	x0, #0x0
  45d12c:	b.eq	45d134 <_obstack_free@@Base+0xd8>  // b.none
  45d130:	bl	404710 <abort@plt>
  45d134:	nop
  45d138:	ldp	x29, x30, [sp], #48
  45d13c:	ret

000000000045d140 <_obstack_memory_used@@Base>:
  45d140:	sub	sp, sp, #0x20
  45d144:	str	x0, [sp, #8]
  45d148:	str	xzr, [sp, #16]
  45d14c:	ldr	x0, [sp, #8]
  45d150:	ldr	x0, [x0, #8]
  45d154:	str	x0, [sp, #24]
  45d158:	b	45d188 <_obstack_memory_used@@Base+0x48>
  45d15c:	ldr	x0, [sp, #24]
  45d160:	ldr	x1, [x0]
  45d164:	ldr	x0, [sp, #24]
  45d168:	sub	x0, x1, x0
  45d16c:	mov	x1, x0
  45d170:	ldr	x0, [sp, #16]
  45d174:	add	x0, x0, x1
  45d178:	str	x0, [sp, #16]
  45d17c:	ldr	x0, [sp, #24]
  45d180:	ldr	x0, [x0, #8]
  45d184:	str	x0, [sp, #24]
  45d188:	ldr	x0, [sp, #24]
  45d18c:	cmp	x0, #0x0
  45d190:	b.ne	45d15c <_obstack_memory_used@@Base+0x1c>  // b.any
  45d194:	ldr	x0, [sp, #16]
  45d198:	add	sp, sp, #0x20
  45d19c:	ret
  45d1a0:	stp	x29, x30, [sp, #-32]!
  45d1a4:	mov	x29, sp
  45d1a8:	str	x19, [sp, #16]
  45d1ac:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45d1b0:	add	x0, x0, #0x498
  45d1b4:	ldr	x19, [x0]
  45d1b8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45d1bc:	add	x0, x0, #0x360
  45d1c0:	bl	404c60 <gettext@plt>
  45d1c4:	mov	x2, x0
  45d1c8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45d1cc:	add	x1, x0, #0x378
  45d1d0:	mov	x0, x19
  45d1d4:	bl	404c90 <fprintf@plt>
  45d1d8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45d1dc:	add	x0, x0, #0x418
  45d1e0:	ldr	w0, [x0]
  45d1e4:	bl	4040d0 <exit@plt>
  45d1e8:	stp	x29, x30, [sp, #-112]!
  45d1ec:	mov	x29, sp
  45d1f0:	str	x0, [sp, #40]
  45d1f4:	str	w1, [sp, #36]
  45d1f8:	str	x2, [sp, #24]
  45d1fc:	ldr	x0, [sp, #40]
  45d200:	str	x0, [sp, #104]
  45d204:	ldr	x0, [sp, #24]
  45d208:	ldrb	w0, [x0]
  45d20c:	cmp	w0, #0x0
  45d210:	b.ne	45d224 <_obstack_memory_used@@Base+0xe4>  // b.any
  45d214:	ldr	x0, [sp, #40]
  45d218:	strb	wzr, [x0]
  45d21c:	ldr	x0, [sp, #40]
  45d220:	b	45d340 <_obstack_memory_used@@Base+0x200>
  45d224:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45d228:	add	x0, x0, #0xf4c
  45d22c:	ldr	w0, [x0]
  45d230:	cmp	w0, #0x0
  45d234:	b.ne	45d2b8 <_obstack_memory_used@@Base+0x178>  // b.any
  45d238:	mov	w1, #0x4900                	// #18688
  45d23c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45d240:	add	x0, x0, #0x380
  45d244:	bl	404430 <open@plt>
  45d248:	str	w0, [sp, #100]
  45d24c:	ldr	w0, [sp, #100]
  45d250:	cmp	w0, #0x0
  45d254:	b.ge	45d26c <_obstack_memory_used@@Base+0x12c>  // b.tcont
  45d258:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45d25c:	add	x0, x0, #0xf4c
  45d260:	mov	w1, #0xffffffff            	// #-1
  45d264:	str	w1, [x0]
  45d268:	b	45d2b8 <_obstack_memory_used@@Base+0x178>
  45d26c:	add	x3, sp, #0x30
  45d270:	ldr	w2, [sp, #100]
  45d274:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45d278:	add	x1, x0, #0x390
  45d27c:	mov	x0, x3
  45d280:	bl	4041f0 <sprintf@plt>
  45d284:	add	x0, sp, #0x30
  45d288:	mov	w1, #0x0                   	// #0
  45d28c:	bl	404740 <access@plt>
  45d290:	cmp	w0, #0x0
  45d294:	b.eq	45d2a0 <_obstack_memory_used@@Base+0x160>  // b.none
  45d298:	mov	w0, #0xffffffff            	// #-1
  45d29c:	b	45d2a4 <_obstack_memory_used@@Base+0x164>
  45d2a0:	mov	w0, #0x1                   	// #1
  45d2a4:	adrp	x1, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45d2a8:	add	x1, x1, #0xf4c
  45d2ac:	str	w0, [x1]
  45d2b0:	ldr	w0, [sp, #100]
  45d2b4:	bl	404660 <close@plt>
  45d2b8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  45d2bc:	add	x0, x0, #0xf4c
  45d2c0:	ldr	w0, [x0]
  45d2c4:	cmp	w0, #0x0
  45d2c8:	b.ge	45d2d4 <_obstack_memory_used@@Base+0x194>  // b.tcont
  45d2cc:	mov	x0, #0x0                   	// #0
  45d2d0:	b	45d340 <_obstack_memory_used@@Base+0x200>
  45d2d4:	ldr	x0, [sp, #24]
  45d2d8:	bl	4040b0 <strlen@plt>
  45d2dc:	add	x0, x0, #0x1b
  45d2e0:	str	x0, [sp, #88]
  45d2e4:	ldr	x0, [sp, #88]
  45d2e8:	cmp	x0, #0xfc0
  45d2ec:	b.ls	45d310 <_obstack_memory_used@@Base+0x1d0>  // b.plast
  45d2f0:	ldr	x0, [sp, #88]
  45d2f4:	bl	4043f0 <malloc@plt>
  45d2f8:	str	x0, [sp, #104]
  45d2fc:	ldr	x0, [sp, #104]
  45d300:	cmp	x0, #0x0
  45d304:	b.ne	45d310 <_obstack_memory_used@@Base+0x1d0>  // b.any
  45d308:	mov	x0, #0x0                   	// #0
  45d30c:	b	45d340 <_obstack_memory_used@@Base+0x200>
  45d310:	ldr	w2, [sp, #36]
  45d314:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  45d318:	add	x1, x0, #0x3a8
  45d31c:	ldr	x0, [sp, #104]
  45d320:	bl	4041f0 <sprintf@plt>
  45d324:	str	w0, [sp, #84]
  45d328:	ldrsw	x0, [sp, #84]
  45d32c:	ldr	x1, [sp, #104]
  45d330:	add	x0, x1, x0
  45d334:	ldr	x1, [sp, #24]
  45d338:	bl	4049d0 <strcpy@plt>
  45d33c:	ldr	x0, [sp, #104]
  45d340:	ldp	x29, x30, [sp], #112
  45d344:	ret
  45d348:	sub	sp, sp, #0x10
  45d34c:	str	x0, [sp, #8]
  45d350:	str	x1, [sp]
  45d354:	ldr	x0, [sp]
  45d358:	add	x1, x0, #0x3f
  45d35c:	cmp	x0, #0x0
  45d360:	csel	x0, x1, x0, lt  // lt = tstop
  45d364:	asr	x0, x0, #6
  45d368:	mov	x3, x0
  45d36c:	mov	x0, x3
  45d370:	lsl	x0, x0, #3
  45d374:	ldr	x1, [sp, #8]
  45d378:	add	x0, x1, x0
  45d37c:	ldr	x2, [x0]
  45d380:	ldr	x0, [sp]
  45d384:	negs	x1, x0
  45d388:	and	x0, x0, #0x3f
  45d38c:	and	x1, x1, #0x3f
  45d390:	csneg	x0, x0, x1, mi  // mi = first
  45d394:	mov	w1, w0
  45d398:	mov	x0, #0x1                   	// #1
  45d39c:	lsl	x1, x0, x1
  45d3a0:	mov	x0, x3
  45d3a4:	lsl	x0, x0, #3
  45d3a8:	ldr	x3, [sp, #8]
  45d3ac:	add	x0, x3, x0
  45d3b0:	orr	x1, x2, x1
  45d3b4:	str	x1, [x0]
  45d3b8:	nop
  45d3bc:	add	sp, sp, #0x10
  45d3c0:	ret
  45d3c4:	sub	sp, sp, #0x10
  45d3c8:	str	x0, [sp, #8]
  45d3cc:	str	x1, [sp]
  45d3d0:	ldr	x0, [sp]
  45d3d4:	add	x1, x0, #0x3f
  45d3d8:	cmp	x0, #0x0
  45d3dc:	csel	x0, x1, x0, lt  // lt = tstop
  45d3e0:	asr	x0, x0, #6
  45d3e4:	mov	x3, x0
  45d3e8:	mov	x0, x3
  45d3ec:	lsl	x0, x0, #3
  45d3f0:	ldr	x1, [sp, #8]
  45d3f4:	add	x0, x1, x0
  45d3f8:	ldr	x2, [x0]
  45d3fc:	ldr	x0, [sp]
  45d400:	negs	x1, x0
  45d404:	and	x0, x0, #0x3f
  45d408:	and	x1, x1, #0x3f
  45d40c:	csneg	x0, x0, x1, mi  // mi = first
  45d410:	mov	w1, w0
  45d414:	mov	x0, #0x1                   	// #1
  45d418:	lsl	x0, x0, x1
  45d41c:	mvn	x1, x0
  45d420:	mov	x0, x3
  45d424:	lsl	x0, x0, #3
  45d428:	ldr	x3, [sp, #8]
  45d42c:	add	x0, x3, x0
  45d430:	and	x1, x2, x1
  45d434:	str	x1, [x0]
  45d438:	nop
  45d43c:	add	sp, sp, #0x10
  45d440:	ret
  45d444:	sub	sp, sp, #0x10
  45d448:	str	x0, [sp, #8]
  45d44c:	str	x1, [sp]
  45d450:	ldr	x0, [sp]
  45d454:	add	x1, x0, #0x3f
  45d458:	cmp	x0, #0x0
  45d45c:	csel	x0, x1, x0, lt  // lt = tstop
  45d460:	asr	x0, x0, #6
  45d464:	lsl	x0, x0, #3
  45d468:	ldr	x1, [sp, #8]
  45d46c:	add	x0, x1, x0
  45d470:	ldr	x1, [x0]
  45d474:	ldr	x0, [sp]
  45d478:	negs	x2, x0
  45d47c:	and	x0, x0, #0x3f
  45d480:	and	x2, x2, #0x3f
  45d484:	csneg	x0, x0, x2, mi  // mi = first
  45d488:	lsr	x0, x1, x0
  45d48c:	and	x0, x0, #0x1
  45d490:	cmp	x0, #0x0
  45d494:	cset	w0, ne  // ne = any
  45d498:	and	w0, w0, #0xff
  45d49c:	add	sp, sp, #0x10
  45d4a0:	ret
  45d4a4:	stp	x29, x30, [sp, #-32]!
  45d4a8:	mov	x29, sp
  45d4ac:	str	x0, [sp, #24]
  45d4b0:	mov	x2, #0x20                  	// #32
  45d4b4:	mov	w1, #0x0                   	// #0
  45d4b8:	ldr	x0, [sp, #24]
  45d4bc:	bl	4044d0 <memset@plt>
  45d4c0:	nop
  45d4c4:	ldp	x29, x30, [sp], #32
  45d4c8:	ret
  45d4cc:	stp	x29, x30, [sp, #-32]!
  45d4d0:	mov	x29, sp
  45d4d4:	str	x0, [sp, #24]
  45d4d8:	mov	x2, #0x20                  	// #32
  45d4dc:	mov	w1, #0xffffffff            	// #-1
  45d4e0:	ldr	x0, [sp, #24]
  45d4e4:	bl	4044d0 <memset@plt>
  45d4e8:	nop
  45d4ec:	ldp	x29, x30, [sp], #32
  45d4f0:	ret
  45d4f4:	stp	x29, x30, [sp, #-32]!
  45d4f8:	mov	x29, sp
  45d4fc:	str	x0, [sp, #24]
  45d500:	str	x1, [sp, #16]
  45d504:	mov	x2, #0x20                  	// #32
  45d508:	ldr	x1, [sp, #16]
  45d50c:	ldr	x0, [sp, #24]
  45d510:	bl	404020 <memcpy@plt>
  45d514:	nop
  45d518:	ldp	x29, x30, [sp], #32
  45d51c:	ret
  45d520:	sub	sp, sp, #0x20
  45d524:	str	x0, [sp, #8]
  45d528:	str	wzr, [sp, #28]
  45d52c:	b	45d568 <_obstack_memory_used@@Base+0x428>
  45d530:	ldrsw	x0, [sp, #28]
  45d534:	lsl	x0, x0, #3
  45d538:	ldr	x1, [sp, #8]
  45d53c:	add	x0, x1, x0
  45d540:	ldr	x1, [x0]
  45d544:	ldrsw	x0, [sp, #28]
  45d548:	lsl	x0, x0, #3
  45d54c:	ldr	x2, [sp, #8]
  45d550:	add	x0, x2, x0
  45d554:	mvn	x1, x1
  45d558:	str	x1, [x0]
  45d55c:	ldr	w0, [sp, #28]
  45d560:	add	w0, w0, #0x1
  45d564:	str	w0, [sp, #28]
  45d568:	ldr	w0, [sp, #28]
  45d56c:	cmp	w0, #0x3
  45d570:	b.le	45d530 <_obstack_memory_used@@Base+0x3f0>
  45d574:	nop
  45d578:	nop
  45d57c:	add	sp, sp, #0x20
  45d580:	ret
  45d584:	sub	sp, sp, #0x20
  45d588:	str	x0, [sp, #8]
  45d58c:	str	x1, [sp]
  45d590:	str	wzr, [sp, #28]
  45d594:	b	45d5e4 <_obstack_memory_used@@Base+0x4a4>
  45d598:	ldrsw	x0, [sp, #28]
  45d59c:	lsl	x0, x0, #3
  45d5a0:	ldr	x1, [sp, #8]
  45d5a4:	add	x0, x1, x0
  45d5a8:	ldr	x2, [x0]
  45d5ac:	ldrsw	x0, [sp, #28]
  45d5b0:	lsl	x0, x0, #3
  45d5b4:	ldr	x1, [sp]
  45d5b8:	add	x0, x1, x0
  45d5bc:	ldr	x1, [x0]
  45d5c0:	ldrsw	x0, [sp, #28]
  45d5c4:	lsl	x0, x0, #3
  45d5c8:	ldr	x3, [sp, #8]
  45d5cc:	add	x0, x3, x0
  45d5d0:	orr	x1, x2, x1
  45d5d4:	str	x1, [x0]
  45d5d8:	ldr	w0, [sp, #28]
  45d5dc:	add	w0, w0, #0x1
  45d5e0:	str	w0, [sp, #28]
  45d5e4:	ldr	w0, [sp, #28]
  45d5e8:	cmp	w0, #0x3
  45d5ec:	b.le	45d598 <_obstack_memory_used@@Base+0x458>
  45d5f0:	nop
  45d5f4:	nop
  45d5f8:	add	sp, sp, #0x20
  45d5fc:	ret
  45d600:	sub	sp, sp, #0x20
  45d604:	str	x0, [sp, #8]
  45d608:	str	x1, [sp]
  45d60c:	str	wzr, [sp, #28]
  45d610:	b	45d660 <_obstack_memory_used@@Base+0x520>
  45d614:	ldrsw	x0, [sp, #28]
  45d618:	lsl	x0, x0, #3
  45d61c:	ldr	x1, [sp, #8]
  45d620:	add	x0, x1, x0
  45d624:	ldr	x2, [x0]
  45d628:	ldrsw	x0, [sp, #28]
  45d62c:	lsl	x0, x0, #3
  45d630:	ldr	x1, [sp]
  45d634:	add	x0, x1, x0
  45d638:	ldr	x1, [x0]
  45d63c:	ldrsw	x0, [sp, #28]
  45d640:	lsl	x0, x0, #3
  45d644:	ldr	x3, [sp, #8]
  45d648:	add	x0, x3, x0
  45d64c:	and	x1, x2, x1
  45d650:	str	x1, [x0]
  45d654:	ldr	w0, [sp, #28]
  45d658:	add	w0, w0, #0x1
  45d65c:	str	w0, [sp, #28]
  45d660:	ldr	w0, [sp, #28]
  45d664:	cmp	w0, #0x3
  45d668:	b.le	45d614 <_obstack_memory_used@@Base+0x4d4>
  45d66c:	nop
  45d670:	nop
  45d674:	add	sp, sp, #0x20
  45d678:	ret
  45d67c:	sub	sp, sp, #0x20
  45d680:	str	x0, [sp, #8]
  45d684:	str	x1, [sp]
  45d688:	ldr	x0, [sp, #8]
  45d68c:	ldr	w0, [x0, #144]
  45d690:	cmp	w0, #0x1
  45d694:	b.ne	45d6a0 <_obstack_memory_used@@Base+0x560>  // b.any
  45d698:	mov	w0, #0x1                   	// #1
  45d69c:	b	45d708 <_obstack_memory_used@@Base+0x5c8>
  45d6a0:	mov	w0, #0x1                   	// #1
  45d6a4:	str	w0, [sp, #28]
  45d6a8:	b	45d6e0 <_obstack_memory_used@@Base+0x5a0>
  45d6ac:	ldr	x0, [sp, #8]
  45d6b0:	ldr	x1, [x0, #16]
  45d6b4:	ldrsw	x2, [sp, #28]
  45d6b8:	ldr	x0, [sp]
  45d6bc:	add	x0, x2, x0
  45d6c0:	lsl	x0, x0, #2
  45d6c4:	add	x0, x1, x0
  45d6c8:	ldr	w0, [x0]
  45d6cc:	cmn	w0, #0x1
  45d6d0:	b.ne	45d700 <_obstack_memory_used@@Base+0x5c0>  // b.any
  45d6d4:	ldr	w0, [sp, #28]
  45d6d8:	add	w0, w0, #0x1
  45d6dc:	str	w0, [sp, #28]
  45d6e0:	ldrsw	x1, [sp, #28]
  45d6e4:	ldr	x0, [sp]
  45d6e8:	add	x1, x1, x0
  45d6ec:	ldr	x0, [sp, #8]
  45d6f0:	ldr	x0, [x0, #48]
  45d6f4:	cmp	x1, x0
  45d6f8:	b.lt	45d6ac <_obstack_memory_used@@Base+0x56c>  // b.tstop
  45d6fc:	b	45d704 <_obstack_memory_used@@Base+0x5c4>
  45d700:	nop
  45d704:	ldr	w0, [sp, #28]
  45d708:	add	sp, sp, #0x20
  45d70c:	ret
  45d710:	sub	sp, sp, #0x10
  45d714:	str	x0, [sp, #8]
  45d718:	str	x1, [sp]
  45d71c:	ldr	x0, [sp, #8]
  45d720:	ldr	w0, [x0, #144]
  45d724:	cmp	w0, #0x1
  45d728:	b.ne	45d744 <_obstack_memory_used@@Base+0x604>  // b.any
  45d72c:	ldr	x0, [sp, #8]
  45d730:	ldr	x1, [x0, #8]
  45d734:	ldr	x0, [sp]
  45d738:	add	x0, x1, x0
  45d73c:	ldrb	w0, [x0]
  45d740:	b	45d75c <_obstack_memory_used@@Base+0x61c>
  45d744:	ldr	x0, [sp, #8]
  45d748:	ldr	x1, [x0, #16]
  45d74c:	ldr	x0, [sp]
  45d750:	lsl	x0, x0, #2
  45d754:	add	x0, x1, x0
  45d758:	ldr	w0, [x0]
  45d75c:	add	sp, sp, #0x10
  45d760:	ret
  45d764:	sub	sp, sp, #0x10
  45d768:	str	x0, [sp, #8]
  45d76c:	str	x1, [sp]
  45d770:	mov	w0, #0x1                   	// #1
  45d774:	add	sp, sp, #0x10
  45d778:	ret
  45d77c:	stp	x29, x30, [sp, #-96]!
  45d780:	mov	x29, sp
  45d784:	str	x0, [sp, #72]
  45d788:	str	x1, [sp, #64]
  45d78c:	str	x2, [sp, #56]
  45d790:	str	x3, [sp, #48]
  45d794:	str	x4, [sp, #40]
  45d798:	strb	w5, [sp, #39]
  45d79c:	str	x6, [sp, #24]
  45d7a0:	ldr	x0, [sp, #24]
  45d7a4:	ldr	w0, [x0, #180]
  45d7a8:	sxtw	x0, w0
  45d7ac:	ldr	x1, [sp, #48]
  45d7b0:	cmp	x1, x0
  45d7b4:	b.ge	45d7c8 <_obstack_memory_used@@Base+0x688>  // b.tcont
  45d7b8:	ldr	x0, [sp, #24]
  45d7bc:	ldr	w0, [x0, #180]
  45d7c0:	sxtw	x0, w0
  45d7c4:	str	x0, [sp, #48]
  45d7c8:	ldr	x0, [sp, #56]
  45d7cc:	add	x0, x0, #0x1
  45d7d0:	ldr	x2, [sp, #48]
  45d7d4:	ldr	x1, [sp, #48]
  45d7d8:	cmp	x2, x0
  45d7dc:	csel	x0, x1, x0, le
  45d7e0:	str	x0, [sp, #88]
  45d7e4:	ldr	x5, [sp, #24]
  45d7e8:	ldrb	w4, [sp, #39]
  45d7ec:	ldr	x3, [sp, #40]
  45d7f0:	ldr	x2, [sp, #72]
  45d7f4:	ldr	x1, [sp, #56]
  45d7f8:	ldr	x0, [sp, #64]
  45d7fc:	bl	45dc68 <_obstack_memory_used@@Base+0xb28>
  45d800:	ldr	x1, [sp, #88]
  45d804:	ldr	x0, [sp, #72]
  45d808:	bl	45dad8 <_obstack_memory_used@@Base+0x998>
  45d80c:	str	w0, [sp, #84]
  45d810:	ldr	w0, [sp, #84]
  45d814:	cmp	w0, #0x0
  45d818:	cset	w0, ne  // ne = any
  45d81c:	and	w0, w0, #0xff
  45d820:	and	x0, x0, #0xff
  45d824:	cmp	x0, #0x0
  45d828:	b.eq	45d834 <_obstack_memory_used@@Base+0x6f4>  // b.none
  45d82c:	ldr	w0, [sp, #84]
  45d830:	b	45d8d0 <_obstack_memory_used@@Base+0x790>
  45d834:	ldr	x0, [sp, #24]
  45d838:	add	x1, x0, #0xb8
  45d83c:	ldr	x0, [sp, #72]
  45d840:	str	x1, [x0, #128]
  45d844:	ldr	x0, [sp, #24]
  45d848:	ldrb	w0, [x0, #176]
  45d84c:	ubfx	x0, x0, #4, #1
  45d850:	and	w0, w0, #0xff
  45d854:	mov	w1, w0
  45d858:	ldr	x0, [sp, #72]
  45d85c:	strb	w1, [x0, #142]
  45d860:	ldr	x0, [sp, #72]
  45d864:	ldrb	w0, [x0, #139]
  45d868:	cmp	w0, #0x0
  45d86c:	b.eq	45d87c <_obstack_memory_used@@Base+0x73c>  // b.none
  45d870:	ldr	x0, [sp, #72]
  45d874:	ldr	x0, [x0, #8]
  45d878:	b	45d880 <_obstack_memory_used@@Base+0x740>
  45d87c:	ldr	x0, [sp, #64]
  45d880:	ldr	x1, [sp, #72]
  45d884:	str	x0, [x1, #8]
  45d888:	ldr	x0, [sp, #72]
  45d88c:	ldrb	w0, [x0, #139]
  45d890:	cmp	w0, #0x0
  45d894:	b.ne	45d8b0 <_obstack_memory_used@@Base+0x770>  // b.any
  45d898:	ldr	x0, [sp, #24]
  45d89c:	ldr	w0, [x0, #180]
  45d8a0:	cmp	w0, #0x1
  45d8a4:	b.gt	45d8b0 <_obstack_memory_used@@Base+0x770>
  45d8a8:	ldr	x0, [sp, #56]
  45d8ac:	b	45d8b4 <_obstack_memory_used@@Base+0x774>
  45d8b0:	mov	x0, #0x0                   	// #0
  45d8b4:	ldr	x1, [sp, #72]
  45d8b8:	str	x0, [x1, #48]
  45d8bc:	ldr	x0, [sp, #72]
  45d8c0:	ldr	x1, [x0, #48]
  45d8c4:	ldr	x0, [sp, #72]
  45d8c8:	str	x1, [x0, #56]
  45d8cc:	mov	w0, #0x0                   	// #0
  45d8d0:	ldp	x29, x30, [sp], #96
  45d8d4:	ret
  45d8d8:	stp	x29, x30, [sp, #-80]!
  45d8dc:	mov	x29, sp
  45d8e0:	str	x0, [sp, #56]
  45d8e4:	str	x1, [sp, #48]
  45d8e8:	str	x2, [sp, #40]
  45d8ec:	str	x3, [sp, #32]
  45d8f0:	strb	w4, [sp, #31]
  45d8f4:	str	x5, [sp, #16]
  45d8f8:	mov	x2, #0x98                  	// #152
  45d8fc:	mov	w1, #0x0                   	// #0
  45d900:	ldr	x0, [sp, #56]
  45d904:	bl	4044d0 <memset@plt>
  45d908:	ldr	x5, [sp, #16]
  45d90c:	ldrb	w4, [sp, #31]
  45d910:	ldr	x3, [sp, #32]
  45d914:	ldr	x2, [sp, #56]
  45d918:	ldr	x1, [sp, #40]
  45d91c:	ldr	x0, [sp, #48]
  45d920:	bl	45dc68 <_obstack_memory_used@@Base+0xb28>
  45d924:	ldr	x0, [sp, #40]
  45d928:	cmp	x0, #0x0
  45d92c:	b.le	45d96c <_obstack_memory_used@@Base+0x82c>
  45d930:	ldr	x0, [sp, #40]
  45d934:	add	x0, x0, #0x1
  45d938:	mov	x1, x0
  45d93c:	ldr	x0, [sp, #56]
  45d940:	bl	45dad8 <_obstack_memory_used@@Base+0x998>
  45d944:	str	w0, [sp, #76]
  45d948:	ldr	w0, [sp, #76]
  45d94c:	cmp	w0, #0x0
  45d950:	cset	w0, ne  // ne = any
  45d954:	and	w0, w0, #0xff
  45d958:	and	x0, x0, #0xff
  45d95c:	cmp	x0, #0x0
  45d960:	b.eq	45d96c <_obstack_memory_used@@Base+0x82c>  // b.none
  45d964:	ldr	w0, [sp, #76]
  45d968:	b	45dad0 <_obstack_memory_used@@Base+0x990>
  45d96c:	ldr	x0, [sp, #56]
  45d970:	ldrb	w0, [x0, #139]
  45d974:	cmp	w0, #0x0
  45d978:	b.eq	45d988 <_obstack_memory_used@@Base+0x848>  // b.none
  45d97c:	ldr	x0, [sp, #56]
  45d980:	ldr	x0, [x0, #8]
  45d984:	b	45d98c <_obstack_memory_used@@Base+0x84c>
  45d988:	ldr	x0, [sp, #48]
  45d98c:	ldr	x1, [sp, #56]
  45d990:	str	x0, [x1, #8]
  45d994:	ldrb	w0, [sp, #31]
  45d998:	cmp	w0, #0x0
  45d99c:	b.eq	45da68 <_obstack_memory_used@@Base+0x928>  // b.none
  45d9a0:	ldr	x0, [sp, #16]
  45d9a4:	ldr	w0, [x0, #180]
  45d9a8:	cmp	w0, #0x1
  45d9ac:	b.le	45da5c <_obstack_memory_used@@Base+0x91c>
  45d9b0:	ldr	x0, [sp, #56]
  45d9b4:	bl	45e0bc <_obstack_memory_used@@Base+0xf7c>
  45d9b8:	str	w0, [sp, #76]
  45d9bc:	ldr	w0, [sp, #76]
  45d9c0:	cmp	w0, #0x0
  45d9c4:	cset	w0, ne  // ne = any
  45d9c8:	and	w0, w0, #0xff
  45d9cc:	and	x0, x0, #0xff
  45d9d0:	cmp	x0, #0x0
  45d9d4:	b.eq	45d9e0 <_obstack_memory_used@@Base+0x8a0>  // b.none
  45d9d8:	ldr	w0, [sp, #76]
  45d9dc:	b	45dad0 <_obstack_memory_used@@Base+0x990>
  45d9e0:	ldr	x0, [sp, #56]
  45d9e4:	ldr	x0, [x0, #56]
  45d9e8:	ldr	x1, [sp, #40]
  45d9ec:	cmp	x1, x0
  45d9f0:	b.le	45dac0 <_obstack_memory_used@@Base+0x980>
  45d9f4:	ldr	x0, [sp, #56]
  45d9f8:	ldr	x1, [x0, #64]
  45d9fc:	ldr	x0, [sp, #56]
  45da00:	ldr	x2, [x0, #48]
  45da04:	ldr	x0, [sp, #16]
  45da08:	ldr	w0, [x0, #180]
  45da0c:	sxtw	x0, w0
  45da10:	add	x0, x2, x0
  45da14:	cmp	x1, x0
  45da18:	b.gt	45dac8 <_obstack_memory_used@@Base+0x988>
  45da1c:	ldr	x0, [sp, #56]
  45da20:	ldr	x0, [x0, #64]
  45da24:	lsl	x0, x0, #1
  45da28:	mov	x1, x0
  45da2c:	ldr	x0, [sp, #56]
  45da30:	bl	45dad8 <_obstack_memory_used@@Base+0x998>
  45da34:	str	w0, [sp, #76]
  45da38:	ldr	w0, [sp, #76]
  45da3c:	cmp	w0, #0x0
  45da40:	cset	w0, ne  // ne = any
  45da44:	and	w0, w0, #0xff
  45da48:	and	x0, x0, #0xff
  45da4c:	cmp	x0, #0x0
  45da50:	b.eq	45d9b0 <_obstack_memory_used@@Base+0x870>  // b.none
  45da54:	ldr	w0, [sp, #76]
  45da58:	b	45dad0 <_obstack_memory_used@@Base+0x990>
  45da5c:	ldr	x0, [sp, #56]
  45da60:	bl	45ed30 <_obstack_memory_used@@Base+0x1bf0>
  45da64:	b	45dacc <_obstack_memory_used@@Base+0x98c>
  45da68:	ldr	x0, [sp, #16]
  45da6c:	ldr	w0, [x0, #180]
  45da70:	cmp	w0, #0x1
  45da74:	b.le	45da84 <_obstack_memory_used@@Base+0x944>
  45da78:	ldr	x0, [sp, #56]
  45da7c:	bl	45dd64 <_obstack_memory_used@@Base+0xc24>
  45da80:	b	45dacc <_obstack_memory_used@@Base+0x98c>
  45da84:	ldr	x0, [sp, #32]
  45da88:	cmp	x0, #0x0
  45da8c:	b.eq	45da9c <_obstack_memory_used@@Base+0x95c>  // b.none
  45da90:	ldr	x0, [sp, #56]
  45da94:	bl	45ee28 <_obstack_memory_used@@Base+0x1ce8>
  45da98:	b	45dacc <_obstack_memory_used@@Base+0x98c>
  45da9c:	ldr	x0, [sp, #56]
  45daa0:	ldr	x1, [x0, #64]
  45daa4:	ldr	x0, [sp, #56]
  45daa8:	str	x1, [x0, #48]
  45daac:	ldr	x0, [sp, #56]
  45dab0:	ldr	x1, [x0, #64]
  45dab4:	ldr	x0, [sp, #56]
  45dab8:	str	x1, [x0, #56]
  45dabc:	b	45dacc <_obstack_memory_used@@Base+0x98c>
  45dac0:	nop
  45dac4:	b	45dacc <_obstack_memory_used@@Base+0x98c>
  45dac8:	nop
  45dacc:	mov	w0, #0x0                   	// #0
  45dad0:	ldp	x29, x30, [sp], #80
  45dad4:	ret
  45dad8:	stp	x29, x30, [sp, #-64]!
  45dadc:	mov	x29, sp
  45dae0:	str	x0, [sp, #24]
  45dae4:	str	x1, [sp, #16]
  45dae8:	ldr	x0, [sp, #24]
  45daec:	ldr	w0, [x0, #144]
  45daf0:	cmp	w0, #0x1
  45daf4:	b.le	45dbfc <_obstack_memory_used@@Base+0xabc>
  45daf8:	mov	x0, #0x8                   	// #8
  45dafc:	str	x0, [sp, #56]
  45db00:	mov	x1, #0xffffffffffffffff    	// #-1
  45db04:	ldr	x0, [sp, #56]
  45db08:	udiv	x0, x1, x0
  45db0c:	cmp	x0, #0x0
  45db10:	b.lt	45db24 <_obstack_memory_used@@Base+0x9e4>  // b.tstop
  45db14:	mov	x1, #0xffffffffffffffff    	// #-1
  45db18:	ldr	x0, [sp, #56]
  45db1c:	udiv	x0, x1, x0
  45db20:	b	45db28 <_obstack_memory_used@@Base+0x9e8>
  45db24:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  45db28:	ldr	x1, [sp, #16]
  45db2c:	cmp	x0, x1
  45db30:	cset	w0, cc  // cc = lo, ul, last
  45db34:	and	w0, w0, #0xff
  45db38:	and	x0, x0, #0xff
  45db3c:	cmp	x0, #0x0
  45db40:	b.eq	45db4c <_obstack_memory_used@@Base+0xa0c>  // b.none
  45db44:	mov	w0, #0xc                   	// #12
  45db48:	b	45dc60 <_obstack_memory_used@@Base+0xb20>
  45db4c:	ldr	x0, [sp, #24]
  45db50:	ldr	x2, [x0, #16]
  45db54:	ldr	x0, [sp, #16]
  45db58:	lsl	x0, x0, #2
  45db5c:	mov	x1, x0
  45db60:	mov	x0, x2
  45db64:	bl	4045e0 <realloc@plt>
  45db68:	str	x0, [sp, #48]
  45db6c:	ldr	x0, [sp, #48]
  45db70:	cmp	x0, #0x0
  45db74:	cset	w0, eq  // eq = none
  45db78:	and	w0, w0, #0xff
  45db7c:	and	x0, x0, #0xff
  45db80:	cmp	x0, #0x0
  45db84:	b.eq	45db90 <_obstack_memory_used@@Base+0xa50>  // b.none
  45db88:	mov	w0, #0xc                   	// #12
  45db8c:	b	45dc60 <_obstack_memory_used@@Base+0xb20>
  45db90:	ldr	x0, [sp, #24]
  45db94:	ldr	x1, [sp, #48]
  45db98:	str	x1, [x0, #16]
  45db9c:	ldr	x0, [sp, #24]
  45dba0:	ldr	x0, [x0, #24]
  45dba4:	cmp	x0, #0x0
  45dba8:	b.eq	45dbfc <_obstack_memory_used@@Base+0xabc>  // b.none
  45dbac:	ldr	x0, [sp, #24]
  45dbb0:	ldr	x2, [x0, #24]
  45dbb4:	ldr	x0, [sp, #16]
  45dbb8:	lsl	x0, x0, #3
  45dbbc:	mov	x1, x0
  45dbc0:	mov	x0, x2
  45dbc4:	bl	4045e0 <realloc@plt>
  45dbc8:	str	x0, [sp, #40]
  45dbcc:	ldr	x0, [sp, #40]
  45dbd0:	cmp	x0, #0x0
  45dbd4:	cset	w0, eq  // eq = none
  45dbd8:	and	w0, w0, #0xff
  45dbdc:	and	x0, x0, #0xff
  45dbe0:	cmp	x0, #0x0
  45dbe4:	b.eq	45dbf0 <_obstack_memory_used@@Base+0xab0>  // b.none
  45dbe8:	mov	w0, #0xc                   	// #12
  45dbec:	b	45dc60 <_obstack_memory_used@@Base+0xb20>
  45dbf0:	ldr	x0, [sp, #24]
  45dbf4:	ldr	x1, [sp, #40]
  45dbf8:	str	x1, [x0, #24]
  45dbfc:	ldr	x0, [sp, #24]
  45dc00:	ldrb	w0, [x0, #139]
  45dc04:	cmp	w0, #0x0
  45dc08:	b.eq	45dc50 <_obstack_memory_used@@Base+0xb10>  // b.none
  45dc0c:	ldr	x0, [sp, #24]
  45dc10:	ldr	x0, [x0, #8]
  45dc14:	ldr	x1, [sp, #16]
  45dc18:	bl	4045e0 <realloc@plt>
  45dc1c:	str	x0, [sp, #32]
  45dc20:	ldr	x0, [sp, #32]
  45dc24:	cmp	x0, #0x0
  45dc28:	cset	w0, eq  // eq = none
  45dc2c:	and	w0, w0, #0xff
  45dc30:	and	x0, x0, #0xff
  45dc34:	cmp	x0, #0x0
  45dc38:	b.eq	45dc44 <_obstack_memory_used@@Base+0xb04>  // b.none
  45dc3c:	mov	w0, #0xc                   	// #12
  45dc40:	b	45dc60 <_obstack_memory_used@@Base+0xb20>
  45dc44:	ldr	x0, [sp, #24]
  45dc48:	ldr	x1, [sp, #32]
  45dc4c:	str	x1, [x0, #8]
  45dc50:	ldr	x0, [sp, #24]
  45dc54:	ldr	x1, [sp, #16]
  45dc58:	str	x1, [x0, #64]
  45dc5c:	mov	w0, #0x0                   	// #0
  45dc60:	ldp	x29, x30, [sp], #64
  45dc64:	ret
  45dc68:	sub	sp, sp, #0x30
  45dc6c:	str	x0, [sp, #40]
  45dc70:	str	x1, [sp, #32]
  45dc74:	str	x2, [sp, #24]
  45dc78:	str	x3, [sp, #16]
  45dc7c:	strb	w4, [sp, #15]
  45dc80:	str	x5, [sp]
  45dc84:	ldr	x0, [sp, #24]
  45dc88:	ldr	x1, [sp, #40]
  45dc8c:	str	x1, [x0]
  45dc90:	ldr	x0, [sp, #24]
  45dc94:	ldr	x1, [sp, #32]
  45dc98:	str	x1, [x0, #88]
  45dc9c:	ldr	x0, [sp, #24]
  45dca0:	ldr	x1, [sp, #32]
  45dca4:	str	x1, [x0, #80]
  45dca8:	ldr	x0, [sp, #24]
  45dcac:	ldr	x1, [sp, #16]
  45dcb0:	str	x1, [x0, #120]
  45dcb4:	ldrb	w1, [sp, #15]
  45dcb8:	ldr	x0, [sp, #24]
  45dcbc:	strb	w1, [x0, #136]
  45dcc0:	ldr	x0, [sp, #16]
  45dcc4:	cmp	x0, #0x0
  45dcc8:	b.ne	45dcd8 <_obstack_memory_used@@Base+0xb98>  // b.any
  45dccc:	ldrb	w0, [sp, #15]
  45dcd0:	cmp	w0, #0x0
  45dcd4:	b.eq	45dce0 <_obstack_memory_used@@Base+0xba0>  // b.none
  45dcd8:	mov	w0, #0x1                   	// #1
  45dcdc:	b	45dce4 <_obstack_memory_used@@Base+0xba4>
  45dce0:	mov	w0, #0x0                   	// #0
  45dce4:	and	w1, w0, #0xff
  45dce8:	ldr	x0, [sp, #24]
  45dcec:	strb	w1, [x0, #139]
  45dcf0:	ldr	x0, [sp]
  45dcf4:	ldr	w1, [x0, #180]
  45dcf8:	ldr	x0, [sp, #24]
  45dcfc:	str	w1, [x0, #144]
  45dd00:	ldr	x0, [sp]
  45dd04:	ldrb	w0, [x0, #176]
  45dd08:	ubfx	x0, x0, #2, #1
  45dd0c:	and	w0, w0, #0xff
  45dd10:	mov	w1, w0
  45dd14:	ldr	x0, [sp, #24]
  45dd18:	strb	w1, [x0, #137]
  45dd1c:	ldr	x0, [sp]
  45dd20:	ldrb	w0, [x0, #176]
  45dd24:	ubfx	x0, x0, #3, #1
  45dd28:	and	w0, w0, #0xff
  45dd2c:	mov	w1, w0
  45dd30:	ldr	x0, [sp, #24]
  45dd34:	strb	w1, [x0, #138]
  45dd38:	ldr	x0, [sp, #24]
  45dd3c:	ldr	x1, [x0, #88]
  45dd40:	ldr	x0, [sp, #24]
  45dd44:	str	x1, [x0, #104]
  45dd48:	ldr	x0, [sp, #24]
  45dd4c:	ldr	x1, [x0, #104]
  45dd50:	ldr	x0, [sp, #24]
  45dd54:	str	x1, [x0, #96]
  45dd58:	nop
  45dd5c:	add	sp, sp, #0x30
  45dd60:	ret
  45dd64:	stp	x29, x30, [sp, #-176]!
  45dd68:	mov	x29, sp
  45dd6c:	str	x0, [sp, #24]
  45dd70:	ldr	x0, [sp, #24]
  45dd74:	ldr	x1, [x0, #64]
  45dd78:	ldr	x0, [sp, #24]
  45dd7c:	ldr	x0, [x0, #88]
  45dd80:	cmp	x1, x0
  45dd84:	csel	x0, x1, x0, le
  45dd88:	str	x0, [sp, #136]
  45dd8c:	ldr	x0, [sp, #24]
  45dd90:	ldr	x0, [x0, #48]
  45dd94:	str	x0, [sp, #168]
  45dd98:	b	45e088 <_obstack_memory_used@@Base+0xf48>
  45dd9c:	ldr	x1, [sp, #136]
  45dda0:	ldr	x0, [sp, #168]
  45dda4:	sub	x0, x1, x0
  45dda8:	str	x0, [sp, #128]
  45ddac:	ldr	x0, [sp, #24]
  45ddb0:	ldr	x0, [x0, #32]
  45ddb4:	str	x0, [sp, #48]
  45ddb8:	ldr	x0, [sp, #24]
  45ddbc:	ldr	x0, [x0, #120]
  45ddc0:	cmp	x0, #0x0
  45ddc4:	cset	w0, ne  // ne = any
  45ddc8:	and	w0, w0, #0xff
  45ddcc:	and	x0, x0, #0xff
  45ddd0:	cmp	x0, #0x0
  45ddd4:	b.eq	45de88 <_obstack_memory_used@@Base+0xd48>  // b.none
  45ddd8:	str	wzr, [sp, #148]
  45dddc:	b	45de58 <_obstack_memory_used@@Base+0xd18>
  45dde0:	ldr	x0, [sp, #24]
  45dde4:	ldr	x0, [x0]
  45dde8:	ldr	x1, [sp, #24]
  45ddec:	ldr	x2, [x1, #40]
  45ddf0:	ldr	x1, [sp, #168]
  45ddf4:	add	x2, x2, x1
  45ddf8:	ldrsw	x1, [sp, #148]
  45ddfc:	add	x1, x2, x1
  45de00:	add	x0, x0, x1
  45de04:	ldrb	w0, [x0]
  45de08:	str	w0, [sp, #124]
  45de0c:	ldr	x0, [sp, #24]
  45de10:	ldr	x1, [x0, #120]
  45de14:	ldrsw	x0, [sp, #124]
  45de18:	add	x1, x1, x0
  45de1c:	ldr	x0, [sp, #24]
  45de20:	ldr	x0, [x0, #8]
  45de24:	ldrsw	x3, [sp, #148]
  45de28:	ldr	x2, [sp, #168]
  45de2c:	add	x2, x3, x2
  45de30:	add	x0, x0, x2
  45de34:	ldrb	w1, [x1]
  45de38:	strb	w1, [x0]
  45de3c:	ldrb	w2, [x0]
  45de40:	ldrsw	x0, [sp, #148]
  45de44:	add	x1, sp, #0x38
  45de48:	strb	w2, [x1, x0]
  45de4c:	ldr	w0, [sp, #148]
  45de50:	add	w0, w0, #0x1
  45de54:	str	w0, [sp, #148]
  45de58:	ldr	x0, [sp, #24]
  45de5c:	ldr	w0, [x0, #144]
  45de60:	ldr	w1, [sp, #148]
  45de64:	cmp	w1, w0
  45de68:	b.ge	45de7c <_obstack_memory_used@@Base+0xd3c>  // b.tcont
  45de6c:	ldrsw	x0, [sp, #148]
  45de70:	ldr	x1, [sp, #128]
  45de74:	cmp	x1, x0
  45de78:	b.gt	45dde0 <_obstack_memory_used@@Base+0xca0>
  45de7c:	add	x0, sp, #0x38
  45de80:	str	x0, [sp, #152]
  45de84:	b	45deac <_obstack_memory_used@@Base+0xd6c>
  45de88:	ldr	x0, [sp, #24]
  45de8c:	ldr	x1, [x0]
  45de90:	ldr	x0, [sp, #24]
  45de94:	ldr	x0, [x0, #40]
  45de98:	mov	x2, x0
  45de9c:	ldr	x0, [sp, #168]
  45dea0:	add	x0, x2, x0
  45dea4:	add	x0, x1, x0
  45dea8:	str	x0, [sp, #152]
  45deac:	ldr	x1, [sp, #128]
  45deb0:	ldr	x0, [sp, #24]
  45deb4:	add	x2, x0, #0x20
  45deb8:	add	x0, sp, #0x2c
  45debc:	mov	x3, x2
  45dec0:	mov	x2, x1
  45dec4:	ldr	x1, [sp, #152]
  45dec8:	bl	45ca48 <argp_usage@@Base+0x1395c>
  45decc:	str	x0, [sp, #160]
  45ded0:	ldr	x0, [sp, #160]
  45ded4:	cmn	x0, #0x1
  45ded8:	cset	w0, eq  // eq = none
  45dedc:	and	w0, w0, #0xff
  45dee0:	and	x0, x0, #0xff
  45dee4:	cmp	x0, #0x0
  45dee8:	b.ne	45df08 <_obstack_memory_used@@Base+0xdc8>  // b.any
  45deec:	ldr	x0, [sp, #160]
  45def0:	cmp	x0, #0x0
  45def4:	cset	w0, eq  // eq = none
  45def8:	and	w0, w0, #0xff
  45defc:	and	x0, x0, #0xff
  45df00:	cmp	x0, #0x0
  45df04:	b.eq	45df10 <_obstack_memory_used@@Base+0xdd0>  // b.none
  45df08:	mov	w0, #0x1                   	// #1
  45df0c:	b	45df14 <_obstack_memory_used@@Base+0xdd4>
  45df10:	mov	w0, #0x0                   	// #0
  45df14:	cmp	w0, #0x0
  45df18:	b.ne	45df74 <_obstack_memory_used@@Base+0xe34>  // b.any
  45df1c:	ldr	x0, [sp, #160]
  45df20:	cmn	x0, #0x2
  45df24:	cset	w0, eq  // eq = none
  45df28:	and	w0, w0, #0xff
  45df2c:	and	x0, x0, #0xff
  45df30:	cmp	x0, #0x0
  45df34:	b.eq	45df68 <_obstack_memory_used@@Base+0xe28>  // b.none
  45df38:	ldr	x0, [sp, #24]
  45df3c:	ldr	x1, [x0, #64]
  45df40:	ldr	x0, [sp, #24]
  45df44:	ldr	x0, [x0, #88]
  45df48:	cmp	x1, x0
  45df4c:	cset	w0, ge  // ge = tcont
  45df50:	and	w0, w0, #0xff
  45df54:	and	x0, x0, #0xff
  45df58:	cmp	x0, #0x0
  45df5c:	b.eq	45df68 <_obstack_memory_used@@Base+0xe28>  // b.none
  45df60:	mov	w0, #0x1                   	// #1
  45df64:	b	45df6c <_obstack_memory_used@@Base+0xe2c>
  45df68:	mov	w0, #0x0                   	// #0
  45df6c:	cmp	w0, #0x0
  45df70:	b.eq	45dfec <_obstack_memory_used@@Base+0xeac>  // b.none
  45df74:	mov	x0, #0x1                   	// #1
  45df78:	str	x0, [sp, #160]
  45df7c:	ldr	x0, [sp, #24]
  45df80:	ldr	x0, [x0]
  45df84:	ldr	x1, [sp, #24]
  45df88:	ldr	x2, [x1, #40]
  45df8c:	ldr	x1, [sp, #168]
  45df90:	add	x1, x2, x1
  45df94:	add	x0, x0, x1
  45df98:	ldrb	w0, [x0]
  45df9c:	str	w0, [sp, #44]
  45dfa0:	ldr	x0, [sp, #24]
  45dfa4:	ldr	x0, [x0, #120]
  45dfa8:	cmp	x0, #0x0
  45dfac:	cset	w0, ne  // ne = any
  45dfb0:	and	w0, w0, #0xff
  45dfb4:	and	x0, x0, #0xff
  45dfb8:	cmp	x0, #0x0
  45dfbc:	b.eq	45dfdc <_obstack_memory_used@@Base+0xe9c>  // b.none
  45dfc0:	ldr	x0, [sp, #24]
  45dfc4:	ldr	x1, [x0, #120]
  45dfc8:	ldr	w0, [sp, #44]
  45dfcc:	mov	w0, w0
  45dfd0:	add	x0, x1, x0
  45dfd4:	ldrb	w0, [x0]
  45dfd8:	str	w0, [sp, #44]
  45dfdc:	ldr	x0, [sp, #24]
  45dfe0:	ldr	x1, [sp, #48]
  45dfe4:	str	x1, [x0, #32]
  45dfe8:	b	45e018 <_obstack_memory_used@@Base+0xed8>
  45dfec:	ldr	x0, [sp, #160]
  45dff0:	cmn	x0, #0x2
  45dff4:	cset	w0, eq  // eq = none
  45dff8:	and	w0, w0, #0xff
  45dffc:	and	x0, x0, #0xff
  45e000:	cmp	x0, #0x0
  45e004:	b.eq	45e018 <_obstack_memory_used@@Base+0xed8>  // b.none
  45e008:	ldr	x0, [sp, #24]
  45e00c:	ldr	x1, [sp, #48]
  45e010:	str	x1, [x0, #32]
  45e014:	b	45e098 <_obstack_memory_used@@Base+0xf58>
  45e018:	ldr	x0, [sp, #24]
  45e01c:	ldr	x1, [x0, #16]
  45e020:	ldr	x0, [sp, #168]
  45e024:	add	x2, x0, #0x1
  45e028:	str	x2, [sp, #168]
  45e02c:	lsl	x0, x0, #2
  45e030:	add	x0, x1, x0
  45e034:	ldr	w1, [sp, #44]
  45e038:	str	w1, [x0]
  45e03c:	ldr	x1, [sp, #168]
  45e040:	ldr	x0, [sp, #160]
  45e044:	add	x0, x1, x0
  45e048:	sub	x0, x0, #0x1
  45e04c:	str	x0, [sp, #128]
  45e050:	b	45e078 <_obstack_memory_used@@Base+0xf38>
  45e054:	ldr	x0, [sp, #24]
  45e058:	ldr	x1, [x0, #16]
  45e05c:	ldr	x0, [sp, #168]
  45e060:	add	x2, x0, #0x1
  45e064:	str	x2, [sp, #168]
  45e068:	lsl	x0, x0, #2
  45e06c:	add	x0, x1, x0
  45e070:	mov	w1, #0xffffffff            	// #-1
  45e074:	str	w1, [x0]
  45e078:	ldr	x1, [sp, #168]
  45e07c:	ldr	x0, [sp, #128]
  45e080:	cmp	x1, x0
  45e084:	b.lt	45e054 <_obstack_memory_used@@Base+0xf14>  // b.tstop
  45e088:	ldr	x1, [sp, #168]
  45e08c:	ldr	x0, [sp, #136]
  45e090:	cmp	x1, x0
  45e094:	b.lt	45dd9c <_obstack_memory_used@@Base+0xc5c>  // b.tstop
  45e098:	ldr	x0, [sp, #24]
  45e09c:	ldr	x1, [sp, #168]
  45e0a0:	str	x1, [x0, #48]
  45e0a4:	ldr	x0, [sp, #24]
  45e0a8:	ldr	x1, [sp, #168]
  45e0ac:	str	x1, [x0, #56]
  45e0b0:	nop
  45e0b4:	ldp	x29, x30, [sp], #176
  45e0b8:	ret
  45e0bc:	stp	x29, x30, [sp, #-240]!
  45e0c0:	mov	x29, sp
  45e0c4:	str	x0, [sp, #24]
  45e0c8:	ldr	x0, [sp, #24]
  45e0cc:	ldr	x0, [x0, #48]
  45e0d0:	str	x0, [sp, #224]
  45e0d4:	ldr	x0, [sp, #24]
  45e0d8:	ldr	x1, [x0, #64]
  45e0dc:	ldr	x0, [sp, #24]
  45e0e0:	ldr	x0, [x0, #88]
  45e0e4:	cmp	x1, x0
  45e0e8:	csel	x0, x1, x0, le
  45e0ec:	str	x0, [sp, #216]
  45e0f0:	ldr	x0, [sp, #24]
  45e0f4:	ldrb	w0, [x0, #138]
  45e0f8:	cmp	w0, #0x0
  45e0fc:	b.ne	45e4b4 <_obstack_memory_used@@Base+0x1374>  // b.any
  45e100:	ldr	x0, [sp, #24]
  45e104:	ldr	x0, [x0, #120]
  45e108:	cmp	x0, #0x0
  45e10c:	b.ne	45e4b4 <_obstack_memory_used@@Base+0x1374>  // b.any
  45e110:	ldr	x0, [sp, #24]
  45e114:	ldrb	w0, [x0, #140]
  45e118:	cmp	w0, #0x0
  45e11c:	b.ne	45e4b4 <_obstack_memory_used@@Base+0x1374>  // b.any
  45e120:	b	45e484 <_obstack_memory_used@@Base+0x1344>
  45e124:	ldr	x0, [sp, #24]
  45e128:	ldr	x0, [x0]
  45e12c:	ldr	x1, [sp, #24]
  45e130:	ldr	x2, [x1, #40]
  45e134:	ldr	x1, [sp, #224]
  45e138:	add	x1, x2, x1
  45e13c:	add	x0, x0, x1
  45e140:	ldrb	w0, [x0]
  45e144:	and	w0, w0, #0xffffff80
  45e148:	cmp	w0, #0x0
  45e14c:	b.ne	45e1e4 <_obstack_memory_used@@Base+0x10a4>  // b.any
  45e150:	ldr	x0, [sp, #24]
  45e154:	add	x0, x0, #0x20
  45e158:	bl	404730 <mbsinit@plt>
  45e15c:	cmp	w0, #0x0
  45e160:	b.eq	45e1e4 <_obstack_memory_used@@Base+0x10a4>  // b.none
  45e164:	ldr	x0, [sp, #24]
  45e168:	ldr	x0, [x0]
  45e16c:	ldr	x1, [sp, #24]
  45e170:	ldr	x2, [x1, #40]
  45e174:	ldr	x1, [sp, #224]
  45e178:	add	x1, x2, x1
  45e17c:	add	x0, x0, x1
  45e180:	ldrb	w0, [x0]
  45e184:	bl	404400 <toupper@plt>
  45e188:	mov	w2, w0
  45e18c:	ldr	x0, [sp, #24]
  45e190:	ldr	x1, [x0, #8]
  45e194:	ldr	x0, [sp, #224]
  45e198:	add	x0, x1, x0
  45e19c:	and	w1, w2, #0xff
  45e1a0:	strb	w1, [x0]
  45e1a4:	ldr	x0, [sp, #24]
  45e1a8:	ldr	x1, [x0, #8]
  45e1ac:	ldr	x0, [sp, #224]
  45e1b0:	add	x0, x1, x0
  45e1b4:	ldrb	w2, [x0]
  45e1b8:	ldr	x0, [sp, #24]
  45e1bc:	ldr	x1, [x0, #16]
  45e1c0:	ldr	x0, [sp, #224]
  45e1c4:	lsl	x0, x0, #2
  45e1c8:	add	x0, x1, x0
  45e1cc:	mov	w1, w2
  45e1d0:	str	w1, [x0]
  45e1d4:	ldr	x0, [sp, #224]
  45e1d8:	add	x0, x0, #0x1
  45e1dc:	str	x0, [sp, #224]
  45e1e0:	b	45e484 <_obstack_memory_used@@Base+0x1344>
  45e1e4:	ldr	x1, [sp, #216]
  45e1e8:	ldr	x0, [sp, #224]
  45e1ec:	sub	x0, x1, x0
  45e1f0:	str	x0, [sp, #168]
  45e1f4:	ldr	x0, [sp, #24]
  45e1f8:	ldr	x0, [x0, #32]
  45e1fc:	str	x0, [sp, #112]
  45e200:	ldr	x0, [sp, #24]
  45e204:	ldr	x1, [x0]
  45e208:	ldr	x0, [sp, #24]
  45e20c:	ldr	x0, [x0, #40]
  45e210:	mov	x2, x0
  45e214:	ldr	x0, [sp, #224]
  45e218:	add	x0, x2, x0
  45e21c:	add	x1, x1, x0
  45e220:	ldr	x2, [sp, #168]
  45e224:	ldr	x0, [sp, #24]
  45e228:	add	x3, x0, #0x20
  45e22c:	add	x0, sp, #0x2c
  45e230:	bl	45ca48 <argp_usage@@Base+0x1395c>
  45e234:	str	x0, [sp, #160]
  45e238:	ldr	x0, [sp, #160]
  45e23c:	cmp	x0, #0x0
  45e240:	cset	w0, ne  // ne = any
  45e244:	and	w0, w0, #0xff
  45e248:	and	x0, x0, #0xff
  45e24c:	cmp	x0, #0x0
  45e250:	b.eq	45e3a4 <_obstack_memory_used@@Base+0x1264>  // b.none
  45e254:	ldr	x0, [sp, #160]
  45e258:	cmn	x0, #0x3
  45e25c:	cset	w0, ls  // ls = plast
  45e260:	and	w0, w0, #0xff
  45e264:	and	x0, x0, #0xff
  45e268:	cmp	x0, #0x0
  45e26c:	b.eq	45e3a4 <_obstack_memory_used@@Base+0x1264>  // b.none
  45e270:	ldr	w0, [sp, #44]
  45e274:	bl	404b30 <towupper@plt>
  45e278:	str	w0, [sp, #156]
  45e27c:	ldr	w0, [sp, #44]
  45e280:	ldr	w1, [sp, #156]
  45e284:	cmp	w1, w0
  45e288:	b.eq	45e2f0 <_obstack_memory_used@@Base+0x11b0>  // b.none
  45e28c:	add	x1, sp, #0x70
  45e290:	add	x0, sp, #0x30
  45e294:	mov	x2, x1
  45e298:	ldr	w1, [sp, #156]
  45e29c:	bl	404d10 <wcrtomb@plt>
  45e2a0:	str	x0, [sp, #144]
  45e2a4:	ldr	x1, [sp, #160]
  45e2a8:	ldr	x0, [sp, #144]
  45e2ac:	cmp	x1, x0
  45e2b0:	cset	w0, eq  // eq = none
  45e2b4:	and	w0, w0, #0xff
  45e2b8:	and	x0, x0, #0xff
  45e2bc:	cmp	x0, #0x0
  45e2c0:	b.eq	45e2e4 <_obstack_memory_used@@Base+0x11a4>  // b.none
  45e2c4:	ldr	x0, [sp, #24]
  45e2c8:	ldr	x1, [x0, #8]
  45e2cc:	ldr	x0, [sp, #224]
  45e2d0:	add	x0, x1, x0
  45e2d4:	add	x1, sp, #0x30
  45e2d8:	ldr	x2, [sp, #160]
  45e2dc:	bl	404020 <memcpy@plt>
  45e2e0:	b	45e330 <_obstack_memory_used@@Base+0x11f0>
  45e2e4:	ldr	x0, [sp, #224]
  45e2e8:	str	x0, [sp, #232]
  45e2ec:	b	45e4c8 <_obstack_memory_used@@Base+0x1388>
  45e2f0:	ldr	x0, [sp, #24]
  45e2f4:	ldr	x1, [x0, #8]
  45e2f8:	ldr	x0, [sp, #224]
  45e2fc:	add	x3, x1, x0
  45e300:	ldr	x0, [sp, #24]
  45e304:	ldr	x1, [x0]
  45e308:	ldr	x0, [sp, #24]
  45e30c:	ldr	x0, [x0, #40]
  45e310:	mov	x2, x0
  45e314:	ldr	x0, [sp, #224]
  45e318:	add	x0, x2, x0
  45e31c:	add	x0, x1, x0
  45e320:	ldr	x2, [sp, #160]
  45e324:	mov	x1, x0
  45e328:	mov	x0, x3
  45e32c:	bl	404020 <memcpy@plt>
  45e330:	ldr	x0, [sp, #24]
  45e334:	ldr	x1, [x0, #16]
  45e338:	ldr	x0, [sp, #224]
  45e33c:	add	x2, x0, #0x1
  45e340:	str	x2, [sp, #224]
  45e344:	lsl	x0, x0, #2
  45e348:	add	x0, x1, x0
  45e34c:	ldr	w1, [sp, #156]
  45e350:	str	w1, [x0]
  45e354:	ldr	x1, [sp, #224]
  45e358:	ldr	x0, [sp, #160]
  45e35c:	add	x0, x1, x0
  45e360:	sub	x0, x0, #0x1
  45e364:	str	x0, [sp, #168]
  45e368:	b	45e390 <_obstack_memory_used@@Base+0x1250>
  45e36c:	ldr	x0, [sp, #24]
  45e370:	ldr	x1, [x0, #16]
  45e374:	ldr	x0, [sp, #224]
  45e378:	add	x2, x0, #0x1
  45e37c:	str	x2, [sp, #224]
  45e380:	lsl	x0, x0, #2
  45e384:	add	x0, x1, x0
  45e388:	mov	w1, #0xffffffff            	// #-1
  45e38c:	str	w1, [x0]
  45e390:	ldr	x1, [sp, #224]
  45e394:	ldr	x0, [sp, #168]
  45e398:	cmp	x1, x0
  45e39c:	b.lt	45e36c <_obstack_memory_used@@Base+0x122c>  // b.tstop
  45e3a0:	b	45e484 <_obstack_memory_used@@Base+0x1344>
  45e3a4:	ldr	x0, [sp, #160]
  45e3a8:	cmn	x0, #0x1
  45e3ac:	b.eq	45e3e0 <_obstack_memory_used@@Base+0x12a0>  // b.none
  45e3b0:	ldr	x0, [sp, #160]
  45e3b4:	cmp	x0, #0x0
  45e3b8:	b.eq	45e3e0 <_obstack_memory_used@@Base+0x12a0>  // b.none
  45e3bc:	ldr	x0, [sp, #160]
  45e3c0:	cmn	x0, #0x2
  45e3c4:	b.ne	45e470 <_obstack_memory_used@@Base+0x1330>  // b.any
  45e3c8:	ldr	x0, [sp, #24]
  45e3cc:	ldr	x1, [x0, #64]
  45e3d0:	ldr	x0, [sp, #24]
  45e3d4:	ldr	x0, [x0, #88]
  45e3d8:	cmp	x1, x0
  45e3dc:	b.lt	45e470 <_obstack_memory_used@@Base+0x1330>  // b.tstop
  45e3e0:	ldr	x0, [sp, #24]
  45e3e4:	ldr	x0, [x0]
  45e3e8:	ldr	x1, [sp, #24]
  45e3ec:	ldr	x2, [x1, #40]
  45e3f0:	ldr	x1, [sp, #224]
  45e3f4:	add	x1, x2, x1
  45e3f8:	add	x0, x0, x1
  45e3fc:	ldrb	w0, [x0]
  45e400:	str	w0, [sp, #140]
  45e404:	ldr	x0, [sp, #24]
  45e408:	ldr	x1, [x0, #8]
  45e40c:	ldr	x0, [sp, #224]
  45e410:	add	x0, x1, x0
  45e414:	ldr	w1, [sp, #140]
  45e418:	and	w1, w1, #0xff
  45e41c:	strb	w1, [x0]
  45e420:	ldr	x0, [sp, #24]
  45e424:	ldr	x1, [x0, #16]
  45e428:	ldr	x0, [sp, #224]
  45e42c:	add	x2, x0, #0x1
  45e430:	str	x2, [sp, #224]
  45e434:	lsl	x0, x0, #2
  45e438:	add	x0, x1, x0
  45e43c:	ldr	w1, [sp, #140]
  45e440:	str	w1, [x0]
  45e444:	ldr	x0, [sp, #160]
  45e448:	cmn	x0, #0x1
  45e44c:	cset	w0, eq  // eq = none
  45e450:	and	w0, w0, #0xff
  45e454:	and	x0, x0, #0xff
  45e458:	cmp	x0, #0x0
  45e45c:	b.eq	45e480 <_obstack_memory_used@@Base+0x1340>  // b.none
  45e460:	ldr	x0, [sp, #24]
  45e464:	ldr	x1, [sp, #112]
  45e468:	str	x1, [x0, #32]
  45e46c:	b	45e480 <_obstack_memory_used@@Base+0x1340>
  45e470:	ldr	x0, [sp, #24]
  45e474:	ldr	x1, [sp, #112]
  45e478:	str	x1, [x0, #32]
  45e47c:	b	45e494 <_obstack_memory_used@@Base+0x1354>
  45e480:	nop
  45e484:	ldr	x1, [sp, #224]
  45e488:	ldr	x0, [sp, #216]
  45e48c:	cmp	x1, x0
  45e490:	b.lt	45e124 <_obstack_memory_used@@Base+0xfe4>  // b.tstop
  45e494:	ldr	x0, [sp, #24]
  45e498:	ldr	x1, [sp, #224]
  45e49c:	str	x1, [x0, #48]
  45e4a0:	ldr	x0, [sp, #24]
  45e4a4:	ldr	x1, [sp, #224]
  45e4a8:	str	x1, [x0, #56]
  45e4ac:	mov	w0, #0x0                   	// #0
  45e4b0:	b	45ebb0 <_obstack_memory_used@@Base+0x1a70>
  45e4b4:	ldr	x0, [sp, #24]
  45e4b8:	ldr	x0, [x0, #56]
  45e4bc:	str	x0, [sp, #232]
  45e4c0:	b	45eb84 <_obstack_memory_used@@Base+0x1a44>
  45e4c4:	nop
  45e4c8:	ldr	x1, [sp, #216]
  45e4cc:	ldr	x0, [sp, #224]
  45e4d0:	sub	x0, x1, x0
  45e4d4:	str	x0, [sp, #168]
  45e4d8:	ldr	x0, [sp, #24]
  45e4dc:	ldr	x0, [x0, #32]
  45e4e0:	str	x0, [sp, #112]
  45e4e4:	ldr	x0, [sp, #24]
  45e4e8:	ldr	x0, [x0, #120]
  45e4ec:	cmp	x0, #0x0
  45e4f0:	cset	w0, ne  // ne = any
  45e4f4:	and	w0, w0, #0xff
  45e4f8:	and	x0, x0, #0xff
  45e4fc:	cmp	x0, #0x0
  45e500:	b.eq	45e594 <_obstack_memory_used@@Base+0x1454>  // b.none
  45e504:	str	wzr, [sp, #204]
  45e508:	b	45e564 <_obstack_memory_used@@Base+0x1424>
  45e50c:	ldr	x0, [sp, #24]
  45e510:	ldr	x0, [x0]
  45e514:	ldr	x1, [sp, #24]
  45e518:	ldr	x2, [x1, #40]
  45e51c:	ldr	x1, [sp, #232]
  45e520:	add	x2, x2, x1
  45e524:	ldrsw	x1, [sp, #204]
  45e528:	add	x1, x2, x1
  45e52c:	add	x0, x0, x1
  45e530:	ldrb	w0, [x0]
  45e534:	str	w0, [sp, #136]
  45e538:	ldr	x0, [sp, #24]
  45e53c:	ldr	x1, [x0, #120]
  45e540:	ldrsw	x0, [sp, #136]
  45e544:	add	x0, x1, x0
  45e548:	ldrb	w2, [x0]
  45e54c:	ldrsw	x0, [sp, #204]
  45e550:	add	x1, sp, #0x30
  45e554:	strb	w2, [x1, x0]
  45e558:	ldr	w0, [sp, #204]
  45e55c:	add	w0, w0, #0x1
  45e560:	str	w0, [sp, #204]
  45e564:	ldr	x0, [sp, #24]
  45e568:	ldr	w0, [x0, #144]
  45e56c:	ldr	w1, [sp, #204]
  45e570:	cmp	w1, w0
  45e574:	b.ge	45e588 <_obstack_memory_used@@Base+0x1448>  // b.tcont
  45e578:	ldrsw	x0, [sp, #204]
  45e57c:	ldr	x1, [sp, #168]
  45e580:	cmp	x1, x0
  45e584:	b.gt	45e50c <_obstack_memory_used@@Base+0x13cc>
  45e588:	add	x0, sp, #0x30
  45e58c:	str	x0, [sp, #208]
  45e590:	b	45e5b8 <_obstack_memory_used@@Base+0x1478>
  45e594:	ldr	x0, [sp, #24]
  45e598:	ldr	x1, [x0]
  45e59c:	ldr	x0, [sp, #24]
  45e5a0:	ldr	x0, [x0, #40]
  45e5a4:	mov	x2, x0
  45e5a8:	ldr	x0, [sp, #232]
  45e5ac:	add	x0, x2, x0
  45e5b0:	add	x0, x1, x0
  45e5b4:	str	x0, [sp, #208]
  45e5b8:	ldr	x1, [sp, #168]
  45e5bc:	ldr	x0, [sp, #24]
  45e5c0:	add	x2, x0, #0x20
  45e5c4:	add	x0, sp, #0x28
  45e5c8:	mov	x3, x2
  45e5cc:	mov	x2, x1
  45e5d0:	ldr	x1, [sp, #208]
  45e5d4:	bl	45ca48 <argp_usage@@Base+0x1395c>
  45e5d8:	str	x0, [sp, #160]
  45e5dc:	ldr	x0, [sp, #160]
  45e5e0:	cmp	x0, #0x0
  45e5e4:	cset	w0, ne  // ne = any
  45e5e8:	and	w0, w0, #0xff
  45e5ec:	and	x0, x0, #0xff
  45e5f0:	cmp	x0, #0x0
  45e5f4:	b.eq	45ea24 <_obstack_memory_used@@Base+0x18e4>  // b.none
  45e5f8:	ldr	x0, [sp, #160]
  45e5fc:	cmn	x0, #0x3
  45e600:	cset	w0, ls  // ls = plast
  45e604:	and	w0, w0, #0xff
  45e608:	and	x0, x0, #0xff
  45e60c:	cmp	x0, #0x0
  45e610:	b.eq	45ea24 <_obstack_memory_used@@Base+0x18e4>  // b.none
  45e614:	ldr	w0, [sp, #40]
  45e618:	bl	404b30 <towupper@plt>
  45e61c:	str	w0, [sp, #132]
  45e620:	ldr	w0, [sp, #40]
  45e624:	ldr	w1, [sp, #132]
  45e628:	cmp	w1, w0
  45e62c:	b.eq	45e910 <_obstack_memory_used@@Base+0x17d0>  // b.none
  45e630:	add	x1, sp, #0x70
  45e634:	add	x0, sp, #0x30
  45e638:	mov	x2, x1
  45e63c:	ldr	w1, [sp, #132]
  45e640:	bl	404d10 <wcrtomb@plt>
  45e644:	str	x0, [sp, #120]
  45e648:	ldr	x1, [sp, #160]
  45e64c:	ldr	x0, [sp, #120]
  45e650:	cmp	x1, x0
  45e654:	cset	w0, eq  // eq = none
  45e658:	and	w0, w0, #0xff
  45e65c:	and	x0, x0, #0xff
  45e660:	cmp	x0, #0x0
  45e664:	b.eq	45e688 <_obstack_memory_used@@Base+0x1548>  // b.none
  45e668:	ldr	x0, [sp, #24]
  45e66c:	ldr	x1, [x0, #8]
  45e670:	ldr	x0, [sp, #224]
  45e674:	add	x0, x1, x0
  45e678:	add	x1, sp, #0x30
  45e67c:	ldr	x2, [sp, #160]
  45e680:	bl	404020 <memcpy@plt>
  45e684:	b	45e92c <_obstack_memory_used@@Base+0x17ec>
  45e688:	ldr	x0, [sp, #120]
  45e68c:	cmn	x0, #0x1
  45e690:	b.eq	45e8f0 <_obstack_memory_used@@Base+0x17b0>  // b.none
  45e694:	ldr	x1, [sp, #224]
  45e698:	ldr	x0, [sp, #120]
  45e69c:	add	x0, x1, x0
  45e6a0:	ldr	x1, [sp, #24]
  45e6a4:	ldr	x1, [x1, #64]
  45e6a8:	cmp	x0, x1
  45e6ac:	b.ls	45e6c0 <_obstack_memory_used@@Base+0x1580>  // b.plast
  45e6b0:	ldr	x0, [sp, #24]
  45e6b4:	ldr	x1, [sp, #112]
  45e6b8:	str	x1, [x0, #32]
  45e6bc:	b	45eb94 <_obstack_memory_used@@Base+0x1a54>
  45e6c0:	ldr	x0, [sp, #24]
  45e6c4:	ldr	x0, [x0, #24]
  45e6c8:	cmp	x0, #0x0
  45e6cc:	b.ne	45e704 <_obstack_memory_used@@Base+0x15c4>  // b.any
  45e6d0:	ldr	x0, [sp, #24]
  45e6d4:	ldr	x0, [x0, #64]
  45e6d8:	lsl	x0, x0, #3
  45e6dc:	bl	4043f0 <malloc@plt>
  45e6e0:	mov	x1, x0
  45e6e4:	ldr	x0, [sp, #24]
  45e6e8:	str	x1, [x0, #24]
  45e6ec:	ldr	x0, [sp, #24]
  45e6f0:	ldr	x0, [x0, #24]
  45e6f4:	cmp	x0, #0x0
  45e6f8:	b.ne	45e704 <_obstack_memory_used@@Base+0x15c4>  // b.any
  45e6fc:	mov	w0, #0xc                   	// #12
  45e700:	b	45ebb0 <_obstack_memory_used@@Base+0x1a70>
  45e704:	ldr	x0, [sp, #24]
  45e708:	ldrb	w0, [x0, #140]
  45e70c:	cmp	w0, #0x0
  45e710:	b.ne	45e760 <_obstack_memory_used@@Base+0x1620>  // b.any
  45e714:	str	xzr, [sp, #192]
  45e718:	b	45e744 <_obstack_memory_used@@Base+0x1604>
  45e71c:	ldr	x0, [sp, #24]
  45e720:	ldr	x1, [x0, #24]
  45e724:	ldr	x0, [sp, #192]
  45e728:	lsl	x0, x0, #3
  45e72c:	add	x0, x1, x0
  45e730:	ldr	x1, [sp, #192]
  45e734:	str	x1, [x0]
  45e738:	ldr	x0, [sp, #192]
  45e73c:	add	x0, x0, #0x1
  45e740:	str	x0, [sp, #192]
  45e744:	ldr	x0, [sp, #224]
  45e748:	ldr	x1, [sp, #192]
  45e74c:	cmp	x1, x0
  45e750:	b.cc	45e71c <_obstack_memory_used@@Base+0x15dc>  // b.lo, b.ul, b.last
  45e754:	ldr	x0, [sp, #24]
  45e758:	mov	w1, #0x1                   	// #1
  45e75c:	strb	w1, [x0, #140]
  45e760:	ldr	x0, [sp, #24]
  45e764:	ldr	x1, [x0, #8]
  45e768:	ldr	x0, [sp, #224]
  45e76c:	add	x0, x1, x0
  45e770:	add	x1, sp, #0x30
  45e774:	ldr	x2, [sp, #120]
  45e778:	bl	404020 <memcpy@plt>
  45e77c:	ldr	x0, [sp, #24]
  45e780:	ldr	x1, [x0, #16]
  45e784:	ldr	x0, [sp, #224]
  45e788:	lsl	x0, x0, #2
  45e78c:	add	x0, x1, x0
  45e790:	ldr	w1, [sp, #132]
  45e794:	str	w1, [x0]
  45e798:	ldr	x0, [sp, #24]
  45e79c:	ldr	x1, [x0, #24]
  45e7a0:	ldr	x0, [sp, #224]
  45e7a4:	lsl	x0, x0, #3
  45e7a8:	add	x0, x1, x0
  45e7ac:	ldr	x1, [sp, #232]
  45e7b0:	str	x1, [x0]
  45e7b4:	mov	x0, #0x1                   	// #1
  45e7b8:	str	x0, [sp, #192]
  45e7bc:	b	45e83c <_obstack_memory_used@@Base+0x16fc>
  45e7c0:	ldr	x1, [sp, #192]
  45e7c4:	ldr	x0, [sp, #160]
  45e7c8:	cmp	x1, x0
  45e7cc:	b.cc	45e7dc <_obstack_memory_used@@Base+0x169c>  // b.lo, b.ul, b.last
  45e7d0:	ldr	x0, [sp, #160]
  45e7d4:	sub	x0, x0, #0x1
  45e7d8:	b	45e7e0 <_obstack_memory_used@@Base+0x16a0>
  45e7dc:	ldr	x0, [sp, #192]
  45e7e0:	ldr	x1, [sp, #232]
  45e7e4:	add	x3, x0, x1
  45e7e8:	ldr	x0, [sp, #24]
  45e7ec:	ldr	x1, [x0, #24]
  45e7f0:	ldr	x2, [sp, #224]
  45e7f4:	ldr	x0, [sp, #192]
  45e7f8:	add	x0, x2, x0
  45e7fc:	lsl	x0, x0, #3
  45e800:	add	x0, x1, x0
  45e804:	mov	x1, x3
  45e808:	str	x1, [x0]
  45e80c:	ldr	x0, [sp, #24]
  45e810:	ldr	x1, [x0, #16]
  45e814:	ldr	x2, [sp, #224]
  45e818:	ldr	x0, [sp, #192]
  45e81c:	add	x0, x2, x0
  45e820:	lsl	x0, x0, #2
  45e824:	add	x0, x1, x0
  45e828:	mov	w1, #0xffffffff            	// #-1
  45e82c:	str	w1, [x0]
  45e830:	ldr	x0, [sp, #192]
  45e834:	add	x0, x0, #0x1
  45e838:	str	x0, [sp, #192]
  45e83c:	ldr	x1, [sp, #192]
  45e840:	ldr	x0, [sp, #120]
  45e844:	cmp	x1, x0
  45e848:	b.cc	45e7c0 <_obstack_memory_used@@Base+0x1680>  // b.lo, b.ul, b.last
  45e84c:	ldr	x0, [sp, #24]
  45e850:	ldr	x0, [x0, #88]
  45e854:	mov	x2, x0
  45e858:	ldr	x1, [sp, #120]
  45e85c:	ldr	x0, [sp, #160]
  45e860:	sub	x0, x1, x0
  45e864:	add	x0, x2, x0
  45e868:	mov	x1, x0
  45e86c:	ldr	x0, [sp, #24]
  45e870:	str	x1, [x0, #88]
  45e874:	ldr	x0, [sp, #24]
  45e878:	ldr	x0, [x0, #96]
  45e87c:	ldr	x1, [sp, #232]
  45e880:	cmp	x1, x0
  45e884:	b.ge	45e8b0 <_obstack_memory_used@@Base+0x1770>  // b.tcont
  45e888:	ldr	x0, [sp, #24]
  45e88c:	ldr	x0, [x0, #104]
  45e890:	mov	x2, x0
  45e894:	ldr	x1, [sp, #120]
  45e898:	ldr	x0, [sp, #160]
  45e89c:	sub	x0, x1, x0
  45e8a0:	add	x0, x2, x0
  45e8a4:	mov	x1, x0
  45e8a8:	ldr	x0, [sp, #24]
  45e8ac:	str	x1, [x0, #104]
  45e8b0:	ldr	x0, [sp, #24]
  45e8b4:	ldr	x1, [x0, #64]
  45e8b8:	ldr	x0, [sp, #24]
  45e8bc:	ldr	x0, [x0, #88]
  45e8c0:	cmp	x1, x0
  45e8c4:	csel	x0, x1, x0, le
  45e8c8:	str	x0, [sp, #216]
  45e8cc:	ldr	x1, [sp, #224]
  45e8d0:	ldr	x0, [sp, #120]
  45e8d4:	add	x0, x1, x0
  45e8d8:	str	x0, [sp, #224]
  45e8dc:	ldr	x1, [sp, #232]
  45e8e0:	ldr	x0, [sp, #160]
  45e8e4:	add	x0, x1, x0
  45e8e8:	str	x0, [sp, #232]
  45e8ec:	b	45eb84 <_obstack_memory_used@@Base+0x1a44>
  45e8f0:	ldr	x0, [sp, #24]
  45e8f4:	ldr	x1, [x0, #8]
  45e8f8:	ldr	x0, [sp, #224]
  45e8fc:	add	x0, x1, x0
  45e900:	ldr	x2, [sp, #160]
  45e904:	ldr	x1, [sp, #208]
  45e908:	bl	404020 <memcpy@plt>
  45e90c:	b	45e92c <_obstack_memory_used@@Base+0x17ec>
  45e910:	ldr	x0, [sp, #24]
  45e914:	ldr	x1, [x0, #8]
  45e918:	ldr	x0, [sp, #224]
  45e91c:	add	x0, x1, x0
  45e920:	ldr	x2, [sp, #160]
  45e924:	ldr	x1, [sp, #208]
  45e928:	bl	404020 <memcpy@plt>
  45e92c:	ldr	x0, [sp, #24]
  45e930:	ldrb	w0, [x0, #140]
  45e934:	cmp	w0, #0x0
  45e938:	cset	w0, ne  // ne = any
  45e93c:	and	w0, w0, #0xff
  45e940:	and	x0, x0, #0xff
  45e944:	cmp	x0, #0x0
  45e948:	b.eq	45e9a0 <_obstack_memory_used@@Base+0x1860>  // b.none
  45e94c:	str	xzr, [sp, #184]
  45e950:	b	45e990 <_obstack_memory_used@@Base+0x1850>
  45e954:	ldr	x1, [sp, #232]
  45e958:	ldr	x0, [sp, #184]
  45e95c:	add	x3, x1, x0
  45e960:	ldr	x0, [sp, #24]
  45e964:	ldr	x1, [x0, #24]
  45e968:	ldr	x2, [sp, #224]
  45e96c:	ldr	x0, [sp, #184]
  45e970:	add	x0, x2, x0
  45e974:	lsl	x0, x0, #3
  45e978:	add	x0, x1, x0
  45e97c:	mov	x1, x3
  45e980:	str	x1, [x0]
  45e984:	ldr	x0, [sp, #184]
  45e988:	add	x0, x0, #0x1
  45e98c:	str	x0, [sp, #184]
  45e990:	ldr	x1, [sp, #184]
  45e994:	ldr	x0, [sp, #160]
  45e998:	cmp	x1, x0
  45e99c:	b.cc	45e954 <_obstack_memory_used@@Base+0x1814>  // b.lo, b.ul, b.last
  45e9a0:	ldr	x1, [sp, #232]
  45e9a4:	ldr	x0, [sp, #160]
  45e9a8:	add	x0, x1, x0
  45e9ac:	str	x0, [sp, #232]
  45e9b0:	ldr	x0, [sp, #24]
  45e9b4:	ldr	x1, [x0, #16]
  45e9b8:	ldr	x0, [sp, #224]
  45e9bc:	add	x2, x0, #0x1
  45e9c0:	str	x2, [sp, #224]
  45e9c4:	lsl	x0, x0, #2
  45e9c8:	add	x0, x1, x0
  45e9cc:	ldr	w1, [sp, #132]
  45e9d0:	str	w1, [x0]
  45e9d4:	ldr	x1, [sp, #224]
  45e9d8:	ldr	x0, [sp, #160]
  45e9dc:	add	x0, x1, x0
  45e9e0:	sub	x0, x0, #0x1
  45e9e4:	str	x0, [sp, #168]
  45e9e8:	b	45ea10 <_obstack_memory_used@@Base+0x18d0>
  45e9ec:	ldr	x0, [sp, #24]
  45e9f0:	ldr	x1, [x0, #16]
  45e9f4:	ldr	x0, [sp, #224]
  45e9f8:	add	x2, x0, #0x1
  45e9fc:	str	x2, [sp, #224]
  45ea00:	lsl	x0, x0, #2
  45ea04:	add	x0, x1, x0
  45ea08:	mov	w1, #0xffffffff            	// #-1
  45ea0c:	str	w1, [x0]
  45ea10:	ldr	x1, [sp, #224]
  45ea14:	ldr	x0, [sp, #168]
  45ea18:	cmp	x1, x0
  45ea1c:	b.lt	45e9ec <_obstack_memory_used@@Base+0x18ac>  // b.tstop
  45ea20:	b	45eb84 <_obstack_memory_used@@Base+0x1a44>
  45ea24:	ldr	x0, [sp, #160]
  45ea28:	cmn	x0, #0x1
  45ea2c:	b.eq	45ea60 <_obstack_memory_used@@Base+0x1920>  // b.none
  45ea30:	ldr	x0, [sp, #160]
  45ea34:	cmp	x0, #0x0
  45ea38:	b.eq	45ea60 <_obstack_memory_used@@Base+0x1920>  // b.none
  45ea3c:	ldr	x0, [sp, #160]
  45ea40:	cmn	x0, #0x2
  45ea44:	b.ne	45eb70 <_obstack_memory_used@@Base+0x1a30>  // b.any
  45ea48:	ldr	x0, [sp, #24]
  45ea4c:	ldr	x1, [x0, #64]
  45ea50:	ldr	x0, [sp, #24]
  45ea54:	ldr	x0, [x0, #88]
  45ea58:	cmp	x1, x0
  45ea5c:	b.lt	45eb70 <_obstack_memory_used@@Base+0x1a30>  // b.tstop
  45ea60:	ldr	x0, [sp, #24]
  45ea64:	ldr	x0, [x0]
  45ea68:	ldr	x1, [sp, #24]
  45ea6c:	ldr	x2, [x1, #40]
  45ea70:	ldr	x1, [sp, #232]
  45ea74:	add	x1, x2, x1
  45ea78:	add	x0, x0, x1
  45ea7c:	ldrb	w0, [x0]
  45ea80:	str	w0, [sp, #180]
  45ea84:	ldr	x0, [sp, #24]
  45ea88:	ldr	x0, [x0, #120]
  45ea8c:	cmp	x0, #0x0
  45ea90:	cset	w0, ne  // ne = any
  45ea94:	and	w0, w0, #0xff
  45ea98:	and	x0, x0, #0xff
  45ea9c:	cmp	x0, #0x0
  45eaa0:	b.eq	45eabc <_obstack_memory_used@@Base+0x197c>  // b.none
  45eaa4:	ldr	x0, [sp, #24]
  45eaa8:	ldr	x1, [x0, #120]
  45eaac:	ldrsw	x0, [sp, #180]
  45eab0:	add	x0, x1, x0
  45eab4:	ldrb	w0, [x0]
  45eab8:	str	w0, [sp, #180]
  45eabc:	ldr	x0, [sp, #24]
  45eac0:	ldr	x1, [x0, #8]
  45eac4:	ldr	x0, [sp, #224]
  45eac8:	add	x0, x1, x0
  45eacc:	ldr	w1, [sp, #180]
  45ead0:	and	w1, w1, #0xff
  45ead4:	strb	w1, [x0]
  45ead8:	ldr	x0, [sp, #24]
  45eadc:	ldrb	w0, [x0, #140]
  45eae0:	cmp	w0, #0x0
  45eae4:	cset	w0, ne  // ne = any
  45eae8:	and	w0, w0, #0xff
  45eaec:	and	x0, x0, #0xff
  45eaf0:	cmp	x0, #0x0
  45eaf4:	b.eq	45eb14 <_obstack_memory_used@@Base+0x19d4>  // b.none
  45eaf8:	ldr	x0, [sp, #24]
  45eafc:	ldr	x1, [x0, #24]
  45eb00:	ldr	x0, [sp, #224]
  45eb04:	lsl	x0, x0, #3
  45eb08:	add	x0, x1, x0
  45eb0c:	ldr	x1, [sp, #232]
  45eb10:	str	x1, [x0]
  45eb14:	ldr	x0, [sp, #232]
  45eb18:	add	x0, x0, #0x1
  45eb1c:	str	x0, [sp, #232]
  45eb20:	ldr	x0, [sp, #24]
  45eb24:	ldr	x1, [x0, #16]
  45eb28:	ldr	x0, [sp, #224]
  45eb2c:	add	x2, x0, #0x1
  45eb30:	str	x2, [sp, #224]
  45eb34:	lsl	x0, x0, #2
  45eb38:	add	x0, x1, x0
  45eb3c:	ldr	w1, [sp, #180]
  45eb40:	str	w1, [x0]
  45eb44:	ldr	x0, [sp, #160]
  45eb48:	cmn	x0, #0x1
  45eb4c:	cset	w0, eq  // eq = none
  45eb50:	and	w0, w0, #0xff
  45eb54:	and	x0, x0, #0xff
  45eb58:	cmp	x0, #0x0
  45eb5c:	b.eq	45eb80 <_obstack_memory_used@@Base+0x1a40>  // b.none
  45eb60:	ldr	x0, [sp, #24]
  45eb64:	ldr	x1, [sp, #112]
  45eb68:	str	x1, [x0, #32]
  45eb6c:	b	45eb80 <_obstack_memory_used@@Base+0x1a40>
  45eb70:	ldr	x0, [sp, #24]
  45eb74:	ldr	x1, [sp, #112]
  45eb78:	str	x1, [x0, #32]
  45eb7c:	b	45eb94 <_obstack_memory_used@@Base+0x1a54>
  45eb80:	nop
  45eb84:	ldr	x1, [sp, #224]
  45eb88:	ldr	x0, [sp, #216]
  45eb8c:	cmp	x1, x0
  45eb90:	b.lt	45e4c4 <_obstack_memory_used@@Base+0x1384>  // b.tstop
  45eb94:	ldr	x0, [sp, #24]
  45eb98:	ldr	x1, [sp, #224]
  45eb9c:	str	x1, [x0, #48]
  45eba0:	ldr	x0, [sp, #24]
  45eba4:	ldr	x1, [sp, #232]
  45eba8:	str	x1, [x0, #56]
  45ebac:	mov	w0, #0x0                   	// #0
  45ebb0:	ldp	x29, x30, [sp], #240
  45ebb4:	ret
  45ebb8:	stp	x29, x30, [sp, #-96]!
  45ebbc:	mov	x29, sp
  45ebc0:	str	x0, [sp, #40]
  45ebc4:	str	x1, [sp, #32]
  45ebc8:	str	x2, [sp, #24]
  45ebcc:	mov	w0, #0xffffffff            	// #-1
  45ebd0:	str	w0, [sp, #76]
  45ebd4:	ldr	x0, [sp, #40]
  45ebd8:	ldr	x1, [x0, #40]
  45ebdc:	ldr	x0, [sp, #40]
  45ebe0:	ldr	x0, [x0, #56]
  45ebe4:	add	x0, x1, x0
  45ebe8:	str	x0, [sp, #88]
  45ebec:	b	45ed08 <_obstack_memory_used@@Base+0x1bc8>
  45ebf0:	ldr	x0, [sp, #40]
  45ebf4:	ldr	x1, [x0, #80]
  45ebf8:	ldr	x0, [sp, #88]
  45ebfc:	sub	x0, x1, x0
  45ec00:	str	x0, [sp, #64]
  45ec04:	ldr	x0, [sp, #40]
  45ec08:	ldr	x0, [x0, #32]
  45ec0c:	str	x0, [sp, #56]
  45ec10:	ldr	x0, [sp, #40]
  45ec14:	ldr	x1, [x0]
  45ec18:	ldr	x0, [sp, #88]
  45ec1c:	add	x1, x1, x0
  45ec20:	ldr	x2, [sp, #64]
  45ec24:	ldr	x0, [sp, #40]
  45ec28:	add	x3, x0, #0x20
  45ec2c:	add	x0, sp, #0x34
  45ec30:	bl	45ca48 <argp_usage@@Base+0x1395c>
  45ec34:	str	x0, [sp, #80]
  45ec38:	ldr	x0, [sp, #80]
  45ec3c:	cmn	x0, #0x2
  45ec40:	cset	w0, eq  // eq = none
  45ec44:	and	w0, w0, #0xff
  45ec48:	and	x0, x0, #0xff
  45ec4c:	cmp	x0, #0x0
  45ec50:	b.ne	45ec70 <_obstack_memory_used@@Base+0x1b30>  // b.any
  45ec54:	ldr	x0, [sp, #80]
  45ec58:	cmn	x0, #0x1
  45ec5c:	cset	w0, eq  // eq = none
  45ec60:	and	w0, w0, #0xff
  45ec64:	and	x0, x0, #0xff
  45ec68:	cmp	x0, #0x0
  45ec6c:	b.eq	45ec78 <_obstack_memory_used@@Base+0x1b38>  // b.none
  45ec70:	mov	w0, #0x1                   	// #1
  45ec74:	b	45ec7c <_obstack_memory_used@@Base+0x1b3c>
  45ec78:	mov	w0, #0x0                   	// #0
  45ec7c:	cmp	w0, #0x0
  45ec80:	b.ne	45eca0 <_obstack_memory_used@@Base+0x1b60>  // b.any
  45ec84:	ldr	x0, [sp, #80]
  45ec88:	cmp	x0, #0x0
  45ec8c:	cset	w0, eq  // eq = none
  45ec90:	and	w0, w0, #0xff
  45ec94:	and	x0, x0, #0xff
  45ec98:	cmp	x0, #0x0
  45ec9c:	b.eq	45ecf0 <_obstack_memory_used@@Base+0x1bb0>  // b.none
  45eca0:	ldr	x0, [sp, #80]
  45eca4:	cmp	x0, #0x0
  45eca8:	b.eq	45ecb8 <_obstack_memory_used@@Base+0x1b78>  // b.none
  45ecac:	ldr	x0, [sp, #64]
  45ecb0:	cmp	x0, #0x0
  45ecb4:	b.ne	45ecc0 <_obstack_memory_used@@Base+0x1b80>  // b.any
  45ecb8:	str	wzr, [sp, #76]
  45ecbc:	b	45ecd8 <_obstack_memory_used@@Base+0x1b98>
  45ecc0:	ldr	x0, [sp, #40]
  45ecc4:	ldr	x1, [x0]
  45ecc8:	ldr	x0, [sp, #88]
  45eccc:	add	x0, x1, x0
  45ecd0:	ldrb	w0, [x0]
  45ecd4:	str	w0, [sp, #76]
  45ecd8:	mov	x0, #0x1                   	// #1
  45ecdc:	str	x0, [sp, #80]
  45ece0:	ldr	x0, [sp, #40]
  45ece4:	ldr	x1, [sp, #56]
  45ece8:	str	x1, [x0, #32]
  45ecec:	b	45ecf8 <_obstack_memory_used@@Base+0x1bb8>
  45ecf0:	ldr	w0, [sp, #52]
  45ecf4:	str	w0, [sp, #76]
  45ecf8:	ldr	x1, [sp, #88]
  45ecfc:	ldr	x0, [sp, #80]
  45ed00:	add	x0, x1, x0
  45ed04:	str	x0, [sp, #88]
  45ed08:	ldr	x1, [sp, #88]
  45ed0c:	ldr	x0, [sp, #32]
  45ed10:	cmp	x1, x0
  45ed14:	b.lt	45ebf0 <_obstack_memory_used@@Base+0x1ab0>  // b.tstop
  45ed18:	ldr	x0, [sp, #24]
  45ed1c:	ldr	w1, [sp, #76]
  45ed20:	str	w1, [x0]
  45ed24:	ldr	x0, [sp, #88]
  45ed28:	ldp	x29, x30, [sp], #96
  45ed2c:	ret
  45ed30:	stp	x29, x30, [sp, #-64]!
  45ed34:	mov	x29, sp
  45ed38:	str	x0, [sp, #24]
  45ed3c:	ldr	x0, [sp, #24]
  45ed40:	ldr	x1, [x0, #64]
  45ed44:	ldr	x0, [sp, #24]
  45ed48:	ldr	x0, [x0, #88]
  45ed4c:	cmp	x1, x0
  45ed50:	csel	x0, x1, x0, le
  45ed54:	str	x0, [sp, #40]
  45ed58:	ldr	x0, [sp, #24]
  45ed5c:	ldr	x0, [x0, #48]
  45ed60:	str	x0, [sp, #56]
  45ed64:	b	45edf4 <_obstack_memory_used@@Base+0x1cb4>
  45ed68:	ldr	x0, [sp, #24]
  45ed6c:	ldr	x0, [x0]
  45ed70:	ldr	x1, [sp, #24]
  45ed74:	ldr	x2, [x1, #40]
  45ed78:	ldr	x1, [sp, #56]
  45ed7c:	add	x1, x2, x1
  45ed80:	add	x0, x0, x1
  45ed84:	ldrb	w0, [x0]
  45ed88:	str	w0, [sp, #52]
  45ed8c:	ldr	x0, [sp, #24]
  45ed90:	ldr	x0, [x0, #120]
  45ed94:	cmp	x0, #0x0
  45ed98:	cset	w0, ne  // ne = any
  45ed9c:	and	w0, w0, #0xff
  45eda0:	and	x0, x0, #0xff
  45eda4:	cmp	x0, #0x0
  45eda8:	b.eq	45edc4 <_obstack_memory_used@@Base+0x1c84>  // b.none
  45edac:	ldr	x0, [sp, #24]
  45edb0:	ldr	x1, [x0, #120]
  45edb4:	ldrsw	x0, [sp, #52]
  45edb8:	add	x0, x1, x0
  45edbc:	ldrb	w0, [x0]
  45edc0:	str	w0, [sp, #52]
  45edc4:	ldr	w0, [sp, #52]
  45edc8:	bl	404400 <toupper@plt>
  45edcc:	mov	w2, w0
  45edd0:	ldr	x0, [sp, #24]
  45edd4:	ldr	x1, [x0, #8]
  45edd8:	ldr	x0, [sp, #56]
  45eddc:	add	x0, x1, x0
  45ede0:	and	w1, w2, #0xff
  45ede4:	strb	w1, [x0]
  45ede8:	ldr	x0, [sp, #56]
  45edec:	add	x0, x0, #0x1
  45edf0:	str	x0, [sp, #56]
  45edf4:	ldr	x1, [sp, #56]
  45edf8:	ldr	x0, [sp, #40]
  45edfc:	cmp	x1, x0
  45ee00:	b.lt	45ed68 <_obstack_memory_used@@Base+0x1c28>  // b.tstop
  45ee04:	ldr	x0, [sp, #24]
  45ee08:	ldr	x1, [sp, #56]
  45ee0c:	str	x1, [x0, #48]
  45ee10:	ldr	x0, [sp, #24]
  45ee14:	ldr	x1, [sp, #56]
  45ee18:	str	x1, [x0, #56]
  45ee1c:	nop
  45ee20:	ldp	x29, x30, [sp], #64
  45ee24:	ret
  45ee28:	sub	sp, sp, #0x30
  45ee2c:	str	x0, [sp, #8]
  45ee30:	ldr	x0, [sp, #8]
  45ee34:	ldr	x1, [x0, #64]
  45ee38:	ldr	x0, [sp, #8]
  45ee3c:	ldr	x0, [x0, #88]
  45ee40:	cmp	x1, x0
  45ee44:	csel	x0, x1, x0, le
  45ee48:	str	x0, [sp, #32]
  45ee4c:	ldr	x0, [sp, #8]
  45ee50:	ldr	x0, [x0, #48]
  45ee54:	str	x0, [sp, #40]
  45ee58:	b	45eeb4 <_obstack_memory_used@@Base+0x1d74>
  45ee5c:	ldr	x0, [sp, #8]
  45ee60:	ldr	x0, [x0]
  45ee64:	ldr	x1, [sp, #8]
  45ee68:	ldr	x2, [x1, #40]
  45ee6c:	ldr	x1, [sp, #40]
  45ee70:	add	x1, x2, x1
  45ee74:	add	x0, x0, x1
  45ee78:	ldrb	w0, [x0]
  45ee7c:	str	w0, [sp, #28]
  45ee80:	ldr	x0, [sp, #8]
  45ee84:	ldr	x1, [x0, #120]
  45ee88:	ldrsw	x0, [sp, #28]
  45ee8c:	add	x1, x1, x0
  45ee90:	ldr	x0, [sp, #8]
  45ee94:	ldr	x2, [x0, #8]
  45ee98:	ldr	x0, [sp, #40]
  45ee9c:	add	x0, x2, x0
  45eea0:	ldrb	w1, [x1]
  45eea4:	strb	w1, [x0]
  45eea8:	ldr	x0, [sp, #40]
  45eeac:	add	x0, x0, #0x1
  45eeb0:	str	x0, [sp, #40]
  45eeb4:	ldr	x1, [sp, #40]
  45eeb8:	ldr	x0, [sp, #32]
  45eebc:	cmp	x1, x0
  45eec0:	b.lt	45ee5c <_obstack_memory_used@@Base+0x1d1c>  // b.tstop
  45eec4:	ldr	x0, [sp, #8]
  45eec8:	ldr	x1, [sp, #40]
  45eecc:	str	x1, [x0, #48]
  45eed0:	ldr	x0, [sp, #8]
  45eed4:	ldr	x1, [sp, #40]
  45eed8:	str	x1, [x0, #56]
  45eedc:	nop
  45eee0:	add	sp, sp, #0x30
  45eee4:	ret
  45eee8:	stp	x29, x30, [sp, #-192]!
  45eeec:	mov	x29, sp
  45eef0:	str	x0, [sp, #40]
  45eef4:	str	x1, [sp, #32]
  45eef8:	str	w2, [sp, #28]
  45eefc:	ldr	x0, [sp, #40]
  45ef00:	ldr	x0, [x0, #40]
  45ef04:	ldr	x1, [sp, #32]
  45ef08:	cmp	x1, x0
  45ef0c:	cset	w0, ge  // ge = tcont
  45ef10:	and	w0, w0, #0xff
  45ef14:	and	x0, x0, #0xff
  45ef18:	cmp	x0, #0x0
  45ef1c:	b.eq	45ef38 <_obstack_memory_used@@Base+0x1df8>  // b.none
  45ef20:	ldr	x0, [sp, #40]
  45ef24:	ldr	x0, [x0, #40]
  45ef28:	ldr	x1, [sp, #32]
  45ef2c:	sub	x0, x1, x0
  45ef30:	str	x0, [sp, #184]
  45ef34:	b	45efe8 <_obstack_memory_used@@Base+0x1ea8>
  45ef38:	ldr	x0, [sp, #40]
  45ef3c:	ldr	w0, [x0, #144]
  45ef40:	cmp	w0, #0x1
  45ef44:	b.le	45ef5c <_obstack_memory_used@@Base+0x1e1c>
  45ef48:	ldr	x0, [sp, #40]
  45ef4c:	add	x0, x0, #0x20
  45ef50:	mov	x2, #0x8                   	// #8
  45ef54:	mov	w1, #0x0                   	// #0
  45ef58:	bl	4044d0 <memset@plt>
  45ef5c:	ldr	x0, [sp, #40]
  45ef60:	ldr	x1, [x0, #80]
  45ef64:	ldr	x0, [sp, #40]
  45ef68:	str	x1, [x0, #88]
  45ef6c:	ldr	x0, [sp, #40]
  45ef70:	ldr	x1, [x0, #96]
  45ef74:	ldr	x0, [sp, #40]
  45ef78:	str	x1, [x0, #104]
  45ef7c:	ldr	x0, [sp, #40]
  45ef80:	str	xzr, [x0, #48]
  45ef84:	ldr	x0, [sp, #40]
  45ef88:	str	xzr, [x0, #40]
  45ef8c:	ldr	x0, [sp, #40]
  45ef90:	str	xzr, [x0, #56]
  45ef94:	ldr	x0, [sp, #40]
  45ef98:	strb	wzr, [x0, #140]
  45ef9c:	ldr	w0, [sp, #28]
  45efa0:	and	w0, w0, #0x1
  45efa4:	cmp	w0, #0x0
  45efa8:	b.eq	45efb4 <_obstack_memory_used@@Base+0x1e74>  // b.none
  45efac:	mov	w0, #0x4                   	// #4
  45efb0:	b	45efb8 <_obstack_memory_used@@Base+0x1e78>
  45efb4:	mov	w0, #0x6                   	// #6
  45efb8:	ldr	x1, [sp, #40]
  45efbc:	str	w0, [x1, #112]
  45efc0:	ldr	x0, [sp, #40]
  45efc4:	ldrb	w0, [x0, #139]
  45efc8:	cmp	w0, #0x0
  45efcc:	b.ne	45efe0 <_obstack_memory_used@@Base+0x1ea0>  // b.any
  45efd0:	ldr	x0, [sp, #40]
  45efd4:	ldr	x1, [x0]
  45efd8:	ldr	x0, [sp, #40]
  45efdc:	str	x1, [x0, #8]
  45efe0:	ldr	x0, [sp, #32]
  45efe4:	str	x0, [sp, #184]
  45efe8:	ldr	x0, [sp, #184]
  45efec:	cmp	x0, #0x0
  45eff0:	cset	w0, ne  // ne = any
  45eff4:	and	w0, w0, #0xff
  45eff8:	and	x0, x0, #0xff
  45effc:	cmp	x0, #0x0
  45f000:	b.eq	45fa1c <_obstack_memory_used@@Base+0x28dc>  // b.none
  45f004:	ldr	x0, [sp, #40]
  45f008:	ldr	x0, [x0, #56]
  45f00c:	ldr	x1, [sp, #184]
  45f010:	cmp	x1, x0
  45f014:	cset	w0, lt  // lt = tstop
  45f018:	and	w0, w0, #0xff
  45f01c:	and	x0, x0, #0xff
  45f020:	cmp	x0, #0x0
  45f024:	b.eq	45f52c <_obstack_memory_used@@Base+0x23ec>  // b.none
  45f028:	ldr	x0, [sp, #40]
  45f02c:	ldrb	w0, [x0, #140]
  45f030:	and	x0, x0, #0xff
  45f034:	cmp	x0, #0x0
  45f038:	b.eq	45f438 <_obstack_memory_used@@Base+0x22f8>  // b.none
  45f03c:	str	xzr, [sp, #176]
  45f040:	ldr	x0, [sp, #40]
  45f044:	ldr	x0, [x0, #48]
  45f048:	str	x0, [sp, #168]
  45f04c:	ldr	x1, [sp, #168]
  45f050:	ldr	x0, [sp, #176]
  45f054:	add	x0, x1, x0
  45f058:	lsr	x1, x0, #63
  45f05c:	add	x0, x1, x0
  45f060:	asr	x0, x0, #1
  45f064:	str	x0, [sp, #160]
  45f068:	ldr	x0, [sp, #40]
  45f06c:	ldr	x1, [x0, #24]
  45f070:	ldr	x0, [sp, #160]
  45f074:	lsl	x0, x0, #3
  45f078:	add	x0, x1, x0
  45f07c:	ldr	x0, [x0]
  45f080:	ldr	x1, [sp, #184]
  45f084:	cmp	x1, x0
  45f088:	b.ge	45f098 <_obstack_memory_used@@Base+0x1f58>  // b.tcont
  45f08c:	ldr	x0, [sp, #160]
  45f090:	str	x0, [sp, #168]
  45f094:	b	45f0c8 <_obstack_memory_used@@Base+0x1f88>
  45f098:	ldr	x0, [sp, #40]
  45f09c:	ldr	x1, [x0, #24]
  45f0a0:	ldr	x0, [sp, #160]
  45f0a4:	lsl	x0, x0, #3
  45f0a8:	add	x0, x1, x0
  45f0ac:	ldr	x0, [x0]
  45f0b0:	ldr	x1, [sp, #184]
  45f0b4:	cmp	x1, x0
  45f0b8:	b.le	45f0dc <_obstack_memory_used@@Base+0x1f9c>
  45f0bc:	ldr	x0, [sp, #160]
  45f0c0:	add	x0, x0, #0x1
  45f0c4:	str	x0, [sp, #176]
  45f0c8:	ldr	x1, [sp, #176]
  45f0cc:	ldr	x0, [sp, #168]
  45f0d0:	cmp	x1, x0
  45f0d4:	b.lt	45f04c <_obstack_memory_used@@Base+0x1f0c>  // b.tstop
  45f0d8:	b	45f0e0 <_obstack_memory_used@@Base+0x1fa0>
  45f0dc:	nop
  45f0e0:	ldr	x0, [sp, #40]
  45f0e4:	ldr	x1, [x0, #24]
  45f0e8:	ldr	x0, [sp, #160]
  45f0ec:	lsl	x0, x0, #3
  45f0f0:	add	x0, x1, x0
  45f0f4:	ldr	x0, [x0]
  45f0f8:	ldr	x1, [sp, #184]
  45f0fc:	cmp	x1, x0
  45f100:	b.le	45f110 <_obstack_memory_used@@Base+0x1fd0>
  45f104:	ldr	x0, [sp, #160]
  45f108:	add	x0, x0, #0x1
  45f10c:	str	x0, [sp, #160]
  45f110:	ldr	x0, [sp, #160]
  45f114:	sub	x0, x0, #0x1
  45f118:	ldr	w2, [sp, #28]
  45f11c:	mov	x1, x0
  45f120:	ldr	x0, [sp, #40]
  45f124:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  45f128:	mov	w1, w0
  45f12c:	ldr	x0, [sp, #40]
  45f130:	str	w1, [x0, #112]
  45f134:	ldr	x0, [sp, #40]
  45f138:	ldr	x0, [x0, #48]
  45f13c:	ldr	x1, [sp, #184]
  45f140:	cmp	x1, x0
  45f144:	b.ge	45f290 <_obstack_memory_used@@Base+0x2150>  // b.tcont
  45f148:	ldr	x1, [sp, #160]
  45f14c:	ldr	x0, [sp, #184]
  45f150:	cmp	x1, x0
  45f154:	b.ne	45f290 <_obstack_memory_used@@Base+0x2150>  // b.any
  45f158:	ldr	x0, [sp, #40]
  45f15c:	ldr	x1, [x0, #24]
  45f160:	ldr	x0, [sp, #160]
  45f164:	lsl	x0, x0, #3
  45f168:	add	x0, x1, x0
  45f16c:	ldr	x0, [x0]
  45f170:	ldr	x1, [sp, #184]
  45f174:	cmp	x1, x0
  45f178:	b.ne	45f290 <_obstack_memory_used@@Base+0x2150>  // b.any
  45f17c:	ldr	x0, [sp, #40]
  45f180:	ldr	x3, [x0, #16]
  45f184:	ldr	x0, [sp, #40]
  45f188:	ldr	x1, [x0, #16]
  45f18c:	ldr	x0, [sp, #184]
  45f190:	lsl	x0, x0, #2
  45f194:	add	x4, x1, x0
  45f198:	ldr	x0, [sp, #40]
  45f19c:	ldr	x1, [x0, #48]
  45f1a0:	ldr	x0, [sp, #184]
  45f1a4:	sub	x0, x1, x0
  45f1a8:	lsl	x0, x0, #2
  45f1ac:	mov	x2, x0
  45f1b0:	mov	x1, x4
  45f1b4:	mov	x0, x3
  45f1b8:	bl	404030 <memmove@plt>
  45f1bc:	ldr	x0, [sp, #40]
  45f1c0:	ldr	x3, [x0, #8]
  45f1c4:	ldr	x0, [sp, #40]
  45f1c8:	ldr	x1, [x0, #8]
  45f1cc:	ldr	x0, [sp, #184]
  45f1d0:	add	x4, x1, x0
  45f1d4:	ldr	x0, [sp, #40]
  45f1d8:	ldr	x1, [x0, #48]
  45f1dc:	ldr	x0, [sp, #184]
  45f1e0:	sub	x0, x1, x0
  45f1e4:	mov	x2, x0
  45f1e8:	mov	x1, x4
  45f1ec:	mov	x0, x3
  45f1f0:	bl	404030 <memmove@plt>
  45f1f4:	ldr	x0, [sp, #40]
  45f1f8:	ldr	x1, [x0, #48]
  45f1fc:	ldr	x0, [sp, #184]
  45f200:	sub	x1, x1, x0
  45f204:	ldr	x0, [sp, #40]
  45f208:	str	x1, [x0, #48]
  45f20c:	ldr	x0, [sp, #40]
  45f210:	ldr	x1, [x0, #56]
  45f214:	ldr	x0, [sp, #184]
  45f218:	sub	x1, x1, x0
  45f21c:	ldr	x0, [sp, #40]
  45f220:	str	x1, [x0, #56]
  45f224:	str	xzr, [sp, #176]
  45f228:	b	45f278 <_obstack_memory_used@@Base+0x2138>
  45f22c:	ldr	x0, [sp, #40]
  45f230:	ldr	x1, [x0, #24]
  45f234:	ldr	x2, [sp, #176]
  45f238:	ldr	x0, [sp, #184]
  45f23c:	add	x0, x2, x0
  45f240:	lsl	x0, x0, #3
  45f244:	add	x0, x1, x0
  45f248:	ldr	x2, [x0]
  45f24c:	ldr	x0, [sp, #40]
  45f250:	ldr	x1, [x0, #24]
  45f254:	ldr	x0, [sp, #176]
  45f258:	lsl	x0, x0, #3
  45f25c:	add	x0, x1, x0
  45f260:	ldr	x1, [sp, #184]
  45f264:	sub	x1, x2, x1
  45f268:	str	x1, [x0]
  45f26c:	ldr	x0, [sp, #176]
  45f270:	add	x0, x0, #0x1
  45f274:	str	x0, [sp, #176]
  45f278:	ldr	x0, [sp, #40]
  45f27c:	ldr	x0, [x0, #48]
  45f280:	ldr	x1, [sp, #176]
  45f284:	cmp	x1, x0
  45f288:	b.lt	45f22c <_obstack_memory_used@@Base+0x20ec>  // b.tstop
  45f28c:	b	45f9f0 <_obstack_memory_used@@Base+0x28b0>
  45f290:	ldr	x0, [sp, #40]
  45f294:	ldr	x1, [x0, #80]
  45f298:	ldr	x0, [sp, #32]
  45f29c:	sub	x1, x1, x0
  45f2a0:	ldr	x0, [sp, #184]
  45f2a4:	add	x1, x1, x0
  45f2a8:	ldr	x0, [sp, #40]
  45f2ac:	str	x1, [x0, #88]
  45f2b0:	ldr	x0, [sp, #40]
  45f2b4:	ldr	x1, [x0, #96]
  45f2b8:	ldr	x0, [sp, #32]
  45f2bc:	sub	x1, x1, x0
  45f2c0:	ldr	x0, [sp, #184]
  45f2c4:	add	x1, x1, x0
  45f2c8:	ldr	x0, [sp, #40]
  45f2cc:	str	x1, [x0, #104]
  45f2d0:	ldr	x0, [sp, #40]
  45f2d4:	strb	wzr, [x0, #140]
  45f2d8:	b	45f2e8 <_obstack_memory_used@@Base+0x21a8>
  45f2dc:	ldr	x0, [sp, #160]
  45f2e0:	sub	x0, x0, #0x1
  45f2e4:	str	x0, [sp, #160]
  45f2e8:	ldr	x0, [sp, #160]
  45f2ec:	cmp	x0, #0x0
  45f2f0:	b.le	45f34c <_obstack_memory_used@@Base+0x220c>
  45f2f4:	ldr	x0, [sp, #40]
  45f2f8:	ldr	x1, [x0, #24]
  45f2fc:	ldr	x0, [sp, #160]
  45f300:	lsl	x0, x0, #3
  45f304:	sub	x0, x0, #0x8
  45f308:	add	x0, x1, x0
  45f30c:	ldr	x0, [x0]
  45f310:	ldr	x1, [sp, #184]
  45f314:	cmp	x1, x0
  45f318:	b.eq	45f2dc <_obstack_memory_used@@Base+0x219c>  // b.none
  45f31c:	b	45f34c <_obstack_memory_used@@Base+0x220c>
  45f320:	ldr	x0, [sp, #40]
  45f324:	ldr	x1, [x0, #16]
  45f328:	ldr	x0, [sp, #160]
  45f32c:	lsl	x0, x0, #2
  45f330:	add	x0, x1, x0
  45f334:	ldr	w0, [x0]
  45f338:	cmn	w0, #0x1
  45f33c:	b.ne	45f364 <_obstack_memory_used@@Base+0x2224>  // b.any
  45f340:	ldr	x0, [sp, #160]
  45f344:	add	x0, x0, #0x1
  45f348:	str	x0, [sp, #160]
  45f34c:	ldr	x0, [sp, #40]
  45f350:	ldr	x0, [x0, #48]
  45f354:	ldr	x1, [sp, #160]
  45f358:	cmp	x1, x0
  45f35c:	b.lt	45f320 <_obstack_memory_used@@Base+0x21e0>  // b.tstop
  45f360:	b	45f368 <_obstack_memory_used@@Base+0x2228>
  45f364:	nop
  45f368:	ldr	x0, [sp, #40]
  45f36c:	ldr	x0, [x0, #48]
  45f370:	ldr	x1, [sp, #160]
  45f374:	cmp	x1, x0
  45f378:	b.ne	45f388 <_obstack_memory_used@@Base+0x2248>  // b.any
  45f37c:	ldr	x0, [sp, #40]
  45f380:	str	xzr, [x0, #48]
  45f384:	b	45f424 <_obstack_memory_used@@Base+0x22e4>
  45f388:	ldr	x0, [sp, #40]
  45f38c:	ldr	x1, [x0, #24]
  45f390:	ldr	x0, [sp, #160]
  45f394:	lsl	x0, x0, #3
  45f398:	add	x0, x1, x0
  45f39c:	ldr	x1, [x0]
  45f3a0:	ldr	x0, [sp, #184]
  45f3a4:	sub	x1, x1, x0
  45f3a8:	ldr	x0, [sp, #40]
  45f3ac:	str	x1, [x0, #48]
  45f3b0:	ldr	x0, [sp, #40]
  45f3b4:	ldr	x0, [x0, #48]
  45f3b8:	cmp	x0, #0x0
  45f3bc:	b.eq	45f424 <_obstack_memory_used@@Base+0x22e4>  // b.none
  45f3c0:	str	xzr, [sp, #176]
  45f3c4:	b	45f3f0 <_obstack_memory_used@@Base+0x22b0>
  45f3c8:	ldr	x0, [sp, #40]
  45f3cc:	ldr	x1, [x0, #16]
  45f3d0:	ldr	x0, [sp, #176]
  45f3d4:	lsl	x0, x0, #2
  45f3d8:	add	x0, x1, x0
  45f3dc:	mov	w1, #0xffffffff            	// #-1
  45f3e0:	str	w1, [x0]
  45f3e4:	ldr	x0, [sp, #176]
  45f3e8:	add	x0, x0, #0x1
  45f3ec:	str	x0, [sp, #176]
  45f3f0:	ldr	x0, [sp, #40]
  45f3f4:	ldr	x0, [x0, #48]
  45f3f8:	ldr	x1, [sp, #176]
  45f3fc:	cmp	x1, x0
  45f400:	b.lt	45f3c8 <_obstack_memory_used@@Base+0x2288>  // b.tstop
  45f404:	ldr	x0, [sp, #40]
  45f408:	ldr	x3, [x0, #8]
  45f40c:	ldr	x0, [sp, #40]
  45f410:	ldr	x0, [x0, #48]
  45f414:	mov	x2, x0
  45f418:	mov	w1, #0xff                  	// #255
  45f41c:	mov	x0, x3
  45f420:	bl	4044d0 <memset@plt>
  45f424:	ldr	x0, [sp, #40]
  45f428:	ldr	x1, [x0, #48]
  45f42c:	ldr	x0, [sp, #40]
  45f430:	str	x1, [x0, #56]
  45f434:	b	45f9f0 <_obstack_memory_used@@Base+0x28b0>
  45f438:	ldr	x0, [sp, #184]
  45f43c:	sub	x0, x0, #0x1
  45f440:	ldr	w2, [sp, #28]
  45f444:	mov	x1, x0
  45f448:	ldr	x0, [sp, #40]
  45f44c:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  45f450:	mov	w1, w0
  45f454:	ldr	x0, [sp, #40]
  45f458:	str	w1, [x0, #112]
  45f45c:	ldr	x0, [sp, #40]
  45f460:	ldr	w0, [x0, #144]
  45f464:	cmp	w0, #0x1
  45f468:	b.le	45f4ac <_obstack_memory_used@@Base+0x236c>
  45f46c:	ldr	x0, [sp, #40]
  45f470:	ldr	x3, [x0, #16]
  45f474:	ldr	x0, [sp, #40]
  45f478:	ldr	x1, [x0, #16]
  45f47c:	ldr	x0, [sp, #184]
  45f480:	lsl	x0, x0, #2
  45f484:	add	x4, x1, x0
  45f488:	ldr	x0, [sp, #40]
  45f48c:	ldr	x1, [x0, #48]
  45f490:	ldr	x0, [sp, #184]
  45f494:	sub	x0, x1, x0
  45f498:	lsl	x0, x0, #2
  45f49c:	mov	x2, x0
  45f4a0:	mov	x1, x4
  45f4a4:	mov	x0, x3
  45f4a8:	bl	404030 <memmove@plt>
  45f4ac:	ldr	x0, [sp, #40]
  45f4b0:	ldrb	w0, [x0, #139]
  45f4b4:	and	x0, x0, #0xff
  45f4b8:	cmp	x0, #0x0
  45f4bc:	b.eq	45f4f8 <_obstack_memory_used@@Base+0x23b8>  // b.none
  45f4c0:	ldr	x0, [sp, #40]
  45f4c4:	ldr	x3, [x0, #8]
  45f4c8:	ldr	x0, [sp, #40]
  45f4cc:	ldr	x1, [x0, #8]
  45f4d0:	ldr	x0, [sp, #184]
  45f4d4:	add	x4, x1, x0
  45f4d8:	ldr	x0, [sp, #40]
  45f4dc:	ldr	x1, [x0, #48]
  45f4e0:	ldr	x0, [sp, #184]
  45f4e4:	sub	x0, x1, x0
  45f4e8:	mov	x2, x0
  45f4ec:	mov	x1, x4
  45f4f0:	mov	x0, x3
  45f4f4:	bl	404030 <memmove@plt>
  45f4f8:	ldr	x0, [sp, #40]
  45f4fc:	ldr	x1, [x0, #48]
  45f500:	ldr	x0, [sp, #184]
  45f504:	sub	x1, x1, x0
  45f508:	ldr	x0, [sp, #40]
  45f50c:	str	x1, [x0, #48]
  45f510:	ldr	x0, [sp, #40]
  45f514:	ldr	x1, [x0, #56]
  45f518:	ldr	x0, [sp, #184]
  45f51c:	sub	x1, x1, x0
  45f520:	ldr	x0, [sp, #40]
  45f524:	str	x1, [x0, #56]
  45f528:	b	45f9f0 <_obstack_memory_used@@Base+0x28b0>
  45f52c:	ldr	x0, [sp, #40]
  45f530:	ldr	x0, [x0, #48]
  45f534:	str	x0, [sp, #112]
  45f538:	ldr	x0, [sp, #40]
  45f53c:	ldrb	w0, [x0, #140]
  45f540:	and	x0, x0, #0xff
  45f544:	cmp	x0, #0x0
  45f548:	b.eq	45f594 <_obstack_memory_used@@Base+0x2454>  // b.none
  45f54c:	ldr	x0, [sp, #40]
  45f550:	ldr	x1, [x0, #80]
  45f554:	ldr	x0, [sp, #32]
  45f558:	sub	x1, x1, x0
  45f55c:	ldr	x0, [sp, #184]
  45f560:	add	x1, x1, x0
  45f564:	ldr	x0, [sp, #40]
  45f568:	str	x1, [x0, #88]
  45f56c:	ldr	x0, [sp, #40]
  45f570:	ldr	x1, [x0, #96]
  45f574:	ldr	x0, [sp, #32]
  45f578:	sub	x1, x1, x0
  45f57c:	ldr	x0, [sp, #184]
  45f580:	add	x1, x1, x0
  45f584:	ldr	x0, [sp, #40]
  45f588:	str	x1, [x0, #104]
  45f58c:	ldr	x0, [sp, #40]
  45f590:	strb	wzr, [x0, #140]
  45f594:	ldr	x0, [sp, #40]
  45f598:	str	xzr, [x0, #48]
  45f59c:	ldr	x0, [sp, #40]
  45f5a0:	ldr	w0, [x0, #144]
  45f5a4:	cmp	w0, #0x1
  45f5a8:	b.le	45f944 <_obstack_memory_used@@Base+0x2804>
  45f5ac:	mov	w0, #0xffffffff            	// #-1
  45f5b0:	str	w0, [sp, #80]
  45f5b4:	ldr	x0, [sp, #40]
  45f5b8:	ldrb	w0, [x0, #137]
  45f5bc:	cmp	w0, #0x0
  45f5c0:	b.eq	45f7d0 <_obstack_memory_used@@Base+0x2690>  // b.none
  45f5c4:	ldr	x0, [sp, #40]
  45f5c8:	ldr	x0, [x0]
  45f5cc:	ldr	x1, [sp, #40]
  45f5d0:	ldr	x1, [x1, #40]
  45f5d4:	add	x0, x0, x1
  45f5d8:	str	x0, [sp, #104]
  45f5dc:	ldr	x0, [sp, #40]
  45f5e0:	ldr	w0, [x0, #144]
  45f5e4:	sxtw	x0, w0
  45f5e8:	ldr	x1, [sp, #184]
  45f5ec:	sub	x0, x1, x0
  45f5f0:	mov	x1, x0
  45f5f4:	ldr	x0, [sp, #104]
  45f5f8:	add	x0, x0, x1
  45f5fc:	str	x0, [sp, #136]
  45f600:	ldr	x0, [sp, #40]
  45f604:	ldr	x0, [x0]
  45f608:	ldr	x1, [sp, #136]
  45f60c:	cmp	x1, x0
  45f610:	b.cs	45f620 <_obstack_memory_used@@Base+0x24e0>  // b.hs, b.nlast
  45f614:	ldr	x0, [sp, #40]
  45f618:	ldr	x0, [x0]
  45f61c:	str	x0, [sp, #136]
  45f620:	ldr	x0, [sp, #184]
  45f624:	sub	x0, x0, #0x1
  45f628:	ldr	x1, [sp, #104]
  45f62c:	add	x0, x1, x0
  45f630:	str	x0, [sp, #144]
  45f634:	b	45f7b8 <_obstack_memory_used@@Base+0x2678>
  45f638:	ldr	x0, [sp, #144]
  45f63c:	ldrb	w0, [x0]
  45f640:	and	w0, w0, #0xc0
  45f644:	cmp	w0, #0x80
  45f648:	b.eq	45f7ac <_obstack_memory_used@@Base+0x266c>  // b.none
  45f64c:	ldr	x0, [sp, #40]
  45f650:	ldr	x0, [x0, #88]
  45f654:	mov	x1, x0
  45f658:	ldr	x0, [sp, #104]
  45f65c:	add	x1, x0, x1
  45f660:	ldr	x0, [sp, #144]
  45f664:	sub	x0, x1, x0
  45f668:	str	x0, [sp, #96]
  45f66c:	ldr	x0, [sp, #144]
  45f670:	str	x0, [sp, #128]
  45f674:	ldr	x0, [sp, #40]
  45f678:	ldr	x0, [x0, #120]
  45f67c:	cmp	x0, #0x0
  45f680:	cset	w0, ne  // ne = any
  45f684:	and	w0, w0, #0xff
  45f688:	and	x0, x0, #0xff
  45f68c:	cmp	x0, #0x0
  45f690:	b.eq	45f700 <_obstack_memory_used@@Base+0x25c0>  // b.none
  45f694:	ldr	x2, [sp, #96]
  45f698:	ldr	x1, [sp, #96]
  45f69c:	mov	x0, #0x6                   	// #6
  45f6a0:	cmp	x2, #0x6
  45f6a4:	csel	x0, x1, x0, le
  45f6a8:	str	w0, [sp, #124]
  45f6ac:	b	45f6e0 <_obstack_memory_used@@Base+0x25a0>
  45f6b0:	ldr	x0, [sp, #40]
  45f6b4:	ldr	x1, [x0, #120]
  45f6b8:	ldrsw	x0, [sp, #124]
  45f6bc:	ldr	x2, [sp, #144]
  45f6c0:	add	x0, x2, x0
  45f6c4:	ldrb	w0, [x0]
  45f6c8:	and	x0, x0, #0xff
  45f6cc:	add	x0, x1, x0
  45f6d0:	ldrb	w2, [x0]
  45f6d4:	ldrsw	x0, [sp, #124]
  45f6d8:	add	x1, sp, #0x38
  45f6dc:	strb	w2, [x1, x0]
  45f6e0:	ldr	w0, [sp, #124]
  45f6e4:	sub	w0, w0, #0x1
  45f6e8:	str	w0, [sp, #124]
  45f6ec:	ldr	w0, [sp, #124]
  45f6f0:	cmp	w0, #0x0
  45f6f4:	b.ge	45f6b0 <_obstack_memory_used@@Base+0x2570>  // b.tcont
  45f6f8:	add	x0, sp, #0x38
  45f6fc:	str	x0, [sp, #128]
  45f700:	add	x0, sp, #0x48
  45f704:	mov	x2, #0x8                   	// #8
  45f708:	mov	w1, #0x0                   	// #0
  45f70c:	bl	4044d0 <memset@plt>
  45f710:	ldr	x1, [sp, #96]
  45f714:	add	x2, sp, #0x48
  45f718:	add	x0, sp, #0x44
  45f71c:	mov	x3, x2
  45f720:	mov	x2, x1
  45f724:	ldr	x1, [sp, #128]
  45f728:	bl	45ca48 <argp_usage@@Base+0x1395c>
  45f72c:	str	x0, [sp, #88]
  45f730:	ldr	x0, [sp, #184]
  45f734:	ldr	x1, [sp, #104]
  45f738:	add	x1, x1, x0
  45f73c:	ldr	x0, [sp, #144]
  45f740:	sub	x0, x1, x0
  45f744:	mov	x1, x0
  45f748:	ldr	x0, [sp, #88]
  45f74c:	cmp	x0, x1
  45f750:	b.cc	45f7cc <_obstack_memory_used@@Base+0x268c>  // b.lo, b.ul, b.last
  45f754:	ldr	x0, [sp, #88]
  45f758:	cmn	x0, #0x3
  45f75c:	b.hi	45f7cc <_obstack_memory_used@@Base+0x268c>  // b.pmore
  45f760:	ldr	x0, [sp, #40]
  45f764:	add	x0, x0, #0x20
  45f768:	mov	x2, #0x8                   	// #8
  45f76c:	mov	w1, #0x0                   	// #0
  45f770:	bl	4044d0 <memset@plt>
  45f774:	ldr	x0, [sp, #184]
  45f778:	ldr	x1, [sp, #104]
  45f77c:	add	x1, x1, x0
  45f780:	ldr	x0, [sp, #144]
  45f784:	sub	x0, x1, x0
  45f788:	mov	x1, x0
  45f78c:	ldr	x0, [sp, #88]
  45f790:	sub	x0, x0, x1
  45f794:	mov	x1, x0
  45f798:	ldr	x0, [sp, #40]
  45f79c:	str	x1, [x0, #48]
  45f7a0:	ldr	w0, [sp, #68]
  45f7a4:	str	w0, [sp, #80]
  45f7a8:	b	45f7cc <_obstack_memory_used@@Base+0x268c>
  45f7ac:	ldr	x0, [sp, #144]
  45f7b0:	sub	x0, x0, #0x1
  45f7b4:	str	x0, [sp, #144]
  45f7b8:	ldr	x1, [sp, #144]
  45f7bc:	ldr	x0, [sp, #136]
  45f7c0:	cmp	x1, x0
  45f7c4:	b.cs	45f638 <_obstack_memory_used@@Base+0x24f8>  // b.hs, b.nlast
  45f7c8:	b	45f7d0 <_obstack_memory_used@@Base+0x2690>
  45f7cc:	nop
  45f7d0:	ldr	w0, [sp, #80]
  45f7d4:	cmn	w0, #0x1
  45f7d8:	b.ne	45f804 <_obstack_memory_used@@Base+0x26c4>  // b.any
  45f7dc:	add	x0, sp, #0x50
  45f7e0:	mov	x2, x0
  45f7e4:	ldr	x1, [sp, #32]
  45f7e8:	ldr	x0, [sp, #40]
  45f7ec:	bl	45ebb8 <_obstack_memory_used@@Base+0x1a78>
  45f7f0:	mov	x1, x0
  45f7f4:	ldr	x0, [sp, #32]
  45f7f8:	sub	x1, x1, x0
  45f7fc:	ldr	x0, [sp, #40]
  45f800:	str	x1, [x0, #48]
  45f804:	ldr	w0, [sp, #80]
  45f808:	cmn	w0, #0x1
  45f80c:	b.ne	45f838 <_obstack_memory_used@@Base+0x26f8>  // b.any
  45f810:	ldr	x0, [sp, #112]
  45f814:	sub	x0, x0, #0x1
  45f818:	ldr	w2, [sp, #28]
  45f81c:	mov	x1, x0
  45f820:	ldr	x0, [sp, #40]
  45f824:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  45f828:	mov	w1, w0
  45f82c:	ldr	x0, [sp, #40]
  45f830:	str	w1, [x0, #112]
  45f834:	b	45f8ac <_obstack_memory_used@@Base+0x276c>
  45f838:	ldr	x0, [sp, #40]
  45f83c:	ldrb	w0, [x0, #142]
  45f840:	cmp	w0, #0x0
  45f844:	cset	w0, ne  // ne = any
  45f848:	and	w0, w0, #0xff
  45f84c:	and	x0, x0, #0xff
  45f850:	cmp	x0, #0x0
  45f854:	b.eq	45f874 <_obstack_memory_used@@Base+0x2734>  // b.none
  45f858:	ldr	w0, [sp, #80]
  45f85c:	bl	404a60 <iswalnum@plt>
  45f860:	cmp	w0, #0x0
  45f864:	b.ne	45f8a0 <_obstack_memory_used@@Base+0x2760>  // b.any
  45f868:	ldr	w0, [sp, #80]
  45f86c:	cmp	w0, #0x5f
  45f870:	b.eq	45f8a0 <_obstack_memory_used@@Base+0x2760>  // b.none
  45f874:	ldr	w0, [sp, #80]
  45f878:	cmp	w0, #0xa
  45f87c:	b.ne	45f898 <_obstack_memory_used@@Base+0x2758>  // b.any
  45f880:	ldr	x0, [sp, #40]
  45f884:	ldrb	w0, [x0, #141]
  45f888:	cmp	w0, #0x0
  45f88c:	b.eq	45f898 <_obstack_memory_used@@Base+0x2758>  // b.none
  45f890:	mov	w0, #0x2                   	// #2
  45f894:	b	45f8a4 <_obstack_memory_used@@Base+0x2764>
  45f898:	mov	w0, #0x0                   	// #0
  45f89c:	b	45f8a4 <_obstack_memory_used@@Base+0x2764>
  45f8a0:	mov	w0, #0x1                   	// #1
  45f8a4:	ldr	x1, [sp, #40]
  45f8a8:	str	w0, [x1, #112]
  45f8ac:	ldr	x0, [sp, #40]
  45f8b0:	ldr	x0, [x0, #48]
  45f8b4:	cmp	x0, #0x0
  45f8b8:	b.eq	45f930 <_obstack_memory_used@@Base+0x27f0>  // b.none
  45f8bc:	str	xzr, [sp, #152]
  45f8c0:	b	45f8ec <_obstack_memory_used@@Base+0x27ac>
  45f8c4:	ldr	x0, [sp, #40]
  45f8c8:	ldr	x1, [x0, #16]
  45f8cc:	ldr	x0, [sp, #152]
  45f8d0:	lsl	x0, x0, #2
  45f8d4:	add	x0, x1, x0
  45f8d8:	mov	w1, #0xffffffff            	// #-1
  45f8dc:	str	w1, [x0]
  45f8e0:	ldr	x0, [sp, #152]
  45f8e4:	add	x0, x0, #0x1
  45f8e8:	str	x0, [sp, #152]
  45f8ec:	ldr	x0, [sp, #40]
  45f8f0:	ldr	x0, [x0, #48]
  45f8f4:	ldr	x1, [sp, #152]
  45f8f8:	cmp	x1, x0
  45f8fc:	b.lt	45f8c4 <_obstack_memory_used@@Base+0x2784>  // b.tstop
  45f900:	ldr	x0, [sp, #40]
  45f904:	ldrb	w0, [x0, #139]
  45f908:	cmp	w0, #0x0
  45f90c:	b.eq	45f930 <_obstack_memory_used@@Base+0x27f0>  // b.none
  45f910:	ldr	x0, [sp, #40]
  45f914:	ldr	x3, [x0, #8]
  45f918:	ldr	x0, [sp, #40]
  45f91c:	ldr	x0, [x0, #48]
  45f920:	mov	x2, x0
  45f924:	mov	w1, #0xff                  	// #255
  45f928:	mov	x0, x3
  45f92c:	bl	4044d0 <memset@plt>
  45f930:	ldr	x0, [sp, #40]
  45f934:	ldr	x1, [x0, #48]
  45f938:	ldr	x0, [sp, #40]
  45f93c:	str	x1, [x0, #56]
  45f940:	b	45f9f0 <_obstack_memory_used@@Base+0x28b0>
  45f944:	ldr	x0, [sp, #40]
  45f948:	ldr	x1, [x0]
  45f94c:	ldr	x0, [sp, #40]
  45f950:	ldr	x2, [x0, #40]
  45f954:	ldr	x0, [sp, #184]
  45f958:	add	x0, x2, x0
  45f95c:	sub	x0, x0, #0x1
  45f960:	add	x0, x1, x0
  45f964:	ldrb	w0, [x0]
  45f968:	str	w0, [sp, #120]
  45f96c:	ldr	x0, [sp, #40]
  45f970:	str	xzr, [x0, #56]
  45f974:	ldr	x0, [sp, #40]
  45f978:	ldr	x0, [x0, #120]
  45f97c:	cmp	x0, #0x0
  45f980:	b.eq	45f99c <_obstack_memory_used@@Base+0x285c>  // b.none
  45f984:	ldr	x0, [sp, #40]
  45f988:	ldr	x1, [x0, #120]
  45f98c:	ldrsw	x0, [sp, #120]
  45f990:	add	x0, x1, x0
  45f994:	ldrb	w0, [x0]
  45f998:	str	w0, [sp, #120]
  45f99c:	ldr	x0, [sp, #40]
  45f9a0:	ldr	x0, [x0, #128]
  45f9a4:	ldrsw	x1, [sp, #120]
  45f9a8:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  45f9ac:	and	w0, w0, #0xff
  45f9b0:	cmp	w0, #0x0
  45f9b4:	b.ne	45f9e4 <_obstack_memory_used@@Base+0x28a4>  // b.any
  45f9b8:	ldr	w0, [sp, #120]
  45f9bc:	cmp	w0, #0xa
  45f9c0:	b.ne	45f9dc <_obstack_memory_used@@Base+0x289c>  // b.any
  45f9c4:	ldr	x0, [sp, #40]
  45f9c8:	ldrb	w0, [x0, #141]
  45f9cc:	cmp	w0, #0x0
  45f9d0:	b.eq	45f9dc <_obstack_memory_used@@Base+0x289c>  // b.none
  45f9d4:	mov	w0, #0x2                   	// #2
  45f9d8:	b	45f9e8 <_obstack_memory_used@@Base+0x28a8>
  45f9dc:	mov	w0, #0x0                   	// #0
  45f9e0:	b	45f9e8 <_obstack_memory_used@@Base+0x28a8>
  45f9e4:	mov	w0, #0x1                   	// #1
  45f9e8:	ldr	x1, [sp, #40]
  45f9ec:	str	w0, [x1, #112]
  45f9f0:	ldr	x0, [sp, #40]
  45f9f4:	ldrb	w0, [x0, #139]
  45f9f8:	and	x0, x0, #0xff
  45f9fc:	cmp	x0, #0x0
  45fa00:	b.ne	45fa1c <_obstack_memory_used@@Base+0x28dc>  // b.any
  45fa04:	ldr	x0, [sp, #40]
  45fa08:	ldr	x1, [x0, #8]
  45fa0c:	ldr	x0, [sp, #184]
  45fa10:	add	x1, x1, x0
  45fa14:	ldr	x0, [sp, #40]
  45fa18:	str	x1, [x0, #8]
  45fa1c:	ldr	x0, [sp, #40]
  45fa20:	ldr	x1, [sp, #32]
  45fa24:	str	x1, [x0, #40]
  45fa28:	ldr	x0, [sp, #40]
  45fa2c:	ldr	x1, [x0, #88]
  45fa30:	ldr	x0, [sp, #184]
  45fa34:	sub	x1, x1, x0
  45fa38:	ldr	x0, [sp, #40]
  45fa3c:	str	x1, [x0, #88]
  45fa40:	ldr	x0, [sp, #40]
  45fa44:	ldr	x1, [x0, #104]
  45fa48:	ldr	x0, [sp, #184]
  45fa4c:	sub	x1, x1, x0
  45fa50:	ldr	x0, [sp, #40]
  45fa54:	str	x1, [x0, #104]
  45fa58:	ldr	x0, [sp, #40]
  45fa5c:	ldr	w0, [x0, #144]
  45fa60:	cmp	w0, #0x1
  45fa64:	b.le	45fab4 <_obstack_memory_used@@Base+0x2974>
  45fa68:	ldr	x0, [sp, #40]
  45fa6c:	ldrb	w0, [x0, #136]
  45fa70:	cmp	w0, #0x0
  45fa74:	b.eq	45faa8 <_obstack_memory_used@@Base+0x2968>  // b.none
  45fa78:	ldr	x0, [sp, #40]
  45fa7c:	bl	45e0bc <_obstack_memory_used@@Base+0xf7c>
  45fa80:	str	w0, [sp, #84]
  45fa84:	ldr	w0, [sp, #84]
  45fa88:	cmp	w0, #0x0
  45fa8c:	cset	w0, ne  // ne = any
  45fa90:	and	w0, w0, #0xff
  45fa94:	and	x0, x0, #0xff
  45fa98:	cmp	x0, #0x0
  45fa9c:	b.eq	45fb10 <_obstack_memory_used@@Base+0x29d0>  // b.none
  45faa0:	ldr	w0, [sp, #84]
  45faa4:	b	45fb1c <_obstack_memory_used@@Base+0x29dc>
  45faa8:	ldr	x0, [sp, #40]
  45faac:	bl	45dd64 <_obstack_memory_used@@Base+0xc24>
  45fab0:	b	45fb10 <_obstack_memory_used@@Base+0x29d0>
  45fab4:	ldr	x0, [sp, #40]
  45fab8:	ldrb	w0, [x0, #139]
  45fabc:	and	x0, x0, #0xff
  45fac0:	cmp	x0, #0x0
  45fac4:	b.eq	45fb00 <_obstack_memory_used@@Base+0x29c0>  // b.none
  45fac8:	ldr	x0, [sp, #40]
  45facc:	ldrb	w0, [x0, #136]
  45fad0:	cmp	w0, #0x0
  45fad4:	b.eq	45fae4 <_obstack_memory_used@@Base+0x29a4>  // b.none
  45fad8:	ldr	x0, [sp, #40]
  45fadc:	bl	45ed30 <_obstack_memory_used@@Base+0x1bf0>
  45fae0:	b	45fb10 <_obstack_memory_used@@Base+0x29d0>
  45fae4:	ldr	x0, [sp, #40]
  45fae8:	ldr	x0, [x0, #120]
  45faec:	cmp	x0, #0x0
  45faf0:	b.eq	45fb10 <_obstack_memory_used@@Base+0x29d0>  // b.none
  45faf4:	ldr	x0, [sp, #40]
  45faf8:	bl	45ee28 <_obstack_memory_used@@Base+0x1ce8>
  45fafc:	b	45fb10 <_obstack_memory_used@@Base+0x29d0>
  45fb00:	ldr	x0, [sp, #40]
  45fb04:	ldr	x1, [x0, #88]
  45fb08:	ldr	x0, [sp, #40]
  45fb0c:	str	x1, [x0, #48]
  45fb10:	ldr	x0, [sp, #40]
  45fb14:	str	xzr, [x0, #72]
  45fb18:	mov	w0, #0x0                   	// #0
  45fb1c:	ldp	x29, x30, [sp], #192
  45fb20:	ret
  45fb24:	sub	sp, sp, #0x20
  45fb28:	str	x0, [sp, #8]
  45fb2c:	str	x1, [sp]
  45fb30:	ldr	x0, [sp, #8]
  45fb34:	ldrb	w0, [x0, #139]
  45fb38:	cmp	w0, #0x0
  45fb3c:	cset	w0, eq  // eq = none
  45fb40:	and	w0, w0, #0xff
  45fb44:	and	x0, x0, #0xff
  45fb48:	cmp	x0, #0x0
  45fb4c:	b.eq	45fb74 <_obstack_memory_used@@Base+0x2a34>  // b.none
  45fb50:	ldr	x0, [sp, #8]
  45fb54:	ldr	x0, [x0, #8]
  45fb58:	ldr	x1, [sp, #8]
  45fb5c:	ldr	x2, [x1, #72]
  45fb60:	ldr	x1, [sp]
  45fb64:	add	x1, x2, x1
  45fb68:	add	x0, x0, x1
  45fb6c:	ldrb	w0, [x0]
  45fb70:	b	45fcd8 <_obstack_memory_used@@Base+0x2b98>
  45fb74:	ldr	x0, [sp, #8]
  45fb78:	ldr	w0, [x0, #144]
  45fb7c:	cmp	w0, #0x1
  45fb80:	b.le	45fc28 <_obstack_memory_used@@Base+0x2ae8>
  45fb84:	ldr	x0, [sp, #8]
  45fb88:	ldr	x1, [x0, #16]
  45fb8c:	ldr	x0, [sp, #8]
  45fb90:	ldr	x2, [x0, #72]
  45fb94:	ldr	x0, [sp]
  45fb98:	add	x0, x2, x0
  45fb9c:	lsl	x0, x0, #2
  45fba0:	add	x0, x1, x0
  45fba4:	ldr	w0, [x0]
  45fba8:	cmn	w0, #0x1
  45fbac:	b.eq	45fc04 <_obstack_memory_used@@Base+0x2ac4>  // b.none
  45fbb0:	ldr	x0, [sp, #8]
  45fbb4:	ldr	x1, [x0, #48]
  45fbb8:	ldr	x0, [sp, #8]
  45fbbc:	ldr	x2, [x0, #72]
  45fbc0:	ldr	x0, [sp]
  45fbc4:	add	x0, x2, x0
  45fbc8:	add	x0, x0, #0x1
  45fbcc:	cmp	x1, x0
  45fbd0:	b.eq	45fc28 <_obstack_memory_used@@Base+0x2ae8>  // b.none
  45fbd4:	ldr	x0, [sp, #8]
  45fbd8:	ldr	x1, [x0, #16]
  45fbdc:	ldr	x0, [sp, #8]
  45fbe0:	ldr	x2, [x0, #72]
  45fbe4:	ldr	x0, [sp]
  45fbe8:	add	x0, x2, x0
  45fbec:	add	x0, x0, #0x1
  45fbf0:	lsl	x0, x0, #2
  45fbf4:	add	x0, x1, x0
  45fbf8:	ldr	w0, [x0]
  45fbfc:	cmn	w0, #0x1
  45fc00:	b.ne	45fc28 <_obstack_memory_used@@Base+0x2ae8>  // b.any
  45fc04:	ldr	x0, [sp, #8]
  45fc08:	ldr	x0, [x0, #8]
  45fc0c:	ldr	x1, [sp, #8]
  45fc10:	ldr	x2, [x1, #72]
  45fc14:	ldr	x1, [sp]
  45fc18:	add	x1, x2, x1
  45fc1c:	add	x0, x0, x1
  45fc20:	ldrb	w0, [x0]
  45fc24:	b	45fcd8 <_obstack_memory_used@@Base+0x2b98>
  45fc28:	ldr	x0, [sp, #8]
  45fc2c:	ldr	x0, [x0, #72]
  45fc30:	ldr	x1, [sp]
  45fc34:	add	x0, x1, x0
  45fc38:	str	x0, [sp, #24]
  45fc3c:	ldr	x0, [sp, #8]
  45fc40:	ldrb	w0, [x0, #140]
  45fc44:	cmp	w0, #0x0
  45fc48:	b.eq	45fc68 <_obstack_memory_used@@Base+0x2b28>  // b.none
  45fc4c:	ldr	x0, [sp, #8]
  45fc50:	ldr	x1, [x0, #24]
  45fc54:	ldr	x0, [sp, #24]
  45fc58:	lsl	x0, x0, #3
  45fc5c:	add	x0, x1, x0
  45fc60:	ldr	x0, [x0]
  45fc64:	str	x0, [sp, #24]
  45fc68:	ldr	x0, [sp, #8]
  45fc6c:	ldr	x0, [x0]
  45fc70:	ldr	x1, [sp, #8]
  45fc74:	ldr	x2, [x1, #40]
  45fc78:	ldr	x1, [sp, #24]
  45fc7c:	add	x1, x2, x1
  45fc80:	add	x0, x0, x1
  45fc84:	ldrb	w0, [x0]
  45fc88:	str	w0, [sp, #20]
  45fc8c:	ldr	x0, [sp, #8]
  45fc90:	ldrb	w0, [x0, #140]
  45fc94:	cmp	w0, #0x0
  45fc98:	b.eq	45fcd0 <_obstack_memory_used@@Base+0x2b90>  // b.none
  45fc9c:	ldr	w0, [sp, #20]
  45fca0:	and	w0, w0, #0xffffff80
  45fca4:	cmp	w0, #0x0
  45fca8:	b.eq	45fcd0 <_obstack_memory_used@@Base+0x2b90>  // b.none
  45fcac:	ldr	x0, [sp, #8]
  45fcb0:	ldr	x0, [x0, #8]
  45fcb4:	ldr	x1, [sp, #8]
  45fcb8:	ldr	x2, [x1, #72]
  45fcbc:	ldr	x1, [sp]
  45fcc0:	add	x1, x2, x1
  45fcc4:	add	x0, x0, x1
  45fcc8:	ldrb	w0, [x0]
  45fccc:	b	45fcd8 <_obstack_memory_used@@Base+0x2b98>
  45fcd0:	ldr	w0, [sp, #20]
  45fcd4:	and	w0, w0, #0xff
  45fcd8:	add	sp, sp, #0x20
  45fcdc:	ret
  45fce0:	stp	x29, x30, [sp, #-64]!
  45fce4:	mov	x29, sp
  45fce8:	str	x19, [sp, #16]
  45fcec:	str	x0, [sp, #40]
  45fcf0:	ldr	x0, [sp, #40]
  45fcf4:	ldrb	w0, [x0, #139]
  45fcf8:	cmp	w0, #0x0
  45fcfc:	cset	w0, eq  // eq = none
  45fd00:	and	w0, w0, #0xff
  45fd04:	and	x0, x0, #0xff
  45fd08:	cmp	x0, #0x0
  45fd0c:	b.eq	45fd38 <_obstack_memory_used@@Base+0x2bf8>  // b.none
  45fd10:	ldr	x0, [sp, #40]
  45fd14:	ldr	x1, [x0, #8]
  45fd18:	ldr	x0, [sp, #40]
  45fd1c:	ldr	x0, [x0, #72]
  45fd20:	add	x3, x0, #0x1
  45fd24:	ldr	x2, [sp, #40]
  45fd28:	str	x3, [x2, #72]
  45fd2c:	add	x0, x1, x0
  45fd30:	ldrb	w0, [x0]
  45fd34:	b	45fe90 <_obstack_memory_used@@Base+0x2d50>
  45fd38:	ldr	x0, [sp, #40]
  45fd3c:	ldrb	w0, [x0, #140]
  45fd40:	cmp	w0, #0x0
  45fd44:	b.eq	45fe60 <_obstack_memory_used@@Base+0x2d20>  // b.none
  45fd48:	ldr	x0, [sp, #40]
  45fd4c:	ldr	x1, [x0, #72]
  45fd50:	ldr	x0, [sp, #40]
  45fd54:	ldr	x0, [x0, #48]
  45fd58:	cmp	x1, x0
  45fd5c:	b.eq	45fdac <_obstack_memory_used@@Base+0x2c6c>  // b.none
  45fd60:	ldr	x0, [sp, #40]
  45fd64:	ldr	x1, [x0, #16]
  45fd68:	ldr	x0, [sp, #40]
  45fd6c:	ldr	x0, [x0, #72]
  45fd70:	lsl	x0, x0, #2
  45fd74:	add	x0, x1, x0
  45fd78:	ldr	w0, [x0]
  45fd7c:	cmn	w0, #0x1
  45fd80:	b.ne	45fdac <_obstack_memory_used@@Base+0x2c6c>  // b.any
  45fd84:	ldr	x0, [sp, #40]
  45fd88:	ldr	x1, [x0, #8]
  45fd8c:	ldr	x0, [sp, #40]
  45fd90:	ldr	x0, [x0, #72]
  45fd94:	add	x3, x0, #0x1
  45fd98:	ldr	x2, [sp, #40]
  45fd9c:	str	x3, [x2, #72]
  45fda0:	add	x0, x1, x0
  45fda4:	ldrb	w0, [x0]
  45fda8:	b	45fe90 <_obstack_memory_used@@Base+0x2d50>
  45fdac:	ldr	x0, [sp, #40]
  45fdb0:	ldr	x1, [x0, #24]
  45fdb4:	ldr	x0, [sp, #40]
  45fdb8:	ldr	x0, [x0, #72]
  45fdbc:	lsl	x0, x0, #3
  45fdc0:	add	x0, x1, x0
  45fdc4:	ldr	x0, [x0]
  45fdc8:	str	x0, [sp, #56]
  45fdcc:	ldr	x0, [sp, #40]
  45fdd0:	ldr	x0, [x0]
  45fdd4:	ldr	x1, [sp, #40]
  45fdd8:	ldr	x2, [x1, #40]
  45fddc:	ldr	x1, [sp, #56]
  45fde0:	add	x1, x2, x1
  45fde4:	add	x0, x0, x1
  45fde8:	ldrb	w0, [x0]
  45fdec:	str	w0, [sp, #52]
  45fdf0:	ldr	w0, [sp, #52]
  45fdf4:	and	w0, w0, #0xffffff80
  45fdf8:	cmp	w0, #0x0
  45fdfc:	b.eq	45fe28 <_obstack_memory_used@@Base+0x2ce8>  // b.none
  45fe00:	ldr	x0, [sp, #40]
  45fe04:	ldr	x1, [x0, #8]
  45fe08:	ldr	x0, [sp, #40]
  45fe0c:	ldr	x0, [x0, #72]
  45fe10:	add	x3, x0, #0x1
  45fe14:	ldr	x2, [sp, #40]
  45fe18:	str	x3, [x2, #72]
  45fe1c:	add	x0, x1, x0
  45fe20:	ldrb	w0, [x0]
  45fe24:	b	45fe90 <_obstack_memory_used@@Base+0x2d50>
  45fe28:	ldr	x0, [sp, #40]
  45fe2c:	ldr	x19, [x0, #72]
  45fe30:	ldr	x0, [sp, #40]
  45fe34:	ldr	x0, [x0, #72]
  45fe38:	mov	x1, x0
  45fe3c:	ldr	x0, [sp, #40]
  45fe40:	bl	45d67c <_obstack_memory_used@@Base+0x53c>
  45fe44:	sxtw	x0, w0
  45fe48:	add	x1, x19, x0
  45fe4c:	ldr	x0, [sp, #40]
  45fe50:	str	x1, [x0, #72]
  45fe54:	ldr	w0, [sp, #52]
  45fe58:	and	w0, w0, #0xff
  45fe5c:	b	45fe90 <_obstack_memory_used@@Base+0x2d50>
  45fe60:	ldr	x0, [sp, #40]
  45fe64:	ldr	x1, [x0]
  45fe68:	ldr	x0, [sp, #40]
  45fe6c:	ldr	x2, [x0, #40]
  45fe70:	ldr	x0, [sp, #40]
  45fe74:	ldr	x0, [x0, #72]
  45fe78:	add	x4, x0, #0x1
  45fe7c:	ldr	x3, [sp, #40]
  45fe80:	str	x4, [x3, #72]
  45fe84:	add	x0, x2, x0
  45fe88:	add	x0, x1, x0
  45fe8c:	ldrb	w0, [x0]
  45fe90:	ldr	x19, [sp, #16]
  45fe94:	ldp	x29, x30, [sp], #64
  45fe98:	ret
  45fe9c:	stp	x29, x30, [sp, #-32]!
  45fea0:	mov	x29, sp
  45fea4:	str	x0, [sp, #24]
  45fea8:	ldr	x0, [sp, #24]
  45feac:	ldr	x0, [x0, #16]
  45feb0:	bl	404880 <free@plt>
  45feb4:	ldr	x0, [sp, #24]
  45feb8:	ldr	x0, [x0, #24]
  45febc:	bl	404880 <free@plt>
  45fec0:	ldr	x0, [sp, #24]
  45fec4:	ldrb	w0, [x0, #139]
  45fec8:	cmp	w0, #0x0
  45fecc:	b.eq	45fedc <_obstack_memory_used@@Base+0x2d9c>  // b.none
  45fed0:	ldr	x0, [sp, #24]
  45fed4:	ldr	x0, [x0, #8]
  45fed8:	bl	404880 <free@plt>
  45fedc:	nop
  45fee0:	ldp	x29, x30, [sp], #32
  45fee4:	ret
  45fee8:	stp	x29, x30, [sp, #-64]!
  45feec:	mov	x29, sp
  45fef0:	str	x0, [sp, #40]
  45fef4:	str	x1, [sp, #32]
  45fef8:	str	w2, [sp, #28]
  45fefc:	ldr	x0, [sp, #32]
  45ff00:	lsr	x0, x0, #63
  45ff04:	and	w0, w0, #0xff
  45ff08:	and	x0, x0, #0xff
  45ff0c:	cmp	x0, #0x0
  45ff10:	b.eq	45ff20 <_obstack_memory_used@@Base+0x2de0>  // b.none
  45ff14:	ldr	x0, [sp, #40]
  45ff18:	ldr	w0, [x0, #112]
  45ff1c:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  45ff20:	ldr	x0, [sp, #40]
  45ff24:	ldr	x0, [x0, #88]
  45ff28:	ldr	x1, [sp, #32]
  45ff2c:	cmp	x1, x0
  45ff30:	cset	w0, eq  // eq = none
  45ff34:	and	w0, w0, #0xff
  45ff38:	and	x0, x0, #0xff
  45ff3c:	cmp	x0, #0x0
  45ff40:	b.eq	45ff64 <_obstack_memory_used@@Base+0x2e24>  // b.none
  45ff44:	ldr	w0, [sp, #28]
  45ff48:	and	w0, w0, #0x2
  45ff4c:	cmp	w0, #0x0
  45ff50:	b.eq	45ff5c <_obstack_memory_used@@Base+0x2e1c>  // b.none
  45ff54:	mov	w0, #0x8                   	// #8
  45ff58:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  45ff5c:	mov	w0, #0xa                   	// #10
  45ff60:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  45ff64:	ldr	x0, [sp, #40]
  45ff68:	ldr	w0, [x0, #144]
  45ff6c:	cmp	w0, #0x1
  45ff70:	b.le	460050 <_obstack_memory_used@@Base+0x2f10>
  45ff74:	ldr	x0, [sp, #32]
  45ff78:	str	x0, [sp, #56]
  45ff7c:	b	45ffa4 <_obstack_memory_used@@Base+0x2e64>
  45ff80:	ldr	x0, [sp, #56]
  45ff84:	sub	x0, x0, #0x1
  45ff88:	str	x0, [sp, #56]
  45ff8c:	ldr	x0, [sp, #56]
  45ff90:	cmp	x0, #0x0
  45ff94:	b.ge	45ffa4 <_obstack_memory_used@@Base+0x2e64>  // b.tcont
  45ff98:	ldr	x0, [sp, #40]
  45ff9c:	ldr	w0, [x0, #112]
  45ffa0:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  45ffa4:	ldr	x0, [sp, #40]
  45ffa8:	ldr	x1, [x0, #16]
  45ffac:	ldr	x0, [sp, #56]
  45ffb0:	lsl	x0, x0, #2
  45ffb4:	add	x0, x1, x0
  45ffb8:	ldr	w0, [x0]
  45ffbc:	cmn	w0, #0x1
  45ffc0:	b.eq	45ff80 <_obstack_memory_used@@Base+0x2e40>  // b.none
  45ffc4:	ldr	x0, [sp, #40]
  45ffc8:	ldr	x1, [x0, #16]
  45ffcc:	ldr	x0, [sp, #56]
  45ffd0:	lsl	x0, x0, #2
  45ffd4:	add	x0, x1, x0
  45ffd8:	ldr	w0, [x0]
  45ffdc:	str	w0, [sp, #48]
  45ffe0:	ldr	x0, [sp, #40]
  45ffe4:	ldrb	w0, [x0, #142]
  45ffe8:	cmp	w0, #0x0
  45ffec:	cset	w0, ne  // ne = any
  45fff0:	and	w0, w0, #0xff
  45fff4:	and	x0, x0, #0xff
  45fff8:	cmp	x0, #0x0
  45fffc:	b.eq	460024 <_obstack_memory_used@@Base+0x2ee4>  // b.none
  460000:	ldr	w0, [sp, #48]
  460004:	bl	404a60 <iswalnum@plt>
  460008:	cmp	w0, #0x0
  46000c:	b.ne	46001c <_obstack_memory_used@@Base+0x2edc>  // b.any
  460010:	ldr	w0, [sp, #48]
  460014:	cmp	w0, #0x5f
  460018:	b.ne	460024 <_obstack_memory_used@@Base+0x2ee4>  // b.any
  46001c:	mov	w0, #0x1                   	// #1
  460020:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  460024:	ldr	w0, [sp, #48]
  460028:	cmp	w0, #0xa
  46002c:	b.ne	460048 <_obstack_memory_used@@Base+0x2f08>  // b.any
  460030:	ldr	x0, [sp, #40]
  460034:	ldrb	w0, [x0, #141]
  460038:	cmp	w0, #0x0
  46003c:	b.eq	460048 <_obstack_memory_used@@Base+0x2f08>  // b.none
  460040:	mov	w0, #0x2                   	// #2
  460044:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  460048:	mov	w0, #0x0                   	// #0
  46004c:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  460050:	ldr	x0, [sp, #40]
  460054:	ldr	x1, [x0, #8]
  460058:	ldr	x0, [sp, #32]
  46005c:	add	x0, x1, x0
  460060:	ldrb	w0, [x0]
  460064:	str	w0, [sp, #52]
  460068:	ldr	x0, [sp, #40]
  46006c:	ldr	x0, [x0, #128]
  460070:	ldrsw	x1, [sp, #52]
  460074:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  460078:	and	w0, w0, #0xff
  46007c:	cmp	w0, #0x0
  460080:	b.eq	46008c <_obstack_memory_used@@Base+0x2f4c>  // b.none
  460084:	mov	w0, #0x1                   	// #1
  460088:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  46008c:	ldr	w0, [sp, #52]
  460090:	cmp	w0, #0xa
  460094:	b.ne	4600b0 <_obstack_memory_used@@Base+0x2f70>  // b.any
  460098:	ldr	x0, [sp, #40]
  46009c:	ldrb	w0, [x0, #141]
  4600a0:	cmp	w0, #0x0
  4600a4:	b.eq	4600b0 <_obstack_memory_used@@Base+0x2f70>  // b.none
  4600a8:	mov	w0, #0x2                   	// #2
  4600ac:	b	4600b4 <_obstack_memory_used@@Base+0x2f74>
  4600b0:	mov	w0, #0x0                   	// #0
  4600b4:	ldp	x29, x30, [sp], #64
  4600b8:	ret
  4600bc:	stp	x29, x30, [sp, #-32]!
  4600c0:	mov	x29, sp
  4600c4:	str	x0, [sp, #24]
  4600c8:	str	x1, [sp, #16]
  4600cc:	ldr	x0, [sp, #24]
  4600d0:	ldr	x1, [sp, #16]
  4600d4:	str	x1, [x0]
  4600d8:	ldr	x0, [sp, #24]
  4600dc:	str	xzr, [x0, #8]
  4600e0:	ldr	x0, [sp, #16]
  4600e4:	lsl	x0, x0, #3
  4600e8:	bl	4043f0 <malloc@plt>
  4600ec:	mov	x1, x0
  4600f0:	ldr	x0, [sp, #24]
  4600f4:	str	x1, [x0, #16]
  4600f8:	ldr	x0, [sp, #24]
  4600fc:	ldr	x0, [x0, #16]
  460100:	cmp	x0, #0x0
  460104:	cset	w0, eq  // eq = none
  460108:	and	w0, w0, #0xff
  46010c:	and	x0, x0, #0xff
  460110:	cmp	x0, #0x0
  460114:	b.eq	460120 <_obstack_memory_used@@Base+0x2fe0>  // b.none
  460118:	mov	w0, #0xc                   	// #12
  46011c:	b	460124 <_obstack_memory_used@@Base+0x2fe4>
  460120:	mov	w0, #0x0                   	// #0
  460124:	ldp	x29, x30, [sp], #32
  460128:	ret
  46012c:	stp	x29, x30, [sp, #-32]!
  460130:	mov	x29, sp
  460134:	str	x0, [sp, #24]
  460138:	str	x1, [sp, #16]
  46013c:	ldr	x0, [sp, #24]
  460140:	mov	x1, #0x1                   	// #1
  460144:	str	x1, [x0]
  460148:	ldr	x0, [sp, #24]
  46014c:	mov	x1, #0x1                   	// #1
  460150:	str	x1, [x0, #8]
  460154:	mov	x0, #0x8                   	// #8
  460158:	bl	4043f0 <malloc@plt>
  46015c:	mov	x1, x0
  460160:	ldr	x0, [sp, #24]
  460164:	str	x1, [x0, #16]
  460168:	ldr	x0, [sp, #24]
  46016c:	ldr	x0, [x0, #16]
  460170:	cmp	x0, #0x0
  460174:	cset	w0, eq  // eq = none
  460178:	and	w0, w0, #0xff
  46017c:	and	x0, x0, #0xff
  460180:	cmp	x0, #0x0
  460184:	b.eq	4601a8 <_obstack_memory_used@@Base+0x3068>  // b.none
  460188:	ldr	x0, [sp, #24]
  46018c:	str	xzr, [x0, #8]
  460190:	ldr	x0, [sp, #24]
  460194:	ldr	x1, [x0, #8]
  460198:	ldr	x0, [sp, #24]
  46019c:	str	x1, [x0]
  4601a0:	mov	w0, #0xc                   	// #12
  4601a4:	b	4601bc <_obstack_memory_used@@Base+0x307c>
  4601a8:	ldr	x0, [sp, #24]
  4601ac:	ldr	x0, [x0, #16]
  4601b0:	ldr	x1, [sp, #16]
  4601b4:	str	x1, [x0]
  4601b8:	mov	w0, #0x0                   	// #0
  4601bc:	ldp	x29, x30, [sp], #32
  4601c0:	ret
  4601c4:	stp	x29, x30, [sp, #-48]!
  4601c8:	mov	x29, sp
  4601cc:	str	x0, [sp, #40]
  4601d0:	str	x1, [sp, #32]
  4601d4:	str	x2, [sp, #24]
  4601d8:	ldr	x0, [sp, #40]
  4601dc:	mov	x1, #0x2                   	// #2
  4601e0:	str	x1, [x0]
  4601e4:	mov	x0, #0x10                  	// #16
  4601e8:	bl	4043f0 <malloc@plt>
  4601ec:	mov	x1, x0
  4601f0:	ldr	x0, [sp, #40]
  4601f4:	str	x1, [x0, #16]
  4601f8:	ldr	x0, [sp, #40]
  4601fc:	ldr	x0, [x0, #16]
  460200:	cmp	x0, #0x0
  460204:	cset	w0, eq  // eq = none
  460208:	and	w0, w0, #0xff
  46020c:	and	x0, x0, #0xff
  460210:	cmp	x0, #0x0
  460214:	b.eq	460220 <_obstack_memory_used@@Base+0x30e0>  // b.none
  460218:	mov	w0, #0xc                   	// #12
  46021c:	b	4602bc <_obstack_memory_used@@Base+0x317c>
  460220:	ldr	x1, [sp, #32]
  460224:	ldr	x0, [sp, #24]
  460228:	cmp	x1, x0
  46022c:	b.ne	460250 <_obstack_memory_used@@Base+0x3110>  // b.any
  460230:	ldr	x0, [sp, #40]
  460234:	mov	x1, #0x1                   	// #1
  460238:	str	x1, [x0, #8]
  46023c:	ldr	x0, [sp, #40]
  460240:	ldr	x0, [x0, #16]
  460244:	ldr	x1, [sp, #32]
  460248:	str	x1, [x0]
  46024c:	b	4602b8 <_obstack_memory_used@@Base+0x3178>
  460250:	ldr	x0, [sp, #40]
  460254:	mov	x1, #0x2                   	// #2
  460258:	str	x1, [x0, #8]
  46025c:	ldr	x1, [sp, #32]
  460260:	ldr	x0, [sp, #24]
  460264:	cmp	x1, x0
  460268:	b.ge	460294 <_obstack_memory_used@@Base+0x3154>  // b.tcont
  46026c:	ldr	x0, [sp, #40]
  460270:	ldr	x0, [x0, #16]
  460274:	ldr	x1, [sp, #32]
  460278:	str	x1, [x0]
  46027c:	ldr	x0, [sp, #40]
  460280:	ldr	x0, [x0, #16]
  460284:	add	x0, x0, #0x8
  460288:	ldr	x1, [sp, #24]
  46028c:	str	x1, [x0]
  460290:	b	4602b8 <_obstack_memory_used@@Base+0x3178>
  460294:	ldr	x0, [sp, #40]
  460298:	ldr	x0, [x0, #16]
  46029c:	ldr	x1, [sp, #24]
  4602a0:	str	x1, [x0]
  4602a4:	ldr	x0, [sp, #40]
  4602a8:	ldr	x0, [x0, #16]
  4602ac:	add	x0, x0, #0x8
  4602b0:	ldr	x1, [sp, #32]
  4602b4:	str	x1, [x0]
  4602b8:	mov	w0, #0x0                   	// #0
  4602bc:	ldp	x29, x30, [sp], #48
  4602c0:	ret
  4602c4:	stp	x29, x30, [sp, #-32]!
  4602c8:	mov	x29, sp
  4602cc:	str	x0, [sp, #24]
  4602d0:	str	x1, [sp, #16]
  4602d4:	ldr	x0, [sp, #16]
  4602d8:	ldr	x1, [x0, #8]
  4602dc:	ldr	x0, [sp, #24]
  4602e0:	str	x1, [x0, #8]
  4602e4:	ldr	x0, [sp, #16]
  4602e8:	ldr	x0, [x0, #8]
  4602ec:	cmp	x0, #0x0
  4602f0:	b.le	46038c <_obstack_memory_used@@Base+0x324c>
  4602f4:	ldr	x0, [sp, #24]
  4602f8:	ldr	x1, [x0, #8]
  4602fc:	ldr	x0, [sp, #24]
  460300:	str	x1, [x0]
  460304:	ldr	x0, [sp, #24]
  460308:	ldr	x0, [x0]
  46030c:	lsl	x0, x0, #3
  460310:	bl	4043f0 <malloc@plt>
  460314:	mov	x1, x0
  460318:	ldr	x0, [sp, #24]
  46031c:	str	x1, [x0, #16]
  460320:	ldr	x0, [sp, #24]
  460324:	ldr	x0, [x0, #16]
  460328:	cmp	x0, #0x0
  46032c:	cset	w0, eq  // eq = none
  460330:	and	w0, w0, #0xff
  460334:	and	x0, x0, #0xff
  460338:	cmp	x0, #0x0
  46033c:	b.eq	460360 <_obstack_memory_used@@Base+0x3220>  // b.none
  460340:	ldr	x0, [sp, #24]
  460344:	str	xzr, [x0, #8]
  460348:	ldr	x0, [sp, #24]
  46034c:	ldr	x1, [x0, #8]
  460350:	ldr	x0, [sp, #24]
  460354:	str	x1, [x0]
  460358:	mov	w0, #0xc                   	// #12
  46035c:	b	4603a0 <_obstack_memory_used@@Base+0x3260>
  460360:	ldr	x0, [sp, #24]
  460364:	ldr	x3, [x0, #16]
  460368:	ldr	x0, [sp, #16]
  46036c:	ldr	x1, [x0, #16]
  460370:	ldr	x0, [sp, #16]
  460374:	ldr	x0, [x0, #8]
  460378:	lsl	x0, x0, #3
  46037c:	mov	x2, x0
  460380:	mov	x0, x3
  460384:	bl	404020 <memcpy@plt>
  460388:	b	46039c <_obstack_memory_used@@Base+0x325c>
  46038c:	mov	x2, #0x18                  	// #24
  460390:	mov	w1, #0x0                   	// #0
  460394:	ldr	x0, [sp, #24]
  460398:	bl	4044d0 <memset@plt>
  46039c:	mov	w0, #0x0                   	// #0
  4603a0:	ldp	x29, x30, [sp], #32
  4603a4:	ret
  4603a8:	stp	x29, x30, [sp, #-112]!
  4603ac:	mov	x29, sp
  4603b0:	str	x0, [sp, #40]
  4603b4:	str	x1, [sp, #32]
  4603b8:	str	x2, [sp, #24]
  4603bc:	ldr	x0, [sp, #32]
  4603c0:	ldr	x0, [x0, #8]
  4603c4:	cmp	x0, #0x0
  4603c8:	b.eq	4603dc <_obstack_memory_used@@Base+0x329c>  // b.none
  4603cc:	ldr	x0, [sp, #24]
  4603d0:	ldr	x0, [x0, #8]
  4603d4:	cmp	x0, #0x0
  4603d8:	b.ne	4603e4 <_obstack_memory_used@@Base+0x32a4>  // b.any
  4603dc:	mov	w0, #0x0                   	// #0
  4603e0:	b	460834 <_obstack_memory_used@@Base+0x36f4>
  4603e4:	ldr	x0, [sp, #32]
  4603e8:	ldr	x1, [x0, #8]
  4603ec:	ldr	x0, [sp, #24]
  4603f0:	ldr	x0, [x0, #8]
  4603f4:	add	x1, x1, x0
  4603f8:	ldr	x0, [sp, #40]
  4603fc:	ldr	x0, [x0, #8]
  460400:	add	x1, x1, x0
  460404:	ldr	x0, [sp, #40]
  460408:	ldr	x0, [x0]
  46040c:	cmp	x1, x0
  460410:	b.le	460494 <_obstack_memory_used@@Base+0x3354>
  460414:	ldr	x0, [sp, #32]
  460418:	ldr	x1, [x0, #8]
  46041c:	ldr	x0, [sp, #24]
  460420:	ldr	x0, [x0, #8]
  460424:	add	x1, x1, x0
  460428:	ldr	x0, [sp, #40]
  46042c:	ldr	x0, [x0]
  460430:	add	x0, x1, x0
  460434:	str	x0, [sp, #56]
  460438:	ldr	x0, [sp, #40]
  46043c:	ldr	x2, [x0, #16]
  460440:	ldr	x0, [sp, #56]
  460444:	lsl	x0, x0, #3
  460448:	mov	x1, x0
  46044c:	mov	x0, x2
  460450:	bl	4045e0 <realloc@plt>
  460454:	str	x0, [sp, #48]
  460458:	ldr	x0, [sp, #48]
  46045c:	cmp	x0, #0x0
  460460:	cset	w0, eq  // eq = none
  460464:	and	w0, w0, #0xff
  460468:	and	x0, x0, #0xff
  46046c:	cmp	x0, #0x0
  460470:	b.eq	46047c <_obstack_memory_used@@Base+0x333c>  // b.none
  460474:	mov	w0, #0xc                   	// #12
  460478:	b	460834 <_obstack_memory_used@@Base+0x36f4>
  46047c:	ldr	x0, [sp, #40]
  460480:	ldr	x1, [sp, #48]
  460484:	str	x1, [x0, #16]
  460488:	ldr	x0, [sp, #40]
  46048c:	ldr	x1, [sp, #56]
  460490:	str	x1, [x0]
  460494:	ldr	x0, [sp, #40]
  460498:	ldr	x1, [x0, #8]
  46049c:	ldr	x0, [sp, #32]
  4604a0:	ldr	x0, [x0, #8]
  4604a4:	add	x1, x1, x0
  4604a8:	ldr	x0, [sp, #24]
  4604ac:	ldr	x0, [x0, #8]
  4604b0:	add	x0, x1, x0
  4604b4:	str	x0, [sp, #64]
  4604b8:	ldr	x0, [sp, #32]
  4604bc:	ldr	x0, [x0, #8]
  4604c0:	sub	x0, x0, #0x1
  4604c4:	str	x0, [sp, #104]
  4604c8:	ldr	x0, [sp, #24]
  4604cc:	ldr	x0, [x0, #8]
  4604d0:	sub	x0, x0, #0x1
  4604d4:	str	x0, [sp, #96]
  4604d8:	ldr	x0, [sp, #40]
  4604dc:	ldr	x0, [x0, #8]
  4604e0:	sub	x0, x0, #0x1
  4604e4:	str	x0, [sp, #80]
  4604e8:	ldr	x0, [sp, #32]
  4604ec:	ldr	x1, [x0, #16]
  4604f0:	ldr	x0, [sp, #104]
  4604f4:	lsl	x0, x0, #3
  4604f8:	add	x0, x1, x0
  4604fc:	ldr	x1, [x0]
  460500:	ldr	x0, [sp, #24]
  460504:	ldr	x2, [x0, #16]
  460508:	ldr	x0, [sp, #96]
  46050c:	lsl	x0, x0, #3
  460510:	add	x0, x2, x0
  460514:	ldr	x0, [x0]
  460518:	cmp	x1, x0
  46051c:	b.ne	460628 <_obstack_memory_used@@Base+0x34e8>  // b.any
  460520:	b	460530 <_obstack_memory_used@@Base+0x33f0>
  460524:	ldr	x0, [sp, #80]
  460528:	sub	x0, x0, #0x1
  46052c:	str	x0, [sp, #80]
  460530:	ldr	x0, [sp, #80]
  460534:	cmp	x0, #0x0
  460538:	b.lt	460574 <_obstack_memory_used@@Base+0x3434>  // b.tstop
  46053c:	ldr	x0, [sp, #40]
  460540:	ldr	x1, [x0, #16]
  460544:	ldr	x0, [sp, #80]
  460548:	lsl	x0, x0, #3
  46054c:	add	x0, x1, x0
  460550:	ldr	x1, [x0]
  460554:	ldr	x0, [sp, #32]
  460558:	ldr	x2, [x0, #16]
  46055c:	ldr	x0, [sp, #104]
  460560:	lsl	x0, x0, #3
  460564:	add	x0, x2, x0
  460568:	ldr	x0, [x0]
  46056c:	cmp	x1, x0
  460570:	b.gt	460524 <_obstack_memory_used@@Base+0x33e4>
  460574:	ldr	x0, [sp, #80]
  460578:	cmp	x0, #0x0
  46057c:	b.lt	4605b8 <_obstack_memory_used@@Base+0x3478>  // b.tstop
  460580:	ldr	x0, [sp, #40]
  460584:	ldr	x1, [x0, #16]
  460588:	ldr	x0, [sp, #80]
  46058c:	lsl	x0, x0, #3
  460590:	add	x0, x1, x0
  460594:	ldr	x1, [x0]
  460598:	ldr	x0, [sp, #32]
  46059c:	ldr	x2, [x0, #16]
  4605a0:	ldr	x0, [sp, #104]
  4605a4:	lsl	x0, x0, #3
  4605a8:	add	x0, x2, x0
  4605ac:	ldr	x0, [x0]
  4605b0:	cmp	x1, x0
  4605b4:	b.eq	4605f4 <_obstack_memory_used@@Base+0x34b4>  // b.none
  4605b8:	ldr	x0, [sp, #32]
  4605bc:	ldr	x1, [x0, #16]
  4605c0:	ldr	x0, [sp, #104]
  4605c4:	lsl	x0, x0, #3
  4605c8:	add	x1, x1, x0
  4605cc:	ldr	x0, [sp, #40]
  4605d0:	ldr	x2, [x0, #16]
  4605d4:	ldr	x0, [sp, #64]
  4605d8:	sub	x0, x0, #0x1
  4605dc:	str	x0, [sp, #64]
  4605e0:	ldr	x0, [sp, #64]
  4605e4:	lsl	x0, x0, #3
  4605e8:	add	x0, x2, x0
  4605ec:	ldr	x1, [x1]
  4605f0:	str	x1, [x0]
  4605f4:	ldr	x0, [sp, #104]
  4605f8:	sub	x0, x0, #0x1
  4605fc:	str	x0, [sp, #104]
  460600:	ldr	x0, [sp, #104]
  460604:	cmp	x0, #0x0
  460608:	b.lt	46069c <_obstack_memory_used@@Base+0x355c>  // b.tstop
  46060c:	ldr	x0, [sp, #96]
  460610:	sub	x0, x0, #0x1
  460614:	str	x0, [sp, #96]
  460618:	ldr	x0, [sp, #96]
  46061c:	cmp	x0, #0x0
  460620:	b.lt	46069c <_obstack_memory_used@@Base+0x355c>  // b.tstop
  460624:	b	4604e8 <_obstack_memory_used@@Base+0x33a8>
  460628:	ldr	x0, [sp, #32]
  46062c:	ldr	x1, [x0, #16]
  460630:	ldr	x0, [sp, #104]
  460634:	lsl	x0, x0, #3
  460638:	add	x0, x1, x0
  46063c:	ldr	x1, [x0]
  460640:	ldr	x0, [sp, #24]
  460644:	ldr	x2, [x0, #16]
  460648:	ldr	x0, [sp, #96]
  46064c:	lsl	x0, x0, #3
  460650:	add	x0, x2, x0
  460654:	ldr	x0, [x0]
  460658:	cmp	x1, x0
  46065c:	b.ge	46067c <_obstack_memory_used@@Base+0x353c>  // b.tcont
  460660:	ldr	x0, [sp, #96]
  460664:	sub	x0, x0, #0x1
  460668:	str	x0, [sp, #96]
  46066c:	ldr	x0, [sp, #96]
  460670:	cmp	x0, #0x0
  460674:	b.ge	4604e8 <_obstack_memory_used@@Base+0x33a8>  // b.tcont
  460678:	b	46069c <_obstack_memory_used@@Base+0x355c>
  46067c:	ldr	x0, [sp, #104]
  460680:	sub	x0, x0, #0x1
  460684:	str	x0, [sp, #104]
  460688:	ldr	x0, [sp, #104]
  46068c:	cmp	x0, #0x0
  460690:	b.lt	460698 <_obstack_memory_used@@Base+0x3558>  // b.tstop
  460694:	b	4604e8 <_obstack_memory_used@@Base+0x33a8>
  460698:	nop
  46069c:	ldr	x0, [sp, #40]
  4606a0:	ldr	x0, [x0, #8]
  4606a4:	sub	x0, x0, #0x1
  4606a8:	str	x0, [sp, #80]
  4606ac:	ldr	x0, [sp, #40]
  4606b0:	ldr	x1, [x0, #8]
  4606b4:	ldr	x0, [sp, #32]
  4606b8:	ldr	x0, [x0, #8]
  4606bc:	add	x1, x1, x0
  4606c0:	ldr	x0, [sp, #24]
  4606c4:	ldr	x0, [x0, #8]
  4606c8:	add	x0, x1, x0
  4606cc:	sub	x0, x0, #0x1
  4606d0:	str	x0, [sp, #88]
  4606d4:	ldr	x1, [sp, #88]
  4606d8:	ldr	x0, [sp, #64]
  4606dc:	sub	x0, x1, x0
  4606e0:	add	x0, x0, #0x1
  4606e4:	str	x0, [sp, #72]
  4606e8:	ldr	x0, [sp, #40]
  4606ec:	ldr	x1, [x0, #8]
  4606f0:	ldr	x0, [sp, #72]
  4606f4:	add	x1, x1, x0
  4606f8:	ldr	x0, [sp, #40]
  4606fc:	str	x1, [x0, #8]
  460700:	ldr	x0, [sp, #72]
  460704:	cmp	x0, #0x0
  460708:	b.le	460800 <_obstack_memory_used@@Base+0x36c0>
  46070c:	ldr	x0, [sp, #80]
  460710:	cmp	x0, #0x0
  460714:	b.lt	460800 <_obstack_memory_used@@Base+0x36c0>  // b.tstop
  460718:	ldr	x0, [sp, #40]
  46071c:	ldr	x1, [x0, #16]
  460720:	ldr	x0, [sp, #88]
  460724:	lsl	x0, x0, #3
  460728:	add	x0, x1, x0
  46072c:	ldr	x1, [x0]
  460730:	ldr	x0, [sp, #40]
  460734:	ldr	x2, [x0, #16]
  460738:	ldr	x0, [sp, #80]
  46073c:	lsl	x0, x0, #3
  460740:	add	x0, x2, x0
  460744:	ldr	x0, [x0]
  460748:	cmp	x1, x0
  46074c:	b.le	4607a8 <_obstack_memory_used@@Base+0x3668>
  460750:	ldr	x0, [sp, #40]
  460754:	ldr	x1, [x0, #16]
  460758:	ldr	x0, [sp, #88]
  46075c:	sub	x2, x0, #0x1
  460760:	str	x2, [sp, #88]
  460764:	lsl	x0, x0, #3
  460768:	add	x1, x1, x0
  46076c:	ldr	x0, [sp, #40]
  460770:	ldr	x2, [x0, #16]
  460774:	ldr	x0, [sp, #72]
  460778:	sub	x3, x0, #0x1
  46077c:	str	x3, [sp, #72]
  460780:	ldr	x3, [sp, #80]
  460784:	add	x0, x0, x3
  460788:	lsl	x0, x0, #3
  46078c:	add	x0, x2, x0
  460790:	ldr	x1, [x1]
  460794:	str	x1, [x0]
  460798:	ldr	x0, [sp, #72]
  46079c:	cmp	x0, #0x0
  4607a0:	b.ne	460718 <_obstack_memory_used@@Base+0x35d8>  // b.any
  4607a4:	b	460800 <_obstack_memory_used@@Base+0x36c0>
  4607a8:	ldr	x0, [sp, #40]
  4607ac:	ldr	x1, [x0, #16]
  4607b0:	ldr	x0, [sp, #80]
  4607b4:	lsl	x0, x0, #3
  4607b8:	add	x1, x1, x0
  4607bc:	ldr	x0, [sp, #40]
  4607c0:	ldr	x2, [x0, #16]
  4607c4:	ldr	x3, [sp, #80]
  4607c8:	ldr	x0, [sp, #72]
  4607cc:	add	x0, x3, x0
  4607d0:	lsl	x0, x0, #3
  4607d4:	add	x0, x2, x0
  4607d8:	ldr	x1, [x1]
  4607dc:	str	x1, [x0]
  4607e0:	ldr	x0, [sp, #80]
  4607e4:	sub	x0, x0, #0x1
  4607e8:	str	x0, [sp, #80]
  4607ec:	ldr	x0, [sp, #80]
  4607f0:	cmp	x0, #0x0
  4607f4:	b.lt	4607fc <_obstack_memory_used@@Base+0x36bc>  // b.tstop
  4607f8:	b	460718 <_obstack_memory_used@@Base+0x35d8>
  4607fc:	nop
  460800:	ldr	x0, [sp, #40]
  460804:	ldr	x3, [x0, #16]
  460808:	ldr	x0, [sp, #40]
  46080c:	ldr	x1, [x0, #16]
  460810:	ldr	x0, [sp, #64]
  460814:	lsl	x0, x0, #3
  460818:	add	x1, x1, x0
  46081c:	ldr	x0, [sp, #72]
  460820:	lsl	x0, x0, #3
  460824:	mov	x2, x0
  460828:	mov	x0, x3
  46082c:	bl	404020 <memcpy@plt>
  460830:	mov	w0, #0x0                   	// #0
  460834:	ldp	x29, x30, [sp], #112
  460838:	ret
  46083c:	stp	x29, x30, [sp, #-80]!
  460840:	mov	x29, sp
  460844:	str	x0, [sp, #40]
  460848:	str	x1, [sp, #32]
  46084c:	str	x2, [sp, #24]
  460850:	ldr	x0, [sp, #32]
  460854:	cmp	x0, #0x0
  460858:	b.eq	4608e8 <_obstack_memory_used@@Base+0x37a8>  // b.none
  46085c:	ldr	x0, [sp, #32]
  460860:	ldr	x0, [x0, #8]
  460864:	cmp	x0, #0x0
  460868:	b.le	4608e8 <_obstack_memory_used@@Base+0x37a8>
  46086c:	ldr	x0, [sp, #24]
  460870:	cmp	x0, #0x0
  460874:	b.eq	4608e8 <_obstack_memory_used@@Base+0x37a8>  // b.none
  460878:	ldr	x0, [sp, #24]
  46087c:	ldr	x0, [x0, #8]
  460880:	cmp	x0, #0x0
  460884:	b.le	4608e8 <_obstack_memory_used@@Base+0x37a8>
  460888:	ldr	x0, [sp, #32]
  46088c:	ldr	x1, [x0, #8]
  460890:	ldr	x0, [sp, #24]
  460894:	ldr	x0, [x0, #8]
  460898:	add	x1, x1, x0
  46089c:	ldr	x0, [sp, #40]
  4608a0:	str	x1, [x0]
  4608a4:	ldr	x0, [sp, #40]
  4608a8:	ldr	x0, [x0]
  4608ac:	lsl	x0, x0, #3
  4608b0:	bl	4043f0 <malloc@plt>
  4608b4:	mov	x1, x0
  4608b8:	ldr	x0, [sp, #40]
  4608bc:	str	x1, [x0, #16]
  4608c0:	ldr	x0, [sp, #40]
  4608c4:	ldr	x0, [x0, #16]
  4608c8:	cmp	x0, #0x0
  4608cc:	cset	w0, eq  // eq = none
  4608d0:	and	w0, w0, #0xff
  4608d4:	and	x0, x0, #0xff
  4608d8:	cmp	x0, #0x0
  4608dc:	b.eq	460958 <_obstack_memory_used@@Base+0x3818>  // b.none
  4608e0:	mov	w0, #0xc                   	// #12
  4608e4:	b	460ba4 <_obstack_memory_used@@Base+0x3a64>
  4608e8:	ldr	x0, [sp, #32]
  4608ec:	cmp	x0, #0x0
  4608f0:	b.eq	460914 <_obstack_memory_used@@Base+0x37d4>  // b.none
  4608f4:	ldr	x0, [sp, #32]
  4608f8:	ldr	x0, [x0, #8]
  4608fc:	cmp	x0, #0x0
  460900:	b.le	460914 <_obstack_memory_used@@Base+0x37d4>
  460904:	ldr	x1, [sp, #32]
  460908:	ldr	x0, [sp, #40]
  46090c:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  460910:	b	460ba4 <_obstack_memory_used@@Base+0x3a64>
  460914:	ldr	x0, [sp, #24]
  460918:	cmp	x0, #0x0
  46091c:	b.eq	460940 <_obstack_memory_used@@Base+0x3800>  // b.none
  460920:	ldr	x0, [sp, #24]
  460924:	ldr	x0, [x0, #8]
  460928:	cmp	x0, #0x0
  46092c:	b.le	460940 <_obstack_memory_used@@Base+0x3800>
  460930:	ldr	x1, [sp, #24]
  460934:	ldr	x0, [sp, #40]
  460938:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  46093c:	b	460ba4 <_obstack_memory_used@@Base+0x3a64>
  460940:	mov	x2, #0x18                  	// #24
  460944:	mov	w1, #0x0                   	// #0
  460948:	ldr	x0, [sp, #40]
  46094c:	bl	4044d0 <memset@plt>
  460950:	mov	w0, #0x0                   	// #0
  460954:	b	460ba4 <_obstack_memory_used@@Base+0x3a64>
  460958:	str	xzr, [sp, #56]
  46095c:	ldr	x0, [sp, #56]
  460960:	str	x0, [sp, #64]
  460964:	ldr	x0, [sp, #64]
  460968:	str	x0, [sp, #72]
  46096c:	b	460a70 <_obstack_memory_used@@Base+0x3930>
  460970:	ldr	x0, [sp, #32]
  460974:	ldr	x1, [x0, #16]
  460978:	ldr	x0, [sp, #72]
  46097c:	lsl	x0, x0, #3
  460980:	add	x0, x1, x0
  460984:	ldr	x1, [x0]
  460988:	ldr	x0, [sp, #24]
  46098c:	ldr	x2, [x0, #16]
  460990:	ldr	x0, [sp, #64]
  460994:	lsl	x0, x0, #3
  460998:	add	x0, x2, x0
  46099c:	ldr	x0, [x0]
  4609a0:	cmp	x1, x0
  4609a4:	b.le	4609ec <_obstack_memory_used@@Base+0x38ac>
  4609a8:	ldr	x0, [sp, #24]
  4609ac:	ldr	x1, [x0, #16]
  4609b0:	ldr	x0, [sp, #64]
  4609b4:	add	x2, x0, #0x1
  4609b8:	str	x2, [sp, #64]
  4609bc:	lsl	x0, x0, #3
  4609c0:	add	x1, x1, x0
  4609c4:	ldr	x0, [sp, #40]
  4609c8:	ldr	x2, [x0, #16]
  4609cc:	ldr	x0, [sp, #56]
  4609d0:	add	x3, x0, #0x1
  4609d4:	str	x3, [sp, #56]
  4609d8:	lsl	x0, x0, #3
  4609dc:	add	x0, x2, x0
  4609e0:	ldr	x1, [x1]
  4609e4:	str	x1, [x0]
  4609e8:	b	460a70 <_obstack_memory_used@@Base+0x3930>
  4609ec:	ldr	x0, [sp, #32]
  4609f0:	ldr	x1, [x0, #16]
  4609f4:	ldr	x0, [sp, #72]
  4609f8:	lsl	x0, x0, #3
  4609fc:	add	x0, x1, x0
  460a00:	ldr	x1, [x0]
  460a04:	ldr	x0, [sp, #24]
  460a08:	ldr	x2, [x0, #16]
  460a0c:	ldr	x0, [sp, #64]
  460a10:	lsl	x0, x0, #3
  460a14:	add	x0, x2, x0
  460a18:	ldr	x0, [x0]
  460a1c:	cmp	x1, x0
  460a20:	b.ne	460a30 <_obstack_memory_used@@Base+0x38f0>  // b.any
  460a24:	ldr	x0, [sp, #64]
  460a28:	add	x0, x0, #0x1
  460a2c:	str	x0, [sp, #64]
  460a30:	ldr	x0, [sp, #32]
  460a34:	ldr	x1, [x0, #16]
  460a38:	ldr	x0, [sp, #72]
  460a3c:	add	x2, x0, #0x1
  460a40:	str	x2, [sp, #72]
  460a44:	lsl	x0, x0, #3
  460a48:	add	x1, x1, x0
  460a4c:	ldr	x0, [sp, #40]
  460a50:	ldr	x2, [x0, #16]
  460a54:	ldr	x0, [sp, #56]
  460a58:	add	x3, x0, #0x1
  460a5c:	str	x3, [sp, #56]
  460a60:	lsl	x0, x0, #3
  460a64:	add	x0, x2, x0
  460a68:	ldr	x1, [x1]
  460a6c:	str	x1, [x0]
  460a70:	ldr	x0, [sp, #32]
  460a74:	ldr	x0, [x0, #8]
  460a78:	ldr	x1, [sp, #72]
  460a7c:	cmp	x1, x0
  460a80:	b.ge	460a98 <_obstack_memory_used@@Base+0x3958>  // b.tcont
  460a84:	ldr	x0, [sp, #24]
  460a88:	ldr	x0, [x0, #8]
  460a8c:	ldr	x1, [sp, #64]
  460a90:	cmp	x1, x0
  460a94:	b.lt	460970 <_obstack_memory_used@@Base+0x3830>  // b.tstop
  460a98:	ldr	x0, [sp, #32]
  460a9c:	ldr	x0, [x0, #8]
  460aa0:	ldr	x1, [sp, #72]
  460aa4:	cmp	x1, x0
  460aa8:	b.ge	460b18 <_obstack_memory_used@@Base+0x39d8>  // b.tcont
  460aac:	ldr	x0, [sp, #40]
  460ab0:	ldr	x1, [x0, #16]
  460ab4:	ldr	x0, [sp, #56]
  460ab8:	lsl	x0, x0, #3
  460abc:	add	x3, x1, x0
  460ac0:	ldr	x0, [sp, #32]
  460ac4:	ldr	x1, [x0, #16]
  460ac8:	ldr	x0, [sp, #72]
  460acc:	lsl	x0, x0, #3
  460ad0:	add	x4, x1, x0
  460ad4:	ldr	x0, [sp, #32]
  460ad8:	ldr	x1, [x0, #8]
  460adc:	ldr	x0, [sp, #72]
  460ae0:	sub	x0, x1, x0
  460ae4:	lsl	x0, x0, #3
  460ae8:	mov	x2, x0
  460aec:	mov	x1, x4
  460af0:	mov	x0, x3
  460af4:	bl	404020 <memcpy@plt>
  460af8:	ldr	x0, [sp, #32]
  460afc:	ldr	x1, [x0, #8]
  460b00:	ldr	x0, [sp, #72]
  460b04:	sub	x0, x1, x0
  460b08:	ldr	x1, [sp, #56]
  460b0c:	add	x0, x1, x0
  460b10:	str	x0, [sp, #56]
  460b14:	b	460b94 <_obstack_memory_used@@Base+0x3a54>
  460b18:	ldr	x0, [sp, #24]
  460b1c:	ldr	x0, [x0, #8]
  460b20:	ldr	x1, [sp, #64]
  460b24:	cmp	x1, x0
  460b28:	b.ge	460b94 <_obstack_memory_used@@Base+0x3a54>  // b.tcont
  460b2c:	ldr	x0, [sp, #40]
  460b30:	ldr	x1, [x0, #16]
  460b34:	ldr	x0, [sp, #56]
  460b38:	lsl	x0, x0, #3
  460b3c:	add	x3, x1, x0
  460b40:	ldr	x0, [sp, #24]
  460b44:	ldr	x1, [x0, #16]
  460b48:	ldr	x0, [sp, #64]
  460b4c:	lsl	x0, x0, #3
  460b50:	add	x4, x1, x0
  460b54:	ldr	x0, [sp, #24]
  460b58:	ldr	x1, [x0, #8]
  460b5c:	ldr	x0, [sp, #64]
  460b60:	sub	x0, x1, x0
  460b64:	lsl	x0, x0, #3
  460b68:	mov	x2, x0
  460b6c:	mov	x1, x4
  460b70:	mov	x0, x3
  460b74:	bl	404020 <memcpy@plt>
  460b78:	ldr	x0, [sp, #24]
  460b7c:	ldr	x1, [x0, #8]
  460b80:	ldr	x0, [sp, #64]
  460b84:	sub	x0, x1, x0
  460b88:	ldr	x1, [sp, #56]
  460b8c:	add	x0, x1, x0
  460b90:	str	x0, [sp, #56]
  460b94:	ldr	x0, [sp, #40]
  460b98:	ldr	x1, [sp, #56]
  460b9c:	str	x1, [x0, #8]
  460ba0:	mov	w0, #0x0                   	// #0
  460ba4:	ldp	x29, x30, [sp], #80
  460ba8:	ret
  460bac:	stp	x29, x30, [sp, #-80]!
  460bb0:	mov	x29, sp
  460bb4:	str	x0, [sp, #24]
  460bb8:	str	x1, [sp, #16]
  460bbc:	ldr	x0, [sp, #16]
  460bc0:	cmp	x0, #0x0
  460bc4:	b.eq	460bd8 <_obstack_memory_used@@Base+0x3a98>  // b.none
  460bc8:	ldr	x0, [sp, #16]
  460bcc:	ldr	x0, [x0, #8]
  460bd0:	cmp	x0, #0x0
  460bd4:	b.ne	460be0 <_obstack_memory_used@@Base+0x3aa0>  // b.any
  460bd8:	mov	w0, #0x0                   	// #0
  460bdc:	b	460ff0 <_obstack_memory_used@@Base+0x3eb0>
  460be0:	ldr	x0, [sp, #24]
  460be4:	ldr	x1, [x0]
  460be8:	ldr	x0, [sp, #16]
  460bec:	ldr	x0, [x0, #8]
  460bf0:	lsl	x2, x0, #1
  460bf4:	ldr	x0, [sp, #24]
  460bf8:	ldr	x0, [x0, #8]
  460bfc:	add	x0, x2, x0
  460c00:	cmp	x1, x0
  460c04:	b.ge	460c80 <_obstack_memory_used@@Base+0x3b40>  // b.tcont
  460c08:	ldr	x0, [sp, #16]
  460c0c:	ldr	x1, [x0, #8]
  460c10:	ldr	x0, [sp, #24]
  460c14:	ldr	x0, [x0]
  460c18:	add	x0, x1, x0
  460c1c:	lsl	x0, x0, #1
  460c20:	str	x0, [sp, #40]
  460c24:	ldr	x0, [sp, #24]
  460c28:	ldr	x2, [x0, #16]
  460c2c:	ldr	x0, [sp, #40]
  460c30:	lsl	x0, x0, #3
  460c34:	mov	x1, x0
  460c38:	mov	x0, x2
  460c3c:	bl	4045e0 <realloc@plt>
  460c40:	str	x0, [sp, #32]
  460c44:	ldr	x0, [sp, #32]
  460c48:	cmp	x0, #0x0
  460c4c:	cset	w0, eq  // eq = none
  460c50:	and	w0, w0, #0xff
  460c54:	and	x0, x0, #0xff
  460c58:	cmp	x0, #0x0
  460c5c:	b.eq	460c68 <_obstack_memory_used@@Base+0x3b28>  // b.none
  460c60:	mov	w0, #0xc                   	// #12
  460c64:	b	460ff0 <_obstack_memory_used@@Base+0x3eb0>
  460c68:	ldr	x0, [sp, #24]
  460c6c:	ldr	x1, [sp, #32]
  460c70:	str	x1, [x0, #16]
  460c74:	ldr	x0, [sp, #24]
  460c78:	ldr	x1, [sp, #40]
  460c7c:	str	x1, [x0]
  460c80:	ldr	x0, [sp, #24]
  460c84:	ldr	x0, [x0, #8]
  460c88:	cmp	x0, #0x0
  460c8c:	cset	w0, eq  // eq = none
  460c90:	and	w0, w0, #0xff
  460c94:	and	x0, x0, #0xff
  460c98:	cmp	x0, #0x0
  460c9c:	b.eq	460ce0 <_obstack_memory_used@@Base+0x3ba0>  // b.none
  460ca0:	ldr	x0, [sp, #16]
  460ca4:	ldr	x1, [x0, #8]
  460ca8:	ldr	x0, [sp, #24]
  460cac:	str	x1, [x0, #8]
  460cb0:	ldr	x0, [sp, #24]
  460cb4:	ldr	x3, [x0, #16]
  460cb8:	ldr	x0, [sp, #16]
  460cbc:	ldr	x1, [x0, #16]
  460cc0:	ldr	x0, [sp, #16]
  460cc4:	ldr	x0, [x0, #8]
  460cc8:	lsl	x0, x0, #3
  460ccc:	mov	x2, x0
  460cd0:	mov	x0, x3
  460cd4:	bl	404020 <memcpy@plt>
  460cd8:	mov	w0, #0x0                   	// #0
  460cdc:	b	460ff0 <_obstack_memory_used@@Base+0x3eb0>
  460ce0:	ldr	x0, [sp, #24]
  460ce4:	ldr	x1, [x0, #8]
  460ce8:	ldr	x0, [sp, #16]
  460cec:	ldr	x0, [x0, #8]
  460cf0:	lsl	x0, x0, #1
  460cf4:	add	x0, x1, x0
  460cf8:	str	x0, [sp, #56]
  460cfc:	ldr	x0, [sp, #16]
  460d00:	ldr	x0, [x0, #8]
  460d04:	sub	x0, x0, #0x1
  460d08:	str	x0, [sp, #72]
  460d0c:	ldr	x0, [sp, #24]
  460d10:	ldr	x0, [x0, #8]
  460d14:	sub	x0, x0, #0x1
  460d18:	str	x0, [sp, #64]
  460d1c:	b	460e00 <_obstack_memory_used@@Base+0x3cc0>
  460d20:	ldr	x0, [sp, #24]
  460d24:	ldr	x1, [x0, #16]
  460d28:	ldr	x0, [sp, #64]
  460d2c:	lsl	x0, x0, #3
  460d30:	add	x0, x1, x0
  460d34:	ldr	x1, [x0]
  460d38:	ldr	x0, [sp, #16]
  460d3c:	ldr	x2, [x0, #16]
  460d40:	ldr	x0, [sp, #72]
  460d44:	lsl	x0, x0, #3
  460d48:	add	x0, x2, x0
  460d4c:	ldr	x0, [x0]
  460d50:	cmp	x1, x0
  460d54:	b.ne	460d74 <_obstack_memory_used@@Base+0x3c34>  // b.any
  460d58:	ldr	x0, [sp, #72]
  460d5c:	sub	x0, x0, #0x1
  460d60:	str	x0, [sp, #72]
  460d64:	ldr	x0, [sp, #64]
  460d68:	sub	x0, x0, #0x1
  460d6c:	str	x0, [sp, #64]
  460d70:	b	460e00 <_obstack_memory_used@@Base+0x3cc0>
  460d74:	ldr	x0, [sp, #24]
  460d78:	ldr	x1, [x0, #16]
  460d7c:	ldr	x0, [sp, #64]
  460d80:	lsl	x0, x0, #3
  460d84:	add	x0, x1, x0
  460d88:	ldr	x1, [x0]
  460d8c:	ldr	x0, [sp, #16]
  460d90:	ldr	x2, [x0, #16]
  460d94:	ldr	x0, [sp, #72]
  460d98:	lsl	x0, x0, #3
  460d9c:	add	x0, x2, x0
  460da0:	ldr	x0, [x0]
  460da4:	cmp	x1, x0
  460da8:	b.ge	460df4 <_obstack_memory_used@@Base+0x3cb4>  // b.tcont
  460dac:	ldr	x0, [sp, #16]
  460db0:	ldr	x1, [x0, #16]
  460db4:	ldr	x0, [sp, #72]
  460db8:	sub	x2, x0, #0x1
  460dbc:	str	x2, [sp, #72]
  460dc0:	lsl	x0, x0, #3
  460dc4:	add	x1, x1, x0
  460dc8:	ldr	x0, [sp, #24]
  460dcc:	ldr	x2, [x0, #16]
  460dd0:	ldr	x0, [sp, #56]
  460dd4:	sub	x0, x0, #0x1
  460dd8:	str	x0, [sp, #56]
  460ddc:	ldr	x0, [sp, #56]
  460de0:	lsl	x0, x0, #3
  460de4:	add	x0, x2, x0
  460de8:	ldr	x1, [x1]
  460dec:	str	x1, [x0]
  460df0:	b	460e00 <_obstack_memory_used@@Base+0x3cc0>
  460df4:	ldr	x0, [sp, #64]
  460df8:	sub	x0, x0, #0x1
  460dfc:	str	x0, [sp, #64]
  460e00:	ldr	x0, [sp, #72]
  460e04:	cmp	x0, #0x0
  460e08:	b.lt	460e18 <_obstack_memory_used@@Base+0x3cd8>  // b.tstop
  460e0c:	ldr	x0, [sp, #64]
  460e10:	cmp	x0, #0x0
  460e14:	b.ge	460d20 <_obstack_memory_used@@Base+0x3be0>  // b.tcont
  460e18:	ldr	x0, [sp, #72]
  460e1c:	cmp	x0, #0x0
  460e20:	b.lt	460e6c <_obstack_memory_used@@Base+0x3d2c>  // b.tstop
  460e24:	ldr	x0, [sp, #72]
  460e28:	add	x0, x0, #0x1
  460e2c:	ldr	x1, [sp, #56]
  460e30:	sub	x0, x1, x0
  460e34:	str	x0, [sp, #56]
  460e38:	ldr	x0, [sp, #24]
  460e3c:	ldr	x1, [x0, #16]
  460e40:	ldr	x0, [sp, #56]
  460e44:	lsl	x0, x0, #3
  460e48:	add	x3, x1, x0
  460e4c:	ldr	x0, [sp, #16]
  460e50:	ldr	x1, [x0, #16]
  460e54:	ldr	x0, [sp, #72]
  460e58:	add	x0, x0, #0x1
  460e5c:	lsl	x0, x0, #3
  460e60:	mov	x2, x0
  460e64:	mov	x0, x3
  460e68:	bl	404020 <memcpy@plt>
  460e6c:	ldr	x0, [sp, #24]
  460e70:	ldr	x0, [x0, #8]
  460e74:	sub	x0, x0, #0x1
  460e78:	str	x0, [sp, #64]
  460e7c:	ldr	x0, [sp, #24]
  460e80:	ldr	x1, [x0, #8]
  460e84:	ldr	x0, [sp, #16]
  460e88:	ldr	x0, [x0, #8]
  460e8c:	lsl	x0, x0, #1
  460e90:	add	x0, x1, x0
  460e94:	sub	x0, x0, #0x1
  460e98:	str	x0, [sp, #72]
  460e9c:	ldr	x1, [sp, #72]
  460ea0:	ldr	x0, [sp, #56]
  460ea4:	sub	x0, x1, x0
  460ea8:	add	x0, x0, #0x1
  460eac:	str	x0, [sp, #48]
  460eb0:	ldr	x0, [sp, #48]
  460eb4:	cmp	x0, #0x0
  460eb8:	b.ne	460ec4 <_obstack_memory_used@@Base+0x3d84>  // b.any
  460ebc:	mov	w0, #0x0                   	// #0
  460ec0:	b	460ff0 <_obstack_memory_used@@Base+0x3eb0>
  460ec4:	ldr	x0, [sp, #24]
  460ec8:	ldr	x1, [x0, #8]
  460ecc:	ldr	x0, [sp, #48]
  460ed0:	add	x1, x1, x0
  460ed4:	ldr	x0, [sp, #24]
  460ed8:	str	x1, [x0, #8]
  460edc:	ldr	x0, [sp, #24]
  460ee0:	ldr	x1, [x0, #16]
  460ee4:	ldr	x0, [sp, #72]
  460ee8:	lsl	x0, x0, #3
  460eec:	add	x0, x1, x0
  460ef0:	ldr	x1, [x0]
  460ef4:	ldr	x0, [sp, #24]
  460ef8:	ldr	x2, [x0, #16]
  460efc:	ldr	x0, [sp, #64]
  460f00:	lsl	x0, x0, #3
  460f04:	add	x0, x2, x0
  460f08:	ldr	x0, [x0]
  460f0c:	cmp	x1, x0
  460f10:	b.le	460f6c <_obstack_memory_used@@Base+0x3e2c>
  460f14:	ldr	x0, [sp, #24]
  460f18:	ldr	x1, [x0, #16]
  460f1c:	ldr	x0, [sp, #72]
  460f20:	sub	x2, x0, #0x1
  460f24:	str	x2, [sp, #72]
  460f28:	lsl	x0, x0, #3
  460f2c:	add	x1, x1, x0
  460f30:	ldr	x0, [sp, #24]
  460f34:	ldr	x2, [x0, #16]
  460f38:	ldr	x0, [sp, #48]
  460f3c:	sub	x3, x0, #0x1
  460f40:	str	x3, [sp, #48]
  460f44:	ldr	x3, [sp, #64]
  460f48:	add	x0, x0, x3
  460f4c:	lsl	x0, x0, #3
  460f50:	add	x0, x2, x0
  460f54:	ldr	x1, [x1]
  460f58:	str	x1, [x0]
  460f5c:	ldr	x0, [sp, #48]
  460f60:	cmp	x0, #0x0
  460f64:	b.ne	460edc <_obstack_memory_used@@Base+0x3d9c>  // b.any
  460f68:	b	460fec <_obstack_memory_used@@Base+0x3eac>
  460f6c:	ldr	x0, [sp, #24]
  460f70:	ldr	x1, [x0, #16]
  460f74:	ldr	x0, [sp, #64]
  460f78:	lsl	x0, x0, #3
  460f7c:	add	x1, x1, x0
  460f80:	ldr	x0, [sp, #24]
  460f84:	ldr	x2, [x0, #16]
  460f88:	ldr	x3, [sp, #64]
  460f8c:	ldr	x0, [sp, #48]
  460f90:	add	x0, x3, x0
  460f94:	lsl	x0, x0, #3
  460f98:	add	x0, x2, x0
  460f9c:	ldr	x1, [x1]
  460fa0:	str	x1, [x0]
  460fa4:	ldr	x0, [sp, #64]
  460fa8:	sub	x0, x0, #0x1
  460fac:	str	x0, [sp, #64]
  460fb0:	ldr	x0, [sp, #64]
  460fb4:	cmp	x0, #0x0
  460fb8:	b.ge	460edc <_obstack_memory_used@@Base+0x3d9c>  // b.tcont
  460fbc:	ldr	x0, [sp, #24]
  460fc0:	ldr	x3, [x0, #16]
  460fc4:	ldr	x0, [sp, #24]
  460fc8:	ldr	x1, [x0, #16]
  460fcc:	ldr	x0, [sp, #56]
  460fd0:	lsl	x0, x0, #3
  460fd4:	add	x1, x1, x0
  460fd8:	ldr	x0, [sp, #48]
  460fdc:	lsl	x0, x0, #3
  460fe0:	mov	x2, x0
  460fe4:	mov	x0, x3
  460fe8:	bl	404020 <memcpy@plt>
  460fec:	mov	w0, #0x0                   	// #0
  460ff0:	ldp	x29, x30, [sp], #80
  460ff4:	ret
  460ff8:	stp	x29, x30, [sp, #-48]!
  460ffc:	mov	x29, sp
  461000:	str	x0, [sp, #24]
  461004:	str	x1, [sp, #16]
  461008:	ldr	x0, [sp, #24]
  46100c:	ldr	x0, [x0]
  461010:	cmp	x0, #0x0
  461014:	b.ne	461044 <_obstack_memory_used@@Base+0x3f04>  // b.any
  461018:	ldr	x1, [sp, #16]
  46101c:	ldr	x0, [sp, #24]
  461020:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  461024:	cmp	w0, #0x0
  461028:	cset	w0, eq  // eq = none
  46102c:	and	w0, w0, #0xff
  461030:	and	x0, x0, #0xff
  461034:	cmp	x0, #0x0
  461038:	cset	w0, ne  // ne = any
  46103c:	and	w0, w0, #0xff
  461040:	b	461228 <_obstack_memory_used@@Base+0x40e8>
  461044:	ldr	x0, [sp, #24]
  461048:	ldr	x0, [x0, #8]
  46104c:	cmp	x0, #0x0
  461050:	b.ne	461080 <_obstack_memory_used@@Base+0x3f40>  // b.any
  461054:	ldr	x0, [sp, #24]
  461058:	ldr	x0, [x0, #16]
  46105c:	ldr	x1, [sp, #16]
  461060:	str	x1, [x0]
  461064:	ldr	x0, [sp, #24]
  461068:	ldr	x0, [x0, #8]
  46106c:	add	x1, x0, #0x1
  461070:	ldr	x0, [sp, #24]
  461074:	str	x1, [x0, #8]
  461078:	mov	w0, #0x1                   	// #1
  46107c:	b	461228 <_obstack_memory_used@@Base+0x40e8>
  461080:	ldr	x0, [sp, #24]
  461084:	ldr	x1, [x0]
  461088:	ldr	x0, [sp, #24]
  46108c:	ldr	x0, [x0, #8]
  461090:	cmp	x1, x0
  461094:	b.ne	461100 <_obstack_memory_used@@Base+0x3fc0>  // b.any
  461098:	ldr	x0, [sp, #24]
  46109c:	ldr	x0, [x0]
  4610a0:	lsl	x1, x0, #1
  4610a4:	ldr	x0, [sp, #24]
  4610a8:	str	x1, [x0]
  4610ac:	ldr	x0, [sp, #24]
  4610b0:	ldr	x2, [x0, #16]
  4610b4:	ldr	x0, [sp, #24]
  4610b8:	ldr	x0, [x0]
  4610bc:	lsl	x0, x0, #3
  4610c0:	mov	x1, x0
  4610c4:	mov	x0, x2
  4610c8:	bl	4045e0 <realloc@plt>
  4610cc:	str	x0, [sp, #32]
  4610d0:	ldr	x0, [sp, #32]
  4610d4:	cmp	x0, #0x0
  4610d8:	cset	w0, eq  // eq = none
  4610dc:	and	w0, w0, #0xff
  4610e0:	and	x0, x0, #0xff
  4610e4:	cmp	x0, #0x0
  4610e8:	b.eq	4610f4 <_obstack_memory_used@@Base+0x3fb4>  // b.none
  4610ec:	mov	w0, #0x0                   	// #0
  4610f0:	b	461228 <_obstack_memory_used@@Base+0x40e8>
  4610f4:	ldr	x0, [sp, #24]
  4610f8:	ldr	x1, [sp, #32]
  4610fc:	str	x1, [x0, #16]
  461100:	ldr	x0, [sp, #24]
  461104:	ldr	x0, [x0, #16]
  461108:	ldr	x0, [x0]
  46110c:	ldr	x1, [sp, #16]
  461110:	cmp	x1, x0
  461114:	b.ge	46117c <_obstack_memory_used@@Base+0x403c>  // b.tcont
  461118:	str	xzr, [sp, #40]
  46111c:	ldr	x0, [sp, #24]
  461120:	ldr	x0, [x0, #8]
  461124:	str	x0, [sp, #40]
  461128:	b	46116c <_obstack_memory_used@@Base+0x402c>
  46112c:	ldr	x0, [sp, #24]
  461130:	ldr	x1, [x0, #16]
  461134:	ldr	x0, [sp, #40]
  461138:	lsl	x0, x0, #3
  46113c:	sub	x0, x0, #0x8
  461140:	add	x1, x1, x0
  461144:	ldr	x0, [sp, #24]
  461148:	ldr	x2, [x0, #16]
  46114c:	ldr	x0, [sp, #40]
  461150:	lsl	x0, x0, #3
  461154:	add	x0, x2, x0
  461158:	ldr	x1, [x1]
  46115c:	str	x1, [x0]
  461160:	ldr	x0, [sp, #40]
  461164:	sub	x0, x0, #0x1
  461168:	str	x0, [sp, #40]
  46116c:	ldr	x0, [sp, #40]
  461170:	cmp	x0, #0x0
  461174:	b.gt	46112c <_obstack_memory_used@@Base+0x3fec>
  461178:	b	4611f4 <_obstack_memory_used@@Base+0x40b4>
  46117c:	ldr	x0, [sp, #24]
  461180:	ldr	x0, [x0, #8]
  461184:	str	x0, [sp, #40]
  461188:	b	4611cc <_obstack_memory_used@@Base+0x408c>
  46118c:	ldr	x0, [sp, #24]
  461190:	ldr	x1, [x0, #16]
  461194:	ldr	x0, [sp, #40]
  461198:	lsl	x0, x0, #3
  46119c:	sub	x0, x0, #0x8
  4611a0:	add	x1, x1, x0
  4611a4:	ldr	x0, [sp, #24]
  4611a8:	ldr	x2, [x0, #16]
  4611ac:	ldr	x0, [sp, #40]
  4611b0:	lsl	x0, x0, #3
  4611b4:	add	x0, x2, x0
  4611b8:	ldr	x1, [x1]
  4611bc:	str	x1, [x0]
  4611c0:	ldr	x0, [sp, #40]
  4611c4:	sub	x0, x0, #0x1
  4611c8:	str	x0, [sp, #40]
  4611cc:	ldr	x0, [sp, #24]
  4611d0:	ldr	x1, [x0, #16]
  4611d4:	ldr	x0, [sp, #40]
  4611d8:	lsl	x0, x0, #3
  4611dc:	sub	x0, x0, #0x8
  4611e0:	add	x0, x1, x0
  4611e4:	ldr	x0, [x0]
  4611e8:	ldr	x1, [sp, #16]
  4611ec:	cmp	x1, x0
  4611f0:	b.lt	46118c <_obstack_memory_used@@Base+0x404c>  // b.tstop
  4611f4:	ldr	x0, [sp, #24]
  4611f8:	ldr	x1, [x0, #16]
  4611fc:	ldr	x0, [sp, #40]
  461200:	lsl	x0, x0, #3
  461204:	add	x0, x1, x0
  461208:	ldr	x1, [sp, #16]
  46120c:	str	x1, [x0]
  461210:	ldr	x0, [sp, #24]
  461214:	ldr	x0, [x0, #8]
  461218:	add	x1, x0, #0x1
  46121c:	ldr	x0, [sp, #24]
  461220:	str	x1, [x0, #8]
  461224:	mov	w0, #0x1                   	// #1
  461228:	ldp	x29, x30, [sp], #48
  46122c:	ret
  461230:	stp	x29, x30, [sp, #-48]!
  461234:	mov	x29, sp
  461238:	str	x0, [sp, #24]
  46123c:	str	x1, [sp, #16]
  461240:	ldr	x0, [sp, #24]
  461244:	ldr	x1, [x0]
  461248:	ldr	x0, [sp, #24]
  46124c:	ldr	x0, [x0, #8]
  461250:	cmp	x1, x0
  461254:	b.ne	4612c4 <_obstack_memory_used@@Base+0x4184>  // b.any
  461258:	ldr	x0, [sp, #24]
  46125c:	ldr	x0, [x0]
  461260:	add	x0, x0, #0x1
  461264:	lsl	x1, x0, #1
  461268:	ldr	x0, [sp, #24]
  46126c:	str	x1, [x0]
  461270:	ldr	x0, [sp, #24]
  461274:	ldr	x2, [x0, #16]
  461278:	ldr	x0, [sp, #24]
  46127c:	ldr	x0, [x0]
  461280:	lsl	x0, x0, #3
  461284:	mov	x1, x0
  461288:	mov	x0, x2
  46128c:	bl	4045e0 <realloc@plt>
  461290:	str	x0, [sp, #40]
  461294:	ldr	x0, [sp, #40]
  461298:	cmp	x0, #0x0
  46129c:	cset	w0, eq  // eq = none
  4612a0:	and	w0, w0, #0xff
  4612a4:	and	x0, x0, #0xff
  4612a8:	cmp	x0, #0x0
  4612ac:	b.eq	4612b8 <_obstack_memory_used@@Base+0x4178>  // b.none
  4612b0:	mov	w0, #0x0                   	// #0
  4612b4:	b	4612f4 <_obstack_memory_used@@Base+0x41b4>
  4612b8:	ldr	x0, [sp, #24]
  4612bc:	ldr	x1, [sp, #40]
  4612c0:	str	x1, [x0, #16]
  4612c4:	ldr	x0, [sp, #24]
  4612c8:	ldr	x1, [x0, #16]
  4612cc:	ldr	x0, [sp, #24]
  4612d0:	ldr	x0, [x0, #8]
  4612d4:	add	x3, x0, #0x1
  4612d8:	ldr	x2, [sp, #24]
  4612dc:	str	x3, [x2, #8]
  4612e0:	lsl	x0, x0, #3
  4612e4:	add	x0, x1, x0
  4612e8:	ldr	x1, [sp, #16]
  4612ec:	str	x1, [x0]
  4612f0:	mov	w0, #0x1                   	// #1
  4612f4:	ldp	x29, x30, [sp], #48
  4612f8:	ret
  4612fc:	sub	sp, sp, #0x20
  461300:	str	x0, [sp, #8]
  461304:	str	x1, [sp]
  461308:	ldr	x0, [sp, #8]
  46130c:	cmp	x0, #0x0
  461310:	b.eq	461338 <_obstack_memory_used@@Base+0x41f8>  // b.none
  461314:	ldr	x0, [sp]
  461318:	cmp	x0, #0x0
  46131c:	b.eq	461338 <_obstack_memory_used@@Base+0x41f8>  // b.none
  461320:	ldr	x0, [sp, #8]
  461324:	ldr	x1, [x0, #8]
  461328:	ldr	x0, [sp]
  46132c:	ldr	x0, [x0, #8]
  461330:	cmp	x1, x0
  461334:	b.eq	461340 <_obstack_memory_used@@Base+0x4200>  // b.none
  461338:	mov	w0, #0x0                   	// #0
  46133c:	b	4613ac <_obstack_memory_used@@Base+0x426c>
  461340:	ldr	x0, [sp, #8]
  461344:	ldr	x0, [x0, #8]
  461348:	str	x0, [sp, #24]
  46134c:	b	461390 <_obstack_memory_used@@Base+0x4250>
  461350:	ldr	x0, [sp, #8]
  461354:	ldr	x1, [x0, #16]
  461358:	ldr	x0, [sp, #24]
  46135c:	lsl	x0, x0, #3
  461360:	add	x0, x1, x0
  461364:	ldr	x1, [x0]
  461368:	ldr	x0, [sp]
  46136c:	ldr	x2, [x0, #16]
  461370:	ldr	x0, [sp, #24]
  461374:	lsl	x0, x0, #3
  461378:	add	x0, x2, x0
  46137c:	ldr	x0, [x0]
  461380:	cmp	x1, x0
  461384:	b.eq	461390 <_obstack_memory_used@@Base+0x4250>  // b.none
  461388:	mov	w0, #0x0                   	// #0
  46138c:	b	4613ac <_obstack_memory_used@@Base+0x426c>
  461390:	ldr	x0, [sp, #24]
  461394:	sub	x0, x0, #0x1
  461398:	str	x0, [sp, #24]
  46139c:	ldr	x0, [sp, #24]
  4613a0:	cmp	x0, #0x0
  4613a4:	b.ge	461350 <_obstack_memory_used@@Base+0x4210>  // b.tcont
  4613a8:	mov	w0, #0x1                   	// #1
  4613ac:	add	sp, sp, #0x20
  4613b0:	ret
  4613b4:	sub	sp, sp, #0x30
  4613b8:	str	x0, [sp, #8]
  4613bc:	str	x1, [sp]
  4613c0:	ldr	x0, [sp, #8]
  4613c4:	ldr	x0, [x0, #8]
  4613c8:	cmp	x0, #0x0
  4613cc:	b.gt	4613d8 <_obstack_memory_used@@Base+0x4298>
  4613d0:	mov	x0, #0x0                   	// #0
  4613d4:	b	461484 <_obstack_memory_used@@Base+0x4344>
  4613d8:	str	xzr, [sp, #40]
  4613dc:	ldr	x0, [sp, #8]
  4613e0:	ldr	x0, [x0, #8]
  4613e4:	sub	x0, x0, #0x1
  4613e8:	str	x0, [sp, #32]
  4613ec:	b	461440 <_obstack_memory_used@@Base+0x4300>
  4613f0:	ldr	x1, [sp, #40]
  4613f4:	ldr	x0, [sp, #32]
  4613f8:	add	x0, x1, x0
  4613fc:	lsr	x0, x0, #1
  461400:	str	x0, [sp, #24]
  461404:	ldr	x0, [sp, #8]
  461408:	ldr	x1, [x0, #16]
  46140c:	ldr	x0, [sp, #24]
  461410:	lsl	x0, x0, #3
  461414:	add	x0, x1, x0
  461418:	ldr	x0, [x0]
  46141c:	ldr	x1, [sp]
  461420:	cmp	x1, x0
  461424:	b.le	461438 <_obstack_memory_used@@Base+0x42f8>
  461428:	ldr	x0, [sp, #24]
  46142c:	add	x0, x0, #0x1
  461430:	str	x0, [sp, #40]
  461434:	b	461440 <_obstack_memory_used@@Base+0x4300>
  461438:	ldr	x0, [sp, #24]
  46143c:	str	x0, [sp, #32]
  461440:	ldr	x1, [sp, #40]
  461444:	ldr	x0, [sp, #32]
  461448:	cmp	x1, x0
  46144c:	b.cc	4613f0 <_obstack_memory_used@@Base+0x42b0>  // b.lo, b.ul, b.last
  461450:	ldr	x0, [sp, #8]
  461454:	ldr	x1, [x0, #16]
  461458:	ldr	x0, [sp, #40]
  46145c:	lsl	x0, x0, #3
  461460:	add	x0, x1, x0
  461464:	ldr	x0, [x0]
  461468:	ldr	x1, [sp]
  46146c:	cmp	x1, x0
  461470:	b.ne	461480 <_obstack_memory_used@@Base+0x4340>  // b.any
  461474:	ldr	x0, [sp, #40]
  461478:	add	x0, x0, #0x1
  46147c:	b	461484 <_obstack_memory_used@@Base+0x4344>
  461480:	mov	x0, #0x0                   	// #0
  461484:	add	sp, sp, #0x30
  461488:	ret
  46148c:	sub	sp, sp, #0x10
  461490:	str	x0, [sp, #8]
  461494:	str	x1, [sp]
  461498:	ldr	x0, [sp]
  46149c:	cmp	x0, #0x0
  4614a0:	b.lt	461528 <_obstack_memory_used@@Base+0x43e8>  // b.tstop
  4614a4:	ldr	x0, [sp, #8]
  4614a8:	ldr	x0, [x0, #8]
  4614ac:	ldr	x1, [sp]
  4614b0:	cmp	x1, x0
  4614b4:	b.ge	461528 <_obstack_memory_used@@Base+0x43e8>  // b.tcont
  4614b8:	ldr	x0, [sp, #8]
  4614bc:	ldr	x0, [x0, #8]
  4614c0:	sub	x1, x0, #0x1
  4614c4:	ldr	x0, [sp, #8]
  4614c8:	str	x1, [x0, #8]
  4614cc:	b	461510 <_obstack_memory_used@@Base+0x43d0>
  4614d0:	ldr	x0, [sp, #8]
  4614d4:	ldr	x1, [x0, #16]
  4614d8:	ldr	x0, [sp]
  4614dc:	add	x0, x0, #0x1
  4614e0:	lsl	x0, x0, #3
  4614e4:	add	x1, x1, x0
  4614e8:	ldr	x0, [sp, #8]
  4614ec:	ldr	x2, [x0, #16]
  4614f0:	ldr	x0, [sp]
  4614f4:	lsl	x0, x0, #3
  4614f8:	add	x0, x2, x0
  4614fc:	ldr	x1, [x1]
  461500:	str	x1, [x0]
  461504:	ldr	x0, [sp]
  461508:	add	x0, x0, #0x1
  46150c:	str	x0, [sp]
  461510:	ldr	x0, [sp, #8]
  461514:	ldr	x0, [x0, #8]
  461518:	ldr	x1, [sp]
  46151c:	cmp	x1, x0
  461520:	b.lt	4614d0 <_obstack_memory_used@@Base+0x4390>  // b.tstop
  461524:	b	46152c <_obstack_memory_used@@Base+0x43ec>
  461528:	nop
  46152c:	add	sp, sp, #0x10
  461530:	ret
  461534:	stp	x29, x30, [sp, #-112]!
  461538:	mov	x29, sp
  46153c:	str	x0, [sp, #40]
  461540:	stp	x1, x2, [sp, #24]
  461544:	ldr	x0, [sp, #40]
  461548:	ldr	x1, [x0, #16]
  46154c:	ldr	x0, [sp, #40]
  461550:	ldr	x0, [x0, #8]
  461554:	cmp	x1, x0
  461558:	cset	w0, cs  // cs = hs, nlast
  46155c:	and	w0, w0, #0xff
  461560:	and	x0, x0, #0xff
  461564:	cmp	x0, #0x0
  461568:	b.eq	4617b4 <_obstack_memory_used@@Base+0x4674>  // b.none
  46156c:	ldr	x0, [sp, #40]
  461570:	ldr	x0, [x0, #8]
  461574:	lsl	x0, x0, #1
  461578:	str	x0, [sp, #104]
  46157c:	mov	x0, #0x18                  	// #24
  461580:	str	x0, [sp, #96]
  461584:	mov	x1, #0xffffffffffffffff    	// #-1
  461588:	ldr	x0, [sp, #96]
  46158c:	udiv	x0, x1, x0
  461590:	cmp	x0, #0x0
  461594:	b.lt	4615a8 <_obstack_memory_used@@Base+0x4468>  // b.tstop
  461598:	mov	x1, #0xffffffffffffffff    	// #-1
  46159c:	ldr	x0, [sp, #96]
  4615a0:	udiv	x0, x1, x0
  4615a4:	b	4615ac <_obstack_memory_used@@Base+0x446c>
  4615a8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4615ac:	ldr	x1, [sp, #104]
  4615b0:	cmp	x0, x1
  4615b4:	cset	w0, cc  // cc = lo, ul, last
  4615b8:	and	w0, w0, #0xff
  4615bc:	and	x0, x0, #0xff
  4615c0:	cmp	x0, #0x0
  4615c4:	b.eq	4615d0 <_obstack_memory_used@@Base+0x4490>  // b.none
  4615c8:	mov	x0, #0xffffffffffffffff    	// #-1
  4615cc:	b	4618f0 <_obstack_memory_used@@Base+0x47b0>
  4615d0:	ldr	x0, [sp, #40]
  4615d4:	ldr	x2, [x0]
  4615d8:	ldr	x0, [sp, #104]
  4615dc:	lsl	x0, x0, #4
  4615e0:	mov	x1, x0
  4615e4:	mov	x0, x2
  4615e8:	bl	4045e0 <realloc@plt>
  4615ec:	str	x0, [sp, #88]
  4615f0:	ldr	x0, [sp, #88]
  4615f4:	cmp	x0, #0x0
  4615f8:	cset	w0, eq  // eq = none
  4615fc:	and	w0, w0, #0xff
  461600:	and	x0, x0, #0xff
  461604:	cmp	x0, #0x0
  461608:	b.eq	461614 <_obstack_memory_used@@Base+0x44d4>  // b.none
  46160c:	mov	x0, #0xffffffffffffffff    	// #-1
  461610:	b	4618f0 <_obstack_memory_used@@Base+0x47b0>
  461614:	ldr	x0, [sp, #40]
  461618:	ldr	x1, [sp, #88]
  46161c:	str	x1, [x0]
  461620:	ldr	x0, [sp, #40]
  461624:	ldr	x2, [x0, #24]
  461628:	ldr	x0, [sp, #104]
  46162c:	lsl	x0, x0, #3
  461630:	mov	x1, x0
  461634:	mov	x0, x2
  461638:	bl	4045e0 <realloc@plt>
  46163c:	str	x0, [sp, #80]
  461640:	ldr	x0, [sp, #40]
  461644:	ldr	x2, [x0, #32]
  461648:	ldr	x0, [sp, #104]
  46164c:	lsl	x0, x0, #3
  461650:	mov	x1, x0
  461654:	mov	x0, x2
  461658:	bl	4045e0 <realloc@plt>
  46165c:	str	x0, [sp, #72]
  461660:	ldr	x0, [sp, #40]
  461664:	ldr	x2, [x0, #40]
  461668:	ldr	x1, [sp, #104]
  46166c:	mov	x0, x1
  461670:	lsl	x0, x0, #1
  461674:	add	x0, x0, x1
  461678:	lsl	x0, x0, #3
  46167c:	mov	x1, x0
  461680:	mov	x0, x2
  461684:	bl	4045e0 <realloc@plt>
  461688:	str	x0, [sp, #64]
  46168c:	ldr	x0, [sp, #40]
  461690:	ldr	x2, [x0, #48]
  461694:	ldr	x1, [sp, #104]
  461698:	mov	x0, x1
  46169c:	lsl	x0, x0, #1
  4616a0:	add	x0, x0, x1
  4616a4:	lsl	x0, x0, #3
  4616a8:	mov	x1, x0
  4616ac:	mov	x0, x2
  4616b0:	bl	4045e0 <realloc@plt>
  4616b4:	str	x0, [sp, #56]
  4616b8:	ldr	x0, [sp, #80]
  4616bc:	cmp	x0, #0x0
  4616c0:	cset	w0, eq  // eq = none
  4616c4:	and	w0, w0, #0xff
  4616c8:	and	x0, x0, #0xff
  4616cc:	cmp	x0, #0x0
  4616d0:	b.ne	4616f0 <_obstack_memory_used@@Base+0x45b0>  // b.any
  4616d4:	ldr	x0, [sp, #72]
  4616d8:	cmp	x0, #0x0
  4616dc:	cset	w0, eq  // eq = none
  4616e0:	and	w0, w0, #0xff
  4616e4:	and	x0, x0, #0xff
  4616e8:	cmp	x0, #0x0
  4616ec:	b.eq	4616f8 <_obstack_memory_used@@Base+0x45b8>  // b.none
  4616f0:	mov	w0, #0x1                   	// #1
  4616f4:	b	4616fc <_obstack_memory_used@@Base+0x45bc>
  4616f8:	mov	w0, #0x0                   	// #0
  4616fc:	cmp	w0, #0x0
  461700:	b.ne	461720 <_obstack_memory_used@@Base+0x45e0>  // b.any
  461704:	ldr	x0, [sp, #64]
  461708:	cmp	x0, #0x0
  46170c:	cset	w0, eq  // eq = none
  461710:	and	w0, w0, #0xff
  461714:	and	x0, x0, #0xff
  461718:	cmp	x0, #0x0
  46171c:	b.eq	461728 <_obstack_memory_used@@Base+0x45e8>  // b.none
  461720:	mov	w0, #0x1                   	// #1
  461724:	b	46172c <_obstack_memory_used@@Base+0x45ec>
  461728:	mov	w0, #0x0                   	// #0
  46172c:	cmp	w0, #0x0
  461730:	b.ne	461750 <_obstack_memory_used@@Base+0x4610>  // b.any
  461734:	ldr	x0, [sp, #56]
  461738:	cmp	x0, #0x0
  46173c:	cset	w0, eq  // eq = none
  461740:	and	w0, w0, #0xff
  461744:	and	x0, x0, #0xff
  461748:	cmp	x0, #0x0
  46174c:	b.eq	461778 <_obstack_memory_used@@Base+0x4638>  // b.none
  461750:	ldr	x0, [sp, #80]
  461754:	bl	404880 <free@plt>
  461758:	ldr	x0, [sp, #72]
  46175c:	bl	404880 <free@plt>
  461760:	ldr	x0, [sp, #64]
  461764:	bl	404880 <free@plt>
  461768:	ldr	x0, [sp, #56]
  46176c:	bl	404880 <free@plt>
  461770:	mov	x0, #0xffffffffffffffff    	// #-1
  461774:	b	4618f0 <_obstack_memory_used@@Base+0x47b0>
  461778:	ldr	x0, [sp, #40]
  46177c:	ldr	x1, [sp, #80]
  461780:	str	x1, [x0, #24]
  461784:	ldr	x0, [sp, #40]
  461788:	ldr	x1, [sp, #72]
  46178c:	str	x1, [x0, #32]
  461790:	ldr	x0, [sp, #40]
  461794:	ldr	x1, [sp, #64]
  461798:	str	x1, [x0, #40]
  46179c:	ldr	x0, [sp, #40]
  4617a0:	ldr	x1, [sp, #56]
  4617a4:	str	x1, [x0, #48]
  4617a8:	ldr	x0, [sp, #40]
  4617ac:	ldr	x1, [sp, #104]
  4617b0:	str	x1, [x0, #8]
  4617b4:	ldr	x0, [sp, #40]
  4617b8:	ldr	x1, [x0]
  4617bc:	ldr	x0, [sp, #40]
  4617c0:	ldr	x0, [x0, #16]
  4617c4:	lsl	x0, x0, #4
  4617c8:	add	x2, x1, x0
  4617cc:	ldp	x0, x1, [sp, #24]
  4617d0:	stp	x0, x1, [x2]
  4617d4:	ldr	x0, [sp, #40]
  4617d8:	ldr	x1, [x0]
  4617dc:	ldr	x0, [sp, #40]
  4617e0:	ldr	x0, [x0, #16]
  4617e4:	lsl	x0, x0, #4
  4617e8:	add	x0, x1, x0
  4617ec:	ldr	w1, [x0, #8]
  4617f0:	and	w1, w1, #0xfffc00ff
  4617f4:	str	w1, [x0, #8]
  4617f8:	ldrb	w0, [sp, #32]
  4617fc:	cmp	w0, #0x5
  461800:	b.ne	461814 <_obstack_memory_used@@Base+0x46d4>  // b.any
  461804:	ldr	x0, [sp, #40]
  461808:	ldr	w0, [x0, #180]
  46180c:	cmp	w0, #0x1
  461810:	b.gt	461820 <_obstack_memory_used@@Base+0x46e0>
  461814:	ldrb	w0, [sp, #32]
  461818:	cmp	w0, #0x6
  46181c:	b.ne	461828 <_obstack_memory_used@@Base+0x46e8>  // b.any
  461820:	mov	w2, #0x1                   	// #1
  461824:	b	46182c <_obstack_memory_used@@Base+0x46ec>
  461828:	mov	w2, #0x0                   	// #0
  46182c:	ldr	x0, [sp, #40]
  461830:	ldr	x1, [x0]
  461834:	ldr	x0, [sp, #40]
  461838:	ldr	x0, [x0, #16]
  46183c:	lsl	x0, x0, #4
  461840:	add	x1, x1, x0
  461844:	mov	w0, w2
  461848:	and	w0, w0, #0x1
  46184c:	and	w2, w0, #0xff
  461850:	ldrb	w0, [x1, #10]
  461854:	bfi	w0, w2, #4, #1
  461858:	strb	w0, [x1, #10]
  46185c:	ldr	x0, [sp, #40]
  461860:	ldr	x1, [x0, #24]
  461864:	ldr	x0, [sp, #40]
  461868:	ldr	x0, [x0, #16]
  46186c:	lsl	x0, x0, #3
  461870:	add	x0, x1, x0
  461874:	mov	x1, #0xffffffffffffffff    	// #-1
  461878:	str	x1, [x0]
  46187c:	ldr	x0, [sp, #40]
  461880:	ldr	x2, [x0, #40]
  461884:	ldr	x0, [sp, #40]
  461888:	ldr	x1, [x0, #16]
  46188c:	mov	x0, x1
  461890:	lsl	x0, x0, #1
  461894:	add	x0, x0, x1
  461898:	lsl	x0, x0, #3
  46189c:	add	x0, x2, x0
  4618a0:	mov	x2, #0x18                  	// #24
  4618a4:	mov	w1, #0x0                   	// #0
  4618a8:	bl	4044d0 <memset@plt>
  4618ac:	ldr	x0, [sp, #40]
  4618b0:	ldr	x2, [x0, #48]
  4618b4:	ldr	x0, [sp, #40]
  4618b8:	ldr	x1, [x0, #16]
  4618bc:	mov	x0, x1
  4618c0:	lsl	x0, x0, #1
  4618c4:	add	x0, x0, x1
  4618c8:	lsl	x0, x0, #3
  4618cc:	add	x0, x2, x0
  4618d0:	mov	x2, #0x18                  	// #24
  4618d4:	mov	w1, #0x0                   	// #0
  4618d8:	bl	4044d0 <memset@plt>
  4618dc:	ldr	x0, [sp, #40]
  4618e0:	ldr	x0, [x0, #16]
  4618e4:	add	x2, x0, #0x1
  4618e8:	ldr	x1, [sp, #40]
  4618ec:	str	x2, [x1, #16]
  4618f0:	ldp	x29, x30, [sp], #112
  4618f4:	ret
  4618f8:	sub	sp, sp, #0x20
  4618fc:	str	x0, [sp, #8]
  461900:	str	w1, [sp, #4]
  461904:	ldr	x0, [sp, #8]
  461908:	ldr	x1, [x0, #8]
  46190c:	ldr	w0, [sp, #4]
  461910:	add	x0, x1, x0
  461914:	str	x0, [sp, #24]
  461918:	str	xzr, [sp, #16]
  46191c:	b	461954 <_obstack_memory_used@@Base+0x4814>
  461920:	ldr	x0, [sp, #8]
  461924:	ldr	x1, [x0, #16]
  461928:	ldr	x0, [sp, #16]
  46192c:	lsl	x0, x0, #3
  461930:	add	x0, x1, x0
  461934:	ldr	x0, [x0]
  461938:	mov	x1, x0
  46193c:	ldr	x0, [sp, #24]
  461940:	add	x0, x0, x1
  461944:	str	x0, [sp, #24]
  461948:	ldr	x0, [sp, #16]
  46194c:	add	x0, x0, #0x1
  461950:	str	x0, [sp, #16]
  461954:	ldr	x0, [sp, #8]
  461958:	ldr	x0, [x0, #8]
  46195c:	ldr	x1, [sp, #16]
  461960:	cmp	x1, x0
  461964:	b.lt	461920 <_obstack_memory_used@@Base+0x47e0>  // b.tstop
  461968:	ldr	x0, [sp, #24]
  46196c:	add	sp, sp, #0x20
  461970:	ret
  461974:	stp	x29, x30, [sp, #-96]!
  461978:	mov	x29, sp
  46197c:	str	x0, [sp, #40]
  461980:	str	x1, [sp, #32]
  461984:	str	x2, [sp, #24]
  461988:	ldr	x0, [sp, #24]
  46198c:	ldr	x0, [x0, #8]
  461990:	cmp	x0, #0x0
  461994:	cset	w0, eq  // eq = none
  461998:	and	w0, w0, #0xff
  46199c:	and	x0, x0, #0xff
  4619a0:	cmp	x0, #0x0
  4619a4:	b.eq	4619b8 <_obstack_memory_used@@Base+0x4878>  // b.none
  4619a8:	ldr	x0, [sp, #40]
  4619ac:	str	wzr, [x0]
  4619b0:	mov	x0, #0x0                   	// #0
  4619b4:	b	461ab8 <_obstack_memory_used@@Base+0x4978>
  4619b8:	mov	w1, #0x0                   	// #0
  4619bc:	ldr	x0, [sp, #24]
  4619c0:	bl	4618f8 <_obstack_memory_used@@Base+0x47b8>
  4619c4:	str	x0, [sp, #80]
  4619c8:	ldr	x0, [sp, #32]
  4619cc:	ldr	x2, [x0, #64]
  4619d0:	ldr	x0, [sp, #32]
  4619d4:	ldr	x1, [x0, #136]
  4619d8:	ldr	x0, [sp, #80]
  4619dc:	and	x1, x1, x0
  4619e0:	mov	x0, x1
  4619e4:	lsl	x0, x0, #1
  4619e8:	add	x0, x0, x1
  4619ec:	lsl	x0, x0, #3
  4619f0:	add	x0, x2, x0
  4619f4:	str	x0, [sp, #72]
  4619f8:	str	xzr, [sp, #88]
  4619fc:	b	461a64 <_obstack_memory_used@@Base+0x4924>
  461a00:	ldr	x0, [sp, #72]
  461a04:	ldr	x1, [x0, #16]
  461a08:	ldr	x0, [sp, #88]
  461a0c:	lsl	x0, x0, #3
  461a10:	add	x0, x1, x0
  461a14:	ldr	x0, [x0]
  461a18:	str	x0, [sp, #56]
  461a1c:	ldr	x0, [sp, #56]
  461a20:	ldr	x0, [x0]
  461a24:	ldr	x1, [sp, #80]
  461a28:	cmp	x1, x0
  461a2c:	b.ne	461a54 <_obstack_memory_used@@Base+0x4914>  // b.any
  461a30:	ldr	x0, [sp, #56]
  461a34:	add	x0, x0, #0x8
  461a38:	ldr	x1, [sp, #24]
  461a3c:	bl	4612fc <_obstack_memory_used@@Base+0x41bc>
  461a40:	and	w0, w0, #0xff
  461a44:	cmp	w0, #0x0
  461a48:	b.eq	461a58 <_obstack_memory_used@@Base+0x4918>  // b.none
  461a4c:	ldr	x0, [sp, #56]
  461a50:	b	461ab8 <_obstack_memory_used@@Base+0x4978>
  461a54:	nop
  461a58:	ldr	x0, [sp, #88]
  461a5c:	add	x0, x0, #0x1
  461a60:	str	x0, [sp, #88]
  461a64:	ldr	x0, [sp, #72]
  461a68:	ldr	x0, [x0]
  461a6c:	ldr	x1, [sp, #88]
  461a70:	cmp	x1, x0
  461a74:	b.lt	461a00 <_obstack_memory_used@@Base+0x48c0>  // b.tstop
  461a78:	ldr	x2, [sp, #80]
  461a7c:	ldr	x1, [sp, #24]
  461a80:	ldr	x0, [sp, #32]
  461a84:	bl	461ea8 <_obstack_memory_used@@Base+0x4d68>
  461a88:	str	x0, [sp, #64]
  461a8c:	ldr	x0, [sp, #64]
  461a90:	cmp	x0, #0x0
  461a94:	cset	w0, eq  // eq = none
  461a98:	and	w0, w0, #0xff
  461a9c:	and	x0, x0, #0xff
  461aa0:	cmp	x0, #0x0
  461aa4:	b.eq	461ab4 <_obstack_memory_used@@Base+0x4974>  // b.none
  461aa8:	ldr	x0, [sp, #40]
  461aac:	mov	w1, #0xc                   	// #12
  461ab0:	str	w1, [x0]
  461ab4:	ldr	x0, [sp, #64]
  461ab8:	ldp	x29, x30, [sp], #96
  461abc:	ret
  461ac0:	stp	x29, x30, [sp, #-96]!
  461ac4:	mov	x29, sp
  461ac8:	str	x0, [sp, #40]
  461acc:	str	x1, [sp, #32]
  461ad0:	str	x2, [sp, #24]
  461ad4:	str	w3, [sp, #20]
  461ad8:	ldr	x0, [sp, #24]
  461adc:	ldr	x0, [x0, #8]
  461ae0:	cmp	x0, #0x0
  461ae4:	b.ne	461af8 <_obstack_memory_used@@Base+0x49b8>  // b.any
  461ae8:	ldr	x0, [sp, #40]
  461aec:	str	wzr, [x0]
  461af0:	mov	x0, #0x0                   	// #0
  461af4:	b	461c18 <_obstack_memory_used@@Base+0x4ad8>
  461af8:	ldr	w1, [sp, #20]
  461afc:	ldr	x0, [sp, #24]
  461b00:	bl	4618f8 <_obstack_memory_used@@Base+0x47b8>
  461b04:	str	x0, [sp, #80]
  461b08:	ldr	x0, [sp, #32]
  461b0c:	ldr	x2, [x0, #64]
  461b10:	ldr	x0, [sp, #32]
  461b14:	ldr	x1, [x0, #136]
  461b18:	ldr	x0, [sp, #80]
  461b1c:	and	x1, x1, x0
  461b20:	mov	x0, x1
  461b24:	lsl	x0, x0, #1
  461b28:	add	x0, x0, x1
  461b2c:	lsl	x0, x0, #3
  461b30:	add	x0, x2, x0
  461b34:	str	x0, [sp, #72]
  461b38:	str	xzr, [sp, #88]
  461b3c:	b	461bc0 <_obstack_memory_used@@Base+0x4a80>
  461b40:	ldr	x0, [sp, #72]
  461b44:	ldr	x1, [x0, #16]
  461b48:	ldr	x0, [sp, #88]
  461b4c:	lsl	x0, x0, #3
  461b50:	add	x0, x1, x0
  461b54:	ldr	x0, [x0]
  461b58:	str	x0, [sp, #56]
  461b5c:	ldr	x0, [sp, #56]
  461b60:	ldr	x0, [x0]
  461b64:	ldr	x1, [sp, #80]
  461b68:	cmp	x1, x0
  461b6c:	b.ne	461bb4 <_obstack_memory_used@@Base+0x4a74>  // b.any
  461b70:	ldr	x0, [sp, #56]
  461b74:	ldrb	w0, [x0, #104]
  461b78:	ubfx	x0, x0, #0, #4
  461b7c:	and	w0, w0, #0xff
  461b80:	mov	w1, w0
  461b84:	ldr	w0, [sp, #20]
  461b88:	cmp	w0, w1
  461b8c:	b.ne	461bb4 <_obstack_memory_used@@Base+0x4a74>  // b.any
  461b90:	ldr	x0, [sp, #56]
  461b94:	ldr	x0, [x0, #80]
  461b98:	ldr	x1, [sp, #24]
  461b9c:	bl	4612fc <_obstack_memory_used@@Base+0x41bc>
  461ba0:	and	w0, w0, #0xff
  461ba4:	cmp	w0, #0x0
  461ba8:	b.eq	461bb4 <_obstack_memory_used@@Base+0x4a74>  // b.none
  461bac:	ldr	x0, [sp, #56]
  461bb0:	b	461c18 <_obstack_memory_used@@Base+0x4ad8>
  461bb4:	ldr	x0, [sp, #88]
  461bb8:	add	x0, x0, #0x1
  461bbc:	str	x0, [sp, #88]
  461bc0:	ldr	x0, [sp, #72]
  461bc4:	ldr	x0, [x0]
  461bc8:	ldr	x1, [sp, #88]
  461bcc:	cmp	x1, x0
  461bd0:	b.lt	461b40 <_obstack_memory_used@@Base+0x4a00>  // b.tstop
  461bd4:	ldr	x3, [sp, #80]
  461bd8:	ldr	w2, [sp, #20]
  461bdc:	ldr	x1, [sp, #24]
  461be0:	ldr	x0, [sp, #32]
  461be4:	bl	4620b8 <_obstack_memory_used@@Base+0x4f78>
  461be8:	str	x0, [sp, #64]
  461bec:	ldr	x0, [sp, #64]
  461bf0:	cmp	x0, #0x0
  461bf4:	cset	w0, eq  // eq = none
  461bf8:	and	w0, w0, #0xff
  461bfc:	and	x0, x0, #0xff
  461c00:	cmp	x0, #0x0
  461c04:	b.eq	461c14 <_obstack_memory_used@@Base+0x4ad4>  // b.none
  461c08:	ldr	x0, [sp, #40]
  461c0c:	mov	w1, #0xc                   	// #12
  461c10:	str	w1, [x0]
  461c14:	ldr	x0, [sp, #64]
  461c18:	ldp	x29, x30, [sp], #96
  461c1c:	ret
  461c20:	stp	x29, x30, [sp, #-96]!
  461c24:	mov	x29, sp
  461c28:	str	x0, [sp, #40]
  461c2c:	str	x1, [sp, #32]
  461c30:	str	x2, [sp, #24]
  461c34:	ldr	x0, [sp, #32]
  461c38:	ldr	x1, [sp, #24]
  461c3c:	str	x1, [x0]
  461c40:	ldr	x0, [sp, #32]
  461c44:	add	x2, x0, #0x20
  461c48:	ldr	x0, [sp, #32]
  461c4c:	ldr	x0, [x0, #16]
  461c50:	mov	x1, x0
  461c54:	mov	x0, x2
  461c58:	bl	4600bc <_obstack_memory_used@@Base+0x2f7c>
  461c5c:	str	w0, [sp, #84]
  461c60:	ldr	w0, [sp, #84]
  461c64:	cmp	w0, #0x0
  461c68:	cset	w0, ne  // ne = any
  461c6c:	and	w0, w0, #0xff
  461c70:	and	x0, x0, #0xff
  461c74:	cmp	x0, #0x0
  461c78:	b.eq	461c84 <_obstack_memory_used@@Base+0x4b44>  // b.none
  461c7c:	mov	w0, #0xc                   	// #12
  461c80:	b	461e10 <_obstack_memory_used@@Base+0x4cd0>
  461c84:	str	xzr, [sp, #88]
  461c88:	b	461d04 <_obstack_memory_used@@Base+0x4bc4>
  461c8c:	ldr	x0, [sp, #32]
  461c90:	ldr	x1, [x0, #24]
  461c94:	ldr	x0, [sp, #88]
  461c98:	lsl	x0, x0, #3
  461c9c:	add	x0, x1, x0
  461ca0:	ldr	x0, [x0]
  461ca4:	str	x0, [sp, #48]
  461ca8:	ldr	x0, [sp, #40]
  461cac:	ldr	x1, [x0]
  461cb0:	ldr	x0, [sp, #48]
  461cb4:	lsl	x0, x0, #4
  461cb8:	add	x0, x1, x0
  461cbc:	ldrb	w0, [x0, #8]
  461cc0:	and	w0, w0, #0x8
  461cc4:	cmp	w0, #0x0
  461cc8:	b.ne	461cf8 <_obstack_memory_used@@Base+0x4bb8>  // b.any
  461ccc:	ldr	x0, [sp, #32]
  461cd0:	add	x0, x0, #0x20
  461cd4:	ldr	x1, [sp, #48]
  461cd8:	bl	461230 <_obstack_memory_used@@Base+0x40f0>
  461cdc:	and	w0, w0, #0xff
  461ce0:	eor	w0, w0, #0x1
  461ce4:	and	w0, w0, #0xff
  461ce8:	cmp	w0, #0x0
  461cec:	b.eq	461cf8 <_obstack_memory_used@@Base+0x4bb8>  // b.none
  461cf0:	mov	w0, #0xc                   	// #12
  461cf4:	b	461e10 <_obstack_memory_used@@Base+0x4cd0>
  461cf8:	ldr	x0, [sp, #88]
  461cfc:	add	x0, x0, #0x1
  461d00:	str	x0, [sp, #88]
  461d04:	ldr	x0, [sp, #32]
  461d08:	ldr	x0, [x0, #16]
  461d0c:	ldr	x1, [sp, #88]
  461d10:	cmp	x1, x0
  461d14:	b.lt	461c8c <_obstack_memory_used@@Base+0x4b4c>  // b.tstop
  461d18:	ldr	x0, [sp, #40]
  461d1c:	ldr	x2, [x0, #64]
  461d20:	ldr	x0, [sp, #40]
  461d24:	ldr	x1, [x0, #136]
  461d28:	ldr	x0, [sp, #24]
  461d2c:	and	x1, x1, x0
  461d30:	mov	x0, x1
  461d34:	lsl	x0, x0, #1
  461d38:	add	x0, x0, x1
  461d3c:	lsl	x0, x0, #3
  461d40:	add	x0, x2, x0
  461d44:	str	x0, [sp, #72]
  461d48:	ldr	x0, [sp, #72]
  461d4c:	ldr	x1, [x0, #8]
  461d50:	ldr	x0, [sp, #72]
  461d54:	ldr	x0, [x0]
  461d58:	cmp	x1, x0
  461d5c:	cset	w0, le
  461d60:	and	w0, w0, #0xff
  461d64:	and	x0, x0, #0xff
  461d68:	cmp	x0, #0x0
  461d6c:	b.eq	461de0 <_obstack_memory_used@@Base+0x4ca0>  // b.none
  461d70:	ldr	x0, [sp, #72]
  461d74:	ldr	x0, [x0]
  461d78:	add	x0, x0, #0x1
  461d7c:	lsl	x0, x0, #1
  461d80:	str	x0, [sp, #64]
  461d84:	ldr	x0, [sp, #72]
  461d88:	ldr	x2, [x0, #16]
  461d8c:	ldr	x0, [sp, #64]
  461d90:	lsl	x0, x0, #3
  461d94:	mov	x1, x0
  461d98:	mov	x0, x2
  461d9c:	bl	4045e0 <realloc@plt>
  461da0:	str	x0, [sp, #56]
  461da4:	ldr	x0, [sp, #56]
  461da8:	cmp	x0, #0x0
  461dac:	cset	w0, eq  // eq = none
  461db0:	and	w0, w0, #0xff
  461db4:	and	x0, x0, #0xff
  461db8:	cmp	x0, #0x0
  461dbc:	b.eq	461dc8 <_obstack_memory_used@@Base+0x4c88>  // b.none
  461dc0:	mov	w0, #0xc                   	// #12
  461dc4:	b	461e10 <_obstack_memory_used@@Base+0x4cd0>
  461dc8:	ldr	x0, [sp, #72]
  461dcc:	ldr	x1, [sp, #56]
  461dd0:	str	x1, [x0, #16]
  461dd4:	ldr	x0, [sp, #72]
  461dd8:	ldr	x1, [sp, #64]
  461ddc:	str	x1, [x0, #8]
  461de0:	ldr	x0, [sp, #72]
  461de4:	ldr	x1, [x0, #16]
  461de8:	ldr	x0, [sp, #72]
  461dec:	ldr	x0, [x0]
  461df0:	add	x3, x0, #0x1
  461df4:	ldr	x2, [sp, #72]
  461df8:	str	x3, [x2]
  461dfc:	lsl	x0, x0, #3
  461e00:	add	x0, x1, x0
  461e04:	ldr	x1, [sp, #32]
  461e08:	str	x1, [x0]
  461e0c:	mov	w0, #0x0                   	// #0
  461e10:	ldp	x29, x30, [sp], #96
  461e14:	ret
  461e18:	stp	x29, x30, [sp, #-32]!
  461e1c:	mov	x29, sp
  461e20:	str	x0, [sp, #24]
  461e24:	ldr	x0, [sp, #24]
  461e28:	ldr	x0, [x0, #48]
  461e2c:	bl	404880 <free@plt>
  461e30:	ldr	x0, [sp, #24]
  461e34:	ldr	x0, [x0, #72]
  461e38:	bl	404880 <free@plt>
  461e3c:	ldr	x0, [sp, #24]
  461e40:	ldr	x1, [x0, #80]
  461e44:	ldr	x0, [sp, #24]
  461e48:	add	x0, x0, #0x8
  461e4c:	cmp	x1, x0
  461e50:	b.eq	461e70 <_obstack_memory_used@@Base+0x4d30>  // b.none
  461e54:	ldr	x0, [sp, #24]
  461e58:	ldr	x0, [x0, #80]
  461e5c:	ldr	x0, [x0, #16]
  461e60:	bl	404880 <free@plt>
  461e64:	ldr	x0, [sp, #24]
  461e68:	ldr	x0, [x0, #80]
  461e6c:	bl	404880 <free@plt>
  461e70:	ldr	x0, [sp, #24]
  461e74:	ldr	x0, [x0, #24]
  461e78:	bl	404880 <free@plt>
  461e7c:	ldr	x0, [sp, #24]
  461e80:	ldr	x0, [x0, #96]
  461e84:	bl	404880 <free@plt>
  461e88:	ldr	x0, [sp, #24]
  461e8c:	ldr	x0, [x0, #88]
  461e90:	bl	404880 <free@plt>
  461e94:	ldr	x0, [sp, #24]
  461e98:	bl	404880 <free@plt>
  461e9c:	nop
  461ea0:	ldp	x29, x30, [sp], #32
  461ea4:	ret
  461ea8:	stp	x29, x30, [sp, #-96]!
  461eac:	mov	x29, sp
  461eb0:	str	x0, [sp, #40]
  461eb4:	str	x1, [sp, #32]
  461eb8:	str	x2, [sp, #24]
  461ebc:	mov	x1, #0x1                   	// #1
  461ec0:	mov	x0, #0x70                  	// #112
  461ec4:	bl	404560 <calloc@plt>
  461ec8:	str	x0, [sp, #80]
  461ecc:	ldr	x0, [sp, #80]
  461ed0:	cmp	x0, #0x0
  461ed4:	cset	w0, eq  // eq = none
  461ed8:	and	w0, w0, #0xff
  461edc:	and	x0, x0, #0xff
  461ee0:	cmp	x0, #0x0
  461ee4:	b.eq	461ef0 <_obstack_memory_used@@Base+0x4db0>  // b.none
  461ee8:	mov	x0, #0x0                   	// #0
  461eec:	b	4620b0 <_obstack_memory_used@@Base+0x4f70>
  461ef0:	ldr	x0, [sp, #80]
  461ef4:	add	x0, x0, #0x8
  461ef8:	ldr	x1, [sp, #32]
  461efc:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  461f00:	str	w0, [sp, #76]
  461f04:	ldr	w0, [sp, #76]
  461f08:	cmp	w0, #0x0
  461f0c:	cset	w0, ne  // ne = any
  461f10:	and	w0, w0, #0xff
  461f14:	and	x0, x0, #0xff
  461f18:	cmp	x0, #0x0
  461f1c:	b.eq	461f30 <_obstack_memory_used@@Base+0x4df0>  // b.none
  461f20:	ldr	x0, [sp, #80]
  461f24:	bl	404880 <free@plt>
  461f28:	mov	x0, #0x0                   	// #0
  461f2c:	b	4620b0 <_obstack_memory_used@@Base+0x4f70>
  461f30:	ldr	x0, [sp, #80]
  461f34:	add	x1, x0, #0x8
  461f38:	ldr	x0, [sp, #80]
  461f3c:	str	x1, [x0, #80]
  461f40:	str	xzr, [sp, #88]
  461f44:	b	46205c <_obstack_memory_used@@Base+0x4f1c>
  461f48:	ldr	x0, [sp, #40]
  461f4c:	ldr	x1, [x0]
  461f50:	ldr	x0, [sp, #32]
  461f54:	ldr	x2, [x0, #16]
  461f58:	ldr	x0, [sp, #88]
  461f5c:	lsl	x0, x0, #3
  461f60:	add	x0, x2, x0
  461f64:	ldr	x0, [x0]
  461f68:	lsl	x0, x0, #4
  461f6c:	add	x0, x1, x0
  461f70:	str	x0, [sp, #64]
  461f74:	ldr	x0, [sp, #64]
  461f78:	ldrb	w0, [x0, #8]
  461f7c:	str	w0, [sp, #60]
  461f80:	ldr	w0, [sp, #60]
  461f84:	cmp	w0, #0x1
  461f88:	b.ne	461fa0 <_obstack_memory_used@@Base+0x4e60>  // b.any
  461f8c:	ldr	x0, [sp, #64]
  461f90:	ldr	w0, [x0, #8]
  461f94:	and	w0, w0, #0x3ff00
  461f98:	cmp	w0, #0x0
  461f9c:	b.eq	46204c <_obstack_memory_used@@Base+0x4f0c>  // b.none
  461fa0:	ldr	x0, [sp, #80]
  461fa4:	ldrb	w0, [x0, #104]
  461fa8:	ubfx	x0, x0, #5, #1
  461fac:	and	w1, w0, #0xff
  461fb0:	ldr	x0, [sp, #64]
  461fb4:	ldrb	w0, [x0, #10]
  461fb8:	ubfx	x0, x0, #4, #1
  461fbc:	and	w0, w0, #0xff
  461fc0:	orr	w0, w1, w0
  461fc4:	and	w2, w0, #0xff
  461fc8:	ldr	x1, [sp, #80]
  461fcc:	ldrb	w0, [x1, #104]
  461fd0:	bfi	w0, w2, #5, #1
  461fd4:	strb	w0, [x1, #104]
  461fd8:	ldr	w0, [sp, #60]
  461fdc:	cmp	w0, #0x2
  461fe0:	b.ne	461ff8 <_obstack_memory_used@@Base+0x4eb8>  // b.any
  461fe4:	ldr	x0, [sp, #80]
  461fe8:	ldrb	w1, [x0, #104]
  461fec:	orr	w1, w1, #0x10
  461ff0:	strb	w1, [x0, #104]
  461ff4:	b	462050 <_obstack_memory_used@@Base+0x4f10>
  461ff8:	ldr	w0, [sp, #60]
  461ffc:	cmp	w0, #0x4
  462000:	b.ne	462018 <_obstack_memory_used@@Base+0x4ed8>  // b.any
  462004:	ldr	x0, [sp, #80]
  462008:	ldrb	w1, [x0, #104]
  46200c:	orr	w1, w1, #0x40
  462010:	strb	w1, [x0, #104]
  462014:	b	462050 <_obstack_memory_used@@Base+0x4f10>
  462018:	ldr	w0, [sp, #60]
  46201c:	cmp	w0, #0xc
  462020:	b.eq	462038 <_obstack_memory_used@@Base+0x4ef8>  // b.none
  462024:	ldr	x0, [sp, #64]
  462028:	ldr	w0, [x0, #8]
  46202c:	and	w0, w0, #0x3ff00
  462030:	cmp	w0, #0x0
  462034:	b.eq	462050 <_obstack_memory_used@@Base+0x4f10>  // b.none
  462038:	ldr	x0, [sp, #80]
  46203c:	ldrb	w1, [x0, #104]
  462040:	orr	w1, w1, #0xffffff80
  462044:	strb	w1, [x0, #104]
  462048:	b	462050 <_obstack_memory_used@@Base+0x4f10>
  46204c:	nop
  462050:	ldr	x0, [sp, #88]
  462054:	add	x0, x0, #0x1
  462058:	str	x0, [sp, #88]
  46205c:	ldr	x0, [sp, #32]
  462060:	ldr	x0, [x0, #8]
  462064:	ldr	x1, [sp, #88]
  462068:	cmp	x1, x0
  46206c:	b.lt	461f48 <_obstack_memory_used@@Base+0x4e08>  // b.tstop
  462070:	ldr	x2, [sp, #24]
  462074:	ldr	x1, [sp, #80]
  462078:	ldr	x0, [sp, #40]
  46207c:	bl	461c20 <_obstack_memory_used@@Base+0x4ae0>
  462080:	str	w0, [sp, #76]
  462084:	ldr	w0, [sp, #76]
  462088:	cmp	w0, #0x0
  46208c:	cset	w0, ne  // ne = any
  462090:	and	w0, w0, #0xff
  462094:	and	x0, x0, #0xff
  462098:	cmp	x0, #0x0
  46209c:	b.eq	4620ac <_obstack_memory_used@@Base+0x4f6c>  // b.none
  4620a0:	ldr	x0, [sp, #80]
  4620a4:	bl	461e18 <_obstack_memory_used@@Base+0x4cd8>
  4620a8:	str	xzr, [sp, #80]
  4620ac:	ldr	x0, [sp, #80]
  4620b0:	ldp	x29, x30, [sp], #96
  4620b4:	ret
  4620b8:	stp	x29, x30, [sp, #-96]!
  4620bc:	mov	x29, sp
  4620c0:	str	x0, [sp, #40]
  4620c4:	str	x1, [sp, #32]
  4620c8:	str	w2, [sp, #28]
  4620cc:	str	x3, [sp, #16]
  4620d0:	str	xzr, [sp, #80]
  4620d4:	mov	x1, #0x1                   	// #1
  4620d8:	mov	x0, #0x70                  	// #112
  4620dc:	bl	404560 <calloc@plt>
  4620e0:	str	x0, [sp, #72]
  4620e4:	ldr	x0, [sp, #72]
  4620e8:	cmp	x0, #0x0
  4620ec:	cset	w0, eq  // eq = none
  4620f0:	and	w0, w0, #0xff
  4620f4:	and	x0, x0, #0xff
  4620f8:	cmp	x0, #0x0
  4620fc:	b.eq	462108 <_obstack_memory_used@@Base+0x4fc8>  // b.none
  462100:	mov	x0, #0x0                   	// #0
  462104:	b	462404 <_obstack_memory_used@@Base+0x52c4>
  462108:	ldr	x0, [sp, #72]
  46210c:	add	x0, x0, #0x8
  462110:	ldr	x1, [sp, #32]
  462114:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  462118:	str	w0, [sp, #68]
  46211c:	ldr	w0, [sp, #68]
  462120:	cmp	w0, #0x0
  462124:	cset	w0, ne  // ne = any
  462128:	and	w0, w0, #0xff
  46212c:	and	x0, x0, #0xff
  462130:	cmp	x0, #0x0
  462134:	b.eq	462148 <_obstack_memory_used@@Base+0x5008>  // b.none
  462138:	ldr	x0, [sp, #72]
  46213c:	bl	404880 <free@plt>
  462140:	mov	x0, #0x0                   	// #0
  462144:	b	462404 <_obstack_memory_used@@Base+0x52c4>
  462148:	ldr	w0, [sp, #28]
  46214c:	and	w0, w0, #0xf
  462150:	and	w2, w0, #0xff
  462154:	ldr	x1, [sp, #72]
  462158:	ldrb	w0, [x1, #104]
  46215c:	bfxil	w0, w2, #0, #4
  462160:	strb	w0, [x1, #104]
  462164:	ldr	x0, [sp, #72]
  462168:	add	x1, x0, #0x8
  46216c:	ldr	x0, [sp, #72]
  462170:	str	x1, [x0, #80]
  462174:	str	xzr, [sp, #88]
  462178:	b	4623b0 <_obstack_memory_used@@Base+0x5270>
  46217c:	ldr	x0, [sp, #40]
  462180:	ldr	x1, [x0]
  462184:	ldr	x0, [sp, #32]
  462188:	ldr	x2, [x0, #16]
  46218c:	ldr	x0, [sp, #88]
  462190:	lsl	x0, x0, #3
  462194:	add	x0, x2, x0
  462198:	ldr	x0, [x0]
  46219c:	lsl	x0, x0, #4
  4621a0:	add	x0, x1, x0
  4621a4:	str	x0, [sp, #56]
  4621a8:	ldr	x0, [sp, #56]
  4621ac:	ldrb	w0, [x0, #8]
  4621b0:	str	w0, [sp, #52]
  4621b4:	ldr	x0, [sp, #56]
  4621b8:	ldr	w0, [x0, #8]
  4621bc:	ubfx	x0, x0, #8, #10
  4621c0:	and	w0, w0, #0xffff
  4621c4:	str	w0, [sp, #48]
  4621c8:	ldr	w0, [sp, #52]
  4621cc:	cmp	w0, #0x1
  4621d0:	b.ne	4621e0 <_obstack_memory_used@@Base+0x50a0>  // b.any
  4621d4:	ldr	w0, [sp, #48]
  4621d8:	cmp	w0, #0x0
  4621dc:	b.eq	4623a0 <_obstack_memory_used@@Base+0x5260>  // b.none
  4621e0:	ldr	x0, [sp, #72]
  4621e4:	ldrb	w0, [x0, #104]
  4621e8:	ubfx	x0, x0, #5, #1
  4621ec:	and	w1, w0, #0xff
  4621f0:	ldr	x0, [sp, #56]
  4621f4:	ldrb	w0, [x0, #10]
  4621f8:	ubfx	x0, x0, #4, #1
  4621fc:	and	w0, w0, #0xff
  462200:	orr	w0, w1, w0
  462204:	and	w2, w0, #0xff
  462208:	ldr	x1, [sp, #72]
  46220c:	ldrb	w0, [x1, #104]
  462210:	bfi	w0, w2, #5, #1
  462214:	strb	w0, [x1, #104]
  462218:	ldr	w0, [sp, #52]
  46221c:	cmp	w0, #0x2
  462220:	b.ne	462238 <_obstack_memory_used@@Base+0x50f8>  // b.any
  462224:	ldr	x0, [sp, #72]
  462228:	ldrb	w1, [x0, #104]
  46222c:	orr	w1, w1, #0x10
  462230:	strb	w1, [x0, #104]
  462234:	b	462254 <_obstack_memory_used@@Base+0x5114>
  462238:	ldr	w0, [sp, #52]
  46223c:	cmp	w0, #0x4
  462240:	b.ne	462254 <_obstack_memory_used@@Base+0x5114>  // b.any
  462244:	ldr	x0, [sp, #72]
  462248:	ldrb	w1, [x0, #104]
  46224c:	orr	w1, w1, #0x40
  462250:	strb	w1, [x0, #104]
  462254:	ldr	w0, [sp, #48]
  462258:	cmp	w0, #0x0
  46225c:	b.eq	4623a4 <_obstack_memory_used@@Base+0x5264>  // b.none
  462260:	ldr	x0, [sp, #72]
  462264:	ldr	x1, [x0, #80]
  462268:	ldr	x0, [sp, #72]
  46226c:	add	x0, x0, #0x8
  462270:	cmp	x1, x0
  462274:	b.ne	4622f0 <_obstack_memory_used@@Base+0x51b0>  // b.any
  462278:	mov	x0, #0x18                  	// #24
  46227c:	bl	4043f0 <malloc@plt>
  462280:	mov	x1, x0
  462284:	ldr	x0, [sp, #72]
  462288:	str	x1, [x0, #80]
  46228c:	ldr	x0, [sp, #72]
  462290:	ldr	x0, [x0, #80]
  462294:	cmp	x0, #0x0
  462298:	cset	w0, eq  // eq = none
  46229c:	and	w0, w0, #0xff
  4622a0:	and	x0, x0, #0xff
  4622a4:	cmp	x0, #0x0
  4622a8:	b.eq	4622bc <_obstack_memory_used@@Base+0x517c>  // b.none
  4622ac:	ldr	x0, [sp, #72]
  4622b0:	bl	461e18 <_obstack_memory_used@@Base+0x4cd8>
  4622b4:	mov	x0, #0x0                   	// #0
  4622b8:	b	462404 <_obstack_memory_used@@Base+0x52c4>
  4622bc:	ldr	x0, [sp, #72]
  4622c0:	ldr	x0, [x0, #80]
  4622c4:	ldr	x1, [sp, #32]
  4622c8:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  4622cc:	cmp	w0, #0x0
  4622d0:	b.eq	4622dc <_obstack_memory_used@@Base+0x519c>  // b.none
  4622d4:	mov	x0, #0x0                   	// #0
  4622d8:	b	462404 <_obstack_memory_used@@Base+0x52c4>
  4622dc:	str	xzr, [sp, #80]
  4622e0:	ldr	x0, [sp, #72]
  4622e4:	ldrb	w1, [x0, #104]
  4622e8:	orr	w1, w1, #0xffffff80
  4622ec:	strb	w1, [x0, #104]
  4622f0:	ldr	w0, [sp, #48]
  4622f4:	and	w0, w0, #0x1
  4622f8:	cmp	w0, #0x0
  4622fc:	b.eq	462310 <_obstack_memory_used@@Base+0x51d0>  // b.none
  462300:	ldr	w0, [sp, #28]
  462304:	and	w0, w0, #0x1
  462308:	cmp	w0, #0x0
  46230c:	b.eq	462370 <_obstack_memory_used@@Base+0x5230>  // b.none
  462310:	ldr	w0, [sp, #48]
  462314:	and	w0, w0, #0x2
  462318:	cmp	w0, #0x0
  46231c:	b.eq	462330 <_obstack_memory_used@@Base+0x51f0>  // b.none
  462320:	ldr	w0, [sp, #28]
  462324:	and	w0, w0, #0x1
  462328:	cmp	w0, #0x0
  46232c:	b.ne	462370 <_obstack_memory_used@@Base+0x5230>  // b.any
  462330:	ldr	w0, [sp, #48]
  462334:	and	w0, w0, #0x10
  462338:	cmp	w0, #0x0
  46233c:	b.eq	462350 <_obstack_memory_used@@Base+0x5210>  // b.none
  462340:	ldr	w0, [sp, #28]
  462344:	and	w0, w0, #0x2
  462348:	cmp	w0, #0x0
  46234c:	b.eq	462370 <_obstack_memory_used@@Base+0x5230>  // b.none
  462350:	ldr	w0, [sp, #48]
  462354:	and	w0, w0, #0x40
  462358:	cmp	w0, #0x0
  46235c:	b.eq	4623a4 <_obstack_memory_used@@Base+0x5264>  // b.none
  462360:	ldr	w0, [sp, #28]
  462364:	and	w0, w0, #0x4
  462368:	cmp	w0, #0x0
  46236c:	b.ne	4623a4 <_obstack_memory_used@@Base+0x5264>  // b.any
  462370:	ldr	x0, [sp, #72]
  462374:	add	x2, x0, #0x8
  462378:	ldr	x1, [sp, #88]
  46237c:	ldr	x0, [sp, #80]
  462380:	sub	x0, x1, x0
  462384:	mov	x1, x0
  462388:	mov	x0, x2
  46238c:	bl	46148c <_obstack_memory_used@@Base+0x434c>
  462390:	ldr	x0, [sp, #80]
  462394:	add	x0, x0, #0x1
  462398:	str	x0, [sp, #80]
  46239c:	b	4623a4 <_obstack_memory_used@@Base+0x5264>
  4623a0:	nop
  4623a4:	ldr	x0, [sp, #88]
  4623a8:	add	x0, x0, #0x1
  4623ac:	str	x0, [sp, #88]
  4623b0:	ldr	x0, [sp, #32]
  4623b4:	ldr	x0, [x0, #8]
  4623b8:	ldr	x1, [sp, #88]
  4623bc:	cmp	x1, x0
  4623c0:	b.lt	46217c <_obstack_memory_used@@Base+0x503c>  // b.tstop
  4623c4:	ldr	x2, [sp, #16]
  4623c8:	ldr	x1, [sp, #72]
  4623cc:	ldr	x0, [sp, #40]
  4623d0:	bl	461c20 <_obstack_memory_used@@Base+0x4ae0>
  4623d4:	str	w0, [sp, #68]
  4623d8:	ldr	w0, [sp, #68]
  4623dc:	cmp	w0, #0x0
  4623e0:	cset	w0, ne  // ne = any
  4623e4:	and	w0, w0, #0xff
  4623e8:	and	x0, x0, #0xff
  4623ec:	cmp	x0, #0x0
  4623f0:	b.eq	462400 <_obstack_memory_used@@Base+0x52c0>  // b.none
  4623f4:	ldr	x0, [sp, #72]
  4623f8:	bl	461e18 <_obstack_memory_used@@Base+0x4cd8>
  4623fc:	str	xzr, [sp, #72]
  462400:	ldr	x0, [sp, #72]
  462404:	ldp	x29, x30, [sp], #96
  462408:	ret
  46240c:	stp	x29, x30, [sp, #-64]!
  462410:	mov	x29, sp
  462414:	str	x0, [sp, #40]
  462418:	str	x1, [sp, #32]
  46241c:	str	x2, [sp, #24]
  462420:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  462424:	add	x0, x0, #0x440
  462428:	ldr	x0, [x0]
  46242c:	and	x0, x0, #0x2000000
  462430:	cmp	x0, #0x0
  462434:	cset	w0, ne  // ne = any
  462438:	and	w2, w0, #0xff
  46243c:	ldr	x1, [sp, #24]
  462440:	ldrb	w0, [x1, #56]
  462444:	bfi	w0, w2, #4, #1
  462448:	strb	w0, [x1, #56]
  46244c:	ldr	x0, [sp, #24]
  462450:	ldrb	w1, [x0, #56]
  462454:	orr	w1, w1, #0xffffff80
  462458:	strb	w1, [x0, #56]
  46245c:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  462460:	add	x0, x0, #0x440
  462464:	ldr	x0, [x0]
  462468:	mov	x3, x0
  46246c:	ldr	x2, [sp, #32]
  462470:	ldr	x1, [sp, #40]
  462474:	ldr	x0, [sp, #24]
  462478:	bl	463280 <_obstack_memory_used@@Base+0x6140>
  46247c:	str	w0, [sp, #60]
  462480:	ldr	w0, [sp, #60]
  462484:	cmp	w0, #0x0
  462488:	b.ne	462494 <_obstack_memory_used@@Base+0x5354>  // b.any
  46248c:	mov	x0, #0x0                   	// #0
  462490:	b	4624b4 <_obstack_memory_used@@Base+0x5374>
  462494:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  462498:	add	x0, x0, #0x540
  46249c:	ldrsw	x1, [sp, #60]
  4624a0:	ldr	x1, [x0, x1, lsl #3]
  4624a4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4624a8:	add	x0, x0, #0x3c0
  4624ac:	add	x0, x1, x0
  4624b0:	bl	404c60 <gettext@plt>
  4624b4:	ldp	x29, x30, [sp], #64
  4624b8:	ret
  4624bc:	sub	sp, sp, #0x20
  4624c0:	str	x0, [sp, #8]
  4624c4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4624c8:	add	x0, x0, #0x440
  4624cc:	ldr	x0, [x0]
  4624d0:	str	x0, [sp, #24]
  4624d4:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  4624d8:	add	x0, x0, #0x440
  4624dc:	ldr	x1, [sp, #8]
  4624e0:	str	x1, [x0]
  4624e4:	ldr	x0, [sp, #24]
  4624e8:	add	sp, sp, #0x20
  4624ec:	ret
  4624f0:	stp	x29, x30, [sp, #-48]!
  4624f4:	mov	x29, sp
  4624f8:	str	x0, [sp, #24]
  4624fc:	ldr	x0, [sp, #24]
  462500:	ldr	x0, [x0]
  462504:	str	x0, [sp, #40]
  462508:	ldr	x0, [sp, #24]
  46250c:	ldr	x0, [x0, #32]
  462510:	str	x0, [sp, #32]
  462514:	mov	x2, #0x100                 	// #256
  462518:	mov	w1, #0x0                   	// #0
  46251c:	ldr	x0, [sp, #32]
  462520:	bl	4044d0 <memset@plt>
  462524:	ldr	x0, [sp, #40]
  462528:	ldr	x0, [x0, #72]
  46252c:	ldr	x2, [sp, #32]
  462530:	mov	x1, x0
  462534:	ldr	x0, [sp, #24]
  462538:	bl	4625e8 <_obstack_memory_used@@Base+0x54a8>
  46253c:	ldr	x0, [sp, #40]
  462540:	ldr	x1, [x0, #72]
  462544:	ldr	x0, [sp, #40]
  462548:	ldr	x0, [x0, #80]
  46254c:	cmp	x1, x0
  462550:	b.eq	46256c <_obstack_memory_used@@Base+0x542c>  // b.none
  462554:	ldr	x0, [sp, #40]
  462558:	ldr	x0, [x0, #80]
  46255c:	ldr	x2, [sp, #32]
  462560:	mov	x1, x0
  462564:	ldr	x0, [sp, #24]
  462568:	bl	4625e8 <_obstack_memory_used@@Base+0x54a8>
  46256c:	ldr	x0, [sp, #40]
  462570:	ldr	x1, [x0, #72]
  462574:	ldr	x0, [sp, #40]
  462578:	ldr	x0, [x0, #88]
  46257c:	cmp	x1, x0
  462580:	b.eq	46259c <_obstack_memory_used@@Base+0x545c>  // b.none
  462584:	ldr	x0, [sp, #40]
  462588:	ldr	x0, [x0, #88]
  46258c:	ldr	x2, [sp, #32]
  462590:	mov	x1, x0
  462594:	ldr	x0, [sp, #24]
  462598:	bl	4625e8 <_obstack_memory_used@@Base+0x54a8>
  46259c:	ldr	x0, [sp, #40]
  4625a0:	ldr	x1, [x0, #72]
  4625a4:	ldr	x0, [sp, #40]
  4625a8:	ldr	x0, [x0, #96]
  4625ac:	cmp	x1, x0
  4625b0:	b.eq	4625cc <_obstack_memory_used@@Base+0x548c>  // b.none
  4625b4:	ldr	x0, [sp, #40]
  4625b8:	ldr	x0, [x0, #96]
  4625bc:	ldr	x2, [sp, #32]
  4625c0:	mov	x1, x0
  4625c4:	ldr	x0, [sp, #24]
  4625c8:	bl	4625e8 <_obstack_memory_used@@Base+0x54a8>
  4625cc:	ldr	x0, [sp, #24]
  4625d0:	ldrb	w1, [x0, #56]
  4625d4:	orr	w1, w1, #0x8
  4625d8:	strb	w1, [x0, #56]
  4625dc:	mov	w0, #0x0                   	// #0
  4625e0:	ldp	x29, x30, [sp], #48
  4625e4:	ret
  4625e8:	sub	sp, sp, #0x220
  4625ec:	stp	x29, x30, [sp]
  4625f0:	mov	x29, sp
  4625f4:	str	x0, [sp, #40]
  4625f8:	str	x1, [sp, #32]
  4625fc:	str	x2, [sp, #24]
  462600:	ldr	x0, [sp, #40]
  462604:	ldr	x0, [x0]
  462608:	str	x0, [sp, #488]
  46260c:	ldr	x0, [sp, #488]
  462610:	ldr	w0, [x0, #180]
  462614:	cmp	w0, #0x1
  462618:	b.ne	462638 <_obstack_memory_used@@Base+0x54f8>  // b.any
  46261c:	ldr	x0, [sp, #40]
  462620:	ldr	x0, [x0, #24]
  462624:	and	x0, x0, #0x400000
  462628:	cmp	x0, #0x0
  46262c:	b.eq	462638 <_obstack_memory_used@@Base+0x54f8>  // b.none
  462630:	mov	w0, #0x1                   	// #1
  462634:	b	46263c <_obstack_memory_used@@Base+0x54fc>
  462638:	mov	w0, #0x0                   	// #0
  46263c:	strb	w0, [sp, #487]
  462640:	ldrb	w0, [sp, #487]
  462644:	and	w0, w0, #0x1
  462648:	strb	w0, [sp, #487]
  46264c:	str	xzr, [sp, #536]
  462650:	b	462cc4 <_obstack_memory_used@@Base+0x5b84>
  462654:	ldr	x0, [sp, #32]
  462658:	ldr	x1, [x0, #24]
  46265c:	ldr	x0, [sp, #536]
  462660:	lsl	x0, x0, #3
  462664:	add	x0, x1, x0
  462668:	ldr	x0, [x0]
  46266c:	str	x0, [sp, #528]
  462670:	ldr	x0, [sp, #488]
  462674:	ldr	x1, [x0]
  462678:	ldr	x0, [sp, #528]
  46267c:	lsl	x0, x0, #4
  462680:	add	x0, x1, x0
  462684:	ldrb	w0, [x0, #8]
  462688:	str	w0, [sp, #480]
  46268c:	ldr	w0, [sp, #480]
  462690:	cmp	w0, #0x1
  462694:	b.ne	4628c0 <_obstack_memory_used@@Base+0x5780>  // b.any
  462698:	ldr	x0, [sp, #488]
  46269c:	ldr	x1, [x0]
  4626a0:	ldr	x0, [sp, #528]
  4626a4:	lsl	x0, x0, #4
  4626a8:	add	x0, x1, x0
  4626ac:	ldrb	w0, [x0]
  4626b0:	mov	w1, w0
  4626b4:	ldr	x0, [sp, #24]
  4626b8:	str	x0, [sp, #456]
  4626bc:	ldrb	w0, [sp, #487]
  4626c0:	strb	w0, [sp, #455]
  4626c4:	str	w1, [sp, #448]
  4626c8:	ldrsw	x0, [sp, #448]
  4626cc:	ldr	x1, [sp, #456]
  4626d0:	add	x0, x1, x0
  4626d4:	mov	w1, #0x1                   	// #1
  4626d8:	strb	w1, [x0]
  4626dc:	ldrb	w0, [sp, #455]
  4626e0:	cmp	w0, #0x0
  4626e4:	b.eq	462704 <_obstack_memory_used@@Base+0x55c4>  // b.none
  4626e8:	ldr	w0, [sp, #448]
  4626ec:	bl	404bd0 <tolower@plt>
  4626f0:	sxtw	x0, w0
  4626f4:	ldr	x1, [sp, #456]
  4626f8:	add	x0, x1, x0
  4626fc:	mov	w1, #0x1                   	// #1
  462700:	strb	w1, [x0]
  462704:	nop
  462708:	ldr	x0, [sp, #40]
  46270c:	ldr	x0, [x0, #24]
  462710:	and	x0, x0, #0x400000
  462714:	cmp	x0, #0x0
  462718:	b.eq	462cb8 <_obstack_memory_used@@Base+0x5b78>  // b.none
  46271c:	ldr	x0, [sp, #488]
  462720:	ldr	w0, [x0, #180]
  462724:	cmp	w0, #0x1
  462728:	b.le	462cb8 <_obstack_memory_used@@Base+0x5b78>
  46272c:	add	x0, sp, #0x160
  462730:	str	x0, [sp, #520]
  462734:	ldr	x0, [sp, #488]
  462738:	ldr	x1, [x0]
  46273c:	ldr	x0, [sp, #528]
  462740:	lsl	x0, x0, #4
  462744:	add	x1, x1, x0
  462748:	ldr	x0, [sp, #520]
  46274c:	add	x2, x0, #0x1
  462750:	str	x2, [sp, #520]
  462754:	ldrb	w1, [x1]
  462758:	strb	w1, [x0]
  46275c:	b	462788 <_obstack_memory_used@@Base+0x5648>
  462760:	ldr	x0, [sp, #488]
  462764:	ldr	x1, [x0]
  462768:	ldr	x0, [sp, #528]
  46276c:	lsl	x0, x0, #4
  462770:	add	x1, x1, x0
  462774:	ldr	x0, [sp, #520]
  462778:	add	x2, x0, #0x1
  46277c:	str	x2, [sp, #520]
  462780:	ldrb	w1, [x1]
  462784:	strb	w1, [x0]
  462788:	ldr	x0, [sp, #528]
  46278c:	add	x0, x0, #0x1
  462790:	str	x0, [sp, #528]
  462794:	ldr	x1, [sp, #528]
  462798:	ldr	x0, [sp, #488]
  46279c:	ldr	x0, [x0, #16]
  4627a0:	cmp	x1, x0
  4627a4:	b.cs	4627f0 <_obstack_memory_used@@Base+0x56b0>  // b.hs, b.nlast
  4627a8:	ldr	x0, [sp, #488]
  4627ac:	ldr	x1, [x0]
  4627b0:	ldr	x0, [sp, #528]
  4627b4:	lsl	x0, x0, #4
  4627b8:	add	x0, x1, x0
  4627bc:	ldrb	w0, [x0, #8]
  4627c0:	cmp	w0, #0x1
  4627c4:	b.ne	4627f0 <_obstack_memory_used@@Base+0x56b0>  // b.any
  4627c8:	ldr	x0, [sp, #488]
  4627cc:	ldr	x1, [x0]
  4627d0:	ldr	x0, [sp, #528]
  4627d4:	lsl	x0, x0, #4
  4627d8:	add	x0, x1, x0
  4627dc:	ldrb	w0, [x0, #10]
  4627e0:	and	w0, w0, #0x20
  4627e4:	and	w0, w0, #0xff
  4627e8:	cmp	w0, #0x0
  4627ec:	b.ne	462760 <_obstack_memory_used@@Base+0x5620>  // b.any
  4627f0:	add	x0, sp, #0x150
  4627f4:	mov	x2, #0x8                   	// #8
  4627f8:	mov	w1, #0x0                   	// #0
  4627fc:	bl	4044d0 <memset@plt>
  462800:	add	x0, sp, #0x160
  462804:	ldr	x1, [sp, #520]
  462808:	sub	x0, x1, x0
  46280c:	mov	x4, x0
  462810:	add	x2, sp, #0x150
  462814:	add	x1, sp, #0x160
  462818:	add	x0, sp, #0x15c
  46281c:	mov	x3, x2
  462820:	mov	x2, x4
  462824:	bl	45ca48 <argp_usage@@Base+0x1395c>
  462828:	mov	x2, x0
  46282c:	add	x0, sp, #0x160
  462830:	ldr	x1, [sp, #520]
  462834:	sub	x0, x1, x0
  462838:	cmp	x2, x0
  46283c:	b.ne	462cb8 <_obstack_memory_used@@Base+0x5b78>  // b.any
  462840:	ldr	w0, [sp, #348]
  462844:	bl	404c80 <towlower@plt>
  462848:	mov	w3, w0
  46284c:	add	x1, sp, #0x150
  462850:	add	x0, sp, #0x160
  462854:	mov	x2, x1
  462858:	mov	w1, w3
  46285c:	bl	404d10 <wcrtomb@plt>
  462860:	cmn	x0, #0x1
  462864:	b.eq	462cb8 <_obstack_memory_used@@Base+0x5b78>  // b.none
  462868:	ldrb	w0, [sp, #352]
  46286c:	mov	w1, w0
  462870:	ldr	x0, [sp, #24]
  462874:	str	x0, [sp, #440]
  462878:	strb	wzr, [sp, #439]
  46287c:	str	w1, [sp, #432]
  462880:	ldrsw	x0, [sp, #432]
  462884:	ldr	x1, [sp, #440]
  462888:	add	x0, x1, x0
  46288c:	mov	w1, #0x1                   	// #1
  462890:	strb	w1, [x0]
  462894:	ldrb	w0, [sp, #439]
  462898:	cmp	w0, #0x0
  46289c:	b.eq	462cb4 <_obstack_memory_used@@Base+0x5b74>  // b.none
  4628a0:	ldr	w0, [sp, #432]
  4628a4:	bl	404bd0 <tolower@plt>
  4628a8:	sxtw	x0, w0
  4628ac:	ldr	x1, [sp, #440]
  4628b0:	add	x0, x1, x0
  4628b4:	mov	w1, #0x1                   	// #1
  4628b8:	strb	w1, [x0]
  4628bc:	b	462cb4 <_obstack_memory_used@@Base+0x5b74>
  4628c0:	ldr	w0, [sp, #480]
  4628c4:	cmp	w0, #0x3
  4628c8:	b.ne	4629bc <_obstack_memory_used@@Base+0x587c>  // b.any
  4628cc:	str	wzr, [sp, #516]
  4628d0:	str	wzr, [sp, #512]
  4628d4:	b	4629ac <_obstack_memory_used@@Base+0x586c>
  4628d8:	ldr	x0, [sp, #488]
  4628dc:	ldr	x1, [x0]
  4628e0:	ldr	x0, [sp, #528]
  4628e4:	lsl	x0, x0, #4
  4628e8:	add	x0, x1, x0
  4628ec:	ldr	x1, [x0]
  4628f0:	ldrsw	x0, [sp, #516]
  4628f4:	lsl	x0, x0, #3
  4628f8:	add	x0, x1, x0
  4628fc:	ldr	x0, [x0]
  462900:	str	x0, [sp, #464]
  462904:	str	wzr, [sp, #508]
  462908:	b	462994 <_obstack_memory_used@@Base+0x5854>
  46290c:	ldr	w0, [sp, #508]
  462910:	ldr	x1, [sp, #464]
  462914:	lsr	x0, x1, x0
  462918:	and	x0, x0, #0x1
  46291c:	cmp	x0, #0x0
  462920:	b.eq	46297c <_obstack_memory_used@@Base+0x583c>  // b.none
  462924:	ldr	x0, [sp, #24]
  462928:	str	x0, [sp, #424]
  46292c:	ldrb	w0, [sp, #487]
  462930:	strb	w0, [sp, #423]
  462934:	ldr	w0, [sp, #512]
  462938:	str	w0, [sp, #416]
  46293c:	ldrsw	x0, [sp, #416]
  462940:	ldr	x1, [sp, #424]
  462944:	add	x0, x1, x0
  462948:	mov	w1, #0x1                   	// #1
  46294c:	strb	w1, [x0]
  462950:	ldrb	w0, [sp, #423]
  462954:	cmp	w0, #0x0
  462958:	b.eq	462978 <_obstack_memory_used@@Base+0x5838>  // b.none
  46295c:	ldr	w0, [sp, #416]
  462960:	bl	404bd0 <tolower@plt>
  462964:	sxtw	x0, w0
  462968:	ldr	x1, [sp, #424]
  46296c:	add	x0, x1, x0
  462970:	mov	w1, #0x1                   	// #1
  462974:	strb	w1, [x0]
  462978:	nop
  46297c:	ldr	w0, [sp, #508]
  462980:	add	w0, w0, #0x1
  462984:	str	w0, [sp, #508]
  462988:	ldr	w0, [sp, #512]
  46298c:	add	w0, w0, #0x1
  462990:	str	w0, [sp, #512]
  462994:	ldr	w0, [sp, #508]
  462998:	cmp	w0, #0x3f
  46299c:	b.le	46290c <_obstack_memory_used@@Base+0x57cc>
  4629a0:	ldr	w0, [sp, #516]
  4629a4:	add	w0, w0, #0x1
  4629a8:	str	w0, [sp, #516]
  4629ac:	ldr	w0, [sp, #516]
  4629b0:	cmp	w0, #0x3
  4629b4:	b.le	4628d8 <_obstack_memory_used@@Base+0x5798>
  4629b8:	b	462cb8 <_obstack_memory_used@@Base+0x5b78>
  4629bc:	ldr	w0, [sp, #480]
  4629c0:	cmp	w0, #0x6
  4629c4:	b.ne	462c60 <_obstack_memory_used@@Base+0x5b20>  // b.any
  4629c8:	ldr	x0, [sp, #488]
  4629cc:	ldr	x1, [x0]
  4629d0:	ldr	x0, [sp, #528]
  4629d4:	lsl	x0, x0, #4
  4629d8:	add	x0, x1, x0
  4629dc:	ldr	x0, [x0]
  4629e0:	str	x0, [sp, #472]
  4629e4:	ldr	x0, [sp, #488]
  4629e8:	ldr	w0, [x0, #180]
  4629ec:	cmp	w0, #0x1
  4629f0:	b.le	462adc <_obstack_memory_used@@Base+0x599c>
  4629f4:	ldr	x0, [sp, #472]
  4629f8:	ldr	x0, [x0, #72]
  4629fc:	cmp	x0, #0x0
  462a00:	b.ne	462a2c <_obstack_memory_used@@Base+0x58ec>  // b.any
  462a04:	ldr	x0, [sp, #472]
  462a08:	ldrb	w0, [x0, #32]
  462a0c:	and	w0, w0, #0x1
  462a10:	and	w0, w0, #0xff
  462a14:	cmp	w0, #0x0
  462a18:	b.ne	462a2c <_obstack_memory_used@@Base+0x58ec>  // b.any
  462a1c:	ldr	x0, [sp, #472]
  462a20:	ldr	x0, [x0, #64]
  462a24:	cmp	x0, #0x0
  462a28:	b.eq	462adc <_obstack_memory_used@@Base+0x599c>  // b.none
  462a2c:	strb	wzr, [sp, #335]
  462a30:	add	x0, sp, #0x140
  462a34:	mov	x2, #0x8                   	// #8
  462a38:	mov	w1, #0x0                   	// #0
  462a3c:	bl	4044d0 <memset@plt>
  462a40:	add	x1, sp, #0x140
  462a44:	add	x0, sp, #0x14f
  462a48:	mov	x3, x1
  462a4c:	mov	x2, #0x1                   	// #1
  462a50:	mov	x1, x0
  462a54:	mov	x0, #0x0                   	// #0
  462a58:	bl	45ca48 <argp_usage@@Base+0x1395c>
  462a5c:	cmn	x0, #0x2
  462a60:	b.ne	462abc <_obstack_memory_used@@Base+0x597c>  // b.any
  462a64:	ldrb	w0, [sp, #335]
  462a68:	mov	w1, w0
  462a6c:	ldr	x0, [sp, #24]
  462a70:	str	x0, [sp, #408]
  462a74:	strb	wzr, [sp, #407]
  462a78:	str	w1, [sp, #400]
  462a7c:	ldrsw	x0, [sp, #400]
  462a80:	ldr	x1, [sp, #408]
  462a84:	add	x0, x1, x0
  462a88:	mov	w1, #0x1                   	// #1
  462a8c:	strb	w1, [x0]
  462a90:	ldrb	w0, [sp, #407]
  462a94:	cmp	w0, #0x0
  462a98:	b.eq	462ab8 <_obstack_memory_used@@Base+0x5978>  // b.none
  462a9c:	ldr	w0, [sp, #400]
  462aa0:	bl	404bd0 <tolower@plt>
  462aa4:	sxtw	x0, w0
  462aa8:	ldr	x1, [sp, #408]
  462aac:	add	x0, x1, x0
  462ab0:	mov	w1, #0x1                   	// #1
  462ab4:	strb	w1, [x0]
  462ab8:	nop
  462abc:	ldrb	w0, [sp, #335]
  462ac0:	add	w0, w0, #0x1
  462ac4:	and	w0, w0, #0xff
  462ac8:	strb	w0, [sp, #335]
  462acc:	ldrb	w0, [sp, #335]
  462ad0:	cmp	w0, #0x0
  462ad4:	b.ne	462a30 <_obstack_memory_used@@Base+0x58f0>  // b.any
  462ad8:	b	462cb8 <_obstack_memory_used@@Base+0x5b78>
  462adc:	str	xzr, [sp, #496]
  462ae0:	b	462c48 <_obstack_memory_used@@Base+0x5b08>
  462ae4:	add	x0, sp, #0x138
  462ae8:	mov	x2, #0x8                   	// #8
  462aec:	mov	w1, #0x0                   	// #0
  462af0:	bl	4044d0 <memset@plt>
  462af4:	ldr	x0, [sp, #472]
  462af8:	ldr	x1, [x0]
  462afc:	ldr	x0, [sp, #496]
  462b00:	lsl	x0, x0, #2
  462b04:	add	x0, x1, x0
  462b08:	ldr	w1, [x0]
  462b0c:	add	x2, sp, #0x138
  462b10:	add	x0, sp, #0x38
  462b14:	bl	404d10 <wcrtomb@plt>
  462b18:	cmn	x0, #0x1
  462b1c:	b.eq	462b80 <_obstack_memory_used@@Base+0x5a40>  // b.none
  462b20:	add	x0, sp, #0x38
  462b24:	ldrb	w0, [x0]
  462b28:	mov	w1, w0
  462b2c:	ldr	x0, [sp, #24]
  462b30:	str	x0, [sp, #392]
  462b34:	ldrb	w0, [sp, #487]
  462b38:	strb	w0, [sp, #391]
  462b3c:	str	w1, [sp, #384]
  462b40:	ldrsw	x0, [sp, #384]
  462b44:	ldr	x1, [sp, #392]
  462b48:	add	x0, x1, x0
  462b4c:	mov	w1, #0x1                   	// #1
  462b50:	strb	w1, [x0]
  462b54:	ldrb	w0, [sp, #391]
  462b58:	cmp	w0, #0x0
  462b5c:	b.eq	462b7c <_obstack_memory_used@@Base+0x5a3c>  // b.none
  462b60:	ldr	w0, [sp, #384]
  462b64:	bl	404bd0 <tolower@plt>
  462b68:	sxtw	x0, w0
  462b6c:	ldr	x1, [sp, #392]
  462b70:	add	x0, x1, x0
  462b74:	mov	w1, #0x1                   	// #1
  462b78:	strb	w1, [x0]
  462b7c:	nop
  462b80:	ldr	x0, [sp, #40]
  462b84:	ldr	x0, [x0, #24]
  462b88:	and	x0, x0, #0x400000
  462b8c:	cmp	x0, #0x0
  462b90:	b.eq	462c3c <_obstack_memory_used@@Base+0x5afc>  // b.none
  462b94:	ldr	x0, [sp, #488]
  462b98:	ldr	w0, [x0, #180]
  462b9c:	cmp	w0, #0x1
  462ba0:	b.le	462c3c <_obstack_memory_used@@Base+0x5afc>
  462ba4:	ldr	x0, [sp, #472]
  462ba8:	ldr	x1, [x0]
  462bac:	ldr	x0, [sp, #496]
  462bb0:	lsl	x0, x0, #2
  462bb4:	add	x0, x1, x0
  462bb8:	ldr	w0, [x0]
  462bbc:	bl	404c80 <towlower@plt>
  462bc0:	mov	w3, w0
  462bc4:	add	x1, sp, #0x138
  462bc8:	add	x0, sp, #0x38
  462bcc:	mov	x2, x1
  462bd0:	mov	w1, w3
  462bd4:	bl	404d10 <wcrtomb@plt>
  462bd8:	cmn	x0, #0x1
  462bdc:	b.eq	462c3c <_obstack_memory_used@@Base+0x5afc>  // b.none
  462be0:	add	x0, sp, #0x38
  462be4:	ldrb	w0, [x0]
  462be8:	mov	w1, w0
  462bec:	ldr	x0, [sp, #24]
  462bf0:	str	x0, [sp, #376]
  462bf4:	strb	wzr, [sp, #375]
  462bf8:	str	w1, [sp, #368]
  462bfc:	ldrsw	x0, [sp, #368]
  462c00:	ldr	x1, [sp, #376]
  462c04:	add	x0, x1, x0
  462c08:	mov	w1, #0x1                   	// #1
  462c0c:	strb	w1, [x0]
  462c10:	ldrb	w0, [sp, #375]
  462c14:	cmp	w0, #0x0
  462c18:	b.eq	462c38 <_obstack_memory_used@@Base+0x5af8>  // b.none
  462c1c:	ldr	w0, [sp, #368]
  462c20:	bl	404bd0 <tolower@plt>
  462c24:	sxtw	x0, w0
  462c28:	ldr	x1, [sp, #376]
  462c2c:	add	x0, x1, x0
  462c30:	mov	w1, #0x1                   	// #1
  462c34:	strb	w1, [x0]
  462c38:	nop
  462c3c:	ldr	x0, [sp, #496]
  462c40:	add	x0, x0, #0x1
  462c44:	str	x0, [sp, #496]
  462c48:	ldr	x0, [sp, #472]
  462c4c:	ldr	x0, [x0, #40]
  462c50:	ldr	x1, [sp, #496]
  462c54:	cmp	x1, x0
  462c58:	b.lt	462ae4 <_obstack_memory_used@@Base+0x59a4>  // b.tstop
  462c5c:	b	462cb8 <_obstack_memory_used@@Base+0x5b78>
  462c60:	ldr	w0, [sp, #480]
  462c64:	cmp	w0, #0x5
  462c68:	b.eq	462c84 <_obstack_memory_used@@Base+0x5b44>  // b.none
  462c6c:	ldr	w0, [sp, #480]
  462c70:	cmp	w0, #0x7
  462c74:	b.eq	462c84 <_obstack_memory_used@@Base+0x5b44>  // b.none
  462c78:	ldr	w0, [sp, #480]
  462c7c:	cmp	w0, #0x2
  462c80:	b.ne	462cb8 <_obstack_memory_used@@Base+0x5b78>  // b.any
  462c84:	mov	x2, #0x100                 	// #256
  462c88:	mov	w1, #0x1                   	// #1
  462c8c:	ldr	x0, [sp, #24]
  462c90:	bl	4044d0 <memset@plt>
  462c94:	ldr	w0, [sp, #480]
  462c98:	cmp	w0, #0x2
  462c9c:	b.ne	462cdc <_obstack_memory_used@@Base+0x5b9c>  // b.any
  462ca0:	ldr	x0, [sp, #40]
  462ca4:	ldrb	w1, [x0, #56]
  462ca8:	orr	w1, w1, #0x1
  462cac:	strb	w1, [x0, #56]
  462cb0:	b	462cdc <_obstack_memory_used@@Base+0x5b9c>
  462cb4:	nop
  462cb8:	ldr	x0, [sp, #536]
  462cbc:	add	x0, x0, #0x1
  462cc0:	str	x0, [sp, #536]
  462cc4:	ldr	x0, [sp, #32]
  462cc8:	ldr	x0, [x0, #16]
  462ccc:	ldr	x1, [sp, #536]
  462cd0:	cmp	x1, x0
  462cd4:	b.lt	462654 <_obstack_memory_used@@Base+0x5514>  // b.tstop
  462cd8:	b	462ce0 <_obstack_memory_used@@Base+0x5ba0>
  462cdc:	nop
  462ce0:	ldp	x29, x30, [sp]
  462ce4:	add	sp, sp, #0x220
  462ce8:	ret
  462cec:	stp	x29, x30, [sp, #-64]!
  462cf0:	mov	x29, sp
  462cf4:	str	x0, [sp, #40]
  462cf8:	str	x1, [sp, #32]
  462cfc:	str	w2, [sp, #28]
  462d00:	ldr	w0, [sp, #28]
  462d04:	and	w0, w0, #0x1
  462d08:	cmp	w0, #0x0
  462d0c:	b.eq	462d1c <_obstack_memory_used@@Base+0x5bdc>  // b.none
  462d10:	mov	x0, #0xb2fc                	// #45820
  462d14:	movk	x0, #0x3, lsl #16
  462d18:	b	462d24 <_obstack_memory_used@@Base+0x5be4>
  462d1c:	mov	x0, #0x2c6                 	// #710
  462d20:	movk	x0, #0x101, lsl #16
  462d24:	str	x0, [sp, #48]
  462d28:	ldr	x0, [sp, #40]
  462d2c:	str	xzr, [x0]
  462d30:	ldr	x0, [sp, #40]
  462d34:	str	xzr, [x0, #8]
  462d38:	ldr	x0, [sp, #40]
  462d3c:	str	xzr, [x0, #16]
  462d40:	mov	x0, #0x100                 	// #256
  462d44:	bl	4043f0 <malloc@plt>
  462d48:	mov	x1, x0
  462d4c:	ldr	x0, [sp, #40]
  462d50:	str	x1, [x0, #32]
  462d54:	ldr	x0, [sp, #40]
  462d58:	ldr	x0, [x0, #32]
  462d5c:	cmp	x0, #0x0
  462d60:	cset	w0, eq  // eq = none
  462d64:	and	w0, w0, #0xff
  462d68:	and	x0, x0, #0xff
  462d6c:	cmp	x0, #0x0
  462d70:	b.eq	462d7c <_obstack_memory_used@@Base+0x5c3c>  // b.none
  462d74:	mov	w0, #0xc                   	// #12
  462d78:	b	462e80 <_obstack_memory_used@@Base+0x5d40>
  462d7c:	ldrsw	x0, [sp, #28]
  462d80:	lsl	x0, x0, #21
  462d84:	and	x0, x0, #0x400000
  462d88:	ldr	x1, [sp, #48]
  462d8c:	orr	x0, x1, x0
  462d90:	str	x0, [sp, #48]
  462d94:	ldr	w0, [sp, #28]
  462d98:	and	w0, w0, #0x4
  462d9c:	cmp	w0, #0x0
  462da0:	b.eq	462dd0 <_obstack_memory_used@@Base+0x5c90>  // b.none
  462da4:	ldr	x0, [sp, #48]
  462da8:	and	x0, x0, #0xffffffffffffffbf
  462dac:	str	x0, [sp, #48]
  462db0:	ldr	x0, [sp, #48]
  462db4:	orr	x0, x0, #0x100
  462db8:	str	x0, [sp, #48]
  462dbc:	ldr	x0, [sp, #40]
  462dc0:	ldrb	w1, [x0, #56]
  462dc4:	orr	w1, w1, #0xffffff80
  462dc8:	strb	w1, [x0, #56]
  462dcc:	b	462de0 <_obstack_memory_used@@Base+0x5ca0>
  462dd0:	ldr	x0, [sp, #40]
  462dd4:	ldrb	w1, [x0, #56]
  462dd8:	and	w1, w1, #0x7f
  462ddc:	strb	w1, [x0, #56]
  462de0:	ldr	w0, [sp, #28]
  462de4:	and	w0, w0, #0x8
  462de8:	cmp	w0, #0x0
  462dec:	cset	w0, ne  // ne = any
  462df0:	and	w2, w0, #0xff
  462df4:	ldr	x1, [sp, #40]
  462df8:	ldrb	w0, [x1, #56]
  462dfc:	bfi	w0, w2, #4, #1
  462e00:	strb	w0, [x1, #56]
  462e04:	ldr	x0, [sp, #40]
  462e08:	str	xzr, [x0, #40]
  462e0c:	ldr	x0, [sp, #32]
  462e10:	bl	4040b0 <strlen@plt>
  462e14:	ldr	x3, [sp, #48]
  462e18:	mov	x2, x0
  462e1c:	ldr	x1, [sp, #32]
  462e20:	ldr	x0, [sp, #40]
  462e24:	bl	463280 <_obstack_memory_used@@Base+0x6140>
  462e28:	str	w0, [sp, #60]
  462e2c:	ldr	w0, [sp, #60]
  462e30:	cmp	w0, #0x10
  462e34:	b.ne	462e40 <_obstack_memory_used@@Base+0x5d00>  // b.any
  462e38:	mov	w0, #0x8                   	// #8
  462e3c:	str	w0, [sp, #60]
  462e40:	ldr	w0, [sp, #60]
  462e44:	cmp	w0, #0x0
  462e48:	cset	w0, eq  // eq = none
  462e4c:	and	w0, w0, #0xff
  462e50:	and	x0, x0, #0xff
  462e54:	cmp	x0, #0x0
  462e58:	b.eq	462e68 <_obstack_memory_used@@Base+0x5d28>  // b.none
  462e5c:	ldr	x0, [sp, #40]
  462e60:	bl	4624f0 <_obstack_memory_used@@Base+0x53b0>
  462e64:	b	462e7c <_obstack_memory_used@@Base+0x5d3c>
  462e68:	ldr	x0, [sp, #40]
  462e6c:	ldr	x0, [x0, #32]
  462e70:	bl	404880 <free@plt>
  462e74:	ldr	x0, [sp, #40]
  462e78:	str	xzr, [x0, #32]
  462e7c:	ldr	w0, [sp, #60]
  462e80:	ldp	x29, x30, [sp], #64
  462e84:	ret
  462e88:	stp	x29, x30, [sp, #-80]!
  462e8c:	mov	x29, sp
  462e90:	str	w0, [sp, #44]
  462e94:	str	x1, [sp, #32]
  462e98:	str	x2, [sp, #24]
  462e9c:	str	x3, [sp, #16]
  462ea0:	mov	w0, #0x11                  	// #17
  462ea4:	str	w0, [sp, #68]
  462ea8:	ldr	w0, [sp, #44]
  462eac:	lsr	w0, w0, #31
  462eb0:	and	w0, w0, #0xff
  462eb4:	and	x0, x0, #0xff
  462eb8:	cmp	x0, #0x0
  462ebc:	b.ne	462ee0 <_obstack_memory_used@@Base+0x5da0>  // b.any
  462ec0:	ldr	w1, [sp, #44]
  462ec4:	ldr	w0, [sp, #68]
  462ec8:	cmp	w1, w0
  462ecc:	cset	w0, ge  // ge = tcont
  462ed0:	and	w0, w0, #0xff
  462ed4:	and	x0, x0, #0xff
  462ed8:	cmp	x0, #0x0
  462edc:	b.eq	462ee4 <_obstack_memory_used@@Base+0x5da4>  // b.none
  462ee0:	bl	404710 <abort@plt>
  462ee4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  462ee8:	add	x0, x0, #0x540
  462eec:	ldrsw	x1, [sp, #44]
  462ef0:	ldr	x1, [x0, x1, lsl #3]
  462ef4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  462ef8:	add	x0, x0, #0x3c0
  462efc:	add	x0, x1, x0
  462f00:	bl	404c60 <gettext@plt>
  462f04:	str	x0, [sp, #56]
  462f08:	ldr	x0, [sp, #56]
  462f0c:	bl	4040b0 <strlen@plt>
  462f10:	add	x0, x0, #0x1
  462f14:	str	x0, [sp, #48]
  462f18:	ldr	x0, [sp, #16]
  462f1c:	cmp	x0, #0x0
  462f20:	cset	w0, ne  // ne = any
  462f24:	and	w0, w0, #0xff
  462f28:	and	x0, x0, #0xff
  462f2c:	cmp	x0, #0x0
  462f30:	b.eq	462f88 <_obstack_memory_used@@Base+0x5e48>  // b.none
  462f34:	ldr	x0, [sp, #48]
  462f38:	str	x0, [sp, #72]
  462f3c:	ldr	x1, [sp, #48]
  462f40:	ldr	x0, [sp, #16]
  462f44:	cmp	x1, x0
  462f48:	cset	w0, hi  // hi = pmore
  462f4c:	and	w0, w0, #0xff
  462f50:	and	x0, x0, #0xff
  462f54:	cmp	x0, #0x0
  462f58:	b.eq	462f78 <_obstack_memory_used@@Base+0x5e38>  // b.none
  462f5c:	ldr	x0, [sp, #16]
  462f60:	sub	x0, x0, #0x1
  462f64:	str	x0, [sp, #72]
  462f68:	ldr	x1, [sp, #24]
  462f6c:	ldr	x0, [sp, #72]
  462f70:	add	x0, x1, x0
  462f74:	strb	wzr, [x0]
  462f78:	ldr	x2, [sp, #72]
  462f7c:	ldr	x1, [sp, #56]
  462f80:	ldr	x0, [sp, #24]
  462f84:	bl	404020 <memcpy@plt>
  462f88:	ldr	x0, [sp, #48]
  462f8c:	ldp	x29, x30, [sp], #80
  462f90:	ret
  462f94:	stp	x29, x30, [sp, #-64]!
  462f98:	mov	x29, sp
  462f9c:	str	x0, [sp, #24]
  462fa0:	ldr	x0, [sp, #24]
  462fa4:	ldr	x0, [x0]
  462fa8:	cmp	x0, #0x0
  462fac:	b.eq	462ff0 <_obstack_memory_used@@Base+0x5eb0>  // b.none
  462fb0:	str	xzr, [sp, #56]
  462fb4:	b	462fdc <_obstack_memory_used@@Base+0x5e9c>
  462fb8:	ldr	x0, [sp, #24]
  462fbc:	ldr	x1, [x0]
  462fc0:	ldr	x0, [sp, #56]
  462fc4:	lsl	x0, x0, #4
  462fc8:	add	x0, x1, x0
  462fcc:	bl	46aa70 <_obstack_memory_used@@Base+0xd930>
  462fd0:	ldr	x0, [sp, #56]
  462fd4:	add	x0, x0, #0x1
  462fd8:	str	x0, [sp, #56]
  462fdc:	ldr	x0, [sp, #24]
  462fe0:	ldr	x1, [x0, #16]
  462fe4:	ldr	x0, [sp, #56]
  462fe8:	cmp	x1, x0
  462fec:	b.hi	462fb8 <_obstack_memory_used@@Base+0x5e78>  // b.pmore
  462ff0:	ldr	x0, [sp, #24]
  462ff4:	ldr	x0, [x0, #24]
  462ff8:	bl	404880 <free@plt>
  462ffc:	str	xzr, [sp, #56]
  463000:	b	4630b8 <_obstack_memory_used@@Base+0x5f78>
  463004:	ldr	x0, [sp, #24]
  463008:	ldr	x0, [x0, #48]
  46300c:	cmp	x0, #0x0
  463010:	b.eq	46303c <_obstack_memory_used@@Base+0x5efc>  // b.none
  463014:	ldr	x0, [sp, #24]
  463018:	ldr	x2, [x0, #48]
  46301c:	ldr	x1, [sp, #56]
  463020:	mov	x0, x1
  463024:	lsl	x0, x0, #1
  463028:	add	x0, x0, x1
  46302c:	lsl	x0, x0, #3
  463030:	add	x0, x2, x0
  463034:	ldr	x0, [x0, #16]
  463038:	bl	404880 <free@plt>
  46303c:	ldr	x0, [sp, #24]
  463040:	ldr	x0, [x0, #56]
  463044:	cmp	x0, #0x0
  463048:	b.eq	463074 <_obstack_memory_used@@Base+0x5f34>  // b.none
  46304c:	ldr	x0, [sp, #24]
  463050:	ldr	x2, [x0, #56]
  463054:	ldr	x1, [sp, #56]
  463058:	mov	x0, x1
  46305c:	lsl	x0, x0, #1
  463060:	add	x0, x0, x1
  463064:	lsl	x0, x0, #3
  463068:	add	x0, x2, x0
  46306c:	ldr	x0, [x0, #16]
  463070:	bl	404880 <free@plt>
  463074:	ldr	x0, [sp, #24]
  463078:	ldr	x0, [x0, #40]
  46307c:	cmp	x0, #0x0
  463080:	b.eq	4630ac <_obstack_memory_used@@Base+0x5f6c>  // b.none
  463084:	ldr	x0, [sp, #24]
  463088:	ldr	x2, [x0, #40]
  46308c:	ldr	x1, [sp, #56]
  463090:	mov	x0, x1
  463094:	lsl	x0, x0, #1
  463098:	add	x0, x0, x1
  46309c:	lsl	x0, x0, #3
  4630a0:	add	x0, x2, x0
  4630a4:	ldr	x0, [x0, #16]
  4630a8:	bl	404880 <free@plt>
  4630ac:	ldr	x0, [sp, #56]
  4630b0:	add	x0, x0, #0x1
  4630b4:	str	x0, [sp, #56]
  4630b8:	ldr	x0, [sp, #24]
  4630bc:	ldr	x1, [x0, #16]
  4630c0:	ldr	x0, [sp, #56]
  4630c4:	cmp	x1, x0
  4630c8:	b.hi	463004 <_obstack_memory_used@@Base+0x5ec4>  // b.pmore
  4630cc:	ldr	x0, [sp, #24]
  4630d0:	ldr	x0, [x0, #40]
  4630d4:	bl	404880 <free@plt>
  4630d8:	ldr	x0, [sp, #24]
  4630dc:	ldr	x0, [x0, #48]
  4630e0:	bl	404880 <free@plt>
  4630e4:	ldr	x0, [sp, #24]
  4630e8:	ldr	x0, [x0, #56]
  4630ec:	bl	404880 <free@plt>
  4630f0:	ldr	x0, [sp, #24]
  4630f4:	ldr	x0, [x0]
  4630f8:	bl	404880 <free@plt>
  4630fc:	ldr	x0, [sp, #24]
  463100:	ldr	x0, [x0, #64]
  463104:	cmp	x0, #0x0
  463108:	b.eq	4631b0 <_obstack_memory_used@@Base+0x6070>  // b.none
  46310c:	str	xzr, [sp, #56]
  463110:	b	46319c <_obstack_memory_used@@Base+0x605c>
  463114:	ldr	x0, [sp, #24]
  463118:	ldr	x2, [x0, #64]
  46311c:	ldr	x1, [sp, #56]
  463120:	mov	x0, x1
  463124:	lsl	x0, x0, #1
  463128:	add	x0, x0, x1
  46312c:	lsl	x0, x0, #3
  463130:	add	x0, x2, x0
  463134:	str	x0, [sp, #40]
  463138:	str	xzr, [sp, #48]
  46313c:	b	463170 <_obstack_memory_used@@Base+0x6030>
  463140:	ldr	x0, [sp, #40]
  463144:	ldr	x1, [x0, #16]
  463148:	ldr	x0, [sp, #48]
  46314c:	lsl	x0, x0, #3
  463150:	add	x0, x1, x0
  463154:	ldr	x0, [x0]
  463158:	str	x0, [sp, #32]
  46315c:	ldr	x0, [sp, #32]
  463160:	bl	461e18 <_obstack_memory_used@@Base+0x4cd8>
  463164:	ldr	x0, [sp, #48]
  463168:	add	x0, x0, #0x1
  46316c:	str	x0, [sp, #48]
  463170:	ldr	x0, [sp, #40]
  463174:	ldr	x0, [x0]
  463178:	ldr	x1, [sp, #48]
  46317c:	cmp	x1, x0
  463180:	b.lt	463140 <_obstack_memory_used@@Base+0x6000>  // b.tstop
  463184:	ldr	x0, [sp, #40]
  463188:	ldr	x0, [x0, #16]
  46318c:	bl	404880 <free@plt>
  463190:	ldr	x0, [sp, #56]
  463194:	add	x0, x0, #0x1
  463198:	str	x0, [sp, #56]
  46319c:	ldr	x0, [sp, #24]
  4631a0:	ldr	x1, [x0, #136]
  4631a4:	ldr	x0, [sp, #56]
  4631a8:	cmp	x1, x0
  4631ac:	b.cs	463114 <_obstack_memory_used@@Base+0x5fd4>  // b.hs, b.nlast
  4631b0:	ldr	x0, [sp, #24]
  4631b4:	ldr	x0, [x0, #64]
  4631b8:	bl	404880 <free@plt>
  4631bc:	ldr	x0, [sp, #24]
  4631c0:	ldr	x1, [x0, #120]
  4631c4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4631c8:	add	x0, x0, #0x5c8
  4631cc:	cmp	x1, x0
  4631d0:	b.eq	4631e0 <_obstack_memory_used@@Base+0x60a0>  // b.none
  4631d4:	ldr	x0, [sp, #24]
  4631d8:	ldr	x0, [x0, #120]
  4631dc:	bl	404880 <free@plt>
  4631e0:	ldr	x0, [sp, #24]
  4631e4:	ldr	x0, [x0, #224]
  4631e8:	bl	404880 <free@plt>
  4631ec:	ldr	x0, [sp, #24]
  4631f0:	bl	404880 <free@plt>
  4631f4:	nop
  4631f8:	ldp	x29, x30, [sp], #64
  4631fc:	ret
  463200:	stp	x29, x30, [sp, #-48]!
  463204:	mov	x29, sp
  463208:	str	x0, [sp, #24]
  46320c:	ldr	x0, [sp, #24]
  463210:	ldr	x0, [x0]
  463214:	str	x0, [sp, #40]
  463218:	ldr	x0, [sp, #40]
  46321c:	cmp	x0, #0x0
  463220:	cset	w0, ne  // ne = any
  463224:	and	w0, w0, #0xff
  463228:	and	x0, x0, #0xff
  46322c:	cmp	x0, #0x0
  463230:	b.eq	46323c <_obstack_memory_used@@Base+0x60fc>  // b.none
  463234:	ldr	x0, [sp, #40]
  463238:	bl	462f94 <_obstack_memory_used@@Base+0x5e54>
  46323c:	ldr	x0, [sp, #24]
  463240:	str	xzr, [x0]
  463244:	ldr	x0, [sp, #24]
  463248:	str	xzr, [x0, #8]
  46324c:	ldr	x0, [sp, #24]
  463250:	ldr	x0, [x0, #32]
  463254:	bl	404880 <free@plt>
  463258:	ldr	x0, [sp, #24]
  46325c:	str	xzr, [x0, #32]
  463260:	ldr	x0, [sp, #24]
  463264:	ldr	x0, [x0, #40]
  463268:	bl	404880 <free@plt>
  46326c:	ldr	x0, [sp, #24]
  463270:	str	xzr, [x0, #40]
  463274:	nop
  463278:	ldp	x29, x30, [sp], #48
  46327c:	ret
  463280:	stp	x29, x30, [sp, #-224]!
  463284:	mov	x29, sp
  463288:	str	x0, [sp, #40]
  46328c:	str	x1, [sp, #32]
  463290:	str	x2, [sp, #24]
  463294:	str	x3, [sp, #16]
  463298:	str	wzr, [sp, #212]
  46329c:	ldr	x0, [sp, #40]
  4632a0:	ldrb	w1, [x0, #56]
  4632a4:	and	w1, w1, #0xfffffff7
  4632a8:	strb	w1, [x0, #56]
  4632ac:	ldr	x0, [sp, #40]
  4632b0:	ldr	x1, [sp, #16]
  4632b4:	str	x1, [x0, #24]
  4632b8:	ldr	x0, [sp, #40]
  4632bc:	ldrb	w1, [x0, #56]
  4632c0:	and	w1, w1, #0xffffffbf
  4632c4:	strb	w1, [x0, #56]
  4632c8:	ldr	x0, [sp, #40]
  4632cc:	ldrb	w0, [x0, #56]
  4632d0:	ubfx	x0, x0, #6, #1
  4632d4:	and	w2, w0, #0xff
  4632d8:	ldr	x1, [sp, #40]
  4632dc:	ldrb	w0, [x1, #56]
  4632e0:	bfi	w0, w2, #5, #1
  4632e4:	strb	w0, [x1, #56]
  4632e8:	ldr	x0, [sp, #40]
  4632ec:	str	xzr, [x0, #16]
  4632f0:	ldr	x0, [sp, #40]
  4632f4:	str	xzr, [x0, #48]
  4632f8:	ldr	x0, [sp, #40]
  4632fc:	ldrb	w1, [x0, #56]
  463300:	and	w1, w1, #0xfffffffe
  463304:	strb	w1, [x0, #56]
  463308:	ldr	x0, [sp, #40]
  46330c:	ldrb	w1, [x0, #56]
  463310:	and	w1, w1, #0xfffffff9
  463314:	strb	w1, [x0, #56]
  463318:	ldr	x0, [sp, #40]
  46331c:	ldr	x0, [x0]
  463320:	str	x0, [sp, #216]
  463324:	ldr	x0, [sp, #40]
  463328:	ldr	x0, [x0, #8]
  46332c:	cmp	x0, #0xe7
  463330:	cset	w0, ls  // ls = plast
  463334:	and	w0, w0, #0xff
  463338:	and	x0, x0, #0xff
  46333c:	cmp	x0, #0x0
  463340:	b.eq	463384 <_obstack_memory_used@@Base+0x6244>  // b.none
  463344:	ldr	x0, [sp, #40]
  463348:	ldr	x0, [x0]
  46334c:	mov	x1, #0xe8                  	// #232
  463350:	bl	4045e0 <realloc@plt>
  463354:	str	x0, [sp, #216]
  463358:	ldr	x0, [sp, #216]
  46335c:	cmp	x0, #0x0
  463360:	b.ne	46336c <_obstack_memory_used@@Base+0x622c>  // b.any
  463364:	mov	w0, #0xc                   	// #12
  463368:	b	463584 <_obstack_memory_used@@Base+0x6444>
  46336c:	ldr	x0, [sp, #40]
  463370:	mov	x1, #0xe8                  	// #232
  463374:	str	x1, [x0, #8]
  463378:	ldr	x0, [sp, #40]
  46337c:	ldr	x1, [sp, #216]
  463380:	str	x1, [x0]
  463384:	ldr	x0, [sp, #40]
  463388:	mov	x1, #0xe8                  	// #232
  46338c:	str	x1, [x0, #16]
  463390:	ldr	x1, [sp, #24]
  463394:	ldr	x0, [sp, #216]
  463398:	bl	46358c <_obstack_memory_used@@Base+0x644c>
  46339c:	str	w0, [sp, #212]
  4633a0:	ldr	w0, [sp, #212]
  4633a4:	cmp	w0, #0x0
  4633a8:	cset	w0, ne  // ne = any
  4633ac:	and	w0, w0, #0xff
  4633b0:	and	x0, x0, #0xff
  4633b4:	cmp	x0, #0x0
  4633b8:	b.eq	4633dc <_obstack_memory_used@@Base+0x629c>  // b.none
  4633bc:	ldr	x0, [sp, #216]
  4633c0:	bl	462f94 <_obstack_memory_used@@Base+0x5e54>
  4633c4:	ldr	x0, [sp, #40]
  4633c8:	str	xzr, [x0]
  4633cc:	ldr	x0, [sp, #40]
  4633d0:	str	xzr, [x0, #8]
  4633d4:	ldr	w0, [sp, #212]
  4633d8:	b	463584 <_obstack_memory_used@@Base+0x6444>
  4633dc:	ldr	x1, [sp, #24]
  4633e0:	ldr	x0, [sp, #40]
  4633e4:	ldr	x2, [x0, #40]
  4633e8:	ldr	x0, [sp, #16]
  4633ec:	and	x0, x0, #0x400000
  4633f0:	cmp	x0, #0x0
  4633f4:	cset	w0, ne  // ne = any
  4633f8:	and	w3, w0, #0xff
  4633fc:	add	x0, sp, #0x38
  463400:	ldr	x5, [sp, #216]
  463404:	mov	w4, w3
  463408:	mov	x3, x2
  46340c:	mov	x2, x1
  463410:	ldr	x1, [sp, #32]
  463414:	bl	45d8d8 <_obstack_memory_used@@Base+0x798>
  463418:	str	w0, [sp, #212]
  46341c:	ldr	w0, [sp, #212]
  463420:	cmp	w0, #0x0
  463424:	cset	w0, ne  // ne = any
  463428:	and	w0, w0, #0xff
  46342c:	and	x0, x0, #0xff
  463430:	cmp	x0, #0x0
  463434:	b.eq	46347c <_obstack_memory_used@@Base+0x633c>  // b.none
  463438:	nop
  46343c:	b	46344c <_obstack_memory_used@@Base+0x630c>
  463440:	nop
  463444:	b	46344c <_obstack_memory_used@@Base+0x630c>
  463448:	nop
  46344c:	ldr	x0, [sp, #40]
  463450:	bl	463b84 <_obstack_memory_used@@Base+0x6a44>
  463454:	add	x0, sp, #0x38
  463458:	bl	45fe9c <_obstack_memory_used@@Base+0x2d5c>
  46345c:	ldr	x0, [sp, #216]
  463460:	bl	462f94 <_obstack_memory_used@@Base+0x5e54>
  463464:	ldr	x0, [sp, #40]
  463468:	str	xzr, [x0]
  46346c:	ldr	x0, [sp, #40]
  463470:	str	xzr, [x0, #8]
  463474:	ldr	w0, [sp, #212]
  463478:	b	463584 <_obstack_memory_used@@Base+0x6444>
  46347c:	ldr	x0, [sp, #40]
  463480:	str	xzr, [x0, #48]
  463484:	add	x1, sp, #0xd4
  463488:	add	x0, sp, #0x38
  46348c:	mov	x3, x1
  463490:	ldr	x2, [sp, #16]
  463494:	ldr	x1, [sp, #40]
  463498:	bl	466e40 <_obstack_memory_used@@Base+0x9d00>
  46349c:	mov	x1, x0
  4634a0:	ldr	x0, [sp, #216]
  4634a4:	str	x1, [x0, #104]
  4634a8:	ldr	x0, [sp, #216]
  4634ac:	ldr	x0, [x0, #104]
  4634b0:	cmp	x0, #0x0
  4634b4:	cset	w0, eq  // eq = none
  4634b8:	and	w0, w0, #0xff
  4634bc:	and	x0, x0, #0xff
  4634c0:	cmp	x0, #0x0
  4634c4:	b.ne	463440 <_obstack_memory_used@@Base+0x6300>  // b.any
  4634c8:	ldr	x0, [sp, #40]
  4634cc:	bl	464314 <_obstack_memory_used@@Base+0x71d4>
  4634d0:	str	w0, [sp, #212]
  4634d4:	ldr	w0, [sp, #212]
  4634d8:	cmp	w0, #0x0
  4634dc:	cset	w0, ne  // ne = any
  4634e0:	and	w0, w0, #0xff
  4634e4:	and	x0, x0, #0xff
  4634e8:	cmp	x0, #0x0
  4634ec:	b.ne	463448 <_obstack_memory_used@@Base+0x6308>  // b.any
  4634f0:	ldr	x0, [sp, #216]
  4634f4:	ldrb	w0, [x0, #176]
  4634f8:	and	w0, w0, #0x4
  4634fc:	and	w0, w0, #0xff
  463500:	cmp	w0, #0x0
  463504:	b.eq	463530 <_obstack_memory_used@@Base+0x63f0>  // b.none
  463508:	ldr	x0, [sp, #16]
  46350c:	and	x0, x0, #0x400000
  463510:	cmp	x0, #0x0
  463514:	b.ne	463530 <_obstack_memory_used@@Base+0x63f0>  // b.any
  463518:	ldr	x0, [sp, #40]
  46351c:	ldr	x0, [x0, #40]
  463520:	cmp	x0, #0x0
  463524:	b.ne	463530 <_obstack_memory_used@@Base+0x63f0>  // b.any
  463528:	ldr	x0, [sp, #216]
  46352c:	bl	463fd0 <_obstack_memory_used@@Base+0x6e90>
  463530:	ldr	x0, [sp, #216]
  463534:	bl	463c10 <_obstack_memory_used@@Base+0x6ad0>
  463538:	str	w0, [sp, #212]
  46353c:	ldr	x0, [sp, #40]
  463540:	bl	463b84 <_obstack_memory_used@@Base+0x6a44>
  463544:	add	x0, sp, #0x38
  463548:	bl	45fe9c <_obstack_memory_used@@Base+0x2d5c>
  46354c:	ldr	w0, [sp, #212]
  463550:	cmp	w0, #0x0
  463554:	cset	w0, ne  // ne = any
  463558:	and	w0, w0, #0xff
  46355c:	and	x0, x0, #0xff
  463560:	cmp	x0, #0x0
  463564:	b.eq	463580 <_obstack_memory_used@@Base+0x6440>  // b.none
  463568:	ldr	x0, [sp, #216]
  46356c:	bl	462f94 <_obstack_memory_used@@Base+0x5e54>
  463570:	ldr	x0, [sp, #40]
  463574:	str	xzr, [x0]
  463578:	ldr	x0, [sp, #40]
  46357c:	str	xzr, [x0, #8]
  463580:	ldr	w0, [sp, #212]
  463584:	ldp	x29, x30, [sp], #224
  463588:	ret
  46358c:	stp	x29, x30, [sp, #-96]!
  463590:	mov	x29, sp
  463594:	str	x0, [sp, #24]
  463598:	str	x1, [sp, #16]
  46359c:	mov	x0, #0x8                   	// #8
  4635a0:	str	x0, [sp, #64]
  4635a4:	ldr	x0, [sp, #64]
  4635a8:	cmp	x0, #0x18
  4635ac:	b.ls	4635bc <_obstack_memory_used@@Base+0x647c>  // b.plast
  4635b0:	ldr	x0, [sp, #64]
  4635b4:	cmp	x0, #0x10
  4635b8:	b.ls	463624 <_obstack_memory_used@@Base+0x64e4>  // b.plast
  4635bc:	ldr	x0, [sp, #64]
  4635c0:	cmp	x0, #0x18
  4635c4:	b.ls	463624 <_obstack_memory_used@@Base+0x64e4>  // b.plast
  4635c8:	ldr	x0, [sp, #64]
  4635cc:	cmp	x0, #0x18
  4635d0:	b.ls	463624 <_obstack_memory_used@@Base+0x64e4>  // b.plast
  4635d4:	ldr	x0, [sp, #64]
  4635d8:	cmp	x0, #0x18
  4635dc:	b.ls	4635ec <_obstack_memory_used@@Base+0x64ac>  // b.plast
  4635e0:	ldr	x0, [sp, #64]
  4635e4:	cmp	x0, #0x10
  4635e8:	b.ls	463618 <_obstack_memory_used@@Base+0x64d8>  // b.plast
  4635ec:	ldr	x0, [sp, #64]
  4635f0:	cmp	x0, #0x18
  4635f4:	b.ls	463610 <_obstack_memory_used@@Base+0x64d0>  // b.plast
  4635f8:	ldr	x2, [sp, #64]
  4635fc:	ldr	x1, [sp, #64]
  463600:	mov	x0, #0x10                  	// #16
  463604:	cmp	x2, #0x10
  463608:	csel	x0, x1, x0, cs  // cs = hs, nlast
  46360c:	b	463620 <_obstack_memory_used@@Base+0x64e0>
  463610:	mov	x0, #0x18                  	// #24
  463614:	b	463620 <_obstack_memory_used@@Base+0x64e0>
  463618:	mov	x0, #0x10                  	// #16
  46361c:	b	463628 <_obstack_memory_used@@Base+0x64e8>
  463620:	b	463628 <_obstack_memory_used@@Base+0x64e8>
  463624:	mov	x0, #0x18                  	// #24
  463628:	str	x0, [sp, #56]
  46362c:	mov	x2, #0xe8                  	// #232
  463630:	mov	w1, #0x0                   	// #0
  463634:	ldr	x0, [sp, #24]
  463638:	bl	4044d0 <memset@plt>
  46363c:	ldr	x0, [sp, #24]
  463640:	mov	w1, #0xf                   	// #15
  463644:	str	w1, [x0, #128]
  463648:	mov	x1, #0xffffffffffffffff    	// #-1
  46364c:	ldr	x0, [sp, #56]
  463650:	udiv	x0, x1, x0
  463654:	cmp	x0, #0x0
  463658:	b.lt	463670 <_obstack_memory_used@@Base+0x6530>  // b.tstop
  46365c:	mov	x1, #0xffffffffffffffff    	// #-1
  463660:	ldr	x0, [sp, #56]
  463664:	udiv	x0, x1, x0
  463668:	lsr	x0, x0, #1
  46366c:	b	463674 <_obstack_memory_used@@Base+0x6534>
  463670:	mov	x0, #0x3fffffffffffffff    	// #4611686018427387903
  463674:	ldr	x1, [sp, #16]
  463678:	cmp	x0, x1
  46367c:	cset	w0, ls  // ls = plast
  463680:	and	w0, w0, #0xff
  463684:	and	x0, x0, #0xff
  463688:	cmp	x0, #0x0
  46368c:	b.eq	463698 <_obstack_memory_used@@Base+0x6558>  // b.none
  463690:	mov	w0, #0xc                   	// #12
  463694:	b	4639a4 <_obstack_memory_used@@Base+0x6864>
  463698:	ldr	x0, [sp, #16]
  46369c:	add	x1, x0, #0x1
  4636a0:	ldr	x0, [sp, #24]
  4636a4:	str	x1, [x0, #8]
  4636a8:	ldr	x0, [sp, #24]
  4636ac:	ldr	x0, [x0, #8]
  4636b0:	lsl	x0, x0, #4
  4636b4:	bl	4043f0 <malloc@plt>
  4636b8:	mov	x1, x0
  4636bc:	ldr	x0, [sp, #24]
  4636c0:	str	x1, [x0]
  4636c4:	mov	x0, #0x1                   	// #1
  4636c8:	str	x0, [sp, #88]
  4636cc:	ldr	x1, [sp, #88]
  4636d0:	ldr	x0, [sp, #16]
  4636d4:	cmp	x1, x0
  4636d8:	b.hi	4636ec <_obstack_memory_used@@Base+0x65ac>  // b.pmore
  4636dc:	ldr	x0, [sp, #88]
  4636e0:	lsl	x0, x0, #1
  4636e4:	str	x0, [sp, #88]
  4636e8:	b	4636cc <_obstack_memory_used@@Base+0x658c>
  4636ec:	nop
  4636f0:	ldr	x1, [sp, #88]
  4636f4:	mov	x0, #0x18                  	// #24
  4636f8:	bl	404560 <calloc@plt>
  4636fc:	mov	x1, x0
  463700:	ldr	x0, [sp, #24]
  463704:	str	x1, [x0, #64]
  463708:	ldr	x0, [sp, #88]
  46370c:	sub	x1, x0, #0x1
  463710:	ldr	x0, [sp, #24]
  463714:	str	x1, [x0, #136]
  463718:	bl	4048a0 <__ctype_get_mb_cur_max@plt>
  46371c:	mov	w1, w0
  463720:	ldr	x0, [sp, #24]
  463724:	str	w1, [x0, #180]
  463728:	mov	w0, #0xe                   	// #14
  46372c:	bl	4043c0 <nl_langinfo@plt>
  463730:	str	x0, [sp, #48]
  463734:	ldr	x0, [sp, #48]
  463738:	ldrb	w0, [x0]
  46373c:	cmp	w0, #0x55
  463740:	b.eq	463754 <_obstack_memory_used@@Base+0x6614>  // b.none
  463744:	ldr	x0, [sp, #48]
  463748:	ldrb	w0, [x0]
  46374c:	cmp	w0, #0x75
  463750:	b.ne	4637f4 <_obstack_memory_used@@Base+0x66b4>  // b.any
  463754:	ldr	x0, [sp, #48]
  463758:	add	x0, x0, #0x1
  46375c:	ldrb	w0, [x0]
  463760:	cmp	w0, #0x54
  463764:	b.eq	46377c <_obstack_memory_used@@Base+0x663c>  // b.none
  463768:	ldr	x0, [sp, #48]
  46376c:	add	x0, x0, #0x1
  463770:	ldrb	w0, [x0]
  463774:	cmp	w0, #0x74
  463778:	b.ne	4637f4 <_obstack_memory_used@@Base+0x66b4>  // b.any
  46377c:	ldr	x0, [sp, #48]
  463780:	add	x0, x0, #0x2
  463784:	ldrb	w0, [x0]
  463788:	cmp	w0, #0x46
  46378c:	b.eq	4637a4 <_obstack_memory_used@@Base+0x6664>  // b.none
  463790:	ldr	x0, [sp, #48]
  463794:	add	x0, x0, #0x2
  463798:	ldrb	w0, [x0]
  46379c:	cmp	w0, #0x66
  4637a0:	b.ne	4637f4 <_obstack_memory_used@@Base+0x66b4>  // b.any
  4637a4:	ldr	x0, [sp, #48]
  4637a8:	add	x0, x0, #0x3
  4637ac:	ldrb	w0, [x0]
  4637b0:	cmp	w0, #0x2d
  4637b4:	b.ne	4637c0 <_obstack_memory_used@@Base+0x6680>  // b.any
  4637b8:	mov	x0, #0x4                   	// #4
  4637bc:	b	4637c4 <_obstack_memory_used@@Base+0x6684>
  4637c0:	mov	x0, #0x3                   	// #3
  4637c4:	ldr	x1, [sp, #48]
  4637c8:	add	x2, x1, x0
  4637cc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4637d0:	add	x1, x0, #0x5e8
  4637d4:	mov	x0, x2
  4637d8:	bl	4047c0 <strcmp@plt>
  4637dc:	cmp	w0, #0x0
  4637e0:	b.ne	4637f4 <_obstack_memory_used@@Base+0x66b4>  // b.any
  4637e4:	ldr	x0, [sp, #24]
  4637e8:	ldrb	w1, [x0, #176]
  4637ec:	orr	w1, w1, #0x4
  4637f0:	strb	w1, [x0, #176]
  4637f4:	ldr	x0, [sp, #24]
  4637f8:	ldrb	w1, [x0, #176]
  4637fc:	and	w1, w1, #0xfffffff7
  463800:	strb	w1, [x0, #176]
  463804:	ldr	x0, [sp, #24]
  463808:	ldr	w0, [x0, #180]
  46380c:	cmp	w0, #0x1
  463810:	b.le	463958 <_obstack_memory_used@@Base+0x6818>
  463814:	ldr	x0, [sp, #24]
  463818:	ldrb	w0, [x0, #176]
  46381c:	and	w0, w0, #0x4
  463820:	and	w0, w0, #0xff
  463824:	cmp	w0, #0x0
  463828:	b.eq	463840 <_obstack_memory_used@@Base+0x6700>  // b.none
  46382c:	ldr	x0, [sp, #24]
  463830:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  463834:	add	x1, x1, #0x5c8
  463838:	str	x1, [x0, #120]
  46383c:	b	463958 <_obstack_memory_used@@Base+0x6818>
  463840:	mov	x1, #0x1                   	// #1
  463844:	mov	x0, #0x20                  	// #32
  463848:	bl	404560 <calloc@plt>
  46384c:	mov	x1, x0
  463850:	ldr	x0, [sp, #24]
  463854:	str	x1, [x0, #120]
  463858:	ldr	x0, [sp, #24]
  46385c:	ldr	x0, [x0, #120]
  463860:	cmp	x0, #0x0
  463864:	cset	w0, eq  // eq = none
  463868:	and	w0, w0, #0xff
  46386c:	and	x0, x0, #0xff
  463870:	cmp	x0, #0x0
  463874:	b.eq	463880 <_obstack_memory_used@@Base+0x6740>  // b.none
  463878:	mov	w0, #0xc                   	// #12
  46387c:	b	4639a4 <_obstack_memory_used@@Base+0x6864>
  463880:	str	wzr, [sp, #84]
  463884:	str	wzr, [sp, #76]
  463888:	b	46394c <_obstack_memory_used@@Base+0x680c>
  46388c:	str	wzr, [sp, #80]
  463890:	b	463934 <_obstack_memory_used@@Base+0x67f4>
  463894:	ldr	w0, [sp, #76]
  463898:	bl	4046f0 <btowc@plt>
  46389c:	str	w0, [sp, #44]
  4638a0:	ldr	w0, [sp, #44]
  4638a4:	cmn	w0, #0x1
  4638a8:	b.eq	4638ec <_obstack_memory_used@@Base+0x67ac>  // b.none
  4638ac:	ldr	x0, [sp, #24]
  4638b0:	ldr	x1, [x0, #120]
  4638b4:	ldrsw	x0, [sp, #84]
  4638b8:	lsl	x0, x0, #3
  4638bc:	add	x0, x1, x0
  4638c0:	ldr	x2, [x0]
  4638c4:	ldr	w0, [sp, #80]
  4638c8:	mov	x1, #0x1                   	// #1
  4638cc:	lsl	x1, x1, x0
  4638d0:	ldr	x0, [sp, #24]
  4638d4:	ldr	x3, [x0, #120]
  4638d8:	ldrsw	x0, [sp, #84]
  4638dc:	lsl	x0, x0, #3
  4638e0:	add	x0, x3, x0
  4638e4:	orr	x1, x2, x1
  4638e8:	str	x1, [x0]
  4638ec:	ldr	w0, [sp, #76]
  4638f0:	and	w0, w0, #0xffffff80
  4638f4:	cmp	w0, #0x0
  4638f8:	b.ne	46391c <_obstack_memory_used@@Base+0x67dc>  // b.any
  4638fc:	ldr	w0, [sp, #76]
  463900:	ldr	w1, [sp, #44]
  463904:	cmp	w1, w0
  463908:	b.eq	46391c <_obstack_memory_used@@Base+0x67dc>  // b.none
  46390c:	ldr	x0, [sp, #24]
  463910:	ldrb	w1, [x0, #176]
  463914:	orr	w1, w1, #0x8
  463918:	strb	w1, [x0, #176]
  46391c:	ldr	w0, [sp, #80]
  463920:	add	w0, w0, #0x1
  463924:	str	w0, [sp, #80]
  463928:	ldr	w0, [sp, #76]
  46392c:	add	w0, w0, #0x1
  463930:	str	w0, [sp, #76]
  463934:	ldr	w0, [sp, #80]
  463938:	cmp	w0, #0x3f
  46393c:	b.le	463894 <_obstack_memory_used@@Base+0x6754>
  463940:	ldr	w0, [sp, #84]
  463944:	add	w0, w0, #0x1
  463948:	str	w0, [sp, #84]
  46394c:	ldr	w0, [sp, #84]
  463950:	cmp	w0, #0x3
  463954:	b.le	46388c <_obstack_memory_used@@Base+0x674c>
  463958:	ldr	x0, [sp, #24]
  46395c:	ldr	x0, [x0]
  463960:	cmp	x0, #0x0
  463964:	cset	w0, eq  // eq = none
  463968:	and	w0, w0, #0xff
  46396c:	and	x0, x0, #0xff
  463970:	cmp	x0, #0x0
  463974:	b.ne	463998 <_obstack_memory_used@@Base+0x6858>  // b.any
  463978:	ldr	x0, [sp, #24]
  46397c:	ldr	x0, [x0, #64]
  463980:	cmp	x0, #0x0
  463984:	cset	w0, eq  // eq = none
  463988:	and	w0, w0, #0xff
  46398c:	and	x0, x0, #0xff
  463990:	cmp	x0, #0x0
  463994:	b.eq	4639a0 <_obstack_memory_used@@Base+0x6860>  // b.none
  463998:	mov	w0, #0xc                   	// #12
  46399c:	b	4639a4 <_obstack_memory_used@@Base+0x6864>
  4639a0:	mov	w0, #0x0                   	// #0
  4639a4:	ldp	x29, x30, [sp], #96
  4639a8:	ret
  4639ac:	stp	x29, x30, [sp, #-80]!
  4639b0:	mov	x29, sp
  4639b4:	str	x0, [sp, #24]
  4639b8:	str	wzr, [sp, #76]
  4639bc:	str	wzr, [sp, #68]
  4639c0:	ldr	x0, [sp, #24]
  4639c4:	ldrb	w1, [x0, #176]
  4639c8:	orr	w1, w1, #0x10
  4639cc:	strb	w1, [x0, #176]
  4639d0:	ldr	x0, [sp, #24]
  4639d4:	ldrb	w0, [x0, #176]
  4639d8:	and	w0, w0, #0x8
  4639dc:	and	w0, w0, #0xff
  4639e0:	cmp	w0, #0x0
  4639e4:	cset	w0, eq  // eq = none
  4639e8:	and	w0, w0, #0xff
  4639ec:	and	x0, x0, #0xff
  4639f0:	cmp	x0, #0x0
  4639f4:	b.eq	463ac0 <_obstack_memory_used@@Base+0x6980>  // b.none
  4639f8:	str	xzr, [sp, #56]
  4639fc:	mov	x0, #0x3ff0000             	// #67043328
  463a00:	str	x0, [sp, #48]
  463a04:	mov	x0, #0xfffe                	// #65534
  463a08:	movk	x0, #0x87ff, lsl #16
  463a0c:	str	x0, [sp, #40]
  463a10:	mov	x0, #0x7fffffe             	// #134217726
  463a14:	str	x0, [sp, #32]
  463a18:	ldr	x0, [sp, #48]
  463a1c:	lsl	x1, x0, #32
  463a20:	ldr	x0, [sp, #56]
  463a24:	orr	x1, x1, x0
  463a28:	ldr	x0, [sp, #24]
  463a2c:	str	x1, [x0, #184]
  463a30:	ldr	x0, [sp, #32]
  463a34:	lsl	x1, x0, #32
  463a38:	ldr	x0, [sp, #40]
  463a3c:	orr	x1, x1, x0
  463a40:	ldr	x0, [sp, #24]
  463a44:	str	x1, [x0, #192]
  463a48:	mov	w0, #0x2                   	// #2
  463a4c:	str	w0, [sp, #76]
  463a50:	mov	w0, #0x80                  	// #128
  463a54:	str	w0, [sp, #68]
  463a58:	ldr	x0, [sp, #24]
  463a5c:	ldrb	w0, [x0, #176]
  463a60:	ubfx	x0, x0, #2, #1
  463a64:	and	w0, w0, #0xff
  463a68:	and	x0, x0, #0xff
  463a6c:	cmp	x0, #0x0
  463a70:	b.eq	463ac0 <_obstack_memory_used@@Base+0x6980>  // b.none
  463a74:	ldrsw	x0, [sp, #76]
  463a78:	add	x0, x0, #0x16
  463a7c:	lsl	x0, x0, #3
  463a80:	ldr	x1, [sp, #24]
  463a84:	add	x0, x1, x0
  463a88:	add	x3, x0, #0x8
  463a8c:	mov	w1, #0x100                 	// #256
  463a90:	ldr	w0, [sp, #68]
  463a94:	sub	w0, w1, w0
  463a98:	add	w1, w0, #0x7
  463a9c:	cmp	w0, #0x0
  463aa0:	csel	w0, w1, w0, lt  // lt = tstop
  463aa4:	asr	w0, w0, #3
  463aa8:	sxtw	x0, w0
  463aac:	mov	x2, x0
  463ab0:	mov	w1, #0x0                   	// #0
  463ab4:	mov	x0, x3
  463ab8:	bl	4044d0 <memset@plt>
  463abc:	b	463b7c <_obstack_memory_used@@Base+0x6a3c>
  463ac0:	nop
  463ac4:	b	463b70 <_obstack_memory_used@@Base+0x6a30>
  463ac8:	str	wzr, [sp, #72]
  463acc:	b	463b58 <_obstack_memory_used@@Base+0x6a18>
  463ad0:	bl	4047f0 <__ctype_b_loc@plt>
  463ad4:	ldr	x1, [x0]
  463ad8:	ldrsw	x0, [sp, #68]
  463adc:	lsl	x0, x0, #1
  463ae0:	add	x0, x1, x0
  463ae4:	ldrh	w0, [x0]
  463ae8:	and	w0, w0, #0x8
  463aec:	cmp	w0, #0x0
  463af0:	b.ne	463b00 <_obstack_memory_used@@Base+0x69c0>  // b.any
  463af4:	ldr	w0, [sp, #68]
  463af8:	cmp	w0, #0x5f
  463afc:	b.ne	463b40 <_obstack_memory_used@@Base+0x6a00>  // b.any
  463b00:	ldr	x1, [sp, #24]
  463b04:	ldrsw	x0, [sp, #76]
  463b08:	add	x0, x0, #0x16
  463b0c:	lsl	x0, x0, #3
  463b10:	add	x0, x1, x0
  463b14:	ldr	x1, [x0, #8]
  463b18:	ldr	w0, [sp, #72]
  463b1c:	mov	x2, #0x1                   	// #1
  463b20:	lsl	x0, x2, x0
  463b24:	orr	x1, x1, x0
  463b28:	ldr	x2, [sp, #24]
  463b2c:	ldrsw	x0, [sp, #76]
  463b30:	add	x0, x0, #0x16
  463b34:	lsl	x0, x0, #3
  463b38:	add	x0, x2, x0
  463b3c:	str	x1, [x0, #8]
  463b40:	ldr	w0, [sp, #72]
  463b44:	add	w0, w0, #0x1
  463b48:	str	w0, [sp, #72]
  463b4c:	ldr	w0, [sp, #68]
  463b50:	add	w0, w0, #0x1
  463b54:	str	w0, [sp, #68]
  463b58:	ldr	w0, [sp, #72]
  463b5c:	cmp	w0, #0x3f
  463b60:	b.le	463ad0 <_obstack_memory_used@@Base+0x6990>
  463b64:	ldr	w0, [sp, #76]
  463b68:	add	w0, w0, #0x1
  463b6c:	str	w0, [sp, #76]
  463b70:	ldr	w0, [sp, #76]
  463b74:	cmp	w0, #0x3
  463b78:	b.le	463ac8 <_obstack_memory_used@@Base+0x6988>
  463b7c:	ldp	x29, x30, [sp], #80
  463b80:	ret
  463b84:	stp	x29, x30, [sp, #-64]!
  463b88:	mov	x29, sp
  463b8c:	str	x0, [sp, #24]
  463b90:	ldr	x0, [sp, #24]
  463b94:	ldr	x0, [x0]
  463b98:	str	x0, [sp, #48]
  463b9c:	ldr	x0, [sp, #48]
  463ba0:	ldr	x0, [x0, #112]
  463ba4:	str	x0, [sp, #56]
  463ba8:	b	463bc8 <_obstack_memory_used@@Base+0x6a88>
  463bac:	ldr	x0, [sp, #56]
  463bb0:	ldr	x0, [x0]
  463bb4:	str	x0, [sp, #40]
  463bb8:	ldr	x0, [sp, #56]
  463bbc:	bl	404880 <free@plt>
  463bc0:	ldr	x0, [sp, #40]
  463bc4:	str	x0, [sp, #56]
  463bc8:	ldr	x0, [sp, #56]
  463bcc:	cmp	x0, #0x0
  463bd0:	b.ne	463bac <_obstack_memory_used@@Base+0x6a6c>  // b.any
  463bd4:	ldr	x0, [sp, #48]
  463bd8:	str	xzr, [x0, #112]
  463bdc:	ldr	x0, [sp, #48]
  463be0:	mov	w1, #0xf                   	// #15
  463be4:	str	w1, [x0, #128]
  463be8:	ldr	x0, [sp, #48]
  463bec:	str	xzr, [x0, #104]
  463bf0:	ldr	x0, [sp, #48]
  463bf4:	ldr	x0, [x0, #32]
  463bf8:	bl	404880 <free@plt>
  463bfc:	ldr	x0, [sp, #48]
  463c00:	str	xzr, [x0, #32]
  463c04:	nop
  463c08:	ldp	x29, x30, [sp], #64
  463c0c:	ret
  463c10:	stp	x29, x30, [sp, #-128]!
  463c14:	mov	x29, sp
  463c18:	str	x0, [sp, #24]
  463c1c:	ldr	x0, [sp, #24]
  463c20:	ldr	x0, [x0, #104]
  463c24:	ldr	x0, [x0, #24]
  463c28:	ldr	x0, [x0, #56]
  463c2c:	str	x0, [sp, #104]
  463c30:	ldr	x0, [sp, #24]
  463c34:	ldr	x1, [sp, #104]
  463c38:	str	x1, [x0, #144]
  463c3c:	ldr	x0, [sp, #24]
  463c40:	ldr	x2, [x0, #48]
  463c44:	ldr	x1, [sp, #104]
  463c48:	mov	x0, x1
  463c4c:	lsl	x0, x0, #1
  463c50:	add	x0, x0, x1
  463c54:	lsl	x0, x0, #3
  463c58:	add	x1, x2, x0
  463c5c:	add	x0, sp, #0x28
  463c60:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  463c64:	str	w0, [sp, #64]
  463c68:	ldr	w0, [sp, #64]
  463c6c:	cmp	w0, #0x0
  463c70:	cset	w0, ne  // ne = any
  463c74:	and	w0, w0, #0xff
  463c78:	and	x0, x0, #0xff
  463c7c:	cmp	x0, #0x0
  463c80:	b.eq	463c8c <_obstack_memory_used@@Base+0x6b4c>  // b.none
  463c84:	ldr	w0, [sp, #64]
  463c88:	b	463fc8 <_obstack_memory_used@@Base+0x6e88>
  463c8c:	ldr	x0, [sp, #24]
  463c90:	ldr	x0, [x0, #152]
  463c94:	cmp	x0, #0x0
  463c98:	b.le	463e3c <_obstack_memory_used@@Base+0x6cfc>
  463c9c:	str	xzr, [sp, #120]
  463ca0:	b	463e2c <_obstack_memory_used@@Base+0x6cec>
  463ca4:	ldr	x1, [sp, #56]
  463ca8:	ldr	x0, [sp, #120]
  463cac:	lsl	x0, x0, #3
  463cb0:	add	x0, x1, x0
  463cb4:	ldr	x0, [x0]
  463cb8:	str	x0, [sp, #96]
  463cbc:	ldr	x0, [sp, #24]
  463cc0:	ldr	x1, [x0]
  463cc4:	ldr	x0, [sp, #96]
  463cc8:	lsl	x0, x0, #4
  463ccc:	add	x0, x1, x0
  463cd0:	ldrb	w0, [x0, #8]
  463cd4:	str	w0, [sp, #92]
  463cd8:	ldr	w0, [sp, #92]
  463cdc:	cmp	w0, #0x4
  463ce0:	b.ne	463e14 <_obstack_memory_used@@Base+0x6cd4>  // b.any
  463ce4:	str	xzr, [sp, #112]
  463ce8:	b	463d58 <_obstack_memory_used@@Base+0x6c18>
  463cec:	ldr	x0, [sp, #24]
  463cf0:	ldr	x1, [x0]
  463cf4:	ldr	x2, [sp, #56]
  463cf8:	ldr	x0, [sp, #112]
  463cfc:	lsl	x0, x0, #3
  463d00:	add	x0, x2, x0
  463d04:	ldr	x0, [x0]
  463d08:	lsl	x0, x0, #4
  463d0c:	add	x0, x1, x0
  463d10:	str	x0, [sp, #80]
  463d14:	ldr	x0, [sp, #80]
  463d18:	ldrb	w0, [x0, #8]
  463d1c:	cmp	w0, #0x9
  463d20:	b.ne	463d4c <_obstack_memory_used@@Base+0x6c0c>  // b.any
  463d24:	ldr	x0, [sp, #80]
  463d28:	ldr	x1, [x0]
  463d2c:	ldr	x0, [sp, #24]
  463d30:	ldr	x2, [x0]
  463d34:	ldr	x0, [sp, #96]
  463d38:	lsl	x0, x0, #4
  463d3c:	add	x0, x2, x0
  463d40:	ldr	x0, [x0]
  463d44:	cmp	x1, x0
  463d48:	b.eq	463d6c <_obstack_memory_used@@Base+0x6c2c>  // b.none
  463d4c:	ldr	x0, [sp, #112]
  463d50:	add	x0, x0, #0x1
  463d54:	str	x0, [sp, #112]
  463d58:	ldr	x0, [sp, #48]
  463d5c:	ldr	x1, [sp, #112]
  463d60:	cmp	x1, x0
  463d64:	b.lt	463cec <_obstack_memory_used@@Base+0x6bac>  // b.tstop
  463d68:	b	463d70 <_obstack_memory_used@@Base+0x6c30>
  463d6c:	nop
  463d70:	ldr	x0, [sp, #48]
  463d74:	ldr	x1, [sp, #112]
  463d78:	cmp	x1, x0
  463d7c:	b.eq	463e1c <_obstack_memory_used@@Base+0x6cdc>  // b.none
  463d80:	ldr	w0, [sp, #92]
  463d84:	cmp	w0, #0x4
  463d88:	b.ne	463e20 <_obstack_memory_used@@Base+0x6ce0>  // b.any
  463d8c:	ldr	x0, [sp, #24]
  463d90:	ldr	x2, [x0, #40]
  463d94:	ldr	x1, [sp, #96]
  463d98:	mov	x0, x1
  463d9c:	lsl	x0, x0, #1
  463da0:	add	x0, x0, x1
  463da4:	lsl	x0, x0, #3
  463da8:	add	x0, x2, x0
  463dac:	ldr	x0, [x0, #16]
  463db0:	ldr	x0, [x0]
  463db4:	str	x0, [sp, #72]
  463db8:	add	x0, sp, #0x28
  463dbc:	ldr	x1, [sp, #72]
  463dc0:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  463dc4:	cmp	x0, #0x0
  463dc8:	b.ne	463e20 <_obstack_memory_used@@Base+0x6ce0>  // b.any
  463dcc:	ldr	x0, [sp, #24]
  463dd0:	ldr	x2, [x0, #48]
  463dd4:	ldr	x1, [sp, #72]
  463dd8:	mov	x0, x1
  463ddc:	lsl	x0, x0, #1
  463de0:	add	x0, x0, x1
  463de4:	lsl	x0, x0, #3
  463de8:	add	x1, x2, x0
  463dec:	add	x0, sp, #0x28
  463df0:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  463df4:	str	w0, [sp, #68]
  463df8:	ldr	w0, [sp, #68]
  463dfc:	cmp	w0, #0x0
  463e00:	b.eq	463e0c <_obstack_memory_used@@Base+0x6ccc>  // b.none
  463e04:	ldr	w0, [sp, #68]
  463e08:	b	463fc8 <_obstack_memory_used@@Base+0x6e88>
  463e0c:	str	xzr, [sp, #120]
  463e10:	b	463e20 <_obstack_memory_used@@Base+0x6ce0>
  463e14:	nop
  463e18:	b	463e20 <_obstack_memory_used@@Base+0x6ce0>
  463e1c:	nop
  463e20:	ldr	x0, [sp, #120]
  463e24:	add	x0, x0, #0x1
  463e28:	str	x0, [sp, #120]
  463e2c:	ldr	x0, [sp, #48]
  463e30:	ldr	x1, [sp, #120]
  463e34:	cmp	x1, x0
  463e38:	b.lt	463ca4 <_obstack_memory_used@@Base+0x6b64>  // b.tstop
  463e3c:	add	x1, sp, #0x28
  463e40:	add	x0, sp, #0x40
  463e44:	mov	w3, #0x0                   	// #0
  463e48:	mov	x2, x1
  463e4c:	ldr	x1, [sp, #24]
  463e50:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  463e54:	mov	x1, x0
  463e58:	ldr	x0, [sp, #24]
  463e5c:	str	x1, [x0, #72]
  463e60:	ldr	x0, [sp, #24]
  463e64:	ldr	x0, [x0, #72]
  463e68:	cmp	x0, #0x0
  463e6c:	cset	w0, eq  // eq = none
  463e70:	and	w0, w0, #0xff
  463e74:	and	x0, x0, #0xff
  463e78:	cmp	x0, #0x0
  463e7c:	b.eq	463e88 <_obstack_memory_used@@Base+0x6d48>  // b.none
  463e80:	ldr	w0, [sp, #64]
  463e84:	b	463fc8 <_obstack_memory_used@@Base+0x6e88>
  463e88:	ldr	x0, [sp, #24]
  463e8c:	ldr	x0, [x0, #72]
  463e90:	ldrb	w0, [x0, #104]
  463e94:	and	w0, w0, #0xffffff80
  463e98:	and	w0, w0, #0xff
  463e9c:	cmp	w0, #0x0
  463ea0:	b.eq	463f8c <_obstack_memory_used@@Base+0x6e4c>  // b.none
  463ea4:	add	x1, sp, #0x28
  463ea8:	add	x0, sp, #0x40
  463eac:	mov	w3, #0x1                   	// #1
  463eb0:	mov	x2, x1
  463eb4:	ldr	x1, [sp, #24]
  463eb8:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  463ebc:	mov	x1, x0
  463ec0:	ldr	x0, [sp, #24]
  463ec4:	str	x1, [x0, #80]
  463ec8:	add	x1, sp, #0x28
  463ecc:	add	x0, sp, #0x40
  463ed0:	mov	w3, #0x2                   	// #2
  463ed4:	mov	x2, x1
  463ed8:	ldr	x1, [sp, #24]
  463edc:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  463ee0:	mov	x1, x0
  463ee4:	ldr	x0, [sp, #24]
  463ee8:	str	x1, [x0, #88]
  463eec:	add	x1, sp, #0x28
  463ef0:	add	x0, sp, #0x40
  463ef4:	mov	w3, #0x6                   	// #6
  463ef8:	mov	x2, x1
  463efc:	ldr	x1, [sp, #24]
  463f00:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  463f04:	mov	x1, x0
  463f08:	ldr	x0, [sp, #24]
  463f0c:	str	x1, [x0, #96]
  463f10:	ldr	x0, [sp, #24]
  463f14:	ldr	x0, [x0, #80]
  463f18:	cmp	x0, #0x0
  463f1c:	cset	w0, eq  // eq = none
  463f20:	and	w0, w0, #0xff
  463f24:	and	x0, x0, #0xff
  463f28:	cmp	x0, #0x0
  463f2c:	b.ne	463f50 <_obstack_memory_used@@Base+0x6e10>  // b.any
  463f30:	ldr	x0, [sp, #24]
  463f34:	ldr	x0, [x0, #88]
  463f38:	cmp	x0, #0x0
  463f3c:	cset	w0, eq  // eq = none
  463f40:	and	w0, w0, #0xff
  463f44:	and	x0, x0, #0xff
  463f48:	cmp	x0, #0x0
  463f4c:	b.eq	463f58 <_obstack_memory_used@@Base+0x6e18>  // b.none
  463f50:	mov	w0, #0x1                   	// #1
  463f54:	b	463f5c <_obstack_memory_used@@Base+0x6e1c>
  463f58:	mov	w0, #0x0                   	// #0
  463f5c:	cmp	w0, #0x0
  463f60:	b.ne	463f84 <_obstack_memory_used@@Base+0x6e44>  // b.any
  463f64:	ldr	x0, [sp, #24]
  463f68:	ldr	x0, [x0, #96]
  463f6c:	cmp	x0, #0x0
  463f70:	cset	w0, eq  // eq = none
  463f74:	and	w0, w0, #0xff
  463f78:	and	x0, x0, #0xff
  463f7c:	cmp	x0, #0x0
  463f80:	b.eq	463fbc <_obstack_memory_used@@Base+0x6e7c>  // b.none
  463f84:	ldr	w0, [sp, #64]
  463f88:	b	463fc8 <_obstack_memory_used@@Base+0x6e88>
  463f8c:	ldr	x0, [sp, #24]
  463f90:	ldr	x1, [x0, #72]
  463f94:	ldr	x0, [sp, #24]
  463f98:	str	x1, [x0, #96]
  463f9c:	ldr	x0, [sp, #24]
  463fa0:	ldr	x1, [x0, #96]
  463fa4:	ldr	x0, [sp, #24]
  463fa8:	str	x1, [x0, #88]
  463fac:	ldr	x0, [sp, #24]
  463fb0:	ldr	x1, [x0, #88]
  463fb4:	ldr	x0, [sp, #24]
  463fb8:	str	x1, [x0, #80]
  463fbc:	ldr	x0, [sp, #56]
  463fc0:	bl	404880 <free@plt>
  463fc4:	mov	w0, #0x0                   	// #0
  463fc8:	ldp	x29, x30, [sp], #128
  463fcc:	ret
  463fd0:	stp	x29, x30, [sp, #-64]!
  463fd4:	mov	x29, sp
  463fd8:	str	x0, [sp, #24]
  463fdc:	strb	wzr, [sp, #51]
  463fe0:	strb	wzr, [sp, #50]
  463fe4:	str	xzr, [sp, #56]
  463fe8:	b	4641a0 <_obstack_memory_used@@Base+0x7060>
  463fec:	ldr	x0, [sp, #24]
  463ff0:	ldr	x1, [x0]
  463ff4:	ldr	x0, [sp, #56]
  463ff8:	lsl	x0, x0, #4
  463ffc:	add	x0, x1, x0
  464000:	ldrb	w0, [x0, #8]
  464004:	cmp	w0, #0xc
  464008:	b.eq	4640a8 <_obstack_memory_used@@Base+0x6f68>  // b.none
  46400c:	cmp	w0, #0xc
  464010:	b.gt	464184 <_obstack_memory_used@@Base+0x7044>
  464014:	cmp	w0, #0xb
  464018:	b.gt	464184 <_obstack_memory_used@@Base+0x7044>
  46401c:	cmp	w0, #0x8
  464020:	b.ge	464188 <_obstack_memory_used@@Base+0x7048>  // b.tcont
  464024:	cmp	w0, #0x6
  464028:	b.eq	4642f8 <_obstack_memory_used@@Base+0x71b8>  // b.none
  46402c:	cmp	w0, #0x6
  464030:	b.gt	464184 <_obstack_memory_used@@Base+0x7044>
  464034:	cmp	w0, #0x5
  464038:	b.eq	464110 <_obstack_memory_used@@Base+0x6fd0>  // b.none
  46403c:	cmp	w0, #0x5
  464040:	b.gt	464184 <_obstack_memory_used@@Base+0x7044>
  464044:	cmp	w0, #0x4
  464048:	b.eq	464188 <_obstack_memory_used@@Base+0x7048>  // b.none
  46404c:	cmp	w0, #0x4
  464050:	b.gt	464184 <_obstack_memory_used@@Base+0x7044>
  464054:	cmp	w0, #0x3
  464058:	b.eq	46411c <_obstack_memory_used@@Base+0x6fdc>  // b.none
  46405c:	cmp	w0, #0x3
  464060:	b.gt	464184 <_obstack_memory_used@@Base+0x7044>
  464064:	cmp	w0, #0x1
  464068:	b.eq	464078 <_obstack_memory_used@@Base+0x6f38>  // b.none
  46406c:	cmp	w0, #0x2
  464070:	b.eq	464188 <_obstack_memory_used@@Base+0x7048>  // b.none
  464074:	b	464184 <_obstack_memory_used@@Base+0x7044>
  464078:	ldr	x0, [sp, #24]
  46407c:	ldr	x1, [x0]
  464080:	ldr	x0, [sp, #56]
  464084:	lsl	x0, x0, #4
  464088:	add	x0, x1, x0
  46408c:	ldrb	w0, [x0]
  464090:	sxtb	w0, w0
  464094:	cmp	w0, #0x0
  464098:	b.ge	464190 <_obstack_memory_used@@Base+0x7050>  // b.tcont
  46409c:	mov	w0, #0x1                   	// #1
  4640a0:	strb	w0, [sp, #51]
  4640a4:	b	464190 <_obstack_memory_used@@Base+0x7050>
  4640a8:	ldr	x0, [sp, #24]
  4640ac:	ldr	x1, [x0]
  4640b0:	ldr	x0, [sp, #56]
  4640b4:	lsl	x0, x0, #4
  4640b8:	add	x0, x1, x0
  4640bc:	ldr	w0, [x0]
  4640c0:	cmp	w0, #0x40
  4640c4:	b.hi	464100 <_obstack_memory_used@@Base+0x6fc0>  // b.pmore
  4640c8:	cmp	w0, #0x10
  4640cc:	b.cc	464300 <_obstack_memory_used@@Base+0x71c0>  // b.lo, b.ul, b.last
  4640d0:	sub	w0, w0, #0x10
  4640d4:	mov	x1, #0x1                   	// #1
  4640d8:	lsl	x1, x1, x0
  4640dc:	mov	w0, #0x10001               	// #65537
  4640e0:	movk	x0, #0x1, lsl #48
  4640e4:	and	x0, x1, x0
  4640e8:	cmp	x0, #0x0
  4640ec:	cset	w0, ne  // ne = any
  4640f0:	and	w0, w0, #0xff
  4640f4:	cmp	w0, #0x0
  4640f8:	b.ne	464108 <_obstack_memory_used@@Base+0x6fc8>  // b.any
  4640fc:	b	464300 <_obstack_memory_used@@Base+0x71c0>
  464100:	cmp	w0, #0x80
  464104:	b.ne	464300 <_obstack_memory_used@@Base+0x71c0>  // b.any
  464108:	nop
  46410c:	b	464194 <_obstack_memory_used@@Base+0x7054>
  464110:	mov	w0, #0x1                   	// #1
  464114:	strb	w0, [sp, #50]
  464118:	b	464194 <_obstack_memory_used@@Base+0x7054>
  46411c:	str	wzr, [sp, #44]
  464120:	mov	w0, #0x2                   	// #2
  464124:	str	w0, [sp, #52]
  464128:	b	464174 <_obstack_memory_used@@Base+0x7034>
  46412c:	ldr	x0, [sp, #24]
  464130:	ldr	x1, [x0]
  464134:	ldr	x0, [sp, #56]
  464138:	lsl	x0, x0, #4
  46413c:	add	x0, x1, x0
  464140:	ldr	x1, [x0]
  464144:	ldrsw	x0, [sp, #52]
  464148:	lsl	x0, x0, #3
  46414c:	add	x0, x1, x0
  464150:	ldr	x1, [x0]
  464154:	ldr	w0, [sp, #44]
  464158:	lsr	x0, x1, x0
  46415c:	cmp	x0, #0x0
  464160:	b.ne	464308 <_obstack_memory_used@@Base+0x71c8>  // b.any
  464164:	str	wzr, [sp, #44]
  464168:	ldr	w0, [sp, #52]
  46416c:	add	w0, w0, #0x1
  464170:	str	w0, [sp, #52]
  464174:	ldr	w0, [sp, #52]
  464178:	cmp	w0, #0x3
  46417c:	b.le	46412c <_obstack_memory_used@@Base+0x6fec>
  464180:	b	464194 <_obstack_memory_used@@Base+0x7054>
  464184:	bl	404710 <abort@plt>
  464188:	nop
  46418c:	b	464194 <_obstack_memory_used@@Base+0x7054>
  464190:	nop
  464194:	ldr	x0, [sp, #56]
  464198:	add	x0, x0, #0x1
  46419c:	str	x0, [sp, #56]
  4641a0:	ldr	x0, [sp, #24]
  4641a4:	ldr	x1, [x0, #16]
  4641a8:	ldr	x0, [sp, #56]
  4641ac:	cmp	x1, x0
  4641b0:	b.hi	463fec <_obstack_memory_used@@Base+0x6eac>  // b.pmore
  4641b4:	ldrb	w0, [sp, #51]
  4641b8:	cmp	w0, #0x0
  4641bc:	b.ne	4641cc <_obstack_memory_used@@Base+0x708c>  // b.any
  4641c0:	ldrb	w0, [sp, #50]
  4641c4:	cmp	w0, #0x0
  4641c8:	b.eq	464298 <_obstack_memory_used@@Base+0x7158>  // b.none
  4641cc:	str	xzr, [sp, #56]
  4641d0:	b	464284 <_obstack_memory_used@@Base+0x7144>
  4641d4:	ldr	x0, [sp, #24]
  4641d8:	ldr	x1, [x0]
  4641dc:	ldr	x0, [sp, #56]
  4641e0:	lsl	x0, x0, #4
  4641e4:	add	x0, x1, x0
  4641e8:	ldrb	w0, [x0, #8]
  4641ec:	cmp	w0, #0x1
  4641f0:	b.ne	46423c <_obstack_memory_used@@Base+0x70fc>  // b.any
  4641f4:	ldr	x0, [sp, #24]
  4641f8:	ldr	x1, [x0]
  4641fc:	ldr	x0, [sp, #56]
  464200:	lsl	x0, x0, #4
  464204:	add	x0, x1, x0
  464208:	ldrb	w0, [x0]
  46420c:	sxtb	w0, w0
  464210:	cmp	w0, #0x0
  464214:	b.ge	46423c <_obstack_memory_used@@Base+0x70fc>  // b.tcont
  464218:	ldr	x0, [sp, #24]
  46421c:	ldr	x1, [x0]
  464220:	ldr	x0, [sp, #56]
  464224:	lsl	x0, x0, #4
  464228:	add	x0, x1, x0
  46422c:	ldrb	w1, [x0, #10]
  464230:	and	w1, w1, #0xffffffdf
  464234:	strb	w1, [x0, #10]
  464238:	b	464278 <_obstack_memory_used@@Base+0x7138>
  46423c:	ldr	x0, [sp, #24]
  464240:	ldr	x1, [x0]
  464244:	ldr	x0, [sp, #56]
  464248:	lsl	x0, x0, #4
  46424c:	add	x0, x1, x0
  464250:	ldrb	w0, [x0, #8]
  464254:	cmp	w0, #0x5
  464258:	b.ne	464278 <_obstack_memory_used@@Base+0x7138>  // b.any
  46425c:	ldr	x0, [sp, #24]
  464260:	ldr	x1, [x0]
  464264:	ldr	x0, [sp, #56]
  464268:	lsl	x0, x0, #4
  46426c:	add	x0, x1, x0
  464270:	mov	w1, #0x7                   	// #7
  464274:	strb	w1, [x0, #8]
  464278:	ldr	x0, [sp, #56]
  46427c:	add	x0, x0, #0x1
  464280:	str	x0, [sp, #56]
  464284:	ldr	x0, [sp, #24]
  464288:	ldr	x1, [x0, #16]
  46428c:	ldr	x0, [sp, #56]
  464290:	cmp	x1, x0
  464294:	b.hi	4641d4 <_obstack_memory_used@@Base+0x7094>  // b.pmore
  464298:	ldr	x0, [sp, #24]
  46429c:	mov	w1, #0x1                   	// #1
  4642a0:	str	w1, [x0, #180]
  4642a4:	ldr	x0, [sp, #24]
  4642a8:	ldrb	w1, [x0, #176]
  4642ac:	and	w1, w1, #0xfffffffb
  4642b0:	strb	w1, [x0, #176]
  4642b4:	ldr	x0, [sp, #24]
  4642b8:	ldr	x0, [x0, #152]
  4642bc:	cmp	x0, #0x0
  4642c0:	b.gt	4642d0 <_obstack_memory_used@@Base+0x7190>
  4642c4:	ldrb	w0, [sp, #50]
  4642c8:	cmp	w0, #0x0
  4642cc:	b.eq	4642d8 <_obstack_memory_used@@Base+0x7198>  // b.none
  4642d0:	mov	w0, #0x1                   	// #1
  4642d4:	b	4642dc <_obstack_memory_used@@Base+0x719c>
  4642d8:	mov	w0, #0x0                   	// #0
  4642dc:	and	w0, w0, #0x1
  4642e0:	and	w2, w0, #0xff
  4642e4:	ldr	x1, [sp, #24]
  4642e8:	ldrb	w0, [x1, #176]
  4642ec:	bfi	w0, w2, #1, #1
  4642f0:	strb	w0, [x1, #176]
  4642f4:	b	46430c <_obstack_memory_used@@Base+0x71cc>
  4642f8:	nop
  4642fc:	b	46430c <_obstack_memory_used@@Base+0x71cc>
  464300:	nop
  464304:	b	46430c <_obstack_memory_used@@Base+0x71cc>
  464308:	nop
  46430c:	ldp	x29, x30, [sp], #64
  464310:	ret
  464314:	stp	x29, x30, [sp, #-64]!
  464318:	mov	x29, sp
  46431c:	str	x0, [sp, #24]
  464320:	ldr	x0, [sp, #24]
  464324:	ldr	x0, [x0]
  464328:	str	x0, [sp, #40]
  46432c:	ldr	x0, [sp, #40]
  464330:	ldr	x0, [x0, #8]
  464334:	lsl	x0, x0, #3
  464338:	bl	4043f0 <malloc@plt>
  46433c:	mov	x1, x0
  464340:	ldr	x0, [sp, #40]
  464344:	str	x1, [x0, #24]
  464348:	ldr	x0, [sp, #40]
  46434c:	ldr	x0, [x0, #8]
  464350:	lsl	x0, x0, #3
  464354:	bl	4043f0 <malloc@plt>
  464358:	mov	x1, x0
  46435c:	ldr	x0, [sp, #40]
  464360:	str	x1, [x0, #32]
  464364:	ldr	x0, [sp, #40]
  464368:	ldr	x1, [x0, #8]
  46436c:	mov	x0, x1
  464370:	lsl	x0, x0, #1
  464374:	add	x0, x0, x1
  464378:	lsl	x0, x0, #3
  46437c:	bl	4043f0 <malloc@plt>
  464380:	mov	x1, x0
  464384:	ldr	x0, [sp, #40]
  464388:	str	x1, [x0, #40]
  46438c:	ldr	x0, [sp, #40]
  464390:	ldr	x1, [x0, #8]
  464394:	mov	x0, x1
  464398:	lsl	x0, x0, #1
  46439c:	add	x0, x0, x1
  4643a0:	lsl	x0, x0, #3
  4643a4:	bl	4043f0 <malloc@plt>
  4643a8:	mov	x1, x0
  4643ac:	ldr	x0, [sp, #40]
  4643b0:	str	x1, [x0, #48]
  4643b4:	ldr	x0, [sp, #40]
  4643b8:	ldr	x0, [x0, #24]
  4643bc:	cmp	x0, #0x0
  4643c0:	cset	w0, eq  // eq = none
  4643c4:	and	w0, w0, #0xff
  4643c8:	and	x0, x0, #0xff
  4643cc:	cmp	x0, #0x0
  4643d0:	b.ne	4643f4 <_obstack_memory_used@@Base+0x72b4>  // b.any
  4643d4:	ldr	x0, [sp, #40]
  4643d8:	ldr	x0, [x0, #32]
  4643dc:	cmp	x0, #0x0
  4643e0:	cset	w0, eq  // eq = none
  4643e4:	and	w0, w0, #0xff
  4643e8:	and	x0, x0, #0xff
  4643ec:	cmp	x0, #0x0
  4643f0:	b.eq	4643fc <_obstack_memory_used@@Base+0x72bc>  // b.none
  4643f4:	mov	w0, #0x1                   	// #1
  4643f8:	b	464400 <_obstack_memory_used@@Base+0x72c0>
  4643fc:	mov	w0, #0x0                   	// #0
  464400:	cmp	w0, #0x0
  464404:	b.ne	464428 <_obstack_memory_used@@Base+0x72e8>  // b.any
  464408:	ldr	x0, [sp, #40]
  46440c:	ldr	x0, [x0, #40]
  464410:	cmp	x0, #0x0
  464414:	cset	w0, eq  // eq = none
  464418:	and	w0, w0, #0xff
  46441c:	and	x0, x0, #0xff
  464420:	cmp	x0, #0x0
  464424:	b.eq	464430 <_obstack_memory_used@@Base+0x72f0>  // b.none
  464428:	mov	w0, #0x1                   	// #1
  46442c:	b	464434 <_obstack_memory_used@@Base+0x72f4>
  464430:	mov	w0, #0x0                   	// #0
  464434:	cmp	w0, #0x0
  464438:	b.ne	46445c <_obstack_memory_used@@Base+0x731c>  // b.any
  46443c:	ldr	x0, [sp, #40]
  464440:	ldr	x0, [x0, #48]
  464444:	cmp	x0, #0x0
  464448:	cset	w0, eq  // eq = none
  46444c:	and	w0, w0, #0xff
  464450:	and	x0, x0, #0xff
  464454:	cmp	x0, #0x0
  464458:	b.eq	464464 <_obstack_memory_used@@Base+0x7324>  // b.none
  46445c:	mov	w0, #0xc                   	// #12
  464460:	b	464734 <_obstack_memory_used@@Base+0x75f4>
  464464:	ldr	x0, [sp, #24]
  464468:	ldr	x0, [x0, #48]
  46446c:	lsl	x0, x0, #3
  464470:	bl	4043f0 <malloc@plt>
  464474:	mov	x1, x0
  464478:	ldr	x0, [sp, #40]
  46447c:	str	x1, [x0, #224]
  464480:	ldr	x0, [sp, #40]
  464484:	ldr	x0, [x0, #224]
  464488:	cmp	x0, #0x0
  46448c:	b.eq	46456c <_obstack_memory_used@@Base+0x742c>  // b.none
  464490:	str	xzr, [sp, #48]
  464494:	b	4644c0 <_obstack_memory_used@@Base+0x7380>
  464498:	ldr	x0, [sp, #40]
  46449c:	ldr	x1, [x0, #224]
  4644a0:	ldr	x0, [sp, #48]
  4644a4:	lsl	x0, x0, #3
  4644a8:	add	x0, x1, x0
  4644ac:	ldr	x1, [sp, #48]
  4644b0:	str	x1, [x0]
  4644b4:	ldr	x0, [sp, #48]
  4644b8:	add	x0, x0, #0x1
  4644bc:	str	x0, [sp, #48]
  4644c0:	ldr	x0, [sp, #24]
  4644c4:	ldr	x1, [x0, #48]
  4644c8:	ldr	x0, [sp, #48]
  4644cc:	cmp	x1, x0
  4644d0:	b.hi	464498 <_obstack_memory_used@@Base+0x7358>  // b.pmore
  4644d4:	ldr	x0, [sp, #40]
  4644d8:	ldr	x3, [x0, #104]
  4644dc:	ldr	x2, [sp, #40]
  4644e0:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x6ec0>
  4644e4:	add	x1, x0, #0x928
  4644e8:	mov	x0, x3
  4644ec:	bl	464848 <_obstack_memory_used@@Base+0x7708>
  4644f0:	str	xzr, [sp, #48]
  4644f4:	b	464528 <_obstack_memory_used@@Base+0x73e8>
  4644f8:	ldr	x0, [sp, #40]
  4644fc:	ldr	x1, [x0, #224]
  464500:	ldr	x0, [sp, #48]
  464504:	lsl	x0, x0, #3
  464508:	add	x0, x1, x0
  46450c:	ldr	x0, [x0]
  464510:	ldr	x1, [sp, #48]
  464514:	cmp	x1, x0
  464518:	b.ne	464540 <_obstack_memory_used@@Base+0x7400>  // b.any
  46451c:	ldr	x0, [sp, #48]
  464520:	add	x0, x0, #0x1
  464524:	str	x0, [sp, #48]
  464528:	ldr	x0, [sp, #24]
  46452c:	ldr	x1, [x0, #48]
  464530:	ldr	x0, [sp, #48]
  464534:	cmp	x1, x0
  464538:	b.hi	4644f8 <_obstack_memory_used@@Base+0x73b8>  // b.pmore
  46453c:	b	464544 <_obstack_memory_used@@Base+0x7404>
  464540:	nop
  464544:	ldr	x0, [sp, #24]
  464548:	ldr	x1, [x0, #48]
  46454c:	ldr	x0, [sp, #48]
  464550:	cmp	x1, x0
  464554:	b.ne	46456c <_obstack_memory_used@@Base+0x742c>  // b.any
  464558:	ldr	x0, [sp, #40]
  46455c:	ldr	x0, [x0, #224]
  464560:	bl	404880 <free@plt>
  464564:	ldr	x0, [sp, #40]
  464568:	str	xzr, [x0, #224]
  46456c:	ldr	x0, [sp, #40]
  464570:	ldr	x3, [x0, #104]
  464574:	ldr	x2, [sp, #24]
  464578:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x6ec0>
  46457c:	add	x1, x0, #0xaa4
  464580:	mov	x0, x3
  464584:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  464588:	str	w0, [sp, #60]
  46458c:	ldr	w0, [sp, #60]
  464590:	cmp	w0, #0x0
  464594:	cset	w0, ne  // ne = any
  464598:	and	w0, w0, #0xff
  46459c:	and	x0, x0, #0xff
  4645a0:	cmp	x0, #0x0
  4645a4:	b.eq	4645b0 <_obstack_memory_used@@Base+0x7470>  // b.none
  4645a8:	ldr	w0, [sp, #60]
  4645ac:	b	464734 <_obstack_memory_used@@Base+0x75f4>
  4645b0:	ldr	x0, [sp, #40]
  4645b4:	ldr	x3, [x0, #104]
  4645b8:	ldr	x2, [sp, #40]
  4645bc:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x6ec0>
  4645c0:	add	x1, x0, #0xdb8
  4645c4:	mov	x0, x3
  4645c8:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  4645cc:	str	w0, [sp, #60]
  4645d0:	ldr	w0, [sp, #60]
  4645d4:	cmp	w0, #0x0
  4645d8:	cset	w0, ne  // ne = any
  4645dc:	and	w0, w0, #0xff
  4645e0:	and	x0, x0, #0xff
  4645e4:	cmp	x0, #0x0
  4645e8:	b.eq	4645f4 <_obstack_memory_used@@Base+0x74b4>  // b.none
  4645ec:	ldr	w0, [sp, #60]
  4645f0:	b	464734 <_obstack_memory_used@@Base+0x75f4>
  4645f4:	ldr	x0, [sp, #40]
  4645f8:	ldr	x3, [x0, #104]
  4645fc:	ldr	x2, [sp, #40]
  464600:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x6ec0>
  464604:	add	x1, x0, #0xeb0
  464608:	mov	x0, x3
  46460c:	bl	464848 <_obstack_memory_used@@Base+0x7708>
  464610:	ldr	x0, [sp, #40]
  464614:	ldr	x3, [x0, #104]
  464618:	ldr	x2, [sp, #40]
  46461c:	adrp	x0, 464000 <_obstack_memory_used@@Base+0x6ec0>
  464620:	add	x1, x0, #0xf74
  464624:	mov	x0, x3
  464628:	bl	464848 <_obstack_memory_used@@Base+0x7708>
  46462c:	str	w0, [sp, #60]
  464630:	ldr	w0, [sp, #60]
  464634:	cmp	w0, #0x0
  464638:	cset	w0, ne  // ne = any
  46463c:	and	w0, w0, #0xff
  464640:	and	x0, x0, #0xff
  464644:	cmp	x0, #0x0
  464648:	b.eq	464654 <_obstack_memory_used@@Base+0x7514>  // b.none
  46464c:	ldr	w0, [sp, #60]
  464650:	b	464734 <_obstack_memory_used@@Base+0x75f4>
  464654:	ldr	x0, [sp, #40]
  464658:	bl	465b64 <_obstack_memory_used@@Base+0x8a24>
  46465c:	str	w0, [sp, #60]
  464660:	ldr	w0, [sp, #60]
  464664:	cmp	w0, #0x0
  464668:	cset	w0, ne  // ne = any
  46466c:	and	w0, w0, #0xff
  464670:	and	x0, x0, #0xff
  464674:	cmp	x0, #0x0
  464678:	b.eq	464684 <_obstack_memory_used@@Base+0x7544>  // b.none
  46467c:	ldr	w0, [sp, #60]
  464680:	b	464734 <_obstack_memory_used@@Base+0x75f4>
  464684:	ldr	x0, [sp, #24]
  464688:	ldrb	w0, [x0, #56]
  46468c:	and	w0, w0, #0x10
  464690:	and	w0, w0, #0xff
  464694:	cmp	w0, #0x0
  464698:	b.ne	4646c4 <_obstack_memory_used@@Base+0x7584>  // b.any
  46469c:	ldr	x0, [sp, #24]
  4646a0:	ldr	x0, [x0, #48]
  4646a4:	cmp	x0, #0x0
  4646a8:	b.eq	4646c4 <_obstack_memory_used@@Base+0x7584>  // b.none
  4646ac:	ldr	x0, [sp, #40]
  4646b0:	ldrb	w0, [x0, #176]
  4646b4:	and	w0, w0, #0x1
  4646b8:	and	w0, w0, #0xff
  4646bc:	cmp	w0, #0x0
  4646c0:	b.ne	4646d4 <_obstack_memory_used@@Base+0x7594>  // b.any
  4646c4:	ldr	x0, [sp, #40]
  4646c8:	ldr	x0, [x0, #152]
  4646cc:	cmp	x0, #0x0
  4646d0:	b.eq	464730 <_obstack_memory_used@@Base+0x75f0>  // b.none
  4646d4:	ldr	x0, [sp, #40]
  4646d8:	ldr	x1, [x0, #16]
  4646dc:	mov	x0, x1
  4646e0:	lsl	x0, x0, #1
  4646e4:	add	x0, x0, x1
  4646e8:	lsl	x0, x0, #3
  4646ec:	bl	4043f0 <malloc@plt>
  4646f0:	mov	x1, x0
  4646f4:	ldr	x0, [sp, #40]
  4646f8:	str	x1, [x0, #56]
  4646fc:	ldr	x0, [sp, #40]
  464700:	ldr	x0, [x0, #56]
  464704:	cmp	x0, #0x0
  464708:	cset	w0, eq  // eq = none
  46470c:	and	w0, w0, #0xff
  464710:	and	x0, x0, #0xff
  464714:	cmp	x0, #0x0
  464718:	b.eq	464724 <_obstack_memory_used@@Base+0x75e4>  // b.none
  46471c:	mov	w0, #0xc                   	// #12
  464720:	b	464734 <_obstack_memory_used@@Base+0x75f4>
  464724:	ldr	x0, [sp, #40]
  464728:	bl	465a04 <_obstack_memory_used@@Base+0x88c4>
  46472c:	str	w0, [sp, #60]
  464730:	ldr	w0, [sp, #60]
  464734:	ldp	x29, x30, [sp], #64
  464738:	ret
  46473c:	stp	x29, x30, [sp, #-80]!
  464740:	mov	x29, sp
  464744:	str	x0, [sp, #40]
  464748:	str	x1, [sp, #32]
  46474c:	str	x2, [sp, #24]
  464750:	ldr	x0, [sp, #40]
  464754:	str	x0, [sp, #72]
  464758:	b	464788 <_obstack_memory_used@@Base+0x7648>
  46475c:	ldr	x0, [sp, #72]
  464760:	ldr	x0, [x0, #8]
  464764:	cmp	x0, #0x0
  464768:	b.eq	46477c <_obstack_memory_used@@Base+0x763c>  // b.none
  46476c:	ldr	x0, [sp, #72]
  464770:	ldr	x0, [x0, #8]
  464774:	str	x0, [sp, #72]
  464778:	b	464788 <_obstack_memory_used@@Base+0x7648>
  46477c:	ldr	x0, [sp, #72]
  464780:	ldr	x0, [x0, #16]
  464784:	str	x0, [sp, #72]
  464788:	ldr	x0, [sp, #72]
  46478c:	ldr	x0, [x0, #8]
  464790:	cmp	x0, #0x0
  464794:	b.ne	46475c <_obstack_memory_used@@Base+0x761c>  // b.any
  464798:	ldr	x0, [sp, #72]
  46479c:	ldr	x0, [x0, #16]
  4647a0:	cmp	x0, #0x0
  4647a4:	b.ne	46475c <_obstack_memory_used@@Base+0x761c>  // b.any
  4647a8:	ldr	x2, [sp, #32]
  4647ac:	ldr	x1, [sp, #72]
  4647b0:	ldr	x0, [sp, #24]
  4647b4:	blr	x2
  4647b8:	str	w0, [sp, #68]
  4647bc:	ldr	w0, [sp, #68]
  4647c0:	cmp	w0, #0x0
  4647c4:	cset	w0, ne  // ne = any
  4647c8:	and	w0, w0, #0xff
  4647cc:	and	x0, x0, #0xff
  4647d0:	cmp	x0, #0x0
  4647d4:	b.eq	4647e0 <_obstack_memory_used@@Base+0x76a0>  // b.none
  4647d8:	ldr	w0, [sp, #68]
  4647dc:	b	464840 <_obstack_memory_used@@Base+0x7700>
  4647e0:	ldr	x0, [sp, #72]
  4647e4:	ldr	x0, [x0]
  4647e8:	cmp	x0, #0x0
  4647ec:	b.ne	4647f8 <_obstack_memory_used@@Base+0x76b8>  // b.any
  4647f0:	mov	w0, #0x0                   	// #0
  4647f4:	b	464840 <_obstack_memory_used@@Base+0x7700>
  4647f8:	ldr	x0, [sp, #72]
  4647fc:	str	x0, [sp, #56]
  464800:	ldr	x0, [sp, #72]
  464804:	ldr	x0, [x0]
  464808:	str	x0, [sp, #72]
  46480c:	ldr	x0, [sp, #72]
  464810:	ldr	x0, [x0, #16]
  464814:	ldr	x1, [sp, #56]
  464818:	cmp	x1, x0
  46481c:	b.eq	4647a8 <_obstack_memory_used@@Base+0x7668>  // b.none
  464820:	ldr	x0, [sp, #72]
  464824:	ldr	x0, [x0, #16]
  464828:	cmp	x0, #0x0
  46482c:	b.eq	4647a8 <_obstack_memory_used@@Base+0x7668>  // b.none
  464830:	ldr	x0, [sp, #72]
  464834:	ldr	x0, [x0, #16]
  464838:	str	x0, [sp, #72]
  46483c:	b	464788 <_obstack_memory_used@@Base+0x7648>
  464840:	ldp	x29, x30, [sp], #80
  464844:	ret
  464848:	stp	x29, x30, [sp, #-80]!
  46484c:	mov	x29, sp
  464850:	str	x0, [sp, #40]
  464854:	str	x1, [sp, #32]
  464858:	str	x2, [sp, #24]
  46485c:	ldr	x0, [sp, #40]
  464860:	str	x0, [sp, #72]
  464864:	ldr	x2, [sp, #32]
  464868:	ldr	x1, [sp, #72]
  46486c:	ldr	x0, [sp, #24]
  464870:	blr	x2
  464874:	str	w0, [sp, #60]
  464878:	ldr	w0, [sp, #60]
  46487c:	cmp	w0, #0x0
  464880:	cset	w0, ne  // ne = any
  464884:	and	w0, w0, #0xff
  464888:	and	x0, x0, #0xff
  46488c:	cmp	x0, #0x0
  464890:	b.eq	46489c <_obstack_memory_used@@Base+0x775c>  // b.none
  464894:	ldr	w0, [sp, #60]
  464898:	b	464920 <_obstack_memory_used@@Base+0x77e0>
  46489c:	ldr	x0, [sp, #72]
  4648a0:	ldr	x0, [x0, #8]
  4648a4:	cmp	x0, #0x0
  4648a8:	b.eq	4648bc <_obstack_memory_used@@Base+0x777c>  // b.none
  4648ac:	ldr	x0, [sp, #72]
  4648b0:	ldr	x0, [x0, #8]
  4648b4:	str	x0, [sp, #72]
  4648b8:	b	464864 <_obstack_memory_used@@Base+0x7724>
  4648bc:	str	xzr, [sp, #64]
  4648c0:	b	4648ec <_obstack_memory_used@@Base+0x77ac>
  4648c4:	ldr	x0, [sp, #72]
  4648c8:	str	x0, [sp, #64]
  4648cc:	ldr	x0, [sp, #72]
  4648d0:	ldr	x0, [x0]
  4648d4:	str	x0, [sp, #72]
  4648d8:	ldr	x0, [sp, #72]
  4648dc:	cmp	x0, #0x0
  4648e0:	b.ne	4648ec <_obstack_memory_used@@Base+0x77ac>  // b.any
  4648e4:	mov	w0, #0x0                   	// #0
  4648e8:	b	464920 <_obstack_memory_used@@Base+0x77e0>
  4648ec:	ldr	x0, [sp, #72]
  4648f0:	ldr	x0, [x0, #16]
  4648f4:	ldr	x1, [sp, #64]
  4648f8:	cmp	x1, x0
  4648fc:	b.eq	4648c4 <_obstack_memory_used@@Base+0x7784>  // b.none
  464900:	ldr	x0, [sp, #72]
  464904:	ldr	x0, [x0, #16]
  464908:	cmp	x0, #0x0
  46490c:	b.eq	4648c4 <_obstack_memory_used@@Base+0x7784>  // b.none
  464910:	ldr	x0, [sp, #72]
  464914:	ldr	x0, [x0, #16]
  464918:	str	x0, [sp, #72]
  46491c:	b	464864 <_obstack_memory_used@@Base+0x7724>
  464920:	ldp	x29, x30, [sp], #80
  464924:	ret
  464928:	sub	sp, sp, #0x30
  46492c:	str	x0, [sp, #8]
  464930:	str	x1, [sp]
  464934:	ldr	x0, [sp, #8]
  464938:	str	x0, [sp, #40]
  46493c:	ldr	x0, [sp]
  464940:	ldrb	w0, [x0, #48]
  464944:	cmp	w0, #0x4
  464948:	b.ne	4649b8 <_obstack_memory_used@@Base+0x7878>  // b.any
  46494c:	ldr	x0, [sp, #40]
  464950:	ldr	x0, [x0, #224]
  464954:	cmp	x0, #0x0
  464958:	b.eq	4649b8 <_obstack_memory_used@@Base+0x7878>  // b.none
  46495c:	ldr	x0, [sp]
  464960:	ldr	x0, [x0, #40]
  464964:	str	w0, [sp, #36]
  464968:	ldr	x0, [sp, #40]
  46496c:	ldr	x1, [x0, #224]
  464970:	ldrsw	x0, [sp, #36]
  464974:	lsl	x0, x0, #3
  464978:	add	x0, x1, x0
  46497c:	ldr	x1, [x0]
  464980:	ldr	x0, [sp]
  464984:	str	x1, [x0, #40]
  464988:	ldr	x0, [sp, #40]
  46498c:	ldr	x1, [x0, #160]
  464990:	ldr	x0, [sp]
  464994:	ldr	x0, [x0, #40]
  464998:	mov	w2, w0
  46499c:	mov	w0, #0x1                   	// #1
  4649a0:	lsl	w0, w0, w2
  4649a4:	sxtw	x0, w0
  4649a8:	orr	x1, x1, x0
  4649ac:	ldr	x0, [sp, #40]
  4649b0:	str	x1, [x0, #160]
  4649b4:	b	464a98 <_obstack_memory_used@@Base+0x7958>
  4649b8:	ldr	x0, [sp]
  4649bc:	ldrb	w0, [x0, #48]
  4649c0:	cmp	w0, #0x11
  4649c4:	b.ne	464a98 <_obstack_memory_used@@Base+0x7958>  // b.any
  4649c8:	ldr	x0, [sp]
  4649cc:	ldr	x0, [x0, #8]
  4649d0:	cmp	x0, #0x0
  4649d4:	b.eq	464a98 <_obstack_memory_used@@Base+0x7958>  // b.none
  4649d8:	ldr	x0, [sp]
  4649dc:	ldr	x0, [x0, #8]
  4649e0:	ldrb	w0, [x0, #48]
  4649e4:	cmp	w0, #0x11
  4649e8:	b.ne	464a98 <_obstack_memory_used@@Base+0x7958>  // b.any
  4649ec:	ldr	x0, [sp]
  4649f0:	ldr	x0, [x0, #8]
  4649f4:	ldr	x0, [x0, #40]
  4649f8:	str	x0, [sp, #24]
  4649fc:	ldr	x0, [sp]
  464a00:	ldr	x0, [x0, #8]
  464a04:	ldr	x1, [x0, #8]
  464a08:	ldr	x0, [sp]
  464a0c:	str	x1, [x0, #8]
  464a10:	ldr	x0, [sp]
  464a14:	ldr	x0, [x0, #8]
  464a18:	cmp	x0, #0x0
  464a1c:	b.eq	464a30 <_obstack_memory_used@@Base+0x78f0>  // b.none
  464a20:	ldr	x0, [sp]
  464a24:	ldr	x0, [x0, #8]
  464a28:	ldr	x1, [sp]
  464a2c:	str	x1, [x0]
  464a30:	ldr	x0, [sp, #40]
  464a34:	ldr	x1, [x0, #224]
  464a38:	ldr	x0, [sp]
  464a3c:	ldr	x0, [x0, #40]
  464a40:	lsl	x0, x0, #3
  464a44:	add	x1, x1, x0
  464a48:	ldr	x0, [sp, #40]
  464a4c:	ldr	x2, [x0, #224]
  464a50:	ldr	x0, [sp, #24]
  464a54:	lsl	x0, x0, #3
  464a58:	add	x0, x2, x0
  464a5c:	ldr	x1, [x1]
  464a60:	str	x1, [x0]
  464a64:	ldr	x0, [sp, #24]
  464a68:	cmp	x0, #0x3f
  464a6c:	b.gt	464a98 <_obstack_memory_used@@Base+0x7958>
  464a70:	ldr	x0, [sp, #40]
  464a74:	ldr	x1, [x0, #160]
  464a78:	ldr	x0, [sp, #24]
  464a7c:	mov	w2, w0
  464a80:	mov	x0, #0x1                   	// #1
  464a84:	lsl	x0, x0, x2
  464a88:	mvn	x0, x0
  464a8c:	and	x1, x1, x0
  464a90:	ldr	x0, [sp, #40]
  464a94:	str	x1, [x0, #160]
  464a98:	mov	w0, #0x0                   	// #0
  464a9c:	add	sp, sp, #0x30
  464aa0:	ret
  464aa4:	stp	x29, x30, [sp, #-48]!
  464aa8:	mov	x29, sp
  464aac:	str	x0, [sp, #24]
  464ab0:	str	x1, [sp, #16]
  464ab4:	ldr	x0, [sp, #24]
  464ab8:	str	x0, [sp, #40]
  464abc:	str	wzr, [sp, #36]
  464ac0:	ldr	x0, [sp, #16]
  464ac4:	ldr	x0, [x0, #8]
  464ac8:	cmp	x0, #0x0
  464acc:	b.eq	464b28 <_obstack_memory_used@@Base+0x79e8>  // b.none
  464ad0:	ldr	x0, [sp, #16]
  464ad4:	ldr	x0, [x0, #8]
  464ad8:	ldrb	w0, [x0, #48]
  464adc:	cmp	w0, #0x11
  464ae0:	b.ne	464b28 <_obstack_memory_used@@Base+0x79e8>  // b.any
  464ae4:	ldr	x0, [sp, #16]
  464ae8:	ldr	x1, [x0, #8]
  464aec:	add	x0, sp, #0x24
  464af0:	mov	x2, x1
  464af4:	ldr	x1, [sp, #40]
  464af8:	bl	464b9c <_obstack_memory_used@@Base+0x7a5c>
  464afc:	mov	x1, x0
  464b00:	ldr	x0, [sp, #16]
  464b04:	str	x1, [x0, #8]
  464b08:	ldr	x0, [sp, #16]
  464b0c:	ldr	x0, [x0, #8]
  464b10:	cmp	x0, #0x0
  464b14:	b.eq	464b28 <_obstack_memory_used@@Base+0x79e8>  // b.none
  464b18:	ldr	x0, [sp, #16]
  464b1c:	ldr	x0, [x0, #8]
  464b20:	ldr	x1, [sp, #16]
  464b24:	str	x1, [x0]
  464b28:	ldr	x0, [sp, #16]
  464b2c:	ldr	x0, [x0, #16]
  464b30:	cmp	x0, #0x0
  464b34:	b.eq	464b90 <_obstack_memory_used@@Base+0x7a50>  // b.none
  464b38:	ldr	x0, [sp, #16]
  464b3c:	ldr	x0, [x0, #16]
  464b40:	ldrb	w0, [x0, #48]
  464b44:	cmp	w0, #0x11
  464b48:	b.ne	464b90 <_obstack_memory_used@@Base+0x7a50>  // b.any
  464b4c:	ldr	x0, [sp, #16]
  464b50:	ldr	x1, [x0, #16]
  464b54:	add	x0, sp, #0x24
  464b58:	mov	x2, x1
  464b5c:	ldr	x1, [sp, #40]
  464b60:	bl	464b9c <_obstack_memory_used@@Base+0x7a5c>
  464b64:	mov	x1, x0
  464b68:	ldr	x0, [sp, #16]
  464b6c:	str	x1, [x0, #16]
  464b70:	ldr	x0, [sp, #16]
  464b74:	ldr	x0, [x0, #16]
  464b78:	cmp	x0, #0x0
  464b7c:	b.eq	464b90 <_obstack_memory_used@@Base+0x7a50>  // b.none
  464b80:	ldr	x0, [sp, #16]
  464b84:	ldr	x0, [x0, #16]
  464b88:	ldr	x1, [sp, #16]
  464b8c:	str	x1, [x0]
  464b90:	ldr	w0, [sp, #36]
  464b94:	ldp	x29, x30, [sp], #48
  464b98:	ret
  464b9c:	stp	x29, x30, [sp, #-96]!
  464ba0:	mov	x29, sp
  464ba4:	str	x0, [sp, #40]
  464ba8:	str	x1, [sp, #32]
  464bac:	str	x2, [sp, #24]
  464bb0:	ldr	x0, [sp, #32]
  464bb4:	ldr	x0, [x0]
  464bb8:	str	x0, [sp, #88]
  464bbc:	ldr	x0, [sp, #24]
  464bc0:	ldr	x0, [x0, #8]
  464bc4:	str	x0, [sp, #80]
  464bc8:	ldr	x0, [sp, #32]
  464bcc:	ldrb	w0, [x0, #56]
  464bd0:	and	w0, w0, #0x10
  464bd4:	and	w0, w0, #0xff
  464bd8:	cmp	w0, #0x0
  464bdc:	b.eq	464c2c <_obstack_memory_used@@Base+0x7aec>  // b.none
  464be0:	ldr	x0, [sp, #24]
  464be4:	ldr	x0, [x0, #8]
  464be8:	cmp	x0, #0x0
  464bec:	b.eq	464c2c <_obstack_memory_used@@Base+0x7aec>  // b.none
  464bf0:	ldr	x0, [sp, #24]
  464bf4:	ldr	x0, [x0, #40]
  464bf8:	cmp	x0, #0x3f
  464bfc:	b.gt	464c20 <_obstack_memory_used@@Base+0x7ae0>
  464c00:	ldr	x0, [sp, #88]
  464c04:	ldr	x0, [x0, #160]
  464c08:	ldr	x1, [sp, #24]
  464c0c:	ldr	x1, [x1, #40]
  464c10:	lsr	x0, x0, x1
  464c14:	and	x0, x0, #0x1
  464c18:	cmp	x0, #0x0
  464c1c:	b.ne	464c2c <_obstack_memory_used@@Base+0x7aec>  // b.any
  464c20:	ldr	x0, [sp, #24]
  464c24:	ldr	x0, [x0, #8]
  464c28:	b	464db0 <_obstack_memory_used@@Base+0x7c70>
  464c2c:	mov	w3, #0x8                   	// #8
  464c30:	mov	x2, #0x0                   	// #0
  464c34:	mov	x1, #0x0                   	// #0
  464c38:	ldr	x0, [sp, #88]
  464c3c:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  464c40:	str	x0, [sp, #72]
  464c44:	mov	w3, #0x9                   	// #9
  464c48:	mov	x2, #0x0                   	// #0
  464c4c:	mov	x1, #0x0                   	// #0
  464c50:	ldr	x0, [sp, #88]
  464c54:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  464c58:	str	x0, [sp, #64]
  464c5c:	ldr	x0, [sp, #80]
  464c60:	cmp	x0, #0x0
  464c64:	b.eq	464c80 <_obstack_memory_used@@Base+0x7b40>  // b.none
  464c68:	mov	w3, #0x10                  	// #16
  464c6c:	ldr	x2, [sp, #64]
  464c70:	ldr	x1, [sp, #80]
  464c74:	ldr	x0, [sp, #88]
  464c78:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  464c7c:	b	464c84 <_obstack_memory_used@@Base+0x7b44>
  464c80:	ldr	x0, [sp, #64]
  464c84:	str	x0, [sp, #56]
  464c88:	mov	w3, #0x10                  	// #16
  464c8c:	ldr	x2, [sp, #56]
  464c90:	ldr	x1, [sp, #72]
  464c94:	ldr	x0, [sp, #88]
  464c98:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  464c9c:	str	x0, [sp, #48]
  464ca0:	ldr	x0, [sp, #48]
  464ca4:	cmp	x0, #0x0
  464ca8:	cset	w0, eq  // eq = none
  464cac:	and	w0, w0, #0xff
  464cb0:	and	x0, x0, #0xff
  464cb4:	cmp	x0, #0x0
  464cb8:	b.ne	464cd8 <_obstack_memory_used@@Base+0x7b98>  // b.any
  464cbc:	ldr	x0, [sp, #56]
  464cc0:	cmp	x0, #0x0
  464cc4:	cset	w0, eq  // eq = none
  464cc8:	and	w0, w0, #0xff
  464ccc:	and	x0, x0, #0xff
  464cd0:	cmp	x0, #0x0
  464cd4:	b.eq	464ce0 <_obstack_memory_used@@Base+0x7ba0>  // b.none
  464cd8:	mov	w0, #0x1                   	// #1
  464cdc:	b	464ce4 <_obstack_memory_used@@Base+0x7ba4>
  464ce0:	mov	w0, #0x0                   	// #0
  464ce4:	cmp	w0, #0x0
  464ce8:	b.ne	464d08 <_obstack_memory_used@@Base+0x7bc8>  // b.any
  464cec:	ldr	x0, [sp, #72]
  464cf0:	cmp	x0, #0x0
  464cf4:	cset	w0, eq  // eq = none
  464cf8:	and	w0, w0, #0xff
  464cfc:	and	x0, x0, #0xff
  464d00:	cmp	x0, #0x0
  464d04:	b.eq	464d10 <_obstack_memory_used@@Base+0x7bd0>  // b.none
  464d08:	mov	w0, #0x1                   	// #1
  464d0c:	b	464d14 <_obstack_memory_used@@Base+0x7bd4>
  464d10:	mov	w0, #0x0                   	// #0
  464d14:	cmp	w0, #0x0
  464d18:	b.ne	464d38 <_obstack_memory_used@@Base+0x7bf8>  // b.any
  464d1c:	ldr	x0, [sp, #64]
  464d20:	cmp	x0, #0x0
  464d24:	cset	w0, eq  // eq = none
  464d28:	and	w0, w0, #0xff
  464d2c:	and	x0, x0, #0xff
  464d30:	cmp	x0, #0x0
  464d34:	b.eq	464d4c <_obstack_memory_used@@Base+0x7c0c>  // b.none
  464d38:	ldr	x0, [sp, #40]
  464d3c:	mov	w1, #0xc                   	// #12
  464d40:	str	w1, [x0]
  464d44:	mov	x0, #0x0                   	// #0
  464d48:	b	464db0 <_obstack_memory_used@@Base+0x7c70>
  464d4c:	ldr	x0, [sp, #24]
  464d50:	ldr	x1, [x0, #40]
  464d54:	ldr	x0, [sp, #64]
  464d58:	str	x1, [x0, #40]
  464d5c:	ldr	x0, [sp, #64]
  464d60:	ldr	x1, [x0, #40]
  464d64:	ldr	x0, [sp, #72]
  464d68:	str	x1, [x0, #40]
  464d6c:	ldr	x0, [sp, #24]
  464d70:	ldrb	w0, [x0, #50]
  464d74:	ubfx	x0, x0, #3, #1
  464d78:	and	w2, w0, #0xff
  464d7c:	ldr	x1, [sp, #64]
  464d80:	ldrb	w0, [x1, #50]
  464d84:	bfi	w0, w2, #3, #1
  464d88:	strb	w0, [x1, #50]
  464d8c:	ldr	x0, [sp, #64]
  464d90:	ldrb	w0, [x0, #50]
  464d94:	ubfx	x0, x0, #3, #1
  464d98:	and	w2, w0, #0xff
  464d9c:	ldr	x1, [sp, #72]
  464da0:	ldrb	w0, [x1, #50]
  464da4:	bfi	w0, w2, #3, #1
  464da8:	strb	w0, [x1, #50]
  464dac:	ldr	x0, [sp, #48]
  464db0:	ldp	x29, x30, [sp], #96
  464db4:	ret
  464db8:	stp	x29, x30, [sp, #-48]!
  464dbc:	mov	x29, sp
  464dc0:	str	x0, [sp, #24]
  464dc4:	str	x1, [sp, #16]
  464dc8:	ldr	x0, [sp, #24]
  464dcc:	str	x0, [sp, #40]
  464dd0:	ldr	x0, [sp, #16]
  464dd4:	ldrb	w0, [x0, #48]
  464dd8:	cmp	w0, #0x10
  464ddc:	b.ne	464e0c <_obstack_memory_used@@Base+0x7ccc>  // b.any
  464de0:	ldr	x0, [sp, #16]
  464de4:	ldr	x0, [x0, #8]
  464de8:	ldr	x1, [x0, #24]
  464dec:	ldr	x0, [sp, #16]
  464df0:	str	x1, [x0, #24]
  464df4:	ldr	x0, [sp, #16]
  464df8:	ldr	x0, [x0, #8]
  464dfc:	ldr	x1, [x0, #56]
  464e00:	ldr	x0, [sp, #16]
  464e04:	str	x1, [x0, #56]
  464e08:	b	464ea4 <_obstack_memory_used@@Base+0x7d64>
  464e0c:	ldr	x0, [sp, #16]
  464e10:	ldr	x1, [sp, #16]
  464e14:	str	x1, [x0, #24]
  464e18:	ldr	x0, [sp, #16]
  464e1c:	ldp	x1, x2, [x0, #40]
  464e20:	ldr	x0, [sp, #40]
  464e24:	bl	461534 <_obstack_memory_used@@Base+0x43f4>
  464e28:	mov	x1, x0
  464e2c:	ldr	x0, [sp, #16]
  464e30:	str	x1, [x0, #56]
  464e34:	ldr	x0, [sp, #16]
  464e38:	ldr	x0, [x0, #56]
  464e3c:	cmn	x0, #0x1
  464e40:	cset	w0, eq  // eq = none
  464e44:	and	w0, w0, #0xff
  464e48:	and	x0, x0, #0xff
  464e4c:	cmp	x0, #0x0
  464e50:	b.eq	464e5c <_obstack_memory_used@@Base+0x7d1c>  // b.none
  464e54:	mov	w0, #0xc                   	// #12
  464e58:	b	464ea8 <_obstack_memory_used@@Base+0x7d68>
  464e5c:	ldr	x0, [sp, #16]
  464e60:	ldrb	w0, [x0, #48]
  464e64:	cmp	w0, #0xc
  464e68:	b.ne	464ea4 <_obstack_memory_used@@Base+0x7d64>  // b.any
  464e6c:	ldr	x0, [sp, #16]
  464e70:	ldr	w2, [x0, #40]
  464e74:	ldr	x0, [sp, #40]
  464e78:	ldr	x1, [x0]
  464e7c:	ldr	x0, [sp, #16]
  464e80:	ldr	x0, [x0, #56]
  464e84:	lsl	x0, x0, #4
  464e88:	add	x1, x1, x0
  464e8c:	mov	w0, w2
  464e90:	and	w0, w0, #0x3ff
  464e94:	and	w2, w0, #0xffff
  464e98:	ldr	w0, [x1, #8]
  464e9c:	bfi	w0, w2, #8, #10
  464ea0:	str	w0, [x1, #8]
  464ea4:	mov	w0, #0x0                   	// #0
  464ea8:	ldp	x29, x30, [sp], #48
  464eac:	ret
  464eb0:	sub	sp, sp, #0x10
  464eb4:	str	x0, [sp, #8]
  464eb8:	str	x1, [sp]
  464ebc:	ldr	x0, [sp]
  464ec0:	ldrb	w0, [x0, #48]
  464ec4:	cmp	w0, #0xb
  464ec8:	b.eq	464ed8 <_obstack_memory_used@@Base+0x7d98>  // b.none
  464ecc:	cmp	w0, #0x10
  464ed0:	b.eq	464eec <_obstack_memory_used@@Base+0x7dac>  // b.none
  464ed4:	b	464f1c <_obstack_memory_used@@Base+0x7ddc>
  464ed8:	ldr	x0, [sp]
  464edc:	ldr	x0, [x0, #8]
  464ee0:	ldr	x1, [sp]
  464ee4:	str	x1, [x0, #32]
  464ee8:	b	464f68 <_obstack_memory_used@@Base+0x7e28>
  464eec:	ldr	x0, [sp]
  464ef0:	ldr	x1, [x0, #16]
  464ef4:	ldr	x0, [sp]
  464ef8:	ldr	x0, [x0, #8]
  464efc:	ldr	x1, [x1, #24]
  464f00:	str	x1, [x0, #32]
  464f04:	ldr	x0, [sp]
  464f08:	ldr	x0, [x0, #16]
  464f0c:	ldr	x1, [sp]
  464f10:	ldr	x1, [x1, #32]
  464f14:	str	x1, [x0, #32]
  464f18:	b	464f68 <_obstack_memory_used@@Base+0x7e28>
  464f1c:	ldr	x0, [sp]
  464f20:	ldr	x0, [x0, #8]
  464f24:	cmp	x0, #0x0
  464f28:	b.eq	464f40 <_obstack_memory_used@@Base+0x7e00>  // b.none
  464f2c:	ldr	x0, [sp]
  464f30:	ldr	x0, [x0, #8]
  464f34:	ldr	x1, [sp]
  464f38:	ldr	x1, [x1, #32]
  464f3c:	str	x1, [x0, #32]
  464f40:	ldr	x0, [sp]
  464f44:	ldr	x0, [x0, #16]
  464f48:	cmp	x0, #0x0
  464f4c:	b.eq	464f64 <_obstack_memory_used@@Base+0x7e24>  // b.none
  464f50:	ldr	x0, [sp]
  464f54:	ldr	x0, [x0, #16]
  464f58:	ldr	x1, [sp]
  464f5c:	ldr	x1, [x1, #32]
  464f60:	str	x1, [x0, #32]
  464f64:	nop
  464f68:	mov	w0, #0x0                   	// #0
  464f6c:	add	sp, sp, #0x10
  464f70:	ret
  464f74:	stp	x29, x30, [sp, #-80]!
  464f78:	mov	x29, sp
  464f7c:	str	x0, [sp, #24]
  464f80:	str	x1, [sp, #16]
  464f84:	ldr	x0, [sp, #24]
  464f88:	str	x0, [sp, #48]
  464f8c:	ldr	x0, [sp, #16]
  464f90:	ldr	x0, [x0, #56]
  464f94:	str	x0, [sp, #40]
  464f98:	str	wzr, [sp, #76]
  464f9c:	ldr	x0, [sp, #16]
  464fa0:	ldrb	w0, [x0, #48]
  464fa4:	cmp	w0, #0x10
  464fa8:	b.eq	465250 <_obstack_memory_used@@Base+0x8110>  // b.none
  464fac:	cmp	w0, #0x10
  464fb0:	b.gt	4651f4 <_obstack_memory_used@@Base+0x80b4>
  464fb4:	cmp	w0, #0xc
  464fb8:	b.eq	465134 <_obstack_memory_used@@Base+0x7ff4>  // b.none
  464fbc:	cmp	w0, #0xc
  464fc0:	b.gt	4651f4 <_obstack_memory_used@@Base+0x80b4>
  464fc4:	cmp	w0, #0xb
  464fc8:	b.gt	4651f4 <_obstack_memory_used@@Base+0x80b4>
  464fcc:	cmp	w0, #0xa
  464fd0:	b.ge	465028 <_obstack_memory_used@@Base+0x7ee8>  // b.tcont
  464fd4:	cmp	w0, #0x9
  464fd8:	b.gt	4651f4 <_obstack_memory_used@@Base+0x80b4>
  464fdc:	cmp	w0, #0x8
  464fe0:	b.ge	465134 <_obstack_memory_used@@Base+0x7ff4>  // b.tcont
  464fe4:	cmp	w0, #0x2
  464fe8:	b.eq	464ff8 <_obstack_memory_used@@Base+0x7eb8>  // b.none
  464fec:	cmp	w0, #0x4
  464ff0:	b.eq	465174 <_obstack_memory_used@@Base+0x8034>  // b.none
  464ff4:	b	4651f4 <_obstack_memory_used@@Base+0x80b4>
  464ff8:	ldr	x0, [sp, #16]
  464ffc:	ldr	x0, [x0, #32]
  465000:	cmp	x0, #0x0
  465004:	b.eq	465258 <_obstack_memory_used@@Base+0x8118>  // b.none
  465008:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46500c:	add	x3, x0, #0x8c0
  465010:	mov	w2, #0x59f                 	// #1439
  465014:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  465018:	add	x1, x0, #0x5f0
  46501c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  465020:	add	x0, x0, #0x600
  465024:	bl	404bb0 <__assert_fail@plt>
  465028:	ldr	x0, [sp, #48]
  46502c:	ldrb	w1, [x0, #176]
  465030:	orr	w1, w1, #0x1
  465034:	strb	w1, [x0, #176]
  465038:	ldr	x0, [sp, #16]
  46503c:	ldr	x0, [x0, #8]
  465040:	cmp	x0, #0x0
  465044:	b.eq	465060 <_obstack_memory_used@@Base+0x7f20>  // b.none
  465048:	ldr	x0, [sp, #16]
  46504c:	ldr	x0, [x0, #8]
  465050:	ldr	x0, [x0, #24]
  465054:	ldr	x0, [x0, #56]
  465058:	str	x0, [sp, #64]
  46505c:	b	465070 <_obstack_memory_used@@Base+0x7f30>
  465060:	ldr	x0, [sp, #16]
  465064:	ldr	x0, [x0, #32]
  465068:	ldr	x0, [x0, #56]
  46506c:	str	x0, [sp, #64]
  465070:	ldr	x0, [sp, #16]
  465074:	ldr	x0, [x0, #16]
  465078:	cmp	x0, #0x0
  46507c:	b.eq	465098 <_obstack_memory_used@@Base+0x7f58>  // b.none
  465080:	ldr	x0, [sp, #16]
  465084:	ldr	x0, [x0, #16]
  465088:	ldr	x0, [x0, #24]
  46508c:	ldr	x0, [x0, #56]
  465090:	str	x0, [sp, #56]
  465094:	b	4650a8 <_obstack_memory_used@@Base+0x7f68>
  465098:	ldr	x0, [sp, #16]
  46509c:	ldr	x0, [x0, #32]
  4650a0:	ldr	x0, [x0, #56]
  4650a4:	str	x0, [sp, #56]
  4650a8:	ldr	x0, [sp, #64]
  4650ac:	cmp	x0, #0x0
  4650b0:	b.ge	4650d4 <_obstack_memory_used@@Base+0x7f94>  // b.tcont
  4650b4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4650b8:	add	x3, x0, #0x8c0
  4650bc:	mov	w2, #0x5af                 	// #1455
  4650c0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4650c4:	add	x1, x0, #0x5f0
  4650c8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4650cc:	add	x0, x0, #0x618
  4650d0:	bl	404bb0 <__assert_fail@plt>
  4650d4:	ldr	x0, [sp, #56]
  4650d8:	cmp	x0, #0x0
  4650dc:	b.ge	465100 <_obstack_memory_used@@Base+0x7fc0>  // b.tcont
  4650e0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4650e4:	add	x3, x0, #0x8c0
  4650e8:	mov	w2, #0x5b0                 	// #1456
  4650ec:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4650f0:	add	x1, x0, #0x5f0
  4650f4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4650f8:	add	x0, x0, #0x628
  4650fc:	bl	404bb0 <__assert_fail@plt>
  465100:	ldr	x0, [sp, #48]
  465104:	ldr	x2, [x0, #40]
  465108:	ldr	x1, [sp, #40]
  46510c:	mov	x0, x1
  465110:	lsl	x0, x0, #1
  465114:	add	x0, x0, x1
  465118:	lsl	x0, x0, #3
  46511c:	add	x0, x2, x0
  465120:	ldr	x2, [sp, #56]
  465124:	ldr	x1, [sp, #64]
  465128:	bl	4601c4 <_obstack_memory_used@@Base+0x3084>
  46512c:	str	w0, [sp, #76]
  465130:	b	465264 <_obstack_memory_used@@Base+0x8124>
  465134:	ldr	x0, [sp, #48]
  465138:	ldr	x2, [x0, #40]
  46513c:	ldr	x1, [sp, #40]
  465140:	mov	x0, x1
  465144:	lsl	x0, x0, #1
  465148:	add	x0, x0, x1
  46514c:	lsl	x0, x0, #3
  465150:	add	x2, x2, x0
  465154:	ldr	x0, [sp, #16]
  465158:	ldr	x0, [x0, #32]
  46515c:	ldr	x0, [x0, #56]
  465160:	mov	x1, x0
  465164:	mov	x0, x2
  465168:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  46516c:	str	w0, [sp, #76]
  465170:	b	465264 <_obstack_memory_used@@Base+0x8124>
  465174:	ldr	x0, [sp, #16]
  465178:	ldr	x1, [x0, #32]
  46517c:	ldr	x0, [sp, #48]
  465180:	ldr	x2, [x0, #24]
  465184:	ldr	x0, [sp, #40]
  465188:	lsl	x0, x0, #3
  46518c:	add	x0, x2, x0
  465190:	ldr	x1, [x1, #56]
  465194:	str	x1, [x0]
  465198:	ldr	x0, [sp, #16]
  46519c:	ldrb	w0, [x0, #48]
  4651a0:	cmp	w0, #0x4
  4651a4:	b.ne	465260 <_obstack_memory_used@@Base+0x8120>  // b.any
  4651a8:	ldr	x0, [sp, #48]
  4651ac:	ldr	x2, [x0, #40]
  4651b0:	ldr	x1, [sp, #40]
  4651b4:	mov	x0, x1
  4651b8:	lsl	x0, x0, #1
  4651bc:	add	x0, x0, x1
  4651c0:	lsl	x0, x0, #3
  4651c4:	add	x2, x2, x0
  4651c8:	ldr	x0, [sp, #48]
  4651cc:	ldr	x1, [x0, #24]
  4651d0:	ldr	x0, [sp, #40]
  4651d4:	lsl	x0, x0, #3
  4651d8:	add	x0, x1, x0
  4651dc:	ldr	x0, [x0]
  4651e0:	mov	x1, x0
  4651e4:	mov	x0, x2
  4651e8:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  4651ec:	str	w0, [sp, #76]
  4651f0:	b	465260 <_obstack_memory_used@@Base+0x8120>
  4651f4:	ldr	x0, [sp, #16]
  4651f8:	ldrb	w0, [x0, #48]
  4651fc:	and	w0, w0, #0x8
  465200:	cmp	w0, #0x0
  465204:	b.eq	465228 <_obstack_memory_used@@Base+0x80e8>  // b.none
  465208:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46520c:	add	x3, x0, #0x8c0
  465210:	mov	w2, #0x5c2                 	// #1474
  465214:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  465218:	add	x1, x0, #0x5f0
  46521c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  465220:	add	x0, x0, #0x638
  465224:	bl	404bb0 <__assert_fail@plt>
  465228:	ldr	x0, [sp, #16]
  46522c:	ldr	x1, [x0, #32]
  465230:	ldr	x0, [sp, #48]
  465234:	ldr	x2, [x0, #24]
  465238:	ldr	x0, [sp, #40]
  46523c:	lsl	x0, x0, #3
  465240:	add	x0, x2, x0
  465244:	ldr	x1, [x1, #56]
  465248:	str	x1, [x0]
  46524c:	b	465264 <_obstack_memory_used@@Base+0x8124>
  465250:	nop
  465254:	b	465264 <_obstack_memory_used@@Base+0x8124>
  465258:	nop
  46525c:	b	465264 <_obstack_memory_used@@Base+0x8124>
  465260:	nop
  465264:	ldr	w0, [sp, #76]
  465268:	ldp	x29, x30, [sp], #80
  46526c:	ret
  465270:	stp	x29, x30, [sp, #-112]!
  465274:	mov	x29, sp
  465278:	str	x0, [sp, #56]
  46527c:	str	x1, [sp, #48]
  465280:	str	x2, [sp, #40]
  465284:	str	x3, [sp, #32]
  465288:	str	w4, [sp, #28]
  46528c:	ldr	w0, [sp, #28]
  465290:	str	w0, [sp, #92]
  465294:	ldr	x0, [sp, #48]
  465298:	str	x0, [sp, #104]
  46529c:	ldr	x0, [sp, #40]
  4652a0:	str	x0, [sp, #96]
  4652a4:	ldr	x0, [sp, #56]
  4652a8:	ldr	x1, [x0]
  4652ac:	ldr	x0, [sp, #104]
  4652b0:	lsl	x0, x0, #4
  4652b4:	add	x0, x1, x0
  4652b8:	ldrb	w0, [x0, #8]
  4652bc:	cmp	w0, #0x4
  4652c0:	b.ne	4653b8 <_obstack_memory_used@@Base+0x8278>  // b.any
  4652c4:	ldr	x0, [sp, #56]
  4652c8:	ldr	x1, [x0, #24]
  4652cc:	ldr	x0, [sp, #104]
  4652d0:	lsl	x0, x0, #3
  4652d4:	add	x0, x1, x0
  4652d8:	ldr	x0, [x0]
  4652dc:	str	x0, [sp, #80]
  4652e0:	ldr	x0, [sp, #56]
  4652e4:	ldr	x2, [x0, #40]
  4652e8:	ldr	x1, [sp, #96]
  4652ec:	mov	x0, x1
  4652f0:	lsl	x0, x0, #1
  4652f4:	add	x0, x0, x1
  4652f8:	lsl	x0, x0, #3
  4652fc:	add	x0, x2, x0
  465300:	str	xzr, [x0, #8]
  465304:	ldr	w2, [sp, #92]
  465308:	ldr	x1, [sp, #80]
  46530c:	ldr	x0, [sp, #56]
  465310:	bl	4658d4 <_obstack_memory_used@@Base+0x8794>
  465314:	str	x0, [sp, #72]
  465318:	ldr	x0, [sp, #72]
  46531c:	cmn	x0, #0x1
  465320:	cset	w0, eq  // eq = none
  465324:	and	w0, w0, #0xff
  465328:	and	x0, x0, #0xff
  46532c:	cmp	x0, #0x0
  465330:	b.eq	46533c <_obstack_memory_used@@Base+0x81fc>  // b.none
  465334:	mov	w0, #0xc                   	// #12
  465338:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  46533c:	ldr	x0, [sp, #56]
  465340:	ldr	x1, [x0, #24]
  465344:	ldr	x0, [sp, #104]
  465348:	lsl	x0, x0, #3
  46534c:	add	x1, x1, x0
  465350:	ldr	x0, [sp, #56]
  465354:	ldr	x2, [x0, #24]
  465358:	ldr	x0, [sp, #96]
  46535c:	lsl	x0, x0, #3
  465360:	add	x0, x2, x0
  465364:	ldr	x1, [x1]
  465368:	str	x1, [x0]
  46536c:	ldr	x0, [sp, #56]
  465370:	ldr	x2, [x0, #40]
  465374:	ldr	x1, [sp, #96]
  465378:	mov	x0, x1
  46537c:	lsl	x0, x0, #1
  465380:	add	x0, x0, x1
  465384:	lsl	x0, x0, #3
  465388:	add	x0, x2, x0
  46538c:	ldr	x1, [sp, #72]
  465390:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  465394:	strb	w0, [sp, #71]
  465398:	ldrb	w0, [sp, #71]
  46539c:	eor	w0, w0, #0x1
  4653a0:	and	w0, w0, #0xff
  4653a4:	and	x0, x0, #0xff
  4653a8:	cmp	x0, #0x0
  4653ac:	b.eq	4657e4 <_obstack_memory_used@@Base+0x86a4>  // b.none
  4653b0:	mov	w0, #0xc                   	// #12
  4653b4:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  4653b8:	ldr	x0, [sp, #56]
  4653bc:	ldr	x2, [x0, #40]
  4653c0:	ldr	x1, [sp, #104]
  4653c4:	mov	x0, x1
  4653c8:	lsl	x0, x0, #1
  4653cc:	add	x0, x0, x1
  4653d0:	lsl	x0, x0, #3
  4653d4:	add	x0, x2, x0
  4653d8:	ldr	x0, [x0, #8]
  4653dc:	cmp	x0, #0x0
  4653e0:	b.ne	465418 <_obstack_memory_used@@Base+0x82d8>  // b.any
  4653e4:	ldr	x0, [sp, #56]
  4653e8:	ldr	x1, [x0, #24]
  4653ec:	ldr	x0, [sp, #104]
  4653f0:	lsl	x0, x0, #3
  4653f4:	add	x1, x1, x0
  4653f8:	ldr	x0, [sp, #56]
  4653fc:	ldr	x2, [x0, #24]
  465400:	ldr	x0, [sp, #96]
  465404:	lsl	x0, x0, #3
  465408:	add	x0, x2, x0
  46540c:	ldr	x1, [x1]
  465410:	str	x1, [x0]
  465414:	b	4657fc <_obstack_memory_used@@Base+0x86bc>
  465418:	ldr	x0, [sp, #56]
  46541c:	ldr	x2, [x0, #40]
  465420:	ldr	x1, [sp, #104]
  465424:	mov	x0, x1
  465428:	lsl	x0, x0, #1
  46542c:	add	x0, x0, x1
  465430:	lsl	x0, x0, #3
  465434:	add	x0, x2, x0
  465438:	ldr	x0, [x0, #8]
  46543c:	cmp	x0, #0x1
  465440:	b.ne	4655b4 <_obstack_memory_used@@Base+0x8474>  // b.any
  465444:	ldr	x0, [sp, #56]
  465448:	ldr	x2, [x0, #40]
  46544c:	ldr	x1, [sp, #104]
  465450:	mov	x0, x1
  465454:	lsl	x0, x0, #1
  465458:	add	x0, x0, x1
  46545c:	lsl	x0, x0, #3
  465460:	add	x0, x2, x0
  465464:	ldr	x0, [x0, #16]
  465468:	ldr	x0, [x0]
  46546c:	str	x0, [sp, #80]
  465470:	ldr	x0, [sp, #56]
  465474:	ldr	x2, [x0, #40]
  465478:	ldr	x1, [sp, #96]
  46547c:	mov	x0, x1
  465480:	lsl	x0, x0, #1
  465484:	add	x0, x0, x1
  465488:	lsl	x0, x0, #3
  46548c:	add	x0, x2, x0
  465490:	str	xzr, [x0, #8]
  465494:	ldr	x1, [sp, #104]
  465498:	ldr	x0, [sp, #32]
  46549c:	cmp	x1, x0
  4654a0:	b.ne	465500 <_obstack_memory_used@@Base+0x83c0>  // b.any
  4654a4:	ldr	x1, [sp, #96]
  4654a8:	ldr	x0, [sp, #104]
  4654ac:	cmp	x1, x0
  4654b0:	b.eq	465500 <_obstack_memory_used@@Base+0x83c0>  // b.none
  4654b4:	ldr	x0, [sp, #56]
  4654b8:	ldr	x2, [x0, #40]
  4654bc:	ldr	x1, [sp, #96]
  4654c0:	mov	x0, x1
  4654c4:	lsl	x0, x0, #1
  4654c8:	add	x0, x0, x1
  4654cc:	lsl	x0, x0, #3
  4654d0:	add	x0, x2, x0
  4654d4:	ldr	x1, [sp, #80]
  4654d8:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  4654dc:	strb	w0, [sp, #71]
  4654e0:	ldrb	w0, [sp, #71]
  4654e4:	eor	w0, w0, #0x1
  4654e8:	and	w0, w0, #0xff
  4654ec:	and	x0, x0, #0xff
  4654f0:	cmp	x0, #0x0
  4654f4:	b.eq	4657f8 <_obstack_memory_used@@Base+0x86b8>  // b.none
  4654f8:	mov	w0, #0xc                   	// #12
  4654fc:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  465500:	ldr	x0, [sp, #56]
  465504:	ldr	x1, [x0]
  465508:	ldr	x0, [sp, #104]
  46550c:	lsl	x0, x0, #4
  465510:	add	x0, x1, x0
  465514:	ldr	w0, [x0, #8]
  465518:	ubfx	x0, x0, #8, #10
  46551c:	and	w0, w0, #0xffff
  465520:	mov	w1, w0
  465524:	ldr	w0, [sp, #92]
  465528:	orr	w0, w0, w1
  46552c:	str	w0, [sp, #92]
  465530:	ldr	w2, [sp, #92]
  465534:	ldr	x1, [sp, #80]
  465538:	ldr	x0, [sp, #56]
  46553c:	bl	4658d4 <_obstack_memory_used@@Base+0x8794>
  465540:	str	x0, [sp, #72]
  465544:	ldr	x0, [sp, #72]
  465548:	cmn	x0, #0x1
  46554c:	cset	w0, eq  // eq = none
  465550:	and	w0, w0, #0xff
  465554:	and	x0, x0, #0xff
  465558:	cmp	x0, #0x0
  46555c:	b.eq	465568 <_obstack_memory_used@@Base+0x8428>  // b.none
  465560:	mov	w0, #0xc                   	// #12
  465564:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  465568:	ldr	x0, [sp, #56]
  46556c:	ldr	x2, [x0, #40]
  465570:	ldr	x1, [sp, #96]
  465574:	mov	x0, x1
  465578:	lsl	x0, x0, #1
  46557c:	add	x0, x0, x1
  465580:	lsl	x0, x0, #3
  465584:	add	x0, x2, x0
  465588:	ldr	x1, [sp, #72]
  46558c:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  465590:	strb	w0, [sp, #71]
  465594:	ldrb	w0, [sp, #71]
  465598:	eor	w0, w0, #0x1
  46559c:	and	w0, w0, #0xff
  4655a0:	and	x0, x0, #0xff
  4655a4:	cmp	x0, #0x0
  4655a8:	b.eq	4657e4 <_obstack_memory_used@@Base+0x86a4>  // b.none
  4655ac:	mov	w0, #0xc                   	// #12
  4655b0:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  4655b4:	ldr	x0, [sp, #56]
  4655b8:	ldr	x2, [x0, #40]
  4655bc:	ldr	x1, [sp, #104]
  4655c0:	mov	x0, x1
  4655c4:	lsl	x0, x0, #1
  4655c8:	add	x0, x0, x1
  4655cc:	lsl	x0, x0, #3
  4655d0:	add	x0, x2, x0
  4655d4:	ldr	x0, [x0, #16]
  4655d8:	ldr	x0, [x0]
  4655dc:	str	x0, [sp, #80]
  4655e0:	ldr	x0, [sp, #56]
  4655e4:	ldr	x2, [x0, #40]
  4655e8:	ldr	x1, [sp, #96]
  4655ec:	mov	x0, x1
  4655f0:	lsl	x0, x0, #1
  4655f4:	add	x0, x0, x1
  4655f8:	lsl	x0, x0, #3
  4655fc:	add	x0, x2, x0
  465600:	str	xzr, [x0, #8]
  465604:	ldr	w2, [sp, #92]
  465608:	ldr	x1, [sp, #80]
  46560c:	ldr	x0, [sp, #56]
  465610:	bl	465808 <_obstack_memory_used@@Base+0x86c8>
  465614:	str	x0, [sp, #72]
  465618:	ldr	x0, [sp, #72]
  46561c:	cmn	x0, #0x1
  465620:	b.ne	4656e8 <_obstack_memory_used@@Base+0x85a8>  // b.any
  465624:	ldr	w2, [sp, #92]
  465628:	ldr	x1, [sp, #80]
  46562c:	ldr	x0, [sp, #56]
  465630:	bl	4658d4 <_obstack_memory_used@@Base+0x8794>
  465634:	str	x0, [sp, #72]
  465638:	ldr	x0, [sp, #72]
  46563c:	cmn	x0, #0x1
  465640:	cset	w0, eq  // eq = none
  465644:	and	w0, w0, #0xff
  465648:	and	x0, x0, #0xff
  46564c:	cmp	x0, #0x0
  465650:	b.eq	46565c <_obstack_memory_used@@Base+0x851c>  // b.none
  465654:	mov	w0, #0xc                   	// #12
  465658:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  46565c:	ldr	x0, [sp, #56]
  465660:	ldr	x2, [x0, #40]
  465664:	ldr	x1, [sp, #96]
  465668:	mov	x0, x1
  46566c:	lsl	x0, x0, #1
  465670:	add	x0, x0, x1
  465674:	lsl	x0, x0, #3
  465678:	add	x0, x2, x0
  46567c:	ldr	x1, [sp, #72]
  465680:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  465684:	strb	w0, [sp, #71]
  465688:	ldrb	w0, [sp, #71]
  46568c:	eor	w0, w0, #0x1
  465690:	and	w0, w0, #0xff
  465694:	and	x0, x0, #0xff
  465698:	cmp	x0, #0x0
  46569c:	b.eq	4656a8 <_obstack_memory_used@@Base+0x8568>  // b.none
  4656a0:	mov	w0, #0xc                   	// #12
  4656a4:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  4656a8:	ldr	w4, [sp, #92]
  4656ac:	ldr	x3, [sp, #32]
  4656b0:	ldr	x2, [sp, #72]
  4656b4:	ldr	x1, [sp, #80]
  4656b8:	ldr	x0, [sp, #56]
  4656bc:	bl	465270 <_obstack_memory_used@@Base+0x8130>
  4656c0:	str	w0, [sp, #64]
  4656c4:	ldr	w0, [sp, #64]
  4656c8:	cmp	w0, #0x0
  4656cc:	cset	w0, ne  // ne = any
  4656d0:	and	w0, w0, #0xff
  4656d4:	and	x0, x0, #0xff
  4656d8:	cmp	x0, #0x0
  4656dc:	b.eq	465734 <_obstack_memory_used@@Base+0x85f4>  // b.none
  4656e0:	ldr	w0, [sp, #64]
  4656e4:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  4656e8:	ldr	x0, [sp, #56]
  4656ec:	ldr	x2, [x0, #40]
  4656f0:	ldr	x1, [sp, #96]
  4656f4:	mov	x0, x1
  4656f8:	lsl	x0, x0, #1
  4656fc:	add	x0, x0, x1
  465700:	lsl	x0, x0, #3
  465704:	add	x0, x2, x0
  465708:	ldr	x1, [sp, #72]
  46570c:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  465710:	strb	w0, [sp, #71]
  465714:	ldrb	w0, [sp, #71]
  465718:	eor	w0, w0, #0x1
  46571c:	and	w0, w0, #0xff
  465720:	and	x0, x0, #0xff
  465724:	cmp	x0, #0x0
  465728:	b.eq	465734 <_obstack_memory_used@@Base+0x85f4>  // b.none
  46572c:	mov	w0, #0xc                   	// #12
  465730:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  465734:	ldr	x0, [sp, #56]
  465738:	ldr	x2, [x0, #40]
  46573c:	ldr	x1, [sp, #104]
  465740:	mov	x0, x1
  465744:	lsl	x0, x0, #1
  465748:	add	x0, x0, x1
  46574c:	lsl	x0, x0, #3
  465750:	add	x0, x2, x0
  465754:	ldr	x0, [x0, #16]
  465758:	ldr	x0, [x0, #8]
  46575c:	str	x0, [sp, #80]
  465760:	ldr	w2, [sp, #92]
  465764:	ldr	x1, [sp, #80]
  465768:	ldr	x0, [sp, #56]
  46576c:	bl	4658d4 <_obstack_memory_used@@Base+0x8794>
  465770:	str	x0, [sp, #72]
  465774:	ldr	x0, [sp, #72]
  465778:	cmn	x0, #0x1
  46577c:	cset	w0, eq  // eq = none
  465780:	and	w0, w0, #0xff
  465784:	and	x0, x0, #0xff
  465788:	cmp	x0, #0x0
  46578c:	b.eq	465798 <_obstack_memory_used@@Base+0x8658>  // b.none
  465790:	mov	w0, #0xc                   	// #12
  465794:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  465798:	ldr	x0, [sp, #56]
  46579c:	ldr	x2, [x0, #40]
  4657a0:	ldr	x1, [sp, #96]
  4657a4:	mov	x0, x1
  4657a8:	lsl	x0, x0, #1
  4657ac:	add	x0, x0, x1
  4657b0:	lsl	x0, x0, #3
  4657b4:	add	x0, x2, x0
  4657b8:	ldr	x1, [sp, #72]
  4657bc:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  4657c0:	strb	w0, [sp, #71]
  4657c4:	ldrb	w0, [sp, #71]
  4657c8:	eor	w0, w0, #0x1
  4657cc:	and	w0, w0, #0xff
  4657d0:	and	x0, x0, #0xff
  4657d4:	cmp	x0, #0x0
  4657d8:	b.eq	4657e4 <_obstack_memory_used@@Base+0x86a4>  // b.none
  4657dc:	mov	w0, #0xc                   	// #12
  4657e0:	b	465800 <_obstack_memory_used@@Base+0x86c0>
  4657e4:	ldr	x0, [sp, #80]
  4657e8:	str	x0, [sp, #104]
  4657ec:	ldr	x0, [sp, #72]
  4657f0:	str	x0, [sp, #96]
  4657f4:	b	4652a4 <_obstack_memory_used@@Base+0x8164>
  4657f8:	nop
  4657fc:	mov	w0, #0x0                   	// #0
  465800:	ldp	x29, x30, [sp], #112
  465804:	ret
  465808:	sub	sp, sp, #0x30
  46580c:	str	x0, [sp, #24]
  465810:	str	x1, [sp, #16]
  465814:	str	w2, [sp, #12]
  465818:	ldr	x0, [sp, #24]
  46581c:	ldr	x0, [x0, #16]
  465820:	sub	x0, x0, #0x1
  465824:	str	x0, [sp, #40]
  465828:	b	465894 <_obstack_memory_used@@Base+0x8754>
  46582c:	ldr	x0, [sp, #24]
  465830:	ldr	x1, [x0, #32]
  465834:	ldr	x0, [sp, #40]
  465838:	lsl	x0, x0, #3
  46583c:	add	x0, x1, x0
  465840:	ldr	x0, [x0]
  465844:	ldr	x1, [sp, #16]
  465848:	cmp	x1, x0
  46584c:	b.ne	465888 <_obstack_memory_used@@Base+0x8748>  // b.any
  465850:	ldr	x0, [sp, #24]
  465854:	ldr	x1, [x0]
  465858:	ldr	x0, [sp, #40]
  46585c:	lsl	x0, x0, #4
  465860:	add	x0, x1, x0
  465864:	ldr	w0, [x0, #8]
  465868:	ubfx	x0, x0, #8, #10
  46586c:	and	w0, w0, #0xffff
  465870:	mov	w1, w0
  465874:	ldr	w0, [sp, #12]
  465878:	cmp	w0, w1
  46587c:	b.ne	465888 <_obstack_memory_used@@Base+0x8748>  // b.any
  465880:	ldr	x0, [sp, #40]
  465884:	b	4658cc <_obstack_memory_used@@Base+0x878c>
  465888:	ldr	x0, [sp, #40]
  46588c:	sub	x0, x0, #0x1
  465890:	str	x0, [sp, #40]
  465894:	ldr	x0, [sp, #24]
  465898:	ldr	x1, [x0]
  46589c:	ldr	x0, [sp, #40]
  4658a0:	lsl	x0, x0, #4
  4658a4:	add	x0, x1, x0
  4658a8:	ldrb	w0, [x0, #10]
  4658ac:	and	w0, w0, #0x4
  4658b0:	and	w0, w0, #0xff
  4658b4:	cmp	w0, #0x0
  4658b8:	b.eq	4658c8 <_obstack_memory_used@@Base+0x8788>  // b.none
  4658bc:	ldr	x0, [sp, #40]
  4658c0:	cmp	x0, #0x0
  4658c4:	b.gt	46582c <_obstack_memory_used@@Base+0x86ec>
  4658c8:	mov	x0, #0xffffffffffffffff    	// #-1
  4658cc:	add	sp, sp, #0x30
  4658d0:	ret
  4658d4:	stp	x29, x30, [sp, #-64]!
  4658d8:	mov	x29, sp
  4658dc:	str	x0, [sp, #40]
  4658e0:	str	x1, [sp, #32]
  4658e4:	str	w2, [sp, #28]
  4658e8:	ldr	x0, [sp, #40]
  4658ec:	ldr	x1, [x0]
  4658f0:	ldr	x0, [sp, #32]
  4658f4:	lsl	x0, x0, #4
  4658f8:	add	x0, x1, x0
  4658fc:	ldp	x1, x2, [x0]
  465900:	ldr	x0, [sp, #40]
  465904:	bl	461534 <_obstack_memory_used@@Base+0x43f4>
  465908:	str	x0, [sp, #56]
  46590c:	ldr	x0, [sp, #56]
  465910:	cmn	x0, #0x1
  465914:	cset	w0, ne  // ne = any
  465918:	and	w0, w0, #0xff
  46591c:	and	x0, x0, #0xff
  465920:	cmp	x0, #0x0
  465924:	b.eq	4659f8 <_obstack_memory_used@@Base+0x88b8>  // b.none
  465928:	ldr	x0, [sp, #40]
  46592c:	ldr	x1, [x0]
  465930:	ldr	x0, [sp, #56]
  465934:	lsl	x0, x0, #4
  465938:	add	x1, x1, x0
  46593c:	ldr	w0, [sp, #28]
  465940:	and	w0, w0, #0x3ff
  465944:	and	w2, w0, #0xffff
  465948:	ldr	w0, [x1, #8]
  46594c:	bfi	w0, w2, #8, #10
  465950:	str	w0, [x1, #8]
  465954:	ldr	x0, [sp, #40]
  465958:	ldr	x1, [x0]
  46595c:	ldr	x0, [sp, #56]
  465960:	lsl	x0, x0, #4
  465964:	add	x0, x1, x0
  465968:	ldr	w0, [x0, #8]
  46596c:	ubfx	x0, x0, #8, #10
  465970:	and	w2, w0, #0xffff
  465974:	ldr	x0, [sp, #40]
  465978:	ldr	x1, [x0]
  46597c:	ldr	x0, [sp, #32]
  465980:	lsl	x0, x0, #4
  465984:	add	x0, x1, x0
  465988:	ldr	w0, [x0, #8]
  46598c:	ubfx	x0, x0, #8, #10
  465990:	and	w0, w0, #0xffff
  465994:	ldr	x1, [sp, #40]
  465998:	ldr	x3, [x1]
  46599c:	ldr	x1, [sp, #56]
  4659a0:	lsl	x1, x1, #4
  4659a4:	add	x1, x3, x1
  4659a8:	orr	w0, w2, w0
  4659ac:	and	w2, w0, #0xffff
  4659b0:	ldr	w0, [x1, #8]
  4659b4:	bfi	w0, w2, #8, #10
  4659b8:	str	w0, [x1, #8]
  4659bc:	ldr	x0, [sp, #40]
  4659c0:	ldr	x1, [x0]
  4659c4:	ldr	x0, [sp, #56]
  4659c8:	lsl	x0, x0, #4
  4659cc:	add	x0, x1, x0
  4659d0:	ldrb	w1, [x0, #10]
  4659d4:	orr	w1, w1, #0x4
  4659d8:	strb	w1, [x0, #10]
  4659dc:	ldr	x0, [sp, #40]
  4659e0:	ldr	x1, [x0, #32]
  4659e4:	ldr	x0, [sp, #56]
  4659e8:	lsl	x0, x0, #3
  4659ec:	add	x0, x1, x0
  4659f0:	ldr	x1, [sp, #32]
  4659f4:	str	x1, [x0]
  4659f8:	ldr	x0, [sp, #56]
  4659fc:	ldp	x29, x30, [sp], #64
  465a00:	ret
  465a04:	stp	x29, x30, [sp, #-64]!
  465a08:	mov	x29, sp
  465a0c:	str	x0, [sp, #24]
  465a10:	str	xzr, [sp, #48]
  465a14:	b	465a50 <_obstack_memory_used@@Base+0x8910>
  465a18:	ldr	x0, [sp, #24]
  465a1c:	ldr	x2, [x0, #56]
  465a20:	ldr	x1, [sp, #48]
  465a24:	mov	x0, x1
  465a28:	lsl	x0, x0, #1
  465a2c:	add	x0, x0, x1
  465a30:	lsl	x0, x0, #3
  465a34:	add	x0, x2, x0
  465a38:	mov	x2, #0x18                  	// #24
  465a3c:	mov	w1, #0x0                   	// #0
  465a40:	bl	4044d0 <memset@plt>
  465a44:	ldr	x0, [sp, #48]
  465a48:	add	x0, x0, #0x1
  465a4c:	str	x0, [sp, #48]
  465a50:	ldr	x0, [sp, #24]
  465a54:	ldr	x1, [x0, #16]
  465a58:	ldr	x0, [sp, #48]
  465a5c:	cmp	x1, x0
  465a60:	b.hi	465a18 <_obstack_memory_used@@Base+0x88d8>  // b.pmore
  465a64:	str	xzr, [sp, #56]
  465a68:	b	465b44 <_obstack_memory_used@@Base+0x8a04>
  465a6c:	ldr	x0, [sp, #24]
  465a70:	ldr	x2, [x0, #48]
  465a74:	ldr	x1, [sp, #56]
  465a78:	mov	x0, x1
  465a7c:	lsl	x0, x0, #1
  465a80:	add	x0, x0, x1
  465a84:	lsl	x0, x0, #3
  465a88:	add	x0, x2, x0
  465a8c:	ldr	x0, [x0, #16]
  465a90:	str	x0, [sp, #40]
  465a94:	str	xzr, [sp, #48]
  465a98:	b	465b08 <_obstack_memory_used@@Base+0x89c8>
  465a9c:	ldr	x0, [sp, #24]
  465aa0:	ldr	x1, [x0, #56]
  465aa4:	ldr	x0, [sp, #48]
  465aa8:	lsl	x0, x0, #3
  465aac:	ldr	x2, [sp, #40]
  465ab0:	add	x0, x2, x0
  465ab4:	ldr	x0, [x0]
  465ab8:	mov	x2, x0
  465abc:	mov	x0, x2
  465ac0:	lsl	x0, x0, #1
  465ac4:	add	x0, x0, x2
  465ac8:	lsl	x0, x0, #3
  465acc:	add	x0, x1, x0
  465ad0:	ldr	x1, [sp, #56]
  465ad4:	bl	461230 <_obstack_memory_used@@Base+0x40f0>
  465ad8:	strb	w0, [sp, #39]
  465adc:	ldrb	w0, [sp, #39]
  465ae0:	eor	w0, w0, #0x1
  465ae4:	and	w0, w0, #0xff
  465ae8:	and	x0, x0, #0xff
  465aec:	cmp	x0, #0x0
  465af0:	b.eq	465afc <_obstack_memory_used@@Base+0x89bc>  // b.none
  465af4:	mov	w0, #0xc                   	// #12
  465af8:	b	465b5c <_obstack_memory_used@@Base+0x8a1c>
  465afc:	ldr	x0, [sp, #48]
  465b00:	add	x0, x0, #0x1
  465b04:	str	x0, [sp, #48]
  465b08:	ldr	x0, [sp, #24]
  465b0c:	ldr	x2, [x0, #48]
  465b10:	ldr	x1, [sp, #56]
  465b14:	mov	x0, x1
  465b18:	lsl	x0, x0, #1
  465b1c:	add	x0, x0, x1
  465b20:	lsl	x0, x0, #3
  465b24:	add	x0, x2, x0
  465b28:	ldr	x0, [x0, #8]
  465b2c:	ldr	x1, [sp, #48]
  465b30:	cmp	x1, x0
  465b34:	b.lt	465a9c <_obstack_memory_used@@Base+0x895c>  // b.tstop
  465b38:	ldr	x0, [sp, #56]
  465b3c:	add	x0, x0, #0x1
  465b40:	str	x0, [sp, #56]
  465b44:	ldr	x0, [sp, #24]
  465b48:	ldr	x1, [x0, #16]
  465b4c:	ldr	x0, [sp, #56]
  465b50:	cmp	x1, x0
  465b54:	b.hi	465a6c <_obstack_memory_used@@Base+0x892c>  // b.pmore
  465b58:	mov	w0, #0x0                   	// #0
  465b5c:	ldp	x29, x30, [sp], #64
  465b60:	ret
  465b64:	stp	x29, x30, [sp, #-80]!
  465b68:	mov	x29, sp
  465b6c:	str	x0, [sp, #24]
  465b70:	strb	wzr, [sp, #71]
  465b74:	str	xzr, [sp, #72]
  465b78:	ldr	x0, [sp, #24]
  465b7c:	ldr	x1, [x0, #16]
  465b80:	ldr	x0, [sp, #72]
  465b84:	cmp	x1, x0
  465b88:	b.ne	465bb0 <_obstack_memory_used@@Base+0x8a70>  // b.any
  465b8c:	ldrb	w0, [sp, #71]
  465b90:	eor	w0, w0, #0x1
  465b94:	and	w0, w0, #0xff
  465b98:	cmp	w0, #0x0
  465b9c:	b.eq	465ba8 <_obstack_memory_used@@Base+0x8a68>  // b.none
  465ba0:	mov	w0, #0x0                   	// #0
  465ba4:	b	465c6c <_obstack_memory_used@@Base+0x8b2c>
  465ba8:	strb	wzr, [sp, #71]
  465bac:	str	xzr, [sp, #72]
  465bb0:	ldr	x0, [sp, #24]
  465bb4:	ldr	x2, [x0, #48]
  465bb8:	ldr	x1, [sp, #72]
  465bbc:	mov	x0, x1
  465bc0:	lsl	x0, x0, #1
  465bc4:	add	x0, x0, x1
  465bc8:	lsl	x0, x0, #3
  465bcc:	add	x0, x2, x0
  465bd0:	ldr	x0, [x0, #8]
  465bd4:	cmp	x0, #0x0
  465bd8:	b.ne	465c58 <_obstack_memory_used@@Base+0x8b18>  // b.any
  465bdc:	add	x0, sp, #0x28
  465be0:	mov	w3, #0x1                   	// #1
  465be4:	ldr	x2, [sp, #72]
  465be8:	ldr	x1, [sp, #24]
  465bec:	bl	465c74 <_obstack_memory_used@@Base+0x8b34>
  465bf0:	str	w0, [sp, #64]
  465bf4:	ldr	w0, [sp, #64]
  465bf8:	cmp	w0, #0x0
  465bfc:	cset	w0, ne  // ne = any
  465c00:	and	w0, w0, #0xff
  465c04:	and	x0, x0, #0xff
  465c08:	cmp	x0, #0x0
  465c0c:	b.eq	465c18 <_obstack_memory_used@@Base+0x8ad8>  // b.none
  465c10:	ldr	w0, [sp, #64]
  465c14:	b	465c6c <_obstack_memory_used@@Base+0x8b2c>
  465c18:	ldr	x0, [sp, #24]
  465c1c:	ldr	x2, [x0, #48]
  465c20:	ldr	x1, [sp, #72]
  465c24:	mov	x0, x1
  465c28:	lsl	x0, x0, #1
  465c2c:	add	x0, x0, x1
  465c30:	lsl	x0, x0, #3
  465c34:	add	x0, x2, x0
  465c38:	ldr	x0, [x0, #8]
  465c3c:	cmp	x0, #0x0
  465c40:	b.ne	465c5c <_obstack_memory_used@@Base+0x8b1c>  // b.any
  465c44:	mov	w0, #0x1                   	// #1
  465c48:	strb	w0, [sp, #71]
  465c4c:	ldr	x0, [sp, #56]
  465c50:	bl	404880 <free@plt>
  465c54:	b	465c5c <_obstack_memory_used@@Base+0x8b1c>
  465c58:	nop
  465c5c:	ldr	x0, [sp, #72]
  465c60:	add	x0, x0, #0x1
  465c64:	str	x0, [sp, #72]
  465c68:	b	465b78 <_obstack_memory_used@@Base+0x8a38>
  465c6c:	ldp	x29, x30, [sp], #80
  465c70:	ret
  465c74:	stp	x29, x30, [sp, #-128]!
  465c78:	mov	x29, sp
  465c7c:	str	x0, [sp, #40]
  465c80:	str	x1, [sp, #32]
  465c84:	str	x2, [sp, #24]
  465c88:	strb	w3, [sp, #23]
  465c8c:	strb	wzr, [sp, #119]
  465c90:	ldr	x0, [sp, #32]
  465c94:	ldr	x2, [x0, #40]
  465c98:	ldr	x1, [sp, #24]
  465c9c:	mov	x0, x1
  465ca0:	lsl	x0, x0, #1
  465ca4:	add	x0, x0, x1
  465ca8:	lsl	x0, x0, #3
  465cac:	add	x0, x2, x0
  465cb0:	ldr	x0, [x0, #8]
  465cb4:	add	x1, x0, #0x1
  465cb8:	add	x0, sp, #0x48
  465cbc:	bl	4600bc <_obstack_memory_used@@Base+0x2f7c>
  465cc0:	str	w0, [sp, #112]
  465cc4:	ldr	w0, [sp, #112]
  465cc8:	cmp	w0, #0x0
  465ccc:	cset	w0, ne  // ne = any
  465cd0:	and	w0, w0, #0xff
  465cd4:	and	x0, x0, #0xff
  465cd8:	cmp	x0, #0x0
  465cdc:	b.eq	465ce8 <_obstack_memory_used@@Base+0x8ba8>  // b.none
  465ce0:	ldr	w0, [sp, #112]
  465ce4:	b	4660c4 <_obstack_memory_used@@Base+0x8f84>
  465ce8:	ldr	x0, [sp, #32]
  465cec:	ldr	x2, [x0, #48]
  465cf0:	ldr	x1, [sp, #24]
  465cf4:	mov	x0, x1
  465cf8:	lsl	x0, x0, #1
  465cfc:	add	x0, x0, x1
  465d00:	lsl	x0, x0, #3
  465d04:	add	x0, x2, x0
  465d08:	mov	x1, #0xffffffffffffffff    	// #-1
  465d0c:	str	x1, [x0, #8]
  465d10:	ldr	x0, [sp, #32]
  465d14:	ldr	x1, [x0]
  465d18:	ldr	x0, [sp, #24]
  465d1c:	lsl	x0, x0, #4
  465d20:	add	x0, x1, x0
  465d24:	ldr	w0, [x0, #8]
  465d28:	and	w0, w0, #0x3ff00
  465d2c:	cmp	w0, #0x0
  465d30:	b.eq	465e0c <_obstack_memory_used@@Base+0x8ccc>  // b.none
  465d34:	ldr	x0, [sp, #32]
  465d38:	ldr	x2, [x0, #40]
  465d3c:	ldr	x1, [sp, #24]
  465d40:	mov	x0, x1
  465d44:	lsl	x0, x0, #1
  465d48:	add	x0, x0, x1
  465d4c:	lsl	x0, x0, #3
  465d50:	add	x0, x2, x0
  465d54:	ldr	x0, [x0, #8]
  465d58:	cmp	x0, #0x0
  465d5c:	b.eq	465e0c <_obstack_memory_used@@Base+0x8ccc>  // b.none
  465d60:	ldr	x0, [sp, #32]
  465d64:	ldr	x2, [x0]
  465d68:	ldr	x0, [sp, #32]
  465d6c:	ldr	x3, [x0, #40]
  465d70:	ldr	x1, [sp, #24]
  465d74:	mov	x0, x1
  465d78:	lsl	x0, x0, #1
  465d7c:	add	x0, x0, x1
  465d80:	lsl	x0, x0, #3
  465d84:	add	x0, x3, x0
  465d88:	ldr	x0, [x0, #16]
  465d8c:	ldr	x0, [x0]
  465d90:	lsl	x0, x0, #4
  465d94:	add	x0, x2, x0
  465d98:	ldrb	w0, [x0, #10]
  465d9c:	and	w0, w0, #0x4
  465da0:	and	w0, w0, #0xff
  465da4:	cmp	w0, #0x0
  465da8:	b.ne	465e0c <_obstack_memory_used@@Base+0x8ccc>  // b.any
  465dac:	ldr	x0, [sp, #32]
  465db0:	ldr	x1, [x0]
  465db4:	ldr	x0, [sp, #24]
  465db8:	lsl	x0, x0, #4
  465dbc:	add	x0, x1, x0
  465dc0:	ldr	w0, [x0, #8]
  465dc4:	ubfx	x0, x0, #8, #10
  465dc8:	and	w0, w0, #0xffff
  465dcc:	mov	w4, w0
  465dd0:	ldr	x3, [sp, #24]
  465dd4:	ldr	x2, [sp, #24]
  465dd8:	ldr	x1, [sp, #24]
  465ddc:	ldr	x0, [sp, #32]
  465de0:	bl	465270 <_obstack_memory_used@@Base+0x8130>
  465de4:	str	w0, [sp, #112]
  465de8:	ldr	w0, [sp, #112]
  465dec:	cmp	w0, #0x0
  465df0:	cset	w0, ne  // ne = any
  465df4:	and	w0, w0, #0xff
  465df8:	and	x0, x0, #0xff
  465dfc:	cmp	x0, #0x0
  465e00:	b.eq	465e0c <_obstack_memory_used@@Base+0x8ccc>  // b.none
  465e04:	ldr	w0, [sp, #112]
  465e08:	b	4660c4 <_obstack_memory_used@@Base+0x8f84>
  465e0c:	ldr	x0, [sp, #32]
  465e10:	ldr	x1, [x0]
  465e14:	ldr	x0, [sp, #24]
  465e18:	lsl	x0, x0, #4
  465e1c:	add	x0, x1, x0
  465e20:	ldrb	w0, [x0, #8]
  465e24:	and	w0, w0, #0x8
  465e28:	cmp	w0, #0x0
  465e2c:	b.eq	465ff4 <_obstack_memory_used@@Base+0x8eb4>  // b.none
  465e30:	str	xzr, [sp, #120]
  465e34:	b	465fc4 <_obstack_memory_used@@Base+0x8e84>
  465e38:	ldr	x0, [sp, #32]
  465e3c:	ldr	x2, [x0, #40]
  465e40:	ldr	x1, [sp, #24]
  465e44:	mov	x0, x1
  465e48:	lsl	x0, x0, #1
  465e4c:	add	x0, x0, x1
  465e50:	lsl	x0, x0, #3
  465e54:	add	x0, x2, x0
  465e58:	ldr	x1, [x0, #16]
  465e5c:	ldr	x0, [sp, #120]
  465e60:	lsl	x0, x0, #3
  465e64:	add	x0, x1, x0
  465e68:	ldr	x0, [x0]
  465e6c:	str	x0, [sp, #104]
  465e70:	ldr	x0, [sp, #32]
  465e74:	ldr	x2, [x0, #48]
  465e78:	ldr	x1, [sp, #104]
  465e7c:	mov	x0, x1
  465e80:	lsl	x0, x0, #1
  465e84:	add	x0, x0, x1
  465e88:	lsl	x0, x0, #3
  465e8c:	add	x0, x2, x0
  465e90:	ldr	x0, [x0, #8]
  465e94:	cmn	x0, #0x1
  465e98:	b.ne	465ea8 <_obstack_memory_used@@Base+0x8d68>  // b.any
  465e9c:	mov	w0, #0x1                   	// #1
  465ea0:	strb	w0, [sp, #119]
  465ea4:	b	465fb8 <_obstack_memory_used@@Base+0x8e78>
  465ea8:	ldr	x0, [sp, #32]
  465eac:	ldr	x2, [x0, #48]
  465eb0:	ldr	x1, [sp, #104]
  465eb4:	mov	x0, x1
  465eb8:	lsl	x0, x0, #1
  465ebc:	add	x0, x0, x1
  465ec0:	lsl	x0, x0, #3
  465ec4:	add	x0, x2, x0
  465ec8:	ldr	x0, [x0, #8]
  465ecc:	cmp	x0, #0x0
  465ed0:	b.ne	465f10 <_obstack_memory_used@@Base+0x8dd0>  // b.any
  465ed4:	add	x0, sp, #0x30
  465ed8:	mov	w3, #0x0                   	// #0
  465edc:	ldr	x2, [sp, #104]
  465ee0:	ldr	x1, [sp, #32]
  465ee4:	bl	465c74 <_obstack_memory_used@@Base+0x8b34>
  465ee8:	str	w0, [sp, #112]
  465eec:	ldr	w0, [sp, #112]
  465ef0:	cmp	w0, #0x0
  465ef4:	cset	w0, ne  // ne = any
  465ef8:	and	w0, w0, #0xff
  465efc:	and	x0, x0, #0xff
  465f00:	cmp	x0, #0x0
  465f04:	b.eq	465f48 <_obstack_memory_used@@Base+0x8e08>  // b.none
  465f08:	ldr	w0, [sp, #112]
  465f0c:	b	4660c4 <_obstack_memory_used@@Base+0x8f84>
  465f10:	ldr	x0, [sp, #32]
  465f14:	ldr	x2, [x0, #48]
  465f18:	ldr	x1, [sp, #104]
  465f1c:	mov	x0, x1
  465f20:	lsl	x0, x0, #1
  465f24:	add	x0, x0, x1
  465f28:	lsl	x0, x0, #3
  465f2c:	add	x0, x2, x0
  465f30:	add	x2, sp, #0x30
  465f34:	mov	x3, x0
  465f38:	ldp	x0, x1, [x3]
  465f3c:	stp	x0, x1, [x2]
  465f40:	ldr	x0, [x3, #16]
  465f44:	str	x0, [x2, #16]
  465f48:	add	x1, sp, #0x30
  465f4c:	add	x0, sp, #0x48
  465f50:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  465f54:	str	w0, [sp, #112]
  465f58:	ldr	w0, [sp, #112]
  465f5c:	cmp	w0, #0x0
  465f60:	cset	w0, ne  // ne = any
  465f64:	and	w0, w0, #0xff
  465f68:	and	x0, x0, #0xff
  465f6c:	cmp	x0, #0x0
  465f70:	b.eq	465f7c <_obstack_memory_used@@Base+0x8e3c>  // b.none
  465f74:	ldr	w0, [sp, #112]
  465f78:	b	4660c4 <_obstack_memory_used@@Base+0x8f84>
  465f7c:	ldr	x0, [sp, #32]
  465f80:	ldr	x2, [x0, #48]
  465f84:	ldr	x1, [sp, #104]
  465f88:	mov	x0, x1
  465f8c:	lsl	x0, x0, #1
  465f90:	add	x0, x0, x1
  465f94:	lsl	x0, x0, #3
  465f98:	add	x0, x2, x0
  465f9c:	ldr	x0, [x0, #8]
  465fa0:	cmp	x0, #0x0
  465fa4:	b.ne	465fb8 <_obstack_memory_used@@Base+0x8e78>  // b.any
  465fa8:	mov	w0, #0x1                   	// #1
  465fac:	strb	w0, [sp, #119]
  465fb0:	ldr	x0, [sp, #64]
  465fb4:	bl	404880 <free@plt>
  465fb8:	ldr	x0, [sp, #120]
  465fbc:	add	x0, x0, #0x1
  465fc0:	str	x0, [sp, #120]
  465fc4:	ldr	x0, [sp, #32]
  465fc8:	ldr	x2, [x0, #40]
  465fcc:	ldr	x1, [sp, #24]
  465fd0:	mov	x0, x1
  465fd4:	lsl	x0, x0, #1
  465fd8:	add	x0, x0, x1
  465fdc:	lsl	x0, x0, #3
  465fe0:	add	x0, x2, x0
  465fe4:	ldr	x0, [x0, #8]
  465fe8:	ldr	x1, [sp, #120]
  465fec:	cmp	x1, x0
  465ff0:	b.lt	465e38 <_obstack_memory_used@@Base+0x8cf8>  // b.tstop
  465ff4:	add	x0, sp, #0x48
  465ff8:	ldr	x1, [sp, #24]
  465ffc:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  466000:	strb	w0, [sp, #103]
  466004:	ldrb	w0, [sp, #103]
  466008:	eor	w0, w0, #0x1
  46600c:	and	w0, w0, #0xff
  466010:	and	x0, x0, #0xff
  466014:	cmp	x0, #0x0
  466018:	b.eq	466024 <_obstack_memory_used@@Base+0x8ee4>  // b.none
  46601c:	mov	w0, #0xc                   	// #12
  466020:	b	4660c4 <_obstack_memory_used@@Base+0x8f84>
  466024:	ldrb	w0, [sp, #119]
  466028:	cmp	w0, #0x0
  46602c:	b.eq	46606c <_obstack_memory_used@@Base+0x8f2c>  // b.none
  466030:	ldrb	w0, [sp, #23]
  466034:	eor	w0, w0, #0x1
  466038:	and	w0, w0, #0xff
  46603c:	cmp	w0, #0x0
  466040:	b.eq	46606c <_obstack_memory_used@@Base+0x8f2c>  // b.none
  466044:	ldr	x0, [sp, #32]
  466048:	ldr	x2, [x0, #48]
  46604c:	ldr	x1, [sp, #24]
  466050:	mov	x0, x1
  466054:	lsl	x0, x0, #1
  466058:	add	x0, x0, x1
  46605c:	lsl	x0, x0, #3
  466060:	add	x0, x2, x0
  466064:	str	xzr, [x0, #8]
  466068:	b	4660a4 <_obstack_memory_used@@Base+0x8f64>
  46606c:	ldr	x0, [sp, #32]
  466070:	ldr	x2, [x0, #48]
  466074:	ldr	x1, [sp, #24]
  466078:	mov	x0, x1
  46607c:	lsl	x0, x0, #1
  466080:	add	x0, x0, x1
  466084:	lsl	x0, x0, #3
  466088:	add	x0, x2, x0
  46608c:	mov	x3, x0
  466090:	add	x2, sp, #0x48
  466094:	ldp	x0, x1, [x2]
  466098:	stp	x0, x1, [x3]
  46609c:	ldr	x0, [x2, #16]
  4660a0:	str	x0, [x3, #16]
  4660a4:	ldr	x0, [sp, #40]
  4660a8:	mov	x3, x0
  4660ac:	add	x2, sp, #0x48
  4660b0:	ldp	x0, x1, [x2]
  4660b4:	stp	x0, x1, [x3]
  4660b8:	ldr	x0, [x2, #16]
  4660bc:	str	x0, [x3, #16]
  4660c0:	mov	w0, #0x0                   	// #0
  4660c4:	ldp	x29, x30, [sp], #128
  4660c8:	ret
  4660cc:	stp	x29, x30, [sp, #-48]!
  4660d0:	mov	x29, sp
  4660d4:	str	x0, [sp, #40]
  4660d8:	str	x1, [sp, #32]
  4660dc:	str	x2, [sp, #24]
  4660e0:	ldr	x2, [sp, #24]
  4660e4:	ldr	x1, [sp, #32]
  4660e8:	ldr	x0, [sp, #40]
  4660ec:	bl	466118 <_obstack_memory_used@@Base+0x8fd8>
  4660f0:	mov	w2, w0
  4660f4:	ldr	x0, [sp, #32]
  4660f8:	ldr	x1, [x0, #72]
  4660fc:	sxtw	x0, w2
  466100:	add	x1, x1, x0
  466104:	ldr	x0, [sp, #32]
  466108:	str	x1, [x0, #72]
  46610c:	nop
  466110:	ldp	x29, x30, [sp], #48
  466114:	ret
  466118:	stp	x29, x30, [sp, #-80]!
  46611c:	mov	x29, sp
  466120:	str	x0, [sp, #40]
  466124:	str	x1, [sp, #32]
  466128:	str	x2, [sp, #24]
  46612c:	ldr	x0, [sp, #32]
  466130:	ldr	x1, [x0, #104]
  466134:	ldr	x0, [sp, #32]
  466138:	ldr	x0, [x0, #72]
  46613c:	cmp	x1, x0
  466140:	b.gt	466158 <_obstack_memory_used@@Base+0x9018>
  466144:	ldr	x0, [sp, #40]
  466148:	mov	w1, #0x2                   	// #2
  46614c:	strb	w1, [x0, #8]
  466150:	mov	w0, #0x0                   	// #0
  466154:	b	466b84 <_obstack_memory_used@@Base+0x9a44>
  466158:	ldr	x0, [sp, #32]
  46615c:	ldr	x0, [x0, #8]
  466160:	ldr	x1, [sp, #32]
  466164:	ldr	x1, [x1, #72]
  466168:	add	x0, x0, x1
  46616c:	ldrb	w0, [x0]
  466170:	strb	w0, [sp, #79]
  466174:	ldr	x0, [sp, #40]
  466178:	ldrb	w1, [sp, #79]
  46617c:	strb	w1, [x0]
  466180:	ldr	x0, [sp, #40]
  466184:	ldrb	w1, [x0, #10]
  466188:	and	w1, w1, #0xffffffbf
  46618c:	strb	w1, [x0, #10]
  466190:	ldr	x0, [sp, #40]
  466194:	ldrb	w1, [x0, #10]
  466198:	and	w1, w1, #0xffffffdf
  46619c:	strb	w1, [x0, #10]
  4661a0:	ldr	x0, [sp, #32]
  4661a4:	ldr	w0, [x0, #144]
  4661a8:	cmp	w0, #0x1
  4661ac:	b.le	466210 <_obstack_memory_used@@Base+0x90d0>
  4661b0:	ldr	x0, [sp, #32]
  4661b4:	ldr	x1, [x0, #72]
  4661b8:	ldr	x0, [sp, #32]
  4661bc:	ldr	x0, [x0, #48]
  4661c0:	cmp	x1, x0
  4661c4:	b.eq	466210 <_obstack_memory_used@@Base+0x90d0>  // b.none
  4661c8:	ldr	x0, [sp, #32]
  4661cc:	ldr	x1, [x0, #16]
  4661d0:	ldr	x0, [sp, #32]
  4661d4:	ldr	x0, [x0, #72]
  4661d8:	lsl	x0, x0, #2
  4661dc:	add	x0, x1, x0
  4661e0:	ldr	w0, [x0]
  4661e4:	cmn	w0, #0x1
  4661e8:	b.ne	466210 <_obstack_memory_used@@Base+0x90d0>  // b.any
  4661ec:	ldr	x0, [sp, #40]
  4661f0:	mov	w1, #0x1                   	// #1
  4661f4:	strb	w1, [x0, #8]
  4661f8:	ldr	x0, [sp, #40]
  4661fc:	ldrb	w1, [x0, #10]
  466200:	orr	w1, w1, #0x20
  466204:	strb	w1, [x0, #10]
  466208:	mov	w0, #0x1                   	// #1
  46620c:	b	466b84 <_obstack_memory_used@@Base+0x9a44>
  466210:	ldrb	w0, [sp, #79]
  466214:	cmp	w0, #0x5c
  466218:	b.ne	4666f0 <_obstack_memory_used@@Base+0x95b0>  // b.any
  46621c:	ldr	x0, [sp, #32]
  466220:	ldr	x0, [x0, #72]
  466224:	add	x1, x0, #0x1
  466228:	ldr	x0, [sp, #32]
  46622c:	ldr	x0, [x0, #88]
  466230:	cmp	x1, x0
  466234:	b.lt	46624c <_obstack_memory_used@@Base+0x910c>  // b.tstop
  466238:	ldr	x0, [sp, #40]
  46623c:	mov	w1, #0x24                  	// #36
  466240:	strb	w1, [x0, #8]
  466244:	mov	w0, #0x1                   	// #1
  466248:	b	466b84 <_obstack_memory_used@@Base+0x9a44>
  46624c:	mov	x1, #0x1                   	// #1
  466250:	ldr	x0, [sp, #32]
  466254:	bl	45fb24 <_obstack_memory_used@@Base+0x29e4>
  466258:	strb	w0, [sp, #70]
  46625c:	ldr	x0, [sp, #40]
  466260:	ldrb	w1, [sp, #70]
  466264:	strb	w1, [x0]
  466268:	ldr	x0, [sp, #40]
  46626c:	mov	w1, #0x1                   	// #1
  466270:	strb	w1, [x0, #8]
  466274:	ldr	x0, [sp, #32]
  466278:	ldr	w0, [x0, #144]
  46627c:	cmp	w0, #0x1
  466280:	b.le	4662e8 <_obstack_memory_used@@Base+0x91a8>
  466284:	ldr	x0, [sp, #32]
  466288:	ldr	x0, [x0, #72]
  46628c:	add	x0, x0, #0x1
  466290:	mov	x1, x0
  466294:	ldr	x0, [sp, #32]
  466298:	bl	45d710 <_obstack_memory_used@@Base+0x5d0>
  46629c:	str	w0, [sp, #64]
  4662a0:	ldr	w0, [sp, #64]
  4662a4:	bl	404a60 <iswalnum@plt>
  4662a8:	cmp	w0, #0x0
  4662ac:	b.ne	4662bc <_obstack_memory_used@@Base+0x917c>  // b.any
  4662b0:	ldr	w0, [sp, #64]
  4662b4:	cmp	w0, #0x5f
  4662b8:	b.ne	4662c4 <_obstack_memory_used@@Base+0x9184>  // b.any
  4662bc:	mov	w0, #0x1                   	// #1
  4662c0:	b	4662c8 <_obstack_memory_used@@Base+0x9188>
  4662c4:	mov	w0, #0x0                   	// #0
  4662c8:	cmp	w0, #0x0
  4662cc:	cset	w0, ne  // ne = any
  4662d0:	and	w2, w0, #0xff
  4662d4:	ldr	x1, [sp, #40]
  4662d8:	ldrb	w0, [x1, #10]
  4662dc:	bfi	w0, w2, #6, #1
  4662e0:	strb	w0, [x1, #10]
  4662e4:	b	466340 <_obstack_memory_used@@Base+0x9200>
  4662e8:	bl	4047f0 <__ctype_b_loc@plt>
  4662ec:	ldr	x1, [x0]
  4662f0:	ldrb	w0, [sp, #70]
  4662f4:	lsl	x0, x0, #1
  4662f8:	add	x0, x1, x0
  4662fc:	ldrh	w0, [x0]
  466300:	and	w0, w0, #0x8
  466304:	cmp	w0, #0x0
  466308:	b.ne	466318 <_obstack_memory_used@@Base+0x91d8>  // b.any
  46630c:	ldrb	w0, [sp, #70]
  466310:	cmp	w0, #0x5f
  466314:	b.ne	466320 <_obstack_memory_used@@Base+0x91e0>  // b.any
  466318:	mov	w0, #0x1                   	// #1
  46631c:	b	466324 <_obstack_memory_used@@Base+0x91e4>
  466320:	mov	w0, #0x0                   	// #0
  466324:	cmp	w0, #0x0
  466328:	cset	w0, ne  // ne = any
  46632c:	and	w2, w0, #0xff
  466330:	ldr	x1, [sp, #40]
  466334:	ldrb	w0, [x1, #10]
  466338:	bfi	w0, w2, #6, #1
  46633c:	strb	w0, [x1, #10]
  466340:	ldrb	w0, [sp, #70]
  466344:	sub	w0, w0, #0x27
  466348:	cmp	w0, #0x56
  46634c:	b.hi	466654 <_obstack_memory_used@@Base+0x9514>  // b.pmore
  466350:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  466354:	add	x1, x1, #0x65c
  466358:	ldr	w0, [x1, w0, uxtw #2]
  46635c:	adr	x1, 466368 <_obstack_memory_used@@Base+0x9228>
  466360:	add	x0, x1, w0, sxtw #2
  466364:	br	x0
  466368:	ldr	x0, [sp, #24]
  46636c:	and	x0, x0, #0x400
  466370:	cmp	x0, #0x0
  466374:	b.ne	46665c <_obstack_memory_used@@Base+0x951c>  // b.any
  466378:	ldr	x0, [sp, #24]
  46637c:	and	x0, x0, #0x8000
  466380:	cmp	x0, #0x0
  466384:	b.ne	46665c <_obstack_memory_used@@Base+0x951c>  // b.any
  466388:	ldr	x0, [sp, #40]
  46638c:	mov	w1, #0xa                   	// #10
  466390:	strb	w1, [x0, #8]
  466394:	b	46665c <_obstack_memory_used@@Base+0x951c>
  466398:	ldr	x0, [sp, #24]
  46639c:	and	x0, x0, #0x4000
  4663a0:	cmp	x0, #0x0
  4663a4:	b.ne	466664 <_obstack_memory_used@@Base+0x9524>  // b.any
  4663a8:	ldr	x0, [sp, #40]
  4663ac:	mov	w1, #0x4                   	// #4
  4663b0:	strb	w1, [x0, #8]
  4663b4:	ldrb	w0, [sp, #70]
  4663b8:	sub	w0, w0, #0x31
  4663bc:	sxtw	x1, w0
  4663c0:	ldr	x0, [sp, #40]
  4663c4:	str	x1, [x0]
  4663c8:	b	466664 <_obstack_memory_used@@Base+0x9524>
  4663cc:	ldr	x0, [sp, #24]
  4663d0:	and	x0, x0, #0x80000
  4663d4:	cmp	x0, #0x0
  4663d8:	b.ne	46666c <_obstack_memory_used@@Base+0x952c>  // b.any
  4663dc:	ldr	x0, [sp, #40]
  4663e0:	mov	w1, #0xc                   	// #12
  4663e4:	strb	w1, [x0, #8]
  4663e8:	ldr	x0, [sp, #40]
  4663ec:	mov	w1, #0x6                   	// #6
  4663f0:	str	w1, [x0]
  4663f4:	b	46666c <_obstack_memory_used@@Base+0x952c>
  4663f8:	ldr	x0, [sp, #24]
  4663fc:	and	x0, x0, #0x80000
  466400:	cmp	x0, #0x0
  466404:	b.ne	466674 <_obstack_memory_used@@Base+0x9534>  // b.any
  466408:	ldr	x0, [sp, #40]
  46640c:	mov	w1, #0xc                   	// #12
  466410:	strb	w1, [x0, #8]
  466414:	ldr	x0, [sp, #40]
  466418:	mov	w1, #0x9                   	// #9
  46641c:	str	w1, [x0]
  466420:	b	466674 <_obstack_memory_used@@Base+0x9534>
  466424:	ldr	x0, [sp, #24]
  466428:	and	x0, x0, #0x80000
  46642c:	cmp	x0, #0x0
  466430:	b.ne	46667c <_obstack_memory_used@@Base+0x953c>  // b.any
  466434:	ldr	x0, [sp, #40]
  466438:	mov	w1, #0xc                   	// #12
  46643c:	strb	w1, [x0, #8]
  466440:	ldr	x0, [sp, #40]
  466444:	mov	w1, #0x100                 	// #256
  466448:	str	w1, [x0]
  46644c:	b	46667c <_obstack_memory_used@@Base+0x953c>
  466450:	ldr	x0, [sp, #24]
  466454:	and	x0, x0, #0x80000
  466458:	cmp	x0, #0x0
  46645c:	b.ne	466684 <_obstack_memory_used@@Base+0x9544>  // b.any
  466460:	ldr	x0, [sp, #40]
  466464:	mov	w1, #0xc                   	// #12
  466468:	strb	w1, [x0, #8]
  46646c:	ldr	x0, [sp, #40]
  466470:	mov	w1, #0x200                 	// #512
  466474:	str	w1, [x0]
  466478:	b	466684 <_obstack_memory_used@@Base+0x9544>
  46647c:	ldr	x0, [sp, #24]
  466480:	and	x0, x0, #0x80000
  466484:	cmp	x0, #0x0
  466488:	b.ne	46668c <_obstack_memory_used@@Base+0x954c>  // b.any
  46648c:	ldr	x0, [sp, #40]
  466490:	mov	w1, #0x20                  	// #32
  466494:	strb	w1, [x0, #8]
  466498:	b	46668c <_obstack_memory_used@@Base+0x954c>
  46649c:	ldr	x0, [sp, #24]
  4664a0:	and	x0, x0, #0x80000
  4664a4:	cmp	x0, #0x0
  4664a8:	b.ne	466694 <_obstack_memory_used@@Base+0x9554>  // b.any
  4664ac:	ldr	x0, [sp, #40]
  4664b0:	mov	w1, #0x21                  	// #33
  4664b4:	strb	w1, [x0, #8]
  4664b8:	b	466694 <_obstack_memory_used@@Base+0x9554>
  4664bc:	ldr	x0, [sp, #24]
  4664c0:	and	x0, x0, #0x80000
  4664c4:	cmp	x0, #0x0
  4664c8:	b.ne	46669c <_obstack_memory_used@@Base+0x955c>  // b.any
  4664cc:	ldr	x0, [sp, #40]
  4664d0:	mov	w1, #0x22                  	// #34
  4664d4:	strb	w1, [x0, #8]
  4664d8:	b	46669c <_obstack_memory_used@@Base+0x955c>
  4664dc:	ldr	x0, [sp, #24]
  4664e0:	and	x0, x0, #0x80000
  4664e4:	cmp	x0, #0x0
  4664e8:	b.ne	4666a4 <_obstack_memory_used@@Base+0x9564>  // b.any
  4664ec:	ldr	x0, [sp, #40]
  4664f0:	mov	w1, #0x23                  	// #35
  4664f4:	strb	w1, [x0, #8]
  4664f8:	b	4666a4 <_obstack_memory_used@@Base+0x9564>
  4664fc:	ldr	x0, [sp, #24]
  466500:	and	x0, x0, #0x80000
  466504:	cmp	x0, #0x0
  466508:	b.ne	4666ac <_obstack_memory_used@@Base+0x956c>  // b.any
  46650c:	ldr	x0, [sp, #40]
  466510:	mov	w1, #0xc                   	// #12
  466514:	strb	w1, [x0, #8]
  466518:	ldr	x0, [sp, #40]
  46651c:	mov	w1, #0x40                  	// #64
  466520:	str	w1, [x0]
  466524:	b	4666ac <_obstack_memory_used@@Base+0x956c>
  466528:	ldr	x0, [sp, #24]
  46652c:	and	x0, x0, #0x80000
  466530:	cmp	x0, #0x0
  466534:	b.ne	4666b4 <_obstack_memory_used@@Base+0x9574>  // b.any
  466538:	ldr	x0, [sp, #40]
  46653c:	mov	w1, #0xc                   	// #12
  466540:	strb	w1, [x0, #8]
  466544:	ldr	x0, [sp, #40]
  466548:	mov	w1, #0x80                  	// #128
  46654c:	str	w1, [x0]
  466550:	b	4666b4 <_obstack_memory_used@@Base+0x9574>
  466554:	ldr	x0, [sp, #24]
  466558:	and	x0, x0, #0x2000
  46655c:	cmp	x0, #0x0
  466560:	b.ne	4666bc <_obstack_memory_used@@Base+0x957c>  // b.any
  466564:	ldr	x0, [sp, #40]
  466568:	mov	w1, #0x8                   	// #8
  46656c:	strb	w1, [x0, #8]
  466570:	b	4666bc <_obstack_memory_used@@Base+0x957c>
  466574:	ldr	x0, [sp, #24]
  466578:	and	x0, x0, #0x2000
  46657c:	cmp	x0, #0x0
  466580:	b.ne	4666c4 <_obstack_memory_used@@Base+0x9584>  // b.any
  466584:	ldr	x0, [sp, #40]
  466588:	mov	w1, #0x9                   	// #9
  46658c:	strb	w1, [x0, #8]
  466590:	b	4666c4 <_obstack_memory_used@@Base+0x9584>
  466594:	ldr	x0, [sp, #24]
  466598:	and	x0, x0, #0x400
  46659c:	cmp	x0, #0x0
  4665a0:	b.ne	4666cc <_obstack_memory_used@@Base+0x958c>  // b.any
  4665a4:	ldr	x0, [sp, #24]
  4665a8:	and	x0, x0, #0x2
  4665ac:	cmp	x0, #0x0
  4665b0:	b.eq	4666cc <_obstack_memory_used@@Base+0x958c>  // b.none
  4665b4:	ldr	x0, [sp, #40]
  4665b8:	mov	w1, #0x12                  	// #18
  4665bc:	strb	w1, [x0, #8]
  4665c0:	b	4666cc <_obstack_memory_used@@Base+0x958c>
  4665c4:	ldr	x0, [sp, #24]
  4665c8:	and	x0, x0, #0x400
  4665cc:	cmp	x0, #0x0
  4665d0:	b.ne	4666d4 <_obstack_memory_used@@Base+0x9594>  // b.any
  4665d4:	ldr	x0, [sp, #24]
  4665d8:	and	x0, x0, #0x2
  4665dc:	cmp	x0, #0x0
  4665e0:	b.eq	4666d4 <_obstack_memory_used@@Base+0x9594>  // b.none
  4665e4:	ldr	x0, [sp, #40]
  4665e8:	mov	w1, #0x13                  	// #19
  4665ec:	strb	w1, [x0, #8]
  4665f0:	b	4666d4 <_obstack_memory_used@@Base+0x9594>
  4665f4:	ldr	x0, [sp, #24]
  4665f8:	and	x0, x0, #0x200
  4665fc:	cmp	x0, #0x0
  466600:	b.eq	4666dc <_obstack_memory_used@@Base+0x959c>  // b.none
  466604:	ldr	x0, [sp, #24]
  466608:	and	x0, x0, #0x1000
  46660c:	cmp	x0, #0x0
  466610:	b.ne	4666dc <_obstack_memory_used@@Base+0x959c>  // b.any
  466614:	ldr	x0, [sp, #40]
  466618:	mov	w1, #0x17                  	// #23
  46661c:	strb	w1, [x0, #8]
  466620:	b	4666dc <_obstack_memory_used@@Base+0x959c>
  466624:	ldr	x0, [sp, #24]
  466628:	and	x0, x0, #0x200
  46662c:	cmp	x0, #0x0
  466630:	b.eq	4666e4 <_obstack_memory_used@@Base+0x95a4>  // b.none
  466634:	ldr	x0, [sp, #24]
  466638:	and	x0, x0, #0x1000
  46663c:	cmp	x0, #0x0
  466640:	b.ne	4666e4 <_obstack_memory_used@@Base+0x95a4>  // b.any
  466644:	ldr	x0, [sp, #40]
  466648:	mov	w1, #0x18                  	// #24
  46664c:	strb	w1, [x0, #8]
  466650:	b	4666e4 <_obstack_memory_used@@Base+0x95a4>
  466654:	nop
  466658:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  46665c:	nop
  466660:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  466664:	nop
  466668:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  46666c:	nop
  466670:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  466674:	nop
  466678:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  46667c:	nop
  466680:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  466684:	nop
  466688:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  46668c:	nop
  466690:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  466694:	nop
  466698:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  46669c:	nop
  4666a0:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666a4:	nop
  4666a8:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666ac:	nop
  4666b0:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666b4:	nop
  4666b8:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666bc:	nop
  4666c0:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666c4:	nop
  4666c8:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666cc:	nop
  4666d0:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666d4:	nop
  4666d8:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666dc:	nop
  4666e0:	b	4666e8 <_obstack_memory_used@@Base+0x95a8>
  4666e4:	nop
  4666e8:	mov	w0, #0x2                   	// #2
  4666ec:	b	466b84 <_obstack_memory_used@@Base+0x9a44>
  4666f0:	ldr	x0, [sp, #40]
  4666f4:	mov	w1, #0x1                   	// #1
  4666f8:	strb	w1, [x0, #8]
  4666fc:	ldr	x0, [sp, #32]
  466700:	ldr	w0, [x0, #144]
  466704:	cmp	w0, #0x1
  466708:	b.le	46676c <_obstack_memory_used@@Base+0x962c>
  46670c:	ldr	x0, [sp, #32]
  466710:	ldr	x0, [x0, #72]
  466714:	mov	x1, x0
  466718:	ldr	x0, [sp, #32]
  46671c:	bl	45d710 <_obstack_memory_used@@Base+0x5d0>
  466720:	str	w0, [sp, #72]
  466724:	ldr	w0, [sp, #72]
  466728:	bl	404a60 <iswalnum@plt>
  46672c:	cmp	w0, #0x0
  466730:	b.ne	466740 <_obstack_memory_used@@Base+0x9600>  // b.any
  466734:	ldr	w0, [sp, #72]
  466738:	cmp	w0, #0x5f
  46673c:	b.ne	466748 <_obstack_memory_used@@Base+0x9608>  // b.any
  466740:	mov	w0, #0x1                   	// #1
  466744:	b	46674c <_obstack_memory_used@@Base+0x960c>
  466748:	mov	w0, #0x0                   	// #0
  46674c:	cmp	w0, #0x0
  466750:	cset	w0, ne  // ne = any
  466754:	and	w2, w0, #0xff
  466758:	ldr	x1, [sp, #40]
  46675c:	ldrb	w0, [x1, #10]
  466760:	bfi	w0, w2, #6, #1
  466764:	strb	w0, [x1, #10]
  466768:	b	4667cc <_obstack_memory_used@@Base+0x968c>
  46676c:	bl	4047f0 <__ctype_b_loc@plt>
  466770:	ldr	x1, [x0]
  466774:	ldr	x0, [sp, #40]
  466778:	ldrb	w0, [x0]
  46677c:	and	x0, x0, #0xff
  466780:	lsl	x0, x0, #1
  466784:	add	x0, x1, x0
  466788:	ldrh	w0, [x0]
  46678c:	and	w0, w0, #0x8
  466790:	cmp	w0, #0x0
  466794:	b.ne	4667a8 <_obstack_memory_used@@Base+0x9668>  // b.any
  466798:	ldr	x0, [sp, #40]
  46679c:	ldrb	w0, [x0]
  4667a0:	cmp	w0, #0x5f
  4667a4:	b.ne	4667b0 <_obstack_memory_used@@Base+0x9670>  // b.any
  4667a8:	mov	w0, #0x1                   	// #1
  4667ac:	b	4667b4 <_obstack_memory_used@@Base+0x9674>
  4667b0:	mov	w0, #0x0                   	// #0
  4667b4:	and	w0, w0, #0x1
  4667b8:	and	w2, w0, #0xff
  4667bc:	ldr	x1, [sp, #40]
  4667c0:	ldrb	w0, [x1, #10]
  4667c4:	bfi	w0, w2, #6, #1
  4667c8:	strb	w0, [x1, #10]
  4667cc:	ldrb	w0, [sp, #79]
  4667d0:	cmp	w0, #0x7d
  4667d4:	b.eq	466984 <_obstack_memory_used@@Base+0x9844>  // b.none
  4667d8:	cmp	w0, #0x7d
  4667dc:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  4667e0:	cmp	w0, #0x7c
  4667e4:	b.eq	4668b4 <_obstack_memory_used@@Base+0x9774>  // b.none
  4667e8:	cmp	w0, #0x7c
  4667ec:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  4667f0:	cmp	w0, #0x7b
  4667f4:	b.eq	466954 <_obstack_memory_used@@Base+0x9814>  // b.none
  4667f8:	cmp	w0, #0x7b
  4667fc:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466800:	cmp	w0, #0x5e
  466804:	b.eq	466a14 <_obstack_memory_used@@Base+0x98d4>  // b.none
  466808:	cmp	w0, #0x5e
  46680c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466810:	cmp	w0, #0x5b
  466814:	b.eq	4669f4 <_obstack_memory_used@@Base+0x98b4>  // b.none
  466818:	cmp	w0, #0x5b
  46681c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466820:	cmp	w0, #0x3f
  466824:	b.eq	466924 <_obstack_memory_used@@Base+0x97e4>  // b.none
  466828:	cmp	w0, #0x3f
  46682c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466830:	cmp	w0, #0x2e
  466834:	b.eq	466a04 <_obstack_memory_used@@Base+0x98c4>  // b.none
  466838:	cmp	w0, #0x2e
  46683c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466840:	cmp	w0, #0x2b
  466844:	b.eq	4668f4 <_obstack_memory_used@@Base+0x97b4>  // b.none
  466848:	cmp	w0, #0x2b
  46684c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466850:	cmp	w0, #0x2a
  466854:	b.eq	4668e4 <_obstack_memory_used@@Base+0x97a4>  // b.none
  466858:	cmp	w0, #0x2a
  46685c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466860:	cmp	w0, #0x29
  466864:	b.eq	4669d4 <_obstack_memory_used@@Base+0x9894>  // b.none
  466868:	cmp	w0, #0x29
  46686c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466870:	cmp	w0, #0x28
  466874:	b.eq	4669b4 <_obstack_memory_used@@Base+0x9874>  // b.none
  466878:	cmp	w0, #0x28
  46687c:	b.gt	466b2c <_obstack_memory_used@@Base+0x99ec>
  466880:	cmp	w0, #0xa
  466884:	b.eq	466894 <_obstack_memory_used@@Base+0x9754>  // b.none
  466888:	cmp	w0, #0x24
  46688c:	b.eq	466a94 <_obstack_memory_used@@Base+0x9954>  // b.none
  466890:	b	466b2c <_obstack_memory_used@@Base+0x99ec>
  466894:	ldr	x0, [sp, #24]
  466898:	and	x0, x0, #0x800
  46689c:	cmp	x0, #0x0
  4668a0:	b.eq	466b34 <_obstack_memory_used@@Base+0x99f4>  // b.none
  4668a4:	ldr	x0, [sp, #40]
  4668a8:	mov	w1, #0xa                   	// #10
  4668ac:	strb	w1, [x0, #8]
  4668b0:	b	466b34 <_obstack_memory_used@@Base+0x99f4>
  4668b4:	ldr	x0, [sp, #24]
  4668b8:	and	x0, x0, #0x400
  4668bc:	cmp	x0, #0x0
  4668c0:	b.ne	466b3c <_obstack_memory_used@@Base+0x99fc>  // b.any
  4668c4:	ldr	x0, [sp, #24]
  4668c8:	and	x0, x0, #0x8000
  4668cc:	cmp	x0, #0x0
  4668d0:	b.eq	466b3c <_obstack_memory_used@@Base+0x99fc>  // b.none
  4668d4:	ldr	x0, [sp, #40]
  4668d8:	mov	w1, #0xa                   	// #10
  4668dc:	strb	w1, [x0, #8]
  4668e0:	b	466b3c <_obstack_memory_used@@Base+0x99fc>
  4668e4:	ldr	x0, [sp, #40]
  4668e8:	mov	w1, #0xb                   	// #11
  4668ec:	strb	w1, [x0, #8]
  4668f0:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  4668f4:	ldr	x0, [sp, #24]
  4668f8:	and	x0, x0, #0x400
  4668fc:	cmp	x0, #0x0
  466900:	b.ne	466b44 <_obstack_memory_used@@Base+0x9a04>  // b.any
  466904:	ldr	x0, [sp, #24]
  466908:	and	x0, x0, #0x2
  46690c:	cmp	x0, #0x0
  466910:	b.ne	466b44 <_obstack_memory_used@@Base+0x9a04>  // b.any
  466914:	ldr	x0, [sp, #40]
  466918:	mov	w1, #0x12                  	// #18
  46691c:	strb	w1, [x0, #8]
  466920:	b	466b44 <_obstack_memory_used@@Base+0x9a04>
  466924:	ldr	x0, [sp, #24]
  466928:	and	x0, x0, #0x400
  46692c:	cmp	x0, #0x0
  466930:	b.ne	466b4c <_obstack_memory_used@@Base+0x9a0c>  // b.any
  466934:	ldr	x0, [sp, #24]
  466938:	and	x0, x0, #0x2
  46693c:	cmp	x0, #0x0
  466940:	b.ne	466b4c <_obstack_memory_used@@Base+0x9a0c>  // b.any
  466944:	ldr	x0, [sp, #40]
  466948:	mov	w1, #0x13                  	// #19
  46694c:	strb	w1, [x0, #8]
  466950:	b	466b4c <_obstack_memory_used@@Base+0x9a0c>
  466954:	ldr	x0, [sp, #24]
  466958:	and	x0, x0, #0x200
  46695c:	cmp	x0, #0x0
  466960:	b.eq	466b54 <_obstack_memory_used@@Base+0x9a14>  // b.none
  466964:	ldr	x0, [sp, #24]
  466968:	and	x0, x0, #0x1000
  46696c:	cmp	x0, #0x0
  466970:	b.eq	466b54 <_obstack_memory_used@@Base+0x9a14>  // b.none
  466974:	ldr	x0, [sp, #40]
  466978:	mov	w1, #0x17                  	// #23
  46697c:	strb	w1, [x0, #8]
  466980:	b	466b54 <_obstack_memory_used@@Base+0x9a14>
  466984:	ldr	x0, [sp, #24]
  466988:	and	x0, x0, #0x200
  46698c:	cmp	x0, #0x0
  466990:	b.eq	466b5c <_obstack_memory_used@@Base+0x9a1c>  // b.none
  466994:	ldr	x0, [sp, #24]
  466998:	and	x0, x0, #0x1000
  46699c:	cmp	x0, #0x0
  4669a0:	b.eq	466b5c <_obstack_memory_used@@Base+0x9a1c>  // b.none
  4669a4:	ldr	x0, [sp, #40]
  4669a8:	mov	w1, #0x18                  	// #24
  4669ac:	strb	w1, [x0, #8]
  4669b0:	b	466b5c <_obstack_memory_used@@Base+0x9a1c>
  4669b4:	ldr	x0, [sp, #24]
  4669b8:	and	x0, x0, #0x2000
  4669bc:	cmp	x0, #0x0
  4669c0:	b.eq	466b64 <_obstack_memory_used@@Base+0x9a24>  // b.none
  4669c4:	ldr	x0, [sp, #40]
  4669c8:	mov	w1, #0x8                   	// #8
  4669cc:	strb	w1, [x0, #8]
  4669d0:	b	466b64 <_obstack_memory_used@@Base+0x9a24>
  4669d4:	ldr	x0, [sp, #24]
  4669d8:	and	x0, x0, #0x2000
  4669dc:	cmp	x0, #0x0
  4669e0:	b.eq	466b6c <_obstack_memory_used@@Base+0x9a2c>  // b.none
  4669e4:	ldr	x0, [sp, #40]
  4669e8:	mov	w1, #0x9                   	// #9
  4669ec:	strb	w1, [x0, #8]
  4669f0:	b	466b6c <_obstack_memory_used@@Base+0x9a2c>
  4669f4:	ldr	x0, [sp, #40]
  4669f8:	mov	w1, #0x14                  	// #20
  4669fc:	strb	w1, [x0, #8]
  466a00:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466a04:	ldr	x0, [sp, #40]
  466a08:	mov	w1, #0x5                   	// #5
  466a0c:	strb	w1, [x0, #8]
  466a10:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466a14:	ldr	x1, [sp, #24]
  466a18:	mov	x0, #0x8                   	// #8
  466a1c:	movk	x0, #0x80, lsl #16
  466a20:	and	x0, x1, x0
  466a24:	cmp	x0, #0x0
  466a28:	b.ne	466a78 <_obstack_memory_used@@Base+0x9938>  // b.any
  466a2c:	ldr	x0, [sp, #32]
  466a30:	ldr	x0, [x0, #72]
  466a34:	cmp	x0, #0x0
  466a38:	b.eq	466a78 <_obstack_memory_used@@Base+0x9938>  // b.none
  466a3c:	ldr	x0, [sp, #32]
  466a40:	ldr	x1, [x0, #8]
  466a44:	ldr	x0, [sp, #32]
  466a48:	ldr	x0, [x0, #72]
  466a4c:	sub	x0, x0, #0x1
  466a50:	add	x0, x1, x0
  466a54:	ldrb	w0, [x0]
  466a58:	strb	w0, [sp, #71]
  466a5c:	ldr	x0, [sp, #24]
  466a60:	and	x0, x0, #0x800
  466a64:	cmp	x0, #0x0
  466a68:	b.eq	466b74 <_obstack_memory_used@@Base+0x9a34>  // b.none
  466a6c:	ldrb	w0, [sp, #71]
  466a70:	cmp	w0, #0xa
  466a74:	b.ne	466b74 <_obstack_memory_used@@Base+0x9a34>  // b.any
  466a78:	ldr	x0, [sp, #40]
  466a7c:	mov	w1, #0xc                   	// #12
  466a80:	strb	w1, [x0, #8]
  466a84:	ldr	x0, [sp, #40]
  466a88:	mov	w1, #0x10                  	// #16
  466a8c:	str	w1, [x0]
  466a90:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466a94:	ldr	x0, [sp, #24]
  466a98:	and	x0, x0, #0x8
  466a9c:	cmp	x0, #0x0
  466aa0:	b.ne	466b10 <_obstack_memory_used@@Base+0x99d0>  // b.any
  466aa4:	ldr	x0, [sp, #32]
  466aa8:	ldr	x0, [x0, #72]
  466aac:	add	x1, x0, #0x1
  466ab0:	ldr	x0, [sp, #32]
  466ab4:	ldr	x0, [x0, #88]
  466ab8:	cmp	x1, x0
  466abc:	b.eq	466b10 <_obstack_memory_used@@Base+0x99d0>  // b.none
  466ac0:	ldr	x0, [sp, #32]
  466ac4:	ldr	x0, [x0, #72]
  466ac8:	add	x1, x0, #0x1
  466acc:	ldr	x0, [sp, #32]
  466ad0:	str	x1, [x0, #72]
  466ad4:	add	x0, sp, #0x30
  466ad8:	ldr	x2, [sp, #24]
  466adc:	ldr	x1, [sp, #32]
  466ae0:	bl	466118 <_obstack_memory_used@@Base+0x8fd8>
  466ae4:	ldr	x0, [sp, #32]
  466ae8:	ldr	x0, [x0, #72]
  466aec:	sub	x1, x0, #0x1
  466af0:	ldr	x0, [sp, #32]
  466af4:	str	x1, [x0, #72]
  466af8:	ldrb	w0, [sp, #56]
  466afc:	cmp	w0, #0xa
  466b00:	b.eq	466b10 <_obstack_memory_used@@Base+0x99d0>  // b.none
  466b04:	ldrb	w0, [sp, #56]
  466b08:	cmp	w0, #0x9
  466b0c:	b.ne	466b7c <_obstack_memory_used@@Base+0x9a3c>  // b.any
  466b10:	ldr	x0, [sp, #40]
  466b14:	mov	w1, #0xc                   	// #12
  466b18:	strb	w1, [x0, #8]
  466b1c:	ldr	x0, [sp, #40]
  466b20:	mov	w1, #0x20                  	// #32
  466b24:	str	w1, [x0]
  466b28:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b2c:	nop
  466b30:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b34:	nop
  466b38:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b3c:	nop
  466b40:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b44:	nop
  466b48:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b4c:	nop
  466b50:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b54:	nop
  466b58:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b5c:	nop
  466b60:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b64:	nop
  466b68:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b6c:	nop
  466b70:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b74:	nop
  466b78:	b	466b80 <_obstack_memory_used@@Base+0x9a40>
  466b7c:	nop
  466b80:	mov	w0, #0x1                   	// #1
  466b84:	ldp	x29, x30, [sp], #80
  466b88:	ret
  466b8c:	sub	sp, sp, #0x30
  466b90:	str	x0, [sp, #24]
  466b94:	str	x1, [sp, #16]
  466b98:	str	x2, [sp, #8]
  466b9c:	ldr	x0, [sp, #16]
  466ba0:	ldr	x1, [x0, #104]
  466ba4:	ldr	x0, [sp, #16]
  466ba8:	ldr	x0, [x0, #72]
  466bac:	cmp	x1, x0
  466bb0:	b.gt	466bc8 <_obstack_memory_used@@Base+0x9a88>
  466bb4:	ldr	x0, [sp, #24]
  466bb8:	mov	w1, #0x2                   	// #2
  466bbc:	strb	w1, [x0, #8]
  466bc0:	mov	w0, #0x0                   	// #0
  466bc4:	b	466e38 <_obstack_memory_used@@Base+0x9cf8>
  466bc8:	ldr	x0, [sp, #16]
  466bcc:	ldr	x0, [x0, #8]
  466bd0:	ldr	x1, [sp, #16]
  466bd4:	ldr	x1, [x1, #72]
  466bd8:	add	x0, x0, x1
  466bdc:	ldrb	w0, [x0]
  466be0:	strb	w0, [sp, #39]
  466be4:	ldr	x0, [sp, #24]
  466be8:	ldrb	w1, [sp, #39]
  466bec:	strb	w1, [x0]
  466bf0:	ldr	x0, [sp, #16]
  466bf4:	ldr	w0, [x0, #144]
  466bf8:	cmp	w0, #0x1
  466bfc:	b.le	466c50 <_obstack_memory_used@@Base+0x9b10>
  466c00:	ldr	x0, [sp, #16]
  466c04:	ldr	x1, [x0, #72]
  466c08:	ldr	x0, [sp, #16]
  466c0c:	ldr	x0, [x0, #48]
  466c10:	cmp	x1, x0
  466c14:	b.eq	466c50 <_obstack_memory_used@@Base+0x9b10>  // b.none
  466c18:	ldr	x0, [sp, #16]
  466c1c:	ldr	x1, [x0, #16]
  466c20:	ldr	x0, [sp, #16]
  466c24:	ldr	x0, [x0, #72]
  466c28:	lsl	x0, x0, #2
  466c2c:	add	x0, x1, x0
  466c30:	ldr	w0, [x0]
  466c34:	cmn	w0, #0x1
  466c38:	b.ne	466c50 <_obstack_memory_used@@Base+0x9b10>  // b.any
  466c3c:	ldr	x0, [sp, #24]
  466c40:	mov	w1, #0x1                   	// #1
  466c44:	strb	w1, [x0, #8]
  466c48:	mov	w0, #0x1                   	// #1
  466c4c:	b	466e38 <_obstack_memory_used@@Base+0x9cf8>
  466c50:	ldrb	w0, [sp, #39]
  466c54:	cmp	w0, #0x5c
  466c58:	b.ne	466cd8 <_obstack_memory_used@@Base+0x9b98>  // b.any
  466c5c:	ldr	x0, [sp, #8]
  466c60:	and	x0, x0, #0x1
  466c64:	cmp	x0, #0x0
  466c68:	b.eq	466cd8 <_obstack_memory_used@@Base+0x9b98>  // b.none
  466c6c:	ldr	x0, [sp, #16]
  466c70:	ldr	x0, [x0, #72]
  466c74:	add	x1, x0, #0x1
  466c78:	ldr	x0, [sp, #16]
  466c7c:	ldr	x0, [x0, #88]
  466c80:	cmp	x1, x0
  466c84:	b.ge	466cd8 <_obstack_memory_used@@Base+0x9b98>  // b.tcont
  466c88:	ldr	x0, [sp, #16]
  466c8c:	ldr	x0, [x0, #72]
  466c90:	add	x1, x0, #0x1
  466c94:	ldr	x0, [sp, #16]
  466c98:	str	x1, [x0, #72]
  466c9c:	ldr	x0, [sp, #16]
  466ca0:	ldr	x0, [x0, #8]
  466ca4:	ldr	x1, [sp, #16]
  466ca8:	ldr	x1, [x1, #72]
  466cac:	add	x0, x0, x1
  466cb0:	ldrb	w0, [x0]
  466cb4:	strb	w0, [sp, #38]
  466cb8:	ldr	x0, [sp, #24]
  466cbc:	ldrb	w1, [sp, #38]
  466cc0:	strb	w1, [x0]
  466cc4:	ldr	x0, [sp, #24]
  466cc8:	mov	w1, #0x1                   	// #1
  466ccc:	strb	w1, [x0, #8]
  466cd0:	mov	w0, #0x1                   	// #1
  466cd4:	b	466e38 <_obstack_memory_used@@Base+0x9cf8>
  466cd8:	ldrb	w0, [sp, #39]
  466cdc:	cmp	w0, #0x5b
  466ce0:	b.ne	466dd0 <_obstack_memory_used@@Base+0x9c90>  // b.any
  466ce4:	ldr	x0, [sp, #16]
  466ce8:	ldr	x0, [x0, #72]
  466cec:	add	x1, x0, #0x1
  466cf0:	ldr	x0, [sp, #16]
  466cf4:	ldr	x0, [x0, #88]
  466cf8:	cmp	x1, x0
  466cfc:	b.ge	466d24 <_obstack_memory_used@@Base+0x9be4>  // b.tcont
  466d00:	ldr	x0, [sp, #16]
  466d04:	ldr	x1, [x0, #8]
  466d08:	ldr	x0, [sp, #16]
  466d0c:	ldr	x0, [x0, #72]
  466d10:	add	x0, x0, #0x1
  466d14:	add	x0, x1, x0
  466d18:	ldrb	w0, [x0]
  466d1c:	strb	w0, [sp, #47]
  466d20:	b	466d28 <_obstack_memory_used@@Base+0x9be8>
  466d24:	strb	wzr, [sp, #47]
  466d28:	ldr	x0, [sp, #24]
  466d2c:	ldrb	w1, [sp, #47]
  466d30:	strb	w1, [x0]
  466d34:	mov	w0, #0x2                   	// #2
  466d38:	str	w0, [sp, #40]
  466d3c:	ldrb	w0, [sp, #47]
  466d40:	cmp	w0, #0x3d
  466d44:	b.eq	466d74 <_obstack_memory_used@@Base+0x9c34>  // b.none
  466d48:	cmp	w0, #0x3d
  466d4c:	b.gt	466da4 <_obstack_memory_used@@Base+0x9c64>
  466d50:	cmp	w0, #0x2e
  466d54:	b.eq	466d64 <_obstack_memory_used@@Base+0x9c24>  // b.none
  466d58:	cmp	w0, #0x3a
  466d5c:	b.eq	466d84 <_obstack_memory_used@@Base+0x9c44>  // b.none
  466d60:	b	466da4 <_obstack_memory_used@@Base+0x9c64>
  466d64:	ldr	x0, [sp, #24]
  466d68:	mov	w1, #0x1a                  	// #26
  466d6c:	strb	w1, [x0, #8]
  466d70:	b	466dc8 <_obstack_memory_used@@Base+0x9c88>
  466d74:	ldr	x0, [sp, #24]
  466d78:	mov	w1, #0x1c                  	// #28
  466d7c:	strb	w1, [x0, #8]
  466d80:	b	466dc8 <_obstack_memory_used@@Base+0x9c88>
  466d84:	ldr	x0, [sp, #8]
  466d88:	and	x0, x0, #0x4
  466d8c:	cmp	x0, #0x0
  466d90:	b.eq	466da4 <_obstack_memory_used@@Base+0x9c64>  // b.none
  466d94:	ldr	x0, [sp, #24]
  466d98:	mov	w1, #0x1e                  	// #30
  466d9c:	strb	w1, [x0, #8]
  466da0:	b	466dc8 <_obstack_memory_used@@Base+0x9c88>
  466da4:	ldr	x0, [sp, #24]
  466da8:	mov	w1, #0x1                   	// #1
  466dac:	strb	w1, [x0, #8]
  466db0:	ldr	x0, [sp, #24]
  466db4:	ldrb	w1, [sp, #39]
  466db8:	strb	w1, [x0]
  466dbc:	mov	w0, #0x1                   	// #1
  466dc0:	str	w0, [sp, #40]
  466dc4:	nop
  466dc8:	ldr	w0, [sp, #40]
  466dcc:	b	466e38 <_obstack_memory_used@@Base+0x9cf8>
  466dd0:	ldrb	w0, [sp, #39]
  466dd4:	cmp	w0, #0x5e
  466dd8:	b.eq	466e18 <_obstack_memory_used@@Base+0x9cd8>  // b.none
  466ddc:	cmp	w0, #0x5e
  466de0:	b.gt	466e28 <_obstack_memory_used@@Base+0x9ce8>
  466de4:	cmp	w0, #0x2d
  466de8:	b.eq	466df8 <_obstack_memory_used@@Base+0x9cb8>  // b.none
  466dec:	cmp	w0, #0x5d
  466df0:	b.eq	466e08 <_obstack_memory_used@@Base+0x9cc8>  // b.none
  466df4:	b	466e28 <_obstack_memory_used@@Base+0x9ce8>
  466df8:	ldr	x0, [sp, #24]
  466dfc:	mov	w1, #0x16                  	// #22
  466e00:	strb	w1, [x0, #8]
  466e04:	b	466e34 <_obstack_memory_used@@Base+0x9cf4>
  466e08:	ldr	x0, [sp, #24]
  466e0c:	mov	w1, #0x15                  	// #21
  466e10:	strb	w1, [x0, #8]
  466e14:	b	466e34 <_obstack_memory_used@@Base+0x9cf4>
  466e18:	ldr	x0, [sp, #24]
  466e1c:	mov	w1, #0x19                  	// #25
  466e20:	strb	w1, [x0, #8]
  466e24:	b	466e34 <_obstack_memory_used@@Base+0x9cf4>
  466e28:	ldr	x0, [sp, #24]
  466e2c:	mov	w1, #0x1                   	// #1
  466e30:	strb	w1, [x0, #8]
  466e34:	mov	w0, #0x1                   	// #1
  466e38:	add	sp, sp, #0x30
  466e3c:	ret
  466e40:	stp	x29, x30, [sp, #-96]!
  466e44:	mov	x29, sp
  466e48:	str	x0, [sp, #40]
  466e4c:	str	x1, [sp, #32]
  466e50:	str	x2, [sp, #24]
  466e54:	str	x3, [sp, #16]
  466e58:	ldr	x0, [sp, #32]
  466e5c:	ldr	x0, [x0]
  466e60:	str	x0, [sp, #80]
  466e64:	ldr	x0, [sp, #80]
  466e68:	ldr	x1, [sp, #24]
  466e6c:	str	x1, [x0, #216]
  466e70:	ldr	x0, [sp, #24]
  466e74:	orr	x1, x0, #0x800000
  466e78:	add	x0, sp, #0x30
  466e7c:	mov	x2, x1
  466e80:	ldr	x1, [sp, #40]
  466e84:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  466e88:	add	x0, sp, #0x30
  466e8c:	ldr	x5, [sp, #16]
  466e90:	mov	x4, #0x0                   	// #0
  466e94:	ldr	x3, [sp, #24]
  466e98:	mov	x2, x0
  466e9c:	ldr	x1, [sp, #32]
  466ea0:	ldr	x0, [sp, #40]
  466ea4:	bl	466f90 <_obstack_memory_used@@Base+0x9e50>
  466ea8:	str	x0, [sp, #72]
  466eac:	ldr	x0, [sp, #16]
  466eb0:	ldr	w0, [x0]
  466eb4:	cmp	w0, #0x0
  466eb8:	cset	w0, ne  // ne = any
  466ebc:	and	w0, w0, #0xff
  466ec0:	and	x0, x0, #0xff
  466ec4:	cmp	x0, #0x0
  466ec8:	b.eq	466ef0 <_obstack_memory_used@@Base+0x9db0>  // b.none
  466ecc:	ldr	x0, [sp, #72]
  466ed0:	cmp	x0, #0x0
  466ed4:	cset	w0, eq  // eq = none
  466ed8:	and	w0, w0, #0xff
  466edc:	and	x0, x0, #0xff
  466ee0:	cmp	x0, #0x0
  466ee4:	b.eq	466ef0 <_obstack_memory_used@@Base+0x9db0>  // b.none
  466ee8:	mov	x0, #0x0                   	// #0
  466eec:	b	466f88 <_obstack_memory_used@@Base+0x9e48>
  466ef0:	mov	w3, #0x2                   	// #2
  466ef4:	mov	x2, #0x0                   	// #0
  466ef8:	mov	x1, #0x0                   	// #0
  466efc:	ldr	x0, [sp, #80]
  466f00:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  466f04:	str	x0, [sp, #64]
  466f08:	ldr	x0, [sp, #72]
  466f0c:	cmp	x0, #0x0
  466f10:	b.eq	466f30 <_obstack_memory_used@@Base+0x9df0>  // b.none
  466f14:	mov	w3, #0x10                  	// #16
  466f18:	ldr	x2, [sp, #64]
  466f1c:	ldr	x1, [sp, #72]
  466f20:	ldr	x0, [sp, #80]
  466f24:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  466f28:	str	x0, [sp, #88]
  466f2c:	b	466f38 <_obstack_memory_used@@Base+0x9df8>
  466f30:	ldr	x0, [sp, #64]
  466f34:	str	x0, [sp, #88]
  466f38:	ldr	x0, [sp, #64]
  466f3c:	cmp	x0, #0x0
  466f40:	cset	w0, eq  // eq = none
  466f44:	and	w0, w0, #0xff
  466f48:	and	x0, x0, #0xff
  466f4c:	cmp	x0, #0x0
  466f50:	b.ne	466f70 <_obstack_memory_used@@Base+0x9e30>  // b.any
  466f54:	ldr	x0, [sp, #88]
  466f58:	cmp	x0, #0x0
  466f5c:	cset	w0, eq  // eq = none
  466f60:	and	w0, w0, #0xff
  466f64:	and	x0, x0, #0xff
  466f68:	cmp	x0, #0x0
  466f6c:	b.eq	466f84 <_obstack_memory_used@@Base+0x9e44>  // b.none
  466f70:	ldr	x0, [sp, #16]
  466f74:	mov	w1, #0xc                   	// #12
  466f78:	str	w1, [x0]
  466f7c:	mov	x0, #0x0                   	// #0
  466f80:	b	466f88 <_obstack_memory_used@@Base+0x9e48>
  466f84:	ldr	x0, [sp, #88]
  466f88:	ldp	x29, x30, [sp], #96
  466f8c:	ret
  466f90:	stp	x29, x30, [sp, #-112]!
  466f94:	mov	x29, sp
  466f98:	str	x0, [sp, #56]
  466f9c:	str	x1, [sp, #48]
  466fa0:	str	x2, [sp, #40]
  466fa4:	str	x3, [sp, #32]
  466fa8:	str	x4, [sp, #24]
  466fac:	str	x5, [sp, #16]
  466fb0:	ldr	x0, [sp, #48]
  466fb4:	ldr	x0, [x0]
  466fb8:	str	x0, [sp, #88]
  466fbc:	str	xzr, [sp, #96]
  466fc0:	ldr	x0, [sp, #88]
  466fc4:	ldr	x0, [x0, #168]
  466fc8:	str	x0, [sp, #80]
  466fcc:	ldr	x5, [sp, #16]
  466fd0:	ldr	x4, [sp, #24]
  466fd4:	ldr	x3, [sp, #32]
  466fd8:	ldr	x2, [sp, #40]
  466fdc:	ldr	x1, [sp, #48]
  466fe0:	ldr	x0, [sp, #56]
  466fe4:	bl	4671a4 <_obstack_memory_used@@Base+0xa064>
  466fe8:	str	x0, [sp, #104]
  466fec:	ldr	x0, [sp, #16]
  466ff0:	ldr	w0, [x0]
  466ff4:	cmp	w0, #0x0
  466ff8:	cset	w0, ne  // ne = any
  466ffc:	and	w0, w0, #0xff
  467000:	and	x0, x0, #0xff
  467004:	cmp	x0, #0x0
  467008:	b.eq	467188 <_obstack_memory_used@@Base+0xa048>  // b.none
  46700c:	ldr	x0, [sp, #104]
  467010:	cmp	x0, #0x0
  467014:	cset	w0, eq  // eq = none
  467018:	and	w0, w0, #0xff
  46701c:	and	x0, x0, #0xff
  467020:	cmp	x0, #0x0
  467024:	b.eq	467188 <_obstack_memory_used@@Base+0xa048>  // b.none
  467028:	mov	x0, #0x0                   	// #0
  46702c:	b	46719c <_obstack_memory_used@@Base+0xa05c>
  467030:	ldr	x0, [sp, #32]
  467034:	orr	x0, x0, #0x800000
  467038:	mov	x2, x0
  46703c:	ldr	x1, [sp, #56]
  467040:	ldr	x0, [sp, #40]
  467044:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  467048:	ldr	x0, [sp, #40]
  46704c:	ldrb	w0, [x0, #8]
  467050:	cmp	w0, #0xa
  467054:	b.eq	46713c <_obstack_memory_used@@Base+0x9ffc>  // b.none
  467058:	ldr	x0, [sp, #40]
  46705c:	ldrb	w0, [x0, #8]
  467060:	cmp	w0, #0x2
  467064:	b.eq	46713c <_obstack_memory_used@@Base+0x9ffc>  // b.none
  467068:	ldr	x0, [sp, #24]
  46706c:	cmp	x0, #0x0
  467070:	b.eq	467084 <_obstack_memory_used@@Base+0x9f44>  // b.none
  467074:	ldr	x0, [sp, #40]
  467078:	ldrb	w0, [x0, #8]
  46707c:	cmp	w0, #0x9
  467080:	b.eq	46713c <_obstack_memory_used@@Base+0x9ffc>  // b.none
  467084:	ldr	x0, [sp, #88]
  467088:	ldr	x0, [x0, #168]
  46708c:	str	x0, [sp, #72]
  467090:	ldr	x0, [sp, #88]
  467094:	ldr	x1, [sp, #80]
  467098:	str	x1, [x0, #168]
  46709c:	ldr	x5, [sp, #16]
  4670a0:	ldr	x4, [sp, #24]
  4670a4:	ldr	x3, [sp, #32]
  4670a8:	ldr	x2, [sp, #40]
  4670ac:	ldr	x1, [sp, #48]
  4670b0:	ldr	x0, [sp, #56]
  4670b4:	bl	4671a4 <_obstack_memory_used@@Base+0xa064>
  4670b8:	str	x0, [sp, #96]
  4670bc:	ldr	x0, [sp, #16]
  4670c0:	ldr	w0, [x0]
  4670c4:	cmp	w0, #0x0
  4670c8:	cset	w0, ne  // ne = any
  4670cc:	and	w0, w0, #0xff
  4670d0:	and	x0, x0, #0xff
  4670d4:	cmp	x0, #0x0
  4670d8:	b.eq	467120 <_obstack_memory_used@@Base+0x9fe0>  // b.none
  4670dc:	ldr	x0, [sp, #96]
  4670e0:	cmp	x0, #0x0
  4670e4:	cset	w0, eq  // eq = none
  4670e8:	and	w0, w0, #0xff
  4670ec:	and	x0, x0, #0xff
  4670f0:	cmp	x0, #0x0
  4670f4:	b.eq	467120 <_obstack_memory_used@@Base+0x9fe0>  // b.none
  4670f8:	ldr	x0, [sp, #104]
  4670fc:	cmp	x0, #0x0
  467100:	b.eq	467118 <_obstack_memory_used@@Base+0x9fd8>  // b.none
  467104:	mov	x2, #0x0                   	// #0
  467108:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  46710c:	add	x1, x0, #0xaf4
  467110:	ldr	x0, [sp, #104]
  467114:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  467118:	mov	x0, #0x0                   	// #0
  46711c:	b	46719c <_obstack_memory_used@@Base+0xa05c>
  467120:	ldr	x0, [sp, #88]
  467124:	ldr	x1, [x0, #168]
  467128:	ldr	x0, [sp, #72]
  46712c:	orr	x1, x1, x0
  467130:	ldr	x0, [sp, #88]
  467134:	str	x1, [x0, #168]
  467138:	b	467140 <_obstack_memory_used@@Base+0xa000>
  46713c:	str	xzr, [sp, #96]
  467140:	mov	w3, #0xa                   	// #10
  467144:	ldr	x2, [sp, #96]
  467148:	ldr	x1, [sp, #104]
  46714c:	ldr	x0, [sp, #88]
  467150:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  467154:	str	x0, [sp, #104]
  467158:	ldr	x0, [sp, #104]
  46715c:	cmp	x0, #0x0
  467160:	cset	w0, eq  // eq = none
  467164:	and	w0, w0, #0xff
  467168:	and	x0, x0, #0xff
  46716c:	cmp	x0, #0x0
  467170:	b.eq	467188 <_obstack_memory_used@@Base+0xa048>  // b.none
  467174:	ldr	x0, [sp, #16]
  467178:	mov	w1, #0xc                   	// #12
  46717c:	str	w1, [x0]
  467180:	mov	x0, #0x0                   	// #0
  467184:	b	46719c <_obstack_memory_used@@Base+0xa05c>
  467188:	ldr	x0, [sp, #40]
  46718c:	ldrb	w0, [x0, #8]
  467190:	cmp	w0, #0xa
  467194:	b.eq	467030 <_obstack_memory_used@@Base+0x9ef0>  // b.none
  467198:	ldr	x0, [sp, #104]
  46719c:	ldp	x29, x30, [sp], #112
  4671a0:	ret
  4671a4:	stp	x29, x30, [sp, #-96]!
  4671a8:	mov	x29, sp
  4671ac:	str	x0, [sp, #56]
  4671b0:	str	x1, [sp, #48]
  4671b4:	str	x2, [sp, #40]
  4671b8:	str	x3, [sp, #32]
  4671bc:	str	x4, [sp, #24]
  4671c0:	str	x5, [sp, #16]
  4671c4:	ldr	x0, [sp, #48]
  4671c8:	ldr	x0, [x0]
  4671cc:	str	x0, [sp, #80]
  4671d0:	ldr	x5, [sp, #16]
  4671d4:	ldr	x4, [sp, #24]
  4671d8:	ldr	x3, [sp, #32]
  4671dc:	ldr	x2, [sp, #40]
  4671e0:	ldr	x1, [sp, #48]
  4671e4:	ldr	x0, [sp, #56]
  4671e8:	bl	467398 <_obstack_memory_used@@Base+0xa258>
  4671ec:	str	x0, [sp, #88]
  4671f0:	ldr	x0, [sp, #16]
  4671f4:	ldr	w0, [x0]
  4671f8:	cmp	w0, #0x0
  4671fc:	cset	w0, ne  // ne = any
  467200:	and	w0, w0, #0xff
  467204:	and	x0, x0, #0xff
  467208:	cmp	x0, #0x0
  46720c:	b.eq	467350 <_obstack_memory_used@@Base+0xa210>  // b.none
  467210:	ldr	x0, [sp, #88]
  467214:	cmp	x0, #0x0
  467218:	cset	w0, eq  // eq = none
  46721c:	and	w0, w0, #0xff
  467220:	and	x0, x0, #0xff
  467224:	cmp	x0, #0x0
  467228:	b.eq	467350 <_obstack_memory_used@@Base+0xa210>  // b.none
  46722c:	mov	x0, #0x0                   	// #0
  467230:	b	467390 <_obstack_memory_used@@Base+0xa250>
  467234:	ldr	x5, [sp, #16]
  467238:	ldr	x4, [sp, #24]
  46723c:	ldr	x3, [sp, #32]
  467240:	ldr	x2, [sp, #40]
  467244:	ldr	x1, [sp, #48]
  467248:	ldr	x0, [sp, #56]
  46724c:	bl	467398 <_obstack_memory_used@@Base+0xa258>
  467250:	str	x0, [sp, #72]
  467254:	ldr	x0, [sp, #16]
  467258:	ldr	w0, [x0]
  46725c:	cmp	w0, #0x0
  467260:	cset	w0, ne  // ne = any
  467264:	and	w0, w0, #0xff
  467268:	and	x0, x0, #0xff
  46726c:	cmp	x0, #0x0
  467270:	b.eq	4672b8 <_obstack_memory_used@@Base+0xa178>  // b.none
  467274:	ldr	x0, [sp, #72]
  467278:	cmp	x0, #0x0
  46727c:	cset	w0, eq  // eq = none
  467280:	and	w0, w0, #0xff
  467284:	and	x0, x0, #0xff
  467288:	cmp	x0, #0x0
  46728c:	b.eq	4672b8 <_obstack_memory_used@@Base+0xa178>  // b.none
  467290:	ldr	x0, [sp, #88]
  467294:	cmp	x0, #0x0
  467298:	b.eq	4672b0 <_obstack_memory_used@@Base+0xa170>  // b.none
  46729c:	mov	x2, #0x0                   	// #0
  4672a0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  4672a4:	add	x1, x0, #0xaf4
  4672a8:	ldr	x0, [sp, #88]
  4672ac:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  4672b0:	mov	x0, #0x0                   	// #0
  4672b4:	b	467390 <_obstack_memory_used@@Base+0xa250>
  4672b8:	ldr	x0, [sp, #88]
  4672bc:	cmp	x0, #0x0
  4672c0:	b.eq	46733c <_obstack_memory_used@@Base+0xa1fc>  // b.none
  4672c4:	ldr	x0, [sp, #72]
  4672c8:	cmp	x0, #0x0
  4672cc:	b.eq	46733c <_obstack_memory_used@@Base+0xa1fc>  // b.none
  4672d0:	mov	w3, #0x10                  	// #16
  4672d4:	ldr	x2, [sp, #72]
  4672d8:	ldr	x1, [sp, #88]
  4672dc:	ldr	x0, [sp, #80]
  4672e0:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  4672e4:	str	x0, [sp, #64]
  4672e8:	ldr	x0, [sp, #64]
  4672ec:	cmp	x0, #0x0
  4672f0:	b.ne	467330 <_obstack_memory_used@@Base+0xa1f0>  // b.any
  4672f4:	mov	x2, #0x0                   	// #0
  4672f8:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  4672fc:	add	x1, x0, #0xaf4
  467300:	ldr	x0, [sp, #72]
  467304:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  467308:	mov	x2, #0x0                   	// #0
  46730c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  467310:	add	x1, x0, #0xaf4
  467314:	ldr	x0, [sp, #88]
  467318:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  46731c:	ldr	x0, [sp, #16]
  467320:	mov	w1, #0xc                   	// #12
  467324:	str	w1, [x0]
  467328:	mov	x0, #0x0                   	// #0
  46732c:	b	467390 <_obstack_memory_used@@Base+0xa250>
  467330:	ldr	x0, [sp, #64]
  467334:	str	x0, [sp, #88]
  467338:	b	467350 <_obstack_memory_used@@Base+0xa210>
  46733c:	ldr	x0, [sp, #88]
  467340:	cmp	x0, #0x0
  467344:	b.ne	467350 <_obstack_memory_used@@Base+0xa210>  // b.any
  467348:	ldr	x0, [sp, #72]
  46734c:	str	x0, [sp, #88]
  467350:	ldr	x0, [sp, #40]
  467354:	ldrb	w0, [x0, #8]
  467358:	cmp	w0, #0xa
  46735c:	b.eq	46738c <_obstack_memory_used@@Base+0xa24c>  // b.none
  467360:	ldr	x0, [sp, #40]
  467364:	ldrb	w0, [x0, #8]
  467368:	cmp	w0, #0x2
  46736c:	b.eq	46738c <_obstack_memory_used@@Base+0xa24c>  // b.none
  467370:	ldr	x0, [sp, #24]
  467374:	cmp	x0, #0x0
  467378:	b.eq	467234 <_obstack_memory_used@@Base+0xa0f4>  // b.none
  46737c:	ldr	x0, [sp, #40]
  467380:	ldrb	w0, [x0, #8]
  467384:	cmp	w0, #0x9
  467388:	b.ne	467234 <_obstack_memory_used@@Base+0xa0f4>  // b.any
  46738c:	ldr	x0, [sp, #88]
  467390:	ldp	x29, x30, [sp], #96
  467394:	ret
  467398:	stp	x29, x30, [sp, #-112]!
  46739c:	mov	x29, sp
  4673a0:	str	x0, [sp, #56]
  4673a4:	str	x1, [sp, #48]
  4673a8:	str	x2, [sp, #40]
  4673ac:	str	x3, [sp, #32]
  4673b0:	str	x4, [sp, #24]
  4673b4:	str	x5, [sp, #16]
  4673b8:	ldr	x0, [sp, #48]
  4673bc:	ldr	x0, [x0]
  4673c0:	str	x0, [sp, #88]
  4673c4:	ldr	x0, [sp, #40]
  4673c8:	ldrb	w0, [x0, #8]
  4673cc:	cmp	w0, #0x24
  4673d0:	b.eq	467c10 <_obstack_memory_used@@Base+0xaad0>  // b.none
  4673d4:	cmp	w0, #0x24
  4673d8:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  4673dc:	cmp	w0, #0x23
  4673e0:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  4673e4:	cmp	w0, #0x22
  4673e8:	b.ge	467b84 <_obstack_memory_used@@Base+0xaa44>  // b.tcont
  4673ec:	cmp	w0, #0x21
  4673f0:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  4673f4:	cmp	w0, #0x20
  4673f8:	b.ge	467b00 <_obstack_memory_used@@Base+0xa9c0>  // b.tcont
  4673fc:	cmp	w0, #0x18
  467400:	b.eq	467864 <_obstack_memory_used@@Base+0xa724>  // b.none
  467404:	cmp	w0, #0x18
  467408:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46740c:	cmp	w0, #0x17
  467410:	b.eq	4677a8 <_obstack_memory_used@@Base+0xa668>  // b.none
  467414:	cmp	w0, #0x17
  467418:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46741c:	cmp	w0, #0x14
  467420:	b.eq	46766c <_obstack_memory_used@@Base+0xa52c>  // b.none
  467424:	cmp	w0, #0x14
  467428:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46742c:	cmp	w0, #0x13
  467430:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  467434:	cmp	w0, #0x12
  467438:	b.ge	4677cc <_obstack_memory_used@@Base+0xa68c>  // b.tcont
  46743c:	cmp	w0, #0xc
  467440:	b.eq	4678b8 <_obstack_memory_used@@Base+0xa778>  // b.none
  467444:	cmp	w0, #0xc
  467448:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46744c:	cmp	w0, #0xb
  467450:	b.eq	4677cc <_obstack_memory_used@@Base+0xa68c>  // b.none
  467454:	cmp	w0, #0xb
  467458:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46745c:	cmp	w0, #0xa
  467460:	b.eq	467c08 <_obstack_memory_used@@Base+0xaac8>  // b.none
  467464:	cmp	w0, #0xa
  467468:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46746c:	cmp	w0, #0x9
  467470:	b.eq	467830 <_obstack_memory_used@@Base+0xa6f0>  // b.none
  467474:	cmp	w0, #0x9
  467478:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46747c:	cmp	w0, #0x8
  467480:	b.eq	467600 <_obstack_memory_used@@Base+0xa4c0>  // b.none
  467484:	cmp	w0, #0x8
  467488:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46748c:	cmp	w0, #0x5
  467490:	b.eq	467a94 <_obstack_memory_used@@Base+0xa954>  // b.none
  467494:	cmp	w0, #0x5
  467498:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  46749c:	cmp	w0, #0x4
  4674a0:	b.eq	4676cc <_obstack_memory_used@@Base+0xa58c>  // b.none
  4674a4:	cmp	w0, #0x4
  4674a8:	b.gt	467c24 <_obstack_memory_used@@Base+0xaae4>
  4674ac:	cmp	w0, #0x1
  4674b0:	b.eq	4674c0 <_obstack_memory_used@@Base+0xa380>  // b.none
  4674b4:	cmp	w0, #0x2
  4674b8:	b.eq	467c08 <_obstack_memory_used@@Base+0xaac8>  // b.none
  4674bc:	b	467c24 <_obstack_memory_used@@Base+0xaae4>
  4674c0:	ldr	x3, [sp, #40]
  4674c4:	mov	x2, #0x0                   	// #0
  4674c8:	mov	x1, #0x0                   	// #0
  4674cc:	ldr	x0, [sp, #88]
  4674d0:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  4674d4:	str	x0, [sp, #104]
  4674d8:	ldr	x0, [sp, #104]
  4674dc:	cmp	x0, #0x0
  4674e0:	cset	w0, eq  // eq = none
  4674e4:	and	w0, w0, #0xff
  4674e8:	and	x0, x0, #0xff
  4674ec:	cmp	x0, #0x0
  4674f0:	b.eq	467508 <_obstack_memory_used@@Base+0xa3c8>  // b.none
  4674f4:	ldr	x0, [sp, #16]
  4674f8:	mov	w1, #0xc                   	// #12
  4674fc:	str	w1, [x0]
  467500:	mov	x0, #0x0                   	// #0
  467504:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467508:	ldr	x0, [sp, #88]
  46750c:	ldr	w0, [x0, #180]
  467510:	cmp	w0, #0x1
  467514:	b.le	467c2c <_obstack_memory_used@@Base+0xaaec>
  467518:	b	4675a8 <_obstack_memory_used@@Base+0xa468>
  46751c:	ldr	x2, [sp, #32]
  467520:	ldr	x1, [sp, #56]
  467524:	ldr	x0, [sp, #40]
  467528:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  46752c:	ldr	x3, [sp, #40]
  467530:	mov	x2, #0x0                   	// #0
  467534:	mov	x1, #0x0                   	// #0
  467538:	ldr	x0, [sp, #88]
  46753c:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467540:	str	x0, [sp, #72]
  467544:	mov	w3, #0x10                  	// #16
  467548:	ldr	x2, [sp, #72]
  46754c:	ldr	x1, [sp, #104]
  467550:	ldr	x0, [sp, #88]
  467554:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  467558:	str	x0, [sp, #104]
  46755c:	ldr	x0, [sp, #72]
  467560:	cmp	x0, #0x0
  467564:	cset	w0, eq  // eq = none
  467568:	and	w0, w0, #0xff
  46756c:	and	x0, x0, #0xff
  467570:	cmp	x0, #0x0
  467574:	b.ne	467594 <_obstack_memory_used@@Base+0xa454>  // b.any
  467578:	ldr	x0, [sp, #104]
  46757c:	cmp	x0, #0x0
  467580:	cset	w0, eq  // eq = none
  467584:	and	w0, w0, #0xff
  467588:	and	x0, x0, #0xff
  46758c:	cmp	x0, #0x0
  467590:	b.eq	4675a8 <_obstack_memory_used@@Base+0xa468>  // b.none
  467594:	ldr	x0, [sp, #16]
  467598:	mov	w1, #0xc                   	// #12
  46759c:	str	w1, [x0]
  4675a0:	mov	x0, #0x0                   	// #0
  4675a4:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  4675a8:	ldr	x0, [sp, #56]
  4675ac:	ldr	x1, [x0, #104]
  4675b0:	ldr	x0, [sp, #56]
  4675b4:	ldr	x0, [x0, #72]
  4675b8:	cmp	x1, x0
  4675bc:	b.le	467c2c <_obstack_memory_used@@Base+0xaaec>
  4675c0:	ldr	x0, [sp, #56]
  4675c4:	ldr	x1, [x0, #72]
  4675c8:	ldr	x0, [sp, #56]
  4675cc:	ldr	x0, [x0, #48]
  4675d0:	cmp	x1, x0
  4675d4:	b.eq	467c2c <_obstack_memory_used@@Base+0xaaec>  // b.none
  4675d8:	ldr	x0, [sp, #56]
  4675dc:	ldr	x1, [x0, #16]
  4675e0:	ldr	x0, [sp, #56]
  4675e4:	ldr	x0, [x0, #72]
  4675e8:	lsl	x0, x0, #2
  4675ec:	add	x0, x1, x0
  4675f0:	ldr	w0, [x0]
  4675f4:	cmn	w0, #0x1
  4675f8:	b.eq	46751c <_obstack_memory_used@@Base+0xa3dc>  // b.none
  4675fc:	b	467c2c <_obstack_memory_used@@Base+0xaaec>
  467600:	ldr	x0, [sp, #24]
  467604:	add	x0, x0, #0x1
  467608:	ldr	x5, [sp, #16]
  46760c:	mov	x4, x0
  467610:	ldr	x3, [sp, #32]
  467614:	ldr	x2, [sp, #40]
  467618:	ldr	x1, [sp, #48]
  46761c:	ldr	x0, [sp, #56]
  467620:	bl	467db0 <_obstack_memory_used@@Base+0xac70>
  467624:	str	x0, [sp, #104]
  467628:	ldr	x0, [sp, #16]
  46762c:	ldr	w0, [x0]
  467630:	cmp	w0, #0x0
  467634:	cset	w0, ne  // ne = any
  467638:	and	w0, w0, #0xff
  46763c:	and	x0, x0, #0xff
  467640:	cmp	x0, #0x0
  467644:	b.eq	467c34 <_obstack_memory_used@@Base+0xaaf4>  // b.none
  467648:	ldr	x0, [sp, #104]
  46764c:	cmp	x0, #0x0
  467650:	cset	w0, eq  // eq = none
  467654:	and	w0, w0, #0xff
  467658:	and	x0, x0, #0xff
  46765c:	cmp	x0, #0x0
  467660:	b.eq	467c34 <_obstack_memory_used@@Base+0xaaf4>  // b.none
  467664:	mov	x0, #0x0                   	// #0
  467668:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  46766c:	ldr	x4, [sp, #16]
  467670:	ldr	x3, [sp, #32]
  467674:	ldr	x2, [sp, #40]
  467678:	ldr	x1, [sp, #88]
  46767c:	ldr	x0, [sp, #56]
  467680:	bl	468acc <_obstack_memory_used@@Base+0xb98c>
  467684:	str	x0, [sp, #104]
  467688:	ldr	x0, [sp, #16]
  46768c:	ldr	w0, [x0]
  467690:	cmp	w0, #0x0
  467694:	cset	w0, ne  // ne = any
  467698:	and	w0, w0, #0xff
  46769c:	and	x0, x0, #0xff
  4676a0:	cmp	x0, #0x0
  4676a4:	b.eq	467c3c <_obstack_memory_used@@Base+0xaafc>  // b.none
  4676a8:	ldr	x0, [sp, #104]
  4676ac:	cmp	x0, #0x0
  4676b0:	cset	w0, eq  // eq = none
  4676b4:	and	w0, w0, #0xff
  4676b8:	and	x0, x0, #0xff
  4676bc:	cmp	x0, #0x0
  4676c0:	b.eq	467c3c <_obstack_memory_used@@Base+0xaafc>  // b.none
  4676c4:	mov	x0, #0x0                   	// #0
  4676c8:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  4676cc:	ldr	x0, [sp, #88]
  4676d0:	ldr	x1, [x0, #168]
  4676d4:	ldr	x0, [sp, #40]
  4676d8:	ldr	x0, [x0]
  4676dc:	mov	w2, w0
  4676e0:	mov	w0, #0x1                   	// #1
  4676e4:	lsl	w0, w0, w2
  4676e8:	sxtw	x0, w0
  4676ec:	and	x0, x1, x0
  4676f0:	cmp	x0, #0x0
  4676f4:	b.ne	46770c <_obstack_memory_used@@Base+0xa5cc>  // b.any
  4676f8:	ldr	x0, [sp, #16]
  4676fc:	mov	w1, #0x6                   	// #6
  467700:	str	w1, [x0]
  467704:	mov	x0, #0x0                   	// #0
  467708:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  46770c:	ldr	x0, [sp, #88]
  467710:	ldr	x1, [x0, #160]
  467714:	ldr	x0, [sp, #40]
  467718:	ldr	x0, [x0]
  46771c:	mov	w2, w0
  467720:	mov	w0, #0x1                   	// #1
  467724:	lsl	w0, w0, w2
  467728:	sxtw	x0, w0
  46772c:	orr	x1, x1, x0
  467730:	ldr	x0, [sp, #88]
  467734:	str	x1, [x0, #160]
  467738:	ldr	x3, [sp, #40]
  46773c:	mov	x2, #0x0                   	// #0
  467740:	mov	x1, #0x0                   	// #0
  467744:	ldr	x0, [sp, #88]
  467748:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  46774c:	str	x0, [sp, #104]
  467750:	ldr	x0, [sp, #104]
  467754:	cmp	x0, #0x0
  467758:	cset	w0, eq  // eq = none
  46775c:	and	w0, w0, #0xff
  467760:	and	x0, x0, #0xff
  467764:	cmp	x0, #0x0
  467768:	b.eq	467780 <_obstack_memory_used@@Base+0xa640>  // b.none
  46776c:	ldr	x0, [sp, #16]
  467770:	mov	w1, #0xc                   	// #12
  467774:	str	w1, [x0]
  467778:	mov	x0, #0x0                   	// #0
  46777c:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467780:	ldr	x0, [sp, #88]
  467784:	ldr	x0, [x0, #152]
  467788:	add	x1, x0, #0x1
  46778c:	ldr	x0, [sp, #88]
  467790:	str	x1, [x0, #152]
  467794:	ldr	x0, [sp, #88]
  467798:	ldrb	w1, [x0, #176]
  46779c:	orr	w1, w1, #0x2
  4677a0:	strb	w1, [x0, #176]
  4677a4:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  4677a8:	ldr	x0, [sp, #32]
  4677ac:	and	x0, x0, #0x1000000
  4677b0:	cmp	x0, #0x0
  4677b4:	b.eq	4677cc <_obstack_memory_used@@Base+0xa68c>  // b.none
  4677b8:	ldr	x0, [sp, #16]
  4677bc:	mov	w1, #0xd                   	// #13
  4677c0:	str	w1, [x0]
  4677c4:	mov	x0, #0x0                   	// #0
  4677c8:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  4677cc:	ldr	x0, [sp, #32]
  4677d0:	and	x0, x0, #0x20
  4677d4:	cmp	x0, #0x0
  4677d8:	b.eq	4677f0 <_obstack_memory_used@@Base+0xa6b0>  // b.none
  4677dc:	ldr	x0, [sp, #16]
  4677e0:	mov	w1, #0xd                   	// #13
  4677e4:	str	w1, [x0]
  4677e8:	mov	x0, #0x0                   	// #0
  4677ec:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  4677f0:	ldr	x0, [sp, #32]
  4677f4:	and	x0, x0, #0x10
  4677f8:	cmp	x0, #0x0
  4677fc:	b.eq	467830 <_obstack_memory_used@@Base+0xa6f0>  // b.none
  467800:	ldr	x2, [sp, #32]
  467804:	ldr	x1, [sp, #56]
  467808:	ldr	x0, [sp, #40]
  46780c:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  467810:	ldr	x5, [sp, #16]
  467814:	ldr	x4, [sp, #24]
  467818:	ldr	x3, [sp, #32]
  46781c:	ldr	x2, [sp, #40]
  467820:	ldr	x1, [sp, #48]
  467824:	ldr	x0, [sp, #56]
  467828:	bl	467398 <_obstack_memory_used@@Base+0xa258>
  46782c:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467830:	ldr	x0, [sp, #40]
  467834:	ldrb	w0, [x0, #8]
  467838:	cmp	w0, #0x9
  46783c:	b.ne	467864 <_obstack_memory_used@@Base+0xa724>  // b.any
  467840:	ldr	x0, [sp, #32]
  467844:	and	x0, x0, #0x20000
  467848:	cmp	x0, #0x0
  46784c:	b.ne	467864 <_obstack_memory_used@@Base+0xa724>  // b.any
  467850:	ldr	x0, [sp, #16]
  467854:	mov	w1, #0x10                  	// #16
  467858:	str	w1, [x0]
  46785c:	mov	x0, #0x0                   	// #0
  467860:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467864:	ldr	x0, [sp, #40]
  467868:	mov	w1, #0x1                   	// #1
  46786c:	strb	w1, [x0, #8]
  467870:	ldr	x3, [sp, #40]
  467874:	mov	x2, #0x0                   	// #0
  467878:	mov	x1, #0x0                   	// #0
  46787c:	ldr	x0, [sp, #88]
  467880:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467884:	str	x0, [sp, #104]
  467888:	ldr	x0, [sp, #104]
  46788c:	cmp	x0, #0x0
  467890:	cset	w0, eq  // eq = none
  467894:	and	w0, w0, #0xff
  467898:	and	x0, x0, #0xff
  46789c:	cmp	x0, #0x0
  4678a0:	b.eq	467c44 <_obstack_memory_used@@Base+0xab04>  // b.none
  4678a4:	ldr	x0, [sp, #16]
  4678a8:	mov	w1, #0xc                   	// #12
  4678ac:	str	w1, [x0]
  4678b0:	mov	x0, #0x0                   	// #0
  4678b4:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  4678b8:	ldr	x0, [sp, #40]
  4678bc:	ldr	w1, [x0]
  4678c0:	mov	w0, #0x30f                 	// #783
  4678c4:	and	w0, w1, w0
  4678c8:	cmp	w0, #0x0
  4678cc:	b.eq	4678f0 <_obstack_memory_used@@Base+0xa7b0>  // b.none
  4678d0:	ldr	x0, [sp, #88]
  4678d4:	ldrb	w0, [x0, #176]
  4678d8:	and	w0, w0, #0x10
  4678dc:	and	w0, w0, #0xff
  4678e0:	cmp	w0, #0x0
  4678e4:	b.ne	4678f0 <_obstack_memory_used@@Base+0xa7b0>  // b.any
  4678e8:	ldr	x0, [sp, #88]
  4678ec:	bl	4639ac <_obstack_memory_used@@Base+0x686c>
  4678f0:	ldr	x0, [sp, #40]
  4678f4:	ldr	w0, [x0]
  4678f8:	cmp	w0, #0x100
  4678fc:	b.eq	467910 <_obstack_memory_used@@Base+0xa7d0>  // b.none
  467900:	ldr	x0, [sp, #40]
  467904:	ldr	w0, [x0]
  467908:	cmp	w0, #0x200
  46790c:	b.ne	467a30 <_obstack_memory_used@@Base+0xa8f0>  // b.any
  467910:	ldr	x0, [sp, #40]
  467914:	ldr	w0, [x0]
  467918:	cmp	w0, #0x100
  46791c:	b.ne	467954 <_obstack_memory_used@@Base+0xa814>  // b.any
  467920:	ldr	x0, [sp, #40]
  467924:	mov	w1, #0x6                   	// #6
  467928:	str	w1, [x0]
  46792c:	ldr	x3, [sp, #40]
  467930:	mov	x2, #0x0                   	// #0
  467934:	mov	x1, #0x0                   	// #0
  467938:	ldr	x0, [sp, #88]
  46793c:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467940:	str	x0, [sp, #96]
  467944:	ldr	x0, [sp, #40]
  467948:	mov	w1, #0x9                   	// #9
  46794c:	str	w1, [x0]
  467950:	b	467984 <_obstack_memory_used@@Base+0xa844>
  467954:	ldr	x0, [sp, #40]
  467958:	mov	w1, #0x5                   	// #5
  46795c:	str	w1, [x0]
  467960:	ldr	x3, [sp, #40]
  467964:	mov	x2, #0x0                   	// #0
  467968:	mov	x1, #0x0                   	// #0
  46796c:	ldr	x0, [sp, #88]
  467970:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467974:	str	x0, [sp, #96]
  467978:	ldr	x0, [sp, #40]
  46797c:	mov	w1, #0xa                   	// #10
  467980:	str	w1, [x0]
  467984:	ldr	x3, [sp, #40]
  467988:	mov	x2, #0x0                   	// #0
  46798c:	mov	x1, #0x0                   	// #0
  467990:	ldr	x0, [sp, #88]
  467994:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467998:	str	x0, [sp, #80]
  46799c:	mov	w3, #0xa                   	// #10
  4679a0:	ldr	x2, [sp, #80]
  4679a4:	ldr	x1, [sp, #96]
  4679a8:	ldr	x0, [sp, #88]
  4679ac:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  4679b0:	str	x0, [sp, #104]
  4679b4:	ldr	x0, [sp, #96]
  4679b8:	cmp	x0, #0x0
  4679bc:	cset	w0, eq  // eq = none
  4679c0:	and	w0, w0, #0xff
  4679c4:	and	x0, x0, #0xff
  4679c8:	cmp	x0, #0x0
  4679cc:	b.ne	4679ec <_obstack_memory_used@@Base+0xa8ac>  // b.any
  4679d0:	ldr	x0, [sp, #80]
  4679d4:	cmp	x0, #0x0
  4679d8:	cset	w0, eq  // eq = none
  4679dc:	and	w0, w0, #0xff
  4679e0:	and	x0, x0, #0xff
  4679e4:	cmp	x0, #0x0
  4679e8:	b.eq	4679f4 <_obstack_memory_used@@Base+0xa8b4>  // b.none
  4679ec:	mov	w0, #0x1                   	// #1
  4679f0:	b	4679f8 <_obstack_memory_used@@Base+0xa8b8>
  4679f4:	mov	w0, #0x0                   	// #0
  4679f8:	cmp	w0, #0x0
  4679fc:	b.ne	467a1c <_obstack_memory_used@@Base+0xa8dc>  // b.any
  467a00:	ldr	x0, [sp, #104]
  467a04:	cmp	x0, #0x0
  467a08:	cset	w0, eq  // eq = none
  467a0c:	and	w0, w0, #0xff
  467a10:	and	x0, x0, #0xff
  467a14:	cmp	x0, #0x0
  467a18:	b.eq	467a78 <_obstack_memory_used@@Base+0xa938>  // b.none
  467a1c:	ldr	x0, [sp, #16]
  467a20:	mov	w1, #0xc                   	// #12
  467a24:	str	w1, [x0]
  467a28:	mov	x0, #0x0                   	// #0
  467a2c:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467a30:	ldr	x3, [sp, #40]
  467a34:	mov	x2, #0x0                   	// #0
  467a38:	mov	x1, #0x0                   	// #0
  467a3c:	ldr	x0, [sp, #88]
  467a40:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467a44:	str	x0, [sp, #104]
  467a48:	ldr	x0, [sp, #104]
  467a4c:	cmp	x0, #0x0
  467a50:	cset	w0, eq  // eq = none
  467a54:	and	w0, w0, #0xff
  467a58:	and	x0, x0, #0xff
  467a5c:	cmp	x0, #0x0
  467a60:	b.eq	467a7c <_obstack_memory_used@@Base+0xa93c>  // b.none
  467a64:	ldr	x0, [sp, #16]
  467a68:	mov	w1, #0xc                   	// #12
  467a6c:	str	w1, [x0]
  467a70:	mov	x0, #0x0                   	// #0
  467a74:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467a78:	nop
  467a7c:	ldr	x2, [sp, #32]
  467a80:	ldr	x1, [sp, #56]
  467a84:	ldr	x0, [sp, #40]
  467a88:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  467a8c:	ldr	x0, [sp, #104]
  467a90:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467a94:	ldr	x3, [sp, #40]
  467a98:	mov	x2, #0x0                   	// #0
  467a9c:	mov	x1, #0x0                   	// #0
  467aa0:	ldr	x0, [sp, #88]
  467aa4:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  467aa8:	str	x0, [sp, #104]
  467aac:	ldr	x0, [sp, #104]
  467ab0:	cmp	x0, #0x0
  467ab4:	cset	w0, eq  // eq = none
  467ab8:	and	w0, w0, #0xff
  467abc:	and	x0, x0, #0xff
  467ac0:	cmp	x0, #0x0
  467ac4:	b.eq	467adc <_obstack_memory_used@@Base+0xa99c>  // b.none
  467ac8:	ldr	x0, [sp, #16]
  467acc:	mov	w1, #0xc                   	// #12
  467ad0:	str	w1, [x0]
  467ad4:	mov	x0, #0x0                   	// #0
  467ad8:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467adc:	ldr	x0, [sp, #88]
  467ae0:	ldr	w0, [x0, #180]
  467ae4:	cmp	w0, #0x1
  467ae8:	b.le	467c4c <_obstack_memory_used@@Base+0xab0c>
  467aec:	ldr	x0, [sp, #88]
  467af0:	ldrb	w1, [x0, #176]
  467af4:	orr	w1, w1, #0x2
  467af8:	strb	w1, [x0, #176]
  467afc:	b	467c4c <_obstack_memory_used@@Base+0xab0c>
  467b00:	ldr	x0, [sp, #56]
  467b04:	ldr	x1, [x0, #120]
  467b08:	ldr	x0, [sp, #40]
  467b0c:	ldrb	w0, [x0, #8]
  467b10:	cmp	w0, #0x21
  467b14:	cset	w0, eq  // eq = none
  467b18:	and	w0, w0, #0xff
  467b1c:	ldr	x5, [sp, #16]
  467b20:	mov	w4, w0
  467b24:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  467b28:	add	x3, x0, #0x7b8
  467b2c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  467b30:	add	x2, x0, #0x7c0
  467b34:	ldr	x0, [sp, #88]
  467b38:	bl	46a458 <_obstack_memory_used@@Base+0xd318>
  467b3c:	str	x0, [sp, #104]
  467b40:	ldr	x0, [sp, #16]
  467b44:	ldr	w0, [x0]
  467b48:	cmp	w0, #0x0
  467b4c:	cset	w0, ne  // ne = any
  467b50:	and	w0, w0, #0xff
  467b54:	and	x0, x0, #0xff
  467b58:	cmp	x0, #0x0
  467b5c:	b.eq	467c54 <_obstack_memory_used@@Base+0xab14>  // b.none
  467b60:	ldr	x0, [sp, #104]
  467b64:	cmp	x0, #0x0
  467b68:	cset	w0, eq  // eq = none
  467b6c:	and	w0, w0, #0xff
  467b70:	and	x0, x0, #0xff
  467b74:	cmp	x0, #0x0
  467b78:	b.eq	467c54 <_obstack_memory_used@@Base+0xab14>  // b.none
  467b7c:	mov	x0, #0x0                   	// #0
  467b80:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467b84:	ldr	x0, [sp, #56]
  467b88:	ldr	x1, [x0, #120]
  467b8c:	ldr	x0, [sp, #40]
  467b90:	ldrb	w0, [x0, #8]
  467b94:	cmp	w0, #0x23
  467b98:	cset	w0, eq  // eq = none
  467b9c:	and	w0, w0, #0xff
  467ba0:	ldr	x5, [sp, #16]
  467ba4:	mov	w4, w0
  467ba8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  467bac:	add	x3, x0, #0x7c8
  467bb0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  467bb4:	add	x2, x0, #0x7d0
  467bb8:	ldr	x0, [sp, #88]
  467bbc:	bl	46a458 <_obstack_memory_used@@Base+0xd318>
  467bc0:	str	x0, [sp, #104]
  467bc4:	ldr	x0, [sp, #16]
  467bc8:	ldr	w0, [x0]
  467bcc:	cmp	w0, #0x0
  467bd0:	cset	w0, ne  // ne = any
  467bd4:	and	w0, w0, #0xff
  467bd8:	and	x0, x0, #0xff
  467bdc:	cmp	x0, #0x0
  467be0:	b.eq	467c5c <_obstack_memory_used@@Base+0xab1c>  // b.none
  467be4:	ldr	x0, [sp, #104]
  467be8:	cmp	x0, #0x0
  467bec:	cset	w0, eq  // eq = none
  467bf0:	and	w0, w0, #0xff
  467bf4:	and	x0, x0, #0xff
  467bf8:	cmp	x0, #0x0
  467bfc:	b.eq	467c5c <_obstack_memory_used@@Base+0xab1c>  // b.none
  467c00:	mov	x0, #0x0                   	// #0
  467c04:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467c08:	mov	x0, #0x0                   	// #0
  467c0c:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467c10:	ldr	x0, [sp, #16]
  467c14:	mov	w1, #0x5                   	// #5
  467c18:	str	w1, [x0]
  467c1c:	mov	x0, #0x0                   	// #0
  467c20:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467c24:	mov	x0, #0x0                   	// #0
  467c28:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467c2c:	nop
  467c30:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  467c34:	nop
  467c38:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  467c3c:	nop
  467c40:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  467c44:	nop
  467c48:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  467c4c:	nop
  467c50:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  467c54:	nop
  467c58:	b	467c60 <_obstack_memory_used@@Base+0xab20>
  467c5c:	nop
  467c60:	ldr	x2, [sp, #32]
  467c64:	ldr	x1, [sp, #56]
  467c68:	ldr	x0, [sp, #40]
  467c6c:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  467c70:	b	467d64 <_obstack_memory_used@@Base+0xac24>
  467c74:	ldr	x5, [sp, #16]
  467c78:	ldr	x4, [sp, #32]
  467c7c:	ldr	x3, [sp, #40]
  467c80:	ldr	x2, [sp, #88]
  467c84:	ldr	x1, [sp, #56]
  467c88:	ldr	x0, [sp, #104]
  467c8c:	bl	467f6c <_obstack_memory_used@@Base+0xae2c>
  467c90:	str	x0, [sp, #64]
  467c94:	ldr	x0, [sp, #16]
  467c98:	ldr	w0, [x0]
  467c9c:	cmp	w0, #0x0
  467ca0:	cset	w0, ne  // ne = any
  467ca4:	and	w0, w0, #0xff
  467ca8:	and	x0, x0, #0xff
  467cac:	cmp	x0, #0x0
  467cb0:	b.eq	467cf8 <_obstack_memory_used@@Base+0xabb8>  // b.none
  467cb4:	ldr	x0, [sp, #64]
  467cb8:	cmp	x0, #0x0
  467cbc:	cset	w0, eq  // eq = none
  467cc0:	and	w0, w0, #0xff
  467cc4:	and	x0, x0, #0xff
  467cc8:	cmp	x0, #0x0
  467ccc:	b.eq	467cf8 <_obstack_memory_used@@Base+0xabb8>  // b.none
  467cd0:	ldr	x0, [sp, #104]
  467cd4:	cmp	x0, #0x0
  467cd8:	b.eq	467cf0 <_obstack_memory_used@@Base+0xabb0>  // b.none
  467cdc:	mov	x2, #0x0                   	// #0
  467ce0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  467ce4:	add	x1, x0, #0xaf4
  467ce8:	ldr	x0, [sp, #104]
  467cec:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  467cf0:	mov	x0, #0x0                   	// #0
  467cf4:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467cf8:	ldr	x0, [sp, #64]
  467cfc:	str	x0, [sp, #104]
  467d00:	ldr	x0, [sp, #32]
  467d04:	and	x0, x0, #0x1000000
  467d08:	cmp	x0, #0x0
  467d0c:	b.eq	467d64 <_obstack_memory_used@@Base+0xac24>  // b.none
  467d10:	ldr	x0, [sp, #40]
  467d14:	ldrb	w0, [x0, #8]
  467d18:	cmp	w0, #0xb
  467d1c:	b.eq	467d30 <_obstack_memory_used@@Base+0xabf0>  // b.none
  467d20:	ldr	x0, [sp, #40]
  467d24:	ldrb	w0, [x0, #8]
  467d28:	cmp	w0, #0x17
  467d2c:	b.ne	467d64 <_obstack_memory_used@@Base+0xac24>  // b.any
  467d30:	ldr	x0, [sp, #104]
  467d34:	cmp	x0, #0x0
  467d38:	b.eq	467d50 <_obstack_memory_used@@Base+0xac10>  // b.none
  467d3c:	mov	x2, #0x0                   	// #0
  467d40:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  467d44:	add	x1, x0, #0xaf4
  467d48:	ldr	x0, [sp, #104]
  467d4c:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  467d50:	ldr	x0, [sp, #16]
  467d54:	mov	w1, #0xd                   	// #13
  467d58:	str	w1, [x0]
  467d5c:	mov	x0, #0x0                   	// #0
  467d60:	b	467da8 <_obstack_memory_used@@Base+0xac68>
  467d64:	ldr	x0, [sp, #40]
  467d68:	ldrb	w0, [x0, #8]
  467d6c:	cmp	w0, #0xb
  467d70:	b.eq	467c74 <_obstack_memory_used@@Base+0xab34>  // b.none
  467d74:	ldr	x0, [sp, #40]
  467d78:	ldrb	w0, [x0, #8]
  467d7c:	cmp	w0, #0x12
  467d80:	b.eq	467c74 <_obstack_memory_used@@Base+0xab34>  // b.none
  467d84:	ldr	x0, [sp, #40]
  467d88:	ldrb	w0, [x0, #8]
  467d8c:	cmp	w0, #0x13
  467d90:	b.eq	467c74 <_obstack_memory_used@@Base+0xab34>  // b.none
  467d94:	ldr	x0, [sp, #40]
  467d98:	ldrb	w0, [x0, #8]
  467d9c:	cmp	w0, #0x17
  467da0:	b.eq	467c74 <_obstack_memory_used@@Base+0xab34>  // b.none
  467da4:	ldr	x0, [sp, #104]
  467da8:	ldp	x29, x30, [sp], #112
  467dac:	ret
  467db0:	stp	x29, x30, [sp, #-96]!
  467db4:	mov	x29, sp
  467db8:	str	x0, [sp, #56]
  467dbc:	str	x1, [sp, #48]
  467dc0:	str	x2, [sp, #40]
  467dc4:	str	x3, [sp, #32]
  467dc8:	str	x4, [sp, #24]
  467dcc:	str	x5, [sp, #16]
  467dd0:	ldr	x0, [sp, #48]
  467dd4:	ldr	x0, [x0]
  467dd8:	str	x0, [sp, #80]
  467ddc:	ldr	x0, [sp, #48]
  467de0:	ldr	x0, [x0, #48]
  467de4:	add	x2, x0, #0x1
  467de8:	ldr	x1, [sp, #48]
  467dec:	str	x2, [x1, #48]
  467df0:	str	x0, [sp, #72]
  467df4:	ldr	x0, [sp, #32]
  467df8:	orr	x0, x0, #0x800000
  467dfc:	mov	x2, x0
  467e00:	ldr	x1, [sp, #56]
  467e04:	ldr	x0, [sp, #40]
  467e08:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  467e0c:	ldr	x0, [sp, #40]
  467e10:	ldrb	w0, [x0, #8]
  467e14:	cmp	w0, #0x9
  467e18:	b.ne	467e24 <_obstack_memory_used@@Base+0xace4>  // b.any
  467e1c:	str	xzr, [sp, #88]
  467e20:	b	467ed8 <_obstack_memory_used@@Base+0xad98>
  467e24:	ldr	x5, [sp, #16]
  467e28:	ldr	x4, [sp, #24]
  467e2c:	ldr	x3, [sp, #32]
  467e30:	ldr	x2, [sp, #40]
  467e34:	ldr	x1, [sp, #48]
  467e38:	ldr	x0, [sp, #56]
  467e3c:	bl	466f90 <_obstack_memory_used@@Base+0x9e50>
  467e40:	str	x0, [sp, #88]
  467e44:	ldr	x0, [sp, #16]
  467e48:	ldr	w0, [x0]
  467e4c:	cmp	w0, #0x0
  467e50:	cset	w0, eq  // eq = none
  467e54:	and	w0, w0, #0xff
  467e58:	and	x0, x0, #0xff
  467e5c:	cmp	x0, #0x0
  467e60:	b.eq	467eb0 <_obstack_memory_used@@Base+0xad70>  // b.none
  467e64:	ldr	x0, [sp, #40]
  467e68:	ldrb	w0, [x0, #8]
  467e6c:	cmp	w0, #0x9
  467e70:	cset	w0, ne  // ne = any
  467e74:	and	w0, w0, #0xff
  467e78:	and	x0, x0, #0xff
  467e7c:	cmp	x0, #0x0
  467e80:	b.eq	467eb0 <_obstack_memory_used@@Base+0xad70>  // b.none
  467e84:	ldr	x0, [sp, #88]
  467e88:	cmp	x0, #0x0
  467e8c:	b.eq	467ea4 <_obstack_memory_used@@Base+0xad64>  // b.none
  467e90:	mov	x2, #0x0                   	// #0
  467e94:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  467e98:	add	x1, x0, #0xaf4
  467e9c:	ldr	x0, [sp, #88]
  467ea0:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  467ea4:	ldr	x0, [sp, #16]
  467ea8:	mov	w1, #0x8                   	// #8
  467eac:	str	w1, [x0]
  467eb0:	ldr	x0, [sp, #16]
  467eb4:	ldr	w0, [x0]
  467eb8:	cmp	w0, #0x0
  467ebc:	cset	w0, ne  // ne = any
  467ec0:	and	w0, w0, #0xff
  467ec4:	and	x0, x0, #0xff
  467ec8:	cmp	x0, #0x0
  467ecc:	b.eq	467ed8 <_obstack_memory_used@@Base+0xad98>  // b.none
  467ed0:	mov	x0, #0x0                   	// #0
  467ed4:	b	467f64 <_obstack_memory_used@@Base+0xae24>
  467ed8:	ldr	x0, [sp, #72]
  467edc:	cmp	x0, #0x8
  467ee0:	b.hi	467f0c <_obstack_memory_used@@Base+0xadcc>  // b.pmore
  467ee4:	ldr	x0, [sp, #80]
  467ee8:	ldr	x1, [x0, #168]
  467eec:	ldr	x0, [sp, #72]
  467ef0:	mov	w2, w0
  467ef4:	mov	w0, #0x1                   	// #1
  467ef8:	lsl	w0, w0, w2
  467efc:	sxtw	x0, w0
  467f00:	orr	x1, x1, x0
  467f04:	ldr	x0, [sp, #80]
  467f08:	str	x1, [x0, #168]
  467f0c:	mov	w3, #0x11                  	// #17
  467f10:	mov	x2, #0x0                   	// #0
  467f14:	ldr	x1, [sp, #88]
  467f18:	ldr	x0, [sp, #80]
  467f1c:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  467f20:	str	x0, [sp, #88]
  467f24:	ldr	x0, [sp, #88]
  467f28:	cmp	x0, #0x0
  467f2c:	cset	w0, eq  // eq = none
  467f30:	and	w0, w0, #0xff
  467f34:	and	x0, x0, #0xff
  467f38:	cmp	x0, #0x0
  467f3c:	b.eq	467f54 <_obstack_memory_used@@Base+0xae14>  // b.none
  467f40:	ldr	x0, [sp, #16]
  467f44:	mov	w1, #0xc                   	// #12
  467f48:	str	w1, [x0]
  467f4c:	mov	x0, #0x0                   	// #0
  467f50:	b	467f64 <_obstack_memory_used@@Base+0xae24>
  467f54:	ldr	x1, [sp, #72]
  467f58:	ldr	x0, [sp, #88]
  467f5c:	str	x1, [x0, #40]
  467f60:	ldr	x0, [sp, #88]
  467f64:	ldp	x29, x30, [sp], #96
  467f68:	ret
  467f6c:	stp	x29, x30, [sp, #-144]!
  467f70:	mov	x29, sp
  467f74:	str	x0, [sp, #56]
  467f78:	str	x1, [sp, #48]
  467f7c:	str	x2, [sp, #40]
  467f80:	str	x3, [sp, #32]
  467f84:	str	x4, [sp, #24]
  467f88:	str	x5, [sp, #16]
  467f8c:	str	xzr, [sp, #136]
  467f90:	str	xzr, [sp, #128]
  467f94:	ldr	x0, [sp, #48]
  467f98:	ldr	x0, [x0, #72]
  467f9c:	str	x0, [sp, #96]
  467fa0:	ldr	x0, [sp, #32]
  467fa4:	ldp	x0, x1, [x0]
  467fa8:	stp	x0, x1, [sp, #72]
  467fac:	ldr	x0, [sp, #32]
  467fb0:	ldrb	w0, [x0, #8]
  467fb4:	cmp	w0, #0x17
  467fb8:	b.ne	468224 <_obstack_memory_used@@Base+0xb0e4>  // b.any
  467fbc:	str	xzr, [sp, #104]
  467fc0:	ldr	x2, [sp, #24]
  467fc4:	ldr	x1, [sp, #32]
  467fc8:	ldr	x0, [sp, #48]
  467fcc:	bl	46a718 <_obstack_memory_used@@Base+0xd5d8>
  467fd0:	str	x0, [sp, #112]
  467fd4:	ldr	x0, [sp, #112]
  467fd8:	cmn	x0, #0x1
  467fdc:	b.ne	46801c <_obstack_memory_used@@Base+0xaedc>  // b.any
  467fe0:	ldr	x0, [sp, #32]
  467fe4:	ldrb	w0, [x0, #8]
  467fe8:	cmp	w0, #0x1
  467fec:	b.ne	468008 <_obstack_memory_used@@Base+0xaec8>  // b.any
  467ff0:	ldr	x0, [sp, #32]
  467ff4:	ldrb	w0, [x0]
  467ff8:	cmp	w0, #0x2c
  467ffc:	b.ne	468008 <_obstack_memory_used@@Base+0xaec8>  // b.any
  468000:	str	xzr, [sp, #112]
  468004:	b	46801c <_obstack_memory_used@@Base+0xaedc>
  468008:	ldr	x0, [sp, #16]
  46800c:	mov	w1, #0xa                   	// #10
  468010:	str	w1, [x0]
  468014:	mov	x0, #0x0                   	// #0
  468018:	b	468588 <_obstack_memory_used@@Base+0xb448>
  46801c:	ldr	x0, [sp, #112]
  468020:	cmn	x0, #0x2
  468024:	cset	w0, ne  // ne = any
  468028:	and	w0, w0, #0xff
  46802c:	and	x0, x0, #0xff
  468030:	cmp	x0, #0x0
  468034:	b.eq	46808c <_obstack_memory_used@@Base+0xaf4c>  // b.none
  468038:	ldr	x0, [sp, #32]
  46803c:	ldrb	w0, [x0, #8]
  468040:	cmp	w0, #0x18
  468044:	b.eq	468084 <_obstack_memory_used@@Base+0xaf44>  // b.none
  468048:	ldr	x0, [sp, #32]
  46804c:	ldrb	w0, [x0, #8]
  468050:	cmp	w0, #0x1
  468054:	b.ne	46807c <_obstack_memory_used@@Base+0xaf3c>  // b.any
  468058:	ldr	x0, [sp, #32]
  46805c:	ldrb	w0, [x0]
  468060:	cmp	w0, #0x2c
  468064:	b.ne	46807c <_obstack_memory_used@@Base+0xaf3c>  // b.any
  468068:	ldr	x2, [sp, #24]
  46806c:	ldr	x1, [sp, #32]
  468070:	ldr	x0, [sp, #48]
  468074:	bl	46a718 <_obstack_memory_used@@Base+0xd5d8>
  468078:	b	468088 <_obstack_memory_used@@Base+0xaf48>
  46807c:	mov	x0, #0xfffffffffffffffe    	// #-2
  468080:	b	468088 <_obstack_memory_used@@Base+0xaf48>
  468084:	ldr	x0, [sp, #112]
  468088:	str	x0, [sp, #104]
  46808c:	ldr	x0, [sp, #112]
  468090:	cmn	x0, #0x2
  468094:	cset	w0, eq  // eq = none
  468098:	and	w0, w0, #0xff
  46809c:	and	x0, x0, #0xff
  4680a0:	cmp	x0, #0x0
  4680a4:	b.ne	4680c4 <_obstack_memory_used@@Base+0xaf84>  // b.any
  4680a8:	ldr	x0, [sp, #104]
  4680ac:	cmn	x0, #0x2
  4680b0:	cset	w0, eq  // eq = none
  4680b4:	and	w0, w0, #0xff
  4680b8:	and	x0, x0, #0xff
  4680bc:	cmp	x0, #0x0
  4680c0:	b.eq	468144 <_obstack_memory_used@@Base+0xb004>  // b.none
  4680c4:	ldr	x0, [sp, #24]
  4680c8:	and	x0, x0, #0x200000
  4680cc:	cmp	x0, #0x0
  4680d0:	cset	w0, eq  // eq = none
  4680d4:	and	w0, w0, #0xff
  4680d8:	and	x0, x0, #0xff
  4680dc:	cmp	x0, #0x0
  4680e0:	b.eq	468118 <_obstack_memory_used@@Base+0xafd8>  // b.none
  4680e4:	ldr	x0, [sp, #32]
  4680e8:	ldrb	w0, [x0, #8]
  4680ec:	cmp	w0, #0x2
  4680f0:	b.ne	468104 <_obstack_memory_used@@Base+0xafc4>  // b.any
  4680f4:	ldr	x0, [sp, #16]
  4680f8:	mov	w1, #0x9                   	// #9
  4680fc:	str	w1, [x0]
  468100:	b	468110 <_obstack_memory_used@@Base+0xafd0>
  468104:	ldr	x0, [sp, #16]
  468108:	mov	w1, #0xa                   	// #10
  46810c:	str	w1, [x0]
  468110:	mov	x0, #0x0                   	// #0
  468114:	b	468588 <_obstack_memory_used@@Base+0xb448>
  468118:	ldr	x0, [sp, #48]
  46811c:	ldr	x1, [sp, #96]
  468120:	str	x1, [x0, #72]
  468124:	ldr	x2, [sp, #32]
  468128:	ldp	x0, x1, [sp, #72]
  46812c:	stp	x0, x1, [x2]
  468130:	ldr	x0, [sp, #32]
  468134:	mov	w1, #0x1                   	// #1
  468138:	strb	w1, [x0, #8]
  46813c:	ldr	x0, [sp, #56]
  468140:	b	468588 <_obstack_memory_used@@Base+0xb448>
  468144:	ldr	x0, [sp, #104]
  468148:	cmn	x0, #0x1
  46814c:	cset	w0, ne  // ne = any
  468150:	and	w0, w0, #0xff
  468154:	and	x0, x0, #0xff
  468158:	cmp	x0, #0x0
  46815c:	b.eq	468188 <_obstack_memory_used@@Base+0xb048>  // b.none
  468160:	ldr	x1, [sp, #112]
  468164:	ldr	x0, [sp, #104]
  468168:	cmp	x1, x0
  46816c:	cset	w0, gt
  468170:	and	w0, w0, #0xff
  468174:	and	x0, x0, #0xff
  468178:	cmp	x0, #0x0
  46817c:	b.eq	468188 <_obstack_memory_used@@Base+0xb048>  // b.none
  468180:	mov	w0, #0x1                   	// #1
  468184:	b	46818c <_obstack_memory_used@@Base+0xb04c>
  468188:	mov	w0, #0x0                   	// #0
  46818c:	cmp	w0, #0x0
  468190:	b.ne	4681b4 <_obstack_memory_used@@Base+0xb074>  // b.any
  468194:	ldr	x0, [sp, #32]
  468198:	ldrb	w0, [x0, #8]
  46819c:	cmp	w0, #0x18
  4681a0:	cset	w0, ne  // ne = any
  4681a4:	and	w0, w0, #0xff
  4681a8:	and	x0, x0, #0xff
  4681ac:	cmp	x0, #0x0
  4681b0:	b.eq	4681c8 <_obstack_memory_used@@Base+0xb088>  // b.none
  4681b4:	ldr	x0, [sp, #16]
  4681b8:	mov	w1, #0xa                   	// #10
  4681bc:	str	w1, [x0]
  4681c0:	mov	x0, #0x0                   	// #0
  4681c4:	b	468588 <_obstack_memory_used@@Base+0xb448>
  4681c8:	ldr	x0, [sp, #104]
  4681cc:	cmn	x0, #0x1
  4681d0:	b.ne	4681f0 <_obstack_memory_used@@Base+0xb0b0>  // b.any
  4681d4:	ldr	x1, [sp, #112]
  4681d8:	mov	x0, #0x7fff                	// #32767
  4681dc:	cmp	x1, x0
  4681e0:	cset	w0, gt
  4681e4:	and	w0, w0, #0xff
  4681e8:	sxtw	x0, w0
  4681ec:	b	468208 <_obstack_memory_used@@Base+0xb0c8>
  4681f0:	ldr	x1, [sp, #104]
  4681f4:	mov	x0, #0x7fff                	// #32767
  4681f8:	cmp	x1, x0
  4681fc:	cset	w0, gt
  468200:	and	w0, w0, #0xff
  468204:	sxtw	x0, w0
  468208:	cmp	x0, #0x0
  46820c:	b.eq	468260 <_obstack_memory_used@@Base+0xb120>  // b.none
  468210:	ldr	x0, [sp, #16]
  468214:	mov	w1, #0xf                   	// #15
  468218:	str	w1, [x0]
  46821c:	mov	x0, #0x0                   	// #0
  468220:	b	468588 <_obstack_memory_used@@Base+0xb448>
  468224:	ldr	x0, [sp, #32]
  468228:	ldrb	w0, [x0, #8]
  46822c:	cmp	w0, #0x12
  468230:	cset	w0, eq  // eq = none
  468234:	and	w0, w0, #0xff
  468238:	and	x0, x0, #0xff
  46823c:	str	x0, [sp, #112]
  468240:	ldr	x0, [sp, #32]
  468244:	ldrb	w0, [x0, #8]
  468248:	cmp	w0, #0x13
  46824c:	b.ne	468258 <_obstack_memory_used@@Base+0xb118>  // b.any
  468250:	mov	x0, #0x1                   	// #1
  468254:	b	46825c <_obstack_memory_used@@Base+0xb11c>
  468258:	mov	x0, #0xffffffffffffffff    	// #-1
  46825c:	str	x0, [sp, #104]
  468260:	ldr	x2, [sp, #24]
  468264:	ldr	x1, [sp, #48]
  468268:	ldr	x0, [sp, #32]
  46826c:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  468270:	ldr	x0, [sp, #56]
  468274:	cmp	x0, #0x0
  468278:	cset	w0, eq  // eq = none
  46827c:	and	w0, w0, #0xff
  468280:	and	x0, x0, #0xff
  468284:	cmp	x0, #0x0
  468288:	b.eq	468294 <_obstack_memory_used@@Base+0xb154>  // b.none
  46828c:	mov	x0, #0x0                   	// #0
  468290:	b	468588 <_obstack_memory_used@@Base+0xb448>
  468294:	ldr	x0, [sp, #112]
  468298:	cmp	x0, #0x0
  46829c:	cset	w0, eq  // eq = none
  4682a0:	and	w0, w0, #0xff
  4682a4:	and	x0, x0, #0xff
  4682a8:	cmp	x0, #0x0
  4682ac:	b.eq	4682e8 <_obstack_memory_used@@Base+0xb1a8>  // b.none
  4682b0:	ldr	x0, [sp, #104]
  4682b4:	cmp	x0, #0x0
  4682b8:	cset	w0, eq  // eq = none
  4682bc:	and	w0, w0, #0xff
  4682c0:	and	x0, x0, #0xff
  4682c4:	cmp	x0, #0x0
  4682c8:	b.eq	4682e8 <_obstack_memory_used@@Base+0xb1a8>  // b.none
  4682cc:	mov	x2, #0x0                   	// #0
  4682d0:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  4682d4:	add	x1, x0, #0xaf4
  4682d8:	ldr	x0, [sp, #56]
  4682dc:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  4682e0:	mov	x0, #0x0                   	// #0
  4682e4:	b	468588 <_obstack_memory_used@@Base+0xb448>
  4682e8:	ldr	x0, [sp, #112]
  4682ec:	cmp	x0, #0x0
  4682f0:	cset	w0, gt
  4682f4:	and	w0, w0, #0xff
  4682f8:	and	x0, x0, #0xff
  4682fc:	cmp	x0, #0x0
  468300:	b.eq	4683e4 <_obstack_memory_used@@Base+0xb2a4>  // b.none
  468304:	ldr	x0, [sp, #56]
  468308:	str	x0, [sp, #136]
  46830c:	mov	x0, #0x2                   	// #2
  468310:	str	x0, [sp, #120]
  468314:	b	468384 <_obstack_memory_used@@Base+0xb244>
  468318:	ldr	x1, [sp, #40]
  46831c:	ldr	x0, [sp, #56]
  468320:	bl	46ab1c <_obstack_memory_used@@Base+0xd9dc>
  468324:	str	x0, [sp, #56]
  468328:	mov	w3, #0x10                  	// #16
  46832c:	ldr	x2, [sp, #56]
  468330:	ldr	x1, [sp, #136]
  468334:	ldr	x0, [sp, #40]
  468338:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  46833c:	str	x0, [sp, #136]
  468340:	ldr	x0, [sp, #56]
  468344:	cmp	x0, #0x0
  468348:	cset	w0, eq  // eq = none
  46834c:	and	w0, w0, #0xff
  468350:	and	x0, x0, #0xff
  468354:	cmp	x0, #0x0
  468358:	b.ne	468554 <_obstack_memory_used@@Base+0xb414>  // b.any
  46835c:	ldr	x0, [sp, #136]
  468360:	cmp	x0, #0x0
  468364:	cset	w0, eq  // eq = none
  468368:	and	w0, w0, #0xff
  46836c:	and	x0, x0, #0xff
  468370:	cmp	x0, #0x0
  468374:	b.ne	468554 <_obstack_memory_used@@Base+0xb414>  // b.any
  468378:	ldr	x0, [sp, #120]
  46837c:	add	x0, x0, #0x1
  468380:	str	x0, [sp, #120]
  468384:	ldr	x1, [sp, #120]
  468388:	ldr	x0, [sp, #112]
  46838c:	cmp	x1, x0
  468390:	b.le	468318 <_obstack_memory_used@@Base+0xb1d8>
  468394:	ldr	x1, [sp, #112]
  468398:	ldr	x0, [sp, #104]
  46839c:	cmp	x1, x0
  4683a0:	b.ne	4683ac <_obstack_memory_used@@Base+0xb26c>  // b.any
  4683a4:	ldr	x0, [sp, #136]
  4683a8:	b	468588 <_obstack_memory_used@@Base+0xb448>
  4683ac:	ldr	x1, [sp, #40]
  4683b0:	ldr	x0, [sp, #56]
  4683b4:	bl	46ab1c <_obstack_memory_used@@Base+0xd9dc>
  4683b8:	str	x0, [sp, #56]
  4683bc:	ldr	x0, [sp, #56]
  4683c0:	cmp	x0, #0x0
  4683c4:	cset	w0, eq  // eq = none
  4683c8:	and	w0, w0, #0xff
  4683cc:	and	x0, x0, #0xff
  4683d0:	cmp	x0, #0x0
  4683d4:	b.ne	46855c <_obstack_memory_used@@Base+0xb41c>  // b.any
  4683d8:	ldr	x0, [sp, #136]
  4683dc:	str	x0, [sp, #128]
  4683e0:	b	4683e8 <_obstack_memory_used@@Base+0xb2a8>
  4683e4:	str	xzr, [sp, #128]
  4683e8:	ldr	x0, [sp, #56]
  4683ec:	ldrb	w0, [x0, #48]
  4683f0:	cmp	w0, #0x11
  4683f4:	b.ne	46841c <_obstack_memory_used@@Base+0xb2dc>  // b.any
  4683f8:	ldr	x0, [sp, #56]
  4683fc:	ldr	x0, [x0, #40]
  468400:	str	x0, [sp, #88]
  468404:	ldr	x0, [sp, #88]
  468408:	mov	x2, x0
  46840c:	adrp	x0, 46a000 <_obstack_memory_used@@Base+0xcec0>
  468410:	add	x1, x0, #0xa1c
  468414:	ldr	x0, [sp, #56]
  468418:	bl	46473c <_obstack_memory_used@@Base+0x75fc>
  46841c:	ldr	x0, [sp, #104]
  468420:	cmn	x0, #0x1
  468424:	b.ne	468430 <_obstack_memory_used@@Base+0xb2f0>  // b.any
  468428:	mov	w0, #0xb                   	// #11
  46842c:	b	468434 <_obstack_memory_used@@Base+0xb2f4>
  468430:	mov	w0, #0xa                   	// #10
  468434:	mov	w3, w0
  468438:	mov	x2, #0x0                   	// #0
  46843c:	ldr	x1, [sp, #56]
  468440:	ldr	x0, [sp, #40]
  468444:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  468448:	str	x0, [sp, #136]
  46844c:	ldr	x0, [sp, #136]
  468450:	cmp	x0, #0x0
  468454:	cset	w0, eq  // eq = none
  468458:	and	w0, w0, #0xff
  46845c:	and	x0, x0, #0xff
  468460:	cmp	x0, #0x0
  468464:	b.ne	468564 <_obstack_memory_used@@Base+0xb424>  // b.any
  468468:	ldr	x0, [sp, #112]
  46846c:	add	x0, x0, #0x2
  468470:	str	x0, [sp, #120]
  468474:	b	468518 <_obstack_memory_used@@Base+0xb3d8>
  468478:	ldr	x1, [sp, #40]
  46847c:	ldr	x0, [sp, #56]
  468480:	bl	46ab1c <_obstack_memory_used@@Base+0xd9dc>
  468484:	str	x0, [sp, #56]
  468488:	mov	w3, #0x10                  	// #16
  46848c:	ldr	x2, [sp, #56]
  468490:	ldr	x1, [sp, #136]
  468494:	ldr	x0, [sp, #40]
  468498:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  46849c:	str	x0, [sp, #136]
  4684a0:	ldr	x0, [sp, #56]
  4684a4:	cmp	x0, #0x0
  4684a8:	cset	w0, eq  // eq = none
  4684ac:	and	w0, w0, #0xff
  4684b0:	and	x0, x0, #0xff
  4684b4:	cmp	x0, #0x0
  4684b8:	b.ne	46856c <_obstack_memory_used@@Base+0xb42c>  // b.any
  4684bc:	ldr	x0, [sp, #136]
  4684c0:	cmp	x0, #0x0
  4684c4:	cset	w0, eq  // eq = none
  4684c8:	and	w0, w0, #0xff
  4684cc:	and	x0, x0, #0xff
  4684d0:	cmp	x0, #0x0
  4684d4:	b.ne	46856c <_obstack_memory_used@@Base+0xb42c>  // b.any
  4684d8:	mov	w3, #0xa                   	// #10
  4684dc:	mov	x2, #0x0                   	// #0
  4684e0:	ldr	x1, [sp, #136]
  4684e4:	ldr	x0, [sp, #40]
  4684e8:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  4684ec:	str	x0, [sp, #136]
  4684f0:	ldr	x0, [sp, #136]
  4684f4:	cmp	x0, #0x0
  4684f8:	cset	w0, eq  // eq = none
  4684fc:	and	w0, w0, #0xff
  468500:	and	x0, x0, #0xff
  468504:	cmp	x0, #0x0
  468508:	b.ne	468574 <_obstack_memory_used@@Base+0xb434>  // b.any
  46850c:	ldr	x0, [sp, #120]
  468510:	add	x0, x0, #0x1
  468514:	str	x0, [sp, #120]
  468518:	ldr	x1, [sp, #120]
  46851c:	ldr	x0, [sp, #104]
  468520:	cmp	x1, x0
  468524:	b.le	468478 <_obstack_memory_used@@Base+0xb338>
  468528:	ldr	x0, [sp, #128]
  46852c:	cmp	x0, #0x0
  468530:	b.eq	46854c <_obstack_memory_used@@Base+0xb40c>  // b.none
  468534:	mov	w3, #0x10                  	// #16
  468538:	ldr	x2, [sp, #136]
  46853c:	ldr	x1, [sp, #128]
  468540:	ldr	x0, [sp, #40]
  468544:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  468548:	str	x0, [sp, #136]
  46854c:	ldr	x0, [sp, #136]
  468550:	b	468588 <_obstack_memory_used@@Base+0xb448>
  468554:	nop
  468558:	b	468578 <_obstack_memory_used@@Base+0xb438>
  46855c:	nop
  468560:	b	468578 <_obstack_memory_used@@Base+0xb438>
  468564:	nop
  468568:	b	468578 <_obstack_memory_used@@Base+0xb438>
  46856c:	nop
  468570:	b	468578 <_obstack_memory_used@@Base+0xb438>
  468574:	nop
  468578:	ldr	x0, [sp, #16]
  46857c:	mov	w1, #0xc                   	// #12
  468580:	str	w1, [x0]
  468584:	mov	x0, #0x0                   	// #0
  468588:	ldp	x29, x30, [sp], #144
  46858c:	ret
  468590:	stp	x29, x30, [sp, #-32]!
  468594:	mov	x29, sp
  468598:	strb	w0, [sp, #31]
  46859c:	str	x1, [sp, #16]
  4685a0:	ldr	x0, [sp, #16]
  4685a4:	cmp	x0, #0x0
  4685a8:	b.ne	4685b4 <_obstack_memory_used@@Base+0xb474>  // b.any
  4685ac:	ldrb	w0, [sp, #31]
  4685b0:	b	4685bc <_obstack_memory_used@@Base+0xb47c>
  4685b4:	ldrb	w0, [sp, #31]
  4685b8:	bl	4046f0 <btowc@plt>
  4685bc:	ldp	x29, x30, [sp], #32
  4685c0:	ret
  4685c4:	stp	x29, x30, [sp, #-112]!
  4685c8:	mov	x29, sp
  4685cc:	str	x0, [sp, #56]
  4685d0:	str	x1, [sp, #48]
  4685d4:	str	x2, [sp, #40]
  4685d8:	str	x3, [sp, #32]
  4685dc:	str	x4, [sp, #24]
  4685e0:	str	x5, [sp, #16]
  4685e4:	ldr	x0, [sp, #24]
  4685e8:	ldr	w0, [x0]
  4685ec:	cmp	w0, #0x2
  4685f0:	cset	w0, eq  // eq = none
  4685f4:	and	w0, w0, #0xff
  4685f8:	and	x0, x0, #0xff
  4685fc:	cmp	x0, #0x0
  468600:	b.ne	468624 <_obstack_memory_used@@Base+0xb4e4>  // b.any
  468604:	ldr	x0, [sp, #24]
  468608:	ldr	w0, [x0]
  46860c:	cmp	w0, #0x4
  468610:	cset	w0, eq  // eq = none
  468614:	and	w0, w0, #0xff
  468618:	and	x0, x0, #0xff
  46861c:	cmp	x0, #0x0
  468620:	b.eq	46862c <_obstack_memory_used@@Base+0xb4ec>  // b.none
  468624:	mov	w0, #0x1                   	// #1
  468628:	b	468630 <_obstack_memory_used@@Base+0xb4f0>
  46862c:	mov	w0, #0x0                   	// #0
  468630:	cmp	w0, #0x0
  468634:	b.ne	468658 <_obstack_memory_used@@Base+0xb518>  // b.any
  468638:	ldr	x0, [sp, #16]
  46863c:	ldr	w0, [x0]
  468640:	cmp	w0, #0x2
  468644:	cset	w0, eq  // eq = none
  468648:	and	w0, w0, #0xff
  46864c:	and	x0, x0, #0xff
  468650:	cmp	x0, #0x0
  468654:	b.eq	468660 <_obstack_memory_used@@Base+0xb520>  // b.none
  468658:	mov	w0, #0x1                   	// #1
  46865c:	b	468664 <_obstack_memory_used@@Base+0xb524>
  468660:	mov	w0, #0x0                   	// #0
  468664:	cmp	w0, #0x0
  468668:	b.ne	46868c <_obstack_memory_used@@Base+0xb54c>  // b.any
  46866c:	ldr	x0, [sp, #16]
  468670:	ldr	w0, [x0]
  468674:	cmp	w0, #0x4
  468678:	cset	w0, eq  // eq = none
  46867c:	and	w0, w0, #0xff
  468680:	and	x0, x0, #0xff
  468684:	cmp	x0, #0x0
  468688:	b.eq	468694 <_obstack_memory_used@@Base+0xb554>  // b.none
  46868c:	mov	w0, #0xb                   	// #11
  468690:	b	468a58 <_obstack_memory_used@@Base+0xb918>
  468694:	ldr	x0, [sp, #24]
  468698:	ldr	w0, [x0]
  46869c:	cmp	w0, #0x3
  4686a0:	cset	w0, eq  // eq = none
  4686a4:	and	w0, w0, #0xff
  4686a8:	and	x0, x0, #0xff
  4686ac:	cmp	x0, #0x0
  4686b0:	b.eq	4686e0 <_obstack_memory_used@@Base+0xb5a0>  // b.none
  4686b4:	ldr	x0, [sp, #24]
  4686b8:	ldr	x0, [x0, #8]
  4686bc:	bl	4040b0 <strlen@plt>
  4686c0:	cmp	x0, #0x1
  4686c4:	cset	w0, hi  // hi = pmore
  4686c8:	and	w0, w0, #0xff
  4686cc:	and	x0, x0, #0xff
  4686d0:	cmp	x0, #0x0
  4686d4:	b.eq	4686e0 <_obstack_memory_used@@Base+0xb5a0>  // b.none
  4686d8:	mov	w0, #0x1                   	// #1
  4686dc:	b	4686e4 <_obstack_memory_used@@Base+0xb5a4>
  4686e0:	mov	w0, #0x0                   	// #0
  4686e4:	cmp	w0, #0x0
  4686e8:	b.ne	468744 <_obstack_memory_used@@Base+0xb604>  // b.any
  4686ec:	ldr	x0, [sp, #16]
  4686f0:	ldr	w0, [x0]
  4686f4:	cmp	w0, #0x3
  4686f8:	cset	w0, eq  // eq = none
  4686fc:	and	w0, w0, #0xff
  468700:	and	x0, x0, #0xff
  468704:	cmp	x0, #0x0
  468708:	b.eq	468738 <_obstack_memory_used@@Base+0xb5f8>  // b.none
  46870c:	ldr	x0, [sp, #16]
  468710:	ldr	x0, [x0, #8]
  468714:	bl	4040b0 <strlen@plt>
  468718:	cmp	x0, #0x1
  46871c:	cset	w0, hi  // hi = pmore
  468720:	and	w0, w0, #0xff
  468724:	and	x0, x0, #0xff
  468728:	cmp	x0, #0x0
  46872c:	b.eq	468738 <_obstack_memory_used@@Base+0xb5f8>  // b.none
  468730:	mov	w0, #0x1                   	// #1
  468734:	b	46873c <_obstack_memory_used@@Base+0xb5fc>
  468738:	mov	w0, #0x0                   	// #0
  46873c:	cmp	w0, #0x0
  468740:	b.eq	46874c <_obstack_memory_used@@Base+0xb60c>  // b.none
  468744:	mov	w0, #0x3                   	// #3
  468748:	b	468a58 <_obstack_memory_used@@Base+0xb918>
  46874c:	ldr	x0, [sp, #24]
  468750:	ldr	w0, [x0]
  468754:	cmp	w0, #0x0
  468758:	b.ne	468768 <_obstack_memory_used@@Base+0xb628>  // b.any
  46875c:	ldr	x0, [sp, #24]
  468760:	ldrb	w0, [x0, #8]
  468764:	b	46878c <_obstack_memory_used@@Base+0xb64c>
  468768:	ldr	x0, [sp, #24]
  46876c:	ldr	w0, [x0]
  468770:	cmp	w0, #0x3
  468774:	b.ne	468788 <_obstack_memory_used@@Base+0xb648>  // b.any
  468778:	ldr	x0, [sp, #24]
  46877c:	ldr	x0, [x0, #8]
  468780:	ldrb	w0, [x0]
  468784:	b	46878c <_obstack_memory_used@@Base+0xb64c>
  468788:	mov	w0, #0x0                   	// #0
  46878c:	str	w0, [sp, #104]
  468790:	ldr	x0, [sp, #16]
  468794:	ldr	w0, [x0]
  468798:	cmp	w0, #0x0
  46879c:	b.ne	4687ac <_obstack_memory_used@@Base+0xb66c>  // b.any
  4687a0:	ldr	x0, [sp, #16]
  4687a4:	ldrb	w0, [x0, #8]
  4687a8:	b	4687d0 <_obstack_memory_used@@Base+0xb690>
  4687ac:	ldr	x0, [sp, #16]
  4687b0:	ldr	w0, [x0]
  4687b4:	cmp	w0, #0x3
  4687b8:	b.ne	4687cc <_obstack_memory_used@@Base+0xb68c>  // b.any
  4687bc:	ldr	x0, [sp, #16]
  4687c0:	ldr	x0, [x0, #8]
  4687c4:	ldrb	w0, [x0]
  4687c8:	b	4687d0 <_obstack_memory_used@@Base+0xb690>
  4687cc:	mov	w0, #0x0                   	// #0
  4687d0:	str	w0, [sp, #100]
  4687d4:	ldr	x0, [sp, #24]
  4687d8:	ldr	w0, [x0]
  4687dc:	cmp	w0, #0x0
  4687e0:	b.eq	4687f4 <_obstack_memory_used@@Base+0xb6b4>  // b.none
  4687e4:	ldr	x0, [sp, #24]
  4687e8:	ldr	w0, [x0]
  4687ec:	cmp	w0, #0x3
  4687f0:	b.ne	468808 <_obstack_memory_used@@Base+0xb6c8>  // b.any
  4687f4:	ldr	w0, [sp, #104]
  4687f8:	and	w0, w0, #0xff
  4687fc:	ldr	x1, [sp, #40]
  468800:	bl	468590 <_obstack_memory_used@@Base+0xb450>
  468804:	b	468810 <_obstack_memory_used@@Base+0xb6d0>
  468808:	ldr	x0, [sp, #24]
  46880c:	ldr	w0, [x0, #8]
  468810:	str	w0, [sp, #96]
  468814:	ldr	x0, [sp, #16]
  468818:	ldr	w0, [x0]
  46881c:	cmp	w0, #0x0
  468820:	b.eq	468834 <_obstack_memory_used@@Base+0xb6f4>  // b.none
  468824:	ldr	x0, [sp, #16]
  468828:	ldr	w0, [x0]
  46882c:	cmp	w0, #0x3
  468830:	b.ne	468848 <_obstack_memory_used@@Base+0xb708>  // b.any
  468834:	ldr	w0, [sp, #100]
  468838:	and	w0, w0, #0xff
  46883c:	ldr	x1, [sp, #40]
  468840:	bl	468590 <_obstack_memory_used@@Base+0xb450>
  468844:	b	468850 <_obstack_memory_used@@Base+0xb710>
  468848:	ldr	x0, [sp, #16]
  46884c:	ldr	w0, [x0, #8]
  468850:	str	w0, [sp, #92]
  468854:	ldr	w0, [sp, #96]
  468858:	cmn	w0, #0x1
  46885c:	b.eq	46886c <_obstack_memory_used@@Base+0xb72c>  // b.none
  468860:	ldr	w0, [sp, #92]
  468864:	cmn	w0, #0x1
  468868:	b.ne	468874 <_obstack_memory_used@@Base+0xb734>  // b.any
  46886c:	mov	w0, #0x3                   	// #3
  468870:	b	468a58 <_obstack_memory_used@@Base+0xb918>
  468874:	ldr	x0, [sp, #56]
  468878:	and	x0, x0, #0x10000
  46887c:	cmp	x0, #0x0
  468880:	cset	w0, ne  // ne = any
  468884:	and	w0, w0, #0xff
  468888:	and	x0, x0, #0xff
  46888c:	cmp	x0, #0x0
  468890:	b.eq	4688bc <_obstack_memory_used@@Base+0xb77c>  // b.none
  468894:	ldr	w1, [sp, #96]
  468898:	ldr	w0, [sp, #92]
  46889c:	cmp	w1, w0
  4688a0:	cset	w0, hi  // hi = pmore
  4688a4:	and	w0, w0, #0xff
  4688a8:	and	x0, x0, #0xff
  4688ac:	cmp	x0, #0x0
  4688b0:	b.eq	4688bc <_obstack_memory_used@@Base+0xb77c>  // b.none
  4688b4:	mov	w0, #0xb                   	// #11
  4688b8:	b	468a58 <_obstack_memory_used@@Base+0xb918>
  4688bc:	ldr	x0, [sp, #40]
  4688c0:	cmp	x0, #0x0
  4688c4:	b.eq	468a04 <_obstack_memory_used@@Base+0xb8c4>  // b.none
  4688c8:	ldr	x0, [sp, #32]
  4688cc:	ldr	x1, [x0]
  4688d0:	ldr	x0, [sp, #40]
  4688d4:	ldr	x0, [x0, #64]
  4688d8:	cmp	x1, x0
  4688dc:	cset	w0, eq  // eq = none
  4688e0:	and	w0, w0, #0xff
  4688e4:	and	x0, x0, #0xff
  4688e8:	cmp	x0, #0x0
  4688ec:	b.eq	4689b8 <_obstack_memory_used@@Base+0xb878>  // b.none
  4688f0:	ldr	x0, [sp, #40]
  4688f4:	ldr	x0, [x0, #64]
  4688f8:	lsl	x0, x0, #1
  4688fc:	add	x0, x0, #0x1
  468900:	str	x0, [sp, #80]
  468904:	ldr	x0, [sp, #40]
  468908:	ldr	x2, [x0, #8]
  46890c:	ldr	x0, [sp, #80]
  468910:	lsl	x0, x0, #2
  468914:	mov	x1, x0
  468918:	mov	x0, x2
  46891c:	bl	4045e0 <realloc@plt>
  468920:	str	x0, [sp, #72]
  468924:	ldr	x0, [sp, #40]
  468928:	ldr	x2, [x0, #16]
  46892c:	ldr	x0, [sp, #80]
  468930:	lsl	x0, x0, #2
  468934:	mov	x1, x0
  468938:	mov	x0, x2
  46893c:	bl	4045e0 <realloc@plt>
  468940:	str	x0, [sp, #64]
  468944:	ldr	x0, [sp, #72]
  468948:	cmp	x0, #0x0
  46894c:	cset	w0, eq  // eq = none
  468950:	and	w0, w0, #0xff
  468954:	and	x0, x0, #0xff
  468958:	cmp	x0, #0x0
  46895c:	b.ne	46897c <_obstack_memory_used@@Base+0xb83c>  // b.any
  468960:	ldr	x0, [sp, #64]
  468964:	cmp	x0, #0x0
  468968:	cset	w0, eq  // eq = none
  46896c:	and	w0, w0, #0xff
  468970:	and	x0, x0, #0xff
  468974:	cmp	x0, #0x0
  468978:	b.eq	468994 <_obstack_memory_used@@Base+0xb854>  // b.none
  46897c:	ldr	x0, [sp, #72]
  468980:	bl	404880 <free@plt>
  468984:	ldr	x0, [sp, #64]
  468988:	bl	404880 <free@plt>
  46898c:	mov	w0, #0xc                   	// #12
  468990:	b	468a58 <_obstack_memory_used@@Base+0xb918>
  468994:	ldr	x0, [sp, #40]
  468998:	ldr	x1, [sp, #72]
  46899c:	str	x1, [x0, #8]
  4689a0:	ldr	x0, [sp, #40]
  4689a4:	ldr	x1, [sp, #64]
  4689a8:	str	x1, [x0, #16]
  4689ac:	ldr	x0, [sp, #32]
  4689b0:	ldr	x1, [sp, #80]
  4689b4:	str	x1, [x0]
  4689b8:	ldr	x0, [sp, #40]
  4689bc:	ldr	x1, [x0, #8]
  4689c0:	ldr	x0, [sp, #40]
  4689c4:	ldr	x0, [x0, #64]
  4689c8:	lsl	x0, x0, #2
  4689cc:	add	x0, x1, x0
  4689d0:	ldr	w1, [sp, #96]
  4689d4:	str	w1, [x0]
  4689d8:	ldr	x0, [sp, #40]
  4689dc:	ldr	x1, [x0, #16]
  4689e0:	ldr	x0, [sp, #40]
  4689e4:	ldr	x0, [x0, #64]
  4689e8:	add	x3, x0, #0x1
  4689ec:	ldr	x2, [sp, #40]
  4689f0:	str	x3, [x2, #64]
  4689f4:	lsl	x0, x0, #2
  4689f8:	add	x0, x1, x0
  4689fc:	ldr	w1, [sp, #92]
  468a00:	str	w1, [x0]
  468a04:	str	wzr, [sp, #108]
  468a08:	b	468a48 <_obstack_memory_used@@Base+0xb908>
  468a0c:	ldr	w1, [sp, #96]
  468a10:	ldr	w0, [sp, #108]
  468a14:	cmp	w1, w0
  468a18:	b.hi	468a3c <_obstack_memory_used@@Base+0xb8fc>  // b.pmore
  468a1c:	ldr	w1, [sp, #108]
  468a20:	ldr	w0, [sp, #92]
  468a24:	cmp	w1, w0
  468a28:	b.hi	468a3c <_obstack_memory_used@@Base+0xb8fc>  // b.pmore
  468a2c:	ldr	w0, [sp, #108]
  468a30:	mov	x1, x0
  468a34:	ldr	x0, [sp, #48]
  468a38:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  468a3c:	ldr	w0, [sp, #108]
  468a40:	add	w0, w0, #0x1
  468a44:	str	w0, [sp, #108]
  468a48:	ldr	w0, [sp, #108]
  468a4c:	cmp	w0, #0xff
  468a50:	b.ls	468a0c <_obstack_memory_used@@Base+0xb8cc>  // b.plast
  468a54:	mov	w0, #0x0                   	// #0
  468a58:	ldp	x29, x30, [sp], #112
  468a5c:	ret
  468a60:	stp	x29, x30, [sp, #-64]!
  468a64:	mov	x29, sp
  468a68:	str	x0, [sp, #40]
  468a6c:	str	x1, [sp, #32]
  468a70:	str	x2, [sp, #24]
  468a74:	str	x3, [sp, #16]
  468a78:	ldr	x0, [sp, #16]
  468a7c:	bl	4040b0 <strlen@plt>
  468a80:	str	x0, [sp, #56]
  468a84:	ldr	x0, [sp, #56]
  468a88:	cmp	x0, #0x1
  468a8c:	cset	w0, ne  // ne = any
  468a90:	and	w0, w0, #0xff
  468a94:	and	x0, x0, #0xff
  468a98:	cmp	x0, #0x0
  468a9c:	b.eq	468aa8 <_obstack_memory_used@@Base+0xb968>  // b.none
  468aa0:	mov	w0, #0x3                   	// #3
  468aa4:	b	468ac4 <_obstack_memory_used@@Base+0xb984>
  468aa8:	ldr	x0, [sp, #16]
  468aac:	ldrb	w0, [x0]
  468ab0:	and	x0, x0, #0xff
  468ab4:	mov	x1, x0
  468ab8:	ldr	x0, [sp, #40]
  468abc:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  468ac0:	mov	w0, #0x0                   	// #0
  468ac4:	ldp	x29, x30, [sp], #64
  468ac8:	ret
  468acc:	stp	x29, x30, [sp, #-320]!
  468ad0:	mov	x29, sp
  468ad4:	str	x0, [sp, #56]
  468ad8:	str	x1, [sp, #48]
  468adc:	str	x2, [sp, #40]
  468ae0:	str	x3, [sp, #32]
  468ae4:	str	x4, [sp, #24]
  468ae8:	str	xzr, [sp, #208]
  468aec:	str	xzr, [sp, #200]
  468af0:	str	xzr, [sp, #312]
  468af4:	str	xzr, [sp, #192]
  468af8:	str	xzr, [sp, #184]
  468afc:	strb	wzr, [sp, #311]
  468b00:	mov	w0, #0x1                   	// #1
  468b04:	strb	w0, [sp, #291]
  468b08:	mov	x1, #0x1                   	// #1
  468b0c:	mov	x0, #0x20                  	// #32
  468b10:	bl	404560 <calloc@plt>
  468b14:	str	x0, [sp, #264]
  468b18:	mov	x1, #0x1                   	// #1
  468b1c:	mov	x0, #0x50                  	// #80
  468b20:	bl	404560 <calloc@plt>
  468b24:	str	x0, [sp, #256]
  468b28:	ldr	x0, [sp, #264]
  468b2c:	cmp	x0, #0x0
  468b30:	cset	w0, eq  // eq = none
  468b34:	and	w0, w0, #0xff
  468b38:	and	x0, x0, #0xff
  468b3c:	cmp	x0, #0x0
  468b40:	b.ne	468b60 <_obstack_memory_used@@Base+0xba20>  // b.any
  468b44:	ldr	x0, [sp, #256]
  468b48:	cmp	x0, #0x0
  468b4c:	cset	w0, eq  // eq = none
  468b50:	and	w0, w0, #0xff
  468b54:	and	x0, x0, #0xff
  468b58:	cmp	x0, #0x0
  468b5c:	b.eq	468b84 <_obstack_memory_used@@Base+0xba44>  // b.none
  468b60:	ldr	x0, [sp, #264]
  468b64:	bl	404880 <free@plt>
  468b68:	ldr	x0, [sp, #256]
  468b6c:	bl	404880 <free@plt>
  468b70:	ldr	x0, [sp, #24]
  468b74:	mov	w1, #0xc                   	// #12
  468b78:	str	w1, [x0]
  468b7c:	mov	x0, #0x0                   	// #0
  468b80:	b	469408 <_obstack_memory_used@@Base+0xc2c8>
  468b84:	ldr	x2, [sp, #32]
  468b88:	ldr	x1, [sp, #56]
  468b8c:	ldr	x0, [sp, #40]
  468b90:	bl	466b8c <_obstack_memory_used@@Base+0x9a4c>
  468b94:	str	w0, [sp, #292]
  468b98:	ldr	x0, [sp, #40]
  468b9c:	ldrb	w0, [x0, #8]
  468ba0:	cmp	w0, #0x2
  468ba4:	cset	w0, eq  // eq = none
  468ba8:	and	w0, w0, #0xff
  468bac:	and	x0, x0, #0xff
  468bb0:	cmp	x0, #0x0
  468bb4:	b.eq	468bc8 <_obstack_memory_used@@Base+0xba88>  // b.none
  468bb8:	ldr	x0, [sp, #24]
  468bbc:	mov	w1, #0x2                   	// #2
  468bc0:	str	w1, [x0]
  468bc4:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468bc8:	ldr	x0, [sp, #40]
  468bcc:	ldrb	w0, [x0, #8]
  468bd0:	cmp	w0, #0x19
  468bd4:	b.ne	468c68 <_obstack_memory_used@@Base+0xbb28>  // b.any
  468bd8:	ldr	x0, [sp, #256]
  468bdc:	ldrb	w1, [x0, #32]
  468be0:	orr	w1, w1, #0x1
  468be4:	strb	w1, [x0, #32]
  468be8:	mov	w0, #0x1                   	// #1
  468bec:	strb	w0, [sp, #311]
  468bf0:	ldr	x0, [sp, #32]
  468bf4:	and	x0, x0, #0x100
  468bf8:	cmp	x0, #0x0
  468bfc:	b.eq	468c0c <_obstack_memory_used@@Base+0xbacc>  // b.none
  468c00:	mov	x1, #0xa                   	// #10
  468c04:	ldr	x0, [sp, #264]
  468c08:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  468c0c:	ldr	x0, [sp, #56]
  468c10:	ldr	x1, [x0, #72]
  468c14:	ldrsw	x0, [sp, #292]
  468c18:	add	x1, x1, x0
  468c1c:	ldr	x0, [sp, #56]
  468c20:	str	x1, [x0, #72]
  468c24:	ldr	x2, [sp, #32]
  468c28:	ldr	x1, [sp, #56]
  468c2c:	ldr	x0, [sp, #40]
  468c30:	bl	466b8c <_obstack_memory_used@@Base+0x9a4c>
  468c34:	str	w0, [sp, #292]
  468c38:	ldr	x0, [sp, #40]
  468c3c:	ldrb	w0, [x0, #8]
  468c40:	cmp	w0, #0x2
  468c44:	cset	w0, eq  // eq = none
  468c48:	and	w0, w0, #0xff
  468c4c:	and	x0, x0, #0xff
  468c50:	cmp	x0, #0x0
  468c54:	b.eq	468c68 <_obstack_memory_used@@Base+0xbb28>  // b.none
  468c58:	ldr	x0, [sp, #24]
  468c5c:	mov	w1, #0x2                   	// #2
  468c60:	str	w1, [x0]
  468c64:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468c68:	ldr	x0, [sp, #40]
  468c6c:	ldrb	w0, [x0, #8]
  468c70:	cmp	w0, #0x15
  468c74:	b.ne	468c84 <_obstack_memory_used@@Base+0xbb44>  // b.any
  468c78:	ldr	x0, [sp, #40]
  468c7c:	mov	w1, #0x1                   	// #1
  468c80:	strb	w1, [x0, #8]
  468c84:	str	wzr, [sp, #284]
  468c88:	strb	wzr, [sp, #283]
  468c8c:	add	x0, sp, #0x48
  468c90:	str	x0, [sp, #176]
  468c94:	mov	w0, #0x3                   	// #3
  468c98:	str	w0, [sp, #168]
  468c9c:	add	x0, sp, #0xa8
  468ca0:	ldrb	w6, [sp, #291]
  468ca4:	ldr	x5, [sp, #32]
  468ca8:	ldr	x4, [sp, #48]
  468cac:	ldr	w3, [sp, #292]
  468cb0:	ldr	x2, [sp, #40]
  468cb4:	ldr	x1, [sp, #56]
  468cb8:	bl	469410 <_obstack_memory_used@@Base+0xc2d0>
  468cbc:	str	w0, [sp, #252]
  468cc0:	ldr	w0, [sp, #252]
  468cc4:	cmp	w0, #0x0
  468cc8:	cset	w0, ne  // ne = any
  468ccc:	and	w0, w0, #0xff
  468cd0:	and	x0, x0, #0xff
  468cd4:	cmp	x0, #0x0
  468cd8:	b.eq	468cec <_obstack_memory_used@@Base+0xbbac>  // b.none
  468cdc:	ldr	x0, [sp, #24]
  468ce0:	ldr	w1, [sp, #252]
  468ce4:	str	w1, [x0]
  468ce8:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468cec:	strb	wzr, [sp, #291]
  468cf0:	ldr	x2, [sp, #32]
  468cf4:	ldr	x1, [sp, #56]
  468cf8:	ldr	x0, [sp, #40]
  468cfc:	bl	466b8c <_obstack_memory_used@@Base+0x9a4c>
  468d00:	str	w0, [sp, #292]
  468d04:	ldr	w0, [sp, #168]
  468d08:	cmp	w0, #0x4
  468d0c:	b.eq	468df8 <_obstack_memory_used@@Base+0xbcb8>  // b.none
  468d10:	ldr	w0, [sp, #168]
  468d14:	cmp	w0, #0x2
  468d18:	b.eq	468df8 <_obstack_memory_used@@Base+0xbcb8>  // b.none
  468d1c:	ldr	x0, [sp, #40]
  468d20:	ldrb	w0, [x0, #8]
  468d24:	cmp	w0, #0x2
  468d28:	cset	w0, eq  // eq = none
  468d2c:	and	w0, w0, #0xff
  468d30:	and	x0, x0, #0xff
  468d34:	cmp	x0, #0x0
  468d38:	b.eq	468d4c <_obstack_memory_used@@Base+0xbc0c>  // b.none
  468d3c:	ldr	x0, [sp, #24]
  468d40:	mov	w1, #0x7                   	// #7
  468d44:	str	w1, [x0]
  468d48:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468d4c:	ldr	x0, [sp, #40]
  468d50:	ldrb	w0, [x0, #8]
  468d54:	cmp	w0, #0x16
  468d58:	b.ne	468df8 <_obstack_memory_used@@Base+0xbcb8>  // b.any
  468d5c:	ldr	x0, [sp, #56]
  468d60:	ldr	x1, [x0, #72]
  468d64:	ldrsw	x0, [sp, #292]
  468d68:	add	x1, x1, x0
  468d6c:	ldr	x0, [sp, #56]
  468d70:	str	x1, [x0, #72]
  468d74:	add	x0, sp, #0x88
  468d78:	ldr	x2, [sp, #32]
  468d7c:	ldr	x1, [sp, #56]
  468d80:	bl	466b8c <_obstack_memory_used@@Base+0x9a4c>
  468d84:	str	w0, [sp, #284]
  468d88:	ldrb	w0, [sp, #144]
  468d8c:	cmp	w0, #0x2
  468d90:	cset	w0, eq  // eq = none
  468d94:	and	w0, w0, #0xff
  468d98:	and	x0, x0, #0xff
  468d9c:	cmp	x0, #0x0
  468da0:	b.eq	468db4 <_obstack_memory_used@@Base+0xbc74>  // b.none
  468da4:	ldr	x0, [sp, #24]
  468da8:	mov	w1, #0x7                   	// #7
  468dac:	str	w1, [x0]
  468db0:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468db4:	ldrb	w0, [sp, #144]
  468db8:	cmp	w0, #0x15
  468dbc:	b.ne	468df0 <_obstack_memory_used@@Base+0xbcb0>  // b.any
  468dc0:	ldr	x0, [sp, #56]
  468dc4:	ldr	x1, [x0, #72]
  468dc8:	ldr	w0, [sp, #292]
  468dcc:	neg	w0, w0
  468dd0:	sxtw	x0, w0
  468dd4:	add	x1, x1, x0
  468dd8:	ldr	x0, [sp, #56]
  468ddc:	str	x1, [x0, #72]
  468de0:	ldr	x0, [sp, #40]
  468de4:	mov	w1, #0x1                   	// #1
  468de8:	strb	w1, [x0, #8]
  468dec:	b	468df8 <_obstack_memory_used@@Base+0xbcb8>
  468df0:	mov	w0, #0x1                   	// #1
  468df4:	strb	w0, [sp, #283]
  468df8:	ldrb	w0, [sp, #283]
  468dfc:	cmp	w0, #0x0
  468e00:	b.eq	468ef0 <_obstack_memory_used@@Base+0xbdb0>  // b.none
  468e04:	add	x0, sp, #0x68
  468e08:	str	x0, [sp, #160]
  468e0c:	mov	w0, #0x3                   	// #3
  468e10:	str	w0, [sp, #152]
  468e14:	add	x1, sp, #0x88
  468e18:	add	x0, sp, #0x98
  468e1c:	mov	w6, #0x1                   	// #1
  468e20:	ldr	x5, [sp, #32]
  468e24:	ldr	x4, [sp, #48]
  468e28:	ldr	w3, [sp, #284]
  468e2c:	mov	x2, x1
  468e30:	ldr	x1, [sp, #56]
  468e34:	bl	469410 <_obstack_memory_used@@Base+0xc2d0>
  468e38:	str	w0, [sp, #252]
  468e3c:	ldr	w0, [sp, #252]
  468e40:	cmp	w0, #0x0
  468e44:	cset	w0, ne  // ne = any
  468e48:	and	w0, w0, #0xff
  468e4c:	and	x0, x0, #0xff
  468e50:	cmp	x0, #0x0
  468e54:	b.eq	468e68 <_obstack_memory_used@@Base+0xbd28>  // b.none
  468e58:	ldr	x0, [sp, #24]
  468e5c:	ldr	w1, [sp, #252]
  468e60:	str	w1, [x0]
  468e64:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468e68:	ldr	x2, [sp, #32]
  468e6c:	ldr	x1, [sp, #56]
  468e70:	ldr	x0, [sp, #40]
  468e74:	bl	466b8c <_obstack_memory_used@@Base+0x9a4c>
  468e78:	str	w0, [sp, #292]
  468e7c:	ldr	x0, [sp, #48]
  468e80:	ldr	w0, [x0, #180]
  468e84:	cmp	w0, #0x1
  468e88:	b.le	468e94 <_obstack_memory_used@@Base+0xbd54>
  468e8c:	ldr	x0, [sp, #256]
  468e90:	b	468e98 <_obstack_memory_used@@Base+0xbd58>
  468e94:	mov	x0, #0x0                   	// #0
  468e98:	add	x3, sp, #0x98
  468e9c:	add	x2, sp, #0xa8
  468ea0:	add	x1, sp, #0xc8
  468ea4:	mov	x5, x3
  468ea8:	mov	x4, x2
  468eac:	mov	x3, x1
  468eb0:	mov	x2, x0
  468eb4:	ldr	x1, [sp, #264]
  468eb8:	ldr	x0, [sp, #32]
  468ebc:	bl	4685c4 <_obstack_memory_used@@Base+0xb484>
  468ec0:	mov	w1, w0
  468ec4:	ldr	x0, [sp, #24]
  468ec8:	str	w1, [x0]
  468ecc:	ldr	x0, [sp, #24]
  468ed0:	ldr	w0, [x0]
  468ed4:	cmp	w0, #0x0
  468ed8:	cset	w0, ne  // ne = any
  468edc:	and	w0, w0, #0xff
  468ee0:	and	x0, x0, #0xff
  468ee4:	cmp	x0, #0x0
  468ee8:	b.eq	469124 <_obstack_memory_used@@Base+0xbfe4>  // b.none
  468eec:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  468ef0:	ldr	w0, [sp, #168]
  468ef4:	cmp	w0, #0x4
  468ef8:	b.eq	469098 <_obstack_memory_used@@Base+0xbf58>  // b.none
  468efc:	cmp	w0, #0x4
  468f00:	b.hi	4690f0 <_obstack_memory_used@@Base+0xbfb0>  // b.pmore
  468f04:	cmp	w0, #0x3
  468f08:	b.eq	46904c <_obstack_memory_used@@Base+0xbf0c>  // b.none
  468f0c:	cmp	w0, #0x3
  468f10:	b.hi	4690f0 <_obstack_memory_used@@Base+0xbfb0>  // b.pmore
  468f14:	cmp	w0, #0x2
  468f18:	b.eq	469000 <_obstack_memory_used@@Base+0xbec0>  // b.none
  468f1c:	cmp	w0, #0x2
  468f20:	b.hi	4690f0 <_obstack_memory_used@@Base+0xbfb0>  // b.pmore
  468f24:	cmp	w0, #0x0
  468f28:	b.eq	468f38 <_obstack_memory_used@@Base+0xbdf8>  // b.none
  468f2c:	cmp	w0, #0x1
  468f30:	b.eq	468f50 <_obstack_memory_used@@Base+0xbe10>  // b.none
  468f34:	b	4690f0 <_obstack_memory_used@@Base+0xbfb0>
  468f38:	ldrb	w0, [sp, #176]
  468f3c:	and	x0, x0, #0xff
  468f40:	mov	x1, x0
  468f44:	ldr	x0, [sp, #264]
  468f48:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  468f4c:	b	469124 <_obstack_memory_used@@Base+0xbfe4>
  468f50:	ldr	x0, [sp, #256]
  468f54:	ldr	x0, [x0, #40]
  468f58:	ldr	x1, [sp, #312]
  468f5c:	cmp	x1, x0
  468f60:	cset	w0, eq  // eq = none
  468f64:	and	w0, w0, #0xff
  468f68:	and	x0, x0, #0xff
  468f6c:	cmp	x0, #0x0
  468f70:	b.eq	468fd0 <_obstack_memory_used@@Base+0xbe90>  // b.none
  468f74:	ldr	x0, [sp, #256]
  468f78:	ldr	x0, [x0, #40]
  468f7c:	lsl	x0, x0, #1
  468f80:	add	x0, x0, #0x1
  468f84:	str	x0, [sp, #312]
  468f88:	ldr	x0, [sp, #256]
  468f8c:	ldr	x2, [x0]
  468f90:	ldr	x0, [sp, #312]
  468f94:	lsl	x0, x0, #2
  468f98:	mov	x1, x0
  468f9c:	mov	x0, x2
  468fa0:	bl	4045e0 <realloc@plt>
  468fa4:	str	x0, [sp, #240]
  468fa8:	ldr	x0, [sp, #240]
  468fac:	cmp	x0, #0x0
  468fb0:	cset	w0, eq  // eq = none
  468fb4:	and	w0, w0, #0xff
  468fb8:	and	x0, x0, #0xff
  468fbc:	cmp	x0, #0x0
  468fc0:	b.ne	4693cc <_obstack_memory_used@@Base+0xc28c>  // b.any
  468fc4:	ldr	x0, [sp, #256]
  468fc8:	ldr	x1, [sp, #240]
  468fcc:	str	x1, [x0]
  468fd0:	ldr	x0, [sp, #256]
  468fd4:	ldr	x1, [x0]
  468fd8:	ldr	x0, [sp, #256]
  468fdc:	ldr	x0, [x0, #40]
  468fe0:	add	x3, x0, #0x1
  468fe4:	ldr	x2, [sp, #256]
  468fe8:	str	x3, [x2, #40]
  468fec:	lsl	x0, x0, #2
  468ff0:	add	x0, x1, x0
  468ff4:	ldr	w1, [sp, #176]
  468ff8:	str	w1, [x0]
  468ffc:	b	469124 <_obstack_memory_used@@Base+0xbfe4>
  469000:	ldr	x1, [sp, #176]
  469004:	add	x0, sp, #0xc0
  469008:	mov	x3, x1
  46900c:	mov	x2, x0
  469010:	ldr	x1, [sp, #256]
  469014:	ldr	x0, [sp, #264]
  469018:	bl	46972c <_obstack_memory_used@@Base+0xc5ec>
  46901c:	mov	w1, w0
  469020:	ldr	x0, [sp, #24]
  469024:	str	w1, [x0]
  469028:	ldr	x0, [sp, #24]
  46902c:	ldr	w0, [x0]
  469030:	cmp	w0, #0x0
  469034:	cset	w0, ne  // ne = any
  469038:	and	w0, w0, #0xff
  46903c:	and	x0, x0, #0xff
  469040:	cmp	x0, #0x0
  469044:	b.eq	469110 <_obstack_memory_used@@Base+0xbfd0>  // b.none
  469048:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  46904c:	ldr	x1, [sp, #176]
  469050:	add	x0, sp, #0xd0
  469054:	mov	x3, x1
  469058:	mov	x2, x0
  46905c:	ldr	x1, [sp, #256]
  469060:	ldr	x0, [sp, #264]
  469064:	bl	468a60 <_obstack_memory_used@@Base+0xb920>
  469068:	mov	w1, w0
  46906c:	ldr	x0, [sp, #24]
  469070:	str	w1, [x0]
  469074:	ldr	x0, [sp, #24]
  469078:	ldr	w0, [x0]
  46907c:	cmp	w0, #0x0
  469080:	cset	w0, ne  // ne = any
  469084:	and	w0, w0, #0xff
  469088:	and	x0, x0, #0xff
  46908c:	cmp	x0, #0x0
  469090:	b.eq	469118 <_obstack_memory_used@@Base+0xbfd8>  // b.none
  469094:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  469098:	ldr	x0, [sp, #56]
  46909c:	ldr	x0, [x0, #120]
  4690a0:	ldr	x2, [sp, #176]
  4690a4:	add	x1, sp, #0xb8
  4690a8:	ldr	x5, [sp, #32]
  4690ac:	mov	x4, x2
  4690b0:	mov	x3, x1
  4690b4:	ldr	x2, [sp, #256]
  4690b8:	ldr	x1, [sp, #264]
  4690bc:	bl	469790 <_obstack_memory_used@@Base+0xc650>
  4690c0:	mov	w1, w0
  4690c4:	ldr	x0, [sp, #24]
  4690c8:	str	w1, [x0]
  4690cc:	ldr	x0, [sp, #24]
  4690d0:	ldr	w0, [x0]
  4690d4:	cmp	w0, #0x0
  4690d8:	cset	w0, ne  // ne = any
  4690dc:	and	w0, w0, #0xff
  4690e0:	and	x0, x0, #0xff
  4690e4:	cmp	x0, #0x0
  4690e8:	b.eq	469120 <_obstack_memory_used@@Base+0xbfe0>  // b.none
  4690ec:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  4690f0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4690f4:	add	x3, x0, #0x8d0
  4690f8:	mov	w2, #0xced                 	// #3309
  4690fc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469100:	add	x1, x0, #0x5f0
  469104:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469108:	add	x0, x0, #0x7d8
  46910c:	bl	404bb0 <__assert_fail@plt>
  469110:	nop
  469114:	b	469124 <_obstack_memory_used@@Base+0xbfe4>
  469118:	nop
  46911c:	b	469124 <_obstack_memory_used@@Base+0xbfe4>
  469120:	nop
  469124:	ldr	x0, [sp, #40]
  469128:	ldrb	w0, [x0, #8]
  46912c:	cmp	w0, #0x2
  469130:	cset	w0, eq  // eq = none
  469134:	and	w0, w0, #0xff
  469138:	and	x0, x0, #0xff
  46913c:	cmp	x0, #0x0
  469140:	b.eq	469154 <_obstack_memory_used@@Base+0xc014>  // b.none
  469144:	ldr	x0, [sp, #24]
  469148:	mov	w1, #0x7                   	// #7
  46914c:	str	w1, [x0]
  469150:	b	4693f4 <_obstack_memory_used@@Base+0xc2b4>
  469154:	ldr	x0, [sp, #40]
  469158:	ldrb	w0, [x0, #8]
  46915c:	cmp	w0, #0x15
  469160:	b.ne	468c84 <_obstack_memory_used@@Base+0xbb44>  // b.any
  469164:	ldr	x0, [sp, #56]
  469168:	ldr	x1, [x0, #72]
  46916c:	ldrsw	x0, [sp, #292]
  469170:	add	x1, x1, x0
  469174:	ldr	x0, [sp, #56]
  469178:	str	x1, [x0, #72]
  46917c:	ldrb	w0, [sp, #311]
  469180:	cmp	w0, #0x0
  469184:	b.ne	46918c <_obstack_memory_used@@Base+0xc04c>  // b.any
  469188:	b	469194 <_obstack_memory_used@@Base+0xc054>
  46918c:	ldr	x0, [sp, #264]
  469190:	bl	45d520 <_obstack_memory_used@@Base+0x3e0>
  469194:	ldr	x0, [sp, #48]
  469198:	ldr	w0, [x0, #180]
  46919c:	cmp	w0, #0x1
  4691a0:	b.le	4691b8 <_obstack_memory_used@@Base+0xc078>
  4691a4:	ldr	x0, [sp, #48]
  4691a8:	ldr	x0, [x0, #120]
  4691ac:	mov	x1, x0
  4691b0:	ldr	x0, [sp, #264]
  4691b4:	bl	45d600 <_obstack_memory_used@@Base+0x4c0>
  4691b8:	ldr	x0, [sp, #256]
  4691bc:	ldr	x0, [x0, #40]
  4691c0:	cmp	x0, #0x0
  4691c4:	b.ne	469230 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  4691c8:	ldr	x0, [sp, #256]
  4691cc:	ldr	x0, [x0, #48]
  4691d0:	cmp	x0, #0x0
  4691d4:	b.ne	469230 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  4691d8:	ldr	x0, [sp, #256]
  4691dc:	ldr	x0, [x0, #56]
  4691e0:	cmp	x0, #0x0
  4691e4:	b.ne	469230 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  4691e8:	ldr	x0, [sp, #256]
  4691ec:	ldr	x0, [x0, #64]
  4691f0:	cmp	x0, #0x0
  4691f4:	b.ne	469230 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  4691f8:	ldr	x0, [sp, #48]
  4691fc:	ldr	w0, [x0, #180]
  469200:	cmp	w0, #0x1
  469204:	b.le	46936c <_obstack_memory_used@@Base+0xc22c>
  469208:	ldr	x0, [sp, #256]
  46920c:	ldr	x0, [x0, #72]
  469210:	cmp	x0, #0x0
  469214:	b.ne	469230 <_obstack_memory_used@@Base+0xc0f0>  // b.any
  469218:	ldr	x0, [sp, #256]
  46921c:	ldrb	w0, [x0, #32]
  469220:	and	w0, w0, #0x1
  469224:	and	w0, w0, #0xff
  469228:	cmp	w0, #0x0
  46922c:	b.eq	46936c <_obstack_memory_used@@Base+0xc22c>  // b.none
  469230:	ldr	x0, [sp, #48]
  469234:	ldrb	w1, [x0, #176]
  469238:	orr	w1, w1, #0x2
  46923c:	strb	w1, [x0, #176]
  469240:	mov	w0, #0x6                   	// #6
  469244:	strb	w0, [sp, #224]
  469248:	ldr	x0, [sp, #256]
  46924c:	str	x0, [sp, #216]
  469250:	add	x0, sp, #0xd8
  469254:	mov	x3, x0
  469258:	mov	x2, #0x0                   	// #0
  46925c:	mov	x1, #0x0                   	// #0
  469260:	ldr	x0, [sp, #48]
  469264:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  469268:	str	x0, [sp, #232]
  46926c:	ldr	x0, [sp, #232]
  469270:	cmp	x0, #0x0
  469274:	cset	w0, eq  // eq = none
  469278:	and	w0, w0, #0xff
  46927c:	and	x0, x0, #0xff
  469280:	cmp	x0, #0x0
  469284:	b.ne	4693d4 <_obstack_memory_used@@Base+0xc294>  // b.any
  469288:	str	wzr, [sp, #276]
  46928c:	b	4692b8 <_obstack_memory_used@@Base+0xc178>
  469290:	ldrsw	x0, [sp, #276]
  469294:	lsl	x0, x0, #3
  469298:	ldr	x1, [sp, #264]
  46929c:	add	x0, x1, x0
  4692a0:	ldr	x0, [x0]
  4692a4:	cmp	x0, #0x0
  4692a8:	b.ne	4692c8 <_obstack_memory_used@@Base+0xc188>  // b.any
  4692ac:	ldr	w0, [sp, #276]
  4692b0:	add	w0, w0, #0x1
  4692b4:	str	w0, [sp, #276]
  4692b8:	ldr	w0, [sp, #276]
  4692bc:	cmp	w0, #0x3
  4692c0:	b.le	469290 <_obstack_memory_used@@Base+0xc150>
  4692c4:	b	4692cc <_obstack_memory_used@@Base+0xc18c>
  4692c8:	nop
  4692cc:	ldr	w0, [sp, #276]
  4692d0:	cmp	w0, #0x3
  4692d4:	b.gt	469358 <_obstack_memory_used@@Base+0xc218>
  4692d8:	mov	w0, #0x3                   	// #3
  4692dc:	strb	w0, [sp, #224]
  4692e0:	ldr	x0, [sp, #264]
  4692e4:	str	x0, [sp, #216]
  4692e8:	add	x0, sp, #0xd8
  4692ec:	mov	x3, x0
  4692f0:	mov	x2, #0x0                   	// #0
  4692f4:	mov	x1, #0x0                   	// #0
  4692f8:	ldr	x0, [sp, #48]
  4692fc:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  469300:	str	x0, [sp, #296]
  469304:	ldr	x0, [sp, #296]
  469308:	cmp	x0, #0x0
  46930c:	cset	w0, eq  // eq = none
  469310:	and	w0, w0, #0xff
  469314:	and	x0, x0, #0xff
  469318:	cmp	x0, #0x0
  46931c:	b.ne	4693dc <_obstack_memory_used@@Base+0xc29c>  // b.any
  469320:	mov	w3, #0xa                   	// #10
  469324:	ldr	x2, [sp, #232]
  469328:	ldr	x1, [sp, #296]
  46932c:	ldr	x0, [sp, #48]
  469330:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  469334:	str	x0, [sp, #296]
  469338:	ldr	x0, [sp, #296]
  46933c:	cmp	x0, #0x0
  469340:	cset	w0, eq  // eq = none
  469344:	and	w0, w0, #0xff
  469348:	and	x0, x0, #0xff
  46934c:	cmp	x0, #0x0
  469350:	b.eq	4693c0 <_obstack_memory_used@@Base+0xc280>  // b.none
  469354:	b	4693e8 <_obstack_memory_used@@Base+0xc2a8>
  469358:	ldr	x0, [sp, #264]
  46935c:	bl	404880 <free@plt>
  469360:	ldr	x0, [sp, #232]
  469364:	str	x0, [sp, #296]
  469368:	b	4693c0 <_obstack_memory_used@@Base+0xc280>
  46936c:	ldr	x0, [sp, #256]
  469370:	bl	46a834 <_obstack_memory_used@@Base+0xd6f4>
  469374:	mov	w0, #0x3                   	// #3
  469378:	strb	w0, [sp, #224]
  46937c:	ldr	x0, [sp, #264]
  469380:	str	x0, [sp, #216]
  469384:	add	x0, sp, #0xd8
  469388:	mov	x3, x0
  46938c:	mov	x2, #0x0                   	// #0
  469390:	mov	x1, #0x0                   	// #0
  469394:	ldr	x0, [sp, #48]
  469398:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  46939c:	str	x0, [sp, #296]
  4693a0:	ldr	x0, [sp, #296]
  4693a4:	cmp	x0, #0x0
  4693a8:	cset	w0, eq  // eq = none
  4693ac:	and	w0, w0, #0xff
  4693b0:	and	x0, x0, #0xff
  4693b4:	cmp	x0, #0x0
  4693b8:	b.ne	4693e4 <_obstack_memory_used@@Base+0xc2a4>  // b.any
  4693bc:	b	4693c4 <_obstack_memory_used@@Base+0xc284>
  4693c0:	nop
  4693c4:	ldr	x0, [sp, #296]
  4693c8:	b	469408 <_obstack_memory_used@@Base+0xc2c8>
  4693cc:	nop
  4693d0:	b	4693e8 <_obstack_memory_used@@Base+0xc2a8>
  4693d4:	nop
  4693d8:	b	4693e8 <_obstack_memory_used@@Base+0xc2a8>
  4693dc:	nop
  4693e0:	b	4693e8 <_obstack_memory_used@@Base+0xc2a8>
  4693e4:	nop
  4693e8:	ldr	x0, [sp, #24]
  4693ec:	mov	w1, #0xc                   	// #12
  4693f0:	str	w1, [x0]
  4693f4:	ldr	x0, [sp, #264]
  4693f8:	bl	404880 <free@plt>
  4693fc:	ldr	x0, [sp, #256]
  469400:	bl	46a834 <_obstack_memory_used@@Base+0xd6f4>
  469404:	mov	x0, #0x0                   	// #0
  469408:	ldp	x29, x30, [sp], #320
  46940c:	ret
  469410:	stp	x29, x30, [sp, #-96]!
  469414:	mov	x29, sp
  469418:	str	x0, [sp, #56]
  46941c:	str	x1, [sp, #48]
  469420:	str	x2, [sp, #40]
  469424:	str	w3, [sp, #36]
  469428:	str	x4, [sp, #24]
  46942c:	str	x5, [sp, #16]
  469430:	strb	w6, [sp, #35]
  469434:	ldr	x0, [sp, #48]
  469438:	ldr	x0, [x0, #72]
  46943c:	mov	x1, x0
  469440:	ldr	x0, [sp, #48]
  469444:	bl	45d67c <_obstack_memory_used@@Base+0x53c>
  469448:	str	w0, [sp, #92]
  46944c:	ldr	w0, [sp, #92]
  469450:	cmp	w0, #0x1
  469454:	b.le	4694a4 <_obstack_memory_used@@Base+0xc364>
  469458:	ldr	x0, [sp, #56]
  46945c:	mov	w1, #0x1                   	// #1
  469460:	str	w1, [x0]
  469464:	ldr	x0, [sp, #48]
  469468:	ldr	x0, [x0, #72]
  46946c:	mov	x1, x0
  469470:	ldr	x0, [sp, #48]
  469474:	bl	45d710 <_obstack_memory_used@@Base+0x5d0>
  469478:	mov	w1, w0
  46947c:	ldr	x0, [sp, #56]
  469480:	str	w1, [x0, #8]
  469484:	ldr	x0, [sp, #48]
  469488:	ldr	x1, [x0, #72]
  46948c:	ldrsw	x0, [sp, #92]
  469490:	add	x1, x1, x0
  469494:	ldr	x0, [sp, #48]
  469498:	str	x1, [x0, #72]
  46949c:	mov	w0, #0x0                   	// #0
  4694a0:	b	469574 <_obstack_memory_used@@Base+0xc434>
  4694a4:	ldr	x0, [sp, #48]
  4694a8:	ldr	x1, [x0, #72]
  4694ac:	ldrsw	x0, [sp, #36]
  4694b0:	add	x1, x1, x0
  4694b4:	ldr	x0, [sp, #48]
  4694b8:	str	x1, [x0, #72]
  4694bc:	ldr	x0, [sp, #40]
  4694c0:	ldrb	w0, [x0, #8]
  4694c4:	cmp	w0, #0x1a
  4694c8:	b.eq	4694ec <_obstack_memory_used@@Base+0xc3ac>  // b.none
  4694cc:	ldr	x0, [sp, #40]
  4694d0:	ldrb	w0, [x0, #8]
  4694d4:	cmp	w0, #0x1e
  4694d8:	b.eq	4694ec <_obstack_memory_used@@Base+0xc3ac>  // b.none
  4694dc:	ldr	x0, [sp, #40]
  4694e0:	ldrb	w0, [x0, #8]
  4694e4:	cmp	w0, #0x1c
  4694e8:	b.ne	469500 <_obstack_memory_used@@Base+0xc3c0>  // b.any
  4694ec:	ldr	x2, [sp, #40]
  4694f0:	ldr	x1, [sp, #48]
  4694f4:	ldr	x0, [sp, #56]
  4694f8:	bl	46957c <_obstack_memory_used@@Base+0xc43c>
  4694fc:	b	469574 <_obstack_memory_used@@Base+0xc434>
  469500:	ldr	x0, [sp, #40]
  469504:	ldrb	w0, [x0, #8]
  469508:	cmp	w0, #0x16
  46950c:	cset	w0, eq  // eq = none
  469510:	and	w0, w0, #0xff
  469514:	and	x0, x0, #0xff
  469518:	cmp	x0, #0x0
  46951c:	b.eq	469558 <_obstack_memory_used@@Base+0xc418>  // b.none
  469520:	ldrb	w0, [sp, #35]
  469524:	eor	w0, w0, #0x1
  469528:	and	w0, w0, #0xff
  46952c:	cmp	w0, #0x0
  469530:	b.eq	469558 <_obstack_memory_used@@Base+0xc418>  // b.none
  469534:	add	x0, sp, #0x48
  469538:	ldr	x2, [sp, #16]
  46953c:	ldr	x1, [sp, #48]
  469540:	bl	466b8c <_obstack_memory_used@@Base+0x9a4c>
  469544:	ldrb	w0, [sp, #80]
  469548:	cmp	w0, #0x15
  46954c:	b.eq	469558 <_obstack_memory_used@@Base+0xc418>  // b.none
  469550:	mov	w0, #0xb                   	// #11
  469554:	b	469574 <_obstack_memory_used@@Base+0xc434>
  469558:	ldr	x0, [sp, #56]
  46955c:	str	wzr, [x0]
  469560:	ldr	x0, [sp, #40]
  469564:	ldrb	w1, [x0]
  469568:	ldr	x0, [sp, #56]
  46956c:	strb	w1, [x0, #8]
  469570:	mov	w0, #0x0                   	// #0
  469574:	ldp	x29, x30, [sp], #96
  469578:	ret
  46957c:	stp	x29, x30, [sp, #-64]!
  469580:	mov	x29, sp
  469584:	str	x0, [sp, #40]
  469588:	str	x1, [sp, #32]
  46958c:	str	x2, [sp, #24]
  469590:	ldr	x0, [sp, #24]
  469594:	ldrb	w0, [x0]
  469598:	strb	w0, [sp, #55]
  46959c:	str	wzr, [sp, #56]
  4695a0:	ldr	x0, [sp, #32]
  4695a4:	ldr	x1, [x0, #104]
  4695a8:	ldr	x0, [sp, #32]
  4695ac:	ldr	x0, [x0, #72]
  4695b0:	cmp	x1, x0
  4695b4:	b.gt	4695c0 <_obstack_memory_used@@Base+0xc480>
  4695b8:	mov	w0, #0x7                   	// #7
  4695bc:	b	469724 <_obstack_memory_used@@Base+0xc5e4>
  4695c0:	ldr	w0, [sp, #56]
  4695c4:	cmp	w0, #0x1f
  4695c8:	b.le	4695d4 <_obstack_memory_used@@Base+0xc494>
  4695cc:	mov	w0, #0x7                   	// #7
  4695d0:	b	469724 <_obstack_memory_used@@Base+0xc5e4>
  4695d4:	ldr	x0, [sp, #24]
  4695d8:	ldrb	w0, [x0, #8]
  4695dc:	cmp	w0, #0x1e
  4695e0:	b.ne	4695f4 <_obstack_memory_used@@Base+0xc4b4>  // b.any
  4695e4:	ldr	x0, [sp, #32]
  4695e8:	bl	45fce0 <_obstack_memory_used@@Base+0x2ba0>
  4695ec:	strb	w0, [sp, #63]
  4695f0:	b	46961c <_obstack_memory_used@@Base+0xc4dc>
  4695f4:	ldr	x0, [sp, #32]
  4695f8:	ldr	x1, [x0, #8]
  4695fc:	ldr	x0, [sp, #32]
  469600:	ldr	x0, [x0, #72]
  469604:	add	x3, x0, #0x1
  469608:	ldr	x2, [sp, #32]
  46960c:	str	x3, [x2, #72]
  469610:	add	x0, x1, x0
  469614:	ldrb	w0, [x0]
  469618:	strb	w0, [sp, #63]
  46961c:	ldr	x0, [sp, #32]
  469620:	ldr	x1, [x0, #104]
  469624:	ldr	x0, [sp, #32]
  469628:	ldr	x0, [x0, #72]
  46962c:	cmp	x1, x0
  469630:	b.gt	46963c <_obstack_memory_used@@Base+0xc4fc>
  469634:	mov	w0, #0x7                   	// #7
  469638:	b	469724 <_obstack_memory_used@@Base+0xc5e4>
  46963c:	ldrb	w1, [sp, #63]
  469640:	ldrb	w0, [sp, #55]
  469644:	cmp	w1, w0
  469648:	b.ne	46966c <_obstack_memory_used@@Base+0xc52c>  // b.any
  46964c:	ldr	x0, [sp, #32]
  469650:	ldr	x0, [x0, #8]
  469654:	ldr	x1, [sp, #32]
  469658:	ldr	x1, [x1, #72]
  46965c:	add	x0, x0, x1
  469660:	ldrb	w0, [x0]
  469664:	cmp	w0, #0x5d
  469668:	b.eq	469694 <_obstack_memory_used@@Base+0xc554>  // b.none
  46966c:	ldr	x0, [sp, #40]
  469670:	ldr	x1, [x0, #8]
  469674:	ldrsw	x0, [sp, #56]
  469678:	add	x0, x1, x0
  46967c:	ldrb	w1, [sp, #63]
  469680:	strb	w1, [x0]
  469684:	ldr	w0, [sp, #56]
  469688:	add	w0, w0, #0x1
  46968c:	str	w0, [sp, #56]
  469690:	b	4695c0 <_obstack_memory_used@@Base+0xc480>
  469694:	nop
  469698:	ldr	x0, [sp, #32]
  46969c:	ldr	x0, [x0, #72]
  4696a0:	add	x1, x0, #0x1
  4696a4:	ldr	x0, [sp, #32]
  4696a8:	str	x1, [x0, #72]
  4696ac:	ldr	x0, [sp, #40]
  4696b0:	ldr	x1, [x0, #8]
  4696b4:	ldrsw	x0, [sp, #56]
  4696b8:	add	x0, x1, x0
  4696bc:	strb	wzr, [x0]
  4696c0:	ldr	x0, [sp, #24]
  4696c4:	ldrb	w0, [x0, #8]
  4696c8:	cmp	w0, #0x1e
  4696cc:	b.eq	46970c <_obstack_memory_used@@Base+0xc5cc>  // b.none
  4696d0:	cmp	w0, #0x1e
  4696d4:	b.gt	46971c <_obstack_memory_used@@Base+0xc5dc>
  4696d8:	cmp	w0, #0x1a
  4696dc:	b.eq	4696ec <_obstack_memory_used@@Base+0xc5ac>  // b.none
  4696e0:	cmp	w0, #0x1c
  4696e4:	b.eq	4696fc <_obstack_memory_used@@Base+0xc5bc>  // b.none
  4696e8:	b	46971c <_obstack_memory_used@@Base+0xc5dc>
  4696ec:	ldr	x0, [sp, #40]
  4696f0:	mov	w1, #0x3                   	// #3
  4696f4:	str	w1, [x0]
  4696f8:	b	469720 <_obstack_memory_used@@Base+0xc5e0>
  4696fc:	ldr	x0, [sp, #40]
  469700:	mov	w1, #0x2                   	// #2
  469704:	str	w1, [x0]
  469708:	b	469720 <_obstack_memory_used@@Base+0xc5e0>
  46970c:	ldr	x0, [sp, #40]
  469710:	mov	w1, #0x4                   	// #4
  469714:	str	w1, [x0]
  469718:	b	469720 <_obstack_memory_used@@Base+0xc5e0>
  46971c:	nop
  469720:	mov	w0, #0x0                   	// #0
  469724:	ldp	x29, x30, [sp], #64
  469728:	ret
  46972c:	stp	x29, x30, [sp, #-48]!
  469730:	mov	x29, sp
  469734:	str	x0, [sp, #40]
  469738:	str	x1, [sp, #32]
  46973c:	str	x2, [sp, #24]
  469740:	str	x3, [sp, #16]
  469744:	ldr	x0, [sp, #16]
  469748:	bl	4040b0 <strlen@plt>
  46974c:	cmp	x0, #0x1
  469750:	cset	w0, ne  // ne = any
  469754:	and	w0, w0, #0xff
  469758:	and	x0, x0, #0xff
  46975c:	cmp	x0, #0x0
  469760:	b.eq	46976c <_obstack_memory_used@@Base+0xc62c>  // b.none
  469764:	mov	w0, #0x3                   	// #3
  469768:	b	469788 <_obstack_memory_used@@Base+0xc648>
  46976c:	ldr	x0, [sp, #16]
  469770:	ldrb	w0, [x0]
  469774:	and	x0, x0, #0xff
  469778:	mov	x1, x0
  46977c:	ldr	x0, [sp, #40]
  469780:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469784:	mov	w0, #0x0                   	// #0
  469788:	ldp	x29, x30, [sp], #48
  46978c:	ret
  469790:	stp	x29, x30, [sp, #-112]!
  469794:	mov	x29, sp
  469798:	str	x19, [sp, #16]
  46979c:	str	x0, [sp, #72]
  4697a0:	str	x1, [sp, #64]
  4697a4:	str	x2, [sp, #56]
  4697a8:	str	x3, [sp, #48]
  4697ac:	str	x4, [sp, #40]
  4697b0:	str	x5, [sp, #32]
  4697b4:	ldr	x0, [sp, #40]
  4697b8:	str	x0, [sp, #96]
  4697bc:	ldr	x0, [sp, #32]
  4697c0:	and	x0, x0, #0x400000
  4697c4:	cmp	x0, #0x0
  4697c8:	b.eq	469808 <_obstack_memory_used@@Base+0xc6c8>  // b.none
  4697cc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4697d0:	add	x1, x0, #0x7e0
  4697d4:	ldr	x0, [sp, #96]
  4697d8:	bl	4047c0 <strcmp@plt>
  4697dc:	cmp	w0, #0x0
  4697e0:	b.eq	4697fc <_obstack_memory_used@@Base+0xc6bc>  // b.none
  4697e4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4697e8:	add	x1, x0, #0x7e8
  4697ec:	ldr	x0, [sp, #96]
  4697f0:	bl	4047c0 <strcmp@plt>
  4697f4:	cmp	w0, #0x0
  4697f8:	b.ne	469808 <_obstack_memory_used@@Base+0xc6c8>  // b.any
  4697fc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469800:	add	x0, x0, #0x7f0
  469804:	str	x0, [sp, #96]
  469808:	ldr	x0, [sp, #48]
  46980c:	ldr	x1, [x0]
  469810:	ldr	x0, [sp, #56]
  469814:	ldr	x0, [x0, #72]
  469818:	cmp	x1, x0
  46981c:	cset	w0, eq  // eq = none
  469820:	and	w0, w0, #0xff
  469824:	and	x0, x0, #0xff
  469828:	cmp	x0, #0x0
  46982c:	b.eq	4698a0 <_obstack_memory_used@@Base+0xc760>  // b.none
  469830:	ldr	x0, [sp, #56]
  469834:	ldr	x0, [x0, #72]
  469838:	lsl	x0, x0, #1
  46983c:	add	x0, x0, #0x1
  469840:	str	x0, [sp, #88]
  469844:	ldr	x0, [sp, #56]
  469848:	ldr	x2, [x0, #24]
  46984c:	ldr	x0, [sp, #88]
  469850:	lsl	x0, x0, #3
  469854:	mov	x1, x0
  469858:	mov	x0, x2
  46985c:	bl	4045e0 <realloc@plt>
  469860:	str	x0, [sp, #80]
  469864:	ldr	x0, [sp, #80]
  469868:	cmp	x0, #0x0
  46986c:	cset	w0, eq  // eq = none
  469870:	and	w0, w0, #0xff
  469874:	and	x0, x0, #0xff
  469878:	cmp	x0, #0x0
  46987c:	b.eq	469888 <_obstack_memory_used@@Base+0xc748>  // b.none
  469880:	mov	w0, #0xc                   	// #12
  469884:	b	46a44c <_obstack_memory_used@@Base+0xd30c>
  469888:	ldr	x0, [sp, #56]
  46988c:	ldr	x1, [sp, #80]
  469890:	str	x1, [x0, #24]
  469894:	ldr	x0, [sp, #48]
  469898:	ldr	x1, [sp, #88]
  46989c:	str	x1, [x0]
  4698a0:	ldr	x0, [sp, #56]
  4698a4:	ldr	x1, [x0, #24]
  4698a8:	ldr	x0, [sp, #56]
  4698ac:	ldr	x0, [x0, #72]
  4698b0:	add	x3, x0, #0x1
  4698b4:	ldr	x2, [sp, #56]
  4698b8:	str	x3, [x2, #72]
  4698bc:	lsl	x0, x0, #3
  4698c0:	add	x19, x1, x0
  4698c4:	ldr	x0, [sp, #96]
  4698c8:	bl	404160 <wctype@plt>
  4698cc:	str	x0, [x19]
  4698d0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4698d4:	add	x1, x0, #0x7c0
  4698d8:	ldr	x0, [sp, #96]
  4698dc:	bl	4047c0 <strcmp@plt>
  4698e0:	cmp	w0, #0x0
  4698e4:	b.ne	4699c4 <_obstack_memory_used@@Base+0xc884>  // b.any
  4698e8:	ldr	x0, [sp, #72]
  4698ec:	cmp	x0, #0x0
  4698f0:	cset	w0, ne  // ne = any
  4698f4:	and	w0, w0, #0xff
  4698f8:	and	x0, x0, #0xff
  4698fc:	cmp	x0, #0x0
  469900:	b.eq	46996c <_obstack_memory_used@@Base+0xc82c>  // b.none
  469904:	str	wzr, [sp, #108]
  469908:	b	46995c <_obstack_memory_used@@Base+0xc81c>
  46990c:	bl	4047f0 <__ctype_b_loc@plt>
  469910:	ldr	x1, [x0]
  469914:	ldrsw	x0, [sp, #108]
  469918:	lsl	x0, x0, #1
  46991c:	add	x0, x1, x0
  469920:	ldrh	w0, [x0]
  469924:	and	w0, w0, #0x8
  469928:	cmp	w0, #0x0
  46992c:	b.eq	469950 <_obstack_memory_used@@Base+0xc810>  // b.none
  469930:	ldrsw	x0, [sp, #108]
  469934:	ldr	x1, [sp, #72]
  469938:	add	x0, x1, x0
  46993c:	ldrb	w0, [x0]
  469940:	and	x0, x0, #0xff
  469944:	mov	x1, x0
  469948:	ldr	x0, [sp, #64]
  46994c:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469950:	ldr	w0, [sp, #108]
  469954:	add	w0, w0, #0x1
  469958:	str	w0, [sp, #108]
  46995c:	ldr	w0, [sp, #108]
  469960:	cmp	w0, #0xff
  469964:	b.le	46990c <_obstack_memory_used@@Base+0xc7cc>
  469968:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46996c:	str	wzr, [sp, #108]
  469970:	b	4699b4 <_obstack_memory_used@@Base+0xc874>
  469974:	bl	4047f0 <__ctype_b_loc@plt>
  469978:	ldr	x1, [x0]
  46997c:	ldrsw	x0, [sp, #108]
  469980:	lsl	x0, x0, #1
  469984:	add	x0, x1, x0
  469988:	ldrh	w0, [x0]
  46998c:	and	w0, w0, #0x8
  469990:	cmp	w0, #0x0
  469994:	b.eq	4699a8 <_obstack_memory_used@@Base+0xc868>  // b.none
  469998:	ldrsw	x0, [sp, #108]
  46999c:	mov	x1, x0
  4699a0:	ldr	x0, [sp, #64]
  4699a4:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  4699a8:	ldr	w0, [sp, #108]
  4699ac:	add	w0, w0, #0x1
  4699b0:	str	w0, [sp, #108]
  4699b4:	ldr	w0, [sp, #108]
  4699b8:	cmp	w0, #0xff
  4699bc:	b.le	469974 <_obstack_memory_used@@Base+0xc834>
  4699c0:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  4699c4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4699c8:	add	x1, x0, #0x7f8
  4699cc:	ldr	x0, [sp, #96]
  4699d0:	bl	4047c0 <strcmp@plt>
  4699d4:	cmp	w0, #0x0
  4699d8:	b.ne	469ab8 <_obstack_memory_used@@Base+0xc978>  // b.any
  4699dc:	ldr	x0, [sp, #72]
  4699e0:	cmp	x0, #0x0
  4699e4:	cset	w0, ne  // ne = any
  4699e8:	and	w0, w0, #0xff
  4699ec:	and	x0, x0, #0xff
  4699f0:	cmp	x0, #0x0
  4699f4:	b.eq	469a60 <_obstack_memory_used@@Base+0xc920>  // b.none
  4699f8:	str	wzr, [sp, #108]
  4699fc:	b	469a50 <_obstack_memory_used@@Base+0xc910>
  469a00:	bl	4047f0 <__ctype_b_loc@plt>
  469a04:	ldr	x1, [x0]
  469a08:	ldrsw	x0, [sp, #108]
  469a0c:	lsl	x0, x0, #1
  469a10:	add	x0, x1, x0
  469a14:	ldrh	w0, [x0]
  469a18:	and	w0, w0, #0x2
  469a1c:	cmp	w0, #0x0
  469a20:	b.eq	469a44 <_obstack_memory_used@@Base+0xc904>  // b.none
  469a24:	ldrsw	x0, [sp, #108]
  469a28:	ldr	x1, [sp, #72]
  469a2c:	add	x0, x1, x0
  469a30:	ldrb	w0, [x0]
  469a34:	and	x0, x0, #0xff
  469a38:	mov	x1, x0
  469a3c:	ldr	x0, [sp, #64]
  469a40:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469a44:	ldr	w0, [sp, #108]
  469a48:	add	w0, w0, #0x1
  469a4c:	str	w0, [sp, #108]
  469a50:	ldr	w0, [sp, #108]
  469a54:	cmp	w0, #0xff
  469a58:	b.le	469a00 <_obstack_memory_used@@Base+0xc8c0>
  469a5c:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469a60:	str	wzr, [sp, #108]
  469a64:	b	469aa8 <_obstack_memory_used@@Base+0xc968>
  469a68:	bl	4047f0 <__ctype_b_loc@plt>
  469a6c:	ldr	x1, [x0]
  469a70:	ldrsw	x0, [sp, #108]
  469a74:	lsl	x0, x0, #1
  469a78:	add	x0, x1, x0
  469a7c:	ldrh	w0, [x0]
  469a80:	and	w0, w0, #0x2
  469a84:	cmp	w0, #0x0
  469a88:	b.eq	469a9c <_obstack_memory_used@@Base+0xc95c>  // b.none
  469a8c:	ldrsw	x0, [sp, #108]
  469a90:	mov	x1, x0
  469a94:	ldr	x0, [sp, #64]
  469a98:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469a9c:	ldr	w0, [sp, #108]
  469aa0:	add	w0, w0, #0x1
  469aa4:	str	w0, [sp, #108]
  469aa8:	ldr	w0, [sp, #108]
  469aac:	cmp	w0, #0xff
  469ab0:	b.le	469a68 <_obstack_memory_used@@Base+0xc928>
  469ab4:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469ab8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469abc:	add	x1, x0, #0x7e8
  469ac0:	ldr	x0, [sp, #96]
  469ac4:	bl	4047c0 <strcmp@plt>
  469ac8:	cmp	w0, #0x0
  469acc:	b.ne	469bac <_obstack_memory_used@@Base+0xca6c>  // b.any
  469ad0:	ldr	x0, [sp, #72]
  469ad4:	cmp	x0, #0x0
  469ad8:	cset	w0, ne  // ne = any
  469adc:	and	w0, w0, #0xff
  469ae0:	and	x0, x0, #0xff
  469ae4:	cmp	x0, #0x0
  469ae8:	b.eq	469b54 <_obstack_memory_used@@Base+0xca14>  // b.none
  469aec:	str	wzr, [sp, #108]
  469af0:	b	469b44 <_obstack_memory_used@@Base+0xca04>
  469af4:	bl	4047f0 <__ctype_b_loc@plt>
  469af8:	ldr	x1, [x0]
  469afc:	ldrsw	x0, [sp, #108]
  469b00:	lsl	x0, x0, #1
  469b04:	add	x0, x1, x0
  469b08:	ldrh	w0, [x0]
  469b0c:	and	w0, w0, #0x200
  469b10:	cmp	w0, #0x0
  469b14:	b.eq	469b38 <_obstack_memory_used@@Base+0xc9f8>  // b.none
  469b18:	ldrsw	x0, [sp, #108]
  469b1c:	ldr	x1, [sp, #72]
  469b20:	add	x0, x1, x0
  469b24:	ldrb	w0, [x0]
  469b28:	and	x0, x0, #0xff
  469b2c:	mov	x1, x0
  469b30:	ldr	x0, [sp, #64]
  469b34:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469b38:	ldr	w0, [sp, #108]
  469b3c:	add	w0, w0, #0x1
  469b40:	str	w0, [sp, #108]
  469b44:	ldr	w0, [sp, #108]
  469b48:	cmp	w0, #0xff
  469b4c:	b.le	469af4 <_obstack_memory_used@@Base+0xc9b4>
  469b50:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469b54:	str	wzr, [sp, #108]
  469b58:	b	469b9c <_obstack_memory_used@@Base+0xca5c>
  469b5c:	bl	4047f0 <__ctype_b_loc@plt>
  469b60:	ldr	x1, [x0]
  469b64:	ldrsw	x0, [sp, #108]
  469b68:	lsl	x0, x0, #1
  469b6c:	add	x0, x1, x0
  469b70:	ldrh	w0, [x0]
  469b74:	and	w0, w0, #0x200
  469b78:	cmp	w0, #0x0
  469b7c:	b.eq	469b90 <_obstack_memory_used@@Base+0xca50>  // b.none
  469b80:	ldrsw	x0, [sp, #108]
  469b84:	mov	x1, x0
  469b88:	ldr	x0, [sp, #64]
  469b8c:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469b90:	ldr	w0, [sp, #108]
  469b94:	add	w0, w0, #0x1
  469b98:	str	w0, [sp, #108]
  469b9c:	ldr	w0, [sp, #108]
  469ba0:	cmp	w0, #0xff
  469ba4:	b.le	469b5c <_obstack_memory_used@@Base+0xca1c>
  469ba8:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469bac:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469bb0:	add	x1, x0, #0x7d0
  469bb4:	ldr	x0, [sp, #96]
  469bb8:	bl	4047c0 <strcmp@plt>
  469bbc:	cmp	w0, #0x0
  469bc0:	b.ne	469ca0 <_obstack_memory_used@@Base+0xcb60>  // b.any
  469bc4:	ldr	x0, [sp, #72]
  469bc8:	cmp	x0, #0x0
  469bcc:	cset	w0, ne  // ne = any
  469bd0:	and	w0, w0, #0xff
  469bd4:	and	x0, x0, #0xff
  469bd8:	cmp	x0, #0x0
  469bdc:	b.eq	469c48 <_obstack_memory_used@@Base+0xcb08>  // b.none
  469be0:	str	wzr, [sp, #108]
  469be4:	b	469c38 <_obstack_memory_used@@Base+0xcaf8>
  469be8:	bl	4047f0 <__ctype_b_loc@plt>
  469bec:	ldr	x1, [x0]
  469bf0:	ldrsw	x0, [sp, #108]
  469bf4:	lsl	x0, x0, #1
  469bf8:	add	x0, x1, x0
  469bfc:	ldrh	w0, [x0]
  469c00:	and	w0, w0, #0x2000
  469c04:	cmp	w0, #0x0
  469c08:	b.eq	469c2c <_obstack_memory_used@@Base+0xcaec>  // b.none
  469c0c:	ldrsw	x0, [sp, #108]
  469c10:	ldr	x1, [sp, #72]
  469c14:	add	x0, x1, x0
  469c18:	ldrb	w0, [x0]
  469c1c:	and	x0, x0, #0xff
  469c20:	mov	x1, x0
  469c24:	ldr	x0, [sp, #64]
  469c28:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469c2c:	ldr	w0, [sp, #108]
  469c30:	add	w0, w0, #0x1
  469c34:	str	w0, [sp, #108]
  469c38:	ldr	w0, [sp, #108]
  469c3c:	cmp	w0, #0xff
  469c40:	b.le	469be8 <_obstack_memory_used@@Base+0xcaa8>
  469c44:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469c48:	str	wzr, [sp, #108]
  469c4c:	b	469c90 <_obstack_memory_used@@Base+0xcb50>
  469c50:	bl	4047f0 <__ctype_b_loc@plt>
  469c54:	ldr	x1, [x0]
  469c58:	ldrsw	x0, [sp, #108]
  469c5c:	lsl	x0, x0, #1
  469c60:	add	x0, x1, x0
  469c64:	ldrh	w0, [x0]
  469c68:	and	w0, w0, #0x2000
  469c6c:	cmp	w0, #0x0
  469c70:	b.eq	469c84 <_obstack_memory_used@@Base+0xcb44>  // b.none
  469c74:	ldrsw	x0, [sp, #108]
  469c78:	mov	x1, x0
  469c7c:	ldr	x0, [sp, #64]
  469c80:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469c84:	ldr	w0, [sp, #108]
  469c88:	add	w0, w0, #0x1
  469c8c:	str	w0, [sp, #108]
  469c90:	ldr	w0, [sp, #108]
  469c94:	cmp	w0, #0xff
  469c98:	b.le	469c50 <_obstack_memory_used@@Base+0xcb10>
  469c9c:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469ca0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469ca4:	add	x1, x0, #0x7f0
  469ca8:	ldr	x0, [sp, #96]
  469cac:	bl	4047c0 <strcmp@plt>
  469cb0:	cmp	w0, #0x0
  469cb4:	b.ne	469d94 <_obstack_memory_used@@Base+0xcc54>  // b.any
  469cb8:	ldr	x0, [sp, #72]
  469cbc:	cmp	x0, #0x0
  469cc0:	cset	w0, ne  // ne = any
  469cc4:	and	w0, w0, #0xff
  469cc8:	and	x0, x0, #0xff
  469ccc:	cmp	x0, #0x0
  469cd0:	b.eq	469d3c <_obstack_memory_used@@Base+0xcbfc>  // b.none
  469cd4:	str	wzr, [sp, #108]
  469cd8:	b	469d2c <_obstack_memory_used@@Base+0xcbec>
  469cdc:	bl	4047f0 <__ctype_b_loc@plt>
  469ce0:	ldr	x1, [x0]
  469ce4:	ldrsw	x0, [sp, #108]
  469ce8:	lsl	x0, x0, #1
  469cec:	add	x0, x1, x0
  469cf0:	ldrh	w0, [x0]
  469cf4:	and	w0, w0, #0x400
  469cf8:	cmp	w0, #0x0
  469cfc:	b.eq	469d20 <_obstack_memory_used@@Base+0xcbe0>  // b.none
  469d00:	ldrsw	x0, [sp, #108]
  469d04:	ldr	x1, [sp, #72]
  469d08:	add	x0, x1, x0
  469d0c:	ldrb	w0, [x0]
  469d10:	and	x0, x0, #0xff
  469d14:	mov	x1, x0
  469d18:	ldr	x0, [sp, #64]
  469d1c:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469d20:	ldr	w0, [sp, #108]
  469d24:	add	w0, w0, #0x1
  469d28:	str	w0, [sp, #108]
  469d2c:	ldr	w0, [sp, #108]
  469d30:	cmp	w0, #0xff
  469d34:	b.le	469cdc <_obstack_memory_used@@Base+0xcb9c>
  469d38:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469d3c:	str	wzr, [sp, #108]
  469d40:	b	469d84 <_obstack_memory_used@@Base+0xcc44>
  469d44:	bl	4047f0 <__ctype_b_loc@plt>
  469d48:	ldr	x1, [x0]
  469d4c:	ldrsw	x0, [sp, #108]
  469d50:	lsl	x0, x0, #1
  469d54:	add	x0, x1, x0
  469d58:	ldrh	w0, [x0]
  469d5c:	and	w0, w0, #0x400
  469d60:	cmp	w0, #0x0
  469d64:	b.eq	469d78 <_obstack_memory_used@@Base+0xcc38>  // b.none
  469d68:	ldrsw	x0, [sp, #108]
  469d6c:	mov	x1, x0
  469d70:	ldr	x0, [sp, #64]
  469d74:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469d78:	ldr	w0, [sp, #108]
  469d7c:	add	w0, w0, #0x1
  469d80:	str	w0, [sp, #108]
  469d84:	ldr	w0, [sp, #108]
  469d88:	cmp	w0, #0xff
  469d8c:	b.le	469d44 <_obstack_memory_used@@Base+0xcc04>
  469d90:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469d94:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469d98:	add	x1, x0, #0x800
  469d9c:	ldr	x0, [sp, #96]
  469da0:	bl	4047c0 <strcmp@plt>
  469da4:	cmp	w0, #0x0
  469da8:	b.ne	469e88 <_obstack_memory_used@@Base+0xcd48>  // b.any
  469dac:	ldr	x0, [sp, #72]
  469db0:	cmp	x0, #0x0
  469db4:	cset	w0, ne  // ne = any
  469db8:	and	w0, w0, #0xff
  469dbc:	and	x0, x0, #0xff
  469dc0:	cmp	x0, #0x0
  469dc4:	b.eq	469e30 <_obstack_memory_used@@Base+0xccf0>  // b.none
  469dc8:	str	wzr, [sp, #108]
  469dcc:	b	469e20 <_obstack_memory_used@@Base+0xcce0>
  469dd0:	bl	4047f0 <__ctype_b_loc@plt>
  469dd4:	ldr	x1, [x0]
  469dd8:	ldrsw	x0, [sp, #108]
  469ddc:	lsl	x0, x0, #1
  469de0:	add	x0, x1, x0
  469de4:	ldrh	w0, [x0]
  469de8:	and	w0, w0, #0x800
  469dec:	cmp	w0, #0x0
  469df0:	b.eq	469e14 <_obstack_memory_used@@Base+0xccd4>  // b.none
  469df4:	ldrsw	x0, [sp, #108]
  469df8:	ldr	x1, [sp, #72]
  469dfc:	add	x0, x1, x0
  469e00:	ldrb	w0, [x0]
  469e04:	and	x0, x0, #0xff
  469e08:	mov	x1, x0
  469e0c:	ldr	x0, [sp, #64]
  469e10:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469e14:	ldr	w0, [sp, #108]
  469e18:	add	w0, w0, #0x1
  469e1c:	str	w0, [sp, #108]
  469e20:	ldr	w0, [sp, #108]
  469e24:	cmp	w0, #0xff
  469e28:	b.le	469dd0 <_obstack_memory_used@@Base+0xcc90>
  469e2c:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469e30:	str	wzr, [sp, #108]
  469e34:	b	469e78 <_obstack_memory_used@@Base+0xcd38>
  469e38:	bl	4047f0 <__ctype_b_loc@plt>
  469e3c:	ldr	x1, [x0]
  469e40:	ldrsw	x0, [sp, #108]
  469e44:	lsl	x0, x0, #1
  469e48:	add	x0, x1, x0
  469e4c:	ldrh	w0, [x0]
  469e50:	and	w0, w0, #0x800
  469e54:	cmp	w0, #0x0
  469e58:	b.eq	469e6c <_obstack_memory_used@@Base+0xcd2c>  // b.none
  469e5c:	ldrsw	x0, [sp, #108]
  469e60:	mov	x1, x0
  469e64:	ldr	x0, [sp, #64]
  469e68:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469e6c:	ldr	w0, [sp, #108]
  469e70:	add	w0, w0, #0x1
  469e74:	str	w0, [sp, #108]
  469e78:	ldr	w0, [sp, #108]
  469e7c:	cmp	w0, #0xff
  469e80:	b.le	469e38 <_obstack_memory_used@@Base+0xccf8>
  469e84:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469e88:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469e8c:	add	x1, x0, #0x808
  469e90:	ldr	x0, [sp, #96]
  469e94:	bl	4047c0 <strcmp@plt>
  469e98:	cmp	w0, #0x0
  469e9c:	b.ne	469f7c <_obstack_memory_used@@Base+0xce3c>  // b.any
  469ea0:	ldr	x0, [sp, #72]
  469ea4:	cmp	x0, #0x0
  469ea8:	cset	w0, ne  // ne = any
  469eac:	and	w0, w0, #0xff
  469eb0:	and	x0, x0, #0xff
  469eb4:	cmp	x0, #0x0
  469eb8:	b.eq	469f24 <_obstack_memory_used@@Base+0xcde4>  // b.none
  469ebc:	str	wzr, [sp, #108]
  469ec0:	b	469f14 <_obstack_memory_used@@Base+0xcdd4>
  469ec4:	bl	4047f0 <__ctype_b_loc@plt>
  469ec8:	ldr	x1, [x0]
  469ecc:	ldrsw	x0, [sp, #108]
  469ed0:	lsl	x0, x0, #1
  469ed4:	add	x0, x1, x0
  469ed8:	ldrh	w0, [x0]
  469edc:	and	w0, w0, #0x4000
  469ee0:	cmp	w0, #0x0
  469ee4:	b.eq	469f08 <_obstack_memory_used@@Base+0xcdc8>  // b.none
  469ee8:	ldrsw	x0, [sp, #108]
  469eec:	ldr	x1, [sp, #72]
  469ef0:	add	x0, x1, x0
  469ef4:	ldrb	w0, [x0]
  469ef8:	and	x0, x0, #0xff
  469efc:	mov	x1, x0
  469f00:	ldr	x0, [sp, #64]
  469f04:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469f08:	ldr	w0, [sp, #108]
  469f0c:	add	w0, w0, #0x1
  469f10:	str	w0, [sp, #108]
  469f14:	ldr	w0, [sp, #108]
  469f18:	cmp	w0, #0xff
  469f1c:	b.le	469ec4 <_obstack_memory_used@@Base+0xcd84>
  469f20:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469f24:	str	wzr, [sp, #108]
  469f28:	b	469f6c <_obstack_memory_used@@Base+0xce2c>
  469f2c:	bl	4047f0 <__ctype_b_loc@plt>
  469f30:	ldr	x1, [x0]
  469f34:	ldrsw	x0, [sp, #108]
  469f38:	lsl	x0, x0, #1
  469f3c:	add	x0, x1, x0
  469f40:	ldrh	w0, [x0]
  469f44:	and	w0, w0, #0x4000
  469f48:	cmp	w0, #0x0
  469f4c:	b.eq	469f60 <_obstack_memory_used@@Base+0xce20>  // b.none
  469f50:	ldrsw	x0, [sp, #108]
  469f54:	mov	x1, x0
  469f58:	ldr	x0, [sp, #64]
  469f5c:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469f60:	ldr	w0, [sp, #108]
  469f64:	add	w0, w0, #0x1
  469f68:	str	w0, [sp, #108]
  469f6c:	ldr	w0, [sp, #108]
  469f70:	cmp	w0, #0xff
  469f74:	b.le	469f2c <_obstack_memory_used@@Base+0xcdec>
  469f78:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  469f7c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  469f80:	add	x1, x0, #0x7e0
  469f84:	ldr	x0, [sp, #96]
  469f88:	bl	4047c0 <strcmp@plt>
  469f8c:	cmp	w0, #0x0
  469f90:	b.ne	46a070 <_obstack_memory_used@@Base+0xcf30>  // b.any
  469f94:	ldr	x0, [sp, #72]
  469f98:	cmp	x0, #0x0
  469f9c:	cset	w0, ne  // ne = any
  469fa0:	and	w0, w0, #0xff
  469fa4:	and	x0, x0, #0xff
  469fa8:	cmp	x0, #0x0
  469fac:	b.eq	46a018 <_obstack_memory_used@@Base+0xced8>  // b.none
  469fb0:	str	wzr, [sp, #108]
  469fb4:	b	46a008 <_obstack_memory_used@@Base+0xcec8>
  469fb8:	bl	4047f0 <__ctype_b_loc@plt>
  469fbc:	ldr	x1, [x0]
  469fc0:	ldrsw	x0, [sp, #108]
  469fc4:	lsl	x0, x0, #1
  469fc8:	add	x0, x1, x0
  469fcc:	ldrh	w0, [x0]
  469fd0:	and	w0, w0, #0x100
  469fd4:	cmp	w0, #0x0
  469fd8:	b.eq	469ffc <_obstack_memory_used@@Base+0xcebc>  // b.none
  469fdc:	ldrsw	x0, [sp, #108]
  469fe0:	ldr	x1, [sp, #72]
  469fe4:	add	x0, x1, x0
  469fe8:	ldrb	w0, [x0]
  469fec:	and	x0, x0, #0xff
  469ff0:	mov	x1, x0
  469ff4:	ldr	x0, [sp, #64]
  469ff8:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  469ffc:	ldr	w0, [sp, #108]
  46a000:	add	w0, w0, #0x1
  46a004:	str	w0, [sp, #108]
  46a008:	ldr	w0, [sp, #108]
  46a00c:	cmp	w0, #0xff
  46a010:	b.le	469fb8 <_obstack_memory_used@@Base+0xce78>
  46a014:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a018:	str	wzr, [sp, #108]
  46a01c:	b	46a060 <_obstack_memory_used@@Base+0xcf20>
  46a020:	bl	4047f0 <__ctype_b_loc@plt>
  46a024:	ldr	x1, [x0]
  46a028:	ldrsw	x0, [sp, #108]
  46a02c:	lsl	x0, x0, #1
  46a030:	add	x0, x1, x0
  46a034:	ldrh	w0, [x0]
  46a038:	and	w0, w0, #0x100
  46a03c:	cmp	w0, #0x0
  46a040:	b.eq	46a054 <_obstack_memory_used@@Base+0xcf14>  // b.none
  46a044:	ldrsw	x0, [sp, #108]
  46a048:	mov	x1, x0
  46a04c:	ldr	x0, [sp, #64]
  46a050:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a054:	ldr	w0, [sp, #108]
  46a058:	add	w0, w0, #0x1
  46a05c:	str	w0, [sp, #108]
  46a060:	ldr	w0, [sp, #108]
  46a064:	cmp	w0, #0xff
  46a068:	b.le	46a020 <_obstack_memory_used@@Base+0xcee0>
  46a06c:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a070:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46a074:	add	x1, x0, #0x810
  46a078:	ldr	x0, [sp, #96]
  46a07c:	bl	4047c0 <strcmp@plt>
  46a080:	cmp	w0, #0x0
  46a084:	b.ne	46a164 <_obstack_memory_used@@Base+0xd024>  // b.any
  46a088:	ldr	x0, [sp, #72]
  46a08c:	cmp	x0, #0x0
  46a090:	cset	w0, ne  // ne = any
  46a094:	and	w0, w0, #0xff
  46a098:	and	x0, x0, #0xff
  46a09c:	cmp	x0, #0x0
  46a0a0:	b.eq	46a10c <_obstack_memory_used@@Base+0xcfcc>  // b.none
  46a0a4:	str	wzr, [sp, #108]
  46a0a8:	b	46a0fc <_obstack_memory_used@@Base+0xcfbc>
  46a0ac:	bl	4047f0 <__ctype_b_loc@plt>
  46a0b0:	ldr	x1, [x0]
  46a0b4:	ldrsw	x0, [sp, #108]
  46a0b8:	lsl	x0, x0, #1
  46a0bc:	add	x0, x1, x0
  46a0c0:	ldrh	w0, [x0]
  46a0c4:	and	w0, w0, #0x1
  46a0c8:	cmp	w0, #0x0
  46a0cc:	b.eq	46a0f0 <_obstack_memory_used@@Base+0xcfb0>  // b.none
  46a0d0:	ldrsw	x0, [sp, #108]
  46a0d4:	ldr	x1, [sp, #72]
  46a0d8:	add	x0, x1, x0
  46a0dc:	ldrb	w0, [x0]
  46a0e0:	and	x0, x0, #0xff
  46a0e4:	mov	x1, x0
  46a0e8:	ldr	x0, [sp, #64]
  46a0ec:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a0f0:	ldr	w0, [sp, #108]
  46a0f4:	add	w0, w0, #0x1
  46a0f8:	str	w0, [sp, #108]
  46a0fc:	ldr	w0, [sp, #108]
  46a100:	cmp	w0, #0xff
  46a104:	b.le	46a0ac <_obstack_memory_used@@Base+0xcf6c>
  46a108:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a10c:	str	wzr, [sp, #108]
  46a110:	b	46a154 <_obstack_memory_used@@Base+0xd014>
  46a114:	bl	4047f0 <__ctype_b_loc@plt>
  46a118:	ldr	x1, [x0]
  46a11c:	ldrsw	x0, [sp, #108]
  46a120:	lsl	x0, x0, #1
  46a124:	add	x0, x1, x0
  46a128:	ldrh	w0, [x0]
  46a12c:	and	w0, w0, #0x1
  46a130:	cmp	w0, #0x0
  46a134:	b.eq	46a148 <_obstack_memory_used@@Base+0xd008>  // b.none
  46a138:	ldrsw	x0, [sp, #108]
  46a13c:	mov	x1, x0
  46a140:	ldr	x0, [sp, #64]
  46a144:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a148:	ldr	w0, [sp, #108]
  46a14c:	add	w0, w0, #0x1
  46a150:	str	w0, [sp, #108]
  46a154:	ldr	w0, [sp, #108]
  46a158:	cmp	w0, #0xff
  46a15c:	b.le	46a114 <_obstack_memory_used@@Base+0xcfd4>
  46a160:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a164:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46a168:	add	x1, x0, #0x818
  46a16c:	ldr	x0, [sp, #96]
  46a170:	bl	4047c0 <strcmp@plt>
  46a174:	cmp	w0, #0x0
  46a178:	b.ne	46a258 <_obstack_memory_used@@Base+0xd118>  // b.any
  46a17c:	ldr	x0, [sp, #72]
  46a180:	cmp	x0, #0x0
  46a184:	cset	w0, ne  // ne = any
  46a188:	and	w0, w0, #0xff
  46a18c:	and	x0, x0, #0xff
  46a190:	cmp	x0, #0x0
  46a194:	b.eq	46a200 <_obstack_memory_used@@Base+0xd0c0>  // b.none
  46a198:	str	wzr, [sp, #108]
  46a19c:	b	46a1f0 <_obstack_memory_used@@Base+0xd0b0>
  46a1a0:	bl	4047f0 <__ctype_b_loc@plt>
  46a1a4:	ldr	x1, [x0]
  46a1a8:	ldrsw	x0, [sp, #108]
  46a1ac:	lsl	x0, x0, #1
  46a1b0:	add	x0, x1, x0
  46a1b4:	ldrh	w0, [x0]
  46a1b8:	sxth	w0, w0
  46a1bc:	cmp	w0, #0x0
  46a1c0:	b.ge	46a1e4 <_obstack_memory_used@@Base+0xd0a4>  // b.tcont
  46a1c4:	ldrsw	x0, [sp, #108]
  46a1c8:	ldr	x1, [sp, #72]
  46a1cc:	add	x0, x1, x0
  46a1d0:	ldrb	w0, [x0]
  46a1d4:	and	x0, x0, #0xff
  46a1d8:	mov	x1, x0
  46a1dc:	ldr	x0, [sp, #64]
  46a1e0:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a1e4:	ldr	w0, [sp, #108]
  46a1e8:	add	w0, w0, #0x1
  46a1ec:	str	w0, [sp, #108]
  46a1f0:	ldr	w0, [sp, #108]
  46a1f4:	cmp	w0, #0xff
  46a1f8:	b.le	46a1a0 <_obstack_memory_used@@Base+0xd060>
  46a1fc:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a200:	str	wzr, [sp, #108]
  46a204:	b	46a248 <_obstack_memory_used@@Base+0xd108>
  46a208:	bl	4047f0 <__ctype_b_loc@plt>
  46a20c:	ldr	x1, [x0]
  46a210:	ldrsw	x0, [sp, #108]
  46a214:	lsl	x0, x0, #1
  46a218:	add	x0, x1, x0
  46a21c:	ldrh	w0, [x0]
  46a220:	sxth	w0, w0
  46a224:	cmp	w0, #0x0
  46a228:	b.ge	46a23c <_obstack_memory_used@@Base+0xd0fc>  // b.tcont
  46a22c:	ldrsw	x0, [sp, #108]
  46a230:	mov	x1, x0
  46a234:	ldr	x0, [sp, #64]
  46a238:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a23c:	ldr	w0, [sp, #108]
  46a240:	add	w0, w0, #0x1
  46a244:	str	w0, [sp, #108]
  46a248:	ldr	w0, [sp, #108]
  46a24c:	cmp	w0, #0xff
  46a250:	b.le	46a208 <_obstack_memory_used@@Base+0xd0c8>
  46a254:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a258:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46a25c:	add	x1, x0, #0x820
  46a260:	ldr	x0, [sp, #96]
  46a264:	bl	4047c0 <strcmp@plt>
  46a268:	cmp	w0, #0x0
  46a26c:	b.ne	46a34c <_obstack_memory_used@@Base+0xd20c>  // b.any
  46a270:	ldr	x0, [sp, #72]
  46a274:	cmp	x0, #0x0
  46a278:	cset	w0, ne  // ne = any
  46a27c:	and	w0, w0, #0xff
  46a280:	and	x0, x0, #0xff
  46a284:	cmp	x0, #0x0
  46a288:	b.eq	46a2f4 <_obstack_memory_used@@Base+0xd1b4>  // b.none
  46a28c:	str	wzr, [sp, #108]
  46a290:	b	46a2e4 <_obstack_memory_used@@Base+0xd1a4>
  46a294:	bl	4047f0 <__ctype_b_loc@plt>
  46a298:	ldr	x1, [x0]
  46a29c:	ldrsw	x0, [sp, #108]
  46a2a0:	lsl	x0, x0, #1
  46a2a4:	add	x0, x1, x0
  46a2a8:	ldrh	w0, [x0]
  46a2ac:	and	w0, w0, #0x4
  46a2b0:	cmp	w0, #0x0
  46a2b4:	b.eq	46a2d8 <_obstack_memory_used@@Base+0xd198>  // b.none
  46a2b8:	ldrsw	x0, [sp, #108]
  46a2bc:	ldr	x1, [sp, #72]
  46a2c0:	add	x0, x1, x0
  46a2c4:	ldrb	w0, [x0]
  46a2c8:	and	x0, x0, #0xff
  46a2cc:	mov	x1, x0
  46a2d0:	ldr	x0, [sp, #64]
  46a2d4:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a2d8:	ldr	w0, [sp, #108]
  46a2dc:	add	w0, w0, #0x1
  46a2e0:	str	w0, [sp, #108]
  46a2e4:	ldr	w0, [sp, #108]
  46a2e8:	cmp	w0, #0xff
  46a2ec:	b.le	46a294 <_obstack_memory_used@@Base+0xd154>
  46a2f0:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a2f4:	str	wzr, [sp, #108]
  46a2f8:	b	46a33c <_obstack_memory_used@@Base+0xd1fc>
  46a2fc:	bl	4047f0 <__ctype_b_loc@plt>
  46a300:	ldr	x1, [x0]
  46a304:	ldrsw	x0, [sp, #108]
  46a308:	lsl	x0, x0, #1
  46a30c:	add	x0, x1, x0
  46a310:	ldrh	w0, [x0]
  46a314:	and	w0, w0, #0x4
  46a318:	cmp	w0, #0x0
  46a31c:	b.eq	46a330 <_obstack_memory_used@@Base+0xd1f0>  // b.none
  46a320:	ldrsw	x0, [sp, #108]
  46a324:	mov	x1, x0
  46a328:	ldr	x0, [sp, #64]
  46a32c:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a330:	ldr	w0, [sp, #108]
  46a334:	add	w0, w0, #0x1
  46a338:	str	w0, [sp, #108]
  46a33c:	ldr	w0, [sp, #108]
  46a340:	cmp	w0, #0xff
  46a344:	b.le	46a2fc <_obstack_memory_used@@Base+0xd1bc>
  46a348:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a34c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46a350:	add	x1, x0, #0x828
  46a354:	ldr	x0, [sp, #96]
  46a358:	bl	4047c0 <strcmp@plt>
  46a35c:	cmp	w0, #0x0
  46a360:	b.ne	46a440 <_obstack_memory_used@@Base+0xd300>  // b.any
  46a364:	ldr	x0, [sp, #72]
  46a368:	cmp	x0, #0x0
  46a36c:	cset	w0, ne  // ne = any
  46a370:	and	w0, w0, #0xff
  46a374:	and	x0, x0, #0xff
  46a378:	cmp	x0, #0x0
  46a37c:	b.eq	46a3e8 <_obstack_memory_used@@Base+0xd2a8>  // b.none
  46a380:	str	wzr, [sp, #108]
  46a384:	b	46a3d8 <_obstack_memory_used@@Base+0xd298>
  46a388:	bl	4047f0 <__ctype_b_loc@plt>
  46a38c:	ldr	x1, [x0]
  46a390:	ldrsw	x0, [sp, #108]
  46a394:	lsl	x0, x0, #1
  46a398:	add	x0, x1, x0
  46a39c:	ldrh	w0, [x0]
  46a3a0:	and	w0, w0, #0x1000
  46a3a4:	cmp	w0, #0x0
  46a3a8:	b.eq	46a3cc <_obstack_memory_used@@Base+0xd28c>  // b.none
  46a3ac:	ldrsw	x0, [sp, #108]
  46a3b0:	ldr	x1, [sp, #72]
  46a3b4:	add	x0, x1, x0
  46a3b8:	ldrb	w0, [x0]
  46a3bc:	and	x0, x0, #0xff
  46a3c0:	mov	x1, x0
  46a3c4:	ldr	x0, [sp, #64]
  46a3c8:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a3cc:	ldr	w0, [sp, #108]
  46a3d0:	add	w0, w0, #0x1
  46a3d4:	str	w0, [sp, #108]
  46a3d8:	ldr	w0, [sp, #108]
  46a3dc:	cmp	w0, #0xff
  46a3e0:	b.le	46a388 <_obstack_memory_used@@Base+0xd248>
  46a3e4:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a3e8:	str	wzr, [sp, #108]
  46a3ec:	b	46a430 <_obstack_memory_used@@Base+0xd2f0>
  46a3f0:	bl	4047f0 <__ctype_b_loc@plt>
  46a3f4:	ldr	x1, [x0]
  46a3f8:	ldrsw	x0, [sp, #108]
  46a3fc:	lsl	x0, x0, #1
  46a400:	add	x0, x1, x0
  46a404:	ldrh	w0, [x0]
  46a408:	and	w0, w0, #0x1000
  46a40c:	cmp	w0, #0x0
  46a410:	b.eq	46a424 <_obstack_memory_used@@Base+0xd2e4>  // b.none
  46a414:	ldrsw	x0, [sp, #108]
  46a418:	mov	x1, x0
  46a41c:	ldr	x0, [sp, #64]
  46a420:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a424:	ldr	w0, [sp, #108]
  46a428:	add	w0, w0, #0x1
  46a42c:	str	w0, [sp, #108]
  46a430:	ldr	w0, [sp, #108]
  46a434:	cmp	w0, #0xff
  46a438:	b.le	46a3f0 <_obstack_memory_used@@Base+0xd2b0>
  46a43c:	b	46a448 <_obstack_memory_used@@Base+0xd308>
  46a440:	mov	w0, #0x4                   	// #4
  46a444:	b	46a44c <_obstack_memory_used@@Base+0xd30c>
  46a448:	mov	w0, #0x0                   	// #0
  46a44c:	ldr	x19, [sp, #16]
  46a450:	ldp	x29, x30, [sp], #112
  46a454:	ret
  46a458:	stp	x29, x30, [sp, #-128]!
  46a45c:	mov	x29, sp
  46a460:	str	x0, [sp, #56]
  46a464:	str	x1, [sp, #48]
  46a468:	str	x2, [sp, #40]
  46a46c:	str	x3, [sp, #32]
  46a470:	strb	w4, [sp, #31]
  46a474:	str	x5, [sp, #16]
  46a478:	str	xzr, [sp, #80]
  46a47c:	mov	x1, #0x1                   	// #1
  46a480:	mov	x0, #0x20                  	// #32
  46a484:	bl	404560 <calloc@plt>
  46a488:	str	x0, [sp, #120]
  46a48c:	ldr	x0, [sp, #120]
  46a490:	cmp	x0, #0x0
  46a494:	cset	w0, eq  // eq = none
  46a498:	and	w0, w0, #0xff
  46a49c:	and	x0, x0, #0xff
  46a4a0:	cmp	x0, #0x0
  46a4a4:	b.eq	46a4bc <_obstack_memory_used@@Base+0xd37c>  // b.none
  46a4a8:	ldr	x0, [sp, #16]
  46a4ac:	mov	w1, #0xc                   	// #12
  46a4b0:	str	w1, [x0]
  46a4b4:	mov	x0, #0x0                   	// #0
  46a4b8:	b	46a710 <_obstack_memory_used@@Base+0xd5d0>
  46a4bc:	mov	x1, #0x1                   	// #1
  46a4c0:	mov	x0, #0x50                  	// #80
  46a4c4:	bl	404560 <calloc@plt>
  46a4c8:	str	x0, [sp, #112]
  46a4cc:	ldr	x0, [sp, #112]
  46a4d0:	cmp	x0, #0x0
  46a4d4:	cset	w0, eq  // eq = none
  46a4d8:	and	w0, w0, #0xff
  46a4dc:	and	x0, x0, #0xff
  46a4e0:	cmp	x0, #0x0
  46a4e4:	b.eq	46a504 <_obstack_memory_used@@Base+0xd3c4>  // b.none
  46a4e8:	ldr	x0, [sp, #120]
  46a4ec:	bl	404880 <free@plt>
  46a4f0:	ldr	x0, [sp, #16]
  46a4f4:	mov	w1, #0xc                   	// #12
  46a4f8:	str	w1, [x0]
  46a4fc:	mov	x0, #0x0                   	// #0
  46a500:	b	46a710 <_obstack_memory_used@@Base+0xd5d0>
  46a504:	ldr	x1, [sp, #112]
  46a508:	ldrb	w0, [x1, #32]
  46a50c:	ldrb	w2, [sp, #31]
  46a510:	bfxil	w0, w2, #0, #1
  46a514:	strb	w0, [x1, #32]
  46a518:	add	x0, sp, #0x50
  46a51c:	mov	x5, #0x0                   	// #0
  46a520:	ldr	x4, [sp, #40]
  46a524:	mov	x3, x0
  46a528:	ldr	x2, [sp, #112]
  46a52c:	ldr	x1, [sp, #120]
  46a530:	ldr	x0, [sp, #48]
  46a534:	bl	469790 <_obstack_memory_used@@Base+0xc650>
  46a538:	str	w0, [sp, #108]
  46a53c:	ldr	w0, [sp, #108]
  46a540:	cmp	w0, #0x0
  46a544:	cset	w0, ne  // ne = any
  46a548:	and	w0, w0, #0xff
  46a54c:	and	x0, x0, #0xff
  46a550:	cmp	x0, #0x0
  46a554:	b.eq	46a5a0 <_obstack_memory_used@@Base+0xd460>  // b.none
  46a558:	ldr	x0, [sp, #120]
  46a55c:	bl	404880 <free@plt>
  46a560:	ldr	x0, [sp, #112]
  46a564:	bl	46a834 <_obstack_memory_used@@Base+0xd6f4>
  46a568:	ldr	x0, [sp, #16]
  46a56c:	ldr	w1, [sp, #108]
  46a570:	str	w1, [x0]
  46a574:	mov	x0, #0x0                   	// #0
  46a578:	b	46a710 <_obstack_memory_used@@Base+0xd5d0>
  46a57c:	ldr	x0, [sp, #32]
  46a580:	ldrb	w0, [x0]
  46a584:	and	x0, x0, #0xff
  46a588:	mov	x1, x0
  46a58c:	ldr	x0, [sp, #120]
  46a590:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  46a594:	ldr	x0, [sp, #32]
  46a598:	add	x0, x0, #0x1
  46a59c:	str	x0, [sp, #32]
  46a5a0:	ldr	x0, [sp, #32]
  46a5a4:	ldrb	w0, [x0]
  46a5a8:	cmp	w0, #0x0
  46a5ac:	b.ne	46a57c <_obstack_memory_used@@Base+0xd43c>  // b.any
  46a5b0:	ldrb	w0, [sp, #31]
  46a5b4:	cmp	w0, #0x0
  46a5b8:	b.eq	46a5c4 <_obstack_memory_used@@Base+0xd484>  // b.none
  46a5bc:	ldr	x0, [sp, #120]
  46a5c0:	bl	45d520 <_obstack_memory_used@@Base+0x3e0>
  46a5c4:	ldr	x0, [sp, #56]
  46a5c8:	ldr	w0, [x0, #180]
  46a5cc:	cmp	w0, #0x1
  46a5d0:	b.le	46a5e8 <_obstack_memory_used@@Base+0xd4a8>
  46a5d4:	ldr	x0, [sp, #56]
  46a5d8:	ldr	x0, [x0, #120]
  46a5dc:	mov	x1, x0
  46a5e0:	ldr	x0, [sp, #120]
  46a5e4:	bl	45d600 <_obstack_memory_used@@Base+0x4c0>
  46a5e8:	mov	w0, #0x3                   	// #3
  46a5ec:	strb	w0, [sp, #72]
  46a5f0:	ldr	x0, [sp, #120]
  46a5f4:	str	x0, [sp, #64]
  46a5f8:	add	x0, sp, #0x40
  46a5fc:	mov	x3, x0
  46a600:	mov	x2, #0x0                   	// #0
  46a604:	mov	x1, #0x0                   	// #0
  46a608:	ldr	x0, [sp, #56]
  46a60c:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  46a610:	str	x0, [sp, #96]
  46a614:	ldr	x0, [sp, #96]
  46a618:	cmp	x0, #0x0
  46a61c:	cset	w0, eq  // eq = none
  46a620:	and	w0, w0, #0xff
  46a624:	and	x0, x0, #0xff
  46a628:	cmp	x0, #0x0
  46a62c:	b.ne	46a6e4 <_obstack_memory_used@@Base+0xd5a4>  // b.any
  46a630:	ldr	x0, [sp, #56]
  46a634:	ldr	w0, [x0, #180]
  46a638:	cmp	w0, #0x1
  46a63c:	b.le	46a6d4 <_obstack_memory_used@@Base+0xd594>
  46a640:	mov	w0, #0x6                   	// #6
  46a644:	strb	w0, [sp, #72]
  46a648:	ldr	x0, [sp, #112]
  46a64c:	str	x0, [sp, #64]
  46a650:	ldr	x0, [sp, #56]
  46a654:	ldrb	w1, [x0, #176]
  46a658:	orr	w1, w1, #0x2
  46a65c:	strb	w1, [x0, #176]
  46a660:	add	x0, sp, #0x40
  46a664:	mov	x3, x0
  46a668:	mov	x2, #0x0                   	// #0
  46a66c:	mov	x1, #0x0                   	// #0
  46a670:	ldr	x0, [sp, #56]
  46a674:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  46a678:	str	x0, [sp, #88]
  46a67c:	ldr	x0, [sp, #88]
  46a680:	cmp	x0, #0x0
  46a684:	cset	w0, eq  // eq = none
  46a688:	and	w0, w0, #0xff
  46a68c:	and	x0, x0, #0xff
  46a690:	cmp	x0, #0x0
  46a694:	b.ne	46a6ec <_obstack_memory_used@@Base+0xd5ac>  // b.any
  46a698:	mov	w3, #0xa                   	// #10
  46a69c:	ldr	x2, [sp, #88]
  46a6a0:	ldr	x1, [sp, #96]
  46a6a4:	ldr	x0, [sp, #56]
  46a6a8:	bl	46a884 <_obstack_memory_used@@Base+0xd744>
  46a6ac:	str	x0, [sp, #96]
  46a6b0:	ldr	x0, [sp, #88]
  46a6b4:	cmp	x0, #0x0
  46a6b8:	cset	w0, ne  // ne = any
  46a6bc:	and	w0, w0, #0xff
  46a6c0:	and	x0, x0, #0xff
  46a6c4:	cmp	x0, #0x0
  46a6c8:	b.eq	46a6f0 <_obstack_memory_used@@Base+0xd5b0>  // b.none
  46a6cc:	ldr	x0, [sp, #96]
  46a6d0:	b	46a710 <_obstack_memory_used@@Base+0xd5d0>
  46a6d4:	ldr	x0, [sp, #112]
  46a6d8:	bl	46a834 <_obstack_memory_used@@Base+0xd6f4>
  46a6dc:	ldr	x0, [sp, #96]
  46a6e0:	b	46a710 <_obstack_memory_used@@Base+0xd5d0>
  46a6e4:	nop
  46a6e8:	b	46a6f0 <_obstack_memory_used@@Base+0xd5b0>
  46a6ec:	nop
  46a6f0:	ldr	x0, [sp, #120]
  46a6f4:	bl	404880 <free@plt>
  46a6f8:	ldr	x0, [sp, #112]
  46a6fc:	bl	46a834 <_obstack_memory_used@@Base+0xd6f4>
  46a700:	ldr	x0, [sp, #16]
  46a704:	mov	w1, #0xc                   	// #12
  46a708:	str	w1, [x0]
  46a70c:	mov	x0, #0x0                   	// #0
  46a710:	ldp	x29, x30, [sp], #128
  46a714:	ret
  46a718:	stp	x29, x30, [sp, #-64]!
  46a71c:	mov	x29, sp
  46a720:	str	x0, [sp, #40]
  46a724:	str	x1, [sp, #32]
  46a728:	str	x2, [sp, #24]
  46a72c:	mov	x0, #0xffffffffffffffff    	// #-1
  46a730:	str	x0, [sp, #56]
  46a734:	ldr	x2, [sp, #24]
  46a738:	ldr	x1, [sp, #40]
  46a73c:	ldr	x0, [sp, #32]
  46a740:	bl	4660cc <_obstack_memory_used@@Base+0x8f8c>
  46a744:	ldr	x0, [sp, #32]
  46a748:	ldrb	w0, [x0]
  46a74c:	strb	w0, [sp, #55]
  46a750:	ldr	x0, [sp, #32]
  46a754:	ldrb	w0, [x0, #8]
  46a758:	cmp	w0, #0x2
  46a75c:	cset	w0, eq  // eq = none
  46a760:	and	w0, w0, #0xff
  46a764:	and	x0, x0, #0xff
  46a768:	cmp	x0, #0x0
  46a76c:	b.eq	46a778 <_obstack_memory_used@@Base+0xd638>  // b.none
  46a770:	mov	x0, #0xfffffffffffffffe    	// #-2
  46a774:	b	46a82c <_obstack_memory_used@@Base+0xd6ec>
  46a778:	ldr	x0, [sp, #32]
  46a77c:	ldrb	w0, [x0, #8]
  46a780:	cmp	w0, #0x18
  46a784:	b.eq	46a828 <_obstack_memory_used@@Base+0xd6e8>  // b.none
  46a788:	ldrb	w0, [sp, #55]
  46a78c:	cmp	w0, #0x2c
  46a790:	b.eq	46a828 <_obstack_memory_used@@Base+0xd6e8>  // b.none
  46a794:	ldr	x0, [sp, #32]
  46a798:	ldrb	w0, [x0, #8]
  46a79c:	cmp	w0, #0x1
  46a7a0:	b.ne	46a81c <_obstack_memory_used@@Base+0xd6dc>  // b.any
  46a7a4:	ldrb	w0, [sp, #55]
  46a7a8:	cmp	w0, #0x2f
  46a7ac:	b.ls	46a81c <_obstack_memory_used@@Base+0xd6dc>  // b.plast
  46a7b0:	ldrb	w0, [sp, #55]
  46a7b4:	cmp	w0, #0x39
  46a7b8:	b.hi	46a81c <_obstack_memory_used@@Base+0xd6dc>  // b.pmore
  46a7bc:	ldr	x0, [sp, #56]
  46a7c0:	cmn	x0, #0x2
  46a7c4:	b.eq	46a81c <_obstack_memory_used@@Base+0xd6dc>  // b.none
  46a7c8:	ldr	x0, [sp, #56]
  46a7cc:	cmn	x0, #0x1
  46a7d0:	b.ne	46a7e4 <_obstack_memory_used@@Base+0xd6a4>  // b.any
  46a7d4:	ldrb	w0, [sp, #55]
  46a7d8:	sub	w0, w0, #0x30
  46a7dc:	sxtw	x0, w0
  46a7e0:	b	46a820 <_obstack_memory_used@@Base+0xd6e0>
  46a7e4:	ldr	x1, [sp, #56]
  46a7e8:	mov	x0, x1
  46a7ec:	lsl	x0, x0, #2
  46a7f0:	add	x0, x0, x1
  46a7f4:	lsl	x0, x0, #1
  46a7f8:	mov	x1, x0
  46a7fc:	ldrb	w0, [sp, #55]
  46a800:	add	x0, x1, x0
  46a804:	mov	x2, #0x8030                	// #32816
  46a808:	mov	x1, #0x8030                	// #32816
  46a80c:	cmp	x0, x2
  46a810:	csel	x0, x0, x1, le
  46a814:	sub	x0, x0, #0x30
  46a818:	b	46a820 <_obstack_memory_used@@Base+0xd6e0>
  46a81c:	mov	x0, #0xfffffffffffffffe    	// #-2
  46a820:	str	x0, [sp, #56]
  46a824:	b	46a734 <_obstack_memory_used@@Base+0xd5f4>
  46a828:	ldr	x0, [sp, #56]
  46a82c:	ldp	x29, x30, [sp], #64
  46a830:	ret
  46a834:	stp	x29, x30, [sp, #-32]!
  46a838:	mov	x29, sp
  46a83c:	str	x0, [sp, #24]
  46a840:	ldr	x0, [sp, #24]
  46a844:	ldr	x0, [x0]
  46a848:	bl	404880 <free@plt>
  46a84c:	ldr	x0, [sp, #24]
  46a850:	ldr	x0, [x0, #8]
  46a854:	bl	404880 <free@plt>
  46a858:	ldr	x0, [sp, #24]
  46a85c:	ldr	x0, [x0, #16]
  46a860:	bl	404880 <free@plt>
  46a864:	ldr	x0, [sp, #24]
  46a868:	ldr	x0, [x0, #24]
  46a86c:	bl	404880 <free@plt>
  46a870:	ldr	x0, [sp, #24]
  46a874:	bl	404880 <free@plt>
  46a878:	nop
  46a87c:	ldp	x29, x30, [sp], #32
  46a880:	ret
  46a884:	stp	x29, x30, [sp, #-64]!
  46a888:	mov	x29, sp
  46a88c:	str	x0, [sp, #40]
  46a890:	str	x1, [sp, #32]
  46a894:	str	x2, [sp, #24]
  46a898:	str	w3, [sp, #20]
  46a89c:	ldr	w0, [sp, #20]
  46a8a0:	and	w0, w0, #0xff
  46a8a4:	strb	w0, [sp, #56]
  46a8a8:	add	x0, sp, #0x30
  46a8ac:	mov	x3, x0
  46a8b0:	ldr	x2, [sp, #24]
  46a8b4:	ldr	x1, [sp, #32]
  46a8b8:	ldr	x0, [sp, #40]
  46a8bc:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  46a8c0:	ldp	x29, x30, [sp], #64
  46a8c4:	ret
  46a8c8:	stp	x29, x30, [sp, #-64]!
  46a8cc:	mov	x29, sp
  46a8d0:	str	x0, [sp, #40]
  46a8d4:	str	x1, [sp, #32]
  46a8d8:	str	x2, [sp, #24]
  46a8dc:	str	x3, [sp, #16]
  46a8e0:	ldr	x0, [sp, #40]
  46a8e4:	ldr	w0, [x0, #128]
  46a8e8:	cmp	w0, #0xf
  46a8ec:	cset	w0, eq  // eq = none
  46a8f0:	and	w0, w0, #0xff
  46a8f4:	and	x0, x0, #0xff
  46a8f8:	cmp	x0, #0x0
  46a8fc:	b.eq	46a944 <_obstack_memory_used@@Base+0xd804>  // b.none
  46a900:	mov	x0, #0x3c8                 	// #968
  46a904:	bl	4043f0 <malloc@plt>
  46a908:	str	x0, [sp, #56]
  46a90c:	ldr	x0, [sp, #56]
  46a910:	cmp	x0, #0x0
  46a914:	b.ne	46a920 <_obstack_memory_used@@Base+0xd7e0>  // b.any
  46a918:	mov	x0, #0x0                   	// #0
  46a91c:	b	46aa14 <_obstack_memory_used@@Base+0xd8d4>
  46a920:	ldr	x0, [sp, #40]
  46a924:	ldr	x1, [x0, #112]
  46a928:	ldr	x0, [sp, #56]
  46a92c:	str	x1, [x0]
  46a930:	ldr	x0, [sp, #40]
  46a934:	ldr	x1, [sp, #56]
  46a938:	str	x1, [x0, #112]
  46a93c:	ldr	x0, [sp, #40]
  46a940:	str	wzr, [x0, #128]
  46a944:	ldr	x0, [sp, #40]
  46a948:	ldr	x1, [x0, #112]
  46a94c:	ldr	x0, [sp, #40]
  46a950:	ldr	w0, [x0, #128]
  46a954:	add	w3, w0, #0x1
  46a958:	ldr	x2, [sp, #40]
  46a95c:	str	w3, [x2, #128]
  46a960:	sxtw	x0, w0
  46a964:	lsl	x0, x0, #6
  46a968:	add	x0, x1, x0
  46a96c:	add	x0, x0, #0x8
  46a970:	str	x0, [sp, #48]
  46a974:	ldr	x0, [sp, #48]
  46a978:	str	xzr, [x0]
  46a97c:	ldr	x0, [sp, #48]
  46a980:	ldr	x1, [sp, #32]
  46a984:	str	x1, [x0, #8]
  46a988:	ldr	x0, [sp, #48]
  46a98c:	ldr	x1, [sp, #24]
  46a990:	str	x1, [x0, #16]
  46a994:	ldr	x2, [sp, #48]
  46a998:	ldr	x0, [sp, #16]
  46a99c:	ldp	x0, x1, [x0]
  46a9a0:	stp	x0, x1, [x2, #40]
  46a9a4:	ldr	x0, [sp, #48]
  46a9a8:	ldrb	w1, [x0, #50]
  46a9ac:	and	w1, w1, #0xfffffffb
  46a9b0:	strb	w1, [x0, #50]
  46a9b4:	ldr	x0, [sp, #48]
  46a9b8:	ldrb	w1, [x0, #50]
  46a9bc:	and	w1, w1, #0xfffffff7
  46a9c0:	strb	w1, [x0, #50]
  46a9c4:	ldr	x0, [sp, #48]
  46a9c8:	str	xzr, [x0, #24]
  46a9cc:	ldr	x0, [sp, #48]
  46a9d0:	str	xzr, [x0, #32]
  46a9d4:	ldr	x0, [sp, #48]
  46a9d8:	mov	x1, #0xffffffffffffffff    	// #-1
  46a9dc:	str	x1, [x0, #56]
  46a9e0:	ldr	x0, [sp, #32]
  46a9e4:	cmp	x0, #0x0
  46a9e8:	b.eq	46a9f8 <_obstack_memory_used@@Base+0xd8b8>  // b.none
  46a9ec:	ldr	x0, [sp, #32]
  46a9f0:	ldr	x1, [sp, #48]
  46a9f4:	str	x1, [x0]
  46a9f8:	ldr	x0, [sp, #24]
  46a9fc:	cmp	x0, #0x0
  46aa00:	b.eq	46aa10 <_obstack_memory_used@@Base+0xd8d0>  // b.none
  46aa04:	ldr	x0, [sp, #24]
  46aa08:	ldr	x1, [sp, #48]
  46aa0c:	str	x1, [x0]
  46aa10:	ldr	x0, [sp, #48]
  46aa14:	ldp	x29, x30, [sp], #64
  46aa18:	ret
  46aa1c:	sub	sp, sp, #0x20
  46aa20:	str	x0, [sp, #8]
  46aa24:	str	x1, [sp]
  46aa28:	ldr	x0, [sp, #8]
  46aa2c:	str	x0, [sp, #24]
  46aa30:	ldr	x0, [sp]
  46aa34:	ldrb	w0, [x0, #48]
  46aa38:	cmp	w0, #0x11
  46aa3c:	b.ne	46aa64 <_obstack_memory_used@@Base+0xd924>  // b.any
  46aa40:	ldr	x0, [sp]
  46aa44:	ldr	x0, [x0, #40]
  46aa48:	ldr	x1, [sp, #24]
  46aa4c:	cmp	x1, x0
  46aa50:	b.ne	46aa64 <_obstack_memory_used@@Base+0xd924>  // b.any
  46aa54:	ldr	x0, [sp]
  46aa58:	ldrb	w1, [x0, #50]
  46aa5c:	orr	w1, w1, #0x8
  46aa60:	strb	w1, [x0, #50]
  46aa64:	mov	w0, #0x0                   	// #0
  46aa68:	add	sp, sp, #0x20
  46aa6c:	ret
  46aa70:	stp	x29, x30, [sp, #-32]!
  46aa74:	mov	x29, sp
  46aa78:	str	x0, [sp, #24]
  46aa7c:	ldr	x0, [sp, #24]
  46aa80:	ldrb	w0, [x0, #8]
  46aa84:	cmp	w0, #0x6
  46aa88:	b.ne	46aab4 <_obstack_memory_used@@Base+0xd974>  // b.any
  46aa8c:	ldr	x0, [sp, #24]
  46aa90:	ldrb	w0, [x0, #10]
  46aa94:	and	w0, w0, #0x4
  46aa98:	and	w0, w0, #0xff
  46aa9c:	cmp	w0, #0x0
  46aaa0:	b.ne	46aab4 <_obstack_memory_used@@Base+0xd974>  // b.any
  46aaa4:	ldr	x0, [sp, #24]
  46aaa8:	ldr	x0, [x0]
  46aaac:	bl	46a834 <_obstack_memory_used@@Base+0xd6f4>
  46aab0:	b	46aae8 <_obstack_memory_used@@Base+0xd9a8>
  46aab4:	ldr	x0, [sp, #24]
  46aab8:	ldrb	w0, [x0, #8]
  46aabc:	cmp	w0, #0x3
  46aac0:	b.ne	46aae8 <_obstack_memory_used@@Base+0xd9a8>  // b.any
  46aac4:	ldr	x0, [sp, #24]
  46aac8:	ldrb	w0, [x0, #10]
  46aacc:	and	w0, w0, #0x4
  46aad0:	and	w0, w0, #0xff
  46aad4:	cmp	w0, #0x0
  46aad8:	b.ne	46aae8 <_obstack_memory_used@@Base+0xd9a8>  // b.any
  46aadc:	ldr	x0, [sp, #24]
  46aae0:	ldr	x0, [x0]
  46aae4:	bl	404880 <free@plt>
  46aae8:	nop
  46aaec:	ldp	x29, x30, [sp], #32
  46aaf0:	ret
  46aaf4:	stp	x29, x30, [sp, #-32]!
  46aaf8:	mov	x29, sp
  46aafc:	str	x0, [sp, #24]
  46ab00:	str	x1, [sp, #16]
  46ab04:	ldr	x0, [sp, #16]
  46ab08:	add	x0, x0, #0x28
  46ab0c:	bl	46aa70 <_obstack_memory_used@@Base+0xd930>
  46ab10:	mov	w0, #0x0                   	// #0
  46ab14:	ldp	x29, x30, [sp], #32
  46ab18:	ret
  46ab1c:	stp	x29, x30, [sp, #-80]!
  46ab20:	mov	x29, sp
  46ab24:	str	x0, [sp, #24]
  46ab28:	str	x1, [sp, #16]
  46ab2c:	add	x0, sp, #0x28
  46ab30:	str	x0, [sp, #64]
  46ab34:	ldr	x0, [sp, #24]
  46ab38:	ldr	x0, [x0]
  46ab3c:	str	x0, [sp, #56]
  46ab40:	ldr	x0, [sp, #24]
  46ab44:	str	x0, [sp, #72]
  46ab48:	ldr	x0, [sp, #72]
  46ab4c:	add	x0, x0, #0x28
  46ab50:	mov	x3, x0
  46ab54:	mov	x2, #0x0                   	// #0
  46ab58:	mov	x1, #0x0                   	// #0
  46ab5c:	ldr	x0, [sp, #16]
  46ab60:	bl	46a8c8 <_obstack_memory_used@@Base+0xd788>
  46ab64:	mov	x1, x0
  46ab68:	ldr	x0, [sp, #64]
  46ab6c:	str	x1, [x0]
  46ab70:	ldr	x0, [sp, #64]
  46ab74:	ldr	x0, [x0]
  46ab78:	cmp	x0, #0x0
  46ab7c:	b.ne	46ab88 <_obstack_memory_used@@Base+0xda48>  // b.any
  46ab80:	mov	x0, #0x0                   	// #0
  46ab84:	b	46ac60 <_obstack_memory_used@@Base+0xdb20>
  46ab88:	ldr	x0, [sp, #64]
  46ab8c:	ldr	x0, [x0]
  46ab90:	ldr	x1, [sp, #56]
  46ab94:	str	x1, [x0]
  46ab98:	ldr	x0, [sp, #64]
  46ab9c:	ldr	x0, [x0]
  46aba0:	ldrb	w1, [x0, #50]
  46aba4:	orr	w1, w1, #0x4
  46aba8:	strb	w1, [x0, #50]
  46abac:	ldr	x0, [sp, #64]
  46abb0:	ldr	x0, [x0]
  46abb4:	str	x0, [sp, #56]
  46abb8:	ldr	x0, [sp, #72]
  46abbc:	ldr	x0, [x0, #8]
  46abc0:	cmp	x0, #0x0
  46abc4:	b.eq	46abe4 <_obstack_memory_used@@Base+0xdaa4>  // b.none
  46abc8:	ldr	x0, [sp, #72]
  46abcc:	ldr	x0, [x0, #8]
  46abd0:	str	x0, [sp, #72]
  46abd4:	ldr	x0, [sp, #56]
  46abd8:	add	x0, x0, #0x8
  46abdc:	str	x0, [sp, #64]
  46abe0:	b	46ab48 <_obstack_memory_used@@Base+0xda08>
  46abe4:	str	xzr, [sp, #48]
  46abe8:	b	46ac20 <_obstack_memory_used@@Base+0xdae0>
  46abec:	ldr	x0, [sp, #72]
  46abf0:	str	x0, [sp, #48]
  46abf4:	ldr	x0, [sp, #72]
  46abf8:	ldr	x0, [x0]
  46abfc:	str	x0, [sp, #72]
  46ac00:	ldr	x0, [sp, #56]
  46ac04:	ldr	x0, [x0]
  46ac08:	str	x0, [sp, #56]
  46ac0c:	ldr	x0, [sp, #72]
  46ac10:	cmp	x0, #0x0
  46ac14:	b.ne	46ac20 <_obstack_memory_used@@Base+0xdae0>  // b.any
  46ac18:	ldr	x0, [sp, #40]
  46ac1c:	b	46ac60 <_obstack_memory_used@@Base+0xdb20>
  46ac20:	ldr	x0, [sp, #72]
  46ac24:	ldr	x0, [x0, #16]
  46ac28:	ldr	x1, [sp, #48]
  46ac2c:	cmp	x1, x0
  46ac30:	b.eq	46abec <_obstack_memory_used@@Base+0xdaac>  // b.none
  46ac34:	ldr	x0, [sp, #72]
  46ac38:	ldr	x0, [x0, #16]
  46ac3c:	cmp	x0, #0x0
  46ac40:	b.eq	46abec <_obstack_memory_used@@Base+0xdaac>  // b.none
  46ac44:	ldr	x0, [sp, #72]
  46ac48:	ldr	x0, [x0, #16]
  46ac4c:	str	x0, [sp, #72]
  46ac50:	ldr	x0, [sp, #56]
  46ac54:	add	x0, x0, #0x10
  46ac58:	str	x0, [sp, #64]
  46ac5c:	b	46ab48 <_obstack_memory_used@@Base+0xda08>
  46ac60:	ldp	x29, x30, [sp], #80
  46ac64:	ret
  46ac68:	sub	sp, sp, #0x70
  46ac6c:	stp	x29, x30, [sp, #16]
  46ac70:	add	x29, sp, #0x10
  46ac74:	str	x0, [sp, #72]
  46ac78:	str	x1, [sp, #64]
  46ac7c:	str	x2, [sp, #56]
  46ac80:	str	x3, [sp, #48]
  46ac84:	str	w4, [sp, #44]
  46ac88:	ldr	x0, [sp, #72]
  46ac8c:	ldr	x0, [x0]
  46ac90:	str	x0, [sp, #80]
  46ac94:	ldr	w0, [sp, #44]
  46ac98:	and	w0, w0, #0xfffffff8
  46ac9c:	cmp	w0, #0x0
  46aca0:	b.eq	46acac <_obstack_memory_used@@Base+0xdb6c>  // b.none
  46aca4:	mov	w0, #0x2                   	// #2
  46aca8:	b	46ad74 <_obstack_memory_used@@Base+0xdc34>
  46acac:	ldr	w0, [sp, #44]
  46acb0:	and	w0, w0, #0x4
  46acb4:	cmp	w0, #0x0
  46acb8:	b.eq	46acd8 <_obstack_memory_used@@Base+0xdb98>  // b.none
  46acbc:	ldr	x0, [sp, #48]
  46acc0:	ldr	x0, [x0]
  46acc4:	str	x0, [sp, #96]
  46acc8:	ldr	x0, [sp, #48]
  46accc:	ldr	x0, [x0, #8]
  46acd0:	str	x0, [sp, #88]
  46acd4:	b	46ace8 <_obstack_memory_used@@Base+0xdba8>
  46acd8:	str	xzr, [sp, #96]
  46acdc:	ldr	x0, [sp, #64]
  46ace0:	bl	4040b0 <strlen@plt>
  46ace4:	str	x0, [sp, #88]
  46ace8:	ldr	x0, [sp, #72]
  46acec:	ldrb	w0, [x0, #56]
  46acf0:	and	w0, w0, #0x10
  46acf4:	and	w0, w0, #0xff
  46acf8:	cmp	w0, #0x0
  46acfc:	b.eq	46ad34 <_obstack_memory_used@@Base+0xdbf4>  // b.none
  46ad00:	ldr	w0, [sp, #44]
  46ad04:	str	w0, [sp]
  46ad08:	mov	x7, #0x0                   	// #0
  46ad0c:	mov	x6, #0x0                   	// #0
  46ad10:	ldr	x5, [sp, #88]
  46ad14:	ldr	x4, [sp, #88]
  46ad18:	ldr	x3, [sp, #96]
  46ad1c:	ldr	x2, [sp, #88]
  46ad20:	ldr	x1, [sp, #64]
  46ad24:	ldr	x0, [sp, #72]
  46ad28:	bl	46b8a8 <_obstack_memory_used@@Base+0xe768>
  46ad2c:	str	w0, [sp, #108]
  46ad30:	b	46ad64 <_obstack_memory_used@@Base+0xdc24>
  46ad34:	ldr	w0, [sp, #44]
  46ad38:	str	w0, [sp]
  46ad3c:	ldr	x7, [sp, #48]
  46ad40:	ldr	x6, [sp, #56]
  46ad44:	ldr	x5, [sp, #88]
  46ad48:	ldr	x4, [sp, #88]
  46ad4c:	ldr	x3, [sp, #96]
  46ad50:	ldr	x2, [sp, #88]
  46ad54:	ldr	x1, [sp, #64]
  46ad58:	ldr	x0, [sp, #72]
  46ad5c:	bl	46b8a8 <_obstack_memory_used@@Base+0xe768>
  46ad60:	str	w0, [sp, #108]
  46ad64:	ldr	w0, [sp, #108]
  46ad68:	cmp	w0, #0x0
  46ad6c:	cset	w0, ne  // ne = any
  46ad70:	and	w0, w0, #0xff
  46ad74:	ldp	x29, x30, [sp, #16]
  46ad78:	add	sp, sp, #0x70
  46ad7c:	ret
  46ad80:	stp	x29, x30, [sp, #-64]!
  46ad84:	mov	x29, sp
  46ad88:	str	x0, [sp, #56]
  46ad8c:	str	x1, [sp, #48]
  46ad90:	str	x2, [sp, #40]
  46ad94:	str	x3, [sp, #32]
  46ad98:	str	x4, [sp, #24]
  46ad9c:	mov	w7, #0x1                   	// #1
  46ada0:	ldr	x6, [sp, #24]
  46ada4:	ldr	x5, [sp, #40]
  46ada8:	mov	x4, #0x0                   	// #0
  46adac:	ldr	x3, [sp, #32]
  46adb0:	ldr	x2, [sp, #40]
  46adb4:	ldr	x1, [sp, #48]
  46adb8:	ldr	x0, [sp, #56]
  46adbc:	bl	46b098 <_obstack_memory_used@@Base+0xdf58>
  46adc0:	ldp	x29, x30, [sp], #64
  46adc4:	ret
  46adc8:	stp	x29, x30, [sp, #-64]!
  46adcc:	mov	x29, sp
  46add0:	str	x0, [sp, #56]
  46add4:	str	x1, [sp, #48]
  46add8:	str	x2, [sp, #40]
  46addc:	str	x3, [sp, #32]
  46ade0:	str	x4, [sp, #24]
  46ade4:	str	x5, [sp, #16]
  46ade8:	mov	w7, #0x0                   	// #0
  46adec:	ldr	x6, [sp, #16]
  46adf0:	ldr	x5, [sp, #40]
  46adf4:	ldr	x4, [sp, #24]
  46adf8:	ldr	x3, [sp, #32]
  46adfc:	ldr	x2, [sp, #40]
  46ae00:	ldr	x1, [sp, #48]
  46ae04:	ldr	x0, [sp, #56]
  46ae08:	bl	46b098 <_obstack_memory_used@@Base+0xdf58>
  46ae0c:	ldp	x29, x30, [sp], #64
  46ae10:	ret
  46ae14:	sub	sp, sp, #0x60
  46ae18:	stp	x29, x30, [sp, #16]
  46ae1c:	add	x29, sp, #0x10
  46ae20:	str	x0, [sp, #88]
  46ae24:	str	x1, [sp, #80]
  46ae28:	str	x2, [sp, #72]
  46ae2c:	str	x3, [sp, #64]
  46ae30:	str	x4, [sp, #56]
  46ae34:	str	x5, [sp, #48]
  46ae38:	str	x6, [sp, #40]
  46ae3c:	str	x7, [sp, #32]
  46ae40:	mov	w0, #0x1                   	// #1
  46ae44:	strb	w0, [sp, #8]
  46ae48:	ldr	x0, [sp, #32]
  46ae4c:	str	x0, [sp]
  46ae50:	ldr	x7, [sp, #40]
  46ae54:	mov	x6, #0x0                   	// #0
  46ae58:	ldr	x5, [sp, #48]
  46ae5c:	ldr	x4, [sp, #56]
  46ae60:	ldr	x3, [sp, #64]
  46ae64:	ldr	x2, [sp, #72]
  46ae68:	ldr	x1, [sp, #80]
  46ae6c:	ldr	x0, [sp, #88]
  46ae70:	bl	46aee8 <_obstack_memory_used@@Base+0xdda8>
  46ae74:	ldp	x29, x30, [sp, #16]
  46ae78:	add	sp, sp, #0x60
  46ae7c:	ret
  46ae80:	sub	sp, sp, #0x60
  46ae84:	stp	x29, x30, [sp, #16]
  46ae88:	add	x29, sp, #0x10
  46ae8c:	str	x0, [sp, #88]
  46ae90:	str	x1, [sp, #80]
  46ae94:	str	x2, [sp, #72]
  46ae98:	str	x3, [sp, #64]
  46ae9c:	str	x4, [sp, #56]
  46aea0:	str	x5, [sp, #48]
  46aea4:	str	x6, [sp, #40]
  46aea8:	str	x7, [sp, #32]
  46aeac:	strb	wzr, [sp, #8]
  46aeb0:	ldr	x0, [sp, #96]
  46aeb4:	str	x0, [sp]
  46aeb8:	ldr	x7, [sp, #32]
  46aebc:	ldr	x6, [sp, #40]
  46aec0:	ldr	x5, [sp, #48]
  46aec4:	ldr	x4, [sp, #56]
  46aec8:	ldr	x3, [sp, #64]
  46aecc:	ldr	x2, [sp, #72]
  46aed0:	ldr	x1, [sp, #80]
  46aed4:	ldr	x0, [sp, #88]
  46aed8:	bl	46aee8 <_obstack_memory_used@@Base+0xdda8>
  46aedc:	ldp	x29, x30, [sp, #16]
  46aee0:	add	sp, sp, #0x60
  46aee4:	ret
  46aee8:	stp	x29, x30, [sp, #-112]!
  46aeec:	mov	x29, sp
  46aef0:	str	x0, [sp, #72]
  46aef4:	str	x1, [sp, #64]
  46aef8:	str	x2, [sp, #56]
  46aefc:	str	x3, [sp, #48]
  46af00:	str	x4, [sp, #40]
  46af04:	str	x5, [sp, #32]
  46af08:	str	x6, [sp, #24]
  46af0c:	str	x7, [sp, #16]
  46af10:	str	xzr, [sp, #96]
  46af14:	ldr	x0, [sp, #56]
  46af18:	lsr	x0, x0, #63
  46af1c:	and	w0, w0, #0xff
  46af20:	and	x0, x0, #0xff
  46af24:	cmp	x0, #0x0
  46af28:	b.ne	46af44 <_obstack_memory_used@@Base+0xde04>  // b.any
  46af2c:	ldr	x0, [sp, #40]
  46af30:	lsr	x0, x0, #63
  46af34:	and	w0, w0, #0xff
  46af38:	and	x0, x0, #0xff
  46af3c:	cmp	x0, #0x0
  46af40:	b.eq	46af4c <_obstack_memory_used@@Base+0xde0c>  // b.none
  46af44:	mov	w0, #0x1                   	// #1
  46af48:	b	46af50 <_obstack_memory_used@@Base+0xde10>
  46af4c:	mov	w0, #0x0                   	// #0
  46af50:	cmp	w0, #0x0
  46af54:	b.ne	46af70 <_obstack_memory_used@@Base+0xde30>  // b.any
  46af58:	ldr	x0, [sp, #112]
  46af5c:	lsr	x0, x0, #63
  46af60:	and	w0, w0, #0xff
  46af64:	and	x0, x0, #0xff
  46af68:	cmp	x0, #0x0
  46af6c:	b.eq	46af78 <_obstack_memory_used@@Base+0xde38>  // b.none
  46af70:	mov	w0, #0x1                   	// #1
  46af74:	b	46af7c <_obstack_memory_used@@Base+0xde3c>
  46af78:	mov	w0, #0x0                   	// #0
  46af7c:	cmp	w0, #0x0
  46af80:	b.ne	46afb8 <_obstack_memory_used@@Base+0xde78>  // b.any
  46af84:	mov	x2, #0x0                   	// #0
  46af88:	ldr	x1, [sp, #56]
  46af8c:	ldr	x0, [sp, #40]
  46af90:	adds	x0, x1, x0
  46af94:	b.vc	46af9c <_obstack_memory_used@@Base+0xde5c>
  46af98:	mov	x2, #0x1                   	// #1
  46af9c:	str	x0, [sp, #80]
  46afa0:	mov	x0, x2
  46afa4:	and	w0, w0, #0x1
  46afa8:	and	w0, w0, #0xff
  46afac:	sxtw	x0, w0
  46afb0:	cmp	x0, #0x0
  46afb4:	b.eq	46afc0 <_obstack_memory_used@@Base+0xde80>  // b.none
  46afb8:	mov	x0, #0xfffffffffffffffe    	// #-2
  46afbc:	b	46b090 <_obstack_memory_used@@Base+0xdf50>
  46afc0:	ldr	x0, [sp, #40]
  46afc4:	cmp	x0, #0x0
  46afc8:	b.le	46b050 <_obstack_memory_used@@Base+0xdf10>
  46afcc:	ldr	x0, [sp, #56]
  46afd0:	cmp	x0, #0x0
  46afd4:	b.le	46b044 <_obstack_memory_used@@Base+0xdf04>
  46afd8:	ldr	x0, [sp, #80]
  46afdc:	bl	4043f0 <malloc@plt>
  46afe0:	str	x0, [sp, #96]
  46afe4:	ldr	x0, [sp, #96]
  46afe8:	cmp	x0, #0x0
  46afec:	cset	w0, eq  // eq = none
  46aff0:	and	w0, w0, #0xff
  46aff4:	and	x0, x0, #0xff
  46aff8:	cmp	x0, #0x0
  46affc:	b.eq	46b008 <_obstack_memory_used@@Base+0xdec8>  // b.none
  46b000:	mov	x0, #0xfffffffffffffffe    	// #-2
  46b004:	b	46b090 <_obstack_memory_used@@Base+0xdf50>
  46b008:	ldr	x0, [sp, #56]
  46b00c:	mov	x2, x0
  46b010:	ldr	x1, [sp, #64]
  46b014:	ldr	x0, [sp, #96]
  46b018:	bl	404020 <memcpy@plt>
  46b01c:	ldr	x0, [sp, #56]
  46b020:	ldr	x1, [sp, #96]
  46b024:	add	x0, x1, x0
  46b028:	ldr	x1, [sp, #40]
  46b02c:	mov	x2, x1
  46b030:	ldr	x1, [sp, #48]
  46b034:	bl	404020 <memcpy@plt>
  46b038:	ldr	x0, [sp, #96]
  46b03c:	str	x0, [sp, #104]
  46b040:	b	46b058 <_obstack_memory_used@@Base+0xdf18>
  46b044:	ldr	x0, [sp, #48]
  46b048:	str	x0, [sp, #104]
  46b04c:	b	46b058 <_obstack_memory_used@@Base+0xdf18>
  46b050:	ldr	x0, [sp, #64]
  46b054:	str	x0, [sp, #104]
  46b058:	ldr	x0, [sp, #80]
  46b05c:	ldrb	w7, [sp, #120]
  46b060:	ldr	x6, [sp, #16]
  46b064:	ldr	x5, [sp, #112]
  46b068:	ldr	x4, [sp, #24]
  46b06c:	ldr	x3, [sp, #32]
  46b070:	mov	x2, x0
  46b074:	ldr	x1, [sp, #104]
  46b078:	ldr	x0, [sp, #72]
  46b07c:	bl	46b098 <_obstack_memory_used@@Base+0xdf58>
  46b080:	str	x0, [sp, #88]
  46b084:	ldr	x0, [sp, #96]
  46b088:	bl	404880 <free@plt>
  46b08c:	ldr	x0, [sp, #88]
  46b090:	ldp	x29, x30, [sp], #112
  46b094:	ret
  46b098:	sub	sp, sp, #0xa0
  46b09c:	stp	x29, x30, [sp, #16]
  46b0a0:	add	x29, sp, #0x10
  46b0a4:	str	x0, [sp, #88]
  46b0a8:	str	x1, [sp, #80]
  46b0ac:	str	x2, [sp, #72]
  46b0b0:	str	x3, [sp, #64]
  46b0b4:	str	x4, [sp, #56]
  46b0b8:	str	x5, [sp, #48]
  46b0bc:	str	x6, [sp, #40]
  46b0c0:	strb	w7, [sp, #39]
  46b0c4:	str	wzr, [sp, #132]
  46b0c8:	ldr	x0, [sp, #88]
  46b0cc:	ldr	x0, [x0]
  46b0d0:	str	x0, [sp, #120]
  46b0d4:	ldr	x1, [sp, #64]
  46b0d8:	ldr	x0, [sp, #56]
  46b0dc:	add	x0, x1, x0
  46b0e0:	str	x0, [sp, #136]
  46b0e4:	ldr	x0, [sp, #64]
  46b0e8:	lsr	x0, x0, #63
  46b0ec:	and	w0, w0, #0xff
  46b0f0:	and	x0, x0, #0xff
  46b0f4:	cmp	x0, #0x0
  46b0f8:	b.ne	46b11c <_obstack_memory_used@@Base+0xdfdc>  // b.any
  46b0fc:	ldr	x1, [sp, #64]
  46b100:	ldr	x0, [sp, #72]
  46b104:	cmp	x1, x0
  46b108:	cset	w0, gt
  46b10c:	and	w0, w0, #0xff
  46b110:	and	x0, x0, #0xff
  46b114:	cmp	x0, #0x0
  46b118:	b.eq	46b124 <_obstack_memory_used@@Base+0xdfe4>  // b.none
  46b11c:	mov	x0, #0xffffffffffffffff    	// #-1
  46b120:	b	46b4f8 <_obstack_memory_used@@Base+0xe3b8>
  46b124:	ldr	x1, [sp, #72]
  46b128:	ldr	x0, [sp, #136]
  46b12c:	cmp	x1, x0
  46b130:	cset	w0, lt  // lt = tstop
  46b134:	and	w0, w0, #0xff
  46b138:	and	x0, x0, #0xff
  46b13c:	cmp	x0, #0x0
  46b140:	b.ne	46b194 <_obstack_memory_used@@Base+0xe054>  // b.any
  46b144:	ldr	x0, [sp, #56]
  46b148:	mvn	x0, x0
  46b14c:	lsr	x0, x0, #63
  46b150:	and	w0, w0, #0xff
  46b154:	and	x0, x0, #0xff
  46b158:	cmp	x0, #0x0
  46b15c:	b.eq	46b188 <_obstack_memory_used@@Base+0xe048>  // b.none
  46b160:	ldr	x1, [sp, #136]
  46b164:	ldr	x0, [sp, #64]
  46b168:	cmp	x1, x0
  46b16c:	cset	w0, lt  // lt = tstop
  46b170:	and	w0, w0, #0xff
  46b174:	and	x0, x0, #0xff
  46b178:	cmp	x0, #0x0
  46b17c:	b.eq	46b188 <_obstack_memory_used@@Base+0xe048>  // b.none
  46b180:	mov	w0, #0x1                   	// #1
  46b184:	b	46b18c <_obstack_memory_used@@Base+0xe04c>
  46b188:	mov	w0, #0x0                   	// #0
  46b18c:	cmp	w0, #0x0
  46b190:	b.eq	46b1a0 <_obstack_memory_used@@Base+0xe060>  // b.none
  46b194:	ldr	x0, [sp, #72]
  46b198:	str	x0, [sp, #136]
  46b19c:	b	46b208 <_obstack_memory_used@@Base+0xe0c8>
  46b1a0:	ldr	x0, [sp, #136]
  46b1a4:	lsr	x0, x0, #63
  46b1a8:	and	w0, w0, #0xff
  46b1ac:	and	x0, x0, #0xff
  46b1b0:	cmp	x0, #0x0
  46b1b4:	b.ne	46b204 <_obstack_memory_used@@Base+0xe0c4>  // b.any
  46b1b8:	ldr	x0, [sp, #56]
  46b1bc:	lsr	x0, x0, #63
  46b1c0:	and	w0, w0, #0xff
  46b1c4:	and	x0, x0, #0xff
  46b1c8:	cmp	x0, #0x0
  46b1cc:	b.eq	46b1f8 <_obstack_memory_used@@Base+0xe0b8>  // b.none
  46b1d0:	ldr	x1, [sp, #64]
  46b1d4:	ldr	x0, [sp, #136]
  46b1d8:	cmp	x1, x0
  46b1dc:	cset	w0, le
  46b1e0:	and	w0, w0, #0xff
  46b1e4:	and	x0, x0, #0xff
  46b1e8:	cmp	x0, #0x0
  46b1ec:	b.eq	46b1f8 <_obstack_memory_used@@Base+0xe0b8>  // b.none
  46b1f0:	mov	w0, #0x1                   	// #1
  46b1f4:	b	46b1fc <_obstack_memory_used@@Base+0xe0bc>
  46b1f8:	mov	w0, #0x0                   	// #0
  46b1fc:	cmp	w0, #0x0
  46b200:	b.eq	46b208 <_obstack_memory_used@@Base+0xe0c8>  // b.none
  46b204:	str	xzr, [sp, #136]
  46b208:	ldr	x0, [sp, #88]
  46b20c:	ldrb	w0, [x0, #56]
  46b210:	lsr	w0, w0, #5
  46b214:	and	w0, w0, #0xff
  46b218:	and	w0, w0, #0x1
  46b21c:	ldr	w1, [sp, #132]
  46b220:	orr	w0, w1, w0
  46b224:	str	w0, [sp, #132]
  46b228:	ldr	x0, [sp, #88]
  46b22c:	ldrb	w0, [x0, #56]
  46b230:	lsr	w0, w0, #5
  46b234:	and	w0, w0, #0xff
  46b238:	and	w0, w0, #0x2
  46b23c:	ldr	w1, [sp, #132]
  46b240:	orr	w0, w1, w0
  46b244:	str	w0, [sp, #132]
  46b248:	ldr	x1, [sp, #64]
  46b24c:	ldr	x0, [sp, #136]
  46b250:	cmp	x1, x0
  46b254:	b.ge	46b288 <_obstack_memory_used@@Base+0xe148>  // b.tcont
  46b258:	ldr	x0, [sp, #88]
  46b25c:	ldr	x0, [x0, #32]
  46b260:	cmp	x0, #0x0
  46b264:	b.eq	46b288 <_obstack_memory_used@@Base+0xe148>  // b.none
  46b268:	ldr	x0, [sp, #88]
  46b26c:	ldrb	w0, [x0, #56]
  46b270:	and	w0, w0, #0x8
  46b274:	and	w0, w0, #0xff
  46b278:	cmp	w0, #0x0
  46b27c:	b.ne	46b288 <_obstack_memory_used@@Base+0xe148>  // b.any
  46b280:	ldr	x0, [sp, #88]
  46b284:	bl	4624f0 <_obstack_memory_used@@Base+0x53b0>
  46b288:	ldr	x0, [sp, #88]
  46b28c:	ldrb	w0, [x0, #56]
  46b290:	ubfx	x0, x0, #4, #1
  46b294:	and	w0, w0, #0xff
  46b298:	and	x0, x0, #0xff
  46b29c:	cmp	x0, #0x0
  46b2a0:	b.eq	46b2a8 <_obstack_memory_used@@Base+0xe168>  // b.none
  46b2a4:	str	xzr, [sp, #40]
  46b2a8:	ldr	x0, [sp, #40]
  46b2ac:	cmp	x0, #0x0
  46b2b0:	b.ne	46b2c0 <_obstack_memory_used@@Base+0xe180>  // b.any
  46b2b4:	mov	x0, #0x1                   	// #1
  46b2b8:	str	x0, [sp, #152]
  46b2bc:	b	46b358 <_obstack_memory_used@@Base+0xe218>
  46b2c0:	ldr	x0, [sp, #88]
  46b2c4:	ldrb	w0, [x0, #56]
  46b2c8:	and	w0, w0, #0x6
  46b2cc:	and	w0, w0, #0xff
  46b2d0:	cmp	w0, #0x4
  46b2d4:	cset	w0, eq  // eq = none
  46b2d8:	and	w0, w0, #0xff
  46b2dc:	and	x0, x0, #0xff
  46b2e0:	cmp	x0, #0x0
  46b2e4:	b.eq	46b348 <_obstack_memory_used@@Base+0xe208>  // b.none
  46b2e8:	ldr	x0, [sp, #40]
  46b2ec:	ldr	x1, [x0]
  46b2f0:	ldr	x0, [sp, #88]
  46b2f4:	ldr	x0, [x0, #48]
  46b2f8:	cmp	x1, x0
  46b2fc:	cset	w0, ls  // ls = plast
  46b300:	and	w0, w0, #0xff
  46b304:	and	x0, x0, #0xff
  46b308:	cmp	x0, #0x0
  46b30c:	b.eq	46b348 <_obstack_memory_used@@Base+0xe208>  // b.none
  46b310:	ldr	x0, [sp, #40]
  46b314:	ldr	x0, [x0]
  46b318:	str	x0, [sp, #152]
  46b31c:	ldr	x0, [sp, #152]
  46b320:	cmp	x0, #0x0
  46b324:	cset	w0, le
  46b328:	and	w0, w0, #0xff
  46b32c:	and	x0, x0, #0xff
  46b330:	cmp	x0, #0x0
  46b334:	b.eq	46b358 <_obstack_memory_used@@Base+0xe218>  // b.none
  46b338:	str	xzr, [sp, #40]
  46b33c:	mov	x0, #0x1                   	// #1
  46b340:	str	x0, [sp, #152]
  46b344:	b	46b358 <_obstack_memory_used@@Base+0xe218>
  46b348:	ldr	x0, [sp, #88]
  46b34c:	ldr	x0, [x0, #48]
  46b350:	add	x0, x0, #0x1
  46b354:	str	x0, [sp, #152]
  46b358:	ldr	x0, [sp, #152]
  46b35c:	lsl	x0, x0, #4
  46b360:	bl	4043f0 <malloc@plt>
  46b364:	str	x0, [sp, #112]
  46b368:	ldr	x0, [sp, #112]
  46b36c:	cmp	x0, #0x0
  46b370:	cset	w0, eq  // eq = none
  46b374:	and	w0, w0, #0xff
  46b378:	and	x0, x0, #0xff
  46b37c:	cmp	x0, #0x0
  46b380:	b.eq	46b390 <_obstack_memory_used@@Base+0xe250>  // b.none
  46b384:	mov	x0, #0xfffffffffffffffe    	// #-2
  46b388:	str	x0, [sp, #144]
  46b38c:	b	46b4f4 <_obstack_memory_used@@Base+0xe3b4>
  46b390:	ldr	x1, [sp, #152]
  46b394:	ldr	w0, [sp, #132]
  46b398:	str	w0, [sp]
  46b39c:	ldr	x7, [sp, #112]
  46b3a0:	mov	x6, x1
  46b3a4:	ldr	x5, [sp, #48]
  46b3a8:	ldr	x4, [sp, #136]
  46b3ac:	ldr	x3, [sp, #64]
  46b3b0:	ldr	x2, [sp, #72]
  46b3b4:	ldr	x1, [sp, #80]
  46b3b8:	ldr	x0, [sp, #88]
  46b3bc:	bl	46b8a8 <_obstack_memory_used@@Base+0xe768>
  46b3c0:	str	w0, [sp, #108]
  46b3c4:	str	xzr, [sp, #144]
  46b3c8:	ldr	w0, [sp, #108]
  46b3cc:	cmp	w0, #0x0
  46b3d0:	b.eq	46b3f4 <_obstack_memory_used@@Base+0xe2b4>  // b.none
  46b3d4:	ldr	w0, [sp, #108]
  46b3d8:	cmp	w0, #0x1
  46b3dc:	b.ne	46b3e8 <_obstack_memory_used@@Base+0xe2a8>  // b.any
  46b3e0:	mov	x0, #0xffffffffffffffff    	// #-1
  46b3e4:	b	46b3ec <_obstack_memory_used@@Base+0xe2ac>
  46b3e8:	mov	x0, #0xfffffffffffffffe    	// #-2
  46b3ec:	str	x0, [sp, #144]
  46b3f0:	b	46b46c <_obstack_memory_used@@Base+0xe32c>
  46b3f4:	ldr	x0, [sp, #40]
  46b3f8:	cmp	x0, #0x0
  46b3fc:	b.eq	46b46c <_obstack_memory_used@@Base+0xe32c>  // b.none
  46b400:	ldr	x0, [sp, #88]
  46b404:	ldrb	w0, [x0, #56]
  46b408:	ubfx	x0, x0, #1, #2
  46b40c:	and	w0, w0, #0xff
  46b410:	mov	w3, w0
  46b414:	ldr	x2, [sp, #152]
  46b418:	ldr	x1, [sp, #112]
  46b41c:	ldr	x0, [sp, #40]
  46b420:	bl	46b504 <_obstack_memory_used@@Base+0xe3c4>
  46b424:	and	w0, w0, #0x3
  46b428:	and	w2, w0, #0xff
  46b42c:	ldr	x1, [sp, #88]
  46b430:	ldrb	w0, [x1, #56]
  46b434:	bfi	w0, w2, #1, #2
  46b438:	strb	w0, [x1, #56]
  46b43c:	ldr	x0, [sp, #88]
  46b440:	ldrb	w0, [x0, #56]
  46b444:	and	w0, w0, #0x6
  46b448:	and	w0, w0, #0xff
  46b44c:	cmp	w0, #0x0
  46b450:	cset	w0, eq  // eq = none
  46b454:	and	w0, w0, #0xff
  46b458:	and	x0, x0, #0xff
  46b45c:	cmp	x0, #0x0
  46b460:	b.eq	46b46c <_obstack_memory_used@@Base+0xe32c>  // b.none
  46b464:	mov	x0, #0xfffffffffffffffe    	// #-2
  46b468:	str	x0, [sp, #144]
  46b46c:	ldr	x0, [sp, #144]
  46b470:	cmp	x0, #0x0
  46b474:	cset	w0, eq  // eq = none
  46b478:	and	w0, w0, #0xff
  46b47c:	and	x0, x0, #0xff
  46b480:	cmp	x0, #0x0
  46b484:	b.eq	46b4ec <_obstack_memory_used@@Base+0xe3ac>  // b.none
  46b488:	ldrb	w0, [sp, #39]
  46b48c:	cmp	w0, #0x0
  46b490:	b.eq	46b4e0 <_obstack_memory_used@@Base+0xe3a0>  // b.none
  46b494:	ldr	x0, [sp, #112]
  46b498:	ldr	x0, [x0]
  46b49c:	ldr	x1, [sp, #64]
  46b4a0:	cmp	x1, x0
  46b4a4:	b.eq	46b4c8 <_obstack_memory_used@@Base+0xe388>  // b.none
  46b4a8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b4ac:	add	x3, x0, #0x8e8
  46b4b0:	mov	w2, #0x1be                 	// #446
  46b4b4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b4b8:	add	x1, x0, #0x830
  46b4bc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b4c0:	add	x0, x0, #0x840
  46b4c4:	bl	404bb0 <__assert_fail@plt>
  46b4c8:	ldr	x0, [sp, #112]
  46b4cc:	ldr	x1, [x0, #8]
  46b4d0:	ldr	x0, [sp, #64]
  46b4d4:	sub	x0, x1, x0
  46b4d8:	str	x0, [sp, #144]
  46b4dc:	b	46b4ec <_obstack_memory_used@@Base+0xe3ac>
  46b4e0:	ldr	x0, [sp, #112]
  46b4e4:	ldr	x0, [x0]
  46b4e8:	str	x0, [sp, #144]
  46b4ec:	ldr	x0, [sp, #112]
  46b4f0:	bl	404880 <free@plt>
  46b4f4:	ldr	x0, [sp, #144]
  46b4f8:	ldp	x29, x30, [sp, #16]
  46b4fc:	add	sp, sp, #0xa0
  46b500:	ret
  46b504:	stp	x29, x30, [sp, #-96]!
  46b508:	mov	x29, sp
  46b50c:	str	x0, [sp, #40]
  46b510:	str	x1, [sp, #32]
  46b514:	str	x2, [sp, #24]
  46b518:	str	w3, [sp, #20]
  46b51c:	mov	w0, #0x1                   	// #1
  46b520:	str	w0, [sp, #92]
  46b524:	ldr	x0, [sp, #24]
  46b528:	add	x0, x0, #0x1
  46b52c:	str	x0, [sp, #72]
  46b530:	ldr	w0, [sp, #20]
  46b534:	cmp	w0, #0x0
  46b538:	b.ne	46b5d8 <_obstack_memory_used@@Base+0xe498>  // b.any
  46b53c:	ldr	x0, [sp, #72]
  46b540:	lsl	x0, x0, #3
  46b544:	bl	4043f0 <malloc@plt>
  46b548:	mov	x1, x0
  46b54c:	ldr	x0, [sp, #40]
  46b550:	str	x1, [x0, #8]
  46b554:	ldr	x0, [sp, #40]
  46b558:	ldr	x0, [x0, #8]
  46b55c:	cmp	x0, #0x0
  46b560:	cset	w0, eq  // eq = none
  46b564:	and	w0, w0, #0xff
  46b568:	and	x0, x0, #0xff
  46b56c:	cmp	x0, #0x0
  46b570:	b.eq	46b57c <_obstack_memory_used@@Base+0xe43c>  // b.none
  46b574:	mov	w0, #0x0                   	// #0
  46b578:	b	46b804 <_obstack_memory_used@@Base+0xe6c4>
  46b57c:	ldr	x0, [sp, #72]
  46b580:	lsl	x0, x0, #3
  46b584:	bl	4043f0 <malloc@plt>
  46b588:	mov	x1, x0
  46b58c:	ldr	x0, [sp, #40]
  46b590:	str	x1, [x0, #16]
  46b594:	ldr	x0, [sp, #40]
  46b598:	ldr	x0, [x0, #16]
  46b59c:	cmp	x0, #0x0
  46b5a0:	cset	w0, eq  // eq = none
  46b5a4:	and	w0, w0, #0xff
  46b5a8:	and	x0, x0, #0xff
  46b5ac:	cmp	x0, #0x0
  46b5b0:	b.eq	46b5c8 <_obstack_memory_used@@Base+0xe488>  // b.none
  46b5b4:	ldr	x0, [sp, #40]
  46b5b8:	ldr	x0, [x0, #8]
  46b5bc:	bl	404880 <free@plt>
  46b5c0:	mov	w0, #0x0                   	// #0
  46b5c4:	b	46b804 <_obstack_memory_used@@Base+0xe6c4>
  46b5c8:	ldr	x1, [sp, #72]
  46b5cc:	ldr	x0, [sp, #40]
  46b5d0:	str	x1, [x0]
  46b5d4:	b	46b728 <_obstack_memory_used@@Base+0xe5e8>
  46b5d8:	ldr	w0, [sp, #20]
  46b5dc:	cmp	w0, #0x1
  46b5e0:	b.ne	46b6c0 <_obstack_memory_used@@Base+0xe580>  // b.any
  46b5e4:	ldr	x0, [sp, #40]
  46b5e8:	ldr	x1, [x0]
  46b5ec:	ldr	x0, [sp, #72]
  46b5f0:	cmp	x1, x0
  46b5f4:	cset	w0, cc  // cc = lo, ul, last
  46b5f8:	and	w0, w0, #0xff
  46b5fc:	and	x0, x0, #0xff
  46b600:	cmp	x0, #0x0
  46b604:	b.eq	46b728 <_obstack_memory_used@@Base+0xe5e8>  // b.none
  46b608:	ldr	x0, [sp, #40]
  46b60c:	ldr	x2, [x0, #8]
  46b610:	ldr	x0, [sp, #72]
  46b614:	lsl	x0, x0, #3
  46b618:	mov	x1, x0
  46b61c:	mov	x0, x2
  46b620:	bl	4045e0 <realloc@plt>
  46b624:	str	x0, [sp, #64]
  46b628:	ldr	x0, [sp, #64]
  46b62c:	cmp	x0, #0x0
  46b630:	cset	w0, eq  // eq = none
  46b634:	and	w0, w0, #0xff
  46b638:	and	x0, x0, #0xff
  46b63c:	cmp	x0, #0x0
  46b640:	b.eq	46b64c <_obstack_memory_used@@Base+0xe50c>  // b.none
  46b644:	mov	w0, #0x0                   	// #0
  46b648:	b	46b804 <_obstack_memory_used@@Base+0xe6c4>
  46b64c:	ldr	x0, [sp, #40]
  46b650:	ldr	x2, [x0, #16]
  46b654:	ldr	x0, [sp, #72]
  46b658:	lsl	x0, x0, #3
  46b65c:	mov	x1, x0
  46b660:	mov	x0, x2
  46b664:	bl	4045e0 <realloc@plt>
  46b668:	str	x0, [sp, #56]
  46b66c:	ldr	x0, [sp, #56]
  46b670:	cmp	x0, #0x0
  46b674:	cset	w0, eq  // eq = none
  46b678:	and	w0, w0, #0xff
  46b67c:	and	x0, x0, #0xff
  46b680:	cmp	x0, #0x0
  46b684:	b.eq	46b698 <_obstack_memory_used@@Base+0xe558>  // b.none
  46b688:	ldr	x0, [sp, #64]
  46b68c:	bl	404880 <free@plt>
  46b690:	mov	w0, #0x0                   	// #0
  46b694:	b	46b804 <_obstack_memory_used@@Base+0xe6c4>
  46b698:	ldr	x0, [sp, #40]
  46b69c:	ldr	x1, [sp, #64]
  46b6a0:	str	x1, [x0, #8]
  46b6a4:	ldr	x0, [sp, #40]
  46b6a8:	ldr	x1, [sp, #56]
  46b6ac:	str	x1, [x0, #16]
  46b6b0:	ldr	x1, [sp, #72]
  46b6b4:	ldr	x0, [sp, #40]
  46b6b8:	str	x1, [x0]
  46b6bc:	b	46b728 <_obstack_memory_used@@Base+0xe5e8>
  46b6c0:	ldr	w0, [sp, #20]
  46b6c4:	cmp	w0, #0x2
  46b6c8:	b.eq	46b6ec <_obstack_memory_used@@Base+0xe5ac>  // b.none
  46b6cc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b6d0:	add	x3, x0, #0x8f8
  46b6d4:	mov	w2, #0x1f9                 	// #505
  46b6d8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b6dc:	add	x1, x0, #0x830
  46b6e0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b6e4:	add	x0, x0, #0x860
  46b6e8:	bl	404bb0 <__assert_fail@plt>
  46b6ec:	ldr	x0, [sp, #40]
  46b6f0:	ldr	x1, [x0]
  46b6f4:	ldr	x0, [sp, #24]
  46b6f8:	cmp	x1, x0
  46b6fc:	b.cs	46b720 <_obstack_memory_used@@Base+0xe5e0>  // b.hs, b.nlast
  46b700:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b704:	add	x3, x0, #0x8f8
  46b708:	mov	w2, #0x1fb                 	// #507
  46b70c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b710:	add	x1, x0, #0x830
  46b714:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46b718:	add	x0, x0, #0x880
  46b71c:	bl	404bb0 <__assert_fail@plt>
  46b720:	mov	w0, #0x2                   	// #2
  46b724:	str	w0, [sp, #92]
  46b728:	str	xzr, [sp, #80]
  46b72c:	b	46b794 <_obstack_memory_used@@Base+0xe654>
  46b730:	ldr	x0, [sp, #80]
  46b734:	lsl	x0, x0, #4
  46b738:	ldr	x1, [sp, #32]
  46b73c:	add	x1, x1, x0
  46b740:	ldr	x0, [sp, #40]
  46b744:	ldr	x2, [x0, #8]
  46b748:	ldr	x0, [sp, #80]
  46b74c:	lsl	x0, x0, #3
  46b750:	add	x0, x2, x0
  46b754:	ldr	x1, [x1]
  46b758:	str	x1, [x0]
  46b75c:	ldr	x0, [sp, #80]
  46b760:	lsl	x0, x0, #4
  46b764:	ldr	x1, [sp, #32]
  46b768:	add	x1, x1, x0
  46b76c:	ldr	x0, [sp, #40]
  46b770:	ldr	x2, [x0, #16]
  46b774:	ldr	x0, [sp, #80]
  46b778:	lsl	x0, x0, #3
  46b77c:	add	x0, x2, x0
  46b780:	ldr	x1, [x1, #8]
  46b784:	str	x1, [x0]
  46b788:	ldr	x0, [sp, #80]
  46b78c:	add	x0, x0, #0x1
  46b790:	str	x0, [sp, #80]
  46b794:	ldr	x1, [sp, #80]
  46b798:	ldr	x0, [sp, #24]
  46b79c:	cmp	x1, x0
  46b7a0:	b.lt	46b730 <_obstack_memory_used@@Base+0xe5f0>  // b.tstop
  46b7a4:	b	46b7ec <_obstack_memory_used@@Base+0xe6ac>
  46b7a8:	ldr	x0, [sp, #40]
  46b7ac:	ldr	x1, [x0, #16]
  46b7b0:	ldr	x0, [sp, #80]
  46b7b4:	lsl	x0, x0, #3
  46b7b8:	add	x0, x1, x0
  46b7bc:	mov	x1, #0xffffffffffffffff    	// #-1
  46b7c0:	str	x1, [x0]
  46b7c4:	ldr	x1, [sp, #40]
  46b7c8:	ldr	x2, [x1, #8]
  46b7cc:	ldr	x1, [sp, #80]
  46b7d0:	lsl	x1, x1, #3
  46b7d4:	add	x1, x2, x1
  46b7d8:	ldr	x0, [x0]
  46b7dc:	str	x0, [x1]
  46b7e0:	ldr	x0, [sp, #80]
  46b7e4:	add	x0, x0, #0x1
  46b7e8:	str	x0, [sp, #80]
  46b7ec:	ldr	x0, [sp, #40]
  46b7f0:	ldr	x1, [x0]
  46b7f4:	ldr	x0, [sp, #80]
  46b7f8:	cmp	x1, x0
  46b7fc:	b.hi	46b7a8 <_obstack_memory_used@@Base+0xe668>  // b.pmore
  46b800:	ldr	w0, [sp, #92]
  46b804:	ldp	x29, x30, [sp], #96
  46b808:	ret
  46b80c:	sub	sp, sp, #0x30
  46b810:	str	x0, [sp, #40]
  46b814:	str	x1, [sp, #32]
  46b818:	str	x2, [sp, #24]
  46b81c:	str	x3, [sp, #16]
  46b820:	str	x4, [sp, #8]
  46b824:	ldr	x0, [sp, #24]
  46b828:	cmp	x0, #0x0
  46b82c:	b.eq	46b86c <_obstack_memory_used@@Base+0xe72c>  // b.none
  46b830:	ldr	x1, [sp, #40]
  46b834:	ldrb	w0, [x1, #56]
  46b838:	mov	w2, #0x1                   	// #1
  46b83c:	bfi	w0, w2, #1, #2
  46b840:	strb	w0, [x1, #56]
  46b844:	ldr	x0, [sp, #32]
  46b848:	ldr	x1, [sp, #24]
  46b84c:	str	x1, [x0]
  46b850:	ldr	x0, [sp, #32]
  46b854:	ldr	x1, [sp, #16]
  46b858:	str	x1, [x0, #8]
  46b85c:	ldr	x0, [sp, #32]
  46b860:	ldr	x1, [sp, #8]
  46b864:	str	x1, [x0, #16]
  46b868:	b	46b89c <_obstack_memory_used@@Base+0xe75c>
  46b86c:	ldr	x0, [sp, #40]
  46b870:	ldrb	w1, [x0, #56]
  46b874:	and	w1, w1, #0xfffffff9
  46b878:	strb	w1, [x0, #56]
  46b87c:	ldr	x0, [sp, #32]
  46b880:	str	xzr, [x0]
  46b884:	ldr	x0, [sp, #32]
  46b888:	str	xzr, [x0, #16]
  46b88c:	ldr	x0, [sp, #32]
  46b890:	ldr	x1, [x0, #16]
  46b894:	ldr	x0, [sp, #32]
  46b898:	str	x1, [x0, #8]
  46b89c:	nop
  46b8a0:	add	sp, sp, #0x30
  46b8a4:	ret
  46b8a8:	stp	x29, x30, [sp, #-464]!
  46b8ac:	mov	x29, sp
  46b8b0:	str	x0, [sp, #72]
  46b8b4:	str	x1, [sp, #64]
  46b8b8:	str	x2, [sp, #56]
  46b8bc:	str	x3, [sp, #48]
  46b8c0:	str	x4, [sp, #40]
  46b8c4:	str	x5, [sp, #32]
  46b8c8:	str	x6, [sp, #24]
  46b8cc:	str	x7, [sp, #16]
  46b8d0:	ldr	x0, [sp, #72]
  46b8d4:	ldr	x0, [x0]
  46b8d8:	str	x0, [sp, #432]
  46b8dc:	mov	x0, #0xffffffffffffffff    	// #-1
  46b8e0:	str	x0, [sp, #424]
  46b8e4:	add	x0, sp, #0x58
  46b8e8:	mov	x1, #0x100                 	// #256
  46b8ec:	mov	x2, x1
  46b8f0:	mov	w1, #0x0                   	// #0
  46b8f4:	bl	4044d0 <memset@plt>
  46b8f8:	ldr	x0, [sp, #432]
  46b8fc:	str	x0, [sp, #240]
  46b900:	ldr	x0, [sp, #72]
  46b904:	ldr	x0, [x0, #32]
  46b908:	cmp	x0, #0x0
  46b90c:	b.eq	46b95c <_obstack_memory_used@@Base+0xe81c>  // b.none
  46b910:	ldr	x0, [sp, #72]
  46b914:	ldrb	w0, [x0, #56]
  46b918:	and	w0, w0, #0x8
  46b91c:	and	w0, w0, #0xff
  46b920:	cmp	w0, #0x0
  46b924:	b.eq	46b95c <_obstack_memory_used@@Base+0xe81c>  // b.none
  46b928:	ldr	x1, [sp, #48]
  46b92c:	ldr	x0, [sp, #40]
  46b930:	cmp	x1, x0
  46b934:	b.eq	46b95c <_obstack_memory_used@@Base+0xe81c>  // b.none
  46b938:	ldr	x0, [sp, #72]
  46b93c:	ldrb	w0, [x0, #56]
  46b940:	and	w0, w0, #0x1
  46b944:	and	w0, w0, #0xff
  46b948:	cmp	w0, #0x0
  46b94c:	b.ne	46b95c <_obstack_memory_used@@Base+0xe81c>  // b.any
  46b950:	ldr	x0, [sp, #72]
  46b954:	ldr	x0, [x0, #32]
  46b958:	b	46b960 <_obstack_memory_used@@Base+0xe820>
  46b95c:	mov	x0, #0x0                   	// #0
  46b960:	str	x0, [sp, #416]
  46b964:	ldr	x0, [sp, #72]
  46b968:	ldr	x0, [x0, #40]
  46b96c:	str	x0, [sp, #408]
  46b970:	ldr	x0, [sp, #72]
  46b974:	ldr	x0, [x0, #48]
  46b978:	ldr	x1, [sp, #24]
  46b97c:	cmp	x1, x0
  46b980:	b.ls	46b99c <_obstack_memory_used@@Base+0xe85c>  // b.plast
  46b984:	ldr	x0, [sp, #72]
  46b988:	ldr	x0, [x0, #48]
  46b98c:	ldr	x1, [sp, #24]
  46b990:	sub	x0, x1, x0
  46b994:	sub	x0, x0, #0x1
  46b998:	b	46b9a0 <_obstack_memory_used@@Base+0xe860>
  46b99c:	mov	x0, #0x0                   	// #0
  46b9a0:	str	x0, [sp, #400]
  46b9a4:	ldr	x0, [sp, #400]
  46b9a8:	ldr	x1, [sp, #24]
  46b9ac:	sub	x0, x1, x0
  46b9b0:	str	x0, [sp, #24]
  46b9b4:	ldr	x0, [sp, #72]
  46b9b8:	ldr	x0, [x0, #16]
  46b9bc:	cmp	x0, #0x0
  46b9c0:	cset	w0, eq  // eq = none
  46b9c4:	and	w0, w0, #0xff
  46b9c8:	and	x0, x0, #0xff
  46b9cc:	cmp	x0, #0x0
  46b9d0:	b.ne	46b9f4 <_obstack_memory_used@@Base+0xe8b4>  // b.any
  46b9d4:	ldr	x0, [sp, #432]
  46b9d8:	ldr	x0, [x0, #72]
  46b9dc:	cmp	x0, #0x0
  46b9e0:	cset	w0, eq  // eq = none
  46b9e4:	and	w0, w0, #0xff
  46b9e8:	and	x0, x0, #0xff
  46b9ec:	cmp	x0, #0x0
  46b9f0:	b.eq	46b9fc <_obstack_memory_used@@Base+0xe8bc>  // b.none
  46b9f4:	mov	w0, #0x1                   	// #1
  46b9f8:	b	46ba00 <_obstack_memory_used@@Base+0xe8c0>
  46b9fc:	mov	w0, #0x0                   	// #0
  46ba00:	cmp	w0, #0x0
  46ba04:	b.ne	46ba28 <_obstack_memory_used@@Base+0xe8e8>  // b.any
  46ba08:	ldr	x0, [sp, #432]
  46ba0c:	ldr	x0, [x0, #80]
  46ba10:	cmp	x0, #0x0
  46ba14:	cset	w0, eq  // eq = none
  46ba18:	and	w0, w0, #0xff
  46ba1c:	and	x0, x0, #0xff
  46ba20:	cmp	x0, #0x0
  46ba24:	b.eq	46ba30 <_obstack_memory_used@@Base+0xe8f0>  // b.none
  46ba28:	mov	w0, #0x1                   	// #1
  46ba2c:	b	46ba34 <_obstack_memory_used@@Base+0xe8f4>
  46ba30:	mov	w0, #0x0                   	// #0
  46ba34:	cmp	w0, #0x0
  46ba38:	b.ne	46ba5c <_obstack_memory_used@@Base+0xe91c>  // b.any
  46ba3c:	ldr	x0, [sp, #432]
  46ba40:	ldr	x0, [x0, #88]
  46ba44:	cmp	x0, #0x0
  46ba48:	cset	w0, eq  // eq = none
  46ba4c:	and	w0, w0, #0xff
  46ba50:	and	x0, x0, #0xff
  46ba54:	cmp	x0, #0x0
  46ba58:	b.eq	46ba64 <_obstack_memory_used@@Base+0xe924>  // b.none
  46ba5c:	mov	w0, #0x1                   	// #1
  46ba60:	b	46ba68 <_obstack_memory_used@@Base+0xe928>
  46ba64:	mov	w0, #0x0                   	// #0
  46ba68:	cmp	w0, #0x0
  46ba6c:	b.ne	46ba90 <_obstack_memory_used@@Base+0xe950>  // b.any
  46ba70:	ldr	x0, [sp, #432]
  46ba74:	ldr	x0, [x0, #96]
  46ba78:	cmp	x0, #0x0
  46ba7c:	cset	w0, eq  // eq = none
  46ba80:	and	w0, w0, #0xff
  46ba84:	and	x0, x0, #0xff
  46ba88:	cmp	x0, #0x0
  46ba8c:	b.eq	46ba98 <_obstack_memory_used@@Base+0xe958>  // b.none
  46ba90:	mov	w0, #0x1                   	// #1
  46ba94:	b	46c794 <_obstack_memory_used@@Base+0xf654>
  46ba98:	ldr	x0, [sp, #432]
  46ba9c:	ldr	x0, [x0, #72]
  46baa0:	ldr	x0, [x0, #16]
  46baa4:	cmp	x0, #0x0
  46baa8:	b.ne	46bb18 <_obstack_memory_used@@Base+0xe9d8>  // b.any
  46baac:	ldr	x0, [sp, #432]
  46bab0:	ldr	x0, [x0, #80]
  46bab4:	ldr	x0, [x0, #16]
  46bab8:	cmp	x0, #0x0
  46babc:	b.ne	46bb18 <_obstack_memory_used@@Base+0xe9d8>  // b.any
  46bac0:	ldr	x0, [sp, #432]
  46bac4:	ldr	x0, [x0, #88]
  46bac8:	ldr	x0, [x0, #16]
  46bacc:	cmp	x0, #0x0
  46bad0:	b.eq	46baec <_obstack_memory_used@@Base+0xe9ac>  // b.none
  46bad4:	ldr	x0, [sp, #72]
  46bad8:	ldrb	w0, [x0, #56]
  46badc:	and	w0, w0, #0xffffff80
  46bae0:	and	w0, w0, #0xff
  46bae4:	cmp	w0, #0x0
  46bae8:	b.ne	46bb18 <_obstack_memory_used@@Base+0xe9d8>  // b.any
  46baec:	ldr	x0, [sp, #48]
  46baf0:	cmp	x0, #0x0
  46baf4:	b.eq	46bb0c <_obstack_memory_used@@Base+0xe9cc>  // b.none
  46baf8:	ldr	x0, [sp, #40]
  46bafc:	cmp	x0, #0x0
  46bb00:	b.eq	46bb0c <_obstack_memory_used@@Base+0xe9cc>  // b.none
  46bb04:	mov	w0, #0x1                   	// #1
  46bb08:	b	46c794 <_obstack_memory_used@@Base+0xf654>
  46bb0c:	str	xzr, [sp, #40]
  46bb10:	ldr	x0, [sp, #40]
  46bb14:	str	x0, [sp, #48]
  46bb18:	ldr	x0, [sp, #24]
  46bb1c:	cmp	x0, #0x0
  46bb20:	b.ne	46bb34 <_obstack_memory_used@@Base+0xe9f4>  // b.any
  46bb24:	ldr	x0, [sp, #432]
  46bb28:	ldr	x0, [x0, #152]
  46bb2c:	cmp	x0, #0x0
  46bb30:	b.eq	46bb3c <_obstack_memory_used@@Base+0xe9fc>  // b.none
  46bb34:	mov	w0, #0x1                   	// #1
  46bb38:	b	46bb40 <_obstack_memory_used@@Base+0xea00>
  46bb3c:	mov	w0, #0x0                   	// #0
  46bb40:	strb	w0, [sp, #399]
  46bb44:	ldrb	w0, [sp, #399]
  46bb48:	and	w0, w0, #0x1
  46bb4c:	strb	w0, [sp, #399]
  46bb50:	ldr	x0, [sp, #432]
  46bb54:	ldr	x0, [x0, #16]
  46bb58:	add	x0, x0, #0x1
  46bb5c:	mov	x3, x0
  46bb60:	ldr	x0, [sp, #72]
  46bb64:	ldr	x1, [x0, #40]
  46bb68:	ldr	x0, [sp, #72]
  46bb6c:	ldr	x0, [x0, #24]
  46bb70:	and	x0, x0, #0x400000
  46bb74:	cmp	x0, #0x0
  46bb78:	cset	w0, ne  // ne = any
  46bb7c:	and	w2, w0, #0xff
  46bb80:	add	x0, sp, #0x58
  46bb84:	ldr	x6, [sp, #432]
  46bb88:	mov	w5, w2
  46bb8c:	mov	x4, x1
  46bb90:	ldr	x2, [sp, #56]
  46bb94:	ldr	x1, [sp, #64]
  46bb98:	bl	45d77c <_obstack_memory_used@@Base+0x63c>
  46bb9c:	str	w0, [sp, #460]
  46bba0:	ldr	w0, [sp, #460]
  46bba4:	cmp	w0, #0x0
  46bba8:	cset	w0, ne  // ne = any
  46bbac:	and	w0, w0, #0xff
  46bbb0:	and	x0, x0, #0xff
  46bbb4:	cmp	x0, #0x0
  46bbb8:	b.ne	46c72c <_obstack_memory_used@@Base+0xf5ec>  // b.any
  46bbbc:	ldr	x0, [sp, #32]
  46bbc0:	str	x0, [sp, #192]
  46bbc4:	ldr	x0, [sp, #32]
  46bbc8:	str	x0, [sp, #184]
  46bbcc:	ldr	x0, [sp, #72]
  46bbd0:	ldrb	w0, [x0, #56]
  46bbd4:	ubfx	x0, x0, #7, #1
  46bbd8:	and	w0, w0, #0xff
  46bbdc:	strb	w0, [sp, #229]
  46bbe0:	ldr	x0, [sp, #432]
  46bbe4:	ldr	x0, [x0, #152]
  46bbe8:	lsl	x1, x0, #1
  46bbec:	add	x0, sp, #0x58
  46bbf0:	mov	x2, x1
  46bbf4:	ldr	w1, [sp, #464]
  46bbf8:	bl	47426c <_obstack_memory_used@@Base+0x1712c>
  46bbfc:	str	w0, [sp, #460]
  46bc00:	ldr	w0, [sp, #460]
  46bc04:	cmp	w0, #0x0
  46bc08:	cset	w0, ne  // ne = any
  46bc0c:	and	w0, w0, #0xff
  46bc10:	and	x0, x0, #0xff
  46bc14:	cmp	x0, #0x0
  46bc18:	b.ne	46c734 <_obstack_memory_used@@Base+0xf5f4>  // b.any
  46bc1c:	ldr	x0, [sp, #24]
  46bc20:	cmp	x0, #0x1
  46bc24:	b.hi	46bc40 <_obstack_memory_used@@Base+0xeb00>  // b.pmore
  46bc28:	ldr	x0, [sp, #432]
  46bc2c:	ldrb	w0, [x0, #176]
  46bc30:	and	w0, w0, #0x2
  46bc34:	and	w0, w0, #0xff
  46bc38:	cmp	w0, #0x0
  46bc3c:	b.eq	46bcac <_obstack_memory_used@@Base+0xeb6c>  // b.none
  46bc40:	ldr	x0, [sp, #152]
  46bc44:	mov	x1, x0
  46bc48:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  46bc4c:	cmp	x1, x0
  46bc50:	cset	w0, hi  // hi = pmore
  46bc54:	and	w0, w0, #0xff
  46bc58:	and	x0, x0, #0xff
  46bc5c:	cmp	x0, #0x0
  46bc60:	b.eq	46bc70 <_obstack_memory_used@@Base+0xeb30>  // b.none
  46bc64:	mov	w0, #0xc                   	// #12
  46bc68:	str	w0, [sp, #460]
  46bc6c:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46bc70:	ldr	x0, [sp, #152]
  46bc74:	add	x0, x0, #0x1
  46bc78:	lsl	x0, x0, #3
  46bc7c:	bl	4043f0 <malloc@plt>
  46bc80:	str	x0, [sp, #272]
  46bc84:	ldr	x0, [sp, #272]
  46bc88:	cmp	x0, #0x0
  46bc8c:	cset	w0, eq  // eq = none
  46bc90:	and	w0, w0, #0xff
  46bc94:	and	x0, x0, #0xff
  46bc98:	cmp	x0, #0x0
  46bc9c:	b.eq	46bcb0 <_obstack_memory_used@@Base+0xeb70>  // b.none
  46bca0:	mov	w0, #0xc                   	// #12
  46bca4:	str	w0, [sp, #460]
  46bca8:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46bcac:	str	xzr, [sp, #272]
  46bcb0:	ldr	x0, [sp, #48]
  46bcb4:	str	x0, [sp, #344]
  46bcb8:	ldr	w0, [sp, #464]
  46bcbc:	and	w0, w0, #0x1
  46bcc0:	cmp	w0, #0x0
  46bcc4:	b.eq	46bcd0 <_obstack_memory_used@@Base+0xeb90>  // b.none
  46bcc8:	mov	w0, #0x4                   	// #4
  46bccc:	b	46bcd4 <_obstack_memory_used@@Base+0xeb94>
  46bcd0:	mov	w0, #0x6                   	// #6
  46bcd4:	str	w0, [sp, #200]
  46bcd8:	ldr	x1, [sp, #40]
  46bcdc:	ldr	x0, [sp, #48]
  46bce0:	cmp	x1, x0
  46bce4:	b.ge	46bcf0 <_obstack_memory_used@@Base+0xebb0>  // b.tcont
  46bce8:	mov	w0, #0xffffffff            	// #-1
  46bcec:	b	46bcf4 <_obstack_memory_used@@Base+0xebb4>
  46bcf0:	mov	w0, #0x1                   	// #1
  46bcf4:	str	w0, [sp, #392]
  46bcf8:	ldr	x0, [sp, #40]
  46bcfc:	ldr	x2, [sp, #48]
  46bd00:	ldr	x1, [sp, #48]
  46bd04:	cmp	x2, x0
  46bd08:	csel	x0, x1, x0, le
  46bd0c:	str	x0, [sp, #384]
  46bd10:	ldr	x0, [sp, #48]
  46bd14:	ldr	x2, [sp, #40]
  46bd18:	ldr	x1, [sp, #40]
  46bd1c:	cmp	x2, x0
  46bd20:	csel	x0, x1, x0, ge  // ge = tcont
  46bd24:	str	x0, [sp, #376]
  46bd28:	ldr	x0, [sp, #432]
  46bd2c:	ldr	w0, [x0, #180]
  46bd30:	cmp	w0, #0x1
  46bd34:	cset	w0, eq  // eq = none
  46bd38:	strb	w0, [sp, #375]
  46bd3c:	ldr	x0, [sp, #416]
  46bd40:	cmp	x0, #0x0
  46bd44:	b.eq	46bdb8 <_obstack_memory_used@@Base+0xec78>  // b.none
  46bd48:	ldrb	w0, [sp, #375]
  46bd4c:	cmp	w0, #0x0
  46bd50:	b.ne	46bd74 <_obstack_memory_used@@Base+0xec34>  // b.any
  46bd54:	ldr	x0, [sp, #72]
  46bd58:	ldr	x0, [x0, #24]
  46bd5c:	and	x0, x0, #0x400000
  46bd60:	cmp	x0, #0x0
  46bd64:	b.ne	46bd7c <_obstack_memory_used@@Base+0xec3c>  // b.any
  46bd68:	ldr	x0, [sp, #408]
  46bd6c:	cmp	x0, #0x0
  46bd70:	b.ne	46bd7c <_obstack_memory_used@@Base+0xec3c>  // b.any
  46bd74:	mov	w1, #0x4                   	// #4
  46bd78:	b	46bd80 <_obstack_memory_used@@Base+0xec40>
  46bd7c:	mov	w1, #0x0                   	// #0
  46bd80:	ldr	x2, [sp, #48]
  46bd84:	ldr	x0, [sp, #40]
  46bd88:	cmp	x2, x0
  46bd8c:	b.gt	46bd98 <_obstack_memory_used@@Base+0xec58>
  46bd90:	mov	w0, #0x2                   	// #2
  46bd94:	b	46bd9c <_obstack_memory_used@@Base+0xec5c>
  46bd98:	mov	w0, #0x0                   	// #0
  46bd9c:	orr	w0, w1, w0
  46bda0:	ldr	x1, [sp, #408]
  46bda4:	cmp	x1, #0x0
  46bda8:	cset	w1, ne  // ne = any
  46bdac:	and	w1, w1, #0xff
  46bdb0:	orr	w0, w0, w1
  46bdb4:	b	46bdbc <_obstack_memory_used@@Base+0xec7c>
  46bdb8:	mov	w0, #0x8                   	// #8
  46bdbc:	str	w0, [sp, #368]
  46bdc0:	mov	w0, #0x1                   	// #1
  46bdc4:	str	w0, [sp, #460]
  46bdc8:	ldr	x0, [sp, #344]
  46bdcc:	ldr	x1, [sp, #384]
  46bdd0:	cmp	x1, x0
  46bdd4:	b.gt	46c73c <_obstack_memory_used@@Base+0xf5fc>
  46bdd8:	ldr	x0, [sp, #344]
  46bddc:	ldr	x1, [sp, #376]
  46bde0:	cmp	x1, x0
  46bde4:	b.lt	46c73c <_obstack_memory_used@@Base+0xf5fc>  // b.tstop
  46bde8:	ldr	w0, [sp, #368]
  46bdec:	cmp	w0, #0x8
  46bdf0:	b.eq	46c148 <_obstack_memory_used@@Base+0xf008>  // b.none
  46bdf4:	ldr	w0, [sp, #368]
  46bdf8:	cmp	w0, #0x8
  46bdfc:	b.gt	46c04c <_obstack_memory_used@@Base+0xef0c>
  46be00:	ldr	w0, [sp, #368]
  46be04:	cmp	w0, #0x7
  46be08:	b.eq	46be50 <_obstack_memory_used@@Base+0xed10>  // b.none
  46be0c:	ldr	w0, [sp, #368]
  46be10:	cmp	w0, #0x7
  46be14:	b.gt	46c04c <_obstack_memory_used@@Base+0xef0c>
  46be18:	ldr	w0, [sp, #368]
  46be1c:	cmp	w0, #0x5
  46be20:	b.gt	46be34 <_obstack_memory_used@@Base+0xecf4>
  46be24:	ldr	w0, [sp, #368]
  46be28:	cmp	w0, #0x4
  46be2c:	b.ge	46c020 <_obstack_memory_used@@Base+0xeee0>  // b.tcont
  46be30:	b	46c04c <_obstack_memory_used@@Base+0xef0c>
  46be34:	ldr	w0, [sp, #368]
  46be38:	cmp	w0, #0x6
  46be3c:	b.eq	46bebc <_obstack_memory_used@@Base+0xed7c>  // b.none
  46be40:	b	46c04c <_obstack_memory_used@@Base+0xef0c>
  46be44:	ldr	x0, [sp, #344]
  46be48:	add	x0, x0, #0x1
  46be4c:	str	x0, [sp, #344]
  46be50:	ldr	x0, [sp, #344]
  46be54:	ldr	x1, [sp, #376]
  46be58:	cmp	x1, x0
  46be5c:	cset	w0, gt
  46be60:	and	w0, w0, #0xff
  46be64:	and	x0, x0, #0xff
  46be68:	cmp	x0, #0x0
  46be6c:	b.eq	46bf0c <_obstack_memory_used@@Base+0xedcc>  // b.none
  46be70:	ldr	x0, [sp, #344]
  46be74:	mov	x1, x0
  46be78:	ldr	x0, [sp, #64]
  46be7c:	add	x0, x0, x1
  46be80:	ldrb	w0, [x0]
  46be84:	and	x0, x0, #0xff
  46be88:	ldr	x1, [sp, #408]
  46be8c:	add	x0, x1, x0
  46be90:	ldrb	w0, [x0]
  46be94:	and	x0, x0, #0xff
  46be98:	ldr	x1, [sp, #416]
  46be9c:	add	x0, x1, x0
  46bea0:	ldrb	w0, [x0]
  46bea4:	cmp	w0, #0x0
  46bea8:	b.eq	46be44 <_obstack_memory_used@@Base+0xed04>  // b.none
  46beac:	b	46bf0c <_obstack_memory_used@@Base+0xedcc>
  46beb0:	ldr	x0, [sp, #344]
  46beb4:	add	x0, x0, #0x1
  46beb8:	str	x0, [sp, #344]
  46bebc:	ldr	x0, [sp, #344]
  46bec0:	ldr	x1, [sp, #376]
  46bec4:	cmp	x1, x0
  46bec8:	cset	w0, gt
  46becc:	and	w0, w0, #0xff
  46bed0:	and	x0, x0, #0xff
  46bed4:	cmp	x0, #0x0
  46bed8:	b.eq	46bf14 <_obstack_memory_used@@Base+0xedd4>  // b.none
  46bedc:	ldr	x0, [sp, #344]
  46bee0:	mov	x1, x0
  46bee4:	ldr	x0, [sp, #64]
  46bee8:	add	x0, x0, x1
  46beec:	ldrb	w0, [x0]
  46bef0:	and	x0, x0, #0xff
  46bef4:	ldr	x1, [sp, #416]
  46bef8:	add	x0, x1, x0
  46befc:	ldrb	w0, [x0]
  46bf00:	cmp	w0, #0x0
  46bf04:	b.eq	46beb0 <_obstack_memory_used@@Base+0xed70>  // b.none
  46bf08:	b	46bf14 <_obstack_memory_used@@Base+0xedd4>
  46bf0c:	nop
  46bf10:	b	46bf18 <_obstack_memory_used@@Base+0xedd8>
  46bf14:	nop
  46bf18:	ldr	x0, [sp, #344]
  46bf1c:	ldr	x1, [sp, #376]
  46bf20:	cmp	x1, x0
  46bf24:	cset	w0, eq  // eq = none
  46bf28:	and	w0, w0, #0xff
  46bf2c:	and	x0, x0, #0xff
  46bf30:	cmp	x0, #0x0
  46bf34:	b.eq	46c150 <_obstack_memory_used@@Base+0xf010>  // b.none
  46bf38:	ldr	x0, [sp, #344]
  46bf3c:	ldr	x1, [sp, #56]
  46bf40:	cmp	x1, x0
  46bf44:	b.le	46bf60 <_obstack_memory_used@@Base+0xee20>
  46bf48:	ldr	x0, [sp, #344]
  46bf4c:	mov	x1, x0
  46bf50:	ldr	x0, [sp, #64]
  46bf54:	add	x0, x0, x1
  46bf58:	ldrb	w0, [x0]
  46bf5c:	b	46bf64 <_obstack_memory_used@@Base+0xee24>
  46bf60:	mov	w0, #0x0                   	// #0
  46bf64:	str	w0, [sp, #364]
  46bf68:	ldr	x0, [sp, #408]
  46bf6c:	cmp	x0, #0x0
  46bf70:	b.eq	46bf8c <_obstack_memory_used@@Base+0xee4c>  // b.none
  46bf74:	ldrsw	x0, [sp, #364]
  46bf78:	ldr	x1, [sp, #408]
  46bf7c:	add	x0, x1, x0
  46bf80:	ldrb	w0, [x0]
  46bf84:	and	x0, x0, #0xff
  46bf88:	b	46bf90 <_obstack_memory_used@@Base+0xee50>
  46bf8c:	ldrsw	x0, [sp, #364]
  46bf90:	ldr	x1, [sp, #416]
  46bf94:	add	x0, x1, x0
  46bf98:	ldrb	w0, [x0]
  46bf9c:	cmp	w0, #0x0
  46bfa0:	b.ne	46c150 <_obstack_memory_used@@Base+0xf010>  // b.any
  46bfa4:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46bfa8:	ldr	x0, [sp, #344]
  46bfac:	ldr	x1, [sp, #56]
  46bfb0:	cmp	x1, x0
  46bfb4:	b.le	46bfd0 <_obstack_memory_used@@Base+0xee90>
  46bfb8:	ldr	x0, [sp, #344]
  46bfbc:	mov	x1, x0
  46bfc0:	ldr	x0, [sp, #64]
  46bfc4:	add	x0, x0, x1
  46bfc8:	ldrb	w0, [x0]
  46bfcc:	b	46bfd4 <_obstack_memory_used@@Base+0xee94>
  46bfd0:	mov	w0, #0x0                   	// #0
  46bfd4:	str	w0, [sp, #364]
  46bfd8:	ldr	x0, [sp, #408]
  46bfdc:	cmp	x0, #0x0
  46bfe0:	b.eq	46bffc <_obstack_memory_used@@Base+0xeebc>  // b.none
  46bfe4:	ldrsw	x0, [sp, #364]
  46bfe8:	ldr	x1, [sp, #408]
  46bfec:	add	x0, x1, x0
  46bff0:	ldrb	w0, [x0]
  46bff4:	and	x0, x0, #0xff
  46bff8:	b	46c000 <_obstack_memory_used@@Base+0xeec0>
  46bffc:	ldrsw	x0, [sp, #364]
  46c000:	ldr	x1, [sp, #416]
  46c004:	add	x0, x1, x0
  46c008:	ldrb	w0, [x0]
  46c00c:	cmp	w0, #0x0
  46c010:	b.ne	46c034 <_obstack_memory_used@@Base+0xeef4>  // b.any
  46c014:	ldr	x0, [sp, #344]
  46c018:	sub	x0, x0, #0x1
  46c01c:	str	x0, [sp, #344]
  46c020:	ldr	x0, [sp, #344]
  46c024:	ldr	x1, [sp, #384]
  46c028:	cmp	x1, x0
  46c02c:	b.le	46bfa8 <_obstack_memory_used@@Base+0xee68>
  46c030:	b	46c038 <_obstack_memory_used@@Base+0xeef8>
  46c034:	nop
  46c038:	ldr	x0, [sp, #344]
  46c03c:	ldr	x1, [sp, #384]
  46c040:	cmp	x1, x0
  46c044:	b.le	46c158 <_obstack_memory_used@@Base+0xf018>
  46c048:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c04c:	ldr	x1, [sp, #344]
  46c050:	ldr	x0, [sp, #128]
  46c054:	sub	x0, x1, x0
  46c058:	str	x0, [sp, #448]
  46c05c:	ldr	x0, [sp, #144]
  46c060:	mov	x1, x0
  46c064:	ldr	x0, [sp, #448]
  46c068:	cmp	x0, x1
  46c06c:	cset	w0, cs  // cs = hs, nlast
  46c070:	and	w0, w0, #0xff
  46c074:	and	x0, x0, #0xff
  46c078:	cmp	x0, #0x0
  46c07c:	b.eq	46c0c0 <_obstack_memory_used@@Base+0xef80>  // b.none
  46c080:	ldr	x1, [sp, #344]
  46c084:	add	x0, sp, #0x58
  46c088:	ldr	w2, [sp, #464]
  46c08c:	bl	45eee8 <_obstack_memory_used@@Base+0x1da8>
  46c090:	str	w0, [sp, #460]
  46c094:	ldr	w0, [sp, #460]
  46c098:	cmp	w0, #0x0
  46c09c:	cset	w0, ne  // ne = any
  46c0a0:	and	w0, w0, #0xff
  46c0a4:	and	x0, x0, #0xff
  46c0a8:	cmp	x0, #0x0
  46c0ac:	b.ne	46c744 <_obstack_memory_used@@Base+0xf604>  // b.any
  46c0b0:	ldr	x1, [sp, #344]
  46c0b4:	ldr	x0, [sp, #128]
  46c0b8:	sub	x0, x1, x0
  46c0bc:	str	x0, [sp, #448]
  46c0c0:	ldr	x0, [sp, #344]
  46c0c4:	ldr	x1, [sp, #56]
  46c0c8:	cmp	x1, x0
  46c0cc:	b.le	46c0e4 <_obstack_memory_used@@Base+0xefa4>
  46c0d0:	ldr	x1, [sp, #96]
  46c0d4:	ldr	x0, [sp, #448]
  46c0d8:	add	x0, x1, x0
  46c0dc:	ldrb	w0, [x0]
  46c0e0:	b	46c0e8 <_obstack_memory_used@@Base+0xefa8>
  46c0e4:	mov	w0, #0x0                   	// #0
  46c0e8:	str	w0, [sp, #364]
  46c0ec:	ldrsw	x0, [sp, #364]
  46c0f0:	ldr	x1, [sp, #416]
  46c0f4:	add	x0, x1, x0
  46c0f8:	ldrb	w0, [x0]
  46c0fc:	cmp	w0, #0x0
  46c100:	b.ne	46c140 <_obstack_memory_used@@Base+0xf000>  // b.any
  46c104:	ldrsw	x1, [sp, #392]
  46c108:	ldr	x0, [sp, #344]
  46c10c:	add	x0, x1, x0
  46c110:	str	x0, [sp, #344]
  46c114:	ldr	x0, [sp, #344]
  46c118:	ldr	x1, [sp, #384]
  46c11c:	cmp	x1, x0
  46c120:	b.gt	46c134 <_obstack_memory_used@@Base+0xeff4>
  46c124:	ldr	x0, [sp, #344]
  46c128:	ldr	x1, [sp, #376]
  46c12c:	cmp	x1, x0
  46c130:	b.ge	46c04c <_obstack_memory_used@@Base+0xef0c>  // b.tcont
  46c134:	mov	w0, #0x1                   	// #1
  46c138:	str	w0, [sp, #460]
  46c13c:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c140:	nop
  46c144:	b	46c15c <_obstack_memory_used@@Base+0xf01c>
  46c148:	nop
  46c14c:	b	46c15c <_obstack_memory_used@@Base+0xf01c>
  46c150:	nop
  46c154:	b	46c15c <_obstack_memory_used@@Base+0xf01c>
  46c158:	nop
  46c15c:	ldr	x1, [sp, #344]
  46c160:	add	x0, sp, #0x58
  46c164:	ldr	w2, [sp, #464]
  46c168:	bl	45eee8 <_obstack_memory_used@@Base+0x1da8>
  46c16c:	str	w0, [sp, #460]
  46c170:	ldr	w0, [sp, #460]
  46c174:	cmp	w0, #0x0
  46c178:	cset	w0, ne  // ne = any
  46c17c:	and	w0, w0, #0xff
  46c180:	and	x0, x0, #0xff
  46c184:	cmp	x0, #0x0
  46c188:	b.ne	46c74c <_obstack_memory_used@@Base+0xf60c>  // b.any
  46c18c:	ldrb	w0, [sp, #375]
  46c190:	eor	w0, w0, #0x1
  46c194:	and	w0, w0, #0xff
  46c198:	cmp	w0, #0x0
  46c19c:	b.eq	46c1bc <_obstack_memory_used@@Base+0xf07c>  // b.none
  46c1a0:	ldr	x0, [sp, #136]
  46c1a4:	cmp	x0, #0x0
  46c1a8:	b.eq	46c1bc <_obstack_memory_used@@Base+0xf07c>  // b.none
  46c1ac:	ldr	x0, [sp, #104]
  46c1b0:	ldr	w0, [x0]
  46c1b4:	cmn	w0, #0x1
  46c1b8:	b.eq	46c330 <_obstack_memory_used@@Base+0xf1f0>  // b.none
  46c1bc:	str	wzr, [sp, #312]
  46c1c0:	str	xzr, [sp, #288]
  46c1c4:	ldr	x0, [sp, #288]
  46c1c8:	str	x0, [sp, #280]
  46c1cc:	ldr	x1, [sp, #48]
  46c1d0:	ldr	x0, [sp, #40]
  46c1d4:	cmp	x1, x0
  46c1d8:	b.gt	46c1e4 <_obstack_memory_used@@Base+0xf0a4>
  46c1dc:	add	x0, sp, #0x158
  46c1e0:	b	46c1e8 <_obstack_memory_used@@Base+0xf0a8>
  46c1e4:	mov	x0, #0x0                   	// #0
  46c1e8:	add	x3, sp, #0x58
  46c1ec:	mov	x2, x0
  46c1f0:	ldrb	w1, [sp, #399]
  46c1f4:	mov	x0, x3
  46c1f8:	bl	46cac8 <_obstack_memory_used@@Base+0xf988>
  46c1fc:	str	x0, [sp, #424]
  46c200:	ldr	x0, [sp, #424]
  46c204:	cmn	x0, #0x1
  46c208:	b.eq	46c324 <_obstack_memory_used@@Base+0xf1e4>  // b.none
  46c20c:	ldr	x0, [sp, #424]
  46c210:	cmn	x0, #0x2
  46c214:	cset	w0, eq  // eq = none
  46c218:	and	w0, w0, #0xff
  46c21c:	and	x0, x0, #0xff
  46c220:	cmp	x0, #0x0
  46c224:	b.eq	46c234 <_obstack_memory_used@@Base+0xf0f4>  // b.none
  46c228:	mov	w0, #0xc                   	// #12
  46c22c:	str	w0, [sp, #460]
  46c230:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c234:	ldr	x0, [sp, #424]
  46c238:	str	x0, [sp, #256]
  46c23c:	ldr	x0, [sp, #72]
  46c240:	ldrb	w0, [x0, #56]
  46c244:	and	w0, w0, #0x10
  46c248:	and	w0, w0, #0xff
  46c24c:	cmp	w0, #0x0
  46c250:	b.ne	46c260 <_obstack_memory_used@@Base+0xf120>  // b.any
  46c254:	ldr	x0, [sp, #24]
  46c258:	cmp	x0, #0x1
  46c25c:	b.hi	46c270 <_obstack_memory_used@@Base+0xf130>  // b.pmore
  46c260:	ldr	x0, [sp, #432]
  46c264:	ldr	x0, [x0, #152]
  46c268:	cmp	x0, #0x0
  46c26c:	b.eq	46c29c <_obstack_memory_used@@Base+0xf15c>  // b.none
  46c270:	ldr	x1, [sp, #272]
  46c274:	ldr	x0, [sp, #424]
  46c278:	lsl	x0, x0, #3
  46c27c:	add	x0, x1, x0
  46c280:	ldr	x0, [x0]
  46c284:	str	x0, [sp, #352]
  46c288:	add	x0, sp, #0x58
  46c28c:	ldr	x2, [sp, #424]
  46c290:	ldr	x1, [sp, #352]
  46c294:	bl	46d1a0 <_obstack_memory_used@@Base+0x10060>
  46c298:	str	x0, [sp, #264]
  46c29c:	ldr	x0, [sp, #72]
  46c2a0:	ldrb	w0, [x0, #56]
  46c2a4:	and	w0, w0, #0x10
  46c2a8:	and	w0, w0, #0xff
  46c2ac:	cmp	w0, #0x0
  46c2b0:	b.ne	46c2d8 <_obstack_memory_used@@Base+0xf198>  // b.any
  46c2b4:	ldr	x0, [sp, #24]
  46c2b8:	cmp	x0, #0x1
  46c2bc:	b.ls	46c2d8 <_obstack_memory_used@@Base+0xf198>  // b.plast
  46c2c0:	ldr	x0, [sp, #432]
  46c2c4:	ldrb	w0, [x0, #176]
  46c2c8:	and	w0, w0, #0x1
  46c2cc:	and	w0, w0, #0xff
  46c2d0:	cmp	w0, #0x0
  46c2d4:	b.ne	46c2e8 <_obstack_memory_used@@Base+0xf1a8>  // b.any
  46c2d8:	ldr	x0, [sp, #432]
  46c2dc:	ldr	x0, [x0, #152]
  46c2e0:	cmp	x0, #0x0
  46c2e4:	b.eq	46c34c <_obstack_memory_used@@Base+0xf20c>  // b.none
  46c2e8:	add	x0, sp, #0x58
  46c2ec:	bl	46c79c <_obstack_memory_used@@Base+0xf65c>
  46c2f0:	str	w0, [sp, #460]
  46c2f4:	ldr	w0, [sp, #460]
  46c2f8:	cmp	w0, #0x0
  46c2fc:	b.eq	46c348 <_obstack_memory_used@@Base+0xf208>  // b.none
  46c300:	ldr	w0, [sp, #460]
  46c304:	cmp	w0, #0x1
  46c308:	cset	w0, ne  // ne = any
  46c30c:	and	w0, w0, #0xff
  46c310:	and	x0, x0, #0xff
  46c314:	cmp	x0, #0x0
  46c318:	b.ne	46c754 <_obstack_memory_used@@Base+0xf614>  // b.any
  46c31c:	mov	x0, #0xffffffffffffffff    	// #-1
  46c320:	str	x0, [sp, #424]
  46c324:	add	x0, sp, #0x58
  46c328:	bl	4743ac <_obstack_memory_used@@Base+0x1726c>
  46c32c:	b	46c334 <_obstack_memory_used@@Base+0xf1f4>
  46c330:	nop
  46c334:	ldrsw	x1, [sp, #392]
  46c338:	ldr	x0, [sp, #344]
  46c33c:	add	x0, x1, x0
  46c340:	str	x0, [sp, #344]
  46c344:	b	46bdc0 <_obstack_memory_used@@Base+0xec80>
  46c348:	nop
  46c34c:	ldr	x0, [sp, #24]
  46c350:	cmp	x0, #0x0
  46c354:	b.eq	46c75c <_obstack_memory_used@@Base+0xf61c>  // b.none
  46c358:	mov	x0, #0x1                   	// #1
  46c35c:	str	x0, [sp, #440]
  46c360:	b	46c3a0 <_obstack_memory_used@@Base+0xf260>
  46c364:	ldr	x0, [sp, #440]
  46c368:	lsl	x0, x0, #4
  46c36c:	ldr	x1, [sp, #16]
  46c370:	add	x0, x1, x0
  46c374:	mov	x1, #0xffffffffffffffff    	// #-1
  46c378:	str	x1, [x0, #8]
  46c37c:	ldr	x1, [sp, #440]
  46c380:	lsl	x1, x1, #4
  46c384:	ldr	x2, [sp, #16]
  46c388:	add	x1, x2, x1
  46c38c:	ldr	x0, [x0, #8]
  46c390:	str	x0, [x1]
  46c394:	ldr	x0, [sp, #440]
  46c398:	add	x0, x0, #0x1
  46c39c:	str	x0, [sp, #440]
  46c3a0:	ldr	x0, [sp, #440]
  46c3a4:	ldr	x1, [sp, #24]
  46c3a8:	cmp	x1, x0
  46c3ac:	b.hi	46c364 <_obstack_memory_used@@Base+0xf224>  // b.pmore
  46c3b0:	ldr	x0, [sp, #16]
  46c3b4:	str	xzr, [x0]
  46c3b8:	ldr	x1, [sp, #256]
  46c3bc:	ldr	x0, [sp, #16]
  46c3c0:	str	x1, [x0, #8]
  46c3c4:	ldr	x0, [sp, #72]
  46c3c8:	ldrb	w0, [x0, #56]
  46c3cc:	and	w0, w0, #0x10
  46c3d0:	and	w0, w0, #0xff
  46c3d4:	cmp	w0, #0x0
  46c3d8:	b.ne	46c460 <_obstack_memory_used@@Base+0xf320>  // b.any
  46c3dc:	ldr	x0, [sp, #24]
  46c3e0:	cmp	x0, #0x1
  46c3e4:	b.ls	46c460 <_obstack_memory_used@@Base+0xf320>  // b.plast
  46c3e8:	ldr	x0, [sp, #432]
  46c3ec:	ldrb	w0, [x0, #176]
  46c3f0:	and	w0, w0, #0x1
  46c3f4:	and	w0, w0, #0xff
  46c3f8:	cmp	w0, #0x0
  46c3fc:	b.eq	46c418 <_obstack_memory_used@@Base+0xf2d8>  // b.none
  46c400:	ldr	x0, [sp, #432]
  46c404:	ldr	x0, [x0, #152]
  46c408:	cmp	x0, #0x0
  46c40c:	b.le	46c418 <_obstack_memory_used@@Base+0xf2d8>
  46c410:	mov	w0, #0x1                   	// #1
  46c414:	b	46c41c <_obstack_memory_used@@Base+0xf2dc>
  46c418:	mov	w0, #0x0                   	// #0
  46c41c:	and	w0, w0, #0x1
  46c420:	and	w1, w0, #0xff
  46c424:	add	x0, sp, #0x58
  46c428:	mov	w4, w1
  46c42c:	ldr	x3, [sp, #16]
  46c430:	ldr	x2, [sp, #24]
  46c434:	mov	x1, x0
  46c438:	ldr	x0, [sp, #72]
  46c43c:	bl	46dac8 <_obstack_memory_used@@Base+0x10988>
  46c440:	str	w0, [sp, #460]
  46c444:	ldr	w0, [sp, #460]
  46c448:	cmp	w0, #0x0
  46c44c:	cset	w0, ne  // ne = any
  46c450:	and	w0, w0, #0xff
  46c454:	and	x0, x0, #0xff
  46c458:	cmp	x0, #0x0
  46c45c:	b.ne	46c764 <_obstack_memory_used@@Base+0xf624>  // b.any
  46c460:	str	xzr, [sp, #440]
  46c464:	b	46c5cc <_obstack_memory_used@@Base+0xf48c>
  46c468:	ldr	x0, [sp, #440]
  46c46c:	lsl	x0, x0, #4
  46c470:	ldr	x1, [sp, #16]
  46c474:	add	x0, x1, x0
  46c478:	ldr	x0, [x0]
  46c47c:	cmn	x0, #0x1
  46c480:	b.eq	46c5c0 <_obstack_memory_used@@Base+0xf480>  // b.none
  46c484:	ldrb	w0, [sp, #228]
  46c488:	cmp	w0, #0x0
  46c48c:	cset	w0, ne  // ne = any
  46c490:	and	w0, w0, #0xff
  46c494:	and	x0, x0, #0xff
  46c498:	cmp	x0, #0x0
  46c49c:	b.eq	46c560 <_obstack_memory_used@@Base+0xf420>  // b.none
  46c4a0:	ldr	x0, [sp, #440]
  46c4a4:	lsl	x0, x0, #4
  46c4a8:	ldr	x1, [sp, #16]
  46c4ac:	add	x0, x1, x0
  46c4b0:	ldr	x1, [x0]
  46c4b4:	ldr	x0, [sp, #136]
  46c4b8:	cmp	x1, x0
  46c4bc:	b.ne	46c4c8 <_obstack_memory_used@@Base+0xf388>  // b.any
  46c4c0:	ldr	x0, [sp, #144]
  46c4c4:	b	46c4ec <_obstack_memory_used@@Base+0xf3ac>
  46c4c8:	ldr	x1, [sp, #112]
  46c4cc:	ldr	x0, [sp, #440]
  46c4d0:	lsl	x0, x0, #4
  46c4d4:	ldr	x2, [sp, #16]
  46c4d8:	add	x0, x2, x0
  46c4dc:	ldr	x0, [x0]
  46c4e0:	lsl	x0, x0, #3
  46c4e4:	add	x0, x1, x0
  46c4e8:	ldr	x0, [x0]
  46c4ec:	ldr	x1, [sp, #440]
  46c4f0:	lsl	x1, x1, #4
  46c4f4:	ldr	x2, [sp, #16]
  46c4f8:	add	x1, x2, x1
  46c4fc:	str	x0, [x1]
  46c500:	ldr	x0, [sp, #440]
  46c504:	lsl	x0, x0, #4
  46c508:	ldr	x1, [sp, #16]
  46c50c:	add	x0, x1, x0
  46c510:	ldr	x1, [x0, #8]
  46c514:	ldr	x0, [sp, #136]
  46c518:	cmp	x1, x0
  46c51c:	b.ne	46c528 <_obstack_memory_used@@Base+0xf3e8>  // b.any
  46c520:	ldr	x0, [sp, #144]
  46c524:	b	46c54c <_obstack_memory_used@@Base+0xf40c>
  46c528:	ldr	x1, [sp, #112]
  46c52c:	ldr	x0, [sp, #440]
  46c530:	lsl	x0, x0, #4
  46c534:	ldr	x2, [sp, #16]
  46c538:	add	x0, x2, x0
  46c53c:	ldr	x0, [x0, #8]
  46c540:	lsl	x0, x0, #3
  46c544:	add	x0, x1, x0
  46c548:	ldr	x0, [x0]
  46c54c:	ldr	x1, [sp, #440]
  46c550:	lsl	x1, x1, #4
  46c554:	ldr	x2, [sp, #16]
  46c558:	add	x1, x2, x1
  46c55c:	str	x0, [x1, #8]
  46c560:	ldr	x0, [sp, #440]
  46c564:	lsl	x0, x0, #4
  46c568:	ldr	x1, [sp, #16]
  46c56c:	add	x0, x1, x0
  46c570:	ldr	x2, [x0]
  46c574:	ldr	x1, [sp, #344]
  46c578:	ldr	x0, [sp, #440]
  46c57c:	lsl	x0, x0, #4
  46c580:	ldr	x3, [sp, #16]
  46c584:	add	x0, x3, x0
  46c588:	add	x1, x2, x1
  46c58c:	str	x1, [x0]
  46c590:	ldr	x0, [sp, #440]
  46c594:	lsl	x0, x0, #4
  46c598:	ldr	x1, [sp, #16]
  46c59c:	add	x0, x1, x0
  46c5a0:	ldr	x2, [x0, #8]
  46c5a4:	ldr	x1, [sp, #344]
  46c5a8:	ldr	x0, [sp, #440]
  46c5ac:	lsl	x0, x0, #4
  46c5b0:	ldr	x3, [sp, #16]
  46c5b4:	add	x0, x3, x0
  46c5b8:	add	x1, x2, x1
  46c5bc:	str	x1, [x0, #8]
  46c5c0:	ldr	x0, [sp, #440]
  46c5c4:	add	x0, x0, #0x1
  46c5c8:	str	x0, [sp, #440]
  46c5cc:	ldr	x0, [sp, #440]
  46c5d0:	ldr	x1, [sp, #24]
  46c5d4:	cmp	x1, x0
  46c5d8:	b.hi	46c468 <_obstack_memory_used@@Base+0xf328>  // b.pmore
  46c5dc:	str	xzr, [sp, #440]
  46c5e0:	b	46c630 <_obstack_memory_used@@Base+0xf4f0>
  46c5e4:	ldr	x1, [sp, #440]
  46c5e8:	ldr	x0, [sp, #24]
  46c5ec:	add	x0, x1, x0
  46c5f0:	lsl	x0, x0, #4
  46c5f4:	ldr	x1, [sp, #16]
  46c5f8:	add	x0, x1, x0
  46c5fc:	mov	x1, #0xffffffffffffffff    	// #-1
  46c600:	str	x1, [x0]
  46c604:	ldr	x1, [sp, #440]
  46c608:	ldr	x0, [sp, #24]
  46c60c:	add	x0, x1, x0
  46c610:	lsl	x0, x0, #4
  46c614:	ldr	x1, [sp, #16]
  46c618:	add	x0, x1, x0
  46c61c:	mov	x1, #0xffffffffffffffff    	// #-1
  46c620:	str	x1, [x0, #8]
  46c624:	ldr	x0, [sp, #440]
  46c628:	add	x0, x0, #0x1
  46c62c:	str	x0, [sp, #440]
  46c630:	ldr	x1, [sp, #440]
  46c634:	ldr	x0, [sp, #400]
  46c638:	cmp	x1, x0
  46c63c:	b.lt	46c5e4 <_obstack_memory_used@@Base+0xf4a4>  // b.tstop
  46c640:	ldr	x0, [sp, #432]
  46c644:	ldr	x0, [x0, #224]
  46c648:	cmp	x0, #0x0
  46c64c:	b.eq	46c75c <_obstack_memory_used@@Base+0xf61c>  // b.none
  46c650:	str	xzr, [sp, #440]
  46c654:	b	46c710 <_obstack_memory_used@@Base+0xf5d0>
  46c658:	ldr	x0, [sp, #432]
  46c65c:	ldr	x1, [x0, #224]
  46c660:	ldr	x0, [sp, #440]
  46c664:	lsl	x0, x0, #3
  46c668:	add	x0, x1, x0
  46c66c:	ldr	x0, [x0]
  46c670:	ldr	x1, [sp, #440]
  46c674:	cmp	x1, x0
  46c678:	b.eq	46c704 <_obstack_memory_used@@Base+0xf5c4>  // b.none
  46c67c:	ldr	x0, [sp, #432]
  46c680:	ldr	x1, [x0, #224]
  46c684:	ldr	x0, [sp, #440]
  46c688:	lsl	x0, x0, #3
  46c68c:	add	x0, x1, x0
  46c690:	ldr	x0, [x0]
  46c694:	add	x0, x0, #0x1
  46c698:	lsl	x0, x0, #4
  46c69c:	ldr	x1, [sp, #16]
  46c6a0:	add	x1, x1, x0
  46c6a4:	ldr	x0, [sp, #440]
  46c6a8:	add	x0, x0, #0x1
  46c6ac:	lsl	x0, x0, #4
  46c6b0:	ldr	x2, [sp, #16]
  46c6b4:	add	x0, x2, x0
  46c6b8:	ldr	x1, [x1]
  46c6bc:	str	x1, [x0]
  46c6c0:	ldr	x0, [sp, #432]
  46c6c4:	ldr	x1, [x0, #224]
  46c6c8:	ldr	x0, [sp, #440]
  46c6cc:	lsl	x0, x0, #3
  46c6d0:	add	x0, x1, x0
  46c6d4:	ldr	x0, [x0]
  46c6d8:	add	x0, x0, #0x1
  46c6dc:	lsl	x0, x0, #4
  46c6e0:	ldr	x1, [sp, #16]
  46c6e4:	add	x1, x1, x0
  46c6e8:	ldr	x0, [sp, #440]
  46c6ec:	add	x0, x0, #0x1
  46c6f0:	lsl	x0, x0, #4
  46c6f4:	ldr	x2, [sp, #16]
  46c6f8:	add	x0, x2, x0
  46c6fc:	ldr	x1, [x1, #8]
  46c700:	str	x1, [x0, #8]
  46c704:	ldr	x0, [sp, #440]
  46c708:	add	x0, x0, #0x1
  46c70c:	str	x0, [sp, #440]
  46c710:	ldr	x0, [sp, #440]
  46c714:	add	x0, x0, #0x1
  46c718:	mov	x1, x0
  46c71c:	ldr	x0, [sp, #24]
  46c720:	cmp	x0, x1
  46c724:	b.hi	46c658 <_obstack_memory_used@@Base+0xf518>  // b.pmore
  46c728:	b	46c75c <_obstack_memory_used@@Base+0xf61c>
  46c72c:	nop
  46c730:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c734:	nop
  46c738:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c73c:	nop
  46c740:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c744:	nop
  46c748:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c74c:	nop
  46c750:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c754:	nop
  46c758:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c75c:	nop
  46c760:	b	46c768 <_obstack_memory_used@@Base+0xf628>
  46c764:	nop
  46c768:	ldr	x0, [sp, #272]
  46c76c:	bl	404880 <free@plt>
  46c770:	ldr	x0, [sp, #432]
  46c774:	ldr	x0, [x0, #152]
  46c778:	cmp	x0, #0x0
  46c77c:	b.eq	46c788 <_obstack_memory_used@@Base+0xf648>  // b.none
  46c780:	add	x0, sp, #0x58
  46c784:	bl	4744b0 <_obstack_memory_used@@Base+0x17370>
  46c788:	add	x0, sp, #0x58
  46c78c:	bl	45fe9c <_obstack_memory_used@@Base+0x2d5c>
  46c790:	ldr	w0, [sp, #460]
  46c794:	ldp	x29, x30, [sp], #464
  46c798:	ret
  46c79c:	stp	x29, x30, [sp, #-144]!
  46c7a0:	mov	x29, sp
  46c7a4:	str	x0, [sp, #24]
  46c7a8:	ldr	x0, [sp, #24]
  46c7ac:	ldr	x0, [x0, #152]
  46c7b0:	str	x0, [sp, #96]
  46c7b4:	str	xzr, [sp, #104]
  46c7b8:	ldr	x0, [sp, #24]
  46c7bc:	ldr	x0, [x0, #168]
  46c7c0:	str	x0, [sp, #128]
  46c7c4:	ldr	x0, [sp, #24]
  46c7c8:	ldr	x0, [x0, #176]
  46c7cc:	str	x0, [sp, #136]
  46c7d0:	ldr	x1, [sp, #128]
  46c7d4:	mov	x0, #0x1ffffffffffffffe    	// #2305843009213693950
  46c7d8:	cmp	x1, x0
  46c7dc:	cset	w0, hi  // hi = pmore
  46c7e0:	and	w0, w0, #0xff
  46c7e4:	and	x0, x0, #0xff
  46c7e8:	cmp	x0, #0x0
  46c7ec:	b.eq	46c7f8 <_obstack_memory_used@@Base+0xf6b8>  // b.none
  46c7f0:	mov	w0, #0xc                   	// #12
  46c7f4:	b	46cac0 <_obstack_memory_used@@Base+0xf980>
  46c7f8:	ldr	x0, [sp, #128]
  46c7fc:	add	x0, x0, #0x1
  46c800:	lsl	x0, x0, #3
  46c804:	bl	4043f0 <malloc@plt>
  46c808:	str	x0, [sp, #112]
  46c80c:	ldr	x0, [sp, #112]
  46c810:	cmp	x0, #0x0
  46c814:	cset	w0, eq  // eq = none
  46c818:	and	w0, w0, #0xff
  46c81c:	and	x0, x0, #0xff
  46c820:	cmp	x0, #0x0
  46c824:	b.eq	46c834 <_obstack_memory_used@@Base+0xf6f4>  // b.none
  46c828:	mov	w0, #0xc                   	// #12
  46c82c:	str	w0, [sp, #124]
  46c830:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46c834:	ldr	x0, [sp, #96]
  46c838:	ldr	x0, [x0, #152]
  46c83c:	cmp	x0, #0x0
  46c840:	b.eq	46c9f8 <_obstack_memory_used@@Base+0xf8b8>  // b.none
  46c844:	ldr	x0, [sp, #128]
  46c848:	add	x0, x0, #0x1
  46c84c:	lsl	x0, x0, #3
  46c850:	bl	4043f0 <malloc@plt>
  46c854:	str	x0, [sp, #104]
  46c858:	ldr	x0, [sp, #104]
  46c85c:	cmp	x0, #0x0
  46c860:	cset	w0, eq  // eq = none
  46c864:	and	w0, w0, #0xff
  46c868:	and	x0, x0, #0xff
  46c86c:	cmp	x0, #0x0
  46c870:	b.eq	46c880 <_obstack_memory_used@@Base+0xf740>  // b.none
  46c874:	mov	w0, #0xc                   	// #12
  46c878:	str	w0, [sp, #124]
  46c87c:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46c880:	ldr	x0, [sp, #128]
  46c884:	add	x0, x0, #0x1
  46c888:	lsl	x0, x0, #3
  46c88c:	mov	x2, x0
  46c890:	mov	w1, #0x0                   	// #0
  46c894:	ldr	x0, [sp, #104]
  46c898:	bl	4044d0 <memset@plt>
  46c89c:	add	x0, sp, #0x28
  46c8a0:	ldr	x4, [sp, #128]
  46c8a4:	ldr	x3, [sp, #136]
  46c8a8:	ldr	x2, [sp, #104]
  46c8ac:	ldr	x1, [sp, #112]
  46c8b0:	bl	474b94 <_obstack_memory_used@@Base+0x17a54>
  46c8b4:	add	x0, sp, #0x28
  46c8b8:	mov	x1, x0
  46c8bc:	ldr	x0, [sp, #24]
  46c8c0:	bl	46e0f4 <_obstack_memory_used@@Base+0x10fb4>
  46c8c4:	str	w0, [sp, #124]
  46c8c8:	ldr	x0, [sp, #88]
  46c8cc:	bl	404880 <free@plt>
  46c8d0:	ldr	w0, [sp, #124]
  46c8d4:	cmp	w0, #0x0
  46c8d8:	cset	w0, ne  // ne = any
  46c8dc:	and	w0, w0, #0xff
  46c8e0:	and	x0, x0, #0xff
  46c8e4:	cmp	x0, #0x0
  46c8e8:	b.ne	46caa0 <_obstack_memory_used@@Base+0xf960>  // b.any
  46c8ec:	ldr	x0, [sp, #112]
  46c8f0:	ldr	x0, [x0]
  46c8f4:	cmp	x0, #0x0
  46c8f8:	b.ne	46c9ac <_obstack_memory_used@@Base+0xf86c>  // b.any
  46c8fc:	ldr	x0, [sp, #104]
  46c900:	ldr	x0, [x0]
  46c904:	cmp	x0, #0x0
  46c908:	b.ne	46c9ac <_obstack_memory_used@@Base+0xf86c>  // b.any
  46c90c:	ldr	x0, [sp, #128]
  46c910:	sub	x0, x0, #0x1
  46c914:	str	x0, [sp, #128]
  46c918:	ldr	x0, [sp, #128]
  46c91c:	cmp	x0, #0x0
  46c920:	b.ge	46c930 <_obstack_memory_used@@Base+0xf7f0>  // b.tcont
  46c924:	mov	w0, #0x1                   	// #1
  46c928:	str	w0, [sp, #124]
  46c92c:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46c930:	ldr	x0, [sp, #24]
  46c934:	ldr	x1, [x0, #184]
  46c938:	ldr	x0, [sp, #128]
  46c93c:	lsl	x0, x0, #3
  46c940:	add	x0, x1, x0
  46c944:	ldr	x0, [x0]
  46c948:	cmp	x0, #0x0
  46c94c:	b.eq	46c90c <_obstack_memory_used@@Base+0xf7cc>  // b.none
  46c950:	ldr	x0, [sp, #24]
  46c954:	ldr	x1, [x0, #184]
  46c958:	ldr	x0, [sp, #128]
  46c95c:	lsl	x0, x0, #3
  46c960:	add	x0, x1, x0
  46c964:	ldr	x0, [x0]
  46c968:	ldrb	w0, [x0, #104]
  46c96c:	and	w0, w0, #0x10
  46c970:	and	w0, w0, #0xff
  46c974:	cmp	w0, #0x0
  46c978:	b.eq	46c90c <_obstack_memory_used@@Base+0xf7cc>  // b.none
  46c97c:	ldr	x0, [sp, #24]
  46c980:	ldr	x1, [x0, #184]
  46c984:	ldr	x0, [sp, #128]
  46c988:	lsl	x0, x0, #3
  46c98c:	add	x0, x1, x0
  46c990:	ldr	x0, [x0]
  46c994:	ldr	x2, [sp, #128]
  46c998:	mov	x1, x0
  46c99c:	ldr	x0, [sp, #24]
  46c9a0:	bl	46d1a0 <_obstack_memory_used@@Base+0x10060>
  46c9a4:	str	x0, [sp, #136]
  46c9a8:	b	46c880 <_obstack_memory_used@@Base+0xf740>
  46c9ac:	ldr	x0, [sp, #128]
  46c9b0:	add	x0, x0, #0x1
  46c9b4:	mov	x3, x0
  46c9b8:	ldr	x2, [sp, #104]
  46c9bc:	ldr	x1, [sp, #112]
  46c9c0:	ldr	x0, [sp, #96]
  46c9c4:	bl	46e634 <_obstack_memory_used@@Base+0x114f4>
  46c9c8:	str	w0, [sp, #124]
  46c9cc:	ldr	x0, [sp, #104]
  46c9d0:	bl	404880 <free@plt>
  46c9d4:	str	xzr, [sp, #104]
  46c9d8:	ldr	w0, [sp, #124]
  46c9dc:	cmp	w0, #0x0
  46c9e0:	cset	w0, ne  // ne = any
  46c9e4:	and	w0, w0, #0xff
  46c9e8:	and	x0, x0, #0xff
  46c9ec:	cmp	x0, #0x0
  46c9f0:	b.eq	46ca64 <_obstack_memory_used@@Base+0xf924>  // b.none
  46c9f4:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46c9f8:	add	x0, sp, #0x28
  46c9fc:	ldr	x4, [sp, #128]
  46ca00:	ldr	x3, [sp, #136]
  46ca04:	ldr	x2, [sp, #104]
  46ca08:	ldr	x1, [sp, #112]
  46ca0c:	bl	474b94 <_obstack_memory_used@@Base+0x17a54>
  46ca10:	add	x0, sp, #0x28
  46ca14:	mov	x1, x0
  46ca18:	ldr	x0, [sp, #24]
  46ca1c:	bl	46e0f4 <_obstack_memory_used@@Base+0x10fb4>
  46ca20:	str	w0, [sp, #124]
  46ca24:	ldr	x0, [sp, #88]
  46ca28:	bl	404880 <free@plt>
  46ca2c:	ldr	w0, [sp, #124]
  46ca30:	cmp	w0, #0x0
  46ca34:	cset	w0, ne  // ne = any
  46ca38:	and	w0, w0, #0xff
  46ca3c:	and	x0, x0, #0xff
  46ca40:	cmp	x0, #0x0
  46ca44:	b.ne	46caa8 <_obstack_memory_used@@Base+0xf968>  // b.any
  46ca48:	ldr	x0, [sp, #112]
  46ca4c:	ldr	x0, [x0]
  46ca50:	cmp	x0, #0x0
  46ca54:	b.ne	46ca64 <_obstack_memory_used@@Base+0xf924>  // b.any
  46ca58:	mov	w0, #0x1                   	// #1
  46ca5c:	str	w0, [sp, #124]
  46ca60:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46ca64:	ldr	x0, [sp, #24]
  46ca68:	ldr	x0, [x0, #184]
  46ca6c:	bl	404880 <free@plt>
  46ca70:	ldr	x0, [sp, #24]
  46ca74:	ldr	x1, [sp, #112]
  46ca78:	str	x1, [x0, #184]
  46ca7c:	str	xzr, [sp, #112]
  46ca80:	ldr	x0, [sp, #24]
  46ca84:	ldr	x1, [sp, #136]
  46ca88:	str	x1, [x0, #176]
  46ca8c:	ldr	x0, [sp, #24]
  46ca90:	ldr	x1, [sp, #128]
  46ca94:	str	x1, [x0, #168]
  46ca98:	str	wzr, [sp, #124]
  46ca9c:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46caa0:	nop
  46caa4:	b	46caac <_obstack_memory_used@@Base+0xf96c>
  46caa8:	nop
  46caac:	ldr	x0, [sp, #112]
  46cab0:	bl	404880 <free@plt>
  46cab4:	ldr	x0, [sp, #104]
  46cab8:	bl	404880 <free@plt>
  46cabc:	ldr	w0, [sp, #124]
  46cac0:	ldp	x29, x30, [sp], #144
  46cac4:	ret
  46cac8:	stp	x29, x30, [sp, #-160]!
  46cacc:	mov	x29, sp
  46cad0:	str	x0, [sp, #40]
  46cad4:	strb	w1, [sp, #39]
  46cad8:	str	x2, [sp, #24]
  46cadc:	ldr	x0, [sp, #40]
  46cae0:	ldr	x0, [x0, #152]
  46cae4:	str	x0, [sp, #112]
  46cae8:	str	xzr, [sp, #152]
  46caec:	mov	x0, #0xffffffffffffffff    	// #-1
  46caf0:	str	x0, [sp, #144]
  46caf4:	ldr	x0, [sp, #40]
  46caf8:	ldr	x0, [x0, #72]
  46cafc:	str	x0, [sp, #104]
  46cb00:	ldr	x0, [sp, #24]
  46cb04:	cmp	x0, #0x0
  46cb08:	cset	w0, ne  // ne = any
  46cb0c:	strb	w0, [sp, #135]
  46cb10:	ldr	x0, [sp, #104]
  46cb14:	str	x0, [sp, #120]
  46cb18:	str	wzr, [sp, #48]
  46cb1c:	add	x0, sp, #0x30
  46cb20:	str	x0, [sp, #80]
  46cb24:	ldr	x0, [sp, #40]
  46cb28:	str	x0, [sp, #72]
  46cb2c:	ldr	x0, [sp, #104]
  46cb30:	str	x0, [sp, #64]
  46cb34:	ldr	x0, [sp, #72]
  46cb38:	ldr	x0, [x0, #152]
  46cb3c:	str	x0, [sp, #56]
  46cb40:	ldr	x0, [sp, #56]
  46cb44:	ldr	x0, [x0, #72]
  46cb48:	ldrb	w0, [x0, #104]
  46cb4c:	and	w0, w0, #0xffffff80
  46cb50:	and	w0, w0, #0xff
  46cb54:	cmp	w0, #0x0
  46cb58:	b.eq	46cc3c <_obstack_memory_used@@Base+0xfafc>  // b.none
  46cb5c:	ldr	x3, [sp, #72]
  46cb60:	ldr	x0, [sp, #64]
  46cb64:	sub	x1, x0, #0x1
  46cb68:	ldr	x0, [sp, #72]
  46cb6c:	ldr	w0, [x0, #160]
  46cb70:	mov	w2, w0
  46cb74:	mov	x0, x3
  46cb78:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  46cb7c:	str	w0, [sp, #52]
  46cb80:	ldr	w0, [sp, #52]
  46cb84:	and	w0, w0, #0x1
  46cb88:	cmp	w0, #0x0
  46cb8c:	b.eq	46cb9c <_obstack_memory_used@@Base+0xfa5c>  // b.none
  46cb90:	ldr	x0, [sp, #56]
  46cb94:	ldr	x0, [x0, #80]
  46cb98:	b	46cc44 <_obstack_memory_used@@Base+0xfb04>
  46cb9c:	ldr	w0, [sp, #52]
  46cba0:	cmp	w0, #0x0
  46cba4:	b.ne	46cbb4 <_obstack_memory_used@@Base+0xfa74>  // b.any
  46cba8:	ldr	x0, [sp, #56]
  46cbac:	ldr	x0, [x0, #72]
  46cbb0:	b	46cc44 <_obstack_memory_used@@Base+0xfb04>
  46cbb4:	ldr	w0, [sp, #52]
  46cbb8:	and	w0, w0, #0x4
  46cbbc:	cmp	w0, #0x0
  46cbc0:	b.eq	46cbe0 <_obstack_memory_used@@Base+0xfaa0>  // b.none
  46cbc4:	ldr	w0, [sp, #52]
  46cbc8:	and	w0, w0, #0x2
  46cbcc:	cmp	w0, #0x0
  46cbd0:	b.eq	46cbe0 <_obstack_memory_used@@Base+0xfaa0>  // b.none
  46cbd4:	ldr	x0, [sp, #56]
  46cbd8:	ldr	x0, [x0, #96]
  46cbdc:	b	46cc44 <_obstack_memory_used@@Base+0xfb04>
  46cbe0:	ldr	w0, [sp, #52]
  46cbe4:	and	w0, w0, #0x2
  46cbe8:	cmp	w0, #0x0
  46cbec:	b.eq	46cbfc <_obstack_memory_used@@Base+0xfabc>  // b.none
  46cbf0:	ldr	x0, [sp, #56]
  46cbf4:	ldr	x0, [x0, #88]
  46cbf8:	b	46cc44 <_obstack_memory_used@@Base+0xfb04>
  46cbfc:	ldr	w0, [sp, #52]
  46cc00:	and	w0, w0, #0x4
  46cc04:	cmp	w0, #0x0
  46cc08:	b.eq	46cc30 <_obstack_memory_used@@Base+0xfaf0>  // b.none
  46cc0c:	ldr	x0, [sp, #56]
  46cc10:	ldr	x0, [x0, #72]
  46cc14:	ldr	x0, [x0, #80]
  46cc18:	ldr	w3, [sp, #52]
  46cc1c:	mov	x2, x0
  46cc20:	ldr	x1, [sp, #56]
  46cc24:	ldr	x0, [sp, #80]
  46cc28:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  46cc2c:	b	46cc44 <_obstack_memory_used@@Base+0xfb04>
  46cc30:	ldr	x0, [sp, #56]
  46cc34:	ldr	x0, [x0, #72]
  46cc38:	b	46cc44 <_obstack_memory_used@@Base+0xfb04>
  46cc3c:	ldr	x0, [sp, #56]
  46cc40:	ldr	x0, [x0, #72]
  46cc44:	str	x0, [sp, #136]
  46cc48:	ldr	x0, [sp, #136]
  46cc4c:	cmp	x0, #0x0
  46cc50:	cset	w0, eq  // eq = none
  46cc54:	and	w0, w0, #0xff
  46cc58:	and	x0, x0, #0xff
  46cc5c:	cmp	x0, #0x0
  46cc60:	b.eq	46cc98 <_obstack_memory_used@@Base+0xfb58>  // b.none
  46cc64:	ldr	w0, [sp, #48]
  46cc68:	cmp	w0, #0xc
  46cc6c:	b.eq	46cc90 <_obstack_memory_used@@Base+0xfb50>  // b.none
  46cc70:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46cc74:	add	x3, x0, #0x908
  46cc78:	mov	w2, #0x435                 	// #1077
  46cc7c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46cc80:	add	x1, x0, #0x830
  46cc84:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46cc88:	add	x0, x0, #0x898
  46cc8c:	bl	404bb0 <__assert_fail@plt>
  46cc90:	mov	x0, #0xfffffffffffffffe    	// #-2
  46cc94:	b	46d08c <_obstack_memory_used@@Base+0xff4c>
  46cc98:	ldr	x0, [sp, #40]
  46cc9c:	ldr	x0, [x0, #184]
  46cca0:	cmp	x0, #0x0
  46cca4:	b.eq	46cd74 <_obstack_memory_used@@Base+0xfc34>  // b.none
  46cca8:	ldr	x0, [sp, #40]
  46ccac:	ldr	x1, [x0, #184]
  46ccb0:	ldr	x0, [sp, #104]
  46ccb4:	lsl	x0, x0, #3
  46ccb8:	add	x0, x1, x0
  46ccbc:	ldr	x1, [sp, #136]
  46ccc0:	str	x1, [x0]
  46ccc4:	ldr	x0, [sp, #112]
  46ccc8:	ldr	x0, [x0, #152]
  46cccc:	cmp	x0, #0x0
  46ccd0:	b.eq	46cd74 <_obstack_memory_used@@Base+0xfc34>  // b.none
  46ccd4:	strb	wzr, [sp, #135]
  46ccd8:	ldr	x0, [sp, #136]
  46ccdc:	add	x0, x0, #0x8
  46cce0:	mov	x2, #0x0                   	// #0
  46cce4:	mov	x1, x0
  46cce8:	ldr	x0, [sp, #40]
  46ccec:	bl	470198 <_obstack_memory_used@@Base+0x13058>
  46ccf0:	str	w0, [sp, #48]
  46ccf4:	ldr	w0, [sp, #48]
  46ccf8:	cmp	w0, #0x0
  46ccfc:	cset	w0, ne  // ne = any
  46cd00:	and	w0, w0, #0xff
  46cd04:	and	x0, x0, #0xff
  46cd08:	cmp	x0, #0x0
  46cd0c:	b.eq	46cd1c <_obstack_memory_used@@Base+0xfbdc>  // b.none
  46cd10:	ldr	w0, [sp, #48]
  46cd14:	sxtw	x0, w0
  46cd18:	b	46d08c <_obstack_memory_used@@Base+0xff4c>
  46cd1c:	ldr	x0, [sp, #136]
  46cd20:	ldrb	w0, [x0, #104]
  46cd24:	and	w0, w0, #0x40
  46cd28:	and	w0, w0, #0xff
  46cd2c:	cmp	w0, #0x0
  46cd30:	b.eq	46cd74 <_obstack_memory_used@@Base+0xfc34>  // b.none
  46cd34:	ldr	x0, [sp, #136]
  46cd38:	add	x0, x0, #0x8
  46cd3c:	mov	x1, x0
  46cd40:	ldr	x0, [sp, #40]
  46cd44:	bl	4706ac <_obstack_memory_used@@Base+0x1356c>
  46cd48:	str	w0, [sp, #48]
  46cd4c:	ldr	w0, [sp, #48]
  46cd50:	cmp	w0, #0x0
  46cd54:	cset	w0, ne  // ne = any
  46cd58:	and	w0, w0, #0xff
  46cd5c:	and	x0, x0, #0xff
  46cd60:	cmp	x0, #0x0
  46cd64:	b.eq	46cd74 <_obstack_memory_used@@Base+0xfc34>  // b.none
  46cd68:	ldr	w0, [sp, #48]
  46cd6c:	sxtw	x0, w0
  46cd70:	b	46d08c <_obstack_memory_used@@Base+0xff4c>
  46cd74:	ldr	x0, [sp, #136]
  46cd78:	ldrb	w0, [x0, #104]
  46cd7c:	ubfx	x0, x0, #4, #1
  46cd80:	and	w0, w0, #0xff
  46cd84:	and	x0, x0, #0xff
  46cd88:	cmp	x0, #0x0
  46cd8c:	b.eq	46d044 <_obstack_memory_used@@Base+0xff04>  // b.none
  46cd90:	ldr	x0, [sp, #136]
  46cd94:	ldrb	w0, [x0, #104]
  46cd98:	and	w0, w0, #0xffffff80
  46cd9c:	and	w0, w0, #0xff
  46cda0:	cmp	w0, #0x0
  46cda4:	b.eq	46cdc0 <_obstack_memory_used@@Base+0xfc80>  // b.none
  46cda8:	ldr	x2, [sp, #104]
  46cdac:	ldr	x1, [sp, #136]
  46cdb0:	ldr	x0, [sp, #40]
  46cdb4:	bl	46d1a0 <_obstack_memory_used@@Base+0x10060>
  46cdb8:	cmp	x0, #0x0
  46cdbc:	b.eq	46d044 <_obstack_memory_used@@Base+0xff04>  // b.none
  46cdc0:	ldrb	w0, [sp, #39]
  46cdc4:	eor	w0, w0, #0x1
  46cdc8:	and	w0, w0, #0xff
  46cdcc:	cmp	w0, #0x0
  46cdd0:	b.eq	46cddc <_obstack_memory_used@@Base+0xfc9c>  // b.none
  46cdd4:	ldr	x0, [sp, #104]
  46cdd8:	b	46d08c <_obstack_memory_used@@Base+0xff4c>
  46cddc:	ldr	x0, [sp, #104]
  46cde0:	str	x0, [sp, #144]
  46cde4:	mov	x0, #0x1                   	// #1
  46cde8:	str	x0, [sp, #152]
  46cdec:	b	46d044 <_obstack_memory_used@@Base+0xff04>
  46cdf0:	ldr	x0, [sp, #136]
  46cdf4:	str	x0, [sp, #96]
  46cdf8:	ldr	x0, [sp, #40]
  46cdfc:	ldr	x0, [x0, #72]
  46ce00:	add	x0, x0, #0x1
  46ce04:	str	x0, [sp, #88]
  46ce08:	ldr	x0, [sp, #40]
  46ce0c:	ldr	x0, [x0, #64]
  46ce10:	ldr	x1, [sp, #88]
  46ce14:	cmp	x1, x0
  46ce18:	cset	w0, ge  // ge = tcont
  46ce1c:	and	w0, w0, #0xff
  46ce20:	and	x0, x0, #0xff
  46ce24:	cmp	x0, #0x0
  46ce28:	b.eq	46ce44 <_obstack_memory_used@@Base+0xfd04>  // b.none
  46ce2c:	ldr	x0, [sp, #40]
  46ce30:	ldr	x1, [x0, #64]
  46ce34:	ldr	x0, [sp, #40]
  46ce38:	ldr	x0, [x0, #88]
  46ce3c:	cmp	x1, x0
  46ce40:	b.lt	46ce80 <_obstack_memory_used@@Base+0xfd40>  // b.tstop
  46ce44:	ldr	x0, [sp, #40]
  46ce48:	ldr	x0, [x0, #48]
  46ce4c:	ldr	x1, [sp, #88]
  46ce50:	cmp	x1, x0
  46ce54:	cset	w0, ge  // ge = tcont
  46ce58:	and	w0, w0, #0xff
  46ce5c:	and	x0, x0, #0xff
  46ce60:	cmp	x0, #0x0
  46ce64:	b.eq	46cee8 <_obstack_memory_used@@Base+0xfda8>  // b.none
  46ce68:	ldr	x0, [sp, #40]
  46ce6c:	ldr	x1, [x0, #48]
  46ce70:	ldr	x0, [sp, #40]
  46ce74:	ldr	x0, [x0, #88]
  46ce78:	cmp	x1, x0
  46ce7c:	b.ge	46cee8 <_obstack_memory_used@@Base+0xfda8>  // b.tcont
  46ce80:	ldr	x0, [sp, #88]
  46ce84:	add	w0, w0, #0x1
  46ce88:	mov	w1, w0
  46ce8c:	ldr	x0, [sp, #40]
  46ce90:	bl	4740c4 <_obstack_memory_used@@Base+0x16f84>
  46ce94:	str	w0, [sp, #48]
  46ce98:	ldr	w0, [sp, #48]
  46ce9c:	cmp	w0, #0x0
  46cea0:	cset	w0, ne  // ne = any
  46cea4:	and	w0, w0, #0xff
  46cea8:	and	x0, x0, #0xff
  46ceac:	cmp	x0, #0x0
  46ceb0:	b.eq	46cee8 <_obstack_memory_used@@Base+0xfda8>  // b.none
  46ceb4:	ldr	w0, [sp, #48]
  46ceb8:	cmp	w0, #0xc
  46cebc:	b.eq	46cee0 <_obstack_memory_used@@Base+0xfda0>  // b.none
  46cec0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46cec4:	add	x3, x0, #0x908
  46cec8:	mov	w2, #0x46c                 	// #1132
  46cecc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46ced0:	add	x1, x0, #0x830
  46ced4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46ced8:	add	x0, x0, #0x898
  46cedc:	bl	404bb0 <__assert_fail@plt>
  46cee0:	mov	x0, #0xfffffffffffffffe    	// #-2
  46cee4:	b	46d08c <_obstack_memory_used@@Base+0xff4c>
  46cee8:	add	x0, sp, #0x30
  46ceec:	ldr	x2, [sp, #136]
  46cef0:	ldr	x1, [sp, #40]
  46cef4:	bl	46fc78 <_obstack_memory_used@@Base+0x12b38>
  46cef8:	str	x0, [sp, #136]
  46cefc:	ldr	x0, [sp, #40]
  46cf00:	ldr	x0, [x0, #184]
  46cf04:	cmp	x0, #0x0
  46cf08:	b.eq	46cf20 <_obstack_memory_used@@Base+0xfde0>  // b.none
  46cf0c:	add	x0, sp, #0x30
  46cf10:	ldr	x2, [sp, #136]
  46cf14:	ldr	x1, [sp, #40]
  46cf18:	bl	46fe20 <_obstack_memory_used@@Base+0x12ce0>
  46cf1c:	str	x0, [sp, #136]
  46cf20:	ldr	x0, [sp, #136]
  46cf24:	cmp	x0, #0x0
  46cf28:	b.ne	46cf9c <_obstack_memory_used@@Base+0xfe5c>  // b.any
  46cf2c:	ldr	w0, [sp, #48]
  46cf30:	cmp	w0, #0x0
  46cf34:	cset	w0, ne  // ne = any
  46cf38:	and	w0, w0, #0xff
  46cf3c:	and	x0, x0, #0xff
  46cf40:	cmp	x0, #0x0
  46cf44:	b.eq	46cf50 <_obstack_memory_used@@Base+0xfe10>  // b.none
  46cf48:	mov	x0, #0xfffffffffffffffe    	// #-2
  46cf4c:	b	46d08c <_obstack_memory_used@@Base+0xff4c>
  46cf50:	ldr	x0, [sp, #40]
  46cf54:	ldr	x0, [x0, #184]
  46cf58:	cmp	x0, #0x0
  46cf5c:	b.eq	46d064 <_obstack_memory_used@@Base+0xff24>  // b.none
  46cf60:	ldr	x0, [sp, #152]
  46cf64:	cmp	x0, #0x0
  46cf68:	b.eq	46cf80 <_obstack_memory_used@@Base+0xfe40>  // b.none
  46cf6c:	ldrb	w0, [sp, #39]
  46cf70:	eor	w0, w0, #0x1
  46cf74:	and	w0, w0, #0xff
  46cf78:	cmp	w0, #0x0
  46cf7c:	b.ne	46d064 <_obstack_memory_used@@Base+0xff24>  // b.any
  46cf80:	add	x0, sp, #0x30
  46cf84:	ldr	x1, [sp, #40]
  46cf88:	bl	4700dc <_obstack_memory_used@@Base+0x12f9c>
  46cf8c:	str	x0, [sp, #136]
  46cf90:	ldr	x0, [sp, #136]
  46cf94:	cmp	x0, #0x0
  46cf98:	b.eq	46d064 <_obstack_memory_used@@Base+0xff24>  // b.none
  46cf9c:	ldrb	w0, [sp, #135]
  46cfa0:	cmp	x0, #0x0
  46cfa4:	b.eq	46cfc8 <_obstack_memory_used@@Base+0xfe88>  // b.none
  46cfa8:	ldr	x1, [sp, #96]
  46cfac:	ldr	x0, [sp, #136]
  46cfb0:	cmp	x1, x0
  46cfb4:	b.ne	46cfc4 <_obstack_memory_used@@Base+0xfe84>  // b.any
  46cfb8:	ldr	x0, [sp, #88]
  46cfbc:	str	x0, [sp, #120]
  46cfc0:	b	46cfc8 <_obstack_memory_used@@Base+0xfe88>
  46cfc4:	strb	wzr, [sp, #135]
  46cfc8:	ldr	x0, [sp, #136]
  46cfcc:	ldrb	w0, [x0, #104]
  46cfd0:	and	w0, w0, #0x10
  46cfd4:	and	w0, w0, #0xff
  46cfd8:	cmp	w0, #0x0
  46cfdc:	b.eq	46d044 <_obstack_memory_used@@Base+0xff04>  // b.none
  46cfe0:	ldr	x0, [sp, #136]
  46cfe4:	ldrb	w0, [x0, #104]
  46cfe8:	and	w0, w0, #0xffffff80
  46cfec:	and	w0, w0, #0xff
  46cff0:	cmp	w0, #0x0
  46cff4:	b.eq	46d018 <_obstack_memory_used@@Base+0xfed8>  // b.none
  46cff8:	ldr	x0, [sp, #40]
  46cffc:	ldr	x0, [x0, #72]
  46d000:	mov	x2, x0
  46d004:	ldr	x1, [sp, #136]
  46d008:	ldr	x0, [sp, #40]
  46d00c:	bl	46d1a0 <_obstack_memory_used@@Base+0x10060>
  46d010:	cmp	x0, #0x0
  46d014:	b.eq	46d044 <_obstack_memory_used@@Base+0xff04>  // b.none
  46d018:	ldr	x0, [sp, #40]
  46d01c:	ldr	x0, [x0, #72]
  46d020:	str	x0, [sp, #144]
  46d024:	mov	x0, #0x1                   	// #1
  46d028:	str	x0, [sp, #152]
  46d02c:	str	xzr, [sp, #24]
  46d030:	ldrb	w0, [sp, #39]
  46d034:	eor	w0, w0, #0x1
  46d038:	and	w0, w0, #0xff
  46d03c:	cmp	w0, #0x0
  46d040:	b.ne	46d060 <_obstack_memory_used@@Base+0xff20>  // b.any
  46d044:	ldr	x0, [sp, #40]
  46d048:	ldr	x1, [x0, #104]
  46d04c:	ldr	x0, [sp, #40]
  46d050:	ldr	x0, [x0, #72]
  46d054:	cmp	x1, x0
  46d058:	b.gt	46cdf0 <_obstack_memory_used@@Base+0xfcb0>
  46d05c:	b	46d064 <_obstack_memory_used@@Base+0xff24>
  46d060:	nop
  46d064:	ldr	x0, [sp, #24]
  46d068:	cmp	x0, #0x0
  46d06c:	b.eq	46d088 <_obstack_memory_used@@Base+0xff48>  // b.none
  46d070:	ldr	x0, [sp, #24]
  46d074:	ldr	x1, [x0]
  46d078:	ldr	x0, [sp, #120]
  46d07c:	add	x1, x1, x0
  46d080:	ldr	x0, [sp, #24]
  46d084:	str	x1, [x0]
  46d088:	ldr	x0, [sp, #144]
  46d08c:	ldp	x29, x30, [sp], #160
  46d090:	ret
  46d094:	sub	sp, sp, #0x30
  46d098:	str	x0, [sp, #24]
  46d09c:	str	x1, [sp, #16]
  46d0a0:	str	w2, [sp, #12]
  46d0a4:	ldr	x0, [sp, #24]
  46d0a8:	ldr	x1, [x0]
  46d0ac:	ldr	x0, [sp, #16]
  46d0b0:	lsl	x0, x0, #4
  46d0b4:	add	x0, x1, x0
  46d0b8:	ldrb	w0, [x0, #8]
  46d0bc:	str	w0, [sp, #44]
  46d0c0:	ldr	x0, [sp, #24]
  46d0c4:	ldr	x1, [x0]
  46d0c8:	ldr	x0, [sp, #16]
  46d0cc:	lsl	x0, x0, #4
  46d0d0:	add	x0, x1, x0
  46d0d4:	ldr	w0, [x0, #8]
  46d0d8:	ubfx	x0, x0, #8, #10
  46d0dc:	and	w0, w0, #0xffff
  46d0e0:	str	w0, [sp, #40]
  46d0e4:	ldr	w0, [sp, #44]
  46d0e8:	cmp	w0, #0x2
  46d0ec:	b.eq	46d0f8 <_obstack_memory_used@@Base+0xffb8>  // b.none
  46d0f0:	mov	w0, #0x0                   	// #0
  46d0f4:	b	46d198 <_obstack_memory_used@@Base+0x10058>
  46d0f8:	ldr	w0, [sp, #40]
  46d0fc:	cmp	w0, #0x0
  46d100:	b.ne	46d10c <_obstack_memory_used@@Base+0xffcc>  // b.any
  46d104:	mov	w0, #0x1                   	// #1
  46d108:	b	46d198 <_obstack_memory_used@@Base+0x10058>
  46d10c:	ldr	w0, [sp, #40]
  46d110:	and	w0, w0, #0x4
  46d114:	cmp	w0, #0x0
  46d118:	b.eq	46d12c <_obstack_memory_used@@Base+0xffec>  // b.none
  46d11c:	ldr	w0, [sp, #12]
  46d120:	and	w0, w0, #0x1
  46d124:	cmp	w0, #0x0
  46d128:	b.eq	46d18c <_obstack_memory_used@@Base+0x1004c>  // b.none
  46d12c:	ldr	w0, [sp, #40]
  46d130:	and	w0, w0, #0x8
  46d134:	cmp	w0, #0x0
  46d138:	b.eq	46d14c <_obstack_memory_used@@Base+0x1000c>  // b.none
  46d13c:	ldr	w0, [sp, #12]
  46d140:	and	w0, w0, #0x1
  46d144:	cmp	w0, #0x0
  46d148:	b.ne	46d18c <_obstack_memory_used@@Base+0x1004c>  // b.any
  46d14c:	ldr	w0, [sp, #40]
  46d150:	and	w0, w0, #0x20
  46d154:	cmp	w0, #0x0
  46d158:	b.eq	46d16c <_obstack_memory_used@@Base+0x1002c>  // b.none
  46d15c:	ldr	w0, [sp, #12]
  46d160:	and	w0, w0, #0x2
  46d164:	cmp	w0, #0x0
  46d168:	b.eq	46d18c <_obstack_memory_used@@Base+0x1004c>  // b.none
  46d16c:	ldr	w0, [sp, #40]
  46d170:	and	w0, w0, #0x80
  46d174:	cmp	w0, #0x0
  46d178:	b.eq	46d194 <_obstack_memory_used@@Base+0x10054>  // b.none
  46d17c:	ldr	w0, [sp, #12]
  46d180:	and	w0, w0, #0x8
  46d184:	cmp	w0, #0x0
  46d188:	b.ne	46d194 <_obstack_memory_used@@Base+0x10054>  // b.any
  46d18c:	mov	w0, #0x0                   	// #0
  46d190:	b	46d198 <_obstack_memory_used@@Base+0x10058>
  46d194:	mov	w0, #0x1                   	// #1
  46d198:	add	sp, sp, #0x30
  46d19c:	ret
  46d1a0:	stp	x29, x30, [sp, #-64]!
  46d1a4:	mov	x29, sp
  46d1a8:	str	x0, [sp, #40]
  46d1ac:	str	x1, [sp, #32]
  46d1b0:	str	x2, [sp, #24]
  46d1b4:	ldr	x3, [sp, #40]
  46d1b8:	ldr	x0, [sp, #40]
  46d1bc:	ldr	w0, [x0, #160]
  46d1c0:	mov	w2, w0
  46d1c4:	ldr	x1, [sp, #24]
  46d1c8:	mov	x0, x3
  46d1cc:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  46d1d0:	str	w0, [sp, #52]
  46d1d4:	str	xzr, [sp, #56]
  46d1d8:	b	46d240 <_obstack_memory_used@@Base+0x10100>
  46d1dc:	ldr	x0, [sp, #40]
  46d1e0:	ldr	x3, [x0, #152]
  46d1e4:	ldr	x0, [sp, #32]
  46d1e8:	ldr	x1, [x0, #24]
  46d1ec:	ldr	x0, [sp, #56]
  46d1f0:	lsl	x0, x0, #3
  46d1f4:	add	x0, x1, x0
  46d1f8:	ldr	x0, [x0]
  46d1fc:	ldr	w2, [sp, #52]
  46d200:	mov	x1, x0
  46d204:	mov	x0, x3
  46d208:	bl	46d094 <_obstack_memory_used@@Base+0xff54>
  46d20c:	and	w0, w0, #0xff
  46d210:	cmp	w0, #0x0
  46d214:	b.eq	46d234 <_obstack_memory_used@@Base+0x100f4>  // b.none
  46d218:	ldr	x0, [sp, #32]
  46d21c:	ldr	x1, [x0, #24]
  46d220:	ldr	x0, [sp, #56]
  46d224:	lsl	x0, x0, #3
  46d228:	add	x0, x1, x0
  46d22c:	ldr	x0, [x0]
  46d230:	b	46d258 <_obstack_memory_used@@Base+0x10118>
  46d234:	ldr	x0, [sp, #56]
  46d238:	add	x0, x0, #0x1
  46d23c:	str	x0, [sp, #56]
  46d240:	ldr	x0, [sp, #32]
  46d244:	ldr	x0, [x0, #16]
  46d248:	ldr	x1, [sp, #56]
  46d24c:	cmp	x1, x0
  46d250:	b.lt	46d1dc <_obstack_memory_used@@Base+0x1009c>  // b.tstop
  46d254:	mov	x0, #0x0                   	// #0
  46d258:	ldp	x29, x30, [sp], #64
  46d25c:	ret
  46d260:	stp	x29, x30, [sp, #-192]!
  46d264:	mov	x29, sp
  46d268:	str	x0, [sp, #72]
  46d26c:	str	x1, [sp, #64]
  46d270:	str	x2, [sp, #56]
  46d274:	str	x3, [sp, #48]
  46d278:	str	x4, [sp, #40]
  46d27c:	str	x5, [sp, #32]
  46d280:	str	x6, [sp, #24]
  46d284:	ldr	x0, [sp, #72]
  46d288:	ldr	x0, [x0, #152]
  46d28c:	str	x0, [sp, #160]
  46d290:	ldr	x0, [sp, #160]
  46d294:	ldr	x1, [x0]
  46d298:	ldr	x0, [sp, #40]
  46d29c:	lsl	x0, x0, #4
  46d2a0:	add	x0, x1, x0
  46d2a4:	ldrb	w0, [x0, #8]
  46d2a8:	and	w0, w0, #0x8
  46d2ac:	cmp	w0, #0x0
  46d2b0:	b.eq	46d414 <_obstack_memory_used@@Base+0x102d4>  // b.none
  46d2b4:	ldr	x0, [sp, #72]
  46d2b8:	ldr	x1, [x0, #184]
  46d2bc:	ldr	x0, [sp, #48]
  46d2c0:	ldr	x0, [x0]
  46d2c4:	lsl	x0, x0, #3
  46d2c8:	add	x0, x1, x0
  46d2cc:	ldr	x0, [x0]
  46d2d0:	add	x0, x0, #0x8
  46d2d4:	str	x0, [sp, #104]
  46d2d8:	ldr	x0, [sp, #160]
  46d2dc:	ldr	x2, [x0, #40]
  46d2e0:	ldr	x1, [sp, #40]
  46d2e4:	mov	x0, x1
  46d2e8:	lsl	x0, x0, #1
  46d2ec:	add	x0, x0, x1
  46d2f0:	lsl	x0, x0, #3
  46d2f4:	add	x0, x2, x0
  46d2f8:	str	x0, [sp, #96]
  46d2fc:	ldr	x1, [sp, #40]
  46d300:	ldr	x0, [sp, #32]
  46d304:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  46d308:	strb	w0, [sp, #135]
  46d30c:	ldrb	w0, [sp, #135]
  46d310:	eor	w0, w0, #0x1
  46d314:	and	w0, w0, #0xff
  46d318:	and	x0, x0, #0xff
  46d31c:	cmp	x0, #0x0
  46d320:	b.eq	46d32c <_obstack_memory_used@@Base+0x101ec>  // b.none
  46d324:	mov	x0, #0xfffffffffffffffe    	// #-2
  46d328:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d32c:	mov	x0, #0xffffffffffffffff    	// #-1
  46d330:	str	x0, [sp, #176]
  46d334:	str	xzr, [sp, #184]
  46d338:	b	46d3f0 <_obstack_memory_used@@Base+0x102b0>
  46d33c:	ldr	x0, [sp, #96]
  46d340:	ldr	x1, [x0, #16]
  46d344:	ldr	x0, [sp, #184]
  46d348:	lsl	x0, x0, #3
  46d34c:	add	x0, x1, x0
  46d350:	ldr	x0, [x0]
  46d354:	str	x0, [sp, #88]
  46d358:	ldr	x1, [sp, #88]
  46d35c:	ldr	x0, [sp, #104]
  46d360:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46d364:	cmp	x0, #0x0
  46d368:	b.eq	46d3e0 <_obstack_memory_used@@Base+0x102a0>  // b.none
  46d36c:	ldr	x0, [sp, #176]
  46d370:	cmn	x0, #0x1
  46d374:	b.ne	46d384 <_obstack_memory_used@@Base+0x10244>  // b.any
  46d378:	ldr	x0, [sp, #88]
  46d37c:	str	x0, [sp, #176]
  46d380:	b	46d3e4 <_obstack_memory_used@@Base+0x102a4>
  46d384:	ldr	x1, [sp, #176]
  46d388:	ldr	x0, [sp, #32]
  46d38c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46d390:	cmp	x0, #0x0
  46d394:	b.eq	46d3a0 <_obstack_memory_used@@Base+0x10260>  // b.none
  46d398:	ldr	x0, [sp, #88]
  46d39c:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d3a0:	ldr	x0, [sp, #24]
  46d3a4:	cmp	x0, #0x0
  46d3a8:	b.eq	46d408 <_obstack_memory_used@@Base+0x102c8>  // b.none
  46d3ac:	ldr	x0, [sp, #48]
  46d3b0:	ldr	x0, [x0]
  46d3b4:	ldr	x5, [sp, #32]
  46d3b8:	ldr	x4, [sp, #56]
  46d3bc:	ldr	x3, [sp, #64]
  46d3c0:	ldr	x2, [sp, #88]
  46d3c4:	mov	x1, x0
  46d3c8:	ldr	x0, [sp, #24]
  46d3cc:	bl	46d76c <_obstack_memory_used@@Base+0x1062c>
  46d3d0:	cmp	w0, #0x0
  46d3d4:	b.eq	46d408 <_obstack_memory_used@@Base+0x102c8>  // b.none
  46d3d8:	mov	x0, #0xfffffffffffffffe    	// #-2
  46d3dc:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d3e0:	nop
  46d3e4:	ldr	x0, [sp, #184]
  46d3e8:	add	x0, x0, #0x1
  46d3ec:	str	x0, [sp, #184]
  46d3f0:	ldr	x0, [sp, #96]
  46d3f4:	ldr	x0, [x0, #8]
  46d3f8:	ldr	x1, [sp, #184]
  46d3fc:	cmp	x1, x0
  46d400:	b.lt	46d33c <_obstack_memory_used@@Base+0x101fc>  // b.tstop
  46d404:	b	46d40c <_obstack_memory_used@@Base+0x102cc>
  46d408:	nop
  46d40c:	ldr	x0, [sp, #176]
  46d410:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d414:	str	xzr, [sp, #168]
  46d418:	ldr	x0, [sp, #160]
  46d41c:	ldr	x1, [x0]
  46d420:	ldr	x0, [sp, #40]
  46d424:	lsl	x0, x0, #4
  46d428:	add	x0, x1, x0
  46d42c:	ldrb	w0, [x0, #8]
  46d430:	str	w0, [sp, #156]
  46d434:	ldr	x0, [sp, #160]
  46d438:	ldr	x1, [x0]
  46d43c:	ldr	x0, [sp, #40]
  46d440:	lsl	x0, x0, #4
  46d444:	add	x0, x1, x0
  46d448:	ldrb	w0, [x0, #10]
  46d44c:	and	w0, w0, #0x10
  46d450:	and	w0, w0, #0xff
  46d454:	cmp	w0, #0x0
  46d458:	b.eq	46d488 <_obstack_memory_used@@Base+0x10348>  // b.none
  46d45c:	ldr	x1, [sp, #72]
  46d460:	ldr	x0, [sp, #48]
  46d464:	ldr	x0, [x0]
  46d468:	mov	x3, x0
  46d46c:	mov	x2, x1
  46d470:	ldr	x1, [sp, #40]
  46d474:	ldr	x0, [sp, #160]
  46d478:	bl	473958 <_obstack_memory_used@@Base+0x16818>
  46d47c:	sxtw	x0, w0
  46d480:	str	x0, [sp, #168]
  46d484:	b	46d640 <_obstack_memory_used@@Base+0x10500>
  46d488:	ldr	w0, [sp, #156]
  46d48c:	cmp	w0, #0x4
  46d490:	b.ne	46d640 <_obstack_memory_used@@Base+0x10500>  // b.any
  46d494:	ldr	x0, [sp, #160]
  46d498:	ldr	x1, [x0]
  46d49c:	ldr	x0, [sp, #40]
  46d4a0:	lsl	x0, x0, #4
  46d4a4:	add	x0, x1, x0
  46d4a8:	ldr	x0, [x0]
  46d4ac:	add	x0, x0, #0x1
  46d4b0:	str	x0, [sp, #144]
  46d4b4:	ldr	x0, [sp, #144]
  46d4b8:	lsl	x0, x0, #4
  46d4bc:	ldr	x1, [sp, #56]
  46d4c0:	add	x0, x1, x0
  46d4c4:	ldr	x1, [x0, #8]
  46d4c8:	ldr	x0, [sp, #144]
  46d4cc:	lsl	x0, x0, #4
  46d4d0:	ldr	x2, [sp, #56]
  46d4d4:	add	x0, x2, x0
  46d4d8:	ldr	x0, [x0]
  46d4dc:	sub	x0, x1, x0
  46d4e0:	str	x0, [sp, #168]
  46d4e4:	ldr	x0, [sp, #24]
  46d4e8:	cmp	x0, #0x0
  46d4ec:	b.eq	46d5a0 <_obstack_memory_used@@Base+0x10460>  // b.none
  46d4f0:	ldr	x0, [sp, #144]
  46d4f4:	lsl	x0, x0, #4
  46d4f8:	ldr	x1, [sp, #56]
  46d4fc:	add	x0, x1, x0
  46d500:	ldr	x0, [x0]
  46d504:	cmn	x0, #0x1
  46d508:	b.eq	46d528 <_obstack_memory_used@@Base+0x103e8>  // b.none
  46d50c:	ldr	x0, [sp, #144]
  46d510:	lsl	x0, x0, #4
  46d514:	ldr	x1, [sp, #56]
  46d518:	add	x0, x1, x0
  46d51c:	ldr	x0, [x0, #8]
  46d520:	cmn	x0, #0x1
  46d524:	b.ne	46d530 <_obstack_memory_used@@Base+0x103f0>  // b.any
  46d528:	mov	x0, #0xffffffffffffffff    	// #-1
  46d52c:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d530:	ldr	x0, [sp, #168]
  46d534:	cmp	x0, #0x0
  46d538:	b.eq	46d5a0 <_obstack_memory_used@@Base+0x10460>  // b.none
  46d53c:	ldr	x0, [sp, #72]
  46d540:	ldr	x0, [x0, #8]
  46d544:	str	x0, [sp, #136]
  46d548:	ldr	x0, [sp, #144]
  46d54c:	lsl	x0, x0, #4
  46d550:	ldr	x1, [sp, #56]
  46d554:	add	x0, x1, x0
  46d558:	ldr	x0, [x0]
  46d55c:	mov	x1, x0
  46d560:	ldr	x0, [sp, #136]
  46d564:	add	x3, x0, x1
  46d568:	ldr	x0, [sp, #48]
  46d56c:	ldr	x0, [x0]
  46d570:	mov	x1, x0
  46d574:	ldr	x0, [sp, #136]
  46d578:	add	x0, x0, x1
  46d57c:	ldr	x1, [sp, #168]
  46d580:	mov	x2, x1
  46d584:	mov	x1, x0
  46d588:	mov	x0, x3
  46d58c:	bl	404790 <memcmp@plt>
  46d590:	cmp	w0, #0x0
  46d594:	b.eq	46d5a0 <_obstack_memory_used@@Base+0x10460>  // b.none
  46d598:	mov	x0, #0xffffffffffffffff    	// #-1
  46d59c:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d5a0:	ldr	x0, [sp, #168]
  46d5a4:	cmp	x0, #0x0
  46d5a8:	b.ne	46d640 <_obstack_memory_used@@Base+0x10500>  // b.any
  46d5ac:	ldr	x1, [sp, #40]
  46d5b0:	ldr	x0, [sp, #32]
  46d5b4:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  46d5b8:	strb	w0, [sp, #135]
  46d5bc:	ldrb	w0, [sp, #135]
  46d5c0:	eor	w0, w0, #0x1
  46d5c4:	and	w0, w0, #0xff
  46d5c8:	and	x0, x0, #0xff
  46d5cc:	cmp	x0, #0x0
  46d5d0:	b.eq	46d5dc <_obstack_memory_used@@Base+0x1049c>  // b.none
  46d5d4:	mov	x0, #0xfffffffffffffffe    	// #-2
  46d5d8:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d5dc:	ldr	x0, [sp, #160]
  46d5e0:	ldr	x2, [x0, #40]
  46d5e4:	ldr	x1, [sp, #40]
  46d5e8:	mov	x0, x1
  46d5ec:	lsl	x0, x0, #1
  46d5f0:	add	x0, x0, x1
  46d5f4:	lsl	x0, x0, #3
  46d5f8:	add	x0, x2, x0
  46d5fc:	ldr	x0, [x0, #16]
  46d600:	ldr	x0, [x0]
  46d604:	str	x0, [sp, #120]
  46d608:	ldr	x0, [sp, #72]
  46d60c:	ldr	x1, [x0, #184]
  46d610:	ldr	x0, [sp, #48]
  46d614:	ldr	x0, [x0]
  46d618:	lsl	x0, x0, #3
  46d61c:	add	x0, x1, x0
  46d620:	ldr	x0, [x0]
  46d624:	add	x0, x0, #0x8
  46d628:	ldr	x1, [sp, #120]
  46d62c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46d630:	cmp	x0, #0x0
  46d634:	b.eq	46d640 <_obstack_memory_used@@Base+0x10500>  // b.none
  46d638:	ldr	x0, [sp, #120]
  46d63c:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d640:	ldr	x0, [sp, #168]
  46d644:	cmp	x0, #0x0
  46d648:	b.ne	46d680 <_obstack_memory_used@@Base+0x10540>  // b.any
  46d64c:	ldr	x0, [sp, #160]
  46d650:	ldr	x1, [x0]
  46d654:	ldr	x0, [sp, #40]
  46d658:	lsl	x0, x0, #4
  46d65c:	add	x1, x1, x0
  46d660:	ldr	x0, [sp, #48]
  46d664:	ldr	x0, [x0]
  46d668:	mov	x2, x0
  46d66c:	ldr	x0, [sp, #72]
  46d670:	bl	473e9c <_obstack_memory_used@@Base+0x16d5c>
  46d674:	and	w0, w0, #0xff
  46d678:	cmp	w0, #0x0
  46d67c:	b.eq	46d760 <_obstack_memory_used@@Base+0x10620>  // b.none
  46d680:	ldr	x0, [sp, #160]
  46d684:	ldr	x1, [x0, #24]
  46d688:	ldr	x0, [sp, #40]
  46d68c:	lsl	x0, x0, #3
  46d690:	add	x0, x1, x0
  46d694:	ldr	x0, [x0]
  46d698:	str	x0, [sp, #112]
  46d69c:	ldr	x0, [sp, #168]
  46d6a0:	cmp	x0, #0x0
  46d6a4:	b.ne	46d6b8 <_obstack_memory_used@@Base+0x10578>  // b.any
  46d6a8:	ldr	x0, [sp, #48]
  46d6ac:	ldr	x0, [x0]
  46d6b0:	add	x0, x0, #0x1
  46d6b4:	b	46d6c8 <_obstack_memory_used@@Base+0x10588>
  46d6b8:	ldr	x0, [sp, #48]
  46d6bc:	ldr	x1, [x0]
  46d6c0:	ldr	x0, [sp, #168]
  46d6c4:	add	x0, x1, x0
  46d6c8:	ldr	x1, [sp, #48]
  46d6cc:	str	x0, [x1]
  46d6d0:	ldr	x0, [sp, #24]
  46d6d4:	cmp	x0, #0x0
  46d6d8:	b.eq	46d750 <_obstack_memory_used@@Base+0x10610>  // b.none
  46d6dc:	ldr	x0, [sp, #48]
  46d6e0:	ldr	x1, [x0]
  46d6e4:	ldr	x0, [sp, #72]
  46d6e8:	ldr	x0, [x0, #168]
  46d6ec:	cmp	x1, x0
  46d6f0:	b.gt	46d748 <_obstack_memory_used@@Base+0x10608>
  46d6f4:	ldr	x0, [sp, #72]
  46d6f8:	ldr	x1, [x0, #184]
  46d6fc:	ldr	x0, [sp, #48]
  46d700:	ldr	x0, [x0]
  46d704:	lsl	x0, x0, #3
  46d708:	add	x0, x1, x0
  46d70c:	ldr	x0, [x0]
  46d710:	cmp	x0, #0x0
  46d714:	b.eq	46d748 <_obstack_memory_used@@Base+0x10608>  // b.none
  46d718:	ldr	x0, [sp, #72]
  46d71c:	ldr	x1, [x0, #184]
  46d720:	ldr	x0, [sp, #48]
  46d724:	ldr	x0, [x0]
  46d728:	lsl	x0, x0, #3
  46d72c:	add	x0, x1, x0
  46d730:	ldr	x0, [x0]
  46d734:	add	x0, x0, #0x8
  46d738:	ldr	x1, [sp, #112]
  46d73c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46d740:	cmp	x0, #0x0
  46d744:	b.ne	46d750 <_obstack_memory_used@@Base+0x10610>  // b.any
  46d748:	mov	x0, #0xffffffffffffffff    	// #-1
  46d74c:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d750:	ldr	x0, [sp, #32]
  46d754:	str	xzr, [x0, #8]
  46d758:	ldr	x0, [sp, #112]
  46d75c:	b	46d764 <_obstack_memory_used@@Base+0x10624>
  46d760:	mov	x0, #0xffffffffffffffff    	// #-1
  46d764:	ldp	x29, x30, [sp], #192
  46d768:	ret
  46d76c:	stp	x29, x30, [sp, #-112]!
  46d770:	mov	x29, sp
  46d774:	str	x19, [sp, #16]
  46d778:	str	x0, [sp, #72]
  46d77c:	str	x1, [sp, #64]
  46d780:	str	x2, [sp, #56]
  46d784:	str	x3, [sp, #48]
  46d788:	str	x4, [sp, #40]
  46d78c:	str	x5, [sp, #32]
  46d790:	ldr	x0, [sp, #72]
  46d794:	ldr	x0, [x0]
  46d798:	add	x2, x0, #0x1
  46d79c:	ldr	x1, [sp, #72]
  46d7a0:	str	x2, [x1]
  46d7a4:	str	x0, [sp, #104]
  46d7a8:	ldr	x0, [sp, #72]
  46d7ac:	ldr	x1, [x0]
  46d7b0:	ldr	x0, [sp, #72]
  46d7b4:	ldr	x0, [x0, #8]
  46d7b8:	cmp	x1, x0
  46d7bc:	b.ne	46d828 <_obstack_memory_used@@Base+0x106e8>  // b.any
  46d7c0:	ldr	x0, [sp, #72]
  46d7c4:	ldr	x2, [x0, #16]
  46d7c8:	ldr	x0, [sp, #72]
  46d7cc:	ldr	x0, [x0, #8]
  46d7d0:	mov	x1, x0
  46d7d4:	mov	x0, x1
  46d7d8:	lsl	x0, x0, #1
  46d7dc:	add	x0, x0, x1
  46d7e0:	lsl	x0, x0, #5
  46d7e4:	mov	x1, x0
  46d7e8:	mov	x0, x2
  46d7ec:	bl	4045e0 <realloc@plt>
  46d7f0:	str	x0, [sp, #96]
  46d7f4:	ldr	x0, [sp, #96]
  46d7f8:	cmp	x0, #0x0
  46d7fc:	b.ne	46d808 <_obstack_memory_used@@Base+0x106c8>  // b.any
  46d800:	mov	w0, #0xc                   	// #12
  46d804:	b	46d950 <_obstack_memory_used@@Base+0x10810>
  46d808:	ldr	x0, [sp, #72]
  46d80c:	ldr	x0, [x0, #8]
  46d810:	lsl	x1, x0, #1
  46d814:	ldr	x0, [sp, #72]
  46d818:	str	x1, [x0, #8]
  46d81c:	ldr	x0, [sp, #72]
  46d820:	ldr	x1, [sp, #96]
  46d824:	str	x1, [x0, #16]
  46d828:	ldr	x0, [sp, #72]
  46d82c:	ldr	x2, [x0, #16]
  46d830:	ldr	x1, [sp, #104]
  46d834:	mov	x0, x1
  46d838:	lsl	x0, x0, #1
  46d83c:	add	x0, x0, x1
  46d840:	lsl	x0, x0, #4
  46d844:	add	x0, x2, x0
  46d848:	ldr	x1, [sp, #64]
  46d84c:	str	x1, [x0]
  46d850:	ldr	x0, [sp, #72]
  46d854:	ldr	x2, [x0, #16]
  46d858:	ldr	x1, [sp, #104]
  46d85c:	mov	x0, x1
  46d860:	lsl	x0, x0, #1
  46d864:	add	x0, x0, x1
  46d868:	lsl	x0, x0, #4
  46d86c:	add	x0, x2, x0
  46d870:	ldr	x1, [sp, #56]
  46d874:	str	x1, [x0, #8]
  46d878:	ldr	x0, [sp, #48]
  46d87c:	lsl	x3, x0, #4
  46d880:	ldr	x0, [sp, #72]
  46d884:	ldr	x2, [x0, #16]
  46d888:	ldr	x1, [sp, #104]
  46d88c:	mov	x0, x1
  46d890:	lsl	x0, x0, #1
  46d894:	add	x0, x0, x1
  46d898:	lsl	x0, x0, #4
  46d89c:	add	x19, x2, x0
  46d8a0:	mov	x0, x3
  46d8a4:	bl	4043f0 <malloc@plt>
  46d8a8:	str	x0, [x19, #16]
  46d8ac:	ldr	x0, [sp, #72]
  46d8b0:	ldr	x2, [x0, #16]
  46d8b4:	ldr	x1, [sp, #104]
  46d8b8:	mov	x0, x1
  46d8bc:	lsl	x0, x0, #1
  46d8c0:	add	x0, x0, x1
  46d8c4:	lsl	x0, x0, #4
  46d8c8:	add	x0, x2, x0
  46d8cc:	ldr	x0, [x0, #16]
  46d8d0:	cmp	x0, #0x0
  46d8d4:	b.ne	46d8e0 <_obstack_memory_used@@Base+0x107a0>  // b.any
  46d8d8:	mov	w0, #0xc                   	// #12
  46d8dc:	b	46d950 <_obstack_memory_used@@Base+0x10810>
  46d8e0:	ldr	x0, [sp, #72]
  46d8e4:	ldr	x2, [x0, #16]
  46d8e8:	ldr	x1, [sp, #104]
  46d8ec:	mov	x0, x1
  46d8f0:	lsl	x0, x0, #1
  46d8f4:	add	x0, x0, x1
  46d8f8:	lsl	x0, x0, #4
  46d8fc:	add	x0, x2, x0
  46d900:	ldr	x3, [x0, #16]
  46d904:	ldr	x0, [sp, #48]
  46d908:	lsl	x0, x0, #4
  46d90c:	mov	x2, x0
  46d910:	ldr	x1, [sp, #40]
  46d914:	mov	x0, x3
  46d918:	bl	404020 <memcpy@plt>
  46d91c:	ldr	x0, [sp, #72]
  46d920:	ldr	x2, [x0, #16]
  46d924:	ldr	x1, [sp, #104]
  46d928:	mov	x0, x1
  46d92c:	lsl	x0, x0, #1
  46d930:	add	x0, x0, x1
  46d934:	lsl	x0, x0, #4
  46d938:	add	x0, x2, x0
  46d93c:	add	x0, x0, #0x18
  46d940:	ldr	x1, [sp, #32]
  46d944:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  46d948:	str	w0, [sp, #92]
  46d94c:	ldr	w0, [sp, #92]
  46d950:	ldr	x19, [sp, #16]
  46d954:	ldp	x29, x30, [sp], #112
  46d958:	ret
  46d95c:	stp	x29, x30, [sp, #-80]!
  46d960:	mov	x29, sp
  46d964:	str	x0, [sp, #56]
  46d968:	str	x1, [sp, #48]
  46d96c:	str	x2, [sp, #40]
  46d970:	str	x3, [sp, #32]
  46d974:	str	x4, [sp, #24]
  46d978:	ldr	x0, [sp, #56]
  46d97c:	ldr	x0, [x0]
  46d980:	sub	x1, x0, #0x1
  46d984:	ldr	x0, [sp, #56]
  46d988:	str	x1, [x0]
  46d98c:	ldr	x0, [sp, #56]
  46d990:	ldr	x0, [x0]
  46d994:	str	x0, [sp, #72]
  46d998:	ldr	x0, [sp, #72]
  46d99c:	cmp	x0, #0x0
  46d9a0:	b.ge	46d9c4 <_obstack_memory_used@@Base+0x10884>  // b.tcont
  46d9a4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46d9a8:	add	x3, x0, #0x918
  46d9ac:	mov	w2, #0x553                 	// #1363
  46d9b0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46d9b4:	add	x1, x0, #0x830
  46d9b8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  46d9bc:	add	x0, x0, #0x8b0
  46d9c0:	bl	404bb0 <__assert_fail@plt>
  46d9c4:	ldr	x0, [sp, #56]
  46d9c8:	ldr	x2, [x0, #16]
  46d9cc:	ldr	x1, [sp, #72]
  46d9d0:	mov	x0, x1
  46d9d4:	lsl	x0, x0, #1
  46d9d8:	add	x0, x0, x1
  46d9dc:	lsl	x0, x0, #4
  46d9e0:	add	x0, x2, x0
  46d9e4:	ldr	x1, [x0]
  46d9e8:	ldr	x0, [sp, #48]
  46d9ec:	str	x1, [x0]
  46d9f0:	ldr	x0, [sp, #56]
  46d9f4:	ldr	x2, [x0, #16]
  46d9f8:	ldr	x1, [sp, #72]
  46d9fc:	mov	x0, x1
  46da00:	lsl	x0, x0, #1
  46da04:	add	x0, x0, x1
  46da08:	lsl	x0, x0, #4
  46da0c:	add	x0, x2, x0
  46da10:	ldr	x1, [x0, #16]
  46da14:	ldr	x0, [sp, #40]
  46da18:	lsl	x0, x0, #4
  46da1c:	mov	x2, x0
  46da20:	ldr	x0, [sp, #32]
  46da24:	bl	404020 <memcpy@plt>
  46da28:	ldr	x0, [sp, #24]
  46da2c:	ldr	x0, [x0, #16]
  46da30:	bl	404880 <free@plt>
  46da34:	ldr	x0, [sp, #56]
  46da38:	ldr	x2, [x0, #16]
  46da3c:	ldr	x1, [sp, #72]
  46da40:	mov	x0, x1
  46da44:	lsl	x0, x0, #1
  46da48:	add	x0, x0, x1
  46da4c:	lsl	x0, x0, #4
  46da50:	add	x0, x2, x0
  46da54:	ldr	x0, [x0, #16]
  46da58:	bl	404880 <free@plt>
  46da5c:	ldr	x0, [sp, #56]
  46da60:	ldr	x2, [x0, #16]
  46da64:	ldr	x1, [sp, #72]
  46da68:	mov	x0, x1
  46da6c:	lsl	x0, x0, #1
  46da70:	add	x0, x0, x1
  46da74:	lsl	x0, x0, #4
  46da78:	add	x0, x2, x0
  46da7c:	ldr	x1, [sp, #24]
  46da80:	add	x0, x0, #0x18
  46da84:	mov	x2, x1
  46da88:	mov	x3, x0
  46da8c:	ldp	x0, x1, [x3]
  46da90:	stp	x0, x1, [x2]
  46da94:	ldr	x0, [x3, #16]
  46da98:	str	x0, [x2, #16]
  46da9c:	ldr	x0, [sp, #56]
  46daa0:	ldr	x2, [x0, #16]
  46daa4:	ldr	x1, [sp, #72]
  46daa8:	mov	x0, x1
  46daac:	lsl	x0, x0, #1
  46dab0:	add	x0, x0, x1
  46dab4:	lsl	x0, x0, #4
  46dab8:	add	x0, x2, x0
  46dabc:	ldr	x0, [x0, #8]
  46dac0:	ldp	x29, x30, [sp], #80
  46dac4:	ret
  46dac8:	stp	x29, x30, [sp, #-176]!
  46dacc:	mov	x29, sp
  46dad0:	str	x0, [x29, #56]
  46dad4:	str	x1, [x29, #48]
  46dad8:	str	x2, [x29, #40]
  46dadc:	str	x3, [x29, #32]
  46dae0:	strb	w4, [x29, #31]
  46dae4:	ldr	x0, [x29, #56]
  46dae8:	ldr	x0, [x0]
  46daec:	str	x0, [x29, #128]
  46daf0:	str	xzr, [x29, #72]
  46daf4:	mov	x0, #0x2                   	// #2
  46daf8:	str	x0, [x29, #80]
  46dafc:	str	xzr, [x29, #88]
  46db00:	strb	wzr, [x29, #151]
  46db04:	ldrb	w0, [x29, #31]
  46db08:	cmp	w0, #0x0
  46db0c:	b.eq	46db5c <_obstack_memory_used@@Base+0x10a1c>  // b.none
  46db10:	add	x0, x29, #0x48
  46db14:	str	x0, [x29, #160]
  46db18:	ldr	x0, [x29, #160]
  46db1c:	ldr	x0, [x0, #8]
  46db20:	mov	x1, x0
  46db24:	mov	x0, x1
  46db28:	lsl	x0, x0, #1
  46db2c:	add	x0, x0, x1
  46db30:	lsl	x0, x0, #4
  46db34:	bl	4043f0 <malloc@plt>
  46db38:	mov	x1, x0
  46db3c:	ldr	x0, [x29, #160]
  46db40:	str	x1, [x0, #16]
  46db44:	ldr	x0, [x29, #160]
  46db48:	ldr	x0, [x0, #16]
  46db4c:	cmp	x0, #0x0
  46db50:	b.ne	46db60 <_obstack_memory_used@@Base+0x10a20>  // b.any
  46db54:	mov	w0, #0xc                   	// #12
  46db58:	b	46de80 <_obstack_memory_used@@Base+0x10d40>
  46db5c:	str	xzr, [x29, #160]
  46db60:	ldr	x0, [x29, #128]
  46db64:	ldr	x0, [x0, #144]
  46db68:	str	x0, [x29, #168]
  46db6c:	add	x0, x29, #0x60
  46db70:	mov	x2, #0x18                  	// #24
  46db74:	mov	w1, #0x0                   	// #0
  46db78:	bl	4044d0 <memset@plt>
  46db7c:	ldr	x0, [x29, #40]
  46db80:	lsl	x0, x0, #4
  46db84:	cmp	x0, #0xfbf
  46db88:	b.hi	46dbbc <_obstack_memory_used@@Base+0x10a7c>  // b.pmore
  46db8c:	ldr	x0, [x29, #40]
  46db90:	lsl	x0, x0, #4
  46db94:	add	x0, x0, #0xf
  46db98:	lsr	x0, x0, #4
  46db9c:	lsl	x0, x0, #4
  46dba0:	sub	sp, sp, x0
  46dba4:	mov	x0, sp
  46dba8:	add	x0, x0, #0xf
  46dbac:	lsr	x0, x0, #4
  46dbb0:	lsl	x0, x0, #4
  46dbb4:	str	x0, [x29, #152]
  46dbb8:	b	46dbf0 <_obstack_memory_used@@Base+0x10ab0>
  46dbbc:	ldr	x0, [x29, #40]
  46dbc0:	lsl	x0, x0, #4
  46dbc4:	bl	4043f0 <malloc@plt>
  46dbc8:	str	x0, [x29, #152]
  46dbcc:	ldr	x0, [x29, #152]
  46dbd0:	cmp	x0, #0x0
  46dbd4:	b.ne	46dbe8 <_obstack_memory_used@@Base+0x10aa8>  // b.any
  46dbd8:	ldr	x0, [x29, #160]
  46dbdc:	bl	46de8c <_obstack_memory_used@@Base+0x10d4c>
  46dbe0:	mov	w0, #0xc                   	// #12
  46dbe4:	b	46de80 <_obstack_memory_used@@Base+0x10d40>
  46dbe8:	mov	w0, #0x1                   	// #1
  46dbec:	strb	w0, [x29, #151]
  46dbf0:	ldr	x0, [x29, #40]
  46dbf4:	lsl	x0, x0, #4
  46dbf8:	mov	x2, x0
  46dbfc:	ldr	x1, [x29, #32]
  46dc00:	ldr	x0, [x29, #152]
  46dc04:	bl	404020 <memcpy@plt>
  46dc08:	ldr	x0, [x29, #32]
  46dc0c:	ldr	x0, [x0]
  46dc10:	str	x0, [x29, #120]
  46dc14:	b	46de48 <_obstack_memory_used@@Base+0x10d08>
  46dc18:	ldr	x0, [x29, #120]
  46dc1c:	ldr	x1, [x29, #40]
  46dc20:	mov	x5, x1
  46dc24:	mov	x4, x0
  46dc28:	ldr	x3, [x29, #168]
  46dc2c:	ldr	x2, [x29, #152]
  46dc30:	ldr	x1, [x29, #32]
  46dc34:	ldr	x0, [x29, #128]
  46dc38:	bl	46df34 <_obstack_memory_used@@Base+0x10df4>
  46dc3c:	ldr	x0, [x29, #32]
  46dc40:	ldr	x1, [x0, #8]
  46dc44:	ldr	x0, [x29, #120]
  46dc48:	cmp	x1, x0
  46dc4c:	b.ne	46dd5c <_obstack_memory_used@@Base+0x10c1c>  // b.any
  46dc50:	ldr	x0, [x29, #48]
  46dc54:	ldr	x0, [x0, #176]
  46dc58:	ldr	x1, [x29, #168]
  46dc5c:	cmp	x1, x0
  46dc60:	b.ne	46dd5c <_obstack_memory_used@@Base+0x10c1c>  // b.any
  46dc64:	ldr	x0, [x29, #160]
  46dc68:	cmp	x0, #0x0
  46dc6c:	b.eq	46dd38 <_obstack_memory_used@@Base+0x10bf8>  // b.none
  46dc70:	str	xzr, [x29, #136]
  46dc74:	b	46dcbc <_obstack_memory_used@@Base+0x10b7c>
  46dc78:	ldr	x0, [x29, #136]
  46dc7c:	lsl	x0, x0, #4
  46dc80:	ldr	x1, [x29, #32]
  46dc84:	add	x0, x1, x0
  46dc88:	ldr	x0, [x0]
  46dc8c:	cmp	x0, #0x0
  46dc90:	b.lt	46dcb0 <_obstack_memory_used@@Base+0x10b70>  // b.tstop
  46dc94:	ldr	x0, [x29, #136]
  46dc98:	lsl	x0, x0, #4
  46dc9c:	ldr	x1, [x29, #32]
  46dca0:	add	x0, x1, x0
  46dca4:	ldr	x0, [x0, #8]
  46dca8:	cmn	x0, #0x1
  46dcac:	b.eq	46dcd0 <_obstack_memory_used@@Base+0x10b90>  // b.none
  46dcb0:	ldr	x0, [x29, #136]
  46dcb4:	add	x0, x0, #0x1
  46dcb8:	str	x0, [x29, #136]
  46dcbc:	ldr	x0, [x29, #136]
  46dcc0:	ldr	x1, [x29, #40]
  46dcc4:	cmp	x1, x0
  46dcc8:	b.hi	46dc78 <_obstack_memory_used@@Base+0x10b38>  // b.pmore
  46dccc:	b	46dcd4 <_obstack_memory_used@@Base+0x10b94>
  46dcd0:	nop
  46dcd4:	ldr	x0, [x29, #40]
  46dcd8:	ldr	x1, [x29, #136]
  46dcdc:	cmp	x1, x0
  46dce0:	b.ne	46dd0c <_obstack_memory_used@@Base+0x10bcc>  // b.any
  46dce4:	ldr	x0, [x29, #112]
  46dce8:	bl	404880 <free@plt>
  46dcec:	ldrb	w0, [x29, #151]
  46dcf0:	cmp	w0, #0x0
  46dcf4:	b.eq	46dd00 <_obstack_memory_used@@Base+0x10bc0>  // b.none
  46dcf8:	ldr	x0, [x29, #152]
  46dcfc:	bl	404880 <free@plt>
  46dd00:	ldr	x0, [x29, #160]
  46dd04:	bl	46de8c <_obstack_memory_used@@Base+0x10d4c>
  46dd08:	b	46de80 <_obstack_memory_used@@Base+0x10d40>
  46dd0c:	ldr	x1, [x29, #40]
  46dd10:	add	x2, x29, #0x60
  46dd14:	add	x0, x29, #0x78
  46dd18:	mov	x4, x2
  46dd1c:	ldr	x3, [x29, #32]
  46dd20:	mov	x2, x1
  46dd24:	mov	x1, x0
  46dd28:	ldr	x0, [x29, #160]
  46dd2c:	bl	46d95c <_obstack_memory_used@@Base+0x1081c>
  46dd30:	str	x0, [x29, #168]
  46dd34:	b	46dd5c <_obstack_memory_used@@Base+0x10c1c>
  46dd38:	ldr	x0, [x29, #112]
  46dd3c:	bl	404880 <free@plt>
  46dd40:	ldrb	w0, [x29, #151]
  46dd44:	cmp	w0, #0x0
  46dd48:	b.eq	46dd54 <_obstack_memory_used@@Base+0x10c14>  // b.none
  46dd4c:	ldr	x0, [x29, #152]
  46dd50:	bl	404880 <free@plt>
  46dd54:	mov	w0, #0x0                   	// #0
  46dd58:	b	46de80 <_obstack_memory_used@@Base+0x10d40>
  46dd5c:	ldr	x0, [x29, #40]
  46dd60:	add	x2, x29, #0x60
  46dd64:	add	x1, x29, #0x78
  46dd68:	ldr	x6, [x29, #160]
  46dd6c:	mov	x5, x2
  46dd70:	ldr	x4, [x29, #168]
  46dd74:	mov	x3, x1
  46dd78:	ldr	x2, [x29, #32]
  46dd7c:	mov	x1, x0
  46dd80:	ldr	x0, [x29, #48]
  46dd84:	bl	46d260 <_obstack_memory_used@@Base+0x10120>
  46dd88:	str	x0, [x29, #168]
  46dd8c:	ldr	x0, [x29, #168]
  46dd90:	lsr	x0, x0, #63
  46dd94:	and	w0, w0, #0xff
  46dd98:	and	x0, x0, #0xff
  46dd9c:	cmp	x0, #0x0
  46dda0:	b.eq	46de48 <_obstack_memory_used@@Base+0x10d08>  // b.none
  46dda4:	ldr	x0, [x29, #168]
  46dda8:	cmn	x0, #0x2
  46ddac:	cset	w0, eq  // eq = none
  46ddb0:	and	w0, w0, #0xff
  46ddb4:	and	x0, x0, #0xff
  46ddb8:	cmp	x0, #0x0
  46ddbc:	b.eq	46ddec <_obstack_memory_used@@Base+0x10cac>  // b.none
  46ddc0:	ldr	x0, [x29, #112]
  46ddc4:	bl	404880 <free@plt>
  46ddc8:	ldrb	w0, [x29, #151]
  46ddcc:	cmp	w0, #0x0
  46ddd0:	b.eq	46dddc <_obstack_memory_used@@Base+0x10c9c>  // b.none
  46ddd4:	ldr	x0, [x29, #152]
  46ddd8:	bl	404880 <free@plt>
  46dddc:	ldr	x0, [x29, #160]
  46dde0:	bl	46de8c <_obstack_memory_used@@Base+0x10d4c>
  46dde4:	mov	w0, #0xc                   	// #12
  46dde8:	b	46de80 <_obstack_memory_used@@Base+0x10d40>
  46ddec:	ldr	x0, [x29, #160]
  46ddf0:	cmp	x0, #0x0
  46ddf4:	b.eq	46de24 <_obstack_memory_used@@Base+0x10ce4>  // b.none
  46ddf8:	ldr	x1, [x29, #40]
  46ddfc:	add	x2, x29, #0x60
  46de00:	add	x0, x29, #0x78
  46de04:	mov	x4, x2
  46de08:	ldr	x3, [x29, #32]
  46de0c:	mov	x2, x1
  46de10:	mov	x1, x0
  46de14:	ldr	x0, [x29, #160]
  46de18:	bl	46d95c <_obstack_memory_used@@Base+0x1081c>
  46de1c:	str	x0, [x29, #168]
  46de20:	b	46de48 <_obstack_memory_used@@Base+0x10d08>
  46de24:	ldr	x0, [x29, #112]
  46de28:	bl	404880 <free@plt>
  46de2c:	ldrb	w0, [x29, #151]
  46de30:	cmp	w0, #0x0
  46de34:	b.eq	46de40 <_obstack_memory_used@@Base+0x10d00>  // b.none
  46de38:	ldr	x0, [x29, #152]
  46de3c:	bl	404880 <free@plt>
  46de40:	mov	w0, #0x1                   	// #1
  46de44:	b	46de80 <_obstack_memory_used@@Base+0x10d40>
  46de48:	ldr	x0, [x29, #32]
  46de4c:	ldr	x1, [x0, #8]
  46de50:	ldr	x0, [x29, #120]
  46de54:	cmp	x1, x0
  46de58:	b.ge	46dc18 <_obstack_memory_used@@Base+0x10ad8>  // b.tcont
  46de5c:	ldr	x0, [x29, #112]
  46de60:	bl	404880 <free@plt>
  46de64:	ldrb	w0, [x29, #151]
  46de68:	cmp	w0, #0x0
  46de6c:	b.eq	46de78 <_obstack_memory_used@@Base+0x10d38>  // b.none
  46de70:	ldr	x0, [x29, #152]
  46de74:	bl	404880 <free@plt>
  46de78:	ldr	x0, [x29, #160]
  46de7c:	bl	46de8c <_obstack_memory_used@@Base+0x10d4c>
  46de80:	mov	sp, x29
  46de84:	ldp	x29, x30, [sp], #176
  46de88:	ret
  46de8c:	stp	x29, x30, [sp, #-48]!
  46de90:	mov	x29, sp
  46de94:	str	x0, [sp, #24]
  46de98:	ldr	x0, [sp, #24]
  46de9c:	cmp	x0, #0x0
  46dea0:	b.eq	46df28 <_obstack_memory_used@@Base+0x10de8>  // b.none
  46dea4:	str	xzr, [sp, #40]
  46dea8:	b	46df08 <_obstack_memory_used@@Base+0x10dc8>
  46deac:	ldr	x0, [sp, #24]
  46deb0:	ldr	x2, [x0, #16]
  46deb4:	ldr	x1, [sp, #40]
  46deb8:	mov	x0, x1
  46debc:	lsl	x0, x0, #1
  46dec0:	add	x0, x0, x1
  46dec4:	lsl	x0, x0, #4
  46dec8:	add	x0, x2, x0
  46decc:	ldr	x0, [x0, #40]
  46ded0:	bl	404880 <free@plt>
  46ded4:	ldr	x0, [sp, #24]
  46ded8:	ldr	x2, [x0, #16]
  46dedc:	ldr	x1, [sp, #40]
  46dee0:	mov	x0, x1
  46dee4:	lsl	x0, x0, #1
  46dee8:	add	x0, x0, x1
  46deec:	lsl	x0, x0, #4
  46def0:	add	x0, x2, x0
  46def4:	ldr	x0, [x0, #16]
  46def8:	bl	404880 <free@plt>
  46defc:	ldr	x0, [sp, #40]
  46df00:	add	x0, x0, #0x1
  46df04:	str	x0, [sp, #40]
  46df08:	ldr	x0, [sp, #24]
  46df0c:	ldr	x0, [x0]
  46df10:	ldr	x1, [sp, #40]
  46df14:	cmp	x1, x0
  46df18:	b.lt	46deac <_obstack_memory_used@@Base+0x10d6c>  // b.tstop
  46df1c:	ldr	x0, [sp, #24]
  46df20:	ldr	x0, [x0, #16]
  46df24:	bl	404880 <free@plt>
  46df28:	mov	w0, #0x0                   	// #0
  46df2c:	ldp	x29, x30, [sp], #48
  46df30:	ret
  46df34:	stp	x29, x30, [sp, #-96]!
  46df38:	mov	x29, sp
  46df3c:	str	x0, [sp, #56]
  46df40:	str	x1, [sp, #48]
  46df44:	str	x2, [sp, #40]
  46df48:	str	x3, [sp, #32]
  46df4c:	str	x4, [sp, #24]
  46df50:	str	x5, [sp, #16]
  46df54:	ldr	x0, [sp, #56]
  46df58:	ldr	x1, [x0]
  46df5c:	ldr	x0, [sp, #32]
  46df60:	lsl	x0, x0, #4
  46df64:	add	x0, x1, x0
  46df68:	ldrb	w0, [x0, #8]
  46df6c:	str	w0, [sp, #92]
  46df70:	ldr	w0, [sp, #92]
  46df74:	cmp	w0, #0x8
  46df78:	b.ne	46dfe0 <_obstack_memory_used@@Base+0x10ea0>  // b.any
  46df7c:	ldr	x0, [sp, #56]
  46df80:	ldr	x1, [x0]
  46df84:	ldr	x0, [sp, #32]
  46df88:	lsl	x0, x0, #4
  46df8c:	add	x0, x1, x0
  46df90:	ldr	x0, [x0]
  46df94:	add	x0, x0, #0x1
  46df98:	str	x0, [sp, #72]
  46df9c:	ldr	x1, [sp, #72]
  46dfa0:	ldr	x0, [sp, #16]
  46dfa4:	cmp	x1, x0
  46dfa8:	b.ge	46e0e8 <_obstack_memory_used@@Base+0x10fa8>  // b.tcont
  46dfac:	ldr	x0, [sp, #72]
  46dfb0:	lsl	x0, x0, #4
  46dfb4:	ldr	x1, [sp, #48]
  46dfb8:	add	x0, x1, x0
  46dfbc:	ldr	x1, [sp, #24]
  46dfc0:	str	x1, [x0]
  46dfc4:	ldr	x0, [sp, #72]
  46dfc8:	lsl	x0, x0, #4
  46dfcc:	ldr	x1, [sp, #48]
  46dfd0:	add	x0, x1, x0
  46dfd4:	mov	x1, #0xffffffffffffffff    	// #-1
  46dfd8:	str	x1, [x0, #8]
  46dfdc:	b	46e0e8 <_obstack_memory_used@@Base+0x10fa8>
  46dfe0:	ldr	w0, [sp, #92]
  46dfe4:	cmp	w0, #0x9
  46dfe8:	b.ne	46e0e8 <_obstack_memory_used@@Base+0x10fa8>  // b.any
  46dfec:	ldr	x0, [sp, #56]
  46dff0:	ldr	x1, [x0]
  46dff4:	ldr	x0, [sp, #32]
  46dff8:	lsl	x0, x0, #4
  46dffc:	add	x0, x1, x0
  46e000:	ldr	x0, [x0]
  46e004:	add	x0, x0, #0x1
  46e008:	str	x0, [sp, #80]
  46e00c:	ldr	x1, [sp, #80]
  46e010:	ldr	x0, [sp, #16]
  46e014:	cmp	x1, x0
  46e018:	b.ge	46e0e8 <_obstack_memory_used@@Base+0x10fa8>  // b.tcont
  46e01c:	ldr	x0, [sp, #80]
  46e020:	lsl	x0, x0, #4
  46e024:	ldr	x1, [sp, #48]
  46e028:	add	x0, x1, x0
  46e02c:	ldr	x0, [x0]
  46e030:	ldr	x1, [sp, #24]
  46e034:	cmp	x1, x0
  46e038:	b.le	46e070 <_obstack_memory_used@@Base+0x10f30>
  46e03c:	ldr	x0, [sp, #80]
  46e040:	lsl	x0, x0, #4
  46e044:	ldr	x1, [sp, #48]
  46e048:	add	x0, x1, x0
  46e04c:	ldr	x1, [sp, #24]
  46e050:	str	x1, [x0, #8]
  46e054:	ldr	x0, [sp, #16]
  46e058:	lsl	x0, x0, #4
  46e05c:	mov	x2, x0
  46e060:	ldr	x1, [sp, #48]
  46e064:	ldr	x0, [sp, #40]
  46e068:	bl	404020 <memcpy@plt>
  46e06c:	b	46e0e8 <_obstack_memory_used@@Base+0x10fa8>
  46e070:	ldr	x0, [sp, #56]
  46e074:	ldr	x1, [x0]
  46e078:	ldr	x0, [sp, #32]
  46e07c:	lsl	x0, x0, #4
  46e080:	add	x0, x1, x0
  46e084:	ldrb	w0, [x0, #10]
  46e088:	and	w0, w0, #0x8
  46e08c:	and	w0, w0, #0xff
  46e090:	cmp	w0, #0x0
  46e094:	b.eq	46e0d0 <_obstack_memory_used@@Base+0x10f90>  // b.none
  46e098:	ldr	x0, [sp, #80]
  46e09c:	lsl	x0, x0, #4
  46e0a0:	ldr	x1, [sp, #40]
  46e0a4:	add	x0, x1, x0
  46e0a8:	ldr	x0, [x0]
  46e0ac:	cmn	x0, #0x1
  46e0b0:	b.eq	46e0d0 <_obstack_memory_used@@Base+0x10f90>  // b.none
  46e0b4:	ldr	x0, [sp, #16]
  46e0b8:	lsl	x0, x0, #4
  46e0bc:	mov	x2, x0
  46e0c0:	ldr	x1, [sp, #40]
  46e0c4:	ldr	x0, [sp, #48]
  46e0c8:	bl	404020 <memcpy@plt>
  46e0cc:	b	46e0e8 <_obstack_memory_used@@Base+0x10fa8>
  46e0d0:	ldr	x0, [sp, #80]
  46e0d4:	lsl	x0, x0, #4
  46e0d8:	ldr	x1, [sp, #48]
  46e0dc:	add	x0, x1, x0
  46e0e0:	ldr	x1, [sp, #24]
  46e0e4:	str	x1, [x0, #8]
  46e0e8:	nop
  46e0ec:	ldp	x29, x30, [sp], #96
  46e0f0:	ret
  46e0f4:	stp	x29, x30, [sp, #-80]!
  46e0f8:	mov	x29, sp
  46e0fc:	str	x0, [sp, #24]
  46e100:	str	x1, [sp, #16]
  46e104:	str	wzr, [sp, #72]
  46e108:	ldr	x0, [sp, #16]
  46e10c:	ldr	x0, [x0, #24]
  46e110:	str	x0, [sp, #64]
  46e114:	ldr	x0, [sp, #16]
  46e118:	ldr	x1, [x0, #16]
  46e11c:	add	x0, sp, #0x28
  46e120:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  46e124:	str	w0, [sp, #76]
  46e128:	ldr	w0, [sp, #76]
  46e12c:	cmp	w0, #0x0
  46e130:	cset	w0, ne  // ne = any
  46e134:	and	w0, w0, #0xff
  46e138:	and	x0, x0, #0xff
  46e13c:	cmp	x0, #0x0
  46e140:	b.eq	46e14c <_obstack_memory_used@@Base+0x1100c>  // b.none
  46e144:	ldr	w0, [sp, #76]
  46e148:	b	46e2d4 <_obstack_memory_used@@Base+0x11194>
  46e14c:	add	x0, sp, #0x28
  46e150:	mov	x3, x0
  46e154:	ldr	x2, [sp, #64]
  46e158:	ldr	x1, [sp, #16]
  46e15c:	ldr	x0, [sp, #24]
  46e160:	bl	46e7a4 <_obstack_memory_used@@Base+0x11664>
  46e164:	str	w0, [sp, #76]
  46e168:	ldr	w0, [sp, #76]
  46e16c:	cmp	w0, #0x0
  46e170:	cset	w0, ne  // ne = any
  46e174:	and	w0, w0, #0xff
  46e178:	and	x0, x0, #0xff
  46e17c:	cmp	x0, #0x0
  46e180:	b.ne	46e2b4 <_obstack_memory_used@@Base+0x11174>  // b.any
  46e184:	b	46e2a0 <_obstack_memory_used@@Base+0x11160>
  46e188:	ldr	x0, [sp, #16]
  46e18c:	ldr	x1, [x0]
  46e190:	ldr	x0, [sp, #64]
  46e194:	lsl	x0, x0, #3
  46e198:	add	x0, x1, x0
  46e19c:	ldr	x0, [x0]
  46e1a0:	cmp	x0, #0x0
  46e1a4:	b.ne	46e1b4 <_obstack_memory_used@@Base+0x11074>  // b.any
  46e1a8:	ldr	w0, [sp, #72]
  46e1ac:	add	w0, w0, #0x1
  46e1b0:	b	46e1b8 <_obstack_memory_used@@Base+0x11078>
  46e1b4:	mov	w0, #0x0                   	// #0
  46e1b8:	str	w0, [sp, #72]
  46e1bc:	ldr	x0, [sp, #24]
  46e1c0:	ldr	w0, [x0, #224]
  46e1c4:	ldr	w1, [sp, #72]
  46e1c8:	cmp	w1, w0
  46e1cc:	b.le	46e200 <_obstack_memory_used@@Base+0x110c0>
  46e1d0:	ldr	x0, [sp, #16]
  46e1d4:	ldr	x3, [x0]
  46e1d8:	ldr	x0, [sp, #64]
  46e1dc:	lsl	x0, x0, #3
  46e1e0:	mov	x2, x0
  46e1e4:	mov	w1, #0x0                   	// #0
  46e1e8:	mov	x0, x3
  46e1ec:	bl	4044d0 <memset@plt>
  46e1f0:	ldr	x0, [sp, #56]
  46e1f4:	bl	404880 <free@plt>
  46e1f8:	mov	w0, #0x0                   	// #0
  46e1fc:	b	46e2d4 <_obstack_memory_used@@Base+0x11194>
  46e200:	str	xzr, [sp, #48]
  46e204:	ldr	x0, [sp, #64]
  46e208:	sub	x0, x0, #0x1
  46e20c:	str	x0, [sp, #64]
  46e210:	ldr	x0, [sp, #24]
  46e214:	ldr	x1, [x0, #184]
  46e218:	ldr	x0, [sp, #64]
  46e21c:	lsl	x0, x0, #3
  46e220:	add	x0, x1, x0
  46e224:	ldr	x0, [x0]
  46e228:	cmp	x0, #0x0
  46e22c:	b.eq	46e268 <_obstack_memory_used@@Base+0x11128>  // b.none
  46e230:	add	x0, sp, #0x28
  46e234:	mov	x3, x0
  46e238:	ldr	x2, [sp, #64]
  46e23c:	ldr	x1, [sp, #16]
  46e240:	ldr	x0, [sp, #24]
  46e244:	bl	46e2dc <_obstack_memory_used@@Base+0x1119c>
  46e248:	str	w0, [sp, #76]
  46e24c:	ldr	w0, [sp, #76]
  46e250:	cmp	w0, #0x0
  46e254:	cset	w0, ne  // ne = any
  46e258:	and	w0, w0, #0xff
  46e25c:	and	x0, x0, #0xff
  46e260:	cmp	x0, #0x0
  46e264:	b.ne	46e2bc <_obstack_memory_used@@Base+0x1117c>  // b.any
  46e268:	add	x0, sp, #0x28
  46e26c:	mov	x3, x0
  46e270:	ldr	x2, [sp, #64]
  46e274:	ldr	x1, [sp, #16]
  46e278:	ldr	x0, [sp, #24]
  46e27c:	bl	46e7a4 <_obstack_memory_used@@Base+0x11664>
  46e280:	str	w0, [sp, #76]
  46e284:	ldr	w0, [sp, #76]
  46e288:	cmp	w0, #0x0
  46e28c:	cset	w0, ne  // ne = any
  46e290:	and	w0, w0, #0xff
  46e294:	and	x0, x0, #0xff
  46e298:	cmp	x0, #0x0
  46e29c:	b.ne	46e2c4 <_obstack_memory_used@@Base+0x11184>  // b.any
  46e2a0:	ldr	x0, [sp, #64]
  46e2a4:	cmp	x0, #0x0
  46e2a8:	b.gt	46e188 <_obstack_memory_used@@Base+0x11048>
  46e2ac:	str	wzr, [sp, #76]
  46e2b0:	b	46e2c8 <_obstack_memory_used@@Base+0x11188>
  46e2b4:	nop
  46e2b8:	b	46e2c8 <_obstack_memory_used@@Base+0x11188>
  46e2bc:	nop
  46e2c0:	b	46e2c8 <_obstack_memory_used@@Base+0x11188>
  46e2c4:	nop
  46e2c8:	ldr	x0, [sp, #56]
  46e2cc:	bl	404880 <free@plt>
  46e2d0:	ldr	w0, [sp, #76]
  46e2d4:	ldp	x29, x30, [sp], #80
  46e2d8:	ret
  46e2dc:	stp	x29, x30, [sp, #-112]!
  46e2e0:	mov	x29, sp
  46e2e4:	str	x0, [sp, #40]
  46e2e8:	str	x1, [sp, #32]
  46e2ec:	str	x2, [sp, #24]
  46e2f0:	str	x3, [sp, #16]
  46e2f4:	ldr	x0, [sp, #40]
  46e2f8:	ldr	x0, [x0, #152]
  46e2fc:	str	x0, [sp, #88]
  46e300:	ldr	x0, [sp, #40]
  46e304:	ldr	x1, [x0, #184]
  46e308:	ldr	x0, [sp, #24]
  46e30c:	lsl	x0, x0, #3
  46e310:	add	x0, x1, x0
  46e314:	ldr	x0, [x0]
  46e318:	add	x0, x0, #0x20
  46e31c:	str	x0, [sp, #80]
  46e320:	str	xzr, [sp, #104]
  46e324:	b	46e504 <_obstack_memory_used@@Base+0x113c4>
  46e328:	ldr	x0, [sp, #80]
  46e32c:	ldr	x1, [x0, #16]
  46e330:	ldr	x0, [sp, #104]
  46e334:	lsl	x0, x0, #3
  46e338:	add	x0, x1, x0
  46e33c:	ldr	x0, [x0]
  46e340:	str	x0, [sp, #72]
  46e344:	str	wzr, [sp, #100]
  46e348:	ldr	x0, [sp, #88]
  46e34c:	ldr	x1, [x0]
  46e350:	ldr	x0, [sp, #72]
  46e354:	lsl	x0, x0, #4
  46e358:	add	x0, x1, x0
  46e35c:	ldrb	w0, [x0, #10]
  46e360:	and	w0, w0, #0x10
  46e364:	and	w0, w0, #0xff
  46e368:	cmp	w0, #0x0
  46e36c:	b.eq	46e394 <_obstack_memory_used@@Base+0x11254>  // b.none
  46e370:	ldr	x0, [sp, #32]
  46e374:	ldr	x0, [x0, #24]
  46e378:	mov	x4, x0
  46e37c:	ldr	x3, [sp, #24]
  46e380:	ldr	x2, [sp, #72]
  46e384:	ldr	x1, [sp, #32]
  46e388:	ldr	x0, [sp, #40]
  46e38c:	bl	46fb88 <_obstack_memory_used@@Base+0x12a48>
  46e390:	str	w0, [sp, #100]
  46e394:	ldr	w0, [sp, #100]
  46e398:	cmp	w0, #0x0
  46e39c:	b.ne	46e448 <_obstack_memory_used@@Base+0x11308>  // b.any
  46e3a0:	ldr	x0, [sp, #88]
  46e3a4:	ldr	x1, [x0]
  46e3a8:	ldr	x0, [sp, #72]
  46e3ac:	lsl	x0, x0, #4
  46e3b0:	add	x0, x1, x0
  46e3b4:	ldr	x2, [sp, #24]
  46e3b8:	mov	x1, x0
  46e3bc:	ldr	x0, [sp, #40]
  46e3c0:	bl	473e9c <_obstack_memory_used@@Base+0x16d5c>
  46e3c4:	and	w0, w0, #0xff
  46e3c8:	cmp	w0, #0x0
  46e3cc:	b.eq	46e448 <_obstack_memory_used@@Base+0x11308>  // b.none
  46e3d0:	ldr	x0, [sp, #32]
  46e3d4:	ldr	x1, [x0]
  46e3d8:	ldr	x0, [sp, #24]
  46e3dc:	add	x0, x0, #0x1
  46e3e0:	lsl	x0, x0, #3
  46e3e4:	add	x0, x1, x0
  46e3e8:	ldr	x0, [x0]
  46e3ec:	cmp	x0, #0x0
  46e3f0:	b.eq	46e448 <_obstack_memory_used@@Base+0x11308>  // b.none
  46e3f4:	ldr	x0, [sp, #32]
  46e3f8:	ldr	x1, [x0]
  46e3fc:	ldr	x0, [sp, #24]
  46e400:	add	x0, x0, #0x1
  46e404:	lsl	x0, x0, #3
  46e408:	add	x0, x1, x0
  46e40c:	ldr	x0, [x0]
  46e410:	add	x2, x0, #0x8
  46e414:	ldr	x0, [sp, #88]
  46e418:	ldr	x1, [x0, #24]
  46e41c:	ldr	x0, [sp, #72]
  46e420:	lsl	x0, x0, #3
  46e424:	add	x0, x1, x0
  46e428:	ldr	x0, [x0]
  46e42c:	mov	x1, x0
  46e430:	mov	x0, x2
  46e434:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46e438:	cmp	x0, #0x0
  46e43c:	b.eq	46e448 <_obstack_memory_used@@Base+0x11308>  // b.none
  46e440:	mov	w0, #0x1                   	// #1
  46e444:	str	w0, [sp, #100]
  46e448:	ldr	w0, [sp, #100]
  46e44c:	cmp	w0, #0x0
  46e450:	b.eq	46e4ec <_obstack_memory_used@@Base+0x113ac>  // b.none
  46e454:	ldr	x0, [sp, #32]
  46e458:	ldr	x0, [x0, #40]
  46e45c:	cmp	x0, #0x0
  46e460:	b.eq	46e4bc <_obstack_memory_used@@Base+0x1137c>  // b.none
  46e464:	ldrsw	x0, [sp, #100]
  46e468:	ldr	x1, [sp, #24]
  46e46c:	add	x0, x1, x0
  46e470:	str	x0, [sp, #64]
  46e474:	ldr	x0, [sp, #32]
  46e478:	add	x6, x0, #0x20
  46e47c:	ldr	x0, [sp, #88]
  46e480:	ldr	x1, [x0, #24]
  46e484:	ldr	x0, [sp, #72]
  46e488:	lsl	x0, x0, #3
  46e48c:	add	x0, x1, x0
  46e490:	ldr	x0, [x0]
  46e494:	ldr	x5, [sp, #24]
  46e498:	ldr	x4, [sp, #72]
  46e49c:	ldr	x3, [sp, #64]
  46e4a0:	mov	x2, x0
  46e4a4:	mov	x1, x6
  46e4a8:	ldr	x0, [sp, #40]
  46e4ac:	bl	46edb8 <_obstack_memory_used@@Base+0x11c78>
  46e4b0:	and	w0, w0, #0xff
  46e4b4:	cmp	w0, #0x0
  46e4b8:	b.ne	46e4f4 <_obstack_memory_used@@Base+0x113b4>  // b.any
  46e4bc:	ldr	x1, [sp, #72]
  46e4c0:	ldr	x0, [sp, #16]
  46e4c4:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  46e4c8:	strb	w0, [sp, #63]
  46e4cc:	ldrb	w0, [sp, #63]
  46e4d0:	eor	w0, w0, #0x1
  46e4d4:	and	w0, w0, #0xff
  46e4d8:	and	x0, x0, #0xff
  46e4dc:	cmp	x0, #0x0
  46e4e0:	b.eq	46e4f8 <_obstack_memory_used@@Base+0x113b8>  // b.none
  46e4e4:	mov	w0, #0xc                   	// #12
  46e4e8:	b	46e51c <_obstack_memory_used@@Base+0x113dc>
  46e4ec:	nop
  46e4f0:	b	46e4f8 <_obstack_memory_used@@Base+0x113b8>
  46e4f4:	nop
  46e4f8:	ldr	x0, [sp, #104]
  46e4fc:	add	x0, x0, #0x1
  46e500:	str	x0, [sp, #104]
  46e504:	ldr	x0, [sp, #80]
  46e508:	ldr	x0, [x0, #8]
  46e50c:	ldr	x1, [sp, #104]
  46e510:	cmp	x1, x0
  46e514:	b.lt	46e328 <_obstack_memory_used@@Base+0x111e8>  // b.tstop
  46e518:	mov	w0, #0x0                   	// #0
  46e51c:	ldp	x29, x30, [sp], #112
  46e520:	ret
  46e524:	stp	x29, x30, [sp, #-48]!
  46e528:	mov	x29, sp
  46e52c:	str	x0, [sp, #24]
  46e530:	str	x1, [sp, #16]
  46e534:	ldr	x0, [sp, #24]
  46e538:	ldr	x0, [x0, #192]
  46e53c:	str	x0, [sp, #40]
  46e540:	ldr	x0, [sp, #24]
  46e544:	ldr	x0, [x0, #64]
  46e548:	ldr	x1, [sp, #16]
  46e54c:	cmp	x1, x0
  46e550:	b.lt	46e56c <_obstack_memory_used@@Base+0x1142c>  // b.tstop
  46e554:	ldr	x0, [sp, #24]
  46e558:	ldr	x1, [x0, #64]
  46e55c:	ldr	x0, [sp, #24]
  46e560:	ldr	x0, [x0, #88]
  46e564:	cmp	x1, x0
  46e568:	b.lt	46e598 <_obstack_memory_used@@Base+0x11458>  // b.tstop
  46e56c:	ldr	x0, [sp, #24]
  46e570:	ldr	x0, [x0, #48]
  46e574:	ldr	x1, [sp, #16]
  46e578:	cmp	x1, x0
  46e57c:	b.lt	46e5d4 <_obstack_memory_used@@Base+0x11494>  // b.tstop
  46e580:	ldr	x0, [sp, #24]
  46e584:	ldr	x1, [x0, #48]
  46e588:	ldr	x0, [sp, #24]
  46e58c:	ldr	x0, [x0, #88]
  46e590:	cmp	x1, x0
  46e594:	b.ge	46e5d4 <_obstack_memory_used@@Base+0x11494>  // b.tcont
  46e598:	ldr	x0, [sp, #16]
  46e59c:	add	w0, w0, #0x1
  46e5a0:	mov	w1, w0
  46e5a4:	ldr	x0, [sp, #24]
  46e5a8:	bl	4740c4 <_obstack_memory_used@@Base+0x16f84>
  46e5ac:	str	w0, [sp, #36]
  46e5b0:	ldr	w0, [sp, #36]
  46e5b4:	cmp	w0, #0x0
  46e5b8:	cset	w0, ne  // ne = any
  46e5bc:	and	w0, w0, #0xff
  46e5c0:	and	x0, x0, #0xff
  46e5c4:	cmp	x0, #0x0
  46e5c8:	b.eq	46e5d4 <_obstack_memory_used@@Base+0x11494>  // b.none
  46e5cc:	ldr	w0, [sp, #36]
  46e5d0:	b	46e62c <_obstack_memory_used@@Base+0x114ec>
  46e5d4:	ldr	x1, [sp, #40]
  46e5d8:	ldr	x0, [sp, #16]
  46e5dc:	cmp	x1, x0
  46e5e0:	b.ge	46e628 <_obstack_memory_used@@Base+0x114e8>  // b.tcont
  46e5e4:	ldr	x0, [sp, #24]
  46e5e8:	ldr	x1, [x0, #184]
  46e5ec:	ldr	x0, [sp, #40]
  46e5f0:	add	x0, x0, #0x1
  46e5f4:	lsl	x0, x0, #3
  46e5f8:	add	x3, x1, x0
  46e5fc:	ldr	x1, [sp, #16]
  46e600:	ldr	x0, [sp, #40]
  46e604:	sub	x0, x1, x0
  46e608:	lsl	x0, x0, #3
  46e60c:	mov	x2, x0
  46e610:	mov	w1, #0x0                   	// #0
  46e614:	mov	x0, x3
  46e618:	bl	4044d0 <memset@plt>
  46e61c:	ldr	x0, [sp, #24]
  46e620:	ldr	x1, [sp, #16]
  46e624:	str	x1, [x0, #192]
  46e628:	mov	w0, #0x0                   	// #0
  46e62c:	ldp	x29, x30, [sp], #48
  46e630:	ret
  46e634:	stp	x29, x30, [sp, #-112]!
  46e638:	mov	x29, sp
  46e63c:	str	x19, [sp, #16]
  46e640:	str	x0, [sp, #56]
  46e644:	str	x1, [sp, #48]
  46e648:	str	x2, [sp, #40]
  46e64c:	str	x3, [sp, #32]
  46e650:	str	xzr, [sp, #104]
  46e654:	b	46e784 <_obstack_memory_used@@Base+0x11644>
  46e658:	ldr	x0, [sp, #104]
  46e65c:	lsl	x0, x0, #3
  46e660:	ldr	x1, [sp, #48]
  46e664:	add	x0, x1, x0
  46e668:	ldr	x0, [x0]
  46e66c:	cmp	x0, #0x0
  46e670:	b.ne	46e6a0 <_obstack_memory_used@@Base+0x11560>  // b.any
  46e674:	ldr	x0, [sp, #104]
  46e678:	lsl	x0, x0, #3
  46e67c:	ldr	x1, [sp, #40]
  46e680:	add	x1, x1, x0
  46e684:	ldr	x0, [sp, #104]
  46e688:	lsl	x0, x0, #3
  46e68c:	ldr	x2, [sp, #48]
  46e690:	add	x0, x2, x0
  46e694:	ldr	x1, [x1]
  46e698:	str	x1, [x0]
  46e69c:	b	46e778 <_obstack_memory_used@@Base+0x11638>
  46e6a0:	ldr	x0, [sp, #104]
  46e6a4:	lsl	x0, x0, #3
  46e6a8:	ldr	x1, [sp, #40]
  46e6ac:	add	x0, x1, x0
  46e6b0:	ldr	x0, [x0]
  46e6b4:	cmp	x0, #0x0
  46e6b8:	b.eq	46e778 <_obstack_memory_used@@Base+0x11638>  // b.none
  46e6bc:	ldr	x0, [sp, #104]
  46e6c0:	lsl	x0, x0, #3
  46e6c4:	ldr	x1, [sp, #48]
  46e6c8:	add	x0, x1, x0
  46e6cc:	ldr	x0, [x0]
  46e6d0:	add	x3, x0, #0x8
  46e6d4:	ldr	x0, [sp, #104]
  46e6d8:	lsl	x0, x0, #3
  46e6dc:	ldr	x1, [sp, #40]
  46e6e0:	add	x0, x1, x0
  46e6e4:	ldr	x0, [x0]
  46e6e8:	add	x1, x0, #0x8
  46e6ec:	add	x0, sp, #0x48
  46e6f0:	mov	x2, x1
  46e6f4:	mov	x1, x3
  46e6f8:	bl	46083c <_obstack_memory_used@@Base+0x36fc>
  46e6fc:	str	w0, [sp, #100]
  46e700:	ldr	w0, [sp, #100]
  46e704:	cmp	w0, #0x0
  46e708:	cset	w0, ne  // ne = any
  46e70c:	and	w0, w0, #0xff
  46e710:	and	x0, x0, #0xff
  46e714:	cmp	x0, #0x0
  46e718:	b.eq	46e724 <_obstack_memory_used@@Base+0x115e4>  // b.none
  46e71c:	ldr	w0, [sp, #100]
  46e720:	b	46e798 <_obstack_memory_used@@Base+0x11658>
  46e724:	ldr	x0, [sp, #104]
  46e728:	lsl	x0, x0, #3
  46e72c:	ldr	x1, [sp, #48]
  46e730:	add	x19, x1, x0
  46e734:	add	x1, sp, #0x48
  46e738:	add	x0, sp, #0x64
  46e73c:	mov	x2, x1
  46e740:	ldr	x1, [sp, #56]
  46e744:	bl	461974 <_obstack_memory_used@@Base+0x4834>
  46e748:	str	x0, [x19]
  46e74c:	ldr	x0, [sp, #88]
  46e750:	bl	404880 <free@plt>
  46e754:	ldr	w0, [sp, #100]
  46e758:	cmp	w0, #0x0
  46e75c:	cset	w0, ne  // ne = any
  46e760:	and	w0, w0, #0xff
  46e764:	and	x0, x0, #0xff
  46e768:	cmp	x0, #0x0
  46e76c:	b.eq	46e778 <_obstack_memory_used@@Base+0x11638>  // b.none
  46e770:	ldr	w0, [sp, #100]
  46e774:	b	46e798 <_obstack_memory_used@@Base+0x11658>
  46e778:	ldr	x0, [sp, #104]
  46e77c:	add	x0, x0, #0x1
  46e780:	str	x0, [sp, #104]
  46e784:	ldr	x1, [sp, #104]
  46e788:	ldr	x0, [sp, #32]
  46e78c:	cmp	x1, x0
  46e790:	b.lt	46e658 <_obstack_memory_used@@Base+0x11518>  // b.tstop
  46e794:	mov	w0, #0x0                   	// #0
  46e798:	ldr	x19, [sp, #16]
  46e79c:	ldp	x29, x30, [sp], #112
  46e7a0:	ret
  46e7a4:	stp	x29, x30, [sp, #-96]!
  46e7a8:	mov	x29, sp
  46e7ac:	str	x19, [sp, #16]
  46e7b0:	str	x0, [sp, #56]
  46e7b4:	str	x1, [sp, #48]
  46e7b8:	str	x2, [sp, #40]
  46e7bc:	str	x3, [sp, #32]
  46e7c0:	ldr	x0, [sp, #56]
  46e7c4:	ldr	x0, [x0, #152]
  46e7c8:	str	x0, [sp, #88]
  46e7cc:	str	wzr, [sp, #76]
  46e7d0:	ldr	x0, [sp, #56]
  46e7d4:	ldr	x1, [x0, #184]
  46e7d8:	ldr	x0, [sp, #40]
  46e7dc:	lsl	x0, x0, #3
  46e7e0:	add	x0, x1, x0
  46e7e4:	ldr	x0, [x0]
  46e7e8:	cmp	x0, #0x0
  46e7ec:	b.eq	46e810 <_obstack_memory_used@@Base+0x116d0>  // b.none
  46e7f0:	ldr	x0, [sp, #56]
  46e7f4:	ldr	x1, [x0, #184]
  46e7f8:	ldr	x0, [sp, #40]
  46e7fc:	lsl	x0, x0, #3
  46e800:	add	x0, x1, x0
  46e804:	ldr	x0, [x0]
  46e808:	add	x0, x0, #0x8
  46e80c:	b	46e814 <_obstack_memory_used@@Base+0x116d4>
  46e810:	mov	x0, #0x0                   	// #0
  46e814:	str	x0, [sp, #80]
  46e818:	ldr	x0, [sp, #32]
  46e81c:	ldr	x0, [x0, #8]
  46e820:	cmp	x0, #0x0
  46e824:	b.ne	46e844 <_obstack_memory_used@@Base+0x11704>  // b.any
  46e828:	ldr	x0, [sp, #48]
  46e82c:	ldr	x1, [x0]
  46e830:	ldr	x0, [sp, #40]
  46e834:	lsl	x0, x0, #3
  46e838:	add	x0, x1, x0
  46e83c:	str	xzr, [x0]
  46e840:	b	46e938 <_obstack_memory_used@@Base+0x117f8>
  46e844:	ldr	x0, [sp, #80]
  46e848:	cmp	x0, #0x0
  46e84c:	b.eq	46e8ec <_obstack_memory_used@@Base+0x117ac>  // b.none
  46e850:	ldr	x2, [sp, #80]
  46e854:	ldr	x1, [sp, #32]
  46e858:	ldr	x0, [sp, #88]
  46e85c:	bl	46e9bc <_obstack_memory_used@@Base+0x1187c>
  46e860:	str	w0, [sp, #76]
  46e864:	ldr	w0, [sp, #76]
  46e868:	cmp	w0, #0x0
  46e86c:	cset	w0, ne  // ne = any
  46e870:	and	w0, w0, #0xff
  46e874:	and	x0, x0, #0xff
  46e878:	cmp	x0, #0x0
  46e87c:	b.eq	46e888 <_obstack_memory_used@@Base+0x11748>  // b.none
  46e880:	ldr	w0, [sp, #76]
  46e884:	b	46e9b0 <_obstack_memory_used@@Base+0x11870>
  46e888:	ldr	x0, [sp, #48]
  46e88c:	ldr	x0, [x0, #40]
  46e890:	cmp	x0, #0x0
  46e894:	b.eq	46e8ec <_obstack_memory_used@@Base+0x117ac>  // b.none
  46e898:	ldr	x0, [sp, #48]
  46e89c:	add	x1, x0, #0x20
  46e8a0:	ldr	x0, [sp, #56]
  46e8a4:	ldr	x0, [x0, #216]
  46e8a8:	ldr	x5, [sp, #40]
  46e8ac:	mov	x4, x0
  46e8b0:	mov	x3, x1
  46e8b4:	ldr	x2, [sp, #80]
  46e8b8:	ldr	x1, [sp, #32]
  46e8bc:	ldr	x0, [sp, #88]
  46e8c0:	bl	46f320 <_obstack_memory_used@@Base+0x121e0>
  46e8c4:	str	w0, [sp, #76]
  46e8c8:	ldr	w0, [sp, #76]
  46e8cc:	cmp	w0, #0x0
  46e8d0:	cset	w0, ne  // ne = any
  46e8d4:	and	w0, w0, #0xff
  46e8d8:	and	x0, x0, #0xff
  46e8dc:	cmp	x0, #0x0
  46e8e0:	b.eq	46e8ec <_obstack_memory_used@@Base+0x117ac>  // b.none
  46e8e4:	ldr	w0, [sp, #76]
  46e8e8:	b	46e9b0 <_obstack_memory_used@@Base+0x11870>
  46e8ec:	ldr	x0, [sp, #48]
  46e8f0:	ldr	x1, [x0]
  46e8f4:	ldr	x0, [sp, #40]
  46e8f8:	lsl	x0, x0, #3
  46e8fc:	add	x19, x1, x0
  46e900:	add	x0, sp, #0x4c
  46e904:	ldr	x2, [sp, #32]
  46e908:	ldr	x1, [sp, #88]
  46e90c:	bl	461974 <_obstack_memory_used@@Base+0x4834>
  46e910:	str	x0, [x19]
  46e914:	ldr	w0, [sp, #76]
  46e918:	cmp	w0, #0x0
  46e91c:	cset	w0, ne  // ne = any
  46e920:	and	w0, w0, #0xff
  46e924:	and	x0, x0, #0xff
  46e928:	cmp	x0, #0x0
  46e92c:	b.eq	46e938 <_obstack_memory_used@@Base+0x117f8>  // b.none
  46e930:	ldr	w0, [sp, #76]
  46e934:	b	46e9b0 <_obstack_memory_used@@Base+0x11870>
  46e938:	ldr	x0, [sp, #80]
  46e93c:	cmp	x0, #0x0
  46e940:	b.eq	46e9ac <_obstack_memory_used@@Base+0x1186c>  // b.none
  46e944:	ldr	x0, [sp, #56]
  46e948:	ldr	x1, [x0, #184]
  46e94c:	ldr	x0, [sp, #40]
  46e950:	lsl	x0, x0, #3
  46e954:	add	x0, x1, x0
  46e958:	ldr	x0, [x0]
  46e95c:	ldrb	w0, [x0, #104]
  46e960:	and	w0, w0, #0x40
  46e964:	and	w0, w0, #0xff
  46e968:	cmp	w0, #0x0
  46e96c:	b.eq	46e9ac <_obstack_memory_used@@Base+0x1186c>  // b.none
  46e970:	ldr	x3, [sp, #80]
  46e974:	ldr	x2, [sp, #40]
  46e978:	ldr	x1, [sp, #48]
  46e97c:	ldr	x0, [sp, #56]
  46e980:	bl	46f718 <_obstack_memory_used@@Base+0x125d8>
  46e984:	str	w0, [sp, #76]
  46e988:	ldr	w0, [sp, #76]
  46e98c:	cmp	w0, #0x0
  46e990:	cset	w0, ne  // ne = any
  46e994:	and	w0, w0, #0xff
  46e998:	and	x0, x0, #0xff
  46e99c:	cmp	x0, #0x0
  46e9a0:	b.eq	46e9ac <_obstack_memory_used@@Base+0x1186c>  // b.none
  46e9a4:	ldr	w0, [sp, #76]
  46e9a8:	b	46e9b0 <_obstack_memory_used@@Base+0x11870>
  46e9ac:	mov	w0, #0x0                   	// #0
  46e9b0:	ldr	x19, [sp, #16]
  46e9b4:	ldp	x29, x30, [sp], #96
  46e9b8:	ret
  46e9bc:	stp	x29, x30, [sp, #-80]!
  46e9c0:	mov	x29, sp
  46e9c4:	str	x0, [sp, #40]
  46e9c8:	str	x1, [sp, #32]
  46e9cc:	str	x2, [sp, #24]
  46e9d0:	str	wzr, [sp, #60]
  46e9d4:	add	x0, sp, #0x3c
  46e9d8:	ldr	x2, [sp, #32]
  46e9dc:	ldr	x1, [sp, #40]
  46e9e0:	bl	461974 <_obstack_memory_used@@Base+0x4834>
  46e9e4:	str	x0, [sp, #64]
  46e9e8:	ldr	w0, [sp, #60]
  46e9ec:	cmp	w0, #0x0
  46e9f0:	cset	w0, ne  // ne = any
  46e9f4:	and	w0, w0, #0xff
  46e9f8:	and	x0, x0, #0xff
  46e9fc:	cmp	x0, #0x0
  46ea00:	b.eq	46ea0c <_obstack_memory_used@@Base+0x118cc>  // b.none
  46ea04:	ldr	w0, [sp, #60]
  46ea08:	b	46eb14 <_obstack_memory_used@@Base+0x119d4>
  46ea0c:	ldr	x0, [sp, #64]
  46ea10:	ldr	x0, [x0, #56]
  46ea14:	cmp	x0, #0x0
  46ea18:	b.ne	46eafc <_obstack_memory_used@@Base+0x119bc>  // b.any
  46ea1c:	ldr	x0, [sp, #64]
  46ea20:	add	x2, x0, #0x38
  46ea24:	ldr	x0, [sp, #32]
  46ea28:	ldr	x0, [x0, #8]
  46ea2c:	mov	x1, x0
  46ea30:	mov	x0, x2
  46ea34:	bl	4600bc <_obstack_memory_used@@Base+0x2f7c>
  46ea38:	str	w0, [sp, #60]
  46ea3c:	ldr	w0, [sp, #60]
  46ea40:	cmp	w0, #0x0
  46ea44:	cset	w0, ne  // ne = any
  46ea48:	and	w0, w0, #0xff
  46ea4c:	and	x0, x0, #0xff
  46ea50:	cmp	x0, #0x0
  46ea54:	b.eq	46ea60 <_obstack_memory_used@@Base+0x11920>  // b.none
  46ea58:	mov	w0, #0xc                   	// #12
  46ea5c:	b	46eb14 <_obstack_memory_used@@Base+0x119d4>
  46ea60:	str	xzr, [sp, #72]
  46ea64:	b	46eae8 <_obstack_memory_used@@Base+0x119a8>
  46ea68:	ldr	x0, [sp, #64]
  46ea6c:	add	x3, x0, #0x38
  46ea70:	ldr	x0, [sp, #40]
  46ea74:	ldr	x1, [x0, #56]
  46ea78:	ldr	x0, [sp, #32]
  46ea7c:	ldr	x2, [x0, #16]
  46ea80:	ldr	x0, [sp, #72]
  46ea84:	lsl	x0, x0, #3
  46ea88:	add	x0, x2, x0
  46ea8c:	ldr	x0, [x0]
  46ea90:	mov	x2, x0
  46ea94:	mov	x0, x2
  46ea98:	lsl	x0, x0, #1
  46ea9c:	add	x0, x0, x2
  46eaa0:	lsl	x0, x0, #3
  46eaa4:	add	x0, x1, x0
  46eaa8:	mov	x1, x0
  46eaac:	mov	x0, x3
  46eab0:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  46eab4:	str	w0, [sp, #60]
  46eab8:	ldr	w0, [sp, #60]
  46eabc:	cmp	w0, #0x0
  46eac0:	cset	w0, ne  // ne = any
  46eac4:	and	w0, w0, #0xff
  46eac8:	and	x0, x0, #0xff
  46eacc:	cmp	x0, #0x0
  46ead0:	b.eq	46eadc <_obstack_memory_used@@Base+0x1199c>  // b.none
  46ead4:	mov	w0, #0xc                   	// #12
  46ead8:	b	46eb14 <_obstack_memory_used@@Base+0x119d4>
  46eadc:	ldr	x0, [sp, #72]
  46eae0:	add	x0, x0, #0x1
  46eae4:	str	x0, [sp, #72]
  46eae8:	ldr	x0, [sp, #32]
  46eaec:	ldr	x0, [x0, #8]
  46eaf0:	ldr	x1, [sp, #72]
  46eaf4:	cmp	x1, x0
  46eaf8:	b.lt	46ea68 <_obstack_memory_used@@Base+0x11928>  // b.tstop
  46eafc:	ldr	x0, [sp, #64]
  46eb00:	add	x0, x0, #0x38
  46eb04:	mov	x2, x0
  46eb08:	ldr	x1, [sp, #24]
  46eb0c:	ldr	x0, [sp, #32]
  46eb10:	bl	4603a8 <_obstack_memory_used@@Base+0x3268>
  46eb14:	ldp	x29, x30, [sp], #80
  46eb18:	ret
  46eb1c:	stp	x29, x30, [sp, #-144]!
  46eb20:	mov	x29, sp
  46eb24:	str	x0, [sp, #40]
  46eb28:	str	x1, [sp, #32]
  46eb2c:	str	x2, [sp, #24]
  46eb30:	str	x3, [sp, #16]
  46eb34:	ldr	x0, [sp, #40]
  46eb38:	ldr	x2, [x0, #56]
  46eb3c:	ldr	x1, [sp, #32]
  46eb40:	mov	x0, x1
  46eb44:	lsl	x0, x0, #1
  46eb48:	add	x0, x0, x1
  46eb4c:	lsl	x0, x0, #3
  46eb50:	add	x0, x2, x0
  46eb54:	str	x0, [sp, #128]
  46eb58:	add	x0, sp, #0x38
  46eb5c:	mov	x2, #0x18                  	// #24
  46eb60:	mov	w1, #0x0                   	// #0
  46eb64:	bl	4044d0 <memset@plt>
  46eb68:	str	xzr, [sp, #136]
  46eb6c:	b	46ed18 <_obstack_memory_used@@Base+0x11bd8>
  46eb70:	ldr	x0, [sp, #128]
  46eb74:	ldr	x1, [x0, #16]
  46eb78:	ldr	x0, [sp, #136]
  46eb7c:	lsl	x0, x0, #3
  46eb80:	add	x0, x1, x0
  46eb84:	ldr	x0, [x0]
  46eb88:	str	x0, [sp, #104]
  46eb8c:	ldr	x1, [sp, #104]
  46eb90:	ldr	x0, [sp, #32]
  46eb94:	cmp	x1, x0
  46eb98:	b.eq	46ed08 <_obstack_memory_used@@Base+0x11bc8>  // b.none
  46eb9c:	ldr	x0, [sp, #40]
  46eba0:	ldr	x1, [x0]
  46eba4:	ldr	x0, [sp, #104]
  46eba8:	lsl	x0, x0, #4
  46ebac:	add	x0, x1, x0
  46ebb0:	ldrb	w0, [x0, #8]
  46ebb4:	and	w0, w0, #0x8
  46ebb8:	cmp	w0, #0x0
  46ebbc:	b.eq	46ed0c <_obstack_memory_used@@Base+0x11bcc>  // b.none
  46ebc0:	ldr	x0, [sp, #40]
  46ebc4:	ldr	x2, [x0, #40]
  46ebc8:	ldr	x1, [sp, #104]
  46ebcc:	mov	x0, x1
  46ebd0:	lsl	x0, x0, #1
  46ebd4:	add	x0, x0, x1
  46ebd8:	lsl	x0, x0, #3
  46ebdc:	add	x0, x2, x0
  46ebe0:	ldr	x0, [x0, #16]
  46ebe4:	ldr	x0, [x0]
  46ebe8:	str	x0, [sp, #96]
  46ebec:	ldr	x0, [sp, #40]
  46ebf0:	ldr	x2, [x0, #40]
  46ebf4:	ldr	x1, [sp, #104]
  46ebf8:	mov	x0, x1
  46ebfc:	lsl	x0, x0, #1
  46ec00:	add	x0, x0, x1
  46ec04:	lsl	x0, x0, #3
  46ec08:	add	x0, x2, x0
  46ec0c:	ldr	x0, [x0, #8]
  46ec10:	cmp	x0, #0x1
  46ec14:	b.le	46ec44 <_obstack_memory_used@@Base+0x11b04>
  46ec18:	ldr	x0, [sp, #40]
  46ec1c:	ldr	x2, [x0, #40]
  46ec20:	ldr	x1, [sp, #104]
  46ec24:	mov	x0, x1
  46ec28:	lsl	x0, x0, #1
  46ec2c:	add	x0, x0, x1
  46ec30:	lsl	x0, x0, #3
  46ec34:	add	x0, x2, x0
  46ec38:	ldr	x0, [x0, #16]
  46ec3c:	ldr	x0, [x0, #8]
  46ec40:	b	46ec48 <_obstack_memory_used@@Base+0x11b08>
  46ec44:	mov	x0, #0xffffffffffffffff    	// #-1
  46ec48:	str	x0, [sp, #88]
  46ec4c:	ldr	x1, [sp, #96]
  46ec50:	ldr	x0, [sp, #128]
  46ec54:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46ec58:	cmp	x0, #0x0
  46ec5c:	b.ne	46ec74 <_obstack_memory_used@@Base+0x11b34>  // b.any
  46ec60:	ldr	x1, [sp, #96]
  46ec64:	ldr	x0, [sp, #24]
  46ec68:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46ec6c:	cmp	x0, #0x0
  46ec70:	b.ne	46eca8 <_obstack_memory_used@@Base+0x11b68>  // b.any
  46ec74:	ldr	x0, [sp, #88]
  46ec78:	cmp	x0, #0x0
  46ec7c:	b.le	46ed0c <_obstack_memory_used@@Base+0x11bcc>
  46ec80:	ldr	x1, [sp, #88]
  46ec84:	ldr	x0, [sp, #128]
  46ec88:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46ec8c:	cmp	x0, #0x0
  46ec90:	b.ne	46ed0c <_obstack_memory_used@@Base+0x11bcc>  // b.any
  46ec94:	ldr	x1, [sp, #88]
  46ec98:	ldr	x0, [sp, #24]
  46ec9c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46eca0:	cmp	x0, #0x0
  46eca4:	b.eq	46ed0c <_obstack_memory_used@@Base+0x11bcc>  // b.none
  46eca8:	ldr	x0, [sp, #40]
  46ecac:	ldr	x2, [x0, #56]
  46ecb0:	ldr	x1, [sp, #104]
  46ecb4:	mov	x0, x1
  46ecb8:	lsl	x0, x0, #1
  46ecbc:	add	x0, x0, x1
  46ecc0:	lsl	x0, x0, #3
  46ecc4:	add	x1, x2, x0
  46ecc8:	add	x0, sp, #0x38
  46eccc:	mov	x2, x1
  46ecd0:	ldr	x1, [sp, #16]
  46ecd4:	bl	4603a8 <_obstack_memory_used@@Base+0x3268>
  46ecd8:	str	w0, [sp, #84]
  46ecdc:	ldr	w0, [sp, #84]
  46ece0:	cmp	w0, #0x0
  46ece4:	cset	w0, ne  // ne = any
  46ece8:	and	w0, w0, #0xff
  46ecec:	and	x0, x0, #0xff
  46ecf0:	cmp	x0, #0x0
  46ecf4:	b.eq	46ed0c <_obstack_memory_used@@Base+0x11bcc>  // b.none
  46ecf8:	ldr	x0, [sp, #72]
  46ecfc:	bl	404880 <free@plt>
  46ed00:	ldr	w0, [sp, #84]
  46ed04:	b	46edb0 <_obstack_memory_used@@Base+0x11c70>
  46ed08:	nop
  46ed0c:	ldr	x0, [sp, #136]
  46ed10:	add	x0, x0, #0x1
  46ed14:	str	x0, [sp, #136]
  46ed18:	ldr	x0, [sp, #128]
  46ed1c:	ldr	x0, [x0, #8]
  46ed20:	ldr	x1, [sp, #136]
  46ed24:	cmp	x1, x0
  46ed28:	b.lt	46eb70 <_obstack_memory_used@@Base+0x11a30>  // b.tstop
  46ed2c:	str	xzr, [sp, #136]
  46ed30:	b	46ed90 <_obstack_memory_used@@Base+0x11c50>
  46ed34:	ldr	x0, [sp, #128]
  46ed38:	ldr	x1, [x0, #16]
  46ed3c:	ldr	x0, [sp, #136]
  46ed40:	lsl	x0, x0, #3
  46ed44:	add	x0, x1, x0
  46ed48:	ldr	x0, [x0]
  46ed4c:	str	x0, [sp, #120]
  46ed50:	add	x0, sp, #0x38
  46ed54:	ldr	x1, [sp, #120]
  46ed58:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46ed5c:	cmp	x0, #0x0
  46ed60:	b.ne	46ed84 <_obstack_memory_used@@Base+0x11c44>  // b.any
  46ed64:	ldr	x1, [sp, #120]
  46ed68:	ldr	x0, [sp, #24]
  46ed6c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46ed70:	sub	x0, x0, #0x1
  46ed74:	str	x0, [sp, #112]
  46ed78:	ldr	x1, [sp, #112]
  46ed7c:	ldr	x0, [sp, #24]
  46ed80:	bl	46148c <_obstack_memory_used@@Base+0x434c>
  46ed84:	ldr	x0, [sp, #136]
  46ed88:	add	x0, x0, #0x1
  46ed8c:	str	x0, [sp, #136]
  46ed90:	ldr	x0, [sp, #128]
  46ed94:	ldr	x0, [x0, #8]
  46ed98:	ldr	x1, [sp, #136]
  46ed9c:	cmp	x1, x0
  46eda0:	b.lt	46ed34 <_obstack_memory_used@@Base+0x11bf4>  // b.tstop
  46eda4:	ldr	x0, [sp, #72]
  46eda8:	bl	404880 <free@plt>
  46edac:	mov	w0, #0x0                   	// #0
  46edb0:	ldp	x29, x30, [sp], #144
  46edb4:	ret
  46edb8:	stp	x29, x30, [sp, #-128]!
  46edbc:	mov	x29, sp
  46edc0:	str	x0, [sp, #56]
  46edc4:	str	x1, [sp, #48]
  46edc8:	str	x2, [sp, #40]
  46edcc:	str	x3, [sp, #32]
  46edd0:	str	x4, [sp, #24]
  46edd4:	str	x5, [sp, #16]
  46edd8:	ldr	x0, [sp, #56]
  46eddc:	ldr	x0, [x0, #152]
  46ede0:	str	x0, [sp, #112]
  46ede4:	ldr	x1, [sp, #32]
  46ede8:	ldr	x0, [sp, #56]
  46edec:	bl	474800 <_obstack_memory_used@@Base+0x176c0>
  46edf0:	str	x0, [sp, #104]
  46edf4:	ldr	x1, [sp, #16]
  46edf8:	ldr	x0, [sp, #56]
  46edfc:	bl	474800 <_obstack_memory_used@@Base+0x176c0>
  46ee00:	str	x0, [sp, #96]
  46ee04:	str	xzr, [sp, #120]
  46ee08:	b	46ef08 <_obstack_memory_used@@Base+0x11dc8>
  46ee0c:	ldr	x0, [sp, #56]
  46ee10:	ldr	x1, [x0, #216]
  46ee14:	ldr	x0, [sp, #48]
  46ee18:	ldr	x2, [x0, #16]
  46ee1c:	ldr	x0, [sp, #120]
  46ee20:	lsl	x0, x0, #3
  46ee24:	add	x0, x2, x0
  46ee28:	ldr	x0, [x0]
  46ee2c:	mov	x2, x0
  46ee30:	mov	x0, x2
  46ee34:	lsl	x0, x0, #2
  46ee38:	add	x0, x0, x2
  46ee3c:	lsl	x0, x0, #3
  46ee40:	add	x0, x1, x0
  46ee44:	str	x0, [sp, #88]
  46ee48:	ldr	x0, [sp, #112]
  46ee4c:	ldr	x1, [x0]
  46ee50:	ldr	x0, [sp, #88]
  46ee54:	ldr	x0, [x0]
  46ee58:	lsl	x0, x0, #4
  46ee5c:	add	x0, x1, x0
  46ee60:	ldr	x0, [x0]
  46ee64:	str	x0, [sp, #80]
  46ee68:	ldr	x0, [sp, #48]
  46ee6c:	ldr	x1, [x0, #16]
  46ee70:	ldr	x0, [sp, #120]
  46ee74:	lsl	x0, x0, #3
  46ee78:	add	x0, x1, x0
  46ee7c:	ldr	x0, [x0]
  46ee80:	ldr	x5, [sp, #104]
  46ee84:	ldr	x4, [sp, #32]
  46ee88:	ldr	x3, [sp, #40]
  46ee8c:	ldr	x2, [sp, #80]
  46ee90:	mov	x1, x0
  46ee94:	ldr	x0, [sp, #56]
  46ee98:	bl	46f228 <_obstack_memory_used@@Base+0x120e8>
  46ee9c:	sxtw	x0, w0
  46eea0:	str	x0, [sp, #72]
  46eea4:	ldr	x0, [sp, #48]
  46eea8:	ldr	x1, [x0, #16]
  46eeac:	ldr	x0, [sp, #120]
  46eeb0:	lsl	x0, x0, #3
  46eeb4:	add	x0, x1, x0
  46eeb8:	ldr	x0, [x0]
  46eebc:	ldr	x5, [sp, #96]
  46eec0:	ldr	x4, [sp, #16]
  46eec4:	ldr	x3, [sp, #24]
  46eec8:	ldr	x2, [sp, #80]
  46eecc:	mov	x1, x0
  46eed0:	ldr	x0, [sp, #56]
  46eed4:	bl	46f228 <_obstack_memory_used@@Base+0x120e8>
  46eed8:	sxtw	x0, w0
  46eedc:	str	x0, [sp, #64]
  46eee0:	ldr	x1, [sp, #64]
  46eee4:	ldr	x0, [sp, #72]
  46eee8:	cmp	x1, x0
  46eeec:	b.ne	46ef00 <_obstack_memory_used@@Base+0x11dc0>  // b.any
  46eef0:	ldr	x0, [sp, #120]
  46eef4:	add	x0, x0, #0x1
  46eef8:	str	x0, [sp, #120]
  46eefc:	b	46ef08 <_obstack_memory_used@@Base+0x11dc8>
  46ef00:	mov	w0, #0x1                   	// #1
  46ef04:	b	46ef20 <_obstack_memory_used@@Base+0x11de0>
  46ef08:	ldr	x0, [sp, #48]
  46ef0c:	ldr	x0, [x0, #8]
  46ef10:	ldr	x1, [sp, #120]
  46ef14:	cmp	x1, x0
  46ef18:	b.lt	46ee0c <_obstack_memory_used@@Base+0x11ccc>  // b.tstop
  46ef1c:	mov	w0, #0x0                   	// #0
  46ef20:	ldp	x29, x30, [sp], #128
  46ef24:	ret
  46ef28:	stp	x29, x30, [sp, #-128]!
  46ef2c:	mov	x29, sp
  46ef30:	str	x0, [sp, #56]
  46ef34:	str	w1, [sp, #52]
  46ef38:	str	x2, [sp, #40]
  46ef3c:	str	x3, [sp, #32]
  46ef40:	str	x4, [sp, #24]
  46ef44:	ldr	x0, [sp, #56]
  46ef48:	ldr	x0, [x0, #152]
  46ef4c:	str	x0, [sp, #104]
  46ef50:	ldr	x0, [sp, #104]
  46ef54:	ldr	x2, [x0, #48]
  46ef58:	ldr	x1, [sp, #32]
  46ef5c:	mov	x0, x1
  46ef60:	lsl	x0, x0, #1
  46ef64:	add	x0, x0, x1
  46ef68:	lsl	x0, x0, #3
  46ef6c:	add	x0, x2, x0
  46ef70:	str	x0, [sp, #96]
  46ef74:	str	xzr, [sp, #120]
  46ef78:	b	46f200 <_obstack_memory_used@@Base+0x120c0>
  46ef7c:	ldr	x0, [sp, #96]
  46ef80:	ldr	x1, [x0, #16]
  46ef84:	ldr	x0, [sp, #120]
  46ef88:	lsl	x0, x0, #3
  46ef8c:	add	x0, x1, x0
  46ef90:	ldr	x0, [x0]
  46ef94:	str	x0, [sp, #88]
  46ef98:	ldr	x0, [sp, #104]
  46ef9c:	ldr	x1, [x0]
  46efa0:	ldr	x0, [sp, #88]
  46efa4:	lsl	x0, x0, #4
  46efa8:	add	x0, x1, x0
  46efac:	ldrb	w0, [x0, #8]
  46efb0:	cmp	w0, #0x9
  46efb4:	b.eq	46f19c <_obstack_memory_used@@Base+0x1205c>  // b.none
  46efb8:	cmp	w0, #0x9
  46efbc:	b.gt	46f1d8 <_obstack_memory_used@@Base+0x12098>
  46efc0:	cmp	w0, #0x4
  46efc4:	b.eq	46efd4 <_obstack_memory_used@@Base+0x11e94>  // b.none
  46efc8:	cmp	w0, #0x8
  46efcc:	b.eq	46f160 <_obstack_memory_used@@Base+0x12020>  // b.none
  46efd0:	b	46f1d8 <_obstack_memory_used@@Base+0x12098>
  46efd4:	ldr	x0, [sp, #24]
  46efd8:	cmn	x0, #0x1
  46efdc:	b.eq	46f1e0 <_obstack_memory_used@@Base+0x120a0>  // b.none
  46efe0:	ldr	x0, [sp, #56]
  46efe4:	ldr	x2, [x0, #216]
  46efe8:	ldr	x1, [sp, #24]
  46efec:	mov	x0, x1
  46eff0:	lsl	x0, x0, #2
  46eff4:	add	x0, x0, x1
  46eff8:	lsl	x0, x0, #3
  46effc:	add	x0, x2, x0
  46f000:	str	x0, [sp, #112]
  46f004:	ldr	x0, [sp, #112]
  46f008:	ldr	x0, [x0]
  46f00c:	ldr	x1, [sp, #88]
  46f010:	cmp	x1, x0
  46f014:	b.ne	46f138 <_obstack_memory_used@@Base+0x11ff8>  // b.any
  46f018:	ldr	x0, [sp, #40]
  46f01c:	cmp	x0, #0x3f
  46f020:	b.gt	46f044 <_obstack_memory_used@@Base+0x11f04>
  46f024:	ldr	x0, [sp, #112]
  46f028:	ldrh	w0, [x0, #34]
  46f02c:	and	x0, x0, #0xffff
  46f030:	ldr	x1, [sp, #40]
  46f034:	lsr	x0, x0, x1
  46f038:	and	x0, x0, #0x1
  46f03c:	cmp	x0, #0x0
  46f040:	b.eq	46f140 <_obstack_memory_used@@Base+0x12000>  // b.none
  46f044:	ldr	x0, [sp, #104]
  46f048:	ldr	x2, [x0, #40]
  46f04c:	ldr	x1, [sp, #88]
  46f050:	mov	x0, x1
  46f054:	lsl	x0, x0, #1
  46f058:	add	x0, x0, x1
  46f05c:	lsl	x0, x0, #3
  46f060:	add	x0, x2, x0
  46f064:	ldr	x0, [x0, #16]
  46f068:	ldr	x0, [x0]
  46f06c:	str	x0, [sp, #80]
  46f070:	ldr	x1, [sp, #80]
  46f074:	ldr	x0, [sp, #32]
  46f078:	cmp	x1, x0
  46f07c:	b.ne	46f0a0 <_obstack_memory_used@@Base+0x11f60>  // b.any
  46f080:	ldr	w0, [sp, #52]
  46f084:	and	w0, w0, #0x1
  46f088:	cmp	w0, #0x0
  46f08c:	b.eq	46f098 <_obstack_memory_used@@Base+0x11f58>  // b.none
  46f090:	mov	w0, #0xffffffff            	// #-1
  46f094:	b	46f220 <_obstack_memory_used@@Base+0x120e0>
  46f098:	mov	w0, #0x0                   	// #0
  46f09c:	b	46f220 <_obstack_memory_used@@Base+0x120e0>
  46f0a0:	ldr	x4, [sp, #24]
  46f0a4:	ldr	x3, [sp, #80]
  46f0a8:	ldr	x2, [sp, #40]
  46f0ac:	ldr	w1, [sp, #52]
  46f0b0:	ldr	x0, [sp, #56]
  46f0b4:	bl	46ef28 <_obstack_memory_used@@Base+0x11de8>
  46f0b8:	str	w0, [sp, #76]
  46f0bc:	ldr	w0, [sp, #76]
  46f0c0:	cmn	w0, #0x1
  46f0c4:	b.ne	46f0d0 <_obstack_memory_used@@Base+0x11f90>  // b.any
  46f0c8:	mov	w0, #0xffffffff            	// #-1
  46f0cc:	b	46f220 <_obstack_memory_used@@Base+0x120e0>
  46f0d0:	ldr	w0, [sp, #76]
  46f0d4:	cmp	w0, #0x0
  46f0d8:	b.ne	46f0f4 <_obstack_memory_used@@Base+0x11fb4>  // b.any
  46f0dc:	ldr	w0, [sp, #52]
  46f0e0:	and	w0, w0, #0x2
  46f0e4:	cmp	w0, #0x0
  46f0e8:	b.eq	46f0f4 <_obstack_memory_used@@Base+0x11fb4>  // b.none
  46f0ec:	mov	w0, #0x0                   	// #0
  46f0f0:	b	46f220 <_obstack_memory_used@@Base+0x120e0>
  46f0f4:	ldr	x0, [sp, #40]
  46f0f8:	cmp	x0, #0x3f
  46f0fc:	b.gt	46f144 <_obstack_memory_used@@Base+0x12004>
  46f100:	ldr	x0, [sp, #112]
  46f104:	ldrh	w1, [x0, #34]
  46f108:	ldr	x0, [sp, #40]
  46f10c:	mov	w2, w0
  46f110:	mov	x0, #0x1                   	// #1
  46f114:	lsl	x0, x0, x2
  46f118:	and	w0, w0, #0xffff
  46f11c:	mvn	w0, w0
  46f120:	and	w0, w0, #0xffff
  46f124:	and	w0, w1, w0
  46f128:	and	w1, w0, #0xffff
  46f12c:	ldr	x0, [sp, #112]
  46f130:	strh	w1, [x0, #34]
  46f134:	b	46f144 <_obstack_memory_used@@Base+0x12004>
  46f138:	nop
  46f13c:	b	46f144 <_obstack_memory_used@@Base+0x12004>
  46f140:	nop
  46f144:	ldr	x0, [sp, #112]
  46f148:	add	x1, x0, #0x28
  46f14c:	str	x1, [sp, #112]
  46f150:	ldrb	w0, [x0, #32]
  46f154:	cmp	w0, #0x0
  46f158:	b.ne	46f004 <_obstack_memory_used@@Base+0x11ec4>  // b.any
  46f15c:	b	46f1e0 <_obstack_memory_used@@Base+0x120a0>
  46f160:	ldr	w0, [sp, #52]
  46f164:	and	w0, w0, #0x1
  46f168:	cmp	w0, #0x0
  46f16c:	b.eq	46f1e8 <_obstack_memory_used@@Base+0x120a8>  // b.none
  46f170:	ldr	x0, [sp, #104]
  46f174:	ldr	x1, [x0]
  46f178:	ldr	x0, [sp, #88]
  46f17c:	lsl	x0, x0, #4
  46f180:	add	x0, x1, x0
  46f184:	ldr	x0, [x0]
  46f188:	ldr	x1, [sp, #40]
  46f18c:	cmp	x1, x0
  46f190:	b.ne	46f1e8 <_obstack_memory_used@@Base+0x120a8>  // b.any
  46f194:	mov	w0, #0xffffffff            	// #-1
  46f198:	b	46f220 <_obstack_memory_used@@Base+0x120e0>
  46f19c:	ldr	w0, [sp, #52]
  46f1a0:	and	w0, w0, #0x2
  46f1a4:	cmp	w0, #0x0
  46f1a8:	b.eq	46f1f0 <_obstack_memory_used@@Base+0x120b0>  // b.none
  46f1ac:	ldr	x0, [sp, #104]
  46f1b0:	ldr	x1, [x0]
  46f1b4:	ldr	x0, [sp, #88]
  46f1b8:	lsl	x0, x0, #4
  46f1bc:	add	x0, x1, x0
  46f1c0:	ldr	x0, [x0]
  46f1c4:	ldr	x1, [sp, #40]
  46f1c8:	cmp	x1, x0
  46f1cc:	b.ne	46f1f0 <_obstack_memory_used@@Base+0x120b0>  // b.any
  46f1d0:	mov	w0, #0x0                   	// #0
  46f1d4:	b	46f220 <_obstack_memory_used@@Base+0x120e0>
  46f1d8:	nop
  46f1dc:	b	46f1f4 <_obstack_memory_used@@Base+0x120b4>
  46f1e0:	nop
  46f1e4:	b	46f1f4 <_obstack_memory_used@@Base+0x120b4>
  46f1e8:	nop
  46f1ec:	b	46f1f4 <_obstack_memory_used@@Base+0x120b4>
  46f1f0:	nop
  46f1f4:	ldr	x0, [sp, #120]
  46f1f8:	add	x0, x0, #0x1
  46f1fc:	str	x0, [sp, #120]
  46f200:	ldr	x0, [sp, #96]
  46f204:	ldr	x0, [x0, #8]
  46f208:	ldr	x1, [sp, #120]
  46f20c:	cmp	x1, x0
  46f210:	b.lt	46ef7c <_obstack_memory_used@@Base+0x11e3c>  // b.tstop
  46f214:	ldr	w0, [sp, #52]
  46f218:	asr	w0, w0, #1
  46f21c:	and	w0, w0, #0x1
  46f220:	ldp	x29, x30, [sp], #128
  46f224:	ret
  46f228:	stp	x29, x30, [sp, #-80]!
  46f22c:	mov	x29, sp
  46f230:	str	x0, [sp, #56]
  46f234:	str	x1, [sp, #48]
  46f238:	str	x2, [sp, #40]
  46f23c:	str	x3, [sp, #32]
  46f240:	str	x4, [sp, #24]
  46f244:	str	x5, [sp, #16]
  46f248:	ldr	x0, [sp, #56]
  46f24c:	ldr	x2, [x0, #216]
  46f250:	ldr	x1, [sp, #48]
  46f254:	mov	x0, x1
  46f258:	lsl	x0, x0, #2
  46f25c:	add	x0, x0, x1
  46f260:	lsl	x0, x0, #3
  46f264:	add	x0, x2, x0
  46f268:	str	x0, [sp, #72]
  46f26c:	ldr	x0, [sp, #72]
  46f270:	ldr	x0, [x0, #16]
  46f274:	ldr	x1, [sp, #24]
  46f278:	cmp	x1, x0
  46f27c:	b.ge	46f288 <_obstack_memory_used@@Base+0x12148>  // b.tcont
  46f280:	mov	w0, #0xffffffff            	// #-1
  46f284:	b	46f318 <_obstack_memory_used@@Base+0x121d8>
  46f288:	ldr	x0, [sp, #72]
  46f28c:	ldr	x0, [x0, #24]
  46f290:	ldr	x1, [sp, #24]
  46f294:	cmp	x1, x0
  46f298:	b.le	46f2a4 <_obstack_memory_used@@Base+0x12164>
  46f29c:	mov	w0, #0x1                   	// #1
  46f2a0:	b	46f318 <_obstack_memory_used@@Base+0x121d8>
  46f2a4:	ldr	x0, [sp, #72]
  46f2a8:	ldr	x0, [x0, #16]
  46f2ac:	ldr	x1, [sp, #24]
  46f2b0:	cmp	x1, x0
  46f2b4:	cset	w0, eq  // eq = none
  46f2b8:	and	w0, w0, #0xff
  46f2bc:	str	w0, [sp, #68]
  46f2c0:	ldr	x0, [sp, #72]
  46f2c4:	ldr	x0, [x0, #24]
  46f2c8:	ldr	x1, [sp, #24]
  46f2cc:	cmp	x1, x0
  46f2d0:	b.ne	46f2dc <_obstack_memory_used@@Base+0x1219c>  // b.any
  46f2d4:	mov	w0, #0x2                   	// #2
  46f2d8:	b	46f2e0 <_obstack_memory_used@@Base+0x121a0>
  46f2dc:	mov	w0, #0x0                   	// #0
  46f2e0:	ldr	w1, [sp, #68]
  46f2e4:	orr	w0, w1, w0
  46f2e8:	str	w0, [sp, #68]
  46f2ec:	ldr	w0, [sp, #68]
  46f2f0:	cmp	w0, #0x0
  46f2f4:	b.ne	46f300 <_obstack_memory_used@@Base+0x121c0>  // b.any
  46f2f8:	mov	w0, #0x0                   	// #0
  46f2fc:	b	46f318 <_obstack_memory_used@@Base+0x121d8>
  46f300:	ldr	x4, [sp, #16]
  46f304:	ldr	x3, [sp, #32]
  46f308:	ldr	x2, [sp, #40]
  46f30c:	ldr	w1, [sp, #68]
  46f310:	ldr	x0, [sp, #56]
  46f314:	bl	46ef28 <_obstack_memory_used@@Base+0x11de8>
  46f318:	ldp	x29, x30, [sp], #80
  46f31c:	ret
  46f320:	stp	x29, x30, [sp, #-160]!
  46f324:	mov	x29, sp
  46f328:	str	x0, [sp, #56]
  46f32c:	str	x1, [sp, #48]
  46f330:	str	x2, [sp, #40]
  46f334:	str	x3, [sp, #32]
  46f338:	str	x4, [sp, #24]
  46f33c:	str	x5, [sp, #16]
  46f340:	str	xzr, [sp, #144]
  46f344:	b	46f6f8 <_obstack_memory_used@@Base+0x125b8>
  46f348:	ldr	x0, [sp, #32]
  46f34c:	ldr	x1, [x0, #16]
  46f350:	ldr	x0, [sp, #144]
  46f354:	lsl	x0, x0, #3
  46f358:	add	x0, x1, x0
  46f35c:	ldr	x0, [x0]
  46f360:	mov	x1, x0
  46f364:	mov	x0, x1
  46f368:	lsl	x0, x0, #2
  46f36c:	add	x0, x0, x1
  46f370:	lsl	x0, x0, #3
  46f374:	mov	x1, x0
  46f378:	ldr	x0, [sp, #24]
  46f37c:	add	x0, x0, x1
  46f380:	str	x0, [sp, #120]
  46f384:	ldr	x0, [sp, #120]
  46f388:	ldr	x0, [x0, #16]
  46f38c:	ldr	x1, [sp, #16]
  46f390:	cmp	x1, x0
  46f394:	b.le	46f6e8 <_obstack_memory_used@@Base+0x125a8>
  46f398:	ldr	x0, [sp, #120]
  46f39c:	ldr	x0, [x0, #8]
  46f3a0:	ldr	x1, [sp, #16]
  46f3a4:	cmp	x1, x0
  46f3a8:	b.gt	46f6e8 <_obstack_memory_used@@Base+0x125a8>
  46f3ac:	ldr	x0, [sp, #56]
  46f3b0:	ldr	x1, [x0]
  46f3b4:	ldr	x0, [sp, #120]
  46f3b8:	ldr	x0, [x0]
  46f3bc:	lsl	x0, x0, #4
  46f3c0:	add	x0, x1, x0
  46f3c4:	ldr	x0, [x0]
  46f3c8:	str	x0, [sp, #112]
  46f3cc:	ldr	x0, [sp, #120]
  46f3d0:	ldr	x0, [x0, #24]
  46f3d4:	ldr	x1, [sp, #16]
  46f3d8:	cmp	x1, x0
  46f3dc:	b.ne	46f608 <_obstack_memory_used@@Base+0x124c8>  // b.any
  46f3e0:	mov	x0, #0xffffffffffffffff    	// #-1
  46f3e4:	str	x0, [sp, #136]
  46f3e8:	mov	x0, #0xffffffffffffffff    	// #-1
  46f3ec:	str	x0, [sp, #128]
  46f3f0:	str	xzr, [sp, #152]
  46f3f4:	b	46f4b0 <_obstack_memory_used@@Base+0x12370>
  46f3f8:	ldr	x0, [sp, #48]
  46f3fc:	ldr	x1, [x0, #16]
  46f400:	ldr	x0, [sp, #152]
  46f404:	lsl	x0, x0, #3
  46f408:	add	x0, x1, x0
  46f40c:	ldr	x0, [x0]
  46f410:	str	x0, [sp, #80]
  46f414:	ldr	x0, [sp, #56]
  46f418:	ldr	x1, [x0]
  46f41c:	ldr	x0, [sp, #80]
  46f420:	lsl	x0, x0, #4
  46f424:	add	x0, x1, x0
  46f428:	ldrb	w0, [x0, #8]
  46f42c:	str	w0, [sp, #76]
  46f430:	ldr	w0, [sp, #76]
  46f434:	cmp	w0, #0x8
  46f438:	b.ne	46f46c <_obstack_memory_used@@Base+0x1232c>  // b.any
  46f43c:	ldr	x0, [sp, #56]
  46f440:	ldr	x1, [x0]
  46f444:	ldr	x0, [sp, #80]
  46f448:	lsl	x0, x0, #4
  46f44c:	add	x0, x1, x0
  46f450:	ldr	x0, [x0]
  46f454:	ldr	x1, [sp, #112]
  46f458:	cmp	x1, x0
  46f45c:	b.ne	46f46c <_obstack_memory_used@@Base+0x1232c>  // b.any
  46f460:	ldr	x0, [sp, #80]
  46f464:	str	x0, [sp, #136]
  46f468:	b	46f4a4 <_obstack_memory_used@@Base+0x12364>
  46f46c:	ldr	w0, [sp, #76]
  46f470:	cmp	w0, #0x9
  46f474:	b.ne	46f4a4 <_obstack_memory_used@@Base+0x12364>  // b.any
  46f478:	ldr	x0, [sp, #56]
  46f47c:	ldr	x1, [x0]
  46f480:	ldr	x0, [sp, #80]
  46f484:	lsl	x0, x0, #4
  46f488:	add	x0, x1, x0
  46f48c:	ldr	x0, [x0]
  46f490:	ldr	x1, [sp, #112]
  46f494:	cmp	x1, x0
  46f498:	b.ne	46f4a4 <_obstack_memory_used@@Base+0x12364>  // b.any
  46f49c:	ldr	x0, [sp, #80]
  46f4a0:	str	x0, [sp, #128]
  46f4a4:	ldr	x0, [sp, #152]
  46f4a8:	add	x0, x0, #0x1
  46f4ac:	str	x0, [sp, #152]
  46f4b0:	ldr	x0, [sp, #48]
  46f4b4:	ldr	x0, [x0, #8]
  46f4b8:	ldr	x1, [sp, #152]
  46f4bc:	cmp	x1, x0
  46f4c0:	b.lt	46f3f8 <_obstack_memory_used@@Base+0x122b8>  // b.tstop
  46f4c4:	ldr	x0, [sp, #136]
  46f4c8:	cmp	x0, #0x0
  46f4cc:	b.lt	46f50c <_obstack_memory_used@@Base+0x123cc>  // b.tstop
  46f4d0:	ldr	x3, [sp, #40]
  46f4d4:	ldr	x2, [sp, #48]
  46f4d8:	ldr	x1, [sp, #136]
  46f4dc:	ldr	x0, [sp, #56]
  46f4e0:	bl	46eb1c <_obstack_memory_used@@Base+0x119dc>
  46f4e4:	str	w0, [sp, #96]
  46f4e8:	ldr	w0, [sp, #96]
  46f4ec:	cmp	w0, #0x0
  46f4f0:	cset	w0, ne  // ne = any
  46f4f4:	and	w0, w0, #0xff
  46f4f8:	and	x0, x0, #0xff
  46f4fc:	cmp	x0, #0x0
  46f500:	b.eq	46f50c <_obstack_memory_used@@Base+0x123cc>  // b.none
  46f504:	ldr	w0, [sp, #96]
  46f508:	b	46f710 <_obstack_memory_used@@Base+0x125d0>
  46f50c:	ldr	x0, [sp, #128]
  46f510:	cmp	x0, #0x0
  46f514:	b.lt	46f6ec <_obstack_memory_used@@Base+0x125ac>  // b.tstop
  46f518:	str	xzr, [sp, #152]
  46f51c:	b	46f5f0 <_obstack_memory_used@@Base+0x124b0>
  46f520:	ldr	x0, [sp, #48]
  46f524:	ldr	x1, [x0, #16]
  46f528:	ldr	x0, [sp, #152]
  46f52c:	lsl	x0, x0, #3
  46f530:	add	x0, x1, x0
  46f534:	ldr	x0, [x0]
  46f538:	str	x0, [sp, #88]
  46f53c:	ldr	x0, [sp, #56]
  46f540:	ldr	x2, [x0, #56]
  46f544:	ldr	x1, [sp, #88]
  46f548:	mov	x0, x1
  46f54c:	lsl	x0, x0, #1
  46f550:	add	x0, x0, x1
  46f554:	lsl	x0, x0, #3
  46f558:	add	x0, x2, x0
  46f55c:	ldr	x1, [sp, #128]
  46f560:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46f564:	cmp	x0, #0x0
  46f568:	b.ne	46f5e4 <_obstack_memory_used@@Base+0x124a4>  // b.any
  46f56c:	ldr	x0, [sp, #56]
  46f570:	ldr	x2, [x0, #48]
  46f574:	ldr	x1, [sp, #88]
  46f578:	mov	x0, x1
  46f57c:	lsl	x0, x0, #1
  46f580:	add	x0, x0, x1
  46f584:	lsl	x0, x0, #3
  46f588:	add	x0, x2, x0
  46f58c:	ldr	x1, [sp, #128]
  46f590:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46f594:	cmp	x0, #0x0
  46f598:	b.ne	46f5e4 <_obstack_memory_used@@Base+0x124a4>  // b.any
  46f59c:	ldr	x3, [sp, #40]
  46f5a0:	ldr	x2, [sp, #48]
  46f5a4:	ldr	x1, [sp, #88]
  46f5a8:	ldr	x0, [sp, #56]
  46f5ac:	bl	46eb1c <_obstack_memory_used@@Base+0x119dc>
  46f5b0:	str	w0, [sp, #96]
  46f5b4:	ldr	w0, [sp, #96]
  46f5b8:	cmp	w0, #0x0
  46f5bc:	cset	w0, ne  // ne = any
  46f5c0:	and	w0, w0, #0xff
  46f5c4:	and	x0, x0, #0xff
  46f5c8:	cmp	x0, #0x0
  46f5cc:	b.eq	46f5d8 <_obstack_memory_used@@Base+0x12498>  // b.none
  46f5d0:	ldr	w0, [sp, #96]
  46f5d4:	b	46f710 <_obstack_memory_used@@Base+0x125d0>
  46f5d8:	ldr	x0, [sp, #152]
  46f5dc:	sub	x0, x0, #0x1
  46f5e0:	str	x0, [sp, #152]
  46f5e4:	ldr	x0, [sp, #152]
  46f5e8:	add	x0, x0, #0x1
  46f5ec:	str	x0, [sp, #152]
  46f5f0:	ldr	x0, [sp, #48]
  46f5f4:	ldr	x0, [x0, #8]
  46f5f8:	ldr	x1, [sp, #152]
  46f5fc:	cmp	x1, x0
  46f600:	b.lt	46f520 <_obstack_memory_used@@Base+0x123e0>  // b.tstop
  46f604:	b	46f6ec <_obstack_memory_used@@Base+0x125ac>
  46f608:	str	xzr, [sp, #152]
  46f60c:	b	46f6d0 <_obstack_memory_used@@Base+0x12590>
  46f610:	ldr	x0, [sp, #48]
  46f614:	ldr	x1, [x0, #16]
  46f618:	ldr	x0, [sp, #152]
  46f61c:	lsl	x0, x0, #3
  46f620:	add	x0, x1, x0
  46f624:	ldr	x0, [x0]
  46f628:	str	x0, [sp, #104]
  46f62c:	ldr	x0, [sp, #56]
  46f630:	ldr	x1, [x0]
  46f634:	ldr	x0, [sp, #104]
  46f638:	lsl	x0, x0, #4
  46f63c:	add	x0, x1, x0
  46f640:	ldrb	w0, [x0, #8]
  46f644:	str	w0, [sp, #100]
  46f648:	ldr	w0, [sp, #100]
  46f64c:	cmp	w0, #0x9
  46f650:	b.eq	46f660 <_obstack_memory_used@@Base+0x12520>  // b.none
  46f654:	ldr	w0, [sp, #100]
  46f658:	cmp	w0, #0x8
  46f65c:	b.ne	46f6c4 <_obstack_memory_used@@Base+0x12584>  // b.any
  46f660:	ldr	x0, [sp, #56]
  46f664:	ldr	x1, [x0]
  46f668:	ldr	x0, [sp, #104]
  46f66c:	lsl	x0, x0, #4
  46f670:	add	x0, x1, x0
  46f674:	ldr	x0, [x0]
  46f678:	ldr	x1, [sp, #112]
  46f67c:	cmp	x1, x0
  46f680:	b.ne	46f6c0 <_obstack_memory_used@@Base+0x12580>  // b.any
  46f684:	ldr	x3, [sp, #40]
  46f688:	ldr	x2, [sp, #48]
  46f68c:	ldr	x1, [sp, #104]
  46f690:	ldr	x0, [sp, #56]
  46f694:	bl	46eb1c <_obstack_memory_used@@Base+0x119dc>
  46f698:	str	w0, [sp, #96]
  46f69c:	ldr	w0, [sp, #96]
  46f6a0:	cmp	w0, #0x0
  46f6a4:	cset	w0, ne  // ne = any
  46f6a8:	and	w0, w0, #0xff
  46f6ac:	and	x0, x0, #0xff
  46f6b0:	cmp	x0, #0x0
  46f6b4:	b.eq	46f6c4 <_obstack_memory_used@@Base+0x12584>  // b.none
  46f6b8:	ldr	w0, [sp, #96]
  46f6bc:	b	46f710 <_obstack_memory_used@@Base+0x125d0>
  46f6c0:	nop
  46f6c4:	ldr	x0, [sp, #152]
  46f6c8:	add	x0, x0, #0x1
  46f6cc:	str	x0, [sp, #152]
  46f6d0:	ldr	x0, [sp, #48]
  46f6d4:	ldr	x0, [x0, #8]
  46f6d8:	ldr	x1, [sp, #152]
  46f6dc:	cmp	x1, x0
  46f6e0:	b.lt	46f610 <_obstack_memory_used@@Base+0x124d0>  // b.tstop
  46f6e4:	b	46f6ec <_obstack_memory_used@@Base+0x125ac>
  46f6e8:	nop
  46f6ec:	ldr	x0, [sp, #144]
  46f6f0:	add	x0, x0, #0x1
  46f6f4:	str	x0, [sp, #144]
  46f6f8:	ldr	x0, [sp, #32]
  46f6fc:	ldr	x0, [x0, #8]
  46f700:	ldr	x1, [sp, #144]
  46f704:	cmp	x1, x0
  46f708:	b.lt	46f348 <_obstack_memory_used@@Base+0x12208>  // b.tstop
  46f70c:	mov	w0, #0x0                   	// #0
  46f710:	ldp	x29, x30, [sp], #160
  46f714:	ret
  46f718:	stp	x29, x30, [sp, #-208]!
  46f71c:	mov	x29, sp
  46f720:	str	x0, [sp, #40]
  46f724:	str	x1, [sp, #32]
  46f728:	str	x2, [sp, #24]
  46f72c:	str	x3, [sp, #16]
  46f730:	ldr	x0, [sp, #40]
  46f734:	ldr	x0, [x0, #152]
  46f738:	str	x0, [sp, #168]
  46f73c:	ldr	x1, [sp, #24]
  46f740:	ldr	x0, [sp, #40]
  46f744:	bl	474800 <_obstack_memory_used@@Base+0x176c0>
  46f748:	str	x0, [sp, #160]
  46f74c:	ldr	x0, [sp, #160]
  46f750:	cmn	x0, #0x1
  46f754:	b.ne	46f760 <_obstack_memory_used@@Base+0x12620>  // b.any
  46f758:	mov	w0, #0x0                   	// #0
  46f75c:	b	46fb80 <_obstack_memory_used@@Base+0x12a40>
  46f760:	str	xzr, [sp, #48]
  46f764:	str	xzr, [sp, #192]
  46f768:	b	46fb38 <_obstack_memory_used@@Base+0x129f8>
  46f76c:	ldr	x0, [sp, #16]
  46f770:	ldr	x1, [x0, #16]
  46f774:	ldr	x0, [sp, #192]
  46f778:	lsl	x0, x0, #3
  46f77c:	add	x0, x1, x0
  46f780:	ldr	x0, [x0]
  46f784:	str	x0, [sp, #152]
  46f788:	ldr	x0, [sp, #168]
  46f78c:	ldr	x1, [x0]
  46f790:	ldr	x0, [sp, #152]
  46f794:	lsl	x0, x0, #4
  46f798:	add	x0, x1, x0
  46f79c:	ldrb	w0, [x0, #8]
  46f7a0:	str	w0, [sp, #148]
  46f7a4:	ldr	x0, [sp, #32]
  46f7a8:	ldr	x0, [x0, #16]
  46f7ac:	ldr	x1, [sp, #152]
  46f7b0:	cmp	x1, x0
  46f7b4:	b.ne	46f7cc <_obstack_memory_used@@Base+0x1268c>  // b.any
  46f7b8:	ldr	x0, [sp, #32]
  46f7bc:	ldr	x0, [x0, #24]
  46f7c0:	ldr	x1, [sp, #24]
  46f7c4:	cmp	x1, x0
  46f7c8:	b.eq	46fb20 <_obstack_memory_used@@Base+0x129e0>  // b.none
  46f7cc:	ldr	w0, [sp, #148]
  46f7d0:	cmp	w0, #0x4
  46f7d4:	b.ne	46fb28 <_obstack_memory_used@@Base+0x129e8>  // b.any
  46f7d8:	ldr	x0, [sp, #40]
  46f7dc:	ldr	x2, [x0, #216]
  46f7e0:	ldr	x1, [sp, #160]
  46f7e4:	mov	x0, x1
  46f7e8:	lsl	x0, x0, #2
  46f7ec:	add	x0, x0, x1
  46f7f0:	lsl	x0, x0, #3
  46f7f4:	add	x0, x2, x0
  46f7f8:	str	x0, [sp, #176]
  46f7fc:	ldr	x0, [sp, #160]
  46f800:	str	x0, [sp, #184]
  46f804:	ldr	x0, [sp, #176]
  46f808:	ldr	x0, [x0]
  46f80c:	ldr	x1, [sp, #152]
  46f810:	cmp	x1, x0
  46f814:	b.ne	46faec <_obstack_memory_used@@Base+0x129ac>  // b.any
  46f818:	ldr	x0, [sp, #176]
  46f81c:	ldr	x1, [x0, #24]
  46f820:	ldr	x0, [sp, #176]
  46f824:	ldr	x0, [x0, #16]
  46f828:	sub	x0, x1, x0
  46f82c:	str	x0, [sp, #136]
  46f830:	ldr	x1, [sp, #24]
  46f834:	ldr	x0, [sp, #136]
  46f838:	add	x0, x1, x0
  46f83c:	str	x0, [sp, #128]
  46f840:	ldr	x0, [sp, #136]
  46f844:	cmp	x0, #0x0
  46f848:	b.eq	46f868 <_obstack_memory_used@@Base+0x12728>  // b.none
  46f84c:	ldr	x0, [sp, #168]
  46f850:	ldr	x1, [x0, #24]
  46f854:	ldr	x0, [sp, #152]
  46f858:	lsl	x0, x0, #3
  46f85c:	add	x0, x1, x0
  46f860:	ldr	x0, [x0]
  46f864:	b	46f890 <_obstack_memory_used@@Base+0x12750>
  46f868:	ldr	x0, [sp, #168]
  46f86c:	ldr	x2, [x0, #40]
  46f870:	ldr	x1, [sp, #152]
  46f874:	mov	x0, x1
  46f878:	lsl	x0, x0, #1
  46f87c:	add	x0, x0, x1
  46f880:	lsl	x0, x0, #3
  46f884:	add	x0, x2, x0
  46f888:	ldr	x0, [x0, #16]
  46f88c:	ldr	x0, [x0]
  46f890:	str	x0, [sp, #120]
  46f894:	ldr	x0, [sp, #32]
  46f898:	ldr	x0, [x0, #24]
  46f89c:	ldr	x1, [sp, #128]
  46f8a0:	cmp	x1, x0
  46f8a4:	b.gt	46faf4 <_obstack_memory_used@@Base+0x129b4>
  46f8a8:	ldr	x0, [sp, #32]
  46f8ac:	ldr	x1, [x0]
  46f8b0:	ldr	x0, [sp, #128]
  46f8b4:	lsl	x0, x0, #3
  46f8b8:	add	x0, x1, x0
  46f8bc:	ldr	x0, [x0]
  46f8c0:	cmp	x0, #0x0
  46f8c4:	b.eq	46faf4 <_obstack_memory_used@@Base+0x129b4>  // b.none
  46f8c8:	ldr	x0, [sp, #32]
  46f8cc:	ldr	x1, [x0]
  46f8d0:	ldr	x0, [sp, #128]
  46f8d4:	lsl	x0, x0, #3
  46f8d8:	add	x0, x1, x0
  46f8dc:	ldr	x0, [x0]
  46f8e0:	cmp	x0, #0x0
  46f8e4:	b.eq	46faf4 <_obstack_memory_used@@Base+0x129b4>  // b.none
  46f8e8:	ldr	x0, [sp, #32]
  46f8ec:	ldr	x1, [x0]
  46f8f0:	ldr	x0, [sp, #128]
  46f8f4:	lsl	x0, x0, #3
  46f8f8:	add	x0, x1, x0
  46f8fc:	ldr	x0, [x0]
  46f900:	add	x0, x0, #0x8
  46f904:	ldr	x1, [sp, #120]
  46f908:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46f90c:	cmp	x0, #0x0
  46f910:	b.eq	46faf4 <_obstack_memory_used@@Base+0x129b4>  // b.none
  46f914:	ldr	x0, [sp, #32]
  46f918:	add	x0, x0, #0x20
  46f91c:	ldr	x5, [sp, #128]
  46f920:	ldr	x4, [sp, #120]
  46f924:	ldr	x3, [sp, #24]
  46f928:	ldr	x2, [sp, #152]
  46f92c:	mov	x1, x0
  46f930:	ldr	x0, [sp, #40]
  46f934:	bl	46edb8 <_obstack_memory_used@@Base+0x11c78>
  46f938:	and	w0, w0, #0xff
  46f93c:	cmp	w0, #0x0
  46f940:	b.ne	46faf4 <_obstack_memory_used@@Base+0x129b4>  // b.any
  46f944:	ldr	x0, [sp, #48]
  46f948:	cmp	x0, #0x0
  46f94c:	b.ne	46f9ac <_obstack_memory_used@@Base+0x1286c>  // b.any
  46f950:	ldr	x1, [sp, #32]
  46f954:	add	x0, sp, #0x30
  46f958:	ldp	x2, x3, [x1]
  46f95c:	stp	x2, x3, [x0]
  46f960:	ldp	x2, x3, [x1, #16]
  46f964:	stp	x2, x3, [x0, #16]
  46f968:	ldp	x2, x3, [x1, #32]
  46f96c:	stp	x2, x3, [x0, #32]
  46f970:	ldr	x1, [x1, #48]
  46f974:	str	x1, [x0, #48]
  46f978:	ldr	x0, [sp, #32]
  46f97c:	add	x1, x0, #0x20
  46f980:	add	x0, sp, #0x30
  46f984:	add	x0, x0, #0x20
  46f988:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  46f98c:	str	w0, [sp, #204]
  46f990:	ldr	w0, [sp, #204]
  46f994:	cmp	w0, #0x0
  46f998:	cset	w0, ne  // ne = any
  46f99c:	and	w0, w0, #0xff
  46f9a0:	and	x0, x0, #0xff
  46f9a4:	cmp	x0, #0x0
  46f9a8:	b.ne	46fb54 <_obstack_memory_used@@Base+0x12a14>  // b.any
  46f9ac:	ldr	x0, [sp, #152]
  46f9b0:	str	x0, [sp, #64]
  46f9b4:	ldr	x0, [sp, #24]
  46f9b8:	str	x0, [sp, #72]
  46f9bc:	add	x0, sp, #0x30
  46f9c0:	add	x0, x0, #0x20
  46f9c4:	ldr	x1, [sp, #184]
  46f9c8:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  46f9cc:	strb	w0, [sp, #119]
  46f9d0:	ldrb	w0, [sp, #119]
  46f9d4:	eor	w0, w0, #0x1
  46f9d8:	and	w0, w0, #0xff
  46f9dc:	and	x0, x0, #0xff
  46f9e0:	cmp	x0, #0x0
  46f9e4:	b.eq	46f9f4 <_obstack_memory_used@@Base+0x128b4>  // b.none
  46f9e8:	mov	w0, #0xc                   	// #12
  46f9ec:	str	w0, [sp, #204]
  46f9f0:	b	46fb68 <_obstack_memory_used@@Base+0x12a28>
  46f9f4:	ldr	x1, [sp, #48]
  46f9f8:	ldr	x0, [sp, #24]
  46f9fc:	lsl	x0, x0, #3
  46fa00:	add	x0, x1, x0
  46fa04:	ldr	x0, [x0]
  46fa08:	str	x0, [sp, #104]
  46fa0c:	add	x0, sp, #0x30
  46fa10:	mov	x1, x0
  46fa14:	ldr	x0, [sp, #40]
  46fa18:	bl	46e0f4 <_obstack_memory_used@@Base+0x10fb4>
  46fa1c:	str	w0, [sp, #204]
  46fa20:	ldr	w0, [sp, #204]
  46fa24:	cmp	w0, #0x0
  46fa28:	cset	w0, ne  // ne = any
  46fa2c:	and	w0, w0, #0xff
  46fa30:	and	x0, x0, #0xff
  46fa34:	cmp	x0, #0x0
  46fa38:	b.ne	46fb5c <_obstack_memory_used@@Base+0x12a1c>  // b.any
  46fa3c:	ldr	x0, [sp, #32]
  46fa40:	ldr	x0, [x0, #8]
  46fa44:	cmp	x0, #0x0
  46fa48:	b.eq	46fa8c <_obstack_memory_used@@Base+0x1294c>  // b.none
  46fa4c:	ldr	x0, [sp, #32]
  46fa50:	ldr	x1, [x0, #8]
  46fa54:	ldr	x2, [sp, #48]
  46fa58:	ldr	x0, [sp, #24]
  46fa5c:	add	x0, x0, #0x1
  46fa60:	mov	x3, x0
  46fa64:	ldr	x0, [sp, #168]
  46fa68:	bl	46e634 <_obstack_memory_used@@Base+0x114f4>
  46fa6c:	str	w0, [sp, #204]
  46fa70:	ldr	w0, [sp, #204]
  46fa74:	cmp	w0, #0x0
  46fa78:	cset	w0, ne  // ne = any
  46fa7c:	and	w0, w0, #0xff
  46fa80:	and	x0, x0, #0xff
  46fa84:	cmp	x0, #0x0
  46fa88:	b.ne	46fb64 <_obstack_memory_used@@Base+0x12a24>  // b.any
  46fa8c:	ldr	x1, [sp, #48]
  46fa90:	ldr	x0, [sp, #24]
  46fa94:	lsl	x0, x0, #3
  46fa98:	add	x0, x1, x0
  46fa9c:	ldr	x1, [sp, #104]
  46faa0:	str	x1, [x0]
  46faa4:	add	x0, sp, #0x30
  46faa8:	add	x0, x0, #0x20
  46faac:	ldr	x1, [sp, #184]
  46fab0:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46fab4:	sub	x1, x0, #0x1
  46fab8:	add	x0, sp, #0x30
  46fabc:	add	x0, x0, #0x20
  46fac0:	bl	46148c <_obstack_memory_used@@Base+0x434c>
  46fac4:	ldr	x0, [sp, #40]
  46fac8:	ldr	x2, [x0, #216]
  46facc:	ldr	x1, [sp, #184]
  46fad0:	mov	x0, x1
  46fad4:	lsl	x0, x0, #2
  46fad8:	add	x0, x0, x1
  46fadc:	lsl	x0, x0, #3
  46fae0:	add	x0, x2, x0
  46fae4:	str	x0, [sp, #176]
  46fae8:	b	46faf8 <_obstack_memory_used@@Base+0x129b8>
  46faec:	nop
  46faf0:	b	46faf8 <_obstack_memory_used@@Base+0x129b8>
  46faf4:	nop
  46faf8:	ldr	x0, [sp, #184]
  46fafc:	add	x0, x0, #0x1
  46fb00:	str	x0, [sp, #184]
  46fb04:	ldr	x0, [sp, #176]
  46fb08:	add	x1, x0, #0x28
  46fb0c:	str	x1, [sp, #176]
  46fb10:	ldrb	w0, [x0, #32]
  46fb14:	cmp	w0, #0x0
  46fb18:	b.ne	46f804 <_obstack_memory_used@@Base+0x126c4>  // b.any
  46fb1c:	b	46fb2c <_obstack_memory_used@@Base+0x129ec>
  46fb20:	nop
  46fb24:	b	46fb2c <_obstack_memory_used@@Base+0x129ec>
  46fb28:	nop
  46fb2c:	ldr	x0, [sp, #192]
  46fb30:	add	x0, x0, #0x1
  46fb34:	str	x0, [sp, #192]
  46fb38:	ldr	x0, [sp, #16]
  46fb3c:	ldr	x0, [x0, #8]
  46fb40:	ldr	x1, [sp, #192]
  46fb44:	cmp	x1, x0
  46fb48:	b.lt	46f76c <_obstack_memory_used@@Base+0x1262c>  // b.tstop
  46fb4c:	str	wzr, [sp, #204]
  46fb50:	b	46fb68 <_obstack_memory_used@@Base+0x12a28>
  46fb54:	nop
  46fb58:	b	46fb68 <_obstack_memory_used@@Base+0x12a28>
  46fb5c:	nop
  46fb60:	b	46fb68 <_obstack_memory_used@@Base+0x12a28>
  46fb64:	nop
  46fb68:	ldr	x0, [sp, #48]
  46fb6c:	cmp	x0, #0x0
  46fb70:	b.eq	46fb7c <_obstack_memory_used@@Base+0x12a3c>  // b.none
  46fb74:	ldr	x0, [sp, #96]
  46fb78:	bl	404880 <free@plt>
  46fb7c:	ldr	w0, [sp, #204]
  46fb80:	ldp	x29, x30, [sp], #208
  46fb84:	ret
  46fb88:	stp	x29, x30, [sp, #-80]!
  46fb8c:	mov	x29, sp
  46fb90:	str	x0, [sp, #56]
  46fb94:	str	x1, [sp, #48]
  46fb98:	str	x2, [sp, #40]
  46fb9c:	str	x3, [sp, #32]
  46fba0:	str	x4, [sp, #24]
  46fba4:	ldr	x0, [sp, #56]
  46fba8:	ldr	x0, [x0, #152]
  46fbac:	str	x0, [sp, #64]
  46fbb0:	ldr	x0, [sp, #56]
  46fbb4:	ldr	x3, [sp, #32]
  46fbb8:	mov	x2, x0
  46fbbc:	ldr	x1, [sp, #40]
  46fbc0:	ldr	x0, [sp, #64]
  46fbc4:	bl	473958 <_obstack_memory_used@@Base+0x16818>
  46fbc8:	str	w0, [sp, #76]
  46fbcc:	ldr	w0, [sp, #76]
  46fbd0:	cmp	w0, #0x0
  46fbd4:	b.le	46fc6c <_obstack_memory_used@@Base+0x12b2c>
  46fbd8:	ldrsw	x1, [sp, #76]
  46fbdc:	ldr	x0, [sp, #32]
  46fbe0:	add	x0, x1, x0
  46fbe4:	ldr	x1, [sp, #24]
  46fbe8:	cmp	x1, x0
  46fbec:	b.lt	46fc6c <_obstack_memory_used@@Base+0x12b2c>  // b.tstop
  46fbf0:	ldr	x0, [sp, #48]
  46fbf4:	ldr	x1, [x0]
  46fbf8:	ldrsw	x2, [sp, #76]
  46fbfc:	ldr	x0, [sp, #32]
  46fc00:	add	x0, x2, x0
  46fc04:	lsl	x0, x0, #3
  46fc08:	add	x0, x1, x0
  46fc0c:	ldr	x0, [x0]
  46fc10:	cmp	x0, #0x0
  46fc14:	b.eq	46fc68 <_obstack_memory_used@@Base+0x12b28>  // b.none
  46fc18:	ldr	x0, [sp, #48]
  46fc1c:	ldr	x1, [x0]
  46fc20:	ldrsw	x2, [sp, #76]
  46fc24:	ldr	x0, [sp, #32]
  46fc28:	add	x0, x2, x0
  46fc2c:	lsl	x0, x0, #3
  46fc30:	add	x0, x1, x0
  46fc34:	ldr	x0, [x0]
  46fc38:	add	x2, x0, #0x8
  46fc3c:	ldr	x0, [sp, #64]
  46fc40:	ldr	x1, [x0, #24]
  46fc44:	ldr	x0, [sp, #40]
  46fc48:	lsl	x0, x0, #3
  46fc4c:	add	x0, x1, x0
  46fc50:	ldr	x0, [x0]
  46fc54:	mov	x1, x0
  46fc58:	mov	x0, x2
  46fc5c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  46fc60:	cmp	x0, #0x0
  46fc64:	b.ne	46fc6c <_obstack_memory_used@@Base+0x12b2c>  // b.any
  46fc68:	str	wzr, [sp, #76]
  46fc6c:	ldr	w0, [sp, #76]
  46fc70:	ldp	x29, x30, [sp], #80
  46fc74:	ret
  46fc78:	stp	x29, x30, [sp, #-80]!
  46fc7c:	mov	x29, sp
  46fc80:	str	x0, [sp, #40]
  46fc84:	str	x1, [sp, #32]
  46fc88:	str	x2, [sp, #24]
  46fc8c:	ldr	x0, [sp, #24]
  46fc90:	ldrb	w0, [x0, #104]
  46fc94:	ubfx	x0, x0, #5, #1
  46fc98:	and	w0, w0, #0xff
  46fc9c:	and	x0, x0, #0xff
  46fca0:	cmp	x0, #0x0
  46fca4:	b.eq	46fce8 <_obstack_memory_used@@Base+0x12ba8>  // b.none
  46fca8:	ldr	x1, [sp, #24]
  46fcac:	ldr	x0, [sp, #32]
  46fcb0:	bl	4702b0 <_obstack_memory_used@@Base+0x13170>
  46fcb4:	mov	w1, w0
  46fcb8:	ldr	x0, [sp, #40]
  46fcbc:	str	w1, [x0]
  46fcc0:	ldr	x0, [sp, #40]
  46fcc4:	ldr	w0, [x0]
  46fcc8:	cmp	w0, #0x0
  46fccc:	cset	w0, ne  // ne = any
  46fcd0:	and	w0, w0, #0xff
  46fcd4:	and	x0, x0, #0xff
  46fcd8:	cmp	x0, #0x0
  46fcdc:	b.eq	46fce8 <_obstack_memory_used@@Base+0x12ba8>  // b.none
  46fce0:	mov	x0, #0x0                   	// #0
  46fce4:	b	46fe18 <_obstack_memory_used@@Base+0x12cd8>
  46fce8:	ldr	x0, [sp, #32]
  46fcec:	ldr	x1, [x0, #8]
  46fcf0:	ldr	x0, [sp, #32]
  46fcf4:	ldr	x0, [x0, #72]
  46fcf8:	add	x3, x0, #0x1
  46fcfc:	ldr	x2, [sp, #32]
  46fd00:	str	x3, [x2, #72]
  46fd04:	add	x0, x1, x0
  46fd08:	ldrb	w0, [x0]
  46fd0c:	strb	w0, [sp, #79]
  46fd10:	ldr	x0, [sp, #24]
  46fd14:	ldr	x0, [x0, #88]
  46fd18:	str	x0, [sp, #64]
  46fd1c:	ldr	x0, [sp, #64]
  46fd20:	cmp	x0, #0x0
  46fd24:	cset	w0, ne  // ne = any
  46fd28:	and	w0, w0, #0xff
  46fd2c:	and	x0, x0, #0xff
  46fd30:	cmp	x0, #0x0
  46fd34:	b.eq	46fd50 <_obstack_memory_used@@Base+0x12c10>  // b.none
  46fd38:	ldrb	w0, [sp, #79]
  46fd3c:	lsl	x0, x0, #3
  46fd40:	ldr	x1, [sp, #64]
  46fd44:	add	x0, x1, x0
  46fd48:	ldr	x0, [x0]
  46fd4c:	b	46fe18 <_obstack_memory_used@@Base+0x12cd8>
  46fd50:	ldr	x0, [sp, #24]
  46fd54:	ldr	x0, [x0, #96]
  46fd58:	str	x0, [sp, #64]
  46fd5c:	ldr	x0, [sp, #64]
  46fd60:	cmp	x0, #0x0
  46fd64:	cset	w0, ne  // ne = any
  46fd68:	and	w0, w0, #0xff
  46fd6c:	and	x0, x0, #0xff
  46fd70:	cmp	x0, #0x0
  46fd74:	b.eq	46fde4 <_obstack_memory_used@@Base+0x12ca4>  // b.none
  46fd78:	ldr	x3, [sp, #32]
  46fd7c:	ldr	x0, [sp, #32]
  46fd80:	ldr	x0, [x0, #72]
  46fd84:	sub	x1, x0, #0x1
  46fd88:	ldr	x0, [sp, #32]
  46fd8c:	ldr	w0, [x0, #160]
  46fd90:	mov	w2, w0
  46fd94:	mov	x0, x3
  46fd98:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  46fd9c:	str	w0, [sp, #60]
  46fda0:	ldr	w0, [sp, #60]
  46fda4:	and	w0, w0, #0x1
  46fda8:	cmp	w0, #0x0
  46fdac:	b.eq	46fdcc <_obstack_memory_used@@Base+0x12c8c>  // b.none
  46fdb0:	ldrb	w0, [sp, #79]
  46fdb4:	add	x0, x0, #0x100
  46fdb8:	lsl	x0, x0, #3
  46fdbc:	ldr	x1, [sp, #64]
  46fdc0:	add	x0, x1, x0
  46fdc4:	ldr	x0, [x0]
  46fdc8:	b	46fe18 <_obstack_memory_used@@Base+0x12cd8>
  46fdcc:	ldrb	w0, [sp, #79]
  46fdd0:	lsl	x0, x0, #3
  46fdd4:	ldr	x1, [sp, #64]
  46fdd8:	add	x0, x1, x0
  46fddc:	ldr	x0, [x0]
  46fde0:	b	46fe18 <_obstack_memory_used@@Base+0x12cd8>
  46fde4:	ldr	x0, [sp, #32]
  46fde8:	ldr	x0, [x0, #152]
  46fdec:	ldr	x1, [sp, #24]
  46fdf0:	bl	4725b4 <_obstack_memory_used@@Base+0x15474>
  46fdf4:	and	w0, w0, #0xff
  46fdf8:	eor	w0, w0, #0x1
  46fdfc:	and	w0, w0, #0xff
  46fe00:	cmp	w0, #0x0
  46fe04:	b.eq	46fd10 <_obstack_memory_used@@Base+0x12bd0>  // b.none
  46fe08:	ldr	x0, [sp, #40]
  46fe0c:	mov	w1, #0xc                   	// #12
  46fe10:	str	w1, [x0]
  46fe14:	mov	x0, #0x0                   	// #0
  46fe18:	ldp	x29, x30, [sp], #80
  46fe1c:	ret
  46fe20:	stp	x29, x30, [sp, #-144]!
  46fe24:	mov	x29, sp
  46fe28:	str	x19, [sp, #16]
  46fe2c:	str	x0, [sp, #56]
  46fe30:	str	x1, [sp, #48]
  46fe34:	str	x2, [sp, #40]
  46fe38:	ldr	x0, [sp, #48]
  46fe3c:	ldr	x0, [x0, #152]
  46fe40:	str	x0, [sp, #128]
  46fe44:	ldr	x0, [sp, #48]
  46fe48:	ldr	x0, [x0, #72]
  46fe4c:	str	x0, [sp, #120]
  46fe50:	ldr	x0, [sp, #48]
  46fe54:	ldr	x0, [x0, #192]
  46fe58:	ldr	x1, [sp, #120]
  46fe5c:	cmp	x1, x0
  46fe60:	b.le	46fe90 <_obstack_memory_used@@Base+0x12d50>
  46fe64:	ldr	x0, [sp, #48]
  46fe68:	ldr	x1, [x0, #184]
  46fe6c:	ldr	x0, [sp, #120]
  46fe70:	lsl	x0, x0, #3
  46fe74:	add	x0, x1, x0
  46fe78:	ldr	x1, [sp, #40]
  46fe7c:	str	x1, [x0]
  46fe80:	ldr	x0, [sp, #48]
  46fe84:	ldr	x1, [sp, #120]
  46fe88:	str	x1, [x0, #192]
  46fe8c:	b	46ffe8 <_obstack_memory_used@@Base+0x12ea8>
  46fe90:	ldr	x0, [sp, #48]
  46fe94:	ldr	x1, [x0, #184]
  46fe98:	ldr	x0, [sp, #120]
  46fe9c:	lsl	x0, x0, #3
  46fea0:	add	x0, x1, x0
  46fea4:	ldr	x0, [x0]
  46fea8:	cmp	x0, #0x0
  46feac:	b.ne	46fed0 <_obstack_memory_used@@Base+0x12d90>  // b.any
  46feb0:	ldr	x0, [sp, #48]
  46feb4:	ldr	x1, [x0, #184]
  46feb8:	ldr	x0, [sp, #120]
  46febc:	lsl	x0, x0, #3
  46fec0:	add	x0, x1, x0
  46fec4:	ldr	x1, [sp, #40]
  46fec8:	str	x1, [x0]
  46fecc:	b	46ffe8 <_obstack_memory_used@@Base+0x12ea8>
  46fed0:	str	xzr, [sp, #136]
  46fed4:	ldr	x0, [sp, #48]
  46fed8:	ldr	x1, [x0, #184]
  46fedc:	ldr	x0, [sp, #120]
  46fee0:	lsl	x0, x0, #3
  46fee4:	add	x0, x1, x0
  46fee8:	ldr	x0, [x0]
  46feec:	str	x0, [sp, #112]
  46fef0:	ldr	x0, [sp, #112]
  46fef4:	ldr	x0, [x0, #80]
  46fef8:	str	x0, [sp, #104]
  46fefc:	ldr	x0, [sp, #40]
  46ff00:	cmp	x0, #0x0
  46ff04:	b.eq	46ff58 <_obstack_memory_used@@Base+0x12e18>  // b.none
  46ff08:	ldr	x0, [sp, #40]
  46ff0c:	ldr	x0, [x0, #80]
  46ff10:	str	x0, [sp, #136]
  46ff14:	add	x0, sp, #0x48
  46ff18:	ldr	x2, [sp, #104]
  46ff1c:	ldr	x1, [sp, #136]
  46ff20:	bl	46083c <_obstack_memory_used@@Base+0x36fc>
  46ff24:	mov	w1, w0
  46ff28:	ldr	x0, [sp, #56]
  46ff2c:	str	w1, [x0]
  46ff30:	ldr	x0, [sp, #56]
  46ff34:	ldr	w0, [x0]
  46ff38:	cmp	w0, #0x0
  46ff3c:	cset	w0, ne  // ne = any
  46ff40:	and	w0, w0, #0xff
  46ff44:	and	x0, x0, #0xff
  46ff48:	cmp	x0, #0x0
  46ff4c:	b.eq	46ff74 <_obstack_memory_used@@Base+0x12e34>  // b.none
  46ff50:	mov	x0, #0x0                   	// #0
  46ff54:	b	4700d0 <_obstack_memory_used@@Base+0x12f90>
  46ff58:	ldr	x0, [sp, #104]
  46ff5c:	add	x2, sp, #0x48
  46ff60:	mov	x3, x0
  46ff64:	ldp	x0, x1, [x3]
  46ff68:	stp	x0, x1, [x2]
  46ff6c:	ldr	x0, [x3, #16]
  46ff70:	str	x0, [x2, #16]
  46ff74:	ldr	x3, [sp, #48]
  46ff78:	ldr	x0, [sp, #48]
  46ff7c:	ldr	x0, [x0, #72]
  46ff80:	sub	x1, x0, #0x1
  46ff84:	ldr	x0, [sp, #48]
  46ff88:	ldr	w0, [x0, #160]
  46ff8c:	mov	w2, w0
  46ff90:	mov	x0, x3
  46ff94:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  46ff98:	str	w0, [sp, #100]
  46ff9c:	ldr	x0, [sp, #48]
  46ffa0:	ldr	x1, [x0, #184]
  46ffa4:	ldr	x0, [sp, #120]
  46ffa8:	lsl	x0, x0, #3
  46ffac:	add	x19, x1, x0
  46ffb0:	add	x0, sp, #0x48
  46ffb4:	ldr	w3, [sp, #100]
  46ffb8:	mov	x2, x0
  46ffbc:	ldr	x1, [sp, #128]
  46ffc0:	ldr	x0, [sp, #56]
  46ffc4:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  46ffc8:	str	x0, [x19]
  46ffcc:	ldr	x0, [x19]
  46ffd0:	str	x0, [sp, #40]
  46ffd4:	ldr	x0, [sp, #136]
  46ffd8:	cmp	x0, #0x0
  46ffdc:	b.eq	46ffe8 <_obstack_memory_used@@Base+0x12ea8>  // b.none
  46ffe0:	ldr	x0, [sp, #88]
  46ffe4:	bl	404880 <free@plt>
  46ffe8:	ldr	x0, [sp, #128]
  46ffec:	ldr	x0, [x0, #152]
  46fff0:	cmp	x0, #0x0
  46fff4:	b.eq	4700cc <_obstack_memory_used@@Base+0x12f8c>  // b.none
  46fff8:	ldr	x0, [sp, #40]
  46fffc:	cmp	x0, #0x0
  470000:	b.eq	4700cc <_obstack_memory_used@@Base+0x12f8c>  // b.none
  470004:	ldr	x0, [sp, #40]
  470008:	add	x0, x0, #0x8
  47000c:	ldr	x2, [sp, #120]
  470010:	mov	x1, x0
  470014:	ldr	x0, [sp, #48]
  470018:	bl	470198 <_obstack_memory_used@@Base+0x13058>
  47001c:	mov	w1, w0
  470020:	ldr	x0, [sp, #56]
  470024:	str	w1, [x0]
  470028:	ldr	x0, [sp, #56]
  47002c:	ldr	w0, [x0]
  470030:	cmp	w0, #0x0
  470034:	cset	w0, ne  // ne = any
  470038:	and	w0, w0, #0xff
  47003c:	and	x0, x0, #0xff
  470040:	cmp	x0, #0x0
  470044:	b.eq	470050 <_obstack_memory_used@@Base+0x12f10>  // b.none
  470048:	mov	x0, #0x0                   	// #0
  47004c:	b	4700d0 <_obstack_memory_used@@Base+0x12f90>
  470050:	ldr	x0, [sp, #40]
  470054:	ldrb	w0, [x0, #104]
  470058:	and	w0, w0, #0x40
  47005c:	and	w0, w0, #0xff
  470060:	cmp	w0, #0x0
  470064:	b.eq	4700cc <_obstack_memory_used@@Base+0x12f8c>  // b.none
  470068:	ldr	x0, [sp, #40]
  47006c:	add	x0, x0, #0x8
  470070:	mov	x1, x0
  470074:	ldr	x0, [sp, #48]
  470078:	bl	4706ac <_obstack_memory_used@@Base+0x1356c>
  47007c:	mov	w1, w0
  470080:	ldr	x0, [sp, #56]
  470084:	str	w1, [x0]
  470088:	ldr	x0, [sp, #56]
  47008c:	ldr	w0, [x0]
  470090:	cmp	w0, #0x0
  470094:	cset	w0, ne  // ne = any
  470098:	and	w0, w0, #0xff
  47009c:	and	x0, x0, #0xff
  4700a0:	cmp	x0, #0x0
  4700a4:	b.eq	4700b0 <_obstack_memory_used@@Base+0x12f70>  // b.none
  4700a8:	mov	x0, #0x0                   	// #0
  4700ac:	b	4700d0 <_obstack_memory_used@@Base+0x12f90>
  4700b0:	ldr	x0, [sp, #48]
  4700b4:	ldr	x1, [x0, #184]
  4700b8:	ldr	x0, [sp, #120]
  4700bc:	lsl	x0, x0, #3
  4700c0:	add	x0, x1, x0
  4700c4:	ldr	x0, [x0]
  4700c8:	str	x0, [sp, #40]
  4700cc:	ldr	x0, [sp, #40]
  4700d0:	ldr	x19, [sp, #16]
  4700d4:	ldp	x29, x30, [sp], #144
  4700d8:	ret
  4700dc:	stp	x29, x30, [sp, #-64]!
  4700e0:	mov	x29, sp
  4700e4:	str	x0, [sp, #24]
  4700e8:	str	x1, [sp, #16]
  4700ec:	ldr	x0, [sp, #16]
  4700f0:	ldr	x0, [x0, #192]
  4700f4:	str	x0, [sp, #48]
  4700f8:	ldr	x0, [sp, #16]
  4700fc:	ldr	x0, [x0, #72]
  470100:	str	x0, [sp, #56]
  470104:	ldr	x0, [sp, #56]
  470108:	add	x0, x0, #0x1
  47010c:	str	x0, [sp, #56]
  470110:	ldr	x1, [sp, #56]
  470114:	ldr	x0, [sp, #48]
  470118:	cmp	x1, x0
  47011c:	b.le	470128 <_obstack_memory_used@@Base+0x12fe8>
  470120:	mov	x0, #0x0                   	// #0
  470124:	b	470190 <_obstack_memory_used@@Base+0x13050>
  470128:	ldr	x0, [sp, #16]
  47012c:	ldr	x0, [x0, #72]
  470130:	add	x1, x0, #0x1
  470134:	ldr	x0, [sp, #16]
  470138:	str	x1, [x0, #72]
  47013c:	ldr	x0, [sp, #16]
  470140:	ldr	x1, [x0, #184]
  470144:	ldr	x0, [sp, #56]
  470148:	lsl	x0, x0, #3
  47014c:	add	x0, x1, x0
  470150:	ldr	x0, [x0]
  470154:	cmp	x0, #0x0
  470158:	b.eq	470104 <_obstack_memory_used@@Base+0x12fc4>  // b.none
  47015c:	mov	x2, #0x0                   	// #0
  470160:	ldr	x1, [sp, #16]
  470164:	ldr	x0, [sp, #24]
  470168:	bl	46fe20 <_obstack_memory_used@@Base+0x12ce0>
  47016c:	str	x0, [sp, #40]
  470170:	ldr	x0, [sp, #24]
  470174:	ldr	w0, [x0]
  470178:	cmp	w0, #0x0
  47017c:	b.ne	47018c <_obstack_memory_used@@Base+0x1304c>  // b.any
  470180:	ldr	x0, [sp, #40]
  470184:	cmp	x0, #0x0
  470188:	b.eq	4700ec <_obstack_memory_used@@Base+0x12fac>  // b.none
  47018c:	ldr	x0, [sp, #40]
  470190:	ldp	x29, x30, [sp], #64
  470194:	ret
  470198:	stp	x29, x30, [sp, #-80]!
  47019c:	mov	x29, sp
  4701a0:	str	x0, [sp, #40]
  4701a4:	str	x1, [sp, #32]
  4701a8:	str	x2, [sp, #24]
  4701ac:	ldr	x0, [sp, #40]
  4701b0:	ldr	x0, [x0, #152]
  4701b4:	str	x0, [sp, #64]
  4701b8:	str	xzr, [sp, #72]
  4701bc:	b	470290 <_obstack_memory_used@@Base+0x13150>
  4701c0:	ldr	x0, [sp, #32]
  4701c4:	ldr	x1, [x0, #16]
  4701c8:	ldr	x0, [sp, #72]
  4701cc:	lsl	x0, x0, #3
  4701d0:	add	x0, x1, x0
  4701d4:	ldr	x0, [x0]
  4701d8:	str	x0, [sp, #56]
  4701dc:	ldr	x0, [sp, #64]
  4701e0:	ldr	x1, [x0]
  4701e4:	ldr	x0, [sp, #56]
  4701e8:	lsl	x0, x0, #4
  4701ec:	add	x0, x1, x0
  4701f0:	ldrb	w0, [x0, #8]
  4701f4:	cmp	w0, #0x8
  4701f8:	b.ne	470284 <_obstack_memory_used@@Base+0x13144>  // b.any
  4701fc:	ldr	x0, [sp, #64]
  470200:	ldr	x1, [x0]
  470204:	ldr	x0, [sp, #56]
  470208:	lsl	x0, x0, #4
  47020c:	add	x0, x1, x0
  470210:	ldr	x0, [x0]
  470214:	cmp	x0, #0x3f
  470218:	b.gt	470284 <_obstack_memory_used@@Base+0x13144>
  47021c:	ldr	x0, [sp, #64]
  470220:	ldr	x0, [x0, #160]
  470224:	ldr	x1, [sp, #64]
  470228:	ldr	x2, [x1]
  47022c:	ldr	x1, [sp, #56]
  470230:	lsl	x1, x1, #4
  470234:	add	x1, x2, x1
  470238:	ldr	x1, [x1]
  47023c:	lsr	x0, x0, x1
  470240:	and	x0, x0, #0x1
  470244:	cmp	x0, #0x0
  470248:	b.eq	470284 <_obstack_memory_used@@Base+0x13144>  // b.none
  47024c:	ldr	x2, [sp, #24]
  470250:	ldr	x1, [sp, #56]
  470254:	ldr	x0, [sp, #40]
  470258:	bl	4748f0 <_obstack_memory_used@@Base+0x177b0>
  47025c:	str	w0, [sp, #52]
  470260:	ldr	w0, [sp, #52]
  470264:	cmp	w0, #0x0
  470268:	cset	w0, ne  // ne = any
  47026c:	and	w0, w0, #0xff
  470270:	and	x0, x0, #0xff
  470274:	cmp	x0, #0x0
  470278:	b.eq	470284 <_obstack_memory_used@@Base+0x13144>  // b.none
  47027c:	ldr	w0, [sp, #52]
  470280:	b	4702a8 <_obstack_memory_used@@Base+0x13168>
  470284:	ldr	x0, [sp, #72]
  470288:	add	x0, x0, #0x1
  47028c:	str	x0, [sp, #72]
  470290:	ldr	x0, [sp, #32]
  470294:	ldr	x0, [x0, #8]
  470298:	ldr	x1, [sp, #72]
  47029c:	cmp	x1, x0
  4702a0:	b.lt	4701c0 <_obstack_memory_used@@Base+0x13080>  // b.tstop
  4702a4:	mov	w0, #0x0                   	// #0
  4702a8:	ldp	x29, x30, [sp], #80
  4702ac:	ret
  4702b0:	stp	x29, x30, [sp, #-144]!
  4702b4:	mov	x29, sp
  4702b8:	str	x19, [sp, #16]
  4702bc:	str	x0, [sp, #40]
  4702c0:	str	x1, [sp, #32]
  4702c4:	ldr	x0, [sp, #40]
  4702c8:	ldr	x0, [x0, #152]
  4702cc:	str	x0, [sp, #128]
  4702d0:	str	xzr, [sp, #136]
  4702d4:	b	470688 <_obstack_memory_used@@Base+0x13548>
  4702d8:	ldr	x0, [sp, #32]
  4702dc:	ldr	x1, [x0, #24]
  4702e0:	ldr	x0, [sp, #136]
  4702e4:	lsl	x0, x0, #3
  4702e8:	add	x0, x1, x0
  4702ec:	ldr	x0, [x0]
  4702f0:	str	x0, [sp, #120]
  4702f4:	ldr	x0, [sp, #128]
  4702f8:	ldr	x1, [x0]
  4702fc:	ldr	x0, [sp, #120]
  470300:	lsl	x0, x0, #4
  470304:	add	x0, x1, x0
  470308:	ldrb	w0, [x0, #10]
  47030c:	and	w0, w0, #0x10
  470310:	and	w0, w0, #0xff
  470314:	cmp	w0, #0x0
  470318:	b.eq	470668 <_obstack_memory_used@@Base+0x13528>  // b.none
  47031c:	ldr	x0, [sp, #128]
  470320:	ldr	x1, [x0]
  470324:	ldr	x0, [sp, #120]
  470328:	lsl	x0, x0, #4
  47032c:	add	x0, x1, x0
  470330:	ldr	w0, [x0, #8]
  470334:	and	w0, w0, #0x3ff00
  470338:	cmp	w0, #0x0
  47033c:	b.eq	470454 <_obstack_memory_used@@Base+0x13314>  // b.none
  470340:	ldr	x3, [sp, #40]
  470344:	ldr	x0, [sp, #40]
  470348:	ldr	x1, [x0, #72]
  47034c:	ldr	x0, [sp, #40]
  470350:	ldr	w0, [x0, #160]
  470354:	mov	w2, w0
  470358:	mov	x0, x3
  47035c:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  470360:	str	w0, [sp, #116]
  470364:	ldr	x0, [sp, #128]
  470368:	ldr	x1, [x0]
  47036c:	ldr	x0, [sp, #120]
  470370:	lsl	x0, x0, #4
  470374:	add	x0, x1, x0
  470378:	ldr	w0, [x0, #8]
  47037c:	ubfx	x0, x0, #8, #10
  470380:	and	w0, w0, #0xffff
  470384:	and	w0, w0, #0x4
  470388:	cmp	w0, #0x0
  47038c:	b.eq	4703a0 <_obstack_memory_used@@Base+0x13260>  // b.none
  470390:	ldr	w0, [sp, #116]
  470394:	and	w0, w0, #0x1
  470398:	cmp	w0, #0x0
  47039c:	b.eq	470670 <_obstack_memory_used@@Base+0x13530>  // b.none
  4703a0:	ldr	x0, [sp, #128]
  4703a4:	ldr	x1, [x0]
  4703a8:	ldr	x0, [sp, #120]
  4703ac:	lsl	x0, x0, #4
  4703b0:	add	x0, x1, x0
  4703b4:	ldr	w0, [x0, #8]
  4703b8:	ubfx	x0, x0, #8, #10
  4703bc:	and	w0, w0, #0xffff
  4703c0:	and	w0, w0, #0x8
  4703c4:	cmp	w0, #0x0
  4703c8:	b.eq	4703dc <_obstack_memory_used@@Base+0x1329c>  // b.none
  4703cc:	ldr	w0, [sp, #116]
  4703d0:	and	w0, w0, #0x1
  4703d4:	cmp	w0, #0x0
  4703d8:	b.ne	470670 <_obstack_memory_used@@Base+0x13530>  // b.any
  4703dc:	ldr	x0, [sp, #128]
  4703e0:	ldr	x1, [x0]
  4703e4:	ldr	x0, [sp, #120]
  4703e8:	lsl	x0, x0, #4
  4703ec:	add	x0, x1, x0
  4703f0:	ldr	w0, [x0, #8]
  4703f4:	ubfx	x0, x0, #8, #10
  4703f8:	and	w0, w0, #0xffff
  4703fc:	and	w0, w0, #0x20
  470400:	cmp	w0, #0x0
  470404:	b.eq	470418 <_obstack_memory_used@@Base+0x132d8>  // b.none
  470408:	ldr	w0, [sp, #116]
  47040c:	and	w0, w0, #0x2
  470410:	cmp	w0, #0x0
  470414:	b.eq	470670 <_obstack_memory_used@@Base+0x13530>  // b.none
  470418:	ldr	x0, [sp, #128]
  47041c:	ldr	x1, [x0]
  470420:	ldr	x0, [sp, #120]
  470424:	lsl	x0, x0, #4
  470428:	add	x0, x1, x0
  47042c:	ldr	w0, [x0, #8]
  470430:	ubfx	x0, x0, #8, #10
  470434:	and	w0, w0, #0xffff
  470438:	and	w0, w0, #0x80
  47043c:	cmp	w0, #0x0
  470440:	b.eq	470454 <_obstack_memory_used@@Base+0x13314>  // b.none
  470444:	ldr	w0, [sp, #116]
  470448:	and	w0, w0, #0x8
  47044c:	cmp	w0, #0x0
  470450:	b.eq	470670 <_obstack_memory_used@@Base+0x13530>  // b.none
  470454:	ldr	x1, [sp, #40]
  470458:	ldr	x0, [sp, #40]
  47045c:	ldr	x0, [x0, #72]
  470460:	mov	x3, x0
  470464:	mov	x2, x1
  470468:	ldr	x1, [sp, #120]
  47046c:	ldr	x0, [sp, #128]
  470470:	bl	473958 <_obstack_memory_used@@Base+0x16818>
  470474:	str	w0, [sp, #112]
  470478:	ldr	w0, [sp, #112]
  47047c:	cmp	w0, #0x0
  470480:	b.eq	470678 <_obstack_memory_used@@Base+0x13538>  // b.none
  470484:	ldr	x0, [sp, #40]
  470488:	ldr	x1, [x0, #72]
  47048c:	ldrsw	x0, [sp, #112]
  470490:	add	x0, x1, x0
  470494:	str	x0, [sp, #104]
  470498:	ldr	x0, [sp, #40]
  47049c:	ldr	w0, [x0, #224]
  4704a0:	ldr	w2, [sp, #112]
  4704a4:	ldr	w1, [sp, #112]
  4704a8:	cmp	w2, w0
  4704ac:	csel	w1, w1, w0, ge  // ge = tcont
  4704b0:	ldr	x0, [sp, #40]
  4704b4:	str	w1, [x0, #224]
  4704b8:	ldr	x1, [sp, #104]
  4704bc:	ldr	x0, [sp, #40]
  4704c0:	bl	46e524 <_obstack_memory_used@@Base+0x113e4>
  4704c4:	str	w0, [sp, #84]
  4704c8:	ldr	w0, [sp, #84]
  4704cc:	cmp	w0, #0x0
  4704d0:	cset	w0, ne  // ne = any
  4704d4:	and	w0, w0, #0xff
  4704d8:	and	x0, x0, #0xff
  4704dc:	cmp	x0, #0x0
  4704e0:	b.eq	4704ec <_obstack_memory_used@@Base+0x133ac>  // b.none
  4704e4:	ldr	w0, [sp, #84]
  4704e8:	b	4706a0 <_obstack_memory_used@@Base+0x13560>
  4704ec:	ldr	x0, [sp, #128]
  4704f0:	ldr	x1, [x0, #48]
  4704f4:	ldr	x0, [sp, #128]
  4704f8:	ldr	x2, [x0, #24]
  4704fc:	ldr	x0, [sp, #120]
  470500:	lsl	x0, x0, #3
  470504:	add	x0, x2, x0
  470508:	ldr	x0, [x0]
  47050c:	mov	x2, x0
  470510:	mov	x0, x2
  470514:	lsl	x0, x0, #1
  470518:	add	x0, x0, x2
  47051c:	lsl	x0, x0, #3
  470520:	add	x0, x1, x0
  470524:	str	x0, [sp, #96]
  470528:	ldr	x0, [sp, #40]
  47052c:	ldr	x1, [x0, #184]
  470530:	ldr	x0, [sp, #104]
  470534:	lsl	x0, x0, #3
  470538:	add	x0, x1, x0
  47053c:	ldr	x0, [x0]
  470540:	str	x0, [sp, #88]
  470544:	ldr	x0, [sp, #88]
  470548:	cmp	x0, #0x0
  47054c:	b.ne	470570 <_obstack_memory_used@@Base+0x13430>  // b.any
  470550:	ldr	x0, [sp, #96]
  470554:	add	x2, sp, #0x38
  470558:	mov	x3, x0
  47055c:	ldp	x0, x1, [x3]
  470560:	stp	x0, x1, [x2]
  470564:	ldr	x0, [x3, #16]
  470568:	str	x0, [x2, #16]
  47056c:	b	4705ac <_obstack_memory_used@@Base+0x1346c>
  470570:	ldr	x0, [sp, #88]
  470574:	ldr	x1, [x0, #80]
  470578:	add	x0, sp, #0x38
  47057c:	ldr	x2, [sp, #96]
  470580:	bl	46083c <_obstack_memory_used@@Base+0x36fc>
  470584:	str	w0, [sp, #84]
  470588:	ldr	w0, [sp, #84]
  47058c:	cmp	w0, #0x0
  470590:	cset	w0, ne  // ne = any
  470594:	and	w0, w0, #0xff
  470598:	and	x0, x0, #0xff
  47059c:	cmp	x0, #0x0
  4705a0:	b.eq	4705ac <_obstack_memory_used@@Base+0x1346c>  // b.none
  4705a4:	ldr	w0, [sp, #84]
  4705a8:	b	4706a0 <_obstack_memory_used@@Base+0x13560>
  4705ac:	ldr	x3, [sp, #40]
  4705b0:	ldr	x0, [sp, #104]
  4705b4:	sub	x1, x0, #0x1
  4705b8:	ldr	x0, [sp, #40]
  4705bc:	ldr	w0, [x0, #160]
  4705c0:	mov	w2, w0
  4705c4:	mov	x0, x3
  4705c8:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  4705cc:	str	w0, [sp, #116]
  4705d0:	ldr	x0, [sp, #40]
  4705d4:	ldr	x1, [x0, #184]
  4705d8:	ldr	x0, [sp, #104]
  4705dc:	lsl	x0, x0, #3
  4705e0:	add	x19, x1, x0
  4705e4:	add	x1, sp, #0x38
  4705e8:	add	x0, sp, #0x54
  4705ec:	ldr	w3, [sp, #116]
  4705f0:	mov	x2, x1
  4705f4:	ldr	x1, [sp, #128]
  4705f8:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  4705fc:	str	x0, [x19]
  470600:	ldr	x0, [sp, #88]
  470604:	cmp	x0, #0x0
  470608:	b.eq	470614 <_obstack_memory_used@@Base+0x134d4>  // b.none
  47060c:	ldr	x0, [sp, #72]
  470610:	bl	404880 <free@plt>
  470614:	ldr	x0, [sp, #40]
  470618:	ldr	x1, [x0, #184]
  47061c:	ldr	x0, [sp, #104]
  470620:	lsl	x0, x0, #3
  470624:	add	x0, x1, x0
  470628:	ldr	x0, [x0]
  47062c:	cmp	x0, #0x0
  470630:	cset	w0, eq  // eq = none
  470634:	and	w0, w0, #0xff
  470638:	and	x0, x0, #0xff
  47063c:	cmp	x0, #0x0
  470640:	b.eq	47067c <_obstack_memory_used@@Base+0x1353c>  // b.none
  470644:	ldr	w0, [sp, #84]
  470648:	cmp	w0, #0x0
  47064c:	cset	w0, ne  // ne = any
  470650:	and	w0, w0, #0xff
  470654:	and	x0, x0, #0xff
  470658:	cmp	x0, #0x0
  47065c:	b.eq	47067c <_obstack_memory_used@@Base+0x1353c>  // b.none
  470660:	ldr	w0, [sp, #84]
  470664:	b	4706a0 <_obstack_memory_used@@Base+0x13560>
  470668:	nop
  47066c:	b	47067c <_obstack_memory_used@@Base+0x1353c>
  470670:	nop
  470674:	b	47067c <_obstack_memory_used@@Base+0x1353c>
  470678:	nop
  47067c:	ldr	x0, [sp, #136]
  470680:	add	x0, x0, #0x1
  470684:	str	x0, [sp, #136]
  470688:	ldr	x0, [sp, #32]
  47068c:	ldr	x0, [x0, #16]
  470690:	ldr	x1, [sp, #136]
  470694:	cmp	x1, x0
  470698:	b.lt	4702d8 <_obstack_memory_used@@Base+0x13198>  // b.tstop
  47069c:	mov	w0, #0x0                   	// #0
  4706a0:	ldr	x19, [sp, #16]
  4706a4:	ldp	x29, x30, [sp], #144
  4706a8:	ret
  4706ac:	stp	x29, x30, [sp, #-192]!
  4706b0:	mov	x29, sp
  4706b4:	str	x19, [sp, #16]
  4706b8:	str	x0, [sp, #40]
  4706bc:	str	x1, [sp, #32]
  4706c0:	ldr	x0, [sp, #40]
  4706c4:	ldr	x0, [x0, #152]
  4706c8:	str	x0, [sp, #168]
  4706cc:	ldr	x0, [sp, #40]
  4706d0:	ldr	x0, [x0, #72]
  4706d4:	str	x0, [sp, #160]
  4706d8:	str	xzr, [sp, #184]
  4706dc:	b	470c08 <_obstack_memory_used@@Base+0x13ac8>
  4706e0:	ldr	x0, [sp, #32]
  4706e4:	ldr	x1, [x0, #16]
  4706e8:	ldr	x0, [sp, #184]
  4706ec:	lsl	x0, x0, #3
  4706f0:	add	x0, x1, x0
  4706f4:	ldr	x0, [x0]
  4706f8:	str	x0, [sp, #152]
  4706fc:	ldr	x0, [sp, #168]
  470700:	ldr	x1, [x0]
  470704:	ldr	x0, [sp, #152]
  470708:	lsl	x0, x0, #4
  47070c:	add	x0, x1, x0
  470710:	str	x0, [sp, #144]
  470714:	ldr	x0, [sp, #144]
  470718:	ldrb	w0, [x0, #8]
  47071c:	cmp	w0, #0x4
  470720:	b.ne	470bf0 <_obstack_memory_used@@Base+0x13ab0>  // b.any
  470724:	ldr	x0, [sp, #144]
  470728:	ldr	w0, [x0, #8]
  47072c:	and	w0, w0, #0x3ff00
  470730:	cmp	w0, #0x0
  470734:	b.eq	470808 <_obstack_memory_used@@Base+0x136c8>  // b.none
  470738:	ldr	x3, [sp, #40]
  47073c:	ldr	x0, [sp, #40]
  470740:	ldr	w0, [x0, #160]
  470744:	mov	w2, w0
  470748:	ldr	x1, [sp, #160]
  47074c:	mov	x0, x3
  470750:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  470754:	str	w0, [sp, #140]
  470758:	ldr	x0, [sp, #144]
  47075c:	ldr	w0, [x0, #8]
  470760:	ubfx	x0, x0, #8, #10
  470764:	and	w0, w0, #0xffff
  470768:	and	w0, w0, #0x4
  47076c:	cmp	w0, #0x0
  470770:	b.eq	470784 <_obstack_memory_used@@Base+0x13644>  // b.none
  470774:	ldr	w0, [sp, #140]
  470778:	and	w0, w0, #0x1
  47077c:	cmp	w0, #0x0
  470780:	b.eq	470bf8 <_obstack_memory_used@@Base+0x13ab8>  // b.none
  470784:	ldr	x0, [sp, #144]
  470788:	ldr	w0, [x0, #8]
  47078c:	ubfx	x0, x0, #8, #10
  470790:	and	w0, w0, #0xffff
  470794:	and	w0, w0, #0x8
  470798:	cmp	w0, #0x0
  47079c:	b.eq	4707b0 <_obstack_memory_used@@Base+0x13670>  // b.none
  4707a0:	ldr	w0, [sp, #140]
  4707a4:	and	w0, w0, #0x1
  4707a8:	cmp	w0, #0x0
  4707ac:	b.ne	470bf8 <_obstack_memory_used@@Base+0x13ab8>  // b.any
  4707b0:	ldr	x0, [sp, #144]
  4707b4:	ldr	w0, [x0, #8]
  4707b8:	ubfx	x0, x0, #8, #10
  4707bc:	and	w0, w0, #0xffff
  4707c0:	and	w0, w0, #0x20
  4707c4:	cmp	w0, #0x0
  4707c8:	b.eq	4707dc <_obstack_memory_used@@Base+0x1369c>  // b.none
  4707cc:	ldr	w0, [sp, #140]
  4707d0:	and	w0, w0, #0x2
  4707d4:	cmp	w0, #0x0
  4707d8:	b.eq	470bf8 <_obstack_memory_used@@Base+0x13ab8>  // b.none
  4707dc:	ldr	x0, [sp, #144]
  4707e0:	ldr	w0, [x0, #8]
  4707e4:	ubfx	x0, x0, #8, #10
  4707e8:	and	w0, w0, #0xffff
  4707ec:	and	w0, w0, #0x80
  4707f0:	cmp	w0, #0x0
  4707f4:	b.eq	470808 <_obstack_memory_used@@Base+0x136c8>  // b.none
  4707f8:	ldr	w0, [sp, #140]
  4707fc:	and	w0, w0, #0x8
  470800:	cmp	w0, #0x0
  470804:	b.eq	470bf8 <_obstack_memory_used@@Base+0x13ab8>  // b.none
  470808:	ldr	x0, [sp, #40]
  47080c:	ldr	x0, [x0, #200]
  470810:	str	x0, [sp, #176]
  470814:	ldr	x2, [sp, #160]
  470818:	ldr	x1, [sp, #152]
  47081c:	ldr	x0, [sp, #40]
  470820:	bl	470c50 <_obstack_memory_used@@Base+0x13b10>
  470824:	str	w0, [sp, #84]
  470828:	ldr	w0, [sp, #84]
  47082c:	cmp	w0, #0x0
  470830:	cset	w0, ne  // ne = any
  470834:	and	w0, w0, #0xff
  470838:	and	x0, x0, #0xff
  47083c:	cmp	x0, #0x0
  470840:	b.ne	470c24 <_obstack_memory_used@@Base+0x13ae4>  // b.any
  470844:	b	470bd8 <_obstack_memory_used@@Base+0x13a98>
  470848:	ldr	x0, [sp, #40]
  47084c:	ldr	x2, [x0, #216]
  470850:	ldr	x1, [sp, #176]
  470854:	mov	x0, x1
  470858:	lsl	x0, x0, #2
  47085c:	add	x0, x0, x1
  470860:	lsl	x0, x0, #3
  470864:	add	x0, x2, x0
  470868:	str	x0, [sp, #128]
  47086c:	ldr	x0, [sp, #128]
  470870:	ldr	x0, [x0]
  470874:	ldr	x1, [sp, #152]
  470878:	cmp	x1, x0
  47087c:	b.ne	470bc8 <_obstack_memory_used@@Base+0x13a88>  // b.any
  470880:	ldr	x0, [sp, #128]
  470884:	ldr	x0, [x0, #8]
  470888:	ldr	x1, [sp, #160]
  47088c:	cmp	x1, x0
  470890:	b.ne	470bc8 <_obstack_memory_used@@Base+0x13a88>  // b.any
  470894:	ldr	x0, [sp, #128]
  470898:	ldr	x1, [x0, #24]
  47089c:	ldr	x0, [sp, #128]
  4708a0:	ldr	x0, [x0, #16]
  4708a4:	sub	x0, x1, x0
  4708a8:	str	x0, [sp, #120]
  4708ac:	ldr	x0, [sp, #120]
  4708b0:	cmp	x0, #0x0
  4708b4:	b.ne	470904 <_obstack_memory_used@@Base+0x137c4>  // b.any
  4708b8:	ldr	x0, [sp, #168]
  4708bc:	ldr	x2, [x0, #48]
  4708c0:	ldr	x0, [sp, #168]
  4708c4:	ldr	x3, [x0, #40]
  4708c8:	ldr	x1, [sp, #152]
  4708cc:	mov	x0, x1
  4708d0:	lsl	x0, x0, #1
  4708d4:	add	x0, x0, x1
  4708d8:	lsl	x0, x0, #3
  4708dc:	add	x0, x3, x0
  4708e0:	ldr	x0, [x0, #16]
  4708e4:	ldr	x0, [x0]
  4708e8:	mov	x1, x0
  4708ec:	mov	x0, x1
  4708f0:	lsl	x0, x0, #1
  4708f4:	add	x0, x0, x1
  4708f8:	lsl	x0, x0, #3
  4708fc:	add	x0, x2, x0
  470900:	b	47093c <_obstack_memory_used@@Base+0x137fc>
  470904:	ldr	x0, [sp, #168]
  470908:	ldr	x1, [x0, #48]
  47090c:	ldr	x0, [sp, #168]
  470910:	ldr	x2, [x0, #24]
  470914:	ldr	x0, [sp, #152]
  470918:	lsl	x0, x0, #3
  47091c:	add	x0, x2, x0
  470920:	ldr	x0, [x0]
  470924:	mov	x2, x0
  470928:	mov	x0, x2
  47092c:	lsl	x0, x0, #1
  470930:	add	x0, x0, x2
  470934:	lsl	x0, x0, #3
  470938:	add	x0, x1, x0
  47093c:	str	x0, [sp, #112]
  470940:	ldr	x0, [sp, #128]
  470944:	ldr	x1, [x0, #24]
  470948:	ldr	x0, [sp, #160]
  47094c:	add	x1, x1, x0
  470950:	ldr	x0, [sp, #128]
  470954:	ldr	x0, [x0, #16]
  470958:	sub	x0, x1, x0
  47095c:	str	x0, [sp, #104]
  470960:	ldr	x3, [sp, #40]
  470964:	ldr	x0, [sp, #104]
  470968:	sub	x1, x0, #0x1
  47096c:	ldr	x0, [sp, #40]
  470970:	ldr	w0, [x0, #160]
  470974:	mov	w2, w0
  470978:	mov	x0, x3
  47097c:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  470980:	str	w0, [sp, #140]
  470984:	ldr	x0, [sp, #40]
  470988:	ldr	x1, [x0, #184]
  47098c:	ldr	x0, [sp, #104]
  470990:	lsl	x0, x0, #3
  470994:	add	x0, x1, x0
  470998:	ldr	x0, [x0]
  47099c:	str	x0, [sp, #96]
  4709a0:	ldr	x0, [sp, #40]
  4709a4:	ldr	x1, [x0, #184]
  4709a8:	ldr	x0, [sp, #160]
  4709ac:	lsl	x0, x0, #3
  4709b0:	add	x0, x1, x0
  4709b4:	ldr	x0, [x0]
  4709b8:	cmp	x0, #0x0
  4709bc:	b.eq	4709e0 <_obstack_memory_used@@Base+0x138a0>  // b.none
  4709c0:	ldr	x0, [sp, #40]
  4709c4:	ldr	x1, [x0, #184]
  4709c8:	ldr	x0, [sp, #160]
  4709cc:	lsl	x0, x0, #3
  4709d0:	add	x0, x1, x0
  4709d4:	ldr	x0, [x0]
  4709d8:	ldr	x0, [x0, #16]
  4709dc:	b	4709e4 <_obstack_memory_used@@Base+0x138a4>
  4709e0:	mov	x0, #0x0                   	// #0
  4709e4:	str	x0, [sp, #88]
  4709e8:	ldr	x0, [sp, #96]
  4709ec:	cmp	x0, #0x0
  4709f0:	b.ne	470a70 <_obstack_memory_used@@Base+0x13930>  // b.any
  4709f4:	ldr	x0, [sp, #40]
  4709f8:	ldr	x1, [x0, #184]
  4709fc:	ldr	x0, [sp, #104]
  470a00:	lsl	x0, x0, #3
  470a04:	add	x19, x1, x0
  470a08:	add	x0, sp, #0x54
  470a0c:	ldr	w3, [sp, #140]
  470a10:	ldr	x2, [sp, #112]
  470a14:	ldr	x1, [sp, #168]
  470a18:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  470a1c:	str	x0, [x19]
  470a20:	ldr	x0, [sp, #40]
  470a24:	ldr	x1, [x0, #184]
  470a28:	ldr	x0, [sp, #104]
  470a2c:	lsl	x0, x0, #3
  470a30:	add	x0, x1, x0
  470a34:	ldr	x0, [x0]
  470a38:	cmp	x0, #0x0
  470a3c:	cset	w0, eq  // eq = none
  470a40:	and	w0, w0, #0xff
  470a44:	and	x0, x0, #0xff
  470a48:	cmp	x0, #0x0
  470a4c:	b.eq	470b34 <_obstack_memory_used@@Base+0x139f4>  // b.none
  470a50:	ldr	w0, [sp, #84]
  470a54:	cmp	w0, #0x0
  470a58:	cset	w0, ne  // ne = any
  470a5c:	and	w0, w0, #0xff
  470a60:	and	x0, x0, #0xff
  470a64:	cmp	x0, #0x0
  470a68:	b.eq	470b34 <_obstack_memory_used@@Base+0x139f4>  // b.none
  470a6c:	b	470c40 <_obstack_memory_used@@Base+0x13b00>
  470a70:	ldr	x0, [sp, #96]
  470a74:	ldr	x1, [x0, #80]
  470a78:	add	x0, sp, #0x38
  470a7c:	ldr	x2, [sp, #112]
  470a80:	bl	46083c <_obstack_memory_used@@Base+0x36fc>
  470a84:	str	w0, [sp, #84]
  470a88:	ldr	w0, [sp, #84]
  470a8c:	cmp	w0, #0x0
  470a90:	cset	w0, ne  // ne = any
  470a94:	and	w0, w0, #0xff
  470a98:	and	x0, x0, #0xff
  470a9c:	cmp	x0, #0x0
  470aa0:	b.eq	470ab0 <_obstack_memory_used@@Base+0x13970>  // b.none
  470aa4:	ldr	x0, [sp, #72]
  470aa8:	bl	404880 <free@plt>
  470aac:	b	470c40 <_obstack_memory_used@@Base+0x13b00>
  470ab0:	ldr	x0, [sp, #40]
  470ab4:	ldr	x1, [x0, #184]
  470ab8:	ldr	x0, [sp, #104]
  470abc:	lsl	x0, x0, #3
  470ac0:	add	x19, x1, x0
  470ac4:	add	x1, sp, #0x38
  470ac8:	add	x0, sp, #0x54
  470acc:	ldr	w3, [sp, #140]
  470ad0:	mov	x2, x1
  470ad4:	ldr	x1, [sp, #168]
  470ad8:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  470adc:	str	x0, [x19]
  470ae0:	ldr	x0, [sp, #72]
  470ae4:	bl	404880 <free@plt>
  470ae8:	ldr	x0, [sp, #40]
  470aec:	ldr	x1, [x0, #184]
  470af0:	ldr	x0, [sp, #104]
  470af4:	lsl	x0, x0, #3
  470af8:	add	x0, x1, x0
  470afc:	ldr	x0, [x0]
  470b00:	cmp	x0, #0x0
  470b04:	cset	w0, eq  // eq = none
  470b08:	and	w0, w0, #0xff
  470b0c:	and	x0, x0, #0xff
  470b10:	cmp	x0, #0x0
  470b14:	b.eq	470b34 <_obstack_memory_used@@Base+0x139f4>  // b.none
  470b18:	ldr	w0, [sp, #84]
  470b1c:	cmp	w0, #0x0
  470b20:	cset	w0, ne  // ne = any
  470b24:	and	w0, w0, #0xff
  470b28:	and	x0, x0, #0xff
  470b2c:	cmp	x0, #0x0
  470b30:	b.ne	470c2c <_obstack_memory_used@@Base+0x13aec>  // b.any
  470b34:	ldr	x0, [sp, #120]
  470b38:	cmp	x0, #0x0
  470b3c:	b.ne	470bcc <_obstack_memory_used@@Base+0x13a8c>  // b.any
  470b40:	ldr	x0, [sp, #40]
  470b44:	ldr	x1, [x0, #184]
  470b48:	ldr	x0, [sp, #160]
  470b4c:	lsl	x0, x0, #3
  470b50:	add	x0, x1, x0
  470b54:	ldr	x0, [x0]
  470b58:	ldr	x0, [x0, #16]
  470b5c:	ldr	x1, [sp, #88]
  470b60:	cmp	x1, x0
  470b64:	b.ge	470bcc <_obstack_memory_used@@Base+0x13a8c>  // b.tcont
  470b68:	ldr	x2, [sp, #160]
  470b6c:	ldr	x1, [sp, #112]
  470b70:	ldr	x0, [sp, #40]
  470b74:	bl	470198 <_obstack_memory_used@@Base+0x13058>
  470b78:	str	w0, [sp, #84]
  470b7c:	ldr	w0, [sp, #84]
  470b80:	cmp	w0, #0x0
  470b84:	cset	w0, ne  // ne = any
  470b88:	and	w0, w0, #0xff
  470b8c:	and	x0, x0, #0xff
  470b90:	cmp	x0, #0x0
  470b94:	b.ne	470c34 <_obstack_memory_used@@Base+0x13af4>  // b.any
  470b98:	ldr	x1, [sp, #112]
  470b9c:	ldr	x0, [sp, #40]
  470ba0:	bl	4706ac <_obstack_memory_used@@Base+0x1356c>
  470ba4:	str	w0, [sp, #84]
  470ba8:	ldr	w0, [sp, #84]
  470bac:	cmp	w0, #0x0
  470bb0:	cset	w0, ne  // ne = any
  470bb4:	and	w0, w0, #0xff
  470bb8:	and	x0, x0, #0xff
  470bbc:	cmp	x0, #0x0
  470bc0:	b.ne	470c3c <_obstack_memory_used@@Base+0x13afc>  // b.any
  470bc4:	b	470bcc <_obstack_memory_used@@Base+0x13a8c>
  470bc8:	nop
  470bcc:	ldr	x0, [sp, #176]
  470bd0:	add	x0, x0, #0x1
  470bd4:	str	x0, [sp, #176]
  470bd8:	ldr	x0, [sp, #40]
  470bdc:	ldr	x0, [x0, #200]
  470be0:	ldr	x1, [sp, #176]
  470be4:	cmp	x1, x0
  470be8:	b.lt	470848 <_obstack_memory_used@@Base+0x13708>  // b.tstop
  470bec:	b	470bfc <_obstack_memory_used@@Base+0x13abc>
  470bf0:	nop
  470bf4:	b	470bfc <_obstack_memory_used@@Base+0x13abc>
  470bf8:	nop
  470bfc:	ldr	x0, [sp, #184]
  470c00:	add	x0, x0, #0x1
  470c04:	str	x0, [sp, #184]
  470c08:	ldr	x0, [sp, #32]
  470c0c:	ldr	x0, [x0, #8]
  470c10:	ldr	x1, [sp, #184]
  470c14:	cmp	x1, x0
  470c18:	b.lt	4706e0 <_obstack_memory_used@@Base+0x135a0>  // b.tstop
  470c1c:	str	wzr, [sp, #84]
  470c20:	b	470c40 <_obstack_memory_used@@Base+0x13b00>
  470c24:	nop
  470c28:	b	470c40 <_obstack_memory_used@@Base+0x13b00>
  470c2c:	nop
  470c30:	b	470c40 <_obstack_memory_used@@Base+0x13b00>
  470c34:	nop
  470c38:	b	470c40 <_obstack_memory_used@@Base+0x13b00>
  470c3c:	nop
  470c40:	ldr	w0, [sp, #84]
  470c44:	ldr	x19, [sp, #16]
  470c48:	ldp	x29, x30, [sp], #192
  470c4c:	ret
  470c50:	stp	x29, x30, [sp, #-176]!
  470c54:	mov	x29, sp
  470c58:	str	x0, [sp, #40]
  470c5c:	str	x1, [sp, #32]
  470c60:	str	x2, [sp, #24]
  470c64:	ldr	x0, [sp, #40]
  470c68:	ldr	x0, [x0, #152]
  470c6c:	str	x0, [sp, #120]
  470c70:	ldr	x0, [sp, #40]
  470c74:	ldr	x0, [x0, #8]
  470c78:	str	x0, [sp, #160]
  470c7c:	ldr	x1, [sp, #24]
  470c80:	ldr	x0, [sp, #40]
  470c84:	bl	474800 <_obstack_memory_used@@Base+0x176c0>
  470c88:	str	x0, [sp, #112]
  470c8c:	ldr	x0, [sp, #112]
  470c90:	cmn	x0, #0x1
  470c94:	b.eq	470cf0 <_obstack_memory_used@@Base+0x13bb0>  // b.none
  470c98:	ldr	x0, [sp, #40]
  470c9c:	ldr	x2, [x0, #216]
  470ca0:	ldr	x1, [sp, #112]
  470ca4:	mov	x0, x1
  470ca8:	lsl	x0, x0, #2
  470cac:	add	x0, x0, x1
  470cb0:	lsl	x0, x0, #3
  470cb4:	add	x0, x2, x0
  470cb8:	str	x0, [sp, #152]
  470cbc:	ldr	x0, [sp, #152]
  470cc0:	ldr	x0, [x0]
  470cc4:	ldr	x1, [sp, #32]
  470cc8:	cmp	x1, x0
  470ccc:	b.ne	470cd8 <_obstack_memory_used@@Base+0x13b98>  // b.any
  470cd0:	mov	w0, #0x0                   	// #0
  470cd4:	b	471254 <_obstack_memory_used@@Base+0x14114>
  470cd8:	ldr	x0, [sp, #152]
  470cdc:	add	x1, x0, #0x28
  470ce0:	str	x1, [sp, #152]
  470ce4:	ldrb	w0, [x0, #32]
  470ce8:	cmp	w0, #0x0
  470cec:	b.ne	470cbc <_obstack_memory_used@@Base+0x13b7c>  // b.any
  470cf0:	ldr	x0, [sp, #120]
  470cf4:	ldr	x1, [x0]
  470cf8:	ldr	x0, [sp, #32]
  470cfc:	lsl	x0, x0, #4
  470d00:	add	x0, x1, x0
  470d04:	ldr	x0, [x0]
  470d08:	str	x0, [sp, #104]
  470d0c:	str	xzr, [sp, #168]
  470d10:	b	47123c <_obstack_memory_used@@Base+0x140fc>
  470d14:	ldr	x0, [sp, #40]
  470d18:	ldr	x1, [x0, #248]
  470d1c:	ldr	x0, [sp, #168]
  470d20:	lsl	x0, x0, #3
  470d24:	add	x0, x1, x0
  470d28:	ldr	x0, [x0]
  470d2c:	str	x0, [sp, #96]
  470d30:	ldr	x0, [sp, #120]
  470d34:	ldr	x1, [x0]
  470d38:	ldr	x0, [sp, #96]
  470d3c:	ldr	x0, [x0, #8]
  470d40:	lsl	x0, x0, #4
  470d44:	add	x0, x1, x0
  470d48:	ldr	x0, [x0]
  470d4c:	ldr	x1, [sp, #104]
  470d50:	cmp	x1, x0
  470d54:	b.ne	471214 <_obstack_memory_used@@Base+0x140d4>  // b.any
  470d58:	ldr	x0, [sp, #96]
  470d5c:	ldr	x0, [x0]
  470d60:	str	x0, [sp, #136]
  470d64:	ldr	x0, [sp, #24]
  470d68:	str	x0, [sp, #128]
  470d6c:	str	xzr, [sp, #144]
  470d70:	b	470f00 <_obstack_memory_used@@Base+0x13dc0>
  470d74:	ldr	x0, [sp, #96]
  470d78:	ldr	x1, [x0, #40]
  470d7c:	ldr	x0, [sp, #144]
  470d80:	lsl	x0, x0, #3
  470d84:	add	x0, x1, x0
  470d88:	ldr	x0, [x0]
  470d8c:	str	x0, [sp, #88]
  470d90:	ldr	x0, [sp, #88]
  470d94:	ldr	x1, [x0, #8]
  470d98:	ldr	x0, [sp, #136]
  470d9c:	sub	x0, x1, x0
  470da0:	str	x0, [sp, #80]
  470da4:	ldr	x0, [sp, #80]
  470da8:	cmp	x0, #0x0
  470dac:	b.le	470e78 <_obstack_memory_used@@Base+0x13d38>
  470db0:	ldr	x1, [sp, #128]
  470db4:	ldr	x0, [sp, #80]
  470db8:	add	x1, x1, x0
  470dbc:	ldr	x0, [sp, #40]
  470dc0:	ldr	x0, [x0, #48]
  470dc4:	cmp	x1, x0
  470dc8:	cset	w0, gt
  470dcc:	and	w0, w0, #0xff
  470dd0:	and	x0, x0, #0xff
  470dd4:	cmp	x0, #0x0
  470dd8:	b.eq	470e44 <_obstack_memory_used@@Base+0x13d04>  // b.none
  470ddc:	ldr	x1, [sp, #128]
  470de0:	ldr	x0, [sp, #80]
  470de4:	add	x1, x1, x0
  470de8:	ldr	x0, [sp, #40]
  470dec:	ldr	x0, [x0, #88]
  470df0:	cmp	x1, x0
  470df4:	b.gt	470f18 <_obstack_memory_used@@Base+0x13dd8>
  470df8:	ldr	x1, [sp, #128]
  470dfc:	ldr	x0, [sp, #80]
  470e00:	add	x0, x1, x0
  470e04:	mov	x1, x0
  470e08:	ldr	x0, [sp, #40]
  470e0c:	bl	46e524 <_obstack_memory_used@@Base+0x113e4>
  470e10:	str	w0, [sp, #76]
  470e14:	ldr	w0, [sp, #76]
  470e18:	cmp	w0, #0x0
  470e1c:	cset	w0, ne  // ne = any
  470e20:	and	w0, w0, #0xff
  470e24:	and	x0, x0, #0xff
  470e28:	cmp	x0, #0x0
  470e2c:	b.eq	470e38 <_obstack_memory_used@@Base+0x13cf8>  // b.none
  470e30:	ldr	w0, [sp, #76]
  470e34:	b	471254 <_obstack_memory_used@@Base+0x14114>
  470e38:	ldr	x0, [sp, #40]
  470e3c:	ldr	x0, [x0, #8]
  470e40:	str	x0, [sp, #160]
  470e44:	ldr	x0, [sp, #128]
  470e48:	ldr	x1, [sp, #160]
  470e4c:	add	x3, x1, x0
  470e50:	ldr	x0, [sp, #136]
  470e54:	ldr	x1, [sp, #160]
  470e58:	add	x0, x1, x0
  470e5c:	ldr	x1, [sp, #80]
  470e60:	mov	x2, x1
  470e64:	mov	x1, x0
  470e68:	mov	x0, x3
  470e6c:	bl	404790 <memcmp@plt>
  470e70:	cmp	w0, #0x0
  470e74:	b.ne	470f20 <_obstack_memory_used@@Base+0x13de0>  // b.any
  470e78:	ldr	x1, [sp, #128]
  470e7c:	ldr	x0, [sp, #80]
  470e80:	add	x0, x1, x0
  470e84:	str	x0, [sp, #128]
  470e88:	ldr	x1, [sp, #136]
  470e8c:	ldr	x0, [sp, #80]
  470e90:	add	x0, x1, x0
  470e94:	str	x0, [sp, #136]
  470e98:	ldr	x4, [sp, #24]
  470e9c:	ldr	x3, [sp, #32]
  470ea0:	ldr	x2, [sp, #88]
  470ea4:	ldr	x1, [sp, #96]
  470ea8:	ldr	x0, [sp, #40]
  470eac:	bl	47125c <_obstack_memory_used@@Base+0x1411c>
  470eb0:	str	w0, [sp, #76]
  470eb4:	ldr	x0, [sp, #40]
  470eb8:	ldr	x0, [x0, #8]
  470ebc:	str	x0, [sp, #160]
  470ec0:	ldr	w0, [sp, #76]
  470ec4:	cmp	w0, #0x1
  470ec8:	b.eq	470ef0 <_obstack_memory_used@@Base+0x13db0>  // b.none
  470ecc:	ldr	w0, [sp, #76]
  470ed0:	cmp	w0, #0x0
  470ed4:	cset	w0, ne  // ne = any
  470ed8:	and	w0, w0, #0xff
  470edc:	and	x0, x0, #0xff
  470ee0:	cmp	x0, #0x0
  470ee4:	b.eq	470ef4 <_obstack_memory_used@@Base+0x13db4>  // b.none
  470ee8:	ldr	w0, [sp, #76]
  470eec:	b	471254 <_obstack_memory_used@@Base+0x14114>
  470ef0:	nop
  470ef4:	ldr	x0, [sp, #144]
  470ef8:	add	x0, x0, #0x1
  470efc:	str	x0, [sp, #144]
  470f00:	ldr	x0, [sp, #96]
  470f04:	ldr	x0, [x0, #32]
  470f08:	ldr	x1, [sp, #144]
  470f0c:	cmp	x1, x0
  470f10:	b.lt	470d74 <_obstack_memory_used@@Base+0x13c34>  // b.tstop
  470f14:	b	470f24 <_obstack_memory_used@@Base+0x13de4>
  470f18:	nop
  470f1c:	b	470f24 <_obstack_memory_used@@Base+0x13de4>
  470f20:	nop
  470f24:	ldr	x0, [sp, #96]
  470f28:	ldr	x0, [x0, #32]
  470f2c:	ldr	x1, [sp, #144]
  470f30:	cmp	x1, x0
  470f34:	b.lt	47121c <_obstack_memory_used@@Base+0x140dc>  // b.tstop
  470f38:	ldr	x0, [sp, #144]
  470f3c:	cmp	x0, #0x0
  470f40:	b.le	471200 <_obstack_memory_used@@Base+0x140c0>
  470f44:	ldr	x0, [sp, #136]
  470f48:	add	x0, x0, #0x1
  470f4c:	str	x0, [sp, #136]
  470f50:	b	471200 <_obstack_memory_used@@Base+0x140c0>
  470f54:	ldr	x0, [sp, #96]
  470f58:	ldr	x0, [x0]
  470f5c:	ldr	x1, [sp, #136]
  470f60:	sub	x0, x1, x0
  470f64:	str	x0, [sp, #64]
  470f68:	ldr	x0, [sp, #64]
  470f6c:	cmp	x0, #0x0
  470f70:	b.le	47102c <_obstack_memory_used@@Base+0x13eec>
  470f74:	ldr	x0, [sp, #40]
  470f78:	ldr	x0, [x0, #48]
  470f7c:	ldr	x1, [sp, #128]
  470f80:	cmp	x1, x0
  470f84:	cset	w0, ge  // ge = tcont
  470f88:	and	w0, w0, #0xff
  470f8c:	and	x0, x0, #0xff
  470f90:	cmp	x0, #0x0
  470f94:	b.eq	470ff4 <_obstack_memory_used@@Base+0x13eb4>  // b.none
  470f98:	ldr	x0, [sp, #40]
  470f9c:	ldr	x0, [x0, #88]
  470fa0:	ldr	x1, [sp, #128]
  470fa4:	cmp	x1, x0
  470fa8:	b.ge	471224 <_obstack_memory_used@@Base+0x140e4>  // b.tcont
  470fac:	ldr	x0, [sp, #128]
  470fb0:	add	w0, w0, #0x1
  470fb4:	mov	w1, w0
  470fb8:	ldr	x0, [sp, #40]
  470fbc:	bl	4740c4 <_obstack_memory_used@@Base+0x16f84>
  470fc0:	str	w0, [sp, #76]
  470fc4:	ldr	w0, [sp, #76]
  470fc8:	cmp	w0, #0x0
  470fcc:	cset	w0, ne  // ne = any
  470fd0:	and	w0, w0, #0xff
  470fd4:	and	x0, x0, #0xff
  470fd8:	cmp	x0, #0x0
  470fdc:	b.eq	470fe8 <_obstack_memory_used@@Base+0x13ea8>  // b.none
  470fe0:	ldr	w0, [sp, #76]
  470fe4:	b	471254 <_obstack_memory_used@@Base+0x14114>
  470fe8:	ldr	x0, [sp, #40]
  470fec:	ldr	x0, [x0, #8]
  470ff0:	str	x0, [sp, #160]
  470ff4:	ldr	x0, [sp, #128]
  470ff8:	add	x1, x0, #0x1
  470ffc:	str	x1, [sp, #128]
  471000:	mov	x1, x0
  471004:	ldr	x0, [sp, #160]
  471008:	add	x0, x0, x1
  47100c:	ldrb	w1, [x0]
  471010:	ldr	x0, [sp, #136]
  471014:	sub	x0, x0, #0x1
  471018:	ldr	x2, [sp, #160]
  47101c:	add	x0, x2, x0
  471020:	ldrb	w0, [x0]
  471024:	cmp	w1, w0
  471028:	b.ne	47122c <_obstack_memory_used@@Base+0x140ec>  // b.any
  47102c:	ldr	x0, [sp, #40]
  471030:	ldr	x1, [x0, #184]
  471034:	ldr	x0, [sp, #136]
  471038:	lsl	x0, x0, #3
  47103c:	add	x0, x1, x0
  471040:	ldr	x0, [x0]
  471044:	cmp	x0, #0x0
  471048:	b.eq	4711d8 <_obstack_memory_used@@Base+0x14098>  // b.none
  47104c:	ldr	x0, [sp, #40]
  471050:	ldr	x1, [x0, #184]
  471054:	ldr	x0, [sp, #136]
  471058:	lsl	x0, x0, #3
  47105c:	add	x0, x1, x0
  471060:	ldr	x0, [x0]
  471064:	add	x0, x0, #0x8
  471068:	str	x0, [sp, #56]
  47106c:	mov	w3, #0x9                   	// #9
  471070:	ldr	x2, [sp, #104]
  471074:	ldr	x1, [sp, #56]
  471078:	ldr	x0, [sp, #120]
  47107c:	bl	471344 <_obstack_memory_used@@Base+0x14204>
  471080:	str	x0, [sp, #48]
  471084:	ldr	x0, [sp, #48]
  471088:	cmn	x0, #0x1
  47108c:	b.eq	4711e0 <_obstack_memory_used@@Base+0x140a0>  // b.none
  471090:	ldr	x0, [sp, #96]
  471094:	ldr	x0, [x0, #16]
  471098:	cmp	x0, #0x0
  47109c:	b.ne	4710e4 <_obstack_memory_used@@Base+0x13fa4>  // b.any
  4710a0:	ldr	x0, [sp, #96]
  4710a4:	ldr	x0, [x0]
  4710a8:	ldr	x1, [sp, #136]
  4710ac:	sub	x0, x1, x0
  4710b0:	add	x0, x0, #0x1
  4710b4:	mov	x1, x0
  4710b8:	mov	x0, #0x18                  	// #24
  4710bc:	bl	404560 <calloc@plt>
  4710c0:	mov	x1, x0
  4710c4:	ldr	x0, [sp, #96]
  4710c8:	str	x1, [x0, #16]
  4710cc:	ldr	x0, [sp, #96]
  4710d0:	ldr	x0, [x0, #16]
  4710d4:	cmp	x0, #0x0
  4710d8:	b.ne	4710e4 <_obstack_memory_used@@Base+0x13fa4>  // b.any
  4710dc:	mov	w0, #0xc                   	// #12
  4710e0:	b	471254 <_obstack_memory_used@@Base+0x14114>
  4710e4:	ldr	x0, [sp, #96]
  4710e8:	ldr	x1, [x0, #16]
  4710ec:	ldr	x0, [sp, #96]
  4710f0:	ldr	x2, [x0, #8]
  4710f4:	ldr	x0, [sp, #96]
  4710f8:	ldr	x0, [x0]
  4710fc:	mov	w6, #0x9                   	// #9
  471100:	ldr	x5, [sp, #136]
  471104:	ldr	x4, [sp, #48]
  471108:	mov	x3, x0
  47110c:	ldr	x0, [sp, #40]
  471110:	bl	4713f4 <_obstack_memory_used@@Base+0x142b4>
  471114:	str	w0, [sp, #76]
  471118:	ldr	w0, [sp, #76]
  47111c:	cmp	w0, #0x1
  471120:	b.eq	4711e8 <_obstack_memory_used@@Base+0x140a8>  // b.none
  471124:	ldr	w0, [sp, #76]
  471128:	cmp	w0, #0x0
  47112c:	cset	w0, ne  // ne = any
  471130:	and	w0, w0, #0xff
  471134:	and	x0, x0, #0xff
  471138:	cmp	x0, #0x0
  47113c:	b.eq	471148 <_obstack_memory_used@@Base+0x14008>  // b.none
  471140:	ldr	w0, [sp, #76]
  471144:	b	471254 <_obstack_memory_used@@Base+0x14114>
  471148:	ldr	x2, [sp, #136]
  47114c:	ldr	x1, [sp, #48]
  471150:	ldr	x0, [sp, #96]
  471154:	bl	474a64 <_obstack_memory_used@@Base+0x17924>
  471158:	str	x0, [sp, #88]
  47115c:	ldr	x0, [sp, #88]
  471160:	cmp	x0, #0x0
  471164:	cset	w0, eq  // eq = none
  471168:	and	w0, w0, #0xff
  47116c:	and	x0, x0, #0xff
  471170:	cmp	x0, #0x0
  471174:	b.eq	471180 <_obstack_memory_used@@Base+0x14040>  // b.none
  471178:	mov	w0, #0xc                   	// #12
  47117c:	b	471254 <_obstack_memory_used@@Base+0x14114>
  471180:	ldr	x4, [sp, #24]
  471184:	ldr	x3, [sp, #32]
  471188:	ldr	x2, [sp, #88]
  47118c:	ldr	x1, [sp, #96]
  471190:	ldr	x0, [sp, #40]
  471194:	bl	47125c <_obstack_memory_used@@Base+0x1411c>
  471198:	str	w0, [sp, #76]
  47119c:	ldr	x0, [sp, #40]
  4711a0:	ldr	x0, [x0, #8]
  4711a4:	str	x0, [sp, #160]
  4711a8:	ldr	w0, [sp, #76]
  4711ac:	cmp	w0, #0x1
  4711b0:	b.eq	4711f0 <_obstack_memory_used@@Base+0x140b0>  // b.none
  4711b4:	ldr	w0, [sp, #76]
  4711b8:	cmp	w0, #0x0
  4711bc:	cset	w0, ne  // ne = any
  4711c0:	and	w0, w0, #0xff
  4711c4:	and	x0, x0, #0xff
  4711c8:	cmp	x0, #0x0
  4711cc:	b.eq	4711f4 <_obstack_memory_used@@Base+0x140b4>  // b.none
  4711d0:	ldr	w0, [sp, #76]
  4711d4:	b	471254 <_obstack_memory_used@@Base+0x14114>
  4711d8:	nop
  4711dc:	b	4711f4 <_obstack_memory_used@@Base+0x140b4>
  4711e0:	nop
  4711e4:	b	4711f4 <_obstack_memory_used@@Base+0x140b4>
  4711e8:	nop
  4711ec:	b	4711f4 <_obstack_memory_used@@Base+0x140b4>
  4711f0:	nop
  4711f4:	ldr	x0, [sp, #136]
  4711f8:	add	x0, x0, #0x1
  4711fc:	str	x0, [sp, #136]
  471200:	ldr	x1, [sp, #136]
  471204:	ldr	x0, [sp, #24]
  471208:	cmp	x1, x0
  47120c:	b.le	470f54 <_obstack_memory_used@@Base+0x13e14>
  471210:	b	471230 <_obstack_memory_used@@Base+0x140f0>
  471214:	nop
  471218:	b	471230 <_obstack_memory_used@@Base+0x140f0>
  47121c:	nop
  471220:	b	471230 <_obstack_memory_used@@Base+0x140f0>
  471224:	nop
  471228:	b	471230 <_obstack_memory_used@@Base+0x140f0>
  47122c:	nop
  471230:	ldr	x0, [sp, #168]
  471234:	add	x0, x0, #0x1
  471238:	str	x0, [sp, #168]
  47123c:	ldr	x0, [sp, #40]
  471240:	ldr	x0, [x0, #232]
  471244:	ldr	x1, [sp, #168]
  471248:	cmp	x1, x0
  47124c:	b.lt	470d14 <_obstack_memory_used@@Base+0x13bd4>  // b.tstop
  471250:	mov	w0, #0x0                   	// #0
  471254:	ldp	x29, x30, [sp], #176
  471258:	ret
  47125c:	stp	x29, x30, [sp, #-80]!
  471260:	mov	x29, sp
  471264:	str	x0, [sp, #56]
  471268:	str	x1, [sp, #48]
  47126c:	str	x2, [sp, #40]
  471270:	str	x3, [sp, #32]
  471274:	str	x4, [sp, #24]
  471278:	ldr	x0, [sp, #40]
  47127c:	add	x1, x0, #0x10
  471280:	ldr	x0, [sp, #40]
  471284:	ldr	x2, [x0]
  471288:	ldr	x0, [sp, #40]
  47128c:	ldr	x0, [x0, #8]
  471290:	mov	w6, #0x8                   	// #8
  471294:	ldr	x5, [sp, #24]
  471298:	ldr	x4, [sp, #32]
  47129c:	mov	x3, x0
  4712a0:	ldr	x0, [sp, #56]
  4712a4:	bl	4713f4 <_obstack_memory_used@@Base+0x142b4>
  4712a8:	str	w0, [sp, #76]
  4712ac:	ldr	w0, [sp, #76]
  4712b0:	cmp	w0, #0x0
  4712b4:	b.eq	4712c0 <_obstack_memory_used@@Base+0x14180>  // b.none
  4712b8:	ldr	w0, [sp, #76]
  4712bc:	b	47133c <_obstack_memory_used@@Base+0x141fc>
  4712c0:	ldr	x0, [sp, #48]
  4712c4:	ldr	x1, [x0]
  4712c8:	ldr	x0, [sp, #40]
  4712cc:	ldr	x0, [x0, #8]
  4712d0:	mov	x4, x0
  4712d4:	mov	x3, x1
  4712d8:	ldr	x2, [sp, #24]
  4712dc:	ldr	x1, [sp, #32]
  4712e0:	ldr	x0, [sp, #56]
  4712e4:	bl	4744e8 <_obstack_memory_used@@Base+0x173a8>
  4712e8:	str	w0, [sp, #76]
  4712ec:	ldr	w0, [sp, #76]
  4712f0:	cmp	w0, #0x0
  4712f4:	cset	w0, ne  // ne = any
  4712f8:	and	w0, w0, #0xff
  4712fc:	and	x0, x0, #0xff
  471300:	cmp	x0, #0x0
  471304:	b.eq	471310 <_obstack_memory_used@@Base+0x141d0>  // b.none
  471308:	ldr	w0, [sp, #76]
  47130c:	b	47133c <_obstack_memory_used@@Base+0x141fc>
  471310:	ldr	x0, [sp, #40]
  471314:	ldr	x1, [x0, #8]
  471318:	ldr	x0, [sp, #24]
  47131c:	add	x1, x1, x0
  471320:	ldr	x0, [sp, #48]
  471324:	ldr	x0, [x0]
  471328:	sub	x0, x1, x0
  47132c:	str	x0, [sp, #64]
  471330:	ldr	x1, [sp, #64]
  471334:	ldr	x0, [sp, #56]
  471338:	bl	46e524 <_obstack_memory_used@@Base+0x113e4>
  47133c:	ldp	x29, x30, [sp], #80
  471340:	ret
  471344:	sub	sp, sp, #0x40
  471348:	str	x0, [sp, #24]
  47134c:	str	x1, [sp, #16]
  471350:	str	x2, [sp, #8]
  471354:	str	w3, [sp, #4]
  471358:	str	xzr, [sp, #56]
  47135c:	b	4713d4 <_obstack_memory_used@@Base+0x14294>
  471360:	ldr	x0, [sp, #16]
  471364:	ldr	x1, [x0, #16]
  471368:	ldr	x0, [sp, #56]
  47136c:	lsl	x0, x0, #3
  471370:	add	x0, x1, x0
  471374:	ldr	x0, [x0]
  471378:	str	x0, [sp, #48]
  47137c:	ldr	x0, [sp, #24]
  471380:	ldr	x1, [x0]
  471384:	ldr	x0, [sp, #48]
  471388:	lsl	x0, x0, #4
  47138c:	add	x0, x1, x0
  471390:	str	x0, [sp, #40]
  471394:	ldr	x0, [sp, #40]
  471398:	ldrb	w0, [x0, #8]
  47139c:	mov	w1, w0
  4713a0:	ldr	w0, [sp, #4]
  4713a4:	cmp	w0, w1
  4713a8:	b.ne	4713c8 <_obstack_memory_used@@Base+0x14288>  // b.any
  4713ac:	ldr	x0, [sp, #40]
  4713b0:	ldr	x0, [x0]
  4713b4:	ldr	x1, [sp, #8]
  4713b8:	cmp	x1, x0
  4713bc:	b.ne	4713c8 <_obstack_memory_used@@Base+0x14288>  // b.any
  4713c0:	ldr	x0, [sp, #48]
  4713c4:	b	4713ec <_obstack_memory_used@@Base+0x142ac>
  4713c8:	ldr	x0, [sp, #56]
  4713cc:	add	x0, x0, #0x1
  4713d0:	str	x0, [sp, #56]
  4713d4:	ldr	x0, [sp, #16]
  4713d8:	ldr	x0, [x0, #8]
  4713dc:	ldr	x1, [sp, #56]
  4713e0:	cmp	x1, x0
  4713e4:	b.lt	471360 <_obstack_memory_used@@Base+0x14220>  // b.tstop
  4713e8:	mov	x0, #0xffffffffffffffff    	// #-1
  4713ec:	add	sp, sp, #0x40
  4713f0:	ret
  4713f4:	stp	x29, x30, [sp, #-224]!
  4713f8:	mov	x29, sp
  4713fc:	str	x0, [sp, #72]
  471400:	str	x1, [sp, #64]
  471404:	str	x2, [sp, #56]
  471408:	str	x3, [sp, #48]
  47140c:	str	x4, [sp, #40]
  471410:	str	x5, [sp, #32]
  471414:	str	w6, [sp, #28]
  471418:	ldr	x0, [sp, #72]
  47141c:	ldr	x0, [x0, #152]
  471420:	str	x0, [sp, #192]
  471424:	str	wzr, [sp, #116]
  471428:	str	xzr, [sp, #200]
  47142c:	ldr	x0, [sp, #192]
  471430:	ldr	x1, [x0]
  471434:	ldr	x0, [sp, #56]
  471438:	lsl	x0, x0, #4
  47143c:	add	x0, x1, x0
  471440:	ldr	x0, [x0]
  471444:	str	x0, [sp, #184]
  471448:	ldr	x0, [sp, #72]
  47144c:	ldr	w0, [x0, #224]
  471450:	sxtw	x1, w0
  471454:	ldr	x0, [sp, #32]
  471458:	add	x1, x1, x0
  47145c:	ldr	x0, [sp, #64]
  471460:	ldr	x0, [x0, #8]
  471464:	cmp	x1, x0
  471468:	cset	w0, ge  // ge = tcont
  47146c:	and	w0, w0, #0xff
  471470:	and	x0, x0, #0xff
  471474:	cmp	x0, #0x0
  471478:	b.eq	47159c <_obstack_memory_used@@Base+0x1445c>  // b.none
  47147c:	ldr	x0, [sp, #64]
  471480:	ldr	x0, [x0, #8]
  471484:	str	x0, [sp, #176]
  471488:	ldr	x0, [sp, #72]
  47148c:	ldr	w0, [x0, #224]
  471490:	sxtw	x1, w0
  471494:	ldr	x0, [sp, #32]
  471498:	add	x0, x1, x0
  47149c:	add	x0, x0, #0x1
  4714a0:	str	x0, [sp, #168]
  4714a4:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
  4714a8:	ldr	x0, [sp, #176]
  4714ac:	sub	x0, x1, x0
  4714b0:	ldr	x1, [sp, #168]
  4714b4:	cmp	x1, x0
  4714b8:	cset	w0, gt
  4714bc:	and	w0, w0, #0xff
  4714c0:	and	x0, x0, #0xff
  4714c4:	cmp	x0, #0x0
  4714c8:	b.eq	4714d4 <_obstack_memory_used@@Base+0x14394>  // b.none
  4714cc:	mov	w0, #0xc                   	// #12
  4714d0:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  4714d4:	ldr	x1, [sp, #176]
  4714d8:	ldr	x0, [sp, #168]
  4714dc:	add	x0, x1, x0
  4714e0:	str	x0, [sp, #160]
  4714e4:	ldr	x1, [sp, #160]
  4714e8:	mov	x0, #0x1fffffffffffffff    	// #2305843009213693951
  4714ec:	cmp	x1, x0
  4714f0:	cset	w0, hi  // hi = pmore
  4714f4:	and	w0, w0, #0xff
  4714f8:	and	x0, x0, #0xff
  4714fc:	cmp	x0, #0x0
  471500:	b.eq	47150c <_obstack_memory_used@@Base+0x143cc>  // b.none
  471504:	mov	w0, #0xc                   	// #12
  471508:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  47150c:	ldr	x0, [sp, #64]
  471510:	ldr	x2, [x0, #16]
  471514:	ldr	x0, [sp, #160]
  471518:	lsl	x0, x0, #3
  47151c:	mov	x1, x0
  471520:	mov	x0, x2
  471524:	bl	4045e0 <realloc@plt>
  471528:	str	x0, [sp, #152]
  47152c:	ldr	x0, [sp, #152]
  471530:	cmp	x0, #0x0
  471534:	cset	w0, eq  // eq = none
  471538:	and	w0, w0, #0xff
  47153c:	and	x0, x0, #0xff
  471540:	cmp	x0, #0x0
  471544:	b.eq	471550 <_obstack_memory_used@@Base+0x14410>  // b.none
  471548:	mov	w0, #0xc                   	// #12
  47154c:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  471550:	ldr	x0, [sp, #64]
  471554:	ldr	x1, [sp, #152]
  471558:	str	x1, [x0, #16]
  47155c:	ldr	x0, [sp, #64]
  471560:	ldr	x1, [sp, #160]
  471564:	str	x1, [x0, #8]
  471568:	ldr	x0, [sp, #176]
  47156c:	lsl	x0, x0, #3
  471570:	ldr	x1, [sp, #152]
  471574:	add	x3, x1, x0
  471578:	ldr	x0, [sp, #64]
  47157c:	ldr	x1, [x0, #8]
  471580:	ldr	x0, [sp, #176]
  471584:	sub	x0, x1, x0
  471588:	lsl	x0, x0, #3
  47158c:	mov	x2, x0
  471590:	mov	w1, #0x0                   	// #0
  471594:	mov	x0, x3
  471598:	bl	4044d0 <memset@plt>
  47159c:	ldr	x0, [sp, #64]
  4715a0:	ldr	x0, [x0]
  4715a4:	cmp	x0, #0x0
  4715a8:	b.eq	4715b8 <_obstack_memory_used@@Base+0x14478>  // b.none
  4715ac:	ldr	x0, [sp, #64]
  4715b0:	ldr	x0, [x0]
  4715b4:	b	4715bc <_obstack_memory_used@@Base+0x1447c>
  4715b8:	ldr	x0, [sp, #48]
  4715bc:	str	x0, [sp, #216]
  4715c0:	ldr	x0, [sp, #72]
  4715c4:	ldr	x0, [x0, #184]
  4715c8:	str	x0, [sp, #144]
  4715cc:	ldr	x0, [sp, #72]
  4715d0:	ldr	x0, [x0, #72]
  4715d4:	str	x0, [sp, #136]
  4715d8:	ldr	x0, [sp, #64]
  4715dc:	ldr	x1, [x0, #16]
  4715e0:	ldr	x0, [sp, #72]
  4715e4:	str	x1, [x0, #184]
  4715e8:	ldr	x0, [sp, #72]
  4715ec:	ldr	x1, [sp, #216]
  4715f0:	str	x1, [x0, #72]
  4715f4:	ldr	x3, [sp, #72]
  4715f8:	ldr	x0, [sp, #216]
  4715fc:	sub	x1, x0, #0x1
  471600:	ldr	x0, [sp, #72]
  471604:	ldr	w0, [x0, #160]
  471608:	mov	w2, w0
  47160c:	mov	x0, x3
  471610:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  471614:	str	w0, [sp, #132]
  471618:	ldr	x1, [sp, #216]
  47161c:	ldr	x0, [sp, #48]
  471620:	cmp	x1, x0
  471624:	b.ne	4716a4 <_obstack_memory_used@@Base+0x14564>  // b.any
  471628:	add	x0, sp, #0x58
  47162c:	ldr	x1, [sp, #56]
  471630:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  471634:	str	w0, [sp, #116]
  471638:	ldr	w0, [sp, #116]
  47163c:	cmp	w0, #0x0
  471640:	cset	w0, ne  // ne = any
  471644:	and	w0, w0, #0xff
  471648:	and	x0, x0, #0xff
  47164c:	cmp	x0, #0x0
  471650:	b.eq	47165c <_obstack_memory_used@@Base+0x1451c>  // b.none
  471654:	ldr	w0, [sp, #116]
  471658:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  47165c:	add	x0, sp, #0x58
  471660:	ldr	w3, [sp, #28]
  471664:	ldr	x2, [sp, #184]
  471668:	mov	x1, x0
  47166c:	ldr	x0, [sp, #192]
  471670:	bl	471e2c <_obstack_memory_used@@Base+0x14cec>
  471674:	str	w0, [sp, #116]
  471678:	ldr	w0, [sp, #116]
  47167c:	cmp	w0, #0x0
  471680:	cset	w0, ne  // ne = any
  471684:	and	w0, w0, #0xff
  471688:	and	x0, x0, #0xff
  47168c:	cmp	x0, #0x0
  471690:	b.eq	47172c <_obstack_memory_used@@Base+0x145ec>  // b.none
  471694:	ldr	x0, [sp, #104]
  471698:	bl	404880 <free@plt>
  47169c:	ldr	w0, [sp, #116]
  4716a0:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  4716a4:	ldr	x0, [sp, #72]
  4716a8:	ldr	x1, [x0, #184]
  4716ac:	ldr	x0, [sp, #216]
  4716b0:	lsl	x0, x0, #3
  4716b4:	add	x0, x1, x0
  4716b8:	ldr	x0, [x0]
  4716bc:	str	x0, [sp, #200]
  4716c0:	ldr	x0, [sp, #200]
  4716c4:	cmp	x0, #0x0
  4716c8:	b.eq	47171c <_obstack_memory_used@@Base+0x145dc>  // b.none
  4716cc:	ldr	x0, [sp, #200]
  4716d0:	ldrb	w0, [x0, #104]
  4716d4:	and	w0, w0, #0x40
  4716d8:	and	w0, w0, #0xff
  4716dc:	cmp	w0, #0x0
  4716e0:	b.eq	47171c <_obstack_memory_used@@Base+0x145dc>  // b.none
  4716e4:	ldr	x0, [sp, #200]
  4716e8:	add	x1, x0, #0x8
  4716ec:	add	x0, sp, #0x58
  4716f0:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  4716f4:	str	w0, [sp, #116]
  4716f8:	ldr	w0, [sp, #116]
  4716fc:	cmp	w0, #0x0
  471700:	cset	w0, ne  // ne = any
  471704:	and	w0, w0, #0xff
  471708:	and	x0, x0, #0xff
  47170c:	cmp	x0, #0x0
  471710:	b.eq	47172c <_obstack_memory_used@@Base+0x145ec>  // b.none
  471714:	ldr	w0, [sp, #116]
  471718:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  47171c:	add	x0, sp, #0x58
  471720:	mov	x2, #0x18                  	// #24
  471724:	mov	w1, #0x0                   	// #0
  471728:	bl	4044d0 <memset@plt>
  47172c:	ldr	x1, [sp, #216]
  471730:	ldr	x0, [sp, #48]
  471734:	cmp	x1, x0
  471738:	b.eq	471760 <_obstack_memory_used@@Base+0x14620>  // b.none
  47173c:	ldr	x0, [sp, #200]
  471740:	cmp	x0, #0x0
  471744:	b.eq	471838 <_obstack_memory_used@@Base+0x146f8>  // b.none
  471748:	ldr	x0, [sp, #200]
  47174c:	ldrb	w0, [x0, #104]
  471750:	and	w0, w0, #0x40
  471754:	and	w0, w0, #0xff
  471758:	cmp	w0, #0x0
  47175c:	b.eq	471838 <_obstack_memory_used@@Base+0x146f8>  // b.none
  471760:	ldr	x0, [sp, #96]
  471764:	cmp	x0, #0x0
  471768:	b.eq	4717b8 <_obstack_memory_used@@Base+0x14678>  // b.none
  47176c:	add	x0, sp, #0x58
  471770:	ldr	w4, [sp, #28]
  471774:	ldr	x3, [sp, #184]
  471778:	ldr	x2, [sp, #216]
  47177c:	mov	x1, x0
  471780:	ldr	x0, [sp, #72]
  471784:	bl	4721c4 <_obstack_memory_used@@Base+0x15084>
  471788:	str	w0, [sp, #116]
  47178c:	ldr	w0, [sp, #116]
  471790:	cmp	w0, #0x0
  471794:	cset	w0, ne  // ne = any
  471798:	and	w0, w0, #0xff
  47179c:	and	x0, x0, #0xff
  4717a0:	cmp	x0, #0x0
  4717a4:	b.eq	4717b8 <_obstack_memory_used@@Base+0x14678>  // b.none
  4717a8:	ldr	x0, [sp, #104]
  4717ac:	bl	404880 <free@plt>
  4717b0:	ldr	w0, [sp, #116]
  4717b4:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  4717b8:	add	x1, sp, #0x58
  4717bc:	add	x0, sp, #0x74
  4717c0:	ldr	w3, [sp, #132]
  4717c4:	mov	x2, x1
  4717c8:	ldr	x1, [sp, #192]
  4717cc:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  4717d0:	str	x0, [sp, #200]
  4717d4:	ldr	x0, [sp, #200]
  4717d8:	cmp	x0, #0x0
  4717dc:	cset	w0, eq  // eq = none
  4717e0:	and	w0, w0, #0xff
  4717e4:	and	x0, x0, #0xff
  4717e8:	cmp	x0, #0x0
  4717ec:	b.eq	47181c <_obstack_memory_used@@Base+0x146dc>  // b.none
  4717f0:	ldr	w0, [sp, #116]
  4717f4:	cmp	w0, #0x0
  4717f8:	cset	w0, ne  // ne = any
  4717fc:	and	w0, w0, #0xff
  471800:	and	x0, x0, #0xff
  471804:	cmp	x0, #0x0
  471808:	b.eq	47181c <_obstack_memory_used@@Base+0x146dc>  // b.none
  47180c:	ldr	x0, [sp, #104]
  471810:	bl	404880 <free@plt>
  471814:	ldr	w0, [sp, #116]
  471818:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  47181c:	ldr	x0, [sp, #72]
  471820:	ldr	x1, [x0, #184]
  471824:	ldr	x0, [sp, #216]
  471828:	lsl	x0, x0, #3
  47182c:	add	x0, x1, x0
  471830:	ldr	x1, [sp, #200]
  471834:	str	x1, [x0]
  471838:	str	xzr, [sp, #208]
  47183c:	b	471a8c <_obstack_memory_used@@Base+0x1494c>
  471840:	str	xzr, [sp, #96]
  471844:	ldr	x0, [sp, #72]
  471848:	ldr	x1, [x0, #184]
  47184c:	ldr	x0, [sp, #216]
  471850:	add	x0, x0, #0x1
  471854:	lsl	x0, x0, #3
  471858:	add	x0, x1, x0
  47185c:	ldr	x0, [x0]
  471860:	cmp	x0, #0x0
  471864:	b.eq	4718c0 <_obstack_memory_used@@Base+0x14780>  // b.none
  471868:	ldr	x0, [sp, #72]
  47186c:	ldr	x1, [x0, #184]
  471870:	ldr	x0, [sp, #216]
  471874:	add	x0, x0, #0x1
  471878:	lsl	x0, x0, #3
  47187c:	add	x0, x1, x0
  471880:	ldr	x0, [x0]
  471884:	add	x1, x0, #0x8
  471888:	add	x0, sp, #0x58
  47188c:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  471890:	str	w0, [sp, #116]
  471894:	ldr	w0, [sp, #116]
  471898:	cmp	w0, #0x0
  47189c:	cset	w0, ne  // ne = any
  4718a0:	and	w0, w0, #0xff
  4718a4:	and	x0, x0, #0xff
  4718a8:	cmp	x0, #0x0
  4718ac:	b.eq	4718c0 <_obstack_memory_used@@Base+0x14780>  // b.none
  4718b0:	ldr	x0, [sp, #104]
  4718b4:	bl	404880 <free@plt>
  4718b8:	ldr	w0, [sp, #116]
  4718bc:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  4718c0:	ldr	x0, [sp, #200]
  4718c4:	cmp	x0, #0x0
  4718c8:	b.eq	47191c <_obstack_memory_used@@Base+0x147dc>  // b.none
  4718cc:	ldr	x0, [sp, #200]
  4718d0:	add	x0, x0, #0x20
  4718d4:	add	x1, sp, #0x58
  4718d8:	mov	x3, x1
  4718dc:	mov	x2, x0
  4718e0:	ldr	x1, [sp, #216]
  4718e4:	ldr	x0, [sp, #72]
  4718e8:	bl	471b5c <_obstack_memory_used@@Base+0x14a1c>
  4718ec:	str	w0, [sp, #116]
  4718f0:	ldr	w0, [sp, #116]
  4718f4:	cmp	w0, #0x0
  4718f8:	cset	w0, ne  // ne = any
  4718fc:	and	w0, w0, #0xff
  471900:	and	x0, x0, #0xff
  471904:	cmp	x0, #0x0
  471908:	b.eq	47191c <_obstack_memory_used@@Base+0x147dc>  // b.none
  47190c:	ldr	x0, [sp, #104]
  471910:	bl	404880 <free@plt>
  471914:	ldr	w0, [sp, #116]
  471918:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  47191c:	ldr	x0, [sp, #216]
  471920:	add	x0, x0, #0x1
  471924:	str	x0, [sp, #216]
  471928:	ldr	x0, [sp, #96]
  47192c:	cmp	x0, #0x0
  471930:	b.eq	4719c8 <_obstack_memory_used@@Base+0x14888>  // b.none
  471934:	add	x0, sp, #0x58
  471938:	ldr	w3, [sp, #28]
  47193c:	ldr	x2, [sp, #184]
  471940:	mov	x1, x0
  471944:	ldr	x0, [sp, #192]
  471948:	bl	471e2c <_obstack_memory_used@@Base+0x14cec>
  47194c:	str	w0, [sp, #116]
  471950:	ldr	w0, [sp, #116]
  471954:	cmp	w0, #0x0
  471958:	cset	w0, ne  // ne = any
  47195c:	and	w0, w0, #0xff
  471960:	and	x0, x0, #0xff
  471964:	cmp	x0, #0x0
  471968:	b.eq	47197c <_obstack_memory_used@@Base+0x1483c>  // b.none
  47196c:	ldr	x0, [sp, #104]
  471970:	bl	404880 <free@plt>
  471974:	ldr	w0, [sp, #116]
  471978:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  47197c:	add	x0, sp, #0x58
  471980:	ldr	w4, [sp, #28]
  471984:	ldr	x3, [sp, #184]
  471988:	ldr	x2, [sp, #216]
  47198c:	mov	x1, x0
  471990:	ldr	x0, [sp, #72]
  471994:	bl	4721c4 <_obstack_memory_used@@Base+0x15084>
  471998:	str	w0, [sp, #116]
  47199c:	ldr	w0, [sp, #116]
  4719a0:	cmp	w0, #0x0
  4719a4:	cset	w0, ne  // ne = any
  4719a8:	and	w0, w0, #0xff
  4719ac:	and	x0, x0, #0xff
  4719b0:	cmp	x0, #0x0
  4719b4:	b.eq	4719c8 <_obstack_memory_used@@Base+0x14888>  // b.none
  4719b8:	ldr	x0, [sp, #104]
  4719bc:	bl	404880 <free@plt>
  4719c0:	ldr	w0, [sp, #116]
  4719c4:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  4719c8:	ldr	x3, [sp, #72]
  4719cc:	ldr	x0, [sp, #216]
  4719d0:	sub	x1, x0, #0x1
  4719d4:	ldr	x0, [sp, #72]
  4719d8:	ldr	w0, [x0, #160]
  4719dc:	mov	w2, w0
  4719e0:	mov	x0, x3
  4719e4:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  4719e8:	str	w0, [sp, #132]
  4719ec:	add	x1, sp, #0x58
  4719f0:	add	x0, sp, #0x74
  4719f4:	ldr	w3, [sp, #132]
  4719f8:	mov	x2, x1
  4719fc:	ldr	x1, [sp, #192]
  471a00:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  471a04:	str	x0, [sp, #200]
  471a08:	ldr	x0, [sp, #200]
  471a0c:	cmp	x0, #0x0
  471a10:	cset	w0, eq  // eq = none
  471a14:	and	w0, w0, #0xff
  471a18:	and	x0, x0, #0xff
  471a1c:	cmp	x0, #0x0
  471a20:	b.eq	471a50 <_obstack_memory_used@@Base+0x14910>  // b.none
  471a24:	ldr	w0, [sp, #116]
  471a28:	cmp	w0, #0x0
  471a2c:	cset	w0, ne  // ne = any
  471a30:	and	w0, w0, #0xff
  471a34:	and	x0, x0, #0xff
  471a38:	cmp	x0, #0x0
  471a3c:	b.eq	471a50 <_obstack_memory_used@@Base+0x14910>  // b.none
  471a40:	ldr	x0, [sp, #104]
  471a44:	bl	404880 <free@plt>
  471a48:	ldr	w0, [sp, #116]
  471a4c:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  471a50:	ldr	x0, [sp, #72]
  471a54:	ldr	x1, [x0, #184]
  471a58:	ldr	x0, [sp, #216]
  471a5c:	lsl	x0, x0, #3
  471a60:	add	x0, x1, x0
  471a64:	ldr	x1, [sp, #200]
  471a68:	str	x1, [x0]
  471a6c:	ldr	x0, [sp, #200]
  471a70:	cmp	x0, #0x0
  471a74:	b.ne	471a84 <_obstack_memory_used@@Base+0x14944>  // b.any
  471a78:	ldr	x0, [sp, #208]
  471a7c:	add	x0, x0, #0x1
  471a80:	b	471a88 <_obstack_memory_used@@Base+0x14948>
  471a84:	mov	x0, #0x0                   	// #0
  471a88:	str	x0, [sp, #208]
  471a8c:	ldr	x1, [sp, #216]
  471a90:	ldr	x0, [sp, #32]
  471a94:	cmp	x1, x0
  471a98:	b.ge	471ab4 <_obstack_memory_used@@Base+0x14974>  // b.tcont
  471a9c:	ldr	x0, [sp, #72]
  471aa0:	ldr	w0, [x0, #224]
  471aa4:	sxtw	x0, w0
  471aa8:	ldr	x1, [sp, #208]
  471aac:	cmp	x1, x0
  471ab0:	b.le	471840 <_obstack_memory_used@@Base+0x14700>
  471ab4:	ldr	x0, [sp, #104]
  471ab8:	bl	404880 <free@plt>
  471abc:	ldr	x0, [sp, #72]
  471ac0:	ldr	x1, [x0, #184]
  471ac4:	ldr	x0, [sp, #32]
  471ac8:	lsl	x0, x0, #3
  471acc:	add	x0, x1, x0
  471ad0:	ldr	x0, [x0]
  471ad4:	cmp	x0, #0x0
  471ad8:	b.eq	471afc <_obstack_memory_used@@Base+0x149bc>  // b.none
  471adc:	ldr	x0, [sp, #72]
  471ae0:	ldr	x1, [x0, #184]
  471ae4:	ldr	x0, [sp, #32]
  471ae8:	lsl	x0, x0, #3
  471aec:	add	x0, x1, x0
  471af0:	ldr	x0, [x0]
  471af4:	add	x0, x0, #0x8
  471af8:	b	471b00 <_obstack_memory_used@@Base+0x149c0>
  471afc:	mov	x0, #0x0                   	// #0
  471b00:	str	x0, [sp, #120]
  471b04:	ldr	x0, [sp, #64]
  471b08:	ldr	x1, [sp, #216]
  471b0c:	str	x1, [x0]
  471b10:	ldr	x0, [sp, #72]
  471b14:	ldr	x1, [sp, #144]
  471b18:	str	x1, [x0, #184]
  471b1c:	ldr	x0, [sp, #72]
  471b20:	ldr	x1, [sp, #136]
  471b24:	str	x1, [x0, #72]
  471b28:	ldr	x0, [sp, #120]
  471b2c:	cmp	x0, #0x0
  471b30:	b.eq	471b50 <_obstack_memory_used@@Base+0x14a10>  // b.none
  471b34:	ldr	x1, [sp, #40]
  471b38:	ldr	x0, [sp, #120]
  471b3c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  471b40:	cmp	x0, #0x0
  471b44:	b.eq	471b50 <_obstack_memory_used@@Base+0x14a10>  // b.none
  471b48:	mov	w0, #0x0                   	// #0
  471b4c:	b	471b54 <_obstack_memory_used@@Base+0x14a14>
  471b50:	mov	w0, #0x1                   	// #1
  471b54:	ldp	x29, x30, [sp], #224
  471b58:	ret
  471b5c:	stp	x29, x30, [sp, #-160]!
  471b60:	mov	x29, sp
  471b64:	str	x19, [sp, #16]
  471b68:	str	x0, [sp, #56]
  471b6c:	str	x1, [sp, #48]
  471b70:	str	x2, [sp, #40]
  471b74:	str	x3, [sp, #32]
  471b78:	ldr	x0, [sp, #56]
  471b7c:	ldr	x0, [x0, #152]
  471b80:	str	x0, [sp, #136]
  471b84:	str	wzr, [sp, #96]
  471b88:	add	x0, sp, #0x48
  471b8c:	mov	x2, #0x18                  	// #24
  471b90:	mov	w1, #0x0                   	// #0
  471b94:	bl	4044d0 <memset@plt>
  471b98:	str	xzr, [sp, #152]
  471b9c:	b	471e00 <_obstack_memory_used@@Base+0x14cc0>
  471ba0:	str	wzr, [sp, #148]
  471ba4:	ldr	x0, [sp, #40]
  471ba8:	ldr	x1, [x0, #16]
  471bac:	ldr	x0, [sp, #152]
  471bb0:	lsl	x0, x0, #3
  471bb4:	add	x0, x1, x0
  471bb8:	ldr	x0, [x0]
  471bbc:	str	x0, [sp, #128]
  471bc0:	ldr	x0, [sp, #136]
  471bc4:	ldr	x1, [x0]
  471bc8:	ldr	x0, [sp, #128]
  471bcc:	lsl	x0, x0, #4
  471bd0:	add	x0, x1, x0
  471bd4:	ldrb	w0, [x0, #10]
  471bd8:	and	w0, w0, #0x10
  471bdc:	and	w0, w0, #0xff
  471be0:	cmp	w0, #0x0
  471be4:	b.eq	471d68 <_obstack_memory_used@@Base+0x14c28>  // b.none
  471be8:	ldr	x0, [sp, #56]
  471bec:	ldr	x3, [sp, #48]
  471bf0:	mov	x2, x0
  471bf4:	ldr	x1, [sp, #128]
  471bf8:	ldr	x0, [sp, #136]
  471bfc:	bl	473958 <_obstack_memory_used@@Base+0x16818>
  471c00:	str	w0, [sp, #148]
  471c04:	ldr	w0, [sp, #148]
  471c08:	cmp	w0, #0x1
  471c0c:	b.le	471d68 <_obstack_memory_used@@Base+0x14c28>
  471c10:	ldr	x0, [sp, #136]
  471c14:	ldr	x1, [x0, #24]
  471c18:	ldr	x0, [sp, #128]
  471c1c:	lsl	x0, x0, #3
  471c20:	add	x0, x1, x0
  471c24:	ldr	x0, [x0]
  471c28:	str	x0, [sp, #120]
  471c2c:	ldrsw	x0, [sp, #148]
  471c30:	ldr	x1, [sp, #48]
  471c34:	add	x0, x1, x0
  471c38:	str	x0, [sp, #112]
  471c3c:	ldr	x0, [sp, #56]
  471c40:	ldr	x1, [x0, #184]
  471c44:	ldr	x0, [sp, #112]
  471c48:	lsl	x0, x0, #3
  471c4c:	add	x0, x1, x0
  471c50:	ldr	x0, [x0]
  471c54:	str	x0, [sp, #104]
  471c58:	str	xzr, [sp, #80]
  471c5c:	ldr	x0, [sp, #104]
  471c60:	cmp	x0, #0x0
  471c64:	b.eq	471ca8 <_obstack_memory_used@@Base+0x14b68>  // b.none
  471c68:	ldr	x0, [sp, #104]
  471c6c:	add	x1, x0, #0x8
  471c70:	add	x0, sp, #0x48
  471c74:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  471c78:	str	w0, [sp, #96]
  471c7c:	ldr	w0, [sp, #96]
  471c80:	cmp	w0, #0x0
  471c84:	cset	w0, ne  // ne = any
  471c88:	and	w0, w0, #0xff
  471c8c:	and	x0, x0, #0xff
  471c90:	cmp	x0, #0x0
  471c94:	b.eq	471ca8 <_obstack_memory_used@@Base+0x14b68>  // b.none
  471c98:	ldr	x0, [sp, #88]
  471c9c:	bl	404880 <free@plt>
  471ca0:	ldr	w0, [sp, #96]
  471ca4:	b	471e20 <_obstack_memory_used@@Base+0x14ce0>
  471ca8:	add	x0, sp, #0x48
  471cac:	ldr	x1, [sp, #120]
  471cb0:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  471cb4:	strb	w0, [sp, #103]
  471cb8:	ldrb	w0, [sp, #103]
  471cbc:	eor	w0, w0, #0x1
  471cc0:	and	w0, w0, #0xff
  471cc4:	and	x0, x0, #0xff
  471cc8:	cmp	x0, #0x0
  471ccc:	b.eq	471ce0 <_obstack_memory_used@@Base+0x14ba0>  // b.none
  471cd0:	ldr	x0, [sp, #88]
  471cd4:	bl	404880 <free@plt>
  471cd8:	mov	w0, #0xc                   	// #12
  471cdc:	b	471e20 <_obstack_memory_used@@Base+0x14ce0>
  471ce0:	ldr	x0, [sp, #56]
  471ce4:	ldr	x1, [x0, #184]
  471ce8:	ldr	x0, [sp, #112]
  471cec:	lsl	x0, x0, #3
  471cf0:	add	x19, x1, x0
  471cf4:	add	x1, sp, #0x48
  471cf8:	add	x0, sp, #0x60
  471cfc:	mov	x2, x1
  471d00:	ldr	x1, [sp, #136]
  471d04:	bl	461974 <_obstack_memory_used@@Base+0x4834>
  471d08:	str	x0, [x19]
  471d0c:	ldr	x0, [sp, #56]
  471d10:	ldr	x1, [x0, #184]
  471d14:	ldr	x0, [sp, #112]
  471d18:	lsl	x0, x0, #3
  471d1c:	add	x0, x1, x0
  471d20:	ldr	x0, [x0]
  471d24:	cmp	x0, #0x0
  471d28:	cset	w0, eq  // eq = none
  471d2c:	and	w0, w0, #0xff
  471d30:	and	x0, x0, #0xff
  471d34:	cmp	x0, #0x0
  471d38:	b.eq	471d68 <_obstack_memory_used@@Base+0x14c28>  // b.none
  471d3c:	ldr	w0, [sp, #96]
  471d40:	cmp	w0, #0x0
  471d44:	cset	w0, ne  // ne = any
  471d48:	and	w0, w0, #0xff
  471d4c:	and	x0, x0, #0xff
  471d50:	cmp	x0, #0x0
  471d54:	b.eq	471d68 <_obstack_memory_used@@Base+0x14c28>  // b.none
  471d58:	ldr	x0, [sp, #88]
  471d5c:	bl	404880 <free@plt>
  471d60:	ldr	w0, [sp, #96]
  471d64:	b	471e20 <_obstack_memory_used@@Base+0x14ce0>
  471d68:	ldr	w0, [sp, #148]
  471d6c:	cmp	w0, #0x0
  471d70:	b.ne	471da4 <_obstack_memory_used@@Base+0x14c64>  // b.any
  471d74:	ldr	x0, [sp, #136]
  471d78:	ldr	x1, [x0]
  471d7c:	ldr	x0, [sp, #128]
  471d80:	lsl	x0, x0, #4
  471d84:	add	x0, x1, x0
  471d88:	ldr	x2, [sp, #48]
  471d8c:	mov	x1, x0
  471d90:	ldr	x0, [sp, #56]
  471d94:	bl	473e9c <_obstack_memory_used@@Base+0x16d5c>
  471d98:	and	w0, w0, #0xff
  471d9c:	cmp	w0, #0x0
  471da0:	b.eq	471df4 <_obstack_memory_used@@Base+0x14cb4>  // b.none
  471da4:	ldr	x0, [sp, #136]
  471da8:	ldr	x1, [x0, #24]
  471dac:	ldr	x0, [sp, #128]
  471db0:	lsl	x0, x0, #3
  471db4:	add	x0, x1, x0
  471db8:	ldr	x0, [x0]
  471dbc:	mov	x1, x0
  471dc0:	ldr	x0, [sp, #32]
  471dc4:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  471dc8:	strb	w0, [sp, #103]
  471dcc:	ldrb	w0, [sp, #103]
  471dd0:	eor	w0, w0, #0x1
  471dd4:	and	w0, w0, #0xff
  471dd8:	and	x0, x0, #0xff
  471ddc:	cmp	x0, #0x0
  471de0:	b.eq	471df4 <_obstack_memory_used@@Base+0x14cb4>  // b.none
  471de4:	ldr	x0, [sp, #88]
  471de8:	bl	404880 <free@plt>
  471dec:	mov	w0, #0xc                   	// #12
  471df0:	b	471e20 <_obstack_memory_used@@Base+0x14ce0>
  471df4:	ldr	x0, [sp, #152]
  471df8:	add	x0, x0, #0x1
  471dfc:	str	x0, [sp, #152]
  471e00:	ldr	x0, [sp, #40]
  471e04:	ldr	x0, [x0, #8]
  471e08:	ldr	x1, [sp, #152]
  471e0c:	cmp	x1, x0
  471e10:	b.lt	471ba0 <_obstack_memory_used@@Base+0x14a60>  // b.tstop
  471e14:	ldr	x0, [sp, #88]
  471e18:	bl	404880 <free@plt>
  471e1c:	mov	w0, #0x0                   	// #0
  471e20:	ldr	x19, [sp, #16]
  471e24:	ldp	x29, x30, [sp], #160
  471e28:	ret
  471e2c:	stp	x29, x30, [sp, #-112]!
  471e30:	mov	x29, sp
  471e34:	str	x0, [sp, #40]
  471e38:	str	x1, [sp, #32]
  471e3c:	str	x2, [sp, #24]
  471e40:	str	w3, [sp, #20]
  471e44:	ldr	x0, [sp, #32]
  471e48:	ldr	x1, [x0, #8]
  471e4c:	add	x0, sp, #0x30
  471e50:	bl	4600bc <_obstack_memory_used@@Base+0x2f7c>
  471e54:	str	w0, [sp, #100]
  471e58:	ldr	w0, [sp, #100]
  471e5c:	cmp	w0, #0x0
  471e60:	cset	w0, ne  // ne = any
  471e64:	and	w0, w0, #0xff
  471e68:	and	x0, x0, #0xff
  471e6c:	cmp	x0, #0x0
  471e70:	b.eq	471e7c <_obstack_memory_used@@Base+0x14d3c>  // b.none
  471e74:	ldr	w0, [sp, #100]
  471e78:	b	471fbc <_obstack_memory_used@@Base+0x14e7c>
  471e7c:	str	xzr, [sp, #104]
  471e80:	b	471f7c <_obstack_memory_used@@Base+0x14e3c>
  471e84:	ldr	x0, [sp, #32]
  471e88:	ldr	x1, [x0, #16]
  471e8c:	ldr	x0, [sp, #104]
  471e90:	lsl	x0, x0, #3
  471e94:	add	x0, x1, x0
  471e98:	ldr	x0, [x0]
  471e9c:	str	x0, [sp, #88]
  471ea0:	ldr	x0, [sp, #40]
  471ea4:	ldr	x2, [x0, #48]
  471ea8:	ldr	x1, [sp, #88]
  471eac:	mov	x0, x1
  471eb0:	lsl	x0, x0, #1
  471eb4:	add	x0, x0, x1
  471eb8:	lsl	x0, x0, #3
  471ebc:	add	x0, x2, x0
  471ec0:	str	x0, [sp, #80]
  471ec4:	ldr	w3, [sp, #20]
  471ec8:	ldr	x2, [sp, #24]
  471ecc:	ldr	x1, [sp, #80]
  471ed0:	ldr	x0, [sp, #40]
  471ed4:	bl	471344 <_obstack_memory_used@@Base+0x14204>
  471ed8:	str	x0, [sp, #72]
  471edc:	ldr	x0, [sp, #72]
  471ee0:	cmn	x0, #0x1
  471ee4:	b.ne	471f24 <_obstack_memory_used@@Base+0x14de4>  // b.any
  471ee8:	add	x0, sp, #0x30
  471eec:	ldr	x1, [sp, #80]
  471ef0:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  471ef4:	str	w0, [sp, #100]
  471ef8:	ldr	w0, [sp, #100]
  471efc:	cmp	w0, #0x0
  471f00:	cset	w0, ne  // ne = any
  471f04:	and	w0, w0, #0xff
  471f08:	and	x0, x0, #0xff
  471f0c:	cmp	x0, #0x0
  471f10:	b.eq	471f70 <_obstack_memory_used@@Base+0x14e30>  // b.none
  471f14:	ldr	x0, [sp, #64]
  471f18:	bl	404880 <free@plt>
  471f1c:	ldr	w0, [sp, #100]
  471f20:	b	471fbc <_obstack_memory_used@@Base+0x14e7c>
  471f24:	add	x0, sp, #0x30
  471f28:	ldr	w4, [sp, #20]
  471f2c:	ldr	x3, [sp, #24]
  471f30:	ldr	x2, [sp, #88]
  471f34:	mov	x1, x0
  471f38:	ldr	x0, [sp, #40]
  471f3c:	bl	471fc4 <_obstack_memory_used@@Base+0x14e84>
  471f40:	str	w0, [sp, #100]
  471f44:	ldr	w0, [sp, #100]
  471f48:	cmp	w0, #0x0
  471f4c:	cset	w0, ne  // ne = any
  471f50:	and	w0, w0, #0xff
  471f54:	and	x0, x0, #0xff
  471f58:	cmp	x0, #0x0
  471f5c:	b.eq	471f70 <_obstack_memory_used@@Base+0x14e30>  // b.none
  471f60:	ldr	x0, [sp, #64]
  471f64:	bl	404880 <free@plt>
  471f68:	ldr	w0, [sp, #100]
  471f6c:	b	471fbc <_obstack_memory_used@@Base+0x14e7c>
  471f70:	ldr	x0, [sp, #104]
  471f74:	add	x0, x0, #0x1
  471f78:	str	x0, [sp, #104]
  471f7c:	ldr	x0, [sp, #32]
  471f80:	ldr	x0, [x0, #8]
  471f84:	ldr	x1, [sp, #104]
  471f88:	cmp	x1, x0
  471f8c:	b.lt	471e84 <_obstack_memory_used@@Base+0x14d44>  // b.tstop
  471f90:	ldr	x0, [sp, #32]
  471f94:	ldr	x0, [x0, #16]
  471f98:	bl	404880 <free@plt>
  471f9c:	ldr	x0, [sp, #32]
  471fa0:	mov	x3, x0
  471fa4:	add	x2, sp, #0x30
  471fa8:	ldp	x0, x1, [x2]
  471fac:	stp	x0, x1, [x3]
  471fb0:	ldr	x0, [x2, #16]
  471fb4:	str	x0, [x3, #16]
  471fb8:	mov	w0, #0x0                   	// #0
  471fbc:	ldp	x29, x30, [sp], #112
  471fc0:	ret
  471fc4:	stp	x29, x30, [sp, #-80]!
  471fc8:	mov	x29, sp
  471fcc:	str	x0, [sp, #56]
  471fd0:	str	x1, [sp, #48]
  471fd4:	str	x2, [sp, #40]
  471fd8:	str	x3, [sp, #32]
  471fdc:	str	w4, [sp, #28]
  471fe0:	ldr	x0, [sp, #40]
  471fe4:	str	x0, [sp, #72]
  471fe8:	b	472194 <_obstack_memory_used@@Base+0x15054>
  471fec:	ldr	x0, [sp, #56]
  471ff0:	ldr	x1, [x0]
  471ff4:	ldr	x0, [sp, #72]
  471ff8:	lsl	x0, x0, #4
  471ffc:	add	x0, x1, x0
  472000:	ldrb	w0, [x0, #8]
  472004:	mov	w1, w0
  472008:	ldr	w0, [sp, #28]
  47200c:	cmp	w0, w1
  472010:	b.ne	472074 <_obstack_memory_used@@Base+0x14f34>  // b.any
  472014:	ldr	x0, [sp, #56]
  472018:	ldr	x1, [x0]
  47201c:	ldr	x0, [sp, #72]
  472020:	lsl	x0, x0, #4
  472024:	add	x0, x1, x0
  472028:	ldr	x0, [x0]
  47202c:	ldr	x1, [sp, #32]
  472030:	cmp	x1, x0
  472034:	b.ne	472074 <_obstack_memory_used@@Base+0x14f34>  // b.any
  472038:	ldr	w0, [sp, #28]
  47203c:	cmp	w0, #0x9
  472040:	b.ne	4721ac <_obstack_memory_used@@Base+0x1506c>  // b.any
  472044:	ldr	x1, [sp, #72]
  472048:	ldr	x0, [sp, #48]
  47204c:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  472050:	strb	w0, [sp, #71]
  472054:	ldrb	w0, [sp, #71]
  472058:	eor	w0, w0, #0x1
  47205c:	and	w0, w0, #0xff
  472060:	and	x0, x0, #0xff
  472064:	cmp	x0, #0x0
  472068:	b.eq	4721ac <_obstack_memory_used@@Base+0x1506c>  // b.none
  47206c:	mov	w0, #0xc                   	// #12
  472070:	b	4721bc <_obstack_memory_used@@Base+0x1507c>
  472074:	ldr	x1, [sp, #72]
  472078:	ldr	x0, [sp, #48]
  47207c:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  472080:	strb	w0, [sp, #71]
  472084:	ldrb	w0, [sp, #71]
  472088:	eor	w0, w0, #0x1
  47208c:	and	w0, w0, #0xff
  472090:	and	x0, x0, #0xff
  472094:	cmp	x0, #0x0
  472098:	b.eq	4720a4 <_obstack_memory_used@@Base+0x14f64>  // b.none
  47209c:	mov	w0, #0xc                   	// #12
  4720a0:	b	4721bc <_obstack_memory_used@@Base+0x1507c>
  4720a4:	ldr	x0, [sp, #56]
  4720a8:	ldr	x2, [x0, #40]
  4720ac:	ldr	x1, [sp, #72]
  4720b0:	mov	x0, x1
  4720b4:	lsl	x0, x0, #1
  4720b8:	add	x0, x0, x1
  4720bc:	lsl	x0, x0, #3
  4720c0:	add	x0, x2, x0
  4720c4:	ldr	x0, [x0, #8]
  4720c8:	cmp	x0, #0x0
  4720cc:	b.eq	4721b4 <_obstack_memory_used@@Base+0x15074>  // b.none
  4720d0:	ldr	x0, [sp, #56]
  4720d4:	ldr	x2, [x0, #40]
  4720d8:	ldr	x1, [sp, #72]
  4720dc:	mov	x0, x1
  4720e0:	lsl	x0, x0, #1
  4720e4:	add	x0, x0, x1
  4720e8:	lsl	x0, x0, #3
  4720ec:	add	x0, x2, x0
  4720f0:	ldr	x0, [x0, #8]
  4720f4:	cmp	x0, #0x2
  4720f8:	b.ne	472168 <_obstack_memory_used@@Base+0x15028>  // b.any
  4720fc:	ldr	x0, [sp, #56]
  472100:	ldr	x2, [x0, #40]
  472104:	ldr	x1, [sp, #72]
  472108:	mov	x0, x1
  47210c:	lsl	x0, x0, #1
  472110:	add	x0, x0, x1
  472114:	lsl	x0, x0, #3
  472118:	add	x0, x2, x0
  47211c:	ldr	x0, [x0, #16]
  472120:	add	x0, x0, #0x8
  472124:	ldr	x0, [x0]
  472128:	ldr	w4, [sp, #28]
  47212c:	ldr	x3, [sp, #32]
  472130:	mov	x2, x0
  472134:	ldr	x1, [sp, #48]
  472138:	ldr	x0, [sp, #56]
  47213c:	bl	471fc4 <_obstack_memory_used@@Base+0x14e84>
  472140:	str	w0, [sp, #64]
  472144:	ldr	w0, [sp, #64]
  472148:	cmp	w0, #0x0
  47214c:	cset	w0, ne  // ne = any
  472150:	and	w0, w0, #0xff
  472154:	and	x0, x0, #0xff
  472158:	cmp	x0, #0x0
  47215c:	b.eq	472168 <_obstack_memory_used@@Base+0x15028>  // b.none
  472160:	ldr	w0, [sp, #64]
  472164:	b	4721bc <_obstack_memory_used@@Base+0x1507c>
  472168:	ldr	x0, [sp, #56]
  47216c:	ldr	x2, [x0, #40]
  472170:	ldr	x1, [sp, #72]
  472174:	mov	x0, x1
  472178:	lsl	x0, x0, #1
  47217c:	add	x0, x0, x1
  472180:	lsl	x0, x0, #3
  472184:	add	x0, x2, x0
  472188:	ldr	x0, [x0, #16]
  47218c:	ldr	x0, [x0]
  472190:	str	x0, [sp, #72]
  472194:	ldr	x1, [sp, #72]
  472198:	ldr	x0, [sp, #48]
  47219c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  4721a0:	cmp	x0, #0x0
  4721a4:	b.eq	471fec <_obstack_memory_used@@Base+0x14eac>  // b.none
  4721a8:	b	4721b8 <_obstack_memory_used@@Base+0x15078>
  4721ac:	nop
  4721b0:	b	4721b8 <_obstack_memory_used@@Base+0x15078>
  4721b4:	nop
  4721b8:	mov	w0, #0x0                   	// #0
  4721bc:	ldp	x29, x30, [sp], #80
  4721c0:	ret
  4721c4:	stp	x29, x30, [sp, #-192]!
  4721c8:	mov	x29, sp
  4721cc:	str	x19, [sp, #16]
  4721d0:	str	x0, [sp, #72]
  4721d4:	str	x1, [sp, #64]
  4721d8:	str	x2, [sp, #56]
  4721dc:	str	x3, [sp, #48]
  4721e0:	str	w4, [sp, #44]
  4721e4:	ldr	x0, [sp, #72]
  4721e8:	ldr	x0, [x0, #152]
  4721ec:	str	x0, [sp, #176]
  4721f0:	ldr	x1, [sp, #56]
  4721f4:	ldr	x0, [sp, #72]
  4721f8:	bl	474800 <_obstack_memory_used@@Base+0x176c0>
  4721fc:	str	x0, [sp, #168]
  472200:	ldr	x0, [sp, #168]
  472204:	cmn	x0, #0x1
  472208:	b.ne	472214 <_obstack_memory_used@@Base+0x150d4>  // b.any
  47220c:	mov	w0, #0x0                   	// #0
  472210:	b	4725a8 <_obstack_memory_used@@Base+0x15468>
  472214:	nop
  472218:	ldr	x0, [sp, #72]
  47221c:	ldr	x2, [x0, #216]
  472220:	ldr	x1, [sp, #168]
  472224:	mov	x0, x1
  472228:	lsl	x0, x0, #2
  47222c:	add	x0, x0, x1
  472230:	lsl	x0, x0, #3
  472234:	add	x0, x2, x0
  472238:	str	x0, [sp, #184]
  47223c:	ldr	x0, [sp, #184]
  472240:	ldr	x0, [x0]
  472244:	mov	x1, x0
  472248:	ldr	x0, [sp, #64]
  47224c:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  472250:	cmp	x0, #0x0
  472254:	b.eq	472578 <_obstack_memory_used@@Base+0x15438>  // b.none
  472258:	ldr	x0, [sp, #184]
  47225c:	ldr	x1, [x0, #24]
  472260:	ldr	x0, [sp, #56]
  472264:	add	x1, x1, x0
  472268:	ldr	x0, [sp, #184]
  47226c:	ldr	x0, [x0, #16]
  472270:	sub	x0, x1, x0
  472274:	str	x0, [sp, #160]
  472278:	ldr	x1, [sp, #160]
  47227c:	ldr	x0, [sp, #56]
  472280:	cmp	x1, x0
  472284:	b.ne	4723b8 <_obstack_memory_used@@Base+0x15278>  // b.any
  472288:	ldr	x0, [sp, #176]
  47228c:	ldr	x1, [x0, #40]
  472290:	ldr	x0, [sp, #184]
  472294:	ldr	x0, [x0]
  472298:	mov	x2, x0
  47229c:	mov	x0, x2
  4722a0:	lsl	x0, x0, #1
  4722a4:	add	x0, x0, x2
  4722a8:	lsl	x0, x0, #3
  4722ac:	add	x0, x1, x0
  4722b0:	ldr	x0, [x0, #16]
  4722b4:	ldr	x0, [x0]
  4722b8:	str	x0, [sp, #152]
  4722bc:	ldr	x1, [sp, #152]
  4722c0:	ldr	x0, [sp, #64]
  4722c4:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  4722c8:	cmp	x0, #0x0
  4722cc:	b.ne	472580 <_obstack_memory_used@@Base+0x15440>  // b.any
  4722d0:	add	x0, sp, #0x70
  4722d4:	ldr	x1, [sp, #152]
  4722d8:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  4722dc:	str	w0, [sp, #136]
  4722e0:	add	x0, sp, #0x70
  4722e4:	ldr	w3, [sp, #44]
  4722e8:	ldr	x2, [sp, #48]
  4722ec:	mov	x1, x0
  4722f0:	ldr	x0, [sp, #176]
  4722f4:	bl	471e2c <_obstack_memory_used@@Base+0x14cec>
  4722f8:	str	w0, [sp, #144]
  4722fc:	add	x0, sp, #0x70
  472300:	mov	x1, x0
  472304:	ldr	x0, [sp, #64]
  472308:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  47230c:	str	w0, [sp, #140]
  472310:	ldr	x0, [sp, #128]
  472314:	bl	404880 <free@plt>
  472318:	ldr	w0, [sp, #136]
  47231c:	cmp	w0, #0x0
  472320:	cset	w0, ne  // ne = any
  472324:	and	w0, w0, #0xff
  472328:	and	x0, x0, #0xff
  47232c:	cmp	x0, #0x0
  472330:	b.ne	472350 <_obstack_memory_used@@Base+0x15210>  // b.any
  472334:	ldr	w0, [sp, #144]
  472338:	cmp	w0, #0x0
  47233c:	cset	w0, ne  // ne = any
  472340:	and	w0, w0, #0xff
  472344:	and	x0, x0, #0xff
  472348:	cmp	x0, #0x0
  47234c:	b.eq	472358 <_obstack_memory_used@@Base+0x15218>  // b.none
  472350:	mov	w0, #0x1                   	// #1
  472354:	b	47235c <_obstack_memory_used@@Base+0x1521c>
  472358:	mov	w0, #0x0                   	// #0
  47235c:	cmp	w0, #0x0
  472360:	b.ne	472380 <_obstack_memory_used@@Base+0x15240>  // b.any
  472364:	ldr	w0, [sp, #140]
  472368:	cmp	w0, #0x0
  47236c:	cset	w0, ne  // ne = any
  472370:	and	w0, w0, #0xff
  472374:	and	x0, x0, #0xff
  472378:	cmp	x0, #0x0
  47237c:	b.eq	472218 <_obstack_memory_used@@Base+0x150d8>  // b.none
  472380:	ldr	w0, [sp, #136]
  472384:	cmp	w0, #0x0
  472388:	b.ne	4723a8 <_obstack_memory_used@@Base+0x15268>  // b.any
  47238c:	ldr	w0, [sp, #144]
  472390:	cmp	w0, #0x0
  472394:	b.eq	4723a0 <_obstack_memory_used@@Base+0x15260>  // b.none
  472398:	ldr	w0, [sp, #144]
  47239c:	b	4723ac <_obstack_memory_used@@Base+0x1526c>
  4723a0:	ldr	w0, [sp, #140]
  4723a4:	b	4723ac <_obstack_memory_used@@Base+0x1526c>
  4723a8:	ldr	w0, [sp, #136]
  4723ac:	str	w0, [sp, #136]
  4723b0:	ldr	w0, [sp, #136]
  4723b4:	b	4725a8 <_obstack_memory_used@@Base+0x15468>
  4723b8:	ldr	x0, [sp, #176]
  4723bc:	ldr	x1, [x0, #24]
  4723c0:	ldr	x0, [sp, #184]
  4723c4:	ldr	x0, [x0]
  4723c8:	lsl	x0, x0, #3
  4723cc:	add	x0, x1, x0
  4723d0:	ldr	x0, [x0]
  4723d4:	str	x0, [sp, #152]
  4723d8:	ldr	x0, [sp, #72]
  4723dc:	ldr	x1, [x0, #184]
  4723e0:	ldr	x0, [sp, #160]
  4723e4:	lsl	x0, x0, #3
  4723e8:	add	x0, x1, x0
  4723ec:	ldr	x0, [x0]
  4723f0:	cmp	x0, #0x0
  4723f4:	b.eq	4724bc <_obstack_memory_used@@Base+0x1537c>  // b.none
  4723f8:	ldr	x0, [sp, #72]
  4723fc:	ldr	x1, [x0, #184]
  472400:	ldr	x0, [sp, #160]
  472404:	lsl	x0, x0, #3
  472408:	add	x0, x1, x0
  47240c:	ldr	x0, [x0]
  472410:	add	x0, x0, #0x8
  472414:	ldr	x1, [sp, #152]
  472418:	bl	4613b4 <_obstack_memory_used@@Base+0x4274>
  47241c:	cmp	x0, #0x0
  472420:	b.ne	472588 <_obstack_memory_used@@Base+0x15448>  // b.any
  472424:	ldr	x0, [sp, #72]
  472428:	ldr	x1, [x0, #184]
  47242c:	ldr	x0, [sp, #160]
  472430:	lsl	x0, x0, #3
  472434:	add	x0, x1, x0
  472438:	ldr	x0, [x0]
  47243c:	add	x1, x0, #0x8
  472440:	add	x0, sp, #0x58
  472444:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  472448:	str	w0, [sp, #136]
  47244c:	add	x0, sp, #0x58
  472450:	ldr	x1, [sp, #152]
  472454:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  472458:	strb	w0, [sp, #151]
  47245c:	ldr	w0, [sp, #136]
  472460:	cmp	w0, #0x0
  472464:	cset	w0, ne  // ne = any
  472468:	and	w0, w0, #0xff
  47246c:	and	x0, x0, #0xff
  472470:	cmp	x0, #0x0
  472474:	b.ne	472490 <_obstack_memory_used@@Base+0x15350>  // b.any
  472478:	ldrb	w0, [sp, #151]
  47247c:	eor	w0, w0, #0x1
  472480:	and	w0, w0, #0xff
  472484:	and	x0, x0, #0xff
  472488:	cmp	x0, #0x0
  47248c:	b.eq	4724f0 <_obstack_memory_used@@Base+0x153b0>  // b.none
  472490:	ldr	x0, [sp, #104]
  472494:	bl	404880 <free@plt>
  472498:	ldr	w0, [sp, #136]
  47249c:	cmp	w0, #0x0
  4724a0:	b.eq	4724ac <_obstack_memory_used@@Base+0x1536c>  // b.none
  4724a4:	ldr	w0, [sp, #136]
  4724a8:	b	4724b0 <_obstack_memory_used@@Base+0x15370>
  4724ac:	mov	w0, #0xc                   	// #12
  4724b0:	str	w0, [sp, #136]
  4724b4:	ldr	w0, [sp, #136]
  4724b8:	b	4725a8 <_obstack_memory_used@@Base+0x15468>
  4724bc:	add	x0, sp, #0x58
  4724c0:	ldr	x1, [sp, #152]
  4724c4:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  4724c8:	str	w0, [sp, #136]
  4724cc:	ldr	w0, [sp, #136]
  4724d0:	cmp	w0, #0x0
  4724d4:	cset	w0, ne  // ne = any
  4724d8:	and	w0, w0, #0xff
  4724dc:	and	x0, x0, #0xff
  4724e0:	cmp	x0, #0x0
  4724e4:	b.eq	4724f0 <_obstack_memory_used@@Base+0x153b0>  // b.none
  4724e8:	ldr	w0, [sp, #136]
  4724ec:	b	4725a8 <_obstack_memory_used@@Base+0x15468>
  4724f0:	ldr	x0, [sp, #72]
  4724f4:	ldr	x1, [x0, #184]
  4724f8:	ldr	x0, [sp, #160]
  4724fc:	lsl	x0, x0, #3
  472500:	add	x19, x1, x0
  472504:	add	x1, sp, #0x58
  472508:	add	x0, sp, #0x88
  47250c:	mov	x2, x1
  472510:	ldr	x1, [sp, #176]
  472514:	bl	461974 <_obstack_memory_used@@Base+0x4834>
  472518:	str	x0, [x19]
  47251c:	ldr	x0, [sp, #104]
  472520:	bl	404880 <free@plt>
  472524:	ldr	x0, [sp, #72]
  472528:	ldr	x1, [x0, #184]
  47252c:	ldr	x0, [sp, #160]
  472530:	lsl	x0, x0, #3
  472534:	add	x0, x1, x0
  472538:	ldr	x0, [x0]
  47253c:	cmp	x0, #0x0
  472540:	cset	w0, eq  // eq = none
  472544:	and	w0, w0, #0xff
  472548:	and	x0, x0, #0xff
  47254c:	cmp	x0, #0x0
  472550:	b.eq	47258c <_obstack_memory_used@@Base+0x1544c>  // b.none
  472554:	ldr	w0, [sp, #136]
  472558:	cmp	w0, #0x0
  47255c:	cset	w0, ne  // ne = any
  472560:	and	w0, w0, #0xff
  472564:	and	x0, x0, #0xff
  472568:	cmp	x0, #0x0
  47256c:	b.eq	47258c <_obstack_memory_used@@Base+0x1544c>  // b.none
  472570:	ldr	w0, [sp, #136]
  472574:	b	4725a8 <_obstack_memory_used@@Base+0x15468>
  472578:	nop
  47257c:	b	47258c <_obstack_memory_used@@Base+0x1544c>
  472580:	nop
  472584:	b	47258c <_obstack_memory_used@@Base+0x1544c>
  472588:	nop
  47258c:	ldr	x0, [sp, #184]
  472590:	add	x1, x0, #0x28
  472594:	str	x1, [sp, #184]
  472598:	ldrb	w0, [x0, #32]
  47259c:	cmp	w0, #0x0
  4725a0:	b.ne	47223c <_obstack_memory_used@@Base+0x150fc>  // b.any
  4725a4:	mov	w0, #0x0                   	// #0
  4725a8:	ldr	x19, [sp, #16]
  4725ac:	ldp	x29, x30, [sp], #192
  4725b0:	ret
  4725b4:	stp	x29, x30, [sp, #-256]!
  4725b8:	mov	x29, sp
  4725bc:	str	x19, [sp, #16]
  4725c0:	str	x0, [x29, #40]
  4725c4:	str	x1, [x29, #32]
  4725c8:	strb	wzr, [x29, #235]
  4725cc:	strb	wzr, [x29, #191]
  4725d0:	strb	wzr, [x29, #215]
  4725d4:	str	xzr, [x29, #192]
  4725d8:	mov	x0, #0x3800                	// #14336
  4725dc:	bl	4043f0 <malloc@plt>
  4725e0:	str	x0, [x29, #176]
  4725e4:	ldr	x0, [x29, #176]
  4725e8:	cmp	x0, #0x0
  4725ec:	cset	w0, eq  // eq = none
  4725f0:	and	w0, w0, #0xff
  4725f4:	and	x0, x0, #0xff
  4725f8:	cmp	x0, #0x0
  4725fc:	b.eq	472608 <_obstack_memory_used@@Base+0x154c8>  // b.none
  472600:	mov	w0, #0x0                   	// #0
  472604:	b	473044 <_obstack_memory_used@@Base+0x15f04>
  472608:	mov	w0, #0x1                   	// #1
  47260c:	strb	w0, [x29, #191]
  472610:	ldr	x0, [x29, #176]
  472614:	str	x0, [x29, #168]
  472618:	ldr	x1, [x29, #176]
  47261c:	mov	x0, #0x1800                	// #6144
  472620:	add	x0, x1, x0
  472624:	str	x0, [x29, #160]
  472628:	ldr	x0, [x29, #32]
  47262c:	str	xzr, [x0, #88]
  472630:	ldr	x0, [x29, #32]
  472634:	ldr	x1, [x0, #88]
  472638:	ldr	x0, [x29, #32]
  47263c:	str	x1, [x0, #96]
  472640:	ldr	x3, [x29, #160]
  472644:	ldr	x2, [x29, #168]
  472648:	ldr	x1, [x29, #32]
  47264c:	ldr	x0, [x29, #40]
  472650:	bl	473054 <_obstack_memory_used@@Base+0x15f14>
  472654:	str	x0, [x29, #152]
  472658:	ldr	x0, [x29, #152]
  47265c:	cmp	x0, #0x0
  472660:	cset	w0, le
  472664:	and	w0, w0, #0xff
  472668:	and	x0, x0, #0xff
  47266c:	cmp	x0, #0x0
  472670:	b.eq	4726e4 <_obstack_memory_used@@Base+0x155a4>  // b.none
  472674:	ldrb	w0, [x29, #191]
  472678:	cmp	w0, #0x0
  47267c:	b.eq	472688 <_obstack_memory_used@@Base+0x15548>  // b.none
  472680:	ldr	x0, [x29, #176]
  472684:	bl	404880 <free@plt>
  472688:	ldr	x0, [x29, #152]
  47268c:	cmp	x0, #0x0
  472690:	b.ne	4726dc <_obstack_memory_used@@Base+0x1559c>  // b.any
  472694:	mov	x1, #0x100                 	// #256
  472698:	mov	x0, #0x8                   	// #8
  47269c:	bl	404560 <calloc@plt>
  4726a0:	mov	x1, x0
  4726a4:	ldr	x0, [x29, #32]
  4726a8:	str	x1, [x0, #88]
  4726ac:	ldr	x0, [x29, #32]
  4726b0:	ldr	x0, [x0, #88]
  4726b4:	cmp	x0, #0x0
  4726b8:	cset	w0, eq  // eq = none
  4726bc:	and	w0, w0, #0xff
  4726c0:	and	x0, x0, #0xff
  4726c4:	cmp	x0, #0x0
  4726c8:	b.eq	4726d4 <_obstack_memory_used@@Base+0x15594>  // b.none
  4726cc:	mov	w0, #0x0                   	// #0
  4726d0:	b	473044 <_obstack_memory_used@@Base+0x15f04>
  4726d4:	mov	w0, #0x1                   	// #1
  4726d8:	b	473044 <_obstack_memory_used@@Base+0x15f04>
  4726dc:	mov	w0, #0x0                   	// #0
  4726e0:	b	473044 <_obstack_memory_used@@Base+0x15f04>
  4726e4:	ldr	x0, [x29, #152]
  4726e8:	add	x1, x0, #0x1
  4726ec:	add	x0, x29, #0x58
  4726f0:	bl	4600bc <_obstack_memory_used@@Base+0x2f7c>
  4726f4:	str	w0, [x29, #116]
  4726f8:	ldr	w0, [x29, #116]
  4726fc:	cmp	w0, #0x0
  472700:	cset	w0, ne  // ne = any
  472704:	and	w0, w0, #0xff
  472708:	and	x0, x0, #0xff
  47270c:	cmp	x0, #0x0
  472710:	b.ne	4727e8 <_obstack_memory_used@@Base+0x156a8>  // b.any
  472714:	mov	x0, #0xa855                	// #43093
  472718:	movk	x0, #0xaaaa, lsl #16
  47271c:	movk	x0, #0xaaaa, lsl #32
  472720:	movk	x0, #0xaaa, lsl #48
  472724:	str	x0, [x29, #144]
  472728:	ldr	x0, [x29, #152]
  47272c:	ldr	x1, [x29, #144]
  472730:	cmp	x1, x0
  472734:	cset	w0, cc  // cc = lo, ul, last
  472738:	and	w0, w0, #0xff
  47273c:	and	x0, x0, #0xff
  472740:	cmp	x0, #0x0
  472744:	b.ne	4727f0 <_obstack_memory_used@@Base+0x156b0>  // b.any
  472748:	ldr	x1, [x29, #152]
  47274c:	mov	x0, x1
  472750:	lsl	x0, x0, #1
  472754:	add	x0, x0, x1
  472758:	lsl	x0, x0, #3
  47275c:	mov	x1, x0
  472760:	mov	x0, #0x3800                	// #14336
  472764:	add	x0, x1, x0
  472768:	cmp	x0, #0xfbf
  47276c:	b.hi	4727ac <_obstack_memory_used@@Base+0x1566c>  // b.pmore
  472770:	ldr	x1, [x29, #152]
  472774:	mov	x0, x1
  472778:	lsl	x0, x0, #1
  47277c:	add	x0, x0, x1
  472780:	lsl	x0, x0, #3
  472784:	add	x0, x0, #0xf
  472788:	lsr	x0, x0, #4
  47278c:	lsl	x0, x0, #4
  472790:	sub	sp, sp, x0
  472794:	mov	x0, sp
  472798:	add	x0, x0, #0xf
  47279c:	lsr	x0, x0, #4
  4727a0:	lsl	x0, x0, #4
  4727a4:	str	x0, [x29, #192]
  4727a8:	b	4728a8 <_obstack_memory_used@@Base+0x15768>
  4727ac:	ldr	x1, [x29, #152]
  4727b0:	mov	x0, x1
  4727b4:	lsl	x0, x0, #1
  4727b8:	add	x0, x0, x1
  4727bc:	lsl	x0, x0, #3
  4727c0:	bl	4043f0 <malloc@plt>
  4727c4:	str	x0, [x29, #192]
  4727c8:	ldr	x0, [x29, #192]
  4727cc:	cmp	x0, #0x0
  4727d0:	cset	w0, eq  // eq = none
  4727d4:	and	w0, w0, #0xff
  4727d8:	and	x0, x0, #0xff
  4727dc:	cmp	x0, #0x0
  4727e0:	b.eq	4728a0 <_obstack_memory_used@@Base+0x15760>  // b.none
  4727e4:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  4727e8:	nop
  4727ec:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  4727f0:	nop
  4727f4:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  4727f8:	nop
  4727fc:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  472800:	nop
  472804:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  472808:	nop
  47280c:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  472810:	nop
  472814:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  472818:	nop
  47281c:	ldrb	w0, [x29, #215]
  472820:	cmp	w0, #0x0
  472824:	b.eq	472830 <_obstack_memory_used@@Base+0x156f0>  // b.none
  472828:	ldr	x0, [x29, #192]
  47282c:	bl	404880 <free@plt>
  472830:	ldr	x0, [x29, #104]
  472834:	bl	404880 <free@plt>
  472838:	str	xzr, [x29, #248]
  47283c:	b	472874 <_obstack_memory_used@@Base+0x15734>
  472840:	ldr	x1, [x29, #248]
  472844:	mov	x0, x1
  472848:	lsl	x0, x0, #1
  47284c:	add	x0, x0, x1
  472850:	lsl	x0, x0, #3
  472854:	mov	x1, x0
  472858:	ldr	x0, [x29, #168]
  47285c:	add	x0, x0, x1
  472860:	ldr	x0, [x0, #16]
  472864:	bl	404880 <free@plt>
  472868:	ldr	x0, [x29, #248]
  47286c:	add	x0, x0, #0x1
  472870:	str	x0, [x29, #248]
  472874:	ldr	x1, [x29, #248]
  472878:	ldr	x0, [x29, #152]
  47287c:	cmp	x1, x0
  472880:	b.lt	472840 <_obstack_memory_used@@Base+0x15700>  // b.tstop
  472884:	ldrb	w0, [x29, #191]
  472888:	cmp	w0, #0x0
  47288c:	b.eq	472898 <_obstack_memory_used@@Base+0x15758>  // b.none
  472890:	ldr	x0, [x29, #176]
  472894:	bl	404880 <free@plt>
  472898:	mov	w0, #0x0                   	// #0
  47289c:	b	473044 <_obstack_memory_used@@Base+0x15f04>
  4728a0:	mov	w0, #0x1                   	// #1
  4728a4:	strb	w0, [x29, #215]
  4728a8:	ldr	x0, [x29, #152]
  4728ac:	lsl	x0, x0, #3
  4728b0:	ldr	x1, [x29, #192]
  4728b4:	add	x0, x1, x0
  4728b8:	str	x0, [x29, #136]
  4728bc:	ldr	x0, [x29, #152]
  4728c0:	lsl	x0, x0, #3
  4728c4:	ldr	x1, [x29, #136]
  4728c8:	add	x0, x1, x0
  4728cc:	str	x0, [x29, #128]
  4728d0:	add	x0, x29, #0x38
  4728d4:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  4728d8:	str	xzr, [x29, #248]
  4728dc:	b	472c0c <_obstack_memory_used@@Base+0x15acc>
  4728e0:	str	xzr, [x29, #96]
  4728e4:	str	xzr, [x29, #240]
  4728e8:	b	472998 <_obstack_memory_used@@Base+0x15858>
  4728ec:	ldr	x0, [x29, #40]
  4728f0:	ldr	x2, [x0, #24]
  4728f4:	ldr	x1, [x29, #248]
  4728f8:	mov	x0, x1
  4728fc:	lsl	x0, x0, #1
  472900:	add	x0, x0, x1
  472904:	lsl	x0, x0, #3
  472908:	mov	x1, x0
  47290c:	ldr	x0, [x29, #168]
  472910:	add	x0, x0, x1
  472914:	ldr	x1, [x0, #16]
  472918:	ldr	x0, [x29, #240]
  47291c:	lsl	x0, x0, #3
  472920:	add	x0, x1, x0
  472924:	ldr	x0, [x0]
  472928:	lsl	x0, x0, #3
  47292c:	add	x0, x2, x0
  472930:	ldr	x0, [x0]
  472934:	str	x0, [x29, #120]
  472938:	ldr	x0, [x29, #120]
  47293c:	cmn	x0, #0x1
  472940:	b.eq	47298c <_obstack_memory_used@@Base+0x1584c>  // b.none
  472944:	ldr	x0, [x29, #40]
  472948:	ldr	x2, [x0, #48]
  47294c:	ldr	x1, [x29, #120]
  472950:	mov	x0, x1
  472954:	lsl	x0, x0, #1
  472958:	add	x0, x0, x1
  47295c:	lsl	x0, x0, #3
  472960:	add	x1, x2, x0
  472964:	add	x0, x29, #0x58
  472968:	bl	460bac <_obstack_memory_used@@Base+0x3a6c>
  47296c:	str	w0, [x29, #116]
  472970:	ldr	w0, [x29, #116]
  472974:	cmp	w0, #0x0
  472978:	cset	w0, ne  // ne = any
  47297c:	and	w0, w0, #0xff
  472980:	and	x0, x0, #0xff
  472984:	cmp	x0, #0x0
  472988:	b.ne	4727f8 <_obstack_memory_used@@Base+0x156b8>  // b.any
  47298c:	ldr	x0, [x29, #240]
  472990:	add	x0, x0, #0x1
  472994:	str	x0, [x29, #240]
  472998:	ldr	x1, [x29, #248]
  47299c:	mov	x0, x1
  4729a0:	lsl	x0, x0, #1
  4729a4:	add	x0, x0, x1
  4729a8:	lsl	x0, x0, #3
  4729ac:	mov	x1, x0
  4729b0:	ldr	x0, [x29, #168]
  4729b4:	add	x0, x0, x1
  4729b8:	ldr	x0, [x0, #8]
  4729bc:	ldr	x1, [x29, #240]
  4729c0:	cmp	x1, x0
  4729c4:	b.lt	4728ec <_obstack_memory_used@@Base+0x157ac>  // b.tstop
  4729c8:	ldr	x0, [x29, #248]
  4729cc:	lsl	x0, x0, #3
  4729d0:	ldr	x1, [x29, #192]
  4729d4:	add	x19, x1, x0
  4729d8:	add	x1, x29, #0x58
  4729dc:	add	x0, x29, #0x74
  4729e0:	mov	w3, #0x0                   	// #0
  4729e4:	mov	x2, x1
  4729e8:	ldr	x1, [x29, #40]
  4729ec:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  4729f0:	str	x0, [x19]
  4729f4:	ldr	x0, [x29, #248]
  4729f8:	lsl	x0, x0, #3
  4729fc:	ldr	x1, [x29, #192]
  472a00:	add	x0, x1, x0
  472a04:	ldr	x0, [x0]
  472a08:	cmp	x0, #0x0
  472a0c:	cset	w0, eq  // eq = none
  472a10:	and	w0, w0, #0xff
  472a14:	and	x0, x0, #0xff
  472a18:	cmp	x0, #0x0
  472a1c:	b.eq	472a3c <_obstack_memory_used@@Base+0x158fc>  // b.none
  472a20:	ldr	w0, [x29, #116]
  472a24:	cmp	w0, #0x0
  472a28:	cset	w0, ne  // ne = any
  472a2c:	and	w0, w0, #0xff
  472a30:	and	x0, x0, #0xff
  472a34:	cmp	x0, #0x0
  472a38:	b.ne	472800 <_obstack_memory_used@@Base+0x156c0>  // b.any
  472a3c:	ldr	x0, [x29, #248]
  472a40:	lsl	x0, x0, #3
  472a44:	ldr	x1, [x29, #192]
  472a48:	add	x0, x1, x0
  472a4c:	ldr	x0, [x0]
  472a50:	ldrb	w0, [x0, #104]
  472a54:	and	w0, w0, #0xffffff80
  472a58:	and	w0, w0, #0xff
  472a5c:	cmp	w0, #0x0
  472a60:	b.eq	472b98 <_obstack_memory_used@@Base+0x15a58>  // b.none
  472a64:	ldr	x0, [x29, #248]
  472a68:	lsl	x0, x0, #3
  472a6c:	ldr	x1, [x29, #136]
  472a70:	add	x19, x1, x0
  472a74:	add	x1, x29, #0x58
  472a78:	add	x0, x29, #0x74
  472a7c:	mov	w3, #0x1                   	// #1
  472a80:	mov	x2, x1
  472a84:	ldr	x1, [x29, #40]
  472a88:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  472a8c:	str	x0, [x19]
  472a90:	ldr	x0, [x29, #248]
  472a94:	lsl	x0, x0, #3
  472a98:	ldr	x1, [x29, #136]
  472a9c:	add	x0, x1, x0
  472aa0:	ldr	x0, [x0]
  472aa4:	cmp	x0, #0x0
  472aa8:	cset	w0, eq  // eq = none
  472aac:	and	w0, w0, #0xff
  472ab0:	and	x0, x0, #0xff
  472ab4:	cmp	x0, #0x0
  472ab8:	b.eq	472ad8 <_obstack_memory_used@@Base+0x15998>  // b.none
  472abc:	ldr	w0, [x29, #116]
  472ac0:	cmp	w0, #0x0
  472ac4:	cset	w0, ne  // ne = any
  472ac8:	and	w0, w0, #0xff
  472acc:	and	x0, x0, #0xff
  472ad0:	cmp	x0, #0x0
  472ad4:	b.ne	472808 <_obstack_memory_used@@Base+0x156c8>  // b.any
  472ad8:	ldr	x0, [x29, #248]
  472adc:	lsl	x0, x0, #3
  472ae0:	ldr	x1, [x29, #192]
  472ae4:	add	x0, x1, x0
  472ae8:	ldr	x1, [x0]
  472aec:	ldr	x0, [x29, #248]
  472af0:	lsl	x0, x0, #3
  472af4:	ldr	x2, [x29, #136]
  472af8:	add	x0, x2, x0
  472afc:	ldr	x0, [x0]
  472b00:	cmp	x1, x0
  472b04:	b.eq	472b20 <_obstack_memory_used@@Base+0x159e0>  // b.none
  472b08:	ldr	x0, [x29, #40]
  472b0c:	ldr	w0, [x0, #180]
  472b10:	cmp	w0, #0x1
  472b14:	b.le	472b20 <_obstack_memory_used@@Base+0x159e0>
  472b18:	mov	w0, #0x1                   	// #1
  472b1c:	strb	w0, [x29, #235]
  472b20:	ldr	x0, [x29, #248]
  472b24:	lsl	x0, x0, #3
  472b28:	ldr	x1, [x29, #128]
  472b2c:	add	x19, x1, x0
  472b30:	add	x1, x29, #0x58
  472b34:	add	x0, x29, #0x74
  472b38:	mov	w3, #0x2                   	// #2
  472b3c:	mov	x2, x1
  472b40:	ldr	x1, [x29, #40]
  472b44:	bl	461ac0 <_obstack_memory_used@@Base+0x4980>
  472b48:	str	x0, [x19]
  472b4c:	ldr	x0, [x29, #248]
  472b50:	lsl	x0, x0, #3
  472b54:	ldr	x1, [x29, #128]
  472b58:	add	x0, x1, x0
  472b5c:	ldr	x0, [x0]
  472b60:	cmp	x0, #0x0
  472b64:	cset	w0, eq  // eq = none
  472b68:	and	w0, w0, #0xff
  472b6c:	and	x0, x0, #0xff
  472b70:	cmp	x0, #0x0
  472b74:	b.eq	472be8 <_obstack_memory_used@@Base+0x15aa8>  // b.none
  472b78:	ldr	w0, [x29, #116]
  472b7c:	cmp	w0, #0x0
  472b80:	cset	w0, ne  // ne = any
  472b84:	and	w0, w0, #0xff
  472b88:	and	x0, x0, #0xff
  472b8c:	cmp	x0, #0x0
  472b90:	b.eq	472be8 <_obstack_memory_used@@Base+0x15aa8>  // b.none
  472b94:	b	47281c <_obstack_memory_used@@Base+0x156dc>
  472b98:	ldr	x0, [x29, #248]
  472b9c:	lsl	x0, x0, #3
  472ba0:	ldr	x1, [x29, #192]
  472ba4:	add	x1, x1, x0
  472ba8:	ldr	x0, [x29, #248]
  472bac:	lsl	x0, x0, #3
  472bb0:	ldr	x2, [x29, #136]
  472bb4:	add	x0, x2, x0
  472bb8:	ldr	x1, [x1]
  472bbc:	str	x1, [x0]
  472bc0:	ldr	x0, [x29, #248]
  472bc4:	lsl	x0, x0, #3
  472bc8:	ldr	x1, [x29, #192]
  472bcc:	add	x1, x1, x0
  472bd0:	ldr	x0, [x29, #248]
  472bd4:	lsl	x0, x0, #3
  472bd8:	ldr	x2, [x29, #128]
  472bdc:	add	x0, x2, x0
  472be0:	ldr	x1, [x1]
  472be4:	str	x1, [x0]
  472be8:	ldr	x0, [x29, #248]
  472bec:	lsl	x0, x0, #5
  472bf0:	ldr	x1, [x29, #160]
  472bf4:	add	x1, x1, x0
  472bf8:	add	x0, x29, #0x38
  472bfc:	bl	45d584 <_obstack_memory_used@@Base+0x444>
  472c00:	ldr	x0, [x29, #248]
  472c04:	add	x0, x0, #0x1
  472c08:	str	x0, [x29, #248]
  472c0c:	ldr	x1, [x29, #248]
  472c10:	ldr	x0, [x29, #152]
  472c14:	cmp	x1, x0
  472c18:	b.lt	4728e0 <_obstack_memory_used@@Base+0x157a0>  // b.tstop
  472c1c:	ldrb	w0, [x29, #235]
  472c20:	cmp	x0, #0x0
  472c24:	b.ne	472db0 <_obstack_memory_used@@Base+0x15c70>  // b.any
  472c28:	mov	x1, #0x100                 	// #256
  472c2c:	mov	x0, #0x8                   	// #8
  472c30:	bl	404560 <calloc@plt>
  472c34:	mov	x1, x0
  472c38:	ldr	x0, [x29, #32]
  472c3c:	str	x1, [x0, #88]
  472c40:	ldr	x0, [x29, #32]
  472c44:	ldr	x0, [x0, #88]
  472c48:	str	x0, [x29, #200]
  472c4c:	ldr	x0, [x29, #200]
  472c50:	cmp	x0, #0x0
  472c54:	cset	w0, eq  // eq = none
  472c58:	and	w0, w0, #0xff
  472c5c:	and	x0, x0, #0xff
  472c60:	cmp	x0, #0x0
  472c64:	b.ne	472810 <_obstack_memory_used@@Base+0x156d0>  // b.any
  472c68:	str	xzr, [x29, #248]
  472c6c:	b	472da0 <_obstack_memory_used@@Base+0x15c60>
  472c70:	ldr	x0, [x29, #248]
  472c74:	lsl	w0, w0, #6
  472c78:	str	w0, [x29, #236]
  472c7c:	add	x0, x29, #0x108
  472c80:	sub	x0, x0, #0xd0
  472c84:	ldr	x1, [x29, #248]
  472c88:	ldr	x0, [x0, x1, lsl #3]
  472c8c:	str	x0, [x29, #224]
  472c90:	mov	x0, #0x1                   	// #1
  472c94:	str	x0, [x29, #216]
  472c98:	b	472d88 <_obstack_memory_used@@Base+0x15c48>
  472c9c:	ldr	x0, [x29, #224]
  472ca0:	and	x0, x0, #0x1
  472ca4:	cmp	x0, #0x0
  472ca8:	b.eq	472d64 <_obstack_memory_used@@Base+0x15c24>  // b.none
  472cac:	str	xzr, [x29, #240]
  472cb0:	b	472cc0 <_obstack_memory_used@@Base+0x15b80>
  472cb4:	ldr	x0, [x29, #240]
  472cb8:	add	x0, x0, #0x1
  472cbc:	str	x0, [x29, #240]
  472cc0:	ldr	x0, [x29, #240]
  472cc4:	lsl	x0, x0, #5
  472cc8:	ldr	x1, [x29, #160]
  472ccc:	add	x0, x1, x0
  472cd0:	ldr	x1, [x29, #248]
  472cd4:	ldr	x1, [x0, x1, lsl #3]
  472cd8:	ldr	x0, [x29, #216]
  472cdc:	and	x0, x1, x0
  472ce0:	cmp	x0, #0x0
  472ce4:	b.eq	472cb4 <_obstack_memory_used@@Base+0x15b74>  // b.none
  472ce8:	ldr	x1, [x29, #40]
  472cec:	ldr	x0, [x29, #248]
  472cf0:	add	x0, x0, #0x16
  472cf4:	lsl	x0, x0, #3
  472cf8:	add	x0, x1, x0
  472cfc:	ldr	x1, [x0, #8]
  472d00:	ldr	x0, [x29, #216]
  472d04:	and	x0, x1, x0
  472d08:	cmp	x0, #0x0
  472d0c:	b.eq	472d3c <_obstack_memory_used@@Base+0x15bfc>  // b.none
  472d10:	ldr	x0, [x29, #240]
  472d14:	lsl	x0, x0, #3
  472d18:	ldr	x1, [x29, #136]
  472d1c:	add	x1, x1, x0
  472d20:	ldrsw	x0, [x29, #236]
  472d24:	lsl	x0, x0, #3
  472d28:	ldr	x2, [x29, #200]
  472d2c:	add	x0, x2, x0
  472d30:	ldr	x1, [x1]
  472d34:	str	x1, [x0]
  472d38:	b	472d64 <_obstack_memory_used@@Base+0x15c24>
  472d3c:	ldr	x0, [x29, #240]
  472d40:	lsl	x0, x0, #3
  472d44:	ldr	x1, [x29, #192]
  472d48:	add	x1, x1, x0
  472d4c:	ldrsw	x0, [x29, #236]
  472d50:	lsl	x0, x0, #3
  472d54:	ldr	x2, [x29, #200]
  472d58:	add	x0, x2, x0
  472d5c:	ldr	x1, [x1]
  472d60:	str	x1, [x0]
  472d64:	ldr	x0, [x29, #216]
  472d68:	lsl	x0, x0, #1
  472d6c:	str	x0, [x29, #216]
  472d70:	ldr	x0, [x29, #224]
  472d74:	lsr	x0, x0, #1
  472d78:	str	x0, [x29, #224]
  472d7c:	ldr	w0, [x29, #236]
  472d80:	add	w0, w0, #0x1
  472d84:	str	w0, [x29, #236]
  472d88:	ldr	x0, [x29, #224]
  472d8c:	cmp	x0, #0x0
  472d90:	b.ne	472c9c <_obstack_memory_used@@Base+0x15b5c>  // b.any
  472d94:	ldr	x0, [x29, #248]
  472d98:	add	x0, x0, #0x1
  472d9c:	str	x0, [x29, #248]
  472da0:	ldr	x0, [x29, #248]
  472da4:	cmp	x0, #0x3
  472da8:	b.le	472c70 <_obstack_memory_used@@Base+0x15b30>
  472dac:	b	472f0c <_obstack_memory_used@@Base+0x15dcc>
  472db0:	mov	x1, #0x200                 	// #512
  472db4:	mov	x0, #0x8                   	// #8
  472db8:	bl	404560 <calloc@plt>
  472dbc:	mov	x1, x0
  472dc0:	ldr	x0, [x29, #32]
  472dc4:	str	x1, [x0, #96]
  472dc8:	ldr	x0, [x29, #32]
  472dcc:	ldr	x0, [x0, #96]
  472dd0:	str	x0, [x29, #200]
  472dd4:	ldr	x0, [x29, #200]
  472dd8:	cmp	x0, #0x0
  472ddc:	cset	w0, eq  // eq = none
  472de0:	and	w0, w0, #0xff
  472de4:	and	x0, x0, #0xff
  472de8:	cmp	x0, #0x0
  472dec:	b.ne	472818 <_obstack_memory_used@@Base+0x156d8>  // b.any
  472df0:	str	xzr, [x29, #248]
  472df4:	b	472f00 <_obstack_memory_used@@Base+0x15dc0>
  472df8:	ldr	x0, [x29, #248]
  472dfc:	lsl	w0, w0, #6
  472e00:	str	w0, [x29, #236]
  472e04:	add	x0, x29, #0x108
  472e08:	sub	x0, x0, #0xd0
  472e0c:	ldr	x1, [x29, #248]
  472e10:	ldr	x0, [x0, x1, lsl #3]
  472e14:	str	x0, [x29, #224]
  472e18:	mov	x0, #0x1                   	// #1
  472e1c:	str	x0, [x29, #216]
  472e20:	b	472ee8 <_obstack_memory_used@@Base+0x15da8>
  472e24:	ldr	x0, [x29, #224]
  472e28:	and	x0, x0, #0x1
  472e2c:	cmp	x0, #0x0
  472e30:	b.eq	472ec4 <_obstack_memory_used@@Base+0x15d84>  // b.none
  472e34:	str	xzr, [x29, #240]
  472e38:	b	472e48 <_obstack_memory_used@@Base+0x15d08>
  472e3c:	ldr	x0, [x29, #240]
  472e40:	add	x0, x0, #0x1
  472e44:	str	x0, [x29, #240]
  472e48:	ldr	x0, [x29, #240]
  472e4c:	lsl	x0, x0, #5
  472e50:	ldr	x1, [x29, #160]
  472e54:	add	x0, x1, x0
  472e58:	ldr	x1, [x29, #248]
  472e5c:	ldr	x1, [x0, x1, lsl #3]
  472e60:	ldr	x0, [x29, #216]
  472e64:	and	x0, x1, x0
  472e68:	cmp	x0, #0x0
  472e6c:	b.eq	472e3c <_obstack_memory_used@@Base+0x15cfc>  // b.none
  472e70:	ldr	x0, [x29, #240]
  472e74:	lsl	x0, x0, #3
  472e78:	ldr	x1, [x29, #192]
  472e7c:	add	x1, x1, x0
  472e80:	ldrsw	x0, [x29, #236]
  472e84:	lsl	x0, x0, #3
  472e88:	ldr	x2, [x29, #200]
  472e8c:	add	x0, x2, x0
  472e90:	ldr	x1, [x1]
  472e94:	str	x1, [x0]
  472e98:	ldr	x0, [x29, #240]
  472e9c:	lsl	x0, x0, #3
  472ea0:	ldr	x1, [x29, #136]
  472ea4:	add	x1, x1, x0
  472ea8:	ldrsw	x0, [x29, #236]
  472eac:	add	x0, x0, #0x100
  472eb0:	lsl	x0, x0, #3
  472eb4:	ldr	x2, [x29, #200]
  472eb8:	add	x0, x2, x0
  472ebc:	ldr	x1, [x1]
  472ec0:	str	x1, [x0]
  472ec4:	ldr	x0, [x29, #216]
  472ec8:	lsl	x0, x0, #1
  472ecc:	str	x0, [x29, #216]
  472ed0:	ldr	x0, [x29, #224]
  472ed4:	lsr	x0, x0, #1
  472ed8:	str	x0, [x29, #224]
  472edc:	ldr	w0, [x29, #236]
  472ee0:	add	w0, w0, #0x1
  472ee4:	str	w0, [x29, #236]
  472ee8:	ldr	x0, [x29, #224]
  472eec:	cmp	x0, #0x0
  472ef0:	b.ne	472e24 <_obstack_memory_used@@Base+0x15ce4>  // b.any
  472ef4:	ldr	x0, [x29, #248]
  472ef8:	add	x0, x0, #0x1
  472efc:	str	x0, [x29, #248]
  472f00:	ldr	x0, [x29, #248]
  472f04:	cmp	x0, #0x3
  472f08:	b.le	472df8 <_obstack_memory_used@@Base+0x15cb8>
  472f0c:	add	x0, x29, #0x38
  472f10:	mov	x1, #0xa                   	// #10
  472f14:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  472f18:	and	w0, w0, #0xff
  472f1c:	cmp	w0, #0x0
  472f20:	b.eq	472fc4 <_obstack_memory_used@@Base+0x15e84>  // b.none
  472f24:	str	xzr, [x29, #240]
  472f28:	b	472fac <_obstack_memory_used@@Base+0x15e6c>
  472f2c:	ldr	x0, [x29, #240]
  472f30:	lsl	x0, x0, #5
  472f34:	ldr	x1, [x29, #160]
  472f38:	add	x0, x1, x0
  472f3c:	mov	x1, #0xa                   	// #10
  472f40:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  472f44:	and	w0, w0, #0xff
  472f48:	cmp	w0, #0x0
  472f4c:	b.eq	472fa0 <_obstack_memory_used@@Base+0x15e60>  // b.none
  472f50:	ldr	x0, [x29, #240]
  472f54:	lsl	x0, x0, #3
  472f58:	ldr	x1, [x29, #128]
  472f5c:	add	x1, x1, x0
  472f60:	ldr	x0, [x29, #200]
  472f64:	add	x0, x0, #0x50
  472f68:	ldr	x1, [x1]
  472f6c:	str	x1, [x0]
  472f70:	ldrb	w0, [x29, #235]
  472f74:	cmp	w0, #0x0
  472f78:	b.eq	472fc0 <_obstack_memory_used@@Base+0x15e80>  // b.none
  472f7c:	ldr	x0, [x29, #240]
  472f80:	lsl	x0, x0, #3
  472f84:	ldr	x1, [x29, #128]
  472f88:	add	x1, x1, x0
  472f8c:	ldr	x0, [x29, #200]
  472f90:	add	x0, x0, #0x850
  472f94:	ldr	x1, [x1]
  472f98:	str	x1, [x0]
  472f9c:	b	472fc0 <_obstack_memory_used@@Base+0x15e80>
  472fa0:	ldr	x0, [x29, #240]
  472fa4:	add	x0, x0, #0x1
  472fa8:	str	x0, [x29, #240]
  472fac:	ldr	x1, [x29, #240]
  472fb0:	ldr	x0, [x29, #152]
  472fb4:	cmp	x1, x0
  472fb8:	b.lt	472f2c <_obstack_memory_used@@Base+0x15dec>  // b.tstop
  472fbc:	b	472fc4 <_obstack_memory_used@@Base+0x15e84>
  472fc0:	nop
  472fc4:	ldrb	w0, [x29, #215]
  472fc8:	cmp	w0, #0x0
  472fcc:	b.eq	472fd8 <_obstack_memory_used@@Base+0x15e98>  // b.none
  472fd0:	ldr	x0, [x29, #192]
  472fd4:	bl	404880 <free@plt>
  472fd8:	ldr	x0, [x29, #104]
  472fdc:	bl	404880 <free@plt>
  472fe0:	str	xzr, [x29, #248]
  472fe4:	b	47301c <_obstack_memory_used@@Base+0x15edc>
  472fe8:	ldr	x1, [x29, #248]
  472fec:	mov	x0, x1
  472ff0:	lsl	x0, x0, #1
  472ff4:	add	x0, x0, x1
  472ff8:	lsl	x0, x0, #3
  472ffc:	mov	x1, x0
  473000:	ldr	x0, [x29, #168]
  473004:	add	x0, x0, x1
  473008:	ldr	x0, [x0, #16]
  47300c:	bl	404880 <free@plt>
  473010:	ldr	x0, [x29, #248]
  473014:	add	x0, x0, #0x1
  473018:	str	x0, [x29, #248]
  47301c:	ldr	x1, [x29, #248]
  473020:	ldr	x0, [x29, #152]
  473024:	cmp	x1, x0
  473028:	b.lt	472fe8 <_obstack_memory_used@@Base+0x15ea8>  // b.tstop
  47302c:	ldrb	w0, [x29, #191]
  473030:	cmp	w0, #0x0
  473034:	b.eq	473040 <_obstack_memory_used@@Base+0x15f00>  // b.none
  473038:	ldr	x0, [x29, #176]
  47303c:	bl	404880 <free@plt>
  473040:	mov	w0, #0x1                   	// #1
  473044:	mov	sp, x29
  473048:	ldr	x19, [sp, #16]
  47304c:	ldp	x29, x30, [sp], #256
  473050:	ret
  473054:	stp	x29, x30, [sp, #-256]!
  473058:	mov	x29, sp
  47305c:	str	x0, [sp, #40]
  473060:	str	x1, [sp, #32]
  473064:	str	x2, [sp, #24]
  473068:	str	x3, [sp, #16]
  47306c:	ldr	x0, [sp, #32]
  473070:	add	x0, x0, #0x8
  473074:	str	x0, [sp, #176]
  473078:	add	x0, sp, #0x70
  47307c:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  473080:	str	xzr, [sp, #224]
  473084:	str	xzr, [sp, #248]
  473088:	b	4738d0 <_obstack_memory_used@@Base+0x16790>
  47308c:	ldr	x0, [sp, #40]
  473090:	ldr	x1, [x0]
  473094:	ldr	x0, [sp, #176]
  473098:	ldr	x2, [x0, #16]
  47309c:	ldr	x0, [sp, #248]
  4730a0:	lsl	x0, x0, #3
  4730a4:	add	x0, x2, x0
  4730a8:	ldr	x0, [x0]
  4730ac:	lsl	x0, x0, #4
  4730b0:	add	x0, x1, x0
  4730b4:	str	x0, [sp, #168]
  4730b8:	ldr	x0, [sp, #168]
  4730bc:	ldrb	w0, [x0, #8]
  4730c0:	str	w0, [sp, #164]
  4730c4:	ldr	x0, [sp, #168]
  4730c8:	ldr	w0, [x0, #8]
  4730cc:	ubfx	x0, x0, #8, #10
  4730d0:	and	w0, w0, #0xffff
  4730d4:	str	w0, [sp, #160]
  4730d8:	ldr	w0, [sp, #164]
  4730dc:	cmp	w0, #0x1
  4730e0:	b.ne	4730fc <_obstack_memory_used@@Base+0x15fbc>  // b.any
  4730e4:	ldr	x0, [sp, #168]
  4730e8:	ldrb	w0, [x0]
  4730ec:	and	x1, x0, #0xff
  4730f0:	add	x0, sp, #0x70
  4730f4:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  4730f8:	b	4731f4 <_obstack_memory_used@@Base+0x160b4>
  4730fc:	ldr	w0, [sp, #164]
  473100:	cmp	w0, #0x3
  473104:	b.ne	47311c <_obstack_memory_used@@Base+0x15fdc>  // b.any
  473108:	ldr	x0, [sp, #168]
  47310c:	ldr	x1, [x0]
  473110:	add	x0, sp, #0x70
  473114:	bl	45d584 <_obstack_memory_used@@Base+0x444>
  473118:	b	4731f4 <_obstack_memory_used@@Base+0x160b4>
  47311c:	ldr	w0, [sp, #164]
  473120:	cmp	w0, #0x5
  473124:	b.ne	473198 <_obstack_memory_used@@Base+0x16058>  // b.any
  473128:	ldr	x0, [sp, #40]
  47312c:	ldr	w0, [x0, #180]
  473130:	cmp	w0, #0x1
  473134:	b.le	47314c <_obstack_memory_used@@Base+0x1600c>
  473138:	ldr	x0, [sp, #40]
  47313c:	ldr	x1, [x0, #120]
  473140:	add	x0, sp, #0x70
  473144:	bl	45d584 <_obstack_memory_used@@Base+0x444>
  473148:	b	473154 <_obstack_memory_used@@Base+0x16014>
  47314c:	add	x0, sp, #0x70
  473150:	bl	45d4cc <_obstack_memory_used@@Base+0x38c>
  473154:	ldr	x0, [sp, #40]
  473158:	ldr	x0, [x0, #216]
  47315c:	and	x0, x0, #0x40
  473160:	cmp	x0, #0x0
  473164:	b.ne	473174 <_obstack_memory_used@@Base+0x16034>  // b.any
  473168:	add	x0, sp, #0x70
  47316c:	mov	x1, #0xa                   	// #10
  473170:	bl	45d3c4 <_obstack_memory_used@@Base+0x284>
  473174:	ldr	x0, [sp, #40]
  473178:	ldr	x0, [x0, #216]
  47317c:	and	x0, x0, #0x80
  473180:	cmp	x0, #0x0
  473184:	b.eq	4731f4 <_obstack_memory_used@@Base+0x160b4>  // b.none
  473188:	add	x0, sp, #0x70
  47318c:	mov	x1, #0x0                   	// #0
  473190:	bl	45d3c4 <_obstack_memory_used@@Base+0x284>
  473194:	b	4731f4 <_obstack_memory_used@@Base+0x160b4>
  473198:	ldr	w0, [sp, #164]
  47319c:	cmp	w0, #0x7
  4731a0:	b.ne	4738a8 <_obstack_memory_used@@Base+0x16768>  // b.any
  4731a4:	add	x0, sp, #0x70
  4731a8:	mov	x2, #0x10                  	// #16
  4731ac:	mov	w1, #0xffffffff            	// #-1
  4731b0:	bl	4044d0 <memset@plt>
  4731b4:	ldr	x0, [sp, #40]
  4731b8:	ldr	x0, [x0, #216]
  4731bc:	and	x0, x0, #0x40
  4731c0:	cmp	x0, #0x0
  4731c4:	b.ne	4731d4 <_obstack_memory_used@@Base+0x16094>  // b.any
  4731c8:	add	x0, sp, #0x70
  4731cc:	mov	x1, #0xa                   	// #10
  4731d0:	bl	45d3c4 <_obstack_memory_used@@Base+0x284>
  4731d4:	ldr	x0, [sp, #40]
  4731d8:	ldr	x0, [x0, #216]
  4731dc:	and	x0, x0, #0x80
  4731e0:	cmp	x0, #0x0
  4731e4:	b.eq	4731f4 <_obstack_memory_used@@Base+0x160b4>  // b.none
  4731e8:	add	x0, sp, #0x70
  4731ec:	mov	x1, #0x0                   	// #0
  4731f0:	bl	45d3c4 <_obstack_memory_used@@Base+0x284>
  4731f4:	ldr	w0, [sp, #160]
  4731f8:	cmp	w0, #0x0
  4731fc:	b.eq	473518 <_obstack_memory_used@@Base+0x163d8>  // b.none
  473200:	ldr	w0, [sp, #160]
  473204:	and	w0, w0, #0x20
  473208:	cmp	w0, #0x0
  47320c:	b.eq	473240 <_obstack_memory_used@@Base+0x16100>  // b.none
  473210:	add	x0, sp, #0x70
  473214:	mov	x1, #0xa                   	// #10
  473218:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  47321c:	strb	w0, [sp, #159]
  473220:	add	x0, sp, #0x70
  473224:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  473228:	ldrb	w0, [sp, #159]
  47322c:	cmp	w0, #0x0
  473230:	b.eq	4738b0 <_obstack_memory_used@@Base+0x16770>  // b.none
  473234:	add	x0, sp, #0x70
  473238:	mov	x1, #0xa                   	// #10
  47323c:	bl	45d348 <_obstack_memory_used@@Base+0x208>
  473240:	ldr	w0, [sp, #160]
  473244:	and	w0, w0, #0x80
  473248:	cmp	w0, #0x0
  47324c:	b.eq	47325c <_obstack_memory_used@@Base+0x1611c>  // b.none
  473250:	add	x0, sp, #0x70
  473254:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  473258:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  47325c:	ldr	w0, [sp, #160]
  473260:	and	w0, w0, #0x4
  473264:	cmp	w0, #0x0
  473268:	b.eq	4733b8 <_obstack_memory_used@@Base+0x16278>  // b.none
  47326c:	str	xzr, [sp, #216]
  473270:	ldr	w0, [sp, #164]
  473274:	cmp	w0, #0x1
  473278:	b.ne	4732a0 <_obstack_memory_used@@Base+0x16160>  // b.any
  47327c:	ldr	x0, [sp, #168]
  473280:	ldrb	w0, [x0, #10]
  473284:	and	w0, w0, #0x40
  473288:	and	w0, w0, #0xff
  47328c:	cmp	w0, #0x0
  473290:	b.ne	4732a0 <_obstack_memory_used@@Base+0x16160>  // b.any
  473294:	add	x0, sp, #0x70
  473298:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  47329c:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  4732a0:	ldr	x0, [sp, #40]
  4732a4:	ldr	w0, [x0, #180]
  4732a8:	cmp	w0, #0x1
  4732ac:	b.le	473340 <_obstack_memory_used@@Base+0x16200>
  4732b0:	str	xzr, [sp, #240]
  4732b4:	b	473330 <_obstack_memory_used@@Base+0x161f0>
  4732b8:	add	x0, sp, #0x70
  4732bc:	ldr	x1, [sp, #240]
  4732c0:	ldr	x1, [x0, x1, lsl #3]
  4732c4:	ldr	x2, [sp, #40]
  4732c8:	ldr	x0, [sp, #240]
  4732cc:	add	x0, x0, #0x16
  4732d0:	lsl	x0, x0, #3
  4732d4:	add	x0, x2, x0
  4732d8:	ldr	x2, [x0, #8]
  4732dc:	ldr	x0, [sp, #40]
  4732e0:	ldr	x3, [x0, #120]
  4732e4:	ldr	x0, [sp, #240]
  4732e8:	lsl	x0, x0, #3
  4732ec:	add	x0, x3, x0
  4732f0:	ldr	x0, [x0]
  4732f4:	mvn	x0, x0
  4732f8:	orr	x0, x2, x0
  4732fc:	and	x2, x1, x0
  473300:	add	x0, sp, #0x70
  473304:	ldr	x1, [sp, #240]
  473308:	str	x2, [x0, x1, lsl #3]
  47330c:	add	x0, sp, #0x70
  473310:	ldr	x1, [sp, #240]
  473314:	ldr	x0, [x0, x1, lsl #3]
  473318:	ldr	x1, [sp, #216]
  47331c:	orr	x0, x1, x0
  473320:	str	x0, [sp, #216]
  473324:	ldr	x0, [sp, #240]
  473328:	add	x0, x0, #0x1
  47332c:	str	x0, [sp, #240]
  473330:	ldr	x0, [sp, #240]
  473334:	cmp	x0, #0x3
  473338:	b.le	4732b8 <_obstack_memory_used@@Base+0x16178>
  47333c:	b	4733ac <_obstack_memory_used@@Base+0x1626c>
  473340:	str	xzr, [sp, #240]
  473344:	b	4733a0 <_obstack_memory_used@@Base+0x16260>
  473348:	add	x0, sp, #0x70
  47334c:	ldr	x1, [sp, #240]
  473350:	ldr	x1, [x0, x1, lsl #3]
  473354:	ldr	x2, [sp, #40]
  473358:	ldr	x0, [sp, #240]
  47335c:	add	x0, x0, #0x16
  473360:	lsl	x0, x0, #3
  473364:	add	x0, x2, x0
  473368:	ldr	x0, [x0, #8]
  47336c:	and	x2, x1, x0
  473370:	add	x0, sp, #0x70
  473374:	ldr	x1, [sp, #240]
  473378:	str	x2, [x0, x1, lsl #3]
  47337c:	add	x0, sp, #0x70
  473380:	ldr	x1, [sp, #240]
  473384:	ldr	x0, [x0, x1, lsl #3]
  473388:	ldr	x1, [sp, #216]
  47338c:	orr	x0, x1, x0
  473390:	str	x0, [sp, #216]
  473394:	ldr	x0, [sp, #240]
  473398:	add	x0, x0, #0x1
  47339c:	str	x0, [sp, #240]
  4733a0:	ldr	x0, [sp, #240]
  4733a4:	cmp	x0, #0x3
  4733a8:	b.le	473348 <_obstack_memory_used@@Base+0x16208>
  4733ac:	ldr	x0, [sp, #216]
  4733b0:	cmp	x0, #0x0
  4733b4:	b.eq	4738b8 <_obstack_memory_used@@Base+0x16778>  // b.none
  4733b8:	ldr	w0, [sp, #160]
  4733bc:	and	w0, w0, #0x8
  4733c0:	cmp	w0, #0x0
  4733c4:	b.eq	473518 <_obstack_memory_used@@Base+0x163d8>  // b.none
  4733c8:	str	xzr, [sp, #208]
  4733cc:	ldr	w0, [sp, #164]
  4733d0:	cmp	w0, #0x1
  4733d4:	b.ne	4733fc <_obstack_memory_used@@Base+0x162bc>  // b.any
  4733d8:	ldr	x0, [sp, #168]
  4733dc:	ldrb	w0, [x0, #10]
  4733e0:	and	w0, w0, #0x40
  4733e4:	and	w0, w0, #0xff
  4733e8:	cmp	w0, #0x0
  4733ec:	b.eq	4733fc <_obstack_memory_used@@Base+0x162bc>  // b.none
  4733f0:	add	x0, sp, #0x70
  4733f4:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  4733f8:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  4733fc:	ldr	x0, [sp, #40]
  473400:	ldr	w0, [x0, #180]
  473404:	cmp	w0, #0x1
  473408:	b.le	47349c <_obstack_memory_used@@Base+0x1635c>
  47340c:	str	xzr, [sp, #240]
  473410:	b	47348c <_obstack_memory_used@@Base+0x1634c>
  473414:	add	x0, sp, #0x70
  473418:	ldr	x1, [sp, #240]
  47341c:	ldr	x1, [x0, x1, lsl #3]
  473420:	ldr	x2, [sp, #40]
  473424:	ldr	x0, [sp, #240]
  473428:	add	x0, x0, #0x16
  47342c:	lsl	x0, x0, #3
  473430:	add	x0, x2, x0
  473434:	ldr	x2, [x0, #8]
  473438:	ldr	x0, [sp, #40]
  47343c:	ldr	x3, [x0, #120]
  473440:	ldr	x0, [sp, #240]
  473444:	lsl	x0, x0, #3
  473448:	add	x0, x3, x0
  47344c:	ldr	x0, [x0]
  473450:	and	x0, x2, x0
  473454:	mvn	x0, x0
  473458:	and	x2, x1, x0
  47345c:	add	x0, sp, #0x70
  473460:	ldr	x1, [sp, #240]
  473464:	str	x2, [x0, x1, lsl #3]
  473468:	add	x0, sp, #0x70
  47346c:	ldr	x1, [sp, #240]
  473470:	ldr	x0, [x0, x1, lsl #3]
  473474:	ldr	x1, [sp, #208]
  473478:	orr	x0, x1, x0
  47347c:	str	x0, [sp, #208]
  473480:	ldr	x0, [sp, #240]
  473484:	add	x0, x0, #0x1
  473488:	str	x0, [sp, #240]
  47348c:	ldr	x0, [sp, #240]
  473490:	cmp	x0, #0x3
  473494:	b.le	473414 <_obstack_memory_used@@Base+0x162d4>
  473498:	b	47350c <_obstack_memory_used@@Base+0x163cc>
  47349c:	str	xzr, [sp, #240]
  4734a0:	b	473500 <_obstack_memory_used@@Base+0x163c0>
  4734a4:	add	x0, sp, #0x70
  4734a8:	ldr	x1, [sp, #240]
  4734ac:	ldr	x1, [x0, x1, lsl #3]
  4734b0:	ldr	x2, [sp, #40]
  4734b4:	ldr	x0, [sp, #240]
  4734b8:	add	x0, x0, #0x16
  4734bc:	lsl	x0, x0, #3
  4734c0:	add	x0, x2, x0
  4734c4:	ldr	x0, [x0, #8]
  4734c8:	mvn	x0, x0
  4734cc:	and	x2, x1, x0
  4734d0:	add	x0, sp, #0x70
  4734d4:	ldr	x1, [sp, #240]
  4734d8:	str	x2, [x0, x1, lsl #3]
  4734dc:	add	x0, sp, #0x70
  4734e0:	ldr	x1, [sp, #240]
  4734e4:	ldr	x0, [x0, x1, lsl #3]
  4734e8:	ldr	x1, [sp, #208]
  4734ec:	orr	x0, x1, x0
  4734f0:	str	x0, [sp, #208]
  4734f4:	ldr	x0, [sp, #240]
  4734f8:	add	x0, x0, #0x1
  4734fc:	str	x0, [sp, #240]
  473500:	ldr	x0, [sp, #240]
  473504:	cmp	x0, #0x3
  473508:	b.le	4734a4 <_obstack_memory_used@@Base+0x16364>
  47350c:	ldr	x0, [sp, #208]
  473510:	cmp	x0, #0x0
  473514:	b.eq	4738c0 <_obstack_memory_used@@Base+0x16780>  // b.none
  473518:	str	xzr, [sp, #240]
  47351c:	b	4737ec <_obstack_memory_used@@Base+0x166ac>
  473520:	ldr	w0, [sp, #164]
  473524:	cmp	w0, #0x1
  473528:	b.ne	473568 <_obstack_memory_used@@Base+0x16428>  // b.any
  47352c:	ldr	x0, [sp, #240]
  473530:	lsl	x0, x0, #5
  473534:	ldr	x1, [sp, #16]
  473538:	add	x2, x1, x0
  47353c:	ldr	x0, [sp, #168]
  473540:	ldrb	w0, [x0]
  473544:	and	x0, x0, #0xff
  473548:	mov	x1, x0
  47354c:	mov	x0, x2
  473550:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  473554:	and	w0, w0, #0xff
  473558:	eor	w0, w0, #0x1
  47355c:	and	w0, w0, #0xff
  473560:	cmp	w0, #0x0
  473564:	b.ne	4737d4 <_obstack_memory_used@@Base+0x16694>  // b.any
  473568:	str	xzr, [sp, #200]
  47356c:	str	xzr, [sp, #232]
  473570:	b	4735cc <_obstack_memory_used@@Base+0x1648c>
  473574:	add	x0, sp, #0x70
  473578:	ldr	x1, [sp, #232]
  47357c:	ldr	x1, [x0, x1, lsl #3]
  473580:	ldr	x0, [sp, #240]
  473584:	lsl	x0, x0, #5
  473588:	ldr	x2, [sp, #16]
  47358c:	add	x0, x2, x0
  473590:	ldr	x2, [sp, #232]
  473594:	ldr	x0, [x0, x2, lsl #3]
  473598:	and	x2, x1, x0
  47359c:	add	x0, sp, #0x30
  4735a0:	ldr	x1, [sp, #232]
  4735a4:	str	x2, [x0, x1, lsl #3]
  4735a8:	add	x0, sp, #0x30
  4735ac:	ldr	x1, [sp, #232]
  4735b0:	ldr	x0, [x0, x1, lsl #3]
  4735b4:	ldr	x1, [sp, #200]
  4735b8:	orr	x0, x1, x0
  4735bc:	str	x0, [sp, #200]
  4735c0:	ldr	x0, [sp, #232]
  4735c4:	add	x0, x0, #0x1
  4735c8:	str	x0, [sp, #232]
  4735cc:	ldr	x0, [sp, #232]
  4735d0:	cmp	x0, #0x3
  4735d4:	b.le	473574 <_obstack_memory_used@@Base+0x16434>
  4735d8:	ldr	x0, [sp, #200]
  4735dc:	cmp	x0, #0x0
  4735e0:	b.eq	4737dc <_obstack_memory_used@@Base+0x1669c>  // b.none
  4735e4:	str	xzr, [sp, #184]
  4735e8:	ldr	x0, [sp, #184]
  4735ec:	str	x0, [sp, #192]
  4735f0:	str	xzr, [sp, #232]
  4735f4:	b	4736a4 <_obstack_memory_used@@Base+0x16564>
  4735f8:	add	x0, sp, #0x70
  4735fc:	ldr	x1, [sp, #232]
  473600:	ldr	x0, [x0, x1, lsl #3]
  473604:	mvn	x1, x0
  473608:	ldr	x0, [sp, #240]
  47360c:	lsl	x0, x0, #5
  473610:	ldr	x2, [sp, #16]
  473614:	add	x0, x2, x0
  473618:	ldr	x2, [sp, #232]
  47361c:	ldr	x0, [x0, x2, lsl #3]
  473620:	and	x2, x1, x0
  473624:	add	x0, sp, #0x50
  473628:	ldr	x1, [sp, #232]
  47362c:	str	x2, [x0, x1, lsl #3]
  473630:	add	x0, sp, #0x50
  473634:	ldr	x1, [sp, #232]
  473638:	ldr	x0, [x0, x1, lsl #3]
  47363c:	ldr	x1, [sp, #192]
  473640:	orr	x0, x1, x0
  473644:	str	x0, [sp, #192]
  473648:	add	x0, sp, #0x70
  47364c:	ldr	x1, [sp, #232]
  473650:	ldr	x1, [x0, x1, lsl #3]
  473654:	ldr	x0, [sp, #240]
  473658:	lsl	x0, x0, #5
  47365c:	ldr	x2, [sp, #16]
  473660:	add	x0, x2, x0
  473664:	ldr	x2, [sp, #232]
  473668:	ldr	x0, [x0, x2, lsl #3]
  47366c:	mvn	x0, x0
  473670:	and	x2, x1, x0
  473674:	add	x0, sp, #0x70
  473678:	ldr	x1, [sp, #232]
  47367c:	str	x2, [x0, x1, lsl #3]
  473680:	add	x0, sp, #0x70
  473684:	ldr	x1, [sp, #232]
  473688:	ldr	x0, [x0, x1, lsl #3]
  47368c:	ldr	x1, [sp, #184]
  473690:	orr	x0, x1, x0
  473694:	str	x0, [sp, #184]
  473698:	ldr	x0, [sp, #232]
  47369c:	add	x0, x0, #0x1
  4736a0:	str	x0, [sp, #232]
  4736a4:	ldr	x0, [sp, #232]
  4736a8:	cmp	x0, #0x3
  4736ac:	b.le	4735f8 <_obstack_memory_used@@Base+0x164b8>
  4736b0:	ldr	x0, [sp, #192]
  4736b4:	cmp	x0, #0x0
  4736b8:	b.eq	473764 <_obstack_memory_used@@Base+0x16624>  // b.none
  4736bc:	ldr	x0, [sp, #224]
  4736c0:	lsl	x0, x0, #5
  4736c4:	ldr	x1, [sp, #16]
  4736c8:	add	x0, x1, x0
  4736cc:	add	x1, sp, #0x50
  4736d0:	bl	45d4f4 <_obstack_memory_used@@Base+0x3b4>
  4736d4:	ldr	x0, [sp, #240]
  4736d8:	lsl	x0, x0, #5
  4736dc:	ldr	x1, [sp, #16]
  4736e0:	add	x0, x1, x0
  4736e4:	add	x1, sp, #0x30
  4736e8:	bl	45d4f4 <_obstack_memory_used@@Base+0x3b4>
  4736ec:	ldr	x1, [sp, #224]
  4736f0:	mov	x0, x1
  4736f4:	lsl	x0, x0, #1
  4736f8:	add	x0, x0, x1
  4736fc:	lsl	x0, x0, #3
  473700:	mov	x1, x0
  473704:	ldr	x0, [sp, #24]
  473708:	add	x2, x0, x1
  47370c:	ldr	x1, [sp, #240]
  473710:	mov	x0, x1
  473714:	lsl	x0, x0, #1
  473718:	add	x0, x0, x1
  47371c:	lsl	x0, x0, #3
  473720:	mov	x1, x0
  473724:	ldr	x0, [sp, #24]
  473728:	add	x0, x0, x1
  47372c:	mov	x1, x0
  473730:	mov	x0, x2
  473734:	bl	4602c4 <_obstack_memory_used@@Base+0x3184>
  473738:	str	w0, [sp, #152]
  47373c:	ldr	w0, [sp, #152]
  473740:	cmp	w0, #0x0
  473744:	cset	w0, ne  // ne = any
  473748:	and	w0, w0, #0xff
  47374c:	and	x0, x0, #0xff
  473750:	cmp	x0, #0x0
  473754:	b.ne	4738ec <_obstack_memory_used@@Base+0x167ac>  // b.any
  473758:	ldr	x0, [sp, #224]
  47375c:	add	x0, x0, #0x1
  473760:	str	x0, [sp, #224]
  473764:	ldr	x1, [sp, #240]
  473768:	mov	x0, x1
  47376c:	lsl	x0, x0, #1
  473770:	add	x0, x0, x1
  473774:	lsl	x0, x0, #3
  473778:	mov	x1, x0
  47377c:	ldr	x0, [sp, #24]
  473780:	add	x2, x0, x1
  473784:	ldr	x0, [sp, #176]
  473788:	ldr	x1, [x0, #16]
  47378c:	ldr	x0, [sp, #248]
  473790:	lsl	x0, x0, #3
  473794:	add	x0, x1, x0
  473798:	ldr	x0, [x0]
  47379c:	mov	x1, x0
  4737a0:	mov	x0, x2
  4737a4:	bl	460ff8 <_obstack_memory_used@@Base+0x3eb8>
  4737a8:	strb	w0, [sp, #151]
  4737ac:	ldrb	w0, [sp, #151]
  4737b0:	eor	w0, w0, #0x1
  4737b4:	and	w0, w0, #0xff
  4737b8:	and	x0, x0, #0xff
  4737bc:	cmp	x0, #0x0
  4737c0:	b.ne	4738f4 <_obstack_memory_used@@Base+0x167b4>  // b.any
  4737c4:	ldr	x0, [sp, #184]
  4737c8:	cmp	x0, #0x0
  4737cc:	b.eq	473800 <_obstack_memory_used@@Base+0x166c0>  // b.none
  4737d0:	b	4737e0 <_obstack_memory_used@@Base+0x166a0>
  4737d4:	nop
  4737d8:	b	4737e0 <_obstack_memory_used@@Base+0x166a0>
  4737dc:	nop
  4737e0:	ldr	x0, [sp, #240]
  4737e4:	add	x0, x0, #0x1
  4737e8:	str	x0, [sp, #240]
  4737ec:	ldr	x1, [sp, #240]
  4737f0:	ldr	x0, [sp, #224]
  4737f4:	cmp	x1, x0
  4737f8:	b.lt	473520 <_obstack_memory_used@@Base+0x163e0>  // b.tstop
  4737fc:	b	473804 <_obstack_memory_used@@Base+0x166c4>
  473800:	nop
  473804:	ldr	x1, [sp, #240]
  473808:	ldr	x0, [sp, #224]
  47380c:	cmp	x1, x0
  473810:	b.ne	4738c4 <_obstack_memory_used@@Base+0x16784>  // b.any
  473814:	ldr	x0, [sp, #224]
  473818:	lsl	x0, x0, #5
  47381c:	ldr	x1, [sp, #16]
  473820:	add	x0, x1, x0
  473824:	add	x1, sp, #0x70
  473828:	bl	45d4f4 <_obstack_memory_used@@Base+0x3b4>
  47382c:	ldr	x1, [sp, #224]
  473830:	mov	x0, x1
  473834:	lsl	x0, x0, #1
  473838:	add	x0, x0, x1
  47383c:	lsl	x0, x0, #3
  473840:	mov	x1, x0
  473844:	ldr	x0, [sp, #24]
  473848:	add	x2, x0, x1
  47384c:	ldr	x0, [sp, #176]
  473850:	ldr	x1, [x0, #16]
  473854:	ldr	x0, [sp, #248]
  473858:	lsl	x0, x0, #3
  47385c:	add	x0, x1, x0
  473860:	ldr	x0, [x0]
  473864:	mov	x1, x0
  473868:	mov	x0, x2
  47386c:	bl	46012c <_obstack_memory_used@@Base+0x2fec>
  473870:	str	w0, [sp, #152]
  473874:	ldr	w0, [sp, #152]
  473878:	cmp	w0, #0x0
  47387c:	cset	w0, ne  // ne = any
  473880:	and	w0, w0, #0xff
  473884:	and	x0, x0, #0xff
  473888:	cmp	x0, #0x0
  47388c:	b.ne	4738fc <_obstack_memory_used@@Base+0x167bc>  // b.any
  473890:	ldr	x0, [sp, #224]
  473894:	add	x0, x0, #0x1
  473898:	str	x0, [sp, #224]
  47389c:	add	x0, sp, #0x70
  4738a0:	bl	45d4a4 <_obstack_memory_used@@Base+0x364>
  4738a4:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  4738a8:	nop
  4738ac:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  4738b0:	nop
  4738b4:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  4738b8:	nop
  4738bc:	b	4738c4 <_obstack_memory_used@@Base+0x16784>
  4738c0:	nop
  4738c4:	ldr	x0, [sp, #248]
  4738c8:	add	x0, x0, #0x1
  4738cc:	str	x0, [sp, #248]
  4738d0:	ldr	x0, [sp, #176]
  4738d4:	ldr	x0, [x0, #8]
  4738d8:	ldr	x1, [sp, #248]
  4738dc:	cmp	x1, x0
  4738e0:	b.lt	47308c <_obstack_memory_used@@Base+0x15f4c>  // b.tstop
  4738e4:	ldr	x0, [sp, #224]
  4738e8:	b	473950 <_obstack_memory_used@@Base+0x16810>
  4738ec:	nop
  4738f0:	b	473900 <_obstack_memory_used@@Base+0x167c0>
  4738f4:	nop
  4738f8:	b	473900 <_obstack_memory_used@@Base+0x167c0>
  4738fc:	nop
  473900:	str	xzr, [sp, #240]
  473904:	b	47393c <_obstack_memory_used@@Base+0x167fc>
  473908:	ldr	x1, [sp, #240]
  47390c:	mov	x0, x1
  473910:	lsl	x0, x0, #1
  473914:	add	x0, x0, x1
  473918:	lsl	x0, x0, #3
  47391c:	mov	x1, x0
  473920:	ldr	x0, [sp, #24]
  473924:	add	x0, x0, x1
  473928:	ldr	x0, [x0, #16]
  47392c:	bl	404880 <free@plt>
  473930:	ldr	x0, [sp, #240]
  473934:	add	x0, x0, #0x1
  473938:	str	x0, [sp, #240]
  47393c:	ldr	x1, [sp, #240]
  473940:	ldr	x0, [sp, #224]
  473944:	cmp	x1, x0
  473948:	b.lt	473908 <_obstack_memory_used@@Base+0x167c8>  // b.tstop
  47394c:	mov	x0, #0xffffffffffffffff    	// #-1
  473950:	ldp	x29, x30, [sp], #256
  473954:	ret
  473958:	stp	x29, x30, [sp, #-128]!
  47395c:	mov	x29, sp
  473960:	str	x0, [sp, #40]
  473964:	str	x1, [sp, #32]
  473968:	str	x2, [sp, #24]
  47396c:	str	x3, [sp, #16]
  473970:	ldr	x0, [sp, #40]
  473974:	ldr	x1, [x0]
  473978:	ldr	x0, [sp, #32]
  47397c:	lsl	x0, x0, #4
  473980:	add	x0, x1, x0
  473984:	str	x0, [sp, #96]
  473988:	ldr	x0, [sp, #96]
  47398c:	ldrb	w0, [x0, #8]
  473990:	cmp	w0, #0x7
  473994:	cset	w0, eq  // eq = none
  473998:	and	w0, w0, #0xff
  47399c:	and	x0, x0, #0xff
  4739a0:	cmp	x0, #0x0
  4739a4:	b.eq	473bc0 <_obstack_memory_used@@Base+0x16a80>  // b.none
  4739a8:	ldr	x0, [sp, #24]
  4739ac:	ldr	x1, [x0, #8]
  4739b0:	ldr	x0, [sp, #16]
  4739b4:	add	x0, x1, x0
  4739b8:	ldrb	w0, [x0]
  4739bc:	strb	w0, [sp, #63]
  4739c0:	ldrb	w0, [sp, #63]
  4739c4:	cmp	w0, #0xc1
  4739c8:	cset	w0, ls  // ls = plast
  4739cc:	and	w0, w0, #0xff
  4739d0:	and	x0, x0, #0xff
  4739d4:	cmp	x0, #0x0
  4739d8:	b.eq	4739e4 <_obstack_memory_used@@Base+0x168a4>  // b.none
  4739dc:	mov	w0, #0x0                   	// #0
  4739e0:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  4739e4:	ldr	x0, [sp, #16]
  4739e8:	add	x1, x0, #0x1
  4739ec:	ldr	x0, [sp, #24]
  4739f0:	ldr	x0, [x0, #88]
  4739f4:	cmp	x1, x0
  4739f8:	b.lt	473a04 <_obstack_memory_used@@Base+0x168c4>  // b.tstop
  4739fc:	mov	w0, #0x0                   	// #0
  473a00:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473a04:	ldr	x0, [sp, #24]
  473a08:	ldr	x1, [x0, #8]
  473a0c:	ldr	x0, [sp, #16]
  473a10:	add	x0, x0, #0x1
  473a14:	add	x0, x1, x0
  473a18:	ldrb	w0, [x0]
  473a1c:	strb	w0, [sp, #62]
  473a20:	ldrb	w0, [sp, #63]
  473a24:	cmp	w0, #0xdf
  473a28:	b.hi	473a54 <_obstack_memory_used@@Base+0x16914>  // b.pmore
  473a2c:	ldrsb	w0, [sp, #62]
  473a30:	cmp	w0, #0x0
  473a34:	b.ge	473a44 <_obstack_memory_used@@Base+0x16904>  // b.tcont
  473a38:	ldrb	w0, [sp, #62]
  473a3c:	cmp	w0, #0xbf
  473a40:	b.ls	473a4c <_obstack_memory_used@@Base+0x1690c>  // b.plast
  473a44:	mov	w0, #0x0                   	// #0
  473a48:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473a4c:	mov	w0, #0x2                   	// #2
  473a50:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473a54:	ldrb	w0, [sp, #63]
  473a58:	cmp	w0, #0xef
  473a5c:	b.hi	473a88 <_obstack_memory_used@@Base+0x16948>  // b.pmore
  473a60:	mov	w0, #0x3                   	// #3
  473a64:	str	w0, [sp, #124]
  473a68:	ldrb	w0, [sp, #63]
  473a6c:	cmp	w0, #0xe0
  473a70:	b.ne	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.any
  473a74:	ldrb	w0, [sp, #62]
  473a78:	cmp	w0, #0x9f
  473a7c:	b.hi	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.pmore
  473a80:	mov	w0, #0x0                   	// #0
  473a84:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473a88:	ldrb	w0, [sp, #63]
  473a8c:	cmp	w0, #0xf7
  473a90:	b.hi	473abc <_obstack_memory_used@@Base+0x1697c>  // b.pmore
  473a94:	mov	w0, #0x4                   	// #4
  473a98:	str	w0, [sp, #124]
  473a9c:	ldrb	w0, [sp, #63]
  473aa0:	cmp	w0, #0xf0
  473aa4:	b.ne	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.any
  473aa8:	ldrb	w0, [sp, #62]
  473aac:	cmp	w0, #0x8f
  473ab0:	b.hi	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.pmore
  473ab4:	mov	w0, #0x0                   	// #0
  473ab8:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473abc:	ldrb	w0, [sp, #63]
  473ac0:	cmp	w0, #0xfb
  473ac4:	b.hi	473af0 <_obstack_memory_used@@Base+0x169b0>  // b.pmore
  473ac8:	mov	w0, #0x5                   	// #5
  473acc:	str	w0, [sp, #124]
  473ad0:	ldrb	w0, [sp, #63]
  473ad4:	cmp	w0, #0xf8
  473ad8:	b.ne	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.any
  473adc:	ldrb	w0, [sp, #62]
  473ae0:	cmp	w0, #0x87
  473ae4:	b.hi	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.pmore
  473ae8:	mov	w0, #0x0                   	// #0
  473aec:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473af0:	ldrb	w0, [sp, #63]
  473af4:	cmp	w0, #0xfd
  473af8:	b.hi	473b24 <_obstack_memory_used@@Base+0x169e4>  // b.pmore
  473afc:	mov	w0, #0x6                   	// #6
  473b00:	str	w0, [sp, #124]
  473b04:	ldrb	w0, [sp, #63]
  473b08:	cmp	w0, #0xfc
  473b0c:	b.ne	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.any
  473b10:	ldrb	w0, [sp, #62]
  473b14:	cmp	w0, #0x83
  473b18:	b.hi	473b2c <_obstack_memory_used@@Base+0x169ec>  // b.pmore
  473b1c:	mov	w0, #0x0                   	// #0
  473b20:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473b24:	mov	w0, #0x0                   	// #0
  473b28:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473b2c:	ldrsw	x1, [sp, #124]
  473b30:	ldr	x0, [sp, #16]
  473b34:	add	x1, x1, x0
  473b38:	ldr	x0, [sp, #24]
  473b3c:	ldr	x0, [x0, #88]
  473b40:	cmp	x1, x0
  473b44:	b.le	473b50 <_obstack_memory_used@@Base+0x16a10>
  473b48:	mov	w0, #0x0                   	// #0
  473b4c:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473b50:	mov	x0, #0x1                   	// #1
  473b54:	str	x0, [sp, #112]
  473b58:	b	473ba8 <_obstack_memory_used@@Base+0x16a68>
  473b5c:	ldr	x0, [sp, #24]
  473b60:	ldr	x0, [x0, #8]
  473b64:	ldr	x2, [sp, #16]
  473b68:	ldr	x1, [sp, #112]
  473b6c:	add	x1, x2, x1
  473b70:	add	x0, x0, x1
  473b74:	ldrb	w0, [x0]
  473b78:	strb	w0, [sp, #62]
  473b7c:	ldrsb	w0, [sp, #62]
  473b80:	cmp	w0, #0x0
  473b84:	b.ge	473b94 <_obstack_memory_used@@Base+0x16a54>  // b.tcont
  473b88:	ldrb	w0, [sp, #62]
  473b8c:	cmp	w0, #0xbf
  473b90:	b.ls	473b9c <_obstack_memory_used@@Base+0x16a5c>  // b.plast
  473b94:	mov	w0, #0x0                   	// #0
  473b98:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473b9c:	ldr	x0, [sp, #112]
  473ba0:	add	x0, x0, #0x1
  473ba4:	str	x0, [sp, #112]
  473ba8:	ldrsw	x0, [sp, #124]
  473bac:	ldr	x1, [sp, #112]
  473bb0:	cmp	x1, x0
  473bb4:	b.lt	473b5c <_obstack_memory_used@@Base+0x16a1c>  // b.tstop
  473bb8:	ldr	w0, [sp, #124]
  473bbc:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473bc0:	ldr	x1, [sp, #16]
  473bc4:	ldr	x0, [sp, #24]
  473bc8:	bl	45d67c <_obstack_memory_used@@Base+0x53c>
  473bcc:	str	w0, [sp, #124]
  473bd0:	ldr	x0, [sp, #96]
  473bd4:	ldrb	w0, [x0, #8]
  473bd8:	cmp	w0, #0x5
  473bdc:	b.ne	473c64 <_obstack_memory_used@@Base+0x16b24>  // b.any
  473be0:	ldr	w0, [sp, #124]
  473be4:	cmp	w0, #0x1
  473be8:	b.gt	473bf4 <_obstack_memory_used@@Base+0x16ab4>
  473bec:	mov	w0, #0x0                   	// #0
  473bf0:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473bf4:	ldr	x0, [sp, #40]
  473bf8:	ldr	x0, [x0, #216]
  473bfc:	and	x0, x0, #0x40
  473c00:	cmp	x0, #0x0
  473c04:	b.ne	473c24 <_obstack_memory_used@@Base+0x16ae4>  // b.any
  473c08:	ldr	x0, [sp, #24]
  473c0c:	ldr	x1, [x0, #8]
  473c10:	ldr	x0, [sp, #16]
  473c14:	add	x0, x1, x0
  473c18:	ldrb	w0, [x0]
  473c1c:	cmp	w0, #0xa
  473c20:	b.eq	473c54 <_obstack_memory_used@@Base+0x16b14>  // b.none
  473c24:	ldr	x0, [sp, #40]
  473c28:	ldr	x0, [x0, #216]
  473c2c:	and	x0, x0, #0x80
  473c30:	cmp	x0, #0x0
  473c34:	b.eq	473c5c <_obstack_memory_used@@Base+0x16b1c>  // b.none
  473c38:	ldr	x0, [sp, #24]
  473c3c:	ldr	x1, [x0, #8]
  473c40:	ldr	x0, [sp, #16]
  473c44:	add	x0, x1, x0
  473c48:	ldrb	w0, [x0]
  473c4c:	cmp	w0, #0x0
  473c50:	b.ne	473c5c <_obstack_memory_used@@Base+0x16b1c>  // b.any
  473c54:	mov	w0, #0x0                   	// #0
  473c58:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473c5c:	ldr	w0, [sp, #124]
  473c60:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473c64:	ldr	x1, [sp, #16]
  473c68:	ldr	x0, [sp, #24]
  473c6c:	bl	45d764 <_obstack_memory_used@@Base+0x624>
  473c70:	str	w0, [sp, #92]
  473c74:	ldr	w0, [sp, #92]
  473c78:	cmp	w0, #0x1
  473c7c:	b.gt	473c8c <_obstack_memory_used@@Base+0x16b4c>
  473c80:	ldr	w0, [sp, #124]
  473c84:	cmp	w0, #0x1
  473c88:	b.le	473c98 <_obstack_memory_used@@Base+0x16b58>
  473c8c:	ldr	w0, [sp, #124]
  473c90:	cmp	w0, #0x0
  473c94:	b.ne	473ca0 <_obstack_memory_used@@Base+0x16b60>  // b.any
  473c98:	mov	w0, #0x0                   	// #0
  473c9c:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473ca0:	ldr	x0, [sp, #96]
  473ca4:	ldrb	w0, [x0, #8]
  473ca8:	cmp	w0, #0x6
  473cac:	b.ne	473e90 <_obstack_memory_used@@Base+0x16d50>  // b.any
  473cb0:	ldr	x0, [sp, #96]
  473cb4:	ldr	x0, [x0]
  473cb8:	str	x0, [sp, #80]
  473cbc:	str	wzr, [sp, #108]
  473cc0:	ldr	x0, [sp, #80]
  473cc4:	ldr	x0, [x0, #64]
  473cc8:	cmp	x0, #0x0
  473ccc:	b.ne	473cf0 <_obstack_memory_used@@Base+0x16bb0>  // b.any
  473cd0:	ldr	x0, [sp, #80]
  473cd4:	ldr	x0, [x0, #72]
  473cd8:	cmp	x0, #0x0
  473cdc:	b.ne	473cf0 <_obstack_memory_used@@Base+0x16bb0>  // b.any
  473ce0:	ldr	x0, [sp, #80]
  473ce4:	ldr	x0, [x0, #40]
  473ce8:	cmp	x0, #0x0
  473cec:	b.eq	473d00 <_obstack_memory_used@@Base+0x16bc0>  // b.none
  473cf0:	ldr	x1, [sp, #16]
  473cf4:	ldr	x0, [sp, #24]
  473cf8:	bl	45d710 <_obstack_memory_used@@Base+0x5d0>
  473cfc:	b	473d04 <_obstack_memory_used@@Base+0x16bc4>
  473d00:	mov	w0, #0x0                   	// #0
  473d04:	str	w0, [sp, #76]
  473d08:	str	xzr, [sp, #112]
  473d0c:	b	473d4c <_obstack_memory_used@@Base+0x16c0c>
  473d10:	ldr	x0, [sp, #80]
  473d14:	ldr	x1, [x0]
  473d18:	ldr	x0, [sp, #112]
  473d1c:	lsl	x0, x0, #2
  473d20:	add	x0, x1, x0
  473d24:	ldr	w0, [x0]
  473d28:	ldr	w1, [sp, #76]
  473d2c:	cmp	w1, w0
  473d30:	b.ne	473d40 <_obstack_memory_used@@Base+0x16c00>  // b.any
  473d34:	ldr	w0, [sp, #124]
  473d38:	str	w0, [sp, #108]
  473d3c:	b	473e44 <_obstack_memory_used@@Base+0x16d04>
  473d40:	ldr	x0, [sp, #112]
  473d44:	add	x0, x0, #0x1
  473d48:	str	x0, [sp, #112]
  473d4c:	ldr	x0, [sp, #80]
  473d50:	ldr	x0, [x0, #40]
  473d54:	ldr	x1, [sp, #112]
  473d58:	cmp	x1, x0
  473d5c:	b.lt	473d10 <_obstack_memory_used@@Base+0x16bd0>  // b.tstop
  473d60:	str	xzr, [sp, #112]
  473d64:	b	473db0 <_obstack_memory_used@@Base+0x16c70>
  473d68:	ldr	x0, [sp, #80]
  473d6c:	ldr	x1, [x0, #24]
  473d70:	ldr	x0, [sp, #112]
  473d74:	lsl	x0, x0, #3
  473d78:	add	x0, x1, x0
  473d7c:	ldr	x0, [x0]
  473d80:	str	x0, [sp, #64]
  473d84:	ldr	x1, [sp, #64]
  473d88:	ldr	w0, [sp, #76]
  473d8c:	bl	4043e0 <iswctype@plt>
  473d90:	cmp	w0, #0x0
  473d94:	b.eq	473da4 <_obstack_memory_used@@Base+0x16c64>  // b.none
  473d98:	ldr	w0, [sp, #124]
  473d9c:	str	w0, [sp, #108]
  473da0:	b	473e44 <_obstack_memory_used@@Base+0x16d04>
  473da4:	ldr	x0, [sp, #112]
  473da8:	add	x0, x0, #0x1
  473dac:	str	x0, [sp, #112]
  473db0:	ldr	x0, [sp, #80]
  473db4:	ldr	x0, [x0, #72]
  473db8:	ldr	x1, [sp, #112]
  473dbc:	cmp	x1, x0
  473dc0:	b.lt	473d68 <_obstack_memory_used@@Base+0x16c28>  // b.tstop
  473dc4:	str	xzr, [sp, #112]
  473dc8:	b	473e2c <_obstack_memory_used@@Base+0x16cec>
  473dcc:	ldr	x0, [sp, #80]
  473dd0:	ldr	x1, [x0, #8]
  473dd4:	ldr	x0, [sp, #112]
  473dd8:	lsl	x0, x0, #2
  473ddc:	add	x0, x1, x0
  473de0:	ldr	w0, [x0]
  473de4:	ldr	w1, [sp, #76]
  473de8:	cmp	w1, w0
  473dec:	b.cc	473e20 <_obstack_memory_used@@Base+0x16ce0>  // b.lo, b.ul, b.last
  473df0:	ldr	x0, [sp, #80]
  473df4:	ldr	x1, [x0, #16]
  473df8:	ldr	x0, [sp, #112]
  473dfc:	lsl	x0, x0, #2
  473e00:	add	x0, x1, x0
  473e04:	ldr	w0, [x0]
  473e08:	ldr	w1, [sp, #76]
  473e0c:	cmp	w1, w0
  473e10:	b.hi	473e20 <_obstack_memory_used@@Base+0x16ce0>  // b.pmore
  473e14:	ldr	w0, [sp, #124]
  473e18:	str	w0, [sp, #108]
  473e1c:	b	473e44 <_obstack_memory_used@@Base+0x16d04>
  473e20:	ldr	x0, [sp, #112]
  473e24:	add	x0, x0, #0x1
  473e28:	str	x0, [sp, #112]
  473e2c:	ldr	x0, [sp, #80]
  473e30:	ldr	x0, [x0, #64]
  473e34:	ldr	x1, [sp, #112]
  473e38:	cmp	x1, x0
  473e3c:	b.lt	473dcc <_obstack_memory_used@@Base+0x16c8c>  // b.tstop
  473e40:	nop
  473e44:	ldr	x0, [sp, #80]
  473e48:	ldrb	w0, [x0, #32]
  473e4c:	and	w0, w0, #0x1
  473e50:	and	w0, w0, #0xff
  473e54:	cmp	w0, #0x0
  473e58:	b.ne	473e64 <_obstack_memory_used@@Base+0x16d24>  // b.any
  473e5c:	ldr	w0, [sp, #108]
  473e60:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473e64:	ldr	w0, [sp, #108]
  473e68:	cmp	w0, #0x0
  473e6c:	b.le	473e78 <_obstack_memory_used@@Base+0x16d38>
  473e70:	mov	w0, #0x0                   	// #0
  473e74:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473e78:	ldr	w0, [sp, #92]
  473e7c:	ldr	w2, [sp, #124]
  473e80:	ldr	w1, [sp, #124]
  473e84:	cmp	w2, w0
  473e88:	csel	w0, w1, w0, ge  // ge = tcont
  473e8c:	b	473e94 <_obstack_memory_used@@Base+0x16d54>
  473e90:	mov	w0, #0x0                   	// #0
  473e94:	ldp	x29, x30, [sp], #128
  473e98:	ret
  473e9c:	stp	x29, x30, [sp, #-64]!
  473ea0:	mov	x29, sp
  473ea4:	str	x0, [sp, #40]
  473ea8:	str	x1, [sp, #32]
  473eac:	str	x2, [sp, #24]
  473eb0:	ldr	x0, [sp, #40]
  473eb4:	ldr	x1, [x0, #8]
  473eb8:	ldr	x0, [sp, #24]
  473ebc:	add	x0, x1, x0
  473ec0:	ldrb	w0, [x0]
  473ec4:	strb	w0, [sp, #63]
  473ec8:	ldr	x0, [sp, #32]
  473ecc:	ldrb	w0, [x0, #8]
  473ed0:	cmp	w0, #0x7
  473ed4:	b.eq	473f4c <_obstack_memory_used@@Base+0x16e0c>  // b.none
  473ed8:	cmp	w0, #0x7
  473edc:	b.gt	473fb0 <_obstack_memory_used@@Base+0x16e70>
  473ee0:	cmp	w0, #0x5
  473ee4:	b.eq	473f60 <_obstack_memory_used@@Base+0x16e20>  // b.none
  473ee8:	cmp	w0, #0x5
  473eec:	b.gt	473fb0 <_obstack_memory_used@@Base+0x16e70>
  473ef0:	cmp	w0, #0x1
  473ef4:	b.eq	473f04 <_obstack_memory_used@@Base+0x16dc4>  // b.none
  473ef8:	cmp	w0, #0x3
  473efc:	b.eq	473f20 <_obstack_memory_used@@Base+0x16de0>  // b.none
  473f00:	b	473fb0 <_obstack_memory_used@@Base+0x16e70>
  473f04:	ldr	x0, [sp, #32]
  473f08:	ldrb	w0, [x0]
  473f0c:	ldrb	w1, [sp, #63]
  473f10:	cmp	w1, w0
  473f14:	b.eq	473fb8 <_obstack_memory_used@@Base+0x16e78>  // b.none
  473f18:	mov	w0, #0x0                   	// #0
  473f1c:	b	4740bc <_obstack_memory_used@@Base+0x16f7c>
  473f20:	ldr	x0, [sp, #32]
  473f24:	ldr	x0, [x0]
  473f28:	ldrb	w1, [sp, #63]
  473f2c:	bl	45d444 <_obstack_memory_used@@Base+0x304>
  473f30:	and	w0, w0, #0xff
  473f34:	eor	w0, w0, #0x1
  473f38:	and	w0, w0, #0xff
  473f3c:	cmp	w0, #0x0
  473f40:	b.eq	473fc0 <_obstack_memory_used@@Base+0x16e80>  // b.none
  473f44:	mov	w0, #0x0                   	// #0
  473f48:	b	4740bc <_obstack_memory_used@@Base+0x16f7c>
  473f4c:	ldrsb	w0, [sp, #63]
  473f50:	cmp	w0, #0x0
  473f54:	b.ge	473f60 <_obstack_memory_used@@Base+0x16e20>  // b.tcont
  473f58:	mov	w0, #0x0                   	// #0
  473f5c:	b	4740bc <_obstack_memory_used@@Base+0x16f7c>
  473f60:	ldrb	w0, [sp, #63]
  473f64:	cmp	w0, #0xa
  473f68:	b.ne	473f84 <_obstack_memory_used@@Base+0x16e44>  // b.any
  473f6c:	ldr	x0, [sp, #40]
  473f70:	ldr	x0, [x0, #152]
  473f74:	ldr	x0, [x0, #216]
  473f78:	and	x0, x0, #0x40
  473f7c:	cmp	x0, #0x0
  473f80:	b.eq	473fa8 <_obstack_memory_used@@Base+0x16e68>  // b.none
  473f84:	ldrb	w0, [sp, #63]
  473f88:	cmp	w0, #0x0
  473f8c:	b.ne	473fc8 <_obstack_memory_used@@Base+0x16e88>  // b.any
  473f90:	ldr	x0, [sp, #40]
  473f94:	ldr	x0, [x0, #152]
  473f98:	ldr	x0, [x0, #216]
  473f9c:	and	x0, x0, #0x80
  473fa0:	cmp	x0, #0x0
  473fa4:	b.eq	473fc8 <_obstack_memory_used@@Base+0x16e88>  // b.none
  473fa8:	mov	w0, #0x0                   	// #0
  473fac:	b	4740bc <_obstack_memory_used@@Base+0x16f7c>
  473fb0:	mov	w0, #0x0                   	// #0
  473fb4:	b	4740bc <_obstack_memory_used@@Base+0x16f7c>
  473fb8:	nop
  473fbc:	b	473fcc <_obstack_memory_used@@Base+0x16e8c>
  473fc0:	nop
  473fc4:	b	473fcc <_obstack_memory_used@@Base+0x16e8c>
  473fc8:	nop
  473fcc:	ldr	x0, [sp, #32]
  473fd0:	ldr	w0, [x0, #8]
  473fd4:	and	w0, w0, #0x3ff00
  473fd8:	cmp	w0, #0x0
  473fdc:	b.eq	4740b8 <_obstack_memory_used@@Base+0x16f78>  // b.none
  473fe0:	ldr	x3, [sp, #40]
  473fe4:	ldr	x0, [sp, #40]
  473fe8:	ldr	w0, [x0, #160]
  473fec:	mov	w2, w0
  473ff0:	ldr	x1, [sp, #24]
  473ff4:	mov	x0, x3
  473ff8:	bl	45fee8 <_obstack_memory_used@@Base+0x2da8>
  473ffc:	str	w0, [sp, #56]
  474000:	ldr	x0, [sp, #32]
  474004:	ldr	w0, [x0, #8]
  474008:	ubfx	x0, x0, #8, #10
  47400c:	and	w0, w0, #0xffff
  474010:	and	w0, w0, #0x4
  474014:	cmp	w0, #0x0
  474018:	b.eq	47402c <_obstack_memory_used@@Base+0x16eec>  // b.none
  47401c:	ldr	w0, [sp, #56]
  474020:	and	w0, w0, #0x1
  474024:	cmp	w0, #0x0
  474028:	b.eq	4740b0 <_obstack_memory_used@@Base+0x16f70>  // b.none
  47402c:	ldr	x0, [sp, #32]
  474030:	ldr	w0, [x0, #8]
  474034:	ubfx	x0, x0, #8, #10
  474038:	and	w0, w0, #0xffff
  47403c:	and	w0, w0, #0x8
  474040:	cmp	w0, #0x0
  474044:	b.eq	474058 <_obstack_memory_used@@Base+0x16f18>  // b.none
  474048:	ldr	w0, [sp, #56]
  47404c:	and	w0, w0, #0x1
  474050:	cmp	w0, #0x0
  474054:	b.ne	4740b0 <_obstack_memory_used@@Base+0x16f70>  // b.any
  474058:	ldr	x0, [sp, #32]
  47405c:	ldr	w0, [x0, #8]
  474060:	ubfx	x0, x0, #8, #10
  474064:	and	w0, w0, #0xffff
  474068:	and	w0, w0, #0x20
  47406c:	cmp	w0, #0x0
  474070:	b.eq	474084 <_obstack_memory_used@@Base+0x16f44>  // b.none
  474074:	ldr	w0, [sp, #56]
  474078:	and	w0, w0, #0x2
  47407c:	cmp	w0, #0x0
  474080:	b.eq	4740b0 <_obstack_memory_used@@Base+0x16f70>  // b.none
  474084:	ldr	x0, [sp, #32]
  474088:	ldr	w0, [x0, #8]
  47408c:	ubfx	x0, x0, #8, #10
  474090:	and	w0, w0, #0xffff
  474094:	and	w0, w0, #0x80
  474098:	cmp	w0, #0x0
  47409c:	b.eq	4740b8 <_obstack_memory_used@@Base+0x16f78>  // b.none
  4740a0:	ldr	w0, [sp, #56]
  4740a4:	and	w0, w0, #0x8
  4740a8:	cmp	w0, #0x0
  4740ac:	b.ne	4740b8 <_obstack_memory_used@@Base+0x16f78>  // b.any
  4740b0:	mov	w0, #0x0                   	// #0
  4740b4:	b	4740bc <_obstack_memory_used@@Base+0x16f7c>
  4740b8:	mov	w0, #0x1                   	// #1
  4740bc:	ldp	x29, x30, [sp], #64
  4740c0:	ret
  4740c4:	stp	x29, x30, [sp, #-64]!
  4740c8:	mov	x29, sp
  4740cc:	str	x0, [sp, #24]
  4740d0:	str	w1, [sp, #20]
  4740d4:	ldr	x0, [sp, #24]
  4740d8:	str	x0, [sp, #56]
  4740dc:	ldr	x0, [sp, #56]
  4740e0:	ldr	x0, [x0, #64]
  4740e4:	mov	x1, x0
  4740e8:	mov	x0, #0xffffffffffffffe     	// #1152921504606846974
  4740ec:	cmp	x1, x0
  4740f0:	cset	w0, hi  // hi = pmore
  4740f4:	and	w0, w0, #0xff
  4740f8:	and	x0, x0, #0xff
  4740fc:	cmp	x0, #0x0
  474100:	b.eq	47410c <_obstack_memory_used@@Base+0x16fcc>  // b.none
  474104:	mov	w0, #0xc                   	// #12
  474108:	b	474264 <_obstack_memory_used@@Base+0x17124>
  47410c:	ldrsw	x1, [sp, #20]
  474110:	ldr	x0, [sp, #56]
  474114:	ldr	x0, [x0, #64]
  474118:	lsl	x2, x0, #1
  47411c:	ldr	x0, [sp, #56]
  474120:	ldr	x0, [x0, #88]
  474124:	cmp	x2, x0
  474128:	csel	x0, x2, x0, le
  47412c:	cmp	x1, x0
  474130:	csel	x0, x1, x0, ge  // ge = tcont
  474134:	mov	x1, x0
  474138:	ldr	x0, [sp, #56]
  47413c:	bl	45dad8 <_obstack_memory_used@@Base+0x998>
  474140:	str	w0, [sp, #52]
  474144:	ldr	w0, [sp, #52]
  474148:	cmp	w0, #0x0
  47414c:	cset	w0, ne  // ne = any
  474150:	and	w0, w0, #0xff
  474154:	and	x0, x0, #0xff
  474158:	cmp	x0, #0x0
  47415c:	b.eq	474168 <_obstack_memory_used@@Base+0x17028>  // b.none
  474160:	ldr	w0, [sp, #52]
  474164:	b	474264 <_obstack_memory_used@@Base+0x17124>
  474168:	ldr	x0, [sp, #24]
  47416c:	ldr	x0, [x0, #184]
  474170:	cmp	x0, #0x0
  474174:	b.eq	4741d0 <_obstack_memory_used@@Base+0x17090>  // b.none
  474178:	ldr	x0, [sp, #24]
  47417c:	ldr	x2, [x0, #184]
  474180:	ldr	x0, [sp, #56]
  474184:	ldr	x0, [x0, #64]
  474188:	add	x0, x0, #0x1
  47418c:	lsl	x0, x0, #3
  474190:	mov	x1, x0
  474194:	mov	x0, x2
  474198:	bl	4045e0 <realloc@plt>
  47419c:	str	x0, [sp, #40]
  4741a0:	ldr	x0, [sp, #40]
  4741a4:	cmp	x0, #0x0
  4741a8:	cset	w0, eq  // eq = none
  4741ac:	and	w0, w0, #0xff
  4741b0:	and	x0, x0, #0xff
  4741b4:	cmp	x0, #0x0
  4741b8:	b.eq	4741c4 <_obstack_memory_used@@Base+0x17084>  // b.none
  4741bc:	mov	w0, #0xc                   	// #12
  4741c0:	b	474264 <_obstack_memory_used@@Base+0x17124>
  4741c4:	ldr	x0, [sp, #24]
  4741c8:	ldr	x1, [sp, #40]
  4741cc:	str	x1, [x0, #184]
  4741d0:	ldr	x0, [sp, #56]
  4741d4:	ldrb	w0, [x0, #136]
  4741d8:	cmp	w0, #0x0
  4741dc:	b.eq	47422c <_obstack_memory_used@@Base+0x170ec>  // b.none
  4741e0:	ldr	x0, [sp, #56]
  4741e4:	ldr	w0, [x0, #144]
  4741e8:	cmp	w0, #0x1
  4741ec:	b.le	474220 <_obstack_memory_used@@Base+0x170e0>
  4741f0:	ldr	x0, [sp, #56]
  4741f4:	bl	45e0bc <_obstack_memory_used@@Base+0xf7c>
  4741f8:	str	w0, [sp, #52]
  4741fc:	ldr	w0, [sp, #52]
  474200:	cmp	w0, #0x0
  474204:	cset	w0, ne  // ne = any
  474208:	and	w0, w0, #0xff
  47420c:	and	x0, x0, #0xff
  474210:	cmp	x0, #0x0
  474214:	b.eq	474260 <_obstack_memory_used@@Base+0x17120>  // b.none
  474218:	ldr	w0, [sp, #52]
  47421c:	b	474264 <_obstack_memory_used@@Base+0x17124>
  474220:	ldr	x0, [sp, #56]
  474224:	bl	45ed30 <_obstack_memory_used@@Base+0x1bf0>
  474228:	b	474260 <_obstack_memory_used@@Base+0x17120>
  47422c:	ldr	x0, [sp, #56]
  474230:	ldr	w0, [x0, #144]
  474234:	cmp	w0, #0x1
  474238:	b.le	474248 <_obstack_memory_used@@Base+0x17108>
  47423c:	ldr	x0, [sp, #56]
  474240:	bl	45dd64 <_obstack_memory_used@@Base+0xc24>
  474244:	b	474260 <_obstack_memory_used@@Base+0x17120>
  474248:	ldr	x0, [sp, #56]
  47424c:	ldr	x0, [x0, #120]
  474250:	cmp	x0, #0x0
  474254:	b.eq	474260 <_obstack_memory_used@@Base+0x17120>  // b.none
  474258:	ldr	x0, [sp, #56]
  47425c:	bl	45ee28 <_obstack_memory_used@@Base+0x1ce8>
  474260:	mov	w0, #0x0                   	// #0
  474264:	ldp	x29, x30, [sp], #64
  474268:	ret
  47426c:	stp	x29, x30, [sp, #-64]!
  474270:	mov	x29, sp
  474274:	str	x0, [sp, #40]
  474278:	str	w1, [sp, #36]
  47427c:	str	x2, [sp, #24]
  474280:	ldr	x0, [sp, #40]
  474284:	ldr	w1, [sp, #36]
  474288:	str	w1, [x0, #160]
  47428c:	ldr	x0, [sp, #40]
  474290:	mov	x1, #0xffffffffffffffff    	// #-1
  474294:	str	x1, [x0, #168]
  474298:	ldr	x0, [sp, #24]
  47429c:	cmp	x0, #0x0
  4742a0:	b.le	47437c <_obstack_memory_used@@Base+0x1723c>
  4742a4:	mov	x0, #0x28                  	// #40
  4742a8:	str	x0, [sp, #56]
  4742ac:	mov	x1, #0xffffffffffffffff    	// #-1
  4742b0:	ldr	x0, [sp, #56]
  4742b4:	udiv	x0, x1, x0
  4742b8:	cmp	x0, #0x0
  4742bc:	b.lt	4742d0 <_obstack_memory_used@@Base+0x17190>  // b.tstop
  4742c0:	mov	x1, #0xffffffffffffffff    	// #-1
  4742c4:	ldr	x0, [sp, #56]
  4742c8:	udiv	x0, x1, x0
  4742cc:	b	4742d4 <_obstack_memory_used@@Base+0x17194>
  4742d0:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  4742d4:	ldr	x1, [sp, #24]
  4742d8:	cmp	x0, x1
  4742dc:	cset	w0, cc  // cc = lo, ul, last
  4742e0:	and	w0, w0, #0xff
  4742e4:	and	x0, x0, #0xff
  4742e8:	cmp	x0, #0x0
  4742ec:	b.eq	4742f8 <_obstack_memory_used@@Base+0x171b8>  // b.none
  4742f0:	mov	w0, #0xc                   	// #12
  4742f4:	b	4743a4 <_obstack_memory_used@@Base+0x17264>
  4742f8:	ldr	x1, [sp, #24]
  4742fc:	mov	x0, x1
  474300:	lsl	x0, x0, #2
  474304:	add	x0, x0, x1
  474308:	lsl	x0, x0, #3
  47430c:	bl	4043f0 <malloc@plt>
  474310:	mov	x1, x0
  474314:	ldr	x0, [sp, #40]
  474318:	str	x1, [x0, #216]
  47431c:	ldr	x0, [sp, #24]
  474320:	lsl	x0, x0, #3
  474324:	bl	4043f0 <malloc@plt>
  474328:	mov	x1, x0
  47432c:	ldr	x0, [sp, #40]
  474330:	str	x1, [x0, #248]
  474334:	ldr	x0, [sp, #40]
  474338:	ldr	x0, [x0, #216]
  47433c:	cmp	x0, #0x0
  474340:	cset	w0, eq  // eq = none
  474344:	and	w0, w0, #0xff
  474348:	and	x0, x0, #0xff
  47434c:	cmp	x0, #0x0
  474350:	b.ne	474374 <_obstack_memory_used@@Base+0x17234>  // b.any
  474354:	ldr	x0, [sp, #40]
  474358:	ldr	x0, [x0, #248]
  47435c:	cmp	x0, #0x0
  474360:	cset	w0, eq  // eq = none
  474364:	and	w0, w0, #0xff
  474368:	and	x0, x0, #0xff
  47436c:	cmp	x0, #0x0
  474370:	b.eq	47437c <_obstack_memory_used@@Base+0x1723c>  // b.none
  474374:	mov	w0, #0xc                   	// #12
  474378:	b	4743a4 <_obstack_memory_used@@Base+0x17264>
  47437c:	ldr	x0, [sp, #40]
  474380:	ldr	x1, [sp, #24]
  474384:	str	x1, [x0, #208]
  474388:	ldr	x0, [sp, #40]
  47438c:	mov	w1, #0x1                   	// #1
  474390:	str	w1, [x0, #224]
  474394:	ldr	x0, [sp, #40]
  474398:	ldr	x1, [sp, #24]
  47439c:	str	x1, [x0, #240]
  4743a0:	mov	w0, #0x0                   	// #0
  4743a4:	ldp	x29, x30, [sp], #64
  4743a8:	ret
  4743ac:	stp	x29, x30, [sp, #-64]!
  4743b0:	mov	x29, sp
  4743b4:	str	x0, [sp, #24]
  4743b8:	str	xzr, [sp, #56]
  4743bc:	b	474480 <_obstack_memory_used@@Base+0x17340>
  4743c0:	ldr	x0, [sp, #24]
  4743c4:	ldr	x1, [x0, #248]
  4743c8:	ldr	x0, [sp, #56]
  4743cc:	lsl	x0, x0, #3
  4743d0:	add	x0, x1, x0
  4743d4:	ldr	x0, [x0]
  4743d8:	str	x0, [sp, #40]
  4743dc:	str	xzr, [sp, #48]
  4743e0:	b	474420 <_obstack_memory_used@@Base+0x172e0>
  4743e4:	ldr	x0, [sp, #40]
  4743e8:	ldr	x1, [x0, #40]
  4743ec:	ldr	x0, [sp, #48]
  4743f0:	lsl	x0, x0, #3
  4743f4:	add	x0, x1, x0
  4743f8:	ldr	x0, [x0]
  4743fc:	str	x0, [sp, #32]
  474400:	ldr	x0, [sp, #32]
  474404:	ldr	x0, [x0, #32]
  474408:	bl	404880 <free@plt>
  47440c:	ldr	x0, [sp, #32]
  474410:	bl	404880 <free@plt>
  474414:	ldr	x0, [sp, #48]
  474418:	add	x0, x0, #0x1
  47441c:	str	x0, [sp, #48]
  474420:	ldr	x0, [sp, #40]
  474424:	ldr	x0, [x0, #32]
  474428:	ldr	x1, [sp, #48]
  47442c:	cmp	x1, x0
  474430:	b.lt	4743e4 <_obstack_memory_used@@Base+0x172a4>  // b.tstop
  474434:	ldr	x0, [sp, #40]
  474438:	ldr	x0, [x0, #40]
  47443c:	bl	404880 <free@plt>
  474440:	ldr	x0, [sp, #40]
  474444:	ldr	x0, [x0, #16]
  474448:	cmp	x0, #0x0
  47444c:	b.eq	47446c <_obstack_memory_used@@Base+0x1732c>  // b.none
  474450:	ldr	x0, [sp, #40]
  474454:	ldr	x0, [x0, #16]
  474458:	ldr	x0, [x0, #16]
  47445c:	bl	404880 <free@plt>
  474460:	ldr	x0, [sp, #40]
  474464:	ldr	x0, [x0, #16]
  474468:	bl	404880 <free@plt>
  47446c:	ldr	x0, [sp, #40]
  474470:	bl	404880 <free@plt>
  474474:	ldr	x0, [sp, #56]
  474478:	add	x0, x0, #0x1
  47447c:	str	x0, [sp, #56]
  474480:	ldr	x0, [sp, #24]
  474484:	ldr	x0, [x0, #232]
  474488:	ldr	x1, [sp, #56]
  47448c:	cmp	x1, x0
  474490:	b.lt	4743c0 <_obstack_memory_used@@Base+0x17280>  // b.tstop
  474494:	ldr	x0, [sp, #24]
  474498:	str	xzr, [x0, #232]
  47449c:	ldr	x0, [sp, #24]
  4744a0:	str	xzr, [x0, #200]
  4744a4:	nop
  4744a8:	ldp	x29, x30, [sp], #64
  4744ac:	ret
  4744b0:	stp	x29, x30, [sp, #-32]!
  4744b4:	mov	x29, sp
  4744b8:	str	x0, [sp, #24]
  4744bc:	ldr	x0, [sp, #24]
  4744c0:	bl	4743ac <_obstack_memory_used@@Base+0x1726c>
  4744c4:	ldr	x0, [sp, #24]
  4744c8:	ldr	x0, [x0, #248]
  4744cc:	bl	404880 <free@plt>
  4744d0:	ldr	x0, [sp, #24]
  4744d4:	ldr	x0, [x0, #216]
  4744d8:	bl	404880 <free@plt>
  4744dc:	nop
  4744e0:	ldp	x29, x30, [sp], #32
  4744e4:	ret
  4744e8:	stp	x29, x30, [sp, #-80]!
  4744ec:	mov	x29, sp
  4744f0:	str	x0, [sp, #56]
  4744f4:	str	x1, [sp, #48]
  4744f8:	str	x2, [sp, #40]
  4744fc:	str	x3, [sp, #32]
  474500:	str	x4, [sp, #24]
  474504:	ldr	x0, [sp, #56]
  474508:	ldr	x1, [x0, #200]
  47450c:	ldr	x0, [sp, #56]
  474510:	ldr	x0, [x0, #208]
  474514:	cmp	x1, x0
  474518:	b.lt	4745f4 <_obstack_memory_used@@Base+0x174b4>  // b.tstop
  47451c:	ldr	x0, [sp, #56]
  474520:	ldr	x2, [x0, #216]
  474524:	ldr	x0, [sp, #56]
  474528:	ldr	x0, [x0, #208]
  47452c:	mov	x1, x0
  474530:	mov	x0, x1
  474534:	lsl	x0, x0, #2
  474538:	add	x0, x0, x1
  47453c:	lsl	x0, x0, #4
  474540:	mov	x1, x0
  474544:	mov	x0, x2
  474548:	bl	4045e0 <realloc@plt>
  47454c:	str	x0, [sp, #72]
  474550:	ldr	x0, [sp, #72]
  474554:	cmp	x0, #0x0
  474558:	cset	w0, eq  // eq = none
  47455c:	and	w0, w0, #0xff
  474560:	and	x0, x0, #0xff
  474564:	cmp	x0, #0x0
  474568:	b.eq	474580 <_obstack_memory_used@@Base+0x17440>  // b.none
  47456c:	ldr	x0, [sp, #56]
  474570:	ldr	x0, [x0, #216]
  474574:	bl	404880 <free@plt>
  474578:	mov	w0, #0xc                   	// #12
  47457c:	b	4747f8 <_obstack_memory_used@@Base+0x176b8>
  474580:	ldr	x0, [sp, #56]
  474584:	ldr	x1, [sp, #72]
  474588:	str	x1, [x0, #216]
  47458c:	ldr	x0, [sp, #56]
  474590:	ldr	x1, [x0, #216]
  474594:	ldr	x0, [sp, #56]
  474598:	ldr	x0, [x0, #200]
  47459c:	mov	x2, x0
  4745a0:	mov	x0, x2
  4745a4:	lsl	x0, x0, #2
  4745a8:	add	x0, x0, x2
  4745ac:	lsl	x0, x0, #3
  4745b0:	add	x3, x1, x0
  4745b4:	ldr	x0, [sp, #56]
  4745b8:	ldr	x0, [x0, #208]
  4745bc:	mov	x1, x0
  4745c0:	mov	x0, x1
  4745c4:	lsl	x0, x0, #2
  4745c8:	add	x0, x0, x1
  4745cc:	lsl	x0, x0, #3
  4745d0:	mov	x2, x0
  4745d4:	mov	w1, #0x0                   	// #0
  4745d8:	mov	x0, x3
  4745dc:	bl	4044d0 <memset@plt>
  4745e0:	ldr	x0, [sp, #56]
  4745e4:	ldr	x0, [x0, #208]
  4745e8:	lsl	x1, x0, #1
  4745ec:	ldr	x0, [sp, #56]
  4745f0:	str	x1, [x0, #208]
  4745f4:	ldr	x0, [sp, #56]
  4745f8:	ldr	x0, [x0, #200]
  4745fc:	cmp	x0, #0x0
  474600:	b.le	474674 <_obstack_memory_used@@Base+0x17534>
  474604:	ldr	x0, [sp, #56]
  474608:	ldr	x1, [x0, #216]
  47460c:	ldr	x0, [sp, #56]
  474610:	ldr	x0, [x0, #200]
  474614:	mov	x2, x0
  474618:	mov	x0, x2
  47461c:	lsl	x0, x0, #2
  474620:	add	x0, x0, x2
  474624:	lsl	x0, x0, #3
  474628:	sub	x0, x0, #0x28
  47462c:	add	x0, x1, x0
  474630:	ldr	x0, [x0, #8]
  474634:	ldr	x1, [sp, #40]
  474638:	cmp	x1, x0
  47463c:	b.ne	474674 <_obstack_memory_used@@Base+0x17534>  // b.any
  474640:	ldr	x0, [sp, #56]
  474644:	ldr	x1, [x0, #216]
  474648:	ldr	x0, [sp, #56]
  47464c:	ldr	x0, [x0, #200]
  474650:	mov	x2, x0
  474654:	mov	x0, x2
  474658:	lsl	x0, x0, #2
  47465c:	add	x0, x0, x2
  474660:	lsl	x0, x0, #3
  474664:	sub	x0, x0, #0x28
  474668:	add	x0, x1, x0
  47466c:	mov	w1, #0x1                   	// #1
  474670:	strb	w1, [x0, #32]
  474674:	ldr	x0, [sp, #56]
  474678:	ldr	x1, [x0, #216]
  47467c:	ldr	x0, [sp, #56]
  474680:	ldr	x0, [x0, #200]
  474684:	mov	x2, x0
  474688:	mov	x0, x2
  47468c:	lsl	x0, x0, #2
  474690:	add	x0, x0, x2
  474694:	lsl	x0, x0, #3
  474698:	add	x0, x1, x0
  47469c:	ldr	x1, [sp, #48]
  4746a0:	str	x1, [x0]
  4746a4:	ldr	x0, [sp, #56]
  4746a8:	ldr	x1, [x0, #216]
  4746ac:	ldr	x0, [sp, #56]
  4746b0:	ldr	x0, [x0, #200]
  4746b4:	mov	x2, x0
  4746b8:	mov	x0, x2
  4746bc:	lsl	x0, x0, #2
  4746c0:	add	x0, x0, x2
  4746c4:	lsl	x0, x0, #3
  4746c8:	add	x0, x1, x0
  4746cc:	ldr	x1, [sp, #40]
  4746d0:	str	x1, [x0, #8]
  4746d4:	ldr	x0, [sp, #56]
  4746d8:	ldr	x1, [x0, #216]
  4746dc:	ldr	x0, [sp, #56]
  4746e0:	ldr	x0, [x0, #200]
  4746e4:	mov	x2, x0
  4746e8:	mov	x0, x2
  4746ec:	lsl	x0, x0, #2
  4746f0:	add	x0, x0, x2
  4746f4:	lsl	x0, x0, #3
  4746f8:	add	x0, x1, x0
  4746fc:	ldr	x1, [sp, #32]
  474700:	str	x1, [x0, #16]
  474704:	ldr	x0, [sp, #56]
  474708:	ldr	x1, [x0, #216]
  47470c:	ldr	x0, [sp, #56]
  474710:	ldr	x0, [x0, #200]
  474714:	mov	x2, x0
  474718:	mov	x0, x2
  47471c:	lsl	x0, x0, #2
  474720:	add	x0, x0, x2
  474724:	lsl	x0, x0, #3
  474728:	add	x0, x1, x0
  47472c:	ldr	x1, [sp, #24]
  474730:	str	x1, [x0, #24]
  474734:	ldr	x1, [sp, #32]
  474738:	ldr	x0, [sp, #24]
  47473c:	cmp	x1, x0
  474740:	b.ne	47474c <_obstack_memory_used@@Base+0x1760c>  // b.any
  474744:	mov	w2, #0xffff                	// #65535
  474748:	b	474750 <_obstack_memory_used@@Base+0x17610>
  47474c:	mov	w2, #0x0                   	// #0
  474750:	ldr	x0, [sp, #56]
  474754:	ldr	x1, [x0, #216]
  474758:	ldr	x0, [sp, #56]
  47475c:	ldr	x0, [x0, #200]
  474760:	mov	x3, x0
  474764:	mov	x0, x3
  474768:	lsl	x0, x0, #2
  47476c:	add	x0, x0, x3
  474770:	lsl	x0, x0, #3
  474774:	add	x0, x1, x0
  474778:	mov	w1, w2
  47477c:	strh	w1, [x0, #34]
  474780:	ldr	x0, [sp, #56]
  474784:	ldr	x1, [x0, #216]
  474788:	ldr	x0, [sp, #56]
  47478c:	ldr	x0, [x0, #200]
  474790:	add	x3, x0, #0x1
  474794:	ldr	x2, [sp, #56]
  474798:	str	x3, [x2, #200]
  47479c:	mov	x2, x0
  4747a0:	mov	x0, x2
  4747a4:	lsl	x0, x0, #2
  4747a8:	add	x0, x0, x2
  4747ac:	lsl	x0, x0, #3
  4747b0:	add	x0, x1, x0
  4747b4:	strb	wzr, [x0, #32]
  4747b8:	ldr	x0, [sp, #56]
  4747bc:	ldr	w0, [x0, #224]
  4747c0:	sxtw	x1, w0
  4747c4:	ldr	x2, [sp, #24]
  4747c8:	ldr	x0, [sp, #32]
  4747cc:	sub	x0, x2, x0
  4747d0:	cmp	x1, x0
  4747d4:	b.ge	4747f4 <_obstack_memory_used@@Base+0x176b4>  // b.tcont
  4747d8:	ldr	x0, [sp, #24]
  4747dc:	mov	w1, w0
  4747e0:	ldr	x0, [sp, #32]
  4747e4:	sub	w0, w1, w0
  4747e8:	mov	w1, w0
  4747ec:	ldr	x0, [sp, #56]
  4747f0:	str	w1, [x0, #224]
  4747f4:	mov	w0, #0x0                   	// #0
  4747f8:	ldp	x29, x30, [sp], #80
  4747fc:	ret
  474800:	sub	sp, sp, #0x30
  474804:	str	x0, [sp, #8]
  474808:	str	x1, [sp]
  47480c:	ldr	x0, [sp, #8]
  474810:	ldr	x0, [x0, #200]
  474814:	str	x0, [sp, #32]
  474818:	ldr	x0, [sp, #32]
  47481c:	str	x0, [sp, #24]
  474820:	str	xzr, [sp, #40]
  474824:	b	47488c <_obstack_memory_used@@Base+0x1774c>
  474828:	ldr	x1, [sp, #40]
  47482c:	ldr	x0, [sp, #32]
  474830:	add	x0, x1, x0
  474834:	lsr	x1, x0, #63
  474838:	add	x0, x1, x0
  47483c:	asr	x0, x0, #1
  474840:	str	x0, [sp, #16]
  474844:	ldr	x0, [sp, #8]
  474848:	ldr	x2, [x0, #216]
  47484c:	ldr	x1, [sp, #16]
  474850:	mov	x0, x1
  474854:	lsl	x0, x0, #2
  474858:	add	x0, x0, x1
  47485c:	lsl	x0, x0, #3
  474860:	add	x0, x2, x0
  474864:	ldr	x0, [x0, #8]
  474868:	ldr	x1, [sp]
  47486c:	cmp	x1, x0
  474870:	b.le	474884 <_obstack_memory_used@@Base+0x17744>
  474874:	ldr	x0, [sp, #16]
  474878:	add	x0, x0, #0x1
  47487c:	str	x0, [sp, #40]
  474880:	b	47488c <_obstack_memory_used@@Base+0x1774c>
  474884:	ldr	x0, [sp, #16]
  474888:	str	x0, [sp, #32]
  47488c:	ldr	x1, [sp, #40]
  474890:	ldr	x0, [sp, #32]
  474894:	cmp	x1, x0
  474898:	b.lt	474828 <_obstack_memory_used@@Base+0x176e8>  // b.tstop
  47489c:	ldr	x1, [sp, #40]
  4748a0:	ldr	x0, [sp, #24]
  4748a4:	cmp	x1, x0
  4748a8:	b.ge	4748e4 <_obstack_memory_used@@Base+0x177a4>  // b.tcont
  4748ac:	ldr	x0, [sp, #8]
  4748b0:	ldr	x2, [x0, #216]
  4748b4:	ldr	x1, [sp, #40]
  4748b8:	mov	x0, x1
  4748bc:	lsl	x0, x0, #2
  4748c0:	add	x0, x0, x1
  4748c4:	lsl	x0, x0, #3
  4748c8:	add	x0, x2, x0
  4748cc:	ldr	x0, [x0, #8]
  4748d0:	ldr	x1, [sp]
  4748d4:	cmp	x1, x0
  4748d8:	b.ne	4748e4 <_obstack_memory_used@@Base+0x177a4>  // b.any
  4748dc:	ldr	x0, [sp, #40]
  4748e0:	b	4748e8 <_obstack_memory_used@@Base+0x177a8>
  4748e4:	mov	x0, #0xffffffffffffffff    	// #-1
  4748e8:	add	sp, sp, #0x30
  4748ec:	ret
  4748f0:	stp	x29, x30, [sp, #-80]!
  4748f4:	mov	x29, sp
  4748f8:	str	x19, [sp, #16]
  4748fc:	str	x0, [sp, #56]
  474900:	str	x1, [sp, #48]
  474904:	str	x2, [sp, #40]
  474908:	ldr	x0, [sp, #56]
  47490c:	ldr	x1, [x0, #232]
  474910:	ldr	x0, [sp, #56]
  474914:	ldr	x0, [x0, #240]
  474918:	cmp	x1, x0
  47491c:	cset	w0, eq  // eq = none
  474920:	and	w0, w0, #0xff
  474924:	and	x0, x0, #0xff
  474928:	cmp	x0, #0x0
  47492c:	b.eq	47499c <_obstack_memory_used@@Base+0x1785c>  // b.none
  474930:	ldr	x0, [sp, #56]
  474934:	ldr	x0, [x0, #240]
  474938:	lsl	x0, x0, #1
  47493c:	str	x0, [sp, #72]
  474940:	ldr	x0, [sp, #56]
  474944:	ldr	x2, [x0, #248]
  474948:	ldr	x0, [sp, #72]
  47494c:	lsl	x0, x0, #3
  474950:	mov	x1, x0
  474954:	mov	x0, x2
  474958:	bl	4045e0 <realloc@plt>
  47495c:	str	x0, [sp, #64]
  474960:	ldr	x0, [sp, #64]
  474964:	cmp	x0, #0x0
  474968:	cset	w0, eq  // eq = none
  47496c:	and	w0, w0, #0xff
  474970:	and	x0, x0, #0xff
  474974:	cmp	x0, #0x0
  474978:	b.eq	474984 <_obstack_memory_used@@Base+0x17844>  // b.none
  47497c:	mov	w0, #0xc                   	// #12
  474980:	b	474a58 <_obstack_memory_used@@Base+0x17918>
  474984:	ldr	x0, [sp, #56]
  474988:	ldr	x1, [sp, #64]
  47498c:	str	x1, [x0, #248]
  474990:	ldr	x0, [sp, #56]
  474994:	ldr	x1, [sp, #72]
  474998:	str	x1, [x0, #240]
  47499c:	ldr	x0, [sp, #56]
  4749a0:	ldr	x1, [x0, #248]
  4749a4:	ldr	x0, [sp, #56]
  4749a8:	ldr	x0, [x0, #232]
  4749ac:	lsl	x0, x0, #3
  4749b0:	add	x19, x1, x0
  4749b4:	mov	x1, #0x30                  	// #48
  4749b8:	mov	x0, #0x1                   	// #1
  4749bc:	bl	404560 <calloc@plt>
  4749c0:	str	x0, [x19]
  4749c4:	ldr	x0, [sp, #56]
  4749c8:	ldr	x1, [x0, #248]
  4749cc:	ldr	x0, [sp, #56]
  4749d0:	ldr	x0, [x0, #232]
  4749d4:	lsl	x0, x0, #3
  4749d8:	add	x0, x1, x0
  4749dc:	ldr	x0, [x0]
  4749e0:	cmp	x0, #0x0
  4749e4:	cset	w0, eq  // eq = none
  4749e8:	and	w0, w0, #0xff
  4749ec:	and	x0, x0, #0xff
  4749f0:	cmp	x0, #0x0
  4749f4:	b.eq	474a00 <_obstack_memory_used@@Base+0x178c0>  // b.none
  4749f8:	mov	w0, #0xc                   	// #12
  4749fc:	b	474a58 <_obstack_memory_used@@Base+0x17918>
  474a00:	ldr	x0, [sp, #56]
  474a04:	ldr	x1, [x0, #248]
  474a08:	ldr	x0, [sp, #56]
  474a0c:	ldr	x0, [x0, #232]
  474a10:	lsl	x0, x0, #3
  474a14:	add	x0, x1, x0
  474a18:	ldr	x0, [x0]
  474a1c:	ldr	x1, [sp, #48]
  474a20:	str	x1, [x0, #8]
  474a24:	ldr	x0, [sp, #56]
  474a28:	ldr	x1, [x0, #248]
  474a2c:	ldr	x0, [sp, #56]
  474a30:	ldr	x0, [x0, #232]
  474a34:	add	x3, x0, #0x1
  474a38:	ldr	x2, [sp, #56]
  474a3c:	str	x3, [x2, #232]
  474a40:	lsl	x0, x0, #3
  474a44:	add	x0, x1, x0
  474a48:	ldr	x0, [x0]
  474a4c:	ldr	x1, [sp, #40]
  474a50:	str	x1, [x0]
  474a54:	mov	w0, #0x0                   	// #0
  474a58:	ldr	x19, [sp, #16]
  474a5c:	ldp	x29, x30, [sp], #80
  474a60:	ret
  474a64:	stp	x29, x30, [sp, #-80]!
  474a68:	mov	x29, sp
  474a6c:	str	x0, [sp, #40]
  474a70:	str	x1, [sp, #32]
  474a74:	str	x2, [sp, #24]
  474a78:	ldr	x0, [sp, #40]
  474a7c:	ldr	x1, [x0, #32]
  474a80:	ldr	x0, [sp, #40]
  474a84:	ldr	x0, [x0, #24]
  474a88:	cmp	x1, x0
  474a8c:	cset	w0, eq  // eq = none
  474a90:	and	w0, w0, #0xff
  474a94:	and	x0, x0, #0xff
  474a98:	cmp	x0, #0x0
  474a9c:	b.eq	474b10 <_obstack_memory_used@@Base+0x179d0>  // b.none
  474aa0:	ldr	x0, [sp, #40]
  474aa4:	ldr	x0, [x0, #24]
  474aa8:	lsl	x0, x0, #1
  474aac:	add	x0, x0, #0x1
  474ab0:	str	x0, [sp, #72]
  474ab4:	ldr	x0, [sp, #40]
  474ab8:	ldr	x2, [x0, #40]
  474abc:	ldr	x0, [sp, #72]
  474ac0:	lsl	x0, x0, #3
  474ac4:	mov	x1, x0
  474ac8:	mov	x0, x2
  474acc:	bl	4045e0 <realloc@plt>
  474ad0:	str	x0, [sp, #64]
  474ad4:	ldr	x0, [sp, #64]
  474ad8:	cmp	x0, #0x0
  474adc:	cset	w0, eq  // eq = none
  474ae0:	and	w0, w0, #0xff
  474ae4:	and	x0, x0, #0xff
  474ae8:	cmp	x0, #0x0
  474aec:	b.eq	474af8 <_obstack_memory_used@@Base+0x179b8>  // b.none
  474af0:	mov	x0, #0x0                   	// #0
  474af4:	b	474b8c <_obstack_memory_used@@Base+0x17a4c>
  474af8:	ldr	x0, [sp, #40]
  474afc:	ldr	x1, [sp, #64]
  474b00:	str	x1, [x0, #40]
  474b04:	ldr	x0, [sp, #40]
  474b08:	ldr	x1, [sp, #72]
  474b0c:	str	x1, [x0, #24]
  474b10:	mov	x1, #0x28                  	// #40
  474b14:	mov	x0, #0x1                   	// #1
  474b18:	bl	404560 <calloc@plt>
  474b1c:	str	x0, [sp, #56]
  474b20:	ldr	x0, [sp, #56]
  474b24:	cmp	x0, #0x0
  474b28:	cset	w0, ne  // ne = any
  474b2c:	and	w0, w0, #0xff
  474b30:	and	x0, x0, #0xff
  474b34:	cmp	x0, #0x0
  474b38:	b.eq	474b88 <_obstack_memory_used@@Base+0x17a48>  // b.none
  474b3c:	ldr	x0, [sp, #40]
  474b40:	ldr	x1, [x0, #40]
  474b44:	ldr	x0, [sp, #40]
  474b48:	ldr	x0, [x0, #32]
  474b4c:	lsl	x0, x0, #3
  474b50:	add	x0, x1, x0
  474b54:	ldr	x1, [sp, #56]
  474b58:	str	x1, [x0]
  474b5c:	ldr	x0, [sp, #56]
  474b60:	ldr	x1, [sp, #32]
  474b64:	str	x1, [x0]
  474b68:	ldr	x0, [sp, #56]
  474b6c:	ldr	x1, [sp, #24]
  474b70:	str	x1, [x0, #8]
  474b74:	ldr	x0, [sp, #40]
  474b78:	ldr	x0, [x0, #32]
  474b7c:	add	x1, x0, #0x1
  474b80:	ldr	x0, [sp, #40]
  474b84:	str	x1, [x0, #32]
  474b88:	ldr	x0, [sp, #56]
  474b8c:	ldp	x29, x30, [sp], #80
  474b90:	ret
  474b94:	stp	x29, x30, [sp, #-64]!
  474b98:	mov	x29, sp
  474b9c:	str	x0, [sp, #56]
  474ba0:	str	x1, [sp, #48]
  474ba4:	str	x2, [sp, #40]
  474ba8:	str	x3, [sp, #32]
  474bac:	str	x4, [sp, #24]
  474bb0:	ldr	x0, [sp, #56]
  474bb4:	ldr	x1, [sp, #48]
  474bb8:	str	x1, [x0]
  474bbc:	ldr	x0, [sp, #56]
  474bc0:	ldr	x1, [sp, #40]
  474bc4:	str	x1, [x0, #8]
  474bc8:	ldr	x0, [sp, #56]
  474bcc:	ldr	x1, [sp, #32]
  474bd0:	str	x1, [x0, #16]
  474bd4:	ldr	x0, [sp, #56]
  474bd8:	ldr	x1, [sp, #24]
  474bdc:	str	x1, [x0, #24]
  474be0:	ldr	x0, [sp, #56]
  474be4:	add	x0, x0, #0x20
  474be8:	mov	x2, #0x18                  	// #24
  474bec:	mov	w1, #0x0                   	// #0
  474bf0:	bl	4044d0 <memset@plt>
  474bf4:	nop
  474bf8:	ldp	x29, x30, [sp], #64
  474bfc:	ret
  474c00:	sub	sp, sp, #0x10
  474c04:	str	w0, [sp, #12]
  474c08:	str	w1, [sp, #8]
  474c0c:	ldr	w0, [sp, #12]
  474c10:	cmp	w0, #0x0
  474c14:	cset	w0, eq  // eq = none
  474c18:	and	w1, w0, #0xff
  474c1c:	ldr	w0, [sp, #8]
  474c20:	cmp	w0, #0x0
  474c24:	cset	w0, eq  // eq = none
  474c28:	and	w0, w0, #0xff
  474c2c:	eor	w0, w1, w0
  474c30:	and	w0, w0, #0xff
  474c34:	cmp	w0, #0x0
  474c38:	b.eq	474c5c <_obstack_memory_used@@Base+0x17b1c>  // b.none
  474c3c:	ldr	w0, [sp, #12]
  474c40:	cmp	w0, #0x0
  474c44:	b.lt	474c5c <_obstack_memory_used@@Base+0x17b1c>  // b.tstop
  474c48:	ldr	w0, [sp, #8]
  474c4c:	cmp	w0, #0x0
  474c50:	b.lt	474c5c <_obstack_memory_used@@Base+0x17b1c>  // b.tstop
  474c54:	mov	w0, #0x1                   	// #1
  474c58:	b	474c60 <_obstack_memory_used@@Base+0x17b20>
  474c5c:	mov	w0, #0x0                   	// #0
  474c60:	and	w0, w0, #0x1
  474c64:	and	w0, w0, #0xff
  474c68:	add	sp, sp, #0x10
  474c6c:	ret
  474c70:	stp	x29, x30, [sp, #-48]!
  474c74:	mov	x29, sp
  474c78:	str	x19, [sp, #16]
  474c7c:	str	x0, [sp, #40]
  474c80:	str	x1, [sp, #32]
  474c84:	ldr	x0, [sp, #40]
  474c88:	ldr	w1, [x0]
  474c8c:	ldr	x0, [sp, #32]
  474c90:	ldr	w0, [x0]
  474c94:	eor	w1, w1, w0
  474c98:	ldr	x0, [sp, #40]
  474c9c:	ldr	w2, [x0, #4]
  474ca0:	ldr	x0, [sp, #32]
  474ca4:	ldr	w0, [x0, #4]
  474ca8:	eor	w0, w2, w0
  474cac:	orr	w1, w1, w0
  474cb0:	ldr	x0, [sp, #40]
  474cb4:	ldr	w2, [x0, #8]
  474cb8:	ldr	x0, [sp, #32]
  474cbc:	ldr	w0, [x0, #8]
  474cc0:	eor	w0, w2, w0
  474cc4:	orr	w1, w1, w0
  474cc8:	ldr	x0, [sp, #40]
  474ccc:	ldr	w2, [x0, #12]
  474cd0:	ldr	x0, [sp, #32]
  474cd4:	ldr	w0, [x0, #12]
  474cd8:	eor	w0, w2, w0
  474cdc:	orr	w1, w1, w0
  474ce0:	ldr	x0, [sp, #40]
  474ce4:	ldr	w2, [x0, #16]
  474ce8:	ldr	x0, [sp, #32]
  474cec:	ldr	w0, [x0, #16]
  474cf0:	eor	w0, w2, w0
  474cf4:	orr	w1, w1, w0
  474cf8:	ldr	x0, [sp, #40]
  474cfc:	ldr	w2, [x0, #20]
  474d00:	ldr	x0, [sp, #32]
  474d04:	ldr	w0, [x0, #20]
  474d08:	eor	w0, w2, w0
  474d0c:	orr	w19, w1, w0
  474d10:	ldr	x0, [sp, #40]
  474d14:	ldr	w2, [x0, #32]
  474d18:	ldr	x0, [sp, #32]
  474d1c:	ldr	w0, [x0, #32]
  474d20:	mov	w1, w0
  474d24:	mov	w0, w2
  474d28:	bl	474c00 <_obstack_memory_used@@Base+0x17ac0>
  474d2c:	and	w0, w0, #0xff
  474d30:	orr	w0, w19, w0
  474d34:	cmp	w0, #0x0
  474d38:	cset	w0, eq  // eq = none
  474d3c:	and	w0, w0, #0xff
  474d40:	ldr	x19, [sp, #16]
  474d44:	ldp	x29, x30, [sp], #48
  474d48:	ret
  474d4c:	stp	x29, x30, [sp, #-48]!
  474d50:	mov	x29, sp
  474d54:	str	x0, [sp, #40]
  474d58:	str	x1, [sp, #32]
  474d5c:	str	x2, [sp, #24]
  474d60:	ldr	x2, [sp, #24]
  474d64:	ldr	x1, [sp, #32]
  474d68:	ldr	x0, [sp, #40]
  474d6c:	bl	404020 <memcpy@plt>
  474d70:	ldr	x1, [sp, #40]
  474d74:	ldr	x0, [sp, #24]
  474d78:	add	x0, x1, x0
  474d7c:	strb	wzr, [x0]
  474d80:	nop
  474d84:	ldp	x29, x30, [sp], #48
  474d88:	ret
  474d8c:	stp	x29, x30, [sp, #-64]!
  474d90:	mov	x29, sp
  474d94:	str	x0, [sp, #24]
  474d98:	ldr	x0, [sp, #24]
  474d9c:	cmp	x0, #0x0
  474da0:	b.eq	474db4 <_obstack_memory_used@@Base+0x17c74>  // b.none
  474da4:	ldr	x0, [sp, #24]
  474da8:	bl	4040b0 <strlen@plt>
  474dac:	add	x0, x0, #0x1
  474db0:	b	474db8 <_obstack_memory_used@@Base+0x17c78>
  474db4:	mov	x0, #0x0                   	// #0
  474db8:	str	x0, [sp, #56]
  474dbc:	ldr	x2, [sp, #56]
  474dc0:	ldr	x1, [sp, #56]
  474dc4:	mov	x0, #0x76                  	// #118
  474dc8:	cmp	x2, #0x76
  474dcc:	csel	x0, x1, x0, cs  // cs = hs, nlast
  474dd0:	add	x0, x0, #0x1
  474dd4:	str	x0, [sp, #48]
  474dd8:	ldr	x0, [sp, #48]
  474ddc:	add	x0, x0, #0x10
  474de0:	and	x0, x0, #0xfffffffffffffff8
  474de4:	bl	4043f0 <malloc@plt>
  474de8:	str	x0, [sp, #40]
  474dec:	ldr	x0, [sp, #40]
  474df0:	cmp	x0, #0x0
  474df4:	b.eq	474e44 <_obstack_memory_used@@Base+0x17d04>  // b.none
  474df8:	ldr	x0, [sp, #40]
  474dfc:	str	xzr, [x0]
  474e00:	ldr	x0, [sp, #24]
  474e04:	cmp	x0, #0x0
  474e08:	cset	w0, ne  // ne = any
  474e0c:	and	w0, w0, #0xff
  474e10:	mov	w1, w0
  474e14:	ldr	x0, [sp, #40]
  474e18:	strb	w1, [x0, #8]
  474e1c:	ldr	x0, [sp, #40]
  474e20:	strb	wzr, [x0, #9]
  474e24:	ldr	x0, [sp, #24]
  474e28:	cmp	x0, #0x0
  474e2c:	b.eq	474e44 <_obstack_memory_used@@Base+0x17d04>  // b.none
  474e30:	ldr	x0, [sp, #40]
  474e34:	add	x0, x0, #0x9
  474e38:	ldr	x2, [sp, #56]
  474e3c:	ldr	x1, [sp, #24]
  474e40:	bl	474d4c <_obstack_memory_used@@Base+0x17c0c>
  474e44:	ldr	x0, [sp, #40]
  474e48:	ldp	x29, x30, [sp], #64
  474e4c:	ret
  474e50:	stp	x29, x30, [sp, #-64]!
  474e54:	mov	x29, sp
  474e58:	str	x0, [sp, #24]
  474e5c:	str	x1, [sp, #16]
  474e60:	str	xzr, [sp, #48]
  474e64:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  474e68:	add	x0, x0, #0x930
  474e6c:	str	x0, [sp, #56]
  474e70:	ldr	x0, [sp, #16]
  474e74:	ldr	x0, [x0, #48]
  474e78:	str	x0, [sp, #48]
  474e7c:	ldr	x0, [sp, #48]
  474e80:	cmp	x0, #0x0
  474e84:	b.eq	474eac <_obstack_memory_used@@Base+0x17d6c>  // b.none
  474e88:	ldr	x1, [sp, #16]
  474e8c:	ldr	x0, [sp, #48]
  474e90:	cmp	x1, x0
  474e94:	b.hi	474eb4 <_obstack_memory_used@@Base+0x17d74>  // b.pmore
  474e98:	ldr	x0, [sp, #16]
  474e9c:	add	x0, x0, #0x38
  474ea0:	ldr	x1, [sp, #48]
  474ea4:	cmp	x1, x0
  474ea8:	b.cs	474eb4 <_obstack_memory_used@@Base+0x17d74>  // b.hs, b.nlast
  474eac:	mov	w0, #0x1                   	// #1
  474eb0:	b	475040 <_obstack_memory_used@@Base+0x17f00>
  474eb4:	ldr	x0, [sp, #48]
  474eb8:	ldrb	w0, [x0]
  474ebc:	cmp	w0, #0x0
  474ec0:	b.eq	475030 <_obstack_memory_used@@Base+0x17ef0>  // b.none
  474ec4:	ldr	x0, [sp, #24]
  474ec8:	add	x0, x0, #0x9
  474ecc:	str	x0, [sp, #56]
  474ed0:	b	47501c <_obstack_memory_used@@Base+0x17edc>
  474ed4:	ldr	x0, [sp, #56]
  474ed8:	ldrb	w0, [x0]
  474edc:	cmp	w0, #0x0
  474ee0:	b.ne	474fcc <_obstack_memory_used@@Base+0x17e8c>  // b.any
  474ee4:	ldr	x0, [sp, #24]
  474ee8:	add	x0, x0, #0x9
  474eec:	ldr	x1, [sp, #56]
  474ef0:	cmp	x1, x0
  474ef4:	b.ne	474f08 <_obstack_memory_used@@Base+0x17dc8>  // b.any
  474ef8:	ldr	x0, [sp, #24]
  474efc:	ldrb	w0, [x0, #8]
  474f00:	cmp	w0, #0x0
  474f04:	b.ne	474fcc <_obstack_memory_used@@Base+0x17e8c>  // b.any
  474f08:	ldr	x0, [sp, #48]
  474f0c:	bl	4040b0 <strlen@plt>
  474f10:	add	x0, x0, #0x1
  474f14:	str	x0, [sp, #40]
  474f18:	ldr	x0, [sp, #24]
  474f1c:	add	x0, x0, #0x9
  474f20:	ldr	x1, [sp, #56]
  474f24:	sub	x0, x1, x0
  474f28:	str	x0, [sp, #32]
  474f2c:	ldr	x0, [sp, #32]
  474f30:	mvn	x0, x0
  474f34:	ldr	x1, [sp, #40]
  474f38:	cmp	x1, x0
  474f3c:	b.ls	474f58 <_obstack_memory_used@@Base+0x17e18>  // b.plast
  474f40:	bl	404bc0 <__errno_location@plt>
  474f44:	mov	x1, x0
  474f48:	mov	w0, #0xc                   	// #12
  474f4c:	str	w0, [x1]
  474f50:	mov	w0, #0x0                   	// #0
  474f54:	b	475040 <_obstack_memory_used@@Base+0x17f00>
  474f58:	ldr	x1, [sp, #32]
  474f5c:	ldr	x0, [sp, #40]
  474f60:	add	x0, x1, x0
  474f64:	cmp	x0, #0x76
  474f68:	b.hi	474f80 <_obstack_memory_used@@Base+0x17e40>  // b.pmore
  474f6c:	ldr	x2, [sp, #40]
  474f70:	ldr	x1, [sp, #48]
  474f74:	ldr	x0, [sp, #56]
  474f78:	bl	474d4c <_obstack_memory_used@@Base+0x17c0c>
  474f7c:	b	475030 <_obstack_memory_used@@Base+0x17ef0>
  474f80:	ldr	x0, [sp, #48]
  474f84:	bl	474d8c <_obstack_memory_used@@Base+0x17c4c>
  474f88:	mov	x1, x0
  474f8c:	ldr	x0, [sp, #24]
  474f90:	str	x1, [x0]
  474f94:	ldr	x0, [sp, #24]
  474f98:	ldr	x0, [x0]
  474f9c:	str	x0, [sp, #24]
  474fa0:	ldr	x0, [sp, #24]
  474fa4:	cmp	x0, #0x0
  474fa8:	b.ne	474fb4 <_obstack_memory_used@@Base+0x17e74>  // b.any
  474fac:	mov	w0, #0x0                   	// #0
  474fb0:	b	475040 <_obstack_memory_used@@Base+0x17f00>
  474fb4:	ldr	x0, [sp, #24]
  474fb8:	strb	wzr, [x0, #8]
  474fbc:	ldr	x0, [sp, #24]
  474fc0:	add	x0, x0, #0x9
  474fc4:	str	x0, [sp, #56]
  474fc8:	b	475030 <_obstack_memory_used@@Base+0x17ef0>
  474fcc:	ldr	x0, [sp, #56]
  474fd0:	bl	4040b0 <strlen@plt>
  474fd4:	add	x0, x0, #0x1
  474fd8:	ldr	x1, [sp, #56]
  474fdc:	add	x0, x1, x0
  474fe0:	str	x0, [sp, #56]
  474fe4:	ldr	x0, [sp, #56]
  474fe8:	ldrb	w0, [x0]
  474fec:	cmp	w0, #0x0
  474ff0:	b.ne	47501c <_obstack_memory_used@@Base+0x17edc>  // b.any
  474ff4:	ldr	x0, [sp, #24]
  474ff8:	ldr	x0, [x0]
  474ffc:	cmp	x0, #0x0
  475000:	b.eq	47501c <_obstack_memory_used@@Base+0x17edc>  // b.none
  475004:	ldr	x0, [sp, #24]
  475008:	ldr	x0, [x0]
  47500c:	str	x0, [sp, #24]
  475010:	ldr	x0, [sp, #24]
  475014:	add	x0, x0, #0x9
  475018:	str	x0, [sp, #56]
  47501c:	ldr	x1, [sp, #48]
  475020:	ldr	x0, [sp, #56]
  475024:	bl	4047c0 <strcmp@plt>
  475028:	cmp	w0, #0x0
  47502c:	b.ne	474ed4 <_obstack_memory_used@@Base+0x17d94>  // b.any
  475030:	ldr	x0, [sp, #16]
  475034:	ldr	x1, [sp, #56]
  475038:	str	x1, [x0, #48]
  47503c:	mov	w0, #0x1                   	// #1
  475040:	ldp	x29, x30, [sp], #64
  475044:	ret
  475048:	stp	x29, x30, [sp, #-48]!
  47504c:	mov	x29, sp
  475050:	str	x0, [sp, #24]
  475054:	mov	x0, #0x1                   	// #1
  475058:	ldr	x1, [sp, #24]
  47505c:	cmp	x1, x0
  475060:	b.eq	475090 <_obstack_memory_used@@Base+0x17f50>  // b.none
  475064:	b	475084 <_obstack_memory_used@@Base+0x17f44>
  475068:	ldr	x0, [sp, #24]
  47506c:	ldr	x0, [x0]
  475070:	str	x0, [sp, #40]
  475074:	ldr	x0, [sp, #24]
  475078:	bl	404880 <free@plt>
  47507c:	ldr	x0, [sp, #40]
  475080:	str	x0, [sp, #24]
  475084:	ldr	x0, [sp, #24]
  475088:	cmp	x0, #0x0
  47508c:	b.ne	475068 <_obstack_memory_used@@Base+0x17f28>  // b.any
  475090:	nop
  475094:	ldp	x29, x30, [sp], #48
  475098:	ret
  47509c:	stp	x29, x30, [sp, #-16]!
  4750a0:	mov	x29, sp
  4750a4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4750a8:	add	x0, x0, #0x938
  4750ac:	bl	404bf0 <getenv@plt>
  4750b0:	ldp	x29, x30, [sp], #16
  4750b4:	ret
  4750b8:	stp	x29, x30, [sp, #-32]!
  4750bc:	mov	x29, sp
  4750c0:	str	x0, [sp, #24]
  4750c4:	ldr	x0, [sp, #24]
  4750c8:	cmp	x0, #0x0
  4750cc:	b.eq	4750e8 <_obstack_memory_used@@Base+0x17fa8>  // b.none
  4750d0:	mov	w2, #0x1                   	// #1
  4750d4:	ldr	x1, [sp, #24]
  4750d8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4750dc:	add	x0, x0, #0x938
  4750e0:	bl	4041c0 <setenv@plt>
  4750e4:	b	4750f4 <_obstack_memory_used@@Base+0x17fb4>
  4750e8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  4750ec:	add	x0, x0, #0x938
  4750f0:	bl	4049f0 <unsetenv@plt>
  4750f4:	ldp	x29, x30, [sp], #32
  4750f8:	ret
  4750fc:	stp	x29, x30, [sp, #-32]!
  475100:	mov	x29, sp
  475104:	str	x0, [sp, #24]
  475108:	ldr	x0, [sp, #24]
  47510c:	ldrb	w0, [x0, #8]
  475110:	cmp	w0, #0x0
  475114:	b.eq	475124 <_obstack_memory_used@@Base+0x17fe4>  // b.none
  475118:	ldr	x0, [sp, #24]
  47511c:	add	x0, x0, #0x9
  475120:	b	475128 <_obstack_memory_used@@Base+0x17fe8>
  475124:	mov	x0, #0x0                   	// #0
  475128:	bl	4750b8 <_obstack_memory_used@@Base+0x17f78>
  47512c:	cmp	w0, #0x0
  475130:	b.eq	47513c <_obstack_memory_used@@Base+0x17ffc>  // b.none
  475134:	mov	w0, #0x0                   	// #0
  475138:	b	475144 <_obstack_memory_used@@Base+0x18004>
  47513c:	bl	404440 <tzset@plt>
  475140:	mov	w0, #0x1                   	// #1
  475144:	ldp	x29, x30, [sp], #32
  475148:	ret
  47514c:	stp	x29, x30, [sp, #-64]!
  475150:	mov	x29, sp
  475154:	str	x0, [sp, #24]
  475158:	bl	47509c <_obstack_memory_used@@Base+0x17f5c>
  47515c:	str	x0, [sp, #56]
  475160:	ldr	x0, [sp, #56]
  475164:	cmp	x0, #0x0
  475168:	b.eq	4751ac <_obstack_memory_used@@Base+0x1806c>  // b.none
  47516c:	ldr	x0, [sp, #24]
  475170:	ldrb	w0, [x0, #8]
  475174:	cmp	w0, #0x0
  475178:	b.eq	47519c <_obstack_memory_used@@Base+0x1805c>  // b.none
  47517c:	ldr	x0, [sp, #24]
  475180:	add	x0, x0, #0x9
  475184:	ldr	x1, [sp, #56]
  475188:	bl	4047c0 <strcmp@plt>
  47518c:	cmp	w0, #0x0
  475190:	b.ne	47519c <_obstack_memory_used@@Base+0x1805c>  // b.any
  475194:	mov	w0, #0x1                   	// #1
  475198:	b	4751a0 <_obstack_memory_used@@Base+0x18060>
  47519c:	mov	w0, #0x0                   	// #0
  4751a0:	and	w0, w0, #0x1
  4751a4:	and	w0, w0, #0xff
  4751a8:	b	4751c0 <_obstack_memory_used@@Base+0x18080>
  4751ac:	ldr	x0, [sp, #24]
  4751b0:	ldrb	w0, [x0, #8]
  4751b4:	cmp	w0, #0x0
  4751b8:	cset	w0, eq  // eq = none
  4751bc:	and	w0, w0, #0xff
  4751c0:	cmp	w0, #0x0
  4751c4:	b.eq	4751d0 <_obstack_memory_used@@Base+0x18090>  // b.none
  4751c8:	mov	x0, #0x1                   	// #1
  4751cc:	b	47523c <_obstack_memory_used@@Base+0x180fc>
  4751d0:	ldr	x0, [sp, #56]
  4751d4:	bl	474d8c <_obstack_memory_used@@Base+0x17c4c>
  4751d8:	str	x0, [sp, #48]
  4751dc:	ldr	x0, [sp, #48]
  4751e0:	cmp	x0, #0x0
  4751e4:	b.ne	4751f0 <_obstack_memory_used@@Base+0x180b0>  // b.any
  4751e8:	ldr	x0, [sp, #48]
  4751ec:	b	47523c <_obstack_memory_used@@Base+0x180fc>
  4751f0:	ldr	x0, [sp, #24]
  4751f4:	bl	4750fc <_obstack_memory_used@@Base+0x17fbc>
  4751f8:	and	w0, w0, #0xff
  4751fc:	eor	w0, w0, #0x1
  475200:	and	w0, w0, #0xff
  475204:	cmp	w0, #0x0
  475208:	b.eq	475238 <_obstack_memory_used@@Base+0x180f8>  // b.none
  47520c:	bl	404bc0 <__errno_location@plt>
  475210:	ldr	w0, [x0]
  475214:	str	w0, [sp, #44]
  475218:	ldr	x0, [sp, #48]
  47521c:	bl	475048 <_obstack_memory_used@@Base+0x17f08>
  475220:	bl	404bc0 <__errno_location@plt>
  475224:	mov	x1, x0
  475228:	ldr	w0, [sp, #44]
  47522c:	str	w0, [x1]
  475230:	mov	x0, #0x0                   	// #0
  475234:	b	47523c <_obstack_memory_used@@Base+0x180fc>
  475238:	ldr	x0, [sp, #48]
  47523c:	ldp	x29, x30, [sp], #64
  475240:	ret
  475244:	stp	x29, x30, [sp, #-48]!
  475248:	mov	x29, sp
  47524c:	str	x0, [sp, #24]
  475250:	mov	x0, #0x1                   	// #1
  475254:	ldr	x1, [sp, #24]
  475258:	cmp	x1, x0
  47525c:	b.ne	475268 <_obstack_memory_used@@Base+0x18128>  // b.any
  475260:	mov	w0, #0x1                   	// #1
  475264:	b	4752bc <_obstack_memory_used@@Base+0x1817c>
  475268:	bl	404bc0 <__errno_location@plt>
  47526c:	ldr	w0, [x0]
  475270:	str	w0, [sp, #44]
  475274:	ldr	x0, [sp, #24]
  475278:	bl	4750fc <_obstack_memory_used@@Base+0x17fbc>
  47527c:	strb	w0, [sp, #43]
  475280:	ldrb	w0, [sp, #43]
  475284:	eor	w0, w0, #0x1
  475288:	and	w0, w0, #0xff
  47528c:	cmp	w0, #0x0
  475290:	b.eq	4752a0 <_obstack_memory_used@@Base+0x18160>  // b.none
  475294:	bl	404bc0 <__errno_location@plt>
  475298:	ldr	w0, [x0]
  47529c:	str	w0, [sp, #44]
  4752a0:	ldr	x0, [sp, #24]
  4752a4:	bl	475048 <_obstack_memory_used@@Base+0x17f08>
  4752a8:	bl	404bc0 <__errno_location@plt>
  4752ac:	mov	x1, x0
  4752b0:	ldr	w0, [sp, #44]
  4752b4:	str	w0, [x1]
  4752b8:	ldrb	w0, [sp, #43]
  4752bc:	ldp	x29, x30, [sp], #48
  4752c0:	ret
  4752c4:	stp	x29, x30, [sp, #-64]!
  4752c8:	mov	x29, sp
  4752cc:	str	x0, [sp, #40]
  4752d0:	str	x1, [sp, #32]
  4752d4:	str	x2, [sp, #24]
  4752d8:	ldr	x0, [sp, #40]
  4752dc:	cmp	x0, #0x0
  4752e0:	b.ne	4752f4 <_obstack_memory_used@@Base+0x181b4>  // b.any
  4752e4:	ldr	x1, [sp, #24]
  4752e8:	ldr	x0, [sp, #32]
  4752ec:	bl	404510 <gmtime_r@plt>
  4752f0:	b	475380 <_obstack_memory_used@@Base+0x18240>
  4752f4:	ldr	x0, [sp, #40]
  4752f8:	bl	47514c <_obstack_memory_used@@Base+0x1800c>
  4752fc:	str	x0, [sp, #56]
  475300:	ldr	x0, [sp, #56]
  475304:	cmp	x0, #0x0
  475308:	b.eq	47537c <_obstack_memory_used@@Base+0x1823c>  // b.none
  47530c:	ldr	x1, [sp, #24]
  475310:	ldr	x0, [sp, #32]
  475314:	bl	4041b0 <localtime_r@plt>
  475318:	cmp	x0, #0x0
  47531c:	b.eq	475340 <_obstack_memory_used@@Base+0x18200>  // b.none
  475320:	ldr	x1, [sp, #24]
  475324:	ldr	x0, [sp, #40]
  475328:	bl	474e50 <_obstack_memory_used@@Base+0x17d10>
  47532c:	and	w0, w0, #0xff
  475330:	cmp	w0, #0x0
  475334:	b.eq	475340 <_obstack_memory_used@@Base+0x18200>  // b.none
  475338:	mov	w0, #0x1                   	// #1
  47533c:	b	475344 <_obstack_memory_used@@Base+0x18204>
  475340:	mov	w0, #0x0                   	// #0
  475344:	strb	w0, [sp, #55]
  475348:	ldrb	w0, [sp, #55]
  47534c:	and	w0, w0, #0x1
  475350:	strb	w0, [sp, #55]
  475354:	ldr	x0, [sp, #56]
  475358:	bl	475244 <_obstack_memory_used@@Base+0x18104>
  47535c:	and	w0, w0, #0xff
  475360:	cmp	w0, #0x0
  475364:	b.eq	47537c <_obstack_memory_used@@Base+0x1823c>  // b.none
  475368:	ldrb	w0, [sp, #55]
  47536c:	cmp	w0, #0x0
  475370:	b.eq	47537c <_obstack_memory_used@@Base+0x1823c>  // b.none
  475374:	ldr	x0, [sp, #24]
  475378:	b	475380 <_obstack_memory_used@@Base+0x18240>
  47537c:	mov	x0, #0x0                   	// #0
  475380:	ldp	x29, x30, [sp], #64
  475384:	ret
  475388:	stp	x29, x30, [sp, #-112]!
  47538c:	mov	x29, sp
  475390:	str	x0, [sp, #24]
  475394:	str	x1, [sp, #16]
  475398:	ldr	x0, [sp, #24]
  47539c:	cmp	x0, #0x0
  4753a0:	b.ne	4753b0 <_obstack_memory_used@@Base+0x18270>  // b.any
  4753a4:	ldr	x0, [sp, #16]
  4753a8:	bl	404c40 <timegm@plt>
  4753ac:	b	475460 <_obstack_memory_used@@Base+0x18320>
  4753b0:	ldr	x0, [sp, #24]
  4753b4:	bl	47514c <_obstack_memory_used@@Base+0x1800c>
  4753b8:	str	x0, [sp, #104]
  4753bc:	ldr	x0, [sp, #104]
  4753c0:	cmp	x0, #0x0
  4753c4:	b.eq	47545c <_obstack_memory_used@@Base+0x1831c>  // b.none
  4753c8:	ldr	x0, [sp, #16]
  4753cc:	bl	4046b0 <mktime@plt>
  4753d0:	str	x0, [sp, #88]
  4753d4:	mov	x0, #0xffffffffffffffff    	// #-1
  4753d8:	str	x0, [sp, #96]
  4753dc:	ldr	x0, [sp, #88]
  4753e0:	ldr	x1, [sp, #96]
  4753e4:	cmp	x1, x0
  4753e8:	b.ne	475418 <_obstack_memory_used@@Base+0x182d8>  // b.any
  4753ec:	add	x1, sp, #0x20
  4753f0:	add	x0, sp, #0x58
  4753f4:	bl	4041b0 <localtime_r@plt>
  4753f8:	cmp	x0, #0x0
  4753fc:	b.eq	475440 <_obstack_memory_used@@Base+0x18300>  // b.none
  475400:	add	x0, sp, #0x20
  475404:	mov	x1, x0
  475408:	ldr	x0, [sp, #16]
  47540c:	bl	474c70 <_obstack_memory_used@@Base+0x17b30>
  475410:	cmp	w0, #0x0
  475414:	b.eq	475440 <_obstack_memory_used@@Base+0x18300>  // b.none
  475418:	ldr	x1, [sp, #16]
  47541c:	ldr	x0, [sp, #24]
  475420:	bl	474e50 <_obstack_memory_used@@Base+0x17d10>
  475424:	and	w0, w0, #0xff
  475428:	eor	w0, w0, #0x1
  47542c:	and	w0, w0, #0xff
  475430:	cmp	w0, #0x0
  475434:	b.eq	475440 <_obstack_memory_used@@Base+0x18300>  // b.none
  475438:	ldr	x0, [sp, #96]
  47543c:	str	x0, [sp, #88]
  475440:	ldr	x0, [sp, #104]
  475444:	bl	475244 <_obstack_memory_used@@Base+0x18104>
  475448:	and	w0, w0, #0xff
  47544c:	cmp	w0, #0x0
  475450:	b.eq	47545c <_obstack_memory_used@@Base+0x1831c>  // b.none
  475454:	ldr	x0, [sp, #88]
  475458:	b	475460 <_obstack_memory_used@@Base+0x18320>
  47545c:	mov	x0, #0xffffffffffffffff    	// #-1
  475460:	ldp	x29, x30, [sp], #112
  475464:	ret
  475468:	sub	sp, sp, #0x10
  47546c:	str	w0, [sp, #12]
  475470:	ldr	w0, [sp, #12]
  475474:	cmp	w0, #0x5f
  475478:	b.eq	4754d4 <_obstack_memory_used@@Base+0x18394>  // b.none
  47547c:	ldr	w0, [sp, #12]
  475480:	cmp	w0, #0x5f
  475484:	b.gt	4754dc <_obstack_memory_used@@Base+0x1839c>
  475488:	ldr	w0, [sp, #12]
  47548c:	cmp	w0, #0x26
  475490:	b.eq	4754cc <_obstack_memory_used@@Base+0x1838c>  // b.none
  475494:	ldr	w0, [sp, #12]
  475498:	cmp	w0, #0x26
  47549c:	b.gt	4754dc <_obstack_memory_used@@Base+0x1839c>
  4754a0:	ldr	w0, [sp, #12]
  4754a4:	cmp	w0, #0x10
  4754a8:	b.eq	4754bc <_obstack_memory_used@@Base+0x1837c>  // b.none
  4754ac:	ldr	w0, [sp, #12]
  4754b0:	cmp	w0, #0x16
  4754b4:	b.eq	4754c4 <_obstack_memory_used@@Base+0x18384>  // b.none
  4754b8:	b	4754dc <_obstack_memory_used@@Base+0x1839c>
  4754bc:	mov	w0, #0x0                   	// #0
  4754c0:	b	4754e0 <_obstack_memory_used@@Base+0x183a0>
  4754c4:	mov	w0, #0x0                   	// #0
  4754c8:	b	4754e0 <_obstack_memory_used@@Base+0x183a0>
  4754cc:	mov	w0, #0x0                   	// #0
  4754d0:	b	4754e0 <_obstack_memory_used@@Base+0x183a0>
  4754d4:	mov	w0, #0x0                   	// #0
  4754d8:	b	4754e0 <_obstack_memory_used@@Base+0x183a0>
  4754dc:	mov	w0, #0x1                   	// #1
  4754e0:	add	sp, sp, #0x10
  4754e4:	ret
  4754e8:	stp	x29, x30, [sp, #-64]!
  4754ec:	mov	x29, sp
  4754f0:	str	x0, [sp, #40]
  4754f4:	str	x1, [sp, #32]
  4754f8:	str	x2, [sp, #24]
  4754fc:	str	x3, [sp, #16]
  475500:	mov	x0, #0x48                  	// #72
  475504:	bl	4043f0 <malloc@plt>
  475508:	str	x0, [sp, #56]
  47550c:	ldr	x0, [sp, #56]
  475510:	cmp	x0, #0x0
  475514:	b.eq	4755b0 <_obstack_memory_used@@Base+0x18470>  // b.none
  475518:	ldr	x0, [sp, #56]
  47551c:	ldr	x1, [sp, #40]
  475520:	str	x1, [x0]
  475524:	ldr	x0, [sp, #56]
  475528:	ldr	x1, [sp, #32]
  47552c:	str	x1, [x0, #8]
  475530:	ldr	x0, [sp, #56]
  475534:	ldr	x1, [sp, #24]
  475538:	str	x1, [x0, #16]
  47553c:	ldr	x0, [sp, #56]
  475540:	ldr	x1, [sp, #16]
  475544:	str	x1, [x0, #24]
  475548:	ldr	x0, [sp, #56]
  47554c:	str	xzr, [x0, #40]
  475550:	ldr	x0, [sp, #56]
  475554:	str	xzr, [x0, #32]
  475558:	mov	x0, #0xc8                  	// #200
  47555c:	bl	4043f0 <malloc@plt>
  475560:	mov	x1, x0
  475564:	ldr	x0, [sp, #56]
  475568:	str	x1, [x0, #48]
  47556c:	ldr	x0, [sp, #56]
  475570:	ldr	x0, [x0, #48]
  475574:	cmp	x0, #0x0
  475578:	b.ne	47558c <_obstack_memory_used@@Base+0x1844c>  // b.any
  47557c:	ldr	x0, [sp, #56]
  475580:	bl	404880 <free@plt>
  475584:	str	xzr, [sp, #56]
  475588:	b	4755b0 <_obstack_memory_used@@Base+0x18470>
  47558c:	ldr	x0, [sp, #56]
  475590:	ldr	x1, [x0, #48]
  475594:	ldr	x0, [sp, #56]
  475598:	str	x1, [x0, #56]
  47559c:	ldr	x0, [sp, #56]
  4755a0:	ldr	x0, [x0, #48]
  4755a4:	add	x1, x0, #0xc8
  4755a8:	ldr	x0, [sp, #56]
  4755ac:	str	x1, [x0, #64]
  4755b0:	ldr	x0, [sp, #56]
  4755b4:	ldp	x29, x30, [sp], #64
  4755b8:	ret
  4755bc:	stp	x29, x30, [sp, #-32]!
  4755c0:	mov	x29, sp
  4755c4:	str	x0, [sp, #24]
  4755c8:	ldr	x0, [sp, #24]
  4755cc:	bl	475644 <_obstack_memory_used@@Base+0x18504>
  4755d0:	ldr	x0, [sp, #24]
  4755d4:	ldr	x1, [x0, #56]
  4755d8:	ldr	x0, [sp, #24]
  4755dc:	ldr	x0, [x0, #48]
  4755e0:	cmp	x1, x0
  4755e4:	b.ls	475624 <_obstack_memory_used@@Base+0x184e4>  // b.plast
  4755e8:	ldr	x0, [sp, #24]
  4755ec:	ldr	x4, [x0, #48]
  4755f0:	ldr	x0, [sp, #24]
  4755f4:	ldr	x1, [x0, #56]
  4755f8:	ldr	x0, [sp, #24]
  4755fc:	ldr	x0, [x0, #48]
  475600:	sub	x0, x1, x0
  475604:	mov	x1, x0
  475608:	ldr	x0, [sp, #24]
  47560c:	ldr	x0, [x0]
  475610:	mov	x3, x0
  475614:	mov	x2, x1
  475618:	mov	x1, #0x1                   	// #1
  47561c:	mov	x0, x4
  475620:	bl	404090 <fwrite_unlocked@plt>
  475624:	ldr	x0, [sp, #24]
  475628:	ldr	x0, [x0, #48]
  47562c:	bl	404880 <free@plt>
  475630:	ldr	x0, [sp, #24]
  475634:	bl	404880 <free@plt>
  475638:	nop
  47563c:	ldp	x29, x30, [sp], #32
  475640:	ret
  475644:	stp	x29, x30, [sp, #-112]!
  475648:	mov	x29, sp
  47564c:	str	x0, [sp, #24]
  475650:	ldr	x0, [sp, #24]
  475654:	ldr	x1, [x0, #48]
  475658:	ldr	x0, [sp, #24]
  47565c:	ldr	x0, [x0, #32]
  475660:	add	x0, x1, x0
  475664:	str	x0, [sp, #104]
  475668:	b	475e6c <_obstack_memory_used@@Base+0x18d2c>
  47566c:	ldr	x0, [sp, #24]
  475670:	ldr	x0, [x0, #40]
  475674:	cmp	x0, #0x0
  475678:	b.ne	475764 <_obstack_memory_used@@Base+0x18624>  // b.any
  47567c:	ldr	x0, [sp, #24]
  475680:	ldr	x0, [x0, #8]
  475684:	cmp	x0, #0x0
  475688:	b.eq	475764 <_obstack_memory_used@@Base+0x18624>  // b.none
  47568c:	ldr	x0, [sp, #24]
  475690:	ldr	x0, [x0, #8]
  475694:	str	x0, [sp, #48]
  475698:	ldr	x0, [sp, #24]
  47569c:	ldr	x1, [x0, #56]
  4756a0:	ldr	x0, [sp, #48]
  4756a4:	add	x1, x1, x0
  4756a8:	ldr	x0, [sp, #24]
  4756ac:	ldr	x0, [x0, #64]
  4756b0:	cmp	x1, x0
  4756b4:	b.cs	475720 <_obstack_memory_used@@Base+0x185e0>  // b.hs, b.nlast
  4756b8:	ldr	x1, [sp, #104]
  4756bc:	ldr	x0, [sp, #48]
  4756c0:	add	x3, x1, x0
  4756c4:	ldr	x0, [sp, #24]
  4756c8:	ldr	x1, [x0, #56]
  4756cc:	ldr	x0, [sp, #104]
  4756d0:	sub	x0, x1, x0
  4756d4:	mov	x2, x0
  4756d8:	ldr	x1, [sp, #104]
  4756dc:	mov	x0, x3
  4756e0:	bl	404030 <memmove@plt>
  4756e4:	ldr	x0, [sp, #24]
  4756e8:	ldr	x1, [x0, #56]
  4756ec:	ldr	x0, [sp, #48]
  4756f0:	add	x1, x1, x0
  4756f4:	ldr	x0, [sp, #24]
  4756f8:	str	x1, [x0, #56]
  4756fc:	ldr	x2, [sp, #48]
  475700:	mov	w1, #0x20                  	// #32
  475704:	ldr	x0, [sp, #104]
  475708:	bl	4044d0 <memset@plt>
  47570c:	ldr	x1, [sp, #104]
  475710:	ldr	x0, [sp, #48]
  475714:	add	x0, x1, x0
  475718:	str	x0, [sp, #104]
  47571c:	b	475758 <_obstack_memory_used@@Base+0x18618>
  475720:	str	xzr, [sp, #80]
  475724:	b	475748 <_obstack_memory_used@@Base+0x18608>
  475728:	ldr	x0, [sp, #24]
  47572c:	ldr	x0, [x0]
  475730:	mov	x1, x0
  475734:	mov	w0, #0x20                  	// #32
  475738:	bl	404330 <putc_unlocked@plt>
  47573c:	ldr	x0, [sp, #80]
  475740:	add	x0, x0, #0x1
  475744:	str	x0, [sp, #80]
  475748:	ldr	x1, [sp, #80]
  47574c:	ldr	x0, [sp, #48]
  475750:	cmp	x1, x0
  475754:	b.cc	475728 <_obstack_memory_used@@Base+0x185e8>  // b.lo, b.ul, b.last
  475758:	ldr	x1, [sp, #48]
  47575c:	ldr	x0, [sp, #24]
  475760:	str	x1, [x0, #40]
  475764:	ldr	x0, [sp, #24]
  475768:	ldr	x1, [x0, #56]
  47576c:	ldr	x0, [sp, #104]
  475770:	sub	x0, x1, x0
  475774:	str	x0, [sp, #88]
  475778:	ldr	x2, [sp, #88]
  47577c:	mov	w1, #0xa                   	// #10
  475780:	ldr	x0, [sp, #104]
  475784:	bl	404a20 <memchr@plt>
  475788:	str	x0, [sp, #96]
  47578c:	ldr	x0, [sp, #24]
  475790:	ldr	x0, [x0, #40]
  475794:	cmp	x0, #0x0
  475798:	b.ge	4757a4 <_obstack_memory_used@@Base+0x18664>  // b.tcont
  47579c:	ldr	x0, [sp, #24]
  4757a0:	str	xzr, [x0, #40]
  4757a4:	ldr	x0, [sp, #96]
  4757a8:	cmp	x0, #0x0
  4757ac:	b.ne	475808 <_obstack_memory_used@@Base+0x186c8>  // b.any
  4757b0:	ldr	x0, [sp, #24]
  4757b4:	ldr	x0, [x0, #40]
  4757b8:	mov	x1, x0
  4757bc:	ldr	x0, [sp, #88]
  4757c0:	add	x1, x1, x0
  4757c4:	ldr	x0, [sp, #24]
  4757c8:	ldr	x0, [x0, #16]
  4757cc:	cmp	x1, x0
  4757d0:	b.cs	4757f8 <_obstack_memory_used@@Base+0x186b8>  // b.hs, b.nlast
  4757d4:	ldr	x0, [sp, #24]
  4757d8:	ldr	x0, [x0, #40]
  4757dc:	mov	x1, x0
  4757e0:	ldr	x0, [sp, #88]
  4757e4:	add	x0, x1, x0
  4757e8:	mov	x1, x0
  4757ec:	ldr	x0, [sp, #24]
  4757f0:	str	x1, [x0, #40]
  4757f4:	b	475e80 <_obstack_memory_used@@Base+0x18d40>
  4757f8:	ldr	x0, [sp, #24]
  4757fc:	ldr	x0, [x0, #56]
  475800:	str	x0, [sp, #96]
  475804:	b	475848 <_obstack_memory_used@@Base+0x18708>
  475808:	ldr	x0, [sp, #24]
  47580c:	ldr	x1, [x0, #40]
  475810:	ldr	x2, [sp, #96]
  475814:	ldr	x0, [sp, #104]
  475818:	sub	x0, x2, x0
  47581c:	add	x0, x1, x0
  475820:	ldr	x1, [sp, #24]
  475824:	ldr	x1, [x1, #16]
  475828:	cmp	x0, x1
  47582c:	b.ge	475848 <_obstack_memory_used@@Base+0x18708>  // b.tcont
  475830:	ldr	x0, [sp, #24]
  475834:	str	xzr, [x0, #40]
  475838:	ldr	x0, [sp, #96]
  47583c:	add	x0, x0, #0x1
  475840:	str	x0, [sp, #104]
  475844:	b	475e6c <_obstack_memory_used@@Base+0x18d2c>
  475848:	ldr	x0, [sp, #24]
  47584c:	ldr	x0, [x0, #16]
  475850:	sub	x0, x0, #0x1
  475854:	str	x0, [sp, #40]
  475858:	ldr	x0, [sp, #24]
  47585c:	ldr	x0, [x0, #24]
  475860:	cmp	x0, #0x0
  475864:	b.ge	475960 <_obstack_memory_used@@Base+0x18820>  // b.tcont
  475868:	ldr	x0, [sp, #24]
  47586c:	ldr	x0, [x0, #56]
  475870:	ldr	x1, [sp, #96]
  475874:	cmp	x1, x0
  475878:	b.cs	475914 <_obstack_memory_used@@Base+0x187d4>  // b.hs, b.nlast
  47587c:	ldr	x0, [sp, #24]
  475880:	ldr	x0, [x0, #40]
  475884:	mov	x1, x0
  475888:	ldr	x0, [sp, #40]
  47588c:	sub	x0, x0, x1
  475890:	ldr	x1, [sp, #104]
  475894:	add	x3, x1, x0
  475898:	ldr	x0, [sp, #24]
  47589c:	ldr	x1, [x0, #56]
  4758a0:	ldr	x0, [sp, #96]
  4758a4:	sub	x0, x1, x0
  4758a8:	mov	x2, x0
  4758ac:	ldr	x1, [sp, #96]
  4758b0:	mov	x0, x3
  4758b4:	bl	404030 <memmove@plt>
  4758b8:	ldr	x0, [sp, #24]
  4758bc:	ldr	x1, [x0, #56]
  4758c0:	ldr	x0, [sp, #24]
  4758c4:	ldr	x0, [x0, #40]
  4758c8:	mov	x2, x0
  4758cc:	ldr	x0, [sp, #40]
  4758d0:	sub	x0, x0, x2
  4758d4:	ldr	x2, [sp, #104]
  4758d8:	add	x2, x2, x0
  4758dc:	ldr	x0, [sp, #96]
  4758e0:	sub	x0, x2, x0
  4758e4:	neg	x0, x0
  4758e8:	add	x1, x1, x0
  4758ec:	ldr	x0, [sp, #24]
  4758f0:	str	x1, [x0, #56]
  4758f4:	ldr	x0, [sp, #24]
  4758f8:	str	xzr, [x0, #40]
  4758fc:	ldr	x0, [sp, #40]
  475900:	add	x0, x0, #0x1
  475904:	ldr	x1, [sp, #104]
  475908:	add	x0, x1, x0
  47590c:	str	x0, [sp, #104]
  475910:	b	475e6c <_obstack_memory_used@@Base+0x18d2c>
  475914:	ldr	x0, [sp, #24]
  475918:	ldr	x0, [x0, #40]
  47591c:	mov	x1, x0
  475920:	ldr	x0, [sp, #88]
  475924:	add	x0, x1, x0
  475928:	mov	x1, x0
  47592c:	ldr	x0, [sp, #24]
  475930:	str	x1, [x0, #40]
  475934:	ldr	x0, [sp, #24]
  475938:	ldr	x1, [x0, #56]
  47593c:	ldr	x0, [sp, #24]
  475940:	ldr	x0, [x0, #40]
  475944:	mov	x2, x0
  475948:	ldr	x0, [sp, #40]
  47594c:	sub	x0, x0, x2
  475950:	add	x1, x1, x0
  475954:	ldr	x0, [sp, #24]
  475958:	str	x1, [x0, #56]
  47595c:	b	475e80 <_obstack_memory_used@@Base+0x18d40>
  475960:	ldr	x0, [sp, #24]
  475964:	ldr	x0, [x0, #40]
  475968:	mov	x1, x0
  47596c:	ldr	x0, [sp, #40]
  475970:	sub	x0, x0, x1
  475974:	add	x0, x0, #0x1
  475978:	ldr	x1, [sp, #104]
  47597c:	add	x0, x1, x0
  475980:	str	x0, [sp, #72]
  475984:	b	475994 <_obstack_memory_used@@Base+0x18854>
  475988:	ldr	x0, [sp, #72]
  47598c:	sub	x0, x0, #0x1
  475990:	str	x0, [sp, #72]
  475994:	ldr	x1, [sp, #72]
  475998:	ldr	x0, [sp, #104]
  47599c:	cmp	x1, x0
  4759a0:	b.cc	4759d0 <_obstack_memory_used@@Base+0x18890>  // b.lo, b.ul, b.last
  4759a4:	bl	4047f0 <__ctype_b_loc@plt>
  4759a8:	ldr	x1, [x0]
  4759ac:	ldr	x0, [sp, #72]
  4759b0:	ldrb	w0, [x0]
  4759b4:	and	x0, x0, #0xff
  4759b8:	lsl	x0, x0, #1
  4759bc:	add	x0, x1, x0
  4759c0:	ldrh	w0, [x0]
  4759c4:	and	w0, w0, #0x1
  4759c8:	cmp	w0, #0x0
  4759cc:	b.eq	475988 <_obstack_memory_used@@Base+0x18848>  // b.none
  4759d0:	ldr	x0, [sp, #72]
  4759d4:	add	x0, x0, #0x1
  4759d8:	str	x0, [sp, #64]
  4759dc:	ldr	x1, [sp, #64]
  4759e0:	ldr	x0, [sp, #104]
  4759e4:	cmp	x1, x0
  4759e8:	b.ls	475a54 <_obstack_memory_used@@Base+0x18914>  // b.plast
  4759ec:	ldr	x1, [sp, #72]
  4759f0:	ldr	x0, [sp, #104]
  4759f4:	cmp	x1, x0
  4759f8:	b.cc	475a44 <_obstack_memory_used@@Base+0x18904>  // b.lo, b.ul, b.last
  4759fc:	ldr	x0, [sp, #72]
  475a00:	sub	x0, x0, #0x1
  475a04:	str	x0, [sp, #72]
  475a08:	ldr	x1, [sp, #72]
  475a0c:	ldr	x0, [sp, #104]
  475a10:	cmp	x1, x0
  475a14:	b.cc	475a44 <_obstack_memory_used@@Base+0x18904>  // b.lo, b.ul, b.last
  475a18:	bl	4047f0 <__ctype_b_loc@plt>
  475a1c:	ldr	x1, [x0]
  475a20:	ldr	x0, [sp, #72]
  475a24:	ldrb	w0, [x0]
  475a28:	and	x0, x0, #0xff
  475a2c:	lsl	x0, x0, #1
  475a30:	add	x0, x1, x0
  475a34:	ldrh	w0, [x0]
  475a38:	and	w0, w0, #0x1
  475a3c:	cmp	w0, #0x0
  475a40:	b.ne	4759fc <_obstack_memory_used@@Base+0x188bc>  // b.any
  475a44:	ldr	x0, [sp, #72]
  475a48:	add	x0, x0, #0x1
  475a4c:	str	x0, [sp, #96]
  475a50:	b	475b40 <_obstack_memory_used@@Base+0x18a00>
  475a54:	ldr	x0, [sp, #24]
  475a58:	ldr	x0, [x0, #40]
  475a5c:	mov	x1, x0
  475a60:	ldr	x0, [sp, #40]
  475a64:	sub	x0, x0, x1
  475a68:	add	x0, x0, #0x1
  475a6c:	ldr	x1, [sp, #104]
  475a70:	add	x0, x1, x0
  475a74:	str	x0, [sp, #72]
  475a78:	ldr	x1, [sp, #72]
  475a7c:	ldr	x0, [sp, #96]
  475a80:	cmp	x1, x0
  475a84:	b.cs	475ad0 <_obstack_memory_used@@Base+0x18990>  // b.hs, b.nlast
  475a88:	ldr	x0, [sp, #72]
  475a8c:	add	x0, x0, #0x1
  475a90:	str	x0, [sp, #72]
  475a94:	ldr	x1, [sp, #72]
  475a98:	ldr	x0, [sp, #96]
  475a9c:	cmp	x1, x0
  475aa0:	b.cs	475ad0 <_obstack_memory_used@@Base+0x18990>  // b.hs, b.nlast
  475aa4:	bl	4047f0 <__ctype_b_loc@plt>
  475aa8:	ldr	x1, [x0]
  475aac:	ldr	x0, [sp, #72]
  475ab0:	ldrb	w0, [x0]
  475ab4:	and	x0, x0, #0xff
  475ab8:	lsl	x0, x0, #1
  475abc:	add	x0, x1, x0
  475ac0:	ldrh	w0, [x0]
  475ac4:	and	w0, w0, #0x1
  475ac8:	cmp	w0, #0x0
  475acc:	b.eq	475a88 <_obstack_memory_used@@Base+0x18948>  // b.none
  475ad0:	ldr	x1, [sp, #72]
  475ad4:	ldr	x0, [sp, #96]
  475ad8:	cmp	x1, x0
  475adc:	b.ne	475af8 <_obstack_memory_used@@Base+0x189b8>  // b.any
  475ae0:	ldr	x0, [sp, #24]
  475ae4:	str	xzr, [x0, #40]
  475ae8:	ldr	x0, [sp, #96]
  475aec:	add	x0, x0, #0x1
  475af0:	str	x0, [sp, #104]
  475af4:	b	475e6c <_obstack_memory_used@@Base+0x18d2c>
  475af8:	ldr	x0, [sp, #72]
  475afc:	str	x0, [sp, #96]
  475b00:	ldr	x0, [sp, #72]
  475b04:	add	x0, x0, #0x1
  475b08:	str	x0, [sp, #72]
  475b0c:	bl	4047f0 <__ctype_b_loc@plt>
  475b10:	ldr	x1, [x0]
  475b14:	ldr	x0, [sp, #72]
  475b18:	ldrb	w0, [x0]
  475b1c:	and	x0, x0, #0xff
  475b20:	lsl	x0, x0, #1
  475b24:	add	x0, x1, x0
  475b28:	ldrh	w0, [x0]
  475b2c:	and	w0, w0, #0x1
  475b30:	cmp	w0, #0x0
  475b34:	b.ne	475b00 <_obstack_memory_used@@Base+0x189c0>  // b.any
  475b38:	ldr	x0, [sp, #72]
  475b3c:	str	x0, [sp, #64]
  475b40:	ldr	x0, [sp, #88]
  475b44:	add	x0, x0, #0x1
  475b48:	ldr	x1, [sp, #104]
  475b4c:	add	x0, x1, x0
  475b50:	ldr	x1, [sp, #64]
  475b54:	cmp	x1, x0
  475b58:	b.ne	475b80 <_obstack_memory_used@@Base+0x18a40>  // b.any
  475b5c:	ldr	x0, [sp, #24]
  475b60:	ldr	x1, [x0, #24]
  475b64:	ldr	x0, [sp, #24]
  475b68:	ldr	x2, [x0, #64]
  475b6c:	ldr	x0, [sp, #96]
  475b70:	sub	x0, x2, x0
  475b74:	cmp	x1, x0
  475b78:	b.ge	475ba0 <_obstack_memory_used@@Base+0x18a60>  // b.tcont
  475b7c:	b	475cf0 <_obstack_memory_used@@Base+0x18bb0>
  475b80:	ldr	x0, [sp, #96]
  475b84:	add	x0, x0, #0x1
  475b88:	ldr	x1, [sp, #64]
  475b8c:	sub	x1, x1, x0
  475b90:	ldr	x0, [sp, #24]
  475b94:	ldr	x0, [x0, #24]
  475b98:	cmp	x1, x0
  475b9c:	b.ge	475cf0 <_obstack_memory_used@@Base+0x18bb0>  // b.tcont
  475ba0:	ldr	x0, [sp, #24]
  475ba4:	ldr	x0, [x0, #56]
  475ba8:	ldr	x1, [sp, #64]
  475bac:	cmp	x1, x0
  475bb0:	b.cs	475cf0 <_obstack_memory_used@@Base+0x18bb0>  // b.hs, b.nlast
  475bb4:	ldr	x0, [sp, #24]
  475bb8:	ldr	x1, [x0, #64]
  475bbc:	ldr	x0, [sp, #24]
  475bc0:	ldr	x0, [x0, #56]
  475bc4:	sub	x1, x1, x0
  475bc8:	ldr	x0, [sp, #24]
  475bcc:	ldr	x0, [x0, #24]
  475bd0:	add	x0, x0, #0x1
  475bd4:	cmp	x1, x0
  475bd8:	b.le	475c58 <_obstack_memory_used@@Base+0x18b18>
  475bdc:	ldr	x0, [sp, #24]
  475be0:	ldr	x1, [x0, #56]
  475be4:	ldr	x0, [sp, #64]
  475be8:	sub	x0, x1, x0
  475bec:	str	x0, [sp, #32]
  475bf0:	ldr	x0, [sp, #24]
  475bf4:	ldr	x0, [x0, #24]
  475bf8:	add	x0, x0, #0x1
  475bfc:	ldr	x1, [sp, #96]
  475c00:	add	x0, x1, x0
  475c04:	ldr	x2, [sp, #32]
  475c08:	ldr	x1, [sp, #64]
  475c0c:	bl	404030 <memmove@plt>
  475c10:	ldr	x0, [sp, #24]
  475c14:	ldr	x0, [x0, #24]
  475c18:	add	x0, x0, #0x1
  475c1c:	ldr	x1, [sp, #96]
  475c20:	add	x0, x1, x0
  475c24:	str	x0, [sp, #64]
  475c28:	ldr	x1, [sp, #64]
  475c2c:	ldr	x0, [sp, #32]
  475c30:	add	x1, x1, x0
  475c34:	ldr	x0, [sp, #104]
  475c38:	sub	x0, x1, x0
  475c3c:	str	x0, [sp, #88]
  475c40:	ldr	x0, [sp, #96]
  475c44:	add	x1, x0, #0x1
  475c48:	str	x1, [sp, #96]
  475c4c:	mov	w1, #0xa                   	// #10
  475c50:	strb	w1, [x0]
  475c54:	b	475d04 <_obstack_memory_used@@Base+0x18bc4>
  475c58:	ldr	x0, [sp, #24]
  475c5c:	ldr	x0, [x0, #48]
  475c60:	ldr	x1, [sp, #96]
  475c64:	cmp	x1, x0
  475c68:	b.ls	475ca4 <_obstack_memory_used@@Base+0x18b64>  // b.plast
  475c6c:	ldr	x0, [sp, #24]
  475c70:	ldr	x4, [x0, #48]
  475c74:	ldr	x0, [sp, #24]
  475c78:	ldr	x0, [x0, #48]
  475c7c:	ldr	x1, [sp, #96]
  475c80:	sub	x0, x1, x0
  475c84:	mov	x1, x0
  475c88:	ldr	x0, [sp, #24]
  475c8c:	ldr	x0, [x0]
  475c90:	mov	x3, x0
  475c94:	mov	x2, x1
  475c98:	mov	x1, #0x1                   	// #1
  475c9c:	mov	x0, x4
  475ca0:	bl	404090 <fwrite_unlocked@plt>
  475ca4:	ldr	x0, [sp, #24]
  475ca8:	ldr	x0, [x0]
  475cac:	mov	x1, x0
  475cb0:	mov	w0, #0xa                   	// #10
  475cb4:	bl	404330 <putc_unlocked@plt>
  475cb8:	ldr	x0, [sp, #24]
  475cbc:	ldr	x0, [x0, #48]
  475cc0:	ldr	x1, [sp, #104]
  475cc4:	sub	x0, x1, x0
  475cc8:	mov	x1, x0
  475ccc:	ldr	x0, [sp, #88]
  475cd0:	add	x0, x0, x1
  475cd4:	str	x0, [sp, #88]
  475cd8:	ldr	x0, [sp, #24]
  475cdc:	ldr	x0, [x0, #48]
  475ce0:	str	x0, [sp, #104]
  475ce4:	ldr	x0, [sp, #104]
  475ce8:	str	x0, [sp, #96]
  475cec:	b	475d04 <_obstack_memory_used@@Base+0x18bc4>
  475cf0:	ldr	x0, [sp, #96]
  475cf4:	add	x1, x0, #0x1
  475cf8:	str	x1, [sp, #96]
  475cfc:	mov	w1, #0xa                   	// #10
  475d00:	strb	w1, [x0]
  475d04:	ldr	x1, [sp, #64]
  475d08:	ldr	x0, [sp, #96]
  475d0c:	sub	x1, x1, x0
  475d10:	ldr	x0, [sp, #24]
  475d14:	ldr	x0, [x0, #24]
  475d18:	cmp	x1, x0
  475d1c:	b.ge	475d5c <_obstack_memory_used@@Base+0x18c1c>  // b.tcont
  475d20:	ldr	x0, [sp, #88]
  475d24:	add	x0, x0, #0x1
  475d28:	ldr	x1, [sp, #104]
  475d2c:	add	x0, x1, x0
  475d30:	ldr	x1, [sp, #64]
  475d34:	cmp	x1, x0
  475d38:	b.ne	475d9c <_obstack_memory_used@@Base+0x18c5c>  // b.any
  475d3c:	ldr	x0, [sp, #24]
  475d40:	ldr	x1, [x0, #64]
  475d44:	ldr	x0, [sp, #64]
  475d48:	sub	x1, x1, x0
  475d4c:	ldr	x0, [sp, #24]
  475d50:	ldr	x0, [x0, #24]
  475d54:	cmp	x1, x0
  475d58:	b.lt	475d9c <_obstack_memory_used@@Base+0x18c5c>  // b.tstop
  475d5c:	str	wzr, [sp, #60]
  475d60:	b	475d84 <_obstack_memory_used@@Base+0x18c44>
  475d64:	ldr	x0, [sp, #96]
  475d68:	add	x1, x0, #0x1
  475d6c:	str	x1, [sp, #96]
  475d70:	mov	w1, #0x20                  	// #32
  475d74:	strb	w1, [x0]
  475d78:	ldr	w0, [sp, #60]
  475d7c:	add	w0, w0, #0x1
  475d80:	str	w0, [sp, #60]
  475d84:	ldrsw	x1, [sp, #60]
  475d88:	ldr	x0, [sp, #24]
  475d8c:	ldr	x0, [x0, #24]
  475d90:	cmp	x1, x0
  475d94:	b.lt	475d64 <_obstack_memory_used@@Base+0x18c24>  // b.tstop
  475d98:	b	475dd8 <_obstack_memory_used@@Base+0x18c98>
  475d9c:	str	wzr, [sp, #60]
  475da0:	b	475dc4 <_obstack_memory_used@@Base+0x18c84>
  475da4:	ldr	x0, [sp, #24]
  475da8:	ldr	x0, [x0]
  475dac:	mov	x1, x0
  475db0:	mov	w0, #0x20                  	// #32
  475db4:	bl	404330 <putc_unlocked@plt>
  475db8:	ldr	w0, [sp, #60]
  475dbc:	add	w0, w0, #0x1
  475dc0:	str	w0, [sp, #60]
  475dc4:	ldrsw	x1, [sp, #60]
  475dc8:	ldr	x0, [sp, #24]
  475dcc:	ldr	x0, [x0, #24]
  475dd0:	cmp	x1, x0
  475dd4:	b.lt	475da4 <_obstack_memory_used@@Base+0x18c64>  // b.tstop
  475dd8:	ldr	x1, [sp, #96]
  475ddc:	ldr	x0, [sp, #64]
  475de0:	cmp	x1, x0
  475de4:	b.cs	475e0c <_obstack_memory_used@@Base+0x18ccc>  // b.hs, b.nlast
  475de8:	ldr	x1, [sp, #104]
  475dec:	ldr	x0, [sp, #88]
  475df0:	add	x1, x1, x0
  475df4:	ldr	x0, [sp, #64]
  475df8:	sub	x0, x1, x0
  475dfc:	mov	x2, x0
  475e00:	ldr	x1, [sp, #64]
  475e04:	ldr	x0, [sp, #96]
  475e08:	bl	404030 <memmove@plt>
  475e0c:	ldr	x1, [sp, #64]
  475e10:	ldr	x0, [sp, #104]
  475e14:	sub	x0, x1, x0
  475e18:	mov	x1, x0
  475e1c:	ldr	x0, [sp, #88]
  475e20:	sub	x0, x0, x1
  475e24:	str	x0, [sp, #88]
  475e28:	ldr	x0, [sp, #96]
  475e2c:	str	x0, [sp, #104]
  475e30:	ldr	x1, [sp, #96]
  475e34:	ldr	x0, [sp, #88]
  475e38:	add	x1, x1, x0
  475e3c:	ldr	x0, [sp, #24]
  475e40:	str	x1, [x0, #56]
  475e44:	ldr	x0, [sp, #24]
  475e48:	ldr	x0, [x0, #24]
  475e4c:	cmp	x0, #0x0
  475e50:	b.eq	475e60 <_obstack_memory_used@@Base+0x18d20>  // b.none
  475e54:	ldr	x0, [sp, #24]
  475e58:	ldr	x0, [x0, #24]
  475e5c:	b	475e64 <_obstack_memory_used@@Base+0x18d24>
  475e60:	mov	x0, #0xffffffffffffffff    	// #-1
  475e64:	ldr	x1, [sp, #24]
  475e68:	str	x0, [x1, #40]
  475e6c:	ldr	x0, [sp, #24]
  475e70:	ldr	x0, [x0, #56]
  475e74:	ldr	x1, [sp, #104]
  475e78:	cmp	x1, x0
  475e7c:	b.cc	47566c <_obstack_memory_used@@Base+0x1852c>  // b.lo, b.ul, b.last
  475e80:	ldr	x0, [sp, #24]
  475e84:	ldr	x1, [x0, #56]
  475e88:	ldr	x0, [sp, #24]
  475e8c:	ldr	x0, [x0, #48]
  475e90:	sub	x0, x1, x0
  475e94:	mov	x1, x0
  475e98:	ldr	x0, [sp, #24]
  475e9c:	str	x1, [x0, #32]
  475ea0:	nop
  475ea4:	ldp	x29, x30, [sp], #112
  475ea8:	ret
  475eac:	stp	x29, x30, [sp, #-64]!
  475eb0:	mov	x29, sp
  475eb4:	str	x0, [sp, #24]
  475eb8:	str	x1, [sp, #16]
  475ebc:	ldr	x0, [sp, #24]
  475ec0:	ldr	x1, [x0, #64]
  475ec4:	ldr	x0, [sp, #24]
  475ec8:	ldr	x0, [x0, #56]
  475ecc:	sub	x0, x1, x0
  475ed0:	mov	x1, x0
  475ed4:	ldr	x0, [sp, #16]
  475ed8:	cmp	x0, x1
  475edc:	b.ls	4760a0 <_obstack_memory_used@@Base+0x18f60>  // b.plast
  475ee0:	ldr	x0, [sp, #24]
  475ee4:	bl	475644 <_obstack_memory_used@@Base+0x18504>
  475ee8:	ldr	x0, [sp, #24]
  475eec:	ldr	x4, [x0, #48]
  475ef0:	ldr	x0, [sp, #24]
  475ef4:	ldr	x1, [x0, #56]
  475ef8:	ldr	x0, [sp, #24]
  475efc:	ldr	x0, [x0, #48]
  475f00:	sub	x0, x1, x0
  475f04:	mov	x1, x0
  475f08:	ldr	x0, [sp, #24]
  475f0c:	ldr	x0, [x0]
  475f10:	mov	x3, x0
  475f14:	mov	x2, x1
  475f18:	mov	x1, #0x1                   	// #1
  475f1c:	mov	x0, x4
  475f20:	bl	404090 <fwrite_unlocked@plt>
  475f24:	str	x0, [sp, #56]
  475f28:	ldr	x0, [sp, #24]
  475f2c:	ldr	x1, [x0, #56]
  475f30:	ldr	x0, [sp, #24]
  475f34:	ldr	x0, [x0, #48]
  475f38:	sub	x0, x1, x0
  475f3c:	ldr	x1, [sp, #56]
  475f40:	cmp	x1, x0
  475f44:	b.ne	475f88 <_obstack_memory_used@@Base+0x18e48>  // b.any
  475f48:	ldr	x0, [sp, #24]
  475f4c:	ldr	x1, [x0, #48]
  475f50:	ldr	x0, [sp, #24]
  475f54:	str	x1, [x0, #56]
  475f58:	ldr	x0, [sp, #24]
  475f5c:	str	xzr, [x0, #32]
  475f60:	ldr	x0, [sp, #24]
  475f64:	ldr	x1, [x0, #64]
  475f68:	ldr	x0, [sp, #24]
  475f6c:	ldr	x0, [x0, #48]
  475f70:	sub	x0, x1, x0
  475f74:	mov	x1, x0
  475f78:	ldr	x0, [sp, #16]
  475f7c:	cmp	x0, x1
  475f80:	b.ls	4760a0 <_obstack_memory_used@@Base+0x18f60>  // b.plast
  475f84:	b	476000 <_obstack_memory_used@@Base+0x18ec0>
  475f88:	ldr	x0, [sp, #24]
  475f8c:	ldr	x1, [x0, #56]
  475f90:	ldr	x0, [sp, #56]
  475f94:	neg	x0, x0
  475f98:	add	x1, x1, x0
  475f9c:	ldr	x0, [sp, #24]
  475fa0:	str	x1, [x0, #56]
  475fa4:	ldr	x0, [sp, #24]
  475fa8:	ldr	x1, [x0, #32]
  475fac:	ldr	x0, [sp, #56]
  475fb0:	sub	x1, x1, x0
  475fb4:	ldr	x0, [sp, #24]
  475fb8:	str	x1, [x0, #32]
  475fbc:	ldr	x0, [sp, #24]
  475fc0:	ldr	x3, [x0, #48]
  475fc4:	ldr	x0, [sp, #24]
  475fc8:	ldr	x1, [x0, #48]
  475fcc:	ldr	x0, [sp, #56]
  475fd0:	add	x4, x1, x0
  475fd4:	ldr	x0, [sp, #24]
  475fd8:	ldr	x1, [x0, #56]
  475fdc:	ldr	x0, [sp, #24]
  475fe0:	ldr	x0, [x0, #48]
  475fe4:	sub	x0, x1, x0
  475fe8:	mov	x2, x0
  475fec:	mov	x1, x4
  475ff0:	mov	x0, x3
  475ff4:	bl	404030 <memmove@plt>
  475ff8:	mov	w0, #0x0                   	// #0
  475ffc:	b	4760a4 <_obstack_memory_used@@Base+0x18f64>
  476000:	ldr	x0, [sp, #24]
  476004:	ldr	x1, [x0, #64]
  476008:	ldr	x0, [sp, #24]
  47600c:	ldr	x0, [x0, #48]
  476010:	sub	x0, x1, x0
  476014:	str	x0, [sp, #48]
  476018:	ldr	x1, [sp, #48]
  47601c:	ldr	x0, [sp, #16]
  476020:	add	x0, x1, x0
  476024:	str	x0, [sp, #40]
  476028:	ldr	x1, [sp, #40]
  47602c:	ldr	x0, [sp, #48]
  476030:	cmp	x1, x0
  476034:	b.cc	476058 <_obstack_memory_used@@Base+0x18f18>  // b.lo, b.ul, b.last
  476038:	ldr	x0, [sp, #24]
  47603c:	ldr	x0, [x0, #48]
  476040:	ldr	x1, [sp, #40]
  476044:	bl	4045e0 <realloc@plt>
  476048:	str	x0, [sp, #32]
  47604c:	ldr	x0, [sp, #32]
  476050:	cmp	x0, #0x0
  476054:	b.ne	476070 <_obstack_memory_used@@Base+0x18f30>  // b.any
  476058:	bl	404bc0 <__errno_location@plt>
  47605c:	mov	x1, x0
  476060:	mov	w0, #0xc                   	// #12
  476064:	str	w0, [x1]
  476068:	mov	w0, #0x0                   	// #0
  47606c:	b	4760a4 <_obstack_memory_used@@Base+0x18f64>
  476070:	ldr	x0, [sp, #24]
  476074:	ldr	x1, [sp, #32]
  476078:	str	x1, [x0, #48]
  47607c:	ldr	x1, [sp, #32]
  476080:	ldr	x0, [sp, #40]
  476084:	add	x1, x1, x0
  476088:	ldr	x0, [sp, #24]
  47608c:	str	x1, [x0, #64]
  476090:	ldr	x0, [sp, #24]
  476094:	ldr	x1, [x0, #48]
  476098:	ldr	x0, [sp, #24]
  47609c:	str	x1, [x0, #56]
  4760a0:	mov	w0, #0x1                   	// #1
  4760a4:	ldp	x29, x30, [sp], #64
  4760a8:	ret
  4760ac:	stp	x29, x30, [sp, #-304]!
  4760b0:	mov	x29, sp
  4760b4:	str	x0, [sp, #56]
  4760b8:	str	x1, [sp, #48]
  4760bc:	str	x2, [sp, #256]
  4760c0:	str	x3, [sp, #264]
  4760c4:	str	x4, [sp, #272]
  4760c8:	str	x5, [sp, #280]
  4760cc:	str	x6, [sp, #288]
  4760d0:	str	x7, [sp, #296]
  4760d4:	str	q0, [sp, #128]
  4760d8:	str	q1, [sp, #144]
  4760dc:	str	q2, [sp, #160]
  4760e0:	str	q3, [sp, #176]
  4760e4:	str	q4, [sp, #192]
  4760e8:	str	q5, [sp, #208]
  4760ec:	str	q6, [sp, #224]
  4760f0:	str	q7, [sp, #240]
  4760f4:	mov	x0, #0x96                  	// #150
  4760f8:	str	x0, [sp, #120]
  4760fc:	ldr	x1, [sp, #120]
  476100:	ldr	x0, [sp, #56]
  476104:	bl	475eac <_obstack_memory_used@@Base+0x18d6c>
  476108:	cmp	w0, #0x0
  47610c:	b.ne	476118 <_obstack_memory_used@@Base+0x18fd8>  // b.any
  476110:	mov	x0, #0xffffffffffffffff    	// #-1
  476114:	b	4761e0 <_obstack_memory_used@@Base+0x190a0>
  476118:	add	x0, sp, #0x130
  47611c:	str	x0, [sp, #72]
  476120:	add	x0, sp, #0x130
  476124:	str	x0, [sp, #80]
  476128:	add	x0, sp, #0x100
  47612c:	str	x0, [sp, #88]
  476130:	mov	w0, #0xffffffd0            	// #-48
  476134:	str	w0, [sp, #96]
  476138:	mov	w0, #0xffffff80            	// #-128
  47613c:	str	w0, [sp, #100]
  476140:	ldr	x0, [sp, #56]
  476144:	ldr	x1, [x0, #64]
  476148:	ldr	x0, [sp, #56]
  47614c:	ldr	x0, [x0, #56]
  476150:	sub	x0, x1, x0
  476154:	str	x0, [sp, #112]
  476158:	ldr	x0, [sp, #56]
  47615c:	ldr	x4, [x0, #56]
  476160:	add	x2, sp, #0x10
  476164:	add	x3, sp, #0x48
  476168:	ldp	x0, x1, [x3]
  47616c:	stp	x0, x1, [x2]
  476170:	ldp	x0, x1, [x3, #16]
  476174:	stp	x0, x1, [x2, #16]
  476178:	add	x0, sp, #0x10
  47617c:	mov	x3, x0
  476180:	ldr	x2, [sp, #48]
  476184:	ldr	x1, [sp, #112]
  476188:	mov	x0, x4
  47618c:	bl	404a90 <vsnprintf@plt>
  476190:	str	w0, [sp, #108]
  476194:	ldrsw	x0, [sp, #108]
  476198:	ldr	x1, [sp, #112]
  47619c:	cmp	x1, x0
  4761a0:	b.hi	4761b4 <_obstack_memory_used@@Base+0x19074>  // b.pmore
  4761a4:	ldr	w0, [sp, #108]
  4761a8:	add	w0, w0, #0x1
  4761ac:	sxtw	x0, w0
  4761b0:	str	x0, [sp, #120]
  4761b4:	ldrsw	x0, [sp, #108]
  4761b8:	ldr	x1, [sp, #112]
  4761bc:	cmp	x1, x0
  4761c0:	b.ls	4760fc <_obstack_memory_used@@Base+0x18fbc>  // b.plast
  4761c4:	ldr	x0, [sp, #56]
  4761c8:	ldr	x1, [x0, #56]
  4761cc:	ldrsw	x0, [sp, #108]
  4761d0:	add	x1, x1, x0
  4761d4:	ldr	x0, [sp, #56]
  4761d8:	str	x1, [x0, #56]
  4761dc:	ldrsw	x0, [sp, #108]
  4761e0:	ldp	x29, x30, [sp], #304
  4761e4:	ret
  4761e8:	stp	x29, x30, [sp, #-48]!
  4761ec:	mov	x29, sp
  4761f0:	str	x0, [sp, #40]
  4761f4:	str	x1, [sp, #32]
  4761f8:	str	x2, [sp, #24]
  4761fc:	ldr	x0, [sp, #40]
  476200:	ldr	x1, [x0, #56]
  476204:	ldr	x0, [sp, #24]
  476208:	add	x1, x1, x0
  47620c:	ldr	x0, [sp, #40]
  476210:	ldr	x0, [x0, #64]
  476214:	cmp	x1, x0
  476218:	b.ls	476230 <_obstack_memory_used@@Base+0x190f0>  // b.plast
  47621c:	ldr	x1, [sp, #24]
  476220:	ldr	x0, [sp, #40]
  476224:	bl	475eac <_obstack_memory_used@@Base+0x18d6c>
  476228:	cmp	w0, #0x0
  47622c:	b.eq	476264 <_obstack_memory_used@@Base+0x19124>  // b.none
  476230:	ldr	x0, [sp, #40]
  476234:	ldr	x0, [x0, #56]
  476238:	ldr	x2, [sp, #24]
  47623c:	ldr	x1, [sp, #32]
  476240:	bl	404020 <memcpy@plt>
  476244:	ldr	x0, [sp, #40]
  476248:	ldr	x1, [x0, #56]
  47624c:	ldr	x0, [sp, #24]
  476250:	add	x1, x1, x0
  476254:	ldr	x0, [sp, #40]
  476258:	str	x1, [x0, #56]
  47625c:	ldr	x0, [sp, #24]
  476260:	b	476268 <_obstack_memory_used@@Base+0x19128>
  476264:	mov	x0, #0x0                   	// #0
  476268:	ldp	x29, x30, [sp], #48
  47626c:	ret
  476270:	stp	x29, x30, [sp, #-48]!
  476274:	mov	x29, sp
  476278:	str	x0, [sp, #24]
  47627c:	str	x1, [sp, #16]
  476280:	ldr	x0, [sp, #16]
  476284:	bl	4040b0 <strlen@plt>
  476288:	str	x0, [sp, #40]
  47628c:	ldr	x0, [sp, #40]
  476290:	cmp	x0, #0x0
  476294:	b.eq	4762cc <_obstack_memory_used@@Base+0x1918c>  // b.none
  476298:	ldr	x2, [sp, #40]
  47629c:	ldr	x1, [sp, #16]
  4762a0:	ldr	x0, [sp, #24]
  4762a4:	bl	4761e8 <_obstack_memory_used@@Base+0x190a8>
  4762a8:	str	x0, [sp, #32]
  4762ac:	ldr	x1, [sp, #32]
  4762b0:	ldr	x0, [sp, #40]
  4762b4:	cmp	x1, x0
  4762b8:	b.ne	4762c4 <_obstack_memory_used@@Base+0x19184>  // b.any
  4762bc:	mov	w0, #0x0                   	// #0
  4762c0:	b	4762d0 <_obstack_memory_used@@Base+0x19190>
  4762c4:	mov	w0, #0xffffffff            	// #-1
  4762c8:	b	4762d0 <_obstack_memory_used@@Base+0x19190>
  4762cc:	mov	w0, #0x0                   	// #0
  4762d0:	ldp	x29, x30, [sp], #48
  4762d4:	ret
  4762d8:	stp	x29, x30, [sp, #-32]!
  4762dc:	mov	x29, sp
  4762e0:	str	x0, [sp, #24]
  4762e4:	str	w1, [sp, #20]
  4762e8:	ldr	x0, [sp, #24]
  4762ec:	ldr	x1, [x0, #56]
  4762f0:	ldr	x0, [sp, #24]
  4762f4:	ldr	x0, [x0, #64]
  4762f8:	cmp	x1, x0
  4762fc:	b.cc	476314 <_obstack_memory_used@@Base+0x191d4>  // b.lo, b.ul, b.last
  476300:	mov	x1, #0x1                   	// #1
  476304:	ldr	x0, [sp, #24]
  476308:	bl	475eac <_obstack_memory_used@@Base+0x18d6c>
  47630c:	cmp	w0, #0x0
  476310:	b.eq	47633c <_obstack_memory_used@@Base+0x191fc>  // b.none
  476314:	ldr	x0, [sp, #24]
  476318:	ldr	x0, [x0, #56]
  47631c:	add	x2, x0, #0x1
  476320:	ldr	x1, [sp, #24]
  476324:	str	x2, [x1, #56]
  476328:	ldr	w1, [sp, #20]
  47632c:	and	w1, w1, #0xff
  476330:	strb	w1, [x0]
  476334:	ldrb	w0, [x0]
  476338:	b	476340 <_obstack_memory_used@@Base+0x19200>
  47633c:	mov	w0, #0xffffffff            	// #-1
  476340:	ldp	x29, x30, [sp], #32
  476344:	ret
  476348:	stp	x29, x30, [sp, #-48]!
  47634c:	mov	x29, sp
  476350:	str	x0, [sp, #24]
  476354:	str	x1, [sp, #16]
  476358:	ldr	x0, [sp, #24]
  47635c:	ldr	x1, [x0, #56]
  476360:	ldr	x0, [sp, #24]
  476364:	ldr	x0, [x0, #48]
  476368:	sub	x0, x1, x0
  47636c:	mov	x1, x0
  476370:	ldr	x0, [sp, #24]
  476374:	ldr	x0, [x0, #32]
  476378:	cmp	x1, x0
  47637c:	b.ls	476388 <_obstack_memory_used@@Base+0x19248>  // b.plast
  476380:	ldr	x0, [sp, #24]
  476384:	bl	475644 <_obstack_memory_used@@Base+0x18504>
  476388:	ldr	x0, [sp, #24]
  47638c:	ldr	x0, [x0, #8]
  476390:	str	x0, [sp, #40]
  476394:	ldr	x0, [sp, #24]
  476398:	ldr	x1, [sp, #16]
  47639c:	str	x1, [x0, #8]
  4763a0:	ldr	x0, [sp, #40]
  4763a4:	ldp	x29, x30, [sp], #48
  4763a8:	ret
  4763ac:	stp	x29, x30, [sp, #-48]!
  4763b0:	mov	x29, sp
  4763b4:	str	x0, [sp, #24]
  4763b8:	str	x1, [sp, #16]
  4763bc:	ldr	x0, [sp, #24]
  4763c0:	ldr	x1, [x0, #56]
  4763c4:	ldr	x0, [sp, #24]
  4763c8:	ldr	x0, [x0, #48]
  4763cc:	sub	x0, x1, x0
  4763d0:	mov	x1, x0
  4763d4:	ldr	x0, [sp, #24]
  4763d8:	ldr	x0, [x0, #32]
  4763dc:	cmp	x1, x0
  4763e0:	b.ls	4763ec <_obstack_memory_used@@Base+0x192ac>  // b.plast
  4763e4:	ldr	x0, [sp, #24]
  4763e8:	bl	475644 <_obstack_memory_used@@Base+0x18504>
  4763ec:	ldr	x0, [sp, #24]
  4763f0:	ldr	x0, [x0, #16]
  4763f4:	str	x0, [sp, #40]
  4763f8:	ldr	x0, [sp, #24]
  4763fc:	ldr	x1, [sp, #16]
  476400:	str	x1, [x0, #16]
  476404:	ldr	x0, [sp, #40]
  476408:	ldp	x29, x30, [sp], #48
  47640c:	ret
  476410:	stp	x29, x30, [sp, #-48]!
  476414:	mov	x29, sp
  476418:	str	x0, [sp, #24]
  47641c:	str	x1, [sp, #16]
  476420:	ldr	x0, [sp, #24]
  476424:	ldr	x1, [x0, #56]
  476428:	ldr	x0, [sp, #24]
  47642c:	ldr	x0, [x0, #48]
  476430:	sub	x0, x1, x0
  476434:	mov	x1, x0
  476438:	ldr	x0, [sp, #24]
  47643c:	ldr	x0, [x0, #32]
  476440:	cmp	x1, x0
  476444:	b.ls	476450 <_obstack_memory_used@@Base+0x19310>  // b.plast
  476448:	ldr	x0, [sp, #24]
  47644c:	bl	475644 <_obstack_memory_used@@Base+0x18504>
  476450:	ldr	x0, [sp, #24]
  476454:	ldr	x0, [x0, #24]
  476458:	str	x0, [sp, #40]
  47645c:	ldr	x1, [sp, #16]
  476460:	ldr	x0, [sp, #24]
  476464:	str	x1, [x0, #24]
  476468:	ldr	x0, [sp, #40]
  47646c:	ldp	x29, x30, [sp], #48
  476470:	ret
  476474:	stp	x29, x30, [sp, #-32]!
  476478:	mov	x29, sp
  47647c:	str	x0, [sp, #24]
  476480:	ldr	x0, [sp, #24]
  476484:	ldr	x1, [x0, #56]
  476488:	ldr	x0, [sp, #24]
  47648c:	ldr	x0, [x0, #48]
  476490:	sub	x0, x1, x0
  476494:	mov	x1, x0
  476498:	ldr	x0, [sp, #24]
  47649c:	ldr	x0, [x0, #32]
  4764a0:	cmp	x1, x0
  4764a4:	b.ls	4764b0 <_obstack_memory_used@@Base+0x19370>  // b.plast
  4764a8:	ldr	x0, [sp, #24]
  4764ac:	bl	475644 <_obstack_memory_used@@Base+0x18504>
  4764b0:	ldr	x0, [sp, #24]
  4764b4:	ldr	x0, [x0, #40]
  4764b8:	mov	x1, #0x0                   	// #0
  4764bc:	cmp	x0, #0x0
  4764c0:	csel	x0, x0, x1, ge  // ge = tcont
  4764c4:	ldp	x29, x30, [sp], #32
  4764c8:	ret
  4764cc:	sub	sp, sp, #0x10
  4764d0:	str	x0, [sp, #8]
  4764d4:	str	w1, [sp, #4]
  4764d8:	ldr	w0, [sp, #4]
  4764dc:	ldr	x1, [sp, #8]
  4764e0:	neg	w0, w0
  4764e4:	ror	x0, x1, x0
  4764e8:	add	sp, sp, #0x10
  4764ec:	ret
  4764f0:	sub	sp, sp, #0x10
  4764f4:	str	x0, [sp, #8]
  4764f8:	str	w1, [sp, #4]
  4764fc:	ldr	w0, [sp, #4]
  476500:	ldr	x1, [sp, #8]
  476504:	ror	x0, x1, x0
  476508:	add	sp, sp, #0x10
  47650c:	ret
  476510:	sub	sp, sp, #0x10
  476514:	str	w0, [sp, #12]
  476518:	str	w1, [sp, #8]
  47651c:	ldr	w0, [sp, #8]
  476520:	ldr	w1, [sp, #12]
  476524:	neg	w0, w0
  476528:	ror	w0, w1, w0
  47652c:	add	sp, sp, #0x10
  476530:	ret
  476534:	sub	sp, sp, #0x10
  476538:	str	w0, [sp, #12]
  47653c:	str	w1, [sp, #8]
  476540:	ldr	w0, [sp, #8]
  476544:	ldr	w1, [sp, #12]
  476548:	ror	w0, w1, w0
  47654c:	add	sp, sp, #0x10
  476550:	ret
  476554:	sub	sp, sp, #0x10
  476558:	str	x0, [sp, #8]
  47655c:	str	w1, [sp, #4]
  476560:	ldr	w0, [sp, #4]
  476564:	ldr	x1, [sp, #8]
  476568:	lsl	x1, x1, x0
  47656c:	ldr	w0, [sp, #4]
  476570:	mov	w2, #0x40                  	// #64
  476574:	sub	w0, w2, w0
  476578:	ldr	x2, [sp, #8]
  47657c:	lsr	x0, x2, x0
  476580:	orr	x0, x1, x0
  476584:	add	sp, sp, #0x10
  476588:	ret
  47658c:	sub	sp, sp, #0x10
  476590:	str	x0, [sp, #8]
  476594:	str	w1, [sp, #4]
  476598:	ldr	w0, [sp, #4]
  47659c:	ldr	x1, [sp, #8]
  4765a0:	lsr	x1, x1, x0
  4765a4:	ldr	w0, [sp, #4]
  4765a8:	mov	w2, #0x40                  	// #64
  4765ac:	sub	w0, w2, w0
  4765b0:	ldr	x2, [sp, #8]
  4765b4:	lsl	x0, x2, x0
  4765b8:	orr	x0, x1, x0
  4765bc:	add	sp, sp, #0x10
  4765c0:	ret
  4765c4:	sub	sp, sp, #0x10
  4765c8:	strh	w0, [sp, #14]
  4765cc:	str	w1, [sp, #8]
  4765d0:	ldrh	w1, [sp, #14]
  4765d4:	ldr	w0, [sp, #8]
  4765d8:	lsl	w0, w1, w0
  4765dc:	sxth	w1, w0
  4765e0:	ldrh	w2, [sp, #14]
  4765e4:	mov	w3, #0x10                  	// #16
  4765e8:	ldr	w0, [sp, #8]
  4765ec:	sub	w0, w3, w0
  4765f0:	asr	w0, w2, w0
  4765f4:	sxth	w0, w0
  4765f8:	orr	w0, w1, w0
  4765fc:	sxth	w0, w0
  476600:	and	w0, w0, #0xffff
  476604:	add	sp, sp, #0x10
  476608:	ret
  47660c:	sub	sp, sp, #0x10
  476610:	strh	w0, [sp, #14]
  476614:	str	w1, [sp, #8]
  476618:	ldrh	w1, [sp, #14]
  47661c:	ldr	w0, [sp, #8]
  476620:	asr	w0, w1, w0
  476624:	sxth	w1, w0
  476628:	ldrh	w2, [sp, #14]
  47662c:	mov	w3, #0x10                  	// #16
  476630:	ldr	w0, [sp, #8]
  476634:	sub	w0, w3, w0
  476638:	lsl	w0, w2, w0
  47663c:	sxth	w0, w0
  476640:	orr	w0, w1, w0
  476644:	sxth	w0, w0
  476648:	and	w0, w0, #0xffff
  47664c:	add	sp, sp, #0x10
  476650:	ret
  476654:	sub	sp, sp, #0x10
  476658:	strb	w0, [sp, #15]
  47665c:	str	w1, [sp, #8]
  476660:	ldrb	w1, [sp, #15]
  476664:	ldr	w0, [sp, #8]
  476668:	lsl	w0, w1, w0
  47666c:	sxtb	w1, w0
  476670:	ldrb	w2, [sp, #15]
  476674:	mov	w3, #0x8                   	// #8
  476678:	ldr	w0, [sp, #8]
  47667c:	sub	w0, w3, w0
  476680:	asr	w0, w2, w0
  476684:	sxtb	w0, w0
  476688:	orr	w0, w1, w0
  47668c:	sxtb	w0, w0
  476690:	and	w0, w0, #0xff
  476694:	add	sp, sp, #0x10
  476698:	ret
  47669c:	sub	sp, sp, #0x10
  4766a0:	strb	w0, [sp, #15]
  4766a4:	str	w1, [sp, #8]
  4766a8:	ldrb	w1, [sp, #15]
  4766ac:	ldr	w0, [sp, #8]
  4766b0:	asr	w0, w1, w0
  4766b4:	sxtb	w1, w0
  4766b8:	ldrb	w2, [sp, #15]
  4766bc:	mov	w3, #0x8                   	// #8
  4766c0:	ldr	w0, [sp, #8]
  4766c4:	sub	w0, w3, w0
  4766c8:	lsl	w0, w2, w0
  4766cc:	sxtb	w0, w0
  4766d0:	orr	w0, w1, w0
  4766d4:	sxtb	w0, w0
  4766d8:	and	w0, w0, #0xff
  4766dc:	add	sp, sp, #0x10
  4766e0:	ret
  4766e4:	sub	sp, sp, #0x10
  4766e8:	str	w0, [sp, #12]
  4766ec:	ldr	w0, [sp, #12]
  4766f0:	cmp	w0, #0x7a
  4766f4:	b.gt	476738 <_obstack_memory_used@@Base+0x195f8>
  4766f8:	ldr	w0, [sp, #12]
  4766fc:	cmp	w0, #0x61
  476700:	b.ge	476730 <_obstack_memory_used@@Base+0x195f0>  // b.tcont
  476704:	ldr	w0, [sp, #12]
  476708:	cmp	w0, #0x39
  47670c:	b.gt	476720 <_obstack_memory_used@@Base+0x195e0>
  476710:	ldr	w0, [sp, #12]
  476714:	cmp	w0, #0x30
  476718:	b.ge	476730 <_obstack_memory_used@@Base+0x195f0>  // b.tcont
  47671c:	b	476738 <_obstack_memory_used@@Base+0x195f8>
  476720:	ldr	w0, [sp, #12]
  476724:	sub	w0, w0, #0x41
  476728:	cmp	w0, #0x19
  47672c:	b.hi	476738 <_obstack_memory_used@@Base+0x195f8>  // b.pmore
  476730:	mov	w0, #0x1                   	// #1
  476734:	b	47673c <_obstack_memory_used@@Base+0x195fc>
  476738:	mov	w0, #0x0                   	// #0
  47673c:	add	sp, sp, #0x10
  476740:	ret
  476744:	sub	sp, sp, #0x10
  476748:	str	w0, [sp, #12]
  47674c:	ldr	w0, [sp, #12]
  476750:	cmp	w0, #0x5a
  476754:	b.gt	476768 <_obstack_memory_used@@Base+0x19628>
  476758:	ldr	w0, [sp, #12]
  47675c:	cmp	w0, #0x41
  476760:	b.ge	476778 <_obstack_memory_used@@Base+0x19638>  // b.tcont
  476764:	b	476780 <_obstack_memory_used@@Base+0x19640>
  476768:	ldr	w0, [sp, #12]
  47676c:	sub	w0, w0, #0x61
  476770:	cmp	w0, #0x19
  476774:	b.hi	476780 <_obstack_memory_used@@Base+0x19640>  // b.pmore
  476778:	mov	w0, #0x1                   	// #1
  47677c:	b	476784 <_obstack_memory_used@@Base+0x19644>
  476780:	mov	w0, #0x0                   	// #0
  476784:	add	sp, sp, #0x10
  476788:	ret
  47678c:	sub	sp, sp, #0x10
  476790:	str	w0, [sp, #12]
  476794:	ldr	w0, [sp, #12]
  476798:	cmp	w0, #0x7f
  47679c:	b.hi	4767a8 <_obstack_memory_used@@Base+0x19668>  // b.pmore
  4767a0:	mov	w0, #0x1                   	// #1
  4767a4:	b	4767ac <_obstack_memory_used@@Base+0x1966c>
  4767a8:	mov	w0, #0x0                   	// #0
  4767ac:	add	sp, sp, #0x10
  4767b0:	ret
  4767b4:	sub	sp, sp, #0x10
  4767b8:	str	w0, [sp, #12]
  4767bc:	ldr	w0, [sp, #12]
  4767c0:	cmp	w0, #0x20
  4767c4:	b.eq	4767d4 <_obstack_memory_used@@Base+0x19694>  // b.none
  4767c8:	ldr	w0, [sp, #12]
  4767cc:	cmp	w0, #0x9
  4767d0:	b.ne	4767dc <_obstack_memory_used@@Base+0x1969c>  // b.any
  4767d4:	mov	w0, #0x1                   	// #1
  4767d8:	b	4767e0 <_obstack_memory_used@@Base+0x196a0>
  4767dc:	mov	w0, #0x0                   	// #0
  4767e0:	and	w0, w0, #0x1
  4767e4:	and	w0, w0, #0xff
  4767e8:	add	sp, sp, #0x10
  4767ec:	ret
  4767f0:	sub	sp, sp, #0x10
  4767f4:	str	w0, [sp, #12]
  4767f8:	ldr	w0, [sp, #12]
  4767fc:	cmp	w0, #0x1f
  476800:	b.gt	476814 <_obstack_memory_used@@Base+0x196d4>
  476804:	ldr	w0, [sp, #12]
  476808:	cmp	w0, #0x0
  47680c:	b.ge	476820 <_obstack_memory_used@@Base+0x196e0>  // b.tcont
  476810:	b	476828 <_obstack_memory_used@@Base+0x196e8>
  476814:	ldr	w0, [sp, #12]
  476818:	cmp	w0, #0x7f
  47681c:	b.ne	476828 <_obstack_memory_used@@Base+0x196e8>  // b.any
  476820:	mov	w0, #0x1                   	// #1
  476824:	b	47682c <_obstack_memory_used@@Base+0x196ec>
  476828:	mov	w0, #0x0                   	// #0
  47682c:	add	sp, sp, #0x10
  476830:	ret
  476834:	sub	sp, sp, #0x10
  476838:	str	w0, [sp, #12]
  47683c:	ldr	w0, [sp, #12]
  476840:	sub	w0, w0, #0x30
  476844:	cmp	w0, #0x9
  476848:	b.hi	476854 <_obstack_memory_used@@Base+0x19714>  // b.pmore
  47684c:	mov	w0, #0x1                   	// #1
  476850:	b	476858 <_obstack_memory_used@@Base+0x19718>
  476854:	mov	w0, #0x0                   	// #0
  476858:	add	sp, sp, #0x10
  47685c:	ret
  476860:	sub	sp, sp, #0x10
  476864:	str	w0, [sp, #12]
  476868:	ldr	w0, [sp, #12]
  47686c:	sub	w0, w0, #0x21
  476870:	cmp	w0, #0x5d
  476874:	b.hi	476880 <_obstack_memory_used@@Base+0x19740>  // b.pmore
  476878:	mov	w0, #0x1                   	// #1
  47687c:	b	476884 <_obstack_memory_used@@Base+0x19744>
  476880:	mov	w0, #0x0                   	// #0
  476884:	add	sp, sp, #0x10
  476888:	ret
  47688c:	sub	sp, sp, #0x10
  476890:	str	w0, [sp, #12]
  476894:	ldr	w0, [sp, #12]
  476898:	sub	w0, w0, #0x61
  47689c:	cmp	w0, #0x19
  4768a0:	b.hi	4768ac <_obstack_memory_used@@Base+0x1976c>  // b.pmore
  4768a4:	mov	w0, #0x1                   	// #1
  4768a8:	b	4768b0 <_obstack_memory_used@@Base+0x19770>
  4768ac:	mov	w0, #0x0                   	// #0
  4768b0:	add	sp, sp, #0x10
  4768b4:	ret
  4768b8:	sub	sp, sp, #0x10
  4768bc:	str	w0, [sp, #12]
  4768c0:	ldr	w0, [sp, #12]
  4768c4:	sub	w0, w0, #0x20
  4768c8:	cmp	w0, #0x5e
  4768cc:	b.hi	4768d8 <_obstack_memory_used@@Base+0x19798>  // b.pmore
  4768d0:	mov	w0, #0x1                   	// #1
  4768d4:	b	4768dc <_obstack_memory_used@@Base+0x1979c>
  4768d8:	mov	w0, #0x0                   	// #0
  4768dc:	add	sp, sp, #0x10
  4768e0:	ret
  4768e4:	sub	sp, sp, #0x10
  4768e8:	str	w0, [sp, #12]
  4768ec:	ldr	w0, [sp, #12]
  4768f0:	cmp	w0, #0x7e
  4768f4:	b.gt	476950 <_obstack_memory_used@@Base+0x19810>
  4768f8:	ldr	w0, [sp, #12]
  4768fc:	cmp	w0, #0x7b
  476900:	b.ge	476948 <_obstack_memory_used@@Base+0x19808>  // b.tcont
  476904:	ldr	w0, [sp, #12]
  476908:	cmp	w0, #0x60
  47690c:	b.gt	476950 <_obstack_memory_used@@Base+0x19810>
  476910:	ldr	w0, [sp, #12]
  476914:	cmp	w0, #0x5b
  476918:	b.ge	476948 <_obstack_memory_used@@Base+0x19808>  // b.tcont
  47691c:	ldr	w0, [sp, #12]
  476920:	cmp	w0, #0x2f
  476924:	b.gt	476938 <_obstack_memory_used@@Base+0x197f8>
  476928:	ldr	w0, [sp, #12]
  47692c:	cmp	w0, #0x21
  476930:	b.ge	476948 <_obstack_memory_used@@Base+0x19808>  // b.tcont
  476934:	b	476950 <_obstack_memory_used@@Base+0x19810>
  476938:	ldr	w0, [sp, #12]
  47693c:	sub	w0, w0, #0x3a
  476940:	cmp	w0, #0x6
  476944:	b.hi	476950 <_obstack_memory_used@@Base+0x19810>  // b.pmore
  476948:	mov	w0, #0x1                   	// #1
  47694c:	b	476954 <_obstack_memory_used@@Base+0x19814>
  476950:	mov	w0, #0x0                   	// #0
  476954:	add	sp, sp, #0x10
  476958:	ret
  47695c:	sub	sp, sp, #0x10
  476960:	str	w0, [sp, #12]
  476964:	ldr	w0, [sp, #12]
  476968:	cmp	w0, #0xd
  47696c:	b.gt	476980 <_obstack_memory_used@@Base+0x19840>
  476970:	ldr	w0, [sp, #12]
  476974:	cmp	w0, #0x9
  476978:	b.ge	47698c <_obstack_memory_used@@Base+0x1984c>  // b.tcont
  47697c:	b	476994 <_obstack_memory_used@@Base+0x19854>
  476980:	ldr	w0, [sp, #12]
  476984:	cmp	w0, #0x20
  476988:	b.ne	476994 <_obstack_memory_used@@Base+0x19854>  // b.any
  47698c:	mov	w0, #0x1                   	// #1
  476990:	b	476998 <_obstack_memory_used@@Base+0x19858>
  476994:	mov	w0, #0x0                   	// #0
  476998:	add	sp, sp, #0x10
  47699c:	ret
  4769a0:	sub	sp, sp, #0x10
  4769a4:	str	w0, [sp, #12]
  4769a8:	ldr	w0, [sp, #12]
  4769ac:	sub	w0, w0, #0x41
  4769b0:	cmp	w0, #0x19
  4769b4:	b.hi	4769c0 <_obstack_memory_used@@Base+0x19880>  // b.pmore
  4769b8:	mov	w0, #0x1                   	// #1
  4769bc:	b	4769c4 <_obstack_memory_used@@Base+0x19884>
  4769c0:	mov	w0, #0x0                   	// #0
  4769c4:	add	sp, sp, #0x10
  4769c8:	ret
  4769cc:	sub	sp, sp, #0x10
  4769d0:	str	w0, [sp, #12]
  4769d4:	ldr	w0, [sp, #12]
  4769d8:	sub	w0, w0, #0x30
  4769dc:	cmp	w0, #0x36
  4769e0:	cset	w1, hi  // hi = pmore
  4769e4:	and	w1, w1, #0xff
  4769e8:	cmp	w1, #0x0
  4769ec:	b.ne	476a20 <_obstack_memory_used@@Base+0x198e0>  // b.any
  4769f0:	mov	x1, #0x1                   	// #1
  4769f4:	lsl	x1, x1, x0
  4769f8:	mov	x0, #0x7e0000007e0000      	// #35465847073800192
  4769fc:	movk	x0, #0x3ff
  476a00:	and	x0, x1, x0
  476a04:	cmp	x0, #0x0
  476a08:	cset	w0, ne  // ne = any
  476a0c:	and	w0, w0, #0xff
  476a10:	cmp	w0, #0x0
  476a14:	b.eq	476a20 <_obstack_memory_used@@Base+0x198e0>  // b.none
  476a18:	mov	w0, #0x1                   	// #1
  476a1c:	b	476a24 <_obstack_memory_used@@Base+0x198e4>
  476a20:	mov	w0, #0x0                   	// #0
  476a24:	add	sp, sp, #0x10
  476a28:	ret
  476a2c:	sub	sp, sp, #0x10
  476a30:	str	w0, [sp, #12]
  476a34:	ldr	w0, [sp, #12]
  476a38:	sub	w0, w0, #0x41
  476a3c:	cmp	w0, #0x19
  476a40:	b.hi	476a50 <_obstack_memory_used@@Base+0x19910>  // b.pmore
  476a44:	ldr	w0, [sp, #12]
  476a48:	add	w0, w0, #0x20
  476a4c:	b	476a54 <_obstack_memory_used@@Base+0x19914>
  476a50:	ldr	w0, [sp, #12]
  476a54:	add	sp, sp, #0x10
  476a58:	ret
  476a5c:	sub	sp, sp, #0x10
  476a60:	str	w0, [sp, #12]
  476a64:	ldr	w0, [sp, #12]
  476a68:	sub	w0, w0, #0x61
  476a6c:	cmp	w0, #0x19
  476a70:	b.hi	476a80 <_obstack_memory_used@@Base+0x19940>  // b.pmore
  476a74:	ldr	w0, [sp, #12]
  476a78:	sub	w0, w0, #0x20
  476a7c:	b	476a84 <_obstack_memory_used@@Base+0x19944>
  476a80:	ldr	w0, [sp, #12]
  476a84:	add	sp, sp, #0x10
  476a88:	ret
  476a8c:	stp	x29, x30, [sp, #-64]!
  476a90:	mov	x29, sp
  476a94:	stp	x19, x20, [sp, #16]
  476a98:	str	x0, [sp, #40]
  476a9c:	str	x1, [sp, #32]
  476aa0:	ldr	x20, [sp, #40]
  476aa4:	ldr	x19, [sp, #32]
  476aa8:	cmp	x20, x19
  476aac:	b.ne	476ab8 <_obstack_memory_used@@Base+0x19978>  // b.any
  476ab0:	mov	w0, #0x0                   	// #0
  476ab4:	b	476b08 <_obstack_memory_used@@Base+0x199c8>
  476ab8:	ldrb	w0, [x20]
  476abc:	bl	476a2c <_obstack_memory_used@@Base+0x198ec>
  476ac0:	strb	w0, [sp, #63]
  476ac4:	ldrb	w0, [x19]
  476ac8:	bl	476a2c <_obstack_memory_used@@Base+0x198ec>
  476acc:	strb	w0, [sp, #62]
  476ad0:	ldrb	w0, [sp, #63]
  476ad4:	cmp	w0, #0x0
  476ad8:	b.eq	476af8 <_obstack_memory_used@@Base+0x199b8>  // b.none
  476adc:	add	x20, x20, #0x1
  476ae0:	add	x19, x19, #0x1
  476ae4:	ldrb	w1, [sp, #63]
  476ae8:	ldrb	w0, [sp, #62]
  476aec:	cmp	w1, w0
  476af0:	b.eq	476ab8 <_obstack_memory_used@@Base+0x19978>  // b.none
  476af4:	b	476afc <_obstack_memory_used@@Base+0x199bc>
  476af8:	nop
  476afc:	ldrb	w1, [sp, #63]
  476b00:	ldrb	w0, [sp, #62]
  476b04:	sub	w0, w1, w0
  476b08:	ldp	x19, x20, [sp, #16]
  476b0c:	ldp	x29, x30, [sp], #64
  476b10:	ret
  476b14:	stp	x29, x30, [sp, #-48]!
  476b18:	mov	x29, sp
  476b1c:	str	x0, [sp, #24]
  476b20:	ldr	x0, [sp, #24]
  476b24:	bl	4042c0 <__fpending@plt>
  476b28:	cmp	x0, #0x0
  476b2c:	cset	w0, ne  // ne = any
  476b30:	strb	w0, [sp, #47]
  476b34:	ldr	x0, [sp, #24]
  476b38:	bl	4041e0 <ferror_unlocked@plt>
  476b3c:	cmp	w0, #0x0
  476b40:	cset	w0, ne  // ne = any
  476b44:	strb	w0, [sp, #46]
  476b48:	ldr	x0, [sp, #24]
  476b4c:	bl	404380 <fclose@plt>
  476b50:	cmp	w0, #0x0
  476b54:	cset	w0, ne  // ne = any
  476b58:	strb	w0, [sp, #45]
  476b5c:	ldrb	w0, [sp, #46]
  476b60:	cmp	w0, #0x0
  476b64:	b.ne	476b90 <_obstack_memory_used@@Base+0x19a50>  // b.any
  476b68:	ldrb	w0, [sp, #45]
  476b6c:	cmp	w0, #0x0
  476b70:	b.eq	476bb4 <_obstack_memory_used@@Base+0x19a74>  // b.none
  476b74:	ldrb	w0, [sp, #47]
  476b78:	cmp	w0, #0x0
  476b7c:	b.ne	476b90 <_obstack_memory_used@@Base+0x19a50>  // b.any
  476b80:	bl	404bc0 <__errno_location@plt>
  476b84:	ldr	w0, [x0]
  476b88:	cmp	w0, #0x9
  476b8c:	b.eq	476bb4 <_obstack_memory_used@@Base+0x19a74>  // b.none
  476b90:	ldrb	w0, [sp, #45]
  476b94:	eor	w0, w0, #0x1
  476b98:	and	w0, w0, #0xff
  476b9c:	cmp	w0, #0x0
  476ba0:	b.eq	476bac <_obstack_memory_used@@Base+0x19a6c>  // b.none
  476ba4:	bl	404bc0 <__errno_location@plt>
  476ba8:	str	wzr, [x0]
  476bac:	mov	w0, #0xffffffff            	// #-1
  476bb0:	b	476bb8 <_obstack_memory_used@@Base+0x19a78>
  476bb4:	mov	w0, #0x0                   	// #0
  476bb8:	ldp	x29, x30, [sp], #48
  476bbc:	ret
  476bc0:	stp	x29, x30, [sp, #-64]!
  476bc4:	mov	x29, sp
  476bc8:	str	x0, [sp, #24]
  476bcc:	ldr	x0, [sp, #24]
  476bd0:	bl	404220 <opendir@plt>
  476bd4:	str	x0, [sp, #56]
  476bd8:	ldr	x0, [sp, #56]
  476bdc:	cmp	x0, #0x0
  476be0:	b.eq	476c88 <_obstack_memory_used@@Base+0x19b48>  // b.none
  476be4:	ldr	x0, [sp, #56]
  476be8:	bl	4049e0 <dirfd@plt>
  476bec:	str	w0, [sp, #40]
  476bf0:	ldr	w0, [sp, #40]
  476bf4:	cmp	w0, #0x0
  476bf8:	b.lt	476c88 <_obstack_memory_used@@Base+0x19b48>  // b.tstop
  476bfc:	ldr	w0, [sp, #40]
  476c00:	cmp	w0, #0x2
  476c04:	b.gt	476c88 <_obstack_memory_used@@Base+0x19b48>
  476c08:	mov	w2, #0x3                   	// #3
  476c0c:	mov	w1, #0x406                 	// #1030
  476c10:	ldr	w0, [sp, #40]
  476c14:	bl	45c480 <argp_usage@@Base+0x13394>
  476c18:	str	w0, [sp, #36]
  476c1c:	ldr	w0, [sp, #36]
  476c20:	cmp	w0, #0x0
  476c24:	b.ge	476c3c <_obstack_memory_used@@Base+0x19afc>  // b.tcont
  476c28:	bl	404bc0 <__errno_location@plt>
  476c2c:	ldr	w0, [x0]
  476c30:	str	w0, [sp, #44]
  476c34:	str	xzr, [sp, #48]
  476c38:	b	476c68 <_obstack_memory_used@@Base+0x19b28>
  476c3c:	ldr	w0, [sp, #36]
  476c40:	bl	4046c0 <fdopendir@plt>
  476c44:	str	x0, [sp, #48]
  476c48:	bl	404bc0 <__errno_location@plt>
  476c4c:	ldr	w0, [x0]
  476c50:	str	w0, [sp, #44]
  476c54:	ldr	x0, [sp, #48]
  476c58:	cmp	x0, #0x0
  476c5c:	b.ne	476c68 <_obstack_memory_used@@Base+0x19b28>  // b.any
  476c60:	ldr	w0, [sp, #36]
  476c64:	bl	404660 <close@plt>
  476c68:	ldr	x0, [sp, #56]
  476c6c:	bl	404630 <closedir@plt>
  476c70:	bl	404bc0 <__errno_location@plt>
  476c74:	mov	x1, x0
  476c78:	ldr	w0, [sp, #44]
  476c7c:	str	w0, [x1]
  476c80:	ldr	x0, [sp, #48]
  476c84:	str	x0, [sp, #56]
  476c88:	ldr	x0, [sp, #56]
  476c8c:	ldp	x29, x30, [sp], #64
  476c90:	ret
  476c94:	stp	x29, x30, [sp, #-256]!
  476c98:	mov	x29, sp
  476c9c:	str	x0, [sp, #24]
  476ca0:	str	w1, [sp, #20]
  476ca4:	str	x2, [sp, #208]
  476ca8:	str	x3, [sp, #216]
  476cac:	str	x4, [sp, #224]
  476cb0:	str	x5, [sp, #232]
  476cb4:	str	x6, [sp, #240]
  476cb8:	str	x7, [sp, #248]
  476cbc:	str	q0, [sp, #80]
  476cc0:	str	q1, [sp, #96]
  476cc4:	str	q2, [sp, #112]
  476cc8:	str	q3, [sp, #128]
  476ccc:	str	q4, [sp, #144]
  476cd0:	str	q5, [sp, #160]
  476cd4:	str	q6, [sp, #176]
  476cd8:	str	q7, [sp, #192]
  476cdc:	str	wzr, [sp, #76]
  476ce0:	ldr	w0, [sp, #20]
  476ce4:	and	w0, w0, #0x40
  476ce8:	cmp	w0, #0x0
  476cec:	b.eq	476d70 <_obstack_memory_used@@Base+0x19c30>  // b.none
  476cf0:	add	x0, sp, #0x100
  476cf4:	str	x0, [sp, #40]
  476cf8:	add	x0, sp, #0x100
  476cfc:	str	x0, [sp, #48]
  476d00:	add	x0, sp, #0xd0
  476d04:	str	x0, [sp, #56]
  476d08:	mov	w0, #0xffffffd0            	// #-48
  476d0c:	str	w0, [sp, #64]
  476d10:	mov	w0, #0xffffff80            	// #-128
  476d14:	str	w0, [sp, #68]
  476d18:	ldr	w1, [sp, #64]
  476d1c:	ldr	x0, [sp, #40]
  476d20:	cmp	w1, #0x0
  476d24:	b.lt	476d38 <_obstack_memory_used@@Base+0x19bf8>  // b.tstop
  476d28:	add	x1, x0, #0xb
  476d2c:	and	x1, x1, #0xfffffffffffffff8
  476d30:	str	x1, [sp, #40]
  476d34:	b	476d68 <_obstack_memory_used@@Base+0x19c28>
  476d38:	add	w2, w1, #0x8
  476d3c:	str	w2, [sp, #64]
  476d40:	ldr	w2, [sp, #64]
  476d44:	cmp	w2, #0x0
  476d48:	b.le	476d5c <_obstack_memory_used@@Base+0x19c1c>
  476d4c:	add	x1, x0, #0xb
  476d50:	and	x1, x1, #0xfffffffffffffff8
  476d54:	str	x1, [sp, #40]
  476d58:	b	476d68 <_obstack_memory_used@@Base+0x19c28>
  476d5c:	ldr	x2, [sp, #48]
  476d60:	sxtw	x0, w1
  476d64:	add	x0, x2, x0
  476d68:	ldr	w0, [x0]
  476d6c:	str	w0, [sp, #76]
  476d70:	ldr	w2, [sp, #76]
  476d74:	ldr	w1, [sp, #20]
  476d78:	ldr	x0, [sp, #24]
  476d7c:	bl	404430 <open@plt>
  476d80:	bl	479700 <_obstack_memory_used@@Base+0x1c5c0>
  476d84:	ldp	x29, x30, [sp], #256
  476d88:	ret
  476d8c:	stp	x29, x30, [sp, #-48]!
  476d90:	mov	x29, sp
  476d94:	str	w0, [sp, #28]
  476d98:	mov	w0, #0x1                   	// #1
  476d9c:	strb	w0, [sp, #47]
  476da0:	mov	x1, #0x0                   	// #0
  476da4:	ldr	w0, [sp, #28]
  476da8:	bl	404cd0 <setlocale@plt>
  476dac:	str	x0, [sp, #32]
  476db0:	ldr	x0, [sp, #32]
  476db4:	cmp	x0, #0x0
  476db8:	b.eq	476df0 <_obstack_memory_used@@Base+0x19cb0>  // b.none
  476dbc:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  476dc0:	add	x1, x0, #0x940
  476dc4:	ldr	x0, [sp, #32]
  476dc8:	bl	4047c0 <strcmp@plt>
  476dcc:	cmp	w0, #0x0
  476dd0:	b.eq	476dec <_obstack_memory_used@@Base+0x19cac>  // b.none
  476dd4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  476dd8:	add	x1, x0, #0x948
  476ddc:	ldr	x0, [sp, #32]
  476de0:	bl	4047c0 <strcmp@plt>
  476de4:	cmp	w0, #0x0
  476de8:	b.ne	476df0 <_obstack_memory_used@@Base+0x19cb0>  // b.any
  476dec:	strb	wzr, [sp, #47]
  476df0:	ldrb	w0, [sp, #47]
  476df4:	ldp	x29, x30, [sp], #48
  476df8:	ret
  476dfc:	stp	x29, x30, [sp, #-48]!
  476e00:	mov	x29, sp
  476e04:	str	w0, [sp, #28]
  476e08:	ldr	w0, [sp, #28]
  476e0c:	bl	404410 <wcwidth@plt>
  476e10:	str	w0, [sp, #44]
  476e14:	ldr	w0, [sp, #44]
  476e18:	cmp	w0, #0x0
  476e1c:	b.ge	476e38 <_obstack_memory_used@@Base+0x19cf8>  // b.tcont
  476e20:	ldr	w0, [sp, #28]
  476e24:	bl	404260 <iswcntrl@plt>
  476e28:	cmp	w0, #0x0
  476e2c:	cset	w0, eq  // eq = none
  476e30:	and	w0, w0, #0xff
  476e34:	b	476e3c <_obstack_memory_used@@Base+0x19cfc>
  476e38:	ldr	w0, [sp, #44]
  476e3c:	ldp	x29, x30, [sp], #48
  476e40:	ret
  476e44:	stp	x29, x30, [sp, #-32]!
  476e48:	mov	x29, sp
  476e4c:	str	x0, [sp, #24]
  476e50:	str	x1, [sp, #16]
  476e54:	ldr	x0, [sp, #16]
  476e58:	ldr	x1, [x0]
  476e5c:	ldr	x0, [sp, #16]
  476e60:	add	x0, x0, #0x18
  476e64:	cmp	x1, x0
  476e68:	b.ne	476ea4 <_obstack_memory_used@@Base+0x19d64>  // b.any
  476e6c:	ldr	x0, [sp, #24]
  476e70:	add	x3, x0, #0x18
  476e74:	ldr	x0, [sp, #16]
  476e78:	add	x1, x0, #0x18
  476e7c:	ldr	x0, [sp, #16]
  476e80:	ldr	x0, [x0, #8]
  476e84:	mov	x2, x0
  476e88:	mov	x0, x3
  476e8c:	bl	404020 <memcpy@plt>
  476e90:	ldr	x0, [sp, #24]
  476e94:	add	x1, x0, #0x18
  476e98:	ldr	x0, [sp, #24]
  476e9c:	str	x1, [x0]
  476ea0:	b	476eb4 <_obstack_memory_used@@Base+0x19d74>
  476ea4:	ldr	x0, [sp, #16]
  476ea8:	ldr	x1, [x0]
  476eac:	ldr	x0, [sp, #24]
  476eb0:	str	x1, [x0]
  476eb4:	ldr	x0, [sp, #16]
  476eb8:	ldr	x1, [x0, #8]
  476ebc:	ldr	x0, [sp, #24]
  476ec0:	str	x1, [x0, #8]
  476ec4:	ldr	x0, [sp, #16]
  476ec8:	ldrb	w1, [x0, #16]
  476ecc:	ldr	x0, [sp, #24]
  476ed0:	strb	w1, [x0, #16]
  476ed4:	ldr	x0, [sp, #24]
  476ed8:	ldrb	w0, [x0, #16]
  476edc:	cmp	w0, #0x0
  476ee0:	b.eq	476ef4 <_obstack_memory_used@@Base+0x19db4>  // b.none
  476ee4:	ldr	x0, [sp, #16]
  476ee8:	ldr	w1, [x0, #20]
  476eec:	ldr	x0, [sp, #24]
  476ef0:	str	w1, [x0, #20]
  476ef4:	nop
  476ef8:	ldp	x29, x30, [sp], #32
  476efc:	ret
  476f00:	sub	sp, sp, #0x10
  476f04:	strb	w0, [sp, #15]
  476f08:	ldrb	w0, [sp, #15]
  476f0c:	lsr	w0, w0, #5
  476f10:	and	w0, w0, #0xff
  476f14:	mov	w1, w0
  476f18:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  476f1c:	add	x0, x0, #0x950
  476f20:	sxtw	x1, w1
  476f24:	ldr	w1, [x0, x1, lsl #2]
  476f28:	ldrb	w0, [sp, #15]
  476f2c:	and	w0, w0, #0x1f
  476f30:	lsr	w0, w1, w0
  476f34:	and	w0, w0, #0x1
  476f38:	cmp	w0, #0x0
  476f3c:	cset	w0, ne  // ne = any
  476f40:	and	w0, w0, #0xff
  476f44:	add	sp, sp, #0x10
  476f48:	ret
  476f4c:	stp	x29, x30, [sp, #-48]!
  476f50:	mov	x29, sp
  476f54:	str	x0, [sp, #40]
  476f58:	str	x1, [sp, #32]
  476f5c:	str	x2, [sp, #24]
  476f60:	b	476f90 <_obstack_memory_used@@Base+0x19e50>
  476f64:	ldr	x1, [sp, #32]
  476f68:	ldr	x0, [sp, #24]
  476f6c:	add	x0, x1, x0
  476f70:	ldrb	w0, [x0]
  476f74:	bl	404bd0 <tolower@plt>
  476f78:	mov	w2, w0
  476f7c:	ldr	x1, [sp, #40]
  476f80:	ldr	x0, [sp, #24]
  476f84:	add	x0, x1, x0
  476f88:	and	w1, w2, #0xff
  476f8c:	strb	w1, [x0]
  476f90:	ldr	x0, [sp, #24]
  476f94:	sub	x1, x0, #0x1
  476f98:	str	x1, [sp, #24]
  476f9c:	cmp	x0, #0x0
  476fa0:	b.ne	476f64 <_obstack_memory_used@@Base+0x19e24>  // b.any
  476fa4:	ldr	x0, [sp, #40]
  476fa8:	ldp	x29, x30, [sp], #48
  476fac:	ret
  476fb0:	stp	x29, x30, [sp, #-48]!
  476fb4:	mov	x29, sp
  476fb8:	str	x0, [sp, #40]
  476fbc:	str	x1, [sp, #32]
  476fc0:	str	x2, [sp, #24]
  476fc4:	b	476ff4 <_obstack_memory_used@@Base+0x19eb4>
  476fc8:	ldr	x1, [sp, #32]
  476fcc:	ldr	x0, [sp, #24]
  476fd0:	add	x0, x1, x0
  476fd4:	ldrb	w0, [x0]
  476fd8:	bl	404400 <toupper@plt>
  476fdc:	mov	w2, w0
  476fe0:	ldr	x1, [sp, #40]
  476fe4:	ldr	x0, [sp, #24]
  476fe8:	add	x0, x1, x0
  476fec:	and	w1, w2, #0xff
  476ff0:	strb	w1, [x0]
  476ff4:	ldr	x0, [sp, #24]
  476ff8:	sub	x1, x0, #0x1
  476ffc:	str	x1, [sp, #24]
  477000:	cmp	x0, #0x0
  477004:	b.ne	476fc8 <_obstack_memory_used@@Base+0x19e88>  // b.any
  477008:	ldr	x0, [sp, #40]
  47700c:	ldp	x29, x30, [sp], #48
  477010:	ret
  477014:	sub	sp, sp, #0x20
  477018:	str	w0, [sp, #12]
  47701c:	str	w1, [sp, #8]
  477020:	mov	w0, #0x17a                 	// #378
  477024:	str	w0, [sp, #28]
  477028:	ldr	w1, [sp, #12]
  47702c:	ldr	w0, [sp, #8]
  477030:	sub	w0, w1, w0
  477034:	add	w1, w0, #0x4
  477038:	ldr	w0, [sp, #28]
  47703c:	add	w0, w1, w0
  477040:	mov	w1, #0x2493                	// #9363
  477044:	movk	w1, #0x9249, lsl #16
  477048:	smull	x1, w0, w1
  47704c:	lsr	x1, x1, #32
  477050:	add	w1, w0, w1
  477054:	asr	w2, w1, #2
  477058:	asr	w1, w0, #31
  47705c:	sub	w2, w2, w1
  477060:	mov	w1, w2
  477064:	lsl	w1, w1, #3
  477068:	sub	w1, w1, w2
  47706c:	sub	w2, w0, w1
  477070:	ldr	w0, [sp, #12]
  477074:	sub	w0, w0, w2
  477078:	add	w0, w0, #0x3
  47707c:	add	sp, sp, #0x20
  477080:	ret
  477084:	stp	x29, x30, [sp, #-80]!
  477088:	mov	x29, sp
  47708c:	str	x0, [sp, #56]
  477090:	str	x1, [sp, #48]
  477094:	str	x2, [sp, #40]
  477098:	str	x3, [sp, #32]
  47709c:	str	x4, [sp, #24]
  4770a0:	str	w5, [sp, #20]
  4770a4:	strb	wzr, [sp, #79]
  4770a8:	add	x0, sp, #0x4f
  4770ac:	ldr	w7, [sp, #20]
  4770b0:	ldr	x6, [sp, #24]
  4770b4:	mov	x5, x0
  4770b8:	mov	w4, #0x0                   	// #0
  4770bc:	ldr	x3, [sp, #32]
  4770c0:	ldr	x2, [sp, #40]
  4770c4:	ldr	x1, [sp, #48]
  4770c8:	ldr	x0, [sp, #56]
  4770cc:	bl	4770d8 <_obstack_memory_used@@Base+0x19f98>
  4770d0:	ldp	x29, x30, [sp], #80
  4770d4:	ret
  4770d8:	sub	sp, sp, #0x6f0
  4770dc:	stp	x29, x30, [sp]
  4770e0:	mov	x29, sp
  4770e4:	str	x0, [sp, #72]
  4770e8:	str	x1, [sp, #64]
  4770ec:	str	x2, [sp, #56]
  4770f0:	str	x3, [sp, #48]
  4770f4:	strb	w4, [sp, #47]
  4770f8:	str	x5, [sp, #32]
  4770fc:	str	x6, [sp, #24]
  477100:	str	w7, [sp, #40]
  477104:	ldr	x0, [sp, #48]
  477108:	ldr	w0, [x0, #8]
  47710c:	str	w0, [sp, #1772]
  477110:	str	xzr, [sp, #1752]
  477114:	ldr	x0, [sp, #72]
  477118:	str	x0, [sp, #1744]
  47711c:	str	xzr, [sp, #1760]
  477120:	ldr	x0, [sp, #48]
  477124:	ldr	x0, [x0, #48]
  477128:	str	x0, [sp, #1760]
  47712c:	ldr	x0, [sp, #1760]
  477130:	cmp	x0, #0x0
  477134:	b.ne	477144 <_obstack_memory_used@@Base+0x1a004>  // b.any
  477138:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47713c:	add	x0, x0, #0x970
  477140:	str	x0, [sp, #1760]
  477144:	ldr	w0, [sp, #1772]
  477148:	cmp	w0, #0xc
  47714c:	b.le	477160 <_obstack_memory_used@@Base+0x1a020>
  477150:	ldr	w0, [sp, #1772]
  477154:	sub	w0, w0, #0xc
  477158:	str	w0, [sp, #1772]
  47715c:	b	477174 <_obstack_memory_used@@Base+0x1a034>
  477160:	ldr	w0, [sp, #1772]
  477164:	cmp	w0, #0x0
  477168:	b.ne	477174 <_obstack_memory_used@@Base+0x1a034>  // b.any
  47716c:	mov	w0, #0xc                   	// #12
  477170:	str	w0, [sp, #1772]
  477174:	ldr	x0, [sp, #56]
  477178:	str	x0, [sp, #1736]
  47717c:	b	4795c4 <_obstack_memory_used@@Base+0x1c484>
  477180:	str	wzr, [sp, #1732]
  477184:	str	wzr, [sp, #1724]
  477188:	mov	w0, #0xffffffff            	// #-1
  47718c:	str	w0, [sp, #1684]
  477190:	strb	wzr, [sp, #1683]
  477194:	ldrb	w0, [sp, #47]
  477198:	strb	w0, [sp, #1682]
  47719c:	strb	wzr, [sp, #1671]
  4771a0:	ldr	x0, [sp, #1736]
  4771a4:	ldrb	w0, [x0]
  4771a8:	cmp	w0, #0x25
  4771ac:	b.eq	4772c8 <_obstack_memory_used@@Base+0x1a188>  // b.none
  4771b0:	mov	x0, #0x1                   	// #1
  4771b4:	str	x0, [sp, #1160]
  4771b8:	ldr	w1, [sp, #1684]
  4771bc:	ldr	w0, [sp, #1684]
  4771c0:	mov	w2, #0x0                   	// #0
  4771c4:	cmp	w1, #0x0
  4771c8:	csel	w0, w0, w2, ge  // ge = tcont
  4771cc:	sxtw	x0, w0
  4771d0:	str	x0, [sp, #1152]
  4771d4:	ldr	x0, [sp, #1152]
  4771d8:	ldr	x2, [sp, #1160]
  4771dc:	ldr	x1, [sp, #1160]
  4771e0:	cmp	x2, x0
  4771e4:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4771e8:	str	x0, [sp, #1144]
  4771ec:	ldr	x1, [sp, #64]
  4771f0:	ldr	x0, [sp, #1752]
  4771f4:	sub	x0, x1, x0
  4771f8:	ldr	x1, [sp, #1144]
  4771fc:	cmp	x1, x0
  477200:	b.cc	47720c <_obstack_memory_used@@Base+0x1a0cc>  // b.lo, b.ul, b.last
  477204:	mov	x0, #0x0                   	// #0
  477208:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  47720c:	ldr	x0, [sp, #1744]
  477210:	cmp	x0, #0x0
  477214:	b.eq	4772b4 <_obstack_memory_used@@Base+0x1a174>  // b.none
  477218:	ldr	w0, [sp, #1724]
  47721c:	cmp	w0, #0x0
  477220:	b.ne	477294 <_obstack_memory_used@@Base+0x1a154>  // b.any
  477224:	ldr	x1, [sp, #1160]
  477228:	ldr	x0, [sp, #1152]
  47722c:	cmp	x1, x0
  477230:	b.cs	477294 <_obstack_memory_used@@Base+0x1a154>  // b.hs, b.nlast
  477234:	ldrsw	x1, [sp, #1684]
  477238:	ldr	x0, [sp, #1160]
  47723c:	sub	x0, x1, x0
  477240:	str	x0, [sp, #1136]
  477244:	ldr	w0, [sp, #1732]
  477248:	cmp	w0, #0x30
  47724c:	b.ne	477274 <_obstack_memory_used@@Base+0x1a134>  // b.any
  477250:	ldr	x2, [sp, #1136]
  477254:	mov	w1, #0x30                  	// #48
  477258:	ldr	x0, [sp, #1744]
  47725c:	bl	4044d0 <memset@plt>
  477260:	ldr	x1, [sp, #1744]
  477264:	ldr	x0, [sp, #1136]
  477268:	add	x0, x1, x0
  47726c:	str	x0, [sp, #1744]
  477270:	b	477294 <_obstack_memory_used@@Base+0x1a154>
  477274:	ldr	x2, [sp, #1136]
  477278:	mov	w1, #0x20                  	// #32
  47727c:	ldr	x0, [sp, #1744]
  477280:	bl	4044d0 <memset@plt>
  477284:	ldr	x1, [sp, #1744]
  477288:	ldr	x0, [sp, #1136]
  47728c:	add	x0, x1, x0
  477290:	str	x0, [sp, #1744]
  477294:	ldr	x0, [sp, #1736]
  477298:	ldrb	w1, [x0]
  47729c:	ldr	x0, [sp, #1744]
  4772a0:	strb	w1, [x0]
  4772a4:	ldr	x1, [sp, #1744]
  4772a8:	ldr	x0, [sp, #1160]
  4772ac:	add	x0, x1, x0
  4772b0:	str	x0, [sp, #1744]
  4772b4:	ldr	x1, [sp, #1752]
  4772b8:	ldr	x0, [sp, #1144]
  4772bc:	add	x0, x1, x0
  4772c0:	str	x0, [sp, #1752]
  4772c4:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  4772c8:	ldr	x0, [sp, #1736]
  4772cc:	add	x0, x0, #0x1
  4772d0:	str	x0, [sp, #1736]
  4772d4:	ldr	x0, [sp, #1736]
  4772d8:	ldrb	w0, [x0]
  4772dc:	cmp	w0, #0x5f
  4772e0:	b.eq	47731c <_obstack_memory_used@@Base+0x1a1dc>  // b.none
  4772e4:	cmp	w0, #0x5f
  4772e8:	b.gt	477344 <_obstack_memory_used@@Base+0x1a204>
  4772ec:	cmp	w0, #0x5e
  4772f0:	b.eq	47732c <_obstack_memory_used@@Base+0x1a1ec>  // b.none
  4772f4:	cmp	w0, #0x5e
  4772f8:	b.gt	477344 <_obstack_memory_used@@Base+0x1a204>
  4772fc:	cmp	w0, #0x30
  477300:	b.eq	47731c <_obstack_memory_used@@Base+0x1a1dc>  // b.none
  477304:	cmp	w0, #0x30
  477308:	b.gt	477344 <_obstack_memory_used@@Base+0x1a204>
  47730c:	cmp	w0, #0x23
  477310:	b.eq	477338 <_obstack_memory_used@@Base+0x1a1f8>  // b.none
  477314:	cmp	w0, #0x2d
  477318:	b.ne	477344 <_obstack_memory_used@@Base+0x1a204>  // b.any
  47731c:	ldr	x0, [sp, #1736]
  477320:	ldrb	w0, [x0]
  477324:	str	w0, [sp, #1732]
  477328:	b	477364 <_obstack_memory_used@@Base+0x1a224>
  47732c:	mov	w0, #0x1                   	// #1
  477330:	strb	w0, [sp, #1682]
  477334:	b	477364 <_obstack_memory_used@@Base+0x1a224>
  477338:	mov	w0, #0x1                   	// #1
  47733c:	strb	w0, [sp, #1671]
  477340:	b	477364 <_obstack_memory_used@@Base+0x1a224>
  477344:	nop
  477348:	nop
  47734c:	ldr	x0, [sp, #1736]
  477350:	ldrb	w0, [x0]
  477354:	sub	w0, w0, #0x30
  477358:	cmp	w0, #0x9
  47735c:	b.hi	477400 <_obstack_memory_used@@Base+0x1a2c0>  // b.pmore
  477360:	b	477368 <_obstack_memory_used@@Base+0x1a228>
  477364:	b	4772c8 <_obstack_memory_used@@Base+0x1a188>
  477368:	str	wzr, [sp, #1684]
  47736c:	ldr	w1, [sp, #1684]
  477370:	mov	w0, #0xcccc                	// #52428
  477374:	movk	w0, #0xccc, lsl #16
  477378:	cmp	w1, w0
  47737c:	b.gt	4773a4 <_obstack_memory_used@@Base+0x1a264>
  477380:	ldr	w1, [sp, #1684]
  477384:	mov	w0, #0xcccc                	// #52428
  477388:	movk	w0, #0xccc, lsl #16
  47738c:	cmp	w1, w0
  477390:	b.ne	4773b0 <_obstack_memory_used@@Base+0x1a270>  // b.any
  477394:	ldr	x0, [sp, #1736]
  477398:	ldrb	w0, [x0]
  47739c:	cmp	w0, #0x37
  4773a0:	b.ls	4773b0 <_obstack_memory_used@@Base+0x1a270>  // b.plast
  4773a4:	mov	w0, #0x7fffffff            	// #2147483647
  4773a8:	str	w0, [sp, #1684]
  4773ac:	b	4773e0 <_obstack_memory_used@@Base+0x1a2a0>
  4773b0:	ldr	w1, [sp, #1684]
  4773b4:	mov	w0, w1
  4773b8:	lsl	w0, w0, #2
  4773bc:	add	w0, w0, w1
  4773c0:	lsl	w0, w0, #1
  4773c4:	str	w0, [sp, #1684]
  4773c8:	ldr	x0, [sp, #1736]
  4773cc:	ldrb	w0, [x0]
  4773d0:	sub	w0, w0, #0x30
  4773d4:	ldr	w1, [sp, #1684]
  4773d8:	add	w0, w1, w0
  4773dc:	str	w0, [sp, #1684]
  4773e0:	ldr	x0, [sp, #1736]
  4773e4:	add	x0, x0, #0x1
  4773e8:	str	x0, [sp, #1736]
  4773ec:	ldr	x0, [sp, #1736]
  4773f0:	ldrb	w0, [x0]
  4773f4:	sub	w0, w0, #0x30
  4773f8:	cmp	w0, #0x9
  4773fc:	b.ls	47736c <_obstack_memory_used@@Base+0x1a22c>  // b.plast
  477400:	ldr	x0, [sp, #1736]
  477404:	ldrb	w0, [x0]
  477408:	cmp	w0, #0x45
  47740c:	b.eq	477418 <_obstack_memory_used@@Base+0x1a2d8>  // b.none
  477410:	cmp	w0, #0x4f
  477414:	b.ne	477430 <_obstack_memory_used@@Base+0x1a2f0>  // b.any
  477418:	ldr	x0, [sp, #1736]
  47741c:	add	x1, x0, #0x1
  477420:	str	x1, [sp, #1736]
  477424:	ldrb	w0, [x0]
  477428:	str	w0, [sp, #1728]
  47742c:	b	477438 <_obstack_memory_used@@Base+0x1a2f8>
  477430:	str	wzr, [sp, #1728]
  477434:	nop
  477438:	ldr	x0, [sp, #1736]
  47743c:	ldrb	w0, [x0]
  477440:	str	w0, [sp, #1664]
  477444:	ldr	w0, [sp, #1664]
  477448:	cmp	w0, #0x7a
  47744c:	b.hi	4793d0 <_obstack_memory_used@@Base+0x1c290>  // b.pmore
  477450:	adrp	x1, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  477454:	add	x1, x1, #0x9ac
  477458:	ldr	w0, [x1, w0, uxtw #2]
  47745c:	adr	x1, 477468 <_obstack_memory_used@@Base+0x1a328>
  477460:	add	x0, x1, w0, sxtw #2
  477464:	br	x0
  477468:	ldr	w0, [sp, #1728]
  47746c:	cmp	w0, #0x0
  477470:	b.ne	479314 <_obstack_memory_used@@Base+0x1c1d4>  // b.any
  477474:	mov	x0, #0x1                   	// #1
  477478:	str	x0, [sp, #1224]
  47747c:	ldr	w1, [sp, #1684]
  477480:	ldr	w0, [sp, #1684]
  477484:	mov	w2, #0x0                   	// #0
  477488:	cmp	w1, #0x0
  47748c:	csel	w0, w0, w2, ge  // ge = tcont
  477490:	sxtw	x0, w0
  477494:	str	x0, [sp, #1216]
  477498:	ldr	x0, [sp, #1216]
  47749c:	ldr	x2, [sp, #1224]
  4774a0:	ldr	x1, [sp, #1224]
  4774a4:	cmp	x2, x0
  4774a8:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4774ac:	str	x0, [sp, #1208]
  4774b0:	ldr	x1, [sp, #64]
  4774b4:	ldr	x0, [sp, #1752]
  4774b8:	sub	x0, x1, x0
  4774bc:	ldr	x1, [sp, #1208]
  4774c0:	cmp	x1, x0
  4774c4:	b.cc	4774d0 <_obstack_memory_used@@Base+0x1a390>  // b.lo, b.ul, b.last
  4774c8:	mov	x0, #0x0                   	// #0
  4774cc:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  4774d0:	ldr	x0, [sp, #1744]
  4774d4:	cmp	x0, #0x0
  4774d8:	b.eq	477578 <_obstack_memory_used@@Base+0x1a438>  // b.none
  4774dc:	ldr	w0, [sp, #1724]
  4774e0:	cmp	w0, #0x0
  4774e4:	b.ne	477558 <_obstack_memory_used@@Base+0x1a418>  // b.any
  4774e8:	ldr	x1, [sp, #1224]
  4774ec:	ldr	x0, [sp, #1216]
  4774f0:	cmp	x1, x0
  4774f4:	b.cs	477558 <_obstack_memory_used@@Base+0x1a418>  // b.hs, b.nlast
  4774f8:	ldrsw	x1, [sp, #1684]
  4774fc:	ldr	x0, [sp, #1224]
  477500:	sub	x0, x1, x0
  477504:	str	x0, [sp, #1200]
  477508:	ldr	w0, [sp, #1732]
  47750c:	cmp	w0, #0x30
  477510:	b.ne	477538 <_obstack_memory_used@@Base+0x1a3f8>  // b.any
  477514:	ldr	x2, [sp, #1200]
  477518:	mov	w1, #0x30                  	// #48
  47751c:	ldr	x0, [sp, #1744]
  477520:	bl	4044d0 <memset@plt>
  477524:	ldr	x1, [sp, #1744]
  477528:	ldr	x0, [sp, #1200]
  47752c:	add	x0, x1, x0
  477530:	str	x0, [sp, #1744]
  477534:	b	477558 <_obstack_memory_used@@Base+0x1a418>
  477538:	ldr	x2, [sp, #1200]
  47753c:	mov	w1, #0x20                  	// #32
  477540:	ldr	x0, [sp, #1744]
  477544:	bl	4044d0 <memset@plt>
  477548:	ldr	x1, [sp, #1744]
  47754c:	ldr	x0, [sp, #1200]
  477550:	add	x0, x1, x0
  477554:	str	x0, [sp, #1744]
  477558:	ldr	x0, [sp, #1736]
  47755c:	ldrb	w1, [x0]
  477560:	ldr	x0, [sp, #1744]
  477564:	strb	w1, [x0]
  477568:	ldr	x1, [sp, #1744]
  47756c:	ldr	x0, [sp, #1224]
  477570:	add	x0, x1, x0
  477574:	str	x0, [sp, #1744]
  477578:	ldr	x1, [sp, #1752]
  47757c:	ldr	x0, [sp, #1208]
  477580:	add	x0, x1, x0
  477584:	str	x0, [sp, #1752]
  477588:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  47758c:	ldr	w0, [sp, #1728]
  477590:	cmp	w0, #0x0
  477594:	b.ne	47931c <_obstack_memory_used@@Base+0x1c1dc>  // b.any
  477598:	ldrb	w0, [sp, #1671]
  47759c:	cmp	w0, #0x0
  4775a0:	b.eq	4777a4 <_obstack_memory_used@@Base+0x1a664>  // b.none
  4775a4:	mov	w0, #0x1                   	// #1
  4775a8:	strb	w0, [sp, #1682]
  4775ac:	strb	wzr, [sp, #1683]
  4775b0:	b	4777a4 <_obstack_memory_used@@Base+0x1a664>
  4775b4:	ldr	w0, [sp, #1728]
  4775b8:	cmp	w0, #0x0
  4775bc:	b.ne	479324 <_obstack_memory_used@@Base+0x1c1e4>  // b.any
  4775c0:	ldrb	w0, [sp, #1671]
  4775c4:	cmp	w0, #0x0
  4775c8:	b.eq	4777ac <_obstack_memory_used@@Base+0x1a66c>  // b.none
  4775cc:	mov	w0, #0x1                   	// #1
  4775d0:	strb	w0, [sp, #1682]
  4775d4:	strb	wzr, [sp, #1683]
  4775d8:	b	4777ac <_obstack_memory_used@@Base+0x1a66c>
  4775dc:	ldrb	w0, [sp, #1671]
  4775e0:	cmp	w0, #0x0
  4775e4:	b.eq	4775f4 <_obstack_memory_used@@Base+0x1a4b4>  // b.none
  4775e8:	mov	w0, #0x1                   	// #1
  4775ec:	strb	w0, [sp, #1682]
  4775f0:	strb	wzr, [sp, #1683]
  4775f4:	ldr	w0, [sp, #1728]
  4775f8:	cmp	w0, #0x45
  4775fc:	b.ne	4777b4 <_obstack_memory_used@@Base+0x1a674>  // b.any
  477600:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  477604:	ldr	w0, [sp, #1728]
  477608:	cmp	w0, #0x45
  47760c:	b.eq	47932c <_obstack_memory_used@@Base+0x1c1ec>  // b.none
  477610:	ldrb	w0, [sp, #1671]
  477614:	cmp	w0, #0x0
  477618:	b.eq	4777bc <_obstack_memory_used@@Base+0x1a67c>  // b.none
  47761c:	mov	w0, #0x1                   	// #1
  477620:	strb	w0, [sp, #1682]
  477624:	strb	wzr, [sp, #1683]
  477628:	b	4777bc <_obstack_memory_used@@Base+0x1a67c>
  47762c:	ldr	w0, [sp, #1728]
  477630:	cmp	w0, #0x4f
  477634:	b.ne	4777c4 <_obstack_memory_used@@Base+0x1a684>  // b.any
  477638:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47763c:	ldr	w7, [sp, #40]
  477640:	ldr	x6, [sp, #24]
  477644:	ldr	x5, [sp, #32]
  477648:	ldrb	w4, [sp, #1682]
  47764c:	ldr	x3, [sp, #48]
  477650:	ldr	x2, [sp, #1696]
  477654:	mov	x1, #0xffffffffffffffff    	// #-1
  477658:	mov	x0, #0x0                   	// #0
  47765c:	bl	4770d8 <_obstack_memory_used@@Base+0x19f98>
  477660:	str	x0, [sp, #1496]
  477664:	ldr	x0, [sp, #1496]
  477668:	str	x0, [sp, #1488]
  47766c:	ldr	w1, [sp, #1684]
  477670:	ldr	w0, [sp, #1684]
  477674:	mov	w2, #0x0                   	// #0
  477678:	cmp	w1, #0x0
  47767c:	csel	w0, w0, w2, ge  // ge = tcont
  477680:	sxtw	x0, w0
  477684:	str	x0, [sp, #1480]
  477688:	ldr	x0, [sp, #1480]
  47768c:	ldr	x2, [sp, #1488]
  477690:	ldr	x1, [sp, #1488]
  477694:	cmp	x2, x0
  477698:	csel	x0, x1, x0, cs  // cs = hs, nlast
  47769c:	str	x0, [sp, #1472]
  4776a0:	ldr	x1, [sp, #64]
  4776a4:	ldr	x0, [sp, #1752]
  4776a8:	sub	x0, x1, x0
  4776ac:	ldr	x1, [sp, #1472]
  4776b0:	cmp	x1, x0
  4776b4:	b.cc	4776c0 <_obstack_memory_used@@Base+0x1a580>  // b.lo, b.ul, b.last
  4776b8:	mov	x0, #0x0                   	// #0
  4776bc:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  4776c0:	ldr	x0, [sp, #1744]
  4776c4:	cmp	x0, #0x0
  4776c8:	b.eq	477788 <_obstack_memory_used@@Base+0x1a648>  // b.none
  4776cc:	ldr	w0, [sp, #1724]
  4776d0:	cmp	w0, #0x0
  4776d4:	b.ne	477748 <_obstack_memory_used@@Base+0x1a608>  // b.any
  4776d8:	ldr	x1, [sp, #1488]
  4776dc:	ldr	x0, [sp, #1480]
  4776e0:	cmp	x1, x0
  4776e4:	b.cs	477748 <_obstack_memory_used@@Base+0x1a608>  // b.hs, b.nlast
  4776e8:	ldrsw	x1, [sp, #1684]
  4776ec:	ldr	x0, [sp, #1488]
  4776f0:	sub	x0, x1, x0
  4776f4:	str	x0, [sp, #1464]
  4776f8:	ldr	w0, [sp, #1732]
  4776fc:	cmp	w0, #0x30
  477700:	b.ne	477728 <_obstack_memory_used@@Base+0x1a5e8>  // b.any
  477704:	ldr	x2, [sp, #1464]
  477708:	mov	w1, #0x30                  	// #48
  47770c:	ldr	x0, [sp, #1744]
  477710:	bl	4044d0 <memset@plt>
  477714:	ldr	x1, [sp, #1744]
  477718:	ldr	x0, [sp, #1464]
  47771c:	add	x0, x1, x0
  477720:	str	x0, [sp, #1744]
  477724:	b	477748 <_obstack_memory_used@@Base+0x1a608>
  477728:	ldr	x2, [sp, #1464]
  47772c:	mov	w1, #0x20                  	// #32
  477730:	ldr	x0, [sp, #1744]
  477734:	bl	4044d0 <memset@plt>
  477738:	ldr	x1, [sp, #1744]
  47773c:	ldr	x0, [sp, #1464]
  477740:	add	x0, x1, x0
  477744:	str	x0, [sp, #1744]
  477748:	ldr	x1, [sp, #64]
  47774c:	ldr	x0, [sp, #1752]
  477750:	sub	x0, x1, x0
  477754:	ldr	w7, [sp, #40]
  477758:	ldr	x6, [sp, #24]
  47775c:	ldr	x5, [sp, #32]
  477760:	ldrb	w4, [sp, #1682]
  477764:	ldr	x3, [sp, #48]
  477768:	ldr	x2, [sp, #1696]
  47776c:	mov	x1, x0
  477770:	ldr	x0, [sp, #1744]
  477774:	bl	4770d8 <_obstack_memory_used@@Base+0x19f98>
  477778:	ldr	x1, [sp, #1744]
  47777c:	ldr	x0, [sp, #1488]
  477780:	add	x0, x1, x0
  477784:	str	x0, [sp, #1744]
  477788:	ldr	x1, [sp, #1752]
  47778c:	ldr	x0, [sp, #1472]
  477790:	add	x0, x1, x0
  477794:	str	x0, [sp, #1752]
  477798:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  47779c:	nop
  4777a0:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777a4:	nop
  4777a8:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777ac:	nop
  4777b0:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777b4:	nop
  4777b8:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777bc:	nop
  4777c0:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777c4:	nop
  4777c8:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777cc:	nop
  4777d0:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777d4:	nop
  4777d8:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777dc:	nop
  4777e0:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777e4:	nop
  4777e8:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777ec:	nop
  4777f0:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777f4:	nop
  4777f8:	b	477800 <_obstack_memory_used@@Base+0x1a6c0>
  4777fc:	nop
  477800:	add	x0, sp, #0x450
  477804:	str	x0, [sp, #1656]
  477808:	ldr	x0, [sp, #1656]
  47780c:	add	x1, x0, #0x1
  477810:	str	x1, [sp, #1656]
  477814:	mov	w1, #0x20                  	// #32
  477818:	strb	w1, [x0]
  47781c:	ldr	x0, [sp, #1656]
  477820:	add	x1, x0, #0x1
  477824:	str	x1, [sp, #1656]
  477828:	mov	w1, #0x25                  	// #37
  47782c:	strb	w1, [x0]
  477830:	ldr	w0, [sp, #1728]
  477834:	cmp	w0, #0x0
  477838:	b.eq	477854 <_obstack_memory_used@@Base+0x1a714>  // b.none
  47783c:	ldr	x0, [sp, #1656]
  477840:	add	x1, x0, #0x1
  477844:	str	x1, [sp, #1656]
  477848:	ldr	w1, [sp, #1728]
  47784c:	and	w1, w1, #0xff
  477850:	strb	w1, [x0]
  477854:	ldr	x0, [sp, #1656]
  477858:	add	x1, x0, #0x1
  47785c:	str	x1, [sp, #1656]
  477860:	ldr	w1, [sp, #1664]
  477864:	and	w1, w1, #0xff
  477868:	strb	w1, [x0]
  47786c:	ldr	x0, [sp, #1656]
  477870:	strb	wzr, [x0]
  477874:	add	x1, sp, #0x450
  477878:	add	x0, sp, #0x50
  47787c:	ldr	x3, [sp, #48]
  477880:	mov	x2, x1
  477884:	mov	x1, #0x400                 	// #1024
  477888:	bl	404230 <strftime@plt>
  47788c:	str	x0, [sp, #1264]
  477890:	ldr	x0, [sp, #1264]
  477894:	cmp	x0, #0x0
  477898:	b.eq	4795ac <_obstack_memory_used@@Base+0x1c46c>  // b.none
  47789c:	ldr	x0, [sp, #1264]
  4778a0:	sub	x0, x0, #0x1
  4778a4:	str	x0, [sp, #1256]
  4778a8:	ldr	w1, [sp, #1684]
  4778ac:	ldr	w0, [sp, #1684]
  4778b0:	mov	w2, #0x0                   	// #0
  4778b4:	cmp	w1, #0x0
  4778b8:	csel	w0, w0, w2, ge  // ge = tcont
  4778bc:	sxtw	x0, w0
  4778c0:	str	x0, [sp, #1248]
  4778c4:	ldr	x0, [sp, #1248]
  4778c8:	ldr	x2, [sp, #1256]
  4778cc:	ldr	x1, [sp, #1256]
  4778d0:	cmp	x2, x0
  4778d4:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4778d8:	str	x0, [sp, #1240]
  4778dc:	ldr	x1, [sp, #64]
  4778e0:	ldr	x0, [sp, #1752]
  4778e4:	sub	x0, x1, x0
  4778e8:	ldr	x1, [sp, #1240]
  4778ec:	cmp	x1, x0
  4778f0:	b.cc	4778fc <_obstack_memory_used@@Base+0x1a7bc>  // b.lo, b.ul, b.last
  4778f4:	mov	x0, #0x0                   	// #0
  4778f8:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  4778fc:	ldr	x0, [sp, #1744]
  477900:	cmp	x0, #0x0
  477904:	b.eq	4779fc <_obstack_memory_used@@Base+0x1a8bc>  // b.none
  477908:	ldr	w0, [sp, #1724]
  47790c:	cmp	w0, #0x0
  477910:	b.ne	477984 <_obstack_memory_used@@Base+0x1a844>  // b.any
  477914:	ldr	x1, [sp, #1256]
  477918:	ldr	x0, [sp, #1248]
  47791c:	cmp	x1, x0
  477920:	b.cs	477984 <_obstack_memory_used@@Base+0x1a844>  // b.hs, b.nlast
  477924:	ldrsw	x1, [sp, #1684]
  477928:	ldr	x0, [sp, #1256]
  47792c:	sub	x0, x1, x0
  477930:	str	x0, [sp, #1232]
  477934:	ldr	w0, [sp, #1732]
  477938:	cmp	w0, #0x30
  47793c:	b.ne	477964 <_obstack_memory_used@@Base+0x1a824>  // b.any
  477940:	ldr	x2, [sp, #1232]
  477944:	mov	w1, #0x30                  	// #48
  477948:	ldr	x0, [sp, #1744]
  47794c:	bl	4044d0 <memset@plt>
  477950:	ldr	x1, [sp, #1744]
  477954:	ldr	x0, [sp, #1232]
  477958:	add	x0, x1, x0
  47795c:	str	x0, [sp, #1744]
  477960:	b	477984 <_obstack_memory_used@@Base+0x1a844>
  477964:	ldr	x2, [sp, #1232]
  477968:	mov	w1, #0x20                  	// #32
  47796c:	ldr	x0, [sp, #1744]
  477970:	bl	4044d0 <memset@plt>
  477974:	ldr	x1, [sp, #1744]
  477978:	ldr	x0, [sp, #1232]
  47797c:	add	x0, x1, x0
  477980:	str	x0, [sp, #1744]
  477984:	ldrb	w0, [sp, #1683]
  477988:	cmp	w0, #0x0
  47798c:	b.eq	4779ac <_obstack_memory_used@@Base+0x1a86c>  // b.none
  477990:	add	x0, sp, #0x50
  477994:	add	x0, x0, #0x1
  477998:	ldr	x2, [sp, #1256]
  47799c:	mov	x1, x0
  4779a0:	ldr	x0, [sp, #1744]
  4779a4:	bl	476f4c <_obstack_memory_used@@Base+0x19e0c>
  4779a8:	b	4779ec <_obstack_memory_used@@Base+0x1a8ac>
  4779ac:	ldrb	w0, [sp, #1682]
  4779b0:	cmp	w0, #0x0
  4779b4:	b.eq	4779d4 <_obstack_memory_used@@Base+0x1a894>  // b.none
  4779b8:	add	x0, sp, #0x50
  4779bc:	add	x0, x0, #0x1
  4779c0:	ldr	x2, [sp, #1256]
  4779c4:	mov	x1, x0
  4779c8:	ldr	x0, [sp, #1744]
  4779cc:	bl	476fb0 <_obstack_memory_used@@Base+0x19e70>
  4779d0:	b	4779ec <_obstack_memory_used@@Base+0x1a8ac>
  4779d4:	add	x0, sp, #0x50
  4779d8:	add	x0, x0, #0x1
  4779dc:	ldr	x2, [sp, #1256]
  4779e0:	mov	x1, x0
  4779e4:	ldr	x0, [sp, #1744]
  4779e8:	bl	404020 <memcpy@plt>
  4779ec:	ldr	x1, [sp, #1744]
  4779f0:	ldr	x0, [sp, #1256]
  4779f4:	add	x0, x1, x0
  4779f8:	str	x0, [sp, #1744]
  4779fc:	ldr	x1, [sp, #1752]
  477a00:	ldr	x0, [sp, #1240]
  477a04:	add	x0, x1, x0
  477a08:	str	x0, [sp, #1752]
  477a0c:	b	4795ac <_obstack_memory_used@@Base+0x1c46c>
  477a10:	ldr	w0, [sp, #1728]
  477a14:	cmp	w0, #0x45
  477a18:	b.eq	4777cc <_obstack_memory_used@@Base+0x1a68c>  // b.none
  477a1c:	ldr	x0, [sp, #48]
  477a20:	ldr	w0, [x0, #20]
  477a24:	mov	w1, #0x851f                	// #34079
  477a28:	movk	w1, #0x51eb, lsl #16
  477a2c:	smull	x1, w0, w1
  477a30:	lsr	x1, x1, #32
  477a34:	asr	w1, w1, #5
  477a38:	asr	w0, w0, #31
  477a3c:	sub	w0, w1, w0
  477a40:	add	w0, w0, #0x13
  477a44:	str	w0, [sp, #1460]
  477a48:	ldr	x0, [sp, #48]
  477a4c:	ldr	w1, [x0, #20]
  477a50:	mov	w0, #0x851f                	// #34079
  477a54:	movk	w0, #0x51eb, lsl #16
  477a58:	smull	x0, w1, w0
  477a5c:	lsr	x0, x0, #32
  477a60:	asr	w2, w0, #5
  477a64:	asr	w0, w1, #31
  477a68:	sub	w0, w2, w0
  477a6c:	mov	w2, #0x64                  	// #100
  477a70:	mul	w0, w0, w2
  477a74:	sub	w0, w1, w0
  477a78:	cmp	w0, #0x0
  477a7c:	b.ge	477a94 <_obstack_memory_used@@Base+0x1a954>  // b.tcont
  477a80:	ldr	w0, [sp, #1460]
  477a84:	cmp	w0, #0x0
  477a88:	b.le	477a94 <_obstack_memory_used@@Base+0x1a954>
  477a8c:	mov	w0, #0x1                   	// #1
  477a90:	b	477a98 <_obstack_memory_used@@Base+0x1a958>
  477a94:	mov	w0, #0x0                   	// #0
  477a98:	ldr	w1, [sp, #1460]
  477a9c:	sub	w0, w1, w0
  477aa0:	str	w0, [sp, #1460]
  477aa4:	mov	w0, #0x2                   	// #2
  477aa8:	str	w0, [sp, #1724]
  477aac:	ldr	x0, [sp, #48]
  477ab0:	ldr	w0, [x0, #20]
  477ab4:	cmn	w0, #0x76c
  477ab8:	cset	w0, lt  // lt = tstop
  477abc:	strb	w0, [sp, #1715]
  477ac0:	ldr	w0, [sp, #1460]
  477ac4:	str	w0, [sp, #1716]
  477ac8:	b	477b88 <_obstack_memory_used@@Base+0x1aa48>
  477acc:	ldr	w0, [sp, #1728]
  477ad0:	cmp	w0, #0x4f
  477ad4:	b.ne	4777d4 <_obstack_memory_used@@Base+0x1a694>  // b.any
  477ad8:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  477adc:	ldr	w0, [sp, #1728]
  477ae0:	cmp	w0, #0x0
  477ae4:	b.ne	479334 <_obstack_memory_used@@Base+0x1c1f4>  // b.any
  477ae8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  477aec:	add	x0, x0, #0x978
  477af0:	str	x0, [sp, #1696]
  477af4:	b	47763c <_obstack_memory_used@@Base+0x1a4fc>
  477af8:	ldr	w0, [sp, #1728]
  477afc:	cmp	w0, #0x45
  477b00:	b.eq	47933c <_obstack_memory_used@@Base+0x1c1fc>  // b.none
  477b04:	mov	w0, #0x2                   	// #2
  477b08:	str	w0, [sp, #1724]
  477b0c:	ldr	x0, [sp, #48]
  477b10:	ldr	w0, [x0, #12]
  477b14:	str	w0, [sp, #1720]
  477b18:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  477b1c:	ldr	w0, [sp, #1728]
  477b20:	cmp	w0, #0x45
  477b24:	b.eq	479344 <_obstack_memory_used@@Base+0x1c204>  // b.none
  477b28:	mov	w0, #0x2                   	// #2
  477b2c:	str	w0, [sp, #1724]
  477b30:	ldr	x0, [sp, #48]
  477b34:	ldr	w0, [x0, #12]
  477b38:	str	w0, [sp, #1720]
  477b3c:	b	477b4c <_obstack_memory_used@@Base+0x1aa0c>
  477b40:	mov	w0, #0x1                   	// #1
  477b44:	strb	w0, [sp, #1714]
  477b48:	b	477b90 <_obstack_memory_used@@Base+0x1aa50>
  477b4c:	ldr	w0, [sp, #1732]
  477b50:	cmp	w0, #0x30
  477b54:	b.eq	477b70 <_obstack_memory_used@@Base+0x1aa30>  // b.none
  477b58:	ldr	w0, [sp, #1732]
  477b5c:	cmp	w0, #0x2d
  477b60:	b.eq	477b70 <_obstack_memory_used@@Base+0x1aa30>  // b.none
  477b64:	mov	w0, #0x5f                  	// #95
  477b68:	str	w0, [sp, #1732]
  477b6c:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  477b70:	nop
  477b74:	ldr	w0, [sp, #1720]
  477b78:	lsr	w0, w0, #31
  477b7c:	strb	w0, [sp, #1715]
  477b80:	ldr	w0, [sp, #1720]
  477b84:	str	w0, [sp, #1716]
  477b88:	strb	wzr, [sp, #1714]
  477b8c:	str	wzr, [sp, #1708]
  477b90:	ldr	w0, [sp, #1728]
  477b94:	cmp	w0, #0x4f
  477b98:	b.ne	477bb0 <_obstack_memory_used@@Base+0x1aa70>  // b.any
  477b9c:	ldrb	w0, [sp, #1715]
  477ba0:	eor	w0, w0, #0x1
  477ba4:	and	w0, w0, #0xff
  477ba8:	cmp	w0, #0x0
  477bac:	b.ne	4777dc <_obstack_memory_used@@Base+0x1a69c>  // b.any
  477bb0:	add	x0, sp, #0x458
  477bb4:	add	x0, x0, #0x17
  477bb8:	str	x0, [sp, #1688]
  477bbc:	ldrb	w0, [sp, #1715]
  477bc0:	cmp	w0, #0x0
  477bc4:	b.eq	477bd4 <_obstack_memory_used@@Base+0x1aa94>  // b.none
  477bc8:	ldr	w0, [sp, #1716]
  477bcc:	neg	w0, w0
  477bd0:	str	w0, [sp, #1716]
  477bd4:	ldr	w0, [sp, #1708]
  477bd8:	and	w0, w0, #0x1
  477bdc:	cmp	w0, #0x0
  477be0:	b.eq	477bfc <_obstack_memory_used@@Base+0x1aabc>  // b.none
  477be4:	ldr	x0, [sp, #1688]
  477be8:	sub	x0, x0, #0x1
  477bec:	str	x0, [sp, #1688]
  477bf0:	ldr	x0, [sp, #1688]
  477bf4:	mov	w1, #0x3a                  	// #58
  477bf8:	strb	w1, [x0]
  477bfc:	ldr	w0, [sp, #1708]
  477c00:	asr	w0, w0, #1
  477c04:	str	w0, [sp, #1708]
  477c08:	ldr	w2, [sp, #1716]
  477c0c:	mov	w0, #0xcccd                	// #52429
  477c10:	movk	w0, #0xcccc, lsl #16
  477c14:	umull	x0, w2, w0
  477c18:	lsr	x0, x0, #32
  477c1c:	lsr	w1, w0, #3
  477c20:	mov	w0, w1
  477c24:	lsl	w0, w0, #2
  477c28:	add	w0, w0, w1
  477c2c:	lsl	w0, w0, #1
  477c30:	sub	w1, w2, w0
  477c34:	and	w0, w1, #0xff
  477c38:	ldr	x1, [sp, #1688]
  477c3c:	sub	x1, x1, #0x1
  477c40:	str	x1, [sp, #1688]
  477c44:	add	w0, w0, #0x30
  477c48:	and	w1, w0, #0xff
  477c4c:	ldr	x0, [sp, #1688]
  477c50:	strb	w1, [x0]
  477c54:	ldr	w1, [sp, #1716]
  477c58:	mov	w0, #0xcccd                	// #52429
  477c5c:	movk	w0, #0xcccc, lsl #16
  477c60:	umull	x0, w1, w0
  477c64:	lsr	x0, x0, #32
  477c68:	lsr	w0, w0, #3
  477c6c:	str	w0, [sp, #1716]
  477c70:	ldr	w0, [sp, #1716]
  477c74:	cmp	w0, #0x0
  477c78:	b.ne	477bd4 <_obstack_memory_used@@Base+0x1aa94>  // b.any
  477c7c:	ldr	w0, [sp, #1708]
  477c80:	cmp	w0, #0x0
  477c84:	b.ne	477bd4 <_obstack_memory_used@@Base+0x1aa94>  // b.any
  477c88:	nop
  477c8c:	ldr	w1, [sp, #1724]
  477c90:	ldr	w0, [sp, #1684]
  477c94:	cmp	w1, w0
  477c98:	b.ge	477ca4 <_obstack_memory_used@@Base+0x1ab64>  // b.tcont
  477c9c:	ldr	w0, [sp, #1684]
  477ca0:	str	w0, [sp, #1724]
  477ca4:	ldrb	w0, [sp, #1715]
  477ca8:	cmp	w0, #0x0
  477cac:	b.eq	477cb8 <_obstack_memory_used@@Base+0x1ab78>  // b.none
  477cb0:	mov	w0, #0x2d                  	// #45
  477cb4:	b	477cd0 <_obstack_memory_used@@Base+0x1ab90>
  477cb8:	ldrb	w0, [sp, #1714]
  477cbc:	cmp	w0, #0x0
  477cc0:	b.eq	477ccc <_obstack_memory_used@@Base+0x1ab8c>  // b.none
  477cc4:	mov	w0, #0x2b                  	// #43
  477cc8:	b	477cd0 <_obstack_memory_used@@Base+0x1ab90>
  477ccc:	mov	w0, #0x0                   	// #0
  477cd0:	strb	w0, [sp, #1443]
  477cd4:	ldr	w0, [sp, #1732]
  477cd8:	cmp	w0, #0x2d
  477cdc:	b.ne	477e00 <_obstack_memory_used@@Base+0x1acc0>  // b.any
  477ce0:	ldrb	w0, [sp, #1443]
  477ce4:	cmp	w0, #0x0
  477ce8:	b.eq	478290 <_obstack_memory_used@@Base+0x1b150>  // b.none
  477cec:	mov	x0, #0x1                   	// #1
  477cf0:	str	x0, [sp, #1328]
  477cf4:	ldr	w1, [sp, #1684]
  477cf8:	ldr	w0, [sp, #1684]
  477cfc:	mov	w2, #0x0                   	// #0
  477d00:	cmp	w1, #0x0
  477d04:	csel	w0, w0, w2, ge  // ge = tcont
  477d08:	sxtw	x0, w0
  477d0c:	str	x0, [sp, #1320]
  477d10:	ldr	x0, [sp, #1320]
  477d14:	ldr	x2, [sp, #1328]
  477d18:	ldr	x1, [sp, #1328]
  477d1c:	cmp	x2, x0
  477d20:	csel	x0, x1, x0, cs  // cs = hs, nlast
  477d24:	str	x0, [sp, #1312]
  477d28:	ldr	x1, [sp, #64]
  477d2c:	ldr	x0, [sp, #1752]
  477d30:	sub	x0, x1, x0
  477d34:	ldr	x1, [sp, #1312]
  477d38:	cmp	x1, x0
  477d3c:	b.cc	477d48 <_obstack_memory_used@@Base+0x1ac08>  // b.lo, b.ul, b.last
  477d40:	mov	x0, #0x0                   	// #0
  477d44:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  477d48:	ldr	x0, [sp, #1744]
  477d4c:	cmp	x0, #0x0
  477d50:	b.eq	477dec <_obstack_memory_used@@Base+0x1acac>  // b.none
  477d54:	ldr	w0, [sp, #1724]
  477d58:	cmp	w0, #0x0
  477d5c:	b.ne	477dd0 <_obstack_memory_used@@Base+0x1ac90>  // b.any
  477d60:	ldr	x1, [sp, #1328]
  477d64:	ldr	x0, [sp, #1320]
  477d68:	cmp	x1, x0
  477d6c:	b.cs	477dd0 <_obstack_memory_used@@Base+0x1ac90>  // b.hs, b.nlast
  477d70:	ldrsw	x1, [sp, #1684]
  477d74:	ldr	x0, [sp, #1328]
  477d78:	sub	x0, x1, x0
  477d7c:	str	x0, [sp, #1304]
  477d80:	ldr	w0, [sp, #1732]
  477d84:	cmp	w0, #0x30
  477d88:	b.ne	477db0 <_obstack_memory_used@@Base+0x1ac70>  // b.any
  477d8c:	ldr	x2, [sp, #1304]
  477d90:	mov	w1, #0x30                  	// #48
  477d94:	ldr	x0, [sp, #1744]
  477d98:	bl	4044d0 <memset@plt>
  477d9c:	ldr	x1, [sp, #1744]
  477da0:	ldr	x0, [sp, #1304]
  477da4:	add	x0, x1, x0
  477da8:	str	x0, [sp, #1744]
  477dac:	b	477dd0 <_obstack_memory_used@@Base+0x1ac90>
  477db0:	ldr	x2, [sp, #1304]
  477db4:	mov	w1, #0x20                  	// #32
  477db8:	ldr	x0, [sp, #1744]
  477dbc:	bl	4044d0 <memset@plt>
  477dc0:	ldr	x1, [sp, #1744]
  477dc4:	ldr	x0, [sp, #1304]
  477dc8:	add	x0, x1, x0
  477dcc:	str	x0, [sp, #1744]
  477dd0:	ldr	x0, [sp, #1744]
  477dd4:	ldrb	w1, [sp, #1443]
  477dd8:	strb	w1, [x0]
  477ddc:	ldr	x1, [sp, #1744]
  477de0:	ldr	x0, [sp, #1328]
  477de4:	add	x0, x1, x0
  477de8:	str	x0, [sp, #1744]
  477dec:	ldr	x1, [sp, #1752]
  477df0:	ldr	x0, [sp, #1312]
  477df4:	add	x0, x1, x0
  477df8:	str	x0, [sp, #1752]
  477dfc:	b	478290 <_obstack_memory_used@@Base+0x1b150>
  477e00:	ldr	w1, [sp, #1724]
  477e04:	add	x0, sp, #0x458
  477e08:	add	x0, x0, #0x17
  477e0c:	ldr	x2, [sp, #1688]
  477e10:	sub	x0, x0, x2
  477e14:	sub	w0, w1, w0
  477e18:	ldrb	w1, [sp, #1443]
  477e1c:	cmp	w1, #0x0
  477e20:	cset	w1, ne  // ne = any
  477e24:	and	w1, w1, #0xff
  477e28:	sub	w0, w0, w1
  477e2c:	str	w0, [sp, #1436]
  477e30:	ldr	w0, [sp, #1436]
  477e34:	cmp	w0, #0x0
  477e38:	b.le	478174 <_obstack_memory_used@@Base+0x1b034>
  477e3c:	ldr	w0, [sp, #1732]
  477e40:	cmp	w0, #0x5f
  477e44:	b.ne	477ff0 <_obstack_memory_used@@Base+0x1aeb0>  // b.any
  477e48:	ldrsw	x1, [sp, #1436]
  477e4c:	ldr	x2, [sp, #64]
  477e50:	ldr	x0, [sp, #1752]
  477e54:	sub	x0, x2, x0
  477e58:	cmp	x1, x0
  477e5c:	b.cc	477e68 <_obstack_memory_used@@Base+0x1ad28>  // b.lo, b.ul, b.last
  477e60:	mov	x0, #0x0                   	// #0
  477e64:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  477e68:	ldr	x0, [sp, #1744]
  477e6c:	cmp	x0, #0x0
  477e70:	b.eq	477e98 <_obstack_memory_used@@Base+0x1ad58>  // b.none
  477e74:	ldrsw	x0, [sp, #1436]
  477e78:	mov	x2, x0
  477e7c:	mov	w1, #0x20                  	// #32
  477e80:	ldr	x0, [sp, #1744]
  477e84:	bl	4044d0 <memset@plt>
  477e88:	ldrsw	x0, [sp, #1436]
  477e8c:	ldr	x1, [sp, #1744]
  477e90:	add	x0, x1, x0
  477e94:	str	x0, [sp, #1744]
  477e98:	ldrsw	x0, [sp, #1436]
  477e9c:	ldr	x1, [sp, #1752]
  477ea0:	add	x0, x1, x0
  477ea4:	str	x0, [sp, #1752]
  477ea8:	ldr	w1, [sp, #1684]
  477eac:	ldr	w0, [sp, #1436]
  477eb0:	cmp	w1, w0
  477eb4:	b.le	477ec8 <_obstack_memory_used@@Base+0x1ad88>
  477eb8:	ldr	w1, [sp, #1684]
  477ebc:	ldr	w0, [sp, #1436]
  477ec0:	sub	w0, w1, w0
  477ec4:	b	477ecc <_obstack_memory_used@@Base+0x1ad8c>
  477ec8:	mov	w0, #0x0                   	// #0
  477ecc:	str	w0, [sp, #1684]
  477ed0:	ldrb	w0, [sp, #1443]
  477ed4:	cmp	w0, #0x0
  477ed8:	b.eq	478290 <_obstack_memory_used@@Base+0x1b150>  // b.none
  477edc:	mov	x0, #0x1                   	// #1
  477ee0:	str	x0, [sp, #1360]
  477ee4:	ldr	w1, [sp, #1684]
  477ee8:	ldr	w0, [sp, #1684]
  477eec:	mov	w2, #0x0                   	// #0
  477ef0:	cmp	w1, #0x0
  477ef4:	csel	w0, w0, w2, ge  // ge = tcont
  477ef8:	sxtw	x0, w0
  477efc:	str	x0, [sp, #1352]
  477f00:	ldr	x0, [sp, #1352]
  477f04:	ldr	x2, [sp, #1360]
  477f08:	ldr	x1, [sp, #1360]
  477f0c:	cmp	x2, x0
  477f10:	csel	x0, x1, x0, cs  // cs = hs, nlast
  477f14:	str	x0, [sp, #1344]
  477f18:	ldr	x1, [sp, #64]
  477f1c:	ldr	x0, [sp, #1752]
  477f20:	sub	x0, x1, x0
  477f24:	ldr	x1, [sp, #1344]
  477f28:	cmp	x1, x0
  477f2c:	b.cc	477f38 <_obstack_memory_used@@Base+0x1adf8>  // b.lo, b.ul, b.last
  477f30:	mov	x0, #0x0                   	// #0
  477f34:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  477f38:	ldr	x0, [sp, #1744]
  477f3c:	cmp	x0, #0x0
  477f40:	b.eq	477fdc <_obstack_memory_used@@Base+0x1ae9c>  // b.none
  477f44:	ldr	w0, [sp, #1724]
  477f48:	cmp	w0, #0x0
  477f4c:	b.ne	477fc0 <_obstack_memory_used@@Base+0x1ae80>  // b.any
  477f50:	ldr	x1, [sp, #1360]
  477f54:	ldr	x0, [sp, #1352]
  477f58:	cmp	x1, x0
  477f5c:	b.cs	477fc0 <_obstack_memory_used@@Base+0x1ae80>  // b.hs, b.nlast
  477f60:	ldrsw	x1, [sp, #1684]
  477f64:	ldr	x0, [sp, #1360]
  477f68:	sub	x0, x1, x0
  477f6c:	str	x0, [sp, #1336]
  477f70:	ldr	w0, [sp, #1732]
  477f74:	cmp	w0, #0x30
  477f78:	b.ne	477fa0 <_obstack_memory_used@@Base+0x1ae60>  // b.any
  477f7c:	ldr	x2, [sp, #1336]
  477f80:	mov	w1, #0x30                  	// #48
  477f84:	ldr	x0, [sp, #1744]
  477f88:	bl	4044d0 <memset@plt>
  477f8c:	ldr	x1, [sp, #1744]
  477f90:	ldr	x0, [sp, #1336]
  477f94:	add	x0, x1, x0
  477f98:	str	x0, [sp, #1744]
  477f9c:	b	477fc0 <_obstack_memory_used@@Base+0x1ae80>
  477fa0:	ldr	x2, [sp, #1336]
  477fa4:	mov	w1, #0x20                  	// #32
  477fa8:	ldr	x0, [sp, #1744]
  477fac:	bl	4044d0 <memset@plt>
  477fb0:	ldr	x1, [sp, #1744]
  477fb4:	ldr	x0, [sp, #1336]
  477fb8:	add	x0, x1, x0
  477fbc:	str	x0, [sp, #1744]
  477fc0:	ldr	x0, [sp, #1744]
  477fc4:	ldrb	w1, [sp, #1443]
  477fc8:	strb	w1, [x0]
  477fcc:	ldr	x1, [sp, #1744]
  477fd0:	ldr	x0, [sp, #1360]
  477fd4:	add	x0, x1, x0
  477fd8:	str	x0, [sp, #1744]
  477fdc:	ldr	x1, [sp, #1752]
  477fe0:	ldr	x0, [sp, #1344]
  477fe4:	add	x0, x1, x0
  477fe8:	str	x0, [sp, #1752]
  477fec:	b	478290 <_obstack_memory_used@@Base+0x1b150>
  477ff0:	ldrsw	x1, [sp, #1724]
  477ff4:	ldr	x2, [sp, #64]
  477ff8:	ldr	x0, [sp, #1752]
  477ffc:	sub	x0, x2, x0
  478000:	cmp	x1, x0
  478004:	b.cc	478010 <_obstack_memory_used@@Base+0x1aed0>  // b.lo, b.ul, b.last
  478008:	mov	x0, #0x0                   	// #0
  47800c:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  478010:	ldrb	w0, [sp, #1443]
  478014:	cmp	w0, #0x0
  478018:	b.eq	47812c <_obstack_memory_used@@Base+0x1afec>  // b.none
  47801c:	mov	x0, #0x1                   	// #1
  478020:	str	x0, [sp, #1392]
  478024:	ldr	w1, [sp, #1684]
  478028:	ldr	w0, [sp, #1684]
  47802c:	mov	w2, #0x0                   	// #0
  478030:	cmp	w1, #0x0
  478034:	csel	w0, w0, w2, ge  // ge = tcont
  478038:	sxtw	x0, w0
  47803c:	str	x0, [sp, #1384]
  478040:	ldr	x0, [sp, #1384]
  478044:	ldr	x2, [sp, #1392]
  478048:	ldr	x1, [sp, #1392]
  47804c:	cmp	x2, x0
  478050:	csel	x0, x1, x0, cs  // cs = hs, nlast
  478054:	str	x0, [sp, #1376]
  478058:	ldr	x1, [sp, #64]
  47805c:	ldr	x0, [sp, #1752]
  478060:	sub	x0, x1, x0
  478064:	ldr	x1, [sp, #1376]
  478068:	cmp	x1, x0
  47806c:	b.cc	478078 <_obstack_memory_used@@Base+0x1af38>  // b.lo, b.ul, b.last
  478070:	mov	x0, #0x0                   	// #0
  478074:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  478078:	ldr	x0, [sp, #1744]
  47807c:	cmp	x0, #0x0
  478080:	b.eq	47811c <_obstack_memory_used@@Base+0x1afdc>  // b.none
  478084:	ldr	w0, [sp, #1724]
  478088:	cmp	w0, #0x0
  47808c:	b.ne	478100 <_obstack_memory_used@@Base+0x1afc0>  // b.any
  478090:	ldr	x1, [sp, #1392]
  478094:	ldr	x0, [sp, #1384]
  478098:	cmp	x1, x0
  47809c:	b.cs	478100 <_obstack_memory_used@@Base+0x1afc0>  // b.hs, b.nlast
  4780a0:	ldrsw	x1, [sp, #1684]
  4780a4:	ldr	x0, [sp, #1392]
  4780a8:	sub	x0, x1, x0
  4780ac:	str	x0, [sp, #1368]
  4780b0:	ldr	w0, [sp, #1732]
  4780b4:	cmp	w0, #0x30
  4780b8:	b.ne	4780e0 <_obstack_memory_used@@Base+0x1afa0>  // b.any
  4780bc:	ldr	x2, [sp, #1368]
  4780c0:	mov	w1, #0x30                  	// #48
  4780c4:	ldr	x0, [sp, #1744]
  4780c8:	bl	4044d0 <memset@plt>
  4780cc:	ldr	x1, [sp, #1744]
  4780d0:	ldr	x0, [sp, #1368]
  4780d4:	add	x0, x1, x0
  4780d8:	str	x0, [sp, #1744]
  4780dc:	b	478100 <_obstack_memory_used@@Base+0x1afc0>
  4780e0:	ldr	x2, [sp, #1368]
  4780e4:	mov	w1, #0x20                  	// #32
  4780e8:	ldr	x0, [sp, #1744]
  4780ec:	bl	4044d0 <memset@plt>
  4780f0:	ldr	x1, [sp, #1744]
  4780f4:	ldr	x0, [sp, #1368]
  4780f8:	add	x0, x1, x0
  4780fc:	str	x0, [sp, #1744]
  478100:	ldr	x0, [sp, #1744]
  478104:	ldrb	w1, [sp, #1443]
  478108:	strb	w1, [x0]
  47810c:	ldr	x1, [sp, #1744]
  478110:	ldr	x0, [sp, #1392]
  478114:	add	x0, x1, x0
  478118:	str	x0, [sp, #1744]
  47811c:	ldr	x1, [sp, #1752]
  478120:	ldr	x0, [sp, #1376]
  478124:	add	x0, x1, x0
  478128:	str	x0, [sp, #1752]
  47812c:	ldr	x0, [sp, #1744]
  478130:	cmp	x0, #0x0
  478134:	b.eq	47815c <_obstack_memory_used@@Base+0x1b01c>  // b.none
  478138:	ldrsw	x0, [sp, #1436]
  47813c:	mov	x2, x0
  478140:	mov	w1, #0x30                  	// #48
  478144:	ldr	x0, [sp, #1744]
  478148:	bl	4044d0 <memset@plt>
  47814c:	ldrsw	x0, [sp, #1436]
  478150:	ldr	x1, [sp, #1744]
  478154:	add	x0, x1, x0
  478158:	str	x0, [sp, #1744]
  47815c:	ldrsw	x0, [sp, #1436]
  478160:	ldr	x1, [sp, #1752]
  478164:	add	x0, x1, x0
  478168:	str	x0, [sp, #1752]
  47816c:	str	wzr, [sp, #1684]
  478170:	b	478290 <_obstack_memory_used@@Base+0x1b150>
  478174:	ldrb	w0, [sp, #1443]
  478178:	cmp	w0, #0x0
  47817c:	b.eq	478290 <_obstack_memory_used@@Base+0x1b150>  // b.none
  478180:	mov	x0, #0x1                   	// #1
  478184:	str	x0, [sp, #1424]
  478188:	ldr	w1, [sp, #1684]
  47818c:	ldr	w0, [sp, #1684]
  478190:	mov	w2, #0x0                   	// #0
  478194:	cmp	w1, #0x0
  478198:	csel	w0, w0, w2, ge  // ge = tcont
  47819c:	sxtw	x0, w0
  4781a0:	str	x0, [sp, #1416]
  4781a4:	ldr	x0, [sp, #1416]
  4781a8:	ldr	x2, [sp, #1424]
  4781ac:	ldr	x1, [sp, #1424]
  4781b0:	cmp	x2, x0
  4781b4:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4781b8:	str	x0, [sp, #1408]
  4781bc:	ldr	x1, [sp, #64]
  4781c0:	ldr	x0, [sp, #1752]
  4781c4:	sub	x0, x1, x0
  4781c8:	ldr	x1, [sp, #1408]
  4781cc:	cmp	x1, x0
  4781d0:	b.cc	4781dc <_obstack_memory_used@@Base+0x1b09c>  // b.lo, b.ul, b.last
  4781d4:	mov	x0, #0x0                   	// #0
  4781d8:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  4781dc:	ldr	x0, [sp, #1744]
  4781e0:	cmp	x0, #0x0
  4781e4:	b.eq	478280 <_obstack_memory_used@@Base+0x1b140>  // b.none
  4781e8:	ldr	w0, [sp, #1724]
  4781ec:	cmp	w0, #0x0
  4781f0:	b.ne	478264 <_obstack_memory_used@@Base+0x1b124>  // b.any
  4781f4:	ldr	x1, [sp, #1424]
  4781f8:	ldr	x0, [sp, #1416]
  4781fc:	cmp	x1, x0
  478200:	b.cs	478264 <_obstack_memory_used@@Base+0x1b124>  // b.hs, b.nlast
  478204:	ldrsw	x1, [sp, #1684]
  478208:	ldr	x0, [sp, #1424]
  47820c:	sub	x0, x1, x0
  478210:	str	x0, [sp, #1400]
  478214:	ldr	w0, [sp, #1732]
  478218:	cmp	w0, #0x30
  47821c:	b.ne	478244 <_obstack_memory_used@@Base+0x1b104>  // b.any
  478220:	ldr	x2, [sp, #1400]
  478224:	mov	w1, #0x30                  	// #48
  478228:	ldr	x0, [sp, #1744]
  47822c:	bl	4044d0 <memset@plt>
  478230:	ldr	x1, [sp, #1744]
  478234:	ldr	x0, [sp, #1400]
  478238:	add	x0, x1, x0
  47823c:	str	x0, [sp, #1744]
  478240:	b	478264 <_obstack_memory_used@@Base+0x1b124>
  478244:	ldr	x2, [sp, #1400]
  478248:	mov	w1, #0x20                  	// #32
  47824c:	ldr	x0, [sp, #1744]
  478250:	bl	4044d0 <memset@plt>
  478254:	ldr	x1, [sp, #1744]
  478258:	ldr	x0, [sp, #1400]
  47825c:	add	x0, x1, x0
  478260:	str	x0, [sp, #1744]
  478264:	ldr	x0, [sp, #1744]
  478268:	ldrb	w1, [sp, #1443]
  47826c:	strb	w1, [x0]
  478270:	ldr	x1, [sp, #1744]
  478274:	ldr	x0, [sp, #1424]
  478278:	add	x0, x1, x0
  47827c:	str	x0, [sp, #1744]
  478280:	ldr	x1, [sp, #1752]
  478284:	ldr	x0, [sp, #1408]
  478288:	add	x0, x1, x0
  47828c:	str	x0, [sp, #1752]
  478290:	add	x0, sp, #0x458
  478294:	add	x0, x0, #0x17
  478298:	ldr	x1, [sp, #1688]
  47829c:	sub	x0, x0, x1
  4782a0:	str	x0, [sp, #1296]
  4782a4:	ldr	w1, [sp, #1684]
  4782a8:	ldr	w0, [sp, #1684]
  4782ac:	mov	w2, #0x0                   	// #0
  4782b0:	cmp	w1, #0x0
  4782b4:	csel	w0, w0, w2, ge  // ge = tcont
  4782b8:	sxtw	x0, w0
  4782bc:	str	x0, [sp, #1288]
  4782c0:	ldr	x0, [sp, #1288]
  4782c4:	ldr	x2, [sp, #1296]
  4782c8:	ldr	x1, [sp, #1296]
  4782cc:	cmp	x2, x0
  4782d0:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4782d4:	str	x0, [sp, #1280]
  4782d8:	ldr	x1, [sp, #64]
  4782dc:	ldr	x0, [sp, #1752]
  4782e0:	sub	x0, x1, x0
  4782e4:	ldr	x1, [sp, #1280]
  4782e8:	cmp	x1, x0
  4782ec:	b.cc	4782f8 <_obstack_memory_used@@Base+0x1b1b8>  // b.lo, b.ul, b.last
  4782f0:	mov	x0, #0x0                   	// #0
  4782f4:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  4782f8:	ldr	x0, [sp, #1744]
  4782fc:	cmp	x0, #0x0
  478300:	b.eq	4783e0 <_obstack_memory_used@@Base+0x1b2a0>  // b.none
  478304:	ldr	w0, [sp, #1724]
  478308:	cmp	w0, #0x0
  47830c:	b.ne	478380 <_obstack_memory_used@@Base+0x1b240>  // b.any
  478310:	ldr	x1, [sp, #1296]
  478314:	ldr	x0, [sp, #1288]
  478318:	cmp	x1, x0
  47831c:	b.cs	478380 <_obstack_memory_used@@Base+0x1b240>  // b.hs, b.nlast
  478320:	ldrsw	x1, [sp, #1684]
  478324:	ldr	x0, [sp, #1296]
  478328:	sub	x0, x1, x0
  47832c:	str	x0, [sp, #1272]
  478330:	ldr	w0, [sp, #1732]
  478334:	cmp	w0, #0x30
  478338:	b.ne	478360 <_obstack_memory_used@@Base+0x1b220>  // b.any
  47833c:	ldr	x2, [sp, #1272]
  478340:	mov	w1, #0x30                  	// #48
  478344:	ldr	x0, [sp, #1744]
  478348:	bl	4044d0 <memset@plt>
  47834c:	ldr	x1, [sp, #1744]
  478350:	ldr	x0, [sp, #1272]
  478354:	add	x0, x1, x0
  478358:	str	x0, [sp, #1744]
  47835c:	b	478380 <_obstack_memory_used@@Base+0x1b240>
  478360:	ldr	x2, [sp, #1272]
  478364:	mov	w1, #0x20                  	// #32
  478368:	ldr	x0, [sp, #1744]
  47836c:	bl	4044d0 <memset@plt>
  478370:	ldr	x1, [sp, #1744]
  478374:	ldr	x0, [sp, #1272]
  478378:	add	x0, x1, x0
  47837c:	str	x0, [sp, #1744]
  478380:	ldrb	w0, [sp, #1683]
  478384:	cmp	w0, #0x0
  478388:	b.eq	4783a0 <_obstack_memory_used@@Base+0x1b260>  // b.none
  47838c:	ldr	x2, [sp, #1296]
  478390:	ldr	x1, [sp, #1688]
  478394:	ldr	x0, [sp, #1744]
  478398:	bl	476f4c <_obstack_memory_used@@Base+0x19e0c>
  47839c:	b	4783d0 <_obstack_memory_used@@Base+0x1b290>
  4783a0:	ldrb	w0, [sp, #1682]
  4783a4:	cmp	w0, #0x0
  4783a8:	b.eq	4783c0 <_obstack_memory_used@@Base+0x1b280>  // b.none
  4783ac:	ldr	x2, [sp, #1296]
  4783b0:	ldr	x1, [sp, #1688]
  4783b4:	ldr	x0, [sp, #1744]
  4783b8:	bl	476fb0 <_obstack_memory_used@@Base+0x19e70>
  4783bc:	b	4783d0 <_obstack_memory_used@@Base+0x1b290>
  4783c0:	ldr	x2, [sp, #1296]
  4783c4:	ldr	x1, [sp, #1688]
  4783c8:	ldr	x0, [sp, #1744]
  4783cc:	bl	404020 <memcpy@plt>
  4783d0:	ldr	x1, [sp, #1744]
  4783d4:	ldr	x0, [sp, #1296]
  4783d8:	add	x0, x1, x0
  4783dc:	str	x0, [sp, #1744]
  4783e0:	ldr	x1, [sp, #1752]
  4783e4:	ldr	x0, [sp, #1280]
  4783e8:	add	x0, x1, x0
  4783ec:	str	x0, [sp, #1752]
  4783f0:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  4783f4:	ldr	w0, [sp, #1728]
  4783f8:	cmp	w0, #0x0
  4783fc:	b.ne	47934c <_obstack_memory_used@@Base+0x1c20c>  // b.any
  478400:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  478404:	add	x0, x0, #0x988
  478408:	str	x0, [sp, #1696]
  47840c:	b	47763c <_obstack_memory_used@@Base+0x1a4fc>
  478410:	ldr	w0, [sp, #1728]
  478414:	cmp	w0, #0x45
  478418:	b.eq	479354 <_obstack_memory_used@@Base+0x1c214>  // b.none
  47841c:	mov	w0, #0x2                   	// #2
  478420:	str	w0, [sp, #1724]
  478424:	ldr	x0, [sp, #48]
  478428:	ldr	w0, [x0, #8]
  47842c:	str	w0, [sp, #1720]
  478430:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478434:	ldr	w0, [sp, #1728]
  478438:	cmp	w0, #0x45
  47843c:	b.eq	47935c <_obstack_memory_used@@Base+0x1c21c>  // b.none
  478440:	mov	w0, #0x2                   	// #2
  478444:	str	w0, [sp, #1724]
  478448:	ldr	w0, [sp, #1772]
  47844c:	str	w0, [sp, #1720]
  478450:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478454:	ldr	w0, [sp, #1728]
  478458:	cmp	w0, #0x45
  47845c:	b.eq	479364 <_obstack_memory_used@@Base+0x1c224>  // b.none
  478460:	mov	w0, #0x2                   	// #2
  478464:	str	w0, [sp, #1724]
  478468:	ldr	x0, [sp, #48]
  47846c:	ldr	w0, [x0, #8]
  478470:	str	w0, [sp, #1720]
  478474:	b	477b4c <_obstack_memory_used@@Base+0x1aa0c>
  478478:	ldr	w0, [sp, #1728]
  47847c:	cmp	w0, #0x45
  478480:	b.eq	47936c <_obstack_memory_used@@Base+0x1c22c>  // b.none
  478484:	mov	w0, #0x2                   	// #2
  478488:	str	w0, [sp, #1724]
  47848c:	ldr	w0, [sp, #1772]
  478490:	str	w0, [sp, #1720]
  478494:	b	477b4c <_obstack_memory_used@@Base+0x1aa0c>
  478498:	ldr	w0, [sp, #1728]
  47849c:	cmp	w0, #0x45
  4784a0:	b.eq	479374 <_obstack_memory_used@@Base+0x1c234>  // b.none
  4784a4:	mov	w0, #0x3                   	// #3
  4784a8:	str	w0, [sp, #1724]
  4784ac:	ldr	x0, [sp, #48]
  4784b0:	ldr	w0, [x0, #28]
  4784b4:	cmn	w0, #0x1
  4784b8:	cset	w0, lt  // lt = tstop
  4784bc:	strb	w0, [sp, #1715]
  4784c0:	ldr	x0, [sp, #48]
  4784c4:	ldr	w0, [x0, #28]
  4784c8:	add	w0, w0, #0x1
  4784cc:	str	w0, [sp, #1716]
  4784d0:	b	477b88 <_obstack_memory_used@@Base+0x1aa48>
  4784d4:	ldr	w0, [sp, #1728]
  4784d8:	cmp	w0, #0x45
  4784dc:	b.eq	47937c <_obstack_memory_used@@Base+0x1c23c>  // b.none
  4784e0:	mov	w0, #0x2                   	// #2
  4784e4:	str	w0, [sp, #1724]
  4784e8:	ldr	x0, [sp, #48]
  4784ec:	ldr	w0, [x0, #4]
  4784f0:	str	w0, [sp, #1720]
  4784f4:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  4784f8:	ldr	w0, [sp, #1728]
  4784fc:	cmp	w0, #0x45
  478500:	b.eq	479384 <_obstack_memory_used@@Base+0x1c244>  // b.none
  478504:	mov	w0, #0x2                   	// #2
  478508:	str	w0, [sp, #1724]
  47850c:	ldr	x0, [sp, #48]
  478510:	ldr	w0, [x0, #16]
  478514:	cmn	w0, #0x1
  478518:	cset	w0, lt  // lt = tstop
  47851c:	strb	w0, [sp, #1715]
  478520:	ldr	x0, [sp, #48]
  478524:	ldr	w0, [x0, #16]
  478528:	add	w0, w0, #0x1
  47852c:	str	w0, [sp, #1716]
  478530:	b	477b88 <_obstack_memory_used@@Base+0x1aa48>
  478534:	ldr	w0, [sp, #1728]
  478538:	cmp	w0, #0x45
  47853c:	b.eq	47938c <_obstack_memory_used@@Base+0x1c24c>  // b.none
  478540:	ldr	w0, [sp, #40]
  478544:	str	w0, [sp, #1720]
  478548:	ldr	w0, [sp, #1684]
  47854c:	cmn	w0, #0x1
  478550:	b.ne	478560 <_obstack_memory_used@@Base+0x1b420>  // b.any
  478554:	mov	w0, #0x9                   	// #9
  478558:	str	w0, [sp, #1684]
  47855c:	b	4785a8 <_obstack_memory_used@@Base+0x1b468>
  478560:	ldr	w0, [sp, #1684]
  478564:	str	w0, [sp, #1652]
  478568:	b	47859c <_obstack_memory_used@@Base+0x1b45c>
  47856c:	ldr	w0, [sp, #1720]
  478570:	mov	w1, #0x6667                	// #26215
  478574:	movk	w1, #0x6666, lsl #16
  478578:	smull	x1, w0, w1
  47857c:	lsr	x1, x1, #32
  478580:	asr	w1, w1, #2
  478584:	asr	w0, w0, #31
  478588:	sub	w0, w1, w0
  47858c:	str	w0, [sp, #1720]
  478590:	ldr	w0, [sp, #1652]
  478594:	add	w0, w0, #0x1
  478598:	str	w0, [sp, #1652]
  47859c:	ldr	w0, [sp, #1652]
  4785a0:	cmp	w0, #0x8
  4785a4:	b.le	47856c <_obstack_memory_used@@Base+0x1b42c>
  4785a8:	ldr	w0, [sp, #1684]
  4785ac:	str	w0, [sp, #1724]
  4785b0:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  4785b4:	mov	x0, #0x1                   	// #1
  4785b8:	str	x0, [sp, #1576]
  4785bc:	ldr	w1, [sp, #1684]
  4785c0:	ldr	w0, [sp, #1684]
  4785c4:	mov	w2, #0x0                   	// #0
  4785c8:	cmp	w1, #0x0
  4785cc:	csel	w0, w0, w2, ge  // ge = tcont
  4785d0:	sxtw	x0, w0
  4785d4:	str	x0, [sp, #1568]
  4785d8:	ldr	x0, [sp, #1568]
  4785dc:	ldr	x2, [sp, #1576]
  4785e0:	ldr	x1, [sp, #1576]
  4785e4:	cmp	x2, x0
  4785e8:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4785ec:	str	x0, [sp, #1560]
  4785f0:	ldr	x1, [sp, #64]
  4785f4:	ldr	x0, [sp, #1752]
  4785f8:	sub	x0, x1, x0
  4785fc:	ldr	x1, [sp, #1560]
  478600:	cmp	x1, x0
  478604:	b.cc	478610 <_obstack_memory_used@@Base+0x1b4d0>  // b.lo, b.ul, b.last
  478608:	mov	x0, #0x0                   	// #0
  47860c:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  478610:	ldr	x0, [sp, #1744]
  478614:	cmp	x0, #0x0
  478618:	b.eq	4786b4 <_obstack_memory_used@@Base+0x1b574>  // b.none
  47861c:	ldr	w0, [sp, #1724]
  478620:	cmp	w0, #0x0
  478624:	b.ne	478698 <_obstack_memory_used@@Base+0x1b558>  // b.any
  478628:	ldr	x1, [sp, #1576]
  47862c:	ldr	x0, [sp, #1568]
  478630:	cmp	x1, x0
  478634:	b.cs	478698 <_obstack_memory_used@@Base+0x1b558>  // b.hs, b.nlast
  478638:	ldrsw	x1, [sp, #1684]
  47863c:	ldr	x0, [sp, #1576]
  478640:	sub	x0, x1, x0
  478644:	str	x0, [sp, #1552]
  478648:	ldr	w0, [sp, #1732]
  47864c:	cmp	w0, #0x30
  478650:	b.ne	478678 <_obstack_memory_used@@Base+0x1b538>  // b.any
  478654:	ldr	x2, [sp, #1552]
  478658:	mov	w1, #0x30                  	// #48
  47865c:	ldr	x0, [sp, #1744]
  478660:	bl	4044d0 <memset@plt>
  478664:	ldr	x1, [sp, #1744]
  478668:	ldr	x0, [sp, #1552]
  47866c:	add	x0, x1, x0
  478670:	str	x0, [sp, #1744]
  478674:	b	478698 <_obstack_memory_used@@Base+0x1b558>
  478678:	ldr	x2, [sp, #1552]
  47867c:	mov	w1, #0x20                  	// #32
  478680:	ldr	x0, [sp, #1744]
  478684:	bl	4044d0 <memset@plt>
  478688:	ldr	x1, [sp, #1744]
  47868c:	ldr	x0, [sp, #1552]
  478690:	add	x0, x1, x0
  478694:	str	x0, [sp, #1744]
  478698:	ldr	x0, [sp, #1744]
  47869c:	mov	w1, #0xa                   	// #10
  4786a0:	strb	w1, [x0]
  4786a4:	ldr	x1, [sp, #1744]
  4786a8:	ldr	x0, [sp, #1576]
  4786ac:	add	x0, x1, x0
  4786b0:	str	x0, [sp, #1744]
  4786b4:	ldr	x1, [sp, #1752]
  4786b8:	ldr	x0, [sp, #1560]
  4786bc:	add	x0, x1, x0
  4786c0:	str	x0, [sp, #1752]
  4786c4:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  4786c8:	mov	w0, #0x1                   	// #1
  4786cc:	strb	w0, [sp, #1683]
  4786d0:	mov	w0, #0x70                  	// #112
  4786d4:	str	w0, [sp, #1664]
  4786d8:	ldrb	w0, [sp, #1671]
  4786dc:	cmp	w0, #0x0
  4786e0:	b.eq	4777e4 <_obstack_memory_used@@Base+0x1a6a4>  // b.none
  4786e4:	strb	wzr, [sp, #1682]
  4786e8:	mov	w0, #0x1                   	// #1
  4786ec:	strb	w0, [sp, #1683]
  4786f0:	b	4777e4 <_obstack_memory_used@@Base+0x1a6a4>
  4786f4:	mov	w0, #0x1                   	// #1
  4786f8:	str	w0, [sp, #1724]
  4786fc:	strb	wzr, [sp, #1715]
  478700:	ldr	x0, [sp, #48]
  478704:	ldr	w1, [x0, #16]
  478708:	mov	w0, #0xb                   	// #11
  47870c:	mul	w0, w1, w0
  478710:	asr	w0, w0, #5
  478714:	add	w0, w0, #0x1
  478718:	str	w0, [sp, #1716]
  47871c:	b	477b88 <_obstack_memory_used@@Base+0x1aa48>
  478720:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  478724:	add	x0, x0, #0x998
  478728:	str	x0, [sp, #1696]
  47872c:	b	47763c <_obstack_memory_used@@Base+0x1a4fc>
  478730:	ldr	w0, [sp, #1728]
  478734:	cmp	w0, #0x45
  478738:	b.eq	479394 <_obstack_memory_used@@Base+0x1c254>  // b.none
  47873c:	mov	w0, #0x2                   	// #2
  478740:	str	w0, [sp, #1724]
  478744:	ldr	x0, [sp, #48]
  478748:	ldr	w0, [x0]
  47874c:	str	w0, [sp, #1720]
  478750:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478754:	ldr	x1, [sp, #48]
  478758:	add	x0, sp, #0x50
  47875c:	ldp	x2, x3, [x1]
  478760:	stp	x2, x3, [x0]
  478764:	ldp	x2, x3, [x1, #16]
  478768:	stp	x2, x3, [x0, #16]
  47876c:	ldp	x2, x3, [x1, #32]
  478770:	stp	x2, x3, [x0, #32]
  478774:	ldr	x1, [x1, #48]
  478778:	str	x1, [x0, #48]
  47877c:	add	x0, sp, #0x50
  478780:	mov	x1, x0
  478784:	ldr	x0, [sp, #24]
  478788:	bl	475388 <_obstack_memory_used@@Base+0x18248>
  47878c:	str	x0, [sp, #1640]
  478790:	add	x0, sp, #0x458
  478794:	add	x0, x0, #0x17
  478798:	str	x0, [sp, #1688]
  47879c:	ldr	x0, [sp, #1640]
  4787a0:	lsr	x0, x0, #63
  4787a4:	strb	w0, [sp, #1715]
  4787a8:	ldr	x1, [sp, #1640]
  4787ac:	mov	x0, #0x6666666666666666    	// #7378697629483820646
  4787b0:	movk	x0, #0x6667
  4787b4:	smulh	x0, x1, x0
  4787b8:	asr	x2, x0, #2
  4787bc:	asr	x0, x1, #63
  4787c0:	sub	x2, x2, x0
  4787c4:	mov	x0, x2
  4787c8:	lsl	x0, x0, #2
  4787cc:	add	x0, x0, x2
  4787d0:	lsl	x0, x0, #1
  4787d4:	sub	x2, x1, x0
  4787d8:	mov	w0, w2
  4787dc:	str	w0, [sp, #1588]
  4787e0:	ldr	x0, [sp, #1640]
  4787e4:	mov	x1, #0x6666666666666666    	// #7378697629483820646
  4787e8:	movk	x1, #0x6667
  4787ec:	smulh	x1, x0, x1
  4787f0:	asr	x1, x1, #2
  4787f4:	asr	x0, x0, #63
  4787f8:	sub	x0, x1, x0
  4787fc:	str	x0, [sp, #1640]
  478800:	ldrb	w0, [sp, #1715]
  478804:	cmp	w0, #0x0
  478808:	b.eq	478824 <_obstack_memory_used@@Base+0x1b6e4>  // b.none
  47880c:	ldr	w0, [sp, #1588]
  478810:	and	w0, w0, #0xff
  478814:	mov	w1, #0x30                  	// #48
  478818:	sub	w0, w1, w0
  47881c:	and	w0, w0, #0xff
  478820:	b	478834 <_obstack_memory_used@@Base+0x1b6f4>
  478824:	ldr	w0, [sp, #1588]
  478828:	and	w0, w0, #0xff
  47882c:	add	w0, w0, #0x30
  478830:	and	w0, w0, #0xff
  478834:	ldr	x1, [sp, #1688]
  478838:	sub	x1, x1, #0x1
  47883c:	str	x1, [sp, #1688]
  478840:	ldr	x1, [sp, #1688]
  478844:	strb	w0, [x1]
  478848:	ldr	x0, [sp, #1640]
  47884c:	cmp	x0, #0x0
  478850:	b.ne	4787a8 <_obstack_memory_used@@Base+0x1b668>  // b.any
  478854:	mov	w0, #0x1                   	// #1
  478858:	str	w0, [sp, #1724]
  47885c:	strb	wzr, [sp, #1714]
  478860:	b	477c8c <_obstack_memory_used@@Base+0x1ab4c>
  478864:	ldr	w0, [sp, #1728]
  478868:	cmp	w0, #0x4f
  47886c:	b.ne	4777ec <_obstack_memory_used@@Base+0x1a6ac>  // b.any
  478870:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  478874:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  478878:	add	x0, x0, #0x9a0
  47887c:	str	x0, [sp, #1696]
  478880:	b	47763c <_obstack_memory_used@@Base+0x1a4fc>
  478884:	mov	x0, #0x1                   	// #1
  478888:	str	x0, [sp, #1616]
  47888c:	ldr	w1, [sp, #1684]
  478890:	ldr	w0, [sp, #1684]
  478894:	mov	w2, #0x0                   	// #0
  478898:	cmp	w1, #0x0
  47889c:	csel	w0, w0, w2, ge  // ge = tcont
  4788a0:	sxtw	x0, w0
  4788a4:	str	x0, [sp, #1608]
  4788a8:	ldr	x0, [sp, #1608]
  4788ac:	ldr	x2, [sp, #1616]
  4788b0:	ldr	x1, [sp, #1616]
  4788b4:	cmp	x2, x0
  4788b8:	csel	x0, x1, x0, cs  // cs = hs, nlast
  4788bc:	str	x0, [sp, #1600]
  4788c0:	ldr	x1, [sp, #64]
  4788c4:	ldr	x0, [sp, #1752]
  4788c8:	sub	x0, x1, x0
  4788cc:	ldr	x1, [sp, #1600]
  4788d0:	cmp	x1, x0
  4788d4:	b.cc	4788e0 <_obstack_memory_used@@Base+0x1b7a0>  // b.lo, b.ul, b.last
  4788d8:	mov	x0, #0x0                   	// #0
  4788dc:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  4788e0:	ldr	x0, [sp, #1744]
  4788e4:	cmp	x0, #0x0
  4788e8:	b.eq	478984 <_obstack_memory_used@@Base+0x1b844>  // b.none
  4788ec:	ldr	w0, [sp, #1724]
  4788f0:	cmp	w0, #0x0
  4788f4:	b.ne	478968 <_obstack_memory_used@@Base+0x1b828>  // b.any
  4788f8:	ldr	x1, [sp, #1616]
  4788fc:	ldr	x0, [sp, #1608]
  478900:	cmp	x1, x0
  478904:	b.cs	478968 <_obstack_memory_used@@Base+0x1b828>  // b.hs, b.nlast
  478908:	ldrsw	x1, [sp, #1684]
  47890c:	ldr	x0, [sp, #1616]
  478910:	sub	x0, x1, x0
  478914:	str	x0, [sp, #1592]
  478918:	ldr	w0, [sp, #1732]
  47891c:	cmp	w0, #0x30
  478920:	b.ne	478948 <_obstack_memory_used@@Base+0x1b808>  // b.any
  478924:	ldr	x2, [sp, #1592]
  478928:	mov	w1, #0x30                  	// #48
  47892c:	ldr	x0, [sp, #1744]
  478930:	bl	4044d0 <memset@plt>
  478934:	ldr	x1, [sp, #1744]
  478938:	ldr	x0, [sp, #1592]
  47893c:	add	x0, x1, x0
  478940:	str	x0, [sp, #1744]
  478944:	b	478968 <_obstack_memory_used@@Base+0x1b828>
  478948:	ldr	x2, [sp, #1592]
  47894c:	mov	w1, #0x20                  	// #32
  478950:	ldr	x0, [sp, #1744]
  478954:	bl	4044d0 <memset@plt>
  478958:	ldr	x1, [sp, #1744]
  47895c:	ldr	x0, [sp, #1592]
  478960:	add	x0, x1, x0
  478964:	str	x0, [sp, #1744]
  478968:	ldr	x0, [sp, #1744]
  47896c:	mov	w1, #0x9                   	// #9
  478970:	strb	w1, [x0]
  478974:	ldr	x1, [sp, #1744]
  478978:	ldr	x0, [sp, #1616]
  47897c:	add	x0, x1, x0
  478980:	str	x0, [sp, #1744]
  478984:	ldr	x1, [sp, #1752]
  478988:	ldr	x0, [sp, #1600]
  47898c:	add	x0, x1, x0
  478990:	str	x0, [sp, #1752]
  478994:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  478998:	mov	w0, #0x1                   	// #1
  47899c:	str	w0, [sp, #1724]
  4789a0:	ldr	x0, [sp, #48]
  4789a4:	ldr	w0, [x0, #24]
  4789a8:	add	w0, w0, #0x6
  4789ac:	mov	w1, #0x2493                	// #9363
  4789b0:	movk	w1, #0x9249, lsl #16
  4789b4:	smull	x1, w0, w1
  4789b8:	lsr	x1, x1, #32
  4789bc:	add	w1, w0, w1
  4789c0:	asr	w2, w1, #2
  4789c4:	asr	w1, w0, #31
  4789c8:	sub	w2, w2, w1
  4789cc:	mov	w1, w2
  4789d0:	lsl	w1, w1, #3
  4789d4:	sub	w1, w1, w2
  4789d8:	sub	w2, w0, w1
  4789dc:	add	w0, w2, #0x1
  4789e0:	str	w0, [sp, #1720]
  4789e4:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  4789e8:	ldr	w0, [sp, #1728]
  4789ec:	cmp	w0, #0x45
  4789f0:	b.eq	47939c <_obstack_memory_used@@Base+0x1c25c>  // b.none
  4789f4:	mov	w0, #0x2                   	// #2
  4789f8:	str	w0, [sp, #1724]
  4789fc:	ldr	x0, [sp, #48]
  478a00:	ldr	w1, [x0, #28]
  478a04:	ldr	x0, [sp, #48]
  478a08:	ldr	w0, [x0, #24]
  478a0c:	sub	w0, w1, w0
  478a10:	add	w0, w0, #0x7
  478a14:	mov	w1, #0x2493                	// #9363
  478a18:	movk	w1, #0x9249, lsl #16
  478a1c:	smull	x1, w0, w1
  478a20:	lsr	x1, x1, #32
  478a24:	add	w1, w0, w1
  478a28:	asr	w1, w1, #2
  478a2c:	asr	w0, w0, #31
  478a30:	sub	w0, w1, w0
  478a34:	str	w0, [sp, #1720]
  478a38:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478a3c:	ldr	w0, [sp, #1728]
  478a40:	cmp	w0, #0x45
  478a44:	b.eq	4793a4 <_obstack_memory_used@@Base+0x1c264>  // b.none
  478a48:	ldr	x0, [sp, #48]
  478a4c:	ldr	w1, [x0, #20]
  478a50:	ldr	x0, [sp, #48]
  478a54:	ldr	w0, [x0, #20]
  478a58:	cmp	w0, #0x0
  478a5c:	b.ge	478a68 <_obstack_memory_used@@Base+0x1b928>  // b.tcont
  478a60:	mov	w0, #0x12c                 	// #300
  478a64:	b	478a6c <_obstack_memory_used@@Base+0x1b92c>
  478a68:	mov	w0, #0xffffff9c            	// #-100
  478a6c:	add	w0, w0, w1
  478a70:	str	w0, [sp, #1516]
  478a74:	str	wzr, [sp, #1636]
  478a78:	ldr	x0, [sp, #48]
  478a7c:	ldr	w2, [x0, #28]
  478a80:	ldr	x0, [sp, #48]
  478a84:	ldr	w0, [x0, #24]
  478a88:	mov	w1, w0
  478a8c:	mov	w0, w2
  478a90:	bl	477014 <_obstack_memory_used@@Base+0x19ed4>
  478a94:	str	w0, [sp, #1632]
  478a98:	ldr	w0, [sp, #1632]
  478a9c:	cmp	w0, #0x0
  478aa0:	b.ge	478b68 <_obstack_memory_used@@Base+0x1ba28>  // b.tcont
  478aa4:	mov	w0, #0xffffffff            	// #-1
  478aa8:	str	w0, [sp, #1636]
  478aac:	ldr	x0, [sp, #48]
  478ab0:	ldr	w2, [x0, #28]
  478ab4:	ldr	w0, [sp, #1516]
  478ab8:	sub	w0, w0, #0x1
  478abc:	and	w0, w0, #0x3
  478ac0:	cmp	w0, #0x0
  478ac4:	b.ne	478b40 <_obstack_memory_used@@Base+0x1ba00>  // b.any
  478ac8:	ldr	w0, [sp, #1516]
  478acc:	sub	w1, w0, #0x1
  478ad0:	mov	w0, #0x851f                	// #34079
  478ad4:	movk	w0, #0x51eb, lsl #16
  478ad8:	smull	x0, w1, w0
  478adc:	lsr	x0, x0, #32
  478ae0:	asr	w3, w0, #5
  478ae4:	asr	w0, w1, #31
  478ae8:	sub	w0, w3, w0
  478aec:	mov	w3, #0x64                  	// #100
  478af0:	mul	w0, w0, w3
  478af4:	sub	w0, w1, w0
  478af8:	cmp	w0, #0x0
  478afc:	b.ne	478b38 <_obstack_memory_used@@Base+0x1b9f8>  // b.any
  478b00:	ldr	w0, [sp, #1516]
  478b04:	sub	w1, w0, #0x1
  478b08:	mov	w0, #0x851f                	// #34079
  478b0c:	movk	w0, #0x51eb, lsl #16
  478b10:	smull	x0, w1, w0
  478b14:	lsr	x0, x0, #32
  478b18:	asr	w3, w0, #7
  478b1c:	asr	w0, w1, #31
  478b20:	sub	w0, w3, w0
  478b24:	mov	w3, #0x190                 	// #400
  478b28:	mul	w0, w0, w3
  478b2c:	sub	w0, w1, w0
  478b30:	cmp	w0, #0x0
  478b34:	b.ne	478b40 <_obstack_memory_used@@Base+0x1ba00>  // b.any
  478b38:	mov	w0, #0x1                   	// #1
  478b3c:	b	478b44 <_obstack_memory_used@@Base+0x1ba04>
  478b40:	mov	w0, #0x0                   	// #0
  478b44:	add	w0, w0, #0x16d
  478b48:	add	w2, w2, w0
  478b4c:	ldr	x0, [sp, #48]
  478b50:	ldr	w0, [x0, #24]
  478b54:	mov	w1, w0
  478b58:	mov	w0, w2
  478b5c:	bl	477014 <_obstack_memory_used@@Base+0x19ed4>
  478b60:	str	w0, [sp, #1632]
  478b64:	b	478c30 <_obstack_memory_used@@Base+0x1baf0>
  478b68:	ldr	x0, [sp, #48]
  478b6c:	ldr	w2, [x0, #28]
  478b70:	ldr	w0, [sp, #1516]
  478b74:	and	w0, w0, #0x3
  478b78:	cmp	w0, #0x0
  478b7c:	b.ne	478bf0 <_obstack_memory_used@@Base+0x1bab0>  // b.any
  478b80:	ldr	w1, [sp, #1516]
  478b84:	mov	w0, #0x851f                	// #34079
  478b88:	movk	w0, #0x51eb, lsl #16
  478b8c:	smull	x0, w1, w0
  478b90:	lsr	x0, x0, #32
  478b94:	asr	w3, w0, #5
  478b98:	asr	w0, w1, #31
  478b9c:	sub	w0, w3, w0
  478ba0:	mov	w3, #0x64                  	// #100
  478ba4:	mul	w0, w0, w3
  478ba8:	sub	w0, w1, w0
  478bac:	cmp	w0, #0x0
  478bb0:	b.ne	478be8 <_obstack_memory_used@@Base+0x1baa8>  // b.any
  478bb4:	ldr	w1, [sp, #1516]
  478bb8:	mov	w0, #0x851f                	// #34079
  478bbc:	movk	w0, #0x51eb, lsl #16
  478bc0:	smull	x0, w1, w0
  478bc4:	lsr	x0, x0, #32
  478bc8:	asr	w3, w0, #7
  478bcc:	asr	w0, w1, #31
  478bd0:	sub	w0, w3, w0
  478bd4:	mov	w3, #0x190                 	// #400
  478bd8:	mul	w0, w0, w3
  478bdc:	sub	w0, w1, w0
  478be0:	cmp	w0, #0x0
  478be4:	b.ne	478bf0 <_obstack_memory_used@@Base+0x1bab0>  // b.any
  478be8:	mov	w0, #0x1                   	// #1
  478bec:	b	478bf4 <_obstack_memory_used@@Base+0x1bab4>
  478bf0:	mov	w0, #0x0                   	// #0
  478bf4:	add	w0, w0, #0x16d
  478bf8:	sub	w2, w2, w0
  478bfc:	ldr	x0, [sp, #48]
  478c00:	ldr	w0, [x0, #24]
  478c04:	mov	w1, w0
  478c08:	mov	w0, w2
  478c0c:	bl	477014 <_obstack_memory_used@@Base+0x19ed4>
  478c10:	str	w0, [sp, #1512]
  478c14:	ldr	w0, [sp, #1512]
  478c18:	cmp	w0, #0x0
  478c1c:	b.lt	478c30 <_obstack_memory_used@@Base+0x1baf0>  // b.tstop
  478c20:	mov	w0, #0x1                   	// #1
  478c24:	str	w0, [sp, #1636]
  478c28:	ldr	w0, [sp, #1512]
  478c2c:	str	w0, [sp, #1632]
  478c30:	ldr	x0, [sp, #1736]
  478c34:	ldrb	w0, [x0]
  478c38:	cmp	w0, #0x47
  478c3c:	b.eq	478d00 <_obstack_memory_used@@Base+0x1bbc0>  // b.none
  478c40:	cmp	w0, #0x67
  478c44:	b.ne	478d48 <_obstack_memory_used@@Base+0x1bc08>  // b.any
  478c48:	ldr	x0, [sp, #48]
  478c4c:	ldr	w1, [x0, #20]
  478c50:	mov	w0, #0x851f                	// #34079
  478c54:	movk	w0, #0x51eb, lsl #16
  478c58:	smull	x0, w1, w0
  478c5c:	lsr	x0, x0, #32
  478c60:	asr	w2, w0, #5
  478c64:	asr	w0, w1, #31
  478c68:	sub	w0, w2, w0
  478c6c:	mov	w2, #0x64                  	// #100
  478c70:	mul	w0, w0, w2
  478c74:	sub	w0, w1, w0
  478c78:	ldr	w1, [sp, #1636]
  478c7c:	add	w0, w0, w1
  478c80:	mov	w1, #0x851f                	// #34079
  478c84:	movk	w1, #0x51eb, lsl #16
  478c88:	smull	x1, w0, w1
  478c8c:	lsr	x1, x1, #32
  478c90:	asr	w2, w1, #5
  478c94:	asr	w1, w0, #31
  478c98:	sub	w2, w2, w1
  478c9c:	mov	w1, #0x64                  	// #100
  478ca0:	mul	w1, w2, w1
  478ca4:	sub	w0, w0, w1
  478ca8:	str	w0, [sp, #1508]
  478cac:	mov	w0, #0x2                   	// #2
  478cb0:	str	w0, [sp, #1724]
  478cb4:	ldr	w0, [sp, #1508]
  478cb8:	cmp	w0, #0x0
  478cbc:	b.ge	478cf4 <_obstack_memory_used@@Base+0x1bbb4>  // b.tcont
  478cc0:	ldr	x0, [sp, #48]
  478cc4:	ldr	w1, [x0, #20]
  478cc8:	mov	w2, #0xfffff894            	// #-1900
  478ccc:	ldr	w0, [sp, #1636]
  478cd0:	sub	w0, w2, w0
  478cd4:	cmp	w1, w0
  478cd8:	b.ge	478ce8 <_obstack_memory_used@@Base+0x1bba8>  // b.tcont
  478cdc:	ldr	w0, [sp, #1508]
  478ce0:	neg	w0, w0
  478ce4:	b	478cf8 <_obstack_memory_used@@Base+0x1bbb8>
  478ce8:	ldr	w0, [sp, #1508]
  478cec:	add	w0, w0, #0x64
  478cf0:	b	478cf8 <_obstack_memory_used@@Base+0x1bbb8>
  478cf4:	ldr	w0, [sp, #1508]
  478cf8:	str	w0, [sp, #1720]
  478cfc:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478d00:	mov	w0, #0x4                   	// #4
  478d04:	str	w0, [sp, #1724]
  478d08:	ldr	x0, [sp, #48]
  478d0c:	ldr	w1, [x0, #20]
  478d10:	mov	w2, #0xfffff894            	// #-1900
  478d14:	ldr	w0, [sp, #1636]
  478d18:	sub	w0, w2, w0
  478d1c:	cmp	w1, w0
  478d20:	cset	w0, lt  // lt = tstop
  478d24:	strb	w0, [sp, #1715]
  478d28:	ldr	x0, [sp, #48]
  478d2c:	ldr	w0, [x0, #20]
  478d30:	mov	w1, w0
  478d34:	ldr	w0, [sp, #1636]
  478d38:	add	w0, w1, w0
  478d3c:	add	w0, w0, #0x76c
  478d40:	str	w0, [sp, #1716]
  478d44:	b	477b88 <_obstack_memory_used@@Base+0x1aa48>
  478d48:	mov	w0, #0x2                   	// #2
  478d4c:	str	w0, [sp, #1724]
  478d50:	ldr	w0, [sp, #1632]
  478d54:	mov	w1, #0x2493                	// #9363
  478d58:	movk	w1, #0x9249, lsl #16
  478d5c:	smull	x1, w0, w1
  478d60:	lsr	x1, x1, #32
  478d64:	add	w1, w0, w1
  478d68:	asr	w1, w1, #2
  478d6c:	asr	w0, w0, #31
  478d70:	sub	w0, w1, w0
  478d74:	add	w0, w0, #0x1
  478d78:	str	w0, [sp, #1720]
  478d7c:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478d80:	ldr	w0, [sp, #1728]
  478d84:	cmp	w0, #0x45
  478d88:	b.eq	4793ac <_obstack_memory_used@@Base+0x1c26c>  // b.none
  478d8c:	mov	w0, #0x2                   	// #2
  478d90:	str	w0, [sp, #1724]
  478d94:	ldr	x0, [sp, #48]
  478d98:	ldr	w3, [x0, #28]
  478d9c:	ldr	x0, [sp, #48]
  478da0:	ldr	w0, [x0, #24]
  478da4:	add	w0, w0, #0x6
  478da8:	mov	w1, #0x2493                	// #9363
  478dac:	movk	w1, #0x9249, lsl #16
  478db0:	smull	x1, w0, w1
  478db4:	lsr	x1, x1, #32
  478db8:	add	w1, w0, w1
  478dbc:	asr	w2, w1, #2
  478dc0:	asr	w1, w0, #31
  478dc4:	sub	w2, w2, w1
  478dc8:	mov	w1, w2
  478dcc:	lsl	w1, w1, #3
  478dd0:	sub	w1, w1, w2
  478dd4:	sub	w2, w0, w1
  478dd8:	sub	w0, w3, w2
  478ddc:	add	w0, w0, #0x7
  478de0:	mov	w1, #0x2493                	// #9363
  478de4:	movk	w1, #0x9249, lsl #16
  478de8:	smull	x1, w0, w1
  478dec:	lsr	x1, x1, #32
  478df0:	add	w1, w0, w1
  478df4:	asr	w1, w1, #2
  478df8:	asr	w0, w0, #31
  478dfc:	sub	w0, w1, w0
  478e00:	str	w0, [sp, #1720]
  478e04:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478e08:	ldr	w0, [sp, #1728]
  478e0c:	cmp	w0, #0x45
  478e10:	b.eq	4793b4 <_obstack_memory_used@@Base+0x1c274>  // b.none
  478e14:	mov	w0, #0x1                   	// #1
  478e18:	str	w0, [sp, #1724]
  478e1c:	ldr	x0, [sp, #48]
  478e20:	ldr	w0, [x0, #24]
  478e24:	str	w0, [sp, #1720]
  478e28:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478e2c:	ldr	w0, [sp, #1728]
  478e30:	cmp	w0, #0x45
  478e34:	b.eq	4777f4 <_obstack_memory_used@@Base+0x1a6b4>  // b.none
  478e38:	ldr	w0, [sp, #1728]
  478e3c:	cmp	w0, #0x4f
  478e40:	b.eq	4793bc <_obstack_memory_used@@Base+0x1c27c>  // b.none
  478e44:	mov	w0, #0x4                   	// #4
  478e48:	str	w0, [sp, #1724]
  478e4c:	ldr	x0, [sp, #48]
  478e50:	ldr	w0, [x0, #20]
  478e54:	cmn	w0, #0x76c
  478e58:	cset	w0, lt  // lt = tstop
  478e5c:	strb	w0, [sp, #1715]
  478e60:	ldr	x0, [sp, #48]
  478e64:	ldr	w0, [x0, #20]
  478e68:	add	w0, w0, #0x76c
  478e6c:	str	w0, [sp, #1716]
  478e70:	b	477b88 <_obstack_memory_used@@Base+0x1aa48>
  478e74:	ldr	w0, [sp, #1728]
  478e78:	cmp	w0, #0x45
  478e7c:	b.eq	4777fc <_obstack_memory_used@@Base+0x1a6bc>  // b.none
  478e80:	ldr	x0, [sp, #48]
  478e84:	ldr	w0, [x0, #20]
  478e88:	mov	w1, #0x851f                	// #34079
  478e8c:	movk	w1, #0x51eb, lsl #16
  478e90:	smull	x1, w0, w1
  478e94:	lsr	x1, x1, #32
  478e98:	asr	w2, w1, #5
  478e9c:	asr	w1, w0, #31
  478ea0:	sub	w2, w2, w1
  478ea4:	mov	w1, #0x64                  	// #100
  478ea8:	mul	w1, w2, w1
  478eac:	sub	w0, w0, w1
  478eb0:	str	w0, [sp, #1628]
  478eb4:	ldr	w0, [sp, #1628]
  478eb8:	cmp	w0, #0x0
  478ebc:	b.ge	478ee8 <_obstack_memory_used@@Base+0x1bda8>  // b.tcont
  478ec0:	ldr	x0, [sp, #48]
  478ec4:	ldr	w0, [x0, #20]
  478ec8:	cmn	w0, #0x76c
  478ecc:	b.ge	478edc <_obstack_memory_used@@Base+0x1bd9c>  // b.tcont
  478ed0:	ldr	w0, [sp, #1628]
  478ed4:	neg	w0, w0
  478ed8:	b	478ee4 <_obstack_memory_used@@Base+0x1bda4>
  478edc:	ldr	w0, [sp, #1628]
  478ee0:	add	w0, w0, #0x64
  478ee4:	str	w0, [sp, #1628]
  478ee8:	mov	w0, #0x2                   	// #2
  478eec:	str	w0, [sp, #1724]
  478ef0:	ldr	w0, [sp, #1628]
  478ef4:	str	w0, [sp, #1720]
  478ef8:	b	477b74 <_obstack_memory_used@@Base+0x1aa34>
  478efc:	ldrb	w0, [sp, #1671]
  478f00:	cmp	w0, #0x0
  478f04:	b.eq	478f14 <_obstack_memory_used@@Base+0x1bdd4>  // b.none
  478f08:	strb	wzr, [sp, #1682]
  478f0c:	mov	w0, #0x1                   	// #1
  478f10:	strb	w0, [sp, #1683]
  478f14:	ldr	x0, [sp, #1760]
  478f18:	bl	4040b0 <strlen@plt>
  478f1c:	str	x0, [sp, #1544]
  478f20:	ldr	w1, [sp, #1684]
  478f24:	ldr	w0, [sp, #1684]
  478f28:	mov	w2, #0x0                   	// #0
  478f2c:	cmp	w1, #0x0
  478f30:	csel	w0, w0, w2, ge  // ge = tcont
  478f34:	sxtw	x0, w0
  478f38:	str	x0, [sp, #1536]
  478f3c:	ldr	x0, [sp, #1536]
  478f40:	ldr	x2, [sp, #1544]
  478f44:	ldr	x1, [sp, #1544]
  478f48:	cmp	x2, x0
  478f4c:	csel	x0, x1, x0, cs  // cs = hs, nlast
  478f50:	str	x0, [sp, #1528]
  478f54:	ldr	x1, [sp, #64]
  478f58:	ldr	x0, [sp, #1752]
  478f5c:	sub	x0, x1, x0
  478f60:	ldr	x1, [sp, #1528]
  478f64:	cmp	x1, x0
  478f68:	b.cc	478f74 <_obstack_memory_used@@Base+0x1be34>  // b.lo, b.ul, b.last
  478f6c:	mov	x0, #0x0                   	// #0
  478f70:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  478f74:	ldr	x0, [sp, #1744]
  478f78:	cmp	x0, #0x0
  478f7c:	b.eq	47905c <_obstack_memory_used@@Base+0x1bf1c>  // b.none
  478f80:	ldr	w0, [sp, #1724]
  478f84:	cmp	w0, #0x0
  478f88:	b.ne	478ffc <_obstack_memory_used@@Base+0x1bebc>  // b.any
  478f8c:	ldr	x1, [sp, #1544]
  478f90:	ldr	x0, [sp, #1536]
  478f94:	cmp	x1, x0
  478f98:	b.cs	478ffc <_obstack_memory_used@@Base+0x1bebc>  // b.hs, b.nlast
  478f9c:	ldrsw	x1, [sp, #1684]
  478fa0:	ldr	x0, [sp, #1544]
  478fa4:	sub	x0, x1, x0
  478fa8:	str	x0, [sp, #1520]
  478fac:	ldr	w0, [sp, #1732]
  478fb0:	cmp	w0, #0x30
  478fb4:	b.ne	478fdc <_obstack_memory_used@@Base+0x1be9c>  // b.any
  478fb8:	ldr	x2, [sp, #1520]
  478fbc:	mov	w1, #0x30                  	// #48
  478fc0:	ldr	x0, [sp, #1744]
  478fc4:	bl	4044d0 <memset@plt>
  478fc8:	ldr	x1, [sp, #1744]
  478fcc:	ldr	x0, [sp, #1520]
  478fd0:	add	x0, x1, x0
  478fd4:	str	x0, [sp, #1744]
  478fd8:	b	478ffc <_obstack_memory_used@@Base+0x1bebc>
  478fdc:	ldr	x2, [sp, #1520]
  478fe0:	mov	w1, #0x20                  	// #32
  478fe4:	ldr	x0, [sp, #1744]
  478fe8:	bl	4044d0 <memset@plt>
  478fec:	ldr	x1, [sp, #1744]
  478ff0:	ldr	x0, [sp, #1520]
  478ff4:	add	x0, x1, x0
  478ff8:	str	x0, [sp, #1744]
  478ffc:	ldrb	w0, [sp, #1683]
  479000:	cmp	w0, #0x0
  479004:	b.eq	47901c <_obstack_memory_used@@Base+0x1bedc>  // b.none
  479008:	ldr	x2, [sp, #1544]
  47900c:	ldr	x1, [sp, #1760]
  479010:	ldr	x0, [sp, #1744]
  479014:	bl	476f4c <_obstack_memory_used@@Base+0x19e0c>
  479018:	b	47904c <_obstack_memory_used@@Base+0x1bf0c>
  47901c:	ldrb	w0, [sp, #1682]
  479020:	cmp	w0, #0x0
  479024:	b.eq	47903c <_obstack_memory_used@@Base+0x1befc>  // b.none
  479028:	ldr	x2, [sp, #1544]
  47902c:	ldr	x1, [sp, #1760]
  479030:	ldr	x0, [sp, #1744]
  479034:	bl	476fb0 <_obstack_memory_used@@Base+0x19e70>
  479038:	b	47904c <_obstack_memory_used@@Base+0x1bf0c>
  47903c:	ldr	x2, [sp, #1544]
  479040:	ldr	x1, [sp, #1760]
  479044:	ldr	x0, [sp, #1744]
  479048:	bl	404020 <memcpy@plt>
  47904c:	ldr	x1, [sp, #1744]
  479050:	ldr	x0, [sp, #1544]
  479054:	add	x0, x1, x0
  479058:	str	x0, [sp, #1744]
  47905c:	ldr	x1, [sp, #1752]
  479060:	ldr	x0, [sp, #1528]
  479064:	add	x0, x1, x0
  479068:	str	x0, [sp, #1752]
  47906c:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  479070:	mov	x0, #0x1                   	// #1
  479074:	str	x0, [sp, #1672]
  479078:	b	479088 <_obstack_memory_used@@Base+0x1bf48>
  47907c:	ldr	x0, [sp, #1672]
  479080:	add	x0, x0, #0x1
  479084:	str	x0, [sp, #1672]
  479088:	ldr	x1, [sp, #1736]
  47908c:	ldr	x0, [sp, #1672]
  479090:	add	x0, x1, x0
  479094:	ldrb	w0, [x0]
  479098:	cmp	w0, #0x3a
  47909c:	b.eq	47907c <_obstack_memory_used@@Base+0x1bf3c>  // b.none
  4790a0:	ldr	x1, [sp, #1736]
  4790a4:	ldr	x0, [sp, #1672]
  4790a8:	add	x0, x1, x0
  4790ac:	ldrb	w0, [x0]
  4790b0:	cmp	w0, #0x7a
  4790b4:	b.ne	4793c4 <_obstack_memory_used@@Base+0x1c284>  // b.any
  4790b8:	ldr	x1, [sp, #1736]
  4790bc:	ldr	x0, [sp, #1672]
  4790c0:	add	x0, x1, x0
  4790c4:	str	x0, [sp, #1736]
  4790c8:	b	4790d0 <_obstack_memory_used@@Base+0x1bf90>
  4790cc:	str	xzr, [sp, #1672]
  4790d0:	ldr	x0, [sp, #48]
  4790d4:	ldr	w0, [x0, #32]
  4790d8:	cmp	w0, #0x0
  4790dc:	b.lt	4795b4 <_obstack_memory_used@@Base+0x1c474>  // b.tstop
  4790e0:	ldr	x0, [sp, #48]
  4790e4:	ldr	x0, [x0, #40]
  4790e8:	str	w0, [sp, #1456]
  4790ec:	ldr	w0, [sp, #1456]
  4790f0:	cmp	w0, #0x0
  4790f4:	b.lt	479114 <_obstack_memory_used@@Base+0x1bfd4>  // b.tstop
  4790f8:	ldr	w0, [sp, #1456]
  4790fc:	cmp	w0, #0x0
  479100:	b.ne	47911c <_obstack_memory_used@@Base+0x1bfdc>  // b.any
  479104:	ldr	x0, [sp, #1760]
  479108:	ldrb	w0, [x0]
  47910c:	cmp	w0, #0x2d
  479110:	b.ne	47911c <_obstack_memory_used@@Base+0x1bfdc>  // b.any
  479114:	mov	w0, #0x1                   	// #1
  479118:	b	479120 <_obstack_memory_used@@Base+0x1bfe0>
  47911c:	mov	w0, #0x0                   	// #0
  479120:	strb	w0, [sp, #1715]
  479124:	ldrb	w0, [sp, #1715]
  479128:	and	w0, w0, #0x1
  47912c:	strb	w0, [sp, #1715]
  479130:	ldr	w0, [sp, #1456]
  479134:	mov	w1, #0xb3c5                	// #46021
  479138:	movk	w1, #0x91a2, lsl #16
  47913c:	smull	x1, w0, w1
  479140:	lsr	x1, x1, #32
  479144:	add	w1, w0, w1
  479148:	asr	w1, w1, #11
  47914c:	asr	w0, w0, #31
  479150:	sub	w0, w1, w0
  479154:	str	w0, [sp, #1452]
  479158:	ldr	w0, [sp, #1456]
  47915c:	mov	w1, #0x8889                	// #34953
  479160:	movk	w1, #0x8888, lsl #16
  479164:	smull	x1, w0, w1
  479168:	lsr	x1, x1, #32
  47916c:	add	w1, w0, w1
  479170:	asr	w1, w1, #5
  479174:	asr	w0, w0, #31
  479178:	sub	w1, w1, w0
  47917c:	mov	w0, #0x8889                	// #34953
  479180:	movk	w0, #0x8888, lsl #16
  479184:	smull	x0, w1, w0
  479188:	lsr	x0, x0, #32
  47918c:	add	w0, w1, w0
  479190:	asr	w2, w0, #5
  479194:	asr	w0, w1, #31
  479198:	sub	w2, w2, w0
  47919c:	mov	w0, w2
  4791a0:	lsl	w0, w0, #4
  4791a4:	sub	w0, w0, w2
  4791a8:	lsl	w0, w0, #2
  4791ac:	sub	w0, w1, w0
  4791b0:	str	w0, [sp, #1448]
  4791b4:	ldr	w1, [sp, #1456]
  4791b8:	mov	w0, #0x8889                	// #34953
  4791bc:	movk	w0, #0x8888, lsl #16
  4791c0:	smull	x0, w1, w0
  4791c4:	lsr	x0, x0, #32
  4791c8:	add	w0, w1, w0
  4791cc:	asr	w2, w0, #5
  4791d0:	asr	w0, w1, #31
  4791d4:	sub	w2, w2, w0
  4791d8:	mov	w0, w2
  4791dc:	lsl	w0, w0, #4
  4791e0:	sub	w0, w0, w2
  4791e4:	lsl	w0, w0, #2
  4791e8:	sub	w0, w1, w0
  4791ec:	str	w0, [sp, #1444]
  4791f0:	ldr	x0, [sp, #1672]
  4791f4:	cmp	x0, #0x3
  4791f8:	b.eq	4792d4 <_obstack_memory_used@@Base+0x1c194>  // b.none
  4791fc:	ldr	x0, [sp, #1672]
  479200:	cmp	x0, #0x3
  479204:	b.hi	4793cc <_obstack_memory_used@@Base+0x1c28c>  // b.pmore
  479208:	ldr	x0, [sp, #1672]
  47920c:	cmp	x0, #0x2
  479210:	b.eq	479298 <_obstack_memory_used@@Base+0x1c158>  // b.none
  479214:	ldr	x0, [sp, #1672]
  479218:	cmp	x0, #0x2
  47921c:	b.hi	4793cc <_obstack_memory_used@@Base+0x1c28c>  // b.pmore
  479220:	ldr	x0, [sp, #1672]
  479224:	cmp	x0, #0x0
  479228:	b.eq	47923c <_obstack_memory_used@@Base+0x1c0fc>  // b.none
  47922c:	ldr	x0, [sp, #1672]
  479230:	cmp	x0, #0x1
  479234:	b.eq	479268 <_obstack_memory_used@@Base+0x1c128>  // b.none
  479238:	b	4793cc <_obstack_memory_used@@Base+0x1c28c>
  47923c:	mov	w0, #0x5                   	// #5
  479240:	str	w0, [sp, #1724]
  479244:	str	wzr, [sp, #1708]
  479248:	ldr	w1, [sp, #1452]
  47924c:	mov	w0, #0x64                  	// #100
  479250:	mul	w1, w1, w0
  479254:	ldr	w0, [sp, #1448]
  479258:	add	w0, w1, w0
  47925c:	str	w0, [sp, #1716]
  479260:	b	477b40 <_obstack_memory_used@@Base+0x1aa00>
  479264:	nop
  479268:	mov	w0, #0x6                   	// #6
  47926c:	str	w0, [sp, #1724]
  479270:	mov	w0, #0x4                   	// #4
  479274:	str	w0, [sp, #1708]
  479278:	ldr	w1, [sp, #1452]
  47927c:	mov	w0, #0x64                  	// #100
  479280:	mul	w1, w1, w0
  479284:	ldr	w0, [sp, #1448]
  479288:	add	w0, w1, w0
  47928c:	str	w0, [sp, #1716]
  479290:	b	477b40 <_obstack_memory_used@@Base+0x1aa00>
  479294:	nop
  479298:	mov	w0, #0x9                   	// #9
  47929c:	str	w0, [sp, #1724]
  4792a0:	mov	w0, #0x14                  	// #20
  4792a4:	str	w0, [sp, #1708]
  4792a8:	ldr	w1, [sp, #1452]
  4792ac:	mov	w0, #0x2710                	// #10000
  4792b0:	mul	w1, w1, w0
  4792b4:	ldr	w2, [sp, #1448]
  4792b8:	mov	w0, #0x64                  	// #100
  4792bc:	mul	w0, w2, w0
  4792c0:	add	w1, w1, w0
  4792c4:	ldr	w0, [sp, #1444]
  4792c8:	add	w0, w1, w0
  4792cc:	str	w0, [sp, #1716]
  4792d0:	b	477b40 <_obstack_memory_used@@Base+0x1aa00>
  4792d4:	ldr	w0, [sp, #1444]
  4792d8:	cmp	w0, #0x0
  4792dc:	b.ne	479294 <_obstack_memory_used@@Base+0x1c154>  // b.any
  4792e0:	ldr	w0, [sp, #1448]
  4792e4:	cmp	w0, #0x0
  4792e8:	b.ne	479264 <_obstack_memory_used@@Base+0x1c124>  // b.any
  4792ec:	mov	w0, #0x3                   	// #3
  4792f0:	str	w0, [sp, #1724]
  4792f4:	str	wzr, [sp, #1708]
  4792f8:	ldr	w0, [sp, #1452]
  4792fc:	str	w0, [sp, #1716]
  479300:	b	477b40 <_obstack_memory_used@@Base+0x1aa00>
  479304:	ldr	x0, [sp, #1736]
  479308:	sub	x0, x0, #0x1
  47930c:	str	x0, [sp, #1736]
  479310:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479314:	nop
  479318:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47931c:	nop
  479320:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479324:	nop
  479328:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47932c:	nop
  479330:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479334:	nop
  479338:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47933c:	nop
  479340:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479344:	nop
  479348:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47934c:	nop
  479350:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479354:	nop
  479358:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47935c:	nop
  479360:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479364:	nop
  479368:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47936c:	nop
  479370:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479374:	nop
  479378:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47937c:	nop
  479380:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479384:	nop
  479388:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47938c:	nop
  479390:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  479394:	nop
  479398:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  47939c:	nop
  4793a0:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  4793a4:	nop
  4793a8:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  4793ac:	nop
  4793b0:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  4793b4:	nop
  4793b8:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  4793bc:	nop
  4793c0:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  4793c4:	nop
  4793c8:	b	4793d0 <_obstack_memory_used@@Base+0x1c290>
  4793cc:	nop
  4793d0:	mov	w0, #0x1                   	// #1
  4793d4:	str	w0, [sp, #1624]
  4793d8:	b	4793e8 <_obstack_memory_used@@Base+0x1c2a8>
  4793dc:	ldr	w0, [sp, #1624]
  4793e0:	add	w0, w0, #0x1
  4793e4:	str	w0, [sp, #1624]
  4793e8:	mov	w1, #0x1                   	// #1
  4793ec:	ldr	w0, [sp, #1624]
  4793f0:	sub	w0, w1, w0
  4793f4:	sxtw	x0, w0
  4793f8:	ldr	x1, [sp, #1736]
  4793fc:	add	x0, x1, x0
  479400:	ldrb	w0, [x0]
  479404:	cmp	w0, #0x25
  479408:	b.ne	4793dc <_obstack_memory_used@@Base+0x1c29c>  // b.any
  47940c:	ldrsw	x0, [sp, #1624]
  479410:	str	x0, [sp, #1192]
  479414:	ldr	w1, [sp, #1684]
  479418:	ldr	w0, [sp, #1684]
  47941c:	mov	w2, #0x0                   	// #0
  479420:	cmp	w1, #0x0
  479424:	csel	w0, w0, w2, ge  // ge = tcont
  479428:	sxtw	x0, w0
  47942c:	str	x0, [sp, #1184]
  479430:	ldr	x0, [sp, #1184]
  479434:	ldr	x2, [sp, #1192]
  479438:	ldr	x1, [sp, #1192]
  47943c:	cmp	x2, x0
  479440:	csel	x0, x1, x0, cs  // cs = hs, nlast
  479444:	str	x0, [sp, #1176]
  479448:	ldr	x1, [sp, #64]
  47944c:	ldr	x0, [sp, #1752]
  479450:	sub	x0, x1, x0
  479454:	ldr	x1, [sp, #1176]
  479458:	cmp	x1, x0
  47945c:	b.cc	479468 <_obstack_memory_used@@Base+0x1c328>  // b.lo, b.ul, b.last
  479460:	mov	x0, #0x0                   	// #0
  479464:	b	4795f8 <_obstack_memory_used@@Base+0x1c4b8>
  479468:	ldr	x0, [sp, #1744]
  47946c:	cmp	x0, #0x0
  479470:	b.eq	479598 <_obstack_memory_used@@Base+0x1c458>  // b.none
  479474:	ldr	w0, [sp, #1724]
  479478:	cmp	w0, #0x0
  47947c:	b.ne	4794f0 <_obstack_memory_used@@Base+0x1c3b0>  // b.any
  479480:	ldr	x1, [sp, #1192]
  479484:	ldr	x0, [sp, #1184]
  479488:	cmp	x1, x0
  47948c:	b.cs	4794f0 <_obstack_memory_used@@Base+0x1c3b0>  // b.hs, b.nlast
  479490:	ldrsw	x1, [sp, #1684]
  479494:	ldr	x0, [sp, #1192]
  479498:	sub	x0, x1, x0
  47949c:	str	x0, [sp, #1168]
  4794a0:	ldr	w0, [sp, #1732]
  4794a4:	cmp	w0, #0x30
  4794a8:	b.ne	4794d0 <_obstack_memory_used@@Base+0x1c390>  // b.any
  4794ac:	ldr	x2, [sp, #1168]
  4794b0:	mov	w1, #0x30                  	// #48
  4794b4:	ldr	x0, [sp, #1744]
  4794b8:	bl	4044d0 <memset@plt>
  4794bc:	ldr	x1, [sp, #1744]
  4794c0:	ldr	x0, [sp, #1168]
  4794c4:	add	x0, x1, x0
  4794c8:	str	x0, [sp, #1744]
  4794cc:	b	4794f0 <_obstack_memory_used@@Base+0x1c3b0>
  4794d0:	ldr	x2, [sp, #1168]
  4794d4:	mov	w1, #0x20                  	// #32
  4794d8:	ldr	x0, [sp, #1744]
  4794dc:	bl	4044d0 <memset@plt>
  4794e0:	ldr	x1, [sp, #1744]
  4794e4:	ldr	x0, [sp, #1168]
  4794e8:	add	x0, x1, x0
  4794ec:	str	x0, [sp, #1744]
  4794f0:	ldrb	w0, [sp, #1683]
  4794f4:	cmp	w0, #0x0
  4794f8:	b.eq	479528 <_obstack_memory_used@@Base+0x1c3e8>  // b.none
  4794fc:	mov	w1, #0x1                   	// #1
  479500:	ldr	w0, [sp, #1624]
  479504:	sub	w0, w1, w0
  479508:	sxtw	x0, w0
  47950c:	ldr	x1, [sp, #1736]
  479510:	add	x0, x1, x0
  479514:	ldr	x2, [sp, #1192]
  479518:	mov	x1, x0
  47951c:	ldr	x0, [sp, #1744]
  479520:	bl	476f4c <_obstack_memory_used@@Base+0x19e0c>
  479524:	b	479588 <_obstack_memory_used@@Base+0x1c448>
  479528:	ldrb	w0, [sp, #1682]
  47952c:	cmp	w0, #0x0
  479530:	b.eq	479560 <_obstack_memory_used@@Base+0x1c420>  // b.none
  479534:	mov	w1, #0x1                   	// #1
  479538:	ldr	w0, [sp, #1624]
  47953c:	sub	w0, w1, w0
  479540:	sxtw	x0, w0
  479544:	ldr	x1, [sp, #1736]
  479548:	add	x0, x1, x0
  47954c:	ldr	x2, [sp, #1192]
  479550:	mov	x1, x0
  479554:	ldr	x0, [sp, #1744]
  479558:	bl	476fb0 <_obstack_memory_used@@Base+0x19e70>
  47955c:	b	479588 <_obstack_memory_used@@Base+0x1c448>
  479560:	mov	w1, #0x1                   	// #1
  479564:	ldr	w0, [sp, #1624]
  479568:	sub	w0, w1, w0
  47956c:	sxtw	x0, w0
  479570:	ldr	x1, [sp, #1736]
  479574:	add	x0, x1, x0
  479578:	ldr	x2, [sp, #1192]
  47957c:	mov	x1, x0
  479580:	ldr	x0, [sp, #1744]
  479584:	bl	404020 <memcpy@plt>
  479588:	ldr	x1, [sp, #1744]
  47958c:	ldr	x0, [sp, #1192]
  479590:	add	x0, x1, x0
  479594:	str	x0, [sp, #1744]
  479598:	ldr	x1, [sp, #1752]
  47959c:	ldr	x0, [sp, #1176]
  4795a0:	add	x0, x1, x0
  4795a4:	str	x0, [sp, #1752]
  4795a8:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  4795ac:	nop
  4795b0:	b	4795b8 <_obstack_memory_used@@Base+0x1c478>
  4795b4:	nop
  4795b8:	ldr	x0, [sp, #1736]
  4795bc:	add	x0, x0, #0x1
  4795c0:	str	x0, [sp, #1736]
  4795c4:	ldr	x0, [sp, #1736]
  4795c8:	ldrb	w0, [x0]
  4795cc:	cmp	w0, #0x0
  4795d0:	b.ne	477180 <_obstack_memory_used@@Base+0x1a040>  // b.any
  4795d4:	ldr	x0, [sp, #1744]
  4795d8:	cmp	x0, #0x0
  4795dc:	b.eq	4795f4 <_obstack_memory_used@@Base+0x1c4b4>  // b.none
  4795e0:	ldr	x0, [sp, #64]
  4795e4:	cmp	x0, #0x0
  4795e8:	b.eq	4795f4 <_obstack_memory_used@@Base+0x1c4b4>  // b.none
  4795ec:	ldr	x0, [sp, #1744]
  4795f0:	strb	wzr, [x0]
  4795f4:	ldr	x0, [sp, #1752]
  4795f8:	ldp	x29, x30, [sp]
  4795fc:	add	sp, sp, #0x6f0
  479600:	ret
  479604:	stp	x29, x30, [sp, #-256]!
  479608:	mov	x29, sp
  47960c:	str	w0, [sp, #28]
  479610:	str	x1, [sp, #16]
  479614:	str	w2, [sp, #24]
  479618:	str	x3, [sp, #216]
  47961c:	str	x4, [sp, #224]
  479620:	str	x5, [sp, #232]
  479624:	str	x6, [sp, #240]
  479628:	str	x7, [sp, #248]
  47962c:	str	q0, [sp, #80]
  479630:	str	q1, [sp, #96]
  479634:	str	q2, [sp, #112]
  479638:	str	q3, [sp, #128]
  47963c:	str	q4, [sp, #144]
  479640:	str	q5, [sp, #160]
  479644:	str	q6, [sp, #176]
  479648:	str	q7, [sp, #192]
  47964c:	str	wzr, [sp, #76]
  479650:	ldr	w0, [sp, #24]
  479654:	and	w0, w0, #0x40
  479658:	cmp	w0, #0x0
  47965c:	b.eq	4796e0 <_obstack_memory_used@@Base+0x1c5a0>  // b.none
  479660:	add	x0, sp, #0x100
  479664:	str	x0, [sp, #40]
  479668:	add	x0, sp, #0x100
  47966c:	str	x0, [sp, #48]
  479670:	add	x0, sp, #0xd0
  479674:	str	x0, [sp, #56]
  479678:	mov	w0, #0xffffffd8            	// #-40
  47967c:	str	w0, [sp, #64]
  479680:	mov	w0, #0xffffff80            	// #-128
  479684:	str	w0, [sp, #68]
  479688:	ldr	w1, [sp, #64]
  47968c:	ldr	x0, [sp, #40]
  479690:	cmp	w1, #0x0
  479694:	b.lt	4796a8 <_obstack_memory_used@@Base+0x1c568>  // b.tstop
  479698:	add	x1, x0, #0xb
  47969c:	and	x1, x1, #0xfffffffffffffff8
  4796a0:	str	x1, [sp, #40]
  4796a4:	b	4796d8 <_obstack_memory_used@@Base+0x1c598>
  4796a8:	add	w2, w1, #0x8
  4796ac:	str	w2, [sp, #64]
  4796b0:	ldr	w2, [sp, #64]
  4796b4:	cmp	w2, #0x0
  4796b8:	b.le	4796cc <_obstack_memory_used@@Base+0x1c58c>
  4796bc:	add	x1, x0, #0xb
  4796c0:	and	x1, x1, #0xfffffffffffffff8
  4796c4:	str	x1, [sp, #40]
  4796c8:	b	4796d8 <_obstack_memory_used@@Base+0x1c598>
  4796cc:	ldr	x2, [sp, #48]
  4796d0:	sxtw	x0, w1
  4796d4:	add	x0, x2, x0
  4796d8:	ldr	w0, [x0]
  4796dc:	str	w0, [sp, #76]
  4796e0:	ldr	w3, [sp, #76]
  4796e4:	ldr	w2, [sp, #24]
  4796e8:	ldr	x1, [sp, #16]
  4796ec:	ldr	w0, [sp, #28]
  4796f0:	bl	404b90 <openat@plt>
  4796f4:	bl	479700 <_obstack_memory_used@@Base+0x1c5c0>
  4796f8:	ldp	x29, x30, [sp], #256
  4796fc:	ret
  479700:	stp	x29, x30, [sp, #-48]!
  479704:	mov	x29, sp
  479708:	str	w0, [sp, #28]
  47970c:	ldr	w0, [sp, #28]
  479710:	cmp	w0, #0x0
  479714:	b.lt	47975c <_obstack_memory_used@@Base+0x1c61c>  // b.tstop
  479718:	ldr	w0, [sp, #28]
  47971c:	cmp	w0, #0x2
  479720:	b.gt	47975c <_obstack_memory_used@@Base+0x1c61c>
  479724:	ldr	w0, [sp, #28]
  479728:	bl	47af94 <_obstack_memory_used@@Base+0x1de54>
  47972c:	str	w0, [sp, #44]
  479730:	bl	404bc0 <__errno_location@plt>
  479734:	ldr	w0, [x0]
  479738:	str	w0, [sp, #40]
  47973c:	ldr	w0, [sp, #28]
  479740:	bl	404660 <close@plt>
  479744:	bl	404bc0 <__errno_location@plt>
  479748:	mov	x1, x0
  47974c:	ldr	w0, [sp, #40]
  479750:	str	w0, [x1]
  479754:	ldr	w0, [sp, #44]
  479758:	str	w0, [sp, #28]
  47975c:	ldr	w0, [sp, #28]
  479760:	ldp	x29, x30, [sp], #48
  479764:	ret
  479768:	stp	x29, x30, [sp, #-144]!
  47976c:	mov	x29, sp
  479770:	str	x19, [sp, #16]
  479774:	str	x0, [sp, #40]
  479778:	mov	x19, x1
  47977c:	str	xzr, [sp, #136]
  479780:	add	x2, sp, #0x38
  479784:	mov	x3, x19
  479788:	ldp	x0, x1, [x3]
  47978c:	stp	x0, x1, [x2]
  479790:	ldp	x0, x1, [x3, #16]
  479794:	stp	x0, x1, [x2, #16]
  479798:	ldr	x0, [sp, #40]
  47979c:	str	x0, [sp, #128]
  4797a0:	b	479820 <_obstack_memory_used@@Base+0x1c6e0>
  4797a4:	ldr	w1, [sp, #80]
  4797a8:	ldr	x0, [sp, #56]
  4797ac:	cmp	w1, #0x0
  4797b0:	b.lt	4797c4 <_obstack_memory_used@@Base+0x1c684>  // b.tstop
  4797b4:	add	x1, x0, #0xf
  4797b8:	and	x1, x1, #0xfffffffffffffff8
  4797bc:	str	x1, [sp, #56]
  4797c0:	b	4797f4 <_obstack_memory_used@@Base+0x1c6b4>
  4797c4:	add	w2, w1, #0x8
  4797c8:	str	w2, [sp, #80]
  4797cc:	ldr	w2, [sp, #80]
  4797d0:	cmp	w2, #0x0
  4797d4:	b.le	4797e8 <_obstack_memory_used@@Base+0x1c6a8>
  4797d8:	add	x1, x0, #0xf
  4797dc:	and	x1, x1, #0xfffffffffffffff8
  4797e0:	str	x1, [sp, #56]
  4797e4:	b	4797f4 <_obstack_memory_used@@Base+0x1c6b4>
  4797e8:	ldr	x2, [sp, #64]
  4797ec:	sxtw	x0, w1
  4797f0:	add	x0, x2, x0
  4797f4:	ldr	x0, [x0]
  4797f8:	str	x0, [sp, #88]
  4797fc:	ldr	x0, [sp, #88]
  479800:	bl	4040b0 <strlen@plt>
  479804:	mov	x1, x0
  479808:	ldr	x0, [sp, #136]
  47980c:	bl	47afb8 <_obstack_memory_used@@Base+0x1de78>
  479810:	str	x0, [sp, #136]
  479814:	ldr	x0, [sp, #128]
  479818:	sub	x0, x0, #0x1
  47981c:	str	x0, [sp, #128]
  479820:	ldr	x0, [sp, #128]
  479824:	cmp	x0, #0x0
  479828:	b.ne	4797a4 <_obstack_memory_used@@Base+0x1c664>  // b.any
  47982c:	ldr	x0, [sp, #136]
  479830:	cmn	x0, #0x1
  479834:	b.eq	479848 <_obstack_memory_used@@Base+0x1c708>  // b.none
  479838:	ldr	x1, [sp, #136]
  47983c:	mov	x0, #0x7fffffff            	// #2147483647
  479840:	cmp	x1, x0
  479844:	b.ls	479860 <_obstack_memory_used@@Base+0x1c720>  // b.plast
  479848:	bl	404bc0 <__errno_location@plt>
  47984c:	mov	x1, x0
  479850:	mov	w0, #0x4b                  	// #75
  479854:	str	w0, [x1]
  479858:	mov	x0, #0x0                   	// #0
  47985c:	b	47992c <_obstack_memory_used@@Base+0x1c7ec>
  479860:	ldr	x0, [sp, #136]
  479864:	add	x0, x0, #0x1
  479868:	bl	45b6a4 <argp_usage@@Base+0x125b8>
  47986c:	str	x0, [sp, #112]
  479870:	ldr	x0, [sp, #112]
  479874:	str	x0, [sp, #120]
  479878:	ldr	x0, [sp, #40]
  47987c:	str	x0, [sp, #128]
  479880:	b	479914 <_obstack_memory_used@@Base+0x1c7d4>
  479884:	ldr	w1, [x19, #24]
  479888:	ldr	x0, [x19]
  47988c:	cmp	w1, #0x0
  479890:	b.lt	4798a4 <_obstack_memory_used@@Base+0x1c764>  // b.tstop
  479894:	add	x1, x0, #0xf
  479898:	and	x1, x1, #0xfffffffffffffff8
  47989c:	str	x1, [x19]
  4798a0:	b	4798d4 <_obstack_memory_used@@Base+0x1c794>
  4798a4:	add	w2, w1, #0x8
  4798a8:	str	w2, [x19, #24]
  4798ac:	ldr	w2, [x19, #24]
  4798b0:	cmp	w2, #0x0
  4798b4:	b.le	4798c8 <_obstack_memory_used@@Base+0x1c788>
  4798b8:	add	x1, x0, #0xf
  4798bc:	and	x1, x1, #0xfffffffffffffff8
  4798c0:	str	x1, [x19]
  4798c4:	b	4798d4 <_obstack_memory_used@@Base+0x1c794>
  4798c8:	ldr	x2, [x19, #8]
  4798cc:	sxtw	x0, w1
  4798d0:	add	x0, x2, x0
  4798d4:	ldr	x0, [x0]
  4798d8:	str	x0, [sp, #104]
  4798dc:	ldr	x0, [sp, #104]
  4798e0:	bl	4040b0 <strlen@plt>
  4798e4:	str	x0, [sp, #96]
  4798e8:	ldr	x2, [sp, #96]
  4798ec:	ldr	x1, [sp, #104]
  4798f0:	ldr	x0, [sp, #120]
  4798f4:	bl	404020 <memcpy@plt>
  4798f8:	ldr	x1, [sp, #120]
  4798fc:	ldr	x0, [sp, #96]
  479900:	add	x0, x1, x0
  479904:	str	x0, [sp, #120]
  479908:	ldr	x0, [sp, #128]
  47990c:	sub	x0, x0, #0x1
  479910:	str	x0, [sp, #128]
  479914:	ldr	x0, [sp, #128]
  479918:	cmp	x0, #0x0
  47991c:	b.ne	479884 <_obstack_memory_used@@Base+0x1c744>  // b.any
  479920:	ldr	x0, [sp, #120]
  479924:	strb	wzr, [x0]
  479928:	ldr	x0, [sp, #112]
  47992c:	ldr	x19, [sp, #16]
  479930:	ldp	x29, x30, [sp], #144
  479934:	ret
  479938:	stp	x29, x30, [sp, #-112]!
  47993c:	mov	x29, sp
  479940:	str	x19, [sp, #16]
  479944:	str	x0, [sp, #72]
  479948:	mov	x19, x1
  47994c:	str	xzr, [sp, #104]
  479950:	ldr	x0, [sp, #72]
  479954:	str	x0, [sp, #96]
  479958:	ldr	x0, [sp, #96]
  47995c:	ldrb	w0, [x0]
  479960:	cmp	w0, #0x0
  479964:	b.ne	479994 <_obstack_memory_used@@Base+0x1c854>  // b.any
  479968:	add	x2, sp, #0x20
  47996c:	mov	x3, x19
  479970:	ldp	x0, x1, [x3]
  479974:	stp	x0, x1, [x2]
  479978:	ldp	x0, x1, [x3, #16]
  47997c:	stp	x0, x1, [x2, #16]
  479980:	add	x0, sp, #0x20
  479984:	mov	x1, x0
  479988:	ldr	x0, [sp, #104]
  47998c:	bl	479768 <_obstack_memory_used@@Base+0x1c628>
  479990:	b	479a3c <_obstack_memory_used@@Base+0x1c8fc>
  479994:	ldr	x0, [sp, #96]
  479998:	ldrb	w0, [x0]
  47999c:	cmp	w0, #0x25
  4799a0:	b.ne	4799dc <_obstack_memory_used@@Base+0x1c89c>  // b.any
  4799a4:	ldr	x0, [sp, #96]
  4799a8:	add	x0, x0, #0x1
  4799ac:	str	x0, [sp, #96]
  4799b0:	ldr	x0, [sp, #96]
  4799b4:	ldrb	w0, [x0]
  4799b8:	cmp	w0, #0x73
  4799bc:	b.ne	4799e4 <_obstack_memory_used@@Base+0x1c8a4>  // b.any
  4799c0:	ldr	x0, [sp, #96]
  4799c4:	add	x0, x0, #0x1
  4799c8:	str	x0, [sp, #96]
  4799cc:	ldr	x0, [sp, #104]
  4799d0:	add	x0, x0, #0x1
  4799d4:	str	x0, [sp, #104]
  4799d8:	b	479958 <_obstack_memory_used@@Base+0x1c818>
  4799dc:	nop
  4799e0:	b	4799e8 <_obstack_memory_used@@Base+0x1c8a8>
  4799e4:	nop
  4799e8:	add	x2, sp, #0x20
  4799ec:	mov	x3, x19
  4799f0:	ldp	x0, x1, [x3]
  4799f4:	stp	x0, x1, [x2]
  4799f8:	ldp	x0, x1, [x3, #16]
  4799fc:	stp	x0, x1, [x2, #16]
  479a00:	add	x1, sp, #0x20
  479a04:	add	x0, sp, #0x58
  479a08:	mov	x2, x1
  479a0c:	ldr	x1, [sp, #72]
  479a10:	bl	4048f0 <vasprintf@plt>
  479a14:	cmp	w0, #0x0
  479a18:	b.ge	479a38 <_obstack_memory_used@@Base+0x1c8f8>  // b.tcont
  479a1c:	bl	404bc0 <__errno_location@plt>
  479a20:	ldr	w0, [x0]
  479a24:	cmp	w0, #0xc
  479a28:	b.ne	479a30 <_obstack_memory_used@@Base+0x1c8f0>  // b.any
  479a2c:	bl	412b2c <wcrtomb@plt+0xde1c>
  479a30:	mov	x0, #0x0                   	// #0
  479a34:	b	479a3c <_obstack_memory_used@@Base+0x1c8fc>
  479a38:	ldr	x0, [sp, #88]
  479a3c:	ldr	x19, [sp, #16]
  479a40:	ldp	x29, x30, [sp], #112
  479a44:	ret
  479a48:	sub	sp, sp, #0x40
  479a4c:	str	x0, [sp, #8]
  479a50:	str	x1, [sp]
  479a54:	ldr	x0, [sp]
  479a58:	ldr	w0, [x0, #44]
  479a5c:	str	w0, [sp, #60]
  479a60:	ldr	x0, [sp]
  479a64:	ldr	w0, [x0, #48]
  479a68:	str	w0, [sp, #44]
  479a6c:	ldr	x0, [sp]
  479a70:	ldr	w0, [x0]
  479a74:	str	w0, [sp, #56]
  479a78:	b	479c58 <_obstack_memory_used@@Base+0x1cb18>
  479a7c:	ldr	w1, [sp, #56]
  479a80:	ldr	w0, [sp, #44]
  479a84:	sub	w1, w1, w0
  479a88:	ldr	w2, [sp, #44]
  479a8c:	ldr	w0, [sp, #60]
  479a90:	sub	w0, w2, w0
  479a94:	cmp	w1, w0
  479a98:	b.le	479b8c <_obstack_memory_used@@Base+0x1ca4c>
  479a9c:	ldr	w1, [sp, #44]
  479aa0:	ldr	w0, [sp, #60]
  479aa4:	sub	w0, w1, w0
  479aa8:	str	w0, [sp, #28]
  479aac:	str	wzr, [sp, #52]
  479ab0:	b	479b68 <_obstack_memory_used@@Base+0x1ca28>
  479ab4:	ldr	w1, [sp, #60]
  479ab8:	ldr	w0, [sp, #52]
  479abc:	add	w0, w1, w0
  479ac0:	sxtw	x0, w0
  479ac4:	lsl	x0, x0, #3
  479ac8:	ldr	x1, [sp, #8]
  479acc:	add	x0, x1, x0
  479ad0:	ldr	x0, [x0]
  479ad4:	str	x0, [sp, #32]
  479ad8:	ldr	w1, [sp, #44]
  479adc:	ldr	w0, [sp, #60]
  479ae0:	sub	w0, w1, w0
  479ae4:	ldr	w1, [sp, #56]
  479ae8:	sub	w1, w1, w0
  479aec:	ldr	w0, [sp, #52]
  479af0:	add	w0, w1, w0
  479af4:	sxtw	x0, w0
  479af8:	lsl	x0, x0, #3
  479afc:	ldr	x1, [sp, #8]
  479b00:	add	x1, x1, x0
  479b04:	ldr	w2, [sp, #60]
  479b08:	ldr	w0, [sp, #52]
  479b0c:	add	w0, w2, w0
  479b10:	sxtw	x0, w0
  479b14:	lsl	x0, x0, #3
  479b18:	ldr	x2, [sp, #8]
  479b1c:	add	x0, x2, x0
  479b20:	ldr	x1, [x1]
  479b24:	str	x1, [x0]
  479b28:	ldr	w1, [sp, #44]
  479b2c:	ldr	w0, [sp, #60]
  479b30:	sub	w0, w1, w0
  479b34:	ldr	w1, [sp, #56]
  479b38:	sub	w1, w1, w0
  479b3c:	ldr	w0, [sp, #52]
  479b40:	add	w0, w1, w0
  479b44:	sxtw	x0, w0
  479b48:	lsl	x0, x0, #3
  479b4c:	ldr	x1, [sp, #8]
  479b50:	add	x0, x1, x0
  479b54:	ldr	x1, [sp, #32]
  479b58:	str	x1, [x0]
  479b5c:	ldr	w0, [sp, #52]
  479b60:	add	w0, w0, #0x1
  479b64:	str	w0, [sp, #52]
  479b68:	ldr	w1, [sp, #52]
  479b6c:	ldr	w0, [sp, #28]
  479b70:	cmp	w1, w0
  479b74:	b.lt	479ab4 <_obstack_memory_used@@Base+0x1c974>  // b.tstop
  479b78:	ldr	w1, [sp, #56]
  479b7c:	ldr	w0, [sp, #28]
  479b80:	sub	w0, w1, w0
  479b84:	str	w0, [sp, #56]
  479b88:	b	479c58 <_obstack_memory_used@@Base+0x1cb18>
  479b8c:	ldr	w1, [sp, #56]
  479b90:	ldr	w0, [sp, #44]
  479b94:	sub	w0, w1, w0
  479b98:	str	w0, [sp, #40]
  479b9c:	str	wzr, [sp, #48]
  479ba0:	b	479c38 <_obstack_memory_used@@Base+0x1caf8>
  479ba4:	ldr	w1, [sp, #60]
  479ba8:	ldr	w0, [sp, #48]
  479bac:	add	w0, w1, w0
  479bb0:	sxtw	x0, w0
  479bb4:	lsl	x0, x0, #3
  479bb8:	ldr	x1, [sp, #8]
  479bbc:	add	x0, x1, x0
  479bc0:	ldr	x0, [x0]
  479bc4:	str	x0, [sp, #32]
  479bc8:	ldr	w1, [sp, #44]
  479bcc:	ldr	w0, [sp, #48]
  479bd0:	add	w0, w1, w0
  479bd4:	sxtw	x0, w0
  479bd8:	lsl	x0, x0, #3
  479bdc:	ldr	x1, [sp, #8]
  479be0:	add	x1, x1, x0
  479be4:	ldr	w2, [sp, #60]
  479be8:	ldr	w0, [sp, #48]
  479bec:	add	w0, w2, w0
  479bf0:	sxtw	x0, w0
  479bf4:	lsl	x0, x0, #3
  479bf8:	ldr	x2, [sp, #8]
  479bfc:	add	x0, x2, x0
  479c00:	ldr	x1, [x1]
  479c04:	str	x1, [x0]
  479c08:	ldr	w1, [sp, #44]
  479c0c:	ldr	w0, [sp, #48]
  479c10:	add	w0, w1, w0
  479c14:	sxtw	x0, w0
  479c18:	lsl	x0, x0, #3
  479c1c:	ldr	x1, [sp, #8]
  479c20:	add	x0, x1, x0
  479c24:	ldr	x1, [sp, #32]
  479c28:	str	x1, [x0]
  479c2c:	ldr	w0, [sp, #48]
  479c30:	add	w0, w0, #0x1
  479c34:	str	w0, [sp, #48]
  479c38:	ldr	w1, [sp, #48]
  479c3c:	ldr	w0, [sp, #40]
  479c40:	cmp	w1, w0
  479c44:	b.lt	479ba4 <_obstack_memory_used@@Base+0x1ca64>  // b.tstop
  479c48:	ldr	w1, [sp, #60]
  479c4c:	ldr	w0, [sp, #40]
  479c50:	add	w0, w1, w0
  479c54:	str	w0, [sp, #60]
  479c58:	ldr	w1, [sp, #56]
  479c5c:	ldr	w0, [sp, #44]
  479c60:	cmp	w1, w0
  479c64:	b.le	479c78 <_obstack_memory_used@@Base+0x1cb38>
  479c68:	ldr	w1, [sp, #44]
  479c6c:	ldr	w0, [sp, #60]
  479c70:	cmp	w1, w0
  479c74:	b.gt	479a7c <_obstack_memory_used@@Base+0x1c93c>
  479c78:	ldr	x0, [sp]
  479c7c:	ldr	w1, [x0, #44]
  479c80:	ldr	x0, [sp]
  479c84:	ldr	w2, [x0]
  479c88:	ldr	x0, [sp]
  479c8c:	ldr	w0, [x0, #48]
  479c90:	sub	w0, w2, w0
  479c94:	add	w1, w1, w0
  479c98:	ldr	x0, [sp]
  479c9c:	str	w1, [x0, #44]
  479ca0:	ldr	x0, [sp]
  479ca4:	ldr	w1, [x0]
  479ca8:	ldr	x0, [sp]
  479cac:	str	w1, [x0, #48]
  479cb0:	nop
  479cb4:	add	sp, sp, #0x40
  479cb8:	ret
  479cbc:	stp	x29, x30, [sp, #-160]!
  479cc0:	mov	x29, sp
  479cc4:	str	x19, [sp, #16]
  479cc8:	str	w0, [sp, #92]
  479ccc:	str	x1, [sp, #80]
  479cd0:	str	x2, [sp, #72]
  479cd4:	str	x3, [sp, #64]
  479cd8:	str	x4, [sp, #56]
  479cdc:	str	w5, [sp, #88]
  479ce0:	str	x6, [sp, #48]
  479ce4:	str	w7, [sp, #44]
  479ce8:	str	xzr, [sp, #136]
  479cec:	ldr	x0, [sp, #48]
  479cf0:	ldr	x0, [x0, #32]
  479cf4:	str	x0, [sp, #152]
  479cf8:	b	479d08 <_obstack_memory_used@@Base+0x1cbc8>
  479cfc:	ldr	x0, [sp, #152]
  479d00:	add	x0, x0, #0x1
  479d04:	str	x0, [sp, #152]
  479d08:	ldr	x0, [sp, #152]
  479d0c:	ldrb	w0, [x0]
  479d10:	cmp	w0, #0x0
  479d14:	b.eq	479d28 <_obstack_memory_used@@Base+0x1cbe8>  // b.none
  479d18:	ldr	x0, [sp, #152]
  479d1c:	ldrb	w0, [x0]
  479d20:	cmp	w0, #0x3d
  479d24:	b.ne	479cfc <_obstack_memory_used@@Base+0x1cbbc>  // b.any
  479d28:	ldr	x0, [sp, #48]
  479d2c:	ldr	x0, [x0, #32]
  479d30:	ldr	x1, [sp, #152]
  479d34:	sub	x0, x1, x0
  479d38:	str	x0, [sp, #96]
  479d3c:	ldr	x0, [sp, #64]
  479d40:	str	x0, [sp, #144]
  479d44:	str	wzr, [sp, #132]
  479d48:	b	479dbc <_obstack_memory_used@@Base+0x1cc7c>
  479d4c:	ldr	x0, [sp, #144]
  479d50:	ldr	x3, [x0]
  479d54:	ldr	x0, [sp, #48]
  479d58:	ldr	x0, [x0, #32]
  479d5c:	ldr	x2, [sp, #96]
  479d60:	mov	x1, x0
  479d64:	mov	x0, x3
  479d68:	bl	404480 <strncmp@plt>
  479d6c:	cmp	w0, #0x0
  479d70:	b.ne	479da4 <_obstack_memory_used@@Base+0x1cc64>  // b.any
  479d74:	ldr	x0, [sp, #144]
  479d78:	ldr	x0, [x0]
  479d7c:	bl	4040b0 <strlen@plt>
  479d80:	mov	x1, x0
  479d84:	ldr	x0, [sp, #96]
  479d88:	cmp	x0, x1
  479d8c:	b.ne	479da4 <_obstack_memory_used@@Base+0x1cc64>  // b.any
  479d90:	ldr	x0, [sp, #144]
  479d94:	str	x0, [sp, #136]
  479d98:	ldr	w0, [sp, #132]
  479d9c:	str	w0, [sp, #128]
  479da0:	b	479dcc <_obstack_memory_used@@Base+0x1cc8c>
  479da4:	ldr	x0, [sp, #144]
  479da8:	add	x0, x0, #0x20
  479dac:	str	x0, [sp, #144]
  479db0:	ldr	w0, [sp, #132]
  479db4:	add	w0, w0, #0x1
  479db8:	str	w0, [sp, #132]
  479dbc:	ldr	x0, [sp, #144]
  479dc0:	ldr	x0, [x0]
  479dc4:	cmp	x0, #0x0
  479dc8:	b.ne	479d4c <_obstack_memory_used@@Base+0x1cc0c>  // b.any
  479dcc:	ldr	x0, [sp, #136]
  479dd0:	cmp	x0, #0x0
  479dd4:	b.ne	47a138 <_obstack_memory_used@@Base+0x1cff8>  // b.any
  479dd8:	str	xzr, [sp, #120]
  479ddc:	str	wzr, [sp, #116]
  479de0:	str	wzr, [sp, #112]
  479de4:	mov	w0, #0xffffffff            	// #-1
  479de8:	str	w0, [sp, #108]
  479dec:	ldr	x0, [sp, #64]
  479df0:	str	x0, [sp, #144]
  479df4:	str	wzr, [sp, #128]
  479df8:	b	479f60 <_obstack_memory_used@@Base+0x1ce20>
  479dfc:	ldr	x0, [sp, #144]
  479e00:	ldr	x3, [x0]
  479e04:	ldr	x0, [sp, #48]
  479e08:	ldr	x0, [x0, #32]
  479e0c:	ldr	x2, [sp, #96]
  479e10:	mov	x1, x0
  479e14:	mov	x0, x3
  479e18:	bl	404480 <strncmp@plt>
  479e1c:	cmp	w0, #0x0
  479e20:	b.ne	479f48 <_obstack_memory_used@@Base+0x1ce08>  // b.any
  479e24:	ldr	x0, [sp, #136]
  479e28:	cmp	x0, #0x0
  479e2c:	b.ne	479e44 <_obstack_memory_used@@Base+0x1cd04>  // b.any
  479e30:	ldr	x0, [sp, #144]
  479e34:	str	x0, [sp, #136]
  479e38:	ldr	w0, [sp, #128]
  479e3c:	str	w0, [sp, #108]
  479e40:	b	479f48 <_obstack_memory_used@@Base+0x1ce08>
  479e44:	ldr	w0, [sp, #88]
  479e48:	cmp	w0, #0x0
  479e4c:	b.ne	479e98 <_obstack_memory_used@@Base+0x1cd58>  // b.any
  479e50:	ldr	x0, [sp, #136]
  479e54:	ldr	w1, [x0, #8]
  479e58:	ldr	x0, [sp, #144]
  479e5c:	ldr	w0, [x0, #8]
  479e60:	cmp	w1, w0
  479e64:	b.ne	479e98 <_obstack_memory_used@@Base+0x1cd58>  // b.any
  479e68:	ldr	x0, [sp, #136]
  479e6c:	ldr	x1, [x0, #16]
  479e70:	ldr	x0, [sp, #144]
  479e74:	ldr	x0, [x0, #16]
  479e78:	cmp	x1, x0
  479e7c:	b.ne	479e98 <_obstack_memory_used@@Base+0x1cd58>  // b.any
  479e80:	ldr	x0, [sp, #136]
  479e84:	ldr	w1, [x0, #24]
  479e88:	ldr	x0, [sp, #144]
  479e8c:	ldr	w0, [x0, #24]
  479e90:	cmp	w1, w0
  479e94:	b.eq	479f48 <_obstack_memory_used@@Base+0x1ce08>  // b.none
  479e98:	ldr	w0, [sp, #112]
  479e9c:	cmp	w0, #0x0
  479ea0:	b.ne	479f48 <_obstack_memory_used@@Base+0x1ce08>  // b.any
  479ea4:	ldr	w0, [sp, #44]
  479ea8:	cmp	w0, #0x0
  479eac:	b.ne	479ebc <_obstack_memory_used@@Base+0x1cd7c>  // b.any
  479eb0:	mov	w0, #0x1                   	// #1
  479eb4:	str	w0, [sp, #112]
  479eb8:	b	479f28 <_obstack_memory_used@@Base+0x1cde8>
  479ebc:	ldr	x0, [sp, #120]
  479ec0:	cmp	x0, #0x0
  479ec4:	b.ne	479f28 <_obstack_memory_used@@Base+0x1cde8>  // b.any
  479ec8:	ldrsw	x0, [sp, #132]
  479ecc:	bl	4043f0 <malloc@plt>
  479ed0:	str	x0, [sp, #120]
  479ed4:	ldr	x0, [sp, #120]
  479ed8:	cmp	x0, #0x0
  479edc:	b.ne	479eec <_obstack_memory_used@@Base+0x1cdac>  // b.any
  479ee0:	mov	w0, #0x1                   	// #1
  479ee4:	str	w0, [sp, #112]
  479ee8:	b	479ef4 <_obstack_memory_used@@Base+0x1cdb4>
  479eec:	mov	w0, #0x1                   	// #1
  479ef0:	str	w0, [sp, #116]
  479ef4:	ldr	x0, [sp, #120]
  479ef8:	cmp	x0, #0x0
  479efc:	b.eq	479f28 <_obstack_memory_used@@Base+0x1cde8>  // b.none
  479f00:	ldrsw	x0, [sp, #132]
  479f04:	mov	x2, x0
  479f08:	mov	w1, #0x0                   	// #0
  479f0c:	ldr	x0, [sp, #120]
  479f10:	bl	4044d0 <memset@plt>
  479f14:	ldrsw	x0, [sp, #108]
  479f18:	ldr	x1, [sp, #120]
  479f1c:	add	x0, x1, x0
  479f20:	mov	w1, #0x1                   	// #1
  479f24:	strb	w1, [x0]
  479f28:	ldr	x0, [sp, #120]
  479f2c:	cmp	x0, #0x0
  479f30:	b.eq	479f48 <_obstack_memory_used@@Base+0x1ce08>  // b.none
  479f34:	ldrsw	x0, [sp, #128]
  479f38:	ldr	x1, [sp, #120]
  479f3c:	add	x0, x1, x0
  479f40:	mov	w1, #0x1                   	// #1
  479f44:	strb	w1, [x0]
  479f48:	ldr	x0, [sp, #144]
  479f4c:	add	x0, x0, #0x20
  479f50:	str	x0, [sp, #144]
  479f54:	ldr	w0, [sp, #128]
  479f58:	add	w0, w0, #0x1
  479f5c:	str	w0, [sp, #128]
  479f60:	ldr	x0, [sp, #144]
  479f64:	ldr	x0, [x0]
  479f68:	cmp	x0, #0x0
  479f6c:	b.ne	479dfc <_obstack_memory_used@@Base+0x1ccbc>  // b.any
  479f70:	ldr	x0, [sp, #120]
  479f74:	cmp	x0, #0x0
  479f78:	b.ne	479f88 <_obstack_memory_used@@Base+0x1ce48>  // b.any
  479f7c:	ldr	w0, [sp, #112]
  479f80:	cmp	w0, #0x0
  479f84:	b.eq	47a130 <_obstack_memory_used@@Base+0x1cff0>  // b.none
  479f88:	ldr	w0, [sp, #44]
  479f8c:	cmp	w0, #0x0
  479f90:	b.eq	47a0d8 <_obstack_memory_used@@Base+0x1cf98>  // b.none
  479f94:	ldr	w0, [sp, #112]
  479f98:	cmp	w0, #0x0
  479f9c:	b.eq	479fe8 <_obstack_memory_used@@Base+0x1cea8>  // b.none
  479fa0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  479fa4:	add	x0, x0, #0x498
  479fa8:	ldr	x19, [x0]
  479fac:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  479fb0:	add	x0, x0, #0xb98
  479fb4:	bl	404c60 <gettext@plt>
  479fb8:	mov	x5, x0
  479fbc:	ldr	x0, [sp, #80]
  479fc0:	ldr	x1, [x0]
  479fc4:	ldr	x0, [sp, #48]
  479fc8:	ldr	x0, [x0, #32]
  479fcc:	mov	x4, x0
  479fd0:	ldr	x3, [sp, #160]
  479fd4:	mov	x2, x1
  479fd8:	mov	x1, x5
  479fdc:	mov	x0, x19
  479fe0:	bl	404c90 <fprintf@plt>
  479fe4:	b	47a0d8 <_obstack_memory_used@@Base+0x1cf98>
  479fe8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  479fec:	add	x0, x0, #0x498
  479ff0:	ldr	x0, [x0]
  479ff4:	bl	404140 <flockfile@plt>
  479ff8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  479ffc:	add	x0, x0, #0x498
  47a000:	ldr	x19, [x0]
  47a004:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a008:	add	x0, x0, #0xbb8
  47a00c:	bl	404c60 <gettext@plt>
  47a010:	mov	x5, x0
  47a014:	ldr	x0, [sp, #80]
  47a018:	ldr	x1, [x0]
  47a01c:	ldr	x0, [sp, #48]
  47a020:	ldr	x0, [x0, #32]
  47a024:	mov	x4, x0
  47a028:	ldr	x3, [sp, #160]
  47a02c:	mov	x2, x1
  47a030:	mov	x1, x5
  47a034:	mov	x0, x19
  47a038:	bl	404c90 <fprintf@plt>
  47a03c:	str	wzr, [sp, #128]
  47a040:	b	47a0a0 <_obstack_memory_used@@Base+0x1cf60>
  47a044:	ldrsw	x0, [sp, #128]
  47a048:	ldr	x1, [sp, #120]
  47a04c:	add	x0, x1, x0
  47a050:	ldrb	w0, [x0]
  47a054:	cmp	w0, #0x0
  47a058:	b.eq	47a094 <_obstack_memory_used@@Base+0x1cf54>  // b.none
  47a05c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47a060:	add	x0, x0, #0x498
  47a064:	ldr	x4, [x0]
  47a068:	ldrsw	x0, [sp, #128]
  47a06c:	lsl	x0, x0, #5
  47a070:	ldr	x1, [sp, #64]
  47a074:	add	x0, x1, x0
  47a078:	ldr	x0, [x0]
  47a07c:	mov	x3, x0
  47a080:	ldr	x2, [sp, #160]
  47a084:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a088:	add	x1, x0, #0xbe8
  47a08c:	mov	x0, x4
  47a090:	bl	404c90 <fprintf@plt>
  47a094:	ldr	w0, [sp, #128]
  47a098:	add	w0, w0, #0x1
  47a09c:	str	w0, [sp, #128]
  47a0a0:	ldr	w1, [sp, #128]
  47a0a4:	ldr	w0, [sp, #132]
  47a0a8:	cmp	w1, w0
  47a0ac:	b.lt	47a044 <_obstack_memory_used@@Base+0x1cf04>  // b.tstop
  47a0b0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47a0b4:	add	x0, x0, #0x498
  47a0b8:	ldr	x0, [x0]
  47a0bc:	mov	x1, x0
  47a0c0:	mov	w0, #0xa                   	// #10
  47a0c4:	bl	404250 <fputc@plt>
  47a0c8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47a0cc:	add	x0, x0, #0x498
  47a0d0:	ldr	x0, [x0]
  47a0d4:	bl	404420 <funlockfile@plt>
  47a0d8:	ldr	w0, [sp, #116]
  47a0dc:	cmp	w0, #0x0
  47a0e0:	b.eq	47a0ec <_obstack_memory_used@@Base+0x1cfac>  // b.none
  47a0e4:	ldr	x0, [sp, #120]
  47a0e8:	bl	404880 <free@plt>
  47a0ec:	ldr	x0, [sp, #48]
  47a0f0:	ldr	x19, [x0, #32]
  47a0f4:	ldr	x0, [sp, #48]
  47a0f8:	ldr	x0, [x0, #32]
  47a0fc:	bl	4040b0 <strlen@plt>
  47a100:	add	x1, x19, x0
  47a104:	ldr	x0, [sp, #48]
  47a108:	str	x1, [x0, #32]
  47a10c:	ldr	x0, [sp, #48]
  47a110:	ldr	w0, [x0]
  47a114:	add	w1, w0, #0x1
  47a118:	ldr	x0, [sp, #48]
  47a11c:	str	w1, [x0]
  47a120:	ldr	x0, [sp, #48]
  47a124:	str	wzr, [x0, #8]
  47a128:	mov	w0, #0x3f                  	// #63
  47a12c:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a130:	ldr	w0, [sp, #108]
  47a134:	str	w0, [sp, #128]
  47a138:	ldr	x0, [sp, #136]
  47a13c:	cmp	x0, #0x0
  47a140:	b.ne	47a220 <_obstack_memory_used@@Base+0x1d0e0>  // b.any
  47a144:	ldr	w0, [sp, #88]
  47a148:	cmp	w0, #0x0
  47a14c:	b.eq	47a19c <_obstack_memory_used@@Base+0x1d05c>  // b.none
  47a150:	ldr	x0, [sp, #48]
  47a154:	ldr	w0, [x0]
  47a158:	sxtw	x0, w0
  47a15c:	lsl	x0, x0, #3
  47a160:	ldr	x1, [sp, #80]
  47a164:	add	x0, x1, x0
  47a168:	ldr	x0, [x0]
  47a16c:	add	x0, x0, #0x1
  47a170:	ldrb	w0, [x0]
  47a174:	cmp	w0, #0x2d
  47a178:	b.eq	47a19c <_obstack_memory_used@@Base+0x1d05c>  // b.none
  47a17c:	ldr	x0, [sp, #48]
  47a180:	ldr	x0, [x0, #32]
  47a184:	ldrb	w0, [x0]
  47a188:	mov	w1, w0
  47a18c:	ldr	x0, [sp, #72]
  47a190:	bl	404930 <strchr@plt>
  47a194:	cmp	x0, #0x0
  47a198:	b.ne	47a218 <_obstack_memory_used@@Base+0x1d0d8>  // b.any
  47a19c:	ldr	w0, [sp, #44]
  47a1a0:	cmp	w0, #0x0
  47a1a4:	b.eq	47a1ec <_obstack_memory_used@@Base+0x1d0ac>  // b.none
  47a1a8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47a1ac:	add	x0, x0, #0x498
  47a1b0:	ldr	x19, [x0]
  47a1b4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a1b8:	add	x0, x0, #0xbf0
  47a1bc:	bl	404c60 <gettext@plt>
  47a1c0:	mov	x5, x0
  47a1c4:	ldr	x0, [sp, #80]
  47a1c8:	ldr	x1, [x0]
  47a1cc:	ldr	x0, [sp, #48]
  47a1d0:	ldr	x0, [x0, #32]
  47a1d4:	mov	x4, x0
  47a1d8:	ldr	x3, [sp, #160]
  47a1dc:	mov	x2, x1
  47a1e0:	mov	x1, x5
  47a1e4:	mov	x0, x19
  47a1e8:	bl	404c90 <fprintf@plt>
  47a1ec:	ldr	x0, [sp, #48]
  47a1f0:	str	xzr, [x0, #32]
  47a1f4:	ldr	x0, [sp, #48]
  47a1f8:	ldr	w0, [x0]
  47a1fc:	add	w1, w0, #0x1
  47a200:	ldr	x0, [sp, #48]
  47a204:	str	w1, [x0]
  47a208:	ldr	x0, [sp, #48]
  47a20c:	str	wzr, [x0, #8]
  47a210:	mov	w0, #0x3f                  	// #63
  47a214:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a218:	mov	w0, #0xffffffff            	// #-1
  47a21c:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a220:	ldr	x0, [sp, #48]
  47a224:	ldr	w0, [x0]
  47a228:	add	w1, w0, #0x1
  47a22c:	ldr	x0, [sp, #48]
  47a230:	str	w1, [x0]
  47a234:	ldr	x0, [sp, #48]
  47a238:	str	xzr, [x0, #32]
  47a23c:	ldr	x0, [sp, #152]
  47a240:	ldrb	w0, [x0]
  47a244:	cmp	w0, #0x0
  47a248:	b.eq	47a2d8 <_obstack_memory_used@@Base+0x1d198>  // b.none
  47a24c:	ldr	x0, [sp, #136]
  47a250:	ldr	w0, [x0, #8]
  47a254:	cmp	w0, #0x0
  47a258:	b.eq	47a270 <_obstack_memory_used@@Base+0x1d130>  // b.none
  47a25c:	ldr	x0, [sp, #152]
  47a260:	add	x1, x0, #0x1
  47a264:	ldr	x0, [sp, #48]
  47a268:	str	x1, [x0, #16]
  47a26c:	b	47a3b0 <_obstack_memory_used@@Base+0x1d270>
  47a270:	ldr	w0, [sp, #44]
  47a274:	cmp	w0, #0x0
  47a278:	b.eq	47a2c0 <_obstack_memory_used@@Base+0x1d180>  // b.none
  47a27c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47a280:	add	x0, x0, #0x498
  47a284:	ldr	x19, [x0]
  47a288:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a28c:	add	x0, x0, #0xc10
  47a290:	bl	404c60 <gettext@plt>
  47a294:	mov	x5, x0
  47a298:	ldr	x0, [sp, #80]
  47a29c:	ldr	x1, [x0]
  47a2a0:	ldr	x0, [sp, #136]
  47a2a4:	ldr	x0, [x0]
  47a2a8:	mov	x4, x0
  47a2ac:	ldr	x3, [sp, #160]
  47a2b0:	mov	x2, x1
  47a2b4:	mov	x1, x5
  47a2b8:	mov	x0, x19
  47a2bc:	bl	404c90 <fprintf@plt>
  47a2c0:	ldr	x0, [sp, #136]
  47a2c4:	ldr	w1, [x0, #24]
  47a2c8:	ldr	x0, [sp, #48]
  47a2cc:	str	w1, [x0, #8]
  47a2d0:	mov	w0, #0x3f                  	// #63
  47a2d4:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a2d8:	ldr	x0, [sp, #136]
  47a2dc:	ldr	w0, [x0, #8]
  47a2e0:	cmp	w0, #0x1
  47a2e4:	b.ne	47a3b0 <_obstack_memory_used@@Base+0x1d270>  // b.any
  47a2e8:	ldr	x0, [sp, #48]
  47a2ec:	ldr	w0, [x0]
  47a2f0:	ldr	w1, [sp, #92]
  47a2f4:	cmp	w1, w0
  47a2f8:	b.le	47a330 <_obstack_memory_used@@Base+0x1d1f0>
  47a2fc:	ldr	x0, [sp, #48]
  47a300:	ldr	w0, [x0]
  47a304:	add	w2, w0, #0x1
  47a308:	ldr	x1, [sp, #48]
  47a30c:	str	w2, [x1]
  47a310:	sxtw	x0, w0
  47a314:	lsl	x0, x0, #3
  47a318:	ldr	x1, [sp, #80]
  47a31c:	add	x0, x1, x0
  47a320:	ldr	x1, [x0]
  47a324:	ldr	x0, [sp, #48]
  47a328:	str	x1, [x0, #16]
  47a32c:	b	47a3b0 <_obstack_memory_used@@Base+0x1d270>
  47a330:	ldr	w0, [sp, #44]
  47a334:	cmp	w0, #0x0
  47a338:	b.eq	47a380 <_obstack_memory_used@@Base+0x1d240>  // b.none
  47a33c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47a340:	add	x0, x0, #0x498
  47a344:	ldr	x19, [x0]
  47a348:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a34c:	add	x0, x0, #0xc40
  47a350:	bl	404c60 <gettext@plt>
  47a354:	mov	x5, x0
  47a358:	ldr	x0, [sp, #80]
  47a35c:	ldr	x1, [x0]
  47a360:	ldr	x0, [sp, #136]
  47a364:	ldr	x0, [x0]
  47a368:	mov	x4, x0
  47a36c:	ldr	x3, [sp, #160]
  47a370:	mov	x2, x1
  47a374:	mov	x1, x5
  47a378:	mov	x0, x19
  47a37c:	bl	404c90 <fprintf@plt>
  47a380:	ldr	x0, [sp, #136]
  47a384:	ldr	w1, [x0, #24]
  47a388:	ldr	x0, [sp, #48]
  47a38c:	str	w1, [x0, #8]
  47a390:	ldr	x0, [sp, #72]
  47a394:	ldrb	w0, [x0]
  47a398:	cmp	w0, #0x3a
  47a39c:	b.ne	47a3a8 <_obstack_memory_used@@Base+0x1d268>  // b.any
  47a3a0:	mov	w0, #0x3a                  	// #58
  47a3a4:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a3a8:	mov	w0, #0x3f                  	// #63
  47a3ac:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a3b0:	ldr	x0, [sp, #56]
  47a3b4:	cmp	x0, #0x0
  47a3b8:	b.eq	47a3c8 <_obstack_memory_used@@Base+0x1d288>  // b.none
  47a3bc:	ldr	x0, [sp, #56]
  47a3c0:	ldr	w1, [sp, #128]
  47a3c4:	str	w1, [x0]
  47a3c8:	ldr	x0, [sp, #136]
  47a3cc:	ldr	x0, [x0, #16]
  47a3d0:	cmp	x0, #0x0
  47a3d4:	b.eq	47a3f4 <_obstack_memory_used@@Base+0x1d2b4>  // b.none
  47a3d8:	ldr	x0, [sp, #136]
  47a3dc:	ldr	x0, [x0, #16]
  47a3e0:	ldr	x1, [sp, #136]
  47a3e4:	ldr	w1, [x1, #24]
  47a3e8:	str	w1, [x0]
  47a3ec:	mov	w0, #0x0                   	// #0
  47a3f0:	b	47a3fc <_obstack_memory_used@@Base+0x1d2bc>
  47a3f4:	ldr	x0, [sp, #136]
  47a3f8:	ldr	w0, [x0, #24]
  47a3fc:	ldr	x19, [sp, #16]
  47a400:	ldp	x29, x30, [sp], #160
  47a404:	ret
  47a408:	stp	x29, x30, [sp, #-48]!
  47a40c:	mov	x29, sp
  47a410:	str	w0, [sp, #44]
  47a414:	str	x1, [sp, #32]
  47a418:	str	x2, [sp, #24]
  47a41c:	str	x3, [sp, #16]
  47a420:	str	w4, [sp, #40]
  47a424:	ldr	x0, [sp, #16]
  47a428:	ldr	w0, [x0]
  47a42c:	cmp	w0, #0x0
  47a430:	b.ne	47a440 <_obstack_memory_used@@Base+0x1d300>  // b.any
  47a434:	ldr	x0, [sp, #16]
  47a438:	mov	w1, #0x1                   	// #1
  47a43c:	str	w1, [x0]
  47a440:	ldr	x0, [sp, #16]
  47a444:	ldr	w1, [x0]
  47a448:	ldr	x0, [sp, #16]
  47a44c:	str	w1, [x0, #48]
  47a450:	ldr	x0, [sp, #16]
  47a454:	ldr	w1, [x0, #48]
  47a458:	ldr	x0, [sp, #16]
  47a45c:	str	w1, [x0, #44]
  47a460:	ldr	x0, [sp, #16]
  47a464:	str	xzr, [x0, #32]
  47a468:	ldr	x0, [sp, #24]
  47a46c:	ldrb	w0, [x0]
  47a470:	cmp	w0, #0x2d
  47a474:	b.ne	47a494 <_obstack_memory_used@@Base+0x1d354>  // b.any
  47a478:	ldr	x0, [sp, #16]
  47a47c:	mov	w1, #0x2                   	// #2
  47a480:	str	w1, [x0, #40]
  47a484:	ldr	x0, [sp, #24]
  47a488:	add	x0, x0, #0x1
  47a48c:	str	x0, [sp, #24]
  47a490:	b	47a4f4 <_obstack_memory_used@@Base+0x1d3b4>
  47a494:	ldr	x0, [sp, #24]
  47a498:	ldrb	w0, [x0]
  47a49c:	cmp	w0, #0x2b
  47a4a0:	b.ne	47a4bc <_obstack_memory_used@@Base+0x1d37c>  // b.any
  47a4a4:	ldr	x0, [sp, #16]
  47a4a8:	str	wzr, [x0, #40]
  47a4ac:	ldr	x0, [sp, #24]
  47a4b0:	add	x0, x0, #0x1
  47a4b4:	str	x0, [sp, #24]
  47a4b8:	b	47a4f4 <_obstack_memory_used@@Base+0x1d3b4>
  47a4bc:	ldr	w0, [sp, #40]
  47a4c0:	cmp	w0, #0x0
  47a4c4:	b.ne	47a4dc <_obstack_memory_used@@Base+0x1d39c>  // b.any
  47a4c8:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a4cc:	add	x0, x0, #0xc68
  47a4d0:	bl	404bf0 <getenv@plt>
  47a4d4:	cmp	x0, #0x0
  47a4d8:	b.eq	47a4e8 <_obstack_memory_used@@Base+0x1d3a8>  // b.none
  47a4dc:	ldr	x0, [sp, #16]
  47a4e0:	str	wzr, [x0, #40]
  47a4e4:	b	47a4f4 <_obstack_memory_used@@Base+0x1d3b4>
  47a4e8:	ldr	x0, [sp, #16]
  47a4ec:	mov	w1, #0x1                   	// #1
  47a4f0:	str	w1, [x0, #40]
  47a4f4:	ldr	x0, [sp, #16]
  47a4f8:	mov	w1, #0x1                   	// #1
  47a4fc:	str	w1, [x0, #24]
  47a500:	ldr	x0, [sp, #24]
  47a504:	ldp	x29, x30, [sp], #48
  47a508:	ret
  47a50c:	sub	sp, sp, #0x90
  47a510:	stp	x29, x30, [sp, #16]
  47a514:	add	x29, sp, #0x10
  47a518:	str	x19, [sp, #32]
  47a51c:	str	w0, [sp, #108]
  47a520:	str	x1, [sp, #96]
  47a524:	str	x2, [sp, #88]
  47a528:	str	x3, [sp, #80]
  47a52c:	str	x4, [sp, #72]
  47a530:	str	w5, [sp, #104]
  47a534:	str	x6, [sp, #64]
  47a538:	str	w7, [sp, #60]
  47a53c:	ldr	x0, [sp, #64]
  47a540:	ldr	w0, [x0, #4]
  47a544:	str	w0, [sp, #140]
  47a548:	ldr	w0, [sp, #108]
  47a54c:	cmp	w0, #0x0
  47a550:	b.gt	47a55c <_obstack_memory_used@@Base+0x1d41c>
  47a554:	mov	w0, #0xffffffff            	// #-1
  47a558:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47a55c:	ldr	x0, [sp, #64]
  47a560:	str	xzr, [x0, #16]
  47a564:	ldr	x0, [sp, #64]
  47a568:	ldr	w0, [x0]
  47a56c:	cmp	w0, #0x0
  47a570:	b.eq	47a584 <_obstack_memory_used@@Base+0x1d444>  // b.none
  47a574:	ldr	x0, [sp, #64]
  47a578:	ldr	w0, [x0, #24]
  47a57c:	cmp	w0, #0x0
  47a580:	b.ne	47a5a4 <_obstack_memory_used@@Base+0x1d464>  // b.any
  47a584:	ldr	w4, [sp, #60]
  47a588:	ldr	x3, [sp, #64]
  47a58c:	ldr	x2, [sp, #88]
  47a590:	ldr	x1, [sp, #96]
  47a594:	ldr	w0, [sp, #108]
  47a598:	bl	47a408 <_obstack_memory_used@@Base+0x1d2c8>
  47a59c:	str	x0, [sp, #88]
  47a5a0:	b	47a5d0 <_obstack_memory_used@@Base+0x1d490>
  47a5a4:	ldr	x0, [sp, #88]
  47a5a8:	ldrb	w0, [x0]
  47a5ac:	cmp	w0, #0x2d
  47a5b0:	b.eq	47a5c4 <_obstack_memory_used@@Base+0x1d484>  // b.none
  47a5b4:	ldr	x0, [sp, #88]
  47a5b8:	ldrb	w0, [x0]
  47a5bc:	cmp	w0, #0x2b
  47a5c0:	b.ne	47a5d0 <_obstack_memory_used@@Base+0x1d490>  // b.any
  47a5c4:	ldr	x0, [sp, #88]
  47a5c8:	add	x0, x0, #0x1
  47a5cc:	str	x0, [sp, #88]
  47a5d0:	ldr	x0, [sp, #88]
  47a5d4:	ldrb	w0, [x0]
  47a5d8:	cmp	w0, #0x3a
  47a5dc:	b.ne	47a5e4 <_obstack_memory_used@@Base+0x1d4a4>  // b.any
  47a5e0:	str	wzr, [sp, #140]
  47a5e4:	ldr	x0, [sp, #64]
  47a5e8:	ldr	x0, [x0, #32]
  47a5ec:	cmp	x0, #0x0
  47a5f0:	b.eq	47a608 <_obstack_memory_used@@Base+0x1d4c8>  // b.none
  47a5f4:	ldr	x0, [sp, #64]
  47a5f8:	ldr	x0, [x0, #32]
  47a5fc:	ldrb	w0, [x0]
  47a600:	cmp	w0, #0x0
  47a604:	b.ne	47aac0 <_obstack_memory_used@@Base+0x1d980>  // b.any
  47a608:	ldr	x0, [sp, #64]
  47a60c:	ldr	w1, [x0, #48]
  47a610:	ldr	x0, [sp, #64]
  47a614:	ldr	w0, [x0]
  47a618:	cmp	w1, w0
  47a61c:	b.le	47a630 <_obstack_memory_used@@Base+0x1d4f0>
  47a620:	ldr	x0, [sp, #64]
  47a624:	ldr	w1, [x0]
  47a628:	ldr	x0, [sp, #64]
  47a62c:	str	w1, [x0, #48]
  47a630:	ldr	x0, [sp, #64]
  47a634:	ldr	w1, [x0, #44]
  47a638:	ldr	x0, [sp, #64]
  47a63c:	ldr	w0, [x0]
  47a640:	cmp	w1, w0
  47a644:	b.le	47a658 <_obstack_memory_used@@Base+0x1d518>
  47a648:	ldr	x0, [sp, #64]
  47a64c:	ldr	w1, [x0]
  47a650:	ldr	x0, [sp, #64]
  47a654:	str	w1, [x0, #44]
  47a658:	ldr	x0, [sp, #64]
  47a65c:	ldr	w0, [x0, #40]
  47a660:	cmp	w0, #0x1
  47a664:	b.ne	47a760 <_obstack_memory_used@@Base+0x1d620>  // b.any
  47a668:	ldr	x0, [sp, #64]
  47a66c:	ldr	w1, [x0, #44]
  47a670:	ldr	x0, [sp, #64]
  47a674:	ldr	w0, [x0, #48]
  47a678:	cmp	w1, w0
  47a67c:	b.eq	47a6a8 <_obstack_memory_used@@Base+0x1d568>  // b.none
  47a680:	ldr	x0, [sp, #64]
  47a684:	ldr	w1, [x0, #48]
  47a688:	ldr	x0, [sp, #64]
  47a68c:	ldr	w0, [x0]
  47a690:	cmp	w1, w0
  47a694:	b.eq	47a6a8 <_obstack_memory_used@@Base+0x1d568>  // b.none
  47a698:	ldr	x1, [sp, #64]
  47a69c:	ldr	x0, [sp, #96]
  47a6a0:	bl	479a48 <_obstack_memory_used@@Base+0x1c908>
  47a6a4:	b	47a6d0 <_obstack_memory_used@@Base+0x1d590>
  47a6a8:	ldr	x0, [sp, #64]
  47a6ac:	ldr	w1, [x0, #48]
  47a6b0:	ldr	x0, [sp, #64]
  47a6b4:	ldr	w0, [x0]
  47a6b8:	cmp	w1, w0
  47a6bc:	b.eq	47a6e8 <_obstack_memory_used@@Base+0x1d5a8>  // b.none
  47a6c0:	ldr	x0, [sp, #64]
  47a6c4:	ldr	w1, [x0]
  47a6c8:	ldr	x0, [sp, #64]
  47a6cc:	str	w1, [x0, #44]
  47a6d0:	b	47a6e8 <_obstack_memory_used@@Base+0x1d5a8>
  47a6d4:	ldr	x0, [sp, #64]
  47a6d8:	ldr	w0, [x0]
  47a6dc:	add	w1, w0, #0x1
  47a6e0:	ldr	x0, [sp, #64]
  47a6e4:	str	w1, [x0]
  47a6e8:	ldr	x0, [sp, #64]
  47a6ec:	ldr	w0, [x0]
  47a6f0:	ldr	w1, [sp, #108]
  47a6f4:	cmp	w1, w0
  47a6f8:	b.le	47a750 <_obstack_memory_used@@Base+0x1d610>
  47a6fc:	ldr	x0, [sp, #64]
  47a700:	ldr	w0, [x0]
  47a704:	sxtw	x0, w0
  47a708:	lsl	x0, x0, #3
  47a70c:	ldr	x1, [sp, #96]
  47a710:	add	x0, x1, x0
  47a714:	ldr	x0, [x0]
  47a718:	ldrb	w0, [x0]
  47a71c:	cmp	w0, #0x2d
  47a720:	b.ne	47a6d4 <_obstack_memory_used@@Base+0x1d594>  // b.any
  47a724:	ldr	x0, [sp, #64]
  47a728:	ldr	w0, [x0]
  47a72c:	sxtw	x0, w0
  47a730:	lsl	x0, x0, #3
  47a734:	ldr	x1, [sp, #96]
  47a738:	add	x0, x1, x0
  47a73c:	ldr	x0, [x0]
  47a740:	add	x0, x0, #0x1
  47a744:	ldrb	w0, [x0]
  47a748:	cmp	w0, #0x0
  47a74c:	b.eq	47a6d4 <_obstack_memory_used@@Base+0x1d594>  // b.none
  47a750:	ldr	x0, [sp, #64]
  47a754:	ldr	w1, [x0]
  47a758:	ldr	x0, [sp, #64]
  47a75c:	str	w1, [x0, #48]
  47a760:	ldr	x0, [sp, #64]
  47a764:	ldr	w0, [x0]
  47a768:	ldr	w1, [sp, #108]
  47a76c:	cmp	w1, w0
  47a770:	b.eq	47a83c <_obstack_memory_used@@Base+0x1d6fc>  // b.none
  47a774:	ldr	x0, [sp, #64]
  47a778:	ldr	w0, [x0]
  47a77c:	sxtw	x0, w0
  47a780:	lsl	x0, x0, #3
  47a784:	ldr	x1, [sp, #96]
  47a788:	add	x0, x1, x0
  47a78c:	ldr	x2, [x0]
  47a790:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a794:	add	x1, x0, #0xc78
  47a798:	mov	x0, x2
  47a79c:	bl	4047c0 <strcmp@plt>
  47a7a0:	cmp	w0, #0x0
  47a7a4:	b.ne	47a83c <_obstack_memory_used@@Base+0x1d6fc>  // b.any
  47a7a8:	ldr	x0, [sp, #64]
  47a7ac:	ldr	w0, [x0]
  47a7b0:	add	w1, w0, #0x1
  47a7b4:	ldr	x0, [sp, #64]
  47a7b8:	str	w1, [x0]
  47a7bc:	ldr	x0, [sp, #64]
  47a7c0:	ldr	w1, [x0, #44]
  47a7c4:	ldr	x0, [sp, #64]
  47a7c8:	ldr	w0, [x0, #48]
  47a7cc:	cmp	w1, w0
  47a7d0:	b.eq	47a7fc <_obstack_memory_used@@Base+0x1d6bc>  // b.none
  47a7d4:	ldr	x0, [sp, #64]
  47a7d8:	ldr	w1, [x0, #48]
  47a7dc:	ldr	x0, [sp, #64]
  47a7e0:	ldr	w0, [x0]
  47a7e4:	cmp	w1, w0
  47a7e8:	b.eq	47a7fc <_obstack_memory_used@@Base+0x1d6bc>  // b.none
  47a7ec:	ldr	x1, [sp, #64]
  47a7f0:	ldr	x0, [sp, #96]
  47a7f4:	bl	479a48 <_obstack_memory_used@@Base+0x1c908>
  47a7f8:	b	47a824 <_obstack_memory_used@@Base+0x1d6e4>
  47a7fc:	ldr	x0, [sp, #64]
  47a800:	ldr	w1, [x0, #44]
  47a804:	ldr	x0, [sp, #64]
  47a808:	ldr	w0, [x0, #48]
  47a80c:	cmp	w1, w0
  47a810:	b.ne	47a824 <_obstack_memory_used@@Base+0x1d6e4>  // b.any
  47a814:	ldr	x0, [sp, #64]
  47a818:	ldr	w1, [x0]
  47a81c:	ldr	x0, [sp, #64]
  47a820:	str	w1, [x0, #44]
  47a824:	ldr	x0, [sp, #64]
  47a828:	ldr	w1, [sp, #108]
  47a82c:	str	w1, [x0, #48]
  47a830:	ldr	x0, [sp, #64]
  47a834:	ldr	w1, [sp, #108]
  47a838:	str	w1, [x0]
  47a83c:	ldr	x0, [sp, #64]
  47a840:	ldr	w0, [x0]
  47a844:	ldr	w1, [sp, #108]
  47a848:	cmp	w1, w0
  47a84c:	b.ne	47a880 <_obstack_memory_used@@Base+0x1d740>  // b.any
  47a850:	ldr	x0, [sp, #64]
  47a854:	ldr	w1, [x0, #44]
  47a858:	ldr	x0, [sp, #64]
  47a85c:	ldr	w0, [x0, #48]
  47a860:	cmp	w1, w0
  47a864:	b.eq	47a878 <_obstack_memory_used@@Base+0x1d738>  // b.none
  47a868:	ldr	x0, [sp, #64]
  47a86c:	ldr	w1, [x0, #44]
  47a870:	ldr	x0, [sp, #64]
  47a874:	str	w1, [x0]
  47a878:	mov	w0, #0xffffffff            	// #-1
  47a87c:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47a880:	ldr	x0, [sp, #64]
  47a884:	ldr	w0, [x0]
  47a888:	sxtw	x0, w0
  47a88c:	lsl	x0, x0, #3
  47a890:	ldr	x1, [sp, #96]
  47a894:	add	x0, x1, x0
  47a898:	ldr	x0, [x0]
  47a89c:	ldrb	w0, [x0]
  47a8a0:	cmp	w0, #0x2d
  47a8a4:	b.ne	47a8d4 <_obstack_memory_used@@Base+0x1d794>  // b.any
  47a8a8:	ldr	x0, [sp, #64]
  47a8ac:	ldr	w0, [x0]
  47a8b0:	sxtw	x0, w0
  47a8b4:	lsl	x0, x0, #3
  47a8b8:	ldr	x1, [sp, #96]
  47a8bc:	add	x0, x1, x0
  47a8c0:	ldr	x0, [x0]
  47a8c4:	add	x0, x0, #0x1
  47a8c8:	ldrb	w0, [x0]
  47a8cc:	cmp	w0, #0x0
  47a8d0:	b.ne	47a924 <_obstack_memory_used@@Base+0x1d7e4>  // b.any
  47a8d4:	ldr	x0, [sp, #64]
  47a8d8:	ldr	w0, [x0, #40]
  47a8dc:	cmp	w0, #0x0
  47a8e0:	b.ne	47a8ec <_obstack_memory_used@@Base+0x1d7ac>  // b.any
  47a8e4:	mov	w0, #0xffffffff            	// #-1
  47a8e8:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47a8ec:	ldr	x0, [sp, #64]
  47a8f0:	ldr	w0, [x0]
  47a8f4:	add	w2, w0, #0x1
  47a8f8:	ldr	x1, [sp, #64]
  47a8fc:	str	w2, [x1]
  47a900:	sxtw	x0, w0
  47a904:	lsl	x0, x0, #3
  47a908:	ldr	x1, [sp, #96]
  47a90c:	add	x0, x1, x0
  47a910:	ldr	x1, [x0]
  47a914:	ldr	x0, [sp, #64]
  47a918:	str	x1, [x0, #16]
  47a91c:	mov	w0, #0x1                   	// #1
  47a920:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47a924:	ldr	x0, [sp, #80]
  47a928:	cmp	x0, #0x0
  47a92c:	b.eq	47aa98 <_obstack_memory_used@@Base+0x1d958>  // b.none
  47a930:	ldr	x0, [sp, #64]
  47a934:	ldr	w0, [x0]
  47a938:	sxtw	x0, w0
  47a93c:	lsl	x0, x0, #3
  47a940:	ldr	x1, [sp, #96]
  47a944:	add	x0, x1, x0
  47a948:	ldr	x0, [x0]
  47a94c:	add	x0, x0, #0x1
  47a950:	ldrb	w0, [x0]
  47a954:	cmp	w0, #0x2d
  47a958:	b.ne	47a9b8 <_obstack_memory_used@@Base+0x1d878>  // b.any
  47a95c:	ldr	x0, [sp, #64]
  47a960:	ldr	w0, [x0]
  47a964:	sxtw	x0, w0
  47a968:	lsl	x0, x0, #3
  47a96c:	ldr	x1, [sp, #96]
  47a970:	add	x0, x1, x0
  47a974:	ldr	x0, [x0]
  47a978:	add	x1, x0, #0x2
  47a97c:	ldr	x0, [sp, #64]
  47a980:	str	x1, [x0, #32]
  47a984:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47a988:	add	x0, x0, #0xc78
  47a98c:	str	x0, [sp]
  47a990:	ldr	w7, [sp, #140]
  47a994:	ldr	x6, [sp, #64]
  47a998:	ldr	w5, [sp, #104]
  47a99c:	ldr	x4, [sp, #72]
  47a9a0:	ldr	x3, [sp, #80]
  47a9a4:	ldr	x2, [sp, #88]
  47a9a8:	ldr	x1, [sp, #96]
  47a9ac:	ldr	w0, [sp, #108]
  47a9b0:	bl	479cbc <_obstack_memory_used@@Base+0x1cb7c>
  47a9b4:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47a9b8:	ldr	w0, [sp, #104]
  47a9bc:	cmp	w0, #0x0
  47a9c0:	b.eq	47aa98 <_obstack_memory_used@@Base+0x1d958>  // b.none
  47a9c4:	ldr	x0, [sp, #64]
  47a9c8:	ldr	w0, [x0]
  47a9cc:	sxtw	x0, w0
  47a9d0:	lsl	x0, x0, #3
  47a9d4:	ldr	x1, [sp, #96]
  47a9d8:	add	x0, x1, x0
  47a9dc:	ldr	x0, [x0]
  47a9e0:	add	x0, x0, #0x2
  47a9e4:	ldrb	w0, [x0]
  47a9e8:	cmp	w0, #0x0
  47a9ec:	b.ne	47aa28 <_obstack_memory_used@@Base+0x1d8e8>  // b.any
  47a9f0:	ldr	x0, [sp, #64]
  47a9f4:	ldr	w0, [x0]
  47a9f8:	sxtw	x0, w0
  47a9fc:	lsl	x0, x0, #3
  47aa00:	ldr	x1, [sp, #96]
  47aa04:	add	x0, x1, x0
  47aa08:	ldr	x0, [x0]
  47aa0c:	add	x0, x0, #0x1
  47aa10:	ldrb	w0, [x0]
  47aa14:	mov	w1, w0
  47aa18:	ldr	x0, [sp, #88]
  47aa1c:	bl	404930 <strchr@plt>
  47aa20:	cmp	x0, #0x0
  47aa24:	b.ne	47aa98 <_obstack_memory_used@@Base+0x1d958>  // b.any
  47aa28:	ldr	x0, [sp, #64]
  47aa2c:	ldr	w0, [x0]
  47aa30:	sxtw	x0, w0
  47aa34:	lsl	x0, x0, #3
  47aa38:	ldr	x1, [sp, #96]
  47aa3c:	add	x0, x1, x0
  47aa40:	ldr	x0, [x0]
  47aa44:	add	x1, x0, #0x1
  47aa48:	ldr	x0, [sp, #64]
  47aa4c:	str	x1, [x0, #32]
  47aa50:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47aa54:	add	x0, x0, #0xc80
  47aa58:	str	x0, [sp]
  47aa5c:	ldr	w7, [sp, #140]
  47aa60:	ldr	x6, [sp, #64]
  47aa64:	ldr	w5, [sp, #104]
  47aa68:	ldr	x4, [sp, #72]
  47aa6c:	ldr	x3, [sp, #80]
  47aa70:	ldr	x2, [sp, #88]
  47aa74:	ldr	x1, [sp, #96]
  47aa78:	ldr	w0, [sp, #108]
  47aa7c:	bl	479cbc <_obstack_memory_used@@Base+0x1cb7c>
  47aa80:	str	w0, [sp, #132]
  47aa84:	ldr	w0, [sp, #132]
  47aa88:	cmn	w0, #0x1
  47aa8c:	b.eq	47aa98 <_obstack_memory_used@@Base+0x1d958>  // b.none
  47aa90:	ldr	w0, [sp, #132]
  47aa94:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47aa98:	ldr	x0, [sp, #64]
  47aa9c:	ldr	w0, [x0]
  47aaa0:	sxtw	x0, w0
  47aaa4:	lsl	x0, x0, #3
  47aaa8:	ldr	x1, [sp, #96]
  47aaac:	add	x0, x1, x0
  47aab0:	ldr	x0, [x0]
  47aab4:	add	x1, x0, #0x1
  47aab8:	ldr	x0, [sp, #64]
  47aabc:	str	x1, [x0, #32]
  47aac0:	ldr	x0, [sp, #64]
  47aac4:	ldr	x0, [x0, #32]
  47aac8:	add	x2, x0, #0x1
  47aacc:	ldr	x1, [sp, #64]
  47aad0:	str	x2, [x1, #32]
  47aad4:	ldrb	w0, [x0]
  47aad8:	strb	w0, [sp, #139]
  47aadc:	ldrb	w0, [sp, #139]
  47aae0:	mov	w1, w0
  47aae4:	ldr	x0, [sp, #88]
  47aae8:	bl	404930 <strchr@plt>
  47aaec:	str	x0, [sp, #120]
  47aaf0:	ldr	x0, [sp, #64]
  47aaf4:	ldr	x0, [x0, #32]
  47aaf8:	ldrb	w0, [x0]
  47aafc:	cmp	w0, #0x0
  47ab00:	b.ne	47ab18 <_obstack_memory_used@@Base+0x1d9d8>  // b.any
  47ab04:	ldr	x0, [sp, #64]
  47ab08:	ldr	w0, [x0]
  47ab0c:	add	w1, w0, #0x1
  47ab10:	ldr	x0, [sp, #64]
  47ab14:	str	w1, [x0]
  47ab18:	ldr	x0, [sp, #120]
  47ab1c:	cmp	x0, #0x0
  47ab20:	b.eq	47ab3c <_obstack_memory_used@@Base+0x1d9fc>  // b.none
  47ab24:	ldrb	w0, [sp, #139]
  47ab28:	cmp	w0, #0x3a
  47ab2c:	b.eq	47ab3c <_obstack_memory_used@@Base+0x1d9fc>  // b.none
  47ab30:	ldrb	w0, [sp, #139]
  47ab34:	cmp	w0, #0x3b
  47ab38:	b.ne	47ab98 <_obstack_memory_used@@Base+0x1da58>  // b.any
  47ab3c:	ldr	w0, [sp, #140]
  47ab40:	cmp	w0, #0x0
  47ab44:	b.eq	47ab84 <_obstack_memory_used@@Base+0x1da44>  // b.none
  47ab48:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47ab4c:	add	x0, x0, #0x498
  47ab50:	ldr	x19, [x0]
  47ab54:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47ab58:	add	x0, x0, #0xc88
  47ab5c:	bl	404c60 <gettext@plt>
  47ab60:	mov	x4, x0
  47ab64:	ldr	x0, [sp, #96]
  47ab68:	ldr	x0, [x0]
  47ab6c:	ldrb	w1, [sp, #139]
  47ab70:	mov	w3, w1
  47ab74:	mov	x2, x0
  47ab78:	mov	x1, x4
  47ab7c:	mov	x0, x19
  47ab80:	bl	404c90 <fprintf@plt>
  47ab84:	ldrb	w1, [sp, #139]
  47ab88:	ldr	x0, [sp, #64]
  47ab8c:	str	w1, [x0, #8]
  47ab90:	mov	w0, #0x3f                  	// #63
  47ab94:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47ab98:	ldr	x0, [sp, #120]
  47ab9c:	ldrb	w0, [x0]
  47aba0:	cmp	w0, #0x57
  47aba4:	b.ne	47acf4 <_obstack_memory_used@@Base+0x1dbb4>  // b.any
  47aba8:	ldr	x0, [sp, #120]
  47abac:	add	x0, x0, #0x1
  47abb0:	ldrb	w0, [x0]
  47abb4:	cmp	w0, #0x3b
  47abb8:	b.ne	47acf4 <_obstack_memory_used@@Base+0x1dbb4>  // b.any
  47abbc:	ldr	x0, [sp, #80]
  47abc0:	cmp	x0, #0x0
  47abc4:	b.eq	47acf4 <_obstack_memory_used@@Base+0x1dbb4>  // b.none
  47abc8:	ldr	x0, [sp, #64]
  47abcc:	ldr	x0, [x0, #32]
  47abd0:	ldrb	w0, [x0]
  47abd4:	cmp	w0, #0x0
  47abd8:	b.eq	47abf0 <_obstack_memory_used@@Base+0x1dab0>  // b.none
  47abdc:	ldr	x0, [sp, #64]
  47abe0:	ldr	x1, [x0, #32]
  47abe4:	ldr	x0, [sp, #64]
  47abe8:	str	x1, [x0, #16]
  47abec:	b	47aca8 <_obstack_memory_used@@Base+0x1db68>
  47abf0:	ldr	x0, [sp, #64]
  47abf4:	ldr	w0, [x0]
  47abf8:	ldr	w1, [sp, #108]
  47abfc:	cmp	w1, w0
  47ac00:	b.ne	47ac84 <_obstack_memory_used@@Base+0x1db44>  // b.any
  47ac04:	ldr	w0, [sp, #140]
  47ac08:	cmp	w0, #0x0
  47ac0c:	b.eq	47ac4c <_obstack_memory_used@@Base+0x1db0c>  // b.none
  47ac10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47ac14:	add	x0, x0, #0x498
  47ac18:	ldr	x19, [x0]
  47ac1c:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47ac20:	add	x0, x0, #0xca8
  47ac24:	bl	404c60 <gettext@plt>
  47ac28:	mov	x4, x0
  47ac2c:	ldr	x0, [sp, #96]
  47ac30:	ldr	x0, [x0]
  47ac34:	ldrb	w1, [sp, #139]
  47ac38:	mov	w3, w1
  47ac3c:	mov	x2, x0
  47ac40:	mov	x1, x4
  47ac44:	mov	x0, x19
  47ac48:	bl	404c90 <fprintf@plt>
  47ac4c:	ldrb	w1, [sp, #139]
  47ac50:	ldr	x0, [sp, #64]
  47ac54:	str	w1, [x0, #8]
  47ac58:	ldr	x0, [sp, #88]
  47ac5c:	ldrb	w0, [x0]
  47ac60:	cmp	w0, #0x3a
  47ac64:	b.ne	47ac74 <_obstack_memory_used@@Base+0x1db34>  // b.any
  47ac68:	mov	w0, #0x3a                  	// #58
  47ac6c:	strb	w0, [sp, #139]
  47ac70:	b	47ac7c <_obstack_memory_used@@Base+0x1db3c>
  47ac74:	mov	w0, #0x3f                  	// #63
  47ac78:	strb	w0, [sp, #139]
  47ac7c:	ldrb	w0, [sp, #139]
  47ac80:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47ac84:	ldr	x0, [sp, #64]
  47ac88:	ldr	w0, [x0]
  47ac8c:	sxtw	x0, w0
  47ac90:	lsl	x0, x0, #3
  47ac94:	ldr	x1, [sp, #96]
  47ac98:	add	x0, x1, x0
  47ac9c:	ldr	x1, [x0]
  47aca0:	ldr	x0, [sp, #64]
  47aca4:	str	x1, [x0, #16]
  47aca8:	ldr	x0, [sp, #64]
  47acac:	ldr	x1, [x0, #16]
  47acb0:	ldr	x0, [sp, #64]
  47acb4:	str	x1, [x0, #32]
  47acb8:	ldr	x0, [sp, #64]
  47acbc:	str	xzr, [x0, #16]
  47acc0:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47acc4:	add	x0, x0, #0xcd8
  47acc8:	str	x0, [sp]
  47accc:	ldr	w7, [sp, #140]
  47acd0:	ldr	x6, [sp, #64]
  47acd4:	mov	w5, #0x0                   	// #0
  47acd8:	ldr	x4, [sp, #72]
  47acdc:	ldr	x3, [sp, #80]
  47ace0:	ldr	x2, [sp, #88]
  47ace4:	ldr	x1, [sp, #96]
  47ace8:	ldr	w0, [sp, #108]
  47acec:	bl	479cbc <_obstack_memory_used@@Base+0x1cb7c>
  47acf0:	b	47ae74 <_obstack_memory_used@@Base+0x1dd34>
  47acf4:	ldr	x0, [sp, #120]
  47acf8:	add	x0, x0, #0x1
  47acfc:	ldrb	w0, [x0]
  47ad00:	cmp	w0, #0x3a
  47ad04:	b.ne	47ae70 <_obstack_memory_used@@Base+0x1dd30>  // b.any
  47ad08:	ldr	x0, [sp, #120]
  47ad0c:	add	x0, x0, #0x2
  47ad10:	ldrb	w0, [x0]
  47ad14:	cmp	w0, #0x3a
  47ad18:	b.ne	47ad6c <_obstack_memory_used@@Base+0x1dc2c>  // b.any
  47ad1c:	ldr	x0, [sp, #64]
  47ad20:	ldr	x0, [x0, #32]
  47ad24:	ldrb	w0, [x0]
  47ad28:	cmp	w0, #0x0
  47ad2c:	b.eq	47ad58 <_obstack_memory_used@@Base+0x1dc18>  // b.none
  47ad30:	ldr	x0, [sp, #64]
  47ad34:	ldr	x1, [x0, #32]
  47ad38:	ldr	x0, [sp, #64]
  47ad3c:	str	x1, [x0, #16]
  47ad40:	ldr	x0, [sp, #64]
  47ad44:	ldr	w0, [x0]
  47ad48:	add	w1, w0, #0x1
  47ad4c:	ldr	x0, [sp, #64]
  47ad50:	str	w1, [x0]
  47ad54:	b	47ad60 <_obstack_memory_used@@Base+0x1dc20>
  47ad58:	ldr	x0, [sp, #64]
  47ad5c:	str	xzr, [x0, #16]
  47ad60:	ldr	x0, [sp, #64]
  47ad64:	str	xzr, [x0, #32]
  47ad68:	b	47ae70 <_obstack_memory_used@@Base+0x1dd30>
  47ad6c:	ldr	x0, [sp, #64]
  47ad70:	ldr	x0, [x0, #32]
  47ad74:	ldrb	w0, [x0]
  47ad78:	cmp	w0, #0x0
  47ad7c:	b.eq	47ada8 <_obstack_memory_used@@Base+0x1dc68>  // b.none
  47ad80:	ldr	x0, [sp, #64]
  47ad84:	ldr	x1, [x0, #32]
  47ad88:	ldr	x0, [sp, #64]
  47ad8c:	str	x1, [x0, #16]
  47ad90:	ldr	x0, [sp, #64]
  47ad94:	ldr	w0, [x0]
  47ad98:	add	w1, w0, #0x1
  47ad9c:	ldr	x0, [sp, #64]
  47ada0:	str	w1, [x0]
  47ada4:	b	47ae68 <_obstack_memory_used@@Base+0x1dd28>
  47ada8:	ldr	x0, [sp, #64]
  47adac:	ldr	w0, [x0]
  47adb0:	ldr	w1, [sp, #108]
  47adb4:	cmp	w1, w0
  47adb8:	b.ne	47ae38 <_obstack_memory_used@@Base+0x1dcf8>  // b.any
  47adbc:	ldr	w0, [sp, #140]
  47adc0:	cmp	w0, #0x0
  47adc4:	b.eq	47ae04 <_obstack_memory_used@@Base+0x1dcc4>  // b.none
  47adc8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47adcc:	add	x0, x0, #0x498
  47add0:	ldr	x19, [x0]
  47add4:	adrp	x0, 48b000 <_obstack_memory_used@@Base+0x2dec0>
  47add8:	add	x0, x0, #0xca8
  47addc:	bl	404c60 <gettext@plt>
  47ade0:	mov	x4, x0
  47ade4:	ldr	x0, [sp, #96]
  47ade8:	ldr	x0, [x0]
  47adec:	ldrb	w1, [sp, #139]
  47adf0:	mov	w3, w1
  47adf4:	mov	x2, x0
  47adf8:	mov	x1, x4
  47adfc:	mov	x0, x19
  47ae00:	bl	404c90 <fprintf@plt>
  47ae04:	ldrb	w1, [sp, #139]
  47ae08:	ldr	x0, [sp, #64]
  47ae0c:	str	w1, [x0, #8]
  47ae10:	ldr	x0, [sp, #88]
  47ae14:	ldrb	w0, [x0]
  47ae18:	cmp	w0, #0x3a
  47ae1c:	b.ne	47ae2c <_obstack_memory_used@@Base+0x1dcec>  // b.any
  47ae20:	mov	w0, #0x3a                  	// #58
  47ae24:	strb	w0, [sp, #139]
  47ae28:	b	47ae68 <_obstack_memory_used@@Base+0x1dd28>
  47ae2c:	mov	w0, #0x3f                  	// #63
  47ae30:	strb	w0, [sp, #139]
  47ae34:	b	47ae68 <_obstack_memory_used@@Base+0x1dd28>
  47ae38:	ldr	x0, [sp, #64]
  47ae3c:	ldr	w0, [x0]
  47ae40:	add	w2, w0, #0x1
  47ae44:	ldr	x1, [sp, #64]
  47ae48:	str	w2, [x1]
  47ae4c:	sxtw	x0, w0
  47ae50:	lsl	x0, x0, #3
  47ae54:	ldr	x1, [sp, #96]
  47ae58:	add	x0, x1, x0
  47ae5c:	ldr	x1, [x0]
  47ae60:	ldr	x0, [sp, #64]
  47ae64:	str	x1, [x0, #16]
  47ae68:	ldr	x0, [sp, #64]
  47ae6c:	str	xzr, [x0, #32]
  47ae70:	ldrb	w0, [sp, #139]
  47ae74:	ldr	x19, [sp, #32]
  47ae78:	ldp	x29, x30, [sp, #16]
  47ae7c:	add	sp, sp, #0x90
  47ae80:	ret
  47ae84:	stp	x29, x30, [sp, #-80]!
  47ae88:	mov	x29, sp
  47ae8c:	str	w0, [sp, #60]
  47ae90:	str	x1, [sp, #48]
  47ae94:	str	x2, [sp, #40]
  47ae98:	str	x3, [sp, #32]
  47ae9c:	str	x4, [sp, #24]
  47aea0:	str	w5, [sp, #56]
  47aea4:	str	w6, [sp, #20]
  47aea8:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47aeac:	add	x0, x0, #0x484
  47aeb0:	ldr	w1, [x0]
  47aeb4:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47aeb8:	add	x0, x0, #0xf50
  47aebc:	str	w1, [x0]
  47aec0:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47aec4:	add	x0, x0, #0x488
  47aec8:	ldr	w1, [x0]
  47aecc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47aed0:	add	x0, x0, #0xf50
  47aed4:	str	w1, [x0, #4]
  47aed8:	ldr	w7, [sp, #20]
  47aedc:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47aee0:	add	x6, x0, #0xf50
  47aee4:	ldr	w5, [sp, #56]
  47aee8:	ldr	x4, [sp, #24]
  47aeec:	ldr	x3, [sp, #32]
  47aef0:	ldr	x2, [sp, #40]
  47aef4:	ldr	x1, [sp, #48]
  47aef8:	ldr	w0, [sp, #60]
  47aefc:	bl	47a50c <_obstack_memory_used@@Base+0x1d3cc>
  47af00:	str	w0, [sp, #76]
  47af04:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47af08:	add	x0, x0, #0xf50
  47af0c:	ldr	w1, [x0]
  47af10:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47af14:	add	x0, x0, #0x484
  47af18:	str	w1, [x0]
  47af1c:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47af20:	add	x0, x0, #0xf50
  47af24:	ldr	x1, [x0, #16]
  47af28:	adrp	x0, 4ae000 <argp_program_version_hook@@Base+0x228>
  47af2c:	add	x0, x0, #0x450
  47af30:	str	x1, [x0]
  47af34:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47af38:	add	x0, x0, #0xf50
  47af3c:	ldr	w1, [x0, #8]
  47af40:	adrp	x0, 4ad000 <_obstack_memory_used@@Base+0x4fec0>
  47af44:	add	x0, x0, #0x48c
  47af48:	str	w1, [x0]
  47af4c:	ldr	w0, [sp, #76]
  47af50:	ldp	x29, x30, [sp], #80
  47af54:	ret
  47af58:	stp	x29, x30, [sp, #-48]!
  47af5c:	mov	x29, sp
  47af60:	str	w0, [sp, #44]
  47af64:	str	x1, [sp, #32]
  47af68:	str	x2, [sp, #24]
  47af6c:	mov	w6, #0x1                   	// #1
  47af70:	mov	w5, #0x0                   	// #0
  47af74:	mov	x4, #0x0                   	// #0
  47af78:	mov	x3, #0x0                   	// #0
  47af7c:	ldr	x2, [sp, #24]
  47af80:	ldr	x1, [sp, #32]
  47af84:	ldr	w0, [sp, #44]
  47af88:	bl	47ae84 <_obstack_memory_used@@Base+0x1dd44>
  47af8c:	ldp	x29, x30, [sp], #48
  47af90:	ret
  47af94:	stp	x29, x30, [sp, #-32]!
  47af98:	mov	x29, sp
  47af9c:	str	w0, [sp, #28]
  47afa0:	mov	w2, #0x3                   	// #3
  47afa4:	mov	w1, #0x0                   	// #0
  47afa8:	ldr	w0, [sp, #28]
  47afac:	bl	45c480 <argp_usage@@Base+0x13394>
  47afb0:	ldp	x29, x30, [sp], #32
  47afb4:	ret
  47afb8:	sub	sp, sp, #0x20
  47afbc:	str	x0, [sp, #8]
  47afc0:	str	x1, [sp]
  47afc4:	ldr	x1, [sp, #8]
  47afc8:	ldr	x0, [sp]
  47afcc:	add	x0, x1, x0
  47afd0:	str	x0, [sp, #24]
  47afd4:	ldr	x1, [sp, #24]
  47afd8:	ldr	x0, [sp, #8]
  47afdc:	cmp	x1, x0
  47afe0:	b.cc	47afec <_obstack_memory_used@@Base+0x1deac>  // b.lo, b.ul, b.last
  47afe4:	ldr	x0, [sp, #24]
  47afe8:	b	47aff0 <_obstack_memory_used@@Base+0x1deb0>
  47afec:	mov	x0, #0xffffffffffffffff    	// #-1
  47aff0:	add	sp, sp, #0x20
  47aff4:	ret
  47aff8:	stp	x29, x30, [sp, #-48]!
  47affc:	mov	x29, sp
  47b000:	str	x0, [sp, #40]
  47b004:	str	x1, [sp, #32]
  47b008:	str	x2, [sp, #24]
  47b00c:	ldr	x1, [sp, #32]
  47b010:	ldr	x0, [sp, #40]
  47b014:	bl	47afb8 <_obstack_memory_used@@Base+0x1de78>
  47b018:	ldr	x1, [sp, #24]
  47b01c:	bl	47afb8 <_obstack_memory_used@@Base+0x1de78>
  47b020:	ldp	x29, x30, [sp], #48
  47b024:	ret
  47b028:	stp	x29, x30, [sp, #-48]!
  47b02c:	mov	x29, sp
  47b030:	str	x0, [sp, #40]
  47b034:	str	x1, [sp, #32]
  47b038:	str	x2, [sp, #24]
  47b03c:	str	x3, [sp, #16]
  47b040:	ldr	x1, [sp, #32]
  47b044:	ldr	x0, [sp, #40]
  47b048:	bl	47afb8 <_obstack_memory_used@@Base+0x1de78>
  47b04c:	ldr	x1, [sp, #24]
  47b050:	bl	47afb8 <_obstack_memory_used@@Base+0x1de78>
  47b054:	ldr	x1, [sp, #16]
  47b058:	bl	47afb8 <_obstack_memory_used@@Base+0x1de78>
  47b05c:	ldp	x29, x30, [sp], #48
  47b060:	ret
  47b064:	sub	sp, sp, #0x10
  47b068:	str	x0, [sp, #8]
  47b06c:	str	x1, [sp]
  47b070:	ldr	x0, [sp]
  47b074:	ldr	x2, [sp, #8]
  47b078:	ldr	x1, [sp, #8]
  47b07c:	cmp	x2, x0
  47b080:	csel	x0, x1, x0, cs  // cs = hs, nlast
  47b084:	add	sp, sp, #0x10
  47b088:	ret
  47b08c:	sub	sp, sp, #0x290
  47b090:	stp	x29, x30, [sp]
  47b094:	mov	x29, sp
  47b098:	str	q0, [sp, #32]
  47b09c:	str	q1, [sp, #16]
  47b0a0:	str	wzr, [sp, #564]
  47b0a4:	str	xzr, [sp, #400]
  47b0a8:	mrs	x0, fpcr
  47b0ac:	str	x0, [sp, #400]
  47b0b0:	ldr	q0, [sp, #32]
  47b0b4:	str	q0, [sp, #80]
  47b0b8:	ldr	x0, [sp, #80]
  47b0bc:	str	x0, [sp, #584]
  47b0c0:	ldr	x0, [sp, #88]
  47b0c4:	ubfx	x0, x0, #0, #48
  47b0c8:	str	x0, [sp, #592]
  47b0cc:	ldrh	w0, [sp, #94]
  47b0d0:	ubfx	x0, x0, #0, #15
  47b0d4:	and	w0, w0, #0xffff
  47b0d8:	and	x0, x0, #0xffff
  47b0dc:	str	x0, [sp, #568]
  47b0e0:	ldrb	w0, [sp, #95]
  47b0e4:	ubfx	x0, x0, #7, #1
  47b0e8:	and	w0, w0, #0xff
  47b0ec:	and	x0, x0, #0xff
  47b0f0:	str	x0, [sp, #392]
  47b0f4:	ldr	x0, [sp, #568]
  47b0f8:	cmp	x0, #0x0
  47b0fc:	b.eq	47b158 <_obstack_memory_used@@Base+0x1e018>  // b.none
  47b100:	ldr	x1, [sp, #568]
  47b104:	mov	x0, #0x7fff                	// #32767
  47b108:	cmp	x1, x0
  47b10c:	b.eq	47b24c <_obstack_memory_used@@Base+0x1e10c>  // b.none
  47b110:	ldr	x0, [sp, #592]
  47b114:	orr	x0, x0, #0x1000000000000
  47b118:	str	x0, [sp, #592]
  47b11c:	ldr	x0, [sp, #592]
  47b120:	lsl	x1, x0, #3
  47b124:	ldr	x0, [sp, #584]
  47b128:	lsr	x0, x0, #61
  47b12c:	orr	x0, x1, x0
  47b130:	str	x0, [sp, #592]
  47b134:	ldr	x0, [sp, #584]
  47b138:	lsl	x0, x0, #3
  47b13c:	str	x0, [sp, #584]
  47b140:	ldr	x1, [sp, #568]
  47b144:	mov	x0, #0xffffffffffffc001    	// #-16383
  47b148:	add	x0, x1, x0
  47b14c:	str	x0, [sp, #568]
  47b150:	str	xzr, [sp, #576]
  47b154:	b	47b290 <_obstack_memory_used@@Base+0x1e150>
  47b158:	ldr	x1, [sp, #592]
  47b15c:	ldr	x0, [sp, #584]
  47b160:	orr	x0, x1, x0
  47b164:	cmp	x0, #0x0
  47b168:	b.ne	47b178 <_obstack_memory_used@@Base+0x1e038>  // b.any
  47b16c:	mov	x0, #0x1                   	// #1
  47b170:	str	x0, [sp, #576]
  47b174:	b	47b290 <_obstack_memory_used@@Base+0x1e150>
  47b178:	ldr	x0, [sp, #592]
  47b17c:	cmp	x0, #0x0
  47b180:	b.eq	47b198 <_obstack_memory_used@@Base+0x1e058>  // b.none
  47b184:	ldr	x0, [sp, #592]
  47b188:	clz	x0, x0
  47b18c:	sxtw	x0, w0
  47b190:	str	x0, [sp, #536]
  47b194:	b	47b1b4 <_obstack_memory_used@@Base+0x1e074>
  47b198:	ldr	x0, [sp, #584]
  47b19c:	clz	x0, x0
  47b1a0:	sxtw	x0, w0
  47b1a4:	str	x0, [sp, #536]
  47b1a8:	ldr	x0, [sp, #536]
  47b1ac:	add	x0, x0, #0x40
  47b1b0:	str	x0, [sp, #536]
  47b1b4:	ldr	x0, [sp, #536]
  47b1b8:	sub	x0, x0, #0xf
  47b1bc:	str	x0, [sp, #536]
  47b1c0:	ldr	x0, [sp, #536]
  47b1c4:	cmp	x0, #0x3c
  47b1c8:	b.gt	47b214 <_obstack_memory_used@@Base+0x1e0d4>
  47b1cc:	ldr	x0, [sp, #536]
  47b1d0:	add	w0, w0, #0x3
  47b1d4:	ldr	x1, [sp, #592]
  47b1d8:	lsl	x1, x1, x0
  47b1dc:	ldr	x0, [sp, #536]
  47b1e0:	mov	w2, w0
  47b1e4:	mov	w0, #0x3d                  	// #61
  47b1e8:	sub	w0, w0, w2
  47b1ec:	ldr	x2, [sp, #584]
  47b1f0:	lsr	x0, x2, x0
  47b1f4:	orr	x0, x1, x0
  47b1f8:	str	x0, [sp, #592]
  47b1fc:	ldr	x0, [sp, #536]
  47b200:	add	w0, w0, #0x3
  47b204:	ldr	x1, [sp, #584]
  47b208:	lsl	x0, x1, x0
  47b20c:	str	x0, [sp, #584]
  47b210:	b	47b22c <_obstack_memory_used@@Base+0x1e0ec>
  47b214:	ldr	x0, [sp, #536]
  47b218:	sub	w0, w0, #0x3d
  47b21c:	ldr	x1, [sp, #584]
  47b220:	lsl	x0, x1, x0
  47b224:	str	x0, [sp, #592]
  47b228:	str	xzr, [sp, #584]
  47b22c:	ldr	x1, [sp, #536]
  47b230:	mov	x0, #0x3ffe                	// #16382
  47b234:	add	x0, x1, x0
  47b238:	ldr	x1, [sp, #568]
  47b23c:	sub	x0, x1, x0
  47b240:	str	x0, [sp, #568]
  47b244:	str	xzr, [sp, #576]
  47b248:	b	47b290 <_obstack_memory_used@@Base+0x1e150>
  47b24c:	ldr	x1, [sp, #592]
  47b250:	ldr	x0, [sp, #584]
  47b254:	orr	x0, x1, x0
  47b258:	cmp	x0, #0x0
  47b25c:	b.ne	47b26c <_obstack_memory_used@@Base+0x1e12c>  // b.any
  47b260:	mov	x0, #0x2                   	// #2
  47b264:	str	x0, [sp, #576]
  47b268:	b	47b290 <_obstack_memory_used@@Base+0x1e150>
  47b26c:	mov	x0, #0x3                   	// #3
  47b270:	str	x0, [sp, #576]
  47b274:	ldr	x0, [sp, #592]
  47b278:	and	x0, x0, #0x800000000000
  47b27c:	cmp	x0, #0x0
  47b280:	b.ne	47b290 <_obstack_memory_used@@Base+0x1e150>  // b.any
  47b284:	ldr	w0, [sp, #564]
  47b288:	orr	w0, w0, #0x1
  47b28c:	str	w0, [sp, #564]
  47b290:	nop
  47b294:	ldr	q0, [sp, #16]
  47b298:	str	q0, [sp, #64]
  47b29c:	ldr	x0, [sp, #64]
  47b2a0:	str	x0, [sp, #616]
  47b2a4:	ldr	x0, [sp, #72]
  47b2a8:	ubfx	x0, x0, #0, #48
  47b2ac:	str	x0, [sp, #624]
  47b2b0:	ldrh	w0, [sp, #78]
  47b2b4:	ubfx	x0, x0, #0, #15
  47b2b8:	and	w0, w0, #0xffff
  47b2bc:	and	x0, x0, #0xffff
  47b2c0:	str	x0, [sp, #600]
  47b2c4:	ldrb	w0, [sp, #79]
  47b2c8:	ubfx	x0, x0, #7, #1
  47b2cc:	and	w0, w0, #0xff
  47b2d0:	and	x0, x0, #0xff
  47b2d4:	str	x0, [sp, #384]
  47b2d8:	ldr	x0, [sp, #600]
  47b2dc:	cmp	x0, #0x0
  47b2e0:	b.eq	47b33c <_obstack_memory_used@@Base+0x1e1fc>  // b.none
  47b2e4:	ldr	x1, [sp, #600]
  47b2e8:	mov	x0, #0x7fff                	// #32767
  47b2ec:	cmp	x1, x0
  47b2f0:	b.eq	47b430 <_obstack_memory_used@@Base+0x1e2f0>  // b.none
  47b2f4:	ldr	x0, [sp, #624]
  47b2f8:	orr	x0, x0, #0x1000000000000
  47b2fc:	str	x0, [sp, #624]
  47b300:	ldr	x0, [sp, #624]
  47b304:	lsl	x1, x0, #3
  47b308:	ldr	x0, [sp, #616]
  47b30c:	lsr	x0, x0, #61
  47b310:	orr	x0, x1, x0
  47b314:	str	x0, [sp, #624]
  47b318:	ldr	x0, [sp, #616]
  47b31c:	lsl	x0, x0, #3
  47b320:	str	x0, [sp, #616]
  47b324:	ldr	x1, [sp, #600]
  47b328:	mov	x0, #0xffffffffffffc001    	// #-16383
  47b32c:	add	x0, x1, x0
  47b330:	str	x0, [sp, #600]
  47b334:	str	xzr, [sp, #608]
  47b338:	b	47b474 <_obstack_memory_used@@Base+0x1e334>
  47b33c:	ldr	x1, [sp, #624]
  47b340:	ldr	x0, [sp, #616]
  47b344:	orr	x0, x1, x0
  47b348:	cmp	x0, #0x0
  47b34c:	b.ne	47b35c <_obstack_memory_used@@Base+0x1e21c>  // b.any
  47b350:	mov	x0, #0x1                   	// #1
  47b354:	str	x0, [sp, #608]
  47b358:	b	47b474 <_obstack_memory_used@@Base+0x1e334>
  47b35c:	ldr	x0, [sp, #624]
  47b360:	cmp	x0, #0x0
  47b364:	b.eq	47b37c <_obstack_memory_used@@Base+0x1e23c>  // b.none
  47b368:	ldr	x0, [sp, #624]
  47b36c:	clz	x0, x0
  47b370:	sxtw	x0, w0
  47b374:	str	x0, [sp, #528]
  47b378:	b	47b398 <_obstack_memory_used@@Base+0x1e258>
  47b37c:	ldr	x0, [sp, #616]
  47b380:	clz	x0, x0
  47b384:	sxtw	x0, w0
  47b388:	str	x0, [sp, #528]
  47b38c:	ldr	x0, [sp, #528]
  47b390:	add	x0, x0, #0x40
  47b394:	str	x0, [sp, #528]
  47b398:	ldr	x0, [sp, #528]
  47b39c:	sub	x0, x0, #0xf
  47b3a0:	str	x0, [sp, #528]
  47b3a4:	ldr	x0, [sp, #528]
  47b3a8:	cmp	x0, #0x3c
  47b3ac:	b.gt	47b3f8 <_obstack_memory_used@@Base+0x1e2b8>
  47b3b0:	ldr	x0, [sp, #528]
  47b3b4:	add	w0, w0, #0x3
  47b3b8:	ldr	x1, [sp, #624]
  47b3bc:	lsl	x1, x1, x0
  47b3c0:	ldr	x0, [sp, #528]
  47b3c4:	mov	w2, w0
  47b3c8:	mov	w0, #0x3d                  	// #61
  47b3cc:	sub	w0, w0, w2
  47b3d0:	ldr	x2, [sp, #616]
  47b3d4:	lsr	x0, x2, x0
  47b3d8:	orr	x0, x1, x0
  47b3dc:	str	x0, [sp, #624]
  47b3e0:	ldr	x0, [sp, #528]
  47b3e4:	add	w0, w0, #0x3
  47b3e8:	ldr	x1, [sp, #616]
  47b3ec:	lsl	x0, x1, x0
  47b3f0:	str	x0, [sp, #616]
  47b3f4:	b	47b410 <_obstack_memory_used@@Base+0x1e2d0>
  47b3f8:	ldr	x0, [sp, #528]
  47b3fc:	sub	w0, w0, #0x3d
  47b400:	ldr	x1, [sp, #616]
  47b404:	lsl	x0, x1, x0
  47b408:	str	x0, [sp, #624]
  47b40c:	str	xzr, [sp, #616]
  47b410:	ldr	x1, [sp, #528]
  47b414:	mov	x0, #0x3ffe                	// #16382
  47b418:	add	x0, x1, x0
  47b41c:	ldr	x1, [sp, #600]
  47b420:	sub	x0, x1, x0
  47b424:	str	x0, [sp, #600]
  47b428:	str	xzr, [sp, #608]
  47b42c:	b	47b474 <_obstack_memory_used@@Base+0x1e334>
  47b430:	ldr	x1, [sp, #624]
  47b434:	ldr	x0, [sp, #616]
  47b438:	orr	x0, x1, x0
  47b43c:	cmp	x0, #0x0
  47b440:	b.ne	47b450 <_obstack_memory_used@@Base+0x1e310>  // b.any
  47b444:	mov	x0, #0x2                   	// #2
  47b448:	str	x0, [sp, #608]
  47b44c:	b	47b474 <_obstack_memory_used@@Base+0x1e334>
  47b450:	mov	x0, #0x3                   	// #3
  47b454:	str	x0, [sp, #608]
  47b458:	ldr	x0, [sp, #624]
  47b45c:	and	x0, x0, #0x800000000000
  47b460:	cmp	x0, #0x0
  47b464:	b.ne	47b474 <_obstack_memory_used@@Base+0x1e334>  // b.any
  47b468:	ldr	w0, [sp, #564]
  47b46c:	orr	w0, w0, #0x1
  47b470:	str	w0, [sp, #564]
  47b474:	nop
  47b478:	ldr	x1, [sp, #392]
  47b47c:	ldr	x0, [sp, #384]
  47b480:	eor	x0, x1, x0
  47b484:	str	x0, [sp, #648]
  47b488:	ldr	x1, [sp, #568]
  47b48c:	ldr	x0, [sp, #600]
  47b490:	sub	x0, x1, x0
  47b494:	str	x0, [sp, #640]
  47b498:	ldr	x0, [sp, #576]
  47b49c:	lsl	x1, x0, #2
  47b4a0:	ldr	x0, [sp, #608]
  47b4a4:	orr	x0, x1, x0
  47b4a8:	cmp	x0, #0xf
  47b4ac:	b.eq	47be64 <_obstack_memory_used@@Base+0x1ed24>  // b.none
  47b4b0:	cmp	x0, #0xf
  47b4b4:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b4b8:	cmp	x0, #0xe
  47b4bc:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b4c0:	cmp	x0, #0xc
  47b4c4:	b.ge	47bec4 <_obstack_memory_used@@Base+0x1ed84>  // b.tcont
  47b4c8:	cmp	x0, #0xb
  47b4cc:	b.eq	47bee8 <_obstack_memory_used@@Base+0x1eda8>  // b.none
  47b4d0:	cmp	x0, #0xb
  47b4d4:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b4d8:	cmp	x0, #0xa
  47b4dc:	b.eq	47bf30 <_obstack_memory_used@@Base+0x1edf0>  // b.none
  47b4e0:	cmp	x0, #0xa
  47b4e4:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b4e8:	cmp	x0, #0x9
  47b4ec:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b4f0:	cmp	x0, #0x8
  47b4f4:	b.ge	47bf24 <_obstack_memory_used@@Base+0x1ede4>  // b.tcont
  47b4f8:	cmp	x0, #0x7
  47b4fc:	b.eq	47bee8 <_obstack_memory_used@@Base+0x1eda8>  // b.none
  47b500:	cmp	x0, #0x7
  47b504:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b508:	cmp	x0, #0x6
  47b50c:	b.eq	47bf0c <_obstack_memory_used@@Base+0x1edcc>  // b.none
  47b510:	cmp	x0, #0x6
  47b514:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b518:	cmp	x0, #0x5
  47b51c:	b.eq	47bf30 <_obstack_memory_used@@Base+0x1edf0>  // b.none
  47b520:	cmp	x0, #0x5
  47b524:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b528:	cmp	x0, #0x4
  47b52c:	b.eq	47bf0c <_obstack_memory_used@@Base+0x1edcc>  // b.none
  47b530:	cmp	x0, #0x4
  47b534:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b538:	cmp	x0, #0x3
  47b53c:	b.eq	47bee8 <_obstack_memory_used@@Base+0x1eda8>  // b.none
  47b540:	cmp	x0, #0x3
  47b544:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b548:	cmp	x0, #0x2
  47b54c:	b.eq	47bf0c <_obstack_memory_used@@Base+0x1edcc>  // b.none
  47b550:	cmp	x0, #0x2
  47b554:	b.gt	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b558:	cmp	x0, #0x0
  47b55c:	b.eq	47b56c <_obstack_memory_used@@Base+0x1e42c>  // b.none
  47b560:	cmp	x0, #0x1
  47b564:	b.eq	47bf18 <_obstack_memory_used@@Base+0x1edd8>  // b.none
  47b568:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47b56c:	str	xzr, [sp, #632]
  47b570:	ldr	x1, [sp, #592]
  47b574:	ldr	x0, [sp, #624]
  47b578:	cmp	x1, x0
  47b57c:	b.hi	47b5a0 <_obstack_memory_used@@Base+0x1e460>  // b.pmore
  47b580:	ldr	x1, [sp, #592]
  47b584:	ldr	x0, [sp, #624]
  47b588:	cmp	x1, x0
  47b58c:	b.ne	47b5d4 <_obstack_memory_used@@Base+0x1e494>  // b.any
  47b590:	ldr	x1, [sp, #584]
  47b594:	ldr	x0, [sp, #616]
  47b598:	cmp	x1, x0
  47b59c:	b.cc	47b5d4 <_obstack_memory_used@@Base+0x1e494>  // b.lo, b.ul, b.last
  47b5a0:	ldr	x0, [sp, #592]
  47b5a4:	lsr	x0, x0, #1
  47b5a8:	str	x0, [sp, #520]
  47b5ac:	ldr	x0, [sp, #592]
  47b5b0:	lsl	x1, x0, #63
  47b5b4:	ldr	x0, [sp, #584]
  47b5b8:	lsr	x0, x0, #1
  47b5bc:	orr	x0, x1, x0
  47b5c0:	str	x0, [sp, #512]
  47b5c4:	ldr	x0, [sp, #584]
  47b5c8:	lsl	x0, x0, #63
  47b5cc:	str	x0, [sp, #504]
  47b5d0:	b	47b5f4 <_obstack_memory_used@@Base+0x1e4b4>
  47b5d4:	ldr	x0, [sp, #640]
  47b5d8:	sub	x0, x0, #0x1
  47b5dc:	str	x0, [sp, #640]
  47b5e0:	ldr	x0, [sp, #592]
  47b5e4:	str	x0, [sp, #520]
  47b5e8:	ldr	x0, [sp, #584]
  47b5ec:	str	x0, [sp, #512]
  47b5f0:	str	xzr, [sp, #504]
  47b5f4:	ldr	x0, [sp, #624]
  47b5f8:	lsl	x1, x0, #12
  47b5fc:	ldr	x0, [sp, #616]
  47b600:	lsr	x0, x0, #52
  47b604:	orr	x0, x1, x0
  47b608:	str	x0, [sp, #624]
  47b60c:	ldr	x0, [sp, #616]
  47b610:	lsl	x0, x0, #12
  47b614:	str	x0, [sp, #616]
  47b618:	ldr	x0, [sp, #624]
  47b61c:	lsr	x0, x0, #32
  47b620:	str	x0, [sp, #376]
  47b624:	ldr	x0, [sp, #624]
  47b628:	and	x0, x0, #0xffffffff
  47b62c:	str	x0, [sp, #368]
  47b630:	ldr	x0, [sp, #520]
  47b634:	ldr	x1, [sp, #376]
  47b638:	udiv	x2, x0, x1
  47b63c:	ldr	x1, [sp, #376]
  47b640:	mul	x1, x2, x1
  47b644:	sub	x0, x0, x1
  47b648:	str	x0, [sp, #464]
  47b64c:	ldr	x1, [sp, #520]
  47b650:	ldr	x0, [sp, #376]
  47b654:	udiv	x0, x1, x0
  47b658:	str	x0, [sp, #480]
  47b65c:	ldr	x1, [sp, #480]
  47b660:	ldr	x0, [sp, #368]
  47b664:	mul	x0, x1, x0
  47b668:	str	x0, [sp, #360]
  47b66c:	ldr	x0, [sp, #464]
  47b670:	lsl	x1, x0, #32
  47b674:	ldr	x0, [sp, #512]
  47b678:	lsr	x0, x0, #32
  47b67c:	orr	x0, x1, x0
  47b680:	str	x0, [sp, #464]
  47b684:	ldr	x1, [sp, #464]
  47b688:	ldr	x0, [sp, #360]
  47b68c:	cmp	x1, x0
  47b690:	b.cs	47b6ec <_obstack_memory_used@@Base+0x1e5ac>  // b.hs, b.nlast
  47b694:	ldr	x0, [sp, #480]
  47b698:	sub	x0, x0, #0x1
  47b69c:	str	x0, [sp, #480]
  47b6a0:	ldr	x1, [sp, #464]
  47b6a4:	ldr	x0, [sp, #624]
  47b6a8:	add	x0, x1, x0
  47b6ac:	str	x0, [sp, #464]
  47b6b0:	ldr	x1, [sp, #464]
  47b6b4:	ldr	x0, [sp, #624]
  47b6b8:	cmp	x1, x0
  47b6bc:	b.cc	47b6ec <_obstack_memory_used@@Base+0x1e5ac>  // b.lo, b.ul, b.last
  47b6c0:	ldr	x1, [sp, #464]
  47b6c4:	ldr	x0, [sp, #360]
  47b6c8:	cmp	x1, x0
  47b6cc:	b.cs	47b6ec <_obstack_memory_used@@Base+0x1e5ac>  // b.hs, b.nlast
  47b6d0:	ldr	x0, [sp, #480]
  47b6d4:	sub	x0, x0, #0x1
  47b6d8:	str	x0, [sp, #480]
  47b6dc:	ldr	x1, [sp, #464]
  47b6e0:	ldr	x0, [sp, #624]
  47b6e4:	add	x0, x1, x0
  47b6e8:	str	x0, [sp, #464]
  47b6ec:	ldr	x1, [sp, #464]
  47b6f0:	ldr	x0, [sp, #360]
  47b6f4:	sub	x0, x1, x0
  47b6f8:	str	x0, [sp, #464]
  47b6fc:	ldr	x0, [sp, #464]
  47b700:	ldr	x1, [sp, #376]
  47b704:	udiv	x2, x0, x1
  47b708:	ldr	x1, [sp, #376]
  47b70c:	mul	x1, x2, x1
  47b710:	sub	x0, x0, x1
  47b714:	str	x0, [sp, #456]
  47b718:	ldr	x1, [sp, #464]
  47b71c:	ldr	x0, [sp, #376]
  47b720:	udiv	x0, x1, x0
  47b724:	str	x0, [sp, #472]
  47b728:	ldr	x1, [sp, #472]
  47b72c:	ldr	x0, [sp, #368]
  47b730:	mul	x0, x1, x0
  47b734:	str	x0, [sp, #360]
  47b738:	ldr	x0, [sp, #456]
  47b73c:	lsl	x1, x0, #32
  47b740:	ldr	x0, [sp, #512]
  47b744:	and	x0, x0, #0xffffffff
  47b748:	orr	x0, x1, x0
  47b74c:	str	x0, [sp, #456]
  47b750:	ldr	x1, [sp, #456]
  47b754:	ldr	x0, [sp, #360]
  47b758:	cmp	x1, x0
  47b75c:	b.cs	47b7b8 <_obstack_memory_used@@Base+0x1e678>  // b.hs, b.nlast
  47b760:	ldr	x0, [sp, #472]
  47b764:	sub	x0, x0, #0x1
  47b768:	str	x0, [sp, #472]
  47b76c:	ldr	x1, [sp, #456]
  47b770:	ldr	x0, [sp, #624]
  47b774:	add	x0, x1, x0
  47b778:	str	x0, [sp, #456]
  47b77c:	ldr	x1, [sp, #456]
  47b780:	ldr	x0, [sp, #624]
  47b784:	cmp	x1, x0
  47b788:	b.cc	47b7b8 <_obstack_memory_used@@Base+0x1e678>  // b.lo, b.ul, b.last
  47b78c:	ldr	x1, [sp, #456]
  47b790:	ldr	x0, [sp, #360]
  47b794:	cmp	x1, x0
  47b798:	b.cs	47b7b8 <_obstack_memory_used@@Base+0x1e678>  // b.hs, b.nlast
  47b79c:	ldr	x0, [sp, #472]
  47b7a0:	sub	x0, x0, #0x1
  47b7a4:	str	x0, [sp, #472]
  47b7a8:	ldr	x1, [sp, #456]
  47b7ac:	ldr	x0, [sp, #624]
  47b7b0:	add	x0, x1, x0
  47b7b4:	str	x0, [sp, #456]
  47b7b8:	ldr	x1, [sp, #456]
  47b7bc:	ldr	x0, [sp, #360]
  47b7c0:	sub	x0, x1, x0
  47b7c4:	str	x0, [sp, #456]
  47b7c8:	ldr	x0, [sp, #480]
  47b7cc:	lsl	x0, x0, #32
  47b7d0:	ldr	x1, [sp, #472]
  47b7d4:	orr	x0, x1, x0
  47b7d8:	str	x0, [sp, #544]
  47b7dc:	ldr	x0, [sp, #456]
  47b7e0:	str	x0, [sp, #496]
  47b7e4:	ldr	x0, [sp, #544]
  47b7e8:	str	w0, [sp, #356]
  47b7ec:	ldr	x0, [sp, #544]
  47b7f0:	lsr	x0, x0, #32
  47b7f4:	str	w0, [sp, #352]
  47b7f8:	ldr	x0, [sp, #616]
  47b7fc:	str	w0, [sp, #348]
  47b800:	ldr	x0, [sp, #616]
  47b804:	lsr	x0, x0, #32
  47b808:	str	w0, [sp, #344]
  47b80c:	ldr	w1, [sp, #356]
  47b810:	ldr	w0, [sp, #348]
  47b814:	mul	x0, x1, x0
  47b818:	str	x0, [sp, #336]
  47b81c:	ldr	w1, [sp, #356]
  47b820:	ldr	w0, [sp, #344]
  47b824:	mul	x0, x1, x0
  47b828:	str	x0, [sp, #328]
  47b82c:	ldr	w1, [sp, #352]
  47b830:	ldr	w0, [sp, #348]
  47b834:	mul	x0, x1, x0
  47b838:	str	x0, [sp, #320]
  47b83c:	ldr	w1, [sp, #352]
  47b840:	ldr	w0, [sp, #344]
  47b844:	mul	x0, x1, x0
  47b848:	str	x0, [sp, #448]
  47b84c:	ldr	x0, [sp, #336]
  47b850:	lsr	x0, x0, #32
  47b854:	ldr	x1, [sp, #328]
  47b858:	add	x0, x1, x0
  47b85c:	str	x0, [sp, #328]
  47b860:	ldr	x1, [sp, #328]
  47b864:	ldr	x0, [sp, #320]
  47b868:	add	x0, x1, x0
  47b86c:	str	x0, [sp, #328]
  47b870:	ldr	x1, [sp, #328]
  47b874:	ldr	x0, [sp, #320]
  47b878:	cmp	x1, x0
  47b87c:	b.cs	47b890 <_obstack_memory_used@@Base+0x1e750>  // b.hs, b.nlast
  47b880:	ldr	x1, [sp, #448]
  47b884:	mov	x0, #0x100000000           	// #4294967296
  47b888:	add	x0, x1, x0
  47b88c:	str	x0, [sp, #448]
  47b890:	ldr	x0, [sp, #328]
  47b894:	lsr	x0, x0, #32
  47b898:	ldr	x1, [sp, #448]
  47b89c:	add	x0, x1, x0
  47b8a0:	str	x0, [sp, #312]
  47b8a4:	ldr	x0, [sp, #328]
  47b8a8:	and	x0, x0, #0xffffffff
  47b8ac:	lsl	x1, x0, #32
  47b8b0:	ldr	x0, [sp, #336]
  47b8b4:	and	x0, x0, #0xffffffff
  47b8b8:	add	x0, x1, x0
  47b8bc:	str	x0, [sp, #304]
  47b8c0:	ldr	x0, [sp, #504]
  47b8c4:	str	x0, [sp, #488]
  47b8c8:	ldr	x1, [sp, #312]
  47b8cc:	ldr	x0, [sp, #496]
  47b8d0:	cmp	x1, x0
  47b8d4:	b.hi	47b8f8 <_obstack_memory_used@@Base+0x1e7b8>  // b.pmore
  47b8d8:	ldr	x1, [sp, #312]
  47b8dc:	ldr	x0, [sp, #496]
  47b8e0:	cmp	x1, x0
  47b8e4:	b.ne	47b9f8 <_obstack_memory_used@@Base+0x1e8b8>  // b.any
  47b8e8:	ldr	x1, [sp, #304]
  47b8ec:	ldr	x0, [sp, #488]
  47b8f0:	cmp	x1, x0
  47b8f4:	b.ls	47b9f8 <_obstack_memory_used@@Base+0x1e8b8>  // b.plast
  47b8f8:	ldr	x0, [sp, #544]
  47b8fc:	sub	x0, x0, #0x1
  47b900:	str	x0, [sp, #544]
  47b904:	ldr	x1, [sp, #616]
  47b908:	ldr	x0, [sp, #488]
  47b90c:	add	x0, x1, x0
  47b910:	str	x0, [sp, #296]
  47b914:	ldr	x1, [sp, #624]
  47b918:	ldr	x0, [sp, #496]
  47b91c:	add	x1, x1, x0
  47b920:	ldr	x2, [sp, #296]
  47b924:	ldr	x0, [sp, #616]
  47b928:	cmp	x2, x0
  47b92c:	cset	w0, cc  // cc = lo, ul, last
  47b930:	and	w0, w0, #0xff
  47b934:	and	x0, x0, #0xff
  47b938:	add	x0, x1, x0
  47b93c:	str	x0, [sp, #496]
  47b940:	ldr	x0, [sp, #296]
  47b944:	str	x0, [sp, #488]
  47b948:	ldr	x1, [sp, #496]
  47b94c:	ldr	x0, [sp, #624]
  47b950:	cmp	x1, x0
  47b954:	b.hi	47b978 <_obstack_memory_used@@Base+0x1e838>  // b.pmore
  47b958:	ldr	x1, [sp, #496]
  47b95c:	ldr	x0, [sp, #624]
  47b960:	cmp	x1, x0
  47b964:	b.ne	47b9f8 <_obstack_memory_used@@Base+0x1e8b8>  // b.any
  47b968:	ldr	x1, [sp, #488]
  47b96c:	ldr	x0, [sp, #616]
  47b970:	cmp	x1, x0
  47b974:	b.cc	47b9f8 <_obstack_memory_used@@Base+0x1e8b8>  // b.lo, b.ul, b.last
  47b978:	ldr	x1, [sp, #312]
  47b97c:	ldr	x0, [sp, #496]
  47b980:	cmp	x1, x0
  47b984:	b.hi	47b9a8 <_obstack_memory_used@@Base+0x1e868>  // b.pmore
  47b988:	ldr	x1, [sp, #312]
  47b98c:	ldr	x0, [sp, #496]
  47b990:	cmp	x1, x0
  47b994:	b.ne	47b9f8 <_obstack_memory_used@@Base+0x1e8b8>  // b.any
  47b998:	ldr	x1, [sp, #304]
  47b99c:	ldr	x0, [sp, #488]
  47b9a0:	cmp	x1, x0
  47b9a4:	b.ls	47b9f8 <_obstack_memory_used@@Base+0x1e8b8>  // b.plast
  47b9a8:	ldr	x0, [sp, #544]
  47b9ac:	sub	x0, x0, #0x1
  47b9b0:	str	x0, [sp, #544]
  47b9b4:	ldr	x1, [sp, #616]
  47b9b8:	ldr	x0, [sp, #488]
  47b9bc:	add	x0, x1, x0
  47b9c0:	str	x0, [sp, #288]
  47b9c4:	ldr	x1, [sp, #624]
  47b9c8:	ldr	x0, [sp, #496]
  47b9cc:	add	x1, x1, x0
  47b9d0:	ldr	x2, [sp, #288]
  47b9d4:	ldr	x0, [sp, #616]
  47b9d8:	cmp	x2, x0
  47b9dc:	cset	w0, cc  // cc = lo, ul, last
  47b9e0:	and	w0, w0, #0xff
  47b9e4:	and	x0, x0, #0xff
  47b9e8:	add	x0, x1, x0
  47b9ec:	str	x0, [sp, #496]
  47b9f0:	ldr	x0, [sp, #288]
  47b9f4:	str	x0, [sp, #488]
  47b9f8:	ldr	x1, [sp, #488]
  47b9fc:	ldr	x0, [sp, #304]
  47ba00:	sub	x0, x1, x0
  47ba04:	str	x0, [sp, #280]
  47ba08:	ldr	x1, [sp, #496]
  47ba0c:	ldr	x0, [sp, #312]
  47ba10:	sub	x1, x1, x0
  47ba14:	ldr	x2, [sp, #280]
  47ba18:	ldr	x0, [sp, #488]
  47ba1c:	cmp	x2, x0
  47ba20:	cset	w0, hi  // hi = pmore
  47ba24:	and	w0, w0, #0xff
  47ba28:	and	x0, x0, #0xff
  47ba2c:	sub	x0, x1, x0
  47ba30:	str	x0, [sp, #496]
  47ba34:	ldr	x0, [sp, #280]
  47ba38:	str	x0, [sp, #488]
  47ba3c:	ldr	x1, [sp, #496]
  47ba40:	ldr	x0, [sp, #624]
  47ba44:	cmp	x1, x0
  47ba48:	b.ne	47ba58 <_obstack_memory_used@@Base+0x1e918>  // b.any
  47ba4c:	mov	x0, #0xffffffffffffffff    	// #-1
  47ba50:	str	x0, [sp, #552]
  47ba54:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47ba58:	ldr	x0, [sp, #624]
  47ba5c:	lsr	x0, x0, #32
  47ba60:	str	x0, [sp, #272]
  47ba64:	ldr	x0, [sp, #624]
  47ba68:	and	x0, x0, #0xffffffff
  47ba6c:	str	x0, [sp, #264]
  47ba70:	ldr	x0, [sp, #496]
  47ba74:	ldr	x1, [sp, #272]
  47ba78:	udiv	x2, x0, x1
  47ba7c:	ldr	x1, [sp, #272]
  47ba80:	mul	x1, x2, x1
  47ba84:	sub	x0, x0, x1
  47ba88:	str	x0, [sp, #424]
  47ba8c:	ldr	x1, [sp, #496]
  47ba90:	ldr	x0, [sp, #272]
  47ba94:	udiv	x0, x1, x0
  47ba98:	str	x0, [sp, #440]
  47ba9c:	ldr	x1, [sp, #440]
  47baa0:	ldr	x0, [sp, #264]
  47baa4:	mul	x0, x1, x0
  47baa8:	str	x0, [sp, #256]
  47baac:	ldr	x0, [sp, #424]
  47bab0:	lsl	x1, x0, #32
  47bab4:	ldr	x0, [sp, #488]
  47bab8:	lsr	x0, x0, #32
  47babc:	orr	x0, x1, x0
  47bac0:	str	x0, [sp, #424]
  47bac4:	ldr	x1, [sp, #424]
  47bac8:	ldr	x0, [sp, #256]
  47bacc:	cmp	x1, x0
  47bad0:	b.cs	47bb2c <_obstack_memory_used@@Base+0x1e9ec>  // b.hs, b.nlast
  47bad4:	ldr	x0, [sp, #440]
  47bad8:	sub	x0, x0, #0x1
  47badc:	str	x0, [sp, #440]
  47bae0:	ldr	x1, [sp, #424]
  47bae4:	ldr	x0, [sp, #624]
  47bae8:	add	x0, x1, x0
  47baec:	str	x0, [sp, #424]
  47baf0:	ldr	x1, [sp, #424]
  47baf4:	ldr	x0, [sp, #624]
  47baf8:	cmp	x1, x0
  47bafc:	b.cc	47bb2c <_obstack_memory_used@@Base+0x1e9ec>  // b.lo, b.ul, b.last
  47bb00:	ldr	x1, [sp, #424]
  47bb04:	ldr	x0, [sp, #256]
  47bb08:	cmp	x1, x0
  47bb0c:	b.cs	47bb2c <_obstack_memory_used@@Base+0x1e9ec>  // b.hs, b.nlast
  47bb10:	ldr	x0, [sp, #440]
  47bb14:	sub	x0, x0, #0x1
  47bb18:	str	x0, [sp, #440]
  47bb1c:	ldr	x1, [sp, #424]
  47bb20:	ldr	x0, [sp, #624]
  47bb24:	add	x0, x1, x0
  47bb28:	str	x0, [sp, #424]
  47bb2c:	ldr	x1, [sp, #424]
  47bb30:	ldr	x0, [sp, #256]
  47bb34:	sub	x0, x1, x0
  47bb38:	str	x0, [sp, #424]
  47bb3c:	ldr	x0, [sp, #424]
  47bb40:	ldr	x1, [sp, #272]
  47bb44:	udiv	x2, x0, x1
  47bb48:	ldr	x1, [sp, #272]
  47bb4c:	mul	x1, x2, x1
  47bb50:	sub	x0, x0, x1
  47bb54:	str	x0, [sp, #416]
  47bb58:	ldr	x1, [sp, #424]
  47bb5c:	ldr	x0, [sp, #272]
  47bb60:	udiv	x0, x1, x0
  47bb64:	str	x0, [sp, #432]
  47bb68:	ldr	x1, [sp, #432]
  47bb6c:	ldr	x0, [sp, #264]
  47bb70:	mul	x0, x1, x0
  47bb74:	str	x0, [sp, #256]
  47bb78:	ldr	x0, [sp, #416]
  47bb7c:	lsl	x1, x0, #32
  47bb80:	ldr	x0, [sp, #488]
  47bb84:	and	x0, x0, #0xffffffff
  47bb88:	orr	x0, x1, x0
  47bb8c:	str	x0, [sp, #416]
  47bb90:	ldr	x1, [sp, #416]
  47bb94:	ldr	x0, [sp, #256]
  47bb98:	cmp	x1, x0
  47bb9c:	b.cs	47bbf8 <_obstack_memory_used@@Base+0x1eab8>  // b.hs, b.nlast
  47bba0:	ldr	x0, [sp, #432]
  47bba4:	sub	x0, x0, #0x1
  47bba8:	str	x0, [sp, #432]
  47bbac:	ldr	x1, [sp, #416]
  47bbb0:	ldr	x0, [sp, #624]
  47bbb4:	add	x0, x1, x0
  47bbb8:	str	x0, [sp, #416]
  47bbbc:	ldr	x1, [sp, #416]
  47bbc0:	ldr	x0, [sp, #624]
  47bbc4:	cmp	x1, x0
  47bbc8:	b.cc	47bbf8 <_obstack_memory_used@@Base+0x1eab8>  // b.lo, b.ul, b.last
  47bbcc:	ldr	x1, [sp, #416]
  47bbd0:	ldr	x0, [sp, #256]
  47bbd4:	cmp	x1, x0
  47bbd8:	b.cs	47bbf8 <_obstack_memory_used@@Base+0x1eab8>  // b.hs, b.nlast
  47bbdc:	ldr	x0, [sp, #432]
  47bbe0:	sub	x0, x0, #0x1
  47bbe4:	str	x0, [sp, #432]
  47bbe8:	ldr	x1, [sp, #416]
  47bbec:	ldr	x0, [sp, #624]
  47bbf0:	add	x0, x1, x0
  47bbf4:	str	x0, [sp, #416]
  47bbf8:	ldr	x1, [sp, #416]
  47bbfc:	ldr	x0, [sp, #256]
  47bc00:	sub	x0, x1, x0
  47bc04:	str	x0, [sp, #416]
  47bc08:	ldr	x0, [sp, #440]
  47bc0c:	lsl	x0, x0, #32
  47bc10:	ldr	x1, [sp, #432]
  47bc14:	orr	x0, x1, x0
  47bc18:	str	x0, [sp, #552]
  47bc1c:	ldr	x0, [sp, #416]
  47bc20:	str	x0, [sp, #496]
  47bc24:	ldr	x0, [sp, #552]
  47bc28:	str	w0, [sp, #252]
  47bc2c:	ldr	x0, [sp, #552]
  47bc30:	lsr	x0, x0, #32
  47bc34:	str	w0, [sp, #248]
  47bc38:	ldr	x0, [sp, #616]
  47bc3c:	str	w0, [sp, #244]
  47bc40:	ldr	x0, [sp, #616]
  47bc44:	lsr	x0, x0, #32
  47bc48:	str	w0, [sp, #240]
  47bc4c:	ldr	w1, [sp, #252]
  47bc50:	ldr	w0, [sp, #244]
  47bc54:	mul	x0, x1, x0
  47bc58:	str	x0, [sp, #232]
  47bc5c:	ldr	w1, [sp, #252]
  47bc60:	ldr	w0, [sp, #240]
  47bc64:	mul	x0, x1, x0
  47bc68:	str	x0, [sp, #224]
  47bc6c:	ldr	w1, [sp, #248]
  47bc70:	ldr	w0, [sp, #244]
  47bc74:	mul	x0, x1, x0
  47bc78:	str	x0, [sp, #216]
  47bc7c:	ldr	w1, [sp, #248]
  47bc80:	ldr	w0, [sp, #240]
  47bc84:	mul	x0, x1, x0
  47bc88:	str	x0, [sp, #408]
  47bc8c:	ldr	x0, [sp, #232]
  47bc90:	lsr	x0, x0, #32
  47bc94:	ldr	x1, [sp, #224]
  47bc98:	add	x0, x1, x0
  47bc9c:	str	x0, [sp, #224]
  47bca0:	ldr	x1, [sp, #224]
  47bca4:	ldr	x0, [sp, #216]
  47bca8:	add	x0, x1, x0
  47bcac:	str	x0, [sp, #224]
  47bcb0:	ldr	x1, [sp, #224]
  47bcb4:	ldr	x0, [sp, #216]
  47bcb8:	cmp	x1, x0
  47bcbc:	b.cs	47bcd0 <_obstack_memory_used@@Base+0x1eb90>  // b.hs, b.nlast
  47bcc0:	ldr	x1, [sp, #408]
  47bcc4:	mov	x0, #0x100000000           	// #4294967296
  47bcc8:	add	x0, x1, x0
  47bccc:	str	x0, [sp, #408]
  47bcd0:	ldr	x0, [sp, #224]
  47bcd4:	lsr	x0, x0, #32
  47bcd8:	ldr	x1, [sp, #408]
  47bcdc:	add	x0, x1, x0
  47bce0:	str	x0, [sp, #312]
  47bce4:	ldr	x0, [sp, #224]
  47bce8:	and	x0, x0, #0xffffffff
  47bcec:	lsl	x1, x0, #32
  47bcf0:	ldr	x0, [sp, #232]
  47bcf4:	and	x0, x0, #0xffffffff
  47bcf8:	add	x0, x1, x0
  47bcfc:	str	x0, [sp, #304]
  47bd00:	str	xzr, [sp, #488]
  47bd04:	ldr	x1, [sp, #312]
  47bd08:	ldr	x0, [sp, #496]
  47bd0c:	cmp	x1, x0
  47bd10:	b.hi	47bd34 <_obstack_memory_used@@Base+0x1ebf4>  // b.pmore
  47bd14:	ldr	x1, [sp, #312]
  47bd18:	ldr	x0, [sp, #496]
  47bd1c:	cmp	x1, x0
  47bd20:	b.ne	47be34 <_obstack_memory_used@@Base+0x1ecf4>  // b.any
  47bd24:	ldr	x1, [sp, #304]
  47bd28:	ldr	x0, [sp, #488]
  47bd2c:	cmp	x1, x0
  47bd30:	b.ls	47be34 <_obstack_memory_used@@Base+0x1ecf4>  // b.plast
  47bd34:	ldr	x0, [sp, #552]
  47bd38:	sub	x0, x0, #0x1
  47bd3c:	str	x0, [sp, #552]
  47bd40:	ldr	x1, [sp, #616]
  47bd44:	ldr	x0, [sp, #488]
  47bd48:	add	x0, x1, x0
  47bd4c:	str	x0, [sp, #208]
  47bd50:	ldr	x1, [sp, #624]
  47bd54:	ldr	x0, [sp, #496]
  47bd58:	add	x1, x1, x0
  47bd5c:	ldr	x2, [sp, #208]
  47bd60:	ldr	x0, [sp, #616]
  47bd64:	cmp	x2, x0
  47bd68:	cset	w0, cc  // cc = lo, ul, last
  47bd6c:	and	w0, w0, #0xff
  47bd70:	and	x0, x0, #0xff
  47bd74:	add	x0, x1, x0
  47bd78:	str	x0, [sp, #496]
  47bd7c:	ldr	x0, [sp, #208]
  47bd80:	str	x0, [sp, #488]
  47bd84:	ldr	x1, [sp, #496]
  47bd88:	ldr	x0, [sp, #624]
  47bd8c:	cmp	x1, x0
  47bd90:	b.hi	47bdb4 <_obstack_memory_used@@Base+0x1ec74>  // b.pmore
  47bd94:	ldr	x1, [sp, #496]
  47bd98:	ldr	x0, [sp, #624]
  47bd9c:	cmp	x1, x0
  47bda0:	b.ne	47be34 <_obstack_memory_used@@Base+0x1ecf4>  // b.any
  47bda4:	ldr	x1, [sp, #488]
  47bda8:	ldr	x0, [sp, #616]
  47bdac:	cmp	x1, x0
  47bdb0:	b.cc	47be34 <_obstack_memory_used@@Base+0x1ecf4>  // b.lo, b.ul, b.last
  47bdb4:	ldr	x1, [sp, #312]
  47bdb8:	ldr	x0, [sp, #496]
  47bdbc:	cmp	x1, x0
  47bdc0:	b.hi	47bde4 <_obstack_memory_used@@Base+0x1eca4>  // b.pmore
  47bdc4:	ldr	x1, [sp, #312]
  47bdc8:	ldr	x0, [sp, #496]
  47bdcc:	cmp	x1, x0
  47bdd0:	b.ne	47be34 <_obstack_memory_used@@Base+0x1ecf4>  // b.any
  47bdd4:	ldr	x1, [sp, #304]
  47bdd8:	ldr	x0, [sp, #488]
  47bddc:	cmp	x1, x0
  47bde0:	b.ls	47be34 <_obstack_memory_used@@Base+0x1ecf4>  // b.plast
  47bde4:	ldr	x0, [sp, #552]
  47bde8:	sub	x0, x0, #0x1
  47bdec:	str	x0, [sp, #552]
  47bdf0:	ldr	x1, [sp, #616]
  47bdf4:	ldr	x0, [sp, #488]
  47bdf8:	add	x0, x1, x0
  47bdfc:	str	x0, [sp, #200]
  47be00:	ldr	x1, [sp, #624]
  47be04:	ldr	x0, [sp, #496]
  47be08:	add	x1, x1, x0
  47be0c:	ldr	x2, [sp, #200]
  47be10:	ldr	x0, [sp, #616]
  47be14:	cmp	x2, x0
  47be18:	cset	w0, cc  // cc = lo, ul, last
  47be1c:	and	w0, w0, #0xff
  47be20:	and	x0, x0, #0xff
  47be24:	add	x0, x1, x0
  47be28:	str	x0, [sp, #496]
  47be2c:	ldr	x0, [sp, #200]
  47be30:	str	x0, [sp, #488]
  47be34:	ldr	x1, [sp, #496]
  47be38:	ldr	x0, [sp, #312]
  47be3c:	cmp	x1, x0
  47be40:	b.ne	47be54 <_obstack_memory_used@@Base+0x1ed14>  // b.any
  47be44:	ldr	x1, [sp, #488]
  47be48:	ldr	x0, [sp, #304]
  47be4c:	cmp	x1, x0
  47be50:	b.eq	47bf5c <_obstack_memory_used@@Base+0x1ee1c>  // b.none
  47be54:	ldr	x0, [sp, #552]
  47be58:	orr	x0, x0, #0x1
  47be5c:	str	x0, [sp, #552]
  47be60:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47be64:	ldr	x0, [sp, #592]
  47be68:	and	x0, x0, #0x800000000000
  47be6c:	cmp	x0, #0x0
  47be70:	b.eq	47bea0 <_obstack_memory_used@@Base+0x1ed60>  // b.none
  47be74:	ldr	x0, [sp, #624]
  47be78:	and	x0, x0, #0x800000000000
  47be7c:	cmp	x0, #0x0
  47be80:	b.ne	47bea0 <_obstack_memory_used@@Base+0x1ed60>  // b.any
  47be84:	ldr	x0, [sp, #384]
  47be88:	str	x0, [sp, #648]
  47be8c:	ldr	x0, [sp, #616]
  47be90:	str	x0, [sp, #552]
  47be94:	ldr	x0, [sp, #624]
  47be98:	str	x0, [sp, #544]
  47be9c:	b	47beb8 <_obstack_memory_used@@Base+0x1ed78>
  47bea0:	ldr	x0, [sp, #392]
  47bea4:	str	x0, [sp, #648]
  47bea8:	ldr	x0, [sp, #584]
  47beac:	str	x0, [sp, #552]
  47beb0:	ldr	x0, [sp, #592]
  47beb4:	str	x0, [sp, #544]
  47beb8:	mov	x0, #0x3                   	// #3
  47bebc:	str	x0, [sp, #632]
  47bec0:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47bec4:	ldr	x0, [sp, #392]
  47bec8:	str	x0, [sp, #648]
  47becc:	ldr	x0, [sp, #584]
  47bed0:	str	x0, [sp, #552]
  47bed4:	ldr	x0, [sp, #592]
  47bed8:	str	x0, [sp, #544]
  47bedc:	ldr	x0, [sp, #576]
  47bee0:	str	x0, [sp, #632]
  47bee4:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47bee8:	ldr	x0, [sp, #384]
  47beec:	str	x0, [sp, #648]
  47bef0:	ldr	x0, [sp, #616]
  47bef4:	str	x0, [sp, #552]
  47bef8:	ldr	x0, [sp, #624]
  47befc:	str	x0, [sp, #544]
  47bf00:	ldr	x0, [sp, #608]
  47bf04:	str	x0, [sp, #632]
  47bf08:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47bf0c:	mov	x0, #0x1                   	// #1
  47bf10:	str	x0, [sp, #632]
  47bf14:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47bf18:	ldr	w0, [sp, #564]
  47bf1c:	orr	w0, w0, #0x2
  47bf20:	str	w0, [sp, #564]
  47bf24:	mov	x0, #0x2                   	// #2
  47bf28:	str	x0, [sp, #632]
  47bf2c:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47bf30:	str	xzr, [sp, #648]
  47bf34:	mov	x0, #0x3                   	// #3
  47bf38:	str	x0, [sp, #632]
  47bf3c:	mov	x0, #0xffffffffffffffff    	// #-1
  47bf40:	str	x0, [sp, #552]
  47bf44:	mov	x0, #0xffffffffffff        	// #281474976710655
  47bf48:	str	x0, [sp, #544]
  47bf4c:	ldr	w0, [sp, #564]
  47bf50:	orr	w0, w0, #0x1
  47bf54:	str	w0, [sp, #564]
  47bf58:	b	47bf5c <_obstack_memory_used@@Base+0x1ee1c>
  47bf5c:	nop
  47bf60:	ldr	x0, [sp, #632]
  47bf64:	cmp	x0, #0x3
  47bf68:	b.eq	47c6fc <_obstack_memory_used@@Base+0x1f5bc>  // b.none
  47bf6c:	ldr	x0, [sp, #632]
  47bf70:	cmp	x0, #0x3
  47bf74:	b.gt	47c714 <_obstack_memory_used@@Base+0x1f5d4>
  47bf78:	ldr	x0, [sp, #632]
  47bf7c:	cmp	x0, #0x2
  47bf80:	b.eq	47c6e8 <_obstack_memory_used@@Base+0x1f5a8>  // b.none
  47bf84:	ldr	x0, [sp, #632]
  47bf88:	cmp	x0, #0x2
  47bf8c:	b.gt	47c714 <_obstack_memory_used@@Base+0x1f5d4>
  47bf90:	ldr	x0, [sp, #632]
  47bf94:	cmp	x0, #0x0
  47bf98:	b.eq	47bfac <_obstack_memory_used@@Base+0x1ee6c>  // b.none
  47bf9c:	ldr	x0, [sp, #632]
  47bfa0:	cmp	x0, #0x1
  47bfa4:	b.eq	47c6d8 <_obstack_memory_used@@Base+0x1f598>  // b.none
  47bfa8:	b	47c714 <_obstack_memory_used@@Base+0x1f5d4>
  47bfac:	ldr	x1, [sp, #640]
  47bfb0:	mov	x0, #0x3fff                	// #16383
  47bfb4:	add	x0, x1, x0
  47bfb8:	str	x0, [sp, #640]
  47bfbc:	ldr	x0, [sp, #640]
  47bfc0:	cmp	x0, #0x0
  47bfc4:	b.le	47c240 <_obstack_memory_used@@Base+0x1f100>
  47bfc8:	ldr	x0, [sp, #552]
  47bfcc:	and	x0, x0, #0x7
  47bfd0:	cmp	x0, #0x0
  47bfd4:	b.eq	47c11c <_obstack_memory_used@@Base+0x1efdc>  // b.none
  47bfd8:	ldr	w0, [sp, #564]
  47bfdc:	orr	w0, w0, #0x10
  47bfe0:	str	w0, [sp, #564]
  47bfe4:	ldr	x0, [sp, #400]
  47bfe8:	and	x0, x0, #0xc00000
  47bfec:	cmp	x0, #0xc00, lsl #12
  47bff0:	b.eq	47c124 <_obstack_memory_used@@Base+0x1efe4>  // b.none
  47bff4:	cmp	x0, #0xc00, lsl #12
  47bff8:	b.hi	47c128 <_obstack_memory_used@@Base+0x1efe8>  // b.pmore
  47bffc:	cmp	x0, #0x800, lsl #12
  47c000:	b.eq	47c0c4 <_obstack_memory_used@@Base+0x1ef84>  // b.none
  47c004:	cmp	x0, #0x800, lsl #12
  47c008:	b.hi	47c128 <_obstack_memory_used@@Base+0x1efe8>  // b.pmore
  47c00c:	cmp	x0, #0x0
  47c010:	b.eq	47c020 <_obstack_memory_used@@Base+0x1eee0>  // b.none
  47c014:	cmp	x0, #0x400, lsl #12
  47c018:	b.eq	47c06c <_obstack_memory_used@@Base+0x1ef2c>  // b.none
  47c01c:	b	47c128 <_obstack_memory_used@@Base+0x1efe8>
  47c020:	ldr	x0, [sp, #552]
  47c024:	and	x0, x0, #0xf
  47c028:	cmp	x0, #0x4
  47c02c:	b.eq	47c124 <_obstack_memory_used@@Base+0x1efe4>  // b.none
  47c030:	ldr	x0, [sp, #552]
  47c034:	add	x0, x0, #0x4
  47c038:	str	x0, [sp, #120]
  47c03c:	ldr	x1, [sp, #120]
  47c040:	ldr	x0, [sp, #552]
  47c044:	cmp	x1, x0
  47c048:	cset	w0, cc  // cc = lo, ul, last
  47c04c:	and	w0, w0, #0xff
  47c050:	and	x0, x0, #0xff
  47c054:	ldr	x1, [sp, #544]
  47c058:	add	x0, x1, x0
  47c05c:	str	x0, [sp, #544]
  47c060:	ldr	x0, [sp, #120]
  47c064:	str	x0, [sp, #552]
  47c068:	b	47c124 <_obstack_memory_used@@Base+0x1efe4>
  47c06c:	ldr	x0, [sp, #648]
  47c070:	cmp	x0, #0x0
  47c074:	b.ne	47c124 <_obstack_memory_used@@Base+0x1efe4>  // b.any
  47c078:	ldr	x0, [sp, #552]
  47c07c:	and	x0, x0, #0x7
  47c080:	cmp	x0, #0x0
  47c084:	b.eq	47c124 <_obstack_memory_used@@Base+0x1efe4>  // b.none
  47c088:	ldr	x0, [sp, #552]
  47c08c:	add	x0, x0, #0x8
  47c090:	str	x0, [sp, #128]
  47c094:	ldr	x1, [sp, #128]
  47c098:	ldr	x0, [sp, #552]
  47c09c:	cmp	x1, x0
  47c0a0:	cset	w0, cc  // cc = lo, ul, last
  47c0a4:	and	w0, w0, #0xff
  47c0a8:	and	x0, x0, #0xff
  47c0ac:	ldr	x1, [sp, #544]
  47c0b0:	add	x0, x1, x0
  47c0b4:	str	x0, [sp, #544]
  47c0b8:	ldr	x0, [sp, #128]
  47c0bc:	str	x0, [sp, #552]
  47c0c0:	b	47c124 <_obstack_memory_used@@Base+0x1efe4>
  47c0c4:	ldr	x0, [sp, #648]
  47c0c8:	cmp	x0, #0x0
  47c0cc:	b.eq	47c124 <_obstack_memory_used@@Base+0x1efe4>  // b.none
  47c0d0:	ldr	x0, [sp, #552]
  47c0d4:	and	x0, x0, #0x7
  47c0d8:	cmp	x0, #0x0
  47c0dc:	b.eq	47c124 <_obstack_memory_used@@Base+0x1efe4>  // b.none
  47c0e0:	ldr	x0, [sp, #552]
  47c0e4:	add	x0, x0, #0x8
  47c0e8:	str	x0, [sp, #136]
  47c0ec:	ldr	x1, [sp, #136]
  47c0f0:	ldr	x0, [sp, #552]
  47c0f4:	cmp	x1, x0
  47c0f8:	cset	w0, cc  // cc = lo, ul, last
  47c0fc:	and	w0, w0, #0xff
  47c100:	and	x0, x0, #0xff
  47c104:	ldr	x1, [sp, #544]
  47c108:	add	x0, x1, x0
  47c10c:	str	x0, [sp, #544]
  47c110:	ldr	x0, [sp, #136]
  47c114:	str	x0, [sp, #552]
  47c118:	b	47c124 <_obstack_memory_used@@Base+0x1efe4>
  47c11c:	nop
  47c120:	b	47c128 <_obstack_memory_used@@Base+0x1efe8>
  47c124:	nop
  47c128:	ldr	x0, [sp, #544]
  47c12c:	and	x0, x0, #0x10000000000000
  47c130:	cmp	x0, #0x0
  47c134:	b.eq	47c150 <_obstack_memory_used@@Base+0x1f010>  // b.none
  47c138:	ldr	x0, [sp, #544]
  47c13c:	and	x0, x0, #0xffefffffffffffff
  47c140:	str	x0, [sp, #544]
  47c144:	ldr	x0, [sp, #640]
  47c148:	add	x0, x0, #0x1
  47c14c:	str	x0, [sp, #640]
  47c150:	ldr	x0, [sp, #552]
  47c154:	lsr	x1, x0, #3
  47c158:	ldr	x0, [sp, #544]
  47c15c:	lsl	x0, x0, #61
  47c160:	orr	x0, x1, x0
  47c164:	str	x0, [sp, #552]
  47c168:	ldr	x0, [sp, #544]
  47c16c:	lsr	x0, x0, #3
  47c170:	str	x0, [sp, #544]
  47c174:	ldr	x1, [sp, #640]
  47c178:	mov	x0, #0x7ffe                	// #32766
  47c17c:	cmp	x1, x0
  47c180:	b.le	47c710 <_obstack_memory_used@@Base+0x1f5d0>
  47c184:	ldr	x0, [sp, #400]
  47c188:	and	x0, x0, #0xc00000
  47c18c:	cmp	x0, #0x800, lsl #12
  47c190:	b.eq	47c1d4 <_obstack_memory_used@@Base+0x1f094>  // b.none
  47c194:	cmp	x0, #0x800, lsl #12
  47c198:	b.hi	47c1ec <_obstack_memory_used@@Base+0x1f0ac>  // b.pmore
  47c19c:	cmp	x0, #0x0
  47c1a0:	b.eq	47c1b0 <_obstack_memory_used@@Base+0x1f070>  // b.none
  47c1a4:	cmp	x0, #0x400, lsl #12
  47c1a8:	b.eq	47c1bc <_obstack_memory_used@@Base+0x1f07c>  // b.none
  47c1ac:	b	47c1ec <_obstack_memory_used@@Base+0x1f0ac>
  47c1b0:	mov	x0, #0x2                   	// #2
  47c1b4:	str	x0, [sp, #632]
  47c1b8:	b	47c1e8 <_obstack_memory_used@@Base+0x1f0a8>
  47c1bc:	ldr	x0, [sp, #648]
  47c1c0:	cmp	x0, #0x0
  47c1c4:	b.ne	47c1e8 <_obstack_memory_used@@Base+0x1f0a8>  // b.any
  47c1c8:	mov	x0, #0x2                   	// #2
  47c1cc:	str	x0, [sp, #632]
  47c1d0:	b	47c1e8 <_obstack_memory_used@@Base+0x1f0a8>
  47c1d4:	ldr	x0, [sp, #648]
  47c1d8:	cmp	x0, #0x0
  47c1dc:	b.eq	47c1e8 <_obstack_memory_used@@Base+0x1f0a8>  // b.none
  47c1e0:	mov	x0, #0x2                   	// #2
  47c1e4:	str	x0, [sp, #632]
  47c1e8:	nop
  47c1ec:	ldr	x0, [sp, #632]
  47c1f0:	cmp	x0, #0x2
  47c1f4:	b.ne	47c20c <_obstack_memory_used@@Base+0x1f0cc>  // b.any
  47c1f8:	mov	x0, #0x7fff                	// #32767
  47c1fc:	str	x0, [sp, #640]
  47c200:	str	xzr, [sp, #552]
  47c204:	str	xzr, [sp, #544]
  47c208:	b	47c224 <_obstack_memory_used@@Base+0x1f0e4>
  47c20c:	mov	x0, #0x7ffe                	// #32766
  47c210:	str	x0, [sp, #640]
  47c214:	mov	x0, #0xffffffffffffffff    	// #-1
  47c218:	str	x0, [sp, #552]
  47c21c:	mov	x0, #0xffffffffffffffff    	// #-1
  47c220:	str	x0, [sp, #544]
  47c224:	ldr	w0, [sp, #564]
  47c228:	orr	w0, w0, #0x4
  47c22c:	str	w0, [sp, #564]
  47c230:	ldr	w0, [sp, #564]
  47c234:	orr	w0, w0, #0x10
  47c238:	str	w0, [sp, #564]
  47c23c:	b	47c710 <_obstack_memory_used@@Base+0x1f5d0>
  47c240:	mov	w0, #0x1                   	// #1
  47c244:	str	w0, [sp, #196]
  47c248:	mov	x1, #0x1                   	// #1
  47c24c:	ldr	x0, [sp, #640]
  47c250:	sub	x0, x1, x0
  47c254:	str	x0, [sp, #640]
  47c258:	ldr	x0, [sp, #640]
  47c25c:	cmp	x0, #0x74
  47c260:	b.gt	47c538 <_obstack_memory_used@@Base+0x1f3f8>
  47c264:	ldr	x0, [sp, #640]
  47c268:	cmp	x0, #0x3f
  47c26c:	b.gt	47c2e4 <_obstack_memory_used@@Base+0x1f1a4>
  47c270:	ldr	x0, [sp, #640]
  47c274:	mov	w1, w0
  47c278:	mov	w0, #0x40                  	// #64
  47c27c:	sub	w0, w0, w1
  47c280:	ldr	x1, [sp, #544]
  47c284:	lsl	x1, x1, x0
  47c288:	ldr	x0, [sp, #640]
  47c28c:	mov	w2, w0
  47c290:	ldr	x0, [sp, #552]
  47c294:	lsr	x0, x0, x2
  47c298:	orr	x1, x1, x0
  47c29c:	ldr	x0, [sp, #640]
  47c2a0:	mov	w2, w0
  47c2a4:	mov	w0, #0x40                  	// #64
  47c2a8:	sub	w0, w0, w2
  47c2ac:	ldr	x2, [sp, #552]
  47c2b0:	lsl	x0, x2, x0
  47c2b4:	cmp	x0, #0x0
  47c2b8:	cset	w0, ne  // ne = any
  47c2bc:	and	w0, w0, #0xff
  47c2c0:	sxtw	x0, w0
  47c2c4:	orr	x0, x1, x0
  47c2c8:	str	x0, [sp, #552]
  47c2cc:	ldr	x0, [sp, #640]
  47c2d0:	mov	w1, w0
  47c2d4:	ldr	x0, [sp, #544]
  47c2d8:	lsr	x0, x0, x1
  47c2dc:	str	x0, [sp, #544]
  47c2e0:	b	47c344 <_obstack_memory_used@@Base+0x1f204>
  47c2e4:	ldr	x0, [sp, #640]
  47c2e8:	sub	w0, w0, #0x40
  47c2ec:	ldr	x1, [sp, #544]
  47c2f0:	lsr	x1, x1, x0
  47c2f4:	ldr	x0, [sp, #640]
  47c2f8:	cmp	x0, #0x40
  47c2fc:	b.eq	47c31c <_obstack_memory_used@@Base+0x1f1dc>  // b.none
  47c300:	ldr	x0, [sp, #640]
  47c304:	mov	w2, w0
  47c308:	mov	w0, #0x80                  	// #128
  47c30c:	sub	w0, w0, w2
  47c310:	ldr	x2, [sp, #544]
  47c314:	lsl	x0, x2, x0
  47c318:	b	47c320 <_obstack_memory_used@@Base+0x1f1e0>
  47c31c:	mov	x0, #0x0                   	// #0
  47c320:	ldr	x2, [sp, #552]
  47c324:	orr	x0, x0, x2
  47c328:	cmp	x0, #0x0
  47c32c:	cset	w0, ne  // ne = any
  47c330:	and	w0, w0, #0xff
  47c334:	and	x0, x0, #0xff
  47c338:	orr	x0, x1, x0
  47c33c:	str	x0, [sp, #552]
  47c340:	str	xzr, [sp, #544]
  47c344:	ldr	x0, [sp, #552]
  47c348:	and	x0, x0, #0x7
  47c34c:	cmp	x0, #0x0
  47c350:	b.eq	47c498 <_obstack_memory_used@@Base+0x1f358>  // b.none
  47c354:	ldr	w0, [sp, #564]
  47c358:	orr	w0, w0, #0x10
  47c35c:	str	w0, [sp, #564]
  47c360:	ldr	x0, [sp, #400]
  47c364:	and	x0, x0, #0xc00000
  47c368:	cmp	x0, #0xc00, lsl #12
  47c36c:	b.eq	47c4a0 <_obstack_memory_used@@Base+0x1f360>  // b.none
  47c370:	cmp	x0, #0xc00, lsl #12
  47c374:	b.hi	47c4a4 <_obstack_memory_used@@Base+0x1f364>  // b.pmore
  47c378:	cmp	x0, #0x800, lsl #12
  47c37c:	b.eq	47c440 <_obstack_memory_used@@Base+0x1f300>  // b.none
  47c380:	cmp	x0, #0x800, lsl #12
  47c384:	b.hi	47c4a4 <_obstack_memory_used@@Base+0x1f364>  // b.pmore
  47c388:	cmp	x0, #0x0
  47c38c:	b.eq	47c39c <_obstack_memory_used@@Base+0x1f25c>  // b.none
  47c390:	cmp	x0, #0x400, lsl #12
  47c394:	b.eq	47c3e8 <_obstack_memory_used@@Base+0x1f2a8>  // b.none
  47c398:	b	47c4a4 <_obstack_memory_used@@Base+0x1f364>
  47c39c:	ldr	x0, [sp, #552]
  47c3a0:	and	x0, x0, #0xf
  47c3a4:	cmp	x0, #0x4
  47c3a8:	b.eq	47c4a0 <_obstack_memory_used@@Base+0x1f360>  // b.none
  47c3ac:	ldr	x0, [sp, #552]
  47c3b0:	add	x0, x0, #0x4
  47c3b4:	str	x0, [sp, #144]
  47c3b8:	ldr	x1, [sp, #144]
  47c3bc:	ldr	x0, [sp, #552]
  47c3c0:	cmp	x1, x0
  47c3c4:	cset	w0, cc  // cc = lo, ul, last
  47c3c8:	and	w0, w0, #0xff
  47c3cc:	and	x0, x0, #0xff
  47c3d0:	ldr	x1, [sp, #544]
  47c3d4:	add	x0, x1, x0
  47c3d8:	str	x0, [sp, #544]
  47c3dc:	ldr	x0, [sp, #144]
  47c3e0:	str	x0, [sp, #552]
  47c3e4:	b	47c4a0 <_obstack_memory_used@@Base+0x1f360>
  47c3e8:	ldr	x0, [sp, #648]
  47c3ec:	cmp	x0, #0x0
  47c3f0:	b.ne	47c4a0 <_obstack_memory_used@@Base+0x1f360>  // b.any
  47c3f4:	ldr	x0, [sp, #552]
  47c3f8:	and	x0, x0, #0x7
  47c3fc:	cmp	x0, #0x0
  47c400:	b.eq	47c4a0 <_obstack_memory_used@@Base+0x1f360>  // b.none
  47c404:	ldr	x0, [sp, #552]
  47c408:	add	x0, x0, #0x8
  47c40c:	str	x0, [sp, #152]
  47c410:	ldr	x1, [sp, #152]
  47c414:	ldr	x0, [sp, #552]
  47c418:	cmp	x1, x0
  47c41c:	cset	w0, cc  // cc = lo, ul, last
  47c420:	and	w0, w0, #0xff
  47c424:	and	x0, x0, #0xff
  47c428:	ldr	x1, [sp, #544]
  47c42c:	add	x0, x1, x0
  47c430:	str	x0, [sp, #544]
  47c434:	ldr	x0, [sp, #152]
  47c438:	str	x0, [sp, #552]
  47c43c:	b	47c4a0 <_obstack_memory_used@@Base+0x1f360>
  47c440:	ldr	x0, [sp, #648]
  47c444:	cmp	x0, #0x0
  47c448:	b.eq	47c4a0 <_obstack_memory_used@@Base+0x1f360>  // b.none
  47c44c:	ldr	x0, [sp, #552]
  47c450:	and	x0, x0, #0x7
  47c454:	cmp	x0, #0x0
  47c458:	b.eq	47c4a0 <_obstack_memory_used@@Base+0x1f360>  // b.none
  47c45c:	ldr	x0, [sp, #552]
  47c460:	add	x0, x0, #0x8
  47c464:	str	x0, [sp, #160]
  47c468:	ldr	x1, [sp, #160]
  47c46c:	ldr	x0, [sp, #552]
  47c470:	cmp	x1, x0
  47c474:	cset	w0, cc  // cc = lo, ul, last
  47c478:	and	w0, w0, #0xff
  47c47c:	and	x0, x0, #0xff
  47c480:	ldr	x1, [sp, #544]
  47c484:	add	x0, x1, x0
  47c488:	str	x0, [sp, #544]
  47c48c:	ldr	x0, [sp, #160]
  47c490:	str	x0, [sp, #552]
  47c494:	b	47c4a0 <_obstack_memory_used@@Base+0x1f360>
  47c498:	nop
  47c49c:	b	47c4a4 <_obstack_memory_used@@Base+0x1f364>
  47c4a0:	nop
  47c4a4:	ldr	x0, [sp, #544]
  47c4a8:	and	x0, x0, #0x8000000000000
  47c4ac:	cmp	x0, #0x0
  47c4b0:	b.eq	47c4d4 <_obstack_memory_used@@Base+0x1f394>  // b.none
  47c4b4:	mov	x0, #0x1                   	// #1
  47c4b8:	str	x0, [sp, #640]
  47c4bc:	str	xzr, [sp, #552]
  47c4c0:	str	xzr, [sp, #544]
  47c4c4:	ldr	w0, [sp, #564]
  47c4c8:	orr	w0, w0, #0x10
  47c4cc:	str	w0, [sp, #564]
  47c4d0:	b	47c4fc <_obstack_memory_used@@Base+0x1f3bc>
  47c4d4:	str	xzr, [sp, #640]
  47c4d8:	ldr	x0, [sp, #552]
  47c4dc:	lsr	x1, x0, #3
  47c4e0:	ldr	x0, [sp, #544]
  47c4e4:	lsl	x0, x0, #61
  47c4e8:	orr	x0, x1, x0
  47c4ec:	str	x0, [sp, #552]
  47c4f0:	ldr	x0, [sp, #544]
  47c4f4:	lsr	x0, x0, #3
  47c4f8:	str	x0, [sp, #544]
  47c4fc:	ldr	w0, [sp, #196]
  47c500:	cmp	w0, #0x0
  47c504:	b.eq	47c710 <_obstack_memory_used@@Base+0x1f5d0>  // b.none
  47c508:	ldr	w0, [sp, #564]
  47c50c:	and	w0, w0, #0x10
  47c510:	cmp	w0, #0x0
  47c514:	b.ne	47c528 <_obstack_memory_used@@Base+0x1f3e8>  // b.any
  47c518:	ldr	x0, [sp, #400]
  47c51c:	and	x0, x0, #0x800
  47c520:	cmp	x0, #0x0
  47c524:	b.eq	47c710 <_obstack_memory_used@@Base+0x1f5d0>  // b.none
  47c528:	ldr	w0, [sp, #564]
  47c52c:	orr	w0, w0, #0x8
  47c530:	str	w0, [sp, #564]
  47c534:	b	47c710 <_obstack_memory_used@@Base+0x1f5d0>
  47c538:	str	xzr, [sp, #640]
  47c53c:	ldr	x1, [sp, #544]
  47c540:	ldr	x0, [sp, #552]
  47c544:	orr	x0, x1, x0
  47c548:	cmp	x0, #0x0
  47c54c:	b.eq	47c6c8 <_obstack_memory_used@@Base+0x1f588>  // b.none
  47c550:	mov	x0, #0x1                   	// #1
  47c554:	str	x0, [sp, #552]
  47c558:	str	xzr, [sp, #544]
  47c55c:	ldr	x0, [sp, #552]
  47c560:	and	x0, x0, #0x7
  47c564:	cmp	x0, #0x0
  47c568:	b.eq	47c6b0 <_obstack_memory_used@@Base+0x1f570>  // b.none
  47c56c:	ldr	w0, [sp, #564]
  47c570:	orr	w0, w0, #0x10
  47c574:	str	w0, [sp, #564]
  47c578:	ldr	x0, [sp, #400]
  47c57c:	and	x0, x0, #0xc00000
  47c580:	cmp	x0, #0xc00, lsl #12
  47c584:	b.eq	47c6b8 <_obstack_memory_used@@Base+0x1f578>  // b.none
  47c588:	cmp	x0, #0xc00, lsl #12
  47c58c:	b.hi	47c6bc <_obstack_memory_used@@Base+0x1f57c>  // b.pmore
  47c590:	cmp	x0, #0x800, lsl #12
  47c594:	b.eq	47c658 <_obstack_memory_used@@Base+0x1f518>  // b.none
  47c598:	cmp	x0, #0x800, lsl #12
  47c59c:	b.hi	47c6bc <_obstack_memory_used@@Base+0x1f57c>  // b.pmore
  47c5a0:	cmp	x0, #0x0
  47c5a4:	b.eq	47c5b4 <_obstack_memory_used@@Base+0x1f474>  // b.none
  47c5a8:	cmp	x0, #0x400, lsl #12
  47c5ac:	b.eq	47c600 <_obstack_memory_used@@Base+0x1f4c0>  // b.none
  47c5b0:	b	47c6bc <_obstack_memory_used@@Base+0x1f57c>
  47c5b4:	ldr	x0, [sp, #552]
  47c5b8:	and	x0, x0, #0xf
  47c5bc:	cmp	x0, #0x4
  47c5c0:	b.eq	47c6b8 <_obstack_memory_used@@Base+0x1f578>  // b.none
  47c5c4:	ldr	x0, [sp, #552]
  47c5c8:	add	x0, x0, #0x4
  47c5cc:	str	x0, [sp, #168]
  47c5d0:	ldr	x1, [sp, #168]
  47c5d4:	ldr	x0, [sp, #552]
  47c5d8:	cmp	x1, x0
  47c5dc:	cset	w0, cc  // cc = lo, ul, last
  47c5e0:	and	w0, w0, #0xff
  47c5e4:	and	x0, x0, #0xff
  47c5e8:	ldr	x1, [sp, #544]
  47c5ec:	add	x0, x1, x0
  47c5f0:	str	x0, [sp, #544]
  47c5f4:	ldr	x0, [sp, #168]
  47c5f8:	str	x0, [sp, #552]
  47c5fc:	b	47c6b8 <_obstack_memory_used@@Base+0x1f578>
  47c600:	ldr	x0, [sp, #648]
  47c604:	cmp	x0, #0x0
  47c608:	b.ne	47c6b8 <_obstack_memory_used@@Base+0x1f578>  // b.any
  47c60c:	ldr	x0, [sp, #552]
  47c610:	and	x0, x0, #0x7
  47c614:	cmp	x0, #0x0
  47c618:	b.eq	47c6b8 <_obstack_memory_used@@Base+0x1f578>  // b.none
  47c61c:	ldr	x0, [sp, #552]
  47c620:	add	x0, x0, #0x8
  47c624:	str	x0, [sp, #176]
  47c628:	ldr	x1, [sp, #176]
  47c62c:	ldr	x0, [sp, #552]
  47c630:	cmp	x1, x0
  47c634:	cset	w0, cc  // cc = lo, ul, last
  47c638:	and	w0, w0, #0xff
  47c63c:	and	x0, x0, #0xff
  47c640:	ldr	x1, [sp, #544]
  47c644:	add	x0, x1, x0
  47c648:	str	x0, [sp, #544]
  47c64c:	ldr	x0, [sp, #176]
  47c650:	str	x0, [sp, #552]
  47c654:	b	47c6b8 <_obstack_memory_used@@Base+0x1f578>
  47c658:	ldr	x0, [sp, #648]
  47c65c:	cmp	x0, #0x0
  47c660:	b.eq	47c6b8 <_obstack_memory_used@@Base+0x1f578>  // b.none
  47c664:	ldr	x0, [sp, #552]
  47c668:	and	x0, x0, #0x7
  47c66c:	cmp	x0, #0x0
  47c670:	b.eq	47c6b8 <_obstack_memory_used@@Base+0x1f578>  // b.none
  47c674:	ldr	x0, [sp, #552]
  47c678:	add	x0, x0, #0x8
  47c67c:	str	x0, [sp, #184]
  47c680:	ldr	x1, [sp, #184]
  47c684:	ldr	x0, [sp, #552]
  47c688:	cmp	x1, x0
  47c68c:	cset	w0, cc  // cc = lo, ul, last
  47c690:	and	w0, w0, #0xff
  47c694:	and	x0, x0, #0xff
  47c698:	ldr	x1, [sp, #544]
  47c69c:	add	x0, x1, x0
  47c6a0:	str	x0, [sp, #544]
  47c6a4:	ldr	x0, [sp, #184]
  47c6a8:	str	x0, [sp, #552]
  47c6ac:	b	47c6b8 <_obstack_memory_used@@Base+0x1f578>
  47c6b0:	nop
  47c6b4:	b	47c6bc <_obstack_memory_used@@Base+0x1f57c>
  47c6b8:	nop
  47c6bc:	ldr	x0, [sp, #552]
  47c6c0:	lsr	x0, x0, #3
  47c6c4:	str	x0, [sp, #552]
  47c6c8:	ldr	w0, [sp, #564]
  47c6cc:	orr	w0, w0, #0x8
  47c6d0:	str	w0, [sp, #564]
  47c6d4:	b	47c710 <_obstack_memory_used@@Base+0x1f5d0>
  47c6d8:	str	xzr, [sp, #640]
  47c6dc:	str	xzr, [sp, #552]
  47c6e0:	str	xzr, [sp, #544]
  47c6e4:	b	47c710 <_obstack_memory_used@@Base+0x1f5d0>
  47c6e8:	mov	x0, #0x7fff                	// #32767
  47c6ec:	str	x0, [sp, #640]
  47c6f0:	str	xzr, [sp, #552]
  47c6f4:	str	xzr, [sp, #544]
  47c6f8:	b	47c710 <_obstack_memory_used@@Base+0x1f5d0>
  47c6fc:	mov	x0, #0x7fff                	// #32767
  47c700:	str	x0, [sp, #640]
  47c704:	ldr	x0, [sp, #544]
  47c708:	orr	x0, x0, #0x800000000000
  47c70c:	str	x0, [sp, #544]
  47c710:	nop
  47c714:	ldr	x0, [sp, #552]
  47c718:	str	x0, [sp, #48]
  47c71c:	ldr	x0, [sp, #544]
  47c720:	and	x1, x0, #0xffffffffffff
  47c724:	ldr	x0, [sp, #56]
  47c728:	bfxil	x0, x1, #0, #48
  47c72c:	str	x0, [sp, #56]
  47c730:	ldr	x0, [sp, #640]
  47c734:	and	w0, w0, #0x7fff
  47c738:	and	w1, w0, #0xffff
  47c73c:	ldrh	w0, [sp, #62]
  47c740:	bfxil	w0, w1, #0, #15
  47c744:	strh	w0, [sp, #62]
  47c748:	ldr	x0, [sp, #648]
  47c74c:	and	w0, w0, #0x1
  47c750:	and	w1, w0, #0xff
  47c754:	ldrb	w0, [sp, #63]
  47c758:	bfi	w0, w1, #7, #1
  47c75c:	strb	w0, [sp, #63]
  47c760:	ldr	q0, [sp, #48]
  47c764:	str	q0, [sp, #96]
  47c768:	ldrsw	x0, [sp, #564]
  47c76c:	cmp	x0, #0x0
  47c770:	b.eq	47c77c <_obstack_memory_used@@Base+0x1f63c>  // b.none
  47c774:	ldr	w0, [sp, #564]
  47c778:	bl	47eae8 <_obstack_memory_used@@Base+0x219a8>
  47c77c:	ldr	q0, [sp, #96]
  47c780:	ldp	x29, x30, [sp]
  47c784:	add	sp, sp, #0x290
  47c788:	ret
  47c78c:	stp	x29, x30, [sp, #-176]!
  47c790:	mov	x29, sp
  47c794:	str	q0, [sp, #32]
  47c798:	str	q1, [sp, #16]
  47c79c:	str	wzr, [sp, #160]
  47c7a0:	str	xzr, [sp, #152]
  47c7a4:	mrs	x0, fpcr
  47c7a8:	str	x0, [sp, #152]
  47c7ac:	ldr	q0, [sp, #32]
  47c7b0:	str	q0, [sp, #64]
  47c7b4:	ldr	x0, [sp, #64]
  47c7b8:	str	x0, [sp, #144]
  47c7bc:	ldr	x0, [sp, #72]
  47c7c0:	ubfx	x0, x0, #0, #48
  47c7c4:	str	x0, [sp, #136]
  47c7c8:	ldrh	w0, [sp, #78]
  47c7cc:	ubfx	x0, x0, #0, #15
  47c7d0:	and	w0, w0, #0xffff
  47c7d4:	and	x0, x0, #0xffff
  47c7d8:	str	x0, [sp, #128]
  47c7dc:	ldrb	w0, [sp, #79]
  47c7e0:	ubfx	x0, x0, #7, #1
  47c7e4:	and	w0, w0, #0xff
  47c7e8:	and	x0, x0, #0xff
  47c7ec:	str	x0, [sp, #120]
  47c7f0:	ldr	q0, [sp, #16]
  47c7f4:	str	q0, [sp, #48]
  47c7f8:	ldr	x0, [sp, #48]
  47c7fc:	str	x0, [sp, #112]
  47c800:	ldr	x0, [sp, #56]
  47c804:	ubfx	x0, x0, #0, #48
  47c808:	str	x0, [sp, #104]
  47c80c:	ldrh	w0, [sp, #62]
  47c810:	ubfx	x0, x0, #0, #15
  47c814:	and	w0, w0, #0xffff
  47c818:	and	x0, x0, #0xffff
  47c81c:	str	x0, [sp, #96]
  47c820:	ldrb	w0, [sp, #63]
  47c824:	ubfx	x0, x0, #7, #1
  47c828:	and	w0, w0, #0xff
  47c82c:	and	x0, x0, #0xff
  47c830:	str	x0, [sp, #88]
  47c834:	ldr	x1, [sp, #128]
  47c838:	mov	x0, #0x7fff                	// #32767
  47c83c:	cmp	x1, x0
  47c840:	b.ne	47c858 <_obstack_memory_used@@Base+0x1f718>  // b.any
  47c844:	ldr	x1, [sp, #136]
  47c848:	ldr	x0, [sp, #144]
  47c84c:	orr	x0, x1, x0
  47c850:	cmp	x0, #0x0
  47c854:	b.ne	47c87c <_obstack_memory_used@@Base+0x1f73c>  // b.any
  47c858:	ldr	x1, [sp, #96]
  47c85c:	mov	x0, #0x7fff                	// #32767
  47c860:	cmp	x1, x0
  47c864:	b.ne	47c92c <_obstack_memory_used@@Base+0x1f7ec>  // b.any
  47c868:	ldr	x1, [sp, #104]
  47c86c:	ldr	x0, [sp, #112]
  47c870:	orr	x0, x1, x0
  47c874:	cmp	x0, #0x0
  47c878:	b.eq	47c92c <_obstack_memory_used@@Base+0x1f7ec>  // b.none
  47c87c:	mov	w0, #0x1                   	// #1
  47c880:	str	w0, [sp, #164]
  47c884:	str	wzr, [sp, #168]
  47c888:	ldr	x1, [sp, #128]
  47c88c:	mov	x0, #0x7fff                	// #32767
  47c890:	cmp	x1, x0
  47c894:	b.ne	47c8c4 <_obstack_memory_used@@Base+0x1f784>  // b.any
  47c898:	ldr	x1, [sp, #136]
  47c89c:	ldr	x0, [sp, #144]
  47c8a0:	orr	x0, x1, x0
  47c8a4:	cmp	x0, #0x0
  47c8a8:	b.eq	47c8c4 <_obstack_memory_used@@Base+0x1f784>  // b.none
  47c8ac:	ldr	x0, [sp, #136]
  47c8b0:	and	x0, x0, #0x800000000000
  47c8b4:	cmp	x0, #0x0
  47c8b8:	b.ne	47c8c4 <_obstack_memory_used@@Base+0x1f784>  // b.any
  47c8bc:	mov	w0, #0x1                   	// #1
  47c8c0:	str	w0, [sp, #168]
  47c8c4:	ldr	w0, [sp, #168]
  47c8c8:	cmp	w0, #0x0
  47c8cc:	b.ne	47c91c <_obstack_memory_used@@Base+0x1f7dc>  // b.any
  47c8d0:	str	wzr, [sp, #172]
  47c8d4:	ldr	x1, [sp, #96]
  47c8d8:	mov	x0, #0x7fff                	// #32767
  47c8dc:	cmp	x1, x0
  47c8e0:	b.ne	47c910 <_obstack_memory_used@@Base+0x1f7d0>  // b.any
  47c8e4:	ldr	x1, [sp, #104]
  47c8e8:	ldr	x0, [sp, #112]
  47c8ec:	orr	x0, x1, x0
  47c8f0:	cmp	x0, #0x0
  47c8f4:	b.eq	47c910 <_obstack_memory_used@@Base+0x1f7d0>  // b.none
  47c8f8:	ldr	x0, [sp, #104]
  47c8fc:	and	x0, x0, #0x800000000000
  47c900:	cmp	x0, #0x0
  47c904:	b.ne	47c910 <_obstack_memory_used@@Base+0x1f7d0>  // b.any
  47c908:	mov	w0, #0x1                   	// #1
  47c90c:	str	w0, [sp, #172]
  47c910:	ldr	w0, [sp, #172]
  47c914:	cmp	w0, #0x0
  47c918:	b.eq	47c9a0 <_obstack_memory_used@@Base+0x1f860>  // b.none
  47c91c:	ldr	w0, [sp, #160]
  47c920:	orr	w0, w0, #0x1
  47c924:	str	w0, [sp, #160]
  47c928:	b	47c9a0 <_obstack_memory_used@@Base+0x1f860>
  47c92c:	ldr	x1, [sp, #128]
  47c930:	ldr	x0, [sp, #96]
  47c934:	cmp	x1, x0
  47c938:	b.ne	47c98c <_obstack_memory_used@@Base+0x1f84c>  // b.any
  47c93c:	ldr	x1, [sp, #136]
  47c940:	ldr	x0, [sp, #104]
  47c944:	cmp	x1, x0
  47c948:	b.ne	47c98c <_obstack_memory_used@@Base+0x1f84c>  // b.any
  47c94c:	ldr	x1, [sp, #144]
  47c950:	ldr	x0, [sp, #112]
  47c954:	cmp	x1, x0
  47c958:	b.ne	47c98c <_obstack_memory_used@@Base+0x1f84c>  // b.any
  47c95c:	ldr	x1, [sp, #120]
  47c960:	ldr	x0, [sp, #88]
  47c964:	cmp	x1, x0
  47c968:	b.eq	47c994 <_obstack_memory_used@@Base+0x1f854>  // b.none
  47c96c:	ldr	x0, [sp, #128]
  47c970:	cmp	x0, #0x0
  47c974:	b.ne	47c98c <_obstack_memory_used@@Base+0x1f84c>  // b.any
  47c978:	ldr	x1, [sp, #136]
  47c97c:	ldr	x0, [sp, #144]
  47c980:	orr	x0, x1, x0
  47c984:	cmp	x0, #0x0
  47c988:	b.eq	47c994 <_obstack_memory_used@@Base+0x1f854>  // b.none
  47c98c:	mov	w0, #0x1                   	// #1
  47c990:	b	47c998 <_obstack_memory_used@@Base+0x1f858>
  47c994:	mov	w0, #0x0                   	// #0
  47c998:	str	w0, [sp, #164]
  47c99c:	b	47c9a4 <_obstack_memory_used@@Base+0x1f864>
  47c9a0:	nop
  47c9a4:	ldrsw	x0, [sp, #160]
  47c9a8:	cmp	x0, #0x0
  47c9ac:	b.eq	47c9b8 <_obstack_memory_used@@Base+0x1f878>  // b.none
  47c9b0:	ldr	w0, [sp, #160]
  47c9b4:	bl	47eae8 <_obstack_memory_used@@Base+0x219a8>
  47c9b8:	ldr	w0, [sp, #164]
  47c9bc:	ldp	x29, x30, [sp], #176
  47c9c0:	ret
  47c9c4:	stp	x29, x30, [sp, #-176]!
  47c9c8:	mov	x29, sp
  47c9cc:	str	q0, [sp, #32]
  47c9d0:	str	q1, [sp, #16]
  47c9d4:	str	wzr, [sp, #168]
  47c9d8:	str	xzr, [sp, #160]
  47c9dc:	mrs	x0, fpcr
  47c9e0:	str	x0, [sp, #160]
  47c9e4:	ldr	q0, [sp, #32]
  47c9e8:	str	q0, [sp, #64]
  47c9ec:	ldr	x0, [sp, #64]
  47c9f0:	str	x0, [sp, #152]
  47c9f4:	ldr	x0, [sp, #72]
  47c9f8:	ubfx	x0, x0, #0, #48
  47c9fc:	str	x0, [sp, #144]
  47ca00:	ldrh	w0, [sp, #78]
  47ca04:	ubfx	x0, x0, #0, #15
  47ca08:	and	w0, w0, #0xffff
  47ca0c:	and	x0, x0, #0xffff
  47ca10:	str	x0, [sp, #136]
  47ca14:	ldrb	w0, [sp, #79]
  47ca18:	ubfx	x0, x0, #7, #1
  47ca1c:	and	w0, w0, #0xff
  47ca20:	and	x0, x0, #0xff
  47ca24:	str	x0, [sp, #128]
  47ca28:	ldr	q0, [sp, #16]
  47ca2c:	str	q0, [sp, #48]
  47ca30:	ldr	x0, [sp, #48]
  47ca34:	str	x0, [sp, #120]
  47ca38:	ldr	x0, [sp, #56]
  47ca3c:	ubfx	x0, x0, #0, #48
  47ca40:	str	x0, [sp, #112]
  47ca44:	ldrh	w0, [sp, #62]
  47ca48:	ubfx	x0, x0, #0, #15
  47ca4c:	and	w0, w0, #0xffff
  47ca50:	and	x0, x0, #0xffff
  47ca54:	str	x0, [sp, #104]
  47ca58:	ldrb	w0, [sp, #63]
  47ca5c:	ubfx	x0, x0, #7, #1
  47ca60:	and	w0, w0, #0xff
  47ca64:	and	x0, x0, #0xff
  47ca68:	str	x0, [sp, #96]
  47ca6c:	ldr	x1, [sp, #136]
  47ca70:	mov	x0, #0x7fff                	// #32767
  47ca74:	cmp	x1, x0
  47ca78:	b.ne	47ca90 <_obstack_memory_used@@Base+0x1f950>  // b.any
  47ca7c:	ldr	x1, [sp, #144]
  47ca80:	ldr	x0, [sp, #152]
  47ca84:	orr	x0, x1, x0
  47ca88:	cmp	x0, #0x0
  47ca8c:	b.ne	47cab4 <_obstack_memory_used@@Base+0x1f974>  // b.any
  47ca90:	ldr	x1, [sp, #104]
  47ca94:	mov	x0, #0x7fff                	// #32767
  47ca98:	cmp	x1, x0
  47ca9c:	b.ne	47cacc <_obstack_memory_used@@Base+0x1f98c>  // b.any
  47caa0:	ldr	x1, [sp, #112]
  47caa4:	ldr	x0, [sp, #120]
  47caa8:	orr	x0, x1, x0
  47caac:	cmp	x0, #0x0
  47cab0:	b.eq	47cacc <_obstack_memory_used@@Base+0x1f98c>  // b.none
  47cab4:	mov	w0, #0xfffffffe            	// #-2
  47cab8:	str	w0, [sp, #172]
  47cabc:	ldr	w0, [sp, #168]
  47cac0:	orr	w0, w0, #0x1
  47cac4:	str	w0, [sp, #168]
  47cac8:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cacc:	ldr	x0, [sp, #136]
  47cad0:	cmp	x0, #0x0
  47cad4:	b.ne	47caf4 <_obstack_memory_used@@Base+0x1f9b4>  // b.any
  47cad8:	ldr	x1, [sp, #144]
  47cadc:	ldr	x0, [sp, #152]
  47cae0:	orr	x0, x1, x0
  47cae4:	cmp	x0, #0x0
  47cae8:	b.ne	47caf4 <_obstack_memory_used@@Base+0x1f9b4>  // b.any
  47caec:	mov	w0, #0x1                   	// #1
  47caf0:	b	47caf8 <_obstack_memory_used@@Base+0x1f9b8>
  47caf4:	mov	w0, #0x0                   	// #0
  47caf8:	str	w0, [sp, #92]
  47cafc:	ldr	x0, [sp, #104]
  47cb00:	cmp	x0, #0x0
  47cb04:	b.ne	47cb24 <_obstack_memory_used@@Base+0x1f9e4>  // b.any
  47cb08:	ldr	x1, [sp, #112]
  47cb0c:	ldr	x0, [sp, #120]
  47cb10:	orr	x0, x1, x0
  47cb14:	cmp	x0, #0x0
  47cb18:	b.ne	47cb24 <_obstack_memory_used@@Base+0x1f9e4>  // b.any
  47cb1c:	mov	w0, #0x1                   	// #1
  47cb20:	b	47cb28 <_obstack_memory_used@@Base+0x1f9e8>
  47cb24:	mov	w0, #0x0                   	// #0
  47cb28:	str	w0, [sp, #88]
  47cb2c:	ldr	w0, [sp, #92]
  47cb30:	cmp	w0, #0x0
  47cb34:	b.eq	47cb4c <_obstack_memory_used@@Base+0x1fa0c>  // b.none
  47cb38:	ldr	w0, [sp, #88]
  47cb3c:	cmp	w0, #0x0
  47cb40:	b.eq	47cb4c <_obstack_memory_used@@Base+0x1fa0c>  // b.none
  47cb44:	str	wzr, [sp, #172]
  47cb48:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cb4c:	ldr	w0, [sp, #92]
  47cb50:	cmp	w0, #0x0
  47cb54:	b.eq	47cb78 <_obstack_memory_used@@Base+0x1fa38>  // b.none
  47cb58:	ldr	x0, [sp, #96]
  47cb5c:	cmp	x0, #0x0
  47cb60:	b.eq	47cb6c <_obstack_memory_used@@Base+0x1fa2c>  // b.none
  47cb64:	mov	w0, #0x1                   	// #1
  47cb68:	b	47cb70 <_obstack_memory_used@@Base+0x1fa30>
  47cb6c:	mov	w0, #0xffffffff            	// #-1
  47cb70:	str	w0, [sp, #172]
  47cb74:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cb78:	ldr	w0, [sp, #88]
  47cb7c:	cmp	w0, #0x0
  47cb80:	b.eq	47cba4 <_obstack_memory_used@@Base+0x1fa64>  // b.none
  47cb84:	ldr	x0, [sp, #128]
  47cb88:	cmp	x0, #0x0
  47cb8c:	b.eq	47cb98 <_obstack_memory_used@@Base+0x1fa58>  // b.none
  47cb90:	mov	w0, #0xffffffff            	// #-1
  47cb94:	b	47cb9c <_obstack_memory_used@@Base+0x1fa5c>
  47cb98:	mov	w0, #0x1                   	// #1
  47cb9c:	str	w0, [sp, #172]
  47cba0:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cba4:	ldr	x1, [sp, #128]
  47cba8:	ldr	x0, [sp, #96]
  47cbac:	cmp	x1, x0
  47cbb0:	b.eq	47cbd4 <_obstack_memory_used@@Base+0x1fa94>  // b.none
  47cbb4:	ldr	x0, [sp, #128]
  47cbb8:	cmp	x0, #0x0
  47cbbc:	b.eq	47cbc8 <_obstack_memory_used@@Base+0x1fa88>  // b.none
  47cbc0:	mov	w0, #0xffffffff            	// #-1
  47cbc4:	b	47cbcc <_obstack_memory_used@@Base+0x1fa8c>
  47cbc8:	mov	w0, #0x1                   	// #1
  47cbcc:	str	w0, [sp, #172]
  47cbd0:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cbd4:	ldr	x1, [sp, #136]
  47cbd8:	ldr	x0, [sp, #104]
  47cbdc:	cmp	x1, x0
  47cbe0:	b.le	47cc04 <_obstack_memory_used@@Base+0x1fac4>
  47cbe4:	ldr	x0, [sp, #128]
  47cbe8:	cmp	x0, #0x0
  47cbec:	b.eq	47cbf8 <_obstack_memory_used@@Base+0x1fab8>  // b.none
  47cbf0:	mov	w0, #0xffffffff            	// #-1
  47cbf4:	b	47cbfc <_obstack_memory_used@@Base+0x1fabc>
  47cbf8:	mov	w0, #0x1                   	// #1
  47cbfc:	str	w0, [sp, #172]
  47cc00:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cc04:	ldr	x1, [sp, #136]
  47cc08:	ldr	x0, [sp, #104]
  47cc0c:	cmp	x1, x0
  47cc10:	b.ge	47cc34 <_obstack_memory_used@@Base+0x1faf4>  // b.tcont
  47cc14:	ldr	x0, [sp, #128]
  47cc18:	cmp	x0, #0x0
  47cc1c:	b.eq	47cc28 <_obstack_memory_used@@Base+0x1fae8>  // b.none
  47cc20:	mov	w0, #0x1                   	// #1
  47cc24:	b	47cc2c <_obstack_memory_used@@Base+0x1faec>
  47cc28:	mov	w0, #0xffffffff            	// #-1
  47cc2c:	str	w0, [sp, #172]
  47cc30:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cc34:	ldr	x1, [sp, #144]
  47cc38:	ldr	x0, [sp, #112]
  47cc3c:	cmp	x1, x0
  47cc40:	b.hi	47cc64 <_obstack_memory_used@@Base+0x1fb24>  // b.pmore
  47cc44:	ldr	x1, [sp, #144]
  47cc48:	ldr	x0, [sp, #112]
  47cc4c:	cmp	x1, x0
  47cc50:	b.ne	47cc84 <_obstack_memory_used@@Base+0x1fb44>  // b.any
  47cc54:	ldr	x1, [sp, #152]
  47cc58:	ldr	x0, [sp, #120]
  47cc5c:	cmp	x1, x0
  47cc60:	b.ls	47cc84 <_obstack_memory_used@@Base+0x1fb44>  // b.plast
  47cc64:	ldr	x0, [sp, #128]
  47cc68:	cmp	x0, #0x0
  47cc6c:	b.eq	47cc78 <_obstack_memory_used@@Base+0x1fb38>  // b.none
  47cc70:	mov	w0, #0xffffffff            	// #-1
  47cc74:	b	47cc7c <_obstack_memory_used@@Base+0x1fb3c>
  47cc78:	mov	w0, #0x1                   	// #1
  47cc7c:	str	w0, [sp, #172]
  47cc80:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47cc84:	ldr	x1, [sp, #112]
  47cc88:	ldr	x0, [sp, #144]
  47cc8c:	cmp	x1, x0
  47cc90:	b.hi	47ccb4 <_obstack_memory_used@@Base+0x1fb74>  // b.pmore
  47cc94:	ldr	x1, [sp, #112]
  47cc98:	ldr	x0, [sp, #144]
  47cc9c:	cmp	x1, x0
  47cca0:	b.ne	47ccd4 <_obstack_memory_used@@Base+0x1fb94>  // b.any
  47cca4:	ldr	x1, [sp, #120]
  47cca8:	ldr	x0, [sp, #152]
  47ccac:	cmp	x1, x0
  47ccb0:	b.ls	47ccd4 <_obstack_memory_used@@Base+0x1fb94>  // b.plast
  47ccb4:	ldr	x0, [sp, #128]
  47ccb8:	cmp	x0, #0x0
  47ccbc:	b.eq	47ccc8 <_obstack_memory_used@@Base+0x1fb88>  // b.none
  47ccc0:	mov	w0, #0x1                   	// #1
  47ccc4:	b	47cccc <_obstack_memory_used@@Base+0x1fb8c>
  47ccc8:	mov	w0, #0xffffffff            	// #-1
  47cccc:	str	w0, [sp, #172]
  47ccd0:	b	47ccd8 <_obstack_memory_used@@Base+0x1fb98>
  47ccd4:	str	wzr, [sp, #172]
  47ccd8:	ldrsw	x0, [sp, #168]
  47ccdc:	cmp	x0, #0x0
  47cce0:	b.eq	47ccec <_obstack_memory_used@@Base+0x1fbac>  // b.none
  47cce4:	ldr	w0, [sp, #168]
  47cce8:	bl	47eae8 <_obstack_memory_used@@Base+0x219a8>
  47ccec:	ldr	w0, [sp, #172]
  47ccf0:	ldp	x29, x30, [sp], #176
  47ccf4:	ret
  47ccf8:	stp	x29, x30, [sp, #-176]!
  47ccfc:	mov	x29, sp
  47cd00:	str	q0, [sp, #32]
  47cd04:	str	q1, [sp, #16]
  47cd08:	str	wzr, [sp, #168]
  47cd0c:	str	xzr, [sp, #160]
  47cd10:	mrs	x0, fpcr
  47cd14:	str	x0, [sp, #160]
  47cd18:	ldr	q0, [sp, #32]
  47cd1c:	str	q0, [sp, #64]
  47cd20:	ldr	x0, [sp, #64]
  47cd24:	str	x0, [sp, #152]
  47cd28:	ldr	x0, [sp, #72]
  47cd2c:	ubfx	x0, x0, #0, #48
  47cd30:	str	x0, [sp, #144]
  47cd34:	ldrh	w0, [sp, #78]
  47cd38:	ubfx	x0, x0, #0, #15
  47cd3c:	and	w0, w0, #0xffff
  47cd40:	and	x0, x0, #0xffff
  47cd44:	str	x0, [sp, #136]
  47cd48:	ldrb	w0, [sp, #79]
  47cd4c:	ubfx	x0, x0, #7, #1
  47cd50:	and	w0, w0, #0xff
  47cd54:	and	x0, x0, #0xff
  47cd58:	str	x0, [sp, #128]
  47cd5c:	ldr	q0, [sp, #16]
  47cd60:	str	q0, [sp, #48]
  47cd64:	ldr	x0, [sp, #48]
  47cd68:	str	x0, [sp, #120]
  47cd6c:	ldr	x0, [sp, #56]
  47cd70:	ubfx	x0, x0, #0, #48
  47cd74:	str	x0, [sp, #112]
  47cd78:	ldrh	w0, [sp, #62]
  47cd7c:	ubfx	x0, x0, #0, #15
  47cd80:	and	w0, w0, #0xffff
  47cd84:	and	x0, x0, #0xffff
  47cd88:	str	x0, [sp, #104]
  47cd8c:	ldrb	w0, [sp, #63]
  47cd90:	ubfx	x0, x0, #7, #1
  47cd94:	and	w0, w0, #0xff
  47cd98:	and	x0, x0, #0xff
  47cd9c:	str	x0, [sp, #96]
  47cda0:	ldr	x1, [sp, #136]
  47cda4:	mov	x0, #0x7fff                	// #32767
  47cda8:	cmp	x1, x0
  47cdac:	b.ne	47cdc4 <_obstack_memory_used@@Base+0x1fc84>  // b.any
  47cdb0:	ldr	x1, [sp, #144]
  47cdb4:	ldr	x0, [sp, #152]
  47cdb8:	orr	x0, x1, x0
  47cdbc:	cmp	x0, #0x0
  47cdc0:	b.ne	47cde8 <_obstack_memory_used@@Base+0x1fca8>  // b.any
  47cdc4:	ldr	x1, [sp, #104]
  47cdc8:	mov	x0, #0x7fff                	// #32767
  47cdcc:	cmp	x1, x0
  47cdd0:	b.ne	47ce00 <_obstack_memory_used@@Base+0x1fcc0>  // b.any
  47cdd4:	ldr	x1, [sp, #112]
  47cdd8:	ldr	x0, [sp, #120]
  47cddc:	orr	x0, x1, x0
  47cde0:	cmp	x0, #0x0
  47cde4:	b.eq	47ce00 <_obstack_memory_used@@Base+0x1fcc0>  // b.none
  47cde8:	mov	w0, #0x2                   	// #2
  47cdec:	str	w0, [sp, #172]
  47cdf0:	ldr	w0, [sp, #168]
  47cdf4:	orr	w0, w0, #0x1
  47cdf8:	str	w0, [sp, #168]
  47cdfc:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47ce00:	ldr	x0, [sp, #136]
  47ce04:	cmp	x0, #0x0
  47ce08:	b.ne	47ce28 <_obstack_memory_used@@Base+0x1fce8>  // b.any
  47ce0c:	ldr	x1, [sp, #144]
  47ce10:	ldr	x0, [sp, #152]
  47ce14:	orr	x0, x1, x0
  47ce18:	cmp	x0, #0x0
  47ce1c:	b.ne	47ce28 <_obstack_memory_used@@Base+0x1fce8>  // b.any
  47ce20:	mov	w0, #0x1                   	// #1
  47ce24:	b	47ce2c <_obstack_memory_used@@Base+0x1fcec>
  47ce28:	mov	w0, #0x0                   	// #0
  47ce2c:	str	w0, [sp, #92]
  47ce30:	ldr	x0, [sp, #104]
  47ce34:	cmp	x0, #0x0
  47ce38:	b.ne	47ce58 <_obstack_memory_used@@Base+0x1fd18>  // b.any
  47ce3c:	ldr	x1, [sp, #112]
  47ce40:	ldr	x0, [sp, #120]
  47ce44:	orr	x0, x1, x0
  47ce48:	cmp	x0, #0x0
  47ce4c:	b.ne	47ce58 <_obstack_memory_used@@Base+0x1fd18>  // b.any
  47ce50:	mov	w0, #0x1                   	// #1
  47ce54:	b	47ce5c <_obstack_memory_used@@Base+0x1fd1c>
  47ce58:	mov	w0, #0x0                   	// #0
  47ce5c:	str	w0, [sp, #88]
  47ce60:	ldr	w0, [sp, #92]
  47ce64:	cmp	w0, #0x0
  47ce68:	b.eq	47ce80 <_obstack_memory_used@@Base+0x1fd40>  // b.none
  47ce6c:	ldr	w0, [sp, #88]
  47ce70:	cmp	w0, #0x0
  47ce74:	b.eq	47ce80 <_obstack_memory_used@@Base+0x1fd40>  // b.none
  47ce78:	str	wzr, [sp, #172]
  47ce7c:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47ce80:	ldr	w0, [sp, #92]
  47ce84:	cmp	w0, #0x0
  47ce88:	b.eq	47ceac <_obstack_memory_used@@Base+0x1fd6c>  // b.none
  47ce8c:	ldr	x0, [sp, #96]
  47ce90:	cmp	x0, #0x0
  47ce94:	b.eq	47cea0 <_obstack_memory_used@@Base+0x1fd60>  // b.none
  47ce98:	mov	w0, #0x1                   	// #1
  47ce9c:	b	47cea4 <_obstack_memory_used@@Base+0x1fd64>
  47cea0:	mov	w0, #0xffffffff            	// #-1
  47cea4:	str	w0, [sp, #172]
  47cea8:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47ceac:	ldr	w0, [sp, #88]
  47ceb0:	cmp	w0, #0x0
  47ceb4:	b.eq	47ced8 <_obstack_memory_used@@Base+0x1fd98>  // b.none
  47ceb8:	ldr	x0, [sp, #128]
  47cebc:	cmp	x0, #0x0
  47cec0:	b.eq	47cecc <_obstack_memory_used@@Base+0x1fd8c>  // b.none
  47cec4:	mov	w0, #0xffffffff            	// #-1
  47cec8:	b	47ced0 <_obstack_memory_used@@Base+0x1fd90>
  47cecc:	mov	w0, #0x1                   	// #1
  47ced0:	str	w0, [sp, #172]
  47ced4:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47ced8:	ldr	x1, [sp, #128]
  47cedc:	ldr	x0, [sp, #96]
  47cee0:	cmp	x1, x0
  47cee4:	b.eq	47cf08 <_obstack_memory_used@@Base+0x1fdc8>  // b.none
  47cee8:	ldr	x0, [sp, #128]
  47ceec:	cmp	x0, #0x0
  47cef0:	b.eq	47cefc <_obstack_memory_used@@Base+0x1fdbc>  // b.none
  47cef4:	mov	w0, #0xffffffff            	// #-1
  47cef8:	b	47cf00 <_obstack_memory_used@@Base+0x1fdc0>
  47cefc:	mov	w0, #0x1                   	// #1
  47cf00:	str	w0, [sp, #172]
  47cf04:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47cf08:	ldr	x1, [sp, #136]
  47cf0c:	ldr	x0, [sp, #104]
  47cf10:	cmp	x1, x0
  47cf14:	b.le	47cf38 <_obstack_memory_used@@Base+0x1fdf8>
  47cf18:	ldr	x0, [sp, #128]
  47cf1c:	cmp	x0, #0x0
  47cf20:	b.eq	47cf2c <_obstack_memory_used@@Base+0x1fdec>  // b.none
  47cf24:	mov	w0, #0xffffffff            	// #-1
  47cf28:	b	47cf30 <_obstack_memory_used@@Base+0x1fdf0>
  47cf2c:	mov	w0, #0x1                   	// #1
  47cf30:	str	w0, [sp, #172]
  47cf34:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47cf38:	ldr	x1, [sp, #136]
  47cf3c:	ldr	x0, [sp, #104]
  47cf40:	cmp	x1, x0
  47cf44:	b.ge	47cf68 <_obstack_memory_used@@Base+0x1fe28>  // b.tcont
  47cf48:	ldr	x0, [sp, #128]
  47cf4c:	cmp	x0, #0x0
  47cf50:	b.eq	47cf5c <_obstack_memory_used@@Base+0x1fe1c>  // b.none
  47cf54:	mov	w0, #0x1                   	// #1
  47cf58:	b	47cf60 <_obstack_memory_used@@Base+0x1fe20>
  47cf5c:	mov	w0, #0xffffffff            	// #-1
  47cf60:	str	w0, [sp, #172]
  47cf64:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47cf68:	ldr	x1, [sp, #144]
  47cf6c:	ldr	x0, [sp, #112]
  47cf70:	cmp	x1, x0
  47cf74:	b.hi	47cf98 <_obstack_memory_used@@Base+0x1fe58>  // b.pmore
  47cf78:	ldr	x1, [sp, #144]
  47cf7c:	ldr	x0, [sp, #112]
  47cf80:	cmp	x1, x0
  47cf84:	b.ne	47cfb8 <_obstack_memory_used@@Base+0x1fe78>  // b.any
  47cf88:	ldr	x1, [sp, #152]
  47cf8c:	ldr	x0, [sp, #120]
  47cf90:	cmp	x1, x0
  47cf94:	b.ls	47cfb8 <_obstack_memory_used@@Base+0x1fe78>  // b.plast
  47cf98:	ldr	x0, [sp, #128]
  47cf9c:	cmp	x0, #0x0
  47cfa0:	b.eq	47cfac <_obstack_memory_used@@Base+0x1fe6c>  // b.none
  47cfa4:	mov	w0, #0xffffffff            	// #-1
  47cfa8:	b	47cfb0 <_obstack_memory_used@@Base+0x1fe70>
  47cfac:	mov	w0, #0x1                   	// #1
  47cfb0:	str	w0, [sp, #172]
  47cfb4:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47cfb8:	ldr	x1, [sp, #112]
  47cfbc:	ldr	x0, [sp, #144]
  47cfc0:	cmp	x1, x0
  47cfc4:	b.hi	47cfe8 <_obstack_memory_used@@Base+0x1fea8>  // b.pmore
  47cfc8:	ldr	x1, [sp, #112]
  47cfcc:	ldr	x0, [sp, #144]
  47cfd0:	cmp	x1, x0
  47cfd4:	b.ne	47d008 <_obstack_memory_used@@Base+0x1fec8>  // b.any
  47cfd8:	ldr	x1, [sp, #120]
  47cfdc:	ldr	x0, [sp, #152]
  47cfe0:	cmp	x1, x0
  47cfe4:	b.ls	47d008 <_obstack_memory_used@@Base+0x1fec8>  // b.plast
  47cfe8:	ldr	x0, [sp, #128]
  47cfec:	cmp	x0, #0x0
  47cff0:	b.eq	47cffc <_obstack_memory_used@@Base+0x1febc>  // b.none
  47cff4:	mov	w0, #0x1                   	// #1
  47cff8:	b	47d000 <_obstack_memory_used@@Base+0x1fec0>
  47cffc:	mov	w0, #0xffffffff            	// #-1
  47d000:	str	w0, [sp, #172]
  47d004:	b	47d00c <_obstack_memory_used@@Base+0x1fecc>
  47d008:	str	wzr, [sp, #172]
  47d00c:	ldrsw	x0, [sp, #168]
  47d010:	cmp	x0, #0x0
  47d014:	b.eq	47d020 <_obstack_memory_used@@Base+0x1fee0>  // b.none
  47d018:	ldr	w0, [sp, #168]
  47d01c:	bl	47eae8 <_obstack_memory_used@@Base+0x219a8>
  47d020:	ldr	w0, [sp, #172]
  47d024:	ldp	x29, x30, [sp], #176
  47d028:	ret
  47d02c:	sub	sp, sp, #0x2a0
  47d030:	stp	x29, x30, [sp]
  47d034:	mov	x29, sp
  47d038:	str	q0, [sp, #32]
  47d03c:	str	q1, [sp, #16]
  47d040:	str	wzr, [sp, #596]
  47d044:	str	xzr, [sp, #488]
  47d048:	mrs	x0, fpcr
  47d04c:	str	x0, [sp, #488]
  47d050:	ldr	q0, [sp, #32]
  47d054:	str	q0, [sp, #112]
  47d058:	ldr	x0, [sp, #112]
  47d05c:	str	x0, [sp, #608]
  47d060:	ldr	x0, [sp, #120]
  47d064:	ubfx	x0, x0, #0, #48
  47d068:	str	x0, [sp, #616]
  47d06c:	ldrh	w0, [sp, #126]
  47d070:	ubfx	x0, x0, #0, #15
  47d074:	and	w0, w0, #0xffff
  47d078:	and	x0, x0, #0xffff
  47d07c:	str	x0, [sp, #600]
  47d080:	ldrb	w0, [sp, #127]
  47d084:	ubfx	x0, x0, #7, #1
  47d088:	and	w0, w0, #0xff
  47d08c:	and	x0, x0, #0xff
  47d090:	str	x0, [sp, #480]
  47d094:	ldr	x0, [sp, #600]
  47d098:	cmp	x0, #0x0
  47d09c:	b.eq	47d0f8 <_obstack_memory_used@@Base+0x1ffb8>  // b.none
  47d0a0:	ldr	x1, [sp, #600]
  47d0a4:	mov	x0, #0x7fff                	// #32767
  47d0a8:	cmp	x1, x0
  47d0ac:	b.eq	47d1ec <_obstack_memory_used@@Base+0x200ac>  // b.none
  47d0b0:	ldr	x0, [sp, #616]
  47d0b4:	orr	x0, x0, #0x1000000000000
  47d0b8:	str	x0, [sp, #616]
  47d0bc:	ldr	x0, [sp, #616]
  47d0c0:	lsl	x1, x0, #3
  47d0c4:	ldr	x0, [sp, #608]
  47d0c8:	lsr	x0, x0, #61
  47d0cc:	orr	x0, x1, x0
  47d0d0:	str	x0, [sp, #616]
  47d0d4:	ldr	x0, [sp, #608]
  47d0d8:	lsl	x0, x0, #3
  47d0dc:	str	x0, [sp, #608]
  47d0e0:	ldr	x1, [sp, #600]
  47d0e4:	mov	x0, #0xffffffffffffc001    	// #-16383
  47d0e8:	add	x0, x1, x0
  47d0ec:	str	x0, [sp, #600]
  47d0f0:	str	xzr, [sp, #584]
  47d0f4:	b	47d230 <_obstack_memory_used@@Base+0x200f0>
  47d0f8:	ldr	x1, [sp, #616]
  47d0fc:	ldr	x0, [sp, #608]
  47d100:	orr	x0, x1, x0
  47d104:	cmp	x0, #0x0
  47d108:	b.ne	47d118 <_obstack_memory_used@@Base+0x1ffd8>  // b.any
  47d10c:	mov	x0, #0x1                   	// #1
  47d110:	str	x0, [sp, #584]
  47d114:	b	47d230 <_obstack_memory_used@@Base+0x200f0>
  47d118:	ldr	x0, [sp, #616]
  47d11c:	cmp	x0, #0x0
  47d120:	b.eq	47d138 <_obstack_memory_used@@Base+0x1fff8>  // b.none
  47d124:	ldr	x0, [sp, #616]
  47d128:	clz	x0, x0
  47d12c:	sxtw	x0, w0
  47d130:	str	x0, [sp, #552]
  47d134:	b	47d154 <_obstack_memory_used@@Base+0x20014>
  47d138:	ldr	x0, [sp, #608]
  47d13c:	clz	x0, x0
  47d140:	sxtw	x0, w0
  47d144:	str	x0, [sp, #552]
  47d148:	ldr	x0, [sp, #552]
  47d14c:	add	x0, x0, #0x40
  47d150:	str	x0, [sp, #552]
  47d154:	ldr	x0, [sp, #552]
  47d158:	sub	x0, x0, #0xf
  47d15c:	str	x0, [sp, #552]
  47d160:	ldr	x0, [sp, #552]
  47d164:	cmp	x0, #0x3c
  47d168:	b.gt	47d1b4 <_obstack_memory_used@@Base+0x20074>
  47d16c:	ldr	x0, [sp, #552]
  47d170:	add	w0, w0, #0x3
  47d174:	ldr	x1, [sp, #616]
  47d178:	lsl	x1, x1, x0
  47d17c:	ldr	x0, [sp, #552]
  47d180:	mov	w2, w0
  47d184:	mov	w0, #0x3d                  	// #61
  47d188:	sub	w0, w0, w2
  47d18c:	ldr	x2, [sp, #608]
  47d190:	lsr	x0, x2, x0
  47d194:	orr	x0, x1, x0
  47d198:	str	x0, [sp, #616]
  47d19c:	ldr	x0, [sp, #552]
  47d1a0:	add	w0, w0, #0x3
  47d1a4:	ldr	x1, [sp, #608]
  47d1a8:	lsl	x0, x1, x0
  47d1ac:	str	x0, [sp, #608]
  47d1b0:	b	47d1cc <_obstack_memory_used@@Base+0x2008c>
  47d1b4:	ldr	x0, [sp, #552]
  47d1b8:	sub	w0, w0, #0x3d
  47d1bc:	ldr	x1, [sp, #608]
  47d1c0:	lsl	x0, x1, x0
  47d1c4:	str	x0, [sp, #616]
  47d1c8:	str	xzr, [sp, #608]
  47d1cc:	ldr	x1, [sp, #552]
  47d1d0:	mov	x0, #0x3ffe                	// #16382
  47d1d4:	add	x0, x1, x0
  47d1d8:	ldr	x1, [sp, #600]
  47d1dc:	sub	x0, x1, x0
  47d1e0:	str	x0, [sp, #600]
  47d1e4:	str	xzr, [sp, #584]
  47d1e8:	b	47d230 <_obstack_memory_used@@Base+0x200f0>
  47d1ec:	ldr	x1, [sp, #616]
  47d1f0:	ldr	x0, [sp, #608]
  47d1f4:	orr	x0, x1, x0
  47d1f8:	cmp	x0, #0x0
  47d1fc:	b.ne	47d20c <_obstack_memory_used@@Base+0x200cc>  // b.any
  47d200:	mov	x0, #0x2                   	// #2
  47d204:	str	x0, [sp, #584]
  47d208:	b	47d230 <_obstack_memory_used@@Base+0x200f0>
  47d20c:	mov	x0, #0x3                   	// #3
  47d210:	str	x0, [sp, #584]
  47d214:	ldr	x0, [sp, #616]
  47d218:	and	x0, x0, #0x800000000000
  47d21c:	cmp	x0, #0x0
  47d220:	b.ne	47d230 <_obstack_memory_used@@Base+0x200f0>  // b.any
  47d224:	ldr	w0, [sp, #596]
  47d228:	orr	w0, w0, #0x1
  47d22c:	str	w0, [sp, #596]
  47d230:	nop
  47d234:	ldr	q0, [sp, #16]
  47d238:	str	q0, [sp, #96]
  47d23c:	ldr	x0, [sp, #96]
  47d240:	str	x0, [sp, #640]
  47d244:	ldr	x0, [sp, #104]
  47d248:	ubfx	x0, x0, #0, #48
  47d24c:	str	x0, [sp, #648]
  47d250:	ldrh	w0, [sp, #110]
  47d254:	ubfx	x0, x0, #0, #15
  47d258:	and	w0, w0, #0xffff
  47d25c:	and	x0, x0, #0xffff
  47d260:	str	x0, [sp, #624]
  47d264:	ldrb	w0, [sp, #111]
  47d268:	ubfx	x0, x0, #7, #1
  47d26c:	and	w0, w0, #0xff
  47d270:	and	x0, x0, #0xff
  47d274:	str	x0, [sp, #472]
  47d278:	ldr	x0, [sp, #624]
  47d27c:	cmp	x0, #0x0
  47d280:	b.eq	47d2dc <_obstack_memory_used@@Base+0x2019c>  // b.none
  47d284:	ldr	x1, [sp, #624]
  47d288:	mov	x0, #0x7fff                	// #32767
  47d28c:	cmp	x1, x0
  47d290:	b.eq	47d3d0 <_obstack_memory_used@@Base+0x20290>  // b.none
  47d294:	ldr	x0, [sp, #648]
  47d298:	orr	x0, x0, #0x1000000000000
  47d29c:	str	x0, [sp, #648]
  47d2a0:	ldr	x0, [sp, #648]
  47d2a4:	lsl	x1, x0, #3
  47d2a8:	ldr	x0, [sp, #640]
  47d2ac:	lsr	x0, x0, #61
  47d2b0:	orr	x0, x1, x0
  47d2b4:	str	x0, [sp, #648]
  47d2b8:	ldr	x0, [sp, #640]
  47d2bc:	lsl	x0, x0, #3
  47d2c0:	str	x0, [sp, #640]
  47d2c4:	ldr	x1, [sp, #624]
  47d2c8:	mov	x0, #0xffffffffffffc001    	// #-16383
  47d2cc:	add	x0, x1, x0
  47d2d0:	str	x0, [sp, #624]
  47d2d4:	str	xzr, [sp, #632]
  47d2d8:	b	47d414 <_obstack_memory_used@@Base+0x202d4>
  47d2dc:	ldr	x1, [sp, #648]
  47d2e0:	ldr	x0, [sp, #640]
  47d2e4:	orr	x0, x1, x0
  47d2e8:	cmp	x0, #0x0
  47d2ec:	b.ne	47d2fc <_obstack_memory_used@@Base+0x201bc>  // b.any
  47d2f0:	mov	x0, #0x1                   	// #1
  47d2f4:	str	x0, [sp, #632]
  47d2f8:	b	47d414 <_obstack_memory_used@@Base+0x202d4>
  47d2fc:	ldr	x0, [sp, #648]
  47d300:	cmp	x0, #0x0
  47d304:	b.eq	47d31c <_obstack_memory_used@@Base+0x201dc>  // b.none
  47d308:	ldr	x0, [sp, #648]
  47d30c:	clz	x0, x0
  47d310:	sxtw	x0, w0
  47d314:	str	x0, [sp, #544]
  47d318:	b	47d338 <_obstack_memory_used@@Base+0x201f8>
  47d31c:	ldr	x0, [sp, #640]
  47d320:	clz	x0, x0
  47d324:	sxtw	x0, w0
  47d328:	str	x0, [sp, #544]
  47d32c:	ldr	x0, [sp, #544]
  47d330:	add	x0, x0, #0x40
  47d334:	str	x0, [sp, #544]
  47d338:	ldr	x0, [sp, #544]
  47d33c:	sub	x0, x0, #0xf
  47d340:	str	x0, [sp, #544]
  47d344:	ldr	x0, [sp, #544]
  47d348:	cmp	x0, #0x3c
  47d34c:	b.gt	47d398 <_obstack_memory_used@@Base+0x20258>
  47d350:	ldr	x0, [sp, #544]
  47d354:	add	w0, w0, #0x3
  47d358:	ldr	x1, [sp, #648]
  47d35c:	lsl	x1, x1, x0
  47d360:	ldr	x0, [sp, #544]
  47d364:	mov	w2, w0
  47d368:	mov	w0, #0x3d                  	// #61
  47d36c:	sub	w0, w0, w2
  47d370:	ldr	x2, [sp, #640]
  47d374:	lsr	x0, x2, x0
  47d378:	orr	x0, x1, x0
  47d37c:	str	x0, [sp, #648]
  47d380:	ldr	x0, [sp, #544]
  47d384:	add	w0, w0, #0x3
  47d388:	ldr	x1, [sp, #640]
  47d38c:	lsl	x0, x1, x0
  47d390:	str	x0, [sp, #640]
  47d394:	b	47d3b0 <_obstack_memory_used@@Base+0x20270>
  47d398:	ldr	x0, [sp, #544]
  47d39c:	sub	w0, w0, #0x3d
  47d3a0:	ldr	x1, [sp, #640]
  47d3a4:	lsl	x0, x1, x0
  47d3a8:	str	x0, [sp, #648]
  47d3ac:	str	xzr, [sp, #640]
  47d3b0:	ldr	x1, [sp, #544]
  47d3b4:	mov	x0, #0x3ffe                	// #16382
  47d3b8:	add	x0, x1, x0
  47d3bc:	ldr	x1, [sp, #624]
  47d3c0:	sub	x0, x1, x0
  47d3c4:	str	x0, [sp, #624]
  47d3c8:	str	xzr, [sp, #632]
  47d3cc:	b	47d414 <_obstack_memory_used@@Base+0x202d4>
  47d3d0:	ldr	x1, [sp, #648]
  47d3d4:	ldr	x0, [sp, #640]
  47d3d8:	orr	x0, x1, x0
  47d3dc:	cmp	x0, #0x0
  47d3e0:	b.ne	47d3f0 <_obstack_memory_used@@Base+0x202b0>  // b.any
  47d3e4:	mov	x0, #0x2                   	// #2
  47d3e8:	str	x0, [sp, #632]
  47d3ec:	b	47d414 <_obstack_memory_used@@Base+0x202d4>
  47d3f0:	mov	x0, #0x3                   	// #3
  47d3f4:	str	x0, [sp, #632]
  47d3f8:	ldr	x0, [sp, #648]
  47d3fc:	and	x0, x0, #0x800000000000
  47d400:	cmp	x0, #0x0
  47d404:	b.ne	47d414 <_obstack_memory_used@@Base+0x202d4>  // b.any
  47d408:	ldr	w0, [sp, #596]
  47d40c:	orr	w0, w0, #0x1
  47d410:	str	w0, [sp, #596]
  47d414:	nop
  47d418:	ldr	x1, [sp, #480]
  47d41c:	ldr	x0, [sp, #472]
  47d420:	eor	x0, x1, x0
  47d424:	str	x0, [sp, #656]
  47d428:	ldr	x1, [sp, #600]
  47d42c:	ldr	x0, [sp, #624]
  47d430:	add	x0, x1, x0
  47d434:	add	x0, x0, #0x1
  47d438:	str	x0, [sp, #576]
  47d43c:	ldr	x0, [sp, #584]
  47d440:	lsl	x1, x0, #2
  47d444:	ldr	x0, [sp, #632]
  47d448:	orr	x0, x1, x0
  47d44c:	cmp	x0, #0xf
  47d450:	b.eq	47dc60 <_obstack_memory_used@@Base+0x20b20>  // b.none
  47d454:	cmp	x0, #0xf
  47d458:	b.gt	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47d45c:	cmp	x0, #0xe
  47d460:	b.gt	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47d464:	cmp	x0, #0xc
  47d468:	b.ge	47dcc0 <_obstack_memory_used@@Base+0x20b80>  // b.tcont
  47d46c:	cmp	x0, #0xb
  47d470:	b.eq	47dce4 <_obstack_memory_used@@Base+0x20ba4>  // b.none
  47d474:	cmp	x0, #0xb
  47d478:	b.gt	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47d47c:	cmp	x0, #0xa
  47d480:	b.gt	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47d484:	cmp	x0, #0x3
  47d488:	b.ge	47d4ac <_obstack_memory_used@@Base+0x2036c>  // b.tcont
  47d48c:	cmp	x0, #0x0
  47d490:	b.eq	47d510 <_obstack_memory_used@@Base+0x203d0>  // b.none
  47d494:	cmp	x0, #0x0
  47d498:	b.lt	47dd34 <_obstack_memory_used@@Base+0x20bf4>  // b.tstop
  47d49c:	sub	x0, x0, #0x1
  47d4a0:	cmp	x0, #0x1
  47d4a4:	b.hi	47dd34 <_obstack_memory_used@@Base+0x20bf4>  // b.pmore
  47d4a8:	b	47dcec <_obstack_memory_used@@Base+0x20bac>
  47d4ac:	mov	w1, w0
  47d4b0:	mov	x0, #0x1                   	// #1
  47d4b4:	lsl	x0, x0, x1
  47d4b8:	mov	x1, #0x530                 	// #1328
  47d4bc:	and	x1, x0, x1
  47d4c0:	cmp	x1, #0x0
  47d4c4:	cset	w1, ne  // ne = any
  47d4c8:	and	w1, w1, #0xff
  47d4cc:	cmp	w1, #0x0
  47d4d0:	b.ne	47dcc8 <_obstack_memory_used@@Base+0x20b88>  // b.any
  47d4d4:	mov	x1, #0x240                 	// #576
  47d4d8:	and	x1, x0, x1
  47d4dc:	cmp	x1, #0x0
  47d4e0:	cset	w1, ne  // ne = any
  47d4e4:	and	w1, w1, #0xff
  47d4e8:	cmp	w1, #0x0
  47d4ec:	b.ne	47dd08 <_obstack_memory_used@@Base+0x20bc8>  // b.any
  47d4f0:	mov	x1, #0x88                  	// #136
  47d4f4:	and	x0, x0, x1
  47d4f8:	cmp	x0, #0x0
  47d4fc:	cset	w0, ne  // ne = any
  47d500:	and	w0, w0, #0xff
  47d504:	cmp	w0, #0x0
  47d508:	b.ne	47dce4 <_obstack_memory_used@@Base+0x20ba4>  // b.any
  47d50c:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47d510:	str	xzr, [sp, #664]
  47d514:	ldr	x0, [sp, #608]
  47d518:	str	w0, [sp, #468]
  47d51c:	ldr	x0, [sp, #608]
  47d520:	lsr	x0, x0, #32
  47d524:	str	w0, [sp, #464]
  47d528:	ldr	x0, [sp, #640]
  47d52c:	str	w0, [sp, #460]
  47d530:	ldr	x0, [sp, #640]
  47d534:	lsr	x0, x0, #32
  47d538:	str	w0, [sp, #456]
  47d53c:	ldr	w1, [sp, #468]
  47d540:	ldr	w0, [sp, #460]
  47d544:	mul	x0, x1, x0
  47d548:	str	x0, [sp, #448]
  47d54c:	ldr	w1, [sp, #468]
  47d550:	ldr	w0, [sp, #456]
  47d554:	mul	x0, x1, x0
  47d558:	str	x0, [sp, #440]
  47d55c:	ldr	w1, [sp, #464]
  47d560:	ldr	w0, [sp, #460]
  47d564:	mul	x0, x1, x0
  47d568:	str	x0, [sp, #432]
  47d56c:	ldr	w1, [sp, #464]
  47d570:	ldr	w0, [sp, #456]
  47d574:	mul	x0, x1, x0
  47d578:	str	x0, [sp, #536]
  47d57c:	ldr	x0, [sp, #448]
  47d580:	lsr	x0, x0, #32
  47d584:	ldr	x1, [sp, #440]
  47d588:	add	x0, x1, x0
  47d58c:	str	x0, [sp, #440]
  47d590:	ldr	x1, [sp, #440]
  47d594:	ldr	x0, [sp, #432]
  47d598:	add	x0, x1, x0
  47d59c:	str	x0, [sp, #440]
  47d5a0:	ldr	x1, [sp, #440]
  47d5a4:	ldr	x0, [sp, #432]
  47d5a8:	cmp	x1, x0
  47d5ac:	b.cs	47d5c0 <_obstack_memory_used@@Base+0x20480>  // b.hs, b.nlast
  47d5b0:	ldr	x1, [sp, #536]
  47d5b4:	mov	x0, #0x100000000           	// #4294967296
  47d5b8:	add	x0, x1, x0
  47d5bc:	str	x0, [sp, #536]
  47d5c0:	ldr	x0, [sp, #440]
  47d5c4:	lsr	x1, x0, #32
  47d5c8:	ldr	x0, [sp, #536]
  47d5cc:	add	x1, x1, x0
  47d5d0:	add	x0, sp, #0x30
  47d5d4:	str	x1, [x0, #8]
  47d5d8:	ldr	x0, [sp, #440]
  47d5dc:	and	x0, x0, #0xffffffff
  47d5e0:	lsl	x1, x0, #32
  47d5e4:	ldr	x0, [sp, #448]
  47d5e8:	and	x0, x0, #0xffffffff
  47d5ec:	add	x1, x1, x0
  47d5f0:	add	x0, sp, #0x30
  47d5f4:	str	x1, [x0]
  47d5f8:	ldr	x0, [sp, #608]
  47d5fc:	str	w0, [sp, #428]
  47d600:	ldr	x0, [sp, #608]
  47d604:	lsr	x0, x0, #32
  47d608:	str	w0, [sp, #424]
  47d60c:	ldr	x0, [sp, #648]
  47d610:	str	w0, [sp, #420]
  47d614:	ldr	x0, [sp, #648]
  47d618:	lsr	x0, x0, #32
  47d61c:	str	w0, [sp, #416]
  47d620:	ldr	w1, [sp, #428]
  47d624:	ldr	w0, [sp, #420]
  47d628:	mul	x0, x1, x0
  47d62c:	str	x0, [sp, #408]
  47d630:	ldr	w1, [sp, #428]
  47d634:	ldr	w0, [sp, #416]
  47d638:	mul	x0, x1, x0
  47d63c:	str	x0, [sp, #400]
  47d640:	ldr	w1, [sp, #424]
  47d644:	ldr	w0, [sp, #420]
  47d648:	mul	x0, x1, x0
  47d64c:	str	x0, [sp, #392]
  47d650:	ldr	w1, [sp, #424]
  47d654:	ldr	w0, [sp, #416]
  47d658:	mul	x0, x1, x0
  47d65c:	str	x0, [sp, #528]
  47d660:	ldr	x0, [sp, #408]
  47d664:	lsr	x0, x0, #32
  47d668:	ldr	x1, [sp, #400]
  47d66c:	add	x0, x1, x0
  47d670:	str	x0, [sp, #400]
  47d674:	ldr	x1, [sp, #400]
  47d678:	ldr	x0, [sp, #392]
  47d67c:	add	x0, x1, x0
  47d680:	str	x0, [sp, #400]
  47d684:	ldr	x1, [sp, #400]
  47d688:	ldr	x0, [sp, #392]
  47d68c:	cmp	x1, x0
  47d690:	b.cs	47d6a4 <_obstack_memory_used@@Base+0x20564>  // b.hs, b.nlast
  47d694:	ldr	x1, [sp, #528]
  47d698:	mov	x0, #0x100000000           	// #4294967296
  47d69c:	add	x0, x1, x0
  47d6a0:	str	x0, [sp, #528]
  47d6a4:	ldr	x0, [sp, #400]
  47d6a8:	lsr	x0, x0, #32
  47d6ac:	ldr	x1, [sp, #528]
  47d6b0:	add	x0, x1, x0
  47d6b4:	str	x0, [sp, #384]
  47d6b8:	ldr	x0, [sp, #400]
  47d6bc:	and	x0, x0, #0xffffffff
  47d6c0:	lsl	x1, x0, #32
  47d6c4:	ldr	x0, [sp, #408]
  47d6c8:	and	x0, x0, #0xffffffff
  47d6cc:	add	x0, x1, x0
  47d6d0:	str	x0, [sp, #376]
  47d6d4:	ldr	x0, [sp, #616]
  47d6d8:	str	w0, [sp, #372]
  47d6dc:	ldr	x0, [sp, #616]
  47d6e0:	lsr	x0, x0, #32
  47d6e4:	str	w0, [sp, #368]
  47d6e8:	ldr	x0, [sp, #640]
  47d6ec:	str	w0, [sp, #364]
  47d6f0:	ldr	x0, [sp, #640]
  47d6f4:	lsr	x0, x0, #32
  47d6f8:	str	w0, [sp, #360]
  47d6fc:	ldr	w1, [sp, #372]
  47d700:	ldr	w0, [sp, #364]
  47d704:	mul	x0, x1, x0
  47d708:	str	x0, [sp, #352]
  47d70c:	ldr	w1, [sp, #372]
  47d710:	ldr	w0, [sp, #360]
  47d714:	mul	x0, x1, x0
  47d718:	str	x0, [sp, #344]
  47d71c:	ldr	w1, [sp, #368]
  47d720:	ldr	w0, [sp, #364]
  47d724:	mul	x0, x1, x0
  47d728:	str	x0, [sp, #336]
  47d72c:	ldr	w1, [sp, #368]
  47d730:	ldr	w0, [sp, #360]
  47d734:	mul	x0, x1, x0
  47d738:	str	x0, [sp, #520]
  47d73c:	ldr	x0, [sp, #352]
  47d740:	lsr	x0, x0, #32
  47d744:	ldr	x1, [sp, #344]
  47d748:	add	x0, x1, x0
  47d74c:	str	x0, [sp, #344]
  47d750:	ldr	x1, [sp, #344]
  47d754:	ldr	x0, [sp, #336]
  47d758:	add	x0, x1, x0
  47d75c:	str	x0, [sp, #344]
  47d760:	ldr	x1, [sp, #344]
  47d764:	ldr	x0, [sp, #336]
  47d768:	cmp	x1, x0
  47d76c:	b.cs	47d780 <_obstack_memory_used@@Base+0x20640>  // b.hs, b.nlast
  47d770:	ldr	x1, [sp, #520]
  47d774:	mov	x0, #0x100000000           	// #4294967296
  47d778:	add	x0, x1, x0
  47d77c:	str	x0, [sp, #520]
  47d780:	ldr	x0, [sp, #344]
  47d784:	lsr	x0, x0, #32
  47d788:	ldr	x1, [sp, #520]
  47d78c:	add	x0, x1, x0
  47d790:	str	x0, [sp, #328]
  47d794:	ldr	x0, [sp, #344]
  47d798:	and	x0, x0, #0xffffffff
  47d79c:	lsl	x1, x0, #32
  47d7a0:	ldr	x0, [sp, #352]
  47d7a4:	and	x0, x0, #0xffffffff
  47d7a8:	add	x0, x1, x0
  47d7ac:	str	x0, [sp, #320]
  47d7b0:	ldr	x0, [sp, #616]
  47d7b4:	str	w0, [sp, #316]
  47d7b8:	ldr	x0, [sp, #616]
  47d7bc:	lsr	x0, x0, #32
  47d7c0:	str	w0, [sp, #312]
  47d7c4:	ldr	x0, [sp, #648]
  47d7c8:	str	w0, [sp, #308]
  47d7cc:	ldr	x0, [sp, #648]
  47d7d0:	lsr	x0, x0, #32
  47d7d4:	str	w0, [sp, #304]
  47d7d8:	ldr	w1, [sp, #316]
  47d7dc:	ldr	w0, [sp, #308]
  47d7e0:	mul	x0, x1, x0
  47d7e4:	str	x0, [sp, #296]
  47d7e8:	ldr	w1, [sp, #316]
  47d7ec:	ldr	w0, [sp, #304]
  47d7f0:	mul	x0, x1, x0
  47d7f4:	str	x0, [sp, #288]
  47d7f8:	ldr	w1, [sp, #312]
  47d7fc:	ldr	w0, [sp, #308]
  47d800:	mul	x0, x1, x0
  47d804:	str	x0, [sp, #280]
  47d808:	ldr	w1, [sp, #312]
  47d80c:	ldr	w0, [sp, #304]
  47d810:	mul	x0, x1, x0
  47d814:	str	x0, [sp, #512]
  47d818:	ldr	x0, [sp, #296]
  47d81c:	lsr	x0, x0, #32
  47d820:	ldr	x1, [sp, #288]
  47d824:	add	x0, x1, x0
  47d828:	str	x0, [sp, #288]
  47d82c:	ldr	x1, [sp, #288]
  47d830:	ldr	x0, [sp, #280]
  47d834:	add	x0, x1, x0
  47d838:	str	x0, [sp, #288]
  47d83c:	ldr	x1, [sp, #288]
  47d840:	ldr	x0, [sp, #280]
  47d844:	cmp	x1, x0
  47d848:	b.cs	47d85c <_obstack_memory_used@@Base+0x2071c>  // b.hs, b.nlast
  47d84c:	ldr	x1, [sp, #512]
  47d850:	mov	x0, #0x100000000           	// #4294967296
  47d854:	add	x0, x1, x0
  47d858:	str	x0, [sp, #512]
  47d85c:	ldr	x0, [sp, #288]
  47d860:	lsr	x1, x0, #32
  47d864:	ldr	x0, [sp, #512]
  47d868:	add	x1, x1, x0
  47d86c:	add	x0, sp, #0x30
  47d870:	str	x1, [x0, #24]
  47d874:	ldr	x0, [sp, #288]
  47d878:	and	x0, x0, #0xffffffff
  47d87c:	lsl	x1, x0, #32
  47d880:	ldr	x0, [sp, #296]
  47d884:	and	x0, x0, #0xffffffff
  47d888:	add	x1, x1, x0
  47d88c:	add	x0, sp, #0x30
  47d890:	str	x1, [x0, #16]
  47d894:	add	x0, sp, #0x30
  47d898:	ldr	x1, [x0, #8]
  47d89c:	ldr	x0, [sp, #376]
  47d8a0:	add	x1, x1, x0
  47d8a4:	add	x0, sp, #0x30
  47d8a8:	str	x1, [x0, #8]
  47d8ac:	add	x0, sp, #0x30
  47d8b0:	ldr	x0, [x0, #8]
  47d8b4:	ldr	x1, [sp, #376]
  47d8b8:	cmp	x1, x0
  47d8bc:	cset	w0, hi  // hi = pmore
  47d8c0:	and	w0, w0, #0xff
  47d8c4:	and	x0, x0, #0xff
  47d8c8:	str	x0, [sp, #272]
  47d8cc:	add	x0, sp, #0x30
  47d8d0:	ldr	x1, [x0, #16]
  47d8d4:	ldr	x0, [sp, #384]
  47d8d8:	add	x1, x1, x0
  47d8dc:	add	x0, sp, #0x30
  47d8e0:	str	x1, [x0, #16]
  47d8e4:	add	x0, sp, #0x30
  47d8e8:	ldr	x0, [x0, #16]
  47d8ec:	ldr	x1, [sp, #384]
  47d8f0:	cmp	x1, x0
  47d8f4:	cset	w0, hi  // hi = pmore
  47d8f8:	and	w0, w0, #0xff
  47d8fc:	and	x0, x0, #0xff
  47d900:	str	x0, [sp, #264]
  47d904:	add	x0, sp, #0x30
  47d908:	ldr	x1, [x0, #16]
  47d90c:	ldr	x0, [sp, #272]
  47d910:	add	x1, x1, x0
  47d914:	add	x0, sp, #0x30
  47d918:	str	x1, [x0, #16]
  47d91c:	add	x0, sp, #0x30
  47d920:	ldr	x0, [x0, #16]
  47d924:	ldr	x1, [sp, #272]
  47d928:	cmp	x1, x0
  47d92c:	cset	w0, hi  // hi = pmore
  47d930:	and	w0, w0, #0xff
  47d934:	and	x0, x0, #0xff
  47d938:	ldr	x1, [sp, #264]
  47d93c:	orr	x0, x1, x0
  47d940:	str	x0, [sp, #264]
  47d944:	add	x0, sp, #0x30
  47d948:	ldr	x1, [x0, #24]
  47d94c:	ldr	x0, [sp, #264]
  47d950:	add	x1, x1, x0
  47d954:	add	x0, sp, #0x30
  47d958:	str	x1, [x0, #24]
  47d95c:	add	x0, sp, #0x30
  47d960:	ldr	x1, [x0, #8]
  47d964:	ldr	x0, [sp, #320]
  47d968:	add	x1, x1, x0
  47d96c:	add	x0, sp, #0x30
  47d970:	str	x1, [x0, #8]
  47d974:	add	x0, sp, #0x30
  47d978:	ldr	x0, [x0, #8]
  47d97c:	ldr	x1, [sp, #320]
  47d980:	cmp	x1, x0
  47d984:	cset	w0, hi  // hi = pmore
  47d988:	and	w0, w0, #0xff
  47d98c:	and	x0, x0, #0xff
  47d990:	str	x0, [sp, #256]
  47d994:	add	x0, sp, #0x30
  47d998:	ldr	x1, [x0, #16]
  47d99c:	ldr	x0, [sp, #328]
  47d9a0:	add	x1, x1, x0
  47d9a4:	add	x0, sp, #0x30
  47d9a8:	str	x1, [x0, #16]
  47d9ac:	add	x0, sp, #0x30
  47d9b0:	ldr	x0, [x0, #16]
  47d9b4:	ldr	x1, [sp, #328]
  47d9b8:	cmp	x1, x0
  47d9bc:	cset	w0, hi  // hi = pmore
  47d9c0:	and	w0, w0, #0xff
  47d9c4:	and	x0, x0, #0xff
  47d9c8:	str	x0, [sp, #248]
  47d9cc:	add	x0, sp, #0x30
  47d9d0:	ldr	x1, [x0, #16]
  47d9d4:	ldr	x0, [sp, #256]
  47d9d8:	add	x1, x1, x0
  47d9dc:	add	x0, sp, #0x30
  47d9e0:	str	x1, [x0, #16]
  47d9e4:	add	x0, sp, #0x30
  47d9e8:	ldr	x0, [x0, #16]
  47d9ec:	ldr	x1, [sp, #256]
  47d9f0:	cmp	x1, x0
  47d9f4:	cset	w0, hi  // hi = pmore
  47d9f8:	and	w0, w0, #0xff
  47d9fc:	and	x0, x0, #0xff
  47da00:	ldr	x1, [sp, #248]
  47da04:	orr	x0, x1, x0
  47da08:	str	x0, [sp, #248]
  47da0c:	add	x0, sp, #0x30
  47da10:	ldr	x1, [x0, #24]
  47da14:	ldr	x0, [sp, #248]
  47da18:	add	x1, x1, x0
  47da1c:	add	x0, sp, #0x30
  47da20:	str	x1, [x0, #24]
  47da24:	mov	x0, #0x1                   	// #1
  47da28:	str	x0, [sp, #240]
  47da2c:	mov	x0, #0x33                  	// #51
  47da30:	str	x0, [sp, #232]
  47da34:	mov	x1, #0x40                  	// #64
  47da38:	ldr	x0, [sp, #232]
  47da3c:	sub	x0, x1, x0
  47da40:	str	x0, [sp, #224]
  47da44:	str	xzr, [sp, #504]
  47da48:	str	xzr, [sp, #496]
  47da4c:	b	47da74 <_obstack_memory_used@@Base+0x20934>
  47da50:	add	x0, sp, #0x30
  47da54:	ldr	x1, [sp, #504]
  47da58:	ldr	x0, [x0, x1, lsl #3]
  47da5c:	ldr	x1, [sp, #496]
  47da60:	orr	x0, x1, x0
  47da64:	str	x0, [sp, #496]
  47da68:	ldr	x0, [sp, #504]
  47da6c:	add	x0, x0, #0x1
  47da70:	str	x0, [sp, #504]
  47da74:	ldr	x1, [sp, #504]
  47da78:	ldr	x0, [sp, #240]
  47da7c:	cmp	x1, x0
  47da80:	b.lt	47da50 <_obstack_memory_used@@Base+0x20910>  // b.tstop
  47da84:	ldr	x0, [sp, #232]
  47da88:	cmp	x0, #0x0
  47da8c:	b.ne	47dae0 <_obstack_memory_used@@Base+0x209a0>  // b.any
  47da90:	str	xzr, [sp, #504]
  47da94:	b	47dac4 <_obstack_memory_used@@Base+0x20984>
  47da98:	ldr	x1, [sp, #504]
  47da9c:	ldr	x0, [sp, #240]
  47daa0:	add	x1, x1, x0
  47daa4:	add	x0, sp, #0x30
  47daa8:	ldr	x2, [x0, x1, lsl #3]
  47daac:	add	x0, sp, #0x30
  47dab0:	ldr	x1, [sp, #504]
  47dab4:	str	x2, [x0, x1, lsl #3]
  47dab8:	ldr	x0, [sp, #504]
  47dabc:	add	x0, x0, #0x1
  47dac0:	str	x0, [sp, #504]
  47dac4:	mov	x1, #0x3                   	// #3
  47dac8:	ldr	x0, [sp, #240]
  47dacc:	sub	x0, x1, x0
  47dad0:	ldr	x1, [sp, #504]
  47dad4:	cmp	x1, x0
  47dad8:	b.le	47da98 <_obstack_memory_used@@Base+0x20958>
  47dadc:	b	47dbbc <_obstack_memory_used@@Base+0x20a7c>
  47dae0:	add	x0, sp, #0x30
  47dae4:	ldr	x1, [sp, #504]
  47dae8:	ldr	x0, [x0, x1, lsl #3]
  47daec:	ldr	x1, [sp, #224]
  47daf0:	lsl	x0, x0, x1
  47daf4:	ldr	x1, [sp, #496]
  47daf8:	orr	x0, x1, x0
  47dafc:	str	x0, [sp, #496]
  47db00:	str	xzr, [sp, #504]
  47db04:	b	47db60 <_obstack_memory_used@@Base+0x20a20>
  47db08:	ldr	x1, [sp, #504]
  47db0c:	ldr	x0, [sp, #240]
  47db10:	add	x1, x1, x0
  47db14:	add	x0, sp, #0x30
  47db18:	ldr	x0, [x0, x1, lsl #3]
  47db1c:	ldr	x1, [sp, #232]
  47db20:	lsr	x1, x0, x1
  47db24:	ldr	x2, [sp, #504]
  47db28:	ldr	x0, [sp, #240]
  47db2c:	add	x0, x2, x0
  47db30:	add	x2, x0, #0x1
  47db34:	add	x0, sp, #0x30
  47db38:	ldr	x0, [x0, x2, lsl #3]
  47db3c:	ldr	x2, [sp, #224]
  47db40:	lsl	x0, x0, x2
  47db44:	orr	x2, x1, x0
  47db48:	add	x0, sp, #0x30
  47db4c:	ldr	x1, [sp, #504]
  47db50:	str	x2, [x0, x1, lsl #3]
  47db54:	ldr	x0, [sp, #504]
  47db58:	add	x0, x0, #0x1
  47db5c:	str	x0, [sp, #504]
  47db60:	mov	x1, #0x3                   	// #3
  47db64:	ldr	x0, [sp, #240]
  47db68:	sub	x0, x1, x0
  47db6c:	ldr	x1, [sp, #504]
  47db70:	cmp	x1, x0
  47db74:	b.lt	47db08 <_obstack_memory_used@@Base+0x209c8>  // b.tstop
  47db78:	add	x0, sp, #0x30
  47db7c:	ldr	x1, [x0, #24]
  47db80:	ldr	x0, [sp, #232]
  47db84:	mov	w3, w0
  47db88:	ldr	x0, [sp, #504]
  47db8c:	add	x2, x0, #0x1
  47db90:	str	x2, [sp, #504]
  47db94:	lsr	x2, x1, x3
  47db98:	add	x1, sp, #0x30
  47db9c:	str	x2, [x1, x0, lsl #3]
  47dba0:	b	47dbbc <_obstack_memory_used@@Base+0x20a7c>
  47dba4:	add	x0, sp, #0x30
  47dba8:	ldr	x1, [sp, #504]
  47dbac:	str	xzr, [x0, x1, lsl #3]
  47dbb0:	ldr	x0, [sp, #504]
  47dbb4:	add	x0, x0, #0x1
  47dbb8:	str	x0, [sp, #504]
  47dbbc:	ldr	x0, [sp, #504]
  47dbc0:	cmp	x0, #0x3
  47dbc4:	b.le	47dba4 <_obstack_memory_used@@Base+0x20a64>
  47dbc8:	ldr	x0, [sp, #496]
  47dbcc:	cmp	x0, #0x0
  47dbd0:	cset	w0, ne  // ne = any
  47dbd4:	and	w0, w0, #0xff
  47dbd8:	str	w0, [sp, #220]
  47dbdc:	add	x0, sp, #0x30
  47dbe0:	ldr	x1, [x0]
  47dbe4:	ldrsw	x0, [sp, #220]
  47dbe8:	orr	x1, x1, x0
  47dbec:	add	x0, sp, #0x30
  47dbf0:	str	x1, [x0]
  47dbf4:	add	x0, sp, #0x30
  47dbf8:	ldr	x0, [x0]
  47dbfc:	str	x0, [sp, #568]
  47dc00:	add	x0, sp, #0x30
  47dc04:	ldr	x0, [x0, #8]
  47dc08:	str	x0, [sp, #560]
  47dc0c:	ldr	x0, [sp, #560]
  47dc10:	and	x0, x0, #0x10000000000000
  47dc14:	cmp	x0, #0x0
  47dc18:	b.eq	47dc50 <_obstack_memory_used@@Base+0x20b10>  // b.none
  47dc1c:	ldr	x0, [sp, #560]
  47dc20:	lsl	x1, x0, #63
  47dc24:	ldr	x0, [sp, #568]
  47dc28:	lsr	x0, x0, #1
  47dc2c:	orr	x1, x1, x0
  47dc30:	ldr	x0, [sp, #568]
  47dc34:	and	x0, x0, #0x1
  47dc38:	orr	x0, x1, x0
  47dc3c:	str	x0, [sp, #568]
  47dc40:	ldr	x0, [sp, #560]
  47dc44:	lsr	x0, x0, #1
  47dc48:	str	x0, [sp, #560]
  47dc4c:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47dc50:	ldr	x0, [sp, #576]
  47dc54:	sub	x0, x0, #0x1
  47dc58:	str	x0, [sp, #576]
  47dc5c:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47dc60:	ldr	x0, [sp, #616]
  47dc64:	and	x0, x0, #0x800000000000
  47dc68:	cmp	x0, #0x0
  47dc6c:	b.eq	47dc9c <_obstack_memory_used@@Base+0x20b5c>  // b.none
  47dc70:	ldr	x0, [sp, #648]
  47dc74:	and	x0, x0, #0x800000000000
  47dc78:	cmp	x0, #0x0
  47dc7c:	b.ne	47dc9c <_obstack_memory_used@@Base+0x20b5c>  // b.any
  47dc80:	ldr	x0, [sp, #472]
  47dc84:	str	x0, [sp, #656]
  47dc88:	ldr	x0, [sp, #640]
  47dc8c:	str	x0, [sp, #568]
  47dc90:	ldr	x0, [sp, #648]
  47dc94:	str	x0, [sp, #560]
  47dc98:	b	47dcb4 <_obstack_memory_used@@Base+0x20b74>
  47dc9c:	ldr	x0, [sp, #480]
  47dca0:	str	x0, [sp, #656]
  47dca4:	ldr	x0, [sp, #608]
  47dca8:	str	x0, [sp, #568]
  47dcac:	ldr	x0, [sp, #616]
  47dcb0:	str	x0, [sp, #560]
  47dcb4:	mov	x0, #0x3                   	// #3
  47dcb8:	str	x0, [sp, #664]
  47dcbc:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47dcc0:	ldr	x0, [sp, #480]
  47dcc4:	str	x0, [sp, #656]
  47dcc8:	ldr	x0, [sp, #608]
  47dccc:	str	x0, [sp, #568]
  47dcd0:	ldr	x0, [sp, #616]
  47dcd4:	str	x0, [sp, #560]
  47dcd8:	ldr	x0, [sp, #584]
  47dcdc:	str	x0, [sp, #664]
  47dce0:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47dce4:	ldr	x0, [sp, #472]
  47dce8:	str	x0, [sp, #656]
  47dcec:	ldr	x0, [sp, #640]
  47dcf0:	str	x0, [sp, #568]
  47dcf4:	ldr	x0, [sp, #648]
  47dcf8:	str	x0, [sp, #560]
  47dcfc:	ldr	x0, [sp, #632]
  47dd00:	str	x0, [sp, #664]
  47dd04:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47dd08:	str	xzr, [sp, #656]
  47dd0c:	mov	x0, #0x3                   	// #3
  47dd10:	str	x0, [sp, #664]
  47dd14:	mov	x0, #0xffffffffffffffff    	// #-1
  47dd18:	str	x0, [sp, #568]
  47dd1c:	mov	x0, #0xffffffffffff        	// #281474976710655
  47dd20:	str	x0, [sp, #560]
  47dd24:	ldr	w0, [sp, #596]
  47dd28:	orr	w0, w0, #0x1
  47dd2c:	str	w0, [sp, #596]
  47dd30:	b	47dd34 <_obstack_memory_used@@Base+0x20bf4>
  47dd34:	ldr	x0, [sp, #664]
  47dd38:	cmp	x0, #0x3
  47dd3c:	b.eq	47e4d0 <_obstack_memory_used@@Base+0x21390>  // b.none
  47dd40:	ldr	x0, [sp, #664]
  47dd44:	cmp	x0, #0x3
  47dd48:	b.gt	47e4e8 <_obstack_memory_used@@Base+0x213a8>
  47dd4c:	ldr	x0, [sp, #664]
  47dd50:	cmp	x0, #0x2
  47dd54:	b.eq	47e4bc <_obstack_memory_used@@Base+0x2137c>  // b.none
  47dd58:	ldr	x0, [sp, #664]
  47dd5c:	cmp	x0, #0x2
  47dd60:	b.gt	47e4e8 <_obstack_memory_used@@Base+0x213a8>
  47dd64:	ldr	x0, [sp, #664]
  47dd68:	cmp	x0, #0x0
  47dd6c:	b.eq	47dd80 <_obstack_memory_used@@Base+0x20c40>  // b.none
  47dd70:	ldr	x0, [sp, #664]
  47dd74:	cmp	x0, #0x1
  47dd78:	b.eq	47e4ac <_obstack_memory_used@@Base+0x2136c>  // b.none
  47dd7c:	b	47e4e8 <_obstack_memory_used@@Base+0x213a8>
  47dd80:	ldr	x1, [sp, #576]
  47dd84:	mov	x0, #0x3fff                	// #16383
  47dd88:	add	x0, x1, x0
  47dd8c:	str	x0, [sp, #576]
  47dd90:	ldr	x0, [sp, #576]
  47dd94:	cmp	x0, #0x0
  47dd98:	b.le	47e014 <_obstack_memory_used@@Base+0x20ed4>
  47dd9c:	ldr	x0, [sp, #568]
  47dda0:	and	x0, x0, #0x7
  47dda4:	cmp	x0, #0x0
  47dda8:	b.eq	47def0 <_obstack_memory_used@@Base+0x20db0>  // b.none
  47ddac:	ldr	w0, [sp, #596]
  47ddb0:	orr	w0, w0, #0x10
  47ddb4:	str	w0, [sp, #596]
  47ddb8:	ldr	x0, [sp, #488]
  47ddbc:	and	x0, x0, #0xc00000
  47ddc0:	cmp	x0, #0xc00, lsl #12
  47ddc4:	b.eq	47def8 <_obstack_memory_used@@Base+0x20db8>  // b.none
  47ddc8:	cmp	x0, #0xc00, lsl #12
  47ddcc:	b.hi	47defc <_obstack_memory_used@@Base+0x20dbc>  // b.pmore
  47ddd0:	cmp	x0, #0x800, lsl #12
  47ddd4:	b.eq	47de98 <_obstack_memory_used@@Base+0x20d58>  // b.none
  47ddd8:	cmp	x0, #0x800, lsl #12
  47dddc:	b.hi	47defc <_obstack_memory_used@@Base+0x20dbc>  // b.pmore
  47dde0:	cmp	x0, #0x0
  47dde4:	b.eq	47ddf4 <_obstack_memory_used@@Base+0x20cb4>  // b.none
  47dde8:	cmp	x0, #0x400, lsl #12
  47ddec:	b.eq	47de40 <_obstack_memory_used@@Base+0x20d00>  // b.none
  47ddf0:	b	47defc <_obstack_memory_used@@Base+0x20dbc>
  47ddf4:	ldr	x0, [sp, #568]
  47ddf8:	and	x0, x0, #0xf
  47ddfc:	cmp	x0, #0x4
  47de00:	b.eq	47def8 <_obstack_memory_used@@Base+0x20db8>  // b.none
  47de04:	ldr	x0, [sp, #568]
  47de08:	add	x0, x0, #0x4
  47de0c:	str	x0, [sp, #144]
  47de10:	ldr	x1, [sp, #144]
  47de14:	ldr	x0, [sp, #568]
  47de18:	cmp	x1, x0
  47de1c:	cset	w0, cc  // cc = lo, ul, last
  47de20:	and	w0, w0, #0xff
  47de24:	and	x0, x0, #0xff
  47de28:	ldr	x1, [sp, #560]
  47de2c:	add	x0, x1, x0
  47de30:	str	x0, [sp, #560]
  47de34:	ldr	x0, [sp, #144]
  47de38:	str	x0, [sp, #568]
  47de3c:	b	47def8 <_obstack_memory_used@@Base+0x20db8>
  47de40:	ldr	x0, [sp, #656]
  47de44:	cmp	x0, #0x0
  47de48:	b.ne	47def8 <_obstack_memory_used@@Base+0x20db8>  // b.any
  47de4c:	ldr	x0, [sp, #568]
  47de50:	and	x0, x0, #0x7
  47de54:	cmp	x0, #0x0
  47de58:	b.eq	47def8 <_obstack_memory_used@@Base+0x20db8>  // b.none
  47de5c:	ldr	x0, [sp, #568]
  47de60:	add	x0, x0, #0x8
  47de64:	str	x0, [sp, #152]
  47de68:	ldr	x1, [sp, #152]
  47de6c:	ldr	x0, [sp, #568]
  47de70:	cmp	x1, x0
  47de74:	cset	w0, cc  // cc = lo, ul, last
  47de78:	and	w0, w0, #0xff
  47de7c:	and	x0, x0, #0xff
  47de80:	ldr	x1, [sp, #560]
  47de84:	add	x0, x1, x0
  47de88:	str	x0, [sp, #560]
  47de8c:	ldr	x0, [sp, #152]
  47de90:	str	x0, [sp, #568]
  47de94:	b	47def8 <_obstack_memory_used@@Base+0x20db8>
  47de98:	ldr	x0, [sp, #656]
  47de9c:	cmp	x0, #0x0
  47dea0:	b.eq	47def8 <_obstack_memory_used@@Base+0x20db8>  // b.none
  47dea4:	ldr	x0, [sp, #568]
  47dea8:	and	x0, x0, #0x7
  47deac:	cmp	x0, #0x0
  47deb0:	b.eq	47def8 <_obstack_memory_used@@Base+0x20db8>  // b.none
  47deb4:	ldr	x0, [sp, #568]
  47deb8:	add	x0, x0, #0x8
  47debc:	str	x0, [sp, #160]
  47dec0:	ldr	x1, [sp, #160]
  47dec4:	ldr	x0, [sp, #568]
  47dec8:	cmp	x1, x0
  47decc:	cset	w0, cc  // cc = lo, ul, last
  47ded0:	and	w0, w0, #0xff
  47ded4:	and	x0, x0, #0xff
  47ded8:	ldr	x1, [sp, #560]
  47dedc:	add	x0, x1, x0
  47dee0:	str	x0, [sp, #560]
  47dee4:	ldr	x0, [sp, #160]
  47dee8:	str	x0, [sp, #568]
  47deec:	b	47def8 <_obstack_memory_used@@Base+0x20db8>
  47def0:	nop
  47def4:	b	47defc <_obstack_memory_used@@Base+0x20dbc>
  47def8:	nop
  47defc:	ldr	x0, [sp, #560]
  47df00:	and	x0, x0, #0x10000000000000
  47df04:	cmp	x0, #0x0
  47df08:	b.eq	47df24 <_obstack_memory_used@@Base+0x20de4>  // b.none
  47df0c:	ldr	x0, [sp, #560]
  47df10:	and	x0, x0, #0xffefffffffffffff
  47df14:	str	x0, [sp, #560]
  47df18:	ldr	x0, [sp, #576]
  47df1c:	add	x0, x0, #0x1
  47df20:	str	x0, [sp, #576]
  47df24:	ldr	x0, [sp, #568]
  47df28:	lsr	x1, x0, #3
  47df2c:	ldr	x0, [sp, #560]
  47df30:	lsl	x0, x0, #61
  47df34:	orr	x0, x1, x0
  47df38:	str	x0, [sp, #568]
  47df3c:	ldr	x0, [sp, #560]
  47df40:	lsr	x0, x0, #3
  47df44:	str	x0, [sp, #560]
  47df48:	ldr	x1, [sp, #576]
  47df4c:	mov	x0, #0x7ffe                	// #32766
  47df50:	cmp	x1, x0
  47df54:	b.le	47e4e4 <_obstack_memory_used@@Base+0x213a4>
  47df58:	ldr	x0, [sp, #488]
  47df5c:	and	x0, x0, #0xc00000
  47df60:	cmp	x0, #0x800, lsl #12
  47df64:	b.eq	47dfa8 <_obstack_memory_used@@Base+0x20e68>  // b.none
  47df68:	cmp	x0, #0x800, lsl #12
  47df6c:	b.hi	47dfc0 <_obstack_memory_used@@Base+0x20e80>  // b.pmore
  47df70:	cmp	x0, #0x0
  47df74:	b.eq	47df84 <_obstack_memory_used@@Base+0x20e44>  // b.none
  47df78:	cmp	x0, #0x400, lsl #12
  47df7c:	b.eq	47df90 <_obstack_memory_used@@Base+0x20e50>  // b.none
  47df80:	b	47dfc0 <_obstack_memory_used@@Base+0x20e80>
  47df84:	mov	x0, #0x2                   	// #2
  47df88:	str	x0, [sp, #664]
  47df8c:	b	47dfbc <_obstack_memory_used@@Base+0x20e7c>
  47df90:	ldr	x0, [sp, #656]
  47df94:	cmp	x0, #0x0
  47df98:	b.ne	47dfbc <_obstack_memory_used@@Base+0x20e7c>  // b.any
  47df9c:	mov	x0, #0x2                   	// #2
  47dfa0:	str	x0, [sp, #664]
  47dfa4:	b	47dfbc <_obstack_memory_used@@Base+0x20e7c>
  47dfa8:	ldr	x0, [sp, #656]
  47dfac:	cmp	x0, #0x0
  47dfb0:	b.eq	47dfbc <_obstack_memory_used@@Base+0x20e7c>  // b.none
  47dfb4:	mov	x0, #0x2                   	// #2
  47dfb8:	str	x0, [sp, #664]
  47dfbc:	nop
  47dfc0:	ldr	x0, [sp, #664]
  47dfc4:	cmp	x0, #0x2
  47dfc8:	b.ne	47dfe0 <_obstack_memory_used@@Base+0x20ea0>  // b.any
  47dfcc:	mov	x0, #0x7fff                	// #32767
  47dfd0:	str	x0, [sp, #576]
  47dfd4:	str	xzr, [sp, #568]
  47dfd8:	str	xzr, [sp, #560]
  47dfdc:	b	47dff8 <_obstack_memory_used@@Base+0x20eb8>
  47dfe0:	mov	x0, #0x7ffe                	// #32766
  47dfe4:	str	x0, [sp, #576]
  47dfe8:	mov	x0, #0xffffffffffffffff    	// #-1
  47dfec:	str	x0, [sp, #568]
  47dff0:	mov	x0, #0xffffffffffffffff    	// #-1
  47dff4:	str	x0, [sp, #560]
  47dff8:	ldr	w0, [sp, #596]
  47dffc:	orr	w0, w0, #0x4
  47e000:	str	w0, [sp, #596]
  47e004:	ldr	w0, [sp, #596]
  47e008:	orr	w0, w0, #0x10
  47e00c:	str	w0, [sp, #596]
  47e010:	b	47e4e4 <_obstack_memory_used@@Base+0x213a4>
  47e014:	mov	w0, #0x1                   	// #1
  47e018:	str	w0, [sp, #216]
  47e01c:	mov	x1, #0x1                   	// #1
  47e020:	ldr	x0, [sp, #576]
  47e024:	sub	x0, x1, x0
  47e028:	str	x0, [sp, #576]
  47e02c:	ldr	x0, [sp, #576]
  47e030:	cmp	x0, #0x74
  47e034:	b.gt	47e30c <_obstack_memory_used@@Base+0x211cc>
  47e038:	ldr	x0, [sp, #576]
  47e03c:	cmp	x0, #0x3f
  47e040:	b.gt	47e0b8 <_obstack_memory_used@@Base+0x20f78>
  47e044:	ldr	x0, [sp, #576]
  47e048:	mov	w1, w0
  47e04c:	mov	w0, #0x40                  	// #64
  47e050:	sub	w0, w0, w1
  47e054:	ldr	x1, [sp, #560]
  47e058:	lsl	x1, x1, x0
  47e05c:	ldr	x0, [sp, #576]
  47e060:	mov	w2, w0
  47e064:	ldr	x0, [sp, #568]
  47e068:	lsr	x0, x0, x2
  47e06c:	orr	x1, x1, x0
  47e070:	ldr	x0, [sp, #576]
  47e074:	mov	w2, w0
  47e078:	mov	w0, #0x40                  	// #64
  47e07c:	sub	w0, w0, w2
  47e080:	ldr	x2, [sp, #568]
  47e084:	lsl	x0, x2, x0
  47e088:	cmp	x0, #0x0
  47e08c:	cset	w0, ne  // ne = any
  47e090:	and	w0, w0, #0xff
  47e094:	sxtw	x0, w0
  47e098:	orr	x0, x1, x0
  47e09c:	str	x0, [sp, #568]
  47e0a0:	ldr	x0, [sp, #576]
  47e0a4:	mov	w1, w0
  47e0a8:	ldr	x0, [sp, #560]
  47e0ac:	lsr	x0, x0, x1
  47e0b0:	str	x0, [sp, #560]
  47e0b4:	b	47e118 <_obstack_memory_used@@Base+0x20fd8>
  47e0b8:	ldr	x0, [sp, #576]
  47e0bc:	sub	w0, w0, #0x40
  47e0c0:	ldr	x1, [sp, #560]
  47e0c4:	lsr	x1, x1, x0
  47e0c8:	ldr	x0, [sp, #576]
  47e0cc:	cmp	x0, #0x40
  47e0d0:	b.eq	47e0f0 <_obstack_memory_used@@Base+0x20fb0>  // b.none
  47e0d4:	ldr	x0, [sp, #576]
  47e0d8:	mov	w2, w0
  47e0dc:	mov	w0, #0x80                  	// #128
  47e0e0:	sub	w0, w0, w2
  47e0e4:	ldr	x2, [sp, #560]
  47e0e8:	lsl	x0, x2, x0
  47e0ec:	b	47e0f4 <_obstack_memory_used@@Base+0x20fb4>
  47e0f0:	mov	x0, #0x0                   	// #0
  47e0f4:	ldr	x2, [sp, #568]
  47e0f8:	orr	x0, x0, x2
  47e0fc:	cmp	x0, #0x0
  47e100:	cset	w0, ne  // ne = any
  47e104:	and	w0, w0, #0xff
  47e108:	and	x0, x0, #0xff
  47e10c:	orr	x0, x1, x0
  47e110:	str	x0, [sp, #568]
  47e114:	str	xzr, [sp, #560]
  47e118:	ldr	x0, [sp, #568]
  47e11c:	and	x0, x0, #0x7
  47e120:	cmp	x0, #0x0
  47e124:	b.eq	47e26c <_obstack_memory_used@@Base+0x2112c>  // b.none
  47e128:	ldr	w0, [sp, #596]
  47e12c:	orr	w0, w0, #0x10
  47e130:	str	w0, [sp, #596]
  47e134:	ldr	x0, [sp, #488]
  47e138:	and	x0, x0, #0xc00000
  47e13c:	cmp	x0, #0xc00, lsl #12
  47e140:	b.eq	47e274 <_obstack_memory_used@@Base+0x21134>  // b.none
  47e144:	cmp	x0, #0xc00, lsl #12
  47e148:	b.hi	47e278 <_obstack_memory_used@@Base+0x21138>  // b.pmore
  47e14c:	cmp	x0, #0x800, lsl #12
  47e150:	b.eq	47e214 <_obstack_memory_used@@Base+0x210d4>  // b.none
  47e154:	cmp	x0, #0x800, lsl #12
  47e158:	b.hi	47e278 <_obstack_memory_used@@Base+0x21138>  // b.pmore
  47e15c:	cmp	x0, #0x0
  47e160:	b.eq	47e170 <_obstack_memory_used@@Base+0x21030>  // b.none
  47e164:	cmp	x0, #0x400, lsl #12
  47e168:	b.eq	47e1bc <_obstack_memory_used@@Base+0x2107c>  // b.none
  47e16c:	b	47e278 <_obstack_memory_used@@Base+0x21138>
  47e170:	ldr	x0, [sp, #568]
  47e174:	and	x0, x0, #0xf
  47e178:	cmp	x0, #0x4
  47e17c:	b.eq	47e274 <_obstack_memory_used@@Base+0x21134>  // b.none
  47e180:	ldr	x0, [sp, #568]
  47e184:	add	x0, x0, #0x4
  47e188:	str	x0, [sp, #168]
  47e18c:	ldr	x1, [sp, #168]
  47e190:	ldr	x0, [sp, #568]
  47e194:	cmp	x1, x0
  47e198:	cset	w0, cc  // cc = lo, ul, last
  47e19c:	and	w0, w0, #0xff
  47e1a0:	and	x0, x0, #0xff
  47e1a4:	ldr	x1, [sp, #560]
  47e1a8:	add	x0, x1, x0
  47e1ac:	str	x0, [sp, #560]
  47e1b0:	ldr	x0, [sp, #168]
  47e1b4:	str	x0, [sp, #568]
  47e1b8:	b	47e274 <_obstack_memory_used@@Base+0x21134>
  47e1bc:	ldr	x0, [sp, #656]
  47e1c0:	cmp	x0, #0x0
  47e1c4:	b.ne	47e274 <_obstack_memory_used@@Base+0x21134>  // b.any
  47e1c8:	ldr	x0, [sp, #568]
  47e1cc:	and	x0, x0, #0x7
  47e1d0:	cmp	x0, #0x0
  47e1d4:	b.eq	47e274 <_obstack_memory_used@@Base+0x21134>  // b.none
  47e1d8:	ldr	x0, [sp, #568]
  47e1dc:	add	x0, x0, #0x8
  47e1e0:	str	x0, [sp, #176]
  47e1e4:	ldr	x1, [sp, #176]
  47e1e8:	ldr	x0, [sp, #568]
  47e1ec:	cmp	x1, x0
  47e1f0:	cset	w0, cc  // cc = lo, ul, last
  47e1f4:	and	w0, w0, #0xff
  47e1f8:	and	x0, x0, #0xff
  47e1fc:	ldr	x1, [sp, #560]
  47e200:	add	x0, x1, x0
  47e204:	str	x0, [sp, #560]
  47e208:	ldr	x0, [sp, #176]
  47e20c:	str	x0, [sp, #568]
  47e210:	b	47e274 <_obstack_memory_used@@Base+0x21134>
  47e214:	ldr	x0, [sp, #656]
  47e218:	cmp	x0, #0x0
  47e21c:	b.eq	47e274 <_obstack_memory_used@@Base+0x21134>  // b.none
  47e220:	ldr	x0, [sp, #568]
  47e224:	and	x0, x0, #0x7
  47e228:	cmp	x0, #0x0
  47e22c:	b.eq	47e274 <_obstack_memory_used@@Base+0x21134>  // b.none
  47e230:	ldr	x0, [sp, #568]
  47e234:	add	x0, x0, #0x8
  47e238:	str	x0, [sp, #184]
  47e23c:	ldr	x1, [sp, #184]
  47e240:	ldr	x0, [sp, #568]
  47e244:	cmp	x1, x0
  47e248:	cset	w0, cc  // cc = lo, ul, last
  47e24c:	and	w0, w0, #0xff
  47e250:	and	x0, x0, #0xff
  47e254:	ldr	x1, [sp, #560]
  47e258:	add	x0, x1, x0
  47e25c:	str	x0, [sp, #560]
  47e260:	ldr	x0, [sp, #184]
  47e264:	str	x0, [sp, #568]
  47e268:	b	47e274 <_obstack_memory_used@@Base+0x21134>
  47e26c:	nop
  47e270:	b	47e278 <_obstack_memory_used@@Base+0x21138>
  47e274:	nop
  47e278:	ldr	x0, [sp, #560]
  47e27c:	and	x0, x0, #0x8000000000000
  47e280:	cmp	x0, #0x0
  47e284:	b.eq	47e2a8 <_obstack_memory_used@@Base+0x21168>  // b.none
  47e288:	mov	x0, #0x1                   	// #1
  47e28c:	str	x0, [sp, #576]
  47e290:	str	xzr, [sp, #568]
  47e294:	str	xzr, [sp, #560]
  47e298:	ldr	w0, [sp, #596]
  47e29c:	orr	w0, w0, #0x10
  47e2a0:	str	w0, [sp, #596]
  47e2a4:	b	47e2d0 <_obstack_memory_used@@Base+0x21190>
  47e2a8:	str	xzr, [sp, #576]
  47e2ac:	ldr	x0, [sp, #568]
  47e2b0:	lsr	x1, x0, #3
  47e2b4:	ldr	x0, [sp, #560]
  47e2b8:	lsl	x0, x0, #61
  47e2bc:	orr	x0, x1, x0
  47e2c0:	str	x0, [sp, #568]
  47e2c4:	ldr	x0, [sp, #560]
  47e2c8:	lsr	x0, x0, #3
  47e2cc:	str	x0, [sp, #560]
  47e2d0:	ldr	w0, [sp, #216]
  47e2d4:	cmp	w0, #0x0
  47e2d8:	b.eq	47e4e4 <_obstack_memory_used@@Base+0x213a4>  // b.none
  47e2dc:	ldr	w0, [sp, #596]
  47e2e0:	and	w0, w0, #0x10
  47e2e4:	cmp	w0, #0x0
  47e2e8:	b.ne	47e2fc <_obstack_memory_used@@Base+0x211bc>  // b.any
  47e2ec:	ldr	x0, [sp, #488]
  47e2f0:	and	x0, x0, #0x800
  47e2f4:	cmp	x0, #0x0
  47e2f8:	b.eq	47e4e4 <_obstack_memory_used@@Base+0x213a4>  // b.none
  47e2fc:	ldr	w0, [sp, #596]
  47e300:	orr	w0, w0, #0x8
  47e304:	str	w0, [sp, #596]
  47e308:	b	47e4e4 <_obstack_memory_used@@Base+0x213a4>
  47e30c:	str	xzr, [sp, #576]
  47e310:	ldr	x1, [sp, #560]
  47e314:	ldr	x0, [sp, #568]
  47e318:	orr	x0, x1, x0
  47e31c:	cmp	x0, #0x0
  47e320:	b.eq	47e49c <_obstack_memory_used@@Base+0x2135c>  // b.none
  47e324:	mov	x0, #0x1                   	// #1
  47e328:	str	x0, [sp, #568]
  47e32c:	str	xzr, [sp, #560]
  47e330:	ldr	x0, [sp, #568]
  47e334:	and	x0, x0, #0x7
  47e338:	cmp	x0, #0x0
  47e33c:	b.eq	47e484 <_obstack_memory_used@@Base+0x21344>  // b.none
  47e340:	ldr	w0, [sp, #596]
  47e344:	orr	w0, w0, #0x10
  47e348:	str	w0, [sp, #596]
  47e34c:	ldr	x0, [sp, #488]
  47e350:	and	x0, x0, #0xc00000
  47e354:	cmp	x0, #0xc00, lsl #12
  47e358:	b.eq	47e48c <_obstack_memory_used@@Base+0x2134c>  // b.none
  47e35c:	cmp	x0, #0xc00, lsl #12
  47e360:	b.hi	47e490 <_obstack_memory_used@@Base+0x21350>  // b.pmore
  47e364:	cmp	x0, #0x800, lsl #12
  47e368:	b.eq	47e42c <_obstack_memory_used@@Base+0x212ec>  // b.none
  47e36c:	cmp	x0, #0x800, lsl #12
  47e370:	b.hi	47e490 <_obstack_memory_used@@Base+0x21350>  // b.pmore
  47e374:	cmp	x0, #0x0
  47e378:	b.eq	47e388 <_obstack_memory_used@@Base+0x21248>  // b.none
  47e37c:	cmp	x0, #0x400, lsl #12
  47e380:	b.eq	47e3d4 <_obstack_memory_used@@Base+0x21294>  // b.none
  47e384:	b	47e490 <_obstack_memory_used@@Base+0x21350>
  47e388:	ldr	x0, [sp, #568]
  47e38c:	and	x0, x0, #0xf
  47e390:	cmp	x0, #0x4
  47e394:	b.eq	47e48c <_obstack_memory_used@@Base+0x2134c>  // b.none
  47e398:	ldr	x0, [sp, #568]
  47e39c:	add	x0, x0, #0x4
  47e3a0:	str	x0, [sp, #192]
  47e3a4:	ldr	x1, [sp, #192]
  47e3a8:	ldr	x0, [sp, #568]
  47e3ac:	cmp	x1, x0
  47e3b0:	cset	w0, cc  // cc = lo, ul, last
  47e3b4:	and	w0, w0, #0xff
  47e3b8:	and	x0, x0, #0xff
  47e3bc:	ldr	x1, [sp, #560]
  47e3c0:	add	x0, x1, x0
  47e3c4:	str	x0, [sp, #560]
  47e3c8:	ldr	x0, [sp, #192]
  47e3cc:	str	x0, [sp, #568]
  47e3d0:	b	47e48c <_obstack_memory_used@@Base+0x2134c>
  47e3d4:	ldr	x0, [sp, #656]
  47e3d8:	cmp	x0, #0x0
  47e3dc:	b.ne	47e48c <_obstack_memory_used@@Base+0x2134c>  // b.any
  47e3e0:	ldr	x0, [sp, #568]
  47e3e4:	and	x0, x0, #0x7
  47e3e8:	cmp	x0, #0x0
  47e3ec:	b.eq	47e48c <_obstack_memory_used@@Base+0x2134c>  // b.none
  47e3f0:	ldr	x0, [sp, #568]
  47e3f4:	add	x0, x0, #0x8
  47e3f8:	str	x0, [sp, #200]
  47e3fc:	ldr	x1, [sp, #200]
  47e400:	ldr	x0, [sp, #568]
  47e404:	cmp	x1, x0
  47e408:	cset	w0, cc  // cc = lo, ul, last
  47e40c:	and	w0, w0, #0xff
  47e410:	and	x0, x0, #0xff
  47e414:	ldr	x1, [sp, #560]
  47e418:	add	x0, x1, x0
  47e41c:	str	x0, [sp, #560]
  47e420:	ldr	x0, [sp, #200]
  47e424:	str	x0, [sp, #568]
  47e428:	b	47e48c <_obstack_memory_used@@Base+0x2134c>
  47e42c:	ldr	x0, [sp, #656]
  47e430:	cmp	x0, #0x0
  47e434:	b.eq	47e48c <_obstack_memory_used@@Base+0x2134c>  // b.none
  47e438:	ldr	x0, [sp, #568]
  47e43c:	and	x0, x0, #0x7
  47e440:	cmp	x0, #0x0
  47e444:	b.eq	47e48c <_obstack_memory_used@@Base+0x2134c>  // b.none
  47e448:	ldr	x0, [sp, #568]
  47e44c:	add	x0, x0, #0x8
  47e450:	str	x0, [sp, #208]
  47e454:	ldr	x1, [sp, #208]
  47e458:	ldr	x0, [sp, #568]
  47e45c:	cmp	x1, x0
  47e460:	cset	w0, cc  // cc = lo, ul, last
  47e464:	and	w0, w0, #0xff
  47e468:	and	x0, x0, #0xff
  47e46c:	ldr	x1, [sp, #560]
  47e470:	add	x0, x1, x0
  47e474:	str	x0, [sp, #560]
  47e478:	ldr	x0, [sp, #208]
  47e47c:	str	x0, [sp, #568]
  47e480:	b	47e48c <_obstack_memory_used@@Base+0x2134c>
  47e484:	nop
  47e488:	b	47e490 <_obstack_memory_used@@Base+0x21350>
  47e48c:	nop
  47e490:	ldr	x0, [sp, #568]
  47e494:	lsr	x0, x0, #3
  47e498:	str	x0, [sp, #568]
  47e49c:	ldr	w0, [sp, #596]
  47e4a0:	orr	w0, w0, #0x8
  47e4a4:	str	w0, [sp, #596]
  47e4a8:	b	47e4e4 <_obstack_memory_used@@Base+0x213a4>
  47e4ac:	str	xzr, [sp, #576]
  47e4b0:	str	xzr, [sp, #568]
  47e4b4:	str	xzr, [sp, #560]
  47e4b8:	b	47e4e4 <_obstack_memory_used@@Base+0x213a4>
  47e4bc:	mov	x0, #0x7fff                	// #32767
  47e4c0:	str	x0, [sp, #576]
  47e4c4:	str	xzr, [sp, #568]
  47e4c8:	str	xzr, [sp, #560]
  47e4cc:	b	47e4e4 <_obstack_memory_used@@Base+0x213a4>
  47e4d0:	mov	x0, #0x7fff                	// #32767
  47e4d4:	str	x0, [sp, #576]
  47e4d8:	ldr	x0, [sp, #560]
  47e4dc:	orr	x0, x0, #0x800000000000
  47e4e0:	str	x0, [sp, #560]
  47e4e4:	nop
  47e4e8:	ldr	x0, [sp, #568]
  47e4ec:	str	x0, [sp, #80]
  47e4f0:	ldr	x0, [sp, #560]
  47e4f4:	and	x1, x0, #0xffffffffffff
  47e4f8:	ldr	x0, [sp, #88]
  47e4fc:	bfxil	x0, x1, #0, #48
  47e500:	str	x0, [sp, #88]
  47e504:	ldr	x0, [sp, #576]
  47e508:	and	w0, w0, #0x7fff
  47e50c:	and	w1, w0, #0xffff
  47e510:	ldrh	w0, [sp, #94]
  47e514:	bfxil	w0, w1, #0, #15
  47e518:	strh	w0, [sp, #94]
  47e51c:	ldr	x0, [sp, #656]
  47e520:	and	w0, w0, #0x1
  47e524:	and	w1, w0, #0xff
  47e528:	ldrb	w0, [sp, #95]
  47e52c:	bfi	w0, w1, #7, #1
  47e530:	strb	w0, [sp, #95]
  47e534:	ldr	q0, [sp, #80]
  47e538:	str	q0, [sp, #128]
  47e53c:	ldrsw	x0, [sp, #596]
  47e540:	cmp	x0, #0x0
  47e544:	b.eq	47e550 <_obstack_memory_used@@Base+0x21410>  // b.none
  47e548:	ldr	w0, [sp, #596]
  47e54c:	bl	47eae8 <_obstack_memory_used@@Base+0x219a8>
  47e550:	ldr	q0, [sp, #128]
  47e554:	ldp	x29, x30, [sp]
  47e558:	add	sp, sp, #0x2a0
  47e55c:	ret
  47e560:	sub	sp, sp, #0x60
  47e564:	str	w0, [sp, #12]
  47e568:	ldr	w0, [sp, #12]
  47e56c:	cmp	w0, #0x0
  47e570:	b.eq	47e668 <_obstack_memory_used@@Base+0x21528>  // b.none
  47e574:	ldr	w0, [sp, #12]
  47e578:	str	w0, [sp, #36]
  47e57c:	str	xzr, [sp, #40]
  47e580:	ldr	x0, [sp, #40]
  47e584:	cmp	x0, #0x0
  47e588:	b.eq	47e598 <_obstack_memory_used@@Base+0x21458>  // b.none
  47e58c:	ldr	w0, [sp, #36]
  47e590:	neg	w0, w0
  47e594:	str	w0, [sp, #36]
  47e598:	ldr	w0, [sp, #36]
  47e59c:	clz	x0, x0
  47e5a0:	str	w0, [sp, #52]
  47e5a4:	mov	w1, #0x403e                	// #16446
  47e5a8:	ldr	w0, [sp, #52]
  47e5ac:	sub	w0, w1, w0
  47e5b0:	sxtw	x0, w0
  47e5b4:	str	x0, [sp, #56]
  47e5b8:	ldr	w0, [sp, #36]
  47e5bc:	str	x0, [sp, #64]
  47e5c0:	str	xzr, [sp, #72]
  47e5c4:	mov	x1, #0x406f                	// #16495
  47e5c8:	ldr	x0, [sp, #56]
  47e5cc:	sub	x0, x1, x0
  47e5d0:	cmp	x0, #0x0
  47e5d4:	b.le	47e678 <_obstack_memory_used@@Base+0x21538>
  47e5d8:	mov	x1, #0x406f                	// #16495
  47e5dc:	ldr	x0, [sp, #56]
  47e5e0:	sub	x0, x1, x0
  47e5e4:	cmp	x0, #0x3f
  47e5e8:	b.gt	47e644 <_obstack_memory_used@@Base+0x21504>
  47e5ec:	ldr	x0, [sp, #56]
  47e5f0:	mov	w1, w0
  47e5f4:	mov	w0, #0x406f                	// #16495
  47e5f8:	sub	w0, w0, w1
  47e5fc:	ldr	x1, [sp, #72]
  47e600:	lsl	x1, x1, x0
  47e604:	ldr	x0, [sp, #56]
  47e608:	mov	w2, w0
  47e60c:	mov	w0, #0xffffbfd1            	// #-16431
  47e610:	add	w0, w2, w0
  47e614:	ldr	x2, [sp, #64]
  47e618:	lsr	x0, x2, x0
  47e61c:	orr	x0, x1, x0
  47e620:	str	x0, [sp, #72]
  47e624:	ldr	x0, [sp, #56]
  47e628:	mov	w1, w0
  47e62c:	mov	w0, #0x406f                	// #16495
  47e630:	sub	w0, w0, w1
  47e634:	ldr	x1, [sp, #64]
  47e638:	lsl	x0, x1, x0
  47e63c:	str	x0, [sp, #64]
  47e640:	b	47e678 <_obstack_memory_used@@Base+0x21538>
  47e644:	ldr	x0, [sp, #56]
  47e648:	mov	w1, w0
  47e64c:	mov	w0, #0x402f                	// #16431
  47e650:	sub	w0, w0, w1
  47e654:	ldr	x1, [sp, #64]
  47e658:	lsl	x0, x1, x0
  47e65c:	str	x0, [sp, #72]
  47e660:	str	xzr, [sp, #64]
  47e664:	b	47e678 <_obstack_memory_used@@Base+0x21538>
  47e668:	str	xzr, [sp, #40]
  47e66c:	str	xzr, [sp, #56]
  47e670:	str	xzr, [sp, #64]
  47e674:	str	xzr, [sp, #72]
  47e678:	ldr	x0, [sp, #64]
  47e67c:	str	x0, [sp, #16]
  47e680:	ldr	x0, [sp, #72]
  47e684:	and	x1, x0, #0xffffffffffff
  47e688:	ldr	x0, [sp, #24]
  47e68c:	bfxil	x0, x1, #0, #48
  47e690:	str	x0, [sp, #24]
  47e694:	ldr	x0, [sp, #56]
  47e698:	and	w0, w0, #0x7fff
  47e69c:	and	w1, w0, #0xffff
  47e6a0:	ldrh	w0, [sp, #30]
  47e6a4:	bfxil	w0, w1, #0, #15
  47e6a8:	strh	w0, [sp, #30]
  47e6ac:	ldr	x0, [sp, #40]
  47e6b0:	and	w0, w0, #0x1
  47e6b4:	and	w1, w0, #0xff
  47e6b8:	ldrb	w0, [sp, #31]
  47e6bc:	bfi	w0, w1, #7, #1
  47e6c0:	strb	w0, [sp, #31]
  47e6c4:	ldr	q0, [sp, #16]
  47e6c8:	str	q0, [sp, #80]
  47e6cc:	ldr	q0, [sp, #80]
  47e6d0:	add	sp, sp, #0x60
  47e6d4:	ret
  47e6d8:	stp	x29, x30, [sp, #-112]!
  47e6dc:	mov	x29, sp
  47e6e0:	str	q0, [sp, #16]
  47e6e4:	str	wzr, [sp, #104]
  47e6e8:	str	xzr, [sp, #80]
  47e6ec:	mrs	x0, fpcr
  47e6f0:	str	x0, [sp, #80]
  47e6f4:	ldr	q0, [sp, #16]
  47e6f8:	str	q0, [sp, #32]
  47e6fc:	ldr	x0, [sp, #32]
  47e700:	str	x0, [sp, #96]
  47e704:	ldr	x0, [sp, #40]
  47e708:	ubfx	x0, x0, #0, #48
  47e70c:	str	x0, [sp, #72]
  47e710:	ldrh	w0, [sp, #46]
  47e714:	ubfx	x0, x0, #0, #15
  47e718:	and	w0, w0, #0xffff
  47e71c:	and	x0, x0, #0xffff
  47e720:	str	x0, [sp, #64]
  47e724:	ldrb	w0, [sp, #47]
  47e728:	ubfx	x0, x0, #7, #1
  47e72c:	and	w0, w0, #0xff
  47e730:	and	x0, x0, #0xff
  47e734:	str	x0, [sp, #56]
  47e738:	ldr	x1, [sp, #64]
  47e73c:	mov	x0, #0x3ffe                	// #16382
  47e740:	cmp	x1, x0
  47e744:	b.gt	47e78c <_obstack_memory_used@@Base+0x2164c>
  47e748:	str	xzr, [sp, #88]
  47e74c:	ldr	x0, [sp, #64]
  47e750:	cmp	x0, #0x0
  47e754:	b.ne	47e77c <_obstack_memory_used@@Base+0x2163c>  // b.any
  47e758:	ldr	x1, [sp, #72]
  47e75c:	ldr	x0, [sp, #96]
  47e760:	orr	x0, x1, x0
  47e764:	cmp	x0, #0x0
  47e768:	b.eq	47e950 <_obstack_memory_used@@Base+0x21810>  // b.none
  47e76c:	ldr	w0, [sp, #104]
  47e770:	orr	w0, w0, #0x10
  47e774:	str	w0, [sp, #104]
  47e778:	b	47e950 <_obstack_memory_used@@Base+0x21810>
  47e77c:	ldr	w0, [sp, #104]
  47e780:	orr	w0, w0, #0x10
  47e784:	str	w0, [sp, #104]
  47e788:	b	47e950 <_obstack_memory_used@@Base+0x21810>
  47e78c:	ldr	x0, [sp, #56]
  47e790:	cmp	x0, #0x0
  47e794:	b.eq	47e7a0 <_obstack_memory_used@@Base+0x21660>  // b.none
  47e798:	mov	x0, #0x403e                	// #16446
  47e79c:	b	47e7a4 <_obstack_memory_used@@Base+0x21664>
  47e7a0:	mov	x0, #0x403f                	// #16447
  47e7a4:	ldr	x1, [sp, #64]
  47e7a8:	cmp	x0, x1
  47e7ac:	b.le	47e7bc <_obstack_memory_used@@Base+0x2167c>
  47e7b0:	ldr	x0, [sp, #56]
  47e7b4:	cmp	x0, #0x0
  47e7b8:	b.eq	47e7e8 <_obstack_memory_used@@Base+0x216a8>  // b.none
  47e7bc:	str	xzr, [sp, #88]
  47e7c0:	ldr	x0, [sp, #56]
  47e7c4:	cmp	x0, #0x0
  47e7c8:	b.ne	47e7d8 <_obstack_memory_used@@Base+0x21698>  // b.any
  47e7cc:	ldr	x0, [sp, #88]
  47e7d0:	mvn	x0, x0
  47e7d4:	str	x0, [sp, #88]
  47e7d8:	ldr	w0, [sp, #104]
  47e7dc:	orr	w0, w0, #0x1
  47e7e0:	str	w0, [sp, #104]
  47e7e4:	b	47e950 <_obstack_memory_used@@Base+0x21810>
  47e7e8:	str	wzr, [sp, #108]
  47e7ec:	ldr	x0, [sp, #72]
  47e7f0:	orr	x0, x0, #0x1000000000000
  47e7f4:	str	x0, [sp, #72]
  47e7f8:	ldr	x1, [sp, #64]
  47e7fc:	mov	x0, #0x406e                	// #16494
  47e800:	cmp	x1, x0
  47e804:	b.le	47e830 <_obstack_memory_used@@Base+0x216f0>
  47e808:	ldr	x0, [sp, #96]
  47e80c:	str	x0, [sp, #88]
  47e810:	ldr	x0, [sp, #64]
  47e814:	mov	w1, w0
  47e818:	mov	w0, #0xffffbf91            	// #-16495
  47e81c:	add	w0, w1, w0
  47e820:	ldr	x1, [sp, #88]
  47e824:	lsl	x0, x1, x0
  47e828:	str	x0, [sp, #88]
  47e82c:	b	47e938 <_obstack_memory_used@@Base+0x217f8>
  47e830:	mov	x1, #0x406f                	// #16495
  47e834:	ldr	x0, [sp, #64]
  47e838:	sub	x0, x1, x0
  47e83c:	cmp	x0, #0x3f
  47e840:	b.gt	47e8c4 <_obstack_memory_used@@Base+0x21784>
  47e844:	ldr	x0, [sp, #64]
  47e848:	mov	w1, w0
  47e84c:	mov	w0, #0xffffbfd1            	// #-16431
  47e850:	add	w0, w1, w0
  47e854:	ldr	x1, [sp, #96]
  47e858:	lsl	x0, x1, x0
  47e85c:	cmp	x0, #0x0
  47e860:	cset	w0, ne  // ne = any
  47e864:	and	w0, w0, #0xff
  47e868:	str	w0, [sp, #108]
  47e86c:	ldr	x0, [sp, #64]
  47e870:	mov	w1, w0
  47e874:	mov	w0, #0xffffbfd1            	// #-16431
  47e878:	add	w0, w1, w0
  47e87c:	ldr	x1, [sp, #72]
  47e880:	lsl	x1, x1, x0
  47e884:	ldr	x0, [sp, #64]
  47e888:	mov	w2, w0
  47e88c:	mov	w0, #0x406f                	// #16495
  47e890:	sub	w0, w0, w2
  47e894:	ldr	x2, [sp, #96]
  47e898:	lsr	x0, x2, x0
  47e89c:	orr	x0, x1, x0
  47e8a0:	str	x0, [sp, #96]
  47e8a4:	ldr	x0, [sp, #64]
  47e8a8:	mov	w1, w0
  47e8ac:	mov	w0, #0x406f                	// #16495
  47e8b0:	sub	w0, w0, w1
  47e8b4:	ldr	x1, [sp, #72]
  47e8b8:	lsr	x0, x1, x0
  47e8bc:	str	x0, [sp, #72]
  47e8c0:	b	47e930 <_obstack_memory_used@@Base+0x217f0>
  47e8c4:	mov	x1, #0x406f                	// #16495
  47e8c8:	ldr	x0, [sp, #64]
  47e8cc:	sub	x0, x1, x0
  47e8d0:	cmp	x0, #0x40
  47e8d4:	b.eq	47e8f4 <_obstack_memory_used@@Base+0x217b4>  // b.none
  47e8d8:	ldr	x0, [sp, #64]
  47e8dc:	mov	w1, w0
  47e8e0:	mov	w0, #0xffffc011            	// #-16367
  47e8e4:	add	w0, w1, w0
  47e8e8:	ldr	x1, [sp, #72]
  47e8ec:	lsl	x0, x1, x0
  47e8f0:	b	47e8f8 <_obstack_memory_used@@Base+0x217b8>
  47e8f4:	mov	x0, #0x0                   	// #0
  47e8f8:	ldr	x1, [sp, #96]
  47e8fc:	orr	x0, x0, x1
  47e900:	cmp	x0, #0x0
  47e904:	cset	w0, ne  // ne = any
  47e908:	and	w0, w0, #0xff
  47e90c:	str	w0, [sp, #108]
  47e910:	ldr	x0, [sp, #64]
  47e914:	mov	w1, w0
  47e918:	mov	w0, #0x402f                	// #16431
  47e91c:	sub	w0, w0, w1
  47e920:	ldr	x1, [sp, #72]
  47e924:	lsr	x0, x1, x0
  47e928:	str	x0, [sp, #96]
  47e92c:	str	xzr, [sp, #72]
  47e930:	ldr	x0, [sp, #96]
  47e934:	str	x0, [sp, #88]
  47e938:	ldr	w0, [sp, #108]
  47e93c:	cmp	w0, #0x0
  47e940:	b.eq	47e950 <_obstack_memory_used@@Base+0x21810>  // b.none
  47e944:	ldr	w0, [sp, #104]
  47e948:	orr	w0, w0, #0x10
  47e94c:	str	w0, [sp, #104]
  47e950:	ldrsw	x0, [sp, #104]
  47e954:	cmp	x0, #0x0
  47e958:	b.eq	47e964 <_obstack_memory_used@@Base+0x21824>  // b.none
  47e95c:	ldr	w0, [sp, #104]
  47e960:	bl	47eae8 <_obstack_memory_used@@Base+0x219a8>
  47e964:	ldr	x0, [sp, #88]
  47e968:	ldp	x29, x30, [sp], #112
  47e96c:	ret
  47e970:	sub	sp, sp, #0x60
  47e974:	str	x0, [sp, #8]
  47e978:	ldr	x0, [sp, #8]
  47e97c:	cmp	x0, #0x0
  47e980:	b.eq	47ea78 <_obstack_memory_used@@Base+0x21938>  // b.none
  47e984:	ldr	x0, [sp, #8]
  47e988:	str	x0, [sp, #32]
  47e98c:	str	xzr, [sp, #40]
  47e990:	ldr	x0, [sp, #40]
  47e994:	cmp	x0, #0x0
  47e998:	b.eq	47e9a8 <_obstack_memory_used@@Base+0x21868>  // b.none
  47e99c:	ldr	x0, [sp, #32]
  47e9a0:	neg	x0, x0
  47e9a4:	str	x0, [sp, #32]
  47e9a8:	ldr	x0, [sp, #32]
  47e9ac:	clz	x0, x0
  47e9b0:	str	w0, [sp, #52]
  47e9b4:	mov	w1, #0x403e                	// #16446
  47e9b8:	ldr	w0, [sp, #52]
  47e9bc:	sub	w0, w1, w0
  47e9c0:	sxtw	x0, w0
  47e9c4:	str	x0, [sp, #56]
  47e9c8:	ldr	x0, [sp, #32]
  47e9cc:	str	x0, [sp, #64]
  47e9d0:	str	xzr, [sp, #72]
  47e9d4:	mov	x1, #0x406f                	// #16495
  47e9d8:	ldr	x0, [sp, #56]
  47e9dc:	sub	x0, x1, x0
  47e9e0:	cmp	x0, #0x0
  47e9e4:	b.le	47ea88 <_obstack_memory_used@@Base+0x21948>
  47e9e8:	mov	x1, #0x406f                	// #16495
  47e9ec:	ldr	x0, [sp, #56]
  47e9f0:	sub	x0, x1, x0
  47e9f4:	cmp	x0, #0x3f
  47e9f8:	b.gt	47ea54 <_obstack_memory_used@@Base+0x21914>
  47e9fc:	ldr	x0, [sp, #56]
  47ea00:	mov	w1, w0
  47ea04:	mov	w0, #0x406f                	// #16495
  47ea08:	sub	w0, w0, w1
  47ea0c:	ldr	x1, [sp, #72]
  47ea10:	lsl	x1, x1, x0
  47ea14:	ldr	x0, [sp, #56]
  47ea18:	mov	w2, w0
  47ea1c:	mov	w0, #0xffffbfd1            	// #-16431
  47ea20:	add	w0, w2, w0
  47ea24:	ldr	x2, [sp, #64]
  47ea28:	lsr	x0, x2, x0
  47ea2c:	orr	x0, x1, x0
  47ea30:	str	x0, [sp, #72]
  47ea34:	ldr	x0, [sp, #56]
  47ea38:	mov	w1, w0
  47ea3c:	mov	w0, #0x406f                	// #16495
  47ea40:	sub	w0, w0, w1
  47ea44:	ldr	x1, [sp, #64]
  47ea48:	lsl	x0, x1, x0
  47ea4c:	str	x0, [sp, #64]
  47ea50:	b	47ea88 <_obstack_memory_used@@Base+0x21948>
  47ea54:	ldr	x0, [sp, #56]
  47ea58:	mov	w1, w0
  47ea5c:	mov	w0, #0x402f                	// #16431
  47ea60:	sub	w0, w0, w1
  47ea64:	ldr	x1, [sp, #64]
  47ea68:	lsl	x0, x1, x0
  47ea6c:	str	x0, [sp, #72]
  47ea70:	str	xzr, [sp, #64]
  47ea74:	b	47ea88 <_obstack_memory_used@@Base+0x21948>
  47ea78:	str	xzr, [sp, #40]
  47ea7c:	str	xzr, [sp, #56]
  47ea80:	str	xzr, [sp, #64]
  47ea84:	str	xzr, [sp, #72]
  47ea88:	ldr	x0, [sp, #64]
  47ea8c:	str	x0, [sp, #16]
  47ea90:	ldr	x0, [sp, #72]
  47ea94:	and	x1, x0, #0xffffffffffff
  47ea98:	ldr	x0, [sp, #24]
  47ea9c:	bfxil	x0, x1, #0, #48
  47eaa0:	str	x0, [sp, #24]
  47eaa4:	ldr	x0, [sp, #56]
  47eaa8:	and	w0, w0, #0x7fff
  47eaac:	and	w1, w0, #0xffff
  47eab0:	ldrh	w0, [sp, #30]
  47eab4:	bfxil	w0, w1, #0, #15
  47eab8:	strh	w0, [sp, #30]
  47eabc:	ldr	x0, [sp, #40]
  47eac0:	and	w0, w0, #0x1
  47eac4:	and	w1, w0, #0xff
  47eac8:	ldrb	w0, [sp, #31]
  47eacc:	bfi	w0, w1, #7, #1
  47ead0:	strb	w0, [sp, #31]
  47ead4:	ldr	q0, [sp, #16]
  47ead8:	str	q0, [sp, #80]
  47eadc:	ldr	q0, [sp, #80]
  47eae0:	add	sp, sp, #0x60
  47eae4:	ret
  47eae8:	sub	sp, sp, #0x30
  47eaec:	str	w0, [sp, #12]
  47eaf0:	mov	w0, #0x7f7fffff            	// #2139095039
  47eaf4:	fmov	s0, w0
  47eaf8:	str	s0, [sp, #44]
  47eafc:	movi	v0.2s, #0x80, lsl #16
  47eb00:	str	s0, [sp, #40]
  47eb04:	mov	w0, #0xc5ae                	// #50606
  47eb08:	movk	w0, #0x749d, lsl #16
  47eb0c:	fmov	s0, w0
  47eb10:	str	s0, [sp, #36]
  47eb14:	str	wzr, [sp, #32]
  47eb18:	fmov	s0, #1.000000000000000000e+00
  47eb1c:	str	s0, [sp, #28]
  47eb20:	ldr	w0, [sp, #12]
  47eb24:	and	w0, w0, #0x1
  47eb28:	cmp	w0, #0x0
  47eb2c:	b.eq	47eb40 <_obstack_memory_used@@Base+0x21a00>  // b.none
  47eb30:	ldr	s1, [sp, #32]
  47eb34:	fdiv	s0, s1, s1
  47eb38:	mrs	x0, fpsr
  47eb3c:	str	w0, [sp, #24]
  47eb40:	ldr	w0, [sp, #12]
  47eb44:	and	w0, w0, #0x2
  47eb48:	cmp	w0, #0x0
  47eb4c:	b.eq	47eb64 <_obstack_memory_used@@Base+0x21a24>  // b.none
  47eb50:	ldr	s1, [sp, #28]
  47eb54:	ldr	s2, [sp, #32]
  47eb58:	fdiv	s0, s1, s2
  47eb5c:	mrs	x0, fpsr
  47eb60:	str	w0, [sp, #24]
  47eb64:	ldr	w0, [sp, #12]
  47eb68:	and	w0, w0, #0x4
  47eb6c:	cmp	w0, #0x0
  47eb70:	b.eq	47eb88 <_obstack_memory_used@@Base+0x21a48>  // b.none
  47eb74:	ldr	s1, [sp, #44]
  47eb78:	ldr	s2, [sp, #36]
  47eb7c:	fadd	s0, s1, s2
  47eb80:	mrs	x0, fpsr
  47eb84:	str	w0, [sp, #24]
  47eb88:	ldr	w0, [sp, #12]
  47eb8c:	and	w0, w0, #0x8
  47eb90:	cmp	w0, #0x0
  47eb94:	b.eq	47eba8 <_obstack_memory_used@@Base+0x21a68>  // b.none
  47eb98:	ldr	s1, [sp, #40]
  47eb9c:	fmul	s0, s1, s1
  47eba0:	mrs	x0, fpsr
  47eba4:	str	w0, [sp, #24]
  47eba8:	ldr	w0, [sp, #12]
  47ebac:	and	w0, w0, #0x10
  47ebb0:	cmp	w0, #0x0
  47ebb4:	b.eq	47ebcc <_obstack_memory_used@@Base+0x21a8c>  // b.none
  47ebb8:	ldr	s1, [sp, #44]
  47ebbc:	ldr	s2, [sp, #28]
  47ebc0:	fsub	s0, s1, s2
  47ebc4:	mrs	x0, fpsr
  47ebc8:	str	w0, [sp, #24]
  47ebcc:	nop
  47ebd0:	add	sp, sp, #0x30
  47ebd4:	ret
  47ebd8:	stp	x29, x30, [sp, #-64]!
  47ebdc:	mov	x29, sp
  47ebe0:	stp	x19, x20, [sp, #16]
  47ebe4:	adrp	x20, 4a9000 <_obstack_memory_used@@Base+0x4bec0>
  47ebe8:	add	x20, x20, #0xde0
  47ebec:	stp	x21, x22, [sp, #32]
  47ebf0:	adrp	x21, 4a9000 <_obstack_memory_used@@Base+0x4bec0>
  47ebf4:	add	x21, x21, #0xdd8
  47ebf8:	sub	x20, x20, x21
  47ebfc:	mov	w22, w0
  47ec00:	stp	x23, x24, [sp, #48]
  47ec04:	mov	x23, x1
  47ec08:	mov	x24, x2
  47ec0c:	bl	403fd0 <mbrtowc@plt-0x40>
  47ec10:	cmp	xzr, x20, asr #3
  47ec14:	b.eq	47ec40 <_obstack_memory_used@@Base+0x21b00>  // b.none
  47ec18:	asr	x20, x20, #3
  47ec1c:	mov	x19, #0x0                   	// #0
  47ec20:	ldr	x3, [x21, x19, lsl #3]
  47ec24:	mov	x2, x24
  47ec28:	add	x19, x19, #0x1
  47ec2c:	mov	x1, x23
  47ec30:	mov	w0, w22
  47ec34:	blr	x3
  47ec38:	cmp	x20, x19
  47ec3c:	b.ne	47ec20 <_obstack_memory_used@@Base+0x21ae0>  // b.any
  47ec40:	ldp	x19, x20, [sp, #16]
  47ec44:	ldp	x21, x22, [sp, #32]
  47ec48:	ldp	x23, x24, [sp, #48]
  47ec4c:	ldp	x29, x30, [sp], #64
  47ec50:	ret
  47ec54:	nop
  47ec58:	ret
  47ec5c:	nop
  47ec60:	mov	x2, x1
  47ec64:	mov	x1, x0
  47ec68:	mov	w0, #0x0                   	// #0
  47ec6c:	b	404c10 <__xstat@plt>
  47ec70:	mov	x2, x1
  47ec74:	mov	w1, w0
  47ec78:	mov	w0, #0x0                   	// #0
  47ec7c:	b	404a70 <__fxstat@plt>
  47ec80:	mov	x4, x1
  47ec84:	mov	x5, x2
  47ec88:	mov	w1, w0
  47ec8c:	mov	x2, x4
  47ec90:	mov	w0, #0x0                   	// #0
  47ec94:	mov	w4, w3
  47ec98:	mov	x3, x5
  47ec9c:	b	404cf0 <__fxstatat@plt>
  47eca0:	stp	x29, x30, [sp, #-32]!
  47eca4:	mov	w5, w2
  47eca8:	mov	x4, x1
  47ecac:	mov	x29, sp
  47ecb0:	mov	w1, w0
  47ecb4:	mov	x2, x4
  47ecb8:	mov	w0, #0x0                   	// #0
  47ecbc:	add	x4, sp, #0x18
  47ecc0:	str	x3, [sp, #24]
  47ecc4:	mov	w3, w5
  47ecc8:	bl	404540 <__xmknodat@plt>
  47eccc:	ldp	x29, x30, [sp], #32
  47ecd0:	ret

Disassembly of section .fini:

000000000047ecd4 <.fini>:
  47ecd4:	stp	x29, x30, [sp, #-16]!
  47ecd8:	mov	x29, sp
  47ecdc:	ldp	x29, x30, [sp], #16
  47ece0:	ret
