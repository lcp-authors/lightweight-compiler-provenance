
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//disk.module_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_disk_write>:
   0:	stp	x29, x30, [sp, #-112]!
   4:	adrp	x6, 0 <grub_disk_write>
   8:	adrp	x5, 0 <grub_disk_write>
   c:	mov	x29, sp
  10:	stp	x19, x20, [sp, #16]
  14:	mov	x19, x0
  18:	adrp	x0, 0 <grub_disk_write>
  1c:	mov	x20, x3
  20:	stp	x21, x22, [sp, #32]
  24:	mov	x22, x2
  28:	ldr	x0, [x0]
  2c:	mov	x21, x4
  30:	ldr	x3, [x6]
  34:	stp	x23, x24, [sp, #48]
  38:	mov	x24, x1
  3c:	ldr	x2, [x5]
  40:	mov	w1, #0x3d                  	// #61
  44:	ldr	x4, [x19]
  48:	add	x23, x24, x22, lsr #9
  4c:	and	x22, x22, #0x1ff
  50:	bl	0 <grub_real_dprintf>
  54:	ldr	x0, [x19, #40]
  58:	cbz	x0, 3dc <grub_disk_write+0x3dc>
  5c:	add	x4, x22, #0x1ff
  60:	add	x4, x4, x20
  64:	lsr	x4, x4, #9
  68:	b	80 <grub_disk_write+0x80>
  6c:	cmp	x2, x4
  70:	b.cc	8c <grub_disk_write+0x8c>  // b.lo, b.ul, b.last
  74:	ldr	x0, [x0, #40]
  78:	add	x23, x23, x3
  7c:	cbz	x0, 3dc <grub_disk_write+0x3dc>
  80:	ldp	x3, x1, [x0, #8]
  84:	subs	x2, x1, x23
  88:	b.hi	6c <grub_disk_write+0x6c>  // b.pmore
  8c:	adrp	x1, 0 <grub_disk_write>
  90:	mov	w0, #0xb                   	// #11
  94:	ldr	x1, [x1]
  98:	bl	0 <grub_error>
  9c:	mov	w1, w0
  a0:	mov	w0, #0xffffffff            	// #-1
  a4:	cbnz	w1, 3c8 <grub_disk_write+0x3c8>
  a8:	ldr	w3, [x19, #24]
  ac:	stp	x25, x26, [sp, #64]
  b0:	sub	w24, w3, #0x9
  b4:	mov	x0, #0x1                   	// #1
  b8:	lsl	x24, x0, x24
  bc:	neg	x24, x24
  c0:	bic	w25, w23, w24
  c4:	and	x24, x24, x23
  c8:	add	w25, w22, w25, lsl #9
  cc:	cbz	x20, 3b8 <grub_disk_write+0x3b8>
  d0:	stp	x27, x28, [sp, #80]
  d4:	lsl	w0, w0, w3
  d8:	cbz	w25, 208 <grub_disk_write+0x208>
  dc:	nop
  e0:	bl	0 <grub_malloc>
  e4:	mov	x26, x0
  e8:	cbz	x0, 450 <grub_disk_write+0x450>
  ec:	ldr	w3, [x19, #24]
  f0:	mov	w23, #0x1                   	// #1
  f4:	ldr	x27, [x19, #40]
  f8:	str	xzr, [x19, #40]
  fc:	mov	x4, x0
 100:	mov	x1, x24
 104:	mov	x0, x19
 108:	mov	x2, #0x0                   	// #0
 10c:	lsl	w3, w23, w3
 110:	bl	0 <grub_disk_read>
 114:	cbnz	w0, 478 <grub_disk_write+0x478>
 118:	ldr	w22, [x19, #24]
 11c:	add	x0, x26, w25, uxtw
 120:	str	x27, [x19, #40]
 124:	mov	x1, x21
 128:	lsl	w22, w23, w22
 12c:	sub	w22, w22, w25
 130:	cmp	x20, x22
 134:	csel	x22, x20, x22, ls  // ls = plast
 138:	mov	x2, x22
 13c:	bl	0 <grub_memmove>
 140:	ldr	x5, [x19, #8]
 144:	adrp	x4, 0 <grub_disk_write>
 148:	ldr	x6, [x19, #32]
 14c:	mov	x2, #0xc57b                	// #50555
 150:	ldr	w3, [x5, #8]
 154:	movk	x2, #0x27, lsl #16
 158:	ldr	x25, [x4]
 15c:	mov	x0, #0xedb3                	// #60851
 160:	lsl	x4, x3, #19
 164:	ubfx	x1, x24, #6, #32
 168:	sub	x4, x4, x3
 16c:	movk	x0, #0x513c, lsl #16
 170:	movk	x0, #0x906c, lsl #32
 174:	and	x7, x24, #0xffffffffffffffc0
 178:	movk	x0, #0xc0, lsl #48
 17c:	madd	x2, x6, x2, x4
 180:	add	x1, x2, x1
 184:	umulh	x2, x1, x0
 188:	sub	x0, x1, x2
 18c:	add	x0, x2, x0, lsr #1
 190:	lsr	x0, x0, #9
 194:	lsl	x2, x0, #8
 198:	sub	x2, x2, x0
 19c:	add	x0, x0, x2, lsl #2
 1a0:	sub	x1, x1, x0
 1a4:	add	x1, x1, x1, lsl #2
 1a8:	lsl	x1, x1, #3
 1ac:	add	x27, x25, x1
 1b0:	ldr	w0, [x25, x1]
 1b4:	cmp	x3, x0
 1b8:	b.eq	374 <grub_disk_write+0x374>  // b.none
 1bc:	ldr	w1, [x19, #24]
 1c0:	mov	x3, x26
 1c4:	ldr	x4, [x5, #48]
 1c8:	sub	w1, w1, #0x9
 1cc:	mov	x0, x19
 1d0:	mov	x2, #0x1                   	// #1
 1d4:	lsr	x1, x24, x1
 1d8:	blr	x4
 1dc:	cbnz	w0, 3ac <grub_disk_write+0x3ac>
 1e0:	mov	x0, x26
 1e4:	bl	0 <grub_free>
 1e8:	ldr	w3, [x19, #24]
 1ec:	mov	w0, #0x1                   	// #1
 1f0:	add	x21, x21, x22
 1f4:	subs	x20, x20, x22
 1f8:	sub	w1, w3, #0x9
 1fc:	lsl	w0, w0, w1
 200:	add	x24, x24, x0
 204:	b.eq	41c <grub_disk_write+0x41c>  // b.none
 208:	mov	x22, #0xedb3                	// #60851
 20c:	mov	x26, #0xc57b                	// #50555
 210:	movk	x22, #0x513c, lsl #16
 214:	mov	w23, #0x1                   	// #1
 218:	movk	x22, #0x906c, lsl #32
 21c:	movk	x26, #0x27, lsl #16
 220:	movk	x22, #0xc0, lsl #48
 224:	lsl	w0, w23, w3
 228:	mov	w25, #0x0                   	// #0
 22c:	cmp	x0, x20
 230:	b.hi	e0 <grub_disk_write+0xe0>  // b.pmore
 234:	ldr	x4, [x19, #8]
 238:	mov	w2, #0xf                   	// #15
 23c:	ldr	w25, [x19, #28]
 240:	sub	w2, w2, w3
 244:	lsr	x0, x20, x3
 248:	sub	w1, w3, #0x9
 24c:	ldr	x4, [x4, #48]
 250:	lsl	w25, w25, w2
 254:	cmp	x25, x0
 258:	mov	x27, #0xffffffffffffffff    	// #-1
 25c:	csel	x25, x25, x0, ls  // ls = plast
 260:	lsl	x27, x27, x3
 264:	mov	x2, x25
 268:	and	x27, x27, x20
 26c:	mov	x3, x21
 270:	mov	x0, x19
 274:	lsr	x1, x24, x1
 278:	blr	x4
 27c:	cbnz	w0, 41c <grub_disk_write+0x41c>
 280:	sub	x28, x25, #0x1
 284:	cbz	x25, 360 <grub_disk_write+0x360>
 288:	adrp	x4, 0 <grub_disk_write>
 28c:	ldr	x25, [x4]
 290:	b	2ac <grub_disk_write+0x2ac>
 294:	ldr	w0, [x19, #24]
 298:	cmn	x28, #0x1
 29c:	sub	w0, w0, #0x9
 2a0:	lsl	w0, w23, w0
 2a4:	add	x24, x24, x0
 2a8:	b.eq	360 <grub_disk_write+0x360>  // b.none
 2ac:	ldr	x0, [x19, #8]
 2b0:	ubfx	x1, x24, #6, #32
 2b4:	ldr	x4, [x19, #32]
 2b8:	sub	x28, x28, #0x1
 2bc:	ldr	w3, [x0, #8]
 2c0:	and	x5, x24, #0xffffffffffffffc0
 2c4:	lsl	x2, x3, #19
 2c8:	sub	x2, x2, x3
 2cc:	madd	x2, x4, x26, x2
 2d0:	add	x1, x2, x1
 2d4:	umulh	x2, x1, x22
 2d8:	sub	x0, x1, x2
 2dc:	add	x0, x2, x0, lsr #1
 2e0:	lsr	x0, x0, #9
 2e4:	lsl	x2, x0, #8
 2e8:	sub	x2, x2, x0
 2ec:	add	x0, x0, x2, lsl #2
 2f0:	sub	x1, x1, x0
 2f4:	add	x1, x1, x1, lsl #2
 2f8:	lsl	x1, x1, #3
 2fc:	add	x2, x25, x1
 300:	ldr	w0, [x25, x1]
 304:	cmp	x3, x0
 308:	b.ne	294 <grub_disk_write+0x294>  // b.any
 30c:	ldr	x0, [x2, #8]
 310:	cmp	x4, x0
 314:	b.ne	294 <grub_disk_write+0x294>  // b.any
 318:	ldr	x0, [x2, #16]
 31c:	cmp	x5, x0
 320:	b.ne	294 <grub_disk_write+0x294>  // b.any
 324:	ldr	x0, [x2, #24]
 328:	cbz	x0, 294 <grub_disk_write+0x294>
 32c:	str	w23, [x2, #32]
 330:	str	x2, [sp, #104]
 334:	bl	0 <grub_free>
 338:	ldr	x2, [sp, #104]
 33c:	cmn	x28, #0x1
 340:	ldr	w0, [x19, #24]
 344:	sub	w0, w0, #0x9
 348:	str	xzr, [x2, #24]
 34c:	str	wzr, [x2, #32]
 350:	lsl	w0, w23, w0
 354:	add	x24, x24, x0
 358:	b.ne	2ac <grub_disk_write+0x2ac>  // b.any
 35c:	nop
 360:	add	x21, x21, x27
 364:	subs	x20, x20, x27
 368:	b.eq	41c <grub_disk_write+0x41c>  // b.none
 36c:	ldr	w3, [x19, #24]
 370:	b	224 <grub_disk_write+0x224>
 374:	ldr	x0, [x27, #8]
 378:	cmp	x6, x0
 37c:	b.ne	1bc <grub_disk_write+0x1bc>  // b.any
 380:	ldr	x0, [x27, #16]
 384:	cmp	x7, x0
 388:	b.ne	1bc <grub_disk_write+0x1bc>  // b.any
 38c:	ldr	x0, [x27, #24]
 390:	cbz	x0, 1bc <grub_disk_write+0x1bc>
 394:	str	w23, [x27, #32]
 398:	bl	0 <grub_free>
 39c:	ldr	x5, [x19, #8]
 3a0:	str	xzr, [x27, #24]
 3a4:	str	wzr, [x27, #32]
 3a8:	b	1bc <grub_disk_write+0x1bc>
 3ac:	mov	x0, x26
 3b0:	bl	0 <grub_free>
 3b4:	ldp	x27, x28, [sp, #80]
 3b8:	adrp	x0, 0 <grub_disk_write>
 3bc:	ldp	x25, x26, [sp, #64]
 3c0:	ldr	x0, [x0]
 3c4:	ldr	w0, [x0]
 3c8:	ldp	x19, x20, [sp, #16]
 3cc:	ldp	x21, x22, [sp, #32]
 3d0:	ldp	x23, x24, [sp, #48]
 3d4:	ldp	x29, x30, [sp], #112
 3d8:	ret
 3dc:	ldr	w3, [x19, #24]
 3e0:	mov	x1, #0x8000000000000       	// #2251799813685248
 3e4:	ldr	x0, [x19, #16]
 3e8:	sub	w24, w3, #0x9
 3ec:	lsl	x0, x0, x24
 3f0:	cmp	x0, x1
 3f4:	csel	x0, x0, x1, ls  // ls = plast
 3f8:	cmp	x0, x23
 3fc:	b.ls	434 <grub_disk_write+0x434>  // b.plast
 400:	add	x1, x22, #0x1ff
 404:	sub	x0, x0, x23
 408:	add	x1, x1, x20
 40c:	cmp	x0, x1, lsr #9
 410:	b.cc	434 <grub_disk_write+0x434>  // b.lo, b.ul, b.last
 414:	stp	x25, x26, [sp, #64]
 418:	b	b4 <grub_disk_write+0xb4>
 41c:	adrp	x0, 0 <grub_disk_write>
 420:	ldp	x25, x26, [sp, #64]
 424:	ldr	x0, [x0]
 428:	ldp	x27, x28, [sp, #80]
 42c:	ldr	w0, [x0]
 430:	b	3c8 <grub_disk_write+0x3c8>
 434:	adrp	x1, 0 <grub_disk_write>
 438:	mov	w0, #0xb                   	// #11
 43c:	ldr	x2, [x19]
 440:	ldr	x1, [x1]
 444:	bl	0 <grub_error>
 448:	mov	w1, w0
 44c:	b	a0 <grub_disk_write+0xa0>
 450:	adrp	x0, 0 <grub_disk_write>
 454:	ldp	x19, x20, [sp, #16]
 458:	ldr	x0, [x0]
 45c:	ldp	x21, x22, [sp, #32]
 460:	ldr	w0, [x0]
 464:	ldp	x23, x24, [sp, #48]
 468:	ldp	x25, x26, [sp, #64]
 46c:	ldp	x27, x28, [sp, #80]
 470:	ldp	x29, x30, [sp], #112
 474:	ret
 478:	str	x27, [x19, #40]
 47c:	mov	x0, x26
 480:	bl	0 <grub_free>
 484:	adrp	x0, 0 <grub_disk_write>
 488:	ldp	x25, x26, [sp, #64]
 48c:	ldr	x0, [x0]
 490:	ldp	x27, x28, [sp, #80]
 494:	ldr	w0, [x0]
 498:	b	3c8 <grub_disk_write+0x3c8>
 49c:	nop
	...

00000000000004d8 <grub_mod_init>:
 4d8:	adrp	x0, 0 <grub_disk_write>
 4dc:	adrp	x1, 0 <grub_disk_write>
 4e0:	ldr	x0, [x0]
 4e4:	ldr	x1, [x1]
 4e8:	str	x1, [x0]
 4ec:	ret
	...

0000000000000500 <grub_mod_fini>:
 500:	adrp	x0, 0 <grub_disk_write>
 504:	ldr	x0, [x0]
 508:	str	xzr, [x0]
 50c:	ret
	...
