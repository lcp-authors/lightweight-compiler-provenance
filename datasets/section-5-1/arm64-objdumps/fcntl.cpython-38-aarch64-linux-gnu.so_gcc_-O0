
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x10874>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0x173c>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	stp	x29, x30, [sp, #-32]!
    1068:	mov	x29, sp
    106c:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    1070:	add	x0, x0, #0x1e8
    1074:	str	x0, [sp, #24]
    1078:	ldr	x0, [sp, #24]
    107c:	str	x0, [sp, #24]
    1080:	ldr	x1, [sp, #24]
    1084:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    1088:	add	x0, x0, #0x1e8
    108c:	cmp	x1, x0
    1090:	b.eq	10c8 <ioctl@plt+0x88>  // b.none
    1094:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1098:	ldr	x0, [x0, #4000]
    109c:	str	x0, [sp, #16]
    10a0:	ldr	x0, [sp, #16]
    10a4:	str	x0, [sp, #16]
    10a8:	ldr	x0, [sp, #16]
    10ac:	cmp	x0, #0x0
    10b0:	b.eq	10cc <ioctl@plt+0x8c>  // b.none
    10b4:	ldr	x1, [sp, #16]
    10b8:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    10bc:	add	x0, x0, #0x1e8
    10c0:	blr	x1
    10c4:	b	10cc <ioctl@plt+0x8c>
    10c8:	nop
    10cc:	ldp	x29, x30, [sp], #32
    10d0:	ret
    10d4:	stp	x29, x30, [sp, #-48]!
    10d8:	mov	x29, sp
    10dc:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    10e0:	add	x0, x0, #0x1e8
    10e4:	str	x0, [sp, #40]
    10e8:	ldr	x0, [sp, #40]
    10ec:	str	x0, [sp, #40]
    10f0:	ldr	x1, [sp, #40]
    10f4:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    10f8:	add	x0, x0, #0x1e8
    10fc:	sub	x0, x1, x0
    1100:	asr	x0, x0, #3
    1104:	lsr	x1, x0, #63
    1108:	add	x0, x1, x0
    110c:	asr	x0, x0, #1
    1110:	str	x0, [sp, #32]
    1114:	ldr	x0, [sp, #32]
    1118:	cmp	x0, #0x0
    111c:	b.eq	1158 <ioctl@plt+0x118>  // b.none
    1120:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1124:	ldr	x0, [x0, #4064]
    1128:	str	x0, [sp, #24]
    112c:	ldr	x0, [sp, #24]
    1130:	str	x0, [sp, #24]
    1134:	ldr	x0, [sp, #24]
    1138:	cmp	x0, #0x0
    113c:	b.eq	115c <ioctl@plt+0x11c>  // b.none
    1140:	ldr	x2, [sp, #24]
    1144:	ldr	x1, [sp, #32]
    1148:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    114c:	add	x0, x0, #0x1e8
    1150:	blr	x2
    1154:	b	115c <ioctl@plt+0x11c>
    1158:	nop
    115c:	ldp	x29, x30, [sp], #48
    1160:	ret
    1164:	stp	x29, x30, [sp, #-16]!
    1168:	mov	x29, sp
    116c:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    1170:	add	x0, x0, #0x1e8
    1174:	ldrb	w0, [x0]
    1178:	and	x0, x0, #0xff
    117c:	cmp	x0, #0x0
    1180:	b.ne	11bc <ioctl@plt+0x17c>  // b.any
    1184:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1188:	ldr	x0, [x0, #4016]
    118c:	cmp	x0, #0x0
    1190:	b.eq	11a4 <ioctl@plt+0x164>  // b.none
    1194:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    1198:	add	x0, x0, #0xd8
    119c:	ldr	x0, [x0]
    11a0:	bl	ef0 <__cxa_finalize@plt>
    11a4:	bl	1064 <ioctl@plt+0x24>
    11a8:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    11ac:	add	x0, x0, #0x1e8
    11b0:	mov	w1, #0x1                   	// #1
    11b4:	strb	w1, [x0]
    11b8:	b	11c0 <ioctl@plt+0x180>
    11bc:	nop
    11c0:	ldp	x29, x30, [sp], #16
    11c4:	ret
    11c8:	stp	x29, x30, [sp, #-16]!
    11cc:	mov	x29, sp
    11d0:	bl	10d4 <ioctl@plt+0x94>
    11d4:	nop
    11d8:	ldp	x29, x30, [sp], #16
    11dc:	ret
    11e0:	sub	sp, sp, #0x10
    11e4:	str	x0, [sp, #8]
    11e8:	ldr	x0, [sp, #8]
    11ec:	ldr	x0, [x0]
    11f0:	add	x1, x0, #0x1
    11f4:	ldr	x0, [sp, #8]
    11f8:	str	x1, [x0]
    11fc:	nop
    1200:	add	sp, sp, #0x10
    1204:	ret
    1208:	stp	x29, x30, [sp, #-48]!
    120c:	mov	x29, sp
    1210:	str	x0, [sp, #24]
    1214:	str	x1, [sp, #16]
    1218:	ldr	x0, [sp, #24]
    121c:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1220:	str	w0, [sp, #44]
    1224:	ldr	w0, [sp, #44]
    1228:	cmp	w0, #0x0
    122c:	b.ge	1238 <ioctl@plt+0x1f8>  // b.tcont
    1230:	mov	w0, #0x0                   	// #0
    1234:	b	1248 <ioctl@plt+0x208>
    1238:	ldr	x0, [sp, #16]
    123c:	ldr	w1, [sp, #44]
    1240:	str	w1, [x0]
    1244:	mov	w0, #0x1                   	// #1
    1248:	ldp	x29, x30, [sp], #48
    124c:	ret
    1250:	stp	x29, x30, [sp, #-80]!
    1254:	mov	x29, sp
    1258:	str	x0, [sp, #40]
    125c:	str	x1, [sp, #32]
    1260:	str	x2, [sp, #24]
    1264:	str	xzr, [sp, #72]
    1268:	str	xzr, [sp, #64]
    126c:	ldr	x0, [sp, #24]
    1270:	cmp	x0, #0x1
    1274:	b.le	1284 <ioctl@plt+0x244>
    1278:	ldr	x0, [sp, #24]
    127c:	cmp	x0, #0x3
    1280:	b.le	12a4 <ioctl@plt+0x264>
    1284:	mov	x3, #0x3                   	// #3
    1288:	mov	x2, #0x2                   	// #2
    128c:	ldr	x1, [sp, #24]
    1290:	adrp	x0, 2000 <ioctl@plt+0xfc0>
    1294:	add	x0, x0, #0xac8
    1298:	bl	f80 <_PyArg_CheckPositional@plt>
    129c:	cmp	w0, #0x0
    12a0:	b.eq	1390 <ioctl@plt+0x350>  // b.none
    12a4:	ldr	x0, [sp, #32]
    12a8:	ldr	x0, [x0]
    12ac:	add	x1, sp, #0x38
    12b0:	bl	1208 <ioctl@plt+0x1c8>
    12b4:	cmp	w0, #0x0
    12b8:	b.eq	1398 <ioctl@plt+0x358>  // b.none
    12bc:	ldr	x0, [sp, #32]
    12c0:	add	x0, x0, #0x8
    12c4:	ldr	x0, [x0]
    12c8:	ldr	x1, [x0, #8]
    12cc:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    12d0:	ldr	x0, [x0, #4008]
    12d4:	cmp	x1, x0
    12d8:	b.eq	1304 <ioctl@plt+0x2c4>  // b.none
    12dc:	ldr	x0, [sp, #32]
    12e0:	add	x0, x0, #0x8
    12e4:	ldr	x0, [x0]
    12e8:	ldr	x2, [x0, #8]
    12ec:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    12f0:	ldr	x1, [x0, #4008]
    12f4:	mov	x0, x2
    12f8:	bl	1010 <PyType_IsSubtype@plt>
    12fc:	cmp	w0, #0x0
    1300:	b.eq	1324 <ioctl@plt+0x2e4>  // b.none
    1304:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1308:	ldr	x0, [x0, #4032]
    130c:	ldr	x2, [x0]
    1310:	adrp	x0, 2000 <ioctl@plt+0xfc0>
    1314:	add	x1, x0, #0xad0
    1318:	mov	x0, x2
    131c:	bl	f10 <PyErr_SetString@plt>
    1320:	b	13a4 <ioctl@plt+0x364>
    1324:	ldr	x0, [sp, #32]
    1328:	add	x0, x0, #0x8
    132c:	ldr	x0, [x0]
    1330:	bl	1030 <_PyLong_AsInt@plt>
    1334:	str	w0, [sp, #60]
    1338:	ldr	w0, [sp, #60]
    133c:	cmn	w0, #0x1
    1340:	b.ne	1350 <ioctl@plt+0x310>  // b.any
    1344:	bl	f90 <PyErr_Occurred@plt>
    1348:	cmp	x0, #0x0
    134c:	b.ne	13a0 <ioctl@plt+0x360>  // b.any
    1350:	ldr	x0, [sp, #24]
    1354:	cmp	x0, #0x2
    1358:	b.le	136c <ioctl@plt+0x32c>
    135c:	ldr	x0, [sp, #32]
    1360:	ldr	x0, [x0, #16]
    1364:	str	x0, [sp, #64]
    1368:	b	1370 <ioctl@plt+0x330>
    136c:	nop
    1370:	ldr	w0, [sp, #56]
    1374:	ldr	x3, [sp, #64]
    1378:	ldr	w2, [sp, #60]
    137c:	mov	w1, w0
    1380:	ldr	x0, [sp, #40]
    1384:	bl	18d8 <ioctl@plt+0x898>
    1388:	str	x0, [sp, #72]
    138c:	b	13a4 <ioctl@plt+0x364>
    1390:	nop
    1394:	b	13a4 <ioctl@plt+0x364>
    1398:	nop
    139c:	b	13a4 <ioctl@plt+0x364>
    13a0:	nop
    13a4:	ldr	x0, [sp, #72]
    13a8:	ldp	x29, x30, [sp], #80
    13ac:	ret
    13b0:	stp	x29, x30, [sp, #-80]!
    13b4:	mov	x29, sp
    13b8:	str	x0, [sp, #40]
    13bc:	str	x1, [sp, #32]
    13c0:	str	x2, [sp, #24]
    13c4:	str	xzr, [sp, #72]
    13c8:	str	xzr, [sp, #64]
    13cc:	mov	w0, #0x1                   	// #1
    13d0:	str	w0, [sp, #60]
    13d4:	ldr	x0, [sp, #24]
    13d8:	cmp	x0, #0x1
    13dc:	b.le	13ec <ioctl@plt+0x3ac>
    13e0:	ldr	x0, [sp, #24]
    13e4:	cmp	x0, #0x4
    13e8:	b.le	140c <ioctl@plt+0x3cc>
    13ec:	mov	x3, #0x4                   	// #4
    13f0:	mov	x2, #0x2                   	// #2
    13f4:	ldr	x1, [sp, #24]
    13f8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    13fc:	add	x0, x0, #0x88
    1400:	bl	f80 <_PyArg_CheckPositional@plt>
    1404:	cmp	w0, #0x0
    1408:	b.eq	1530 <ioctl@plt+0x4f0>  // b.none
    140c:	ldr	x0, [sp, #32]
    1410:	ldr	x0, [x0]
    1414:	add	x1, sp, #0x34
    1418:	bl	1208 <ioctl@plt+0x1c8>
    141c:	cmp	w0, #0x0
    1420:	b.eq	1538 <ioctl@plt+0x4f8>  // b.none
    1424:	ldr	x0, [sp, #32]
    1428:	add	x0, x0, #0x8
    142c:	ldr	x0, [x0]
    1430:	ldr	x1, [x0, #8]
    1434:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1438:	ldr	x0, [x0, #4008]
    143c:	cmp	x1, x0
    1440:	b.eq	146c <ioctl@plt+0x42c>  // b.none
    1444:	ldr	x0, [sp, #32]
    1448:	add	x0, x0, #0x8
    144c:	ldr	x0, [x0]
    1450:	ldr	x2, [x0, #8]
    1454:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1458:	ldr	x1, [x0, #4008]
    145c:	mov	x0, x2
    1460:	bl	1010 <PyType_IsSubtype@plt>
    1464:	cmp	w0, #0x0
    1468:	b.eq	148c <ioctl@plt+0x44c>  // b.none
    146c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1470:	ldr	x0, [x0, #4032]
    1474:	ldr	x2, [x0]
    1478:	adrp	x0, 2000 <ioctl@plt+0xfc0>
    147c:	add	x1, x0, #0xad0
    1480:	mov	x0, x2
    1484:	bl	f10 <PyErr_SetString@plt>
    1488:	b	154c <ioctl@plt+0x50c>
    148c:	ldr	x0, [sp, #32]
    1490:	add	x0, x0, #0x8
    1494:	ldr	x0, [x0]
    1498:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    149c:	str	w0, [sp, #56]
    14a0:	ldr	w0, [sp, #56]
    14a4:	cmn	w0, #0x1
    14a8:	b.ne	14b8 <ioctl@plt+0x478>  // b.any
    14ac:	bl	f90 <PyErr_Occurred@plt>
    14b0:	cmp	x0, #0x0
    14b4:	b.ne	1540 <ioctl@plt+0x500>  // b.any
    14b8:	ldr	x0, [sp, #24]
    14bc:	cmp	x0, #0x2
    14c0:	b.le	1500 <ioctl@plt+0x4c0>
    14c4:	ldr	x0, [sp, #32]
    14c8:	ldr	x0, [x0, #16]
    14cc:	str	x0, [sp, #64]
    14d0:	ldr	x0, [sp, #24]
    14d4:	cmp	x0, #0x3
    14d8:	b.le	1508 <ioctl@plt+0x4c8>
    14dc:	ldr	x0, [sp, #32]
    14e0:	add	x0, x0, #0x18
    14e4:	ldr	x0, [x0]
    14e8:	bl	fc0 <PyObject_IsTrue@plt>
    14ec:	str	w0, [sp, #60]
    14f0:	ldr	w0, [sp, #60]
    14f4:	cmp	w0, #0x0
    14f8:	b.lt	1548 <ioctl@plt+0x508>  // b.tstop
    14fc:	b	150c <ioctl@plt+0x4cc>
    1500:	nop
    1504:	b	150c <ioctl@plt+0x4cc>
    1508:	nop
    150c:	ldr	w0, [sp, #52]
    1510:	ldr	w4, [sp, #60]
    1514:	ldr	x3, [sp, #64]
    1518:	ldr	w2, [sp, #56]
    151c:	mov	w1, w0
    1520:	ldr	x0, [sp, #40]
    1524:	bl	1ae4 <ioctl@plt+0xaa4>
    1528:	str	x0, [sp, #72]
    152c:	b	154c <ioctl@plt+0x50c>
    1530:	nop
    1534:	b	154c <ioctl@plt+0x50c>
    1538:	nop
    153c:	b	154c <ioctl@plt+0x50c>
    1540:	nop
    1544:	b	154c <ioctl@plt+0x50c>
    1548:	nop
    154c:	ldr	x0, [sp, #72]
    1550:	ldp	x29, x30, [sp], #80
    1554:	ret
    1558:	stp	x29, x30, [sp, #-64]!
    155c:	mov	x29, sp
    1560:	str	x0, [sp, #40]
    1564:	str	x1, [sp, #32]
    1568:	str	x2, [sp, #24]
    156c:	str	xzr, [sp, #56]
    1570:	ldr	x0, [sp, #24]
    1574:	cmp	x0, #0x1
    1578:	b.le	1588 <ioctl@plt+0x548>
    157c:	ldr	x0, [sp, #24]
    1580:	cmp	x0, #0x2
    1584:	b.le	15a8 <ioctl@plt+0x568>
    1588:	mov	x3, #0x2                   	// #2
    158c:	mov	x2, #0x2                   	// #2
    1590:	ldr	x1, [sp, #24]
    1594:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1598:	add	x0, x0, #0x168
    159c:	bl	f80 <_PyArg_CheckPositional@plt>
    15a0:	cmp	w0, #0x0
    15a4:	b.eq	1670 <ioctl@plt+0x630>  // b.none
    15a8:	ldr	x0, [sp, #32]
    15ac:	ldr	x0, [x0]
    15b0:	add	x1, sp, #0x30
    15b4:	bl	1208 <ioctl@plt+0x1c8>
    15b8:	cmp	w0, #0x0
    15bc:	b.eq	1678 <ioctl@plt+0x638>  // b.none
    15c0:	ldr	x0, [sp, #32]
    15c4:	add	x0, x0, #0x8
    15c8:	ldr	x0, [x0]
    15cc:	ldr	x1, [x0, #8]
    15d0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    15d4:	ldr	x0, [x0, #4008]
    15d8:	cmp	x1, x0
    15dc:	b.eq	1608 <ioctl@plt+0x5c8>  // b.none
    15e0:	ldr	x0, [sp, #32]
    15e4:	add	x0, x0, #0x8
    15e8:	ldr	x0, [x0]
    15ec:	ldr	x2, [x0, #8]
    15f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    15f4:	ldr	x1, [x0, #4008]
    15f8:	mov	x0, x2
    15fc:	bl	1010 <PyType_IsSubtype@plt>
    1600:	cmp	w0, #0x0
    1604:	b.eq	1628 <ioctl@plt+0x5e8>  // b.none
    1608:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    160c:	ldr	x0, [x0, #4032]
    1610:	ldr	x2, [x0]
    1614:	adrp	x0, 2000 <ioctl@plt+0xfc0>
    1618:	add	x1, x0, #0xad0
    161c:	mov	x0, x2
    1620:	bl	f10 <PyErr_SetString@plt>
    1624:	b	1684 <ioctl@plt+0x644>
    1628:	ldr	x0, [sp, #32]
    162c:	add	x0, x0, #0x8
    1630:	ldr	x0, [x0]
    1634:	bl	1030 <_PyLong_AsInt@plt>
    1638:	str	w0, [sp, #52]
    163c:	ldr	w0, [sp, #52]
    1640:	cmn	w0, #0x1
    1644:	b.ne	1654 <ioctl@plt+0x614>  // b.any
    1648:	bl	f90 <PyErr_Occurred@plt>
    164c:	cmp	x0, #0x0
    1650:	b.ne	1680 <ioctl@plt+0x640>  // b.any
    1654:	ldr	w0, [sp, #48]
    1658:	ldr	w2, [sp, #52]
    165c:	mov	w1, w0
    1660:	ldr	x0, [sp, #40]
    1664:	bl	1e58 <ioctl@plt+0xe18>
    1668:	str	x0, [sp, #56]
    166c:	b	1684 <ioctl@plt+0x644>
    1670:	nop
    1674:	b	1684 <ioctl@plt+0x644>
    1678:	nop
    167c:	b	1684 <ioctl@plt+0x644>
    1680:	nop
    1684:	ldr	x0, [sp, #56]
    1688:	ldp	x29, x30, [sp], #64
    168c:	ret
    1690:	stp	x29, x30, [sp, #-96]!
    1694:	mov	x29, sp
    1698:	str	x0, [sp, #40]
    169c:	str	x1, [sp, #32]
    16a0:	str	x2, [sp, #24]
    16a4:	str	xzr, [sp, #88]
    16a8:	str	xzr, [sp, #80]
    16ac:	str	xzr, [sp, #72]
    16b0:	str	wzr, [sp, #68]
    16b4:	ldr	x0, [sp, #24]
    16b8:	cmp	x0, #0x1
    16bc:	b.le	16cc <ioctl@plt+0x68c>
    16c0:	ldr	x0, [sp, #24]
    16c4:	cmp	x0, #0x5
    16c8:	b.le	16ec <ioctl@plt+0x6ac>
    16cc:	mov	x3, #0x5                   	// #5
    16d0:	mov	x2, #0x2                   	// #2
    16d4:	ldr	x1, [sp, #24]
    16d8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    16dc:	add	x0, x0, #0x578
    16e0:	bl	f80 <_PyArg_CheckPositional@plt>
    16e4:	cmp	w0, #0x0
    16e8:	b.eq	18b0 <ioctl@plt+0x870>  // b.none
    16ec:	ldr	x0, [sp, #32]
    16f0:	ldr	x0, [x0]
    16f4:	add	x1, sp, #0x3c
    16f8:	bl	1208 <ioctl@plt+0x1c8>
    16fc:	cmp	w0, #0x0
    1700:	b.eq	18b8 <ioctl@plt+0x878>  // b.none
    1704:	ldr	x0, [sp, #32]
    1708:	add	x0, x0, #0x8
    170c:	ldr	x0, [x0]
    1710:	ldr	x1, [x0, #8]
    1714:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1718:	ldr	x0, [x0, #4008]
    171c:	cmp	x1, x0
    1720:	b.eq	174c <ioctl@plt+0x70c>  // b.none
    1724:	ldr	x0, [sp, #32]
    1728:	add	x0, x0, #0x8
    172c:	ldr	x0, [x0]
    1730:	ldr	x2, [x0, #8]
    1734:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1738:	ldr	x1, [x0, #4008]
    173c:	mov	x0, x2
    1740:	bl	1010 <PyType_IsSubtype@plt>
    1744:	cmp	w0, #0x0
    1748:	b.eq	176c <ioctl@plt+0x72c>  // b.none
    174c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1750:	ldr	x0, [x0, #4032]
    1754:	ldr	x2, [x0]
    1758:	adrp	x0, 2000 <ioctl@plt+0xfc0>
    175c:	add	x1, x0, #0xad0
    1760:	mov	x0, x2
    1764:	bl	f10 <PyErr_SetString@plt>
    1768:	b	18cc <ioctl@plt+0x88c>
    176c:	ldr	x0, [sp, #32]
    1770:	add	x0, x0, #0x8
    1774:	ldr	x0, [x0]
    1778:	bl	1030 <_PyLong_AsInt@plt>
    177c:	str	w0, [sp, #64]
    1780:	ldr	w0, [sp, #64]
    1784:	cmn	w0, #0x1
    1788:	b.ne	1798 <ioctl@plt+0x758>  // b.any
    178c:	bl	f90 <PyErr_Occurred@plt>
    1790:	cmp	x0, #0x0
    1794:	b.ne	18c0 <ioctl@plt+0x880>  // b.any
    1798:	ldr	x0, [sp, #24]
    179c:	cmp	x0, #0x2
    17a0:	b.le	186c <ioctl@plt+0x82c>
    17a4:	ldr	x0, [sp, #32]
    17a8:	ldr	x0, [x0, #16]
    17ac:	str	x0, [sp, #80]
    17b0:	ldr	x0, [sp, #24]
    17b4:	cmp	x0, #0x3
    17b8:	b.le	1874 <ioctl@plt+0x834>
    17bc:	ldr	x0, [sp, #32]
    17c0:	ldr	x0, [x0, #24]
    17c4:	str	x0, [sp, #72]
    17c8:	ldr	x0, [sp, #24]
    17cc:	cmp	x0, #0x4
    17d0:	b.le	187c <ioctl@plt+0x83c>
    17d4:	ldr	x0, [sp, #32]
    17d8:	add	x0, x0, #0x20
    17dc:	ldr	x0, [x0]
    17e0:	ldr	x1, [x0, #8]
    17e4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    17e8:	ldr	x0, [x0, #4008]
    17ec:	cmp	x1, x0
    17f0:	b.eq	181c <ioctl@plt+0x7dc>  // b.none
    17f4:	ldr	x0, [sp, #32]
    17f8:	add	x0, x0, #0x20
    17fc:	ldr	x0, [x0]
    1800:	ldr	x2, [x0, #8]
    1804:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1808:	ldr	x1, [x0, #4008]
    180c:	mov	x0, x2
    1810:	bl	1010 <PyType_IsSubtype@plt>
    1814:	cmp	w0, #0x0
    1818:	b.eq	183c <ioctl@plt+0x7fc>  // b.none
    181c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1820:	ldr	x0, [x0, #4032]
    1824:	ldr	x2, [x0]
    1828:	adrp	x0, 2000 <ioctl@plt+0xfc0>
    182c:	add	x1, x0, #0xad0
    1830:	mov	x0, x2
    1834:	bl	f10 <PyErr_SetString@plt>
    1838:	b	18cc <ioctl@plt+0x88c>
    183c:	ldr	x0, [sp, #32]
    1840:	add	x0, x0, #0x20
    1844:	ldr	x0, [x0]
    1848:	bl	1030 <_PyLong_AsInt@plt>
    184c:	str	w0, [sp, #68]
    1850:	ldr	w0, [sp, #68]
    1854:	cmn	w0, #0x1
    1858:	b.ne	1884 <ioctl@plt+0x844>  // b.any
    185c:	bl	f90 <PyErr_Occurred@plt>
    1860:	cmp	x0, #0x0
    1864:	b.ne	18c8 <ioctl@plt+0x888>  // b.any
    1868:	b	1884 <ioctl@plt+0x844>
    186c:	nop
    1870:	b	1888 <ioctl@plt+0x848>
    1874:	nop
    1878:	b	1888 <ioctl@plt+0x848>
    187c:	nop
    1880:	b	1888 <ioctl@plt+0x848>
    1884:	nop
    1888:	ldr	w0, [sp, #60]
    188c:	ldr	w5, [sp, #68]
    1890:	ldr	x4, [sp, #72]
    1894:	ldr	x3, [sp, #80]
    1898:	ldr	w2, [sp, #64]
    189c:	mov	w1, w0
    18a0:	ldr	x0, [sp, #40]
    18a4:	bl	1f10 <ioctl@plt+0xed0>
    18a8:	str	x0, [sp, #88]
    18ac:	b	18cc <ioctl@plt+0x88c>
    18b0:	nop
    18b4:	b	18cc <ioctl@plt+0x88c>
    18b8:	nop
    18bc:	b	18cc <ioctl@plt+0x88c>
    18c0:	nop
    18c4:	b	18cc <ioctl@plt+0x88c>
    18c8:	nop
    18cc:	ldr	x0, [sp, #88]
    18d0:	ldp	x29, x30, [sp], #96
    18d4:	ret
    18d8:	sub	sp, sp, #0x470
    18dc:	stp	x29, x30, [sp]
    18e0:	mov	x29, sp
    18e4:	str	x0, [sp, #40]
    18e8:	str	w1, [sp, #36]
    18ec:	str	w2, [sp, #32]
    18f0:	str	x3, [sp, #24]
    18f4:	str	wzr, [sp, #1100]
    18f8:	str	wzr, [sp, #1132]
    18fc:	ldr	x0, [sp, #24]
    1900:	cmp	x0, #0x0
    1904:	b.eq	1a44 <ioctl@plt+0xa04>  // b.none
    1908:	add	x1, sp, #0x438
    190c:	add	x0, sp, #0x440
    1910:	mov	x3, x1
    1914:	mov	x2, x0
    1918:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    191c:	add	x1, x0, #0x580
    1920:	ldr	x0, [sp, #24]
    1924:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1928:	cmp	w0, #0x0
    192c:	b.eq	1a10 <ioctl@plt+0x9d0>  // b.none
    1930:	ldr	x0, [sp, #1080]
    1934:	cmp	x0, #0x400
    1938:	b.ls	1960 <ioctl@plt+0x920>  // b.plast
    193c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1940:	ldr	x0, [x0, #4024]
    1944:	ldr	x2, [x0]
    1948:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    194c:	add	x1, x0, #0x588
    1950:	mov	x0, x2
    1954:	bl	f10 <PyErr_SetString@plt>
    1958:	mov	x0, #0x0                   	// #0
    195c:	b	1ad8 <ioctl@plt+0xa98>
    1960:	ldr	x1, [sp, #1088]
    1964:	ldr	x0, [sp, #1080]
    1968:	mov	x2, x0
    196c:	add	x0, sp, #0x38
    1970:	bl	ea0 <memcpy@plt>
    1974:	bl	fe0 <PyEval_SaveThread@plt>
    1978:	str	x0, [sp, #1120]
    197c:	add	x0, sp, #0x38
    1980:	mov	x2, x0
    1984:	ldr	w1, [sp, #32]
    1988:	ldr	w0, [sp, #36]
    198c:	bl	fd0 <fcntl64@plt>
    1990:	str	w0, [sp, #1116]
    1994:	ldr	x0, [sp, #1120]
    1998:	bl	ec0 <PyEval_RestoreThread@plt>
    199c:	ldr	w0, [sp, #1116]
    19a0:	cmn	w0, #0x1
    19a4:	b.ne	19cc <ioctl@plt+0x98c>  // b.any
    19a8:	bl	1020 <__errno_location@plt>
    19ac:	ldr	w0, [x0]
    19b0:	cmp	w0, #0x4
    19b4:	b.ne	19cc <ioctl@plt+0x98c>  // b.any
    19b8:	bl	1000 <PyErr_CheckSignals@plt>
    19bc:	str	w0, [sp, #1132]
    19c0:	ldr	w0, [sp, #1132]
    19c4:	cmp	w0, #0x0
    19c8:	b.eq	1974 <ioctl@plt+0x934>  // b.none
    19cc:	ldr	w0, [sp, #1116]
    19d0:	cmp	w0, #0x0
    19d4:	b.ge	1a00 <ioctl@plt+0x9c0>  // b.tcont
    19d8:	ldr	w0, [sp, #1132]
    19dc:	cmp	w0, #0x0
    19e0:	b.ne	19f8 <ioctl@plt+0x9b8>  // b.any
    19e4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    19e8:	ldr	x0, [x0, #4040]
    19ec:	ldr	x0, [x0]
    19f0:	bl	ed0 <PyErr_SetFromErrno@plt>
    19f4:	b	1ad8 <ioctl@plt+0xa98>
    19f8:	mov	x0, #0x0                   	// #0
    19fc:	b	1ad8 <ioctl@plt+0xa98>
    1a00:	ldr	x1, [sp, #1080]
    1a04:	add	x0, sp, #0x38
    1a08:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1a0c:	b	1ad8 <ioctl@plt+0xa98>
    1a10:	bl	f50 <PyErr_Clear@plt>
    1a14:	add	x0, sp, #0x44c
    1a18:	mov	x2, x0
    1a1c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1a20:	add	x1, x0, #0x5a8
    1a24:	ldr	x0, [sp, #24]
    1a28:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1a2c:	str	w0, [sp, #1128]
    1a30:	ldr	w0, [sp, #1128]
    1a34:	cmp	w0, #0x0
    1a38:	b.ne	1a44 <ioctl@plt+0xa04>  // b.any
    1a3c:	mov	x0, #0x0                   	// #0
    1a40:	b	1ad8 <ioctl@plt+0xa98>
    1a44:	bl	fe0 <PyEval_SaveThread@plt>
    1a48:	str	x0, [sp, #1104]
    1a4c:	ldr	w0, [sp, #1100]
    1a50:	mov	w2, w0
    1a54:	ldr	w1, [sp, #32]
    1a58:	ldr	w0, [sp, #36]
    1a5c:	bl	fd0 <fcntl64@plt>
    1a60:	str	w0, [sp, #1116]
    1a64:	ldr	x0, [sp, #1104]
    1a68:	bl	ec0 <PyEval_RestoreThread@plt>
    1a6c:	ldr	w0, [sp, #1116]
    1a70:	cmn	w0, #0x1
    1a74:	b.ne	1a9c <ioctl@plt+0xa5c>  // b.any
    1a78:	bl	1020 <__errno_location@plt>
    1a7c:	ldr	w0, [x0]
    1a80:	cmp	w0, #0x4
    1a84:	b.ne	1a9c <ioctl@plt+0xa5c>  // b.any
    1a88:	bl	1000 <PyErr_CheckSignals@plt>
    1a8c:	str	w0, [sp, #1132]
    1a90:	ldr	w0, [sp, #1132]
    1a94:	cmp	w0, #0x0
    1a98:	b.eq	1a44 <ioctl@plt+0xa04>  // b.none
    1a9c:	ldr	w0, [sp, #1116]
    1aa0:	cmp	w0, #0x0
    1aa4:	b.ge	1ad0 <ioctl@plt+0xa90>  // b.tcont
    1aa8:	ldr	w0, [sp, #1132]
    1aac:	cmp	w0, #0x0
    1ab0:	b.ne	1ac8 <ioctl@plt+0xa88>  // b.any
    1ab4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1ab8:	ldr	x0, [x0, #4040]
    1abc:	ldr	x0, [x0]
    1ac0:	bl	ed0 <PyErr_SetFromErrno@plt>
    1ac4:	b	1ad8 <ioctl@plt+0xa98>
    1ac8:	mov	x0, #0x0                   	// #0
    1acc:	b	1ad8 <ioctl@plt+0xa98>
    1ad0:	ldrsw	x0, [sp, #1116]
    1ad4:	bl	f40 <PyLong_FromLong@plt>
    1ad8:	ldp	x29, x30, [sp]
    1adc:	add	sp, sp, #0x470
    1ae0:	ret
    1ae4:	sub	sp, sp, #0x4d0
    1ae8:	stp	x29, x30, [sp]
    1aec:	mov	x29, sp
    1af0:	str	x0, [sp, #40]
    1af4:	str	w1, [sp, #36]
    1af8:	str	w2, [sp, #32]
    1afc:	str	x3, [sp, #24]
    1b00:	str	w4, [sp, #20]
    1b04:	str	wzr, [sp, #1172]
    1b08:	ldr	x0, [sp, #24]
    1b0c:	cmp	x0, #0x0
    1b10:	b.eq	1df4 <ioctl@plt+0xdb4>  // b.none
    1b14:	add	x0, sp, #0x440
    1b18:	mov	x2, x0
    1b1c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1b20:	add	x1, x0, #0x610
    1b24:	ldr	x0, [sp, #24]
    1b28:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1b2c:	cmp	w0, #0x0
    1b30:	b.eq	1ccc <ioctl@plt+0xc8c>  // b.none
    1b34:	ldr	x0, [sp, #1088]
    1b38:	str	x0, [sp, #1208]
    1b3c:	ldr	x0, [sp, #1104]
    1b40:	str	x0, [sp, #1200]
    1b44:	ldr	w0, [sp, #20]
    1b48:	cmp	w0, #0x0
    1b4c:	b.eq	1b94 <ioctl@plt+0xb54>  // b.none
    1b50:	ldr	x0, [sp, #1200]
    1b54:	cmp	x0, #0x400
    1b58:	b.gt	1b88 <ioctl@plt+0xb48>
    1b5c:	ldr	x1, [sp, #1200]
    1b60:	add	x0, sp, #0x38
    1b64:	mov	x2, x1
    1b68:	ldr	x1, [sp, #1208]
    1b6c:	bl	ea0 <memcpy@plt>
    1b70:	ldr	x0, [sp, #1200]
    1b74:	add	x1, sp, #0x38
    1b78:	strb	wzr, [x1, x0]
    1b7c:	add	x0, sp, #0x38
    1b80:	str	x0, [sp, #1216]
    1b84:	b	1bf4 <ioctl@plt+0xbb4>
    1b88:	ldr	x0, [sp, #1208]
    1b8c:	str	x0, [sp, #1216]
    1b90:	b	1bf4 <ioctl@plt+0xbb4>
    1b94:	ldr	x0, [sp, #1200]
    1b98:	cmp	x0, #0x400
    1b9c:	b.le	1bcc <ioctl@plt+0xb8c>
    1ba0:	add	x0, sp, #0x440
    1ba4:	bl	ee0 <PyBuffer_Release@plt>
    1ba8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1bac:	ldr	x0, [x0, #4024]
    1bb0:	ldr	x2, [x0]
    1bb4:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1bb8:	add	x1, x0, #0x620
    1bbc:	mov	x0, x2
    1bc0:	bl	f10 <PyErr_SetString@plt>
    1bc4:	mov	x0, #0x0                   	// #0
    1bc8:	b	1e4c <ioctl@plt+0xe0c>
    1bcc:	ldr	x1, [sp, #1200]
    1bd0:	add	x0, sp, #0x38
    1bd4:	mov	x2, x1
    1bd8:	ldr	x1, [sp, #1208]
    1bdc:	bl	ea0 <memcpy@plt>
    1be0:	ldr	x0, [sp, #1200]
    1be4:	add	x1, sp, #0x38
    1be8:	strb	wzr, [x1, x0]
    1bec:	add	x0, sp, #0x38
    1bf0:	str	x0, [sp, #1216]
    1bf4:	add	x0, sp, #0x38
    1bf8:	ldr	x1, [sp, #1216]
    1bfc:	cmp	x1, x0
    1c00:	b.ne	1c30 <ioctl@plt+0xbf0>  // b.any
    1c04:	bl	fe0 <PyEval_SaveThread@plt>
    1c08:	str	x0, [sp, #1184]
    1c0c:	ldr	w0, [sp, #32]
    1c10:	ldr	x2, [sp, #1216]
    1c14:	mov	x1, x0
    1c18:	ldr	w0, [sp, #36]
    1c1c:	bl	1040 <ioctl@plt>
    1c20:	str	w0, [sp, #1228]
    1c24:	ldr	x0, [sp, #1184]
    1c28:	bl	ec0 <PyEval_RestoreThread@plt>
    1c2c:	b	1c48 <ioctl@plt+0xc08>
    1c30:	ldr	w0, [sp, #32]
    1c34:	ldr	x2, [sp, #1216]
    1c38:	mov	x1, x0
    1c3c:	ldr	w0, [sp, #36]
    1c40:	bl	1040 <ioctl@plt>
    1c44:	str	w0, [sp, #1228]
    1c48:	ldr	w0, [sp, #20]
    1c4c:	cmp	w0, #0x0
    1c50:	b.eq	1c78 <ioctl@plt+0xc38>  // b.none
    1c54:	ldr	x0, [sp, #1200]
    1c58:	cmp	x0, #0x400
    1c5c:	b.gt	1c78 <ioctl@plt+0xc38>
    1c60:	ldr	x1, [sp, #1200]
    1c64:	add	x0, sp, #0x38
    1c68:	mov	x2, x1
    1c6c:	mov	x1, x0
    1c70:	ldr	x0, [sp, #1208]
    1c74:	bl	ea0 <memcpy@plt>
    1c78:	add	x0, sp, #0x440
    1c7c:	bl	ee0 <PyBuffer_Release@plt>
    1c80:	ldr	w0, [sp, #1228]
    1c84:	cmp	w0, #0x0
    1c88:	b.ge	1ca4 <ioctl@plt+0xc64>  // b.tcont
    1c8c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1c90:	ldr	x0, [x0, #4040]
    1c94:	ldr	x0, [x0]
    1c98:	bl	ed0 <PyErr_SetFromErrno@plt>
    1c9c:	mov	x0, #0x0                   	// #0
    1ca0:	b	1e4c <ioctl@plt+0xe0c>
    1ca4:	ldr	w0, [sp, #20]
    1ca8:	cmp	w0, #0x0
    1cac:	b.eq	1cbc <ioctl@plt+0xc7c>  // b.none
    1cb0:	ldrsw	x0, [sp, #1228]
    1cb4:	bl	f40 <PyLong_FromLong@plt>
    1cb8:	b	1e4c <ioctl@plt+0xe0c>
    1cbc:	add	x0, sp, #0x38
    1cc0:	ldr	x1, [sp, #1200]
    1cc4:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1cc8:	b	1e4c <ioctl@plt+0xe0c>
    1ccc:	bl	f50 <PyErr_Clear@plt>
    1cd0:	add	x0, sp, #0x440
    1cd4:	mov	x2, x0
    1cd8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1cdc:	add	x1, x0, #0x640
    1ce0:	ldr	x0, [sp, #24]
    1ce4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1ce8:	cmp	w0, #0x0
    1cec:	b.eq	1dc8 <ioctl@plt+0xd88>  // b.none
    1cf0:	ldr	x0, [sp, #1088]
    1cf4:	str	x0, [sp, #1208]
    1cf8:	ldr	x0, [sp, #1104]
    1cfc:	str	x0, [sp, #1200]
    1d00:	ldr	x0, [sp, #1200]
    1d04:	cmp	x0, #0x400
    1d08:	b.le	1d38 <ioctl@plt+0xcf8>
    1d0c:	add	x0, sp, #0x440
    1d10:	bl	ee0 <PyBuffer_Release@plt>
    1d14:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1d18:	ldr	x0, [x0, #4024]
    1d1c:	ldr	x2, [x0]
    1d20:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1d24:	add	x1, x0, #0x620
    1d28:	mov	x0, x2
    1d2c:	bl	f10 <PyErr_SetString@plt>
    1d30:	mov	x0, #0x0                   	// #0
    1d34:	b	1e4c <ioctl@plt+0xe0c>
    1d38:	ldr	x1, [sp, #1200]
    1d3c:	add	x0, sp, #0x38
    1d40:	mov	x2, x1
    1d44:	ldr	x1, [sp, #1208]
    1d48:	bl	ea0 <memcpy@plt>
    1d4c:	ldr	x0, [sp, #1200]
    1d50:	add	x1, sp, #0x38
    1d54:	strb	wzr, [x1, x0]
    1d58:	bl	fe0 <PyEval_SaveThread@plt>
    1d5c:	str	x0, [sp, #1192]
    1d60:	ldr	w0, [sp, #32]
    1d64:	add	x1, sp, #0x38
    1d68:	mov	x2, x1
    1d6c:	mov	x1, x0
    1d70:	ldr	w0, [sp, #36]
    1d74:	bl	1040 <ioctl@plt>
    1d78:	str	w0, [sp, #1228]
    1d7c:	ldr	x0, [sp, #1192]
    1d80:	bl	ec0 <PyEval_RestoreThread@plt>
    1d84:	ldr	w0, [sp, #1228]
    1d88:	cmp	w0, #0x0
    1d8c:	b.ge	1db0 <ioctl@plt+0xd70>  // b.tcont
    1d90:	add	x0, sp, #0x440
    1d94:	bl	ee0 <PyBuffer_Release@plt>
    1d98:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1d9c:	ldr	x0, [x0, #4040]
    1da0:	ldr	x0, [x0]
    1da4:	bl	ed0 <PyErr_SetFromErrno@plt>
    1da8:	mov	x0, #0x0                   	// #0
    1dac:	b	1e4c <ioctl@plt+0xe0c>
    1db0:	add	x0, sp, #0x440
    1db4:	bl	ee0 <PyBuffer_Release@plt>
    1db8:	add	x0, sp, #0x38
    1dbc:	ldr	x1, [sp, #1200]
    1dc0:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1dc4:	b	1e4c <ioctl@plt+0xe0c>
    1dc8:	bl	f50 <PyErr_Clear@plt>
    1dcc:	add	x0, sp, #0x494
    1dd0:	mov	x2, x0
    1dd4:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1dd8:	add	x1, x0, #0x650
    1ddc:	ldr	x0, [sp, #24]
    1de0:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1de4:	cmp	w0, #0x0
    1de8:	b.ne	1df4 <ioctl@plt+0xdb4>  // b.any
    1dec:	mov	x0, #0x0                   	// #0
    1df0:	b	1e4c <ioctl@plt+0xe0c>
    1df4:	bl	fe0 <PyEval_SaveThread@plt>
    1df8:	str	x0, [sp, #1176]
    1dfc:	ldr	w0, [sp, #32]
    1e00:	ldr	w1, [sp, #1172]
    1e04:	mov	w2, w1
    1e08:	mov	x1, x0
    1e0c:	ldr	w0, [sp, #36]
    1e10:	bl	1040 <ioctl@plt>
    1e14:	str	w0, [sp, #1228]
    1e18:	ldr	x0, [sp, #1176]
    1e1c:	bl	ec0 <PyEval_RestoreThread@plt>
    1e20:	ldr	w0, [sp, #1228]
    1e24:	cmp	w0, #0x0
    1e28:	b.ge	1e44 <ioctl@plt+0xe04>  // b.tcont
    1e2c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1e30:	ldr	x0, [x0, #4040]
    1e34:	ldr	x0, [x0]
    1e38:	bl	ed0 <PyErr_SetFromErrno@plt>
    1e3c:	mov	x0, #0x0                   	// #0
    1e40:	b	1e4c <ioctl@plt+0xe0c>
    1e44:	ldrsw	x0, [sp, #1228]
    1e48:	bl	f40 <PyLong_FromLong@plt>
    1e4c:	ldp	x29, x30, [sp]
    1e50:	add	sp, sp, #0x4d0
    1e54:	ret
    1e58:	stp	x29, x30, [sp, #-64]!
    1e5c:	mov	x29, sp
    1e60:	str	x0, [sp, #24]
    1e64:	str	w1, [sp, #20]
    1e68:	str	w2, [sp, #16]
    1e6c:	str	wzr, [sp, #60]
    1e70:	bl	fe0 <PyEval_SaveThread@plt>
    1e74:	str	x0, [sp, #48]
    1e78:	ldr	w1, [sp, #16]
    1e7c:	ldr	w0, [sp, #20]
    1e80:	bl	f20 <flock@plt>
    1e84:	str	w0, [sp, #44]
    1e88:	ldr	x0, [sp, #48]
    1e8c:	bl	ec0 <PyEval_RestoreThread@plt>
    1e90:	ldr	w0, [sp, #44]
    1e94:	cmn	w0, #0x1
    1e98:	b.ne	1ec0 <ioctl@plt+0xe80>  // b.any
    1e9c:	bl	1020 <__errno_location@plt>
    1ea0:	ldr	w0, [x0]
    1ea4:	cmp	w0, #0x4
    1ea8:	b.ne	1ec0 <ioctl@plt+0xe80>  // b.any
    1eac:	bl	1000 <PyErr_CheckSignals@plt>
    1eb0:	str	w0, [sp, #60]
    1eb4:	ldr	w0, [sp, #60]
    1eb8:	cmp	w0, #0x0
    1ebc:	b.eq	1e70 <ioctl@plt+0xe30>  // b.none
    1ec0:	ldr	w0, [sp, #44]
    1ec4:	cmp	w0, #0x0
    1ec8:	b.ge	1ef4 <ioctl@plt+0xeb4>  // b.tcont
    1ecc:	ldr	w0, [sp, #60]
    1ed0:	cmp	w0, #0x0
    1ed4:	b.ne	1eec <ioctl@plt+0xeac>  // b.any
    1ed8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1edc:	ldr	x0, [x0, #4040]
    1ee0:	ldr	x0, [x0]
    1ee4:	bl	ed0 <PyErr_SetFromErrno@plt>
    1ee8:	b	1f08 <ioctl@plt+0xec8>
    1eec:	mov	x0, #0x0                   	// #0
    1ef0:	b	1f08 <ioctl@plt+0xec8>
    1ef4:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1ef8:	ldr	x0, [x0, #4056]
    1efc:	bl	11e0 <ioctl@plt+0x1a0>
    1f00:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1f04:	ldr	x0, [x0, #4056]
    1f08:	ldp	x29, x30, [sp], #64
    1f0c:	ret
    1f10:	stp	x29, x30, [sp, #-128]!
    1f14:	mov	x29, sp
    1f18:	str	x0, [sp, #56]
    1f1c:	str	w1, [sp, #52]
    1f20:	str	w2, [sp, #48]
    1f24:	str	x3, [sp, #40]
    1f28:	str	x4, [sp, #32]
    1f2c:	str	w5, [sp, #28]
    1f30:	str	wzr, [sp, #124]
    1f34:	ldr	w0, [sp, #48]
    1f38:	cmp	w0, #0x8
    1f3c:	b.ne	1f4c <ioctl@plt+0xf0c>  // b.any
    1f40:	mov	w0, #0x2                   	// #2
    1f44:	strh	w0, [sp, #72]
    1f48:	b	1fa4 <ioctl@plt+0xf64>
    1f4c:	ldr	w0, [sp, #48]
    1f50:	and	w0, w0, #0x1
    1f54:	cmp	w0, #0x0
    1f58:	b.eq	1f64 <ioctl@plt+0xf24>  // b.none
    1f5c:	strh	wzr, [sp, #72]
    1f60:	b	1fa4 <ioctl@plt+0xf64>
    1f64:	ldr	w0, [sp, #48]
    1f68:	and	w0, w0, #0x2
    1f6c:	cmp	w0, #0x0
    1f70:	b.eq	1f80 <ioctl@plt+0xf40>  // b.none
    1f74:	mov	w0, #0x1                   	// #1
    1f78:	strh	w0, [sp, #72]
    1f7c:	b	1fa4 <ioctl@plt+0xf64>
    1f80:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    1f84:	ldr	x0, [x0, #4024]
    1f88:	ldr	x2, [x0]
    1f8c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    1f90:	add	x1, x0, #0x6b8
    1f94:	mov	x0, x2
    1f98:	bl	f10 <PyErr_SetString@plt>
    1f9c:	mov	x0, #0x0                   	// #0
    1fa0:	b	20d0 <ioctl@plt+0x1090>
    1fa4:	str	xzr, [sp, #88]
    1fa8:	ldr	x0, [sp, #88]
    1fac:	str	x0, [sp, #80]
    1fb0:	ldr	x0, [sp, #32]
    1fb4:	cmp	x0, #0x0
    1fb8:	b.eq	1fdc <ioctl@plt+0xf9c>  // b.none
    1fbc:	ldr	x0, [sp, #32]
    1fc0:	bl	fb0 <PyLong_AsLong@plt>
    1fc4:	str	x0, [sp, #80]
    1fc8:	bl	f90 <PyErr_Occurred@plt>
    1fcc:	cmp	x0, #0x0
    1fd0:	b.eq	1fdc <ioctl@plt+0xf9c>  // b.none
    1fd4:	mov	x0, #0x0                   	// #0
    1fd8:	b	20d0 <ioctl@plt+0x1090>
    1fdc:	ldr	x0, [sp, #40]
    1fe0:	cmp	x0, #0x0
    1fe4:	b.eq	2008 <ioctl@plt+0xfc8>  // b.none
    1fe8:	ldr	x0, [sp, #40]
    1fec:	bl	fb0 <PyLong_AsLong@plt>
    1ff0:	str	x0, [sp, #88]
    1ff4:	bl	f90 <PyErr_Occurred@plt>
    1ff8:	cmp	x0, #0x0
    1ffc:	b.eq	2008 <ioctl@plt+0xfc8>  // b.none
    2000:	mov	x0, #0x0                   	// #0
    2004:	b	20d0 <ioctl@plt+0x1090>
    2008:	ldr	w0, [sp, #28]
    200c:	sxth	w0, w0
    2010:	strh	w0, [sp, #74]
    2014:	bl	fe0 <PyEval_SaveThread@plt>
    2018:	str	x0, [sp, #112]
    201c:	ldr	w0, [sp, #48]
    2020:	and	w0, w0, #0x4
    2024:	cmp	w0, #0x0
    2028:	b.eq	2034 <ioctl@plt+0xff4>  // b.none
    202c:	mov	w0, #0x6                   	// #6
    2030:	b	2038 <ioctl@plt+0xff8>
    2034:	mov	w0, #0x7                   	// #7
    2038:	add	x1, sp, #0x48
    203c:	mov	x2, x1
    2040:	mov	w1, w0
    2044:	ldr	w0, [sp, #52]
    2048:	bl	fd0 <fcntl64@plt>
    204c:	str	w0, [sp, #108]
    2050:	ldr	x0, [sp, #112]
    2054:	bl	ec0 <PyEval_RestoreThread@plt>
    2058:	ldr	w0, [sp, #108]
    205c:	cmn	w0, #0x1
    2060:	b.ne	2088 <ioctl@plt+0x1048>  // b.any
    2064:	bl	1020 <__errno_location@plt>
    2068:	ldr	w0, [x0]
    206c:	cmp	w0, #0x4
    2070:	b.ne	2088 <ioctl@plt+0x1048>  // b.any
    2074:	bl	1000 <PyErr_CheckSignals@plt>
    2078:	str	w0, [sp, #124]
    207c:	ldr	w0, [sp, #124]
    2080:	cmp	w0, #0x0
    2084:	b.eq	2014 <ioctl@plt+0xfd4>  // b.none
    2088:	ldr	w0, [sp, #108]
    208c:	cmp	w0, #0x0
    2090:	b.ge	20bc <ioctl@plt+0x107c>  // b.tcont
    2094:	ldr	w0, [sp, #124]
    2098:	cmp	w0, #0x0
    209c:	b.ne	20b4 <ioctl@plt+0x1074>  // b.any
    20a0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    20a4:	ldr	x0, [x0, #4040]
    20a8:	ldr	x0, [x0]
    20ac:	bl	ed0 <PyErr_SetFromErrno@plt>
    20b0:	b	20d0 <ioctl@plt+0x1090>
    20b4:	mov	x0, #0x0                   	// #0
    20b8:	b	20d0 <ioctl@plt+0x1090>
    20bc:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    20c0:	ldr	x0, [x0, #4056]
    20c4:	bl	11e0 <ioctl@plt+0x1a0>
    20c8:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x10874>
    20cc:	ldr	x0, [x0, #4056]
    20d0:	ldp	x29, x30, [sp], #128
    20d4:	ret
    20d8:	stp	x29, x30, [sp, #-32]!
    20dc:	mov	x29, sp
    20e0:	str	x0, [sp, #24]
    20e4:	mov	x2, #0x1                   	// #1
    20e8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    20ec:	add	x1, x0, #0x7b8
    20f0:	ldr	x0, [sp, #24]
    20f4:	bl	eb0 <PyModule_AddIntConstant@plt>
    20f8:	cmp	w0, #0x0
    20fc:	b.eq	2108 <ioctl@plt+0x10c8>  // b.none
    2100:	mov	w0, #0xffffffff            	// #-1
    2104:	b	2784 <ioctl@plt+0x1744>
    2108:	mov	x2, #0x2                   	// #2
    210c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2110:	add	x1, x0, #0x7c0
    2114:	ldr	x0, [sp, #24]
    2118:	bl	eb0 <PyModule_AddIntConstant@plt>
    211c:	cmp	w0, #0x0
    2120:	b.eq	212c <ioctl@plt+0x10ec>  // b.none
    2124:	mov	w0, #0xffffffff            	// #-1
    2128:	b	2784 <ioctl@plt+0x1744>
    212c:	mov	x2, #0x4                   	// #4
    2130:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2134:	add	x1, x0, #0x7c8
    2138:	ldr	x0, [sp, #24]
    213c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2140:	cmp	w0, #0x0
    2144:	b.eq	2150 <ioctl@plt+0x1110>  // b.none
    2148:	mov	w0, #0xffffffff            	// #-1
    214c:	b	2784 <ioctl@plt+0x1744>
    2150:	mov	x2, #0x8                   	// #8
    2154:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2158:	add	x1, x0, #0x7d0
    215c:	ldr	x0, [sp, #24]
    2160:	bl	eb0 <PyModule_AddIntConstant@plt>
    2164:	cmp	w0, #0x0
    2168:	b.eq	2174 <ioctl@plt+0x1134>  // b.none
    216c:	mov	w0, #0xffffffff            	// #-1
    2170:	b	2784 <ioctl@plt+0x1744>
    2174:	mov	x2, #0x20                  	// #32
    2178:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    217c:	add	x1, x0, #0x7d8
    2180:	ldr	x0, [sp, #24]
    2184:	bl	eb0 <PyModule_AddIntConstant@plt>
    2188:	cmp	w0, #0x0
    218c:	b.eq	2198 <ioctl@plt+0x1158>  // b.none
    2190:	mov	w0, #0xffffffff            	// #-1
    2194:	b	2784 <ioctl@plt+0x1744>
    2198:	mov	x2, #0x40                  	// #64
    219c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    21a0:	add	x1, x0, #0x7e8
    21a4:	ldr	x0, [sp, #24]
    21a8:	bl	eb0 <PyModule_AddIntConstant@plt>
    21ac:	cmp	w0, #0x0
    21b0:	b.eq	21bc <ioctl@plt+0x117c>  // b.none
    21b4:	mov	w0, #0xffffffff            	// #-1
    21b8:	b	2784 <ioctl@plt+0x1744>
    21bc:	mov	x2, #0x80                  	// #128
    21c0:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    21c4:	add	x1, x0, #0x7f8
    21c8:	ldr	x0, [sp, #24]
    21cc:	bl	eb0 <PyModule_AddIntConstant@plt>
    21d0:	cmp	w0, #0x0
    21d4:	b.eq	21e0 <ioctl@plt+0x11a0>  // b.none
    21d8:	mov	w0, #0xffffffff            	// #-1
    21dc:	b	2784 <ioctl@plt+0x1744>
    21e0:	mov	x2, #0xc0                  	// #192
    21e4:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    21e8:	add	x1, x0, #0x808
    21ec:	ldr	x0, [sp, #24]
    21f0:	bl	eb0 <PyModule_AddIntConstant@plt>
    21f4:	cmp	w0, #0x0
    21f8:	b.eq	2204 <ioctl@plt+0x11c4>  // b.none
    21fc:	mov	w0, #0xffffffff            	// #-1
    2200:	b	2784 <ioctl@plt+0x1744>
    2204:	mov	x2, #0x0                   	// #0
    2208:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    220c:	add	x1, x0, #0x810
    2210:	ldr	x0, [sp, #24]
    2214:	bl	eb0 <PyModule_AddIntConstant@plt>
    2218:	cmp	w0, #0x0
    221c:	b.eq	2228 <ioctl@plt+0x11e8>  // b.none
    2220:	mov	w0, #0xffffffff            	// #-1
    2224:	b	2784 <ioctl@plt+0x1744>
    2228:	mov	x2, #0x406                 	// #1030
    222c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2230:	add	x1, x0, #0x818
    2234:	ldr	x0, [sp, #24]
    2238:	bl	eb0 <PyModule_AddIntConstant@plt>
    223c:	cmp	w0, #0x0
    2240:	b.eq	224c <ioctl@plt+0x120c>  // b.none
    2244:	mov	w0, #0xffffffff            	// #-1
    2248:	b	2784 <ioctl@plt+0x1744>
    224c:	mov	x2, #0x1                   	// #1
    2250:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2254:	add	x1, x0, #0x828
    2258:	ldr	x0, [sp, #24]
    225c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2260:	cmp	w0, #0x0
    2264:	b.eq	2270 <ioctl@plt+0x1230>  // b.none
    2268:	mov	w0, #0xffffffff            	// #-1
    226c:	b	2784 <ioctl@plt+0x1744>
    2270:	mov	x2, #0x2                   	// #2
    2274:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2278:	add	x1, x0, #0x830
    227c:	ldr	x0, [sp, #24]
    2280:	bl	eb0 <PyModule_AddIntConstant@plt>
    2284:	cmp	w0, #0x0
    2288:	b.eq	2294 <ioctl@plt+0x1254>  // b.none
    228c:	mov	w0, #0xffffffff            	// #-1
    2290:	b	2784 <ioctl@plt+0x1744>
    2294:	mov	x2, #0x3                   	// #3
    2298:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    229c:	add	x1, x0, #0x838
    22a0:	ldr	x0, [sp, #24]
    22a4:	bl	eb0 <PyModule_AddIntConstant@plt>
    22a8:	cmp	w0, #0x0
    22ac:	b.eq	22b8 <ioctl@plt+0x1278>  // b.none
    22b0:	mov	w0, #0xffffffff            	// #-1
    22b4:	b	2784 <ioctl@plt+0x1744>
    22b8:	mov	x2, #0x4                   	// #4
    22bc:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    22c0:	add	x1, x0, #0x840
    22c4:	ldr	x0, [sp, #24]
    22c8:	bl	eb0 <PyModule_AddIntConstant@plt>
    22cc:	cmp	w0, #0x0
    22d0:	b.eq	22dc <ioctl@plt+0x129c>  // b.none
    22d4:	mov	w0, #0xffffffff            	// #-1
    22d8:	b	2784 <ioctl@plt+0x1744>
    22dc:	mov	x2, #0x5                   	// #5
    22e0:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    22e4:	add	x1, x0, #0x848
    22e8:	ldr	x0, [sp, #24]
    22ec:	bl	eb0 <PyModule_AddIntConstant@plt>
    22f0:	cmp	w0, #0x0
    22f4:	b.eq	2300 <ioctl@plt+0x12c0>  // b.none
    22f8:	mov	w0, #0xffffffff            	// #-1
    22fc:	b	2784 <ioctl@plt+0x1744>
    2300:	mov	x2, #0x6                   	// #6
    2304:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2308:	add	x1, x0, #0x850
    230c:	ldr	x0, [sp, #24]
    2310:	bl	eb0 <PyModule_AddIntConstant@plt>
    2314:	cmp	w0, #0x0
    2318:	b.eq	2324 <ioctl@plt+0x12e4>  // b.none
    231c:	mov	w0, #0xffffffff            	// #-1
    2320:	b	2784 <ioctl@plt+0x1744>
    2324:	mov	x2, #0x7                   	// #7
    2328:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    232c:	add	x1, x0, #0x858
    2330:	ldr	x0, [sp, #24]
    2334:	bl	eb0 <PyModule_AddIntConstant@plt>
    2338:	cmp	w0, #0x0
    233c:	b.eq	2348 <ioctl@plt+0x1308>  // b.none
    2340:	mov	w0, #0xffffffff            	// #-1
    2344:	b	2784 <ioctl@plt+0x1744>
    2348:	mov	x2, #0x9                   	// #9
    234c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2350:	add	x1, x0, #0x868
    2354:	ldr	x0, [sp, #24]
    2358:	bl	eb0 <PyModule_AddIntConstant@plt>
    235c:	cmp	w0, #0x0
    2360:	b.eq	236c <ioctl@plt+0x132c>  // b.none
    2364:	mov	w0, #0xffffffff            	// #-1
    2368:	b	2784 <ioctl@plt+0x1744>
    236c:	mov	x2, #0x8                   	// #8
    2370:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2374:	add	x1, x0, #0x878
    2378:	ldr	x0, [sp, #24]
    237c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2380:	cmp	w0, #0x0
    2384:	b.eq	2390 <ioctl@plt+0x1350>  // b.none
    2388:	mov	w0, #0xffffffff            	// #-1
    238c:	b	2784 <ioctl@plt+0x1744>
    2390:	mov	x2, #0xb                   	// #11
    2394:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2398:	add	x1, x0, #0x888
    239c:	ldr	x0, [sp, #24]
    23a0:	bl	eb0 <PyModule_AddIntConstant@plt>
    23a4:	cmp	w0, #0x0
    23a8:	b.eq	23b4 <ioctl@plt+0x1374>  // b.none
    23ac:	mov	w0, #0xffffffff            	// #-1
    23b0:	b	2784 <ioctl@plt+0x1744>
    23b4:	mov	x2, #0xa                   	// #10
    23b8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    23bc:	add	x1, x0, #0x898
    23c0:	ldr	x0, [sp, #24]
    23c4:	bl	eb0 <PyModule_AddIntConstant@plt>
    23c8:	cmp	w0, #0x0
    23cc:	b.eq	23d8 <ioctl@plt+0x1398>  // b.none
    23d0:	mov	w0, #0xffffffff            	// #-1
    23d4:	b	2784 <ioctl@plt+0x1744>
    23d8:	mov	x2, #0x0                   	// #0
    23dc:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    23e0:	add	x1, x0, #0x8a8
    23e4:	ldr	x0, [sp, #24]
    23e8:	bl	eb0 <PyModule_AddIntConstant@plt>
    23ec:	cmp	w0, #0x0
    23f0:	b.eq	23fc <ioctl@plt+0x13bc>  // b.none
    23f4:	mov	w0, #0xffffffff            	// #-1
    23f8:	b	2784 <ioctl@plt+0x1744>
    23fc:	mov	x2, #0x1                   	// #1
    2400:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2404:	add	x1, x0, #0x8b0
    2408:	ldr	x0, [sp, #24]
    240c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2410:	cmp	w0, #0x0
    2414:	b.eq	2420 <ioctl@plt+0x13e0>  // b.none
    2418:	mov	w0, #0xffffffff            	// #-1
    241c:	b	2784 <ioctl@plt+0x1744>
    2420:	mov	x2, #0x2                   	// #2
    2424:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2428:	add	x1, x0, #0x8b8
    242c:	ldr	x0, [sp, #24]
    2430:	bl	eb0 <PyModule_AddIntConstant@plt>
    2434:	cmp	w0, #0x0
    2438:	b.eq	2444 <ioctl@plt+0x1404>  // b.none
    243c:	mov	w0, #0xffffffff            	// #-1
    2440:	b	2784 <ioctl@plt+0x1744>
    2444:	mov	x2, #0x5                   	// #5
    2448:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    244c:	add	x1, x0, #0x8c0
    2450:	ldr	x0, [sp, #24]
    2454:	bl	eb0 <PyModule_AddIntConstant@plt>
    2458:	cmp	w0, #0x0
    245c:	b.eq	2468 <ioctl@plt+0x1428>  // b.none
    2460:	mov	w0, #0xffffffff            	// #-1
    2464:	b	2784 <ioctl@plt+0x1744>
    2468:	mov	x2, #0x6                   	// #6
    246c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2470:	add	x1, x0, #0x8d0
    2474:	ldr	x0, [sp, #24]
    2478:	bl	eb0 <PyModule_AddIntConstant@plt>
    247c:	cmp	w0, #0x0
    2480:	b.eq	248c <ioctl@plt+0x144c>  // b.none
    2484:	mov	w0, #0xffffffff            	// #-1
    2488:	b	2784 <ioctl@plt+0x1744>
    248c:	mov	x2, #0x7                   	// #7
    2490:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2494:	add	x1, x0, #0x8e0
    2498:	ldr	x0, [sp, #24]
    249c:	bl	eb0 <PyModule_AddIntConstant@plt>
    24a0:	cmp	w0, #0x0
    24a4:	b.eq	24b0 <ioctl@plt+0x1470>  // b.none
    24a8:	mov	w0, #0xffffffff            	// #-1
    24ac:	b	2784 <ioctl@plt+0x1744>
    24b0:	mov	x2, #0x2000                	// #8192
    24b4:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    24b8:	add	x1, x0, #0x8f0
    24bc:	ldr	x0, [sp, #24]
    24c0:	bl	eb0 <PyModule_AddIntConstant@plt>
    24c4:	cmp	w0, #0x0
    24c8:	b.eq	24d4 <ioctl@plt+0x1494>  // b.none
    24cc:	mov	w0, #0xffffffff            	// #-1
    24d0:	b	2784 <ioctl@plt+0x1744>
    24d4:	mov	x2, #0x400                 	// #1024
    24d8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    24dc:	add	x1, x0, #0x8f8
    24e0:	ldr	x0, [sp, #24]
    24e4:	bl	eb0 <PyModule_AddIntConstant@plt>
    24e8:	cmp	w0, #0x0
    24ec:	b.eq	24f8 <ioctl@plt+0x14b8>  // b.none
    24f0:	mov	w0, #0xffffffff            	// #-1
    24f4:	b	2784 <ioctl@plt+0x1744>
    24f8:	mov	x2, #0x401                 	// #1025
    24fc:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2500:	add	x1, x0, #0x908
    2504:	ldr	x0, [sp, #24]
    2508:	bl	eb0 <PyModule_AddIntConstant@plt>
    250c:	cmp	w0, #0x0
    2510:	b.eq	251c <ioctl@plt+0x14dc>  // b.none
    2514:	mov	w0, #0xffffffff            	// #-1
    2518:	b	2784 <ioctl@plt+0x1744>
    251c:	mov	x2, #0x402                 	// #1026
    2520:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2524:	add	x1, x0, #0x918
    2528:	ldr	x0, [sp, #24]
    252c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2530:	cmp	w0, #0x0
    2534:	b.eq	2540 <ioctl@plt+0x1500>  // b.none
    2538:	mov	w0, #0xffffffff            	// #-1
    253c:	b	2784 <ioctl@plt+0x1744>
    2540:	mov	x2, #0x4                   	// #4
    2544:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2548:	add	x1, x0, #0x928
    254c:	ldr	x0, [sp, #24]
    2550:	bl	eb0 <PyModule_AddIntConstant@plt>
    2554:	cmp	w0, #0x0
    2558:	b.eq	2564 <ioctl@plt+0x1524>  // b.none
    255c:	mov	w0, #0xffffffff            	// #-1
    2560:	b	2784 <ioctl@plt+0x1744>
    2564:	mov	x2, #0x8                   	// #8
    2568:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    256c:	add	x1, x0, #0x930
    2570:	ldr	x0, [sp, #24]
    2574:	bl	eb0 <PyModule_AddIntConstant@plt>
    2578:	cmp	w0, #0x0
    257c:	b.eq	2588 <ioctl@plt+0x1548>  // b.none
    2580:	mov	w0, #0xffffffff            	// #-1
    2584:	b	2784 <ioctl@plt+0x1744>
    2588:	mov	x2, #0x1                   	// #1
    258c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2590:	add	x1, x0, #0x938
    2594:	ldr	x0, [sp, #24]
    2598:	bl	eb0 <PyModule_AddIntConstant@plt>
    259c:	cmp	w0, #0x0
    25a0:	b.eq	25ac <ioctl@plt+0x156c>  // b.none
    25a4:	mov	w0, #0xffffffff            	// #-1
    25a8:	b	2784 <ioctl@plt+0x1744>
    25ac:	mov	x2, #0x1                   	// #1
    25b0:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    25b4:	add	x1, x0, #0x948
    25b8:	ldr	x0, [sp, #24]
    25bc:	bl	eb0 <PyModule_AddIntConstant@plt>
    25c0:	cmp	w0, #0x0
    25c4:	b.eq	25d0 <ioctl@plt+0x1590>  // b.none
    25c8:	mov	w0, #0xffffffff            	// #-1
    25cc:	b	2784 <ioctl@plt+0x1744>
    25d0:	mov	x2, #0x2                   	// #2
    25d4:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    25d8:	add	x1, x0, #0x958
    25dc:	ldr	x0, [sp, #24]
    25e0:	bl	eb0 <PyModule_AddIntConstant@plt>
    25e4:	cmp	w0, #0x0
    25e8:	b.eq	25f4 <ioctl@plt+0x15b4>  // b.none
    25ec:	mov	w0, #0xffffffff            	// #-1
    25f0:	b	2784 <ioctl@plt+0x1744>
    25f4:	mov	x2, #0x4                   	// #4
    25f8:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    25fc:	add	x1, x0, #0x968
    2600:	ldr	x0, [sp, #24]
    2604:	bl	eb0 <PyModule_AddIntConstant@plt>
    2608:	cmp	w0, #0x0
    260c:	b.eq	2618 <ioctl@plt+0x15d8>  // b.none
    2610:	mov	w0, #0xffffffff            	// #-1
    2614:	b	2784 <ioctl@plt+0x1744>
    2618:	mov	x2, #0x8                   	// #8
    261c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2620:	add	x1, x0, #0x978
    2624:	ldr	x0, [sp, #24]
    2628:	bl	eb0 <PyModule_AddIntConstant@plt>
    262c:	cmp	w0, #0x0
    2630:	b.eq	263c <ioctl@plt+0x15fc>  // b.none
    2634:	mov	w0, #0xffffffff            	// #-1
    2638:	b	2784 <ioctl@plt+0x1744>
    263c:	mov	x2, #0x10                  	// #16
    2640:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2644:	add	x1, x0, #0x988
    2648:	ldr	x0, [sp, #24]
    264c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2650:	cmp	w0, #0x0
    2654:	b.eq	2660 <ioctl@plt+0x1620>  // b.none
    2658:	mov	w0, #0xffffffff            	// #-1
    265c:	b	2784 <ioctl@plt+0x1744>
    2660:	mov	x2, #0x20                  	// #32
    2664:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2668:	add	x1, x0, #0x998
    266c:	ldr	x0, [sp, #24]
    2670:	bl	eb0 <PyModule_AddIntConstant@plt>
    2674:	cmp	w0, #0x0
    2678:	b.eq	2684 <ioctl@plt+0x1644>  // b.none
    267c:	mov	w0, #0xffffffff            	// #-1
    2680:	b	2784 <ioctl@plt+0x1744>
    2684:	mov	x2, #0x80000000            	// #2147483648
    2688:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    268c:	add	x1, x0, #0x9a8
    2690:	ldr	x0, [sp, #24]
    2694:	bl	eb0 <PyModule_AddIntConstant@plt>
    2698:	cmp	w0, #0x0
    269c:	b.eq	26a8 <ioctl@plt+0x1668>  // b.none
    26a0:	mov	w0, #0xffffffff            	// #-1
    26a4:	b	2784 <ioctl@plt+0x1744>
    26a8:	mov	x2, #0x409                 	// #1033
    26ac:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    26b0:	add	x1, x0, #0x9b8
    26b4:	ldr	x0, [sp, #24]
    26b8:	bl	eb0 <PyModule_AddIntConstant@plt>
    26bc:	cmp	w0, #0x0
    26c0:	b.eq	26cc <ioctl@plt+0x168c>  // b.none
    26c4:	mov	w0, #0xffffffff            	// #-1
    26c8:	b	2784 <ioctl@plt+0x1744>
    26cc:	mov	x2, #0x40a                 	// #1034
    26d0:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    26d4:	add	x1, x0, #0x9c8
    26d8:	ldr	x0, [sp, #24]
    26dc:	bl	eb0 <PyModule_AddIntConstant@plt>
    26e0:	cmp	w0, #0x0
    26e4:	b.eq	26f0 <ioctl@plt+0x16b0>  // b.none
    26e8:	mov	w0, #0xffffffff            	// #-1
    26ec:	b	2784 <ioctl@plt+0x1744>
    26f0:	mov	x2, #0x1                   	// #1
    26f4:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    26f8:	add	x1, x0, #0x9d8
    26fc:	ldr	x0, [sp, #24]
    2700:	bl	eb0 <PyModule_AddIntConstant@plt>
    2704:	cmp	w0, #0x0
    2708:	b.eq	2714 <ioctl@plt+0x16d4>  // b.none
    270c:	mov	w0, #0xffffffff            	// #-1
    2710:	b	2784 <ioctl@plt+0x1744>
    2714:	mov	x2, #0x2                   	// #2
    2718:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    271c:	add	x1, x0, #0x9e8
    2720:	ldr	x0, [sp, #24]
    2724:	bl	eb0 <PyModule_AddIntConstant@plt>
    2728:	cmp	w0, #0x0
    272c:	b.eq	2738 <ioctl@plt+0x16f8>  // b.none
    2730:	mov	w0, #0xffffffff            	// #-1
    2734:	b	2784 <ioctl@plt+0x1744>
    2738:	mov	x2, #0x4                   	// #4
    273c:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2740:	add	x1, x0, #0x9f8
    2744:	ldr	x0, [sp, #24]
    2748:	bl	eb0 <PyModule_AddIntConstant@plt>
    274c:	cmp	w0, #0x0
    2750:	b.eq	275c <ioctl@plt+0x171c>  // b.none
    2754:	mov	w0, #0xffffffff            	// #-1
    2758:	b	2784 <ioctl@plt+0x1744>
    275c:	mov	x2, #0x8                   	// #8
    2760:	adrp	x0, 3000 <PyInit_fcntl@@Base+0x874>
    2764:	add	x1, x0, #0xa08
    2768:	ldr	x0, [sp, #24]
    276c:	bl	eb0 <PyModule_AddIntConstant@plt>
    2770:	cmp	w0, #0x0
    2774:	b.eq	2780 <ioctl@plt+0x1740>  // b.none
    2778:	mov	w0, #0xffffffff            	// #-1
    277c:	b	2784 <ioctl@plt+0x1744>
    2780:	mov	w0, #0x0                   	// #0
    2784:	ldp	x29, x30, [sp], #32
    2788:	ret

000000000000278c <PyInit_fcntl@@Base>:
    278c:	stp	x29, x30, [sp, #-32]!
    2790:	mov	x29, sp
    2794:	mov	w1, #0x3f5                 	// #1013
    2798:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x11874>
    279c:	add	x0, x0, #0x180
    27a0:	bl	fa0 <PyModule_Create2@plt>
    27a4:	str	x0, [sp, #24]
    27a8:	ldr	x0, [sp, #24]
    27ac:	cmp	x0, #0x0
    27b0:	b.ne	27bc <PyInit_fcntl@@Base+0x30>  // b.any
    27b4:	mov	x0, #0x0                   	// #0
    27b8:	b	27d8 <PyInit_fcntl@@Base+0x4c>
    27bc:	ldr	x0, [sp, #24]
    27c0:	bl	20d8 <ioctl@plt+0x1098>
    27c4:	cmp	w0, #0x0
    27c8:	b.ge	27d4 <PyInit_fcntl@@Base+0x48>  // b.tcont
    27cc:	mov	x0, #0x0                   	// #0
    27d0:	b	27d8 <PyInit_fcntl@@Base+0x4c>
    27d4:	ldr	x0, [sp, #24]
    27d8:	ldp	x29, x30, [sp], #32
    27dc:	ret

Disassembly of section .fini:

00000000000027e0 <.fini>:
    27e0:	stp	x29, x30, [sp, #-16]!
    27e4:	mov	x29, sp
    27e8:	ldp	x29, x30, [sp], #16
    27ec:	ret
