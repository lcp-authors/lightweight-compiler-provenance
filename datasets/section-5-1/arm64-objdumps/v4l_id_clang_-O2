
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//v4l_id_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400848 <_init>:
  400848:	stp	x29, x30, [sp, #-16]!
  40084c:	mov	x29, sp
  400850:	bl	400980 <call_weak_fn>
  400854:	ldp	x29, x30, [sp], #16
  400858:	ret

Disassembly of section .plt:

0000000000400860 <__libc_start_main@plt-0x20>:
  400860:	stp	x16, x30, [sp, #-16]!
  400864:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  400868:	ldr	x17, [x16, #4000]
  40086c:	add	x16, x16, #0xfa0
  400870:	br	x17
  400874:	nop
  400878:	nop
  40087c:	nop

0000000000400880 <__libc_start_main@plt>:
  400880:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  400884:	ldr	x17, [x16, #4008]
  400888:	add	x16, x16, #0xfa8
  40088c:	br	x17

0000000000400890 <abort@plt>:
  400890:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  400894:	ldr	x17, [x16, #4016]
  400898:	add	x16, x16, #0xfb0
  40089c:	br	x17

00000000004008a0 <__gmon_start__@plt>:
  4008a0:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  4008a4:	ldr	x17, [x16, #4024]
  4008a8:	add	x16, x16, #0xfb8
  4008ac:	br	x17

00000000004008b0 <getopt_long@plt>:
  4008b0:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  4008b4:	ldr	x17, [x16, #4032]
  4008b8:	add	x16, x16, #0xfc0
  4008bc:	br	x17

00000000004008c0 <printf@plt>:
  4008c0:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  4008c4:	ldr	x17, [x16, #4040]
  4008c8:	add	x16, x16, #0xfc8
  4008cc:	br	x17

00000000004008d0 <open64@plt>:
  4008d0:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  4008d4:	ldr	x17, [x16, #4048]
  4008d8:	add	x16, x16, #0xfd0
  4008dc:	br	x17

00000000004008e0 <ioctl@plt>:
  4008e0:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  4008e4:	ldr	x17, [x16, #4056]
  4008e8:	add	x16, x16, #0xfd8
  4008ec:	br	x17

00000000004008f0 <puts@plt>:
  4008f0:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  4008f4:	ldr	x17, [x16, #4064]
  4008f8:	add	x16, x16, #0xfe0
  4008fc:	br	x17

0000000000400900 <putchar@plt>:
  400900:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  400904:	ldr	x17, [x16, #4072]
  400908:	add	x16, x16, #0xfe8
  40090c:	br	x17

0000000000400910 <safe_close@plt>:
  400910:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  400914:	ldr	x17, [x16, #4080]
  400918:	add	x16, x16, #0xff0
  40091c:	br	x17

0000000000400920 <log_assert_failed_unreachable_realm@plt>:
  400920:	adrp	x16, 41f000 <__FRAME_END__+0x1e128>
  400924:	ldr	x17, [x16, #4088]
  400928:	add	x16, x16, #0xff8
  40092c:	br	x17

Disassembly of section .text:

0000000000400930 <_start>:
  400930:	mov	x29, #0x0                   	// #0
  400934:	mov	x30, #0x0                   	// #0
  400938:	mov	x5, x0
  40093c:	ldr	x1, [sp]
  400940:	add	x2, sp, #0x8
  400944:	mov	x6, sp
  400948:	movz	x0, #0x0, lsl #48
  40094c:	movk	x0, #0x0, lsl #32
  400950:	movk	x0, #0x40, lsl #16
  400954:	movk	x0, #0xa3c
  400958:	movz	x3, #0x0, lsl #48
  40095c:	movk	x3, #0x0, lsl #32
  400960:	movk	x3, #0x40, lsl #16
  400964:	movk	x3, #0xbf8
  400968:	movz	x4, #0x0, lsl #48
  40096c:	movk	x4, #0x0, lsl #32
  400970:	movk	x4, #0x40, lsl #16
  400974:	movk	x4, #0xc78
  400978:	bl	400880 <__libc_start_main@plt>
  40097c:	bl	400890 <abort@plt>

0000000000400980 <call_weak_fn>:
  400980:	adrp	x0, 41f000 <__FRAME_END__+0x1e128>
  400984:	ldr	x0, [x0, #3976]
  400988:	cbz	x0, 400990 <call_weak_fn+0x10>
  40098c:	b	4008a0 <__gmon_start__@plt>
  400990:	ret
  400994:	udf	#0

0000000000400998 <deregister_tm_clones>:
  400998:	adrp	x0, 420000 <completed.8445>
  40099c:	add	x0, x0, #0x0
  4009a0:	adrp	x1, 420000 <completed.8445>
  4009a4:	add	x1, x1, #0x0
  4009a8:	cmp	x1, x0
  4009ac:	b.eq	4009c4 <deregister_tm_clones+0x2c>  // b.none
  4009b0:	adrp	x1, 400000 <_init-0x848>
  4009b4:	ldr	x1, [x1, #3216]
  4009b8:	cbz	x1, 4009c4 <deregister_tm_clones+0x2c>
  4009bc:	mov	x16, x1
  4009c0:	br	x16
  4009c4:	ret

00000000004009c8 <register_tm_clones>:
  4009c8:	adrp	x0, 420000 <completed.8445>
  4009cc:	add	x0, x0, #0x0
  4009d0:	adrp	x1, 420000 <completed.8445>
  4009d4:	add	x1, x1, #0x0
  4009d8:	sub	x1, x1, x0
  4009dc:	lsr	x2, x1, #63
  4009e0:	add	x1, x2, x1, asr #3
  4009e4:	cmp	xzr, x1, asr #1
  4009e8:	asr	x1, x1, #1
  4009ec:	b.eq	400a04 <register_tm_clones+0x3c>  // b.none
  4009f0:	adrp	x2, 400000 <_init-0x848>
  4009f4:	ldr	x2, [x2, #3224]
  4009f8:	cbz	x2, 400a04 <register_tm_clones+0x3c>
  4009fc:	mov	x16, x2
  400a00:	br	x16
  400a04:	ret

0000000000400a08 <__do_global_dtors_aux>:
  400a08:	stp	x29, x30, [sp, #-32]!
  400a0c:	mov	x29, sp
  400a10:	str	x19, [sp, #16]
  400a14:	adrp	x19, 420000 <completed.8445>
  400a18:	ldrb	w0, [x19]
  400a1c:	cbnz	w0, 400a2c <__do_global_dtors_aux+0x24>
  400a20:	bl	400998 <deregister_tm_clones>
  400a24:	mov	w0, #0x1                   	// #1
  400a28:	strb	w0, [x19]
  400a2c:	ldr	x19, [sp, #16]
  400a30:	ldp	x29, x30, [sp], #32
  400a34:	ret

0000000000400a38 <frame_dummy>:
  400a38:	b	4009c8 <register_tm_clones>

0000000000400a3c <main>:
  400a3c:	sub	sp, sp, #0x90
  400a40:	adrp	x2, 400000 <_init-0x848>
  400a44:	adrp	x3, 400000 <_init-0x848>
  400a48:	add	x2, x2, #0xce5
  400a4c:	add	x3, x3, #0xca0
  400a50:	mov	x4, xzr
  400a54:	stp	x29, x30, [sp, #112]
  400a58:	stp	x20, x19, [sp, #128]
  400a5c:	add	x29, sp, #0x70
  400a60:	mov	x19, x1
  400a64:	bl	4008b0 <getopt_long@plt>
  400a68:	tbnz	w0, #31, 400a9c <main+0x60>
  400a6c:	cmp	w0, #0x3f
  400a70:	b.eq	400b68 <main+0x12c>  // b.none
  400a74:	cmp	w0, #0x68
  400a78:	b.ne	400bd4 <main+0x198>  // b.any
  400a7c:	adrp	x8, 420000 <completed.8445>
  400a80:	ldr	x1, [x8, #8]
  400a84:	adrp	x0, 400000 <_init-0x848>
  400a88:	add	x0, x0, #0xce7
  400a8c:	bl	4008c0 <printf@plt>
  400a90:	mov	w20, wzr
  400a94:	mov	w19, #0xffffffff            	// #-1
  400a98:	b	400b84 <main+0x148>
  400a9c:	adrp	x8, 420000 <completed.8445>
  400aa0:	ldrsw	x8, [x8, #16]
  400aa4:	ldr	x0, [x19, x8, lsl #3]
  400aa8:	cbz	x0, 400b74 <main+0x138>
  400aac:	mov	w1, wzr
  400ab0:	bl	4008d0 <open64@plt>
  400ab4:	mov	w19, w0
  400ab8:	tbnz	w0, #31, 400b80 <main+0x144>
  400abc:	mov	w1, #0x5600                	// #22016
  400ac0:	add	x2, sp, #0x8
  400ac4:	movk	w1, #0x8068, lsl #16
  400ac8:	mov	w0, w19
  400acc:	add	x20, sp, #0x8
  400ad0:	bl	4008e0 <ioctl@plt>
  400ad4:	cbnz	w0, 400b60 <main+0x124>
  400ad8:	adrp	x0, 400000 <_init-0x848>
  400adc:	add	x0, x0, #0xdeb
  400ae0:	bl	4008f0 <puts@plt>
  400ae4:	adrp	x0, 400000 <_init-0x848>
  400ae8:	add	x1, x20, #0x10
  400aec:	add	x0, x0, #0xd87
  400af0:	bl	4008c0 <printf@plt>
  400af4:	adrp	x0, 400000 <_init-0x848>
  400af8:	add	x0, x0, #0xd9a
  400afc:	bl	4008c0 <printf@plt>
  400b00:	ldp	w8, w9, [sp, #92]
  400b04:	cmp	w8, #0x0
  400b08:	csel	w20, w9, w8, lt  // lt = tstop
  400b0c:	mov	w8, #0x1001                	// #4097
  400b10:	tst	w20, w8
  400b14:	b.eq	400b24 <main+0xe8>  // b.none
  400b18:	adrp	x0, 400000 <_init-0x848>
  400b1c:	add	x0, x0, #0xdb0
  400b20:	bl	4008c0 <printf@plt>
  400b24:	mov	w8, #0x2002                	// #8194
  400b28:	tst	w20, w8
  400b2c:	b.eq	400b3c <main+0x100>  // b.none
  400b30:	adrp	x0, 400000 <_init-0x848>
  400b34:	add	x0, x0, #0xdb9
  400b38:	bl	4008c0 <printf@plt>
  400b3c:	tbnz	w20, #2, 400ba0 <main+0x164>
  400b40:	tbnz	w20, #17, 400bb0 <main+0x174>
  400b44:	tbnz	w20, #16, 400bc0 <main+0x184>
  400b48:	tbz	w20, #18, 400b58 <main+0x11c>
  400b4c:	adrp	x0, 400000 <_init-0x848>
  400b50:	add	x0, x0, #0xde4
  400b54:	bl	4008c0 <printf@plt>
  400b58:	mov	w0, #0xa                   	// #10
  400b5c:	bl	400900 <putchar@plt>
  400b60:	mov	w20, wzr
  400b64:	b	400b84 <main+0x148>
  400b68:	mov	w20, #0xffffffea            	// #-22
  400b6c:	mov	w19, #0xffffffff            	// #-1
  400b70:	b	400b84 <main+0x148>
  400b74:	mov	w20, #0x2                   	// #2
  400b78:	mov	w19, #0xffffffff            	// #-1
  400b7c:	b	400b84 <main+0x148>
  400b80:	mov	w20, #0x3                   	// #3
  400b84:	mov	w0, w19
  400b88:	bl	400910 <safe_close@plt>
  400b8c:	mov	w0, w20
  400b90:	ldp	x20, x19, [sp, #128]
  400b94:	ldp	x29, x30, [sp, #112]
  400b98:	add	sp, sp, #0x90
  400b9c:	ret
  400ba0:	adrp	x0, 400000 <_init-0x848>
  400ba4:	add	x0, x0, #0xdc7
  400ba8:	bl	4008c0 <printf@plt>
  400bac:	tbz	w20, #17, 400b44 <main+0x108>
  400bb0:	adrp	x0, 400000 <_init-0x848>
  400bb4:	add	x0, x0, #0xdd6
  400bb8:	bl	4008c0 <printf@plt>
  400bbc:	tbz	w20, #16, 400b48 <main+0x10c>
  400bc0:	adrp	x0, 400000 <_init-0x848>
  400bc4:	add	x0, x0, #0xddd
  400bc8:	bl	4008c0 <printf@plt>
  400bcc:	tbnz	w20, #18, 400b4c <main+0x110>
  400bd0:	b	400b58 <main+0x11c>
  400bd4:	adrp	x1, 400000 <_init-0x848>
  400bd8:	adrp	x2, 400000 <_init-0x848>
  400bdc:	adrp	x4, 400000 <_init-0x848>
  400be0:	add	x1, x1, #0xd43
  400be4:	add	x2, x2, #0xd57
  400be8:	add	x4, x4, #0xd70
  400bec:	mov	w0, #0x1                   	// #1
  400bf0:	mov	w3, #0x37                  	// #55
  400bf4:	bl	400920 <log_assert_failed_unreachable_realm@plt>

0000000000400bf8 <__libc_csu_init>:
  400bf8:	stp	x29, x30, [sp, #-64]!
  400bfc:	mov	x29, sp
  400c00:	stp	x19, x20, [sp, #16]
  400c04:	adrp	x20, 41f000 <__FRAME_END__+0x1e128>
  400c08:	add	x20, x20, #0xd60
  400c0c:	stp	x21, x22, [sp, #32]
  400c10:	adrp	x21, 41f000 <__FRAME_END__+0x1e128>
  400c14:	add	x21, x21, #0xd58
  400c18:	sub	x20, x20, x21
  400c1c:	mov	w22, w0
  400c20:	stp	x23, x24, [sp, #48]
  400c24:	mov	x23, x1
  400c28:	mov	x24, x2
  400c2c:	bl	400848 <_init>
  400c30:	cmp	xzr, x20, asr #3
  400c34:	b.eq	400c60 <__libc_csu_init+0x68>  // b.none
  400c38:	asr	x20, x20, #3
  400c3c:	mov	x19, #0x0                   	// #0
  400c40:	ldr	x3, [x21, x19, lsl #3]
  400c44:	mov	x2, x24
  400c48:	add	x19, x19, #0x1
  400c4c:	mov	x1, x23
  400c50:	mov	w0, w22
  400c54:	blr	x3
  400c58:	cmp	x20, x19
  400c5c:	b.ne	400c40 <__libc_csu_init+0x48>  // b.any
  400c60:	ldp	x19, x20, [sp, #16]
  400c64:	ldp	x21, x22, [sp, #32]
  400c68:	ldp	x23, x24, [sp, #48]
  400c6c:	ldp	x29, x30, [sp], #64
  400c70:	ret
  400c74:	nop

0000000000400c78 <__libc_csu_fini>:
  400c78:	ret

Disassembly of section .fini:

0000000000400c7c <_fini>:
  400c7c:	stp	x29, x30, [sp, #-16]!
  400c80:	mov	x29, sp
  400c84:	ldp	x29, x30, [sp], #16
  400c88:	ret
