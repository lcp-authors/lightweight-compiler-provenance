
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//UTF-16.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000750 <.init>:
 750:	stp	x29, x30, [sp, #-16]!
 754:	mov	x29, sp
 758:	bl	820 <__assert_fail@plt+0x10>
 75c:	ldp	x29, x30, [sp], #16
 760:	ret

Disassembly of section .plt:

0000000000000770 <__cxa_finalize@plt-0x20>:
 770:	stp	x16, x30, [sp, #-16]!
 774:	adrp	x16, 12000 <gconv@@Base+0x115c8>
 778:	ldr	x17, [x16, #4088]
 77c:	add	x16, x16, #0xff8
 780:	br	x17
 784:	nop
 788:	nop
 78c:	nop

0000000000000790 <__cxa_finalize@plt>:
 790:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 794:	ldr	x17, [x16]
 798:	add	x16, x16, #0x0
 79c:	br	x17

00000000000007a0 <malloc@plt>:
 7a0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 7a4:	ldr	x17, [x16, #8]
 7a8:	add	x16, x16, #0x8
 7ac:	br	x17

00000000000007b0 <__gconv_transliterate@plt>:
 7b0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 7b4:	ldr	x17, [x16, #16]
 7b8:	add	x16, x16, #0x10
 7bc:	br	x17

00000000000007c0 <__stack_chk_fail@plt>:
 7c0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 7c4:	ldr	x17, [x16, #24]
 7c8:	add	x16, x16, #0x18
 7cc:	br	x17

00000000000007d0 <__gmon_start__@plt>:
 7d0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 7d4:	ldr	x17, [x16, #32]
 7d8:	add	x16, x16, #0x20
 7dc:	br	x17

00000000000007e0 <free@plt>:
 7e0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 7e4:	ldr	x17, [x16, #40]
 7e8:	add	x16, x16, #0x28
 7ec:	br	x17

00000000000007f0 <__strcasecmp@plt>:
 7f0:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 7f4:	ldr	x17, [x16, #48]
 7f8:	add	x16, x16, #0x30
 7fc:	br	x17

0000000000000800 <_dl_mcount_wrapper_check@plt>:
 800:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 804:	ldr	x17, [x16, #56]
 808:	add	x16, x16, #0x38
 80c:	br	x17

0000000000000810 <__assert_fail@plt>:
 810:	adrp	x16, 13000 <__cxa_finalize@GLIBC_2.17>
 814:	ldr	x17, [x16, #64]
 818:	add	x16, x16, #0x40
 81c:	br	x17

Disassembly of section .text:

0000000000000820 <gconv_init@@Base-0xd8>:
     820:	adrp	x0, 12000 <gconv@@Base+0x115c8>
     824:	ldr	x0, [x0, #4048]
     828:	cbz	x0, 830 <__assert_fail@plt+0x20>
     82c:	b	7d0 <__gmon_start__@plt>
     830:	ret
     834:	nop
     838:	adrp	x0, 13000 <gconv@@Base+0x125c8>
     83c:	add	x0, x0, #0x50
     840:	adrp	x1, 13000 <gconv@@Base+0x125c8>
     844:	add	x1, x1, #0x50
     848:	cmp	x1, x0
     84c:	b.eq	864 <__assert_fail@plt+0x54>  // b.none
     850:	adrp	x1, 12000 <gconv@@Base+0x115c8>
     854:	ldr	x1, [x1, #4024]
     858:	cbz	x1, 864 <__assert_fail@plt+0x54>
     85c:	mov	x16, x1
     860:	br	x16
     864:	ret
     868:	adrp	x0, 13000 <gconv@@Base+0x125c8>
     86c:	add	x0, x0, #0x50
     870:	adrp	x1, 13000 <gconv@@Base+0x125c8>
     874:	add	x1, x1, #0x50
     878:	sub	x1, x1, x0
     87c:	lsr	x2, x1, #63
     880:	add	x1, x2, x1, asr #3
     884:	cmp	xzr, x1, asr #1
     888:	asr	x1, x1, #1
     88c:	b.eq	8a4 <__assert_fail@plt+0x94>  // b.none
     890:	adrp	x2, 12000 <gconv@@Base+0x115c8>
     894:	ldr	x2, [x2, #4064]
     898:	cbz	x2, 8a4 <__assert_fail@plt+0x94>
     89c:	mov	x16, x2
     8a0:	br	x16
     8a4:	ret
     8a8:	stp	x29, x30, [sp, #-32]!
     8ac:	mov	x29, sp
     8b0:	str	x19, [sp, #16]
     8b4:	adrp	x19, 13000 <gconv@@Base+0x125c8>
     8b8:	ldrb	w0, [x19, #80]
     8bc:	cbnz	w0, 8e4 <__assert_fail@plt+0xd4>
     8c0:	adrp	x0, 12000 <gconv@@Base+0x115c8>
     8c4:	ldr	x0, [x0, #4032]
     8c8:	cbz	x0, 8d8 <__assert_fail@plt+0xc8>
     8cc:	adrp	x0, 13000 <gconv@@Base+0x125c8>
     8d0:	ldr	x0, [x0, #72]
     8d4:	bl	790 <__cxa_finalize@plt>
     8d8:	bl	838 <__assert_fail@plt+0x28>
     8dc:	mov	w0, #0x1                   	// #1
     8e0:	strb	w0, [x19, #80]
     8e4:	ldr	x19, [sp, #16]
     8e8:	ldp	x29, x30, [sp], #32
     8ec:	ret
     8f0:	b	868 <__assert_fail@plt+0x58>
     8f4:	nop

00000000000008f8 <gconv_init@@Base>:
     8f8:	stp	x29, x30, [sp, #-48]!
     8fc:	mov	x29, sp
     900:	stp	x21, x22, [sp, #32]
     904:	ldr	x21, [x0, #24]
     908:	stp	x19, x20, [sp, #16]
     90c:	adrp	x20, 1000 <gconv@@Base+0x5c8>
     910:	add	x20, x20, #0xd40
     914:	mov	x19, x0
     918:	mov	x1, x20
     91c:	mov	x0, x21
     920:	bl	7f0 <__strcasecmp@plt>
     924:	cbz	w0, 960 <gconv_init@@Base+0x68>
     928:	ldr	x22, [x19, #32]
     92c:	mov	x1, x20
     930:	mov	x0, x22
     934:	bl	7f0 <__strcasecmp@plt>
     938:	cbnz	w0, 9b8 <gconv_init@@Base+0xc0>
     93c:	mov	w20, #0x1                   	// #1
     940:	mov	x0, #0x8                   	// #8
     944:	bl	7a0 <malloc@plt>
     948:	cbz	x0, 9a4 <gconv_init@@Base+0xac>
     94c:	mov	x1, #0x2                   	// #2
     950:	mov	w3, #0x1                   	// #1
     954:	mov	x2, #0x400000004           	// #17179869188
     958:	movk	x1, #0x4, lsl #32
     95c:	b	980 <gconv_init@@Base+0x88>
     960:	mov	w20, #0x1                   	// #1
     964:	mov	x0, #0x8                   	// #8
     968:	bl	7a0 <malloc@plt>
     96c:	cbz	x0, 9a4 <gconv_init@@Base+0xac>
     970:	mov	x2, #0x2                   	// #2
     974:	mov	w3, #0x2                   	// #2
     978:	movk	x2, #0x4, lsl #32
     97c:	mov	x1, #0x400000004           	// #17179869188
     980:	stp	w3, w20, [x0]
     984:	stp	x2, x1, [x19, #72]
     988:	str	wzr, [x19, #88]
     98c:	str	x0, [x19, #96]
     990:	mov	w0, #0x0                   	// #0
     994:	ldp	x19, x20, [sp, #16]
     998:	ldp	x21, x22, [sp, #32]
     99c:	ldp	x29, x30, [sp], #48
     9a0:	ret
     9a4:	mov	w0, #0x3                   	// #3
     9a8:	ldp	x19, x20, [sp, #16]
     9ac:	ldp	x21, x22, [sp, #32]
     9b0:	ldp	x29, x30, [sp], #48
     9b4:	ret
     9b8:	adrp	x20, 1000 <gconv@@Base+0x5c8>
     9bc:	add	x20, x20, #0xd50
     9c0:	mov	x1, x20
     9c4:	mov	x0, x21
     9c8:	bl	7f0 <__strcasecmp@plt>
     9cc:	cbz	w0, a10 <gconv_init@@Base+0x118>
     9d0:	mov	x1, x20
     9d4:	mov	x0, x22
     9d8:	bl	7f0 <__strcasecmp@plt>
     9dc:	cbz	w0, a18 <gconv_init@@Base+0x120>
     9e0:	adrp	x20, 1000 <gconv@@Base+0x5c8>
     9e4:	add	x20, x20, #0xd60
     9e8:	mov	x0, x21
     9ec:	mov	x1, x20
     9f0:	bl	7f0 <__strcasecmp@plt>
     9f4:	cbz	w0, a20 <gconv_init@@Base+0x128>
     9f8:	mov	x1, x20
     9fc:	mov	x0, x22
     a00:	bl	7f0 <__strcasecmp@plt>
     a04:	cbz	w0, a28 <gconv_init@@Base+0x130>
     a08:	mov	w0, #0x1                   	// #1
     a0c:	b	994 <gconv_init@@Base+0x9c>
     a10:	mov	w20, #0x3                   	// #3
     a14:	b	964 <gconv_init@@Base+0x6c>
     a18:	mov	w20, #0x3                   	// #3
     a1c:	b	940 <gconv_init@@Base+0x48>
     a20:	mov	w20, #0x2                   	// #2
     a24:	b	964 <gconv_init@@Base+0x6c>
     a28:	mov	w20, #0x2                   	// #2
     a2c:	b	940 <gconv_init@@Base+0x48>

0000000000000a30 <gconv_end@@Base>:
     a30:	ldr	x0, [x0, #96]
     a34:	b	7e0 <free@plt>

0000000000000a38 <gconv@@Base>:
     a38:	stp	x29, x30, [sp, #-240]!
     a3c:	mov	x11, x2
     a40:	mov	x14, x4
     a44:	mov	x29, sp
     a48:	stp	x21, x22, [sp, #32]
     a4c:	mov	x21, x1
     a50:	adrp	x1, 12000 <gconv@@Base+0x115c8>
     a54:	stp	x19, x20, [sp, #16]
     a58:	mov	x20, x3
     a5c:	ldr	w15, [x21, #16]
     a60:	ldr	x1, [x1, #4056]
     a64:	stp	x23, x24, [sp, #48]
     a68:	mov	x24, x5
     a6c:	ldr	x8, [x1]
     a70:	str	x8, [sp, #232]
     a74:	mov	x8, #0x0                   	// #0
     a78:	stp	x25, x26, [sp, #64]
     a7c:	mov	x23, #0x0                   	// #0
     a80:	stp	x27, x28, [sp, #80]
     a84:	mov	w25, w7
     a88:	add	x26, x0, #0x68
     a8c:	str	x0, [sp, #160]
     a90:	add	x27, x21, #0x30
     a94:	tbnz	w15, #0, ab4 <gconv@@Base+0x7c>
     a98:	ldr	x0, [x0, #104]
     a9c:	ldr	x23, [x26, #40]
     aa0:	cbz	x0, ab4 <gconv@@Base+0x7c>
     aa4:	adrp	x0, 12000 <gconv@@Base+0x115c8>
     aa8:	ldr	x0, [x0, #4040]
     aac:	ldr	x0, [x0]
     ab0:	eor	x23, x23, x0
     ab4:	cbnz	w6, 12b8 <gconv@@Base+0x880>
     ab8:	ldr	x1, [sp, #160]
     abc:	cmp	x14, #0x0
     ac0:	csel	x3, x21, x14, eq  // eq = none
     ac4:	add	x0, sp, #0xc0
     ac8:	cmp	x24, #0x0
     acc:	ldr	w2, [x21, #20]
     ad0:	ldr	x1, [x1, #96]
     ad4:	csel	x0, x0, xzr, ne  // ne = any
     ad8:	ldr	x8, [x3]
     adc:	str	x0, [sp, #152]
     ae0:	ldr	w0, [x1]
     ae4:	str	w0, [sp, #184]
     ae8:	str	xzr, [sp, #192]
     aec:	ldr	x0, [x11]
     af0:	ldr	x9, [x21, #8]
     af4:	cbz	w2, 109c <gconv@@Base+0x664>
     af8:	and	w10, w15, #0x4
     afc:	cbnz	w25, de0 <gconv@@Base+0x3a8>
     b00:	ldr	x22, [x11]
     b04:	add	x0, sp, #0xd8
     b08:	str	x0, [sp, #168]
     b0c:	add	x0, sp, #0xd0
     b10:	add	x28, sp, #0xc8
     b14:	str	x14, [sp, #112]
     b18:	stp	x26, x27, [sp, #128]
     b1c:	mov	x13, x22
     b20:	mov	x26, x8
     b24:	str	x28, [sp, #144]
     b28:	mov	x22, x9
     b2c:	str	x0, [sp, #176]
     b30:	mov	w27, w10
     b34:	ldr	w0, [sp, #184]
     b38:	mov	x28, x11
     b3c:	cmp	w0, #0x2
     b40:	b.eq	c50 <gconv@@Base+0x218>  // b.none
     b44:	stp	x13, x26, [sp, #208]
     b48:	mov	x19, x26
     b4c:	cmp	x20, x13
     b50:	b.eq	1378 <gconv@@Base+0x940>  // b.none
     b54:	mov	x0, x13
     b58:	mov	w12, #0x4                   	// #4
     b5c:	mov	w7, #0xffff2800            	// #-55296
     b60:	mov	w14, #0xffff                	// #65535
     b64:	mov	w18, #0x10ffff              	// #1114111
     b68:	add	x2, x0, #0x4
     b6c:	cmp	x20, x2
     b70:	b.cc	d98 <gconv@@Base+0x360>  // b.lo, b.ul, b.last
     b74:	add	x1, x19, #0x2
     b78:	cmp	x22, x1
     b7c:	b.cc	db4 <gconv@@Base+0x37c>  // b.lo, b.ul, b.last
     b80:	ldr	w0, [x0]
     b84:	add	w3, w0, w7
     b88:	cmp	w3, #0x7ff
     b8c:	b.ls	dc0 <gconv@@Base+0x388>  // b.plast
     b90:	cmp	w0, w14
     b94:	cbz	w27, d24 <gconv@@Base+0x2ec>
     b98:	b.hi	fa4 <gconv@@Base+0x56c>  // b.pmore
     b9c:	rev16	w0, w0
     ba0:	strh	w0, [x19]
     ba4:	mov	x19, x1
     ba8:	mov	x0, x2
     bac:	stp	x2, x19, [sp, #208]
     bb0:	cmp	x20, x0
     bb4:	b.ne	b68 <gconv@@Base+0x130>  // b.any
     bb8:	str	x0, [x28]
     bbc:	ldr	x0, [sp, #112]
     bc0:	cbnz	x0, ce8 <gconv@@Base+0x2b0>
     bc4:	ldp	w1, w0, [x21, #16]
     bc8:	add	w0, w0, #0x1
     bcc:	str	w0, [x21, #20]
     bd0:	tbnz	w1, #0, 101c <gconv@@Base+0x5e4>
     bd4:	str	x13, [sp, #120]
     bd8:	cmp	x26, x19
     bdc:	b.cs	1094 <gconv@@Base+0x65c>  // b.hs, b.nlast
     be0:	ldr	x1, [x21]
     be4:	mov	x0, x23
     be8:	str	w12, [sp, #104]
     bec:	str	x1, [sp, #200]
     bf0:	bl	800 <_dl_mcount_wrapper_check@plt>
     bf4:	ldp	x0, x1, [sp, #128]
     bf8:	mov	w7, w25
     bfc:	ldr	x2, [sp, #144]
     c00:	mov	x5, x24
     c04:	mov	x3, x19
     c08:	mov	w6, #0x0                   	// #0
     c0c:	mov	x4, #0x0                   	// #0
     c10:	blr	x23
     c14:	mov	w7, w0
     c18:	ldr	w12, [sp, #104]
     c1c:	cmp	w0, #0x4
     c20:	b.eq	da4 <gconv@@Base+0x36c>  // b.none
     c24:	ldr	x12, [sp, #200]
     c28:	ldr	x13, [sp, #120]
     c2c:	cmp	x12, x19
     c30:	b.ne	f14 <gconv@@Base+0x4dc>  // b.any
     c34:	cbnz	w7, 136c <gconv@@Base+0x934>
     c38:	ldr	w0, [sp, #184]
     c3c:	ldr	w15, [x21, #16]
     c40:	cmp	w0, #0x2
     c44:	ldr	x26, [x21]
     c48:	ldr	x13, [x28]
     c4c:	b.ne	b44 <gconv@@Base+0x10c>  // b.any
     c50:	cmp	x20, x13
     c54:	b.eq	1590 <gconv@@Base+0xb58>  // b.none
     c58:	add	x2, x13, #0x2
     c5c:	cmp	x20, x2
     c60:	b.cc	1298 <gconv@@Base+0x860>  // b.lo, b.ul, b.last
     c64:	add	x3, x26, #0x4
     c68:	cmp	x22, x3
     c6c:	b.cc	12a8 <gconv@@Base+0x870>  // b.lo, b.ul, b.last
     c70:	and	w15, w15, #0x2
     c74:	mov	x19, x26
     c78:	mov	x0, x13
     c7c:	mov	w12, #0x4                   	// #4
     c80:	mov	w4, #0x2800                	// #10240
     c84:	mov	w5, #0xdbff                	// #56319
     c88:	mov	w6, #0x2400                	// #9216
     c8c:	mov	w14, #0xffff2840            	// #-55232
     c90:	mov	w7, #0xffff2400            	// #-56320
     c94:	ldrh	w1, [x0]
     c98:	cbnz	w27, d34 <gconv@@Base+0x2fc>
     c9c:	add	w8, w1, w4
     ca0:	and	w8, w8, #0xffff
     ca4:	cmp	w8, #0x7ff
     ca8:	b.ls	125c <gconv@@Base+0x824>  // b.plast
     cac:	mov	x0, x2
     cb0:	str	w1, [x19]
     cb4:	mov	x19, x3
     cb8:	cmp	x20, x0
     cbc:	b.eq	bb8 <gconv@@Base+0x180>  // b.none
     cc0:	add	x2, x0, #0x2
     cc4:	cmp	x20, x2
     cc8:	b.cc	dd8 <gconv@@Base+0x3a0>  // b.lo, b.ul, b.last
     ccc:	add	x3, x19, #0x4
     cd0:	cmp	x22, x3
     cd4:	b.cs	c94 <gconv@@Base+0x25c>  // b.hs, b.nlast
     cd8:	str	x0, [x28]
     cdc:	mov	w12, #0x5                   	// #5
     ce0:	ldr	x0, [sp, #112]
     ce4:	cbz	x0, bc4 <gconv@@Base+0x18c>
     ce8:	str	x19, [x0]
     cec:	adrp	x0, 12000 <gconv@@Base+0x115c8>
     cf0:	ldr	x0, [x0, #4056]
     cf4:	ldr	x1, [sp, #232]
     cf8:	ldr	x0, [x0]
     cfc:	eor	x0, x1, x0
     d00:	cbnz	x0, 1cb8 <gconv@@Base+0x1280>
     d04:	mov	w0, w12
     d08:	ldp	x19, x20, [sp, #16]
     d0c:	ldp	x21, x22, [sp, #32]
     d10:	ldp	x23, x24, [sp, #48]
     d14:	ldp	x25, x26, [sp, #64]
     d18:	ldp	x27, x28, [sp, #80]
     d1c:	ldp	x29, x30, [sp], #240
     d20:	ret
     d24:	b.hi	fe4 <gconv@@Base+0x5ac>  // b.pmore
     d28:	strh	w0, [x19]
     d2c:	mov	x19, x1
     d30:	b	ba8 <gconv@@Base+0x170>
     d34:	rev16	w1, w1
     d38:	and	w1, w1, #0xffff
     d3c:	add	w8, w1, w4
     d40:	and	w8, w8, #0xffff
     d44:	cmp	w8, #0x7ff
     d48:	b.hi	cac <gconv@@Base+0x274>  // b.pmore
     d4c:	cmp	w1, w5
     d50:	b.hi	1284 <gconv@@Base+0x84c>  // b.pmore
     d54:	add	x10, x0, #0x4
     d58:	cmp	x20, x10
     d5c:	b.cc	dd8 <gconv@@Base+0x3a0>  // b.lo, b.ul, b.last
     d60:	ldrh	w8, [x0, #2]
     d64:	rev16	w8, w8
     d68:	and	w8, w8, #0xffff
     d6c:	add	w9, w8, w6
     d70:	and	w9, w9, #0xffff
     d74:	cmp	w9, #0x3ff
     d78:	b.hi	1284 <gconv@@Base+0x84c>  // b.pmore
     d7c:	add	w1, w1, w14
     d80:	add	w8, w8, w7
     d84:	mov	x0, x10
     d88:	add	w1, w8, w1, lsl #10
     d8c:	str	w1, [x19]
     d90:	mov	x19, x3
     d94:	b	cb8 <gconv@@Base+0x280>
     d98:	mov	w12, #0x7                   	// #7
     d9c:	ldr	x0, [sp, #208]
     da0:	b	bb8 <gconv@@Base+0x180>
     da4:	mov	w7, w12
     da8:	cmp	w12, #0x5
     dac:	b.ne	c34 <gconv@@Base+0x1fc>  // b.any
     db0:	b	c38 <gconv@@Base+0x200>
     db4:	mov	w12, #0x5                   	// #5
     db8:	ldr	x0, [sp, #208]
     dbc:	b	bb8 <gconv@@Base+0x180>
     dc0:	ldr	x0, [sp, #152]
     dc4:	cbz	x0, dcc <gconv@@Base+0x394>
     dc8:	tbnz	w15, #1, ef4 <gconv@@Base+0x4bc>
     dcc:	mov	w12, #0x6                   	// #6
     dd0:	ldr	x0, [sp, #208]
     dd4:	b	bb8 <gconv@@Base+0x180>
     dd8:	mov	w12, #0x7                   	// #7
     ddc:	b	bb8 <gconv@@Base+0x180>
     de0:	ldr	x28, [x21, #32]
     de4:	ldr	w1, [x28]
     de8:	ands	w0, w1, #0x7
     dec:	b.eq	b00 <gconv@@Base+0xc8>  // b.none
     df0:	cbnz	x14, 1c68 <gconv@@Base+0x1230>
     df4:	ldr	w2, [sp, #184]
     df8:	cmp	w2, #0x2
     dfc:	ldr	x2, [x11]
     e00:	b.eq	10c4 <gconv@@Base+0x68c>  // b.none
     e04:	stp	x2, x8, [sp, #208]
     e08:	cmp	w0, #0x4
     e0c:	b.hi	1c38 <gconv@@Base+0x1200>  // b.pmore
     e10:	mov	w19, w0
     e14:	cbz	w0, 1584 <gconv@@Base+0xb4c>
     e18:	add	x4, x28, #0x3
     e1c:	add	x22, sp, #0xe0
     e20:	mov	x0, #0x1                   	// #1
     e24:	add	x1, x22, x0
     e28:	ldrb	w5, [x4, x0]
     e2c:	cmp	x19, x0
     e30:	add	x0, x0, #0x1
     e34:	sturb	w5, [x1, #-1]
     e38:	b.ne	e24 <gconv@@Base+0x3ec>  // b.any
     e3c:	mov	x0, #0x4                   	// #4
     e40:	sub	x0, x0, x19
     e44:	add	x0, x2, x0
     e48:	cmp	x20, x0
     e4c:	b.cc	1634 <gconv@@Base+0xbfc>  // b.lo, b.ul, b.last
     e50:	add	x5, x8, #0x2
     e54:	add	x0, x2, #0x1
     e58:	add	x22, sp, #0xe0
     e5c:	cmp	x9, x5
     e60:	b.cc	1480 <gconv@@Base+0xa48>  // b.lo, b.ul, b.last
     e64:	add	x19, x19, #0x1
     e68:	str	x0, [sp, #208]
     e6c:	add	x4, x22, x19
     e70:	cmp	x19, #0x3
     e74:	ldurb	w1, [x0, #-1]
     e78:	ccmp	x20, x0, #0x0, ls  // ls = plast
     e7c:	add	x0, x0, #0x1
     e80:	sturb	w1, [x4, #-1]
     e84:	b.hi	e64 <gconv@@Base+0x42c>  // b.pmore
     e88:	ldr	w0, [sp, #224]
     e8c:	mov	w16, #0xffff2800            	// #-55296
     e90:	str	x22, [sp, #208]
     e94:	add	w1, w0, w16
     e98:	cmp	w1, #0x7ff
     e9c:	b.ls	16c8 <gconv@@Base+0xc90>  // b.plast
     ea0:	mov	w1, #0xffff                	// #65535
     ea4:	cmp	w0, w1
     ea8:	cbnz	w10, 13b4 <gconv@@Base+0x97c>
     eac:	b.hi	1818 <gconv@@Base+0xde0>  // b.pmore
     eb0:	strh	w0, [x8]
     eb4:	add	x0, x22, #0x4
     eb8:	mov	x22, #0x4                   	// #4
     ebc:	stp	x0, x5, [sp, #208]
     ec0:	ldr	w0, [x28]
     ec4:	and	x1, x0, #0x7
     ec8:	cmp	x22, x1
     ecc:	b.le	1ac4 <gconv@@Base+0x108c>
     ed0:	ldr	x2, [x11]
     ed4:	sub	x22, x22, x1
     ed8:	ldr	w15, [x21, #16]
     edc:	and	w0, w0, #0xfffffff8
     ee0:	add	x22, x2, x22
     ee4:	str	x22, [x11]
     ee8:	ldr	x8, [sp, #216]
     eec:	str	w0, [x28]
     ef0:	b	b04 <gconv@@Base+0xcc>
     ef4:	ldr	x3, [sp, #152]
     ef8:	mov	x0, x2
     efc:	mov	w12, #0x6                   	// #6
     f00:	str	x2, [sp, #208]
     f04:	ldr	x1, [x3]
     f08:	add	x1, x1, #0x1
     f0c:	str	x1, [x3]
     f10:	b	bb0 <gconv@@Base+0x178>
     f14:	ldr	w15, [x21, #16]
     f18:	ldr	w0, [sp, #184]
     f1c:	str	x13, [x28]
     f20:	cmp	w0, #0x2
     f24:	b.eq	1194 <gconv@@Base+0x75c>  // b.none
     f28:	stp	x13, x26, [sp, #208]
     f2c:	cmp	x20, x13
     f30:	b.eq	16fc <gconv@@Base+0xcc4>  // b.none
     f34:	mov	x30, x26
     f38:	mov	x3, #0x4                   	// #4
     f3c:	mov	w19, #0xffff2800            	// #-55296
     f40:	mov	w14, #0xffff                	// #65535
     f44:	mov	w18, #0x10ffff              	// #1114111
     f48:	add	x1, x13, #0x4
     f4c:	cmp	x20, x1
     f50:	b.cc	1384 <gconv@@Base+0x94c>  // b.lo, b.ul, b.last
     f54:	add	x2, x30, #0x2
     f58:	cmp	x12, x2
     f5c:	b.cc	1450 <gconv@@Base+0xa18>  // b.lo, b.ul, b.last
     f60:	ldr	w0, [x13]
     f64:	add	w4, w0, w19
     f68:	cmp	w4, #0x7ff
     f6c:	b.ls	1488 <gconv@@Base+0xa50>  // b.plast
     f70:	cmp	w0, w14
     f74:	cbz	w27, 124c <gconv@@Base+0x814>
     f78:	b.hi	15bc <gconv@@Base+0xb84>  // b.pmore
     f7c:	rev16	w0, w0
     f80:	strh	w0, [x30]
     f84:	mov	x30, x2
     f88:	mov	x13, x1
     f8c:	stp	x1, x30, [sp, #208]
     f90:	cmp	x20, x13
     f94:	b.ne	f48 <gconv@@Base+0x510>  // b.any
     f98:	str	x20, [x28]
     f9c:	ldr	x12, [sp, #200]
     fa0:	b	1224 <gconv@@Base+0x7ec>
     fa4:	cmp	w0, w18
     fa8:	b.hi	14b4 <gconv@@Base+0xa7c>  // b.pmore
     fac:	add	x3, x19, #0x4
     fb0:	cmp	x22, x3
     fb4:	b.cc	db4 <gconv@@Base+0x37c>  // b.lo, b.ul, b.last
     fb8:	and	w1, w0, #0x3ff
     fbc:	mov	w4, #0xffffd7c0            	// #-10304
     fc0:	add	w0, w4, w0, lsr #10
     fc4:	mov	w9, #0xffffdc00            	// #-9216
     fc8:	add	w1, w1, w9
     fcc:	rev16	w0, w0
     fd0:	rev16	w1, w1
     fd4:	strh	w0, [x19]
     fd8:	strh	w1, [x19, #2]
     fdc:	mov	x19, x3
     fe0:	b	ba8 <gconv@@Base+0x170>
     fe4:	cmp	w0, w18
     fe8:	b.hi	14ec <gconv@@Base+0xab4>  // b.pmore
     fec:	add	x3, x19, #0x4
     ff0:	cmp	x22, x3
     ff4:	b.cc	db4 <gconv@@Base+0x37c>  // b.lo, b.ul, b.last
     ff8:	and	w1, w0, #0x3ff
     ffc:	mov	w4, #0xffffd7c0            	// #-10304
    1000:	add	w0, w4, w0, lsr #10
    1004:	mov	w8, #0xffffdc00            	// #-9216
    1008:	add	w1, w1, w8
    100c:	strh	w0, [x19]
    1010:	strh	w1, [x19, #2]
    1014:	mov	x19, x3
    1018:	b	ba8 <gconv@@Base+0x170>
    101c:	ldr	x0, [x24]
    1020:	mov	x11, x28
    1024:	ldr	x1, [sp, #192]
    1028:	str	x19, [x21]
    102c:	add	x0, x0, x1
    1030:	str	x0, [x24]
    1034:	cmp	w25, #0x0
    1038:	ccmp	w12, #0x7, #0x0, ne  // ne = any
    103c:	b.ne	cec <gconv@@Base+0x2b4>  // b.any
    1040:	ldr	x0, [x11]
    1044:	sub	x3, x20, x0
    1048:	cmp	x3, #0x3
    104c:	b.gt	1cbc <gconv@@Base+0x1284>
    1050:	ldr	x4, [x21, #32]
    1054:	cmp	x0, x20
    1058:	add	x0, x0, #0x1
    105c:	add	x1, x4, #0x4
    1060:	b.cs	1884 <gconv@@Base+0xe4c>  // b.hs, b.nlast
    1064:	str	x0, [x11]
    1068:	cmp	x20, x0
    106c:	add	x0, x0, #0x1
    1070:	ldurb	w2, [x0, #-2]
    1074:	strb	w2, [x1], #1
    1078:	b.ne	1064 <gconv@@Base+0x62c>  // b.any
    107c:	mov	w1, w3
    1080:	ldr	w0, [x4]
    1084:	and	w0, w0, #0xfffffff8
    1088:	orr	w0, w0, w1
    108c:	str	w0, [x4]
    1090:	b	cec <gconv@@Base+0x2b4>
    1094:	mov	w7, w12
    1098:	b	c34 <gconv@@Base+0x1fc>
    109c:	ldr	w1, [x1, #4]
    10a0:	cmp	w1, #0x1
    10a4:	b.eq	154c <gconv@@Base+0xb14>  // b.none
    10a8:	cmp	w1, #0x3
    10ac:	b.ne	af8 <gconv@@Base+0xc0>  // b.any
    10b0:	orr	w15, w15, #0x4
    10b4:	str	w15, [x21, #16]
    10b8:	mov	w10, #0x4                   	// #4
    10bc:	cbnz	w25, de0 <gconv@@Base+0x3a8>
    10c0:	b	b00 <gconv@@Base+0xc8>
    10c4:	cmp	w0, #0x4
    10c8:	b.hi	1c88 <gconv@@Base+0x1250>  // b.pmore
    10cc:	mov	w7, w0
    10d0:	mov	x6, x7
    10d4:	cbz	w0, 166c <gconv@@Base+0xc34>
    10d8:	add	x4, x28, #0x3
    10dc:	add	x22, sp, #0xe0
    10e0:	mov	x0, #0x1                   	// #1
    10e4:	add	x3, x22, x0
    10e8:	ldrb	w12, [x4, x0]
    10ec:	cmp	x0, x7
    10f0:	add	x0, x0, #0x1
    10f4:	sturb	w12, [x3, #-1]
    10f8:	b.ne	10e4 <gconv@@Base+0x6ac>  // b.any
    10fc:	mov	x0, #0x2                   	// #2
    1100:	sub	x0, x0, x7
    1104:	add	x0, x2, x0
    1108:	cmp	x20, x0
    110c:	b.cc	1794 <gconv@@Base+0xd5c>  // b.lo, b.ul, b.last
    1110:	add	x5, x8, #0x4
    1114:	mov	x0, x2
    1118:	add	x22, sp, #0xe0
    111c:	cmp	x9, x5
    1120:	b.cc	1480 <gconv@@Base+0xa48>  // b.lo, b.ul, b.last
    1124:	add	x6, x6, #0x1
    1128:	ldrb	w3, [x0], #1
    112c:	add	x4, x22, x6
    1130:	cmp	x6, #0x3
    1134:	ccmp	x20, x0, #0x0, ls  // ls = plast
    1138:	sturb	w3, [x4, #-1]
    113c:	b.hi	1124 <gconv@@Base+0x6ec>  // b.pmore
    1140:	ldrh	w0, [sp, #224]
    1144:	cbnz	w10, 13dc <gconv@@Base+0x9a4>
    1148:	mov	w30, #0x2800                	// #10240
    114c:	add	w3, w0, w30
    1150:	and	w3, w3, #0xffff
    1154:	cmp	w3, #0x7ff
    1158:	b.ls	1910 <gconv@@Base+0xed8>  // b.plast
    115c:	mov	x1, #0x2                   	// #2
    1160:	str	w0, [x8]
    1164:	ldr	w0, [x28]
    1168:	and	x22, x0, #0x7
    116c:	cmp	x22, x1
    1170:	b.ge	1c58 <gconv@@Base+0x1220>  // b.tcont
    1174:	sub	x1, x1, x22
    1178:	ldr	w15, [x21, #16]
    117c:	add	x22, x2, x1
    1180:	str	x22, [x11]
    1184:	and	w0, w0, #0xfffffff8
    1188:	mov	x8, x5
    118c:	str	w0, [x28]
    1190:	b	b04 <gconv@@Base+0xcc>
    1194:	cmp	x20, x13
    1198:	b.eq	16fc <gconv@@Base+0xcc4>  // b.none
    119c:	add	x1, x13, #0x2
    11a0:	cmp	x1, x20
    11a4:	b.hi	16fc <gconv@@Base+0xcc4>  // b.pmore
    11a8:	add	x2, x26, #0x4
    11ac:	mov	x30, x26
    11b0:	cmp	x2, x12
    11b4:	mov	x3, #0x4                   	// #4
    11b8:	b.hi	17cc <gconv@@Base+0xd94>  // b.pmore
    11bc:	ldr	x8, [sp, #152]
    11c0:	and	w15, w15, #0x2
    11c4:	mov	w4, #0x2800                	// #10240
    11c8:	mov	w14, #0xdbff                	// #56319
    11cc:	mov	w6, #0x2400                	// #9216
    11d0:	mov	w18, #0xffff2840            	// #-55232
    11d4:	mov	w19, #0xffff2400            	// #-56320
    11d8:	ldrh	w0, [x13]
    11dc:	cbnz	w27, 1308 <gconv@@Base+0x8d0>
    11e0:	add	w5, w0, w4
    11e4:	and	w5, w5, #0xffff
    11e8:	cmp	w5, #0x7ff
    11ec:	b.ls	1748 <gconv@@Base+0xd10>  // b.plast
    11f0:	mov	x13, x1
    11f4:	str	w0, [x30]
    11f8:	mov	x30, x2
    11fc:	cmp	x20, x13
    1200:	b.eq	1220 <gconv@@Base+0x7e8>  // b.none
    1204:	add	x1, x13, #0x2
    1208:	cmp	x20, x1
    120c:	b.cc	15a0 <gconv@@Base+0xb68>  // b.lo, b.ul, b.last
    1210:	add	x2, x30, #0x4
    1214:	cmp	x12, x2
    1218:	b.cs	11d8 <gconv@@Base+0x7a0>  // b.hs, b.nlast
    121c:	mov	x3, #0x5                   	// #5
    1220:	str	x13, [x28]
    1224:	cmp	x12, x30
    1228:	b.ne	1460 <gconv@@Base+0xa28>  // b.any
    122c:	cmp	x3, #0x5
    1230:	b.ne	1394 <gconv@@Base+0x95c>  // b.any
    1234:	cmp	x26, x30
    1238:	b.ne	c34 <gconv@@Base+0x1fc>  // b.any
    123c:	ldr	w0, [x21, #20]
    1240:	sub	w0, w0, #0x1
    1244:	str	w0, [x21, #20]
    1248:	b	c34 <gconv@@Base+0x1fc>
    124c:	b.hi	15fc <gconv@@Base+0xbc4>  // b.pmore
    1250:	strh	w0, [x30]
    1254:	mov	x30, x2
    1258:	b	f88 <gconv@@Base+0x550>
    125c:	cmp	w1, w5
    1260:	b.hi	1284 <gconv@@Base+0x84c>  // b.pmore
    1264:	add	x10, x0, #0x4
    1268:	cmp	x20, x10
    126c:	b.cc	dd8 <gconv@@Base+0x3a0>  // b.lo, b.ul, b.last
    1270:	ldrh	w8, [x0, #2]
    1274:	add	w9, w8, w6
    1278:	and	w9, w9, #0xffff
    127c:	cmp	w9, #0x3ff
    1280:	b.ls	d7c <gconv@@Base+0x344>  // b.plast
    1284:	ldr	x3, [sp, #152]
    1288:	cbz	x3, 1290 <gconv@@Base+0x858>
    128c:	cbnz	w15, 13c4 <gconv@@Base+0x98c>
    1290:	mov	w12, #0x6                   	// #6
    1294:	b	bb8 <gconv@@Base+0x180>
    1298:	mov	x19, x26
    129c:	mov	x0, x13
    12a0:	mov	w12, #0x7                   	// #7
    12a4:	b	bb8 <gconv@@Base+0x180>
    12a8:	mov	x19, x26
    12ac:	mov	x0, x13
    12b0:	mov	w12, #0x5                   	// #5
    12b4:	b	bb8 <gconv@@Base+0x180>
    12b8:	cbnz	x14, 1cdc <gconv@@Base+0x12a4>
    12bc:	ldr	x0, [x21, #32]
    12c0:	mov	w12, #0x0                   	// #0
    12c4:	str	xzr, [x0]
    12c8:	ldr	w0, [x21, #16]
    12cc:	tbnz	w0, #0, cec <gconv@@Base+0x2b4>
    12d0:	mov	x0, x23
    12d4:	str	w6, [sp, #104]
    12d8:	bl	800 <_dl_mcount_wrapper_check@plt>
    12dc:	ldr	w6, [sp, #104]
    12e0:	mov	w7, w25
    12e4:	mov	x5, x24
    12e8:	mov	x1, x27
    12ec:	mov	x0, x26
    12f0:	mov	x4, #0x0                   	// #0
    12f4:	mov	x3, #0x0                   	// #0
    12f8:	mov	x2, #0x0                   	// #0
    12fc:	blr	x23
    1300:	mov	w12, w0
    1304:	b	cec <gconv@@Base+0x2b4>
    1308:	rev16	w0, w0
    130c:	and	w0, w0, #0xffff
    1310:	add	w5, w0, w4
    1314:	and	w5, w5, #0xffff
    1318:	cmp	w5, #0x7ff
    131c:	b.hi	11f0 <gconv@@Base+0x7b8>  // b.pmore
    1320:	cmp	w0, w14
    1324:	b.hi	1850 <gconv@@Base+0xe18>  // b.pmore
    1328:	add	x9, x13, #0x4
    132c:	cmp	x20, x9
    1330:	b.cc	15a0 <gconv@@Base+0xb68>  // b.lo, b.ul, b.last
    1334:	ldrh	w5, [x13, #2]
    1338:	rev16	w5, w5
    133c:	and	w5, w5, #0xffff
    1340:	add	w10, w5, w6
    1344:	and	w10, w10, #0xffff
    1348:	cmp	w10, #0x3ff
    134c:	b.hi	1850 <gconv@@Base+0xe18>  // b.pmore
    1350:	add	w0, w0, w18
    1354:	add	w5, w5, w19
    1358:	mov	x13, x9
    135c:	add	w0, w5, w0, lsl #10
    1360:	str	w0, [x30]
    1364:	mov	x30, x2
    1368:	b	11fc <gconv@@Base+0x7c4>
    136c:	mov	x11, x28
    1370:	mov	w12, w7
    1374:	b	1034 <gconv@@Base+0x5fc>
    1378:	mov	x0, x20
    137c:	mov	w12, #0x4                   	// #4
    1380:	b	bb8 <gconv@@Base+0x180>
    1384:	ldp	x0, x1, [sp, #200]
    1388:	str	x1, [x28]
    138c:	cmp	x30, x0
    1390:	b.ne	1460 <gconv@@Base+0xa28>  // b.any
    1394:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1398:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    139c:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    13a0:	add	x3, x3, #0xf08
    13a4:	add	x1, x1, #0xd70
    13a8:	add	x0, x0, #0xea0
    13ac:	mov	w2, #0x2eb                 	// #747
    13b0:	bl	810 <__assert_fail@plt>
    13b4:	b.hi	17d8 <gconv@@Base+0xda0>  // b.pmore
    13b8:	rev16	w0, w0
    13bc:	strh	w0, [x8]
    13c0:	b	eb4 <gconv@@Base+0x47c>
    13c4:	ldr	x1, [x3]
    13c8:	mov	x0, x2
    13cc:	mov	w12, #0x6                   	// #6
    13d0:	add	x1, x1, #0x1
    13d4:	str	x1, [x3]
    13d8:	b	cb8 <gconv@@Base+0x280>
    13dc:	rev16	w0, w0
    13e0:	mov	w12, #0x2800                	// #10240
    13e4:	and	w0, w0, #0xffff
    13e8:	add	w3, w0, w12
    13ec:	and	w3, w3, #0xffff
    13f0:	cmp	w3, #0x7ff
    13f4:	b.hi	115c <gconv@@Base+0x724>  // b.pmore
    13f8:	mov	w3, #0xdbff                	// #56319
    13fc:	cmp	w0, w3
    1400:	b.hi	1a60 <gconv@@Base+0x1028>  // b.pmore
    1404:	add	x3, x22, #0x4
    1408:	cmp	x4, x3
    140c:	b.cc	188c <gconv@@Base+0xe54>  // b.lo, b.ul, b.last
    1410:	ldrh	w1, [sp, #226]
    1414:	mov	w4, #0x2400                	// #9216
    1418:	rev16	w1, w1
    141c:	and	w3, w1, #0xffff
    1420:	add	w1, w4, w1, uxth
    1424:	and	w1, w1, #0xffff
    1428:	cmp	w1, #0x3ff
    142c:	b.hi	1a60 <gconv@@Base+0x1028>  // b.pmore
    1430:	mov	w1, #0xffff2840            	// #-55232
    1434:	add	w0, w0, w1
    1438:	mov	w4, #0xffff2400            	// #-56320
    143c:	add	w3, w3, w4
    1440:	add	w0, w3, w0, lsl #10
    1444:	mov	x1, #0x4                   	// #4
    1448:	str	w0, [x8]
    144c:	b	1164 <gconv@@Base+0x72c>
    1450:	ldp	x0, x1, [sp, #200]
    1454:	str	x1, [x28]
    1458:	cmp	x30, x0
    145c:	b.eq	1234 <gconv@@Base+0x7fc>  // b.none
    1460:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1464:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1468:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    146c:	add	x3, x3, #0xf08
    1470:	add	x1, x1, #0xd70
    1474:	add	x0, x0, #0xe88
    1478:	mov	w2, #0x2ea                 	// #746
    147c:	bl	810 <__assert_fail@plt>
    1480:	mov	w12, #0x5                   	// #5
    1484:	b	cec <gconv@@Base+0x2b4>
    1488:	ldr	x0, [sp, #152]
    148c:	cbz	x0, 15a8 <gconv@@Base+0xb70>
    1490:	tbz	w15, #1, 15a8 <gconv@@Base+0xb70>
    1494:	ldr	x2, [sp, #152]
    1498:	mov	x13, x1
    149c:	mov	x3, #0x6                   	// #6
    14a0:	str	x1, [sp, #208]
    14a4:	ldr	x0, [x2]
    14a8:	add	x0, x0, #0x1
    14ac:	str	x0, [x2]
    14b0:	b	f90 <gconv@@Base+0x558>
    14b4:	ldr	x0, [sp, #152]
    14b8:	cbz	x0, dcc <gconv@@Base+0x394>
    14bc:	ldr	w0, [x21, #16]
    14c0:	tbnz	w0, #3, 1678 <gconv@@Base+0xc40>
    14c4:	ldr	x0, [sp, #208]
    14c8:	tbz	w15, #1, 1290 <gconv@@Base+0x858>
    14cc:	ldr	x2, [sp, #152]
    14d0:	add	x0, x0, #0x4
    14d4:	mov	w12, #0x6                   	// #6
    14d8:	str	x0, [sp, #208]
    14dc:	ldr	x1, [x2]
    14e0:	add	x1, x1, #0x1
    14e4:	str	x1, [x2]
    14e8:	b	bb0 <gconv@@Base+0x178>
    14ec:	ldr	x0, [sp, #152]
    14f0:	cbz	x0, dcc <gconv@@Base+0x394>
    14f4:	ldr	w0, [x21, #16]
    14f8:	tbz	w0, #3, 14c4 <gconv@@Base+0xa8c>
    14fc:	ldp	x6, x0, [sp, #152]
    1500:	mov	x4, x20
    1504:	ldp	x5, x3, [sp, #168]
    1508:	mov	x1, x21
    150c:	ldr	x2, [x28]
    1510:	str	w15, [sp, #104]
    1514:	str	x13, [sp, #120]
    1518:	bl	7b0 <__gconv_transliterate@plt>
    151c:	mov	w12, w0
    1520:	ldr	w15, [sp, #104]
    1524:	cmp	w0, #0x6
    1528:	mov	w7, #0xffff2800            	// #-55296
    152c:	mov	w14, #0xffff                	// #65535
    1530:	mov	w18, #0x10ffff              	// #1114111
    1534:	ldr	x13, [sp, #120]
    1538:	b.eq	178c <gconv@@Base+0xd54>  // b.none
    153c:	cmp	w0, #0x5
    1540:	ldp	x0, x19, [sp, #208]
    1544:	b.ne	bb0 <gconv@@Base+0x178>  // b.any
    1548:	b	bb8 <gconv@@Base+0x180>
    154c:	ldr	w1, [sp, #184]
    1550:	cmp	w1, #0x2
    1554:	b.eq	1708 <gconv@@Base+0xcd0>  // b.none
    1558:	ldr	w0, [x21, #24]
    155c:	cbnz	w0, af8 <gconv@@Base+0xc0>
    1560:	add	x0, x8, #0x2
    1564:	cmp	x0, x9
    1568:	b.hi	1480 <gconv@@Base+0xa48>  // b.pmore
    156c:	mov	w1, #0xfffffeff            	// #-257
    1570:	strh	w1, [x8]
    1574:	and	w10, w15, #0x4
    1578:	mov	x8, x0
    157c:	cbnz	w25, de0 <gconv@@Base+0x3a8>
    1580:	b	b00 <gconv@@Base+0xc8>
    1584:	mov	x0, #0x4                   	// #4
    1588:	mov	x19, #0x0                   	// #0
    158c:	b	e44 <gconv@@Base+0x40c>
    1590:	mov	x19, x26
    1594:	mov	x0, x20
    1598:	mov	w12, #0x4                   	// #4
    159c:	b	bb8 <gconv@@Base+0x180>
    15a0:	mov	x3, #0x7                   	// #7
    15a4:	b	1220 <gconv@@Base+0x7e8>
    15a8:	ldp	x0, x1, [sp, #200]
    15ac:	str	x1, [x28]
    15b0:	cmp	x0, x30
    15b4:	b.eq	1394 <gconv@@Base+0x95c>  // b.none
    15b8:	b	1460 <gconv@@Base+0xa28>
    15bc:	cmp	w0, w18
    15c0:	b.hi	1978 <gconv@@Base+0xf40>  // b.pmore
    15c4:	add	x4, x30, #0x4
    15c8:	cmp	x12, x4
    15cc:	b.cc	1450 <gconv@@Base+0xa18>  // b.lo, b.ul, b.last
    15d0:	and	w2, w0, #0x3ff
    15d4:	mov	w5, #0xffffd7c0            	// #-10304
    15d8:	add	w0, w5, w0, lsr #10
    15dc:	mov	w6, #0xffffdc00            	// #-9216
    15e0:	add	w2, w2, w6
    15e4:	rev16	w0, w0
    15e8:	rev16	w2, w2
    15ec:	strh	w0, [x30]
    15f0:	strh	w2, [x30, #2]
    15f4:	mov	x30, x4
    15f8:	b	f88 <gconv@@Base+0x550>
    15fc:	cmp	w0, w18
    1600:	b.hi	18e4 <gconv@@Base+0xeac>  // b.pmore
    1604:	add	x4, x30, #0x4
    1608:	cmp	x12, x4
    160c:	b.cc	1450 <gconv@@Base+0xa18>  // b.lo, b.ul, b.last
    1610:	and	w2, w0, #0x3ff
    1614:	mov	w5, #0xffffd7c0            	// #-10304
    1618:	add	w0, w5, w0, lsr #10
    161c:	mov	w5, #0xffffdc00            	// #-9216
    1620:	add	w2, w2, w5
    1624:	strh	w0, [x30]
    1628:	strh	w2, [x30, #2]
    162c:	mov	x30, x4
    1630:	b	f88 <gconv@@Base+0x550>
    1634:	str	x20, [x11]
    1638:	cmp	x20, x2
    163c:	b.ls	1664 <gconv@@Base+0xc2c>  // b.plast
    1640:	add	x2, x2, #0x1
    1644:	add	x19, x28, x19
    1648:	str	x2, [sp, #208]
    164c:	cmp	x2, x20
    1650:	add	x19, x19, #0x1
    1654:	add	x2, x2, #0x1
    1658:	ldurb	w0, [x2, #-2]
    165c:	strb	w0, [x19, #3]
    1660:	b.ne	1648 <gconv@@Base+0xc10>  // b.any
    1664:	mov	w12, #0x7                   	// #7
    1668:	b	cec <gconv@@Base+0x2b4>
    166c:	mov	x0, #0x2                   	// #2
    1670:	mov	x6, #0x0                   	// #0
    1674:	b	1104 <gconv@@Base+0x6cc>
    1678:	ldp	x6, x0, [sp, #152]
    167c:	mov	x4, x20
    1680:	ldp	x5, x3, [sp, #168]
    1684:	mov	x1, x21
    1688:	ldr	x2, [x28]
    168c:	str	w15, [sp, #104]
    1690:	str	x13, [sp, #120]
    1694:	bl	7b0 <__gconv_transliterate@plt>
    1698:	mov	w12, w0
    169c:	ldr	w15, [sp, #104]
    16a0:	cmp	w0, #0x6
    16a4:	mov	w7, #0xffff2800            	// #-55296
    16a8:	mov	w14, #0xffff                	// #65535
    16ac:	mov	w18, #0x10ffff              	// #1114111
    16b0:	ldr	x13, [sp, #120]
    16b4:	b.eq	178c <gconv@@Base+0xd54>  // b.none
    16b8:	cmp	w0, #0x5
    16bc:	ldp	x0, x19, [sp, #208]
    16c0:	b.ne	bb0 <gconv@@Base+0x178>  // b.any
    16c4:	b	bb8 <gconv@@Base+0x180>
    16c8:	ldr	x0, [sp, #152]
    16cc:	cbz	x0, 16d4 <gconv@@Base+0xc9c>
    16d0:	tbnz	w15, #1, 16dc <gconv@@Base+0xca4>
    16d4:	mov	w12, #0x6                   	// #6
    16d8:	b	cec <gconv@@Base+0x2b4>
    16dc:	mov	x2, x0
    16e0:	add	x1, x22, #0x4
    16e4:	ldr	x0, [x0]
    16e8:	mov	x22, #0x4                   	// #4
    16ec:	str	x1, [sp, #208]
    16f0:	add	x0, x0, #0x1
    16f4:	str	x0, [x2]
    16f8:	b	ec0 <gconv@@Base+0x488>
    16fc:	cmp	x12, x26
    1700:	b.eq	1394 <gconv@@Base+0x95c>  // b.none
    1704:	b	1460 <gconv@@Base+0xa28>
    1708:	add	x1, x0, #0x2
    170c:	cmp	x1, x20
    1710:	b.hi	1870 <gconv@@Base+0xe38>  // b.pmore
    1714:	ldrh	w0, [x0]
    1718:	mov	w2, #0xfeff                	// #65279
    171c:	cmp	w0, w2
    1720:	b.eq	1960 <gconv@@Base+0xf28>  // b.none
    1724:	mov	w2, #0xfffe                	// #65534
    1728:	cmp	w0, w2
    172c:	b.ne	af8 <gconv@@Base+0xc0>  // b.any
    1730:	orr	w15, w15, #0x4
    1734:	str	w15, [x21, #16]
    1738:	str	x1, [x11]
    173c:	mov	w10, #0x4                   	// #4
    1740:	cbnz	w25, de0 <gconv@@Base+0x3a8>
    1744:	b	b00 <gconv@@Base+0xc8>
    1748:	cmp	w0, w14
    174c:	b.hi	1850 <gconv@@Base+0xe18>  // b.pmore
    1750:	add	x10, x13, #0x4
    1754:	cmp	x20, x10
    1758:	b.cc	15a0 <gconv@@Base+0xb68>  // b.lo, b.ul, b.last
    175c:	ldrh	w5, [x13, #2]
    1760:	add	w9, w5, w6
    1764:	and	w9, w9, #0xffff
    1768:	cmp	w9, #0x3ff
    176c:	b.hi	1850 <gconv@@Base+0xe18>  // b.pmore
    1770:	add	w0, w0, w18
    1774:	add	w5, w5, w19
    1778:	mov	x13, x10
    177c:	add	w0, w5, w0, lsl #10
    1780:	str	w0, [x30]
    1784:	mov	x30, x2
    1788:	b	11fc <gconv@@Base+0x7c4>
    178c:	ldr	x19, [sp, #216]
    1790:	b	14c4 <gconv@@Base+0xa8c>
    1794:	str	x20, [x11]
    1798:	cmp	x20, x2
    179c:	b.ls	1664 <gconv@@Base+0xc2c>  // b.plast
    17a0:	add	x1, x6, #0x4
    17a4:	sub	x20, x20, x2
    17a8:	add	x28, x28, x1
    17ac:	mov	x0, #0x0                   	// #0
    17b0:	ldrb	w1, [x2, x0]
    17b4:	strb	w1, [x28, x0]
    17b8:	add	x0, x0, #0x1
    17bc:	cmp	x20, x0
    17c0:	b.ne	17b0 <gconv@@Base+0xd78>  // b.any
    17c4:	mov	w12, #0x7                   	// #7
    17c8:	b	cec <gconv@@Base+0x2b4>
    17cc:	cmp	x12, x26
    17d0:	b.eq	123c <gconv@@Base+0x804>  // b.none
    17d4:	b	1460 <gconv@@Base+0xa28>
    17d8:	mov	w1, #0x10ffff              	// #1114111
    17dc:	cmp	w0, w1
    17e0:	b.hi	1a88 <gconv@@Base+0x1050>  // b.pmore
    17e4:	add	x5, x8, #0x4
    17e8:	cmp	x9, x5
    17ec:	b.cc	1480 <gconv@@Base+0xa48>  // b.lo, b.ul, b.last
    17f0:	and	w1, w0, #0x3ff
    17f4:	mov	w2, #0xffffd7c0            	// #-10304
    17f8:	add	w2, w2, w0, lsr #10
    17fc:	mov	w13, #0xffffdc00            	// #-9216
    1800:	add	w0, w1, w13
    1804:	rev16	w1, w2
    1808:	rev16	w0, w0
    180c:	strh	w1, [x8]
    1810:	strh	w0, [x8, #2]
    1814:	b	eb4 <gconv@@Base+0x47c>
    1818:	mov	w1, #0x10ffff              	// #1114111
    181c:	cmp	w0, w1
    1820:	b.hi	1a88 <gconv@@Base+0x1050>  // b.pmore
    1824:	add	x5, x8, #0x4
    1828:	cmp	x9, x5
    182c:	b.cc	1480 <gconv@@Base+0xa48>  // b.lo, b.ul, b.last
    1830:	and	w1, w0, #0x3ff
    1834:	mov	w2, #0xffffd7c0            	// #-10304
    1838:	add	w2, w2, w0, lsr #10
    183c:	mov	w12, #0xffffdc00            	// #-9216
    1840:	add	w0, w1, w12
    1844:	strh	w2, [x8]
    1848:	strh	w0, [x8, #2]
    184c:	b	eb4 <gconv@@Base+0x47c>
    1850:	cbz	x8, 1970 <gconv@@Base+0xf38>
    1854:	cbz	w15, 1970 <gconv@@Base+0xf38>
    1858:	ldr	x0, [x8]
    185c:	mov	x13, x1
    1860:	mov	x3, #0x6                   	// #6
    1864:	add	x0, x0, #0x1
    1868:	str	x0, [x8]
    186c:	b	11fc <gconv@@Base+0x7c4>
    1870:	cmp	x0, x20
    1874:	mov	w12, #0x4                   	// #4
    1878:	mov	w0, #0x7                   	// #7
    187c:	csel	w12, w12, w0, eq  // eq = none
    1880:	b	cec <gconv@@Base+0x2b4>
    1884:	mov	w1, #0x0                   	// #0
    1888:	b	1080 <gconv@@Base+0x648>
    188c:	add	x0, x22, #0x4
    1890:	cmp	x4, x0
    1894:	b.eq	1d1c <gconv@@Base+0x12e4>  // b.none
    1898:	sub	x7, x6, x7
    189c:	and	w1, w1, #0xfffffff8
    18a0:	add	x7, x2, x7
    18a4:	str	x7, [x11]
    18a8:	cmp	x6, w1, sxtw
    18ac:	b.le	1d0c <gconv@@Base+0x12d4>
    18b0:	cmp	x6, #0x4
    18b4:	b.hi	1cfc <gconv@@Base+0x12c4>  // b.pmore
    18b8:	orr	w1, w1, w6
    18bc:	str	w1, [x28]
    18c0:	cmp	x4, x22
    18c4:	b.ls	1664 <gconv@@Base+0xc2c>  // b.plast
    18c8:	add	x28, x28, #0x4
    18cc:	ldrb	w0, [x22], #1
    18d0:	strb	w0, [x28], #1
    18d4:	cmp	x4, x22
    18d8:	b.ne	18cc <gconv@@Base+0xe94>  // b.any
    18dc:	mov	w12, #0x7                   	// #7
    18e0:	b	cec <gconv@@Base+0x2b4>
    18e4:	ldr	x0, [sp, #152]
    18e8:	cbz	x0, 15a8 <gconv@@Base+0xb70>
    18ec:	ldr	w0, [x21, #16]
    18f0:	tbnz	w0, #3, 19fc <gconv@@Base+0xfc4>
    18f4:	ldr	x13, [sp, #208]
    18f8:	tbnz	w15, #1, 19dc <gconv@@Base+0xfa4>
    18fc:	ldr	x0, [sp, #200]
    1900:	str	x13, [x28]
    1904:	cmp	x30, x0
    1908:	b.eq	1394 <gconv@@Base+0x95c>  // b.none
    190c:	b	1460 <gconv@@Base+0xa28>
    1910:	mov	w3, #0xdbff                	// #56319
    1914:	cmp	w0, w3
    1918:	b.hi	1a60 <gconv@@Base+0x1028>  // b.pmore
    191c:	add	x3, x22, #0x4
    1920:	cmp	x4, x3
    1924:	b.cc	188c <gconv@@Base+0xe54>  // b.lo, b.ul, b.last
    1928:	ldrh	w1, [sp, #226]
    192c:	mov	w19, #0x2400                	// #9216
    1930:	add	w3, w1, w19
    1934:	and	w3, w3, #0xffff
    1938:	cmp	w3, #0x3ff
    193c:	b.hi	1a60 <gconv@@Base+0x1028>  // b.pmore
    1940:	mov	w17, #0xffff2840            	// #-55232
    1944:	add	w0, w0, w17
    1948:	mov	w18, #0xffff2400            	// #-56320
    194c:	add	w3, w1, w18
    1950:	add	w0, w3, w0, lsl #10
    1954:	mov	x1, #0x4                   	// #4
    1958:	str	w0, [x8]
    195c:	b	1164 <gconv@@Base+0x72c>
    1960:	str	x1, [x11]
    1964:	and	w10, w15, #0x4
    1968:	cbnz	w25, de0 <gconv@@Base+0x3a8>
    196c:	b	b00 <gconv@@Base+0xc8>
    1970:	mov	x3, #0x6                   	// #6
    1974:	b	1220 <gconv@@Base+0x7e8>
    1978:	ldr	x0, [sp, #152]
    197c:	cbz	x0, 1384 <gconv@@Base+0x94c>
    1980:	ldr	w0, [x21, #16]
    1984:	tbz	w0, #3, 18f4 <gconv@@Base+0xebc>
    1988:	ldp	x6, x0, [sp, #152]
    198c:	mov	x4, x20
    1990:	ldp	x5, x3, [sp, #168]
    1994:	mov	x1, x21
    1998:	ldr	x2, [x28]
    199c:	str	x12, [sp, #104]
    19a0:	str	w7, [sp, #120]
    19a4:	str	w15, [sp, #188]
    19a8:	bl	7b0 <__gconv_transliterate@plt>
    19ac:	sxtw	x3, w0
    19b0:	ldr	w7, [sp, #120]
    19b4:	cmp	w3, #0x6
    19b8:	ldr	w15, [sp, #188]
    19bc:	mov	w14, #0xffff                	// #65535
    19c0:	mov	w18, #0x10ffff              	// #1114111
    19c4:	ldr	x12, [sp, #104]
    19c8:	b.eq	1cb0 <gconv@@Base+0x1278>  // b.none
    19cc:	cmp	w3, #0x5
    19d0:	b.eq	1c98 <gconv@@Base+0x1260>  // b.none
    19d4:	ldp	x13, x30, [sp, #208]
    19d8:	b	f90 <gconv@@Base+0x558>
    19dc:	ldr	x1, [sp, #152]
    19e0:	add	x13, x13, #0x4
    19e4:	mov	x3, #0x6                   	// #6
    19e8:	str	x13, [sp, #208]
    19ec:	ldr	x0, [x1]
    19f0:	add	x0, x0, #0x1
    19f4:	str	x0, [x1]
    19f8:	b	f90 <gconv@@Base+0x558>
    19fc:	ldp	x6, x0, [sp, #152]
    1a00:	mov	x4, x20
    1a04:	ldp	x5, x3, [sp, #168]
    1a08:	mov	x1, x21
    1a0c:	ldr	x2, [x28]
    1a10:	str	x12, [sp, #104]
    1a14:	str	w7, [sp, #120]
    1a18:	str	w15, [sp, #188]
    1a1c:	bl	7b0 <__gconv_transliterate@plt>
    1a20:	sxtw	x3, w0
    1a24:	ldr	w7, [sp, #120]
    1a28:	cmp	w3, #0x6
    1a2c:	ldr	w15, [sp, #188]
    1a30:	mov	w14, #0xffff                	// #65535
    1a34:	mov	w18, #0x10ffff              	// #1114111
    1a38:	ldr	x12, [sp, #104]
    1a3c:	b.eq	1cb0 <gconv@@Base+0x1278>  // b.none
    1a40:	cmp	w3, #0x5
    1a44:	ldp	x13, x30, [sp, #208]
    1a48:	b.ne	f90 <gconv@@Base+0x558>  // b.any
    1a4c:	ldr	x0, [sp, #200]
    1a50:	str	x13, [x28]
    1a54:	cmp	x0, x30
    1a58:	b.eq	1234 <gconv@@Base+0x7fc>  // b.none
    1a5c:	b	1460 <gconv@@Base+0xa28>
    1a60:	ldr	x0, [sp, #152]
    1a64:	cbz	x0, 16d4 <gconv@@Base+0xc9c>
    1a68:	tbz	w15, #1, 16d4 <gconv@@Base+0xc9c>
    1a6c:	mov	x3, x0
    1a70:	mov	x5, x8
    1a74:	ldr	x0, [x0]
    1a78:	mov	x1, #0x2                   	// #2
    1a7c:	add	x0, x0, #0x1
    1a80:	str	x0, [x3]
    1a84:	b	1164 <gconv@@Base+0x72c>
    1a88:	ldr	x0, [sp, #152]
    1a8c:	cbz	x0, 16d4 <gconv@@Base+0xc9c>
    1a90:	tbnz	w15, #3, 1ae4 <gconv@@Base+0x10ac>
    1a94:	tbz	w15, #1, 16d4 <gconv@@Base+0xc9c>
    1a98:	ldr	x2, [sp, #152]
    1a9c:	ldr	x0, [sp, #208]
    1aa0:	ldr	x1, [x2]
    1aa4:	add	x0, x0, #0x4
    1aa8:	str	x0, [sp, #208]
    1aac:	add	x1, x1, #0x1
    1ab0:	str	x1, [x2]
    1ab4:	cmp	x0, x22
    1ab8:	b.eq	16d4 <gconv@@Base+0xc9c>  // b.none
    1abc:	sub	x22, x0, x22
    1ac0:	b	ec0 <gconv@@Base+0x488>
    1ac4:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1ac8:	add	x3, x3, #0xed8
    1acc:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1ad0:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1ad4:	add	x1, x1, #0xda0
    1ad8:	add	x0, x0, #0xde0
    1adc:	mov	w2, #0x1c9                 	// #457
    1ae0:	bl	810 <__assert_fail@plt>
    1ae4:	mov	x6, x0
    1ae8:	add	x5, sp, #0xd8
    1aec:	ldr	x0, [sp, #160]
    1af0:	add	x3, sp, #0xd0
    1af4:	mov	x1, x21
    1af8:	stp	x4, x8, [sp, #104]
    1afc:	str	x9, [sp, #120]
    1b00:	str	w10, [sp, #128]
    1b04:	str	w15, [sp, #136]
    1b08:	str	x11, [sp, #144]
    1b0c:	str	x14, [sp, #168]
    1b10:	bl	7b0 <__gconv_transliterate@plt>
    1b14:	ldr	w10, [sp, #128]
    1b18:	mov	w12, w0
    1b1c:	ldr	w15, [sp, #136]
    1b20:	cmp	w0, #0x6
    1b24:	ldp	x4, x8, [sp, #104]
    1b28:	ldr	x9, [sp, #120]
    1b2c:	ldr	x11, [sp, #144]
    1b30:	ldr	x14, [sp, #168]
    1b34:	b.eq	1bcc <gconv@@Base+0x1194>  // b.none
    1b38:	ldr	x0, [sp, #208]
    1b3c:	cmp	x0, x22
    1b40:	b.ne	1abc <gconv@@Base+0x1084>  // b.any
    1b44:	cmp	w12, #0x7
    1b48:	b.ne	1bbc <gconv@@Base+0x1184>  // b.any
    1b4c:	add	x0, x22, #0x4
    1b50:	cmp	x4, x0
    1b54:	b.eq	1c18 <gconv@@Base+0x11e0>  // b.none
    1b58:	ldr	w0, [x28]
    1b5c:	ldr	x1, [x11]
    1b60:	and	x2, x0, #0x7
    1b64:	sub	x2, x19, x2
    1b68:	and	w0, w0, #0xfffffff8
    1b6c:	add	x1, x1, x2
    1b70:	str	x1, [x11]
    1b74:	cmp	x19, w0, sxtw
    1b78:	b.le	1bf8 <gconv@@Base+0x11c0>
    1b7c:	cmp	x19, #0x4
    1b80:	b.hi	1bd8 <gconv@@Base+0x11a0>  // b.pmore
    1b84:	orr	w0, w0, w19
    1b88:	str	w0, [x28]
    1b8c:	cmp	x4, x22
    1b90:	b.ls	1664 <gconv@@Base+0xc2c>  // b.plast
    1b94:	add	x22, x22, #0x1
    1b98:	add	x28, x28, #0x4
    1b9c:	str	x22, [sp, #208]
    1ba0:	cmp	x22, x4
    1ba4:	add	x22, x22, #0x1
    1ba8:	ldurb	w0, [x22, #-2]
    1bac:	strb	w0, [x28], #1
    1bb0:	b.ne	1b9c <gconv@@Base+0x1164>  // b.any
    1bb4:	mov	w12, #0x7                   	// #7
    1bb8:	b	cec <gconv@@Base+0x2b4>
    1bbc:	cbnz	w12, cec <gconv@@Base+0x2b4>
    1bc0:	ldr	w15, [x21, #16]
    1bc4:	ldr	x22, [x11]
    1bc8:	b	b04 <gconv@@Base+0xcc>
    1bcc:	tbnz	w15, #1, 1a98 <gconv@@Base+0x1060>
    1bd0:	ldr	x0, [sp, #208]
    1bd4:	b	1ab4 <gconv@@Base+0x107c>
    1bd8:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1bdc:	add	x3, x3, #0xed8
    1be0:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1be4:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1be8:	add	x1, x1, #0xda0
    1bec:	add	x0, x0, #0xe58
    1bf0:	mov	w2, #0x1e6                 	// #486
    1bf4:	bl	810 <__assert_fail@plt>
    1bf8:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1bfc:	add	x3, x3, #0xed8
    1c00:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1c04:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1c08:	add	x1, x1, #0xda0
    1c0c:	add	x0, x0, #0xe30
    1c10:	mov	w2, #0x1e5                 	// #485
    1c14:	bl	810 <__assert_fail@plt>
    1c18:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1c1c:	add	x3, x3, #0xed8
    1c20:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1c24:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1c28:	add	x1, x1, #0xda0
    1c2c:	add	x0, x0, #0xe08
    1c30:	mov	w2, #0x1db                 	// #475
    1c34:	bl	810 <__assert_fail@plt>
    1c38:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1c3c:	add	x3, x3, #0xed8
    1c40:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1c44:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1c48:	add	x1, x1, #0xda0
    1c4c:	add	x0, x0, #0xdb0
    1c50:	mov	w2, #0x18b                 	// #395
    1c54:	bl	810 <__assert_fail@plt>
    1c58:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1c5c:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1c60:	add	x3, x3, #0xef0
    1c64:	b	1ad0 <gconv@@Base+0x1098>
    1c68:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1c6c:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1c70:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1c74:	add	x3, x3, #0xf08
    1c78:	add	x1, x1, #0xd70
    1c7c:	add	x0, x0, #0xd88
    1c80:	mov	w2, #0x234                 	// #564
    1c84:	bl	810 <__assert_fail@plt>
    1c88:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1c8c:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1c90:	add	x3, x3, #0xef0
    1c94:	b	1c44 <gconv@@Base+0x120c>
    1c98:	ldp	x30, x1, [sp, #200]
    1c9c:	str	x1, [x28]
    1ca0:	ldr	x0, [sp, #216]
    1ca4:	cmp	x0, x30
    1ca8:	b.eq	1234 <gconv@@Base+0x7fc>  // b.none
    1cac:	b	1460 <gconv@@Base+0xa28>
    1cb0:	ldr	x30, [sp, #216]
    1cb4:	b	18f4 <gconv@@Base+0xebc>
    1cb8:	bl	7c0 <__stack_chk_fail@plt>
    1cbc:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1cc0:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1cc4:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1cc8:	add	x3, x3, #0xf08
    1ccc:	add	x1, x1, #0xd70
    1cd0:	add	x0, x0, #0xec0
    1cd4:	mov	w2, #0x31e                 	// #798
    1cd8:	bl	810 <__assert_fail@plt>
    1cdc:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1ce0:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1ce4:	adrp	x0, 1000 <gconv@@Base+0x5c8>
    1ce8:	add	x3, x3, #0xf08
    1cec:	add	x1, x1, #0xd70
    1cf0:	add	x0, x0, #0xd88
    1cf4:	mov	w2, #0x1a4                 	// #420
    1cf8:	bl	810 <__assert_fail@plt>
    1cfc:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1d00:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1d04:	add	x3, x3, #0xef0
    1d08:	b	1be4 <gconv@@Base+0x11ac>
    1d0c:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1d10:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1d14:	add	x3, x3, #0xef0
    1d18:	b	1c04 <gconv@@Base+0x11cc>
    1d1c:	adrp	x3, 1000 <gconv@@Base+0x5c8>
    1d20:	adrp	x1, 1000 <gconv@@Base+0x5c8>
    1d24:	add	x3, x3, #0xef0
    1d28:	b	1c24 <gconv@@Base+0x11ec>

Disassembly of section .fini:

0000000000001d2c <.fini>:
    1d2c:	stp	x29, x30, [sp, #-16]!
    1d30:	mov	x29, sp
    1d34:	ldp	x29, x30, [sp], #16
    1d38:	ret
