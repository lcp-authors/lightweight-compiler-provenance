
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//newc.mod_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x6c8>:
   0:	str	xzr, [x0, #16]
   4:	ret
   8:	stp	x29, x30, [sp, #-16]!
   c:	mov	x29, sp
  10:	ldr	x0, [x0, #80]
  14:	bl	0 <grub_free>
  18:	adrp	x0, 0 <grub_mod_init-0x6c8>
  1c:	ldr	x0, [x0]
  20:	ldr	w0, [x0]
  24:	ldp	x29, x30, [sp], #16
  28:	ret
  2c:	nop
	...
  38:	stp	x29, x30, [sp, #-32]!
  3c:	mov	x29, sp
  40:	stp	x19, x20, [sp, #16]
  44:	mov	x20, x2
  48:	ldr	x19, [x0, #80]
  4c:	ldr	x2, [x19]
  50:	ldr	x3, [x0, #88]
  54:	str	x3, [x2, #48]
  58:	ldr	x2, [x19]
  5c:	ldr	x3, [x0, #96]
  60:	str	x3, [x2, #56]
  64:	ldr	x2, [x19, #24]
  68:	ldr	x0, [x0, #24]
  6c:	mov	x4, x1
  70:	mov	x3, x20
  74:	add	x2, x2, x0
  78:	mov	x1, #0x0                   	// #0
  7c:	ldr	x0, [x19]
  80:	bl	0 <grub_disk_read>
  84:	cmp	w0, #0x0
  88:	ldr	x0, [x19]
  8c:	str	xzr, [x0, #48]
  90:	csinv	x0, x20, xzr, eq  // eq = none
  94:	ldp	x19, x20, [sp, #16]
  98:	ldp	x29, x30, [sp], #32
  9c:	ret
  a0:	stp	x29, x30, [sp, #-32]!
  a4:	mov	x29, sp
  a8:	stp	x19, x20, [sp, #16]
  ac:	mov	x19, x0
  b0:	ldr	x0, [x0, #32]
  b4:	cbz	x0, fc <grub_mod_init-0x5cc>
  b8:	add	x0, x0, #0x1
  bc:	bl	0 <grub_malloc>
  c0:	mov	x20, x0
  c4:	cbz	x0, ec <grub_mod_init-0x5dc>
  c8:	mov	x4, x0
  cc:	ldr	x3, [x19, #32]
  d0:	ldr	x2, [x19, #24]
  d4:	mov	x1, #0x0                   	// #0
  d8:	ldr	x0, [x19]
  dc:	bl	0 <grub_disk_read>
  e0:	cbnz	w0, 110 <grub_mod_init-0x5b8>
  e4:	ldr	x0, [x19, #32]
  e8:	strb	wzr, [x20, x0]
  ec:	mov	x0, x20
  f0:	ldp	x19, x20, [sp, #16]
  f4:	ldp	x29, x30, [sp], #32
  f8:	ret
  fc:	adrp	x0, 0 <grub_mod_init-0x6c8>
 100:	ldr	x0, [x0]
 104:	bl	0 <grub_strdup>
 108:	mov	x20, x0
 10c:	b	ec <grub_mod_init-0x5dc>
 110:	mov	x0, x20
 114:	bl	0 <grub_free>
 118:	mov	x20, #0x0                   	// #0
 11c:	b	ec <grub_mod_init-0x5dc>
	...
 128:	stp	x29, x30, [sp, #-144]!
 12c:	mov	x29, sp
 130:	str	x19, [sp, #16]
 134:	mov	x19, x0
 138:	add	x4, sp, #0x20
 13c:	mov	x3, #0x6e                  	// #110
 140:	mov	x2, #0x0                   	// #0
 144:	mov	x1, #0x0                   	// #0
 148:	bl	0 <grub_disk_read>
 14c:	cbnz	w0, 19c <grub_mod_init-0x52c>
 150:	mov	x2, #0x6                   	// #6
 154:	adrp	x0, 0 <grub_mod_init-0x6c8>
 158:	ldr	x1, [x0]
 15c:	add	x0, sp, #0x20
 160:	bl	0 <grub_memcmp>
 164:	cbz	w0, 180 <grub_mod_init-0x548>
 168:	mov	x2, #0x6                   	// #6
 16c:	adrp	x0, 0 <grub_mod_init-0x6c8>
 170:	ldr	x1, [x0]
 174:	add	x0, sp, #0x20
 178:	bl	0 <grub_memcmp>
 17c:	cbnz	w0, 19c <grub_mod_init-0x52c>
 180:	mov	x0, #0x28                  	// #40
 184:	bl	0 <grub_zalloc>
 188:	cbz	x0, 19c <grub_mod_init-0x52c>
 18c:	str	x19, [x0]
 190:	ldr	x19, [sp, #16]
 194:	ldp	x29, x30, [sp], #144
 198:	ret
 19c:	adrp	x0, 0 <grub_mod_init-0x6c8>
 1a0:	ldr	x1, [x0]
 1a4:	mov	w0, #0x9                   	// #9
 1a8:	bl	0 <grub_error>
 1ac:	mov	x0, #0x0                   	// #0
 1b0:	b	190 <grub_mod_init-0x538>
 1b4:	nop
	...
 1d0:	stp	x29, x30, [sp, #-48]!
 1d4:	mov	x29, sp
 1d8:	stp	x19, x20, [sp, #16]
 1dc:	str	x21, [sp, #32]
 1e0:	mov	x20, x0
 1e4:	mov	x21, x1
 1e8:	ldr	x0, [x0, #8]
 1ec:	ldr	x0, [x0]
 1f0:	bl	128 <grub_mod_init-0x5a0>
 1f4:	cbz	x0, 238 <grub_mod_init-0x490>
 1f8:	mov	x19, x0
 1fc:	mov	x2, x21
 200:	adrp	x0, 0 <grub_mod_init-0x6c8>
 204:	ldr	x1, [x0]
 208:	mov	x0, x19
 20c:	bl	0 <grub_archelp_open>
 210:	mov	w21, w0
 214:	cbnz	w0, 248 <grub_mod_init-0x480>
 218:	str	x19, [x20, #80]
 21c:	ldr	x0, [x19, #32]
 220:	str	x0, [x20, #64]
 224:	mov	w0, w21
 228:	ldp	x19, x20, [sp, #16]
 22c:	ldr	x21, [sp, #32]
 230:	ldp	x29, x30, [sp], #48
 234:	ret
 238:	adrp	x0, 0 <grub_mod_init-0x6c8>
 23c:	ldr	x0, [x0]
 240:	ldr	w21, [x0]
 244:	b	224 <grub_mod_init-0x4a4>
 248:	mov	x0, x19
 24c:	bl	0 <grub_free>
 250:	b	224 <grub_mod_init-0x4a4>
 254:	nop
	...
 268:	stp	x29, x30, [sp, #-48]!
 26c:	mov	x29, sp
 270:	stp	x19, x20, [sp, #16]
 274:	stp	x21, x22, [sp, #32]
 278:	mov	x20, x1
 27c:	mov	x21, x2
 280:	mov	x22, x3
 284:	ldr	x0, [x0]
 288:	bl	128 <grub_mod_init-0x5a0>
 28c:	cbz	x0, 2d0 <grub_mod_init-0x3f8>
 290:	mov	x19, x0
 294:	mov	x4, x22
 298:	mov	x3, x21
 29c:	mov	x2, x20
 2a0:	adrp	x0, 0 <grub_mod_init-0x6c8>
 2a4:	ldr	x1, [x0]
 2a8:	mov	x0, x19
 2ac:	bl	0 <grub_archelp_dir>
 2b0:	mov	w20, w0
 2b4:	mov	x0, x19
 2b8:	bl	0 <grub_free>
 2bc:	mov	w0, w20
 2c0:	ldp	x19, x20, [sp, #16]
 2c4:	ldp	x21, x22, [sp, #32]
 2c8:	ldp	x29, x30, [sp], #48
 2cc:	ret
 2d0:	adrp	x0, 0 <grub_mod_init-0x6c8>
 2d4:	ldr	x0, [x0]
 2d8:	ldr	w20, [x0]
 2dc:	b	2bc <grub_mod_init-0x40c>
	...
 2f0:	stp	x29, x30, [sp, #-176]!
 2f4:	mov	x29, sp
 2f8:	stp	x19, x20, [sp, #16]
 2fc:	stp	x21, x22, [sp, #32]
 300:	stp	x23, x24, [sp, #48]
 304:	mov	x19, x0
 308:	mov	x22, x1
 30c:	mov	x23, x2
 310:	mov	x21, x3
 314:	ldr	x2, [x0, #16]
 318:	str	x2, [x0, #8]
 31c:	add	x4, sp, #0x40
 320:	mov	x3, #0x6e                  	// #110
 324:	mov	x1, #0x0                   	// #0
 328:	ldr	x0, [x0]
 32c:	bl	0 <grub_disk_read>
 330:	cbz	w0, 358 <grub_mod_init-0x370>
 334:	adrp	x0, 0 <grub_mod_init-0x6c8>
 338:	ldr	x0, [x0]
 33c:	ldr	w20, [x0]
 340:	mov	w0, w20
 344:	ldp	x19, x20, [sp, #16]
 348:	ldp	x21, x22, [sp, #32]
 34c:	ldp	x23, x24, [sp, #48]
 350:	ldp	x29, x30, [sp], #176
 354:	ret
 358:	mov	w20, w0
 35c:	mov	x2, #0x6                   	// #6
 360:	adrp	x0, 0 <grub_mod_init-0x6c8>
 364:	ldr	x1, [x0]
 368:	add	x0, sp, #0x40
 36c:	bl	0 <grub_memcmp>
 370:	cbnz	w0, 384 <grub_mod_init-0x344>
 374:	mov	x3, #0x0                   	// #0
 378:	add	x1, sp, #0x76
 37c:	add	x5, sp, #0x7e
 380:	b	3dc <grub_mod_init-0x2ec>
 384:	mov	x2, #0x6                   	// #6
 388:	adrp	x0, 0 <grub_mod_init-0x6c8>
 38c:	ldr	x1, [x0]
 390:	add	x0, sp, #0x40
 394:	bl	0 <grub_memcmp>
 398:	cbz	w0, 374 <grub_mod_init-0x354>
 39c:	adrp	x0, 0 <grub_mod_init-0x6c8>
 3a0:	ldr	x1, [x0]
 3a4:	mov	w0, #0x9                   	// #9
 3a8:	bl	0 <grub_error>
 3ac:	mov	w20, w0
 3b0:	b	340 <grub_mod_init-0x388>
 3b4:	add	x1, x1, #0x1
 3b8:	sub	w2, w0, #0x30
 3bc:	and	w2, w2, #0xff
 3c0:	cmp	w2, #0x9
 3c4:	b.hi	418 <grub_mod_init-0x2b0>  // b.pmore
 3c8:	and	w0, w0, #0xf
 3cc:	and	x0, x0, #0xff
 3d0:	orr	x3, x0, x3, lsl #4
 3d4:	cmp	x1, x5
 3d8:	b.eq	400 <grub_mod_init-0x2c8>  // b.none
 3dc:	ldrb	w0, [x1]
 3e0:	sub	w2, w0, #0x30
 3e4:	cmp	w2, #0x9
 3e8:	b.ls	3b4 <grub_mod_init-0x314>  // b.plast
 3ec:	and	w2, w0, #0xffffffdf
 3f0:	sub	w2, w2, #0x41
 3f4:	and	w2, w2, #0xff
 3f8:	cmp	w2, #0x5
 3fc:	b.ls	3b4 <grub_mod_init-0x314>  // b.plast
 400:	str	x3, [x19, #32]
 404:	cbz	x23, 48c <grub_mod_init-0x23c>
 408:	mov	x3, #0x0                   	// #0
 40c:	add	x1, sp, #0x6e
 410:	add	x5, sp, #0x76
 414:	b	464 <grub_mod_init-0x264>
 418:	sub	w4, w0, #0x61
 41c:	and	w4, w4, #0xff
 420:	sub	w2, w0, #0x57
 424:	and	w2, w2, #0xff
 428:	sub	w0, w0, #0x37
 42c:	and	w0, w0, #0xff
 430:	cmp	w4, #0x5
 434:	csel	w0, w0, w2, hi  // hi = pmore
 438:	b	3cc <grub_mod_init-0x2fc>
 43c:	add	x1, x1, #0x1
 440:	sub	w2, w0, #0x30
 444:	and	w2, w2, #0xff
 448:	cmp	w2, #0x9
 44c:	b.hi	49c <grub_mod_init-0x22c>  // b.pmore
 450:	and	w0, w0, #0xf
 454:	and	x0, x0, #0xff
 458:	orr	x3, x0, x3, lsl #4
 45c:	cmp	x1, x5
 460:	b.eq	488 <grub_mod_init-0x240>  // b.none
 464:	ldrb	w0, [x1]
 468:	sub	w2, w0, #0x30
 46c:	cmp	w2, #0x9
 470:	b.ls	43c <grub_mod_init-0x28c>  // b.plast
 474:	and	w2, w0, #0xffffffdf
 478:	sub	w2, w2, #0x41
 47c:	and	w2, w2, #0xff
 480:	cmp	w2, #0x5
 484:	b.ls	43c <grub_mod_init-0x28c>  // b.plast
 488:	str	w3, [x23]
 48c:	mov	x3, #0x0                   	// #0
 490:	add	x0, sp, #0x4e
 494:	add	x5, sp, #0x56
 498:	b	4e8 <grub_mod_init-0x1e0>
 49c:	sub	w4, w0, #0x61
 4a0:	and	w4, w4, #0xff
 4a4:	sub	w2, w0, #0x57
 4a8:	and	w2, w2, #0xff
 4ac:	sub	w0, w0, #0x37
 4b0:	and	w0, w0, #0xff
 4b4:	cmp	w4, #0x5
 4b8:	csel	w0, w0, w2, hi  // hi = pmore
 4bc:	b	454 <grub_mod_init-0x274>
 4c0:	add	x0, x0, #0x1
 4c4:	sub	w1, w2, #0x30
 4c8:	and	w1, w1, #0xff
 4cc:	cmp	w1, #0x9
 4d0:	b.hi	51c <grub_mod_init-0x1ac>  // b.pmore
 4d4:	and	w2, w2, #0xf
 4d8:	and	x2, x2, #0xff
 4dc:	orr	x3, x2, x3, lsl #4
 4e0:	cmp	x0, x5
 4e4:	b.eq	50c <grub_mod_init-0x1bc>  // b.none
 4e8:	ldrb	w2, [x0]
 4ec:	sub	w1, w2, #0x30
 4f0:	cmp	w1, #0x9
 4f4:	b.ls	4c0 <grub_mod_init-0x208>  // b.plast
 4f8:	and	w1, w2, #0xffffffdf
 4fc:	sub	w1, w1, #0x41
 500:	and	w1, w1, #0xff
 504:	cmp	w1, #0x5
 508:	b.ls	4c0 <grub_mod_init-0x208>  // b.plast
 50c:	mov	x23, #0x0                   	// #0
 510:	add	x0, sp, #0x9e
 514:	add	x5, sp, #0xa6
 518:	b	568 <grub_mod_init-0x160>
 51c:	sub	w4, w2, #0x61
 520:	and	w4, w4, #0xff
 524:	sub	w1, w2, #0x57
 528:	and	w1, w1, #0xff
 52c:	sub	w2, w2, #0x37
 530:	and	w2, w2, #0xff
 534:	cmp	w4, #0x5
 538:	csel	w2, w2, w1, hi  // hi = pmore
 53c:	b	4d8 <grub_mod_init-0x1f0>
 540:	add	x0, x0, #0x1
 544:	sub	w1, w2, #0x30
 548:	and	w1, w1, #0xff
 54c:	cmp	w1, #0x9
 550:	b.hi	5a4 <grub_mod_init-0x124>  // b.pmore
 554:	and	w2, w2, #0xf
 558:	and	x2, x2, #0xff
 55c:	orr	x23, x2, x23, lsl #4
 560:	cmp	x0, x5
 564:	b.eq	58c <grub_mod_init-0x13c>  // b.none
 568:	ldrb	w2, [x0]
 56c:	sub	w1, w2, #0x30
 570:	cmp	w1, #0x9
 574:	b.ls	540 <grub_mod_init-0x188>  // b.plast
 578:	and	w1, w2, #0xffffffdf
 57c:	sub	w1, w1, #0x41
 580:	and	w1, w1, #0xff
 584:	cmp	w1, #0x5
 588:	b.ls	540 <grub_mod_init-0x188>  // b.plast
 58c:	mov	x0, #0x7fffffff            	// #2147483647
 590:	cmp	x23, x0
 594:	b.ls	5c8 <grub_mod_init-0x100>  // b.plast
 598:	mov	w0, #0xffffffff            	// #-1
 59c:	str	w0, [x21]
 5a0:	b	340 <grub_mod_init-0x388>
 5a4:	sub	w4, w2, #0x61
 5a8:	and	w4, w4, #0xff
 5ac:	sub	w1, w2, #0x57
 5b0:	and	w1, w1, #0xff
 5b4:	sub	w2, w2, #0x37
 5b8:	and	w2, w2, #0xff
 5bc:	cmp	w4, #0x5
 5c0:	csel	w2, w2, w1, hi  // hi = pmore
 5c4:	b	558 <grub_mod_init-0x170>
 5c8:	mov	w24, w3
 5cc:	str	w3, [x21]
 5d0:	add	x0, x23, #0x1
 5d4:	bl	0 <grub_malloc>
 5d8:	mov	x4, x0
 5dc:	str	x0, [x22]
 5e0:	cbz	x0, 64c <grub_mod_init-0x7c>
 5e4:	ldr	x2, [x19, #8]
 5e8:	mov	x3, x23
 5ec:	add	x2, x2, #0x6e
 5f0:	mov	x1, #0x0                   	// #0
 5f4:	ldr	x0, [x19]
 5f8:	bl	0 <grub_disk_read>
 5fc:	mov	w20, w0
 600:	cbnz	w0, 65c <grub_mod_init-0x6c>
 604:	ldr	x0, [x22]
 608:	strb	wzr, [x0, x23]
 60c:	ldr	x0, [x19, #32]
 610:	cbnz	x0, 620 <grub_mod_init-0xa8>
 614:	cmp	w24, #0x0
 618:	ccmp	x23, #0xb, #0x0, eq  // eq = none
 61c:	b.eq	674 <grub_mod_init-0x54>  // b.none
 620:	add	x0, x23, #0x71
 624:	and	x0, x0, #0xfffffffffffffffc
 628:	ldr	x1, [x19, #8]
 62c:	add	x0, x0, x1
 630:	str	x0, [x19, #24]
 634:	ldr	x1, [x19, #32]
 638:	add	x1, x1, #0x3
 63c:	and	x1, x1, #0xfffffffffffffffc
 640:	add	x0, x1, x0
 644:	str	x0, [x19, #16]
 648:	b	340 <grub_mod_init-0x388>
 64c:	adrp	x0, 0 <grub_mod_init-0x6c8>
 650:	ldr	x0, [x0]
 654:	ldr	w20, [x0]
 658:	b	340 <grub_mod_init-0x388>
 65c:	ldr	x0, [x22]
 660:	bl	0 <grub_free>
 664:	adrp	x0, 0 <grub_mod_init-0x6c8>
 668:	ldr	x0, [x0]
 66c:	ldr	w20, [x0]
 670:	b	340 <grub_mod_init-0x388>
 674:	mov	x2, #0xb                   	// #11
 678:	adrp	x0, 0 <grub_mod_init-0x6c8>
 67c:	ldr	x1, [x0]
 680:	ldr	x0, [x22]
 684:	bl	0 <grub_memcmp>
 688:	cbnz	w0, 620 <grub_mod_init-0xa8>
 68c:	mov	w0, #0xffffffff            	// #-1
 690:	str	w0, [x21]
 694:	ldr	x0, [x22]
 698:	bl	0 <grub_free>
 69c:	b	340 <grub_mod_init-0x388>
	...

00000000000006c8 <grub_mod_init>:
 6c8:	stp	x29, x30, [sp, #-16]!
 6cc:	mov	x29, sp
 6d0:	adrp	x0, 0 <grub_mod_init-0x6c8>
 6d4:	ldr	x1, [x0]
 6d8:	add	x1, x1, #0x18
 6dc:	adrp	x0, 0 <grub_mod_init-0x6c8>
 6e0:	ldr	x0, [x0]
 6e4:	bl	0 <grub_list_push>
 6e8:	ldp	x29, x30, [sp], #16
 6ec:	ret
	...

0000000000000700 <grub_mod_fini>:
 700:	stp	x29, x30, [sp, #-16]!
 704:	mov	x29, sp
 708:	adrp	x0, 0 <grub_mod_init-0x6c8>
 70c:	ldr	x0, [x0]
 710:	add	x0, x0, #0x18
 714:	bl	0 <grub_list_remove>
 718:	ldp	x29, x30, [sp], #16
 71c:	ret
	...
