
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mtd_probe_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400960 <_init>:
  400960:	stp	x29, x30, [sp, #-16]!
  400964:	mov	x29, sp
  400968:	bl	400b00 <call_weak_fn>
  40096c:	ldp	x29, x30, [sp], #16
  400970:	ret

Disassembly of section .plt:

0000000000400980 <.plt>:
  400980:	stp	x16, x30, [sp, #-16]!
  400984:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400988:	ldr	x17, [x16, #3936]
  40098c:	add	x16, x16, #0xf60
  400990:	br	x17
  400994:	nop
  400998:	nop
  40099c:	nop

00000000004009a0 <__libc_start_main@plt>:
  4009a0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  4009a4:	ldr	x17, [x16, #3944]
  4009a8:	add	x16, x16, #0xf68
  4009ac:	br	x17

00000000004009b0 <lseek64@plt>:
  4009b0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  4009b4:	ldr	x17, [x16, #3952]
  4009b8:	add	x16, x16, #0xf70
  4009bc:	br	x17

00000000004009c0 <__gmon_start__@plt>:
  4009c0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  4009c4:	ldr	x17, [x16, #3960]
  4009c8:	add	x16, x16, #0xf78
  4009cc:	br	x17

00000000004009d0 <safe_close@plt>:
  4009d0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  4009d4:	ldr	x17, [x16, #3968]
  4009d8:	add	x16, x16, #0xf80
  4009dc:	br	x17

00000000004009e0 <abort@plt>:
  4009e0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  4009e4:	ldr	x17, [x16, #3976]
  4009e8:	add	x16, x16, #0xf88
  4009ec:	br	x17

00000000004009f0 <__errno_location@plt>:
  4009f0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  4009f4:	ldr	x17, [x16, #3984]
  4009f8:	add	x16, x16, #0xf90
  4009fc:	br	x17

0000000000400a00 <read@plt>:
  400a00:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a04:	ldr	x17, [x16, #3992]
  400a08:	add	x16, x16, #0xf98
  400a0c:	br	x17

0000000000400a10 <__stack_chk_fail@plt>:
  400a10:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a14:	ldr	x17, [x16, #4000]
  400a18:	add	x16, x16, #0xfa0
  400a1c:	br	x17

0000000000400a20 <memcmp@plt>:
  400a20:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a24:	ldr	x17, [x16, #4008]
  400a28:	add	x16, x16, #0xfa8
  400a2c:	br	x17

0000000000400a30 <malloc@plt>:
  400a30:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a34:	ldr	x17, [x16, #4016]
  400a38:	add	x16, x16, #0xfb0
  400a3c:	br	x17

0000000000400a40 <log_internal_realm@plt>:
  400a40:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a44:	ldr	x17, [x16, #4024]
  400a48:	add	x16, x16, #0xfb8
  400a4c:	br	x17

0000000000400a50 <ioctl@plt>:
  400a50:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a54:	ldr	x17, [x16, #4032]
  400a58:	add	x16, x16, #0xfc0
  400a5c:	br	x17

0000000000400a60 <free@plt>:
  400a60:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a64:	ldr	x17, [x16, #4040]
  400a68:	add	x16, x16, #0xfc8
  400a6c:	br	x17

0000000000400a70 <puts@plt>:
  400a70:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a74:	ldr	x17, [x16, #4048]
  400a78:	add	x16, x16, #0xfd0
  400a7c:	br	x17

0000000000400a80 <open64@plt>:
  400a80:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a84:	ldr	x17, [x16, #4056]
  400a88:	add	x16, x16, #0xfd8
  400a8c:	br	x17

0000000000400a90 <log_oom_internal@plt>:
  400a90:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400a94:	ldr	x17, [x16, #4064]
  400a98:	add	x16, x16, #0xfe0
  400a9c:	br	x17

0000000000400aa0 <log_get_max_level_realm@plt>:
  400aa0:	adrp	x16, 411000 <__FRAME_END__+0xf8d8>
  400aa4:	ldr	x17, [x16, #4072]
  400aa8:	add	x16, x16, #0xfe8
  400aac:	br	x17

Disassembly of section .text:

0000000000400ab0 <_start>:
  400ab0:	mov	x29, #0x0                   	// #0
  400ab4:	mov	x30, #0x0                   	// #0
  400ab8:	mov	x5, x0
  400abc:	ldr	x1, [sp]
  400ac0:	add	x2, sp, #0x8
  400ac4:	mov	x6, sp
  400ac8:	movz	x0, #0x0, lsl #48
  400acc:	movk	x0, #0x0, lsl #32
  400ad0:	movk	x0, #0x40, lsl #16
  400ad4:	movk	x0, #0xc9c
  400ad8:	movz	x3, #0x0, lsl #48
  400adc:	movk	x3, #0x0, lsl #32
  400ae0:	movk	x3, #0x40, lsl #16
  400ae4:	movk	x3, #0x1348
  400ae8:	movz	x4, #0x0, lsl #48
  400aec:	movk	x4, #0x0, lsl #32
  400af0:	movk	x4, #0x40, lsl #16
  400af4:	movk	x4, #0x13c8
  400af8:	bl	4009a0 <__libc_start_main@plt>
  400afc:	bl	4009e0 <abort@plt>

0000000000400b00 <call_weak_fn>:
  400b00:	adrp	x0, 411000 <__FRAME_END__+0xf8d8>
  400b04:	ldr	x0, [x0, #4088]
  400b08:	cbz	x0, 400b10 <call_weak_fn+0x10>
  400b0c:	b	4009c0 <__gmon_start__@plt>
  400b10:	ret

0000000000400b14 <deregister_tm_clones>:
  400b14:	stp	x29, x30, [sp, #-32]!
  400b18:	mov	x29, sp
  400b1c:	adrp	x0, 412000 <__TMC_END__>
  400b20:	add	x0, x0, #0x0
  400b24:	str	x0, [sp, #24]
  400b28:	ldr	x0, [sp, #24]
  400b2c:	str	x0, [sp, #24]
  400b30:	ldr	x1, [sp, #24]
  400b34:	adrp	x0, 412000 <__TMC_END__>
  400b38:	add	x0, x0, #0x0
  400b3c:	cmp	x1, x0
  400b40:	b.eq	400b7c <deregister_tm_clones+0x68>  // b.none
  400b44:	adrp	x0, 401000 <probe_smart_media+0x140>
  400b48:	add	x0, x0, #0x3e0
  400b4c:	ldr	x0, [x0]
  400b50:	str	x0, [sp, #16]
  400b54:	ldr	x0, [sp, #16]
  400b58:	str	x0, [sp, #16]
  400b5c:	ldr	x0, [sp, #16]
  400b60:	cmp	x0, #0x0
  400b64:	b.eq	400b80 <deregister_tm_clones+0x6c>  // b.none
  400b68:	ldr	x1, [sp, #16]
  400b6c:	adrp	x0, 412000 <__TMC_END__>
  400b70:	add	x0, x0, #0x0
  400b74:	blr	x1
  400b78:	b	400b80 <deregister_tm_clones+0x6c>
  400b7c:	nop
  400b80:	ldp	x29, x30, [sp], #32
  400b84:	ret

0000000000400b88 <register_tm_clones>:
  400b88:	stp	x29, x30, [sp, #-48]!
  400b8c:	mov	x29, sp
  400b90:	adrp	x0, 412000 <__TMC_END__>
  400b94:	add	x0, x0, #0x0
  400b98:	str	x0, [sp, #40]
  400b9c:	ldr	x0, [sp, #40]
  400ba0:	str	x0, [sp, #40]
  400ba4:	ldr	x1, [sp, #40]
  400ba8:	adrp	x0, 412000 <__TMC_END__>
  400bac:	add	x0, x0, #0x0
  400bb0:	sub	x0, x1, x0
  400bb4:	asr	x0, x0, #3
  400bb8:	lsr	x1, x0, #63
  400bbc:	add	x0, x1, x0
  400bc0:	asr	x0, x0, #1
  400bc4:	str	x0, [sp, #32]
  400bc8:	ldr	x0, [sp, #32]
  400bcc:	cmp	x0, #0x0
  400bd0:	b.eq	400c10 <register_tm_clones+0x88>  // b.none
  400bd4:	adrp	x0, 401000 <probe_smart_media+0x140>
  400bd8:	add	x0, x0, #0x3e8
  400bdc:	ldr	x0, [x0]
  400be0:	str	x0, [sp, #24]
  400be4:	ldr	x0, [sp, #24]
  400be8:	str	x0, [sp, #24]
  400bec:	ldr	x0, [sp, #24]
  400bf0:	cmp	x0, #0x0
  400bf4:	b.eq	400c14 <register_tm_clones+0x8c>  // b.none
  400bf8:	ldr	x2, [sp, #24]
  400bfc:	ldr	x1, [sp, #32]
  400c00:	adrp	x0, 412000 <__TMC_END__>
  400c04:	add	x0, x0, #0x0
  400c08:	blr	x2
  400c0c:	b	400c14 <register_tm_clones+0x8c>
  400c10:	nop
  400c14:	ldp	x29, x30, [sp], #48
  400c18:	ret

0000000000400c1c <__do_global_dtors_aux>:
  400c1c:	stp	x29, x30, [sp, #-16]!
  400c20:	mov	x29, sp
  400c24:	adrp	x0, 412000 <__TMC_END__>
  400c28:	add	x0, x0, #0x0
  400c2c:	ldrb	w0, [x0]
  400c30:	and	x0, x0, #0xff
  400c34:	cmp	x0, #0x0
  400c38:	b.ne	400c54 <__do_global_dtors_aux+0x38>  // b.any
  400c3c:	bl	400b14 <deregister_tm_clones>
  400c40:	adrp	x0, 412000 <__TMC_END__>
  400c44:	add	x0, x0, #0x0
  400c48:	mov	w1, #0x1                   	// #1
  400c4c:	strb	w1, [x0]
  400c50:	b	400c58 <__do_global_dtors_aux+0x3c>
  400c54:	nop
  400c58:	ldp	x29, x30, [sp], #16
  400c5c:	ret

0000000000400c60 <frame_dummy>:
  400c60:	stp	x29, x30, [sp, #-16]!
  400c64:	mov	x29, sp
  400c68:	bl	400b88 <register_tm_clones>
  400c6c:	nop
  400c70:	ldp	x29, x30, [sp], #16
  400c74:	ret

0000000000400c78 <closep>:
  400c78:	stp	x29, x30, [sp, #-32]!
  400c7c:	mov	x29, sp
  400c80:	str	x0, [sp, #24]
  400c84:	ldr	x0, [sp, #24]
  400c88:	ldr	w0, [x0]
  400c8c:	bl	4009d0 <safe_close@plt>
  400c90:	nop
  400c94:	ldp	x29, x30, [sp], #32
  400c98:	ret

0000000000400c9c <main>:
  400c9c:	stp	x29, x30, [sp, #-128]!
  400ca0:	mov	x29, sp
  400ca4:	str	x19, [sp, #16]
  400ca8:	str	w0, [sp, #44]
  400cac:	str	x1, [sp, #32]
  400cb0:	adrp	x0, 411000 <__FRAME_END__+0xf8d8>
  400cb4:	add	x0, x0, #0xd18
  400cb8:	ldr	x1, [x0]
  400cbc:	str	x1, [sp, #120]
  400cc0:	mov	x1, #0x0                   	// #0
  400cc4:	mov	w0, #0xffffffff            	// #-1
  400cc8:	str	w0, [sp, #60]
  400ccc:	ldr	w0, [sp, #44]
  400cd0:	cmp	w0, #0x2
  400cd4:	b.eq	400cec <main+0x50>  // b.none
  400cd8:	adrp	x0, 401000 <probe_smart_media+0x140>
  400cdc:	add	x0, x0, #0x3f0
  400ce0:	bl	400a70 <puts@plt>
  400ce4:	mov	w19, #0x1                   	// #1
  400ce8:	b	400e60 <main+0x1c4>
  400cec:	ldr	x0, [sp, #32]
  400cf0:	add	x0, x0, #0x8
  400cf4:	ldr	x0, [x0]
  400cf8:	mov	w1, #0x80000               	// #524288
  400cfc:	bl	400a80 <open64@plt>
  400d00:	str	w0, [sp, #60]
  400d04:	ldr	w0, [sp, #60]
  400d08:	cmp	w0, #0x0
  400d0c:	b.ge	400d98 <main+0xfc>  // b.tcont
  400d10:	mov	w0, #0x3                   	// #3
  400d14:	str	w0, [sp, #76]
  400d18:	bl	4009f0 <__errno_location@plt>
  400d1c:	ldr	w0, [x0]
  400d20:	str	w0, [sp, #80]
  400d24:	mov	w0, #0x1                   	// #1
  400d28:	str	w0, [sp, #84]
  400d2c:	ldr	w0, [sp, #84]
  400d30:	bl	400aa0 <log_get_max_level_realm@plt>
  400d34:	mov	w1, w0
  400d38:	ldr	w0, [sp, #76]
  400d3c:	and	w0, w0, #0x7
  400d40:	cmp	w1, w0
  400d44:	b.lt	400d88 <main+0xec>  // b.tstop
  400d48:	ldr	w0, [sp, #84]
  400d4c:	lsl	w1, w0, #10
  400d50:	ldr	w0, [sp, #76]
  400d54:	orr	w6, w1, w0
  400d58:	adrp	x0, 401000 <probe_smart_media+0x140>
  400d5c:	add	x1, x0, #0x413
  400d60:	adrp	x0, 401000 <probe_smart_media+0x140>
  400d64:	add	x5, x0, #0x438
  400d68:	adrp	x0, 401000 <probe_smart_media+0x140>
  400d6c:	add	x4, x0, #0x478
  400d70:	mov	w3, #0x2e                  	// #46
  400d74:	mov	x2, x1
  400d78:	ldr	w1, [sp, #80]
  400d7c:	mov	w0, w6
  400d80:	bl	400a40 <log_internal_realm@plt>
  400d84:	b	400d90 <main+0xf4>
  400d88:	ldr	w0, [sp, #80]
  400d8c:	cmp	w0, #0x0
  400d90:	mov	w19, #0x1                   	// #1
  400d94:	b	400e60 <main+0x1c4>
  400d98:	ldr	w0, [sp, #60]
  400d9c:	add	x1, sp, #0x58
  400da0:	mov	x2, x1
  400da4:	mov	x1, #0x4d01                	// #19713
  400da8:	movk	x1, #0x8020, lsl #16
  400dac:	bl	400a50 <ioctl@plt>
  400db0:	cmp	w0, #0x0
  400db4:	b.ge	400e40 <main+0x1a4>  // b.tcont
  400db8:	mov	w0, #0x3                   	// #3
  400dbc:	str	w0, [sp, #64]
  400dc0:	bl	4009f0 <__errno_location@plt>
  400dc4:	ldr	w0, [x0]
  400dc8:	str	w0, [sp, #68]
  400dcc:	mov	w0, #0x1                   	// #1
  400dd0:	str	w0, [sp, #72]
  400dd4:	ldr	w0, [sp, #72]
  400dd8:	bl	400aa0 <log_get_max_level_realm@plt>
  400ddc:	mov	w1, w0
  400de0:	ldr	w0, [sp, #64]
  400de4:	and	w0, w0, #0x7
  400de8:	cmp	w1, w0
  400dec:	b.lt	400e30 <main+0x194>  // b.tstop
  400df0:	ldr	w0, [sp, #72]
  400df4:	lsl	w1, w0, #10
  400df8:	ldr	w0, [sp, #64]
  400dfc:	orr	w6, w1, w0
  400e00:	adrp	x0, 401000 <probe_smart_media+0x140>
  400e04:	add	x1, x0, #0x413
  400e08:	adrp	x0, 401000 <probe_smart_media+0x140>
  400e0c:	add	x5, x0, #0x450
  400e10:	adrp	x0, 401000 <probe_smart_media+0x140>
  400e14:	add	x4, x0, #0x478
  400e18:	mov	w3, #0x33                  	// #51
  400e1c:	mov	x2, x1
  400e20:	ldr	w1, [sp, #68]
  400e24:	mov	w0, w6
  400e28:	bl	400a40 <log_internal_realm@plt>
  400e2c:	b	400e38 <main+0x19c>
  400e30:	ldr	w0, [sp, #68]
  400e34:	cmp	w0, #0x0
  400e38:	mov	w19, #0x1                   	// #1
  400e3c:	b	400e60 <main+0x1c4>
  400e40:	ldr	w0, [sp, #60]
  400e44:	add	x1, sp, #0x58
  400e48:	bl	400ec0 <probe_smart_media>
  400e4c:	cmp	w0, #0x0
  400e50:	b.ge	400e5c <main+0x1c0>  // b.tcont
  400e54:	mov	w19, #0x1                   	// #1
  400e58:	b	400e60 <main+0x1c4>
  400e5c:	mov	w19, #0x0                   	// #0
  400e60:	add	x0, sp, #0x3c
  400e64:	bl	400c78 <closep>
  400e68:	mov	w1, w19
  400e6c:	adrp	x0, 411000 <__FRAME_END__+0xf8d8>
  400e70:	add	x0, x0, #0xd18
  400e74:	ldr	x2, [sp, #120]
  400e78:	ldr	x0, [x0]
  400e7c:	eor	x0, x2, x0
  400e80:	cmp	x0, #0x0
  400e84:	b.eq	400e8c <main+0x1f0>  // b.none
  400e88:	bl	400a10 <__stack_chk_fail@plt>
  400e8c:	mov	w0, w1
  400e90:	ldr	x19, [sp, #16]
  400e94:	ldp	x29, x30, [sp], #128
  400e98:	ret

0000000000400e9c <freep>:
  400e9c:	stp	x29, x30, [sp, #-32]!
  400ea0:	mov	x29, sp
  400ea4:	str	x0, [sp, #24]
  400ea8:	ldr	x0, [sp, #24]
  400eac:	ldr	x0, [x0]
  400eb0:	bl	400a60 <free@plt>
  400eb4:	nop
  400eb8:	ldp	x29, x30, [sp], #32
  400ebc:	ret

0000000000400ec0 <probe_smart_media>:
  400ec0:	stp	x29, x30, [sp, #-144]!
  400ec4:	mov	x29, sp
  400ec8:	str	x19, [sp, #16]
  400ecc:	str	w0, [sp, #44]
  400ed0:	str	x1, [sp, #32]
  400ed4:	adrp	x0, 411000 <__FRAME_END__+0xf8d8>
  400ed8:	add	x0, x0, #0xd18
  400edc:	ldr	x1, [x0]
  400ee0:	str	x1, [sp, #136]
  400ee4:	mov	x1, #0x0                   	// #0
  400ee8:	str	xzr, [sp, #128]
  400eec:	str	wzr, [sp, #64]
  400ef0:	mov	x0, #0x200                 	// #512
  400ef4:	bl	400a30 <malloc@plt>
  400ef8:	str	x0, [sp, #128]
  400efc:	ldr	x0, [sp, #128]
  400f00:	cmp	x0, #0x0
  400f04:	b.ne	400f2c <probe_smart_media+0x6c>  // b.any
  400f08:	adrp	x0, 401000 <probe_smart_media+0x140>
  400f0c:	add	x1, x0, #0x493
  400f10:	adrp	x0, 401000 <probe_smart_media+0x140>
  400f14:	add	x3, x0, #0x548
  400f18:	mov	w2, #0x32                  	// #50
  400f1c:	mov	w0, #0x1                   	// #1
  400f20:	bl	400a90 <log_oom_internal@plt>
  400f24:	mov	w19, w0
  400f28:	b	40130c <probe_smart_media+0x44c>
  400f2c:	ldr	x0, [sp, #32]
  400f30:	ldrb	w0, [x0]
  400f34:	cmp	w0, #0x4
  400f38:	b.eq	400fd0 <probe_smart_media+0x110>  // b.none
  400f3c:	mov	w0, #0x7                   	// #7
  400f40:	str	w0, [sp, #116]
  400f44:	mov	w0, #0x16                  	// #22
  400f48:	movk	w0, #0x4000, lsl #16
  400f4c:	str	w0, [sp, #120]
  400f50:	mov	w0, #0x1                   	// #1
  400f54:	str	w0, [sp, #124]
  400f58:	ldr	w0, [sp, #124]
  400f5c:	bl	400aa0 <log_get_max_level_realm@plt>
  400f60:	mov	w1, w0
  400f64:	ldr	w0, [sp, #116]
  400f68:	and	w0, w0, #0x7
  400f6c:	cmp	w1, w0
  400f70:	b.lt	400fb8 <probe_smart_media+0xf8>  // b.tstop
  400f74:	ldr	w0, [sp, #124]
  400f78:	lsl	w1, w0, #10
  400f7c:	ldr	w0, [sp, #116]
  400f80:	orr	w6, w1, w0
  400f84:	adrp	x0, 401000 <probe_smart_media+0x140>
  400f88:	add	x1, x0, #0x493
  400f8c:	adrp	x0, 401000 <probe_smart_media+0x140>
  400f90:	add	x5, x0, #0x4c0
  400f94:	adrp	x0, 401000 <probe_smart_media+0x140>
  400f98:	add	x4, x0, #0x548
  400f9c:	mov	w3, #0x35                  	// #53
  400fa0:	mov	x2, x1
  400fa4:	ldr	w1, [sp, #120]
  400fa8:	mov	w0, w6
  400fac:	bl	400a40 <log_internal_realm@plt>
  400fb0:	mov	w19, w0
  400fb4:	b	40130c <probe_smart_media+0x44c>
  400fb8:	ldr	w0, [sp, #120]
  400fbc:	cmp	w0, #0x0
  400fc0:	cneg	w0, w0, lt  // lt = tstop
  400fc4:	and	w0, w0, #0xff
  400fc8:	neg	w19, w0
  400fcc:	b	40130c <probe_smart_media+0x44c>
  400fd0:	ldr	x0, [sp, #32]
  400fd4:	ldr	w0, [x0, #16]
  400fd8:	str	w0, [sp, #68]
  400fdc:	ldr	x0, [sp, #32]
  400fe0:	ldr	w0, [x0, #12]
  400fe4:	str	w0, [sp, #72]
  400fe8:	ldr	x0, [sp, #32]
  400fec:	ldr	w0, [x0, #8]
  400ff0:	lsr	w0, w0, #20
  400ff4:	str	w0, [sp, #76]
  400ff8:	strb	wzr, [sp, #55]
  400ffc:	ldr	w0, [sp, #68]
  401000:	cmp	w0, #0x100
  401004:	b.eq	401014 <probe_smart_media+0x154>  // b.none
  401008:	ldr	w0, [sp, #68]
  40100c:	cmp	w0, #0x200
  401010:	b.ne	40101c <probe_smart_media+0x15c>  // b.any
  401014:	mov	w0, #0x1                   	// #1
  401018:	strb	w0, [sp, #55]
  40101c:	nop
  401020:	ldrb	w0, [sp, #55]
  401024:	eor	w0, w0, #0x1
  401028:	and	w0, w0, #0xff
  40102c:	cmp	w0, #0x0
  401030:	b.eq	4010cc <probe_smart_media+0x20c>  // b.none
  401034:	mov	w0, #0x7                   	// #7
  401038:	str	w0, [sp, #104]
  40103c:	mov	w0, #0x16                  	// #22
  401040:	movk	w0, #0x4000, lsl #16
  401044:	str	w0, [sp, #108]
  401048:	mov	w0, #0x1                   	// #1
  40104c:	str	w0, [sp, #112]
  401050:	ldr	w0, [sp, #112]
  401054:	bl	400aa0 <log_get_max_level_realm@plt>
  401058:	mov	w1, w0
  40105c:	ldr	w0, [sp, #104]
  401060:	and	w0, w0, #0x7
  401064:	cmp	w1, w0
  401068:	b.lt	4010b4 <probe_smart_media+0x1f4>  // b.tstop
  40106c:	ldr	w0, [sp, #112]
  401070:	lsl	w1, w0, #10
  401074:	ldr	w0, [sp, #104]
  401078:	orr	w7, w1, w0
  40107c:	adrp	x0, 401000 <probe_smart_media+0x140>
  401080:	add	x1, x0, #0x493
  401084:	ldr	w6, [sp, #68]
  401088:	adrp	x0, 401000 <probe_smart_media+0x140>
  40108c:	add	x5, x0, #0x4e0
  401090:	adrp	x0, 401000 <probe_smart_media+0x140>
  401094:	add	x4, x0, #0x548
  401098:	mov	w3, #0x3d                  	// #61
  40109c:	mov	x2, x1
  4010a0:	ldr	w1, [sp, #108]
  4010a4:	mov	w0, w7
  4010a8:	bl	400a40 <log_internal_realm@plt>
  4010ac:	mov	w19, w0
  4010b0:	b	40130c <probe_smart_media+0x44c>
  4010b4:	ldr	w0, [sp, #108]
  4010b8:	cmp	w0, #0x0
  4010bc:	cneg	w0, w0, lt  // lt = tstop
  4010c0:	and	w0, w0, #0xff
  4010c4:	neg	w19, w0
  4010c8:	b	40130c <probe_smart_media+0x44c>
  4010cc:	ldr	w0, [sp, #76]
  4010d0:	cmp	w0, #0x2
  4010d4:	b.gt	4010e8 <probe_smart_media+0x228>
  4010d8:	ldr	w0, [sp, #76]
  4010dc:	cmp	w0, #0x0
  4010e0:	b.gt	4010f8 <probe_smart_media+0x238>
  4010e4:	b	401110 <probe_smart_media+0x250>
  4010e8:	ldr	w0, [sp, #76]
  4010ec:	cmp	w0, #0x4
  4010f0:	b.eq	401104 <probe_smart_media+0x244>  // b.none
  4010f4:	b	401110 <probe_smart_media+0x250>
  4010f8:	mov	w0, #0x6                   	// #6
  4010fc:	str	w0, [sp, #56]
  401100:	b	40111c <probe_smart_media+0x25c>
  401104:	mov	w0, #0xc                   	// #12
  401108:	str	w0, [sp, #56]
  40110c:	b	40111c <probe_smart_media+0x25c>
  401110:	mov	w0, #0x18                  	// #24
  401114:	str	w0, [sp, #56]
  401118:	nop
  40111c:	str	wzr, [sp, #60]
  401120:	b	40116c <probe_smart_media+0x2ac>
  401124:	ldr	w2, [sp, #60]
  401128:	mov	x1, #0x0                   	// #0
  40112c:	ldr	w0, [sp, #44]
  401130:	bl	4009b0 <lseek64@plt>
  401134:	ldr	x0, [sp, #128]
  401138:	mov	x2, #0x200                 	// #512
  40113c:	mov	x1, x0
  401140:	ldr	w0, [sp, #44]
  401144:	bl	400a00 <read@plt>
  401148:	cmp	x0, #0x200
  40114c:	b.ne	40115c <probe_smart_media+0x29c>  // b.any
  401150:	mov	w0, #0x1                   	// #1
  401154:	str	w0, [sp, #64]
  401158:	b	401184 <probe_smart_media+0x2c4>
  40115c:	ldr	w1, [sp, #60]
  401160:	ldr	w0, [sp, #68]
  401164:	add	w0, w1, w0
  401168:	str	w0, [sp, #60]
  40116c:	ldr	w1, [sp, #72]
  401170:	ldr	w0, [sp, #56]
  401174:	mul	w0, w1, w0
  401178:	ldr	w1, [sp, #60]
  40117c:	cmp	w1, w0
  401180:	b.lt	401124 <probe_smart_media+0x264>  // b.tstop
  401184:	ldr	w0, [sp, #64]
  401188:	cmp	w0, #0x0
  40118c:	b.ne	401224 <probe_smart_media+0x364>  // b.any
  401190:	mov	w0, #0x7                   	// #7
  401194:	str	w0, [sp, #92]
  401198:	mov	w0, #0x16                  	// #22
  40119c:	movk	w0, #0x4000, lsl #16
  4011a0:	str	w0, [sp, #96]
  4011a4:	mov	w0, #0x1                   	// #1
  4011a8:	str	w0, [sp, #100]
  4011ac:	ldr	w0, [sp, #100]
  4011b0:	bl	400aa0 <log_get_max_level_realm@plt>
  4011b4:	mov	w1, w0
  4011b8:	ldr	w0, [sp, #92]
  4011bc:	and	w0, w0, #0x7
  4011c0:	cmp	w1, w0
  4011c4:	b.lt	40120c <probe_smart_media+0x34c>  // b.tstop
  4011c8:	ldr	w0, [sp, #100]
  4011cc:	lsl	w1, w0, #10
  4011d0:	ldr	w0, [sp, #92]
  4011d4:	orr	w6, w1, w0
  4011d8:	adrp	x0, 401000 <probe_smart_media+0x140>
  4011dc:	add	x1, x0, #0x493
  4011e0:	adrp	x0, 401000 <probe_smart_media+0x140>
  4011e4:	add	x5, x0, #0x500
  4011e8:	adrp	x0, 401000 <probe_smart_media+0x140>
  4011ec:	add	x4, x0, #0x548
  4011f0:	mov	w3, #0x57                  	// #87
  4011f4:	mov	x2, x1
  4011f8:	ldr	w1, [sp, #96]
  4011fc:	mov	w0, w6
  401200:	bl	400a40 <log_internal_realm@plt>
  401204:	mov	w19, w0
  401208:	b	40130c <probe_smart_media+0x44c>
  40120c:	ldr	w0, [sp, #96]
  401210:	cmp	w0, #0x0
  401214:	cneg	w0, w0, lt  // lt = tstop
  401218:	and	w0, w0, #0xff
  40121c:	neg	w19, w0
  401220:	b	40130c <probe_smart_media+0x44c>
  401224:	ldr	x3, [sp, #128]
  401228:	mov	x2, #0xa                   	// #10
  40122c:	adrp	x0, 401000 <probe_smart_media+0x140>
  401230:	add	x1, x0, #0x480
  401234:	mov	x0, x3
  401238:	bl	400a20 <memcmp@plt>
  40123c:	cmp	w0, #0x0
  401240:	b.eq	4012fc <probe_smart_media+0x43c>  // b.none
  401244:	ldr	x0, [sp, #128]
  401248:	add	x3, x0, #0x100
  40124c:	mov	x2, #0xa                   	// #10
  401250:	adrp	x0, 401000 <probe_smart_media+0x140>
  401254:	add	x1, x0, #0x480
  401258:	mov	x0, x3
  40125c:	bl	400a20 <memcmp@plt>
  401260:	cmp	w0, #0x0
  401264:	b.eq	4012fc <probe_smart_media+0x43c>  // b.none
  401268:	mov	w0, #0x7                   	// #7
  40126c:	str	w0, [sp, #80]
  401270:	mov	w0, #0x16                  	// #22
  401274:	movk	w0, #0x4000, lsl #16
  401278:	str	w0, [sp, #84]
  40127c:	mov	w0, #0x1                   	// #1
  401280:	str	w0, [sp, #88]
  401284:	ldr	w0, [sp, #88]
  401288:	bl	400aa0 <log_get_max_level_realm@plt>
  40128c:	mov	w1, w0
  401290:	ldr	w0, [sp, #80]
  401294:	and	w0, w0, #0x7
  401298:	cmp	w1, w0
  40129c:	b.lt	4012e4 <probe_smart_media+0x424>  // b.tstop
  4012a0:	ldr	w0, [sp, #88]
  4012a4:	lsl	w1, w0, #10
  4012a8:	ldr	w0, [sp, #80]
  4012ac:	orr	w6, w1, w0
  4012b0:	adrp	x0, 401000 <probe_smart_media+0x140>
  4012b4:	add	x1, x0, #0x493
  4012b8:	adrp	x0, 401000 <probe_smart_media+0x140>
  4012bc:	add	x5, x0, #0x510
  4012c0:	adrp	x0, 401000 <probe_smart_media+0x140>
  4012c4:	add	x4, x0, #0x548
  4012c8:	mov	w3, #0x5c                  	// #92
  4012cc:	mov	x2, x1
  4012d0:	ldr	w1, [sp, #84]
  4012d4:	mov	w0, w6
  4012d8:	bl	400a40 <log_internal_realm@plt>
  4012dc:	mov	w19, w0
  4012e0:	b	40130c <probe_smart_media+0x44c>
  4012e4:	ldr	w0, [sp, #84]
  4012e8:	cmp	w0, #0x0
  4012ec:	cneg	w0, w0, lt  // lt = tstop
  4012f0:	and	w0, w0, #0xff
  4012f4:	neg	w19, w0
  4012f8:	b	40130c <probe_smart_media+0x44c>
  4012fc:	adrp	x0, 401000 <probe_smart_media+0x140>
  401300:	add	x0, x0, #0x530
  401304:	bl	400a70 <puts@plt>
  401308:	mov	w19, #0x0                   	// #0
  40130c:	add	x0, sp, #0x80
  401310:	bl	400e9c <freep>
  401314:	mov	w1, w19
  401318:	adrp	x0, 411000 <__FRAME_END__+0xf8d8>
  40131c:	add	x0, x0, #0xd18
  401320:	ldr	x2, [sp, #136]
  401324:	ldr	x0, [x0]
  401328:	eor	x0, x2, x0
  40132c:	cmp	x0, #0x0
  401330:	b.eq	401338 <probe_smart_media+0x478>  // b.none
  401334:	bl	400a10 <__stack_chk_fail@plt>
  401338:	mov	w0, w1
  40133c:	ldr	x19, [sp, #16]
  401340:	ldp	x29, x30, [sp], #144
  401344:	ret

0000000000401348 <__libc_csu_init>:
  401348:	stp	x29, x30, [sp, #-64]!
  40134c:	mov	x29, sp
  401350:	stp	x19, x20, [sp, #16]
  401354:	adrp	x20, 411000 <__FRAME_END__+0xf8d8>
  401358:	add	x20, x20, #0xd10
  40135c:	stp	x21, x22, [sp, #32]
  401360:	adrp	x21, 411000 <__FRAME_END__+0xf8d8>
  401364:	add	x21, x21, #0xd08
  401368:	sub	x20, x20, x21
  40136c:	mov	w22, w0
  401370:	stp	x23, x24, [sp, #48]
  401374:	mov	x23, x1
  401378:	mov	x24, x2
  40137c:	bl	400960 <_init>
  401380:	cmp	xzr, x20, asr #3
  401384:	b.eq	4013b0 <__libc_csu_init+0x68>  // b.none
  401388:	asr	x20, x20, #3
  40138c:	mov	x19, #0x0                   	// #0
  401390:	ldr	x3, [x21, x19, lsl #3]
  401394:	mov	x2, x24
  401398:	add	x19, x19, #0x1
  40139c:	mov	x1, x23
  4013a0:	mov	w0, w22
  4013a4:	blr	x3
  4013a8:	cmp	x20, x19
  4013ac:	b.ne	401390 <__libc_csu_init+0x48>  // b.any
  4013b0:	ldp	x19, x20, [sp, #16]
  4013b4:	ldp	x21, x22, [sp, #32]
  4013b8:	ldp	x23, x24, [sp, #48]
  4013bc:	ldp	x29, x30, [sp], #64
  4013c0:	ret
  4013c4:	nop

00000000004013c8 <__libc_csu_fini>:
  4013c8:	ret

Disassembly of section .fini:

00000000004013cc <_fini>:
  4013cc:	stp	x29, x30, [sp, #-16]!
  4013d0:	mov	x29, sp
  4013d4:	ldp	x29, x30, [sp], #16
  4013d8:	ret
