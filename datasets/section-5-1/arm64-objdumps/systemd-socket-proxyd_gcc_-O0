
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-socket-proxyd_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401968 <_init>:
  401968:	stp	x29, x30, [sp, #-16]!
  40196c:	mov	x29, sp
  401970:	bl	401dc0 <call_weak_fn>
  401974:	ldp	x29, x30, [sp], #16
  401978:	ret

Disassembly of section .plt:

0000000000401980 <.plt>:
  401980:	stp	x16, x30, [sp, #-16]!
  401984:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401988:	ldr	x17, [x16, #3584]
  40198c:	add	x16, x16, #0xe00
  401990:	br	x17
  401994:	nop
  401998:	nop
  40199c:	nop

00000000004019a0 <internal_hashmap_remove@plt>:
  4019a0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  4019a4:	ldr	x17, [x16, #3592]
  4019a8:	add	x16, x16, #0xe08
  4019ac:	br	x17

00000000004019b0 <internal_hashmap_free@plt>:
  4019b0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  4019b4:	ldr	x17, [x16, #3600]
  4019b8:	add	x16, x16, #0xe10
  4019bc:	br	x17

00000000004019c0 <internal_set_ensure_allocated@plt>:
  4019c0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  4019c4:	ldr	x17, [x16, #3608]
  4019c8:	add	x16, x16, #0xe18
  4019cc:	br	x17

00000000004019d0 <__libc_start_main@plt>:
  4019d0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  4019d4:	ldr	x17, [x16, #3616]
  4019d8:	add	x16, x16, #0xe20
  4019dc:	br	x17

00000000004019e0 <resolve_getaddrinfo_with_destroy_callback@plt>:
  4019e0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  4019e4:	ldr	x17, [x16, #3624]
  4019e8:	add	x16, x16, #0xe28
  4019ec:	br	x17

00000000004019f0 <sd_event_set_watchdog@plt>:
  4019f0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  4019f4:	ldr	x17, [x16, #3632]
  4019f8:	add	x16, x16, #0xe30
  4019fc:	br	x17

0000000000401a00 <__gmon_start__@plt>:
  401a00:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a04:	ldr	x17, [x16, #3640]
  401a08:	add	x16, x16, #0xe38
  401a0c:	br	x17

0000000000401a10 <polkit_agent_close@plt>:
  401a10:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a14:	ldr	x17, [x16, #3648]
  401a18:	add	x16, x16, #0xe40
  401a1c:	br	x17

0000000000401a20 <getpeername_pretty@plt>:
  401a20:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a24:	ldr	x17, [x16, #3656]
  401a28:	add	x16, x16, #0xe48
  401a2c:	br	x17

0000000000401a30 <log_parse_environment_realm@plt>:
  401a30:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a34:	ldr	x17, [x16, #3664]
  401a38:	add	x16, x16, #0xe50
  401a3c:	br	x17

0000000000401a40 <splice@plt>:
  401a40:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a44:	ldr	x17, [x16, #3672]
  401a48:	add	x16, x16, #0xe58
  401a4c:	br	x17

0000000000401a50 <sd_event_default@plt>:
  401a50:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a54:	ldr	x17, [x16, #3680]
  401a58:	add	x16, x16, #0xe60
  401a5c:	br	x17

0000000000401a60 <strnlen@plt>:
  401a60:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a64:	ldr	x17, [x16, #3688]
  401a68:	add	x16, x16, #0xe68
  401a6c:	br	x17

0000000000401a70 <socket@plt>:
  401a70:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a74:	ldr	x17, [x16, #3696]
  401a78:	add	x16, x16, #0xe70
  401a7c:	br	x17

0000000000401a80 <fd_nonblock@plt>:
  401a80:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a84:	ldr	x17, [x16, #3704]
  401a88:	add	x16, x16, #0xe78
  401a8c:	br	x17

0000000000401a90 <memcpy@plt>:
  401a90:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401a94:	ldr	x17, [x16, #3712]
  401a98:	add	x16, x16, #0xe80
  401a9c:	br	x17

0000000000401aa0 <sd_event_source_set_io_events@plt>:
  401aa0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401aa4:	ldr	x17, [x16, #3720]
  401aa8:	add	x16, x16, #0xe88
  401aac:	br	x17

0000000000401ab0 <sd_event_source_unref@plt>:
  401ab0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ab4:	ldr	x17, [x16, #3728]
  401ab8:	add	x16, x16, #0xe90
  401abc:	br	x17

0000000000401ac0 <safe_close@plt>:
  401ac0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ac4:	ldr	x17, [x16, #3736]
  401ac8:	add	x16, x16, #0xe98
  401acc:	br	x17

0000000000401ad0 <safe_close_pair@plt>:
  401ad0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ad4:	ldr	x17, [x16, #3744]
  401ad8:	add	x16, x16, #0xea0
  401adc:	br	x17

0000000000401ae0 <strrchr@plt>:
  401ae0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ae4:	ldr	x17, [x16, #3752]
  401ae8:	add	x16, x16, #0xea8
  401aec:	br	x17

0000000000401af0 <log_assert_failed_realm@plt>:
  401af0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401af4:	ldr	x17, [x16, #3760]
  401af8:	add	x16, x16, #0xeb0
  401afc:	br	x17

0000000000401b00 <sd_is_socket@plt>:
  401b00:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b04:	ldr	x17, [x16, #3768]
  401b08:	add	x16, x16, #0xeb8
  401b0c:	br	x17

0000000000401b10 <getopt_long@plt>:
  401b10:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b14:	ldr	x17, [x16, #3776]
  401b18:	add	x16, x16, #0xec0
  401b1c:	br	x17

0000000000401b20 <getsockopt@plt>:
  401b20:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b24:	ldr	x17, [x16, #3784]
  401b28:	add	x16, x16, #0xec8
  401b2c:	br	x17

0000000000401b30 <log_assert_failed_unreachable_realm@plt>:
  401b30:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b34:	ldr	x17, [x16, #3792]
  401b38:	add	x16, x16, #0xed0
  401b3c:	br	x17

0000000000401b40 <sd_listen_fds@plt>:
  401b40:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b44:	ldr	x17, [x16, #3800]
  401b48:	add	x16, x16, #0xed8
  401b4c:	br	x17

0000000000401b50 <sd_event_source_set_enabled@plt>:
  401b50:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b54:	ldr	x17, [x16, #3808]
  401b58:	add	x16, x16, #0xee0
  401b5c:	br	x17

0000000000401b60 <abort@plt>:
  401b60:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b64:	ldr	x17, [x16, #3816]
  401b68:	add	x16, x16, #0xee8
  401b6c:	br	x17

0000000000401b70 <__errno_location@plt>:
  401b70:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b74:	ldr	x17, [x16, #3824]
  401b78:	add	x16, x16, #0xef0
  401b7c:	br	x17

0000000000401b80 <sd_resolve_unref@plt>:
  401b80:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b84:	ldr	x17, [x16, #3832]
  401b88:	add	x16, x16, #0xef8
  401b8c:	br	x17

0000000000401b90 <terminal_urlify_man@plt>:
  401b90:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401b94:	ldr	x17, [x16, #3840]
  401b98:	add	x16, x16, #0xf00
  401b9c:	br	x17

0000000000401ba0 <__stack_chk_fail@plt>:
  401ba0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ba4:	ldr	x17, [x16, #3848]
  401ba8:	add	x16, x16, #0xf08
  401bac:	br	x17

0000000000401bb0 <fcntl64@plt>:
  401bb0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401bb4:	ldr	x17, [x16, #3856]
  401bb8:	add	x16, x16, #0xf10
  401bbc:	br	x17

0000000000401bc0 <ask_password_agent_close@plt>:
  401bc0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401bc4:	ldr	x17, [x16, #3864]
  401bc8:	add	x16, x16, #0xf18
  401bcc:	br	x17

0000000000401bd0 <version@plt>:
  401bd0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401bd4:	ldr	x17, [x16, #3872]
  401bd8:	add	x16, x16, #0xf20
  401bdc:	br	x17

0000000000401be0 <pager_close@plt>:
  401be0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401be4:	ldr	x17, [x16, #3880]
  401be8:	add	x16, x16, #0xf28
  401bec:	br	x17

0000000000401bf0 <sd_resolve_default@plt>:
  401bf0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401bf4:	ldr	x17, [x16, #3888]
  401bf8:	add	x16, x16, #0xf30
  401bfc:	br	x17

0000000000401c00 <gai_strerror@plt>:
  401c00:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c04:	ldr	x17, [x16, #3896]
  401c08:	add	x16, x16, #0xf38
  401c0c:	br	x17

0000000000401c10 <sd_resolve_attach_event@plt>:
  401c10:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c14:	ldr	x17, [x16, #3904]
  401c18:	add	x16, x16, #0xf40
  401c1c:	br	x17

0000000000401c20 <safe_atou_full@plt>:
  401c20:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c24:	ldr	x17, [x16, #3912]
  401c28:	add	x16, x16, #0xf48
  401c2c:	br	x17

0000000000401c30 <internal_hashmap_size@plt>:
  401c30:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c34:	ldr	x17, [x16, #3920]
  401c38:	add	x16, x16, #0xf50
  401c3c:	br	x17

0000000000401c40 <log_internal_realm@plt>:
  401c40:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c44:	ldr	x17, [x16, #3928]
  401c48:	add	x16, x16, #0xf58
  401c4c:	br	x17

0000000000401c50 <pipe2@plt>:
  401c50:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c54:	ldr	x17, [x16, #3936]
  401c58:	add	x16, x16, #0xf60
  401c5c:	br	x17

0000000000401c60 <sd_event_add_io@plt>:
  401c60:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c64:	ldr	x17, [x16, #3944]
  401c68:	add	x16, x16, #0xf68
  401c6c:	br	x17

0000000000401c70 <sd_event_loop@plt>:
  401c70:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c74:	ldr	x17, [x16, #3952]
  401c78:	add	x16, x16, #0xf70
  401c7c:	br	x17

0000000000401c80 <calloc@plt>:
  401c80:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c84:	ldr	x17, [x16, #3960]
  401c88:	add	x16, x16, #0xf78
  401c8c:	br	x17

0000000000401c90 <internal_hashmap_first_key_and_value@plt>:
  401c90:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401c94:	ldr	x17, [x16, #3968]
  401c98:	add	x16, x16, #0xf80
  401c9c:	br	x17

0000000000401ca0 <accept4@plt>:
  401ca0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ca4:	ldr	x17, [x16, #3976]
  401ca8:	add	x16, x16, #0xf88
  401cac:	br	x17

0000000000401cb0 <sockaddr_un_set_path@plt>:
  401cb0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401cb4:	ldr	x17, [x16, #3984]
  401cb8:	add	x16, x16, #0xf90
  401cbc:	br	x17

0000000000401cc0 <free@plt>:
  401cc0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401cc4:	ldr	x17, [x16, #3992]
  401cc8:	add	x16, x16, #0xf98
  401ccc:	br	x17

0000000000401cd0 <sd_event_exit@plt>:
  401cd0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401cd4:	ldr	x17, [x16, #4000]
  401cd8:	add	x16, x16, #0xfa0
  401cdc:	br	x17

0000000000401ce0 <sd_event_unref@plt>:
  401ce0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401ce4:	ldr	x17, [x16, #4008]
  401ce8:	add	x16, x16, #0xfa8
  401cec:	br	x17

0000000000401cf0 <mac_selinux_finish@plt>:
  401cf0:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401cf4:	ldr	x17, [x16, #4016]
  401cf8:	add	x16, x16, #0xfb0
  401cfc:	br	x17

0000000000401d00 <printf@plt>:
  401d00:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d04:	ldr	x17, [x16, #4024]
  401d08:	add	x16, x16, #0xfb8
  401d0c:	br	x17

0000000000401d10 <connect@plt>:
  401d10:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d14:	ldr	x17, [x16, #4032]
  401d18:	add	x16, x16, #0xfc0
  401d1c:	br	x17

0000000000401d20 <set_put@plt>:
  401d20:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d24:	ldr	x17, [x16, #4040]
  401d28:	add	x16, x16, #0xfc8
  401d2c:	br	x17

0000000000401d30 <log_open@plt>:
  401d30:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d34:	ldr	x17, [x16, #4048]
  401d38:	add	x16, x16, #0xfd0
  401d3c:	br	x17

0000000000401d40 <log_oom_internal@plt>:
  401d40:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d44:	ldr	x17, [x16, #4056]
  401d48:	add	x16, x16, #0xfd8
  401d4c:	br	x17

0000000000401d50 <log_get_max_level_realm@plt>:
  401d50:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d54:	ldr	x17, [x16, #4064]
  401d58:	add	x16, x16, #0xfe0
  401d5c:	br	x17

0000000000401d60 <sd_resolve_query_unref@plt>:
  401d60:	adrp	x16, 416000 <__FRAME_END__+0xf9e8>
  401d64:	ldr	x17, [x16, #4072]
  401d68:	add	x16, x16, #0xfe8
  401d6c:	br	x17

Disassembly of section .text:

0000000000401d70 <_start>:
  401d70:	mov	x29, #0x0                   	// #0
  401d74:	mov	x30, #0x0                   	// #0
  401d78:	mov	x5, x0
  401d7c:	ldr	x1, [sp]
  401d80:	add	x2, sp, #0x8
  401d84:	mov	x6, sp
  401d88:	movz	x0, #0x0, lsl #48
  401d8c:	movk	x0, #0x0, lsl #32
  401d90:	movk	x0, #0x40, lsl #16
  401d94:	movk	x0, #0x5488
  401d98:	movz	x3, #0x0, lsl #48
  401d9c:	movk	x3, #0x0, lsl #32
  401da0:	movk	x3, #0x40, lsl #16
  401da4:	movk	x3, #0x54d8
  401da8:	movz	x4, #0x0, lsl #48
  401dac:	movk	x4, #0x0, lsl #32
  401db0:	movk	x4, #0x40, lsl #16
  401db4:	movk	x4, #0x5558
  401db8:	bl	4019d0 <__libc_start_main@plt>
  401dbc:	bl	401b60 <abort@plt>

0000000000401dc0 <call_weak_fn>:
  401dc0:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  401dc4:	ldr	x0, [x0, #4088]
  401dc8:	cbz	x0, 401dd0 <call_weak_fn+0x10>
  401dcc:	b	401a00 <__gmon_start__@plt>
  401dd0:	ret

0000000000401dd4 <deregister_tm_clones>:
  401dd4:	stp	x29, x30, [sp, #-32]!
  401dd8:	mov	x29, sp
  401ddc:	adrp	x0, 417000 <arg_connections_max>
  401de0:	add	x0, x0, #0x8
  401de4:	str	x0, [sp, #24]
  401de8:	ldr	x0, [sp, #24]
  401dec:	str	x0, [sp, #24]
  401df0:	ldr	x1, [sp, #24]
  401df4:	adrp	x0, 417000 <arg_connections_max>
  401df8:	add	x0, x0, #0x8
  401dfc:	cmp	x1, x0
  401e00:	b.eq	401e3c <deregister_tm_clones+0x68>  // b.none
  401e04:	adrp	x0, 405000 <run+0x58>
  401e08:	add	x0, x0, #0x570
  401e0c:	ldr	x0, [x0]
  401e10:	str	x0, [sp, #16]
  401e14:	ldr	x0, [sp, #16]
  401e18:	str	x0, [sp, #16]
  401e1c:	ldr	x0, [sp, #16]
  401e20:	cmp	x0, #0x0
  401e24:	b.eq	401e40 <deregister_tm_clones+0x6c>  // b.none
  401e28:	ldr	x1, [sp, #16]
  401e2c:	adrp	x0, 417000 <arg_connections_max>
  401e30:	add	x0, x0, #0x8
  401e34:	blr	x1
  401e38:	b	401e40 <deregister_tm_clones+0x6c>
  401e3c:	nop
  401e40:	ldp	x29, x30, [sp], #32
  401e44:	ret

0000000000401e48 <register_tm_clones>:
  401e48:	stp	x29, x30, [sp, #-48]!
  401e4c:	mov	x29, sp
  401e50:	adrp	x0, 417000 <arg_connections_max>
  401e54:	add	x0, x0, #0x8
  401e58:	str	x0, [sp, #40]
  401e5c:	ldr	x0, [sp, #40]
  401e60:	str	x0, [sp, #40]
  401e64:	ldr	x1, [sp, #40]
  401e68:	adrp	x0, 417000 <arg_connections_max>
  401e6c:	add	x0, x0, #0x8
  401e70:	sub	x0, x1, x0
  401e74:	asr	x0, x0, #3
  401e78:	lsr	x1, x0, #63
  401e7c:	add	x0, x1, x0
  401e80:	asr	x0, x0, #1
  401e84:	str	x0, [sp, #32]
  401e88:	ldr	x0, [sp, #32]
  401e8c:	cmp	x0, #0x0
  401e90:	b.eq	401ed0 <register_tm_clones+0x88>  // b.none
  401e94:	adrp	x0, 405000 <run+0x58>
  401e98:	add	x0, x0, #0x578
  401e9c:	ldr	x0, [x0]
  401ea0:	str	x0, [sp, #24]
  401ea4:	ldr	x0, [sp, #24]
  401ea8:	str	x0, [sp, #24]
  401eac:	ldr	x0, [sp, #24]
  401eb0:	cmp	x0, #0x0
  401eb4:	b.eq	401ed4 <register_tm_clones+0x8c>  // b.none
  401eb8:	ldr	x2, [sp, #24]
  401ebc:	ldr	x1, [sp, #32]
  401ec0:	adrp	x0, 417000 <arg_connections_max>
  401ec4:	add	x0, x0, #0x8
  401ec8:	blr	x2
  401ecc:	b	401ed4 <register_tm_clones+0x8c>
  401ed0:	nop
  401ed4:	ldp	x29, x30, [sp], #48
  401ed8:	ret

0000000000401edc <__do_global_dtors_aux>:
  401edc:	stp	x29, x30, [sp, #-16]!
  401ee0:	mov	x29, sp
  401ee4:	adrp	x0, 417000 <arg_connections_max>
  401ee8:	add	x0, x0, #0x28
  401eec:	ldrb	w0, [x0]
  401ef0:	and	x0, x0, #0xff
  401ef4:	cmp	x0, #0x0
  401ef8:	b.ne	401f14 <__do_global_dtors_aux+0x38>  // b.any
  401efc:	bl	401dd4 <deregister_tm_clones>
  401f00:	adrp	x0, 417000 <arg_connections_max>
  401f04:	add	x0, x0, #0x28
  401f08:	mov	w1, #0x1                   	// #1
  401f0c:	strb	w1, [x0]
  401f10:	b	401f18 <__do_global_dtors_aux+0x3c>
  401f14:	nop
  401f18:	ldp	x29, x30, [sp], #16
  401f1c:	ret

0000000000401f20 <frame_dummy>:
  401f20:	stp	x29, x30, [sp, #-16]!
  401f24:	mov	x29, sp
  401f28:	bl	401e48 <register_tm_clones>
  401f2c:	nop
  401f30:	ldp	x29, x30, [sp], #16
  401f34:	ret

0000000000401f38 <ALIGN_TO>:
  401f38:	sub	sp, sp, #0x10
  401f3c:	str	x0, [sp, #8]
  401f40:	str	x1, [sp]
  401f44:	ldr	x1, [sp, #8]
  401f48:	ldr	x0, [sp]
  401f4c:	add	x0, x1, x0
  401f50:	sub	x1, x0, #0x1
  401f54:	ldr	x0, [sp]
  401f58:	neg	x0, x0
  401f5c:	and	x0, x1, x0
  401f60:	add	sp, sp, #0x10
  401f64:	ret

0000000000401f68 <freep>:
  401f68:	stp	x29, x30, [sp, #-32]!
  401f6c:	mov	x29, sp
  401f70:	str	x0, [sp, #24]
  401f74:	ldr	x0, [sp, #24]
  401f78:	ldr	x0, [x0]
  401f7c:	bl	401cc0 <free@plt>
  401f80:	nop
  401f84:	ldp	x29, x30, [sp], #32
  401f88:	ret

0000000000401f8c <ERRNO_IS_DISCONNECT>:
  401f8c:	sub	sp, sp, #0x20
  401f90:	str	w0, [sp, #12]
  401f94:	strb	wzr, [sp, #31]
  401f98:	ldr	w0, [sp, #12]
  401f9c:	cmp	w0, #0x0
  401fa0:	cneg	w0, w0, lt  // lt = tstop
  401fa4:	cmp	w0, #0x20
  401fa8:	b.eq	401ff8 <ERRNO_IS_DISCONNECT+0x6c>  // b.none
  401fac:	cmp	w0, #0x20
  401fb0:	b.lt	402000 <ERRNO_IS_DISCONNECT+0x74>  // b.tstop
  401fb4:	cmp	w0, #0x71
  401fb8:	b.gt	402000 <ERRNO_IS_DISCONNECT+0x74>
  401fbc:	cmp	w0, #0x40
  401fc0:	b.lt	402000 <ERRNO_IS_DISCONNECT+0x74>  // b.tstop
  401fc4:	sub	w0, w0, #0x40
  401fc8:	mov	x1, #0x1                   	// #1
  401fcc:	lsl	x1, x1, x0
  401fd0:	mov	x0, #0x81                  	// #129
  401fd4:	movk	x0, #0x1000, lsl #16
  401fd8:	movk	x0, #0x99f0, lsl #32
  401fdc:	movk	x0, #0x3, lsl #48
  401fe0:	and	x0, x1, x0
  401fe4:	cmp	x0, #0x0
  401fe8:	cset	w0, ne  // ne = any
  401fec:	and	w0, w0, #0xff
  401ff0:	cmp	w0, #0x0
  401ff4:	b.eq	402000 <ERRNO_IS_DISCONNECT+0x74>  // b.none
  401ff8:	mov	w0, #0x1                   	// #1
  401ffc:	strb	w0, [sp, #31]
  402000:	nop
  402004:	ldrb	w0, [sp, #31]
  402008:	add	sp, sp, #0x20
  40200c:	ret

0000000000402010 <ERRNO_IS_ACCEPT_AGAIN>:
  402010:	stp	x29, x30, [sp, #-48]!
  402014:	mov	x29, sp
  402018:	str	w0, [sp, #28]
  40201c:	ldr	w0, [sp, #28]
  402020:	bl	401f8c <ERRNO_IS_DISCONNECT>
  402024:	and	w0, w0, #0xff
  402028:	cmp	w0, #0x0
  40202c:	b.ne	402078 <ERRNO_IS_ACCEPT_AGAIN+0x68>  // b.any
  402030:	strb	wzr, [sp, #47]
  402034:	ldr	w0, [sp, #28]
  402038:	cmp	w0, #0x0
  40203c:	cneg	w0, w0, lt  // lt = tstop
  402040:	cmp	w0, #0x5f
  402044:	b.eq	402060 <ERRNO_IS_ACCEPT_AGAIN+0x50>  // b.none
  402048:	cmp	w0, #0x5f
  40204c:	b.gt	402068 <ERRNO_IS_ACCEPT_AGAIN+0x58>
  402050:	cmp	w0, #0x4
  402054:	b.eq	402060 <ERRNO_IS_ACCEPT_AGAIN+0x50>  // b.none
  402058:	cmp	w0, #0xb
  40205c:	b.ne	402068 <ERRNO_IS_ACCEPT_AGAIN+0x58>  // b.any
  402060:	mov	w0, #0x1                   	// #1
  402064:	strb	w0, [sp, #47]
  402068:	nop
  40206c:	ldrb	w0, [sp, #47]
  402070:	cmp	w0, #0x0
  402074:	b.eq	402080 <ERRNO_IS_ACCEPT_AGAIN+0x70>  // b.none
  402078:	mov	w0, #0x1                   	// #1
  40207c:	b	402084 <ERRNO_IS_ACCEPT_AGAIN+0x74>
  402080:	mov	w0, #0x0                   	// #0
  402084:	and	w0, w0, #0x1
  402088:	and	w0, w0, #0xff
  40208c:	ldp	x29, x30, [sp], #48
  402090:	ret

0000000000402094 <save_argc_argv>:
  402094:	sub	sp, sp, #0x10
  402098:	str	w0, [sp, #12]
  40209c:	str	x1, [sp]
  4020a0:	adrp	x0, 417000 <arg_connections_max>
  4020a4:	add	x0, x0, #0x1c
  4020a8:	ldr	w1, [sp, #12]
  4020ac:	str	w1, [x0]
  4020b0:	adrp	x0, 417000 <arg_connections_max>
  4020b4:	add	x0, x0, #0x8
  4020b8:	ldr	x1, [sp]
  4020bc:	str	x1, [x0]
  4020c0:	nop
  4020c4:	add	sp, sp, #0x10
  4020c8:	ret

00000000004020cc <strna>:
  4020cc:	sub	sp, sp, #0x10
  4020d0:	str	x0, [sp, #8]
  4020d4:	ldr	x0, [sp, #8]
  4020d8:	cmp	x0, #0x0
  4020dc:	b.ne	4020e8 <strna+0x1c>  // b.any
  4020e0:	adrp	x0, 405000 <run+0x58>
  4020e4:	add	x0, x0, #0x580
  4020e8:	add	sp, sp, #0x10
  4020ec:	ret

00000000004020f0 <static_destruct>:
  4020f0:	stp	x29, x30, [sp, #-32]!
  4020f4:	mov	x29, sp
  4020f8:	adrp	x0, 405000 <run+0x58>
  4020fc:	add	x0, x0, #0xd78
  402100:	ldr	x0, [x0]
  402104:	cmp	x0, #0x0
  402108:	b.eq	40216c <static_destruct+0x7c>  // b.none
  40210c:	adrp	x0, 405000 <run+0x58>
  402110:	add	x0, x0, #0xd78
  402114:	ldr	x0, [x0]
  402118:	mov	x1, #0x8                   	// #8
  40211c:	bl	401f38 <ALIGN_TO>
  402120:	str	x0, [sp, #24]
  402124:	b	402150 <static_destruct+0x60>
  402128:	ldr	x0, [sp, #24]
  40212c:	ldr	x1, [x0, #8]
  402130:	ldr	x0, [sp, #24]
  402134:	ldr	x0, [x0]
  402138:	blr	x1
  40213c:	ldr	x0, [sp, #24]
  402140:	add	x0, x0, #0x10
  402144:	mov	x1, #0x8                   	// #8
  402148:	bl	401f38 <ALIGN_TO>
  40214c:	str	x0, [sp, #24]
  402150:	ldr	x1, [sp, #24]
  402154:	adrp	x0, 405000 <run+0x58>
  402158:	add	x0, x0, #0xd80
  40215c:	ldr	x0, [x0]
  402160:	cmp	x1, x0
  402164:	b.cc	402128 <static_destruct+0x38>  // b.lo, b.ul, b.last
  402168:	b	402170 <static_destruct+0x80>
  40216c:	nop
  402170:	ldp	x29, x30, [sp], #32
  402174:	ret

0000000000402178 <safe_atou>:
  402178:	stp	x29, x30, [sp, #-32]!
  40217c:	mov	x29, sp
  402180:	str	x0, [sp, #24]
  402184:	str	x1, [sp, #16]
  402188:	ldr	x2, [sp, #16]
  40218c:	mov	w1, #0x0                   	// #0
  402190:	ldr	x0, [sp, #24]
  402194:	bl	401c20 <safe_atou_full@plt>
  402198:	ldp	x29, x30, [sp], #32
  40219c:	ret

00000000004021a0 <set_free>:
  4021a0:	stp	x29, x30, [sp, #-32]!
  4021a4:	mov	x29, sp
  4021a8:	str	x0, [sp, #24]
  4021ac:	mov	x2, #0x0                   	// #0
  4021b0:	mov	x1, #0x0                   	// #0
  4021b4:	ldr	x0, [sp, #24]
  4021b8:	bl	4019b0 <internal_hashmap_free@plt>
  4021bc:	ldp	x29, x30, [sp], #32
  4021c0:	ret

00000000004021c4 <set_remove>:
  4021c4:	stp	x29, x30, [sp, #-32]!
  4021c8:	mov	x29, sp
  4021cc:	str	x0, [sp, #24]
  4021d0:	str	x1, [sp, #16]
  4021d4:	ldr	x1, [sp, #16]
  4021d8:	ldr	x0, [sp, #24]
  4021dc:	bl	4019a0 <internal_hashmap_remove@plt>
  4021e0:	ldp	x29, x30, [sp], #32
  4021e4:	ret

00000000004021e8 <set_size>:
  4021e8:	stp	x29, x30, [sp, #-32]!
  4021ec:	mov	x29, sp
  4021f0:	str	x0, [sp, #24]
  4021f4:	ldr	x0, [sp, #24]
  4021f8:	bl	401c30 <internal_hashmap_size@plt>
  4021fc:	ldp	x29, x30, [sp], #32
  402200:	ret

0000000000402204 <set_steal_first>:
  402204:	stp	x29, x30, [sp, #-32]!
  402208:	mov	x29, sp
  40220c:	str	x0, [sp, #24]
  402210:	mov	x2, #0x0                   	// #0
  402214:	mov	w1, #0x1                   	// #1
  402218:	ldr	x0, [sp, #24]
  40221c:	bl	401c90 <internal_hashmap_first_key_and_value@plt>
  402220:	ldp	x29, x30, [sp], #32
  402224:	ret

0000000000402228 <connection_free>:
  402228:	stp	x29, x30, [sp, #-32]!
  40222c:	mov	x29, sp
  402230:	str	x0, [sp, #24]
  402234:	ldr	x0, [sp, #24]
  402238:	cmp	x0, #0x0
  40223c:	cset	w0, eq  // eq = none
  402240:	and	w0, w0, #0xff
  402244:	and	x0, x0, #0xff
  402248:	cmp	x0, #0x0
  40224c:	b.eq	402278 <connection_free+0x50>  // b.none
  402250:	adrp	x0, 405000 <run+0x58>
  402254:	add	x1, x0, #0x58b
  402258:	adrp	x0, 405000 <run+0x58>
  40225c:	add	x4, x0, #0xd88
  402260:	mov	w3, #0x3b                  	// #59
  402264:	mov	x2, x1
  402268:	adrp	x0, 405000 <run+0x58>
  40226c:	add	x1, x0, #0x5b0
  402270:	mov	w0, #0x0                   	// #0
  402274:	bl	401af0 <log_assert_failed_realm@plt>
  402278:	ldr	x0, [sp, #24]
  40227c:	ldr	x0, [x0]
  402280:	cmp	x0, #0x0
  402284:	b.eq	40229c <connection_free+0x74>  // b.none
  402288:	ldr	x0, [sp, #24]
  40228c:	ldr	x0, [x0]
  402290:	ldr	x0, [x0, #24]
  402294:	ldr	x1, [sp, #24]
  402298:	bl	4021c4 <set_remove>
  40229c:	ldr	x0, [sp, #24]
  4022a0:	ldr	x0, [x0, #64]
  4022a4:	bl	401ab0 <sd_event_source_unref@plt>
  4022a8:	ldr	x0, [sp, #24]
  4022ac:	ldr	x0, [x0, #72]
  4022b0:	bl	401ab0 <sd_event_source_unref@plt>
  4022b4:	ldr	x0, [sp, #24]
  4022b8:	ldr	w0, [x0, #8]
  4022bc:	bl	401ac0 <safe_close@plt>
  4022c0:	ldr	x0, [sp, #24]
  4022c4:	ldr	w0, [x0, #12]
  4022c8:	bl	401ac0 <safe_close@plt>
  4022cc:	ldr	x0, [sp, #24]
  4022d0:	add	x0, x0, #0x10
  4022d4:	bl	401ad0 <safe_close_pair@plt>
  4022d8:	ldr	x0, [sp, #24]
  4022dc:	add	x0, x0, #0x18
  4022e0:	bl	401ad0 <safe_close_pair@plt>
  4022e4:	ldr	x0, [sp, #24]
  4022e8:	ldr	x0, [x0, #80]
  4022ec:	bl	401d60 <sd_resolve_query_unref@plt>
  4022f0:	ldr	x0, [sp, #24]
  4022f4:	bl	401cc0 <free@plt>
  4022f8:	nop
  4022fc:	ldp	x29, x30, [sp], #32
  402300:	ret

0000000000402304 <context_clear>:
  402304:	stp	x29, x30, [sp, #-48]!
  402308:	mov	x29, sp
  40230c:	str	x0, [sp, #24]
  402310:	ldr	x0, [sp, #24]
  402314:	cmp	x0, #0x0
  402318:	cset	w0, eq  // eq = none
  40231c:	and	w0, w0, #0xff
  402320:	and	x0, x0, #0xff
  402324:	cmp	x0, #0x0
  402328:	b.eq	40235c <context_clear+0x58>  // b.none
  40232c:	adrp	x0, 405000 <run+0x58>
  402330:	add	x1, x0, #0x58b
  402334:	adrp	x0, 405000 <run+0x58>
  402338:	add	x4, x0, #0xd98
  40233c:	mov	w3, #0x4f                  	// #79
  402340:	mov	x2, x1
  402344:	adrp	x0, 405000 <run+0x58>
  402348:	add	x1, x0, #0x5b8
  40234c:	mov	w0, #0x0                   	// #0
  402350:	bl	401af0 <log_assert_failed_realm@plt>
  402354:	ldr	x0, [sp, #32]
  402358:	bl	401ab0 <sd_event_source_unref@plt>
  40235c:	ldr	x0, [sp, #24]
  402360:	ldr	x0, [x0, #16]
  402364:	bl	402204 <set_steal_first>
  402368:	str	x0, [sp, #32]
  40236c:	ldr	x0, [sp, #32]
  402370:	cmp	x0, #0x0
  402374:	b.ne	402354 <context_clear+0x50>  // b.any
  402378:	ldr	x0, [sp, #24]
  40237c:	ldr	x0, [x0, #16]
  402380:	bl	4021a0 <set_free>
  402384:	b	402390 <context_clear+0x8c>
  402388:	ldr	x0, [sp, #40]
  40238c:	bl	402228 <connection_free>
  402390:	ldr	x0, [sp, #24]
  402394:	ldr	x0, [x0, #24]
  402398:	bl	402204 <set_steal_first>
  40239c:	str	x0, [sp, #40]
  4023a0:	ldr	x0, [sp, #40]
  4023a4:	cmp	x0, #0x0
  4023a8:	b.ne	402388 <context_clear+0x84>  // b.any
  4023ac:	ldr	x0, [sp, #24]
  4023b0:	ldr	x0, [x0, #24]
  4023b4:	bl	4021a0 <set_free>
  4023b8:	ldr	x0, [sp, #24]
  4023bc:	ldr	x0, [x0]
  4023c0:	bl	401ce0 <sd_event_unref@plt>
  4023c4:	ldr	x0, [sp, #24]
  4023c8:	ldr	x0, [x0, #8]
  4023cc:	bl	401b80 <sd_resolve_unref@plt>
  4023d0:	nop
  4023d4:	ldp	x29, x30, [sp], #48
  4023d8:	ret

00000000004023dc <connection_create_pipes>:
  4023dc:	stp	x29, x30, [sp, #-80]!
  4023e0:	mov	x29, sp
  4023e4:	str	x0, [sp, #40]
  4023e8:	str	x1, [sp, #32]
  4023ec:	str	x2, [sp, #24]
  4023f0:	ldr	x0, [sp, #40]
  4023f4:	cmp	x0, #0x0
  4023f8:	cset	w0, eq  // eq = none
  4023fc:	and	w0, w0, #0xff
  402400:	and	x0, x0, #0xff
  402404:	cmp	x0, #0x0
  402408:	b.eq	402434 <connection_create_pipes+0x58>  // b.none
  40240c:	adrp	x0, 405000 <run+0x58>
  402410:	add	x1, x0, #0x58b
  402414:	adrp	x0, 405000 <run+0x58>
  402418:	add	x4, x0, #0xda8
  40241c:	mov	w3, #0x5b                  	// #91
  402420:	mov	x2, x1
  402424:	adrp	x0, 405000 <run+0x58>
  402428:	add	x1, x0, #0x5b0
  40242c:	mov	w0, #0x0                   	// #0
  402430:	bl	401af0 <log_assert_failed_realm@plt>
  402434:	ldr	x0, [sp, #32]
  402438:	cmp	x0, #0x0
  40243c:	cset	w0, eq  // eq = none
  402440:	and	w0, w0, #0xff
  402444:	and	x0, x0, #0xff
  402448:	cmp	x0, #0x0
  40244c:	b.eq	402478 <connection_create_pipes+0x9c>  // b.none
  402450:	adrp	x0, 405000 <run+0x58>
  402454:	add	x1, x0, #0x58b
  402458:	adrp	x0, 405000 <run+0x58>
  40245c:	add	x4, x0, #0xda8
  402460:	mov	w3, #0x5c                  	// #92
  402464:	mov	x2, x1
  402468:	adrp	x0, 405000 <run+0x58>
  40246c:	add	x1, x0, #0x5c0
  402470:	mov	w0, #0x0                   	// #0
  402474:	bl	401af0 <log_assert_failed_realm@plt>
  402478:	ldr	x0, [sp, #24]
  40247c:	cmp	x0, #0x0
  402480:	cset	w0, eq  // eq = none
  402484:	and	w0, w0, #0xff
  402488:	and	x0, x0, #0xff
  40248c:	cmp	x0, #0x0
  402490:	b.eq	4024bc <connection_create_pipes+0xe0>  // b.none
  402494:	adrp	x0, 405000 <run+0x58>
  402498:	add	x1, x0, #0x58b
  40249c:	adrp	x0, 405000 <run+0x58>
  4024a0:	add	x4, x0, #0xda8
  4024a4:	mov	w3, #0x5d                  	// #93
  4024a8:	mov	x2, x1
  4024ac:	adrp	x0, 405000 <run+0x58>
  4024b0:	add	x1, x0, #0x5c8
  4024b4:	mov	w0, #0x0                   	// #0
  4024b8:	bl	401af0 <log_assert_failed_realm@plt>
  4024bc:	ldr	x0, [sp, #32]
  4024c0:	ldr	w0, [x0]
  4024c4:	cmp	w0, #0x0
  4024c8:	b.lt	4024d4 <connection_create_pipes+0xf8>  // b.tstop
  4024cc:	mov	w0, #0x0                   	// #0
  4024d0:	b	402694 <connection_create_pipes+0x2b8>
  4024d4:	mov	w1, #0x800                 	// #2048
  4024d8:	movk	w1, #0x8, lsl #16
  4024dc:	ldr	x0, [sp, #32]
  4024e0:	bl	401c50 <pipe2@plt>
  4024e4:	str	w0, [sp, #52]
  4024e8:	ldr	w0, [sp, #52]
  4024ec:	cmp	w0, #0x0
  4024f0:	b.ge	402580 <connection_create_pipes+0x1a4>  // b.tcont
  4024f4:	mov	w0, #0x3                   	// #3
  4024f8:	str	w0, [sp, #68]
  4024fc:	bl	401b70 <__errno_location@plt>
  402500:	ldr	w0, [x0]
  402504:	str	w0, [sp, #72]
  402508:	str	wzr, [sp, #76]
  40250c:	ldr	w0, [sp, #76]
  402510:	bl	401d50 <log_get_max_level_realm@plt>
  402514:	mov	w1, w0
  402518:	ldr	w0, [sp, #68]
  40251c:	and	w0, w0, #0x7
  402520:	cmp	w1, w0
  402524:	b.lt	402568 <connection_create_pipes+0x18c>  // b.tstop
  402528:	ldr	w0, [sp, #76]
  40252c:	lsl	w1, w0, #10
  402530:	ldr	w0, [sp, #68]
  402534:	orr	w6, w1, w0
  402538:	adrp	x0, 405000 <run+0x58>
  40253c:	add	x1, x0, #0x58b
  402540:	adrp	x0, 405000 <run+0x58>
  402544:	add	x5, x0, #0x5d0
  402548:	adrp	x0, 405000 <run+0x58>
  40254c:	add	x4, x0, #0xdc0
  402550:	mov	w3, #0x64                  	// #100
  402554:	mov	x2, x1
  402558:	ldr	w1, [sp, #72]
  40255c:	mov	w0, w6
  402560:	bl	401c40 <log_internal_realm@plt>
  402564:	b	402694 <connection_create_pipes+0x2b8>
  402568:	ldr	w0, [sp, #72]
  40256c:	cmp	w0, #0x0
  402570:	cneg	w0, w0, lt  // lt = tstop
  402574:	and	w0, w0, #0xff
  402578:	neg	w0, w0
  40257c:	b	402694 <connection_create_pipes+0x2b8>
  402580:	ldr	x0, [sp, #32]
  402584:	ldr	w0, [x0]
  402588:	mov	w2, #0x40000               	// #262144
  40258c:	mov	w1, #0x407                 	// #1031
  402590:	bl	401bb0 <fcntl64@plt>
  402594:	ldr	x0, [sp, #32]
  402598:	ldr	w0, [x0]
  40259c:	mov	w1, #0x408                 	// #1032
  4025a0:	bl	401bb0 <fcntl64@plt>
  4025a4:	str	w0, [sp, #52]
  4025a8:	ldr	w0, [sp, #52]
  4025ac:	cmp	w0, #0x0
  4025b0:	b.ge	402640 <connection_create_pipes+0x264>  // b.tcont
  4025b4:	mov	w0, #0x3                   	// #3
  4025b8:	str	w0, [sp, #56]
  4025bc:	bl	401b70 <__errno_location@plt>
  4025c0:	ldr	w0, [x0]
  4025c4:	str	w0, [sp, #60]
  4025c8:	str	wzr, [sp, #64]
  4025cc:	ldr	w0, [sp, #64]
  4025d0:	bl	401d50 <log_get_max_level_realm@plt>
  4025d4:	mov	w1, w0
  4025d8:	ldr	w0, [sp, #56]
  4025dc:	and	w0, w0, #0x7
  4025e0:	cmp	w1, w0
  4025e4:	b.lt	402628 <connection_create_pipes+0x24c>  // b.tstop
  4025e8:	ldr	w0, [sp, #64]
  4025ec:	lsl	w1, w0, #10
  4025f0:	ldr	w0, [sp, #56]
  4025f4:	orr	w6, w1, w0
  4025f8:	adrp	x0, 405000 <run+0x58>
  4025fc:	add	x1, x0, #0x58b
  402600:	adrp	x0, 405000 <run+0x58>
  402604:	add	x5, x0, #0x5f8
  402608:	adrp	x0, 405000 <run+0x58>
  40260c:	add	x4, x0, #0xdc0
  402610:	mov	w3, #0x6a                  	// #106
  402614:	mov	x2, x1
  402618:	ldr	w1, [sp, #60]
  40261c:	mov	w0, w6
  402620:	bl	401c40 <log_internal_realm@plt>
  402624:	b	402694 <connection_create_pipes+0x2b8>
  402628:	ldr	w0, [sp, #60]
  40262c:	cmp	w0, #0x0
  402630:	cneg	w0, w0, lt  // lt = tstop
  402634:	and	w0, w0, #0xff
  402638:	neg	w0, w0
  40263c:	b	402694 <connection_create_pipes+0x2b8>
  402640:	ldr	w0, [sp, #52]
  402644:	cmp	w0, #0x0
  402648:	cset	w0, le
  40264c:	and	w0, w0, #0xff
  402650:	and	x0, x0, #0xff
  402654:	cmp	x0, #0x0
  402658:	b.eq	402684 <connection_create_pipes+0x2a8>  // b.none
  40265c:	adrp	x0, 405000 <run+0x58>
  402660:	add	x1, x0, #0x58b
  402664:	adrp	x0, 405000 <run+0x58>
  402668:	add	x4, x0, #0xda8
  40266c:	mov	w3, #0x6c                  	// #108
  402670:	mov	x2, x1
  402674:	adrp	x0, 405000 <run+0x58>
  402678:	add	x1, x0, #0x620
  40267c:	mov	w0, #0x0                   	// #0
  402680:	bl	401af0 <log_assert_failed_realm@plt>
  402684:	ldrsw	x1, [sp, #52]
  402688:	ldr	x0, [sp, #24]
  40268c:	str	x1, [x0]
  402690:	mov	w0, #0x0                   	// #0
  402694:	ldp	x29, x30, [sp], #80
  402698:	ret

000000000040269c <connection_shovel>:
  40269c:	stp	x29, x30, [sp, #-128]!
  4026a0:	mov	x29, sp
  4026a4:	str	x0, [sp, #72]
  4026a8:	str	x1, [sp, #64]
  4026ac:	str	x2, [sp, #56]
  4026b0:	str	x3, [sp, #48]
  4026b4:	str	x4, [sp, #40]
  4026b8:	str	x5, [sp, #32]
  4026bc:	str	x6, [sp, #24]
  4026c0:	str	x7, [sp, #16]
  4026c4:	ldr	x0, [sp, #72]
  4026c8:	cmp	x0, #0x0
  4026cc:	cset	w0, eq  // eq = none
  4026d0:	and	w0, w0, #0xff
  4026d4:	and	x0, x0, #0xff
  4026d8:	cmp	x0, #0x0
  4026dc:	b.eq	402708 <connection_shovel+0x6c>  // b.none
  4026e0:	adrp	x0, 405000 <run+0x58>
  4026e4:	add	x1, x0, #0x58b
  4026e8:	adrp	x0, 405000 <run+0x58>
  4026ec:	add	x4, x0, #0xdd8
  4026f0:	mov	w3, #0x7a                  	// #122
  4026f4:	mov	x2, x1
  4026f8:	adrp	x0, 405000 <run+0x58>
  4026fc:	add	x1, x0, #0x5b0
  402700:	mov	w0, #0x0                   	// #0
  402704:	bl	401af0 <log_assert_failed_realm@plt>
  402708:	ldr	x0, [sp, #64]
  40270c:	cmp	x0, #0x0
  402710:	cset	w0, eq  // eq = none
  402714:	and	w0, w0, #0xff
  402718:	and	x0, x0, #0xff
  40271c:	cmp	x0, #0x0
  402720:	b.eq	40274c <connection_shovel+0xb0>  // b.none
  402724:	adrp	x0, 405000 <run+0x58>
  402728:	add	x1, x0, #0x58b
  40272c:	adrp	x0, 405000 <run+0x58>
  402730:	add	x4, x0, #0xdd8
  402734:	mov	w3, #0x7b                  	// #123
  402738:	mov	x2, x1
  40273c:	adrp	x0, 405000 <run+0x58>
  402740:	add	x1, x0, #0x628
  402744:	mov	w0, #0x0                   	// #0
  402748:	bl	401af0 <log_assert_failed_realm@plt>
  40274c:	ldr	x0, [sp, #56]
  402750:	cmp	x0, #0x0
  402754:	cset	w0, eq  // eq = none
  402758:	and	w0, w0, #0xff
  40275c:	and	x0, x0, #0xff
  402760:	cmp	x0, #0x0
  402764:	b.eq	402790 <connection_shovel+0xf4>  // b.none
  402768:	adrp	x0, 405000 <run+0x58>
  40276c:	add	x1, x0, #0x58b
  402770:	adrp	x0, 405000 <run+0x58>
  402774:	add	x4, x0, #0xdd8
  402778:	mov	w3, #0x7c                  	// #124
  40277c:	mov	x2, x1
  402780:	adrp	x0, 405000 <run+0x58>
  402784:	add	x1, x0, #0x5c0
  402788:	mov	w0, #0x0                   	// #0
  40278c:	bl	401af0 <log_assert_failed_realm@plt>
  402790:	ldr	x0, [sp, #56]
  402794:	ldr	w0, [x0]
  402798:	lsr	w0, w0, #31
  40279c:	and	w0, w0, #0xff
  4027a0:	and	x0, x0, #0xff
  4027a4:	cmp	x0, #0x0
  4027a8:	b.eq	4027d4 <connection_shovel+0x138>  // b.none
  4027ac:	adrp	x0, 405000 <run+0x58>
  4027b0:	add	x1, x0, #0x58b
  4027b4:	adrp	x0, 405000 <run+0x58>
  4027b8:	add	x4, x0, #0xdd8
  4027bc:	mov	w3, #0x7d                  	// #125
  4027c0:	mov	x2, x1
  4027c4:	adrp	x0, 405000 <run+0x58>
  4027c8:	add	x1, x0, #0x630
  4027cc:	mov	w0, #0x0                   	// #0
  4027d0:	bl	401af0 <log_assert_failed_realm@plt>
  4027d4:	ldr	x0, [sp, #56]
  4027d8:	add	x0, x0, #0x4
  4027dc:	ldr	w0, [x0]
  4027e0:	lsr	w0, w0, #31
  4027e4:	and	w0, w0, #0xff
  4027e8:	and	x0, x0, #0xff
  4027ec:	cmp	x0, #0x0
  4027f0:	b.eq	40281c <connection_shovel+0x180>  // b.none
  4027f4:	adrp	x0, 405000 <run+0x58>
  4027f8:	add	x1, x0, #0x58b
  4027fc:	adrp	x0, 405000 <run+0x58>
  402800:	add	x4, x0, #0xdd8
  402804:	mov	w3, #0x7e                  	// #126
  402808:	mov	x2, x1
  40280c:	adrp	x0, 405000 <run+0x58>
  402810:	add	x1, x0, #0x640
  402814:	mov	w0, #0x0                   	// #0
  402818:	bl	401af0 <log_assert_failed_realm@plt>
  40281c:	ldr	x0, [sp, #48]
  402820:	cmp	x0, #0x0
  402824:	cset	w0, eq  // eq = none
  402828:	and	w0, w0, #0xff
  40282c:	and	x0, x0, #0xff
  402830:	cmp	x0, #0x0
  402834:	b.eq	402860 <connection_shovel+0x1c4>  // b.none
  402838:	adrp	x0, 405000 <run+0x58>
  40283c:	add	x1, x0, #0x58b
  402840:	adrp	x0, 405000 <run+0x58>
  402844:	add	x4, x0, #0xdd8
  402848:	mov	w3, #0x7f                  	// #127
  40284c:	mov	x2, x1
  402850:	adrp	x0, 405000 <run+0x58>
  402854:	add	x1, x0, #0x650
  402858:	mov	w0, #0x0                   	// #0
  40285c:	bl	401af0 <log_assert_failed_realm@plt>
  402860:	ldr	x0, [sp, #40]
  402864:	cmp	x0, #0x0
  402868:	cset	w0, eq  // eq = none
  40286c:	and	w0, w0, #0xff
  402870:	and	x0, x0, #0xff
  402874:	cmp	x0, #0x0
  402878:	b.eq	4028a4 <connection_shovel+0x208>  // b.none
  40287c:	adrp	x0, 405000 <run+0x58>
  402880:	add	x1, x0, #0x58b
  402884:	adrp	x0, 405000 <run+0x58>
  402888:	add	x4, x0, #0xdd8
  40288c:	mov	w3, #0x80                  	// #128
  402890:	mov	x2, x1
  402894:	adrp	x0, 405000 <run+0x58>
  402898:	add	x1, x0, #0x658
  40289c:	mov	w0, #0x0                   	// #0
  4028a0:	bl	401af0 <log_assert_failed_realm@plt>
  4028a4:	ldr	x0, [sp, #32]
  4028a8:	cmp	x0, #0x0
  4028ac:	cset	w0, eq  // eq = none
  4028b0:	and	w0, w0, #0xff
  4028b4:	and	x0, x0, #0xff
  4028b8:	cmp	x0, #0x0
  4028bc:	b.eq	4028e8 <connection_shovel+0x24c>  // b.none
  4028c0:	adrp	x0, 405000 <run+0x58>
  4028c4:	add	x1, x0, #0x58b
  4028c8:	adrp	x0, 405000 <run+0x58>
  4028cc:	add	x4, x0, #0xdd8
  4028d0:	mov	w3, #0x81                  	// #129
  4028d4:	mov	x2, x1
  4028d8:	adrp	x0, 405000 <run+0x58>
  4028dc:	add	x1, x0, #0x5c8
  4028e0:	mov	w0, #0x0                   	// #0
  4028e4:	bl	401af0 <log_assert_failed_realm@plt>
  4028e8:	ldr	x0, [sp, #24]
  4028ec:	cmp	x0, #0x0
  4028f0:	cset	w0, eq  // eq = none
  4028f4:	and	w0, w0, #0xff
  4028f8:	and	x0, x0, #0xff
  4028fc:	cmp	x0, #0x0
  402900:	b.eq	40292c <connection_shovel+0x290>  // b.none
  402904:	adrp	x0, 405000 <run+0x58>
  402908:	add	x1, x0, #0x58b
  40290c:	adrp	x0, 405000 <run+0x58>
  402910:	add	x4, x0, #0xdd8
  402914:	mov	w3, #0x82                  	// #130
  402918:	mov	x2, x1
  40291c:	adrp	x0, 405000 <run+0x58>
  402920:	add	x1, x0, #0x660
  402924:	mov	w0, #0x0                   	// #0
  402928:	bl	401af0 <log_assert_failed_realm@plt>
  40292c:	ldr	x0, [sp, #16]
  402930:	cmp	x0, #0x0
  402934:	cset	w0, eq  // eq = none
  402938:	and	w0, w0, #0xff
  40293c:	and	x0, x0, #0xff
  402940:	cmp	x0, #0x0
  402944:	b.eq	402970 <connection_shovel+0x2d4>  // b.none
  402948:	adrp	x0, 405000 <run+0x58>
  40294c:	add	x1, x0, #0x58b
  402950:	adrp	x0, 405000 <run+0x58>
  402954:	add	x4, x0, #0xdd8
  402958:	mov	w3, #0x83                  	// #131
  40295c:	mov	x2, x1
  402960:	adrp	x0, 405000 <run+0x58>
  402964:	add	x1, x0, #0x670
  402968:	mov	w0, #0x0                   	// #0
  40296c:	bl	401af0 <log_assert_failed_realm@plt>
  402970:	strb	wzr, [sp, #93]
  402974:	ldr	x0, [sp, #40]
  402978:	ldr	x1, [x0]
  40297c:	ldr	x0, [sp, #32]
  402980:	ldr	x0, [x0]
  402984:	cmp	x1, x0
  402988:	b.cs	402b40 <connection_shovel+0x4a4>  // b.hs, b.nlast
  40298c:	ldr	x0, [sp, #64]
  402990:	ldr	w0, [x0]
  402994:	cmp	w0, #0x0
  402998:	b.lt	402b40 <connection_shovel+0x4a4>  // b.tstop
  40299c:	ldr	x0, [sp, #48]
  4029a0:	ldr	w0, [x0]
  4029a4:	cmp	w0, #0x0
  4029a8:	b.lt	402b40 <connection_shovel+0x4a4>  // b.tstop
  4029ac:	ldr	x0, [sp, #64]
  4029b0:	ldr	w6, [x0]
  4029b4:	ldr	x0, [sp, #56]
  4029b8:	add	x0, x0, #0x4
  4029bc:	ldr	w2, [x0]
  4029c0:	ldr	x0, [sp, #32]
  4029c4:	ldr	x1, [x0]
  4029c8:	ldr	x0, [sp, #40]
  4029cc:	ldr	x0, [x0]
  4029d0:	sub	x0, x1, x0
  4029d4:	mov	w5, #0x3                   	// #3
  4029d8:	mov	x4, x0
  4029dc:	mov	x3, #0x0                   	// #0
  4029e0:	mov	x1, #0x0                   	// #0
  4029e4:	mov	w0, w6
  4029e8:	bl	401a40 <splice@plt>
  4029ec:	str	x0, [sp, #120]
  4029f0:	ldr	x0, [sp, #120]
  4029f4:	cmp	x0, #0x0
  4029f8:	b.le	402a20 <connection_shovel+0x384>
  4029fc:	ldr	x0, [sp, #40]
  402a00:	ldr	x1, [x0]
  402a04:	ldr	x0, [sp, #120]
  402a08:	add	x1, x1, x0
  402a0c:	ldr	x0, [sp, #40]
  402a10:	str	x1, [x0]
  402a14:	mov	w0, #0x1                   	// #1
  402a18:	strb	w0, [sp, #93]
  402a1c:	b	402b40 <connection_shovel+0x4a4>
  402a20:	ldr	x0, [sp, #120]
  402a24:	cmp	x0, #0x0
  402a28:	b.eq	402a44 <connection_shovel+0x3a8>  // b.none
  402a2c:	bl	401b70 <__errno_location@plt>
  402a30:	ldr	w0, [x0]
  402a34:	bl	401f8c <ERRNO_IS_DISCONNECT>
  402a38:	and	w0, w0, #0xff
  402a3c:	cmp	w0, #0x0
  402a40:	b.eq	402a78 <connection_shovel+0x3dc>  // b.none
  402a44:	ldr	x0, [sp, #24]
  402a48:	ldr	x0, [x0]
  402a4c:	bl	401ab0 <sd_event_source_unref@plt>
  402a50:	mov	x1, x0
  402a54:	ldr	x0, [sp, #24]
  402a58:	str	x1, [x0]
  402a5c:	ldr	x0, [sp, #64]
  402a60:	ldr	w0, [x0]
  402a64:	bl	401ac0 <safe_close@plt>
  402a68:	mov	w1, w0
  402a6c:	ldr	x0, [sp, #64]
  402a70:	str	w1, [x0]
  402a74:	b	402b40 <connection_shovel+0x4a4>
  402a78:	strb	wzr, [sp, #94]
  402a7c:	bl	401b70 <__errno_location@plt>
  402a80:	ldr	w0, [x0]
  402a84:	cmp	w0, #0x4
  402a88:	b.eq	402a94 <connection_shovel+0x3f8>  // b.none
  402a8c:	cmp	w0, #0xb
  402a90:	b.ne	402a9c <connection_shovel+0x400>  // b.any
  402a94:	mov	w0, #0x1                   	// #1
  402a98:	strb	w0, [sp, #94]
  402a9c:	nop
  402aa0:	ldrb	w0, [sp, #94]
  402aa4:	eor	w0, w0, #0x1
  402aa8:	and	w0, w0, #0xff
  402aac:	cmp	w0, #0x0
  402ab0:	b.eq	402b40 <connection_shovel+0x4a4>  // b.none
  402ab4:	mov	w0, #0x3                   	// #3
  402ab8:	str	w0, [sp, #96]
  402abc:	bl	401b70 <__errno_location@plt>
  402ac0:	ldr	w0, [x0]
  402ac4:	str	w0, [sp, #100]
  402ac8:	str	wzr, [sp, #104]
  402acc:	ldr	w0, [sp, #104]
  402ad0:	bl	401d50 <log_get_max_level_realm@plt>
  402ad4:	mov	w1, w0
  402ad8:	ldr	w0, [sp, #96]
  402adc:	and	w0, w0, #0x7
  402ae0:	cmp	w1, w0
  402ae4:	b.lt	402b28 <connection_shovel+0x48c>  // b.tstop
  402ae8:	ldr	w0, [sp, #104]
  402aec:	lsl	w1, w0, #10
  402af0:	ldr	w0, [sp, #96]
  402af4:	orr	w6, w1, w0
  402af8:	adrp	x0, 405000 <run+0x58>
  402afc:	add	x1, x0, #0x58b
  402b00:	adrp	x0, 405000 <run+0x58>
  402b04:	add	x5, x0, #0x680
  402b08:	adrp	x0, 405000 <run+0x58>
  402b0c:	add	x4, x0, #0xdf0
  402b10:	mov	w3, #0x93                  	// #147
  402b14:	mov	x2, x1
  402b18:	ldr	w1, [sp, #100]
  402b1c:	mov	w0, w6
  402b20:	bl	401c40 <log_internal_realm@plt>
  402b24:	b	402cf8 <connection_shovel+0x65c>
  402b28:	ldr	w0, [sp, #100]
  402b2c:	cmp	w0, #0x0
  402b30:	cneg	w0, w0, lt  // lt = tstop
  402b34:	and	w0, w0, #0xff
  402b38:	neg	w0, w0
  402b3c:	b	402cf8 <connection_shovel+0x65c>
  402b40:	ldr	x0, [sp, #40]
  402b44:	ldr	x0, [x0]
  402b48:	cmp	x0, #0x0
  402b4c:	b.eq	402ce8 <connection_shovel+0x64c>  // b.none
  402b50:	ldr	x0, [sp, #48]
  402b54:	ldr	w0, [x0]
  402b58:	cmp	w0, #0x0
  402b5c:	b.lt	402ce8 <connection_shovel+0x64c>  // b.tstop
  402b60:	ldr	x0, [sp, #56]
  402b64:	ldr	w6, [x0]
  402b68:	ldr	x0, [sp, #48]
  402b6c:	ldr	w1, [x0]
  402b70:	ldr	x0, [sp, #40]
  402b74:	ldr	x0, [x0]
  402b78:	mov	w5, #0x3                   	// #3
  402b7c:	mov	x4, x0
  402b80:	mov	x3, #0x0                   	// #0
  402b84:	mov	w2, w1
  402b88:	mov	x1, #0x0                   	// #0
  402b8c:	mov	w0, w6
  402b90:	bl	401a40 <splice@plt>
  402b94:	str	x0, [sp, #120]
  402b98:	ldr	x0, [sp, #120]
  402b9c:	cmp	x0, #0x0
  402ba0:	b.le	402bc8 <connection_shovel+0x52c>
  402ba4:	ldr	x0, [sp, #40]
  402ba8:	ldr	x1, [x0]
  402bac:	ldr	x0, [sp, #120]
  402bb0:	sub	x1, x1, x0
  402bb4:	ldr	x0, [sp, #40]
  402bb8:	str	x1, [x0]
  402bbc:	mov	w0, #0x1                   	// #1
  402bc0:	strb	w0, [sp, #93]
  402bc4:	b	402ce8 <connection_shovel+0x64c>
  402bc8:	ldr	x0, [sp, #120]
  402bcc:	cmp	x0, #0x0
  402bd0:	b.eq	402bec <connection_shovel+0x550>  // b.none
  402bd4:	bl	401b70 <__errno_location@plt>
  402bd8:	ldr	w0, [x0]
  402bdc:	bl	401f8c <ERRNO_IS_DISCONNECT>
  402be0:	and	w0, w0, #0xff
  402be4:	cmp	w0, #0x0
  402be8:	b.eq	402c20 <connection_shovel+0x584>  // b.none
  402bec:	ldr	x0, [sp, #16]
  402bf0:	ldr	x0, [x0]
  402bf4:	bl	401ab0 <sd_event_source_unref@plt>
  402bf8:	mov	x1, x0
  402bfc:	ldr	x0, [sp, #16]
  402c00:	str	x1, [x0]
  402c04:	ldr	x0, [sp, #48]
  402c08:	ldr	w0, [x0]
  402c0c:	bl	401ac0 <safe_close@plt>
  402c10:	mov	w1, w0
  402c14:	ldr	x0, [sp, #48]
  402c18:	str	w1, [x0]
  402c1c:	b	402ce8 <connection_shovel+0x64c>
  402c20:	strb	wzr, [sp, #95]
  402c24:	bl	401b70 <__errno_location@plt>
  402c28:	ldr	w0, [x0]
  402c2c:	cmp	w0, #0x4
  402c30:	b.eq	402c3c <connection_shovel+0x5a0>  // b.none
  402c34:	cmp	w0, #0xb
  402c38:	b.ne	402c44 <connection_shovel+0x5a8>  // b.any
  402c3c:	mov	w0, #0x1                   	// #1
  402c40:	strb	w0, [sp, #95]
  402c44:	nop
  402c48:	ldrb	w0, [sp, #95]
  402c4c:	eor	w0, w0, #0x1
  402c50:	and	w0, w0, #0xff
  402c54:	cmp	w0, #0x0
  402c58:	b.eq	402ce8 <connection_shovel+0x64c>  // b.none
  402c5c:	mov	w0, #0x3                   	// #3
  402c60:	str	w0, [sp, #108]
  402c64:	bl	401b70 <__errno_location@plt>
  402c68:	ldr	w0, [x0]
  402c6c:	str	w0, [sp, #112]
  402c70:	str	wzr, [sp, #116]
  402c74:	ldr	w0, [sp, #116]
  402c78:	bl	401d50 <log_get_max_level_realm@plt>
  402c7c:	mov	w1, w0
  402c80:	ldr	w0, [sp, #108]
  402c84:	and	w0, w0, #0x7
  402c88:	cmp	w1, w0
  402c8c:	b.lt	402cd0 <connection_shovel+0x634>  // b.tstop
  402c90:	ldr	w0, [sp, #116]
  402c94:	lsl	w1, w0, #10
  402c98:	ldr	w0, [sp, #108]
  402c9c:	orr	w6, w1, w0
  402ca0:	adrp	x0, 405000 <run+0x58>
  402ca4:	add	x1, x0, #0x58b
  402ca8:	adrp	x0, 405000 <run+0x58>
  402cac:	add	x5, x0, #0x680
  402cb0:	adrp	x0, 405000 <run+0x58>
  402cb4:	add	x4, x0, #0xdf0
  402cb8:	mov	w3, #0x9f                  	// #159
  402cbc:	mov	x2, x1
  402cc0:	ldr	w1, [sp, #112]
  402cc4:	mov	w0, w6
  402cc8:	bl	401c40 <log_internal_realm@plt>
  402ccc:	b	402cf8 <connection_shovel+0x65c>
  402cd0:	ldr	w0, [sp, #112]
  402cd4:	cmp	w0, #0x0
  402cd8:	cneg	w0, w0, lt  // lt = tstop
  402cdc:	and	w0, w0, #0xff
  402ce0:	neg	w0, w0
  402ce4:	b	402cf8 <connection_shovel+0x65c>
  402ce8:	ldrb	w0, [sp, #93]
  402cec:	cmp	w0, #0x0
  402cf0:	b.ne	402970 <connection_shovel+0x2d4>  // b.any
  402cf4:	mov	w0, #0x0                   	// #0
  402cf8:	ldp	x29, x30, [sp], #128
  402cfc:	ret

0000000000402d00 <traffic_cb>:
  402d00:	stp	x29, x30, [sp, #-64]!
  402d04:	mov	x29, sp
  402d08:	str	x0, [sp, #40]
  402d0c:	str	w1, [sp, #36]
  402d10:	str	w2, [sp, #32]
  402d14:	str	x3, [sp, #24]
  402d18:	ldr	x0, [sp, #24]
  402d1c:	str	x0, [sp, #56]
  402d20:	ldr	x0, [sp, #40]
  402d24:	cmp	x0, #0x0
  402d28:	cset	w0, eq  // eq = none
  402d2c:	and	w0, w0, #0xff
  402d30:	and	x0, x0, #0xff
  402d34:	cmp	x0, #0x0
  402d38:	b.eq	402d64 <traffic_cb+0x64>  // b.none
  402d3c:	adrp	x0, 405000 <run+0x58>
  402d40:	add	x1, x0, #0x58b
  402d44:	adrp	x0, 405000 <run+0x58>
  402d48:	add	x4, x0, #0xe08
  402d4c:	mov	w3, #0xac                  	// #172
  402d50:	mov	x2, x1
  402d54:	adrp	x0, 405000 <run+0x58>
  402d58:	add	x1, x0, #0x698
  402d5c:	mov	w0, #0x0                   	// #0
  402d60:	bl	401af0 <log_assert_failed_realm@plt>
  402d64:	ldr	w0, [sp, #36]
  402d68:	lsr	w0, w0, #31
  402d6c:	and	w0, w0, #0xff
  402d70:	and	x0, x0, #0xff
  402d74:	cmp	x0, #0x0
  402d78:	b.eq	402da4 <traffic_cb+0xa4>  // b.none
  402d7c:	adrp	x0, 405000 <run+0x58>
  402d80:	add	x1, x0, #0x58b
  402d84:	adrp	x0, 405000 <run+0x58>
  402d88:	add	x4, x0, #0xe08
  402d8c:	mov	w3, #0xad                  	// #173
  402d90:	mov	x2, x1
  402d94:	adrp	x0, 405000 <run+0x58>
  402d98:	add	x1, x0, #0x6a0
  402d9c:	mov	w0, #0x0                   	// #0
  402da0:	bl	401af0 <log_assert_failed_realm@plt>
  402da4:	ldr	x0, [sp, #56]
  402da8:	cmp	x0, #0x0
  402dac:	cset	w0, eq  // eq = none
  402db0:	and	w0, w0, #0xff
  402db4:	and	x0, x0, #0xff
  402db8:	cmp	x0, #0x0
  402dbc:	b.eq	402de8 <traffic_cb+0xe8>  // b.none
  402dc0:	adrp	x0, 405000 <run+0x58>
  402dc4:	add	x1, x0, #0x58b
  402dc8:	adrp	x0, 405000 <run+0x58>
  402dcc:	add	x4, x0, #0xe08
  402dd0:	mov	w3, #0xae                  	// #174
  402dd4:	mov	x2, x1
  402dd8:	adrp	x0, 405000 <run+0x58>
  402ddc:	add	x1, x0, #0x5b0
  402de0:	mov	w0, #0x0                   	// #0
  402de4:	bl	401af0 <log_assert_failed_realm@plt>
  402de8:	ldr	x0, [sp, #56]
  402dec:	add	x1, x0, #0x8
  402df0:	ldr	x0, [sp, #56]
  402df4:	add	x2, x0, #0x10
  402df8:	ldr	x0, [sp, #56]
  402dfc:	add	x3, x0, #0xc
  402e00:	ldr	x0, [sp, #56]
  402e04:	add	x4, x0, #0x20
  402e08:	ldr	x0, [sp, #56]
  402e0c:	add	x5, x0, #0x30
  402e10:	ldr	x0, [sp, #56]
  402e14:	add	x6, x0, #0x40
  402e18:	ldr	x0, [sp, #56]
  402e1c:	add	x0, x0, #0x48
  402e20:	mov	x7, x0
  402e24:	ldr	x0, [sp, #56]
  402e28:	bl	40269c <connection_shovel>
  402e2c:	str	w0, [sp, #52]
  402e30:	ldr	w0, [sp, #52]
  402e34:	cmp	w0, #0x0
  402e38:	b.lt	402f10 <traffic_cb+0x210>  // b.tstop
  402e3c:	ldr	x0, [sp, #56]
  402e40:	add	x1, x0, #0xc
  402e44:	ldr	x0, [sp, #56]
  402e48:	add	x2, x0, #0x18
  402e4c:	ldr	x0, [sp, #56]
  402e50:	add	x3, x0, #0x8
  402e54:	ldr	x0, [sp, #56]
  402e58:	add	x4, x0, #0x28
  402e5c:	ldr	x0, [sp, #56]
  402e60:	add	x5, x0, #0x38
  402e64:	ldr	x0, [sp, #56]
  402e68:	add	x6, x0, #0x48
  402e6c:	ldr	x0, [sp, #56]
  402e70:	add	x0, x0, #0x40
  402e74:	mov	x7, x0
  402e78:	ldr	x0, [sp, #56]
  402e7c:	bl	40269c <connection_shovel>
  402e80:	str	w0, [sp, #52]
  402e84:	ldr	w0, [sp, #52]
  402e88:	cmp	w0, #0x0
  402e8c:	b.lt	402f18 <traffic_cb+0x218>  // b.tstop
  402e90:	ldr	x0, [sp, #56]
  402e94:	ldr	w0, [x0, #8]
  402e98:	cmn	w0, #0x1
  402e9c:	b.ne	402eb0 <traffic_cb+0x1b0>  // b.any
  402ea0:	ldr	x0, [sp, #56]
  402ea4:	ldr	w0, [x0, #12]
  402ea8:	cmn	w0, #0x1
  402eac:	b.eq	402f20 <traffic_cb+0x220>  // b.none
  402eb0:	ldr	x0, [sp, #56]
  402eb4:	ldr	w0, [x0, #8]
  402eb8:	cmn	w0, #0x1
  402ebc:	b.ne	402ed0 <traffic_cb+0x1d0>  // b.any
  402ec0:	ldr	x0, [sp, #56]
  402ec4:	ldr	x0, [x0, #32]
  402ec8:	cmp	x0, #0x0
  402ecc:	b.eq	402f28 <traffic_cb+0x228>  // b.none
  402ed0:	ldr	x0, [sp, #56]
  402ed4:	ldr	w0, [x0, #12]
  402ed8:	cmn	w0, #0x1
  402edc:	b.ne	402ef0 <traffic_cb+0x1f0>  // b.any
  402ee0:	ldr	x0, [sp, #56]
  402ee4:	ldr	x0, [x0, #40]
  402ee8:	cmp	x0, #0x0
  402eec:	b.eq	402f30 <traffic_cb+0x230>  // b.none
  402ef0:	ldr	x0, [sp, #56]
  402ef4:	bl	402f50 <connection_enable_event_sources>
  402ef8:	str	w0, [sp, #52]
  402efc:	ldr	w0, [sp, #52]
  402f00:	cmp	w0, #0x0
  402f04:	b.lt	402f38 <traffic_cb+0x238>  // b.tstop
  402f08:	mov	w0, #0x1                   	// #1
  402f0c:	b	402f48 <traffic_cb+0x248>
  402f10:	nop
  402f14:	b	402f3c <traffic_cb+0x23c>
  402f18:	nop
  402f1c:	b	402f3c <traffic_cb+0x23c>
  402f20:	nop
  402f24:	b	402f3c <traffic_cb+0x23c>
  402f28:	nop
  402f2c:	b	402f3c <traffic_cb+0x23c>
  402f30:	nop
  402f34:	b	402f3c <traffic_cb+0x23c>
  402f38:	nop
  402f3c:	ldr	x0, [sp, #56]
  402f40:	bl	402228 <connection_free>
  402f44:	mov	w0, #0x0                   	// #0
  402f48:	ldp	x29, x30, [sp], #64
  402f4c:	ret

0000000000402f50 <connection_enable_event_sources>:
  402f50:	stp	x29, x30, [sp, #-80]!
  402f54:	mov	x29, sp
  402f58:	str	x0, [sp, #24]
  402f5c:	str	wzr, [sp, #44]
  402f60:	str	wzr, [sp, #48]
  402f64:	ldr	x0, [sp, #24]
  402f68:	cmp	x0, #0x0
  402f6c:	cset	w0, eq  // eq = none
  402f70:	and	w0, w0, #0xff
  402f74:	and	x0, x0, #0xff
  402f78:	cmp	x0, #0x0
  402f7c:	b.eq	402fa8 <connection_enable_event_sources+0x58>  // b.none
  402f80:	adrp	x0, 405000 <run+0x58>
  402f84:	add	x1, x0, #0x58b
  402f88:	adrp	x0, 405000 <run+0x58>
  402f8c:	add	x4, x0, #0xe18
  402f90:	mov	w3, #0xd9                  	// #217
  402f94:	mov	x2, x1
  402f98:	adrp	x0, 405000 <run+0x58>
  402f9c:	add	x1, x0, #0x5b0
  402fa0:	mov	w0, #0x0                   	// #0
  402fa4:	bl	401af0 <log_assert_failed_realm@plt>
  402fa8:	ldr	x0, [sp, #24]
  402fac:	ldr	x0, [x0, #32]
  402fb0:	cmp	x0, #0x0
  402fb4:	b.eq	402fc4 <connection_enable_event_sources+0x74>  // b.none
  402fb8:	ldr	w0, [sp, #48]
  402fbc:	orr	w0, w0, #0x4
  402fc0:	str	w0, [sp, #48]
  402fc4:	ldr	x0, [sp, #24]
  402fc8:	ldr	x1, [x0, #32]
  402fcc:	ldr	x0, [sp, #24]
  402fd0:	ldr	x0, [x0, #48]
  402fd4:	cmp	x1, x0
  402fd8:	b.cs	402fe8 <connection_enable_event_sources+0x98>  // b.hs, b.nlast
  402fdc:	ldr	w0, [sp, #44]
  402fe0:	orr	w0, w0, #0x1
  402fe4:	str	w0, [sp, #44]
  402fe8:	ldr	x0, [sp, #24]
  402fec:	ldr	x0, [x0, #40]
  402ff0:	cmp	x0, #0x0
  402ff4:	b.eq	403004 <connection_enable_event_sources+0xb4>  // b.none
  402ff8:	ldr	w0, [sp, #44]
  402ffc:	orr	w0, w0, #0x4
  403000:	str	w0, [sp, #44]
  403004:	ldr	x0, [sp, #24]
  403008:	ldr	x1, [x0, #40]
  40300c:	ldr	x0, [sp, #24]
  403010:	ldr	x0, [x0, #56]
  403014:	cmp	x1, x0
  403018:	b.cs	403028 <connection_enable_event_sources+0xd8>  // b.hs, b.nlast
  40301c:	ldr	w0, [sp, #48]
  403020:	orr	w0, w0, #0x1
  403024:	str	w0, [sp, #48]
  403028:	ldr	x0, [sp, #24]
  40302c:	ldr	x0, [x0, #64]
  403030:	cmp	x0, #0x0
  403034:	b.eq	403050 <connection_enable_event_sources+0x100>  // b.none
  403038:	ldr	x0, [sp, #24]
  40303c:	ldr	x0, [x0, #64]
  403040:	ldr	w1, [sp, #44]
  403044:	bl	401aa0 <sd_event_source_set_io_events@plt>
  403048:	str	w0, [sp, #52]
  40304c:	b	4030a0 <connection_enable_event_sources+0x150>
  403050:	ldr	x0, [sp, #24]
  403054:	ldr	w0, [x0, #8]
  403058:	cmp	w0, #0x0
  40305c:	b.lt	40309c <connection_enable_event_sources+0x14c>  // b.tstop
  403060:	ldr	x0, [sp, #24]
  403064:	ldr	x0, [x0]
  403068:	ldr	x6, [x0]
  40306c:	ldr	x0, [sp, #24]
  403070:	add	x1, x0, #0x40
  403074:	ldr	x0, [sp, #24]
  403078:	ldr	w2, [x0, #8]
  40307c:	ldr	x5, [sp, #24]
  403080:	adrp	x0, 402000 <ERRNO_IS_DISCONNECT+0x74>
  403084:	add	x4, x0, #0xd00
  403088:	ldr	w3, [sp, #44]
  40308c:	mov	x0, x6
  403090:	bl	401c60 <sd_event_add_io@plt>
  403094:	str	w0, [sp, #52]
  403098:	b	4030a0 <connection_enable_event_sources+0x150>
  40309c:	str	wzr, [sp, #52]
  4030a0:	ldr	w0, [sp, #52]
  4030a4:	cmp	w0, #0x0
  4030a8:	b.ge	403134 <connection_enable_event_sources+0x1e4>  // b.tcont
  4030ac:	mov	w0, #0x3                   	// #3
  4030b0:	str	w0, [sp, #68]
  4030b4:	ldr	w0, [sp, #52]
  4030b8:	str	w0, [sp, #72]
  4030bc:	str	wzr, [sp, #76]
  4030c0:	ldr	w0, [sp, #76]
  4030c4:	bl	401d50 <log_get_max_level_realm@plt>
  4030c8:	mov	w1, w0
  4030cc:	ldr	w0, [sp, #68]
  4030d0:	and	w0, w0, #0x7
  4030d4:	cmp	w1, w0
  4030d8:	b.lt	40311c <connection_enable_event_sources+0x1cc>  // b.tstop
  4030dc:	ldr	w0, [sp, #76]
  4030e0:	lsl	w1, w0, #10
  4030e4:	ldr	w0, [sp, #68]
  4030e8:	orr	w6, w1, w0
  4030ec:	adrp	x0, 405000 <run+0x58>
  4030f0:	add	x1, x0, #0x58b
  4030f4:	adrp	x0, 405000 <run+0x58>
  4030f8:	add	x5, x0, #0x6a8
  4030fc:	adrp	x0, 405000 <run+0x58>
  403100:	add	x4, x0, #0xe38
  403104:	mov	w3, #0xed                  	// #237
  403108:	mov	x2, x1
  40310c:	ldr	w1, [sp, #72]
  403110:	mov	w0, w6
  403114:	bl	401c40 <log_internal_realm@plt>
  403118:	b	403244 <connection_enable_event_sources+0x2f4>
  40311c:	ldr	w0, [sp, #72]
  403120:	cmp	w0, #0x0
  403124:	cneg	w0, w0, lt  // lt = tstop
  403128:	and	w0, w0, #0xff
  40312c:	neg	w0, w0
  403130:	b	403244 <connection_enable_event_sources+0x2f4>
  403134:	ldr	x0, [sp, #24]
  403138:	ldr	x0, [x0, #72]
  40313c:	cmp	x0, #0x0
  403140:	b.eq	40315c <connection_enable_event_sources+0x20c>  // b.none
  403144:	ldr	x0, [sp, #24]
  403148:	ldr	x0, [x0, #72]
  40314c:	ldr	w1, [sp, #48]
  403150:	bl	401aa0 <sd_event_source_set_io_events@plt>
  403154:	str	w0, [sp, #52]
  403158:	b	4031ac <connection_enable_event_sources+0x25c>
  40315c:	ldr	x0, [sp, #24]
  403160:	ldr	w0, [x0, #12]
  403164:	cmp	w0, #0x0
  403168:	b.lt	4031a8 <connection_enable_event_sources+0x258>  // b.tstop
  40316c:	ldr	x0, [sp, #24]
  403170:	ldr	x0, [x0]
  403174:	ldr	x6, [x0]
  403178:	ldr	x0, [sp, #24]
  40317c:	add	x1, x0, #0x48
  403180:	ldr	x0, [sp, #24]
  403184:	ldr	w2, [x0, #12]
  403188:	ldr	x5, [sp, #24]
  40318c:	adrp	x0, 402000 <ERRNO_IS_DISCONNECT+0x74>
  403190:	add	x4, x0, #0xd00
  403194:	ldr	w3, [sp, #48]
  403198:	mov	x0, x6
  40319c:	bl	401c60 <sd_event_add_io@plt>
  4031a0:	str	w0, [sp, #52]
  4031a4:	b	4031ac <connection_enable_event_sources+0x25c>
  4031a8:	str	wzr, [sp, #52]
  4031ac:	ldr	w0, [sp, #52]
  4031b0:	cmp	w0, #0x0
  4031b4:	b.ge	403240 <connection_enable_event_sources+0x2f0>  // b.tcont
  4031b8:	mov	w0, #0x3                   	// #3
  4031bc:	str	w0, [sp, #56]
  4031c0:	ldr	w0, [sp, #52]
  4031c4:	str	w0, [sp, #60]
  4031c8:	str	wzr, [sp, #64]
  4031cc:	ldr	w0, [sp, #64]
  4031d0:	bl	401d50 <log_get_max_level_realm@plt>
  4031d4:	mov	w1, w0
  4031d8:	ldr	w0, [sp, #56]
  4031dc:	and	w0, w0, #0x7
  4031e0:	cmp	w1, w0
  4031e4:	b.lt	403228 <connection_enable_event_sources+0x2d8>  // b.tstop
  4031e8:	ldr	w0, [sp, #64]
  4031ec:	lsl	w1, w0, #10
  4031f0:	ldr	w0, [sp, #56]
  4031f4:	orr	w6, w1, w0
  4031f8:	adrp	x0, 405000 <run+0x58>
  4031fc:	add	x1, x0, #0x58b
  403200:	adrp	x0, 405000 <run+0x58>
  403204:	add	x5, x0, #0x6d8
  403208:	adrp	x0, 405000 <run+0x58>
  40320c:	add	x4, x0, #0xe38
  403210:	mov	w3, #0xf7                  	// #247
  403214:	mov	x2, x1
  403218:	ldr	w1, [sp, #60]
  40321c:	mov	w0, w6
  403220:	bl	401c40 <log_internal_realm@plt>
  403224:	b	403244 <connection_enable_event_sources+0x2f4>
  403228:	ldr	w0, [sp, #60]
  40322c:	cmp	w0, #0x0
  403230:	cneg	w0, w0, lt  // lt = tstop
  403234:	and	w0, w0, #0xff
  403238:	neg	w0, w0
  40323c:	b	403244 <connection_enable_event_sources+0x2f4>
  403240:	mov	w0, #0x0                   	// #0
  403244:	ldp	x29, x30, [sp], #80
  403248:	ret

000000000040324c <connection_complete>:
  40324c:	stp	x29, x30, [sp, #-48]!
  403250:	mov	x29, sp
  403254:	str	x0, [sp, #24]
  403258:	ldr	x0, [sp, #24]
  40325c:	cmp	x0, #0x0
  403260:	cset	w0, eq  // eq = none
  403264:	and	w0, w0, #0xff
  403268:	and	x0, x0, #0xff
  40326c:	cmp	x0, #0x0
  403270:	b.eq	40329c <connection_complete+0x50>  // b.none
  403274:	adrp	x0, 405000 <run+0x58>
  403278:	add	x1, x0, #0x58b
  40327c:	adrp	x0, 405000 <run+0x58>
  403280:	add	x4, x0, #0xe58
  403284:	mov	w3, #0xff                  	// #255
  403288:	mov	x2, x1
  40328c:	adrp	x0, 405000 <run+0x58>
  403290:	add	x1, x0, #0x5b0
  403294:	mov	w0, #0x0                   	// #0
  403298:	bl	401af0 <log_assert_failed_realm@plt>
  40329c:	ldr	x0, [sp, #24]
  4032a0:	add	x1, x0, #0x10
  4032a4:	ldr	x0, [sp, #24]
  4032a8:	add	x0, x0, #0x30
  4032ac:	mov	x2, x0
  4032b0:	ldr	x0, [sp, #24]
  4032b4:	bl	4023dc <connection_create_pipes>
  4032b8:	str	w0, [sp, #44]
  4032bc:	ldr	w0, [sp, #44]
  4032c0:	cmp	w0, #0x0
  4032c4:	b.lt	403314 <connection_complete+0xc8>  // b.tstop
  4032c8:	ldr	x0, [sp, #24]
  4032cc:	add	x1, x0, #0x18
  4032d0:	ldr	x0, [sp, #24]
  4032d4:	add	x0, x0, #0x38
  4032d8:	mov	x2, x0
  4032dc:	ldr	x0, [sp, #24]
  4032e0:	bl	4023dc <connection_create_pipes>
  4032e4:	str	w0, [sp, #44]
  4032e8:	ldr	w0, [sp, #44]
  4032ec:	cmp	w0, #0x0
  4032f0:	b.lt	40331c <connection_complete+0xd0>  // b.tstop
  4032f4:	ldr	x0, [sp, #24]
  4032f8:	bl	402f50 <connection_enable_event_sources>
  4032fc:	str	w0, [sp, #44]
  403300:	ldr	w0, [sp, #44]
  403304:	cmp	w0, #0x0
  403308:	b.lt	403324 <connection_complete+0xd8>  // b.tstop
  40330c:	mov	w0, #0x0                   	// #0
  403310:	b	403334 <connection_complete+0xe8>
  403314:	nop
  403318:	b	403328 <connection_complete+0xdc>
  40331c:	nop
  403320:	b	403328 <connection_complete+0xdc>
  403324:	nop
  403328:	ldr	x0, [sp, #24]
  40332c:	bl	402228 <connection_free>
  403330:	mov	w0, #0x0                   	// #0
  403334:	ldp	x29, x30, [sp], #48
  403338:	ret

000000000040333c <connect_cb>:
  40333c:	stp	x29, x30, [sp, #-112]!
  403340:	mov	x29, sp
  403344:	str	x0, [sp, #40]
  403348:	str	w1, [sp, #36]
  40334c:	str	w2, [sp, #32]
  403350:	str	x3, [sp, #24]
  403354:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  403358:	add	x0, x0, #0xba8
  40335c:	ldr	x1, [x0]
  403360:	str	x1, [sp, #104]
  403364:	mov	x1, #0x0                   	// #0
  403368:	ldr	x0, [sp, #24]
  40336c:	str	x0, [sp, #96]
  403370:	ldr	x0, [sp, #40]
  403374:	cmp	x0, #0x0
  403378:	cset	w0, eq  // eq = none
  40337c:	and	w0, w0, #0xff
  403380:	and	x0, x0, #0xff
  403384:	cmp	x0, #0x0
  403388:	b.eq	4033b4 <connect_cb+0x78>  // b.none
  40338c:	adrp	x0, 405000 <run+0x58>
  403390:	add	x1, x0, #0x58b
  403394:	adrp	x0, 405000 <run+0x58>
  403398:	add	x4, x0, #0xe70
  40339c:	mov	w3, #0x119                 	// #281
  4033a0:	mov	x2, x1
  4033a4:	adrp	x0, 405000 <run+0x58>
  4033a8:	add	x1, x0, #0x698
  4033ac:	mov	w0, #0x0                   	// #0
  4033b0:	bl	401af0 <log_assert_failed_realm@plt>
  4033b4:	ldr	w0, [sp, #36]
  4033b8:	lsr	w0, w0, #31
  4033bc:	and	w0, w0, #0xff
  4033c0:	and	x0, x0, #0xff
  4033c4:	cmp	x0, #0x0
  4033c8:	b.eq	4033f4 <connect_cb+0xb8>  // b.none
  4033cc:	adrp	x0, 405000 <run+0x58>
  4033d0:	add	x1, x0, #0x58b
  4033d4:	adrp	x0, 405000 <run+0x58>
  4033d8:	add	x4, x0, #0xe70
  4033dc:	mov	w3, #0x11a                 	// #282
  4033e0:	mov	x2, x1
  4033e4:	adrp	x0, 405000 <run+0x58>
  4033e8:	add	x1, x0, #0x6a0
  4033ec:	mov	w0, #0x0                   	// #0
  4033f0:	bl	401af0 <log_assert_failed_realm@plt>
  4033f4:	ldr	x0, [sp, #96]
  4033f8:	cmp	x0, #0x0
  4033fc:	cset	w0, eq  // eq = none
  403400:	and	w0, w0, #0xff
  403404:	and	x0, x0, #0xff
  403408:	cmp	x0, #0x0
  40340c:	b.eq	403438 <connect_cb+0xfc>  // b.none
  403410:	adrp	x0, 405000 <run+0x58>
  403414:	add	x1, x0, #0x58b
  403418:	adrp	x0, 405000 <run+0x58>
  40341c:	add	x4, x0, #0xe70
  403420:	mov	w3, #0x11b                 	// #283
  403424:	mov	x2, x1
  403428:	adrp	x0, 405000 <run+0x58>
  40342c:	add	x1, x0, #0x5b0
  403430:	mov	w0, #0x0                   	// #0
  403434:	bl	401af0 <log_assert_failed_realm@plt>
  403438:	mov	w0, #0x4                   	// #4
  40343c:	str	w0, [sp, #60]
  403440:	add	x1, sp, #0x3c
  403444:	add	x0, sp, #0x40
  403448:	mov	x4, x1
  40344c:	mov	x3, x0
  403450:	mov	w2, #0x4                   	// #4
  403454:	mov	w1, #0x1                   	// #1
  403458:	ldr	w0, [sp, #36]
  40345c:	bl	401b20 <getsockopt@plt>
  403460:	str	w0, [sp, #68]
  403464:	ldr	w0, [sp, #68]
  403468:	cmp	w0, #0x0
  40346c:	b.ge	4034f0 <connect_cb+0x1b4>  // b.tcont
  403470:	mov	w0, #0x3                   	// #3
  403474:	str	w0, [sp, #84]
  403478:	bl	401b70 <__errno_location@plt>
  40347c:	ldr	w0, [x0]
  403480:	str	w0, [sp, #88]
  403484:	str	wzr, [sp, #92]
  403488:	ldr	w0, [sp, #92]
  40348c:	bl	401d50 <log_get_max_level_realm@plt>
  403490:	mov	w1, w0
  403494:	ldr	w0, [sp, #84]
  403498:	and	w0, w0, #0x7
  40349c:	cmp	w1, w0
  4034a0:	b.lt	4034e4 <connect_cb+0x1a8>  // b.tstop
  4034a4:	ldr	w0, [sp, #92]
  4034a8:	lsl	w1, w0, #10
  4034ac:	ldr	w0, [sp, #84]
  4034b0:	orr	w6, w1, w0
  4034b4:	adrp	x0, 405000 <run+0x58>
  4034b8:	add	x1, x0, #0x58b
  4034bc:	adrp	x0, 405000 <run+0x58>
  4034c0:	add	x5, x0, #0x708
  4034c4:	adrp	x0, 405000 <run+0x58>
  4034c8:	add	x4, x0, #0xe80
  4034cc:	mov	w3, #0x120                 	// #288
  4034d0:	mov	x2, x1
  4034d4:	ldr	w1, [sp, #88]
  4034d8:	mov	w0, w6
  4034dc:	bl	401c40 <log_internal_realm@plt>
  4034e0:	b	40359c <connect_cb+0x260>
  4034e4:	ldr	w0, [sp, #88]
  4034e8:	cmp	w0, #0x0
  4034ec:	b	40359c <connect_cb+0x260>
  4034f0:	ldr	w0, [sp, #64]
  4034f4:	cmp	w0, #0x0
  4034f8:	b.eq	403578 <connect_cb+0x23c>  // b.none
  4034fc:	mov	w0, #0x3                   	// #3
  403500:	str	w0, [sp, #72]
  403504:	ldr	w0, [sp, #64]
  403508:	str	w0, [sp, #76]
  40350c:	str	wzr, [sp, #80]
  403510:	ldr	w0, [sp, #80]
  403514:	bl	401d50 <log_get_max_level_realm@plt>
  403518:	mov	w1, w0
  40351c:	ldr	w0, [sp, #72]
  403520:	and	w0, w0, #0x7
  403524:	cmp	w1, w0
  403528:	b.lt	40356c <connect_cb+0x230>  // b.tstop
  40352c:	ldr	w0, [sp, #80]
  403530:	lsl	w1, w0, #10
  403534:	ldr	w0, [sp, #72]
  403538:	orr	w6, w1, w0
  40353c:	adrp	x0, 405000 <run+0x58>
  403540:	add	x1, x0, #0x58b
  403544:	adrp	x0, 405000 <run+0x58>
  403548:	add	x5, x0, #0x728
  40354c:	adrp	x0, 405000 <run+0x58>
  403550:	add	x4, x0, #0xe80
  403554:	mov	w3, #0x125                 	// #293
  403558:	mov	x2, x1
  40355c:	ldr	w1, [sp, #76]
  403560:	mov	w0, w6
  403564:	bl	401c40 <log_internal_realm@plt>
  403568:	b	40359c <connect_cb+0x260>
  40356c:	ldr	w0, [sp, #76]
  403570:	cmp	w0, #0x0
  403574:	b	40359c <connect_cb+0x260>
  403578:	ldr	x0, [sp, #96]
  40357c:	ldr	x0, [x0, #72]
  403580:	bl	401ab0 <sd_event_source_unref@plt>
  403584:	mov	x1, x0
  403588:	ldr	x0, [sp, #96]
  40358c:	str	x1, [x0, #72]
  403590:	ldr	x0, [sp, #96]
  403594:	bl	40324c <connection_complete>
  403598:	b	4035a8 <connect_cb+0x26c>
  40359c:	ldr	x0, [sp, #96]
  4035a0:	bl	402228 <connection_free>
  4035a4:	mov	w0, #0x0                   	// #0
  4035a8:	mov	w1, w0
  4035ac:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  4035b0:	add	x0, x0, #0xba8
  4035b4:	ldr	x2, [sp, #104]
  4035b8:	ldr	x0, [x0]
  4035bc:	eor	x0, x2, x0
  4035c0:	cmp	x0, #0x0
  4035c4:	b.eq	4035cc <connect_cb+0x290>  // b.none
  4035c8:	bl	401ba0 <__stack_chk_fail@plt>
  4035cc:	mov	w0, w1
  4035d0:	ldp	x29, x30, [sp], #112
  4035d4:	ret

00000000004035d8 <connection_start>:
  4035d8:	stp	x29, x30, [sp, #-112]!
  4035dc:	mov	x29, sp
  4035e0:	str	x0, [sp, #40]
  4035e4:	str	x1, [sp, #32]
  4035e8:	str	w2, [sp, #28]
  4035ec:	ldr	x0, [sp, #40]
  4035f0:	cmp	x0, #0x0
  4035f4:	cset	w0, eq  // eq = none
  4035f8:	and	w0, w0, #0xff
  4035fc:	and	x0, x0, #0xff
  403600:	cmp	x0, #0x0
  403604:	b.eq	403630 <connection_start+0x58>  // b.none
  403608:	adrp	x0, 405000 <run+0x58>
  40360c:	add	x1, x0, #0x58b
  403610:	adrp	x0, 405000 <run+0x58>
  403614:	add	x4, x0, #0xe90
  403618:	mov	w3, #0x135                 	// #309
  40361c:	mov	x2, x1
  403620:	adrp	x0, 405000 <run+0x58>
  403624:	add	x1, x0, #0x5b0
  403628:	mov	w0, #0x0                   	// #0
  40362c:	bl	401af0 <log_assert_failed_realm@plt>
  403630:	ldr	x0, [sp, #32]
  403634:	cmp	x0, #0x0
  403638:	cset	w0, eq  // eq = none
  40363c:	and	w0, w0, #0xff
  403640:	and	x0, x0, #0xff
  403644:	cmp	x0, #0x0
  403648:	b.eq	403674 <connection_start+0x9c>  // b.none
  40364c:	adrp	x0, 405000 <run+0x58>
  403650:	add	x1, x0, #0x58b
  403654:	adrp	x0, 405000 <run+0x58>
  403658:	add	x4, x0, #0xe90
  40365c:	mov	w3, #0x136                 	// #310
  403660:	mov	x2, x1
  403664:	adrp	x0, 405000 <run+0x58>
  403668:	add	x1, x0, #0x750
  40366c:	mov	w0, #0x0                   	// #0
  403670:	bl	401af0 <log_assert_failed_realm@plt>
  403674:	ldr	w0, [sp, #28]
  403678:	cmp	w0, #0x0
  40367c:	cset	w0, eq  // eq = none
  403680:	and	w0, w0, #0xff
  403684:	and	x0, x0, #0xff
  403688:	cmp	x0, #0x0
  40368c:	b.eq	4036b8 <connection_start+0xe0>  // b.none
  403690:	adrp	x0, 405000 <run+0x58>
  403694:	add	x1, x0, #0x58b
  403698:	adrp	x0, 405000 <run+0x58>
  40369c:	add	x4, x0, #0xe90
  4036a0:	mov	w3, #0x137                 	// #311
  4036a4:	mov	x2, x1
  4036a8:	adrp	x0, 405000 <run+0x58>
  4036ac:	add	x1, x0, #0x758
  4036b0:	mov	w0, #0x0                   	// #0
  4036b4:	bl	401af0 <log_assert_failed_realm@plt>
  4036b8:	ldr	x0, [sp, #32]
  4036bc:	ldrh	w0, [x0]
  4036c0:	mov	w2, #0x0                   	// #0
  4036c4:	mov	w1, #0x801                 	// #2049
  4036c8:	movk	w1, #0x8, lsl #16
  4036cc:	bl	401a70 <socket@plt>
  4036d0:	mov	w1, w0
  4036d4:	ldr	x0, [sp, #40]
  4036d8:	str	w1, [x0, #12]
  4036dc:	ldr	x0, [sp, #40]
  4036e0:	ldr	w0, [x0, #12]
  4036e4:	cmp	w0, #0x0
  4036e8:	b.ge	40376c <connection_start+0x194>  // b.tcont
  4036ec:	mov	w0, #0x3                   	// #3
  4036f0:	str	w0, [sp, #100]
  4036f4:	bl	401b70 <__errno_location@plt>
  4036f8:	ldr	w0, [x0]
  4036fc:	str	w0, [sp, #104]
  403700:	str	wzr, [sp, #108]
  403704:	ldr	w0, [sp, #108]
  403708:	bl	401d50 <log_get_max_level_realm@plt>
  40370c:	mov	w1, w0
  403710:	ldr	w0, [sp, #100]
  403714:	and	w0, w0, #0x7
  403718:	cmp	w1, w0
  40371c:	b.lt	403760 <connection_start+0x188>  // b.tstop
  403720:	ldr	w0, [sp, #108]
  403724:	lsl	w1, w0, #10
  403728:	ldr	w0, [sp, #100]
  40372c:	orr	w6, w1, w0
  403730:	adrp	x0, 405000 <run+0x58>
  403734:	add	x1, x0, #0x58b
  403738:	adrp	x0, 405000 <run+0x58>
  40373c:	add	x5, x0, #0x760
  403740:	adrp	x0, 405000 <run+0x58>
  403744:	add	x4, x0, #0xea8
  403748:	mov	w3, #0x13b                 	// #315
  40374c:	mov	x2, x1
  403750:	ldr	w1, [sp, #104]
  403754:	mov	w0, w6
  403758:	bl	401c40 <log_internal_realm@plt>
  40375c:	b	4039a0 <connection_start+0x3c8>
  403760:	ldr	w0, [sp, #104]
  403764:	cmp	w0, #0x0
  403768:	b	4039a0 <connection_start+0x3c8>
  40376c:	ldr	x0, [sp, #40]
  403770:	ldr	w0, [x0, #12]
  403774:	ldr	x1, [sp, #32]
  403778:	ldr	w2, [sp, #28]
  40377c:	bl	401d10 <connect@plt>
  403780:	str	w0, [sp, #60]
  403784:	ldr	w0, [sp, #60]
  403788:	cmp	w0, #0x0
  40378c:	b.ge	40397c <connection_start+0x3a4>  // b.tcont
  403790:	bl	401b70 <__errno_location@plt>
  403794:	ldr	w0, [x0]
  403798:	cmp	w0, #0x73
  40379c:	b.ne	4038fc <connection_start+0x324>  // b.any
  4037a0:	ldr	x0, [sp, #40]
  4037a4:	ldr	x0, [x0]
  4037a8:	ldr	x6, [x0]
  4037ac:	ldr	x0, [sp, #40]
  4037b0:	add	x1, x0, #0x48
  4037b4:	ldr	x0, [sp, #40]
  4037b8:	ldr	w2, [x0, #12]
  4037bc:	ldr	x5, [sp, #40]
  4037c0:	adrp	x0, 403000 <connection_enable_event_sources+0xb0>
  4037c4:	add	x4, x0, #0x33c
  4037c8:	mov	w3, #0x4                   	// #4
  4037cc:	mov	x0, x6
  4037d0:	bl	401c60 <sd_event_add_io@plt>
  4037d4:	str	w0, [sp, #60]
  4037d8:	ldr	w0, [sp, #60]
  4037dc:	cmp	w0, #0x0
  4037e0:	b.ge	403860 <connection_start+0x288>  // b.tcont
  4037e4:	mov	w0, #0x3                   	// #3
  4037e8:	str	w0, [sp, #88]
  4037ec:	ldr	w0, [sp, #60]
  4037f0:	str	w0, [sp, #92]
  4037f4:	str	wzr, [sp, #96]
  4037f8:	ldr	w0, [sp, #96]
  4037fc:	bl	401d50 <log_get_max_level_realm@plt>
  403800:	mov	w1, w0
  403804:	ldr	w0, [sp, #88]
  403808:	and	w0, w0, #0x7
  40380c:	cmp	w1, w0
  403810:	b.lt	403854 <connection_start+0x27c>  // b.tstop
  403814:	ldr	w0, [sp, #96]
  403818:	lsl	w1, w0, #10
  40381c:	ldr	w0, [sp, #88]
  403820:	orr	w6, w1, w0
  403824:	adrp	x0, 405000 <run+0x58>
  403828:	add	x1, x0, #0x58b
  40382c:	adrp	x0, 405000 <run+0x58>
  403830:	add	x5, x0, #0x780
  403834:	adrp	x0, 405000 <run+0x58>
  403838:	add	x4, x0, #0xea8
  40383c:	mov	w3, #0x144                 	// #324
  403840:	mov	x2, x1
  403844:	ldr	w1, [sp, #92]
  403848:	mov	w0, w6
  40384c:	bl	401c40 <log_internal_realm@plt>
  403850:	b	4039a0 <connection_start+0x3c8>
  403854:	ldr	w0, [sp, #92]
  403858:	cmp	w0, #0x0
  40385c:	b	4039a0 <connection_start+0x3c8>
  403860:	ldr	x0, [sp, #40]
  403864:	ldr	x0, [x0, #72]
  403868:	mov	w1, #0xffffffff            	// #-1
  40386c:	bl	401b50 <sd_event_source_set_enabled@plt>
  403870:	str	w0, [sp, #60]
  403874:	ldr	w0, [sp, #60]
  403878:	cmp	w0, #0x0
  40387c:	b.ge	403994 <connection_start+0x3bc>  // b.tcont
  403880:	mov	w0, #0x3                   	// #3
  403884:	str	w0, [sp, #76]
  403888:	ldr	w0, [sp, #60]
  40388c:	str	w0, [sp, #80]
  403890:	str	wzr, [sp, #84]
  403894:	ldr	w0, [sp, #84]
  403898:	bl	401d50 <log_get_max_level_realm@plt>
  40389c:	mov	w1, w0
  4038a0:	ldr	w0, [sp, #76]
  4038a4:	and	w0, w0, #0x7
  4038a8:	cmp	w1, w0
  4038ac:	b.lt	4038f0 <connection_start+0x318>  // b.tstop
  4038b0:	ldr	w0, [sp, #84]
  4038b4:	lsl	w1, w0, #10
  4038b8:	ldr	w0, [sp, #76]
  4038bc:	orr	w6, w1, w0
  4038c0:	adrp	x0, 405000 <run+0x58>
  4038c4:	add	x1, x0, #0x58b
  4038c8:	adrp	x0, 405000 <run+0x58>
  4038cc:	add	x5, x0, #0x7a8
  4038d0:	adrp	x0, 405000 <run+0x58>
  4038d4:	add	x4, x0, #0xea8
  4038d8:	mov	w3, #0x14a                 	// #330
  4038dc:	mov	x2, x1
  4038e0:	ldr	w1, [sp, #80]
  4038e4:	mov	w0, w6
  4038e8:	bl	401c40 <log_internal_realm@plt>
  4038ec:	b	4039a0 <connection_start+0x3c8>
  4038f0:	ldr	w0, [sp, #80]
  4038f4:	cmp	w0, #0x0
  4038f8:	b	4039a0 <connection_start+0x3c8>
  4038fc:	mov	w0, #0x3                   	// #3
  403900:	str	w0, [sp, #64]
  403904:	bl	401b70 <__errno_location@plt>
  403908:	ldr	w0, [x0]
  40390c:	str	w0, [sp, #68]
  403910:	str	wzr, [sp, #72]
  403914:	ldr	w0, [sp, #72]
  403918:	bl	401d50 <log_get_max_level_realm@plt>
  40391c:	mov	w1, w0
  403920:	ldr	w0, [sp, #64]
  403924:	and	w0, w0, #0x7
  403928:	cmp	w1, w0
  40392c:	b.lt	403970 <connection_start+0x398>  // b.tstop
  403930:	ldr	w0, [sp, #72]
  403934:	lsl	w1, w0, #10
  403938:	ldr	w0, [sp, #64]
  40393c:	orr	w6, w1, w0
  403940:	adrp	x0, 405000 <run+0x58>
  403944:	add	x1, x0, #0x58b
  403948:	adrp	x0, 405000 <run+0x58>
  40394c:	add	x5, x0, #0x728
  403950:	adrp	x0, 405000 <run+0x58>
  403954:	add	x4, x0, #0xea8
  403958:	mov	w3, #0x14e                 	// #334
  40395c:	mov	x2, x1
  403960:	ldr	w1, [sp, #68]
  403964:	mov	w0, w6
  403968:	bl	401c40 <log_internal_realm@plt>
  40396c:	b	4039a0 <connection_start+0x3c8>
  403970:	ldr	w0, [sp, #68]
  403974:	cmp	w0, #0x0
  403978:	b	4039a0 <connection_start+0x3c8>
  40397c:	ldr	x0, [sp, #40]
  403980:	bl	40324c <connection_complete>
  403984:	str	w0, [sp, #60]
  403988:	ldr	w0, [sp, #60]
  40398c:	cmp	w0, #0x0
  403990:	b.lt	40399c <connection_start+0x3c4>  // b.tstop
  403994:	mov	w0, #0x0                   	// #0
  403998:	b	4039ac <connection_start+0x3d4>
  40399c:	nop
  4039a0:	ldr	x0, [sp, #40]
  4039a4:	bl	402228 <connection_free>
  4039a8:	mov	w0, #0x0                   	// #0
  4039ac:	ldp	x29, x30, [sp], #112
  4039b0:	ret

00000000004039b4 <resolve_handler>:
  4039b4:	stp	x29, x30, [sp, #-80]!
  4039b8:	mov	x29, sp
  4039bc:	stp	x19, x20, [sp, #16]
  4039c0:	str	x0, [sp, #56]
  4039c4:	str	w1, [sp, #52]
  4039c8:	str	x2, [sp, #40]
  4039cc:	str	x3, [sp, #32]
  4039d0:	ldr	x0, [sp, #56]
  4039d4:	cmp	x0, #0x0
  4039d8:	cset	w0, eq  // eq = none
  4039dc:	and	w0, w0, #0xff
  4039e0:	and	x0, x0, #0xff
  4039e4:	cmp	x0, #0x0
  4039e8:	b.eq	403a14 <resolve_handler+0x60>  // b.none
  4039ec:	adrp	x0, 405000 <run+0x58>
  4039f0:	add	x1, x0, #0x58b
  4039f4:	adrp	x0, 405000 <run+0x58>
  4039f8:	add	x4, x0, #0xec0
  4039fc:	mov	w3, #0x15f                 	// #351
  403a00:	mov	x2, x1
  403a04:	adrp	x0, 405000 <run+0x58>
  403a08:	add	x1, x0, #0x7d8
  403a0c:	mov	w0, #0x0                   	// #0
  403a10:	bl	401af0 <log_assert_failed_realm@plt>
  403a14:	ldr	x0, [sp, #32]
  403a18:	cmp	x0, #0x0
  403a1c:	cset	w0, eq  // eq = none
  403a20:	and	w0, w0, #0xff
  403a24:	and	x0, x0, #0xff
  403a28:	cmp	x0, #0x0
  403a2c:	b.eq	403a58 <resolve_handler+0xa4>  // b.none
  403a30:	adrp	x0, 405000 <run+0x58>
  403a34:	add	x1, x0, #0x58b
  403a38:	adrp	x0, 405000 <run+0x58>
  403a3c:	add	x4, x0, #0xec0
  403a40:	mov	w3, #0x160                 	// #352
  403a44:	mov	x2, x1
  403a48:	adrp	x0, 405000 <run+0x58>
  403a4c:	add	x1, x0, #0x5b0
  403a50:	mov	w0, #0x0                   	// #0
  403a54:	bl	401af0 <log_assert_failed_realm@plt>
  403a58:	ldr	w0, [sp, #52]
  403a5c:	cmp	w0, #0x0
  403a60:	b.eq	403ae8 <resolve_handler+0x134>  // b.none
  403a64:	mov	w0, #0x3                   	// #3
  403a68:	str	w0, [sp, #68]
  403a6c:	str	wzr, [sp, #72]
  403a70:	str	wzr, [sp, #76]
  403a74:	ldr	w0, [sp, #76]
  403a78:	bl	401d50 <log_get_max_level_realm@plt>
  403a7c:	mov	w1, w0
  403a80:	ldr	w0, [sp, #68]
  403a84:	and	w0, w0, #0x7
  403a88:	cmp	w1, w0
  403a8c:	b.lt	403adc <resolve_handler+0x128>  // b.tstop
  403a90:	ldr	w0, [sp, #76]
  403a94:	lsl	w1, w0, #10
  403a98:	ldr	w0, [sp, #68]
  403a9c:	orr	w19, w1, w0
  403aa0:	adrp	x0, 405000 <run+0x58>
  403aa4:	add	x20, x0, #0x58b
  403aa8:	ldr	w0, [sp, #52]
  403aac:	bl	401c00 <gai_strerror@plt>
  403ab0:	mov	x6, x0
  403ab4:	adrp	x0, 405000 <run+0x58>
  403ab8:	add	x5, x0, #0x7e0
  403abc:	adrp	x0, 405000 <run+0x58>
  403ac0:	add	x4, x0, #0xed0
  403ac4:	mov	w3, #0x163                 	// #355
  403ac8:	mov	x2, x20
  403acc:	ldr	w1, [sp, #72]
  403ad0:	mov	w0, w19
  403ad4:	bl	401c40 <log_internal_realm@plt>
  403ad8:	b	403b20 <resolve_handler+0x16c>
  403adc:	ldr	w0, [sp, #72]
  403ae0:	cmp	w0, #0x0
  403ae4:	b	403b20 <resolve_handler+0x16c>
  403ae8:	ldr	x0, [sp, #32]
  403aec:	ldr	x0, [x0, #80]
  403af0:	bl	401d60 <sd_resolve_query_unref@plt>
  403af4:	mov	x1, x0
  403af8:	ldr	x0, [sp, #32]
  403afc:	str	x1, [x0, #80]
  403b00:	ldr	x0, [sp, #40]
  403b04:	ldr	x1, [x0, #24]
  403b08:	ldr	x0, [sp, #40]
  403b0c:	ldr	w0, [x0, #16]
  403b10:	mov	w2, w0
  403b14:	ldr	x0, [sp, #32]
  403b18:	bl	4035d8 <connection_start>
  403b1c:	b	403b2c <resolve_handler+0x178>
  403b20:	ldr	x0, [sp, #32]
  403b24:	bl	402228 <connection_free>
  403b28:	mov	w0, #0x0                   	// #0
  403b2c:	ldp	x19, x20, [sp, #16]
  403b30:	ldp	x29, x30, [sp], #80
  403b34:	ret

0000000000403b38 <resolve_remote>:
  403b38:	stp	x29, x30, [sp, #-272]!
  403b3c:	mov	x29, sp
  403b40:	str	x0, [x29, #24]
  403b44:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  403b48:	add	x0, x0, #0xba8
  403b4c:	ldr	x1, [x0]
  403b50:	str	x1, [x29, #264]
  403b54:	mov	x1, #0x0                   	// #0
  403b58:	stp	xzr, xzr, [x29, #136]
  403b5c:	stp	xzr, xzr, [x29, #152]
  403b60:	stp	xzr, xzr, [x29, #168]
  403b64:	stp	xzr, xzr, [x29, #184]
  403b68:	stp	xzr, xzr, [x29, #200]
  403b6c:	stp	xzr, xzr, [x29, #216]
  403b70:	stp	xzr, xzr, [x29, #232]
  403b74:	stp	xzr, xzr, [x29, #248]
  403b78:	strb	wzr, [x29, #35]
  403b7c:	adrp	x0, 417000 <arg_connections_max>
  403b80:	add	x0, x0, #0x30
  403b84:	ldr	x0, [x0]
  403b88:	ldrb	w0, [x0]
  403b8c:	cmp	w0, #0x2f
  403b90:	b.eq	403b9c <resolve_remote+0x64>  // b.none
  403b94:	cmp	w0, #0x40
  403b98:	b.ne	403ba4 <resolve_remote+0x6c>  // b.any
  403b9c:	mov	w0, #0x1                   	// #1
  403ba0:	strb	w0, [x29, #35]
  403ba4:	nop
  403ba8:	ldrb	w0, [x29, #35]
  403bac:	cmp	w0, #0x0
  403bb0:	b.eq	403c70 <resolve_remote+0x138>  // b.none
  403bb4:	adrp	x0, 417000 <arg_connections_max>
  403bb8:	add	x0, x0, #0x30
  403bbc:	ldr	x1, [x0]
  403bc0:	add	x0, x29, #0x88
  403bc4:	bl	401cb0 <sockaddr_un_set_path@plt>
  403bc8:	str	w0, [x29, #64]
  403bcc:	ldr	w0, [x29, #64]
  403bd0:	cmp	w0, #0x0
  403bd4:	b.ge	403c54 <resolve_remote+0x11c>  // b.tcont
  403bd8:	mov	w0, #0x3                   	// #3
  403bdc:	str	w0, [x29, #68]
  403be0:	ldr	w0, [x29, #64]
  403be4:	str	w0, [x29, #72]
  403be8:	str	wzr, [x29, #76]
  403bec:	ldr	w0, [x29, #76]
  403bf0:	bl	401d50 <log_get_max_level_realm@plt>
  403bf4:	mov	w1, w0
  403bf8:	ldr	w0, [x29, #68]
  403bfc:	and	w0, w0, #0x7
  403c00:	cmp	w1, w0
  403c04:	b.lt	403c48 <resolve_remote+0x110>  // b.tstop
  403c08:	ldr	w0, [x29, #76]
  403c0c:	lsl	w1, w0, #10
  403c10:	ldr	w0, [x29, #68]
  403c14:	orr	w6, w1, w0
  403c18:	adrp	x0, 405000 <run+0x58>
  403c1c:	add	x1, x0, #0x58b
  403c20:	adrp	x0, 405000 <run+0x58>
  403c24:	add	x5, x0, #0x800
  403c28:	adrp	x0, 405000 <run+0x58>
  403c2c:	add	x4, x0, #0xee0
  403c30:	mov	w3, #0x181                 	// #385
  403c34:	mov	x2, x1
  403c38:	ldr	w1, [x29, #72]
  403c3c:	mov	w0, w6
  403c40:	bl	401c40 <log_internal_realm@plt>
  403c44:	b	403e9c <resolve_remote+0x364>
  403c48:	ldr	w0, [x29, #72]
  403c4c:	cmp	w0, #0x0
  403c50:	b	403e9c <resolve_remote+0x364>
  403c54:	ldr	w1, [x29, #64]
  403c58:	add	x0, x29, #0x88
  403c5c:	mov	w2, w1
  403c60:	mov	x1, x0
  403c64:	ldr	x0, [x29, #24]
  403c68:	bl	4035d8 <connection_start>
  403c6c:	b	403ea8 <resolve_remote+0x370>
  403c70:	adrp	x0, 417000 <arg_connections_max>
  403c74:	add	x0, x0, #0x30
  403c78:	ldr	x0, [x0]
  403c7c:	mov	w1, #0x3a                  	// #58
  403c80:	bl	401ae0 <strrchr@plt>
  403c84:	str	x0, [x29, #88]
  403c88:	ldr	x0, [x29, #88]
  403c8c:	cmp	x0, #0x0
  403c90:	b.eq	403d28 <resolve_remote+0x1f0>  // b.none
  403c94:	adrp	x0, 417000 <arg_connections_max>
  403c98:	add	x0, x0, #0x30
  403c9c:	ldr	x0, [x0]
  403ca0:	str	x0, [x29, #96]
  403ca4:	adrp	x0, 417000 <arg_connections_max>
  403ca8:	add	x0, x0, #0x30
  403cac:	ldr	x0, [x0]
  403cb0:	ldr	x1, [x29, #88]
  403cb4:	sub	x0, x1, x0
  403cb8:	mov	x1, x0
  403cbc:	ldr	x0, [x29, #96]
  403cc0:	bl	401a60 <strnlen@plt>
  403cc4:	str	x0, [x29, #104]
  403cc8:	ldr	x0, [x29, #104]
  403ccc:	add	x0, x0, #0x1
  403cd0:	add	x0, x0, #0xf
  403cd4:	lsr	x0, x0, #4
  403cd8:	lsl	x0, x0, #4
  403cdc:	sub	sp, sp, x0
  403ce0:	mov	x0, sp
  403ce4:	add	x0, x0, #0xf
  403ce8:	lsr	x0, x0, #4
  403cec:	lsl	x0, x0, #4
  403cf0:	str	x0, [x29, #112]
  403cf4:	ldr	x1, [x29, #112]
  403cf8:	ldr	x0, [x29, #104]
  403cfc:	add	x0, x1, x0
  403d00:	strb	wzr, [x0]
  403d04:	ldr	x2, [x29, #104]
  403d08:	ldr	x1, [x29, #96]
  403d0c:	ldr	x0, [x29, #112]
  403d10:	bl	401a90 <memcpy@plt>
  403d14:	str	x0, [x29, #80]
  403d18:	ldr	x0, [x29, #88]
  403d1c:	add	x0, x0, #0x1
  403d20:	str	x0, [x29, #88]
  403d24:	b	403d44 <resolve_remote+0x20c>
  403d28:	adrp	x0, 417000 <arg_connections_max>
  403d2c:	add	x0, x0, #0x30
  403d30:	ldr	x0, [x0]
  403d34:	str	x0, [x29, #80]
  403d38:	adrp	x0, 405000 <run+0x58>
  403d3c:	add	x0, x0, #0x848
  403d40:	str	x0, [x29, #88]
  403d44:	mov	w0, #0x7                   	// #7
  403d48:	str	w0, [x29, #36]
  403d4c:	str	wzr, [x29, #40]
  403d50:	str	wzr, [x29, #44]
  403d54:	ldr	w0, [x29, #44]
  403d58:	bl	401d50 <log_get_max_level_realm@plt>
  403d5c:	mov	w1, w0
  403d60:	ldr	w0, [x29, #36]
  403d64:	and	w0, w0, #0x7
  403d68:	cmp	w1, w0
  403d6c:	b.lt	403db8 <resolve_remote+0x280>  // b.tstop
  403d70:	ldr	w0, [x29, #44]
  403d74:	lsl	w1, w0, #10
  403d78:	ldr	w0, [x29, #36]
  403d7c:	orr	w8, w1, w0
  403d80:	adrp	x0, 405000 <run+0x58>
  403d84:	add	x1, x0, #0x58b
  403d88:	ldr	x7, [x29, #88]
  403d8c:	ldr	x6, [x29, #80]
  403d90:	adrp	x0, 405000 <run+0x58>
  403d94:	add	x5, x0, #0x850
  403d98:	adrp	x0, 405000 <run+0x58>
  403d9c:	add	x4, x0, #0xee0
  403da0:	mov	w3, #0x191                 	// #401
  403da4:	mov	x2, x1
  403da8:	ldr	w1, [x29, #40]
  403dac:	mov	w0, w8
  403db0:	bl	401c40 <log_internal_realm@plt>
  403db4:	b	403dc0 <resolve_remote+0x288>
  403db8:	ldr	w0, [x29, #40]
  403dbc:	cmp	w0, #0x0
  403dc0:	adrp	x0, 403000 <connection_enable_event_sources+0xb0>
  403dc4:	add	x0, x0, #0x9b4
  403dc8:	str	x0, [x29, #120]
  403dcc:	str	xzr, [x29, #128]
  403dd0:	ldr	x0, [x29, #24]
  403dd4:	ldr	x0, [x0]
  403dd8:	ldr	x8, [x0, #8]
  403ddc:	ldr	x0, [x29, #24]
  403de0:	add	x1, x0, #0x50
  403de4:	ldr	x7, [x29, #24]
  403de8:	ldr	x6, [x29, #128]
  403dec:	ldr	x5, [x29, #120]
  403df0:	adrp	x0, 405000 <run+0x58>
  403df4:	add	x4, x0, #0xef0
  403df8:	ldr	x3, [x29, #88]
  403dfc:	ldr	x2, [x29, #80]
  403e00:	mov	x0, x8
  403e04:	bl	4019e0 <resolve_getaddrinfo_with_destroy_callback@plt>
  403e08:	str	w0, [x29, #48]
  403e0c:	ldr	w0, [x29, #48]
  403e10:	cmp	w0, #0x0
  403e14:	b.ge	403e94 <resolve_remote+0x35c>  // b.tcont
  403e18:	mov	w0, #0x3                   	// #3
  403e1c:	str	w0, [x29, #52]
  403e20:	ldr	w0, [x29, #48]
  403e24:	str	w0, [x29, #56]
  403e28:	str	wzr, [x29, #60]
  403e2c:	ldr	w0, [x29, #60]
  403e30:	bl	401d50 <log_get_max_level_realm@plt>
  403e34:	mov	w1, w0
  403e38:	ldr	w0, [x29, #52]
  403e3c:	and	w0, w0, #0x7
  403e40:	cmp	w1, w0
  403e44:	b.lt	403e88 <resolve_remote+0x350>  // b.tstop
  403e48:	ldr	w0, [x29, #60]
  403e4c:	lsl	w1, w0, #10
  403e50:	ldr	w0, [x29, #52]
  403e54:	orr	w6, w1, w0
  403e58:	adrp	x0, 405000 <run+0x58>
  403e5c:	add	x1, x0, #0x58b
  403e60:	adrp	x0, 405000 <run+0x58>
  403e64:	add	x5, x0, #0x878
  403e68:	adrp	x0, 405000 <run+0x58>
  403e6c:	add	x4, x0, #0xee0
  403e70:	mov	w3, #0x194                 	// #404
  403e74:	mov	x2, x1
  403e78:	ldr	w1, [x29, #56]
  403e7c:	mov	w0, w6
  403e80:	bl	401c40 <log_internal_realm@plt>
  403e84:	b	403e9c <resolve_remote+0x364>
  403e88:	ldr	w0, [x29, #56]
  403e8c:	cmp	w0, #0x0
  403e90:	b	403e9c <resolve_remote+0x364>
  403e94:	mov	w0, #0x0                   	// #0
  403e98:	b	403ea8 <resolve_remote+0x370>
  403e9c:	ldr	x0, [x29, #24]
  403ea0:	bl	402228 <connection_free>
  403ea4:	mov	w0, #0x0                   	// #0
  403ea8:	mov	w1, w0
  403eac:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  403eb0:	add	x0, x0, #0xba8
  403eb4:	ldr	x2, [x29, #264]
  403eb8:	ldr	x0, [x0]
  403ebc:	eor	x0, x2, x0
  403ec0:	cmp	x0, #0x0
  403ec4:	b.eq	403ecc <resolve_remote+0x394>  // b.none
  403ec8:	bl	401ba0 <__stack_chk_fail@plt>
  403ecc:	mov	w0, w1
  403ed0:	mov	sp, x29
  403ed4:	ldp	x29, x30, [sp], #272
  403ed8:	ret

0000000000403edc <add_connection_socket>:
  403edc:	stp	x29, x30, [sp, #-64]!
  403ee0:	mov	x29, sp
  403ee4:	str	x0, [sp, #24]
  403ee8:	str	w1, [sp, #20]
  403eec:	ldr	x0, [sp, #24]
  403ef0:	cmp	x0, #0x0
  403ef4:	cset	w0, eq  // eq = none
  403ef8:	and	w0, w0, #0xff
  403efc:	and	x0, x0, #0xff
  403f00:	cmp	x0, #0x0
  403f04:	b.eq	403f30 <add_connection_socket+0x54>  // b.none
  403f08:	adrp	x0, 405000 <run+0x58>
  403f0c:	add	x1, x0, #0x58b
  403f10:	adrp	x0, 405000 <run+0x58>
  403f14:	add	x4, x0, #0xf20
  403f18:	mov	w3, #0x1a3                 	// #419
  403f1c:	mov	x2, x1
  403f20:	adrp	x0, 405000 <run+0x58>
  403f24:	add	x1, x0, #0x5b8
  403f28:	mov	w0, #0x0                   	// #0
  403f2c:	bl	401af0 <log_assert_failed_realm@plt>
  403f30:	ldr	w0, [sp, #20]
  403f34:	lsr	w0, w0, #31
  403f38:	and	w0, w0, #0xff
  403f3c:	and	x0, x0, #0xff
  403f40:	cmp	x0, #0x0
  403f44:	b.eq	403f70 <add_connection_socket+0x94>  // b.none
  403f48:	adrp	x0, 405000 <run+0x58>
  403f4c:	add	x1, x0, #0x58b
  403f50:	adrp	x0, 405000 <run+0x58>
  403f54:	add	x4, x0, #0xf20
  403f58:	mov	w3, #0x1a4                 	// #420
  403f5c:	mov	x2, x1
  403f60:	adrp	x0, 405000 <run+0x58>
  403f64:	add	x1, x0, #0x6a0
  403f68:	mov	w0, #0x0                   	// #0
  403f6c:	bl	401af0 <log_assert_failed_realm@plt>
  403f70:	ldr	x0, [sp, #24]
  403f74:	ldr	x0, [x0, #24]
  403f78:	bl	4021e8 <set_size>
  403f7c:	mov	w1, w0
  403f80:	adrp	x0, 417000 <arg_connections_max>
  403f84:	add	x0, x0, #0x0
  403f88:	ldr	w0, [x0]
  403f8c:	cmp	w1, w0
  403f90:	b.ls	404018 <add_connection_socket+0x13c>  // b.plast
  403f94:	mov	w0, #0x4                   	// #4
  403f98:	str	w0, [sp, #44]
  403f9c:	str	wzr, [sp, #48]
  403fa0:	str	wzr, [sp, #52]
  403fa4:	ldr	w0, [sp, #52]
  403fa8:	bl	401d50 <log_get_max_level_realm@plt>
  403fac:	mov	w1, w0
  403fb0:	ldr	w0, [sp, #44]
  403fb4:	and	w0, w0, #0x7
  403fb8:	cmp	w1, w0
  403fbc:	b.lt	404000 <add_connection_socket+0x124>  // b.tstop
  403fc0:	ldr	w0, [sp, #52]
  403fc4:	lsl	w1, w0, #10
  403fc8:	ldr	w0, [sp, #44]
  403fcc:	orr	w6, w1, w0
  403fd0:	adrp	x0, 405000 <run+0x58>
  403fd4:	add	x1, x0, #0x58b
  403fd8:	adrp	x0, 405000 <run+0x58>
  403fdc:	add	x5, x0, #0x8a0
  403fe0:	adrp	x0, 405000 <run+0x58>
  403fe4:	add	x4, x0, #0xf38
  403fe8:	mov	w3, #0x1a7                 	// #423
  403fec:	mov	x2, x1
  403ff0:	ldr	w1, [sp, #48]
  403ff4:	mov	w0, w6
  403ff8:	bl	401c40 <log_internal_realm@plt>
  403ffc:	b	404008 <add_connection_socket+0x12c>
  404000:	ldr	w0, [sp, #48]
  404004:	cmp	w0, #0x0
  404008:	ldr	w0, [sp, #20]
  40400c:	bl	401ac0 <safe_close@plt>
  404010:	mov	w0, #0x0                   	// #0
  404014:	b	40414c <add_connection_socket+0x270>
  404018:	ldr	x0, [sp, #24]
  40401c:	add	x0, x0, #0x18
  404020:	mov	x1, #0x0                   	// #0
  404024:	bl	4019c0 <internal_set_ensure_allocated@plt>
  404028:	str	w0, [sp, #40]
  40402c:	ldr	w0, [sp, #40]
  404030:	cmp	w0, #0x0
  404034:	b.ge	40405c <add_connection_socket+0x180>  // b.tcont
  404038:	adrp	x0, 405000 <run+0x58>
  40403c:	add	x1, x0, #0x58b
  404040:	adrp	x0, 405000 <run+0x58>
  404044:	add	x3, x0, #0xf38
  404048:	mov	w2, #0x1ae                 	// #430
  40404c:	mov	w0, #0x0                   	// #0
  404050:	bl	401d40 <log_oom_internal@plt>
  404054:	mov	w0, #0x0                   	// #0
  404058:	b	40414c <add_connection_socket+0x270>
  40405c:	mov	x1, #0x58                  	// #88
  404060:	mov	x0, #0x1                   	// #1
  404064:	bl	401c80 <calloc@plt>
  404068:	str	x0, [sp, #56]
  40406c:	ldr	x0, [sp, #56]
  404070:	cmp	x0, #0x0
  404074:	b.ne	40409c <add_connection_socket+0x1c0>  // b.any
  404078:	adrp	x0, 405000 <run+0x58>
  40407c:	add	x1, x0, #0x58b
  404080:	adrp	x0, 405000 <run+0x58>
  404084:	add	x3, x0, #0xf38
  404088:	mov	w2, #0x1b4                 	// #436
  40408c:	mov	w0, #0x0                   	// #0
  404090:	bl	401d40 <log_oom_internal@plt>
  404094:	mov	w0, #0x0                   	// #0
  404098:	b	40414c <add_connection_socket+0x270>
  40409c:	ldr	x0, [sp, #56]
  4040a0:	ldr	x1, [sp, #24]
  4040a4:	str	x1, [x0]
  4040a8:	ldr	x0, [sp, #56]
  4040ac:	ldr	w1, [sp, #20]
  4040b0:	str	w1, [x0, #8]
  4040b4:	ldr	x0, [sp, #56]
  4040b8:	mov	w1, #0xffffffff            	// #-1
  4040bc:	str	w1, [x0, #12]
  4040c0:	ldr	x0, [sp, #56]
  4040c4:	mov	w1, #0xffffffff            	// #-1
  4040c8:	str	w1, [x0, #20]
  4040cc:	ldr	x0, [sp, #56]
  4040d0:	ldr	w1, [x0, #20]
  4040d4:	ldr	x0, [sp, #56]
  4040d8:	str	w1, [x0, #16]
  4040dc:	ldr	x0, [sp, #56]
  4040e0:	mov	w1, #0xffffffff            	// #-1
  4040e4:	str	w1, [x0, #28]
  4040e8:	ldr	x0, [sp, #56]
  4040ec:	ldr	w1, [x0, #28]
  4040f0:	ldr	x0, [sp, #56]
  4040f4:	str	w1, [x0, #24]
  4040f8:	ldr	x0, [sp, #24]
  4040fc:	ldr	x0, [x0, #24]
  404100:	ldr	x1, [sp, #56]
  404104:	bl	401d20 <set_put@plt>
  404108:	str	w0, [sp, #40]
  40410c:	ldr	w0, [sp, #40]
  404110:	cmp	w0, #0x0
  404114:	b.ge	404144 <add_connection_socket+0x268>  // b.tcont
  404118:	ldr	x0, [sp, #56]
  40411c:	bl	401cc0 <free@plt>
  404120:	adrp	x0, 405000 <run+0x58>
  404124:	add	x1, x0, #0x58b
  404128:	adrp	x0, 405000 <run+0x58>
  40412c:	add	x3, x0, #0xf38
  404130:	mov	w2, #0x1c1                 	// #449
  404134:	mov	w0, #0x0                   	// #0
  404138:	bl	401d40 <log_oom_internal@plt>
  40413c:	mov	w0, #0x0                   	// #0
  404140:	b	40414c <add_connection_socket+0x270>
  404144:	ldr	x0, [sp, #56]
  404148:	bl	403b38 <resolve_remote>
  40414c:	ldp	x29, x30, [sp], #64
  404150:	ret

0000000000404154 <accept_cb>:
  404154:	stp	x29, x30, [sp, #-144]!
  404158:	mov	x29, sp
  40415c:	stp	x19, x20, [sp, #16]
  404160:	str	x0, [sp, #56]
  404164:	str	w1, [sp, #52]
  404168:	str	w2, [sp, #48]
  40416c:	str	x3, [sp, #40]
  404170:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  404174:	add	x0, x0, #0xba8
  404178:	ldr	x1, [x0]
  40417c:	str	x1, [sp, #136]
  404180:	mov	x1, #0x0                   	// #0
  404184:	str	xzr, [sp, #120]
  404188:	ldr	x0, [sp, #40]
  40418c:	str	x0, [sp, #128]
  404190:	mov	w0, #0xffffffff            	// #-1
  404194:	str	w0, [sp, #64]
  404198:	ldr	x0, [sp, #56]
  40419c:	cmp	x0, #0x0
  4041a0:	cset	w0, eq  // eq = none
  4041a4:	and	w0, w0, #0xff
  4041a8:	and	x0, x0, #0xff
  4041ac:	cmp	x0, #0x0
  4041b0:	b.eq	4041dc <accept_cb+0x88>  // b.none
  4041b4:	adrp	x0, 405000 <run+0x58>
  4041b8:	add	x1, x0, #0x58b
  4041bc:	adrp	x0, 405000 <run+0x58>
  4041c0:	add	x4, x0, #0xf50
  4041c4:	mov	w3, #0x1cd                 	// #461
  4041c8:	mov	x2, x1
  4041cc:	adrp	x0, 405000 <run+0x58>
  4041d0:	add	x1, x0, #0x698
  4041d4:	mov	w0, #0x0                   	// #0
  4041d8:	bl	401af0 <log_assert_failed_realm@plt>
  4041dc:	ldr	w0, [sp, #52]
  4041e0:	lsr	w0, w0, #31
  4041e4:	and	w0, w0, #0xff
  4041e8:	and	x0, x0, #0xff
  4041ec:	cmp	x0, #0x0
  4041f0:	b.eq	40421c <accept_cb+0xc8>  // b.none
  4041f4:	adrp	x0, 405000 <run+0x58>
  4041f8:	add	x1, x0, #0x58b
  4041fc:	adrp	x0, 405000 <run+0x58>
  404200:	add	x4, x0, #0xf50
  404204:	mov	w3, #0x1ce                 	// #462
  404208:	mov	x2, x1
  40420c:	adrp	x0, 405000 <run+0x58>
  404210:	add	x1, x0, #0x6a0
  404214:	mov	w0, #0x0                   	// #0
  404218:	bl	401af0 <log_assert_failed_realm@plt>
  40421c:	ldr	w0, [sp, #48]
  404220:	and	w0, w0, #0x1
  404224:	cmp	w0, #0x0
  404228:	cset	w0, eq  // eq = none
  40422c:	and	w0, w0, #0xff
  404230:	and	x0, x0, #0xff
  404234:	cmp	x0, #0x0
  404238:	b.eq	404264 <accept_cb+0x110>  // b.none
  40423c:	adrp	x0, 405000 <run+0x58>
  404240:	add	x1, x0, #0x58b
  404244:	adrp	x0, 405000 <run+0x58>
  404248:	add	x4, x0, #0xf50
  40424c:	mov	w3, #0x1cf                 	// #463
  404250:	mov	x2, x1
  404254:	adrp	x0, 405000 <run+0x58>
  404258:	add	x1, x0, #0x8d0
  40425c:	mov	w0, #0x0                   	// #0
  404260:	bl	401af0 <log_assert_failed_realm@plt>
  404264:	ldr	x0, [sp, #128]
  404268:	cmp	x0, #0x0
  40426c:	cset	w0, eq  // eq = none
  404270:	and	w0, w0, #0xff
  404274:	and	x0, x0, #0xff
  404278:	cmp	x0, #0x0
  40427c:	b.eq	4042a8 <accept_cb+0x154>  // b.none
  404280:	adrp	x0, 405000 <run+0x58>
  404284:	add	x1, x0, #0x58b
  404288:	adrp	x0, 405000 <run+0x58>
  40428c:	add	x4, x0, #0xf50
  404290:	mov	w3, #0x1d0                 	// #464
  404294:	mov	x2, x1
  404298:	adrp	x0, 405000 <run+0x58>
  40429c:	add	x1, x0, #0x5b8
  4042a0:	mov	w0, #0x0                   	// #0
  4042a4:	bl	401af0 <log_assert_failed_realm@plt>
  4042a8:	mov	x0, #0x0                   	// #0
  4042ac:	mov	w3, #0x800                 	// #2048
  4042b0:	movk	w3, #0x8, lsl #16
  4042b4:	mov	x2, #0x0                   	// #0
  4042b8:	mov	x1, x0
  4042bc:	ldr	w0, [sp, #52]
  4042c0:	bl	401ca0 <accept4@plt>
  4042c4:	str	w0, [sp, #64]
  4042c8:	ldr	w0, [sp, #64]
  4042cc:	cmp	w0, #0x0
  4042d0:	b.ge	404374 <accept_cb+0x220>  // b.tcont
  4042d4:	bl	401b70 <__errno_location@plt>
  4042d8:	ldr	w0, [x0]
  4042dc:	bl	402010 <ERRNO_IS_ACCEPT_AGAIN>
  4042e0:	and	w0, w0, #0xff
  4042e4:	eor	w0, w0, #0x1
  4042e8:	and	w0, w0, #0xff
  4042ec:	cmp	w0, #0x0
  4042f0:	b.eq	4044a4 <accept_cb+0x350>  // b.none
  4042f4:	mov	w0, #0x4                   	// #4
  4042f8:	str	w0, [sp, #96]
  4042fc:	bl	401b70 <__errno_location@plt>
  404300:	ldr	w0, [x0]
  404304:	str	w0, [sp, #100]
  404308:	str	wzr, [sp, #104]
  40430c:	ldr	w0, [sp, #104]
  404310:	bl	401d50 <log_get_max_level_realm@plt>
  404314:	mov	w1, w0
  404318:	ldr	w0, [sp, #96]
  40431c:	and	w0, w0, #0x7
  404320:	cmp	w1, w0
  404324:	b.lt	404368 <accept_cb+0x214>  // b.tstop
  404328:	ldr	w0, [sp, #104]
  40432c:	lsl	w1, w0, #10
  404330:	ldr	w0, [sp, #96]
  404334:	orr	w6, w1, w0
  404338:	adrp	x0, 405000 <run+0x58>
  40433c:	add	x1, x0, #0x58b
  404340:	adrp	x0, 405000 <run+0x58>
  404344:	add	x5, x0, #0x8e8
  404348:	adrp	x0, 405000 <run+0x58>
  40434c:	add	x4, x0, #0xf60
  404350:	mov	w3, #0x1d5                 	// #469
  404354:	mov	x2, x1
  404358:	ldr	w1, [sp, #100]
  40435c:	mov	w0, w6
  404360:	bl	401c40 <log_internal_realm@plt>
  404364:	b	4044a4 <accept_cb+0x350>
  404368:	ldr	w0, [sp, #100]
  40436c:	cmp	w0, #0x0
  404370:	b	4044a4 <accept_cb+0x350>
  404374:	add	x0, sp, #0x78
  404378:	mov	x2, x0
  40437c:	mov	w1, #0x1                   	// #1
  404380:	ldr	w0, [sp, #64]
  404384:	bl	401a20 <getpeername_pretty@plt>
  404388:	mov	w0, #0x7                   	// #7
  40438c:	str	w0, [sp, #68]
  404390:	str	wzr, [sp, #72]
  404394:	str	wzr, [sp, #76]
  404398:	ldr	w0, [sp, #76]
  40439c:	bl	401d50 <log_get_max_level_realm@plt>
  4043a0:	mov	w1, w0
  4043a4:	ldr	w0, [sp, #68]
  4043a8:	and	w0, w0, #0x7
  4043ac:	cmp	w1, w0
  4043b0:	b.lt	404400 <accept_cb+0x2ac>  // b.tstop
  4043b4:	ldr	w0, [sp, #76]
  4043b8:	lsl	w1, w0, #10
  4043bc:	ldr	w0, [sp, #68]
  4043c0:	orr	w19, w1, w0
  4043c4:	adrp	x0, 405000 <run+0x58>
  4043c8:	add	x20, x0, #0x58b
  4043cc:	ldr	x0, [sp, #120]
  4043d0:	bl	4020cc <strna>
  4043d4:	mov	x6, x0
  4043d8:	adrp	x0, 405000 <run+0x58>
  4043dc:	add	x5, x0, #0x908
  4043e0:	adrp	x0, 405000 <run+0x58>
  4043e4:	add	x4, x0, #0xf60
  4043e8:	mov	w3, #0x1d8                 	// #472
  4043ec:	mov	x2, x20
  4043f0:	ldr	w1, [sp, #72]
  4043f4:	mov	w0, w19
  4043f8:	bl	401c40 <log_internal_realm@plt>
  4043fc:	b	404408 <accept_cb+0x2b4>
  404400:	ldr	w0, [sp, #72]
  404404:	cmp	w0, #0x0
  404408:	ldr	w1, [sp, #64]
  40440c:	ldr	x0, [sp, #128]
  404410:	bl	403edc <add_connection_socket>
  404414:	str	w0, [sp, #80]
  404418:	ldr	w0, [sp, #80]
  40441c:	cmp	w0, #0x0
  404420:	b.ge	4044a4 <accept_cb+0x350>  // b.tcont
  404424:	mov	w0, #0x3                   	// #3
  404428:	str	w0, [sp, #84]
  40442c:	ldr	w0, [sp, #80]
  404430:	str	w0, [sp, #88]
  404434:	str	wzr, [sp, #92]
  404438:	ldr	w0, [sp, #92]
  40443c:	bl	401d50 <log_get_max_level_realm@plt>
  404440:	mov	w1, w0
  404444:	ldr	w0, [sp, #84]
  404448:	and	w0, w0, #0x7
  40444c:	cmp	w1, w0
  404450:	b.lt	404494 <accept_cb+0x340>  // b.tstop
  404454:	ldr	w0, [sp, #92]
  404458:	lsl	w1, w0, #10
  40445c:	ldr	w0, [sp, #84]
  404460:	orr	w6, w1, w0
  404464:	adrp	x0, 405000 <run+0x58>
  404468:	add	x1, x0, #0x58b
  40446c:	adrp	x0, 405000 <run+0x58>
  404470:	add	x5, x0, #0x920
  404474:	adrp	x0, 405000 <run+0x58>
  404478:	add	x4, x0, #0xf60
  40447c:	mov	w3, #0x1dc                 	// #476
  404480:	mov	x2, x1
  404484:	ldr	w1, [sp, #88]
  404488:	mov	w0, w6
  40448c:	bl	401c40 <log_internal_realm@plt>
  404490:	b	40449c <accept_cb+0x348>
  404494:	ldr	w0, [sp, #88]
  404498:	cmp	w0, #0x0
  40449c:	ldr	w0, [sp, #52]
  4044a0:	bl	401ac0 <safe_close@plt>
  4044a4:	mov	w1, #0xffffffff            	// #-1
  4044a8:	ldr	x0, [sp, #56]
  4044ac:	bl	401b50 <sd_event_source_set_enabled@plt>
  4044b0:	str	w0, [sp, #80]
  4044b4:	ldr	w0, [sp, #80]
  4044b8:	cmp	w0, #0x0
  4044bc:	b.ge	404550 <accept_cb+0x3fc>  // b.tcont
  4044c0:	mov	w0, #0x3                   	// #3
  4044c4:	str	w0, [sp, #108]
  4044c8:	ldr	w0, [sp, #80]
  4044cc:	str	w0, [sp, #112]
  4044d0:	str	wzr, [sp, #116]
  4044d4:	ldr	w0, [sp, #116]
  4044d8:	bl	401d50 <log_get_max_level_realm@plt>
  4044dc:	mov	w1, w0
  4044e0:	ldr	w0, [sp, #108]
  4044e4:	and	w0, w0, #0x7
  4044e8:	cmp	w1, w0
  4044ec:	b.lt	404530 <accept_cb+0x3dc>  // b.tstop
  4044f0:	ldr	w0, [sp, #116]
  4044f4:	lsl	w1, w0, #10
  4044f8:	ldr	w0, [sp, #108]
  4044fc:	orr	w6, w1, w0
  404500:	adrp	x0, 405000 <run+0x58>
  404504:	add	x1, x0, #0x58b
  404508:	adrp	x0, 405000 <run+0x58>
  40450c:	add	x5, x0, #0x950
  404510:	adrp	x0, 405000 <run+0x58>
  404514:	add	x4, x0, #0xf60
  404518:	mov	w3, #0x1e3                 	// #483
  40451c:	mov	x2, x1
  404520:	ldr	w1, [sp, #112]
  404524:	mov	w0, w6
  404528:	bl	401c40 <log_internal_realm@plt>
  40452c:	b	404538 <accept_cb+0x3e4>
  404530:	ldr	w0, [sp, #112]
  404534:	cmp	w0, #0x0
  404538:	ldr	x0, [sp, #128]
  40453c:	ldr	x0, [x0]
  404540:	ldr	w1, [sp, #80]
  404544:	bl	401cd0 <sd_event_exit@plt>
  404548:	ldr	w19, [sp, #80]
  40454c:	b	404554 <accept_cb+0x400>
  404550:	mov	w19, #0x1                   	// #1
  404554:	add	x0, sp, #0x78
  404558:	bl	401f68 <freep>
  40455c:	mov	w1, w19
  404560:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  404564:	add	x0, x0, #0xba8
  404568:	ldr	x2, [sp, #136]
  40456c:	ldr	x0, [x0]
  404570:	eor	x0, x2, x0
  404574:	cmp	x0, #0x0
  404578:	b.eq	404580 <accept_cb+0x42c>  // b.none
  40457c:	bl	401ba0 <__stack_chk_fail@plt>
  404580:	mov	w0, w1
  404584:	ldp	x19, x20, [sp, #16]
  404588:	ldp	x29, x30, [sp], #144
  40458c:	ret

0000000000404590 <add_listen_socket>:
  404590:	stp	x29, x30, [sp, #-128]!
  404594:	mov	x29, sp
  404598:	str	x0, [sp, #24]
  40459c:	str	w1, [sp, #20]
  4045a0:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  4045a4:	add	x0, x0, #0xba8
  4045a8:	ldr	x1, [x0]
  4045ac:	str	x1, [sp, #120]
  4045b0:	mov	x1, #0x0                   	// #0
  4045b4:	ldr	x0, [sp, #24]
  4045b8:	cmp	x0, #0x0
  4045bc:	cset	w0, eq  // eq = none
  4045c0:	and	w0, w0, #0xff
  4045c4:	and	x0, x0, #0xff
  4045c8:	cmp	x0, #0x0
  4045cc:	b.eq	4045f8 <add_listen_socket+0x68>  // b.none
  4045d0:	adrp	x0, 405000 <run+0x58>
  4045d4:	add	x1, x0, #0x58b
  4045d8:	adrp	x0, 405000 <run+0x58>
  4045dc:	add	x4, x0, #0xf70
  4045e0:	mov	w3, #0x1ef                 	// #495
  4045e4:	mov	x2, x1
  4045e8:	adrp	x0, 405000 <run+0x58>
  4045ec:	add	x1, x0, #0x5b8
  4045f0:	mov	w0, #0x0                   	// #0
  4045f4:	bl	401af0 <log_assert_failed_realm@plt>
  4045f8:	ldr	w0, [sp, #20]
  4045fc:	lsr	w0, w0, #31
  404600:	and	w0, w0, #0xff
  404604:	and	x0, x0, #0xff
  404608:	cmp	x0, #0x0
  40460c:	b.eq	404638 <add_listen_socket+0xa8>  // b.none
  404610:	adrp	x0, 405000 <run+0x58>
  404614:	add	x1, x0, #0x58b
  404618:	adrp	x0, 405000 <run+0x58>
  40461c:	add	x4, x0, #0xf70
  404620:	mov	w3, #0x1f0                 	// #496
  404624:	mov	x2, x1
  404628:	adrp	x0, 405000 <run+0x58>
  40462c:	add	x1, x0, #0x6a0
  404630:	mov	w0, #0x0                   	// #0
  404634:	bl	401af0 <log_assert_failed_realm@plt>
  404638:	ldr	x0, [sp, #24]
  40463c:	add	x0, x0, #0x10
  404640:	mov	x1, #0x0                   	// #0
  404644:	bl	4019c0 <internal_set_ensure_allocated@plt>
  404648:	str	w0, [sp, #36]
  40464c:	ldr	w0, [sp, #36]
  404650:	cmp	w0, #0x0
  404654:	b.ge	40467c <add_listen_socket+0xec>  // b.tcont
  404658:	adrp	x0, 405000 <run+0x58>
  40465c:	add	x1, x0, #0x58b
  404660:	adrp	x0, 405000 <run+0x58>
  404664:	add	x3, x0, #0xf88
  404668:	mov	w2, #0x1f4                 	// #500
  40466c:	mov	w0, #0x0                   	// #0
  404670:	bl	401d40 <log_oom_internal@plt>
  404674:	ldr	w0, [sp, #36]
  404678:	b	404a74 <add_listen_socket+0x4e4>
  40467c:	mov	w3, #0x1                   	// #1
  404680:	mov	w2, #0x1                   	// #1
  404684:	mov	w1, #0x0                   	// #0
  404688:	ldr	w0, [sp, #20]
  40468c:	bl	401b00 <sd_is_socket@plt>
  404690:	str	w0, [sp, #36]
  404694:	ldr	w0, [sp, #36]
  404698:	cmp	w0, #0x0
  40469c:	b.ge	404728 <add_listen_socket+0x198>  // b.tcont
  4046a0:	mov	w0, #0x3                   	// #3
  4046a4:	str	w0, [sp, #100]
  4046a8:	ldr	w0, [sp, #36]
  4046ac:	str	w0, [sp, #104]
  4046b0:	str	wzr, [sp, #108]
  4046b4:	ldr	w0, [sp, #108]
  4046b8:	bl	401d50 <log_get_max_level_realm@plt>
  4046bc:	mov	w1, w0
  4046c0:	ldr	w0, [sp, #100]
  4046c4:	and	w0, w0, #0x7
  4046c8:	cmp	w1, w0
  4046cc:	b.lt	404710 <add_listen_socket+0x180>  // b.tstop
  4046d0:	ldr	w0, [sp, #108]
  4046d4:	lsl	w1, w0, #10
  4046d8:	ldr	w0, [sp, #100]
  4046dc:	orr	w6, w1, w0
  4046e0:	adrp	x0, 405000 <run+0x58>
  4046e4:	add	x1, x0, #0x58b
  4046e8:	adrp	x0, 405000 <run+0x58>
  4046ec:	add	x5, x0, #0x988
  4046f0:	adrp	x0, 405000 <run+0x58>
  4046f4:	add	x4, x0, #0xf88
  4046f8:	mov	w3, #0x1fa                 	// #506
  4046fc:	mov	x2, x1
  404700:	ldr	w1, [sp, #104]
  404704:	mov	w0, w6
  404708:	bl	401c40 <log_internal_realm@plt>
  40470c:	b	404a74 <add_listen_socket+0x4e4>
  404710:	ldr	w0, [sp, #104]
  404714:	cmp	w0, #0x0
  404718:	cneg	w0, w0, lt  // lt = tstop
  40471c:	and	w0, w0, #0xff
  404720:	neg	w0, w0
  404724:	b	404a74 <add_listen_socket+0x4e4>
  404728:	ldr	w0, [sp, #36]
  40472c:	cmp	w0, #0x0
  404730:	b.ne	4047c0 <add_listen_socket+0x230>  // b.any
  404734:	mov	w0, #0x3                   	// #3
  404738:	str	w0, [sp, #88]
  40473c:	mov	w0, #0x16                  	// #22
  404740:	movk	w0, #0x4000, lsl #16
  404744:	str	w0, [sp, #92]
  404748:	str	wzr, [sp, #96]
  40474c:	ldr	w0, [sp, #96]
  404750:	bl	401d50 <log_get_max_level_realm@plt>
  404754:	mov	w1, w0
  404758:	ldr	w0, [sp, #88]
  40475c:	and	w0, w0, #0x7
  404760:	cmp	w1, w0
  404764:	b.lt	4047a8 <add_listen_socket+0x218>  // b.tstop
  404768:	ldr	w0, [sp, #96]
  40476c:	lsl	w1, w0, #10
  404770:	ldr	w0, [sp, #88]
  404774:	orr	w6, w1, w0
  404778:	adrp	x0, 405000 <run+0x58>
  40477c:	add	x1, x0, #0x58b
  404780:	adrp	x0, 405000 <run+0x58>
  404784:	add	x5, x0, #0x9b0
  404788:	adrp	x0, 405000 <run+0x58>
  40478c:	add	x4, x0, #0xf88
  404790:	mov	w3, #0x1fc                 	// #508
  404794:	mov	x2, x1
  404798:	ldr	w1, [sp, #92]
  40479c:	mov	w0, w6
  4047a0:	bl	401c40 <log_internal_realm@plt>
  4047a4:	b	404a74 <add_listen_socket+0x4e4>
  4047a8:	ldr	w0, [sp, #92]
  4047ac:	cmp	w0, #0x0
  4047b0:	cneg	w0, w0, lt  // lt = tstop
  4047b4:	and	w0, w0, #0xff
  4047b8:	neg	w0, w0
  4047bc:	b	404a74 <add_listen_socket+0x4e4>
  4047c0:	mov	w1, #0x1                   	// #1
  4047c4:	ldr	w0, [sp, #20]
  4047c8:	bl	401a80 <fd_nonblock@plt>
  4047cc:	str	w0, [sp, #36]
  4047d0:	ldr	w0, [sp, #36]
  4047d4:	cmp	w0, #0x0
  4047d8:	b.ge	404864 <add_listen_socket+0x2d4>  // b.tcont
  4047dc:	mov	w0, #0x3                   	// #3
  4047e0:	str	w0, [sp, #76]
  4047e4:	ldr	w0, [sp, #36]
  4047e8:	str	w0, [sp, #80]
  4047ec:	str	wzr, [sp, #84]
  4047f0:	ldr	w0, [sp, #84]
  4047f4:	bl	401d50 <log_get_max_level_realm@plt>
  4047f8:	mov	w1, w0
  4047fc:	ldr	w0, [sp, #76]
  404800:	and	w0, w0, #0x7
  404804:	cmp	w1, w0
  404808:	b.lt	40484c <add_listen_socket+0x2bc>  // b.tstop
  40480c:	ldr	w0, [sp, #84]
  404810:	lsl	w1, w0, #10
  404814:	ldr	w0, [sp, #76]
  404818:	orr	w6, w1, w0
  40481c:	adrp	x0, 405000 <run+0x58>
  404820:	add	x1, x0, #0x58b
  404824:	adrp	x0, 405000 <run+0x58>
  404828:	add	x5, x0, #0x9e0
  40482c:	adrp	x0, 405000 <run+0x58>
  404830:	add	x4, x0, #0xf88
  404834:	mov	w3, #0x201                 	// #513
  404838:	mov	x2, x1
  40483c:	ldr	w1, [sp, #80]
  404840:	mov	w0, w6
  404844:	bl	401c40 <log_internal_realm@plt>
  404848:	b	404a74 <add_listen_socket+0x4e4>
  40484c:	ldr	w0, [sp, #80]
  404850:	cmp	w0, #0x0
  404854:	cneg	w0, w0, lt  // lt = tstop
  404858:	and	w0, w0, #0xff
  40485c:	neg	w0, w0
  404860:	b	404a74 <add_listen_socket+0x4e4>
  404864:	ldr	x0, [sp, #24]
  404868:	ldr	x6, [x0]
  40486c:	add	x1, sp, #0x70
  404870:	ldr	x5, [sp, #24]
  404874:	adrp	x0, 404000 <add_connection_socket+0x124>
  404878:	add	x4, x0, #0x154
  40487c:	mov	w3, #0x1                   	// #1
  404880:	ldr	w2, [sp, #20]
  404884:	mov	x0, x6
  404888:	bl	401c60 <sd_event_add_io@plt>
  40488c:	str	w0, [sp, #36]
  404890:	ldr	w0, [sp, #36]
  404894:	cmp	w0, #0x0
  404898:	b.ge	404924 <add_listen_socket+0x394>  // b.tcont
  40489c:	mov	w0, #0x3                   	// #3
  4048a0:	str	w0, [sp, #64]
  4048a4:	ldr	w0, [sp, #36]
  4048a8:	str	w0, [sp, #68]
  4048ac:	str	wzr, [sp, #72]
  4048b0:	ldr	w0, [sp, #72]
  4048b4:	bl	401d50 <log_get_max_level_realm@plt>
  4048b8:	mov	w1, w0
  4048bc:	ldr	w0, [sp, #64]
  4048c0:	and	w0, w0, #0x7
  4048c4:	cmp	w1, w0
  4048c8:	b.lt	40490c <add_listen_socket+0x37c>  // b.tstop
  4048cc:	ldr	w0, [sp, #72]
  4048d0:	lsl	w1, w0, #10
  4048d4:	ldr	w0, [sp, #64]
  4048d8:	orr	w6, w1, w0
  4048dc:	adrp	x0, 405000 <run+0x58>
  4048e0:	add	x1, x0, #0x58b
  4048e4:	adrp	x0, 405000 <run+0x58>
  4048e8:	add	x5, x0, #0xa10
  4048ec:	adrp	x0, 405000 <run+0x58>
  4048f0:	add	x4, x0, #0xf88
  4048f4:	mov	w3, #0x205                 	// #517
  4048f8:	mov	x2, x1
  4048fc:	ldr	w1, [sp, #68]
  404900:	mov	w0, w6
  404904:	bl	401c40 <log_internal_realm@plt>
  404908:	b	404a74 <add_listen_socket+0x4e4>
  40490c:	ldr	w0, [sp, #68]
  404910:	cmp	w0, #0x0
  404914:	cneg	w0, w0, lt  // lt = tstop
  404918:	and	w0, w0, #0xff
  40491c:	neg	w0, w0
  404920:	b	404a74 <add_listen_socket+0x4e4>
  404924:	ldr	x0, [sp, #24]
  404928:	ldr	x0, [x0, #16]
  40492c:	ldr	x1, [sp, #112]
  404930:	bl	401d20 <set_put@plt>
  404934:	str	w0, [sp, #36]
  404938:	ldr	w0, [sp, #36]
  40493c:	cmp	w0, #0x0
  404940:	b.ge	4049cc <add_listen_socket+0x43c>  // b.tcont
  404944:	mov	w0, #0x3                   	// #3
  404948:	str	w0, [sp, #52]
  40494c:	ldr	w0, [sp, #36]
  404950:	str	w0, [sp, #56]
  404954:	str	wzr, [sp, #60]
  404958:	ldr	w0, [sp, #60]
  40495c:	bl	401d50 <log_get_max_level_realm@plt>
  404960:	mov	w1, w0
  404964:	ldr	w0, [sp, #52]
  404968:	and	w0, w0, #0x7
  40496c:	cmp	w1, w0
  404970:	b.lt	4049b4 <add_listen_socket+0x424>  // b.tstop
  404974:	ldr	w0, [sp, #60]
  404978:	lsl	w1, w0, #10
  40497c:	ldr	w0, [sp, #52]
  404980:	orr	w6, w1, w0
  404984:	adrp	x0, 405000 <run+0x58>
  404988:	add	x1, x0, #0x58b
  40498c:	adrp	x0, 405000 <run+0x58>
  404990:	add	x5, x0, #0xa30
  404994:	adrp	x0, 405000 <run+0x58>
  404998:	add	x4, x0, #0xf88
  40499c:	mov	w3, #0x209                 	// #521
  4049a0:	mov	x2, x1
  4049a4:	ldr	w1, [sp, #56]
  4049a8:	mov	w0, w6
  4049ac:	bl	401c40 <log_internal_realm@plt>
  4049b0:	b	4049bc <add_listen_socket+0x42c>
  4049b4:	ldr	w0, [sp, #56]
  4049b8:	cmp	w0, #0x0
  4049bc:	ldr	x0, [sp, #112]
  4049c0:	bl	401ab0 <sd_event_source_unref@plt>
  4049c4:	ldr	w0, [sp, #36]
  4049c8:	b	404a74 <add_listen_socket+0x4e4>
  4049cc:	ldr	x0, [sp, #112]
  4049d0:	mov	w1, #0xffffffff            	// #-1
  4049d4:	bl	401b50 <sd_event_source_set_enabled@plt>
  4049d8:	str	w0, [sp, #36]
  4049dc:	ldr	w0, [sp, #36]
  4049e0:	cmp	w0, #0x0
  4049e4:	b.ge	404a70 <add_listen_socket+0x4e0>  // b.tcont
  4049e8:	mov	w0, #0x3                   	// #3
  4049ec:	str	w0, [sp, #40]
  4049f0:	ldr	w0, [sp, #36]
  4049f4:	str	w0, [sp, #44]
  4049f8:	str	wzr, [sp, #48]
  4049fc:	ldr	w0, [sp, #48]
  404a00:	bl	401d50 <log_get_max_level_realm@plt>
  404a04:	mov	w1, w0
  404a08:	ldr	w0, [sp, #40]
  404a0c:	and	w0, w0, #0x7
  404a10:	cmp	w1, w0
  404a14:	b.lt	404a58 <add_listen_socket+0x4c8>  // b.tstop
  404a18:	ldr	w0, [sp, #48]
  404a1c:	lsl	w1, w0, #10
  404a20:	ldr	w0, [sp, #40]
  404a24:	orr	w6, w1, w0
  404a28:	adrp	x0, 405000 <run+0x58>
  404a2c:	add	x1, x0, #0x58b
  404a30:	adrp	x0, 405000 <run+0x58>
  404a34:	add	x5, x0, #0xa50
  404a38:	adrp	x0, 405000 <run+0x58>
  404a3c:	add	x4, x0, #0xf88
  404a40:	mov	w3, #0x212                 	// #530
  404a44:	mov	x2, x1
  404a48:	ldr	w1, [sp, #44]
  404a4c:	mov	w0, w6
  404a50:	bl	401c40 <log_internal_realm@plt>
  404a54:	b	404a74 <add_listen_socket+0x4e4>
  404a58:	ldr	w0, [sp, #44]
  404a5c:	cmp	w0, #0x0
  404a60:	cneg	w0, w0, lt  // lt = tstop
  404a64:	and	w0, w0, #0xff
  404a68:	neg	w0, w0
  404a6c:	b	404a74 <add_listen_socket+0x4e4>
  404a70:	mov	w0, #0x0                   	// #0
  404a74:	mov	w1, w0
  404a78:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  404a7c:	add	x0, x0, #0xba8
  404a80:	ldr	x2, [sp, #120]
  404a84:	ldr	x0, [x0]
  404a88:	eor	x0, x2, x0
  404a8c:	cmp	x0, #0x0
  404a90:	b.eq	404a98 <add_listen_socket+0x508>  // b.none
  404a94:	bl	401ba0 <__stack_chk_fail@plt>
  404a98:	mov	w0, w1
  404a9c:	ldp	x29, x30, [sp], #128
  404aa0:	ret

0000000000404aa4 <help>:
  404aa4:	stp	x29, x30, [sp, #-64]!
  404aa8:	mov	x29, sp
  404aac:	str	x19, [sp, #16]
  404ab0:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  404ab4:	add	x0, x0, #0xba8
  404ab8:	ldr	x1, [x0]
  404abc:	str	x1, [sp, #56]
  404ac0:	mov	x1, #0x0                   	// #0
  404ac4:	str	xzr, [sp, #48]
  404ac8:	add	x0, sp, #0x30
  404acc:	mov	x2, x0
  404ad0:	adrp	x0, 405000 <run+0x58>
  404ad4:	add	x1, x0, #0xa78
  404ad8:	adrp	x0, 405000 <run+0x58>
  404adc:	add	x0, x0, #0xa80
  404ae0:	bl	401b90 <terminal_urlify_man@plt>
  404ae4:	str	w0, [sp, #44]
  404ae8:	ldr	w0, [sp, #44]
  404aec:	cmp	w0, #0x0
  404af0:	b.ge	404b18 <help+0x74>  // b.tcont
  404af4:	adrp	x0, 405000 <run+0x58>
  404af8:	add	x1, x0, #0x58b
  404afc:	adrp	x0, 405000 <run+0x58>
  404b00:	add	x3, x0, #0xfa0
  404b04:	mov	w2, #0x21d                 	// #541
  404b08:	mov	w0, #0x0                   	// #0
  404b0c:	bl	401d40 <log_oom_internal@plt>
  404b10:	mov	w19, w0
  404b14:	b	404b40 <help+0x9c>
  404b18:	adrp	x0, 417000 <arg_connections_max>
  404b1c:	add	x0, x0, #0x10
  404b20:	ldr	x0, [x0]
  404b24:	ldr	x1, [sp, #48]
  404b28:	mov	x2, x1
  404b2c:	mov	x1, x0
  404b30:	adrp	x0, 405000 <run+0x58>
  404b34:	add	x0, x0, #0xa98
  404b38:	bl	401d00 <printf@plt>
  404b3c:	mov	w19, #0x0                   	// #0
  404b40:	add	x0, sp, #0x30
  404b44:	bl	401f68 <freep>
  404b48:	mov	w1, w19
  404b4c:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  404b50:	add	x0, x0, #0xba8
  404b54:	ldr	x2, [sp, #56]
  404b58:	ldr	x0, [x0]
  404b5c:	eor	x0, x2, x0
  404b60:	cmp	x0, #0x0
  404b64:	b.eq	404b6c <help+0xc8>  // b.none
  404b68:	bl	401ba0 <__stack_chk_fail@plt>
  404b6c:	mov	w0, w1
  404b70:	ldr	x19, [sp, #16]
  404b74:	ldp	x29, x30, [sp], #64
  404b78:	ret

0000000000404b7c <parse_argv>:
  404b7c:	stp	x29, x30, [sp, #-96]!
  404b80:	mov	x29, sp
  404b84:	str	w0, [sp, #28]
  404b88:	str	x1, [sp, #16]
  404b8c:	ldr	w0, [sp, #28]
  404b90:	lsr	w0, w0, #31
  404b94:	and	w0, w0, #0xff
  404b98:	and	x0, x0, #0xff
  404b9c:	cmp	x0, #0x0
  404ba0:	b.eq	404bcc <parse_argv+0x50>  // b.none
  404ba4:	adrp	x0, 405000 <run+0x58>
  404ba8:	add	x1, x0, #0x58b
  404bac:	adrp	x0, 405000 <run+0x58>
  404bb0:	add	x4, x0, #0xfa8
  404bb4:	mov	w3, #0x23d                 	// #573
  404bb8:	mov	x2, x1
  404bbc:	adrp	x0, 405000 <run+0x58>
  404bc0:	add	x1, x0, #0xbc8
  404bc4:	mov	w0, #0x0                   	// #0
  404bc8:	bl	401af0 <log_assert_failed_realm@plt>
  404bcc:	ldr	x0, [sp, #16]
  404bd0:	cmp	x0, #0x0
  404bd4:	cset	w0, eq  // eq = none
  404bd8:	and	w0, w0, #0xff
  404bdc:	and	x0, x0, #0xff
  404be0:	cmp	x0, #0x0
  404be4:	b.eq	404df4 <parse_argv+0x278>  // b.none
  404be8:	adrp	x0, 405000 <run+0x58>
  404bec:	add	x1, x0, #0x58b
  404bf0:	adrp	x0, 405000 <run+0x58>
  404bf4:	add	x4, x0, #0xfa8
  404bf8:	mov	w3, #0x23e                 	// #574
  404bfc:	mov	x2, x1
  404c00:	adrp	x0, 405000 <run+0x58>
  404c04:	add	x1, x0, #0xbd8
  404c08:	mov	w0, #0x0                   	// #0
  404c0c:	bl	401af0 <log_assert_failed_realm@plt>
  404c10:	ldr	w0, [sp, #40]
  404c14:	cmp	w0, #0x100
  404c18:	b.eq	404c64 <parse_argv+0xe8>  // b.none
  404c1c:	ldr	w0, [sp, #40]
  404c20:	cmp	w0, #0x100
  404c24:	b.gt	404dcc <parse_argv+0x250>
  404c28:	ldr	w0, [sp, #40]
  404c2c:	cmp	w0, #0x68
  404c30:	b.eq	404c5c <parse_argv+0xe0>  // b.none
  404c34:	ldr	w0, [sp, #40]
  404c38:	cmp	w0, #0x68
  404c3c:	b.gt	404dcc <parse_argv+0x250>
  404c40:	ldr	w0, [sp, #40]
  404c44:	cmp	w0, #0x3f
  404c48:	b.eq	404dc4 <parse_argv+0x248>  // b.none
  404c4c:	ldr	w0, [sp, #40]
  404c50:	cmp	w0, #0x63
  404c54:	b.eq	404c6c <parse_argv+0xf0>  // b.none
  404c58:	b	404dcc <parse_argv+0x250>
  404c5c:	bl	404aa4 <help>
  404c60:	b	404fa0 <parse_argv+0x424>
  404c64:	bl	401bd0 <version@plt>
  404c68:	b	404fa0 <parse_argv+0x424>
  404c6c:	adrp	x0, 417000 <arg_connections_max>
  404c70:	add	x0, x0, #0x20
  404c74:	ldr	x2, [x0]
  404c78:	adrp	x0, 417000 <arg_connections_max>
  404c7c:	add	x1, x0, #0x0
  404c80:	mov	x0, x2
  404c84:	bl	402178 <safe_atou>
  404c88:	str	w0, [sp, #68]
  404c8c:	ldr	w0, [sp, #68]
  404c90:	cmp	w0, #0x0
  404c94:	b.ge	404d24 <parse_argv+0x1a8>  // b.tcont
  404c98:	mov	w0, #0x3                   	// #3
  404c9c:	str	w0, [sp, #84]
  404ca0:	str	wzr, [sp, #88]
  404ca4:	str	wzr, [sp, #92]
  404ca8:	ldr	w0, [sp, #92]
  404cac:	bl	401d50 <log_get_max_level_realm@plt>
  404cb0:	mov	w1, w0
  404cb4:	ldr	w0, [sp, #84]
  404cb8:	and	w0, w0, #0x7
  404cbc:	cmp	w1, w0
  404cc0:	b.lt	404d14 <parse_argv+0x198>  // b.tstop
  404cc4:	ldr	w0, [sp, #92]
  404cc8:	lsl	w1, w0, #10
  404ccc:	ldr	w0, [sp, #84]
  404cd0:	orr	w7, w1, w0
  404cd4:	adrp	x0, 405000 <run+0x58>
  404cd8:	add	x1, x0, #0x58b
  404cdc:	adrp	x0, 417000 <arg_connections_max>
  404ce0:	add	x0, x0, #0x20
  404ce4:	ldr	x0, [x0]
  404ce8:	mov	x6, x0
  404cec:	adrp	x0, 405000 <run+0x58>
  404cf0:	add	x5, x0, #0xbe0
  404cf4:	adrp	x0, 405000 <run+0x58>
  404cf8:	add	x4, x0, #0xfb8
  404cfc:	mov	w3, #0x24d                 	// #589
  404d00:	mov	x2, x1
  404d04:	ldr	w1, [sp, #88]
  404d08:	mov	w0, w7
  404d0c:	bl	401c40 <log_internal_realm@plt>
  404d10:	b	404d1c <parse_argv+0x1a0>
  404d14:	ldr	w0, [sp, #88]
  404d18:	cmp	w0, #0x0
  404d1c:	ldr	w0, [sp, #68]
  404d20:	b	404fa0 <parse_argv+0x424>
  404d24:	adrp	x0, 417000 <arg_connections_max>
  404d28:	add	x0, x0, #0x0
  404d2c:	ldr	w0, [x0]
  404d30:	cmp	w0, #0x0
  404d34:	b.ne	404df4 <parse_argv+0x278>  // b.any
  404d38:	mov	w0, #0x3                   	// #3
  404d3c:	str	w0, [sp, #72]
  404d40:	mov	w0, #0x16                  	// #22
  404d44:	movk	w0, #0x4000, lsl #16
  404d48:	str	w0, [sp, #76]
  404d4c:	str	wzr, [sp, #80]
  404d50:	ldr	w0, [sp, #80]
  404d54:	bl	401d50 <log_get_max_level_realm@plt>
  404d58:	mov	w1, w0
  404d5c:	ldr	w0, [sp, #72]
  404d60:	and	w0, w0, #0x7
  404d64:	cmp	w1, w0
  404d68:	b.lt	404dac <parse_argv+0x230>  // b.tstop
  404d6c:	ldr	w0, [sp, #80]
  404d70:	lsl	w1, w0, #10
  404d74:	ldr	w0, [sp, #72]
  404d78:	orr	w6, w1, w0
  404d7c:	adrp	x0, 405000 <run+0x58>
  404d80:	add	x1, x0, #0x58b
  404d84:	adrp	x0, 405000 <run+0x58>
  404d88:	add	x5, x0, #0xc10
  404d8c:	adrp	x0, 405000 <run+0x58>
  404d90:	add	x4, x0, #0xfb8
  404d94:	mov	w3, #0x252                 	// #594
  404d98:	mov	x2, x1
  404d9c:	ldr	w1, [sp, #76]
  404da0:	mov	w0, w6
  404da4:	bl	401c40 <log_internal_realm@plt>
  404da8:	b	404fa0 <parse_argv+0x424>
  404dac:	ldr	w0, [sp, #76]
  404db0:	cmp	w0, #0x0
  404db4:	cneg	w0, w0, lt  // lt = tstop
  404db8:	and	w0, w0, #0xff
  404dbc:	neg	w0, w0
  404dc0:	b	404fa0 <parse_argv+0x424>
  404dc4:	mov	w0, #0xffffffea            	// #-22
  404dc8:	b	404fa0 <parse_argv+0x424>
  404dcc:	adrp	x0, 405000 <run+0x58>
  404dd0:	add	x1, x0, #0x58b
  404dd4:	adrp	x0, 405000 <run+0x58>
  404dd8:	add	x4, x0, #0xfa8
  404ddc:	mov	w3, #0x25b                 	// #603
  404de0:	mov	x2, x1
  404de4:	adrp	x0, 405000 <run+0x58>
  404de8:	add	x1, x0, #0xc30
  404dec:	mov	w0, #0x0                   	// #0
  404df0:	bl	401b30 <log_assert_failed_unreachable_realm@plt>
  404df4:	mov	x4, #0x0                   	// #0
  404df8:	adrp	x0, 405000 <run+0x58>
  404dfc:	add	x3, x0, #0xfc8
  404e00:	adrp	x0, 405000 <run+0x58>
  404e04:	add	x2, x0, #0xc48
  404e08:	ldr	x1, [sp, #16]
  404e0c:	ldr	w0, [sp, #28]
  404e10:	bl	401b10 <getopt_long@plt>
  404e14:	str	w0, [sp, #40]
  404e18:	ldr	w0, [sp, #40]
  404e1c:	cmp	w0, #0x0
  404e20:	b.ge	404c10 <parse_argv+0x94>  // b.tcont
  404e24:	adrp	x0, 417000 <arg_connections_max>
  404e28:	add	x0, x0, #0x18
  404e2c:	ldr	w0, [x0]
  404e30:	ldr	w1, [sp, #28]
  404e34:	cmp	w1, w0
  404e38:	b.gt	404ec8 <parse_argv+0x34c>
  404e3c:	mov	w0, #0x3                   	// #3
  404e40:	str	w0, [sp, #56]
  404e44:	mov	w0, #0x16                  	// #22
  404e48:	movk	w0, #0x4000, lsl #16
  404e4c:	str	w0, [sp, #60]
  404e50:	str	wzr, [sp, #64]
  404e54:	ldr	w0, [sp, #64]
  404e58:	bl	401d50 <log_get_max_level_realm@plt>
  404e5c:	mov	w1, w0
  404e60:	ldr	w0, [sp, #56]
  404e64:	and	w0, w0, #0x7
  404e68:	cmp	w1, w0
  404e6c:	b.lt	404eb0 <parse_argv+0x334>  // b.tstop
  404e70:	ldr	w0, [sp, #64]
  404e74:	lsl	w1, w0, #10
  404e78:	ldr	w0, [sp, #56]
  404e7c:	orr	w6, w1, w0
  404e80:	adrp	x0, 405000 <run+0x58>
  404e84:	add	x1, x0, #0x58b
  404e88:	adrp	x0, 405000 <run+0x58>
  404e8c:	add	x5, x0, #0xc50
  404e90:	adrp	x0, 405000 <run+0x58>
  404e94:	add	x4, x0, #0xfb8
  404e98:	mov	w3, #0x25f                 	// #607
  404e9c:	mov	x2, x1
  404ea0:	ldr	w1, [sp, #60]
  404ea4:	mov	w0, w6
  404ea8:	bl	401c40 <log_internal_realm@plt>
  404eac:	b	404fa0 <parse_argv+0x424>
  404eb0:	ldr	w0, [sp, #60]
  404eb4:	cmp	w0, #0x0
  404eb8:	cneg	w0, w0, lt  // lt = tstop
  404ebc:	and	w0, w0, #0xff
  404ec0:	neg	w0, w0
  404ec4:	b	404fa0 <parse_argv+0x424>
  404ec8:	adrp	x0, 417000 <arg_connections_max>
  404ecc:	add	x0, x0, #0x18
  404ed0:	ldr	w0, [x0]
  404ed4:	add	w0, w0, #0x1
  404ed8:	ldr	w1, [sp, #28]
  404edc:	cmp	w1, w0
  404ee0:	b.eq	404f70 <parse_argv+0x3f4>  // b.none
  404ee4:	mov	w0, #0x3                   	// #3
  404ee8:	str	w0, [sp, #44]
  404eec:	mov	w0, #0x16                  	// #22
  404ef0:	movk	w0, #0x4000, lsl #16
  404ef4:	str	w0, [sp, #48]
  404ef8:	str	wzr, [sp, #52]
  404efc:	ldr	w0, [sp, #52]
  404f00:	bl	401d50 <log_get_max_level_realm@plt>
  404f04:	mov	w1, w0
  404f08:	ldr	w0, [sp, #44]
  404f0c:	and	w0, w0, #0x7
  404f10:	cmp	w1, w0
  404f14:	b.lt	404f58 <parse_argv+0x3dc>  // b.tstop
  404f18:	ldr	w0, [sp, #52]
  404f1c:	lsl	w1, w0, #10
  404f20:	ldr	w0, [sp, #44]
  404f24:	orr	w6, w1, w0
  404f28:	adrp	x0, 405000 <run+0x58>
  404f2c:	add	x1, x0, #0x58b
  404f30:	adrp	x0, 405000 <run+0x58>
  404f34:	add	x5, x0, #0xc68
  404f38:	adrp	x0, 405000 <run+0x58>
  404f3c:	add	x4, x0, #0xfb8
  404f40:	mov	w3, #0x263                 	// #611
  404f44:	mov	x2, x1
  404f48:	ldr	w1, [sp, #48]
  404f4c:	mov	w0, w6
  404f50:	bl	401c40 <log_internal_realm@plt>
  404f54:	b	404fa0 <parse_argv+0x424>
  404f58:	ldr	w0, [sp, #48]
  404f5c:	cmp	w0, #0x0
  404f60:	cneg	w0, w0, lt  // lt = tstop
  404f64:	and	w0, w0, #0xff
  404f68:	neg	w0, w0
  404f6c:	b	404fa0 <parse_argv+0x424>
  404f70:	adrp	x0, 417000 <arg_connections_max>
  404f74:	add	x0, x0, #0x18
  404f78:	ldr	w0, [x0]
  404f7c:	sxtw	x0, w0
  404f80:	lsl	x0, x0, #3
  404f84:	ldr	x1, [sp, #16]
  404f88:	add	x0, x1, x0
  404f8c:	ldr	x1, [x0]
  404f90:	adrp	x0, 417000 <arg_connections_max>
  404f94:	add	x0, x0, #0x30
  404f98:	str	x1, [x0]
  404f9c:	mov	w0, #0x1                   	// #1
  404fa0:	ldp	x29, x30, [sp], #96
  404fa4:	ret

0000000000404fa8 <run>:
  404fa8:	stp	x29, x30, [sp, #-176]!
  404fac:	mov	x29, sp
  404fb0:	str	x19, [sp, #16]
  404fb4:	str	w0, [sp, #44]
  404fb8:	str	x1, [sp, #32]
  404fbc:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  404fc0:	add	x0, x0, #0xba8
  404fc4:	ldr	x1, [x0]
  404fc8:	str	x1, [sp, #168]
  404fcc:	mov	x1, #0x0                   	// #0
  404fd0:	stp	xzr, xzr, [sp, #136]
  404fd4:	stp	xzr, xzr, [sp, #152]
  404fd8:	mov	w0, #0x0                   	// #0
  404fdc:	bl	401a30 <log_parse_environment_realm@plt>
  404fe0:	bl	401d30 <log_open@plt>
  404fe4:	ldr	x1, [sp, #32]
  404fe8:	ldr	w0, [sp, #44]
  404fec:	bl	404b7c <parse_argv>
  404ff0:	str	w0, [sp, #56]
  404ff4:	ldr	w0, [sp, #56]
  404ff8:	cmp	w0, #0x0
  404ffc:	b.gt	405008 <run+0x60>
  405000:	ldr	w19, [sp, #56]
  405004:	b	40544c <run+0x4a4>
  405008:	add	x0, sp, #0x88
  40500c:	bl	401a50 <sd_event_default@plt>
  405010:	str	w0, [sp, #56]
  405014:	ldr	w0, [sp, #56]
  405018:	cmp	w0, #0x0
  40501c:	b.ge	4050ac <run+0x104>  // b.tcont
  405020:	mov	w0, #0x3                   	// #3
  405024:	str	w0, [sp, #124]
  405028:	ldr	w0, [sp, #56]
  40502c:	str	w0, [sp, #128]
  405030:	str	wzr, [sp, #132]
  405034:	ldr	w0, [sp, #132]
  405038:	bl	401d50 <log_get_max_level_realm@plt>
  40503c:	mov	w1, w0
  405040:	ldr	w0, [sp, #124]
  405044:	and	w0, w0, #0x7
  405048:	cmp	w1, w0
  40504c:	b.lt	405094 <run+0xec>  // b.tstop
  405050:	ldr	w0, [sp, #132]
  405054:	lsl	w1, w0, #10
  405058:	ldr	w0, [sp, #124]
  40505c:	orr	w6, w1, w0
  405060:	adrp	x0, 405000 <run+0x58>
  405064:	add	x1, x0, #0x58b
  405068:	adrp	x0, 405000 <run+0x58>
  40506c:	add	x5, x0, #0xc80
  405070:	adrp	x0, 406000 <options.11901+0x38>
  405074:	add	x4, x0, #0x48
  405078:	mov	w3, #0x277                 	// #631
  40507c:	mov	x2, x1
  405080:	ldr	w1, [sp, #128]
  405084:	mov	w0, w6
  405088:	bl	401c40 <log_internal_realm@plt>
  40508c:	mov	w19, w0
  405090:	b	40544c <run+0x4a4>
  405094:	ldr	w0, [sp, #128]
  405098:	cmp	w0, #0x0
  40509c:	cneg	w0, w0, lt  // lt = tstop
  4050a0:	and	w0, w0, #0xff
  4050a4:	neg	w19, w0
  4050a8:	b	40544c <run+0x4a4>
  4050ac:	add	x0, sp, #0x88
  4050b0:	add	x0, x0, #0x8
  4050b4:	bl	401bf0 <sd_resolve_default@plt>
  4050b8:	str	w0, [sp, #56]
  4050bc:	ldr	w0, [sp, #56]
  4050c0:	cmp	w0, #0x0
  4050c4:	b.ge	405154 <run+0x1ac>  // b.tcont
  4050c8:	mov	w0, #0x3                   	// #3
  4050cc:	str	w0, [sp, #112]
  4050d0:	ldr	w0, [sp, #56]
  4050d4:	str	w0, [sp, #116]
  4050d8:	str	wzr, [sp, #120]
  4050dc:	ldr	w0, [sp, #120]
  4050e0:	bl	401d50 <log_get_max_level_realm@plt>
  4050e4:	mov	w1, w0
  4050e8:	ldr	w0, [sp, #112]
  4050ec:	and	w0, w0, #0x7
  4050f0:	cmp	w1, w0
  4050f4:	b.lt	40513c <run+0x194>  // b.tstop
  4050f8:	ldr	w0, [sp, #120]
  4050fc:	lsl	w1, w0, #10
  405100:	ldr	w0, [sp, #112]
  405104:	orr	w6, w1, w0
  405108:	adrp	x0, 405000 <run+0x58>
  40510c:	add	x1, x0, #0x58b
  405110:	adrp	x0, 405000 <run+0x58>
  405114:	add	x5, x0, #0xca8
  405118:	adrp	x0, 406000 <options.11901+0x38>
  40511c:	add	x4, x0, #0x48
  405120:	mov	w3, #0x27b                 	// #635
  405124:	mov	x2, x1
  405128:	ldr	w1, [sp, #116]
  40512c:	mov	w0, w6
  405130:	bl	401c40 <log_internal_realm@plt>
  405134:	mov	w19, w0
  405138:	b	40544c <run+0x4a4>
  40513c:	ldr	w0, [sp, #116]
  405140:	cmp	w0, #0x0
  405144:	cneg	w0, w0, lt  // lt = tstop
  405148:	and	w0, w0, #0xff
  40514c:	neg	w19, w0
  405150:	b	40544c <run+0x4a4>
  405154:	ldr	x0, [sp, #144]
  405158:	ldr	x1, [sp, #136]
  40515c:	mov	x2, #0x0                   	// #0
  405160:	bl	401c10 <sd_resolve_attach_event@plt>
  405164:	str	w0, [sp, #56]
  405168:	ldr	w0, [sp, #56]
  40516c:	cmp	w0, #0x0
  405170:	b.ge	405200 <run+0x258>  // b.tcont
  405174:	mov	w0, #0x3                   	// #3
  405178:	str	w0, [sp, #100]
  40517c:	ldr	w0, [sp, #56]
  405180:	str	w0, [sp, #104]
  405184:	str	wzr, [sp, #108]
  405188:	ldr	w0, [sp, #108]
  40518c:	bl	401d50 <log_get_max_level_realm@plt>
  405190:	mov	w1, w0
  405194:	ldr	w0, [sp, #100]
  405198:	and	w0, w0, #0x7
  40519c:	cmp	w1, w0
  4051a0:	b.lt	4051e8 <run+0x240>  // b.tstop
  4051a4:	ldr	w0, [sp, #108]
  4051a8:	lsl	w1, w0, #10
  4051ac:	ldr	w0, [sp, #100]
  4051b0:	orr	w6, w1, w0
  4051b4:	adrp	x0, 405000 <run+0x58>
  4051b8:	add	x1, x0, #0x58b
  4051bc:	adrp	x0, 405000 <run+0x58>
  4051c0:	add	x5, x0, #0xcc8
  4051c4:	adrp	x0, 406000 <options.11901+0x38>
  4051c8:	add	x4, x0, #0x48
  4051cc:	mov	w3, #0x27f                 	// #639
  4051d0:	mov	x2, x1
  4051d4:	ldr	w1, [sp, #104]
  4051d8:	mov	w0, w6
  4051dc:	bl	401c40 <log_internal_realm@plt>
  4051e0:	mov	w19, w0
  4051e4:	b	40544c <run+0x4a4>
  4051e8:	ldr	w0, [sp, #104]
  4051ec:	cmp	w0, #0x0
  4051f0:	cneg	w0, w0, lt  // lt = tstop
  4051f4:	and	w0, w0, #0xff
  4051f8:	neg	w19, w0
  4051fc:	b	40544c <run+0x4a4>
  405200:	ldr	x0, [sp, #136]
  405204:	mov	w1, #0x1                   	// #1
  405208:	bl	4019f0 <sd_event_set_watchdog@plt>
  40520c:	mov	w0, #0x1                   	// #1
  405210:	bl	401b40 <sd_listen_fds@plt>
  405214:	str	w0, [sp, #56]
  405218:	ldr	w0, [sp, #56]
  40521c:	cmp	w0, #0x0
  405220:	b.ge	4052b0 <run+0x308>  // b.tcont
  405224:	mov	w0, #0x3                   	// #3
  405228:	str	w0, [sp, #88]
  40522c:	ldr	w0, [sp, #56]
  405230:	str	w0, [sp, #92]
  405234:	str	wzr, [sp, #96]
  405238:	ldr	w0, [sp, #96]
  40523c:	bl	401d50 <log_get_max_level_realm@plt>
  405240:	mov	w1, w0
  405244:	ldr	w0, [sp, #88]
  405248:	and	w0, w0, #0x7
  40524c:	cmp	w1, w0
  405250:	b.lt	405298 <run+0x2f0>  // b.tstop
  405254:	ldr	w0, [sp, #96]
  405258:	lsl	w1, w0, #10
  40525c:	ldr	w0, [sp, #88]
  405260:	orr	w6, w1, w0
  405264:	adrp	x0, 405000 <run+0x58>
  405268:	add	x1, x0, #0x58b
  40526c:	adrp	x0, 405000 <run+0x58>
  405270:	add	x5, x0, #0xce8
  405274:	adrp	x0, 406000 <options.11901+0x38>
  405278:	add	x4, x0, #0x48
  40527c:	mov	w3, #0x285                 	// #645
  405280:	mov	x2, x1
  405284:	ldr	w1, [sp, #92]
  405288:	mov	w0, w6
  40528c:	bl	401c40 <log_internal_realm@plt>
  405290:	mov	w19, w0
  405294:	b	40544c <run+0x4a4>
  405298:	ldr	w0, [sp, #92]
  40529c:	cmp	w0, #0x0
  4052a0:	cneg	w0, w0, lt  // lt = tstop
  4052a4:	and	w0, w0, #0xff
  4052a8:	neg	w19, w0
  4052ac:	b	40544c <run+0x4a4>
  4052b0:	ldr	w0, [sp, #56]
  4052b4:	cmp	w0, #0x0
  4052b8:	b.ne	40534c <run+0x3a4>  // b.any
  4052bc:	mov	w0, #0x3                   	// #3
  4052c0:	str	w0, [sp, #76]
  4052c4:	mov	w0, #0x16                  	// #22
  4052c8:	movk	w0, #0x4000, lsl #16
  4052cc:	str	w0, [sp, #80]
  4052d0:	str	wzr, [sp, #84]
  4052d4:	ldr	w0, [sp, #84]
  4052d8:	bl	401d50 <log_get_max_level_realm@plt>
  4052dc:	mov	w1, w0
  4052e0:	ldr	w0, [sp, #76]
  4052e4:	and	w0, w0, #0x7
  4052e8:	cmp	w1, w0
  4052ec:	b.lt	405334 <run+0x38c>  // b.tstop
  4052f0:	ldr	w0, [sp, #84]
  4052f4:	lsl	w1, w0, #10
  4052f8:	ldr	w0, [sp, #76]
  4052fc:	orr	w6, w1, w0
  405300:	adrp	x0, 405000 <run+0x58>
  405304:	add	x1, x0, #0x58b
  405308:	adrp	x0, 405000 <run+0x58>
  40530c:	add	x5, x0, #0xd10
  405310:	adrp	x0, 406000 <options.11901+0x38>
  405314:	add	x4, x0, #0x48
  405318:	mov	w3, #0x287                 	// #647
  40531c:	mov	x2, x1
  405320:	ldr	w1, [sp, #80]
  405324:	mov	w0, w6
  405328:	bl	401c40 <log_internal_realm@plt>
  40532c:	mov	w19, w0
  405330:	b	40544c <run+0x4a4>
  405334:	ldr	w0, [sp, #80]
  405338:	cmp	w0, #0x0
  40533c:	cneg	w0, w0, lt  // lt = tstop
  405340:	and	w0, w0, #0xff
  405344:	neg	w19, w0
  405348:	b	40544c <run+0x4a4>
  40534c:	ldr	w0, [sp, #56]
  405350:	str	w0, [sp, #60]
  405354:	mov	w0, #0x3                   	// #3
  405358:	str	w0, [sp, #52]
  40535c:	b	405390 <run+0x3e8>
  405360:	add	x0, sp, #0x88
  405364:	ldr	w1, [sp, #52]
  405368:	bl	404590 <add_listen_socket>
  40536c:	str	w0, [sp, #56]
  405370:	ldr	w0, [sp, #56]
  405374:	cmp	w0, #0x0
  405378:	b.ge	405384 <run+0x3dc>  // b.tcont
  40537c:	ldr	w19, [sp, #56]
  405380:	b	40544c <run+0x4a4>
  405384:	ldr	w0, [sp, #52]
  405388:	add	w0, w0, #0x1
  40538c:	str	w0, [sp, #52]
  405390:	ldr	w0, [sp, #60]
  405394:	add	w0, w0, #0x2
  405398:	ldr	w1, [sp, #52]
  40539c:	cmp	w1, w0
  4053a0:	b.le	405360 <run+0x3b8>
  4053a4:	ldr	x0, [sp, #136]
  4053a8:	bl	401c70 <sd_event_loop@plt>
  4053ac:	str	w0, [sp, #56]
  4053b0:	ldr	w0, [sp, #56]
  4053b4:	cmp	w0, #0x0
  4053b8:	b.ge	405448 <run+0x4a0>  // b.tcont
  4053bc:	mov	w0, #0x3                   	// #3
  4053c0:	str	w0, [sp, #64]
  4053c4:	ldr	w0, [sp, #56]
  4053c8:	str	w0, [sp, #68]
  4053cc:	str	wzr, [sp, #72]
  4053d0:	ldr	w0, [sp, #72]
  4053d4:	bl	401d50 <log_get_max_level_realm@plt>
  4053d8:	mov	w1, w0
  4053dc:	ldr	w0, [sp, #64]
  4053e0:	and	w0, w0, #0x7
  4053e4:	cmp	w1, w0
  4053e8:	b.lt	405430 <run+0x488>  // b.tstop
  4053ec:	ldr	w0, [sp, #72]
  4053f0:	lsl	w1, w0, #10
  4053f4:	ldr	w0, [sp, #64]
  4053f8:	orr	w6, w1, w0
  4053fc:	adrp	x0, 405000 <run+0x58>
  405400:	add	x1, x0, #0x58b
  405404:	adrp	x0, 405000 <run+0x58>
  405408:	add	x5, x0, #0xd38
  40540c:	adrp	x0, 406000 <options.11901+0x38>
  405410:	add	x4, x0, #0x48
  405414:	mov	w3, #0x293                 	// #659
  405418:	mov	x2, x1
  40541c:	ldr	w1, [sp, #68]
  405420:	mov	w0, w6
  405424:	bl	401c40 <log_internal_realm@plt>
  405428:	mov	w19, w0
  40542c:	b	40544c <run+0x4a4>
  405430:	ldr	w0, [sp, #68]
  405434:	cmp	w0, #0x0
  405438:	cneg	w0, w0, lt  // lt = tstop
  40543c:	and	w0, w0, #0xff
  405440:	neg	w19, w0
  405444:	b	40544c <run+0x4a4>
  405448:	mov	w19, #0x0                   	// #0
  40544c:	add	x0, sp, #0x88
  405450:	bl	402304 <context_clear>
  405454:	mov	w1, w19
  405458:	adrp	x0, 416000 <__FRAME_END__+0xf9e8>
  40545c:	add	x0, x0, #0xba8
  405460:	ldr	x2, [sp, #168]
  405464:	ldr	x0, [x0]
  405468:	eor	x0, x2, x0
  40546c:	cmp	x0, #0x0
  405470:	b.eq	405478 <run+0x4d0>  // b.none
  405474:	bl	401ba0 <__stack_chk_fail@plt>
  405478:	mov	w0, w1
  40547c:	ldr	x19, [sp, #16]
  405480:	ldp	x29, x30, [sp], #176
  405484:	ret

0000000000405488 <main>:
  405488:	stp	x29, x30, [sp, #-48]!
  40548c:	mov	x29, sp
  405490:	str	w0, [sp, #28]
  405494:	str	x1, [sp, #16]
  405498:	ldr	x1, [sp, #16]
  40549c:	ldr	w0, [sp, #28]
  4054a0:	bl	402094 <save_argc_argv>
  4054a4:	ldr	x1, [sp, #16]
  4054a8:	ldr	w0, [sp, #28]
  4054ac:	bl	404fa8 <run>
  4054b0:	str	w0, [sp, #44]
  4054b4:	bl	401bc0 <ask_password_agent_close@plt>
  4054b8:	bl	401a10 <polkit_agent_close@plt>
  4054bc:	bl	401be0 <pager_close@plt>
  4054c0:	bl	401cf0 <mac_selinux_finish@plt>
  4054c4:	bl	4020f0 <static_destruct>
  4054c8:	ldr	w0, [sp, #44]
  4054cc:	lsr	w0, w0, #31
  4054d0:	ldp	x29, x30, [sp], #48
  4054d4:	ret

00000000004054d8 <__libc_csu_init>:
  4054d8:	stp	x29, x30, [sp, #-64]!
  4054dc:	mov	x29, sp
  4054e0:	stp	x19, x20, [sp, #16]
  4054e4:	adrp	x20, 416000 <__FRAME_END__+0xf9e8>
  4054e8:	add	x20, x20, #0xba0
  4054ec:	stp	x21, x22, [sp, #32]
  4054f0:	adrp	x21, 416000 <__FRAME_END__+0xf9e8>
  4054f4:	add	x21, x21, #0xb98
  4054f8:	sub	x20, x20, x21
  4054fc:	mov	w22, w0
  405500:	stp	x23, x24, [sp, #48]
  405504:	mov	x23, x1
  405508:	mov	x24, x2
  40550c:	bl	401968 <_init>
  405510:	cmp	xzr, x20, asr #3
  405514:	b.eq	405540 <__libc_csu_init+0x68>  // b.none
  405518:	asr	x20, x20, #3
  40551c:	mov	x19, #0x0                   	// #0
  405520:	ldr	x3, [x21, x19, lsl #3]
  405524:	mov	x2, x24
  405528:	add	x19, x19, #0x1
  40552c:	mov	x1, x23
  405530:	mov	w0, w22
  405534:	blr	x3
  405538:	cmp	x20, x19
  40553c:	b.ne	405520 <__libc_csu_init+0x48>  // b.any
  405540:	ldp	x19, x20, [sp, #16]
  405544:	ldp	x21, x22, [sp, #32]
  405548:	ldp	x23, x24, [sp, #48]
  40554c:	ldp	x29, x30, [sp], #64
  405550:	ret
  405554:	nop

0000000000405558 <__libc_csu_fini>:
  405558:	ret

Disassembly of section .fini:

000000000040555c <_fini>:
  40555c:	stp	x29, x30, [sp, #-16]!
  405560:	mov	x29, sp
  405564:	ldp	x29, x30, [sp], #16
  405568:	ret
