
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_elementtree.cpython-38-aarch64-linux-gnu.so_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000003be8 <.init>:
    3be8:	stp	x29, x30, [sp, #-16]!
    3bec:	mov	x29, sp
    3bf0:	bl	4250 <PySequence_Fast@plt+0x10>
    3bf4:	ldp	x29, x30, [sp], #16
    3bf8:	ret

Disassembly of section .plt:

0000000000003c00 <memcpy@plt-0x20>:
    3c00:	stp	x16, x30, [sp, #-16]!
    3c04:	adrp	x16, 21000 <PyInit__elementtree@@Base+0x13168>
    3c08:	ldr	x17, [x16, #4088]
    3c0c:	add	x16, x16, #0xff8
    3c10:	br	x17
    3c14:	nop
    3c18:	nop
    3c1c:	nop

0000000000003c20 <memcpy@plt>:
    3c20:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c24:	ldr	x17, [x16]
    3c28:	add	x16, x16, #0x0
    3c2c:	br	x17

0000000000003c30 <PyUnicode_FromFormat@plt>:
    3c30:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c34:	ldr	x17, [x16, #8]
    3c38:	add	x16, x16, #0x8
    3c3c:	br	x17

0000000000003c40 <memmove@plt>:
    3c40:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c44:	ldr	x17, [x16, #16]
    3c48:	add	x16, x16, #0x10
    3c4c:	br	x17

0000000000003c50 <PyList_New@plt>:
    3c50:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c54:	ldr	x17, [x16, #24]
    3c58:	add	x16, x16, #0x18
    3c5c:	br	x17

0000000000003c60 <_PyUnicode_Ready@plt>:
    3c60:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c64:	ldr	x17, [x16, #32]
    3c68:	add	x16, x16, #0x20
    3c6c:	br	x17

0000000000003c70 <strlen@plt>:
    3c70:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c74:	ldr	x17, [x16, #40]
    3c78:	add	x16, x16, #0x28
    3c7c:	br	x17

0000000000003c80 <PyDict_Items@plt>:
    3c80:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c84:	ldr	x17, [x16, #48]
    3c88:	add	x16, x16, #0x30
    3c8c:	br	x17

0000000000003c90 <_PyObject_LookupAttrId@plt>:
    3c90:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3c94:	ldr	x17, [x16, #56]
    3c98:	add	x16, x16, #0x38
    3c9c:	br	x17

0000000000003ca0 <_PyBytes_Resize@plt>:
    3ca0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ca4:	ldr	x17, [x16, #64]
    3ca8:	add	x16, x16, #0x40
    3cac:	br	x17

0000000000003cb0 <PyObject_ClearWeakRefs@plt>:
    3cb0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3cb4:	ldr	x17, [x16, #72]
    3cb8:	add	x16, x16, #0x48
    3cbc:	br	x17

0000000000003cc0 <PyNumber_AsSsize_t@plt>:
    3cc0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3cc4:	ldr	x17, [x16, #80]
    3cc8:	add	x16, x16, #0x50
    3ccc:	br	x17

0000000000003cd0 <PyMem_Free@plt>:
    3cd0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3cd4:	ldr	x17, [x16, #88]
    3cd8:	add	x16, x16, #0x58
    3cdc:	br	x17

0000000000003ce0 <PyBuffer_Release@plt>:
    3ce0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ce4:	ldr	x17, [x16, #96]
    3ce8:	add	x16, x16, #0x60
    3cec:	br	x17

0000000000003cf0 <PyNumber_Add@plt>:
    3cf0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3cf4:	ldr	x17, [x16, #104]
    3cf8:	add	x16, x16, #0x68
    3cfc:	br	x17

0000000000003d00 <PyObject_GetAttrString@plt>:
    3d00:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d04:	ldr	x17, [x16, #112]
    3d08:	add	x16, x16, #0x70
    3d0c:	br	x17

0000000000003d10 <__cxa_finalize@plt>:
    3d10:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d14:	ldr	x17, [x16, #120]
    3d18:	add	x16, x16, #0x78
    3d1c:	br	x17

0000000000003d20 <PyUnicode_Join@plt>:
    3d20:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d24:	ldr	x17, [x16, #128]
    3d28:	add	x16, x16, #0x80
    3d2c:	br	x17

0000000000003d30 <PyList_SetSlice@plt>:
    3d30:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d34:	ldr	x17, [x16, #136]
    3d38:	add	x16, x16, #0x88
    3d3c:	br	x17

0000000000003d40 <PyBytes_FromStringAndSize@plt>:
    3d40:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d44:	ldr	x17, [x16, #144]
    3d48:	add	x16, x16, #0x90
    3d4c:	br	x17

0000000000003d50 <PyObject_SetAttrString@plt>:
    3d50:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d54:	ldr	x17, [x16, #152]
    3d58:	add	x16, x16, #0x98
    3d5c:	br	x17

0000000000003d60 <PyErr_WarnEx@plt>:
    3d60:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d64:	ldr	x17, [x16, #160]
    3d68:	add	x16, x16, #0xa0
    3d6c:	br	x17

0000000000003d70 <_Py_Dealloc@plt>:
    3d70:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d74:	ldr	x17, [x16, #168]
    3d78:	add	x16, x16, #0xa8
    3d7c:	br	x17

0000000000003d80 <PyErr_NoMemory@plt>:
    3d80:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d84:	ldr	x17, [x16, #176]
    3d88:	add	x16, x16, #0xb0
    3d8c:	br	x17

0000000000003d90 <PyErr_SetObject@plt>:
    3d90:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3d94:	ldr	x17, [x16, #184]
    3d98:	add	x16, x16, #0xb8
    3d9c:	br	x17

0000000000003da0 <PyObject_GC_Del@plt>:
    3da0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3da4:	ldr	x17, [x16, #192]
    3da8:	add	x16, x16, #0xc0
    3dac:	br	x17

0000000000003db0 <_PyObject_CallFunction_SizeT@plt>:
    3db0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3db4:	ldr	x17, [x16, #200]
    3db8:	add	x16, x16, #0xc8
    3dbc:	br	x17

0000000000003dc0 <PyObject_GC_Track@plt>:
    3dc0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3dc4:	ldr	x17, [x16, #208]
    3dc8:	add	x16, x16, #0xd0
    3dcc:	br	x17

0000000000003dd0 <_PyArg_UnpackKeywords@plt>:
    3dd0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3dd4:	ldr	x17, [x16, #216]
    3dd8:	add	x16, x16, #0xd8
    3ddc:	br	x17

0000000000003de0 <PyErr_SetString@plt>:
    3de0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3de4:	ldr	x17, [x16, #224]
    3de8:	add	x16, x16, #0xe0
    3dec:	br	x17

0000000000003df0 <_PyObject_GC_New@plt>:
    3df0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3df4:	ldr	x17, [x16, #232]
    3df8:	add	x16, x16, #0xe8
    3dfc:	br	x17

0000000000003e00 <PyObject_Malloc@plt>:
    3e00:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e04:	ldr	x17, [x16, #240]
    3e08:	add	x16, x16, #0xf0
    3e0c:	br	x17

0000000000003e10 <PyModule_GetState@plt>:
    3e10:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e14:	ldr	x17, [x16, #248]
    3e18:	add	x16, x16, #0xf8
    3e1c:	br	x17

0000000000003e20 <PyUnicode_AsEncodedString@plt>:
    3e20:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e24:	ldr	x17, [x16, #256]
    3e28:	add	x16, x16, #0x100
    3e2c:	br	x17

0000000000003e30 <PyMem_Realloc@plt>:
    3e30:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e34:	ldr	x17, [x16, #264]
    3e38:	add	x16, x16, #0x108
    3e3c:	br	x17

0000000000003e40 <PyErr_SetNone@plt>:
    3e40:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e44:	ldr	x17, [x16, #272]
    3e48:	add	x16, x16, #0x110
    3e4c:	br	x17

0000000000003e50 <PyErr_ExceptionMatches@plt>:
    3e50:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e54:	ldr	x17, [x16, #280]
    3e58:	add	x16, x16, #0x118
    3e5c:	br	x17

0000000000003e60 <PyObject_Free@plt>:
    3e60:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e64:	ldr	x17, [x16, #288]
    3e68:	add	x16, x16, #0x120
    3e6c:	br	x17

0000000000003e70 <PyLong_FromSsize_t@plt>:
    3e70:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e74:	ldr	x17, [x16, #296]
    3e78:	add	x16, x16, #0x128
    3e7c:	br	x17

0000000000003e80 <PyCapsule_Import@plt>:
    3e80:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e84:	ldr	x17, [x16, #304]
    3e88:	add	x16, x16, #0x130
    3e8c:	br	x17

0000000000003e90 <PyType_Ready@plt>:
    3e90:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3e94:	ldr	x17, [x16, #312]
    3e98:	add	x16, x16, #0x138
    3e9c:	br	x17

0000000000003ea0 <PyLong_FromLong@plt>:
    3ea0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ea4:	ldr	x17, [x16, #320]
    3ea8:	add	x16, x16, #0x140
    3eac:	br	x17

0000000000003eb0 <PyLong_AsSsize_t@plt>:
    3eb0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3eb4:	ldr	x17, [x16, #328]
    3eb8:	add	x16, x16, #0x148
    3ebc:	br	x17

0000000000003ec0 <PyObject_RichCompareBool@plt>:
    3ec0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ec4:	ldr	x17, [x16, #336]
    3ec8:	add	x16, x16, #0x150
    3ecc:	br	x17

0000000000003ed0 <_PyArg_BadArgument@plt>:
    3ed0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ed4:	ldr	x17, [x16, #344]
    3ed8:	add	x16, x16, #0x158
    3edc:	br	x17

0000000000003ee0 <PyErr_NewException@plt>:
    3ee0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ee4:	ldr	x17, [x16, #352]
    3ee8:	add	x16, x16, #0x160
    3eec:	br	x17

0000000000003ef0 <PyErr_Clear@plt>:
    3ef0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ef4:	ldr	x17, [x16, #360]
    3ef8:	add	x16, x16, #0x168
    3efc:	br	x17

0000000000003f00 <PyList_Append@plt>:
    3f00:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f04:	ldr	x17, [x16, #368]
    3f08:	add	x16, x16, #0x170
    3f0c:	br	x17

0000000000003f10 <PySlice_AdjustIndices@plt>:
    3f10:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f14:	ldr	x17, [x16, #376]
    3f18:	add	x16, x16, #0x178
    3f1c:	br	x17

0000000000003f20 <PyDict_Update@plt>:
    3f20:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f24:	ldr	x17, [x16, #384]
    3f28:	add	x16, x16, #0x180
    3f2c:	br	x17

0000000000003f30 <__gmon_start__@plt>:
    3f30:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f34:	ldr	x17, [x16, #392]
    3f38:	add	x16, x16, #0x188
    3f3c:	br	x17

0000000000003f40 <PyTuple_New@plt>:
    3f40:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f44:	ldr	x17, [x16, #400]
    3f48:	add	x16, x16, #0x190
    3f4c:	br	x17

0000000000003f50 <PyThreadState_Get@plt>:
    3f50:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f54:	ldr	x17, [x16, #408]
    3f58:	add	x16, x16, #0x198
    3f5c:	br	x17

0000000000003f60 <_PyArg_CheckPositional@plt>:
    3f60:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f64:	ldr	x17, [x16, #416]
    3f68:	add	x16, x16, #0x1a0
    3f6c:	br	x17

0000000000003f70 <PyDict_DelItem@plt>:
    3f70:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f74:	ldr	x17, [x16, #424]
    3f78:	add	x16, x16, #0x1a8
    3f7c:	br	x17

0000000000003f80 <PyErr_Occurred@plt>:
    3f80:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f84:	ldr	x17, [x16, #432]
    3f88:	add	x16, x16, #0x1b0
    3f8c:	br	x17

0000000000003f90 <PyModule_Create2@plt>:
    3f90:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3f94:	ldr	x17, [x16, #440]
    3f98:	add	x16, x16, #0x1b8
    3f9c:	br	x17

0000000000003fa0 <PyImport_ImportModule@plt>:
    3fa0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3fa4:	ldr	x17, [x16, #448]
    3fa8:	add	x16, x16, #0x1c0
    3fac:	br	x17

0000000000003fb0 <PyList_SetItem@plt>:
    3fb0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3fb4:	ldr	x17, [x16, #456]
    3fb8:	add	x16, x16, #0x1c8
    3fbc:	br	x17

0000000000003fc0 <PyState_FindModule@plt>:
    3fc0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3fc4:	ldr	x17, [x16, #464]
    3fc8:	add	x16, x16, #0x1d0
    3fcc:	br	x17

0000000000003fd0 <PyObject_CallFunctionObjArgs@plt>:
    3fd0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3fd4:	ldr	x17, [x16, #472]
    3fd8:	add	x16, x16, #0x1d8
    3fdc:	br	x17

0000000000003fe0 <Py_ReprEnter@plt>:
    3fe0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3fe4:	ldr	x17, [x16, #480]
    3fe8:	add	x16, x16, #0x1e0
    3fec:	br	x17

0000000000003ff0 <strcmp@plt>:
    3ff0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    3ff4:	ldr	x17, [x16, #488]
    3ff8:	add	x16, x16, #0x1e8
    3ffc:	br	x17

0000000000004000 <_PyObject_SetAttrId@plt>:
    4000:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4004:	ldr	x17, [x16, #496]
    4008:	add	x16, x16, #0x1f0
    400c:	br	x17

0000000000004010 <_PyArg_ParseTuple_SizeT@plt>:
    4010:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4014:	ldr	x17, [x16, #504]
    4018:	add	x16, x16, #0x1f8
    401c:	br	x17

0000000000004020 <_Py_CheckFunctionResult@plt>:
    4020:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4024:	ldr	x17, [x16, #512]
    4028:	add	x16, x16, #0x200
    402c:	br	x17

0000000000004030 <PyUnicode_DecodeUTF8@plt>:
    4030:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4034:	ldr	x17, [x16, #520]
    4038:	add	x16, x16, #0x208
    403c:	br	x17

0000000000004040 <_PyTrash_thread_deposit_object@plt>:
    4040:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4044:	ldr	x17, [x16, #528]
    4048:	add	x16, x16, #0x210
    404c:	br	x17

0000000000004050 <PyObject_IsTrue@plt>:
    4050:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4054:	ldr	x17, [x16, #536]
    4058:	add	x16, x16, #0x218
    405c:	br	x17

0000000000004060 <PyObject_Realloc@plt>:
    4060:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4064:	ldr	x17, [x16, #544]
    4068:	add	x16, x16, #0x220
    406c:	br	x17

0000000000004070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    4070:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4074:	ldr	x17, [x16, #552]
    4078:	add	x16, x16, #0x228
    407c:	br	x17

0000000000004080 <PyDict_New@plt>:
    4080:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4084:	ldr	x17, [x16, #560]
    4088:	add	x16, x16, #0x230
    408c:	br	x17

0000000000004090 <PyCallable_Check@plt>:
    4090:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4094:	ldr	x17, [x16, #568]
    4098:	add	x16, x16, #0x238
    409c:	br	x17

00000000000040a0 <PyObject_GetBuffer@plt>:
    40a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    40a4:	ldr	x17, [x16, #576]
    40a8:	add	x16, x16, #0x240
    40ac:	br	x17

00000000000040b0 <PyDict_Next@plt>:
    40b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    40b4:	ldr	x17, [x16, #584]
    40b8:	add	x16, x16, #0x248
    40bc:	br	x17

00000000000040c0 <PyUnicode_AsUTF8@plt>:
    40c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    40c4:	ldr	x17, [x16, #592]
    40c8:	add	x16, x16, #0x250
    40cc:	br	x17

00000000000040d0 <strncat@plt>:
    40d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    40d4:	ldr	x17, [x16, #600]
    40d8:	add	x16, x16, #0x258
    40dc:	br	x17

00000000000040e0 <PyDict_Keys@plt>:
    40e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    40e4:	ldr	x17, [x16, #608]
    40e8:	add	x16, x16, #0x260
    40ec:	br	x17

00000000000040f0 <_PyObject_GetAttrId@plt>:
    40f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    40f4:	ldr	x17, [x16, #616]
    40f8:	add	x16, x16, #0x268
    40fc:	br	x17

0000000000004100 <PyUnicode_FromString@plt>:
    4100:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4104:	ldr	x17, [x16, #624]
    4108:	add	x16, x16, #0x270
    410c:	br	x17

0000000000004110 <_PyObject_CallMethodIdObjArgs@plt>:
    4110:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4114:	ldr	x17, [x16, #632]
    4118:	add	x16, x16, #0x278
    411c:	br	x17

0000000000004120 <PyModule_AddObject@plt>:
    4120:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4124:	ldr	x17, [x16, #640]
    4128:	add	x16, x16, #0x280
    412c:	br	x17

0000000000004130 <PySlice_Unpack@plt>:
    4130:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4134:	ldr	x17, [x16, #648]
    4138:	add	x16, x16, #0x288
    413c:	br	x17

0000000000004140 <PyDict_SetItem@plt>:
    4140:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4144:	ldr	x17, [x16, #656]
    4148:	add	x16, x16, #0x290
    414c:	br	x17

0000000000004150 <PyDict_Copy@plt>:
    4150:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4154:	ldr	x17, [x16, #664]
    4158:	add	x16, x16, #0x298
    415c:	br	x17

0000000000004160 <PyType_IsSubtype@plt>:
    4160:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4164:	ldr	x17, [x16, #672]
    4168:	add	x16, x16, #0x2a0
    416c:	br	x17

0000000000004170 <PyUnicode_AsUTF8AndSize@plt>:
    4170:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4174:	ldr	x17, [x16, #680]
    4178:	add	x16, x16, #0x2a8
    417c:	br	x17

0000000000004180 <PyErr_Format@plt>:
    4180:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4184:	ldr	x17, [x16, #688]
    4188:	add	x16, x16, #0x2b0
    418c:	br	x17

0000000000004190 <_Py_BuildValue_SizeT@plt>:
    4190:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4194:	ldr	x17, [x16, #696]
    4198:	add	x16, x16, #0x2b8
    419c:	br	x17

00000000000041a0 <Py_ReprLeave@plt>:
    41a0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    41a4:	ldr	x17, [x16, #704]
    41a8:	add	x16, x16, #0x2c0
    41ac:	br	x17

00000000000041b0 <PyUnicode_FromStringAndSize@plt>:
    41b0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    41b4:	ldr	x17, [x16, #712]
    41b8:	add	x16, x16, #0x2c8
    41bc:	br	x17

00000000000041c0 <_PyTrash_thread_destroy_chain@plt>:
    41c0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    41c4:	ldr	x17, [x16, #720]
    41c8:	add	x16, x16, #0x2d0
    41cc:	br	x17

00000000000041d0 <_PyObject_MakeTpCall@plt>:
    41d0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    41d4:	ldr	x17, [x16, #728]
    41d8:	add	x16, x16, #0x2d8
    41dc:	br	x17

00000000000041e0 <PyNumber_Index@plt>:
    41e0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    41e4:	ldr	x17, [x16, #736]
    41e8:	add	x16, x16, #0x2e0
    41ec:	br	x17

00000000000041f0 <PyMem_Malloc@plt>:
    41f0:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    41f4:	ldr	x17, [x16, #744]
    41f8:	add	x16, x16, #0x2e8
    41fc:	br	x17

0000000000004200 <PyUnicode_New@plt>:
    4200:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4204:	ldr	x17, [x16, #752]
    4208:	add	x16, x16, #0x2f0
    420c:	br	x17

0000000000004210 <PyTuple_Pack@plt>:
    4210:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4214:	ldr	x17, [x16, #760]
    4218:	add	x16, x16, #0x2f8
    421c:	br	x17

0000000000004220 <PyObject_GC_UnTrack@plt>:
    4220:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4224:	ldr	x17, [x16, #768]
    4228:	add	x16, x16, #0x300
    422c:	br	x17

0000000000004230 <PyDict_GetItemWithError@plt>:
    4230:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4234:	ldr	x17, [x16, #776]
    4238:	add	x16, x16, #0x308
    423c:	br	x17

0000000000004240 <PySequence_Fast@plt>:
    4240:	adrp	x16, 22000 <memcpy@GLIBC_2.17>
    4244:	ldr	x17, [x16, #784]
    4248:	add	x16, x16, #0x310
    424c:	br	x17

Disassembly of section .text:

0000000000004250 <PyInit__elementtree@@Base-0x9c48>:
    4250:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    4254:	ldr	x0, [x0, #3960]
    4258:	cbz	x0, 4260 <PySequence_Fast@plt+0x20>
    425c:	b	3f30 <__gmon_start__@plt>
    4260:	ret
    4264:	nop
    4268:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x15168>
    426c:	add	x0, x0, #0x438
    4270:	adrp	x1, 23000 <PyInit__elementtree@@Base+0x15168>
    4274:	add	x1, x1, #0x438
    4278:	cmp	x1, x0
    427c:	b.eq	4294 <PySequence_Fast@plt+0x54>  // b.none
    4280:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    4284:	ldr	x1, [x1, #3888]
    4288:	cbz	x1, 4294 <PySequence_Fast@plt+0x54>
    428c:	mov	x16, x1
    4290:	br	x16
    4294:	ret
    4298:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x15168>
    429c:	add	x0, x0, #0x438
    42a0:	adrp	x1, 23000 <PyInit__elementtree@@Base+0x15168>
    42a4:	add	x1, x1, #0x438
    42a8:	sub	x1, x1, x0
    42ac:	lsr	x2, x1, #63
    42b0:	add	x1, x2, x1, asr #3
    42b4:	cmp	xzr, x1, asr #1
    42b8:	asr	x1, x1, #1
    42bc:	b.eq	42d4 <PySequence_Fast@plt+0x94>  // b.none
    42c0:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    42c4:	ldr	x2, [x2, #4048]
    42c8:	cbz	x2, 42d4 <PySequence_Fast@plt+0x94>
    42cc:	mov	x16, x2
    42d0:	br	x16
    42d4:	ret
    42d8:	stp	x29, x30, [sp, #-32]!
    42dc:	mov	x29, sp
    42e0:	str	x19, [sp, #16]
    42e4:	adrp	x19, 23000 <PyInit__elementtree@@Base+0x15168>
    42e8:	ldrb	w0, [x19, #1080]
    42ec:	cbnz	w0, 4314 <PySequence_Fast@plt+0xd4>
    42f0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    42f4:	ldr	x0, [x0, #3904]
    42f8:	cbz	x0, 4308 <PySequence_Fast@plt+0xc8>
    42fc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    4300:	ldr	x0, [x0, #800]
    4304:	bl	3d10 <__cxa_finalize@plt>
    4308:	bl	4268 <PySequence_Fast@plt+0x28>
    430c:	mov	w0, #0x1                   	// #1
    4310:	strb	w0, [x19, #1080]
    4314:	ldr	x19, [sp, #16]
    4318:	ldp	x29, x30, [sp], #32
    431c:	ret
    4320:	b	4298 <PySequence_Fast@plt+0x58>
    4324:	nop
    4328:	stp	x29, x30, [sp, #-16]!
    432c:	mov	x1, #0x0                   	// #0
    4330:	mov	x29, sp
    4334:	ldr	x2, [x0, #304]
    4338:	blr	x2
    433c:	cbz	x0, 4360 <PySequence_Fast@plt+0x120>
    4340:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    4344:	str	xzr, [x0, #48]
    4348:	ldr	x1, [x1, #3976]
    434c:	stp	x1, x1, [x0, #16]
    4350:	stp	x1, xzr, [x0, #32]
    4354:	ldr	x2, [x1]
    4358:	add	x2, x2, #0x3
    435c:	str	x2, [x1]
    4360:	ldp	x29, x30, [sp], #16
    4364:	ret
    4368:	mov	x4, x0
    436c:	ldr	x0, [x0, #8]
    4370:	ldr	x1, [x0, #168]
    4374:	tbz	w1, #28, 4430 <PySequence_Fast@plt+0x1f0>
    4378:	ldrb	w0, [x4, #32]
    437c:	ldr	x5, [x4, #16]
    4380:	tbnz	w0, #5, 44ac <PySequence_Fast@plt+0x26c>
    4384:	ldrb	w0, [x4, #32]
    4388:	cmp	x5, #0x2
    438c:	ldr	x3, [x4, #72]
    4390:	ubfx	x0, x0, #2, #3
    4394:	b.le	44cc <PySequence_Fast@plt+0x28c>
    4398:	cmp	w0, #0x1
    439c:	b.eq	4524 <PySequence_Fast@plt+0x2e4>  // b.none
    43a0:	cmp	w0, #0x2
    43a4:	b.eq	45bc <PySequence_Fast@plt+0x37c>  // b.none
    43a8:	ldr	w0, [x3]
    43ac:	cmp	w0, #0x7b
    43b0:	b.ne	44e4 <PySequence_Fast@plt+0x2a4>  // b.any
    43b4:	ldr	w1, [x3, #4]
    43b8:	mov	w0, #0x1                   	// #1
    43bc:	cmp	w1, #0x7d
    43c0:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    43c4:	cmp	w1, #0x2a
    43c8:	b.eq	4650 <PySequence_Fast@plt+0x410>  // b.none
    43cc:	mov	x1, #0x0                   	// #0
    43d0:	mov	w6, #0x5b                  	// #91
    43d4:	b	440c <PySequence_Fast@plt+0x1cc>
    43d8:	cmp	w2, #0x7d
    43dc:	b.eq	45ac <PySequence_Fast@plt+0x36c>  // b.none
    43e0:	sub	w4, w2, #0x2e
    43e4:	cbz	w0, 4400 <PySequence_Fast@plt+0x1c0>
    43e8:	cmp	w2, #0x2a
    43ec:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    43f0:	cmp	w2, #0x40
    43f4:	ccmp	w2, w6, #0x4, ne  // ne = any
    43f8:	ccmp	w4, #0x1, #0x0, ne  // ne = any
    43fc:	b.ls	442c <PySequence_Fast@plt+0x1ec>  // b.plast
    4400:	add	x1, x1, #0x1
    4404:	cmp	x5, x1
    4408:	b.le	4428 <PySequence_Fast@plt+0x1e8>
    440c:	ldr	w2, [x3, x1, lsl #2]
    4410:	cmp	w2, #0x7b
    4414:	b.ne	43d8 <PySequence_Fast@plt+0x198>  // b.any
    4418:	add	x1, x1, #0x1
    441c:	mov	w0, #0x0                   	// #0
    4420:	cmp	x5, x1
    4424:	b.gt	440c <PySequence_Fast@plt+0x1cc>
    4428:	mov	w0, #0x0                   	// #0
    442c:	ret
    4430:	mov	w0, #0x1                   	// #1
    4434:	tbz	w1, #27, 442c <PySequence_Fast@plt+0x1ec>
    4438:	ldr	x5, [x4, #16]
    443c:	cmp	x5, #0x2
    4440:	b.gt	44f0 <PySequence_Fast@plt+0x2b0>
    4444:	cmp	x5, #0x0
    4448:	mov	x1, #0x0                   	// #0
    444c:	b.le	4428 <PySequence_Fast@plt+0x1e8>
    4450:	add	x4, x4, #0x20
    4454:	mov	w6, #0x5b                  	// #91
    4458:	b	4498 <PySequence_Fast@plt+0x258>
    445c:	cmp	w2, #0x7d
    4460:	b.eq	45a4 <PySequence_Fast@plt+0x364>  // b.none
    4464:	sub	w3, w2, #0x2e
    4468:	cmp	w2, #0x40
    446c:	and	w3, w3, #0xff
    4470:	cbz	w0, 448c <PySequence_Fast@plt+0x24c>
    4474:	ccmp	w3, #0x1, #0x0, ne  // ne = any
    4478:	cset	w3, ls  // ls = plast
    447c:	cmp	w2, #0x2a
    4480:	ccmp	w2, w6, #0x4, ne  // ne = any
    4484:	csinc	w2, w3, wzr, ne  // ne = any
    4488:	cbnz	w2, 442c <PySequence_Fast@plt+0x1ec>
    448c:	add	x1, x1, #0x1
    4490:	cmp	x5, x1
    4494:	b.le	4428 <PySequence_Fast@plt+0x1e8>
    4498:	ldrb	w2, [x4, x1]
    449c:	cmp	w2, #0x7b
    44a0:	b.ne	445c <PySequence_Fast@plt+0x21c>  // b.any
    44a4:	mov	w0, #0x0                   	// #0
    44a8:	b	448c <PySequence_Fast@plt+0x24c>
    44ac:	tst	x0, #0x40
    44b0:	add	x3, x4, #0x30
    44b4:	add	x0, x4, #0x48
    44b8:	csel	x3, x0, x3, eq  // eq = none
    44bc:	ldrb	w0, [x4, #32]
    44c0:	cmp	x5, #0x2
    44c4:	ubfx	x0, x0, #2, #3
    44c8:	b.gt	4398 <PySequence_Fast@plt+0x158>
    44cc:	cmp	x5, #0x0
    44d0:	b.le	4428 <PySequence_Fast@plt+0x1e8>
    44d4:	cmp	w0, #0x1
    44d8:	b.eq	4550 <PySequence_Fast@plt+0x310>  // b.none
    44dc:	cmp	w0, #0x2
    44e0:	b.eq	45c8 <PySequence_Fast@plt+0x388>  // b.none
    44e4:	mov	w0, #0x1                   	// #1
    44e8:	mov	x1, #0x0                   	// #0
    44ec:	b	43d0 <PySequence_Fast@plt+0x190>
    44f0:	ldrb	w2, [x4, #32]
    44f4:	mov	x1, #0x0                   	// #0
    44f8:	cmp	w2, #0x7b
    44fc:	b.ne	4450 <PySequence_Fast@plt+0x210>  // b.any
    4500:	ldrb	w2, [x4, #33]
    4504:	cmp	w2, #0x7d
    4508:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    450c:	cmp	w2, #0x2a
    4510:	b.ne	4450 <PySequence_Fast@plt+0x210>  // b.any
    4514:	ldrb	w2, [x4, #34]
    4518:	cmp	w2, #0x7d
    451c:	b.ne	4450 <PySequence_Fast@plt+0x210>  // b.any
    4520:	ret
    4524:	ldrb	w1, [x3]
    4528:	cmp	w1, #0x7b
    452c:	b.ne	4550 <PySequence_Fast@plt+0x310>  // b.any
    4530:	ldrb	w1, [x3, #1]
    4534:	cmp	w1, #0x7d
    4538:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    453c:	cmp	w1, #0x2a
    4540:	b.ne	4550 <PySequence_Fast@plt+0x310>  // b.any
    4544:	ldrb	w1, [x3, #2]
    4548:	cmp	w1, #0x7d
    454c:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    4550:	mov	x1, #0x0                   	// #0
    4554:	mov	w6, #0x40                  	// #64
    4558:	b	4590 <PySequence_Fast@plt+0x350>
    455c:	cmp	w2, #0x7d
    4560:	b.eq	45b4 <PySequence_Fast@plt+0x374>  // b.none
    4564:	sub	w4, w2, #0x2e
    4568:	cbz	w0, 4584 <PySequence_Fast@plt+0x344>
    456c:	cmp	w2, #0x2a
    4570:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    4574:	cmp	w2, #0x5b
    4578:	ccmp	w2, w6, #0x4, ne  // ne = any
    457c:	ccmp	w4, #0x1, #0x0, ne  // ne = any
    4580:	b.ls	442c <PySequence_Fast@plt+0x1ec>  // b.plast
    4584:	add	x1, x1, #0x1
    4588:	cmp	x5, x1
    458c:	b.le	4428 <PySequence_Fast@plt+0x1e8>
    4590:	ldrb	w2, [x3, x1]
    4594:	cmp	w2, #0x7b
    4598:	b.ne	455c <PySequence_Fast@plt+0x31c>  // b.any
    459c:	mov	w0, #0x0                   	// #0
    45a0:	b	4584 <PySequence_Fast@plt+0x344>
    45a4:	mov	w0, #0x1                   	// #1
    45a8:	b	448c <PySequence_Fast@plt+0x24c>
    45ac:	mov	w0, #0x1                   	// #1
    45b0:	b	4400 <PySequence_Fast@plt+0x1c0>
    45b4:	mov	w0, #0x1                   	// #1
    45b8:	b	4584 <PySequence_Fast@plt+0x344>
    45bc:	ldrh	w0, [x3]
    45c0:	cmp	w0, #0x7b
    45c4:	b.eq	4628 <PySequence_Fast@plt+0x3e8>  // b.none
    45c8:	mov	w0, #0x1                   	// #1
    45cc:	mov	x1, #0x0                   	// #0
    45d0:	mov	w6, #0x5b                  	// #91
    45d4:	b	460c <PySequence_Fast@plt+0x3cc>
    45d8:	cmp	w2, #0x7d
    45dc:	b.eq	4620 <PySequence_Fast@plt+0x3e0>  // b.none
    45e0:	sub	w4, w2, #0x2e
    45e4:	cbz	w0, 4600 <PySequence_Fast@plt+0x3c0>
    45e8:	cmp	w2, #0x2a
    45ec:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    45f0:	cmp	w2, #0x40
    45f4:	ccmp	w2, w6, #0x4, ne  // ne = any
    45f8:	ccmp	w4, #0x1, #0x0, ne  // ne = any
    45fc:	b.ls	442c <PySequence_Fast@plt+0x1ec>  // b.plast
    4600:	add	x1, x1, #0x1
    4604:	cmp	x1, x5
    4608:	b.ge	4428 <PySequence_Fast@plt+0x1e8>  // b.tcont
    460c:	ldrh	w2, [x3, x1, lsl #1]
    4610:	cmp	w2, #0x7b
    4614:	b.ne	45d8 <PySequence_Fast@plt+0x398>  // b.any
    4618:	mov	w0, #0x0                   	// #0
    461c:	b	4600 <PySequence_Fast@plt+0x3c0>
    4620:	mov	w0, #0x1                   	// #1
    4624:	b	4600 <PySequence_Fast@plt+0x3c0>
    4628:	ldrh	w1, [x3, #2]
    462c:	mov	w0, #0x1                   	// #1
    4630:	cmp	w1, #0x7d
    4634:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    4638:	cmp	w1, #0x2a
    463c:	b.ne	45cc <PySequence_Fast@plt+0x38c>  // b.any
    4640:	ldrh	w1, [x3, #4]
    4644:	cmp	w1, #0x7d
    4648:	b.ne	45cc <PySequence_Fast@plt+0x38c>  // b.any
    464c:	ret
    4650:	ldr	w1, [x3, #8]
    4654:	cmp	w1, #0x7d
    4658:	b.eq	442c <PySequence_Fast@plt+0x1ec>  // b.none
    465c:	mov	x1, #0x0                   	// #0
    4660:	b	43d0 <PySequence_Fast@plt+0x190>
    4664:	nop
    4668:	ldr	x0, [x0, #40]
    466c:	cbz	x0, 4678 <PySequence_Fast@plt+0x438>
    4670:	ldr	x0, [x0, #8]
    4674:	ret
    4678:	mov	x0, #0x0                   	// #0
    467c:	ret
    4680:	ldr	x0, [x0, #16]
    4684:	ldr	x1, [x0]
    4688:	add	x1, x1, #0x1
    468c:	str	x1, [x0]
    4690:	ret
    4694:	nop
    4698:	stp	x29, x30, [sp, #-16]!
    469c:	mov	x1, #0x0                   	// #0
    46a0:	mov	x29, sp
    46a4:	ldr	x2, [x0, #304]
    46a8:	blr	x2
    46ac:	cbz	x0, 46c4 <PySequence_Fast@plt+0x484>
    46b0:	movi	v0.4s, #0x0
    46b4:	str	xzr, [x0, #112]
    46b8:	stp	q0, q0, [x0, #16]
    46bc:	stp	q0, q0, [x0, #48]
    46c0:	stp	q0, q0, [x0, #80]
    46c4:	ldp	x29, x30, [sp], #16
    46c8:	ret
    46cc:	nop
    46d0:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    46d4:	ldr	x0, [x0, #16]
    46d8:	ldr	x1, [x1, #3976]
    46dc:	cmp	x0, #0x0
    46e0:	csel	x0, x1, x0, eq  // eq = none
    46e4:	ldr	x1, [x0]
    46e8:	add	x1, x1, #0x1
    46ec:	str	x1, [x0]
    46f0:	ret
    46f4:	nop
    46f8:	stp	x29, x30, [sp, #-48]!
    46fc:	mov	x29, sp
    4700:	stp	x19, x20, [sp, #16]
    4704:	mov	x20, x1
    4708:	str	x21, [sp, #32]
    470c:	mov	x21, x2
    4710:	bl	3e10 <PyModule_GetState@plt>
    4714:	mov	x19, x0
    4718:	ldr	x0, [x0]
    471c:	cbz	x0, 472c <PySequence_Fast@plt+0x4ec>
    4720:	mov	x1, x21
    4724:	blr	x20
    4728:	cbnz	w0, 4788 <PySequence_Fast@plt+0x548>
    472c:	ldr	x0, [x19, #8]
    4730:	cbz	x0, 4740 <PySequence_Fast@plt+0x500>
    4734:	mov	x1, x21
    4738:	blr	x20
    473c:	cbnz	w0, 4788 <PySequence_Fast@plt+0x548>
    4740:	ldr	x0, [x19, #16]
    4744:	cbz	x0, 4754 <PySequence_Fast@plt+0x514>
    4748:	mov	x1, x21
    474c:	blr	x20
    4750:	cbnz	w0, 4788 <PySequence_Fast@plt+0x548>
    4754:	ldr	x0, [x19, #24]
    4758:	cbz	x0, 4768 <PySequence_Fast@plt+0x528>
    475c:	mov	x1, x21
    4760:	blr	x20
    4764:	cbnz	w0, 4788 <PySequence_Fast@plt+0x548>
    4768:	ldr	x0, [x19, #32]
    476c:	cbz	x0, 4788 <PySequence_Fast@plt+0x548>
    4770:	mov	x1, x21
    4774:	mov	x16, x20
    4778:	ldp	x19, x20, [sp, #16]
    477c:	ldr	x21, [sp, #32]
    4780:	ldp	x29, x30, [sp], #48
    4784:	br	x16
    4788:	ldp	x19, x20, [sp, #16]
    478c:	ldr	x21, [sp, #32]
    4790:	ldp	x29, x30, [sp], #48
    4794:	ret
    4798:	sub	sp, sp, #0x50
    479c:	stp	x29, x30, [sp, #16]
    47a0:	add	x29, sp, #0x10
    47a4:	stp	x19, x20, [sp, #32]
    47a8:	mov	x20, x0
    47ac:	mov	x0, x1
    47b0:	stp	x21, x22, [sp, #48]
    47b4:	mov	x1, x2
    47b8:	cbz	x3, 483c <PySequence_Fast@plt+0x5fc>
    47bc:	ldr	x21, [x3, #16]
    47c0:	add	x21, x2, x21
    47c4:	add	x2, sp, #0x40
    47c8:	str	x2, [sp]
    47cc:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    47d0:	mov	w7, #0x0                   	// #0
    47d4:	add	x4, x19, #0x9c0
    47d8:	mov	w6, #0x2                   	// #2
    47dc:	mov	w5, #0x1                   	// #1
    47e0:	mov	x2, #0x0                   	// #0
    47e4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    47e8:	cbz	x0, 486c <PySequence_Fast@plt+0x62c>
    47ec:	cmp	x21, #0x1
    47f0:	ldr	x22, [x0]
    47f4:	b.eq	4860 <PySequence_Fast@plt+0x620>  // b.none
    47f8:	ldr	x21, [x0, #8]
    47fc:	add	x19, x19, #0x9c0
    4800:	add	x0, x19, #0x40
    4804:	bl	3fc0 <PyState_FindModule@plt>
    4808:	bl	3e10 <PyModule_GetState@plt>
    480c:	ldr	x0, [x0, #16]
    4810:	add	x1, x19, #0xa8
    4814:	mov	x4, x21
    4818:	mov	x3, x22
    481c:	mov	x2, x20
    4820:	mov	x5, #0x0                   	// #0
    4824:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    4828:	ldp	x29, x30, [sp, #16]
    482c:	ldp	x19, x20, [sp, #32]
    4830:	ldp	x21, x22, [sp, #48]
    4834:	add	sp, sp, #0x50
    4838:	ret
    483c:	sub	x2, x2, #0x1
    4840:	mov	x21, x1
    4844:	cmp	x2, #0x1
    4848:	b.hi	47c4 <PySequence_Fast@plt+0x584>  // b.pmore
    484c:	cbz	x0, 47c4 <PySequence_Fast@plt+0x584>
    4850:	cmp	x21, #0x1
    4854:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    4858:	ldr	x22, [x0]
    485c:	b.ne	47f8 <PySequence_Fast@plt+0x5b8>  // b.any
    4860:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    4864:	ldr	x21, [x21, #3976]
    4868:	b	47fc <PySequence_Fast@plt+0x5bc>
    486c:	mov	x0, #0x0                   	// #0
    4870:	b	4828 <PySequence_Fast@plt+0x5e8>
    4874:	nop
    4878:	stp	x29, x30, [sp, #-48]!
    487c:	mov	x29, sp
    4880:	stp	x19, x20, [sp, #16]
    4884:	mov	x19, x0
    4888:	mov	x20, x1
    488c:	ldr	x0, [x0, #48]
    4890:	cbz	x0, 4974 <PySequence_Fast@plt+0x734>
    4894:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    4898:	ldr	x2, [x0, #8]
    489c:	ldr	x1, [x1, #3912]
    48a0:	cmp	x2, x1
    48a4:	b.eq	4908 <PySequence_Fast@plt+0x6c8>  // b.none
    48a8:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    48ac:	ldr	x1, [x1, #4064]
    48b0:	cmp	x2, x1
    48b4:	b.eq	4960 <PySequence_Fast@plt+0x720>  // b.none
    48b8:	mov	x0, #0x2                   	// #2
    48bc:	bl	3c50 <PyList_New@plt>
    48c0:	cbz	x0, 49a0 <PySequence_Fast@plt+0x760>
    48c4:	ldr	x3, [x0, #24]
    48c8:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    48cc:	ldr	x1, [x20]
    48d0:	ldr	x4, [x19, #48]
    48d4:	str	x4, [x3]
    48d8:	add	x1, x1, #0x1
    48dc:	str	x1, [x20]
    48e0:	str	x20, [x3, #8]
    48e4:	str	x0, [x19, #48]
    48e8:	ldr	x1, [x2, #3976]
    48ec:	mov	x0, x1
    48f0:	ldr	x2, [x1]
    48f4:	add	x2, x2, #0x1
    48f8:	str	x2, [x1]
    48fc:	ldp	x19, x20, [sp, #16]
    4900:	ldp	x29, x30, [sp], #48
    4904:	ret
    4908:	ldr	x1, [x0]
    490c:	cmp	x1, #0x1
    4910:	b.ne	48a8 <PySequence_Fast@plt+0x668>  // b.any
    4914:	ldr	x1, [x20, #8]
    4918:	cmp	x1, x2
    491c:	b.ne	48a8 <PySequence_Fast@plt+0x668>  // b.any
    4920:	ldr	x1, [x20, #16]
    4924:	cmp	x1, #0x1
    4928:	b.ne	48a8 <PySequence_Fast@plt+0x668>  // b.any
    492c:	str	x21, [sp, #32]
    4930:	ldr	x21, [x0, #16]
    4934:	add	x0, x19, #0x30
    4938:	add	x1, x21, #0x1
    493c:	bl	3ca0 <_PyBytes_Resize@plt>
    4940:	tbnz	w0, #31, 499c <PySequence_Fast@plt+0x75c>
    4944:	ldr	x0, [x19, #48]
    4948:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    494c:	ldrb	w1, [x20, #32]
    4950:	add	x0, x0, x21
    4954:	strb	w1, [x0, #32]
    4958:	ldr	x21, [sp, #32]
    495c:	b	48e8 <PySequence_Fast@plt+0x6a8>
    4960:	mov	x1, x20
    4964:	bl	3f00 <PyList_Append@plt>
    4968:	tbnz	w0, #31, 49a0 <PySequence_Fast@plt+0x760>
    496c:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    4970:	b	48e8 <PySequence_Fast@plt+0x6a8>
    4974:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    4978:	ldr	x0, [x19, #32]
    497c:	ldr	x1, [x2, #3976]
    4980:	cmp	x0, x1
    4984:	b.eq	49a8 <PySequence_Fast@plt+0x768>  // b.none
    4988:	ldr	x0, [x20]
    498c:	add	x0, x0, #0x1
    4990:	str	x0, [x20]
    4994:	str	x20, [x19, #48]
    4998:	b	48e8 <PySequence_Fast@plt+0x6a8>
    499c:	ldr	x21, [sp, #32]
    49a0:	mov	x0, #0x0                   	// #0
    49a4:	b	48fc <PySequence_Fast@plt+0x6bc>
    49a8:	ldr	x1, [x0]
    49ac:	add	x1, x1, #0x1
    49b0:	str	x1, [x0]
    49b4:	b	48fc <PySequence_Fast@plt+0x6bc>
    49b8:	mov	w2, #0x2                   	// #2
    49bc:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    49c0:	mov	w1, w2
    49c4:	add	x0, x0, #0x100
    49c8:	mov	w3, #0x9                   	// #9
    49cc:	b	3c30 <PyUnicode_FromFormat@plt>
    49d0:	stp	x29, x30, [sp, #-32]!
    49d4:	mov	x1, #0x0                   	// #0
    49d8:	mov	x29, sp
    49dc:	ldr	x2, [x0, #304]
    49e0:	str	x19, [sp, #16]
    49e4:	blr	x2
    49e8:	cbz	x0, 4a54 <PySequence_Fast@plt+0x814>
    49ec:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    49f0:	mov	x19, x0
    49f4:	movi	v0.4s, #0x0
    49f8:	mov	x0, #0x14                  	// #20
    49fc:	ldr	x1, [x1, #3976]
    4a00:	stp	xzr, x1, [x19, #16]
    4a04:	str	x1, [x19, #32]
    4a08:	ldr	x2, [x1]
    4a0c:	str	xzr, [x19, #48]
    4a10:	str	xzr, [x19, #88]
    4a14:	add	x2, x2, #0x2
    4a18:	str	x2, [x1]
    4a1c:	stur	q0, [x19, #72]
    4a20:	bl	3c50 <PyList_New@plt>
    4a24:	str	x0, [x19, #56]
    4a28:	movi	v0.4s, #0x0
    4a2c:	cbz	x0, 4a68 <PySequence_Fast@plt+0x828>
    4a30:	str	xzr, [x19, #64]
    4a34:	str	xzr, [x19, #144]
    4a38:	strh	wzr, [x19, #152]
    4a3c:	stp	q0, q0, [x19, #96]
    4a40:	str	q0, [x19, #128]
    4a44:	mov	x0, x19
    4a48:	ldr	x19, [sp, #16]
    4a4c:	ldp	x29, x30, [sp], #32
    4a50:	ret
    4a54:	mov	x19, #0x0                   	// #0
    4a58:	mov	x0, x19
    4a5c:	ldr	x19, [sp, #16]
    4a60:	ldp	x29, x30, [sp], #32
    4a64:	ret
    4a68:	ldr	x0, [x19, #24]
    4a6c:	ldr	x1, [x0]
    4a70:	sub	x1, x1, #0x1
    4a74:	str	x1, [x0]
    4a78:	cbz	x1, 4ab0 <PySequence_Fast@plt+0x870>
    4a7c:	ldr	x0, [x19, #32]
    4a80:	ldr	x1, [x0]
    4a84:	sub	x1, x1, #0x1
    4a88:	str	x1, [x0]
    4a8c:	cbz	x1, 4ab8 <PySequence_Fast@plt+0x878>
    4a90:	ldr	x0, [x19]
    4a94:	sub	x0, x0, #0x1
    4a98:	str	x0, [x19]
    4a9c:	cbnz	x0, 4a54 <PySequence_Fast@plt+0x814>
    4aa0:	mov	x0, x19
    4aa4:	mov	x19, #0x0                   	// #0
    4aa8:	bl	3d70 <_Py_Dealloc@plt>
    4aac:	b	4a44 <PySequence_Fast@plt+0x804>
    4ab0:	bl	3d70 <_Py_Dealloc@plt>
    4ab4:	b	4a7c <PySequence_Fast@plt+0x83c>
    4ab8:	bl	3d70 <_Py_Dealloc@plt>
    4abc:	b	4a90 <PySequence_Fast@plt+0x850>
    4ac0:	stp	x29, x30, [sp, #-32]!
    4ac4:	mov	x29, sp
    4ac8:	str	x19, [sp, #16]
    4acc:	mov	x19, x0
    4ad0:	ldr	x0, [x0, #16]
    4ad4:	cbz	x0, 4aec <PySequence_Fast@plt+0x8ac>
    4ad8:	adrp	x1, 23000 <PyInit__elementtree@@Base+0x15168>
    4adc:	ldr	x1, [x1, #1088]
    4ae0:	ldr	x1, [x1, #72]
    4ae4:	str	xzr, [x19, #16]
    4ae8:	blr	x1
    4aec:	ldr	x0, [x19, #112]
    4af0:	cbz	x0, 4b08 <PySequence_Fast@plt+0x8c8>
    4af4:	ldr	x1, [x0]
    4af8:	str	xzr, [x19, #112]
    4afc:	sub	x1, x1, #0x1
    4b00:	str	x1, [x0]
    4b04:	cbz	x1, 4cb0 <PySequence_Fast@plt+0xa70>
    4b08:	ldr	x0, [x19, #96]
    4b0c:	cbz	x0, 4b24 <PySequence_Fast@plt+0x8e4>
    4b10:	ldr	x1, [x0]
    4b14:	str	xzr, [x19, #96]
    4b18:	sub	x1, x1, #0x1
    4b1c:	str	x1, [x0]
    4b20:	cbz	x1, 4ca8 <PySequence_Fast@plt+0xa68>
    4b24:	ldr	x0, [x19, #88]
    4b28:	cbz	x0, 4b40 <PySequence_Fast@plt+0x900>
    4b2c:	ldr	x1, [x0]
    4b30:	str	xzr, [x19, #88]
    4b34:	sub	x1, x1, #0x1
    4b38:	str	x1, [x0]
    4b3c:	cbz	x1, 4ca0 <PySequence_Fast@plt+0xa60>
    4b40:	ldr	x0, [x19, #80]
    4b44:	cbz	x0, 4b5c <PySequence_Fast@plt+0x91c>
    4b48:	ldr	x1, [x0]
    4b4c:	str	xzr, [x19, #80]
    4b50:	sub	x1, x1, #0x1
    4b54:	str	x1, [x0]
    4b58:	cbz	x1, 4c98 <PySequence_Fast@plt+0xa58>
    4b5c:	ldr	x0, [x19, #72]
    4b60:	cbz	x0, 4b78 <PySequence_Fast@plt+0x938>
    4b64:	ldr	x1, [x0]
    4b68:	str	xzr, [x19, #72]
    4b6c:	sub	x1, x1, #0x1
    4b70:	str	x1, [x0]
    4b74:	cbz	x1, 4c90 <PySequence_Fast@plt+0xa50>
    4b78:	ldr	x0, [x19, #64]
    4b7c:	cbz	x0, 4b94 <PySequence_Fast@plt+0x954>
    4b80:	ldr	x1, [x0]
    4b84:	str	xzr, [x19, #64]
    4b88:	sub	x1, x1, #0x1
    4b8c:	str	x1, [x0]
    4b90:	cbz	x1, 4c88 <PySequence_Fast@plt+0xa48>
    4b94:	ldr	x0, [x19, #48]
    4b98:	cbz	x0, 4bb0 <PySequence_Fast@plt+0x970>
    4b9c:	ldr	x1, [x0]
    4ba0:	str	xzr, [x19, #48]
    4ba4:	sub	x1, x1, #0x1
    4ba8:	str	x1, [x0]
    4bac:	cbz	x1, 4c80 <PySequence_Fast@plt+0xa40>
    4bb0:	ldr	x0, [x19, #56]
    4bb4:	cbz	x0, 4bcc <PySequence_Fast@plt+0x98c>
    4bb8:	ldr	x1, [x0]
    4bbc:	str	xzr, [x19, #56]
    4bc0:	sub	x1, x1, #0x1
    4bc4:	str	x1, [x0]
    4bc8:	cbz	x1, 4c78 <PySequence_Fast@plt+0xa38>
    4bcc:	ldr	x0, [x19, #104]
    4bd0:	cbz	x0, 4be8 <PySequence_Fast@plt+0x9a8>
    4bd4:	ldr	x1, [x0]
    4bd8:	str	xzr, [x19, #104]
    4bdc:	sub	x1, x1, #0x1
    4be0:	str	x1, [x0]
    4be4:	cbz	x1, 4c70 <PySequence_Fast@plt+0xa30>
    4be8:	ldr	x0, [x19, #24]
    4bec:	cbz	x0, 4c04 <PySequence_Fast@plt+0x9c4>
    4bf0:	ldr	x1, [x0]
    4bf4:	str	xzr, [x19, #24]
    4bf8:	sub	x1, x1, #0x1
    4bfc:	str	x1, [x0]
    4c00:	cbz	x1, 4c68 <PySequence_Fast@plt+0xa28>
    4c04:	ldr	x0, [x19, #32]
    4c08:	cbz	x0, 4c20 <PySequence_Fast@plt+0x9e0>
    4c0c:	ldr	x1, [x0]
    4c10:	str	xzr, [x19, #32]
    4c14:	sub	x1, x1, #0x1
    4c18:	str	x1, [x0]
    4c1c:	cbz	x1, 4c60 <PySequence_Fast@plt+0xa20>
    4c20:	ldr	x0, [x19, #40]
    4c24:	cbz	x0, 4c3c <PySequence_Fast@plt+0x9fc>
    4c28:	ldr	x1, [x0]
    4c2c:	str	xzr, [x19, #40]
    4c30:	sub	x1, x1, #0x1
    4c34:	str	x1, [x0]
    4c38:	cbz	x1, 4c4c <PySequence_Fast@plt+0xa0c>
    4c3c:	mov	w0, #0x0                   	// #0
    4c40:	ldr	x19, [sp, #16]
    4c44:	ldp	x29, x30, [sp], #32
    4c48:	ret
    4c4c:	bl	3d70 <_Py_Dealloc@plt>
    4c50:	mov	w0, #0x0                   	// #0
    4c54:	ldr	x19, [sp, #16]
    4c58:	ldp	x29, x30, [sp], #32
    4c5c:	ret
    4c60:	bl	3d70 <_Py_Dealloc@plt>
    4c64:	b	4c20 <PySequence_Fast@plt+0x9e0>
    4c68:	bl	3d70 <_Py_Dealloc@plt>
    4c6c:	b	4c04 <PySequence_Fast@plt+0x9c4>
    4c70:	bl	3d70 <_Py_Dealloc@plt>
    4c74:	b	4be8 <PySequence_Fast@plt+0x9a8>
    4c78:	bl	3d70 <_Py_Dealloc@plt>
    4c7c:	b	4bcc <PySequence_Fast@plt+0x98c>
    4c80:	bl	3d70 <_Py_Dealloc@plt>
    4c84:	b	4bb0 <PySequence_Fast@plt+0x970>
    4c88:	bl	3d70 <_Py_Dealloc@plt>
    4c8c:	b	4b94 <PySequence_Fast@plt+0x954>
    4c90:	bl	3d70 <_Py_Dealloc@plt>
    4c94:	b	4b78 <PySequence_Fast@plt+0x938>
    4c98:	bl	3d70 <_Py_Dealloc@plt>
    4c9c:	b	4b5c <PySequence_Fast@plt+0x91c>
    4ca0:	bl	3d70 <_Py_Dealloc@plt>
    4ca4:	b	4b40 <PySequence_Fast@plt+0x900>
    4ca8:	bl	3d70 <_Py_Dealloc@plt>
    4cac:	b	4b24 <PySequence_Fast@plt+0x8e4>
    4cb0:	bl	3d70 <_Py_Dealloc@plt>
    4cb4:	b	4b08 <PySequence_Fast@plt+0x8c8>
    4cb8:	sub	sp, sp, #0x50
    4cbc:	stp	x29, x30, [sp, #32]
    4cc0:	add	x29, sp, #0x20
    4cc4:	ldr	x1, [x0, #40]
    4cc8:	stp	x19, x20, [sp, #48]
    4ccc:	mov	x20, x0
    4cd0:	mov	x0, #0x0                   	// #0
    4cd4:	cbz	x1, 4cdc <PySequence_Fast@plt+0xa9c>
    4cd8:	ldr	x0, [x1, #8]
    4cdc:	bl	3c50 <PyList_New@plt>
    4ce0:	mov	x19, x0
    4ce4:	cbz	x0, 4e64 <PySequence_Fast@plt+0xc24>
    4ce8:	ldr	x0, [x0, #16]
    4cec:	ldr	x3, [x20, #40]
    4cf0:	cmp	x0, #0x0
    4cf4:	b.le	4dbc <PySequence_Fast@plt+0xb7c>
    4cf8:	ldr	x5, [x3, #24]
    4cfc:	mov	x0, #0x0                   	// #0
    4d00:	ldr	x4, [x19, #24]
    4d04:	nop
    4d08:	ldr	x1, [x5, x0, lsl #3]
    4d0c:	ldr	x2, [x1]
    4d10:	add	x2, x2, #0x1
    4d14:	str	x2, [x1]
    4d18:	str	x1, [x4, x0, lsl #3]
    4d1c:	add	x0, x0, #0x1
    4d20:	ldr	x1, [x19, #16]
    4d24:	cmp	x0, x1
    4d28:	b.lt	4d08 <PySequence_Fast@plt+0xac8>  // b.tstop
    4d2c:	ldp	x2, x1, [x20, #16]
    4d30:	ldr	x4, [x20, #32]
    4d34:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    4d38:	ldr	x6, [x3]
    4d3c:	and	x7, x1, #0xfffffffffffffffe
    4d40:	ldr	x0, [x0, #3976]
    4d44:	and	x5, x4, #0xfffffffffffffffe
    4d48:	cmp	x6, x0
    4d4c:	b.eq	4dd0 <PySequence_Fast@plt+0xb90>  // b.none
    4d50:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    4d54:	add	x0, x0, #0x148
    4d58:	stp	x7, x0, [sp]
    4d5c:	mov	x4, x19
    4d60:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    4d64:	str	x5, [sp, #16]
    4d68:	add	x3, x3, #0x120
    4d6c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    4d70:	adrp	x7, e000 <PyInit__elementtree@@Base+0x168>
    4d74:	add	x1, x1, #0x130
    4d78:	add	x7, x7, #0x110
    4d7c:	adrp	x5, e000 <PyInit__elementtree@@Base+0x168>
    4d80:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    4d84:	add	x5, x5, #0x118
    4d88:	add	x0, x0, #0x138
    4d8c:	bl	4190 <_Py_BuildValue_SizeT@plt>
    4d90:	mov	x20, x0
    4d94:	cbz	x20, 4e14 <PySequence_Fast@plt+0xbd4>
    4d98:	ldr	x0, [x19]
    4d9c:	sub	x0, x0, #0x1
    4da0:	str	x0, [x19]
    4da4:	cbz	x0, 4e7c <PySequence_Fast@plt+0xc3c>
    4da8:	mov	x0, x20
    4dac:	ldp	x29, x30, [sp, #32]
    4db0:	ldp	x19, x20, [sp, #48]
    4db4:	add	sp, sp, #0x50
    4db8:	ret
    4dbc:	ldp	x2, x1, [x20, #16]
    4dc0:	ldr	x4, [x20, #32]
    4dc4:	and	x5, x4, #0xfffffffffffffffe
    4dc8:	and	x7, x1, #0xfffffffffffffffe
    4dcc:	cbnz	x3, 4d34 <PySequence_Fast@plt+0xaf4>
    4dd0:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    4dd4:	add	x0, x0, #0x148
    4dd8:	stp	x0, x5, [sp]
    4ddc:	mov	x4, x19
    4de0:	adrp	x6, e000 <PyInit__elementtree@@Base+0x168>
    4de4:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    4de8:	add	x6, x6, #0x110
    4dec:	add	x3, x3, #0x120
    4df0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    4df4:	adrp	x5, e000 <PyInit__elementtree@@Base+0x168>
    4df8:	add	x1, x1, #0x130
    4dfc:	add	x5, x5, #0x118
    4e00:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    4e04:	add	x0, x0, #0x150
    4e08:	bl	4190 <_Py_BuildValue_SizeT@plt>
    4e0c:	mov	x20, x0
    4e10:	cbnz	x20, 4d98 <PySequence_Fast@plt+0xb58>
    4e14:	ldr	x2, [x19, #16]
    4e18:	cmp	x2, #0x0
    4e1c:	b.le	4e54 <PySequence_Fast@plt+0xc14>
    4e20:	ldr	x3, [x19, #24]
    4e24:	str	x21, [sp, #64]
    4e28:	mov	x21, #0x0                   	// #0
    4e2c:	nop
    4e30:	ldr	x0, [x3, x21, lsl #3]
    4e34:	ldr	x1, [x0]
    4e38:	sub	x1, x1, #0x1
    4e3c:	str	x1, [x0]
    4e40:	cbz	x1, 4e98 <PySequence_Fast@plt+0xc58>
    4e44:	add	x21, x21, #0x1
    4e48:	cmp	x21, x2
    4e4c:	b.lt	4e30 <PySequence_Fast@plt+0xbf0>  // b.tstop
    4e50:	ldr	x21, [sp, #64]
    4e54:	ldr	x0, [x19]
    4e58:	sub	x0, x0, #0x1
    4e5c:	str	x0, [x19]
    4e60:	cbz	x0, 4e7c <PySequence_Fast@plt+0xc3c>
    4e64:	mov	x20, #0x0                   	// #0
    4e68:	mov	x0, x20
    4e6c:	ldp	x29, x30, [sp, #32]
    4e70:	ldp	x19, x20, [sp, #48]
    4e74:	add	sp, sp, #0x50
    4e78:	ret
    4e7c:	mov	x0, x19
    4e80:	bl	3d70 <_Py_Dealloc@plt>
    4e84:	mov	x0, x20
    4e88:	ldp	x29, x30, [sp, #32]
    4e8c:	ldp	x19, x20, [sp, #48]
    4e90:	add	sp, sp, #0x50
    4e94:	ret
    4e98:	bl	3d70 <_Py_Dealloc@plt>
    4e9c:	add	x21, x21, #0x1
    4ea0:	ldr	x2, [x19, #16]
    4ea4:	cmp	x21, x2
    4ea8:	b.ge	4e50 <PySequence_Fast@plt+0xc10>  // b.tcont
    4eac:	ldr	x3, [x19, #24]
    4eb0:	b	4e30 <PySequence_Fast@plt+0xbf0>
    4eb4:	nop
    4eb8:	stp	x29, x30, [sp, #-48]!
    4ebc:	mov	x29, sp
    4ec0:	ldr	x3, [x0, #40]
    4ec4:	stp	x19, x20, [sp, #16]
    4ec8:	cmp	x3, #0x0
    4ecc:	ccmp	x1, #0x0, #0x1, ne  // ne = any
    4ed0:	b.lt	4fac <PySequence_Fast@plt+0xd6c>  // b.tstop
    4ed4:	mov	x20, x0
    4ed8:	ldr	x0, [x3, #8]
    4edc:	cmp	x0, x1
    4ee0:	b.le	4fac <PySequence_Fast@plt+0xd6c>
    4ee4:	ldr	x4, [x3, #24]
    4ee8:	stp	x21, x22, [sp, #32]
    4eec:	lsl	x22, x1, #3
    4ef0:	mov	x19, x2
    4ef4:	add	x5, x4, x22
    4ef8:	ldr	x21, [x4, x1, lsl #3]
    4efc:	cbz	x2, 4f7c <PySequence_Fast@plt+0xd3c>
    4f00:	ldr	x0, [x2, #8]
    4f04:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    4f08:	add	x1, x1, #0x328
    4f0c:	cmp	x0, x1
    4f10:	b.eq	4f28 <PySequence_Fast@plt+0xce8>  // b.none
    4f14:	bl	4160 <PyType_IsSubtype@plt>
    4f18:	cbz	w0, 4fcc <PySequence_Fast@plt+0xd8c>
    4f1c:	ldr	x0, [x20, #40]
    4f20:	ldr	x5, [x0, #24]
    4f24:	add	x5, x5, x22
    4f28:	ldr	x0, [x19]
    4f2c:	add	x0, x0, #0x1
    4f30:	str	x0, [x19]
    4f34:	str	x19, [x5]
    4f38:	ldr	x0, [x21]
    4f3c:	mov	w19, #0x0                   	// #0
    4f40:	sub	x0, x0, #0x1
    4f44:	str	x0, [x21]
    4f48:	cbz	x0, 4f60 <PySequence_Fast@plt+0xd20>
    4f4c:	ldp	x21, x22, [sp, #32]
    4f50:	mov	w0, w19
    4f54:	ldp	x19, x20, [sp, #16]
    4f58:	ldp	x29, x30, [sp], #48
    4f5c:	ret
    4f60:	mov	x0, x21
    4f64:	bl	3d70 <_Py_Dealloc@plt>
    4f68:	mov	w0, w19
    4f6c:	ldp	x19, x20, [sp, #16]
    4f70:	ldp	x21, x22, [sp, #32]
    4f74:	ldp	x29, x30, [sp], #48
    4f78:	ret
    4f7c:	sub	x2, x0, #0x1
    4f80:	str	x2, [x3, #8]
    4f84:	cmp	x2, x1
    4f88:	b.le	4f38 <PySequence_Fast@plt+0xcf8>
    4f8c:	mvn	x2, x1
    4f90:	add	x1, x22, #0x8
    4f94:	add	x2, x2, x0
    4f98:	add	x1, x4, x1
    4f9c:	mov	x0, x5
    4fa0:	lsl	x2, x2, #3
    4fa4:	bl	3c40 <memmove@plt>
    4fa8:	b	4f38 <PySequence_Fast@plt+0xcf8>
    4fac:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    4fb0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    4fb4:	mov	w19, #0xffffffff            	// #-1
    4fb8:	add	x1, x1, #0x160
    4fbc:	ldr	x0, [x0, #3984]
    4fc0:	ldr	x0, [x0]
    4fc4:	bl	3de0 <PyErr_SetString@plt>
    4fc8:	b	4f50 <PySequence_Fast@plt+0xd10>
    4fcc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    4fd0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    4fd4:	ldr	x2, [x19, #8]
    4fd8:	add	x1, x1, #0x188
    4fdc:	ldr	x0, [x0, #3944]
    4fe0:	mov	w19, #0xffffffff            	// #-1
    4fe4:	ldr	x2, [x2, #24]
    4fe8:	ldr	x0, [x0]
    4fec:	bl	4180 <PyErr_Format@plt>
    4ff0:	ldp	x21, x22, [sp, #32]
    4ff4:	b	4f50 <PySequence_Fast@plt+0xd10>
    4ff8:	stp	x29, x30, [sp, #-32]!
    4ffc:	mov	x29, sp
    5000:	str	x19, [sp, #16]
    5004:	mov	x19, x0
    5008:	ldr	x0, [x0, #144]
    500c:	cbz	x0, 5024 <PySequence_Fast@plt+0xde4>
    5010:	ldr	x1, [x0]
    5014:	str	xzr, [x19, #144]
    5018:	sub	x1, x1, #0x1
    501c:	str	x1, [x0]
    5020:	cbz	x1, 525c <PySequence_Fast@plt+0x101c>
    5024:	ldr	x0, [x19, #136]
    5028:	cbz	x0, 5040 <PySequence_Fast@plt+0xe00>
    502c:	ldr	x1, [x0]
    5030:	str	xzr, [x19, #136]
    5034:	sub	x1, x1, #0x1
    5038:	str	x1, [x0]
    503c:	cbz	x1, 5254 <PySequence_Fast@plt+0x1014>
    5040:	ldr	x0, [x19, #128]
    5044:	cbz	x0, 505c <PySequence_Fast@plt+0xe1c>
    5048:	ldr	x1, [x0]
    504c:	str	xzr, [x19, #128]
    5050:	sub	x1, x1, #0x1
    5054:	str	x1, [x0]
    5058:	cbz	x1, 524c <PySequence_Fast@plt+0x100c>
    505c:	ldr	x0, [x19, #120]
    5060:	cbz	x0, 5078 <PySequence_Fast@plt+0xe38>
    5064:	ldr	x1, [x0]
    5068:	str	xzr, [x19, #120]
    506c:	sub	x1, x1, #0x1
    5070:	str	x1, [x0]
    5074:	cbz	x1, 5244 <PySequence_Fast@plt+0x1004>
    5078:	ldr	x0, [x19, #112]
    507c:	cbz	x0, 5094 <PySequence_Fast@plt+0xe54>
    5080:	ldr	x1, [x0]
    5084:	str	xzr, [x19, #112]
    5088:	sub	x1, x1, #0x1
    508c:	str	x1, [x0]
    5090:	cbz	x1, 523c <PySequence_Fast@plt+0xffc>
    5094:	ldr	x0, [x19, #104]
    5098:	cbz	x0, 50b0 <PySequence_Fast@plt+0xe70>
    509c:	ldr	x1, [x0]
    50a0:	str	xzr, [x19, #104]
    50a4:	sub	x1, x1, #0x1
    50a8:	str	x1, [x0]
    50ac:	cbz	x1, 5234 <PySequence_Fast@plt+0xff4>
    50b0:	ldr	x0, [x19, #96]
    50b4:	cbz	x0, 50cc <PySequence_Fast@plt+0xe8c>
    50b8:	ldr	x1, [x0]
    50bc:	str	xzr, [x19, #96]
    50c0:	sub	x1, x1, #0x1
    50c4:	str	x1, [x0]
    50c8:	cbz	x1, 522c <PySequence_Fast@plt+0xfec>
    50cc:	ldr	x0, [x19, #56]
    50d0:	cbz	x0, 50e8 <PySequence_Fast@plt+0xea8>
    50d4:	ldr	x1, [x0]
    50d8:	str	xzr, [x19, #56]
    50dc:	sub	x1, x1, #0x1
    50e0:	str	x1, [x0]
    50e4:	cbz	x1, 5224 <PySequence_Fast@plt+0xfe4>
    50e8:	ldr	x0, [x19, #48]
    50ec:	cbz	x0, 5104 <PySequence_Fast@plt+0xec4>
    50f0:	ldr	x1, [x0]
    50f4:	str	xzr, [x19, #48]
    50f8:	sub	x1, x1, #0x1
    50fc:	str	x1, [x0]
    5100:	cbz	x1, 521c <PySequence_Fast@plt+0xfdc>
    5104:	ldr	x0, [x19, #32]
    5108:	cbz	x0, 5120 <PySequence_Fast@plt+0xee0>
    510c:	ldr	x1, [x0]
    5110:	str	xzr, [x19, #32]
    5114:	sub	x1, x1, #0x1
    5118:	str	x1, [x0]
    511c:	cbz	x1, 5214 <PySequence_Fast@plt+0xfd4>
    5120:	ldr	x0, [x19, #40]
    5124:	cbz	x0, 513c <PySequence_Fast@plt+0xefc>
    5128:	ldr	x1, [x0]
    512c:	str	xzr, [x19, #40]
    5130:	sub	x1, x1, #0x1
    5134:	str	x1, [x0]
    5138:	cbz	x1, 520c <PySequence_Fast@plt+0xfcc>
    513c:	ldr	x0, [x19, #24]
    5140:	cbz	x0, 5158 <PySequence_Fast@plt+0xf18>
    5144:	ldr	x1, [x0]
    5148:	str	xzr, [x19, #24]
    514c:	sub	x1, x1, #0x1
    5150:	str	x1, [x0]
    5154:	cbz	x1, 5204 <PySequence_Fast@plt+0xfc4>
    5158:	ldr	x0, [x19, #88]
    515c:	cbz	x0, 5174 <PySequence_Fast@plt+0xf34>
    5160:	ldr	x1, [x0]
    5164:	str	xzr, [x19, #88]
    5168:	sub	x1, x1, #0x1
    516c:	str	x1, [x0]
    5170:	cbz	x1, 51fc <PySequence_Fast@plt+0xfbc>
    5174:	ldr	x0, [x19, #80]
    5178:	cbz	x0, 5190 <PySequence_Fast@plt+0xf50>
    517c:	ldr	x1, [x0]
    5180:	str	xzr, [x19, #80]
    5184:	sub	x1, x1, #0x1
    5188:	str	x1, [x0]
    518c:	cbz	x1, 51f4 <PySequence_Fast@plt+0xfb4>
    5190:	ldr	x0, [x19, #72]
    5194:	cbz	x0, 51ac <PySequence_Fast@plt+0xf6c>
    5198:	ldr	x1, [x0]
    519c:	str	xzr, [x19, #72]
    51a0:	sub	x1, x1, #0x1
    51a4:	str	x1, [x0]
    51a8:	cbz	x1, 51ec <PySequence_Fast@plt+0xfac>
    51ac:	ldr	x0, [x19, #16]
    51b0:	cbz	x0, 51c8 <PySequence_Fast@plt+0xf88>
    51b4:	ldr	x1, [x0]
    51b8:	str	xzr, [x19, #16]
    51bc:	sub	x1, x1, #0x1
    51c0:	str	x1, [x0]
    51c4:	cbz	x1, 51d8 <PySequence_Fast@plt+0xf98>
    51c8:	mov	w0, #0x0                   	// #0
    51cc:	ldr	x19, [sp, #16]
    51d0:	ldp	x29, x30, [sp], #32
    51d4:	ret
    51d8:	bl	3d70 <_Py_Dealloc@plt>
    51dc:	mov	w0, #0x0                   	// #0
    51e0:	ldr	x19, [sp, #16]
    51e4:	ldp	x29, x30, [sp], #32
    51e8:	ret
    51ec:	bl	3d70 <_Py_Dealloc@plt>
    51f0:	b	51ac <PySequence_Fast@plt+0xf6c>
    51f4:	bl	3d70 <_Py_Dealloc@plt>
    51f8:	b	5190 <PySequence_Fast@plt+0xf50>
    51fc:	bl	3d70 <_Py_Dealloc@plt>
    5200:	b	5174 <PySequence_Fast@plt+0xf34>
    5204:	bl	3d70 <_Py_Dealloc@plt>
    5208:	b	5158 <PySequence_Fast@plt+0xf18>
    520c:	bl	3d70 <_Py_Dealloc@plt>
    5210:	b	513c <PySequence_Fast@plt+0xefc>
    5214:	bl	3d70 <_Py_Dealloc@plt>
    5218:	b	5120 <PySequence_Fast@plt+0xee0>
    521c:	bl	3d70 <_Py_Dealloc@plt>
    5220:	b	5104 <PySequence_Fast@plt+0xec4>
    5224:	bl	3d70 <_Py_Dealloc@plt>
    5228:	b	50e8 <PySequence_Fast@plt+0xea8>
    522c:	bl	3d70 <_Py_Dealloc@plt>
    5230:	b	50cc <PySequence_Fast@plt+0xe8c>
    5234:	bl	3d70 <_Py_Dealloc@plt>
    5238:	b	50b0 <PySequence_Fast@plt+0xe70>
    523c:	bl	3d70 <_Py_Dealloc@plt>
    5240:	b	5094 <PySequence_Fast@plt+0xe54>
    5244:	bl	3d70 <_Py_Dealloc@plt>
    5248:	b	5078 <PySequence_Fast@plt+0xe38>
    524c:	bl	3d70 <_Py_Dealloc@plt>
    5250:	b	505c <PySequence_Fast@plt+0xe1c>
    5254:	bl	3d70 <_Py_Dealloc@plt>
    5258:	b	5040 <PySequence_Fast@plt+0xe00>
    525c:	bl	3d70 <_Py_Dealloc@plt>
    5260:	b	5024 <PySequence_Fast@plt+0xde4>
    5264:	nop
    5268:	stp	x29, x30, [sp, #-32]!
    526c:	mov	x29, sp
    5270:	str	x19, [sp, #16]
    5274:	bl	3e10 <PyModule_GetState@plt>
    5278:	mov	x19, x0
    527c:	ldr	x0, [x0]
    5280:	cbz	x0, 5298 <PySequence_Fast@plt+0x1058>
    5284:	ldr	x1, [x0]
    5288:	str	xzr, [x19]
    528c:	sub	x1, x1, #0x1
    5290:	str	x1, [x0]
    5294:	cbz	x1, 5344 <PySequence_Fast@plt+0x1104>
    5298:	ldr	x0, [x19, #8]
    529c:	cbz	x0, 52b4 <PySequence_Fast@plt+0x1074>
    52a0:	ldr	x1, [x0]
    52a4:	str	xzr, [x19, #8]
    52a8:	sub	x1, x1, #0x1
    52ac:	str	x1, [x0]
    52b0:	cbz	x1, 533c <PySequence_Fast@plt+0x10fc>
    52b4:	ldr	x0, [x19, #16]
    52b8:	cbz	x0, 52d0 <PySequence_Fast@plt+0x1090>
    52bc:	ldr	x1, [x0]
    52c0:	str	xzr, [x19, #16]
    52c4:	sub	x1, x1, #0x1
    52c8:	str	x1, [x0]
    52cc:	cbz	x1, 5334 <PySequence_Fast@plt+0x10f4>
    52d0:	ldr	x0, [x19, #24]
    52d4:	cbz	x0, 52ec <PySequence_Fast@plt+0x10ac>
    52d8:	ldr	x1, [x0]
    52dc:	str	xzr, [x19, #24]
    52e0:	sub	x1, x1, #0x1
    52e4:	str	x1, [x0]
    52e8:	cbz	x1, 532c <PySequence_Fast@plt+0x10ec>
    52ec:	ldr	x0, [x19, #32]
    52f0:	cbz	x0, 5308 <PySequence_Fast@plt+0x10c8>
    52f4:	ldr	x1, [x0]
    52f8:	str	xzr, [x19, #32]
    52fc:	sub	x1, x1, #0x1
    5300:	str	x1, [x0]
    5304:	cbz	x1, 5318 <PySequence_Fast@plt+0x10d8>
    5308:	mov	w0, #0x0                   	// #0
    530c:	ldr	x19, [sp, #16]
    5310:	ldp	x29, x30, [sp], #32
    5314:	ret
    5318:	bl	3d70 <_Py_Dealloc@plt>
    531c:	mov	w0, #0x0                   	// #0
    5320:	ldr	x19, [sp, #16]
    5324:	ldp	x29, x30, [sp], #32
    5328:	ret
    532c:	bl	3d70 <_Py_Dealloc@plt>
    5330:	b	52ec <PySequence_Fast@plt+0x10ac>
    5334:	bl	3d70 <_Py_Dealloc@plt>
    5338:	b	52d0 <PySequence_Fast@plt+0x1090>
    533c:	bl	3d70 <_Py_Dealloc@plt>
    5340:	b	52b4 <PySequence_Fast@plt+0x1074>
    5344:	bl	3d70 <_Py_Dealloc@plt>
    5348:	b	5298 <PySequence_Fast@plt+0x1058>
    534c:	nop
    5350:	stp	x29, x30, [sp, #-32]!
    5354:	mov	x29, sp
    5358:	str	x19, [sp, #16]
    535c:	mov	x19, x0
    5360:	bl	4220 <PyObject_GC_UnTrack@plt>
    5364:	mov	x0, x19
    5368:	bl	4ac0 <PySequence_Fast@plt+0x880>
    536c:	ldr	x1, [x19, #8]
    5370:	mov	x0, x19
    5374:	ldr	x19, [sp, #16]
    5378:	ldp	x29, x30, [sp], #32
    537c:	ldr	x1, [x1, #320]
    5380:	mov	x16, x1
    5384:	br	x16
    5388:	stp	x29, x30, [sp, #-32]!
    538c:	mov	x29, sp
    5390:	str	x19, [sp, #16]
    5394:	mov	x19, x0
    5398:	bl	4220 <PyObject_GC_UnTrack@plt>
    539c:	mov	x0, x19
    53a0:	bl	4ff8 <PySequence_Fast@plt+0xdb8>
    53a4:	ldr	x1, [x19, #8]
    53a8:	mov	x0, x19
    53ac:	ldr	x19, [sp, #16]
    53b0:	ldp	x29, x30, [sp], #32
    53b4:	ldr	x1, [x1, #320]
    53b8:	mov	x16, x1
    53bc:	br	x16
    53c0:	stp	x29, x30, [sp, #-48]!
    53c4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    53c8:	mov	x29, sp
    53cc:	stp	x19, x20, [sp, #16]
    53d0:	str	x21, [sp, #32]
    53d4:	mov	x21, x0
    53d8:	add	x0, x1, #0x118
    53dc:	bl	4100 <PyUnicode_FromString@plt>
    53e0:	cbz	x0, 54d0 <PySequence_Fast@plt+0x1290>
    53e4:	mov	x1, x0
    53e8:	mov	x19, x0
    53ec:	mov	x0, x21
    53f0:	bl	4230 <PyDict_GetItemWithError@plt>
    53f4:	mov	x20, x0
    53f8:	cbz	x0, 5518 <PySequence_Fast@plt+0x12d8>
    53fc:	ldr	x1, [x0, #8]
    5400:	ldr	x2, [x1, #168]
    5404:	tbz	w2, #29, 5464 <PySequence_Fast@plt+0x1224>
    5408:	bl	4150 <PyDict_Copy@plt>
    540c:	mov	x20, x0
    5410:	cbz	x0, 54c0 <PySequence_Fast@plt+0x1280>
    5414:	mov	x1, x19
    5418:	mov	x0, x21
    541c:	bl	3f70 <PyDict_DelItem@plt>
    5420:	tbnz	w0, #31, 54a8 <PySequence_Fast@plt+0x1268>
    5424:	ldr	x0, [x19]
    5428:	sub	x0, x0, #0x1
    542c:	str	x0, [x19]
    5430:	cbz	x0, 5544 <PySequence_Fast@plt+0x1304>
    5434:	mov	x1, x21
    5438:	mov	x0, x20
    543c:	bl	3f20 <PyDict_Update@plt>
    5440:	tbz	w0, #31, 5494 <PySequence_Fast@plt+0x1254>
    5444:	ldr	x0, [x20]
    5448:	sub	x0, x0, #0x1
    544c:	str	x0, [x20]
    5450:	cbnz	x0, 54d0 <PySequence_Fast@plt+0x1290>
    5454:	mov	x0, x20
    5458:	mov	x20, #0x0                   	// #0
    545c:	bl	3d70 <_Py_Dealloc@plt>
    5460:	b	5494 <PySequence_Fast@plt+0x1254>
    5464:	ldr	x0, [x19]
    5468:	sub	x0, x0, #0x1
    546c:	str	x0, [x19]
    5470:	cbz	x0, 5508 <PySequence_Fast@plt+0x12c8>
    5474:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    5478:	mov	x20, #0x0                   	// #0
    547c:	ldr	x2, [x1, #24]
    5480:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    5484:	ldr	x0, [x0, #3944]
    5488:	add	x1, x1, #0x1b0
    548c:	ldr	x0, [x0]
    5490:	bl	4180 <PyErr_Format@plt>
    5494:	mov	x0, x20
    5498:	ldp	x19, x20, [sp, #16]
    549c:	ldr	x21, [sp, #32]
    54a0:	ldp	x29, x30, [sp], #48
    54a4:	ret
    54a8:	ldr	x0, [x20]
    54ac:	sub	x0, x0, #0x1
    54b0:	str	x0, [x20]
    54b4:	cbnz	x0, 54c0 <PySequence_Fast@plt+0x1280>
    54b8:	mov	x0, x20
    54bc:	bl	3d70 <_Py_Dealloc@plt>
    54c0:	ldr	x0, [x19]
    54c4:	sub	x0, x0, #0x1
    54c8:	str	x0, [x19]
    54cc:	cbz	x0, 54e8 <PySequence_Fast@plt+0x12a8>
    54d0:	mov	x20, #0x0                   	// #0
    54d4:	mov	x0, x20
    54d8:	ldp	x19, x20, [sp, #16]
    54dc:	ldr	x21, [sp, #32]
    54e0:	ldp	x29, x30, [sp], #48
    54e4:	ret
    54e8:	mov	x0, x19
    54ec:	mov	x20, #0x0                   	// #0
    54f0:	bl	3d70 <_Py_Dealloc@plt>
    54f4:	mov	x0, x20
    54f8:	ldp	x19, x20, [sp, #16]
    54fc:	ldr	x21, [sp, #32]
    5500:	ldp	x29, x30, [sp], #48
    5504:	ret
    5508:	mov	x0, x19
    550c:	bl	3d70 <_Py_Dealloc@plt>
    5510:	ldr	x1, [x20, #8]
    5514:	b	5474 <PySequence_Fast@plt+0x1234>
    5518:	bl	3f80 <PyErr_Occurred@plt>
    551c:	cbnz	x0, 54c0 <PySequence_Fast@plt+0x1280>
    5520:	bl	4080 <PyDict_New@plt>
    5524:	mov	x20, x0
    5528:	ldr	x1, [x19]
    552c:	sub	x0, x1, #0x1
    5530:	str	x0, [x19]
    5534:	cbz	x0, 5544 <PySequence_Fast@plt+0x1304>
    5538:	cbnz	x20, 5434 <PySequence_Fast@plt+0x11f4>
    553c:	mov	x20, #0x0                   	// #0
    5540:	b	54d4 <PySequence_Fast@plt+0x1294>
    5544:	mov	x0, x19
    5548:	bl	3d70 <_Py_Dealloc@plt>
    554c:	cbnz	x20, 5434 <PySequence_Fast@plt+0x11f4>
    5550:	b	553c <PySequence_Fast@plt+0x12fc>
    5554:	nop
    5558:	stp	x29, x30, [sp, #-32]!
    555c:	mov	x29, sp
    5560:	ldr	x1, [x0, #8]
    5564:	ldr	x0, [x0, #40]
    5568:	str	x19, [sp, #16]
    556c:	ldr	x19, [x1, #32]
    5570:	cbz	x0, 5590 <PySequence_Fast@plt+0x1350>
    5574:	ldr	x2, [x0, #24]
    5578:	add	x1, x0, #0x20
    557c:	add	x19, x19, #0x40
    5580:	cmp	x2, x1
    5584:	b.eq	5590 <PySequence_Fast@plt+0x1350>  // b.none
    5588:	ldr	x0, [x0, #16]
    558c:	add	x19, x19, x0, lsl #3
    5590:	cmn	x19, #0x1
    5594:	b.eq	55a8 <PySequence_Fast@plt+0x1368>  // b.none
    5598:	mov	x0, x19
    559c:	ldr	x19, [sp, #16]
    55a0:	ldp	x29, x30, [sp], #32
    55a4:	b	3e70 <PyLong_FromSsize_t@plt>
    55a8:	bl	3f80 <PyErr_Occurred@plt>
    55ac:	cbz	x0, 5598 <PySequence_Fast@plt+0x1358>
    55b0:	mov	x0, #0x0                   	// #0
    55b4:	ldr	x19, [sp, #16]
    55b8:	ldp	x29, x30, [sp], #32
    55bc:	ret
    55c0:	stp	x29, x30, [sp, #-48]!
    55c4:	mov	x29, sp
    55c8:	stp	x19, x20, [sp, #16]
    55cc:	mov	x20, x1
    55d0:	ldr	x1, [x1, #8]
    55d4:	ldr	x1, [x1, #168]
    55d8:	str	x21, [sp, #32]
    55dc:	mov	x21, x0
    55e0:	tbz	w1, #28, 5668 <PySequence_Fast@plt+0x1428>
    55e4:	ldrsb	w0, [x20, #32]
    55e8:	tbz	w0, #31, 56c0 <PySequence_Fast@plt+0x1480>
    55ec:	ldr	x0, [x20, #16]
    55f0:	cmp	x0, #0x1
    55f4:	b.eq	56d8 <PySequence_Fast@plt+0x1498>  // b.none
    55f8:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    55fc:	add	x1, x1, #0x328
    5600:	add	x0, x1, #0x1a0
    5604:	bl	3df0 <_PyObject_GC_New@plt>
    5608:	mov	x19, x0
    560c:	cbz	x0, 56a8 <PySequence_Fast@plt+0x1468>
    5610:	ldr	x1, [x20]
    5614:	add	x1, x1, #0x1
    5618:	str	x1, [x20]
    561c:	ldr	x1, [x21]
    5620:	str	x20, [x0, #48]
    5624:	str	wzr, [x0, #56]
    5628:	add	x1, x1, #0x1
    562c:	str	x1, [x21]
    5630:	str	x21, [x0, #40]
    5634:	bl	3dc0 <PyObject_GC_Track@plt>
    5638:	mov	x0, #0x80                  	// #128
    563c:	bl	41f0 <PyMem_Malloc@plt>
    5640:	str	x0, [x19, #16]
    5644:	cbz	x0, 5710 <PySequence_Fast@plt+0x14d0>
    5648:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    564c:	ldr	x21, [sp, #32]
    5650:	ldr	q0, [x0, #3104]
    5654:	mov	x0, x19
    5658:	stur	q0, [x19, #24]
    565c:	ldp	x19, x20, [sp, #16]
    5660:	ldp	x29, x30, [sp], #48
    5664:	ret
    5668:	tbz	w1, #27, 55f8 <PySequence_Fast@plt+0x13b8>
    566c:	ldr	x0, [x20, #16]
    5670:	cmp	x0, #0x1
    5674:	b.ne	55f8 <PySequence_Fast@plt+0x13b8>  // b.any
    5678:	ldrb	w0, [x20, #32]
    567c:	cmp	w0, #0x2a
    5680:	b.ne	55f8 <PySequence_Fast@plt+0x13b8>  // b.any
    5684:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    5688:	add	x1, x1, #0x328
    568c:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    5690:	add	x0, x1, #0x1a0
    5694:	ldr	x20, [x20, #3976]
    5698:	bl	3df0 <_PyObject_GC_New@plt>
    569c:	mov	x19, x0
    56a0:	cbnz	x0, 5610 <PySequence_Fast@plt+0x13d0>
    56a4:	nop
    56a8:	mov	x19, #0x0                   	// #0
    56ac:	mov	x0, x19
    56b0:	ldp	x19, x20, [sp, #16]
    56b4:	ldr	x21, [sp, #32]
    56b8:	ldp	x29, x30, [sp], #48
    56bc:	ret
    56c0:	mov	x0, x20
    56c4:	bl	3c60 <_PyUnicode_Ready@plt>
    56c8:	tbnz	w0, #31, 56a8 <PySequence_Fast@plt+0x1468>
    56cc:	ldr	x0, [x20, #16]
    56d0:	cmp	x0, #0x1
    56d4:	b.ne	55f8 <PySequence_Fast@plt+0x13b8>  // b.any
    56d8:	ldrb	w0, [x20, #32]
    56dc:	and	w1, w0, #0x1c
    56e0:	and	w2, w0, #0x20
    56e4:	cmp	w1, #0x4
    56e8:	b.eq	572c <PySequence_Fast@plt+0x14ec>  // b.none
    56ec:	cmp	w1, #0x8
    56f0:	b.eq	5780 <PySequence_Fast@plt+0x1540>  // b.none
    56f4:	cbnz	w2, 5748 <PySequence_Fast@plt+0x1508>
    56f8:	ldr	x0, [x20, #72]
    56fc:	ldr	w0, [x0]
    5700:	cmp	w0, #0x2a
    5704:	cset	w0, eq  // eq = none
    5708:	cbz	w0, 55f8 <PySequence_Fast@plt+0x13b8>
    570c:	b	5684 <PySequence_Fast@plt+0x1444>
    5710:	ldr	x0, [x19]
    5714:	sub	x0, x0, #0x1
    5718:	str	x0, [x19]
    571c:	cbz	x0, 5770 <PySequence_Fast@plt+0x1530>
    5720:	bl	3d80 <PyErr_NoMemory@plt>
    5724:	mov	x19, #0x0                   	// #0
    5728:	b	56ac <PySequence_Fast@plt+0x146c>
    572c:	cbnz	w2, 575c <PySequence_Fast@plt+0x151c>
    5730:	ldr	x0, [x20, #72]
    5734:	ldrb	w0, [x0]
    5738:	cmp	w0, #0x2a
    573c:	cset	w0, eq  // eq = none
    5740:	cbz	w0, 55f8 <PySequence_Fast@plt+0x13b8>
    5744:	b	5684 <PySequence_Fast@plt+0x1444>
    5748:	tst	x0, #0x40
    574c:	add	x1, x20, #0x48
    5750:	add	x0, x20, #0x30
    5754:	csel	x0, x1, x0, eq  // eq = none
    5758:	b	56fc <PySequence_Fast@plt+0x14bc>
    575c:	tst	x0, #0x40
    5760:	add	x1, x20, #0x48
    5764:	add	x0, x20, #0x30
    5768:	csel	x0, x1, x0, eq  // eq = none
    576c:	b	5734 <PySequence_Fast@plt+0x14f4>
    5770:	mov	x0, x19
    5774:	bl	3d70 <_Py_Dealloc@plt>
    5778:	bl	3d80 <PyErr_NoMemory@plt>
    577c:	b	5724 <PySequence_Fast@plt+0x14e4>
    5780:	cbz	w2, 57a8 <PySequence_Fast@plt+0x1568>
    5784:	tst	x0, #0x40
    5788:	add	x1, x20, #0x48
    578c:	add	x0, x20, #0x30
    5790:	csel	x0, x1, x0, eq  // eq = none
    5794:	ldrh	w0, [x0]
    5798:	cmp	w0, #0x2a
    579c:	cset	w0, eq  // eq = none
    57a0:	cbz	w0, 55f8 <PySequence_Fast@plt+0x13b8>
    57a4:	b	5684 <PySequence_Fast@plt+0x1444>
    57a8:	ldr	x0, [x20, #72]
    57ac:	b	5794 <PySequence_Fast@plt+0x1554>
    57b0:	sub	sp, sp, #0x40
    57b4:	stp	x29, x30, [sp, #16]
    57b8:	add	x29, sp, #0x10
    57bc:	stp	x19, x20, [sp, #32]
    57c0:	mov	x19, x0
    57c4:	mov	x0, x1
    57c8:	mov	x1, x2
    57cc:	mov	x2, x3
    57d0:	cbz	x3, 5850 <PySequence_Fast@plt+0x1610>
    57d4:	ldr	x20, [x3, #16]
    57d8:	add	x20, x1, x20
    57dc:	add	x3, sp, #0x38
    57e0:	str	x3, [sp]
    57e4:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    57e8:	add	x4, x4, #0x9c0
    57ec:	mov	x3, x2
    57f0:	add	x4, x4, #0xc0
    57f4:	mov	w7, #0x0                   	// #0
    57f8:	mov	w6, #0x1                   	// #1
    57fc:	mov	w5, #0x0                   	// #0
    5800:	mov	x2, #0x0                   	// #0
    5804:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5808:	cbz	x0, 5890 <PySequence_Fast@plt+0x1650>
    580c:	cbz	x20, 5868 <PySequence_Fast@plt+0x1628>
    5810:	ldr	x20, [x0]
    5814:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    5818:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    581c:	mov	x2, #0x1                   	// #1
    5820:	ldr	x0, [x0, #3936]
    5824:	add	x1, x1, #0x1d0
    5828:	ldr	x0, [x0]
    582c:	bl	3d60 <PyErr_WarnEx@plt>
    5830:	tbnz	w0, #31, 5890 <PySequence_Fast@plt+0x1650>
    5834:	mov	x1, x20
    5838:	mov	x0, x19
    583c:	bl	55c0 <PySequence_Fast@plt+0x1380>
    5840:	ldp	x29, x30, [sp, #16]
    5844:	ldp	x19, x20, [sp, #32]
    5848:	add	sp, sp, #0x40
    584c:	ret
    5850:	tbnz	x1, #63, 58a4 <PySequence_Fast@plt+0x1664>
    5854:	cmp	x0, #0x0
    5858:	mov	x20, x1
    585c:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    5860:	b.gt	57dc <PySequence_Fast@plt+0x159c>
    5864:	cbnz	x20, 5810 <PySequence_Fast@plt+0x15d0>
    5868:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    586c:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    5870:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    5874:	mov	x2, #0x1                   	// #1
    5878:	ldr	x0, [x0, #3936]
    587c:	add	x1, x1, #0x1d0
    5880:	ldr	x20, [x20, #3976]
    5884:	ldr	x0, [x0]
    5888:	bl	3d60 <PyErr_WarnEx@plt>
    588c:	tbz	w0, #31, 5834 <PySequence_Fast@plt+0x15f4>
    5890:	mov	x0, #0x0                   	// #0
    5894:	ldp	x29, x30, [sp, #16]
    5898:	ldp	x19, x20, [sp, #32]
    589c:	add	sp, sp, #0x40
    58a0:	ret
    58a4:	add	x2, sp, #0x38
    58a8:	str	x2, [sp]
    58ac:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    58b0:	add	x4, x4, #0x9c0
    58b4:	add	x4, x4, #0xc0
    58b8:	mov	w7, #0x0                   	// #0
    58bc:	mov	w6, #0x1                   	// #1
    58c0:	mov	w5, #0x0                   	// #0
    58c4:	mov	x2, #0x0                   	// #0
    58c8:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    58cc:	cbnz	x0, 5810 <PySequence_Fast@plt+0x15d0>
    58d0:	mov	x0, #0x0                   	// #0
    58d4:	b	5894 <PySequence_Fast@plt+0x1654>
    58d8:	sub	sp, sp, #0x40
    58dc:	stp	x29, x30, [sp, #16]
    58e0:	add	x29, sp, #0x10
    58e4:	stp	x19, x20, [sp, #32]
    58e8:	mov	x19, x0
    58ec:	mov	x0, x1
    58f0:	mov	x1, x2
    58f4:	mov	x2, x3
    58f8:	cbz	x3, 5954 <PySequence_Fast@plt+0x1714>
    58fc:	ldr	x20, [x3, #16]
    5900:	add	x20, x1, x20
    5904:	add	x3, sp, #0x38
    5908:	str	x3, [sp]
    590c:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    5910:	add	x4, x4, #0x9c0
    5914:	mov	x3, x2
    5918:	add	x4, x4, #0x100
    591c:	mov	w7, #0x0                   	// #0
    5920:	mov	w6, #0x1                   	// #1
    5924:	mov	w5, #0x0                   	// #0
    5928:	mov	x2, #0x0                   	// #0
    592c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5930:	cbz	x0, 59a8 <PySequence_Fast@plt+0x1768>
    5934:	cbz	x20, 596c <PySequence_Fast@plt+0x172c>
    5938:	ldr	x1, [x0]
    593c:	mov	x0, x19
    5940:	bl	55c0 <PySequence_Fast@plt+0x1380>
    5944:	ldp	x29, x30, [sp, #16]
    5948:	ldp	x19, x20, [sp, #32]
    594c:	add	sp, sp, #0x40
    5950:	ret
    5954:	tbnz	x1, #63, 5978 <PySequence_Fast@plt+0x1738>
    5958:	cmp	x0, #0x0
    595c:	mov	x20, x1
    5960:	ccmp	x1, #0x1, #0x0, ne  // ne = any
    5964:	b.gt	5904 <PySequence_Fast@plt+0x16c4>
    5968:	cbnz	x20, 5938 <PySequence_Fast@plt+0x16f8>
    596c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    5970:	ldr	x1, [x1, #3976]
    5974:	b	593c <PySequence_Fast@plt+0x16fc>
    5978:	add	x2, sp, #0x38
    597c:	str	x2, [sp]
    5980:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    5984:	add	x4, x4, #0x9c0
    5988:	add	x4, x4, #0x100
    598c:	mov	w7, #0x0                   	// #0
    5990:	mov	w6, #0x1                   	// #1
    5994:	mov	w5, #0x0                   	// #0
    5998:	mov	x2, #0x0                   	// #0
    599c:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    59a0:	cbnz	x0, 5938 <PySequence_Fast@plt+0x16f8>
    59a4:	nop
    59a8:	mov	x0, #0x0                   	// #0
    59ac:	b	5944 <PySequence_Fast@plt+0x1704>
    59b0:	sub	sp, sp, #0x60
    59b4:	mov	x5, x1
    59b8:	mov	x1, x2
    59bc:	stp	x29, x30, [sp, #16]
    59c0:	add	x29, sp, #0x10
    59c4:	stp	x19, x20, [sp, #32]
    59c8:	stp	x21, x22, [sp, #48]
    59cc:	mov	x21, x0
    59d0:	cbz	x3, 5a94 <PySequence_Fast@plt+0x1854>
    59d4:	ldr	x20, [x3, #16]
    59d8:	add	x20, x2, x20
    59dc:	add	x0, sp, #0x50
    59e0:	str	x0, [sp]
    59e4:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    59e8:	mov	x0, x5
    59ec:	add	x4, x19, #0x9c0
    59f0:	mov	w5, #0x1                   	// #1
    59f4:	add	x4, x4, #0x140
    59f8:	mov	w7, #0x0                   	// #0
    59fc:	mov	w6, #0x2                   	// #2
    5a00:	mov	x2, #0x0                   	// #0
    5a04:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5a08:	mov	x5, x0
    5a0c:	cbz	x0, 5bb4 <PySequence_Fast@plt+0x1974>
    5a10:	str	x23, [sp, #64]
    5a14:	add	x0, x19, #0x9c0
    5a18:	add	x0, x0, #0x40
    5a1c:	cmp	x20, #0x1
    5a20:	ldr	x23, [x5]
    5a24:	b.eq	5acc <PySequence_Fast@plt+0x188c>  // b.none
    5a28:	ldr	x20, [x5, #8]
    5a2c:	bl	3fc0 <PyState_FindModule@plt>
    5a30:	bl	3e10 <PyModule_GetState@plt>
    5a34:	mov	x7, x0
    5a38:	mov	x0, x23
    5a3c:	bl	4368 <PySequence_Fast@plt+0x128>
    5a40:	cmp	w0, #0x0
    5a44:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    5a48:	ldr	x1, [x1, #3976]
    5a4c:	ccmp	x20, x1, #0x0, eq  // eq = none
    5a50:	b.eq	5ae4 <PySequence_Fast@plt+0x18a4>  // b.none
    5a54:	ldr	x0, [x7, #16]
    5a58:	add	x1, x19, #0x9c0
    5a5c:	mov	x3, x23
    5a60:	add	x1, x1, #0x180
    5a64:	mov	x4, x20
    5a68:	mov	x2, x21
    5a6c:	mov	x5, #0x0                   	// #0
    5a70:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    5a74:	ldr	x23, [sp, #64]
    5a78:	mov	x22, x0
    5a7c:	mov	x0, x22
    5a80:	ldp	x29, x30, [sp, #16]
    5a84:	ldp	x19, x20, [sp, #32]
    5a88:	ldp	x21, x22, [sp, #48]
    5a8c:	add	sp, sp, #0x60
    5a90:	ret
    5a94:	sub	x0, x2, #0x1
    5a98:	cmp	x0, #0x1
    5a9c:	b.hi	5aa4 <PySequence_Fast@plt+0x1864>  // b.pmore
    5aa0:	cbnz	x5, 5aac <PySequence_Fast@plt+0x186c>
    5aa4:	mov	x20, x1
    5aa8:	b	59dc <PySequence_Fast@plt+0x179c>
    5aac:	str	x23, [sp, #64]
    5ab0:	mov	x20, x2
    5ab4:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    5ab8:	add	x0, x19, #0x9c0
    5abc:	add	x0, x0, #0x40
    5ac0:	cmp	x20, #0x1
    5ac4:	ldr	x23, [x5]
    5ac8:	b.ne	5a28 <PySequence_Fast@plt+0x17e8>  // b.any
    5acc:	bl	3fc0 <PyState_FindModule@plt>
    5ad0:	bl	3e10 <PyModule_GetState@plt>
    5ad4:	mov	x7, x0
    5ad8:	mov	x0, x23
    5adc:	bl	4368 <PySequence_Fast@plt+0x128>
    5ae0:	cbnz	w0, 5bf4 <PySequence_Fast@plt+0x19b4>
    5ae4:	mov	x0, #0x0                   	// #0
    5ae8:	bl	3c50 <PyList_New@plt>
    5aec:	mov	x22, x0
    5af0:	cbz	x0, 5bb0 <PySequence_Fast@plt+0x1970>
    5af4:	ldr	x0, [x21, #40]
    5af8:	cbz	x0, 5b74 <PySequence_Fast@plt+0x1934>
    5afc:	ldr	x1, [x0, #8]
    5b00:	cmp	x1, #0x0
    5b04:	b.le	5b74 <PySequence_Fast@plt+0x1934>
    5b08:	mov	x20, #0x0                   	// #0
    5b0c:	nop
    5b10:	ldr	x0, [x0, #24]
    5b14:	mov	x1, x23
    5b18:	mov	w2, #0x2                   	// #2
    5b1c:	ldr	x19, [x0, x20, lsl #3]
    5b20:	ldr	x3, [x19]
    5b24:	ldr	x0, [x19, #16]
    5b28:	add	x3, x3, #0x1
    5b2c:	str	x3, [x19]
    5b30:	bl	3ec0 <PyObject_RichCompareBool@plt>
    5b34:	cmp	w0, #0x0
    5b38:	cbz	w0, 5b50 <PySequence_Fast@plt+0x1910>
    5b3c:	b.lt	5b90 <PySequence_Fast@plt+0x1950>  // b.tstop
    5b40:	mov	x1, x19
    5b44:	mov	x0, x22
    5b48:	bl	3f00 <PyList_Append@plt>
    5b4c:	tbnz	w0, #31, 5b90 <PySequence_Fast@plt+0x1950>
    5b50:	ldr	x0, [x19]
    5b54:	sub	x0, x0, #0x1
    5b58:	str	x0, [x19]
    5b5c:	cbz	x0, 5bd0 <PySequence_Fast@plt+0x1990>
    5b60:	ldr	x0, [x21, #40]
    5b64:	add	x20, x20, #0x1
    5b68:	ldr	x1, [x0, #8]
    5b6c:	cmp	x20, x1
    5b70:	b.lt	5b10 <PySequence_Fast@plt+0x18d0>  // b.tstop
    5b74:	ldr	x23, [sp, #64]
    5b78:	mov	x0, x22
    5b7c:	ldp	x29, x30, [sp, #16]
    5b80:	ldp	x19, x20, [sp, #32]
    5b84:	ldp	x21, x22, [sp, #48]
    5b88:	add	sp, sp, #0x60
    5b8c:	ret
    5b90:	ldr	x0, [x19]
    5b94:	sub	x0, x0, #0x1
    5b98:	str	x0, [x19]
    5b9c:	cbz	x0, 5c14 <PySequence_Fast@plt+0x19d4>
    5ba0:	ldr	x0, [x22]
    5ba4:	sub	x0, x0, #0x1
    5ba8:	str	x0, [x22]
    5bac:	cbz	x0, 5c00 <PySequence_Fast@plt+0x19c0>
    5bb0:	ldr	x23, [sp, #64]
    5bb4:	mov	x22, #0x0                   	// #0
    5bb8:	mov	x0, x22
    5bbc:	ldp	x29, x30, [sp, #16]
    5bc0:	ldp	x19, x20, [sp, #32]
    5bc4:	ldp	x21, x22, [sp, #48]
    5bc8:	add	sp, sp, #0x60
    5bcc:	ret
    5bd0:	mov	x0, x19
    5bd4:	bl	3d70 <_Py_Dealloc@plt>
    5bd8:	ldr	x0, [x21, #40]
    5bdc:	add	x20, x20, #0x1
    5be0:	ldr	x1, [x0, #8]
    5be4:	cmp	x20, x1
    5be8:	b.lt	5b10 <PySequence_Fast@plt+0x18d0>  // b.tstop
    5bec:	ldr	x23, [sp, #64]
    5bf0:	b	5b78 <PySequence_Fast@plt+0x1938>
    5bf4:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    5bf8:	ldr	x20, [x20, #3976]
    5bfc:	b	5a54 <PySequence_Fast@plt+0x1814>
    5c00:	mov	x0, x22
    5c04:	mov	x22, #0x0                   	// #0
    5c08:	bl	3d70 <_Py_Dealloc@plt>
    5c0c:	ldr	x23, [sp, #64]
    5c10:	b	5a7c <PySequence_Fast@plt+0x183c>
    5c14:	mov	x0, x19
    5c18:	bl	3d70 <_Py_Dealloc@plt>
    5c1c:	b	5ba0 <PySequence_Fast@plt+0x1960>
    5c20:	sub	sp, sp, #0x60
    5c24:	mov	x5, x1
    5c28:	mov	x1, x2
    5c2c:	stp	x29, x30, [sp, #16]
    5c30:	add	x29, sp, #0x10
    5c34:	stp	x19, x20, [sp, #32]
    5c38:	stp	x21, x22, [sp, #48]
    5c3c:	mov	x21, x0
    5c40:	cbz	x3, 5d04 <PySequence_Fast@plt+0x1ac4>
    5c44:	ldr	x20, [x3, #16]
    5c48:	add	x20, x2, x20
    5c4c:	add	x0, sp, #0x50
    5c50:	str	x0, [sp]
    5c54:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    5c58:	mov	x0, x5
    5c5c:	add	x4, x19, #0x9c0
    5c60:	mov	w5, #0x1                   	// #1
    5c64:	add	x4, x4, #0x198
    5c68:	mov	w7, #0x0                   	// #0
    5c6c:	mov	w6, #0x2                   	// #2
    5c70:	mov	x2, #0x0                   	// #0
    5c74:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5c78:	mov	x5, x0
    5c7c:	cbz	x0, 5e0c <PySequence_Fast@plt+0x1bcc>
    5c80:	str	x23, [sp, #64]
    5c84:	add	x0, x19, #0x9c0
    5c88:	add	x0, x0, #0x40
    5c8c:	cmp	x20, #0x1
    5c90:	ldr	x23, [x5]
    5c94:	b.eq	5d3c <PySequence_Fast@plt+0x1afc>  // b.none
    5c98:	ldr	x20, [x5, #8]
    5c9c:	bl	3fc0 <PyState_FindModule@plt>
    5ca0:	bl	3e10 <PyModule_GetState@plt>
    5ca4:	mov	x7, x0
    5ca8:	mov	x0, x23
    5cac:	bl	4368 <PySequence_Fast@plt+0x128>
    5cb0:	cmp	w0, #0x0
    5cb4:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    5cb8:	ldr	x1, [x1, #3976]
    5cbc:	ccmp	x20, x1, #0x0, eq  // eq = none
    5cc0:	b.eq	5d54 <PySequence_Fast@plt+0x1b14>  // b.none
    5cc4:	ldr	x0, [x7, #16]
    5cc8:	add	x1, x19, #0x9c0
    5ccc:	mov	x3, x23
    5cd0:	add	x1, x1, #0x1d8
    5cd4:	mov	x4, x20
    5cd8:	mov	x2, x21
    5cdc:	mov	x5, #0x0                   	// #0
    5ce0:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    5ce4:	ldr	x23, [sp, #64]
    5ce8:	mov	x19, x0
    5cec:	mov	x0, x19
    5cf0:	ldp	x29, x30, [sp, #16]
    5cf4:	ldp	x19, x20, [sp, #32]
    5cf8:	ldp	x21, x22, [sp, #48]
    5cfc:	add	sp, sp, #0x60
    5d00:	ret
    5d04:	sub	x0, x2, #0x1
    5d08:	cmp	x0, #0x1
    5d0c:	b.hi	5d14 <PySequence_Fast@plt+0x1ad4>  // b.pmore
    5d10:	cbnz	x5, 5d1c <PySequence_Fast@plt+0x1adc>
    5d14:	mov	x20, x1
    5d18:	b	5c4c <PySequence_Fast@plt+0x1a0c>
    5d1c:	str	x23, [sp, #64]
    5d20:	mov	x20, x2
    5d24:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    5d28:	add	x0, x19, #0x9c0
    5d2c:	add	x0, x0, #0x40
    5d30:	cmp	x20, #0x1
    5d34:	ldr	x23, [x5]
    5d38:	b.ne	5c98 <PySequence_Fast@plt+0x1a58>  // b.any
    5d3c:	bl	3fc0 <PyState_FindModule@plt>
    5d40:	bl	3e10 <PyModule_GetState@plt>
    5d44:	mov	x7, x0
    5d48:	mov	x0, x23
    5d4c:	bl	4368 <PySequence_Fast@plt+0x128>
    5d50:	cbnz	w0, 5e30 <PySequence_Fast@plt+0x1bf0>
    5d54:	ldr	x0, [x21, #40]
    5d58:	cbz	x0, 5dc8 <PySequence_Fast@plt+0x1b88>
    5d5c:	ldr	x1, [x0, #8]
    5d60:	mov	x22, #0x0                   	// #0
    5d64:	cmp	x1, #0x0
    5d68:	b.le	5dc8 <PySequence_Fast@plt+0x1b88>
    5d6c:	nop
    5d70:	ldr	x0, [x0, #24]
    5d74:	mov	x1, x23
    5d78:	mov	w2, #0x2                   	// #2
    5d7c:	ldr	x19, [x0, x22, lsl #3]
    5d80:	add	x22, x22, #0x1
    5d84:	ldr	x3, [x19]
    5d88:	ldr	x0, [x19, #16]
    5d8c:	add	x3, x3, #0x1
    5d90:	str	x3, [x19]
    5d94:	bl	3ec0 <PyObject_RichCompareBool@plt>
    5d98:	mov	w20, w0
    5d9c:	cmp	w0, #0x0
    5da0:	b.gt	5e28 <PySequence_Fast@plt+0x1be8>
    5da4:	ldr	x0, [x19]
    5da8:	sub	x0, x0, #0x1
    5dac:	str	x0, [x19]
    5db0:	cbz	x0, 5dfc <PySequence_Fast@plt+0x1bbc>
    5db4:	cbnz	w20, 5e08 <PySequence_Fast@plt+0x1bc8>
    5db8:	ldr	x0, [x21, #40]
    5dbc:	ldr	x1, [x0, #8]
    5dc0:	cmp	x22, x1
    5dc4:	b.lt	5d70 <PySequence_Fast@plt+0x1b30>  // b.tstop
    5dc8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    5dcc:	ldr	x23, [sp, #64]
    5dd0:	ldr	x0, [x0, #3976]
    5dd4:	ldp	x29, x30, [sp, #16]
    5dd8:	mov	x19, x0
    5ddc:	ldr	x1, [x0]
    5de0:	ldp	x21, x22, [sp, #48]
    5de4:	add	x1, x1, #0x1
    5de8:	str	x1, [x0]
    5dec:	mov	x0, x19
    5df0:	ldp	x19, x20, [sp, #32]
    5df4:	add	sp, sp, #0x60
    5df8:	ret
    5dfc:	mov	x0, x19
    5e00:	bl	3d70 <_Py_Dealloc@plt>
    5e04:	b	5db4 <PySequence_Fast@plt+0x1b74>
    5e08:	ldr	x23, [sp, #64]
    5e0c:	mov	x19, #0x0                   	// #0
    5e10:	mov	x0, x19
    5e14:	ldp	x29, x30, [sp, #16]
    5e18:	ldp	x19, x20, [sp, #32]
    5e1c:	ldp	x21, x22, [sp, #48]
    5e20:	add	sp, sp, #0x60
    5e24:	ret
    5e28:	ldr	x23, [sp, #64]
    5e2c:	b	5cec <PySequence_Fast@plt+0x1aac>
    5e30:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    5e34:	ldr	x20, [x20, #3976]
    5e38:	b	5cc4 <PySequence_Fast@plt+0x1a84>
    5e3c:	nop
    5e40:	sub	sp, sp, #0x90
    5e44:	stp	x29, x30, [sp, #16]
    5e48:	add	x29, sp, #0x10
    5e4c:	stp	x19, x20, [sp, #32]
    5e50:	mov	x19, x0
    5e54:	stp	x21, x22, [sp, #48]
    5e58:	add	x22, x1, #0x18
    5e5c:	ldr	x1, [x1, #16]
    5e60:	cbz	x2, 5fd0 <PySequence_Fast@plt+0x1d90>
    5e64:	ldr	x20, [x2, #16]
    5e68:	add	x20, x1, x20
    5e6c:	add	x0, sp, #0x68
    5e70:	str	x0, [sp]
    5e74:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    5e78:	add	x4, x4, #0x9c0
    5e7c:	mov	x0, x22
    5e80:	add	x4, x4, #0x1f0
    5e84:	mov	w7, #0x0                   	// #0
    5e88:	mov	w6, #0x1                   	// #1
    5e8c:	mov	w5, #0x0                   	// #0
    5e90:	mov	x3, #0x0                   	// #0
    5e94:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    5e98:	mov	x22, x0
    5e9c:	cbz	x0, 6170 <PySequence_Fast@plt+0x1f30>
    5ea0:	stp	x23, x24, [sp, #64]
    5ea4:	stp	x25, x26, [sp, #80]
    5ea8:	cbz	x20, 5ff0 <PySequence_Fast@plt+0x1db0>
    5eac:	ldr	x24, [x22]
    5eb0:	cbz	x24, 60c8 <PySequence_Fast@plt+0x1e88>
    5eb4:	subs	x20, x20, #0x1
    5eb8:	b.eq	6138 <PySequence_Fast@plt+0x1ef8>  // b.none
    5ebc:	ldr	x23, [x22, #8]
    5ec0:	cbz	x23, 60d8 <PySequence_Fast@plt+0x1e98>
    5ec4:	subs	x20, x20, #0x1
    5ec8:	b.eq	6124 <PySequence_Fast@plt+0x1ee4>  // b.none
    5ecc:	ldr	x26, [x22, #16]
    5ed0:	cbz	x26, 60e8 <PySequence_Fast@plt+0x1ea8>
    5ed4:	subs	x20, x20, #0x1
    5ed8:	b.eq	6150 <PySequence_Fast@plt+0x1f10>  // b.none
    5edc:	ldr	x0, [x22, #24]
    5ee0:	cbz	x0, 60f8 <PySequence_Fast@plt+0x1eb8>
    5ee4:	bl	4050 <PyObject_IsTrue@plt>
    5ee8:	mov	w25, w0
    5eec:	tbnz	w0, #31, 6168 <PySequence_Fast@plt+0x1f28>
    5ef0:	cmp	x20, #0x1
    5ef4:	b.eq	6160 <PySequence_Fast@plt+0x1f20>  // b.none
    5ef8:	ldr	x0, [x22, #32]
    5efc:	bl	4050 <PyObject_IsTrue@plt>
    5f00:	mov	w20, w0
    5f04:	tbnz	w0, #31, 6168 <PySequence_Fast@plt+0x1f28>
    5f08:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    5f0c:	ldr	x1, [x21, #3976]
    5f10:	ldr	x0, [x19, #72]
    5f14:	cmp	x24, x1
    5f18:	b.eq	6178 <PySequence_Fast@plt+0x1f38>  // b.none
    5f1c:	ldr	x1, [x24]
    5f20:	add	x1, x1, #0x1
    5f24:	str	x1, [x24]
    5f28:	str	x24, [x19, #72]
    5f2c:	cbz	x0, 5f40 <PySequence_Fast@plt+0x1d00>
    5f30:	ldr	x1, [x0]
    5f34:	sub	x1, x1, #0x1
    5f38:	str	x1, [x0]
    5f3c:	cbz	x1, 6020 <PySequence_Fast@plt+0x1de0>
    5f40:	ldr	x0, [x21, #3976]
    5f44:	cmp	x23, x0
    5f48:	b.eq	6088 <PySequence_Fast@plt+0x1e48>  // b.none
    5f4c:	ldr	x1, [x23]
    5f50:	ldr	x0, [x19, #80]
    5f54:	add	x1, x1, #0x1
    5f58:	str	x1, [x23]
    5f5c:	str	x23, [x19, #80]
    5f60:	cbz	x0, 5f74 <PySequence_Fast@plt+0x1d34>
    5f64:	ldr	x1, [x0]
    5f68:	sub	x1, x1, #0x1
    5f6c:	str	x1, [x0]
    5f70:	cbz	x1, 6100 <PySequence_Fast@plt+0x1ec0>
    5f74:	strb	w25, [x19, #152]
    5f78:	ldr	x21, [x21, #3976]
    5f7c:	cmp	x26, x21
    5f80:	b.eq	6028 <PySequence_Fast@plt+0x1de8>  // b.none
    5f84:	ldr	x1, [x26]
    5f88:	ldr	x0, [x19, #88]
    5f8c:	add	x1, x1, #0x1
    5f90:	str	x1, [x26]
    5f94:	str	x26, [x19, #88]
    5f98:	cbz	x0, 5fac <PySequence_Fast@plt+0x1d6c>
    5f9c:	ldr	x1, [x0]
    5fa0:	sub	x1, x1, #0x1
    5fa4:	str	x1, [x0]
    5fa8:	cbz	x1, 611c <PySequence_Fast@plt+0x1edc>
    5fac:	strb	w20, [x19, #153]
    5fb0:	mov	w0, #0x0                   	// #0
    5fb4:	ldp	x23, x24, [sp, #64]
    5fb8:	ldp	x25, x26, [sp, #80]
    5fbc:	ldp	x29, x30, [sp, #16]
    5fc0:	ldp	x19, x20, [sp, #32]
    5fc4:	ldp	x21, x22, [sp, #48]
    5fc8:	add	sp, sp, #0x90
    5fcc:	ret
    5fd0:	cmp	x1, #0x1
    5fd4:	b.ls	5fe0 <PySequence_Fast@plt+0x1da0>  // b.plast
    5fd8:	mov	x20, x1
    5fdc:	b	5e6c <PySequence_Fast@plt+0x1c2c>
    5fe0:	stp	x23, x24, [sp, #64]
    5fe4:	mov	x20, x1
    5fe8:	stp	x25, x26, [sp, #80]
    5fec:	cbnz	x20, 5eac <PySequence_Fast@plt+0x1c6c>
    5ff0:	ldr	x0, [x19, #72]
    5ff4:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    5ff8:	mov	w20, #0x0                   	// #0
    5ffc:	mov	w25, #0x0                   	// #0
    6000:	cbz	x0, 6084 <PySequence_Fast@plt+0x1e44>
    6004:	ldr	x1, [x0]
    6008:	str	xzr, [x19, #72]
    600c:	sub	x1, x1, #0x1
    6010:	str	x1, [x0]
    6014:	cbnz	x1, 6084 <PySequence_Fast@plt+0x1e44>
    6018:	ldr	x23, [x21, #3976]
    601c:	mov	x26, x23
    6020:	bl	3d70 <_Py_Dealloc@plt>
    6024:	b	5f40 <PySequence_Fast@plt+0x1d00>
    6028:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    602c:	add	x0, x0, #0x9c0
    6030:	add	x0, x0, #0x40
    6034:	bl	3fc0 <PyState_FindModule@plt>
    6038:	bl	3e10 <PyModule_GetState@plt>
    603c:	ldr	x26, [x0, #32]
    6040:	cbnz	x26, 5f84 <PySequence_Fast@plt+0x1d44>
    6044:	ldr	x0, [x19, #88]
    6048:	cbz	x0, 6060 <PySequence_Fast@plt+0x1e20>
    604c:	ldr	x1, [x0]
    6050:	str	xzr, [x19, #88]
    6054:	sub	x1, x1, #0x1
    6058:	str	x1, [x0]
    605c:	cbz	x1, 6114 <PySequence_Fast@plt+0x1ed4>
    6060:	strb	wzr, [x19, #153]
    6064:	mov	w0, #0x0                   	// #0
    6068:	ldp	x29, x30, [sp, #16]
    606c:	ldp	x19, x20, [sp, #32]
    6070:	ldp	x21, x22, [sp, #48]
    6074:	ldp	x23, x24, [sp, #64]
    6078:	ldp	x25, x26, [sp, #80]
    607c:	add	sp, sp, #0x90
    6080:	ret
    6084:	ldr	x26, [x21, #3976]
    6088:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    608c:	add	x0, x0, #0x9c0
    6090:	add	x0, x0, #0x40
    6094:	bl	3fc0 <PyState_FindModule@plt>
    6098:	bl	3e10 <PyModule_GetState@plt>
    609c:	ldr	x23, [x0, #24]
    60a0:	cbnz	x23, 5f4c <PySequence_Fast@plt+0x1d0c>
    60a4:	ldr	x0, [x19, #80]
    60a8:	cbz	x0, 60c0 <PySequence_Fast@plt+0x1e80>
    60ac:	ldr	x1, [x0]
    60b0:	str	xzr, [x19, #80]
    60b4:	sub	x1, x1, #0x1
    60b8:	str	x1, [x0]
    60bc:	cbz	x1, 6108 <PySequence_Fast@plt+0x1ec8>
    60c0:	strb	wzr, [x19, #152]
    60c4:	b	5f78 <PySequence_Fast@plt+0x1d38>
    60c8:	ldr	x23, [x22, #8]
    60cc:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    60d0:	ldr	x24, [x21, #3976]
    60d4:	cbnz	x23, 5ec4 <PySequence_Fast@plt+0x1c84>
    60d8:	ldr	x26, [x22, #16]
    60dc:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    60e0:	ldr	x23, [x21, #3976]
    60e4:	cbnz	x26, 5ed4 <PySequence_Fast@plt+0x1c94>
    60e8:	ldr	x0, [x22, #24]
    60ec:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    60f0:	ldr	x26, [x21, #3976]
    60f4:	cbnz	x0, 5ee4 <PySequence_Fast@plt+0x1ca4>
    60f8:	mov	w25, #0x0                   	// #0
    60fc:	b	5ef8 <PySequence_Fast@plt+0x1cb8>
    6100:	bl	3d70 <_Py_Dealloc@plt>
    6104:	b	5f74 <PySequence_Fast@plt+0x1d34>
    6108:	bl	3d70 <_Py_Dealloc@plt>
    610c:	strb	wzr, [x19, #152]
    6110:	b	5f78 <PySequence_Fast@plt+0x1d38>
    6114:	bl	3d70 <_Py_Dealloc@plt>
    6118:	b	6060 <PySequence_Fast@plt+0x1e20>
    611c:	bl	3d70 <_Py_Dealloc@plt>
    6120:	b	5fac <PySequence_Fast@plt+0x1d6c>
    6124:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    6128:	mov	w20, #0x0                   	// #0
    612c:	mov	w25, #0x0                   	// #0
    6130:	ldr	x26, [x21, #3976]
    6134:	b	5f0c <PySequence_Fast@plt+0x1ccc>
    6138:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    613c:	mov	w20, #0x0                   	// #0
    6140:	mov	w25, #0x0                   	// #0
    6144:	ldr	x26, [x21, #3976]
    6148:	mov	x23, x26
    614c:	b	5f0c <PySequence_Fast@plt+0x1ccc>
    6150:	mov	w20, #0x0                   	// #0
    6154:	mov	w25, #0x0                   	// #0
    6158:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    615c:	b	5f0c <PySequence_Fast@plt+0x1ccc>
    6160:	mov	w20, #0x0                   	// #0
    6164:	b	5f08 <PySequence_Fast@plt+0x1cc8>
    6168:	ldp	x23, x24, [sp, #64]
    616c:	ldp	x25, x26, [sp, #80]
    6170:	mov	w0, #0xffffffff            	// #-1
    6174:	b	5fbc <PySequence_Fast@plt+0x1d7c>
    6178:	cbz	x0, 5f40 <PySequence_Fast@plt+0x1d00>
    617c:	ldr	x1, [x0]
    6180:	str	xzr, [x19, #72]
    6184:	sub	x1, x1, #0x1
    6188:	str	x1, [x0]
    618c:	cbnz	x1, 5f40 <PySequence_Fast@plt+0x1d00>
    6190:	bl	3d70 <_Py_Dealloc@plt>
    6194:	b	5f40 <PySequence_Fast@plt+0x1d00>
    6198:	stp	x29, x30, [sp, #-48]!
    619c:	mov	x29, sp
    61a0:	str	x21, [sp, #32]
    61a4:	ldr	x21, [x0, #24]
    61a8:	stp	x19, x20, [sp, #16]
    61ac:	mov	x20, x0
    61b0:	str	xzr, [x0, #24]
    61b4:	bl	4220 <PyObject_GC_UnTrack@plt>
    61b8:	cbz	x21, 626c <PySequence_Fast@plt+0x202c>
    61bc:	sub	x19, x21, #0x1
    61c0:	ldr	x2, [x20, #16]
    61c4:	b	61d0 <PySequence_Fast@plt+0x1f90>
    61c8:	cmn	x19, #0x1
    61cc:	b.eq	6200 <PySequence_Fast@plt+0x1fc0>  // b.none
    61d0:	lsl	x1, x19, #4
    61d4:	sub	x19, x19, #0x1
    61d8:	ldr	x0, [x2, x1]
    61dc:	cbz	x0, 61c8 <PySequence_Fast@plt+0x1f88>
    61e0:	ldr	x1, [x0]
    61e4:	sub	x1, x1, #0x1
    61e8:	str	x1, [x0]
    61ec:	cbnz	x1, 61c8 <PySequence_Fast@plt+0x1f88>
    61f0:	bl	3d70 <_Py_Dealloc@plt>
    61f4:	cmn	x19, #0x1
    61f8:	ldr	x2, [x20, #16]
    61fc:	b.ne	61d0 <PySequence_Fast@plt+0x1f90>  // b.any
    6200:	mov	x0, x2
    6204:	bl	3cd0 <PyMem_Free@plt>
    6208:	ldr	x0, [x20, #48]
    620c:	cbz	x0, 6220 <PySequence_Fast@plt+0x1fe0>
    6210:	ldr	x1, [x0]
    6214:	sub	x1, x1, #0x1
    6218:	str	x1, [x0]
    621c:	cbz	x1, 6264 <PySequence_Fast@plt+0x2024>
    6220:	ldr	x0, [x20, #40]
    6224:	cbz	x0, 6238 <PySequence_Fast@plt+0x1ff8>
    6228:	ldr	x1, [x0]
    622c:	sub	x1, x1, #0x1
    6230:	str	x1, [x0]
    6234:	cbz	x1, 624c <PySequence_Fast@plt+0x200c>
    6238:	mov	x0, x20
    623c:	ldp	x19, x20, [sp, #16]
    6240:	ldr	x21, [sp, #32]
    6244:	ldp	x29, x30, [sp], #48
    6248:	b	3da0 <PyObject_GC_Del@plt>
    624c:	bl	3d70 <_Py_Dealloc@plt>
    6250:	mov	x0, x20
    6254:	ldp	x19, x20, [sp, #16]
    6258:	ldr	x21, [sp, #32]
    625c:	ldp	x29, x30, [sp], #48
    6260:	b	3da0 <PyObject_GC_Del@plt>
    6264:	bl	3d70 <_Py_Dealloc@plt>
    6268:	b	6220 <PySequence_Fast@plt+0x1fe0>
    626c:	ldr	x2, [x20, #16]
    6270:	b	6200 <PySequence_Fast@plt+0x1fc0>
    6274:	nop
    6278:	stp	x29, x30, [sp, #-48]!
    627c:	mov	x29, sp
    6280:	stp	x21, x22, [sp, #32]
    6284:	mov	x21, x0
    6288:	mov	x22, x2
    628c:	ldr	x0, [x0, #16]
    6290:	stp	x19, x20, [sp, #16]
    6294:	mov	x20, x1
    6298:	cbz	x0, 62a8 <PySequence_Fast@plt+0x2068>
    629c:	mov	x1, x2
    62a0:	blr	x20
    62a4:	cbnz	w0, 6338 <PySequence_Fast@plt+0x20f8>
    62a8:	ldr	x0, [x21, #24]
    62ac:	ands	x0, x0, #0xfffffffffffffffe
    62b0:	b.eq	62c0 <PySequence_Fast@plt+0x2080>  // b.none
    62b4:	mov	x1, x22
    62b8:	blr	x20
    62bc:	cbnz	w0, 6338 <PySequence_Fast@plt+0x20f8>
    62c0:	ldr	x0, [x21, #32]
    62c4:	ands	x0, x0, #0xfffffffffffffffe
    62c8:	b.eq	62d8 <PySequence_Fast@plt+0x2098>  // b.none
    62cc:	mov	x1, x22
    62d0:	blr	x20
    62d4:	cbnz	w0, 6338 <PySequence_Fast@plt+0x20f8>
    62d8:	ldr	x3, [x21, #40]
    62dc:	cbz	x3, 6334 <PySequence_Fast@plt+0x20f4>
    62e0:	ldr	x0, [x3]
    62e4:	cbz	x0, 62f8 <PySequence_Fast@plt+0x20b8>
    62e8:	mov	x1, x22
    62ec:	blr	x20
    62f0:	cbnz	w0, 6338 <PySequence_Fast@plt+0x20f8>
    62f4:	ldr	x3, [x21, #40]
    62f8:	ldr	x2, [x3, #8]
    62fc:	cmp	x2, #0x0
    6300:	b.le	6334 <PySequence_Fast@plt+0x20f4>
    6304:	mov	x19, #0x0                   	// #0
    6308:	ldr	x0, [x3, #24]
    630c:	mov	x1, x22
    6310:	ldr	x0, [x0, x19, lsl #3]
    6314:	add	x19, x19, #0x1
    6318:	cbz	x0, 632c <PySequence_Fast@plt+0x20ec>
    631c:	blr	x20
    6320:	cbnz	w0, 6338 <PySequence_Fast@plt+0x20f8>
    6324:	ldr	x3, [x21, #40]
    6328:	ldr	x2, [x3, #8]
    632c:	cmp	x19, x2
    6330:	b.lt	6308 <PySequence_Fast@plt+0x20c8>  // b.tstop
    6334:	mov	w0, #0x0                   	// #0
    6338:	ldp	x19, x20, [sp, #16]
    633c:	ldp	x21, x22, [sp, #32]
    6340:	ldp	x29, x30, [sp], #48
    6344:	ret
    6348:	stp	x29, x30, [sp, #-48]!
    634c:	mov	x29, sp
    6350:	stp	x21, x22, [sp, #32]
    6354:	mov	x21, x0
    6358:	mov	x22, x2
    635c:	ldr	x0, [x0, #24]
    6360:	stp	x19, x20, [sp, #16]
    6364:	mov	x20, x1
    6368:	sub	x19, x0, #0x1
    636c:	cbnz	x0, 6378 <PySequence_Fast@plt+0x2138>
    6370:	b	639c <PySequence_Fast@plt+0x215c>
    6374:	mov	x19, x3
    6378:	ldr	x4, [x21, #16]
    637c:	lsl	x3, x19, #4
    6380:	mov	x1, x22
    6384:	ldr	x0, [x4, x3]
    6388:	cbz	x0, 6394 <PySequence_Fast@plt+0x2154>
    638c:	blr	x20
    6390:	cbnz	w0, 63d0 <PySequence_Fast@plt+0x2190>
    6394:	sub	x3, x19, #0x1
    6398:	cbnz	x19, 6374 <PySequence_Fast@plt+0x2134>
    639c:	ldr	x0, [x21, #40]
    63a0:	cbz	x0, 63b0 <PySequence_Fast@plt+0x2170>
    63a4:	mov	x1, x22
    63a8:	blr	x20
    63ac:	cbnz	w0, 63d0 <PySequence_Fast@plt+0x2190>
    63b0:	ldr	x0, [x21, #48]
    63b4:	cbz	x0, 63d0 <PySequence_Fast@plt+0x2190>
    63b8:	mov	x1, x22
    63bc:	mov	x16, x20
    63c0:	ldp	x19, x20, [sp, #16]
    63c4:	ldp	x21, x22, [sp, #32]
    63c8:	ldp	x29, x30, [sp], #48
    63cc:	br	x16
    63d0:	ldp	x19, x20, [sp, #16]
    63d4:	ldp	x21, x22, [sp, #32]
    63d8:	ldp	x29, x30, [sp], #48
    63dc:	ret
    63e0:	stp	x29, x30, [sp, #-64]!
    63e4:	mov	x29, sp
    63e8:	stp	x19, x20, [sp, #16]
    63ec:	mov	x19, x0
    63f0:	mov	x20, x1
    63f4:	ldr	x0, [x0, #144]
    63f8:	str	x21, [sp, #32]
    63fc:	str	x2, [sp, #56]
    6400:	mov	x21, x2
    6404:	cbz	x0, 6414 <PySequence_Fast@plt+0x21d4>
    6408:	mov	x1, x2
    640c:	blr	x20
    6410:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6414:	ldr	x0, [x19, #136]
    6418:	cbz	x0, 6428 <PySequence_Fast@plt+0x21e8>
    641c:	mov	x1, x21
    6420:	blr	x20
    6424:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6428:	ldr	x0, [x19, #128]
    642c:	cbz	x0, 643c <PySequence_Fast@plt+0x21fc>
    6430:	mov	x1, x21
    6434:	blr	x20
    6438:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    643c:	ldr	x0, [x19, #120]
    6440:	cbz	x0, 6450 <PySequence_Fast@plt+0x2210>
    6444:	mov	x1, x21
    6448:	blr	x20
    644c:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6450:	ldr	x0, [x19, #112]
    6454:	cbz	x0, 6464 <PySequence_Fast@plt+0x2224>
    6458:	mov	x1, x21
    645c:	blr	x20
    6460:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6464:	ldr	x0, [x19, #104]
    6468:	cbz	x0, 6478 <PySequence_Fast@plt+0x2238>
    646c:	mov	x1, x21
    6470:	blr	x20
    6474:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6478:	ldr	x0, [x19, #96]
    647c:	cbz	x0, 648c <PySequence_Fast@plt+0x224c>
    6480:	mov	x1, x21
    6484:	blr	x20
    6488:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    648c:	ldr	x0, [x19, #16]
    6490:	cbz	x0, 64a0 <PySequence_Fast@plt+0x2260>
    6494:	mov	x1, x21
    6498:	blr	x20
    649c:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    64a0:	ldr	x0, [x19, #24]
    64a4:	cbz	x0, 64b4 <PySequence_Fast@plt+0x2274>
    64a8:	mov	x1, x21
    64ac:	blr	x20
    64b0:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    64b4:	ldr	x0, [x19, #32]
    64b8:	cbz	x0, 64c8 <PySequence_Fast@plt+0x2288>
    64bc:	mov	x1, x21
    64c0:	blr	x20
    64c4:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    64c8:	ldr	x0, [x19, #40]
    64cc:	cbz	x0, 64dc <PySequence_Fast@plt+0x229c>
    64d0:	mov	x1, x21
    64d4:	blr	x20
    64d8:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    64dc:	ldr	x0, [x19, #48]
    64e0:	cbz	x0, 64f0 <PySequence_Fast@plt+0x22b0>
    64e4:	mov	x1, x21
    64e8:	blr	x20
    64ec:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    64f0:	ldr	x0, [x19, #56]
    64f4:	cbz	x0, 6504 <PySequence_Fast@plt+0x22c4>
    64f8:	mov	x1, x21
    64fc:	blr	x20
    6500:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6504:	ldr	x0, [x19, #88]
    6508:	cbz	x0, 6518 <PySequence_Fast@plt+0x22d8>
    650c:	mov	x1, x21
    6510:	blr	x20
    6514:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    6518:	ldr	x0, [x19, #80]
    651c:	cbz	x0, 652c <PySequence_Fast@plt+0x22ec>
    6520:	mov	x1, x21
    6524:	blr	x20
    6528:	cbnz	w0, 654c <PySequence_Fast@plt+0x230c>
    652c:	ldr	x0, [x19, #72]
    6530:	cbz	x0, 654c <PySequence_Fast@plt+0x230c>
    6534:	mov	x1, x21
    6538:	mov	x16, x20
    653c:	ldp	x19, x20, [sp, #16]
    6540:	ldr	x21, [sp, #32]
    6544:	ldp	x29, x30, [sp], #64
    6548:	br	x16
    654c:	ldp	x19, x20, [sp, #16]
    6550:	ldr	x21, [sp, #32]
    6554:	ldp	x29, x30, [sp], #64
    6558:	ret
    655c:	nop
    6560:	stp	x29, x30, [sp, #-48]!
    6564:	mov	x29, sp
    6568:	stp	x19, x20, [sp, #16]
    656c:	mov	x19, x0
    6570:	mov	x20, x1
    6574:	ldr	x0, [x0, #112]
    6578:	str	x21, [sp, #32]
    657c:	mov	x21, x2
    6580:	cbz	x0, 6590 <PySequence_Fast@plt+0x2350>
    6584:	mov	x1, x2
    6588:	blr	x20
    658c:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    6590:	ldr	x0, [x19, #96]
    6594:	cbz	x0, 65a4 <PySequence_Fast@plt+0x2364>
    6598:	mov	x1, x21
    659c:	blr	x20
    65a0:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    65a4:	ldr	x0, [x19, #88]
    65a8:	cbz	x0, 65b8 <PySequence_Fast@plt+0x2378>
    65ac:	mov	x1, x21
    65b0:	blr	x20
    65b4:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    65b8:	ldr	x0, [x19, #80]
    65bc:	cbz	x0, 65cc <PySequence_Fast@plt+0x238c>
    65c0:	mov	x1, x21
    65c4:	blr	x20
    65c8:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    65cc:	ldr	x0, [x19, #72]
    65d0:	cbz	x0, 65e0 <PySequence_Fast@plt+0x23a0>
    65d4:	mov	x1, x21
    65d8:	blr	x20
    65dc:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    65e0:	ldr	x0, [x19, #64]
    65e4:	cbz	x0, 65f4 <PySequence_Fast@plt+0x23b4>
    65e8:	mov	x1, x21
    65ec:	blr	x20
    65f0:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    65f4:	ldr	x0, [x19, #48]
    65f8:	cbz	x0, 6608 <PySequence_Fast@plt+0x23c8>
    65fc:	mov	x1, x21
    6600:	blr	x20
    6604:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    6608:	ldr	x0, [x19, #56]
    660c:	cbz	x0, 661c <PySequence_Fast@plt+0x23dc>
    6610:	mov	x1, x21
    6614:	blr	x20
    6618:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    661c:	ldr	x0, [x19, #104]
    6620:	cbz	x0, 6630 <PySequence_Fast@plt+0x23f0>
    6624:	mov	x1, x21
    6628:	blr	x20
    662c:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    6630:	ldr	x0, [x19, #24]
    6634:	cbz	x0, 6644 <PySequence_Fast@plt+0x2404>
    6638:	mov	x1, x21
    663c:	blr	x20
    6640:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    6644:	ldr	x0, [x19, #32]
    6648:	cbz	x0, 6658 <PySequence_Fast@plt+0x2418>
    664c:	mov	x1, x21
    6650:	blr	x20
    6654:	cbnz	w0, 6678 <PySequence_Fast@plt+0x2438>
    6658:	ldr	x0, [x19, #40]
    665c:	cbz	x0, 6678 <PySequence_Fast@plt+0x2438>
    6660:	mov	x1, x21
    6664:	mov	x16, x20
    6668:	ldp	x19, x20, [sp, #16]
    666c:	ldr	x21, [sp, #32]
    6670:	ldp	x29, x30, [sp], #48
    6674:	br	x16
    6678:	ldp	x19, x20, [sp, #16]
    667c:	ldr	x21, [sp, #32]
    6680:	ldp	x29, x30, [sp], #48
    6684:	ret
    6688:	ldr	x0, [x0, #40]
    668c:	cmp	x1, #0x0
    6690:	ccmp	x0, #0x0, #0x4, ge  // ge = tcont
    6694:	b.eq	66bc <PySequence_Fast@plt+0x247c>  // b.none
    6698:	ldr	x2, [x0, #8]
    669c:	cmp	x2, x1
    66a0:	b.le	66bc <PySequence_Fast@plt+0x247c>
    66a4:	ldr	x0, [x0, #24]
    66a8:	ldr	x0, [x0, x1, lsl #3]
    66ac:	ldr	x1, [x0]
    66b0:	add	x1, x1, #0x1
    66b4:	str	x1, [x0]
    66b8:	ret
    66bc:	stp	x29, x30, [sp, #-16]!
    66c0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    66c4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    66c8:	mov	x29, sp
    66cc:	ldr	x0, [x0, #3984]
    66d0:	add	x1, x1, #0x238
    66d4:	ldr	x0, [x0]
    66d8:	bl	3de0 <PyErr_SetString@plt>
    66dc:	mov	x0, #0x0                   	// #0
    66e0:	ldp	x29, x30, [sp], #16
    66e4:	ret
    66e8:	sub	sp, sp, #0x40
    66ec:	stp	x29, x30, [sp, #16]
    66f0:	add	x29, sp, #0x10
    66f4:	stp	x19, x20, [sp, #32]
    66f8:	mov	x20, x0
    66fc:	mov	x0, x1
    6700:	mov	x1, x2
    6704:	cbz	x3, 6798 <PySequence_Fast@plt+0x2558>
    6708:	ldr	x19, [x3, #16]
    670c:	add	x19, x2, x19
    6710:	add	x2, sp, #0x30
    6714:	str	x2, [sp]
    6718:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    671c:	add	x4, x4, #0x9c0
    6720:	add	x4, x4, #0x230
    6724:	mov	w7, #0x0                   	// #0
    6728:	mov	w6, #0x2                   	// #2
    672c:	mov	w5, #0x1                   	// #1
    6730:	mov	x2, #0x0                   	// #0
    6734:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    6738:	cbz	x0, 67c8 <PySequence_Fast@plt+0x2588>
    673c:	cmp	x19, #0x1
    6740:	b.eq	67b4 <PySequence_Fast@plt+0x2574>  // b.none
    6744:	ldr	x19, [x0, #8]
    6748:	ldr	x2, [x20, #40]
    674c:	cbz	x2, 6778 <PySequence_Fast@plt+0x2538>
    6750:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    6754:	ldr	x2, [x2]
    6758:	ldr	x1, [x1, #3976]
    675c:	cmp	x2, x1
    6760:	b.eq	6778 <PySequence_Fast@plt+0x2538>  // b.none
    6764:	ldr	x1, [x0]
    6768:	mov	x0, x2
    676c:	bl	4230 <PyDict_GetItemWithError@plt>
    6770:	cbz	x0, 67c0 <PySequence_Fast@plt+0x2580>
    6774:	mov	x19, x0
    6778:	ldr	x0, [x19]
    677c:	ldp	x29, x30, [sp, #16]
    6780:	add	x0, x0, #0x1
    6784:	str	x0, [x19]
    6788:	mov	x0, x19
    678c:	ldp	x19, x20, [sp, #32]
    6790:	add	sp, sp, #0x40
    6794:	ret
    6798:	sub	x2, x2, #0x1
    679c:	mov	x19, x1
    67a0:	cmp	x2, #0x1
    67a4:	b.hi	6710 <PySequence_Fast@plt+0x24d0>  // b.pmore
    67a8:	cbz	x0, 6710 <PySequence_Fast@plt+0x24d0>
    67ac:	cmp	x19, #0x1
    67b0:	b.ne	6744 <PySequence_Fast@plt+0x2504>  // b.any
    67b4:	adrp	x19, 21000 <PyInit__elementtree@@Base+0x13168>
    67b8:	ldr	x19, [x19, #3976]
    67bc:	b	6748 <PySequence_Fast@plt+0x2508>
    67c0:	bl	3f80 <PyErr_Occurred@plt>
    67c4:	cbz	x0, 6778 <PySequence_Fast@plt+0x2538>
    67c8:	mov	x19, #0x0                   	// #0
    67cc:	mov	x0, x19
    67d0:	ldp	x29, x30, [sp, #16]
    67d4:	ldp	x19, x20, [sp, #32]
    67d8:	add	sp, sp, #0x40
    67dc:	ret
    67e0:	stp	x29, x30, [sp, #-32]!
    67e4:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    67e8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    67ec:	mov	x29, sp
    67f0:	str	x19, [sp, #16]
    67f4:	mov	x19, x0
    67f8:	ldr	x0, [x2, #3936]
    67fc:	add	x1, x1, #0x258
    6800:	mov	x2, #0x1                   	// #1
    6804:	ldr	x0, [x0]
    6808:	bl	3d60 <PyErr_WarnEx@plt>
    680c:	tbnz	w0, #31, 6870 <PySequence_Fast@plt+0x2630>
    6810:	ldr	x0, [x19, #40]
    6814:	cbz	x0, 6880 <PySequence_Fast@plt+0x2640>
    6818:	ldr	x0, [x0, #8]
    681c:	bl	3c50 <PyList_New@plt>
    6820:	cbz	x0, 6870 <PySequence_Fast@plt+0x2630>
    6824:	ldr	x4, [x19, #40]
    6828:	ldr	x1, [x4, #8]
    682c:	cmp	x1, #0x0
    6830:	b.le	6864 <PySequence_Fast@plt+0x2624>
    6834:	ldr	x5, [x0, #24]
    6838:	mov	x1, #0x0                   	// #0
    683c:	ldr	x6, [x4, #24]
    6840:	ldr	x2, [x6, x1, lsl #3]
    6844:	ldr	x3, [x2]
    6848:	add	x3, x3, #0x1
    684c:	str	x3, [x2]
    6850:	str	x2, [x5, x1, lsl #3]
    6854:	add	x1, x1, #0x1
    6858:	ldr	x2, [x4, #8]
    685c:	cmp	x1, x2
    6860:	b.lt	6840 <PySequence_Fast@plt+0x2600>  // b.tstop
    6864:	ldr	x19, [sp, #16]
    6868:	ldp	x29, x30, [sp], #32
    686c:	ret
    6870:	mov	x0, #0x0                   	// #0
    6874:	ldr	x19, [sp, #16]
    6878:	ldp	x29, x30, [sp], #32
    687c:	ret
    6880:	ldr	x19, [sp, #16]
    6884:	ldp	x29, x30, [sp], #32
    6888:	b	3c50 <PyList_New@plt>
    688c:	nop
    6890:	stp	x29, x30, [sp, #-80]!
    6894:	mov	x29, sp
    6898:	stp	x19, x20, [sp, #16]
    689c:	stp	x21, x22, [sp, #32]
    68a0:	mov	x22, x1
    68a4:	stp	x23, x24, [sp, #48]
    68a8:	mov	x23, x0
    68ac:	mov	x0, x1
    68b0:	bl	3c70 <strlen@plt>
    68b4:	mov	x21, x0
    68b8:	mov	x1, x21
    68bc:	mov	x0, x22
    68c0:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    68c4:	cbz	x0, 6948 <PySequence_Fast@plt+0x2708>
    68c8:	mov	x1, x0
    68cc:	mov	x19, x0
    68d0:	ldr	x0, [x23]
    68d4:	bl	4230 <PyDict_GetItemWithError@plt>
    68d8:	mov	x20, x0
    68dc:	cbz	x0, 6964 <PySequence_Fast@plt+0x2724>
    68e0:	ldr	x0, [x0]
    68e4:	add	x0, x0, #0x1
    68e8:	str	x0, [x20]
    68ec:	ldr	x0, [x19]
    68f0:	sub	x0, x0, #0x1
    68f4:	str	x0, [x19]
    68f8:	cbz	x0, 6914 <PySequence_Fast@plt+0x26d4>
    68fc:	mov	x0, x20
    6900:	ldp	x19, x20, [sp, #16]
    6904:	ldp	x21, x22, [sp, #32]
    6908:	ldp	x23, x24, [sp, #48]
    690c:	ldp	x29, x30, [sp], #80
    6910:	ret
    6914:	mov	x0, x19
    6918:	bl	3d70 <_Py_Dealloc@plt>
    691c:	mov	x0, x20
    6920:	ldp	x19, x20, [sp, #16]
    6924:	ldp	x21, x22, [sp, #32]
    6928:	ldp	x23, x24, [sp, #48]
    692c:	ldp	x29, x30, [sp], #80
    6930:	ret
    6934:	ldr	x0, [x19]
    6938:	sub	x0, x0, #0x1
    693c:	str	x0, [x19]
    6940:	cbz	x0, 6a2c <PySequence_Fast@plt+0x27ec>
    6944:	ldr	x25, [sp, #64]
    6948:	mov	x20, #0x0                   	// #0
    694c:	mov	x0, x20
    6950:	ldp	x19, x20, [sp, #16]
    6954:	ldp	x21, x22, [sp, #32]
    6958:	ldp	x23, x24, [sp, #48]
    695c:	ldp	x29, x30, [sp], #80
    6960:	ret
    6964:	bl	3f80 <PyErr_Occurred@plt>
    6968:	cbnz	x0, 68ec <PySequence_Fast@plt+0x26ac>
    696c:	str	x25, [sp, #64]
    6970:	mov	x24, x21
    6974:	cbnz	x21, 6984 <PySequence_Fast@plt+0x2744>
    6978:	b	6a18 <PySequence_Fast@plt+0x27d8>
    697c:	cmp	x21, x0
    6980:	b.eq	6a18 <PySequence_Fast@plt+0x27d8>  // b.none
    6984:	ldrb	w1, [x22, x0]
    6988:	add	x0, x0, #0x1
    698c:	cmp	w1, #0x7d
    6990:	b.ne	697c <PySequence_Fast@plt+0x273c>  // b.any
    6994:	add	x24, x21, #0x1
    6998:	mov	x0, #0x0                   	// #0
    699c:	mov	x1, x24
    69a0:	bl	3d40 <PyBytes_FromStringAndSize@plt>
    69a4:	mov	x25, x0
    69a8:	cbz	x0, 6a70 <PySequence_Fast@plt+0x2830>
    69ac:	mov	w0, #0x7b                  	// #123
    69b0:	strb	w0, [x25, #32]
    69b4:	mov	x2, x21
    69b8:	mov	x1, x22
    69bc:	add	x0, x25, #0x21
    69c0:	bl	3c20 <memcpy@plt>
    69c4:	mov	x1, x24
    69c8:	add	x0, x25, #0x20
    69cc:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    69d0:	add	x2, x2, #0x2c0
    69d4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    69d8:	mov	x20, x0
    69dc:	ldr	x1, [x25]
    69e0:	sub	x0, x1, #0x1
    69e4:	str	x0, [x25]
    69e8:	cbz	x0, 6a0c <PySequence_Fast@plt+0x27cc>
    69ec:	cbz	x20, 6934 <PySequence_Fast@plt+0x26f4>
    69f0:	ldr	x0, [x23]
    69f4:	mov	x2, x20
    69f8:	mov	x1, x19
    69fc:	bl	4140 <PyDict_SetItem@plt>
    6a00:	tbnz	w0, #31, 6a3c <PySequence_Fast@plt+0x27fc>
    6a04:	ldr	x25, [sp, #64]
    6a08:	b	68ec <PySequence_Fast@plt+0x26ac>
    6a0c:	mov	x0, x25
    6a10:	bl	3d70 <_Py_Dealloc@plt>
    6a14:	b	69ec <PySequence_Fast@plt+0x27ac>
    6a18:	ldr	x0, [x19]
    6a1c:	mov	x25, x19
    6a20:	add	x0, x0, #0x1
    6a24:	str	x0, [x19]
    6a28:	b	69c4 <PySequence_Fast@plt+0x2784>
    6a2c:	mov	x0, x19
    6a30:	bl	3d70 <_Py_Dealloc@plt>
    6a34:	ldr	x25, [sp, #64]
    6a38:	b	68fc <PySequence_Fast@plt+0x26bc>
    6a3c:	ldr	x0, [x19]
    6a40:	sub	x0, x0, #0x1
    6a44:	str	x0, [x19]
    6a48:	cbz	x0, 6a94 <PySequence_Fast@plt+0x2854>
    6a4c:	ldr	x0, [x20]
    6a50:	sub	x0, x0, #0x1
    6a54:	str	x0, [x20]
    6a58:	cbnz	x0, 6944 <PySequence_Fast@plt+0x2704>
    6a5c:	mov	x0, x20
    6a60:	mov	x20, #0x0                   	// #0
    6a64:	bl	3d70 <_Py_Dealloc@plt>
    6a68:	ldr	x25, [sp, #64]
    6a6c:	b	68fc <PySequence_Fast@plt+0x26bc>
    6a70:	ldr	x0, [x19]
    6a74:	sub	x0, x0, #0x1
    6a78:	str	x0, [x19]
    6a7c:	cbnz	x0, 6944 <PySequence_Fast@plt+0x2704>
    6a80:	mov	x0, x19
    6a84:	mov	x20, #0x0                   	// #0
    6a88:	bl	3d70 <_Py_Dealloc@plt>
    6a8c:	ldr	x25, [sp, #64]
    6a90:	b	68fc <PySequence_Fast@plt+0x26bc>
    6a94:	mov	x0, x19
    6a98:	bl	3d70 <_Py_Dealloc@plt>
    6a9c:	b	6a4c <PySequence_Fast@plt+0x280c>
    6aa0:	stp	x29, x30, [sp, #-80]!
    6aa4:	mov	x29, sp
    6aa8:	stp	x19, x20, [sp, #16]
    6aac:	mov	x20, x1
    6ab0:	mov	x19, x2
    6ab4:	stp	x21, x22, [sp, #32]
    6ab8:	mov	x22, x0
    6abc:	mov	x21, x3
    6ac0:	bl	3f80 <PyErr_Occurred@plt>
    6ac4:	cbz	x0, 6ad8 <PySequence_Fast@plt+0x2898>
    6ac8:	ldp	x19, x20, [sp, #16]
    6acc:	ldp	x21, x22, [sp, #32]
    6ad0:	ldp	x29, x30, [sp], #80
    6ad4:	ret
    6ad8:	stp	x23, x24, [sp, #48]
    6adc:	add	x23, x22, #0x28
    6ae0:	mov	x1, x20
    6ae4:	mov	x0, x23
    6ae8:	bl	6890 <PySequence_Fast@plt+0x2650>
    6aec:	mov	x20, x0
    6af0:	cbz	x0, 6bb8 <PySequence_Fast@plt+0x2978>
    6af4:	cbz	x19, 6bcc <PySequence_Fast@plt+0x298c>
    6af8:	mov	x1, x19
    6afc:	mov	x0, x23
    6b00:	bl	6890 <PySequence_Fast@plt+0x2650>
    6b04:	mov	x24, x0
    6b08:	cbz	x0, 6c74 <PySequence_Fast@plt+0x2a34>
    6b0c:	cbz	x21, 6be8 <PySequence_Fast@plt+0x29a8>
    6b10:	mov	x1, x21
    6b14:	mov	x0, x23
    6b18:	bl	6890 <PySequence_Fast@plt+0x2650>
    6b1c:	mov	x19, x0
    6b20:	cbz	x0, 6b98 <PySequence_Fast@plt+0x2958>
    6b24:	ldr	x0, [x22, #104]
    6b28:	cbz	x0, 6c1c <PySequence_Fast@plt+0x29dc>
    6b2c:	mov	x3, x24
    6b30:	mov	x2, x19
    6b34:	mov	x1, x20
    6b38:	mov	x4, #0x0                   	// #0
    6b3c:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    6b40:	str	x0, [sp, #72]
    6b44:	cbz	x0, 6b58 <PySequence_Fast@plt+0x2918>
    6b48:	ldr	x2, [x0]
    6b4c:	sub	x2, x2, #0x1
    6b50:	str	x2, [x0]
    6b54:	cbz	x2, 6c6c <PySequence_Fast@plt+0x2a2c>
    6b58:	ldr	x1, [x20]
    6b5c:	sub	x1, x1, #0x1
    6b60:	str	x1, [x20]
    6b64:	cbz	x1, 6c10 <PySequence_Fast@plt+0x29d0>
    6b68:	ldr	x1, [x19]
    6b6c:	sub	x1, x1, #0x1
    6b70:	str	x1, [x19]
    6b74:	cbz	x1, 6c04 <PySequence_Fast@plt+0x29c4>
    6b78:	ldr	x1, [x24]
    6b7c:	sub	x1, x1, #0x1
    6b80:	str	x1, [x24]
    6b84:	cbnz	x1, 6bb8 <PySequence_Fast@plt+0x2978>
    6b88:	mov	x0, x24
    6b8c:	bl	3d70 <_Py_Dealloc@plt>
    6b90:	ldp	x23, x24, [sp, #48]
    6b94:	b	6ac8 <PySequence_Fast@plt+0x2888>
    6b98:	ldr	x0, [x20]
    6b9c:	sub	x0, x0, #0x1
    6ba0:	str	x0, [x20]
    6ba4:	cbz	x0, 6c94 <PySequence_Fast@plt+0x2a54>
    6ba8:	ldr	x0, [x24]
    6bac:	sub	x0, x0, #0x1
    6bb0:	str	x0, [x24]
    6bb4:	cbz	x0, 6b88 <PySequence_Fast@plt+0x2948>
    6bb8:	ldp	x19, x20, [sp, #16]
    6bbc:	ldp	x21, x22, [sp, #32]
    6bc0:	ldp	x23, x24, [sp, #48]
    6bc4:	ldp	x29, x30, [sp], #80
    6bc8:	ret
    6bcc:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    6bd0:	ldr	x1, [x1, #3976]
    6bd4:	mov	x24, x1
    6bd8:	ldr	x0, [x1]
    6bdc:	add	x0, x0, #0x1
    6be0:	str	x0, [x1]
    6be4:	cbnz	x21, 6b10 <PySequence_Fast@plt+0x28d0>
    6be8:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    6bec:	ldr	x1, [x1, #3976]
    6bf0:	mov	x19, x1
    6bf4:	ldr	x0, [x1]
    6bf8:	add	x0, x0, #0x1
    6bfc:	str	x0, [x1]
    6c00:	b	6b24 <PySequence_Fast@plt+0x28e4>
    6c04:	mov	x0, x19
    6c08:	bl	3d70 <_Py_Dealloc@plt>
    6c0c:	b	6b78 <PySequence_Fast@plt+0x2938>
    6c10:	mov	x0, x20
    6c14:	bl	3d70 <_Py_Dealloc@plt>
    6c18:	b	6b68 <PySequence_Fast@plt+0x2928>
    6c1c:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    6c20:	add	x1, x1, #0x9c0
    6c24:	mov	x0, x22
    6c28:	add	x1, x1, #0x270
    6c2c:	add	x2, sp, #0x48
    6c30:	bl	3c90 <_PyObject_LookupAttrId@plt>
    6c34:	cmp	w0, #0x0
    6c38:	b.le	6b58 <PySequence_Fast@plt+0x2918>
    6c3c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    6c40:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    6c44:	mov	x2, #0x1                   	// #1
    6c48:	add	x1, x1, #0x2c8
    6c4c:	ldr	x0, [x0, #4024]
    6c50:	ldr	x0, [x0]
    6c54:	bl	3d60 <PyErr_WarnEx@plt>
    6c58:	ldr	x0, [sp, #72]
    6c5c:	ldr	x1, [x0]
    6c60:	sub	x1, x1, #0x1
    6c64:	str	x1, [x0]
    6c68:	cbnz	x1, 6b58 <PySequence_Fast@plt+0x2918>
    6c6c:	bl	3d70 <_Py_Dealloc@plt>
    6c70:	b	6b58 <PySequence_Fast@plt+0x2918>
    6c74:	ldr	x0, [x20]
    6c78:	sub	x0, x0, #0x1
    6c7c:	str	x0, [x20]
    6c80:	cbnz	x0, 6bb8 <PySequence_Fast@plt+0x2978>
    6c84:	mov	x0, x20
    6c88:	bl	3d70 <_Py_Dealloc@plt>
    6c8c:	ldp	x23, x24, [sp, #48]
    6c90:	b	6ac8 <PySequence_Fast@plt+0x2888>
    6c94:	mov	x0, x20
    6c98:	bl	3d70 <_Py_Dealloc@plt>
    6c9c:	b	6ba8 <PySequence_Fast@plt+0x2968>
    6ca0:	stp	x29, x30, [sp, #-48]!
    6ca4:	mov	x29, sp
    6ca8:	stp	x19, x20, [sp, #16]
    6cac:	ldr	x19, [x0]
    6cb0:	tbz	w19, #0, 6cd0 <PySequence_Fast@plt+0x2a90>
    6cb4:	and	x19, x19, #0xfffffffffffffffe
    6cb8:	mov	x20, x0
    6cbc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    6cc0:	ldr	x0, [x0, #4064]
    6cc4:	ldr	x1, [x19, #8]
    6cc8:	cmp	x1, x0
    6ccc:	b.eq	6ce0 <PySequence_Fast@plt+0x2aa0>  // b.none
    6cd0:	mov	x0, x19
    6cd4:	ldp	x19, x20, [sp, #16]
    6cd8:	ldp	x29, x30, [sp], #48
    6cdc:	ret
    6ce0:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    6ce4:	mov	x1, #0x0                   	// #0
    6ce8:	add	x0, x0, #0xb38
    6cec:	stp	x21, x22, [sp, #32]
    6cf0:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    6cf4:	mov	x21, x0
    6cf8:	cbz	x0, 6d5c <PySequence_Fast@plt+0x2b1c>
    6cfc:	mov	x1, x19
    6d00:	bl	3d20 <PyUnicode_Join@plt>
    6d04:	ldr	x1, [x21]
    6d08:	mov	x22, x0
    6d0c:	sub	x0, x1, #0x1
    6d10:	str	x0, [x21]
    6d14:	cbz	x0, 6d3c <PySequence_Fast@plt+0x2afc>
    6d18:	cbz	x22, 6d5c <PySequence_Fast@plt+0x2b1c>
    6d1c:	ldr	x0, [x19]
    6d20:	str	x22, [x20]
    6d24:	sub	x0, x0, #0x1
    6d28:	str	x0, [x19]
    6d2c:	cbz	x0, 6d48 <PySequence_Fast@plt+0x2b08>
    6d30:	mov	x19, x22
    6d34:	ldp	x21, x22, [sp, #32]
    6d38:	b	6cd0 <PySequence_Fast@plt+0x2a90>
    6d3c:	mov	x0, x21
    6d40:	bl	3d70 <_Py_Dealloc@plt>
    6d44:	b	6d18 <PySequence_Fast@plt+0x2ad8>
    6d48:	mov	x0, x19
    6d4c:	mov	x19, x22
    6d50:	bl	3d70 <_Py_Dealloc@plt>
    6d54:	ldp	x21, x22, [sp, #32]
    6d58:	b	6cd0 <PySequence_Fast@plt+0x2a90>
    6d5c:	mov	x19, #0x0                   	// #0
    6d60:	ldp	x21, x22, [sp, #32]
    6d64:	b	6cd0 <PySequence_Fast@plt+0x2a90>
    6d68:	sub	sp, sp, #0x70
    6d6c:	mov	x5, x1
    6d70:	mov	x1, x2
    6d74:	stp	x29, x30, [sp, #16]
    6d78:	add	x29, sp, #0x10
    6d7c:	stp	x19, x20, [sp, #32]
    6d80:	stp	x21, x22, [sp, #48]
    6d84:	mov	x21, x0
    6d88:	cbz	x3, 6e60 <PySequence_Fast@plt+0x2c20>
    6d8c:	ldr	x22, [x3, #16]
    6d90:	add	x22, x2, x22
    6d94:	add	x0, sp, #0x58
    6d98:	str	x0, [sp]
    6d9c:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    6da0:	mov	x0, x5
    6da4:	add	x4, x19, #0x9c0
    6da8:	mov	w5, #0x1                   	// #1
    6dac:	add	x4, x4, #0x288
    6db0:	mov	w7, #0x0                   	// #0
    6db4:	mov	w6, #0x3                   	// #3
    6db8:	mov	x2, #0x0                   	// #0
    6dbc:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    6dc0:	mov	x5, x0
    6dc4:	cbz	x0, 6f6c <PySequence_Fast@plt+0x2d2c>
    6dc8:	stp	x23, x24, [sp, #64]
    6dcc:	cmp	x22, #0x1
    6dd0:	ldr	x23, [x5]
    6dd4:	b.eq	6e90 <PySequence_Fast@plt+0x2c50>  // b.none
    6dd8:	ldr	x20, [x5, #8]
    6ddc:	cbz	x20, 6f5c <PySequence_Fast@plt+0x2d1c>
    6de0:	cmp	x22, #0x2
    6de4:	b.eq	6e98 <PySequence_Fast@plt+0x2c58>  // b.none
    6de8:	adrp	x22, 21000 <PyInit__elementtree@@Base+0x13168>
    6dec:	add	x0, x19, #0x9c0
    6df0:	add	x0, x0, #0x40
    6df4:	ldr	x24, [x5, #16]
    6df8:	bl	3fc0 <PyState_FindModule@plt>
    6dfc:	bl	3e10 <PyModule_GetState@plt>
    6e00:	mov	x7, x0
    6e04:	mov	x0, x23
    6e08:	bl	4368 <PySequence_Fast@plt+0x128>
    6e0c:	cmp	w0, #0x0
    6e10:	ldr	x22, [x22, #3976]
    6e14:	ccmp	x24, x22, #0x0, eq  // eq = none
    6e18:	b.eq	6eb8 <PySequence_Fast@plt+0x2c78>  // b.none
    6e1c:	ldr	x0, [x7, #16]
    6e20:	add	x1, x19, #0x9c0
    6e24:	mov	x5, x24
    6e28:	mov	x4, x20
    6e2c:	mov	x3, x23
    6e30:	add	x1, x1, #0x2c8
    6e34:	mov	x2, x21
    6e38:	mov	x6, #0x0                   	// #0
    6e3c:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    6e40:	mov	x20, x0
    6e44:	ldp	x23, x24, [sp, #64]
    6e48:	mov	x0, x20
    6e4c:	ldp	x29, x30, [sp, #16]
    6e50:	ldp	x19, x20, [sp, #32]
    6e54:	ldp	x21, x22, [sp, #48]
    6e58:	add	sp, sp, #0x70
    6e5c:	ret
    6e60:	sub	x0, x2, #0x1
    6e64:	cmp	x0, #0x2
    6e68:	b.hi	6e70 <PySequence_Fast@plt+0x2c30>  // b.pmore
    6e6c:	cbnz	x5, 6e78 <PySequence_Fast@plt+0x2c38>
    6e70:	mov	x22, x1
    6e74:	b	6d94 <PySequence_Fast@plt+0x2b54>
    6e78:	stp	x23, x24, [sp, #64]
    6e7c:	mov	x22, x2
    6e80:	cmp	x22, #0x1
    6e84:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    6e88:	ldr	x23, [x5]
    6e8c:	b.ne	6dd8 <PySequence_Fast@plt+0x2b98>  // b.any
    6e90:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    6e94:	ldr	x20, [x20, #3976]
    6e98:	add	x0, x19, #0x9c0
    6e9c:	add	x0, x0, #0x40
    6ea0:	bl	3fc0 <PyState_FindModule@plt>
    6ea4:	bl	3e10 <PyModule_GetState@plt>
    6ea8:	mov	x7, x0
    6eac:	mov	x0, x23
    6eb0:	bl	4368 <PySequence_Fast@plt+0x128>
    6eb4:	cbnz	w0, 6fcc <PySequence_Fast@plt+0x2d8c>
    6eb8:	ldr	x0, [x21, #40]
    6ebc:	cbz	x0, 6f28 <PySequence_Fast@plt+0x2ce8>
    6ec0:	ldr	x1, [x0, #8]
    6ec4:	mov	x24, #0x0                   	// #0
    6ec8:	cmp	x1, #0x0
    6ecc:	b.le	6f28 <PySequence_Fast@plt+0x2ce8>
    6ed0:	ldr	x0, [x0, #24]
    6ed4:	mov	x1, x23
    6ed8:	mov	w2, #0x2                   	// #2
    6edc:	ldr	x19, [x0, x24, lsl #3]
    6ee0:	add	x24, x24, #0x1
    6ee4:	ldr	x3, [x19]
    6ee8:	ldr	x0, [x19, #16]
    6eec:	add	x3, x3, #0x1
    6ef0:	str	x3, [x19]
    6ef4:	bl	3ec0 <PyObject_RichCompareBool@plt>
    6ef8:	mov	w22, w0
    6efc:	cmp	w0, #0x0
    6f00:	b.gt	6f88 <PySequence_Fast@plt+0x2d48>
    6f04:	ldr	x0, [x19]
    6f08:	sub	x0, x0, #0x1
    6f0c:	str	x0, [x19]
    6f10:	cbz	x0, 6f50 <PySequence_Fast@plt+0x2d10>
    6f14:	cbnz	w22, 6f68 <PySequence_Fast@plt+0x2d28>
    6f18:	ldr	x0, [x21, #40]
    6f1c:	ldr	x1, [x0, #8]
    6f20:	cmp	x24, x1
    6f24:	b.lt	6ed0 <PySequence_Fast@plt+0x2c90>  // b.tstop
    6f28:	ldr	x0, [x20]
    6f2c:	ldp	x23, x24, [sp, #64]
    6f30:	add	x0, x0, #0x1
    6f34:	str	x0, [x20]
    6f38:	mov	x0, x20
    6f3c:	ldp	x29, x30, [sp, #16]
    6f40:	ldp	x19, x20, [sp, #32]
    6f44:	ldp	x21, x22, [sp, #48]
    6f48:	add	sp, sp, #0x70
    6f4c:	ret
    6f50:	mov	x0, x19
    6f54:	bl	3d70 <_Py_Dealloc@plt>
    6f58:	b	6f14 <PySequence_Fast@plt+0x2cd4>
    6f5c:	adrp	x22, 21000 <PyInit__elementtree@@Base+0x13168>
    6f60:	ldr	x20, [x22, #3976]
    6f64:	b	6dec <PySequence_Fast@plt+0x2bac>
    6f68:	ldp	x23, x24, [sp, #64]
    6f6c:	mov	x20, #0x0                   	// #0
    6f70:	mov	x0, x20
    6f74:	ldp	x29, x30, [sp, #16]
    6f78:	ldp	x19, x20, [sp, #32]
    6f7c:	ldp	x21, x22, [sp, #48]
    6f80:	add	sp, sp, #0x70
    6f84:	ret
    6f88:	add	x0, x19, #0x18
    6f8c:	bl	6ca0 <PySequence_Fast@plt+0x2a60>
    6f90:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    6f94:	mov	x20, x0
    6f98:	ldr	x1, [x1, #3976]
    6f9c:	cmp	x0, x1
    6fa0:	b.eq	6fe8 <PySequence_Fast@plt+0x2da8>  // b.none
    6fa4:	cbz	x0, 6fb4 <PySequence_Fast@plt+0x2d74>
    6fa8:	ldr	x0, [x0]
    6fac:	add	x0, x0, #0x1
    6fb0:	str	x0, [x20]
    6fb4:	ldr	x0, [x19]
    6fb8:	sub	x0, x0, #0x1
    6fbc:	str	x0, [x19]
    6fc0:	cbz	x0, 6fd8 <PySequence_Fast@plt+0x2d98>
    6fc4:	ldp	x23, x24, [sp, #64]
    6fc8:	b	6e48 <PySequence_Fast@plt+0x2c08>
    6fcc:	adrp	x24, 21000 <PyInit__elementtree@@Base+0x13168>
    6fd0:	ldr	x24, [x24, #3976]
    6fd4:	b	6e1c <PySequence_Fast@plt+0x2bdc>
    6fd8:	mov	x0, x19
    6fdc:	bl	3d70 <_Py_Dealloc@plt>
    6fe0:	ldp	x23, x24, [sp, #64]
    6fe4:	b	6e48 <PySequence_Fast@plt+0x2c08>
    6fe8:	ldr	x0, [x19]
    6fec:	sub	x0, x0, #0x1
    6ff0:	str	x0, [x19]
    6ff4:	cbz	x0, 7010 <PySequence_Fast@plt+0x2dd0>
    6ff8:	mov	w1, #0x0                   	// #0
    6ffc:	mov	x0, #0x0                   	// #0
    7000:	bl	4200 <PyUnicode_New@plt>
    7004:	mov	x20, x0
    7008:	ldp	x23, x24, [sp, #64]
    700c:	b	6e48 <PySequence_Fast@plt+0x2c08>
    7010:	mov	x0, x19
    7014:	bl	3d70 <_Py_Dealloc@plt>
    7018:	b	6ff8 <PySequence_Fast@plt+0x2db8>
    701c:	nop
    7020:	stp	x29, x30, [sp, #-64]!
    7024:	mov	x29, sp
    7028:	stp	x21, x22, [sp, #32]
    702c:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    7030:	ldr	x21, [x21, #3976]
    7034:	stp	x19, x20, [sp, #16]
    7038:	mov	x19, x0
    703c:	mov	x22, x21
    7040:	stp	x23, x24, [sp, #48]
    7044:	mov	x23, #0x7ffffffffffffff     	// #576460752303423487
    7048:	ldr	x2, [x19, #24]
    704c:	cbnz	x2, 7120 <PySequence_Fast@plt+0x2ee0>
    7050:	ldr	x20, [x19, #40]
    7054:	cbz	x20, 7258 <PySequence_Fast@plt+0x3018>
    7058:	ldr	x0, [x19, #16]
    705c:	str	xzr, [x19, #40]
    7060:	ldr	x1, [x19, #32]
    7064:	cmp	x1, x2
    7068:	b.gt	7090 <PySequence_Fast@plt+0x2e50>
    706c:	cmp	x23, x1, lsl #1
    7070:	lsl	x24, x1, #1
    7074:	b.cc	7230 <PySequence_Fast@plt+0x2ff0>  // b.lo, b.ul, b.last
    7078:	lsl	x1, x1, #5
    707c:	bl	3e30 <PyMem_Realloc@plt>
    7080:	cbz	x0, 7230 <PySequence_Fast@plt+0x2ff0>
    7084:	ldr	x2, [x19, #24]
    7088:	str	x0, [x19, #16]
    708c:	str	x24, [x19, #32]
    7090:	add	x1, x2, #0x1
    7094:	str	x1, [x19, #24]
    7098:	lsl	x2, x2, #4
    709c:	ldr	w3, [x19, #56]
    70a0:	ldr	x1, [x20]
    70a4:	add	x4, x0, x2
    70a8:	add	x1, x1, #0x1
    70ac:	str	x1, [x20]
    70b0:	str	x20, [x0, x2]
    70b4:	str	xzr, [x4, #8]
    70b8:	cbnz	w3, 71a4 <PySequence_Fast@plt+0x2f64>
    70bc:	ldr	x1, [x19, #48]
    70c0:	cmp	x1, x22
    70c4:	b.eq	70f8 <PySequence_Fast@plt+0x2eb8>  // b.none
    70c8:	ldr	x0, [x20, #16]
    70cc:	mov	w2, #0x2                   	// #2
    70d0:	bl	3ec0 <PyObject_RichCompareBool@plt>
    70d4:	mov	w24, w0
    70d8:	cmp	w0, #0x0
    70dc:	b.gt	70f8 <PySequence_Fast@plt+0x2eb8>
    70e0:	ldr	x0, [x20]
    70e4:	sub	x0, x0, #0x1
    70e8:	str	x0, [x20]
    70ec:	cbz	x0, 7110 <PySequence_Fast@plt+0x2ed0>
    70f0:	cbz	w24, 7048 <PySequence_Fast@plt+0x2e08>
    70f4:	mov	x20, #0x0                   	// #0
    70f8:	mov	x0, x20
    70fc:	ldp	x19, x20, [sp, #16]
    7100:	ldp	x21, x22, [sp, #32]
    7104:	ldp	x23, x24, [sp, #48]
    7108:	ldp	x29, x30, [sp], #64
    710c:	ret
    7110:	mov	x0, x20
    7114:	bl	3d70 <_Py_Dealloc@plt>
    7118:	cbz	w24, 7048 <PySequence_Fast@plt+0x2e08>
    711c:	b	70f4 <PySequence_Fast@plt+0x2eb4>
    7120:	lsl	x1, x2, #4
    7124:	ldr	x0, [x19, #16]
    7128:	sub	x1, x1, #0x10
    712c:	add	x4, x0, x1
    7130:	ldr	x20, [x0, x1]
    7134:	ldr	x1, [x20, #40]
    7138:	cbz	x1, 7170 <PySequence_Fast@plt+0x2f30>
    713c:	ldr	x5, [x1, #8]
    7140:	ldr	x3, [x4, #8]
    7144:	cmp	x5, x3
    7148:	b.le	7170 <PySequence_Fast@plt+0x2f30>
    714c:	ldr	x2, [x1, #24]
    7150:	add	x1, x3, #0x1
    7154:	ldr	x20, [x2, x3, lsl #3]
    7158:	str	x1, [x4, #8]
    715c:	ldr	x1, [x20]
    7160:	add	x1, x1, #0x1
    7164:	str	x1, [x20]
    7168:	ldr	x2, [x19, #24]
    716c:	b	7060 <PySequence_Fast@plt+0x2e20>
    7170:	ldr	w0, [x19, #56]
    7174:	sub	x2, x2, #0x1
    7178:	str	x2, [x19, #24]
    717c:	cmp	w0, #0x0
    7180:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    7184:	b.ne	7220 <PySequence_Fast@plt+0x2fe0>  // b.any
    7188:	ldr	x0, [x20]
    718c:	sub	x0, x0, #0x1
    7190:	str	x0, [x20]
    7194:	cbnz	x0, 7048 <PySequence_Fast@plt+0x2e08>
    7198:	mov	x0, x20
    719c:	bl	3d70 <_Py_Dealloc@plt>
    71a0:	b	7048 <PySequence_Fast@plt+0x2e08>
    71a4:	add	x0, x20, #0x18
    71a8:	bl	6ca0 <PySequence_Fast@plt+0x2a60>
    71ac:	mov	x24, x0
    71b0:	cbz	x24, 726c <PySequence_Fast@plt+0x302c>
    71b4:	cmp	x24, x21
    71b8:	b.eq	7188 <PySequence_Fast@plt+0x2f48>  // b.none
    71bc:	ldr	x0, [x24]
    71c0:	add	x0, x0, #0x1
    71c4:	str	x0, [x24]
    71c8:	ldr	x0, [x20]
    71cc:	sub	x0, x0, #0x1
    71d0:	str	x0, [x20]
    71d4:	cbz	x0, 7204 <PySequence_Fast@plt+0x2fc4>
    71d8:	mov	x0, x24
    71dc:	bl	4050 <PyObject_IsTrue@plt>
    71e0:	mov	w20, w0
    71e4:	cmp	w0, #0x0
    71e8:	b.gt	728c <PySequence_Fast@plt+0x304c>
    71ec:	ldr	x0, [x24]
    71f0:	sub	x0, x0, #0x1
    71f4:	str	x0, [x24]
    71f8:	cbz	x0, 7210 <PySequence_Fast@plt+0x2fd0>
    71fc:	cbz	w20, 7048 <PySequence_Fast@plt+0x2e08>
    7200:	b	70f4 <PySequence_Fast@plt+0x2eb4>
    7204:	mov	x0, x20
    7208:	bl	3d70 <_Py_Dealloc@plt>
    720c:	b	71d8 <PySequence_Fast@plt+0x2f98>
    7210:	mov	x0, x24
    7214:	bl	3d70 <_Py_Dealloc@plt>
    7218:	cbz	w20, 7048 <PySequence_Fast@plt+0x2e08>
    721c:	b	70f4 <PySequence_Fast@plt+0x2eb4>
    7220:	add	x0, x20, #0x20
    7224:	bl	6ca0 <PySequence_Fast@plt+0x2a60>
    7228:	mov	x24, x0
    722c:	b	71b0 <PySequence_Fast@plt+0x2f70>
    7230:	ldr	x0, [x20]
    7234:	sub	x0, x0, #0x1
    7238:	str	x0, [x20]
    723c:	cbz	x0, 724c <PySequence_Fast@plt+0x300c>
    7240:	mov	x20, #0x0                   	// #0
    7244:	bl	3d80 <PyErr_NoMemory@plt>
    7248:	b	70f8 <PySequence_Fast@plt+0x2eb8>
    724c:	mov	x0, x20
    7250:	bl	3d70 <_Py_Dealloc@plt>
    7254:	b	7240 <PySequence_Fast@plt+0x3000>
    7258:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    725c:	ldr	x0, [x0, #4016]
    7260:	ldr	x0, [x0]
    7264:	bl	3e40 <PyErr_SetNone@plt>
    7268:	b	70f8 <PySequence_Fast@plt+0x2eb8>
    726c:	ldr	x0, [x20]
    7270:	sub	x0, x0, #0x1
    7274:	str	x0, [x20]
    7278:	cbnz	x0, 70f4 <PySequence_Fast@plt+0x2eb4>
    727c:	mov	x0, x20
    7280:	mov	x20, #0x0                   	// #0
    7284:	bl	3d70 <_Py_Dealloc@plt>
    7288:	b	70f8 <PySequence_Fast@plt+0x2eb8>
    728c:	mov	x20, x24
    7290:	b	70f8 <PySequence_Fast@plt+0x2eb8>
    7294:	nop
    7298:	stp	x29, x30, [sp, #-96]!
    729c:	mov	x29, sp
    72a0:	stp	x19, x20, [sp, #16]
    72a4:	mov	x19, x2
    72a8:	sub	x2, x2, #0x1
    72ac:	stp	x21, x22, [sp, #32]
    72b0:	mov	x20, x1
    72b4:	cmp	x2, #0x1
    72b8:	stp	x23, x24, [sp, #48]
    72bc:	mov	x23, x0
    72c0:	b.hi	7610 <PySequence_Fast@plt+0x33d0>  // b.pmore
    72c4:	cmp	x19, #0x1
    72c8:	b.le	76cc <PySequence_Fast@plt+0x348c>
    72cc:	ldr	x21, [x20, #8]
    72d0:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    72d4:	ldr	x19, [x23, #24]
    72d8:	add	x0, x0, #0x328
    72dc:	add	x0, x0, #0x340
    72e0:	ldr	x1, [x19, #8]
    72e4:	cmp	x1, x0
    72e8:	b.ne	7698 <PySequence_Fast@plt+0x3458>  // b.any
    72ec:	ldr	x0, [x20]
    72f0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    72f4:	add	x1, x1, #0x388
    72f8:	bl	3d00 <PyObject_GetAttrString@plt>
    72fc:	cbz	x0, 762c <PySequence_Fast@plt+0x33ec>
    7300:	ldr	x1, [x19, #96]
    7304:	str	x0, [x19, #96]
    7308:	cbz	x1, 731c <PySequence_Fast@plt+0x30dc>
    730c:	ldr	x0, [x1]
    7310:	sub	x0, x0, #0x1
    7314:	str	x0, [x1]
    7318:	cbz	x0, 7728 <PySequence_Fast@plt+0x34e8>
    731c:	ldr	x0, [x19, #104]
    7320:	cbz	x0, 7338 <PySequence_Fast@plt+0x30f8>
    7324:	ldr	x1, [x0]
    7328:	str	xzr, [x19, #104]
    732c:	sub	x1, x1, #0x1
    7330:	str	x1, [x0]
    7334:	cbz	x1, 773c <PySequence_Fast@plt+0x34fc>
    7338:	ldr	x0, [x19, #112]
    733c:	cbz	x0, 7354 <PySequence_Fast@plt+0x3114>
    7340:	ldr	x1, [x0]
    7344:	str	xzr, [x19, #112]
    7348:	sub	x1, x1, #0x1
    734c:	str	x1, [x0]
    7350:	cbz	x1, 774c <PySequence_Fast@plt+0x350c>
    7354:	ldr	x0, [x19, #120]
    7358:	cbz	x0, 7370 <PySequence_Fast@plt+0x3130>
    735c:	ldr	x1, [x0]
    7360:	str	xzr, [x19, #120]
    7364:	sub	x1, x1, #0x1
    7368:	str	x1, [x0]
    736c:	cbz	x1, 775c <PySequence_Fast@plt+0x351c>
    7370:	ldr	x0, [x19, #128]
    7374:	cbz	x0, 738c <PySequence_Fast@plt+0x314c>
    7378:	ldr	x1, [x0]
    737c:	str	xzr, [x19, #128]
    7380:	sub	x1, x1, #0x1
    7384:	str	x1, [x0]
    7388:	cbz	x1, 776c <PySequence_Fast@plt+0x352c>
    738c:	ldr	x0, [x19, #136]
    7390:	cbz	x0, 73a8 <PySequence_Fast@plt+0x3168>
    7394:	ldr	x1, [x0]
    7398:	str	xzr, [x19, #136]
    739c:	sub	x1, x1, #0x1
    73a0:	str	x1, [x0]
    73a4:	cbz	x1, 777c <PySequence_Fast@plt+0x353c>
    73a8:	ldr	x0, [x19, #144]
    73ac:	cbz	x0, 73c4 <PySequence_Fast@plt+0x3184>
    73b0:	ldr	x1, [x0]
    73b4:	str	xzr, [x19, #144]
    73b8:	sub	x1, x1, #0x1
    73bc:	str	x1, [x0]
    73c0:	cbz	x1, 778c <PySequence_Fast@plt+0x354c>
    73c4:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    73c8:	ldr	x0, [x0, #3976]
    73cc:	cmp	x21, x0
    73d0:	b.eq	77a0 <PySequence_Fast@plt+0x3560>  // b.none
    73d4:	mov	x0, x21
    73d8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    73dc:	add	x1, x1, #0x398
    73e0:	bl	4240 <PySequence_Fast@plt>
    73e4:	mov	x21, x0
    73e8:	cbz	x0, 762c <PySequence_Fast@plt+0x33ec>
    73ec:	ldr	x0, [x0, #16]
    73f0:	stp	x27, x28, [sp, #80]
    73f4:	cmp	x0, #0x0
    73f8:	b.le	753c <PySequence_Fast@plt+0x32fc>
    73fc:	adrp	x24, e000 <PyInit__elementtree@@Base+0x168>
    7400:	add	x28, x21, #0x18
    7404:	add	x24, x24, #0x390
    7408:	mov	x22, #0x0                   	// #0
    740c:	stp	x25, x26, [sp, #64]
    7410:	adrp	x25, e000 <PyInit__elementtree@@Base+0x168>
    7414:	add	x25, x25, #0x3d0
    7418:	b	7480 <PySequence_Fast@plt+0x3240>
    741c:	ldr	x0, [x21, #24]
    7420:	ldr	x20, [x0, x22, lsl #3]
    7424:	ldr	x0, [x20, #8]
    7428:	ldr	x0, [x0, #168]
    742c:	tbnz	w0, #28, 749c <PySequence_Fast@plt+0x325c>
    7430:	tbz	w0, #27, 74ac <PySequence_Fast@plt+0x326c>
    7434:	add	x27, x20, #0x20
    7438:	ldr	x26, [x20]
    743c:	mov	x1, x25
    7440:	mov	x0, x27
    7444:	add	x3, x26, #0x1
    7448:	str	x3, [x20]
    744c:	bl	3ff0 <strcmp@plt>
    7450:	cbnz	w0, 74f8 <PySequence_Fast@plt+0x32b8>
    7454:	ldr	x0, [x19, #104]
    7458:	str	x20, [x19, #104]
    745c:	cbz	x0, 7470 <PySequence_Fast@plt+0x3230>
    7460:	ldr	x1, [x0]
    7464:	sub	x1, x1, #0x1
    7468:	str	x1, [x0]
    746c:	cbz	x1, 7524 <PySequence_Fast@plt+0x32e4>
    7470:	ldr	x0, [x21, #16]
    7474:	add	x22, x22, #0x1
    7478:	cmp	x22, x0
    747c:	b.ge	7538 <PySequence_Fast@plt+0x32f8>  // b.tcont
    7480:	ldr	x0, [x21, #8]
    7484:	ldr	x0, [x0, #168]
    7488:	tbnz	w0, #25, 741c <PySequence_Fast@plt+0x31dc>
    748c:	ldr	x20, [x28, x22, lsl #3]
    7490:	ldr	x0, [x20, #8]
    7494:	ldr	x0, [x0, #168]
    7498:	tbz	w0, #28, 7430 <PySequence_Fast@plt+0x31f0>
    749c:	mov	x0, x20
    74a0:	bl	40c0 <PyUnicode_AsUTF8@plt>
    74a4:	mov	x27, x0
    74a8:	cbnz	x0, 7438 <PySequence_Fast@plt+0x31f8>
    74ac:	ldr	x0, [x21]
    74b0:	sub	x0, x0, #0x1
    74b4:	str	x0, [x21]
    74b8:	cbz	x0, 77d4 <PySequence_Fast@plt+0x3594>
    74bc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    74c0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    74c4:	add	x1, x1, #0x3b8
    74c8:	mov	x21, #0x0                   	// #0
    74cc:	ldr	x0, [x0, #3928]
    74d0:	ldr	x0, [x0]
    74d4:	bl	4180 <PyErr_Format@plt>
    74d8:	ldp	x25, x26, [sp, #64]
    74dc:	ldp	x27, x28, [sp, #80]
    74e0:	mov	x0, x21
    74e4:	ldp	x19, x20, [sp, #16]
    74e8:	ldp	x21, x22, [sp, #32]
    74ec:	ldp	x23, x24, [sp, #48]
    74f0:	ldp	x29, x30, [sp], #96
    74f4:	ret
    74f8:	mov	x1, x24
    74fc:	mov	x0, x27
    7500:	bl	3ff0 <strcmp@plt>
    7504:	cbnz	w0, 7580 <PySequence_Fast@plt+0x3340>
    7508:	ldr	x0, [x19, #112]
    750c:	str	x20, [x19, #112]
    7510:	cbz	x0, 7470 <PySequence_Fast@plt+0x3230>
    7514:	ldr	x1, [x0]
    7518:	sub	x1, x1, #0x1
    751c:	str	x1, [x0]
    7520:	cbnz	x1, 7470 <PySequence_Fast@plt+0x3230>
    7524:	bl	3d70 <_Py_Dealloc@plt>
    7528:	add	x22, x22, #0x1
    752c:	ldr	x0, [x21, #16]
    7530:	cmp	x22, x0
    7534:	b.lt	7480 <PySequence_Fast@plt+0x3240>  // b.tstop
    7538:	ldp	x25, x26, [sp, #64]
    753c:	ldr	x0, [x21]
    7540:	sub	x0, x0, #0x1
    7544:	str	x0, [x21]
    7548:	cbz	x0, 7830 <PySequence_Fast@plt+0x35f0>
    754c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7550:	ldp	x19, x20, [sp, #16]
    7554:	ldr	x27, [x0, #3976]
    7558:	ldp	x23, x24, [sp, #48]
    755c:	mov	x21, x27
    7560:	ldr	x0, [x27]
    7564:	add	x0, x0, #0x1
    7568:	str	x0, [x27]
    756c:	mov	x0, x21
    7570:	ldp	x21, x22, [sp, #32]
    7574:	ldp	x27, x28, [sp, #80]
    7578:	ldp	x29, x30, [sp], #96
    757c:	ret
    7580:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7584:	mov	x0, x27
    7588:	add	x1, x1, #0x3d8
    758c:	bl	3ff0 <strcmp@plt>
    7590:	cbnz	w0, 75d8 <PySequence_Fast@plt+0x3398>
    7594:	ldr	x0, [x19, #120]
    7598:	str	x20, [x19, #120]
    759c:	cbz	x0, 75b0 <PySequence_Fast@plt+0x3370>
    75a0:	ldr	x1, [x0]
    75a4:	sub	x1, x1, #0x1
    75a8:	str	x1, [x0]
    75ac:	cbz	x1, 7608 <PySequence_Fast@plt+0x33c8>
    75b0:	adrp	x1, 23000 <PyInit__elementtree@@Base+0x15168>
    75b4:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    75b8:	ldr	x0, [x23, #16]
    75bc:	add	x2, x2, #0xf28
    75c0:	ldr	x3, [x1, #1088]
    75c4:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    75c8:	add	x1, x1, #0xe58
    75cc:	ldr	x3, [x3, #112]
    75d0:	blr	x3
    75d4:	b	7470 <PySequence_Fast@plt+0x3230>
    75d8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    75dc:	mov	x0, x27
    75e0:	add	x1, x1, #0x3e8
    75e4:	bl	3ff0 <strcmp@plt>
    75e8:	cbnz	w0, 7648 <PySequence_Fast@plt+0x3408>
    75ec:	ldr	x0, [x19, #128]
    75f0:	str	x20, [x19, #128]
    75f4:	cbz	x0, 75b0 <PySequence_Fast@plt+0x3370>
    75f8:	ldr	x1, [x0]
    75fc:	sub	x1, x1, #0x1
    7600:	str	x1, [x0]
    7604:	cbnz	x1, 75b0 <PySequence_Fast@plt+0x3370>
    7608:	bl	3d70 <_Py_Dealloc@plt>
    760c:	b	75b0 <PySequence_Fast@plt+0x3370>
    7610:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7614:	mov	x1, x19
    7618:	add	x0, x0, #0x330
    761c:	mov	x3, #0x2                   	// #2
    7620:	mov	x2, #0x1                   	// #1
    7624:	bl	3f60 <_PyArg_CheckPositional@plt>
    7628:	cbnz	w0, 72c4 <PySequence_Fast@plt+0x3084>
    762c:	mov	x21, #0x0                   	// #0
    7630:	mov	x0, x21
    7634:	ldp	x19, x20, [sp, #16]
    7638:	ldp	x21, x22, [sp, #32]
    763c:	ldp	x23, x24, [sp, #48]
    7640:	ldp	x29, x30, [sp], #96
    7644:	ret
    7648:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    764c:	mov	x0, x27
    7650:	add	x1, x1, #0x3f0
    7654:	bl	3ff0 <strcmp@plt>
    7658:	cbnz	w0, 76d8 <PySequence_Fast@plt+0x3498>
    765c:	ldr	x0, [x19, #136]
    7660:	str	x20, [x19, #136]
    7664:	cbz	x0, 7678 <PySequence_Fast@plt+0x3438>
    7668:	ldr	x1, [x0]
    766c:	sub	x1, x1, #0x1
    7670:	str	x1, [x0]
    7674:	cbz	x1, 7848 <PySequence_Fast@plt+0x3608>
    7678:	adrp	x2, 23000 <PyInit__elementtree@@Base+0x15168>
    767c:	adrp	x1, d000 <PySequence_Fast@plt+0x8dc0>
    7680:	ldr	x0, [x23, #16]
    7684:	add	x1, x1, #0x280
    7688:	ldr	x2, [x2, #1088]
    768c:	ldr	x2, [x2, #88]
    7690:	blr	x2
    7694:	b	7470 <PySequence_Fast@plt+0x3230>
    7698:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    769c:	mov	x21, #0x0                   	// #0
    76a0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    76a4:	add	x1, x1, #0x340
    76a8:	ldr	x0, [x0, #3944]
    76ac:	ldr	x0, [x0]
    76b0:	bl	3de0 <PyErr_SetString@plt>
    76b4:	mov	x0, x21
    76b8:	ldp	x19, x20, [sp, #16]
    76bc:	ldp	x21, x22, [sp, #32]
    76c0:	ldp	x23, x24, [sp, #48]
    76c4:	ldp	x29, x30, [sp], #96
    76c8:	ret
    76cc:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    76d0:	ldr	x21, [x21, #3976]
    76d4:	b	72d0 <PySequence_Fast@plt+0x3090>
    76d8:	ldrb	w0, [x27]
    76dc:	cmp	w0, #0x70
    76e0:	b.eq	77e0 <PySequence_Fast@plt+0x35a0>  // b.none
    76e4:	str	x26, [x20]
    76e8:	cbz	x26, 783c <PySequence_Fast@plt+0x35fc>
    76ec:	ldr	x0, [x21]
    76f0:	sub	x0, x0, #0x1
    76f4:	str	x0, [x21]
    76f8:	cbz	x0, 7858 <PySequence_Fast@plt+0x3618>
    76fc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7700:	mov	x2, x27
    7704:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7708:	mov	x21, #0x0                   	// #0
    770c:	ldr	x0, [x0, #3928]
    7710:	add	x1, x1, #0x3f8
    7714:	ldr	x0, [x0]
    7718:	bl	4180 <PyErr_Format@plt>
    771c:	ldp	x25, x26, [sp, #64]
    7720:	ldp	x27, x28, [sp, #80]
    7724:	b	74e0 <PySequence_Fast@plt+0x32a0>
    7728:	mov	x0, x1
    772c:	bl	3d70 <_Py_Dealloc@plt>
    7730:	ldr	x0, [x19, #104]
    7734:	cbnz	x0, 7324 <PySequence_Fast@plt+0x30e4>
    7738:	b	7338 <PySequence_Fast@plt+0x30f8>
    773c:	bl	3d70 <_Py_Dealloc@plt>
    7740:	ldr	x0, [x19, #112]
    7744:	cbnz	x0, 7340 <PySequence_Fast@plt+0x3100>
    7748:	b	7354 <PySequence_Fast@plt+0x3114>
    774c:	bl	3d70 <_Py_Dealloc@plt>
    7750:	ldr	x0, [x19, #120]
    7754:	cbnz	x0, 735c <PySequence_Fast@plt+0x311c>
    7758:	b	7370 <PySequence_Fast@plt+0x3130>
    775c:	bl	3d70 <_Py_Dealloc@plt>
    7760:	ldr	x0, [x19, #128]
    7764:	cbnz	x0, 7378 <PySequence_Fast@plt+0x3138>
    7768:	b	738c <PySequence_Fast@plt+0x314c>
    776c:	bl	3d70 <_Py_Dealloc@plt>
    7770:	ldr	x0, [x19, #136]
    7774:	cbnz	x0, 7394 <PySequence_Fast@plt+0x3154>
    7778:	b	73a8 <PySequence_Fast@plt+0x3168>
    777c:	bl	3d70 <_Py_Dealloc@plt>
    7780:	ldr	x0, [x19, #144]
    7784:	cbnz	x0, 73b0 <PySequence_Fast@plt+0x3170>
    7788:	b	73c4 <PySequence_Fast@plt+0x3184>
    778c:	bl	3d70 <_Py_Dealloc@plt>
    7790:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7794:	ldr	x0, [x0, #3976]
    7798:	cmp	x21, x0
    779c:	b.ne	73d4 <PySequence_Fast@plt+0x3194>  // b.any
    77a0:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    77a4:	add	x0, x0, #0x390
    77a8:	bl	4100 <PyUnicode_FromString@plt>
    77ac:	str	x0, [x19, #112]
    77b0:	ldr	x1, [x21]
    77b4:	mov	x0, x21
    77b8:	ldp	x19, x20, [sp, #16]
    77bc:	add	x1, x1, #0x1
    77c0:	str	x1, [x21]
    77c4:	ldp	x21, x22, [sp, #32]
    77c8:	ldp	x23, x24, [sp, #48]
    77cc:	ldp	x29, x30, [sp], #96
    77d0:	ret
    77d4:	mov	x0, x21
    77d8:	bl	3d70 <_Py_Dealloc@plt>
    77dc:	b	74bc <PySequence_Fast@plt+0x327c>
    77e0:	ldrb	w0, [x27, #1]
    77e4:	cmp	w0, #0x69
    77e8:	b.ne	76e4 <PySequence_Fast@plt+0x34a4>  // b.any
    77ec:	ldrb	w0, [x27, #2]
    77f0:	cbnz	w0, 76e4 <PySequence_Fast@plt+0x34a4>
    77f4:	ldr	x0, [x19, #144]
    77f8:	str	x20, [x19, #144]
    77fc:	cbz	x0, 7810 <PySequence_Fast@plt+0x35d0>
    7800:	ldr	x1, [x0]
    7804:	sub	x1, x1, #0x1
    7808:	str	x1, [x0]
    780c:	cbz	x1, 7850 <PySequence_Fast@plt+0x3610>
    7810:	adrp	x2, 23000 <PyInit__elementtree@@Base+0x15168>
    7814:	adrp	x1, d000 <PySequence_Fast@plt+0x8dc0>
    7818:	ldr	x0, [x23, #16]
    781c:	add	x1, x1, #0x560
    7820:	ldr	x2, [x2, #1088]
    7824:	ldr	x2, [x2, #120]
    7828:	blr	x2
    782c:	b	7470 <PySequence_Fast@plt+0x3230>
    7830:	mov	x0, x21
    7834:	bl	3d70 <_Py_Dealloc@plt>
    7838:	b	754c <PySequence_Fast@plt+0x330c>
    783c:	mov	x0, x20
    7840:	bl	3d70 <_Py_Dealloc@plt>
    7844:	b	76ec <PySequence_Fast@plt+0x34ac>
    7848:	bl	3d70 <_Py_Dealloc@plt>
    784c:	b	7678 <PySequence_Fast@plt+0x3438>
    7850:	bl	3d70 <_Py_Dealloc@plt>
    7854:	b	7810 <PySequence_Fast@plt+0x35d0>
    7858:	mov	x0, x21
    785c:	bl	3d70 <_Py_Dealloc@plt>
    7860:	b	76fc <PySequence_Fast@plt+0x34bc>
    7864:	nop
    7868:	ldr	x0, [x0, #40]
    786c:	cbz	x0, 7888 <PySequence_Fast@plt+0x3648>
    7870:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    7874:	ldr	x0, [x0]
    7878:	ldr	x1, [x1, #3976]
    787c:	cmp	x0, x1
    7880:	b.eq	7888 <PySequence_Fast@plt+0x3648>  // b.none
    7884:	b	40e0 <PyDict_Keys@plt>
    7888:	mov	x0, #0x0                   	// #0
    788c:	b	3c50 <PyList_New@plt>
    7890:	ldr	x0, [x0, #40]
    7894:	cbz	x0, 78b0 <PySequence_Fast@plt+0x3670>
    7898:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    789c:	ldr	x0, [x0]
    78a0:	ldr	x1, [x1, #3976]
    78a4:	cmp	x0, x1
    78a8:	b.eq	78b0 <PySequence_Fast@plt+0x3670>  // b.none
    78ac:	b	3c80 <PyDict_Items@plt>
    78b0:	mov	x0, #0x0                   	// #0
    78b4:	b	3c50 <PyList_New@plt>
    78b8:	stp	x29, x30, [sp, #-64]!
    78bc:	mov	x29, sp
    78c0:	stp	x21, x22, [sp, #32]
    78c4:	mov	x22, x0
    78c8:	mov	x21, x1
    78cc:	ldr	x0, [x1, #8]
    78d0:	stp	x19, x20, [sp, #16]
    78d4:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    78d8:	add	x19, x19, #0x328
    78dc:	cmp	x0, x19
    78e0:	b.eq	78f0 <PySequence_Fast@plt+0x36b0>  // b.none
    78e4:	mov	x1, x19
    78e8:	bl	4160 <PyType_IsSubtype@plt>
    78ec:	cbz	w0, 7a30 <PySequence_Fast@plt+0x37f0>
    78f0:	ldr	x19, [x22, #40]
    78f4:	cbz	x19, 7a54 <PySequence_Fast@plt+0x3814>
    78f8:	ldr	x4, [x19, #8]
    78fc:	mov	x20, #0x0                   	// #0
    7900:	cmp	x4, #0x0
    7904:	b.le	7a00 <PySequence_Fast@plt+0x37c0>
    7908:	str	x23, [sp, #48]
    790c:	b	7934 <PySequence_Fast@plt+0x36f4>
    7910:	bl	3ec0 <PyObject_RichCompareBool@plt>
    7914:	cmp	w0, #0x0
    7918:	b.gt	79d4 <PySequence_Fast@plt+0x3794>
    791c:	add	x20, x20, #0x1
    7920:	b.ne	79e0 <PySequence_Fast@plt+0x37a0>  // b.any
    7924:	ldr	x19, [x22, #40]
    7928:	ldr	x4, [x19, #8]
    792c:	cmp	x20, x4
    7930:	b.ge	79fc <PySequence_Fast@plt+0x37bc>  // b.tcont
    7934:	ldr	x0, [x19, #24]
    7938:	mov	x1, x21
    793c:	lsl	x23, x20, #3
    7940:	mov	w2, #0x2                   	// #2
    7944:	ldr	x0, [x0, x20, lsl #3]
    7948:	cmp	x21, x0
    794c:	b.ne	7910 <PySequence_Fast@plt+0x36d0>  // b.any
    7950:	cmp	x20, x4
    7954:	b.ge	79fc <PySequence_Fast@plt+0x37bc>  // b.tcont
    7958:	ldr	x1, [x19, #24]
    795c:	sub	x4, x4, #0x1
    7960:	cmp	x20, x4
    7964:	add	x0, x1, x23
    7968:	ldr	x21, [x1, x23]
    796c:	str	x4, [x19, #8]
    7970:	b.ge	7988 <PySequence_Fast@plt+0x3748>  // b.tcont
    7974:	sub	x4, x4, x20
    7978:	add	x23, x23, #0x8
    797c:	add	x1, x1, x23
    7980:	lsl	x2, x4, #3
    7984:	bl	3c40 <memmove@plt>
    7988:	ldr	x0, [x21]
    798c:	sub	x0, x0, #0x1
    7990:	str	x0, [x21]
    7994:	cbz	x0, 79c8 <PySequence_Fast@plt+0x3788>
    7998:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    799c:	ldr	x23, [sp, #48]
    79a0:	ldr	x0, [x0, #3976]
    79a4:	mov	x19, x0
    79a8:	ldr	x1, [x0]
    79ac:	add	x1, x1, #0x1
    79b0:	str	x1, [x0]
    79b4:	mov	x0, x19
    79b8:	ldp	x19, x20, [sp, #16]
    79bc:	ldp	x21, x22, [sp, #32]
    79c0:	ldp	x29, x30, [sp], #64
    79c4:	ret
    79c8:	mov	x0, x21
    79cc:	bl	3d70 <_Py_Dealloc@plt>
    79d0:	b	7998 <PySequence_Fast@plt+0x3758>
    79d4:	ldr	x19, [x22, #40]
    79d8:	ldr	x4, [x19, #8]
    79dc:	b	7950 <PySequence_Fast@plt+0x3710>
    79e0:	mov	x19, #0x0                   	// #0
    79e4:	mov	x0, x19
    79e8:	ldp	x19, x20, [sp, #16]
    79ec:	ldp	x21, x22, [sp, #32]
    79f0:	ldr	x23, [sp, #48]
    79f4:	ldp	x29, x30, [sp], #64
    79f8:	ret
    79fc:	ldr	x23, [sp, #48]
    7a00:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7a04:	mov	x19, #0x0                   	// #0
    7a08:	ldr	x0, [x0, #3928]
    7a0c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7a10:	add	x1, x1, #0x428
    7a14:	ldr	x0, [x0]
    7a18:	bl	3de0 <PyErr_SetString@plt>
    7a1c:	mov	x0, x19
    7a20:	ldp	x19, x20, [sp, #16]
    7a24:	ldp	x21, x22, [sp, #32]
    7a28:	ldp	x29, x30, [sp], #64
    7a2c:	ret
    7a30:	ldr	x2, [x19, #24]
    7a34:	mov	x3, x21
    7a38:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7a3c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7a40:	add	x1, x1, #0x410
    7a44:	add	x0, x0, #0x420
    7a48:	mov	x19, #0x0                   	// #0
    7a4c:	bl	3ed0 <_PyArg_BadArgument@plt>
    7a50:	b	79b4 <PySequence_Fast@plt+0x3774>
    7a54:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7a58:	b	7a08 <PySequence_Fast@plt+0x37c8>
    7a5c:	nop
    7a60:	stp	x29, x30, [sp, #-32]!
    7a64:	mov	x29, sp
    7a68:	ldr	x1, [x0, #16]
    7a6c:	stp	x19, x20, [sp, #16]
    7a70:	mov	x19, x0
    7a74:	cbz	x1, 7acc <PySequence_Fast@plt+0x388c>
    7a78:	bl	3fe0 <Py_ReprEnter@plt>
    7a7c:	cmp	w0, #0x0
    7a80:	cbz	w0, 7ae4 <PySequence_Fast@plt+0x38a4>
    7a84:	mov	x20, #0x0                   	// #0
    7a88:	b.gt	7a9c <PySequence_Fast@plt+0x385c>
    7a8c:	mov	x0, x20
    7a90:	ldp	x19, x20, [sp, #16]
    7a94:	ldp	x29, x30, [sp], #32
    7a98:	ret
    7a9c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7aa0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7aa4:	ldr	x2, [x19, #8]
    7aa8:	add	x1, x1, #0x470
    7aac:	ldr	x0, [x0, #3920]
    7ab0:	ldr	x2, [x2, #24]
    7ab4:	ldr	x0, [x0]
    7ab8:	bl	4180 <PyErr_Format@plt>
    7abc:	mov	x0, x20
    7ac0:	ldp	x19, x20, [sp, #16]
    7ac4:	ldp	x29, x30, [sp], #32
    7ac8:	ret
    7acc:	ldp	x19, x20, [sp, #16]
    7ad0:	mov	x1, x0
    7ad4:	ldp	x29, x30, [sp], #32
    7ad8:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7adc:	add	x0, x0, #0x448
    7ae0:	b	3c30 <PyUnicode_FromFormat@plt>
    7ae4:	ldr	x1, [x19, #16]
    7ae8:	mov	x2, x19
    7aec:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7af0:	add	x0, x0, #0x458
    7af4:	bl	3c30 <PyUnicode_FromFormat@plt>
    7af8:	mov	x20, x0
    7afc:	mov	x0, x19
    7b00:	bl	41a0 <Py_ReprLeave@plt>
    7b04:	mov	x0, x20
    7b08:	ldp	x19, x20, [sp, #16]
    7b0c:	ldp	x29, x30, [sp], #32
    7b10:	ret
    7b14:	nop
    7b18:	stp	x29, x30, [sp, #-64]!
    7b1c:	cmp	x2, #0x2
    7b20:	mov	x29, sp
    7b24:	stp	x19, x20, [sp, #16]
    7b28:	mov	x19, x1
    7b2c:	stp	x23, x24, [sp, #48]
    7b30:	b.eq	7b50 <PySequence_Fast@plt+0x3910>  // b.none
    7b34:	mov	x1, x2
    7b38:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7b3c:	mov	x3, #0x2                   	// #2
    7b40:	add	x0, x0, #0x498
    7b44:	mov	x2, x3
    7b48:	bl	3f60 <_PyArg_CheckPositional@plt>
    7b4c:	cbz	w0, 7cdc <PySequence_Fast@plt+0x3a9c>
    7b50:	stp	x21, x22, [sp, #32]
    7b54:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    7b58:	adrp	x23, 21000 <PyInit__elementtree@@Base+0x13168>
    7b5c:	ldp	x20, x21, [x19]
    7b60:	add	x0, x0, #0x9c0
    7b64:	add	x0, x0, #0x40
    7b68:	bl	3fc0 <PyState_FindModule@plt>
    7b6c:	bl	3e10 <PyModule_GetState@plt>
    7b70:	mov	x19, x0
    7b74:	mov	x0, x20
    7b78:	bl	4090 <PyCallable_Check@plt>
    7b7c:	ldr	x22, [x23, #3976]
    7b80:	cmp	w0, #0x0
    7b84:	ccmp	x20, x22, #0x4, eq  // eq = none
    7b88:	b.ne	7ca0 <PySequence_Fast@plt+0x3a60>  // b.any
    7b8c:	mov	x0, x21
    7b90:	bl	4090 <PyCallable_Check@plt>
    7b94:	cmp	w0, #0x0
    7b98:	ccmp	x21, x22, #0x4, eq  // eq = none
    7b9c:	b.ne	7cf4 <PySequence_Fast@plt+0x3ab4>  // b.any
    7ba0:	ldp	x1, x2, [x19, #24]
    7ba4:	mov	x0, #0x2                   	// #2
    7ba8:	cmp	x1, #0x0
    7bac:	csel	x1, x1, x22, ne  // ne = any
    7bb0:	cmp	x2, #0x0
    7bb4:	csel	x2, x22, x2, eq  // eq = none
    7bb8:	bl	4210 <PyTuple_Pack@plt>
    7bbc:	mov	x24, x0
    7bc0:	cmp	x20, x22
    7bc4:	b.eq	7c3c <PySequence_Fast@plt+0x39fc>  // b.none
    7bc8:	ldr	x1, [x20]
    7bcc:	ldr	x0, [x19, #24]
    7bd0:	add	x1, x1, #0x1
    7bd4:	str	x1, [x20]
    7bd8:	str	x20, [x19, #24]
    7bdc:	cbz	x0, 7bf0 <PySequence_Fast@plt+0x39b0>
    7be0:	ldr	x1, [x0]
    7be4:	sub	x1, x1, #0x1
    7be8:	str	x1, [x0]
    7bec:	cbz	x1, 7c58 <PySequence_Fast@plt+0x3a18>
    7bf0:	ldr	x23, [x23, #3976]
    7bf4:	ldr	x0, [x19, #32]
    7bf8:	cmp	x21, x23
    7bfc:	b.eq	7c6c <PySequence_Fast@plt+0x3a2c>  // b.none
    7c00:	ldr	x1, [x21]
    7c04:	add	x1, x1, #0x1
    7c08:	str	x1, [x21]
    7c0c:	str	x21, [x19, #32]
    7c10:	cbz	x0, 7c24 <PySequence_Fast@plt+0x39e4>
    7c14:	ldr	x1, [x0]
    7c18:	sub	x1, x1, #0x1
    7c1c:	str	x1, [x0]
    7c20:	cbz	x1, 7c84 <PySequence_Fast@plt+0x3a44>
    7c24:	mov	x0, x24
    7c28:	ldp	x19, x20, [sp, #16]
    7c2c:	ldp	x21, x22, [sp, #32]
    7c30:	ldp	x23, x24, [sp, #48]
    7c34:	ldp	x29, x30, [sp], #64
    7c38:	ret
    7c3c:	ldr	x0, [x19, #24]
    7c40:	cbz	x0, 7bf0 <PySequence_Fast@plt+0x39b0>
    7c44:	ldr	x1, [x0]
    7c48:	str	xzr, [x19, #24]
    7c4c:	sub	x1, x1, #0x1
    7c50:	str	x1, [x0]
    7c54:	cbnz	x1, 7bf0 <PySequence_Fast@plt+0x39b0>
    7c58:	bl	3d70 <_Py_Dealloc@plt>
    7c5c:	ldr	x23, [x23, #3976]
    7c60:	ldr	x0, [x19, #32]
    7c64:	cmp	x21, x23
    7c68:	b.ne	7c00 <PySequence_Fast@plt+0x39c0>  // b.any
    7c6c:	cbz	x0, 7c24 <PySequence_Fast@plt+0x39e4>
    7c70:	ldr	x1, [x0]
    7c74:	str	xzr, [x19, #32]
    7c78:	sub	x1, x1, #0x1
    7c7c:	str	x1, [x0]
    7c80:	cbnz	x1, 7c24 <PySequence_Fast@plt+0x39e4>
    7c84:	bl	3d70 <_Py_Dealloc@plt>
    7c88:	mov	x0, x24
    7c8c:	ldp	x19, x20, [sp, #16]
    7c90:	ldp	x21, x22, [sp, #32]
    7c94:	ldp	x23, x24, [sp, #48]
    7c98:	ldp	x29, x30, [sp], #64
    7c9c:	ret
    7ca0:	ldr	x2, [x20, #8]
    7ca4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7ca8:	add	x1, x1, #0x4a8
    7cac:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7cb0:	ldr	x0, [x0, #3944]
    7cb4:	mov	x24, #0x0                   	// #0
    7cb8:	ldr	x2, [x2, #24]
    7cbc:	ldr	x0, [x0]
    7cc0:	bl	4180 <PyErr_Format@plt>
    7cc4:	mov	x0, x24
    7cc8:	ldp	x19, x20, [sp, #16]
    7ccc:	ldp	x21, x22, [sp, #32]
    7cd0:	ldp	x23, x24, [sp, #48]
    7cd4:	ldp	x29, x30, [sp], #64
    7cd8:	ret
    7cdc:	mov	x24, #0x0                   	// #0
    7ce0:	mov	x0, x24
    7ce4:	ldp	x19, x20, [sp, #16]
    7ce8:	ldp	x23, x24, [sp, #48]
    7cec:	ldp	x29, x30, [sp], #64
    7cf0:	ret
    7cf4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7cf8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7cfc:	add	x1, x1, #0x4d8
    7d00:	ldr	x2, [x21, #8]
    7d04:	b	7cb0 <PySequence_Fast@plt+0x3a70>
    7d08:	stp	x29, x30, [sp, #-32]!
    7d0c:	mov	x29, sp
    7d10:	str	x19, [sp, #16]
    7d14:	cbz	x1, 7d68 <PySequence_Fast@plt+0x3b28>
    7d18:	ldr	x3, [x1]
    7d1c:	mov	x2, x0
    7d20:	ldr	x0, [x0, #16]
    7d24:	add	x3, x3, #0x1
    7d28:	str	x3, [x1]
    7d2c:	mov	w19, #0x0                   	// #0
    7d30:	str	x1, [x2, #16]
    7d34:	ldr	x1, [x0]
    7d38:	sub	x1, x1, #0x1
    7d3c:	str	x1, [x0]
    7d40:	cbz	x1, 7d54 <PySequence_Fast@plt+0x3b14>
    7d44:	mov	w0, w19
    7d48:	ldr	x19, [sp, #16]
    7d4c:	ldp	x29, x30, [sp], #32
    7d50:	ret
    7d54:	bl	3d70 <_Py_Dealloc@plt>
    7d58:	mov	w0, w19
    7d5c:	ldr	x19, [sp, #16]
    7d60:	ldp	x29, x30, [sp], #32
    7d64:	ret
    7d68:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7d6c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7d70:	mov	w19, #0xffffffff            	// #-1
    7d74:	add	x1, x1, #0x500
    7d78:	ldr	x0, [x0, #4008]
    7d7c:	ldr	x0, [x0]
    7d80:	bl	3de0 <PyErr_SetString@plt>
    7d84:	b	7d44 <PySequence_Fast@plt+0x3b04>
    7d88:	stp	x29, x30, [sp, #-32]!
    7d8c:	mov	x29, sp
    7d90:	str	x19, [sp, #16]
    7d94:	cbz	x1, 7dec <PySequence_Fast@plt+0x3bac>
    7d98:	ldr	x2, [x0, #24]
    7d9c:	mov	x3, x0
    7da0:	ldr	x4, [x1]
    7da4:	and	x0, x2, #0xfffffffffffffffe
    7da8:	mov	w19, #0x0                   	// #0
    7dac:	add	x2, x4, #0x1
    7db0:	str	x2, [x1]
    7db4:	str	x1, [x3, #24]
    7db8:	ldr	x1, [x0]
    7dbc:	sub	x1, x1, #0x1
    7dc0:	str	x1, [x0]
    7dc4:	cbz	x1, 7dd8 <PySequence_Fast@plt+0x3b98>
    7dc8:	mov	w0, w19
    7dcc:	ldr	x19, [sp, #16]
    7dd0:	ldp	x29, x30, [sp], #32
    7dd4:	ret
    7dd8:	bl	3d70 <_Py_Dealloc@plt>
    7ddc:	mov	w0, w19
    7de0:	ldr	x19, [sp, #16]
    7de4:	ldp	x29, x30, [sp], #32
    7de8:	ret
    7dec:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7df0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7df4:	mov	w19, #0xffffffff            	// #-1
    7df8:	add	x1, x1, #0x500
    7dfc:	ldr	x0, [x0, #4008]
    7e00:	ldr	x0, [x0]
    7e04:	bl	3de0 <PyErr_SetString@plt>
    7e08:	b	7dc8 <PySequence_Fast@plt+0x3b88>
    7e0c:	nop
    7e10:	stp	x29, x30, [sp, #-32]!
    7e14:	mov	x29, sp
    7e18:	str	x19, [sp, #16]
    7e1c:	cbz	x1, 7e74 <PySequence_Fast@plt+0x3c34>
    7e20:	ldr	x2, [x0, #32]
    7e24:	mov	x3, x0
    7e28:	ldr	x4, [x1]
    7e2c:	and	x0, x2, #0xfffffffffffffffe
    7e30:	mov	w19, #0x0                   	// #0
    7e34:	add	x2, x4, #0x1
    7e38:	str	x2, [x1]
    7e3c:	str	x1, [x3, #32]
    7e40:	ldr	x1, [x0]
    7e44:	sub	x1, x1, #0x1
    7e48:	str	x1, [x0]
    7e4c:	cbz	x1, 7e60 <PySequence_Fast@plt+0x3c20>
    7e50:	mov	w0, w19
    7e54:	ldr	x19, [sp, #16]
    7e58:	ldp	x29, x30, [sp], #32
    7e5c:	ret
    7e60:	bl	3d70 <_Py_Dealloc@plt>
    7e64:	mov	w0, w19
    7e68:	ldr	x19, [sp, #16]
    7e6c:	ldp	x29, x30, [sp], #32
    7e70:	ret
    7e74:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7e78:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    7e7c:	mov	w19, #0xffffffff            	// #-1
    7e80:	add	x1, x1, #0x500
    7e84:	ldr	x0, [x0, #4008]
    7e88:	ldr	x0, [x0]
    7e8c:	bl	3de0 <PyErr_SetString@plt>
    7e90:	b	7e50 <PySequence_Fast@plt+0x3c10>
    7e94:	nop
    7e98:	stp	x29, x30, [sp, #-32]!
    7e9c:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    7ea0:	add	x1, x1, #0x328
    7ea4:	mov	x29, sp
    7ea8:	stp	x19, x20, [sp, #16]
    7eac:	mov	x20, x0
    7eb0:	add	x0, x1, #0x1a0
    7eb4:	bl	3df0 <_PyObject_GC_New@plt>
    7eb8:	mov	x19, x0
    7ebc:	cbz	x0, 7f10 <PySequence_Fast@plt+0x3cd0>
    7ec0:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    7ec4:	mov	w2, #0x1                   	// #1
    7ec8:	str	w2, [x0, #56]
    7ecc:	ldr	x1, [x1, #3976]
    7ed0:	str	x1, [x0, #48]
    7ed4:	ldr	x2, [x1]
    7ed8:	add	x2, x2, #0x1
    7edc:	str	x2, [x1]
    7ee0:	ldr	x1, [x20]
    7ee4:	add	x1, x1, #0x1
    7ee8:	str	x1, [x20]
    7eec:	str	x20, [x0, #40]
    7ef0:	bl	3dc0 <PyObject_GC_Track@plt>
    7ef4:	mov	x0, #0x80                  	// #128
    7ef8:	bl	41f0 <PyMem_Malloc@plt>
    7efc:	str	x0, [x19, #16]
    7f00:	cbz	x0, 7f20 <PySequence_Fast@plt+0x3ce0>
    7f04:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7f08:	ldr	q0, [x0, #3104]
    7f0c:	stur	q0, [x19, #24]
    7f10:	mov	x0, x19
    7f14:	ldp	x19, x20, [sp, #16]
    7f18:	ldp	x29, x30, [sp], #32
    7f1c:	ret
    7f20:	ldr	x0, [x19]
    7f24:	sub	x0, x0, #0x1
    7f28:	str	x0, [x19]
    7f2c:	cbz	x0, 7f3c <PySequence_Fast@plt+0x3cfc>
    7f30:	mov	x19, #0x0                   	// #0
    7f34:	bl	3d80 <PyErr_NoMemory@plt>
    7f38:	b	7f10 <PySequence_Fast@plt+0x3cd0>
    7f3c:	mov	x0, x19
    7f40:	bl	3d70 <_Py_Dealloc@plt>
    7f44:	b	7f30 <PySequence_Fast@plt+0x3cf0>
    7f48:	stp	x29, x30, [sp, #-64]!
    7f4c:	mov	x29, sp
    7f50:	stp	x21, x22, [sp, #32]
    7f54:	mov	x21, x0
    7f58:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    7f5c:	stp	x19, x20, [sp, #16]
    7f60:	mov	x20, x1
    7f64:	add	x0, x0, #0x328
    7f68:	ldr	x1, [x21, #8]
    7f6c:	stp	x23, x24, [sp, #48]
    7f70:	mov	x23, x3
    7f74:	cmp	x1, x0
    7f78:	b.eq	80e0 <PySequence_Fast@plt+0x3ea0>  // b.none
    7f7c:	mov	x1, x23
    7f80:	mov	x0, x21
    7f84:	bl	40f0 <_PyObject_GetAttrId@plt>
    7f88:	mov	x19, x0
    7f8c:	cbz	x0, 8010 <PySequence_Fast@plt+0x3dd0>
    7f90:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    7f94:	mov	x1, #0x0                   	// #0
    7f98:	add	x0, x0, #0xb38
    7f9c:	ldr	x24, [x20]
    7fa0:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    7fa4:	mov	x22, x0
    7fa8:	cbz	x0, 8134 <PySequence_Fast@plt+0x3ef4>
    7fac:	mov	x1, x24
    7fb0:	bl	3d20 <PyUnicode_Join@plt>
    7fb4:	ldr	x1, [x22]
    7fb8:	mov	x24, x0
    7fbc:	sub	x0, x1, #0x1
    7fc0:	str	x0, [x22]
    7fc4:	cbz	x0, 8094 <PySequence_Fast@plt+0x3e54>
    7fc8:	cbz	x24, 8134 <PySequence_Fast@plt+0x3ef4>
    7fcc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    7fd0:	ldr	x0, [x0, #3976]
    7fd4:	cmp	x19, x0
    7fd8:	b.eq	8018 <PySequence_Fast@plt+0x3dd8>  // b.none
    7fdc:	mov	x1, x24
    7fe0:	mov	x0, x19
    7fe4:	bl	3cf0 <PyNumber_Add@plt>
    7fe8:	mov	x22, x0
    7fec:	ldr	x1, [x24]
    7ff0:	sub	x0, x1, #0x1
    7ff4:	str	x0, [x24]
    7ff8:	cbz	x0, 8128 <PySequence_Fast@plt+0x3ee8>
    7ffc:	ldr	x0, [x19]
    8000:	sub	x0, x0, #0x1
    8004:	str	x0, [x19]
    8008:	cbz	x0, 8118 <PySequence_Fast@plt+0x3ed8>
    800c:	cbnz	x22, 802c <PySequence_Fast@plt+0x3dec>
    8010:	mov	w0, #0xffffffff            	// #-1
    8014:	b	8074 <PySequence_Fast@plt+0x3e34>
    8018:	ldr	x0, [x19]
    801c:	mov	x22, x24
    8020:	sub	x0, x0, #0x1
    8024:	str	x0, [x19]
    8028:	cbz	x0, 8154 <PySequence_Fast@plt+0x3f14>
    802c:	mov	x1, x23
    8030:	mov	x0, x21
    8034:	mov	x2, x22
    8038:	bl	4000 <_PyObject_SetAttrId@plt>
    803c:	ldr	x1, [x22]
    8040:	mov	w19, w0
    8044:	sub	x1, x1, #0x1
    8048:	str	x1, [x22]
    804c:	cbz	x1, 8088 <PySequence_Fast@plt+0x3e48>
    8050:	tbnz	w19, #31, 8010 <PySequence_Fast@plt+0x3dd0>
    8054:	ldr	x0, [x20]
    8058:	cbz	x0, 8070 <PySequence_Fast@plt+0x3e30>
    805c:	ldr	x1, [x0]
    8060:	str	xzr, [x20]
    8064:	sub	x1, x1, #0x1
    8068:	str	x1, [x0]
    806c:	cbz	x1, 80d8 <PySequence_Fast@plt+0x3e98>
    8070:	mov	w0, #0x0                   	// #0
    8074:	ldp	x19, x20, [sp, #16]
    8078:	ldp	x21, x22, [sp, #32]
    807c:	ldp	x23, x24, [sp, #48]
    8080:	ldp	x29, x30, [sp], #64
    8084:	ret
    8088:	mov	x0, x22
    808c:	bl	3d70 <_Py_Dealloc@plt>
    8090:	b	8050 <PySequence_Fast@plt+0x3e10>
    8094:	mov	x0, x22
    8098:	bl	3d70 <_Py_Dealloc@plt>
    809c:	b	7fc8 <PySequence_Fast@plt+0x3d88>
    80a0:	ldr	x5, [x20]
    80a4:	adrp	x4, 21000 <PyInit__elementtree@@Base+0x13168>
    80a8:	ldr	x1, [x0]
    80ac:	and	x6, x5, #0xfffffffffffffffe
    80b0:	ldr	x4, [x4, #4064]
    80b4:	sub	x1, x1, #0x1
    80b8:	ldr	x3, [x5, #8]
    80bc:	cmp	x3, x4
    80c0:	cset	x3, eq  // eq = none
    80c4:	orr	x3, x3, x6
    80c8:	str	x3, [x2]
    80cc:	str	xzr, [x20]
    80d0:	str	x1, [x0]
    80d4:	cbnz	x1, 8070 <PySequence_Fast@plt+0x3e30>
    80d8:	bl	3d70 <_Py_Dealloc@plt>
    80dc:	b	8070 <PySequence_Fast@plt+0x3e30>
    80e0:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    80e4:	ldr	x3, [x2]
    80e8:	ldr	x1, [x1, #3976]
    80ec:	and	x0, x3, #0xfffffffffffffffe
    80f0:	cmp	x0, x1
    80f4:	b.eq	80a0 <PySequence_Fast@plt+0x3e60>  // b.none
    80f8:	tbz	w3, #0, 7f7c <PySequence_Fast@plt+0x3d3c>
    80fc:	ldr	x3, [x20]
    8100:	mov	x2, #0x7fffffffffffffff    	// #9223372036854775807
    8104:	mov	x1, x2
    8108:	bl	3d30 <PyList_SetSlice@plt>
    810c:	tbz	w0, #31, 8054 <PySequence_Fast@plt+0x3e14>
    8110:	mov	w0, #0xffffffff            	// #-1
    8114:	b	8074 <PySequence_Fast@plt+0x3e34>
    8118:	mov	x0, x19
    811c:	bl	3d70 <_Py_Dealloc@plt>
    8120:	cbnz	x22, 802c <PySequence_Fast@plt+0x3dec>
    8124:	b	8010 <PySequence_Fast@plt+0x3dd0>
    8128:	mov	x0, x24
    812c:	bl	3d70 <_Py_Dealloc@plt>
    8130:	b	7ffc <PySequence_Fast@plt+0x3dbc>
    8134:	ldr	x0, [x19]
    8138:	sub	x0, x0, #0x1
    813c:	str	x0, [x19]
    8140:	cbnz	x0, 8010 <PySequence_Fast@plt+0x3dd0>
    8144:	mov	x0, x19
    8148:	bl	3d70 <_Py_Dealloc@plt>
    814c:	mov	w0, #0xffffffff            	// #-1
    8150:	b	8074 <PySequence_Fast@plt+0x3e34>
    8154:	mov	x0, x19
    8158:	bl	3d70 <_Py_Dealloc@plt>
    815c:	b	802c <PySequence_Fast@plt+0x3dec>
    8160:	stp	x29, x30, [sp, #-80]!
    8164:	mov	x3, x1
    8168:	mov	x29, sp
    816c:	ldr	x1, [x1, #8]
    8170:	stp	x19, x20, [sp, #16]
    8174:	mov	x19, x0
    8178:	ldr	x0, [x1, #96]
    817c:	cbz	x0, 81e8 <PySequence_Fast@plt+0x3fa8>
    8180:	ldr	x0, [x0, #264]
    8184:	cbz	x0, 81e8 <PySequence_Fast@plt+0x3fa8>
    8188:	str	x21, [sp, #32]
    818c:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    8190:	mov	x0, x3
    8194:	ldr	x1, [x21, #3984]
    8198:	ldr	x1, [x1]
    819c:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    81a0:	mov	x20, x0
    81a4:	cmn	x0, #0x1
    81a8:	b.eq	82b8 <PySequence_Fast@plt+0x4078>  // b.none
    81ac:	ldr	x0, [x19, #40]
    81b0:	tbnz	x20, #63, 82cc <PySequence_Fast@plt+0x408c>
    81b4:	cbz	x0, 82e0 <PySequence_Fast@plt+0x40a0>
    81b8:	ldr	x1, [x0, #8]
    81bc:	cmp	x1, x20
    81c0:	b.le	82e0 <PySequence_Fast@plt+0x40a0>
    81c4:	ldr	x0, [x0, #24]
    81c8:	ldr	x21, [sp, #32]
    81cc:	ldr	x0, [x0, x20, lsl #3]
    81d0:	ldp	x19, x20, [sp, #16]
    81d4:	ldr	x1, [x0]
    81d8:	add	x1, x1, #0x1
    81dc:	str	x1, [x0]
    81e0:	ldp	x29, x30, [sp], #80
    81e4:	ret
    81e8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    81ec:	ldr	x0, [x0, #3952]
    81f0:	cmp	x1, x0
    81f4:	b.ne	8310 <PySequence_Fast@plt+0x40d0>  // b.any
    81f8:	ldr	x0, [x19, #40]
    81fc:	cbz	x0, 82b0 <PySequence_Fast@plt+0x4070>
    8200:	add	x20, sp, #0x38
    8204:	str	x21, [sp, #32]
    8208:	add	x21, sp, #0x40
    820c:	mov	x0, x3
    8210:	mov	x1, x20
    8214:	add	x3, sp, #0x48
    8218:	mov	x2, x21
    821c:	bl	4130 <PySlice_Unpack@plt>
    8220:	tbnz	w0, #31, 829c <PySequence_Fast@plt+0x405c>
    8224:	ldr	x0, [x19, #40]
    8228:	mov	x1, x20
    822c:	ldr	x3, [sp, #72]
    8230:	mov	x2, x21
    8234:	ldr	x0, [x0, #8]
    8238:	bl	3f10 <PySlice_AdjustIndices@plt>
    823c:	mov	x20, x0
    8240:	cmp	x0, #0x0
    8244:	b.le	8300 <PySequence_Fast@plt+0x40c0>
    8248:	bl	3c50 <PyList_New@plt>
    824c:	cbz	x0, 829c <PySequence_Fast@plt+0x405c>
    8250:	ldr	x1, [x19, #40]
    8254:	ldr	x3, [x0, #24]
    8258:	ldr	x6, [x1, #24]
    825c:	ldr	x4, [sp, #56]
    8260:	add	x5, x3, x20, lsl #3
    8264:	nop
    8268:	ldr	x1, [x6, x4, lsl #3]
    826c:	ldr	x2, [x1]
    8270:	add	x2, x2, #0x1
    8274:	str	x2, [x1]
    8278:	str	x1, [x3], #8
    827c:	ldr	x1, [sp, #72]
    8280:	cmp	x5, x3
    8284:	add	x4, x4, x1
    8288:	b.ne	8268 <PySequence_Fast@plt+0x4028>  // b.any
    828c:	ldp	x19, x20, [sp, #16]
    8290:	ldr	x21, [sp, #32]
    8294:	ldp	x29, x30, [sp], #80
    8298:	ret
    829c:	ldr	x21, [sp, #32]
    82a0:	mov	x0, #0x0                   	// #0
    82a4:	ldp	x19, x20, [sp, #16]
    82a8:	ldp	x29, x30, [sp], #80
    82ac:	ret
    82b0:	bl	3c50 <PyList_New@plt>
    82b4:	b	82a4 <PySequence_Fast@plt+0x4064>
    82b8:	bl	3f80 <PyErr_Occurred@plt>
    82bc:	mov	x1, x0
    82c0:	mov	x0, #0x0                   	// #0
    82c4:	cbnz	x1, 828c <PySequence_Fast@plt+0x404c>
    82c8:	ldr	x0, [x19, #40]
    82cc:	cbz	x0, 82e0 <PySequence_Fast@plt+0x40a0>
    82d0:	ldr	x1, [x0, #8]
    82d4:	adds	x20, x20, x1
    82d8:	b.pl	81bc <PySequence_Fast@plt+0x3f7c>  // b.nfrst
    82dc:	nop
    82e0:	ldr	x21, [x21, #3984]
    82e4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    82e8:	add	x1, x1, #0x238
    82ec:	ldr	x0, [x21]
    82f0:	bl	3de0 <PyErr_SetString@plt>
    82f4:	mov	x0, #0x0                   	// #0
    82f8:	ldr	x21, [sp, #32]
    82fc:	b	82a4 <PySequence_Fast@plt+0x4064>
    8300:	mov	x0, #0x0                   	// #0
    8304:	bl	3c50 <PyList_New@plt>
    8308:	ldr	x21, [sp, #32]
    830c:	b	82a4 <PySequence_Fast@plt+0x4064>
    8310:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    8314:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    8318:	add	x1, x1, #0x520
    831c:	ldr	x0, [x0, #3944]
    8320:	ldr	x0, [x0]
    8324:	bl	3de0 <PyErr_SetString@plt>
    8328:	mov	x0, #0x0                   	// #0
    832c:	ldp	x19, x20, [sp, #16]
    8330:	ldp	x29, x30, [sp], #80
    8334:	ret
    8338:	stp	x29, x30, [sp, #-48]!
    833c:	mov	x29, sp
    8340:	stp	x19, x20, [sp, #16]
    8344:	ldr	x19, [x0, #24]
    8348:	tbz	w19, #0, 8384 <PySequence_Fast@plt+0x4144>
    834c:	and	x19, x19, #0xfffffffffffffffe
    8350:	mov	x20, x0
    8354:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    8358:	ldr	x0, [x0, #4064]
    835c:	ldr	x1, [x19, #8]
    8360:	cmp	x1, x0
    8364:	b.eq	839c <PySequence_Fast@plt+0x415c>  // b.none
    8368:	ldr	x0, [x19]
    836c:	add	x0, x0, #0x1
    8370:	str	x0, [x19]
    8374:	mov	x0, x19
    8378:	ldp	x19, x20, [sp, #16]
    837c:	ldp	x29, x30, [sp], #48
    8380:	ret
    8384:	cbnz	x19, 8368 <PySequence_Fast@plt+0x4128>
    8388:	mov	x19, #0x0                   	// #0
    838c:	mov	x0, x19
    8390:	ldp	x19, x20, [sp, #16]
    8394:	ldp	x29, x30, [sp], #48
    8398:	ret
    839c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    83a0:	mov	x1, #0x0                   	// #0
    83a4:	add	x0, x0, #0xb38
    83a8:	stp	x21, x22, [sp, #32]
    83ac:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    83b0:	mov	x21, x0
    83b4:	cbz	x0, 8418 <PySequence_Fast@plt+0x41d8>
    83b8:	mov	x1, x19
    83bc:	bl	3d20 <PyUnicode_Join@plt>
    83c0:	ldr	x1, [x21]
    83c4:	mov	x22, x0
    83c8:	sub	x0, x1, #0x1
    83cc:	str	x0, [x21]
    83d0:	cbz	x0, 83f8 <PySequence_Fast@plt+0x41b8>
    83d4:	cbz	x22, 8418 <PySequence_Fast@plt+0x41d8>
    83d8:	ldr	x0, [x19]
    83dc:	str	x22, [x20, #24]
    83e0:	sub	x0, x0, #0x1
    83e4:	str	x0, [x19]
    83e8:	cbz	x0, 8404 <PySequence_Fast@plt+0x41c4>
    83ec:	mov	x19, x22
    83f0:	ldp	x21, x22, [sp, #32]
    83f4:	b	8368 <PySequence_Fast@plt+0x4128>
    83f8:	mov	x0, x21
    83fc:	bl	3d70 <_Py_Dealloc@plt>
    8400:	b	83d4 <PySequence_Fast@plt+0x4194>
    8404:	mov	x0, x19
    8408:	mov	x19, x22
    840c:	bl	3d70 <_Py_Dealloc@plt>
    8410:	ldp	x21, x22, [sp, #32]
    8414:	b	8368 <PySequence_Fast@plt+0x4128>
    8418:	mov	x19, #0x0                   	// #0
    841c:	ldp	x21, x22, [sp, #32]
    8420:	b	838c <PySequence_Fast@plt+0x414c>
    8424:	nop
    8428:	stp	x29, x30, [sp, #-48]!
    842c:	mov	x29, sp
    8430:	stp	x19, x20, [sp, #16]
    8434:	ldr	x19, [x0, #32]
    8438:	tbz	w19, #0, 8474 <PySequence_Fast@plt+0x4234>
    843c:	and	x19, x19, #0xfffffffffffffffe
    8440:	mov	x20, x0
    8444:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    8448:	ldr	x0, [x0, #4064]
    844c:	ldr	x1, [x19, #8]
    8450:	cmp	x1, x0
    8454:	b.eq	848c <PySequence_Fast@plt+0x424c>  // b.none
    8458:	ldr	x0, [x19]
    845c:	add	x0, x0, #0x1
    8460:	str	x0, [x19]
    8464:	mov	x0, x19
    8468:	ldp	x19, x20, [sp, #16]
    846c:	ldp	x29, x30, [sp], #48
    8470:	ret
    8474:	cbnz	x19, 8458 <PySequence_Fast@plt+0x4218>
    8478:	mov	x19, #0x0                   	// #0
    847c:	mov	x0, x19
    8480:	ldp	x19, x20, [sp, #16]
    8484:	ldp	x29, x30, [sp], #48
    8488:	ret
    848c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    8490:	mov	x1, #0x0                   	// #0
    8494:	add	x0, x0, #0xb38
    8498:	stp	x21, x22, [sp, #32]
    849c:	bl	41b0 <PyUnicode_FromStringAndSize@plt>
    84a0:	mov	x21, x0
    84a4:	cbz	x0, 8508 <PySequence_Fast@plt+0x42c8>
    84a8:	mov	x1, x19
    84ac:	bl	3d20 <PyUnicode_Join@plt>
    84b0:	ldr	x1, [x21]
    84b4:	mov	x22, x0
    84b8:	sub	x0, x1, #0x1
    84bc:	str	x0, [x21]
    84c0:	cbz	x0, 84e8 <PySequence_Fast@plt+0x42a8>
    84c4:	cbz	x22, 8508 <PySequence_Fast@plt+0x42c8>
    84c8:	ldr	x0, [x19]
    84cc:	str	x22, [x20, #32]
    84d0:	sub	x0, x0, #0x1
    84d4:	str	x0, [x19]
    84d8:	cbz	x0, 84f4 <PySequence_Fast@plt+0x42b4>
    84dc:	mov	x19, x22
    84e0:	ldp	x21, x22, [sp, #32]
    84e4:	b	8458 <PySequence_Fast@plt+0x4218>
    84e8:	mov	x0, x21
    84ec:	bl	3d70 <_Py_Dealloc@plt>
    84f0:	b	84c4 <PySequence_Fast@plt+0x4284>
    84f4:	mov	x0, x19
    84f8:	mov	x19, x22
    84fc:	bl	3d70 <_Py_Dealloc@plt>
    8500:	ldp	x21, x22, [sp, #32]
    8504:	b	8458 <PySequence_Fast@plt+0x4218>
    8508:	mov	x19, #0x0                   	// #0
    850c:	ldp	x21, x22, [sp, #32]
    8510:	b	847c <PySequence_Fast@plt+0x423c>
    8514:	nop
    8518:	stp	x29, x30, [sp, #-48]!
    851c:	mov	x29, sp
    8520:	stp	x19, x20, [sp, #16]
    8524:	stp	x21, x22, [sp, #32]
    8528:	mov	x22, x0
    852c:	mov	x21, x1
    8530:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    8534:	add	x0, x0, #0x328
    8538:	bl	3df0 <_PyObject_GC_New@plt>
    853c:	cbz	x0, 85fc <PySequence_Fast@plt+0x43bc>
    8540:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    8544:	mov	x19, x0
    8548:	ldr	x1, [x22]
    854c:	str	xzr, [x0, #40]
    8550:	ldr	x20, [x20, #3976]
    8554:	add	x1, x1, #0x1
    8558:	str	x1, [x22]
    855c:	stp	x22, x20, [x0, #16]
    8560:	ldr	x1, [x20]
    8564:	str	x20, [x0, #32]
    8568:	str	xzr, [x0, #48]
    856c:	add	x1, x1, #0x2
    8570:	str	x1, [x20]
    8574:	bl	3dc0 <PyObject_GC_Track@plt>
    8578:	cmp	x21, x20
    857c:	b.eq	85c8 <PySequence_Fast@plt+0x4388>  // b.none
    8580:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    8584:	ldr	x1, [x21, #8]
    8588:	ldr	x0, [x0, #3992]
    858c:	cmp	x1, x0
    8590:	b.eq	85dc <PySequence_Fast@plt+0x439c>  // b.none
    8594:	mov	x0, #0x40                  	// #64
    8598:	bl	3e00 <PyObject_Malloc@plt>
    859c:	str	x0, [x19, #40]
    85a0:	cbz	x0, 85e8 <PySequence_Fast@plt+0x43a8>
    85a4:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    85a8:	add	x2, x0, #0x20
    85ac:	ldr	x1, [x21]
    85b0:	ldr	q0, [x3, #3120]
    85b4:	add	x1, x1, #0x1
    85b8:	str	x1, [x21]
    85bc:	str	x21, [x0]
    85c0:	str	x2, [x0, #24]
    85c4:	stur	q0, [x0, #8]
    85c8:	mov	x0, x19
    85cc:	ldp	x19, x20, [sp, #16]
    85d0:	ldp	x21, x22, [sp, #32]
    85d4:	ldp	x29, x30, [sp], #48
    85d8:	ret
    85dc:	ldr	x0, [x21, #16]
    85e0:	cbz	x0, 85c8 <PySequence_Fast@plt+0x4388>
    85e4:	b	8594 <PySequence_Fast@plt+0x4354>
    85e8:	bl	3d80 <PyErr_NoMemory@plt>
    85ec:	ldr	x0, [x19]
    85f0:	sub	x0, x0, #0x1
    85f4:	str	x0, [x19]
    85f8:	cbz	x0, 8614 <PySequence_Fast@plt+0x43d4>
    85fc:	mov	x19, #0x0                   	// #0
    8600:	mov	x0, x19
    8604:	ldp	x19, x20, [sp, #16]
    8608:	ldp	x21, x22, [sp, #32]
    860c:	ldp	x29, x30, [sp], #48
    8610:	ret
    8614:	mov	x0, x19
    8618:	mov	x19, #0x0                   	// #0
    861c:	bl	3d70 <_Py_Dealloc@plt>
    8620:	b	85c8 <PySequence_Fast@plt+0x4388>
    8624:	nop
    8628:	stp	x29, x30, [sp, #-32]!
    862c:	cmp	x2, #0x2
    8630:	mov	x29, sp
    8634:	stp	x19, x20, [sp, #16]
    8638:	mov	x19, x1
    863c:	b.eq	865c <PySequence_Fast@plt+0x441c>  // b.none
    8640:	mov	x1, x2
    8644:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    8648:	mov	x3, #0x2                   	// #2
    864c:	add	x0, x0, #0x548
    8650:	mov	x2, x3
    8654:	bl	3f60 <_PyArg_CheckPositional@plt>
    8658:	cbz	w0, 869c <PySequence_Fast@plt+0x445c>
    865c:	ldp	x20, x0, [x19]
    8660:	bl	4150 <PyDict_Copy@plt>
    8664:	mov	x19, x0
    8668:	cbz	x0, 869c <PySequence_Fast@plt+0x445c>
    866c:	mov	x0, x20
    8670:	mov	x1, x19
    8674:	bl	8518 <PySequence_Fast@plt+0x42d8>
    8678:	mov	x20, x0
    867c:	ldr	x1, [x19]
    8680:	sub	x1, x1, #0x1
    8684:	str	x1, [x19]
    8688:	cbz	x1, 86b0 <PySequence_Fast@plt+0x4470>
    868c:	mov	x0, x20
    8690:	ldp	x19, x20, [sp, #16]
    8694:	ldp	x29, x30, [sp], #32
    8698:	ret
    869c:	mov	x20, #0x0                   	// #0
    86a0:	mov	x0, x20
    86a4:	ldp	x19, x20, [sp, #16]
    86a8:	ldp	x29, x30, [sp], #32
    86ac:	ret
    86b0:	mov	x0, x19
    86b4:	bl	3d70 <_Py_Dealloc@plt>
    86b8:	mov	x0, x20
    86bc:	ldp	x19, x20, [sp, #16]
    86c0:	ldp	x29, x30, [sp], #32
    86c4:	ret
    86c8:	stp	x29, x30, [sp, #-64]!
    86cc:	cmp	x2, #0x2
    86d0:	mov	x29, sp
    86d4:	stp	x19, x20, [sp, #16]
    86d8:	mov	x20, x0
    86dc:	mov	x19, x1
    86e0:	stp	x21, x22, [sp, #32]
    86e4:	b.eq	8704 <PySequence_Fast@plt+0x44c4>  // b.none
    86e8:	mov	x1, x2
    86ec:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    86f0:	mov	x3, #0x2                   	// #2
    86f4:	add	x0, x0, #0x558
    86f8:	mov	x2, x3
    86fc:	bl	3f60 <_PyArg_CheckPositional@plt>
    8700:	cbz	w0, 8774 <PySequence_Fast@plt+0x4534>
    8704:	ldr	x0, [x20, #40]
    8708:	ldr	x22, [x19]
    870c:	str	x23, [sp, #48]
    8710:	ldr	x23, [x19, #8]
    8714:	cbz	x0, 878c <PySequence_Fast@plt+0x454c>
    8718:	adrp	x19, 21000 <PyInit__elementtree@@Base+0x13168>
    871c:	ldr	x21, [x0]
    8720:	ldr	x0, [x19, #3976]
    8724:	cmp	x21, x0
    8728:	b.eq	87cc <PySequence_Fast@plt+0x458c>  // b.none
    872c:	cbz	x21, 8770 <PySequence_Fast@plt+0x4530>
    8730:	mov	x2, x23
    8734:	mov	x1, x22
    8738:	mov	x0, x21
    873c:	bl	4140 <PyDict_SetItem@plt>
    8740:	tbnz	w0, #31, 8770 <PySequence_Fast@plt+0x4530>
    8744:	ldr	x1, [x19, #3976]
    8748:	ldr	x23, [sp, #48]
    874c:	mov	x21, x1
    8750:	ldr	x0, [x1]
    8754:	add	x0, x0, #0x1
    8758:	str	x0, [x1]
    875c:	mov	x0, x21
    8760:	ldp	x19, x20, [sp, #16]
    8764:	ldp	x21, x22, [sp, #32]
    8768:	ldp	x29, x30, [sp], #64
    876c:	ret
    8770:	ldr	x23, [sp, #48]
    8774:	mov	x21, #0x0                   	// #0
    8778:	mov	x0, x21
    877c:	ldp	x19, x20, [sp, #16]
    8780:	ldp	x21, x22, [sp, #32]
    8784:	ldp	x29, x30, [sp], #64
    8788:	ret
    878c:	mov	x0, #0x40                  	// #64
    8790:	bl	3e00 <PyObject_Malloc@plt>
    8794:	str	x0, [x20, #40]
    8798:	mov	x21, x0
    879c:	cbz	x0, 8800 <PySequence_Fast@plt+0x45c0>
    87a0:	adrp	x19, 21000 <PyInit__elementtree@@Base+0x13168>
    87a4:	add	x0, x0, #0x20
    87a8:	str	x0, [x21, #24]
    87ac:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    87b0:	ldr	x0, [x19, #3976]
    87b4:	ldr	q0, [x1, #3120]
    87b8:	ldr	x1, [x0]
    87bc:	stur	q0, [x21, #8]
    87c0:	add	x1, x1, #0x1
    87c4:	str	x1, [x0]
    87c8:	str	x0, [x21]
    87cc:	bl	4080 <PyDict_New@plt>
    87d0:	mov	x21, x0
    87d4:	cbz	x0, 8770 <PySequence_Fast@plt+0x4530>
    87d8:	ldr	x0, [x19, #3976]
    87dc:	ldr	x1, [x0]
    87e0:	sub	x1, x1, #0x1
    87e4:	str	x1, [x0]
    87e8:	cbz	x1, 87f8 <PySequence_Fast@plt+0x45b8>
    87ec:	ldr	x0, [x20, #40]
    87f0:	str	x21, [x0]
    87f4:	b	8730 <PySequence_Fast@plt+0x44f0>
    87f8:	bl	3d70 <_Py_Dealloc@plt>
    87fc:	b	87ec <PySequence_Fast@plt+0x45ac>
    8800:	bl	3d80 <PyErr_NoMemory@plt>
    8804:	ldr	x23, [sp, #48]
    8808:	b	875c <PySequence_Fast@plt+0x451c>
    880c:	nop
    8810:	stp	x29, x30, [sp, #-48]!
    8814:	mov	x29, sp
    8818:	stp	x19, x20, [sp, #16]
    881c:	mov	x20, x0
    8820:	ldr	x0, [x0, #40]
    8824:	str	x21, [sp, #32]
    8828:	cbz	x0, 887c <PySequence_Fast@plt+0x463c>
    882c:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    8830:	ldr	x19, [x0]
    8834:	ldr	x0, [x21, #3976]
    8838:	cmp	x19, x0
    883c:	b.eq	88bc <PySequence_Fast@plt+0x467c>  // b.none
    8840:	cbz	x19, 8864 <PySequence_Fast@plt+0x4624>
    8844:	ldr	x0, [x19]
    8848:	add	x0, x0, #0x1
    884c:	str	x0, [x19]
    8850:	mov	x0, x19
    8854:	ldp	x19, x20, [sp, #16]
    8858:	ldr	x21, [sp, #32]
    885c:	ldp	x29, x30, [sp], #48
    8860:	ret
    8864:	mov	x19, #0x0                   	// #0
    8868:	mov	x0, x19
    886c:	ldp	x19, x20, [sp, #16]
    8870:	ldr	x21, [sp, #32]
    8874:	ldp	x29, x30, [sp], #48
    8878:	ret
    887c:	mov	x0, #0x40                  	// #64
    8880:	bl	3e00 <PyObject_Malloc@plt>
    8884:	str	x0, [x20, #40]
    8888:	mov	x19, x0
    888c:	cbz	x0, 88f0 <PySequence_Fast@plt+0x46b0>
    8890:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    8894:	add	x0, x0, #0x20
    8898:	str	x0, [x19, #24]
    889c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    88a0:	ldr	x0, [x21, #3976]
    88a4:	ldr	q0, [x1, #3120]
    88a8:	ldr	x1, [x0]
    88ac:	stur	q0, [x19, #8]
    88b0:	add	x1, x1, #0x1
    88b4:	str	x1, [x0]
    88b8:	str	x0, [x19]
    88bc:	bl	4080 <PyDict_New@plt>
    88c0:	mov	x19, x0
    88c4:	cbz	x0, 8864 <PySequence_Fast@plt+0x4624>
    88c8:	ldr	x0, [x21, #3976]
    88cc:	ldr	x1, [x0]
    88d0:	sub	x1, x1, #0x1
    88d4:	str	x1, [x0]
    88d8:	cbz	x1, 88e8 <PySequence_Fast@plt+0x46a8>
    88dc:	ldr	x0, [x20, #40]
    88e0:	str	x19, [x0]
    88e4:	b	8844 <PySequence_Fast@plt+0x4604>
    88e8:	bl	3d70 <_Py_Dealloc@plt>
    88ec:	b	88dc <PySequence_Fast@plt+0x469c>
    88f0:	bl	3d80 <PyErr_NoMemory@plt>
    88f4:	b	8850 <PySequence_Fast@plt+0x4610>
    88f8:	stp	x29, x30, [sp, #-32]!
    88fc:	mov	x29, sp
    8900:	stp	x19, x20, [sp, #16]
    8904:	cbz	x1, 89ac <PySequence_Fast@plt+0x476c>
    8908:	mov	x19, x1
    890c:	mov	x20, x0
    8910:	ldr	x1, [x0, #40]
    8914:	cbz	x1, 8964 <PySequence_Fast@plt+0x4724>
    8918:	ldr	x0, [x1]
    891c:	mov	w20, #0x0                   	// #0
    8920:	ldr	x2, [x19]
    8924:	add	x2, x2, #0x1
    8928:	str	x2, [x19]
    892c:	str	x19, [x1]
    8930:	ldr	x1, [x0]
    8934:	sub	x1, x1, #0x1
    8938:	str	x1, [x0]
    893c:	cbz	x1, 8950 <PySequence_Fast@plt+0x4710>
    8940:	mov	w0, w20
    8944:	ldp	x19, x20, [sp, #16]
    8948:	ldp	x29, x30, [sp], #32
    894c:	ret
    8950:	bl	3d70 <_Py_Dealloc@plt>
    8954:	mov	w0, w20
    8958:	ldp	x19, x20, [sp, #16]
    895c:	ldp	x29, x30, [sp], #32
    8960:	ret
    8964:	mov	x0, #0x40                  	// #64
    8968:	bl	3e00 <PyObject_Malloc@plt>
    896c:	str	x0, [x20, #40]
    8970:	mov	x1, x0
    8974:	cbz	x0, 89cc <PySequence_Fast@plt+0x478c>
    8978:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    897c:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    8980:	add	x0, x0, #0x20
    8984:	str	x0, [x1, #24]
    8988:	ldr	x2, [x2, #3976]
    898c:	ldr	q0, [x3, #3120]
    8990:	mov	x0, x2
    8994:	ldr	x3, [x2]
    8998:	stur	q0, [x1, #8]
    899c:	add	x3, x3, #0x1
    89a0:	str	x3, [x2]
    89a4:	str	x2, [x1]
    89a8:	b	891c <PySequence_Fast@plt+0x46dc>
    89ac:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    89b0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    89b4:	mov	w20, #0xffffffff            	// #-1
    89b8:	add	x1, x1, #0x500
    89bc:	ldr	x0, [x0, #4008]
    89c0:	ldr	x0, [x0]
    89c4:	bl	3de0 <PyErr_SetString@plt>
    89c8:	b	8940 <PySequence_Fast@plt+0x4700>
    89cc:	mov	w20, #0xffffffff            	// #-1
    89d0:	bl	3d80 <PyErr_NoMemory@plt>
    89d4:	b	8940 <PySequence_Fast@plt+0x4700>
    89d8:	stp	x29, x30, [sp, #-48]!
    89dc:	mov	x29, sp
    89e0:	str	x19, [sp, #16]
    89e4:	mov	x19, x0
    89e8:	mov	x0, #0x2                   	// #2
    89ec:	bl	4210 <PyTuple_Pack@plt>
    89f0:	str	x0, [sp, #40]
    89f4:	cbz	x0, 8aa4 <PySequence_Fast@plt+0x4864>
    89f8:	ldr	x19, [x19]
    89fc:	ldr	x0, [x19, #8]
    8a00:	ldr	x1, [x0, #168]
    8a04:	ldr	x0, [x0, #56]
    8a08:	tbz	w1, #11, 8a88 <PySequence_Fast@plt+0x4848>
    8a0c:	ldr	x4, [x19, x0]
    8a10:	cbz	x4, 8a88 <PySequence_Fast@plt+0x4848>
    8a14:	mov	x3, #0x0                   	// #0
    8a18:	add	x1, sp, #0x28
    8a1c:	mov	x0, x19
    8a20:	mov	x2, #0x1                   	// #1
    8a24:	blr	x4
    8a28:	mov	x1, x0
    8a2c:	mov	x2, #0x0                   	// #0
    8a30:	mov	x0, x19
    8a34:	bl	4020 <_Py_CheckFunctionResult@plt>
    8a38:	mov	x19, x0
    8a3c:	ldr	x0, [sp, #40]
    8a40:	ldr	x1, [x0]
    8a44:	sub	x1, x1, #0x1
    8a48:	str	x1, [x0]
    8a4c:	cbz	x1, 8a74 <PySequence_Fast@plt+0x4834>
    8a50:	cbz	x19, 8aa4 <PySequence_Fast@plt+0x4864>
    8a54:	ldr	x0, [x19]
    8a58:	sub	x0, x0, #0x1
    8a5c:	str	x0, [x19]
    8a60:	cbz	x0, 8a7c <PySequence_Fast@plt+0x483c>
    8a64:	mov	w0, #0x0                   	// #0
    8a68:	ldr	x19, [sp, #16]
    8a6c:	ldp	x29, x30, [sp], #48
    8a70:	ret
    8a74:	bl	3d70 <_Py_Dealloc@plt>
    8a78:	b	8a50 <PySequence_Fast@plt+0x4810>
    8a7c:	mov	x0, x19
    8a80:	bl	3d70 <_Py_Dealloc@plt>
    8a84:	b	8a64 <PySequence_Fast@plt+0x4824>
    8a88:	mov	x0, x19
    8a8c:	add	x1, sp, #0x28
    8a90:	mov	x3, #0x0                   	// #0
    8a94:	mov	x2, #0x1                   	// #1
    8a98:	bl	41d0 <_PyObject_MakeTpCall@plt>
    8a9c:	mov	x19, x0
    8aa0:	b	8a3c <PySequence_Fast@plt+0x47fc>
    8aa4:	mov	w0, #0xffffffff            	// #-1
    8aa8:	b	8a68 <PySequence_Fast@plt+0x4828>
    8aac:	nop
    8ab0:	stp	x29, x30, [sp, #-32]!
    8ab4:	mov	x29, sp
    8ab8:	stp	x19, x20, [sp, #16]
    8abc:	mov	x19, x0
    8ac0:	ldr	x0, [x0, #48]
    8ac4:	cbz	x0, 8aec <PySequence_Fast@plt+0x48ac>
    8ac8:	ldr	x0, [x19, #40]
    8acc:	add	x1, x19, #0x30
    8ad0:	cbz	x0, 8bc4 <PySequence_Fast@plt+0x4984>
    8ad4:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    8ad8:	add	x3, x3, #0x9c0
    8adc:	add	x3, x3, #0x2f8
    8ae0:	add	x2, x0, #0x20
    8ae4:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    8ae8:	tbnz	w0, #31, 8ba8 <PySequence_Fast@plt+0x4968>
    8aec:	ldr	x0, [x19, #64]
    8af0:	cbz	x0, 8b90 <PySequence_Fast@plt+0x4950>
    8af4:	ldp	x1, x20, [x19, #24]
    8af8:	ldr	x0, [x19, #40]
    8afc:	ldr	x2, [x1]
    8b00:	str	x1, [x19, #32]
    8b04:	add	x2, x2, #0x1
    8b08:	str	x2, [x1]
    8b0c:	str	x1, [x19, #40]
    8b10:	cbz	x0, 8b24 <PySequence_Fast@plt+0x48e4>
    8b14:	ldr	x1, [x0]
    8b18:	sub	x1, x1, #0x1
    8b1c:	str	x1, [x0]
    8b20:	cbz	x1, 8be0 <PySequence_Fast@plt+0x49a0>
    8b24:	ldp	x1, x0, [x19, #56]
    8b28:	ldr	x1, [x1, #24]
    8b2c:	sub	x0, x0, #0x1
    8b30:	str	x0, [x19, #64]
    8b34:	ldr	x0, [x1, x0, lsl #3]
    8b38:	ldr	x1, [x0]
    8b3c:	str	x0, [x19, #24]
    8b40:	add	x1, x1, #0x1
    8b44:	str	x1, [x0]
    8b48:	ldr	x0, [x20]
    8b4c:	sub	x0, x0, #0x1
    8b50:	str	x0, [x20]
    8b54:	cbz	x0, 8bb8 <PySequence_Fast@plt+0x4978>
    8b58:	ldr	x1, [x19, #112]
    8b5c:	ldr	x0, [x19, #32]
    8b60:	cbz	x1, 8b78 <PySequence_Fast@plt+0x4938>
    8b64:	mov	x2, x0
    8b68:	add	x0, x19, #0x60
    8b6c:	bl	89d8 <PySequence_Fast@plt+0x4798>
    8b70:	tbnz	w0, #31, 8ba8 <PySequence_Fast@plt+0x4968>
    8b74:	ldr	x0, [x19, #32]
    8b78:	ldr	x1, [x0]
    8b7c:	ldp	x19, x20, [sp, #16]
    8b80:	add	x1, x1, #0x1
    8b84:	str	x1, [x0]
    8b88:	ldp	x29, x30, [sp], #32
    8b8c:	ret
    8b90:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    8b94:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    8b98:	add	x1, x1, #0x560
    8b9c:	ldr	x0, [x0, #3984]
    8ba0:	ldr	x0, [x0]
    8ba4:	bl	3de0 <PyErr_SetString@plt>
    8ba8:	mov	x0, #0x0                   	// #0
    8bac:	ldp	x19, x20, [sp, #16]
    8bb0:	ldp	x29, x30, [sp], #32
    8bb4:	ret
    8bb8:	mov	x0, x20
    8bbc:	bl	3d70 <_Py_Dealloc@plt>
    8bc0:	b	8b58 <PySequence_Fast@plt+0x4918>
    8bc4:	ldr	x0, [x19, #32]
    8bc8:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    8bcc:	add	x3, x3, #0x9c0
    8bd0:	add	x3, x3, #0x2e0
    8bd4:	add	x2, x0, #0x18
    8bd8:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    8bdc:	b	8ae8 <PySequence_Fast@plt+0x48a8>
    8be0:	bl	3d70 <_Py_Dealloc@plt>
    8be4:	b	8b24 <PySequence_Fast@plt+0x48e4>
    8be8:	stp	x29, x30, [sp, #-48]!
    8bec:	mov	x29, sp
    8bf0:	str	x21, [sp, #32]
    8bf4:	ldr	x21, [x0, #40]
    8bf8:	stp	x19, x20, [sp, #16]
    8bfc:	mov	x19, x0
    8c00:	cbz	x21, 8c6c <PySequence_Fast@plt+0x4a2c>
    8c04:	ldr	x0, [x21]
    8c08:	ldr	x1, [x0]
    8c0c:	str	xzr, [x19, #40]
    8c10:	sub	x1, x1, #0x1
    8c14:	str	x1, [x0]
    8c18:	cbz	x1, 8d3c <PySequence_Fast@plt+0x4afc>
    8c1c:	ldr	x2, [x21, #8]
    8c20:	ldr	x3, [x21, #24]
    8c24:	cmp	x2, #0x0
    8c28:	b.le	8c50 <PySequence_Fast@plt+0x4a10>
    8c2c:	mov	x20, #0x0                   	// #0
    8c30:	ldr	x0, [x3, x20, lsl #3]
    8c34:	ldr	x1, [x0]
    8c38:	sub	x1, x1, #0x1
    8c3c:	str	x1, [x0]
    8c40:	cbz	x1, 8ce8 <PySequence_Fast@plt+0x4aa8>
    8c44:	add	x20, x20, #0x1
    8c48:	cmp	x20, x2
    8c4c:	b.lt	8c30 <PySequence_Fast@plt+0x49f0>  // b.tstop
    8c50:	add	x0, x21, #0x20
    8c54:	cmp	x3, x0
    8c58:	b.eq	8c64 <PySequence_Fast@plt+0x4a24>  // b.none
    8c5c:	mov	x0, x3
    8c60:	bl	3e60 <PyObject_Free@plt>
    8c64:	mov	x0, x21
    8c68:	bl	3e60 <PyObject_Free@plt>
    8c6c:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    8c70:	ldr	x0, [x19, #24]
    8c74:	ldr	x1, [x20, #3976]
    8c78:	and	x0, x0, #0xfffffffffffffffe
    8c7c:	str	x1, [x19, #24]
    8c80:	ldr	x2, [x1]
    8c84:	add	x2, x2, #0x1
    8c88:	str	x2, [x1]
    8c8c:	ldr	x1, [x0]
    8c90:	sub	x1, x1, #0x1
    8c94:	str	x1, [x0]
    8c98:	cbz	x1, 8d34 <PySequence_Fast@plt+0x4af4>
    8c9c:	ldr	x1, [x20, #3976]
    8ca0:	ldr	x0, [x19, #32]
    8ca4:	str	x1, [x19, #32]
    8ca8:	ldr	x2, [x1]
    8cac:	and	x0, x0, #0xfffffffffffffffe
    8cb0:	add	x2, x2, #0x1
    8cb4:	str	x2, [x1]
    8cb8:	ldr	x1, [x0]
    8cbc:	sub	x1, x1, #0x1
    8cc0:	str	x1, [x0]
    8cc4:	cbz	x1, 8d10 <PySequence_Fast@plt+0x4ad0>
    8cc8:	ldr	x0, [x20, #3976]
    8ccc:	ldp	x19, x20, [sp, #16]
    8cd0:	ldr	x1, [x0]
    8cd4:	ldr	x21, [sp, #32]
    8cd8:	add	x1, x1, #0x1
    8cdc:	str	x1, [x0]
    8ce0:	ldp	x29, x30, [sp], #48
    8ce4:	ret
    8ce8:	bl	3d70 <_Py_Dealloc@plt>
    8cec:	add	x20, x20, #0x1
    8cf0:	ldr	x2, [x21, #8]
    8cf4:	ldr	x3, [x21, #24]
    8cf8:	cmp	x20, x2
    8cfc:	b.lt	8c30 <PySequence_Fast@plt+0x49f0>  // b.tstop
    8d00:	add	x0, x21, #0x20
    8d04:	cmp	x3, x0
    8d08:	b.ne	8c5c <PySequence_Fast@plt+0x4a1c>  // b.any
    8d0c:	b	8c64 <PySequence_Fast@plt+0x4a24>
    8d10:	bl	3d70 <_Py_Dealloc@plt>
    8d14:	ldr	x0, [x20, #3976]
    8d18:	ldp	x19, x20, [sp, #16]
    8d1c:	ldr	x1, [x0]
    8d20:	ldr	x21, [sp, #32]
    8d24:	add	x1, x1, #0x1
    8d28:	str	x1, [x0]
    8d2c:	ldp	x29, x30, [sp], #48
    8d30:	ret
    8d34:	bl	3d70 <_Py_Dealloc@plt>
    8d38:	b	8c9c <PySequence_Fast@plt+0x4a5c>
    8d3c:	bl	3d70 <_Py_Dealloc@plt>
    8d40:	b	8c1c <PySequence_Fast@plt+0x49dc>
    8d44:	nop
    8d48:	stp	x29, x30, [sp, #-64]!
    8d4c:	mov	x29, sp
    8d50:	stp	x21, x22, [sp, #32]
    8d54:	adrp	x22, 21000 <PyInit__elementtree@@Base+0x13168>
    8d58:	mov	x21, x2
    8d5c:	ldr	x3, [x22, #3992]
    8d60:	add	x4, sp, #0x38
    8d64:	add	x2, sp, #0x30
    8d68:	stp	x19, x20, [sp, #16]
    8d6c:	mov	x20, x0
    8d70:	mov	x0, x1
    8d74:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    8d78:	add	x1, x1, #0x578
    8d7c:	str	xzr, [sp, #56]
    8d80:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    8d84:	cbz	w0, 8ef0 <PySequence_Fast@plt+0x4cb0>
    8d88:	ldr	x0, [sp, #56]
    8d8c:	cbz	x0, 8ed4 <PySequence_Fast@plt+0x4c94>
    8d90:	bl	4150 <PyDict_Copy@plt>
    8d94:	str	x0, [sp, #56]
    8d98:	mov	x19, x0
    8d9c:	cbz	x0, 8ef0 <PySequence_Fast@plt+0x4cb0>
    8da0:	cbz	x21, 8db8 <PySequence_Fast@plt+0x4b78>
    8da4:	mov	x1, x21
    8da8:	bl	3f20 <PyDict_Update@plt>
    8dac:	tbnz	w0, #31, 8f1c <PySequence_Fast@plt+0x4cdc>
    8db0:	ldr	x19, [sp, #56]
    8db4:	cbz	x19, 8e14 <PySequence_Fast@plt+0x4bd4>
    8db8:	ldr	x22, [x22, #3992]
    8dbc:	ldr	x0, [x19, #8]
    8dc0:	cmp	x0, x22
    8dc4:	b.eq	8ec8 <PySequence_Fast@plt+0x4c88>  // b.none
    8dc8:	mov	x0, #0x40                  	// #64
    8dcc:	bl	3e00 <PyObject_Malloc@plt>
    8dd0:	str	x0, [x20, #40]
    8dd4:	cbz	x0, 8f18 <PySequence_Fast@plt+0x4cd8>
    8dd8:	ldr	x1, [x19]
    8ddc:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    8de0:	add	x2, x0, #0x20
    8de4:	ldr	q0, [x3, #3120]
    8de8:	add	x1, x1, #0x1
    8dec:	str	x1, [x19]
    8df0:	str	x19, [x0]
    8df4:	ldr	x19, [sp, #56]
    8df8:	str	x2, [x0, #24]
    8dfc:	stur	q0, [x0, #8]
    8e00:	cbz	x19, 8e14 <PySequence_Fast@plt+0x4bd4>
    8e04:	ldr	x0, [x19]
    8e08:	sub	x0, x0, #0x1
    8e0c:	str	x0, [x19]
    8e10:	cbz	x0, 8ebc <PySequence_Fast@plt+0x4c7c>
    8e14:	ldr	x1, [sp, #48]
    8e18:	ldr	x0, [x20, #16]
    8e1c:	ldr	x2, [x1]
    8e20:	add	x2, x2, #0x1
    8e24:	str	x2, [x1]
    8e28:	str	x1, [x20, #16]
    8e2c:	cbz	x0, 8e40 <PySequence_Fast@plt+0x4c00>
    8e30:	ldr	x1, [x0]
    8e34:	sub	x1, x1, #0x1
    8e38:	str	x1, [x0]
    8e3c:	cbz	x1, 8eb4 <PySequence_Fast@plt+0x4c74>
    8e40:	adrp	x19, 21000 <PyInit__elementtree@@Base+0x13168>
    8e44:	ldr	x0, [x20, #24]
    8e48:	ldr	x1, [x19, #3976]
    8e4c:	and	x0, x0, #0xfffffffffffffffe
    8e50:	str	x1, [x20, #24]
    8e54:	ldr	x2, [x1]
    8e58:	add	x2, x2, #0x1
    8e5c:	str	x2, [x1]
    8e60:	ldr	x1, [x0]
    8e64:	sub	x1, x1, #0x1
    8e68:	str	x1, [x0]
    8e6c:	cbz	x1, 8f10 <PySequence_Fast@plt+0x4cd0>
    8e70:	ldr	x1, [x19, #3976]
    8e74:	mov	w19, #0x0                   	// #0
    8e78:	ldr	x0, [x20, #32]
    8e7c:	str	x1, [x20, #32]
    8e80:	ldr	x2, [x1]
    8e84:	and	x0, x0, #0xfffffffffffffffe
    8e88:	add	x2, x2, #0x1
    8e8c:	str	x2, [x1]
    8e90:	ldr	x1, [x0]
    8e94:	sub	x1, x1, #0x1
    8e98:	str	x1, [x0]
    8e9c:	cbz	x1, 8ef8 <PySequence_Fast@plt+0x4cb8>
    8ea0:	mov	w0, w19
    8ea4:	ldp	x19, x20, [sp, #16]
    8ea8:	ldp	x21, x22, [sp, #32]
    8eac:	ldp	x29, x30, [sp], #64
    8eb0:	ret
    8eb4:	bl	3d70 <_Py_Dealloc@plt>
    8eb8:	b	8e40 <PySequence_Fast@plt+0x4c00>
    8ebc:	mov	x0, x19
    8ec0:	bl	3d70 <_Py_Dealloc@plt>
    8ec4:	b	8e14 <PySequence_Fast@plt+0x4bd4>
    8ec8:	ldr	x0, [x19, #16]
    8ecc:	cbz	x0, 8e04 <PySequence_Fast@plt+0x4bc4>
    8ed0:	b	8dc8 <PySequence_Fast@plt+0x4b88>
    8ed4:	cbz	x21, 8e14 <PySequence_Fast@plt+0x4bd4>
    8ed8:	mov	x0, x21
    8edc:	bl	53c0 <PySequence_Fast@plt+0x1180>
    8ee0:	str	x0, [sp, #56]
    8ee4:	mov	x19, x0
    8ee8:	cbnz	x0, 8db8 <PySequence_Fast@plt+0x4b78>
    8eec:	nop
    8ef0:	mov	w19, #0xffffffff            	// #-1
    8ef4:	b	8ea0 <PySequence_Fast@plt+0x4c60>
    8ef8:	bl	3d70 <_Py_Dealloc@plt>
    8efc:	mov	w0, w19
    8f00:	ldp	x19, x20, [sp, #16]
    8f04:	ldp	x21, x22, [sp, #32]
    8f08:	ldp	x29, x30, [sp], #64
    8f0c:	ret
    8f10:	bl	3d70 <_Py_Dealloc@plt>
    8f14:	b	8e70 <PySequence_Fast@plt+0x4c30>
    8f18:	bl	3d80 <PyErr_NoMemory@plt>
    8f1c:	ldr	x0, [sp, #56]
    8f20:	ldr	x1, [x0]
    8f24:	sub	x1, x1, #0x1
    8f28:	str	x1, [x0]
    8f2c:	cbnz	x1, 8ef0 <PySequence_Fast@plt+0x4cb0>
    8f30:	mov	w19, #0xffffffff            	// #-1
    8f34:	bl	3d70 <_Py_Dealloc@plt>
    8f38:	b	8ea0 <PySequence_Fast@plt+0x4c60>
    8f3c:	nop
    8f40:	stp	x29, x30, [sp, #-32]!
    8f44:	mov	x29, sp
    8f48:	str	x19, [sp, #16]
    8f4c:	bl	3e10 <PyModule_GetState@plt>
    8f50:	mov	x19, x0
    8f54:	ldr	x0, [x0]
    8f58:	cbz	x0, 8f70 <PySequence_Fast@plt+0x4d30>
    8f5c:	ldr	x1, [x0]
    8f60:	str	xzr, [x19]
    8f64:	sub	x1, x1, #0x1
    8f68:	str	x1, [x0]
    8f6c:	cbz	x1, 9010 <PySequence_Fast@plt+0x4dd0>
    8f70:	ldr	x0, [x19, #8]
    8f74:	cbz	x0, 8f8c <PySequence_Fast@plt+0x4d4c>
    8f78:	ldr	x1, [x0]
    8f7c:	str	xzr, [x19, #8]
    8f80:	sub	x1, x1, #0x1
    8f84:	str	x1, [x0]
    8f88:	cbz	x1, 9008 <PySequence_Fast@plt+0x4dc8>
    8f8c:	ldr	x0, [x19, #16]
    8f90:	cbz	x0, 8fa8 <PySequence_Fast@plt+0x4d68>
    8f94:	ldr	x1, [x0]
    8f98:	str	xzr, [x19, #16]
    8f9c:	sub	x1, x1, #0x1
    8fa0:	str	x1, [x0]
    8fa4:	cbz	x1, 9000 <PySequence_Fast@plt+0x4dc0>
    8fa8:	ldr	x0, [x19, #24]
    8fac:	cbz	x0, 8fc4 <PySequence_Fast@plt+0x4d84>
    8fb0:	ldr	x1, [x0]
    8fb4:	str	xzr, [x19, #24]
    8fb8:	sub	x1, x1, #0x1
    8fbc:	str	x1, [x0]
    8fc0:	cbz	x1, 8ff8 <PySequence_Fast@plt+0x4db8>
    8fc4:	ldr	x0, [x19, #32]
    8fc8:	cbz	x0, 8fe0 <PySequence_Fast@plt+0x4da0>
    8fcc:	ldr	x1, [x0]
    8fd0:	str	xzr, [x19, #32]
    8fd4:	sub	x1, x1, #0x1
    8fd8:	str	x1, [x0]
    8fdc:	cbz	x1, 8fec <PySequence_Fast@plt+0x4dac>
    8fe0:	ldr	x19, [sp, #16]
    8fe4:	ldp	x29, x30, [sp], #32
    8fe8:	ret
    8fec:	ldr	x19, [sp, #16]
    8ff0:	ldp	x29, x30, [sp], #32
    8ff4:	b	3d70 <_Py_Dealloc@plt>
    8ff8:	bl	3d70 <_Py_Dealloc@plt>
    8ffc:	b	8fc4 <PySequence_Fast@plt+0x4d84>
    9000:	bl	3d70 <_Py_Dealloc@plt>
    9004:	b	8fa8 <PySequence_Fast@plt+0x4d68>
    9008:	bl	3d70 <_Py_Dealloc@plt>
    900c:	b	8f8c <PySequence_Fast@plt+0x4d4c>
    9010:	bl	3d70 <_Py_Dealloc@plt>
    9014:	b	8f70 <PySequence_Fast@plt+0x4d30>
    9018:	sub	sp, sp, #0x70
    901c:	mov	x3, x1
    9020:	stp	x29, x30, [sp, #16]
    9024:	add	x29, sp, #0x10
    9028:	stp	x19, x20, [sp, #32]
    902c:	mov	x19, x0
    9030:	stp	x21, x22, [sp, #48]
    9034:	ldr	x21, [x1, #16]
    9038:	cbz	x2, 9084 <PySequence_Fast@plt+0x4e44>
    903c:	ldr	x0, [x2, #16]
    9040:	add	x1, sp, #0x60
    9044:	str	x1, [sp]
    9048:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    904c:	add	x4, x4, #0x9c0
    9050:	add	x20, x21, x0
    9054:	add	x4, x4, #0x310
    9058:	add	x0, x3, #0x18
    905c:	mov	x1, x21
    9060:	mov	w7, #0x0                   	// #0
    9064:	mov	w6, #0x0                   	// #0
    9068:	mov	w5, #0x0                   	// #0
    906c:	mov	x3, #0x0                   	// #0
    9070:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    9074:	cbz	x0, 9128 <PySequence_Fast@plt+0x4ee8>
    9078:	cbz	x20, 9130 <PySequence_Fast@plt+0x4ef0>
    907c:	mov	x21, x20
    9080:	b	90bc <PySequence_Fast@plt+0x4e7c>
    9084:	cbz	x21, 9130 <PySequence_Fast@plt+0x4ef0>
    9088:	add	x0, sp, #0x60
    908c:	str	x0, [sp]
    9090:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    9094:	add	x4, x4, #0x9c0
    9098:	add	x0, x3, #0x18
    909c:	add	x4, x4, #0x310
    90a0:	mov	x1, x21
    90a4:	mov	w7, #0x0                   	// #0
    90a8:	mov	w6, #0x0                   	// #0
    90ac:	mov	w5, #0x0                   	// #0
    90b0:	mov	x3, #0x0                   	// #0
    90b4:	bl	3dd0 <_PyArg_UnpackKeywords@plt>
    90b8:	cbz	x0, 9128 <PySequence_Fast@plt+0x4ee8>
    90bc:	ldr	x20, [x0]
    90c0:	cbz	x20, 90cc <PySequence_Fast@plt+0x4e8c>
    90c4:	cmp	x21, #0x1
    90c8:	b.eq	93b0 <PySequence_Fast@plt+0x5170>  // b.none
    90cc:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    90d0:	ldr	x0, [x0, #8]
    90d4:	ldr	x1, [x1, #3976]
    90d8:	cmp	x0, x1
    90dc:	b.eq	93b0 <PySequence_Fast@plt+0x5170>  // b.none
    90e0:	ldr	x1, [x0, #8]
    90e4:	ldr	x1, [x1, #168]
    90e8:	tbz	w1, #28, 963c <PySequence_Fast@plt+0x53fc>
    90ec:	add	x1, sp, #0x58
    90f0:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    90f4:	mov	x22, x0
    90f8:	cbz	x0, 9128 <PySequence_Fast@plt+0x4ee8>
    90fc:	bl	3c70 <strlen@plt>
    9100:	ldr	x1, [sp, #88]
    9104:	cmp	x0, x1
    9108:	b.eq	9138 <PySequence_Fast@plt+0x4ef8>  // b.none
    910c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9110:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9114:	add	x1, x1, #0x588
    9118:	ldr	x0, [x0, #3928]
    911c:	ldr	x0, [x0]
    9120:	bl	3de0 <PyErr_SetString@plt>
    9124:	nop
    9128:	mov	w0, #0xffffffff            	// #-1
    912c:	b	9390 <PySequence_Fast@plt+0x5150>
    9130:	mov	x22, #0x0                   	// #0
    9134:	mov	x20, #0x0                   	// #0
    9138:	bl	4080 <PyDict_New@plt>
    913c:	str	x0, [x19, #32]
    9140:	cbz	x0, 9128 <PySequence_Fast@plt+0x4ee8>
    9144:	bl	4080 <PyDict_New@plt>
    9148:	str	x0, [x19, #40]
    914c:	cbz	x0, 9614 <PySequence_Fast@plt+0x53d4>
    9150:	adrp	x21, 23000 <PyInit__elementtree@@Base+0x15168>
    9154:	mov	x0, x22
    9158:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    915c:	add	x2, x2, #0x5d8
    9160:	ldr	x3, [x21, #1088]
    9164:	ldr	x3, [x3, #64]
    9168:	str	x23, [sp, #64]
    916c:	adrp	x23, 22000 <PyInit__elementtree@@Base+0x14168>
    9170:	add	x1, x23, #0x328
    9174:	add	x1, x1, #0x4e0
    9178:	blr	x3
    917c:	str	x0, [x19, #16]
    9180:	cbz	x0, 95cc <PySequence_Fast@plt+0x538c>
    9184:	ldr	x1, [x21, #1088]
    9188:	ldr	x2, [x1, #168]
    918c:	cbz	x2, 91a0 <PySequence_Fast@plt+0x4f60>
    9190:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    9194:	ldr	x1, [x1, #4040]
    9198:	ldr	x1, [x1, #16]
    919c:	blr	x2
    91a0:	cbz	x20, 93b8 <PySequence_Fast@plt+0x5178>
    91a4:	ldr	x0, [x20]
    91a8:	add	x0, x0, #0x1
    91ac:	str	x0, [x20]
    91b0:	str	x20, [x19, #24]
    91b4:	mov	x0, x20
    91b8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    91bc:	add	x1, x1, #0x5e0
    91c0:	bl	3d00 <PyObject_GetAttrString@plt>
    91c4:	str	x0, [x19, #48]
    91c8:	cbz	x0, 941c <PySequence_Fast@plt+0x51dc>
    91cc:	mov	x0, x20
    91d0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    91d4:	add	x1, x1, #0x5f0
    91d8:	bl	3d00 <PyObject_GetAttrString@plt>
    91dc:	str	x0, [x19, #56]
    91e0:	cbz	x0, 9450 <PySequence_Fast@plt+0x5210>
    91e4:	mov	x0, x20
    91e8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    91ec:	add	x1, x1, #0x3d0
    91f0:	bl	3d00 <PyObject_GetAttrString@plt>
    91f4:	str	x0, [x19, #64]
    91f8:	cbz	x0, 9480 <PySequence_Fast@plt+0x5240>
    91fc:	mov	x0, x20
    9200:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9204:	add	x1, x1, #0x5f8
    9208:	bl	3d00 <PyObject_GetAttrString@plt>
    920c:	str	x0, [x19, #72]
    9210:	cbz	x0, 94b0 <PySequence_Fast@plt+0x5270>
    9214:	mov	x0, x20
    9218:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    921c:	add	x1, x1, #0x390
    9220:	bl	3d00 <PyObject_GetAttrString@plt>
    9224:	str	x0, [x19, #80]
    9228:	cbz	x0, 94e0 <PySequence_Fast@plt+0x52a0>
    922c:	mov	x0, x20
    9230:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9234:	add	x1, x1, #0x3f0
    9238:	bl	3d00 <PyObject_GetAttrString@plt>
    923c:	str	x0, [x19, #88]
    9240:	cbz	x0, 9510 <PySequence_Fast@plt+0x52d0>
    9244:	mov	x0, x20
    9248:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    924c:	add	x1, x1, #0x600
    9250:	bl	3d00 <PyObject_GetAttrString@plt>
    9254:	str	x0, [x19, #96]
    9258:	cbz	x0, 9540 <PySequence_Fast@plt+0x5300>
    925c:	mov	x0, x20
    9260:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9264:	add	x1, x1, #0x608
    9268:	bl	3d00 <PyObject_GetAttrString@plt>
    926c:	str	x0, [x19, #112]
    9270:	cbz	x0, 9570 <PySequence_Fast@plt+0x5330>
    9274:	mov	x0, x20
    9278:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    927c:	add	x1, x1, #0x610
    9280:	bl	3d00 <PyObject_GetAttrString@plt>
    9284:	str	x0, [x19, #104]
    9288:	cbz	x0, 95a0 <PySequence_Fast@plt+0x5360>
    928c:	ldr	x2, [x21, #1088]
    9290:	mov	x1, x19
    9294:	ldr	x0, [x19, #16]
    9298:	ldr	x2, [x2, #136]
    929c:	blr	x2
    92a0:	ldr	x0, [x19, #48]
    92a4:	cbz	x0, 93a4 <PySequence_Fast@plt+0x5164>
    92a8:	ldr	x1, [x21, #1088]
    92ac:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    92b0:	ldr	x0, [x19, #16]
    92b4:	add	x2, x2, #0xf28
    92b8:	ldr	x3, [x1, #112]
    92bc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    92c0:	add	x1, x1, #0xe58
    92c4:	blr	x3
    92c8:	ldr	x1, [x21, #1088]
    92cc:	adrp	x2, b000 <PySequence_Fast@plt+0x6dc0>
    92d0:	ldr	x0, [x19, #16]
    92d4:	add	x2, x2, #0xbc0
    92d8:	ldr	x3, [x1, #104]
    92dc:	adrp	x1, c000 <PySequence_Fast@plt+0x7dc0>
    92e0:	add	x1, x1, #0x8c8
    92e4:	blr	x3
    92e8:	ldr	x2, [x21, #1088]
    92ec:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    92f0:	ldr	x0, [x19, #16]
    92f4:	add	x1, x1, #0x130
    92f8:	ldr	x2, [x2, #96]
    92fc:	blr	x2
    9300:	ldr	x2, [x21, #1088]
    9304:	adrp	x1, b000 <PySequence_Fast@plt+0x6dc0>
    9308:	ldr	x0, [x19, #16]
    930c:	add	x1, x1, #0xdf0
    9310:	ldr	x2, [x2, #80]
    9314:	blr	x2
    9318:	ldr	x0, [x19, #88]
    931c:	cbz	x0, 9338 <PySequence_Fast@plt+0x50f8>
    9320:	ldr	x2, [x21, #1088]
    9324:	adrp	x1, d000 <PySequence_Fast@plt+0x8dc0>
    9328:	ldr	x0, [x19, #16]
    932c:	add	x1, x1, #0x280
    9330:	ldr	x2, [x2, #88]
    9334:	blr	x2
    9338:	ldr	x2, [x19, #96]
    933c:	ldr	x1, [x21, #1088]
    9340:	ldr	x0, [x19, #16]
    9344:	cbz	x2, 9360 <PySequence_Fast@plt+0x5120>
    9348:	ldr	x2, [x1, #120]
    934c:	adrp	x1, d000 <PySequence_Fast@plt+0x8dc0>
    9350:	add	x1, x1, #0x560
    9354:	blr	x2
    9358:	ldr	x1, [x21, #1088]
    935c:	ldr	x0, [x19, #16]
    9360:	ldr	x2, [x1, #144]
    9364:	adrp	x1, 6000 <PySequence_Fast@plt+0x1dc0>
    9368:	add	x1, x1, #0xaa0
    936c:	blr	x2
    9370:	ldr	x1, [x21, #1088]
    9374:	mov	x2, #0x0                   	// #0
    9378:	ldr	x0, [x19, #16]
    937c:	ldr	x3, [x1, #128]
    9380:	ldr	x1, [x1, #160]
    9384:	blr	x3
    9388:	ldr	x23, [sp, #64]
    938c:	mov	w0, #0x0                   	// #0
    9390:	ldp	x29, x30, [sp, #16]
    9394:	ldp	x19, x20, [sp, #32]
    9398:	ldp	x21, x22, [sp, #48]
    939c:	add	sp, sp, #0x70
    93a0:	ret
    93a4:	ldr	x0, [x19, #56]
    93a8:	cbnz	x0, 92a8 <PySequence_Fast@plt+0x5068>
    93ac:	b	92c8 <PySequence_Fast@plt+0x5088>
    93b0:	mov	x22, #0x0                   	// #0
    93b4:	b	9138 <PySequence_Fast@plt+0x4ef8>
    93b8:	add	x0, x23, #0x328
    93bc:	mov	x2, #0x0                   	// #0
    93c0:	add	x0, x0, #0x340
    93c4:	mov	x1, #0x0                   	// #0
    93c8:	bl	49d0 <PySequence_Fast@plt+0x790>
    93cc:	mov	x20, x0
    93d0:	cbnz	x0, 91b0 <PySequence_Fast@plt+0x4f70>
    93d4:	ldr	x0, [x19, #32]
    93d8:	cbz	x0, 93f0 <PySequence_Fast@plt+0x51b0>
    93dc:	ldr	x1, [x0]
    93e0:	str	xzr, [x19, #32]
    93e4:	sub	x1, x1, #0x1
    93e8:	str	x1, [x0]
    93ec:	cbz	x1, 9674 <PySequence_Fast@plt+0x5434>
    93f0:	ldr	x0, [x19, #40]
    93f4:	cbz	x0, 9410 <PySequence_Fast@plt+0x51d0>
    93f8:	ldr	x1, [x0]
    93fc:	str	xzr, [x19, #40]
    9400:	sub	x1, x1, #0x1
    9404:	str	x1, [x0]
    9408:	cbz	x1, 95bc <PySequence_Fast@plt+0x537c>
    940c:	nop
    9410:	mov	w0, #0xffffffff            	// #-1
    9414:	ldr	x23, [sp, #64]
    9418:	b	9390 <PySequence_Fast@plt+0x5150>
    941c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9420:	ldr	x0, [x0, #4008]
    9424:	ldr	x0, [x0]
    9428:	bl	3e50 <PyErr_ExceptionMatches@plt>
    942c:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    9430:	bl	3ef0 <PyErr_Clear@plt>
    9434:	mov	x0, x20
    9438:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    943c:	add	x1, x1, #0x5f0
    9440:	bl	3d00 <PyObject_GetAttrString@plt>
    9444:	str	x0, [x19, #56]
    9448:	cbnz	x0, 91e4 <PySequence_Fast@plt+0x4fa4>
    944c:	nop
    9450:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9454:	ldr	x0, [x0, #4008]
    9458:	ldr	x0, [x0]
    945c:	bl	3e50 <PyErr_ExceptionMatches@plt>
    9460:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    9464:	bl	3ef0 <PyErr_Clear@plt>
    9468:	mov	x0, x20
    946c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9470:	add	x1, x1, #0x3d0
    9474:	bl	3d00 <PyObject_GetAttrString@plt>
    9478:	str	x0, [x19, #64]
    947c:	cbnz	x0, 91fc <PySequence_Fast@plt+0x4fbc>
    9480:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9484:	ldr	x0, [x0, #4008]
    9488:	ldr	x0, [x0]
    948c:	bl	3e50 <PyErr_ExceptionMatches@plt>
    9490:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    9494:	bl	3ef0 <PyErr_Clear@plt>
    9498:	mov	x0, x20
    949c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    94a0:	add	x1, x1, #0x5f8
    94a4:	bl	3d00 <PyObject_GetAttrString@plt>
    94a8:	str	x0, [x19, #72]
    94ac:	cbnz	x0, 9214 <PySequence_Fast@plt+0x4fd4>
    94b0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    94b4:	ldr	x0, [x0, #4008]
    94b8:	ldr	x0, [x0]
    94bc:	bl	3e50 <PyErr_ExceptionMatches@plt>
    94c0:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    94c4:	bl	3ef0 <PyErr_Clear@plt>
    94c8:	mov	x0, x20
    94cc:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    94d0:	add	x1, x1, #0x390
    94d4:	bl	3d00 <PyObject_GetAttrString@plt>
    94d8:	str	x0, [x19, #80]
    94dc:	cbnz	x0, 922c <PySequence_Fast@plt+0x4fec>
    94e0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    94e4:	ldr	x0, [x0, #4008]
    94e8:	ldr	x0, [x0]
    94ec:	bl	3e50 <PyErr_ExceptionMatches@plt>
    94f0:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    94f4:	bl	3ef0 <PyErr_Clear@plt>
    94f8:	mov	x0, x20
    94fc:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9500:	add	x1, x1, #0x3f0
    9504:	bl	3d00 <PyObject_GetAttrString@plt>
    9508:	str	x0, [x19, #88]
    950c:	cbnz	x0, 9244 <PySequence_Fast@plt+0x5004>
    9510:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9514:	ldr	x0, [x0, #4008]
    9518:	ldr	x0, [x0]
    951c:	bl	3e50 <PyErr_ExceptionMatches@plt>
    9520:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    9524:	bl	3ef0 <PyErr_Clear@plt>
    9528:	mov	x0, x20
    952c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9530:	add	x1, x1, #0x600
    9534:	bl	3d00 <PyObject_GetAttrString@plt>
    9538:	str	x0, [x19, #96]
    953c:	cbnz	x0, 925c <PySequence_Fast@plt+0x501c>
    9540:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9544:	ldr	x0, [x0, #4008]
    9548:	ldr	x0, [x0]
    954c:	bl	3e50 <PyErr_ExceptionMatches@plt>
    9550:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    9554:	bl	3ef0 <PyErr_Clear@plt>
    9558:	mov	x0, x20
    955c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9560:	add	x1, x1, #0x608
    9564:	bl	3d00 <PyObject_GetAttrString@plt>
    9568:	str	x0, [x19, #112]
    956c:	cbnz	x0, 9274 <PySequence_Fast@plt+0x5034>
    9570:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9574:	ldr	x0, [x0, #4008]
    9578:	ldr	x0, [x0]
    957c:	bl	3e50 <PyErr_ExceptionMatches@plt>
    9580:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    9584:	bl	3ef0 <PyErr_Clear@plt>
    9588:	mov	x0, x20
    958c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9590:	add	x1, x1, #0x610
    9594:	bl	3d00 <PyObject_GetAttrString@plt>
    9598:	str	x0, [x19, #104]
    959c:	cbnz	x0, 928c <PySequence_Fast@plt+0x504c>
    95a0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    95a4:	ldr	x0, [x0, #4008]
    95a8:	ldr	x0, [x0]
    95ac:	bl	3e50 <PyErr_ExceptionMatches@plt>
    95b0:	cbz	w0, 9410 <PySequence_Fast@plt+0x51d0>
    95b4:	bl	3ef0 <PyErr_Clear@plt>
    95b8:	b	928c <PySequence_Fast@plt+0x504c>
    95bc:	bl	3d70 <_Py_Dealloc@plt>
    95c0:	mov	w0, #0xffffffff            	// #-1
    95c4:	ldr	x23, [sp, #64]
    95c8:	b	9390 <PySequence_Fast@plt+0x5150>
    95cc:	ldr	x0, [x19, #32]
    95d0:	cbz	x0, 95e8 <PySequence_Fast@plt+0x53a8>
    95d4:	ldr	x1, [x0]
    95d8:	str	xzr, [x19, #32]
    95dc:	sub	x1, x1, #0x1
    95e0:	str	x1, [x0]
    95e4:	cbz	x1, 966c <PySequence_Fast@plt+0x542c>
    95e8:	ldr	x0, [x19, #40]
    95ec:	cbz	x0, 9604 <PySequence_Fast@plt+0x53c4>
    95f0:	ldr	x1, [x0]
    95f4:	str	xzr, [x19, #40]
    95f8:	sub	x1, x1, #0x1
    95fc:	str	x1, [x0]
    9600:	cbz	x1, 9664 <PySequence_Fast@plt+0x5424>
    9604:	bl	3d80 <PyErr_NoMemory@plt>
    9608:	mov	w0, #0xffffffff            	// #-1
    960c:	ldr	x23, [sp, #64]
    9610:	b	9390 <PySequence_Fast@plt+0x5150>
    9614:	ldr	x0, [x19, #32]
    9618:	cbz	x0, 9128 <PySequence_Fast@plt+0x4ee8>
    961c:	ldr	x1, [x0]
    9620:	str	xzr, [x19, #32]
    9624:	sub	x1, x1, #0x1
    9628:	str	x1, [x0]
    962c:	cbnz	x1, 9128 <PySequence_Fast@plt+0x4ee8>
    9630:	bl	3d70 <_Py_Dealloc@plt>
    9634:	mov	w0, #0xffffffff            	// #-1
    9638:	b	9390 <PySequence_Fast@plt+0x5150>
    963c:	mov	x3, x0
    9640:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    9644:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9648:	add	x2, x2, #0x5a0
    964c:	add	x1, x1, #0x5b0
    9650:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    9654:	add	x0, x0, #0x5c8
    9658:	bl	3ed0 <_PyArg_BadArgument@plt>
    965c:	mov	w0, #0xffffffff            	// #-1
    9660:	b	9390 <PySequence_Fast@plt+0x5150>
    9664:	bl	3d70 <_Py_Dealloc@plt>
    9668:	b	9604 <PySequence_Fast@plt+0x53c4>
    966c:	bl	3d70 <_Py_Dealloc@plt>
    9670:	b	95e8 <PySequence_Fast@plt+0x53a8>
    9674:	bl	3d70 <_Py_Dealloc@plt>
    9678:	b	93f0 <PySequence_Fast@plt+0x51b0>
    967c:	nop
    9680:	stp	x29, x30, [sp, #-48]!
    9684:	mov	x29, sp
    9688:	ldr	x2, [x0, #40]
    968c:	stp	x19, x20, [sp, #16]
    9690:	mov	x20, x0
    9694:	mov	x19, x1
    9698:	cbz	x2, 975c <PySequence_Fast@plt+0x551c>
    969c:	ldp	x1, x0, [x2, #8]
    96a0:	add	x19, x19, x1
    96a4:	cmp	x19, x0
    96a8:	mov	w0, #0x0                   	// #0
    96ac:	b.le	970c <PySequence_Fast@plt+0x54cc>
    96b0:	cmp	x19, #0x9
    96b4:	mov	x0, #0x3                   	// #3
    96b8:	add	x19, x19, x19, asr #3
    96bc:	mov	x1, #0x6                   	// #6
    96c0:	csel	x0, x0, x1, lt  // lt = tstop
    96c4:	adds	x19, x19, x0
    96c8:	b.eq	9718 <PySequence_Fast@plt+0x54d8>  // b.none
    96cc:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    96d0:	cmp	x19, x0
    96d4:	b.hi	97a8 <PySequence_Fast@plt+0x5568>  // b.pmore
    96d8:	ldr	x0, [x2, #24]
    96dc:	str	x21, [sp, #32]
    96e0:	add	x2, x2, #0x20
    96e4:	lsl	x1, x19, #3
    96e8:	cmp	x0, x2
    96ec:	b.eq	9734 <PySequence_Fast@plt+0x54f4>  // b.none
    96f0:	bl	4060 <PyObject_Realloc@plt>
    96f4:	mov	x21, x0
    96f8:	cbz	x0, 97a4 <PySequence_Fast@plt+0x5564>
    96fc:	ldr	x1, [x20, #40]
    9700:	mov	w0, #0x0                   	// #0
    9704:	stp	x19, x21, [x1, #16]
    9708:	ldr	x21, [sp, #32]
    970c:	ldp	x19, x20, [sp, #16]
    9710:	ldp	x29, x30, [sp], #48
    9714:	ret
    9718:	ldr	x0, [x2, #24]
    971c:	str	x21, [sp, #32]
    9720:	add	x2, x2, #0x20
    9724:	mov	x1, #0x8                   	// #8
    9728:	cmp	x0, x2
    972c:	mov	x19, #0x1                   	// #1
    9730:	b.ne	96f0 <PySequence_Fast@plt+0x54b0>  // b.any
    9734:	mov	x0, x1
    9738:	bl	3e00 <PyObject_Malloc@plt>
    973c:	mov	x21, x0
    9740:	cbz	x0, 97a4 <PySequence_Fast@plt+0x5564>
    9744:	ldr	x1, [x20, #40]
    9748:	ldr	x2, [x1, #8]
    974c:	ldr	x1, [x1, #24]
    9750:	lsl	x2, x2, #3
    9754:	bl	3c20 <memcpy@plt>
    9758:	b	96fc <PySequence_Fast@plt+0x54bc>
    975c:	mov	x0, #0x40                  	// #64
    9760:	bl	3e00 <PyObject_Malloc@plt>
    9764:	str	x0, [x20, #40]
    9768:	mov	x2, x0
    976c:	cbz	x0, 97a8 <PySequence_Fast@plt+0x5568>
    9770:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    9774:	add	x3, x0, #0x20
    9778:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    977c:	str	x3, [x2, #24]
    9780:	ldr	x1, [x1, #3976]
    9784:	ldr	q0, [x0, #3120]
    9788:	mov	x0, #0x4                   	// #4
    978c:	ldr	x3, [x1]
    9790:	stur	q0, [x2, #8]
    9794:	add	x3, x3, #0x1
    9798:	str	x3, [x1]
    979c:	str	x1, [x2]
    97a0:	b	96a4 <PySequence_Fast@plt+0x5464>
    97a4:	ldr	x21, [sp, #32]
    97a8:	bl	3d80 <PyErr_NoMemory@plt>
    97ac:	mov	w0, #0xffffffff            	// #-1
    97b0:	b	970c <PySequence_Fast@plt+0x54cc>
    97b4:	nop
    97b8:	stp	x29, x30, [sp, #-32]!
    97bc:	mov	x29, sp
    97c0:	ldr	x1, [x0, #40]
    97c4:	stp	x19, x20, [sp, #16]
    97c8:	mov	x20, x0
    97cc:	ldr	x0, [x0, #16]
    97d0:	cbz	x1, 98c8 <PySequence_Fast@plt+0x5688>
    97d4:	ldr	x1, [x1]
    97d8:	bl	8518 <PySequence_Fast@plt+0x42d8>
    97dc:	mov	x19, x0
    97e0:	cbz	x0, 98e4 <PySequence_Fast@plt+0x56a4>
    97e4:	ldr	x2, [x20, #24]
    97e8:	ldr	x0, [x0, #24]
    97ec:	and	x3, x2, #0xfffffffffffffffe
    97f0:	and	x0, x0, #0xfffffffffffffffe
    97f4:	ldr	x1, [x3]
    97f8:	add	x1, x1, #0x1
    97fc:	str	x1, [x3]
    9800:	ldr	x1, [x0]
    9804:	str	x2, [x19, #24]
    9808:	sub	x1, x1, #0x1
    980c:	str	x1, [x0]
    9810:	cbz	x1, 98c0 <PySequence_Fast@plt+0x5680>
    9814:	ldr	x2, [x20, #32]
    9818:	ldr	x0, [x19, #32]
    981c:	and	x3, x2, #0xfffffffffffffffe
    9820:	and	x0, x0, #0xfffffffffffffffe
    9824:	ldr	x1, [x3]
    9828:	add	x1, x1, #0x1
    982c:	str	x1, [x3]
    9830:	ldr	x1, [x0]
    9834:	str	x2, [x19, #32]
    9838:	sub	x1, x1, #0x1
    983c:	str	x1, [x0]
    9840:	cbz	x1, 98b8 <PySequence_Fast@plt+0x5678>
    9844:	ldr	x0, [x20, #40]
    9848:	cbz	x0, 98a8 <PySequence_Fast@plt+0x5668>
    984c:	ldr	x1, [x0, #8]
    9850:	mov	x0, x19
    9854:	bl	9680 <PySequence_Fast@plt+0x5440>
    9858:	tbnz	w0, #31, 98d4 <PySequence_Fast@plt+0x5694>
    985c:	ldr	x3, [x20, #40]
    9860:	ldr	x6, [x19, #40]
    9864:	ldr	x1, [x3, #8]
    9868:	cmp	x1, #0x0
    986c:	b.le	98a4 <PySequence_Fast@plt+0x5664>
    9870:	ldr	x5, [x3, #24]
    9874:	mov	x0, #0x0                   	// #0
    9878:	ldr	x4, [x6, #24]
    987c:	nop
    9880:	ldr	x1, [x5, x0, lsl #3]
    9884:	ldr	x2, [x1]
    9888:	add	x2, x2, #0x1
    988c:	str	x2, [x1]
    9890:	str	x1, [x4, x0, lsl #3]
    9894:	add	x0, x0, #0x1
    9898:	ldr	x1, [x3, #8]
    989c:	cmp	x0, x1
    98a0:	b.lt	9880 <PySequence_Fast@plt+0x5640>  // b.tstop
    98a4:	str	x1, [x6, #8]
    98a8:	mov	x0, x19
    98ac:	ldp	x19, x20, [sp, #16]
    98b0:	ldp	x29, x30, [sp], #32
    98b4:	ret
    98b8:	bl	3d70 <_Py_Dealloc@plt>
    98bc:	b	9844 <PySequence_Fast@plt+0x5604>
    98c0:	bl	3d70 <_Py_Dealloc@plt>
    98c4:	b	9814 <PySequence_Fast@plt+0x55d4>
    98c8:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    98cc:	ldr	x1, [x1, #3976]
    98d0:	b	97d8 <PySequence_Fast@plt+0x5598>
    98d4:	ldr	x0, [x19]
    98d8:	sub	x0, x0, #0x1
    98dc:	str	x0, [x19]
    98e0:	cbz	x0, 98f8 <PySequence_Fast@plt+0x56b8>
    98e4:	mov	x19, #0x0                   	// #0
    98e8:	mov	x0, x19
    98ec:	ldp	x19, x20, [sp, #16]
    98f0:	ldp	x29, x30, [sp], #32
    98f4:	ret
    98f8:	mov	x0, x19
    98fc:	mov	x19, #0x0                   	// #0
    9900:	bl	3d70 <_Py_Dealloc@plt>
    9904:	b	98a8 <PySequence_Fast@plt+0x5668>
    9908:	stp	x29, x30, [sp, #-112]!
    990c:	mov	x29, sp
    9910:	stp	x19, x20, [sp, #16]
    9914:	mov	x20, x1
    9918:	mov	x19, x0
    991c:	ldr	x1, [x1, #8]
    9920:	stp	x21, x22, [sp, #32]
    9924:	mov	x21, x2
    9928:	ldr	x0, [x1, #96]
    992c:	cbz	x0, 997c <PySequence_Fast@plt+0x573c>
    9930:	ldr	x0, [x0, #264]
    9934:	cbz	x0, 997c <PySequence_Fast@plt+0x573c>
    9938:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    993c:	mov	x0, x20
    9940:	ldr	x1, [x1, #3984]
    9944:	ldr	x1, [x1]
    9948:	bl	3cc0 <PyNumber_AsSsize_t@plt>
    994c:	mov	x20, x0
    9950:	cmn	x0, #0x1
    9954:	b.eq	9bc8 <PySequence_Fast@plt+0x5988>  // b.none
    9958:	tbnz	x0, #63, 9bd0 <PySequence_Fast@plt+0x5990>
    995c:	mov	x2, x21
    9960:	mov	x1, x20
    9964:	mov	x0, x19
    9968:	bl	4eb8 <PySequence_Fast@plt+0xc78>
    996c:	ldp	x19, x20, [sp, #16]
    9970:	ldp	x21, x22, [sp, #32]
    9974:	ldp	x29, x30, [sp], #112
    9978:	ret
    997c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9980:	ldr	x0, [x0, #3952]
    9984:	cmp	x1, x0
    9988:	b.ne	9db4 <PySequence_Fast@plt+0x5b74>  // b.any
    998c:	ldr	x0, [x19, #40]
    9990:	cbz	x0, 9a84 <PySequence_Fast@plt+0x5844>
    9994:	stp	x23, x24, [sp, #48]
    9998:	add	x23, sp, #0x60
    999c:	add	x22, sp, #0x58
    99a0:	mov	x0, x20
    99a4:	mov	x2, x23
    99a8:	mov	x1, x22
    99ac:	add	x3, sp, #0x68
    99b0:	bl	4130 <PySlice_Unpack@plt>
    99b4:	tbnz	w0, #31, 9a6c <PySequence_Fast@plt+0x582c>
    99b8:	ldr	x0, [x19, #40]
    99bc:	mov	x1, x22
    99c0:	ldr	x3, [sp, #104]
    99c4:	mov	x2, x23
    99c8:	ldr	x0, [x0, #8]
    99cc:	bl	3f10 <PySlice_AdjustIndices@plt>
    99d0:	mov	x22, x0
    99d4:	cbz	x21, 9ac8 <PySequence_Fast@plt+0x5888>
    99d8:	mov	x0, x21
    99dc:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    99e0:	add	x1, x1, #0xb38
    99e4:	bl	4240 <PySequence_Fast@plt>
    99e8:	mov	x23, x0
    99ec:	cbz	x0, 9a4c <PySequence_Fast@plt+0x580c>
    99f0:	ldr	x1, [sp, #104]
    99f4:	stp	x25, x26, [sp, #64]
    99f8:	cmp	x1, #0x1
    99fc:	ldr	x26, [x0, #16]
    9a00:	b.eq	9be4 <PySequence_Fast@plt+0x59a4>  // b.none
    9a04:	cmp	x22, x26
    9a08:	b.eq	9c58 <PySequence_Fast@plt+0x5a18>  // b.none
    9a0c:	ldr	x1, [x0]
    9a10:	sub	x1, x1, #0x1
    9a14:	str	x1, [x0]
    9a18:	cbz	x1, 9dac <PySequence_Fast@plt+0x5b6c>
    9a1c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9a20:	mov	x2, x26
    9a24:	mov	x3, x22
    9a28:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9a2c:	ldr	x0, [x0, #3928]
    9a30:	add	x1, x1, #0x638
    9a34:	ldr	x0, [x0]
    9a38:	bl	4180 <PyErr_Format@plt>
    9a3c:	mov	w0, #0xffffffff            	// #-1
    9a40:	ldp	x23, x24, [sp, #48]
    9a44:	ldp	x25, x26, [sp, #64]
    9a48:	b	996c <PySequence_Fast@plt+0x572c>
    9a4c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9a50:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9a54:	ldr	x2, [x21, #8]
    9a58:	add	x1, x1, #0x618
    9a5c:	ldr	x0, [x0, #3944]
    9a60:	ldr	x2, [x2, #24]
    9a64:	ldr	x0, [x0]
    9a68:	bl	4180 <PyErr_Format@plt>
    9a6c:	mov	w0, #0xffffffff            	// #-1
    9a70:	ldp	x19, x20, [sp, #16]
    9a74:	ldp	x21, x22, [sp, #32]
    9a78:	ldp	x23, x24, [sp, #48]
    9a7c:	ldp	x29, x30, [sp], #112
    9a80:	ret
    9a84:	mov	x0, #0x40                  	// #64
    9a88:	bl	3e00 <PyObject_Malloc@plt>
    9a8c:	str	x0, [x19, #40]
    9a90:	cbz	x0, 9fe8 <PySequence_Fast@plt+0x5da8>
    9a94:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    9a98:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    9a9c:	add	x2, x0, #0x20
    9aa0:	stp	x23, x24, [sp, #48]
    9aa4:	ldr	x1, [x1, #3976]
    9aa8:	str	x2, [x0, #24]
    9aac:	ldr	q0, [x3, #3120]
    9ab0:	ldr	x2, [x1]
    9ab4:	stur	q0, [x0, #8]
    9ab8:	add	x2, x2, #0x1
    9abc:	str	x2, [x1]
    9ac0:	str	x1, [x0]
    9ac4:	b	9998 <PySequence_Fast@plt+0x5758>
    9ac8:	cmp	x0, #0x0
    9acc:	b.le	9bb0 <PySequence_Fast@plt+0x5970>
    9ad0:	ldr	x0, [sp, #104]
    9ad4:	tbz	x0, #63, 9af8 <PySequence_Fast@plt+0x58b8>
    9ad8:	ldr	x2, [sp, #88]
    9adc:	sub	x1, x22, #0x1
    9ae0:	neg	x3, x0
    9ae4:	str	x3, [sp, #104]
    9ae8:	add	x3, x2, #0x1
    9aec:	str	x3, [sp, #96]
    9af0:	madd	x0, x1, x0, x2
    9af4:	str	x0, [sp, #88]
    9af8:	mov	x0, x22
    9afc:	bl	3c50 <PyList_New@plt>
    9b00:	mov	x23, x0
    9b04:	cbz	x0, 9a6c <PySequence_Fast@plt+0x582c>
    9b08:	ldp	x20, x0, [sp, #88]
    9b0c:	mov	x21, #0x0                   	// #0
    9b10:	ldr	x2, [sp, #104]
    9b14:	cmp	x0, x20
    9b18:	b.ls	9f7c <PySequence_Fast@plt+0x5d3c>  // b.plast
    9b1c:	nop
    9b20:	ldr	x1, [x19, #40]
    9b24:	add	x6, x2, x20
    9b28:	ldr	x5, [x23, #24]
    9b2c:	sub	x2, x2, #0x1
    9b30:	ldr	x4, [x1, #8]
    9b34:	sub	x0, x20, x21
    9b38:	ldr	x3, [x1, #24]
    9b3c:	sub	x1, x4, #0x1
    9b40:	cmp	x6, x4
    9b44:	sub	x1, x1, x20
    9b48:	csel	x2, x1, x2, cs  // cs = hs, nlast
    9b4c:	ldr	x1, [x3, x20, lsl #3]
    9b50:	str	x1, [x5, x21, lsl #3]
    9b54:	add	x1, x3, x20, lsl #3
    9b58:	lsl	x2, x2, #3
    9b5c:	add	x1, x1, #0x8
    9b60:	add	x0, x3, x0, lsl #3
    9b64:	bl	3c40 <memmove@plt>
    9b68:	add	x21, x21, #0x1
    9b6c:	ldp	x1, x2, [sp, #96]
    9b70:	add	x20, x20, x2
    9b74:	mov	x0, x2
    9b78:	cmp	x1, x20
    9b7c:	b.hi	9b20 <PySequence_Fast@plt+0x58e0>  // b.pmore
    9b80:	ldr	x20, [sp, #88]
    9b84:	madd	x20, x22, x0, x20
    9b88:	ldr	x2, [x19, #40]
    9b8c:	ldr	x1, [x2, #8]
    9b90:	cmp	x1, x20
    9b94:	b.hi	9f54 <PySequence_Fast@plt+0x5d14>  // b.pmore
    9b98:	ldr	x0, [x23]
    9b9c:	sub	x22, x1, x22
    9ba0:	str	x22, [x2, #8]
    9ba4:	sub	x0, x0, #0x1
    9ba8:	str	x0, [x23]
    9bac:	cbz	x0, 9f48 <PySequence_Fast@plt+0x5d08>
    9bb0:	mov	w0, #0x0                   	// #0
    9bb4:	ldp	x19, x20, [sp, #16]
    9bb8:	ldp	x21, x22, [sp, #32]
    9bbc:	ldp	x23, x24, [sp, #48]
    9bc0:	ldp	x29, x30, [sp], #112
    9bc4:	ret
    9bc8:	bl	3f80 <PyErr_Occurred@plt>
    9bcc:	cbnz	x0, 9dcc <PySequence_Fast@plt+0x5b8c>
    9bd0:	ldr	x0, [x19, #40]
    9bd4:	cbz	x0, 995c <PySequence_Fast@plt+0x571c>
    9bd8:	ldr	x0, [x0, #8]
    9bdc:	add	x20, x20, x0
    9be0:	b	995c <PySequence_Fast@plt+0x571c>
    9be4:	cmp	x22, x26
    9be8:	b.ge	9bfc <PySequence_Fast@plt+0x59bc>  // b.tcont
    9bec:	sub	x1, x26, x22
    9bf0:	mov	x0, x19
    9bf4:	bl	9680 <PySequence_Fast@plt+0x5440>
    9bf8:	tbnz	w0, #31, 9e68 <PySequence_Fast@plt+0x5c28>
    9bfc:	cmp	x26, #0x0
    9c00:	b.le	9d58 <PySequence_Fast@plt+0x5b18>
    9c04:	adrp	x21, 22000 <PyInit__elementtree@@Base+0x14168>
    9c08:	add	x25, x23, #0x18
    9c0c:	add	x21, x21, #0x328
    9c10:	mov	x20, #0x0                   	// #0
    9c14:	b	9c44 <PySequence_Fast@plt+0x5a04>
    9c18:	ldr	x0, [x23, #24]
    9c1c:	ldr	x24, [x0, x20, lsl #3]
    9c20:	add	x20, x20, #0x1
    9c24:	ldr	x0, [x24, #8]
    9c28:	mov	x1, x21
    9c2c:	cmp	x0, x21
    9c30:	b.eq	9c3c <PySequence_Fast@plt+0x59fc>  // b.none
    9c34:	bl	4160 <PyType_IsSubtype@plt>
    9c38:	cbz	w0, 9e30 <PySequence_Fast@plt+0x5bf0>
    9c3c:	cmp	x26, x20
    9c40:	b.eq	9d58 <PySequence_Fast@plt+0x5b18>  // b.none
    9c44:	ldr	x0, [x23, #8]
    9c48:	ldr	x0, [x0, #168]
    9c4c:	tbnz	w0, #25, 9c18 <PySequence_Fast@plt+0x59d8>
    9c50:	ldr	x24, [x25, x20, lsl #3]
    9c54:	b	9c20 <PySequence_Fast@plt+0x59e0>
    9c58:	cmp	x22, #0x0
    9c5c:	b.gt	9c04 <PySequence_Fast@plt+0x59c4>
    9c60:	ldr	x7, [x19, #40]
    9c64:	mov	x20, #0x0                   	// #0
    9c68:	ldr	x2, [sp, #88]
    9c6c:	cmp	x22, x26
    9c70:	b.le	9e90 <PySequence_Fast@plt+0x5c50>
    9c74:	ldr	x6, [x7, #8]
    9c78:	sub	x22, x26, x22
    9c7c:	ldr	x4, [sp, #96]
    9c80:	cmp	x4, x6
    9c84:	b.ge	9d00 <PySequence_Fast@plt+0x5ac0>  // b.tcont
    9c88:	add	x0, x4, x22
    9c8c:	lsl	x3, x4, #3
    9c90:	add	x9, x0, #0x2
    9c94:	add	x8, x3, #0x10
    9c98:	lsl	x5, x0, #3
    9c9c:	mvn	x1, x4
    9ca0:	cmp	x3, x9, lsl #3
    9ca4:	add	x0, x1, x6
    9ca8:	ccmp	x5, x8, #0x0, lt  // lt = tstop
    9cac:	ccmp	x0, #0x9, #0x0, ge  // ge = tcont
    9cb0:	ldr	x0, [x7, #24]
    9cb4:	b.ls	9fa8 <PySequence_Fast@plt+0x5d68>  // b.plast
    9cb8:	sub	x6, x6, x4
    9cbc:	add	x3, x0, x3
    9cc0:	add	x5, x0, x5
    9cc4:	mov	x1, #0x0                   	// #0
    9cc8:	lsr	x8, x6, #1
    9ccc:	lsl	x8, x8, #4
    9cd0:	ldr	q0, [x3, x1]
    9cd4:	str	q0, [x5, x1]
    9cd8:	add	x1, x1, #0x10
    9cdc:	cmp	x1, x8
    9ce0:	b.ne	9cd0 <PySequence_Fast@plt+0x5a90>  // b.any
    9ce4:	and	x3, x6, #0xfffffffffffffffe
    9ce8:	add	x1, x3, x4
    9cec:	cmp	x3, x6
    9cf0:	b.eq	9d00 <PySequence_Fast@plt+0x5ac0>  // b.none
    9cf4:	add	x3, x1, x22
    9cf8:	ldr	x1, [x0, x1, lsl #3]
    9cfc:	str	x1, [x0, x3, lsl #3]
    9d00:	cmp	x26, #0x0
    9d04:	b.le	9dd4 <PySequence_Fast@plt+0x5b94>
    9d08:	add	x0, x23, #0x18
    9d0c:	mov	x1, #0x0                   	// #0
    9d10:	ldr	x5, [x23, #8]
    9d14:	ldr	x6, [x7, #24]
    9d18:	b	9d48 <PySequence_Fast@plt+0x5b08>
    9d1c:	ldr	x3, [x23, #24]
    9d20:	ldr	x3, [x3, x1, lsl #3]
    9d24:	add	x1, x1, #0x1
    9d28:	ldr	x4, [x3]
    9d2c:	cmp	x26, x1
    9d30:	add	x4, x4, #0x1
    9d34:	str	x4, [x3]
    9d38:	str	x3, [x6, x2, lsl #3]
    9d3c:	ldr	x3, [sp, #104]
    9d40:	add	x2, x2, x3
    9d44:	b.eq	9dd4 <PySequence_Fast@plt+0x5b94>  // b.none
    9d48:	ldr	x3, [x5, #168]
    9d4c:	tbnz	w3, #25, 9d1c <PySequence_Fast@plt+0x5adc>
    9d50:	ldr	x3, [x0, x1, lsl #3]
    9d54:	b	9d24 <PySequence_Fast@plt+0x5ae4>
    9d58:	cmp	x22, #0x0
    9d5c:	b.le	9c60 <PySequence_Fast@plt+0x5a20>
    9d60:	mov	x0, x22
    9d64:	bl	3c50 <PyList_New@plt>
    9d68:	mov	x20, x0
    9d6c:	cbz	x0, 9e68 <PySequence_Fast@plt+0x5c28>
    9d70:	ldr	x7, [x19, #40]
    9d74:	ldr	x1, [x0, #24]
    9d78:	ldr	x0, [sp, #104]
    9d7c:	ldr	x3, [x7, #24]
    9d80:	cmp	x0, #0x1
    9d84:	ldr	x2, [sp, #88]
    9d88:	b.ne	9f84 <PySequence_Fast@plt+0x5d44>  // b.any
    9d8c:	add	x3, x3, x2, lsl #3
    9d90:	add	x4, x1, x22, lsl #3
    9d94:	nop
    9d98:	ldr	x0, [x3], #8
    9d9c:	str	x0, [x1], #8
    9da0:	cmp	x4, x1
    9da4:	b.ne	9d98 <PySequence_Fast@plt+0x5b58>  // b.any
    9da8:	b	9c6c <PySequence_Fast@plt+0x5a2c>
    9dac:	bl	3d70 <_Py_Dealloc@plt>
    9db0:	b	9a1c <PySequence_Fast@plt+0x57dc>
    9db4:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9db8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9dbc:	add	x1, x1, #0x520
    9dc0:	ldr	x0, [x0, #3944]
    9dc4:	ldr	x0, [x0]
    9dc8:	bl	3de0 <PyErr_SetString@plt>
    9dcc:	mov	w0, #0xffffffff            	// #-1
    9dd0:	b	996c <PySequence_Fast@plt+0x572c>
    9dd4:	ldr	x1, [x7, #8]
    9dd8:	ldr	x0, [x23]
    9ddc:	add	x22, x1, x22
    9de0:	str	x22, [x7, #8]
    9de4:	sub	x0, x0, #0x1
    9de8:	str	x0, [x23]
    9dec:	cbz	x0, 9e0c <PySequence_Fast@plt+0x5bcc>
    9df0:	cbz	x20, 9e04 <PySequence_Fast@plt+0x5bc4>
    9df4:	ldr	x0, [x20]
    9df8:	sub	x0, x0, #0x1
    9dfc:	str	x0, [x20]
    9e00:	cbz	x0, 9e18 <PySequence_Fast@plt+0x5bd8>
    9e04:	ldp	x25, x26, [sp, #64]
    9e08:	b	9bb0 <PySequence_Fast@plt+0x5970>
    9e0c:	mov	x0, x23
    9e10:	bl	3d70 <_Py_Dealloc@plt>
    9e14:	b	9df0 <PySequence_Fast@plt+0x5bb0>
    9e18:	mov	x0, x20
    9e1c:	bl	3d70 <_Py_Dealloc@plt>
    9e20:	mov	w0, #0x0                   	// #0
    9e24:	ldp	x23, x24, [sp, #48]
    9e28:	ldp	x25, x26, [sp, #64]
    9e2c:	b	996c <PySequence_Fast@plt+0x572c>
    9e30:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    9e34:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    9e38:	ldr	x2, [x24, #8]
    9e3c:	add	x1, x1, #0x188
    9e40:	ldr	x0, [x0, #3944]
    9e44:	ldr	x2, [x2, #24]
    9e48:	ldr	x0, [x0]
    9e4c:	bl	4180 <PyErr_Format@plt>
    9e50:	ldr	x0, [x23]
    9e54:	sub	x0, x0, #0x1
    9e58:	str	x0, [x23]
    9e5c:	cbz	x0, 9e78 <PySequence_Fast@plt+0x5c38>
    9e60:	ldp	x25, x26, [sp, #64]
    9e64:	b	9a6c <PySequence_Fast@plt+0x582c>
    9e68:	ldr	x0, [x23]
    9e6c:	sub	x0, x0, #0x1
    9e70:	str	x0, [x23]
    9e74:	cbnz	x0, 9e60 <PySequence_Fast@plt+0x5c20>
    9e78:	mov	x0, x23
    9e7c:	bl	3d70 <_Py_Dealloc@plt>
    9e80:	mov	w0, #0xffffffff            	// #-1
    9e84:	ldp	x23, x24, [sp, #48]
    9e88:	ldp	x25, x26, [sp, #64]
    9e8c:	b	996c <PySequence_Fast@plt+0x572c>
    9e90:	sub	x22, x26, x22
    9e94:	b.ge	9d00 <PySequence_Fast@plt+0x5ac0>  // b.tcont
    9e98:	ldr	x4, [x7, #8]
    9e9c:	ldr	x8, [sp, #96]
    9ea0:	sub	x0, x4, #0x1
    9ea4:	cmp	x0, x8
    9ea8:	b.lt	9d00 <PySequence_Fast@plt+0x5ac0>  // b.tstop
    9eac:	add	x1, x0, x22
    9eb0:	lsl	x5, x0, #3
    9eb4:	add	x6, x1, #0x1
    9eb8:	sub	x5, x5, #0x8
    9ebc:	lsl	x3, x1, #3
    9ec0:	lsl	x1, x4, #3
    9ec4:	cmp	x5, x6, lsl #3
    9ec8:	sub	x3, x3, #0x8
    9ecc:	mvn	x5, x8
    9ed0:	ccmp	x3, x1, #0x0, lt  // lt = tstop
    9ed4:	add	x5, x5, x4
    9ed8:	cset	w6, ge  // ge = tcont
    9edc:	cmp	x5, #0xa
    9ee0:	mov	x5, #0x8000000000000000    	// #-9223372036854775808
    9ee4:	ccmp	x8, x5, #0x4, hi  // hi = pmore
    9ee8:	csel	w6, w6, wzr, ne  // ne = any
    9eec:	ldr	x5, [x7, #24]
    9ef0:	cbz	w6, 9fc8 <PySequence_Fast@plt+0x5d88>
    9ef4:	sub	x8, x4, x8
    9ef8:	sub	x1, x1, #0x10
    9efc:	add	x3, x5, x3
    9f00:	add	x6, x5, x1
    9f04:	lsr	x9, x8, #1
    9f08:	mov	x1, #0x0                   	// #0
    9f0c:	mov	x4, #0x0                   	// #0
    9f10:	ldr	q0, [x6, x1]
    9f14:	add	x4, x4, #0x1
    9f18:	cmp	x9, x4
    9f1c:	str	q0, [x3, x1]
    9f20:	sub	x1, x1, #0x10
    9f24:	b.hi	9f10 <PySequence_Fast@plt+0x5cd0>  // b.pmore
    9f28:	and	x1, x8, #0xfffffffffffffffe
    9f2c:	sub	x0, x0, x1
    9f30:	cmp	x1, x8
    9f34:	b.eq	9d00 <PySequence_Fast@plt+0x5ac0>  // b.none
    9f38:	add	x1, x0, x22
    9f3c:	ldr	x0, [x5, x0, lsl #3]
    9f40:	str	x0, [x5, x1, lsl #3]
    9f44:	b	9d00 <PySequence_Fast@plt+0x5ac0>
    9f48:	mov	x0, x23
    9f4c:	bl	3d70 <_Py_Dealloc@plt>
    9f50:	b	9bb0 <PySequence_Fast@plt+0x5970>
    9f54:	ldr	x0, [x2, #24]
    9f58:	sub	x3, x20, x22
    9f5c:	sub	x1, x1, x20
    9f60:	lsl	x2, x1, #3
    9f64:	add	x1, x0, x20, lsl #3
    9f68:	add	x0, x0, x3, lsl #3
    9f6c:	bl	3c40 <memmove@plt>
    9f70:	ldr	x2, [x19, #40]
    9f74:	ldr	x1, [x2, #8]
    9f78:	b	9b98 <PySequence_Fast@plt+0x5958>
    9f7c:	mov	x0, x2
    9f80:	b	9b84 <PySequence_Fast@plt+0x5944>
    9f84:	lsl	x0, x0, #3
    9f88:	add	x3, x3, x2, lsl #3
    9f8c:	add	x5, x1, x22, lsl #3
    9f90:	ldr	x4, [x3]
    9f94:	str	x4, [x1], #8
    9f98:	add	x3, x3, x0
    9f9c:	cmp	x1, x5
    9fa0:	b.ne	9f90 <PySequence_Fast@plt+0x5d50>  // b.any
    9fa4:	b	9c6c <PySequence_Fast@plt+0x5a2c>
    9fa8:	add	x1, x0, x3
    9fac:	add	x0, x0, x6, lsl #3
    9fb0:	ldr	x3, [x1]
    9fb4:	str	x3, [x1, x22, lsl #3]
    9fb8:	add	x1, x1, #0x8
    9fbc:	cmp	x1, x0
    9fc0:	b.ne	9fb0 <PySequence_Fast@plt+0x5d70>  // b.any
    9fc4:	b	9d00 <PySequence_Fast@plt+0x5ac0>
    9fc8:	add	x3, x5, x22, lsl #3
    9fcc:	nop
    9fd0:	ldr	x1, [x5, x0, lsl #3]
    9fd4:	str	x1, [x3, x0, lsl #3]
    9fd8:	sub	x0, x0, #0x1
    9fdc:	cmp	x0, x8
    9fe0:	b.ge	9fd0 <PySequence_Fast@plt+0x5d90>  // b.tcont
    9fe4:	b	9d00 <PySequence_Fast@plt+0x5ac0>
    9fe8:	bl	3d80 <PyErr_NoMemory@plt>
    9fec:	mov	w0, #0xffffffff            	// #-1
    9ff0:	b	996c <PySequence_Fast@plt+0x572c>
    9ff4:	nop
    9ff8:	stp	x29, x30, [sp, #-64]!
    9ffc:	adrp	x5, 21000 <PyInit__elementtree@@Base+0x13168>
    a000:	mov	x0, x1
    a004:	mov	x29, sp
    a008:	ldr	x5, [x5, #3992]
    a00c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    a010:	add	x6, sp, #0x38
    a014:	add	x1, x1, #0x680
    a018:	add	x4, sp, #0x30
    a01c:	add	x3, sp, #0x28
    a020:	stp	x19, x20, [sp, #16]
    a024:	mov	x19, x2
    a028:	adrp	x20, 22000 <PyInit__elementtree@@Base+0x14168>
    a02c:	add	x2, x20, #0x328
    a030:	str	xzr, [sp, #56]
    a034:	bl	4010 <_PyArg_ParseTuple_SizeT@plt>
    a038:	cbz	w0, a104 <PySequence_Fast@plt+0x5ec4>
    a03c:	ldr	x0, [sp, #56]
    a040:	cbz	x0, a0ec <PySequence_Fast@plt+0x5eac>
    a044:	bl	4150 <PyDict_Copy@plt>
    a048:	str	x0, [sp, #56]
    a04c:	mov	x1, x0
    a050:	cbz	x0, a104 <PySequence_Fast@plt+0x5ec4>
    a054:	cbz	x19, a068 <PySequence_Fast@plt+0x5e28>
    a058:	mov	x1, x19
    a05c:	bl	3f20 <PyDict_Update@plt>
    a060:	tbnz	w0, #31, a19c <PySequence_Fast@plt+0x5f5c>
    a064:	ldr	x1, [sp, #56]
    a068:	ldr	x0, [sp, #48]
    a06c:	bl	8518 <PySequence_Fast@plt+0x42d8>
    a070:	mov	x19, x0
    a074:	ldr	x2, [sp, #56]
    a078:	ldr	x1, [x2]
    a07c:	sub	x1, x1, #0x1
    a080:	str	x1, [x2]
    a084:	cbz	x1, a118 <PySequence_Fast@plt+0x5ed8>
    a088:	cbz	x19, a104 <PySequence_Fast@plt+0x5ec4>
    a08c:	ldr	x0, [x19, #8]
    a090:	add	x1, x20, #0x328
    a094:	ldr	x20, [sp, #40]
    a098:	cmp	x0, x1
    a09c:	b.eq	a0a8 <PySequence_Fast@plt+0x5e68>  // b.none
    a0a0:	bl	4160 <PyType_IsSubtype@plt>
    a0a4:	cbz	w0, a164 <PySequence_Fast@plt+0x5f24>
    a0a8:	mov	x0, x20
    a0ac:	mov	x1, #0x1                   	// #1
    a0b0:	bl	9680 <PySequence_Fast@plt+0x5440>
    a0b4:	tbnz	w0, #31, a184 <PySequence_Fast@plt+0x5f44>
    a0b8:	ldr	x0, [x20, #40]
    a0bc:	ldr	x1, [x19]
    a0c0:	ldr	x3, [x0, #24]
    a0c4:	add	x1, x1, #0x1
    a0c8:	str	x1, [x19]
    a0cc:	ldr	x1, [x0, #8]
    a0d0:	add	x2, x1, #0x1
    a0d4:	str	x19, [x3, x1, lsl #3]
    a0d8:	str	x2, [x0, #8]
    a0dc:	mov	x0, x19
    a0e0:	ldp	x19, x20, [sp, #16]
    a0e4:	ldp	x29, x30, [sp], #64
    a0e8:	ret
    a0ec:	cbz	x19, a124 <PySequence_Fast@plt+0x5ee4>
    a0f0:	mov	x0, x19
    a0f4:	bl	53c0 <PySequence_Fast@plt+0x1180>
    a0f8:	str	x0, [sp, #56]
    a0fc:	mov	x1, x0
    a100:	cbnz	x0, a068 <PySequence_Fast@plt+0x5e28>
    a104:	mov	x19, #0x0                   	// #0
    a108:	mov	x0, x19
    a10c:	ldp	x19, x20, [sp, #16]
    a110:	ldp	x29, x30, [sp], #64
    a114:	ret
    a118:	mov	x0, x2
    a11c:	bl	3d70 <_Py_Dealloc@plt>
    a120:	b	a088 <PySequence_Fast@plt+0x5e48>
    a124:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    a128:	ldr	x0, [x0, #3976]
    a12c:	str	x0, [sp, #56]
    a130:	mov	x1, x0
    a134:	ldr	x2, [x0]
    a138:	add	x2, x2, #0x1
    a13c:	str	x2, [x0]
    a140:	ldr	x0, [sp, #48]
    a144:	bl	8518 <PySequence_Fast@plt+0x42d8>
    a148:	mov	x19, x0
    a14c:	ldr	x2, [sp, #56]
    a150:	ldr	x1, [x2]
    a154:	sub	x1, x1, #0x1
    a158:	str	x1, [x2]
    a15c:	cbnz	x1, a088 <PySequence_Fast@plt+0x5e48>
    a160:	b	a118 <PySequence_Fast@plt+0x5ed8>
    a164:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    a168:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    a16c:	ldr	x2, [x19, #8]
    a170:	add	x1, x1, #0x188
    a174:	ldr	x0, [x0, #3944]
    a178:	ldr	x2, [x2, #24]
    a17c:	ldr	x0, [x0]
    a180:	bl	4180 <PyErr_Format@plt>
    a184:	ldr	x0, [x19]
    a188:	sub	x0, x0, #0x1
    a18c:	str	x0, [x19]
    a190:	cbnz	x0, a104 <PySequence_Fast@plt+0x5ec4>
    a194:	mov	x0, x19
    a198:	b	a1b0 <PySequence_Fast@plt+0x5f70>
    a19c:	ldr	x0, [sp, #56]
    a1a0:	ldr	x1, [x0]
    a1a4:	sub	x1, x1, #0x1
    a1a8:	str	x1, [x0]
    a1ac:	cbnz	x1, a104 <PySequence_Fast@plt+0x5ec4>
    a1b0:	mov	x19, #0x0                   	// #0
    a1b4:	bl	3d70 <_Py_Dealloc@plt>
    a1b8:	b	a0dc <PySequence_Fast@plt+0x5e9c>
    a1bc:	nop
    a1c0:	stp	x29, x30, [sp, #-32]!
    a1c4:	mov	x29, sp
    a1c8:	stp	x19, x20, [sp, #16]
    a1cc:	mov	x19, x0
    a1d0:	ldr	x0, [x0, #16]
    a1d4:	cbz	x0, a1ec <PySequence_Fast@plt+0x5fac>
    a1d8:	ldr	x1, [x0]
    a1dc:	str	xzr, [x19, #16]
    a1e0:	sub	x1, x1, #0x1
    a1e4:	str	x1, [x0]
    a1e8:	cbz	x1, a2e4 <PySequence_Fast@plt+0x60a4>
    a1ec:	ldr	x0, [x19, #24]
    a1f0:	cbz	x0, a20c <PySequence_Fast@plt+0x5fcc>
    a1f4:	and	x0, x0, #0xfffffffffffffffe
    a1f8:	ldr	x1, [x0]
    a1fc:	str	xzr, [x19, #24]
    a200:	sub	x1, x1, #0x1
    a204:	str	x1, [x0]
    a208:	cbz	x1, a2dc <PySequence_Fast@plt+0x609c>
    a20c:	ldr	x0, [x19, #32]
    a210:	cbz	x0, a22c <PySequence_Fast@plt+0x5fec>
    a214:	and	x0, x0, #0xfffffffffffffffe
    a218:	ldr	x1, [x0]
    a21c:	str	xzr, [x19, #32]
    a220:	sub	x1, x1, #0x1
    a224:	str	x1, [x0]
    a228:	cbz	x1, a2d4 <PySequence_Fast@plt+0x6094>
    a22c:	ldr	x20, [x19, #40]
    a230:	cbz	x20, a29c <PySequence_Fast@plt+0x605c>
    a234:	ldr	x0, [x20]
    a238:	ldr	x1, [x0]
    a23c:	str	xzr, [x19, #40]
    a240:	sub	x1, x1, #0x1
    a244:	str	x1, [x0]
    a248:	cbz	x1, a2ec <PySequence_Fast@plt+0x60ac>
    a24c:	ldr	x2, [x20, #8]
    a250:	ldr	x3, [x20, #24]
    a254:	cmp	x2, #0x0
    a258:	b.le	a280 <PySequence_Fast@plt+0x6040>
    a25c:	mov	x19, #0x0                   	// #0
    a260:	ldr	x0, [x3, x19, lsl #3]
    a264:	ldr	x1, [x0]
    a268:	sub	x1, x1, #0x1
    a26c:	str	x1, [x0]
    a270:	cbz	x1, a2ac <PySequence_Fast@plt+0x606c>
    a274:	add	x19, x19, #0x1
    a278:	cmp	x19, x2
    a27c:	b.lt	a260 <PySequence_Fast@plt+0x6020>  // b.tstop
    a280:	add	x0, x20, #0x20
    a284:	cmp	x3, x0
    a288:	b.eq	a294 <PySequence_Fast@plt+0x6054>  // b.none
    a28c:	mov	x0, x3
    a290:	bl	3e60 <PyObject_Free@plt>
    a294:	mov	x0, x20
    a298:	bl	3e60 <PyObject_Free@plt>
    a29c:	mov	w0, #0x0                   	// #0
    a2a0:	ldp	x19, x20, [sp, #16]
    a2a4:	ldp	x29, x30, [sp], #32
    a2a8:	ret
    a2ac:	bl	3d70 <_Py_Dealloc@plt>
    a2b0:	add	x19, x19, #0x1
    a2b4:	ldr	x2, [x20, #8]
    a2b8:	ldr	x3, [x20, #24]
    a2bc:	cmp	x19, x2
    a2c0:	b.lt	a260 <PySequence_Fast@plt+0x6020>  // b.tstop
    a2c4:	add	x0, x20, #0x20
    a2c8:	cmp	x3, x0
    a2cc:	b.ne	a28c <PySequence_Fast@plt+0x604c>  // b.any
    a2d0:	b	a294 <PySequence_Fast@plt+0x6054>
    a2d4:	bl	3d70 <_Py_Dealloc@plt>
    a2d8:	b	a22c <PySequence_Fast@plt+0x5fec>
    a2dc:	bl	3d70 <_Py_Dealloc@plt>
    a2e0:	b	a20c <PySequence_Fast@plt+0x5fcc>
    a2e4:	bl	3d70 <_Py_Dealloc@plt>
    a2e8:	b	a1ec <PySequence_Fast@plt+0x5fac>
    a2ec:	bl	3d70 <_Py_Dealloc@plt>
    a2f0:	b	a24c <PySequence_Fast@plt+0x600c>
    a2f4:	nop
    a2f8:	stp	x29, x30, [sp, #-32]!
    a2fc:	mov	x29, sp
    a300:	stp	x19, x20, [sp, #16]
    a304:	mov	x19, x0
    a308:	bl	4220 <PyObject_GC_UnTrack@plt>
    a30c:	adrp	x0, a000 <PySequence_Fast@plt+0x5dc0>
    a310:	add	x0, x0, #0x2f8
    a314:	ldr	x1, [x19, #8]
    a318:	ldr	x1, [x1, #48]
    a31c:	cmp	x1, x0
    a320:	b.eq	a358 <PySequence_Fast@plt+0x6118>  // b.none
    a324:	ldr	x0, [x19, #48]
    a328:	cbz	x0, a334 <PySequence_Fast@plt+0x60f4>
    a32c:	mov	x0, x19
    a330:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    a334:	mov	x0, x19
    a338:	bl	a1c0 <PySequence_Fast@plt+0x5f80>
    a33c:	ldr	x1, [x19, #8]
    a340:	mov	x0, x19
    a344:	ldp	x19, x20, [sp, #16]
    a348:	ldp	x29, x30, [sp], #32
    a34c:	ldr	x1, [x1, #320]
    a350:	mov	x16, x1
    a354:	br	x16
    a358:	bl	3f50 <PyThreadState_Get@plt>
    a35c:	mov	x20, x0
    a360:	ldr	w0, [x0, #184]
    a364:	cmp	w0, #0x31
    a368:	b.gt	a3c8 <PySequence_Fast@plt+0x6188>
    a36c:	ldr	x1, [x19, #48]
    a370:	add	w0, w0, #0x1
    a374:	str	w0, [x20, #184]
    a378:	cbnz	x1, a3d8 <PySequence_Fast@plt+0x6198>
    a37c:	mov	x0, x19
    a380:	bl	a1c0 <PySequence_Fast@plt+0x5f80>
    a384:	ldr	x1, [x19, #8]
    a388:	mov	x0, x19
    a38c:	ldr	x1, [x1, #320]
    a390:	blr	x1
    a394:	ldr	w1, [x20, #184]
    a398:	ldr	x0, [x20, #192]
    a39c:	sub	w1, w1, #0x1
    a3a0:	str	w1, [x20, #184]
    a3a4:	cmp	x0, #0x0
    a3a8:	ccmp	w1, #0x0, #0x0, ne  // ne = any
    a3ac:	b.le	a3bc <PySequence_Fast@plt+0x617c>
    a3b0:	ldp	x19, x20, [sp, #16]
    a3b4:	ldp	x29, x30, [sp], #32
    a3b8:	ret
    a3bc:	ldp	x19, x20, [sp, #16]
    a3c0:	ldp	x29, x30, [sp], #32
    a3c4:	b	41c0 <_PyTrash_thread_destroy_chain@plt>
    a3c8:	mov	x0, x19
    a3cc:	ldp	x19, x20, [sp, #16]
    a3d0:	ldp	x29, x30, [sp], #32
    a3d4:	b	4040 <_PyTrash_thread_deposit_object@plt>
    a3d8:	mov	x0, x19
    a3dc:	bl	3cb0 <PyObject_ClearWeakRefs@plt>
    a3e0:	b	a37c <PySequence_Fast@plt+0x613c>
    a3e4:	nop
    a3e8:	stp	x29, x30, [sp, #-64]!
    a3ec:	cmp	x2, #0x2
    a3f0:	mov	x29, sp
    a3f4:	stp	x19, x20, [sp, #16]
    a3f8:	mov	x20, x1
    a3fc:	stp	x21, x22, [sp, #32]
    a400:	mov	x21, x0
    a404:	b.ne	a548 <PySequence_Fast@plt+0x6308>  // b.any
    a408:	ldr	x0, [x20]
    a40c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    a410:	ldr	x1, [x1, #3896]
    a414:	ldr	x0, [x0, #8]
    a418:	cmp	x0, x1
    a41c:	b.eq	a57c <PySequence_Fast@plt+0x633c>  // b.none
    a420:	bl	4160 <PyType_IsSubtype@plt>
    a424:	cbnz	w0, a57c <PySequence_Fast@plt+0x633c>
    a428:	ldr	x0, [x20]
    a42c:	bl	41e0 <PyNumber_Index@plt>
    a430:	mov	x22, x0
    a434:	cbz	x0, a534 <PySequence_Fast@plt+0x62f4>
    a438:	bl	3eb0 <PyLong_AsSsize_t@plt>
    a43c:	mov	x19, x0
    a440:	ldr	x1, [x22]
    a444:	sub	x0, x1, #0x1
    a448:	str	x0, [x22]
    a44c:	cbz	x0, a5ac <PySequence_Fast@plt+0x636c>
    a450:	cmn	x19, #0x1
    a454:	b.eq	a534 <PySequence_Fast@plt+0x62f4>  // b.none
    a458:	str	x23, [sp, #48]
    a45c:	ldr	x22, [x20, #8]
    a460:	adrp	x23, 22000 <PyInit__elementtree@@Base+0x14168>
    a464:	add	x23, x23, #0x328
    a468:	ldr	x0, [x22, #8]
    a46c:	cmp	x0, x23
    a470:	b.eq	a484 <PySequence_Fast@plt+0x6244>  // b.none
    a474:	mov	x1, x23
    a478:	bl	4160 <PyType_IsSubtype@plt>
    a47c:	cbz	w0, a60c <PySequence_Fast@plt+0x63cc>
    a480:	ldr	x22, [x20, #8]
    a484:	ldr	x0, [x21, #40]
    a488:	cbz	x0, a5b8 <PySequence_Fast@plt+0x6378>
    a48c:	ldr	x0, [x0, #8]
    a490:	tbz	x19, #63, a49c <PySequence_Fast@plt+0x625c>
    a494:	adds	x19, x19, x0
    a498:	csel	x19, x19, xzr, pl  // pl = nfrst
    a49c:	cmp	x19, x0
    a4a0:	mov	x1, #0x1                   	// #1
    a4a4:	csel	x19, x19, x0, le
    a4a8:	mov	x0, x21
    a4ac:	bl	9680 <PySequence_Fast@plt+0x5440>
    a4b0:	tbnz	w0, #31, a600 <PySequence_Fast@plt+0x63c0>
    a4b4:	ldr	x21, [x21, #40]
    a4b8:	ldr	x2, [x21, #8]
    a4bc:	ldr	x20, [x21, #24]
    a4c0:	cmp	x19, x2
    a4c4:	b.ge	a4e8 <PySequence_Fast@plt+0x62a8>  // b.tcont
    a4c8:	add	x0, x19, #0x1
    a4cc:	sub	x2, x2, x19
    a4d0:	lsl	x0, x0, #3
    a4d4:	lsl	x2, x2, #3
    a4d8:	sub	x1, x0, #0x8
    a4dc:	add	x0, x20, x0
    a4e0:	add	x1, x20, x1
    a4e4:	bl	3c40 <memmove@plt>
    a4e8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    a4ec:	ldr	x1, [x22]
    a4f0:	ldr	x0, [x0, #3976]
    a4f4:	add	x1, x1, #0x1
    a4f8:	ldr	x23, [sp, #48]
    a4fc:	str	x1, [x22]
    a500:	str	x22, [x20, x19, lsl #3]
    a504:	mov	x20, x0
    a508:	ldr	x2, [x0]
    a50c:	ldr	x1, [x21, #8]
    a510:	add	x2, x2, #0x1
    a514:	str	x2, [x0]
    a518:	add	x0, x1, #0x1
    a51c:	str	x0, [x21, #8]
    a520:	mov	x0, x20
    a524:	ldp	x19, x20, [sp, #16]
    a528:	ldp	x21, x22, [sp, #32]
    a52c:	ldp	x29, x30, [sp], #64
    a530:	ret
    a534:	bl	3f80 <PyErr_Occurred@plt>
    a538:	cbnz	x0, a564 <PySequence_Fast@plt+0x6324>
    a53c:	mov	x19, #0xffffffffffffffff    	// #-1
    a540:	str	x23, [sp, #48]
    a544:	b	a45c <PySequence_Fast@plt+0x621c>
    a548:	mov	x1, x2
    a54c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    a550:	mov	x3, #0x2                   	// #2
    a554:	add	x0, x0, #0x698
    a558:	mov	x2, x3
    a55c:	bl	3f60 <_PyArg_CheckPositional@plt>
    a560:	cbnz	w0, a408 <PySequence_Fast@plt+0x61c8>
    a564:	mov	x20, #0x0                   	// #0
    a568:	mov	x0, x20
    a56c:	ldp	x19, x20, [sp, #16]
    a570:	ldp	x21, x22, [sp, #32]
    a574:	ldp	x29, x30, [sp], #64
    a578:	ret
    a57c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    a580:	mov	x20, #0x0                   	// #0
    a584:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    a588:	add	x1, x1, #0x6a0
    a58c:	ldr	x0, [x0, #3944]
    a590:	ldr	x0, [x0]
    a594:	bl	3de0 <PyErr_SetString@plt>
    a598:	mov	x0, x20
    a59c:	ldp	x19, x20, [sp, #16]
    a5a0:	ldp	x21, x22, [sp, #32]
    a5a4:	ldp	x29, x30, [sp], #64
    a5a8:	ret
    a5ac:	mov	x0, x22
    a5b0:	bl	3d70 <_Py_Dealloc@plt>
    a5b4:	b	a450 <PySequence_Fast@plt+0x6210>
    a5b8:	mov	x0, #0x40                  	// #64
    a5bc:	bl	3e00 <PyObject_Malloc@plt>
    a5c0:	str	x0, [x21, #40]
    a5c4:	mov	x20, x0
    a5c8:	cbz	x0, a634 <PySequence_Fast@plt+0x63f4>
    a5cc:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    a5d0:	add	x2, x0, #0x20
    a5d4:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    a5d8:	str	x2, [x20, #24]
    a5dc:	ldr	x1, [x1, #3976]
    a5e0:	ldr	q0, [x0, #3120]
    a5e4:	mov	x0, #0x0                   	// #0
    a5e8:	ldr	x2, [x1]
    a5ec:	stur	q0, [x20, #8]
    a5f0:	add	x2, x2, #0x1
    a5f4:	str	x2, [x1]
    a5f8:	str	x1, [x20]
    a5fc:	b	a490 <PySequence_Fast@plt+0x6250>
    a600:	mov	x20, #0x0                   	// #0
    a604:	ldr	x23, [sp, #48]
    a608:	b	a568 <PySequence_Fast@plt+0x6328>
    a60c:	ldr	x3, [x20, #8]
    a610:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    a614:	ldr	x2, [x23, #24]
    a618:	add	x1, x1, #0x6c8
    a61c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    a620:	mov	x20, #0x0                   	// #0
    a624:	add	x0, x0, #0x698
    a628:	bl	3ed0 <_PyArg_BadArgument@plt>
    a62c:	ldr	x23, [sp, #48]
    a630:	b	a520 <PySequence_Fast@plt+0x62e0>
    a634:	bl	3d80 <PyErr_NoMemory@plt>
    a638:	ldr	x23, [sp, #48]
    a63c:	b	a520 <PySequence_Fast@plt+0x62e0>
    a640:	stp	x29, x30, [sp, #-48]!
    a644:	mov	x29, sp
    a648:	stp	x19, x20, [sp, #16]
    a64c:	mov	x19, x0
    a650:	mov	x20, x1
    a654:	ldr	x0, [x0, #48]
    a658:	cbz	x0, a73c <PySequence_Fast@plt+0x64fc>
    a65c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    a660:	ldr	x2, [x0, #8]
    a664:	ldr	x1, [x1, #3912]
    a668:	cmp	x2, x1
    a66c:	b.eq	a6d0 <PySequence_Fast@plt+0x6490>  // b.none
    a670:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    a674:	ldr	x1, [x1, #4064]
    a678:	cmp	x2, x1
    a67c:	b.eq	a728 <PySequence_Fast@plt+0x64e8>  // b.none
    a680:	mov	x0, #0x2                   	// #2
    a684:	bl	3c50 <PyList_New@plt>
    a688:	cbz	x0, a768 <PySequence_Fast@plt+0x6528>
    a68c:	ldr	x3, [x0, #24]
    a690:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    a694:	ldr	x1, [x20]
    a698:	ldr	x4, [x19, #48]
    a69c:	str	x4, [x3]
    a6a0:	add	x1, x1, #0x1
    a6a4:	str	x1, [x20]
    a6a8:	str	x20, [x3, #8]
    a6ac:	str	x0, [x19, #48]
    a6b0:	ldr	x1, [x2, #3976]
    a6b4:	mov	x0, x1
    a6b8:	ldr	x2, [x1]
    a6bc:	add	x2, x2, #0x1
    a6c0:	str	x2, [x1]
    a6c4:	ldp	x19, x20, [sp, #16]
    a6c8:	ldp	x29, x30, [sp], #48
    a6cc:	ret
    a6d0:	ldr	x1, [x0]
    a6d4:	cmp	x1, #0x1
    a6d8:	b.ne	a670 <PySequence_Fast@plt+0x6430>  // b.any
    a6dc:	ldr	x1, [x20, #8]
    a6e0:	cmp	x1, x2
    a6e4:	b.ne	a670 <PySequence_Fast@plt+0x6430>  // b.any
    a6e8:	ldr	x1, [x20, #16]
    a6ec:	cmp	x1, #0x1
    a6f0:	b.ne	a670 <PySequence_Fast@plt+0x6430>  // b.any
    a6f4:	str	x21, [sp, #32]
    a6f8:	ldr	x21, [x0, #16]
    a6fc:	add	x0, x19, #0x30
    a700:	add	x1, x21, #0x1
    a704:	bl	3ca0 <_PyBytes_Resize@plt>
    a708:	tbnz	w0, #31, a764 <PySequence_Fast@plt+0x6524>
    a70c:	ldr	x0, [x19, #48]
    a710:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    a714:	ldrb	w1, [x20, #32]
    a718:	add	x0, x0, x21
    a71c:	strb	w1, [x0, #32]
    a720:	ldr	x21, [sp, #32]
    a724:	b	a6b0 <PySequence_Fast@plt+0x6470>
    a728:	mov	x1, x20
    a72c:	bl	3f00 <PyList_Append@plt>
    a730:	tbnz	w0, #31, a768 <PySequence_Fast@plt+0x6528>
    a734:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    a738:	b	a6b0 <PySequence_Fast@plt+0x6470>
    a73c:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    a740:	ldr	x0, [x19, #32]
    a744:	ldr	x1, [x2, #3976]
    a748:	cmp	x0, x1
    a74c:	b.eq	a770 <PySequence_Fast@plt+0x6530>  // b.none
    a750:	ldr	x0, [x20]
    a754:	add	x0, x0, #0x1
    a758:	str	x0, [x20]
    a75c:	str	x20, [x19, #48]
    a760:	b	a6b0 <PySequence_Fast@plt+0x6470>
    a764:	ldr	x21, [sp, #32]
    a768:	mov	x0, #0x0                   	// #0
    a76c:	b	a6c4 <PySequence_Fast@plt+0x6484>
    a770:	ldr	x1, [x0]
    a774:	add	x1, x1, #0x1
    a778:	str	x1, [x0]
    a77c:	b	a6c4 <PySequence_Fast@plt+0x6484>
    a780:	stp	x29, x30, [sp, #-96]!
    a784:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    a788:	mov	x29, sp
    a78c:	ldr	x2, [x2, #3976]
    a790:	stp	x19, x20, [sp, #16]
    a794:	mov	x19, x0
    a798:	cmp	x0, x2
    a79c:	ldr	x3, [x0]
    a7a0:	b.eq	a85c <PySequence_Fast@plt+0x661c>  // b.none
    a7a4:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    a7a8:	ldr	x2, [x0, #8]
    a7ac:	ldr	x20, [x20, #4032]
    a7b0:	cmp	x2, x20
    a7b4:	b.eq	a85c <PySequence_Fast@plt+0x661c>  // b.none
    a7b8:	stp	x21, x22, [sp, #32]
    a7bc:	cmp	x3, #0x1
    a7c0:	mov	x21, x1
    a7c4:	b.ne	a7e8 <PySequence_Fast@plt+0x65a8>  // b.any
    a7c8:	adrp	x3, 21000 <PyInit__elementtree@@Base+0x13168>
    a7cc:	ldr	x3, [x3, #3992]
    a7d0:	cmp	x2, x3
    a7d4:	b.eq	a8a4 <PySequence_Fast@plt+0x6664>  // b.none
    a7d8:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    a7dc:	add	x3, x3, #0x328
    a7e0:	cmp	x2, x3
    a7e4:	b.eq	a934 <PySequence_Fast@plt+0x66f4>  // b.none
    a7e8:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    a7ec:	add	x0, x0, #0x9c0
    a7f0:	add	x0, x0, #0x40
    a7f4:	bl	3fc0 <PyState_FindModule@plt>
    a7f8:	bl	3e10 <PyModule_GetState@plt>
    a7fc:	ldr	x20, [x0, #8]
    a800:	cbz	x20, a914 <PySequence_Fast@plt+0x66d4>
    a804:	ldr	x0, [x20, #8]
    a808:	ldr	x1, [x0, #168]
    a80c:	ldr	x0, [x0, #56]
    a810:	stp	x19, x21, [sp, #80]
    a814:	tbz	w1, #11, a878 <PySequence_Fast@plt+0x6638>
    a818:	ldr	x4, [x20, x0]
    a81c:	cbz	x4, a878 <PySequence_Fast@plt+0x6638>
    a820:	mov	x3, #0x0                   	// #0
    a824:	add	x1, sp, #0x50
    a828:	mov	x0, x20
    a82c:	mov	x2, #0x2                   	// #2
    a830:	blr	x4
    a834:	mov	x1, x0
    a838:	mov	x2, #0x0                   	// #0
    a83c:	mov	x0, x20
    a840:	bl	4020 <_Py_CheckFunctionResult@plt>
    a844:	mov	x20, x0
    a848:	ldp	x21, x22, [sp, #32]
    a84c:	mov	x0, x20
    a850:	ldp	x19, x20, [sp, #16]
    a854:	ldp	x29, x30, [sp], #96
    a858:	ret
    a85c:	add	x3, x3, #0x1
    a860:	str	x3, [x19]
    a864:	mov	x20, x19
    a868:	mov	x0, x20
    a86c:	ldp	x19, x20, [sp, #16]
    a870:	ldp	x29, x30, [sp], #96
    a874:	ret
    a878:	add	x1, sp, #0x50
    a87c:	mov	x0, x20
    a880:	mov	x3, #0x0                   	// #0
    a884:	mov	x2, #0x2                   	// #2
    a888:	bl	41d0 <_PyObject_MakeTpCall@plt>
    a88c:	mov	x20, x0
    a890:	mov	x0, x20
    a894:	ldp	x19, x20, [sp, #16]
    a898:	ldp	x21, x22, [sp, #32]
    a89c:	ldp	x29, x30, [sp], #96
    a8a0:	ret
    a8a4:	add	x22, sp, #0x50
    a8a8:	stp	x23, x24, [sp, #48]
    a8ac:	add	x24, sp, #0x48
    a8b0:	add	x23, sp, #0x40
    a8b4:	str	xzr, [sp, #80]
    a8b8:	b	a8dc <PySequence_Fast@plt+0x669c>
    a8bc:	ldr	x0, [sp, #64]
    a8c0:	ldr	x0, [x0, #8]
    a8c4:	cmp	x0, x20
    a8c8:	b.ne	a90c <PySequence_Fast@plt+0x66cc>  // b.any
    a8cc:	ldr	x0, [sp, #72]
    a8d0:	ldr	x0, [x0, #8]
    a8d4:	cmp	x0, x20
    a8d8:	b.ne	a90c <PySequence_Fast@plt+0x66cc>  // b.any
    a8dc:	mov	x3, x24
    a8e0:	mov	x2, x23
    a8e4:	mov	x1, x22
    a8e8:	mov	x0, x19
    a8ec:	bl	40b0 <PyDict_Next@plt>
    a8f0:	cbnz	w0, a8bc <PySequence_Fast@plt+0x667c>
    a8f4:	mov	x0, x19
    a8f8:	bl	4150 <PyDict_Copy@plt>
    a8fc:	mov	x20, x0
    a900:	ldp	x21, x22, [sp, #32]
    a904:	ldp	x23, x24, [sp, #48]
    a908:	b	a84c <PySequence_Fast@plt+0x660c>
    a90c:	ldp	x23, x24, [sp, #48]
    a910:	b	a7e8 <PySequence_Fast@plt+0x65a8>
    a914:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    a918:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    a91c:	add	x1, x1, #0x6d8
    a920:	ldr	x0, [x0, #3920]
    a924:	ldr	x0, [x0]
    a928:	bl	3de0 <PyErr_SetString@plt>
    a92c:	ldp	x21, x22, [sp, #32]
    a930:	b	a84c <PySequence_Fast@plt+0x660c>
    a934:	bl	a948 <PySequence_Fast@plt+0x6708>
    a938:	mov	x20, x0
    a93c:	ldp	x21, x22, [sp, #32]
    a940:	b	a84c <PySequence_Fast@plt+0x660c>
    a944:	nop
    a948:	stp	x29, x30, [sp, #-80]!
    a94c:	mov	x29, sp
    a950:	stp	x21, x22, [sp, #32]
    a954:	mov	x22, x0
    a958:	ldr	x0, [x0, #16]
    a95c:	stp	x23, x24, [sp, #48]
    a960:	mov	x23, x1
    a964:	bl	a780 <PySequence_Fast@plt+0x6540>
    a968:	cbz	x0, aaec <PySequence_Fast@plt+0x68ac>
    a96c:	stp	x19, x20, [sp, #16]
    a970:	mov	x19, x0
    a974:	ldr	x0, [x22, #40]
    a978:	cbz	x0, ab04 <PySequence_Fast@plt+0x68c4>
    a97c:	ldr	x0, [x0]
    a980:	mov	x1, x23
    a984:	bl	a780 <PySequence_Fast@plt+0x6540>
    a988:	mov	x20, x0
    a98c:	cbz	x0, ac44 <PySequence_Fast@plt+0x6a04>
    a990:	mov	x1, x20
    a994:	mov	x0, x19
    a998:	bl	8518 <PySequence_Fast@plt+0x42d8>
    a99c:	mov	x21, x0
    a9a0:	ldr	x1, [x19]
    a9a4:	sub	x0, x1, #0x1
    a9a8:	str	x0, [x19]
    a9ac:	cbz	x0, ab3c <PySequence_Fast@plt+0x68fc>
    a9b0:	ldr	x0, [x20]
    a9b4:	sub	x0, x0, #0x1
    a9b8:	str	x0, [x20]
    a9bc:	cbz	x0, ab54 <PySequence_Fast@plt+0x6914>
    a9c0:	cbz	x21, aae8 <PySequence_Fast@plt+0x68a8>
    a9c4:	ldr	x0, [x22, #24]
    a9c8:	mov	x1, x23
    a9cc:	and	x0, x0, #0xfffffffffffffffe
    a9d0:	bl	a780 <PySequence_Fast@plt+0x6540>
    a9d4:	mov	x1, x0
    a9d8:	cbz	x0, aad8 <PySequence_Fast@plt+0x6898>
    a9dc:	ldr	x0, [x21, #24]
    a9e0:	ldr	x3, [x22, #24]
    a9e4:	and	x0, x0, #0xfffffffffffffffe
    a9e8:	ldr	x2, [x0]
    a9ec:	bfxil	x1, x3, #0, #1
    a9f0:	str	x1, [x21, #24]
    a9f4:	sub	x1, x2, #0x1
    a9f8:	str	x1, [x0]
    a9fc:	cbz	x1, abe0 <PySequence_Fast@plt+0x69a0>
    aa00:	ldr	x0, [x22, #32]
    aa04:	mov	x1, x23
    aa08:	and	x0, x0, #0xfffffffffffffffe
    aa0c:	bl	a780 <PySequence_Fast@plt+0x6540>
    aa10:	mov	x1, x0
    aa14:	cbz	x0, aad8 <PySequence_Fast@plt+0x6898>
    aa18:	ldr	x0, [x21, #32]
    aa1c:	ldr	x3, [x22, #32]
    aa20:	and	x0, x0, #0xfffffffffffffffe
    aa24:	ldr	x2, [x0]
    aa28:	bfxil	x1, x3, #0, #1
    aa2c:	str	x1, [x21, #32]
    aa30:	sub	x1, x2, #0x1
    aa34:	str	x1, [x0]
    aa38:	cbz	x1, abf4 <PySequence_Fast@plt+0x69b4>
    aa3c:	ldr	x0, [x22, #40]
    aa40:	cbz	x0, ab90 <PySequence_Fast@plt+0x6950>
    aa44:	ldr	x1, [x0, #8]
    aa48:	mov	x0, x21
    aa4c:	bl	9680 <PySequence_Fast@plt+0x5440>
    aa50:	tbnz	w0, #31, aad8 <PySequence_Fast@plt+0x6898>
    aa54:	ldr	x0, [x22, #40]
    aa58:	ldr	x1, [x0, #8]
    aa5c:	cmp	x1, #0x0
    aa60:	b.le	ab84 <PySequence_Fast@plt+0x6944>
    aa64:	adrp	x24, 22000 <PyInit__elementtree@@Base+0x14168>
    aa68:	mov	x20, #0x0                   	// #0
    aa6c:	add	x24, x24, #0x328
    aa70:	str	x25, [sp, #64]
    aa74:	b	aab0 <PySequence_Fast@plt+0x6870>
    aa78:	ldr	x0, [x0, #8]
    aa7c:	mov	x1, x24
    aa80:	cmp	x0, x24
    aa84:	b.eq	aa90 <PySequence_Fast@plt+0x6850>  // b.none
    aa88:	bl	4160 <PyType_IsSubtype@plt>
    aa8c:	cbz	w0, ac08 <PySequence_Fast@plt+0x69c8>
    aa90:	ldr	x2, [x21, #40]
    aa94:	add	x20, x20, #0x1
    aa98:	ldr	x0, [x22, #40]
    aa9c:	ldr	x3, [x2, #24]
    aaa0:	ldr	x1, [x0, #8]
    aaa4:	str	x19, [x3, x25]
    aaa8:	cmp	x1, x20
    aaac:	b.le	abfc <PySequence_Fast@plt+0x69bc>
    aab0:	ldr	x0, [x0, #24]
    aab4:	mov	x1, x23
    aab8:	lsl	x25, x20, #3
    aabc:	ldr	x0, [x0, x20, lsl #3]
    aac0:	bl	a780 <PySequence_Fast@plt+0x6540>
    aac4:	mov	x19, x0
    aac8:	cbnz	x0, aa78 <PySequence_Fast@plt+0x6838>
    aacc:	ldr	x0, [x21, #40]
    aad0:	ldr	x25, [sp, #64]
    aad4:	str	x20, [x0, #8]
    aad8:	ldr	x0, [x21]
    aadc:	sub	x0, x0, #0x1
    aae0:	str	x0, [x21]
    aae4:	cbz	x0, ab60 <PySequence_Fast@plt+0x6920>
    aae8:	ldp	x19, x20, [sp, #16]
    aaec:	mov	x21, #0x0                   	// #0
    aaf0:	mov	x0, x21
    aaf4:	ldp	x21, x22, [sp, #32]
    aaf8:	ldp	x23, x24, [sp, #48]
    aafc:	ldp	x29, x30, [sp], #80
    ab00:	ret
    ab04:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    ab08:	ldr	x0, [x0, #3976]
    ab0c:	mov	x20, x0
    ab10:	ldr	x1, [x0]
    ab14:	add	x1, x1, #0x1
    ab18:	str	x1, [x0]
    ab1c:	mov	x1, x20
    ab20:	mov	x0, x19
    ab24:	bl	8518 <PySequence_Fast@plt+0x42d8>
    ab28:	mov	x21, x0
    ab2c:	ldr	x1, [x19]
    ab30:	sub	x0, x1, #0x1
    ab34:	str	x0, [x19]
    ab38:	cbnz	x0, a9b0 <PySequence_Fast@plt+0x6770>
    ab3c:	mov	x0, x19
    ab40:	bl	3d70 <_Py_Dealloc@plt>
    ab44:	ldr	x0, [x20]
    ab48:	sub	x0, x0, #0x1
    ab4c:	str	x0, [x20]
    ab50:	cbnz	x0, a9c0 <PySequence_Fast@plt+0x6780>
    ab54:	mov	x0, x20
    ab58:	bl	3d70 <_Py_Dealloc@plt>
    ab5c:	b	a9c0 <PySequence_Fast@plt+0x6780>
    ab60:	mov	x0, x21
    ab64:	mov	x21, #0x0                   	// #0
    ab68:	bl	3d70 <_Py_Dealloc@plt>
    ab6c:	mov	x0, x21
    ab70:	ldp	x19, x20, [sp, #16]
    ab74:	ldp	x21, x22, [sp, #32]
    ab78:	ldp	x23, x24, [sp, #48]
    ab7c:	ldp	x29, x30, [sp], #80
    ab80:	ret
    ab84:	ldr	x2, [x21, #40]
    ab88:	str	x1, [x2, #8]
    ab8c:	nop
    ab90:	mov	x0, x22
    ab94:	bl	3e70 <PyLong_FromSsize_t@plt>
    ab98:	mov	x19, x0
    ab9c:	cbz	x0, aad8 <PySequence_Fast@plt+0x6898>
    aba0:	mov	x1, x19
    aba4:	mov	x0, x23
    aba8:	mov	x2, x21
    abac:	bl	4140 <PyDict_SetItem@plt>
    abb0:	ldr	x1, [x19]
    abb4:	mov	w20, w0
    abb8:	sub	x1, x1, #0x1
    abbc:	str	x1, [x19]
    abc0:	cbz	x1, abe8 <PySequence_Fast@plt+0x69a8>
    abc4:	tbnz	w20, #31, aad8 <PySequence_Fast@plt+0x6898>
    abc8:	mov	x0, x21
    abcc:	ldp	x19, x20, [sp, #16]
    abd0:	ldp	x21, x22, [sp, #32]
    abd4:	ldp	x23, x24, [sp, #48]
    abd8:	ldp	x29, x30, [sp], #80
    abdc:	ret
    abe0:	bl	3d70 <_Py_Dealloc@plt>
    abe4:	b	aa00 <PySequence_Fast@plt+0x67c0>
    abe8:	mov	x0, x19
    abec:	bl	3d70 <_Py_Dealloc@plt>
    abf0:	b	abc4 <PySequence_Fast@plt+0x6984>
    abf4:	bl	3d70 <_Py_Dealloc@plt>
    abf8:	b	aa3c <PySequence_Fast@plt+0x67fc>
    abfc:	ldr	x25, [sp, #64]
    ac00:	str	x1, [x2, #8]
    ac04:	b	ab90 <PySequence_Fast@plt+0x6950>
    ac08:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    ac0c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    ac10:	ldr	x2, [x19, #8]
    ac14:	add	x1, x1, #0x188
    ac18:	ldr	x0, [x0, #3944]
    ac1c:	ldr	x2, [x2, #24]
    ac20:	ldr	x0, [x0]
    ac24:	bl	4180 <PyErr_Format@plt>
    ac28:	ldr	x0, [x19]
    ac2c:	sub	x0, x0, #0x1
    ac30:	str	x0, [x19]
    ac34:	cbnz	x0, aacc <PySequence_Fast@plt+0x688c>
    ac38:	mov	x0, x19
    ac3c:	bl	3d70 <_Py_Dealloc@plt>
    ac40:	b	aacc <PySequence_Fast@plt+0x688c>
    ac44:	ldr	x0, [x19]
    ac48:	sub	x0, x0, #0x1
    ac4c:	str	x0, [x19]
    ac50:	cbnz	x0, aae8 <PySequence_Fast@plt+0x68a8>
    ac54:	mov	x0, x19
    ac58:	mov	x21, #0x0                   	// #0
    ac5c:	bl	3d70 <_Py_Dealloc@plt>
    ac60:	ldp	x19, x20, [sp, #16]
    ac64:	b	aaf0 <PySequence_Fast@plt+0x68b0>
    ac68:	ldr	x2, [x1, #8]
    ac6c:	ldr	x2, [x2, #168]
    ac70:	tbz	w2, #29, ac78 <PySequence_Fast@plt+0x6a38>
    ac74:	b	a948 <PySequence_Fast@plt+0x6708>
    ac78:	stp	x29, x30, [sp, #-16]!
    ac7c:	mov	x3, x1
    ac80:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    ac84:	mov	x29, sp
    ac88:	add	x2, x2, #0x6f8
    ac8c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    ac90:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    ac94:	add	x1, x1, #0x410
    ac98:	add	x0, x0, #0x700
    ac9c:	bl	3ed0 <_PyArg_BadArgument@plt>
    aca0:	mov	x0, #0x0                   	// #0
    aca4:	ldp	x29, x30, [sp], #16
    aca8:	ret
    acac:	nop
    acb0:	stp	x29, x30, [sp, #-80]!
    acb4:	adrp	x4, 22000 <PyInit__elementtree@@Base+0x14168>
    acb8:	add	x4, x4, #0x9c0
    acbc:	mov	x29, sp
    acc0:	stp	x19, x20, [sp, #16]
    acc4:	mov	x20, x1
    acc8:	mov	x19, x3
    accc:	stp	x21, x22, [sp, #32]
    acd0:	mov	x21, x2
    acd4:	mov	w22, w0
    acd8:	add	x0, x4, #0x40
    acdc:	str	x23, [sp, #48]
    ace0:	bl	3fc0 <PyState_FindModule@plt>
    ace4:	bl	3e10 <PyModule_GetState@plt>
    ace8:	mov	x23, x0
    acec:	cbz	x19, ae44 <PySequence_Fast@plt+0x6c04>
    acf0:	mov	x1, x19
    acf4:	mov	x3, x21
    acf8:	mov	x2, x20
    acfc:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    ad00:	add	x0, x0, #0x710
    ad04:	bl	3c30 <PyUnicode_FromFormat@plt>
    ad08:	str	x0, [sp, #72]
    ad0c:	cbz	x0, ae0c <PySequence_Fast@plt+0x6bcc>
    ad10:	ldr	x19, [x23]
    ad14:	ldr	x0, [x19, #8]
    ad18:	ldr	x1, [x0, #168]
    ad1c:	ldr	x0, [x0, #56]
    ad20:	tbz	w1, #11, ae28 <PySequence_Fast@plt+0x6be8>
    ad24:	ldr	x4, [x19, x0]
    ad28:	cbz	x4, ae28 <PySequence_Fast@plt+0x6be8>
    ad2c:	mov	x3, #0x0                   	// #0
    ad30:	add	x1, sp, #0x48
    ad34:	mov	x0, x19
    ad38:	mov	x2, #0x1                   	// #1
    ad3c:	blr	x4
    ad40:	mov	x1, x0
    ad44:	mov	x2, #0x0                   	// #0
    ad48:	mov	x0, x19
    ad4c:	bl	4020 <_Py_CheckFunctionResult@plt>
    ad50:	mov	x19, x0
    ad54:	ldr	x0, [sp, #72]
    ad58:	ldr	x1, [x0]
    ad5c:	sub	x1, x1, #0x1
    ad60:	str	x1, [x0]
    ad64:	cbz	x1, ae20 <PySequence_Fast@plt+0x6be0>
    ad68:	cbz	x19, ae0c <PySequence_Fast@plt+0x6bcc>
    ad6c:	mov	w0, w22
    ad70:	bl	3ea0 <PyLong_FromLong@plt>
    ad74:	mov	x22, x0
    ad78:	cbz	x0, adfc <PySequence_Fast@plt+0x6bbc>
    ad7c:	mov	x2, x0
    ad80:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    ad84:	mov	x0, x19
    ad88:	add	x1, x1, #0x730
    ad8c:	bl	3d50 <PyObject_SetAttrString@plt>
    ad90:	cmn	w0, #0x1
    ad94:	b.eq	ae88 <PySequence_Fast@plt+0x6c48>  // b.none
    ad98:	ldr	x0, [x22]
    ad9c:	sub	x0, x0, #0x1
    ada0:	str	x0, [x22]
    ada4:	cbz	x0, ae7c <PySequence_Fast@plt+0x6c3c>
    ada8:	mov	x1, x20
    adac:	mov	x2, x21
    adb0:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    adb4:	add	x0, x0, #0x738
    adb8:	bl	4190 <_Py_BuildValue_SizeT@plt>
    adbc:	mov	x20, x0
    adc0:	cbz	x0, adfc <PySequence_Fast@plt+0x6bbc>
    adc4:	mov	x2, x0
    adc8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    adcc:	mov	x0, x19
    add0:	add	x1, x1, #0x740
    add4:	bl	3d50 <PyObject_SetAttrString@plt>
    add8:	cmn	w0, #0x1
    addc:	b.eq	aecc <PySequence_Fast@plt+0x6c8c>  // b.none
    ade0:	ldr	x0, [x20]
    ade4:	sub	x0, x0, #0x1
    ade8:	str	x0, [x20]
    adec:	cbz	x0, aec0 <PySequence_Fast@plt+0x6c80>
    adf0:	ldr	x0, [x23]
    adf4:	mov	x1, x19
    adf8:	bl	3d90 <PyErr_SetObject@plt>
    adfc:	ldr	x0, [x19]
    ae00:	sub	x0, x0, #0x1
    ae04:	str	x0, [x19]
    ae08:	cbz	x0, ae60 <PySequence_Fast@plt+0x6c20>
    ae0c:	ldp	x19, x20, [sp, #16]
    ae10:	ldp	x21, x22, [sp, #32]
    ae14:	ldr	x23, [sp, #48]
    ae18:	ldp	x29, x30, [sp], #80
    ae1c:	ret
    ae20:	bl	3d70 <_Py_Dealloc@plt>
    ae24:	b	ad68 <PySequence_Fast@plt+0x6b28>
    ae28:	mov	x0, x19
    ae2c:	add	x1, sp, #0x48
    ae30:	mov	x3, #0x0                   	// #0
    ae34:	mov	x2, #0x1                   	// #1
    ae38:	bl	41d0 <_PyObject_MakeTpCall@plt>
    ae3c:	mov	x19, x0
    ae40:	b	ad54 <PySequence_Fast@plt+0x6b14>
    ae44:	adrp	x1, 23000 <PyInit__elementtree@@Base+0x15168>
    ae48:	mov	w0, w22
    ae4c:	ldr	x1, [x1, #1088]
    ae50:	ldr	x1, [x1, #24]
    ae54:	blr	x1
    ae58:	mov	x19, x0
    ae5c:	b	acf0 <PySequence_Fast@plt+0x6ab0>
    ae60:	mov	x0, x19
    ae64:	bl	3d70 <_Py_Dealloc@plt>
    ae68:	ldp	x19, x20, [sp, #16]
    ae6c:	ldp	x21, x22, [sp, #32]
    ae70:	ldr	x23, [sp, #48]
    ae74:	ldp	x29, x30, [sp], #80
    ae78:	ret
    ae7c:	mov	x0, x22
    ae80:	bl	3d70 <_Py_Dealloc@plt>
    ae84:	b	ada8 <PySequence_Fast@plt+0x6b68>
    ae88:	ldr	x0, [x19]
    ae8c:	sub	x0, x0, #0x1
    ae90:	str	x0, [x19]
    ae94:	cbz	x0, aeb4 <PySequence_Fast@plt+0x6c74>
    ae98:	ldr	x0, [x22]
    ae9c:	sub	x0, x0, #0x1
    aea0:	str	x0, [x22]
    aea4:	cbnz	x0, ae0c <PySequence_Fast@plt+0x6bcc>
    aea8:	mov	x0, x22
    aeac:	bl	3d70 <_Py_Dealloc@plt>
    aeb0:	b	ae0c <PySequence_Fast@plt+0x6bcc>
    aeb4:	mov	x0, x19
    aeb8:	bl	3d70 <_Py_Dealloc@plt>
    aebc:	b	ae98 <PySequence_Fast@plt+0x6c58>
    aec0:	mov	x0, x20
    aec4:	bl	3d70 <_Py_Dealloc@plt>
    aec8:	b	adf0 <PySequence_Fast@plt+0x6bb0>
    aecc:	ldr	x0, [x19]
    aed0:	sub	x0, x0, #0x1
    aed4:	str	x0, [x19]
    aed8:	cbz	x0, aef8 <PySequence_Fast@plt+0x6cb8>
    aedc:	ldr	x0, [x20]
    aee0:	sub	x0, x0, #0x1
    aee4:	str	x0, [x20]
    aee8:	cbnz	x0, ae0c <PySequence_Fast@plt+0x6bcc>
    aeec:	mov	x0, x20
    aef0:	bl	3d70 <_Py_Dealloc@plt>
    aef4:	b	ae0c <PySequence_Fast@plt+0x6bcc>
    aef8:	mov	x0, x19
    aefc:	bl	3d70 <_Py_Dealloc@plt>
    af00:	b	aedc <PySequence_Fast@plt+0x6c9c>
    af04:	nop
    af08:	stp	x29, x30, [sp, #-48]!
    af0c:	mov	x29, sp
    af10:	stp	x21, x22, [sp, #32]
    af14:	adrp	x22, 23000 <PyInit__elementtree@@Base+0x15168>
    af18:	ldr	x4, [x22, #1088]
    af1c:	stp	x19, x20, [sp, #16]
    af20:	mov	x20, x0
    af24:	ldr	x0, [x0]
    af28:	mov	x19, #0x0                   	// #0
    af2c:	ldr	x4, [x4, #56]
    af30:	blr	x4
    af34:	mov	w21, w0
    af38:	bl	3f80 <PyErr_Occurred@plt>
    af3c:	cbnz	x0, af5c <PySequence_Fast@plt+0x6d1c>
    af40:	cbz	w21, af70 <PySequence_Fast@plt+0x6d30>
    af44:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    af48:	ldr	x0, [x0, #3976]
    af4c:	mov	x19, x0
    af50:	ldr	x1, [x0]
    af54:	add	x1, x1, #0x1
    af58:	str	x1, [x0]
    af5c:	mov	x0, x19
    af60:	ldp	x19, x20, [sp, #16]
    af64:	ldp	x21, x22, [sp, #32]
    af68:	ldp	x29, x30, [sp], #48
    af6c:	ret
    af70:	ldr	x1, [x22, #1088]
    af74:	mov	x19, x0
    af78:	ldr	x0, [x20]
    af7c:	ldr	x1, [x1, #32]
    af80:	blr	x1
    af84:	mov	w21, w0
    af88:	ldr	x1, [x22, #1088]
    af8c:	ldr	x0, [x20]
    af90:	ldr	x1, [x1, #48]
    af94:	blr	x1
    af98:	ldr	x1, [x22, #1088]
    af9c:	mov	x22, x0
    afa0:	ldr	x0, [x20]
    afa4:	ldr	x1, [x1, #40]
    afa8:	blr	x1
    afac:	mov	x2, x0
    afb0:	mov	x1, x22
    afb4:	mov	w0, w21
    afb8:	mov	x3, #0x0                   	// #0
    afbc:	bl	acb0 <PySequence_Fast@plt+0x6a70>
    afc0:	mov	x0, x19
    afc4:	ldp	x19, x20, [sp, #16]
    afc8:	ldp	x21, x22, [sp, #32]
    afcc:	ldp	x29, x30, [sp], #48
    afd0:	ret
    afd4:	nop
    afd8:	stp	x29, x30, [sp, #-128]!
    afdc:	mov	x29, sp
    afe0:	ldr	x2, [x1, #8]
    afe4:	stp	x19, x20, [sp, #16]
    afe8:	mov	x20, x0
    afec:	ldr	x2, [x2, #168]
    aff0:	tbz	w2, #28, b05c <PySequence_Fast@plt+0x6e1c>
    aff4:	mov	x0, x1
    aff8:	add	x1, sp, #0x30
    affc:	bl	4170 <PyUnicode_AsUTF8AndSize@plt>
    b000:	mov	x19, x0
    b004:	cbz	x0, b04c <PySequence_Fast@plt+0x6e0c>
    b008:	ldr	x1, [sp, #48]
    b00c:	mov	x0, #0x7fffffff            	// #2147483647
    b010:	cmp	x1, x0
    b014:	b.gt	b104 <PySequence_Fast@plt+0x6ec4>
    b018:	adrp	x0, 23000 <PyInit__elementtree@@Base+0x15168>
    b01c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b020:	add	x1, x1, #0x770
    b024:	ldr	x2, [x0, #1088]
    b028:	ldr	x0, [x20, #16]!
    b02c:	ldr	x2, [x2, #152]
    b030:	blr	x2
    b034:	ldr	w2, [sp, #48]
    b038:	mov	x1, x19
    b03c:	mov	x0, x20
    b040:	mov	w3, #0x0                   	// #0
    b044:	bl	af08 <PySequence_Fast@plt+0x6cc8>
    b048:	mov	x19, x0
    b04c:	mov	x0, x19
    b050:	ldp	x19, x20, [sp, #16]
    b054:	ldp	x29, x30, [sp], #128
    b058:	ret
    b05c:	str	x21, [sp, #32]
    b060:	add	x21, sp, #0x30
    b064:	mov	x0, x1
    b068:	mov	w2, #0x0                   	// #0
    b06c:	mov	x1, x21
    b070:	mov	x19, #0x0                   	// #0
    b074:	bl	40a0 <PyObject_GetBuffer@plt>
    b078:	tbnz	w0, #31, b0f0 <PySequence_Fast@plt+0x6eb0>
    b07c:	ldr	x2, [sp, #64]
    b080:	mov	x0, #0x7fffffff            	// #2147483647
    b084:	cmp	x2, x0
    b088:	b.le	b0c0 <PySequence_Fast@plt+0x6e80>
    b08c:	mov	x0, x21
    b090:	bl	3ce0 <PyBuffer_Release@plt>
    b094:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    b098:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b09c:	add	x1, x1, #0x750
    b0a0:	ldr	x0, [x0, #3968]
    b0a4:	ldr	x0, [x0]
    b0a8:	bl	3de0 <PyErr_SetString@plt>
    b0ac:	mov	x0, x19
    b0b0:	ldp	x19, x20, [sp, #16]
    b0b4:	ldr	x21, [sp, #32]
    b0b8:	ldp	x29, x30, [sp], #128
    b0bc:	ret
    b0c0:	ldr	x1, [sp, #48]
    b0c4:	mov	w3, #0x0                   	// #0
    b0c8:	add	x0, x20, #0x10
    b0cc:	bl	af08 <PySequence_Fast@plt+0x6cc8>
    b0d0:	mov	x19, x0
    b0d4:	mov	x0, x21
    b0d8:	bl	3ce0 <PyBuffer_Release@plt>
    b0dc:	mov	x0, x19
    b0e0:	ldp	x19, x20, [sp, #16]
    b0e4:	ldr	x21, [sp, #32]
    b0e8:	ldp	x29, x30, [sp], #128
    b0ec:	ret
    b0f0:	mov	x0, x19
    b0f4:	ldp	x19, x20, [sp, #16]
    b0f8:	ldr	x21, [sp, #32]
    b0fc:	ldp	x29, x30, [sp], #128
    b100:	ret
    b104:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    b108:	mov	x19, #0x0                   	// #0
    b10c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b110:	add	x1, x1, #0x750
    b114:	ldr	x0, [x0, #3968]
    b118:	ldr	x0, [x0]
    b11c:	bl	3de0 <PyErr_SetString@plt>
    b120:	mov	x0, x19
    b124:	ldp	x19, x20, [sp, #16]
    b128:	ldp	x29, x30, [sp], #128
    b12c:	ret
    b130:	stp	x29, x30, [sp, #-208]!
    b134:	mov	x29, sp
    b138:	stp	x19, x20, [sp, #16]
    b13c:	sxtw	x19, w2
    b140:	cmp	w19, #0x1
    b144:	b.le	b164 <PySequence_Fast@plt+0x6f24>
    b148:	stp	x21, x22, [sp, #32]
    b14c:	mov	x21, x0
    b150:	mov	x20, x1
    b154:	ldrb	w0, [x1]
    b158:	cmp	w0, #0x26
    b15c:	b.eq	b170 <PySequence_Fast@plt+0x6f30>  // b.none
    b160:	ldp	x21, x22, [sp, #32]
    b164:	ldp	x19, x20, [sp, #16]
    b168:	ldp	x29, x30, [sp], #208
    b16c:	ret
    b170:	bl	3f80 <PyErr_Occurred@plt>
    b174:	cbnz	x0, b160 <PySequence_Fast@plt+0x6f20>
    b178:	sub	w1, w19, #0x2
    b17c:	add	x0, x20, #0x1
    b180:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    b184:	add	x2, x2, #0x2c0
    b188:	sxtw	x1, w1
    b18c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    b190:	mov	x22, x0
    b194:	cbz	x0, b160 <PySequence_Fast@plt+0x6f20>
    b198:	mov	x1, x0
    b19c:	ldr	x0, [x21, #32]
    b1a0:	bl	4230 <PyDict_GetItemWithError@plt>
    b1a4:	str	x0, [sp, #72]
    b1a8:	mov	x1, x0
    b1ac:	cbz	x0, b244 <PySequence_Fast@plt+0x7004>
    b1b0:	ldr	x0, [x21, #24]
    b1b4:	adrp	x2, 22000 <PyInit__elementtree@@Base+0x14168>
    b1b8:	add	x2, x2, #0x328
    b1bc:	add	x2, x2, #0x340
    b1c0:	ldr	x3, [x0, #8]
    b1c4:	cmp	x3, x2
    b1c8:	b.eq	b2f0 <PySequence_Fast@plt+0x70b0>  // b.none
    b1cc:	ldr	x19, [x21, #72]
    b1d0:	cbz	x19, b224 <PySequence_Fast@plt+0x6fe4>
    b1d4:	ldr	x0, [x19, #8]
    b1d8:	ldr	x1, [x0, #168]
    b1dc:	ldr	x0, [x0, #56]
    b1e0:	tbz	w1, #11, b2f8 <PySequence_Fast@plt+0x70b8>
    b1e4:	ldr	x4, [x19, x0]
    b1e8:	cbz	x4, b2f8 <PySequence_Fast@plt+0x70b8>
    b1ec:	mov	x3, #0x0                   	// #0
    b1f0:	add	x1, sp, #0x48
    b1f4:	mov	x2, #0x1                   	// #1
    b1f8:	mov	x0, x19
    b1fc:	blr	x4
    b200:	mov	x1, x0
    b204:	mov	x2, #0x0                   	// #0
    b208:	mov	x0, x19
    b20c:	bl	4020 <_Py_CheckFunctionResult@plt>
    b210:	cbz	x0, b224 <PySequence_Fast@plt+0x6fe4>
    b214:	ldr	x1, [x0]
    b218:	sub	x1, x1, #0x1
    b21c:	str	x1, [x0]
    b220:	cbz	x1, b310 <PySequence_Fast@plt+0x70d0>
    b224:	ldr	x0, [x22]
    b228:	sub	x0, x0, #0x1
    b22c:	str	x0, [x22]
    b230:	cbnz	x0, b160 <PySequence_Fast@plt+0x6f20>
    b234:	mov	x0, x22
    b238:	bl	3d70 <_Py_Dealloc@plt>
    b23c:	ldp	x21, x22, [sp, #32]
    b240:	b	b164 <PySequence_Fast@plt+0x6f24>
    b244:	bl	3f80 <PyErr_Occurred@plt>
    b248:	cbnz	x0, b224 <PySequence_Fast@plt+0x6fe4>
    b24c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    b250:	add	x0, x0, #0xc40
    b254:	cmp	w19, #0x64
    b258:	mov	x2, #0x64                  	// #100
    b25c:	csel	x2, x19, x2, le
    b260:	add	x19, sp, #0x50
    b264:	ldp	x4, x5, [x0]
    b268:	str	x23, [sp, #48]
    b26c:	ldrh	w3, [x0, #16]
    b270:	adrp	x23, 23000 <PyInit__elementtree@@Base+0x15168>
    b274:	strh	w3, [sp, #96]
    b278:	add	x3, sp, #0x2
    b27c:	mov	x1, x20
    b280:	mov	x0, x19
    b284:	stp	x4, x5, [sp, #80]
    b288:	stp	xzr, xzr, [x3, #96]
    b28c:	stp	xzr, xzr, [x3, #112]
    b290:	stp	xzr, xzr, [x3, #128]
    b294:	stp	xzr, xzr, [x3, #144]
    b298:	stp	xzr, xzr, [x3, #160]
    b29c:	stp	xzr, xzr, [x3, #176]
    b2a0:	stur	xzr, [sp, #194]
    b2a4:	stur	wzr, [sp, #202]
    b2a8:	strh	wzr, [sp, #206]
    b2ac:	bl	40d0 <strncat@plt>
    b2b0:	ldr	x1, [x23, #1088]
    b2b4:	ldr	x0, [x21, #16]
    b2b8:	ldr	x1, [x1, #48]
    b2bc:	blr	x1
    b2c0:	mov	x20, x0
    b2c4:	ldr	x1, [x23, #1088]
    b2c8:	ldr	x0, [x21, #16]
    b2cc:	ldr	x1, [x1, #40]
    b2d0:	blr	x1
    b2d4:	mov	x2, x0
    b2d8:	mov	x3, x19
    b2dc:	mov	x1, x20
    b2e0:	mov	w0, #0xb                   	// #11
    b2e4:	bl	acb0 <PySequence_Fast@plt+0x6a70>
    b2e8:	ldr	x23, [sp, #48]
    b2ec:	b	b224 <PySequence_Fast@plt+0x6fe4>
    b2f0:	bl	4878 <PySequence_Fast@plt+0x638>
    b2f4:	b	b210 <PySequence_Fast@plt+0x6fd0>
    b2f8:	mov	x0, x19
    b2fc:	add	x1, sp, #0x48
    b300:	mov	x3, #0x0                   	// #0
    b304:	mov	x2, #0x1                   	// #1
    b308:	bl	41d0 <_PyObject_MakeTpCall@plt>
    b30c:	b	b210 <PySequence_Fast@plt+0x6fd0>
    b310:	bl	3d70 <_Py_Dealloc@plt>
    b314:	b	b224 <PySequence_Fast@plt+0x6fe4>
    b318:	stp	x29, x30, [sp, #-96]!
    b31c:	mov	x29, sp
    b320:	stp	x19, x20, [sp, #16]
    b324:	stp	x21, x22, [sp, #32]
    b328:	mov	x21, x0
    b32c:	mov	x0, x1
    b330:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b334:	add	x1, x1, #0x778
    b338:	bl	3d00 <PyObject_GetAttrString@plt>
    b33c:	cbz	x0, b498 <PySequence_Fast@plt+0x7258>
    b340:	stp	x23, x24, [sp, #48]
    b344:	adrp	x23, 21000 <PyInit__elementtree@@Base+0x13168>
    b348:	adrp	x24, 21000 <PyInit__elementtree@@Base+0x13168>
    b34c:	ldr	x23, [x23, #4032]
    b350:	mov	x20, x0
    b354:	ldr	x24, [x24, #3912]
    b358:	stp	x25, x26, [sp, #64]
    b35c:	adrp	x25, e000 <PyInit__elementtree@@Base+0x168>
    b360:	str	x27, [sp, #80]
    b364:	add	x22, x25, #0x780
    b368:	mov	x1, x22
    b36c:	mov	x0, x20
    b370:	mov	w2, #0x10000               	// #65536
    b374:	bl	3db0 <_PyObject_CallFunction_SizeT@plt>
    b378:	mov	x19, x0
    b37c:	cbz	x0, b61c <PySequence_Fast@plt+0x73dc>
    b380:	ldr	x1, [x0, #8]
    b384:	cmp	x1, x23
    b388:	b.eq	b4b0 <PySequence_Fast@plt+0x7270>  // b.none
    b38c:	cmp	x1, x24
    b390:	b.ne	b560 <PySequence_Fast@plt+0x7320>  // b.any
    b394:	ldr	x2, [x0, #16]
    b398:	cbz	x2, b560 <PySequence_Fast@plt+0x7320>
    b39c:	mov	x0, #0x7fffffff            	// #2147483647
    b3a0:	cmp	x2, x0
    b3a4:	b.gt	b4f8 <PySequence_Fast@plt+0x72b8>
    b3a8:	adrp	x4, 23000 <PyInit__elementtree@@Base+0x15168>
    b3ac:	add	x27, x4, #0x440
    b3b0:	ldr	x0, [x21, #16]
    b3b4:	add	x1, x19, #0x20
    b3b8:	ldr	x5, [x4, #1088]
    b3bc:	mov	w3, #0x0                   	// #0
    b3c0:	ldr	x4, [x5, #56]
    b3c4:	blr	x4
    b3c8:	mov	w26, w0
    b3cc:	bl	3f80 <PyErr_Occurred@plt>
    b3d0:	cbnz	x0, b464 <PySequence_Fast@plt+0x7224>
    b3d4:	cbz	w26, b418 <PySequence_Fast@plt+0x71d8>
    b3d8:	adrp	x27, 21000 <PyInit__elementtree@@Base+0x13168>
    b3dc:	ldr	x26, [x27, #3976]
    b3e0:	ldr	x0, [x26]
    b3e4:	add	x0, x0, #0x1
    b3e8:	str	x0, [x26]
    b3ec:	ldr	x0, [x19]
    b3f0:	sub	x0, x0, #0x1
    b3f4:	str	x0, [x19]
    b3f8:	cbz	x0, b6c0 <PySequence_Fast@plt+0x7480>
    b3fc:	ldr	x1, [x26]
    b400:	sub	x1, x1, #0x1
    b404:	str	x1, [x26]
    b408:	cbnz	x1, b368 <PySequence_Fast@plt+0x7128>
    b40c:	ldr	x0, [x27, #3976]
    b410:	bl	3d70 <_Py_Dealloc@plt>
    b414:	b	b364 <PySequence_Fast@plt+0x7124>
    b418:	ldr	x1, [x27]
    b41c:	ldr	x0, [x21, #16]
    b420:	ldr	x1, [x1, #32]
    b424:	blr	x1
    b428:	mov	w22, w0
    b42c:	ldr	x1, [x27]
    b430:	ldr	x0, [x21, #16]
    b434:	ldr	x1, [x1, #48]
    b438:	blr	x1
    b43c:	mov	x23, x0
    b440:	ldr	x1, [x27]
    b444:	ldr	x0, [x21, #16]
    b448:	ldr	x1, [x1, #40]
    b44c:	blr	x1
    b450:	mov	x2, x0
    b454:	mov	x1, x23
    b458:	mov	w0, w22
    b45c:	mov	x3, #0x0                   	// #0
    b460:	bl	acb0 <PySequence_Fast@plt+0x6a70>
    b464:	ldr	x0, [x19]
    b468:	sub	x0, x0, #0x1
    b46c:	str	x0, [x19]
    b470:	cbnz	x0, b47c <PySequence_Fast@plt+0x723c>
    b474:	mov	x0, x19
    b478:	bl	3d70 <_Py_Dealloc@plt>
    b47c:	ldr	x0, [x20]
    b480:	sub	x0, x0, #0x1
    b484:	str	x0, [x20]
    b488:	cbz	x0, b600 <PySequence_Fast@plt+0x73c0>
    b48c:	ldp	x23, x24, [sp, #48]
    b490:	ldp	x25, x26, [sp, #64]
    b494:	ldr	x27, [sp, #80]
    b498:	mov	x19, #0x0                   	// #0
    b49c:	mov	x0, x19
    b4a0:	ldp	x19, x20, [sp, #16]
    b4a4:	ldp	x21, x22, [sp, #32]
    b4a8:	ldp	x29, x30, [sp], #96
    b4ac:	ret
    b4b0:	ldr	x1, [x0, #16]
    b4b4:	cbz	x1, b65c <PySequence_Fast@plt+0x741c>
    b4b8:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    b4bc:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b4c0:	add	x2, x2, #0x788
    b4c4:	add	x1, x1, #0x770
    b4c8:	bl	3e20 <PyUnicode_AsEncodedString@plt>
    b4cc:	mov	x26, x0
    b4d0:	ldr	x1, [x19]
    b4d4:	sub	x0, x1, #0x1
    b4d8:	str	x0, [x19]
    b4dc:	cbz	x0, b554 <PySequence_Fast@plt+0x7314>
    b4e0:	cbz	x26, b47c <PySequence_Fast@plt+0x723c>
    b4e4:	ldr	x2, [x26, #16]
    b4e8:	mov	x0, #0x7fffffff            	// #2147483647
    b4ec:	mov	x19, x26
    b4f0:	cmp	x2, x0
    b4f4:	b.le	b3a8 <PySequence_Fast@plt+0x7168>
    b4f8:	ldr	x0, [x19]
    b4fc:	sub	x0, x0, #0x1
    b500:	str	x0, [x19]
    b504:	cbz	x0, b650 <PySequence_Fast@plt+0x7410>
    b508:	ldr	x0, [x20]
    b50c:	sub	x0, x0, #0x1
    b510:	str	x0, [x20]
    b514:	cbz	x0, b644 <PySequence_Fast@plt+0x7404>
    b518:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    b51c:	mov	x19, #0x0                   	// #0
    b520:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b524:	add	x1, x1, #0x750
    b528:	ldr	x0, [x0, #3968]
    b52c:	ldr	x0, [x0]
    b530:	bl	3de0 <PyErr_SetString@plt>
    b534:	mov	x0, x19
    b538:	ldp	x19, x20, [sp, #16]
    b53c:	ldp	x21, x22, [sp, #32]
    b540:	ldp	x23, x24, [sp, #48]
    b544:	ldp	x25, x26, [sp, #64]
    b548:	ldr	x27, [sp, #80]
    b54c:	ldp	x29, x30, [sp], #96
    b550:	ret
    b554:	mov	x0, x19
    b558:	bl	3d70 <_Py_Dealloc@plt>
    b55c:	b	b4e0 <PySequence_Fast@plt+0x72a0>
    b560:	ldr	x0, [x19]
    b564:	sub	x0, x0, #0x1
    b568:	str	x0, [x19]
    b56c:	cbz	x0, b5dc <PySequence_Fast@plt+0x739c>
    b570:	ldr	x0, [x20]
    b574:	sub	x0, x0, #0x1
    b578:	str	x0, [x20]
    b57c:	cbz	x0, b5f4 <PySequence_Fast@plt+0x73b4>
    b580:	add	x0, x21, #0x10
    b584:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b588:	mov	w3, #0x1                   	// #1
    b58c:	add	x1, x1, #0xb38
    b590:	mov	w2, #0x0                   	// #0
    b594:	bl	af08 <PySequence_Fast@plt+0x6cc8>
    b598:	mov	x19, x0
    b59c:	cbz	x0, b48c <PySequence_Fast@plt+0x724c>
    b5a0:	ldr	x2, [x21, #24]
    b5a4:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    b5a8:	add	x1, x1, #0x328
    b5ac:	add	x1, x1, #0x340
    b5b0:	ldr	x3, [x2, #8]
    b5b4:	cmp	x3, x1
    b5b8:	b.eq	b674 <PySequence_Fast@plt+0x7434>  // b.none
    b5bc:	mov	x0, x19
    b5c0:	ldp	x19, x20, [sp, #16]
    b5c4:	ldp	x21, x22, [sp, #32]
    b5c8:	ldp	x23, x24, [sp, #48]
    b5cc:	ldp	x25, x26, [sp, #64]
    b5d0:	ldr	x27, [sp, #80]
    b5d4:	ldp	x29, x30, [sp], #96
    b5d8:	ret
    b5dc:	mov	x0, x19
    b5e0:	bl	3d70 <_Py_Dealloc@plt>
    b5e4:	ldr	x0, [x20]
    b5e8:	sub	x0, x0, #0x1
    b5ec:	str	x0, [x20]
    b5f0:	cbnz	x0, b580 <PySequence_Fast@plt+0x7340>
    b5f4:	mov	x0, x20
    b5f8:	bl	3d70 <_Py_Dealloc@plt>
    b5fc:	b	b580 <PySequence_Fast@plt+0x7340>
    b600:	mov	x0, x20
    b604:	mov	x19, #0x0                   	// #0
    b608:	bl	3d70 <_Py_Dealloc@plt>
    b60c:	ldp	x23, x24, [sp, #48]
    b610:	ldp	x25, x26, [sp, #64]
    b614:	ldr	x27, [sp, #80]
    b618:	b	b49c <PySequence_Fast@plt+0x725c>
    b61c:	ldr	x0, [x20]
    b620:	sub	x0, x0, #0x1
    b624:	str	x0, [x20]
    b628:	cbnz	x0, b48c <PySequence_Fast@plt+0x724c>
    b62c:	mov	x0, x20
    b630:	bl	3d70 <_Py_Dealloc@plt>
    b634:	ldp	x23, x24, [sp, #48]
    b638:	ldp	x25, x26, [sp, #64]
    b63c:	ldr	x27, [sp, #80]
    b640:	b	b49c <PySequence_Fast@plt+0x725c>
    b644:	mov	x0, x20
    b648:	bl	3d70 <_Py_Dealloc@plt>
    b64c:	b	b518 <PySequence_Fast@plt+0x72d8>
    b650:	mov	x0, x19
    b654:	bl	3d70 <_Py_Dealloc@plt>
    b658:	b	b508 <PySequence_Fast@plt+0x72c8>
    b65c:	ldr	x1, [x0]
    b660:	sub	x1, x1, #0x1
    b664:	str	x1, [x0]
    b668:	cbnz	x1, b570 <PySequence_Fast@plt+0x7330>
    b66c:	bl	3d70 <_Py_Dealloc@plt>
    b670:	b	b5e4 <PySequence_Fast@plt+0x73a4>
    b674:	ldr	x1, [x0]
    b678:	sub	x1, x1, #0x1
    b67c:	str	x1, [x0]
    b680:	cbz	x1, b6b4 <PySequence_Fast@plt+0x7474>
    b684:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    b688:	ldr	x19, [x2, #16]
    b68c:	ldr	x0, [x0, #3976]
    b690:	cmp	x19, #0x0
    b694:	ldp	x23, x24, [sp, #48]
    b698:	csel	x19, x0, x19, eq  // eq = none
    b69c:	ldp	x25, x26, [sp, #64]
    b6a0:	ldr	x0, [x19]
    b6a4:	ldr	x27, [sp, #80]
    b6a8:	add	x0, x0, #0x1
    b6ac:	str	x0, [x19]
    b6b0:	b	b49c <PySequence_Fast@plt+0x725c>
    b6b4:	bl	3d70 <_Py_Dealloc@plt>
    b6b8:	ldr	x2, [x21, #24]
    b6bc:	b	b684 <PySequence_Fast@plt+0x7444>
    b6c0:	mov	x0, x19
    b6c4:	bl	3d70 <_Py_Dealloc@plt>
    b6c8:	ldr	x0, [x26]
    b6cc:	sub	x0, x0, #0x1
    b6d0:	str	x0, [x26]
    b6d4:	cbnz	x0, b368 <PySequence_Fast@plt+0x7128>
    b6d8:	b	b40c <PySequence_Fast@plt+0x71cc>
    b6dc:	nop
    b6e0:	stp	x29, x30, [sp, #-48]!
    b6e4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b6e8:	add	x1, x1, #0xb38
    b6ec:	mov	x29, sp
    b6f0:	stp	x21, x22, [sp, #32]
    b6f4:	adrp	x22, 23000 <PyInit__elementtree@@Base+0x15168>
    b6f8:	mov	w3, #0x1                   	// #1
    b6fc:	ldr	x2, [x22, #1088]
    b700:	stp	x19, x20, [sp, #16]
    b704:	mov	x20, x0
    b708:	ldr	x0, [x0, #16]
    b70c:	ldr	x4, [x2, #56]
    b710:	mov	w2, #0x0                   	// #0
    b714:	blr	x4
    b718:	mov	w21, w0
    b71c:	bl	3f80 <PyErr_Occurred@plt>
    b720:	cbnz	x0, b7b0 <PySequence_Fast@plt+0x7570>
    b724:	cbz	w21, b850 <PySequence_Fast@plt+0x7610>
    b728:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    b72c:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    b730:	ldr	x3, [x20, #24]
    b734:	add	x1, x1, #0x328
    b738:	ldr	x0, [x21, #3976]
    b73c:	add	x1, x1, #0x340
    b740:	ldr	x4, [x3, #8]
    b744:	ldr	x2, [x0]
    b748:	cmp	x4, x1
    b74c:	add	x1, x2, #0x1
    b750:	str	x1, [x0]
    b754:	b.eq	b818 <PySequence_Fast@plt+0x75d8>  // b.none
    b758:	ldr	x19, [x20, #112]
    b75c:	cbz	x19, b7c8 <PySequence_Fast@plt+0x7588>
    b760:	str	x2, [x0]
    b764:	cbz	x2, b7e0 <PySequence_Fast@plt+0x75a0>
    b768:	ldr	x0, [x19, #8]
    b76c:	ldr	x1, [x0, #168]
    b770:	ldr	x0, [x0, #56]
    b774:	tbz	w1, #11, b7f8 <PySequence_Fast@plt+0x75b8>
    b778:	ldr	x4, [x19, x0]
    b77c:	cbz	x4, b7f8 <PySequence_Fast@plt+0x75b8>
    b780:	mov	x0, x19
    b784:	mov	x3, #0x0                   	// #0
    b788:	mov	x2, #0x0                   	// #0
    b78c:	mov	x1, #0x0                   	// #0
    b790:	blr	x4
    b794:	mov	x1, x0
    b798:	mov	x0, x19
    b79c:	mov	x2, #0x0                   	// #0
    b7a0:	ldp	x19, x20, [sp, #16]
    b7a4:	ldp	x21, x22, [sp, #32]
    b7a8:	ldp	x29, x30, [sp], #48
    b7ac:	b	4020 <_Py_CheckFunctionResult@plt>
    b7b0:	mov	x19, #0x0                   	// #0
    b7b4:	mov	x0, x19
    b7b8:	ldp	x19, x20, [sp, #16]
    b7bc:	ldp	x21, x22, [sp, #32]
    b7c0:	ldp	x29, x30, [sp], #48
    b7c4:	ret
    b7c8:	mov	x19, x0
    b7cc:	mov	x0, x19
    b7d0:	ldp	x19, x20, [sp, #16]
    b7d4:	ldp	x21, x22, [sp, #32]
    b7d8:	ldp	x29, x30, [sp], #48
    b7dc:	ret
    b7e0:	bl	3d70 <_Py_Dealloc@plt>
    b7e4:	ldr	x19, [x20, #112]
    b7e8:	ldr	x0, [x19, #8]
    b7ec:	ldr	x1, [x0, #168]
    b7f0:	ldr	x0, [x0, #56]
    b7f4:	tbnz	w1, #11, b778 <PySequence_Fast@plt+0x7538>
    b7f8:	mov	x0, x19
    b7fc:	mov	x3, #0x0                   	// #0
    b800:	ldp	x19, x20, [sp, #16]
    b804:	mov	x2, #0x0                   	// #0
    b808:	ldp	x21, x22, [sp, #32]
    b80c:	mov	x1, #0x0                   	// #0
    b810:	ldp	x29, x30, [sp], #48
    b814:	b	41d0 <_PyObject_MakeTpCall@plt>
    b818:	str	x2, [x0]
    b81c:	cbz	x2, b8b4 <PySequence_Fast@plt+0x7674>
    b820:	ldr	x19, [x3, #16]
    b824:	ldr	x21, [x21, #3976]
    b828:	cmp	x19, #0x0
    b82c:	csel	x19, x21, x19, eq  // eq = none
    b830:	ldp	x21, x22, [sp, #32]
    b834:	ldr	x0, [x19]
    b838:	add	x0, x0, #0x1
    b83c:	str	x0, [x19]
    b840:	mov	x0, x19
    b844:	ldp	x19, x20, [sp, #16]
    b848:	ldp	x29, x30, [sp], #48
    b84c:	ret
    b850:	ldr	x1, [x22, #1088]
    b854:	mov	x19, x0
    b858:	ldr	x0, [x20, #16]
    b85c:	ldr	x1, [x1, #32]
    b860:	blr	x1
    b864:	mov	w21, w0
    b868:	ldr	x1, [x22, #1088]
    b86c:	ldr	x0, [x20, #16]
    b870:	ldr	x1, [x1, #48]
    b874:	blr	x1
    b878:	ldr	x1, [x22, #1088]
    b87c:	mov	x22, x0
    b880:	ldr	x0, [x20, #16]
    b884:	ldr	x1, [x1, #40]
    b888:	blr	x1
    b88c:	mov	x2, x0
    b890:	mov	x1, x22
    b894:	mov	w0, w21
    b898:	mov	x3, #0x0                   	// #0
    b89c:	bl	acb0 <PySequence_Fast@plt+0x6a70>
    b8a0:	mov	x0, x19
    b8a4:	ldp	x19, x20, [sp, #16]
    b8a8:	ldp	x21, x22, [sp, #32]
    b8ac:	ldp	x29, x30, [sp], #48
    b8b0:	ret
    b8b4:	bl	3d70 <_Py_Dealloc@plt>
    b8b8:	ldr	x3, [x20, #24]
    b8bc:	b	b820 <PySequence_Fast@plt+0x75e0>
    b8c0:	stp	x29, x30, [sp, #-96]!
    b8c4:	mov	x29, sp
    b8c8:	stp	x19, x20, [sp, #16]
    b8cc:	mov	x19, x1
    b8d0:	mov	x20, x0
    b8d4:	mov	x0, x1
    b8d8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    b8dc:	add	x1, x1, #0xb38
    b8e0:	str	x27, [sp, #80]
    b8e4:	bl	4240 <PySequence_Fast@plt>
    b8e8:	mov	x27, x0
    b8ec:	cbz	x0, bb74 <PySequence_Fast@plt+0x7934>
    b8f0:	ldr	x0, [x0, #16]
    b8f4:	stp	x21, x22, [sp, #32]
    b8f8:	adrp	x21, 22000 <PyInit__elementtree@@Base+0x14168>
    b8fc:	stp	x25, x26, [sp, #64]
    b900:	cmp	x0, #0x0
    b904:	mov	x25, #0x0                   	// #0
    b908:	b.le	b9f4 <PySequence_Fast@plt+0x77b4>
    b90c:	adrp	x22, 21000 <PyInit__elementtree@@Base+0x13168>
    b910:	add	x21, x21, #0x328
    b914:	stp	x23, x24, [sp, #48]
    b918:	add	x23, x27, #0x18
    b91c:	ldr	x22, [x22, #3976]
    b920:	ldr	x0, [x27, #8]
    b924:	ldr	x0, [x0, #168]
    b928:	tbz	w0, #25, ba38 <PySequence_Fast@plt+0x77f8>
    b92c:	ldr	x0, [x27, #24]
    b930:	ldr	x19, [x0, x25, lsl #3]
    b934:	ldp	x1, x0, [x19]
    b938:	add	x1, x1, #0x1
    b93c:	str	x1, [x19]
    b940:	cmp	x0, x21
    b944:	b.eq	b954 <PySequence_Fast@plt+0x7714>  // b.none
    b948:	mov	x1, x21
    b94c:	bl	4160 <PyType_IsSubtype@plt>
    b950:	cbz	w0, bb98 <PySequence_Fast@plt+0x7958>
    b954:	ldr	x2, [x20, #40]
    b958:	cbz	x2, ba40 <PySequence_Fast@plt+0x7800>
    b95c:	ldp	x1, x0, [x2, #8]
    b960:	add	x1, x1, #0x1
    b964:	cmp	x1, x0
    b968:	b.le	ba78 <PySequence_Fast@plt+0x7838>
    b96c:	cmp	x1, #0x9
    b970:	mov	x24, #0x3                   	// #3
    b974:	add	x1, x1, x1, asr #3
    b978:	mov	x0, #0x6                   	// #6
    b97c:	csel	x24, x24, x0, lt  // lt = tstop
    b980:	adds	x24, x1, x24
    b984:	b.eq	ba9c <PySequence_Fast@plt+0x785c>  // b.none
    b988:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    b98c:	cmp	x24, x0
    b990:	b.hi	bae8 <PySequence_Fast@plt+0x78a8>  // b.pmore
    b994:	ldr	x0, [x2, #24]
    b998:	add	x2, x2, #0x20
    b99c:	lsl	x1, x24, #3
    b9a0:	cmp	x0, x2
    b9a4:	b.eq	bab4 <PySequence_Fast@plt+0x7874>  // b.none
    b9a8:	bl	4060 <PyObject_Realloc@plt>
    b9ac:	mov	x26, x0
    b9b0:	cbz	x0, bae8 <PySequence_Fast@plt+0x78a8>
    b9b4:	ldr	x2, [x20, #40]
    b9b8:	stp	x24, x26, [x2, #16]
    b9bc:	ldr	x1, [x19]
    b9c0:	add	x0, x1, #0x1
    b9c4:	str	x0, [x19]
    b9c8:	ldr	x0, [x2, #8]
    b9cc:	add	x3, x0, #0x1
    b9d0:	str	x19, [x26, x0, lsl #3]
    b9d4:	str	x3, [x2, #8]
    b9d8:	str	x1, [x19]
    b9dc:	cbz	x1, ba80 <PySequence_Fast@plt+0x7840>
    b9e0:	ldr	x0, [x27, #16]
    b9e4:	add	x25, x25, #0x1
    b9e8:	cmp	x0, x25
    b9ec:	b.gt	b920 <PySequence_Fast@plt+0x76e0>
    b9f0:	ldp	x23, x24, [sp, #48]
    b9f4:	ldr	x0, [x27]
    b9f8:	sub	x0, x0, #0x1
    b9fc:	str	x0, [x27]
    ba00:	cbz	x0, badc <PySequence_Fast@plt+0x789c>
    ba04:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    ba08:	ldp	x21, x22, [sp, #32]
    ba0c:	ldr	x0, [x0, #3976]
    ba10:	ldp	x25, x26, [sp, #64]
    ba14:	mov	x27, x0
    ba18:	ldr	x1, [x0]
    ba1c:	add	x1, x1, #0x1
    ba20:	str	x1, [x0]
    ba24:	mov	x0, x27
    ba28:	ldp	x19, x20, [sp, #16]
    ba2c:	ldr	x27, [sp, #80]
    ba30:	ldp	x29, x30, [sp], #96
    ba34:	ret
    ba38:	ldr	x19, [x23, x25, lsl #3]
    ba3c:	b	b934 <PySequence_Fast@plt+0x76f4>
    ba40:	mov	x0, #0x40                  	// #64
    ba44:	bl	3e00 <PyObject_Malloc@plt>
    ba48:	str	x0, [x20, #40]
    ba4c:	mov	x2, x0
    ba50:	cbz	x0, bae8 <PySequence_Fast@plt+0x78a8>
    ba54:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    ba58:	add	x1, x2, #0x20
    ba5c:	str	x1, [x2, #24]
    ba60:	ldr	q0, [x0, #3120]
    ba64:	ldr	x0, [x22]
    ba68:	stur	q0, [x2, #8]
    ba6c:	add	x0, x0, #0x1
    ba70:	str	x0, [x22]
    ba74:	str	x22, [x2]
    ba78:	ldr	x26, [x2, #24]
    ba7c:	b	b9bc <PySequence_Fast@plt+0x777c>
    ba80:	mov	x0, x19
    ba84:	bl	3d70 <_Py_Dealloc@plt>
    ba88:	ldr	x0, [x27, #16]
    ba8c:	add	x25, x25, #0x1
    ba90:	cmp	x0, x25
    ba94:	b.gt	b920 <PySequence_Fast@plt+0x76e0>
    ba98:	b	b9f0 <PySequence_Fast@plt+0x77b0>
    ba9c:	ldr	x0, [x2, #24]
    baa0:	add	x2, x2, #0x20
    baa4:	mov	x1, #0x8                   	// #8
    baa8:	mov	x24, #0x1                   	// #1
    baac:	cmp	x0, x2
    bab0:	b.ne	b9a8 <PySequence_Fast@plt+0x7768>  // b.any
    bab4:	mov	x0, x1
    bab8:	bl	3e00 <PyObject_Malloc@plt>
    babc:	mov	x26, x0
    bac0:	cbz	x0, bae8 <PySequence_Fast@plt+0x78a8>
    bac4:	ldr	x1, [x20, #40]
    bac8:	ldr	x2, [x1, #8]
    bacc:	ldr	x1, [x1, #24]
    bad0:	lsl	x2, x2, #3
    bad4:	bl	3c20 <memcpy@plt>
    bad8:	b	b9b4 <PySequence_Fast@plt+0x7774>
    badc:	mov	x0, x27
    bae0:	bl	3d70 <_Py_Dealloc@plt>
    bae4:	b	ba04 <PySequence_Fast@plt+0x77c4>
    bae8:	bl	3d80 <PyErr_NoMemory@plt>
    baec:	ldr	x0, [x27]
    baf0:	sub	x0, x0, #0x1
    baf4:	str	x0, [x27]
    baf8:	cbz	x0, bb30 <PySequence_Fast@plt+0x78f0>
    bafc:	ldr	x0, [x19]
    bb00:	mov	x27, #0x0                   	// #0
    bb04:	sub	x0, x0, #0x1
    bb08:	str	x0, [x19]
    bb0c:	cbz	x0, bb4c <PySequence_Fast@plt+0x790c>
    bb10:	mov	x0, x27
    bb14:	ldp	x19, x20, [sp, #16]
    bb18:	ldp	x21, x22, [sp, #32]
    bb1c:	ldp	x23, x24, [sp, #48]
    bb20:	ldp	x25, x26, [sp, #64]
    bb24:	ldr	x27, [sp, #80]
    bb28:	ldp	x29, x30, [sp], #96
    bb2c:	ret
    bb30:	mov	x0, x27
    bb34:	bl	3d70 <_Py_Dealloc@plt>
    bb38:	ldr	x0, [x19]
    bb3c:	mov	x27, #0x0                   	// #0
    bb40:	sub	x0, x0, #0x1
    bb44:	str	x0, [x19]
    bb48:	cbnz	x0, bb10 <PySequence_Fast@plt+0x78d0>
    bb4c:	mov	x0, x19
    bb50:	bl	3d70 <_Py_Dealloc@plt>
    bb54:	mov	x0, x27
    bb58:	ldp	x19, x20, [sp, #16]
    bb5c:	ldp	x21, x22, [sp, #32]
    bb60:	ldp	x23, x24, [sp, #48]
    bb64:	ldp	x25, x26, [sp, #64]
    bb68:	ldr	x27, [sp, #80]
    bb6c:	ldp	x29, x30, [sp], #96
    bb70:	ret
    bb74:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    bb78:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    bb7c:	ldr	x2, [x19, #8]
    bb80:	add	x1, x1, #0x618
    bb84:	ldr	x0, [x0, #3944]
    bb88:	ldr	x2, [x2, #24]
    bb8c:	ldr	x0, [x0]
    bb90:	bl	4180 <PyErr_Format@plt>
    bb94:	b	ba24 <PySequence_Fast@plt+0x77e4>
    bb98:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    bb9c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    bba0:	ldr	x2, [x19, #8]
    bba4:	add	x1, x1, #0x188
    bba8:	ldr	x0, [x0, #3944]
    bbac:	ldr	x2, [x2, #24]
    bbb0:	ldr	x0, [x0]
    bbb4:	bl	4180 <PyErr_Format@plt>
    bbb8:	b	baec <PySequence_Fast@plt+0x78ac>
    bbbc:	nop
    bbc0:	stp	x29, x30, [sp, #-64]!
    bbc4:	mov	x29, sp
    bbc8:	stp	x19, x20, [sp, #16]
    bbcc:	mov	x19, x0
    bbd0:	mov	x20, x1
    bbd4:	bl	3f80 <PyErr_Occurred@plt>
    bbd8:	cbz	x0, bbe8 <PySequence_Fast@plt+0x79a8>
    bbdc:	ldp	x19, x20, [sp, #16]
    bbe0:	ldp	x29, x30, [sp], #64
    bbe4:	ret
    bbe8:	str	x21, [sp, #32]
    bbec:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    bbf0:	ldr	x21, [x19, #24]
    bbf4:	add	x0, x0, #0x328
    bbf8:	add	x0, x0, #0x340
    bbfc:	ldr	x1, [x21, #8]
    bc00:	cmp	x1, x0
    bc04:	b.eq	bca0 <PySequence_Fast@plt+0x7a60>  // b.none
    bc08:	ldr	x0, [x19, #80]
    bc0c:	cbz	x0, bc90 <PySequence_Fast@plt+0x7a50>
    bc10:	mov	x1, x20
    bc14:	add	x0, x19, #0x28
    bc18:	bl	6890 <PySequence_Fast@plt+0x2650>
    bc1c:	str	x0, [sp, #56]
    bc20:	cbz	x0, bc90 <PySequence_Fast@plt+0x7a50>
    bc24:	ldr	x19, [x19, #80]
    bc28:	ldr	x0, [x19, #8]
    bc2c:	ldr	x1, [x0, #168]
    bc30:	ldr	x0, [x0, #56]
    bc34:	tbz	w1, #11, bdb0 <PySequence_Fast@plt+0x7b70>
    bc38:	ldr	x4, [x19, x0]
    bc3c:	cbz	x4, bdb0 <PySequence_Fast@plt+0x7b70>
    bc40:	mov	x3, #0x0                   	// #0
    bc44:	add	x1, sp, #0x38
    bc48:	mov	x0, x19
    bc4c:	mov	x2, #0x1                   	// #1
    bc50:	blr	x4
    bc54:	mov	x1, x0
    bc58:	mov	x2, #0x0                   	// #0
    bc5c:	mov	x0, x19
    bc60:	bl	4020 <_Py_CheckFunctionResult@plt>
    bc64:	mov	x19, x0
    bc68:	ldr	x0, [sp, #56]
    bc6c:	ldr	x1, [x0]
    bc70:	sub	x1, x1, #0x1
    bc74:	str	x1, [x0]
    bc78:	cbz	x1, bd7c <PySequence_Fast@plt+0x7b3c>
    bc7c:	cbz	x19, bc90 <PySequence_Fast@plt+0x7a50>
    bc80:	ldr	x0, [x19]
    bc84:	sub	x0, x0, #0x1
    bc88:	str	x0, [x19]
    bc8c:	cbz	x0, bd6c <PySequence_Fast@plt+0x7b2c>
    bc90:	ldp	x19, x20, [sp, #16]
    bc94:	ldr	x21, [sp, #32]
    bc98:	ldp	x29, x30, [sp], #64
    bc9c:	ret
    bca0:	ldr	x0, [x21, #48]
    bca4:	cbz	x0, bccc <PySequence_Fast@plt+0x7a8c>
    bca8:	ldr	x0, [x21, #40]
    bcac:	add	x1, x21, #0x30
    bcb0:	cbz	x0, bd90 <PySequence_Fast@plt+0x7b50>
    bcb4:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    bcb8:	add	x3, x3, #0x9c0
    bcbc:	add	x3, x3, #0x2f8
    bcc0:	add	x2, x0, #0x20
    bcc4:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    bcc8:	tbnz	w0, #31, bc90 <PySequence_Fast@plt+0x7a50>
    bccc:	ldr	x0, [x21, #64]
    bcd0:	cbz	x0, bdcc <PySequence_Fast@plt+0x7b8c>
    bcd4:	ldp	x1, x19, [x21, #24]
    bcd8:	ldr	x0, [x21, #40]
    bcdc:	ldr	x2, [x1]
    bce0:	str	x1, [x21, #32]
    bce4:	add	x2, x2, #0x1
    bce8:	str	x2, [x1]
    bcec:	str	x1, [x21, #40]
    bcf0:	cbz	x0, bd08 <PySequence_Fast@plt+0x7ac8>
    bcf4:	ldr	x1, [x0]
    bcf8:	sub	x1, x1, #0x1
    bcfc:	str	x1, [x0]
    bd00:	cbnz	x1, bd08 <PySequence_Fast@plt+0x7ac8>
    bd04:	bl	3d70 <_Py_Dealloc@plt>
    bd08:	ldp	x1, x0, [x21, #56]
    bd0c:	ldr	x1, [x1, #24]
    bd10:	sub	x0, x0, #0x1
    bd14:	str	x0, [x21, #64]
    bd18:	ldr	x0, [x1, x0, lsl #3]
    bd1c:	ldr	x1, [x0]
    bd20:	str	x0, [x21, #24]
    bd24:	add	x1, x1, #0x1
    bd28:	str	x1, [x0]
    bd2c:	ldr	x0, [x19]
    bd30:	sub	x0, x0, #0x1
    bd34:	str	x0, [x19]
    bd38:	cbz	x0, bd84 <PySequence_Fast@plt+0x7b44>
    bd3c:	ldr	x1, [x21, #112]
    bd40:	ldr	x19, [x21, #32]
    bd44:	cbz	x1, bd5c <PySequence_Fast@plt+0x7b1c>
    bd48:	mov	x2, x19
    bd4c:	add	x0, x21, #0x60
    bd50:	bl	89d8 <PySequence_Fast@plt+0x4798>
    bd54:	tbnz	w0, #31, bc90 <PySequence_Fast@plt+0x7a50>
    bd58:	ldr	x19, [x21, #32]
    bd5c:	ldr	x0, [x19]
    bd60:	add	x1, x0, #0x1
    bd64:	str	x1, [x19]
    bd68:	b	bc88 <PySequence_Fast@plt+0x7a48>
    bd6c:	mov	x0, x19
    bd70:	bl	3d70 <_Py_Dealloc@plt>
    bd74:	ldr	x21, [sp, #32]
    bd78:	b	bbdc <PySequence_Fast@plt+0x799c>
    bd7c:	bl	3d70 <_Py_Dealloc@plt>
    bd80:	b	bc7c <PySequence_Fast@plt+0x7a3c>
    bd84:	mov	x0, x19
    bd88:	bl	3d70 <_Py_Dealloc@plt>
    bd8c:	b	bd3c <PySequence_Fast@plt+0x7afc>
    bd90:	ldr	x0, [x21, #32]
    bd94:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    bd98:	add	x3, x3, #0x9c0
    bd9c:	add	x3, x3, #0x2e0
    bda0:	add	x2, x0, #0x18
    bda4:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    bda8:	tbz	w0, #31, bccc <PySequence_Fast@plt+0x7a8c>
    bdac:	b	bc90 <PySequence_Fast@plt+0x7a50>
    bdb0:	mov	x0, x19
    bdb4:	add	x1, sp, #0x38
    bdb8:	mov	x3, #0x0                   	// #0
    bdbc:	mov	x2, #0x1                   	// #1
    bdc0:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bdc4:	mov	x19, x0
    bdc8:	b	bc68 <PySequence_Fast@plt+0x7a28>
    bdcc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    bdd0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    bdd4:	add	x1, x1, #0x560
    bdd8:	ldr	x0, [x0, #3984]
    bddc:	ldr	x0, [x0]
    bde0:	bl	3de0 <PyErr_SetString@plt>
    bde4:	ldr	x21, [sp, #32]
    bde8:	b	bbdc <PySequence_Fast@plt+0x799c>
    bdec:	nop
    bdf0:	stp	x29, x30, [sp, #-64]!
    bdf4:	mov	x29, sp
    bdf8:	stp	x19, x20, [sp, #16]
    bdfc:	mov	x19, x1
    be00:	mov	w20, w2
    be04:	str	x21, [sp, #32]
    be08:	mov	x21, x0
    be0c:	bl	3f80 <PyErr_Occurred@plt>
    be10:	cbz	x0, be24 <PySequence_Fast@plt+0x7be4>
    be14:	ldp	x19, x20, [sp, #16]
    be18:	ldr	x21, [sp, #32]
    be1c:	ldp	x29, x30, [sp], #64
    be20:	ret
    be24:	sxtw	x1, w20
    be28:	mov	x0, x19
    be2c:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    be30:	add	x2, x2, #0x2c0
    be34:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    be38:	str	x0, [sp, #56]
    be3c:	mov	x1, x0
    be40:	cbz	x0, be14 <PySequence_Fast@plt+0x7bd4>
    be44:	ldr	x3, [x21, #24]
    be48:	adrp	x2, 22000 <PyInit__elementtree@@Base+0x14168>
    be4c:	add	x2, x2, #0x328
    be50:	add	x2, x2, #0x340
    be54:	ldr	x4, [x3, #8]
    be58:	cmp	x4, x2
    be5c:	b.eq	befc <PySequence_Fast@plt+0x7cbc>  // b.none
    be60:	ldr	x19, [x21, #72]
    be64:	cbz	x19, bedc <PySequence_Fast@plt+0x7c9c>
    be68:	ldr	x0, [x19, #8]
    be6c:	ldr	x1, [x0, #168]
    be70:	ldr	x0, [x0, #56]
    be74:	tbz	w1, #11, bf0c <PySequence_Fast@plt+0x7ccc>
    be78:	ldr	x4, [x19, x0]
    be7c:	cbz	x4, bf0c <PySequence_Fast@plt+0x7ccc>
    be80:	mov	x3, #0x0                   	// #0
    be84:	add	x1, sp, #0x38
    be88:	mov	x0, x19
    be8c:	mov	x2, #0x1                   	// #1
    be90:	blr	x4
    be94:	mov	x1, x0
    be98:	mov	x2, #0x0                   	// #0
    be9c:	mov	x0, x19
    bea0:	bl	4020 <_Py_CheckFunctionResult@plt>
    bea4:	mov	x19, x0
    bea8:	ldr	x0, [sp, #56]
    beac:	ldr	x1, [x0]
    beb0:	sub	x1, x1, #0x1
    beb4:	str	x1, [x0]
    beb8:	cbz	x1, bef4 <PySequence_Fast@plt+0x7cb4>
    bebc:	cbz	x19, be14 <PySequence_Fast@plt+0x7bd4>
    bec0:	ldr	x0, [x19]
    bec4:	sub	x0, x0, #0x1
    bec8:	str	x0, [x19]
    becc:	cbnz	x0, be14 <PySequence_Fast@plt+0x7bd4>
    bed0:	mov	x0, x19
    bed4:	bl	3d70 <_Py_Dealloc@plt>
    bed8:	b	be14 <PySequence_Fast@plt+0x7bd4>
    bedc:	ldr	x2, [x0]
    bee0:	sub	x2, x2, #0x1
    bee4:	str	x2, [x0]
    bee8:	cbnz	x2, be14 <PySequence_Fast@plt+0x7bd4>
    beec:	bl	3d70 <_Py_Dealloc@plt>
    bef0:	b	be14 <PySequence_Fast@plt+0x7bd4>
    bef4:	bl	3d70 <_Py_Dealloc@plt>
    bef8:	b	bebc <PySequence_Fast@plt+0x7c7c>
    befc:	mov	x0, x3
    bf00:	bl	4878 <PySequence_Fast@plt+0x638>
    bf04:	mov	x19, x0
    bf08:	b	bea8 <PySequence_Fast@plt+0x7c68>
    bf0c:	mov	x0, x19
    bf10:	add	x1, sp, #0x38
    bf14:	mov	x3, #0x0                   	// #0
    bf18:	mov	x2, #0x1                   	// #1
    bf1c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    bf20:	mov	x19, x0
    bf24:	b	bea8 <PySequence_Fast@plt+0x7c68>
    bf28:	stp	x29, x30, [sp, #-48]!
    bf2c:	mov	x29, sp
    bf30:	stp	x19, x20, [sp, #16]
    bf34:	mov	x20, x0
    bf38:	mov	x19, x1
    bf3c:	bl	3f80 <PyErr_Occurred@plt>
    bf40:	cbz	x0, bf50 <PySequence_Fast@plt+0x7d10>
    bf44:	ldp	x19, x20, [sp, #16]
    bf48:	ldp	x29, x30, [sp], #48
    bf4c:	ret
    bf50:	ldr	x0, [x20, #24]
    bf54:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    bf58:	add	x1, x1, #0x328
    bf5c:	cmp	x19, #0x0
    bf60:	add	x1, x1, #0x340
    bf64:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    bf68:	ldr	x3, [x0, #8]
    bf6c:	add	x2, x2, #0xb38
    bf70:	csel	x19, x2, x19, eq  // eq = none
    bf74:	cmp	x3, x1
    bf78:	b.eq	c020 <PySequence_Fast@plt+0x7de0>  // b.none
    bf7c:	ldr	x0, [x20, #56]
    bf80:	cbz	x0, bf44 <PySequence_Fast@plt+0x7d04>
    bf84:	mov	x0, x19
    bf88:	bl	3c70 <strlen@plt>
    bf8c:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    bf90:	mov	x1, x0
    bf94:	add	x2, x2, #0x2c0
    bf98:	mov	x0, x19
    bf9c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    bfa0:	str	x0, [sp, #40]
    bfa4:	cbz	x0, bf44 <PySequence_Fast@plt+0x7d04>
    bfa8:	ldr	x19, [x20, #56]
    bfac:	ldr	x0, [x19, #8]
    bfb0:	ldr	x1, [x0, #168]
    bfb4:	ldr	x0, [x0, #56]
    bfb8:	tbz	w1, #11, c064 <PySequence_Fast@plt+0x7e24>
    bfbc:	ldr	x4, [x19, x0]
    bfc0:	cbz	x4, c064 <PySequence_Fast@plt+0x7e24>
    bfc4:	mov	x3, #0x0                   	// #0
    bfc8:	add	x1, sp, #0x28
    bfcc:	mov	x0, x19
    bfd0:	mov	x2, #0x1                   	// #1
    bfd4:	blr	x4
    bfd8:	mov	x1, x0
    bfdc:	mov	x2, #0x0                   	// #0
    bfe0:	mov	x0, x19
    bfe4:	bl	4020 <_Py_CheckFunctionResult@plt>
    bfe8:	mov	x19, x0
    bfec:	ldr	x0, [sp, #40]
    bff0:	ldr	x1, [x0]
    bff4:	sub	x1, x1, #0x1
    bff8:	str	x1, [x0]
    bffc:	cbz	x1, c05c <PySequence_Fast@plt+0x7e1c>
    c000:	cbz	x19, bf44 <PySequence_Fast@plt+0x7d04>
    c004:	ldr	x0, [x19]
    c008:	sub	x0, x0, #0x1
    c00c:	str	x0, [x19]
    c010:	cbnz	x0, bf44 <PySequence_Fast@plt+0x7d04>
    c014:	mov	x0, x19
    c018:	bl	3d70 <_Py_Dealloc@plt>
    c01c:	b	bf44 <PySequence_Fast@plt+0x7d04>
    c020:	ldr	x1, [x0, #96]
    c024:	cbz	x1, bf44 <PySequence_Fast@plt+0x7d04>
    c028:	ldr	x1, [x0, #128]
    c02c:	cbz	x1, bf44 <PySequence_Fast@plt+0x7d04>
    c030:	adrp	x20, 21000 <PyInit__elementtree@@Base+0x13168>
    c034:	add	x0, x0, #0x60
    c038:	ldr	x20, [x20, #3976]
    c03c:	mov	x2, x20
    c040:	bl	89d8 <PySequence_Fast@plt+0x4798>
    c044:	tbnz	w0, #31, bf44 <PySequence_Fast@plt+0x7d04>
    c048:	ldr	x0, [x20]
    c04c:	mov	x19, x20
    c050:	add	x1, x0, #0x1
    c054:	str	x1, [x20]
    c058:	b	c00c <PySequence_Fast@plt+0x7dcc>
    c05c:	bl	3d70 <_Py_Dealloc@plt>
    c060:	b	c000 <PySequence_Fast@plt+0x7dc0>
    c064:	mov	x0, x19
    c068:	add	x1, sp, #0x28
    c06c:	mov	x3, #0x0                   	// #0
    c070:	mov	x2, #0x1                   	// #1
    c074:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c078:	mov	x19, x0
    c07c:	b	bfec <PySequence_Fast@plt+0x7dac>
    c080:	stp	x29, x30, [sp, #-64]!
    c084:	mov	x29, sp
    c088:	stp	x19, x20, [sp, #16]
    c08c:	mov	x19, x0
    c090:	ldr	x0, [x0, #48]
    c094:	str	x1, [sp, #56]
    c098:	cbz	x0, c0c0 <PySequence_Fast@plt+0x7e80>
    c09c:	ldr	x0, [x19, #40]
    c0a0:	add	x1, x19, #0x30
    c0a4:	cbz	x0, c19c <PySequence_Fast@plt+0x7f5c>
    c0a8:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    c0ac:	add	x3, x3, #0x9c0
    c0b0:	add	x3, x3, #0x2f8
    c0b4:	add	x2, x0, #0x20
    c0b8:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    c0bc:	tbnz	w0, #31, c188 <PySequence_Fast@plt+0x7f48>
    c0c0:	ldr	x20, [x19, #80]
    c0c4:	cbz	x20, c134 <PySequence_Fast@plt+0x7ef4>
    c0c8:	ldr	x0, [x20, #8]
    c0cc:	ldr	x1, [x0, #168]
    c0d0:	ldr	x0, [x0, #56]
    c0d4:	tbz	w1, #11, c230 <PySequence_Fast@plt+0x7ff0>
    c0d8:	ldr	x4, [x20, x0]
    c0dc:	cbz	x4, c230 <PySequence_Fast@plt+0x7ff0>
    c0e0:	mov	x3, #0x0                   	// #0
    c0e4:	add	x1, sp, #0x38
    c0e8:	mov	x0, x20
    c0ec:	mov	x2, #0x1                   	// #1
    c0f0:	blr	x4
    c0f4:	mov	x1, x0
    c0f8:	mov	x2, #0x0                   	// #0
    c0fc:	mov	x0, x20
    c100:	bl	4020 <_Py_CheckFunctionResult@plt>
    c104:	mov	x20, x0
    c108:	cbz	x20, c188 <PySequence_Fast@plt+0x7f48>
    c10c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c110:	str	x21, [sp, #32]
    c114:	ldr	x21, [x19, #24]
    c118:	ldr	x0, [x0, #3976]
    c11c:	ldrb	w1, [x19, #152]
    c120:	cmp	w1, #0x0
    c124:	ccmp	x21, x0, #0x4, ne  // ne = any
    c128:	b.ne	c1b8 <PySequence_Fast@plt+0x7f78>  // b.any
    c12c:	ldr	x21, [sp, #32]
    c130:	b	c144 <PySequence_Fast@plt+0x7f04>
    c134:	ldr	x20, [sp, #56]
    c138:	ldr	x0, [x20]
    c13c:	add	x0, x0, #0x1
    c140:	str	x0, [x20]
    c144:	ldr	x0, [x19, #96]
    c148:	cbz	x0, c164 <PySequence_Fast@plt+0x7f24>
    c14c:	ldr	x1, [x19, #136]
    c150:	cbz	x1, c164 <PySequence_Fast@plt+0x7f24>
    c154:	add	x0, x19, #0x60
    c158:	mov	x2, x20
    c15c:	bl	89d8 <PySequence_Fast@plt+0x4798>
    c160:	tbnz	w0, #31, c178 <PySequence_Fast@plt+0x7f38>
    c164:	mov	x0, x20
    c168:	ldp	x19, x20, [sp, #16]
    c16c:	ldp	x29, x30, [sp], #64
    c170:	ret
    c174:	ldr	x21, [sp, #32]
    c178:	ldr	x0, [x20]
    c17c:	sub	x0, x0, #0x1
    c180:	str	x0, [x20]
    c184:	cbz	x0, c24c <PySequence_Fast@plt+0x800c>
    c188:	mov	x20, #0x0                   	// #0
    c18c:	mov	x0, x20
    c190:	ldp	x19, x20, [sp, #16]
    c194:	ldp	x29, x30, [sp], #64
    c198:	ret
    c19c:	ldr	x0, [x19, #32]
    c1a0:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    c1a4:	add	x3, x3, #0x9c0
    c1a8:	add	x3, x3, #0x2e0
    c1ac:	add	x2, x0, #0x18
    c1b0:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    c1b4:	b	c0bc <PySequence_Fast@plt+0x7e7c>
    c1b8:	ldr	x1, [x21, #8]
    c1bc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    c1c0:	add	x0, x0, #0x328
    c1c4:	cmp	x1, x0
    c1c8:	b.eq	c264 <PySequence_Fast@plt+0x8024>  // b.none
    c1cc:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    c1d0:	add	x1, x1, #0x9c0
    c1d4:	mov	x0, x21
    c1d8:	add	x1, x1, #0x350
    c1dc:	mov	x2, x20
    c1e0:	mov	x3, #0x0                   	// #0
    c1e4:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    c1e8:	cbz	x0, c174 <PySequence_Fast@plt+0x7f34>
    c1ec:	ldr	x2, [x0]
    c1f0:	sub	x2, x2, #0x1
    c1f4:	str	x2, [x0]
    c1f8:	cbz	x2, c25c <PySequence_Fast@plt+0x801c>
    c1fc:	ldr	x1, [x20]
    c200:	ldr	x0, [x19, #40]
    c204:	add	x1, x1, #0x1
    c208:	str	x1, [x20]
    c20c:	str	x20, [x19, #40]
    c210:	cbz	x0, c12c <PySequence_Fast@plt+0x7eec>
    c214:	ldr	x1, [x0]
    c218:	sub	x1, x1, #0x1
    c21c:	str	x1, [x0]
    c220:	cbnz	x1, c12c <PySequence_Fast@plt+0x7eec>
    c224:	bl	3d70 <_Py_Dealloc@plt>
    c228:	ldr	x21, [sp, #32]
    c22c:	b	c144 <PySequence_Fast@plt+0x7f04>
    c230:	mov	x0, x20
    c234:	add	x1, sp, #0x38
    c238:	mov	x3, #0x0                   	// #0
    c23c:	mov	x2, #0x1                   	// #1
    c240:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c244:	mov	x20, x0
    c248:	b	c108 <PySequence_Fast@plt+0x7ec8>
    c24c:	mov	x0, x20
    c250:	mov	x20, #0x0                   	// #0
    c254:	bl	3d70 <_Py_Dealloc@plt>
    c258:	b	c164 <PySequence_Fast@plt+0x7f24>
    c25c:	bl	3d70 <_Py_Dealloc@plt>
    c260:	b	c1fc <PySequence_Fast@plt+0x7fbc>
    c264:	ldr	x0, [x20, #8]
    c268:	cmp	x0, x1
    c26c:	b.eq	c278 <PySequence_Fast@plt+0x8038>  // b.none
    c270:	bl	4160 <PyType_IsSubtype@plt>
    c274:	cbz	w0, c2b0 <PySequence_Fast@plt+0x8070>
    c278:	mov	x0, x21
    c27c:	mov	x1, #0x1                   	// #1
    c280:	bl	9680 <PySequence_Fast@plt+0x5440>
    c284:	tbnz	w0, #31, c174 <PySequence_Fast@plt+0x7f34>
    c288:	ldr	x0, [x21, #40]
    c28c:	ldr	x1, [x20]
    c290:	ldr	x3, [x0, #24]
    c294:	add	x1, x1, #0x1
    c298:	str	x1, [x20]
    c29c:	ldr	x1, [x0, #8]
    c2a0:	add	x2, x1, #0x1
    c2a4:	str	x20, [x3, x1, lsl #3]
    c2a8:	str	x2, [x0, #8]
    c2ac:	b	c1fc <PySequence_Fast@plt+0x7fbc>
    c2b0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c2b4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    c2b8:	ldr	x2, [x20, #8]
    c2bc:	add	x1, x1, #0x188
    c2c0:	ldr	x0, [x0, #3944]
    c2c4:	ldr	x2, [x2, #24]
    c2c8:	ldr	x0, [x0]
    c2cc:	bl	4180 <PyErr_Format@plt>
    c2d0:	ldr	x21, [sp, #32]
    c2d4:	b	c178 <PySequence_Fast@plt+0x7f38>
    c2d8:	stp	x29, x30, [sp, #-64]!
    c2dc:	mov	x29, sp
    c2e0:	stp	x19, x20, [sp, #16]
    c2e4:	mov	x20, x2
    c2e8:	sub	x2, x2, #0x1
    c2ec:	stp	x21, x22, [sp, #32]
    c2f0:	mov	x19, x0
    c2f4:	mov	x21, x1
    c2f8:	cmp	x2, #0x1
    c2fc:	b.hi	c3dc <PySequence_Fast@plt+0x819c>  // b.pmore
    c300:	cmp	x20, #0x1
    c304:	ldr	x22, [x21]
    c308:	b.le	c410 <PySequence_Fast@plt+0x81d0>
    c30c:	ldr	x21, [x21, #8]
    c310:	stp	x22, x21, [sp, #48]
    c314:	ldr	x0, [x19, #48]
    c318:	cbz	x0, c340 <PySequence_Fast@plt+0x8100>
    c31c:	ldr	x0, [x19, #40]
    c320:	add	x1, x19, #0x30
    c324:	cbz	x0, c43c <PySequence_Fast@plt+0x81fc>
    c328:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    c32c:	add	x3, x3, #0x9c0
    c330:	add	x3, x3, #0x2f8
    c334:	add	x2, x0, #0x20
    c338:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    c33c:	tbnz	w0, #31, c3f8 <PySequence_Fast@plt+0x81b8>
    c340:	ldr	x20, [x19, #88]
    c344:	cbz	x20, c41c <PySequence_Fast@plt+0x81dc>
    c348:	ldr	x0, [x20, #8]
    c34c:	ldr	x1, [x0, #168]
    c350:	ldr	x0, [x0, #56]
    c354:	tbz	w1, #11, c458 <PySequence_Fast@plt+0x8218>
    c358:	ldr	x4, [x20, x0]
    c35c:	cbz	x4, c458 <PySequence_Fast@plt+0x8218>
    c360:	mov	x3, #0x0                   	// #0
    c364:	add	x1, sp, #0x30
    c368:	mov	x0, x20
    c36c:	mov	x2, #0x2                   	// #2
    c370:	blr	x4
    c374:	mov	x1, x0
    c378:	mov	x2, #0x0                   	// #0
    c37c:	mov	x0, x20
    c380:	bl	4020 <_Py_CheckFunctionResult@plt>
    c384:	mov	x20, x0
    c388:	cbz	x20, c3f8 <PySequence_Fast@plt+0x81b8>
    c38c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c390:	ldrb	w1, [x19, #153]
    c394:	ldr	x21, [x19, #24]
    c398:	cmp	w1, #0x0
    c39c:	ldr	x0, [x0, #3976]
    c3a0:	ccmp	x21, x0, #0x4, ne  // ne = any
    c3a4:	b.ne	c4b8 <PySequence_Fast@plt+0x8278>  // b.any
    c3a8:	ldr	x0, [x19, #96]
    c3ac:	cbz	x0, c3c8 <PySequence_Fast@plt+0x8188>
    c3b0:	ldr	x1, [x19, #144]
    c3b4:	cbz	x1, c3c8 <PySequence_Fast@plt+0x8188>
    c3b8:	add	x0, x19, #0x60
    c3bc:	mov	x2, x20
    c3c0:	bl	89d8 <PySequence_Fast@plt+0x4798>
    c3c4:	tbnz	w0, #31, c498 <PySequence_Fast@plt+0x8258>
    c3c8:	mov	x0, x20
    c3cc:	ldp	x19, x20, [sp, #16]
    c3d0:	ldp	x21, x22, [sp, #32]
    c3d4:	ldp	x29, x30, [sp], #64
    c3d8:	ret
    c3dc:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    c3e0:	mov	x1, x20
    c3e4:	add	x0, x0, #0x600
    c3e8:	mov	x3, #0x2                   	// #2
    c3ec:	mov	x2, #0x1                   	// #1
    c3f0:	bl	3f60 <_PyArg_CheckPositional@plt>
    c3f4:	cbnz	w0, c300 <PySequence_Fast@plt+0x80c0>
    c3f8:	mov	x20, #0x0                   	// #0
    c3fc:	mov	x0, x20
    c400:	ldp	x19, x20, [sp, #16]
    c404:	ldp	x21, x22, [sp, #32]
    c408:	ldp	x29, x30, [sp], #64
    c40c:	ret
    c410:	adrp	x21, 21000 <PyInit__elementtree@@Base+0x13168>
    c414:	ldr	x21, [x21, #3976]
    c418:	b	c310 <PySequence_Fast@plt+0x80d0>
    c41c:	mov	x2, x21
    c420:	mov	x1, x22
    c424:	mov	x0, #0x2                   	// #2
    c428:	bl	4210 <PyTuple_Pack@plt>
    c42c:	mov	x20, x0
    c430:	cbnz	x0, c3a8 <PySequence_Fast@plt+0x8168>
    c434:	mov	x20, #0x0                   	// #0
    c438:	b	c3fc <PySequence_Fast@plt+0x81bc>
    c43c:	ldr	x0, [x19, #32]
    c440:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    c444:	add	x3, x3, #0x9c0
    c448:	add	x3, x3, #0x2e0
    c44c:	add	x2, x0, #0x18
    c450:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    c454:	b	c33c <PySequence_Fast@plt+0x80fc>
    c458:	mov	x0, x20
    c45c:	add	x1, sp, #0x30
    c460:	mov	x3, #0x0                   	// #0
    c464:	mov	x2, #0x2                   	// #2
    c468:	bl	41d0 <_PyObject_MakeTpCall@plt>
    c46c:	mov	x20, x0
    c470:	b	c388 <PySequence_Fast@plt+0x8148>
    c474:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c478:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    c47c:	ldr	x2, [x20, #8]
    c480:	add	x1, x1, #0x188
    c484:	ldr	x0, [x0, #3944]
    c488:	ldr	x2, [x2, #24]
    c48c:	ldr	x0, [x0]
    c490:	bl	4180 <PyErr_Format@plt>
    c494:	nop
    c498:	ldr	x0, [x20]
    c49c:	sub	x0, x0, #0x1
    c4a0:	str	x0, [x20]
    c4a4:	cbnz	x0, c3f8 <PySequence_Fast@plt+0x81b8>
    c4a8:	mov	x0, x20
    c4ac:	mov	x20, #0x0                   	// #0
    c4b0:	bl	3d70 <_Py_Dealloc@plt>
    c4b4:	b	c3c8 <PySequence_Fast@plt+0x8188>
    c4b8:	ldr	x1, [x21, #8]
    c4bc:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    c4c0:	add	x0, x0, #0x328
    c4c4:	cmp	x1, x0
    c4c8:	b.eq	c534 <PySequence_Fast@plt+0x82f4>  // b.none
    c4cc:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    c4d0:	add	x1, x1, #0x9c0
    c4d4:	mov	x0, x21
    c4d8:	add	x1, x1, #0x350
    c4dc:	mov	x2, x20
    c4e0:	mov	x3, #0x0                   	// #0
    c4e4:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    c4e8:	cbz	x0, c498 <PySequence_Fast@plt+0x8258>
    c4ec:	ldr	x2, [x0]
    c4f0:	sub	x2, x2, #0x1
    c4f4:	str	x2, [x0]
    c4f8:	cbz	x2, c52c <PySequence_Fast@plt+0x82ec>
    c4fc:	ldr	x1, [x20]
    c500:	ldr	x0, [x19, #40]
    c504:	add	x1, x1, #0x1
    c508:	str	x1, [x20]
    c50c:	str	x20, [x19, #40]
    c510:	cbz	x0, c3a8 <PySequence_Fast@plt+0x8168>
    c514:	ldr	x1, [x0]
    c518:	sub	x1, x1, #0x1
    c51c:	str	x1, [x0]
    c520:	cbnz	x1, c3a8 <PySequence_Fast@plt+0x8168>
    c524:	bl	3d70 <_Py_Dealloc@plt>
    c528:	b	c3a8 <PySequence_Fast@plt+0x8168>
    c52c:	bl	3d70 <_Py_Dealloc@plt>
    c530:	b	c4fc <PySequence_Fast@plt+0x82bc>
    c534:	ldr	x0, [x20, #8]
    c538:	cmp	x0, x1
    c53c:	b.eq	c548 <PySequence_Fast@plt+0x8308>  // b.none
    c540:	bl	4160 <PyType_IsSubtype@plt>
    c544:	cbz	w0, c474 <PySequence_Fast@plt+0x8234>
    c548:	mov	x0, x21
    c54c:	mov	x1, #0x1                   	// #1
    c550:	bl	9680 <PySequence_Fast@plt+0x5440>
    c554:	tbnz	w0, #31, c498 <PySequence_Fast@plt+0x8258>
    c558:	ldr	x0, [x21, #40]
    c55c:	ldr	x1, [x20]
    c560:	ldr	x3, [x0, #24]
    c564:	add	x1, x1, #0x1
    c568:	str	x1, [x20]
    c56c:	ldr	x1, [x0, #8]
    c570:	add	x2, x1, #0x1
    c574:	str	x20, [x3, x1, lsl #3]
    c578:	str	x2, [x0, #8]
    c57c:	b	c4fc <PySequence_Fast@plt+0x82bc>
    c580:	stp	x29, x30, [sp, #-64]!
    c584:	mov	x29, sp
    c588:	stp	x19, x20, [sp, #16]
    c58c:	mov	x19, x0
    c590:	mov	x20, x2
    c594:	stp	x23, x24, [sp, #48]
    c598:	adrp	x23, 22000 <PyInit__elementtree@@Base+0x14168>
    c59c:	add	x24, x23, #0x9c0
    c5a0:	add	x0, x24, #0x40
    c5a4:	stp	x21, x22, [sp, #32]
    c5a8:	mov	x21, x1
    c5ac:	bl	3fc0 <PyState_FindModule@plt>
    c5b0:	bl	3e10 <PyModule_GetState@plt>
    c5b4:	mov	x22, x0
    c5b8:	ldr	x1, [x19, #48]
    c5bc:	cbz	x1, c5dc <PySequence_Fast@plt+0x839c>
    c5c0:	ldr	x0, [x19, #40]
    c5c4:	add	x1, x19, #0x30
    c5c8:	cbz	x0, c774 <PySequence_Fast@plt+0x8534>
    c5cc:	add	x3, x24, #0x2f8
    c5d0:	add	x2, x0, #0x20
    c5d4:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    c5d8:	tbnz	w0, #31, c720 <PySequence_Fast@plt+0x84e0>
    c5dc:	ldr	x0, [x19, #72]
    c5e0:	cbz	x0, c804 <PySequence_Fast@plt+0x85c4>
    c5e4:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    c5e8:	ldr	x1, [x1, #3976]
    c5ec:	cmp	x20, x1
    c5f0:	b.eq	c788 <PySequence_Fast@plt+0x8548>  // b.none
    c5f4:	mov	x2, x20
    c5f8:	mov	x1, x21
    c5fc:	mov	x3, #0x0                   	// #0
    c600:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    c604:	mov	x20, x0
    c608:	cbz	x20, c720 <PySequence_Fast@plt+0x84e0>
    c60c:	ldr	x0, [x19, #40]
    c610:	ldr	x21, [x19, #24]
    c614:	cbz	x0, c62c <PySequence_Fast@plt+0x83ec>
    c618:	ldr	x1, [x0]
    c61c:	str	xzr, [x19, #40]
    c620:	sub	x1, x1, #0x1
    c624:	str	x1, [x0]
    c628:	cbz	x1, c7c8 <PySequence_Fast@plt+0x8588>
    c62c:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c630:	ldr	x0, [x0, #3976]
    c634:	cmp	x21, x0
    c638:	b.eq	c73c <PySequence_Fast@plt+0x84fc>  // b.none
    c63c:	ldr	x1, [x21, #8]
    c640:	adrp	x0, 22000 <PyInit__elementtree@@Base+0x14168>
    c644:	add	x0, x0, #0x328
    c648:	cmp	x1, x0
    c64c:	b.eq	c854 <PySequence_Fast@plt+0x8614>  // b.none
    c650:	add	x1, x23, #0x9c0
    c654:	mov	x2, x20
    c658:	add	x1, x1, #0x350
    c65c:	mov	x0, x21
    c660:	mov	x3, #0x0                   	// #0
    c664:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    c668:	cbz	x0, c710 <PySequence_Fast@plt+0x84d0>
    c66c:	ldr	x2, [x0]
    c670:	sub	x2, x2, #0x1
    c674:	str	x2, [x0]
    c678:	cbz	x2, c84c <PySequence_Fast@plt+0x860c>
    c67c:	ldp	x0, x1, [x19, #56]
    c680:	ldr	x2, [x0, #16]
    c684:	cmp	x1, x2
    c688:	b.ge	c764 <PySequence_Fast@plt+0x8524>  // b.tcont
    c68c:	mov	x2, x21
    c690:	bl	3fb0 <PyList_SetItem@plt>
    c694:	tbnz	w0, #31, c710 <PySequence_Fast@plt+0x84d0>
    c698:	ldr	x0, [x21]
    c69c:	add	x0, x0, #0x1
    c6a0:	str	x0, [x21]
    c6a4:	ldr	x1, [x19, #64]
    c6a8:	ldr	x0, [x19, #24]
    c6ac:	add	x1, x1, #0x1
    c6b0:	str	x1, [x19, #64]
    c6b4:	ldr	x1, [x20]
    c6b8:	add	x1, x1, #0x1
    c6bc:	str	x1, [x20]
    c6c0:	ldr	x1, [x0]
    c6c4:	str	x20, [x19, #24]
    c6c8:	sub	x1, x1, #0x1
    c6cc:	str	x1, [x0]
    c6d0:	cbz	x1, c83c <PySequence_Fast@plt+0x85fc>
    c6d4:	ldr	x1, [x20]
    c6d8:	ldr	x0, [x19, #32]
    c6dc:	add	x1, x1, #0x1
    c6e0:	str	x1, [x20]
    c6e4:	ldr	x1, [x0]
    c6e8:	str	x20, [x19, #32]
    c6ec:	sub	x1, x1, #0x1
    c6f0:	str	x1, [x0]
    c6f4:	cbz	x1, c844 <PySequence_Fast@plt+0x8604>
    c6f8:	ldr	x1, [x19, #104]
    c6fc:	cbz	x1, c724 <PySequence_Fast@plt+0x84e4>
    c700:	add	x0, x19, #0x60
    c704:	mov	x2, x20
    c708:	bl	89d8 <PySequence_Fast@plt+0x4798>
    c70c:	tbz	w0, #31, c724 <PySequence_Fast@plt+0x84e4>
    c710:	ldr	x0, [x20]
    c714:	sub	x0, x0, #0x1
    c718:	str	x0, [x20]
    c71c:	cbz	x0, c7e0 <PySequence_Fast@plt+0x85a0>
    c720:	mov	x20, #0x0                   	// #0
    c724:	mov	x0, x20
    c728:	ldp	x19, x20, [sp, #16]
    c72c:	ldp	x21, x22, [sp, #32]
    c730:	ldp	x23, x24, [sp, #48]
    c734:	ldp	x29, x30, [sp], #64
    c738:	ret
    c73c:	ldr	x0, [x19, #16]
    c740:	cbnz	x0, c818 <PySequence_Fast@plt+0x85d8>
    c744:	ldr	x0, [x20]
    c748:	add	x0, x0, #0x1
    c74c:	str	x0, [x20]
    c750:	str	x20, [x19, #16]
    c754:	ldp	x0, x1, [x19, #56]
    c758:	ldr	x2, [x0, #16]
    c75c:	cmp	x1, x2
    c760:	b.lt	c68c <PySequence_Fast@plt+0x844c>  // b.tstop
    c764:	mov	x1, x21
    c768:	bl	3f00 <PyList_Append@plt>
    c76c:	tbz	w0, #31, c6a4 <PySequence_Fast@plt+0x8464>
    c770:	b	c710 <PySequence_Fast@plt+0x84d0>
    c774:	ldr	x0, [x19, #32]
    c778:	add	x3, x24, #0x2e0
    c77c:	add	x2, x0, #0x18
    c780:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    c784:	b	c5d8 <PySequence_Fast@plt+0x8398>
    c788:	bl	4080 <PyDict_New@plt>
    c78c:	mov	x24, x0
    c790:	cbz	x0, c720 <PySequence_Fast@plt+0x84e0>
    c794:	mov	x2, x0
    c798:	mov	x1, x21
    c79c:	ldr	x0, [x19, #72]
    c7a0:	mov	x3, #0x0                   	// #0
    c7a4:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    c7a8:	mov	x20, x0
    c7ac:	ldr	x1, [x24]
    c7b0:	sub	x0, x1, #0x1
    c7b4:	str	x0, [x24]
    c7b8:	cbnz	x0, c608 <PySequence_Fast@plt+0x83c8>
    c7bc:	mov	x0, x24
    c7c0:	bl	3d70 <_Py_Dealloc@plt>
    c7c4:	b	c608 <PySequence_Fast@plt+0x83c8>
    c7c8:	bl	3d70 <_Py_Dealloc@plt>
    c7cc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c7d0:	ldr	x0, [x0, #3976]
    c7d4:	cmp	x21, x0
    c7d8:	b.ne	c63c <PySequence_Fast@plt+0x83fc>  // b.any
    c7dc:	b	c73c <PySequence_Fast@plt+0x84fc>
    c7e0:	mov	x0, x20
    c7e4:	mov	x20, #0x0                   	// #0
    c7e8:	bl	3d70 <_Py_Dealloc@plt>
    c7ec:	mov	x0, x20
    c7f0:	ldp	x19, x20, [sp, #16]
    c7f4:	ldp	x21, x22, [sp, #32]
    c7f8:	ldp	x23, x24, [sp, #48]
    c7fc:	ldp	x29, x30, [sp], #64
    c800:	ret
    c804:	mov	x1, x20
    c808:	mov	x0, x21
    c80c:	bl	8518 <PySequence_Fast@plt+0x42d8>
    c810:	mov	x20, x0
    c814:	b	c608 <PySequence_Fast@plt+0x83c8>
    c818:	ldr	x0, [x22]
    c81c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    c820:	add	x1, x1, #0x798
    c824:	bl	3de0 <PyErr_SetString@plt>
    c828:	ldr	x0, [x20]
    c82c:	sub	x0, x0, #0x1
    c830:	str	x0, [x20]
    c834:	cbnz	x0, c720 <PySequence_Fast@plt+0x84e0>
    c838:	b	c7e0 <PySequence_Fast@plt+0x85a0>
    c83c:	bl	3d70 <_Py_Dealloc@plt>
    c840:	b	c6d4 <PySequence_Fast@plt+0x8494>
    c844:	bl	3d70 <_Py_Dealloc@plt>
    c848:	b	c6f8 <PySequence_Fast@plt+0x84b8>
    c84c:	bl	3d70 <_Py_Dealloc@plt>
    c850:	b	c67c <PySequence_Fast@plt+0x843c>
    c854:	ldr	x0, [x20, #8]
    c858:	cmp	x0, x1
    c85c:	b.eq	c868 <PySequence_Fast@plt+0x8628>  // b.none
    c860:	bl	4160 <PyType_IsSubtype@plt>
    c864:	cbz	w0, c8a0 <PySequence_Fast@plt+0x8660>
    c868:	mov	x0, x21
    c86c:	mov	x1, #0x1                   	// #1
    c870:	bl	9680 <PySequence_Fast@plt+0x5440>
    c874:	tbnz	w0, #31, c710 <PySequence_Fast@plt+0x84d0>
    c878:	ldr	x0, [x21, #40]
    c87c:	ldr	x1, [x20]
    c880:	ldr	x3, [x0, #24]
    c884:	add	x1, x1, #0x1
    c888:	str	x1, [x20]
    c88c:	ldr	x1, [x0, #8]
    c890:	add	x2, x1, #0x1
    c894:	str	x20, [x3, x1, lsl #3]
    c898:	str	x2, [x0, #8]
    c89c:	b	c67c <PySequence_Fast@plt+0x843c>
    c8a0:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c8a4:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    c8a8:	ldr	x2, [x20, #8]
    c8ac:	add	x1, x1, #0x188
    c8b0:	ldr	x0, [x0, #3944]
    c8b4:	ldr	x2, [x2, #24]
    c8b8:	ldr	x0, [x0]
    c8bc:	bl	4180 <PyErr_Format@plt>
    c8c0:	b	c710 <PySequence_Fast@plt+0x84d0>
    c8c4:	nop
    c8c8:	stp	x29, x30, [sp, #-96]!
    c8cc:	mov	x29, sp
    c8d0:	stp	x19, x20, [sp, #16]
    c8d4:	mov	x20, x1
    c8d8:	mov	x19, x2
    c8dc:	stp	x21, x22, [sp, #32]
    c8e0:	mov	x22, x0
    c8e4:	bl	3f80 <PyErr_Occurred@plt>
    c8e8:	cbz	x0, c8fc <PySequence_Fast@plt+0x86bc>
    c8ec:	ldp	x19, x20, [sp, #16]
    c8f0:	ldp	x21, x22, [sp, #32]
    c8f4:	ldp	x29, x30, [sp], #96
    c8f8:	ret
    c8fc:	stp	x25, x26, [sp, #64]
    c900:	add	x25, x22, #0x28
    c904:	mov	x1, x20
    c908:	mov	x0, x25
    c90c:	stp	x23, x24, [sp, #48]
    c910:	bl	6890 <PySequence_Fast@plt+0x2650>
    c914:	mov	x24, x0
    c918:	cbz	x0, ca74 <PySequence_Fast@plt+0x8834>
    c91c:	ldr	x0, [x19]
    c920:	cbz	x0, c9dc <PySequence_Fast@plt+0x879c>
    c924:	bl	4080 <PyDict_New@plt>
    c928:	mov	x23, x0
    c92c:	cbz	x0, cb84 <PySequence_Fast@plt+0x8944>
    c930:	ldr	x1, [x19]
    c934:	adrp	x26, e000 <PyInit__elementtree@@Base+0x168>
    c938:	add	x26, x26, #0x2c0
    c93c:	cbz	x1, c9f4 <PySequence_Fast@plt+0x87b4>
    c940:	str	x27, [sp, #80]
    c944:	nop
    c948:	ldr	x2, [x19, #8]
    c94c:	mov	x0, x25
    c950:	cbz	x2, c9c8 <PySequence_Fast@plt+0x8788>
    c954:	bl	6890 <PySequence_Fast@plt+0x2650>
    c958:	mov	x20, x0
    c95c:	ldr	x21, [x19, #8]
    c960:	mov	x0, x21
    c964:	bl	3c70 <strlen@plt>
    c968:	mov	x2, x26
    c96c:	mov	x1, x0
    c970:	mov	x0, x21
    c974:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    c978:	cmp	x20, #0x0
    c97c:	mov	x21, x0
    c980:	mov	x1, x20
    c984:	mov	x2, x0
    c988:	ccmp	x0, #0x0, #0x4, ne  // ne = any
    c98c:	b.eq	cab0 <PySequence_Fast@plt+0x8870>  // b.none
    c990:	mov	x0, x23
    c994:	bl	4140 <PyDict_SetItem@plt>
    c998:	ldr	x1, [x21]
    c99c:	mov	w27, w0
    c9a0:	sub	x1, x1, #0x1
    c9a4:	str	x1, [x21]
    c9a8:	cbz	x1, ca98 <PySequence_Fast@plt+0x8858>
    c9ac:	ldr	x1, [x20]
    c9b0:	sub	x1, x1, #0x1
    c9b4:	str	x1, [x20]
    c9b8:	cbz	x1, c9d0 <PySequence_Fast@plt+0x8790>
    c9bc:	tbnz	w27, #31, cae8 <PySequence_Fast@plt+0x88a8>
    c9c0:	ldr	x1, [x19, #16]!
    c9c4:	cbnz	x1, c948 <PySequence_Fast@plt+0x8708>
    c9c8:	ldr	x27, [sp, #80]
    c9cc:	b	c9f4 <PySequence_Fast@plt+0x87b4>
    c9d0:	mov	x0, x20
    c9d4:	bl	3d70 <_Py_Dealloc@plt>
    c9d8:	b	c9bc <PySequence_Fast@plt+0x877c>
    c9dc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    c9e0:	ldr	x0, [x0, #3976]
    c9e4:	mov	x23, x0
    c9e8:	ldr	x1, [x0]
    c9ec:	add	x1, x1, #0x1
    c9f0:	str	x1, [x0]
    c9f4:	ldr	x0, [x22, #24]
    c9f8:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    c9fc:	add	x1, x1, #0x328
    ca00:	add	x1, x1, #0x340
    ca04:	ldr	x2, [x0, #8]
    ca08:	cmp	x2, x1
    ca0c:	b.eq	cb9c <PySequence_Fast@plt+0x895c>  // b.none
    ca10:	ldr	x19, [x22, #64]
    ca14:	cbz	x19, ca40 <PySequence_Fast@plt+0x8800>
    ca18:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    ca1c:	ldr	x0, [x0, #3976]
    ca20:	cmp	x23, x0
    ca24:	b.eq	cb44 <PySequence_Fast@plt+0x8904>  // b.none
    ca28:	mov	x0, x19
    ca2c:	mov	x2, x23
    ca30:	mov	x1, x24
    ca34:	mov	x3, #0x0                   	// #0
    ca38:	bl	3fd0 <PyObject_CallFunctionObjArgs@plt>
    ca3c:	mov	x19, x0
    ca40:	ldr	x0, [x24]
    ca44:	sub	x0, x0, #0x1
    ca48:	str	x0, [x24]
    ca4c:	cbz	x0, caa4 <PySequence_Fast@plt+0x8864>
    ca50:	ldr	x0, [x23]
    ca54:	sub	x0, x0, #0x1
    ca58:	str	x0, [x23]
    ca5c:	cbz	x0, ca8c <PySequence_Fast@plt+0x884c>
    ca60:	cbz	x19, ca74 <PySequence_Fast@plt+0x8834>
    ca64:	ldr	x0, [x19]
    ca68:	sub	x0, x0, #0x1
    ca6c:	str	x0, [x19]
    ca70:	cbz	x0, cb68 <PySequence_Fast@plt+0x8928>
    ca74:	ldp	x19, x20, [sp, #16]
    ca78:	ldp	x21, x22, [sp, #32]
    ca7c:	ldp	x23, x24, [sp, #48]
    ca80:	ldp	x25, x26, [sp, #64]
    ca84:	ldp	x29, x30, [sp], #96
    ca88:	ret
    ca8c:	mov	x0, x23
    ca90:	bl	3d70 <_Py_Dealloc@plt>
    ca94:	b	ca60 <PySequence_Fast@plt+0x8820>
    ca98:	mov	x0, x21
    ca9c:	bl	3d70 <_Py_Dealloc@plt>
    caa0:	b	c9ac <PySequence_Fast@plt+0x876c>
    caa4:	mov	x0, x24
    caa8:	bl	3d70 <_Py_Dealloc@plt>
    caac:	b	ca50 <PySequence_Fast@plt+0x8810>
    cab0:	cbz	x0, cac8 <PySequence_Fast@plt+0x8888>
    cab4:	ldr	x1, [x0]
    cab8:	sub	x1, x1, #0x1
    cabc:	str	x1, [x0]
    cac0:	cbnz	x1, cac8 <PySequence_Fast@plt+0x8888>
    cac4:	bl	3d70 <_Py_Dealloc@plt>
    cac8:	cbz	x20, cae8 <PySequence_Fast@plt+0x88a8>
    cacc:	ldr	x0, [x20]
    cad0:	sub	x0, x0, #0x1
    cad4:	str	x0, [x20]
    cad8:	cbnz	x0, cae8 <PySequence_Fast@plt+0x88a8>
    cadc:	mov	x0, x20
    cae0:	bl	3d70 <_Py_Dealloc@plt>
    cae4:	nop
    cae8:	ldr	x0, [x23]
    caec:	sub	x0, x0, #0x1
    caf0:	str	x0, [x23]
    caf4:	cbz	x0, cb18 <PySequence_Fast@plt+0x88d8>
    caf8:	ldr	x0, [x24]
    cafc:	sub	x0, x0, #0x1
    cb00:	str	x0, [x24]
    cb04:	cbz	x0, cb24 <PySequence_Fast@plt+0x88e4>
    cb08:	ldp	x23, x24, [sp, #48]
    cb0c:	ldp	x25, x26, [sp, #64]
    cb10:	ldr	x27, [sp, #80]
    cb14:	b	c8ec <PySequence_Fast@plt+0x86ac>
    cb18:	mov	x0, x23
    cb1c:	bl	3d70 <_Py_Dealloc@plt>
    cb20:	b	caf8 <PySequence_Fast@plt+0x88b8>
    cb24:	mov	x0, x24
    cb28:	ldp	x19, x20, [sp, #16]
    cb2c:	ldp	x21, x22, [sp, #32]
    cb30:	ldp	x23, x24, [sp, #48]
    cb34:	ldp	x25, x26, [sp, #64]
    cb38:	ldr	x27, [sp, #80]
    cb3c:	ldp	x29, x30, [sp], #96
    cb40:	b	3d70 <_Py_Dealloc@plt>
    cb44:	ldr	x0, [x23]
    cb48:	sub	x0, x0, #0x1
    cb4c:	str	x0, [x23]
    cb50:	cbz	x0, cbb0 <PySequence_Fast@plt+0x8970>
    cb54:	bl	4080 <PyDict_New@plt>
    cb58:	mov	x23, x0
    cb5c:	cbz	x0, cb84 <PySequence_Fast@plt+0x8944>
    cb60:	ldr	x19, [x22, #64]
    cb64:	b	ca28 <PySequence_Fast@plt+0x87e8>
    cb68:	mov	x0, x19
    cb6c:	ldp	x19, x20, [sp, #16]
    cb70:	ldp	x21, x22, [sp, #32]
    cb74:	ldp	x23, x24, [sp, #48]
    cb78:	ldp	x25, x26, [sp, #64]
    cb7c:	ldp	x29, x30, [sp], #96
    cb80:	b	3d70 <_Py_Dealloc@plt>
    cb84:	ldr	x0, [x24]
    cb88:	sub	x0, x0, #0x1
    cb8c:	str	x0, [x24]
    cb90:	cbnz	x0, ca74 <PySequence_Fast@plt+0x8834>
    cb94:	mov	x0, x24
    cb98:	b	cb6c <PySequence_Fast@plt+0x892c>
    cb9c:	mov	x2, x23
    cba0:	mov	x1, x24
    cba4:	bl	c580 <PySequence_Fast@plt+0x8340>
    cba8:	mov	x19, x0
    cbac:	b	ca40 <PySequence_Fast@plt+0x8800>
    cbb0:	mov	x0, x23
    cbb4:	bl	3d70 <_Py_Dealloc@plt>
    cbb8:	b	cb54 <PySequence_Fast@plt+0x8914>
    cbbc:	nop
    cbc0:	stp	x29, x30, [sp, #-48]!
    cbc4:	mov	x29, sp
    cbc8:	stp	x19, x20, [sp, #16]
    cbcc:	mov	x19, x2
    cbd0:	sub	x2, x2, #0x1
    cbd4:	str	x21, [sp, #32]
    cbd8:	mov	x20, x1
    cbdc:	cmp	x2, #0x1
    cbe0:	mov	x21, x0
    cbe4:	b.hi	cc0c <PySequence_Fast@plt+0x89cc>  // b.pmore
    cbe8:	cmp	x19, #0x1
    cbec:	ldr	x1, [x20]
    cbf0:	b.le	cc3c <PySequence_Fast@plt+0x89fc>
    cbf4:	mov	x0, x21
    cbf8:	ldr	x2, [x20, #8]
    cbfc:	ldp	x19, x20, [sp, #16]
    cc00:	ldr	x21, [sp, #32]
    cc04:	ldp	x29, x30, [sp], #48
    cc08:	b	c580 <PySequence_Fast@plt+0x8340>
    cc0c:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    cc10:	mov	x1, x19
    cc14:	add	x0, x0, #0x3d0
    cc18:	mov	x3, #0x2                   	// #2
    cc1c:	mov	x2, #0x1                   	// #1
    cc20:	bl	3f60 <_PyArg_CheckPositional@plt>
    cc24:	cbnz	w0, cbe8 <PySequence_Fast@plt+0x89a8>
    cc28:	mov	x0, #0x0                   	// #0
    cc2c:	ldp	x19, x20, [sp, #16]
    cc30:	ldr	x21, [sp, #32]
    cc34:	ldp	x29, x30, [sp], #48
    cc38:	ret
    cc3c:	mov	x0, x21
    cc40:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    cc44:	ldp	x19, x20, [sp, #16]
    cc48:	ldr	x21, [sp, #32]
    cc4c:	ldp	x29, x30, [sp], #48
    cc50:	ldr	x2, [x2, #3976]
    cc54:	b	c580 <PySequence_Fast@plt+0x8340>
    cc58:	stp	x29, x30, [sp, #-64]!
    cc5c:	mov	x29, sp
    cc60:	stp	x21, x22, [sp, #32]
    cc64:	mov	x22, x0
    cc68:	ldr	x0, [x1, #8]
    cc6c:	stp	x19, x20, [sp, #16]
    cc70:	adrp	x19, 22000 <PyInit__elementtree@@Base+0x14168>
    cc74:	add	x19, x19, #0x328
    cc78:	mov	x20, x1
    cc7c:	cmp	x0, x19
    cc80:	b.eq	cca8 <PySequence_Fast@plt+0x8a68>  // b.none
    cc84:	mov	x1, x19
    cc88:	bl	4160 <PyType_IsSubtype@plt>
    cc8c:	cbz	w0, cdf0 <PySequence_Fast@plt+0x8bb0>
    cc90:	ldr	x0, [x20, #8]
    cc94:	cmp	x0, x19
    cc98:	b.eq	cca8 <PySequence_Fast@plt+0x8a68>  // b.none
    cc9c:	mov	x1, x19
    cca0:	bl	4160 <PyType_IsSubtype@plt>
    cca4:	cbz	w0, ce24 <PySequence_Fast@plt+0x8be4>
    cca8:	ldr	x19, [x22, #40]
    ccac:	str	x23, [sp, #48]
    ccb0:	cbz	x19, cdac <PySequence_Fast@plt+0x8b6c>
    ccb4:	ldp	x1, x0, [x19, #8]
    ccb8:	add	x1, x1, #0x1
    ccbc:	cmp	x0, x1
    ccc0:	b.ge	cd14 <PySequence_Fast@plt+0x8ad4>  // b.tcont
    ccc4:	cmp	x1, #0x9
    ccc8:	mov	x21, #0x3                   	// #3
    cccc:	add	x1, x1, x1, asr #3
    ccd0:	mov	x0, #0x6                   	// #6
    ccd4:	csel	x21, x21, x0, lt  // lt = tstop
    ccd8:	adds	x21, x1, x21
    ccdc:	b.ne	cd64 <PySequence_Fast@plt+0x8b24>  // b.any
    cce0:	ldr	x0, [x19, #24]
    cce4:	add	x19, x19, #0x20
    cce8:	mov	x1, #0x8                   	// #8
    ccec:	mov	x21, #0x1                   	// #1
    ccf0:	cmp	x0, x19
    ccf4:	b.eq	cd84 <PySequence_Fast@plt+0x8b44>  // b.none
    ccf8:	bl	4060 <PyObject_Realloc@plt>
    ccfc:	mov	x23, x0
    cd00:	cbz	x0, ce14 <PySequence_Fast@plt+0x8bd4>
    cd04:	ldr	x19, [x22, #40]
    cd08:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    cd0c:	stp	x21, x23, [x19, #16]
    cd10:	b	cd1c <PySequence_Fast@plt+0x8adc>
    cd14:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    cd18:	ldr	x23, [x19, #24]
    cd1c:	ldr	x2, [x20]
    cd20:	ldr	x1, [x1, #3976]
    cd24:	add	x2, x2, #0x1
    cd28:	str	x2, [x20]
    cd2c:	ldr	x0, [x19, #8]
    cd30:	ldr	x2, [x1]
    cd34:	add	x3, x0, #0x1
    cd38:	str	x20, [x23, x0, lsl #3]
    cd3c:	ldr	x23, [sp, #48]
    cd40:	str	x3, [x19, #8]
    cd44:	mov	x19, x1
    cd48:	add	x2, x2, #0x1
    cd4c:	str	x2, [x1]
    cd50:	mov	x0, x19
    cd54:	ldp	x19, x20, [sp, #16]
    cd58:	ldp	x21, x22, [sp, #32]
    cd5c:	ldp	x29, x30, [sp], #64
    cd60:	ret
    cd64:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    cd68:	cmp	x21, x0
    cd6c:	b.hi	ce14 <PySequence_Fast@plt+0x8bd4>  // b.pmore
    cd70:	ldr	x0, [x19, #24]
    cd74:	add	x19, x19, #0x20
    cd78:	lsl	x1, x21, #3
    cd7c:	cmp	x0, x19
    cd80:	b.ne	ccf8 <PySequence_Fast@plt+0x8ab8>  // b.any
    cd84:	mov	x0, x1
    cd88:	bl	3e00 <PyObject_Malloc@plt>
    cd8c:	mov	x23, x0
    cd90:	cbz	x0, ce14 <PySequence_Fast@plt+0x8bd4>
    cd94:	ldr	x1, [x22, #40]
    cd98:	ldr	x2, [x1, #8]
    cd9c:	ldr	x1, [x1, #24]
    cda0:	lsl	x2, x2, #3
    cda4:	bl	3c20 <memcpy@plt>
    cda8:	b	cd04 <PySequence_Fast@plt+0x8ac4>
    cdac:	mov	x0, #0x40                  	// #64
    cdb0:	bl	3e00 <PyObject_Malloc@plt>
    cdb4:	str	x0, [x22, #40]
    cdb8:	mov	x19, x0
    cdbc:	cbz	x0, ce4c <PySequence_Fast@plt+0x8c0c>
    cdc0:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    cdc4:	add	x0, x0, #0x20
    cdc8:	str	x0, [x19, #24]
    cdcc:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    cdd0:	ldr	x0, [x1, #3976]
    cdd4:	ldr	q0, [x2, #3120]
    cdd8:	ldr	x2, [x0]
    cddc:	stur	q0, [x19, #8]
    cde0:	add	x2, x2, #0x1
    cde4:	str	x2, [x0]
    cde8:	str	x0, [x19]
    cdec:	b	cd18 <PySequence_Fast@plt+0x8ad8>
    cdf0:	ldr	x2, [x19, #24]
    cdf4:	mov	x3, x20
    cdf8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    cdfc:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    ce00:	add	x1, x1, #0x410
    ce04:	add	x0, x0, #0x388
    ce08:	mov	x19, #0x0                   	// #0
    ce0c:	bl	3ed0 <_PyArg_BadArgument@plt>
    ce10:	b	cd50 <PySequence_Fast@plt+0x8b10>
    ce14:	bl	3d80 <PyErr_NoMemory@plt>
    ce18:	mov	x19, #0x0                   	// #0
    ce1c:	ldr	x23, [sp, #48]
    ce20:	b	cd50 <PySequence_Fast@plt+0x8b10>
    ce24:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    ce28:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    ce2c:	ldr	x2, [x20, #8]
    ce30:	add	x1, x1, #0x188
    ce34:	ldr	x0, [x0, #3944]
    ce38:	mov	x19, #0x0                   	// #0
    ce3c:	ldr	x2, [x2, #24]
    ce40:	ldr	x0, [x0]
    ce44:	bl	4180 <PyErr_Format@plt>
    ce48:	b	cd50 <PySequence_Fast@plt+0x8b10>
    ce4c:	bl	3d80 <PyErr_NoMemory@plt>
    ce50:	ldr	x23, [sp, #48]
    ce54:	b	cd50 <PySequence_Fast@plt+0x8b10>
    ce58:	stp	x29, x30, [sp, #-80]!
    ce5c:	mov	x29, sp
    ce60:	stp	x19, x20, [sp, #16]
    ce64:	mov	x19, x1
    ce68:	mov	x20, x2
    ce6c:	stp	x21, x22, [sp, #32]
    ce70:	mov	x21, x0
    ce74:	bl	3f80 <PyErr_Occurred@plt>
    ce78:	cbz	x0, ce8c <PySequence_Fast@plt+0x8c4c>
    ce7c:	ldp	x19, x20, [sp, #16]
    ce80:	ldp	x21, x22, [sp, #32]
    ce84:	ldp	x29, x30, [sp], #80
    ce88:	ret
    ce8c:	str	x23, [sp, #48]
    ce90:	mov	x22, x0
    ce94:	ldr	x23, [x21, #24]
    ce98:	cmp	x20, #0x0
    ce9c:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    cea0:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    cea4:	add	x2, x2, #0xb38
    cea8:	add	x1, x1, #0x328
    ceac:	ldr	x0, [x23, #8]
    ceb0:	csel	x20, x2, x20, eq  // eq = none
    ceb4:	add	x1, x1, #0x340
    ceb8:	cmp	x19, #0x0
    cebc:	csel	x19, x2, x19, eq  // eq = none
    cec0:	cmp	x0, x1
    cec4:	b.eq	cfa8 <PySequence_Fast@plt+0x8d68>  // b.none
    cec8:	ldr	x0, [x21, #48]
    cecc:	cbz	x0, cf94 <PySequence_Fast@plt+0x8d54>
    ced0:	mov	x0, x19
    ced4:	adrp	x22, e000 <PyInit__elementtree@@Base+0x168>
    ced8:	bl	3c70 <strlen@plt>
    cedc:	add	x22, x22, #0x2c0
    cee0:	mov	x1, x0
    cee4:	mov	x2, x22
    cee8:	mov	x0, x19
    ceec:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    cef0:	mov	x19, x0
    cef4:	cbz	x0, cf94 <PySequence_Fast@plt+0x8d54>
    cef8:	mov	x0, x20
    cefc:	bl	3c70 <strlen@plt>
    cf00:	mov	x2, x22
    cf04:	mov	x1, x0
    cf08:	mov	x0, x20
    cf0c:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    cf10:	mov	x20, x0
    cf14:	cbz	x0, d088 <PySequence_Fast@plt+0x8e48>
    cf18:	ldr	x21, [x21, #48]
    cf1c:	ldr	x0, [x21, #8]
    cf20:	stp	x19, x20, [sp, #64]
    cf24:	ldr	x1, [x0, #168]
    cf28:	ldr	x0, [x0, #56]
    cf2c:	tbz	w1, #11, d0b4 <PySequence_Fast@plt+0x8e74>
    cf30:	ldr	x4, [x21, x0]
    cf34:	cbz	x4, d0b4 <PySequence_Fast@plt+0x8e74>
    cf38:	mov	x3, #0x0                   	// #0
    cf3c:	add	x1, sp, #0x40
    cf40:	mov	x2, #0x2                   	// #2
    cf44:	mov	x0, x21
    cf48:	blr	x4
    cf4c:	mov	x1, x0
    cf50:	mov	x2, #0x0                   	// #0
    cf54:	mov	x0, x21
    cf58:	bl	4020 <_Py_CheckFunctionResult@plt>
    cf5c:	mov	x22, x0
    cf60:	ldr	x0, [x20]
    cf64:	sub	x0, x0, #0x1
    cf68:	str	x0, [x20]
    cf6c:	cbz	x0, d0a8 <PySequence_Fast@plt+0x8e68>
    cf70:	ldr	x0, [x19]
    cf74:	sub	x0, x0, #0x1
    cf78:	str	x0, [x19]
    cf7c:	cbz	x0, d06c <PySequence_Fast@plt+0x8e2c>
    cf80:	cbz	x22, cf94 <PySequence_Fast@plt+0x8d54>
    cf84:	ldr	x0, [x22]
    cf88:	sub	x0, x0, #0x1
    cf8c:	str	x0, [x22]
    cf90:	cbz	x0, d078 <PySequence_Fast@plt+0x8e38>
    cf94:	ldp	x19, x20, [sp, #16]
    cf98:	ldp	x21, x22, [sp, #32]
    cf9c:	ldr	x23, [sp, #48]
    cfa0:	ldp	x29, x30, [sp], #80
    cfa4:	ret
    cfa8:	ldr	x0, [x23, #96]
    cfac:	cbz	x0, cf94 <PySequence_Fast@plt+0x8d54>
    cfb0:	ldr	x0, [x23, #120]
    cfb4:	cbz	x0, cf94 <PySequence_Fast@plt+0x8d54>
    cfb8:	mov	x0, x19
    cfbc:	adrp	x21, e000 <PyInit__elementtree@@Base+0x168>
    cfc0:	bl	3c70 <strlen@plt>
    cfc4:	add	x21, x21, #0x2c0
    cfc8:	mov	x1, x0
    cfcc:	mov	x2, x21
    cfd0:	mov	x0, x19
    cfd4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    cfd8:	mov	x19, x0
    cfdc:	cbz	x0, cf94 <PySequence_Fast@plt+0x8d54>
    cfe0:	mov	x0, x20
    cfe4:	bl	3c70 <strlen@plt>
    cfe8:	mov	x2, x21
    cfec:	mov	x1, x0
    cff0:	mov	x0, x20
    cff4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    cff8:	mov	x20, x0
    cffc:	cbz	x0, d088 <PySequence_Fast@plt+0x8e48>
    d000:	ldr	x0, [x23, #96]
    d004:	cbz	x0, d050 <PySequence_Fast@plt+0x8e10>
    d008:	ldr	x0, [x23, #120]
    d00c:	cbz	x0, d050 <PySequence_Fast@plt+0x8e10>
    d010:	mov	x2, x20
    d014:	mov	x1, x19
    d018:	mov	x0, #0x2                   	// #2
    d01c:	bl	4210 <PyTuple_Pack@plt>
    d020:	mov	x21, x0
    d024:	cbz	x0, cf60 <PySequence_Fast@plt+0x8d20>
    d028:	ldr	x1, [x23, #120]
    d02c:	cbz	x1, d040 <PySequence_Fast@plt+0x8e00>
    d030:	add	x0, x23, #0x60
    d034:	mov	x2, x21
    d038:	bl	89d8 <PySequence_Fast@plt+0x4798>
    d03c:	tbnz	w0, #31, d0dc <PySequence_Fast@plt+0x8e9c>
    d040:	ldr	x0, [x21]
    d044:	sub	x0, x0, #0x1
    d048:	str	x0, [x21]
    d04c:	cbz	x0, d0d0 <PySequence_Fast@plt+0x8e90>
    d050:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    d054:	ldr	x0, [x0, #3976]
    d058:	mov	x22, x0
    d05c:	ldr	x1, [x0]
    d060:	add	x1, x1, #0x1
    d064:	str	x1, [x0]
    d068:	b	cf60 <PySequence_Fast@plt+0x8d20>
    d06c:	mov	x0, x19
    d070:	bl	3d70 <_Py_Dealloc@plt>
    d074:	b	cf80 <PySequence_Fast@plt+0x8d40>
    d078:	mov	x0, x22
    d07c:	bl	3d70 <_Py_Dealloc@plt>
    d080:	ldr	x23, [sp, #48]
    d084:	b	ce7c <PySequence_Fast@plt+0x8c3c>
    d088:	ldr	x0, [x19]
    d08c:	sub	x0, x0, #0x1
    d090:	str	x0, [x19]
    d094:	cbnz	x0, cf94 <PySequence_Fast@plt+0x8d54>
    d098:	mov	x0, x19
    d09c:	bl	3d70 <_Py_Dealloc@plt>
    d0a0:	ldr	x23, [sp, #48]
    d0a4:	b	ce7c <PySequence_Fast@plt+0x8c3c>
    d0a8:	mov	x0, x20
    d0ac:	bl	3d70 <_Py_Dealloc@plt>
    d0b0:	b	cf70 <PySequence_Fast@plt+0x8d30>
    d0b4:	mov	x0, x21
    d0b8:	add	x1, sp, #0x40
    d0bc:	mov	x3, #0x0                   	// #0
    d0c0:	mov	x2, #0x2                   	// #2
    d0c4:	bl	41d0 <_PyObject_MakeTpCall@plt>
    d0c8:	mov	x22, x0
    d0cc:	b	cf60 <PySequence_Fast@plt+0x8d20>
    d0d0:	mov	x0, x21
    d0d4:	bl	3d70 <_Py_Dealloc@plt>
    d0d8:	b	d050 <PySequence_Fast@plt+0x8e10>
    d0dc:	ldr	x0, [x21]
    d0e0:	sub	x0, x0, #0x1
    d0e4:	str	x0, [x21]
    d0e8:	cbnz	x0, cf60 <PySequence_Fast@plt+0x8d20>
    d0ec:	mov	x0, x21
    d0f0:	bl	3d70 <_Py_Dealloc@plt>
    d0f4:	b	cf60 <PySequence_Fast@plt+0x8d20>
    d0f8:	stp	x29, x30, [sp, #-48]!
    d0fc:	mov	x29, sp
    d100:	stp	x19, x20, [sp, #16]
    d104:	mov	x20, x1
    d108:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    d10c:	stp	x21, x22, [sp, #32]
    d110:	mov	x21, x0
    d114:	add	x1, x1, #0x328
    d118:	ldr	x0, [x20, #8]
    d11c:	cmp	x0, x1
    d120:	b.eq	d12c <PySequence_Fast@plt+0x8eec>  // b.none
    d124:	bl	4160 <PyType_IsSubtype@plt>
    d128:	cbz	w0, d258 <PySequence_Fast@plt+0x9018>
    d12c:	ldr	x2, [x21, #40]
    d130:	cbz	x2, d198 <PySequence_Fast@plt+0x8f58>
    d134:	ldp	x3, x0, [x2, #8]
    d138:	add	x3, x3, #0x1
    d13c:	cmp	x3, x0
    d140:	b.le	d1d8 <PySequence_Fast@plt+0x8f98>
    d144:	cmp	x3, #0x9
    d148:	mov	x19, #0x3                   	// #3
    d14c:	add	x3, x3, x3, asr #3
    d150:	mov	x0, #0x6                   	// #6
    d154:	csel	x19, x19, x0, lt  // lt = tstop
    d158:	adds	x19, x3, x19
    d15c:	b.eq	d20c <PySequence_Fast@plt+0x8fcc>  // b.none
    d160:	mov	x0, #0xfffffffffffffff     	// #1152921504606846975
    d164:	cmp	x19, x0
    d168:	b.hi	d24c <PySequence_Fast@plt+0x900c>  // b.pmore
    d16c:	ldr	x0, [x2, #24]
    d170:	add	x2, x2, #0x20
    d174:	lsl	x1, x19, #3
    d178:	cmp	x0, x2
    d17c:	b.eq	d224 <PySequence_Fast@plt+0x8fe4>  // b.none
    d180:	bl	4060 <PyObject_Realloc@plt>
    d184:	mov	x22, x0
    d188:	cbz	x0, d24c <PySequence_Fast@plt+0x900c>
    d18c:	ldr	x2, [x21, #40]
    d190:	stp	x19, x22, [x2, #16]
    d194:	b	d1dc <PySequence_Fast@plt+0x8f9c>
    d198:	mov	x0, #0x40                  	// #64
    d19c:	bl	3e00 <PyObject_Malloc@plt>
    d1a0:	str	x0, [x21, #40]
    d1a4:	mov	x2, x0
    d1a8:	cbz	x0, d24c <PySequence_Fast@plt+0x900c>
    d1ac:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    d1b0:	add	x1, x2, #0x20
    d1b4:	adrp	x3, e000 <PyInit__elementtree@@Base+0x168>
    d1b8:	str	x1, [x2, #24]
    d1bc:	ldr	x0, [x0, #3976]
    d1c0:	ldr	q0, [x3, #3120]
    d1c4:	ldr	x1, [x0]
    d1c8:	stur	q0, [x2, #8]
    d1cc:	add	x1, x1, #0x1
    d1d0:	str	x1, [x0]
    d1d4:	str	x0, [x2]
    d1d8:	ldr	x22, [x2, #24]
    d1dc:	mov	w0, #0x0                   	// #0
    d1e0:	ldr	x1, [x20]
    d1e4:	add	x1, x1, #0x1
    d1e8:	str	x1, [x20]
    d1ec:	ldr	x1, [x2, #8]
    d1f0:	add	x3, x1, #0x1
    d1f4:	str	x20, [x22, x1, lsl #3]
    d1f8:	str	x3, [x2, #8]
    d1fc:	ldp	x19, x20, [sp, #16]
    d200:	ldp	x21, x22, [sp, #32]
    d204:	ldp	x29, x30, [sp], #48
    d208:	ret
    d20c:	ldr	x0, [x2, #24]
    d210:	add	x2, x2, #0x20
    d214:	mov	x1, #0x8                   	// #8
    d218:	mov	x19, #0x1                   	// #1
    d21c:	cmp	x0, x2
    d220:	b.ne	d180 <PySequence_Fast@plt+0x8f40>  // b.any
    d224:	mov	x0, x1
    d228:	bl	3e00 <PyObject_Malloc@plt>
    d22c:	mov	x22, x0
    d230:	cbz	x0, d24c <PySequence_Fast@plt+0x900c>
    d234:	ldr	x1, [x21, #40]
    d238:	ldr	x2, [x1, #8]
    d23c:	ldr	x1, [x1, #24]
    d240:	lsl	x2, x2, #3
    d244:	bl	3c20 <memcpy@plt>
    d248:	b	d18c <PySequence_Fast@plt+0x8f4c>
    d24c:	bl	3d80 <PyErr_NoMemory@plt>
    d250:	mov	w0, #0xffffffff            	// #-1
    d254:	b	d1fc <PySequence_Fast@plt+0x8fbc>
    d258:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    d25c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    d260:	ldr	x2, [x20, #8]
    d264:	add	x1, x1, #0x188
    d268:	ldr	x0, [x0, #3944]
    d26c:	ldr	x2, [x2, #24]
    d270:	ldr	x0, [x0]
    d274:	bl	4180 <PyErr_Format@plt>
    d278:	mov	w0, #0xffffffff            	// #-1
    d27c:	b	d1fc <PySequence_Fast@plt+0x8fbc>
    d280:	stp	x29, x30, [sp, #-64]!
    d284:	mov	x29, sp
    d288:	stp	x19, x20, [sp, #16]
    d28c:	mov	x20, x0
    d290:	mov	x19, x1
    d294:	bl	3f80 <PyErr_Occurred@plt>
    d298:	cbz	x0, d2a8 <PySequence_Fast@plt+0x9068>
    d29c:	ldp	x19, x20, [sp, #16]
    d2a0:	ldp	x29, x30, [sp], #64
    d2a4:	ret
    d2a8:	stp	x21, x22, [sp, #32]
    d2ac:	adrp	x22, 22000 <PyInit__elementtree@@Base+0x14168>
    d2b0:	add	x0, x22, #0x328
    d2b4:	ldr	x21, [x20, #24]
    d2b8:	add	x0, x0, #0x340
    d2bc:	ldr	x1, [x21, #8]
    d2c0:	cmp	x1, x0
    d2c4:	b.eq	d378 <PySequence_Fast@plt+0x9138>  // b.none
    d2c8:	ldr	x0, [x20, #88]
    d2cc:	cbz	x0, d368 <PySequence_Fast@plt+0x9128>
    d2d0:	mov	x0, x19
    d2d4:	bl	3c70 <strlen@plt>
    d2d8:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    d2dc:	mov	x1, x0
    d2e0:	add	x2, x2, #0x2c0
    d2e4:	mov	x0, x19
    d2e8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    d2ec:	str	x0, [sp, #48]
    d2f0:	cbz	x0, d368 <PySequence_Fast@plt+0x9128>
    d2f4:	ldr	x19, [x20, #88]
    d2f8:	ldr	x0, [x19, #8]
    d2fc:	ldr	x1, [x0, #168]
    d300:	ldr	x0, [x0, #56]
    d304:	tbz	w1, #11, d46c <PySequence_Fast@plt+0x922c>
    d308:	ldr	x4, [x19, x0]
    d30c:	cbz	x4, d46c <PySequence_Fast@plt+0x922c>
    d310:	mov	x3, #0x0                   	// #0
    d314:	add	x1, sp, #0x30
    d318:	mov	x2, #0x1                   	// #1
    d31c:	mov	x0, x19
    d320:	blr	x4
    d324:	mov	x1, x0
    d328:	mov	x2, #0x0                   	// #0
    d32c:	mov	x0, x19
    d330:	bl	4020 <_Py_CheckFunctionResult@plt>
    d334:	cbz	x0, d348 <PySequence_Fast@plt+0x9108>
    d338:	ldr	x1, [x0]
    d33c:	sub	x1, x1, #0x1
    d340:	str	x1, [x0]
    d344:	cbz	x1, d484 <PySequence_Fast@plt+0x9244>
    d348:	ldr	x0, [sp, #48]
    d34c:	ldr	x1, [x0]
    d350:	sub	x1, x1, #0x1
    d354:	str	x1, [x0]
    d358:	cbnz	x1, d368 <PySequence_Fast@plt+0x9128>
    d35c:	bl	3d70 <_Py_Dealloc@plt>
    d360:	ldp	x21, x22, [sp, #32]
    d364:	b	d29c <PySequence_Fast@plt+0x905c>
    d368:	ldp	x19, x20, [sp, #16]
    d36c:	ldp	x21, x22, [sp, #32]
    d370:	ldp	x29, x30, [sp], #64
    d374:	ret
    d378:	mov	x0, x19
    d37c:	bl	3c70 <strlen@plt>
    d380:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    d384:	mov	x1, x0
    d388:	add	x2, x2, #0x2c0
    d38c:	mov	x0, x19
    d390:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    d394:	str	x0, [sp, #48]
    d398:	cbz	x0, d368 <PySequence_Fast@plt+0x9128>
    d39c:	ldr	x1, [x21, #48]
    d3a0:	str	x0, [sp, #56]
    d3a4:	cbz	x1, d3cc <PySequence_Fast@plt+0x918c>
    d3a8:	ldr	x0, [x21, #40]
    d3ac:	add	x1, x21, #0x30
    d3b0:	cbz	x0, d4a0 <PySequence_Fast@plt+0x9260>
    d3b4:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    d3b8:	add	x3, x3, #0x9c0
    d3bc:	add	x3, x3, #0x2f8
    d3c0:	add	x2, x0, #0x20
    d3c4:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    d3c8:	tbnz	w0, #31, d348 <PySequence_Fast@plt+0x9108>
    d3cc:	ldr	x19, [x21, #80]
    d3d0:	cbz	x19, d48c <PySequence_Fast@plt+0x924c>
    d3d4:	ldr	x0, [x19, #8]
    d3d8:	ldr	x1, [x0, #168]
    d3dc:	ldr	x0, [x0, #56]
    d3e0:	tbz	w1, #11, d4bc <PySequence_Fast@plt+0x927c>
    d3e4:	ldr	x4, [x19, x0]
    d3e8:	cbz	x4, d4bc <PySequence_Fast@plt+0x927c>
    d3ec:	mov	x3, #0x0                   	// #0
    d3f0:	add	x1, sp, #0x38
    d3f4:	mov	x0, x19
    d3f8:	mov	x2, #0x1                   	// #1
    d3fc:	blr	x4
    d400:	mov	x1, x0
    d404:	mov	x2, #0x0                   	// #0
    d408:	mov	x0, x19
    d40c:	bl	4020 <_Py_CheckFunctionResult@plt>
    d410:	mov	x19, x0
    d414:	cbz	x19, d348 <PySequence_Fast@plt+0x9108>
    d418:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    d41c:	ldrb	w2, [x21, #152]
    d420:	ldr	x0, [x21, #24]
    d424:	cmp	w2, #0x0
    d428:	ldr	x1, [x1, #3976]
    d42c:	ccmp	x0, x1, #0x4, ne  // ne = any
    d430:	b.ne	d4d8 <PySequence_Fast@plt+0x9298>  // b.any
    d434:	ldr	x0, [x21, #96]
    d438:	cbz	x0, d450 <PySequence_Fast@plt+0x9210>
    d43c:	ldr	x1, [x21, #136]
    d440:	cbz	x1, d450 <PySequence_Fast@plt+0x9210>
    d444:	add	x0, x21, #0x60
    d448:	mov	x2, x19
    d44c:	bl	89d8 <PySequence_Fast@plt+0x4798>
    d450:	ldr	x0, [x19]
    d454:	sub	x0, x0, #0x1
    d458:	str	x0, [x19]
    d45c:	cbnz	x0, d348 <PySequence_Fast@plt+0x9108>
    d460:	mov	x0, x19
    d464:	bl	3d70 <_Py_Dealloc@plt>
    d468:	b	d348 <PySequence_Fast@plt+0x9108>
    d46c:	mov	x0, x19
    d470:	add	x1, sp, #0x30
    d474:	mov	x3, #0x0                   	// #0
    d478:	mov	x2, #0x1                   	// #1
    d47c:	bl	41d0 <_PyObject_MakeTpCall@plt>
    d480:	b	d334 <PySequence_Fast@plt+0x90f4>
    d484:	bl	3d70 <_Py_Dealloc@plt>
    d488:	b	d348 <PySequence_Fast@plt+0x9108>
    d48c:	ldr	x19, [sp, #56]
    d490:	ldr	x0, [x19]
    d494:	add	x0, x0, #0x1
    d498:	str	x0, [x19]
    d49c:	b	d434 <PySequence_Fast@plt+0x91f4>
    d4a0:	ldr	x0, [x21, #32]
    d4a4:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    d4a8:	add	x3, x3, #0x9c0
    d4ac:	add	x3, x3, #0x2e0
    d4b0:	add	x2, x0, #0x18
    d4b4:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    d4b8:	b	d3c8 <PySequence_Fast@plt+0x9188>
    d4bc:	mov	x0, x19
    d4c0:	add	x1, sp, #0x38
    d4c4:	mov	x3, #0x0                   	// #0
    d4c8:	mov	x2, #0x1                   	// #1
    d4cc:	bl	41d0 <_PyObject_MakeTpCall@plt>
    d4d0:	mov	x19, x0
    d4d4:	b	d414 <PySequence_Fast@plt+0x91d4>
    d4d8:	ldr	x1, [x0, #8]
    d4dc:	add	x22, x22, #0x328
    d4e0:	cmp	x1, x22
    d4e4:	b.eq	d54c <PySequence_Fast@plt+0x930c>  // b.none
    d4e8:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    d4ec:	add	x1, x1, #0x9c0
    d4f0:	add	x1, x1, #0x350
    d4f4:	mov	x2, x19
    d4f8:	mov	x3, #0x0                   	// #0
    d4fc:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    d500:	cbz	x0, d450 <PySequence_Fast@plt+0x9210>
    d504:	ldr	x2, [x0]
    d508:	sub	x2, x2, #0x1
    d50c:	str	x2, [x0]
    d510:	cbz	x2, d544 <PySequence_Fast@plt+0x9304>
    d514:	ldr	x1, [x19]
    d518:	ldr	x0, [x21, #40]
    d51c:	add	x1, x1, #0x1
    d520:	str	x1, [x19]
    d524:	str	x19, [x21, #40]
    d528:	cbz	x0, d434 <PySequence_Fast@plt+0x91f4>
    d52c:	ldr	x1, [x0]
    d530:	sub	x1, x1, #0x1
    d534:	str	x1, [x0]
    d538:	cbnz	x1, d434 <PySequence_Fast@plt+0x91f4>
    d53c:	bl	3d70 <_Py_Dealloc@plt>
    d540:	b	d434 <PySequence_Fast@plt+0x91f4>
    d544:	bl	3d70 <_Py_Dealloc@plt>
    d548:	b	d514 <PySequence_Fast@plt+0x92d4>
    d54c:	mov	x1, x19
    d550:	bl	d0f8 <PySequence_Fast@plt+0x8eb8>
    d554:	tbnz	w0, #31, d450 <PySequence_Fast@plt+0x9210>
    d558:	b	d514 <PySequence_Fast@plt+0x92d4>
    d55c:	nop
    d560:	stp	x29, x30, [sp, #-80]!
    d564:	mov	x29, sp
    d568:	stp	x19, x20, [sp, #16]
    d56c:	mov	x20, x1
    d570:	mov	x19, x2
    d574:	stp	x21, x22, [sp, #32]
    d578:	mov	x21, x0
    d57c:	bl	3f80 <PyErr_Occurred@plt>
    d580:	cbz	x0, d594 <PySequence_Fast@plt+0x9354>
    d584:	ldp	x19, x20, [sp, #16]
    d588:	ldp	x21, x22, [sp, #32]
    d58c:	ldp	x29, x30, [sp], #80
    d590:	ret
    d594:	ldr	x22, [x21, #24]
    d598:	ldr	x1, [x22, #8]
    d59c:	str	x23, [sp, #48]
    d5a0:	adrp	x23, 22000 <PyInit__elementtree@@Base+0x14168>
    d5a4:	add	x0, x23, #0x328
    d5a8:	add	x0, x0, #0x340
    d5ac:	cmp	x1, x0
    d5b0:	b.eq	d6a8 <PySequence_Fast@plt+0x9468>  // b.none
    d5b4:	ldr	x0, [x21, #96]
    d5b8:	cbz	x0, d694 <PySequence_Fast@plt+0x9454>
    d5bc:	mov	x0, x20
    d5c0:	adrp	x22, e000 <PyInit__elementtree@@Base+0x168>
    d5c4:	bl	3c70 <strlen@plt>
    d5c8:	add	x22, x22, #0x2c0
    d5cc:	mov	x1, x0
    d5d0:	mov	x2, x22
    d5d4:	mov	x0, x20
    d5d8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    d5dc:	mov	x20, x0
    d5e0:	cbz	x0, d694 <PySequence_Fast@plt+0x9454>
    d5e4:	mov	x0, x19
    d5e8:	bl	3c70 <strlen@plt>
    d5ec:	mov	x2, x22
    d5f0:	mov	x1, x0
    d5f4:	mov	x0, x19
    d5f8:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    d5fc:	mov	x19, x0
    d600:	cbz	x0, d66c <PySequence_Fast@plt+0x942c>
    d604:	ldr	x21, [x21, #96]
    d608:	ldr	x0, [x21, #8]
    d60c:	ldr	x1, [x0, #168]
    d610:	ldr	x0, [x0, #56]
    d614:	stp	x20, x19, [sp, #64]
    d618:	tbz	w1, #11, d7e4 <PySequence_Fast@plt+0x95a4>
    d61c:	ldr	x4, [x21, x0]
    d620:	cbz	x4, d7e4 <PySequence_Fast@plt+0x95a4>
    d624:	mov	x3, #0x0                   	// #0
    d628:	add	x1, sp, #0x40
    d62c:	mov	x2, #0x2                   	// #2
    d630:	mov	x0, x21
    d634:	blr	x4
    d638:	mov	x1, x0
    d63c:	mov	x2, #0x0                   	// #0
    d640:	mov	x0, x21
    d644:	bl	4020 <_Py_CheckFunctionResult@plt>
    d648:	cbz	x0, d65c <PySequence_Fast@plt+0x941c>
    d64c:	ldr	x1, [x0]
    d650:	sub	x1, x1, #0x1
    d654:	str	x1, [x0]
    d658:	cbz	x1, d7d0 <PySequence_Fast@plt+0x9590>
    d65c:	ldr	x0, [x19]
    d660:	sub	x0, x0, #0x1
    d664:	str	x0, [x19]
    d668:	cbz	x0, d7d8 <PySequence_Fast@plt+0x9598>
    d66c:	ldr	x0, [x20]
    d670:	sub	x0, x0, #0x1
    d674:	str	x0, [x20]
    d678:	cbnz	x0, d694 <PySequence_Fast@plt+0x9454>
    d67c:	mov	x0, x20
    d680:	bl	3d70 <_Py_Dealloc@plt>
    d684:	ldr	x23, [sp, #48]
    d688:	b	d584 <PySequence_Fast@plt+0x9344>
    d68c:	ldrb	w0, [x22, #153]
    d690:	cbnz	w0, d6b8 <PySequence_Fast@plt+0x9478>
    d694:	ldp	x19, x20, [sp, #16]
    d698:	ldp	x21, x22, [sp, #32]
    d69c:	ldr	x23, [sp, #48]
    d6a0:	ldp	x29, x30, [sp], #80
    d6a4:	ret
    d6a8:	ldr	x0, [x22, #96]
    d6ac:	cbz	x0, d68c <PySequence_Fast@plt+0x944c>
    d6b0:	ldr	x0, [x22, #144]
    d6b4:	cbz	x0, d68c <PySequence_Fast@plt+0x944c>
    d6b8:	mov	x0, x20
    d6bc:	adrp	x21, e000 <PyInit__elementtree@@Base+0x168>
    d6c0:	bl	3c70 <strlen@plt>
    d6c4:	add	x21, x21, #0x2c0
    d6c8:	mov	x1, x0
    d6cc:	mov	x2, x21
    d6d0:	mov	x0, x20
    d6d4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    d6d8:	mov	x20, x0
    d6dc:	cbz	x0, d694 <PySequence_Fast@plt+0x9454>
    d6e0:	mov	x0, x19
    d6e4:	bl	3c70 <strlen@plt>
    d6e8:	mov	x2, x21
    d6ec:	mov	x1, x0
    d6f0:	mov	x0, x19
    d6f4:	bl	4030 <PyUnicode_DecodeUTF8@plt>
    d6f8:	mov	x19, x0
    d6fc:	cbz	x0, d66c <PySequence_Fast@plt+0x942c>
    d700:	stp	x20, x0, [sp, #64]
    d704:	ldr	x0, [x22, #48]
    d708:	cbz	x0, d730 <PySequence_Fast@plt+0x94f0>
    d70c:	ldr	x0, [x22, #40]
    d710:	add	x1, x22, #0x30
    d714:	cbz	x0, d818 <PySequence_Fast@plt+0x95d8>
    d718:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    d71c:	add	x3, x3, #0x9c0
    d720:	add	x3, x3, #0x2f8
    d724:	add	x2, x0, #0x20
    d728:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    d72c:	tbnz	w0, #31, d65c <PySequence_Fast@plt+0x941c>
    d730:	ldr	x21, [x22, #88]
    d734:	cbz	x21, d7fc <PySequence_Fast@plt+0x95bc>
    d738:	ldr	x0, [x21, #8]
    d73c:	ldr	x1, [x0, #168]
    d740:	ldr	x0, [x0, #56]
    d744:	tbz	w1, #11, d834 <PySequence_Fast@plt+0x95f4>
    d748:	ldr	x4, [x21, x0]
    d74c:	cbz	x4, d834 <PySequence_Fast@plt+0x95f4>
    d750:	mov	x3, #0x0                   	// #0
    d754:	add	x1, sp, #0x40
    d758:	mov	x0, x21
    d75c:	mov	x2, #0x2                   	// #2
    d760:	blr	x4
    d764:	mov	x1, x0
    d768:	mov	x2, #0x0                   	// #0
    d76c:	mov	x0, x21
    d770:	bl	4020 <_Py_CheckFunctionResult@plt>
    d774:	mov	x21, x0
    d778:	cbz	x21, d65c <PySequence_Fast@plt+0x941c>
    d77c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    d780:	ldrb	w2, [x22, #153]
    d784:	ldr	x0, [x22, #24]
    d788:	cmp	w2, #0x0
    d78c:	ldr	x1, [x1, #3976]
    d790:	ccmp	x0, x1, #0x4, ne  // ne = any
    d794:	b.ne	d850 <PySequence_Fast@plt+0x9610>  // b.any
    d798:	ldr	x0, [x22, #96]
    d79c:	cbz	x0, d7b4 <PySequence_Fast@plt+0x9574>
    d7a0:	ldr	x1, [x22, #144]
    d7a4:	cbz	x1, d7b4 <PySequence_Fast@plt+0x9574>
    d7a8:	add	x0, x22, #0x60
    d7ac:	mov	x2, x21
    d7b0:	bl	89d8 <PySequence_Fast@plt+0x4798>
    d7b4:	ldr	x0, [x21]
    d7b8:	sub	x0, x0, #0x1
    d7bc:	str	x0, [x21]
    d7c0:	cbnz	x0, d65c <PySequence_Fast@plt+0x941c>
    d7c4:	mov	x0, x21
    d7c8:	bl	3d70 <_Py_Dealloc@plt>
    d7cc:	b	d65c <PySequence_Fast@plt+0x941c>
    d7d0:	bl	3d70 <_Py_Dealloc@plt>
    d7d4:	b	d65c <PySequence_Fast@plt+0x941c>
    d7d8:	mov	x0, x19
    d7dc:	bl	3d70 <_Py_Dealloc@plt>
    d7e0:	b	d66c <PySequence_Fast@plt+0x942c>
    d7e4:	mov	x0, x21
    d7e8:	add	x1, sp, #0x40
    d7ec:	mov	x3, #0x0                   	// #0
    d7f0:	mov	x2, #0x2                   	// #2
    d7f4:	bl	41d0 <_PyObject_MakeTpCall@plt>
    d7f8:	b	d648 <PySequence_Fast@plt+0x9408>
    d7fc:	mov	x2, x19
    d800:	mov	x1, x20
    d804:	mov	x0, #0x2                   	// #2
    d808:	bl	4210 <PyTuple_Pack@plt>
    d80c:	mov	x21, x0
    d810:	cbnz	x0, d798 <PySequence_Fast@plt+0x9558>
    d814:	b	d65c <PySequence_Fast@plt+0x941c>
    d818:	ldr	x0, [x22, #32]
    d81c:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    d820:	add	x3, x3, #0x9c0
    d824:	add	x3, x3, #0x2e0
    d828:	add	x2, x0, #0x18
    d82c:	bl	7f48 <PySequence_Fast@plt+0x3d08>
    d830:	b	d72c <PySequence_Fast@plt+0x94ec>
    d834:	mov	x0, x21
    d838:	add	x1, sp, #0x40
    d83c:	mov	x3, #0x0                   	// #0
    d840:	mov	x2, #0x2                   	// #2
    d844:	bl	41d0 <_PyObject_MakeTpCall@plt>
    d848:	mov	x21, x0
    d84c:	b	d778 <PySequence_Fast@plt+0x9538>
    d850:	ldr	x1, [x0, #8]
    d854:	add	x23, x23, #0x328
    d858:	cmp	x1, x23
    d85c:	b.eq	d8c4 <PySequence_Fast@plt+0x9684>  // b.none
    d860:	adrp	x1, 22000 <PyInit__elementtree@@Base+0x14168>
    d864:	add	x1, x1, #0x9c0
    d868:	add	x1, x1, #0x350
    d86c:	mov	x2, x21
    d870:	mov	x3, #0x0                   	// #0
    d874:	bl	4110 <_PyObject_CallMethodIdObjArgs@plt>
    d878:	cbz	x0, d7b4 <PySequence_Fast@plt+0x9574>
    d87c:	ldr	x2, [x0]
    d880:	sub	x2, x2, #0x1
    d884:	str	x2, [x0]
    d888:	cbz	x2, d8bc <PySequence_Fast@plt+0x967c>
    d88c:	ldr	x1, [x21]
    d890:	ldr	x0, [x22, #40]
    d894:	add	x1, x1, #0x1
    d898:	str	x1, [x21]
    d89c:	str	x21, [x22, #40]
    d8a0:	cbz	x0, d798 <PySequence_Fast@plt+0x9558>
    d8a4:	ldr	x1, [x0]
    d8a8:	sub	x1, x1, #0x1
    d8ac:	str	x1, [x0]
    d8b0:	cbnz	x1, d798 <PySequence_Fast@plt+0x9558>
    d8b4:	bl	3d70 <_Py_Dealloc@plt>
    d8b8:	b	d798 <PySequence_Fast@plt+0x9558>
    d8bc:	bl	3d70 <_Py_Dealloc@plt>
    d8c0:	b	d88c <PySequence_Fast@plt+0x964c>
    d8c4:	mov	x1, x21
    d8c8:	bl	d0f8 <PySequence_Fast@plt+0x8eb8>
    d8cc:	tbnz	w0, #31, d7b4 <PySequence_Fast@plt+0x9574>
    d8d0:	b	d88c <PySequence_Fast@plt+0x964c>
    d8d4:	nop
    d8d8:	sub	sp, sp, #0xa0
    d8dc:	adrp	x2, 21000 <PyInit__elementtree@@Base+0x13168>
    d8e0:	stp	x29, x30, [sp, #16]
    d8e4:	add	x29, sp, #0x10
    d8e8:	ldr	x2, [x2, #3992]
    d8ec:	stp	x19, x20, [sp, #32]
    d8f0:	mov	x20, x0
    d8f4:	ldr	x0, [x1, #8]
    d8f8:	mov	x19, x1
    d8fc:	cmp	x0, x2
    d900:	b.ne	d988 <PySequence_Fast@plt+0x9748>  // b.any
    d904:	mov	x0, #0x0                   	// #0
    d908:	stp	x21, x22, [sp, #48]
    d90c:	stp	xzr, xzr, [sp, #120]
    d910:	stp	xzr, xzr, [sp, #136]
    d914:	str	xzr, [sp, #152]
    d918:	bl	3f40 <PyTuple_New@plt>
    d91c:	mov	x22, x0
    d920:	cbz	x0, dc20 <PySequence_Fast@plt+0x99e0>
    d924:	add	x1, sp, #0x98
    d928:	str	x1, [sp]
    d92c:	adrp	x3, 22000 <PyInit__elementtree@@Base+0x14168>
    d930:	add	x3, x3, #0x9c0
    d934:	adrp	x2, e000 <PyInit__elementtree@@Base+0x168>
    d938:	add	x3, x3, #0x370
    d93c:	add	x7, sp, #0x90
    d940:	add	x2, x2, #0x7f0
    d944:	add	x6, sp, #0x88
    d948:	add	x5, sp, #0x80
    d94c:	add	x4, sp, #0x78
    d950:	mov	x1, x19
    d954:	bl	4070 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    d958:	cbnz	w0, d9bc <PySequence_Fast@plt+0x977c>
    d95c:	mov	x19, #0x0                   	// #0
    d960:	ldr	x1, [x22]
    d964:	sub	x1, x1, #0x1
    d968:	str	x1, [x22]
    d96c:	cbz	x1, dc2c <PySequence_Fast@plt+0x99ec>
    d970:	ldp	x21, x22, [sp, #48]
    d974:	mov	x0, x19
    d978:	ldp	x29, x30, [sp, #16]
    d97c:	ldp	x19, x20, [sp, #32]
    d980:	add	sp, sp, #0xa0
    d984:	ret
    d988:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    d98c:	mov	x2, x1
    d990:	mov	x19, #0x0                   	// #0
    d994:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    d998:	ldr	x0, [x0, #3944]
    d99c:	add	x1, x1, #0x7b8
    d9a0:	ldr	x0, [x0]
    d9a4:	bl	4180 <PyErr_Format@plt>
    d9a8:	mov	x0, x19
    d9ac:	ldp	x29, x30, [sp, #16]
    d9b0:	ldp	x19, x20, [sp, #32]
    d9b4:	add	sp, sp, #0xa0
    d9b8:	ret
    d9bc:	stp	x23, x24, [sp, #64]
    d9c0:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    d9c4:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    d9c8:	ldp	x19, x24, [sp, #120]
    d9cc:	stp	x27, x28, [sp, #96]
    d9d0:	add	x1, x1, #0x7f8
    d9d4:	ldp	x23, x21, [sp, #136]
    d9d8:	ldr	x27, [sp, #152]
    d9dc:	cbz	x19, dca0 <PySequence_Fast@plt+0x9a60>
    d9e0:	ldr	x1, [x19]
    d9e4:	ldr	x0, [x20, #16]
    d9e8:	add	x1, x1, #0x1
    d9ec:	str	x1, [x19]
    d9f0:	str	x19, [x20, #16]
    d9f4:	cbz	x0, da08 <PySequence_Fast@plt+0x97c8>
    d9f8:	ldr	x1, [x0]
    d9fc:	sub	x1, x1, #0x1
    da00:	str	x1, [x0]
    da04:	cbz	x1, dc88 <PySequence_Fast@plt+0x9a48>
    da08:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    da0c:	ldr	x1, [x1, #3976]
    da10:	cbz	x23, da30 <PySequence_Fast@plt+0x97f0>
    da14:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    da18:	and	x2, x23, #0xfffffffffffffffe
    da1c:	ldr	x1, [x23, #8]
    da20:	ldr	x0, [x0, #4064]
    da24:	cmp	x1, x0
    da28:	cset	x1, eq  // eq = none
    da2c:	orr	x1, x1, x2
    da30:	and	x3, x1, #0xfffffffffffffffe
    da34:	ldr	x0, [x20, #24]
    da38:	ldr	x2, [x3]
    da3c:	and	x0, x0, #0xfffffffffffffffe
    da40:	add	x2, x2, #0x1
    da44:	str	x2, [x3]
    da48:	str	x1, [x20, #24]
    da4c:	ldr	x1, [x0]
    da50:	sub	x1, x1, #0x1
    da54:	str	x1, [x0]
    da58:	cbz	x1, dc78 <PySequence_Fast@plt+0x9a38>
    da5c:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    da60:	ldr	x1, [x1, #3976]
    da64:	cbz	x21, da84 <PySequence_Fast@plt+0x9844>
    da68:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    da6c:	and	x2, x21, #0xfffffffffffffffe
    da70:	ldr	x1, [x21, #8]
    da74:	ldr	x0, [x0, #4064]
    da78:	cmp	x1, x0
    da7c:	cset	x1, eq  // eq = none
    da80:	orr	x1, x1, x2
    da84:	and	x3, x1, #0xfffffffffffffffe
    da88:	ldr	x0, [x20, #32]
    da8c:	ldr	x2, [x3]
    da90:	and	x0, x0, #0xfffffffffffffffe
    da94:	add	x2, x2, #0x1
    da98:	str	x2, [x3]
    da9c:	str	x1, [x20, #32]
    daa0:	ldr	x1, [x0]
    daa4:	sub	x1, x1, #0x1
    daa8:	str	x1, [x0]
    daac:	cbz	x1, dc80 <PySequence_Fast@plt+0x9a40>
    dab0:	orr	x0, x24, x27
    dab4:	cbz	x0, dbfc <PySequence_Fast@plt+0x99bc>
    dab8:	cbz	x27, dd7c <PySequence_Fast@plt+0x9b3c>
    dabc:	ldr	x0, [x27, #8]
    dac0:	ldr	x0, [x0, #168]
    dac4:	tbz	w0, #25, dc90 <PySequence_Fast@plt+0x9a50>
    dac8:	ldr	x28, [x27, #16]
    dacc:	mov	x0, x20
    dad0:	ldr	x23, [x20, #40]
    dad4:	str	xzr, [x20, #40]
    dad8:	mov	x1, x28
    dadc:	bl	9680 <PySequence_Fast@plt+0x5440>
    dae0:	cbnz	w0, ddcc <PySequence_Fast@plt+0x9b8c>
    dae4:	cbz	x23, db00 <PySequence_Fast@plt+0x98c0>
    dae8:	ldr	x1, [x20, #40]
    daec:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    daf0:	ldr	x2, [x23]
    daf4:	ldr	x0, [x0, #3976]
    daf8:	str	x2, [x1]
    dafc:	str	x0, [x23]
    db00:	cmp	x28, #0x0
    db04:	b.le	dc54 <PySequence_Fast@plt+0x9a14>
    db08:	stp	x25, x26, [sp, #80]
    db0c:	adrp	x25, 22000 <PyInit__elementtree@@Base+0x14168>
    db10:	add	x25, x25, #0x328
    db14:	mov	x19, #0x0                   	// #0
    db18:	ldr	x0, [x27, #24]
    db1c:	lsl	x26, x19, #3
    db20:	mov	x1, x25
    db24:	ldr	x21, [x0, x19, lsl #3]
    db28:	ldr	x0, [x21, #8]
    db2c:	cmp	x0, x25
    db30:	b.eq	db3c <PySequence_Fast@plt+0x98fc>  // b.none
    db34:	bl	4160 <PyType_IsSubtype@plt>
    db38:	cbz	w0, dcb8 <PySequence_Fast@plt+0x9a78>
    db3c:	ldr	x2, [x20, #40]
    db40:	add	x19, x19, #0x1
    db44:	ldr	x1, [x21]
    db48:	cmp	x28, x19
    db4c:	ldr	x0, [x2, #24]
    db50:	add	x1, x1, #0x1
    db54:	str	x1, [x21]
    db58:	str	x21, [x0, x26]
    db5c:	b.ne	db18 <PySequence_Fast@plt+0x98d8>  // b.any
    db60:	ldp	x25, x26, [sp, #80]
    db64:	str	x28, [x2, #8]
    db68:	cbz	x24, db94 <PySequence_Fast@plt+0x9954>
    db6c:	ldr	x1, [x24]
    db70:	ldr	x0, [x2]
    db74:	add	x1, x1, #0x1
    db78:	str	x1, [x24]
    db7c:	str	x24, [x2]
    db80:	cbz	x0, db94 <PySequence_Fast@plt+0x9954>
    db84:	ldr	x1, [x0]
    db88:	sub	x1, x1, #0x1
    db8c:	str	x1, [x0]
    db90:	cbz	x1, dc4c <PySequence_Fast@plt+0x9a0c>
    db94:	cbz	x23, dbfc <PySequence_Fast@plt+0x99bc>
    db98:	ldr	x0, [x23]
    db9c:	ldr	x1, [x0]
    dba0:	sub	x1, x1, #0x1
    dba4:	str	x1, [x0]
    dba8:	cbz	x1, ddc4 <PySequence_Fast@plt+0x9b84>
    dbac:	ldr	x3, [x23, #8]
    dbb0:	ldr	x2, [x23, #24]
    dbb4:	cmp	x3, #0x0
    dbb8:	b.le	dbe0 <PySequence_Fast@plt+0x99a0>
    dbbc:	mov	x19, #0x0                   	// #0
    dbc0:	ldr	x0, [x2, x19, lsl #3]
    dbc4:	ldr	x1, [x0]
    dbc8:	sub	x1, x1, #0x1
    dbcc:	str	x1, [x0]
    dbd0:	cbz	x1, dc5c <PySequence_Fast@plt+0x9a1c>
    dbd4:	add	x19, x19, #0x1
    dbd8:	cmp	x19, x3
    dbdc:	b.lt	dbc0 <PySequence_Fast@plt+0x9980>  // b.tstop
    dbe0:	add	x0, x23, #0x20
    dbe4:	cmp	x2, x0
    dbe8:	b.eq	dbf4 <PySequence_Fast@plt+0x99b4>  // b.none
    dbec:	mov	x0, x2
    dbf0:	bl	3e60 <PyObject_Free@plt>
    dbf4:	mov	x0, x23
    dbf8:	bl	3e60 <PyObject_Free@plt>
    dbfc:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    dc00:	ldp	x23, x24, [sp, #64]
    dc04:	ldr	x0, [x0, #3976]
    dc08:	ldp	x27, x28, [sp, #96]
    dc0c:	mov	x19, x0
    dc10:	ldr	x1, [x0]
    dc14:	add	x1, x1, #0x1
    dc18:	str	x1, [x0]
    dc1c:	b	d960 <PySequence_Fast@plt+0x9720>
    dc20:	mov	x19, #0x0                   	// #0
    dc24:	ldp	x21, x22, [sp, #48]
    dc28:	b	d974 <PySequence_Fast@plt+0x9734>
    dc2c:	mov	x0, x22
    dc30:	bl	3d70 <_Py_Dealloc@plt>
    dc34:	mov	x0, x19
    dc38:	ldp	x29, x30, [sp, #16]
    dc3c:	ldp	x19, x20, [sp, #32]
    dc40:	ldp	x21, x22, [sp, #48]
    dc44:	add	sp, sp, #0xa0
    dc48:	ret
    dc4c:	bl	3d70 <_Py_Dealloc@plt>
    dc50:	b	db94 <PySequence_Fast@plt+0x9954>
    dc54:	ldr	x2, [x20, #40]
    dc58:	b	db64 <PySequence_Fast@plt+0x9924>
    dc5c:	bl	3d70 <_Py_Dealloc@plt>
    dc60:	add	x19, x19, #0x1
    dc64:	ldr	x3, [x23, #8]
    dc68:	ldr	x2, [x23, #24]
    dc6c:	cmp	x19, x3
    dc70:	b.lt	dbc0 <PySequence_Fast@plt+0x9980>  // b.tstop
    dc74:	b	dbe0 <PySequence_Fast@plt+0x99a0>
    dc78:	bl	3d70 <_Py_Dealloc@plt>
    dc7c:	b	da5c <PySequence_Fast@plt+0x981c>
    dc80:	bl	3d70 <_Py_Dealloc@plt>
    dc84:	b	dab0 <PySequence_Fast@plt+0x9870>
    dc88:	bl	3d70 <_Py_Dealloc@plt>
    dc8c:	b	da08 <PySequence_Fast@plt+0x97c8>
    dc90:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    dc94:	add	x1, x1, #0x810
    dc98:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    dc9c:	mov	x19, #0x0                   	// #0
    dca0:	ldr	x0, [x0, #3944]
    dca4:	ldr	x0, [x0]
    dca8:	bl	3de0 <PyErr_SetString@plt>
    dcac:	ldp	x23, x24, [sp, #64]
    dcb0:	ldp	x27, x28, [sp, #96]
    dcb4:	b	d960 <PySequence_Fast@plt+0x9720>
    dcb8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    dcbc:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    dcc0:	ldr	x2, [x21, #8]
    dcc4:	add	x1, x1, #0x188
    dcc8:	ldr	x0, [x0, #3944]
    dccc:	ldr	x2, [x2, #24]
    dcd0:	ldr	x0, [x0]
    dcd4:	bl	4180 <PyErr_Format@plt>
    dcd8:	ldr	x0, [x20, #40]
    dcdc:	str	x19, [x0, #8]
    dce0:	cbz	x23, de74 <PySequence_Fast@plt+0x9c34>
    dce4:	ldr	x0, [x23]
    dce8:	ldr	x1, [x0]
    dcec:	sub	x1, x1, #0x1
    dcf0:	str	x1, [x0]
    dcf4:	cbz	x1, de6c <PySequence_Fast@plt+0x9c2c>
    dcf8:	ldr	x3, [x23, #8]
    dcfc:	ldr	x2, [x23, #24]
    dd00:	cmp	x3, #0x0
    dd04:	b.le	dd30 <PySequence_Fast@plt+0x9af0>
    dd08:	mov	x19, #0x0                   	// #0
    dd0c:	nop
    dd10:	ldr	x0, [x2, x19, lsl #3]
    dd14:	ldr	x1, [x0]
    dd18:	sub	x1, x1, #0x1
    dd1c:	str	x1, [x0]
    dd20:	cbz	x1, dd60 <PySequence_Fast@plt+0x9b20>
    dd24:	add	x19, x19, #0x1
    dd28:	cmp	x19, x3
    dd2c:	b.lt	dd10 <PySequence_Fast@plt+0x9ad0>  // b.tstop
    dd30:	add	x0, x23, #0x20
    dd34:	cmp	x2, x0
    dd38:	b.eq	dd44 <PySequence_Fast@plt+0x9b04>  // b.none
    dd3c:	mov	x0, x2
    dd40:	bl	3e60 <PyObject_Free@plt>
    dd44:	mov	x0, x23
    dd48:	mov	x19, #0x0                   	// #0
    dd4c:	bl	3e60 <PyObject_Free@plt>
    dd50:	ldp	x23, x24, [sp, #64]
    dd54:	ldp	x25, x26, [sp, #80]
    dd58:	ldp	x27, x28, [sp, #96]
    dd5c:	b	d960 <PySequence_Fast@plt+0x9720>
    dd60:	bl	3d70 <_Py_Dealloc@plt>
    dd64:	add	x19, x19, #0x1
    dd68:	ldr	x3, [x23, #8]
    dd6c:	ldr	x2, [x23, #24]
    dd70:	cmp	x19, x3
    dd74:	b.lt	dd10 <PySequence_Fast@plt+0x9ad0>  // b.tstop
    dd78:	b	dd30 <PySequence_Fast@plt+0x9af0>
    dd7c:	mov	x0, x20
    dd80:	mov	x1, #0x0                   	// #0
    dd84:	bl	9680 <PySequence_Fast@plt+0x5440>
    dd88:	cbnz	w0, de84 <PySequence_Fast@plt+0x9c44>
    dd8c:	cbz	x24, dbfc <PySequence_Fast@plt+0x99bc>
    dd90:	ldr	x2, [x20, #40]
    dd94:	ldr	x1, [x24]
    dd98:	ldr	x0, [x2]
    dd9c:	add	x1, x1, #0x1
    dda0:	str	x1, [x24]
    dda4:	str	x24, [x2]
    dda8:	cbz	x0, dbfc <PySequence_Fast@plt+0x99bc>
    ddac:	ldr	x1, [x0]
    ddb0:	sub	x1, x1, #0x1
    ddb4:	str	x1, [x0]
    ddb8:	cbnz	x1, dbfc <PySequence_Fast@plt+0x99bc>
    ddbc:	bl	3d70 <_Py_Dealloc@plt>
    ddc0:	b	dbfc <PySequence_Fast@plt+0x99bc>
    ddc4:	bl	3d70 <_Py_Dealloc@plt>
    ddc8:	b	dbac <PySequence_Fast@plt+0x996c>
    ddcc:	ldr	x21, [x20, #40]
    ddd0:	cbz	x21, de3c <PySequence_Fast@plt+0x9bfc>
    ddd4:	ldr	x0, [x21]
    ddd8:	ldr	x1, [x0]
    dddc:	str	xzr, [x20, #40]
    dde0:	sub	x1, x1, #0x1
    dde4:	str	x1, [x0]
    dde8:	cbz	x1, de90 <PySequence_Fast@plt+0x9c50>
    ddec:	ldr	x3, [x21, #8]
    ddf0:	ldr	x2, [x21, #24]
    ddf4:	cmp	x3, #0x0
    ddf8:	b.le	de20 <PySequence_Fast@plt+0x9be0>
    ddfc:	mov	x19, #0x0                   	// #0
    de00:	ldr	x0, [x2, x19, lsl #3]
    de04:	ldr	x1, [x0]
    de08:	sub	x1, x1, #0x1
    de0c:	str	x1, [x0]
    de10:	cbz	x1, de50 <PySequence_Fast@plt+0x9c10>
    de14:	add	x19, x19, #0x1
    de18:	cmp	x19, x3
    de1c:	b.lt	de00 <PySequence_Fast@plt+0x9bc0>  // b.tstop
    de20:	add	x0, x21, #0x20
    de24:	cmp	x2, x0
    de28:	b.eq	de34 <PySequence_Fast@plt+0x9bf4>  // b.none
    de2c:	mov	x0, x2
    de30:	bl	3e60 <PyObject_Free@plt>
    de34:	mov	x0, x21
    de38:	bl	3e60 <PyObject_Free@plt>
    de3c:	mov	x19, #0x0                   	// #0
    de40:	ldp	x27, x28, [sp, #96]
    de44:	str	x23, [x20, #40]
    de48:	ldp	x23, x24, [sp, #64]
    de4c:	b	d960 <PySequence_Fast@plt+0x9720>
    de50:	bl	3d70 <_Py_Dealloc@plt>
    de54:	add	x19, x19, #0x1
    de58:	ldr	x3, [x21, #8]
    de5c:	ldr	x2, [x21, #24]
    de60:	cmp	x19, x3
    de64:	b.lt	de00 <PySequence_Fast@plt+0x9bc0>  // b.tstop
    de68:	b	de20 <PySequence_Fast@plt+0x9be0>
    de6c:	bl	3d70 <_Py_Dealloc@plt>
    de70:	b	dcf8 <PySequence_Fast@plt+0x9ab8>
    de74:	ldp	x23, x24, [sp, #64]
    de78:	ldp	x25, x26, [sp, #80]
    de7c:	ldp	x27, x28, [sp, #96]
    de80:	b	d95c <PySequence_Fast@plt+0x971c>
    de84:	ldp	x23, x24, [sp, #64]
    de88:	ldp	x27, x28, [sp, #96]
    de8c:	b	d95c <PySequence_Fast@plt+0x971c>
    de90:	bl	3d70 <_Py_Dealloc@plt>
    de94:	b	ddec <PySequence_Fast@plt+0x9bac>

000000000000de98 <PyInit__elementtree@@Base>:
    de98:	stp	x29, x30, [sp, #-64]!
    de9c:	mov	x29, sp
    dea0:	stp	x19, x20, [sp, #16]
    dea4:	adrp	x20, 22000 <PyInit__elementtree@@Base+0x14168>
    dea8:	add	x20, x20, #0x9c0
    deac:	add	x20, x20, #0x40
    deb0:	mov	x0, x20
    deb4:	bl	3fc0 <PyState_FindModule@plt>
    deb8:	mov	x19, x0
    debc:	cbz	x0, dedc <PyInit__elementtree@@Base+0x44>
    dec0:	ldr	x0, [x0]
    dec4:	add	x0, x0, #0x1
    dec8:	str	x0, [x19]
    decc:	mov	x0, x19
    ded0:	ldp	x19, x20, [sp, #16]
    ded4:	ldp	x29, x30, [sp], #64
    ded8:	ret
    dedc:	stp	x21, x22, [sp, #32]
    dee0:	adrp	x22, 22000 <PyInit__elementtree@@Base+0x14168>
    dee4:	add	x21, x22, #0x328
    dee8:	add	x0, x21, #0x1a0
    deec:	bl	3e90 <PyType_Ready@plt>
    def0:	tbnz	w0, #31, e098 <PyInit__elementtree@@Base+0x200>
    def4:	add	x0, x21, #0x340
    def8:	bl	3e90 <PyType_Ready@plt>
    defc:	tbnz	w0, #31, e098 <PyInit__elementtree@@Base+0x200>
    df00:	mov	x0, x21
    df04:	bl	3e90 <PyType_Ready@plt>
    df08:	tbnz	w0, #31, e098 <PyInit__elementtree@@Base+0x200>
    df0c:	add	x0, x21, #0x4f8
    df10:	bl	3e90 <PyType_Ready@plt>
    df14:	tbnz	w0, #31, e098 <PyInit__elementtree@@Base+0x200>
    df18:	mov	x0, x20
    df1c:	mov	w1, #0x3f5                 	// #1013
    df20:	bl	3f90 <PyModule_Create2@plt>
    df24:	mov	x21, x0
    df28:	cbz	x0, e098 <PyInit__elementtree@@Base+0x200>
    df2c:	str	x23, [sp, #48]
    df30:	bl	3e10 <PyModule_GetState@plt>
    df34:	mov	x23, x0
    df38:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    df3c:	add	x0, x0, #0x830
    df40:	bl	3fa0 <PyImport_ImportModule@plt>
    df44:	mov	x20, x0
    df48:	cbz	x0, e0bc <PyInit__elementtree@@Base+0x224>
    df4c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    df50:	add	x1, x1, #0x838
    df54:	bl	3d00 <PyObject_GetAttrString@plt>
    df58:	ldr	x1, [x20]
    df5c:	str	x0, [x23, #8]
    df60:	sub	x1, x1, #0x1
    df64:	str	x1, [x20]
    df68:	cbz	x1, e0ac <PyInit__elementtree@@Base+0x214>
    df6c:	cbz	x0, e0bc <PyInit__elementtree@@Base+0x224>
    df70:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    df74:	add	x0, x0, #0x848
    df78:	bl	3fa0 <PyImport_ImportModule@plt>
    df7c:	str	x0, [x23, #16]
    df80:	cbz	x0, e0bc <PyInit__elementtree@@Base+0x224>
    df84:	mov	w1, #0x0                   	// #0
    df88:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    df8c:	add	x0, x0, #0x860
    df90:	bl	3e80 <PyCapsule_Import@plt>
    df94:	adrp	x1, 23000 <PyInit__elementtree@@Base+0x15168>
    df98:	mov	x20, x0
    df9c:	str	x0, [x1, #1088]
    dfa0:	cbz	x0, e0bc <PyInit__elementtree@@Base+0x224>
    dfa4:	ldr	x0, [x0]
    dfa8:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    dfac:	add	x1, x1, #0x878
    dfb0:	bl	3ff0 <strcmp@plt>
    dfb4:	cbnz	w0, e0c8 <PyInit__elementtree@@Base+0x230>
    dfb8:	ldr	w0, [x20, #8]
    dfbc:	cmp	w0, #0xaf
    dfc0:	b.ls	e0c8 <PyInit__elementtree@@Base+0x230>  // b.plast
    dfc4:	ldr	w0, [x20, #12]
    dfc8:	cmp	w0, #0x2
    dfcc:	b.ne	e0c8 <PyInit__elementtree@@Base+0x230>  // b.any
    dfd0:	ldr	x1, [x20, #16]
    dfd4:	mov	x0, #0x2                   	// #2
    dfd8:	movk	x0, #0x9, lsl #32
    dfdc:	cmp	x1, x0
    dfe0:	b.ne	e0c8 <PyInit__elementtree@@Base+0x230>  // b.any
    dfe4:	adrp	x1, 21000 <PyInit__elementtree@@Base+0x13168>
    dfe8:	mov	x2, #0x0                   	// #0
    dfec:	adrp	x0, e000 <PyInit__elementtree@@Base+0x168>
    dff0:	add	x0, x0, #0x8b0
    dff4:	ldr	x1, [x1, #4056]
    dff8:	add	x20, x22, #0x328
    dffc:	mov	x19, x21
    e000:	ldr	x1, [x1]
    e004:	bl	3ee0 <PyErr_NewException@plt>
    e008:	mov	x2, x0
    e00c:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    e010:	mov	x0, x21
    e014:	add	x1, x1, #0x8d8
    e018:	ldr	x3, [x2]
    e01c:	str	x2, [x23]
    e020:	add	x3, x3, #0x1
    e024:	str	x3, [x2]
    e028:	bl	4120 <PyModule_AddObject@plt>
    e02c:	ldr	x3, [x22, #808]
    e030:	mov	x2, x20
    e034:	mov	x0, x21
    e038:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    e03c:	add	x3, x3, #0x1
    e040:	add	x1, x1, #0x8e8
    e044:	str	x3, [x22, #808]
    e048:	bl	4120 <PyModule_AddObject@plt>
    e04c:	ldr	x3, [x20, #832]
    e050:	add	x2, x20, #0x340
    e054:	mov	x0, x21
    e058:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    e05c:	add	x3, x3, #0x1
    e060:	str	x3, [x20, #832]
    e064:	add	x1, x1, #0x8f0
    e068:	bl	4120 <PyModule_AddObject@plt>
    e06c:	ldr	x3, [x20, #1272]
    e070:	mov	x0, x21
    e074:	add	x2, x20, #0x4f8
    e078:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    e07c:	add	x3, x3, #0x1
    e080:	str	x3, [x20, #1272]
    e084:	add	x1, x1, #0x5c8
    e088:	bl	4120 <PyModule_AddObject@plt>
    e08c:	ldp	x21, x22, [sp, #32]
    e090:	ldr	x23, [sp, #48]
    e094:	b	decc <PyInit__elementtree@@Base+0x34>
    e098:	mov	x0, x19
    e09c:	ldp	x19, x20, [sp, #16]
    e0a0:	ldp	x21, x22, [sp, #32]
    e0a4:	ldp	x29, x30, [sp], #64
    e0a8:	ret
    e0ac:	mov	x0, x20
    e0b0:	bl	3d70 <_Py_Dealloc@plt>
    e0b4:	ldr	x0, [x23, #8]
    e0b8:	b	df6c <PyInit__elementtree@@Base+0xd4>
    e0bc:	ldp	x21, x22, [sp, #32]
    e0c0:	ldr	x23, [sp, #48]
    e0c4:	b	decc <PyInit__elementtree@@Base+0x34>
    e0c8:	adrp	x0, 21000 <PyInit__elementtree@@Base+0x13168>
    e0cc:	adrp	x1, e000 <PyInit__elementtree@@Base+0x168>
    e0d0:	add	x1, x1, #0x890
    e0d4:	ldr	x0, [x0, #4000]
    e0d8:	ldr	x0, [x0]
    e0dc:	bl	3de0 <PyErr_SetString@plt>
    e0e0:	ldp	x21, x22, [sp, #32]
    e0e4:	ldr	x23, [sp, #48]
    e0e8:	b	decc <PyInit__elementtree@@Base+0x34>

Disassembly of section .fini:

000000000000e0ec <.fini>:
    e0ec:	stp	x29, x30, [sp, #-16]!
    e0f0:	mov	x29, sp
    e0f4:	ldp	x29, x30, [sp], #16
    e0f8:	ret
