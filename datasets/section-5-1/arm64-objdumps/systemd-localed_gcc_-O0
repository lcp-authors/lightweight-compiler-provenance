
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-localed_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004021c0 <_init>:
  4021c0:	stp	x29, x30, [sp, #-16]!
  4021c4:	mov	x29, sp
  4021c8:	bl	402830 <call_weak_fn>
  4021cc:	ldp	x29, x30, [sp], #16
  4021d0:	ret

Disassembly of section .plt:

00000000004021e0 <.plt>:
  4021e0:	stp	x16, x30, [sp, #-16]!
  4021e4:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4021e8:	ldr	x17, [x16, #3320]
  4021ec:	add	x16, x16, #0xcf8
  4021f0:	br	x17
  4021f4:	nop
  4021f8:	nop
  4021fc:	nop

0000000000402200 <safe_fclose@plt>:
  402200:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402204:	ldr	x17, [x16, #3328]
  402208:	add	x16, x16, #0xd00
  40220c:	br	x17

0000000000402210 <read_line_full@plt>:
  402210:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402214:	ldr	x17, [x16, #3336]
  402218:	add	x16, x16, #0xd08
  40221c:	br	x17

0000000000402220 <bus_error_message@plt>:
  402220:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402224:	ldr	x17, [x16, #3344]
  402228:	add	x16, x16, #0xd10
  40222c:	br	x17

0000000000402230 <sd_bus_message_new_method_call@plt>:
  402230:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402234:	ldr	x17, [x16, #3352]
  402238:	add	x16, x16, #0xd18
  40223c:	br	x17

0000000000402240 <locale_is_valid@plt>:
  402240:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402244:	ldr	x17, [x16, #3360]
  402248:	add	x16, x16, #0xd20
  40224c:	br	x17

0000000000402250 <filename_is_valid@plt>:
  402250:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402254:	ldr	x17, [x16, #3368]
  402258:	add	x16, x16, #0xd28
  40225c:	br	x17

0000000000402260 <unlink@plt>:
  402260:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402264:	ldr	x17, [x16, #3376]
  402268:	add	x16, x16, #0xd30
  40226c:	br	x17

0000000000402270 <sd_bus_reply_method_return@plt>:
  402270:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402274:	ldr	x17, [x16, #3384]
  402278:	add	x16, x16, #0xd38
  40227c:	br	x17

0000000000402280 <strcspn@plt>:
  402280:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402284:	ldr	x17, [x16, #3392]
  402288:	add	x16, x16, #0xd40
  40228c:	br	x17

0000000000402290 <strcmp_ptr@plt>:
  402290:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402294:	ldr	x17, [x16, #3400]
  402298:	add	x16, x16, #0xd48
  40229c:	br	x17

00000000004022a0 <fchmod@plt>:
  4022a0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4022a4:	ldr	x17, [x16, #3408]
  4022a8:	add	x16, x16, #0xd50
  4022ac:	br	x17

00000000004022b0 <mac_selinux_init@plt>:
  4022b0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4022b4:	ldr	x17, [x16, #3416]
  4022b8:	add	x16, x16, #0xd58
  4022bc:	br	x17

00000000004022c0 <__libc_start_main@plt>:
  4022c0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4022c4:	ldr	x17, [x16, #3424]
  4022c8:	add	x16, x16, #0xd60
  4022cc:	br	x17

00000000004022d0 <sd_event_set_watchdog@plt>:
  4022d0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4022d4:	ldr	x17, [x16, #3432]
  4022d8:	add	x16, x16, #0xd68
  4022dc:	br	x17

00000000004022e0 <sd_bus_message_unref@plt>:
  4022e0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4022e4:	ldr	x17, [x16, #3440]
  4022e8:	add	x16, x16, #0xd70
  4022ec:	br	x17

00000000004022f0 <strv_split_extract@plt>:
  4022f0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4022f4:	ldr	x17, [x16, #3448]
  4022f8:	add	x16, x16, #0xd78
  4022fc:	br	x17

0000000000402300 <sd_bus_request_name_async@plt>:
  402300:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402304:	ldr	x17, [x16, #3456]
  402308:	add	x16, x16, #0xd80
  40230c:	br	x17

0000000000402310 <fileno@plt>:
  402310:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402314:	ldr	x17, [x16, #3464]
  402318:	add	x16, x16, #0xd88
  40231c:	br	x17

0000000000402320 <__gmon_start__@plt>:
  402320:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402324:	ldr	x17, [x16, #3472]
  402328:	add	x16, x16, #0xd90
  40232c:	br	x17

0000000000402330 <sd_bus_error_set_errnof@plt>:
  402330:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402334:	ldr	x17, [x16, #3480]
  402338:	add	x16, x16, #0xd98
  40233c:	br	x17

0000000000402340 <rename@plt>:
  402340:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402344:	ldr	x17, [x16, #3488]
  402348:	add	x16, x16, #0xda0
  40234c:	br	x17

0000000000402350 <sd_bus_message_read_basic@plt>:
  402350:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402354:	ldr	x17, [x16, #3496]
  402358:	add	x16, x16, #0xda8
  40235c:	br	x17

0000000000402360 <polkit_agent_close@plt>:
  402360:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402364:	ldr	x17, [x16, #3504]
  402368:	add	x16, x16, #0xdb0
  40236c:	br	x17

0000000000402370 <sd_event_default@plt>:
  402370:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402374:	ldr	x17, [x16, #3512]
  402378:	add	x16, x16, #0xdb8
  40237c:	br	x17

0000000000402380 <bus_event_loop_with_idle@plt>:
  402380:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402384:	ldr	x17, [x16, #3520]
  402388:	add	x16, x16, #0xdc0
  40238c:	br	x17

0000000000402390 <strnlen@plt>:
  402390:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402394:	ldr	x17, [x16, #3528]
  402398:	add	x16, x16, #0xdc8
  40239c:	br	x17

00000000004023a0 <free_and_strdup@plt>:
  4023a0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4023a4:	ldr	x17, [x16, #3536]
  4023a8:	add	x16, x16, #0xdd0
  4023ac:	br	x17

00000000004023b0 <bus_verify_polkit_async_registry_free@plt>:
  4023b0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4023b4:	ldr	x17, [x16, #3544]
  4023b8:	add	x16, x16, #0xdd8
  4023bc:	br	x17

00000000004023c0 <fprintf@plt>:
  4023c0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4023c4:	ldr	x17, [x16, #3552]
  4023c8:	add	x16, x16, #0xde0
  4023cc:	br	x17

00000000004023d0 <memcpy@plt>:
  4023d0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4023d4:	ldr	x17, [x16, #3560]
  4023d8:	add	x16, x16, #0xde8
  4023dc:	br	x17

00000000004023e0 <log_setup_service@plt>:
  4023e0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4023e4:	ldr	x17, [x16, #3568]
  4023e8:	add	x16, x16, #0xdf0
  4023ec:	br	x17

00000000004023f0 <strjoin_real@plt>:
  4023f0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4023f4:	ldr	x17, [x16, #3576]
  4023f8:	add	x16, x16, #0xdf8
  4023fc:	br	x17

0000000000402400 <locale_variable_to_string@plt>:
  402400:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402404:	ldr	x17, [x16, #3584]
  402408:	add	x16, x16, #0xe00
  40240c:	br	x17

0000000000402410 <sd_bus_message_get_bus@plt>:
  402410:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402414:	ldr	x17, [x16, #3592]
  402418:	add	x16, x16, #0xe08
  40241c:	br	x17

0000000000402420 <strv_env_unset@plt>:
  402420:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402424:	ldr	x17, [x16, #3600]
  402428:	add	x16, x16, #0xe10
  40242c:	br	x17

0000000000402430 <log_assert_failed_realm@plt>:
  402430:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402434:	ldr	x17, [x16, #3608]
  402438:	add	x16, x16, #0xe18
  40243c:	br	x17

0000000000402440 <sd_bus_message_read@plt>:
  402440:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402444:	ldr	x17, [x16, #3616]
  402448:	add	x16, x16, #0xe20
  40244c:	br	x17

0000000000402450 <umask@plt>:
  402450:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402454:	ldr	x17, [x16, #3624]
  402458:	add	x16, x16, #0xe28
  40245c:	br	x17

0000000000402460 <sd_bus_attach_event@plt>:
  402460:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402464:	ldr	x17, [x16, #3632]
  402468:	add	x16, x16, #0xe30
  40246c:	br	x17

0000000000402470 <strncmp@plt>:
  402470:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402474:	ldr	x17, [x16, #3640]
  402478:	add	x16, x16, #0xe38
  40247c:	br	x17

0000000000402480 <access@plt>:
  402480:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402484:	ldr	x17, [x16, #3648]
  402488:	add	x16, x16, #0xe40
  40248c:	br	x17

0000000000402490 <sigprocmask_many@plt>:
  402490:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402494:	ldr	x17, [x16, #3656]
  402498:	add	x16, x16, #0xe48
  40249c:	br	x17

00000000004024a0 <string_is_safe@plt>:
  4024a0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4024a4:	ldr	x17, [x16, #3664]
  4024a8:	add	x16, x16, #0xe50
  4024ac:	br	x17

00000000004024b0 <abort@plt>:
  4024b0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4024b4:	ldr	x17, [x16, #3672]
  4024b8:	add	x16, x16, #0xe58
  4024bc:	br	x17

00000000004024c0 <locale_variables_free@plt>:
  4024c0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4024c4:	ldr	x17, [x16, #3680]
  4024c8:	add	x16, x16, #0xe60
  4024cc:	br	x17

00000000004024d0 <first_word@plt>:
  4024d0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4024d4:	ldr	x17, [x16, #3688]
  4024d8:	add	x16, x16, #0xe68
  4024dc:	br	x17

00000000004024e0 <fopen_temporary@plt>:
  4024e0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4024e4:	ldr	x17, [x16, #3696]
  4024e8:	add	x16, x16, #0xe70
  4024ec:	br	x17

00000000004024f0 <write_env_file_label@plt>:
  4024f0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4024f4:	ldr	x17, [x16, #3704]
  4024f8:	add	x16, x16, #0xe78
  4024fc:	br	x17

0000000000402500 <bus_message_read_strv_extend@plt>:
  402500:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402504:	ldr	x17, [x16, #3712]
  402508:	add	x16, x16, #0xe80
  40250c:	br	x17

0000000000402510 <__errno_location@plt>:
  402510:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402514:	ldr	x17, [x16, #3720]
  402518:	add	x16, x16, #0xe88
  40251c:	br	x17

0000000000402520 <sd_bus_error_set@plt>:
  402520:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402524:	ldr	x17, [x16, #3728]
  402528:	add	x16, x16, #0xe90
  40252c:	br	x17

0000000000402530 <strv_free@plt>:
  402530:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402534:	ldr	x17, [x16, #3736]
  402538:	add	x16, x16, #0xe98
  40253c:	br	x17

0000000000402540 <parse_env_file_sentinel@plt>:
  402540:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402544:	ldr	x17, [x16, #3744]
  402548:	add	x16, x16, #0xea0
  40254c:	br	x17

0000000000402550 <sd_bus_add_object_vtable@plt>:
  402550:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402554:	ldr	x17, [x16, #3752]
  402558:	add	x16, x16, #0xea8
  40255c:	br	x17

0000000000402560 <strndup@plt>:
  402560:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402564:	ldr	x17, [x16, #3760]
  402568:	add	x16, x16, #0xeb0
  40256c:	br	x17

0000000000402570 <sd_bus_error_setf@plt>:
  402570:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402574:	ldr	x17, [x16, #3768]
  402578:	add	x16, x16, #0xeb8
  40257c:	br	x17

0000000000402580 <__stack_chk_fail@plt>:
  402580:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402584:	ldr	x17, [x16, #3776]
  402588:	add	x16, x16, #0xec0
  40258c:	br	x17

0000000000402590 <sd_bus_message_append_basic@plt>:
  402590:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402594:	ldr	x17, [x16, #3784]
  402598:	add	x16, x16, #0xec8
  40259c:	br	x17

00000000004025a0 <__xstat64@plt>:
  4025a0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4025a4:	ldr	x17, [x16, #3792]
  4025a8:	add	x16, x16, #0xed0
  4025ac:	br	x17

00000000004025b0 <mkdir_p_label@plt>:
  4025b0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4025b4:	ldr	x17, [x16, #3800]
  4025b8:	add	x16, x16, #0xed8
  4025bc:	br	x17

00000000004025c0 <ask_password_agent_close@plt>:
  4025c0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4025c4:	ldr	x17, [x16, #3808]
  4025c8:	add	x16, x16, #0xee0
  4025cc:	br	x17

00000000004025d0 <pager_close@plt>:
  4025d0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4025d4:	ldr	x17, [x16, #3816]
  4025d8:	add	x16, x16, #0xee8
  4025dc:	br	x17

00000000004025e0 <strv_length@plt>:
  4025e0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4025e4:	ldr	x17, [x16, #3824]
  4025e8:	add	x16, x16, #0xef0
  4025ec:	br	x17

00000000004025f0 <fflush_sync_and_check@plt>:
  4025f0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4025f4:	ldr	x17, [x16, #3832]
  4025f8:	add	x16, x16, #0xef8
  4025fc:	br	x17

0000000000402600 <sd_bus_error_free@plt>:
  402600:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402604:	ldr	x17, [x16, #3840]
  402608:	add	x16, x16, #0xf00
  40260c:	br	x17

0000000000402610 <sd_bus_call@plt>:
  402610:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402614:	ldr	x17, [x16, #3848]
  402618:	add	x16, x16, #0xf08
  40261c:	br	x17

0000000000402620 <sd_bus_emit_properties_changed@plt>:
  402620:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402624:	ldr	x17, [x16, #3856]
  402628:	add	x16, x16, #0xf10
  40262c:	br	x17

0000000000402630 <load_env_file@plt>:
  402630:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402634:	ldr	x17, [x16, #3864]
  402638:	add	x16, x16, #0xf18
  40263c:	br	x17

0000000000402640 <log_internal_realm@plt>:
  402640:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402644:	ldr	x17, [x16, #3872]
  402648:	add	x16, x16, #0xf20
  40264c:	br	x17

0000000000402650 <sd_bus_default_system@plt>:
  402650:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402654:	ldr	x17, [x16, #3880]
  402658:	add	x16, x16, #0xf28
  40265c:	br	x17

0000000000402660 <sd_bus_flush_close_unref@plt>:
  402660:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402664:	ldr	x17, [x16, #3888]
  402668:	add	x16, x16, #0xf30
  40266c:	br	x17

0000000000402670 <strv_join_prefix@plt>:
  402670:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402674:	ldr	x17, [x16, #3896]
  402678:	add	x16, x16, #0xf38
  40267c:	br	x17

0000000000402680 <strcmp@plt>:
  402680:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402684:	ldr	x17, [x16, #3904]
  402688:	add	x16, x16, #0xf40
  40268c:	br	x17

0000000000402690 <strdup@plt>:
  402690:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402694:	ldr	x17, [x16, #3912]
  402698:	add	x16, x16, #0xf48
  40269c:	br	x17

00000000004026a0 <calloc@plt>:
  4026a0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4026a4:	ldr	x17, [x16, #3920]
  4026a8:	add	x16, x16, #0xf50
  4026ac:	br	x17

00000000004026b0 <getenv@plt>:
  4026b0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4026b4:	ldr	x17, [x16, #3928]
  4026b8:	add	x16, x16, #0xf58
  4026bc:	br	x17

00000000004026c0 <strchr@plt>:
  4026c0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4026c4:	ldr	x17, [x16, #3936]
  4026c8:	add	x16, x16, #0xf60
  4026cc:	br	x17

00000000004026d0 <asprintf@plt>:
  4026d0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4026d4:	ldr	x17, [x16, #3944]
  4026d8:	add	x16, x16, #0xf68
  4026dc:	br	x17

00000000004026e0 <timespec_load@plt>:
  4026e0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4026e4:	ldr	x17, [x16, #3952]
  4026e8:	add	x16, x16, #0xf70
  4026ec:	br	x17

00000000004026f0 <sd_bus_message_append_strv@plt>:
  4026f0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4026f4:	ldr	x17, [x16, #3960]
  4026f8:	add	x16, x16, #0xf78
  4026fc:	br	x17

0000000000402700 <strstrip@plt>:
  402700:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402704:	ldr	x17, [x16, #3968]
  402708:	add	x16, x16, #0xf80
  40270c:	br	x17

0000000000402710 <free@plt>:
  402710:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402714:	ldr	x17, [x16, #3976]
  402718:	add	x16, x16, #0xf88
  40271c:	br	x17

0000000000402720 <fwrite@plt>:
  402720:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402724:	ldr	x17, [x16, #3984]
  402728:	add	x16, x16, #0xf90
  40272c:	br	x17

0000000000402730 <sd_event_unref@plt>:
  402730:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402734:	ldr	x17, [x16, #3992]
  402738:	add	x16, x16, #0xf98
  40273c:	br	x17

0000000000402740 <mac_selinux_finish@plt>:
  402740:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402744:	ldr	x17, [x16, #4000]
  402748:	add	x16, x16, #0xfa0
  40274c:	br	x17

0000000000402750 <sd_event_add_signal@plt>:
  402750:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402754:	ldr	x17, [x16, #4008]
  402758:	add	x16, x16, #0xfa8
  40275c:	br	x17

0000000000402760 <strv_env_set@plt>:
  402760:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402764:	ldr	x17, [x16, #4016]
  402768:	add	x16, x16, #0xfb0
  40276c:	br	x17

0000000000402770 <sd_bus_call_method@plt>:
  402770:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402774:	ldr	x17, [x16, #4024]
  402778:	add	x16, x16, #0xfb8
  40277c:	br	x17

0000000000402780 <strlen@plt>:
  402780:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402784:	ldr	x17, [x16, #4032]
  402788:	add	x16, x16, #0xfc0
  40278c:	br	x17

0000000000402790 <sd_bus_message_ref@plt>:
  402790:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  402794:	ldr	x17, [x16, #4040]
  402798:	add	x16, x16, #0xfc8
  40279c:	br	x17

00000000004027a0 <fopen64@plt>:
  4027a0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4027a4:	ldr	x17, [x16, #4048]
  4027a8:	add	x16, x16, #0xfd0
  4027ac:	br	x17

00000000004027b0 <log_oom_internal@plt>:
  4027b0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4027b4:	ldr	x17, [x16, #4056]
  4027b8:	add	x16, x16, #0xfd8
  4027bc:	br	x17

00000000004027c0 <bus_verify_polkit_async@plt>:
  4027c0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4027c4:	ldr	x17, [x16, #4064]
  4027c8:	add	x16, x16, #0xfe0
  4027cc:	br	x17

00000000004027d0 <log_get_max_level_realm@plt>:
  4027d0:	adrp	x16, 41b000 <__FRAME_END__+0x10194>
  4027d4:	ldr	x17, [x16, #4072]
  4027d8:	add	x16, x16, #0xfe8
  4027dc:	br	x17

Disassembly of section .text:

00000000004027e0 <_start>:
  4027e0:	mov	x29, #0x0                   	// #0
  4027e4:	mov	x30, #0x0                   	// #0
  4027e8:	mov	x5, x0
  4027ec:	ldr	x1, [sp]
  4027f0:	add	x2, sp, #0x8
  4027f4:	mov	x6, sp
  4027f8:	movz	x0, #0x0, lsl #48
  4027fc:	movk	x0, #0x0, lsl #32
  402800:	movk	x0, #0x40, lsl #16
  402804:	movk	x0, #0x5c58
  402808:	movz	x3, #0x0, lsl #48
  40280c:	movk	x3, #0x0, lsl #32
  402810:	movk	x3, #0x40, lsl #16
  402814:	movk	x3, #0x8c40
  402818:	movz	x4, #0x0, lsl #48
  40281c:	movk	x4, #0x0, lsl #32
  402820:	movk	x4, #0x40, lsl #16
  402824:	movk	x4, #0x8cc0
  402828:	bl	4022c0 <__libc_start_main@plt>
  40282c:	bl	4024b0 <abort@plt>

0000000000402830 <call_weak_fn>:
  402830:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  402834:	ldr	x0, [x0, #4088]
  402838:	cbz	x0, 402840 <call_weak_fn+0x10>
  40283c:	b	402320 <__gmon_start__@plt>
  402840:	ret

0000000000402844 <deregister_tm_clones>:
  402844:	stp	x29, x30, [sp, #-32]!
  402848:	mov	x29, sp
  40284c:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402850:	add	x0, x0, #0x0
  402854:	str	x0, [sp, #24]
  402858:	ldr	x0, [sp, #24]
  40285c:	str	x0, [sp, #24]
  402860:	ldr	x1, [sp, #24]
  402864:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402868:	add	x0, x0, #0x0
  40286c:	cmp	x1, x0
  402870:	b.eq	4028ac <deregister_tm_clones+0x68>  // b.none
  402874:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402878:	add	x0, x0, #0xce8
  40287c:	ldr	x0, [x0]
  402880:	str	x0, [sp, #16]
  402884:	ldr	x0, [sp, #16]
  402888:	str	x0, [sp, #16]
  40288c:	ldr	x0, [sp, #16]
  402890:	cmp	x0, #0x0
  402894:	b.eq	4028b0 <deregister_tm_clones+0x6c>  // b.none
  402898:	ldr	x1, [sp, #16]
  40289c:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  4028a0:	add	x0, x0, #0x0
  4028a4:	blr	x1
  4028a8:	b	4028b0 <deregister_tm_clones+0x6c>
  4028ac:	nop
  4028b0:	ldp	x29, x30, [sp], #32
  4028b4:	ret

00000000004028b8 <register_tm_clones>:
  4028b8:	stp	x29, x30, [sp, #-48]!
  4028bc:	mov	x29, sp
  4028c0:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  4028c4:	add	x0, x0, #0x0
  4028c8:	str	x0, [sp, #40]
  4028cc:	ldr	x0, [sp, #40]
  4028d0:	str	x0, [sp, #40]
  4028d4:	ldr	x1, [sp, #40]
  4028d8:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  4028dc:	add	x0, x0, #0x0
  4028e0:	sub	x0, x1, x0
  4028e4:	asr	x0, x0, #3
  4028e8:	lsr	x1, x0, #63
  4028ec:	add	x0, x1, x0
  4028f0:	asr	x0, x0, #1
  4028f4:	str	x0, [sp, #32]
  4028f8:	ldr	x0, [sp, #32]
  4028fc:	cmp	x0, #0x0
  402900:	b.eq	402940 <register_tm_clones+0x88>  // b.none
  402904:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402908:	add	x0, x0, #0xcf0
  40290c:	ldr	x0, [x0]
  402910:	str	x0, [sp, #24]
  402914:	ldr	x0, [sp, #24]
  402918:	str	x0, [sp, #24]
  40291c:	ldr	x0, [sp, #24]
  402920:	cmp	x0, #0x0
  402924:	b.eq	402944 <register_tm_clones+0x8c>  // b.none
  402928:	ldr	x2, [sp, #24]
  40292c:	ldr	x1, [sp, #32]
  402930:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402934:	add	x0, x0, #0x0
  402938:	blr	x2
  40293c:	b	402944 <register_tm_clones+0x8c>
  402940:	nop
  402944:	ldp	x29, x30, [sp], #48
  402948:	ret

000000000040294c <__do_global_dtors_aux>:
  40294c:	stp	x29, x30, [sp, #-16]!
  402950:	mov	x29, sp
  402954:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402958:	add	x0, x0, #0xc
  40295c:	ldrb	w0, [x0]
  402960:	and	x0, x0, #0xff
  402964:	cmp	x0, #0x0
  402968:	b.ne	402984 <__do_global_dtors_aux+0x38>  // b.any
  40296c:	bl	402844 <deregister_tm_clones>
  402970:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402974:	add	x0, x0, #0xc
  402978:	mov	w1, #0x1                   	// #1
  40297c:	strb	w1, [x0]
  402980:	b	402988 <__do_global_dtors_aux+0x3c>
  402984:	nop
  402988:	ldp	x29, x30, [sp], #16
  40298c:	ret

0000000000402990 <frame_dummy>:
  402990:	stp	x29, x30, [sp, #-16]!
  402994:	mov	x29, sp
  402998:	bl	4028b8 <register_tm_clones>
  40299c:	nop
  4029a0:	ldp	x29, x30, [sp], #16
  4029a4:	ret

00000000004029a8 <sd_event_unrefp>:
  4029a8:	stp	x29, x30, [sp, #-32]!
  4029ac:	mov	x29, sp
  4029b0:	str	x0, [sp, #24]
  4029b4:	ldr	x0, [sp, #24]
  4029b8:	ldr	x0, [x0]
  4029bc:	cmp	x0, #0x0
  4029c0:	b.eq	4029d0 <sd_event_unrefp+0x28>  // b.none
  4029c4:	ldr	x0, [sp, #24]
  4029c8:	ldr	x0, [x0]
  4029cc:	bl	402730 <sd_event_unref@plt>
  4029d0:	nop
  4029d4:	ldp	x29, x30, [sp], #32
  4029d8:	ret

00000000004029dc <sd_bus_flush_close_unrefp>:
  4029dc:	stp	x29, x30, [sp, #-32]!
  4029e0:	mov	x29, sp
  4029e4:	str	x0, [sp, #24]
  4029e8:	ldr	x0, [sp, #24]
  4029ec:	ldr	x0, [x0]
  4029f0:	cmp	x0, #0x0
  4029f4:	b.eq	402a04 <sd_bus_flush_close_unrefp+0x28>  // b.none
  4029f8:	ldr	x0, [sp, #24]
  4029fc:	ldr	x0, [x0]
  402a00:	bl	402660 <sd_bus_flush_close_unref@plt>
  402a04:	nop
  402a08:	ldp	x29, x30, [sp], #32
  402a0c:	ret

0000000000402a10 <sd_bus_message_unrefp>:
  402a10:	stp	x29, x30, [sp, #-32]!
  402a14:	mov	x29, sp
  402a18:	str	x0, [sp, #24]
  402a1c:	ldr	x0, [sp, #24]
  402a20:	ldr	x0, [x0]
  402a24:	cmp	x0, #0x0
  402a28:	b.eq	402a38 <sd_bus_message_unrefp+0x28>  // b.none
  402a2c:	ldr	x0, [sp, #24]
  402a30:	ldr	x0, [x0]
  402a34:	bl	4022e0 <sd_bus_message_unref@plt>
  402a38:	nop
  402a3c:	ldp	x29, x30, [sp], #32
  402a40:	ret

0000000000402a44 <ALIGN_TO>:
  402a44:	sub	sp, sp, #0x10
  402a48:	str	x0, [sp, #8]
  402a4c:	str	x1, [sp]
  402a50:	ldr	x1, [sp, #8]
  402a54:	ldr	x0, [sp]
  402a58:	add	x0, x1, x0
  402a5c:	sub	x1, x0, #0x1
  402a60:	ldr	x0, [sp]
  402a64:	neg	x0, x0
  402a68:	and	x0, x1, x0
  402a6c:	add	sp, sp, #0x10
  402a70:	ret

0000000000402a74 <freep>:
  402a74:	stp	x29, x30, [sp, #-32]!
  402a78:	mov	x29, sp
  402a7c:	str	x0, [sp, #24]
  402a80:	ldr	x0, [sp, #24]
  402a84:	ldr	x0, [x0]
  402a88:	bl	402710 <free@plt>
  402a8c:	nop
  402a90:	ldp	x29, x30, [sp], #32
  402a94:	ret

0000000000402a98 <save_argc_argv>:
  402a98:	sub	sp, sp, #0x10
  402a9c:	str	w0, [sp, #12]
  402aa0:	str	x1, [sp]
  402aa4:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402aa8:	add	x0, x0, #0x8
  402aac:	ldr	w1, [sp, #12]
  402ab0:	str	w1, [x0]
  402ab4:	adrp	x0, 41c000 <saved_argv@@SD_SHARED>
  402ab8:	add	x0, x0, #0x0
  402abc:	ldr	x1, [sp]
  402ac0:	str	x1, [x0]
  402ac4:	nop
  402ac8:	add	sp, sp, #0x10
  402acc:	ret

0000000000402ad0 <streq_ptr>:
  402ad0:	stp	x29, x30, [sp, #-32]!
  402ad4:	mov	x29, sp
  402ad8:	str	x0, [sp, #24]
  402adc:	str	x1, [sp, #16]
  402ae0:	ldr	x1, [sp, #16]
  402ae4:	ldr	x0, [sp, #24]
  402ae8:	bl	402290 <strcmp_ptr@plt>
  402aec:	cmp	w0, #0x0
  402af0:	cset	w0, eq  // eq = none
  402af4:	and	w0, w0, #0xff
  402af8:	ldp	x29, x30, [sp], #32
  402afc:	ret

0000000000402b00 <strempty>:
  402b00:	sub	sp, sp, #0x10
  402b04:	str	x0, [sp, #8]
  402b08:	ldr	x0, [sp, #8]
  402b0c:	cmp	x0, #0x0
  402b10:	b.ne	402b1c <strempty+0x1c>  // b.any
  402b14:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402b18:	add	x0, x0, #0xcf8
  402b1c:	add	sp, sp, #0x10
  402b20:	ret

0000000000402b24 <strnull>:
  402b24:	sub	sp, sp, #0x10
  402b28:	str	x0, [sp, #8]
  402b2c:	ldr	x0, [sp, #8]
  402b30:	cmp	x0, #0x0
  402b34:	b.ne	402b40 <strnull+0x1c>  // b.any
  402b38:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402b3c:	add	x0, x0, #0xd00
  402b40:	add	sp, sp, #0x10
  402b44:	ret

0000000000402b48 <isempty>:
  402b48:	sub	sp, sp, #0x10
  402b4c:	str	x0, [sp, #8]
  402b50:	ldr	x0, [sp, #8]
  402b54:	cmp	x0, #0x0
  402b58:	b.eq	402b6c <isempty+0x24>  // b.none
  402b5c:	ldr	x0, [sp, #8]
  402b60:	ldrb	w0, [x0]
  402b64:	cmp	w0, #0x0
  402b68:	b.ne	402b74 <isempty+0x2c>  // b.any
  402b6c:	mov	w0, #0x1                   	// #1
  402b70:	b	402b78 <isempty+0x30>
  402b74:	mov	w0, #0x0                   	// #0
  402b78:	and	w0, w0, #0x1
  402b7c:	and	w0, w0, #0xff
  402b80:	add	sp, sp, #0x10
  402b84:	ret

0000000000402b88 <empty_to_null>:
  402b88:	stp	x29, x30, [sp, #-32]!
  402b8c:	mov	x29, sp
  402b90:	str	x0, [sp, #24]
  402b94:	ldr	x0, [sp, #24]
  402b98:	bl	402b48 <isempty>
  402b9c:	and	w0, w0, #0xff
  402ba0:	cmp	w0, #0x0
  402ba4:	b.ne	402bb0 <empty_to_null+0x28>  // b.any
  402ba8:	ldr	x0, [sp, #24]
  402bac:	b	402bb4 <empty_to_null+0x2c>
  402bb0:	mov	x0, #0x0                   	// #0
  402bb4:	ldp	x29, x30, [sp], #32
  402bb8:	ret

0000000000402bbc <startswith>:
  402bbc:	stp	x29, x30, [sp, #-48]!
  402bc0:	mov	x29, sp
  402bc4:	str	x0, [sp, #24]
  402bc8:	str	x1, [sp, #16]
  402bcc:	ldr	x0, [sp, #16]
  402bd0:	bl	402780 <strlen@plt>
  402bd4:	str	x0, [sp, #40]
  402bd8:	ldr	x2, [sp, #40]
  402bdc:	ldr	x1, [sp, #16]
  402be0:	ldr	x0, [sp, #24]
  402be4:	bl	402470 <strncmp@plt>
  402be8:	cmp	w0, #0x0
  402bec:	b.ne	402c00 <startswith+0x44>  // b.any
  402bf0:	ldr	x1, [sp, #24]
  402bf4:	ldr	x0, [sp, #40]
  402bf8:	add	x0, x1, x0
  402bfc:	b	402c04 <startswith+0x48>
  402c00:	mov	x0, #0x0                   	// #0
  402c04:	ldp	x29, x30, [sp], #48
  402c08:	ret

0000000000402c0c <locale_variables_freep>:
  402c0c:	stp	x29, x30, [sp, #-32]!
  402c10:	mov	x29, sp
  402c14:	str	x0, [sp, #24]
  402c18:	ldr	x0, [sp, #24]
  402c1c:	bl	4024c0 <locale_variables_free@plt>
  402c20:	nop
  402c24:	ldp	x29, x30, [sp], #32
  402c28:	ret

0000000000402c2c <static_destruct>:
  402c2c:	stp	x29, x30, [sp, #-32]!
  402c30:	mov	x29, sp
  402c34:	adrp	x0, 409000 <_fini+0x328>
  402c38:	add	x0, x0, #0x658
  402c3c:	ldr	x0, [x0]
  402c40:	cmp	x0, #0x0
  402c44:	b.eq	402ca8 <static_destruct+0x7c>  // b.none
  402c48:	adrp	x0, 409000 <_fini+0x328>
  402c4c:	add	x0, x0, #0x658
  402c50:	ldr	x0, [x0]
  402c54:	mov	x1, #0x8                   	// #8
  402c58:	bl	402a44 <ALIGN_TO>
  402c5c:	str	x0, [sp, #24]
  402c60:	b	402c8c <static_destruct+0x60>
  402c64:	ldr	x0, [sp, #24]
  402c68:	ldr	x1, [x0, #8]
  402c6c:	ldr	x0, [sp, #24]
  402c70:	ldr	x0, [x0]
  402c74:	blr	x1
  402c78:	ldr	x0, [sp, #24]
  402c7c:	add	x0, x0, #0x10
  402c80:	mov	x1, #0x8                   	// #8
  402c84:	bl	402a44 <ALIGN_TO>
  402c88:	str	x0, [sp, #24]
  402c8c:	ldr	x1, [sp, #24]
  402c90:	adrp	x0, 409000 <_fini+0x328>
  402c94:	add	x0, x0, #0x660
  402c98:	ldr	x0, [x0]
  402c9c:	cmp	x1, x0
  402ca0:	b.cc	402c64 <static_destruct+0x38>  // b.lo, b.ul, b.last
  402ca4:	b	402cac <static_destruct+0x80>
  402ca8:	nop
  402cac:	ldp	x29, x30, [sp], #32
  402cb0:	ret

0000000000402cb4 <strv_freep>:
  402cb4:	stp	x29, x30, [sp, #-32]!
  402cb8:	mov	x29, sp
  402cbc:	str	x0, [sp, #24]
  402cc0:	ldr	x0, [sp, #24]
  402cc4:	ldr	x0, [x0]
  402cc8:	cmp	x0, #0x0
  402ccc:	b.eq	402cdc <strv_freep+0x28>  // b.none
  402cd0:	ldr	x0, [sp, #24]
  402cd4:	ldr	x0, [x0]
  402cd8:	bl	402530 <strv_free@plt>
  402cdc:	nop
  402ce0:	ldp	x29, x30, [sp], #32
  402ce4:	ret

0000000000402ce8 <strv_join>:
  402ce8:	stp	x29, x30, [sp, #-32]!
  402cec:	mov	x29, sp
  402cf0:	str	x0, [sp, #24]
  402cf4:	str	x1, [sp, #16]
  402cf8:	mov	x2, #0x0                   	// #0
  402cfc:	ldr	x1, [sp, #16]
  402d00:	ldr	x0, [sp, #24]
  402d04:	bl	402670 <strv_join_prefix@plt>
  402d08:	ldp	x29, x30, [sp], #32
  402d0c:	ret

0000000000402d10 <locale_update_system_manager>:
  402d10:	stp	x29, x30, [sp, #-192]!
  402d14:	mov	x29, sp
  402d18:	stp	x19, x20, [sp, #16]
  402d1c:	str	x0, [sp, #40]
  402d20:	str	x1, [sp, #32]
  402d24:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  402d28:	add	x0, x0, #0xaa8
  402d2c:	ldr	x1, [x0]
  402d30:	str	x1, [sp, #184]
  402d34:	mov	x1, #0x0                   	// #0
  402d38:	str	xzr, [sp, #104]
  402d3c:	str	xzr, [sp, #112]
  402d40:	str	xzr, [sp, #120]
  402d44:	str	xzr, [sp, #160]
  402d48:	str	xzr, [sp, #168]
  402d4c:	str	wzr, [sp, #176]
  402d50:	ldr	x0, [sp, #32]
  402d54:	cmp	x0, #0x0
  402d58:	cset	w0, eq  // eq = none
  402d5c:	and	w0, w0, #0xff
  402d60:	and	x0, x0, #0xff
  402d64:	cmp	x0, #0x0
  402d68:	b.eq	402d94 <locale_update_system_manager+0x84>  // b.none
  402d6c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402d70:	add	x1, x0, #0xd0b
  402d74:	adrp	x0, 409000 <_fini+0x328>
  402d78:	add	x4, x0, #0x908
  402d7c:	mov	w3, #0x29                  	// #41
  402d80:	mov	x2, x1
  402d84:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402d88:	add	x1, x0, #0xd20
  402d8c:	mov	w0, #0x0                   	// #0
  402d90:	bl	402430 <log_assert_failed_realm@plt>
  402d94:	mov	x1, #0x8                   	// #8
  402d98:	mov	x0, #0xe                   	// #14
  402d9c:	bl	4026a0 <calloc@plt>
  402da0:	str	x0, [sp, #104]
  402da4:	ldr	x0, [sp, #104]
  402da8:	cmp	x0, #0x0
  402dac:	b.ne	402dd4 <locale_update_system_manager+0xc4>  // b.any
  402db0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402db4:	add	x1, x0, #0xd0b
  402db8:	adrp	x0, 409000 <_fini+0x328>
  402dbc:	add	x3, x0, #0x928
  402dc0:	mov	w2, #0x2d                  	// #45
  402dc4:	mov	w0, #0x0                   	// #0
  402dc8:	bl	4027b0 <log_oom_internal@plt>
  402dcc:	mov	w19, w0
  402dd0:	b	403280 <locale_update_system_manager+0x570>
  402dd4:	mov	x1, #0x8                   	// #8
  402dd8:	mov	x0, #0xe                   	// #14
  402ddc:	bl	4026a0 <calloc@plt>
  402de0:	str	x0, [sp, #112]
  402de4:	ldr	x0, [sp, #112]
  402de8:	cmp	x0, #0x0
  402dec:	b.ne	402e14 <locale_update_system_manager+0x104>  // b.any
  402df0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402df4:	add	x1, x0, #0xd0b
  402df8:	adrp	x0, 409000 <_fini+0x328>
  402dfc:	add	x3, x0, #0x928
  402e00:	mov	w2, #0x31                  	// #49
  402e04:	mov	w0, #0x0                   	// #0
  402e08:	bl	4027b0 <log_oom_internal@plt>
  402e0c:	mov	w19, w0
  402e10:	b	403280 <locale_update_system_manager+0x570>
  402e14:	str	wzr, [sp, #48]
  402e18:	str	xzr, [sp, #128]
  402e1c:	str	xzr, [sp, #136]
  402e20:	b	402f40 <locale_update_system_manager+0x230>
  402e24:	ldr	w0, [sp, #48]
  402e28:	bl	402400 <locale_variable_to_string@plt>
  402e2c:	str	x0, [sp, #144]
  402e30:	ldr	x0, [sp, #144]
  402e34:	cmp	x0, #0x0
  402e38:	cset	w0, eq  // eq = none
  402e3c:	and	w0, w0, #0xff
  402e40:	and	x0, x0, #0xff
  402e44:	cmp	x0, #0x0
  402e48:	b.eq	402e74 <locale_update_system_manager+0x164>  // b.none
  402e4c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402e50:	add	x1, x0, #0xd0b
  402e54:	adrp	x0, 409000 <_fini+0x328>
  402e58:	add	x4, x0, #0x908
  402e5c:	mov	w3, #0x37                  	// #55
  402e60:	mov	x2, x1
  402e64:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402e68:	add	x1, x0, #0xd28
  402e6c:	mov	w0, #0x0                   	// #0
  402e70:	bl	402430 <log_assert_failed_realm@plt>
  402e74:	ldr	x0, [sp, #40]
  402e78:	ldrsw	x1, [sp, #48]
  402e7c:	add	x1, x1, #0x2
  402e80:	ldr	x0, [x0, x1, lsl #3]
  402e84:	bl	402b48 <isempty>
  402e88:	and	w0, w0, #0xff
  402e8c:	cmp	w0, #0x0
  402e90:	b.eq	402eb8 <locale_update_system_manager+0x1a8>  // b.none
  402e94:	ldr	x1, [sp, #104]
  402e98:	ldr	x0, [sp, #128]
  402e9c:	add	x2, x0, #0x1
  402ea0:	str	x2, [sp, #128]
  402ea4:	lsl	x0, x0, #3
  402ea8:	add	x0, x1, x0
  402eac:	ldr	x1, [sp, #144]
  402eb0:	str	x1, [x0]
  402eb4:	b	402f34 <locale_update_system_manager+0x224>
  402eb8:	ldr	x0, [sp, #40]
  402ebc:	ldrsw	x1, [sp, #48]
  402ec0:	add	x1, x1, #0x2
  402ec4:	ldr	x0, [x0, x1, lsl #3]
  402ec8:	mov	x3, #0x0                   	// #0
  402ecc:	mov	x2, x0
  402ed0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402ed4:	add	x1, x0, #0xd30
  402ed8:	ldr	x0, [sp, #144]
  402edc:	bl	4023f0 <strjoin_real@plt>
  402ee0:	str	x0, [sp, #152]
  402ee4:	ldr	x0, [sp, #152]
  402ee8:	cmp	x0, #0x0
  402eec:	b.ne	402f14 <locale_update_system_manager+0x204>  // b.any
  402ef0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402ef4:	add	x1, x0, #0xd0b
  402ef8:	adrp	x0, 409000 <_fini+0x328>
  402efc:	add	x3, x0, #0x928
  402f00:	mov	w2, #0x40                  	// #64
  402f04:	mov	w0, #0x0                   	// #0
  402f08:	bl	4027b0 <log_oom_internal@plt>
  402f0c:	mov	w19, w0
  402f10:	b	403280 <locale_update_system_manager+0x570>
  402f14:	ldr	x1, [sp, #112]
  402f18:	ldr	x0, [sp, #136]
  402f1c:	add	x2, x0, #0x1
  402f20:	str	x2, [sp, #136]
  402f24:	lsl	x0, x0, #3
  402f28:	add	x0, x1, x0
  402f2c:	ldr	x1, [sp, #152]
  402f30:	str	x1, [x0]
  402f34:	ldr	w0, [sp, #48]
  402f38:	add	w0, w0, #0x1
  402f3c:	str	w0, [sp, #48]
  402f40:	ldr	w0, [sp, #48]
  402f44:	cmp	w0, #0xd
  402f48:	b.le	402e24 <locale_update_system_manager+0x114>
  402f4c:	ldr	x1, [sp, #128]
  402f50:	ldr	x0, [sp, #136]
  402f54:	add	x0, x1, x0
  402f58:	cmp	x0, #0xe
  402f5c:	cset	w0, ne  // ne = any
  402f60:	and	w0, w0, #0xff
  402f64:	and	x0, x0, #0xff
  402f68:	cmp	x0, #0x0
  402f6c:	b.eq	402f98 <locale_update_system_manager+0x288>  // b.none
  402f70:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402f74:	add	x1, x0, #0xd0b
  402f78:	adrp	x0, 409000 <_fini+0x328>
  402f7c:	add	x4, x0, #0x908
  402f80:	mov	w3, #0x46                  	// #70
  402f84:	mov	x2, x1
  402f88:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402f8c:	add	x1, x0, #0xd38
  402f90:	mov	w0, #0x0                   	// #0
  402f94:	bl	402430 <log_assert_failed_realm@plt>
  402f98:	add	x1, sp, #0x78
  402f9c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402fa0:	add	x5, x0, #0xd60
  402fa4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402fa8:	add	x4, x0, #0xd78
  402fac:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402fb0:	add	x3, x0, #0xda0
  402fb4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  402fb8:	add	x2, x0, #0xdc0
  402fbc:	ldr	x0, [sp, #32]
  402fc0:	bl	402230 <sd_bus_message_new_method_call@plt>
  402fc4:	str	w0, [sp, #52]
  402fc8:	ldr	w0, [sp, #52]
  402fcc:	cmp	w0, #0x0
  402fd0:	b.ge	403060 <locale_update_system_manager+0x350>  // b.tcont
  402fd4:	mov	w0, #0x3                   	// #3
  402fd8:	str	w0, [sp, #92]
  402fdc:	ldr	w0, [sp, #52]
  402fe0:	str	w0, [sp, #96]
  402fe4:	str	wzr, [sp, #100]
  402fe8:	ldr	w0, [sp, #100]
  402fec:	bl	4027d0 <log_get_max_level_realm@plt>
  402ff0:	mov	w1, w0
  402ff4:	ldr	w0, [sp, #92]
  402ff8:	and	w0, w0, #0x7
  402ffc:	cmp	w1, w0
  403000:	b.lt	403048 <locale_update_system_manager+0x338>  // b.tstop
  403004:	ldr	w0, [sp, #100]
  403008:	lsl	w1, w0, #10
  40300c:	ldr	w0, [sp, #92]
  403010:	orr	w6, w1, w0
  403014:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403018:	add	x1, x0, #0xd0b
  40301c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403020:	add	x5, x0, #0xde0
  403024:	adrp	x0, 409000 <_fini+0x328>
  403028:	add	x4, x0, #0x928
  40302c:	mov	w3, #0x4d                  	// #77
  403030:	mov	x2, x1
  403034:	ldr	w1, [sp, #96]
  403038:	mov	w0, w6
  40303c:	bl	402640 <log_internal_realm@plt>
  403040:	mov	w19, w0
  403044:	b	403280 <locale_update_system_manager+0x570>
  403048:	ldr	w0, [sp, #96]
  40304c:	cmp	w0, #0x0
  403050:	cneg	w0, w0, lt  // lt = tstop
  403054:	and	w0, w0, #0xff
  403058:	neg	w19, w0
  40305c:	b	403280 <locale_update_system_manager+0x570>
  403060:	ldr	x0, [sp, #120]
  403064:	ldr	x1, [sp, #104]
  403068:	bl	4026f0 <sd_bus_message_append_strv@plt>
  40306c:	str	w0, [sp, #52]
  403070:	ldr	w0, [sp, #52]
  403074:	cmp	w0, #0x0
  403078:	b.ge	403108 <locale_update_system_manager+0x3f8>  // b.tcont
  40307c:	mov	w0, #0x3                   	// #3
  403080:	str	w0, [sp, #80]
  403084:	ldr	w0, [sp, #52]
  403088:	str	w0, [sp, #84]
  40308c:	str	wzr, [sp, #88]
  403090:	ldr	w0, [sp, #88]
  403094:	bl	4027d0 <log_get_max_level_realm@plt>
  403098:	mov	w1, w0
  40309c:	ldr	w0, [sp, #80]
  4030a0:	and	w0, w0, #0x7
  4030a4:	cmp	w1, w0
  4030a8:	b.lt	4030f0 <locale_update_system_manager+0x3e0>  // b.tstop
  4030ac:	ldr	w0, [sp, #88]
  4030b0:	lsl	w1, w0, #10
  4030b4:	ldr	w0, [sp, #80]
  4030b8:	orr	w6, w1, w0
  4030bc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4030c0:	add	x1, x0, #0xd0b
  4030c4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4030c8:	add	x5, x0, #0xde0
  4030cc:	adrp	x0, 409000 <_fini+0x328>
  4030d0:	add	x4, x0, #0x928
  4030d4:	mov	w3, #0x51                  	// #81
  4030d8:	mov	x2, x1
  4030dc:	ldr	w1, [sp, #84]
  4030e0:	mov	w0, w6
  4030e4:	bl	402640 <log_internal_realm@plt>
  4030e8:	mov	w19, w0
  4030ec:	b	403280 <locale_update_system_manager+0x570>
  4030f0:	ldr	w0, [sp, #84]
  4030f4:	cmp	w0, #0x0
  4030f8:	cneg	w0, w0, lt  // lt = tstop
  4030fc:	and	w0, w0, #0xff
  403100:	neg	w19, w0
  403104:	b	403280 <locale_update_system_manager+0x570>
  403108:	ldr	x0, [sp, #120]
  40310c:	ldr	x1, [sp, #112]
  403110:	bl	4026f0 <sd_bus_message_append_strv@plt>
  403114:	str	w0, [sp, #52]
  403118:	ldr	w0, [sp, #52]
  40311c:	cmp	w0, #0x0
  403120:	b.ge	4031b0 <locale_update_system_manager+0x4a0>  // b.tcont
  403124:	mov	w0, #0x3                   	// #3
  403128:	str	w0, [sp, #68]
  40312c:	ldr	w0, [sp, #52]
  403130:	str	w0, [sp, #72]
  403134:	str	wzr, [sp, #76]
  403138:	ldr	w0, [sp, #76]
  40313c:	bl	4027d0 <log_get_max_level_realm@plt>
  403140:	mov	w1, w0
  403144:	ldr	w0, [sp, #68]
  403148:	and	w0, w0, #0x7
  40314c:	cmp	w1, w0
  403150:	b.lt	403198 <locale_update_system_manager+0x488>  // b.tstop
  403154:	ldr	w0, [sp, #76]
  403158:	lsl	w1, w0, #10
  40315c:	ldr	w0, [sp, #68]
  403160:	orr	w6, w1, w0
  403164:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403168:	add	x1, x0, #0xd0b
  40316c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403170:	add	x5, x0, #0xde0
  403174:	adrp	x0, 409000 <_fini+0x328>
  403178:	add	x4, x0, #0x928
  40317c:	mov	w3, #0x55                  	// #85
  403180:	mov	x2, x1
  403184:	ldr	w1, [sp, #72]
  403188:	mov	w0, w6
  40318c:	bl	402640 <log_internal_realm@plt>
  403190:	mov	w19, w0
  403194:	b	403280 <locale_update_system_manager+0x570>
  403198:	ldr	w0, [sp, #72]
  40319c:	cmp	w0, #0x0
  4031a0:	cneg	w0, w0, lt  // lt = tstop
  4031a4:	and	w0, w0, #0xff
  4031a8:	neg	w19, w0
  4031ac:	b	403280 <locale_update_system_manager+0x570>
  4031b0:	ldr	x0, [sp, #120]
  4031b4:	add	x1, sp, #0xa0
  4031b8:	mov	x4, #0x0                   	// #0
  4031bc:	mov	x3, x1
  4031c0:	mov	x2, #0x0                   	// #0
  4031c4:	mov	x1, x0
  4031c8:	ldr	x0, [sp, #32]
  4031cc:	bl	402610 <sd_bus_call@plt>
  4031d0:	str	w0, [sp, #52]
  4031d4:	ldr	w0, [sp, #52]
  4031d8:	cmp	w0, #0x0
  4031dc:	b.ge	40327c <locale_update_system_manager+0x56c>  // b.tcont
  4031e0:	mov	w0, #0x3                   	// #3
  4031e4:	str	w0, [sp, #56]
  4031e8:	ldr	w0, [sp, #52]
  4031ec:	str	w0, [sp, #60]
  4031f0:	str	wzr, [sp, #64]
  4031f4:	ldr	w0, [sp, #64]
  4031f8:	bl	4027d0 <log_get_max_level_realm@plt>
  4031fc:	mov	w1, w0
  403200:	ldr	w0, [sp, #56]
  403204:	and	w0, w0, #0x7
  403208:	cmp	w1, w0
  40320c:	b.lt	403264 <locale_update_system_manager+0x554>  // b.tstop
  403210:	ldr	w0, [sp, #64]
  403214:	lsl	w1, w0, #10
  403218:	ldr	w0, [sp, #56]
  40321c:	orr	w19, w1, w0
  403220:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403224:	add	x20, x0, #0xd0b
  403228:	add	x0, sp, #0xa0
  40322c:	ldr	w1, [sp, #52]
  403230:	bl	402220 <bus_error_message@plt>
  403234:	mov	x6, x0
  403238:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40323c:	add	x5, x0, #0xe08
  403240:	adrp	x0, 409000 <_fini+0x328>
  403244:	add	x4, x0, #0x928
  403248:	mov	w3, #0x59                  	// #89
  40324c:	mov	x2, x20
  403250:	ldr	w1, [sp, #60]
  403254:	mov	w0, w19
  403258:	bl	402640 <log_internal_realm@plt>
  40325c:	mov	w19, w0
  403260:	b	403280 <locale_update_system_manager+0x570>
  403264:	ldr	w0, [sp, #60]
  403268:	cmp	w0, #0x0
  40326c:	cneg	w0, w0, lt  // lt = tstop
  403270:	and	w0, w0, #0xff
  403274:	neg	w19, w0
  403278:	b	403280 <locale_update_system_manager+0x570>
  40327c:	mov	w19, #0x0                   	// #0
  403280:	add	x0, sp, #0x78
  403284:	bl	402a10 <sd_bus_message_unrefp>
  403288:	add	x0, sp, #0x70
  40328c:	bl	402cb4 <strv_freep>
  403290:	add	x0, sp, #0x68
  403294:	bl	402a74 <freep>
  403298:	mov	w1, w19
  40329c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4032a0:	add	x0, x0, #0xaa8
  4032a4:	ldr	x2, [sp, #184]
  4032a8:	ldr	x0, [x0]
  4032ac:	eor	x0, x2, x0
  4032b0:	cmp	x0, #0x0
  4032b4:	b.eq	4032bc <locale_update_system_manager+0x5ac>  // b.none
  4032b8:	bl	402580 <__stack_chk_fail@plt>
  4032bc:	mov	w0, w1
  4032c0:	ldp	x19, x20, [sp, #16]
  4032c4:	ldp	x29, x30, [sp], #192
  4032c8:	ret

00000000004032cc <vconsole_reload>:
  4032cc:	sub	sp, sp, #0x70
  4032d0:	stp	x29, x30, [sp, #16]
  4032d4:	add	x29, sp, #0x10
  4032d8:	stp	x19, x20, [sp, #32]
  4032dc:	str	x0, [sp, #56]
  4032e0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4032e4:	add	x0, x0, #0xaa8
  4032e8:	ldr	x1, [x0]
  4032ec:	str	x1, [sp, #104]
  4032f0:	mov	x1, #0x0                   	// #0
  4032f4:	str	xzr, [sp, #80]
  4032f8:	str	xzr, [sp, #88]
  4032fc:	str	wzr, [sp, #96]
  403300:	ldr	x0, [sp, #56]
  403304:	cmp	x0, #0x0
  403308:	cset	w0, eq  // eq = none
  40330c:	and	w0, w0, #0xff
  403310:	and	x0, x0, #0xff
  403314:	cmp	x0, #0x0
  403318:	b.eq	403344 <vconsole_reload+0x78>  // b.none
  40331c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403320:	add	x1, x0, #0xd0b
  403324:	adrp	x0, 409000 <_fini+0x328>
  403328:	add	x4, x0, #0x948
  40332c:	mov	w3, #0x62                  	// #98
  403330:	mov	x2, x1
  403334:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403338:	add	x1, x0, #0xd20
  40333c:	mov	w0, #0x0                   	// #0
  403340:	bl	402430 <log_assert_failed_realm@plt>
  403344:	add	x1, sp, #0x50
  403348:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40334c:	add	x0, x0, #0xe50
  403350:	str	x0, [sp, #8]
  403354:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403358:	add	x0, x0, #0xe58
  40335c:	str	x0, [sp]
  403360:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403364:	add	x7, x0, #0xe38
  403368:	mov	x6, #0x0                   	// #0
  40336c:	mov	x5, x1
  403370:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403374:	add	x4, x0, #0xe40
  403378:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40337c:	add	x3, x0, #0xd78
  403380:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403384:	add	x2, x0, #0xda0
  403388:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40338c:	add	x1, x0, #0xdc0
  403390:	ldr	x0, [sp, #56]
  403394:	bl	402770 <sd_bus_call_method@plt>
  403398:	str	w0, [sp, #64]
  40339c:	ldr	w0, [sp, #64]
  4033a0:	cmp	w0, #0x0
  4033a4:	b.ge	403444 <vconsole_reload+0x178>  // b.tcont
  4033a8:	mov	w0, #0x3                   	// #3
  4033ac:	str	w0, [sp, #68]
  4033b0:	ldr	w0, [sp, #64]
  4033b4:	str	w0, [sp, #72]
  4033b8:	str	wzr, [sp, #76]
  4033bc:	ldr	w0, [sp, #76]
  4033c0:	bl	4027d0 <log_get_max_level_realm@plt>
  4033c4:	mov	w1, w0
  4033c8:	ldr	w0, [sp, #68]
  4033cc:	and	w0, w0, #0x7
  4033d0:	cmp	w1, w0
  4033d4:	b.lt	40342c <vconsole_reload+0x160>  // b.tstop
  4033d8:	ldr	w0, [sp, #76]
  4033dc:	lsl	w1, w0, #10
  4033e0:	ldr	w0, [sp, #68]
  4033e4:	orr	w19, w1, w0
  4033e8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4033ec:	add	x20, x0, #0xd0b
  4033f0:	add	x0, sp, #0x50
  4033f4:	ldr	w1, [sp, #64]
  4033f8:	bl	402220 <bus_error_message@plt>
  4033fc:	mov	x6, x0
  403400:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403404:	add	x5, x0, #0xe78
  403408:	adrp	x0, 409000 <_fini+0x328>
  40340c:	add	x4, x0, #0x958
  403410:	mov	w3, #0x6e                  	// #110
  403414:	mov	x2, x20
  403418:	ldr	w1, [sp, #72]
  40341c:	mov	w0, w19
  403420:	bl	402640 <log_internal_realm@plt>
  403424:	mov	w19, w0
  403428:	b	403448 <vconsole_reload+0x17c>
  40342c:	ldr	w0, [sp, #72]
  403430:	cmp	w0, #0x0
  403434:	cneg	w0, w0, lt  // lt = tstop
  403438:	and	w0, w0, #0xff
  40343c:	neg	w19, w0
  403440:	b	403448 <vconsole_reload+0x17c>
  403444:	mov	w19, #0x0                   	// #0
  403448:	add	x0, sp, #0x50
  40344c:	bl	402600 <sd_bus_error_free@plt>
  403450:	mov	w1, w19
  403454:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  403458:	add	x0, x0, #0xaa8
  40345c:	ldr	x2, [sp, #104]
  403460:	ldr	x0, [x0]
  403464:	eor	x0, x2, x0
  403468:	cmp	x0, #0x0
  40346c:	b.eq	403474 <vconsole_reload+0x1a8>  // b.none
  403470:	bl	402580 <__stack_chk_fail@plt>
  403474:	mov	w0, w1
  403478:	ldp	x19, x20, [sp, #32]
  40347c:	ldp	x29, x30, [sp, #16]
  403480:	add	sp, sp, #0x70
  403484:	ret

0000000000403488 <vconsole_convert_to_x11_and_emit>:
  403488:	stp	x29, x30, [sp, #-48]!
  40348c:	mov	x29, sp
  403490:	str	x0, [sp, #24]
  403494:	str	x1, [sp, #16]
  403498:	ldr	x0, [sp, #16]
  40349c:	cmp	x0, #0x0
  4034a0:	cset	w0, eq  // eq = none
  4034a4:	and	w0, w0, #0xff
  4034a8:	and	x0, x0, #0xff
  4034ac:	cmp	x0, #0x0
  4034b0:	b.eq	4034dc <vconsole_convert_to_x11_and_emit+0x54>  // b.none
  4034b4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4034b8:	add	x1, x0, #0xd0b
  4034bc:	adrp	x0, 409000 <_fini+0x328>
  4034c0:	add	x4, x0, #0x968
  4034c4:	mov	w3, #0x76                  	// #118
  4034c8:	mov	x2, x1
  4034cc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4034d0:	add	x1, x0, #0xe98
  4034d4:	mov	w0, #0x0                   	// #0
  4034d8:	bl	402430 <log_assert_failed_realm@plt>
  4034dc:	ldr	x1, [sp, #16]
  4034e0:	ldr	x0, [sp, #24]
  4034e4:	bl	4067cc <x11_read_data>
  4034e8:	str	w0, [sp, #32]
  4034ec:	ldr	w0, [sp, #32]
  4034f0:	cmp	w0, #0x0
  4034f4:	b.ge	403500 <vconsole_convert_to_x11_and_emit+0x78>  // b.tcont
  4034f8:	ldr	w0, [sp, #32]
  4034fc:	b	40360c <vconsole_convert_to_x11_and_emit+0x184>
  403500:	ldr	x0, [sp, #24]
  403504:	bl	407868 <vconsole_convert_to_x11>
  403508:	str	w0, [sp, #32]
  40350c:	ldr	w0, [sp, #32]
  403510:	cmp	w0, #0x0
  403514:	b.gt	403520 <vconsole_convert_to_x11_and_emit+0x98>
  403518:	ldr	w0, [sp, #32]
  40351c:	b	40360c <vconsole_convert_to_x11_and_emit+0x184>
  403520:	ldr	x0, [sp, #24]
  403524:	bl	407210 <x11_write_data>
  403528:	str	w0, [sp, #32]
  40352c:	ldr	w0, [sp, #32]
  403530:	cmp	w0, #0x0
  403534:	b.ge	4035c0 <vconsole_convert_to_x11_and_emit+0x138>  // b.tcont
  403538:	mov	w0, #0x3                   	// #3
  40353c:	str	w0, [sp, #36]
  403540:	ldr	w0, [sp, #32]
  403544:	str	w0, [sp, #40]
  403548:	str	wzr, [sp, #44]
  40354c:	ldr	w0, [sp, #44]
  403550:	bl	4027d0 <log_get_max_level_realm@plt>
  403554:	mov	w1, w0
  403558:	ldr	w0, [sp, #36]
  40355c:	and	w0, w0, #0x7
  403560:	cmp	w1, w0
  403564:	b.lt	4035a8 <vconsole_convert_to_x11_and_emit+0x120>  // b.tstop
  403568:	ldr	w0, [sp, #44]
  40356c:	lsl	w1, w0, #10
  403570:	ldr	w0, [sp, #36]
  403574:	orr	w6, w1, w0
  403578:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40357c:	add	x1, x0, #0xd0b
  403580:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403584:	add	x5, x0, #0xea0
  403588:	adrp	x0, 409000 <_fini+0x328>
  40358c:	add	x4, x0, #0x990
  403590:	mov	w3, #0x83                  	// #131
  403594:	mov	x2, x1
  403598:	ldr	w1, [sp, #40]
  40359c:	mov	w0, w6
  4035a0:	bl	402640 <log_internal_realm@plt>
  4035a4:	b	40360c <vconsole_convert_to_x11_and_emit+0x184>
  4035a8:	ldr	w0, [sp, #40]
  4035ac:	cmp	w0, #0x0
  4035b0:	cneg	w0, w0, lt  // lt = tstop
  4035b4:	and	w0, w0, #0xff
  4035b8:	neg	w0, w0
  4035bc:	b	40360c <vconsole_convert_to_x11_and_emit+0x184>
  4035c0:	ldr	x0, [sp, #16]
  4035c4:	bl	402410 <sd_bus_message_get_bus@plt>
  4035c8:	mov	x8, x0
  4035cc:	mov	x7, #0x0                   	// #0
  4035d0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4035d4:	add	x6, x0, #0xec8
  4035d8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4035dc:	add	x5, x0, #0xed8
  4035e0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4035e4:	add	x4, x0, #0xee8
  4035e8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4035ec:	add	x3, x0, #0xef8
  4035f0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4035f4:	add	x2, x0, #0xf08
  4035f8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4035fc:	add	x1, x0, #0xf20
  403600:	mov	x0, x8
  403604:	bl	402620 <sd_bus_emit_properties_changed@plt>
  403608:	mov	w0, #0x1                   	// #1
  40360c:	ldp	x29, x30, [sp], #48
  403610:	ret

0000000000403614 <x11_convert_to_vconsole_and_emit>:
  403614:	stp	x29, x30, [sp, #-48]!
  403618:	mov	x29, sp
  40361c:	str	x0, [sp, #24]
  403620:	str	x1, [sp, #16]
  403624:	ldr	x0, [sp, #16]
  403628:	cmp	x0, #0x0
  40362c:	cset	w0, eq  // eq = none
  403630:	and	w0, w0, #0xff
  403634:	and	x0, x0, #0xff
  403638:	cmp	x0, #0x0
  40363c:	b.eq	403668 <x11_convert_to_vconsole_and_emit+0x54>  // b.none
  403640:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403644:	add	x1, x0, #0xd0b
  403648:	adrp	x0, 409000 <_fini+0x328>
  40364c:	add	x4, x0, #0x9b8
  403650:	mov	w3, #0x90                  	// #144
  403654:	mov	x2, x1
  403658:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40365c:	add	x1, x0, #0xe98
  403660:	mov	w0, #0x0                   	// #0
  403664:	bl	402430 <log_assert_failed_realm@plt>
  403668:	ldr	x1, [sp, #16]
  40366c:	ldr	x0, [sp, #24]
  403670:	bl	406630 <vconsole_read_data>
  403674:	str	w0, [sp, #32]
  403678:	ldr	w0, [sp, #32]
  40367c:	cmp	w0, #0x0
  403680:	b.ge	40368c <x11_convert_to_vconsole_and_emit+0x78>  // b.tcont
  403684:	ldr	w0, [sp, #32]
  403688:	b	403780 <x11_convert_to_vconsole_and_emit+0x16c>
  40368c:	ldr	x0, [sp, #24]
  403690:	bl	4088bc <x11_convert_to_vconsole>
  403694:	str	w0, [sp, #32]
  403698:	ldr	w0, [sp, #32]
  40369c:	cmp	w0, #0x0
  4036a0:	b.gt	4036ac <x11_convert_to_vconsole_and_emit+0x98>
  4036a4:	ldr	w0, [sp, #32]
  4036a8:	b	403780 <x11_convert_to_vconsole_and_emit+0x16c>
  4036ac:	ldr	x0, [sp, #24]
  4036b0:	bl	406f28 <vconsole_write_data>
  4036b4:	str	w0, [sp, #32]
  4036b8:	ldr	w0, [sp, #32]
  4036bc:	cmp	w0, #0x0
  4036c0:	b.ge	40373c <x11_convert_to_vconsole_and_emit+0x128>  // b.tcont
  4036c4:	mov	w0, #0x3                   	// #3
  4036c8:	str	w0, [sp, #36]
  4036cc:	ldr	w0, [sp, #32]
  4036d0:	str	w0, [sp, #40]
  4036d4:	str	wzr, [sp, #44]
  4036d8:	ldr	w0, [sp, #44]
  4036dc:	bl	4027d0 <log_get_max_level_realm@plt>
  4036e0:	mov	w1, w0
  4036e4:	ldr	w0, [sp, #36]
  4036e8:	and	w0, w0, #0x7
  4036ec:	cmp	w1, w0
  4036f0:	b.lt	403734 <x11_convert_to_vconsole_and_emit+0x120>  // b.tstop
  4036f4:	ldr	w0, [sp, #44]
  4036f8:	lsl	w1, w0, #10
  4036fc:	ldr	w0, [sp, #36]
  403700:	orr	w6, w1, w0
  403704:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403708:	add	x1, x0, #0xd0b
  40370c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403710:	add	x5, x0, #0xf40
  403714:	adrp	x0, 409000 <_fini+0x328>
  403718:	add	x4, x0, #0x9e0
  40371c:	mov	w3, #0x9d                  	// #157
  403720:	mov	x2, x1
  403724:	ldr	w1, [sp, #40]
  403728:	mov	w0, w6
  40372c:	bl	402640 <log_internal_realm@plt>
  403730:	b	40373c <x11_convert_to_vconsole_and_emit+0x128>
  403734:	ldr	w0, [sp, #40]
  403738:	cmp	w0, #0x0
  40373c:	ldr	x0, [sp, #16]
  403740:	bl	402410 <sd_bus_message_get_bus@plt>
  403744:	mov	x6, x0
  403748:	mov	x5, #0x0                   	// #0
  40374c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403750:	add	x4, x0, #0xf70
  403754:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403758:	add	x3, x0, #0xf88
  40375c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403760:	add	x2, x0, #0xf08
  403764:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403768:	add	x1, x0, #0xf20
  40376c:	mov	x0, x6
  403770:	bl	402620 <sd_bus_emit_properties_changed@plt>
  403774:	ldr	x0, [sp, #16]
  403778:	bl	402410 <sd_bus_message_get_bus@plt>
  40377c:	bl	4032cc <vconsole_reload>
  403780:	ldp	x29, x30, [sp], #48
  403784:	ret

0000000000403788 <property_get_locale>:
  403788:	stp	x29, x30, [sp, #-160]!
  40378c:	mov	x29, sp
  403790:	str	x19, [sp, #16]
  403794:	str	x0, [sp, #88]
  403798:	str	x1, [sp, #80]
  40379c:	str	x2, [sp, #72]
  4037a0:	str	x3, [sp, #64]
  4037a4:	str	x4, [sp, #56]
  4037a8:	str	x5, [sp, #48]
  4037ac:	str	x6, [sp, #40]
  4037b0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4037b4:	add	x0, x0, #0xaa8
  4037b8:	ldr	x1, [x0]
  4037bc:	str	x1, [sp, #152]
  4037c0:	mov	x1, #0x0                   	// #0
  4037c4:	ldr	x0, [sp, #48]
  4037c8:	str	x0, [sp, #136]
  4037cc:	str	xzr, [sp, #120]
  4037d0:	ldr	x1, [sp, #56]
  4037d4:	ldr	x0, [sp, #136]
  4037d8:	bl	40629c <locale_read_data>
  4037dc:	str	w0, [sp, #116]
  4037e0:	ldr	w0, [sp, #116]
  4037e4:	cmp	w0, #0x0
  4037e8:	b.ge	4037f4 <property_get_locale+0x6c>  // b.tcont
  4037ec:	ldr	w19, [sp, #116]
  4037f0:	b	403928 <property_get_locale+0x1a0>
  4037f4:	mov	x1, #0x8                   	// #8
  4037f8:	mov	x0, #0xf                   	// #15
  4037fc:	bl	4026a0 <calloc@plt>
  403800:	str	x0, [sp, #120]
  403804:	ldr	x0, [sp, #120]
  403808:	cmp	x0, #0x0
  40380c:	b.ne	403818 <property_get_locale+0x90>  // b.any
  403810:	mov	w19, #0xfffffff4            	// #-12
  403814:	b	403928 <property_get_locale+0x1a0>
  403818:	str	wzr, [sp, #108]
  40381c:	str	wzr, [sp, #112]
  403820:	b	403908 <property_get_locale+0x180>
  403824:	ldr	w0, [sp, #108]
  403828:	bl	402400 <locale_variable_to_string@plt>
  40382c:	str	x0, [sp, #144]
  403830:	ldr	x0, [sp, #144]
  403834:	cmp	x0, #0x0
  403838:	cset	w0, eq  // eq = none
  40383c:	and	w0, w0, #0xff
  403840:	and	x0, x0, #0xff
  403844:	cmp	x0, #0x0
  403848:	b.eq	403874 <property_get_locale+0xec>  // b.none
  40384c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403850:	add	x1, x0, #0xd0b
  403854:	adrp	x0, 409000 <_fini+0x328>
  403858:	add	x4, x0, #0xa08
  40385c:	mov	w3, #0xc1                  	// #193
  403860:	mov	x2, x1
  403864:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403868:	add	x1, x0, #0xd28
  40386c:	mov	w0, #0x0                   	// #0
  403870:	bl	402430 <log_assert_failed_realm@plt>
  403874:	ldr	x0, [sp, #136]
  403878:	ldrsw	x1, [sp, #108]
  40387c:	add	x1, x1, #0x2
  403880:	ldr	x0, [x0, x1, lsl #3]
  403884:	bl	402b48 <isempty>
  403888:	and	w0, w0, #0xff
  40388c:	cmp	w0, #0x0
  403890:	b.ne	4038f8 <property_get_locale+0x170>  // b.any
  403894:	ldr	x0, [sp, #136]
  403898:	ldrsw	x1, [sp, #108]
  40389c:	add	x1, x1, #0x2
  4038a0:	ldr	x0, [x0, x1, lsl #3]
  4038a4:	add	x4, sp, #0x80
  4038a8:	mov	x3, x0
  4038ac:	ldr	x2, [sp, #144]
  4038b0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4038b4:	add	x1, x0, #0xf98
  4038b8:	mov	x0, x4
  4038bc:	bl	4026d0 <asprintf@plt>
  4038c0:	cmp	w0, #0x0
  4038c4:	b.ge	4038d0 <property_get_locale+0x148>  // b.tcont
  4038c8:	mov	w19, #0xfffffff4            	// #-12
  4038cc:	b	403928 <property_get_locale+0x1a0>
  4038d0:	ldr	x1, [sp, #120]
  4038d4:	ldr	w0, [sp, #112]
  4038d8:	add	w2, w0, #0x1
  4038dc:	str	w2, [sp, #112]
  4038e0:	sxtw	x0, w0
  4038e4:	lsl	x0, x0, #3
  4038e8:	add	x0, x1, x0
  4038ec:	ldr	x1, [sp, #128]
  4038f0:	str	x1, [x0]
  4038f4:	b	4038fc <property_get_locale+0x174>
  4038f8:	nop
  4038fc:	ldr	w0, [sp, #108]
  403900:	add	w0, w0, #0x1
  403904:	str	w0, [sp, #108]
  403908:	ldr	w0, [sp, #108]
  40390c:	cmp	w0, #0xd
  403910:	b.le	403824 <property_get_locale+0x9c>
  403914:	ldr	x0, [sp, #120]
  403918:	mov	x1, x0
  40391c:	ldr	x0, [sp, #56]
  403920:	bl	4026f0 <sd_bus_message_append_strv@plt>
  403924:	mov	w19, w0
  403928:	add	x0, sp, #0x78
  40392c:	bl	402cb4 <strv_freep>
  403930:	mov	w1, w19
  403934:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  403938:	add	x0, x0, #0xaa8
  40393c:	ldr	x2, [sp, #152]
  403940:	ldr	x0, [x0]
  403944:	eor	x0, x2, x0
  403948:	cmp	x0, #0x0
  40394c:	b.eq	403954 <property_get_locale+0x1cc>  // b.none
  403950:	bl	402580 <__stack_chk_fail@plt>
  403954:	mov	w0, w1
  403958:	ldr	x19, [sp, #16]
  40395c:	ldp	x29, x30, [sp], #160
  403960:	ret

0000000000403964 <property_get_vconsole>:
  403964:	stp	x29, x30, [sp, #-96]!
  403968:	mov	x29, sp
  40396c:	str	x0, [sp, #72]
  403970:	str	x1, [sp, #64]
  403974:	str	x2, [sp, #56]
  403978:	str	x3, [sp, #48]
  40397c:	str	x4, [sp, #40]
  403980:	str	x5, [sp, #32]
  403984:	str	x6, [sp, #24]
  403988:	ldr	x0, [sp, #32]
  40398c:	str	x0, [sp, #88]
  403990:	ldr	x1, [sp, #40]
  403994:	ldr	x0, [sp, #88]
  403998:	bl	406630 <vconsole_read_data>
  40399c:	str	w0, [sp, #84]
  4039a0:	ldr	w0, [sp, #84]
  4039a4:	cmp	w0, #0x0
  4039a8:	b.ge	4039b4 <property_get_vconsole+0x50>  // b.tcont
  4039ac:	ldr	w0, [sp, #84]
  4039b0:	b	403a20 <property_get_vconsole+0xbc>
  4039b4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4039b8:	add	x1, x0, #0xf88
  4039bc:	ldr	x0, [sp, #48]
  4039c0:	bl	402680 <strcmp@plt>
  4039c4:	cmp	w0, #0x0
  4039c8:	b.ne	4039e8 <property_get_vconsole+0x84>  // b.any
  4039cc:	ldr	x0, [sp, #88]
  4039d0:	ldr	x0, [x0, #192]
  4039d4:	mov	x2, x0
  4039d8:	mov	w1, #0x73                  	// #115
  4039dc:	ldr	x0, [sp, #40]
  4039e0:	bl	402590 <sd_bus_message_append_basic@plt>
  4039e4:	b	403a20 <property_get_vconsole+0xbc>
  4039e8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4039ec:	add	x1, x0, #0xf70
  4039f0:	ldr	x0, [sp, #48]
  4039f4:	bl	402680 <strcmp@plt>
  4039f8:	cmp	w0, #0x0
  4039fc:	b.ne	403a1c <property_get_vconsole+0xb8>  // b.any
  403a00:	ldr	x0, [sp, #88]
  403a04:	ldr	x0, [x0, #200]
  403a08:	mov	x2, x0
  403a0c:	mov	w1, #0x73                  	// #115
  403a10:	ldr	x0, [sp, #40]
  403a14:	bl	402590 <sd_bus_message_append_basic@plt>
  403a18:	b	403a20 <property_get_vconsole+0xbc>
  403a1c:	mov	w0, #0xffffffea            	// #-22
  403a20:	ldp	x29, x30, [sp], #96
  403a24:	ret

0000000000403a28 <property_get_xkb>:
  403a28:	stp	x29, x30, [sp, #-96]!
  403a2c:	mov	x29, sp
  403a30:	str	x0, [sp, #72]
  403a34:	str	x1, [sp, #64]
  403a38:	str	x2, [sp, #56]
  403a3c:	str	x3, [sp, #48]
  403a40:	str	x4, [sp, #40]
  403a44:	str	x5, [sp, #32]
  403a48:	str	x6, [sp, #24]
  403a4c:	ldr	x0, [sp, #32]
  403a50:	str	x0, [sp, #88]
  403a54:	ldr	x1, [sp, #40]
  403a58:	ldr	x0, [sp, #88]
  403a5c:	bl	4067cc <x11_read_data>
  403a60:	str	w0, [sp, #84]
  403a64:	ldr	w0, [sp, #84]
  403a68:	cmp	w0, #0x0
  403a6c:	b.ge	403a78 <property_get_xkb+0x50>  // b.tcont
  403a70:	ldr	w0, [sp, #84]
  403a74:	b	403b4c <property_get_xkb+0x124>
  403a78:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403a7c:	add	x1, x0, #0xef8
  403a80:	ldr	x0, [sp, #48]
  403a84:	bl	402680 <strcmp@plt>
  403a88:	cmp	w0, #0x0
  403a8c:	b.ne	403aac <property_get_xkb+0x84>  // b.any
  403a90:	ldr	x0, [sp, #88]
  403a94:	ldr	x0, [x0, #144]
  403a98:	mov	x2, x0
  403a9c:	mov	w1, #0x73                  	// #115
  403aa0:	ldr	x0, [sp, #40]
  403aa4:	bl	402590 <sd_bus_message_append_basic@plt>
  403aa8:	b	403b4c <property_get_xkb+0x124>
  403aac:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403ab0:	add	x1, x0, #0xee8
  403ab4:	ldr	x0, [sp, #48]
  403ab8:	bl	402680 <strcmp@plt>
  403abc:	cmp	w0, #0x0
  403ac0:	b.ne	403ae0 <property_get_xkb+0xb8>  // b.any
  403ac4:	ldr	x0, [sp, #88]
  403ac8:	ldr	x0, [x0, #152]
  403acc:	mov	x2, x0
  403ad0:	mov	w1, #0x73                  	// #115
  403ad4:	ldr	x0, [sp, #40]
  403ad8:	bl	402590 <sd_bus_message_append_basic@plt>
  403adc:	b	403b4c <property_get_xkb+0x124>
  403ae0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403ae4:	add	x1, x0, #0xed8
  403ae8:	ldr	x0, [sp, #48]
  403aec:	bl	402680 <strcmp@plt>
  403af0:	cmp	w0, #0x0
  403af4:	b.ne	403b14 <property_get_xkb+0xec>  // b.any
  403af8:	ldr	x0, [sp, #88]
  403afc:	ldr	x0, [x0, #160]
  403b00:	mov	x2, x0
  403b04:	mov	w1, #0x73                  	// #115
  403b08:	ldr	x0, [sp, #40]
  403b0c:	bl	402590 <sd_bus_message_append_basic@plt>
  403b10:	b	403b4c <property_get_xkb+0x124>
  403b14:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403b18:	add	x1, x0, #0xec8
  403b1c:	ldr	x0, [sp, #48]
  403b20:	bl	402680 <strcmp@plt>
  403b24:	cmp	w0, #0x0
  403b28:	b.ne	403b48 <property_get_xkb+0x120>  // b.any
  403b2c:	ldr	x0, [sp, #88]
  403b30:	ldr	x0, [x0, #168]
  403b34:	mov	x2, x0
  403b38:	mov	w1, #0x73                  	// #115
  403b3c:	ldr	x0, [sp, #40]
  403b40:	bl	402590 <sd_bus_message_append_basic@plt>
  403b44:	b	403b4c <property_get_xkb+0x124>
  403b48:	mov	w0, #0xffffffea            	// #-22
  403b4c:	ldp	x29, x30, [sp], #96
  403b50:	ret

0000000000403b54 <method_set_locale>:
  403b54:	stp	x29, x30, [sp, #-336]!
  403b58:	mov	x29, sp
  403b5c:	stp	x19, x20, [sp, #16]
  403b60:	str	x0, [sp, #56]
  403b64:	str	x1, [sp, #48]
  403b68:	str	x2, [sp, #40]
  403b6c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  403b70:	add	x0, x0, #0xaa8
  403b74:	ldr	x1, [x0]
  403b78:	str	x1, [sp, #328]
  403b7c:	mov	x1, #0x0                   	// #0
  403b80:	stp	xzr, xzr, [sp, #216]
  403b84:	stp	xzr, xzr, [sp, #232]
  403b88:	stp	xzr, xzr, [sp, #248]
  403b8c:	add	x0, sp, #0x200
  403b90:	stp	xzr, xzr, [x0, #-248]
  403b94:	add	x0, sp, #0x200
  403b98:	stp	xzr, xzr, [x0, #-232]
  403b9c:	add	x0, sp, #0x200
  403ba0:	stp	xzr, xzr, [x0, #-216]
  403ba4:	add	x0, sp, #0x200
  403ba8:	stp	xzr, xzr, [x0, #-200]
  403bac:	str	xzr, [sp, #160]
  403bb0:	str	xzr, [sp, #168]
  403bb4:	ldr	x0, [sp, #48]
  403bb8:	str	x0, [sp, #192]
  403bbc:	strb	wzr, [sp, #74]
  403bc0:	ldr	x0, [sp, #56]
  403bc4:	cmp	x0, #0x0
  403bc8:	cset	w0, eq  // eq = none
  403bcc:	and	w0, w0, #0xff
  403bd0:	and	x0, x0, #0xff
  403bd4:	cmp	x0, #0x0
  403bd8:	b.eq	403c04 <method_set_locale+0xb0>  // b.none
  403bdc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403be0:	add	x1, x0, #0xd0b
  403be4:	adrp	x0, 409000 <_fini+0x328>
  403be8:	add	x4, x0, #0xa20
  403bec:	mov	w3, #0x10b                 	// #267
  403bf0:	mov	x2, x1
  403bf4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403bf8:	add	x1, x0, #0xe98
  403bfc:	mov	w0, #0x0                   	// #0
  403c00:	bl	402430 <log_assert_failed_realm@plt>
  403c04:	ldr	x0, [sp, #192]
  403c08:	cmp	x0, #0x0
  403c0c:	cset	w0, eq  // eq = none
  403c10:	and	w0, w0, #0xff
  403c14:	and	x0, x0, #0xff
  403c18:	cmp	x0, #0x0
  403c1c:	b.eq	403c48 <method_set_locale+0xf4>  // b.none
  403c20:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403c24:	add	x1, x0, #0xd0b
  403c28:	adrp	x0, 409000 <_fini+0x328>
  403c2c:	add	x4, x0, #0xa20
  403c30:	mov	w3, #0x10c                 	// #268
  403c34:	mov	x2, x1
  403c38:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403c3c:	add	x1, x0, #0xfa0
  403c40:	mov	w0, #0x0                   	// #0
  403c44:	bl	402430 <log_assert_failed_realm@plt>
  403c48:	add	x0, sp, #0xa8
  403c4c:	mov	x1, x0
  403c50:	ldr	x0, [sp, #56]
  403c54:	bl	402500 <bus_message_read_strv_extend@plt>
  403c58:	str	w0, [sp, #84]
  403c5c:	ldr	w0, [sp, #84]
  403c60:	cmp	w0, #0x0
  403c64:	b.ge	403c70 <method_set_locale+0x11c>  // b.tcont
  403c68:	ldr	w19, [sp, #84]
  403c6c:	b	40452c <method_set_locale+0x9d8>
  403c70:	add	x0, sp, #0x4c
  403c74:	mov	x2, x0
  403c78:	mov	w1, #0x62                  	// #98
  403c7c:	ldr	x0, [sp, #56]
  403c80:	bl	402350 <sd_bus_message_read_basic@plt>
  403c84:	str	w0, [sp, #84]
  403c88:	ldr	w0, [sp, #84]
  403c8c:	cmp	w0, #0x0
  403c90:	b.ge	403c9c <method_set_locale+0x148>  // b.tcont
  403c94:	ldr	w19, [sp, #84]
  403c98:	b	40452c <method_set_locale+0x9d8>
  403c9c:	ldr	x0, [sp, #168]
  403ca0:	bl	4025e0 <strv_length@plt>
  403ca4:	cmp	x0, #0x1
  403ca8:	b.ne	403d34 <method_set_locale+0x1e0>  // b.any
  403cac:	ldr	x0, [sp, #168]
  403cb0:	ldr	x0, [x0]
  403cb4:	mov	w1, #0x3d                  	// #61
  403cb8:	bl	4026c0 <strchr@plt>
  403cbc:	cmp	x0, #0x0
  403cc0:	b.ne	403d34 <method_set_locale+0x1e0>  // b.any
  403cc4:	ldr	x0, [sp, #168]
  403cc8:	ldr	x0, [x0]
  403ccc:	bl	402240 <locale_is_valid@plt>
  403cd0:	and	w0, w0, #0xff
  403cd4:	eor	w0, w0, #0x1
  403cd8:	and	w0, w0, #0xff
  403cdc:	cmp	w0, #0x0
  403ce0:	b.eq	403d04 <method_set_locale+0x1b0>  // b.none
  403ce4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403ce8:	add	x2, x0, #0xfa8
  403cec:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403cf0:	add	x1, x0, #0xfc0
  403cf4:	ldr	x0, [sp, #40]
  403cf8:	bl	402570 <sd_bus_error_setf@plt>
  403cfc:	mov	w19, w0
  403d00:	b	40452c <method_set_locale+0x9d8>
  403d04:	ldr	x0, [sp, #168]
  403d08:	ldr	x0, [x0]
  403d0c:	bl	402690 <strdup@plt>
  403d10:	str	x0, [sp, #216]
  403d14:	ldr	x0, [sp, #216]
  403d18:	cmp	x0, #0x0
  403d1c:	b.ne	403d28 <method_set_locale+0x1d4>  // b.any
  403d20:	mov	w19, #0xfffffff4            	// #-12
  403d24:	b	40452c <method_set_locale+0x9d8>
  403d28:	ldr	x0, [sp, #168]
  403d2c:	bl	402530 <strv_free@plt>
  403d30:	str	x0, [sp, #168]
  403d34:	ldr	x0, [sp, #168]
  403d38:	str	x0, [sp, #184]
  403d3c:	b	403eb4 <method_set_locale+0x360>
  403d40:	strb	wzr, [sp, #75]
  403d44:	str	wzr, [sp, #80]
  403d48:	b	403e60 <method_set_locale+0x30c>
  403d4c:	ldr	w0, [sp, #80]
  403d50:	bl	402400 <locale_variable_to_string@plt>
  403d54:	str	x0, [sp, #200]
  403d58:	ldr	x0, [sp, #200]
  403d5c:	cmp	x0, #0x0
  403d60:	cset	w0, eq  // eq = none
  403d64:	and	w0, w0, #0xff
  403d68:	and	x0, x0, #0xff
  403d6c:	cmp	x0, #0x0
  403d70:	b.eq	403d9c <method_set_locale+0x248>  // b.none
  403d74:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403d78:	add	x1, x0, #0xd0b
  403d7c:	adrp	x0, 409000 <_fini+0x328>
  403d80:	add	x4, x0, #0xa20
  403d84:	mov	w3, #0x12b                 	// #299
  403d88:	mov	x2, x1
  403d8c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403d90:	add	x1, x0, #0xd28
  403d94:	mov	w0, #0x0                   	// #0
  403d98:	bl	402430 <log_assert_failed_realm@plt>
  403d9c:	ldr	x0, [sp, #200]
  403da0:	bl	402780 <strlen@plt>
  403da4:	str	x0, [sp, #208]
  403da8:	ldr	x0, [sp, #184]
  403dac:	ldr	x0, [x0]
  403db0:	ldr	x1, [sp, #200]
  403db4:	bl	402bbc <startswith>
  403db8:	cmp	x0, #0x0
  403dbc:	b.eq	403e54 <method_set_locale+0x300>  // b.none
  403dc0:	ldr	x0, [sp, #184]
  403dc4:	ldr	x1, [x0]
  403dc8:	ldr	x0, [sp, #208]
  403dcc:	add	x0, x1, x0
  403dd0:	ldrb	w0, [x0]
  403dd4:	cmp	w0, #0x3d
  403dd8:	b.ne	403e54 <method_set_locale+0x300>  // b.any
  403ddc:	ldr	x0, [sp, #184]
  403de0:	ldr	x1, [x0]
  403de4:	ldr	x0, [sp, #208]
  403de8:	add	x0, x0, #0x1
  403dec:	add	x0, x1, x0
  403df0:	bl	402240 <locale_is_valid@plt>
  403df4:	and	w0, w0, #0xff
  403df8:	cmp	w0, #0x0
  403dfc:	b.eq	403e54 <method_set_locale+0x300>  // b.none
  403e00:	mov	w0, #0x1                   	// #1
  403e04:	strb	w0, [sp, #75]
  403e08:	ldr	x0, [sp, #184]
  403e0c:	ldr	x1, [x0]
  403e10:	ldr	x0, [sp, #208]
  403e14:	add	x0, x0, #0x1
  403e18:	add	x0, x1, x0
  403e1c:	bl	402690 <strdup@plt>
  403e20:	mov	x2, x0
  403e24:	ldrsw	x0, [sp, #80]
  403e28:	lsl	x0, x0, #3
  403e2c:	add	x1, sp, #0xd8
  403e30:	str	x2, [x1, x0]
  403e34:	ldrsw	x0, [sp, #80]
  403e38:	lsl	x0, x0, #3
  403e3c:	add	x1, sp, #0xd8
  403e40:	ldr	x0, [x1, x0]
  403e44:	cmp	x0, #0x0
  403e48:	b.ne	403e70 <method_set_locale+0x31c>  // b.any
  403e4c:	mov	w19, #0xfffffff4            	// #-12
  403e50:	b	40452c <method_set_locale+0x9d8>
  403e54:	ldr	w0, [sp, #80]
  403e58:	add	w0, w0, #0x1
  403e5c:	str	w0, [sp, #80]
  403e60:	ldr	w0, [sp, #80]
  403e64:	cmp	w0, #0xd
  403e68:	b.le	403d4c <method_set_locale+0x1f8>
  403e6c:	b	403e74 <method_set_locale+0x320>
  403e70:	nop
  403e74:	ldrb	w0, [sp, #75]
  403e78:	eor	w0, w0, #0x1
  403e7c:	and	w0, w0, #0xff
  403e80:	cmp	w0, #0x0
  403e84:	b.eq	403ea8 <method_set_locale+0x354>  // b.none
  403e88:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403e8c:	add	x2, x0, #0xfa8
  403e90:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403e94:	add	x1, x0, #0xfc0
  403e98:	ldr	x0, [sp, #40]
  403e9c:	bl	402570 <sd_bus_error_setf@plt>
  403ea0:	mov	w19, w0
  403ea4:	b	40452c <method_set_locale+0x9d8>
  403ea8:	ldr	x0, [sp, #184]
  403eac:	add	x0, x0, #0x8
  403eb0:	str	x0, [sp, #184]
  403eb4:	ldr	x0, [sp, #184]
  403eb8:	cmp	x0, #0x0
  403ebc:	b.eq	403ed0 <method_set_locale+0x37c>  // b.none
  403ec0:	ldr	x0, [sp, #184]
  403ec4:	ldr	x0, [x0]
  403ec8:	cmp	x0, #0x0
  403ecc:	b.ne	403d40 <method_set_locale+0x1ec>  // b.any
  403ed0:	ldr	x0, [sp, #216]
  403ed4:	bl	402b48 <isempty>
  403ed8:	and	w0, w0, #0xff
  403edc:	eor	w0, w0, #0x1
  403ee0:	and	w0, w0, #0xff
  403ee4:	cmp	w0, #0x0
  403ee8:	b.eq	403fbc <method_set_locale+0x468>  // b.none
  403eec:	ldr	x0, [sp, #224]
  403ef0:	bl	402b48 <isempty>
  403ef4:	and	w0, w0, #0xff
  403ef8:	cmp	w0, #0x0
  403efc:	b.eq	403fbc <method_set_locale+0x468>  // b.none
  403f00:	str	xzr, [sp, #176]
  403f04:	ldr	x0, [sp, #216]
  403f08:	add	x1, sp, #0xb0
  403f0c:	bl	40869c <find_language_fallback>
  403f10:	ldr	x0, [sp, #176]
  403f14:	cmp	x0, #0x0
  403f18:	b.eq	403fb4 <method_set_locale+0x460>  // b.none
  403f1c:	mov	w0, #0x7                   	// #7
  403f20:	str	w0, [sp, #88]
  403f24:	str	wzr, [sp, #92]
  403f28:	str	wzr, [sp, #96]
  403f2c:	ldr	w0, [sp, #96]
  403f30:	bl	4027d0 <log_get_max_level_realm@plt>
  403f34:	mov	w1, w0
  403f38:	ldr	w0, [sp, #88]
  403f3c:	and	w0, w0, #0x7
  403f40:	cmp	w1, w0
  403f44:	b.lt	403f98 <method_set_locale+0x444>  // b.tstop
  403f48:	ldr	w0, [sp, #96]
  403f4c:	lsl	w1, w0, #10
  403f50:	ldr	w0, [sp, #88]
  403f54:	orr	w8, w1, w0
  403f58:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403f5c:	add	x1, x0, #0xd0b
  403f60:	ldr	x0, [sp, #216]
  403f64:	ldr	x2, [sp, #176]
  403f68:	mov	x7, x2
  403f6c:	mov	x6, x0
  403f70:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  403f74:	add	x5, x0, #0xfe8
  403f78:	adrp	x0, 409000 <_fini+0x328>
  403f7c:	add	x4, x0, #0xa38
  403f80:	mov	w3, #0x147                 	// #327
  403f84:	mov	x2, x1
  403f88:	ldr	w1, [sp, #92]
  403f8c:	mov	w0, w8
  403f90:	bl	402640 <log_internal_realm@plt>
  403f94:	b	403fa0 <method_set_locale+0x44c>
  403f98:	ldr	w0, [sp, #92]
  403f9c:	cmp	w0, #0x0
  403fa0:	ldr	x0, [sp, #224]
  403fa4:	bl	402710 <free@plt>
  403fa8:	ldr	x0, [sp, #176]
  403fac:	str	x0, [sp, #224]
  403fb0:	str	xzr, [sp, #176]
  403fb4:	add	x0, sp, #0xb0
  403fb8:	bl	402a74 <freep>
  403fbc:	ldr	x1, [sp, #56]
  403fc0:	ldr	x0, [sp, #192]
  403fc4:	bl	40629c <locale_read_data>
  403fc8:	str	w0, [sp, #84]
  403fcc:	ldr	w0, [sp, #84]
  403fd0:	cmp	w0, #0x0
  403fd4:	b.ge	404070 <method_set_locale+0x51c>  // b.tcont
  403fd8:	mov	w0, #0x3                   	// #3
  403fdc:	str	w0, [sp, #148]
  403fe0:	ldr	w0, [sp, #84]
  403fe4:	str	w0, [sp, #152]
  403fe8:	str	wzr, [sp, #156]
  403fec:	ldr	w0, [sp, #156]
  403ff0:	bl	4027d0 <log_get_max_level_realm@plt>
  403ff4:	mov	w1, w0
  403ff8:	ldr	w0, [sp, #148]
  403ffc:	and	w0, w0, #0x7
  404000:	cmp	w1, w0
  404004:	b.lt	404048 <method_set_locale+0x4f4>  // b.tstop
  404008:	ldr	w0, [sp, #156]
  40400c:	lsl	w1, w0, #10
  404010:	ldr	w0, [sp, #148]
  404014:	orr	w6, w1, w0
  404018:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40401c:	add	x1, x0, #0xd0b
  404020:	adrp	x0, 409000 <_fini+0x328>
  404024:	add	x5, x0, #0x10
  404028:	adrp	x0, 409000 <_fini+0x328>
  40402c:	add	x4, x0, #0xa38
  404030:	mov	w3, #0x14e                 	// #334
  404034:	mov	x2, x1
  404038:	ldr	w1, [sp, #152]
  40403c:	mov	w0, w6
  404040:	bl	402640 <log_internal_realm@plt>
  404044:	b	404050 <method_set_locale+0x4fc>
  404048:	ldr	w0, [sp, #152]
  40404c:	cmp	w0, #0x0
  404050:	adrp	x0, 409000 <_fini+0x328>
  404054:	add	x2, x0, #0x30
  404058:	adrp	x0, 409000 <_fini+0x328>
  40405c:	add	x1, x0, #0x50
  404060:	ldr	x0, [sp, #40]
  404064:	bl	402570 <sd_bus_error_setf@plt>
  404068:	mov	w19, w0
  40406c:	b	40452c <method_set_locale+0x9d8>
  404070:	str	wzr, [sp, #80]
  404074:	b	404114 <method_set_locale+0x5c0>
  404078:	ldr	x0, [sp, #192]
  40407c:	ldrsw	x1, [sp, #80]
  404080:	add	x1, x1, #0x2
  404084:	ldr	x0, [x0, x1, lsl #3]
  404088:	bl	402b48 <isempty>
  40408c:	and	w0, w0, #0xff
  404090:	eor	w0, w0, #0x1
  404094:	and	w0, w0, #0xff
  404098:	cmp	w0, #0x0
  40409c:	b.eq	404108 <method_set_locale+0x5b4>  // b.none
  4040a0:	ldrsw	x0, [sp, #80]
  4040a4:	lsl	x0, x0, #3
  4040a8:	add	x1, sp, #0xd8
  4040ac:	ldr	x0, [x1, x0]
  4040b0:	bl	402b48 <isempty>
  4040b4:	and	w0, w0, #0xff
  4040b8:	cmp	w0, #0x0
  4040bc:	b.eq	404108 <method_set_locale+0x5b4>  // b.none
  4040c0:	ldr	x0, [sp, #192]
  4040c4:	ldrsw	x1, [sp, #80]
  4040c8:	add	x1, x1, #0x2
  4040cc:	ldr	x0, [x0, x1, lsl #3]
  4040d0:	bl	402690 <strdup@plt>
  4040d4:	mov	x2, x0
  4040d8:	ldrsw	x0, [sp, #80]
  4040dc:	lsl	x0, x0, #3
  4040e0:	add	x1, sp, #0xd8
  4040e4:	str	x2, [x1, x0]
  4040e8:	ldrsw	x0, [sp, #80]
  4040ec:	lsl	x0, x0, #3
  4040f0:	add	x1, sp, #0xd8
  4040f4:	ldr	x0, [x1, x0]
  4040f8:	cmp	x0, #0x0
  4040fc:	b.ne	404108 <method_set_locale+0x5b4>  // b.any
  404100:	mov	w19, #0xfffffff4            	// #-12
  404104:	b	40452c <method_set_locale+0x9d8>
  404108:	ldr	w0, [sp, #80]
  40410c:	add	w0, w0, #0x1
  404110:	str	w0, [sp, #80]
  404114:	ldr	w0, [sp, #80]
  404118:	cmp	w0, #0xd
  40411c:	b.le	404078 <method_set_locale+0x524>
  404120:	add	x0, sp, #0xd8
  404124:	bl	4061cc <locale_simplify>
  404128:	str	wzr, [sp, #80]
  40412c:	b	404188 <method_set_locale+0x634>
  404130:	ldr	x0, [sp, #192]
  404134:	ldrsw	x1, [sp, #80]
  404138:	add	x1, x1, #0x2
  40413c:	ldr	x2, [x0, x1, lsl #3]
  404140:	ldrsw	x0, [sp, #80]
  404144:	lsl	x0, x0, #3
  404148:	add	x1, sp, #0xd8
  40414c:	ldr	x0, [x1, x0]
  404150:	mov	x1, x0
  404154:	mov	x0, x2
  404158:	bl	402ad0 <streq_ptr>
  40415c:	and	w0, w0, #0xff
  404160:	eor	w0, w0, #0x1
  404164:	and	w0, w0, #0xff
  404168:	cmp	w0, #0x0
  40416c:	b.eq	40417c <method_set_locale+0x628>  // b.none
  404170:	mov	w0, #0x1                   	// #1
  404174:	strb	w0, [sp, #74]
  404178:	b	404194 <method_set_locale+0x640>
  40417c:	ldr	w0, [sp, #80]
  404180:	add	w0, w0, #0x1
  404184:	str	w0, [sp, #80]
  404188:	ldr	w0, [sp, #80]
  40418c:	cmp	w0, #0xd
  404190:	b.le	404130 <method_set_locale+0x5dc>
  404194:	ldrb	w0, [sp, #74]
  404198:	eor	w0, w0, #0x1
  40419c:	and	w0, w0, #0xff
  4041a0:	cmp	w0, #0x0
  4041a4:	b.eq	404230 <method_set_locale+0x6dc>  // b.none
  4041a8:	mov	w0, #0x7                   	// #7
  4041ac:	str	w0, [sp, #136]
  4041b0:	str	wzr, [sp, #140]
  4041b4:	str	wzr, [sp, #144]
  4041b8:	ldr	w0, [sp, #144]
  4041bc:	bl	4027d0 <log_get_max_level_realm@plt>
  4041c0:	mov	w1, w0
  4041c4:	ldr	w0, [sp, #136]
  4041c8:	and	w0, w0, #0x7
  4041cc:	cmp	w1, w0
  4041d0:	b.lt	404214 <method_set_locale+0x6c0>  // b.tstop
  4041d4:	ldr	w0, [sp, #144]
  4041d8:	lsl	w1, w0, #10
  4041dc:	ldr	w0, [sp, #136]
  4041e0:	orr	w6, w1, w0
  4041e4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4041e8:	add	x1, x0, #0xd0b
  4041ec:	adrp	x0, 409000 <_fini+0x328>
  4041f0:	add	x5, x0, #0x78
  4041f4:	adrp	x0, 409000 <_fini+0x328>
  4041f8:	add	x4, x0, #0xa38
  4041fc:	mov	w3, #0x163                 	// #355
  404200:	mov	x2, x1
  404204:	ldr	w1, [sp, #140]
  404208:	mov	w0, w6
  40420c:	bl	402640 <log_internal_realm@plt>
  404210:	b	40421c <method_set_locale+0x6c8>
  404214:	ldr	w0, [sp, #140]
  404218:	cmp	w0, #0x0
  40421c:	mov	x1, #0x0                   	// #0
  404220:	ldr	x0, [sp, #56]
  404224:	bl	402270 <sd_bus_reply_method_return@plt>
  404228:	mov	w19, w0
  40422c:	b	40452c <method_set_locale+0x9d8>
  404230:	ldr	w0, [sp, #76]
  404234:	cmp	w0, #0x0
  404238:	cset	w0, ne  // ne = any
  40423c:	and	w1, w0, #0xff
  404240:	ldr	x0, [sp, #192]
  404244:	add	x0, x0, #0xd0
  404248:	ldr	x7, [sp, #40]
  40424c:	mov	x6, x0
  404250:	mov	w5, #0xffffffff            	// #-1
  404254:	mov	w4, w1
  404258:	mov	x3, #0x0                   	// #0
  40425c:	adrp	x0, 409000 <_fini+0x328>
  404260:	add	x2, x0, #0xa0
  404264:	mov	w1, #0x15                  	// #21
  404268:	ldr	x0, [sp, #56]
  40426c:	bl	4027c0 <bus_verify_polkit_async@plt>
  404270:	str	w0, [sp, #84]
  404274:	ldr	w0, [sp, #84]
  404278:	cmp	w0, #0x0
  40427c:	b.ge	404288 <method_set_locale+0x734>  // b.tcont
  404280:	ldr	w19, [sp, #84]
  404284:	b	40452c <method_set_locale+0x9d8>
  404288:	ldr	w0, [sp, #84]
  40428c:	cmp	w0, #0x0
  404290:	b.ne	40429c <method_set_locale+0x748>  // b.any
  404294:	mov	w19, #0x1                   	// #1
  404298:	b	40452c <method_set_locale+0x9d8>
  40429c:	str	wzr, [sp, #80]
  4042a0:	b	4042f4 <method_set_locale+0x7a0>
  4042a4:	ldr	x0, [sp, #192]
  4042a8:	ldrsw	x1, [sp, #80]
  4042ac:	add	x1, x1, #0x2
  4042b0:	ldr	x0, [x0, x1, lsl #3]
  4042b4:	bl	402710 <free@plt>
  4042b8:	ldrsw	x0, [sp, #80]
  4042bc:	lsl	x0, x0, #3
  4042c0:	add	x1, sp, #0xd8
  4042c4:	ldr	x2, [x1, x0]
  4042c8:	ldr	x0, [sp, #192]
  4042cc:	ldrsw	x1, [sp, #80]
  4042d0:	add	x1, x1, #0x2
  4042d4:	str	x2, [x0, x1, lsl #3]
  4042d8:	ldrsw	x0, [sp, #80]
  4042dc:	lsl	x0, x0, #3
  4042e0:	add	x1, sp, #0xd8
  4042e4:	str	xzr, [x1, x0]
  4042e8:	ldr	w0, [sp, #80]
  4042ec:	add	w0, w0, #0x1
  4042f0:	str	w0, [sp, #80]
  4042f4:	ldr	w0, [sp, #80]
  4042f8:	cmp	w0, #0xd
  4042fc:	b.le	4042a4 <method_set_locale+0x750>
  404300:	add	x0, sp, #0xa0
  404304:	mov	x1, x0
  404308:	ldr	x0, [sp, #192]
  40430c:	bl	406cac <locale_write_data>
  404310:	str	w0, [sp, #84]
  404314:	ldr	w0, [sp, #84]
  404318:	cmp	w0, #0x0
  40431c:	b.ge	4043b4 <method_set_locale+0x860>  // b.tcont
  404320:	mov	w0, #0x3                   	// #3
  404324:	str	w0, [sp, #124]
  404328:	ldr	w0, [sp, #84]
  40432c:	str	w0, [sp, #128]
  404330:	str	wzr, [sp, #132]
  404334:	ldr	w0, [sp, #132]
  404338:	bl	4027d0 <log_get_max_level_realm@plt>
  40433c:	mov	w1, w0
  404340:	ldr	w0, [sp, #124]
  404344:	and	w0, w0, #0x7
  404348:	cmp	w1, w0
  40434c:	b.lt	404390 <method_set_locale+0x83c>  // b.tstop
  404350:	ldr	w0, [sp, #132]
  404354:	lsl	w1, w0, #10
  404358:	ldr	w0, [sp, #124]
  40435c:	orr	w6, w1, w0
  404360:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404364:	add	x1, x0, #0xd0b
  404368:	adrp	x0, 409000 <_fini+0x328>
  40436c:	add	x5, x0, #0xc8
  404370:	adrp	x0, 409000 <_fini+0x328>
  404374:	add	x4, x0, #0xa38
  404378:	mov	w3, #0x17a                 	// #378
  40437c:	mov	x2, x1
  404380:	ldr	w1, [sp, #128]
  404384:	mov	w0, w6
  404388:	bl	402640 <log_internal_realm@plt>
  40438c:	b	404398 <method_set_locale+0x844>
  404390:	ldr	w0, [sp, #128]
  404394:	cmp	w0, #0x0
  404398:	adrp	x0, 409000 <_fini+0x328>
  40439c:	add	x2, x0, #0xc8
  4043a0:	ldr	w1, [sp, #84]
  4043a4:	ldr	x0, [sp, #40]
  4043a8:	bl	402330 <sd_bus_error_set_errnof@plt>
  4043ac:	mov	w19, w0
  4043b0:	b	40452c <method_set_locale+0x9d8>
  4043b4:	ldr	x0, [sp, #56]
  4043b8:	bl	402410 <sd_bus_message_get_bus@plt>
  4043bc:	mov	x1, x0
  4043c0:	ldr	x0, [sp, #192]
  4043c4:	bl	402d10 <locale_update_system_manager>
  4043c8:	ldr	x0, [sp, #160]
  4043cc:	cmp	x0, #0x0
  4043d0:	b.eq	404478 <method_set_locale+0x924>  // b.none
  4043d4:	ldr	x2, [sp, #160]
  4043d8:	adrp	x0, 409000 <_fini+0x328>
  4043dc:	add	x1, x0, #0xe8
  4043e0:	mov	x0, x2
  4043e4:	bl	402ce8 <strv_join>
  4043e8:	str	x0, [sp, #176]
  4043ec:	mov	w0, #0x6                   	// #6
  4043f0:	str	w0, [sp, #112]
  4043f4:	str	wzr, [sp, #116]
  4043f8:	str	wzr, [sp, #120]
  4043fc:	ldr	w0, [sp, #120]
  404400:	bl	4027d0 <log_get_max_level_realm@plt>
  404404:	mov	w1, w0
  404408:	ldr	w0, [sp, #112]
  40440c:	and	w0, w0, #0x7
  404410:	cmp	w1, w0
  404414:	b.lt	404464 <method_set_locale+0x910>  // b.tstop
  404418:	ldr	w0, [sp, #120]
  40441c:	lsl	w1, w0, #10
  404420:	ldr	w0, [sp, #112]
  404424:	orr	w19, w1, w0
  404428:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40442c:	add	x20, x0, #0xd0b
  404430:	ldr	x0, [sp, #176]
  404434:	bl	402b24 <strnull>
  404438:	mov	x6, x0
  40443c:	adrp	x0, 409000 <_fini+0x328>
  404440:	add	x5, x0, #0xf0
  404444:	adrp	x0, 409000 <_fini+0x328>
  404448:	add	x4, x0, #0xa38
  40444c:	mov	w3, #0x184                 	// #388
  404450:	mov	x2, x20
  404454:	ldr	w1, [sp, #116]
  404458:	mov	w0, w19
  40445c:	bl	402640 <log_internal_realm@plt>
  404460:	b	40446c <method_set_locale+0x918>
  404464:	ldr	w0, [sp, #116]
  404468:	cmp	w0, #0x0
  40446c:	add	x0, sp, #0xb0
  404470:	bl	402a74 <freep>
  404474:	b	4044ec <method_set_locale+0x998>
  404478:	mov	w0, #0x6                   	// #6
  40447c:	str	w0, [sp, #100]
  404480:	str	wzr, [sp, #104]
  404484:	str	wzr, [sp, #108]
  404488:	ldr	w0, [sp, #108]
  40448c:	bl	4027d0 <log_get_max_level_realm@plt>
  404490:	mov	w1, w0
  404494:	ldr	w0, [sp, #100]
  404498:	and	w0, w0, #0x7
  40449c:	cmp	w1, w0
  4044a0:	b.lt	4044e4 <method_set_locale+0x990>  // b.tstop
  4044a4:	ldr	w0, [sp, #108]
  4044a8:	lsl	w1, w0, #10
  4044ac:	ldr	w0, [sp, #100]
  4044b0:	orr	w6, w1, w0
  4044b4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4044b8:	add	x1, x0, #0xd0b
  4044bc:	adrp	x0, 409000 <_fini+0x328>
  4044c0:	add	x5, x0, #0x108
  4044c4:	adrp	x0, 409000 <_fini+0x328>
  4044c8:	add	x4, x0, #0xa38
  4044cc:	mov	w3, #0x186                 	// #390
  4044d0:	mov	x2, x1
  4044d4:	ldr	w1, [sp, #104]
  4044d8:	mov	w0, w6
  4044dc:	bl	402640 <log_internal_realm@plt>
  4044e0:	b	4044ec <method_set_locale+0x998>
  4044e4:	ldr	w0, [sp, #104]
  4044e8:	cmp	w0, #0x0
  4044ec:	ldr	x0, [sp, #56]
  4044f0:	bl	402410 <sd_bus_message_get_bus@plt>
  4044f4:	mov	x5, x0
  4044f8:	mov	x4, #0x0                   	// #0
  4044fc:	adrp	x0, 409000 <_fini+0x328>
  404500:	add	x3, x0, #0x128
  404504:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404508:	add	x2, x0, #0xf08
  40450c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404510:	add	x1, x0, #0xf20
  404514:	mov	x0, x5
  404518:	bl	402620 <sd_bus_emit_properties_changed@plt>
  40451c:	mov	x1, #0x0                   	// #0
  404520:	ldr	x0, [sp, #56]
  404524:	bl	402270 <sd_bus_reply_method_return@plt>
  404528:	mov	w19, w0
  40452c:	add	x0, sp, #0xa8
  404530:	bl	402cb4 <strv_freep>
  404534:	add	x0, sp, #0xa0
  404538:	bl	402cb4 <strv_freep>
  40453c:	add	x0, sp, #0xd8
  404540:	bl	402c0c <locale_variables_freep>
  404544:	mov	w1, w19
  404548:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  40454c:	add	x0, x0, #0xaa8
  404550:	ldr	x2, [sp, #328]
  404554:	ldr	x0, [x0]
  404558:	eor	x0, x2, x0
  40455c:	cmp	x0, #0x0
  404560:	b.eq	404568 <method_set_locale+0xa14>  // b.none
  404564:	bl	402580 <__stack_chk_fail@plt>
  404568:	mov	w0, w1
  40456c:	ldp	x19, x20, [sp, #16]
  404570:	ldp	x29, x30, [sp], #336
  404574:	ret

0000000000404578 <method_set_vc_keyboard>:
  404578:	stp	x29, x30, [sp, #-176]!
  40457c:	mov	x29, sp
  404580:	stp	x19, x20, [sp, #16]
  404584:	str	x21, [sp, #32]
  404588:	str	x0, [sp, #72]
  40458c:	str	x1, [sp, #64]
  404590:	str	x2, [sp, #56]
  404594:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  404598:	add	x0, x0, #0xaa8
  40459c:	ldr	x1, [x0]
  4045a0:	str	x1, [sp, #168]
  4045a4:	mov	x1, #0x0                   	// #0
  4045a8:	ldr	x0, [sp, #64]
  4045ac:	str	x0, [sp, #160]
  4045b0:	ldr	x0, [sp, #72]
  4045b4:	cmp	x0, #0x0
  4045b8:	cset	w0, eq  // eq = none
  4045bc:	and	w0, w0, #0xff
  4045c0:	and	x0, x0, #0xff
  4045c4:	cmp	x0, #0x0
  4045c8:	b.eq	4045f4 <method_set_vc_keyboard+0x7c>  // b.none
  4045cc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4045d0:	add	x1, x0, #0xd0b
  4045d4:	adrp	x0, 409000 <_fini+0x328>
  4045d8:	add	x4, x0, #0xa50
  4045dc:	mov	w3, #0x196                 	// #406
  4045e0:	mov	x2, x1
  4045e4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4045e8:	add	x1, x0, #0xe98
  4045ec:	mov	w0, #0x0                   	// #0
  4045f0:	bl	402430 <log_assert_failed_realm@plt>
  4045f4:	ldr	x0, [sp, #160]
  4045f8:	cmp	x0, #0x0
  4045fc:	cset	w0, eq  // eq = none
  404600:	and	w0, w0, #0xff
  404604:	and	x0, x0, #0xff
  404608:	cmp	x0, #0x0
  40460c:	b.eq	404638 <method_set_vc_keyboard+0xc0>  // b.none
  404610:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404614:	add	x1, x0, #0xd0b
  404618:	adrp	x0, 409000 <_fini+0x328>
  40461c:	add	x4, x0, #0xa50
  404620:	mov	w3, #0x197                 	// #407
  404624:	mov	x2, x1
  404628:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40462c:	add	x1, x0, #0xfa0
  404630:	mov	w0, #0x0                   	// #0
  404634:	bl	402430 <log_assert_failed_realm@plt>
  404638:	add	x3, sp, #0x58
  40463c:	add	x2, sp, #0x54
  404640:	add	x1, sp, #0x98
  404644:	add	x0, sp, #0x90
  404648:	mov	x5, x3
  40464c:	mov	x4, x2
  404650:	mov	x3, x1
  404654:	mov	x2, x0
  404658:	adrp	x0, 409000 <_fini+0x328>
  40465c:	add	x1, x0, #0x130
  404660:	ldr	x0, [sp, #72]
  404664:	bl	402440 <sd_bus_message_read@plt>
  404668:	str	w0, [sp, #92]
  40466c:	ldr	w0, [sp, #92]
  404670:	cmp	w0, #0x0
  404674:	b.ge	404680 <method_set_vc_keyboard+0x108>  // b.tcont
  404678:	ldr	w0, [sp, #92]
  40467c:	b	404b18 <method_set_vc_keyboard+0x5a0>
  404680:	ldr	x0, [sp, #144]
  404684:	bl	402b88 <empty_to_null>
  404688:	str	x0, [sp, #144]
  40468c:	ldr	x0, [sp, #152]
  404690:	bl	402b88 <empty_to_null>
  404694:	str	x0, [sp, #152]
  404698:	ldr	x1, [sp, #72]
  40469c:	ldr	x0, [sp, #160]
  4046a0:	bl	406630 <vconsole_read_data>
  4046a4:	str	w0, [sp, #92]
  4046a8:	ldr	w0, [sp, #92]
  4046ac:	cmp	w0, #0x0
  4046b0:	b.ge	404748 <method_set_vc_keyboard+0x1d0>  // b.tcont
  4046b4:	mov	w0, #0x3                   	// #3
  4046b8:	str	w0, [sp, #132]
  4046bc:	ldr	w0, [sp, #92]
  4046c0:	str	w0, [sp, #136]
  4046c4:	str	wzr, [sp, #140]
  4046c8:	ldr	w0, [sp, #140]
  4046cc:	bl	4027d0 <log_get_max_level_realm@plt>
  4046d0:	mov	w1, w0
  4046d4:	ldr	w0, [sp, #132]
  4046d8:	and	w0, w0, #0x7
  4046dc:	cmp	w1, w0
  4046e0:	b.lt	404724 <method_set_vc_keyboard+0x1ac>  // b.tstop
  4046e4:	ldr	w0, [sp, #140]
  4046e8:	lsl	w1, w0, #10
  4046ec:	ldr	w0, [sp, #132]
  4046f0:	orr	w6, w1, w0
  4046f4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4046f8:	add	x1, x0, #0xd0b
  4046fc:	adrp	x0, 409000 <_fini+0x328>
  404700:	add	x5, x0, #0x138
  404704:	adrp	x0, 409000 <_fini+0x328>
  404708:	add	x4, x0, #0xa68
  40470c:	mov	w3, #0x1a2                 	// #418
  404710:	mov	x2, x1
  404714:	ldr	w1, [sp, #136]
  404718:	mov	w0, w6
  40471c:	bl	402640 <log_internal_realm@plt>
  404720:	b	40472c <method_set_vc_keyboard+0x1b4>
  404724:	ldr	w0, [sp, #136]
  404728:	cmp	w0, #0x0
  40472c:	adrp	x0, 409000 <_fini+0x328>
  404730:	add	x2, x0, #0x168
  404734:	adrp	x0, 409000 <_fini+0x328>
  404738:	add	x1, x0, #0x50
  40473c:	ldr	x0, [sp, #56]
  404740:	bl	402570 <sd_bus_error_setf@plt>
  404744:	b	404b18 <method_set_vc_keyboard+0x5a0>
  404748:	ldr	x2, [sp, #144]
  40474c:	ldr	x0, [sp, #160]
  404750:	ldr	x0, [x0, #192]
  404754:	mov	x1, x0
  404758:	mov	x0, x2
  40475c:	bl	402ad0 <streq_ptr>
  404760:	and	w0, w0, #0xff
  404764:	cmp	w0, #0x0
  404768:	b.eq	4047a0 <method_set_vc_keyboard+0x228>  // b.none
  40476c:	ldr	x2, [sp, #152]
  404770:	ldr	x0, [sp, #160]
  404774:	ldr	x0, [x0, #200]
  404778:	mov	x1, x0
  40477c:	mov	x0, x2
  404780:	bl	402ad0 <streq_ptr>
  404784:	and	w0, w0, #0xff
  404788:	cmp	w0, #0x0
  40478c:	b.eq	4047a0 <method_set_vc_keyboard+0x228>  // b.none
  404790:	mov	x1, #0x0                   	// #0
  404794:	ldr	x0, [sp, #72]
  404798:	bl	402270 <sd_bus_reply_method_return@plt>
  40479c:	b	404b18 <method_set_vc_keyboard+0x5a0>
  4047a0:	ldr	x0, [sp, #144]
  4047a4:	cmp	x0, #0x0
  4047a8:	b.eq	4047e4 <method_set_vc_keyboard+0x26c>  // b.none
  4047ac:	ldr	x0, [sp, #144]
  4047b0:	bl	402250 <filename_is_valid@plt>
  4047b4:	and	w0, w0, #0xff
  4047b8:	eor	w0, w0, #0x1
  4047bc:	and	w0, w0, #0xff
  4047c0:	cmp	w0, #0x0
  4047c4:	b.ne	404828 <method_set_vc_keyboard+0x2b0>  // b.any
  4047c8:	ldr	x0, [sp, #144]
  4047cc:	bl	4024a0 <string_is_safe@plt>
  4047d0:	and	w0, w0, #0xff
  4047d4:	eor	w0, w0, #0x1
  4047d8:	and	w0, w0, #0xff
  4047dc:	cmp	w0, #0x0
  4047e0:	b.ne	404828 <method_set_vc_keyboard+0x2b0>  // b.any
  4047e4:	ldr	x0, [sp, #152]
  4047e8:	cmp	x0, #0x0
  4047ec:	b.eq	404844 <method_set_vc_keyboard+0x2cc>  // b.none
  4047f0:	ldr	x0, [sp, #152]
  4047f4:	bl	402250 <filename_is_valid@plt>
  4047f8:	and	w0, w0, #0xff
  4047fc:	eor	w0, w0, #0x1
  404800:	and	w0, w0, #0xff
  404804:	cmp	w0, #0x0
  404808:	b.ne	404828 <method_set_vc_keyboard+0x2b0>  // b.any
  40480c:	ldr	x0, [sp, #152]
  404810:	bl	4024a0 <string_is_safe@plt>
  404814:	and	w0, w0, #0xff
  404818:	eor	w0, w0, #0x1
  40481c:	and	w0, w0, #0xff
  404820:	cmp	w0, #0x0
  404824:	b.eq	404844 <method_set_vc_keyboard+0x2cc>  // b.none
  404828:	adrp	x0, 409000 <_fini+0x328>
  40482c:	add	x2, x0, #0x198
  404830:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404834:	add	x1, x0, #0xfc0
  404838:	ldr	x0, [sp, #56]
  40483c:	bl	402570 <sd_bus_error_setf@plt>
  404840:	b	404b18 <method_set_vc_keyboard+0x5a0>
  404844:	ldr	w0, [sp, #88]
  404848:	cmp	w0, #0x0
  40484c:	cset	w0, ne  // ne = any
  404850:	and	w1, w0, #0xff
  404854:	ldr	x0, [sp, #160]
  404858:	add	x0, x0, #0xd0
  40485c:	ldr	x7, [sp, #56]
  404860:	mov	x6, x0
  404864:	mov	w5, #0xffffffff            	// #-1
  404868:	mov	w4, w1
  40486c:	mov	x3, #0x0                   	// #0
  404870:	adrp	x0, 409000 <_fini+0x328>
  404874:	add	x2, x0, #0x1b8
  404878:	mov	w1, #0x15                  	// #21
  40487c:	ldr	x0, [sp, #72]
  404880:	bl	4027c0 <bus_verify_polkit_async@plt>
  404884:	str	w0, [sp, #92]
  404888:	ldr	w0, [sp, #92]
  40488c:	cmp	w0, #0x0
  404890:	b.ge	40489c <method_set_vc_keyboard+0x324>  // b.tcont
  404894:	ldr	w0, [sp, #92]
  404898:	b	404b18 <method_set_vc_keyboard+0x5a0>
  40489c:	ldr	w0, [sp, #92]
  4048a0:	cmp	w0, #0x0
  4048a4:	b.ne	4048b0 <method_set_vc_keyboard+0x338>  // b.any
  4048a8:	mov	w0, #0x1                   	// #1
  4048ac:	b	404b18 <method_set_vc_keyboard+0x5a0>
  4048b0:	ldr	x0, [sp, #160]
  4048b4:	add	x0, x0, #0xc0
  4048b8:	ldr	x1, [sp, #144]
  4048bc:	bl	4023a0 <free_and_strdup@plt>
  4048c0:	cmp	w0, #0x0
  4048c4:	b.lt	4048e0 <method_set_vc_keyboard+0x368>  // b.tstop
  4048c8:	ldr	x0, [sp, #160]
  4048cc:	add	x0, x0, #0xc8
  4048d0:	ldr	x1, [sp, #152]
  4048d4:	bl	4023a0 <free_and_strdup@plt>
  4048d8:	cmp	w0, #0x0
  4048dc:	b.ge	4048e8 <method_set_vc_keyboard+0x370>  // b.tcont
  4048e0:	mov	w0, #0xfffffff4            	// #-12
  4048e4:	b	404b18 <method_set_vc_keyboard+0x5a0>
  4048e8:	ldr	x0, [sp, #160]
  4048ec:	bl	406f28 <vconsole_write_data>
  4048f0:	str	w0, [sp, #92]
  4048f4:	ldr	w0, [sp, #92]
  4048f8:	cmp	w0, #0x0
  4048fc:	b.ge	404990 <method_set_vc_keyboard+0x418>  // b.tcont
  404900:	mov	w0, #0x3                   	// #3
  404904:	str	w0, [sp, #120]
  404908:	ldr	w0, [sp, #92]
  40490c:	str	w0, [sp, #124]
  404910:	str	wzr, [sp, #128]
  404914:	ldr	w0, [sp, #128]
  404918:	bl	4027d0 <log_get_max_level_realm@plt>
  40491c:	mov	w1, w0
  404920:	ldr	w0, [sp, #120]
  404924:	and	w0, w0, #0x7
  404928:	cmp	w1, w0
  40492c:	b.lt	404970 <method_set_vc_keyboard+0x3f8>  // b.tstop
  404930:	ldr	w0, [sp, #128]
  404934:	lsl	w1, w0, #10
  404938:	ldr	w0, [sp, #120]
  40493c:	orr	w6, w1, w0
  404940:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404944:	add	x1, x0, #0xd0b
  404948:	adrp	x0, 409000 <_fini+0x328>
  40494c:	add	x5, x0, #0x1e0
  404950:	adrp	x0, 409000 <_fini+0x328>
  404954:	add	x4, x0, #0xa68
  404958:	mov	w3, #0x1c2                 	// #450
  40495c:	mov	x2, x1
  404960:	ldr	w1, [sp, #124]
  404964:	mov	w0, w6
  404968:	bl	402640 <log_internal_realm@plt>
  40496c:	b	404978 <method_set_vc_keyboard+0x400>
  404970:	ldr	w0, [sp, #124]
  404974:	cmp	w0, #0x0
  404978:	adrp	x0, 409000 <_fini+0x328>
  40497c:	add	x2, x0, #0x1e0
  404980:	ldr	w1, [sp, #92]
  404984:	ldr	x0, [sp, #56]
  404988:	bl	402330 <sd_bus_error_set_errnof@plt>
  40498c:	b	404b18 <method_set_vc_keyboard+0x5a0>
  404990:	mov	w0, #0x6                   	// #6
  404994:	str	w0, [sp, #96]
  404998:	str	wzr, [sp, #100]
  40499c:	str	wzr, [sp, #104]
  4049a0:	ldr	w0, [sp, #104]
  4049a4:	bl	4027d0 <log_get_max_level_realm@plt>
  4049a8:	mov	w1, w0
  4049ac:	ldr	w0, [sp, #96]
  4049b0:	and	w0, w0, #0x7
  4049b4:	cmp	w1, w0
  4049b8:	b.lt	404a20 <method_set_vc_keyboard+0x4a8>  // b.tstop
  4049bc:	ldr	w0, [sp, #104]
  4049c0:	lsl	w1, w0, #10
  4049c4:	ldr	w0, [sp, #96]
  4049c8:	orr	w19, w1, w0
  4049cc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4049d0:	add	x20, x0, #0xd0b
  4049d4:	ldr	x0, [sp, #160]
  4049d8:	ldr	x0, [x0, #192]
  4049dc:	bl	402b00 <strempty>
  4049e0:	mov	x21, x0
  4049e4:	ldr	x0, [sp, #160]
  4049e8:	ldr	x0, [x0, #200]
  4049ec:	bl	402b00 <strempty>
  4049f0:	mov	x7, x0
  4049f4:	mov	x6, x21
  4049f8:	adrp	x0, 409000 <_fini+0x328>
  4049fc:	add	x5, x0, #0x210
  404a00:	adrp	x0, 409000 <_fini+0x328>
  404a04:	add	x4, x0, #0xa68
  404a08:	mov	w3, #0x1c6                 	// #454
  404a0c:	mov	x2, x20
  404a10:	ldr	w1, [sp, #100]
  404a14:	mov	w0, w19
  404a18:	bl	402640 <log_internal_realm@plt>
  404a1c:	b	404a28 <method_set_vc_keyboard+0x4b0>
  404a20:	ldr	w0, [sp, #100]
  404a24:	cmp	w0, #0x0
  404a28:	ldr	x0, [sp, #72]
  404a2c:	bl	402410 <sd_bus_message_get_bus@plt>
  404a30:	bl	4032cc <vconsole_reload>
  404a34:	ldr	x0, [sp, #72]
  404a38:	bl	402410 <sd_bus_message_get_bus@plt>
  404a3c:	mov	x6, x0
  404a40:	mov	x5, #0x0                   	// #0
  404a44:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404a48:	add	x4, x0, #0xf70
  404a4c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404a50:	add	x3, x0, #0xf88
  404a54:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404a58:	add	x2, x0, #0xf08
  404a5c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404a60:	add	x1, x0, #0xf20
  404a64:	mov	x0, x6
  404a68:	bl	402620 <sd_bus_emit_properties_changed@plt>
  404a6c:	ldr	w0, [sp, #84]
  404a70:	cmp	w0, #0x0
  404a74:	b.eq	404b0c <method_set_vc_keyboard+0x594>  // b.none
  404a78:	ldr	x1, [sp, #72]
  404a7c:	ldr	x0, [sp, #160]
  404a80:	bl	403488 <vconsole_convert_to_x11_and_emit>
  404a84:	str	w0, [sp, #92]
  404a88:	ldr	w0, [sp, #92]
  404a8c:	cmp	w0, #0x0
  404a90:	b.ge	404b0c <method_set_vc_keyboard+0x594>  // b.tcont
  404a94:	mov	w0, #0x3                   	// #3
  404a98:	str	w0, [sp, #108]
  404a9c:	ldr	w0, [sp, #92]
  404aa0:	str	w0, [sp, #112]
  404aa4:	str	wzr, [sp, #116]
  404aa8:	ldr	w0, [sp, #116]
  404aac:	bl	4027d0 <log_get_max_level_realm@plt>
  404ab0:	mov	w1, w0
  404ab4:	ldr	w0, [sp, #108]
  404ab8:	and	w0, w0, #0x7
  404abc:	cmp	w1, w0
  404ac0:	b.lt	404b04 <method_set_vc_keyboard+0x58c>  // b.tstop
  404ac4:	ldr	w0, [sp, #116]
  404ac8:	lsl	w1, w0, #10
  404acc:	ldr	w0, [sp, #108]
  404ad0:	orr	w6, w1, w0
  404ad4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404ad8:	add	x1, x0, #0xd0b
  404adc:	adrp	x0, 409000 <_fini+0x328>
  404ae0:	add	x5, x0, #0x248
  404ae4:	adrp	x0, 409000 <_fini+0x328>
  404ae8:	add	x4, x0, #0xa68
  404aec:	mov	w3, #0x1d4                 	// #468
  404af0:	mov	x2, x1
  404af4:	ldr	w1, [sp, #112]
  404af8:	mov	w0, w6
  404afc:	bl	402640 <log_internal_realm@plt>
  404b00:	b	404b0c <method_set_vc_keyboard+0x594>
  404b04:	ldr	w0, [sp, #112]
  404b08:	cmp	w0, #0x0
  404b0c:	mov	x1, #0x0                   	// #0
  404b10:	ldr	x0, [sp, #72]
  404b14:	bl	402270 <sd_bus_reply_method_return@plt>
  404b18:	mov	w1, w0
  404b1c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  404b20:	add	x0, x0, #0xaa8
  404b24:	ldr	x2, [sp, #168]
  404b28:	ldr	x0, [x0]
  404b2c:	eor	x0, x2, x0
  404b30:	cmp	x0, #0x0
  404b34:	b.eq	404b3c <method_set_vc_keyboard+0x5c4>  // b.none
  404b38:	bl	402580 <__stack_chk_fail@plt>
  404b3c:	mov	w0, w1
  404b40:	ldp	x19, x20, [sp, #16]
  404b44:	ldr	x21, [sp, #32]
  404b48:	ldp	x29, x30, [sp], #176
  404b4c:	ret

0000000000404b50 <verify_xkb_rmlvo>:
  404b50:	sub	sp, sp, #0x20
  404b54:	str	x0, [sp, #24]
  404b58:	str	x1, [sp, #16]
  404b5c:	str	x2, [sp, #8]
  404b60:	str	x3, [sp]
  404b64:	mov	w0, #0x0                   	// #0
  404b68:	add	sp, sp, #0x20
  404b6c:	ret

0000000000404b70 <method_set_x11_keyboard>:
  404b70:	sub	sp, sp, #0xf0
  404b74:	stp	x29, x30, [sp, #16]
  404b78:	add	x29, sp, #0x10
  404b7c:	stp	x19, x20, [sp, #32]
  404b80:	stp	x21, x22, [sp, #48]
  404b84:	str	x23, [sp, #64]
  404b88:	str	x0, [sp, #104]
  404b8c:	str	x1, [sp, #96]
  404b90:	str	x2, [sp, #88]
  404b94:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  404b98:	add	x0, x0, #0xaa8
  404b9c:	ldr	x1, [x0]
  404ba0:	str	x1, [sp, #232]
  404ba4:	mov	x1, #0x0                   	// #0
  404ba8:	ldr	x0, [sp, #96]
  404bac:	str	x0, [sp, #224]
  404bb0:	ldr	x0, [sp, #104]
  404bb4:	cmp	x0, #0x0
  404bb8:	cset	w0, eq  // eq = none
  404bbc:	and	w0, w0, #0xff
  404bc0:	and	x0, x0, #0xff
  404bc4:	cmp	x0, #0x0
  404bc8:	b.eq	404bf4 <method_set_x11_keyboard+0x84>  // b.none
  404bcc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404bd0:	add	x1, x0, #0xd0b
  404bd4:	adrp	x0, 409000 <_fini+0x328>
  404bd8:	add	x4, x0, #0xa80
  404bdc:	mov	w3, #0x246                 	// #582
  404be0:	mov	x2, x1
  404be4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404be8:	add	x1, x0, #0xe98
  404bec:	mov	w0, #0x0                   	// #0
  404bf0:	bl	402430 <log_assert_failed_realm@plt>
  404bf4:	ldr	x0, [sp, #224]
  404bf8:	cmp	x0, #0x0
  404bfc:	cset	w0, eq  // eq = none
  404c00:	and	w0, w0, #0xff
  404c04:	and	x0, x0, #0xff
  404c08:	cmp	x0, #0x0
  404c0c:	b.eq	404c38 <method_set_x11_keyboard+0xc8>  // b.none
  404c10:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404c14:	add	x1, x0, #0xd0b
  404c18:	adrp	x0, 409000 <_fini+0x328>
  404c1c:	add	x4, x0, #0xa80
  404c20:	mov	w3, #0x247                 	// #583
  404c24:	mov	x2, x1
  404c28:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404c2c:	add	x1, x0, #0xfa0
  404c30:	mov	w0, #0x0                   	// #0
  404c34:	bl	402430 <log_assert_failed_realm@plt>
  404c38:	add	x5, sp, #0x7c
  404c3c:	add	x4, sp, #0x78
  404c40:	add	x3, sp, #0xd8
  404c44:	add	x2, sp, #0xd0
  404c48:	add	x1, sp, #0xc8
  404c4c:	add	x0, sp, #0xc0
  404c50:	mov	x7, x5
  404c54:	mov	x6, x4
  404c58:	mov	x5, x3
  404c5c:	mov	x4, x2
  404c60:	mov	x3, x1
  404c64:	mov	x2, x0
  404c68:	adrp	x0, 409000 <_fini+0x328>
  404c6c:	add	x1, x0, #0x270
  404c70:	ldr	x0, [sp, #104]
  404c74:	bl	402440 <sd_bus_message_read@plt>
  404c78:	str	w0, [sp, #128]
  404c7c:	ldr	w0, [sp, #128]
  404c80:	cmp	w0, #0x0
  404c84:	b.ge	404c90 <method_set_x11_keyboard+0x120>  // b.tcont
  404c88:	ldr	w0, [sp, #128]
  404c8c:	b	405318 <method_set_x11_keyboard+0x7a8>
  404c90:	ldr	x0, [sp, #192]
  404c94:	bl	402b88 <empty_to_null>
  404c98:	str	x0, [sp, #192]
  404c9c:	ldr	x0, [sp, #200]
  404ca0:	bl	402b88 <empty_to_null>
  404ca4:	str	x0, [sp, #200]
  404ca8:	ldr	x0, [sp, #208]
  404cac:	bl	402b88 <empty_to_null>
  404cb0:	str	x0, [sp, #208]
  404cb4:	ldr	x0, [sp, #216]
  404cb8:	bl	402b88 <empty_to_null>
  404cbc:	str	x0, [sp, #216]
  404cc0:	ldr	x1, [sp, #104]
  404cc4:	ldr	x0, [sp, #224]
  404cc8:	bl	4067cc <x11_read_data>
  404ccc:	str	w0, [sp, #128]
  404cd0:	ldr	w0, [sp, #128]
  404cd4:	cmp	w0, #0x0
  404cd8:	b.ge	404d70 <method_set_x11_keyboard+0x200>  // b.tcont
  404cdc:	mov	w0, #0x3                   	// #3
  404ce0:	str	w0, [sp, #180]
  404ce4:	ldr	w0, [sp, #128]
  404ce8:	str	w0, [sp, #184]
  404cec:	str	wzr, [sp, #188]
  404cf0:	ldr	w0, [sp, #188]
  404cf4:	bl	4027d0 <log_get_max_level_realm@plt>
  404cf8:	mov	w1, w0
  404cfc:	ldr	w0, [sp, #180]
  404d00:	and	w0, w0, #0x7
  404d04:	cmp	w1, w0
  404d08:	b.lt	404d4c <method_set_x11_keyboard+0x1dc>  // b.tstop
  404d0c:	ldr	w0, [sp, #188]
  404d10:	lsl	w1, w0, #10
  404d14:	ldr	w0, [sp, #180]
  404d18:	orr	w6, w1, w0
  404d1c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404d20:	add	x1, x0, #0xd0b
  404d24:	adrp	x0, 409000 <_fini+0x328>
  404d28:	add	x5, x0, #0x278
  404d2c:	adrp	x0, 409000 <_fini+0x328>
  404d30:	add	x4, x0, #0xa98
  404d34:	mov	w3, #0x254                 	// #596
  404d38:	mov	x2, x1
  404d3c:	ldr	w1, [sp, #184]
  404d40:	mov	w0, w6
  404d44:	bl	402640 <log_internal_realm@plt>
  404d48:	b	404d54 <method_set_x11_keyboard+0x1e4>
  404d4c:	ldr	w0, [sp, #184]
  404d50:	cmp	w0, #0x0
  404d54:	adrp	x0, 409000 <_fini+0x328>
  404d58:	add	x2, x0, #0x2a8
  404d5c:	adrp	x0, 409000 <_fini+0x328>
  404d60:	add	x1, x0, #0x50
  404d64:	ldr	x0, [sp, #88]
  404d68:	bl	402570 <sd_bus_error_setf@plt>
  404d6c:	b	405318 <method_set_x11_keyboard+0x7a8>
  404d70:	ldr	x2, [sp, #192]
  404d74:	ldr	x0, [sp, #224]
  404d78:	ldr	x0, [x0, #144]
  404d7c:	mov	x1, x0
  404d80:	mov	x0, x2
  404d84:	bl	402ad0 <streq_ptr>
  404d88:	and	w0, w0, #0xff
  404d8c:	cmp	w0, #0x0
  404d90:	b.eq	404e10 <method_set_x11_keyboard+0x2a0>  // b.none
  404d94:	ldr	x2, [sp, #200]
  404d98:	ldr	x0, [sp, #224]
  404d9c:	ldr	x0, [x0, #152]
  404da0:	mov	x1, x0
  404da4:	mov	x0, x2
  404da8:	bl	402ad0 <streq_ptr>
  404dac:	and	w0, w0, #0xff
  404db0:	cmp	w0, #0x0
  404db4:	b.eq	404e10 <method_set_x11_keyboard+0x2a0>  // b.none
  404db8:	ldr	x2, [sp, #208]
  404dbc:	ldr	x0, [sp, #224]
  404dc0:	ldr	x0, [x0, #160]
  404dc4:	mov	x1, x0
  404dc8:	mov	x0, x2
  404dcc:	bl	402ad0 <streq_ptr>
  404dd0:	and	w0, w0, #0xff
  404dd4:	cmp	w0, #0x0
  404dd8:	b.eq	404e10 <method_set_x11_keyboard+0x2a0>  // b.none
  404ddc:	ldr	x2, [sp, #216]
  404de0:	ldr	x0, [sp, #224]
  404de4:	ldr	x0, [x0, #168]
  404de8:	mov	x1, x0
  404dec:	mov	x0, x2
  404df0:	bl	402ad0 <streq_ptr>
  404df4:	and	w0, w0, #0xff
  404df8:	cmp	w0, #0x0
  404dfc:	b.eq	404e10 <method_set_x11_keyboard+0x2a0>  // b.none
  404e00:	mov	x1, #0x0                   	// #0
  404e04:	ldr	x0, [sp, #104]
  404e08:	bl	402270 <sd_bus_reply_method_return@plt>
  404e0c:	b	405318 <method_set_x11_keyboard+0x7a8>
  404e10:	ldr	x0, [sp, #192]
  404e14:	cmp	x0, #0x0
  404e18:	b.eq	404e38 <method_set_x11_keyboard+0x2c8>  // b.none
  404e1c:	ldr	x0, [sp, #192]
  404e20:	bl	4024a0 <string_is_safe@plt>
  404e24:	and	w0, w0, #0xff
  404e28:	eor	w0, w0, #0x1
  404e2c:	and	w0, w0, #0xff
  404e30:	cmp	w0, #0x0
  404e34:	b.ne	404eb0 <method_set_x11_keyboard+0x340>  // b.any
  404e38:	ldr	x0, [sp, #200]
  404e3c:	cmp	x0, #0x0
  404e40:	b.eq	404e60 <method_set_x11_keyboard+0x2f0>  // b.none
  404e44:	ldr	x0, [sp, #200]
  404e48:	bl	4024a0 <string_is_safe@plt>
  404e4c:	and	w0, w0, #0xff
  404e50:	eor	w0, w0, #0x1
  404e54:	and	w0, w0, #0xff
  404e58:	cmp	w0, #0x0
  404e5c:	b.ne	404eb0 <method_set_x11_keyboard+0x340>  // b.any
  404e60:	ldr	x0, [sp, #208]
  404e64:	cmp	x0, #0x0
  404e68:	b.eq	404e88 <method_set_x11_keyboard+0x318>  // b.none
  404e6c:	ldr	x0, [sp, #208]
  404e70:	bl	4024a0 <string_is_safe@plt>
  404e74:	and	w0, w0, #0xff
  404e78:	eor	w0, w0, #0x1
  404e7c:	and	w0, w0, #0xff
  404e80:	cmp	w0, #0x0
  404e84:	b.ne	404eb0 <method_set_x11_keyboard+0x340>  // b.any
  404e88:	ldr	x0, [sp, #216]
  404e8c:	cmp	x0, #0x0
  404e90:	b.eq	404ecc <method_set_x11_keyboard+0x35c>  // b.none
  404e94:	ldr	x0, [sp, #216]
  404e98:	bl	4024a0 <string_is_safe@plt>
  404e9c:	and	w0, w0, #0xff
  404ea0:	eor	w0, w0, #0x1
  404ea4:	and	w0, w0, #0xff
  404ea8:	cmp	w0, #0x0
  404eac:	b.eq	404ecc <method_set_x11_keyboard+0x35c>  // b.none
  404eb0:	adrp	x0, 409000 <_fini+0x328>
  404eb4:	add	x2, x0, #0x2d0
  404eb8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404ebc:	add	x1, x0, #0xfc0
  404ec0:	ldr	x0, [sp, #88]
  404ec4:	bl	402570 <sd_bus_error_setf@plt>
  404ec8:	b	405318 <method_set_x11_keyboard+0x7a8>
  404ecc:	ldr	x0, [sp, #200]
  404ed0:	ldr	x1, [sp, #192]
  404ed4:	ldr	x2, [sp, #208]
  404ed8:	ldr	x3, [sp, #216]
  404edc:	bl	404b50 <verify_xkb_rmlvo>
  404ee0:	str	w0, [sp, #128]
  404ee4:	ldr	w0, [sp, #128]
  404ee8:	cmp	w0, #0x0
  404eec:	b.ge	404fe8 <method_set_x11_keyboard+0x478>  // b.tcont
  404ef0:	mov	w0, #0x3                   	// #3
  404ef4:	str	w0, [sp, #168]
  404ef8:	ldr	w0, [sp, #128]
  404efc:	str	w0, [sp, #172]
  404f00:	str	wzr, [sp, #176]
  404f04:	ldr	w0, [sp, #176]
  404f08:	bl	4027d0 <log_get_max_level_realm@plt>
  404f0c:	mov	w1, w0
  404f10:	ldr	w0, [sp, #168]
  404f14:	and	w0, w0, #0x7
  404f18:	cmp	w1, w0
  404f1c:	b.lt	404f9c <method_set_x11_keyboard+0x42c>  // b.tstop
  404f20:	ldr	w0, [sp, #176]
  404f24:	lsl	w1, w0, #10
  404f28:	ldr	w0, [sp, #168]
  404f2c:	orr	w19, w1, w0
  404f30:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404f34:	add	x20, x0, #0xd0b
  404f38:	ldr	x0, [sp, #200]
  404f3c:	bl	402b00 <strempty>
  404f40:	mov	x22, x0
  404f44:	ldr	x0, [sp, #192]
  404f48:	bl	402b00 <strempty>
  404f4c:	mov	x23, x0
  404f50:	ldr	x0, [sp, #208]
  404f54:	bl	402b00 <strempty>
  404f58:	mov	x21, x0
  404f5c:	ldr	x0, [sp, #216]
  404f60:	bl	402b00 <strempty>
  404f64:	str	x0, [sp, #8]
  404f68:	str	x21, [sp]
  404f6c:	mov	x7, x23
  404f70:	mov	x6, x22
  404f74:	adrp	x0, 409000 <_fini+0x328>
  404f78:	add	x5, x0, #0x2f0
  404f7c:	adrp	x0, 409000 <_fini+0x328>
  404f80:	add	x4, x0, #0xa98
  404f84:	mov	w3, #0x266                 	// #614
  404f88:	mov	x2, x20
  404f8c:	ldr	w1, [sp, #172]
  404f90:	mov	w0, w19
  404f94:	bl	402640 <log_internal_realm@plt>
  404f98:	b	404fa4 <method_set_x11_keyboard+0x434>
  404f9c:	ldr	w0, [sp, #172]
  404fa0:	cmp	w0, #0x0
  404fa4:	ldr	w0, [sp, #128]
  404fa8:	cmn	w0, #0x5f
  404fac:	b.ne	404fcc <method_set_x11_keyboard+0x45c>  // b.any
  404fb0:	adrp	x0, 409000 <_fini+0x328>
  404fb4:	add	x2, x0, #0x348
  404fb8:	adrp	x0, 409000 <_fini+0x328>
  404fbc:	add	x1, x0, #0x388
  404fc0:	ldr	x0, [sp, #88]
  404fc4:	bl	402570 <sd_bus_error_setf@plt>
  404fc8:	b	405318 <method_set_x11_keyboard+0x7a8>
  404fcc:	adrp	x0, 409000 <_fini+0x328>
  404fd0:	add	x2, x0, #0x3b0
  404fd4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  404fd8:	add	x1, x0, #0xfc0
  404fdc:	ldr	x0, [sp, #88]
  404fe0:	bl	402520 <sd_bus_error_set@plt>
  404fe4:	b	405318 <method_set_x11_keyboard+0x7a8>
  404fe8:	ldr	w0, [sp, #124]
  404fec:	cmp	w0, #0x0
  404ff0:	cset	w0, ne  // ne = any
  404ff4:	and	w1, w0, #0xff
  404ff8:	ldr	x0, [sp, #224]
  404ffc:	add	x0, x0, #0xd0
  405000:	ldr	x7, [sp, #88]
  405004:	mov	x6, x0
  405008:	mov	w5, #0xffffffff            	// #-1
  40500c:	mov	w4, w1
  405010:	mov	x3, #0x0                   	// #0
  405014:	adrp	x0, 409000 <_fini+0x328>
  405018:	add	x2, x0, #0x1b8
  40501c:	mov	w1, #0x15                  	// #21
  405020:	ldr	x0, [sp, #104]
  405024:	bl	4027c0 <bus_verify_polkit_async@plt>
  405028:	str	w0, [sp, #128]
  40502c:	ldr	w0, [sp, #128]
  405030:	cmp	w0, #0x0
  405034:	b.ge	405040 <method_set_x11_keyboard+0x4d0>  // b.tcont
  405038:	ldr	w0, [sp, #128]
  40503c:	b	405318 <method_set_x11_keyboard+0x7a8>
  405040:	ldr	w0, [sp, #128]
  405044:	cmp	w0, #0x0
  405048:	b.ne	405054 <method_set_x11_keyboard+0x4e4>  // b.any
  40504c:	mov	w0, #0x1                   	// #1
  405050:	b	405318 <method_set_x11_keyboard+0x7a8>
  405054:	ldr	x0, [sp, #224]
  405058:	add	x0, x0, #0x90
  40505c:	ldr	x1, [sp, #192]
  405060:	bl	4023a0 <free_and_strdup@plt>
  405064:	cmp	w0, #0x0
  405068:	b.lt	4050b4 <method_set_x11_keyboard+0x544>  // b.tstop
  40506c:	ldr	x0, [sp, #224]
  405070:	add	x0, x0, #0x98
  405074:	ldr	x1, [sp, #200]
  405078:	bl	4023a0 <free_and_strdup@plt>
  40507c:	cmp	w0, #0x0
  405080:	b.lt	4050b4 <method_set_x11_keyboard+0x544>  // b.tstop
  405084:	ldr	x0, [sp, #224]
  405088:	add	x0, x0, #0xa0
  40508c:	ldr	x1, [sp, #208]
  405090:	bl	4023a0 <free_and_strdup@plt>
  405094:	cmp	w0, #0x0
  405098:	b.lt	4050b4 <method_set_x11_keyboard+0x544>  // b.tstop
  40509c:	ldr	x0, [sp, #224]
  4050a0:	add	x0, x0, #0xa8
  4050a4:	ldr	x1, [sp, #216]
  4050a8:	bl	4023a0 <free_and_strdup@plt>
  4050ac:	cmp	w0, #0x0
  4050b0:	b.ge	4050bc <method_set_x11_keyboard+0x54c>  // b.tcont
  4050b4:	mov	w0, #0xfffffff4            	// #-12
  4050b8:	b	405318 <method_set_x11_keyboard+0x7a8>
  4050bc:	ldr	x0, [sp, #224]
  4050c0:	bl	407210 <x11_write_data>
  4050c4:	str	w0, [sp, #128]
  4050c8:	ldr	w0, [sp, #128]
  4050cc:	cmp	w0, #0x0
  4050d0:	b.ge	405164 <method_set_x11_keyboard+0x5f4>  // b.tcont
  4050d4:	mov	w0, #0x3                   	// #3
  4050d8:	str	w0, [sp, #156]
  4050dc:	ldr	w0, [sp, #128]
  4050e0:	str	w0, [sp, #160]
  4050e4:	str	wzr, [sp, #164]
  4050e8:	ldr	w0, [sp, #164]
  4050ec:	bl	4027d0 <log_get_max_level_realm@plt>
  4050f0:	mov	w1, w0
  4050f4:	ldr	w0, [sp, #156]
  4050f8:	and	w0, w0, #0x7
  4050fc:	cmp	w1, w0
  405100:	b.lt	405144 <method_set_x11_keyboard+0x5d4>  // b.tstop
  405104:	ldr	w0, [sp, #164]
  405108:	lsl	w1, w0, #10
  40510c:	ldr	w0, [sp, #156]
  405110:	orr	w6, w1, w0
  405114:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405118:	add	x1, x0, #0xd0b
  40511c:	adrp	x0, 409000 <_fini+0x328>
  405120:	add	x5, x0, #0x3f0
  405124:	adrp	x0, 409000 <_fini+0x328>
  405128:	add	x4, x0, #0xa98
  40512c:	mov	w3, #0x285                 	// #645
  405130:	mov	x2, x1
  405134:	ldr	w1, [sp, #160]
  405138:	mov	w0, w6
  40513c:	bl	402640 <log_internal_realm@plt>
  405140:	b	40514c <method_set_x11_keyboard+0x5dc>
  405144:	ldr	w0, [sp, #160]
  405148:	cmp	w0, #0x0
  40514c:	adrp	x0, 409000 <_fini+0x328>
  405150:	add	x2, x0, #0x3f0
  405154:	ldr	w1, [sp, #128]
  405158:	ldr	x0, [sp, #88]
  40515c:	bl	402330 <sd_bus_error_set_errnof@plt>
  405160:	b	405318 <method_set_x11_keyboard+0x7a8>
  405164:	mov	w0, #0x6                   	// #6
  405168:	str	w0, [sp, #132]
  40516c:	str	wzr, [sp, #136]
  405170:	str	wzr, [sp, #140]
  405174:	ldr	w0, [sp, #140]
  405178:	bl	4027d0 <log_get_max_level_realm@plt>
  40517c:	mov	w1, w0
  405180:	ldr	w0, [sp, #132]
  405184:	and	w0, w0, #0x7
  405188:	cmp	w1, w0
  40518c:	b.lt	40521c <method_set_x11_keyboard+0x6ac>  // b.tstop
  405190:	ldr	w0, [sp, #140]
  405194:	lsl	w1, w0, #10
  405198:	ldr	w0, [sp, #132]
  40519c:	orr	w19, w1, w0
  4051a0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4051a4:	add	x20, x0, #0xd0b
  4051a8:	ldr	x0, [sp, #224]
  4051ac:	ldr	x0, [x0, #144]
  4051b0:	bl	402b00 <strempty>
  4051b4:	mov	x22, x0
  4051b8:	ldr	x0, [sp, #224]
  4051bc:	ldr	x0, [x0, #152]
  4051c0:	bl	402b00 <strempty>
  4051c4:	mov	x23, x0
  4051c8:	ldr	x0, [sp, #224]
  4051cc:	ldr	x0, [x0, #160]
  4051d0:	bl	402b00 <strempty>
  4051d4:	mov	x21, x0
  4051d8:	ldr	x0, [sp, #224]
  4051dc:	ldr	x0, [x0, #168]
  4051e0:	bl	402b00 <strempty>
  4051e4:	str	x0, [sp, #8]
  4051e8:	str	x21, [sp]
  4051ec:	mov	x7, x23
  4051f0:	mov	x6, x22
  4051f4:	adrp	x0, 409000 <_fini+0x328>
  4051f8:	add	x5, x0, #0x418
  4051fc:	adrp	x0, 409000 <_fini+0x328>
  405200:	add	x4, x0, #0xa98
  405204:	mov	w3, #0x289                 	// #649
  405208:	mov	x2, x20
  40520c:	ldr	w1, [sp, #136]
  405210:	mov	w0, w19
  405214:	bl	402640 <log_internal_realm@plt>
  405218:	b	405224 <method_set_x11_keyboard+0x6b4>
  40521c:	ldr	w0, [sp, #136]
  405220:	cmp	w0, #0x0
  405224:	ldr	x0, [sp, #104]
  405228:	bl	402410 <sd_bus_message_get_bus@plt>
  40522c:	mov	x8, x0
  405230:	mov	x7, #0x0                   	// #0
  405234:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405238:	add	x6, x0, #0xec8
  40523c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405240:	add	x5, x0, #0xed8
  405244:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405248:	add	x4, x0, #0xee8
  40524c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405250:	add	x3, x0, #0xef8
  405254:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405258:	add	x2, x0, #0xf08
  40525c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405260:	add	x1, x0, #0xf20
  405264:	mov	x0, x8
  405268:	bl	402620 <sd_bus_emit_properties_changed@plt>
  40526c:	ldr	w0, [sp, #120]
  405270:	cmp	w0, #0x0
  405274:	b.eq	40530c <method_set_x11_keyboard+0x79c>  // b.none
  405278:	ldr	x1, [sp, #104]
  40527c:	ldr	x0, [sp, #224]
  405280:	bl	403614 <x11_convert_to_vconsole_and_emit>
  405284:	str	w0, [sp, #128]
  405288:	ldr	w0, [sp, #128]
  40528c:	cmp	w0, #0x0
  405290:	b.ge	40530c <method_set_x11_keyboard+0x79c>  // b.tcont
  405294:	mov	w0, #0x3                   	// #3
  405298:	str	w0, [sp, #144]
  40529c:	ldr	w0, [sp, #128]
  4052a0:	str	w0, [sp, #148]
  4052a4:	str	wzr, [sp, #152]
  4052a8:	ldr	w0, [sp, #152]
  4052ac:	bl	4027d0 <log_get_max_level_realm@plt>
  4052b0:	mov	w1, w0
  4052b4:	ldr	w0, [sp, #144]
  4052b8:	and	w0, w0, #0x7
  4052bc:	cmp	w1, w0
  4052c0:	b.lt	405304 <method_set_x11_keyboard+0x794>  // b.tstop
  4052c4:	ldr	w0, [sp, #152]
  4052c8:	lsl	w1, w0, #10
  4052cc:	ldr	w0, [sp, #144]
  4052d0:	orr	w6, w1, w0
  4052d4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4052d8:	add	x1, x0, #0xd0b
  4052dc:	adrp	x0, 409000 <_fini+0x328>
  4052e0:	add	x5, x0, #0x248
  4052e4:	adrp	x0, 409000 <_fini+0x328>
  4052e8:	add	x4, x0, #0xa98
  4052ec:	mov	w3, #0x298                 	// #664
  4052f0:	mov	x2, x1
  4052f4:	ldr	w1, [sp, #148]
  4052f8:	mov	w0, w6
  4052fc:	bl	402640 <log_internal_realm@plt>
  405300:	b	40530c <method_set_x11_keyboard+0x79c>
  405304:	ldr	w0, [sp, #148]
  405308:	cmp	w0, #0x0
  40530c:	mov	x1, #0x0                   	// #0
  405310:	ldr	x0, [sp, #104]
  405314:	bl	402270 <sd_bus_reply_method_return@plt>
  405318:	mov	w1, w0
  40531c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  405320:	add	x0, x0, #0xaa8
  405324:	ldr	x2, [sp, #232]
  405328:	ldr	x0, [x0]
  40532c:	eor	x0, x2, x0
  405330:	cmp	x0, #0x0
  405334:	b.eq	40533c <method_set_x11_keyboard+0x7cc>  // b.none
  405338:	bl	402580 <__stack_chk_fail@plt>
  40533c:	mov	w0, w1
  405340:	ldp	x19, x20, [sp, #32]
  405344:	ldp	x21, x22, [sp, #48]
  405348:	ldr	x23, [sp, #64]
  40534c:	ldp	x29, x30, [sp, #16]
  405350:	add	sp, sp, #0xf0
  405354:	ret

0000000000405358 <connect_bus>:
  405358:	stp	x29, x30, [sp, #-144]!
  40535c:	mov	x29, sp
  405360:	str	x19, [sp, #16]
  405364:	str	x0, [sp, #56]
  405368:	str	x1, [sp, #48]
  40536c:	str	x2, [sp, #40]
  405370:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  405374:	add	x0, x0, #0xaa8
  405378:	ldr	x1, [x0]
  40537c:	str	x1, [sp, #136]
  405380:	mov	x1, #0x0                   	// #0
  405384:	str	xzr, [sp, #120]
  405388:	ldr	x0, [sp, #56]
  40538c:	cmp	x0, #0x0
  405390:	cset	w0, eq  // eq = none
  405394:	and	w0, w0, #0xff
  405398:	and	x0, x0, #0xff
  40539c:	cmp	x0, #0x0
  4053a0:	b.eq	4053cc <connect_bus+0x74>  // b.none
  4053a4:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4053a8:	add	x1, x0, #0xd0b
  4053ac:	adrp	x0, 409000 <_fini+0x328>
  4053b0:	add	x4, x0, #0xab0
  4053b4:	mov	w3, #0x2b1                 	// #689
  4053b8:	mov	x2, x1
  4053bc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4053c0:	add	x1, x0, #0xfa0
  4053c4:	mov	w0, #0x0                   	// #0
  4053c8:	bl	402430 <log_assert_failed_realm@plt>
  4053cc:	ldr	x0, [sp, #48]
  4053d0:	cmp	x0, #0x0
  4053d4:	cset	w0, eq  // eq = none
  4053d8:	and	w0, w0, #0xff
  4053dc:	and	x0, x0, #0xff
  4053e0:	cmp	x0, #0x0
  4053e4:	b.eq	405410 <connect_bus+0xb8>  // b.none
  4053e8:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4053ec:	add	x1, x0, #0xd0b
  4053f0:	adrp	x0, 409000 <_fini+0x328>
  4053f4:	add	x4, x0, #0xab0
  4053f8:	mov	w3, #0x2b2                 	// #690
  4053fc:	mov	x2, x1
  405400:	adrp	x0, 409000 <_fini+0x328>
  405404:	add	x1, x0, #0x4b8
  405408:	mov	w0, #0x0                   	// #0
  40540c:	bl	402430 <log_assert_failed_realm@plt>
  405410:	ldr	x0, [sp, #40]
  405414:	cmp	x0, #0x0
  405418:	cset	w0, eq  // eq = none
  40541c:	and	w0, w0, #0xff
  405420:	and	x0, x0, #0xff
  405424:	cmp	x0, #0x0
  405428:	b.eq	405454 <connect_bus+0xfc>  // b.none
  40542c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405430:	add	x1, x0, #0xd0b
  405434:	adrp	x0, 409000 <_fini+0x328>
  405438:	add	x4, x0, #0xab0
  40543c:	mov	w3, #0x2b3                 	// #691
  405440:	mov	x2, x1
  405444:	adrp	x0, 409000 <_fini+0x328>
  405448:	add	x1, x0, #0x4c0
  40544c:	mov	w0, #0x0                   	// #0
  405450:	bl	402430 <log_assert_failed_realm@plt>
  405454:	add	x0, sp, #0x78
  405458:	bl	402650 <sd_bus_default_system@plt>
  40545c:	str	w0, [sp, #68]
  405460:	ldr	w0, [sp, #68]
  405464:	cmp	w0, #0x0
  405468:	b.ge	4054f8 <connect_bus+0x1a0>  // b.tcont
  40546c:	mov	w0, #0x3                   	// #3
  405470:	str	w0, [sp, #108]
  405474:	ldr	w0, [sp, #68]
  405478:	str	w0, [sp, #112]
  40547c:	str	wzr, [sp, #116]
  405480:	ldr	w0, [sp, #116]
  405484:	bl	4027d0 <log_get_max_level_realm@plt>
  405488:	mov	w1, w0
  40548c:	ldr	w0, [sp, #108]
  405490:	and	w0, w0, #0x7
  405494:	cmp	w1, w0
  405498:	b.lt	4054e0 <connect_bus+0x188>  // b.tstop
  40549c:	ldr	w0, [sp, #116]
  4054a0:	lsl	w1, w0, #10
  4054a4:	ldr	w0, [sp, #108]
  4054a8:	orr	w6, w1, w0
  4054ac:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4054b0:	add	x1, x0, #0xd0b
  4054b4:	adrp	x0, 409000 <_fini+0x328>
  4054b8:	add	x5, x0, #0x4c8
  4054bc:	adrp	x0, 409000 <_fini+0x328>
  4054c0:	add	x4, x0, #0xac0
  4054c4:	mov	w3, #0x2b7                 	// #695
  4054c8:	mov	x2, x1
  4054cc:	ldr	w1, [sp, #112]
  4054d0:	mov	w0, w6
  4054d4:	bl	402640 <log_internal_realm@plt>
  4054d8:	mov	w19, w0
  4054dc:	b	405748 <connect_bus+0x3f0>
  4054e0:	ldr	w0, [sp, #112]
  4054e4:	cmp	w0, #0x0
  4054e8:	cneg	w0, w0, lt  // lt = tstop
  4054ec:	and	w0, w0, #0xff
  4054f0:	neg	w19, w0
  4054f4:	b	405748 <connect_bus+0x3f0>
  4054f8:	ldr	x6, [sp, #120]
  4054fc:	ldr	x5, [sp, #56]
  405500:	adrp	x0, 409000 <_fini+0x328>
  405504:	add	x4, x0, #0x668
  405508:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  40550c:	add	x3, x0, #0xf08
  405510:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405514:	add	x2, x0, #0xf20
  405518:	mov	x1, #0x0                   	// #0
  40551c:	mov	x0, x6
  405520:	bl	402550 <sd_bus_add_object_vtable@plt>
  405524:	str	w0, [sp, #68]
  405528:	ldr	w0, [sp, #68]
  40552c:	cmp	w0, #0x0
  405530:	b.ge	4055c0 <connect_bus+0x268>  // b.tcont
  405534:	mov	w0, #0x3                   	// #3
  405538:	str	w0, [sp, #96]
  40553c:	ldr	w0, [sp, #68]
  405540:	str	w0, [sp, #100]
  405544:	str	wzr, [sp, #104]
  405548:	ldr	w0, [sp, #104]
  40554c:	bl	4027d0 <log_get_max_level_realm@plt>
  405550:	mov	w1, w0
  405554:	ldr	w0, [sp, #96]
  405558:	and	w0, w0, #0x7
  40555c:	cmp	w1, w0
  405560:	b.lt	4055a8 <connect_bus+0x250>  // b.tstop
  405564:	ldr	w0, [sp, #104]
  405568:	lsl	w1, w0, #10
  40556c:	ldr	w0, [sp, #96]
  405570:	orr	w6, w1, w0
  405574:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405578:	add	x1, x0, #0xd0b
  40557c:	adrp	x0, 409000 <_fini+0x328>
  405580:	add	x5, x0, #0x4f0
  405584:	adrp	x0, 409000 <_fini+0x328>
  405588:	add	x4, x0, #0xac0
  40558c:	mov	w3, #0x2bb                 	// #699
  405590:	mov	x2, x1
  405594:	ldr	w1, [sp, #100]
  405598:	mov	w0, w6
  40559c:	bl	402640 <log_internal_realm@plt>
  4055a0:	mov	w19, w0
  4055a4:	b	405748 <connect_bus+0x3f0>
  4055a8:	ldr	w0, [sp, #100]
  4055ac:	cmp	w0, #0x0
  4055b0:	cneg	w0, w0, lt  // lt = tstop
  4055b4:	and	w0, w0, #0xff
  4055b8:	neg	w19, w0
  4055bc:	b	405748 <connect_bus+0x3f0>
  4055c0:	ldr	x6, [sp, #120]
  4055c4:	mov	x5, #0x0                   	// #0
  4055c8:	mov	x4, #0x0                   	// #0
  4055cc:	mov	x3, #0x0                   	// #0
  4055d0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4055d4:	add	x2, x0, #0xf08
  4055d8:	mov	x1, #0x0                   	// #0
  4055dc:	mov	x0, x6
  4055e0:	bl	402300 <sd_bus_request_name_async@plt>
  4055e4:	str	w0, [sp, #68]
  4055e8:	ldr	w0, [sp, #68]
  4055ec:	cmp	w0, #0x0
  4055f0:	b.ge	405680 <connect_bus+0x328>  // b.tcont
  4055f4:	mov	w0, #0x3                   	// #3
  4055f8:	str	w0, [sp, #84]
  4055fc:	ldr	w0, [sp, #68]
  405600:	str	w0, [sp, #88]
  405604:	str	wzr, [sp, #92]
  405608:	ldr	w0, [sp, #92]
  40560c:	bl	4027d0 <log_get_max_level_realm@plt>
  405610:	mov	w1, w0
  405614:	ldr	w0, [sp, #84]
  405618:	and	w0, w0, #0x7
  40561c:	cmp	w1, w0
  405620:	b.lt	405668 <connect_bus+0x310>  // b.tstop
  405624:	ldr	w0, [sp, #92]
  405628:	lsl	w1, w0, #10
  40562c:	ldr	w0, [sp, #84]
  405630:	orr	w6, w1, w0
  405634:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405638:	add	x1, x0, #0xd0b
  40563c:	adrp	x0, 409000 <_fini+0x328>
  405640:	add	x5, x0, #0x510
  405644:	adrp	x0, 409000 <_fini+0x328>
  405648:	add	x4, x0, #0xac0
  40564c:	mov	w3, #0x2bf                 	// #703
  405650:	mov	x2, x1
  405654:	ldr	w1, [sp, #88]
  405658:	mov	w0, w6
  40565c:	bl	402640 <log_internal_realm@plt>
  405660:	mov	w19, w0
  405664:	b	405748 <connect_bus+0x3f0>
  405668:	ldr	w0, [sp, #88]
  40566c:	cmp	w0, #0x0
  405670:	cneg	w0, w0, lt  // lt = tstop
  405674:	and	w0, w0, #0xff
  405678:	neg	w19, w0
  40567c:	b	405748 <connect_bus+0x3f0>
  405680:	ldr	x0, [sp, #120]
  405684:	mov	w2, #0x0                   	// #0
  405688:	ldr	x1, [sp, #48]
  40568c:	bl	402460 <sd_bus_attach_event@plt>
  405690:	str	w0, [sp, #68]
  405694:	ldr	w0, [sp, #68]
  405698:	cmp	w0, #0x0
  40569c:	b.ge	40572c <connect_bus+0x3d4>  // b.tcont
  4056a0:	mov	w0, #0x3                   	// #3
  4056a4:	str	w0, [sp, #72]
  4056a8:	ldr	w0, [sp, #68]
  4056ac:	str	w0, [sp, #76]
  4056b0:	str	wzr, [sp, #80]
  4056b4:	ldr	w0, [sp, #80]
  4056b8:	bl	4027d0 <log_get_max_level_realm@plt>
  4056bc:	mov	w1, w0
  4056c0:	ldr	w0, [sp, #72]
  4056c4:	and	w0, w0, #0x7
  4056c8:	cmp	w1, w0
  4056cc:	b.lt	405714 <connect_bus+0x3bc>  // b.tstop
  4056d0:	ldr	w0, [sp, #80]
  4056d4:	lsl	w1, w0, #10
  4056d8:	ldr	w0, [sp, #72]
  4056dc:	orr	w6, w1, w0
  4056e0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4056e4:	add	x1, x0, #0xd0b
  4056e8:	adrp	x0, 409000 <_fini+0x328>
  4056ec:	add	x5, x0, #0x530
  4056f0:	adrp	x0, 409000 <_fini+0x328>
  4056f4:	add	x4, x0, #0xac0
  4056f8:	mov	w3, #0x2c3                 	// #707
  4056fc:	mov	x2, x1
  405700:	ldr	w1, [sp, #76]
  405704:	mov	w0, w6
  405708:	bl	402640 <log_internal_realm@plt>
  40570c:	mov	w19, w0
  405710:	b	405748 <connect_bus+0x3f0>
  405714:	ldr	w0, [sp, #76]
  405718:	cmp	w0, #0x0
  40571c:	cneg	w0, w0, lt  // lt = tstop
  405720:	and	w0, w0, #0xff
  405724:	neg	w19, w0
  405728:	b	405748 <connect_bus+0x3f0>
  40572c:	ldr	x0, [sp, #120]
  405730:	str	x0, [sp, #128]
  405734:	str	xzr, [sp, #120]
  405738:	ldr	x1, [sp, #128]
  40573c:	ldr	x0, [sp, #40]
  405740:	str	x1, [x0]
  405744:	mov	w19, #0x0                   	// #0
  405748:	add	x0, sp, #0x78
  40574c:	bl	4029dc <sd_bus_flush_close_unrefp>
  405750:	mov	w1, w19
  405754:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  405758:	add	x0, x0, #0xaa8
  40575c:	ldr	x2, [sp, #136]
  405760:	ldr	x0, [x0]
  405764:	eor	x0, x2, x0
  405768:	cmp	x0, #0x0
  40576c:	b.eq	405774 <connect_bus+0x41c>  // b.none
  405770:	bl	402580 <__stack_chk_fail@plt>
  405774:	mov	w0, w1
  405778:	ldr	x19, [sp, #16]
  40577c:	ldp	x29, x30, [sp], #144
  405780:	ret

0000000000405784 <run>:
  405784:	stp	x29, x30, [sp, #-352]!
  405788:	mov	x29, sp
  40578c:	str	x19, [sp, #16]
  405790:	str	w0, [sp, #44]
  405794:	str	x1, [sp, #32]
  405798:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  40579c:	add	x0, x0, #0xaa8
  4057a0:	ldr	x1, [x0]
  4057a4:	str	x1, [sp, #344]
  4057a8:	mov	x1, #0x0                   	// #0
  4057ac:	stp	xzr, xzr, [sp, #128]
  4057b0:	stp	xzr, xzr, [sp, #144]
  4057b4:	stp	xzr, xzr, [sp, #160]
  4057b8:	stp	xzr, xzr, [sp, #176]
  4057bc:	stp	xzr, xzr, [sp, #192]
  4057c0:	stp	xzr, xzr, [sp, #208]
  4057c4:	stp	xzr, xzr, [sp, #224]
  4057c8:	stp	xzr, xzr, [sp, #240]
  4057cc:	stp	xzr, xzr, [sp, #256]
  4057d0:	stp	xzr, xzr, [sp, #272]
  4057d4:	stp	xzr, xzr, [sp, #288]
  4057d8:	stp	xzr, xzr, [sp, #304]
  4057dc:	stp	xzr, xzr, [sp, #320]
  4057e0:	str	xzr, [sp, #336]
  4057e4:	mov	x0, #0xffffffffffffffff    	// #-1
  4057e8:	str	x0, [sp, #136]
  4057ec:	mov	x0, #0xffffffffffffffff    	// #-1
  4057f0:	str	x0, [sp, #264]
  4057f4:	mov	x0, #0xffffffffffffffff    	// #-1
  4057f8:	str	x0, [sp, #312]
  4057fc:	str	xzr, [sp, #112]
  405800:	str	xzr, [sp, #120]
  405804:	bl	4023e0 <log_setup_service@plt>
  405808:	mov	w0, #0x12                  	// #18
  40580c:	bl	402450 <umask@plt>
  405810:	bl	4022b0 <mac_selinux_init@plt>
  405814:	ldr	w0, [sp, #44]
  405818:	cmp	w0, #0x1
  40581c:	b.eq	4058b0 <run+0x12c>  // b.none
  405820:	mov	w0, #0x3                   	// #3
  405824:	str	w0, [sp, #100]
  405828:	mov	w0, #0x16                  	// #22
  40582c:	movk	w0, #0x4000, lsl #16
  405830:	str	w0, [sp, #104]
  405834:	str	wzr, [sp, #108]
  405838:	ldr	w0, [sp, #108]
  40583c:	bl	4027d0 <log_get_max_level_realm@plt>
  405840:	mov	w1, w0
  405844:	ldr	w0, [sp, #100]
  405848:	and	w0, w0, #0x7
  40584c:	cmp	w1, w0
  405850:	b.lt	405898 <run+0x114>  // b.tstop
  405854:	ldr	w0, [sp, #108]
  405858:	lsl	w1, w0, #10
  40585c:	ldr	w0, [sp, #100]
  405860:	orr	w6, w1, w0
  405864:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405868:	add	x1, x0, #0xd0b
  40586c:	adrp	x0, 409000 <_fini+0x328>
  405870:	add	x5, x0, #0x558
  405874:	adrp	x0, 409000 <_fini+0x328>
  405878:	add	x4, x0, #0xad0
  40587c:	mov	w3, #0x2da                 	// #730
  405880:	mov	x2, x1
  405884:	ldr	w1, [sp, #104]
  405888:	mov	w0, w6
  40588c:	bl	402640 <log_internal_realm@plt>
  405890:	mov	w19, w0
  405894:	b	405c0c <run+0x488>
  405898:	ldr	w0, [sp, #104]
  40589c:	cmp	w0, #0x0
  4058a0:	cneg	w0, w0, lt  // lt = tstop
  4058a4:	and	w0, w0, #0xff
  4058a8:	neg	w19, w0
  4058ac:	b	405c0c <run+0x488>
  4058b0:	mov	w4, #0xffffffff            	// #-1
  4058b4:	mov	w3, #0x2                   	// #2
  4058b8:	mov	w2, #0xf                   	// #15
  4058bc:	mov	x1, #0x0                   	// #0
  4058c0:	mov	w0, #0x0                   	// #0
  4058c4:	bl	402490 <sigprocmask_many@plt>
  4058c8:	lsr	w0, w0, #31
  4058cc:	and	w0, w0, #0xff
  4058d0:	and	x0, x0, #0xff
  4058d4:	cmp	x0, #0x0
  4058d8:	b.eq	405904 <run+0x180>  // b.none
  4058dc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  4058e0:	add	x1, x0, #0xd0b
  4058e4:	adrp	x0, 409000 <_fini+0x328>
  4058e8:	add	x4, x0, #0xad8
  4058ec:	mov	w3, #0x2dc                 	// #732
  4058f0:	mov	x2, x1
  4058f4:	adrp	x0, 409000 <_fini+0x328>
  4058f8:	add	x1, x0, #0x580
  4058fc:	mov	w0, #0x0                   	// #0
  405900:	bl	402430 <log_assert_failed_realm@plt>
  405904:	add	x0, sp, #0x70
  405908:	bl	402370 <sd_event_default@plt>
  40590c:	str	w0, [sp, #48]
  405910:	ldr	w0, [sp, #48]
  405914:	cmp	w0, #0x0
  405918:	b.ge	4059a8 <run+0x224>  // b.tcont
  40591c:	mov	w0, #0x3                   	// #3
  405920:	str	w0, [sp, #88]
  405924:	ldr	w0, [sp, #48]
  405928:	str	w0, [sp, #92]
  40592c:	str	wzr, [sp, #96]
  405930:	ldr	w0, [sp, #96]
  405934:	bl	4027d0 <log_get_max_level_realm@plt>
  405938:	mov	w1, w0
  40593c:	ldr	w0, [sp, #88]
  405940:	and	w0, w0, #0x7
  405944:	cmp	w1, w0
  405948:	b.lt	405990 <run+0x20c>  // b.tstop
  40594c:	ldr	w0, [sp, #96]
  405950:	lsl	w1, w0, #10
  405954:	ldr	w0, [sp, #88]
  405958:	orr	w6, w1, w0
  40595c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405960:	add	x1, x0, #0xd0b
  405964:	adrp	x0, 409000 <_fini+0x328>
  405968:	add	x5, x0, #0x5c0
  40596c:	adrp	x0, 409000 <_fini+0x328>
  405970:	add	x4, x0, #0xad0
  405974:	mov	w3, #0x2e0                 	// #736
  405978:	mov	x2, x1
  40597c:	ldr	w1, [sp, #92]
  405980:	mov	w0, w6
  405984:	bl	402640 <log_internal_realm@plt>
  405988:	mov	w19, w0
  40598c:	b	405c0c <run+0x488>
  405990:	ldr	w0, [sp, #92]
  405994:	cmp	w0, #0x0
  405998:	cneg	w0, w0, lt  // lt = tstop
  40599c:	and	w0, w0, #0xff
  4059a0:	neg	w19, w0
  4059a4:	b	405c0c <run+0x488>
  4059a8:	ldr	x0, [sp, #112]
  4059ac:	mov	w1, #0x1                   	// #1
  4059b0:	bl	4022d0 <sd_event_set_watchdog@plt>
  4059b4:	ldr	x0, [sp, #112]
  4059b8:	mov	x4, #0x0                   	// #0
  4059bc:	mov	x3, #0x0                   	// #0
  4059c0:	mov	w2, #0x2                   	// #2
  4059c4:	mov	x1, #0x0                   	// #0
  4059c8:	bl	402750 <sd_event_add_signal@plt>
  4059cc:	str	w0, [sp, #48]
  4059d0:	ldr	w0, [sp, #48]
  4059d4:	cmp	w0, #0x0
  4059d8:	b.ge	405a68 <run+0x2e4>  // b.tcont
  4059dc:	mov	w0, #0x3                   	// #3
  4059e0:	str	w0, [sp, #76]
  4059e4:	ldr	w0, [sp, #48]
  4059e8:	str	w0, [sp, #80]
  4059ec:	str	wzr, [sp, #84]
  4059f0:	ldr	w0, [sp, #84]
  4059f4:	bl	4027d0 <log_get_max_level_realm@plt>
  4059f8:	mov	w1, w0
  4059fc:	ldr	w0, [sp, #76]
  405a00:	and	w0, w0, #0x7
  405a04:	cmp	w1, w0
  405a08:	b.lt	405a50 <run+0x2cc>  // b.tstop
  405a0c:	ldr	w0, [sp, #84]
  405a10:	lsl	w1, w0, #10
  405a14:	ldr	w0, [sp, #76]
  405a18:	orr	w6, w1, w0
  405a1c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405a20:	add	x1, x0, #0xd0b
  405a24:	adrp	x0, 409000 <_fini+0x328>
  405a28:	add	x5, x0, #0x5e8
  405a2c:	adrp	x0, 409000 <_fini+0x328>
  405a30:	add	x4, x0, #0xad0
  405a34:	mov	w3, #0x2e6                 	// #742
  405a38:	mov	x2, x1
  405a3c:	ldr	w1, [sp, #80]
  405a40:	mov	w0, w6
  405a44:	bl	402640 <log_internal_realm@plt>
  405a48:	mov	w19, w0
  405a4c:	b	405c0c <run+0x488>
  405a50:	ldr	w0, [sp, #80]
  405a54:	cmp	w0, #0x0
  405a58:	cneg	w0, w0, lt  // lt = tstop
  405a5c:	and	w0, w0, #0xff
  405a60:	neg	w19, w0
  405a64:	b	405c0c <run+0x488>
  405a68:	ldr	x0, [sp, #112]
  405a6c:	mov	x4, #0x0                   	// #0
  405a70:	mov	x3, #0x0                   	// #0
  405a74:	mov	w2, #0xf                   	// #15
  405a78:	mov	x1, #0x0                   	// #0
  405a7c:	bl	402750 <sd_event_add_signal@plt>
  405a80:	str	w0, [sp, #48]
  405a84:	ldr	w0, [sp, #48]
  405a88:	cmp	w0, #0x0
  405a8c:	b.ge	405b1c <run+0x398>  // b.tcont
  405a90:	mov	w0, #0x3                   	// #3
  405a94:	str	w0, [sp, #64]
  405a98:	ldr	w0, [sp, #48]
  405a9c:	str	w0, [sp, #68]
  405aa0:	str	wzr, [sp, #72]
  405aa4:	ldr	w0, [sp, #72]
  405aa8:	bl	4027d0 <log_get_max_level_realm@plt>
  405aac:	mov	w1, w0
  405ab0:	ldr	w0, [sp, #64]
  405ab4:	and	w0, w0, #0x7
  405ab8:	cmp	w1, w0
  405abc:	b.lt	405b04 <run+0x380>  // b.tstop
  405ac0:	ldr	w0, [sp, #72]
  405ac4:	lsl	w1, w0, #10
  405ac8:	ldr	w0, [sp, #64]
  405acc:	orr	w6, w1, w0
  405ad0:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405ad4:	add	x1, x0, #0xd0b
  405ad8:	adrp	x0, 409000 <_fini+0x328>
  405adc:	add	x5, x0, #0x610
  405ae0:	adrp	x0, 409000 <_fini+0x328>
  405ae4:	add	x4, x0, #0xad0
  405ae8:	mov	w3, #0x2ea                 	// #746
  405aec:	mov	x2, x1
  405af0:	ldr	w1, [sp, #68]
  405af4:	mov	w0, w6
  405af8:	bl	402640 <log_internal_realm@plt>
  405afc:	mov	w19, w0
  405b00:	b	405c0c <run+0x488>
  405b04:	ldr	w0, [sp, #68]
  405b08:	cmp	w0, #0x0
  405b0c:	cneg	w0, w0, lt  // lt = tstop
  405b10:	and	w0, w0, #0xff
  405b14:	neg	w19, w0
  405b18:	b	405c0c <run+0x488>
  405b1c:	ldr	x1, [sp, #112]
  405b20:	add	x2, sp, #0x78
  405b24:	add	x0, sp, #0x80
  405b28:	bl	405358 <connect_bus>
  405b2c:	str	w0, [sp, #48]
  405b30:	ldr	w0, [sp, #48]
  405b34:	cmp	w0, #0x0
  405b38:	b.ge	405b44 <run+0x3c0>  // b.tcont
  405b3c:	ldr	w19, [sp, #48]
  405b40:	b	405c0c <run+0x488>
  405b44:	ldr	x6, [sp, #112]
  405b48:	ldr	x1, [sp, #120]
  405b4c:	mov	x5, #0x0                   	// #0
  405b50:	mov	x4, #0x0                   	// #0
  405b54:	mov	x3, #0xc380                	// #50048
  405b58:	movk	x3, #0x1c9, lsl #16
  405b5c:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405b60:	add	x2, x0, #0xf08
  405b64:	mov	x0, x6
  405b68:	bl	402380 <bus_event_loop_with_idle@plt>
  405b6c:	str	w0, [sp, #48]
  405b70:	ldr	w0, [sp, #48]
  405b74:	cmp	w0, #0x0
  405b78:	b.ge	405c08 <run+0x484>  // b.tcont
  405b7c:	mov	w0, #0x3                   	// #3
  405b80:	str	w0, [sp, #52]
  405b84:	ldr	w0, [sp, #48]
  405b88:	str	w0, [sp, #56]
  405b8c:	str	wzr, [sp, #60]
  405b90:	ldr	w0, [sp, #60]
  405b94:	bl	4027d0 <log_get_max_level_realm@plt>
  405b98:	mov	w1, w0
  405b9c:	ldr	w0, [sp, #52]
  405ba0:	and	w0, w0, #0x7
  405ba4:	cmp	w1, w0
  405ba8:	b.lt	405bf0 <run+0x46c>  // b.tstop
  405bac:	ldr	w0, [sp, #60]
  405bb0:	lsl	w1, w0, #10
  405bb4:	ldr	w0, [sp, #52]
  405bb8:	orr	w6, w1, w0
  405bbc:	adrp	x0, 408000 <find_converted_keymap+0x1cc>
  405bc0:	add	x1, x0, #0xd0b
  405bc4:	adrp	x0, 409000 <_fini+0x328>
  405bc8:	add	x5, x0, #0x638
  405bcc:	adrp	x0, 409000 <_fini+0x328>
  405bd0:	add	x4, x0, #0xad0
  405bd4:	mov	w3, #0x2f2                 	// #754
  405bd8:	mov	x2, x1
  405bdc:	ldr	w1, [sp, #56]
  405be0:	mov	w0, w6
  405be4:	bl	402640 <log_internal_realm@plt>
  405be8:	mov	w19, w0
  405bec:	b	405c0c <run+0x488>
  405bf0:	ldr	w0, [sp, #56]
  405bf4:	cmp	w0, #0x0
  405bf8:	cneg	w0, w0, lt  // lt = tstop
  405bfc:	and	w0, w0, #0xff
  405c00:	neg	w19, w0
  405c04:	b	405c0c <run+0x488>
  405c08:	mov	w19, #0x0                   	// #0
  405c0c:	add	x0, sp, #0x78
  405c10:	bl	4029dc <sd_bus_flush_close_unrefp>
  405c14:	add	x0, sp, #0x70
  405c18:	bl	4029a8 <sd_event_unrefp>
  405c1c:	add	x0, sp, #0x80
  405c20:	bl	40616c <context_clear>
  405c24:	mov	w1, w19
  405c28:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  405c2c:	add	x0, x0, #0xaa8
  405c30:	ldr	x2, [sp, #344]
  405c34:	ldr	x0, [x0]
  405c38:	eor	x0, x2, x0
  405c3c:	cmp	x0, #0x0
  405c40:	b.eq	405c48 <run+0x4c4>  // b.none
  405c44:	bl	402580 <__stack_chk_fail@plt>
  405c48:	mov	w0, w1
  405c4c:	ldr	x19, [sp, #16]
  405c50:	ldp	x29, x30, [sp], #352
  405c54:	ret

0000000000405c58 <main>:
  405c58:	stp	x29, x30, [sp, #-48]!
  405c5c:	mov	x29, sp
  405c60:	str	w0, [sp, #28]
  405c64:	str	x1, [sp, #16]
  405c68:	ldr	x1, [sp, #16]
  405c6c:	ldr	w0, [sp, #28]
  405c70:	bl	402a98 <save_argc_argv>
  405c74:	ldr	x1, [sp, #16]
  405c78:	ldr	w0, [sp, #28]
  405c7c:	bl	405784 <run>
  405c80:	str	w0, [sp, #44]
  405c84:	bl	4025c0 <ask_password_agent_close@plt>
  405c88:	bl	402360 <polkit_agent_close@plt>
  405c8c:	bl	4025d0 <pager_close@plt>
  405c90:	bl	402740 <mac_selinux_finish@plt>
  405c94:	bl	402c2c <static_destruct>
  405c98:	ldr	w0, [sp, #44]
  405c9c:	lsr	w0, w0, #31
  405ca0:	ldp	x29, x30, [sp], #48
  405ca4:	ret

0000000000405ca8 <mfree>:
  405ca8:	stp	x29, x30, [sp, #-32]!
  405cac:	mov	x29, sp
  405cb0:	str	x0, [sp, #24]
  405cb4:	ldr	x0, [sp, #24]
  405cb8:	bl	402710 <free@plt>
  405cbc:	mov	x0, #0x0                   	// #0
  405cc0:	ldp	x29, x30, [sp], #32
  405cc4:	ret

0000000000405cc8 <freep>:
  405cc8:	stp	x29, x30, [sp, #-32]!
  405ccc:	mov	x29, sp
  405cd0:	str	x0, [sp, #24]
  405cd4:	ldr	x0, [sp, #24]
  405cd8:	ldr	x0, [x0]
  405cdc:	bl	402710 <free@plt>
  405ce0:	nop
  405ce4:	ldp	x29, x30, [sp], #32
  405ce8:	ret

0000000000405cec <streq_ptr>:
  405cec:	stp	x29, x30, [sp, #-32]!
  405cf0:	mov	x29, sp
  405cf4:	str	x0, [sp, #24]
  405cf8:	str	x1, [sp, #16]
  405cfc:	ldr	x1, [sp, #16]
  405d00:	ldr	x0, [sp, #24]
  405d04:	bl	402290 <strcmp_ptr@plt>
  405d08:	cmp	w0, #0x0
  405d0c:	cset	w0, eq  // eq = none
  405d10:	and	w0, w0, #0xff
  405d14:	ldp	x29, x30, [sp], #32
  405d18:	ret

0000000000405d1c <strempty>:
  405d1c:	sub	sp, sp, #0x10
  405d20:	str	x0, [sp, #8]
  405d24:	ldr	x0, [sp, #8]
  405d28:	cmp	x0, #0x0
  405d2c:	b.ne	405d38 <strempty+0x1c>  // b.any
  405d30:	adrp	x0, 409000 <_fini+0x328>
  405d34:	add	x0, x0, #0xae0
  405d38:	add	sp, sp, #0x10
  405d3c:	ret

0000000000405d40 <isempty>:
  405d40:	sub	sp, sp, #0x10
  405d44:	str	x0, [sp, #8]
  405d48:	ldr	x0, [sp, #8]
  405d4c:	cmp	x0, #0x0
  405d50:	b.eq	405d64 <isempty+0x24>  // b.none
  405d54:	ldr	x0, [sp, #8]
  405d58:	ldrb	w0, [x0]
  405d5c:	cmp	w0, #0x0
  405d60:	b.ne	405d6c <isempty+0x2c>  // b.any
  405d64:	mov	w0, #0x1                   	// #1
  405d68:	b	405d70 <isempty+0x30>
  405d6c:	mov	w0, #0x0                   	// #0
  405d70:	and	w0, w0, #0x1
  405d74:	and	w0, w0, #0xff
  405d78:	add	sp, sp, #0x10
  405d7c:	ret

0000000000405d80 <empty_to_null>:
  405d80:	stp	x29, x30, [sp, #-32]!
  405d84:	mov	x29, sp
  405d88:	str	x0, [sp, #24]
  405d8c:	ldr	x0, [sp, #24]
  405d90:	bl	405d40 <isempty>
  405d94:	and	w0, w0, #0xff
  405d98:	cmp	w0, #0x0
  405d9c:	b.ne	405da8 <empty_to_null+0x28>  // b.any
  405da0:	ldr	x0, [sp, #24]
  405da4:	b	405dac <empty_to_null+0x2c>
  405da8:	mov	x0, #0x0                   	// #0
  405dac:	ldp	x29, x30, [sp], #32
  405db0:	ret

0000000000405db4 <empty_or_dash>:
  405db4:	sub	sp, sp, #0x10
  405db8:	str	x0, [sp, #8]
  405dbc:	ldr	x0, [sp, #8]
  405dc0:	cmp	x0, #0x0
  405dc4:	b.eq	405dfc <empty_or_dash+0x48>  // b.none
  405dc8:	ldr	x0, [sp, #8]
  405dcc:	ldrb	w0, [x0]
  405dd0:	cmp	w0, #0x0
  405dd4:	b.eq	405dfc <empty_or_dash+0x48>  // b.none
  405dd8:	ldr	x0, [sp, #8]
  405ddc:	ldrb	w0, [x0]
  405de0:	cmp	w0, #0x2d
  405de4:	b.ne	405e04 <empty_or_dash+0x50>  // b.any
  405de8:	ldr	x0, [sp, #8]
  405dec:	add	x0, x0, #0x1
  405df0:	ldrb	w0, [x0]
  405df4:	cmp	w0, #0x0
  405df8:	b.ne	405e04 <empty_or_dash+0x50>  // b.any
  405dfc:	mov	w0, #0x1                   	// #1
  405e00:	b	405e08 <empty_or_dash+0x54>
  405e04:	mov	w0, #0x0                   	// #0
  405e08:	and	w0, w0, #0x1
  405e0c:	and	w0, w0, #0xff
  405e10:	add	sp, sp, #0x10
  405e14:	ret

0000000000405e18 <empty_or_dash_to_null>:
  405e18:	stp	x29, x30, [sp, #-32]!
  405e1c:	mov	x29, sp
  405e20:	str	x0, [sp, #24]
  405e24:	ldr	x0, [sp, #24]
  405e28:	bl	405db4 <empty_or_dash>
  405e2c:	and	w0, w0, #0xff
  405e30:	cmp	w0, #0x0
  405e34:	b.ne	405e40 <empty_or_dash_to_null+0x28>  // b.any
  405e38:	ldr	x0, [sp, #24]
  405e3c:	b	405e44 <empty_or_dash_to_null+0x2c>
  405e40:	mov	x0, #0x0                   	// #0
  405e44:	ldp	x29, x30, [sp], #32
  405e48:	ret

0000000000405e4c <startswith>:
  405e4c:	stp	x29, x30, [sp, #-48]!
  405e50:	mov	x29, sp
  405e54:	str	x0, [sp, #24]
  405e58:	str	x1, [sp, #16]
  405e5c:	ldr	x0, [sp, #16]
  405e60:	bl	402780 <strlen@plt>
  405e64:	str	x0, [sp, #40]
  405e68:	ldr	x2, [sp, #40]
  405e6c:	ldr	x1, [sp, #16]
  405e70:	ldr	x0, [sp, #24]
  405e74:	bl	402470 <strncmp@plt>
  405e78:	cmp	w0, #0x0
  405e7c:	b.ne	405e90 <startswith+0x44>  // b.any
  405e80:	ldr	x1, [sp, #24]
  405e84:	ldr	x0, [sp, #40]
  405e88:	add	x0, x1, x0
  405e8c:	b	405e94 <startswith+0x48>
  405e90:	mov	x0, #0x0                   	// #0
  405e94:	ldp	x29, x30, [sp], #48
  405e98:	ret

0000000000405e9c <fclosep>:
  405e9c:	stp	x29, x30, [sp, #-32]!
  405ea0:	mov	x29, sp
  405ea4:	str	x0, [sp, #24]
  405ea8:	ldr	x0, [sp, #24]
  405eac:	ldr	x0, [x0]
  405eb0:	bl	402200 <safe_fclose@plt>
  405eb4:	nop
  405eb8:	ldp	x29, x30, [sp], #32
  405ebc:	ret

0000000000405ec0 <read_line>:
  405ec0:	stp	x29, x30, [sp, #-48]!
  405ec4:	mov	x29, sp
  405ec8:	str	x0, [sp, #40]
  405ecc:	str	x1, [sp, #32]
  405ed0:	str	x2, [sp, #24]
  405ed4:	ldr	x3, [sp, #24]
  405ed8:	mov	w2, #0x0                   	// #0
  405edc:	ldr	x1, [sp, #32]
  405ee0:	ldr	x0, [sp, #40]
  405ee4:	bl	402210 <read_line_full@plt>
  405ee8:	ldp	x29, x30, [sp], #48
  405eec:	ret

0000000000405ef0 <strv_freep>:
  405ef0:	stp	x29, x30, [sp, #-32]!
  405ef4:	mov	x29, sp
  405ef8:	str	x0, [sp, #24]
  405efc:	ldr	x0, [sp, #24]
  405f00:	ldr	x0, [x0]
  405f04:	cmp	x0, #0x0
  405f08:	b.eq	405f18 <strv_freep+0x28>  // b.none
  405f0c:	ldr	x0, [sp, #24]
  405f10:	ldr	x0, [x0]
  405f14:	bl	402530 <strv_free@plt>
  405f18:	nop
  405f1c:	ldp	x29, x30, [sp], #32
  405f20:	ret

0000000000405f24 <strv_isempty>:
  405f24:	sub	sp, sp, #0x10
  405f28:	str	x0, [sp, #8]
  405f2c:	ldr	x0, [sp, #8]
  405f30:	cmp	x0, #0x0
  405f34:	b.eq	405f48 <strv_isempty+0x24>  // b.none
  405f38:	ldr	x0, [sp, #8]
  405f3c:	ldr	x0, [x0]
  405f40:	cmp	x0, #0x0
  405f44:	b.ne	405f50 <strv_isempty+0x2c>  // b.any
  405f48:	mov	w0, #0x1                   	// #1
  405f4c:	b	405f54 <strv_isempty+0x30>
  405f50:	mov	w0, #0x0                   	// #0
  405f54:	and	w0, w0, #0x1
  405f58:	and	w0, w0, #0xff
  405f5c:	add	sp, sp, #0x10
  405f60:	ret

0000000000405f64 <startswith_comma>:
  405f64:	stp	x29, x30, [sp, #-48]!
  405f68:	mov	x29, sp
  405f6c:	str	x0, [sp, #24]
  405f70:	str	x1, [sp, #16]
  405f74:	ldr	x1, [sp, #16]
  405f78:	ldr	x0, [sp, #24]
  405f7c:	bl	405e4c <startswith>
  405f80:	str	x0, [sp, #24]
  405f84:	ldr	x0, [sp, #24]
  405f88:	cmp	x0, #0x0
  405f8c:	b.ne	405f98 <startswith_comma+0x34>  // b.any
  405f90:	mov	w0, #0x0                   	// #0
  405f94:	b	405fc8 <startswith_comma+0x64>
  405f98:	strb	wzr, [sp, #47]
  405f9c:	ldr	x0, [sp, #24]
  405fa0:	ldrb	w0, [x0]
  405fa4:	cmp	w0, #0x0
  405fa8:	b.eq	405fb4 <startswith_comma+0x50>  // b.none
  405fac:	cmp	w0, #0x2c
  405fb0:	b.ne	405fbc <startswith_comma+0x58>  // b.any
  405fb4:	mov	w0, #0x1                   	// #1
  405fb8:	strb	w0, [sp, #47]
  405fbc:	nop
  405fc0:	ldrb	w0, [sp, #47]
  405fc4:	nop
  405fc8:	ldp	x29, x30, [sp], #48
  405fcc:	ret

0000000000405fd0 <systemd_kbd_model_map>:
  405fd0:	stp	x29, x30, [sp, #-32]!
  405fd4:	mov	x29, sp
  405fd8:	adrp	x0, 409000 <_fini+0x328>
  405fdc:	add	x0, x0, #0xae8
  405fe0:	bl	4026b0 <getenv@plt>
  405fe4:	str	x0, [sp, #24]
  405fe8:	ldr	x0, [sp, #24]
  405fec:	cmp	x0, #0x0
  405ff0:	b.eq	405ffc <systemd_kbd_model_map+0x2c>  // b.none
  405ff4:	ldr	x0, [sp, #24]
  405ff8:	b	406004 <systemd_kbd_model_map+0x34>
  405ffc:	adrp	x0, 409000 <_fini+0x328>
  406000:	add	x0, x0, #0xb00
  406004:	ldp	x29, x30, [sp], #32
  406008:	ret

000000000040600c <systemd_language_fallback_map>:
  40600c:	stp	x29, x30, [sp, #-32]!
  406010:	mov	x29, sp
  406014:	adrp	x0, 409000 <_fini+0x328>
  406018:	add	x0, x0, #0xb28
  40601c:	bl	4026b0 <getenv@plt>
  406020:	str	x0, [sp, #24]
  406024:	ldr	x0, [sp, #24]
  406028:	cmp	x0, #0x0
  40602c:	b.eq	406038 <systemd_language_fallback_map+0x2c>  // b.none
  406030:	ldr	x0, [sp, #24]
  406034:	b	406040 <systemd_language_fallback_map+0x34>
  406038:	adrp	x0, 409000 <_fini+0x328>
  40603c:	add	x0, x0, #0xb48
  406040:	ldp	x29, x30, [sp], #32
  406044:	ret

0000000000406048 <context_free_x11>:
  406048:	stp	x29, x30, [sp, #-32]!
  40604c:	mov	x29, sp
  406050:	str	x0, [sp, #24]
  406054:	ldr	x0, [sp, #24]
  406058:	ldr	x0, [x0, #144]
  40605c:	bl	405ca8 <mfree>
  406060:	mov	x1, x0
  406064:	ldr	x0, [sp, #24]
  406068:	str	x1, [x0, #144]
  40606c:	ldr	x0, [sp, #24]
  406070:	ldr	x0, [x0, #168]
  406074:	bl	405ca8 <mfree>
  406078:	mov	x1, x0
  40607c:	ldr	x0, [sp, #24]
  406080:	str	x1, [x0, #168]
  406084:	ldr	x0, [sp, #24]
  406088:	ldr	x0, [x0, #152]
  40608c:	bl	405ca8 <mfree>
  406090:	mov	x1, x0
  406094:	ldr	x0, [sp, #24]
  406098:	str	x1, [x0, #152]
  40609c:	ldr	x0, [sp, #24]
  4060a0:	ldr	x0, [x0, #160]
  4060a4:	bl	405ca8 <mfree>
  4060a8:	mov	x1, x0
  4060ac:	ldr	x0, [sp, #24]
  4060b0:	str	x1, [x0, #160]
  4060b4:	nop
  4060b8:	ldp	x29, x30, [sp], #32
  4060bc:	ret

00000000004060c0 <context_free_vconsole>:
  4060c0:	stp	x29, x30, [sp, #-32]!
  4060c4:	mov	x29, sp
  4060c8:	str	x0, [sp, #24]
  4060cc:	ldr	x0, [sp, #24]
  4060d0:	ldr	x0, [x0, #192]
  4060d4:	bl	405ca8 <mfree>
  4060d8:	mov	x1, x0
  4060dc:	ldr	x0, [sp, #24]
  4060e0:	str	x1, [x0, #192]
  4060e4:	ldr	x0, [sp, #24]
  4060e8:	ldr	x0, [x0, #200]
  4060ec:	bl	405ca8 <mfree>
  4060f0:	mov	x1, x0
  4060f4:	ldr	x0, [sp, #24]
  4060f8:	str	x1, [x0, #200]
  4060fc:	nop
  406100:	ldp	x29, x30, [sp], #32
  406104:	ret

0000000000406108 <context_free_locale>:
  406108:	stp	x29, x30, [sp, #-48]!
  40610c:	mov	x29, sp
  406110:	str	x0, [sp, #24]
  406114:	str	wzr, [sp, #44]
  406118:	b	406150 <context_free_locale+0x48>
  40611c:	ldr	x0, [sp, #24]
  406120:	ldrsw	x1, [sp, #44]
  406124:	add	x1, x1, #0x2
  406128:	ldr	x0, [x0, x1, lsl #3]
  40612c:	bl	405ca8 <mfree>
  406130:	mov	x2, x0
  406134:	ldr	x0, [sp, #24]
  406138:	ldrsw	x1, [sp, #44]
  40613c:	add	x1, x1, #0x2
  406140:	str	x2, [x0, x1, lsl #3]
  406144:	ldr	w0, [sp, #44]
  406148:	add	w0, w0, #0x1
  40614c:	str	w0, [sp, #44]
  406150:	ldr	w0, [sp, #44]
  406154:	cmp	w0, #0xd
  406158:	b.le	40611c <context_free_locale+0x14>
  40615c:	nop
  406160:	nop
  406164:	ldp	x29, x30, [sp], #48
  406168:	ret

000000000040616c <context_clear>:
  40616c:	stp	x29, x30, [sp, #-32]!
  406170:	mov	x29, sp
  406174:	str	x0, [sp, #24]
  406178:	ldr	x0, [sp, #24]
  40617c:	bl	406108 <context_free_locale>
  406180:	ldr	x0, [sp, #24]
  406184:	bl	406048 <context_free_x11>
  406188:	ldr	x0, [sp, #24]
  40618c:	bl	4060c0 <context_free_vconsole>
  406190:	ldr	x0, [sp, #24]
  406194:	ldr	x0, [x0]
  406198:	bl	4022e0 <sd_bus_message_unref@plt>
  40619c:	ldr	x0, [sp, #24]
  4061a0:	ldr	x0, [x0, #128]
  4061a4:	bl	4022e0 <sd_bus_message_unref@plt>
  4061a8:	ldr	x0, [sp, #24]
  4061ac:	ldr	x0, [x0, #176]
  4061b0:	bl	4022e0 <sd_bus_message_unref@plt>
  4061b4:	ldr	x0, [sp, #24]
  4061b8:	ldr	x0, [x0, #208]
  4061bc:	bl	4023b0 <bus_verify_polkit_async_registry_free@plt>
  4061c0:	nop
  4061c4:	ldp	x29, x30, [sp], #32
  4061c8:	ret

00000000004061cc <locale_simplify>:
  4061cc:	stp	x29, x30, [sp, #-64]!
  4061d0:	mov	x29, sp
  4061d4:	str	x19, [sp, #16]
  4061d8:	str	x0, [sp, #40]
  4061dc:	mov	w0, #0x1                   	// #1
  4061e0:	str	w0, [sp, #60]
  4061e4:	b	40627c <locale_simplify+0xb0>
  4061e8:	ldrsw	x0, [sp, #60]
  4061ec:	lsl	x0, x0, #3
  4061f0:	ldr	x1, [sp, #40]
  4061f4:	add	x0, x1, x0
  4061f8:	ldr	x0, [x0]
  4061fc:	bl	405d40 <isempty>
  406200:	and	w0, w0, #0xff
  406204:	cmp	w0, #0x0
  406208:	b.ne	406240 <locale_simplify+0x74>  // b.any
  40620c:	ldr	x0, [sp, #40]
  406210:	ldr	x2, [x0]
  406214:	ldrsw	x0, [sp, #60]
  406218:	lsl	x0, x0, #3
  40621c:	ldr	x1, [sp, #40]
  406220:	add	x0, x1, x0
  406224:	ldr	x0, [x0]
  406228:	mov	x1, x0
  40622c:	mov	x0, x2
  406230:	bl	405cec <streq_ptr>
  406234:	and	w0, w0, #0xff
  406238:	cmp	w0, #0x0
  40623c:	b.eq	406270 <locale_simplify+0xa4>  // b.none
  406240:	ldrsw	x0, [sp, #60]
  406244:	lsl	x0, x0, #3
  406248:	ldr	x1, [sp, #40]
  40624c:	add	x0, x1, x0
  406250:	ldr	x2, [x0]
  406254:	ldrsw	x0, [sp, #60]
  406258:	lsl	x0, x0, #3
  40625c:	ldr	x1, [sp, #40]
  406260:	add	x19, x1, x0
  406264:	mov	x0, x2
  406268:	bl	405ca8 <mfree>
  40626c:	str	x0, [x19]
  406270:	ldr	w0, [sp, #60]
  406274:	add	w0, w0, #0x1
  406278:	str	w0, [sp, #60]
  40627c:	ldr	w0, [sp, #60]
  406280:	cmp	w0, #0xd
  406284:	b.le	4061e8 <locale_simplify+0x1c>
  406288:	nop
  40628c:	nop
  406290:	ldr	x19, [sp, #16]
  406294:	ldp	x29, x30, [sp], #64
  406298:	ret

000000000040629c <locale_read_data>:
  40629c:	sub	sp, sp, #0x190
  4062a0:	stp	x29, x30, [sp, #192]
  4062a4:	add	x29, sp, #0xc0
  4062a8:	str	x19, [sp, #208]
  4062ac:	str	x0, [sp, #232]
  4062b0:	str	x1, [sp, #224]
  4062b4:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4062b8:	add	x0, x0, #0xaa8
  4062bc:	ldr	x1, [x0]
  4062c0:	str	x1, [sp, #392]
  4062c4:	mov	x1, #0x0                   	// #0
  4062c8:	ldr	x0, [sp, #224]
  4062cc:	cmp	x0, #0x0
  4062d0:	b.eq	406310 <locale_read_data+0x74>  // b.none
  4062d4:	ldr	x0, [sp, #232]
  4062d8:	ldr	x0, [x0]
  4062dc:	ldr	x1, [sp, #224]
  4062e0:	cmp	x1, x0
  4062e4:	b.ne	4062f0 <locale_read_data+0x54>  // b.any
  4062e8:	mov	w0, #0x0                   	// #0
  4062ec:	b	4065f8 <locale_read_data+0x35c>
  4062f0:	ldr	x0, [sp, #232]
  4062f4:	ldr	x0, [x0]
  4062f8:	bl	4022e0 <sd_bus_message_unref@plt>
  4062fc:	ldr	x0, [sp, #224]
  406300:	bl	402790 <sd_bus_message_ref@plt>
  406304:	mov	x1, x0
  406308:	ldr	x0, [sp, #232]
  40630c:	str	x1, [x0]
  406310:	add	x0, sp, #0x108
  406314:	mov	x1, x0
  406318:	adrp	x0, 409000 <_fini+0x328>
  40631c:	add	x0, x0, #0xb78
  406320:	bl	408cc8 <stat64>
  406324:	str	w0, [sp, #244]
  406328:	ldr	w0, [sp, #244]
  40632c:	cmp	w0, #0x0
  406330:	b.ge	406354 <locale_read_data+0xb8>  // b.tcont
  406334:	bl	402510 <__errno_location@plt>
  406338:	ldr	w0, [x0]
  40633c:	cmp	w0, #0x2
  406340:	b.eq	406354 <locale_read_data+0xb8>  // b.none
  406344:	bl	402510 <__errno_location@plt>
  406348:	ldr	w0, [x0]
  40634c:	neg	w0, w0
  406350:	b	4065f8 <locale_read_data+0x35c>
  406354:	ldr	w0, [sp, #244]
  406358:	cmp	w0, #0x0
  40635c:	b.lt	406520 <locale_read_data+0x284>  // b.tstop
  406360:	add	x0, sp, #0x108
  406364:	add	x0, x0, #0x58
  406368:	bl	4026e0 <timespec_load@plt>
  40636c:	str	x0, [sp, #256]
  406370:	ldr	x0, [sp, #232]
  406374:	ldr	x0, [x0, #8]
  406378:	cmn	x0, #0x1
  40637c:	b.eq	40639c <locale_read_data+0x100>  // b.none
  406380:	ldr	x0, [sp, #232]
  406384:	ldr	x0, [x0, #8]
  406388:	ldr	x1, [sp, #256]
  40638c:	cmp	x1, x0
  406390:	b.ne	40639c <locale_read_data+0x100>  // b.any
  406394:	mov	w0, #0x0                   	// #0
  406398:	b	4065f8 <locale_read_data+0x35c>
  40639c:	ldr	x0, [sp, #232]
  4063a0:	ldr	x1, [sp, #256]
  4063a4:	str	x1, [x0, #8]
  4063a8:	ldr	x0, [sp, #232]
  4063ac:	bl	406108 <context_free_locale>
  4063b0:	ldr	x0, [sp, #232]
  4063b4:	add	x11, x0, #0x10
  4063b8:	ldr	x0, [sp, #232]
  4063bc:	add	x12, x0, #0x18
  4063c0:	ldr	x0, [sp, #232]
  4063c4:	add	x13, x0, #0x20
  4063c8:	ldr	x0, [sp, #232]
  4063cc:	add	x0, x0, #0x28
  4063d0:	ldr	x1, [sp, #232]
  4063d4:	add	x1, x1, #0x30
  4063d8:	ldr	x2, [sp, #232]
  4063dc:	add	x2, x2, #0x38
  4063e0:	ldr	x3, [sp, #232]
  4063e4:	add	x3, x3, #0x40
  4063e8:	ldr	x4, [sp, #232]
  4063ec:	add	x4, x4, #0x48
  4063f0:	ldr	x5, [sp, #232]
  4063f4:	add	x5, x5, #0x50
  4063f8:	ldr	x6, [sp, #232]
  4063fc:	add	x6, x6, #0x58
  406400:	ldr	x7, [sp, #232]
  406404:	add	x7, x7, #0x60
  406408:	ldr	x8, [sp, #232]
  40640c:	add	x8, x8, #0x68
  406410:	ldr	x9, [sp, #232]
  406414:	add	x9, x9, #0x70
  406418:	ldr	x10, [sp, #232]
  40641c:	add	x10, x10, #0x78
  406420:	str	xzr, [sp, #176]
  406424:	str	x10, [sp, #168]
  406428:	adrp	x10, 409000 <_fini+0x328>
  40642c:	add	x10, x10, #0xbb8
  406430:	str	x10, [sp, #160]
  406434:	str	x9, [sp, #152]
  406438:	adrp	x9, 409000 <_fini+0x328>
  40643c:	add	x9, x9, #0xbd0
  406440:	str	x9, [sp, #144]
  406444:	str	x8, [sp, #136]
  406448:	adrp	x8, 409000 <_fini+0x328>
  40644c:	add	x8, x8, #0xbe0
  406450:	str	x8, [sp, #128]
  406454:	str	x7, [sp, #120]
  406458:	adrp	x7, 409000 <_fini+0x328>
  40645c:	add	x7, x7, #0xbf0
  406460:	str	x7, [sp, #112]
  406464:	str	x6, [sp, #104]
  406468:	adrp	x6, 409000 <_fini+0x328>
  40646c:	add	x6, x6, #0xc00
  406470:	str	x6, [sp, #96]
  406474:	str	x5, [sp, #88]
  406478:	adrp	x5, 409000 <_fini+0x328>
  40647c:	add	x5, x5, #0xc08
  406480:	str	x5, [sp, #80]
  406484:	str	x4, [sp, #72]
  406488:	adrp	x4, 409000 <_fini+0x328>
  40648c:	add	x4, x4, #0xc18
  406490:	str	x4, [sp, #64]
  406494:	str	x3, [sp, #56]
  406498:	adrp	x3, 409000 <_fini+0x328>
  40649c:	add	x3, x3, #0xc28
  4064a0:	str	x3, [sp, #48]
  4064a4:	str	x2, [sp, #40]
  4064a8:	adrp	x2, 409000 <_fini+0x328>
  4064ac:	add	x2, x2, #0xc38
  4064b0:	str	x2, [sp, #32]
  4064b4:	str	x1, [sp, #24]
  4064b8:	adrp	x1, 409000 <_fini+0x328>
  4064bc:	add	x1, x1, #0xc48
  4064c0:	str	x1, [sp, #16]
  4064c4:	str	x0, [sp, #8]
  4064c8:	adrp	x0, 409000 <_fini+0x328>
  4064cc:	add	x0, x0, #0xc50
  4064d0:	str	x0, [sp]
  4064d4:	mov	x7, x13
  4064d8:	adrp	x0, 409000 <_fini+0x328>
  4064dc:	add	x6, x0, #0xb90
  4064e0:	mov	x5, x12
  4064e4:	adrp	x0, 409000 <_fini+0x328>
  4064e8:	add	x4, x0, #0xba0
  4064ec:	mov	x3, x11
  4064f0:	adrp	x0, 409000 <_fini+0x328>
  4064f4:	add	x2, x0, #0xbb0
  4064f8:	adrp	x0, 409000 <_fini+0x328>
  4064fc:	add	x1, x0, #0xb78
  406500:	mov	x0, #0x0                   	// #0
  406504:	bl	402540 <parse_env_file_sentinel@plt>
  406508:	str	w0, [sp, #244]
  40650c:	ldr	w0, [sp, #244]
  406510:	cmp	w0, #0x0
  406514:	b.ge	4065e8 <locale_read_data+0x34c>  // b.tcont
  406518:	ldr	w0, [sp, #244]
  40651c:	b	4065f8 <locale_read_data+0x35c>
  406520:	ldr	x0, [sp, #232]
  406524:	mov	x1, #0xffffffffffffffff    	// #-1
  406528:	str	x1, [x0, #8]
  40652c:	ldr	x0, [sp, #232]
  406530:	bl	406108 <context_free_locale>
  406534:	str	wzr, [sp, #240]
  406538:	b	4065dc <locale_read_data+0x340>
  40653c:	ldr	w0, [sp, #240]
  406540:	bl	402400 <locale_variable_to_string@plt>
  406544:	str	x0, [sp, #248]
  406548:	ldr	x0, [sp, #248]
  40654c:	cmp	x0, #0x0
  406550:	cset	w0, eq  // eq = none
  406554:	and	w0, w0, #0xff
  406558:	and	x0, x0, #0xff
  40655c:	cmp	x0, #0x0
  406560:	b.eq	40658c <locale_read_data+0x2f0>  // b.none
  406564:	adrp	x0, 409000 <_fini+0x328>
  406568:	add	x1, x0, #0xc63
  40656c:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  406570:	add	x4, x0, #0x208
  406574:	mov	w3, #0x94                  	// #148
  406578:	mov	x2, x1
  40657c:	adrp	x0, 409000 <_fini+0x328>
  406580:	add	x1, x0, #0xc80
  406584:	mov	w0, #0x0                   	// #0
  406588:	bl	402430 <log_assert_failed_realm@plt>
  40658c:	ldrsw	x0, [sp, #240]
  406590:	add	x0, x0, #0x2
  406594:	lsl	x0, x0, #3
  406598:	ldr	x1, [sp, #232]
  40659c:	add	x19, x1, x0
  4065a0:	ldr	x0, [sp, #248]
  4065a4:	bl	4026b0 <getenv@plt>
  4065a8:	bl	405d80 <empty_to_null>
  4065ac:	mov	x1, x0
  4065b0:	mov	x0, x19
  4065b4:	bl	4023a0 <free_and_strdup@plt>
  4065b8:	str	w0, [sp, #244]
  4065bc:	ldr	w0, [sp, #244]
  4065c0:	cmp	w0, #0x0
  4065c4:	b.ge	4065d0 <locale_read_data+0x334>  // b.tcont
  4065c8:	ldr	w0, [sp, #244]
  4065cc:	b	4065f8 <locale_read_data+0x35c>
  4065d0:	ldr	w0, [sp, #240]
  4065d4:	add	w0, w0, #0x1
  4065d8:	str	w0, [sp, #240]
  4065dc:	ldr	w0, [sp, #240]
  4065e0:	cmp	w0, #0xd
  4065e4:	b.le	40653c <locale_read_data+0x2a0>
  4065e8:	ldr	x0, [sp, #232]
  4065ec:	add	x0, x0, #0x10
  4065f0:	bl	4061cc <locale_simplify>
  4065f4:	mov	w0, #0x0                   	// #0
  4065f8:	mov	w1, w0
  4065fc:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  406600:	add	x0, x0, #0xaa8
  406604:	ldr	x2, [sp, #392]
  406608:	ldr	x0, [x0]
  40660c:	eor	x0, x2, x0
  406610:	cmp	x0, #0x0
  406614:	b.eq	40661c <locale_read_data+0x380>  // b.none
  406618:	bl	402580 <__stack_chk_fail@plt>
  40661c:	mov	w0, w1
  406620:	ldr	x19, [sp, #208]
  406624:	ldp	x29, x30, [sp, #192]
  406628:	add	sp, sp, #0x190
  40662c:	ret

0000000000406630 <vconsole_read_data>:
  406630:	stp	x29, x30, [sp, #-192]!
  406634:	mov	x29, sp
  406638:	str	x0, [sp, #24]
  40663c:	str	x1, [sp, #16]
  406640:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  406644:	add	x0, x0, #0xaa8
  406648:	ldr	x1, [x0]
  40664c:	str	x1, [sp, #184]
  406650:	mov	x1, #0x0                   	// #0
  406654:	ldr	x0, [sp, #16]
  406658:	cmp	x0, #0x0
  40665c:	b.eq	40669c <vconsole_read_data+0x6c>  // b.none
  406660:	ldr	x0, [sp, #24]
  406664:	ldr	x0, [x0, #176]
  406668:	ldr	x1, [sp, #16]
  40666c:	cmp	x1, x0
  406670:	b.ne	40667c <vconsole_read_data+0x4c>  // b.any
  406674:	mov	w0, #0x0                   	// #0
  406678:	b	40679c <vconsole_read_data+0x16c>
  40667c:	ldr	x0, [sp, #24]
  406680:	ldr	x0, [x0, #176]
  406684:	bl	4022e0 <sd_bus_message_unref@plt>
  406688:	ldr	x0, [sp, #16]
  40668c:	bl	402790 <sd_bus_message_ref@plt>
  406690:	mov	x1, x0
  406694:	ldr	x0, [sp, #24]
  406698:	str	x1, [x0, #176]
  40669c:	add	x0, sp, #0x38
  4066a0:	mov	x1, x0
  4066a4:	adrp	x0, 409000 <_fini+0x328>
  4066a8:	add	x0, x0, #0xc88
  4066ac:	bl	408cc8 <stat64>
  4066b0:	cmp	w0, #0x0
  4066b4:	b.ge	4066f4 <vconsole_read_data+0xc4>  // b.tcont
  4066b8:	bl	402510 <__errno_location@plt>
  4066bc:	ldr	w0, [x0]
  4066c0:	cmp	w0, #0x2
  4066c4:	b.eq	4066d8 <vconsole_read_data+0xa8>  // b.none
  4066c8:	bl	402510 <__errno_location@plt>
  4066cc:	ldr	w0, [x0]
  4066d0:	neg	w0, w0
  4066d4:	b	40679c <vconsole_read_data+0x16c>
  4066d8:	ldr	x0, [sp, #24]
  4066dc:	mov	x1, #0xffffffffffffffff    	// #-1
  4066e0:	str	x1, [x0, #184]
  4066e4:	ldr	x0, [sp, #24]
  4066e8:	bl	4060c0 <context_free_vconsole>
  4066ec:	mov	w0, #0x0                   	// #0
  4066f0:	b	40679c <vconsole_read_data+0x16c>
  4066f4:	add	x0, sp, #0x38
  4066f8:	add	x0, x0, #0x58
  4066fc:	bl	4026e0 <timespec_load@plt>
  406700:	str	x0, [sp, #48]
  406704:	ldr	x0, [sp, #24]
  406708:	ldr	x0, [x0, #184]
  40670c:	cmn	x0, #0x1
  406710:	b.eq	406730 <vconsole_read_data+0x100>  // b.none
  406714:	ldr	x0, [sp, #24]
  406718:	ldr	x0, [x0, #184]
  40671c:	ldr	x1, [sp, #48]
  406720:	cmp	x1, x0
  406724:	b.ne	406730 <vconsole_read_data+0x100>  // b.any
  406728:	mov	w0, #0x0                   	// #0
  40672c:	b	40679c <vconsole_read_data+0x16c>
  406730:	ldr	x0, [sp, #24]
  406734:	ldr	x1, [sp, #48]
  406738:	str	x1, [x0, #184]
  40673c:	ldr	x0, [sp, #24]
  406740:	bl	4060c0 <context_free_vconsole>
  406744:	ldr	x0, [sp, #24]
  406748:	add	x1, x0, #0xc0
  40674c:	ldr	x0, [sp, #24]
  406750:	add	x0, x0, #0xc8
  406754:	mov	x6, #0x0                   	// #0
  406758:	mov	x5, x0
  40675c:	adrp	x0, 409000 <_fini+0x328>
  406760:	add	x4, x0, #0xca0
  406764:	mov	x3, x1
  406768:	adrp	x0, 409000 <_fini+0x328>
  40676c:	add	x2, x0, #0xcb0
  406770:	adrp	x0, 409000 <_fini+0x328>
  406774:	add	x1, x0, #0xc88
  406778:	mov	x0, #0x0                   	// #0
  40677c:	bl	402540 <parse_env_file_sentinel@plt>
  406780:	str	w0, [sp, #44]
  406784:	ldr	w0, [sp, #44]
  406788:	cmp	w0, #0x0
  40678c:	b.ge	406798 <vconsole_read_data+0x168>  // b.tcont
  406790:	ldr	w0, [sp, #44]
  406794:	b	40679c <vconsole_read_data+0x16c>
  406798:	mov	w0, #0x0                   	// #0
  40679c:	mov	w1, w0
  4067a0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4067a4:	add	x0, x0, #0xaa8
  4067a8:	ldr	x2, [sp, #184]
  4067ac:	ldr	x0, [x0]
  4067b0:	eor	x0, x2, x0
  4067b4:	cmp	x0, #0x0
  4067b8:	b.eq	4067c0 <vconsole_read_data+0x190>  // b.none
  4067bc:	bl	402580 <__stack_chk_fail@plt>
  4067c0:	mov	w0, w1
  4067c4:	ldp	x29, x30, [sp], #192
  4067c8:	ret

00000000004067cc <x11_read_data>:
  4067cc:	stp	x29, x30, [sp, #-240]!
  4067d0:	mov	x29, sp
  4067d4:	stp	x19, x20, [sp, #16]
  4067d8:	str	x0, [sp, #40]
  4067dc:	str	x1, [sp, #32]
  4067e0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4067e4:	add	x0, x0, #0xaa8
  4067e8:	ldr	x1, [x0]
  4067ec:	str	x1, [sp, #232]
  4067f0:	mov	x1, #0x0                   	// #0
  4067f4:	str	xzr, [sp, #56]
  4067f8:	strb	wzr, [sp, #50]
  4067fc:	ldr	x0, [sp, #32]
  406800:	cmp	x0, #0x0
  406804:	b.eq	406844 <x11_read_data+0x78>  // b.none
  406808:	ldr	x0, [sp, #40]
  40680c:	ldr	x0, [x0, #128]
  406810:	ldr	x1, [sp, #32]
  406814:	cmp	x1, x0
  406818:	b.ne	406824 <x11_read_data+0x58>  // b.any
  40681c:	mov	w20, #0x0                   	// #0
  406820:	b	406c70 <x11_read_data+0x4a4>
  406824:	ldr	x0, [sp, #40]
  406828:	ldr	x0, [x0, #128]
  40682c:	bl	4022e0 <sd_bus_message_unref@plt>
  406830:	ldr	x0, [sp, #32]
  406834:	bl	402790 <sd_bus_message_ref@plt>
  406838:	mov	x1, x0
  40683c:	ldr	x0, [sp, #40]
  406840:	str	x1, [x0, #128]
  406844:	add	x0, sp, #0x68
  406848:	mov	x1, x0
  40684c:	adrp	x0, 409000 <_fini+0x328>
  406850:	add	x0, x0, #0xcb8
  406854:	bl	408cc8 <stat64>
  406858:	cmp	w0, #0x0
  40685c:	b.ge	40689c <x11_read_data+0xd0>  // b.tcont
  406860:	bl	402510 <__errno_location@plt>
  406864:	ldr	w0, [x0]
  406868:	cmp	w0, #0x2
  40686c:	b.eq	406880 <x11_read_data+0xb4>  // b.none
  406870:	bl	402510 <__errno_location@plt>
  406874:	ldr	w0, [x0]
  406878:	neg	w20, w0
  40687c:	b	406c70 <x11_read_data+0x4a4>
  406880:	ldr	x0, [sp, #40]
  406884:	mov	x1, #0xffffffffffffffff    	// #-1
  406888:	str	x1, [x0, #136]
  40688c:	ldr	x0, [sp, #40]
  406890:	bl	406048 <context_free_x11>
  406894:	mov	w20, #0x0                   	// #0
  406898:	b	406c70 <x11_read_data+0x4a4>
  40689c:	add	x0, sp, #0x68
  4068a0:	add	x0, x0, #0x58
  4068a4:	bl	4026e0 <timespec_load@plt>
  4068a8:	str	x0, [sp, #88]
  4068ac:	ldr	x0, [sp, #40]
  4068b0:	ldr	x0, [x0, #136]
  4068b4:	cmn	x0, #0x1
  4068b8:	b.eq	4068d8 <x11_read_data+0x10c>  // b.none
  4068bc:	ldr	x0, [sp, #40]
  4068c0:	ldr	x0, [x0, #136]
  4068c4:	ldr	x1, [sp, #88]
  4068c8:	cmp	x1, x0
  4068cc:	b.ne	4068d8 <x11_read_data+0x10c>  // b.any
  4068d0:	mov	w20, #0x0                   	// #0
  4068d4:	b	406c70 <x11_read_data+0x4a4>
  4068d8:	ldr	x0, [sp, #40]
  4068dc:	ldr	x1, [sp, #88]
  4068e0:	str	x1, [x0, #136]
  4068e4:	ldr	x0, [sp, #40]
  4068e8:	bl	406048 <context_free_x11>
  4068ec:	adrp	x0, 409000 <_fini+0x328>
  4068f0:	add	x1, x0, #0xce0
  4068f4:	adrp	x0, 409000 <_fini+0x328>
  4068f8:	add	x0, x0, #0xcb8
  4068fc:	bl	4027a0 <fopen64@plt>
  406900:	str	x0, [sp, #56]
  406904:	ldr	x0, [sp, #56]
  406908:	cmp	x0, #0x0
  40690c:	b.ne	406920 <x11_read_data+0x154>  // b.any
  406910:	bl	402510 <__errno_location@plt>
  406914:	ldr	w0, [x0]
  406918:	neg	w20, w0
  40691c:	b	406c70 <x11_read_data+0x4a4>
  406920:	str	xzr, [sp, #64]
  406924:	ldr	x0, [sp, #56]
  406928:	add	x1, sp, #0x40
  40692c:	mov	x2, x1
  406930:	mov	x1, #0x100000              	// #1048576
  406934:	bl	405ec0 <read_line>
  406938:	str	w0, [sp, #52]
  40693c:	ldr	w0, [sp, #52]
  406940:	cmp	w0, #0x0
  406944:	b.ge	406954 <x11_read_data+0x188>  // b.tcont
  406948:	ldr	w20, [sp, #52]
  40694c:	mov	w19, #0x0                   	// #0
  406950:	b	406c3c <x11_read_data+0x470>
  406954:	ldr	w0, [sp, #52]
  406958:	cmp	w0, #0x0
  40695c:	b.ne	406968 <x11_read_data+0x19c>  // b.any
  406960:	mov	w19, #0x1                   	// #1
  406964:	b	406c3c <x11_read_data+0x470>
  406968:	ldr	x0, [sp, #64]
  40696c:	bl	402700 <strstrip@plt>
  406970:	str	x0, [sp, #96]
  406974:	strb	wzr, [sp, #51]
  406978:	ldr	x0, [sp, #96]
  40697c:	ldrb	w0, [x0]
  406980:	cmp	w0, #0x0
  406984:	b.eq	406990 <x11_read_data+0x1c4>  // b.none
  406988:	cmp	w0, #0x23
  40698c:	b.ne	406998 <x11_read_data+0x1cc>  // b.any
  406990:	mov	w0, #0x1                   	// #1
  406994:	strb	w0, [sp, #51]
  406998:	nop
  40699c:	ldrb	w0, [sp, #51]
  4069a0:	cmp	w0, #0x0
  4069a4:	b.eq	4069b0 <x11_read_data+0x1e4>  // b.none
  4069a8:	mov	w19, #0x2                   	// #2
  4069ac:	b	406c3c <x11_read_data+0x470>
  4069b0:	ldrb	w0, [sp, #50]
  4069b4:	cmp	w0, #0x0
  4069b8:	b.eq	406b48 <x11_read_data+0x37c>  // b.none
  4069bc:	adrp	x0, 409000 <_fini+0x328>
  4069c0:	add	x1, x0, #0xce8
  4069c4:	ldr	x0, [sp, #96]
  4069c8:	bl	4024d0 <first_word@plt>
  4069cc:	cmp	x0, #0x0
  4069d0:	b.eq	406b48 <x11_read_data+0x37c>  // b.none
  4069d4:	str	xzr, [sp, #72]
  4069d8:	add	x4, sp, #0x48
  4069dc:	mov	w3, #0x8                   	// #8
  4069e0:	adrp	x0, 409000 <_fini+0x328>
  4069e4:	add	x2, x0, #0xcf0
  4069e8:	ldr	x1, [sp, #96]
  4069ec:	mov	x0, x4
  4069f0:	bl	4022f0 <strv_split_extract@plt>
  4069f4:	str	w0, [sp, #52]
  4069f8:	ldr	w0, [sp, #52]
  4069fc:	cmp	w0, #0x0
  406a00:	b.ge	406a10 <x11_read_data+0x244>  // b.tcont
  406a04:	ldr	w20, [sp, #52]
  406a08:	mov	w19, #0x0                   	// #0
  406a0c:	b	406b28 <x11_read_data+0x35c>
  406a10:	ldr	x0, [sp, #72]
  406a14:	bl	4025e0 <strv_length@plt>
  406a18:	cmp	x0, #0x3
  406a1c:	b.ne	406b24 <x11_read_data+0x358>  // b.any
  406a20:	str	xzr, [sp, #80]
  406a24:	ldr	x0, [sp, #72]
  406a28:	add	x0, x0, #0x8
  406a2c:	ldr	x2, [x0]
  406a30:	adrp	x0, 409000 <_fini+0x328>
  406a34:	add	x1, x0, #0xcf8
  406a38:	mov	x0, x2
  406a3c:	bl	402680 <strcmp@plt>
  406a40:	cmp	w0, #0x0
  406a44:	b.ne	406a58 <x11_read_data+0x28c>  // b.any
  406a48:	ldr	x0, [sp, #40]
  406a4c:	add	x0, x0, #0x90
  406a50:	str	x0, [sp, #80]
  406a54:	b	406af0 <x11_read_data+0x324>
  406a58:	ldr	x0, [sp, #72]
  406a5c:	add	x0, x0, #0x8
  406a60:	ldr	x2, [x0]
  406a64:	adrp	x0, 409000 <_fini+0x328>
  406a68:	add	x1, x0, #0xd08
  406a6c:	mov	x0, x2
  406a70:	bl	402680 <strcmp@plt>
  406a74:	cmp	w0, #0x0
  406a78:	b.ne	406a8c <x11_read_data+0x2c0>  // b.any
  406a7c:	ldr	x0, [sp, #40]
  406a80:	add	x0, x0, #0x98
  406a84:	str	x0, [sp, #80]
  406a88:	b	406af0 <x11_read_data+0x324>
  406a8c:	ldr	x0, [sp, #72]
  406a90:	add	x0, x0, #0x8
  406a94:	ldr	x2, [x0]
  406a98:	adrp	x0, 409000 <_fini+0x328>
  406a9c:	add	x1, x0, #0xd18
  406aa0:	mov	x0, x2
  406aa4:	bl	402680 <strcmp@plt>
  406aa8:	cmp	w0, #0x0
  406aac:	b.ne	406ac0 <x11_read_data+0x2f4>  // b.any
  406ab0:	ldr	x0, [sp, #40]
  406ab4:	add	x0, x0, #0xa0
  406ab8:	str	x0, [sp, #80]
  406abc:	b	406af0 <x11_read_data+0x324>
  406ac0:	ldr	x0, [sp, #72]
  406ac4:	add	x0, x0, #0x8
  406ac8:	ldr	x2, [x0]
  406acc:	adrp	x0, 409000 <_fini+0x328>
  406ad0:	add	x1, x0, #0xd28
  406ad4:	mov	x0, x2
  406ad8:	bl	402680 <strcmp@plt>
  406adc:	cmp	w0, #0x0
  406ae0:	b.ne	406af0 <x11_read_data+0x324>  // b.any
  406ae4:	ldr	x0, [sp, #40]
  406ae8:	add	x0, x0, #0xa8
  406aec:	str	x0, [sp, #80]
  406af0:	ldr	x0, [sp, #80]
  406af4:	cmp	x0, #0x0
  406af8:	b.eq	406b24 <x11_read_data+0x358>  // b.none
  406afc:	ldr	x0, [sp, #80]
  406b00:	ldr	x0, [x0]
  406b04:	bl	402710 <free@plt>
  406b08:	ldr	x0, [sp, #72]
  406b0c:	ldr	x1, [x0, #16]
  406b10:	ldr	x0, [sp, #80]
  406b14:	str	x1, [x0]
  406b18:	ldr	x0, [sp, #72]
  406b1c:	add	x0, x0, #0x10
  406b20:	str	xzr, [x0]
  406b24:	mov	w19, #0x1                   	// #1
  406b28:	add	x0, sp, #0x48
  406b2c:	bl	405ef0 <strv_freep>
  406b30:	cmp	w19, #0x1
  406b34:	b.ne	406b40 <x11_read_data+0x374>  // b.any
  406b38:	nop
  406b3c:	b	406c38 <x11_read_data+0x46c>
  406b40:	mov	w19, #0x0                   	// #0
  406b44:	b	406c3c <x11_read_data+0x470>
  406b48:	ldrb	w0, [sp, #50]
  406b4c:	eor	w0, w0, #0x1
  406b50:	and	w0, w0, #0xff
  406b54:	cmp	w0, #0x0
  406b58:	b.eq	406c10 <x11_read_data+0x444>  // b.none
  406b5c:	adrp	x0, 409000 <_fini+0x328>
  406b60:	add	x1, x0, #0xd38
  406b64:	ldr	x0, [sp, #96]
  406b68:	bl	4024d0 <first_word@plt>
  406b6c:	cmp	x0, #0x0
  406b70:	b.eq	406c10 <x11_read_data+0x444>  // b.none
  406b74:	str	xzr, [sp, #72]
  406b78:	add	x4, sp, #0x48
  406b7c:	mov	w3, #0x8                   	// #8
  406b80:	adrp	x0, 409000 <_fini+0x328>
  406b84:	add	x2, x0, #0xcf0
  406b88:	ldr	x1, [sp, #96]
  406b8c:	mov	x0, x4
  406b90:	bl	4022f0 <strv_split_extract@plt>
  406b94:	str	w0, [sp, #52]
  406b98:	ldr	w0, [sp, #52]
  406b9c:	cmp	w0, #0x0
  406ba0:	b.ge	406bb0 <x11_read_data+0x3e4>  // b.tcont
  406ba4:	mov	w20, #0xfffffff4            	// #-12
  406ba8:	mov	w19, #0x0                   	// #0
  406bac:	b	406bf0 <x11_read_data+0x424>
  406bb0:	ldr	x0, [sp, #72]
  406bb4:	bl	4025e0 <strv_length@plt>
  406bb8:	cmp	x0, #0x2
  406bbc:	b.ne	406bec <x11_read_data+0x420>  // b.any
  406bc0:	ldr	x0, [sp, #72]
  406bc4:	add	x0, x0, #0x8
  406bc8:	ldr	x2, [x0]
  406bcc:	adrp	x0, 409000 <_fini+0x328>
  406bd0:	add	x1, x0, #0xd40
  406bd4:	mov	x0, x2
  406bd8:	bl	402680 <strcmp@plt>
  406bdc:	cmp	w0, #0x0
  406be0:	b.ne	406bec <x11_read_data+0x420>  // b.any
  406be4:	mov	w0, #0x1                   	// #1
  406be8:	strb	w0, [sp, #50]
  406bec:	mov	w19, #0x1                   	// #1
  406bf0:	add	x0, sp, #0x48
  406bf4:	bl	405ef0 <strv_freep>
  406bf8:	cmp	w19, #0x1
  406bfc:	b.ne	406c08 <x11_read_data+0x43c>  // b.any
  406c00:	nop
  406c04:	b	406c38 <x11_read_data+0x46c>
  406c08:	mov	w19, #0x0                   	// #0
  406c0c:	b	406c3c <x11_read_data+0x470>
  406c10:	ldrb	w0, [sp, #50]
  406c14:	cmp	w0, #0x0
  406c18:	b.eq	406c38 <x11_read_data+0x46c>  // b.none
  406c1c:	adrp	x0, 409000 <_fini+0x328>
  406c20:	add	x1, x0, #0xd50
  406c24:	ldr	x0, [sp, #96]
  406c28:	bl	4024d0 <first_word@plt>
  406c2c:	cmp	x0, #0x0
  406c30:	b.eq	406c38 <x11_read_data+0x46c>  // b.none
  406c34:	strb	wzr, [sp, #50]
  406c38:	mov	w19, #0x3                   	// #3
  406c3c:	add	x0, sp, #0x40
  406c40:	bl	405cc8 <freep>
  406c44:	cmp	w19, #0x3
  406c48:	b.eq	406c6c <x11_read_data+0x4a0>  // b.none
  406c4c:	cmp	w19, #0x3
  406c50:	b.gt	406920 <x11_read_data+0x154>
  406c54:	cmp	w19, #0x0
  406c58:	b.eq	406c70 <x11_read_data+0x4a4>  // b.none
  406c5c:	cmp	w19, #0x1
  406c60:	b.ne	406c6c <x11_read_data+0x4a0>  // b.any
  406c64:	mov	w20, #0x0                   	// #0
  406c68:	b	406c70 <x11_read_data+0x4a4>
  406c6c:	b	406920 <x11_read_data+0x154>
  406c70:	add	x0, sp, #0x38
  406c74:	bl	405e9c <fclosep>
  406c78:	mov	w1, w20
  406c7c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  406c80:	add	x0, x0, #0xaa8
  406c84:	ldr	x2, [sp, #232]
  406c88:	ldr	x0, [x0]
  406c8c:	eor	x0, x2, x0
  406c90:	cmp	x0, #0x0
  406c94:	b.eq	406c9c <x11_read_data+0x4d0>  // b.none
  406c98:	bl	402580 <__stack_chk_fail@plt>
  406c9c:	mov	w0, w1
  406ca0:	ldp	x19, x20, [sp, #16]
  406ca4:	ldp	x29, x30, [sp], #240
  406ca8:	ret

0000000000406cac <locale_write_data>:
  406cac:	stp	x29, x30, [sp, #-240]!
  406cb0:	mov	x29, sp
  406cb4:	stp	x19, x20, [sp, #16]
  406cb8:	str	x0, [sp, #40]
  406cbc:	str	x1, [sp, #32]
  406cc0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  406cc4:	add	x0, x0, #0xaa8
  406cc8:	ldr	x1, [x0]
  406ccc:	str	x1, [sp, #232]
  406cd0:	mov	x1, #0x0                   	// #0
  406cd4:	str	xzr, [sp, #64]
  406cd8:	str	wzr, [sp, #56]
  406cdc:	b	406e00 <locale_write_data+0x154>
  406ce0:	str	xzr, [sp, #72]
  406ce4:	ldr	w0, [sp, #56]
  406ce8:	bl	402400 <locale_variable_to_string@plt>
  406cec:	str	x0, [sp, #88]
  406cf0:	ldr	x0, [sp, #88]
  406cf4:	cmp	x0, #0x0
  406cf8:	cset	w0, eq  // eq = none
  406cfc:	and	w0, w0, #0xff
  406d00:	and	x0, x0, #0xff
  406d04:	cmp	x0, #0x0
  406d08:	b.eq	406d34 <locale_write_data+0x88>  // b.none
  406d0c:	adrp	x0, 409000 <_fini+0x328>
  406d10:	add	x1, x0, #0xc63
  406d14:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  406d18:	add	x4, x0, #0x220
  406d1c:	mov	w3, #0x131                 	// #305
  406d20:	mov	x2, x1
  406d24:	adrp	x0, 409000 <_fini+0x328>
  406d28:	add	x1, x0, #0xc80
  406d2c:	mov	w0, #0x0                   	// #0
  406d30:	bl	402430 <log_assert_failed_realm@plt>
  406d34:	ldr	x0, [sp, #40]
  406d38:	ldrsw	x1, [sp, #56]
  406d3c:	add	x1, x1, #0x2
  406d40:	ldr	x0, [x0, x1, lsl #3]
  406d44:	bl	405d40 <isempty>
  406d48:	and	w0, w0, #0xff
  406d4c:	cmp	w0, #0x0
  406d50:	b.eq	406d5c <locale_write_data+0xb0>  // b.none
  406d54:	mov	w20, #0x0                   	// #0
  406d58:	b	406ddc <locale_write_data+0x130>
  406d5c:	ldr	x0, [sp, #40]
  406d60:	ldrsw	x1, [sp, #56]
  406d64:	add	x1, x1, #0x2
  406d68:	ldr	x0, [x0, x1, lsl #3]
  406d6c:	add	x4, sp, #0x48
  406d70:	mov	x3, x0
  406d74:	ldr	x2, [sp, #88]
  406d78:	adrp	x0, 409000 <_fini+0x328>
  406d7c:	add	x1, x0, #0xd60
  406d80:	mov	x0, x4
  406d84:	bl	4026d0 <asprintf@plt>
  406d88:	cmp	w0, #0x0
  406d8c:	b.ge	406d9c <locale_write_data+0xf0>  // b.tcont
  406d90:	mov	w19, #0xfffffff4            	// #-12
  406d94:	mov	w20, #0x1                   	// #1
  406d98:	b	406ddc <locale_write_data+0x130>
  406d9c:	ldr	x0, [sp, #64]
  406da0:	ldr	x1, [sp, #72]
  406da4:	bl	402760 <strv_env_set@plt>
  406da8:	str	x0, [sp, #96]
  406dac:	ldr	x0, [sp, #96]
  406db0:	cmp	x0, #0x0
  406db4:	b.ne	406dc4 <locale_write_data+0x118>  // b.any
  406db8:	mov	w19, #0xfffffff4            	// #-12
  406dbc:	mov	w20, #0x1                   	// #1
  406dc0:	b	406ddc <locale_write_data+0x130>
  406dc4:	ldr	x0, [sp, #64]
  406dc8:	bl	402530 <strv_free@plt>
  406dcc:	ldr	x0, [sp, #96]
  406dd0:	str	x0, [sp, #64]
  406dd4:	str	xzr, [sp, #96]
  406dd8:	mov	w20, #0x2                   	// #2
  406ddc:	add	x0, sp, #0x48
  406de0:	bl	405cc8 <freep>
  406de4:	cmp	w20, #0x0
  406de8:	b.eq	406df4 <locale_write_data+0x148>  // b.none
  406dec:	cmp	w20, #0x2
  406df0:	b.ne	406eec <locale_write_data+0x240>  // b.any
  406df4:	ldr	w0, [sp, #56]
  406df8:	add	w0, w0, #0x1
  406dfc:	str	w0, [sp, #56]
  406e00:	ldr	w0, [sp, #56]
  406e04:	cmp	w0, #0xd
  406e08:	b.le	406ce0 <locale_write_data+0x34>
  406e0c:	ldr	x0, [sp, #64]
  406e10:	bl	405f24 <strv_isempty>
  406e14:	and	w0, w0, #0xff
  406e18:	cmp	w0, #0x0
  406e1c:	b.eq	406e70 <locale_write_data+0x1c4>  // b.none
  406e20:	adrp	x0, 409000 <_fini+0x328>
  406e24:	add	x0, x0, #0xb78
  406e28:	bl	402260 <unlink@plt>
  406e2c:	cmp	w0, #0x0
  406e30:	b.ge	406e5c <locale_write_data+0x1b0>  // b.tcont
  406e34:	bl	402510 <__errno_location@plt>
  406e38:	ldr	w0, [x0]
  406e3c:	cmp	w0, #0x2
  406e40:	b.eq	406e54 <locale_write_data+0x1a8>  // b.none
  406e44:	bl	402510 <__errno_location@plt>
  406e48:	ldr	w0, [x0]
  406e4c:	neg	w19, w0
  406e50:	b	406eec <locale_write_data+0x240>
  406e54:	mov	w19, #0x0                   	// #0
  406e58:	b	406eec <locale_write_data+0x240>
  406e5c:	ldr	x0, [sp, #40]
  406e60:	mov	x1, #0xffffffffffffffff    	// #-1
  406e64:	str	x1, [x0, #8]
  406e68:	mov	w19, #0x0                   	// #0
  406e6c:	b	406eec <locale_write_data+0x240>
  406e70:	ldr	x0, [sp, #64]
  406e74:	mov	x1, x0
  406e78:	adrp	x0, 409000 <_fini+0x328>
  406e7c:	add	x0, x0, #0xb78
  406e80:	bl	4024f0 <write_env_file_label@plt>
  406e84:	str	w0, [sp, #60]
  406e88:	ldr	w0, [sp, #60]
  406e8c:	cmp	w0, #0x0
  406e90:	b.ge	406e9c <locale_write_data+0x1f0>  // b.tcont
  406e94:	ldr	w19, [sp, #60]
  406e98:	b	406eec <locale_write_data+0x240>
  406e9c:	ldr	x0, [sp, #64]
  406ea0:	str	x0, [sp, #80]
  406ea4:	str	xzr, [sp, #64]
  406ea8:	ldr	x1, [sp, #80]
  406eac:	ldr	x0, [sp, #32]
  406eb0:	str	x1, [x0]
  406eb4:	add	x0, sp, #0x68
  406eb8:	mov	x1, x0
  406ebc:	adrp	x0, 409000 <_fini+0x328>
  406ec0:	add	x0, x0, #0xb78
  406ec4:	bl	408cc8 <stat64>
  406ec8:	cmp	w0, #0x0
  406ecc:	b.lt	406ee8 <locale_write_data+0x23c>  // b.tstop
  406ed0:	add	x0, sp, #0x68
  406ed4:	add	x0, x0, #0x58
  406ed8:	bl	4026e0 <timespec_load@plt>
  406edc:	mov	x1, x0
  406ee0:	ldr	x0, [sp, #40]
  406ee4:	str	x1, [x0, #8]
  406ee8:	mov	w19, #0x0                   	// #0
  406eec:	add	x0, sp, #0x40
  406ef0:	bl	405ef0 <strv_freep>
  406ef4:	mov	w1, w19
  406ef8:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  406efc:	add	x0, x0, #0xaa8
  406f00:	ldr	x2, [sp, #232]
  406f04:	ldr	x0, [x0]
  406f08:	eor	x0, x2, x0
  406f0c:	cmp	x0, #0x0
  406f10:	b.eq	406f18 <locale_write_data+0x26c>  // b.none
  406f14:	bl	402580 <__stack_chk_fail@plt>
  406f18:	mov	w0, w1
  406f1c:	ldp	x19, x20, [sp, #16]
  406f20:	ldp	x29, x30, [sp], #240
  406f24:	ret

0000000000406f28 <vconsole_write_data>:
  406f28:	stp	x29, x30, [sp, #-224]!
  406f2c:	mov	x29, sp
  406f30:	stp	x19, x20, [sp, #16]
  406f34:	str	x0, [sp, #40]
  406f38:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  406f3c:	add	x0, x0, #0xaa8
  406f40:	ldr	x1, [x0]
  406f44:	str	x1, [sp, #216]
  406f48:	mov	x1, #0x0                   	// #0
  406f4c:	str	xzr, [sp, #56]
  406f50:	add	x0, sp, #0x38
  406f54:	mov	x2, x0
  406f58:	adrp	x0, 409000 <_fini+0x328>
  406f5c:	add	x1, x0, #0xc88
  406f60:	mov	x0, #0x0                   	// #0
  406f64:	bl	402630 <load_env_file@plt>
  406f68:	str	w0, [sp, #52]
  406f6c:	ldr	w0, [sp, #52]
  406f70:	cmp	w0, #0x0
  406f74:	b.ge	406f8c <vconsole_write_data+0x64>  // b.tcont
  406f78:	ldr	w0, [sp, #52]
  406f7c:	cmn	w0, #0x2
  406f80:	b.eq	406f8c <vconsole_write_data+0x64>  // b.none
  406f84:	ldr	w19, [sp, #52]
  406f88:	b	4071d4 <vconsole_write_data+0x2ac>
  406f8c:	ldr	x0, [sp, #40]
  406f90:	ldr	x0, [x0, #192]
  406f94:	bl	405d40 <isempty>
  406f98:	and	w0, w0, #0xff
  406f9c:	cmp	w0, #0x0
  406fa0:	b.eq	406fc0 <vconsole_write_data+0x98>  // b.none
  406fa4:	ldr	x2, [sp, #56]
  406fa8:	adrp	x0, 409000 <_fini+0x328>
  406fac:	add	x1, x0, #0xcb0
  406fb0:	mov	x0, x2
  406fb4:	bl	402420 <strv_env_unset@plt>
  406fb8:	str	x0, [sp, #56]
  406fbc:	b	40704c <vconsole_write_data+0x124>
  406fc0:	str	xzr, [sp, #64]
  406fc4:	ldr	x0, [sp, #40]
  406fc8:	ldr	x0, [x0, #192]
  406fcc:	mov	x2, #0x0                   	// #0
  406fd0:	mov	x1, x0
  406fd4:	adrp	x0, 409000 <_fini+0x328>
  406fd8:	add	x0, x0, #0xd68
  406fdc:	bl	4023f0 <strjoin_real@plt>
  406fe0:	str	x0, [sp, #64]
  406fe4:	ldr	x0, [sp, #64]
  406fe8:	cmp	x0, #0x0
  406fec:	b.ne	406ffc <vconsole_write_data+0xd4>  // b.any
  406ff0:	mov	w19, #0xfffffff4            	// #-12
  406ff4:	mov	w20, #0x0                   	// #0
  406ff8:	b	40703c <vconsole_write_data+0x114>
  406ffc:	ldr	x0, [sp, #56]
  407000:	ldr	x1, [sp, #64]
  407004:	bl	402760 <strv_env_set@plt>
  407008:	str	x0, [sp, #72]
  40700c:	ldr	x0, [sp, #72]
  407010:	cmp	x0, #0x0
  407014:	b.ne	407024 <vconsole_write_data+0xfc>  // b.any
  407018:	mov	w19, #0xfffffff4            	// #-12
  40701c:	mov	w20, #0x0                   	// #0
  407020:	b	40703c <vconsole_write_data+0x114>
  407024:	ldr	x0, [sp, #56]
  407028:	bl	402530 <strv_free@plt>
  40702c:	ldr	x0, [sp, #72]
  407030:	str	x0, [sp, #56]
  407034:	str	xzr, [sp, #72]
  407038:	mov	w20, #0x1                   	// #1
  40703c:	add	x0, sp, #0x40
  407040:	bl	405cc8 <freep>
  407044:	cmp	w20, #0x1
  407048:	b.ne	4071d4 <vconsole_write_data+0x2ac>  // b.any
  40704c:	ldr	x0, [sp, #40]
  407050:	ldr	x0, [x0, #200]
  407054:	bl	405d40 <isempty>
  407058:	and	w0, w0, #0xff
  40705c:	cmp	w0, #0x0
  407060:	b.eq	407080 <vconsole_write_data+0x158>  // b.none
  407064:	ldr	x2, [sp, #56]
  407068:	adrp	x0, 409000 <_fini+0x328>
  40706c:	add	x1, x0, #0xca0
  407070:	mov	x0, x2
  407074:	bl	402420 <strv_env_unset@plt>
  407078:	str	x0, [sp, #56]
  40707c:	b	40710c <vconsole_write_data+0x1e4>
  407080:	str	xzr, [sp, #64]
  407084:	ldr	x0, [sp, #40]
  407088:	ldr	x0, [x0, #200]
  40708c:	mov	x2, #0x0                   	// #0
  407090:	mov	x1, x0
  407094:	adrp	x0, 409000 <_fini+0x328>
  407098:	add	x0, x0, #0xd70
  40709c:	bl	4023f0 <strjoin_real@plt>
  4070a0:	str	x0, [sp, #64]
  4070a4:	ldr	x0, [sp, #64]
  4070a8:	cmp	x0, #0x0
  4070ac:	b.ne	4070bc <vconsole_write_data+0x194>  // b.any
  4070b0:	mov	w19, #0xfffffff4            	// #-12
  4070b4:	mov	w20, #0x0                   	// #0
  4070b8:	b	4070fc <vconsole_write_data+0x1d4>
  4070bc:	ldr	x0, [sp, #56]
  4070c0:	ldr	x1, [sp, #64]
  4070c4:	bl	402760 <strv_env_set@plt>
  4070c8:	str	x0, [sp, #80]
  4070cc:	ldr	x0, [sp, #80]
  4070d0:	cmp	x0, #0x0
  4070d4:	b.ne	4070e4 <vconsole_write_data+0x1bc>  // b.any
  4070d8:	mov	w19, #0xfffffff4            	// #-12
  4070dc:	mov	w20, #0x0                   	// #0
  4070e0:	b	4070fc <vconsole_write_data+0x1d4>
  4070e4:	ldr	x0, [sp, #56]
  4070e8:	bl	402530 <strv_free@plt>
  4070ec:	ldr	x0, [sp, #80]
  4070f0:	str	x0, [sp, #56]
  4070f4:	str	xzr, [sp, #80]
  4070f8:	mov	w20, #0x1                   	// #1
  4070fc:	add	x0, sp, #0x40
  407100:	bl	405cc8 <freep>
  407104:	cmp	w20, #0x1
  407108:	b.ne	4071d4 <vconsole_write_data+0x2ac>  // b.any
  40710c:	ldr	x0, [sp, #56]
  407110:	bl	405f24 <strv_isempty>
  407114:	and	w0, w0, #0xff
  407118:	cmp	w0, #0x0
  40711c:	b.eq	407170 <vconsole_write_data+0x248>  // b.none
  407120:	adrp	x0, 409000 <_fini+0x328>
  407124:	add	x0, x0, #0xc88
  407128:	bl	402260 <unlink@plt>
  40712c:	cmp	w0, #0x0
  407130:	b.ge	40715c <vconsole_write_data+0x234>  // b.tcont
  407134:	bl	402510 <__errno_location@plt>
  407138:	ldr	w0, [x0]
  40713c:	cmp	w0, #0x2
  407140:	b.eq	407154 <vconsole_write_data+0x22c>  // b.none
  407144:	bl	402510 <__errno_location@plt>
  407148:	ldr	w0, [x0]
  40714c:	neg	w19, w0
  407150:	b	4071d4 <vconsole_write_data+0x2ac>
  407154:	mov	w19, #0x0                   	// #0
  407158:	b	4071d4 <vconsole_write_data+0x2ac>
  40715c:	ldr	x0, [sp, #40]
  407160:	mov	x1, #0xffffffffffffffff    	// #-1
  407164:	str	x1, [x0, #184]
  407168:	mov	w19, #0x0                   	// #0
  40716c:	b	4071d4 <vconsole_write_data+0x2ac>
  407170:	ldr	x0, [sp, #56]
  407174:	mov	x1, x0
  407178:	adrp	x0, 409000 <_fini+0x328>
  40717c:	add	x0, x0, #0xc88
  407180:	bl	4024f0 <write_env_file_label@plt>
  407184:	str	w0, [sp, #52]
  407188:	ldr	w0, [sp, #52]
  40718c:	cmp	w0, #0x0
  407190:	b.ge	40719c <vconsole_write_data+0x274>  // b.tcont
  407194:	ldr	w19, [sp, #52]
  407198:	b	4071d4 <vconsole_write_data+0x2ac>
  40719c:	add	x0, sp, #0x58
  4071a0:	mov	x1, x0
  4071a4:	adrp	x0, 409000 <_fini+0x328>
  4071a8:	add	x0, x0, #0xc88
  4071ac:	bl	408cc8 <stat64>
  4071b0:	cmp	w0, #0x0
  4071b4:	b.lt	4071d0 <vconsole_write_data+0x2a8>  // b.tstop
  4071b8:	add	x0, sp, #0x58
  4071bc:	add	x0, x0, #0x58
  4071c0:	bl	4026e0 <timespec_load@plt>
  4071c4:	mov	x1, x0
  4071c8:	ldr	x0, [sp, #40]
  4071cc:	str	x1, [x0, #184]
  4071d0:	mov	w19, #0x0                   	// #0
  4071d4:	add	x0, sp, #0x38
  4071d8:	bl	405ef0 <strv_freep>
  4071dc:	mov	w1, w19
  4071e0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4071e4:	add	x0, x0, #0xaa8
  4071e8:	ldr	x2, [sp, #216]
  4071ec:	ldr	x0, [x0]
  4071f0:	eor	x0, x2, x0
  4071f4:	cmp	x0, #0x0
  4071f8:	b.eq	407200 <vconsole_write_data+0x2d8>  // b.none
  4071fc:	bl	402580 <__stack_chk_fail@plt>
  407200:	mov	w0, w1
  407204:	ldp	x19, x20, [sp, #16]
  407208:	ldp	x29, x30, [sp], #224
  40720c:	ret

0000000000407210 <x11_write_data>:
  407210:	stp	x29, x30, [sp, #-208]!
  407214:	mov	x29, sp
  407218:	str	x19, [sp, #16]
  40721c:	str	x0, [sp, #40]
  407220:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  407224:	add	x0, x0, #0xaa8
  407228:	ldr	x1, [x0]
  40722c:	str	x1, [sp, #200]
  407230:	mov	x1, #0x0                   	// #0
  407234:	str	xzr, [sp, #56]
  407238:	str	xzr, [sp, #64]
  40723c:	ldr	x0, [sp, #40]
  407240:	ldr	x0, [x0, #144]
  407244:	bl	405d40 <isempty>
  407248:	and	w0, w0, #0xff
  40724c:	cmp	w0, #0x0
  407250:	b.eq	4072ec <x11_write_data+0xdc>  // b.none
  407254:	ldr	x0, [sp, #40]
  407258:	ldr	x0, [x0, #152]
  40725c:	bl	405d40 <isempty>
  407260:	and	w0, w0, #0xff
  407264:	cmp	w0, #0x0
  407268:	b.eq	4072ec <x11_write_data+0xdc>  // b.none
  40726c:	ldr	x0, [sp, #40]
  407270:	ldr	x0, [x0, #160]
  407274:	bl	405d40 <isempty>
  407278:	and	w0, w0, #0xff
  40727c:	cmp	w0, #0x0
  407280:	b.eq	4072ec <x11_write_data+0xdc>  // b.none
  407284:	ldr	x0, [sp, #40]
  407288:	ldr	x0, [x0, #168]
  40728c:	bl	405d40 <isempty>
  407290:	and	w0, w0, #0xff
  407294:	cmp	w0, #0x0
  407298:	b.eq	4072ec <x11_write_data+0xdc>  // b.none
  40729c:	adrp	x0, 409000 <_fini+0x328>
  4072a0:	add	x0, x0, #0xcb8
  4072a4:	bl	402260 <unlink@plt>
  4072a8:	cmp	w0, #0x0
  4072ac:	b.ge	4072d8 <x11_write_data+0xc8>  // b.tcont
  4072b0:	bl	402510 <__errno_location@plt>
  4072b4:	ldr	w0, [x0]
  4072b8:	cmp	w0, #0x2
  4072bc:	b.eq	4072d0 <x11_write_data+0xc0>  // b.none
  4072c0:	bl	402510 <__errno_location@plt>
  4072c4:	ldr	w0, [x0]
  4072c8:	neg	w19, w0
  4072cc:	b	407518 <x11_write_data+0x308>
  4072d0:	mov	w19, #0x0                   	// #0
  4072d4:	b	407518 <x11_write_data+0x308>
  4072d8:	ldr	x0, [sp, #40]
  4072dc:	mov	x1, #0xffffffffffffffff    	// #-1
  4072e0:	str	x1, [x0, #184]
  4072e4:	mov	w19, #0x0                   	// #0
  4072e8:	b	407518 <x11_write_data+0x308>
  4072ec:	mov	w1, #0x1ed                 	// #493
  4072f0:	adrp	x0, 409000 <_fini+0x328>
  4072f4:	add	x0, x0, #0xd80
  4072f8:	bl	4025b0 <mkdir_p_label@plt>
  4072fc:	add	x1, sp, #0x40
  407300:	add	x0, sp, #0x38
  407304:	mov	x2, x1
  407308:	mov	x1, x0
  40730c:	adrp	x0, 409000 <_fini+0x328>
  407310:	add	x0, x0, #0xcb8
  407314:	bl	4024e0 <fopen_temporary@plt>
  407318:	str	w0, [sp, #52]
  40731c:	ldr	w0, [sp, #52]
  407320:	cmp	w0, #0x0
  407324:	b.ge	407330 <x11_write_data+0x120>  // b.tcont
  407328:	ldr	w19, [sp, #52]
  40732c:	b	407518 <x11_write_data+0x308>
  407330:	ldr	x0, [sp, #56]
  407334:	bl	402310 <fileno@plt>
  407338:	mov	w1, #0x1a4                 	// #420
  40733c:	bl	4022a0 <fchmod@plt>
  407340:	ldr	x0, [sp, #56]
  407344:	mov	x3, x0
  407348:	mov	x2, #0x10c                 	// #268
  40734c:	mov	x1, #0x1                   	// #1
  407350:	adrp	x0, 409000 <_fini+0x328>
  407354:	add	x0, x0, #0xd98
  407358:	bl	402720 <fwrite@plt>
  40735c:	ldr	x0, [sp, #40]
  407360:	ldr	x0, [x0, #144]
  407364:	bl	405d40 <isempty>
  407368:	and	w0, w0, #0xff
  40736c:	eor	w0, w0, #0x1
  407370:	and	w0, w0, #0xff
  407374:	cmp	w0, #0x0
  407378:	b.eq	40739c <x11_write_data+0x18c>  // b.none
  40737c:	ldr	x3, [sp, #56]
  407380:	ldr	x0, [sp, #40]
  407384:	ldr	x0, [x0, #144]
  407388:	mov	x2, x0
  40738c:	adrp	x0, 409000 <_fini+0x328>
  407390:	add	x1, x0, #0xea8
  407394:	mov	x0, x3
  407398:	bl	4023c0 <fprintf@plt>
  40739c:	ldr	x0, [sp, #40]
  4073a0:	ldr	x0, [x0, #152]
  4073a4:	bl	405d40 <isempty>
  4073a8:	and	w0, w0, #0xff
  4073ac:	eor	w0, w0, #0x1
  4073b0:	and	w0, w0, #0xff
  4073b4:	cmp	w0, #0x0
  4073b8:	b.eq	4073dc <x11_write_data+0x1cc>  // b.none
  4073bc:	ldr	x3, [sp, #56]
  4073c0:	ldr	x0, [sp, #40]
  4073c4:	ldr	x0, [x0, #152]
  4073c8:	mov	x2, x0
  4073cc:	adrp	x0, 409000 <_fini+0x328>
  4073d0:	add	x1, x0, #0xed0
  4073d4:	mov	x0, x3
  4073d8:	bl	4023c0 <fprintf@plt>
  4073dc:	ldr	x0, [sp, #40]
  4073e0:	ldr	x0, [x0, #160]
  4073e4:	bl	405d40 <isempty>
  4073e8:	and	w0, w0, #0xff
  4073ec:	eor	w0, w0, #0x1
  4073f0:	and	w0, w0, #0xff
  4073f4:	cmp	w0, #0x0
  4073f8:	b.eq	40741c <x11_write_data+0x20c>  // b.none
  4073fc:	ldr	x3, [sp, #56]
  407400:	ldr	x0, [sp, #40]
  407404:	ldr	x0, [x0, #160]
  407408:	mov	x2, x0
  40740c:	adrp	x0, 409000 <_fini+0x328>
  407410:	add	x1, x0, #0xef0
  407414:	mov	x0, x3
  407418:	bl	4023c0 <fprintf@plt>
  40741c:	ldr	x0, [sp, #40]
  407420:	ldr	x0, [x0, #168]
  407424:	bl	405d40 <isempty>
  407428:	and	w0, w0, #0xff
  40742c:	eor	w0, w0, #0x1
  407430:	and	w0, w0, #0xff
  407434:	cmp	w0, #0x0
  407438:	b.eq	40745c <x11_write_data+0x24c>  // b.none
  40743c:	ldr	x3, [sp, #56]
  407440:	ldr	x0, [sp, #40]
  407444:	ldr	x0, [x0, #168]
  407448:	mov	x2, x0
  40744c:	adrp	x0, 409000 <_fini+0x328>
  407450:	add	x1, x0, #0xf18
  407454:	mov	x0, x3
  407458:	bl	4023c0 <fprintf@plt>
  40745c:	ldr	x0, [sp, #56]
  407460:	mov	x3, x0
  407464:	mov	x2, #0xb                   	// #11
  407468:	mov	x1, #0x1                   	// #1
  40746c:	adrp	x0, 409000 <_fini+0x328>
  407470:	add	x0, x0, #0xf40
  407474:	bl	402720 <fwrite@plt>
  407478:	ldr	x0, [sp, #56]
  40747c:	bl	4025f0 <fflush_sync_and_check@plt>
  407480:	str	w0, [sp, #52]
  407484:	ldr	w0, [sp, #52]
  407488:	cmp	w0, #0x0
  40748c:	b.lt	4074fc <x11_write_data+0x2ec>  // b.tstop
  407490:	ldr	x2, [sp, #64]
  407494:	adrp	x0, 409000 <_fini+0x328>
  407498:	add	x1, x0, #0xcb8
  40749c:	mov	x0, x2
  4074a0:	bl	402340 <rename@plt>
  4074a4:	cmp	w0, #0x0
  4074a8:	b.ge	4074c0 <x11_write_data+0x2b0>  // b.tcont
  4074ac:	bl	402510 <__errno_location@plt>
  4074b0:	ldr	w0, [x0]
  4074b4:	neg	w0, w0
  4074b8:	str	w0, [sp, #52]
  4074bc:	b	407500 <x11_write_data+0x2f0>
  4074c0:	add	x0, sp, #0x48
  4074c4:	mov	x1, x0
  4074c8:	adrp	x0, 409000 <_fini+0x328>
  4074cc:	add	x0, x0, #0xcb8
  4074d0:	bl	408cc8 <stat64>
  4074d4:	cmp	w0, #0x0
  4074d8:	b.lt	4074f4 <x11_write_data+0x2e4>  // b.tstop
  4074dc:	add	x0, sp, #0x48
  4074e0:	add	x0, x0, #0x58
  4074e4:	bl	4026e0 <timespec_load@plt>
  4074e8:	mov	x1, x0
  4074ec:	ldr	x0, [sp, #40]
  4074f0:	str	x1, [x0, #136]
  4074f4:	mov	w19, #0x0                   	// #0
  4074f8:	b	407518 <x11_write_data+0x308>
  4074fc:	nop
  407500:	ldr	x0, [sp, #64]
  407504:	cmp	x0, #0x0
  407508:	b.eq	407514 <x11_write_data+0x304>  // b.none
  40750c:	ldr	x0, [sp, #64]
  407510:	bl	402260 <unlink@plt>
  407514:	ldr	w19, [sp, #52]
  407518:	add	x0, sp, #0x40
  40751c:	bl	405cc8 <freep>
  407520:	add	x0, sp, #0x38
  407524:	bl	405e9c <fclosep>
  407528:	mov	w1, w19
  40752c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  407530:	add	x0, x0, #0xaa8
  407534:	ldr	x2, [sp, #200]
  407538:	ldr	x0, [x0]
  40753c:	eor	x0, x2, x0
  407540:	cmp	x0, #0x0
  407544:	b.eq	40754c <x11_write_data+0x33c>  // b.none
  407548:	bl	402580 <__stack_chk_fail@plt>
  40754c:	mov	w0, w1
  407550:	ldr	x19, [sp, #16]
  407554:	ldp	x29, x30, [sp], #208
  407558:	ret

000000000040755c <read_next_mapping>:
  40755c:	stp	x29, x30, [sp, #-144]!
  407560:	mov	x29, sp
  407564:	stp	x19, x20, [sp, #16]
  407568:	str	x0, [sp, #72]
  40756c:	str	w1, [sp, #68]
  407570:	str	w2, [sp, #64]
  407574:	str	x3, [sp, #56]
  407578:	str	x4, [sp, #48]
  40757c:	str	x5, [sp, #40]
  407580:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  407584:	add	x0, x0, #0xaa8
  407588:	ldr	x1, [x0]
  40758c:	str	x1, [sp, #136]
  407590:	mov	x1, #0x0                   	// #0
  407594:	ldr	x0, [sp, #56]
  407598:	cmp	x0, #0x0
  40759c:	cset	w0, eq  // eq = none
  4075a0:	and	w0, w0, #0xff
  4075a4:	and	x0, x0, #0xff
  4075a8:	cmp	x0, #0x0
  4075ac:	b.eq	4075d8 <read_next_mapping+0x7c>  // b.none
  4075b0:	adrp	x0, 409000 <_fini+0x328>
  4075b4:	add	x1, x0, #0xc63
  4075b8:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  4075bc:	add	x4, x0, #0x238
  4075c0:	mov	w3, #0x1d7                 	// #471
  4075c4:	mov	x2, x1
  4075c8:	adrp	x0, 409000 <_fini+0x328>
  4075cc:	add	x1, x0, #0xf50
  4075d0:	mov	w0, #0x0                   	// #0
  4075d4:	bl	402430 <log_assert_failed_realm@plt>
  4075d8:	ldr	x0, [sp, #48]
  4075dc:	cmp	x0, #0x0
  4075e0:	cset	w0, eq  // eq = none
  4075e4:	and	w0, w0, #0xff
  4075e8:	and	x0, x0, #0xff
  4075ec:	cmp	x0, #0x0
  4075f0:	b.eq	40761c <read_next_mapping+0xc0>  // b.none
  4075f4:	adrp	x0, 409000 <_fini+0x328>
  4075f8:	add	x1, x0, #0xc63
  4075fc:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407600:	add	x4, x0, #0x238
  407604:	mov	w3, #0x1d8                 	// #472
  407608:	mov	x2, x1
  40760c:	adrp	x0, 409000 <_fini+0x328>
  407610:	add	x1, x0, #0xf58
  407614:	mov	w0, #0x0                   	// #0
  407618:	bl	402430 <log_assert_failed_realm@plt>
  40761c:	ldr	x0, [sp, #40]
  407620:	cmp	x0, #0x0
  407624:	cset	w0, eq  // eq = none
  407628:	and	w0, w0, #0xff
  40762c:	and	x0, x0, #0xff
  407630:	cmp	x0, #0x0
  407634:	b.eq	407660 <read_next_mapping+0x104>  // b.none
  407638:	adrp	x0, 409000 <_fini+0x328>
  40763c:	add	x1, x0, #0xc63
  407640:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407644:	add	x4, x0, #0x238
  407648:	mov	w3, #0x1d9                 	// #473
  40764c:	mov	x2, x1
  407650:	adrp	x0, 409000 <_fini+0x328>
  407654:	add	x1, x0, #0xf60
  407658:	mov	w0, #0x0                   	// #0
  40765c:	bl	402430 <log_assert_failed_realm@plt>
  407660:	str	xzr, [sp, #104]
  407664:	add	x0, sp, #0x68
  407668:	mov	x2, x0
  40766c:	mov	x1, #0x100000              	// #1048576
  407670:	ldr	x0, [sp, #56]
  407674:	bl	405ec0 <read_line>
  407678:	str	w0, [sp, #88]
  40767c:	ldr	w0, [sp, #88]
  407680:	cmp	w0, #0x0
  407684:	b.ge	407694 <read_next_mapping+0x138>  // b.tcont
  407688:	ldr	w20, [sp, #88]
  40768c:	mov	w19, #0x0                   	// #0
  407690:	b	407810 <read_next_mapping+0x2b4>
  407694:	ldr	w0, [sp, #88]
  407698:	cmp	w0, #0x0
  40769c:	b.ne	4076a8 <read_next_mapping+0x14c>  // b.any
  4076a0:	mov	w19, #0x1                   	// #1
  4076a4:	b	407810 <read_next_mapping+0x2b4>
  4076a8:	ldr	x0, [sp, #48]
  4076ac:	ldr	w0, [x0]
  4076b0:	add	w1, w0, #0x1
  4076b4:	ldr	x0, [sp, #48]
  4076b8:	str	w1, [x0]
  4076bc:	ldr	x0, [sp, #104]
  4076c0:	bl	402700 <strstrip@plt>
  4076c4:	str	x0, [sp, #120]
  4076c8:	strb	wzr, [sp, #87]
  4076cc:	ldr	x0, [sp, #120]
  4076d0:	ldrb	w0, [x0]
  4076d4:	cmp	w0, #0x0
  4076d8:	b.eq	4076e4 <read_next_mapping+0x188>  // b.none
  4076dc:	cmp	w0, #0x23
  4076e0:	b.ne	4076ec <read_next_mapping+0x190>  // b.any
  4076e4:	mov	w0, #0x1                   	// #1
  4076e8:	strb	w0, [sp, #87]
  4076ec:	nop
  4076f0:	ldrb	w0, [sp, #87]
  4076f4:	cmp	w0, #0x0
  4076f8:	b.eq	407704 <read_next_mapping+0x1a8>  // b.none
  4076fc:	mov	w19, #0x2                   	// #2
  407700:	b	407810 <read_next_mapping+0x2b4>
  407704:	add	x4, sp, #0x70
  407708:	mov	w3, #0x8                   	// #8
  40770c:	adrp	x0, 409000 <_fini+0x328>
  407710:	add	x2, x0, #0xcf0
  407714:	ldr	x1, [sp, #120]
  407718:	mov	x0, x4
  40771c:	bl	4022f0 <strv_split_extract@plt>
  407720:	str	w0, [sp, #88]
  407724:	ldr	w0, [sp, #88]
  407728:	cmp	w0, #0x0
  40772c:	b.ge	40773c <read_next_mapping+0x1e0>  // b.tcont
  407730:	ldr	w20, [sp, #88]
  407734:	mov	w19, #0x0                   	// #0
  407738:	b	407810 <read_next_mapping+0x2b4>
  40773c:	ldr	x0, [sp, #112]
  407740:	bl	4025e0 <strv_length@plt>
  407744:	str	x0, [sp, #128]
  407748:	ldr	w0, [sp, #68]
  40774c:	ldr	x1, [sp, #128]
  407750:	cmp	x1, x0
  407754:	b.cc	407768 <read_next_mapping+0x20c>  // b.lo, b.ul, b.last
  407758:	ldr	w0, [sp, #64]
  40775c:	ldr	x1, [sp, #128]
  407760:	cmp	x1, x0
  407764:	b.ls	4077fc <read_next_mapping+0x2a0>  // b.plast
  407768:	mov	w0, #0x3                   	// #3
  40776c:	str	w0, [sp, #92]
  407770:	str	wzr, [sp, #96]
  407774:	str	wzr, [sp, #100]
  407778:	ldr	w0, [sp, #100]
  40777c:	bl	4027d0 <log_get_max_level_realm@plt>
  407780:	mov	w1, w0
  407784:	ldr	w0, [sp, #92]
  407788:	and	w0, w0, #0x7
  40778c:	cmp	w1, w0
  407790:	b.lt	4077e4 <read_next_mapping+0x288>  // b.tstop
  407794:	ldr	w0, [sp, #100]
  407798:	lsl	w1, w0, #10
  40779c:	ldr	w0, [sp, #92]
  4077a0:	orr	w8, w1, w0
  4077a4:	adrp	x0, 409000 <_fini+0x328>
  4077a8:	add	x1, x0, #0xc63
  4077ac:	ldr	x0, [sp, #48]
  4077b0:	ldr	w0, [x0]
  4077b4:	mov	w7, w0
  4077b8:	ldr	x6, [sp, #72]
  4077bc:	adrp	x0, 409000 <_fini+0x328>
  4077c0:	add	x5, x0, #0xf68
  4077c4:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  4077c8:	add	x4, x0, #0x250
  4077cc:	mov	w3, #0x1f3                 	// #499
  4077d0:	mov	x2, x1
  4077d4:	ldr	w1, [sp, #96]
  4077d8:	mov	w0, w8
  4077dc:	bl	402640 <log_internal_realm@plt>
  4077e0:	b	4077ec <read_next_mapping+0x290>
  4077e4:	ldr	w0, [sp, #96]
  4077e8:	cmp	w0, #0x0
  4077ec:	ldr	x0, [sp, #112]
  4077f0:	bl	402530 <strv_free@plt>
  4077f4:	mov	w19, #0x2                   	// #2
  4077f8:	b	407810 <read_next_mapping+0x2b4>
  4077fc:	ldr	x1, [sp, #112]
  407800:	ldr	x0, [sp, #40]
  407804:	str	x1, [x0]
  407808:	mov	w20, #0x1                   	// #1
  40780c:	mov	w19, #0x0                   	// #0
  407810:	add	x0, sp, #0x68
  407814:	bl	405cc8 <freep>
  407818:	cmp	w19, #0x0
  40781c:	b.eq	407834 <read_next_mapping+0x2d8>  // b.none
  407820:	cmp	w19, #0x1
  407824:	b.ne	407830 <read_next_mapping+0x2d4>  // b.any
  407828:	mov	w20, #0x0                   	// #0
  40782c:	b	407834 <read_next_mapping+0x2d8>
  407830:	b	407660 <read_next_mapping+0x104>
  407834:	mov	w1, w20
  407838:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  40783c:	add	x0, x0, #0xaa8
  407840:	ldr	x2, [sp, #136]
  407844:	ldr	x0, [x0]
  407848:	eor	x0, x2, x0
  40784c:	cmp	x0, #0x0
  407850:	b.eq	407858 <read_next_mapping+0x2fc>  // b.none
  407854:	bl	402580 <__stack_chk_fail@plt>
  407858:	mov	w0, w1
  40785c:	ldp	x19, x20, [sp, #16]
  407860:	ldp	x29, x30, [sp], #144
  407864:	ret

0000000000407868 <vconsole_convert_to_x11>:
  407868:	sub	sp, sp, #0xb0
  40786c:	stp	x29, x30, [sp, #16]
  407870:	add	x29, sp, #0x10
  407874:	stp	x19, x20, [sp, #32]
  407878:	stp	x21, x22, [sp, #48]
  40787c:	str	x23, [sp, #64]
  407880:	str	x0, [sp, #88]
  407884:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  407888:	add	x0, x0, #0xaa8
  40788c:	ldr	x1, [x0]
  407890:	str	x1, [sp, #168]
  407894:	mov	x1, #0x0                   	// #0
  407898:	mov	w0, #0xffffffff            	// #-1
  40789c:	str	w0, [sp, #100]
  4078a0:	bl	405fd0 <systemd_kbd_model_map>
  4078a4:	str	x0, [sp, #160]
  4078a8:	ldr	x0, [sp, #88]
  4078ac:	ldr	x0, [x0, #192]
  4078b0:	bl	405d40 <isempty>
  4078b4:	and	w0, w0, #0xff
  4078b8:	cmp	w0, #0x0
  4078bc:	b.eq	40795c <vconsole_convert_to_x11+0xf4>  // b.none
  4078c0:	ldr	x0, [sp, #88]
  4078c4:	ldr	x0, [x0, #144]
  4078c8:	bl	405d40 <isempty>
  4078cc:	and	w0, w0, #0xff
  4078d0:	eor	w0, w0, #0x1
  4078d4:	and	w0, w0, #0xff
  4078d8:	cmp	w0, #0x0
  4078dc:	b.ne	407940 <vconsole_convert_to_x11+0xd8>  // b.any
  4078e0:	ldr	x0, [sp, #88]
  4078e4:	ldr	x0, [x0, #152]
  4078e8:	bl	405d40 <isempty>
  4078ec:	and	w0, w0, #0xff
  4078f0:	eor	w0, w0, #0x1
  4078f4:	and	w0, w0, #0xff
  4078f8:	cmp	w0, #0x0
  4078fc:	b.ne	407940 <vconsole_convert_to_x11+0xd8>  // b.any
  407900:	ldr	x0, [sp, #88]
  407904:	ldr	x0, [x0, #160]
  407908:	bl	405d40 <isempty>
  40790c:	and	w0, w0, #0xff
  407910:	eor	w0, w0, #0x1
  407914:	and	w0, w0, #0xff
  407918:	cmp	w0, #0x0
  40791c:	b.ne	407940 <vconsole_convert_to_x11+0xd8>  // b.any
  407920:	ldr	x0, [sp, #88]
  407924:	ldr	x0, [x0, #168]
  407928:	bl	405d40 <isempty>
  40792c:	and	w0, w0, #0xff
  407930:	eor	w0, w0, #0x1
  407934:	and	w0, w0, #0xff
  407938:	cmp	w0, #0x0
  40793c:	b.eq	407948 <vconsole_convert_to_x11+0xe0>  // b.none
  407940:	mov	w0, #0x1                   	// #1
  407944:	b	40794c <vconsole_convert_to_x11+0xe4>
  407948:	mov	w0, #0x0                   	// #0
  40794c:	str	w0, [sp, #100]
  407950:	ldr	x0, [sp, #88]
  407954:	bl	406048 <context_free_x11>
  407958:	b	407c0c <vconsole_convert_to_x11+0x3a4>
  40795c:	str	xzr, [sp, #144]
  407960:	str	wzr, [sp, #96]
  407964:	adrp	x0, 409000 <_fini+0x328>
  407968:	add	x1, x0, #0xce0
  40796c:	ldr	x0, [sp, #160]
  407970:	bl	4027a0 <fopen64@plt>
  407974:	str	x0, [sp, #144]
  407978:	ldr	x0, [sp, #144]
  40797c:	cmp	x0, #0x0
  407980:	b.ne	407998 <vconsole_convert_to_x11+0x130>  // b.any
  407984:	bl	402510 <__errno_location@plt>
  407988:	ldr	w0, [x0]
  40798c:	neg	w20, w0
  407990:	mov	w19, #0x0                   	// #0
  407994:	b	407bfc <vconsole_convert_to_x11+0x394>
  407998:	str	xzr, [sp, #152]
  40799c:	ldr	x0, [sp, #144]
  4079a0:	add	x2, sp, #0x98
  4079a4:	add	x1, sp, #0x60
  4079a8:	mov	x5, x2
  4079ac:	mov	x4, x1
  4079b0:	mov	x3, x0
  4079b4:	mov	w2, #0xffffffff            	// #-1
  4079b8:	mov	w1, #0x5                   	// #5
  4079bc:	ldr	x0, [sp, #160]
  4079c0:	bl	40755c <read_next_mapping>
  4079c4:	str	w0, [sp, #104]
  4079c8:	ldr	w0, [sp, #104]
  4079cc:	cmp	w0, #0x0
  4079d0:	b.ge	4079e0 <vconsole_convert_to_x11+0x178>  // b.tcont
  4079d4:	ldr	w20, [sp, #104]
  4079d8:	mov	w19, #0x0                   	// #0
  4079dc:	b	407bcc <vconsole_convert_to_x11+0x364>
  4079e0:	ldr	w0, [sp, #104]
  4079e4:	cmp	w0, #0x0
  4079e8:	b.ne	4079f4 <vconsole_convert_to_x11+0x18c>  // b.any
  4079ec:	mov	w19, #0x1                   	// #1
  4079f0:	b	407bcc <vconsole_convert_to_x11+0x364>
  4079f4:	ldr	x0, [sp, #88]
  4079f8:	ldr	x2, [x0, #192]
  4079fc:	ldr	x0, [sp, #152]
  407a00:	ldr	x0, [x0]
  407a04:	mov	x1, x0
  407a08:	mov	x0, x2
  407a0c:	bl	402680 <strcmp@plt>
  407a10:	cmp	w0, #0x0
  407a14:	b.eq	407a20 <vconsole_convert_to_x11+0x1b8>  // b.none
  407a18:	mov	w19, #0x2                   	// #2
  407a1c:	b	407bcc <vconsole_convert_to_x11+0x364>
  407a20:	ldr	x0, [sp, #88]
  407a24:	ldr	x19, [x0, #144]
  407a28:	ldr	x0, [sp, #152]
  407a2c:	add	x0, x0, #0x8
  407a30:	ldr	x0, [x0]
  407a34:	bl	405e18 <empty_or_dash_to_null>
  407a38:	mov	x1, x0
  407a3c:	mov	x0, x19
  407a40:	bl	405cec <streq_ptr>
  407a44:	and	w0, w0, #0xff
  407a48:	eor	w0, w0, #0x1
  407a4c:	and	w0, w0, #0xff
  407a50:	cmp	w0, #0x0
  407a54:	b.ne	407b00 <vconsole_convert_to_x11+0x298>  // b.any
  407a58:	ldr	x0, [sp, #88]
  407a5c:	ldr	x19, [x0, #152]
  407a60:	ldr	x0, [sp, #152]
  407a64:	add	x0, x0, #0x10
  407a68:	ldr	x0, [x0]
  407a6c:	bl	405e18 <empty_or_dash_to_null>
  407a70:	mov	x1, x0
  407a74:	mov	x0, x19
  407a78:	bl	405cec <streq_ptr>
  407a7c:	and	w0, w0, #0xff
  407a80:	eor	w0, w0, #0x1
  407a84:	and	w0, w0, #0xff
  407a88:	cmp	w0, #0x0
  407a8c:	b.ne	407b00 <vconsole_convert_to_x11+0x298>  // b.any
  407a90:	ldr	x0, [sp, #88]
  407a94:	ldr	x19, [x0, #160]
  407a98:	ldr	x0, [sp, #152]
  407a9c:	add	x0, x0, #0x18
  407aa0:	ldr	x0, [x0]
  407aa4:	bl	405e18 <empty_or_dash_to_null>
  407aa8:	mov	x1, x0
  407aac:	mov	x0, x19
  407ab0:	bl	405cec <streq_ptr>
  407ab4:	and	w0, w0, #0xff
  407ab8:	eor	w0, w0, #0x1
  407abc:	and	w0, w0, #0xff
  407ac0:	cmp	w0, #0x0
  407ac4:	b.ne	407b00 <vconsole_convert_to_x11+0x298>  // b.any
  407ac8:	ldr	x0, [sp, #88]
  407acc:	ldr	x19, [x0, #168]
  407ad0:	ldr	x0, [sp, #152]
  407ad4:	add	x0, x0, #0x20
  407ad8:	ldr	x0, [x0]
  407adc:	bl	405e18 <empty_or_dash_to_null>
  407ae0:	mov	x1, x0
  407ae4:	mov	x0, x19
  407ae8:	bl	405cec <streq_ptr>
  407aec:	and	w0, w0, #0xff
  407af0:	eor	w0, w0, #0x1
  407af4:	and	w0, w0, #0xff
  407af8:	cmp	w0, #0x0
  407afc:	b.eq	407bc4 <vconsole_convert_to_x11+0x35c>  // b.none
  407b00:	ldr	x0, [sp, #88]
  407b04:	add	x19, x0, #0x90
  407b08:	ldr	x0, [sp, #152]
  407b0c:	add	x0, x0, #0x8
  407b10:	ldr	x0, [x0]
  407b14:	bl	405e18 <empty_or_dash_to_null>
  407b18:	mov	x1, x0
  407b1c:	mov	x0, x19
  407b20:	bl	4023a0 <free_and_strdup@plt>
  407b24:	cmp	w0, #0x0
  407b28:	b.lt	407bb0 <vconsole_convert_to_x11+0x348>  // b.tstop
  407b2c:	ldr	x0, [sp, #88]
  407b30:	add	x19, x0, #0x98
  407b34:	ldr	x0, [sp, #152]
  407b38:	add	x0, x0, #0x10
  407b3c:	ldr	x0, [x0]
  407b40:	bl	405e18 <empty_or_dash_to_null>
  407b44:	mov	x1, x0
  407b48:	mov	x0, x19
  407b4c:	bl	4023a0 <free_and_strdup@plt>
  407b50:	cmp	w0, #0x0
  407b54:	b.lt	407bb0 <vconsole_convert_to_x11+0x348>  // b.tstop
  407b58:	ldr	x0, [sp, #88]
  407b5c:	add	x19, x0, #0xa0
  407b60:	ldr	x0, [sp, #152]
  407b64:	add	x0, x0, #0x18
  407b68:	ldr	x0, [x0]
  407b6c:	bl	405e18 <empty_or_dash_to_null>
  407b70:	mov	x1, x0
  407b74:	mov	x0, x19
  407b78:	bl	4023a0 <free_and_strdup@plt>
  407b7c:	cmp	w0, #0x0
  407b80:	b.lt	407bb0 <vconsole_convert_to_x11+0x348>  // b.tstop
  407b84:	ldr	x0, [sp, #88]
  407b88:	add	x19, x0, #0xa8
  407b8c:	ldr	x0, [sp, #152]
  407b90:	add	x0, x0, #0x20
  407b94:	ldr	x0, [x0]
  407b98:	bl	405e18 <empty_or_dash_to_null>
  407b9c:	mov	x1, x0
  407ba0:	mov	x0, x19
  407ba4:	bl	4023a0 <free_and_strdup@plt>
  407ba8:	cmp	w0, #0x0
  407bac:	b.ge	407bbc <vconsole_convert_to_x11+0x354>  // b.tcont
  407bb0:	mov	w20, #0xfffffff4            	// #-12
  407bb4:	mov	w19, #0x0                   	// #0
  407bb8:	b	407bcc <vconsole_convert_to_x11+0x364>
  407bbc:	mov	w0, #0x1                   	// #1
  407bc0:	str	w0, [sp, #100]
  407bc4:	mov	w19, #0x1                   	// #1
  407bc8:	nop
  407bcc:	add	x0, sp, #0x98
  407bd0:	bl	405ef0 <strv_freep>
  407bd4:	cmp	w19, #0x0
  407bd8:	b.eq	407be8 <vconsole_convert_to_x11+0x380>  // b.none
  407bdc:	cmp	w19, #0x1
  407be0:	b.eq	407bf0 <vconsole_convert_to_x11+0x388>  // b.none
  407be4:	b	407bf8 <vconsole_convert_to_x11+0x390>
  407be8:	mov	w19, #0x0                   	// #0
  407bec:	b	407bfc <vconsole_convert_to_x11+0x394>
  407bf0:	mov	w19, #0x1                   	// #1
  407bf4:	b	407bfc <vconsole_convert_to_x11+0x394>
  407bf8:	b	407998 <vconsole_convert_to_x11+0x130>
  407bfc:	add	x0, sp, #0x90
  407c00:	bl	405e9c <fclosep>
  407c04:	cmp	w19, #0x1
  407c08:	b.ne	407df4 <vconsole_convert_to_x11+0x58c>  // b.any
  407c0c:	ldr	w0, [sp, #100]
  407c10:	cmp	w0, #0x0
  407c14:	b.le	407cdc <vconsole_convert_to_x11+0x474>
  407c18:	mov	w0, #0x6                   	// #6
  407c1c:	str	w0, [sp, #132]
  407c20:	str	wzr, [sp, #136]
  407c24:	str	wzr, [sp, #140]
  407c28:	ldr	w0, [sp, #140]
  407c2c:	bl	4027d0 <log_get_max_level_realm@plt>
  407c30:	mov	w1, w0
  407c34:	ldr	w0, [sp, #132]
  407c38:	and	w0, w0, #0x7
  407c3c:	cmp	w1, w0
  407c40:	b.lt	407cd0 <vconsole_convert_to_x11+0x468>  // b.tstop
  407c44:	ldr	w0, [sp, #140]
  407c48:	lsl	w1, w0, #10
  407c4c:	ldr	w0, [sp, #132]
  407c50:	orr	w19, w1, w0
  407c54:	adrp	x0, 409000 <_fini+0x328>
  407c58:	add	x20, x0, #0xc63
  407c5c:	ldr	x0, [sp, #88]
  407c60:	ldr	x0, [x0, #144]
  407c64:	bl	405d1c <strempty>
  407c68:	mov	x22, x0
  407c6c:	ldr	x0, [sp, #88]
  407c70:	ldr	x0, [x0, #152]
  407c74:	bl	405d1c <strempty>
  407c78:	mov	x23, x0
  407c7c:	ldr	x0, [sp, #88]
  407c80:	ldr	x0, [x0, #160]
  407c84:	bl	405d1c <strempty>
  407c88:	mov	x21, x0
  407c8c:	ldr	x0, [sp, #88]
  407c90:	ldr	x0, [x0, #168]
  407c94:	bl	405d1c <strempty>
  407c98:	str	x0, [sp, #8]
  407c9c:	str	x21, [sp]
  407ca0:	mov	x7, x23
  407ca4:	mov	x6, x22
  407ca8:	adrp	x0, 409000 <_fini+0x328>
  407cac:	add	x5, x0, #0xf88
  407cb0:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407cb4:	add	x4, x0, #0x268
  407cb8:	mov	w3, #0x236                 	// #566
  407cbc:	mov	x2, x20
  407cc0:	ldr	w1, [sp, #136]
  407cc4:	mov	w0, w19
  407cc8:	bl	402640 <log_internal_realm@plt>
  407ccc:	b	407de0 <vconsole_convert_to_x11+0x578>
  407cd0:	ldr	w0, [sp, #136]
  407cd4:	cmp	w0, #0x0
  407cd8:	b	407de0 <vconsole_convert_to_x11+0x578>
  407cdc:	ldr	w0, [sp, #100]
  407ce0:	cmp	w0, #0x0
  407ce4:	b.ge	407d6c <vconsole_convert_to_x11+0x504>  // b.tcont
  407ce8:	mov	w0, #0x5                   	// #5
  407cec:	str	w0, [sp, #120]
  407cf0:	str	wzr, [sp, #124]
  407cf4:	str	wzr, [sp, #128]
  407cf8:	ldr	w0, [sp, #128]
  407cfc:	bl	4027d0 <log_get_max_level_realm@plt>
  407d00:	mov	w1, w0
  407d04:	ldr	w0, [sp, #120]
  407d08:	and	w0, w0, #0x7
  407d0c:	cmp	w1, w0
  407d10:	b.lt	407d60 <vconsole_convert_to_x11+0x4f8>  // b.tstop
  407d14:	ldr	w0, [sp, #128]
  407d18:	lsl	w1, w0, #10
  407d1c:	ldr	w0, [sp, #120]
  407d20:	orr	w7, w1, w0
  407d24:	adrp	x0, 409000 <_fini+0x328>
  407d28:	add	x1, x0, #0xc63
  407d2c:	ldr	x0, [sp, #88]
  407d30:	ldr	x0, [x0, #192]
  407d34:	mov	x6, x0
  407d38:	adrp	x0, 409000 <_fini+0x328>
  407d3c:	add	x5, x0, #0xfd8
  407d40:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407d44:	add	x4, x0, #0x268
  407d48:	mov	w3, #0x23c                 	// #572
  407d4c:	mov	x2, x1
  407d50:	ldr	w1, [sp, #124]
  407d54:	mov	w0, w7
  407d58:	bl	402640 <log_internal_realm@plt>
  407d5c:	b	407de0 <vconsole_convert_to_x11+0x578>
  407d60:	ldr	w0, [sp, #124]
  407d64:	cmp	w0, #0x0
  407d68:	b	407de0 <vconsole_convert_to_x11+0x578>
  407d6c:	mov	w0, #0x7                   	// #7
  407d70:	str	w0, [sp, #108]
  407d74:	str	wzr, [sp, #112]
  407d78:	str	wzr, [sp, #116]
  407d7c:	ldr	w0, [sp, #116]
  407d80:	bl	4027d0 <log_get_max_level_realm@plt>
  407d84:	mov	w1, w0
  407d88:	ldr	w0, [sp, #108]
  407d8c:	and	w0, w0, #0x7
  407d90:	cmp	w1, w0
  407d94:	b.lt	407dd8 <vconsole_convert_to_x11+0x570>  // b.tstop
  407d98:	ldr	w0, [sp, #116]
  407d9c:	lsl	w1, w0, #10
  407da0:	ldr	w0, [sp, #108]
  407da4:	orr	w6, w1, w0
  407da8:	adrp	x0, 409000 <_fini+0x328>
  407dac:	add	x1, x0, #0xc63
  407db0:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407db4:	add	x5, x0, #0x20
  407db8:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407dbc:	add	x4, x0, #0x268
  407dc0:	mov	w3, #0x23f                 	// #575
  407dc4:	mov	x2, x1
  407dc8:	ldr	w1, [sp, #112]
  407dcc:	mov	w0, w6
  407dd0:	bl	402640 <log_internal_realm@plt>
  407dd4:	b	407de0 <vconsole_convert_to_x11+0x578>
  407dd8:	ldr	w0, [sp, #112]
  407ddc:	cmp	w0, #0x0
  407de0:	ldr	w0, [sp, #100]
  407de4:	cmp	w0, #0x0
  407de8:	cset	w0, gt
  407dec:	and	w0, w0, #0xff
  407df0:	mov	w20, w0
  407df4:	mov	w1, w20
  407df8:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  407dfc:	add	x0, x0, #0xaa8
  407e00:	ldr	x2, [sp, #168]
  407e04:	ldr	x0, [x0]
  407e08:	eor	x0, x2, x0
  407e0c:	cmp	x0, #0x0
  407e10:	b.eq	407e18 <vconsole_convert_to_x11+0x5b0>  // b.none
  407e14:	bl	402580 <__stack_chk_fail@plt>
  407e18:	mov	w0, w1
  407e1c:	ldp	x19, x20, [sp, #32]
  407e20:	ldp	x21, x22, [sp, #48]
  407e24:	ldr	x23, [sp, #64]
  407e28:	ldp	x29, x30, [sp, #16]
  407e2c:	add	sp, sp, #0xb0
  407e30:	ret

0000000000407e34 <find_converted_keymap>:
  407e34:	stp	x29, x30, [sp, #-128]!
  407e38:	mov	x29, sp
  407e3c:	stp	x19, x20, [sp, #16]
  407e40:	str	x0, [sp, #56]
  407e44:	str	x1, [sp, #48]
  407e48:	str	x2, [sp, #40]
  407e4c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  407e50:	add	x0, x0, #0xaa8
  407e54:	ldr	x1, [x0]
  407e58:	str	x1, [sp, #120]
  407e5c:	mov	x1, #0x0                   	// #0
  407e60:	ldr	x0, [sp, #48]
  407e64:	cmp	x0, #0x0
  407e68:	b.eq	407e8c <find_converted_keymap+0x58>  // b.none
  407e6c:	mov	x3, #0x0                   	// #0
  407e70:	ldr	x2, [sp, #48]
  407e74:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407e78:	add	x1, x0, #0x58
  407e7c:	ldr	x0, [sp, #56]
  407e80:	bl	4023f0 <strjoin_real@plt>
  407e84:	str	x0, [sp, #80]
  407e88:	b	407e98 <find_converted_keymap+0x64>
  407e8c:	ldr	x0, [sp, #56]
  407e90:	bl	402690 <strdup@plt>
  407e94:	str	x0, [sp, #80]
  407e98:	ldr	x0, [sp, #80]
  407e9c:	cmp	x0, #0x0
  407ea0:	b.ne	407eac <find_converted_keymap+0x78>  // b.any
  407ea4:	mov	w19, #0xfffffff4            	// #-12
  407ea8:	b	408098 <find_converted_keymap+0x264>
  407eac:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407eb0:	add	x0, x0, #0x60
  407eb4:	str	x0, [sp, #104]
  407eb8:	b	408078 <find_converted_keymap+0x244>
  407ebc:	str	xzr, [sp, #88]
  407ec0:	str	xzr, [sp, #96]
  407ec4:	ldr	x1, [sp, #80]
  407ec8:	mov	x4, #0x0                   	// #0
  407ecc:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407ed0:	add	x3, x0, #0xb8
  407ed4:	mov	x2, x1
  407ed8:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407edc:	add	x1, x0, #0xc0
  407ee0:	ldr	x0, [sp, #104]
  407ee4:	bl	4023f0 <strjoin_real@plt>
  407ee8:	str	x0, [sp, #88]
  407eec:	ldr	x1, [sp, #80]
  407ef0:	mov	x4, #0x0                   	// #0
  407ef4:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407ef8:	add	x3, x0, #0xc8
  407efc:	mov	x2, x1
  407f00:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407f04:	add	x1, x0, #0xc0
  407f08:	ldr	x0, [sp, #104]
  407f0c:	bl	4023f0 <strjoin_real@plt>
  407f10:	str	x0, [sp, #96]
  407f14:	ldr	x0, [sp, #88]
  407f18:	cmp	x0, #0x0
  407f1c:	b.eq	407f2c <find_converted_keymap+0xf8>  // b.none
  407f20:	ldr	x0, [sp, #96]
  407f24:	cmp	x0, #0x0
  407f28:	b.ne	407f38 <find_converted_keymap+0x104>  // b.any
  407f2c:	mov	w19, #0xfffffff4            	// #-12
  407f30:	mov	w20, #0x0                   	// #0
  407f34:	b	408030 <find_converted_keymap+0x1fc>
  407f38:	ldr	x0, [sp, #88]
  407f3c:	mov	w1, #0x0                   	// #0
  407f40:	bl	402480 <access@plt>
  407f44:	cmp	w0, #0x0
  407f48:	cset	w0, eq  // eq = none
  407f4c:	strb	w0, [sp, #67]
  407f50:	ldrb	w0, [sp, #67]
  407f54:	cmp	w0, #0x0
  407f58:	b.ne	407f70 <find_converted_keymap+0x13c>  // b.any
  407f5c:	ldr	x0, [sp, #96]
  407f60:	mov	w1, #0x0                   	// #0
  407f64:	bl	402480 <access@plt>
  407f68:	cmp	w0, #0x0
  407f6c:	b.ne	40802c <find_converted_keymap+0x1f8>  // b.any
  407f70:	mov	w0, #0x7                   	// #7
  407f74:	str	w0, [sp, #68]
  407f78:	str	wzr, [sp, #72]
  407f7c:	str	wzr, [sp, #76]
  407f80:	ldr	w0, [sp, #76]
  407f84:	bl	4027d0 <log_get_max_level_realm@plt>
  407f88:	mov	w1, w0
  407f8c:	ldr	w0, [sp, #68]
  407f90:	and	w0, w0, #0x7
  407f94:	cmp	w1, w0
  407f98:	b.lt	408000 <find_converted_keymap+0x1cc>  // b.tstop
  407f9c:	ldr	w0, [sp, #76]
  407fa0:	lsl	w1, w0, #10
  407fa4:	ldr	w0, [sp, #68]
  407fa8:	orr	w8, w1, w0
  407fac:	adrp	x0, 409000 <_fini+0x328>
  407fb0:	add	x1, x0, #0xc63
  407fb4:	ldr	x2, [sp, #80]
  407fb8:	ldrb	w0, [sp, #67]
  407fbc:	cmp	w0, #0x0
  407fc0:	b.eq	407fcc <find_converted_keymap+0x198>  // b.none
  407fc4:	ldr	x0, [sp, #88]
  407fc8:	b	407fd0 <find_converted_keymap+0x19c>
  407fcc:	ldr	x0, [sp, #96]
  407fd0:	mov	x7, x0
  407fd4:	mov	x6, x2
  407fd8:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407fdc:	add	x5, x0, #0xd0
  407fe0:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  407fe4:	add	x4, x0, #0x280
  407fe8:	mov	w3, #0x25a                 	// #602
  407fec:	mov	x2, x1
  407ff0:	ldr	w1, [sp, #72]
  407ff4:	mov	w0, w8
  407ff8:	bl	402640 <log_internal_realm@plt>
  407ffc:	b	408008 <find_converted_keymap+0x1d4>
  408000:	ldr	w0, [sp, #72]
  408004:	cmp	w0, #0x0
  408008:	ldr	x0, [sp, #80]
  40800c:	str	x0, [sp, #112]
  408010:	str	xzr, [sp, #80]
  408014:	ldr	x1, [sp, #112]
  408018:	ldr	x0, [sp, #40]
  40801c:	str	x1, [x0]
  408020:	mov	w19, #0x1                   	// #1
  408024:	mov	w20, #0x0                   	// #0
  408028:	b	408030 <find_converted_keymap+0x1fc>
  40802c:	mov	w20, #0x1                   	// #1
  408030:	add	x0, sp, #0x60
  408034:	bl	405cc8 <freep>
  408038:	cmp	w20, #0x1
  40803c:	b.eq	408048 <find_converted_keymap+0x214>  // b.none
  408040:	mov	w20, #0x0                   	// #0
  408044:	b	40804c <find_converted_keymap+0x218>
  408048:	mov	w20, #0x1                   	// #1
  40804c:	add	x0, sp, #0x58
  408050:	bl	405cc8 <freep>
  408054:	cmp	w20, #0x1
  408058:	b.ne	408098 <find_converted_keymap+0x264>  // b.any
  40805c:	ldr	x0, [sp, #104]
  408060:	bl	402780 <strlen@plt>
  408064:	mov	x1, x0
  408068:	ldr	x0, [sp, #104]
  40806c:	add	x0, x0, x1
  408070:	add	x0, x0, #0x1
  408074:	str	x0, [sp, #104]
  408078:	ldr	x0, [sp, #104]
  40807c:	cmp	x0, #0x0
  408080:	b.eq	408094 <find_converted_keymap+0x260>  // b.none
  408084:	ldr	x0, [sp, #104]
  408088:	ldrb	w0, [x0]
  40808c:	cmp	w0, #0x0
  408090:	b.ne	407ebc <find_converted_keymap+0x88>  // b.any
  408094:	mov	w19, #0x0                   	// #0
  408098:	add	x0, sp, #0x50
  40809c:	bl	405cc8 <freep>
  4080a0:	mov	w1, w19
  4080a4:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4080a8:	add	x0, x0, #0xaa8
  4080ac:	ldr	x2, [sp, #120]
  4080b0:	ldr	x0, [x0]
  4080b4:	eor	x0, x2, x0
  4080b8:	cmp	x0, #0x0
  4080bc:	b.eq	4080c4 <find_converted_keymap+0x290>  // b.none
  4080c0:	bl	402580 <__stack_chk_fail@plt>
  4080c4:	mov	w0, w1
  4080c8:	ldp	x19, x20, [sp, #16]
  4080cc:	ldp	x29, x30, [sp], #128
  4080d0:	ret

00000000004080d4 <find_legacy_keymap>:
  4080d4:	stp	x29, x30, [sp, #-208]!
  4080d8:	mov	x29, sp
  4080dc:	stp	x19, x20, [sp, #16]
  4080e0:	str	x0, [x29, #40]
  4080e4:	str	x1, [x29, #32]
  4080e8:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4080ec:	add	x0, x0, #0xaa8
  4080f0:	ldr	x1, [x0]
  4080f4:	str	x1, [x29, #200]
  4080f8:	mov	x1, #0x0                   	// #0
  4080fc:	str	xzr, [x29, #88]
  408100:	str	xzr, [x29, #96]
  408104:	str	wzr, [x29, #52]
  408108:	str	wzr, [x29, #56]
  40810c:	ldr	x0, [x29, #40]
  408110:	ldr	x0, [x0, #144]
  408114:	bl	405d40 <isempty>
  408118:	and	w0, w0, #0xff
  40811c:	and	x0, x0, #0xff
  408120:	cmp	x0, #0x0
  408124:	b.eq	408150 <find_legacy_keymap+0x7c>  // b.none
  408128:	adrp	x0, 409000 <_fini+0x328>
  40812c:	add	x1, x0, #0xc63
  408130:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408134:	add	x4, x0, #0x298
  408138:	mov	w3, #0x26d                 	// #621
  40813c:	mov	x2, x1
  408140:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408144:	add	x1, x0, #0xf0
  408148:	mov	w0, #0x0                   	// #0
  40814c:	bl	402430 <log_assert_failed_realm@plt>
  408150:	bl	405fd0 <systemd_kbd_model_map>
  408154:	str	x0, [x29, #128]
  408158:	adrp	x0, 409000 <_fini+0x328>
  40815c:	add	x1, x0, #0xce0
  408160:	ldr	x0, [x29, #128]
  408164:	bl	4027a0 <fopen64@plt>
  408168:	str	x0, [x29, #88]
  40816c:	ldr	x0, [x29, #88]
  408170:	cmp	x0, #0x0
  408174:	b.ne	408188 <find_legacy_keymap+0xb4>  // b.any
  408178:	bl	402510 <__errno_location@plt>
  40817c:	ldr	w0, [x0]
  408180:	neg	w19, w0
  408184:	b	408654 <find_legacy_keymap+0x580>
  408188:	str	xzr, [x29, #104]
  40818c:	str	wzr, [x29, #60]
  408190:	ldr	x0, [x29, #88]
  408194:	add	x2, x29, #0x68
  408198:	add	x1, x29, #0x34
  40819c:	mov	x5, x2
  4081a0:	mov	x4, x1
  4081a4:	mov	x3, x0
  4081a8:	mov	w2, #0xffffffff            	// #-1
  4081ac:	mov	w1, #0x5                   	// #5
  4081b0:	ldr	x0, [x29, #128]
  4081b4:	bl	40755c <read_next_mapping>
  4081b8:	str	w0, [x29, #64]
  4081bc:	ldr	w0, [x29, #64]
  4081c0:	cmp	w0, #0x0
  4081c4:	b.ge	4081d4 <find_legacy_keymap+0x100>  // b.tcont
  4081c8:	ldr	w19, [x29, #64]
  4081cc:	mov	w20, #0x0                   	// #0
  4081d0:	b	408484 <find_legacy_keymap+0x3b0>
  4081d4:	ldr	w0, [x29, #64]
  4081d8:	cmp	w0, #0x0
  4081dc:	b.ne	4081e8 <find_legacy_keymap+0x114>  // b.any
  4081e0:	mov	w20, #0x1                   	// #1
  4081e4:	b	408484 <find_legacy_keymap+0x3b0>
  4081e8:	ldr	x0, [x29, #40]
  4081ec:	ldr	x2, [x0, #144]
  4081f0:	ldr	x0, [x29, #104]
  4081f4:	add	x0, x0, #0x8
  4081f8:	ldr	x0, [x0]
  4081fc:	mov	x1, x0
  408200:	mov	x0, x2
  408204:	bl	402680 <strcmp@plt>
  408208:	cmp	w0, #0x0
  40820c:	b.ne	40821c <find_legacy_keymap+0x148>  // b.any
  408210:	mov	w0, #0xa                   	// #10
  408214:	str	w0, [x29, #60]
  408218:	b	4082bc <find_legacy_keymap+0x1e8>
  40821c:	ldr	x0, [x29, #40]
  408220:	ldr	x2, [x0, #144]
  408224:	ldr	x0, [x29, #104]
  408228:	add	x0, x0, #0x8
  40822c:	ldr	x0, [x0]
  408230:	mov	x1, x0
  408234:	mov	x0, x2
  408238:	bl	405f64 <startswith_comma>
  40823c:	and	w0, w0, #0xff
  408240:	cmp	w0, #0x0
  408244:	b.eq	408254 <find_legacy_keymap+0x180>  // b.none
  408248:	mov	w0, #0x5                   	// #5
  40824c:	str	w0, [x29, #60]
  408250:	b	4082bc <find_legacy_keymap+0x1e8>
  408254:	str	xzr, [x29, #112]
  408258:	ldr	x0, [x29, #104]
  40825c:	add	x0, x0, #0x8
  408260:	ldr	x20, [x0]
  408264:	ldr	x0, [x29, #104]
  408268:	add	x0, x0, #0x8
  40826c:	ldr	x2, [x0]
  408270:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408274:	add	x1, x0, #0x108
  408278:	mov	x0, x2
  40827c:	bl	402280 <strcspn@plt>
  408280:	mov	x1, x0
  408284:	mov	x0, x20
  408288:	bl	402560 <strndup@plt>
  40828c:	str	x0, [x29, #112]
  408290:	ldr	x0, [x29, #40]
  408294:	ldr	x0, [x0, #144]
  408298:	ldr	x1, [x29, #112]
  40829c:	bl	405f64 <startswith_comma>
  4082a0:	and	w0, w0, #0xff
  4082a4:	cmp	w0, #0x0
  4082a8:	b.eq	4082b4 <find_legacy_keymap+0x1e0>  // b.none
  4082ac:	mov	w0, #0x1                   	// #1
  4082b0:	str	w0, [x29, #60]
  4082b4:	add	x0, x29, #0x70
  4082b8:	bl	405cc8 <freep>
  4082bc:	ldr	w0, [x29, #60]
  4082c0:	cmp	w0, #0x0
  4082c4:	b.eq	408388 <find_legacy_keymap+0x2b4>  // b.none
  4082c8:	ldr	x0, [x29, #40]
  4082cc:	ldr	x0, [x0, #152]
  4082d0:	bl	405d40 <isempty>
  4082d4:	and	w0, w0, #0xff
  4082d8:	cmp	w0, #0x0
  4082dc:	b.ne	40830c <find_legacy_keymap+0x238>  // b.any
  4082e0:	ldr	x0, [x29, #40]
  4082e4:	ldr	x2, [x0, #152]
  4082e8:	ldr	x0, [x29, #104]
  4082ec:	add	x0, x0, #0x10
  4082f0:	ldr	x0, [x0]
  4082f4:	mov	x1, x0
  4082f8:	mov	x0, x2
  4082fc:	bl	405cec <streq_ptr>
  408300:	and	w0, w0, #0xff
  408304:	cmp	w0, #0x0
  408308:	b.eq	408388 <find_legacy_keymap+0x2b4>  // b.none
  40830c:	ldr	w0, [x29, #60]
  408310:	add	w0, w0, #0x1
  408314:	str	w0, [x29, #60]
  408318:	ldr	x0, [x29, #40]
  40831c:	ldr	x2, [x0, #160]
  408320:	ldr	x0, [x29, #104]
  408324:	add	x0, x0, #0x18
  408328:	ldr	x0, [x0]
  40832c:	mov	x1, x0
  408330:	mov	x0, x2
  408334:	bl	405cec <streq_ptr>
  408338:	and	w0, w0, #0xff
  40833c:	cmp	w0, #0x0
  408340:	b.eq	408388 <find_legacy_keymap+0x2b4>  // b.none
  408344:	ldr	w0, [x29, #60]
  408348:	add	w0, w0, #0x1
  40834c:	str	w0, [x29, #60]
  408350:	ldr	x0, [x29, #40]
  408354:	ldr	x2, [x0, #168]
  408358:	ldr	x0, [x29, #104]
  40835c:	add	x0, x0, #0x20
  408360:	ldr	x0, [x0]
  408364:	mov	x1, x0
  408368:	mov	x0, x2
  40836c:	bl	405cec <streq_ptr>
  408370:	and	w0, w0, #0xff
  408374:	cmp	w0, #0x0
  408378:	b.eq	408388 <find_legacy_keymap+0x2b4>  // b.none
  40837c:	ldr	w0, [x29, #60]
  408380:	add	w0, w0, #0x1
  408384:	str	w0, [x29, #60]
  408388:	ldr	w0, [x29, #56]
  40838c:	str	w0, [x29, #68]
  408390:	mov	w0, #0x1                   	// #1
  408394:	str	w0, [x29, #72]
  408398:	ldr	w0, [x29, #68]
  40839c:	ldr	w2, [x29, #72]
  4083a0:	ldr	w1, [x29, #72]
  4083a4:	cmp	w2, w0
  4083a8:	csel	w1, w1, w0, cs  // cs = hs, nlast
  4083ac:	ldr	w0, [x29, #60]
  4083b0:	cmp	w1, w0
  4083b4:	b.hi	408480 <find_legacy_keymap+0x3ac>  // b.pmore
  4083b8:	mov	w0, #0x7                   	// #7
  4083bc:	str	w0, [x29, #76]
  4083c0:	str	wzr, [x29, #80]
  4083c4:	str	wzr, [x29, #84]
  4083c8:	ldr	w0, [x29, #84]
  4083cc:	bl	4027d0 <log_get_max_level_realm@plt>
  4083d0:	mov	w1, w0
  4083d4:	ldr	w0, [x29, #76]
  4083d8:	and	w0, w0, #0x7
  4083dc:	cmp	w1, w0
  4083e0:	b.lt	408434 <find_legacy_keymap+0x360>  // b.tstop
  4083e4:	ldr	w0, [x29, #84]
  4083e8:	lsl	w1, w0, #10
  4083ec:	ldr	w0, [x29, #76]
  4083f0:	orr	w8, w1, w0
  4083f4:	adrp	x0, 409000 <_fini+0x328>
  4083f8:	add	x1, x0, #0xc63
  4083fc:	ldr	x0, [x29, #104]
  408400:	ldr	x0, [x0]
  408404:	ldr	w7, [x29, #60]
  408408:	mov	x6, x0
  40840c:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408410:	add	x5, x0, #0x110
  408414:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408418:	add	x4, x0, #0x2b0
  40841c:	mov	w3, #0x2a3                 	// #675
  408420:	mov	x2, x1
  408424:	ldr	w1, [x29, #80]
  408428:	mov	w0, w8
  40842c:	bl	402640 <log_internal_realm@plt>
  408430:	b	40843c <find_legacy_keymap+0x368>
  408434:	ldr	w0, [x29, #80]
  408438:	cmp	w0, #0x0
  40843c:	ldr	w1, [x29, #60]
  408440:	ldr	w0, [x29, #56]
  408444:	cmp	w1, w0
  408448:	b.ls	408480 <find_legacy_keymap+0x3ac>  // b.plast
  40844c:	ldr	w0, [x29, #60]
  408450:	str	w0, [x29, #56]
  408454:	ldr	x0, [x29, #104]
  408458:	ldr	x1, [x0]
  40845c:	add	x0, x29, #0x60
  408460:	bl	4023a0 <free_and_strdup@plt>
  408464:	str	w0, [x29, #64]
  408468:	ldr	w0, [x29, #64]
  40846c:	cmp	w0, #0x0
  408470:	b.ge	408480 <find_legacy_keymap+0x3ac>  // b.tcont
  408474:	ldr	w19, [x29, #64]
  408478:	mov	w20, #0x0                   	// #0
  40847c:	b	408484 <find_legacy_keymap+0x3b0>
  408480:	mov	w20, #0x2                   	// #2
  408484:	add	x0, x29, #0x68
  408488:	bl	405ef0 <strv_freep>
  40848c:	cmp	w20, #0x0
  408490:	b.eq	408654 <find_legacy_keymap+0x580>  // b.none
  408494:	cmp	w20, #0x2
  408498:	b.ne	4084a0 <find_legacy_keymap+0x3cc>  // b.any
  40849c:	b	408188 <find_legacy_keymap+0xb4>
  4084a0:	ldr	w0, [x29, #56]
  4084a4:	cmp	w0, #0x9
  4084a8:	b.hi	408624 <find_legacy_keymap+0x550>  // b.pmore
  4084ac:	ldr	x0, [x29, #40]
  4084b0:	ldr	x0, [x0, #144]
  4084b4:	cmp	x0, #0x0
  4084b8:	b.eq	408624 <find_legacy_keymap+0x550>  // b.none
  4084bc:	str	xzr, [x29, #120]
  4084c0:	ldr	x0, [x29, #40]
  4084c4:	ldr	x0, [x0, #144]
  4084c8:	str	x0, [x29, #136]
  4084cc:	ldr	x0, [x29, #40]
  4084d0:	ldr	x2, [x0, #144]
  4084d4:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  4084d8:	add	x1, x0, #0x108
  4084dc:	mov	x0, x2
  4084e0:	bl	402280 <strcspn@plt>
  4084e4:	mov	x1, x0
  4084e8:	ldr	x0, [x29, #136]
  4084ec:	bl	402390 <strnlen@plt>
  4084f0:	str	x0, [x29, #144]
  4084f4:	ldr	x0, [x29, #144]
  4084f8:	add	x0, x0, #0x1
  4084fc:	add	x0, x0, #0xf
  408500:	lsr	x0, x0, #4
  408504:	lsl	x0, x0, #4
  408508:	sub	sp, sp, x0
  40850c:	mov	x0, sp
  408510:	add	x0, x0, #0xf
  408514:	lsr	x0, x0, #4
  408518:	lsl	x0, x0, #4
  40851c:	str	x0, [x29, #152]
  408520:	ldr	x1, [x29, #152]
  408524:	ldr	x0, [x29, #144]
  408528:	add	x0, x1, x0
  40852c:	strb	wzr, [x0]
  408530:	ldr	x2, [x29, #144]
  408534:	ldr	x1, [x29, #136]
  408538:	ldr	x0, [x29, #152]
  40853c:	bl	4023d0 <memcpy@plt>
  408540:	str	x0, [x29, #160]
  408544:	ldr	x0, [x29, #40]
  408548:	ldr	x0, [x0, #160]
  40854c:	cmp	x0, #0x0
  408550:	b.eq	4085d8 <find_legacy_keymap+0x504>  // b.none
  408554:	ldr	x0, [x29, #40]
  408558:	ldr	x0, [x0, #160]
  40855c:	str	x0, [x29, #168]
  408560:	ldr	x0, [x29, #40]
  408564:	ldr	x2, [x0, #160]
  408568:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  40856c:	add	x1, x0, #0x108
  408570:	mov	x0, x2
  408574:	bl	402280 <strcspn@plt>
  408578:	mov	x1, x0
  40857c:	ldr	x0, [x29, #168]
  408580:	bl	402390 <strnlen@plt>
  408584:	str	x0, [x29, #176]
  408588:	ldr	x0, [x29, #176]
  40858c:	add	x0, x0, #0x1
  408590:	add	x0, x0, #0xf
  408594:	lsr	x0, x0, #4
  408598:	lsl	x0, x0, #4
  40859c:	sub	sp, sp, x0
  4085a0:	mov	x0, sp
  4085a4:	add	x0, x0, #0xf
  4085a8:	lsr	x0, x0, #4
  4085ac:	lsl	x0, x0, #4
  4085b0:	str	x0, [x29, #184]
  4085b4:	ldr	x1, [x29, #184]
  4085b8:	ldr	x0, [x29, #176]
  4085bc:	add	x0, x1, x0
  4085c0:	strb	wzr, [x0]
  4085c4:	ldr	x2, [x29, #176]
  4085c8:	ldr	x1, [x29, #168]
  4085cc:	ldr	x0, [x29, #184]
  4085d0:	bl	4023d0 <memcpy@plt>
  4085d4:	str	x0, [x29, #120]
  4085d8:	add	x0, x29, #0x70
  4085dc:	mov	x2, x0
  4085e0:	ldr	x1, [x29, #120]
  4085e4:	ldr	x0, [x29, #160]
  4085e8:	bl	407e34 <find_converted_keymap>
  4085ec:	str	w0, [x29, #64]
  4085f0:	ldr	w0, [x29, #64]
  4085f4:	cmp	w0, #0x0
  4085f8:	b.ge	408604 <find_legacy_keymap+0x530>  // b.tcont
  4085fc:	ldr	w19, [x29, #64]
  408600:	b	408654 <find_legacy_keymap+0x580>
  408604:	ldr	w0, [x29, #64]
  408608:	cmp	w0, #0x0
  40860c:	b.le	408624 <find_legacy_keymap+0x550>
  408610:	ldr	x0, [x29, #96]
  408614:	bl	402710 <free@plt>
  408618:	ldr	x0, [x29, #112]
  40861c:	str	x0, [x29, #96]
  408620:	str	xzr, [x29, #112]
  408624:	ldr	x0, [x29, #96]
  408628:	str	x0, [x29, #192]
  40862c:	str	xzr, [x29, #96]
  408630:	ldr	x1, [x29, #192]
  408634:	ldr	x0, [x29, #32]
  408638:	str	x1, [x0]
  40863c:	ldr	x0, [x29, #32]
  408640:	ldr	x0, [x0]
  408644:	cmp	x0, #0x0
  408648:	cset	w0, ne  // ne = any
  40864c:	and	w0, w0, #0xff
  408650:	mov	w19, w0
  408654:	add	x0, x29, #0x60
  408658:	bl	405cc8 <freep>
  40865c:	add	x0, x29, #0x58
  408660:	bl	405e9c <fclosep>
  408664:	mov	w1, w19
  408668:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  40866c:	add	x0, x0, #0xaa8
  408670:	ldr	x2, [x29, #200]
  408674:	ldr	x0, [x0]
  408678:	eor	x0, x2, x0
  40867c:	cmp	x0, #0x0
  408680:	b.eq	408688 <find_legacy_keymap+0x5b4>  // b.none
  408684:	bl	402580 <__stack_chk_fail@plt>
  408688:	mov	w0, w1
  40868c:	mov	sp, x29
  408690:	ldp	x19, x20, [sp, #16]
  408694:	ldp	x29, x30, [sp], #208
  408698:	ret

000000000040869c <find_language_fallback>:
  40869c:	stp	x29, x30, [sp, #-96]!
  4086a0:	mov	x29, sp
  4086a4:	stp	x19, x20, [sp, #16]
  4086a8:	str	x0, [sp, #40]
  4086ac:	str	x1, [sp, #32]
  4086b0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4086b4:	add	x0, x0, #0xaa8
  4086b8:	ldr	x1, [x0]
  4086bc:	str	x1, [sp, #88]
  4086c0:	mov	x1, #0x0                   	// #0
  4086c4:	str	xzr, [sp, #56]
  4086c8:	str	wzr, [sp, #48]
  4086cc:	ldr	x0, [sp, #40]
  4086d0:	cmp	x0, #0x0
  4086d4:	cset	w0, eq  // eq = none
  4086d8:	and	w0, w0, #0xff
  4086dc:	and	x0, x0, #0xff
  4086e0:	cmp	x0, #0x0
  4086e4:	b.eq	408710 <find_language_fallback+0x74>  // b.none
  4086e8:	adrp	x0, 409000 <_fini+0x328>
  4086ec:	add	x1, x0, #0xc63
  4086f0:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  4086f4:	add	x4, x0, #0x2c8
  4086f8:	mov	w3, #0x2ca                 	// #714
  4086fc:	mov	x2, x1
  408700:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408704:	add	x1, x0, #0x138
  408708:	mov	w0, #0x0                   	// #0
  40870c:	bl	402430 <log_assert_failed_realm@plt>
  408710:	ldr	x0, [sp, #32]
  408714:	cmp	x0, #0x0
  408718:	cset	w0, eq  // eq = none
  40871c:	and	w0, w0, #0xff
  408720:	and	x0, x0, #0xff
  408724:	cmp	x0, #0x0
  408728:	b.eq	408754 <find_language_fallback+0xb8>  // b.none
  40872c:	adrp	x0, 409000 <_fini+0x328>
  408730:	add	x1, x0, #0xc63
  408734:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408738:	add	x4, x0, #0x2c8
  40873c:	mov	w3, #0x2cb                 	// #715
  408740:	mov	x2, x1
  408744:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408748:	add	x1, x0, #0x140
  40874c:	mov	w0, #0x0                   	// #0
  408750:	bl	402430 <log_assert_failed_realm@plt>
  408754:	bl	40600c <systemd_language_fallback_map>
  408758:	str	x0, [sp, #72]
  40875c:	adrp	x0, 409000 <_fini+0x328>
  408760:	add	x1, x0, #0xce0
  408764:	ldr	x0, [sp, #72]
  408768:	bl	4027a0 <fopen64@plt>
  40876c:	str	x0, [sp, #56]
  408770:	ldr	x0, [sp, #56]
  408774:	cmp	x0, #0x0
  408778:	b.ne	40878c <find_language_fallback+0xf0>  // b.any
  40877c:	bl	402510 <__errno_location@plt>
  408780:	ldr	w0, [x0]
  408784:	neg	w19, w0
  408788:	b	408880 <find_language_fallback+0x1e4>
  40878c:	str	xzr, [sp, #64]
  408790:	ldr	x0, [sp, #56]
  408794:	add	x2, sp, #0x40
  408798:	add	x1, sp, #0x30
  40879c:	mov	x5, x2
  4087a0:	mov	x4, x1
  4087a4:	mov	x3, x0
  4087a8:	mov	w2, #0x2                   	// #2
  4087ac:	mov	w1, #0x2                   	// #2
  4087b0:	ldr	x0, [sp, #72]
  4087b4:	bl	40755c <read_next_mapping>
  4087b8:	str	w0, [sp, #52]
  4087bc:	ldr	w0, [sp, #52]
  4087c0:	cmp	w0, #0x0
  4087c4:	b.gt	4087d4 <find_language_fallback+0x138>
  4087c8:	ldr	w19, [sp, #52]
  4087cc:	mov	w20, #0x0                   	// #0
  4087d0:	b	40886c <find_language_fallback+0x1d0>
  4087d4:	ldr	x0, [sp, #64]
  4087d8:	ldr	x0, [x0]
  4087dc:	mov	x1, x0
  4087e0:	ldr	x0, [sp, #40]
  4087e4:	bl	402680 <strcmp@plt>
  4087e8:	cmp	w0, #0x0
  4087ec:	b.ne	408868 <find_language_fallback+0x1cc>  // b.any
  4087f0:	ldr	x0, [sp, #64]
  4087f4:	bl	4025e0 <strv_length@plt>
  4087f8:	cmp	x0, #0x2
  4087fc:	cset	w0, ne  // ne = any
  408800:	and	w0, w0, #0xff
  408804:	and	x0, x0, #0xff
  408808:	cmp	x0, #0x0
  40880c:	b.eq	408838 <find_language_fallback+0x19c>  // b.none
  408810:	adrp	x0, 409000 <_fini+0x328>
  408814:	add	x1, x0, #0xc63
  408818:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  40881c:	add	x4, x0, #0x2c8
  408820:	mov	w3, #0x2dc                 	// #732
  408824:	mov	x2, x1
  408828:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  40882c:	add	x1, x0, #0x150
  408830:	mov	w0, #0x0                   	// #0
  408834:	bl	402430 <log_assert_failed_realm@plt>
  408838:	ldr	x0, [sp, #64]
  40883c:	ldr	x0, [x0, #8]
  408840:	str	x0, [sp, #80]
  408844:	ldr	x0, [sp, #64]
  408848:	add	x0, x0, #0x8
  40884c:	str	xzr, [x0]
  408850:	ldr	x1, [sp, #80]
  408854:	ldr	x0, [sp, #32]
  408858:	str	x1, [x0]
  40885c:	mov	w19, #0x1                   	// #1
  408860:	mov	w20, #0x0                   	// #0
  408864:	b	40886c <find_language_fallback+0x1d0>
  408868:	mov	w20, #0x1                   	// #1
  40886c:	add	x0, sp, #0x40
  408870:	bl	405ef0 <strv_freep>
  408874:	cmp	w20, #0x1
  408878:	b.ne	408880 <find_language_fallback+0x1e4>  // b.any
  40887c:	b	40878c <find_language_fallback+0xf0>
  408880:	add	x0, sp, #0x38
  408884:	bl	405e9c <fclosep>
  408888:	mov	w1, w19
  40888c:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  408890:	add	x0, x0, #0xaa8
  408894:	ldr	x2, [sp, #88]
  408898:	ldr	x0, [x0]
  40889c:	eor	x0, x2, x0
  4088a0:	cmp	x0, #0x0
  4088a4:	b.eq	4088ac <find_language_fallback+0x210>  // b.none
  4088a8:	bl	402580 <__stack_chk_fail@plt>
  4088ac:	mov	w0, w1
  4088b0:	ldp	x19, x20, [sp, #16]
  4088b4:	ldp	x29, x30, [sp], #96
  4088b8:	ret

00000000004088bc <x11_convert_to_vconsole>:
  4088bc:	stp	x29, x30, [sp, #-128]!
  4088c0:	mov	x29, sp
  4088c4:	stp	x19, x20, [sp, #16]
  4088c8:	str	x21, [sp, #32]
  4088cc:	str	x0, [sp, #56]
  4088d0:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  4088d4:	add	x0, x0, #0xaa8
  4088d8:	ldr	x1, [x0]
  4088dc:	str	x1, [sp, #120]
  4088e0:	mov	x1, #0x0                   	// #0
  4088e4:	strb	wzr, [sp, #71]
  4088e8:	ldr	x0, [sp, #56]
  4088ec:	ldr	x0, [x0, #144]
  4088f0:	bl	405d40 <isempty>
  4088f4:	and	w0, w0, #0xff
  4088f8:	cmp	w0, #0x0
  4088fc:	b.eq	408968 <x11_convert_to_vconsole+0xac>  // b.none
  408900:	ldr	x0, [sp, #56]
  408904:	ldr	x0, [x0, #192]
  408908:	bl	405d40 <isempty>
  40890c:	and	w0, w0, #0xff
  408910:	eor	w0, w0, #0x1
  408914:	and	w0, w0, #0xff
  408918:	cmp	w0, #0x0
  40891c:	b.ne	408940 <x11_convert_to_vconsole+0x84>  // b.any
  408920:	ldr	x0, [sp, #56]
  408924:	ldr	x0, [x0, #200]
  408928:	bl	405d40 <isempty>
  40892c:	and	w0, w0, #0xff
  408930:	eor	w0, w0, #0x1
  408934:	and	w0, w0, #0xff
  408938:	cmp	w0, #0x0
  40893c:	b.eq	408948 <x11_convert_to_vconsole+0x8c>  // b.none
  408940:	mov	w0, #0x1                   	// #1
  408944:	b	40894c <x11_convert_to_vconsole+0x90>
  408948:	mov	w0, #0x0                   	// #0
  40894c:	strb	w0, [sp, #71]
  408950:	ldrb	w0, [sp, #71]
  408954:	and	w0, w0, #0x1
  408958:	strb	w0, [sp, #71]
  40895c:	ldr	x0, [sp, #56]
  408960:	bl	4060c0 <context_free_vconsole>
  408964:	b	408ae4 <x11_convert_to_vconsole+0x228>
  408968:	str	xzr, [sp, #112]
  40896c:	ldr	x0, [sp, #56]
  408970:	ldr	x3, [x0, #144]
  408974:	ldr	x0, [sp, #56]
  408978:	ldr	x0, [x0, #160]
  40897c:	add	x1, sp, #0x70
  408980:	mov	x2, x1
  408984:	mov	x1, x0
  408988:	mov	x0, x3
  40898c:	bl	407e34 <find_converted_keymap>
  408990:	str	w0, [sp, #72]
  408994:	ldr	w0, [sp, #72]
  408998:	cmp	w0, #0x0
  40899c:	b.ge	4089ac <x11_convert_to_vconsole+0xf0>  // b.tcont
  4089a0:	ldr	w19, [sp, #72]
  4089a4:	mov	w20, #0x0                   	// #0
  4089a8:	b	408ad4 <x11_convert_to_vconsole+0x218>
  4089ac:	ldr	w0, [sp, #72]
  4089b0:	cmp	w0, #0x0
  4089b4:	b.ne	4089e4 <x11_convert_to_vconsole+0x128>  // b.any
  4089b8:	add	x0, sp, #0x70
  4089bc:	mov	x1, x0
  4089c0:	ldr	x0, [sp, #56]
  4089c4:	bl	4080d4 <find_legacy_keymap>
  4089c8:	str	w0, [sp, #72]
  4089cc:	ldr	w0, [sp, #72]
  4089d0:	cmp	w0, #0x0
  4089d4:	b.ge	4089e4 <x11_convert_to_vconsole+0x128>  // b.tcont
  4089d8:	ldr	w19, [sp, #72]
  4089dc:	mov	w20, #0x0                   	// #0
  4089e0:	b	408ad4 <x11_convert_to_vconsole+0x218>
  4089e4:	ldr	w0, [sp, #72]
  4089e8:	cmp	w0, #0x0
  4089ec:	b.ne	408a70 <x11_convert_to_vconsole+0x1b4>  // b.any
  4089f0:	mov	w0, #0x5                   	// #5
  4089f4:	str	w0, [sp, #76]
  4089f8:	str	wzr, [sp, #80]
  4089fc:	str	wzr, [sp, #84]
  408a00:	ldr	w0, [sp, #84]
  408a04:	bl	4027d0 <log_get_max_level_realm@plt>
  408a08:	mov	w1, w0
  408a0c:	ldr	w0, [sp, #76]
  408a10:	and	w0, w0, #0x7
  408a14:	cmp	w1, w0
  408a18:	b.lt	408a68 <x11_convert_to_vconsole+0x1ac>  // b.tstop
  408a1c:	ldr	w0, [sp, #84]
  408a20:	lsl	w1, w0, #10
  408a24:	ldr	w0, [sp, #76]
  408a28:	orr	w7, w1, w0
  408a2c:	adrp	x0, 409000 <_fini+0x328>
  408a30:	add	x1, x0, #0xc63
  408a34:	ldr	x0, [sp, #56]
  408a38:	ldr	x0, [x0, #144]
  408a3c:	mov	x6, x0
  408a40:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408a44:	add	x5, x0, #0x168
  408a48:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408a4c:	add	x4, x0, #0x2e0
  408a50:	mov	w3, #0x2fe                 	// #766
  408a54:	mov	x2, x1
  408a58:	ldr	w1, [sp, #80]
  408a5c:	mov	w0, w7
  408a60:	bl	402640 <log_internal_realm@plt>
  408a64:	b	408a70 <x11_convert_to_vconsole+0x1b4>
  408a68:	ldr	w0, [sp, #80]
  408a6c:	cmp	w0, #0x0
  408a70:	ldr	x0, [sp, #56]
  408a74:	ldr	x0, [x0, #192]
  408a78:	ldr	x1, [sp, #112]
  408a7c:	bl	405cec <streq_ptr>
  408a80:	and	w0, w0, #0xff
  408a84:	eor	w0, w0, #0x1
  408a88:	and	w0, w0, #0xff
  408a8c:	cmp	w0, #0x0
  408a90:	b.eq	408ad0 <x11_convert_to_vconsole+0x214>  // b.none
  408a94:	ldr	x0, [sp, #56]
  408a98:	ldr	x0, [x0, #192]
  408a9c:	bl	402710 <free@plt>
  408aa0:	ldr	x1, [sp, #112]
  408aa4:	ldr	x0, [sp, #56]
  408aa8:	str	x1, [x0, #192]
  408aac:	str	xzr, [sp, #112]
  408ab0:	ldr	x0, [sp, #56]
  408ab4:	ldr	x0, [x0, #200]
  408ab8:	bl	405ca8 <mfree>
  408abc:	mov	x1, x0
  408ac0:	ldr	x0, [sp, #56]
  408ac4:	str	x1, [x0, #200]
  408ac8:	mov	w0, #0x1                   	// #1
  408acc:	strb	w0, [sp, #71]
  408ad0:	mov	w20, #0x1                   	// #1
  408ad4:	add	x0, sp, #0x70
  408ad8:	bl	405cc8 <freep>
  408adc:	cmp	w20, #0x1
  408ae0:	b.ne	408c04 <x11_convert_to_vconsole+0x348>  // b.any
  408ae4:	ldrb	w0, [sp, #71]
  408ae8:	cmp	w0, #0x0
  408aec:	b.eq	408b8c <x11_convert_to_vconsole+0x2d0>  // b.none
  408af0:	mov	w0, #0x6                   	// #6
  408af4:	str	w0, [sp, #100]
  408af8:	str	wzr, [sp, #104]
  408afc:	str	wzr, [sp, #108]
  408b00:	ldr	w0, [sp, #108]
  408b04:	bl	4027d0 <log_get_max_level_realm@plt>
  408b08:	mov	w1, w0
  408b0c:	ldr	w0, [sp, #100]
  408b10:	and	w0, w0, #0x7
  408b14:	cmp	w1, w0
  408b18:	b.lt	408b80 <x11_convert_to_vconsole+0x2c4>  // b.tstop
  408b1c:	ldr	w0, [sp, #108]
  408b20:	lsl	w1, w0, #10
  408b24:	ldr	w0, [sp, #100]
  408b28:	orr	w19, w1, w0
  408b2c:	adrp	x0, 409000 <_fini+0x328>
  408b30:	add	x20, x0, #0xc63
  408b34:	ldr	x0, [sp, #56]
  408b38:	ldr	x0, [x0, #192]
  408b3c:	bl	405d1c <strempty>
  408b40:	mov	x21, x0
  408b44:	ldr	x0, [sp, #56]
  408b48:	ldr	x0, [x0, #200]
  408b4c:	bl	405d1c <strempty>
  408b50:	mov	x7, x0
  408b54:	mov	x6, x21
  408b58:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408b5c:	add	x5, x0, #0x1a0
  408b60:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408b64:	add	x4, x0, #0x2e0
  408b68:	mov	w3, #0x309                 	// #777
  408b6c:	mov	x2, x20
  408b70:	ldr	w1, [sp, #104]
  408b74:	mov	w0, w19
  408b78:	bl	402640 <log_internal_realm@plt>
  408b7c:	b	408c00 <x11_convert_to_vconsole+0x344>
  408b80:	ldr	w0, [sp, #104]
  408b84:	cmp	w0, #0x0
  408b88:	b	408c00 <x11_convert_to_vconsole+0x344>
  408b8c:	mov	w0, #0x7                   	// #7
  408b90:	str	w0, [sp, #88]
  408b94:	str	wzr, [sp, #92]
  408b98:	str	wzr, [sp, #96]
  408b9c:	ldr	w0, [sp, #96]
  408ba0:	bl	4027d0 <log_get_max_level_realm@plt>
  408ba4:	mov	w1, w0
  408ba8:	ldr	w0, [sp, #88]
  408bac:	and	w0, w0, #0x7
  408bb0:	cmp	w1, w0
  408bb4:	b.lt	408bf8 <x11_convert_to_vconsole+0x33c>  // b.tstop
  408bb8:	ldr	w0, [sp, #96]
  408bbc:	lsl	w1, w0, #10
  408bc0:	ldr	w0, [sp, #88]
  408bc4:	orr	w6, w1, w0
  408bc8:	adrp	x0, 409000 <_fini+0x328>
  408bcc:	add	x1, x0, #0xc63
  408bd0:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408bd4:	add	x5, x0, #0x1d8
  408bd8:	adrp	x0, 40a000 <__PRETTY_FUNCTION__.11061+0x528>
  408bdc:	add	x4, x0, #0x2e0
  408be0:	mov	w3, #0x30c                 	// #780
  408be4:	mov	x2, x1
  408be8:	ldr	w1, [sp, #92]
  408bec:	mov	w0, w6
  408bf0:	bl	402640 <log_internal_realm@plt>
  408bf4:	b	408c00 <x11_convert_to_vconsole+0x344>
  408bf8:	ldr	w0, [sp, #92]
  408bfc:	cmp	w0, #0x0
  408c00:	ldrb	w19, [sp, #71]
  408c04:	mov	w1, w19
  408c08:	adrp	x0, 41b000 <__FRAME_END__+0x10194>
  408c0c:	add	x0, x0, #0xaa8
  408c10:	ldr	x2, [sp, #120]
  408c14:	ldr	x0, [x0]
  408c18:	eor	x0, x2, x0
  408c1c:	cmp	x0, #0x0
  408c20:	b.eq	408c28 <x11_convert_to_vconsole+0x36c>  // b.none
  408c24:	bl	402580 <__stack_chk_fail@plt>
  408c28:	mov	w0, w1
  408c2c:	ldp	x19, x20, [sp, #16]
  408c30:	ldr	x21, [sp, #32]
  408c34:	ldp	x29, x30, [sp], #128
  408c38:	ret
  408c3c:	nop

0000000000408c40 <__libc_csu_init>:
  408c40:	stp	x29, x30, [sp, #-64]!
  408c44:	mov	x29, sp
  408c48:	stp	x19, x20, [sp, #16]
  408c4c:	adrp	x20, 41b000 <__FRAME_END__+0x10194>
  408c50:	add	x20, x20, #0xaa0
  408c54:	stp	x21, x22, [sp, #32]
  408c58:	adrp	x21, 41b000 <__FRAME_END__+0x10194>
  408c5c:	add	x21, x21, #0xa98
  408c60:	sub	x20, x20, x21
  408c64:	mov	w22, w0
  408c68:	stp	x23, x24, [sp, #48]
  408c6c:	mov	x23, x1
  408c70:	mov	x24, x2
  408c74:	bl	4021c0 <_init>
  408c78:	cmp	xzr, x20, asr #3
  408c7c:	b.eq	408ca8 <__libc_csu_init+0x68>  // b.none
  408c80:	asr	x20, x20, #3
  408c84:	mov	x19, #0x0                   	// #0
  408c88:	ldr	x3, [x21, x19, lsl #3]
  408c8c:	mov	x2, x24
  408c90:	add	x19, x19, #0x1
  408c94:	mov	x1, x23
  408c98:	mov	w0, w22
  408c9c:	blr	x3
  408ca0:	cmp	x20, x19
  408ca4:	b.ne	408c88 <__libc_csu_init+0x48>  // b.any
  408ca8:	ldp	x19, x20, [sp, #16]
  408cac:	ldp	x21, x22, [sp, #32]
  408cb0:	ldp	x23, x24, [sp, #48]
  408cb4:	ldp	x29, x30, [sp], #64
  408cb8:	ret
  408cbc:	nop

0000000000408cc0 <__libc_csu_fini>:
  408cc0:	ret
  408cc4:	nop

0000000000408cc8 <stat64>:
  408cc8:	mov	x2, x1
  408ccc:	mov	x1, x0
  408cd0:	mov	w0, #0x0                   	// #0
  408cd4:	b	4025a0 <__xstat64@plt>

Disassembly of section .fini:

0000000000408cd8 <_fini>:
  408cd8:	stp	x29, x30, [sp, #-16]!
  408cdc:	mov	x29, sp
  408ce0:	ldp	x29, x30, [sp], #16
  408ce4:	ret
